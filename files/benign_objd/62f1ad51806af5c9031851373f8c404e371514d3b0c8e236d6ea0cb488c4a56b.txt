
62f1ad51806af5c9031851373f8c404e371514d3b0c8e236d6ea0cb488c4a56b.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x2a1d9]        # 0x14002b1e0
   140001007:	jmp    0x1400059c4
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x2a1d9]        # 0x14002b1f0
   140001017:	jmp    0x1400059c4
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x2a1d9]        # 0x14002b200
   140001027:	jmp    0x1400059c4
   14000102c:	lea    rcx,[rip+0x2a1dd]        # 0x14002b210
   140001033:	jmp    0x1400059c4
   140001038:	lea    rcx,[rip+0x2a1e1]        # 0x14002b220
   14000103f:	jmp    0x1400059c4
   140001044:	lea    rcx,[rip+0x2a1e5]        # 0x14002b230
   14000104b:	jmp    0x1400059c4
   140001050:	lea    rcx,[rip+0x2a1e9]        # 0x14002b240
   140001057:	jmp    0x1400059c4
   14000105c:	lea    rcx,[rip+0x2a1ed]        # 0x14002b250
   140001063:	jmp    0x1400059c4
   140001068:	lea    rcx,[rip+0x2a1f1]        # 0x14002b260
   14000106f:	jmp    0x1400059c4
   140001074:	int3   
   140001075:	int3   
   140001076:	int3   
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	mov    rax,rcx
   140001083:	ret    
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	mov    rax,rcx
   140001093:	ret    
   140001094:	int3   
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	mov    rax,QWORD PTR [rdx]
   1400010a3:	mov    QWORD PTR [rcx],rax
   1400010a6:	movzx  eax,BYTE PTR [r8]
   1400010aa:	mov    BYTE PTR [rcx+0x8],al
   1400010ad:	mov    rax,rcx
   1400010b0:	ret    
   1400010b1:	int3   
   1400010b2:	int3   
   1400010b3:	int3   
   1400010b4:	int3   
   1400010b5:	int3   
   1400010b6:	int3   
   1400010b7:	int3   
   1400010b8:	int3   
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	mov    rax,rcx
   1400010c3:	ret    
   1400010c4:	int3   
   1400010c5:	int3   
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	sub    rsp,0x28
   1400010d4:	call   0x140003e20
   1400010d9:	test   eax,eax
   1400010db:	sete   al
   1400010de:	add    rsp,0x28
   1400010e2:	ret    
   1400010e3:	int3   
   1400010e4:	int3   
   1400010e5:	int3   
   1400010e6:	int3   
   1400010e7:	int3   
   1400010e8:	int3   
   1400010e9:	int3   
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	sub    rsp,0x28
   1400010f4:	xor    eax,eax
   1400010f6:	test   rcx,rcx
   1400010f9:	je     0x14000110b
   1400010fb:	cmp    rcx,0xffffffffffffffff
   1400010ff:	ja     0x140001110
   140001101:	call   0x14000570c
   140001106:	test   rax,rax
   140001109:	je     0x140001110
   14000110b:	add    rsp,0x28
   14000110f:	ret    
   140001110:	call   0x140005470
   140001115:	int3   
   140001116:	int3   
   140001117:	int3   
   140001118:	int3   
   140001119:	int3   
   14000111a:	int3   
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	sub    rsp,0x28
   140001124:	xor    eax,eax
   140001126:	test   rcx,rcx
   140001129:	je     0x14000114c
   14000112b:	movabs rax,0x333333333333333
   140001135:	cmp    rcx,rax
   140001138:	ja     0x140001151
   14000113a:	lea    rcx,[rcx+rcx*4]
   14000113e:	shl    rcx,0x4
   140001142:	call   0x14000570c
   140001147:	test   rax,rax
   14000114a:	je     0x140001151
   14000114c:	add    rsp,0x28
   140001150:	ret    
   140001151:	call   0x140005470
   140001156:	int3   
   140001157:	int3   
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	sub    rsp,0x28
   140001164:	xor    eax,eax
   140001166:	test   rcx,rcx
   140001169:	je     0x14000118c
   14000116b:	movabs rax,0x1fffffffffffffff
   140001175:	cmp    rcx,rax
   140001178:	ja     0x140001191
   14000117a:	lea    rcx,[rcx*8+0x0]
   140001182:	call   0x14000570c
   140001187:	test   rax,rax
   14000118a:	je     0x140001191
   14000118c:	add    rsp,0x28
   140001190:	ret    
   140001191:	call   0x140005470
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	rex push rdi
   1400011a2:	sub    rsp,0x40
   1400011a6:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400011af:	mov    QWORD PTR [rsp+0x50],rbx
   1400011b4:	mov    rdi,r9
   1400011b7:	call   0x1400029e0
   1400011bc:	mov    rbx,rax
   1400011bf:	mov    QWORD PTR [rsp+0x20],rax
   1400011c4:	lea    rcx,[rax+0x10]
   1400011c8:	mov    QWORD PTR [rsp+0x30],rcx
   1400011cd:	mov    QWORD PTR [rsp+0x38],rcx
   1400011d2:	test   rcx,rcx
   1400011d5:	je     0x1400011e0
   1400011d7:	mov    rdx,rdi
   1400011da:	call   0x140002090
   1400011df:	nop
   1400011e0:	mov    rax,rbx
   1400011e3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400011e8:	add    rsp,0x40
   1400011ec:	pop    rdi
   1400011ed:	ret    
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	mov    QWORD PTR [rdx],r9
   1400011f3:	mov    rax,rdx
   1400011f6:	ret    
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	mov    rax,r8
   140001203:	cmp    rcx,rdx
   140001206:	je     0x140001224
   140001208:	nop    DWORD PTR [rax+rax*1+0x0]
   140001210:	mov    r8,QWORD PTR [rdx-0x8]
   140001214:	sub    rdx,0x8
   140001218:	sub    rax,0x8
   14000121c:	mov    QWORD PTR [rax],r8
   14000121f:	cmp    rdx,rcx
   140001222:	jne    0x140001210
   140001224:	ret    
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	cmp    rcx,rdx
   140001233:	je     0x140001254
   140001235:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001240:	mov    rax,QWORD PTR [rdx-0x8]
   140001244:	sub    rdx,0x8
   140001248:	sub    r8,0x8
   14000124c:	mov    QWORD PTR [r8],rax
   14000124f:	cmp    rdx,rcx
   140001252:	jne    0x140001240
   140001254:	mov    rax,r8
   140001257:	ret    
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	ret    0x0
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	ret    0x0
   140001273:	int3   
   140001274:	int3   
   140001275:	int3   
   140001276:	int3   
   140001277:	int3   
   140001278:	int3   
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	xor    r9d,r9d
   140001283:	mov    r10,rdx
   140001286:	sub    r10,rcx
   140001289:	add    r10,0x7
   14000128d:	shr    r10,0x3
   140001291:	cmp    rcx,rdx
   140001294:	cmova  r10,r9
   140001298:	test   r10,r10
   14000129b:	je     0x1400012b3
   14000129d:	nop    DWORD PTR [rax]
   1400012a0:	mov    rax,QWORD PTR [r8]
   1400012a3:	inc    r9
   1400012a6:	lea    rcx,[rcx+0x8]
   1400012aa:	mov    QWORD PTR [rcx-0x8],rax
   1400012ae:	cmp    r9,r10
   1400012b1:	jne    0x1400012a0
   1400012b3:	ret    
   1400012b4:	int3   
   1400012b5:	int3   
   1400012b6:	int3   
   1400012b7:	int3   
   1400012b8:	int3   
   1400012b9:	int3   
   1400012ba:	int3   
   1400012bb:	int3   
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	movabs rax,0x1fffffffffffffff
   1400012ca:	ret    
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	ret    0x0
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	test   r8,r8
   1400012e3:	je     0x1400012eb
   1400012e5:	mov    rax,QWORD PTR [r9]
   1400012e8:	mov    QWORD PTR [r8],rax
   1400012eb:	ret    
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	test   r8,r8
   1400012f3:	je     0x1400012fb
   1400012f5:	mov    rax,QWORD PTR [r9]
   1400012f8:	mov    QWORD PTR [r8],rax
   1400012fb:	ret    
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	mov    QWORD PTR [rsp+0x20],r9
   140001305:	mov    QWORD PTR [rsp+0x10],rdx
   14000130a:	mov    QWORD PTR [rsp+0x8],rcx
   14000130f:	push   rbx
   140001310:	push   rsi
   140001311:	push   rdi
   140001312:	push   r12
   140001314:	push   r13
   140001316:	push   r14
   140001318:	push   r15
   14000131a:	sub    rsp,0x30
   14000131e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001327:	mov    rdi,r9
   14000132a:	mov    r15,r8
   14000132d:	mov    rsi,rdx
   140001330:	mov    r13,rcx
   140001333:	mov    r14,QWORD PTR [r8+0x10]
   140001337:	mov    r10,QWORD PTR [r8+0x18]
   14000133b:	cmp    r10,0x10
   14000133f:	jb     0x140001346
   140001341:	mov    r9,QWORD PTR [r8]
   140001344:	jmp    0x140001349
   140001346:	mov    r9,r8
   140001349:	movabs rcx,0xcbf29ce484222325
   140001353:	xor    edx,edx
   140001355:	test   r14,r14
   140001358:	je     0x140001384
   14000135a:	movabs r8,0x100000001b3
   140001364:	nop    DWORD PTR [rax+0x0]
   140001368:	nop    DWORD PTR [rax+rax*1+0x0]
   140001370:	movzx  eax,BYTE PTR [rdx+r9*1]
   140001375:	xor    rcx,rax
   140001378:	imul   rcx,r8
   14000137c:	inc    rdx
   14000137f:	cmp    rdx,r14
   140001382:	jb     0x140001370
   140001384:	mov    rax,rcx
   140001387:	shr    rax,0x20
   14000138b:	xor    rcx,rax
   14000138e:	mov    rdx,QWORD PTR [r13+0x28]
   140001392:	mov    r12,rdx
   140001395:	and    r12,rcx
   140001398:	cmp    QWORD PTR [r13+0x30],r12
   14000139c:	ja     0x1400013ab
   14000139e:	shr    rdx,1
   1400013a1:	or     rax,0xffffffffffffffff
   1400013a5:	sub    rax,rdx
   1400013a8:	add    r12,rax
   1400013ab:	mov    rbx,QWORD PTR [r13+0x0]
   1400013af:	mov    r9,QWORD PTR [r13+0x10]
   1400013b3:	mov    r8,r12
   1400013b6:	shl    r8,0x4
   1400013ba:	mov    QWORD PTR [rsp+0x80],r8
   1400013c2:	mov    rax,QWORD PTR [r9+r8*1]
   1400013c6:	cmp    rbx,rax
   1400013c9:	je     0x140001497
   1400013cf:	mov    rbx,QWORD PTR [r9+r8*1+0x8]
   1400013d4:	mov    rbx,QWORD PTR [rbx]
   1400013d7:	cmp    rbx,rax
   1400013da:	je     0x140001497
   1400013e0:	add    r12,r12
   1400013e3:	mov    rbx,QWORD PTR [rbx+0x8]
   1400013e7:	lea    rdx,[rbx+0x10]
   1400013eb:	mov    rsi,QWORD PTR [rdx+0x10]
   1400013ef:	cmp    QWORD PTR [rdx+0x18],0x10
   1400013f4:	jb     0x1400013f9
   1400013f6:	mov    rdx,QWORD PTR [rdx]
   1400013f9:	cmp    r10,0x10
   1400013fd:	jb     0x140001404
   1400013ff:	mov    rcx,QWORD PTR [r15]
   140001402:	jmp    0x140001407
   140001404:	mov    rcx,r15
   140001407:	mov    r8,rsi
   14000140a:	cmp    r14,rsi
   14000140d:	cmovb  r8,r14
   140001411:	test   r8,r8
   140001414:	jne    0x14000141a
   140001416:	xor    eax,eax
   140001418:	jmp    0x140001427
   14000141a:	call   0x140006e90
   14000141f:	mov    r9,QWORD PTR [r13+0x10]
   140001423:	mov    r10,QWORD PTR [r15+0x18]
   140001427:	cdqe   
   140001429:	test   rax,rax
   14000142c:	jne    0x140001440
   14000142e:	cmp    r14,rsi
   140001431:	jae    0x140001438
   140001433:	or     eax,0xffffffff
   140001436:	jmp    0x140001440
   140001438:	xor    eax,eax
   14000143a:	cmp    r14,rsi
   14000143d:	setne  al
   140001440:	test   eax,eax
   140001442:	je     0x14000144c
   140001444:	cmp    rbx,QWORD PTR [r9+r12*8]
   140001448:	jne    0x1400013e3
   14000144a:	jmp    0x14000148a
   14000144c:	lea    rcx,[rbx+0x10]
   140001450:	mov    rdx,r15
   140001453:	call   0x140003e20
   140001458:	test   eax,eax
   14000145a:	je     0x140001469
   14000145c:	mov    rbx,QWORD PTR [rbx]
   14000145f:	mov    rdi,QWORD PTR [rsp+0x88]
   140001467:	jmp    0x14000148a
   140001469:	mov    rdx,QWORD PTR [rsp+0x88]
   140001471:	mov    rcx,r13
   140001474:	call   0x140002ce0
   140001479:	mov    rax,QWORD PTR [rsp+0x78]
   14000147e:	mov    QWORD PTR [rax],rbx
   140001481:	mov    BYTE PTR [rax+0x8],0x0
   140001485:	jmp    0x140001528
   14000148a:	mov    rsi,QWORD PTR [rsp+0x78]
   14000148f:	mov    r8,QWORD PTR [rsp+0x80]
   140001497:	mov    rax,QWORD PTR [rdi]
   14000149a:	cmp    rbx,rax
   14000149d:	je     0x1400014cc
   14000149f:	mov    rcx,QWORD PTR [rdi+0x8]
   1400014a3:	mov    QWORD PTR [rcx],rax
   1400014a6:	mov    rcx,QWORD PTR [rax+0x8]
   1400014aa:	mov    QWORD PTR [rcx],rbx
   1400014ad:	mov    rcx,QWORD PTR [rbx+0x8]
   1400014b1:	mov    QWORD PTR [rcx],rdi
   1400014b4:	mov    rdx,QWORD PTR [rbx+0x8]
   1400014b8:	mov    rcx,QWORD PTR [rax+0x8]
   1400014bc:	mov    QWORD PTR [rbx+0x8],rcx
   1400014c0:	mov    rcx,QWORD PTR [rdi+0x8]
   1400014c4:	mov    QWORD PTR [rax+0x8],rcx
   1400014c8:	mov    QWORD PTR [rdi+0x8],rdx
   1400014cc:	mov    rdx,QWORD PTR [r13+0x10]
   1400014d0:	add    rdx,r8
   1400014d3:	mov    rax,QWORD PTR [rdx]
   1400014d6:	cmp    rax,QWORD PTR [r13+0x0]
   1400014da:	jne    0x1400014ea
   1400014dc:	mov    QWORD PTR [rdx],rdi
   1400014df:	mov    rax,QWORD PTR [r13+0x10]
   1400014e3:	mov    QWORD PTR [rax+r8*1+0x8],rdi
   1400014e8:	jmp    0x140001516
   1400014ea:	cmp    rax,rbx
   1400014ed:	jne    0x1400014f4
   1400014ef:	mov    QWORD PTR [rdx],rdi
   1400014f2:	jmp    0x140001516
   1400014f4:	mov    rax,QWORD PTR [rdx+0x8]
   1400014f8:	mov    rcx,QWORD PTR [rax]
   1400014fb:	mov    QWORD PTR [rdx+0x8],rcx
   1400014ff:	cmp    rcx,rdi
   140001502:	je     0x140001516
   140001504:	mov    rdx,QWORD PTR [r13+0x10]
   140001508:	mov    rax,QWORD PTR [rdx+r8*1+0x8]
   14000150d:	mov    rcx,QWORD PTR [rax+0x8]
   140001511:	mov    QWORD PTR [rdx+r8*1+0x8],rcx
   140001516:	mov    rcx,r13
   140001519:	call   0x140002a40
   14000151e:	mov    QWORD PTR [rsi],rdi
   140001521:	mov    BYTE PTR [rsi+0x8],0x1
   140001525:	mov    rax,rsi
   140001528:	add    rsp,0x30
   14000152c:	pop    r15
   14000152e:	pop    r14
   140001530:	pop    r13
   140001532:	pop    r12
   140001534:	pop    rdi
   140001535:	pop    rsi
   140001536:	pop    rbx
   140001537:	ret    
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	mov    QWORD PTR [rsp+0x8],rbx
   140001545:	push   rdi
   140001546:	sub    rsp,0x20
   14000154a:	mov    r9,r8
   14000154d:	mov    r8,QWORD PTR [rdx+0x8]
   140001551:	mov    rbx,rdx
   140001554:	mov    rdi,rcx
   140001557:	call   0x1400011a0
   14000155c:	movabs rdx,0x333333333333332
   140001566:	mov    r8,rax
   140001569:	mov    rax,QWORD PTR [rdi+0x8]
   14000156d:	sub    rdx,rax
   140001570:	cmp    rdx,0x1
   140001574:	jb     0x140001593
   140001576:	inc    rax
   140001579:	mov    QWORD PTR [rdi+0x8],rax
   14000157d:	mov    QWORD PTR [rbx+0x8],r8
   140001581:	mov    rax,QWORD PTR [r8+0x8]
   140001585:	mov    rbx,QWORD PTR [rsp+0x30]
   14000158a:	mov    QWORD PTR [rax],r8
   14000158d:	add    rsp,0x20
   140001591:	pop    rdi
   140001592:	ret    
   140001593:	lea    rcx,[rip+0x2b406]        # 0x14002c9a0
   14000159a:	call   0x140005518
   14000159f:	int3   
   1400015a0:	mov    rax,rcx
   1400015a3:	ret    
   1400015a4:	int3   
   1400015a5:	int3   
   1400015a6:	int3   
   1400015a7:	int3   
   1400015a8:	int3   
   1400015a9:	int3   
   1400015aa:	int3   
   1400015ab:	int3   
   1400015ac:	int3   
   1400015ad:	int3   
   1400015ae:	int3   
   1400015af:	int3   
   1400015b0:	movzx  eax,BYTE PTR [rsp+0x18]
   1400015b5:	ret    
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	mov    QWORD PTR [rcx],rdx
   1400015c3:	mov    rax,rcx
   1400015c6:	ret    
   1400015c7:	int3   
   1400015c8:	int3   
   1400015c9:	int3   
   1400015ca:	int3   
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	rex push rbx
   1400015d2:	sub    rsp,0x30
   1400015d6:	movzx  eax,BYTE PTR [rsp+0x58]
   1400015db:	mov    r10,r9
   1400015de:	mov    r11,r8
   1400015e1:	mov    rcx,rdx
   1400015e4:	mov    BYTE PTR [rsp+0x28],al
   1400015e8:	lea    r9,[rsp+0x58]
   1400015ed:	mov    r8,r10
   1400015f0:	mov    rdx,r11
   1400015f3:	mov    QWORD PTR [rsp+0x20],0x0
   1400015fc:	call   0x140001670
   140001601:	add    rsp,0x30
   140001605:	pop    rbx
   140001606:	ret    
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    rax,rcx
   140001613:	ret    
   140001614:	int3   
   140001615:	int3   
   140001616:	int3   
   140001617:	int3   
   140001618:	int3   
   140001619:	int3   
   14000161a:	int3   
   14000161b:	int3   
   14000161c:	int3   
   14000161d:	int3   
   14000161e:	int3   
   14000161f:	int3   
   140001620:	sub    rsp,0x38
   140001624:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000162d:	test   rdx,rdx
   140001630:	je     0x140001646
   140001632:	test   rcx,rcx
   140001635:	je     0x14000163d
   140001637:	mov    rax,QWORD PTR [r8]
   14000163a:	mov    QWORD PTR [rcx],rax
   14000163d:	add    rcx,0x8
   140001641:	dec    rdx
   140001644:	jne    0x140001632
   140001646:	add    rsp,0x38
   14000164a:	ret    
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	sub    rsp,0x48
   140001654:	movzx  eax,BYTE PTR [rsp+0x30]
   140001659:	mov    BYTE PTR [rsp+0x28],al
   14000165d:	mov    QWORD PTR [rsp+0x20],0x0
   140001666:	call   0x140001670
   14000166b:	add    rsp,0x48
   14000166f:	ret    
   140001670:	sub    rsp,0x38
   140001674:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000167d:	xor    r9d,r9d
   140001680:	mov    r10,rdx
   140001683:	sub    r10,rcx
   140001686:	add    r10,0x7
   14000168a:	shr    r10,0x3
   14000168e:	cmp    rcx,rdx
   140001691:	cmova  r10,r9
   140001695:	test   r10,r10
   140001698:	je     0x1400016b8
   14000169a:	sub    rcx,r8
   14000169d:	nop    DWORD PTR [rax]
   1400016a0:	test   r8,r8
   1400016a3:	je     0x1400016ac
   1400016a5:	mov    rax,QWORD PTR [rcx+r8*1]
   1400016a9:	mov    QWORD PTR [r8],rax
   1400016ac:	add    r8,0x8
   1400016b0:	inc    r9
   1400016b3:	cmp    r9,r10
   1400016b6:	jne    0x1400016a0
   1400016b8:	mov    rax,r8
   1400016bb:	add    rsp,0x38
   1400016bf:	ret    
   1400016c0:	sub    rsp,0x48
   1400016c4:	movzx  eax,BYTE PTR [rsp+0x30]
   1400016c9:	mov    BYTE PTR [rsp+0x28],al
   1400016cd:	mov    QWORD PTR [rsp+0x20],0x0
   1400016d6:	call   0x140001620
   1400016db:	add    rsp,0x48
   1400016df:	ret    
   1400016e0:	sub    rsp,0x38
   1400016e4:	movzx  eax,BYTE PTR [rsp+0x50]
   1400016e9:	mov    BYTE PTR [rsp+0x28],al
   1400016ed:	mov    QWORD PTR [rsp+0x20],0x0
   1400016f6:	call   0x140001670
   1400016fb:	add    rsp,0x38
   1400016ff:	ret    
   140001700:	xor    eax,eax
   140001702:	ret    
   140001703:	int3   
   140001704:	int3   
   140001705:	int3   
   140001706:	int3   
   140001707:	int3   
   140001708:	int3   
   140001709:	int3   
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	mov    rax,rcx
   140001713:	ret    
   140001714:	int3   
   140001715:	int3   
   140001716:	int3   
   140001717:	int3   
   140001718:	int3   
   140001719:	int3   
   14000171a:	int3   
   14000171b:	int3   
   14000171c:	int3   
   14000171d:	int3   
   14000171e:	int3   
   14000171f:	int3   
   140001720:	mov    rax,rcx
   140001723:	ret    
   140001724:	int3   
   140001725:	int3   
   140001726:	int3   
   140001727:	int3   
   140001728:	int3   
   140001729:	int3   
   14000172a:	int3   
   14000172b:	int3   
   14000172c:	int3   
   14000172d:	int3   
   14000172e:	int3   
   14000172f:	int3   
   140001730:	mov    rax,rcx
   140001733:	ret    
   140001734:	int3   
   140001735:	int3   
   140001736:	int3   
   140001737:	int3   
   140001738:	int3   
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	mov    rax,rcx
   140001743:	ret    
   140001744:	int3   
   140001745:	int3   
   140001746:	int3   
   140001747:	int3   
   140001748:	int3   
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	mov    rax,rcx
   140001753:	ret    
   140001754:	int3   
   140001755:	int3   
   140001756:	int3   
   140001757:	int3   
   140001758:	int3   
   140001759:	int3   
   14000175a:	int3   
   14000175b:	int3   
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	test   rdx,rdx
   140001763:	je     0x14000176b
   140001765:	mov    rax,QWORD PTR [r8]
   140001768:	mov    QWORD PTR [rdx],rax
   14000176b:	ret    
   14000176c:	int3   
   14000176d:	int3   
   14000176e:	int3   
   14000176f:	int3   
   140001770:	test   rdx,rdx
   140001773:	je     0x14000177b
   140001775:	mov    rax,QWORD PTR [r8]
   140001778:	mov    QWORD PTR [rdx],rax
   14000177b:	ret    
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	test   rdx,rdx
   140001783:	je     0x14000178b
   140001785:	mov    rax,QWORD PTR [r8]
   140001788:	mov    QWORD PTR [rdx],rax
   14000178b:	ret    
   14000178c:	int3   
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	test   rdx,rdx
   140001793:	je     0x14000179b
   140001795:	mov    rax,QWORD PTR [r8]
   140001798:	mov    QWORD PTR [rdx],rax
   14000179b:	ret    
   14000179c:	int3   
   14000179d:	int3   
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	test   rdx,rdx
   1400017a3:	je     0x1400017ab
   1400017a5:	mov    rax,QWORD PTR [r8]
   1400017a8:	mov    QWORD PTR [rdx],rax
   1400017ab:	ret    
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	test   rdx,rdx
   1400017b3:	je     0x1400017bb
   1400017b5:	mov    rax,QWORD PTR [r8]
   1400017b8:	mov    QWORD PTR [rdx],rax
   1400017bb:	ret    
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400017c5:	sub    rsp,0x38
   1400017c9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400017d2:	mov    rax,rdx
   1400017d5:	mov    QWORD PTR [rsp+0x58],rdx
   1400017da:	test   rdx,rdx
   1400017dd:	je     0x1400017eb
   1400017df:	mov    rdx,r8
   1400017e2:	mov    rcx,rax
   1400017e5:	call   0x140002090
   1400017ea:	nop
   1400017eb:	add    rsp,0x38
   1400017ef:	ret    
   1400017f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400017f5:	sub    rsp,0x38
   1400017f9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001802:	mov    rax,rdx
   140001805:	mov    QWORD PTR [rsp+0x58],rdx
   14000180a:	test   rdx,rdx
   14000180d:	je     0x14000181b
   14000180f:	mov    rdx,r8
   140001812:	mov    rcx,rax
   140001815:	call   0x140002090
   14000181a:	nop
   14000181b:	add    rsp,0x38
   14000181f:	ret    
   140001820:	mov    QWORD PTR [rsp+0x10],rdx
   140001825:	sub    rsp,0x38
   140001829:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001832:	mov    rax,rdx
   140001835:	mov    QWORD PTR [rsp+0x58],rdx
   14000183a:	test   rdx,rdx
   14000183d:	je     0x14000184b
   14000183f:	mov    rdx,r8
   140001842:	mov    rcx,rax
   140001845:	call   0x140002090
   14000184a:	nop
   14000184b:	add    rsp,0x38
   14000184f:	ret    
   140001850:	test   rdx,rdx
   140001853:	je     0x14000185b
   140001855:	mov    rax,QWORD PTR [r8]
   140001858:	mov    QWORD PTR [rdx],rax
   14000185b:	ret    
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	test   rdx,rdx
   140001863:	je     0x14000186b
   140001865:	mov    rax,QWORD PTR [r8]
   140001868:	mov    QWORD PTR [rdx],rax
   14000186b:	ret    
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	test   rdx,rdx
   140001873:	je     0x14000187b
   140001875:	mov    rax,QWORD PTR [r8]
   140001878:	mov    QWORD PTR [rdx],rax
   14000187b:	ret    
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	test   rdx,rdx
   140001883:	je     0x14000188b
   140001885:	mov    rax,QWORD PTR [r8]
   140001888:	mov    QWORD PTR [rdx],rax
   14000188b:	ret    
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	test   rdx,rdx
   140001893:	je     0x14000189b
   140001895:	mov    rax,QWORD PTR [r8]
   140001898:	mov    QWORD PTR [rdx],rax
   14000189b:	ret    
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	test   rdx,rdx
   1400018a3:	je     0x1400018ab
   1400018a5:	mov    rax,QWORD PTR [r8]
   1400018a8:	mov    QWORD PTR [rdx],rax
   1400018ab:	ret    
   1400018ac:	int3   
   1400018ad:	int3   
   1400018ae:	int3   
   1400018af:	int3   
   1400018b0:	test   rdx,rdx
   1400018b3:	je     0x1400018bb
   1400018b5:	mov    rax,QWORD PTR [r8]
   1400018b8:	mov    QWORD PTR [rdx],rax
   1400018bb:	ret    
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	test   rdx,rdx
   1400018c3:	je     0x1400018cb
   1400018c5:	mov    rax,QWORD PTR [r8]
   1400018c8:	mov    QWORD PTR [rdx],rax
   1400018cb:	ret    
   1400018cc:	int3   
   1400018cd:	int3   
   1400018ce:	int3   
   1400018cf:	int3   
   1400018d0:	test   rdx,rdx
   1400018d3:	je     0x1400018db
   1400018d5:	mov    rax,QWORD PTR [r8]
   1400018d8:	mov    QWORD PTR [rdx],rax
   1400018db:	ret    
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	ret    0x0
   1400018e3:	int3   
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	ret    0x0
   1400018f3:	int3   
   1400018f4:	int3   
   1400018f5:	int3   
   1400018f6:	int3   
   1400018f7:	int3   
   1400018f8:	int3   
   1400018f9:	int3   
   1400018fa:	int3   
   1400018fb:	int3   
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	ret    0x0
   140001903:	int3   
   140001904:	int3   
   140001905:	int3   
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	ret    0x0
   140001913:	int3   
   140001914:	int3   
   140001915:	int3   
   140001916:	int3   
   140001917:	int3   
   140001918:	int3   
   140001919:	int3   
   14000191a:	int3   
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	ret    0x0
   140001923:	int3   
   140001924:	int3   
   140001925:	int3   
   140001926:	int3   
   140001927:	int3   
   140001928:	int3   
   140001929:	int3   
   14000192a:	int3   
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	ret    0x0
   140001933:	int3   
   140001934:	int3   
   140001935:	int3   
   140001936:	int3   
   140001937:	int3   
   140001938:	int3   
   140001939:	int3   
   14000193a:	int3   
   14000193b:	int3   
   14000193c:	int3   
   14000193d:	int3   
   14000193e:	int3   
   14000193f:	int3   
   140001940:	rex push rbx
   140001942:	sub    rsp,0x20
   140001946:	cmp    QWORD PTR [rdx+0x38],0x10
   14000194b:	mov    rbx,rdx
   14000194e:	jb     0x140001959
   140001950:	mov    rcx,QWORD PTR [rdx+0x20]
   140001954:	call   0x140005778
   140001959:	mov    QWORD PTR [rbx+0x38],0xf
   140001961:	mov    QWORD PTR [rbx+0x30],0x0
   140001969:	mov    BYTE PTR [rbx+0x20],0x0
   14000196d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001972:	jb     0x14000197c
   140001974:	mov    rcx,QWORD PTR [rbx]
   140001977:	call   0x140005778
   14000197c:	mov    QWORD PTR [rbx+0x18],0xf
   140001984:	mov    QWORD PTR [rbx+0x10],0x0
   14000198c:	mov    BYTE PTR [rbx],0x0
   14000198f:	add    rsp,0x20
   140001993:	pop    rbx
   140001994:	ret    
   140001995:	int3   
   140001996:	int3   
   140001997:	int3   
   140001998:	int3   
   140001999:	int3   
   14000199a:	int3   
   14000199b:	int3   
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	rex push rbx
   1400019a2:	sub    rsp,0x20
   1400019a6:	cmp    QWORD PTR [rdx+0x38],0x10
   1400019ab:	mov    rbx,rdx
   1400019ae:	jb     0x1400019b9
   1400019b0:	mov    rcx,QWORD PTR [rdx+0x20]
   1400019b4:	call   0x140005778
   1400019b9:	mov    QWORD PTR [rbx+0x38],0xf
   1400019c1:	mov    QWORD PTR [rbx+0x30],0x0
   1400019c9:	mov    BYTE PTR [rbx+0x20],0x0
   1400019cd:	cmp    QWORD PTR [rbx+0x18],0x10
   1400019d2:	jb     0x1400019dc
   1400019d4:	mov    rcx,QWORD PTR [rbx]
   1400019d7:	call   0x140005778
   1400019dc:	mov    QWORD PTR [rbx+0x18],0xf
   1400019e4:	mov    QWORD PTR [rbx+0x10],0x0
   1400019ec:	mov    BYTE PTR [rbx],0x0
   1400019ef:	add    rsp,0x20
   1400019f3:	pop    rbx
   1400019f4:	ret    
   1400019f5:	int3   
   1400019f6:	int3   
   1400019f7:	int3   
   1400019f8:	int3   
   1400019f9:	int3   
   1400019fa:	int3   
   1400019fb:	int3   
   1400019fc:	int3   
   1400019fd:	int3   
   1400019fe:	int3   
   1400019ff:	int3   
   140001a00:	rex push rbx
   140001a02:	sub    rsp,0x20
   140001a06:	cmp    QWORD PTR [rdx+0x38],0x10
   140001a0b:	mov    rbx,rdx
   140001a0e:	jb     0x140001a19
   140001a10:	mov    rcx,QWORD PTR [rdx+0x20]
   140001a14:	call   0x140005778
   140001a19:	mov    QWORD PTR [rbx+0x38],0xf
   140001a21:	mov    QWORD PTR [rbx+0x30],0x0
   140001a29:	mov    BYTE PTR [rbx+0x20],0x0
   140001a2d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001a32:	jb     0x140001a3c
   140001a34:	mov    rcx,QWORD PTR [rbx]
   140001a37:	call   0x140005778
   140001a3c:	mov    QWORD PTR [rbx+0x18],0xf
   140001a44:	mov    QWORD PTR [rbx+0x10],0x0
   140001a4c:	mov    BYTE PTR [rbx],0x0
   140001a4f:	add    rsp,0x20
   140001a53:	pop    rbx
   140001a54:	ret    
   140001a55:	int3   
   140001a56:	int3   
   140001a57:	int3   
   140001a58:	int3   
   140001a59:	int3   
   140001a5a:	int3   
   140001a5b:	int3   
   140001a5c:	int3   
   140001a5d:	int3   
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	ret    0x0
   140001a63:	int3   
   140001a64:	int3   
   140001a65:	int3   
   140001a66:	int3   
   140001a67:	int3   
   140001a68:	int3   
   140001a69:	int3   
   140001a6a:	int3   
   140001a6b:	int3   
   140001a6c:	int3   
   140001a6d:	int3   
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	ret    0x0
   140001a73:	int3   
   140001a74:	int3   
   140001a75:	int3   
   140001a76:	int3   
   140001a77:	int3   
   140001a78:	int3   
   140001a79:	int3   
   140001a7a:	int3   
   140001a7b:	int3   
   140001a7c:	int3   
   140001a7d:	int3   
   140001a7e:	int3   
   140001a7f:	int3   
   140001a80:	ret    0x0
   140001a83:	int3   
   140001a84:	int3   
   140001a85:	int3   
   140001a86:	int3   
   140001a87:	int3   
   140001a88:	int3   
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	int3   
   140001a8d:	int3   
   140001a8e:	int3   
   140001a8f:	int3   
   140001a90:	ret    0x0
   140001a93:	int3   
   140001a94:	int3   
   140001a95:	int3   
   140001a96:	int3   
   140001a97:	int3   
   140001a98:	int3   
   140001a99:	int3   
   140001a9a:	int3   
   140001a9b:	int3   
   140001a9c:	int3   
   140001a9d:	int3   
   140001a9e:	int3   
   140001a9f:	int3   
   140001aa0:	ret    0x0
   140001aa3:	int3   
   140001aa4:	int3   
   140001aa5:	int3   
   140001aa6:	int3   
   140001aa7:	int3   
   140001aa8:	int3   
   140001aa9:	int3   
   140001aaa:	int3   
   140001aab:	int3   
   140001aac:	int3   
   140001aad:	int3   
   140001aae:	int3   
   140001aaf:	int3   
   140001ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ab5:	mov    QWORD PTR [rsp+0x10],rsi
   140001aba:	push   rdi
   140001abb:	sub    rsp,0x20
   140001abf:	mov    rax,QWORD PTR [rcx]
   140001ac2:	mov    r9,r8
   140001ac5:	mov    rsi,rdx
   140001ac8:	mov    rdi,QWORD PTR [rax]
   140001acb:	mov    rbx,rcx
   140001ace:	mov    r8,QWORD PTR [rdi+0x8]
   140001ad2:	mov    rdx,rdi
   140001ad5:	call   0x1400011a0
   140001ada:	movabs r8,0x333333333333332
   140001ae4:	mov    rcx,rax
   140001ae7:	mov    rax,QWORD PTR [rbx+0x8]
   140001aeb:	sub    r8,rax
   140001aee:	cmp    r8,0x1
   140001af2:	jb     0x140001b2e
   140001af4:	inc    rax
   140001af7:	mov    rdx,rsi
   140001afa:	mov    QWORD PTR [rbx+0x8],rax
   140001afe:	mov    QWORD PTR [rdi+0x8],rcx
   140001b02:	mov    rax,QWORD PTR [rcx+0x8]
   140001b06:	mov    QWORD PTR [rax],rcx
   140001b09:	mov    r9,QWORD PTR [rbx]
   140001b0c:	mov    rcx,rbx
   140001b0f:	mov    r9,QWORD PTR [r9]
   140001b12:	lea    r8,[r9+0x10]
   140001b16:	call   0x140001300
   140001b1b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b20:	mov    rax,rsi
   140001b23:	mov    rsi,QWORD PTR [rsp+0x38]
   140001b28:	add    rsp,0x20
   140001b2c:	pop    rdi
   140001b2d:	ret    
   140001b2e:	lea    rcx,[rip+0x2ae6b]        # 0x14002c9a0
   140001b35:	call   0x140005518
   140001b3a:	int3   
   140001b3b:	int3   
   140001b3c:	int3   
   140001b3d:	int3   
   140001b3e:	int3   
   140001b3f:	int3   
   140001b40:	mov    QWORD PTR [rsp+0x8],rbx
   140001b45:	push   rdi
   140001b46:	sub    rsp,0x20
   140001b4a:	mov    rax,QWORD PTR [rcx]
   140001b4d:	mov    r9,rdx
   140001b50:	mov    rbx,rcx
   140001b53:	mov    rdi,QWORD PTR [rax]
   140001b56:	mov    rdx,rdi
   140001b59:	mov    r8,QWORD PTR [rdi+0x8]
   140001b5d:	call   0x1400011a0
   140001b62:	movabs rdx,0x333333333333332
   140001b6c:	mov    r8,rax
   140001b6f:	mov    rax,QWORD PTR [rbx+0x8]
   140001b73:	sub    rdx,rax
   140001b76:	cmp    rdx,0x1
   140001b7a:	jb     0x140001b99
   140001b7c:	inc    rax
   140001b7f:	mov    QWORD PTR [rbx+0x8],rax
   140001b83:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b88:	mov    QWORD PTR [rdi+0x8],r8
   140001b8c:	mov    rax,QWORD PTR [r8+0x8]
   140001b90:	mov    QWORD PTR [rax],r8
   140001b93:	add    rsp,0x20
   140001b97:	pop    rdi
   140001b98:	ret    
   140001b99:	lea    rcx,[rip+0x2ae00]        # 0x14002c9a0
   140001ba0:	call   0x140005518
   140001ba5:	int3   
   140001ba6:	int3   
   140001ba7:	int3   
   140001ba8:	int3   
   140001ba9:	int3   
   140001baa:	int3   
   140001bab:	int3   
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	xor    r9d,r9d
   140001bb3:	mov    r10,rdx
   140001bb6:	sub    r10,rcx
   140001bb9:	add    r10,0x7
   140001bbd:	shr    r10,0x3
   140001bc1:	cmp    rcx,rdx
   140001bc4:	cmova  r10,r9
   140001bc8:	test   r10,r10
   140001bcb:	je     0x140001be3
   140001bcd:	nop    DWORD PTR [rax]
   140001bd0:	mov    rax,QWORD PTR [r8]
   140001bd3:	inc    r9
   140001bd6:	lea    rcx,[rcx+0x8]
   140001bda:	mov    QWORD PTR [rcx-0x8],rax
   140001bde:	cmp    r9,r10
   140001be1:	jne    0x140001bd0
   140001be3:	ret    
   140001be4:	int3   
   140001be5:	int3   
   140001be6:	int3   
   140001be7:	int3   
   140001be8:	int3   
   140001be9:	int3   
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	mov    rax,rcx
   140001bf3:	ret    
   140001bf4:	int3   
   140001bf5:	int3   
   140001bf6:	int3   
   140001bf7:	int3   
   140001bf8:	int3   
   140001bf9:	int3   
   140001bfa:	int3   
   140001bfb:	int3   
   140001bfc:	int3   
   140001bfd:	int3   
   140001bfe:	int3   
   140001bff:	int3   
   140001c00:	mov    rax,rcx
   140001c03:	ret    
   140001c04:	int3   
   140001c05:	int3   
   140001c06:	int3   
   140001c07:	int3   
   140001c08:	int3   
   140001c09:	int3   
   140001c0a:	int3   
   140001c0b:	int3   
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	mov    rax,rcx
   140001c13:	ret    
   140001c14:	int3   
   140001c15:	int3   
   140001c16:	int3   
   140001c17:	int3   
   140001c18:	int3   
   140001c19:	int3   
   140001c1a:	int3   
   140001c1b:	int3   
   140001c1c:	int3   
   140001c1d:	int3   
   140001c1e:	int3   
   140001c1f:	int3   
   140001c20:	mov    rax,rcx
   140001c23:	ret    
   140001c24:	int3   
   140001c25:	int3   
   140001c26:	int3   
   140001c27:	int3   
   140001c28:	int3   
   140001c29:	int3   
   140001c2a:	int3   
   140001c2b:	int3   
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	mov    rax,rcx
   140001c33:	ret    
   140001c34:	int3   
   140001c35:	int3   
   140001c36:	int3   
   140001c37:	int3   
   140001c38:	int3   
   140001c39:	int3   
   140001c3a:	int3   
   140001c3b:	int3   
   140001c3c:	int3   
   140001c3d:	int3   
   140001c3e:	int3   
   140001c3f:	int3   
   140001c40:	mov    rax,rcx
   140001c43:	ret    
   140001c44:	int3   
   140001c45:	int3   
   140001c46:	int3   
   140001c47:	int3   
   140001c48:	int3   
   140001c49:	int3   
   140001c4a:	int3   
   140001c4b:	int3   
   140001c4c:	int3   
   140001c4d:	int3   
   140001c4e:	int3   
   140001c4f:	int3   
   140001c50:	mov    rax,rcx
   140001c53:	ret    
   140001c54:	int3   
   140001c55:	int3   
   140001c56:	int3   
   140001c57:	int3   
   140001c58:	int3   
   140001c59:	int3   
   140001c5a:	int3   
   140001c5b:	int3   
   140001c5c:	int3   
   140001c5d:	int3   
   140001c5e:	int3   
   140001c5f:	int3   
   140001c60:	mov    rax,rcx
   140001c63:	ret    
   140001c64:	int3   
   140001c65:	int3   
   140001c66:	int3   
   140001c67:	int3   
   140001c68:	int3   
   140001c69:	int3   
   140001c6a:	int3   
   140001c6b:	int3   
   140001c6c:	int3   
   140001c6d:	int3   
   140001c6e:	int3   
   140001c6f:	int3   
   140001c70:	cmp    rdx,r8
   140001c73:	je     0x140001d16
   140001c79:	mov    QWORD PTR [rsp+0x18],r8
   140001c7e:	mov    QWORD PTR [rsp+0x10],rdx
   140001c83:	push   rbx
   140001c84:	sub    rsp,0x30
   140001c88:	mov    QWORD PTR [rsp+0x40],rsi
   140001c8d:	mov    rbx,rcx
   140001c90:	mov    QWORD PTR [rsp+0x58],rdi
   140001c95:	movabs rsi,0x333333333333332
   140001c9f:	nop
   140001ca0:	mov    rax,QWORD PTR [rbx]
   140001ca3:	lea    r9,[rdx+0x10]
   140001ca7:	mov    rcx,rbx
   140001caa:	mov    rdi,QWORD PTR [rax]
   140001cad:	mov    rdx,rdi
   140001cb0:	mov    r8,QWORD PTR [rdi+0x8]
   140001cb4:	call   0x1400011a0
   140001cb9:	mov    rdx,QWORD PTR [rbx+0x8]
   140001cbd:	mov    rcx,rsi
   140001cc0:	sub    rcx,rdx
   140001cc3:	cmp    rcx,0x1
   140001cc7:	jb     0x140001d17
   140001cc9:	lea    rcx,[rdx+0x1]
   140001ccd:	lea    rdx,[rsp+0x20]
   140001cd2:	mov    QWORD PTR [rbx+0x8],rcx
   140001cd6:	mov    QWORD PTR [rdi+0x8],rax
   140001cda:	mov    rcx,QWORD PTR [rax+0x8]
   140001cde:	mov    QWORD PTR [rcx],rax
   140001ce1:	mov    r9,QWORD PTR [rbx]
   140001ce4:	mov    rcx,rbx
   140001ce7:	mov    r9,QWORD PTR [r9]
   140001cea:	lea    r8,[r9+0x10]
   140001cee:	call   0x140001300
   140001cf3:	mov    rdx,QWORD PTR [rsp+0x48]
   140001cf8:	mov    rdx,QWORD PTR [rdx]
   140001cfb:	mov    QWORD PTR [rsp+0x48],rdx
   140001d00:	cmp    rdx,QWORD PTR [rsp+0x50]
   140001d05:	jne    0x140001ca0
   140001d07:	mov    rsi,QWORD PTR [rsp+0x40]
   140001d0c:	mov    rdi,QWORD PTR [rsp+0x58]
   140001d11:	add    rsp,0x30
   140001d15:	pop    rbx
   140001d16:	ret    
   140001d17:	lea    rcx,[rip+0x2ac82]        # 0x14002c9a0
   140001d1e:	call   0x140005518
   140001d23:	int3   
   140001d24:	int3   
   140001d25:	int3   
   140001d26:	int3   
   140001d27:	int3   
   140001d28:	int3   
   140001d29:	int3   
   140001d2a:	int3   
   140001d2b:	int3   
   140001d2c:	int3   
   140001d2d:	int3   
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	mov    QWORD PTR [rsp+0x8],rcx
   140001d35:	push   rdi
   140001d36:	sub    rsp,0x30
   140001d3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001d43:	mov    QWORD PTR [rsp+0x48],rbx
   140001d48:	mov    QWORD PTR [rsp+0x50],rsi
   140001d4d:	mov    rbx,rdx
   140001d50:	mov    rdi,rcx
   140001d53:	xor    esi,esi
   140001d55:	mov    QWORD PTR [rcx],rsi
   140001d58:	mov    QWORD PTR [rcx+0x8],rsi
   140001d5c:	xor    r8d,r8d
   140001d5f:	xor    edx,edx
   140001d61:	call   0x1400029e0
   140001d66:	mov    QWORD PTR [rdi],rax
   140001d69:	mov    QWORD PTR [rdi+0x10],rsi
   140001d6d:	mov    QWORD PTR [rdi+0x18],rsi
   140001d71:	mov    QWORD PTR [rdi+0x20],rsi
   140001d75:	mov    DWORD PTR [rdi+0x38],0x3f800000
   140001d7c:	mov    rdx,rbx
   140001d7f:	mov    rcx,rdi
   140001d82:	call   0x140002b30
   140001d87:	nop
   140001d88:	mov    rax,rdi
   140001d8b:	mov    rbx,QWORD PTR [rsp+0x48]
   140001d90:	mov    rsi,QWORD PTR [rsp+0x50]
   140001d95:	add    rsp,0x30
   140001d99:	pop    rdi
   140001d9a:	ret    
   140001d9b:	int3   
   140001d9c:	int3   
   140001d9d:	int3   
   140001d9e:	int3   
   140001d9f:	int3   
   140001da0:	mov    rax,rcx
   140001da3:	ret    
   140001da4:	int3   
   140001da5:	int3   
   140001da6:	int3   
   140001da7:	int3   
   140001da8:	int3   
   140001da9:	int3   
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	mov    rax,rcx
   140001db3:	ret    
   140001db4:	int3   
   140001db5:	int3   
   140001db6:	int3   
   140001db7:	int3   
   140001db8:	int3   
   140001db9:	int3   
   140001dba:	int3   
   140001dbb:	int3   
   140001dbc:	int3   
   140001dbd:	int3   
   140001dbe:	int3   
   140001dbf:	int3   
   140001dc0:	rex push rbx
   140001dc2:	sub    rsp,0x20
   140001dc6:	xor    eax,eax
   140001dc8:	xor    r8d,r8d
   140001dcb:	xor    edx,edx
   140001dcd:	mov    QWORD PTR [rcx],rax
   140001dd0:	mov    QWORD PTR [rcx+0x8],rax
   140001dd4:	mov    rbx,rcx
   140001dd7:	call   0x1400029e0
   140001ddc:	mov    QWORD PTR [rbx],rax
   140001ddf:	mov    rax,rbx
   140001de2:	add    rsp,0x20
   140001de6:	pop    rbx
   140001de7:	ret    
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	int3   
   140001ded:	int3   
   140001dee:	int3   
   140001def:	int3   
   140001df0:	rex push rbx
   140001df2:	sub    rsp,0x20
   140001df6:	xor    eax,eax
   140001df8:	xor    r8d,r8d
   140001dfb:	xor    edx,edx
   140001dfd:	mov    QWORD PTR [rcx],rax
   140001e00:	mov    QWORD PTR [rcx+0x8],rax
   140001e04:	mov    rbx,rcx
   140001e07:	call   0x1400029e0
   140001e0c:	mov    QWORD PTR [rbx],rax
   140001e0f:	mov    rax,rbx
   140001e12:	add    rsp,0x20
   140001e16:	pop    rbx
   140001e17:	ret    
   140001e18:	int3   
   140001e19:	int3   
   140001e1a:	int3   
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rcx],rdx
   140001e23:	mov    rax,rcx
   140001e26:	ret    
   140001e27:	int3   
   140001e28:	int3   
   140001e29:	int3   
   140001e2a:	int3   
   140001e2b:	int3   
   140001e2c:	int3   
   140001e2d:	int3   
   140001e2e:	int3   
   140001e2f:	int3   
   140001e30:	mov    QWORD PTR [rcx],rdx
   140001e33:	mov    rax,rcx
   140001e36:	ret    
   140001e37:	int3   
   140001e38:	int3   
   140001e39:	int3   
   140001e3a:	int3   
   140001e3b:	int3   
   140001e3c:	int3   
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	mov    QWORD PTR [rcx],rdx
   140001e43:	mov    rax,rcx
   140001e46:	ret    
   140001e47:	int3   
   140001e48:	int3   
   140001e49:	int3   
   140001e4a:	int3   
   140001e4b:	int3   
   140001e4c:	int3   
   140001e4d:	int3   
   140001e4e:	int3   
   140001e4f:	int3   
   140001e50:	mov    QWORD PTR [rcx],0x0
   140001e57:	mov    rax,rcx
   140001e5a:	ret    
   140001e5b:	int3   
   140001e5c:	int3   
   140001e5d:	int3   
   140001e5e:	int3   
   140001e5f:	int3   
   140001e60:	mov    QWORD PTR [rcx],rdx
   140001e63:	mov    rax,rcx
   140001e66:	ret    
   140001e67:	int3   
   140001e68:	int3   
   140001e69:	int3   
   140001e6a:	int3   
   140001e6b:	int3   
   140001e6c:	int3   
   140001e6d:	int3   
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	mov    QWORD PTR [rcx],0x0
   140001e77:	mov    rax,rcx
   140001e7a:	ret    
   140001e7b:	int3   
   140001e7c:	int3   
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	xor    eax,eax
   140001e82:	mov    QWORD PTR [rcx],rax
   140001e85:	mov    QWORD PTR [rcx+0x8],rax
   140001e89:	mov    rax,rcx
   140001e8c:	ret    
   140001e8d:	int3   
   140001e8e:	int3   
   140001e8f:	int3   
   140001e90:	xor    eax,eax
   140001e92:	mov    QWORD PTR [rcx+0x10],rax
   140001e96:	mov    QWORD PTR [rcx+0x18],rax
   140001e9a:	mov    rax,rcx
   140001e9d:	ret    
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	xor    eax,eax
   140001ea2:	mov    QWORD PTR [rcx+0x10],rax
   140001ea6:	mov    QWORD PTR [rcx+0x18],rax
   140001eaa:	mov    rax,rcx
   140001ead:	ret    
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	mov    rax,rcx
   140001eb3:	ret    
   140001eb4:	int3   
   140001eb5:	int3   
   140001eb6:	int3   
   140001eb7:	int3   
   140001eb8:	int3   
   140001eb9:	int3   
   140001eba:	int3   
   140001ebb:	int3   
   140001ebc:	int3   
   140001ebd:	int3   
   140001ebe:	int3   
   140001ebf:	int3   
   140001ec0:	mov    rax,rcx
   140001ec3:	ret    
   140001ec4:	int3   
   140001ec5:	int3   
   140001ec6:	int3   
   140001ec7:	int3   
   140001ec8:	int3   
   140001ec9:	int3   
   140001eca:	int3   
   140001ecb:	int3   
   140001ecc:	int3   
   140001ecd:	int3   
   140001ece:	int3   
   140001ecf:	int3   
   140001ed0:	xor    eax,eax
   140001ed2:	mov    QWORD PTR [rcx],rax
   140001ed5:	mov    QWORD PTR [rcx+0x8],rax
   140001ed9:	mov    QWORD PTR [rcx+0x10],rax
   140001edd:	mov    rax,rcx
   140001ee0:	ret    
   140001ee1:	int3   
   140001ee2:	int3   
   140001ee3:	int3   
   140001ee4:	int3   
   140001ee5:	int3   
   140001ee6:	int3   
   140001ee7:	int3   
   140001ee8:	int3   
   140001ee9:	int3   
   140001eea:	int3   
   140001eeb:	int3   
   140001eec:	int3   
   140001eed:	int3   
   140001eee:	int3   
   140001eef:	int3   
   140001ef0:	mov    QWORD PTR [rcx],rdx
   140001ef3:	mov    rax,rcx
   140001ef6:	ret    
   140001ef7:	int3   
   140001ef8:	int3   
   140001ef9:	int3   
   140001efa:	int3   
   140001efb:	int3   
   140001efc:	int3   
   140001efd:	int3   
   140001efe:	int3   
   140001eff:	int3   
   140001f00:	mov    QWORD PTR [rcx],rdx
   140001f03:	mov    rax,rcx
   140001f06:	ret    
   140001f07:	int3   
   140001f08:	int3   
   140001f09:	int3   
   140001f0a:	int3   
   140001f0b:	int3   
   140001f0c:	int3   
   140001f0d:	int3   
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	xor    eax,eax
   140001f12:	mov    QWORD PTR [rcx],rax
   140001f15:	mov    QWORD PTR [rcx+0x8],rax
   140001f19:	mov    QWORD PTR [rcx+0x10],rax
   140001f1d:	mov    rax,rcx
   140001f20:	ret    
   140001f21:	int3   
   140001f22:	int3   
   140001f23:	int3   
   140001f24:	int3   
   140001f25:	int3   
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	mov    rax,rcx
   140001f33:	ret    
   140001f34:	int3   
   140001f35:	int3   
   140001f36:	int3   
   140001f37:	int3   
   140001f38:	int3   
   140001f39:	int3   
   140001f3a:	int3   
   140001f3b:	int3   
   140001f3c:	int3   
   140001f3d:	int3   
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	mov    rax,rcx
   140001f43:	ret    
   140001f44:	int3   
   140001f45:	int3   
   140001f46:	int3   
   140001f47:	int3   
   140001f48:	int3   
   140001f49:	int3   
   140001f4a:	int3   
   140001f4b:	int3   
   140001f4c:	int3   
   140001f4d:	int3   
   140001f4e:	int3   
   140001f4f:	int3   
   140001f50:	mov    rax,rcx
   140001f53:	ret    
   140001f54:	int3   
   140001f55:	int3   
   140001f56:	int3   
   140001f57:	int3   
   140001f58:	int3   
   140001f59:	int3   
   140001f5a:	int3   
   140001f5b:	int3   
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	mov    rax,rcx
   140001f63:	ret    
   140001f64:	int3   
   140001f65:	int3   
   140001f66:	int3   
   140001f67:	int3   
   140001f68:	int3   
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	mov    rax,rcx
   140001f73:	ret    
   140001f74:	int3   
   140001f75:	int3   
   140001f76:	int3   
   140001f77:	int3   
   140001f78:	int3   
   140001f79:	int3   
   140001f7a:	int3   
   140001f7b:	int3   
   140001f7c:	int3   
   140001f7d:	int3   
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	mov    rax,rcx
   140001f83:	ret    
   140001f84:	int3   
   140001f85:	int3   
   140001f86:	int3   
   140001f87:	int3   
   140001f88:	int3   
   140001f89:	int3   
   140001f8a:	int3   
   140001f8b:	int3   
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	mov    rax,rcx
   140001f93:	ret    
   140001f94:	int3   
   140001f95:	int3   
   140001f96:	int3   
   140001f97:	int3   
   140001f98:	int3   
   140001f99:	int3   
   140001f9a:	int3   
   140001f9b:	int3   
   140001f9c:	int3   
   140001f9d:	int3   
   140001f9e:	int3   
   140001f9f:	int3   
   140001fa0:	mov    rax,rcx
   140001fa3:	ret    
   140001fa4:	int3   
   140001fa5:	int3   
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	mov    rax,rcx
   140001fb3:	ret    
   140001fb4:	int3   
   140001fb5:	int3   
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	int3   
   140001fb9:	int3   
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	mov    rax,rcx
   140001fc3:	ret    
   140001fc4:	int3   
   140001fc5:	int3   
   140001fc6:	int3   
   140001fc7:	int3   
   140001fc8:	int3   
   140001fc9:	int3   
   140001fca:	int3   
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	mov    rax,rcx
   140001fd3:	ret    
   140001fd4:	int3   
   140001fd5:	int3   
   140001fd6:	int3   
   140001fd7:	int3   
   140001fd8:	int3   
   140001fd9:	int3   
   140001fda:	int3   
   140001fdb:	int3   
   140001fdc:	int3   
   140001fdd:	int3   
   140001fde:	int3   
   140001fdf:	int3   
   140001fe0:	rex push rbx
   140001fe2:	sub    rsp,0x20
   140001fe6:	mov    QWORD PTR [rcx+0x18],0xf
   140001fee:	mov    QWORD PTR [rcx+0x10],0x0
   140001ff6:	or     r9,0xffffffffffffffff
   140001ffa:	xor    r8d,r8d
   140001ffd:	mov    rbx,rcx
   140002000:	mov    BYTE PTR [rcx],0x0
   140002003:	call   0x1400039b0
   140002008:	mov    rax,rbx
   14000200b:	add    rsp,0x20
   14000200f:	pop    rbx
   140002010:	ret    
   140002011:	int3   
   140002012:	int3   
   140002013:	int3   
   140002014:	int3   
   140002015:	int3   
   140002016:	int3   
   140002017:	int3   
   140002018:	int3   
   140002019:	int3   
   14000201a:	int3   
   14000201b:	int3   
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	rex push rbx
   140002022:	sub    rsp,0x20
   140002026:	xor    r8d,r8d
   140002029:	mov    QWORD PTR [rcx+0x18],0xf
   140002031:	mov    rbx,rcx
   140002034:	mov    QWORD PTR [rcx+0x10],r8
   140002038:	mov    BYTE PTR [rcx],r8b
   14000203b:	cmp    BYTE PTR [rdx],r8b
   14000203e:	je     0x14000204e
   140002040:	or     r8,0xffffffffffffffff
   140002044:	inc    r8
   140002047:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000204c:	jne    0x140002044
   14000204e:	call   0x140003b00
   140002053:	mov    rax,rbx
   140002056:	add    rsp,0x20
   14000205a:	pop    rbx
   14000205b:	ret    
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	rex push rbx
   140002062:	sub    rsp,0x20
   140002066:	xor    eax,eax
   140002068:	xor    r8d,r8d
   14000206b:	xor    edx,edx
   14000206d:	mov    QWORD PTR [rcx],rax
   140002070:	mov    QWORD PTR [rcx+0x8],rax
   140002074:	mov    rbx,rcx
   140002077:	call   0x1400029e0
   14000207c:	mov    QWORD PTR [rbx],rax
   14000207f:	mov    rax,rbx
   140002082:	add    rsp,0x20
   140002086:	pop    rbx
   140002087:	ret    
   140002088:	int3   
   140002089:	int3   
   14000208a:	int3   
   14000208b:	int3   
   14000208c:	int3   
   14000208d:	int3   
   14000208e:	int3   
   14000208f:	int3   
   140002090:	mov    QWORD PTR [rsp+0x8],rcx
   140002095:	push   rdi
   140002096:	sub    rsp,0x30
   14000209a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400020a3:	mov    QWORD PTR [rsp+0x48],rbx
   1400020a8:	mov    rbx,rdx
   1400020ab:	mov    rdi,rcx
   1400020ae:	mov    QWORD PTR [rcx+0x18],0xf
   1400020b6:	mov    QWORD PTR [rcx+0x10],0x0
   1400020be:	mov    BYTE PTR [rcx],0x0
   1400020c1:	or     r9,0xffffffffffffffff
   1400020c5:	xor    r8d,r8d
   1400020c8:	call   0x1400039b0
   1400020cd:	nop
   1400020ce:	lea    rcx,[rdi+0x20]
   1400020d2:	mov    QWORD PTR [rcx+0x18],0xf
   1400020da:	mov    QWORD PTR [rcx+0x10],0x0
   1400020e2:	mov    BYTE PTR [rcx],0x0
   1400020e5:	lea    rdx,[rbx+0x20]
   1400020e9:	or     r9,0xffffffffffffffff
   1400020ed:	xor    r8d,r8d
   1400020f0:	call   0x1400039b0
   1400020f5:	nop
   1400020f6:	mov    rax,rdi
   1400020f9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400020fe:	add    rsp,0x30
   140002102:	pop    rdi
   140002103:	ret    
   140002104:	int3   
   140002105:	int3   
   140002106:	int3   
   140002107:	int3   
   140002108:	int3   
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	int3   
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	mov    QWORD PTR [rsp+0x8],rcx
   140002115:	push   rdi
   140002116:	sub    rsp,0x30
   14000211a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002123:	mov    QWORD PTR [rsp+0x48],rbx
   140002128:	mov    QWORD PTR [rsp+0x50],rsi
   14000212d:	mov    rbx,rdx
   140002130:	mov    rdi,rcx
   140002133:	xor    esi,esi
   140002135:	mov    QWORD PTR [rcx],rsi
   140002138:	mov    QWORD PTR [rcx+0x8],rsi
   14000213c:	xor    r8d,r8d
   14000213f:	xor    edx,edx
   140002141:	call   0x1400029e0
   140002146:	mov    QWORD PTR [rdi],rax
   140002149:	mov    QWORD PTR [rdi+0x10],rsi
   14000214d:	mov    QWORD PTR [rdi+0x18],rsi
   140002151:	mov    QWORD PTR [rdi+0x20],rsi
   140002155:	mov    DWORD PTR [rdi+0x38],0x3f800000
   14000215c:	mov    rdx,rbx
   14000215f:	mov    rcx,rdi
   140002162:	call   0x140002b30
   140002167:	nop
   140002168:	mov    rax,rdi
   14000216b:	mov    rbx,QWORD PTR [rsp+0x48]
   140002170:	mov    rsi,QWORD PTR [rsp+0x50]
   140002175:	add    rsp,0x30
   140002179:	pop    rdi
   14000217a:	ret    
   14000217b:	int3   
   14000217c:	int3   
   14000217d:	int3   
   14000217e:	int3   
   14000217f:	int3   
   140002180:	xor    eax,eax
   140002182:	mov    QWORD PTR [rcx],rax
   140002185:	mov    QWORD PTR [rcx+0x8],rax
   140002189:	mov    QWORD PTR [rcx+0x10],rax
   14000218d:	mov    rax,rcx
   140002190:	ret    
   140002191:	int3   
   140002192:	int3   
   140002193:	int3   
   140002194:	int3   
   140002195:	int3   
   140002196:	int3   
   140002197:	int3   
   140002198:	int3   
   140002199:	int3   
   14000219a:	int3   
   14000219b:	int3   
   14000219c:	int3   
   14000219d:	int3   
   14000219e:	int3   
   14000219f:	int3   
   1400021a0:	rex push rdi
   1400021a2:	sub    rsp,0x30
   1400021a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400021af:	mov    QWORD PTR [rsp+0x48],rbx
   1400021b4:	mov    QWORD PTR [rsp+0x50],rsi
   1400021b9:	mov    rbx,rdx
   1400021bc:	mov    rdi,rcx
   1400021bf:	mov    QWORD PTR [rsp+0x40],rcx
   1400021c4:	xor    esi,esi
   1400021c6:	mov    QWORD PTR [rcx],rsi
   1400021c9:	mov    QWORD PTR [rcx+0x8],rsi
   1400021cd:	xor    r8d,r8d
   1400021d0:	xor    edx,edx
   1400021d2:	call   0x1400029e0
   1400021d7:	mov    QWORD PTR [rdi],rax
   1400021da:	mov    QWORD PTR [rdi+0x10],rsi
   1400021de:	mov    QWORD PTR [rdi+0x18],rsi
   1400021e2:	mov    QWORD PTR [rdi+0x20],rsi
   1400021e6:	mov    DWORD PTR [rdi+0x38],0x3f800000
   1400021ed:	mov    rdx,rbx
   1400021f0:	mov    rcx,rdi
   1400021f3:	call   0x140002b30
   1400021f8:	nop
   1400021f9:	mov    rax,QWORD PTR [rbx+0x40]
   1400021fd:	mov    QWORD PTR [rdi+0x40],rax
   140002201:	mov    rax,rdi
   140002204:	mov    rbx,QWORD PTR [rsp+0x48]
   140002209:	mov    rsi,QWORD PTR [rsp+0x50]
   14000220e:	add    rsp,0x30
   140002212:	pop    rdi
   140002213:	ret    
   140002214:	int3   
   140002215:	int3   
   140002216:	int3   
   140002217:	int3   
   140002218:	int3   
   140002219:	int3   
   14000221a:	int3   
   14000221b:	int3   
   14000221c:	int3   
   14000221d:	int3   
   14000221e:	int3   
   14000221f:	int3   
   140002220:	lea    rax,[rip+0x2a529]        # 0x14002c750
   140002227:	mov    QWORD PTR [rcx],rax
   14000222a:	mov    rax,rcx
   14000222d:	ret    
   14000222e:	int3   
   14000222f:	int3   
   140002230:	mov    rax,rcx
   140002233:	ret    
   140002234:	int3   
   140002235:	int3   
   140002236:	int3   
   140002237:	int3   
   140002238:	int3   
   140002239:	int3   
   14000223a:	int3   
   14000223b:	int3   
   14000223c:	int3   
   14000223d:	int3   
   14000223e:	int3   
   14000223f:	int3   
   140002240:	lea    rax,[rip+0x2a559]        # 0x14002c7a0
   140002247:	mov    QWORD PTR [rcx],rax
   14000224a:	mov    rax,rcx
   14000224d:	ret    
   14000224e:	int3   
   14000224f:	int3   
   140002250:	lea    rax,[rip+0x2a5a9]        # 0x14002c800
   140002257:	mov    QWORD PTR [rcx],rax
   14000225a:	mov    rax,rcx
   14000225d:	ret    
   14000225e:	int3   
   14000225f:	int3   
   140002260:	lea    rax,[rip+0x2a4b1]        # 0x14002c718
   140002267:	mov    QWORD PTR [rcx],rax
   14000226a:	mov    rax,rcx
   14000226d:	ret    
   14000226e:	int3   
   14000226f:	int3   
   140002270:	mov    DWORD PTR [rcx],edx
   140002272:	mov    QWORD PTR [rcx+0x8],r8
   140002276:	mov    rax,rcx
   140002279:	ret    
   14000227a:	int3   
   14000227b:	int3   
   14000227c:	int3   
   14000227d:	int3   
   14000227e:	int3   
   14000227f:	int3   
   140002280:	mov    QWORD PTR [rcx],rdx
   140002283:	mov    rax,rcx
   140002286:	ret    
   140002287:	int3   
   140002288:	int3   
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	rex push rbx
   140002292:	sub    rsp,0x20
   140002296:	mov    rbx,rcx
   140002299:	mov    rcx,QWORD PTR [rcx+0x10]
   14000229d:	test   rcx,rcx
   1400022a0:	je     0x1400022b5
   1400022a2:	call   0x140005778
   1400022a7:	xor    eax,eax
   1400022a9:	mov    QWORD PTR [rbx+0x10],rax
   1400022ad:	mov    QWORD PTR [rbx+0x18],rax
   1400022b1:	mov    QWORD PTR [rbx+0x20],rax
   1400022b5:	mov    rcx,rbx
   1400022b8:	call   0x140003d70
   1400022bd:	mov    rcx,QWORD PTR [rbx]
   1400022c0:	add    rsp,0x20
   1400022c4:	pop    rbx
   1400022c5:	jmp    0x140005778
   1400022ca:	int3   
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	mov    rcx,QWORD PTR [rcx]
   1400022d3:	jmp    0x140005778
   1400022d8:	int3   
   1400022d9:	int3   
   1400022da:	int3   
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	mov    rcx,QWORD PTR [rcx]
   1400022e3:	jmp    0x140005778
   1400022e8:	int3   
   1400022e9:	int3   
   1400022ea:	int3   
   1400022eb:	int3   
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	rex push rbx
   1400022f2:	sub    rsp,0x20
   1400022f6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400022fb:	mov    rbx,rcx
   1400022fe:	jb     0x140002308
   140002300:	mov    rcx,QWORD PTR [rcx]
   140002303:	call   0x140005778
   140002308:	mov    QWORD PTR [rbx+0x18],0xf
   140002310:	mov    QWORD PTR [rbx+0x10],0x0
   140002318:	mov    BYTE PTR [rbx],0x0
   14000231b:	add    rsp,0x20
   14000231f:	pop    rbx
   140002320:	ret    
   140002321:	int3   
   140002322:	int3   
   140002323:	int3   
   140002324:	int3   
   140002325:	int3   
   140002326:	int3   
   140002327:	int3   
   140002328:	int3   
   140002329:	int3   
   14000232a:	int3   
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	rex push rbx
   140002332:	sub    rsp,0x20
   140002336:	mov    rbx,rcx
   140002339:	call   0x140003d70
   14000233e:	mov    rcx,QWORD PTR [rbx]
   140002341:	add    rsp,0x20
   140002345:	pop    rbx
   140002346:	jmp    0x140005778
   14000234b:	int3   
   14000234c:	int3   
   14000234d:	int3   
   14000234e:	int3   
   14000234f:	int3   
   140002350:	rex push rbx
   140002352:	sub    rsp,0x20
   140002356:	cmp    QWORD PTR [rcx+0x38],0x10
   14000235b:	mov    rbx,rcx
   14000235e:	jb     0x140002369
   140002360:	mov    rcx,QWORD PTR [rcx+0x20]
   140002364:	call   0x140005778
   140002369:	mov    QWORD PTR [rbx+0x38],0xf
   140002371:	mov    QWORD PTR [rbx+0x30],0x0
   140002379:	mov    BYTE PTR [rbx+0x20],0x0
   14000237d:	cmp    QWORD PTR [rbx+0x18],0x10
   140002382:	jb     0x14000238c
   140002384:	mov    rcx,QWORD PTR [rbx]
   140002387:	call   0x140005778
   14000238c:	mov    QWORD PTR [rbx+0x18],0xf
   140002394:	mov    QWORD PTR [rbx+0x10],0x0
   14000239c:	mov    BYTE PTR [rbx],0x0
   14000239f:	add    rsp,0x20
   1400023a3:	pop    rbx
   1400023a4:	ret    
   1400023a5:	int3   
   1400023a6:	int3   
   1400023a7:	int3   
   1400023a8:	int3   
   1400023a9:	int3   
   1400023aa:	int3   
   1400023ab:	int3   
   1400023ac:	int3   
   1400023ad:	int3   
   1400023ae:	int3   
   1400023af:	int3   
   1400023b0:	rex push rbx
   1400023b2:	sub    rsp,0x20
   1400023b6:	mov    rbx,rcx
   1400023b9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400023bd:	test   rcx,rcx
   1400023c0:	je     0x1400023d5
   1400023c2:	call   0x140005778
   1400023c7:	xor    eax,eax
   1400023c9:	mov    QWORD PTR [rbx+0x10],rax
   1400023cd:	mov    QWORD PTR [rbx+0x18],rax
   1400023d1:	mov    QWORD PTR [rbx+0x20],rax
   1400023d5:	mov    rcx,rbx
   1400023d8:	call   0x140003d70
   1400023dd:	mov    rcx,QWORD PTR [rbx]
   1400023e0:	add    rsp,0x20
   1400023e4:	pop    rbx
   1400023e5:	jmp    0x140005778
   1400023ea:	int3   
   1400023eb:	int3   
   1400023ec:	int3   
   1400023ed:	int3   
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	rex push rbx
   1400023f2:	sub    rsp,0x20
   1400023f6:	mov    rbx,rcx
   1400023f9:	mov    rcx,QWORD PTR [rcx]
   1400023fc:	test   rcx,rcx
   1400023ff:	je     0x140002413
   140002401:	call   0x140005778
   140002406:	xor    eax,eax
   140002408:	mov    QWORD PTR [rbx],rax
   14000240b:	mov    QWORD PTR [rbx+0x8],rax
   14000240f:	mov    QWORD PTR [rbx+0x10],rax
   140002413:	add    rsp,0x20
   140002417:	pop    rbx
   140002418:	ret    
   140002419:	int3   
   14000241a:	int3   
   14000241b:	int3   
   14000241c:	int3   
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	lea    rax,[rip+0x2a2f1]        # 0x14002c718
   140002427:	mov    QWORD PTR [rcx],rax
   14000242a:	ret    
   14000242b:	int3   
   14000242c:	int3   
   14000242d:	int3   
   14000242e:	int3   
   14000242f:	int3   
   140002430:	lea    rax,[rip+0x2a2e1]        # 0x14002c718
   140002437:	mov    QWORD PTR [rcx],rax
   14000243a:	ret    
   14000243b:	int3   
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	lea    rax,[rip+0x2a2d1]        # 0x14002c718
   140002447:	mov    QWORD PTR [rcx],rax
   14000244a:	ret    
   14000244b:	int3   
   14000244c:	int3   
   14000244d:	int3   
   14000244e:	int3   
   14000244f:	int3   
   140002450:	lea    rax,[rip+0x2a2c1]        # 0x14002c718
   140002457:	mov    QWORD PTR [rcx],rax
   14000245a:	ret    
   14000245b:	int3   
   14000245c:	int3   
   14000245d:	int3   
   14000245e:	int3   
   14000245f:	int3   
   140002460:	mov    rax,rdx
   140002463:	ret    
   140002464:	int3   
   140002465:	int3   
   140002466:	int3   
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	ret    0x0
   140002473:	int3   
   140002474:	int3   
   140002475:	int3   
   140002476:	int3   
   140002477:	int3   
   140002478:	int3   
   140002479:	int3   
   14000247a:	int3   
   14000247b:	int3   
   14000247c:	int3   
   14000247d:	int3   
   14000247e:	int3   
   14000247f:	int3   
   140002480:	rex push rbx
   140002482:	sub    rsp,0x20
   140002486:	mov    rbx,rcx
   140002489:	cmp    rcx,rdx
   14000248c:	je     0x140002493
   14000248e:	call   0x140002b30
   140002493:	mov    rax,rbx
   140002496:	add    rsp,0x20
   14000249a:	pop    rbx
   14000249b:	ret    
   14000249c:	int3   
   14000249d:	int3   
   14000249e:	int3   
   14000249f:	int3   
   1400024a0:	rex push rbx
   1400024a2:	sub    rsp,0x20
   1400024a6:	mov    rbx,rcx
   1400024a9:	cmp    rcx,rdx
   1400024ac:	je     0x1400024b3
   1400024ae:	call   0x140002b30
   1400024b3:	mov    rax,rbx
   1400024b6:	add    rsp,0x20
   1400024ba:	pop    rbx
   1400024bb:	ret    
   1400024bc:	int3   
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024c5:	push   rdi
   1400024c6:	sub    rsp,0x20
   1400024ca:	mov    rdi,rdx
   1400024cd:	mov    rbx,rcx
   1400024d0:	cmp    rcx,rdx
   1400024d3:	je     0x1400024da
   1400024d5:	call   0x140002b30
   1400024da:	mov    rax,QWORD PTR [rdi+0x40]
   1400024de:	mov    QWORD PTR [rbx+0x40],rax
   1400024e2:	mov    rax,rbx
   1400024e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024ea:	add    rsp,0x20
   1400024ee:	pop    rdi
   1400024ef:	ret    
   1400024f0:	mov    rdx,QWORD PTR [rdx]
   1400024f3:	cmp    QWORD PTR [rcx],rdx
   1400024f6:	sete   al
   1400024f9:	ret    
   1400024fa:	int3   
   1400024fb:	int3   
   1400024fc:	int3   
   1400024fd:	int3   
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	mov    rdx,QWORD PTR [rdx]
   140002503:	cmp    QWORD PTR [rcx],rdx
   140002506:	sete   al
   140002509:	ret    
   14000250a:	int3   
   14000250b:	int3   
   14000250c:	int3   
   14000250d:	int3   
   14000250e:	int3   
   14000250f:	int3   
   140002510:	cmp    rcx,rdx
   140002513:	sete   al
   140002516:	ret    
   140002517:	int3   
   140002518:	int3   
   140002519:	int3   
   14000251a:	int3   
   14000251b:	int3   
   14000251c:	int3   
   14000251d:	int3   
   14000251e:	int3   
   14000251f:	int3   
   140002520:	mov    rax,QWORD PTR [rdx+0x8]
   140002524:	cmp    QWORD PTR [rcx+0x8],rax
   140002528:	jne    0x140002533
   14000252a:	mov    eax,DWORD PTR [rdx]
   14000252c:	cmp    DWORD PTR [rcx],eax
   14000252e:	jne    0x140002533
   140002530:	mov    al,0x1
   140002532:	ret    
   140002533:	xor    al,al
   140002535:	ret    
   140002536:	int3   
   140002537:	int3   
   140002538:	int3   
   140002539:	int3   
   14000253a:	int3   
   14000253b:	int3   
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	mov    rdx,QWORD PTR [rdx]
   140002543:	cmp    QWORD PTR [rcx],rdx
   140002546:	setne  al
   140002549:	ret    
   14000254a:	int3   
   14000254b:	int3   
   14000254c:	int3   
   14000254d:	int3   
   14000254e:	int3   
   14000254f:	int3   
   140002550:	mov    rdx,QWORD PTR [rdx]
   140002553:	cmp    QWORD PTR [rcx],rdx
   140002556:	setne  al
   140002559:	ret    
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	mov    rax,QWORD PTR [rcx]
   140002563:	lea    rax,[rax+rdx*8]
   140002567:	ret    
   140002568:	int3   
   140002569:	int3   
   14000256a:	int3   
   14000256b:	int3   
   14000256c:	int3   
   14000256d:	int3   
   14000256e:	int3   
   14000256f:	int3   
   140002570:	mov    rax,QWORD PTR [rcx]
   140002573:	add    rax,0x10
   140002577:	ret    
   140002578:	int3   
   140002579:	int3   
   14000257a:	int3   
   14000257b:	int3   
   14000257c:	int3   
   14000257d:	int3   
   14000257e:	int3   
   14000257f:	int3   
   140002580:	mov    rax,QWORD PTR [rcx]
   140002583:	add    rax,0x10
   140002587:	ret    
   140002588:	int3   
   140002589:	int3   
   14000258a:	int3   
   14000258b:	int3   
   14000258c:	int3   
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	mov    rax,QWORD PTR [rcx]
   140002593:	add    rax,0x10
   140002597:	ret    
   140002598:	int3   
   140002599:	int3   
   14000259a:	int3   
   14000259b:	int3   
   14000259c:	int3   
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	mov    rax,QWORD PTR [rcx]
   1400025a3:	add    rax,0x10
   1400025a7:	ret    
   1400025a8:	int3   
   1400025a9:	int3   
   1400025aa:	int3   
   1400025ab:	int3   
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    rax,QWORD PTR [rcx]
   1400025b3:	mov    QWORD PTR [rdx],rax
   1400025b6:	mov    rax,QWORD PTR [rax]
   1400025b9:	mov    QWORD PTR [rcx],rax
   1400025bc:	mov    rax,rdx
   1400025bf:	ret    
   1400025c0:	mov    rax,QWORD PTR [rcx]
   1400025c3:	mov    rdx,QWORD PTR [rax]
   1400025c6:	mov    rax,rcx
   1400025c9:	mov    QWORD PTR [rcx],rdx
   1400025cc:	ret    
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	mov    rax,QWORD PTR [rcx]
   1400025d3:	mov    rdx,QWORD PTR [rax]
   1400025d6:	mov    rax,rcx
   1400025d9:	mov    QWORD PTR [rcx],rdx
   1400025dc:	ret    
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	mov    rax,QWORD PTR [rcx]
   1400025e3:	mov    rdx,QWORD PTR [rax]
   1400025e6:	mov    rax,rcx
   1400025e9:	mov    QWORD PTR [rcx],rdx
   1400025ec:	ret    
   1400025ed:	int3   
   1400025ee:	int3   
   1400025ef:	int3   
   1400025f0:	mov    rax,QWORD PTR [rcx]
   1400025f3:	mov    rdx,QWORD PTR [rax+0x8]
   1400025f7:	mov    rax,rcx
   1400025fa:	mov    QWORD PTR [rcx],rdx
   1400025fd:	ret    
   1400025fe:	int3   
   1400025ff:	int3   
   140002600:	mov    rax,QWORD PTR [rcx]
   140002603:	mov    rdx,QWORD PTR [rax+0x8]
   140002607:	mov    rax,rcx
   14000260a:	mov    QWORD PTR [rcx],rdx
   14000260d:	ret    
   14000260e:	int3   
   14000260f:	int3   
   140002610:	mov    rax,QWORD PTR [rcx]
   140002613:	lea    rcx,[rax+r8*8]
   140002617:	mov    rax,rdx
   14000261a:	mov    QWORD PTR [rdx],rcx
   14000261d:	ret    
   14000261e:	int3   
   14000261f:	int3   
   140002620:	cmp    QWORD PTR [rdx+0x18],0x10
   140002625:	mov    r9,QWORD PTR [rdx+0x10]
   140002629:	mov    r8,rdx
   14000262c:	jb     0x140002631
   14000262e:	mov    r8,QWORD PTR [rdx]
   140002631:	xor    edx,edx
   140002633:	movabs rcx,0xcbf29ce484222325
   14000263d:	test   r9,r9
   140002640:	je     0x140002664
   140002642:	movabs r10,0x100000001b3
   14000264c:	nop    DWORD PTR [rax+0x0]
   140002650:	movzx  eax,BYTE PTR [r8+rdx*1]
   140002655:	inc    rdx
   140002658:	xor    rcx,rax
   14000265b:	imul   rcx,r10
   14000265f:	cmp    rdx,r9
   140002662:	jb     0x140002650
   140002664:	mov    rax,rcx
   140002667:	shr    rax,0x20
   14000266b:	xor    rax,rcx
   14000266e:	ret    
   14000266f:	int3   
   140002670:	sub    rsp,0x28
   140002674:	mov    rcx,rdx
   140002677:	mov    rdx,r8
   14000267a:	call   0x140003e20
   14000267f:	test   eax,eax
   140002681:	setne  al
   140002684:	add    rsp,0x28
   140002688:	ret    
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	sub    rsp,0x28
   140002694:	mov    rcx,rdx
   140002697:	mov    rdx,r8
   14000269a:	call   0x140003e20
   14000269f:	test   eax,eax
   1400026a1:	sete   al
   1400026a4:	add    rsp,0x28
   1400026a8:	ret    
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	cmp    QWORD PTR [rdx+0x18],0x10
   1400026b5:	mov    r9,QWORD PTR [rdx+0x10]
   1400026b9:	mov    r8,rdx
   1400026bc:	jb     0x1400026c1
   1400026be:	mov    r8,QWORD PTR [rdx]
   1400026c1:	xor    edx,edx
   1400026c3:	movabs rcx,0xcbf29ce484222325
   1400026cd:	test   r9,r9
   1400026d0:	je     0x1400026f4
   1400026d2:	movabs r10,0x100000001b3
   1400026dc:	nop    DWORD PTR [rax+0x0]
   1400026e0:	movzx  eax,BYTE PTR [r8+rdx*1]
   1400026e5:	inc    rdx
   1400026e8:	xor    rcx,rax
   1400026eb:	imul   rcx,r10
   1400026ef:	cmp    rdx,r9
   1400026f2:	jb     0x1400026e0
   1400026f4:	mov    rax,rcx
   1400026f7:	shr    rax,0x20
   1400026fb:	xor    rax,rcx
   1400026fe:	ret    
   1400026ff:	int3   
   140002700:	lea    rax,[rdx*8+0x0]
   140002708:	add    QWORD PTR [rcx],rax
   14000270b:	mov    rax,rcx
   14000270e:	ret    
   14000270f:	int3   
   140002710:	lea    rax,[rdx*8+0x0]
   140002718:	add    QWORD PTR [rcx],rax
   14000271b:	mov    rax,rcx
   14000271e:	ret    
   14000271f:	int3   
   140002720:	mov    QWORD PTR [rsp+0x8],rbx
   140002725:	push   rdi
   140002726:	sub    rsp,0x20
   14000272a:	cmp    QWORD PTR [rcx+0x38],0x10
   14000272f:	mov    edi,edx
   140002731:	mov    rbx,rcx
   140002734:	jb     0x14000273f
   140002736:	mov    rcx,QWORD PTR [rcx+0x20]
   14000273a:	call   0x140005778
   14000273f:	mov    QWORD PTR [rbx+0x38],0xf
   140002747:	mov    QWORD PTR [rbx+0x30],0x0
   14000274f:	mov    BYTE PTR [rbx+0x20],0x0
   140002753:	cmp    QWORD PTR [rbx+0x18],0x10
   140002758:	jb     0x140002762
   14000275a:	mov    rcx,QWORD PTR [rbx]
   14000275d:	call   0x140005778
   140002762:	mov    QWORD PTR [rbx+0x18],0xf
   14000276a:	mov    QWORD PTR [rbx+0x10],0x0
   140002772:	mov    BYTE PTR [rbx],0x0
   140002775:	test   dil,0x1
   140002779:	je     0x140002783
   14000277b:	mov    rcx,rbx
   14000277e:	call   0x140005778
   140002783:	mov    rax,rbx
   140002786:	mov    rbx,QWORD PTR [rsp+0x30]
   14000278b:	add    rsp,0x20
   14000278f:	pop    rdi
   140002790:	ret    
   140002791:	int3   
   140002792:	int3   
   140002793:	int3   
   140002794:	int3   
   140002795:	int3   
   140002796:	int3   
   140002797:	int3   
   140002798:	int3   
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	rex push rbx
   1400027a2:	sub    rsp,0x20
   1400027a6:	lea    rax,[rip+0x29f6b]        # 0x14002c718
   1400027ad:	mov    rbx,rcx
   1400027b0:	mov    QWORD PTR [rcx],rax
   1400027b3:	test   dl,0x1
   1400027b6:	je     0x1400027bd
   1400027b8:	call   0x140005778
   1400027bd:	mov    rax,rbx
   1400027c0:	add    rsp,0x20
   1400027c4:	pop    rbx
   1400027c5:	ret    
   1400027c6:	int3   
   1400027c7:	int3   
   1400027c8:	int3   
   1400027c9:	int3   
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	rex push rbx
   1400027d2:	sub    rsp,0x20
   1400027d6:	lea    rax,[rip+0x29f3b]        # 0x14002c718
   1400027dd:	mov    rbx,rcx
   1400027e0:	mov    QWORD PTR [rcx],rax
   1400027e3:	test   dl,0x1
   1400027e6:	je     0x1400027ed
   1400027e8:	call   0x140005778
   1400027ed:	mov    rax,rbx
   1400027f0:	add    rsp,0x20
   1400027f4:	pop    rbx
   1400027f5:	ret    
   1400027f6:	int3   
   1400027f7:	int3   
   1400027f8:	int3   
   1400027f9:	int3   
   1400027fa:	int3   
   1400027fb:	int3   
   1400027fc:	int3   
   1400027fd:	int3   
   1400027fe:	int3   
   1400027ff:	int3   
   140002800:	rex push rbx
   140002802:	sub    rsp,0x20
   140002806:	lea    rax,[rip+0x29f0b]        # 0x14002c718
   14000280d:	mov    rbx,rcx
   140002810:	mov    QWORD PTR [rcx],rax
   140002813:	test   dl,0x1
   140002816:	je     0x14000281d
   140002818:	call   0x140005778
   14000281d:	mov    rax,rbx
   140002820:	add    rsp,0x20
   140002824:	pop    rbx
   140002825:	ret    
   140002826:	int3   
   140002827:	int3   
   140002828:	int3   
   140002829:	int3   
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	int3   
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	rex push rbx
   140002832:	sub    rsp,0x20
   140002836:	lea    rax,[rip+0x29edb]        # 0x14002c718
   14000283d:	mov    rbx,rcx
   140002840:	mov    QWORD PTR [rcx],rax
   140002843:	test   dl,0x1
   140002846:	je     0x14000284d
   140002848:	call   0x140005778
   14000284d:	mov    rax,rbx
   140002850:	add    rsp,0x20
   140002854:	pop    rbx
   140002855:	ret    
   140002856:	int3   
   140002857:	int3   
   140002858:	int3   
   140002859:	int3   
   14000285a:	int3   
   14000285b:	int3   
   14000285c:	int3   
   14000285d:	int3   
   14000285e:	int3   
   14000285f:	int3   
   140002860:	mov    QWORD PTR [rsp+0x18],r8
   140002865:	mov    QWORD PTR [rsp+0x20],r9
   14000286a:	push   rbx
   14000286b:	push   rsi
   14000286c:	sub    rsp,0x28
   140002870:	xor    ebx,ebx
   140002872:	lea    rax,[rdx-0x1]
   140002876:	mov    rsi,rcx
   140002879:	cmp    rax,0x7ffffffe
   14000287f:	mov    r9d,ebx
   140002882:	mov    ecx,0x80070057
   140002887:	cmova  r9d,ecx
   14000288b:	test   r9d,r9d
   14000288e:	js     0x1400028df
   140002890:	mov    QWORD PTR [rsp+0x20],rdi
   140002895:	lea    rdi,[rdx-0x1]
   140002899:	lea    r9,[rsp+0x58]
   14000289e:	mov    rdx,rdi
   1400028a1:	mov    rcx,rsi
   1400028a4:	call   0x140006154
   1400028a9:	test   eax,eax
   1400028ab:	js     0x1400028c8
   1400028ad:	cdqe   
   1400028af:	cmp    rax,rdi
   1400028b2:	ja     0x1400028c8
   1400028b4:	jne    0x1400028d1
   1400028b6:	mov    WORD PTR [rsi+rdi*2],bx
   1400028ba:	mov    rdi,QWORD PTR [rsp+0x20]
   1400028bf:	mov    eax,ebx
   1400028c1:	add    rsp,0x28
   1400028c5:	pop    rsi
   1400028c6:	pop    rbx
   1400028c7:	ret    
   1400028c8:	mov    WORD PTR [rsi+rdi*2],bx
   1400028cc:	mov    ebx,0x8007007a
   1400028d1:	mov    eax,ebx
   1400028d3:	mov    rdi,QWORD PTR [rsp+0x20]
   1400028d8:	add    rsp,0x28
   1400028dc:	pop    rsi
   1400028dd:	pop    rbx
   1400028de:	ret    
   1400028df:	mov    eax,r9d
   1400028e2:	test   rdx,rdx
   1400028e5:	je     0x1400028ea
   1400028e7:	mov    WORD PTR [rsi],bx
   1400028ea:	add    rsp,0x28
   1400028ee:	pop    rsi
   1400028ef:	pop    rbx
   1400028f0:	ret    
   1400028f1:	int3   
   1400028f2:	int3   
   1400028f3:	int3   
   1400028f4:	int3   
   1400028f5:	int3   
   1400028f6:	int3   
   1400028f7:	int3   
   1400028f8:	int3   
   1400028f9:	int3   
   1400028fa:	int3   
   1400028fb:	int3   
   1400028fc:	int3   
   1400028fd:	int3   
   1400028fe:	int3   
   1400028ff:	int3   
   140002900:	mov    QWORD PTR [rsp+0x8],rbx
   140002905:	mov    QWORD PTR [rsp+0x10],rsi
   14000290a:	mov    QWORD PTR [rsp+0x18],rdi
   14000290f:	push   r14
   140002911:	sub    rsp,0x20
   140002915:	mov    rax,r9
   140002918:	mov    r9,QWORD PTR [rsp+0x50]
   14000291d:	lea    rbx,[rdx-0x1]
   140002921:	mov    rsi,r8
   140002924:	mov    rdx,rbx
   140002927:	mov    r8,rax
   14000292a:	mov    r14,rcx
   14000292d:	xor    edi,edi
   14000292f:	call   0x140006154
   140002934:	test   eax,eax
   140002936:	js     0x14000294d
   140002938:	cdqe   
   14000293a:	cmp    rax,rbx
   14000293d:	ja     0x14000294d
   14000293f:	jne    0x140002948
   140002941:	mov    WORD PTR [r14+rbx*2],di
   140002946:	jmp    0x140002957
   140002948:	mov    rbx,rax
   14000294b:	jmp    0x140002957
   14000294d:	mov    WORD PTR [r14+rbx*2],di
   140002952:	mov    edi,0x8007007a
   140002957:	mov    eax,edi
   140002959:	test   rsi,rsi
   14000295c:	je     0x140002961
   14000295e:	mov    QWORD PTR [rsi],rbx
   140002961:	mov    rbx,QWORD PTR [rsp+0x30]
   140002966:	mov    rsi,QWORD PTR [rsp+0x38]
   14000296b:	mov    rdi,QWORD PTR [rsp+0x40]
   140002970:	add    rsp,0x20
   140002974:	pop    r14
   140002976:	ret    
   140002977:	int3   
   140002978:	int3   
   140002979:	int3   
   14000297a:	int3   
   14000297b:	int3   
   14000297c:	int3   
   14000297d:	int3   
   14000297e:	int3   
   14000297f:	int3   
   140002980:	test   rdx,rdx
   140002983:	je     0x14000298d
   140002985:	cmp    rdx,r8
   140002988:	ja     0x14000298d
   14000298a:	xor    eax,eax
   14000298c:	ret    
   14000298d:	mov    eax,0x80070057
   140002992:	ret    
   140002993:	int3   
   140002994:	int3   
   140002995:	int3   
   140002996:	int3   
   140002997:	int3   
   140002998:	int3   
   140002999:	int3   
   14000299a:	int3   
   14000299b:	int3   
   14000299c:	int3   
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	ret    0x0
   1400029a3:	int3   
   1400029a4:	int3   
   1400029a5:	int3   
   1400029a6:	int3   
   1400029a7:	int3   
   1400029a8:	int3   
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	mov    rax,QWORD PTR [rcx+0x10]
   1400029b4:	add    r8,r8
   1400029b7:	mov    rcx,QWORD PTR [rax+r8*8]
   1400029bb:	mov    rax,rdx
   1400029be:	mov    QWORD PTR [rdx],rcx
   1400029c1:	ret    
   1400029c2:	int3   
   1400029c3:	int3   
   1400029c4:	int3   
   1400029c5:	int3   
   1400029c6:	int3   
   1400029c7:	int3   
   1400029c8:	int3   
   1400029c9:	int3   
   1400029ca:	int3   
   1400029cb:	int3   
   1400029cc:	int3   
   1400029cd:	int3   
   1400029ce:	int3   
   1400029cf:	int3   
   1400029d0:	xor    r8d,r8d
   1400029d3:	xor    edx,edx
   1400029d5:	jmp    0x1400029e0
   1400029da:	int3   
   1400029db:	int3   
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	rex push rdi
   1400029e2:	sub    rsp,0x30
   1400029e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400029ef:	mov    QWORD PTR [rsp+0x40],rbx
   1400029f4:	mov    rdi,r8
   1400029f7:	mov    rbx,rdx
   1400029fa:	mov    ecx,0x50
   1400029ff:	call   0x14000570c
   140002a04:	mov    QWORD PTR [rsp+0x58],rax
   140002a09:	test   rax,rax
   140002a0c:	jne    0x140002a14
   140002a0e:	call   0x140005470
   140002a13:	int3   
   140002a14:	test   rbx,rbx
   140002a17:	jne    0x140002a1f
   140002a19:	mov    rbx,rax
   140002a1c:	mov    rdi,rax
   140002a1f:	mov    QWORD PTR [rax],rbx
   140002a22:	lea    rcx,[rax+0x8]
   140002a26:	test   rcx,rcx
   140002a29:	je     0x140002a2e
   140002a2b:	mov    QWORD PTR [rcx],rdi
   140002a2e:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a33:	add    rsp,0x30
   140002a37:	pop    rdi
   140002a38:	ret    
   140002a39:	int3   
   140002a3a:	int3   
   140002a3b:	int3   
   140002a3c:	int3   
   140002a3d:	int3   
   140002a3e:	int3   
   140002a3f:	int3   
   140002a40:	mov    QWORD PTR [rsp+0x20],rbx
   140002a45:	push   rsi
   140002a46:	sub    rsp,0x40
   140002a4a:	mov    rax,QWORD PTR [rcx+0x8]
   140002a4e:	mov    rbx,QWORD PTR [rcx+0x30]
   140002a52:	movss  xmm2,DWORD PTR [rip+0x29f5a]        # 0x14002c9b4
   140002a5a:	xorps  xmm0,xmm0
   140002a5d:	mov    rsi,rcx
   140002a60:	cvtsi2ss xmm0,rax
   140002a65:	test   rax,rax
   140002a68:	jns    0x140002a6e
   140002a6a:	addss  xmm0,xmm2
   140002a6e:	xorps  xmm1,xmm1
   140002a71:	cvtsi2ss xmm1,rbx
   140002a76:	test   rbx,rbx
   140002a79:	jns    0x140002a7f
   140002a7b:	addss  xmm1,xmm2
   140002a7f:	divss  xmm0,xmm1
   140002a83:	comiss xmm0,DWORD PTR [rcx+0x38]
   140002a87:	jbe    0x140002b24
   140002a8d:	mov    QWORD PTR [rsp+0x60],rdi
   140002a92:	cmp    rbx,0x200
   140002a99:	jae    0x140002aa5
   140002a9b:	lea    rbx,[rbx*8+0x0]
   140002aa3:	jmp    0x140002ab7
   140002aa5:	movabs rax,0xfffffffffffffff
   140002aaf:	cmp    rbx,rax
   140002ab2:	jae    0x140002ab7
   140002ab4:	add    rbx,rbx
   140002ab7:	mov    rax,QWORD PTR [rcx]
   140002aba:	mov    r8,QWORD PTR [rcx+0x10]
   140002abe:	add    rcx,0x10
   140002ac2:	mov    QWORD PTR [rsp+0x50],rax
   140002ac7:	lea    rax,[rsp+0x50]
   140002acc:	lea    r9,[rbx+rbx*1]
   140002ad0:	lea    rdx,[rsp+0x58]
   140002ad5:	mov    QWORD PTR [rcx+0x8],r8
   140002ad9:	mov    QWORD PTR [rsp+0x20],rax
   140002ade:	call   0x140003130
   140002ae3:	mov    rdi,QWORD PTR [rsi]
   140002ae6:	lea    rax,[rbx-0x1]
   140002aea:	mov    QWORD PTR [rsi+0x28],rax
   140002aee:	mov    QWORD PTR [rsi+0x30],rbx
   140002af2:	cmp    QWORD PTR [rdi],rdi
   140002af5:	je     0x140002b1f
   140002af7:	mov    rdi,QWORD PTR [rdi+0x8]
   140002afb:	nop    DWORD PTR [rax+rax*1+0x0]
   140002b00:	mov    rbx,QWORD PTR [rsi]
   140002b03:	lea    rdx,[rsp+0x30]
   140002b08:	mov    rcx,rsi
   140002b0b:	mov    rbx,QWORD PTR [rbx]
   140002b0e:	mov    r9,rbx
   140002b11:	lea    r8,[rbx+0x10]
   140002b15:	call   0x140001300
   140002b1a:	cmp    rbx,rdi
   140002b1d:	jne    0x140002b00
   140002b1f:	mov    rdi,QWORD PTR [rsp+0x60]
   140002b24:	mov    rbx,QWORD PTR [rsp+0x68]
   140002b29:	add    rsp,0x40
   140002b2d:	pop    rsi
   140002b2e:	ret    
   140002b2f:	int3   
   140002b30:	mov    QWORD PTR [rsp+0x8],rcx
   140002b35:	push   rdi
   140002b36:	sub    rsp,0x40
   140002b3a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002b43:	mov    QWORD PTR [rsp+0x68],rbx
   140002b48:	mov    rdi,rdx
   140002b4b:	mov    rbx,rcx
   140002b4e:	mov    rax,QWORD PTR [rdx+0x28]
   140002b52:	mov    QWORD PTR [rcx+0x28],rax
   140002b56:	mov    rax,QWORD PTR [rdx+0x30]
   140002b5a:	mov    QWORD PTR [rcx+0x30],rax
   140002b5e:	mov    eax,DWORD PTR [rdx+0x38]
   140002b61:	mov    DWORD PTR [rcx+0x38],eax
   140002b64:	call   0x140003d70
   140002b69:	nop
   140002b6a:	mov    rax,QWORD PTR [rbx]
   140002b6d:	mov    QWORD PTR [rsp+0x58],rax
   140002b72:	mov    r9,QWORD PTR [rdi+0x18]
   140002b76:	sub    r9,QWORD PTR [rdi+0x10]
   140002b7a:	sar    r9,0x3
   140002b7e:	lea    rcx,[rbx+0x10]
   140002b82:	mov    r8,QWORD PTR [rcx]
   140002b85:	mov    QWORD PTR [rcx+0x8],r8
   140002b89:	lea    rax,[rsp+0x58]
   140002b8e:	mov    QWORD PTR [rsp+0x20],rax
   140002b93:	lea    rdx,[rsp+0x60]
   140002b98:	call   0x140003130
   140002b9d:	mov    rdx,QWORD PTR [rdi]
   140002ba0:	mov    r8,rdx
   140002ba3:	mov    rdx,QWORD PTR [rdx]
   140002ba6:	mov    rcx,rbx
   140002ba9:	call   0x140001c70
   140002bae:	nop
   140002baf:	mov    rbx,QWORD PTR [rsp+0x68]
   140002bb4:	add    rsp,0x40
   140002bb8:	pop    rdi
   140002bb9:	ret    
   140002bba:	int3   
   140002bbb:	int3   
   140002bbc:	int3   
   140002bbd:	int3   
   140002bbe:	int3   
   140002bbf:	int3   
   140002bc0:	mov    QWORD PTR [rsp+0x18],r8
   140002bc5:	mov    QWORD PTR [rsp+0x10],rdx
   140002bca:	mov    QWORD PTR [rsp+0x8],rcx
   140002bcf:	push   rbx
   140002bd0:	push   rsi
   140002bd1:	push   rdi
   140002bd2:	push   r14
   140002bd4:	sub    rsp,0x38
   140002bd8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002be1:	mov    rsi,r8
   140002be4:	mov    rbx,rcx
   140002be7:	mov    rdi,rdx
   140002bea:	or     rdi,0xf
   140002bee:	cmp    rdi,0xfffffffffffffffe
   140002bf2:	jbe    0x140002bf9
   140002bf4:	mov    rdi,rdx
   140002bf7:	jmp    0x140002c2e
   140002bf9:	mov    r8,QWORD PTR [rcx+0x18]
   140002bfd:	mov    rcx,r8
   140002c00:	shr    rcx,1
   140002c03:	movabs rax,0xaaaaaaaaaaaaaaab
   140002c0d:	mul    rdi
   140002c10:	shr    rdx,1
   140002c13:	cmp    rcx,rdx
   140002c16:	jbe    0x140002c2e
   140002c18:	mov    rdi,0xfffffffffffffffe
   140002c1f:	mov    rax,rdi
   140002c22:	sub    rax,rcx
   140002c25:	cmp    r8,rax
   140002c28:	ja     0x140002c2e
   140002c2a:	lea    rdi,[rcx+r8*1]
   140002c2e:	lea    rcx,[rdi+0x1]
   140002c32:	xor    r14d,r14d
   140002c35:	test   rcx,rcx
   140002c38:	je     0x140002c53
   140002c3a:	cmp    rcx,0xffffffffffffffff
   140002c3e:	ja     0x140002c4d
   140002c40:	call   0x14000570c
   140002c45:	mov    r14,rax
   140002c48:	test   rax,rax
   140002c4b:	jne    0x140002c53
   140002c4d:	call   0x140005470
   140002c52:	nop
   140002c53:	jmp    0x140002c69
   140002c55:	mov    rbx,QWORD PTR [rsp+0x60]
   140002c5a:	mov    rsi,QWORD PTR [rsp+0x70]
   140002c5f:	mov    rdi,QWORD PTR [rsp+0x68]
   140002c64:	mov    r14,QWORD PTR [rsp+0x78]
   140002c69:	test   rsi,rsi
   140002c6c:	je     0x140002c8d
   140002c6e:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c73:	jb     0x140002c7a
   140002c75:	mov    rdx,QWORD PTR [rbx]
   140002c78:	jmp    0x140002c7d
   140002c7a:	mov    rdx,rbx
   140002c7d:	test   rsi,rsi
   140002c80:	je     0x140002c8d
   140002c82:	mov    r8,rsi
   140002c85:	mov    rcx,r14
   140002c88:	call   0x1400059f0
   140002c8d:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c92:	jb     0x140002c9c
   140002c94:	mov    rcx,QWORD PTR [rbx]
   140002c97:	call   0x140005778
   140002c9c:	mov    BYTE PTR [rbx],0x0
   140002c9f:	mov    QWORD PTR [rbx],r14
   140002ca2:	mov    QWORD PTR [rbx+0x18],rdi
   140002ca6:	mov    QWORD PTR [rbx+0x10],rsi
   140002caa:	cmp    rdi,0x10
   140002cae:	jb     0x140002cb3
   140002cb0:	mov    rbx,r14
   140002cb3:	mov    BYTE PTR [rbx+rsi*1],0x0
   140002cb7:	add    rsp,0x38
   140002cbb:	pop    r14
   140002cbd:	pop    rdi
   140002cbe:	pop    rsi
   140002cbf:	pop    rbx
   140002cc0:	ret    
   140002cc1:	int3   
   140002cc2:	int3   
   140002cc3:	int3   
   140002cc4:	int3   
   140002cc5:	int3   
   140002cc6:	int3   
   140002cc7:	int3   
   140002cc8:	int3   
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	ret    0x0
   140002cd3:	int3   
   140002cd4:	int3   
   140002cd5:	int3   
   140002cd6:	int3   
   140002cd7:	int3   
   140002cd8:	int3   
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	rex push rbx
   140002ce2:	sub    rsp,0x20
   140002ce6:	mov    rbx,rdx
   140002ce9:	mov    rdx,QWORD PTR [rdx+0x8]
   140002ced:	mov    rax,QWORD PTR [rbx]
   140002cf0:	mov    QWORD PTR [rdx],rax
   140002cf3:	mov    rdx,QWORD PTR [rbx]
   140002cf6:	mov    rax,QWORD PTR [rbx+0x8]
   140002cfa:	mov    QWORD PTR [rdx+0x8],rax
   140002cfe:	dec    QWORD PTR [rcx+0x8]
   140002d02:	cmp    QWORD PTR [rbx+0x48],0x10
   140002d07:	jb     0x140002d12
   140002d09:	mov    rcx,QWORD PTR [rbx+0x30]
   140002d0d:	call   0x140005778
   140002d12:	mov    QWORD PTR [rbx+0x48],0xf
   140002d1a:	mov    QWORD PTR [rbx+0x40],0x0
   140002d22:	mov    BYTE PTR [rbx+0x30],0x0
   140002d26:	cmp    QWORD PTR [rbx+0x28],0x10
   140002d2b:	jb     0x140002d36
   140002d2d:	mov    rcx,QWORD PTR [rbx+0x10]
   140002d31:	call   0x140005778
   140002d36:	mov    QWORD PTR [rbx+0x28],0xf
   140002d3e:	mov    QWORD PTR [rbx+0x20],0x0
   140002d46:	mov    rcx,rbx
   140002d49:	mov    BYTE PTR [rbx+0x10],0x0
   140002d4d:	call   0x140005778
   140002d52:	add    rsp,0x20
   140002d56:	pop    rbx
   140002d57:	ret    
   140002d58:	int3   
   140002d59:	int3   
   140002d5a:	int3   
   140002d5b:	int3   
   140002d5c:	int3   
   140002d5d:	int3   
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	mov    r9,QWORD PTR [rcx+0x10]
   140002d64:	mov    rax,QWORD PTR [rcx]
   140002d67:	add    r8,r8
   140002d6a:	cmp    QWORD PTR [r9+r8*8],rax
   140002d6e:	jne    0x140002d77
   140002d70:	mov    QWORD PTR [rdx],rax
   140002d73:	mov    rax,rdx
   140002d76:	ret    
   140002d77:	mov    rax,QWORD PTR [r9+r8*8+0x8]
   140002d7c:	mov    rcx,QWORD PTR [rax]
   140002d7f:	mov    rax,rdx
   140002d82:	mov    QWORD PTR [rdx],rcx
   140002d85:	ret    
   140002d86:	int3   
   140002d87:	int3   
   140002d88:	int3   
   140002d89:	int3   
   140002d8a:	int3   
   140002d8b:	int3   
   140002d8c:	int3   
   140002d8d:	int3   
   140002d8e:	int3   
   140002d8f:	int3   
   140002d90:	cmp    QWORD PTR [rcx+0x18],0x10
   140002d95:	mov    QWORD PTR [rcx+0x10],rdx
   140002d99:	jb     0x140002da3
   140002d9b:	mov    rax,QWORD PTR [rcx]
   140002d9e:	mov    BYTE PTR [rax+rdx*1],0x0
   140002da2:	ret    
   140002da3:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002da7:	ret    
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	mov    rcx,rdx
   140002db3:	jmp    0x140005778
   140002db8:	int3   
   140002db9:	int3   
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	rex push rbx
   140002dc2:	sub    rsp,0x20
   140002dc6:	cmp    QWORD PTR [rdx+0x48],0x10
   140002dcb:	mov    rbx,rdx
   140002dce:	jb     0x140002dd9
   140002dd0:	mov    rcx,QWORD PTR [rdx+0x30]
   140002dd4:	call   0x140005778
   140002dd9:	mov    QWORD PTR [rbx+0x48],0xf
   140002de1:	mov    QWORD PTR [rbx+0x40],0x0
   140002de9:	mov    BYTE PTR [rbx+0x30],0x0
   140002ded:	cmp    QWORD PTR [rbx+0x28],0x10
   140002df2:	jb     0x140002dfd
   140002df4:	mov    rcx,QWORD PTR [rbx+0x10]
   140002df8:	call   0x140005778
   140002dfd:	mov    QWORD PTR [rbx+0x28],0xf
   140002e05:	mov    QWORD PTR [rbx+0x20],0x0
   140002e0d:	mov    rcx,rbx
   140002e10:	mov    BYTE PTR [rbx+0x10],0x0
   140002e14:	add    rsp,0x20
   140002e18:	pop    rbx
   140002e19:	jmp    0x140005778
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	mov    rax,rdx
   140002e23:	ret    
   140002e24:	int3   
   140002e25:	int3   
   140002e26:	int3   
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	mov    rax,rdx
   140002e33:	ret    
   140002e34:	int3   
   140002e35:	int3   
   140002e36:	int3   
   140002e37:	int3   
   140002e38:	int3   
   140002e39:	int3   
   140002e3a:	int3   
   140002e3b:	int3   
   140002e3c:	int3   
   140002e3d:	int3   
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	mov    rax,rdx
   140002e43:	ret    
   140002e44:	int3   
   140002e45:	int3   
   140002e46:	int3   
   140002e47:	int3   
   140002e48:	int3   
   140002e49:	int3   
   140002e4a:	int3   
   140002e4b:	int3   
   140002e4c:	int3   
   140002e4d:	int3   
   140002e4e:	int3   
   140002e4f:	int3   
   140002e50:	mov    rax,rdx
   140002e53:	ret    
   140002e54:	int3   
   140002e55:	int3   
   140002e56:	int3   
   140002e57:	int3   
   140002e58:	int3   
   140002e59:	int3   
   140002e5a:	int3   
   140002e5b:	int3   
   140002e5c:	int3   
   140002e5d:	int3   
   140002e5e:	int3   
   140002e5f:	int3   
   140002e60:	mov    rax,rdx
   140002e63:	ret    
   140002e64:	int3   
   140002e65:	int3   
   140002e66:	int3   
   140002e67:	int3   
   140002e68:	int3   
   140002e69:	int3   
   140002e6a:	int3   
   140002e6b:	int3   
   140002e6c:	int3   
   140002e6d:	int3   
   140002e6e:	int3   
   140002e6f:	int3   
   140002e70:	mov    QWORD PTR [rsp+0x20],rbx
   140002e75:	push   rdi
   140002e76:	sub    rsp,0x20
   140002e7a:	mov    rdi,rdx
   140002e7d:	mov    rbx,rcx
   140002e80:	cmp    rdx,0xfffffffffffffffe
   140002e84:	ja     0x140002f2d
   140002e8a:	mov    rax,QWORD PTR [rcx+0x18]
   140002e8e:	mov    QWORD PTR [rsp+0x30],rbp
   140002e93:	xor    ebp,ebp
   140002e95:	cmp    rax,rdx
   140002e98:	jae    0x140002ea5
   140002e9a:	mov    r8,QWORD PTR [rcx+0x10]
   140002e9e:	call   0x140002bc0
   140002ea3:	jmp    0x140002f17
   140002ea5:	test   r8b,r8b
   140002ea8:	je     0x140002f02
   140002eaa:	cmp    rdx,0x10
   140002eae:	jae    0x140002f02
   140002eb0:	mov    QWORD PTR [rsp+0x38],rsi
   140002eb5:	mov    rsi,QWORD PTR [rcx+0x10]
   140002eb9:	cmp    rdx,rsi
   140002ebc:	cmovb  rsi,rdx
   140002ec0:	cmp    rax,0x10
   140002ec4:	jb     0x140002eeb
   140002ec6:	mov    QWORD PTR [rsp+0x40],r14
   140002ecb:	mov    r14,QWORD PTR [rcx]
   140002ece:	test   rsi,rsi
   140002ed1:	je     0x140002ede
   140002ed3:	mov    r8,rsi
   140002ed6:	mov    rdx,r14
   140002ed9:	call   0x1400059f0
   140002ede:	mov    rcx,r14
   140002ee1:	call   0x140005778
   140002ee6:	mov    r14,QWORD PTR [rsp+0x40]
   140002eeb:	mov    QWORD PTR [rbx+0x10],rsi
   140002eef:	mov    QWORD PTR [rbx+0x18],0xf
   140002ef7:	mov    BYTE PTR [rsi+rbx*1],bpl
   140002efb:	mov    rsi,QWORD PTR [rsp+0x38]
   140002f00:	jmp    0x140002f17
   140002f02:	test   rdx,rdx
   140002f05:	jne    0x140002f17
   140002f07:	mov    QWORD PTR [rcx+0x10],rbp
   140002f0b:	cmp    rax,0x10
   140002f0f:	jb     0x140002f14
   140002f11:	mov    rbx,QWORD PTR [rcx]
   140002f14:	mov    BYTE PTR [rbx],bpl
   140002f17:	mov    rbp,QWORD PTR [rsp+0x30]
   140002f1c:	mov    rbx,QWORD PTR [rsp+0x48]
   140002f21:	test   rdi,rdi
   140002f24:	setne  al
   140002f27:	add    rsp,0x20
   140002f2b:	pop    rdi
   140002f2c:	ret    
   140002f2d:	lea    rcx,[rip+0x29a2c]        # 0x14002c960
   140002f34:	call   0x140005518
   140002f39:	int3   
   140002f3a:	int3   
   140002f3b:	int3   
   140002f3c:	int3   
   140002f3d:	int3   
   140002f3e:	int3   
   140002f3f:	int3   
   140002f40:	mov    r8,QWORD PTR [rcx+0x10]
   140002f44:	movabs rax,0x1fffffffffffffff
   140002f4e:	sub    r8,QWORD PTR [rcx]
   140002f51:	sar    r8,0x3
   140002f55:	mov    rcx,r8
   140002f58:	shr    rcx,1
   140002f5b:	sub    rax,rcx
   140002f5e:	cmp    rax,r8
   140002f61:	jae    0x140002f71
   140002f63:	xor    r8d,r8d
   140002f66:	cmp    r8,rdx
   140002f69:	cmovb  r8,rdx
   140002f6d:	mov    rax,r8
   140002f70:	ret    
   140002f71:	add    r8,rcx
   140002f74:	cmp    r8,rdx
   140002f77:	cmovb  r8,rdx
   140002f7b:	mov    rax,r8
   140002f7e:	ret    
   140002f7f:	int3   
   140002f80:	xor    r9d,r9d
   140002f83:	movabs rax,0xcbf29ce484222325
   140002f8d:	test   rdx,rdx
   140002f90:	je     0x140002fb4
   140002f92:	movabs r10,0x100000001b3
   140002f9c:	nop    DWORD PTR [rax+0x0]
   140002fa0:	movzx  r8d,BYTE PTR [r9+rcx*1]
   140002fa5:	inc    r9
   140002fa8:	xor    rax,r8
   140002fab:	imul   rax,r10
   140002faf:	cmp    r9,rdx
   140002fb2:	jb     0x140002fa0
   140002fb4:	mov    rcx,rax
   140002fb7:	shr    rcx,0x20
   140002fbb:	xor    rax,rcx
   140002fbe:	ret    
   140002fbf:	int3   
   140002fc0:	cmp    QWORD PTR [rdx+0x18],0x10
   140002fc5:	mov    r9,QWORD PTR [rdx+0x10]
   140002fc9:	mov    r8,rdx
   140002fcc:	mov    r10,rcx
   140002fcf:	jb     0x140002fd4
   140002fd1:	mov    r8,QWORD PTR [rdx]
   140002fd4:	xor    edx,edx
   140002fd6:	movabs rcx,0xcbf29ce484222325
   140002fe0:	test   r9,r9
   140002fe3:	je     0x140003004
   140002fe5:	movabs r11,0x100000001b3
   140002fef:	nop
   140002ff0:	movzx  eax,BYTE PTR [r8+rdx*1]
   140002ff5:	inc    rdx
   140002ff8:	xor    rcx,rax
   140002ffb:	imul   rcx,r11
   140002fff:	cmp    rdx,r9
   140003002:	jb     0x140002ff0
   140003004:	mov    rdx,QWORD PTR [r10+0x28]
   140003008:	mov    rax,rcx
   14000300b:	shr    rax,0x20
   14000300f:	xor    rax,rcx
   140003012:	and    rax,rdx
   140003015:	cmp    QWORD PTR [r10+0x30],rax
   140003019:	ja     0x140003028
   14000301b:	shr    rdx,1
   14000301e:	or     rcx,0xffffffffffffffff
   140003022:	sub    rcx,rdx
   140003025:	add    rax,rcx
   140003028:	ret    
   140003029:	int3   
   14000302a:	int3   
   14000302b:	int3   
   14000302c:	int3   
   14000302d:	int3   
   14000302e:	int3   
   14000302f:	int3   
   140003030:	sub    rsp,0x28
   140003034:	mov    r8,QWORD PTR [rcx+0x8]
   140003038:	movabs rax,0x333333333333332
   140003042:	sub    rax,r8
   140003045:	cmp    rax,rdx
   140003048:	jb     0x140003057
   14000304a:	lea    rax,[r8+rdx*1]
   14000304e:	mov    QWORD PTR [rcx+0x8],rax
   140003052:	add    rsp,0x28
   140003056:	ret    
   140003057:	lea    rcx,[rip+0x29942]        # 0x14002c9a0
   14000305e:	call   0x140005518
   140003063:	int3   
   140003064:	int3   
   140003065:	int3   
   140003066:	int3   
   140003067:	int3   
   140003068:	int3   
   140003069:	int3   
   14000306a:	int3   
   14000306b:	int3   
   14000306c:	int3   
   14000306d:	int3   
   14000306e:	int3   
   14000306f:	int3   
   140003070:	mov    QWORD PTR [rsp+0x18],rbx
   140003075:	push   rdi
   140003076:	sub    rsp,0x30
   14000307a:	mov    rax,QWORD PTR [rcx]
   14000307d:	mov    r8,QWORD PTR [rcx+0x10]
   140003081:	mov    rbx,rcx
   140003084:	add    rcx,0x10
   140003088:	mov    QWORD PTR [rsp+0x40],rax
   14000308d:	mov    rdi,rdx
   140003090:	lea    rax,[rsp+0x40]
   140003095:	lea    r9,[rdx+rdx*1]
   140003099:	lea    rdx,[rsp+0x48]
   14000309e:	mov    QWORD PTR [rsp+0x20],rax
   1400030a3:	mov    QWORD PTR [rcx+0x8],r8
   1400030a7:	call   0x140003130
   1400030ac:	lea    rax,[rdi-0x1]
   1400030b0:	mov    QWORD PTR [rbx+0x30],rdi
   1400030b4:	mov    QWORD PTR [rbx+0x28],rax
   1400030b8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400030bd:	add    rsp,0x30
   1400030c1:	pop    rdi
   1400030c2:	ret    
   1400030c3:	int3   
   1400030c4:	int3   
   1400030c5:	int3   
   1400030c6:	int3   
   1400030c7:	int3   
   1400030c8:	int3   
   1400030c9:	int3   
   1400030ca:	int3   
   1400030cb:	int3   
   1400030cc:	int3   
   1400030cd:	int3   
   1400030ce:	int3   
   1400030cf:	int3   
   1400030d0:	mov    r10,QWORD PTR [rcx+0x10]
   1400030d4:	shl    r9,0x4
   1400030d8:	mov    QWORD PTR [rsp+0x10],rdx
   1400030dd:	add    r10,r9
   1400030e0:	mov    r11,rcx
   1400030e3:	mov    rax,QWORD PTR [r10]
   1400030e6:	cmp    rax,QWORD PTR [rcx]
   1400030e9:	jne    0x1400030fd
   1400030eb:	mov    QWORD PTR [r10],rdx
   1400030ee:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030f2:	mov    rax,QWORD PTR [rsp+0x10]
   1400030f7:	mov    QWORD PTR [r9+rcx*1+0x8],rax
   1400030fc:	ret    
   1400030fd:	cmp    rax,r8
   140003100:	jne    0x140003106
   140003102:	mov    QWORD PTR [r10],rdx
   140003105:	ret    
   140003106:	mov    rax,QWORD PTR [r10+0x8]
   14000310a:	mov    rcx,QWORD PTR [rax]
   14000310d:	mov    QWORD PTR [r10+0x8],rcx
   140003111:	cmp    rcx,QWORD PTR [rsp+0x10]
   140003116:	je     0x14000312a
   140003118:	mov    rdx,QWORD PTR [r11+0x10]
   14000311c:	mov    rax,QWORD PTR [rdx+r9*1+0x8]
   140003121:	mov    rcx,QWORD PTR [rax+0x8]
   140003125:	mov    QWORD PTR [rdx+r9*1+0x8],rcx
   14000312a:	ret    
   14000312b:	int3   
   14000312c:	int3   
   14000312d:	int3   
   14000312e:	int3   
   14000312f:	int3   
   140003130:	mov    QWORD PTR [rsp+0x18],r8
   140003135:	mov    QWORD PTR [rsp+0x10],rdx
   14000313a:	push   rbx
   14000313b:	push   rsi
   14000313c:	push   rdi
   14000313d:	push   r12
   14000313f:	push   r13
   140003141:	push   r14
   140003143:	push   r15
   140003145:	sub    rsp,0x40
   140003149:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140003152:	mov    rdi,r9
   140003155:	mov    r12,r8
   140003158:	mov    r15,rcx
   14000315b:	mov    rcx,QWORD PTR [rcx]
   14000315e:	mov    r13,r8
   140003161:	sub    r13,rcx
   140003164:	sar    r13,0x3
   140003168:	test   r9,r9
   14000316b:	je     0x140003458
   140003171:	mov    rbx,QWORD PTR [r15+0x10]
   140003175:	mov    r14,QWORD PTR [r15+0x8]
   140003179:	mov    rax,rbx
   14000317c:	sub    rax,r14
   14000317f:	sar    rax,0x3
   140003183:	cmp    rax,r9
   140003186:	jae    0x1400032eb
   14000318c:	sub    r14,rcx
   14000318f:	sar    r14,0x3
   140003193:	movabs r8,0x1fffffffffffffff
   14000319d:	mov    rax,r8
   1400031a0:	sub    rax,r14
   1400031a3:	cmp    rax,r9
   1400031a6:	jae    0x1400031b5
   1400031a8:	lea    rcx,[rip+0x297d9]        # 0x14002c988
   1400031af:	call   0x140005518
   1400031b4:	int3   
   1400031b5:	lea    rdx,[r14+r9*1]
   1400031b9:	sub    rbx,rcx
   1400031bc:	sar    rbx,0x3
   1400031c0:	mov    rcx,rbx
   1400031c3:	shr    rcx,1
   1400031c6:	mov    rax,r8
   1400031c9:	sub    rax,rcx
   1400031cc:	cmp    rax,rbx
   1400031cf:	jae    0x1400031d7
   1400031d1:	xor    esi,esi
   1400031d3:	mov    ebx,esi
   1400031d5:	jmp    0x1400031dc
   1400031d7:	add    rbx,rcx
   1400031da:	xor    esi,esi
   1400031dc:	cmp    rbx,rdx
   1400031df:	cmovb  rbx,rdx
   1400031e3:	mov    r14,rsi
   1400031e6:	mov    QWORD PTR [rsp+0x98],rsi
   1400031ee:	test   rbx,rbx
   1400031f1:	je     0x140003225
   1400031f3:	cmp    rbx,r8
   1400031f6:	ja     0x14000321f
   1400031f8:	lea    rcx,[rbx*8+0x0]
   140003200:	call   0x14000570c
   140003205:	mov    r14,rax
   140003208:	mov    QWORD PTR [rsp+0x98],rax
   140003210:	test   rax,rax
   140003213:	je     0x14000321f
   140003215:	mov    r12,QWORD PTR [rsp+0x90]
   14000321d:	jmp    0x140003225
   14000321f:	call   0x140005470
   140003224:	int3   
   140003225:	sub    r12,QWORD PTR [r15]
   140003228:	sar    r12,0x3
   14000322c:	lea    rcx,[r14+r12*8]
   140003230:	movzx  eax,BYTE PTR [rsp+0x90]
   140003238:	mov    BYTE PTR [rsp+0x28],al
   14000323c:	mov    QWORD PTR [rsp+0x20],rsi
   140003241:	lea    r9,[rsp+0x80]
   140003249:	mov    r8,QWORD PTR [rsp+0xa0]
   140003251:	mov    rdx,rdi
   140003254:	call   0x140001620
   140003259:	movzx  eax,BYTE PTR [rsp+0x90]
   140003261:	mov    BYTE PTR [rsp+0x28],al
   140003265:	mov    QWORD PTR [rsp+0x20],rsi
   14000326a:	lea    r9,[rsp+0x80]
   140003272:	mov    r8,r14
   140003275:	mov    rdx,QWORD PTR [rsp+0x90]
   14000327d:	mov    rcx,QWORD PTR [r15]
   140003280:	call   0x140001670
   140003285:	lea    rax,[r12+rdi*1]
   140003289:	lea    r8,[r14+rax*8]
   14000328d:	movzx  eax,BYTE PTR [rsp+0x90]
   140003295:	mov    BYTE PTR [rsp+0x28],al
   140003299:	mov    QWORD PTR [rsp+0x20],rsi
   14000329e:	lea    r9,[rsp+0x80]
   1400032a6:	mov    rdx,QWORD PTR [r15+0x8]
   1400032aa:	mov    rcx,QWORD PTR [rsp+0x90]
   1400032b2:	call   0x140001670
   1400032b7:	nop
   1400032b8:	mov    rcx,QWORD PTR [r15]
   1400032bb:	mov    rax,QWORD PTR [r15+0x8]
   1400032bf:	sub    rax,rcx
   1400032c2:	sar    rax,0x3
   1400032c6:	add    rdi,rax
   1400032c9:	test   rcx,rcx
   1400032cc:	je     0x1400032d3
   1400032ce:	call   0x140005778
   1400032d3:	lea    rax,[r14+rbx*8]
   1400032d7:	mov    QWORD PTR [r15+0x10],rax
   1400032db:	lea    rax,[r14+rdi*8]
   1400032df:	mov    QWORD PTR [r15+0x8],rax
   1400032e3:	mov    QWORD PTR [r15],r14
   1400032e6:	jmp    0x140003458
   1400032eb:	mov    rax,r14
   1400032ee:	sub    rax,r8
   1400032f1:	sar    rax,0x3
   1400032f5:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400032fd:	xor    esi,esi
   1400032ff:	mov    rdx,r14
   140003302:	mov    rbx,QWORD PTR [rbx]
   140003305:	cmp    rax,r9
   140003308:	jae    0x1400033d4
   14000330e:	mov    QWORD PTR [rsp+0x98],rbx
   140003316:	lea    rax,[r9*8+0x0]
   14000331e:	mov    QWORD PTR [rsp+0x30],rax
   140003323:	add    r8,rax
   140003326:	movzx  eax,BYTE PTR [rsp+0x90]
   14000332e:	mov    BYTE PTR [rsp+0x28],al
   140003332:	mov    QWORD PTR [rsp+0x20],rsi
   140003337:	lea    r9,[rsp+0x80]
   14000333f:	mov    rcx,r12
   140003342:	call   0x140001670
   140003347:	nop
   140003348:	mov    rcx,QWORD PTR [r15+0x8]
   14000334c:	mov    rax,rcx
   14000334f:	sub    rax,QWORD PTR [rsp+0x90]
   140003357:	sar    rax,0x3
   14000335b:	sub    rdi,rax
   14000335e:	movzx  eax,BYTE PTR [rsp+0x90]
   140003366:	mov    BYTE PTR [rsp+0x28],al
   14000336a:	mov    QWORD PTR [rsp+0x20],rsi
   14000336f:	lea    r9,[rsp+0x80]
   140003377:	lea    r8,[rsp+0x98]
   14000337f:	mov    rdx,rdi
   140003382:	call   0x140001620
   140003387:	nop
   140003388:	mov    rcx,QWORD PTR [rsp+0x30]
   14000338d:	add    QWORD PTR [r15+0x8],rcx
   140003391:	mov    rax,QWORD PTR [r15+0x8]
   140003395:	sub    rax,rcx
   140003398:	mov    rcx,QWORD PTR [rsp+0x90]
   1400033a0:	mov    rdx,rax
   1400033a3:	sub    rdx,rcx
   1400033a6:	add    rdx,0x7
   1400033aa:	shr    rdx,0x3
   1400033ae:	cmp    rcx,rax
   1400033b1:	cmova  rdx,rsi
   1400033b5:	test   rdx,rdx
   1400033b8:	je     0x140003458
   1400033be:	xchg   ax,ax
   1400033c0:	mov    QWORD PTR [rcx],rbx
   1400033c3:	lea    rcx,[rcx+0x8]
   1400033c7:	inc    rsi
   1400033ca:	cmp    rsi,rdx
   1400033cd:	jne    0x1400033c0
   1400033cf:	jmp    0x140003458
   1400033d4:	lea    r12,[r9*8+0x0]
   1400033dc:	mov    rdi,r14
   1400033df:	sub    rdi,r12
   1400033e2:	movzx  eax,BYTE PTR [rsp+0x90]
   1400033ea:	mov    BYTE PTR [rsp+0x28],al
   1400033ee:	mov    QWORD PTR [rsp+0x20],rsi
   1400033f3:	lea    r9,[rsp+0x80]
   1400033fb:	mov    r8,r14
   1400033fe:	mov    rcx,rdi
   140003401:	call   0x140001670
   140003406:	mov    QWORD PTR [r15+0x8],rax
   14000340a:	mov    rdx,QWORD PTR [rsp+0x90]
   140003412:	cmp    rdx,rdi
   140003415:	je     0x140003438
   140003417:	sub    r14,rdi
   14000341a:	nop    WORD PTR [rax+rax*1+0x0]
   140003420:	sub    rdi,0x8
   140003424:	mov    rax,QWORD PTR [rdi]
   140003427:	mov    QWORD PTR [rdi+r14*1],rax
   14000342b:	mov    rdx,QWORD PTR [rsp+0x90]
   140003433:	cmp    rdx,rdi
   140003436:	jne    0x140003420
   140003438:	lea    rax,[r12+rdx*1]
   14000343c:	cmp    rdx,rax
   14000343f:	je     0x140003458
   140003441:	mov    QWORD PTR [rdx],rbx
   140003444:	add    rdx,0x8
   140003448:	mov    rcx,QWORD PTR [rsp+0x90]
   140003450:	add    rcx,r12
   140003453:	cmp    rdx,rcx
   140003456:	jne    0x140003441
   140003458:	mov    rax,QWORD PTR [r15]
   14000345b:	lea    rcx,[rax+r13*8]
   14000345f:	mov    rax,QWORD PTR [rsp+0x88]
   140003467:	mov    QWORD PTR [rax],rcx
   14000346a:	add    rsp,0x40
   14000346e:	pop    r15
   140003470:	pop    r14
   140003472:	pop    r13
   140003474:	pop    r12
   140003476:	pop    rdi
   140003477:	pop    rsi
   140003478:	pop    rbx
   140003479:	ret    
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	int3   
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	test   rdx,rdx
   140003483:	je     0x1400034ba
   140003485:	mov    rax,QWORD PTR [rcx+0x18]
   140003489:	cmp    rax,0x10
   14000348d:	jb     0x140003494
   14000348f:	mov    r8,QWORD PTR [rcx]
   140003492:	jmp    0x140003497
   140003494:	mov    r8,rcx
   140003497:	cmp    rdx,r8
   14000349a:	jb     0x1400034ba
   14000349c:	cmp    rax,0x10
   1400034a0:	jb     0x1400034a7
   1400034a2:	mov    r8,QWORD PTR [rcx]
   1400034a5:	jmp    0x1400034aa
   1400034a7:	mov    r8,rcx
   1400034aa:	mov    rax,QWORD PTR [rcx+0x10]
   1400034ae:	lea    rcx,[r8+rax*1]
   1400034b2:	cmp    rcx,rdx
   1400034b5:	jbe    0x1400034ba
   1400034b7:	mov    al,0x1
   1400034b9:	ret    
   1400034ba:	xor    al,al
   1400034bc:	ret    
   1400034bd:	int3   
   1400034be:	int3   
   1400034bf:	int3   
   1400034c0:	mov    QWORD PTR [rdx],r8
   1400034c3:	mov    rax,rdx
   1400034c6:	ret    
   1400034c7:	int3   
   1400034c8:	int3   
   1400034c9:	int3   
   1400034ca:	int3   
   1400034cb:	int3   
   1400034cc:	int3   
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	mov    QWORD PTR [rdx],r8
   1400034d3:	mov    rax,rdx
   1400034d6:	ret    
   1400034d7:	int3   
   1400034d8:	int3   
   1400034d9:	int3   
   1400034da:	int3   
   1400034db:	int3   
   1400034dc:	int3   
   1400034dd:	int3   
   1400034de:	int3   
   1400034df:	int3   
   1400034e0:	mov    QWORD PTR [rdx],r8
   1400034e3:	mov    rax,rdx
   1400034e6:	ret    
   1400034e7:	int3   
   1400034e8:	int3   
   1400034e9:	int3   
   1400034ea:	int3   
   1400034eb:	int3   
   1400034ec:	int3   
   1400034ed:	int3   
   1400034ee:	int3   
   1400034ef:	int3   
   1400034f0:	mov    rax,QWORD PTR [rcx]
   1400034f3:	ret    
   1400034f4:	int3   
   1400034f5:	int3   
   1400034f6:	int3   
   1400034f7:	int3   
   1400034f8:	int3   
   1400034f9:	int3   
   1400034fa:	int3   
   1400034fb:	int3   
   1400034fc:	int3   
   1400034fd:	int3   
   1400034fe:	int3   
   1400034ff:	int3   
   140003500:	cmp    QWORD PTR [rcx+0x18],0x10
   140003505:	jb     0x14000350b
   140003507:	mov    rax,QWORD PTR [rcx]
   14000350a:	ret    
   14000350b:	mov    rax,rcx
   14000350e:	ret    
   14000350f:	int3   
   140003510:	cmp    QWORD PTR [rcx+0x18],0x10
   140003515:	jb     0x14000351b
   140003517:	mov    rax,QWORD PTR [rcx]
   14000351a:	ret    
   14000351b:	mov    rax,rcx
   14000351e:	ret    
   14000351f:	int3   
   140003520:	lea    rax,[rcx+0x10]
   140003524:	ret    
   140003525:	int3   
   140003526:	int3   
   140003527:	int3   
   140003528:	int3   
   140003529:	int3   
   14000352a:	int3   
   14000352b:	int3   
   14000352c:	int3   
   14000352d:	int3   
   14000352e:	int3   
   14000352f:	int3   
   140003530:	mov    rax,rcx
   140003533:	ret    
   140003534:	int3   
   140003535:	int3   
   140003536:	int3   
   140003537:	int3   
   140003538:	int3   
   140003539:	int3   
   14000353a:	int3   
   14000353b:	int3   
   14000353c:	int3   
   14000353d:	int3   
   14000353e:	int3   
   14000353f:	int3   
   140003540:	ret    0x0
   140003543:	int3   
   140003544:	int3   
   140003545:	int3   
   140003546:	int3   
   140003547:	int3   
   140003548:	int3   
   140003549:	int3   
   14000354a:	int3   
   14000354b:	int3   
   14000354c:	int3   
   14000354d:	int3   
   14000354e:	int3   
   14000354f:	int3   
   140003550:	ret    0x0
   140003553:	int3   
   140003554:	int3   
   140003555:	int3   
   140003556:	int3   
   140003557:	int3   
   140003558:	int3   
   140003559:	int3   
   14000355a:	int3   
   14000355b:	int3   
   14000355c:	int3   
   14000355d:	int3   
   14000355e:	int3   
   14000355f:	int3   
   140003560:	lea    rax,[rcx+0x8]
   140003564:	ret    
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	int3   
   140003569:	int3   
   14000356a:	int3   
   14000356b:	int3   
   14000356c:	int3   
   14000356d:	int3   
   14000356e:	int3   
   14000356f:	int3   
   140003570:	rex push rsi
   140003572:	sub    rsp,0x30
   140003576:	mov    rax,QWORD PTR [rcx]
   140003579:	mov    rsi,rcx
   14000357c:	cmp    QWORD PTR [rax],rax
   14000357f:	je     0x1400035b9
   140003581:	mov    QWORD PTR [rsp+0x40],rbx
   140003586:	mov    QWORD PTR [rsp+0x48],rdi
   14000358b:	mov    rdi,QWORD PTR [rax+0x8]
   14000358f:	nop
   140003590:	mov    rbx,QWORD PTR [rsi]
   140003593:	lea    rdx,[rsp+0x20]
   140003598:	mov    rcx,rsi
   14000359b:	mov    rbx,QWORD PTR [rbx]
   14000359e:	mov    r9,rbx
   1400035a1:	lea    r8,[rbx+0x10]
   1400035a5:	call   0x140001300
   1400035aa:	cmp    rbx,rdi
   1400035ad:	jne    0x140003590
   1400035af:	mov    rdi,QWORD PTR [rsp+0x48]
   1400035b4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400035b9:	add    rsp,0x30
   1400035bd:	pop    rsi
   1400035be:	ret    
   1400035bf:	int3   
   1400035c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400035c5:	push   rdi
   1400035c6:	sub    rsp,0x20
   1400035ca:	mov    rdi,r8
   1400035cd:	mov    rbx,rcx
   1400035d0:	test   dl,dl
   1400035d2:	je     0x1400035fd
   1400035d4:	cmp    QWORD PTR [rcx+0x18],0x10
   1400035d9:	jb     0x1400035fd
   1400035db:	mov    QWORD PTR [rsp+0x30],rsi
   1400035e0:	mov    rsi,QWORD PTR [rcx]
   1400035e3:	test   r8,r8
   1400035e6:	je     0x1400035f0
   1400035e8:	mov    rdx,rsi
   1400035eb:	call   0x1400059f0
   1400035f0:	mov    rcx,rsi
   1400035f3:	call   0x140005778
   1400035f8:	mov    rsi,QWORD PTR [rsp+0x30]
   1400035fd:	mov    QWORD PTR [rbx+0x18],0xf
   140003605:	mov    QWORD PTR [rbx+0x10],rdi
   140003609:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000360d:	mov    rbx,QWORD PTR [rsp+0x38]
   140003612:	add    rsp,0x20
   140003616:	pop    rdi
   140003617:	ret    
   140003618:	int3   
   140003619:	int3   
   14000361a:	int3   
   14000361b:	int3   
   14000361c:	int3   
   14000361d:	int3   
   14000361e:	int3   
   14000361f:	int3   
   140003620:	jmp    0x140003d70
   140003625:	int3   
   140003626:	int3   
   140003627:	int3   
   140003628:	int3   
   140003629:	int3   
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	rex push rbx
   140003632:	sub    rsp,0x20
   140003636:	mov    rbx,rcx
   140003639:	mov    rcx,QWORD PTR [rcx]
   14000363c:	test   rcx,rcx
   14000363f:	je     0x140003653
   140003641:	call   0x140005778
   140003646:	xor    eax,eax
   140003648:	mov    QWORD PTR [rbx],rax
   14000364b:	mov    QWORD PTR [rbx+0x8],rax
   14000364f:	mov    QWORD PTR [rbx+0x10],rax
   140003653:	add    rsp,0x20
   140003657:	pop    rbx
   140003658:	ret    
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	mov    QWORD PTR [rsp+0x8],rbx
   140003665:	push   rdi
   140003666:	sub    rsp,0x30
   14000366a:	movzx  eax,BYTE PTR [rsp+0x48]
   14000366f:	mov    r10,r9
   140003672:	mov    rdi,r8
   140003675:	mov    rbx,rdx
   140003678:	mov    BYTE PTR [rsp+0x28],al
   14000367c:	lea    r9,[rsp+0x48]
   140003681:	mov    r8,r10
   140003684:	mov    rdx,rdi
   140003687:	mov    rcx,rbx
   14000368a:	mov    QWORD PTR [rsp+0x20],0x0
   140003693:	call   0x140001620
   140003698:	lea    rax,[rbx+rdi*8]
   14000369c:	mov    rbx,QWORD PTR [rsp+0x40]
   1400036a1:	add    rsp,0x30
   1400036a5:	pop    rdi
   1400036a6:	ret    
   1400036a7:	int3   
   1400036a8:	int3   
   1400036a9:	int3   
   1400036aa:	int3   
   1400036ab:	int3   
   1400036ac:	int3   
   1400036ad:	int3   
   1400036ae:	int3   
   1400036af:	int3   
   1400036b0:	mov    rax,QWORD PTR [rcx]
   1400036b3:	mov    rcx,QWORD PTR [rax]
   1400036b6:	mov    rax,rdx
   1400036b9:	mov    QWORD PTR [rdx],rcx
   1400036bc:	ret    
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	mov    rax,QWORD PTR [rcx]
   1400036c3:	mov    rcx,QWORD PTR [rax]
   1400036c6:	mov    rax,rdx
   1400036c9:	mov    QWORD PTR [rdx],rcx
   1400036cc:	ret    
   1400036cd:	int3   
   1400036ce:	int3   
   1400036cf:	int3   
   1400036d0:	mov    rax,QWORD PTR [rcx]
   1400036d3:	mov    QWORD PTR [rdx],rax
   1400036d6:	mov    rax,rdx
   1400036d9:	ret    
   1400036da:	int3   
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	mov    rax,QWORD PTR [rcx]
   1400036e3:	mov    QWORD PTR [rdx],rax
   1400036e6:	mov    rax,rdx
   1400036e9:	ret    
   1400036ea:	int3   
   1400036eb:	int3   
   1400036ec:	int3   
   1400036ed:	int3   
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400036f5:	mov    r11,rsp
   1400036f8:	mov    QWORD PTR [r11+0x20],r9
   1400036fc:	mov    QWORD PTR [r11+0x18],r8
   140003700:	mov    rax,QWORD PTR [r8+0x8]
   140003704:	mov    QWORD PTR [rax],r9
   140003707:	mov    rax,QWORD PTR [r11+0x20]
   14000370b:	mov    rcx,QWORD PTR [rax+0x8]
   14000370f:	mov    rax,QWORD PTR [r11+0x10]
   140003713:	mov    QWORD PTR [rcx],rax
   140003716:	mov    rax,QWORD PTR [r11+0x10]
   14000371a:	mov    rcx,QWORD PTR [rax+0x8]
   14000371e:	mov    rax,QWORD PTR [r11+0x18]
   140003722:	mov    QWORD PTR [rcx],rax
   140003725:	mov    rax,QWORD PTR [r11+0x20]
   140003729:	mov    rdx,QWORD PTR [r11+0x10]
   14000372d:	mov    rcx,QWORD PTR [rax+0x8]
   140003731:	mov    r8,QWORD PTR [rdx+0x8]
   140003735:	mov    QWORD PTR [rdx+0x8],rcx
   140003739:	mov    rax,QWORD PTR [r11+0x18]
   14000373d:	mov    rcx,QWORD PTR [rax+0x8]
   140003741:	mov    rax,QWORD PTR [r11+0x20]
   140003745:	mov    QWORD PTR [rax+0x8],rcx
   140003749:	mov    rax,QWORD PTR [r11+0x18]
   14000374d:	mov    QWORD PTR [rax+0x8],r8
   140003751:	ret    
   140003752:	int3   
   140003753:	int3   
   140003754:	int3   
   140003755:	int3   
   140003756:	int3   
   140003757:	int3   
   140003758:	int3   
   140003759:	int3   
   14000375a:	int3   
   14000375b:	int3   
   14000375c:	int3   
   14000375d:	int3   
   14000375e:	int3   
   14000375f:	int3   
   140003760:	mov    r8,QWORD PTR [rdx+0x8]
   140003764:	mov    rax,rdx
   140003767:	mov    rdx,QWORD PTR [rdx]
   14000376a:	mov    QWORD PTR [r8],rdx
   14000376d:	mov    r8,QWORD PTR [rax]
   140003770:	mov    rdx,QWORD PTR [rax+0x8]
   140003774:	mov    QWORD PTR [r8+0x8],rdx
   140003778:	dec    QWORD PTR [rcx+0x8]
   14000377c:	ret    
   14000377d:	int3   
   14000377e:	int3   
   14000377f:	int3   
   140003780:	mov    rax,QWORD PTR [rcx+0x10]
   140003784:	sub    rax,QWORD PTR [rcx+0x8]
   140003788:	sar    rax,0x3
   14000378c:	ret    
   14000378d:	int3   
   14000378e:	int3   
   14000378f:	int3   
   140003790:	mov    rax,QWORD PTR [rcx+0x10]
   140003794:	shl    rdx,0x4
   140003798:	add    rax,0x8
   14000379c:	add    rax,rdx
   14000379f:	ret    
   1400037a0:	shl    rdx,0x4
   1400037a4:	add    rdx,QWORD PTR [rcx+0x10]
   1400037a8:	mov    rax,rdx
   1400037ab:	ret    
   1400037ac:	int3   
   1400037ad:	int3   
   1400037ae:	int3   
   1400037af:	int3   
   1400037b0:	sub    rsp,0x28
   1400037b4:	lea    rcx,[rip+0x291a5]        # 0x14002c960
   1400037bb:	call   0x140005518
   1400037c0:	int3   
   1400037c1:	int3   
   1400037c2:	int3   
   1400037c3:	int3   
   1400037c4:	int3   
   1400037c5:	int3   
   1400037c6:	int3   
   1400037c7:	int3   
   1400037c8:	int3   
   1400037c9:	int3   
   1400037ca:	int3   
   1400037cb:	int3   
   1400037cc:	int3   
   1400037cd:	int3   
   1400037ce:	int3   
   1400037cf:	int3   
   1400037d0:	sub    rsp,0x28
   1400037d4:	lea    rcx,[rip+0x291ad]        # 0x14002c988
   1400037db:	call   0x140005518
   1400037e0:	int3   
   1400037e1:	int3   
   1400037e2:	int3   
   1400037e3:	int3   
   1400037e4:	int3   
   1400037e5:	int3   
   1400037e6:	int3   
   1400037e7:	int3   
   1400037e8:	int3   
   1400037e9:	int3   
   1400037ea:	int3   
   1400037eb:	int3   
   1400037ec:	int3   
   1400037ed:	int3   
   1400037ee:	int3   
   1400037ef:	int3   
   1400037f0:	sub    rsp,0x28
   1400037f4:	lea    rcx,[rip+0x29175]        # 0x14002c970
   1400037fb:	call   0x140005550
   140003800:	int3   
   140003801:	int3   
   140003802:	int3   
   140003803:	int3   
   140003804:	int3   
   140003805:	int3   
   140003806:	int3   
   140003807:	int3   
   140003808:	int3   
   140003809:	int3   
   14000380a:	int3   
   14000380b:	int3   
   14000380c:	int3   
   14000380d:	int3   
   14000380e:	int3   
   14000380f:	int3   
   140003810:	sub    rsp,0x28
   140003814:	xor    eax,eax
   140003816:	test   rdx,rdx
   140003819:	je     0x14000383c
   14000381b:	movabs rax,0x1fffffffffffffff
   140003825:	cmp    rdx,rax
   140003828:	ja     0x140003841
   14000382a:	lea    rcx,[rdx*8+0x0]
   140003832:	call   0x14000570c
   140003837:	test   rax,rax
   14000383a:	je     0x140003841
   14000383c:	add    rsp,0x28
   140003840:	ret    
   140003841:	call   0x140005470
   140003846:	int3   
   140003847:	int3   
   140003848:	int3   
   140003849:	int3   
   14000384a:	int3   
   14000384b:	int3   
   14000384c:	int3   
   14000384d:	int3   
   14000384e:	int3   
   14000384f:	int3   
   140003850:	sub    rsp,0x28
   140003854:	xor    eax,eax
   140003856:	test   rdx,rdx
   140003859:	je     0x14000386e
   14000385b:	cmp    rdx,0xffffffffffffffff
   14000385f:	ja     0x140003873
   140003861:	mov    rcx,rdx
   140003864:	call   0x14000570c
   140003869:	test   rax,rax
   14000386c:	je     0x140003873
   14000386e:	add    rsp,0x28
   140003872:	ret    
   140003873:	call   0x140005470
   140003878:	int3   
   140003879:	int3   
   14000387a:	int3   
   14000387b:	int3   
   14000387c:	int3   
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	sub    rsp,0x28
   140003884:	xor    eax,eax
   140003886:	test   rdx,rdx
   140003889:	je     0x1400038ac
   14000388b:	movabs rax,0x333333333333333
   140003895:	cmp    rdx,rax
   140003898:	ja     0x1400038b1
   14000389a:	lea    rcx,[rdx+rdx*4]
   14000389e:	shl    rcx,0x4
   1400038a2:	call   0x14000570c
   1400038a7:	test   rax,rax
   1400038aa:	je     0x1400038b1
   1400038ac:	add    rsp,0x28
   1400038b0:	ret    
   1400038b1:	call   0x140005470
   1400038b6:	int3   
   1400038b7:	int3   
   1400038b8:	int3   
   1400038b9:	int3   
   1400038ba:	int3   
   1400038bb:	int3   
   1400038bc:	int3   
   1400038bd:	int3   
   1400038be:	int3   
   1400038bf:	int3   
   1400038c0:	sub    rsp,0x28
   1400038c4:	xor    eax,eax
   1400038c6:	test   rdx,rdx
   1400038c9:	je     0x1400038ec
   1400038cb:	movabs rax,0x1fffffffffffffff
   1400038d5:	cmp    rdx,rax
   1400038d8:	ja     0x1400038f1
   1400038da:	lea    rcx,[rdx*8+0x0]
   1400038e2:	call   0x14000570c
   1400038e7:	test   rax,rax
   1400038ea:	je     0x1400038f1
   1400038ec:	add    rsp,0x28
   1400038f0:	ret    
   1400038f1:	call   0x140005470
   1400038f6:	int3   
   1400038f7:	int3   
   1400038f8:	int3   
   1400038f9:	int3   
   1400038fa:	int3   
   1400038fb:	int3   
   1400038fc:	int3   
   1400038fd:	int3   
   1400038fe:	int3   
   1400038ff:	int3   
   140003900:	sub    rsp,0x28
   140003904:	xor    eax,eax
   140003906:	test   rdx,rdx
   140003909:	je     0x14000391e
   14000390b:	cmp    rdx,0xffffffffffffffff
   14000390f:	ja     0x140003923
   140003911:	mov    rcx,rdx
   140003914:	call   0x14000570c
   140003919:	test   rax,rax
   14000391c:	je     0x140003923
   14000391e:	add    rsp,0x28
   140003922:	ret    
   140003923:	call   0x140005470
   140003928:	int3   
   140003929:	int3   
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	int3   
   14000392d:	int3   
   14000392e:	int3   
   14000392f:	int3   
   140003930:	sub    rsp,0x28
   140003934:	xor    eax,eax
   140003936:	test   rdx,rdx
   140003939:	je     0x14000395c
   14000393b:	movabs rax,0x333333333333333
   140003945:	cmp    rdx,rax
   140003948:	ja     0x140003961
   14000394a:	lea    rcx,[rdx+rdx*4]
   14000394e:	shl    rcx,0x4
   140003952:	call   0x14000570c
   140003957:	test   rax,rax
   14000395a:	je     0x140003961
   14000395c:	add    rsp,0x28
   140003960:	ret    
   140003961:	call   0x140005470
   140003966:	int3   
   140003967:	int3   
   140003968:	int3   
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	sub    rsp,0x28
   140003974:	xor    eax,eax
   140003976:	test   rdx,rdx
   140003979:	je     0x14000399c
   14000397b:	movabs rax,0x1fffffffffffffff
   140003985:	cmp    rdx,rax
   140003988:	ja     0x1400039a1
   14000398a:	lea    rcx,[rdx*8+0x0]
   140003992:	call   0x14000570c
   140003997:	test   rax,rax
   14000399a:	je     0x1400039a1
   14000399c:	add    rsp,0x28
   1400039a0:	ret    
   1400039a1:	call   0x140005470
   1400039a6:	int3   
   1400039a7:	int3   
   1400039a8:	int3   
   1400039a9:	int3   
   1400039aa:	int3   
   1400039ab:	int3   
   1400039ac:	int3   
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400039b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400039ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400039bf:	push   rdi
   1400039c0:	sub    rsp,0x20
   1400039c4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400039c8:	mov    rbp,r8
   1400039cb:	mov    rsi,rdx
   1400039ce:	mov    rbx,rcx
   1400039d1:	cmp    rdi,r8
   1400039d4:	jb     0x140003ab4
   1400039da:	sub    rdi,r8
   1400039dd:	cmp    r9,rdi
   1400039e0:	cmovb  rdi,r9
   1400039e4:	cmp    rcx,rdx
   1400039e7:	jne    0x140003a18
   1400039e9:	lea    rax,[rdi+r8*1]
   1400039ed:	cmp    QWORD PTR [rcx+0x10],rax
   1400039f1:	jb     0x140003ac1
   1400039f7:	cmp    QWORD PTR [rcx+0x18],0x10
   1400039fc:	mov    QWORD PTR [rcx+0x10],rax
   140003a00:	jb     0x140003a05
   140003a02:	mov    rcx,QWORD PTR [rcx]
   140003a05:	mov    BYTE PTR [rcx+rax*1],0x0
   140003a09:	xor    edx,edx
   140003a0b:	mov    rcx,rbx
   140003a0e:	call   0x1400040c0
   140003a13:	jmp    0x140003a9c
   140003a18:	cmp    rdi,0xfffffffffffffffe
   140003a1c:	ja     0x140003ace
   140003a22:	mov    rax,QWORD PTR [rcx+0x18]
   140003a26:	cmp    rax,rdi
   140003a29:	jae    0x140003a52
   140003a2b:	mov    r8,QWORD PTR [rcx+0x10]
   140003a2f:	mov    rdx,rdi
   140003a32:	call   0x140002bc0
   140003a37:	test   rdi,rdi
   140003a3a:	je     0x140003a9c
   140003a3c:	cmp    QWORD PTR [rsi+0x18],0x10
   140003a41:	jb     0x140003a46
   140003a43:	mov    rsi,QWORD PTR [rsi]
   140003a46:	cmp    QWORD PTR [rbx+0x18],0x10
   140003a4b:	jb     0x140003a71
   140003a4d:	mov    rcx,QWORD PTR [rbx]
   140003a50:	jmp    0x140003a74
   140003a52:	test   rdi,rdi
   140003a55:	jne    0x140003a3c
   140003a57:	mov    QWORD PTR [rcx+0x10],rdi
   140003a5b:	cmp    rax,0x10
   140003a5f:	jb     0x140003a69
   140003a61:	mov    rax,QWORD PTR [rcx]
   140003a64:	mov    BYTE PTR [rax],dil
   140003a67:	jmp    0x140003a9c
   140003a69:	mov    rax,rcx
   140003a6c:	mov    BYTE PTR [rcx],0x0
   140003a6f:	jmp    0x140003a9c
   140003a71:	mov    rcx,rbx
   140003a74:	test   rdi,rdi
   140003a77:	je     0x140003a85
   140003a79:	lea    rdx,[rsi+rbp*1]
   140003a7d:	mov    r8,rdi
   140003a80:	call   0x1400059f0
   140003a85:	cmp    QWORD PTR [rbx+0x18],0x10
   140003a8a:	mov    QWORD PTR [rbx+0x10],rdi
   140003a8e:	jb     0x140003a95
   140003a90:	mov    rax,QWORD PTR [rbx]
   140003a93:	jmp    0x140003a98
   140003a95:	mov    rax,rbx
   140003a98:	mov    BYTE PTR [rax+rdi*1],0x0
   140003a9c:	mov    rbp,QWORD PTR [rsp+0x38]
   140003aa1:	mov    rsi,QWORD PTR [rsp+0x40]
   140003aa6:	mov    rax,rbx
   140003aa9:	mov    rbx,QWORD PTR [rsp+0x30]
   140003aae:	add    rsp,0x20
   140003ab2:	pop    rdi
   140003ab3:	ret    
   140003ab4:	lea    rcx,[rip+0x28eb5]        # 0x14002c970
   140003abb:	call   0x140005550
   140003ac0:	int3   
   140003ac1:	lea    rcx,[rip+0x28ea8]        # 0x14002c970
   140003ac8:	call   0x140005550
   140003acd:	int3   
   140003ace:	lea    rcx,[rip+0x28e8b]        # 0x14002c960
   140003ad5:	call   0x140005518
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	int3   
   140003add:	int3   
   140003ade:	int3   
   140003adf:	int3   
   140003ae0:	cmp    BYTE PTR [rdx],0x0
   140003ae3:	jne    0x140003aed
   140003ae5:	xor    r8d,r8d
   140003ae8:	jmp    0x140003b00
   140003aed:	or     r8,0xffffffffffffffff
   140003af1:	inc    r8
   140003af4:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003af9:	jne    0x140003af1
   140003afb:	jmp    0x140003b00
   140003b00:	mov    QWORD PTR [rsp+0x8],rbx
   140003b05:	mov    QWORD PTR [rsp+0x10],rsi
   140003b0a:	push   rdi
   140003b0b:	sub    rsp,0x20
   140003b0f:	mov    rdi,r8
   140003b12:	mov    rsi,rdx
   140003b15:	mov    rbx,rcx
   140003b18:	test   rdx,rdx
   140003b1b:	je     0x140003b77
   140003b1d:	mov    rdx,QWORD PTR [rcx+0x18]
   140003b21:	cmp    rdx,0x10
   140003b25:	jb     0x140003b2c
   140003b27:	mov    rax,QWORD PTR [rcx]
   140003b2a:	jmp    0x140003b2f
   140003b2c:	mov    rax,rcx
   140003b2f:	cmp    rsi,rax
   140003b32:	jb     0x140003b77
   140003b34:	cmp    rdx,0x10
   140003b38:	jb     0x140003b3d
   140003b3a:	mov    rcx,QWORD PTR [rcx]
   140003b3d:	add    rcx,QWORD PTR [rbx+0x10]
   140003b41:	cmp    rcx,rsi
   140003b44:	jbe    0x140003b77
   140003b46:	cmp    rdx,0x10
   140003b4a:	jb     0x140003b51
   140003b4c:	mov    rax,QWORD PTR [rbx]
   140003b4f:	jmp    0x140003b54
   140003b51:	mov    rax,rbx
   140003b54:	sub    rsi,rax
   140003b57:	mov    r9,r8
   140003b5a:	mov    rdx,rbx
   140003b5d:	mov    r8,rsi
   140003b60:	mov    rcx,rbx
   140003b63:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b68:	mov    rsi,QWORD PTR [rsp+0x38]
   140003b6d:	add    rsp,0x20
   140003b71:	pop    rdi
   140003b72:	jmp    0x1400039b0
   140003b77:	cmp    r8,0xfffffffffffffffe
   140003b7b:	ja     0x140003c25
   140003b81:	mov    rax,QWORD PTR [rbx+0x18]
   140003b85:	cmp    rax,r8
   140003b88:	jae    0x140003baa
   140003b8a:	mov    r8,QWORD PTR [rbx+0x10]
   140003b8e:	mov    rdx,rdi
   140003b91:	mov    rcx,rbx
   140003b94:	call   0x140002bc0
   140003b99:	test   rdi,rdi
   140003b9c:	je     0x140003c12
   140003b9e:	cmp    QWORD PTR [rbx+0x18],0x10
   140003ba3:	jb     0x140003be8
   140003ba5:	mov    rcx,QWORD PTR [rbx]
   140003ba8:	jmp    0x140003beb
   140003baa:	test   r8,r8
   140003bad:	jne    0x140003b99
   140003baf:	mov    QWORD PTR [rbx+0x10],r8
   140003bb3:	cmp    rax,0x10
   140003bb7:	jb     0x140003bd2
   140003bb9:	mov    rax,QWORD PTR [rbx]
   140003bbc:	mov    BYTE PTR [rax],r8b
   140003bbf:	mov    rax,rbx
   140003bc2:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bc7:	mov    rsi,QWORD PTR [rsp+0x38]
   140003bcc:	add    rsp,0x20
   140003bd0:	pop    rdi
   140003bd1:	ret    
   140003bd2:	mov    rax,rbx
   140003bd5:	mov    BYTE PTR [rbx],0x0
   140003bd8:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bdd:	mov    rsi,QWORD PTR [rsp+0x38]
   140003be2:	add    rsp,0x20
   140003be6:	pop    rdi
   140003be7:	ret    
   140003be8:	mov    rcx,rbx
   140003beb:	test   rdi,rdi
   140003bee:	je     0x140003bfb
   140003bf0:	mov    r8,rdi
   140003bf3:	mov    rdx,rsi
   140003bf6:	call   0x1400059f0
   140003bfb:	cmp    QWORD PTR [rbx+0x18],0x10
   140003c00:	mov    QWORD PTR [rbx+0x10],rdi
   140003c04:	jb     0x140003c0b
   140003c06:	mov    rax,QWORD PTR [rbx]
   140003c09:	jmp    0x140003c0e
   140003c0b:	mov    rax,rbx
   140003c0e:	mov    BYTE PTR [rax+rdi*1],0x0
   140003c12:	mov    rsi,QWORD PTR [rsp+0x38]
   140003c17:	mov    rax,rbx
   140003c1a:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c1f:	add    rsp,0x20
   140003c23:	pop    rdi
   140003c24:	ret    
   140003c25:	lea    rcx,[rip+0x28d34]        # 0x14002c960
   140003c2c:	call   0x140005518
   140003c31:	int3   
   140003c32:	int3   
   140003c33:	int3   
   140003c34:	int3   
   140003c35:	int3   
   140003c36:	int3   
   140003c37:	int3   
   140003c38:	int3   
   140003c39:	int3   
   140003c3a:	int3   
   140003c3b:	int3   
   140003c3c:	int3   
   140003c3d:	int3   
   140003c3e:	int3   
   140003c3f:	int3   
   140003c40:	movzx  eax,BYTE PTR [rdx]
   140003c43:	mov    BYTE PTR [rcx],al
   140003c45:	ret    
   140003c46:	int3   
   140003c47:	int3   
   140003c48:	int3   
   140003c49:	int3   
   140003c4a:	int3   
   140003c4b:	int3   
   140003c4c:	int3   
   140003c4d:	int3   
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	sub    rsp,0x38
   140003c54:	mov    rax,r8
   140003c57:	mov    r8,QWORD PTR [rcx]
   140003c5a:	mov    r9,rdx
   140003c5d:	lea    rdx,[rsp+0x40]
   140003c62:	mov    QWORD PTR [rcx+0x8],r8
   140003c66:	mov    QWORD PTR [rsp+0x20],rax
   140003c6b:	call   0x140003130
   140003c70:	add    rsp,0x38
   140003c74:	ret    
   140003c75:	int3   
   140003c76:	int3   
   140003c77:	int3   
   140003c78:	int3   
   140003c79:	int3   
   140003c7a:	int3   
   140003c7b:	int3   
   140003c7c:	int3   
   140003c7d:	int3   
   140003c7e:	int3   
   140003c7f:	int3   
   140003c80:	mov    rax,QWORD PTR [rcx]
   140003c83:	mov    rcx,QWORD PTR [rax]
   140003c86:	mov    rax,rdx
   140003c89:	mov    QWORD PTR [rdx],rcx
   140003c8c:	ret    
   140003c8d:	int3   
   140003c8e:	int3   
   140003c8f:	int3   
   140003c90:	mov    rax,QWORD PTR [rcx]
   140003c93:	mov    rcx,QWORD PTR [rax]
   140003c96:	mov    rax,rdx
   140003c99:	mov    QWORD PTR [rdx],rcx
   140003c9c:	ret    
   140003c9d:	int3   
   140003c9e:	int3   
   140003c9f:	int3   
   140003ca0:	mov    rax,QWORD PTR [rcx]
   140003ca3:	mov    rcx,QWORD PTR [rax]
   140003ca6:	mov    rax,rdx
   140003ca9:	mov    QWORD PTR [rdx],rcx
   140003cac:	ret    
   140003cad:	int3   
   140003cae:	int3   
   140003caf:	int3   
   140003cb0:	mov    rax,QWORD PTR [rcx]
   140003cb3:	mov    QWORD PTR [rdx],rax
   140003cb6:	mov    rax,rdx
   140003cb9:	ret    
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	int3   
   140003cbd:	int3   
   140003cbe:	int3   
   140003cbf:	int3   
   140003cc0:	mov    rax,QWORD PTR [rcx+0x30]
   140003cc4:	ret    
   140003cc5:	int3   
   140003cc6:	int3   
   140003cc7:	int3   
   140003cc8:	int3   
   140003cc9:	int3   
   140003cca:	int3   
   140003ccb:	int3   
   140003ccc:	int3   
   140003ccd:	int3   
   140003cce:	int3   
   140003ccf:	int3   
   140003cd0:	cmp    QWORD PTR [rcx+0x18],0x10
   140003cd5:	jb     0x140003cdb
   140003cd7:	mov    rax,QWORD PTR [rcx]
   140003cda:	ret    
   140003cdb:	mov    rax,rcx
   140003cde:	ret    
   140003cdf:	int3   
   140003ce0:	mov    rax,QWORD PTR [rcx+0x10]
   140003ce4:	sub    rax,QWORD PTR [rcx]
   140003ce7:	sar    rax,0x3
   140003ceb:	ret    
   140003cec:	int3   
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	mov    rax,QWORD PTR [rcx+0x8]
   140003cf4:	ret    
   140003cf5:	int3   
   140003cf6:	int3   
   140003cf7:	int3   
   140003cf8:	int3   
   140003cf9:	int3   
   140003cfa:	int3   
   140003cfb:	int3   
   140003cfc:	int3   
   140003cfd:	int3   
   140003cfe:	int3   
   140003cff:	int3   
   140003d00:	mov    rax,QWORD PTR [rcx+0x8]
   140003d04:	ret    
   140003d05:	int3   
   140003d06:	int3   
   140003d07:	int3   
   140003d08:	int3   
   140003d09:	int3   
   140003d0a:	int3   
   140003d0b:	int3   
   140003d0c:	int3   
   140003d0d:	int3   
   140003d0e:	int3   
   140003d0f:	int3   
   140003d10:	rex push rbx
   140003d12:	sub    rsp,0x30
   140003d16:	mov    rbx,rcx
   140003d19:	call   0x140003d70
   140003d1e:	mov    rax,QWORD PTR [rbx]
   140003d21:	mov    r8,QWORD PTR [rbx+0x10]
   140003d25:	lea    rcx,[rbx+0x10]
   140003d29:	mov    QWORD PTR [rsp+0x40],rax
   140003d2e:	lea    rax,[rsp+0x40]
   140003d33:	lea    rdx,[rsp+0x48]
   140003d38:	mov    r9d,0x10
   140003d3e:	mov    QWORD PTR [rcx+0x8],r8
   140003d42:	mov    QWORD PTR [rsp+0x20],rax
   140003d47:	call   0x140003130
   140003d4c:	mov    QWORD PTR [rbx+0x28],0x7
   140003d54:	mov    QWORD PTR [rbx+0x30],0x8
   140003d5c:	add    rsp,0x30
   140003d60:	pop    rbx
   140003d61:	ret    
   140003d62:	int3   
   140003d63:	int3   
   140003d64:	int3   
   140003d65:	int3   
   140003d66:	int3   
   140003d67:	int3   
   140003d68:	int3   
   140003d69:	int3   
   140003d6a:	int3   
   140003d6b:	int3   
   140003d6c:	int3   
   140003d6d:	int3   
   140003d6e:	int3   
   140003d6f:	int3   
   140003d70:	mov    QWORD PTR [rsp+0x10],rbx
   140003d75:	mov    QWORD PTR [rsp+0x18],rbp
   140003d7a:	push   rsi
   140003d7b:	sub    rsp,0x20
   140003d7f:	mov    rax,QWORD PTR [rcx]
   140003d82:	xor    ebp,ebp
   140003d84:	mov    rsi,rcx
   140003d87:	mov    rbx,QWORD PTR [rax]
   140003d8a:	mov    QWORD PTR [rax],rax
   140003d8d:	mov    rax,QWORD PTR [rcx]
   140003d90:	mov    QWORD PTR [rax+0x8],rax
   140003d94:	mov    QWORD PTR [rcx+0x8],rbp
   140003d98:	cmp    rbx,QWORD PTR [rcx]
   140003d9b:	je     0x140003dfa
   140003d9d:	mov    QWORD PTR [rsp+0x30],rdi
   140003da2:	cmp    QWORD PTR [rbx+0x48],0x10
   140003da7:	mov    rdi,QWORD PTR [rbx]
   140003daa:	jb     0x140003db5
   140003dac:	mov    rcx,QWORD PTR [rbx+0x30]
   140003db0:	call   0x140005778
   140003db5:	mov    QWORD PTR [rbx+0x48],0xf
   140003dbd:	mov    QWORD PTR [rbx+0x40],rbp
   140003dc1:	mov    BYTE PTR [rbx+0x30],bpl
   140003dc5:	cmp    QWORD PTR [rbx+0x28],0x10
   140003dca:	jb     0x140003dd5
   140003dcc:	mov    rcx,QWORD PTR [rbx+0x10]
   140003dd0:	call   0x140005778
   140003dd5:	mov    QWORD PTR [rbx+0x28],0xf
   140003ddd:	mov    QWORD PTR [rbx+0x20],rbp
   140003de1:	mov    rcx,rbx
   140003de4:	mov    BYTE PTR [rbx+0x10],bpl
   140003de8:	call   0x140005778
   140003ded:	mov    rbx,rdi
   140003df0:	cmp    rdi,QWORD PTR [rsi]
   140003df3:	jne    0x140003da2
   140003df5:	mov    rdi,QWORD PTR [rsp+0x30]
   140003dfa:	mov    rbx,QWORD PTR [rsp+0x38]
   140003dff:	mov    rbp,QWORD PTR [rsp+0x40]
   140003e04:	add    rsp,0x20
   140003e08:	pop    rsi
   140003e09:	ret    
   140003e0a:	int3   
   140003e0b:	int3   
   140003e0c:	int3   
   140003e0d:	int3   
   140003e0e:	int3   
   140003e0f:	int3   
   140003e10:	mov    rax,QWORD PTR [rcx]
   140003e13:	mov    QWORD PTR [rcx+0x8],rax
   140003e17:	ret    
   140003e18:	int3   
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	int3   
   140003e1d:	int3   
   140003e1e:	int3   
   140003e1f:	int3   
   140003e20:	mov    QWORD PTR [rsp+0x8],rbx
   140003e25:	mov    QWORD PTR [rsp+0x10],rsi
   140003e2a:	push   rdi
   140003e2b:	sub    rsp,0x20
   140003e2f:	cmp    QWORD PTR [rdx+0x18],0x10
   140003e34:	mov    rdi,QWORD PTR [rdx+0x10]
   140003e38:	jb     0x140003e3d
   140003e3a:	mov    rdx,QWORD PTR [rdx]
   140003e3d:	cmp    QWORD PTR [rcx+0x18],0x10
   140003e42:	mov    rbx,QWORD PTR [rcx+0x10]
   140003e46:	jb     0x140003e4b
   140003e48:	mov    rcx,QWORD PTR [rcx]
   140003e4b:	cmp    rbx,rdi
   140003e4e:	mov    r8,rdi
   140003e51:	cmovb  r8,rbx
   140003e55:	xor    esi,esi
   140003e57:	test   r8,r8
   140003e5a:	jne    0x140003e60
   140003e5c:	mov    eax,esi
   140003e5e:	jmp    0x140003e65
   140003e60:	call   0x140006e90
   140003e65:	cdqe   
   140003e67:	test   rax,rax
   140003e6a:	jne    0x140003e8a
   140003e6c:	cmp    rbx,rdi
   140003e6f:	jae    0x140003e84
   140003e71:	or     eax,0xffffffff
   140003e74:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e79:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e7e:	add    rsp,0x20
   140003e82:	pop    rdi
   140003e83:	ret    
   140003e84:	setne  sil
   140003e88:	mov    eax,esi
   140003e8a:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e8f:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e94:	add    rsp,0x20
   140003e98:	pop    rdi
   140003e99:	ret    
   140003e9a:	int3   
   140003e9b:	int3   
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	rex push rbx
   140003ea2:	sub    rsp,0x20
   140003ea6:	mov    rax,QWORD PTR [rcx+0x10]
   140003eaa:	mov    rbx,r8
   140003ead:	cmp    rax,rdx
   140003eb0:	jb     0x140003f2a
   140003eb2:	sub    rax,rdx
   140003eb5:	mov    QWORD PTR [rsp+0x30],rsi
   140003eba:	mov    QWORD PTR [rsp+0x38],rdi
   140003ebf:	cmp    rax,rbx
   140003ec2:	cmovb  rbx,rax
   140003ec6:	cmp    QWORD PTR [rcx+0x18],0x10
   140003ecb:	jb     0x140003ed0
   140003ecd:	mov    rcx,QWORD PTR [rcx]
   140003ed0:	mov    rdi,QWORD PTR [rsp+0x50]
   140003ed5:	cmp    rbx,rdi
   140003ed8:	mov    r8,rdi
   140003edb:	cmovb  r8,rbx
   140003edf:	xor    esi,esi
   140003ee1:	test   r8,r8
   140003ee4:	jne    0x140003eea
   140003ee6:	mov    eax,esi
   140003ee8:	jmp    0x140003ef5
   140003eea:	add    rcx,rdx
   140003eed:	mov    rdx,r9
   140003ef0:	call   0x140006e90
   140003ef5:	cdqe   
   140003ef7:	test   rax,rax
   140003efa:	jne    0x140003f1a
   140003efc:	cmp    rbx,rdi
   140003eff:	jae    0x140003f14
   140003f01:	mov    rdi,QWORD PTR [rsp+0x38]
   140003f06:	mov    rsi,QWORD PTR [rsp+0x30]
   140003f0b:	or     eax,0xffffffff
   140003f0e:	add    rsp,0x20
   140003f12:	pop    rbx
   140003f13:	ret    
   140003f14:	setne  sil
   140003f18:	mov    eax,esi
   140003f1a:	mov    rdi,QWORD PTR [rsp+0x38]
   140003f1f:	mov    rsi,QWORD PTR [rsp+0x30]
   140003f24:	add    rsp,0x20
   140003f28:	pop    rbx
   140003f29:	ret    
   140003f2a:	lea    rcx,[rip+0x28a3f]        # 0x14002c970
   140003f31:	call   0x140005550
   140003f36:	int3   
   140003f37:	int3   
   140003f38:	int3   
   140003f39:	int3   
   140003f3a:	int3   
   140003f3b:	int3   
   140003f3c:	int3   
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	test   r8,r8
   140003f43:	jne    0x140003f48
   140003f45:	xor    eax,eax
   140003f47:	ret    
   140003f48:	jmp    0x140006e90
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	test   rdx,rdx
   140003f53:	je     0x140003f5b
   140003f55:	mov    rax,QWORD PTR [r8]
   140003f58:	mov    QWORD PTR [rdx],rax
   140003f5b:	ret    
   140003f5c:	int3   
   140003f5d:	int3   
   140003f5e:	int3   
   140003f5f:	int3   
   140003f60:	rex push rbx
   140003f62:	sub    rsp,0x20
   140003f66:	mov    rbx,rcx
   140003f69:	test   r8,r8
   140003f6c:	je     0x140003f73
   140003f6e:	call   0x1400059f0
   140003f73:	mov    rax,rbx
   140003f76:	add    rsp,0x20
   140003f7a:	pop    rbx
   140003f7b:	ret    
   140003f7c:	int3   
   140003f7d:	int3   
   140003f7e:	int3   
   140003f7f:	int3   
   140003f80:	mov    rcx,rdx
   140003f83:	jmp    0x140005778
   140003f88:	int3   
   140003f89:	int3   
   140003f8a:	int3   
   140003f8b:	int3   
   140003f8c:	int3   
   140003f8d:	int3   
   140003f8e:	int3   
   140003f8f:	int3   
   140003f90:	mov    rcx,rdx
   140003f93:	jmp    0x140005778
   140003f98:	int3   
   140003f99:	int3   
   140003f9a:	int3   
   140003f9b:	int3   
   140003f9c:	int3   
   140003f9d:	int3   
   140003f9e:	int3   
   140003f9f:	int3   
   140003fa0:	mov    rcx,rdx
   140003fa3:	jmp    0x140005778
   140003fa8:	int3   
   140003fa9:	int3   
   140003faa:	int3   
   140003fab:	int3   
   140003fac:	int3   
   140003fad:	int3   
   140003fae:	int3   
   140003faf:	int3   
   140003fb0:	mov    rcx,rdx
   140003fb3:	jmp    0x140005778
   140003fb8:	int3   
   140003fb9:	int3   
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	mov    rcx,rdx
   140003fc3:	jmp    0x140005778
   140003fc8:	int3   
   140003fc9:	int3   
   140003fca:	int3   
   140003fcb:	int3   
   140003fcc:	int3   
   140003fcd:	int3   
   140003fce:	int3   
   140003fcf:	int3   
   140003fd0:	mov    rcx,rdx
   140003fd3:	jmp    0x140005778
   140003fd8:	int3   
   140003fd9:	int3   
   140003fda:	int3   
   140003fdb:	int3   
   140003fdc:	int3   
   140003fdd:	int3   
   140003fde:	int3   
   140003fdf:	int3   
   140003fe0:	mov    rcx,rdx
   140003fe3:	jmp    0x140005778
   140003fe8:	int3   
   140003fe9:	int3   
   140003fea:	int3   
   140003feb:	int3   
   140003fec:	int3   
   140003fed:	int3   
   140003fee:	int3   
   140003fef:	int3   
   140003ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ff5:	push   rdi
   140003ff6:	sub    rsp,0x20
   140003ffa:	mov    ecx,r8d
   140003ffd:	mov    edi,r8d
   140004000:	mov    rbx,rdx
   140004003:	call   0x140005644
   140004008:	mov    DWORD PTR [rbx],edi
   14000400a:	test   rax,rax
   14000400d:	lea    rax,[rip+0x37fec]        # 0x14003c000
   140004014:	jne    0x14000401d
   140004016:	lea    rax,[rip+0x37ff3]        # 0x14003c010
   14000401d:	mov    QWORD PTR [rbx+0x8],rax
   140004021:	mov    rax,rbx
   140004024:	mov    rbx,QWORD PTR [rsp+0x30]
   140004029:	add    rsp,0x20
   14000402d:	pop    rdi
   14000402e:	ret    
   14000402f:	int3   
   140004030:	mov    DWORD PTR [rdx],r8d
   140004033:	mov    QWORD PTR [rdx+0x8],rcx
   140004037:	mov    rax,rdx
   14000403a:	ret    
   14000403b:	int3   
   14000403c:	int3   
   14000403d:	int3   
   14000403e:	int3   
   14000403f:	int3   
   140004040:	mov    rax,QWORD PTR [rcx]
   140004043:	mov    QWORD PTR [rdx],rax
   140004046:	mov    rax,rdx
   140004049:	ret    
   14000404a:	int3   
   14000404b:	int3   
   14000404c:	int3   
   14000404d:	int3   
   14000404e:	int3   
   14000404f:	int3   
   140004050:	mov    rax,QWORD PTR [rcx]
   140004053:	mov    QWORD PTR [rdx],rax
   140004056:	mov    rax,rdx
   140004059:	ret    
   14000405a:	int3   
   14000405b:	int3   
   14000405c:	int3   
   14000405d:	int3   
   14000405e:	int3   
   14000405f:	int3   
   140004060:	cmp    rcx,QWORD PTR [rdx+0x8]
   140004064:	jne    0x14000406e
   140004066:	cmp    DWORD PTR [rdx],r8d
   140004069:	jne    0x14000406e
   14000406b:	mov    al,0x1
   14000406d:	ret    
   14000406e:	xor    al,al
   140004070:	ret    
   140004071:	int3   
   140004072:	int3   
   140004073:	int3   
   140004074:	int3   
   140004075:	int3   
   140004076:	int3   
   140004077:	int3   
   140004078:	int3   
   140004079:	int3   
   14000407a:	int3   
   14000407b:	int3   
   14000407c:	int3   
   14000407d:	int3   
   14000407e:	int3   
   14000407f:	int3   
   140004080:	rex push rbx
   140004082:	sub    rsp,0x30
   140004086:	mov    rax,QWORD PTR [rcx]
   140004089:	mov    rbx,r8
   14000408c:	mov    r8d,edx
   14000408f:	lea    rdx,[rsp+0x20]
   140004094:	call   QWORD PTR [rax+0x18]
   140004097:	mov    rcx,QWORD PTR [rbx+0x8]
   14000409b:	cmp    QWORD PTR [rax+0x8],rcx
   14000409f:	jne    0x1400040af
   1400040a1:	mov    ecx,DWORD PTR [rbx]
   1400040a3:	cmp    DWORD PTR [rax],ecx
   1400040a5:	jne    0x1400040af
   1400040a7:	mov    al,0x1
   1400040a9:	add    rsp,0x30
   1400040ad:	pop    rbx
   1400040ae:	ret    
   1400040af:	xor    al,al
   1400040b1:	add    rsp,0x30
   1400040b5:	pop    rbx
   1400040b6:	ret    
   1400040b7:	int3   
   1400040b8:	int3   
   1400040b9:	int3   
   1400040ba:	int3   
   1400040bb:	int3   
   1400040bc:	int3   
   1400040bd:	int3   
   1400040be:	int3   
   1400040bf:	int3   
   1400040c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400040c5:	push   rdi
   1400040c6:	sub    rsp,0x20
   1400040ca:	mov    rdi,QWORD PTR [rcx+0x10]
   1400040ce:	mov    rbx,rcx
   1400040d1:	cmp    rdi,rdx
   1400040d4:	jb     0x14000417e
   1400040da:	mov    rax,rdi
   1400040dd:	sub    rax,rdx
   1400040e0:	cmp    rax,r8
   1400040e3:	ja     0x14000411a
   1400040e5:	cmp    QWORD PTR [rcx+0x18],0x10
   1400040ea:	mov    QWORD PTR [rcx+0x10],rdx
   1400040ee:	jb     0x140004105
   1400040f0:	mov    rax,QWORD PTR [rcx]
   1400040f3:	mov    BYTE PTR [rax+rdx*1],0x0
   1400040f7:	mov    rax,rcx
   1400040fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040ff:	add    rsp,0x20
   140004103:	pop    rdi
   140004104:	ret    
   140004105:	mov    rax,rcx
   140004108:	mov    BYTE PTR [rcx+rdx*1],0x0
   14000410c:	mov    rax,rbx
   14000410f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004114:	add    rsp,0x20
   140004118:	pop    rdi
   140004119:	ret    
   14000411a:	test   r8,r8
   14000411d:	je     0x140004170
   14000411f:	cmp    QWORD PTR [rcx+0x18],0x10
   140004124:	jb     0x14000412b
   140004126:	mov    rax,QWORD PTR [rcx]
   140004129:	jmp    0x14000412e
   14000412b:	mov    rax,rcx
   14000412e:	sub    rdi,r8
   140004131:	lea    rcx,[rax+rdx*1]
   140004135:	mov    rax,rdi
   140004138:	sub    rax,rdx
   14000413b:	je     0x140004149
   14000413d:	lea    rdx,[rcx+r8*1]
   140004141:	mov    r8,rax
   140004144:	call   0x1400059f0
   140004149:	cmp    QWORD PTR [rbx+0x18],0x10
   14000414e:	mov    QWORD PTR [rbx+0x10],rdi
   140004152:	jb     0x140004169
   140004154:	mov    rax,QWORD PTR [rbx]
   140004157:	mov    BYTE PTR [rax+rdi*1],0x0
   14000415b:	mov    rax,rbx
   14000415e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004163:	add    rsp,0x20
   140004167:	pop    rdi
   140004168:	ret    
   140004169:	mov    rax,rbx
   14000416c:	mov    BYTE PTR [rbx+rdi*1],0x0
   140004170:	mov    rax,rbx
   140004173:	mov    rbx,QWORD PTR [rsp+0x30]
   140004178:	add    rsp,0x20
   14000417c:	pop    rdi
   14000417d:	ret    
   14000417e:	lea    rcx,[rip+0x287eb]        # 0x14002c970
   140004185:	call   0x140005550
   14000418a:	int3   
   14000418b:	int3   
   14000418c:	int3   
   14000418d:	int3   
   14000418e:	int3   
   14000418f:	int3   
   140004190:	sub    rsp,0x28
   140004194:	cmp    QWORD PTR [rcx+0x10],rdx
   140004198:	jb     0x1400041c0
   14000419a:	cmp    QWORD PTR [rcx+0x18],0x10
   14000419f:	mov    QWORD PTR [rcx+0x10],rdx
   1400041a3:	jb     0x1400041b4
   1400041a5:	mov    rax,QWORD PTR [rcx]
   1400041a8:	mov    BYTE PTR [rax+rdx*1],0x0
   1400041ac:	mov    rax,rcx
   1400041af:	add    rsp,0x28
   1400041b3:	ret    
   1400041b4:	mov    rax,rcx
   1400041b7:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400041bb:	add    rsp,0x28
   1400041bf:	ret    
   1400041c0:	lea    rcx,[rip+0x287a9]        # 0x14002c970
   1400041c7:	call   0x140005550
   1400041cc:	int3   
   1400041cd:	int3   
   1400041ce:	int3   
   1400041cf:	int3   
   1400041d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041d5:	mov    QWORD PTR [rsp+0x18],r8
   1400041da:	push   rdi
   1400041db:	sub    rsp,0x20
   1400041df:	mov    rax,QWORD PTR [r8]
   1400041e2:	mov    rbx,r8
   1400041e5:	mov    rdi,rdx
   1400041e8:	mov    QWORD PTR [rsp+0x40],rax
   1400041ed:	mov    r8,QWORD PTR [r8+0x8]
   1400041f1:	mov    rax,QWORD PTR [rbx]
   1400041f4:	mov    QWORD PTR [r8],rax
   1400041f7:	mov    r8,QWORD PTR [rbx]
   1400041fa:	mov    rax,QWORD PTR [rbx+0x8]
   1400041fe:	mov    QWORD PTR [r8+0x8],rax
   140004202:	dec    QWORD PTR [rcx+0x8]
   140004206:	cmp    QWORD PTR [rbx+0x48],0x10
   14000420b:	jb     0x140004216
   14000420d:	mov    rcx,QWORD PTR [rbx+0x30]
   140004211:	call   0x140005778
   140004216:	mov    QWORD PTR [rbx+0x48],0xf
   14000421e:	mov    QWORD PTR [rbx+0x40],0x0
   140004226:	mov    BYTE PTR [rbx+0x30],0x0
   14000422a:	cmp    QWORD PTR [rbx+0x28],0x10
   14000422f:	jb     0x14000423a
   140004231:	mov    rcx,QWORD PTR [rbx+0x10]
   140004235:	call   0x140005778
   14000423a:	mov    QWORD PTR [rbx+0x28],0xf
   140004242:	mov    QWORD PTR [rbx+0x20],0x0
   14000424a:	mov    rcx,rbx
   14000424d:	mov    BYTE PTR [rbx+0x10],0x0
   140004251:	call   0x140005778
   140004256:	mov    rax,QWORD PTR [rsp+0x40]
   14000425b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004260:	mov    QWORD PTR [rdi],rax
   140004263:	mov    rax,rdi
   140004266:	add    rsp,0x20
   14000426a:	pop    rdi
   14000426b:	ret    
   14000426c:	int3   
   14000426d:	int3   
   14000426e:	int3   
   14000426f:	int3   
   140004270:	rex push rbx
   140004272:	mov    eax,0x20030
   140004277:	call   0x140006e30
   14000427c:	sub    rsp,rax
   14000427f:	lea    rcx,[rsp+0x10032]
   140004287:	xor    ebx,ebx
   140004289:	xor    edx,edx
   14000428b:	mov    r8d,0xfffc
   140004291:	mov    WORD PTR [rsp+0x10030],bx
   140004299:	call   0x140006f70
   14000429e:	lea    rcx,[rsp+0x32]
   1400042a3:	xor    edx,edx
   1400042a5:	mov    r8d,0xfffc
   1400042ab:	mov    WORD PTR [rsp+0x30],bx
   1400042b0:	call   0x140006f70
   1400042b5:	lea    rdx,[rsp+0x10030]
   1400042bd:	lea    rcx,[rip+0x2860c]        # 0x14002c8d0
   1400042c4:	mov    r8d,0x7fff
   1400042ca:	call   QWORD PTR [rip+0x27de8]        # 0x14002c0b8
   1400042d0:	test   eax,eax
   1400042d2:	jle    0x14000430e
   1400042d4:	call   0x140004de6
   1400042d9:	mov    rbx,rax
   1400042dc:	call   0x140004e28
   1400042e1:	lea    r8,[rip+0x285f8]        # 0x14002c8e0
   1400042e8:	mov    r9,rax
   1400042eb:	lea    rax,[rsp+0x10030]
   1400042f3:	lea    rcx,[rsp+0x30]
   1400042f8:	mov    QWORD PTR [rsp+0x28],rax
   1400042fd:	mov    edx,0x7fff
   140004302:	mov    QWORD PTR [rsp+0x20],rbx
   140004307:	call   0x140002860
   14000430c:	jmp    0x140004339
   14000430e:	call   0x140004de6
   140004313:	mov    rbx,rax
   140004316:	call   0x140004e28
   14000431b:	lea    r8,[rip+0x285de]        # 0x14002c900
   140004322:	lea    rcx,[rsp+0x30]
   140004327:	mov    edx,0x7fff
   14000432c:	mov    r9,rax
   14000432f:	mov    QWORD PTR [rsp+0x20],rbx
   140004334:	call   0x140002860
   140004339:	lea    rdx,[rsp+0x30]
   14000433e:	lea    rcx,[rip+0x2858b]        # 0x14002c8d0
   140004345:	call   QWORD PTR [rip+0x27d75]        # 0x14002c0c0
   14000434b:	add    rsp,0x20030
   140004352:	pop    rbx
   140004353:	ret    
   140004354:	int3   
   140004355:	int3   
   140004356:	int3   
   140004357:	int3   
   140004358:	int3   
   140004359:	int3   
   14000435a:	int3   
   14000435b:	int3   
   14000435c:	int3   
   14000435d:	int3   
   14000435e:	int3   
   14000435f:	int3   
   140004360:	mov    rax,QWORD PTR [rcx]
   140004363:	mov    rax,QWORD PTR [rax]
   140004366:	add    rax,0x10
   14000436a:	ret    
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	lea    rax,[rip+0x37c89]        # 0x14003c000
   140004377:	ret    
   140004378:	int3   
   140004379:	int3   
   14000437a:	int3   
   14000437b:	int3   
   14000437c:	int3   
   14000437d:	int3   
   14000437e:	int3   
   14000437f:	int3   
   140004380:	mov    QWORD PTR [rsp+0x8],rbx
   140004385:	mov    QWORD PTR [rsp+0x10],rbp
   14000438a:	mov    QWORD PTR [rsp+0x18],rsi
   14000438f:	push   rdi
   140004390:	sub    rsp,0xb0
   140004397:	mov    rdi,rdx
   14000439a:	mov    rsi,rcx
   14000439d:	lea    rbp,[rip+0x285a4]        # 0x14002c948
   1400043a4:	xor    edx,edx
   1400043a6:	mov    rcx,rbp
   1400043a9:	xor    ebx,ebx
   1400043ab:	call   QWORD PTR [rip+0x27ef7]        # 0x14002c2a8
   1400043b1:	test   rax,rax
   1400043b4:	jne    0x140004483
   1400043ba:	mov    rax,QWORD PTR [rip+0x27f07]        # 0x14002c2c8
   1400043c1:	lea    rcx,[rsp+0x60]
   1400043c6:	mov    DWORD PTR [rsp+0x60],0x50
   1400043ce:	mov    QWORD PTR [rsp+0xa0],rbp
   1400043d6:	mov    QWORD PTR [rsp+0x78],rsi
   1400043db:	mov    DWORD PTR [rsp+0x64],0x2
   1400043e3:	mov    QWORD PTR [rsp+0x68],rax
   1400043e8:	mov    DWORD PTR [rsp+0x70],ebx
   1400043ec:	mov    DWORD PTR [rsp+0x74],0x8
   1400043f4:	mov    QWORD PTR [rsp+0x90],rbx
   1400043fc:	mov    QWORD PTR [rsp+0x88],rbx
   140004404:	mov    QWORD PTR [rsp+0x80],rbx
   14000440c:	mov    QWORD PTR [rsp+0xa8],rbx
   140004414:	mov    QWORD PTR [rsp+0x98],rbx
   14000441c:	call   QWORD PTR [rip+0x27e9e]        # 0x14002c2c0
   140004422:	test   ax,ax
   140004425:	jne    0x140004434
   140004427:	xor    edx,edx
   140004429:	mov    rcx,rbp
   14000442c:	call   QWORD PTR [rip+0x27e76]        # 0x14002c2a8
   140004432:	jmp    0x140004483
   140004434:	mov    QWORD PTR [rsp+0x58],rbx
   140004439:	mov    QWORD PTR [rsp+0x50],rsi
   14000443e:	mov    QWORD PTR [rsp+0x48],rbx
   140004443:	mov    QWORD PTR [rsp+0x40],rbx
   140004448:	mov    DWORD PTR [rsp+0x38],ebx
   14000444c:	mov    DWORD PTR [rsp+0x30],0x80000000
   140004454:	lea    r8,[rip+0x283dd]        # 0x14002c838
   14000445b:	mov    r9d,0xcf0000
   140004461:	mov    rdx,rbp
   140004464:	xor    ecx,ecx
   140004466:	mov    DWORD PTR [rsp+0x28],ebx
   14000446a:	mov    DWORD PTR [rsp+0x20],0x80000000
   140004472:	call   QWORD PTR [rip+0x27e40]        # 0x14002c2b8
   140004478:	mov    ecx,0x1
   14000447d:	test   rax,rax
   140004480:	cmovne ebx,ecx
   140004483:	lea    r11,[rsp+0xb0]
   14000448b:	mov    QWORD PTR [rdi],rax
   14000448e:	mov    eax,ebx
   140004490:	mov    rbx,QWORD PTR [r11+0x10]
   140004494:	mov    rbp,QWORD PTR [r11+0x18]
   140004498:	mov    rsi,QWORD PTR [r11+0x20]
   14000449c:	mov    rsp,r11
   14000449f:	pop    rdi
   1400044a0:	ret    
   1400044a1:	int3   
   1400044a2:	int3   
   1400044a3:	int3   
   1400044a4:	int3   
   1400044a5:	int3   
   1400044a6:	int3   
   1400044a7:	int3   
   1400044a8:	int3   
   1400044a9:	int3   
   1400044aa:	int3   
   1400044ab:	int3   
   1400044ac:	int3   
   1400044ad:	int3   
   1400044ae:	int3   
   1400044af:	int3   
   1400044b0:	rex push rbx
   1400044b2:	sub    rsp,0x30
   1400044b6:	mov    rax,QWORD PTR [rsp+0x60]
   1400044bb:	mov    rbx,rdx
   1400044be:	mov    QWORD PTR [rsp+0x20],rax
   1400044c3:	call   0x140003130
   1400044c8:	mov    rax,rbx
   1400044cb:	add    rsp,0x30
   1400044cf:	pop    rbx
   1400044d0:	ret    
   1400044d1:	int3   
   1400044d2:	int3   
   1400044d3:	int3   
   1400044d4:	int3   
   1400044d5:	int3   
   1400044d6:	int3   
   1400044d7:	int3   
   1400044d8:	int3   
   1400044d9:	int3   
   1400044da:	int3   
   1400044db:	int3   
   1400044dc:	int3   
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	cmp    BYTE PTR [rcx],0x0
   1400044e3:	jne    0x1400044e8
   1400044e5:	xor    eax,eax
   1400044e7:	ret    
   1400044e8:	or     rax,0xffffffffffffffff
   1400044ec:	nop    DWORD PTR [rax+0x0]
   1400044f0:	inc    rax
   1400044f3:	cmp    BYTE PTR [rcx+rax*1],0x0
   1400044f7:	jne    0x1400044f0
   1400044f9:	ret    
   1400044fa:	int3   
   1400044fb:	int3   
   1400044fc:	int3   
   1400044fd:	int3   
   1400044fe:	int3   
   1400044ff:	int3   
   140004500:	mov    rax,QWORD PTR [rcx+0x8]
   140004504:	movss  xmm2,DWORD PTR [rip+0x284a8]        # 0x14002c9b4
   14000450c:	xorps  xmm0,xmm0
   14000450f:	cvtsi2ss xmm0,rax
   140004514:	test   rax,rax
   140004517:	jns    0x14000451d
   140004519:	addss  xmm0,xmm2
   14000451d:	mov    rax,QWORD PTR [rcx+0x30]
   140004521:	xorps  xmm1,xmm1
   140004524:	cvtsi2ss xmm1,rax
   140004529:	test   rax,rax
   14000452c:	jns    0x140004532
   14000452e:	addss  xmm1,xmm2
   140004532:	divss  xmm0,xmm1
   140004536:	ret    
   140004537:	int3   
   140004538:	int3   
   140004539:	int3   
   14000453a:	int3   
   14000453b:	int3   
   14000453c:	int3   
   14000453d:	int3   
   14000453e:	int3   
   14000453f:	int3   
   140004540:	movss  xmm0,DWORD PTR [rcx+0x38]
   140004545:	ret    
   140004546:	int3   
   140004547:	int3   
   140004548:	int3   
   140004549:	int3   
   14000454a:	int3   
   14000454b:	int3   
   14000454c:	int3   
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	movabs rax,0x1fffffffffffffff
   14000455a:	ret    
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	or     rax,0xffffffffffffffff
   140004564:	ret    
   140004565:	int3   
   140004566:	int3   
   140004567:	int3   
   140004568:	int3   
   140004569:	int3   
   14000456a:	int3   
   14000456b:	int3   
   14000456c:	int3   
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	movabs rax,0x333333333333333
   14000457a:	ret    
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	movabs rax,0x1fffffffffffffff
   14000458a:	ret    
   14000458b:	int3   
   14000458c:	int3   
   14000458d:	int3   
   14000458e:	int3   
   14000458f:	int3   
   140004590:	or     rax,0xffffffffffffffff
   140004594:	ret    
   140004595:	int3   
   140004596:	int3   
   140004597:	int3   
   140004598:	int3   
   140004599:	int3   
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	int3   
   14000459d:	int3   
   14000459e:	int3   
   14000459f:	int3   
   1400045a0:	movabs rax,0x333333333333333
   1400045aa:	ret    
   1400045ab:	int3   
   1400045ac:	int3   
   1400045ad:	int3   
   1400045ae:	int3   
   1400045af:	int3   
   1400045b0:	movabs rax,0x1fffffffffffffff
   1400045ba:	ret    
   1400045bb:	int3   
   1400045bc:	int3   
   1400045bd:	int3   
   1400045be:	int3   
   1400045bf:	int3   
   1400045c0:	movabs rax,0x1fffffffffffffff
   1400045ca:	ret    
   1400045cb:	int3   
   1400045cc:	int3   
   1400045cd:	int3   
   1400045ce:	int3   
   1400045cf:	int3   
   1400045d0:	or     rax,0xffffffffffffffff
   1400045d4:	ret    
   1400045d5:	int3   
   1400045d6:	int3   
   1400045d7:	int3   
   1400045d8:	int3   
   1400045d9:	int3   
   1400045da:	int3   
   1400045db:	int3   
   1400045dc:	int3   
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	movabs rax,0x333333333333333
   1400045ea:	ret    
   1400045eb:	int3   
   1400045ec:	int3   
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	movabs rax,0x1fffffffffffffff
   1400045fa:	ret    
   1400045fb:	int3   
   1400045fc:	int3   
   1400045fd:	int3   
   1400045fe:	int3   
   1400045ff:	int3   
   140004600:	mov    rax,0xfffffffffffffffe
   140004607:	ret    
   140004608:	int3   
   140004609:	int3   
   14000460a:	int3   
   14000460b:	int3   
   14000460c:	int3   
   14000460d:	int3   
   14000460e:	int3   
   14000460f:	int3   
   140004610:	movabs rax,0x333333333333333
   14000461a:	ret    
   14000461b:	int3   
   14000461c:	int3   
   14000461d:	int3   
   14000461e:	int3   
   14000461f:	int3   
   140004620:	movabs rax,0x1fffffffffffffff
   14000462a:	ret    
   14000462b:	int3   
   14000462c:	int3   
   14000462d:	int3   
   14000462e:	int3   
   14000462f:	int3   
   140004630:	mov    QWORD PTR [rsp+0x8],rbx
   140004635:	push   rdi
   140004636:	sub    rsp,0x30
   14000463a:	xor    ebx,ebx
   14000463c:	mov    ecx,r8d
   14000463f:	mov    rdi,rdx
   140004642:	mov    DWORD PTR [rsp+0x20],ebx
   140004646:	call   0x140005644
   14000464b:	mov    QWORD PTR [rdi+0x18],0xf
   140004653:	test   rax,rax
   140004656:	mov    QWORD PTR [rdi+0x10],rbx
   14000465a:	lea    rdx,[rip+0x28127]        # 0x14002c788
   140004661:	cmovne rdx,rax
   140004665:	mov    BYTE PTR [rdi],bl
   140004667:	cmp    BYTE PTR [rdx],bl
   140004669:	je     0x140004679
   14000466b:	or     rbx,0xffffffffffffffff
   14000466f:	nop
   140004670:	inc    rbx
   140004673:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004677:	jne    0x140004670
   140004679:	mov    r8,rbx
   14000467c:	mov    rcx,rdi
   14000467f:	call   0x140003b00
   140004684:	mov    rbx,QWORD PTR [rsp+0x40]
   140004689:	mov    rax,rdi
   14000468c:	add    rsp,0x30
   140004690:	pop    rdi
   140004691:	ret    
   140004692:	int3   
   140004693:	int3   
   140004694:	int3   
   140004695:	int3   
   140004696:	int3   
   140004697:	int3   
   140004698:	int3   
   140004699:	int3   
   14000469a:	int3   
   14000469b:	int3   
   14000469c:	int3   
   14000469d:	int3   
   14000469e:	int3   
   14000469f:	int3   
   1400046a0:	rex push rbx
   1400046a2:	sub    rsp,0x30
   1400046a6:	xor    eax,eax
   1400046a8:	mov    rbx,rdx
   1400046ab:	mov    DWORD PTR [rsp+0x20],eax
   1400046af:	cmp    r8d,0x1
   1400046b3:	jne    0x1400046df
   1400046b5:	mov    QWORD PTR [rdx+0x18],0xf
   1400046bd:	mov    QWORD PTR [rdx+0x10],rax
   1400046c1:	mov    BYTE PTR [rdx],al
   1400046c3:	lea    rdx,[rip+0x28116]        # 0x14002c7e0
   1400046ca:	lea    r8d,[rax+0x15]
   1400046ce:	mov    rcx,rbx
   1400046d1:	call   0x140003b00
   1400046d6:	mov    rax,rbx
   1400046d9:	add    rsp,0x30
   1400046dd:	pop    rbx
   1400046de:	ret    
   1400046df:	call   0x140004630
   1400046e4:	mov    rax,rbx
   1400046e7:	add    rsp,0x30
   1400046eb:	pop    rbx
   1400046ec:	ret    
   1400046ed:	int3   
   1400046ee:	int3   
   1400046ef:	int3   
   1400046f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400046f5:	push   rdi
   1400046f6:	sub    rsp,0x30
   1400046fa:	xor    ebx,ebx
   1400046fc:	mov    ecx,r8d
   1400046ff:	mov    rdi,rdx
   140004702:	mov    DWORD PTR [rsp+0x20],ebx
   140004706:	call   0x14000566c
   14000470b:	mov    QWORD PTR [rdi+0x18],0xf
   140004713:	test   rax,rax
   140004716:	mov    QWORD PTR [rdi+0x10],rbx
   14000471a:	lea    rdx,[rip+0x28067]        # 0x14002c788
   140004721:	cmovne rdx,rax
   140004725:	mov    BYTE PTR [rdi],bl
   140004727:	cmp    BYTE PTR [rdx],bl
   140004729:	je     0x140004739
   14000472b:	or     rbx,0xffffffffffffffff
   14000472f:	nop
   140004730:	inc    rbx
   140004733:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004737:	jne    0x140004730
   140004739:	mov    r8,rbx
   14000473c:	mov    rcx,rdi
   14000473f:	call   0x140003b00
   140004744:	mov    rbx,QWORD PTR [rsp+0x40]
   140004749:	mov    rax,rdi
   14000474c:	add    rsp,0x30
   140004750:	pop    rdi
   140004751:	ret    
   140004752:	int3   
   140004753:	int3   
   140004754:	int3   
   140004755:	int3   
   140004756:	int3   
   140004757:	int3   
   140004758:	int3   
   140004759:	int3   
   14000475a:	int3   
   14000475b:	int3   
   14000475c:	int3   
   14000475d:	int3   
   14000475e:	int3   
   14000475f:	int3   
   140004760:	test   r8,r8
   140004763:	jne    0x140004769
   140004765:	mov    rax,rcx
   140004768:	ret    
   140004769:	jmp    0x1400059f0
   14000476e:	int3   
   14000476f:	int3   
   140004770:	lea    rax,[rip+0x28009]        # 0x14002c780
   140004777:	ret    
   140004778:	int3   
   140004779:	int3   
   14000477a:	int3   
   14000477b:	int3   
   14000477c:	int3   
   14000477d:	int3   
   14000477e:	int3   
   14000477f:	int3   
   140004780:	lea    rax,[rip+0x28049]        # 0x14002c7d0
   140004787:	ret    
   140004788:	int3   
   140004789:	int3   
   14000478a:	int3   
   14000478b:	int3   
   14000478c:	int3   
   14000478d:	int3   
   14000478e:	int3   
   14000478f:	int3   
   140004790:	lea    rax,[rip+0x28099]        # 0x14002c830
   140004797:	ret    
   140004798:	int3   
   140004799:	int3   
   14000479a:	int3   
   14000479b:	int3   
   14000479c:	int3   
   14000479d:	int3   
   14000479e:	int3   
   14000479f:	int3   
   1400047a0:	mov    rax,rdx
   1400047a3:	ret    
   1400047a4:	int3   
   1400047a5:	int3   
   1400047a6:	int3   
   1400047a7:	int3   
   1400047a8:	int3   
   1400047a9:	int3   
   1400047aa:	int3   
   1400047ab:	int3   
   1400047ac:	int3   
   1400047ad:	int3   
   1400047ae:	int3   
   1400047af:	int3   
   1400047b0:	mov    rax,rdx
   1400047b3:	ret    
   1400047b4:	int3   
   1400047b5:	int3   
   1400047b6:	int3   
   1400047b7:	int3   
   1400047b8:	int3   
   1400047b9:	int3   
   1400047ba:	int3   
   1400047bb:	int3   
   1400047bc:	int3   
   1400047bd:	int3   
   1400047be:	int3   
   1400047bf:	int3   
   1400047c0:	mov    rax,rdx
   1400047c3:	ret    
   1400047c4:	int3   
   1400047c5:	int3   
   1400047c6:	int3   
   1400047c7:	int3   
   1400047c8:	int3   
   1400047c9:	int3   
   1400047ca:	int3   
   1400047cb:	int3   
   1400047cc:	int3   
   1400047cd:	int3   
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	mov    rax,rdx
   1400047d3:	ret    
   1400047d4:	int3   
   1400047d5:	int3   
   1400047d6:	int3   
   1400047d7:	int3   
   1400047d8:	int3   
   1400047d9:	int3   
   1400047da:	int3   
   1400047db:	int3   
   1400047dc:	int3   
   1400047dd:	int3   
   1400047de:	int3   
   1400047df:	int3   
   1400047e0:	mov    rax,rcx
   1400047e3:	ret    
   1400047e4:	int3   
   1400047e5:	int3   
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	int3   
   1400047e9:	int3   
   1400047ea:	int3   
   1400047eb:	int3   
   1400047ec:	int3   
   1400047ed:	int3   
   1400047ee:	int3   
   1400047ef:	int3   
   1400047f0:	mov    rax,rcx
   1400047f3:	ret    
   1400047f4:	int3   
   1400047f5:	int3   
   1400047f6:	int3   
   1400047f7:	int3   
   1400047f8:	int3   
   1400047f9:	int3   
   1400047fa:	int3   
   1400047fb:	int3   
   1400047fc:	int3   
   1400047fd:	int3   
   1400047fe:	int3   
   1400047ff:	int3   
   140004800:	mov    rax,QWORD PTR [rcx+0x8]
   140004804:	ret    
   140004805:	int3   
   140004806:	int3   
   140004807:	int3   
   140004808:	int3   
   140004809:	int3   
   14000480a:	int3   
   14000480b:	int3   
   14000480c:	int3   
   14000480d:	int3   
   14000480e:	int3   
   14000480f:	int3   
   140004810:	mov    rax,QWORD PTR [rcx+0x10]
   140004814:	ret    
   140004815:	int3   
   140004816:	int3   
   140004817:	int3   
   140004818:	int3   
   140004819:	int3   
   14000481a:	int3   
   14000481b:	int3   
   14000481c:	int3   
   14000481d:	int3   
   14000481e:	int3   
   14000481f:	int3   
   140004820:	mov    rax,QWORD PTR [rcx+0x8]
   140004824:	ret    
   140004825:	int3   
   140004826:	int3   
   140004827:	int3   
   140004828:	int3   
   140004829:	int3   
   14000482a:	int3   
   14000482b:	int3   
   14000482c:	int3   
   14000482d:	int3   
   14000482e:	int3   
   14000482f:	int3   
   140004830:	mov    rax,QWORD PTR [rcx+0x8]
   140004834:	sub    rax,QWORD PTR [rcx]
   140004837:	sar    rax,0x3
   14000483b:	ret    
   14000483c:	int3   
   14000483d:	int3   
   14000483e:	int3   
   14000483f:	int3   
   140004840:	mov    QWORD PTR [rsp+0x8],rbx
   140004845:	push   rdi
   140004846:	mov    eax,0x102f0
   14000484b:	call   0x140006e30
   140004850:	sub    rsp,rax
   140004853:	lea    rcx,[rsp+0xe2]
   14000485b:	xor    edi,edi
   14000485d:	xor    edx,edx
   14000485f:	mov    r8d,0x206
   140004865:	mov    WORD PTR [rsp+0xe0],di
   14000486d:	call   0x140006f70
   140004872:	call   0x140004de6
   140004877:	mov    rbx,rax
   14000487a:	call   0x140004e2e
   14000487f:	lea    r8,[rip+0x27fba]        # 0x14002c840
   140004886:	lea    rcx,[rsp+0xe0]
   14000488e:	mov    edx,0x104
   140004893:	mov    r9,rax
   140004896:	mov    QWORD PTR [rsp+0x20],rbx
   14000489b:	call   0x140002860
   1400048a0:	lea    r8d,[rdi+0x68]
   1400048a4:	lea    rcx,[rsp+0x70]
   1400048a9:	xor    edx,edx
   1400048ab:	call   0x140006f70
   1400048b0:	xor    eax,eax
   1400048b2:	mov    DWORD PTR [rsp+0x70],0x68
   1400048ba:	mov    QWORD PTR [rsp+0x50],rax
   1400048bf:	mov    QWORD PTR [rsp+0x58],rax
   1400048c4:	mov    QWORD PTR [rsp+0x60],rax
   1400048c9:	call   QWORD PTR [rip+0x277e1]        # 0x14002c0b0
   1400048cf:	mov    ecx,0x22
   1400048d4:	mov    rbx,rax
   1400048d7:	movzx  eax,WORD PTR [rax]
   1400048da:	cmp    cx,ax
   1400048dd:	jne    0x1400048f8
   1400048df:	nop
   1400048e0:	movzx  eax,WORD PTR [rbx+0x2]
   1400048e4:	add    rbx,0x2
   1400048e8:	test   ax,ax
   1400048eb:	je     0x140004914
   1400048ed:	cmp    cx,ax
   1400048f0:	jne    0x1400048e0
   1400048f2:	add    rbx,0x2
   1400048f6:	jmp    0x140004942
   1400048f8:	mov    ecx,0x27
   1400048fd:	cmp    cx,ax
   140004900:	jne    0x14000491a
   140004902:	movzx  eax,WORD PTR [rbx+0x2]
   140004906:	add    rbx,0x2
   14000490a:	test   ax,ax
   14000490d:	je     0x140004914
   14000490f:	cmp    cx,ax
   140004912:	jne    0x140004902
   140004914:	add    rbx,0x2
   140004918:	jmp    0x140004942
   14000491a:	mov    edx,0xffdf
   14000491f:	mov    ecx,0x9
   140004924:	nop    DWORD PTR [rax+0x0]
   140004928:	nop    DWORD PTR [rax+rax*1+0x0]
   140004930:	movzx  eax,WORD PTR [rbx+0x2]
   140004934:	add    rbx,0x2
   140004938:	test   dx,ax
   14000493b:	je     0x140004942
   14000493d:	cmp    cx,ax
   140004940:	jne    0x140004930
   140004942:	lea    rcx,[rsp+0x2f2]
   14000494a:	xor    edx,edx
   14000494c:	mov    r8d,0xfffe
   140004952:	mov    WORD PTR [rsp+0x2f0],di
   14000495a:	call   0x140006f70
   14000495f:	cmp    WORD PTR [rbx],di
   140004962:	je     0x140004980
   140004964:	lea    r8,[rip+0x27f39]        # 0x14002c8a4
   14000496b:	lea    rcx,[rsp+0x2f0]
   140004973:	mov    r9,rbx
   140004976:	mov    edx,0x8000
   14000497b:	call   0x140002860
   140004980:	call   0x140004e28
   140004985:	lea    r9,[rsp+0x2f0]
   14000498d:	lea    r8,[rip+0x27f1c]        # 0x14002c8b0
   140004994:	lea    rcx,[rsp+0x2f0]
   14000499c:	mov    edx,0x8000
   1400049a1:	mov    QWORD PTR [rsp+0x20],rax
   1400049a6:	call   0x140002860
   1400049ab:	call   0x140004e2e
   1400049b0:	lea    rcx,[rsp+0x50]
   1400049b5:	mov    QWORD PTR [rsp+0x48],rcx
   1400049ba:	lea    rcx,[rsp+0x70]
   1400049bf:	lea    rdx,[rsp+0x2f0]
   1400049c7:	mov    QWORD PTR [rsp+0x40],rcx
   1400049cc:	mov    QWORD PTR [rsp+0x38],rax
   1400049d1:	mov    QWORD PTR [rsp+0x30],rdi
   1400049d6:	lea    rcx,[rsp+0xe0]
   1400049de:	xor    r9d,r9d
   1400049e1:	xor    r8d,r8d
   1400049e4:	mov    DWORD PTR [rsp+0x28],edi
   1400049e8:	mov    DWORD PTR [rsp+0x20],edi
   1400049ec:	call   QWORD PTR [rip+0x276d6]        # 0x14002c0c8
   1400049f2:	mov    rbx,QWORD PTR [rsp+0x10300]
   1400049fa:	add    rsp,0x102f0
   140004a01:	pop    rdi
   140004a02:	ret    
   140004a03:	int3   
   140004a04:	int3   
   140004a05:	int3   
   140004a06:	int3   
   140004a07:	int3   
   140004a08:	int3   
   140004a09:	int3   
   140004a0a:	int3   
   140004a0b:	int3   
   140004a0c:	int3   
   140004a0d:	int3   
   140004a0e:	int3   
   140004a0f:	int3   
   140004a10:	mov    QWORD PTR [rsp+0x8],rbx
   140004a15:	push   rdi
   140004a16:	mov    eax,0x102f0
   140004a1b:	call   0x140006e30
   140004a20:	sub    rsp,rax
   140004a23:	lea    rcx,[rsp+0xe2]
   140004a2b:	xor    edi,edi
   140004a2d:	xor    edx,edx
   140004a2f:	mov    r8d,0x206
   140004a35:	mov    WORD PTR [rsp+0xe0],di
   140004a3d:	call   0x140006f70
   140004a42:	call   0x140004de6
   140004a47:	mov    rbx,rax
   140004a4a:	call   0x140004e28
   140004a4f:	lea    r8,[rip+0x27dea]        # 0x14002c840
   140004a56:	lea    rcx,[rsp+0xe0]
   140004a5e:	mov    edx,0x104
   140004a63:	mov    r9,rax
   140004a66:	mov    QWORD PTR [rsp+0x20],rbx
   140004a6b:	call   0x140002860
   140004a70:	lea    r8d,[rdi+0x68]
   140004a74:	lea    rcx,[rsp+0x70]
   140004a79:	xor    edx,edx
   140004a7b:	call   0x140006f70
   140004a80:	xor    eax,eax
   140004a82:	mov    DWORD PTR [rsp+0x70],0x68
   140004a8a:	mov    QWORD PTR [rsp+0x50],rax
   140004a8f:	mov    QWORD PTR [rsp+0x58],rax
   140004a94:	mov    QWORD PTR [rsp+0x60],rax
   140004a99:	call   0x140004e2e
   140004a9e:	lea    r9,[rsp+0xe0]
   140004aa6:	lea    r8,[rip+0x27dbb]        # 0x14002c868
   140004aad:	lea    rcx,[rsp+0x2f0]
   140004ab5:	mov    edx,0x8000
   140004aba:	mov    QWORD PTR [rsp+0x20],rax
   140004abf:	call   0x140002860
   140004ac4:	call   0x140004e2e
   140004ac9:	lea    rcx,[rsp+0x50]
   140004ace:	mov    QWORD PTR [rsp+0x48],rcx
   140004ad3:	lea    rcx,[rsp+0x70]
   140004ad8:	lea    rdx,[rsp+0x2f0]
   140004ae0:	mov    QWORD PTR [rsp+0x40],rcx
   140004ae5:	mov    QWORD PTR [rsp+0x38],rax
   140004aea:	mov    QWORD PTR [rsp+0x30],rdi
   140004aef:	lea    rcx,[rsp+0xe0]
   140004af7:	xor    r9d,r9d
   140004afa:	xor    r8d,r8d
   140004afd:	mov    DWORD PTR [rsp+0x28],edi
   140004b01:	mov    DWORD PTR [rsp+0x20],edi
   140004b05:	call   QWORD PTR [rip+0x275bd]        # 0x14002c0c8
   140004b0b:	mov    rbx,QWORD PTR [rsp+0x10300]
   140004b13:	add    rsp,0x102f0
   140004b1a:	pop    rdi
   140004b1b:	ret    
   140004b1c:	int3   
   140004b1d:	int3   
   140004b1e:	int3   
   140004b1f:	int3   
   140004b20:	rex push rbx
   140004b22:	sub    rsp,0x90
   140004b29:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004b32:	mov    rbx,rdx
   140004b35:	xor    edx,edx
   140004b37:	call   0x140004e58
   140004b3c:	call   0x140004270
   140004b41:	call   QWORD PTR [rip+0x27569]        # 0x14002c0b0
   140004b47:	lea    rdx,[rip+0x27dca]        # 0x14002c918
   140004b4e:	mov    rcx,rax
   140004b51:	call   0x140005f58
   140004b56:	test   rax,rax
   140004b59:	jne    0x140004b74
   140004b5b:	lea    rcx,[rip+0x27dc6]        # 0x14002c928
   140004b62:	call   0x140004e04
   140004b67:	call   0x140004e28
   140004b6c:	mov    rcx,rax
   140004b6f:	call   0x140004e04
   140004b74:	lea    rcx,[rip+0x27dbd]        # 0x14002c938
   140004b7b:	call   0x140004e04
   140004b80:	call   0x140004e2e
   140004b85:	mov    rcx,rax
   140004b88:	call   0x140004e04
   140004b8d:	lea    rdx,[rsp+0x48]
   140004b92:	mov    rcx,rbx
   140004b95:	call   0x140004e46
   140004b9a:	nop
   140004b9b:	call   0x140004e2e
   140004ba0:	mov    r8,rax
   140004ba3:	lea    rdx,[rsp+0x28]
   140004ba8:	mov    rcx,rbx
   140004bab:	call   0x140004e4c
   140004bb0:	nop
   140004bb1:	mov    QWORD PTR [rsp+0x80],0xf
   140004bbd:	xor    ebx,ebx
   140004bbf:	mov    QWORD PTR [rsp+0x78],rbx
   140004bc4:	mov    BYTE PTR [rsp+0x68],bl
   140004bc8:	or     r9,0xffffffffffffffff
   140004bcc:	xor    r8d,r8d
   140004bcf:	lea    rdx,[rsp+0x28]
   140004bd4:	lea    rcx,[rsp+0x68]
   140004bd9:	call   0x1400039b0
   140004bde:	lea    rcx,[rsp+0x48]
   140004be3:	cmp    QWORD PTR [rsp+0x60],0x10
   140004be9:	cmovae rcx,QWORD PTR [rsp+0x48]
   140004bef:	lea    rdx,[rsp+0x68]
   140004bf4:	call   0x140004e34
   140004bf9:	call   0x140004e5e
   140004bfe:	call   0x140004df2
   140004c03:	test   eax,eax
   140004c05:	jne    0x140004c17
   140004c07:	call   0x140004dfe
   140004c0c:	cmp    eax,0x1
   140004c0f:	jne    0x140004c17
   140004c11:	call   0x140004a10
   140004c16:	nop
   140004c17:	cmp    QWORD PTR [rsp+0x40],0x10
   140004c1d:	jb     0x140004c29
   140004c1f:	mov    rcx,QWORD PTR [rsp+0x28]
   140004c24:	call   0x140005778
   140004c29:	mov    QWORD PTR [rsp+0x40],0xf
   140004c32:	mov    QWORD PTR [rsp+0x38],rbx
   140004c37:	mov    BYTE PTR [rsp+0x28],0x0
   140004c3c:	cmp    QWORD PTR [rsp+0x60],0x10
   140004c42:	jb     0x140004c4e
   140004c44:	mov    rcx,QWORD PTR [rsp+0x48]
   140004c49:	call   0x140005778
   140004c4e:	xor    eax,eax
   140004c50:	add    rsp,0x90
   140004c57:	pop    rbx
   140004c58:	ret    
   140004c59:	int3   
   140004c5a:	int3   
   140004c5b:	int3   
   140004c5c:	int3   
   140004c5d:	int3   
   140004c5e:	int3   
   140004c5f:	int3   
   140004c60:	lea    rax,[rip+0x373a9]        # 0x14003c010
   140004c67:	ret    
   140004c68:	int3   
   140004c69:	int3   
   140004c6a:	int3   
   140004c6b:	int3   
   140004c6c:	int3   
   140004c6d:	int3   
   140004c6e:	int3   
   140004c6f:	int3   
   140004c70:	mov    eax,DWORD PTR [rcx]
   140004c72:	ret    
   140004c73:	int3   
   140004c74:	int3   
   140004c75:	int3   
   140004c76:	int3   
   140004c77:	int3   
   140004c78:	int3   
   140004c79:	int3   
   140004c7a:	int3   
   140004c7b:	int3   
   140004c7c:	int3   
   140004c7d:	int3   
   140004c7e:	int3   
   140004c7f:	int3   
   140004c80:	mov    eax,DWORD PTR [rcx]
   140004c82:	ret    
   140004c83:	int3   
   140004c84:	int3   
   140004c85:	int3   
   140004c86:	int3   
   140004c87:	int3   
   140004c88:	int3   
   140004c89:	int3   
   140004c8a:	int3   
   140004c8b:	int3   
   140004c8c:	int3   
   140004c8d:	int3   
   140004c8e:	int3   
   140004c8f:	int3   
   140004c90:	jmp    0x140005f58
   140004c95:	int3   
   140004c96:	int3   
   140004c97:	int3   
   140004c98:	int3   
   140004c99:	int3   
   140004c9a:	int3   
   140004c9b:	int3   
   140004c9c:	int3   
   140004c9d:	int3   
   140004c9e:	int3   
   140004c9f:	int3   
   140004ca0:	rex push rbx
   140004ca2:	sub    rsp,0x480
   140004ca9:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140004cb2:	mov    rbx,rcx
   140004cb5:	lea    rdx,[rsp+0x20]
   140004cba:	call   0x140004380
   140004cbf:	cmp    QWORD PTR [rsp+0x20],0x0
   140004cc5:	jne    0x140004d39
   140004cc7:	xor    ecx,ecx
   140004cc9:	call   QWORD PTR [rip+0x27401]        # 0x14002c0d0
   140004ccf:	mov    rbx,rax
   140004cd2:	mov    r9d,0x100
   140004cd8:	lea    r8,[rsp+0x280]
   140004ce0:	mov    edx,0x6d
   140004ce5:	mov    rcx,rax
   140004ce8:	call   QWORD PTR [rip+0x275e2]        # 0x14002c2d0
   140004cee:	mov    r9d,0x100
   140004cf4:	lea    r8,[rsp+0x80]
   140004cfc:	mov    edx,0x6e
   140004d01:	mov    rcx,rbx
   140004d04:	call   QWORD PTR [rip+0x275c6]        # 0x14002c2d0
   140004d0a:	xor    r9d,r9d
   140004d0d:	lea    r8,[rsp+0x80]
   140004d15:	lea    rdx,[rsp+0x280]
   140004d1d:	xor    ecx,ecx
   140004d1f:	call   QWORD PTR [rip+0x2758b]        # 0x14002c2b0
   140004d25:	mov    ecx,0x1
   140004d2a:	call   0x140004e0a
   140004d2f:	call   0x140004e10
   140004d34:	jmp    0x140004dce
   140004d39:	call   0x140004dec
   140004d3e:	call   0x140004e28
   140004d43:	mov    rdx,rax
   140004d46:	lea    rcx,[rsp+0x30]
   140004d4b:	call   0x140004e3a
   140004d50:	nop
   140004d51:	call   0x140004df2
   140004d56:	test   eax,eax
   140004d58:	jne    0x140004db6
   140004d5a:	call   0x140004dfe
   140004d5f:	test   eax,eax
   140004d61:	je     0x140004d74
   140004d63:	lea    rcx,[rsp+0x30]
   140004d68:	call   0x140004e52
   140004d6d:	mov    ecx,eax
   140004d6f:	call   0x140004df8
   140004d74:	call   0x140004e1c
   140004d79:	test   eax,eax
   140004d7b:	je     0x140004d8e
   140004d7d:	call   0x140004e22
   140004d82:	mov    ecx,0x1
   140004d87:	call   0x140004e0a
   140004d8c:	jmp    0x140004dbb
   140004d8e:	call   0x140004dfe
   140004d93:	test   eax,eax
   140004d95:	je     0x140004da7
   140004d97:	call   0x140004e16
   140004d9c:	test   eax,eax
   140004d9e:	je     0x140004da7
   140004da0:	call   0x140004840
   140004da5:	jmp    0x140004dbb
   140004da7:	lea    rdx,[rsp+0x30]
   140004dac:	mov    rcx,rbx
   140004daf:	call   0x140004b20
   140004db4:	jmp    0x140004dbb
   140004db6:	call   0x140004e22
   140004dbb:	call   0x140004e10
   140004dc0:	mov    ebx,eax
   140004dc2:	lea    rcx,[rsp+0x30]
   140004dc7:	call   0x140004e40
   140004dcc:	mov    eax,ebx
   140004dce:	add    rsp,0x480
   140004dd5:	pop    rbx
   140004dd6:	ret    
   140004dd7:	int3   
   140004dd8:	int3   
   140004dd9:	int3   
   140004dda:	int3   
   140004ddb:	int3   
   140004ddc:	int3   
   140004ddd:	int3   
   140004dde:	int3   
   140004ddf:	int3   
   140004de0:	jmp    0x140006268
   140004de5:	int3   
   140004de6:	jmp    QWORD PTR [rip+0x27594]        # 0x14002c380
   140004dec:	jmp    QWORD PTR [rip+0x27586]        # 0x14002c378
   140004df2:	jmp    QWORD PTR [rip+0x27578]        # 0x14002c370
   140004df8:	jmp    QWORD PTR [rip+0x2756a]        # 0x14002c368
   140004dfe:	jmp    QWORD PTR [rip+0x2755c]        # 0x14002c360
   140004e04:	jmp    QWORD PTR [rip+0x2754e]        # 0x14002c358
   140004e0a:	jmp    QWORD PTR [rip+0x27540]        # 0x14002c350
   140004e10:	jmp    QWORD PTR [rip+0x27532]        # 0x14002c348
   140004e16:	jmp    QWORD PTR [rip+0x27524]        # 0x14002c340
   140004e1c:	jmp    QWORD PTR [rip+0x27516]        # 0x14002c338
   140004e22:	jmp    QWORD PTR [rip+0x27508]        # 0x14002c330
   140004e28:	jmp    QWORD PTR [rip+0x274fa]        # 0x14002c328
   140004e2e:	jmp    QWORD PTR [rip+0x274ec]        # 0x14002c320
   140004e34:	jmp    QWORD PTR [rip+0x274de]        # 0x14002c318
   140004e3a:	jmp    QWORD PTR [rip+0x274d0]        # 0x14002c310
   140004e40:	jmp    QWORD PTR [rip+0x274c2]        # 0x14002c308
   140004e46:	jmp    QWORD PTR [rip+0x274b4]        # 0x14002c300
   140004e4c:	jmp    QWORD PTR [rip+0x274a6]        # 0x14002c2f8
   140004e52:	jmp    QWORD PTR [rip+0x27498]        # 0x14002c2f0
   140004e58:	jmp    QWORD PTR [rip+0x2748a]        # 0x14002c2e8
   140004e5e:	jmp    QWORD PTR [rip+0x2747c]        # 0x14002c2e0
   140004e64:	jmp    QWORD PTR [rip+0x27246]        # 0x14002c0b0
   140004e6a:	jmp    QWORD PTR [rip+0x27248]        # 0x14002c0b8
   140004e70:	jmp    QWORD PTR [rip+0x2724a]        # 0x14002c0c0
   140004e76:	jmp    QWORD PTR [rip+0x2724c]        # 0x14002c0c8
   140004e7c:	jmp    QWORD PTR [rip+0x2724e]        # 0x14002c0d0
   140004e82:	jmp    QWORD PTR [rip+0x27448]        # 0x14002c2d0
   140004e88:	jmp    QWORD PTR [rip+0x2743a]        # 0x14002c2c8
   140004e8e:	jmp    QWORD PTR [rip+0x2742c]        # 0x14002c2c0
   140004e94:	jmp    QWORD PTR [rip+0x2741e]        # 0x14002c2b8
   140004e9a:	jmp    QWORD PTR [rip+0x27410]        # 0x14002c2b0
   140004ea0:	jmp    QWORD PTR [rip+0x27402]        # 0x14002c2a8
   140004ea6:	int3   
   140004ea7:	int3   
   140004ea8:	rex push rbx
   140004eaa:	sub    rsp,0x20
   140004eae:	mov    rbx,rcx
   140004eb1:	call   0x14000772c
   140004eb6:	lea    rax,[rip+0x280eb]        # 0x14002cfa8
   140004ebd:	mov    QWORD PTR [rbx],rax
   140004ec0:	mov    rax,rbx
   140004ec3:	add    rsp,0x20
   140004ec7:	pop    rbx
   140004ec8:	ret    
   140004ec9:	int3   
   140004eca:	int3   
   140004ecb:	int3   
   140004ecc:	rex push rbx
   140004ece:	sub    rsp,0x20
   140004ed2:	lea    rax,[rip+0x280df]        # 0x14002cfb8
   140004ed9:	lea    rdx,[rsp+0x30]
   140004ede:	mov    r8d,0x1
   140004ee4:	mov    QWORD PTR [rsp+0x30],rax
   140004ee9:	mov    rbx,rcx
   140004eec:	call   0x140007710
   140004ef1:	lea    rax,[rip+0x280b0]        # 0x14002cfa8
   140004ef8:	mov    QWORD PTR [rbx],rax
   140004efb:	mov    rax,rbx
   140004efe:	add    rsp,0x20
   140004f02:	pop    rbx
   140004f03:	ret    
   140004f04:	rex push rbx
   140004f06:	sub    rsp,0x20
   140004f0a:	mov    rbx,rcx
   140004f0d:	call   0x14000772c
   140004f12:	lea    rax,[rip+0x28147]        # 0x14002d060
   140004f19:	mov    QWORD PTR [rbx],rax
   140004f1c:	mov    rax,rbx
   140004f1f:	add    rsp,0x20
   140004f23:	pop    rbx
   140004f24:	ret    
   140004f25:	int3   
   140004f26:	int3   
   140004f27:	int3   
   140004f28:	rex push rbx
   140004f2a:	sub    rsp,0x20
   140004f2e:	mov    rbx,rcx
   140004f31:	call   0x140007758
   140004f36:	lea    rax,[rip+0x28123]        # 0x14002d060
   140004f3d:	mov    QWORD PTR [rbx],rax
   140004f40:	mov    rax,rbx
   140004f43:	add    rsp,0x20
   140004f47:	pop    rbx
   140004f48:	ret    
   140004f49:	int3   
   140004f4a:	int3   
   140004f4b:	int3   
   140004f4c:	rex push rbx
   140004f4e:	sub    rsp,0x20
   140004f52:	mov    rbx,rcx
   140004f55:	call   0x14000772c
   140004f5a:	lea    rax,[rip+0x28087]        # 0x14002cfe8
   140004f61:	mov    QWORD PTR [rbx],rax
   140004f64:	mov    rax,rbx
   140004f67:	add    rsp,0x20
   140004f6b:	pop    rbx
   140004f6c:	ret    
   140004f6d:	int3   
   140004f6e:	int3   
   140004f6f:	int3   
   140004f70:	rex push rbx
   140004f72:	sub    rsp,0x20
   140004f76:	mov    QWORD PTR [rsp+0x30],rdx
   140004f7b:	lea    rdx,[rsp+0x30]
   140004f80:	mov    rbx,rcx
   140004f83:	call   0x1400076e0
   140004f88:	lea    rax,[rip+0x28059]        # 0x14002cfe8
   140004f8f:	mov    QWORD PTR [rbx],rax
   140004f92:	mov    rax,rbx
   140004f95:	add    rsp,0x20
   140004f99:	pop    rbx
   140004f9a:	ret    
   140004f9b:	int3   
   140004f9c:	rex push rbx
   140004f9e:	sub    rsp,0x20
   140004fa2:	mov    rbx,rcx
   140004fa5:	call   0x14000772c
   140004faa:	lea    rax,[rip+0x2804f]        # 0x14002d000
   140004fb1:	mov    QWORD PTR [rbx],rax
   140004fb4:	mov    rax,rbx
   140004fb7:	add    rsp,0x20
   140004fbb:	pop    rbx
   140004fbc:	ret    
   140004fbd:	int3   
   140004fbe:	int3   
   140004fbf:	int3   
   140004fc0:	rex push rbx
   140004fc2:	sub    rsp,0x20
   140004fc6:	mov    QWORD PTR [rsp+0x30],rdx
   140004fcb:	lea    rdx,[rsp+0x30]
   140004fd0:	mov    rbx,rcx
   140004fd3:	call   0x1400076e0
   140004fd8:	lea    rax,[rip+0x28021]        # 0x14002d000
   140004fdf:	mov    QWORD PTR [rbx],rax
   140004fe2:	mov    rax,rbx
   140004fe5:	add    rsp,0x20
   140004fe9:	pop    rbx
   140004fea:	ret    
   140004feb:	int3   
   140004fec:	rex push rbx
   140004fee:	sub    rsp,0x20
   140004ff2:	mov    rbx,rcx
   140004ff5:	call   0x14000772c
   140004ffa:	lea    rax,[rip+0x27fcf]        # 0x14002cfd0
   140005001:	mov    QWORD PTR [rbx],rax
   140005004:	mov    rax,rbx
   140005007:	add    rsp,0x20
   14000500b:	pop    rbx
   14000500c:	ret    
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	mov    QWORD PTR [rsp+0x10],rdx
   140005015:	push   rbx
   140005016:	sub    rsp,0x20
   14000501a:	lea    rdx,[rsp+0x38]
   14000501f:	mov    rbx,rcx
   140005022:	call   0x1400076e0
   140005027:	lea    rax,[rip+0x27fa2]        # 0x14002cfd0
   14000502e:	mov    QWORD PTR [rbx],rax
   140005031:	mov    rax,rbx
   140005034:	add    rsp,0x20
   140005038:	pop    rbx
   140005039:	ret    
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	rex push rbx
   14000503e:	sub    rsp,0x20
   140005042:	mov    rbx,rcx
   140005045:	call   0x14000772c
   14000504a:	lea    rax,[rip+0x27fc7]        # 0x14002d018
   140005051:	mov    QWORD PTR [rbx],rax
   140005054:	mov    rax,rbx
   140005057:	add    rsp,0x20
   14000505b:	pop    rbx
   14000505c:	ret    
   14000505d:	int3   
   14000505e:	int3   
   14000505f:	int3   
   140005060:	rex push rbx
   140005062:	sub    rsp,0x20
   140005066:	mov    QWORD PTR [rsp+0x30],rdx
   14000506b:	lea    rdx,[rsp+0x30]
   140005070:	mov    rbx,rcx
   140005073:	call   0x1400076e0
   140005078:	lea    rax,[rip+0x27f99]        # 0x14002d018
   14000507f:	mov    QWORD PTR [rbx],rax
   140005082:	mov    rax,rbx
   140005085:	add    rsp,0x20
   140005089:	pop    rbx
   14000508a:	ret    
   14000508b:	int3   
   14000508c:	rex push rbx
   14000508e:	sub    rsp,0x20
   140005092:	mov    rbx,rcx
   140005095:	call   0x14000772c
   14000509a:	lea    rax,[rip+0x27fa7]        # 0x14002d048
   1400050a1:	mov    QWORD PTR [rbx],rax
   1400050a4:	mov    rax,rbx
   1400050a7:	add    rsp,0x20
   1400050ab:	pop    rbx
   1400050ac:	ret    
   1400050ad:	int3   
   1400050ae:	int3   
   1400050af:	int3   
   1400050b0:	rex push rbx
   1400050b2:	sub    rsp,0x20
   1400050b6:	mov    QWORD PTR [rsp+0x30],rdx
   1400050bb:	lea    rdx,[rsp+0x30]
   1400050c0:	mov    rbx,rcx
   1400050c3:	call   0x1400076e0
   1400050c8:	lea    rax,[rip+0x27f79]        # 0x14002d048
   1400050cf:	mov    QWORD PTR [rbx],rax
   1400050d2:	mov    rax,rbx
   1400050d5:	add    rsp,0x20
   1400050d9:	pop    rbx
   1400050da:	ret    
   1400050db:	int3   
   1400050dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400050e1:	push   rdi
   1400050e2:	sub    rsp,0x20
   1400050e6:	mov    rbx,rdx
   1400050e9:	mov    rdi,rcx
   1400050ec:	call   0x14000772c
   1400050f1:	lea    rax,[rip+0x27f98]        # 0x14002d090
   1400050f8:	mov    QWORD PTR [rdi],rax
   1400050fb:	mov    eax,DWORD PTR [rbx+0x18]
   1400050fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140005103:	mov    DWORD PTR [rdi+0x18],eax
   140005106:	mov    rax,rdi
   140005109:	add    rsp,0x20
   14000510d:	pop    rdi
   14000510e:	ret    
   14000510f:	int3   
   140005110:	mov    QWORD PTR [rsp+0x10],rbx
   140005115:	push   rdi
   140005116:	sub    rsp,0x20
   14000511a:	mov    rdi,rcx
   14000511d:	mov    ecx,edx
   14000511f:	mov    ebx,edx
   140005121:	call   0x1400053b0
   140005126:	lea    rdx,[rsp+0x30]
   14000512b:	mov    rcx,rdi
   14000512e:	mov    QWORD PTR [rsp+0x30],rax
   140005133:	call   0x1400076e0
   140005138:	lea    rax,[rip+0x27f51]        # 0x14002d090
   14000513f:	mov    QWORD PTR [rdi],rax
   140005142:	mov    DWORD PTR [rdi+0x18],ebx
   140005145:	mov    rbx,QWORD PTR [rsp+0x38]
   14000514a:	mov    rax,rdi
   14000514d:	add    rsp,0x20
   140005151:	pop    rdi
   140005152:	ret    
   140005153:	int3   
   140005154:	rex push rbx
   140005156:	sub    rsp,0x20
   14000515a:	mov    rbx,rcx
   14000515d:	call   0x14000772c
   140005162:	lea    rax,[rip+0x27ec7]        # 0x14002d030
   140005169:	mov    QWORD PTR [rbx],rax
   14000516c:	mov    rax,rbx
   14000516f:	add    rsp,0x20
   140005173:	pop    rbx
   140005174:	ret    
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	mov    QWORD PTR [rsp+0x10],rdx
   14000517d:	push   rbx
   14000517e:	sub    rsp,0x20
   140005182:	lea    rdx,[rsp+0x38]
   140005187:	mov    rbx,rcx
   14000518a:	call   0x1400076e0
   14000518f:	lea    rax,[rip+0x27e9a]        # 0x14002d030
   140005196:	mov    QWORD PTR [rbx],rax
   140005199:	mov    rax,rbx
   14000519c:	add    rsp,0x20
   1400051a0:	pop    rbx
   1400051a1:	ret    
   1400051a2:	int3   
   1400051a3:	int3   
   1400051a4:	lea    rax,[rip+0x27dfd]        # 0x14002cfa8
   1400051ab:	mov    QWORD PTR [rcx],rax
   1400051ae:	jmp    0x1400077a0
   1400051b3:	int3   
   1400051b4:	jmp    0x1400077a0
   1400051b9:	int3   
   1400051ba:	int3   
   1400051bb:	int3   
   1400051bc:	jmp    0x1400077a0
   1400051c1:	int3   
   1400051c2:	int3   
   1400051c3:	int3   
   1400051c4:	jmp    0x1400077a0
   1400051c9:	int3   
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	jmp    0x1400077a0
   1400051d1:	int3   
   1400051d2:	int3   
   1400051d3:	int3   
   1400051d4:	jmp    0x1400077a0
   1400051d9:	int3   
   1400051da:	int3   
   1400051db:	int3   
   1400051dc:	jmp    0x1400077a0
   1400051e1:	int3   
   1400051e2:	int3   
   1400051e3:	int3   
   1400051e4:	jmp    0x1400077a0
   1400051e9:	int3   
   1400051ea:	int3   
   1400051eb:	int3   
   1400051ec:	jmp    0x1400077a0
   1400051f1:	int3   
   1400051f2:	int3   
   1400051f3:	int3   
   1400051f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400051f9:	push   rdi
   1400051fa:	sub    rsp,0x20
   1400051fe:	lea    rax,[rip+0x27da3]        # 0x14002cfa8
   140005205:	mov    ebx,edx
   140005207:	mov    rdi,rcx
   14000520a:	mov    QWORD PTR [rcx],rax
   14000520d:	call   0x1400077a0
   140005212:	test   bl,0x1
   140005215:	je     0x14000521f
   140005217:	mov    rcx,rdi
   14000521a:	call   0x140005778
   14000521f:	mov    rax,rdi
   140005222:	mov    rbx,QWORD PTR [rsp+0x30]
   140005227:	add    rsp,0x20
   14000522b:	pop    rdi
   14000522c:	ret    
   14000522d:	int3   
   14000522e:	int3   
   14000522f:	int3   
   140005230:	mov    QWORD PTR [rsp+0x8],rbx
   140005235:	push   rdi
   140005236:	sub    rsp,0x20
   14000523a:	mov    ebx,edx
   14000523c:	mov    rdi,rcx
   14000523f:	call   0x1400077a0
   140005244:	test   bl,0x1
   140005247:	je     0x140005251
   140005249:	mov    rcx,rdi
   14000524c:	call   0x140005778
   140005251:	mov    rax,rdi
   140005254:	mov    rbx,QWORD PTR [rsp+0x30]
   140005259:	add    rsp,0x20
   14000525d:	pop    rdi
   14000525e:	ret    
   14000525f:	int3   
   140005260:	mov    QWORD PTR [rsp+0x8],rbx
   140005265:	push   rdi
   140005266:	sub    rsp,0x20
   14000526a:	mov    ebx,edx
   14000526c:	mov    rdi,rcx
   14000526f:	call   0x1400077a0
   140005274:	test   bl,0x1
   140005277:	je     0x140005281
   140005279:	mov    rcx,rdi
   14000527c:	call   0x140005778
   140005281:	mov    rax,rdi
   140005284:	mov    rbx,QWORD PTR [rsp+0x30]
   140005289:	add    rsp,0x20
   14000528d:	pop    rdi
   14000528e:	ret    
   14000528f:	int3   
   140005290:	mov    QWORD PTR [rsp+0x8],rbx
   140005295:	push   rdi
   140005296:	sub    rsp,0x20
   14000529a:	mov    ebx,edx
   14000529c:	mov    rdi,rcx
   14000529f:	call   0x1400077a0
   1400052a4:	test   bl,0x1
   1400052a7:	je     0x1400052b1
   1400052a9:	mov    rcx,rdi
   1400052ac:	call   0x140005778
   1400052b1:	mov    rax,rdi
   1400052b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400052b9:	add    rsp,0x20
   1400052bd:	pop    rdi
   1400052be:	ret    
   1400052bf:	int3   
   1400052c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400052c5:	push   rdi
   1400052c6:	sub    rsp,0x20
   1400052ca:	mov    ebx,edx
   1400052cc:	mov    rdi,rcx
   1400052cf:	call   0x1400077a0
   1400052d4:	test   bl,0x1
   1400052d7:	je     0x1400052e1
   1400052d9:	mov    rcx,rdi
   1400052dc:	call   0x140005778
   1400052e1:	mov    rax,rdi
   1400052e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400052e9:	add    rsp,0x20
   1400052ed:	pop    rdi
   1400052ee:	ret    
   1400052ef:	int3   
   1400052f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400052f5:	push   rdi
   1400052f6:	sub    rsp,0x20
   1400052fa:	mov    ebx,edx
   1400052fc:	mov    rdi,rcx
   1400052ff:	call   0x1400077a0
   140005304:	test   bl,0x1
   140005307:	je     0x140005311
   140005309:	mov    rcx,rdi
   14000530c:	call   0x140005778
   140005311:	mov    rax,rdi
   140005314:	mov    rbx,QWORD PTR [rsp+0x30]
   140005319:	add    rsp,0x20
   14000531d:	pop    rdi
   14000531e:	ret    
   14000531f:	int3   
   140005320:	mov    QWORD PTR [rsp+0x8],rbx
   140005325:	push   rdi
   140005326:	sub    rsp,0x20
   14000532a:	mov    ebx,edx
   14000532c:	mov    rdi,rcx
   14000532f:	call   0x1400077a0
   140005334:	test   bl,0x1
   140005337:	je     0x140005341
   140005339:	mov    rcx,rdi
   14000533c:	call   0x140005778
   140005341:	mov    rax,rdi
   140005344:	mov    rbx,QWORD PTR [rsp+0x30]
   140005349:	add    rsp,0x20
   14000534d:	pop    rdi
   14000534e:	ret    
   14000534f:	int3   
   140005350:	mov    QWORD PTR [rsp+0x8],rbx
   140005355:	push   rdi
   140005356:	sub    rsp,0x20
   14000535a:	mov    ebx,edx
   14000535c:	mov    rdi,rcx
   14000535f:	call   0x1400077a0
   140005364:	test   bl,0x1
   140005367:	je     0x140005371
   140005369:	mov    rcx,rdi
   14000536c:	call   0x140005778
   140005371:	mov    rax,rdi
   140005374:	mov    rbx,QWORD PTR [rsp+0x30]
   140005379:	add    rsp,0x20
   14000537d:	pop    rdi
   14000537e:	ret    
   14000537f:	int3   
   140005380:	mov    QWORD PTR [rsp+0x8],rbx
   140005385:	push   rdi
   140005386:	sub    rsp,0x20
   14000538a:	mov    ebx,edx
   14000538c:	mov    rdi,rcx
   14000538f:	call   0x1400077a0
   140005394:	test   bl,0x1
   140005397:	je     0x1400053a1
   140005399:	mov    rcx,rdi
   14000539c:	call   0x140005778
   1400053a1:	mov    rax,rdi
   1400053a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053a9:	add    rsp,0x20
   1400053ad:	pop    rdi
   1400053ae:	ret    
   1400053af:	int3   
   1400053b0:	cmp    ecx,0x7
   1400053b3:	jg     0x140005413
   1400053b5:	je     0x14000540b
   1400053b7:	test   ecx,ecx
   1400053b9:	je     0x140005403
   1400053bb:	dec    ecx
   1400053bd:	je     0x1400053fb
   1400053bf:	dec    ecx
   1400053c1:	je     0x1400053f3
   1400053c3:	dec    ecx
   1400053c5:	je     0x1400053eb
   1400053c7:	dec    ecx
   1400053c9:	je     0x1400053e3
   1400053cb:	dec    ecx
   1400053cd:	je     0x1400053db
   1400053cf:	dec    ecx
   1400053d1:	jne    0x140005430
   1400053d3:	lea    rax,[rip+0x27ee6]        # 0x14002d2c0
   1400053da:	ret    
   1400053db:	lea    rax,[rip+0x27e8e]        # 0x14002d270
   1400053e2:	ret    
   1400053e3:	lea    rax,[rip+0x27e36]        # 0x14002d220
   1400053ea:	ret    
   1400053eb:	lea    rax,[rip+0x27dde]        # 0x14002d1d0
   1400053f2:	ret    
   1400053f3:	lea    rax,[rip+0x27d66]        # 0x14002d160
   1400053fa:	ret    
   1400053fb:	lea    rax,[rip+0x27cfe]        # 0x14002d100
   140005402:	ret    
   140005403:	lea    rax,[rip+0x27c96]        # 0x14002d0a0
   14000540a:	ret    
   14000540b:	lea    rax,[rip+0x27efe]        # 0x14002d310
   140005412:	ret    
   140005413:	sub    ecx,0x8
   140005416:	je     0x140005468
   140005418:	dec    ecx
   14000541a:	je     0x140005460
   14000541c:	dec    ecx
   14000541e:	je     0x140005458
   140005420:	dec    ecx
   140005422:	je     0x140005450
   140005424:	dec    ecx
   140005426:	je     0x140005448
   140005428:	dec    ecx
   14000542a:	je     0x140005440
   14000542c:	dec    ecx
   14000542e:	je     0x140005438
   140005430:	lea    rax,[rip+0x281d1]        # 0x14002d608
   140005437:	ret    
   140005438:	lea    rax,[rip+0x281a9]        # 0x14002d5e8
   14000543f:	ret    
   140005440:	lea    rax,[rip+0x28181]        # 0x14002d5c8
   140005447:	ret    
   140005448:	lea    rax,[rip+0x280e1]        # 0x14002d530
   14000544f:	ret    
   140005450:	lea    rax,[rip+0x28059]        # 0x14002d4b0
   140005457:	ret    
   140005458:	lea    rax,[rip+0x27ff1]        # 0x14002d450
   14000545f:	ret    
   140005460:	lea    rax,[rip+0x27f79]        # 0x14002d3e0
   140005467:	ret    
   140005468:	lea    rax,[rip+0x27f01]        # 0x14002d370
   14000546f:	ret    
   140005470:	sub    rsp,0x48
   140005474:	lea    rax,[rip+0x27b3d]        # 0x14002cfb8
   14000547b:	lea    rdx,[rsp+0x50]
   140005480:	lea    rcx,[rsp+0x20]
   140005485:	mov    r8d,0x1
   14000548b:	mov    QWORD PTR [rsp+0x50],rax
   140005490:	call   0x140007710
   140005495:	lea    rax,[rip+0x27b0c]        # 0x14002cfa8
   14000549c:	lea    rdx,[rip+0x34b05]        # 0x140039fa8
   1400054a3:	lea    rcx,[rsp+0x20]
   1400054a8:	mov    QWORD PTR [rsp+0x20],rax
   1400054ad:	call   0x140006570
   1400054b2:	int3   
   1400054b3:	int3   
   1400054b4:	sub    rsp,0x48
   1400054b8:	lea    rcx,[rsp+0x20]
   1400054bd:	call   0x140007758
   1400054c2:	lea    rax,[rip+0x27b97]        # 0x14002d060
   1400054c9:	lea    rdx,[rip+0x34d88]        # 0x14003a258
   1400054d0:	lea    rcx,[rsp+0x20]
   1400054d5:	mov    QWORD PTR [rsp+0x20],rax
   1400054da:	call   0x140006570
   1400054df:	int3   
   1400054e0:	sub    rsp,0x48
   1400054e4:	mov    QWORD PTR [rsp+0x50],rcx
   1400054e9:	lea    rdx,[rsp+0x50]
   1400054ee:	lea    rcx,[rsp+0x20]
   1400054f3:	call   0x1400076e0
   1400054f8:	lea    rax,[rip+0x27ae9]        # 0x14002cfe8
   1400054ff:	lea    rdx,[rip+0x34b2a]        # 0x14003a030
   140005506:	lea    rcx,[rsp+0x20]
   14000550b:	mov    QWORD PTR [rsp+0x20],rax
   140005510:	call   0x140006570
   140005515:	int3   
   140005516:	int3   
   140005517:	int3   
   140005518:	sub    rsp,0x48
   14000551c:	mov    QWORD PTR [rsp+0x50],rcx
   140005521:	lea    rdx,[rsp+0x50]
   140005526:	lea    rcx,[rsp+0x20]
   14000552b:	call   0x1400076e0
   140005530:	lea    rax,[rip+0x27ac9]        # 0x14002d000
   140005537:	lea    rdx,[rip+0x34b82]        # 0x14003a0c0
   14000553e:	lea    rcx,[rsp+0x20]
   140005543:	mov    QWORD PTR [rsp+0x20],rax
   140005548:	call   0x140006570
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	sub    rsp,0x48
   140005554:	mov    QWORD PTR [rsp+0x50],rcx
   140005559:	lea    rdx,[rsp+0x50]
   14000555e:	lea    rcx,[rsp+0x20]
   140005563:	call   0x1400076e0
   140005568:	lea    rax,[rip+0x27aa9]        # 0x14002d018
   14000556f:	lea    rdx,[rip+0x34bb2]        # 0x14003a128
   140005576:	lea    rcx,[rsp+0x20]
   14000557b:	mov    QWORD PTR [rsp+0x20],rax
   140005580:	call   0x140006570
   140005585:	int3   
   140005586:	int3   
   140005587:	int3   
   140005588:	sub    rsp,0x48
   14000558c:	mov    QWORD PTR [rsp+0x50],rcx
   140005591:	lea    rdx,[rsp+0x50]
   140005596:	lea    rcx,[rsp+0x20]
   14000559b:	call   0x1400076e0
   1400055a0:	lea    rax,[rip+0x27aa1]        # 0x14002d048
   1400055a7:	lea    rdx,[rip+0x34be2]        # 0x14003a190
   1400055ae:	lea    rcx,[rsp+0x20]
   1400055b3:	mov    QWORD PTR [rsp+0x20],rax
   1400055b8:	call   0x140006570
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	rex push rbx
   1400055c2:	sub    rsp,0x40
   1400055c6:	mov    ebx,ecx
   1400055c8:	call   0x1400053b0
   1400055cd:	lea    rdx,[rsp+0x58]
   1400055d2:	lea    rcx,[rsp+0x20]
   1400055d7:	mov    QWORD PTR [rsp+0x58],rax
   1400055dc:	call   0x1400076e0
   1400055e1:	lea    rax,[rip+0x27aa8]        # 0x14002d090
   1400055e8:	lea    rdx,[rip+0x34cc9]        # 0x14003a2b8
   1400055ef:	lea    rcx,[rsp+0x20]
   1400055f4:	mov    QWORD PTR [rsp+0x20],rax
   1400055f9:	mov    DWORD PTR [rsp+0x38],ebx
   1400055fd:	call   0x140006570
   140005602:	int3   
   140005603:	int3   
   140005604:	sub    rsp,0x48
   140005608:	mov    QWORD PTR [rsp+0x50],rcx
   14000560d:	lea    rdx,[rsp+0x50]
   140005612:	lea    rcx,[rsp+0x20]
   140005617:	call   0x1400076e0
   14000561c:	lea    rax,[rip+0x27a0d]        # 0x14002d030
   140005623:	lea    rdx,[rip+0x34bf6]        # 0x14003a220
   14000562a:	lea    rcx,[rsp+0x20]
   14000562f:	mov    QWORD PTR [rsp+0x20],rax
   140005634:	call   0x140006570
   140005639:	int3   
   14000563a:	int3   
   14000563b:	int3   
   14000563c:	lea    rax,[rip+0x27a2d]        # 0x14002d070
   140005643:	ret    
   140005644:	cmp    QWORD PTR [rip+0x2848c],0x0        # 0x14002dad8
   14000564c:	lea    rax,[rip+0x2847d]        # 0x14002dad0
   140005653:	je     0x140005664
   140005655:	cmp    DWORD PTR [rax],ecx
   140005657:	je     0x140005667
   140005659:	add    rax,0x10
   14000565d:	cmp    QWORD PTR [rax+0x8],0x0
   140005662:	jne    0x140005655
   140005664:	xor    eax,eax
   140005666:	ret    
   140005667:	mov    rax,QWORD PTR [rax+0x8]
   14000566b:	ret    
   14000566c:	cmp    QWORD PTR [rip+0x27fb4],0x0        # 0x14002d628
   140005674:	lea    rax,[rip+0x27fa5]        # 0x14002d620
   14000567b:	je     0x14000568c
   14000567d:	cmp    DWORD PTR [rax],ecx
   14000567f:	je     0x14000568f
   140005681:	add    rax,0x10
   140005685:	cmp    QWORD PTR [rax+0x8],0x0
   14000568a:	jne    0x14000567d
   14000568c:	xor    eax,eax
   14000568e:	ret    
   14000568f:	mov    rax,QWORD PTR [rax+0x8]
   140005693:	ret    
   140005694:	mov    rcx,QWORD PTR [rip+0x385cd]        # 0x14003dc68
   14000569b:	rex.W jmp QWORD PTR [rip+0x26a76]        # 0x14002c118
   1400056a2:	int3   
   1400056a3:	int3   
   1400056a4:	sub    rsp,0x28
   1400056a8:	mov    rcx,QWORD PTR [rip+0x385b9]        # 0x14003dc68
   1400056af:	call   QWORD PTR [rip+0x26a63]        # 0x14002c118
   1400056b5:	test   rax,rax
   1400056b8:	je     0x1400056bc
   1400056ba:	call   rax
   1400056bc:	mov    edx,0x1
   1400056c1:	xor    ecx,ecx
   1400056c3:	call   0x14000797c
   1400056c8:	call   0x140007998
   1400056cd:	int3   
   1400056ce:	int3   
   1400056cf:	int3   
   1400056d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400056d5:	push   rdi
   1400056d6:	sub    rsp,0x20
   1400056da:	mov    rdi,rcx
   1400056dd:	mov    rcx,QWORD PTR [rip+0x38584]        # 0x14003dc68
   1400056e4:	call   QWORD PTR [rip+0x26a2e]        # 0x14002c118
   1400056ea:	mov    rcx,rdi
   1400056ed:	mov    rbx,rax
   1400056f0:	call   QWORD PTR [rip+0x26a1a]        # 0x14002c110
   1400056f6:	mov    QWORD PTR [rip+0x3856b],rax        # 0x14003dc68
   1400056fd:	mov    rax,rbx
   140005700:	mov    rbx,QWORD PTR [rsp+0x30]
   140005705:	add    rsp,0x20
   140005709:	pop    rdi
   14000570a:	ret    
   14000570b:	int3   
   14000570c:	rex push rbx
   14000570e:	sub    rsp,0x40
   140005712:	mov    rbx,rcx
   140005715:	jmp    0x140005726
   140005717:	mov    rcx,rbx
   14000571a:	call   0x140007d84
   14000571f:	test   eax,eax
   140005721:	je     0x140005736
   140005723:	mov    rcx,rbx
   140005726:	call   0x140007c64
   14000572b:	test   rax,rax
   14000572e:	je     0x140005717
   140005730:	add    rsp,0x40
   140005734:	pop    rbx
   140005735:	ret    
   140005736:	lea    rax,[rip+0x2787b]        # 0x14002cfb8
   14000573d:	lea    rdx,[rsp+0x58]
   140005742:	lea    rcx,[rsp+0x20]
   140005747:	mov    r8d,0x1
   14000574d:	mov    QWORD PTR [rsp+0x58],rax
   140005752:	call   0x140007710
   140005757:	lea    rax,[rip+0x2784a]        # 0x14002cfa8
   14000575e:	lea    rdx,[rip+0x34843]        # 0x140039fa8
   140005765:	lea    rcx,[rsp+0x20]
   14000576a:	mov    QWORD PTR [rsp+0x20],rax
   14000576f:	call   0x140006570
   140005774:	int3   
   140005775:	int3   
   140005776:	int3   
   140005777:	int3   
   140005778:	jmp    0x140007dc0
   14000577d:	int3   
   14000577e:	int3   
   14000577f:	int3   
   140005780:	rex push rbx
   140005782:	sub    rsp,0x20
   140005786:	mov    edx,0x8
   14000578b:	lea    ecx,[rdx+0x18]
   14000578e:	call   0x140008604
   140005793:	mov    rcx,rax
   140005796:	mov    rbx,rax
   140005799:	call   QWORD PTR [rip+0x26971]        # 0x14002c110
   14000579f:	mov    QWORD PTR [rip+0x3a95a],rax        # 0x140040100
   1400057a6:	mov    QWORD PTR [rip+0x3a94b],rax        # 0x1400400f8
   1400057ad:	test   rbx,rbx
   1400057b0:	jne    0x1400057b7
   1400057b2:	lea    eax,[rbx+0x18]
   1400057b5:	jmp    0x1400057bd
   1400057b7:	and    QWORD PTR [rbx],0x0
   1400057bb:	xor    eax,eax
   1400057bd:	add    rsp,0x20
   1400057c1:	pop    rbx
   1400057c2:	ret    
   1400057c3:	int3   
   1400057c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400057c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400057ce:	mov    QWORD PTR [rsp+0x18],rdi
   1400057d3:	push   r12
   1400057d5:	push   r14
   1400057d7:	push   r15
   1400057d9:	sub    rsp,0x20
   1400057dd:	mov    r12,rcx
   1400057e0:	call   0x14000840c
   1400057e5:	nop
   1400057e6:	mov    rcx,QWORD PTR [rip+0x3a913]        # 0x140040100
   1400057ed:	call   QWORD PTR [rip+0x26925]        # 0x14002c118
   1400057f3:	mov    r14,rax
   1400057f6:	mov    rcx,QWORD PTR [rip+0x3a8fb]        # 0x1400400f8
   1400057fd:	call   QWORD PTR [rip+0x26915]        # 0x14002c118
   140005803:	mov    rbx,rax
   140005806:	cmp    rax,r14
   140005809:	jb     0x1400058aa
   14000580f:	mov    rdi,rax
   140005812:	sub    rdi,r14
   140005815:	lea    r15,[rdi+0x8]
   140005819:	cmp    r15,0x8
   14000581d:	jb     0x1400058aa
   140005823:	mov    rcx,r14
   140005826:	call   0x1400085c8
   14000582b:	mov    rsi,rax
   14000582e:	cmp    rax,r15
   140005831:	jae    0x140005888
   140005833:	mov    edx,0x1000
   140005838:	cmp    rax,rdx
   14000583b:	cmovb  rdx,rax
   14000583f:	add    rdx,rax
   140005842:	cmp    rdx,rax
   140005845:	jb     0x140005858
   140005847:	mov    rcx,r14
   14000584a:	call   0x140008700
   14000584f:	xor    ebx,ebx
   140005851:	test   rax,rax
   140005854:	jne    0x140005870
   140005856:	jmp    0x14000585a
   140005858:	xor    ebx,ebx
   14000585a:	lea    rdx,[rsi+0x20]
   14000585e:	cmp    rdx,rsi
   140005861:	jb     0x1400058ac
   140005863:	mov    rcx,r14
   140005866:	call   0x140008700
   14000586b:	test   rax,rax
   14000586e:	je     0x1400058ac
   140005870:	sar    rdi,0x3
   140005874:	lea    rbx,[rax+rdi*8]
   140005878:	mov    rcx,rax
   14000587b:	call   QWORD PTR [rip+0x2688f]        # 0x14002c110
   140005881:	mov    QWORD PTR [rip+0x3a878],rax        # 0x140040100
   140005888:	mov    rcx,r12
   14000588b:	call   QWORD PTR [rip+0x2687f]        # 0x14002c110
   140005891:	mov    QWORD PTR [rbx],rax
   140005894:	lea    rcx,[rbx+0x8]
   140005898:	call   QWORD PTR [rip+0x26872]        # 0x14002c110
   14000589e:	mov    QWORD PTR [rip+0x3a853],rax        # 0x1400400f8
   1400058a5:	mov    rbx,r12
   1400058a8:	jmp    0x1400058ac
   1400058aa:	xor    ebx,ebx
   1400058ac:	call   0x140008418
   1400058b1:	mov    rax,rbx
   1400058b4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400058b9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400058be:	mov    rdi,QWORD PTR [rsp+0x50]
   1400058c3:	add    rsp,0x20
   1400058c7:	pop    r15
   1400058c9:	pop    r14
   1400058cb:	pop    r12
   1400058cd:	ret    
   1400058ce:	int3   
   1400058cf:	int3   
   1400058d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400058d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400058da:	mov    QWORD PTR [rsp+0x18],rsi
   1400058df:	push   rdi
   1400058e0:	push   r14
   1400058e2:	push   r15
   1400058e4:	sub    rsp,0x20
   1400058e8:	mov    r15,rcx
   1400058eb:	mov    rcx,QWORD PTR [rip+0x3a80e]        # 0x140040100
   1400058f2:	call   QWORD PTR [rip+0x26820]        # 0x14002c118
   1400058f8:	mov    rcx,QWORD PTR [rip+0x3a7f9]        # 0x1400400f8
   1400058ff:	mov    rbp,rax
   140005902:	call   QWORD PTR [rip+0x26810]        # 0x14002c118
   140005908:	mov    rsi,rax
   14000590b:	cmp    rax,rbp
   14000590e:	jb     0x1400059a9
   140005914:	mov    rbx,rax
   140005917:	sub    rbx,rbp
   14000591a:	lea    r14,[rbx+0x8]
   14000591e:	cmp    r14,0x8
   140005922:	jb     0x1400059a9
   140005928:	mov    rcx,rbp
   14000592b:	call   0x1400085c8
   140005930:	mov    rdi,rax
   140005933:	cmp    rax,r14
   140005936:	jae    0x140005987
   140005938:	mov    edx,0x1000
   14000593d:	cmp    rax,rdx
   140005940:	cmovb  rdx,rax
   140005944:	add    rdx,rax
   140005947:	cmp    rdx,rax
   14000594a:	jb     0x140005959
   14000594c:	mov    rcx,rbp
   14000594f:	call   0x140008700
   140005954:	test   rax,rax
   140005957:	jne    0x14000596f
   140005959:	lea    rdx,[rdi+0x20]
   14000595d:	cmp    rdx,rdi
   140005960:	jb     0x1400059a9
   140005962:	mov    rcx,rbp
   140005965:	call   0x140008700
   14000596a:	test   rax,rax
   14000596d:	je     0x1400059a9
   14000596f:	sar    rbx,0x3
   140005973:	mov    rcx,rax
   140005976:	lea    rsi,[rax+rbx*8]
   14000597a:	call   QWORD PTR [rip+0x26790]        # 0x14002c110
   140005980:	mov    QWORD PTR [rip+0x3a779],rax        # 0x140040100
   140005987:	mov    rcx,r15
   14000598a:	call   QWORD PTR [rip+0x26780]        # 0x14002c110
   140005990:	lea    rcx,[rsi+0x8]
   140005994:	mov    QWORD PTR [rsi],rax
   140005997:	call   QWORD PTR [rip+0x26773]        # 0x14002c110
   14000599d:	mov    QWORD PTR [rip+0x3a754],rax        # 0x1400400f8
   1400059a4:	mov    rax,r15
   1400059a7:	jmp    0x1400059ab
   1400059a9:	xor    eax,eax
   1400059ab:	mov    rbx,QWORD PTR [rsp+0x40]
   1400059b0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400059b5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400059ba:	add    rsp,0x20
   1400059be:	pop    r15
   1400059c0:	pop    r14
   1400059c2:	pop    rdi
   1400059c3:	ret    
   1400059c4:	sub    rsp,0x28
   1400059c8:	call   0x1400057c4
   1400059cd:	neg    rax
   1400059d0:	sbb    eax,eax
   1400059d2:	neg    eax
   1400059d4:	dec    eax
   1400059d6:	add    rsp,0x28
   1400059da:	ret    
   1400059db:	int3   
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	int3   
   1400059df:	int3   
   1400059e0:	int3   
   1400059e1:	int3   
   1400059e2:	int3   
   1400059e3:	int3   
   1400059e4:	int3   
   1400059e5:	int3   
   1400059e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400059f0:	mov    r11,rcx
   1400059f3:	mov    r10,rdx
   1400059f6:	cmp    r8,0x10
   1400059fa:	jbe    0x140005ab9
   140005a00:	sub    rdx,rcx
   140005a03:	jae    0x140005a14
   140005a05:	mov    rax,r10
   140005a08:	add    rax,r8
   140005a0b:	cmp    rcx,rax
   140005a0e:	jl     0x140005daa
   140005a14:	bt     DWORD PTR [rip+0x382b8],0x1        # 0x14003dcd4
   140005a1c:	jae    0x140005a31
   140005a1e:	push   rdi
   140005a1f:	push   rsi
   140005a20:	mov    rdi,rcx
   140005a23:	mov    rsi,r10
   140005a26:	mov    rcx,r8
   140005a29:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005a2b:	pop    rsi
   140005a2c:	pop    rdi
   140005a2d:	mov    rax,r11
   140005a30:	ret    
   140005a31:	bt     DWORD PTR [rip+0x3829b],0x2        # 0x14003dcd4
   140005a39:	jb     0x140005c95
   140005a3f:	test   cl,0x7
   140005a42:	je     0x140005a7a
   140005a44:	test   cl,0x1
   140005a47:	je     0x140005a54
   140005a49:	mov    al,BYTE PTR [rdx+rcx*1]
   140005a4c:	dec    r8
   140005a4f:	mov    BYTE PTR [rcx],al
   140005a51:	inc    rcx
   140005a54:	test   cl,0x2
   140005a57:	je     0x140005a68
   140005a59:	mov    ax,WORD PTR [rdx+rcx*1]
   140005a5d:	sub    r8,0x2
   140005a61:	mov    WORD PTR [rcx],ax
   140005a64:	add    rcx,0x2
   140005a68:	test   cl,0x4
   140005a6b:	je     0x140005a7a
   140005a6d:	mov    eax,DWORD PTR [rdx+rcx*1]
   140005a70:	sub    r8,0x4
   140005a74:	mov    DWORD PTR [rcx],eax
   140005a76:	add    rcx,0x4
   140005a7a:	mov    r9,r8
   140005a7d:	shr    r9,0x5
   140005a81:	jne    0x140005c60
   140005a87:	mov    r9,r8
   140005a8a:	shr    r9,0x3
   140005a8e:	je     0x140005aa4
   140005a90:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005a94:	mov    QWORD PTR [rcx],rax
   140005a97:	add    rcx,0x8
   140005a9b:	dec    r9
   140005a9e:	jne    0x140005a90
   140005aa0:	and    r8,0x7
   140005aa4:	test   r8,r8
   140005aa7:	jne    0x140005ab0
   140005aa9:	mov    rax,r11
   140005aac:	ret    
   140005aad:	nop    DWORD PTR [rax]
   140005ab0:	lea    rdx,[rdx+rcx*1]
   140005ab4:	mov    r10,rcx
   140005ab7:	jmp    0x140005abc
   140005ab9:	mov    r10,r11
   140005abc:	lea    r9,[rip+0xffffffffffffa53d]        # 0x140000000
   140005ac3:	mov    eax,DWORD PTR [r9+r8*4+0x5ad0]
   140005acb:	add    rax,r9
   140005ace:	jmp    rax
   140005ad0:	adc    al,0x5b
   140005ad2:	add    BYTE PTR [rax],al
   140005ad4:	sbb    BYTE PTR [rbx+0x0],bl
   140005ad7:	add    BYTE PTR [rbx],ah
   140005ad9:	pop    rbx
   140005ada:	add    BYTE PTR [rax],al
   140005adc:	(bad)  
   140005add:	pop    rbx
   140005ade:	add    BYTE PTR [rax],al
   140005ae0:	rex.R pop rbx
   140005ae2:	add    BYTE PTR [rax],al
   140005ae4:	rex.WRB pop r11
   140005ae6:	add    BYTE PTR [rax],al
   140005ae8:	pop    rdi
   140005ae9:	pop    rbx
   140005aea:	add    BYTE PTR [rax],al
   140005aec:	jb     0x140005b49
   140005aee:	add    BYTE PTR [rax],al
   140005af0:	mov    ds,WORD PTR [rbx+0x0]
   140005af3:	add    BYTE PTR [rax-0x54ffffa5],bl
   140005af9:	pop    rbx
   140005afa:	add    BYTE PTR [rax],al
   140005afc:	mov    edi,0xdc00005b
   140005b01:	pop    rbx
   140005b02:	add    BYTE PTR [rax],al
   140005b04:	in     eax,dx
   140005b05:	pop    rbx
   140005b06:	add    BYTE PTR [rax],al
   140005b08:	(bad)  
   140005b09:	pop    rsp
   140005b0a:	add    BYTE PTR [rax],al
   140005b0c:	and    bl,BYTE PTR [rax+rax*1+0x0]
   140005b10:	rex.RX pop rsp
   140005b12:	add    BYTE PTR [rax],al
   140005b14:	mov    rax,r11
   140005b17:	ret    
   140005b18:	movzx  rax,BYTE PTR [rdx]
   140005b1c:	mov    BYTE PTR [r10],al
   140005b1f:	mov    rax,r11
   140005b22:	ret    
   140005b23:	movzx  rax,WORD PTR [rdx]
   140005b27:	mov    WORD PTR [r10],ax
   140005b2b:	mov    rax,r11
   140005b2e:	ret    
   140005b2f:	movzx  rax,BYTE PTR [rdx]
   140005b33:	movzx  rcx,WORD PTR [rdx+0x1]
   140005b38:	mov    BYTE PTR [r10],al
   140005b3b:	mov    WORD PTR [r10+0x1],cx
   140005b40:	mov    rax,r11
   140005b43:	ret    
   140005b44:	mov    eax,DWORD PTR [rdx]
   140005b46:	mov    DWORD PTR [r10],eax
   140005b49:	mov    rax,r11
   140005b4c:	ret    
   140005b4d:	movzx  rax,BYTE PTR [rdx]
   140005b51:	mov    ecx,DWORD PTR [rdx+0x1]
   140005b54:	mov    BYTE PTR [r10],al
   140005b57:	mov    DWORD PTR [r10+0x1],ecx
   140005b5b:	mov    rax,r11
   140005b5e:	ret    
   140005b5f:	movzx  rax,WORD PTR [rdx]
   140005b63:	mov    ecx,DWORD PTR [rdx+0x2]
   140005b66:	mov    WORD PTR [r10],ax
   140005b6a:	mov    DWORD PTR [r10+0x2],ecx
   140005b6e:	mov    rax,r11
   140005b71:	ret    
   140005b72:	movzx  rax,BYTE PTR [rdx]
   140005b76:	movzx  rcx,WORD PTR [rdx+0x1]
   140005b7b:	mov    edx,DWORD PTR [rdx+0x3]
   140005b7e:	mov    BYTE PTR [r10],al
   140005b81:	mov    WORD PTR [r10+0x1],cx
   140005b86:	mov    DWORD PTR [r10+0x3],edx
   140005b8a:	mov    rax,r11
   140005b8d:	ret    
   140005b8e:	mov    rax,QWORD PTR [rdx]
   140005b91:	mov    QWORD PTR [r10],rax
   140005b94:	mov    rax,r11
   140005b97:	ret    
   140005b98:	movzx  rax,BYTE PTR [rdx]
   140005b9c:	mov    rcx,QWORD PTR [rdx+0x1]
   140005ba0:	mov    BYTE PTR [r10],al
   140005ba3:	mov    QWORD PTR [r10+0x1],rcx
   140005ba7:	mov    rax,r11
   140005baa:	ret    
   140005bab:	movzx  rax,WORD PTR [rdx]
   140005baf:	mov    rcx,QWORD PTR [rdx+0x2]
   140005bb3:	mov    WORD PTR [r10],ax
   140005bb7:	mov    QWORD PTR [r10+0x2],rcx
   140005bbb:	mov    rax,r11
   140005bbe:	ret    
   140005bbf:	movzx  rax,BYTE PTR [rdx]
   140005bc3:	movzx  rcx,WORD PTR [rdx+0x1]
   140005bc8:	mov    rdx,QWORD PTR [rdx+0x3]
   140005bcc:	mov    BYTE PTR [r10],al
   140005bcf:	mov    WORD PTR [r10+0x1],cx
   140005bd4:	mov    QWORD PTR [r10+0x3],rdx
   140005bd8:	mov    rax,r11
   140005bdb:	ret    
   140005bdc:	mov    eax,DWORD PTR [rdx]
   140005bde:	mov    rcx,QWORD PTR [rdx+0x4]
   140005be2:	mov    DWORD PTR [r10],eax
   140005be5:	mov    QWORD PTR [r10+0x4],rcx
   140005be9:	mov    rax,r11
   140005bec:	ret    
   140005bed:	movzx  rax,BYTE PTR [rdx]
   140005bf1:	mov    ecx,DWORD PTR [rdx+0x1]
   140005bf4:	mov    rdx,QWORD PTR [rdx+0x5]
   140005bf8:	mov    BYTE PTR [r10],al
   140005bfb:	mov    DWORD PTR [r10+0x1],ecx
   140005bff:	mov    QWORD PTR [r10+0x5],rdx
   140005c03:	mov    rax,r11
   140005c06:	ret    
   140005c07:	movzx  rax,WORD PTR [rdx]
   140005c0b:	mov    ecx,DWORD PTR [rdx+0x2]
   140005c0e:	mov    rdx,QWORD PTR [rdx+0x6]
   140005c12:	mov    WORD PTR [r10],ax
   140005c16:	mov    DWORD PTR [r10+0x2],ecx
   140005c1a:	mov    QWORD PTR [r10+0x6],rdx
   140005c1e:	mov    rax,r11
   140005c21:	ret    
   140005c22:	movzx  r8,BYTE PTR [rdx]
   140005c26:	movzx  rax,WORD PTR [rdx+0x1]
   140005c2b:	mov    ecx,DWORD PTR [rdx+0x3]
   140005c2e:	mov    rdx,QWORD PTR [rdx+0x7]
   140005c32:	mov    BYTE PTR [r10],r8b
   140005c35:	mov    WORD PTR [r10+0x1],ax
   140005c3a:	mov    DWORD PTR [r10+0x3],ecx
   140005c3e:	mov    QWORD PTR [r10+0x7],rdx
   140005c42:	mov    rax,r11
   140005c45:	ret    
   140005c46:	movdqu xmm0,XMMWORD PTR [rdx]
   140005c4a:	movdqu XMMWORD PTR [r10],xmm0
   140005c4f:	mov    rax,r11
   140005c52:	ret    
   140005c53:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005c60:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005c64:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140005c69:	add    rcx,0x20
   140005c6d:	mov    QWORD PTR [rcx-0x20],rax
   140005c71:	mov    QWORD PTR [rcx-0x18],r10
   140005c75:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   140005c7a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140005c7f:	dec    r9
   140005c82:	mov    QWORD PTR [rcx-0x10],rax
   140005c86:	mov    QWORD PTR [rcx-0x8],r10
   140005c8a:	jne    0x140005c60
   140005c8c:	and    r8,0x1f
   140005c90:	jmp    0x140005a87
   140005c95:	cmp    r8,0x20
   140005c99:	jbe    0x140005d80
   140005c9f:	test   cl,0xf
   140005ca2:	jne    0x140005cb2
   140005ca4:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005ca8:	add    rcx,0x10
   140005cac:	sub    r8,0x10
   140005cb0:	jmp    0x140005ccf
   140005cb2:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005cb6:	add    rcx,0x20
   140005cba:	and    cl,0xf0
   140005cbd:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   140005cc2:	movups XMMWORD PTR [r11],xmm1
   140005cc6:	mov    rax,rcx
   140005cc9:	sub    rax,r11
   140005ccc:	sub    r8,rax
   140005ccf:	mov    r9,r8
   140005cd2:	shr    r9,0x7
   140005cd6:	je     0x140005d3e
   140005cd8:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140005cdc:	jmp    0x140005ce8
   140005cde:	xchg   ax,ax
   140005ce0:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140005ce4:	movaps XMMWORD PTR [rcx-0x10],xmm1
   140005ce8:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005cec:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   140005cf1:	add    rcx,0x80
   140005cf8:	movaps XMMWORD PTR [rcx-0x80],xmm0
   140005cfc:	movaps XMMWORD PTR [rcx-0x70],xmm1
   140005d00:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   140005d05:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   140005d0a:	dec    r9
   140005d0d:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140005d11:	movaps XMMWORD PTR [rcx-0x50],xmm1
   140005d15:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   140005d1a:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   140005d1f:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140005d23:	movaps XMMWORD PTR [rcx-0x30],xmm1
   140005d27:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   140005d2c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140005d31:	jne    0x140005ce0
   140005d33:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140005d37:	and    r8,0x7f
   140005d3b:	movaps xmm0,xmm1
   140005d3e:	mov    r9,r8
   140005d41:	shr    r9,0x4
   140005d45:	je     0x140005d61
   140005d47:	nop    WORD PTR [rax+rax*1+0x0]
   140005d50:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140005d54:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005d58:	add    rcx,0x10
   140005d5c:	dec    r9
   140005d5f:	jne    0x140005d50
   140005d61:	and    r8,0xf
   140005d65:	je     0x140005d74
   140005d67:	lea    rax,[r8+rcx*1]
   140005d6b:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   140005d70:	movups XMMWORD PTR [rax-0x10],xmm1
   140005d74:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140005d78:	mov    rax,r11
   140005d7b:	ret    
   140005d7c:	nop    DWORD PTR [rax+0x0]
   140005d80:	movups xmm0,XMMWORD PTR [r10]
   140005d84:	lea    rcx,[r8+rcx*1-0x10]
   140005d89:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005d8d:	movups XMMWORD PTR [r11],xmm0
   140005d91:	movups XMMWORD PTR [rcx],xmm1
   140005d94:	mov    rax,r11
   140005d97:	ret    
   140005d98:	nop    DWORD PTR [rax+rax*1+0x0]
   140005da0:	data16 data16 xchg ax,ax
   140005da4:	data16 data16 xchg ax,ax
   140005da8:	xchg   ax,ax
   140005daa:	bt     DWORD PTR [rip+0x37f22],0x2        # 0x14003dcd4
   140005db2:	jb     0x140005e71
   140005db8:	add    rcx,r8
   140005dbb:	test   cl,0x7
   140005dbe:	je     0x140005df6
   140005dc0:	test   cl,0x1
   140005dc3:	je     0x140005dd0
   140005dc5:	dec    rcx
   140005dc8:	mov    al,BYTE PTR [rdx+rcx*1]
   140005dcb:	dec    r8
   140005dce:	mov    BYTE PTR [rcx],al
   140005dd0:	test   cl,0x2
   140005dd3:	je     0x140005de4
   140005dd5:	sub    rcx,0x2
   140005dd9:	mov    ax,WORD PTR [rdx+rcx*1]
   140005ddd:	sub    r8,0x2
   140005de1:	mov    WORD PTR [rcx],ax
   140005de4:	test   cl,0x4
   140005de7:	je     0x140005df6
   140005de9:	sub    rcx,0x4
   140005ded:	mov    eax,DWORD PTR [rdx+rcx*1]
   140005df0:	sub    r8,0x4
   140005df4:	mov    DWORD PTR [rcx],eax
   140005df6:	mov    r9,r8
   140005df9:	shr    r9,0x5
   140005dfd:	jne    0x140005e40
   140005dff:	mov    r9,r8
   140005e02:	shr    r9,0x3
   140005e06:	je     0x140005e1c
   140005e08:	sub    rcx,0x8
   140005e0c:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005e10:	dec    r9
   140005e13:	mov    QWORD PTR [rcx],rax
   140005e16:	jne    0x140005e08
   140005e18:	and    r8,0x7
   140005e1c:	test   r8,r8
   140005e1f:	jne    0x140005e30
   140005e21:	mov    rax,r11
   140005e24:	ret    
   140005e25:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005e30:	sub    rcx,r8
   140005e33:	mov    r10,rcx
   140005e36:	lea    rdx,[rdx+rcx*1]
   140005e3a:	jmp    0x140005abc
   140005e3f:	nop
   140005e40:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140005e45:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140005e4a:	sub    rcx,0x20
   140005e4e:	mov    QWORD PTR [rcx+0x18],rax
   140005e52:	mov    QWORD PTR [rcx+0x10],r10
   140005e56:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   140005e5b:	mov    r10,QWORD PTR [rdx+rcx*1]
   140005e5f:	dec    r9
   140005e62:	mov    QWORD PTR [rcx+0x8],rax
   140005e66:	mov    QWORD PTR [rcx],r10
   140005e69:	jne    0x140005e40
   140005e6b:	and    r8,0x1f
   140005e6f:	jmp    0x140005dff
   140005e71:	cmp    r8,0x20
   140005e75:	jbe    0x140005d80
   140005e7b:	add    rcx,r8
   140005e7e:	test   cl,0xf
   140005e81:	jne    0x140005e91
   140005e83:	sub    rcx,0x10
   140005e87:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005e8b:	sub    r8,0x10
   140005e8f:	jmp    0x140005eac
   140005e91:	sub    rcx,0x10
   140005e95:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005e99:	mov    rax,rcx
   140005e9c:	and    cl,0xf0
   140005e9f:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005ea3:	movups XMMWORD PTR [rax],xmm1
   140005ea6:	mov    r8,rcx
   140005ea9:	sub    r8,r11
   140005eac:	mov    r9,r8
   140005eaf:	shr    r9,0x7
   140005eb3:	je     0x140005f1d
   140005eb5:	movaps XMMWORD PTR [rcx],xmm0
   140005eb8:	jmp    0x140005ec7
   140005eba:	nop    WORD PTR [rax+rax*1+0x0]
   140005ec0:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140005ec4:	movaps XMMWORD PTR [rcx],xmm1
   140005ec7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   140005ecc:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   140005ed1:	sub    rcx,0x80
   140005ed8:	movaps XMMWORD PTR [rcx+0x70],xmm0
   140005edc:	movaps XMMWORD PTR [rcx+0x60],xmm1
   140005ee0:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   140005ee5:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   140005eea:	dec    r9
   140005eed:	movaps XMMWORD PTR [rcx+0x50],xmm0
   140005ef1:	movaps XMMWORD PTR [rcx+0x40],xmm1
   140005ef5:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   140005efa:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   140005eff:	movaps XMMWORD PTR [rcx+0x30],xmm0
   140005f03:	movaps XMMWORD PTR [rcx+0x20],xmm1
   140005f07:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   140005f0c:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005f10:	jne    0x140005ec0
   140005f12:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140005f16:	and    r8,0x7f
   140005f1a:	movaps xmm0,xmm1
   140005f1d:	mov    r9,r8
   140005f20:	shr    r9,0x4
   140005f24:	je     0x140005f40
   140005f26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005f30:	movaps XMMWORD PTR [rcx],xmm0
   140005f33:	sub    rcx,0x10
   140005f37:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005f3b:	dec    r9
   140005f3e:	jne    0x140005f30
   140005f40:	and    r8,0xf
   140005f44:	je     0x140005f4e
   140005f46:	movups xmm1,XMMWORD PTR [r10]
   140005f4a:	movups XMMWORD PTR [r11],xmm1
   140005f4e:	movaps XMMWORD PTR [rcx],xmm0
   140005f51:	mov    rax,r11
   140005f54:	ret    
   140005f55:	int3   
   140005f56:	int3   
   140005f57:	int3   
   140005f58:	mov    QWORD PTR [rsp+0x8],rbx
   140005f5d:	mov    QWORD PTR [rsp+0x10],rsi
   140005f62:	push   rdi
   140005f63:	sub    rsp,0x10
   140005f67:	movzx  edi,WORD PTR [rdx]
   140005f6a:	xor    esi,esi
   140005f6c:	mov    rbx,rdx
   140005f6f:	mov    r8,rcx
   140005f72:	cmp    si,di
   140005f75:	jne    0x140005f7f
   140005f77:	mov    rax,rcx
   140005f7a:	jmp    0x140006144
   140005f7f:	cmp    DWORD PTR [rip+0x360be],0x2        # 0x14003c044
   140005f86:	mov    r10d,0xfff
   140005f8c:	lea    r11d,[r10-0xf]
   140005f90:	jge    0x14000606f
   140005f96:	movzx  eax,di
   140005f99:	xorps  xmm2,xmm2
   140005f9c:	movd   xmm0,eax
   140005fa0:	pshuflw xmm1,xmm0,0x0
   140005fa5:	pshufd xmm3,xmm1,0x0
   140005faa:	mov    rax,r8
   140005fad:	and    rax,r10
   140005fb0:	cmp    rax,r11
   140005fb3:	ja     0x140005fe2
   140005fb5:	movdqu xmm0,XMMWORD PTR [r8]
   140005fba:	movdqa xmm1,xmm0
   140005fbe:	pcmpeqw xmm0,xmm3
   140005fc2:	pcmpeqw xmm1,xmm2
   140005fc6:	por    xmm1,xmm0
   140005fca:	pmovmskb eax,xmm1
   140005fce:	test   eax,eax
   140005fd0:	jne    0x140005fd8
   140005fd2:	add    r8,0x10
   140005fd6:	jmp    0x140005faa
   140005fd8:	bsf    ecx,eax
   140005fdb:	shr    rcx,1
   140005fde:	lea    r8,[r8+rcx*2]
   140005fe2:	cmp    si,WORD PTR [r8]
   140005fe6:	je     0x140006142
   140005fec:	cmp    di,WORD PTR [r8]
   140005ff0:	jne    0x140006066
   140005ff2:	mov    rdx,r8
   140005ff5:	mov    r9,rbx
   140005ff8:	mov    rax,r9
   140005ffb:	and    rax,r10
   140005ffe:	cmp    rax,r11
   140006001:	ja     0x14000604a
   140006003:	mov    rax,rdx
   140006006:	and    rax,r10
   140006009:	cmp    rax,r11
   14000600c:	ja     0x14000604a
   14000600e:	movdqu xmm1,XMMWORD PTR [r9]
   140006013:	movdqu xmm0,XMMWORD PTR [rdx]
   140006017:	pcmpeqw xmm0,xmm1
   14000601b:	pcmpeqw xmm1,xmm2
   14000601f:	pcmpeqw xmm0,xmm2
   140006023:	por    xmm0,xmm1
   140006027:	pmovmskb eax,xmm0
   14000602b:	test   eax,eax
   14000602d:	jne    0x140006039
   14000602f:	add    rdx,0x10
   140006033:	add    r9,0x10
   140006037:	jmp    0x140005ff8
   140006039:	bsf    eax,eax
   14000603c:	mov    ecx,eax
   14000603e:	shr    rcx,1
   140006041:	add    rcx,rcx
   140006044:	add    rdx,rcx
   140006047:	add    r9,rcx
   14000604a:	movzx  eax,WORD PTR [r9]
   14000604e:	cmp    si,ax
   140006051:	je     0x14000613d
   140006057:	cmp    WORD PTR [rdx],ax
   14000605a:	jne    0x140006066
   14000605c:	add    rdx,0x2
   140006060:	add    r9,0x2
   140006064:	jmp    0x140005ff8
   140006066:	add    r8,0x2
   14000606a:	jmp    0x140005faa
   14000606f:	mov    rax,rdx
   140006072:	and    rax,r10
   140006075:	cmp    rax,r11
   140006078:	ja     0x140006080
   14000607a:	movdqu xmm0,XMMWORD PTR [rdx]
   14000607e:	jmp    0x1400060ad
   140006080:	mov    rcx,rdx
   140006083:	xorps  xmm0,xmm0
   140006086:	mov    r9d,0x8
   14000608c:	movzx  edx,di
   14000608f:	psrldq xmm0,0x2
   140006094:	movzx  eax,dx
   140006097:	pinsrw xmm0,eax,0x7
   14000609c:	cmp    si,dx
   14000609f:	je     0x1400060a8
   1400060a1:	add    rcx,0x2
   1400060a5:	movzx  edx,WORD PTR [rcx]
   1400060a8:	dec    r9
   1400060ab:	jne    0x14000608f
   1400060ad:	mov    rax,r8
   1400060b0:	and    rax,r10
   1400060b3:	cmp    rax,r11
   1400060b6:	ja     0x140006113
   1400060b8:	movdqu xmm1,XMMWORD PTR [r8]
   1400060bd:	pcmpistri xmm0,xmm1,0xd
   1400060c3:	jbe    0x1400060cb
   1400060c5:	add    r8,0x10
   1400060c9:	jmp    0x1400060ad
   1400060cb:	jae    0x140006142
   1400060cd:	pcmpistri xmm0,xmm1,0xd
   1400060d3:	movsxd rax,ecx
   1400060d6:	lea    r8,[r8+rax*2]
   1400060da:	mov    rdx,r8
   1400060dd:	mov    r9,rbx
   1400060e0:	mov    rax,rdx
   1400060e3:	and    rax,r10
   1400060e6:	cmp    rax,r11
   1400060e9:	ja     0x140006125
   1400060eb:	mov    rax,r9
   1400060ee:	and    rax,r10
   1400060f1:	cmp    rax,r11
   1400060f4:	ja     0x140006125
   1400060f6:	movdqu xmm1,XMMWORD PTR [rdx]
   1400060fa:	movdqu xmm2,XMMWORD PTR [r9]
   1400060ff:	pcmpistri xmm2,xmm1,0xd
   140006105:	jno    0x14000611f
   140006107:	js     0x14000613d
   140006109:	add    rdx,0x10
   14000610d:	add    r9,0x10
   140006111:	jmp    0x1400060e0
   140006113:	cmp    si,WORD PTR [r8]
   140006117:	je     0x140006142
   140006119:	cmp    WORD PTR [r8],di
   14000611d:	je     0x1400060da
   14000611f:	add    r8,0x2
   140006123:	jmp    0x1400060ad
   140006125:	movzx  eax,WORD PTR [r9]
   140006129:	cmp    si,ax
   14000612c:	je     0x14000613d
   14000612e:	cmp    WORD PTR [rdx],ax
   140006131:	jne    0x14000611f
   140006133:	add    rdx,0x2
   140006137:	add    r9,0x2
   14000613b:	jmp    0x1400060e0
   14000613d:	mov    rax,r8
   140006140:	jmp    0x140006144
   140006142:	xor    eax,eax
   140006144:	mov    rbx,QWORD PTR [rsp+0x20]
   140006149:	mov    rsi,QWORD PTR [rsp+0x28]
   14000614e:	add    rsp,0x10
   140006152:	pop    rdi
   140006153:	ret    
   140006154:	sub    rsp,0x38
   140006158:	mov    QWORD PTR [rsp+0x20],r9
   14000615d:	xor    r9d,r9d
   140006160:	call   0x14000616c
   140006165:	add    rsp,0x38
   140006169:	ret    
   14000616a:	int3   
   14000616b:	int3   
   14000616c:	mov    rax,rsp
   14000616f:	mov    QWORD PTR [rax+0x8],rbx
   140006173:	mov    QWORD PTR [rax+0x10],rsi
   140006177:	mov    QWORD PTR [rax+0x18],rdi
   14000617b:	mov    QWORD PTR [rax+0x20],r14
   14000617f:	push   rbp
   140006180:	mov    rbp,rsp
   140006183:	sub    rsp,0x50
   140006187:	and    QWORD PTR [rbp-0x30],0x0
   14000618c:	mov    rdi,rdx
   14000618f:	xor    edx,edx
   140006191:	mov    rsi,r8
   140006194:	mov    rbx,rcx
   140006197:	lea    r8d,[rdx+0x28]
   14000619b:	lea    rcx,[rbp-0x28]
   14000619f:	mov    r14,r9
   1400061a2:	call   0x140006f70
   1400061a7:	test   rsi,rsi
   1400061aa:	jne    0x1400061c4
   1400061ac:	call   0x140009cb4
   1400061b1:	mov    DWORD PTR [rax],0x16
   1400061b7:	call   0x140008d58
   1400061bc:	or     eax,0xffffffff
   1400061bf:	jmp    0x14000624e
   1400061c4:	test   rdi,rdi
   1400061c7:	je     0x1400061ce
   1400061c9:	test   rbx,rbx
   1400061cc:	je     0x1400061ac
   1400061ce:	mov    DWORD PTR [rbp-0x18],0x42
   1400061d5:	mov    QWORD PTR [rbp-0x20],rbx
   1400061d9:	mov    QWORD PTR [rbp-0x30],rbx
   1400061dd:	cmp    rdi,0x3fffffff
   1400061e4:	jbe    0x1400061ef
   1400061e6:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   1400061ed:	jmp    0x1400061f5
   1400061ef:	lea    eax,[rdi+rdi*1]
   1400061f2:	mov    DWORD PTR [rbp-0x28],eax
   1400061f5:	mov    r9,QWORD PTR [rbp+0x30]
   1400061f9:	lea    rcx,[rbp-0x30]
   1400061fd:	mov    r8,r14
   140006200:	mov    rdx,rsi
   140006203:	call   0x14000906c
   140006208:	mov    edi,eax
   14000620a:	test   rbx,rbx
   14000620d:	je     0x14000624e
   14000620f:	dec    DWORD PTR [rbp-0x28]
   140006212:	js     0x140006228
   140006214:	mov    rax,QWORD PTR [rbp-0x30]
   140006218:	mov    BYTE PTR [rax],0x0
   14000621b:	mov    rax,QWORD PTR [rbp-0x30]
   14000621f:	inc    rax
   140006222:	mov    QWORD PTR [rbp-0x30],rax
   140006226:	jmp    0x140006237
   140006228:	lea    rdx,[rbp-0x30]
   14000622c:	xor    ecx,ecx
   14000622e:	call   0x140008e20
   140006233:	mov    rax,QWORD PTR [rbp-0x30]
   140006237:	dec    DWORD PTR [rbp-0x28]
   14000623a:	js     0x140006241
   14000623c:	mov    BYTE PTR [rax],0x0
   14000623f:	jmp    0x14000624c
   140006241:	lea    rdx,[rbp-0x30]
   140006245:	xor    ecx,ecx
   140006247:	call   0x140008e20
   14000624c:	mov    eax,edi
   14000624e:	mov    rbx,QWORD PTR [rsp+0x60]
   140006253:	mov    rsi,QWORD PTR [rsp+0x68]
   140006258:	mov    rdi,QWORD PTR [rsp+0x70]
   14000625d:	mov    r14,QWORD PTR [rsp+0x78]
   140006262:	add    rsp,0x50
   140006266:	pop    rbp
   140006267:	ret    
   140006268:	rex push rbx
   14000626a:	sub    rsp,0x50
   14000626e:	movsd  QWORD PTR [rsp+0x68],xmm0
   140006274:	movabs rax,0x7fffffffffffffff
   14000627e:	mov    rcx,QWORD PTR [rsp+0x68]
   140006283:	movsd  QWORD PTR [rsp+0x68],xmm1
   140006289:	mov    r8,QWORD PTR [rsp+0x68]
   14000628e:	and    rcx,rax
   140006291:	and    r8,rax
   140006294:	mov    r9,rcx
   140006297:	mov    eax,0x7ff
   14000629c:	mov    rdx,r8
   14000629f:	shr    r9,0x34
   1400062a3:	shr    rdx,0x34
   1400062a7:	cmp    r9,rax
   1400062aa:	je     0x140006478
   1400062b0:	cmp    rdx,rax
   1400062b3:	je     0x140006478
   1400062b9:	mov    QWORD PTR [rsp+0x68],rcx
   1400062be:	mov    eax,r9d
   1400062c1:	xor    r10d,r10d
   1400062c4:	movsd  xmm2,QWORD PTR [rsp+0x68]
   1400062ca:	mov    QWORD PTR [rsp+0x68],r8
   1400062cf:	sub    eax,edx
   1400062d1:	movsd  xmm3,QWORD PTR [rsp+0x68]
   1400062d7:	test   rcx,rcx
   1400062da:	jne    0x1400062e4
   1400062dc:	movaps xmm0,xmm3
   1400062df:	jmp    0x1400064c4
   1400062e4:	test   r8,r8
   1400062e7:	jne    0x1400062f1
   1400062e9:	movaps xmm0,xmm2
   1400062ec:	jmp    0x1400064c4
   1400062f1:	add    eax,0x36
   1400062f4:	cmp    eax,0x6c
   1400062f7:	ja     0x14000646f
   1400062fd:	mov    eax,0x5f3
   140006302:	cmp    r9,rax
   140006305:	ja     0x1400063a7
   14000630b:	cmp    rdx,rax
   14000630e:	ja     0x1400063a7
   140006314:	mov    eax,0x20b
   140006319:	cmp    r9,rax
   14000631c:	jb     0x140006327
   14000631e:	cmp    rdx,rax
   140006321:	jae    0x1400063d5
   140006327:	movsd  xmm0,QWORD PTR [rip+0x285f1]        # 0x14002e920
   14000632f:	movabs rbx,0x2590000000000000
   140006339:	mov    r10d,0xfffffda8
   14000633f:	movabs r11,0x2580000000000000
   140006349:	test   r9,r9
   14000634c:	jne    0x14000636e
   14000634e:	lea    rax,[rcx+rbx*1]
   140006352:	mov    QWORD PTR [rsp+0x68],rax
   140006357:	movsd  xmm2,QWORD PTR [rsp+0x68]
   14000635d:	addsd  xmm2,xmm0
   140006361:	movsd  QWORD PTR [rsp+0x68],xmm2
   140006367:	mov    rax,QWORD PTR [rsp+0x68]
   14000636c:	jmp    0x14000637c
   14000636e:	add    rcx,r11
   140006371:	mov    QWORD PTR [rsp+0x68],rcx
   140006376:	movsd  xmm2,QWORD PTR [rsp+0x68]
   14000637c:	test   rdx,rdx
   14000637f:	jne    0x1400063a1
   140006381:	lea    rax,[r8+rbx*1]
   140006385:	mov    QWORD PTR [rsp+0x68],rax
   14000638a:	movsd  xmm3,QWORD PTR [rsp+0x68]
   140006390:	addsd  xmm3,xmm0
   140006394:	movsd  QWORD PTR [rsp+0x68],xmm3
   14000639a:	mov    rax,QWORD PTR [rsp+0x68]
   14000639f:	jmp    0x1400063d5
   1400063a1:	lea    rax,[r8+r11*1]
   1400063a5:	jmp    0x1400063ca
   1400063a7:	movabs rdx,0xda80000000000000
   1400063b1:	mov    r10d,0x258
   1400063b7:	lea    rax,[rcx+rdx*1]
   1400063bb:	mov    QWORD PTR [rsp+0x68],rax
   1400063c0:	lea    rax,[r8+rdx*1]
   1400063c4:	movsd  xmm2,QWORD PTR [rsp+0x68]
   1400063ca:	mov    QWORD PTR [rsp+0x68],rax
   1400063cf:	movsd  xmm3,QWORD PTR [rsp+0x68]
   1400063d5:	movaps xmm1,xmm2
   1400063d8:	movaps xmm0,xmm3
   1400063db:	movsxd rax,r10d
   1400063de:	add    rax,0x3ff
   1400063e4:	shl    rax,0x34
   1400063e8:	mulsd  xmm1,xmm2
   1400063ec:	mulsd  xmm0,xmm3
   1400063f0:	addsd  xmm1,xmm0
   1400063f4:	movsd  QWORD PTR [rsp+0x70],xmm1
   1400063fa:	sqrtsd xmm1,QWORD PTR [rsp+0x70]
   140006400:	movsd  QWORD PTR [rsp+0x60],xmm1
   140006406:	mov    QWORD PTR [rsp+0x68],rax
   14000640b:	movsd  xmm0,QWORD PTR [rsp+0x68]
   140006411:	movsd  xmm1,QWORD PTR [rsp+0x60]
   140006417:	mulsd  xmm1,xmm0
   14000641b:	comisd xmm1,QWORD PTR [rip+0x284f5]        # 0x14002e918
   140006423:	jbe    0x14000646a
   140006425:	mov    DWORD PTR [rsp+0x40],0x2
   14000642d:	movsd  QWORD PTR [rsp+0x38],xmm3
   140006433:	movsd  QWORD PTR [rsp+0x30],xmm2
   140006439:	mov    edx,0x18
   14000643e:	lea    rcx,[rip+0x284c7]        # 0x14002e90c
   140006445:	movabs r8,0x7ff0000000000000
   14000644f:	lea    r9d,[rdx-0x15]
   140006453:	mov    DWORD PTR [rsp+0x28],0x22
   14000645b:	mov    DWORD PTR [rsp+0x20],0x11
   140006463:	call   0x14000a008
   140006468:	jmp    0x1400064c4
   14000646a:	movaps xmm0,xmm1
   14000646d:	jmp    0x1400064c4
   14000646f:	addsd  xmm2,xmm3
   140006473:	jmp    0x1400062e9
   140006478:	mulsd  xmm0,xmm0
   14000647c:	mulsd  xmm1,xmm1
   140006480:	movabs r10,0xfffffffffffff
   14000648a:	addsd  xmm0,xmm1
   14000648e:	movsd  QWORD PTR [rsp+0x60],xmm0
   140006494:	cmp    r9,rax
   140006497:	jne    0x14000649e
   140006499:	test   r10,rcx
   14000649c:	je     0x1400064a8
   14000649e:	cmp    rdx,rax
   1400064a1:	jne    0x1400064c4
   1400064a3:	test   r10,r8
   1400064a6:	jne    0x1400064c4
   1400064a8:	xor    ecx,ecx
   1400064aa:	call   0x140009eb0
   1400064af:	movabs rax,0x7ff0000000000000
   1400064b9:	mov    QWORD PTR [rsp+0x68],rax
   1400064be:	movsd  xmm0,QWORD PTR [rsp+0x68]
   1400064c4:	add    rsp,0x50
   1400064c8:	pop    rbx
   1400064c9:	ret    
   1400064ca:	int3   
   1400064cb:	int3   
   1400064cc:	sub    rsp,0x28
   1400064d0:	xor    eax,eax
   1400064d2:	test   cl,0x1
   1400064d5:	lea    edx,[rax+0x8]
   1400064d8:	cmovne eax,edx
   1400064db:	test   cl,0x2
   1400064de:	je     0x1400064e3
   1400064e0:	or     eax,0x10
   1400064e3:	test   cl,0x4
   1400064e6:	je     0x1400064eb
   1400064e8:	or     eax,0x4
   1400064eb:	test   dl,cl
   1400064ed:	je     0x1400064f2
   1400064ef:	or     eax,0x1
   1400064f2:	test   cl,0x10
   1400064f5:	je     0x1400064fa
   1400064f7:	or     eax,0x20
   1400064fa:	mov    ecx,eax
   1400064fc:	call   0x140009eb0
   140006501:	movabs rax,0x7ff0000000000000
   14000650b:	mov    QWORD PTR [rsp+0x38],rax
   140006510:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140006516:	add    rsp,0x28
   14000651a:	ret    
   14000651b:	int3   
   14000651c:	xor    eax,eax
   14000651e:	test   cl,0x1
   140006521:	lea    edx,[rax+0x8]
   140006524:	cmovne eax,edx
   140006527:	test   cl,0x2
   14000652a:	je     0x14000652f
   14000652c:	or     eax,0x10
   14000652f:	test   cl,0x4
   140006532:	je     0x140006537
   140006534:	or     eax,0x4
   140006537:	test   dl,cl
   140006539:	je     0x14000653e
   14000653b:	or     eax,0x1
   14000653e:	test   cl,0x10
   140006541:	je     0x140006546
   140006543:	or     eax,0x20
   140006546:	mov    ecx,eax
   140006548:	jmp    0x140009eb0
   14000654d:	int3   
   14000654e:	int3   
   14000654f:	int3   
   140006550:	movaps xmm1,xmm0
   140006553:	movsxd rax,edx
   140006556:	add    rax,0x3ff
   14000655c:	shl    rax,0x34
   140006560:	mov    QWORD PTR [rsp+0x8],rax
   140006565:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14000656b:	mulsd  xmm0,xmm1
   14000656f:	ret    
   140006570:	mov    QWORD PTR [rsp+0x10],rbx
   140006575:	mov    QWORD PTR [rsp+0x18],rdi
   14000657a:	push   rbp
   14000657b:	mov    rbp,rsp
   14000657e:	sub    rsp,0x60
   140006582:	movaps xmm0,XMMWORD PTR [rip+0x283a7]        # 0x14002e930
   140006589:	movaps xmm1,XMMWORD PTR [rip+0x283b0]        # 0x14002e940
   140006590:	mov    rbx,rdx
   140006593:	mov    rdi,rcx
   140006596:	movaps XMMWORD PTR [rbp-0x40],xmm0
   14000659a:	movaps xmm0,XMMWORD PTR [rip+0x283af]        # 0x14002e950
   1400065a1:	movaps XMMWORD PTR [rbp-0x30],xmm1
   1400065a5:	movaps xmm1,XMMWORD PTR [rip+0x283b4]        # 0x14002e960
   1400065ac:	movaps XMMWORD PTR [rbp-0x20],xmm0
   1400065b0:	movaps XMMWORD PTR [rbp-0x10],xmm1
   1400065b4:	test   rdx,rdx
   1400065b7:	je     0x1400065cf
   1400065b9:	test   BYTE PTR [rdx],0x10
   1400065bc:	je     0x1400065cf
   1400065be:	mov    rcx,QWORD PTR [rcx]
   1400065c1:	sub    rcx,0x8
   1400065c5:	mov    rax,QWORD PTR [rcx]
   1400065c8:	mov    rbx,QWORD PTR [rax+0x30]
   1400065cc:	call   QWORD PTR [rax+0x40]
   1400065cf:	lea    rdx,[rbp+0x10]
   1400065d3:	mov    rcx,rbx
   1400065d6:	mov    QWORD PTR [rbp-0x18],rdi
   1400065da:	mov    QWORD PTR [rbp-0x10],rbx
   1400065de:	call   QWORD PTR [rip+0x25b3c]        # 0x14002c120
   1400065e4:	mov    rdx,rax
   1400065e7:	mov    QWORD PTR [rbp+0x10],rax
   1400065eb:	mov    QWORD PTR [rbp-0x8],rax
   1400065ef:	test   rbx,rbx
   1400065f2:	je     0x14000660f
   1400065f4:	test   BYTE PTR [rbx],0x8
   1400065f7:	mov    ecx,0x1994000
   1400065fc:	je     0x140006603
   1400065fe:	mov    DWORD PTR [rbp-0x20],ecx
   140006601:	jmp    0x14000660f
   140006603:	mov    eax,DWORD PTR [rbp-0x20]
   140006606:	test   rdx,rdx
   140006609:	cmove  eax,ecx
   14000660c:	mov    DWORD PTR [rbp-0x20],eax
   14000660f:	mov    r8d,DWORD PTR [rbp-0x28]
   140006613:	mov    edx,DWORD PTR [rbp-0x3c]
   140006616:	mov    ecx,DWORD PTR [rbp-0x40]
   140006619:	lea    r9,[rbp-0x20]
   14000661d:	call   QWORD PTR [rip+0x25b05]        # 0x14002c128
   140006623:	lea    r11,[rsp+0x60]
   140006628:	mov    rbx,QWORD PTR [r11+0x18]
   14000662c:	mov    rdi,QWORD PTR [r11+0x20]
   140006630:	mov    rsp,r11
   140006633:	pop    rbp
   140006634:	ret    
   140006635:	int3   
   140006636:	int3   
   140006637:	int3   
   140006638:	mov    QWORD PTR [rsp+0x8],rbx
   14000663d:	mov    QWORD PTR [rsp+0x10],rsi
   140006642:	push   rdi
   140006643:	sub    rsp,0x20
   140006647:	mov    ebx,DWORD PTR [rcx+0xc]
   14000664a:	mov    edi,edx
   14000664c:	mov    rsi,rcx
   14000664f:	test   ebx,ebx
   140006651:	je     0x14000667f
   140006653:	dec    ebx
   140006655:	call   0x14000a3ec
   14000665a:	lea    rcx,[rbx+rbx*4]
   14000665e:	mov    rax,QWORD PTR [rax+0x128]
   140006665:	lea    rdx,[rax+rcx*4]
   140006669:	movsxd rax,DWORD PTR [rsi+0x10]
   14000666d:	add    rdx,rax
   140006670:	cmp    edi,DWORD PTR [rdx+0x4]
   140006673:	jle    0x14000664f
   140006675:	cmp    edi,DWORD PTR [rdx+0x8]
   140006678:	jg     0x14000664f
   14000667a:	mov    rax,rdx
   14000667d:	jmp    0x140006681
   14000667f:	xor    eax,eax
   140006681:	mov    rbx,QWORD PTR [rsp+0x30]
   140006686:	mov    rsi,QWORD PTR [rsp+0x38]
   14000668b:	add    rsp,0x20
   14000668f:	pop    rdi
   140006690:	ret    
   140006691:	int3   
   140006692:	int3   
   140006693:	int3   
   140006694:	mov    QWORD PTR [rsp+0x8],rbx
   140006699:	mov    QWORD PTR [rsp+0x10],rbp
   14000669e:	mov    QWORD PTR [rsp+0x18],rsi
   1400066a3:	push   rdi
   1400066a4:	sub    rsp,0x20
   1400066a8:	mov    rsi,rdx
   1400066ab:	mov    rdx,rcx
   1400066ae:	mov    rcx,rsi
   1400066b1:	call   0x14000c1cc
   1400066b6:	mov    edi,DWORD PTR [rsi+0xc]
   1400066b9:	xor    ebx,ebx
   1400066bb:	mov    ebp,eax
   1400066bd:	jmp    0x1400066e6
   1400066bf:	dec    edi
   1400066c1:	call   0x14000a3ec
   1400066c6:	lea    rdx,[rdi+rdi*4]
   1400066ca:	mov    rax,QWORD PTR [rax+0x128]
   1400066d1:	lea    rcx,[rax+rdx*4]
   1400066d5:	movsxd rax,DWORD PTR [rsi+0x10]
   1400066d9:	add    rcx,rax
   1400066dc:	cmp    ebp,DWORD PTR [rcx+0x4]
   1400066df:	jle    0x1400066e6
   1400066e1:	cmp    ebp,DWORD PTR [rcx+0x8]
   1400066e4:	jle    0x1400066ed
   1400066e6:	test   edi,edi
   1400066e8:	jne    0x1400066bf
   1400066ea:	mov    rcx,rbx
   1400066ed:	mov    rbp,QWORD PTR [rsp+0x38]
   1400066f2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400066f7:	test   rcx,rcx
   1400066fa:	setne  bl
   1400066fd:	mov    eax,ebx
   1400066ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140006704:	add    rsp,0x20
   140006708:	pop    rdi
   140006709:	ret    
   14000670a:	int3   
   14000670b:	int3   
   14000670c:	mov    QWORD PTR [rsp+0x10],rbx
   140006711:	mov    QWORD PTR [rsp+0x18],rbp
   140006716:	push   rsi
   140006717:	push   rdi
   140006718:	push   r12
   14000671a:	push   r14
   14000671c:	push   r15
   14000671e:	sub    rsp,0x20
   140006722:	mov    edi,DWORD PTR [r8+0xc]
   140006726:	mov    r12,rcx
   140006729:	mov    rcx,r8
   14000672c:	mov    rsi,r9
   14000672f:	mov    r14,r8
   140006732:	mov    r15,rdx
   140006735:	call   0x14000c1cc
   14000673a:	mov    r10,QWORD PTR [r12]
   14000673e:	mov    QWORD PTR [rsi],r10
   140006741:	mov    ebp,eax
   140006743:	test   edi,edi
   140006745:	je     0x1400067bb
   140006747:	movsxd rax,DWORD PTR [r14+0x10]
   14000674b:	dec    edi
   14000674d:	lea    rdx,[rdi+rdi*4]
   140006751:	lea    rbx,[rax+rdx*4]
   140006755:	add    rbx,QWORD PTR [r15+0x8]
   140006759:	cmp    ebp,DWORD PTR [rbx+0x4]
   14000675c:	jle    0x140006743
   14000675e:	cmp    ebp,DWORD PTR [rbx+0x8]
   140006761:	jg     0x140006743
   140006763:	mov    rcx,QWORD PTR [r15]
   140006766:	lea    rdx,[rsp+0x50]
   14000676b:	xor    r8d,r8d
   14000676e:	call   QWORD PTR [rip+0x259bc]        # 0x14002c130
   140006774:	movsxd r8,DWORD PTR [rbx+0x10]
   140006778:	mov    r9d,DWORD PTR [rbx+0xc]
   14000677c:	add    r8,QWORD PTR [rsp+0x50]
   140006781:	mov    r10d,DWORD PTR [rax]
   140006784:	xor    ecx,ecx
   140006786:	test   r9d,r9d
   140006789:	je     0x1400067a2
   14000678b:	lea    rdx,[r8+0xc]
   14000678f:	movsxd rax,DWORD PTR [rdx]
   140006792:	cmp    rax,r10
   140006795:	je     0x1400067a2
   140006797:	inc    ecx
   140006799:	add    rdx,0x14
   14000679d:	cmp    ecx,r9d
   1400067a0:	jb     0x14000678f
   1400067a2:	cmp    ecx,r9d
   1400067a5:	jae    0x140006743
   1400067a7:	mov    rax,QWORD PTR [r12]
   1400067ab:	lea    rcx,[rcx+rcx*4]
   1400067af:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   1400067b4:	mov    rcx,QWORD PTR [rcx+rax*1]
   1400067b8:	mov    QWORD PTR [rsi],rcx
   1400067bb:	mov    rbx,QWORD PTR [rsp+0x58]
   1400067c0:	mov    rbp,QWORD PTR [rsp+0x60]
   1400067c5:	mov    rax,rsi
   1400067c8:	add    rsp,0x20
   1400067cc:	pop    r15
   1400067ce:	pop    r14
   1400067d0:	pop    r12
   1400067d2:	pop    rdi
   1400067d3:	pop    rsi
   1400067d4:	ret    
   1400067d5:	int3   
   1400067d6:	int3   
   1400067d7:	int3   
   1400067d8:	mov    rax,rsp
   1400067db:	mov    QWORD PTR [rax+0x8],rbx
   1400067df:	mov    QWORD PTR [rax+0x10],rbp
   1400067e3:	mov    QWORD PTR [rax+0x18],rsi
   1400067e7:	mov    QWORD PTR [rax+0x20],rdi
   1400067eb:	push   r12
   1400067ed:	push   r14
   1400067ef:	push   r15
   1400067f1:	sub    rsp,0x20
   1400067f5:	mov    edi,DWORD PTR [rdx+0xc]
   1400067f8:	mov    rbp,QWORD PTR [rsp+0x70]
   1400067fd:	mov    rbx,rdx
   140006800:	mov    rcx,rbx
   140006803:	mov    rdx,rbp
   140006806:	mov    r12d,r9d
   140006809:	xor    esi,esi
   14000680b:	call   0x14000c1cc
   140006810:	mov    r14d,eax
   140006813:	test   edi,edi
   140006815:	jne    0x14000681c
   140006817:	call   0x14000c260
   14000681c:	mov    r10,QWORD PTR [rsp+0x68]
   140006821:	mov    r8,QWORD PTR [rsp+0x60]
   140006826:	mov    edx,edi
   140006828:	or     DWORD PTR [r10],0xffffffff
   14000682c:	or     DWORD PTR [r8],0xffffffff
   140006830:	test   edi,edi
   140006832:	je     0x14000685e
   140006834:	mov    r11,QWORD PTR [rbp+0x8]
   140006838:	movsxd r15,DWORD PTR [rbx+0x10]
   14000683c:	lea    r9d,[rdx-0x1]
   140006840:	lea    rcx,[r9+r9*4]
   140006844:	lea    rax,[r11+rcx*4]
   140006848:	cmp    r14d,DWORD PTR [rax+r15*1+0x4]
   14000684d:	jle    0x140006856
   14000684f:	cmp    r14d,DWORD PTR [rax+r15*1+0x8]
   140006854:	jle    0x14000685e
   140006856:	mov    edx,r9d
   140006859:	test   r9d,r9d
   14000685c:	jne    0x14000683c
   14000685e:	test   edx,edx
   140006860:	je     0x140006875
   140006862:	lea    eax,[rdx-0x1]
   140006865:	lea    rdx,[rax+rax*4]
   140006869:	movsxd rax,DWORD PTR [rbx+0x10]
   14000686d:	lea    rsi,[rax+rdx*4]
   140006871:	add    rsi,QWORD PTR [rbp+0x8]
   140006875:	xor    edx,edx
   140006877:	test   edi,edi
   140006879:	je     0x1400068db
   14000687b:	xor    r9d,r9d
   14000687e:	movsxd rcx,DWORD PTR [rbx+0x10]
   140006882:	add    rcx,r9
   140006885:	add    rcx,QWORD PTR [rbp+0x8]
   140006889:	test   rsi,rsi
   14000688c:	je     0x14000689d
   14000688e:	mov    eax,DWORD PTR [rsi+0x4]
   140006891:	cmp    DWORD PTR [rcx],eax
   140006893:	jle    0x1400068b7
   140006895:	mov    eax,DWORD PTR [rsi+0x8]
   140006898:	cmp    DWORD PTR [rcx+0x4],eax
   14000689b:	jg     0x1400068b7
   14000689d:	cmp    r12d,DWORD PTR [rcx]
   1400068a0:	jl     0x1400068b7
   1400068a2:	cmp    r12d,DWORD PTR [rcx+0x4]
   1400068a6:	jg     0x1400068b7
   1400068a8:	cmp    DWORD PTR [r8],0xffffffff
   1400068ac:	jne    0x1400068b1
   1400068ae:	mov    DWORD PTR [r8],edx
   1400068b1:	lea    eax,[rdx+0x1]
   1400068b4:	mov    DWORD PTR [r10],eax
   1400068b7:	inc    edx
   1400068b9:	add    r9,0x14
   1400068bd:	cmp    edx,edi
   1400068bf:	jb     0x14000687e
   1400068c1:	mov    eax,DWORD PTR [r8]
   1400068c4:	cmp    eax,0xffffffff
   1400068c7:	je     0x1400068db
   1400068c9:	lea    rcx,[rax+rax*4]
   1400068cd:	movsxd rax,DWORD PTR [rbx+0x10]
   1400068d1:	lea    rax,[rax+rcx*4]
   1400068d5:	add    rax,QWORD PTR [rbp+0x8]
   1400068d9:	jmp    0x1400068e5
   1400068db:	and    DWORD PTR [r8],0x0
   1400068df:	and    DWORD PTR [r10],0x0
   1400068e3:	xor    eax,eax
   1400068e5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400068ea:	mov    rbp,QWORD PTR [rsp+0x48]
   1400068ef:	mov    rsi,QWORD PTR [rsp+0x50]
   1400068f4:	mov    rdi,QWORD PTR [rsp+0x58]
   1400068f9:	add    rsp,0x20
   1400068fd:	pop    r15
   1400068ff:	pop    r14
   140006901:	pop    r12
   140006903:	ret    
   140006904:	mov    QWORD PTR [rsp+0x8],rbx
   140006909:	mov    QWORD PTR [rsp+0x10],rbp
   14000690e:	push   rsi
   14000690f:	push   rdi
   140006910:	push   r14
   140006912:	sub    rsp,0x20
   140006916:	lea    r9,[rsp+0x50]
   14000691b:	mov    rdi,r8
   14000691e:	mov    rbp,rdx
   140006921:	call   0x14000670c
   140006926:	mov    rdx,rbp
   140006929:	mov    rcx,rdi
   14000692c:	mov    r14,rax
   14000692f:	call   0x14000c1cc
   140006934:	mov    ebx,DWORD PTR [rdi+0xc]
   140006937:	mov    esi,eax
   140006939:	jmp    0x140006962
   14000693b:	dec    ebx
   14000693d:	call   0x14000a3ec
   140006942:	lea    rdx,[rbx+rbx*4]
   140006946:	mov    rax,QWORD PTR [rax+0x128]
   14000694d:	lea    rcx,[rax+rdx*4]
   140006951:	movsxd rax,DWORD PTR [rdi+0x10]
   140006955:	add    rcx,rax
   140006958:	cmp    esi,DWORD PTR [rcx+0x4]
   14000695b:	jle    0x140006962
   14000695d:	cmp    esi,DWORD PTR [rcx+0x8]
   140006960:	jle    0x140006968
   140006962:	test   ebx,ebx
   140006964:	jne    0x14000693b
   140006966:	xor    ecx,ecx
   140006968:	test   rcx,rcx
   14000696b:	jne    0x140006973
   14000696d:	or     r9d,0xffffffff
   140006971:	jmp    0x140006977
   140006973:	mov    r9d,DWORD PTR [rcx+0x4]
   140006977:	mov    r8,rdi
   14000697a:	mov    rdx,rbp
   14000697d:	mov    rcx,r14
   140006980:	call   0x14000bbb4
   140006985:	mov    rbx,QWORD PTR [rsp+0x40]
   14000698a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000698f:	add    rsp,0x20
   140006993:	pop    r14
   140006995:	pop    rdi
   140006996:	pop    rsi
   140006997:	ret    
   140006998:	mov    QWORD PTR [rsp+0x8],rbx
   14000699d:	mov    QWORD PTR [rsp+0x10],rbp
   1400069a2:	mov    QWORD PTR [rsp+0x18],rsi
   1400069a7:	push   rdi
   1400069a8:	sub    rsp,0x40
   1400069ac:	mov    rsi,r9
   1400069af:	mov    rbp,r8
   1400069b2:	mov    rbx,rdx
   1400069b5:	mov    rdi,rcx
   1400069b8:	call   0x14000a3ec
   1400069bd:	mov    QWORD PTR [rax+0x138],rbx
   1400069c4:	mov    rbx,QWORD PTR [rdi]
   1400069c7:	call   0x14000a3ec
   1400069cc:	mov    rdx,QWORD PTR [rbx+0x38]
   1400069d0:	mov    rcx,QWORD PTR [rsp+0x78]
   1400069d5:	mov    r9,QWORD PTR [rsp+0x70]
   1400069da:	mov    DWORD PTR [rsp+0x38],0x1
   1400069e2:	mov    QWORD PTR [rax+0x130],rdx
   1400069e9:	xor    ebx,ebx
   1400069eb:	mov    QWORD PTR [rsp+0x30],rbx
   1400069f0:	mov    DWORD PTR [rsp+0x28],ebx
   1400069f4:	mov    QWORD PTR [rsp+0x20],rcx
   1400069f9:	mov    rcx,QWORD PTR [rdi]
   1400069fc:	mov    r8,rsi
   1400069ff:	mov    rdx,rbp
   140006a02:	call   0x14000bddc
   140006a07:	call   0x14000a3ec
   140006a0c:	mov    rcx,QWORD PTR [rsp+0x80]
   140006a14:	mov    rbp,QWORD PTR [rsp+0x58]
   140006a19:	mov    rsi,QWORD PTR [rsp+0x60]
   140006a1e:	mov    QWORD PTR [rax+0x138],rbx
   140006a25:	lea    eax,[rbx+0x1]
   140006a28:	mov    rbx,QWORD PTR [rsp+0x50]
   140006a2d:	mov    DWORD PTR [rcx],0x1
   140006a33:	add    rsp,0x40
   140006a37:	pop    rdi
   140006a38:	ret    
   140006a39:	int3   
   140006a3a:	int3   
   140006a3b:	int3   
   140006a3c:	mov    rax,rsp
   140006a3f:	mov    QWORD PTR [rax+0x20],r9
   140006a43:	mov    QWORD PTR [rax+0x18],r8
   140006a47:	mov    QWORD PTR [rax+0x10],rdx
   140006a4b:	mov    QWORD PTR [rax+0x8],rcx
   140006a4f:	push   rbx
   140006a50:	sub    rsp,0x60
   140006a54:	mov    rbx,rcx
   140006a57:	and    DWORD PTR [rax-0x28],0x0
   140006a5b:	mov    QWORD PTR [rax-0x20],rcx
   140006a5f:	mov    QWORD PTR [rax-0x18],r8
   140006a63:	call   0x14000a3ec
   140006a68:	mov    r8,QWORD PTR [rax+0xe0]
   140006a6f:	lea    rdx,[rsp+0x48]
   140006a74:	mov    ecx,DWORD PTR [rbx]
   140006a76:	call   r8
   140006a79:	mov    DWORD PTR [rsp+0x40],0x0
   140006a81:	jmp    0x140006a83
   140006a83:	mov    eax,DWORD PTR [rsp+0x40]
   140006a87:	add    rsp,0x60
   140006a8b:	pop    rbx
   140006a8c:	ret    
   140006a8d:	int3   
   140006a8e:	int3   
   140006a8f:	int3   
   140006a90:	rex push rbx
   140006a92:	sub    rsp,0x20
   140006a96:	mov    rbx,rcx
   140006a99:	mov    QWORD PTR [rcx],rdx
   140006a9c:	call   0x14000a3ec
   140006aa1:	cmp    rbx,QWORD PTR [rax+0x120]
   140006aa8:	jae    0x140006ab8
   140006aaa:	call   0x14000a3ec
   140006aaf:	mov    rcx,QWORD PTR [rax+0x120]
   140006ab6:	jmp    0x140006aba
   140006ab8:	xor    ecx,ecx
   140006aba:	mov    QWORD PTR [rbx+0x8],rcx
   140006abe:	call   0x14000a3ec
   140006ac3:	mov    QWORD PTR [rax+0x120],rbx
   140006aca:	mov    rax,rbx
   140006acd:	add    rsp,0x20
   140006ad1:	pop    rbx
   140006ad2:	ret    
   140006ad3:	int3   
   140006ad4:	mov    QWORD PTR [rsp+0x8],rbx
   140006ad9:	push   rdi
   140006ada:	sub    rsp,0x20
   140006ade:	mov    rdi,rcx
   140006ae1:	call   0x14000a3ec
   140006ae6:	cmp    rdi,QWORD PTR [rax+0x120]
   140006aed:	je     0x140006af4
   140006aef:	call   0x14000c260
   140006af4:	call   0x14000a3ec
   140006af9:	mov    rbx,QWORD PTR [rax+0x120]
   140006b00:	jmp    0x140006b0b
   140006b02:	cmp    rdi,rbx
   140006b05:	je     0x140006b20
   140006b07:	mov    rbx,QWORD PTR [rbx+0x8]
   140006b0b:	test   rbx,rbx
   140006b0e:	jne    0x140006b02
   140006b10:	call   0x14000c260
   140006b15:	mov    rbx,QWORD PTR [rsp+0x30]
   140006b1a:	add    rsp,0x20
   140006b1e:	pop    rdi
   140006b1f:	ret    
   140006b20:	call   0x14000a3ec
   140006b25:	mov    rcx,QWORD PTR [rbx+0x8]
   140006b29:	mov    QWORD PTR [rax+0x120],rcx
   140006b30:	jmp    0x140006b15
   140006b32:	int3   
   140006b33:	int3   
   140006b34:	sub    rsp,0x28
   140006b38:	call   0x14000a3ec
   140006b3d:	mov    rax,QWORD PTR [rax+0x128]
   140006b44:	add    rsp,0x28
   140006b48:	ret    
   140006b49:	int3   
   140006b4a:	int3   
   140006b4b:	int3   
   140006b4c:	sub    rsp,0x28
   140006b50:	call   0x14000a3ec
   140006b55:	mov    rax,QWORD PTR [rax+0x130]
   140006b5c:	add    rsp,0x28
   140006b60:	ret    
   140006b61:	int3   
   140006b62:	int3   
   140006b63:	int3   
   140006b64:	rex push rbx
   140006b66:	sub    rsp,0x20
   140006b6a:	mov    rbx,rcx
   140006b6d:	call   0x14000a3ec
   140006b72:	mov    rdx,QWORD PTR [rax+0x120]
   140006b79:	jmp    0x140006b84
   140006b7b:	cmp    QWORD PTR [rdx],rbx
   140006b7e:	je     0x140006b92
   140006b80:	mov    rdx,QWORD PTR [rdx+0x8]
   140006b84:	test   rdx,rdx
   140006b87:	jne    0x140006b7b
   140006b89:	lea    eax,[rdx+0x1]
   140006b8c:	add    rsp,0x20
   140006b90:	pop    rbx
   140006b91:	ret    
   140006b92:	xor    eax,eax
   140006b94:	jmp    0x140006b8c
   140006b96:	int3   
   140006b97:	int3   
   140006b98:	mov    r8d,0x4d0
   140006b9e:	jmp    0x1400059f0
   140006ba3:	int3   
   140006ba4:	rex push rbx
   140006ba6:	sub    rsp,0x20
   140006baa:	mov    rbx,rcx
   140006bad:	call   0x14000a3ec
   140006bb2:	mov    QWORD PTR [rax+0x128],rbx
   140006bb9:	add    rsp,0x20
   140006bbd:	pop    rbx
   140006bbe:	ret    
   140006bbf:	int3   
   140006bc0:	rex push rbx
   140006bc2:	sub    rsp,0x20
   140006bc6:	mov    rbx,rcx
   140006bc9:	call   0x14000a3ec
   140006bce:	mov    QWORD PTR [rax+0x130],rbx
   140006bd5:	add    rsp,0x20
   140006bd9:	pop    rbx
   140006bda:	ret    
   140006bdb:	int3   
   140006bdc:	rex push rbp
   140006bde:	lea    rbp,[rsp-0x4b0]
   140006be6:	sub    rsp,0x5b0
   140006bed:	mov    rax,QWORD PTR [rip+0x355dc]        # 0x14003c1d0
   140006bf4:	xor    rax,rsp
   140006bf7:	mov    QWORD PTR [rbp+0x4a0],rax
   140006bfe:	mov    r10,QWORD PTR [rbp+0x4f8]
   140006c05:	lea    rax,[rip+0x27d84]        # 0x14002e990
   140006c0c:	mov    r11,rcx
   140006c0f:	lea    rcx,[rsp+0x30]
   140006c14:	movups xmm0,XMMWORD PTR [rax]
   140006c17:	movups xmm1,XMMWORD PTR [rax+0x10]
   140006c1b:	movups XMMWORD PTR [rcx],xmm0
   140006c1e:	movups xmm0,XMMWORD PTR [rax+0x20]
   140006c22:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006c26:	movups xmm1,XMMWORD PTR [rax+0x30]
   140006c2a:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006c2e:	movups xmm0,XMMWORD PTR [rax+0x40]
   140006c32:	movups XMMWORD PTR [rcx+0x30],xmm1
   140006c36:	movups xmm1,XMMWORD PTR [rax+0x50]
   140006c3a:	movups XMMWORD PTR [rcx+0x40],xmm0
   140006c3e:	movups xmm0,XMMWORD PTR [rax+0x60]
   140006c42:	movups XMMWORD PTR [rcx+0x50],xmm1
   140006c46:	movups xmm1,XMMWORD PTR [rax+0x80]
   140006c4d:	movups XMMWORD PTR [rcx+0x60],xmm0
   140006c51:	movups xmm0,XMMWORD PTR [rax+0x70]
   140006c55:	mov    rax,QWORD PTR [rax+0x90]
   140006c5c:	movups XMMWORD PTR [rcx+0x70],xmm0
   140006c60:	movups XMMWORD PTR [rcx+0x80],xmm1
   140006c67:	mov    QWORD PTR [rcx+0x90],rax
   140006c6e:	mov    rcx,QWORD PTR [r11]
   140006c71:	lea    rax,[rip+0x4880]        # 0x14000b4f8
   140006c78:	mov    QWORD PTR [rsp+0x50],rax
   140006c7d:	mov    rax,QWORD PTR [rbp+0x4e0]
   140006c84:	mov    QWORD PTR [rbp-0x80],rdx
   140006c88:	mov    rdx,QWORD PTR [r10]
   140006c8b:	mov    QWORD PTR [rsp+0x60],rax
   140006c90:	movsxd rax,DWORD PTR [rbp+0x4e8]
   140006c97:	mov    QWORD PTR [rsp+0x68],rax
   140006c9c:	mov    rax,QWORD PTR [rbp+0x4f0]
   140006ca3:	mov    QWORD PTR [rsp+0x70],r8
   140006ca8:	mov    QWORD PTR [rsp+0x78],rax
   140006cad:	movzx  eax,BYTE PTR [rbp+0x500]
   140006cb4:	mov    QWORD PTR [rsp+0x58],r9
   140006cb9:	mov    QWORD PTR [rbp-0x78],rax
   140006cbd:	mov    rax,QWORD PTR [r10+0x40]
   140006cc1:	lea    r8,[rsp+0x30]
   140006cc6:	mov    QWORD PTR [rsp+0x28],rax
   140006ccb:	lea    rax,[rbp-0x30]
   140006ccf:	xor    r9d,r9d
   140006cd2:	mov    QWORD PTR [rsp+0x20],rax
   140006cd7:	mov    QWORD PTR [rbp-0x70],0x19930520
   140006cdf:	call   QWORD PTR [rip+0x25453]        # 0x14002c138
   140006ce5:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140006cec:	xor    rcx,rsp
   140006cef:	call   0x14000c380
   140006cf4:	add    rsp,0x5b0
   140006cfb:	pop    rbp
   140006cfc:	ret    
   140006cfd:	int3   
   140006cfe:	int3   
   140006cff:	int3   
   140006d00:	mov    QWORD PTR [rsp+0x10],rbx
   140006d05:	mov    QWORD PTR [rsp+0x18],rsi
   140006d0a:	push   rdi
   140006d0b:	sub    rsp,0x40
   140006d0f:	mov    rbx,r9
   140006d12:	mov    rdi,r8
   140006d15:	mov    rsi,rcx
   140006d18:	mov    QWORD PTR [rsp+0x50],rdx
   140006d1d:	call   0x14000a3ec
   140006d22:	mov    rdx,QWORD PTR [rbx+0x8]
   140006d26:	mov    QWORD PTR [rax+0x128],rdx
   140006d2d:	call   0x14000a3ec
   140006d32:	mov    rdx,QWORD PTR [rsi+0x38]
   140006d36:	mov    QWORD PTR [rax+0x130],rdx
   140006d3d:	call   0x14000a3ec
   140006d42:	mov    rdx,QWORD PTR [rbx+0x38]
   140006d46:	mov    r8d,DWORD PTR [rdx]
   140006d49:	lea    rdx,[rsp+0x50]
   140006d4e:	mov    r9,rbx
   140006d51:	add    r8,QWORD PTR [rax+0x128]
   140006d58:	xor    eax,eax
   140006d5a:	mov    rcx,rsi
   140006d5d:	mov    DWORD PTR [rsp+0x38],eax
   140006d61:	mov    QWORD PTR [rsp+0x30],rax
   140006d66:	mov    DWORD PTR [rsp+0x28],eax
   140006d6a:	mov    QWORD PTR [rsp+0x20],r8
   140006d6f:	mov    r8,rdi
   140006d72:	call   0x14000bddc
   140006d77:	mov    rbx,QWORD PTR [rsp+0x58]
   140006d7c:	mov    rsi,QWORD PTR [rsp+0x60]
   140006d81:	add    rsp,0x40
   140006d85:	pop    rdi
   140006d86:	ret    
   140006d87:	int3   
   140006d88:	jmp    0x140006d90
   140006d8d:	int3   
   140006d8e:	int3   
   140006d8f:	int3   
   140006d90:	mov    QWORD PTR [rsp+0x10],rbx
   140006d95:	mov    QWORD PTR [rsp+0x18],rsi
   140006d9a:	push   rdi
   140006d9b:	sub    rsp,0x40
   140006d9f:	mov    rbx,r9
   140006da2:	mov    rdi,r8
   140006da5:	mov    rsi,rcx
   140006da8:	mov    QWORD PTR [rsp+0x50],rdx
   140006dad:	call   0x14000a3ec
   140006db2:	mov    rdx,QWORD PTR [rbx+0x8]
   140006db6:	mov    QWORD PTR [rax+0x128],rdx
   140006dbd:	call   0x14000a3ec
   140006dc2:	mov    rdx,QWORD PTR [rsi+0x38]
   140006dc6:	mov    QWORD PTR [rax+0x130],rdx
   140006dcd:	call   0x14000a3ec
   140006dd2:	mov    rdx,QWORD PTR [rbx+0x38]
   140006dd6:	mov    r8d,DWORD PTR [rdx]
   140006dd9:	lea    rdx,[rsp+0x50]
   140006dde:	mov    r9,rbx
   140006de1:	add    r8,QWORD PTR [rax+0x128]
   140006de8:	xor    eax,eax
   140006dea:	mov    rcx,rsi
   140006ded:	mov    DWORD PTR [rsp+0x38],eax
   140006df1:	mov    QWORD PTR [rsp+0x30],rax
   140006df6:	mov    DWORD PTR [rsp+0x28],eax
   140006dfa:	mov    QWORD PTR [rsp+0x20],r8
   140006dff:	mov    r8,rdi
   140006e02:	call   0x14000bddc
   140006e07:	mov    rbx,QWORD PTR [rsp+0x58]
   140006e0c:	mov    rsi,QWORD PTR [rsp+0x60]
   140006e11:	add    rsp,0x40
   140006e15:	pop    rdi
   140006e16:	ret    
   140006e17:	int3   
   140006e18:	int3   
   140006e19:	int3   
   140006e1a:	int3   
   140006e1b:	int3   
   140006e1c:	int3   
   140006e1d:	int3   
   140006e1e:	int3   
   140006e1f:	int3   
   140006e20:	int3   
   140006e21:	int3   
   140006e22:	int3   
   140006e23:	int3   
   140006e24:	int3   
   140006e25:	int3   
   140006e26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006e30:	sub    rsp,0x10
   140006e34:	mov    QWORD PTR [rsp],r10
   140006e38:	mov    QWORD PTR [rsp+0x8],r11
   140006e3d:	xor    r11,r11
   140006e40:	lea    r10,[rsp+0x18]
   140006e45:	sub    r10,rax
   140006e48:	cmovb  r10,r11
   140006e4c:	mov    r11,QWORD PTR gs:0x10
   140006e55:	cmp    r10,r11
   140006e58:	jae    0x140006e70
   140006e5a:	and    r10w,0xf000
   140006e60:	lea    r11,[r11-0x1000]
   140006e67:	mov    BYTE PTR [r11],0x0
   140006e6b:	cmp    r10,r11
   140006e6e:	jne    0x140006e60
   140006e70:	mov    r10,QWORD PTR [rsp]
   140006e74:	mov    r11,QWORD PTR [rsp+0x8]
   140006e79:	add    rsp,0x10
   140006e7d:	ret    
   140006e7e:	int3   
   140006e7f:	int3   
   140006e80:	int3   
   140006e81:	int3   
   140006e82:	int3   
   140006e83:	int3   
   140006e84:	int3   
   140006e85:	int3   
   140006e86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006e90:	sub    rdx,rcx
   140006e93:	cmp    r8,0x8
   140006e97:	jb     0x140006ebb
   140006e99:	test   cl,0x7
   140006e9c:	je     0x140006eb2
   140006e9e:	xchg   ax,ax
   140006ea0:	mov    al,BYTE PTR [rcx]
   140006ea2:	cmp    al,BYTE PTR [rdx+rcx*1]
   140006ea5:	jne    0x140006ed3
   140006ea7:	inc    rcx
   140006eaa:	dec    r8
   140006ead:	test   cl,0x7
   140006eb0:	jne    0x140006ea0
   140006eb2:	mov    r9,r8
   140006eb5:	shr    r9,0x3
   140006eb9:	jne    0x140006eda
   140006ebb:	test   r8,r8
   140006ebe:	je     0x140006ecf
   140006ec0:	mov    al,BYTE PTR [rcx]
   140006ec2:	cmp    al,BYTE PTR [rdx+rcx*1]
   140006ec5:	jne    0x140006ed3
   140006ec7:	inc    rcx
   140006eca:	dec    r8
   140006ecd:	jne    0x140006ec0
   140006ecf:	xor    rax,rax
   140006ed2:	ret    
   140006ed3:	sbb    eax,eax
   140006ed5:	sbb    eax,0xffffffff
   140006ed8:	ret    
   140006ed9:	nop
   140006eda:	shr    r9,0x2
   140006ede:	je     0x140006f17
   140006ee0:	mov    rax,QWORD PTR [rcx]
   140006ee3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140006ee7:	jne    0x140006f44
   140006ee9:	mov    rax,QWORD PTR [rcx+0x8]
   140006eed:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140006ef2:	jne    0x140006f40
   140006ef4:	mov    rax,QWORD PTR [rcx+0x10]
   140006ef8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   140006efd:	jne    0x140006f3c
   140006eff:	mov    rax,QWORD PTR [rcx+0x18]
   140006f03:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140006f08:	jne    0x140006f38
   140006f0a:	add    rcx,0x20
   140006f0e:	dec    r9
   140006f11:	jne    0x140006ee0
   140006f13:	and    r8,0x1f
   140006f17:	mov    r9,r8
   140006f1a:	shr    r9,0x3
   140006f1e:	je     0x140006ebb
   140006f20:	mov    rax,QWORD PTR [rcx]
   140006f23:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140006f27:	jne    0x140006f44
   140006f29:	add    rcx,0x8
   140006f2d:	dec    r9
   140006f30:	jne    0x140006f20
   140006f32:	and    r8,0x7
   140006f36:	jmp    0x140006ebb
   140006f38:	add    rcx,0x8
   140006f3c:	add    rcx,0x8
   140006f40:	add    rcx,0x8
   140006f44:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140006f48:	bswap  rax
   140006f4b:	bswap  rcx
   140006f4e:	cmp    rax,rcx
   140006f51:	sbb    eax,eax
   140006f53:	sbb    eax,0xffffffff
   140006f56:	ret    
   140006f57:	int3   
   140006f58:	int3   
   140006f59:	int3   
   140006f5a:	int3   
   140006f5b:	int3   
   140006f5c:	int3   
   140006f5d:	int3   
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	int3   
   140006f61:	int3   
   140006f62:	int3   
   140006f63:	int3   
   140006f64:	int3   
   140006f65:	int3   
   140006f66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006f70:	mov    r11,rcx
   140006f73:	movzx  edx,dl
   140006f76:	cmp    r8,0x10
   140006f7a:	jb     0x1400070dc
   140006f80:	bt     DWORD PTR [rip+0x36d4c],0x1        # 0x14003dcd4
   140006f88:	jae    0x140006f98
   140006f8a:	push   rdi
   140006f8b:	mov    rdi,rcx
   140006f8e:	mov    eax,edx
   140006f90:	mov    rcx,r8
   140006f93:	rep stos BYTE PTR es:[rdi],al
   140006f95:	pop    rdi
   140006f96:	jmp    0x140007005
   140006f98:	movabs r9,0x101010101010101
   140006fa2:	imul   rdx,r9
   140006fa6:	bt     DWORD PTR [rip+0x36d26],0x2        # 0x14003dcd4
   140006fae:	jb     0x140007050
   140006fb4:	cmp    r8,0x40
   140006fb8:	jb     0x140006fd8
   140006fba:	neg    rcx
   140006fbd:	and    ecx,0x7
   140006fc0:	je     0x140006fc8
   140006fc2:	sub    r8,rcx
   140006fc5:	mov    QWORD PTR [r11],rdx
   140006fc8:	add    rcx,r11
   140006fcb:	mov    r9,r8
   140006fce:	and    r8,0x3f
   140006fd2:	shr    r9,0x6
   140006fd6:	jne    0x140007017
   140006fd8:	mov    r9,r8
   140006fdb:	and    r8,0x7
   140006fdf:	shr    r9,0x3
   140006fe3:	je     0x140006ff6
   140006fe5:	data16 data16 xchg ax,ax
   140006fe9:	nop
   140006fea:	mov    QWORD PTR [rcx],rdx
   140006fed:	add    rcx,0x8
   140006ff1:	dec    r9
   140006ff4:	jne    0x140006fea
   140006ff6:	test   r8,r8
   140006ff9:	je     0x140007005
   140006ffb:	mov    BYTE PTR [rcx],dl
   140006ffd:	inc    rcx
   140007000:	dec    r8
   140007003:	jne    0x140006ffb
   140007005:	mov    rax,r11
   140007008:	ret    
   140007009:	nop    DWORD PTR [rax+0x0]
   140007010:	data16 data16 xchg ax,ax
   140007014:	data16 xchg ax,ax
   140007017:	mov    QWORD PTR [rcx],rdx
   14000701a:	mov    QWORD PTR [rcx+0x8],rdx
   14000701e:	mov    QWORD PTR [rcx+0x10],rdx
   140007022:	add    rcx,0x40
   140007026:	mov    QWORD PTR [rcx-0x28],rdx
   14000702a:	mov    QWORD PTR [rcx-0x20],rdx
   14000702e:	dec    r9
   140007031:	mov    QWORD PTR [rcx-0x18],rdx
   140007035:	mov    QWORD PTR [rcx-0x10],rdx
   140007039:	mov    QWORD PTR [rcx-0x8],rdx
   14000703d:	jne    0x140007017
   14000703f:	jmp    0x140006fd8
   140007041:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007050:	movq   xmm0,rdx
   140007055:	punpcklbw xmm0,xmm0
   140007059:	test   cl,0xf
   14000705c:	je     0x140007074
   14000705e:	movups XMMWORD PTR [rcx],xmm0
   140007061:	mov    rax,rcx
   140007064:	and    rax,0xf
   140007068:	add    rcx,0x10
   14000706c:	sub    rcx,rax
   14000706f:	lea    r8,[rax+r8*1-0x10]
   140007074:	mov    r9,r8
   140007077:	shr    r9,0x7
   14000707b:	je     0x1400070af
   14000707d:	jmp    0x140007080
   14000707f:	nop
   140007080:	movaps XMMWORD PTR [rcx],xmm0
   140007083:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140007087:	add    rcx,0x80
   14000708e:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140007092:	movaps XMMWORD PTR [rcx-0x50],xmm0
   140007096:	dec    r9
   140007099:	movaps XMMWORD PTR [rcx-0x40],xmm0
   14000709d:	movaps XMMWORD PTR [rcx-0x30],xmm0
   1400070a1:	movaps XMMWORD PTR [rcx-0x20],xmm0
   1400070a5:	movaps XMMWORD PTR [rcx-0x10],xmm0
   1400070a9:	jne    0x140007080
   1400070ab:	and    r8,0x7f
   1400070af:	mov    r9,r8
   1400070b2:	shr    r9,0x4
   1400070b6:	je     0x1400070cc
   1400070b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400070c0:	movaps XMMWORD PTR [rcx],xmm0
   1400070c3:	add    rcx,0x10
   1400070c7:	dec    r9
   1400070ca:	jne    0x1400070c0
   1400070cc:	and    r8,0xf
   1400070d0:	je     0x1400070d8
   1400070d2:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   1400070d8:	mov    rax,r11
   1400070db:	ret    
   1400070dc:	movabs r9,0x101010101010101
   1400070e6:	imul   rdx,r9
   1400070ea:	lea    r9,[rip+0xffffffffffff8f0f]        # 0x140000000
   1400070f1:	mov    eax,DWORD PTR [r9+r8*4+0x7105]
   1400070f9:	add    r9,rax
   1400070fc:	add    rcx,r8
   1400070ff:	mov    rax,r11
   140007102:	jmp    r9
   140007105:	pop    rsi
   140007106:	jno    0x140007108
   140007108:	add    BYTE PTR [rbx+0x71],bl
   14000710b:	add    BYTE PTR [rax],al
   14000710d:	ins    BYTE PTR es:[rdi],dx
   14000710e:	jno    0x140007110
   140007110:	add    BYTE PTR [rdi+0x71],dl
   140007113:	add    BYTE PTR [rax],al
   140007115:	xor    BYTE PTR [rcx+0x0],0x0
   140007119:	jne    0x14000718c
   14000711b:	add    BYTE PTR [rax],al
   14000711d:	imul   esi,DWORD PTR [rcx+0x0],0x715400
   140007124:	add    BYTE PTR [rbp-0x72ffff8f],dl
   14000712a:	jno    0x14000712c
   14000712c:	add    BYTE PTR [rcx+rsi*2+0x715f0000],al
   140007133:	add    BYTE PTR [rax],al
   140007135:	jl     0x1400071a8
   140007137:	add    BYTE PTR [rax],al
   140007139:	jno    0x1400071ac
   14000713b:	add    BYTE PTR [rax],al
   14000713d:	gs jno 0x140007140
   140007140:	add    BYTE PTR [rax+0x71],dl
   140007143:	add    BYTE PTR [rax],al
   140007145:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007150:	mov    QWORD PTR [rcx-0xf],rdx
   140007154:	mov    DWORD PTR [rcx-0x7],edx
   140007157:	mov    WORD PTR [rcx-0x3],dx
   14000715b:	mov    BYTE PTR [rcx-0x1],dl
   14000715e:	ret    
   14000715f:	mov    QWORD PTR [rcx-0xb],rdx
   140007163:	jmp    0x140007157
   140007165:	mov    QWORD PTR [rcx-0xe],rdx
   140007169:	mov    DWORD PTR [rcx-0x6],edx
   14000716c:	mov    WORD PTR [rcx-0x2],dx
   140007170:	ret    
   140007171:	mov    QWORD PTR [rcx-0xd],rdx
   140007175:	mov    DWORD PTR [rcx-0x5],edx
   140007178:	mov    BYTE PTR [rcx-0x1],dl
   14000717b:	ret    
   14000717c:	mov    QWORD PTR [rcx-0xc],rdx
   140007180:	mov    DWORD PTR [rcx-0x4],edx
   140007183:	ret    
   140007184:	mov    QWORD PTR [rcx-0xa],rdx
   140007188:	mov    WORD PTR [rcx-0x2],dx
   14000718c:	ret    
   14000718d:	mov    QWORD PTR [rcx-0x9],rdx
   140007191:	mov    BYTE PTR [rcx-0x1],dl
   140007194:	ret    
   140007195:	mov    QWORD PTR [rcx-0x8],rdx
   140007199:	ret    
   14000719a:	int3   
   14000719b:	int3   
   14000719c:	lea    rax,[rip+0x2788d]        # 0x14002ea30
   1400071a3:	mov    QWORD PTR [rcx],rax
   1400071a6:	mov    rax,rcx
   1400071a9:	ret    
   1400071aa:	int3   
   1400071ab:	int3   
   1400071ac:	lea    rax,[rip+0x2787d]        # 0x14002ea30
   1400071b3:	mov    QWORD PTR [rcx],rax
   1400071b6:	jmp    0x14000c6a8
   1400071bb:	int3   
   1400071bc:	mov    rax,rcx
   1400071bf:	ret    
   1400071c0:	sub    rsp,0x28
   1400071c4:	mov    rax,rdx
   1400071c7:	lea    rdx,[rcx+0x11]
   1400071cb:	lea    rcx,[rax+0x11]
   1400071cf:	call   0x14000c3b0
   1400071d4:	test   eax,eax
   1400071d6:	sete   al
   1400071d9:	add    rsp,0x28
   1400071dd:	ret    
   1400071de:	int3   
   1400071df:	int3   
   1400071e0:	sub    rsp,0x28
   1400071e4:	mov    rax,rdx
   1400071e7:	lea    rdx,[rcx+0x11]
   1400071eb:	lea    rcx,[rax+0x11]
   1400071ef:	call   0x14000c3b0
   1400071f4:	test   eax,eax
   1400071f6:	setne  al
   1400071f9:	add    rsp,0x28
   1400071fd:	ret    
   1400071fe:	int3   
   1400071ff:	int3   
   140007200:	mov    QWORD PTR [rsp+0x8],rbx
   140007205:	push   rdi
   140007206:	sub    rsp,0x20
   14000720a:	lea    rax,[rip+0x2781f]        # 0x14002ea30
   140007211:	mov    ebx,edx
   140007213:	mov    rdi,rcx
   140007216:	mov    QWORD PTR [rcx],rax
   140007219:	call   0x14000c6a8
   14000721e:	test   bl,0x1
   140007221:	je     0x14000722b
   140007223:	mov    rcx,rdi
   140007226:	call   0x140005778
   14000722b:	mov    rax,rdi
   14000722e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007233:	add    rsp,0x20
   140007237:	pop    rdi
   140007238:	ret    
   140007239:	int3   
   14000723a:	int3   
   14000723b:	int3   
   14000723c:	jmp    0x14000c54c
   140007241:	int3   
   140007242:	int3   
   140007243:	int3   
   140007244:	jmp    0x14000c714
   140007249:	int3   
   14000724a:	int3   
   14000724b:	int3   
   14000724c:	sub    rsp,0x28
   140007250:	mov    rax,rdx
   140007253:	lea    rdx,[rcx+0x11]
   140007257:	lea    rcx,[rax+0x11]
   14000725b:	call   0x14000c3b0
   140007260:	test   eax,eax
   140007262:	setg   al
   140007265:	add    rsp,0x28
   140007269:	ret    
   14000726a:	int3   
   14000726b:	int3   
   14000726c:	jmp    0x14000c418
   140007271:	int3   
   140007272:	int3   
   140007273:	int3   
   140007274:	lea    rax,[rcx+0x10]
   140007278:	ret    
   140007279:	int3   
   14000727a:	int3   
   14000727b:	int3   
   14000727c:	jmp    0x140007294
   140007281:	int3   
   140007282:	int3   
   140007283:	int3   
   140007284:	mov    eax,DWORD PTR [rip+0x369c6]        # 0x14003dc50
   14000728a:	mov    DWORD PTR [rip+0x369c0],ecx        # 0x14003dc50
   140007290:	ret    
   140007291:	int3   
   140007292:	int3   
   140007293:	int3   
   140007294:	lea    rax,[rip+0x6091]        # 0x14000d32c
   14000729b:	lea    rcx,[rip+0x556e]        # 0x14000c810
   1400072a2:	mov    QWORD PTR [rip+0x34f3f],rax        # 0x14003c1e8
   1400072a9:	lea    rax,[rip+0x611c]        # 0x14000d3cc
   1400072b0:	mov    QWORD PTR [rip+0x34f29],rcx        # 0x14003c1e0
   1400072b7:	mov    QWORD PTR [rip+0x34f32],rax        # 0x14003c1f0
   1400072be:	lea    rax,[rip+0x614f]        # 0x14000d414
   1400072c5:	mov    QWORD PTR [rip+0x34f3c],rcx        # 0x14003c208
   1400072cc:	mov    QWORD PTR [rip+0x34f25],rax        # 0x14003c1f8
   1400072d3:	lea    rax,[rip+0x61c2]        # 0x14000d49c
   1400072da:	mov    QWORD PTR [rip+0x34f1f],rax        # 0x14003c200
   1400072e1:	lea    rax,[rip+0x554c]        # 0x14000c834
   1400072e8:	mov    QWORD PTR [rip+0x34f21],rax        # 0x14003c210
   1400072ef:	lea    rax,[rip+0x60de]        # 0x14000d3d4
   1400072f6:	mov    QWORD PTR [rip+0x34f1b],rax        # 0x14003c218
   1400072fd:	lea    rax,[rip+0x6030]        # 0x14000d334
   140007304:	mov    QWORD PTR [rip+0x34f15],rax        # 0x14003c220
   14000730b:	lea    rax,[rip+0x610a]        # 0x14000d41c
   140007312:	mov    QWORD PTR [rip+0x34f0f],rax        # 0x14003c228
   140007319:	ret    
   14000731a:	int3   
   14000731b:	int3   
   14000731c:	sub    rsp,0x28
   140007320:	call   0x14000e27c
   140007325:	add    rsp,0x28
   140007329:	jmp    0x140007330
   14000732e:	int3   
   14000732f:	int3   
   140007330:	mov    QWORD PTR [rsp+0x10],rbx
   140007335:	mov    QWORD PTR [rsp+0x18],rsi
   14000733a:	push   rdi
   14000733b:	sub    rsp,0x30
   14000733f:	call   0x14000e7a8
   140007344:	movzx  esi,ax
   140007347:	mov    ecx,0x2
   14000734c:	call   0x14000e234
   140007351:	mov    eax,0x5a4d
   140007356:	lea    rdi,[rip+0xffffffffffff8ca3]        # 0x140000000
   14000735d:	cmp    WORD PTR [rip+0xffffffffffff8c9c],ax        # 0x140000000
   140007364:	je     0x14000736a
   140007366:	xor    ebx,ebx
   140007368:	jmp    0x14000739b
   14000736a:	movsxd rax,DWORD PTR [rip+0xffffffffffff8ccb]        # 0x14000003c
   140007371:	add    rax,rdi
   140007374:	cmp    DWORD PTR [rax],0x4550
   14000737a:	jne    0x140007366
   14000737c:	mov    ecx,0x20b
   140007381:	cmp    WORD PTR [rax+0x18],cx
   140007385:	jne    0x140007366
   140007387:	xor    ebx,ebx
   140007389:	cmp    DWORD PTR [rax+0x84],0xe
   140007390:	jbe    0x14000739b
   140007392:	cmp    DWORD PTR [rax+0xf8],ebx
   140007398:	setne  bl
   14000739b:	mov    DWORD PTR [rsp+0x40],ebx
   14000739f:	call   0x14000d788
   1400073a4:	test   eax,eax
   1400073a6:	jne    0x1400073ca
   1400073a8:	cmp    DWORD PTR [rip+0x372a9],0x1        # 0x14003e658
   1400073af:	jne    0x1400073b6
   1400073b1:	call   0x14000df50
   1400073b6:	mov    ecx,0x1c
   1400073bb:	call   0x14000dfc4
   1400073c0:	mov    ecx,0xff
   1400073c5:	call   0x14000805c
   1400073ca:	call   0x14000a558
   1400073cf:	test   eax,eax
   1400073d1:	jne    0x1400073f5
   1400073d3:	cmp    DWORD PTR [rip+0x3727e],0x1        # 0x14003e658
   1400073da:	jne    0x1400073e1
   1400073dc:	call   0x14000df50
   1400073e1:	mov    ecx,0x10
   1400073e6:	call   0x14000dfc4
   1400073eb:	mov    ecx,0xff
   1400073f0:	call   0x14000805c
   1400073f5:	call   0x14000e328
   1400073fa:	nop
   1400073fb:	call   0x14000d7b4
   140007400:	test   eax,eax
   140007402:	jns    0x14000740e
   140007404:	mov    ecx,0x1b
   140007409:	call   0x140007508
   14000740e:	call   QWORD PTR [rip+0x24d2c]        # 0x14002c140
   140007414:	mov    QWORD PTR [rip+0x38cf5],rax        # 0x140040110
   14000741b:	call   0x14000e398
   140007420:	mov    QWORD PTR [rip+0x36831],rax        # 0x14003dc58
   140007427:	call   0x14000db60
   14000742c:	test   eax,eax
   14000742e:	jns    0x14000743a
   140007430:	mov    ecx,0x8
   140007435:	call   0x1400081bc
   14000743a:	call   0x14000de1c
   14000743f:	test   eax,eax
   140007441:	jns    0x14000744d
   140007443:	mov    ecx,0x9
   140007448:	call   0x1400081bc
   14000744d:	mov    ecx,0x1
   140007452:	call   0x140008204
   140007457:	test   eax,eax
   140007459:	je     0x140007462
   14000745b:	mov    ecx,eax
   14000745d:	call   0x1400081bc
   140007462:	call   0x14000ed5c
   140007467:	movzx  r9d,si
   14000746b:	mov    r8,rax
   14000746e:	xor    edx,edx
   140007470:	mov    rcx,rdi
   140007473:	call   0x140004ca0
   140007478:	mov    edi,eax
   14000747a:	mov    DWORD PTR [rsp+0x20],eax
   14000747e:	test   ebx,ebx
   140007480:	jne    0x140007489
   140007482:	mov    ecx,eax
   140007484:	call   0x1400085bc
   140007489:	call   0x1400081f4
   14000748e:	jmp    0x1400074a7
   140007490:	mov    edi,eax
   140007492:	cmp    DWORD PTR [rsp+0x40],0x0
   140007497:	jne    0x1400074a1
   140007499:	mov    ecx,eax
   14000749b:	call   0x14000829c
   1400074a0:	int3   
   1400074a1:	call   0x1400081e4
   1400074a6:	nop
   1400074a7:	mov    eax,edi
   1400074a9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400074ae:	mov    rsi,QWORD PTR [rsp+0x50]
   1400074b3:	add    rsp,0x30
   1400074b7:	pop    rdi
   1400074b8:	ret    
   1400074b9:	int3   
   1400074ba:	int3   
   1400074bb:	int3   
   1400074bc:	mov    eax,0x5a4d
   1400074c1:	cmp    WORD PTR [rip+0xffffffffffff8b38],ax        # 0x140000000
   1400074c8:	je     0x1400074cd
   1400074ca:	xor    eax,eax
   1400074cc:	ret    
   1400074cd:	movsxd rcx,DWORD PTR [rip+0xffffffffffff8b68]        # 0x14000003c
   1400074d4:	lea    rax,[rip+0xffffffffffff8b25]        # 0x140000000
   1400074db:	add    rcx,rax
   1400074de:	cmp    DWORD PTR [rcx],0x4550
   1400074e4:	jne    0x1400074ca
   1400074e6:	mov    eax,0x20b
   1400074eb:	cmp    WORD PTR [rcx+0x18],ax
   1400074ef:	jne    0x1400074ca
   1400074f1:	xor    eax,eax
   1400074f3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400074fa:	jbe    0x140007505
   1400074fc:	cmp    DWORD PTR [rcx+0xf8],eax
   140007502:	setne  al
   140007505:	ret    
   140007506:	int3   
   140007507:	int3   
   140007508:	rex push rbx
   14000750a:	sub    rsp,0x20
   14000750e:	cmp    DWORD PTR [rip+0x37143],0x1        # 0x14003e658
   140007515:	mov    ebx,ecx
   140007517:	jne    0x14000751e
   140007519:	call   0x14000df50
   14000751e:	mov    ecx,ebx
   140007520:	call   0x14000dfc4
   140007525:	mov    ecx,0xff
   14000752a:	add    rsp,0x20
   14000752e:	pop    rbx
   14000752f:	jmp    0x14000805c
   140007534:	int3   
   140007535:	int3   
   140007536:	int3   
   140007537:	int3   
   140007538:	int3   
   140007539:	int3   
   14000753a:	int3   
   14000753b:	int3   
   14000753c:	int3   
   14000753d:	int3   
   14000753e:	int3   
   14000753f:	int3   
   140007540:	int3   
   140007541:	int3   
   140007542:	int3   
   140007543:	int3   
   140007544:	int3   
   140007545:	int3   
   140007546:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007550:	mov    rax,rcx
   140007553:	neg    rcx
   140007556:	test   rax,0x7
   14000755c:	je     0x14000756d
   14000755e:	xchg   ax,ax
   140007560:	mov    dl,BYTE PTR [rax]
   140007562:	inc    rax
   140007565:	test   dl,dl
   140007567:	je     0x1400075c8
   140007569:	test   al,0x7
   14000756b:	jne    0x140007560
   14000756d:	movabs r8,0x7efefefefefefeff
   140007577:	movabs r11,0x8101010101010100
   140007581:	mov    rdx,QWORD PTR [rax]
   140007584:	mov    r9,r8
   140007587:	add    rax,0x8
   14000758b:	add    r9,rdx
   14000758e:	not    rdx
   140007591:	xor    rdx,r9
   140007594:	and    rdx,r11
   140007597:	je     0x140007581
   140007599:	mov    rdx,QWORD PTR [rax-0x8]
   14000759d:	test   dl,dl
   14000759f:	je     0x1400075f2
   1400075a1:	test   dh,dh
   1400075a3:	je     0x1400075ec
   1400075a5:	shr    rdx,0x10
   1400075a9:	test   dl,dl
   1400075ab:	je     0x1400075e6
   1400075ad:	test   dh,dh
   1400075af:	je     0x1400075e0
   1400075b1:	shr    rdx,0x10
   1400075b5:	test   dl,dl
   1400075b7:	je     0x1400075da
   1400075b9:	test   dh,dh
   1400075bb:	je     0x1400075d4
   1400075bd:	shr    edx,0x10
   1400075c0:	test   dl,dl
   1400075c2:	je     0x1400075ce
   1400075c4:	test   dh,dh
   1400075c6:	jne    0x140007581
   1400075c8:	lea    rax,[rcx+rax*1-0x1]
   1400075cd:	ret    
   1400075ce:	lea    rax,[rcx+rax*1-0x2]
   1400075d3:	ret    
   1400075d4:	lea    rax,[rcx+rax*1-0x3]
   1400075d9:	ret    
   1400075da:	lea    rax,[rcx+rax*1-0x4]
   1400075df:	ret    
   1400075e0:	lea    rax,[rcx+rax*1-0x5]
   1400075e5:	ret    
   1400075e6:	lea    rax,[rcx+rax*1-0x6]
   1400075eb:	ret    
   1400075ec:	lea    rax,[rcx+rax*1-0x7]
   1400075f1:	ret    
   1400075f2:	lea    rax,[rcx+rax*1-0x8]
   1400075f7:	ret    
   1400075f8:	rex push rbx
   1400075fa:	sub    rsp,0x20
   1400075fe:	mov    rbx,rcx
   140007601:	call   0x14000772c
   140007606:	lea    rax,[rip+0x2749b]        # 0x14002eaa8
   14000760d:	mov    QWORD PTR [rbx],rax
   140007610:	mov    rax,rbx
   140007613:	add    rsp,0x20
   140007617:	pop    rbx
   140007618:	ret    
   140007619:	int3   
   14000761a:	int3   
   14000761b:	int3   
   14000761c:	rex push rbx
   14000761e:	sub    rsp,0x20
   140007622:	mov    rbx,rcx
   140007625:	call   0x1400076b4
   14000762a:	lea    rax,[rip+0x27477]        # 0x14002eaa8
   140007631:	mov    QWORD PTR [rbx],rax
   140007634:	mov    rax,rbx
   140007637:	add    rsp,0x20
   14000763b:	pop    rbx
   14000763c:	ret    
   14000763d:	int3   
   14000763e:	int3   
   14000763f:	int3   
   140007640:	rex push rbx
   140007642:	sub    rsp,0x20
   140007646:	mov    rbx,rcx
   140007649:	call   0x14000772c
   14000764e:	lea    rax,[rip+0x27423]        # 0x14002ea78
   140007655:	mov    QWORD PTR [rbx],rax
   140007658:	mov    rax,rbx
   14000765b:	add    rsp,0x20
   14000765f:	pop    rbx
   140007660:	ret    
   140007661:	int3   
   140007662:	int3   
   140007663:	int3   
   140007664:	mov    QWORD PTR [rsp+0x10],rdx
   140007669:	push   rbx
   14000766a:	sub    rsp,0x20
   14000766e:	lea    rdx,[rsp+0x38]
   140007673:	mov    rbx,rcx
   140007676:	call   0x1400076e0
   14000767b:	lea    rax,[rip+0x273f6]        # 0x14002ea78
   140007682:	mov    QWORD PTR [rbx],rax
   140007685:	mov    rax,rbx
   140007688:	add    rsp,0x20
   14000768c:	pop    rbx
   14000768d:	ret    
   14000768e:	int3   
   14000768f:	int3   
   140007690:	rex push rbx
   140007692:	sub    rsp,0x20
   140007696:	mov    rbx,rcx
   140007699:	call   0x14000772c
   14000769e:	lea    rax,[rip+0x273eb]        # 0x14002ea90
   1400076a5:	mov    QWORD PTR [rbx],rax
   1400076a8:	mov    rax,rbx
   1400076ab:	add    rsp,0x20
   1400076af:	pop    rbx
   1400076b0:	ret    
   1400076b1:	int3   
   1400076b2:	int3   
   1400076b3:	int3   
   1400076b4:	mov    QWORD PTR [rsp+0x10],rdx
   1400076b9:	push   rbx
   1400076ba:	sub    rsp,0x20
   1400076be:	lea    rdx,[rsp+0x38]
   1400076c3:	mov    rbx,rcx
   1400076c6:	call   0x1400076e0
   1400076cb:	lea    rax,[rip+0x273be]        # 0x14002ea90
   1400076d2:	mov    QWORD PTR [rbx],rax
   1400076d5:	mov    rax,rbx
   1400076d8:	add    rsp,0x20
   1400076dc:	pop    rbx
   1400076dd:	ret    
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	rex push rbx
   1400076e2:	sub    rsp,0x20
   1400076e6:	and    QWORD PTR [rcx+0x8],0x0
   1400076eb:	lea    rax,[rip+0x27356]        # 0x14002ea48
   1400076f2:	mov    BYTE PTR [rcx+0x10],0x0
   1400076f6:	mov    QWORD PTR [rcx],rax
   1400076f9:	mov    rdx,QWORD PTR [rdx]
   1400076fc:	mov    rbx,rcx
   1400076ff:	call   0x1400078e4
   140007704:	mov    rax,rbx
   140007707:	add    rsp,0x20
   14000770b:	pop    rbx
   14000770c:	ret    
   14000770d:	int3   
   14000770e:	int3   
   14000770f:	int3   
   140007710:	lea    rax,[rip+0x27331]        # 0x14002ea48
   140007717:	mov    QWORD PTR [rcx],rax
   14000771a:	mov    rax,QWORD PTR [rdx]
   14000771d:	mov    BYTE PTR [rcx+0x10],0x0
   140007721:	mov    QWORD PTR [rcx+0x8],rax
   140007725:	mov    rax,rcx
   140007728:	ret    
   140007729:	int3   
   14000772a:	int3   
   14000772b:	int3   
   14000772c:	rex push rbx
   14000772e:	sub    rsp,0x20
   140007732:	and    QWORD PTR [rcx+0x8],0x0
   140007737:	lea    rax,[rip+0x2730a]        # 0x14002ea48
   14000773e:	mov    rbx,rcx
   140007741:	mov    QWORD PTR [rcx],rax
   140007744:	mov    BYTE PTR [rcx+0x10],0x0
   140007748:	call   0x1400077b0
   14000774d:	mov    rax,rbx
   140007750:	add    rsp,0x20
   140007754:	pop    rbx
   140007755:	ret    
   140007756:	int3   
   140007757:	int3   
   140007758:	and    QWORD PTR [rcx+0x8],0x0
   14000775d:	lea    rax,[rip+0x272e4]        # 0x14002ea48
   140007764:	mov    BYTE PTR [rcx+0x10],0x0
   140007768:	mov    QWORD PTR [rcx],rax
   14000776b:	mov    rax,rcx
   14000776e:	ret    
   14000776f:	int3   
   140007770:	lea    rax,[rip+0x272d1]        # 0x14002ea48
   140007777:	mov    QWORD PTR [rcx],rax
   14000777a:	jmp    0x140007940
   14000777f:	int3   
   140007780:	lea    rax,[rip+0x272c1]        # 0x14002ea48
   140007787:	mov    QWORD PTR [rcx],rax
   14000778a:	jmp    0x140007940
   14000778f:	int3   
   140007790:	lea    rax,[rip+0x272b1]        # 0x14002ea48
   140007797:	mov    QWORD PTR [rcx],rax
   14000779a:	jmp    0x140007940
   14000779f:	int3   
   1400077a0:	lea    rax,[rip+0x272a1]        # 0x14002ea48
   1400077a7:	mov    QWORD PTR [rcx],rax
   1400077aa:	jmp    0x140007940
   1400077af:	int3   
   1400077b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400077b5:	push   rdi
   1400077b6:	sub    rsp,0x20
   1400077ba:	mov    rdi,rdx
   1400077bd:	mov    rbx,rcx
   1400077c0:	cmp    rcx,rdx
   1400077c3:	je     0x1400077e6
   1400077c5:	call   0x140007940
   1400077ca:	cmp    BYTE PTR [rdi+0x10],0x0
   1400077ce:	je     0x1400077de
   1400077d0:	mov    rdx,QWORD PTR [rdi+0x8]
   1400077d4:	mov    rcx,rbx
   1400077d7:	call   0x1400078e4
   1400077dc:	jmp    0x1400077e6
   1400077de:	mov    rax,QWORD PTR [rdi+0x8]
   1400077e2:	mov    QWORD PTR [rbx+0x8],rax
   1400077e6:	mov    rax,rbx
   1400077e9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400077ee:	add    rsp,0x20
   1400077f2:	pop    rdi
   1400077f3:	ret    
   1400077f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400077f9:	push   rdi
   1400077fa:	sub    rsp,0x20
   1400077fe:	lea    rax,[rip+0x27243]        # 0x14002ea48
   140007805:	mov    ebx,edx
   140007807:	mov    rdi,rcx
   14000780a:	mov    QWORD PTR [rcx],rax
   14000780d:	call   0x140007940
   140007812:	test   bl,0x1
   140007815:	je     0x14000781f
   140007817:	mov    rcx,rdi
   14000781a:	call   0x140005778
   14000781f:	mov    rax,rdi
   140007822:	mov    rbx,QWORD PTR [rsp+0x30]
   140007827:	add    rsp,0x20
   14000782b:	pop    rdi
   14000782c:	ret    
   14000782d:	int3   
   14000782e:	int3   
   14000782f:	int3   
   140007830:	mov    QWORD PTR [rsp+0x8],rbx
   140007835:	push   rdi
   140007836:	sub    rsp,0x20
   14000783a:	lea    rax,[rip+0x27207]        # 0x14002ea48
   140007841:	mov    ebx,edx
   140007843:	mov    rdi,rcx
   140007846:	mov    QWORD PTR [rcx],rax
   140007849:	call   0x140007940
   14000784e:	test   bl,0x1
   140007851:	je     0x14000785b
   140007853:	mov    rcx,rdi
   140007856:	call   0x140005778
   14000785b:	mov    rax,rdi
   14000785e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007863:	add    rsp,0x20
   140007867:	pop    rdi
   140007868:	ret    
   140007869:	int3   
   14000786a:	int3   
   14000786b:	int3   
   14000786c:	mov    QWORD PTR [rsp+0x8],rbx
   140007871:	push   rdi
   140007872:	sub    rsp,0x20
   140007876:	lea    rax,[rip+0x271cb]        # 0x14002ea48
   14000787d:	mov    ebx,edx
   14000787f:	mov    rdi,rcx
   140007882:	mov    QWORD PTR [rcx],rax
   140007885:	call   0x140007940
   14000788a:	test   bl,0x1
   14000788d:	je     0x140007897
   14000788f:	mov    rcx,rdi
   140007892:	call   0x140005778
   140007897:	mov    rax,rdi
   14000789a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000789f:	add    rsp,0x20
   1400078a3:	pop    rdi
   1400078a4:	ret    
   1400078a5:	int3   
   1400078a6:	int3   
   1400078a7:	int3   
   1400078a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400078ad:	push   rdi
   1400078ae:	sub    rsp,0x20
   1400078b2:	lea    rax,[rip+0x2718f]        # 0x14002ea48
   1400078b9:	mov    ebx,edx
   1400078bb:	mov    rdi,rcx
   1400078be:	mov    QWORD PTR [rcx],rax
   1400078c1:	call   0x140007940
   1400078c6:	test   bl,0x1
   1400078c9:	je     0x1400078d3
   1400078cb:	mov    rcx,rdi
   1400078ce:	call   0x140005778
   1400078d3:	mov    rax,rdi
   1400078d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400078db:	add    rsp,0x20
   1400078df:	pop    rdi
   1400078e0:	ret    
   1400078e1:	int3   
   1400078e2:	int3   
   1400078e3:	int3   
   1400078e4:	test   rdx,rdx
   1400078e7:	je     0x14000793d
   1400078e9:	mov    QWORD PTR [rsp+0x8],rbx
   1400078ee:	mov    QWORD PTR [rsp+0x10],rsi
   1400078f3:	push   rdi
   1400078f4:	sub    rsp,0x20
   1400078f8:	mov    rsi,rcx
   1400078fb:	mov    rcx,rdx
   1400078fe:	mov    rbx,rdx
   140007901:	call   0x140007550
   140007906:	mov    rdi,rax
   140007909:	lea    rcx,[rax+0x1]
   14000790d:	call   0x140007c64
   140007912:	mov    QWORD PTR [rsi+0x8],rax
   140007916:	test   rax,rax
   140007919:	je     0x14000792e
   14000791b:	lea    rdx,[rdi+0x1]
   14000791f:	mov    r8,rbx
   140007922:	mov    rcx,rax
   140007925:	call   0x14000edd8
   14000792a:	mov    BYTE PTR [rsi+0x10],0x1
   14000792e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007933:	mov    rsi,QWORD PTR [rsp+0x38]
   140007938:	add    rsp,0x20
   14000793c:	pop    rdi
   14000793d:	ret    
   14000793e:	int3   
   14000793f:	int3   
   140007940:	rex push rbx
   140007942:	sub    rsp,0x20
   140007946:	cmp    BYTE PTR [rcx+0x10],0x0
   14000794a:	mov    rbx,rcx
   14000794d:	je     0x140007958
   14000794f:	mov    rcx,QWORD PTR [rcx+0x8]
   140007953:	call   0x140007dc0
   140007958:	and    QWORD PTR [rbx+0x8],0x0
   14000795d:	mov    BYTE PTR [rbx+0x10],0x0
   140007961:	add    rsp,0x20
   140007965:	pop    rbx
   140007966:	ret    
   140007967:	int3   
   140007968:	cmp    QWORD PTR [rcx+0x8],0x0
   14000796d:	lea    rax,[rip+0x270e4]        # 0x14002ea58
   140007974:	cmovne rax,QWORD PTR [rcx+0x8]
   140007979:	ret    
   14000797a:	int3   
   14000797b:	int3   
   14000797c:	mov    eax,DWORD PTR [rip+0x346be]        # 0x14003c040
   140007982:	mov    r8d,edx
   140007985:	and    ecx,edx
   140007987:	not    r8d
   14000798a:	and    r8d,eax
   14000798d:	or     r8d,ecx
   140007990:	mov    DWORD PTR [rip+0x346a9],r8d        # 0x14003c040
   140007997:	ret    
   140007998:	sub    rsp,0x28
   14000799c:	call   0x14000ee50
   1400079a1:	test   rax,rax
   1400079a4:	je     0x1400079b0
   1400079a6:	mov    ecx,0x16
   1400079ab:	call   0x14000ef28
   1400079b0:	test   BYTE PTR [rip+0x34689],0x2        # 0x14003c040
   1400079b7:	je     0x1400079e2
   1400079b9:	mov    ecx,0x17
   1400079be:	call   0x14002a60c
   1400079c3:	test   eax,eax
   1400079c5:	je     0x1400079ce
   1400079c7:	mov    ecx,0x7
   1400079cc:	int    0x29
   1400079ce:	mov    r8d,0x1
   1400079d4:	mov    edx,0x40000015
   1400079d9:	lea    ecx,[r8+0x2]
   1400079dd:	call   0x140008be4
   1400079e2:	mov    ecx,0x3
   1400079e7:	call   0x14000829c
   1400079ec:	int3   
   1400079ed:	int3   
   1400079ee:	int3   
   1400079ef:	int3   
   1400079f0:	rex push rbx
   1400079f2:	push   rbp
   1400079f3:	push   rsi
   1400079f4:	push   rdi
   1400079f5:	push   r12
   1400079f7:	push   r14
   1400079f9:	push   r15
   1400079fb:	sub    rsp,0xd0
   140007a02:	mov    rax,QWORD PTR [rip+0x347c7]        # 0x14003c1d0
   140007a09:	xor    rax,rsp
   140007a0c:	mov    QWORD PTR [rsp+0xc0],rax
   140007a14:	mov    rbx,QWORD PTR [rsp+0x130]
   140007a1c:	mov    esi,r9d
   140007a1f:	mov    rbp,r8
   140007a22:	mov    r12,rcx
   140007a25:	cmp    edx,0x1
   140007a28:	jne    0x140007b2c
   140007a2e:	lea    r9,[rsp+0x40]
   140007a33:	mov    r8d,esi
   140007a36:	mov    rdx,rbp
   140007a39:	lea    rdi,[rsp+0x40]
   140007a3e:	xor    r14d,r14d
   140007a41:	mov    DWORD PTR [rsp+0x20],0x80
   140007a49:	call   0x14000f66c
   140007a4e:	mov    r15d,eax
   140007a51:	test   eax,eax
   140007a53:	jne    0x140007ab4
   140007a55:	call   QWORD PTR [rip+0x246f5]        # 0x14002c150
   140007a5b:	cmp    eax,0x7a
   140007a5e:	jne    0x140007adc
   140007a60:	and    DWORD PTR [rsp+0x20],r14d
   140007a65:	xor    r9d,r9d
   140007a68:	mov    r8d,esi
   140007a6b:	mov    rdx,rbp
   140007a6e:	mov    rcx,r12
   140007a71:	call   0x14000f66c
   140007a76:	movsxd r15,eax
   140007a79:	test   eax,eax
   140007a7b:	je     0x140007adc
   140007a7d:	lea    edx,[r14+0x1]
   140007a81:	mov    rcx,r15
   140007a84:	call   0x140008604
   140007a89:	mov    rdi,rax
   140007a8c:	test   rax,rax
   140007a8f:	je     0x140007adc
   140007a91:	mov    r9,rax
   140007a94:	mov    r8d,esi
   140007a97:	mov    rdx,rbp
   140007a9a:	mov    rcx,r12
   140007a9d:	mov    r14d,0x1
   140007aa3:	mov    DWORD PTR [rsp+0x20],r15d
   140007aa8:	call   0x14000f66c
   140007aad:	mov    r15d,eax
   140007ab0:	test   eax,eax
   140007ab2:	je     0x140007ad4
   140007ab4:	movsxd rsi,r15d
   140007ab7:	mov    edx,0x1
   140007abc:	mov    rcx,rsi
   140007abf:	call   0x140008604
   140007ac4:	mov    rcx,rax
   140007ac7:	mov    QWORD PTR [rbx],rax
   140007aca:	test   rax,rax
   140007acd:	jne    0x140007b01
   140007acf:	test   r14d,r14d
   140007ad2:	je     0x140007adc
   140007ad4:	mov    rcx,rdi
   140007ad7:	call   0x140007dc0
   140007adc:	or     eax,0xffffffff
   140007adf:	mov    rcx,QWORD PTR [rsp+0xc0]
   140007ae7:	xor    rcx,rsp
   140007aea:	call   0x14000c380
   140007aef:	add    rsp,0xd0
   140007af6:	pop    r15
   140007af8:	pop    r14
   140007afa:	pop    r12
   140007afc:	pop    rdi
   140007afd:	pop    rsi
   140007afe:	pop    rbp
   140007aff:	pop    rbx
   140007b00:	ret    
   140007b01:	lea    eax,[r15-0x1]
   140007b05:	mov    r8,rdi
   140007b08:	mov    rdx,rsi
   140007b0b:	movsxd r9,eax
   140007b0e:	call   0x14000f424
   140007b13:	test   eax,eax
   140007b15:	jne    0x140007bbf
   140007b1b:	test   r14d,r14d
   140007b1e:	je     0x140007b28
   140007b20:	mov    rcx,rdi
   140007b23:	call   0x140007dc0
   140007b28:	xor    eax,eax
   140007b2a:	jmp    0x140007adf
   140007b2c:	mov    r14d,0x2
   140007b32:	cmp    edx,r14d
   140007b35:	jne    0x140007b8a
   140007b37:	and    QWORD PTR [rbx],0x0
   140007b3b:	xor    r9d,r9d
   140007b3e:	xor    r8d,r8d
   140007b41:	mov    edx,esi
   140007b43:	mov    rcx,rbp
   140007b46:	call   0x14000fa04
   140007b4b:	movsxd rdi,eax
   140007b4e:	test   eax,eax
   140007b50:	je     0x140007b79
   140007b52:	mov    rcx,rdi
   140007b55:	mov    edx,r14d
   140007b58:	call   0x140008604
   140007b5d:	mov    QWORD PTR [rbx],rax
   140007b60:	test   rax,rax
   140007b63:	je     0x140007b79
   140007b65:	mov    r9d,edi
   140007b68:	mov    r8,rax
   140007b6b:	mov    edx,esi
   140007b6d:	mov    rcx,rbp
   140007b70:	call   0x14000fa04
   140007b75:	test   eax,eax
   140007b77:	jne    0x140007b28
   140007b79:	mov    rcx,QWORD PTR [rbx]
   140007b7c:	call   0x140007dc0
   140007b81:	and    QWORD PTR [rbx],0x0
   140007b85:	jmp    0x140007adc
   140007b8a:	test   edx,edx
   140007b8c:	jne    0x140007adc
   140007b92:	and    DWORD PTR [rsp+0x30],edx
   140007b96:	bts    esi,0x1d
   140007b9a:	lea    r8,[rsp+0x30]
   140007b9f:	mov    edx,esi
   140007ba1:	mov    r9d,r14d
   140007ba4:	mov    rcx,rbp
   140007ba7:	call   0x14000fa04
   140007bac:	test   eax,eax
   140007bae:	je     0x140007adc
   140007bb4:	mov    al,BYTE PTR [rsp+0x30]
   140007bb8:	mov    BYTE PTR [rbx],al
   140007bba:	jmp    0x140007b28
   140007bbf:	and    QWORD PTR [rsp+0x20],0x0
   140007bc5:	xor    r9d,r9d
   140007bc8:	xor    r8d,r8d
   140007bcb:	xor    edx,edx
   140007bcd:	xor    ecx,ecx
   140007bcf:	call   0x140008da8
   140007bd4:	int3   
   140007bd5:	int3   
   140007bd6:	int3   
   140007bd7:	int3   
   140007bd8:	mov    QWORD PTR [rip+0x36089],rcx        # 0x14003dc68
   140007bdf:	ret    
   140007be0:	test   ecx,ecx
   140007be2:	jne    0x140007be5
   140007be4:	ret    
   140007be5:	push   rbx
   140007be6:	sub    rsp,0x30
   140007bea:	mov    rax,QWORD PTR [rsp+0x68]
   140007bef:	mov    r10,r9
   140007bf2:	mov    r9d,DWORD PTR [rsp+0x60]
   140007bf7:	mov    r11,r8
   140007bfa:	mov    rbx,rdx
   140007bfd:	mov    r8,r10
   140007c00:	mov    rdx,r11
   140007c03:	mov    rcx,rbx
   140007c06:	mov    QWORD PTR [rsp+0x20],rax
   140007c0b:	call   0x140008da8
   140007c10:	int3   
   140007c11:	int3   
   140007c12:	int3   
   140007c13:	int3   
   140007c14:	rex push rbx
   140007c16:	sub    rsp,0x20
   140007c1a:	mov    rbx,rcx
   140007c1d:	mov    rcx,QWORD PTR [rip+0x360dc]        # 0x14003dd00
   140007c24:	test   rcx,rcx
   140007c27:	jne    0x140007c49
   140007c29:	call   0x14000df50
   140007c2e:	mov    ecx,0x1e
   140007c33:	call   0x14000dfc4
   140007c38:	mov    ecx,0xff
   140007c3d:	call   0x14000805c
   140007c42:	mov    rcx,QWORD PTR [rip+0x360b7]        # 0x14003dd00
   140007c49:	test   rbx,rbx
   140007c4c:	mov    r8d,0x1
   140007c52:	cmovne r8,rbx
   140007c56:	xor    edx,edx
   140007c58:	add    rsp,0x20
   140007c5c:	pop    rbx
   140007c5d:	rex.W jmp QWORD PTR [rip+0x244f4]        # 0x14002c158
   140007c64:	mov    QWORD PTR [rsp+0x8],rbx
   140007c69:	mov    QWORD PTR [rsp+0x10],rsi
   140007c6e:	push   rdi
   140007c6f:	sub    rsp,0x20
   140007c73:	mov    rbx,rcx
   140007c76:	cmp    rcx,0xffffffffffffffe0
   140007c7a:	ja     0x140007cf8
   140007c7c:	mov    edi,0x1
   140007c81:	test   rcx,rcx
   140007c84:	cmovne rdi,rcx
   140007c88:	mov    rcx,QWORD PTR [rip+0x36071]        # 0x14003dd00
   140007c8f:	test   rcx,rcx
   140007c92:	jne    0x140007cb4
   140007c94:	call   0x14000df50
   140007c99:	mov    ecx,0x1e
   140007c9e:	call   0x14000dfc4
   140007ca3:	mov    ecx,0xff
   140007ca8:	call   0x14000805c
   140007cad:	mov    rcx,QWORD PTR [rip+0x3604c]        # 0x14003dd00
   140007cb4:	mov    r8,rdi
   140007cb7:	xor    edx,edx
   140007cb9:	call   QWORD PTR [rip+0x24499]        # 0x14002c158
   140007cbf:	mov    rsi,rax
   140007cc2:	test   rax,rax
   140007cc5:	jne    0x140007cf3
   140007cc7:	cmp    DWORD PTR [rip+0x369c3],eax        # 0x14003e690
   140007ccd:	je     0x140007cdd
   140007ccf:	mov    rcx,rbx
   140007cd2:	call   0x140007d84
   140007cd7:	test   eax,eax
   140007cd9:	je     0x140007ce8
   140007cdb:	jmp    0x140007c88
   140007cdd:	call   0x140009cb4
   140007ce2:	mov    DWORD PTR [rax],0xc
   140007ce8:	call   0x140009cb4
   140007ced:	mov    DWORD PTR [rax],0xc
   140007cf3:	mov    rax,rsi
   140007cf6:	jmp    0x140007d0a
   140007cf8:	call   0x140007d84
   140007cfd:	call   0x140009cb4
   140007d02:	mov    DWORD PTR [rax],0xc
   140007d08:	xor    eax,eax
   140007d0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140007d0f:	mov    rsi,QWORD PTR [rsp+0x38]
   140007d14:	add    rsp,0x20
   140007d18:	pop    rdi
   140007d19:	ret    
   140007d1a:	int3   
   140007d1b:	int3   
   140007d1c:	mov    rcx,QWORD PTR [rip+0x35f4d]        # 0x14003dc70
   140007d23:	rex.W jmp QWORD PTR [rip+0x243ee]        # 0x14002c118
   140007d2a:	int3   
   140007d2b:	int3   
   140007d2c:	xor    ecx,ecx
   140007d2e:	jmp    0x140007d34
   140007d33:	int3   
   140007d34:	mov    QWORD PTR [rsp+0x8],rbx
   140007d39:	push   rdi
   140007d3a:	sub    rsp,0x20
   140007d3e:	mov    rdi,rcx
   140007d41:	mov    ecx,0x4
   140007d46:	call   0x14000fc2c
   140007d4b:	mov    rcx,QWORD PTR [rip+0x35f1e]        # 0x14003dc70
   140007d52:	call   QWORD PTR [rip+0x243c0]        # 0x14002c118
   140007d58:	mov    rcx,rdi
   140007d5b:	mov    rbx,rax
   140007d5e:	call   QWORD PTR [rip+0x243ac]        # 0x14002c110
   140007d64:	mov    ecx,0x4
   140007d69:	mov    QWORD PTR [rip+0x35f00],rax        # 0x14003dc70
   140007d70:	call   0x14000fe48
   140007d75:	mov    rax,rbx
   140007d78:	mov    rbx,QWORD PTR [rsp+0x30]
   140007d7d:	add    rsp,0x20
   140007d81:	pop    rdi
   140007d82:	ret    
   140007d83:	int3   
   140007d84:	rex push rbx
   140007d86:	sub    rsp,0x20
   140007d8a:	mov    rbx,rcx
   140007d8d:	mov    rcx,QWORD PTR [rip+0x35edc]        # 0x14003dc70
   140007d94:	call   QWORD PTR [rip+0x2437e]        # 0x14002c118
   140007d9a:	test   rax,rax
   140007d9d:	je     0x140007daf
   140007d9f:	mov    rcx,rbx
   140007da2:	call   rax
   140007da4:	test   eax,eax
   140007da6:	je     0x140007daf
   140007da8:	mov    eax,0x1
   140007dad:	jmp    0x140007db1
   140007daf:	xor    eax,eax
   140007db1:	add    rsp,0x20
   140007db5:	pop    rbx
   140007db6:	ret    
   140007db7:	int3   
   140007db8:	mov    QWORD PTR [rip+0x35eb1],rcx        # 0x14003dc70
   140007dbf:	ret    
   140007dc0:	test   rcx,rcx
   140007dc3:	je     0x140007dfc
   140007dc5:	push   rbx
   140007dc6:	sub    rsp,0x20
   140007dca:	mov    r8,rcx
   140007dcd:	mov    rcx,QWORD PTR [rip+0x35f2c]        # 0x14003dd00
   140007dd4:	xor    edx,edx
   140007dd6:	call   QWORD PTR [rip+0x24384]        # 0x14002c160
   140007ddc:	test   eax,eax
   140007dde:	jne    0x140007df7
   140007de0:	call   0x140009cb4
   140007de5:	mov    rbx,rax
   140007de8:	call   QWORD PTR [rip+0x24362]        # 0x14002c150
   140007dee:	mov    ecx,eax
   140007df0:	call   0x140009d4c
   140007df5:	mov    DWORD PTR [rbx],eax
   140007df7:	add    rsp,0x20
   140007dfb:	pop    rbx
   140007dfc:	ret    
   140007dfd:	int3   
   140007dfe:	int3   
   140007dff:	int3   
   140007e00:	mov    rax,rsp
   140007e03:	mov    QWORD PTR [rax+0x8],rbx
   140007e07:	mov    QWORD PTR [rax+0x10],rbp
   140007e0b:	mov    QWORD PTR [rax+0x18],rsi
   140007e0f:	mov    QWORD PTR [rax+0x20],rdi
   140007e13:	push   r15
   140007e15:	sub    rsp,0x30
   140007e19:	xor    edi,edi
   140007e1b:	mov    rbx,rdx
   140007e1e:	mov    rsi,rcx
   140007e21:	test   rcx,rcx
   140007e24:	jne    0x140007e3e
   140007e26:	call   0x140009cb4
   140007e2b:	mov    ebx,0x16
   140007e30:	mov    DWORD PTR [rax],ebx
   140007e32:	call   0x140008d58
   140007e37:	mov    eax,ebx
   140007e39:	jmp    0x140007ee5
   140007e3e:	test   rdx,rdx
   140007e41:	je     0x140007e26
   140007e43:	call   0x14000e828
   140007e48:	mov    r15d,0x1
   140007e4e:	test   eax,eax
   140007e50:	jne    0x140007e5e
   140007e52:	call   QWORD PTR [rip+0x24328]        # 0x14002c180
   140007e58:	test   eax,eax
   140007e5a:	cmove  edi,r15d
   140007e5e:	and    DWORD PTR [rsp+0x28],0x0
   140007e63:	and    QWORD PTR [rbx],0x0
   140007e67:	and    QWORD PTR [rsp+0x20],0x0
   140007e6d:	or     r9d,0xffffffff
   140007e71:	mov    r8,rsi
   140007e74:	xor    edx,edx
   140007e76:	mov    ecx,edi
   140007e78:	call   QWORD PTR [rip+0x2430a]        # 0x14002c188
   140007e7e:	movsxd rbp,eax
   140007e81:	test   eax,eax
   140007e83:	jne    0x140007e96
   140007e85:	call   QWORD PTR [rip+0x242c5]        # 0x14002c150
   140007e8b:	mov    ecx,eax
   140007e8d:	call   0x140009c64
   140007e92:	xor    eax,eax
   140007e94:	jmp    0x140007ee5
   140007e96:	mov    rcx,rbp
   140007e99:	add    rcx,rcx
   140007e9c:	call   0x140008684
   140007ea1:	mov    QWORD PTR [rbx],rax
   140007ea4:	test   rax,rax
   140007ea7:	je     0x140007e92
   140007ea9:	or     r9d,0xffffffff
   140007ead:	mov    r8,rsi
   140007eb0:	xor    edx,edx
   140007eb2:	mov    ecx,edi
   140007eb4:	mov    DWORD PTR [rsp+0x28],ebp
   140007eb8:	mov    QWORD PTR [rsp+0x20],rax
   140007ebd:	call   QWORD PTR [rip+0x242c5]        # 0x14002c188
   140007ec3:	test   eax,eax
   140007ec5:	jne    0x140007ee2
   140007ec7:	call   QWORD PTR [rip+0x24283]        # 0x14002c150
   140007ecd:	mov    ecx,eax
   140007ecf:	call   0x140009c64
   140007ed4:	mov    rcx,QWORD PTR [rbx]
   140007ed7:	call   0x140007dc0
   140007edc:	and    QWORD PTR [rbx],0x0
   140007ee0:	jmp    0x140007e92
   140007ee2:	mov    eax,r15d
   140007ee5:	mov    rbx,QWORD PTR [rsp+0x40]
   140007eea:	mov    rbp,QWORD PTR [rsp+0x48]
   140007eef:	mov    rsi,QWORD PTR [rsp+0x50]
   140007ef4:	mov    rdi,QWORD PTR [rsp+0x58]
   140007ef9:	add    rsp,0x30
   140007efd:	pop    r15
   140007eff:	ret    
   140007f00:	mov    rax,rsp
   140007f03:	mov    QWORD PTR [rax+0x8],rbx
   140007f07:	mov    QWORD PTR [rax+0x10],rbp
   140007f0b:	mov    QWORD PTR [rax+0x18],rsi
   140007f0f:	mov    QWORD PTR [rax+0x20],rdi
   140007f13:	push   r15
   140007f15:	sub    rsp,0x40
   140007f19:	xor    edi,edi
   140007f1b:	mov    rbx,rdx
   140007f1e:	mov    rsi,rcx
   140007f21:	test   rcx,rcx
   140007f24:	jne    0x140007f3e
   140007f26:	call   0x140009cb4
   140007f2b:	mov    ebx,0x16
   140007f30:	mov    DWORD PTR [rax],ebx
   140007f32:	call   0x140008d58
   140007f37:	mov    eax,ebx
   140007f39:	jmp    0x140007ffa
   140007f3e:	test   rdx,rdx
   140007f41:	je     0x140007f26
   140007f43:	call   0x14000e828
   140007f48:	mov    r15d,0x1
   140007f4e:	test   eax,eax
   140007f50:	jne    0x140007f5e
   140007f52:	call   QWORD PTR [rip+0x24228]        # 0x14002c180
   140007f58:	test   eax,eax
   140007f5a:	cmove  edi,r15d
   140007f5e:	and    QWORD PTR [rsp+0x38],0x0
   140007f64:	and    QWORD PTR [rsp+0x30],0x0
   140007f6a:	and    DWORD PTR [rsp+0x28],0x0
   140007f6f:	and    QWORD PTR [rsp+0x20],0x0
   140007f75:	and    QWORD PTR [rbx],0x0
   140007f79:	or     r9d,0xffffffff
   140007f7d:	mov    r8,rsi
   140007f80:	xor    edx,edx
   140007f82:	mov    ecx,edi
   140007f84:	call   QWORD PTR [rip+0x24206]        # 0x14002c190
   140007f8a:	movsxd rbp,eax
   140007f8d:	test   eax,eax
   140007f8f:	jne    0x140007fa2
   140007f91:	call   QWORD PTR [rip+0x241b9]        # 0x14002c150
   140007f97:	mov    ecx,eax
   140007f99:	call   0x140009c64
   140007f9e:	xor    eax,eax
   140007fa0:	jmp    0x140007ffa
   140007fa2:	mov    rcx,rbp
   140007fa5:	call   0x140008684
   140007faa:	mov    QWORD PTR [rbx],rax
   140007fad:	test   rax,rax
   140007fb0:	je     0x140007f9e
   140007fb2:	and    QWORD PTR [rsp+0x38],0x0
   140007fb8:	and    QWORD PTR [rsp+0x30],0x0
   140007fbe:	or     r9d,0xffffffff
   140007fc2:	mov    r8,rsi
   140007fc5:	xor    edx,edx
   140007fc7:	mov    ecx,edi
   140007fc9:	mov    DWORD PTR [rsp+0x28],ebp
   140007fcd:	mov    QWORD PTR [rsp+0x20],rax
   140007fd2:	call   QWORD PTR [rip+0x241b8]        # 0x14002c190
   140007fd8:	test   eax,eax
   140007fda:	jne    0x140007ff7
   140007fdc:	call   QWORD PTR [rip+0x2416e]        # 0x14002c150
   140007fe2:	mov    ecx,eax
   140007fe4:	call   0x140009c64
   140007fe9:	mov    rcx,QWORD PTR [rbx]
   140007fec:	call   0x140007dc0
   140007ff1:	and    QWORD PTR [rbx],0x0
   140007ff5:	jmp    0x140007f9e
   140007ff7:	mov    eax,r15d
   140007ffa:	mov    rbx,QWORD PTR [rsp+0x50]
   140007fff:	mov    rbp,QWORD PTR [rsp+0x58]
   140008004:	mov    rsi,QWORD PTR [rsp+0x60]
   140008009:	mov    rdi,QWORD PTR [rsp+0x68]
   14000800e:	add    rsp,0x40
   140008012:	pop    r15
   140008014:	ret    
   140008015:	int3   
   140008016:	int3   
   140008017:	int3   
   140008018:	rex push rbx
   14000801a:	sub    rsp,0x20
   14000801e:	mov    ebx,ecx
   140008020:	lea    r8,[rsp+0x38]
   140008025:	lea    rdx,[rip+0x26a8c]        # 0x14002eab8
   14000802c:	xor    ecx,ecx
   14000802e:	call   QWORD PTR [rip+0x2413c]        # 0x14002c170
   140008034:	test   eax,eax
   140008036:	je     0x140008053
   140008038:	mov    rcx,QWORD PTR [rsp+0x38]
   14000803d:	lea    rdx,[rip+0x26a8c]        # 0x14002ead0
   140008044:	call   QWORD PTR [rip+0x2412e]        # 0x14002c178
   14000804a:	test   rax,rax
   14000804d:	je     0x140008053
   14000804f:	mov    ecx,ebx
   140008051:	call   rax
   140008053:	add    rsp,0x20
   140008057:	pop    rbx
   140008058:	ret    
   140008059:	int3   
   14000805a:	int3   
   14000805b:	int3   
   14000805c:	rex push rbx
   14000805e:	sub    rsp,0x20
   140008062:	mov    ebx,ecx
   140008064:	call   0x140008018
   140008069:	mov    ecx,ebx
   14000806b:	call   QWORD PTR [rip+0x240f7]        # 0x14002c168
   140008071:	int3   
   140008072:	int3   
   140008073:	int3   
   140008074:	mov    QWORD PTR [rsp+0x8],rbx
   140008079:	push   rdi
   14000807a:	sub    rsp,0x20
   14000807e:	mov    rcx,QWORD PTR [rip+0x3807b]        # 0x140040100
   140008085:	call   QWORD PTR [rip+0x2408d]        # 0x14002c118
   14000808b:	mov    rbx,QWORD PTR [rip+0x35c06]        # 0x14003dc98
   140008092:	mov    rdi,rax
   140008095:	test   rbx,rbx
   140008098:	je     0x1400080b4
   14000809a:	mov    rcx,QWORD PTR [rbx]
   14000809d:	test   rcx,rcx
   1400080a0:	je     0x1400080ad
   1400080a2:	call   0x140007dc0
   1400080a7:	add    rbx,0x8
   1400080ab:	jne    0x14000809a
   1400080ad:	mov    rbx,QWORD PTR [rip+0x35be4]        # 0x14003dc98
   1400080b4:	mov    rcx,rbx
   1400080b7:	call   0x140007dc0
   1400080bc:	mov    rbx,QWORD PTR [rip+0x35bcd]        # 0x14003dc90
   1400080c3:	and    QWORD PTR [rip+0x35bcd],0x0        # 0x14003dc98
   1400080cb:	test   rbx,rbx
   1400080ce:	je     0x1400080ea
   1400080d0:	mov    rcx,QWORD PTR [rbx]
   1400080d3:	test   rcx,rcx
   1400080d6:	je     0x1400080e3
   1400080d8:	call   0x140007dc0
   1400080dd:	add    rbx,0x8
   1400080e1:	jne    0x1400080d0
   1400080e3:	mov    rbx,QWORD PTR [rip+0x35ba6]        # 0x14003dc90
   1400080ea:	mov    rcx,rbx
   1400080ed:	call   0x140007dc0
   1400080f2:	mov    rcx,QWORD PTR [rip+0x35b8f]        # 0x14003dc88
   1400080f9:	and    QWORD PTR [rip+0x35b8f],0x0        # 0x14003dc90
   140008101:	call   0x140007dc0
   140008106:	mov    rcx,QWORD PTR [rip+0x35b73]        # 0x14003dc80
   14000810d:	call   0x140007dc0
   140008112:	and    QWORD PTR [rip+0x35b6e],0x0        # 0x14003dc88
   14000811a:	and    QWORD PTR [rip+0x35b5e],0x0        # 0x14003dc80
   140008122:	or     rbx,0xffffffffffffffff
   140008126:	cmp    rdi,rbx
   140008129:	je     0x14000813d
   14000812b:	cmp    QWORD PTR [rip+0x37fcd],0x0        # 0x140040100
   140008133:	je     0x14000813d
   140008135:	mov    rcx,rdi
   140008138:	call   0x140007dc0
   14000813d:	mov    rcx,rbx
   140008140:	call   QWORD PTR [rip+0x23fca]        # 0x14002c110
   140008146:	mov    rcx,QWORD PTR [rip+0x367b3]        # 0x14003e900
   14000814d:	mov    QWORD PTR [rip+0x37fac],rax        # 0x140040100
   140008154:	test   rcx,rcx
   140008157:	je     0x140008166
   140008159:	call   0x140007dc0
   14000815e:	and    QWORD PTR [rip+0x3679a],0x0        # 0x14003e900
   140008166:	mov    rcx,QWORD PTR [rip+0x3679b]        # 0x14003e908
   14000816d:	test   rcx,rcx
   140008170:	je     0x14000817f
   140008172:	call   0x140007dc0
   140008177:	and    QWORD PTR [rip+0x36789],0x0        # 0x14003e908
   14000817f:	mov    rax,QWORD PTR [rip+0x3487a]        # 0x14003ca00
   140008186:	mov    ecx,ebx
   140008188:	lock xadd DWORD PTR [rax],ecx
   14000818c:	add    ecx,ebx
   14000818e:	jne    0x1400081af
   140008190:	mov    rcx,QWORD PTR [rip+0x34869]        # 0x14003ca00
   140008197:	lea    rbx,[rip+0x34542]        # 0x14003c6e0
   14000819e:	cmp    rcx,rbx
   1400081a1:	je     0x1400081af
   1400081a3:	call   0x140007dc0
   1400081a8:	mov    QWORD PTR [rip+0x34851],rbx        # 0x14003ca00
   1400081af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400081b4:	add    rsp,0x20
   1400081b8:	pop    rdi
   1400081b9:	ret    
   1400081ba:	int3   
   1400081bb:	int3   
   1400081bc:	rex push rbx
   1400081be:	sub    rsp,0x20
   1400081c2:	mov    ebx,ecx
   1400081c4:	call   0x14000df50
   1400081c9:	mov    ecx,ebx
   1400081cb:	call   0x14000dfc4
   1400081d0:	xor    r8d,r8d
   1400081d3:	mov    ecx,0xff
   1400081d8:	lea    edx,[r8+0x1]
   1400081dc:	call   0x140008424
   1400081e1:	int3   
   1400081e2:	int3   
   1400081e3:	int3   
   1400081e4:	mov    edx,0x1
   1400081e9:	xor    ecx,ecx
   1400081eb:	mov    r8d,edx
   1400081ee:	jmp    0x140008424
   1400081f3:	int3   
   1400081f4:	xor    edx,edx
   1400081f6:	xor    ecx,ecx
   1400081f8:	lea    r8d,[rdx+0x1]
   1400081fc:	jmp    0x140008424
   140008201:	int3   
   140008202:	int3   
   140008203:	int3   
   140008204:	rex push rbx
   140008206:	sub    rsp,0x20
   14000820a:	cmp    QWORD PTR [rip+0x26826],0x0        # 0x14002ea38
   140008212:	mov    ebx,ecx
   140008214:	je     0x14000822e
   140008216:	lea    rcx,[rip+0x2681b]        # 0x14002ea38
   14000821d:	call   0x14000feb0
   140008222:	test   eax,eax
   140008224:	je     0x14000822e
   140008226:	mov    ecx,ebx
   140008228:	call   QWORD PTR [rip+0x2680a]        # 0x14002ea38
   14000822e:	call   0x14000d4e4
   140008233:	lea    rdx,[rip+0x241ae]        # 0x14002c3e8
   14000823a:	lea    rcx,[rip+0x24177]        # 0x14002c3b8
   140008241:	call   0x1400083d0
   140008246:	test   eax,eax
   140008248:	jne    0x140008294
   14000824a:	lea    rcx,[rip+0x610f]        # 0x14000e360
   140008251:	call   0x1400059c4
   140008256:	lea    rdx,[rip+0x24153]        # 0x14002c3b0
   14000825d:	lea    rcx,[rip+0x2412c]        # 0x14002c390
   140008264:	call   0x140008370
   140008269:	cmp    QWORD PTR [rip+0x37e7f],0x0        # 0x1400400f0
   140008271:	je     0x140008292
   140008273:	lea    rcx,[rip+0x37e76]        # 0x1400400f0
   14000827a:	call   0x14000feb0
   14000827f:	test   eax,eax
   140008281:	je     0x140008292
   140008283:	xor    r8d,r8d
   140008286:	xor    ecx,ecx
   140008288:	lea    edx,[r8+0x2]
   14000828c:	call   QWORD PTR [rip+0x37e5e]        # 0x1400400f0
   140008292:	xor    eax,eax
   140008294:	add    rsp,0x20
   140008298:	pop    rbx
   140008299:	ret    
   14000829a:	int3   
   14000829b:	int3   
   14000829c:	xor    r8d,r8d
   14000829f:	lea    edx,[r8+0x1]
   1400082a3:	jmp    0x140008424
   1400082a8:	xor    r8d,r8d
   1400082ab:	xor    edx,edx
   1400082ad:	xor    ecx,ecx
   1400082af:	jmp    0x140008424
   1400082b4:	sub    rsp,0x28
   1400082b8:	test   rcx,rcx
   1400082bb:	jne    0x1400082d4
   1400082bd:	call   0x140009cb4
   1400082c2:	mov    DWORD PTR [rax],0x16
   1400082c8:	call   0x140008d58
   1400082cd:	mov    eax,0x16
   1400082d2:	jmp    0x1400082e5
   1400082d4:	mov    rax,QWORD PTR [rip+0x359c5]        # 0x14003dca0
   1400082db:	test   rax,rax
   1400082de:	je     0x1400082bd
   1400082e0:	mov    QWORD PTR [rcx],rax
   1400082e3:	xor    eax,eax
   1400082e5:	add    rsp,0x28
   1400082e9:	ret    
   1400082ea:	int3   
   1400082eb:	int3   
   1400082ec:	sub    rsp,0x28
   1400082f0:	test   rcx,rcx
   1400082f3:	jne    0x14000830c
   1400082f5:	call   0x140009cb4
   1400082fa:	mov    DWORD PTR [rax],0x16
   140008300:	call   0x140008d58
   140008305:	mov    eax,0x16
   14000830a:	jmp    0x14000831d
   14000830c:	mov    rax,QWORD PTR [rip+0x35995]        # 0x14003dca8
   140008313:	test   rax,rax
   140008316:	je     0x1400082f5
   140008318:	mov    QWORD PTR [rcx],rax
   14000831b:	xor    eax,eax
   14000831d:	add    rsp,0x28
   140008321:	ret    
   140008322:	int3   
   140008323:	int3   
   140008324:	rex push rbx
   140008326:	sub    rsp,0x20
   14000832a:	xor    ecx,ecx
   14000832c:	call   QWORD PTR [rip+0x23dde]        # 0x14002c110
   140008332:	mov    rcx,rax
   140008335:	mov    rbx,rax
   140008338:	call   0x140007db8
   14000833d:	mov    rcx,rbx
   140008340:	call   0x140008ce8
   140008345:	mov    rcx,rbx
   140008348:	call   0x140007bd8
   14000834d:	mov    rcx,rbx
   140008350:	call   0x14000ee74
   140008355:	mov    rcx,rbx
   140008358:	call   0x14000c2c0
   14000835d:	mov    rcx,rbx
   140008360:	call   0x14000ff30
   140008365:	add    rsp,0x20
   140008369:	pop    rbx
   14000836a:	jmp    0x14000e874
   14000836f:	int3   
   140008370:	mov    QWORD PTR [rsp+0x8],rbx
   140008375:	mov    QWORD PTR [rsp+0x10],rbp
   14000837a:	mov    QWORD PTR [rsp+0x18],rsi
   14000837f:	push   rdi
   140008380:	sub    rsp,0x20
   140008384:	xor    ebp,ebp
   140008386:	mov    rbx,rdx
   140008389:	mov    rdi,rcx
   14000838c:	sub    rbx,rcx
   14000838f:	mov    esi,ebp
   140008391:	add    rbx,0x7
   140008395:	shr    rbx,0x3
   140008399:	cmp    rcx,rdx
   14000839c:	cmova  rbx,rbp
   1400083a0:	test   rbx,rbx
   1400083a3:	je     0x1400083bb
   1400083a5:	mov    rax,QWORD PTR [rdi]
   1400083a8:	test   rax,rax
   1400083ab:	je     0x1400083af
   1400083ad:	call   rax
   1400083af:	inc    rsi
   1400083b2:	add    rdi,0x8
   1400083b6:	cmp    rsi,rbx
   1400083b9:	jb     0x1400083a5
   1400083bb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400083c0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400083c5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400083ca:	add    rsp,0x20
   1400083ce:	pop    rdi
   1400083cf:	ret    
   1400083d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400083d5:	push   rdi
   1400083d6:	sub    rsp,0x20
   1400083da:	xor    eax,eax
   1400083dc:	mov    rdi,rdx
   1400083df:	mov    rbx,rcx
   1400083e2:	cmp    rcx,rdx
   1400083e5:	jae    0x1400083fe
   1400083e7:	test   eax,eax
   1400083e9:	jne    0x1400083fe
   1400083eb:	mov    rcx,QWORD PTR [rbx]
   1400083ee:	test   rcx,rcx
   1400083f1:	je     0x1400083f5
   1400083f3:	call   rcx
   1400083f5:	add    rbx,0x8
   1400083f9:	cmp    rbx,rdi
   1400083fc:	jb     0x1400083e7
   1400083fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140008403:	add    rsp,0x20
   140008407:	pop    rdi
   140008408:	ret    
   140008409:	int3   
   14000840a:	int3   
   14000840b:	int3   
   14000840c:	mov    ecx,0x8
   140008411:	jmp    0x14000fc2c
   140008416:	int3   
   140008417:	int3   
   140008418:	mov    ecx,0x8
   14000841d:	jmp    0x14000fe48
   140008422:	int3   
   140008423:	int3   
   140008424:	mov    QWORD PTR [rsp+0x8],rbx
   140008429:	mov    QWORD PTR [rsp+0x10],rsi
   14000842e:	mov    DWORD PTR [rsp+0x18],r8d
   140008433:	push   rdi
   140008434:	push   r12
   140008436:	push   r13
   140008438:	push   r14
   14000843a:	push   r15
   14000843c:	sub    rsp,0x40
   140008440:	mov    r14d,r8d
   140008443:	mov    ebx,edx
   140008445:	mov    r13d,ecx
   140008448:	mov    ecx,0x8
   14000844d:	call   0x14000fc2c
   140008452:	nop
   140008453:	cmp    DWORD PTR [rip+0x3581e],0x1        # 0x14003dc78
   14000845a:	je     0x140008567
   140008460:	mov    DWORD PTR [rip+0x3584e],0x1        # 0x14003dcb8
   14000846a:	mov    BYTE PTR [rip+0x35843],r14b        # 0x14003dcb4
   140008471:	test   ebx,ebx
   140008473:	jne    0x140008553
   140008479:	mov    rcx,QWORD PTR [rip+0x37c80]        # 0x140040100
   140008480:	call   QWORD PTR [rip+0x23c92]        # 0x14002c118
   140008486:	mov    rsi,rax
   140008489:	mov    QWORD PTR [rsp+0x30],rax
   14000848e:	test   rax,rax
   140008491:	je     0x140008540
   140008497:	mov    rcx,QWORD PTR [rip+0x37c5a]        # 0x1400400f8
   14000849e:	call   QWORD PTR [rip+0x23c74]        # 0x14002c118
   1400084a4:	mov    rdi,rax
   1400084a7:	mov    QWORD PTR [rsp+0x20],rax
   1400084ac:	mov    r12,rsi
   1400084af:	mov    QWORD PTR [rsp+0x28],rsi
   1400084b4:	mov    r15,rax
   1400084b7:	mov    QWORD PTR [rsp+0x38],rax
   1400084bc:	sub    rdi,0x8
   1400084c0:	mov    QWORD PTR [rsp+0x20],rdi
   1400084c5:	cmp    rdi,rsi
   1400084c8:	jb     0x140008540
   1400084ca:	xor    ecx,ecx
   1400084cc:	call   QWORD PTR [rip+0x23c3e]        # 0x14002c110
   1400084d2:	cmp    QWORD PTR [rdi],rax
   1400084d5:	jne    0x1400084d9
   1400084d7:	jmp    0x1400084bc
   1400084d9:	cmp    rdi,rsi
   1400084dc:	jb     0x140008540
   1400084de:	mov    rcx,QWORD PTR [rdi]
   1400084e1:	call   QWORD PTR [rip+0x23c31]        # 0x14002c118
   1400084e7:	mov    rbx,rax
   1400084ea:	xor    ecx,ecx
   1400084ec:	call   QWORD PTR [rip+0x23c1e]        # 0x14002c110
   1400084f2:	mov    QWORD PTR [rdi],rax
   1400084f5:	call   rbx
   1400084f7:	mov    rcx,QWORD PTR [rip+0x37c02]        # 0x140040100
   1400084fe:	call   QWORD PTR [rip+0x23c14]        # 0x14002c118
   140008504:	mov    rbx,rax
   140008507:	mov    rcx,QWORD PTR [rip+0x37bea]        # 0x1400400f8
   14000850e:	call   QWORD PTR [rip+0x23c04]        # 0x14002c118
   140008514:	cmp    r12,rbx
   140008517:	jne    0x14000851e
   140008519:	cmp    r15,rax
   14000851c:	je     0x1400084d7
   14000851e:	mov    r12,rbx
   140008521:	mov    QWORD PTR [rsp+0x28],rbx
   140008526:	mov    rsi,rbx
   140008529:	mov    QWORD PTR [rsp+0x30],rbx
   14000852e:	mov    r15,rax
   140008531:	mov    QWORD PTR [rsp+0x38],rax
   140008536:	mov    rdi,rax
   140008539:	mov    QWORD PTR [rsp+0x20],rax
   14000853e:	jmp    0x1400084d7
   140008540:	lea    rdx,[rip+0x23ec9]        # 0x14002c410
   140008547:	lea    rcx,[rip+0x23ea2]        # 0x14002c3f0
   14000854e:	call   0x140008370
   140008553:	lea    rdx,[rip+0x23ec6]        # 0x14002c420
   14000855a:	lea    rcx,[rip+0x23eb7]        # 0x14002c418
   140008561:	call   0x140008370
   140008566:	nop
   140008567:	test   r14d,r14d
   14000856a:	je     0x14000857b
   14000856c:	mov    ecx,0x8
   140008571:	call   0x14000fe48
   140008576:	test   r14d,r14d
   140008579:	jne    0x1400085a1
   14000857b:	mov    DWORD PTR [rip+0x356f3],0x1        # 0x14003dc78
   140008585:	mov    ecx,0x8
   14000858a:	call   0x14000fe48
   14000858f:	mov    ecx,r13d
   140008592:	call   0x140008018
   140008597:	mov    ecx,r13d
   14000859a:	call   QWORD PTR [rip+0x23bc8]        # 0x14002c168
   1400085a0:	int3   
   1400085a1:	mov    rbx,QWORD PTR [rsp+0x70]
   1400085a6:	mov    rsi,QWORD PTR [rsp+0x78]
   1400085ab:	add    rsp,0x40
   1400085af:	pop    r15
   1400085b1:	pop    r14
   1400085b3:	pop    r13
   1400085b5:	pop    r12
   1400085b7:	pop    rdi
   1400085b8:	ret    
   1400085b9:	int3   
   1400085ba:	int3   
   1400085bb:	int3   
   1400085bc:	xor    r8d,r8d
   1400085bf:	xor    edx,edx
   1400085c1:	jmp    0x140008424
   1400085c6:	int3   
   1400085c7:	int3   
   1400085c8:	sub    rsp,0x28
   1400085cc:	test   rcx,rcx
   1400085cf:	jne    0x1400085ea
   1400085d1:	call   0x140009cb4
   1400085d6:	mov    DWORD PTR [rax],0x16
   1400085dc:	call   0x140008d58
   1400085e1:	or     rax,0xffffffffffffffff
   1400085e5:	add    rsp,0x28
   1400085e9:	ret    
   1400085ea:	mov    r8,rcx
   1400085ed:	mov    rcx,QWORD PTR [rip+0x3570c]        # 0x14003dd00
   1400085f4:	xor    edx,edx
   1400085f6:	add    rsp,0x28
   1400085fa:	rex.W jmp QWORD PTR [rip+0x23b97]        # 0x14002c198
   140008601:	int3   
   140008602:	int3   
   140008603:	int3   
   140008604:	mov    rax,rsp
   140008607:	mov    QWORD PTR [rax+0x8],rbx
   14000860b:	mov    QWORD PTR [rax+0x10],rbp
   14000860f:	mov    QWORD PTR [rax+0x18],rsi
   140008613:	mov    QWORD PTR [rax+0x20],rdi
   140008617:	push   r14
   140008619:	sub    rsp,0x20
   14000861d:	xor    ebx,ebx
   14000861f:	mov    rsi,rdx
   140008622:	mov    rbp,rcx
   140008625:	or     r14d,0xffffffff
   140008629:	xor    r8d,r8d
   14000862c:	mov    rdx,rsi
   14000862f:	mov    rcx,rbp
   140008632:	call   0x140010c1c
   140008637:	mov    rdi,rax
   14000863a:	test   rax,rax
   14000863d:	jne    0x140008665
   14000863f:	cmp    DWORD PTR [rip+0x3568b],eax        # 0x14003dcd0
   140008645:	jbe    0x140008665
   140008647:	mov    ecx,ebx
   140008649:	call   0x14000ecf8
   14000864e:	lea    ecx,[rbx+0x3e8]
   140008654:	cmp    ecx,DWORD PTR [rip+0x35676]        # 0x14003dcd0
   14000865a:	mov    ebx,ecx
   14000865c:	cmova  ebx,r14d
   140008660:	cmp    ebx,r14d
   140008663:	jne    0x140008629
   140008665:	mov    rbx,QWORD PTR [rsp+0x30]
   14000866a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000866f:	mov    rsi,QWORD PTR [rsp+0x40]
   140008674:	mov    rax,rdi
   140008677:	mov    rdi,QWORD PTR [rsp+0x48]
   14000867c:	add    rsp,0x20
   140008680:	pop    r14
   140008682:	ret    
   140008683:	int3   
   140008684:	mov    rax,rsp
   140008687:	mov    QWORD PTR [rax+0x8],rbx
   14000868b:	mov    QWORD PTR [rax+0x10],rbp
   14000868f:	mov    QWORD PTR [rax+0x18],rsi
   140008693:	mov    QWORD PTR [rax+0x20],rdi
   140008697:	push   r14
   140008699:	sub    rsp,0x20
   14000869d:	mov    esi,DWORD PTR [rip+0x3562d]        # 0x14003dcd0
   1400086a3:	xor    ebx,ebx
   1400086a5:	mov    rbp,rcx
   1400086a8:	or     r14d,0xffffffff
   1400086ac:	mov    rcx,rbp
   1400086af:	call   0x140007c64
   1400086b4:	mov    rdi,rax
   1400086b7:	test   rax,rax
   1400086ba:	jne    0x1400086e0
   1400086bc:	test   esi,esi
   1400086be:	je     0x1400086e0
   1400086c0:	mov    ecx,ebx
   1400086c2:	call   0x14000ecf8
   1400086c7:	mov    esi,DWORD PTR [rip+0x35603]        # 0x14003dcd0
   1400086cd:	lea    ecx,[rbx+0x3e8]
   1400086d3:	cmp    ecx,esi
   1400086d5:	mov    ebx,ecx
   1400086d7:	cmova  ebx,r14d
   1400086db:	cmp    ebx,r14d
   1400086de:	jne    0x1400086ac
   1400086e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086e5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400086ea:	mov    rsi,QWORD PTR [rsp+0x40]
   1400086ef:	mov    rax,rdi
   1400086f2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400086f7:	add    rsp,0x20
   1400086fb:	pop    r14
   1400086fd:	ret    
   1400086fe:	int3   
   1400086ff:	int3   
   140008700:	mov    rax,rsp
   140008703:	mov    QWORD PTR [rax+0x8],rbx
   140008707:	mov    QWORD PTR [rax+0x10],rbp
   14000870b:	mov    QWORD PTR [rax+0x18],rsi
   14000870f:	mov    QWORD PTR [rax+0x20],rdi
   140008713:	push   r14
   140008715:	sub    rsp,0x20
   140008719:	xor    ebx,ebx
   14000871b:	mov    rsi,rdx
   14000871e:	mov    rbp,rcx
   140008721:	or     r14d,0xffffffff
   140008725:	mov    rdx,rsi
   140008728:	mov    rcx,rbp
   14000872b:	call   0x140010ac0
   140008730:	mov    rdi,rax
   140008733:	test   rax,rax
   140008736:	jne    0x140008763
   140008738:	test   rsi,rsi
   14000873b:	je     0x140008763
   14000873d:	cmp    DWORD PTR [rip+0x3558d],eax        # 0x14003dcd0
   140008743:	jbe    0x140008763
   140008745:	mov    ecx,ebx
   140008747:	call   0x14000ecf8
   14000874c:	lea    ecx,[rbx+0x3e8]
   140008752:	cmp    ecx,DWORD PTR [rip+0x35578]        # 0x14003dcd0
   140008758:	mov    ebx,ecx
   14000875a:	cmova  ebx,r14d
   14000875e:	cmp    ebx,r14d
   140008761:	jne    0x140008725
   140008763:	mov    rbx,QWORD PTR [rsp+0x30]
   140008768:	mov    rbp,QWORD PTR [rsp+0x38]
   14000876d:	mov    rsi,QWORD PTR [rsp+0x40]
   140008772:	mov    rax,rdi
   140008775:	mov    rdi,QWORD PTR [rsp+0x48]
   14000877a:	add    rsp,0x20
   14000877e:	pop    r14
   140008780:	ret    
   140008781:	int3   
   140008782:	int3   
   140008783:	int3   
   140008784:	mov    QWORD PTR [rsp+0x8],rbx
   140008789:	mov    QWORD PTR [rsp+0x10],rbp
   14000878e:	mov    QWORD PTR [rsp+0x18],rsi
   140008793:	push   rdi
   140008794:	push   r14
   140008796:	push   r15
   140008798:	sub    rsp,0x20
   14000879c:	xor    ebx,ebx
   14000879e:	mov    rsi,r8
   1400087a1:	mov    rbp,rdx
   1400087a4:	or     r15d,0xffffffff
   1400087a8:	mov    r14,rcx
   1400087ab:	mov    r8,rsi
   1400087ae:	mov    rdx,rbp
   1400087b1:	mov    rcx,r14
   1400087b4:	call   0x140010b94
   1400087b9:	mov    rdi,rax
   1400087bc:	test   rax,rax
   1400087bf:	jne    0x1400087ec
   1400087c1:	test   rsi,rsi
   1400087c4:	je     0x1400087ec
   1400087c6:	cmp    DWORD PTR [rip+0x35504],eax        # 0x14003dcd0
   1400087cc:	jbe    0x1400087ec
   1400087ce:	mov    ecx,ebx
   1400087d0:	call   0x14000ecf8
   1400087d5:	lea    ecx,[rbx+0x3e8]
   1400087db:	cmp    ecx,DWORD PTR [rip+0x354ef]        # 0x14003dcd0
   1400087e1:	mov    ebx,ecx
   1400087e3:	cmova  ebx,r15d
   1400087e7:	cmp    ebx,r15d
   1400087ea:	jne    0x1400087ab
   1400087ec:	mov    rbx,QWORD PTR [rsp+0x40]
   1400087f1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400087f6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400087fb:	mov    rax,rdi
   1400087fe:	add    rsp,0x20
   140008802:	pop    r15
   140008804:	pop    r14
   140008806:	pop    rdi
   140008807:	ret    
   140008808:	mov    eax,DWORD PTR [rip+0x354c2]        # 0x14003dcd0
   14000880e:	mov    DWORD PTR [rip+0x354bc],ecx        # 0x14003dcd0
   140008814:	ret    
   140008815:	int3   
   140008816:	int3   
   140008817:	int3   
   140008818:	rex push rbx
   14000881a:	sub    rsp,0x20
   14000881e:	mov    ebx,ecx
   140008820:	call   0x14000ecf8
   140008825:	or     eax,0xffffffff
   140008828:	add    ebx,0x3e8
   14000882e:	cmp    ebx,DWORD PTR [rip+0x3549c]        # 0x14003dcd0
   140008834:	cmova  ebx,eax
   140008837:	mov    eax,ebx
   140008839:	add    rsp,0x20
   14000883d:	pop    rbx
   14000883e:	ret    
   14000883f:	int3   
   140008840:	mov    rax,rsp
   140008843:	mov    QWORD PTR [rax+0x8],rbx
   140008847:	mov    QWORD PTR [rax+0x10],rbp
   14000884b:	mov    QWORD PTR [rax+0x18],rsi
   14000884f:	push   rdi
   140008850:	push   r12
   140008852:	push   r13
   140008854:	push   r14
   140008856:	push   r15
   140008858:	sub    rsp,0x40
   14000885c:	mov    r12,QWORD PTR [r9+0x8]
   140008860:	mov    r15,QWORD PTR [r9]
   140008863:	mov    rbx,QWORD PTR [r9+0x38]
   140008867:	sub    r15,r12
   14000886a:	test   BYTE PTR [rcx+0x4],0x66
   14000886e:	mov    r14,r9
   140008871:	mov    r13,rdx
   140008874:	mov    rbp,rcx
   140008877:	jne    0x14000895b
   14000887d:	mov    esi,DWORD PTR [r9+0x48]
   140008881:	mov    QWORD PTR [rax-0x38],rcx
   140008885:	mov    QWORD PTR [rax-0x30],r8
   140008889:	cmp    esi,DWORD PTR [rbx]
   14000888b:	jae    0x1400089fe
   140008891:	mov    edi,esi
   140008893:	add    rdi,rdi
   140008896:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   14000889a:	cmp    r15,rax
   14000889d:	jb     0x14000894d
   1400088a3:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   1400088a7:	cmp    r15,rax
   1400088aa:	jae    0x14000894d
   1400088b0:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   1400088b5:	je     0x14000894d
   1400088bb:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   1400088c0:	je     0x1400088d9
   1400088c2:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   1400088c6:	lea    rcx,[rsp+0x30]
   1400088cb:	mov    rdx,r13
   1400088ce:	add    rax,r12
   1400088d1:	call   rax
   1400088d3:	test   eax,eax
   1400088d5:	js     0x140008954
   1400088d7:	jle    0x14000894d
   1400088d9:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   1400088e0:	jne    0x14000890a
   1400088e2:	cmp    QWORD PTR [rip+0x261f6],0x0        # 0x14002eae0
   1400088ea:	je     0x14000890a
   1400088ec:	lea    rcx,[rip+0x261ed]        # 0x14002eae0
   1400088f3:	call   0x14000feb0
   1400088f8:	test   eax,eax
   1400088fa:	je     0x14000890a
   1400088fc:	mov    edx,0x1
   140008901:	mov    rcx,rbp
   140008904:	call   QWORD PTR [rip+0x261d6]        # 0x14002eae0
   14000890a:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   14000890e:	mov    r8d,0x1
   140008914:	mov    rdx,r13
   140008917:	add    rcx,r12
   14000891a:	call   0x140010d00
   14000891f:	mov    rax,QWORD PTR [r14+0x40]
   140008923:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   140008927:	mov    r9d,DWORD PTR [rbp+0x0]
   14000892b:	mov    QWORD PTR [rsp+0x28],rax
   140008930:	mov    rax,QWORD PTR [r14+0x28]
   140008934:	add    rdx,r12
   140008937:	mov    r8,rbp
   14000893a:	mov    rcx,r13
   14000893d:	mov    QWORD PTR [rsp+0x20],rax
   140008942:	call   QWORD PTR [rip+0x237f0]        # 0x14002c138
   140008948:	call   0x140010d30
   14000894d:	inc    esi
   14000894f:	jmp    0x140008889
   140008954:	xor    eax,eax
   140008956:	jmp    0x140008a03
   14000895b:	mov    rsi,QWORD PTR [r9+0x20]
   14000895f:	mov    edi,DWORD PTR [r9+0x48]
   140008963:	sub    rsi,r12
   140008966:	jmp    0x1400089f4
   14000896b:	mov    ecx,edi
   14000896d:	add    rcx,rcx
   140008970:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   140008974:	cmp    r15,rax
   140008977:	jb     0x1400089f2
   140008979:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   14000897d:	cmp    r15,rax
   140008980:	jae    0x1400089f2
   140008982:	test   BYTE PTR [rbp+0x4],0x20
   140008986:	je     0x1400089cc
   140008988:	xor    r9d,r9d
   14000898b:	test   edx,edx
   14000898d:	je     0x1400089c7
   14000898f:	mov    r8d,r9d
   140008992:	add    r8,r8
   140008995:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   14000899a:	cmp    rsi,rax
   14000899d:	jb     0x1400089bf
   14000899f:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   1400089a4:	cmp    rsi,rax
   1400089a7:	jae    0x1400089bf
   1400089a9:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   1400089ad:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   1400089b2:	jne    0x1400089bf
   1400089b4:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   1400089b8:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   1400089bd:	je     0x1400089c7
   1400089bf:	inc    r9d
   1400089c2:	cmp    r9d,edx
   1400089c5:	jb     0x14000898f
   1400089c7:	cmp    r9d,edx
   1400089ca:	jne    0x1400089fe
   1400089cc:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   1400089d0:	test   eax,eax
   1400089d2:	je     0x1400089db
   1400089d4:	cmp    rsi,rax
   1400089d7:	je     0x1400089fe
   1400089d9:	jmp    0x1400089f2
   1400089db:	lea    eax,[rdi+0x1]
   1400089de:	mov    rdx,r13
   1400089e1:	mov    DWORD PTR [r14+0x48],eax
   1400089e5:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   1400089ea:	mov    cl,0x1
   1400089ec:	add    r8,r12
   1400089ef:	call   r8
   1400089f2:	inc    edi
   1400089f4:	mov    edx,DWORD PTR [rbx]
   1400089f6:	cmp    edi,edx
   1400089f8:	jb     0x14000896b
   1400089fe:	mov    eax,0x1
   140008a03:	lea    r11,[rsp+0x40]
   140008a08:	mov    rbx,QWORD PTR [r11+0x30]
   140008a0c:	mov    rbp,QWORD PTR [r11+0x38]
   140008a10:	mov    rsi,QWORD PTR [r11+0x40]
   140008a14:	mov    rsp,r11
   140008a17:	pop    r15
   140008a19:	pop    r14
   140008a1b:	pop    r13
   140008a1d:	pop    r12
   140008a1f:	pop    rdi
   140008a20:	ret    
   140008a21:	int3   
   140008a22:	int3   
   140008a23:	int3   
   140008a24:	mov    QWORD PTR [rsp+0x8],rbx
   140008a29:	mov    QWORD PTR [rsp+0x10],rbp
   140008a2e:	mov    QWORD PTR [rsp+0x18],rsi
   140008a33:	push   rdi
   140008a34:	sub    rsp,0x10
   140008a38:	xor    ecx,ecx
   140008a3a:	xor    eax,eax
   140008a3c:	xor    edi,edi
   140008a3e:	cpuid  
   140008a40:	mov    DWORD PTR [rip+0x335fe],0x2        # 0x14003c048
   140008a4a:	mov    DWORD PTR [rip+0x335f0],0x1        # 0x14003c044
   140008a54:	mov    r11d,ebx
   140008a57:	mov    ebx,ecx
   140008a59:	mov    r8d,edx
   140008a5c:	xor    ebx,0x6c65746e
   140008a62:	mov    r9d,edx
   140008a65:	mov    edx,r11d
   140008a68:	xor    r8d,0x49656e69
   140008a6f:	xor    edx,0x756e6547
   140008a75:	mov    ebp,eax
   140008a77:	or     r8d,ebx
   140008a7a:	lea    eax,[rdi+0x1]
   140008a7d:	or     r8d,edx
   140008a80:	sete   r10b
   140008a84:	xor    r11d,0x68747541
   140008a8b:	xor    r9d,0x69746e65
   140008a92:	or     r11d,r9d
   140008a95:	xor    ecx,0x444d4163
   140008a9b:	or     r11d,ecx
   140008a9e:	sete   sil
   140008aa2:	xor    ecx,ecx
   140008aa4:	cpuid  
   140008aa6:	mov    r11d,ecx
   140008aa9:	mov    r9d,eax
   140008aac:	mov    DWORD PTR [rsp+0x4],ebx
   140008ab0:	mov    DWORD PTR [rsp+0xc],edx
   140008ab4:	test   r10b,r10b
   140008ab7:	je     0x140008b08
   140008ab9:	mov    edx,eax
   140008abb:	and    edx,0xfff3ff0
   140008ac1:	cmp    edx,0x106c0
   140008ac7:	je     0x140008af4
   140008ac9:	cmp    edx,0x20660
   140008acf:	je     0x140008af4
   140008ad1:	cmp    edx,0x20670
   140008ad7:	je     0x140008af4
   140008ad9:	add    edx,0xfffcf9b0
   140008adf:	cmp    edx,0x20
   140008ae2:	ja     0x140008b08
   140008ae4:	movabs rcx,0x100010001
   140008aee:	bt     rcx,rdx
   140008af2:	jae    0x140008b08
   140008af4:	mov    r8d,DWORD PTR [rip+0x351d9]        # 0x14003dcd4
   140008afb:	or     r8d,0x1
   140008aff:	mov    DWORD PTR [rip+0x351ce],r8d        # 0x14003dcd4
   140008b06:	jmp    0x140008b0f
   140008b08:	mov    r8d,DWORD PTR [rip+0x351c5]        # 0x14003dcd4
   140008b0f:	test   sil,sil
   140008b12:	je     0x140008b2f
   140008b14:	and    r9d,0xff00f00
   140008b1b:	cmp    r9d,0x600f00
   140008b22:	jl     0x140008b2f
   140008b24:	or     r8d,0x4
   140008b28:	mov    DWORD PTR [rip+0x351a5],r8d        # 0x14003dcd4
   140008b2f:	mov    eax,0x7
   140008b34:	cmp    ebp,eax
   140008b36:	jl     0x140008b5a
   140008b38:	xor    ecx,ecx
   140008b3a:	cpuid  
   140008b3c:	mov    edi,ebx
   140008b3e:	mov    DWORD PTR [rsp],eax
   140008b41:	mov    DWORD PTR [rsp+0x8],ecx
   140008b45:	mov    DWORD PTR [rsp+0xc],edx
   140008b49:	bt     ebx,0x9
   140008b4d:	jae    0x140008b5a
   140008b4f:	or     r8d,0x2
   140008b53:	mov    DWORD PTR [rip+0x3517a],r8d        # 0x14003dcd4
   140008b5a:	bt     r11d,0x14
   140008b5f:	jae    0x140008bb1
   140008b61:	mov    DWORD PTR [rip+0x334d9],0x2        # 0x14003c044
   140008b6b:	mov    DWORD PTR [rip+0x334d3],0x6        # 0x14003c048
   140008b75:	bt     r11d,0x1b
   140008b7a:	jae    0x140008bb1
   140008b7c:	bt     r11d,0x1c
   140008b81:	jae    0x140008bb1
   140008b83:	mov    DWORD PTR [rip+0x334b7],0x3        # 0x14003c044
   140008b8d:	mov    DWORD PTR [rip+0x334b1],0xe        # 0x14003c048
   140008b97:	test   dil,0x20
   140008b9b:	je     0x140008bb1
   140008b9d:	mov    DWORD PTR [rip+0x3349d],0x5        # 0x14003c044
   140008ba7:	mov    DWORD PTR [rip+0x33497],0x2e        # 0x14003c048
   140008bb1:	mov    rbx,QWORD PTR [rsp+0x20]
   140008bb6:	mov    rbp,QWORD PTR [rsp+0x28]
   140008bbb:	mov    rsi,QWORD PTR [rsp+0x30]
   140008bc0:	xor    eax,eax
   140008bc2:	add    rsp,0x10
   140008bc6:	pop    rdi
   140008bc7:	ret    
   140008bc8:	jmp    0x140008cf0
   140008bcd:	int3   
   140008bce:	int3   
   140008bcf:	int3   
   140008bd0:	sub    rsp,0x38
   140008bd4:	mov    rax,QWORD PTR [rsp+0x60]
   140008bd9:	mov    QWORD PTR [rsp+0x20],rax
   140008bde:	call   0x140008da8
   140008be3:	int3   
   140008be4:	mov    rax,rsp
   140008be7:	mov    QWORD PTR [rax+0x10],rbx
   140008beb:	mov    QWORD PTR [rax+0x18],rsi
   140008bef:	mov    QWORD PTR [rax+0x20],rdi
   140008bf3:	push   rbp
   140008bf4:	lea    rbp,[rax-0x4b8]
   140008bfb:	sub    rsp,0x5b0
   140008c02:	mov    rax,QWORD PTR [rip+0x335c7]        # 0x14003c1d0
   140008c09:	xor    rax,rsp
   140008c0c:	mov    QWORD PTR [rbp+0x4a0],rax
   140008c13:	mov    edi,r8d
   140008c16:	mov    esi,edx
   140008c18:	mov    ebx,ecx
   140008c1a:	cmp    ecx,0xffffffff
   140008c1d:	je     0x140008c24
   140008c1f:	call   0x140010d34
   140008c24:	and    DWORD PTR [rsp+0x30],0x0
   140008c29:	lea    rcx,[rsp+0x34]
   140008c2e:	xor    edx,edx
   140008c30:	mov    r8d,0x94
   140008c36:	call   0x140006f70
   140008c3b:	lea    rax,[rsp+0x30]
   140008c40:	lea    rcx,[rbp-0x30]
   140008c44:	mov    QWORD PTR [rsp+0x20],rax
   140008c49:	lea    rax,[rbp-0x30]
   140008c4d:	mov    QWORD PTR [rsp+0x28],rax
   140008c52:	call   0x14000e4c4
   140008c57:	mov    rax,QWORD PTR [rbp+0x4b8]
   140008c5e:	mov    QWORD PTR [rbp+0xc8],rax
   140008c65:	lea    rax,[rbp+0x4b8]
   140008c6c:	mov    DWORD PTR [rsp+0x30],esi
   140008c70:	add    rax,0x8
   140008c74:	mov    DWORD PTR [rsp+0x34],edi
   140008c78:	mov    QWORD PTR [rbp+0x68],rax
   140008c7c:	mov    rax,QWORD PTR [rbp+0x4b8]
   140008c83:	mov    QWORD PTR [rsp+0x40],rax
   140008c88:	call   QWORD PTR [rip+0x23512]        # 0x14002c1a0
   140008c8e:	lea    rcx,[rsp+0x20]
   140008c93:	mov    edi,eax
   140008c95:	call   0x14000ed20
   140008c9a:	test   eax,eax
   140008c9c:	jne    0x140008cae
   140008c9e:	test   edi,edi
   140008ca0:	jne    0x140008cae
   140008ca2:	cmp    ebx,0xffffffff
   140008ca5:	je     0x140008cae
   140008ca7:	mov    ecx,ebx
   140008ca9:	call   0x140010d34
   140008cae:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140008cb5:	xor    rcx,rsp
   140008cb8:	call   0x14000c380
   140008cbd:	lea    r11,[rsp+0x5b0]
   140008cc5:	mov    rbx,QWORD PTR [r11+0x18]
   140008cc9:	mov    rsi,QWORD PTR [r11+0x20]
   140008ccd:	mov    rdi,QWORD PTR [r11+0x28]
   140008cd1:	mov    rsp,r11
   140008cd4:	pop    rbp
   140008cd5:	ret    
   140008cd6:	int3   
   140008cd7:	int3   
   140008cd8:	mov    rcx,QWORD PTR [rip+0x34ff9]        # 0x14003dcd8
   140008cdf:	rex.W jmp QWORD PTR [rip+0x23432]        # 0x14002c118
   140008ce6:	int3   
   140008ce7:	int3   
   140008ce8:	mov    QWORD PTR [rip+0x34fe9],rcx        # 0x14003dcd8
   140008cef:	ret    
   140008cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140008cf5:	mov    QWORD PTR [rsp+0x10],rbp
   140008cfa:	mov    QWORD PTR [rsp+0x18],rsi
   140008cff:	push   rdi
   140008d00:	sub    rsp,0x30
   140008d04:	mov    rbp,rcx
   140008d07:	mov    rcx,QWORD PTR [rip+0x34fca]        # 0x14003dcd8
   140008d0e:	mov    ebx,r9d
   140008d11:	mov    rdi,r8
   140008d14:	mov    rsi,rdx
   140008d17:	call   QWORD PTR [rip+0x233fb]        # 0x14002c118
   140008d1d:	mov    r9d,ebx
   140008d20:	mov    r8,rdi
   140008d23:	mov    rdx,rsi
   140008d26:	mov    rcx,rbp
   140008d29:	test   rax,rax
   140008d2c:	je     0x140008d45
   140008d2e:	mov    rbx,QWORD PTR [rsp+0x40]
   140008d33:	mov    rbp,QWORD PTR [rsp+0x48]
   140008d38:	mov    rsi,QWORD PTR [rsp+0x50]
   140008d3d:	add    rsp,0x30
   140008d41:	pop    rdi
   140008d42:	rex.W jmp rax
   140008d45:	mov    rax,QWORD PTR [rsp+0x60]
   140008d4a:	mov    QWORD PTR [rsp+0x20],rax
   140008d4f:	call   0x140008da8
   140008d54:	int3   
   140008d55:	int3   
   140008d56:	int3   
   140008d57:	int3   
   140008d58:	sub    rsp,0x38
   140008d5c:	and    QWORD PTR [rsp+0x20],0x0
   140008d62:	xor    r9d,r9d
   140008d65:	xor    r8d,r8d
   140008d68:	xor    edx,edx
   140008d6a:	xor    ecx,ecx
   140008d6c:	call   0x140008cf0
   140008d71:	add    rsp,0x38
   140008d75:	ret    
   140008d76:	int3   
   140008d77:	int3   
   140008d78:	sub    rsp,0x38
   140008d7c:	and    QWORD PTR [rsp+0x20],0x0
   140008d82:	xor    r9d,r9d
   140008d85:	xor    r8d,r8d
   140008d88:	xor    edx,edx
   140008d8a:	xor    ecx,ecx
   140008d8c:	call   0x140008cf0
   140008d91:	and    QWORD PTR [rsp+0x20],0x0
   140008d97:	xor    r9d,r9d
   140008d9a:	xor    r8d,r8d
   140008d9d:	xor    edx,edx
   140008d9f:	xor    ecx,ecx
   140008da1:	call   0x140008da8
   140008da6:	int3   
   140008da7:	int3   
   140008da8:	sub    rsp,0x28
   140008dac:	mov    ecx,0x17
   140008db1:	call   0x14002a60c
   140008db6:	test   eax,eax
   140008db8:	je     0x140008dc1
   140008dba:	mov    ecx,0x5
   140008dbf:	int    0x29
   140008dc1:	mov    r8d,0x1
   140008dc7:	mov    edx,0xc0000417
   140008dcc:	lea    ecx,[r8+0x1]
   140008dd0:	call   0x140008be4
   140008dd5:	mov    ecx,0xc0000417
   140008dda:	add    rsp,0x28
   140008dde:	jmp    0x14000ed00
   140008de3:	int3   
   140008de4:	mov    QWORD PTR [rsp+0x8],rbx
   140008de9:	push   rdi
   140008dea:	sub    rsp,0x20
   140008dee:	mov    rdi,rcx
   140008df1:	mov    rcx,QWORD PTR [rip+0x34ee0]        # 0x14003dcd8
   140008df8:	call   QWORD PTR [rip+0x2331a]        # 0x14002c118
   140008dfe:	mov    rcx,rdi
   140008e01:	mov    rbx,rax
   140008e04:	call   QWORD PTR [rip+0x23306]        # 0x14002c110
   140008e0a:	mov    QWORD PTR [rip+0x34ec7],rax        # 0x14003dcd8
   140008e11:	mov    rax,rbx
   140008e14:	mov    rbx,QWORD PTR [rsp+0x30]
   140008e19:	add    rsp,0x20
   140008e1d:	pop    rdi
   140008e1e:	ret    
   140008e1f:	int3   
   140008e20:	mov    rax,rsp
   140008e23:	mov    QWORD PTR [rax+0x10],rbx
   140008e27:	mov    QWORD PTR [rax+0x18],rbp
   140008e2b:	mov    QWORD PTR [rax+0x20],rsi
   140008e2f:	mov    DWORD PTR [rax+0x8],ecx
   140008e32:	push   rdi
   140008e33:	sub    rsp,0x20
   140008e37:	mov    rcx,rdx
   140008e3a:	mov    rbx,rdx
   140008e3d:	call   0x140010f18
   140008e42:	mov    ecx,DWORD PTR [rbx+0x18]
   140008e45:	movsxd rsi,eax
   140008e48:	test   cl,0x82
   140008e4b:	jne    0x140008e64
   140008e4d:	call   0x140009cb4
   140008e52:	mov    DWORD PTR [rax],0x9
   140008e58:	or     DWORD PTR [rbx+0x18],0x20
   140008e5c:	or     eax,0xffffffff
   140008e5f:	jmp    0x140008f96
   140008e64:	test   cl,0x40
   140008e67:	je     0x140008e76
   140008e69:	call   0x140009cb4
   140008e6e:	mov    DWORD PTR [rax],0x22
   140008e74:	jmp    0x140008e58
   140008e76:	xor    edi,edi
   140008e78:	test   cl,0x1
   140008e7b:	je     0x140008e96
   140008e7d:	mov    DWORD PTR [rbx+0x8],edi
   140008e80:	test   cl,0x10
   140008e83:	je     0x140008f12
   140008e89:	mov    rax,QWORD PTR [rbx+0x10]
   140008e8d:	and    ecx,0xfffffffe
   140008e90:	mov    QWORD PTR [rbx],rax
   140008e93:	mov    DWORD PTR [rbx+0x18],ecx
   140008e96:	mov    eax,DWORD PTR [rbx+0x18]
   140008e99:	mov    DWORD PTR [rbx+0x8],edi
   140008e9c:	and    eax,0xffffffef
   140008e9f:	or     eax,0x2
   140008ea2:	mov    DWORD PTR [rbx+0x18],eax
   140008ea5:	test   eax,0x10c
   140008eaa:	jne    0x140008edb
   140008eac:	call   0x140010e04
   140008eb1:	add    rax,0x30
   140008eb5:	cmp    rbx,rax
   140008eb8:	je     0x140008ec8
   140008eba:	call   0x140010e04
   140008ebf:	add    rax,0x60
   140008ec3:	cmp    rbx,rax
   140008ec6:	jne    0x140008ed3
   140008ec8:	mov    ecx,esi
   140008eca:	call   0x140010f40
   140008ecf:	test   eax,eax
   140008ed1:	jne    0x140008edb
   140008ed3:	mov    rcx,rbx
   140008ed6:	call   0x1400119f4
   140008edb:	test   DWORD PTR [rbx+0x18],0x108
   140008ee2:	je     0x140008f73
   140008ee8:	mov    ebp,DWORD PTR [rbx]
   140008eea:	mov    rdx,QWORD PTR [rbx+0x10]
   140008eee:	sub    ebp,DWORD PTR [rbx+0x10]
   140008ef1:	lea    rax,[rdx+0x1]
   140008ef5:	mov    QWORD PTR [rbx],rax
   140008ef8:	mov    eax,DWORD PTR [rbx+0x24]
   140008efb:	dec    eax
   140008efd:	mov    DWORD PTR [rbx+0x8],eax
   140008f00:	test   ebp,ebp
   140008f02:	jle    0x140008f1d
   140008f04:	mov    r8d,ebp
   140008f07:	mov    ecx,esi
   140008f09:	call   0x140010fa0
   140008f0e:	mov    edi,eax
   140008f10:	jmp    0x140008f67
   140008f12:	or     ecx,0x20
   140008f15:	mov    DWORD PTR [rbx+0x18],ecx
   140008f18:	jmp    0x140008e5c
   140008f1d:	lea    eax,[rsi+0x2]
   140008f20:	cmp    eax,0x1
   140008f23:	jbe    0x140008f43
   140008f25:	mov    rcx,rsi
   140008f28:	mov    rax,rsi
   140008f2b:	lea    r8,[rip+0x34dde]        # 0x14003dd10
   140008f32:	and    ecx,0x1f
   140008f35:	sar    rax,0x5
   140008f39:	imul   rdx,rcx,0x58
   140008f3d:	add    rdx,QWORD PTR [r8+rax*8]
   140008f41:	jmp    0x140008f4a
   140008f43:	lea    rdx,[rip+0x332e6]        # 0x14003c230
   140008f4a:	test   BYTE PTR [rdx+0x8],0x20
   140008f4e:	je     0x140008f67
   140008f50:	xor    edx,edx
   140008f52:	mov    ecx,esi
   140008f54:	lea    r8d,[rdx+0x2]
   140008f58:	call   0x140011878
   140008f5d:	cmp    rax,0xffffffffffffffff
   140008f61:	je     0x140008e58
   140008f67:	mov    rcx,QWORD PTR [rbx+0x10]
   140008f6b:	mov    al,BYTE PTR [rsp+0x30]
   140008f6f:	mov    BYTE PTR [rcx],al
   140008f71:	jmp    0x140008f89
   140008f73:	mov    ebp,0x1
   140008f78:	lea    rdx,[rsp+0x30]
   140008f7d:	mov    ecx,esi
   140008f7f:	mov    r8d,ebp
   140008f82:	call   0x140010fa0
   140008f87:	mov    edi,eax
   140008f89:	cmp    edi,ebp
   140008f8b:	jne    0x140008e58
   140008f91:	movzx  eax,BYTE PTR [rsp+0x30]
   140008f96:	mov    rbx,QWORD PTR [rsp+0x38]
   140008f9b:	mov    rbp,QWORD PTR [rsp+0x40]
   140008fa0:	mov    rsi,QWORD PTR [rsp+0x48]
   140008fa5:	add    rsp,0x20
   140008fa9:	pop    rdi
   140008faa:	ret    
   140008fab:	int3   
   140008fac:	rex push rbx
   140008fae:	sub    rsp,0x20
   140008fb2:	mov    rbx,rcx
   140008fb5:	mov    BYTE PTR [rcx+0x18],0x0
   140008fb9:	test   rdx,rdx
   140008fbc:	jne    0x140009044
   140008fc2:	call   0x14000a3ec
   140008fc7:	mov    QWORD PTR [rbx+0x10],rax
   140008fcb:	mov    rdx,QWORD PTR [rax+0xc0]
   140008fd2:	mov    QWORD PTR [rbx],rdx
   140008fd5:	mov    rcx,QWORD PTR [rax+0xb8]
   140008fdc:	mov    QWORD PTR [rbx+0x8],rcx
   140008fe0:	cmp    rdx,QWORD PTR [rip+0x340b9]        # 0x14003d0a0
   140008fe7:	je     0x140008fff
   140008fe9:	mov    eax,DWORD PTR [rax+0xc8]
   140008fef:	test   DWORD PTR [rip+0x34223],eax        # 0x14003d218
   140008ff5:	jne    0x140008fff
   140008ff7:	call   0x140011d10
   140008ffc:	mov    QWORD PTR [rbx],rax
   140008fff:	mov    rax,QWORD PTR [rip+0x339fa]        # 0x14003ca00
   140009006:	cmp    QWORD PTR [rbx+0x8],rax
   14000900a:	je     0x140009027
   14000900c:	mov    rax,QWORD PTR [rbx+0x10]
   140009010:	mov    ecx,DWORD PTR [rax+0xc8]
   140009016:	test   DWORD PTR [rip+0x341fc],ecx        # 0x14003d218
   14000901c:	jne    0x140009027
   14000901e:	call   0x1400103cc
   140009023:	mov    QWORD PTR [rbx+0x8],rax
   140009027:	mov    rcx,QWORD PTR [rbx+0x10]
   14000902b:	mov    eax,DWORD PTR [rcx+0xc8]
   140009031:	test   al,0x2
   140009033:	jne    0x14000904b
   140009035:	or     eax,0x2
   140009038:	mov    DWORD PTR [rcx+0xc8],eax
   14000903e:	mov    BYTE PTR [rbx+0x18],0x1
   140009042:	jmp    0x14000904b
   140009044:	movups xmm0,XMMWORD PTR [rdx]
   140009047:	movdqu XMMWORD PTR [rcx],xmm0
   14000904b:	mov    rax,rbx
   14000904e:	add    rsp,0x20
   140009052:	pop    rbx
   140009053:	ret    
   140009054:	cmp    BYTE PTR [rcx+0x18],0x0
   140009058:	je     0x140009065
   14000905a:	mov    rax,QWORD PTR [rcx+0x10]
   14000905e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140009065:	ret    
   140009066:	int3   
   140009067:	int3   
   140009068:	mov    rax,rcx
   14000906b:	ret    
   14000906c:	mov    QWORD PTR [rsp+0x18],rbx
   140009071:	push   rbp
   140009072:	push   rsi
   140009073:	push   rdi
   140009074:	push   r12
   140009076:	push   r13
   140009078:	push   r14
   14000907a:	push   r15
   14000907c:	lea    rbp,[rsp-0x3e0]
   140009084:	sub    rsp,0x4e0
   14000908b:	mov    rax,QWORD PTR [rip+0x3313e]        # 0x14003c1d0
   140009092:	xor    rax,rsp
   140009095:	mov    QWORD PTR [rbp+0x3d0],rax
   14000909c:	xor    eax,eax
   14000909e:	mov    rsi,rcx
   1400090a1:	mov    QWORD PTR [rsp+0x70],rcx
   1400090a6:	mov    QWORD PTR [rbp-0x78],rdx
   1400090aa:	lea    rcx,[rbp-0x70]
   1400090ae:	mov    rdx,r8
   1400090b1:	mov    r12,r9
   1400090b4:	mov    QWORD PTR [rsp+0x50],r9
   1400090b9:	mov    DWORD PTR [rbp-0x80],eax
   1400090bc:	mov    r14d,eax
   1400090bf:	mov    DWORD PTR [rsp+0x58],eax
   1400090c3:	mov    edi,eax
   1400090c5:	mov    DWORD PTR [rsp+0x44],eax
   1400090c9:	mov    DWORD PTR [rsp+0x48],eax
   1400090cd:	mov    DWORD PTR [rsp+0x7c],eax
   1400090d1:	mov    DWORD PTR [rsp+0x78],eax
   1400090d5:	mov    ebx,eax
   1400090d7:	mov    DWORD PTR [rsp+0x4c],eax
   1400090db:	call   0x140008fac
   1400090e0:	call   0x140009cb4
   1400090e5:	xor    r10d,r10d
   1400090e8:	mov    QWORD PTR [rbp-0x48],rax
   1400090ec:	test   rsi,rsi
   1400090ef:	jne    0x14000911b
   1400090f1:	call   0x140009cb4
   1400090f6:	mov    DWORD PTR [rax],0x16
   1400090fc:	call   0x140008d58
   140009101:	xor    ecx,ecx
   140009103:	cmp    BYTE PTR [rbp-0x58],cl
   140009106:	je     0x140009113
   140009108:	mov    rax,QWORD PTR [rbp-0x60]
   14000910c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140009113:	or     eax,0xffffffff
   140009116:	jmp    0x1400098f7
   14000911b:	mov    r8,QWORD PTR [rbp-0x78]
   14000911f:	test   r8,r8
   140009122:	je     0x1400090f1
   140009124:	movzx  r15d,WORD PTR [r8]
   140009128:	mov    esi,r10d
   14000912b:	mov    DWORD PTR [rsp+0x40],r10d
   140009130:	mov    r13d,r10d
   140009133:	mov    edx,r10d
   140009136:	mov    QWORD PTR [rbp-0x50],r10
   14000913a:	test   r15w,r15w
   14000913e:	je     0x1400098e4
   140009144:	mov    r11d,0x20
   14000914a:	mov    r9d,0x200
   140009150:	add    r8,0x2
   140009154:	mov    QWORD PTR [rbp-0x78],r8
   140009158:	test   esi,esi
   14000915a:	js     0x1400098e4
   140009160:	movzx  eax,r15w
   140009164:	mov    ecx,0x58
   140009169:	sub    ax,r11w
   14000916d:	cmp    ax,cx
   140009170:	ja     0x140009187
   140009172:	lea    rcx,[rip+0x2a077]        # 0x1400331f0
   140009179:	movzx  eax,r15w
   14000917d:	movsx  ecx,BYTE PTR [rax+rcx*1-0x20]
   140009182:	and    ecx,0xf
   140009185:	jmp    0x14000918a
   140009187:	mov    ecx,r10d
   14000918a:	movsxd rax,edx
   14000918d:	movsxd rcx,ecx
   140009190:	lea    rdx,[rax+rcx*8]
   140009194:	lea    rax,[rip+0x2a055]        # 0x1400331f0
   14000919b:	movsx  edx,BYTE PTR [rdx+rax*1]
   14000919f:	sar    edx,0x4
   1400091a2:	mov    DWORD PTR [rsp+0x68],edx
   1400091a6:	mov    ecx,edx
   1400091a8:	test   edx,edx
   1400091aa:	je     0x1400099ca
   1400091b0:	dec    ecx
   1400091b2:	je     0x140009ada
   1400091b8:	dec    ecx
   1400091ba:	je     0x140009a7f
   1400091c0:	dec    ecx
   1400091c2:	je     0x140009a3d
   1400091c8:	dec    ecx
   1400091ca:	je     0x140009a30
   1400091d0:	dec    ecx
   1400091d2:	je     0x1400099f5
   1400091d8:	dec    ecx
   1400091da:	je     0x140009921
   1400091e0:	dec    ecx
   1400091e2:	jne    0x1400098d6
   1400091e8:	movzx  ecx,r15w
   1400091ec:	cmp    ecx,0x64
   1400091ef:	jg     0x140009401
   1400091f5:	je     0x14000950a
   1400091fb:	cmp    ecx,0x41
   1400091fe:	je     0x1400093cd
   140009204:	cmp    ecx,0x43
   140009207:	je     0x140009357
   14000920d:	lea    eax,[rcx-0x45]
   140009210:	test   eax,0xfffffffd
   140009215:	je     0x1400093cd
   14000921b:	cmp    ecx,0x53
   14000921e:	je     0x1400092b1
   140009224:	mov    eax,0x58
   140009229:	cmp    ecx,eax
   14000922b:	je     0x14000948a
   140009231:	cmp    ecx,0x5a
   140009234:	je     0x14000924d
   140009236:	cmp    ecx,0x61
   140009239:	je     0x1400093d9
   14000923f:	cmp    ecx,0x63
   140009242:	je     0x140009363
   140009248:	jmp    0x14000931f
   14000924d:	mov    rax,QWORD PTR [r12]
   140009251:	add    r12,0x8
   140009255:	mov    QWORD PTR [rsp+0x50],r12
   14000925a:	test   rax,rax
   14000925d:	je     0x14000929a
   14000925f:	mov    rbx,QWORD PTR [rax+0x8]
   140009263:	test   rbx,rbx
   140009266:	je     0x14000929a
   140009268:	mov    edi,0x2d
   14000926d:	bt     r14d,0xb
   140009272:	jae    0x14000928c
   140009274:	movsx  eax,WORD PTR [rax]
   140009277:	mov    DWORD PTR [rsp+0x4c],0x1
   14000927f:	cdq    
   140009280:	sub    eax,edx
   140009282:	sar    eax,1
   140009284:	mov    r13d,eax
   140009287:	jmp    0x140009324
   14000928c:	movsx  r13d,WORD PTR [rax]
   140009290:	mov    DWORD PTR [rsp+0x4c],r10d
   140009295:	jmp    0x140009324
   14000929a:	mov    rbx,QWORD PTR [rip+0x33f7f]        # 0x14003d220
   1400092a1:	mov    rcx,rbx
   1400092a4:	call   0x140007550
   1400092a9:	xor    r10d,r10d
   1400092ac:	mov    r13,rax
   1400092af:	jmp    0x14000931f
   1400092b1:	test   r14d,0x830
   1400092b8:	jne    0x1400092bd
   1400092ba:	or     r14d,r11d
   1400092bd:	cmp    DWORD PTR [rsp+0x44],0xffffffff
   1400092c2:	mov    rbx,QWORD PTR [r12]
   1400092c6:	mov    eax,0x7fffffff
   1400092cb:	cmove  edi,eax
   1400092ce:	add    r12,0x8
   1400092d2:	mov    QWORD PTR [rsp+0x50],r12
   1400092d7:	test   r11b,r14b
   1400092da:	je     0x14000944a
   1400092e0:	test   rbx,rbx
   1400092e3:	mov    r13d,r10d
   1400092e6:	cmove  rbx,QWORD PTR [rip+0x33f32]        # 0x14003d220
   1400092ee:	mov    rsi,rbx
   1400092f1:	test   edi,edi
   1400092f3:	jle    0x14000931b
   1400092f5:	cmp    BYTE PTR [rsi],r10b
   1400092f8:	je     0x14000931b
   1400092fa:	movzx  ecx,BYTE PTR [rsi]
   1400092fd:	lea    rdx,[rbp-0x70]
   140009301:	call   0x140011e44
   140009306:	xor    r10d,r10d
   140009309:	test   eax,eax
   14000930b:	je     0x140009310
   14000930d:	inc    rsi
   140009310:	inc    r13d
   140009313:	inc    rsi
   140009316:	cmp    r13d,edi
   140009319:	jl     0x1400092f5
   14000931b:	mov    esi,DWORD PTR [rsp+0x40]
   14000931f:	mov    edi,0x2d
   140009324:	cmp    DWORD PTR [rsp+0x78],r10d
   140009329:	jne    0x1400098a2
   14000932f:	test   r14b,0x40
   140009333:	je     0x14000976d
   140009339:	bt     r14d,0x8
   14000933e:	jae    0x14000973f
   140009344:	mov    WORD PTR [rsp+0x5c],di
   140009349:	mov    edi,0x1
   14000934e:	mov    DWORD PTR [rsp+0x48],edi
   140009352:	jmp    0x140009771
   140009357:	test   r14d,0x830
   14000935e:	jne    0x140009363
   140009360:	or     r14d,r11d
   140009363:	movzx  eax,WORD PTR [r12]
   140009368:	add    r12,0x8
   14000936c:	mov    DWORD PTR [rsp+0x4c],0x1
   140009374:	mov    QWORD PTR [rsp+0x50],r12
   140009379:	mov    WORD PTR [rsp+0x60],ax
   14000937e:	test   r11b,r14b
   140009381:	je     0x1400093ba
   140009383:	mov    BYTE PTR [rsp+0x64],al
   140009387:	mov    rax,QWORD PTR [rbp-0x70]
   14000938b:	mov    BYTE PTR [rsp+0x65],r10b
   140009390:	movsxd r8,DWORD PTR [rax+0xd4]
   140009397:	lea    r9,[rbp-0x70]
   14000939b:	lea    rdx,[rsp+0x64]
   1400093a0:	lea    rcx,[rbp-0x30]
   1400093a4:	call   0x14001247c
   1400093a9:	xor    r10d,r10d
   1400093ac:	test   eax,eax
   1400093ae:	jns    0x1400093be
   1400093b0:	mov    DWORD PTR [rsp+0x78],0x1
   1400093b8:	jmp    0x1400093be
   1400093ba:	mov    WORD PTR [rbp-0x30],ax
   1400093be:	lea    rbx,[rbp-0x30]
   1400093c2:	mov    r13d,0x1
   1400093c8:	jmp    0x14000931f
   1400093cd:	mov    DWORD PTR [rsp+0x7c],0x1
   1400093d5:	add    r15w,r11w
   1400093d9:	mov    eax,0x67
   1400093de:	or     r14d,0x40
   1400093e2:	lea    rbx,[rbp-0x30]
   1400093e6:	mov    esi,r9d
   1400093e9:	test   edi,edi
   1400093eb:	jns    0x14000962e
   1400093f1:	mov    r13d,0x6
   1400093f7:	mov    DWORD PTR [rsp+0x44],r13d
   1400093fc:	jmp    0x140009681
   140009401:	mov    eax,0x67
   140009406:	cmp    ecx,eax
   140009408:	jle    0x1400093de
   14000940a:	cmp    ecx,0x69
   14000940d:	je     0x14000950a
   140009413:	cmp    ecx,0x6e
   140009416:	je     0x1400094d0
   14000941c:	cmp    ecx,0x6f
   14000941f:	je     0x1400094ba
   140009425:	cmp    ecx,0x70
   140009428:	je     0x140009480
   14000942a:	cmp    ecx,0x73
   14000942d:	je     0x1400092bd
   140009433:	cmp    ecx,0x75
   140009436:	je     0x14000950e
   14000943c:	cmp    ecx,0x78
   14000943f:	jne    0x14000931f
   140009445:	lea    eax,[rcx-0x51]
   140009448:	jmp    0x14000948f
   14000944a:	test   rbx,rbx
   14000944d:	mov    DWORD PTR [rsp+0x4c],0x1
   140009455:	cmove  rbx,QWORD PTR [rip+0x33dcb]        # 0x14003d228
   14000945d:	mov    rax,rbx
   140009460:	jmp    0x14000946e
   140009462:	dec    edi
   140009464:	cmp    WORD PTR [rax],r10w
   140009468:	je     0x140009472
   14000946a:	add    rax,0x2
   14000946e:	test   edi,edi
   140009470:	jne    0x140009462
   140009472:	sub    rax,rbx
   140009475:	sar    rax,1
   140009478:	mov    r13d,eax
   14000947b:	jmp    0x14000931f
   140009480:	mov    edi,0x10
   140009485:	bts    r14d,0xf
   14000948a:	mov    eax,0x7
   14000948f:	mov    DWORD PTR [rbp-0x80],eax
   140009492:	mov    r9d,0x10
   140009498:	mov    r15d,0x200
   14000949e:	test   r14b,r14b
   1400094a1:	jns    0x14000951a
   1400094a3:	lea    ecx,[r9+0x20]
   1400094a7:	add    ax,0x51
   1400094ab:	lea    edx,[rcx-0x2e]
   1400094ae:	mov    WORD PTR [rsp+0x5c],cx
   1400094b3:	mov    WORD PTR [rsp+0x5e],ax
   1400094b8:	jmp    0x14000951e
   1400094ba:	mov    r9d,0x8
   1400094c0:	test   r14b,r14b
   1400094c3:	jns    0x140009514
   1400094c5:	mov    r15d,0x200
   1400094cb:	or     r14d,r15d
   1400094ce:	jmp    0x14000951a
   1400094d0:	mov    rdi,QWORD PTR [r12]
   1400094d4:	add    r12,0x8
   1400094d8:	mov    QWORD PTR [rsp+0x50],r12
   1400094dd:	call   0x140012070
   1400094e2:	xor    r10d,r10d
   1400094e5:	test   eax,eax
   1400094e7:	je     0x1400090f1
   1400094ed:	lea    r11d,[r10+0x20]
   1400094f1:	test   r11b,r14b
   1400094f4:	je     0x1400094fb
   1400094f6:	mov    WORD PTR [rdi],si
   1400094f9:	jmp    0x1400094fd
   1400094fb:	mov    DWORD PTR [rdi],esi
   1400094fd:	mov    DWORD PTR [rsp+0x78],0x1
   140009505:	jmp    0x1400098a8
   14000950a:	or     r14d,0x40
   14000950e:	mov    r9d,0xa
   140009514:	mov    r15d,0x200
   14000951a:	mov    edx,DWORD PTR [rsp+0x48]
   14000951e:	mov    eax,0x8000
   140009523:	test   eax,r14d
   140009526:	je     0x140009532
   140009528:	mov    r8,QWORD PTR [r12]
   14000952c:	add    r12,0x8
   140009530:	jmp    0x14000956f
   140009532:	bt     r14d,0xc
   140009537:	jb     0x140009528
   140009539:	add    r12,0x8
   14000953d:	test   r11b,r14b
   140009540:	je     0x14000955d
   140009542:	mov    QWORD PTR [rsp+0x50],r12
   140009547:	test   r14b,0x40
   14000954b:	je     0x140009555
   14000954d:	movsx  r8,WORD PTR [r12-0x8]
   140009553:	jmp    0x140009574
   140009555:	movzx  r8d,WORD PTR [r12-0x8]
   14000955b:	jmp    0x140009574
   14000955d:	test   r14b,0x40
   140009561:	je     0x14000956a
   140009563:	movsxd r8,DWORD PTR [r12-0x8]
   140009568:	jmp    0x14000956f
   14000956a:	mov    r8d,DWORD PTR [r12-0x8]
   14000956f:	mov    QWORD PTR [rsp+0x50],r12
   140009574:	test   r14b,0x40
   140009578:	je     0x140009587
   14000957a:	test   r8,r8
   14000957d:	jns    0x140009587
   14000957f:	neg    r8
   140009582:	bts    r14d,0x8
   140009587:	test   eax,r14d
   14000958a:	jne    0x140009596
   14000958c:	bt     r14d,0xc
   140009591:	jb     0x140009596
   140009593:	mov    r8d,r8d
   140009596:	test   edi,edi
   140009598:	jns    0x1400095a1
   14000959a:	mov    edi,0x1
   14000959f:	jmp    0x1400095ac
   1400095a1:	and    r14d,0xfffffff7
   1400095a5:	cmp    edi,r15d
   1400095a8:	cmovg  edi,r15d
   1400095ac:	mov    esi,DWORD PTR [rbp-0x80]
   1400095af:	mov    rax,r8
   1400095b2:	lea    rbx,[rbp+0x1cf]
   1400095b9:	neg    rax
   1400095bc:	sbb    ecx,ecx
   1400095be:	and    ecx,edx
   1400095c0:	mov    DWORD PTR [rsp+0x48],ecx
   1400095c4:	mov    ecx,edi
   1400095c6:	dec    edi
   1400095c8:	test   ecx,ecx
   1400095ca:	jg     0x1400095d1
   1400095cc:	test   r8,r8
   1400095cf:	je     0x1400095f0
   1400095d1:	xor    edx,edx
   1400095d3:	mov    rax,r8
   1400095d6:	movsxd rcx,r9d
   1400095d9:	div    rcx
   1400095dc:	mov    r8,rax
   1400095df:	lea    eax,[rdx+0x30]
   1400095e2:	cmp    eax,0x39
   1400095e5:	jle    0x1400095e9
   1400095e7:	add    eax,esi
   1400095e9:	mov    BYTE PTR [rbx],al
   1400095eb:	dec    rbx
   1400095ee:	jmp    0x1400095c4
   1400095f0:	mov    esi,DWORD PTR [rsp+0x40]
   1400095f4:	lea    rax,[rbp+0x1cf]
   1400095fb:	mov    DWORD PTR [rsp+0x44],edi
   1400095ff:	sub    eax,ebx
   140009601:	inc    rbx
   140009604:	mov    r13d,eax
   140009607:	test   r15d,r14d
   14000960a:	je     0x14000931f
   140009610:	test   eax,eax
   140009612:	mov    eax,0x30
   140009617:	je     0x140009621
   140009619:	cmp    BYTE PTR [rbx],al
   14000961b:	je     0x14000931f
   140009621:	dec    rbx
   140009624:	inc    r13d
   140009627:	mov    BYTE PTR [rbx],al
   140009629:	jmp    0x14000931f
   14000962e:	jne    0x140009641
   140009630:	cmp    r15w,ax
   140009634:	jne    0x140009677
   140009636:	mov    r13d,0x1
   14000963c:	jmp    0x1400093f7
   140009641:	cmp    edi,r9d
   140009644:	mov    r13d,0xa3
   14000964a:	cmovg  edi,r9d
   14000964e:	mov    DWORD PTR [rsp+0x44],edi
   140009652:	cmp    edi,r13d
   140009655:	jle    0x14000967e
   140009657:	add    edi,0x15d
   14000965d:	movsxd rcx,edi
   140009660:	call   0x140008684
   140009665:	mov    QWORD PTR [rbp-0x50],rax
   140009669:	test   rax,rax
   14000966c:	je     0x1400093f7
   140009672:	mov    rbx,rax
   140009675:	mov    esi,edi
   140009677:	mov    r13d,DWORD PTR [rsp+0x44]
   14000967c:	jmp    0x140009681
   14000967e:	mov    r13d,edi
   140009681:	mov    rax,QWORD PTR [r12]
   140009685:	mov    rcx,QWORD PTR [rip+0x32b84]        # 0x14003c210
   14000968c:	add    r12,0x8
   140009690:	mov    QWORD PTR [rsp+0x50],r12
   140009695:	movsx  edi,r15b
   140009699:	movsxd rsi,esi
   14000969c:	mov    QWORD PTR [rbp-0x40],rax
   1400096a0:	call   QWORD PTR [rip+0x22a72]        # 0x14002c118
   1400096a6:	lea    rcx,[rbp-0x70]
   1400096aa:	mov    QWORD PTR [rsp+0x30],rcx
   1400096af:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400096b3:	mov    r9d,edi
   1400096b6:	mov    DWORD PTR [rsp+0x28],ecx
   1400096ba:	lea    rcx,[rbp-0x40]
   1400096be:	mov    r8,rsi
   1400096c1:	mov    rdx,rbx
   1400096c4:	mov    DWORD PTR [rsp+0x20],r13d
   1400096c9:	call   rax
   1400096cb:	mov    edi,r14d
   1400096ce:	and    edi,0x80
   1400096d4:	je     0x1400096f1
   1400096d6:	test   r13d,r13d
   1400096d9:	jne    0x1400096f1
   1400096db:	mov    rcx,QWORD PTR [rip+0x32b46]        # 0x14003c228
   1400096e2:	call   QWORD PTR [rip+0x22a30]        # 0x14002c118
   1400096e8:	lea    rdx,[rbp-0x70]
   1400096ec:	mov    rcx,rbx
   1400096ef:	call   rax
   1400096f1:	mov    ecx,0x67
   1400096f6:	cmp    r15w,cx
   1400096fa:	jne    0x140009716
   1400096fc:	test   edi,edi
   1400096fe:	jne    0x140009716
   140009700:	mov    rcx,QWORD PTR [rip+0x32b19]        # 0x14003c220
   140009707:	call   QWORD PTR [rip+0x22a0b]        # 0x14002c118
   14000970d:	lea    rdx,[rbp-0x70]
   140009711:	mov    rcx,rbx
   140009714:	call   rax
   140009716:	mov    edi,0x2d
   14000971b:	cmp    BYTE PTR [rbx],dil
   14000971e:	jne    0x140009728
   140009720:	bts    r14d,0x8
   140009725:	inc    rbx
   140009728:	mov    rcx,rbx
   14000972b:	call   0x140007550
   140009730:	mov    esi,DWORD PTR [rsp+0x40]
   140009734:	xor    r10d,r10d
   140009737:	mov    r13d,eax
   14000973a:	jmp    0x140009324
   14000973f:	test   r14b,0x1
   140009743:	je     0x140009754
   140009745:	mov    eax,0x2b
   14000974a:	mov    WORD PTR [rsp+0x5c],ax
   14000974f:	jmp    0x140009349
   140009754:	test   r14b,0x2
   140009758:	je     0x14000976d
   14000975a:	mov    eax,0x20
   14000975f:	mov    WORD PTR [rsp+0x5c],ax
   140009764:	lea    edi,[rax-0x1f]
   140009767:	mov    DWORD PTR [rsp+0x48],edi
   14000976b:	jmp    0x140009776
   14000976d:	mov    edi,DWORD PTR [rsp+0x48]
   140009771:	mov    eax,0x20
   140009776:	mov    r15d,DWORD PTR [rsp+0x58]
   14000977b:	mov    rsi,QWORD PTR [rsp+0x70]
   140009780:	sub    r15d,r13d
   140009783:	sub    r15d,edi
   140009786:	test   r14b,0xc
   14000978a:	jne    0x14000979e
   14000978c:	lea    r9,[rsp+0x40]
   140009791:	mov    ecx,eax
   140009793:	mov    r8,rsi
   140009796:	mov    edx,r15d
   140009799:	call   0x140009b54
   14000979e:	mov    rax,QWORD PTR [rbp-0x48]
   1400097a2:	lea    r9,[rsp+0x40]
   1400097a7:	lea    rcx,[rsp+0x5c]
   1400097ac:	mov    r8,rsi
   1400097af:	mov    edx,edi
   1400097b1:	mov    QWORD PTR [rsp+0x20],rax
   1400097b6:	call   0x140009ba8
   1400097bb:	mov    rdi,QWORD PTR [rsp+0x70]
   1400097c0:	test   r14b,0x8
   1400097c4:	je     0x1400097e1
   1400097c6:	test   r14b,0x4
   1400097ca:	jne    0x1400097e1
   1400097cc:	lea    r9,[rsp+0x40]
   1400097d1:	mov    ecx,0x30
   1400097d6:	mov    r8,rdi
   1400097d9:	mov    edx,r15d
   1400097dc:	call   0x140009b54
   1400097e1:	xor    eax,eax
   1400097e3:	cmp    DWORD PTR [rsp+0x4c],eax
   1400097e7:	jne    0x140009859
   1400097e9:	test   r13d,r13d
   1400097ec:	jle    0x140009859
   1400097ee:	mov    rdi,rbx
   1400097f1:	mov    esi,r13d
   1400097f4:	mov    rax,QWORD PTR [rbp-0x70]
   1400097f8:	lea    r9,[rbp-0x70]
   1400097fc:	lea    rcx,[rsp+0x60]
   140009801:	movsxd r8,DWORD PTR [rax+0xd4]
   140009808:	mov    rdx,rdi
   14000980b:	dec    esi
   14000980d:	call   0x14001247c
   140009812:	xor    r10d,r10d
   140009815:	movsxd r12,eax
   140009818:	test   eax,eax
   14000981a:	jle    0x140009846
   14000981c:	mov    rdx,QWORD PTR [rsp+0x70]
   140009821:	movzx  ecx,WORD PTR [rsp+0x60]
   140009826:	lea    r8,[rsp+0x40]
   14000982b:	call   0x140009b1c
   140009830:	add    rdi,r12
   140009833:	xor    r10d,r10d
   140009836:	test   esi,esi
   140009838:	jg     0x1400097f4
   14000983a:	mov    r12,QWORD PTR [rsp+0x50]
   14000983f:	mov    rdi,QWORD PTR [rsp+0x70]
   140009844:	jmp    0x140009878
   140009846:	mov    r12,QWORD PTR [rsp+0x50]
   14000984b:	mov    rdi,QWORD PTR [rsp+0x70]
   140009850:	or     esi,0xffffffff
   140009853:	mov    DWORD PTR [rsp+0x40],esi
   140009857:	jmp    0x14000987c
   140009859:	mov    rax,QWORD PTR [rbp-0x48]
   14000985d:	lea    r9,[rsp+0x40]
   140009862:	mov    r8,rdi
   140009865:	mov    edx,r13d
   140009868:	mov    rcx,rbx
   14000986b:	mov    QWORD PTR [rsp+0x20],rax
   140009870:	call   0x140009ba8
   140009875:	xor    r10d,r10d
   140009878:	mov    esi,DWORD PTR [rsp+0x40]
   14000987c:	test   esi,esi
   14000987e:	js     0x1400098a2
   140009880:	test   r14b,0x4
   140009884:	je     0x1400098a2
   140009886:	lea    r9,[rsp+0x40]
   14000988b:	mov    ecx,0x20
   140009890:	mov    r8,rdi
   140009893:	mov    edx,r15d
   140009896:	call   0x140009b54
   14000989b:	mov    esi,DWORD PTR [rsp+0x40]
   14000989f:	xor    r10d,r10d
   1400098a2:	mov    r11d,0x20
   1400098a8:	mov    rax,QWORD PTR [rbp-0x50]
   1400098ac:	test   rax,rax
   1400098af:	je     0x1400098c4
   1400098b1:	mov    rcx,rax
   1400098b4:	call   0x140007dc0
   1400098b9:	xor    r10d,r10d
   1400098bc:	lea    r11d,[r10+0x20]
   1400098c0:	mov    QWORD PTR [rbp-0x50],r10
   1400098c4:	mov    edi,DWORD PTR [rsp+0x44]
   1400098c8:	mov    r8,QWORD PTR [rbp-0x78]
   1400098cc:	mov    edx,DWORD PTR [rsp+0x68]
   1400098d0:	mov    r9d,0x200
   1400098d6:	movzx  r15d,WORD PTR [r8]
   1400098da:	test   r15w,r15w
   1400098de:	jne    0x140009150
   1400098e4:	cmp    BYTE PTR [rbp-0x58],r10b
   1400098e8:	je     0x1400098f5
   1400098ea:	mov    rcx,QWORD PTR [rbp-0x60]
   1400098ee:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400098f5:	mov    eax,esi
   1400098f7:	mov    rcx,QWORD PTR [rbp+0x3d0]
   1400098fe:	xor    rcx,rsp
   140009901:	call   0x14000c380
   140009906:	mov    rbx,QWORD PTR [rsp+0x530]
   14000990e:	add    rsp,0x4e0
   140009915:	pop    r15
   140009917:	pop    r14
   140009919:	pop    r13
   14000991b:	pop    r12
   14000991d:	pop    rdi
   14000991e:	pop    rsi
   14000991f:	pop    rbp
   140009920:	ret    
   140009921:	movzx  eax,r15w
   140009925:	cmp    eax,0x49
   140009928:	je     0x140009966
   14000992a:	cmp    eax,0x68
   14000992d:	je     0x14000995e
   14000992f:	mov    ecx,0x6c
   140009934:	cmp    eax,ecx
   140009936:	je     0x140009944
   140009938:	cmp    eax,0x77
   14000993b:	jne    0x1400098d6
   14000993d:	bts    r14d,0xb
   140009942:	jmp    0x1400098d6
   140009944:	cmp    WORD PTR [r8],cx
   140009948:	jne    0x140009955
   14000994a:	add    r8,0x2
   14000994e:	bts    r14d,0xc
   140009953:	jmp    0x1400098d6
   140009955:	or     r14d,0x10
   140009959:	jmp    0x1400098d6
   14000995e:	or     r14d,r11d
   140009961:	jmp    0x1400098d6
   140009966:	movzx  eax,WORD PTR [r8]
   14000996a:	bts    r14d,0xf
   14000996f:	cmp    ax,0x36
   140009973:	jne    0x14000998b
   140009975:	cmp    WORD PTR [r8+0x2],0x34
   14000997b:	jne    0x14000998b
   14000997d:	add    r8,0x4
   140009981:	bts    r14d,0xf
   140009986:	jmp    0x1400098d6
   14000998b:	cmp    ax,0x33
   14000998f:	jne    0x1400099a7
   140009991:	cmp    WORD PTR [r8+0x2],0x32
   140009997:	jne    0x1400099a7
   140009999:	add    r8,0x4
   14000999d:	btr    r14d,0xf
   1400099a2:	jmp    0x1400098d6
   1400099a7:	sub    ax,0x58
   1400099ab:	cmp    ax,r11w
   1400099af:	ja     0x1400099c5
   1400099b1:	movabs rcx,0x120821001
   1400099bb:	bt     rcx,rax
   1400099bf:	jb     0x1400098d6
   1400099c5:	mov    DWORD PTR [rsp+0x68],r10d
   1400099ca:	mov    rdx,QWORD PTR [rsp+0x70]
   1400099cf:	lea    r8,[rsp+0x40]
   1400099d4:	movzx  ecx,r15w
   1400099d8:	mov    DWORD PTR [rsp+0x4c],0x1
   1400099e0:	call   0x140009b1c
   1400099e5:	mov    esi,DWORD PTR [rsp+0x40]
   1400099e9:	xor    r10d,r10d
   1400099ec:	lea    r11d,[r10+0x20]
   1400099f0:	jmp    0x1400098c8
   1400099f5:	cmp    r15w,0x2a
   1400099fa:	jne    0x140009a1a
   1400099fc:	mov    edi,DWORD PTR [r12]
   140009a00:	add    r12,0x8
   140009a04:	mov    QWORD PTR [rsp+0x50],r12
   140009a09:	mov    DWORD PTR [rsp+0x44],edi
   140009a0d:	test   edi,edi
   140009a0f:	jns    0x1400098d6
   140009a15:	or     edi,0xffffffff
   140009a18:	jmp    0x140009a27
   140009a1a:	lea    edi,[rdi+rdi*4]
   140009a1d:	movzx  eax,r15w
   140009a21:	lea    edi,[rdi-0x18]
   140009a24:	lea    edi,[rax+rdi*2]
   140009a27:	mov    DWORD PTR [rsp+0x44],edi
   140009a2b:	jmp    0x1400098d6
   140009a30:	mov    edi,r10d
   140009a33:	mov    DWORD PTR [rsp+0x44],r10d
   140009a38:	jmp    0x1400098d6
   140009a3d:	cmp    r15w,0x2a
   140009a42:	jne    0x140009a65
   140009a44:	mov    eax,DWORD PTR [r12]
   140009a48:	add    r12,0x8
   140009a4c:	mov    QWORD PTR [rsp+0x50],r12
   140009a51:	mov    DWORD PTR [rsp+0x58],eax
   140009a55:	test   eax,eax
   140009a57:	jns    0x1400098d6
   140009a5d:	or     r14d,0x4
   140009a61:	neg    eax
   140009a63:	jmp    0x140009a76
   140009a65:	mov    eax,DWORD PTR [rsp+0x58]
   140009a69:	lea    ecx,[rax+rax*4]
   140009a6c:	movzx  eax,r15w
   140009a70:	lea    eax,[rax+rcx*2]
   140009a73:	add    eax,0xffffffd0
   140009a76:	mov    DWORD PTR [rsp+0x58],eax
   140009a7a:	jmp    0x1400098d6
   140009a7f:	movzx  eax,r15w
   140009a83:	cmp    eax,r11d
   140009a86:	je     0x140009ad1
   140009a88:	cmp    eax,0x23
   140009a8b:	je     0x140009ac7
   140009a8d:	mov    ecx,0x2b
   140009a92:	cmp    eax,ecx
   140009a94:	je     0x140009abe
   140009a96:	mov    ecx,0x2d
   140009a9b:	cmp    eax,ecx
   140009a9d:	je     0x140009ab5
   140009a9f:	mov    ecx,0x30
   140009aa4:	cmp    eax,ecx
   140009aa6:	jne    0x1400098d6
   140009aac:	or     r14d,0x8
   140009ab0:	jmp    0x1400098d6
   140009ab5:	or     r14d,0x4
   140009ab9:	jmp    0x1400098d6
   140009abe:	or     r14d,0x1
   140009ac2:	jmp    0x1400098d6
   140009ac7:	bts    r14d,0x7
   140009acc:	jmp    0x1400098d6
   140009ad1:	or     r14d,0x2
   140009ad5:	jmp    0x1400098d6
   140009ada:	or     edi,0xffffffff
   140009add:	mov    DWORD PTR [rsp+0x7c],r10d
   140009ae2:	mov    DWORD PTR [rsp+0x78],r10d
   140009ae7:	mov    DWORD PTR [rsp+0x58],r10d
   140009aec:	mov    DWORD PTR [rsp+0x48],r10d
   140009af1:	mov    r14d,r10d
   140009af4:	mov    DWORD PTR [rsp+0x44],edi
   140009af8:	mov    DWORD PTR [rsp+0x4c],r10d
   140009afd:	jmp    0x1400098d6
   140009b02:	int3   
   140009b03:	int3   
   140009b04:	add    QWORD PTR [rcx],0x8
   140009b08:	mov    rax,QWORD PTR [rcx]
   140009b0b:	mov    rax,QWORD PTR [rax-0x8]
   140009b0f:	ret    
   140009b10:	add    QWORD PTR [rcx],0x8
   140009b14:	mov    rax,QWORD PTR [rcx]
   140009b17:	mov    eax,DWORD PTR [rax-0x8]
   140009b1a:	ret    
   140009b1b:	int3   
   140009b1c:	rex push rbx
   140009b1e:	sub    rsp,0x20
   140009b22:	test   BYTE PTR [rdx+0x18],0x40
   140009b26:	mov    rbx,r8
   140009b29:	je     0x140009b37
   140009b2b:	cmp    QWORD PTR [rdx+0x10],0x0
   140009b30:	jne    0x140009b37
   140009b32:	inc    DWORD PTR [r8]
   140009b35:	jmp    0x140009b4d
   140009b37:	call   0x140012218
   140009b3c:	mov    ecx,0xffff
   140009b41:	cmp    ax,cx
   140009b44:	jne    0x140009b4b
   140009b46:	or     DWORD PTR [rbx],0xffffffff
   140009b49:	jmp    0x140009b4d
   140009b4b:	inc    DWORD PTR [rbx]
   140009b4d:	add    rsp,0x20
   140009b51:	pop    rbx
   140009b52:	ret    
   140009b53:	int3   
   140009b54:	test   edx,edx
   140009b56:	jle    0x140009ba4
   140009b58:	mov    QWORD PTR [rsp+0x8],rbx
   140009b5d:	mov    QWORD PTR [rsp+0x10],rbp
   140009b62:	mov    QWORD PTR [rsp+0x18],rsi
   140009b67:	push   rdi
   140009b68:	sub    rsp,0x20
   140009b6c:	mov    rdi,r9
   140009b6f:	mov    rsi,r8
   140009b72:	mov    ebx,edx
   140009b74:	movzx  ebp,cx
   140009b77:	mov    r8,rdi
   140009b7a:	mov    rdx,rsi
   140009b7d:	movzx  ecx,bp
   140009b80:	dec    ebx
   140009b82:	call   0x140009b1c
   140009b87:	cmp    DWORD PTR [rdi],0xffffffff
   140009b8a:	je     0x140009b90
   140009b8c:	test   ebx,ebx
   140009b8e:	jg     0x140009b77
   140009b90:	mov    rbx,QWORD PTR [rsp+0x30]
   140009b95:	mov    rbp,QWORD PTR [rsp+0x38]
   140009b9a:	mov    rsi,QWORD PTR [rsp+0x40]
   140009b9f:	add    rsp,0x20
   140009ba3:	pop    rdi
   140009ba4:	ret    
   140009ba5:	int3   
   140009ba6:	int3   
   140009ba7:	int3   
   140009ba8:	mov    QWORD PTR [rsp+0x8],rbx
   140009bad:	mov    QWORD PTR [rsp+0x10],rbp
   140009bb2:	mov    QWORD PTR [rsp+0x18],rsi
   140009bb7:	push   rdi
   140009bb8:	push   r14
   140009bba:	push   r15
   140009bbc:	sub    rsp,0x20
   140009bc0:	test   BYTE PTR [r8+0x18],0x40
   140009bc5:	mov    rbx,QWORD PTR [rsp+0x60]
   140009bca:	mov    rdi,r9
   140009bcd:	mov    r15d,DWORD PTR [rbx]
   140009bd0:	mov    rbp,r8
   140009bd3:	mov    esi,edx
   140009bd5:	mov    r14,rcx
   140009bd8:	je     0x140009be6
   140009bda:	cmp    QWORD PTR [r8+0x10],0x0
   140009bdf:	jne    0x140009be6
   140009be1:	add    DWORD PTR [r9],edx
   140009be4:	jmp    0x140009c28
   140009be6:	and    DWORD PTR [rbx],0x0
   140009be9:	test   edx,edx
   140009beb:	jle    0x140009c25
   140009bed:	movzx  ecx,WORD PTR [r14]
   140009bf1:	mov    r8,rdi
   140009bf4:	mov    rdx,rbp
   140009bf7:	dec    esi
   140009bf9:	call   0x140009b1c
   140009bfe:	cmp    DWORD PTR [rdi],0xffffffff
   140009c01:	lea    r14,[r14+0x2]
   140009c05:	jne    0x140009c1c
   140009c07:	cmp    DWORD PTR [rbx],0x2a
   140009c0a:	jne    0x140009c20
   140009c0c:	mov    ecx,0x3f
   140009c11:	mov    r8,rdi
   140009c14:	mov    rdx,rbp
   140009c17:	call   0x140009b1c
   140009c1c:	test   esi,esi
   140009c1e:	jg     0x140009bed
   140009c20:	cmp    DWORD PTR [rbx],0x0
   140009c23:	jne    0x140009c28
   140009c25:	mov    DWORD PTR [rbx],r15d
   140009c28:	mov    rbx,QWORD PTR [rsp+0x40]
   140009c2d:	mov    rbp,QWORD PTR [rsp+0x48]
   140009c32:	mov    rsi,QWORD PTR [rsp+0x50]
   140009c37:	add    rsp,0x20
   140009c3b:	pop    r15
   140009c3d:	pop    r14
   140009c3f:	pop    rdi
   140009c40:	ret    
   140009c41:	int3   
   140009c42:	int3   
   140009c43:	int3   
   140009c44:	sub    rsp,0x28
   140009c48:	call   0x14000a410
   140009c4d:	test   rax,rax
   140009c50:	jne    0x140009c5b
   140009c52:	lea    rax,[rip+0x32563]        # 0x14003c1bc
   140009c59:	jmp    0x140009c5f
   140009c5b:	add    rax,0x14
   140009c5f:	add    rsp,0x28
   140009c63:	ret    
   140009c64:	mov    QWORD PTR [rsp+0x8],rbx
   140009c69:	push   rdi
   140009c6a:	sub    rsp,0x20
   140009c6e:	mov    edi,ecx
   140009c70:	call   0x14000a410
   140009c75:	test   rax,rax
   140009c78:	jne    0x140009c83
   140009c7a:	lea    rax,[rip+0x3253b]        # 0x14003c1bc
   140009c81:	jmp    0x140009c87
   140009c83:	add    rax,0x14
   140009c87:	mov    DWORD PTR [rax],edi
   140009c89:	call   0x14000a410
   140009c8e:	lea    rbx,[rip+0x32523]        # 0x14003c1b8
   140009c95:	test   rax,rax
   140009c98:	je     0x140009c9e
   140009c9a:	lea    rbx,[rax+0x10]
   140009c9e:	mov    ecx,edi
   140009ca0:	call   0x140009d4c
   140009ca5:	mov    DWORD PTR [rbx],eax
   140009ca7:	mov    rbx,QWORD PTR [rsp+0x30]
   140009cac:	add    rsp,0x20
   140009cb0:	pop    rdi
   140009cb1:	ret    
   140009cb2:	int3   
   140009cb3:	int3   
   140009cb4:	sub    rsp,0x28
   140009cb8:	call   0x14000a410
   140009cbd:	test   rax,rax
   140009cc0:	jne    0x140009ccb
   140009cc2:	lea    rax,[rip+0x324ef]        # 0x14003c1b8
   140009cc9:	jmp    0x140009ccf
   140009ccb:	add    rax,0x10
   140009ccf:	add    rsp,0x28
   140009cd3:	ret    
   140009cd4:	rex push rbx
   140009cd6:	sub    rsp,0x20
   140009cda:	mov    rbx,rcx
   140009cdd:	test   rcx,rcx
   140009ce0:	jne    0x140009cec
   140009ce2:	call   0x140008d58
   140009ce7:	lea    eax,[rbx+0x16]
   140009cea:	jmp    0x140009d09
   140009cec:	call   0x14000a410
   140009cf1:	test   rax,rax
   140009cf4:	jne    0x140009cff
   140009cf6:	lea    rax,[rip+0x324bf]        # 0x14003c1bc
   140009cfd:	jmp    0x140009d03
   140009cff:	add    rax,0x14
   140009d03:	mov    eax,DWORD PTR [rax]
   140009d05:	mov    DWORD PTR [rbx],eax
   140009d07:	xor    eax,eax
   140009d09:	add    rsp,0x20
   140009d0d:	pop    rbx
   140009d0e:	ret    
   140009d0f:	int3   
   140009d10:	rex push rbx
   140009d12:	sub    rsp,0x20
   140009d16:	mov    rbx,rcx
   140009d19:	test   rcx,rcx
   140009d1c:	jne    0x140009d28
   140009d1e:	call   0x140008d58
   140009d23:	lea    eax,[rbx+0x16]
   140009d26:	jmp    0x140009d45
   140009d28:	call   0x14000a410
   140009d2d:	test   rax,rax
   140009d30:	jne    0x140009d3b
   140009d32:	lea    rax,[rip+0x3247f]        # 0x14003c1b8
   140009d39:	jmp    0x140009d3f
   140009d3b:	add    rax,0x10
   140009d3f:	mov    eax,DWORD PTR [rax]
   140009d41:	mov    DWORD PTR [rbx],eax
   140009d43:	xor    eax,eax
   140009d45:	add    rsp,0x20
   140009d49:	pop    rbx
   140009d4a:	ret    
   140009d4b:	int3   
   140009d4c:	lea    r10,[rip+0x322fd]        # 0x14003c050
   140009d53:	xor    edx,edx
   140009d55:	mov    r8,r10
   140009d58:	lea    r9d,[rdx+0x8]
   140009d5c:	cmp    ecx,DWORD PTR [r8]
   140009d5f:	je     0x140009d90
   140009d61:	inc    edx
   140009d63:	add    r8,r9
   140009d66:	movsxd rax,edx
   140009d69:	cmp    rax,0x2d
   140009d6d:	jb     0x140009d5c
   140009d6f:	lea    eax,[rcx-0x13]
   140009d72:	cmp    eax,0x11
   140009d75:	ja     0x140009d7d
   140009d77:	mov    eax,0xd
   140009d7c:	ret    
   140009d7d:	add    ecx,0xffffff44
   140009d83:	mov    eax,0x16
   140009d88:	cmp    ecx,0xe
   140009d8b:	cmovbe eax,r9d
   140009d8f:	ret    
   140009d90:	movsxd rax,edx
   140009d93:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   140009d98:	ret    
   140009d99:	int3   
   140009d9a:	int3   
   140009d9b:	int3   
   140009d9c:	rex push rbx
   140009d9e:	sub    rsp,0x20
   140009da2:	mov    ebx,ecx
   140009da4:	call   0x14000a410
   140009da9:	test   rax,rax
   140009dac:	jne    0x140009db5
   140009dae:	mov    eax,0xc
   140009db3:	jmp    0x140009dd0
   140009db5:	call   0x14000a410
   140009dba:	test   rax,rax
   140009dbd:	jne    0x140009dc8
   140009dbf:	lea    rax,[rip+0x323f6]        # 0x14003c1bc
   140009dc6:	jmp    0x140009dcc
   140009dc8:	add    rax,0x14
   140009dcc:	mov    DWORD PTR [rax],ebx
   140009dce:	xor    eax,eax
   140009dd0:	add    rsp,0x20
   140009dd4:	pop    rbx
   140009dd5:	ret    
   140009dd6:	int3   
   140009dd7:	int3   
   140009dd8:	rex push rbx
   140009dda:	sub    rsp,0x20
   140009dde:	mov    ebx,ecx
   140009de0:	call   0x14000a410
   140009de5:	test   rax,rax
   140009de8:	jne    0x140009df1
   140009dea:	mov    eax,0xc
   140009def:	jmp    0x140009e0c
   140009df1:	call   0x14000a410
   140009df6:	test   rax,rax
   140009df9:	jne    0x140009e04
   140009dfb:	lea    rax,[rip+0x323b6]        # 0x14003c1b8
   140009e02:	jmp    0x140009e08
   140009e04:	add    rax,0x10
   140009e08:	mov    DWORD PTR [rax],ebx
   140009e0a:	xor    eax,eax
   140009e0c:	add    rsp,0x20
   140009e10:	pop    rbx
   140009e11:	ret    
   140009e12:	int3   
   140009e13:	int3   
   140009e14:	rex push rbx
   140009e16:	sub    rsp,0x20
   140009e1a:	call   0x140013140
   140009e1f:	mov    ebx,eax
   140009e21:	and    ebx,0x3f
   140009e24:	call   0x14001315a
   140009e29:	mov    eax,ebx
   140009e2b:	add    rsp,0x20
   140009e2f:	pop    rbx
   140009e30:	ret    
   140009e31:	int3   
   140009e32:	int3   
   140009e33:	int3   
   140009e34:	mov    QWORD PTR [rsp+0x18],rbx
   140009e39:	mov    QWORD PTR [rsp+0x20],rsi
   140009e3e:	push   rdi
   140009e3f:	sub    rsp,0x20
   140009e43:	mov    rbx,rdx
   140009e46:	mov    rdi,rcx
   140009e49:	call   0x140013140
   140009e4e:	mov    esi,eax
   140009e50:	mov    DWORD PTR [rsp+0x38],eax
   140009e54:	mov    ecx,ebx
   140009e56:	not    ecx
   140009e58:	or     ecx,0xffff807f
   140009e5e:	and    ecx,eax
   140009e60:	and    edi,ebx
   140009e62:	or     ecx,edi
   140009e64:	mov    DWORD PTR [rsp+0x30],ecx
   140009e68:	cmp    BYTE PTR [rip+0x32351],0x0        # 0x14003c1c0
   140009e6f:	je     0x140009e96
   140009e71:	test   cl,0x40
   140009e74:	je     0x140009e96
   140009e76:	call   0x140013150
   140009e7b:	jmp    0x140009e94
   140009e7d:	mov    BYTE PTR [rip+0x3233c],0x0        # 0x14003c1c0
   140009e84:	mov    ecx,DWORD PTR [rsp+0x30]
   140009e88:	and    ecx,0xffffffbf
   140009e8b:	call   0x140013150
   140009e90:	mov    esi,DWORD PTR [rsp+0x38]
   140009e94:	jmp    0x140009e9e
   140009e96:	and    ecx,0xffffffbf
   140009e99:	call   0x140013150
   140009e9e:	mov    eax,esi
   140009ea0:	mov    rbx,QWORD PTR [rsp+0x40]
   140009ea5:	mov    rsi,QWORD PTR [rsp+0x48]
   140009eaa:	add    rsp,0x20
   140009eae:	pop    rdi
   140009eaf:	ret    
   140009eb0:	rex push rbx
   140009eb2:	sub    rsp,0x20
   140009eb6:	mov    rbx,rcx
   140009eb9:	call   0x140013140
   140009ebe:	and    ebx,0x3f
   140009ec1:	or     eax,ebx
   140009ec3:	mov    ecx,eax
   140009ec5:	add    rsp,0x20
   140009ec9:	pop    rbx
   140009eca:	jmp    0x140013150
   140009ecf:	int3   
   140009ed0:	sub    rsp,0x28
   140009ed4:	call   0x140013140
   140009ed9:	and    eax,0x3f
   140009edc:	add    rsp,0x28
   140009ee0:	ret    
   140009ee1:	int3   
   140009ee2:	int3   
   140009ee3:	int3   
   140009ee4:	mov    rax,rsp
   140009ee7:	push   rbx
   140009ee8:	sub    rsp,0x50
   140009eec:	movsd  xmm0,QWORD PTR [rsp+0x80]
   140009ef5:	movsd  xmm1,QWORD PTR [rsp+0x88]
   140009efe:	mov    ebx,ecx
   140009f00:	mov    DWORD PTR [rax-0x38],ecx
   140009f03:	mov    rcx,QWORD PTR [rsp+0x90]
   140009f0b:	mov    edx,0xffc0
   140009f10:	movsd  QWORD PTR [rax-0x28],xmm3
   140009f15:	movsd  QWORD PTR [rax-0x20],xmm0
   140009f1a:	movsd  QWORD PTR [rax-0x18],xmm1
   140009f1f:	mov    QWORD PTR [rax-0x30],r8
   140009f23:	call   0x140009e34
   140009f28:	lea    rcx,[rsp+0x20]
   140009f2d:	call   0x140013b80
   140009f32:	test   eax,eax
   140009f34:	jne    0x140009f3d
   140009f36:	mov    ecx,ebx
   140009f38:	call   0x140013a7c
   140009f3d:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140009f43:	add    rsp,0x50
   140009f47:	pop    rbx
   140009f48:	ret    
   140009f49:	int3   
   140009f4a:	int3   
   140009f4b:	int3   
   140009f4c:	mov    QWORD PTR [rsp+0x8],rbx
   140009f51:	mov    QWORD PTR [rsp+0x10],rsi
   140009f56:	push   rdi
   140009f57:	sub    rsp,0x20
   140009f5b:	mov    ebx,ecx
   140009f5d:	mov    rsi,rdx
   140009f60:	mov    edi,ecx
   140009f62:	and    ebx,0x1f
   140009f65:	test   cl,0x8
   140009f68:	je     0x140009f7d
   140009f6a:	test   dl,dl
   140009f6c:	jns    0x140009f7d
   140009f6e:	mov    ecx,0x1
   140009f73:	call   0x140009eb0
   140009f78:	and    ebx,0xfffffff7
   140009f7b:	jmp    0x140009fd4
   140009f7d:	mov    ecx,0x4
   140009f82:	test   cl,dil
   140009f85:	je     0x140009f98
   140009f87:	bt     rdx,0x9
   140009f8c:	jae    0x140009f98
   140009f8e:	call   0x140009eb0
   140009f93:	and    ebx,0xfffffffb
   140009f96:	jmp    0x140009fd4
   140009f98:	test   dil,0x1
   140009f9c:	je     0x140009fb4
   140009f9e:	bt     rdx,0xa
   140009fa3:	jae    0x140009fb4
   140009fa5:	mov    ecx,0x8
   140009faa:	call   0x140009eb0
   140009faf:	and    ebx,0xfffffffe
   140009fb2:	jmp    0x140009fd4
   140009fb4:	test   dil,0x2
   140009fb8:	je     0x140009fd4
   140009fba:	bt     rdx,0xb
   140009fbf:	jae    0x140009fd4
   140009fc1:	test   dil,0x10
   140009fc5:	je     0x140009fd1
   140009fc7:	mov    ecx,0x10
   140009fcc:	call   0x140009eb0
   140009fd1:	and    ebx,0xfffffffd
   140009fd4:	test   dil,0x10
   140009fd8:	je     0x140009fee
   140009fda:	bt     rsi,0xc
   140009fdf:	jae    0x140009fee
   140009fe1:	mov    ecx,0x20
   140009fe6:	call   0x140009eb0
   140009feb:	and    ebx,0xffffffef
   140009fee:	mov    rsi,QWORD PTR [rsp+0x38]
   140009ff3:	xor    eax,eax
   140009ff5:	test   ebx,ebx
   140009ff7:	mov    rbx,QWORD PTR [rsp+0x30]
   140009ffc:	sete   al
   140009fff:	add    rsp,0x20
   14000a003:	pop    rdi
   14000a004:	ret    
   14000a005:	int3   
   14000a006:	int3   
   14000a007:	int3   
   14000a008:	mov    rax,rsp
   14000a00b:	push   rbp
   14000a00c:	push   rbx
   14000a00d:	push   rsi
   14000a00e:	push   rdi
   14000a00f:	push   r14
   14000a011:	lea    rbp,[rax-0x37]
   14000a015:	sub    rsp,0xf0
   14000a01c:	movaps XMMWORD PTR [rax-0x38],xmm6
   14000a020:	mov    rax,QWORD PTR [rip+0x321a9]        # 0x14003c1d0
   14000a027:	xor    rax,rsp
   14000a02a:	mov    QWORD PTR [rbp-0x11],rax
   14000a02e:	mov    esi,edx
   14000a030:	mov    r14,rcx
   14000a033:	mov    edx,0xffc0
   14000a038:	mov    ecx,0x1f80
   14000a03d:	mov    edi,r9d
   14000a040:	mov    rbx,r8
   14000a043:	call   0x140009e34
   14000a048:	mov    ecx,DWORD PTR [rbp+0x5f]
   14000a04b:	mov    QWORD PTR [rsp+0x40],rax
   14000a050:	mov    QWORD PTR [rsp+0x50],rbx
   14000a055:	movsd  xmm0,QWORD PTR [rsp+0x50]
   14000a05b:	mov    rdx,QWORD PTR [rsp+0x40]
   14000a060:	movsd  QWORD PTR [rsp+0x48],xmm0
   14000a066:	call   0x140009f4c
   14000a06b:	movsd  xmm6,QWORD PTR [rbp+0x77]
   14000a070:	test   eax,eax
   14000a072:	jne    0x14000a0b4
   14000a074:	cmp    DWORD PTR [rbp+0x7f],0x2
   14000a078:	jne    0x14000a08b
   14000a07a:	mov    eax,DWORD PTR [rbp-0x41]
   14000a07d:	movsd  QWORD PTR [rbp-0x51],xmm6
   14000a082:	and    eax,0xffffffe3
   14000a085:	or     eax,0x3
   14000a088:	mov    DWORD PTR [rbp-0x41],eax
   14000a08b:	mov    r8d,DWORD PTR [rbp+0x5f]
   14000a08f:	lea    rax,[rsp+0x48]
   14000a094:	lea    rdx,[rsp+0x40]
   14000a099:	mov    QWORD PTR [rsp+0x28],rax
   14000a09e:	lea    rax,[rbp+0x6f]
   14000a0a2:	lea    rcx,[rsp+0x60]
   14000a0a7:	mov    r9d,esi
   14000a0aa:	mov    QWORD PTR [rsp+0x20],rax
   14000a0af:	call   0x140013724
   14000a0b4:	cmp    DWORD PTR [rip+0x33345],0x0        # 0x14003d400
   14000a0bb:	jne    0x14000a0f1
   14000a0bd:	test   edi,edi
   14000a0bf:	je     0x14000a0f1
   14000a0c1:	mov    rax,QWORD PTR [rsp+0x40]
   14000a0c6:	movsd  xmm0,QWORD PTR [rsp+0x48]
   14000a0cc:	mov    edx,DWORD PTR [rbp+0x67]
   14000a0cf:	movsd  xmm3,QWORD PTR [rbp+0x6f]
   14000a0d4:	mov    QWORD PTR [rsp+0x30],rax
   14000a0d9:	mov    r8,r14
   14000a0dc:	mov    ecx,edi
   14000a0de:	movsd  QWORD PTR [rsp+0x28],xmm0
   14000a0e4:	movsd  QWORD PTR [rsp+0x20],xmm6
   14000a0ea:	call   0x140009ee4
   14000a0ef:	jmp    0x14000a10d
   14000a0f1:	mov    ecx,edi
   14000a0f3:	call   0x140013a7c
   14000a0f8:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a0fd:	mov    edx,0xffc0
   14000a102:	call   0x140009e34
   14000a107:	movsd  xmm0,QWORD PTR [rsp+0x48]
   14000a10d:	mov    rcx,QWORD PTR [rbp-0x11]
   14000a111:	xor    rcx,rsp
   14000a114:	call   0x14000c380
   14000a119:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14000a121:	add    rsp,0xf0
   14000a128:	pop    r14
   14000a12a:	pop    rdi
   14000a12b:	pop    rsi
   14000a12c:	pop    rbx
   14000a12d:	pop    rbp
   14000a12e:	ret    
   14000a12f:	int3   
   14000a130:	mov    rax,rsp
   14000a133:	push   rbp
   14000a134:	push   rbx
   14000a135:	push   rsi
   14000a136:	push   rdi
   14000a137:	push   r14
   14000a139:	lea    rbp,[rax-0x37]
   14000a13d:	sub    rsp,0xf0
   14000a144:	movaps XMMWORD PTR [rax-0x38],xmm6
   14000a148:	mov    rax,QWORD PTR [rip+0x32081]        # 0x14003c1d0
   14000a14f:	xor    rax,rsp
   14000a152:	mov    QWORD PTR [rbp-0x11],rax
   14000a156:	mov    esi,edx
   14000a158:	mov    r14,rcx
   14000a15b:	mov    edx,0xffc0
   14000a160:	mov    ecx,0x1f80
   14000a165:	mov    edi,r9d
   14000a168:	mov    rbx,r8
   14000a16b:	call   0x140009e34
   14000a170:	mov    ecx,DWORD PTR [rbp+0x5f]
   14000a173:	mov    QWORD PTR [rsp+0x48],rax
   14000a178:	mov    DWORD PTR [rsp+0x50],ebx
   14000a17c:	movss  xmm0,DWORD PTR [rsp+0x50]
   14000a182:	mov    rdx,QWORD PTR [rsp+0x48]
   14000a187:	movss  DWORD PTR [rsp+0x40],xmm0
   14000a18d:	call   0x140009f4c
   14000a192:	movss  xmm6,DWORD PTR [rbp+0x77]
   14000a197:	test   eax,eax
   14000a199:	jne    0x14000a1db
   14000a19b:	cmp    DWORD PTR [rbp+0x7f],0x2
   14000a19f:	jne    0x14000a1b2
   14000a1a1:	mov    eax,DWORD PTR [rbp-0x41]
   14000a1a4:	movss  DWORD PTR [rbp-0x51],xmm6
   14000a1a9:	and    eax,0xffffffe1
   14000a1ac:	or     eax,0x1
   14000a1af:	mov    DWORD PTR [rbp-0x41],eax
   14000a1b2:	mov    r8d,DWORD PTR [rbp+0x5f]
   14000a1b6:	lea    rax,[rsp+0x40]
   14000a1bb:	lea    rdx,[rsp+0x48]
   14000a1c0:	mov    QWORD PTR [rsp+0x28],rax
   14000a1c5:	lea    rax,[rbp+0x6f]
   14000a1c9:	lea    rcx,[rsp+0x60]
   14000a1ce:	mov    r9d,esi
   14000a1d1:	mov    QWORD PTR [rsp+0x20],rax
   14000a1d6:	call   0x140013a50
   14000a1db:	cmp    DWORD PTR [rip+0x3321e],0x0        # 0x14003d400
   14000a1e2:	jne    0x14000a225
   14000a1e4:	test   edi,edi
   14000a1e6:	je     0x14000a225
   14000a1e8:	movss  xmm0,DWORD PTR [rsp+0x40]
   14000a1ee:	movss  xmm3,DWORD PTR [rbp+0x6f]
   14000a1f3:	mov    rax,QWORD PTR [rsp+0x48]
   14000a1f8:	mov    edx,DWORD PTR [rbp+0x67]
   14000a1fb:	mov    QWORD PTR [rsp+0x30],rax
   14000a200:	mov    r8,r14
   14000a203:	cvtps2pd xmm0,xmm0
   14000a206:	cvtps2pd xmm1,xmm6
   14000a209:	cvtps2pd xmm3,xmm3
   14000a20c:	mov    ecx,edi
   14000a20e:	movsd  QWORD PTR [rsp+0x28],xmm0
   14000a214:	movsd  QWORD PTR [rsp+0x20],xmm1
   14000a21a:	call   0x140009ee4
   14000a21f:	cvtsd2ss xmm0,xmm0
   14000a223:	jmp    0x14000a241
   14000a225:	mov    ecx,edi
   14000a227:	call   0x140013a7c
   14000a22c:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a231:	mov    edx,0xffc0
   14000a236:	call   0x140009e34
   14000a23b:	movss  xmm0,DWORD PTR [rsp+0x40]
   14000a241:	mov    rcx,QWORD PTR [rbp-0x11]
   14000a245:	xor    rcx,rsp
   14000a248:	call   0x14000c380
   14000a24d:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14000a255:	add    rsp,0xf0
   14000a25c:	pop    r14
   14000a25e:	pop    rdi
   14000a25f:	pop    rsi
   14000a260:	pop    rbx
   14000a261:	pop    rbp
   14000a262:	ret    
   14000a263:	int3   
   14000a264:	mov    eax,DWORD PTR [rip+0x31f5a]        # 0x14003c1c4
   14000a26a:	ret    
   14000a26b:	int3   
   14000a26c:	rex.W jmp QWORD PTR [rip+0x21f3d]        # 0x14002c1b0
   14000a273:	int3   
   14000a274:	rex.W jmp QWORD PTR [rip+0x21f3d]        # 0x14002c1b8
   14000a27b:	int3   
   14000a27c:	test   rcx,rcx
   14000a27f:	je     0x14000a3ae
   14000a285:	mov    QWORD PTR [rsp+0x10],rbx
   14000a28a:	push   rdi
   14000a28b:	sub    rsp,0x20
   14000a28f:	mov    rbx,rcx
   14000a292:	mov    rcx,QWORD PTR [rcx+0x38]
   14000a296:	test   rcx,rcx
   14000a299:	je     0x14000a2a0
   14000a29b:	call   0x140007dc0
   14000a2a0:	mov    rcx,QWORD PTR [rbx+0x48]
   14000a2a4:	test   rcx,rcx
   14000a2a7:	je     0x14000a2ae
   14000a2a9:	call   0x140007dc0
   14000a2ae:	mov    rcx,QWORD PTR [rbx+0x58]
   14000a2b2:	test   rcx,rcx
   14000a2b5:	je     0x14000a2bc
   14000a2b7:	call   0x140007dc0
   14000a2bc:	mov    rcx,QWORD PTR [rbx+0x68]
   14000a2c0:	test   rcx,rcx
   14000a2c3:	je     0x14000a2ca
   14000a2c5:	call   0x140007dc0
   14000a2ca:	mov    rcx,QWORD PTR [rbx+0x70]
   14000a2ce:	test   rcx,rcx
   14000a2d1:	je     0x14000a2d8
   14000a2d3:	call   0x140007dc0
   14000a2d8:	mov    rcx,QWORD PTR [rbx+0x78]
   14000a2dc:	test   rcx,rcx
   14000a2df:	je     0x14000a2e6
   14000a2e1:	call   0x140007dc0
   14000a2e6:	mov    rcx,QWORD PTR [rbx+0x80]
   14000a2ed:	test   rcx,rcx
   14000a2f0:	je     0x14000a2f7
   14000a2f2:	call   0x140007dc0
   14000a2f7:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000a2fe:	lea    rax,[rip+0x2481b]        # 0x14002eb20
   14000a305:	cmp    rcx,rax
   14000a308:	je     0x14000a30f
   14000a30a:	call   0x140007dc0
   14000a30f:	mov    edi,0xd
   14000a314:	mov    ecx,edi
   14000a316:	call   0x14000fc2c
   14000a31b:	nop
   14000a31c:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000a323:	mov    QWORD PTR [rsp+0x30],rcx
   14000a328:	test   rcx,rcx
   14000a32b:	je     0x14000a349
   14000a32d:	lock dec DWORD PTR [rcx]
   14000a330:	jne    0x14000a349
   14000a332:	lea    rax,[rip+0x323a7]        # 0x14003c6e0
   14000a339:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a33e:	cmp    rcx,rax
   14000a341:	je     0x14000a349
   14000a343:	call   0x140007dc0
   14000a348:	nop
   14000a349:	mov    ecx,edi
   14000a34b:	call   0x14000fe48
   14000a350:	mov    ecx,0xc
   14000a355:	call   0x14000fc2c
   14000a35a:	nop
   14000a35b:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000a362:	test   rdi,rdi
   14000a365:	je     0x14000a392
   14000a367:	mov    rcx,rdi
   14000a36a:	call   0x140011c6c
   14000a36f:	cmp    rdi,QWORD PTR [rip+0x32d2a]        # 0x14003d0a0
   14000a376:	je     0x14000a392
   14000a378:	lea    rax,[rip+0x32d31]        # 0x14003d0b0
   14000a37f:	cmp    rdi,rax
   14000a382:	je     0x14000a392
   14000a384:	cmp    DWORD PTR [rdi],0x0
   14000a387:	jne    0x14000a392
   14000a389:	mov    rcx,rdi
   14000a38c:	call   0x140011ad4
   14000a391:	nop
   14000a392:	mov    ecx,0xc
   14000a397:	call   0x14000fe48
   14000a39c:	mov    rcx,rbx
   14000a39f:	call   0x140007dc0
   14000a3a4:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a3a9:	add    rsp,0x20
   14000a3ad:	pop    rdi
   14000a3ae:	ret    
   14000a3af:	int3   
   14000a3b0:	rex push rbx
   14000a3b2:	sub    rsp,0x20
   14000a3b6:	mov    rbx,rcx
   14000a3b9:	mov    ecx,DWORD PTR [rip+0x31e05]        # 0x14003c1c4
   14000a3bf:	cmp    ecx,0xffffffff
   14000a3c2:	je     0x14000a3e6
   14000a3c4:	test   rbx,rbx
   14000a3c7:	jne    0x14000a3d7
   14000a3c9:	call   0x14000e6c0
   14000a3ce:	mov    ecx,DWORD PTR [rip+0x31df0]        # 0x14003c1c4
   14000a3d4:	mov    rbx,rax
   14000a3d7:	xor    edx,edx
   14000a3d9:	call   0x14000e6dc
   14000a3de:	mov    rcx,rbx
   14000a3e1:	call   0x14000a27c
   14000a3e6:	add    rsp,0x20
   14000a3ea:	pop    rbx
   14000a3eb:	ret    
   14000a3ec:	rex push rbx
   14000a3ee:	sub    rsp,0x20
   14000a3f2:	call   0x14000a410
   14000a3f7:	mov    rbx,rax
   14000a3fa:	test   rax,rax
   14000a3fd:	jne    0x14000a407
   14000a3ff:	lea    ecx,[rax+0x10]
   14000a402:	call   0x1400081bc
   14000a407:	mov    rax,rbx
   14000a40a:	add    rsp,0x20
   14000a40e:	pop    rbx
   14000a40f:	ret    
   14000a410:	mov    QWORD PTR [rsp+0x8],rbx
   14000a415:	push   rdi
   14000a416:	sub    rsp,0x20
   14000a41a:	call   QWORD PTR [rip+0x21d30]        # 0x14002c150
   14000a420:	mov    ecx,DWORD PTR [rip+0x31d9e]        # 0x14003c1c4
   14000a426:	mov    edi,eax
   14000a428:	call   0x14000e6c0
   14000a42d:	mov    rbx,rax
   14000a430:	test   rax,rax
   14000a433:	jne    0x14000a47c
   14000a435:	lea    ecx,[rax+0x1]
   14000a438:	mov    edx,0x478
   14000a43d:	call   0x140008604
   14000a442:	mov    rbx,rax
   14000a445:	test   rax,rax
   14000a448:	je     0x14000a47c
   14000a44a:	mov    ecx,DWORD PTR [rip+0x31d74]        # 0x14003c1c4
   14000a450:	mov    rdx,rax
   14000a453:	call   0x14000e6dc
   14000a458:	mov    rcx,rbx
   14000a45b:	test   eax,eax
   14000a45d:	je     0x14000a475
   14000a45f:	xor    edx,edx
   14000a461:	call   0x14000a494
   14000a466:	call   QWORD PTR [rip+0x21d4c]        # 0x14002c1b8
   14000a46c:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000a471:	mov    DWORD PTR [rbx],eax
   14000a473:	jmp    0x14000a47c
   14000a475:	call   0x140007dc0
   14000a47a:	xor    ebx,ebx
   14000a47c:	mov    ecx,edi
   14000a47e:	call   QWORD PTR [rip+0x21d24]        # 0x14002c1a8
   14000a484:	mov    rax,rbx
   14000a487:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a48c:	add    rsp,0x20
   14000a490:	pop    rdi
   14000a491:	ret    
   14000a492:	int3   
   14000a493:	int3   
   14000a494:	mov    QWORD PTR [rsp+0x8],rbx
   14000a499:	push   rdi
   14000a49a:	sub    rsp,0x20
   14000a49e:	mov    rdi,rdx
   14000a4a1:	mov    rbx,rcx
   14000a4a4:	lea    rax,[rip+0x24675]        # 0x14002eb20
   14000a4ab:	mov    QWORD PTR [rcx+0xa0],rax
   14000a4b2:	and    DWORD PTR [rcx+0x10],0x0
   14000a4b6:	mov    DWORD PTR [rcx+0x1c],0x1
   14000a4bd:	mov    DWORD PTR [rcx+0xc8],0x1
   14000a4c7:	mov    eax,0x43
   14000a4cc:	mov    WORD PTR [rcx+0x164],ax
   14000a4d3:	mov    WORD PTR [rcx+0x26a],ax
   14000a4da:	lea    rax,[rip+0x321ff]        # 0x14003c6e0
   14000a4e1:	mov    QWORD PTR [rcx+0xb8],rax
   14000a4e8:	and    QWORD PTR [rcx+0x470],0x0
   14000a4f0:	mov    ecx,0xd
   14000a4f5:	call   0x14000fc2c
   14000a4fa:	nop
   14000a4fb:	mov    rax,QWORD PTR [rbx+0xb8]
   14000a502:	lock inc DWORD PTR [rax]
   14000a505:	mov    ecx,0xd
   14000a50a:	call   0x14000fe48
   14000a50f:	mov    ecx,0xc
   14000a514:	call   0x14000fc2c
   14000a519:	nop
   14000a51a:	mov    QWORD PTR [rbx+0xc0],rdi
   14000a521:	test   rdi,rdi
   14000a524:	jne    0x14000a534
   14000a526:	mov    rax,QWORD PTR [rip+0x32b73]        # 0x14003d0a0
   14000a52d:	mov    QWORD PTR [rbx+0xc0],rax
   14000a534:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000a53b:	call   0x140011a48
   14000a540:	nop
   14000a541:	mov    ecx,0xc
   14000a546:	call   0x14000fe48
   14000a54b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a550:	add    rsp,0x20
   14000a554:	pop    rdi
   14000a555:	ret    
   14000a556:	int3   
   14000a557:	int3   
   14000a558:	rex push rbx
   14000a55a:	sub    rsp,0x20
   14000a55e:	call   0x140008324
   14000a563:	call   0x14000fde4
   14000a568:	test   eax,eax
   14000a56a:	je     0x14000a5ca
   14000a56c:	lea    rcx,[rip+0xfffffffffffffd09]        # 0x14000a27c
   14000a573:	call   0x14000e688
   14000a578:	mov    DWORD PTR [rip+0x31c46],eax        # 0x14003c1c4
   14000a57e:	cmp    eax,0xffffffff
   14000a581:	je     0x14000a5ca
   14000a583:	mov    edx,0x478
   14000a588:	mov    ecx,0x1
   14000a58d:	call   0x140008604
   14000a592:	mov    rbx,rax
   14000a595:	test   rax,rax
   14000a598:	je     0x14000a5ca
   14000a59a:	mov    ecx,DWORD PTR [rip+0x31c24]        # 0x14003c1c4
   14000a5a0:	mov    rdx,rax
   14000a5a3:	call   0x14000e6dc
   14000a5a8:	test   eax,eax
   14000a5aa:	je     0x14000a5ca
   14000a5ac:	xor    edx,edx
   14000a5ae:	mov    rcx,rbx
   14000a5b1:	call   0x14000a494
   14000a5b6:	call   QWORD PTR [rip+0x21bfc]        # 0x14002c1b8
   14000a5bc:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000a5c1:	mov    DWORD PTR [rbx],eax
   14000a5c3:	mov    eax,0x1
   14000a5c8:	jmp    0x14000a5d1
   14000a5ca:	call   0x14000a5d8
   14000a5cf:	xor    eax,eax
   14000a5d1:	add    rsp,0x20
   14000a5d5:	pop    rbx
   14000a5d6:	ret    
   14000a5d7:	int3   
   14000a5d8:	sub    rsp,0x28
   14000a5dc:	mov    ecx,DWORD PTR [rip+0x31be2]        # 0x14003c1c4
   14000a5e2:	cmp    ecx,0xffffffff
   14000a5e5:	je     0x14000a5f3
   14000a5e7:	call   0x14000e6a4
   14000a5ec:	or     DWORD PTR [rip+0x31bd1],0xffffffff        # 0x14003c1c4
   14000a5f3:	add    rsp,0x28
   14000a5f7:	jmp    0x14000fc9c
   14000a5fc:	test   rcx,rcx
   14000a5ff:	je     0x14000a669
   14000a601:	mov    BYTE PTR [rsp+0x10],dl
   14000a605:	sub    rsp,0x28
   14000a609:	cmp    DWORD PTR [rcx],0xe06d7363
   14000a60f:	jne    0x14000a665
   14000a611:	cmp    DWORD PTR [rcx+0x18],0x4
   14000a615:	jne    0x14000a665
   14000a617:	mov    eax,DWORD PTR [rcx+0x20]
   14000a61a:	sub    eax,0x19930520
   14000a61f:	cmp    eax,0x2
   14000a622:	ja     0x14000a665
   14000a624:	mov    rax,QWORD PTR [rcx+0x30]
   14000a628:	test   rax,rax
   14000a62b:	je     0x14000a665
   14000a62d:	movsxd rdx,DWORD PTR [rax+0x4]
   14000a631:	test   edx,edx
   14000a633:	je     0x14000a64e
   14000a635:	mov    rax,rdx
   14000a638:	mov    rdx,QWORD PTR [rcx+0x38]
   14000a63c:	add    rdx,rax
   14000a63f:	mov    rcx,QWORD PTR [rcx+0x28]
   14000a643:	call   rdx
   14000a645:	nop
   14000a646:	jmp    0x14000a665
   14000a648:	call   0x14000c280
   14000a64d:	nop
   14000a64e:	test   BYTE PTR [rax],0x10
   14000a651:	je     0x14000a665
   14000a653:	mov    rax,QWORD PTR [rcx+0x28]
   14000a657:	mov    rcx,QWORD PTR [rax]
   14000a65a:	test   rcx,rcx
   14000a65d:	je     0x14000a665
   14000a65f:	mov    rax,QWORD PTR [rcx]
   14000a662:	call   QWORD PTR [rax+0x10]
   14000a665:	add    rsp,0x28
   14000a669:	ret    
   14000a66a:	int3   
   14000a66b:	int3   
   14000a66c:	rex push rbx
   14000a66e:	sub    rsp,0x20
   14000a672:	mov    rbx,rcx
   14000a675:	call   0x14000772c
   14000a67a:	lea    rax,[rip+0x2446f]        # 0x14002eaf0
   14000a681:	mov    QWORD PTR [rbx],rax
   14000a684:	mov    rax,rbx
   14000a687:	add    rsp,0x20
   14000a68b:	pop    rbx
   14000a68c:	ret    
   14000a68d:	int3   
   14000a68e:	int3   
   14000a68f:	int3   
   14000a690:	mov    QWORD PTR [rsp+0x10],rdx
   14000a695:	push   rbx
   14000a696:	sub    rsp,0x20
   14000a69a:	lea    rdx,[rsp+0x38]
   14000a69f:	mov    rbx,rcx
   14000a6a2:	call   0x1400076e0
   14000a6a7:	lea    rax,[rip+0x24442]        # 0x14002eaf0
   14000a6ae:	mov    QWORD PTR [rbx],rax
   14000a6b1:	mov    rax,rbx
   14000a6b4:	add    rsp,0x20
   14000a6b8:	pop    rbx
   14000a6b9:	ret    
   14000a6ba:	int3   
   14000a6bb:	int3   
   14000a6bc:	lea    rax,[rip+0x2442d]        # 0x14002eaf0
   14000a6c3:	mov    QWORD PTR [rcx],rax
   14000a6c6:	jmp    0x1400077a0
   14000a6cb:	int3   
   14000a6cc:	mov    QWORD PTR [rsp+0x8],rbx
   14000a6d1:	push   rdi
   14000a6d2:	sub    rsp,0x20
   14000a6d6:	lea    rax,[rip+0x24413]        # 0x14002eaf0
   14000a6dd:	mov    ebx,edx
   14000a6df:	mov    rdi,rcx
   14000a6e2:	mov    QWORD PTR [rcx],rax
   14000a6e5:	call   0x1400077a0
   14000a6ea:	test   bl,0x1
   14000a6ed:	je     0x14000a6f7
   14000a6ef:	mov    rcx,rdi
   14000a6f2:	call   0x140005778
   14000a6f7:	mov    rax,rdi
   14000a6fa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a6ff:	add    rsp,0x20
   14000a703:	pop    rdi
   14000a704:	ret    
   14000a705:	int3   
   14000a706:	int3   
   14000a707:	int3   
   14000a708:	mov    rax,rsp
   14000a70b:	mov    QWORD PTR [rax+0x8],rbx
   14000a70f:	mov    QWORD PTR [rax+0x18],rbp
   14000a713:	push   rsi
   14000a714:	push   rdi
   14000a715:	push   r12
   14000a717:	push   r14
   14000a719:	push   r15
   14000a71b:	sub    rsp,0x50
   14000a71f:	mov    r15,QWORD PTR [rsp+0xa0]
   14000a727:	mov    rbp,r9
   14000a72a:	mov    r14,rdx
   14000a72d:	mov    r12,r8
   14000a730:	mov    rbx,rcx
   14000a733:	lea    r9,[rax+0x10]
   14000a737:	mov    r8,r15
   14000a73a:	mov    rdx,rbp
   14000a73d:	mov    rcx,r14
   14000a740:	call   0x14000670c
   14000a745:	mov    r9,QWORD PTR [rsp+0xb0]
   14000a74d:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000a755:	mov    rdi,rax
   14000a758:	test   r9,r9
   14000a75b:	je     0x14000a76b
   14000a75d:	mov    r8,rsi
   14000a760:	mov    rdx,rax
   14000a763:	mov    rcx,rbx
   14000a766:	call   0x14000b1f0
   14000a76b:	call   0x140006b34
   14000a770:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000a774:	mov    r9,rdi
   14000a777:	add    rax,rcx
   14000a77a:	mov    cl,BYTE PTR [rsp+0xd8]
   14000a781:	mov    r8,r12
   14000a784:	mov    BYTE PTR [rsp+0x40],cl
   14000a788:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000a790:	mov    QWORD PTR [rsp+0x38],rbp
   14000a795:	mov    edx,DWORD PTR [rcx]
   14000a797:	mov    QWORD PTR [rsp+0x30],r15
   14000a79c:	mov    rcx,r14
   14000a79f:	mov    DWORD PTR [rsp+0x28],edx
   14000a7a3:	mov    rdx,rbx
   14000a7a6:	mov    QWORD PTR [rsp+0x20],rax
   14000a7ab:	call   0x140006bdc
   14000a7b0:	lea    r11,[rsp+0x50]
   14000a7b5:	mov    rbx,QWORD PTR [r11+0x30]
   14000a7b9:	mov    rbp,QWORD PTR [r11+0x40]
   14000a7bd:	mov    rsp,r11
   14000a7c0:	pop    r15
   14000a7c2:	pop    r14
   14000a7c4:	pop    r12
   14000a7c6:	pop    rdi
   14000a7c7:	pop    rsi
   14000a7c8:	ret    
   14000a7c9:	int3   
   14000a7ca:	int3   
   14000a7cb:	int3   
   14000a7cc:	mov    QWORD PTR [rsp+0x8],rbx
   14000a7d1:	push   rdi
   14000a7d2:	sub    rsp,0x20
   14000a7d6:	mov    r9,QWORD PTR [rcx]
   14000a7d9:	and    DWORD PTR [r8],0x0
   14000a7dd:	mov    rbx,r8
   14000a7e0:	mov    r8d,0xe06d7363
   14000a7e6:	cmp    DWORD PTR [r9],r8d
   14000a7e9:	jne    0x14000a848
   14000a7eb:	cmp    DWORD PTR [r9+0x18],0x4
   14000a7f0:	mov    edi,0x1
   14000a7f5:	mov    r10d,0x19930520
   14000a7fb:	jne    0x14000a818
   14000a7fd:	mov    eax,DWORD PTR [r9+0x20]
   14000a801:	sub    eax,r10d
   14000a804:	cmp    eax,0x2
   14000a807:	ja     0x14000a818
   14000a809:	mov    rax,QWORD PTR [rdx+0x28]
   14000a80d:	mov    ecx,DWORD PTR [rbx]
   14000a80f:	cmp    QWORD PTR [r9+0x28],rax
   14000a813:	cmove  ecx,edi
   14000a816:	mov    DWORD PTR [rbx],ecx
   14000a818:	cmp    DWORD PTR [r9],r8d
   14000a81b:	jne    0x14000a848
   14000a81d:	cmp    DWORD PTR [r9+0x18],0x4
   14000a822:	jne    0x14000a848
   14000a824:	mov    ecx,DWORD PTR [r9+0x20]
   14000a828:	sub    ecx,r10d
   14000a82b:	cmp    ecx,0x2
   14000a82e:	ja     0x14000a848
   14000a830:	cmp    QWORD PTR [r9+0x30],0x0
   14000a835:	jne    0x14000a848
   14000a837:	call   0x14000a3ec
   14000a83c:	mov    DWORD PTR [rax+0x460],edi
   14000a842:	mov    DWORD PTR [rbx],edi
   14000a844:	mov    eax,edi
   14000a846:	jmp    0x14000a84a
   14000a848:	xor    eax,eax
   14000a84a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a84f:	add    rsp,0x20
   14000a853:	pop    rdi
   14000a854:	ret    
   14000a855:	int3   
   14000a856:	int3   
   14000a857:	int3   
   14000a858:	mov    QWORD PTR [rsp+0x10],rbx
   14000a85d:	mov    QWORD PTR [rsp+0x18],r8
   14000a862:	push   rbp
   14000a863:	push   rsi
   14000a864:	push   rdi
   14000a865:	push   r12
   14000a867:	push   r13
   14000a869:	push   r14
   14000a86b:	push   r15
   14000a86d:	lea    rbp,[rsp-0x7]
   14000a872:	sub    rsp,0xb0
   14000a879:	mov    rbx,QWORD PTR [rbp+0x67]
   14000a87d:	mov    r13,rdx
   14000a880:	mov    rdi,rcx
   14000a883:	xor    r12d,r12d
   14000a886:	mov    rdx,r9
   14000a889:	mov    rcx,rbx
   14000a88c:	mov    r15,r9
   14000a88f:	mov    r14,r8
   14000a892:	mov    BYTE PTR [rbp+0x47],r12b
   14000a896:	mov    BYTE PTR [rbp-0x49],r12b
   14000a89a:	call   0x14000c1cc
   14000a89f:	lea    r9,[rbp-0x21]
   14000a8a3:	mov    r8,rbx
   14000a8a6:	mov    rdx,r15
   14000a8a9:	mov    rcx,r13
   14000a8ac:	mov    esi,eax
   14000a8ae:	call   0x14000670c
   14000a8b3:	mov    r8,rbx
   14000a8b6:	mov    rdx,r15
   14000a8b9:	mov    rcx,r13
   14000a8bc:	call   0x14000c158
   14000a8c1:	mov    r8,rbx
   14000a8c4:	mov    rdx,r15
   14000a8c7:	cmp    esi,eax
   14000a8c9:	jle    0x14000a8ea
   14000a8cb:	lea    rcx,[rbp-0x21]
   14000a8cf:	mov    r9d,esi
   14000a8d2:	call   0x14000c184
   14000a8d7:	mov    r9d,esi
   14000a8da:	mov    r8,rbx
   14000a8dd:	mov    rdx,r15
   14000a8e0:	mov    rcx,r13
   14000a8e3:	call   0x14000c190
   14000a8e8:	jmp    0x14000a8f4
   14000a8ea:	mov    rcx,r13
   14000a8ed:	call   0x14000c158
   14000a8f2:	mov    esi,eax
   14000a8f4:	cmp    esi,0xffffffff
   14000a8f7:	jl     0x14000a8fe
   14000a8f9:	cmp    esi,DWORD PTR [rbx+0x4]
   14000a8fc:	jl     0x14000a903
   14000a8fe:	call   0x14000c260
   14000a903:	cmp    DWORD PTR [rdi],0xe06d7363
   14000a909:	jne    0x14000ac8a
   14000a90f:	cmp    DWORD PTR [rdi+0x18],0x4
   14000a913:	jne    0x14000aa50
   14000a919:	mov    eax,DWORD PTR [rdi+0x20]
   14000a91c:	sub    eax,0x19930520
   14000a921:	cmp    eax,0x2
   14000a924:	ja     0x14000aa50
   14000a92a:	cmp    QWORD PTR [rdi+0x30],r12
   14000a92e:	jne    0x14000aa50
   14000a934:	call   0x14000a3ec
   14000a939:	cmp    QWORD PTR [rax+0xf0],r12
   14000a940:	je     0x14000ac6f
   14000a946:	call   0x14000a3ec
   14000a94b:	mov    rdi,QWORD PTR [rax+0xf0]
   14000a952:	call   0x14000a3ec
   14000a957:	mov    rcx,QWORD PTR [rdi+0x38]
   14000a95b:	mov    r14,QWORD PTR [rax+0xf8]
   14000a962:	mov    BYTE PTR [rbp+0x47],0x1
   14000a966:	mov    QWORD PTR [rbp+0x57],r14
   14000a96a:	call   0x140006bc0
   14000a96f:	mov    edx,0x1
   14000a974:	mov    rcx,rdi
   14000a977:	call   0x140013b90
   14000a97c:	test   eax,eax
   14000a97e:	jne    0x14000a985
   14000a980:	call   0x14000c260
   14000a985:	cmp    DWORD PTR [rdi],0xe06d7363
   14000a98b:	jne    0x14000a9ab
   14000a98d:	cmp    DWORD PTR [rdi+0x18],0x4
   14000a991:	jne    0x14000a9ab
   14000a993:	mov    eax,DWORD PTR [rdi+0x20]
   14000a996:	sub    eax,0x19930520
   14000a99b:	cmp    eax,0x2
   14000a99e:	ja     0x14000a9ab
   14000a9a0:	cmp    QWORD PTR [rdi+0x30],r12
   14000a9a4:	jne    0x14000a9ab
   14000a9a6:	call   0x14000c260
   14000a9ab:	call   0x14000a3ec
   14000a9b0:	cmp    QWORD PTR [rax+0x108],r12
   14000a9b7:	je     0x14000aa50
   14000a9bd:	call   0x14000a3ec
   14000a9c2:	mov    r14,QWORD PTR [rax+0x108]
   14000a9c9:	call   0x14000a3ec
   14000a9ce:	mov    rdx,r14
   14000a9d1:	mov    rcx,rdi
   14000a9d4:	mov    QWORD PTR [rax+0x108],r12
   14000a9db:	call   0x14000af74
   14000a9e0:	test   al,al
   14000a9e2:	jne    0x14000aa4c
   14000a9e4:	mov    r15d,r12d
   14000a9e7:	cmp    DWORD PTR [r14],r12d
   14000a9ea:	jle    0x14000acc2
   14000a9f0:	mov    rsi,r12
   14000a9f3:	call   0x140006b34
   14000a9f8:	movsxd rcx,DWORD PTR [r14+0x4]
   14000a9fc:	add    rax,rsi
   14000a9ff:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   14000aa04:	je     0x14000aa21
   14000aa06:	call   0x140006b34
   14000aa0b:	movsxd rcx,DWORD PTR [r14+0x4]
   14000aa0f:	add    rax,rsi
   14000aa12:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000aa17:	call   0x140006b34
   14000aa1c:	add    rax,rbx
   14000aa1f:	jmp    0x14000aa24
   14000aa21:	mov    rax,r12
   14000aa24:	lea    rdx,[rip+0x330ed]        # 0x14003db18
   14000aa2b:	mov    rcx,rax
   14000aa2e:	call   0x1400071c0
   14000aa33:	test   al,al
   14000aa35:	jne    0x14000acc8
   14000aa3b:	inc    r15d
   14000aa3e:	add    rsi,0x14
   14000aa42:	cmp    r15d,DWORD PTR [r14]
   14000aa45:	jl     0x14000a9f3
   14000aa47:	jmp    0x14000acc2
   14000aa4c:	mov    r14,QWORD PTR [rbp+0x57]
   14000aa50:	cmp    DWORD PTR [rdi],0xe06d7363
   14000aa56:	jne    0x14000ac8a
   14000aa5c:	cmp    DWORD PTR [rdi+0x18],0x4
   14000aa60:	jne    0x14000ac8a
   14000aa66:	mov    eax,DWORD PTR [rdi+0x20]
   14000aa69:	sub    eax,0x19930520
   14000aa6e:	cmp    eax,0x2
   14000aa71:	ja     0x14000ac8a
   14000aa77:	cmp    DWORD PTR [rbx+0xc],r12d
   14000aa7b:	jbe    0x14000abcf
   14000aa81:	mov    r8d,DWORD PTR [rbp+0x77]
   14000aa85:	lea    rax,[rbp-0x41]
   14000aa89:	mov    QWORD PTR [rsp+0x30],r15
   14000aa8e:	mov    QWORD PTR [rsp+0x28],rax
   14000aa93:	lea    rax,[rbp-0x45]
   14000aa97:	mov    r9d,esi
   14000aa9a:	mov    rdx,rbx
   14000aa9d:	mov    rcx,r13
   14000aaa0:	mov    QWORD PTR [rsp+0x20],rax
   14000aaa5:	call   0x1400067d8
   14000aaaa:	mov    ecx,DWORD PTR [rbp-0x45]
   14000aaad:	mov    edx,DWORD PTR [rbp-0x41]
   14000aab0:	cmp    ecx,edx
   14000aab2:	jae    0x14000abcf
   14000aab8:	lea    r14,[rax+0x10]
   14000aabc:	cmp    DWORD PTR [r14-0x10],esi
   14000aac0:	jg     0x14000abb1
   14000aac6:	cmp    esi,DWORD PTR [r14-0xc]
   14000aaca:	jg     0x14000abb1
   14000aad0:	call   0x140006b34
   14000aad5:	movsxd r12,DWORD PTR [r14]
   14000aad8:	add    r12,rax
   14000aadb:	mov    eax,DWORD PTR [r14-0x4]
   14000aadf:	mov    DWORD PTR [rbp-0x3d],eax
   14000aae2:	test   eax,eax
   14000aae4:	jle    0x14000abab
   14000aaea:	call   0x140006b4c
   14000aaef:	mov    rcx,QWORD PTR [rdi+0x30]
   14000aaf3:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000aaf7:	add    rax,0x4
   14000aafb:	add    rax,rdx
   14000aafe:	mov    QWORD PTR [rbp-0x31],rax
   14000ab02:	call   0x140006b4c
   14000ab07:	mov    rcx,QWORD PTR [rdi+0x30]
   14000ab0b:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000ab0f:	mov    ecx,DWORD PTR [rax+rdx*1]
   14000ab12:	mov    DWORD PTR [rbp-0x39],ecx
   14000ab15:	test   ecx,ecx
   14000ab17:	jle    0x14000ab50
   14000ab19:	call   0x140006b4c
   14000ab1e:	mov    rcx,QWORD PTR [rbp-0x31]
   14000ab22:	mov    r8,QWORD PTR [rdi+0x30]
   14000ab26:	movsxd rcx,DWORD PTR [rcx]
   14000ab29:	add    rax,rcx
   14000ab2c:	mov    rcx,r12
   14000ab2f:	mov    rdx,rax
   14000ab32:	mov    QWORD PTR [rbp-0x29],rax
   14000ab36:	call   0x14000c000
   14000ab3b:	test   eax,eax
   14000ab3d:	jne    0x14000ab5b
   14000ab3f:	mov    eax,DWORD PTR [rbp-0x39]
   14000ab42:	add    QWORD PTR [rbp-0x31],0x4
   14000ab47:	dec    eax
   14000ab49:	mov    DWORD PTR [rbp-0x39],eax
   14000ab4c:	test   eax,eax
   14000ab4e:	jg     0x14000ab19
   14000ab50:	mov    eax,DWORD PTR [rbp-0x3d]
   14000ab53:	dec    eax
   14000ab55:	add    r12,0x14
   14000ab59:	jmp    0x14000aadf
   14000ab5b:	mov    al,BYTE PTR [rbp+0x6f]
   14000ab5e:	mov    r8,QWORD PTR [rbp+0x57]
   14000ab62:	mov    r9,r15
   14000ab65:	mov    BYTE PTR [rsp+0x58],al
   14000ab69:	mov    al,BYTE PTR [rbp+0x47]
   14000ab6c:	mov    rdx,r13
   14000ab6f:	mov    BYTE PTR [rsp+0x50],al
   14000ab73:	mov    rax,QWORD PTR [rbp+0x7f]
   14000ab77:	mov    rcx,rdi
   14000ab7a:	mov    QWORD PTR [rsp+0x48],rax
   14000ab7f:	mov    eax,DWORD PTR [rbp+0x77]
   14000ab82:	mov    BYTE PTR [rbp-0x49],0x1
   14000ab86:	mov    DWORD PTR [rsp+0x40],eax
   14000ab8a:	lea    rax,[r14-0x10]
   14000ab8e:	mov    QWORD PTR [rsp+0x38],rax
   14000ab93:	mov    rax,QWORD PTR [rbp-0x29]
   14000ab97:	mov    QWORD PTR [rsp+0x30],rax
   14000ab9c:	mov    QWORD PTR [rsp+0x28],r12
   14000aba1:	mov    QWORD PTR [rsp+0x20],rbx
   14000aba6:	call   0x14000a708
   14000abab:	mov    edx,DWORD PTR [rbp-0x41]
   14000abae:	mov    ecx,DWORD PTR [rbp-0x45]
   14000abb1:	inc    ecx
   14000abb3:	add    r14,0x14
   14000abb7:	mov    DWORD PTR [rbp-0x45],ecx
   14000abba:	cmp    ecx,edx
   14000abbc:	jb     0x14000aabc
   14000abc2:	xor    r12d,r12d
   14000abc5:	cmp    BYTE PTR [rbp-0x49],r12b
   14000abc9:	jne    0x14000ac5c
   14000abcf:	mov    eax,DWORD PTR [rbx]
   14000abd1:	and    eax,0x1fffffff
   14000abd6:	cmp    eax,0x19930521
   14000abdb:	jb     0x14000ac5c
   14000abdd:	mov    esi,DWORD PTR [rbx+0x20]
   14000abe0:	test   esi,esi
   14000abe2:	je     0x14000abf1
   14000abe4:	movsxd rsi,esi
   14000abe7:	call   0x140006b34
   14000abec:	add    rax,rsi
   14000abef:	jmp    0x14000abf4
   14000abf1:	mov    rax,r12
   14000abf4:	test   rax,rax
   14000abf7:	je     0x14000ac5c
   14000abf9:	test   esi,esi
   14000abfb:	je     0x14000ac0e
   14000abfd:	call   0x140006b34
   14000ac02:	mov    rdx,rax
   14000ac05:	movsxd rax,DWORD PTR [rbx+0x20]
   14000ac09:	add    rdx,rax
   14000ac0c:	jmp    0x14000ac11
   14000ac0e:	mov    rdx,r12
   14000ac11:	mov    rcx,rdi
   14000ac14:	call   0x14000af74
   14000ac19:	test   al,al
   14000ac1b:	jne    0x14000ac5c
   14000ac1d:	lea    r9,[rbp+0x47]
   14000ac21:	mov    r8,rbx
   14000ac24:	mov    rdx,r15
   14000ac27:	mov    rcx,r13
   14000ac2a:	call   0x14000670c
   14000ac2f:	mov    cl,BYTE PTR [rbp+0x6f]
   14000ac32:	mov    r8,QWORD PTR [rbp+0x57]
   14000ac36:	mov    BYTE PTR [rsp+0x40],cl
   14000ac3a:	mov    QWORD PTR [rsp+0x38],r15
   14000ac3f:	mov    QWORD PTR [rsp+0x30],rbx
   14000ac44:	or     DWORD PTR [rsp+0x28],0xffffffff
   14000ac49:	mov    r9,rax
   14000ac4c:	mov    rdx,rdi
   14000ac4f:	mov    rcx,r13
   14000ac52:	mov    QWORD PTR [rsp+0x20],r12
   14000ac57:	call   0x140006bdc
   14000ac5c:	call   0x14000a3ec
   14000ac61:	cmp    QWORD PTR [rax+0x108],r12
   14000ac68:	je     0x14000ac6f
   14000ac6a:	call   0x14000c260
   14000ac6f:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000ac77:	add    rsp,0xb0
   14000ac7e:	pop    r15
   14000ac80:	pop    r14
   14000ac82:	pop    r13
   14000ac84:	pop    r12
   14000ac86:	pop    rdi
   14000ac87:	pop    rsi
   14000ac88:	pop    rbp
   14000ac89:	ret    
   14000ac8a:	cmp    DWORD PTR [rbx+0xc],r12d
   14000ac8e:	jbe    0x14000ac5c
   14000ac90:	cmp    BYTE PTR [rbp+0x6f],r12b
   14000ac94:	jne    0x14000ad06
   14000ac96:	mov    rax,QWORD PTR [rbp+0x7f]
   14000ac9a:	mov    r9,r15
   14000ac9d:	mov    r8,r14
   14000aca0:	mov    QWORD PTR [rsp+0x38],rax
   14000aca5:	mov    eax,DWORD PTR [rbp+0x77]
   14000aca8:	mov    rdx,r13
   14000acab:	mov    DWORD PTR [rsp+0x30],eax
   14000acaf:	mov    rcx,rdi
   14000acb2:	mov    DWORD PTR [rsp+0x28],esi
   14000acb6:	mov    QWORD PTR [rsp+0x20],rbx
   14000acbb:	call   0x14000ad0c
   14000acc0:	jmp    0x14000ac5c
   14000acc2:	call   0x14000c280
   14000acc7:	int3   
   14000acc8:	mov    dl,0x1
   14000acca:	mov    rcx,rdi
   14000accd:	call   0x14000a5fc
   14000acd2:	lea    rax,[rip+0x23e27]        # 0x14002eb00
   14000acd9:	lea    rdx,[rbp+0x47]
   14000acdd:	lea    rcx,[rbp-0x19]
   14000ace1:	mov    QWORD PTR [rbp+0x47],rax
   14000ace5:	call   0x1400076e0
   14000acea:	lea    rax,[rip+0x23dff]        # 0x14002eaf0
   14000acf1:	lea    rdx,[rip+0x2f628]        # 0x14003a320
   14000acf8:	lea    rcx,[rbp-0x19]
   14000acfc:	mov    QWORD PTR [rbp-0x19],rax
   14000ad00:	call   0x140006570
   14000ad05:	int3   
   14000ad06:	call   0x14000c280
   14000ad0b:	int3   
   14000ad0c:	mov    QWORD PTR [rsp+0x10],rbx
   14000ad11:	mov    QWORD PTR [rsp+0x18],r8
   14000ad16:	push   rbp
   14000ad17:	push   rsi
   14000ad18:	push   rdi
   14000ad19:	push   r12
   14000ad1b:	push   r13
   14000ad1d:	push   r14
   14000ad1f:	push   r15
   14000ad21:	sub    rsp,0x70
   14000ad25:	cmp    DWORD PTR [rcx],0x80000003
   14000ad2b:	mov    r15,r9
   14000ad2e:	mov    rdi,r8
   14000ad31:	mov    r12,rdx
   14000ad34:	mov    rsi,rcx
   14000ad37:	je     0x14000af59
   14000ad3d:	call   0x14000a3ec
   14000ad42:	mov    rbp,QWORD PTR [rsp+0xd0]
   14000ad4a:	cmp    QWORD PTR [rax+0xe0],0x0
   14000ad52:	je     0x14000adb5
   14000ad54:	xor    ecx,ecx
   14000ad56:	call   QWORD PTR [rip+0x213b4]        # 0x14002c110
   14000ad5c:	mov    rbx,rax
   14000ad5f:	call   0x14000a3ec
   14000ad64:	cmp    QWORD PTR [rax+0xe0],rbx
   14000ad6b:	je     0x14000adb5
   14000ad6d:	cmp    DWORD PTR [rsi],0xe0434f4d
   14000ad73:	je     0x14000adb5
   14000ad75:	cmp    DWORD PTR [rsi],0xe0434352
   14000ad7b:	mov    ebx,DWORD PTR [rsp+0xe0]
   14000ad82:	je     0x14000adbc
   14000ad84:	mov    rax,QWORD PTR [rsp+0xe8]
   14000ad8c:	mov    r9,r15
   14000ad8f:	mov    r8,rdi
   14000ad92:	mov    QWORD PTR [rsp+0x30],rax
   14000ad97:	mov    rdx,r12
   14000ad9a:	mov    rcx,rsi
   14000ad9d:	mov    DWORD PTR [rsp+0x28],ebx
   14000ada1:	mov    QWORD PTR [rsp+0x20],rbp
   14000ada6:	call   0x140006a3c
   14000adab:	test   eax,eax
   14000adad:	jne    0x14000af59
   14000adb3:	jmp    0x14000adbc
   14000adb5:	mov    ebx,DWORD PTR [rsp+0xe0]
   14000adbc:	cmp    DWORD PTR [rbp+0xc],0x0
   14000adc0:	jne    0x14000adc7
   14000adc2:	call   0x14000c260
   14000adc7:	mov    r14d,DWORD PTR [rsp+0xd8]
   14000adcf:	lea    rax,[rsp+0x60]
   14000add4:	mov    QWORD PTR [rsp+0x30],r15
   14000add9:	mov    QWORD PTR [rsp+0x28],rax
   14000adde:	lea    rax,[rsp+0xb0]
   14000ade6:	mov    r8d,ebx
   14000ade9:	mov    r9d,r14d
   14000adec:	mov    rdx,rbp
   14000adef:	mov    rcx,r12
   14000adf2:	mov    QWORD PTR [rsp+0x20],rax
   14000adf7:	call   0x1400067d8
   14000adfc:	mov    ecx,DWORD PTR [rsp+0xb0]
   14000ae03:	cmp    ecx,DWORD PTR [rsp+0x60]
   14000ae07:	jae    0x14000af59
   14000ae0d:	lea    rdi,[rax+0xc]
   14000ae11:	lea    r13,[rdi-0xc]
   14000ae15:	cmp    r14d,DWORD PTR [r13+0x0]
   14000ae19:	jl     0x14000af42
   14000ae1f:	cmp    r14d,DWORD PTR [rdi-0x8]
   14000ae23:	jg     0x14000af42
   14000ae29:	call   0x140006b34
   14000ae2e:	movsxd rcx,DWORD PTR [rdi]
   14000ae31:	lea    rdx,[rcx+rcx*4]
   14000ae35:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000ae39:	lea    rdx,[rcx+rdx*4]
   14000ae3d:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000ae42:	je     0x14000ae67
   14000ae44:	call   0x140006b34
   14000ae49:	movsxd rcx,DWORD PTR [rdi]
   14000ae4c:	lea    rdx,[rcx+rcx*4]
   14000ae50:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000ae54:	lea    rdx,[rcx+rdx*4]
   14000ae58:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000ae5d:	call   0x140006b34
   14000ae62:	add    rax,rbx
   14000ae65:	jmp    0x14000ae69
   14000ae67:	xor    eax,eax
   14000ae69:	test   rax,rax
   14000ae6c:	je     0x14000aeb8
   14000ae6e:	call   0x140006b34
   14000ae73:	movsxd rcx,DWORD PTR [rdi]
   14000ae76:	lea    rdx,[rcx+rcx*4]
   14000ae7a:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000ae7e:	lea    rdx,[rcx+rdx*4]
   14000ae82:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000ae87:	je     0x14000aeac
   14000ae89:	call   0x140006b34
   14000ae8e:	movsxd rcx,DWORD PTR [rdi]
   14000ae91:	lea    rdx,[rcx+rcx*4]
   14000ae95:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000ae99:	lea    rdx,[rcx+rdx*4]
   14000ae9d:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000aea2:	call   0x140006b34
   14000aea7:	add    rax,rbx
   14000aeaa:	jmp    0x14000aeae
   14000aeac:	xor    eax,eax
   14000aeae:	cmp    BYTE PTR [rax+0x10],0x0
   14000aeb2:	jne    0x14000af3b
   14000aeb8:	call   0x140006b34
   14000aebd:	movsxd rcx,DWORD PTR [rdi]
   14000aec0:	lea    rdx,[rcx+rcx*4]
   14000aec4:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000aec8:	lea    rdx,[rcx+rdx*4]
   14000aecc:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14000aed1:	jne    0x14000af3b
   14000aed3:	call   0x140006b34
   14000aed8:	mov    ecx,DWORD PTR [rdi]
   14000aeda:	mov    r8,QWORD PTR [rsp+0xc0]
   14000aee2:	mov    BYTE PTR [rsp+0x58],0x0
   14000aee7:	mov    BYTE PTR [rsp+0x50],0x1
   14000aeec:	dec    ecx
   14000aeee:	movsxd rcx,ecx
   14000aef1:	mov    r9,r15
   14000aef4:	lea    rdx,[rcx+rcx*4]
   14000aef8:	lea    rcx,[rax+rdx*4]
   14000aefc:	movsxd rax,DWORD PTR [rdi+0x4]
   14000af00:	mov    rdx,r12
   14000af03:	add    rcx,rax
   14000af06:	mov    rax,QWORD PTR [rsp+0xe8]
   14000af0e:	mov    QWORD PTR [rsp+0x48],rax
   14000af13:	mov    eax,DWORD PTR [rsp+0xe0]
   14000af1a:	mov    DWORD PTR [rsp+0x40],eax
   14000af1e:	mov    QWORD PTR [rsp+0x38],r13
   14000af23:	and    QWORD PTR [rsp+0x30],0x0
   14000af29:	mov    QWORD PTR [rsp+0x28],rcx
   14000af2e:	mov    rcx,rsi
   14000af31:	mov    QWORD PTR [rsp+0x20],rbp
   14000af36:	call   0x14000a708
   14000af3b:	mov    ecx,DWORD PTR [rsp+0xb0]
   14000af42:	inc    ecx
   14000af44:	add    rdi,0x14
   14000af48:	mov    DWORD PTR [rsp+0xb0],ecx
   14000af4f:	cmp    ecx,DWORD PTR [rsp+0x60]
   14000af53:	jb     0x14000ae11
   14000af59:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000af61:	add    rsp,0x70
   14000af65:	pop    r15
   14000af67:	pop    r14
   14000af69:	pop    r13
   14000af6b:	pop    r12
   14000af6d:	pop    rdi
   14000af6e:	pop    rsi
   14000af6f:	pop    rbp
   14000af70:	ret    
   14000af71:	int3   
   14000af72:	int3   
   14000af73:	int3   
   14000af74:	mov    QWORD PTR [rsp+0x8],rbx
   14000af79:	mov    QWORD PTR [rsp+0x10],rbp
   14000af7e:	mov    QWORD PTR [rsp+0x18],rsi
   14000af83:	push   rdi
   14000af84:	push   r12
   14000af86:	push   r13
   14000af88:	push   r14
   14000af8a:	push   r15
   14000af8c:	sub    rsp,0x20
   14000af90:	mov    rsi,rdx
   14000af93:	mov    r13,rcx
   14000af96:	test   rdx,rdx
   14000af99:	je     0x14000b040
   14000af9f:	xor    edi,edi
   14000afa1:	xor    r14b,r14b
   14000afa4:	cmp    DWORD PTR [rdx],edi
   14000afa6:	jle    0x14000b020
   14000afa8:	call   0x140006b4c
   14000afad:	mov    rdx,rax
   14000afb0:	mov    rax,QWORD PTR [r13+0x30]
   14000afb4:	movsxd r15,DWORD PTR [rax+0xc]
   14000afb8:	add    r15,0x4
   14000afbc:	add    r15,rdx
   14000afbf:	call   0x140006b4c
   14000afc4:	mov    rdx,rax
   14000afc7:	mov    rax,QWORD PTR [r13+0x30]
   14000afcb:	movsxd rcx,DWORD PTR [rax+0xc]
   14000afcf:	mov    ebp,DWORD PTR [rdx+rcx*1]
   14000afd2:	test   ebp,ebp
   14000afd4:	jle    0x14000b01a
   14000afd6:	movsxd rax,edi
   14000afd9:	lea    r12,[rax+rax*4]
   14000afdd:	call   0x140006b4c
   14000afe2:	mov    rbx,rax
   14000afe5:	movsxd rax,DWORD PTR [r15]
   14000afe8:	add    rbx,rax
   14000afeb:	call   0x140006b34
   14000aff0:	movsxd rcx,DWORD PTR [rsi+0x4]
   14000aff4:	mov    r8,QWORD PTR [r13+0x30]
   14000aff8:	lea    rax,[rax+r12*4]
   14000affc:	mov    rdx,rbx
   14000afff:	add    rcx,rax
   14000b002:	call   0x14000c000
   14000b007:	test   eax,eax
   14000b009:	jne    0x14000b017
   14000b00b:	dec    ebp
   14000b00d:	add    r15,0x4
   14000b011:	test   ebp,ebp
   14000b013:	jg     0x14000afdd
   14000b015:	jmp    0x14000b01a
   14000b017:	mov    r14b,0x1
   14000b01a:	inc    edi
   14000b01c:	cmp    edi,DWORD PTR [rsi]
   14000b01e:	jl     0x14000afa8
   14000b020:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b025:	mov    rbp,QWORD PTR [rsp+0x58]
   14000b02a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b02f:	mov    al,r14b
   14000b032:	add    rsp,0x20
   14000b036:	pop    r15
   14000b038:	pop    r14
   14000b03a:	pop    r13
   14000b03c:	pop    r12
   14000b03e:	pop    rdi
   14000b03f:	ret    
   14000b040:	call   0x14000c260
   14000b045:	call   0x14000c280
   14000b04a:	int3   
   14000b04b:	int3   
   14000b04c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b051:	mov    QWORD PTR [rsp+0x10],rbp
   14000b056:	mov    QWORD PTR [rsp+0x18],rsi
   14000b05b:	push   rdi
   14000b05c:	sub    rsp,0x20
   14000b060:	xor    ebp,ebp
   14000b062:	mov    rdi,rcx
   14000b065:	cmp    DWORD PTR [rcx],ebp
   14000b067:	jle    0x14000b0b8
   14000b069:	xor    esi,esi
   14000b06b:	call   0x140006b34
   14000b070:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b074:	add    rax,rsi
   14000b077:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000b07c:	je     0x14000b099
   14000b07e:	call   0x140006b34
   14000b083:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b087:	add    rax,rsi
   14000b08a:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000b08f:	call   0x140006b34
   14000b094:	add    rax,rbx
   14000b097:	jmp    0x14000b09b
   14000b099:	xor    eax,eax
   14000b09b:	lea    rdx,[rip+0x32a76]        # 0x14003db18
   14000b0a2:	mov    rcx,rax
   14000b0a5:	call   0x1400071c0
   14000b0aa:	test   al,al
   14000b0ac:	jne    0x14000b0cf
   14000b0ae:	inc    ebp
   14000b0b0:	add    rsi,0x14
   14000b0b4:	cmp    ebp,DWORD PTR [rdi]
   14000b0b6:	jl     0x14000b06b
   14000b0b8:	xor    al,al
   14000b0ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b0bf:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b0c4:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b0c9:	add    rsp,0x20
   14000b0cd:	pop    rdi
   14000b0ce:	ret    
   14000b0cf:	mov    al,0x1
   14000b0d1:	jmp    0x14000b0ba
   14000b0d3:	int3   
   14000b0d4:	mov    r8d,DWORD PTR [rcx+0x18]
   14000b0d8:	mov    edx,DWORD PTR [rcx+0x4]
   14000b0db:	lea    r9,[rcx+0x20]
   14000b0df:	mov    ecx,DWORD PTR [rcx]
   14000b0e1:	rex.W jmp QWORD PTR [rip+0x21040]        # 0x14002c128
   14000b0e8:	sub    rsp,0x28
   14000b0ec:	call   0x14000a3ec
   14000b0f1:	xor    ecx,ecx
   14000b0f3:	cmp    DWORD PTR [rax+0x100],ecx
   14000b0f9:	setne  al
   14000b0fc:	add    rsp,0x28
   14000b100:	ret    
   14000b101:	int3   
   14000b102:	int3   
   14000b103:	int3   
   14000b104:	mov    rax,rsp
   14000b107:	mov    QWORD PTR [rax+0x8],rbx
   14000b10b:	mov    QWORD PTR [rax+0x10],rbp
   14000b10f:	mov    QWORD PTR [rax+0x18],rsi
   14000b113:	mov    QWORD PTR [rax+0x20],rdi
   14000b117:	push   r14
   14000b119:	sub    rsp,0x20
   14000b11d:	mov    rbx,rdx
   14000b120:	mov    r14,rcx
   14000b123:	test   rdx,rdx
   14000b126:	jne    0x14000b12d
   14000b128:	call   0x14000c260
   14000b12d:	mov    rbx,QWORD PTR [rbx]
   14000b130:	test   rbx,rbx
   14000b133:	jne    0x14000b13a
   14000b135:	call   0x14000c260
   14000b13a:	cmp    DWORD PTR [rbx],0xe06d7363
   14000b140:	jne    0x14000b155
   14000b142:	cmp    DWORD PTR [rbx+0x18],0x4
   14000b146:	jne    0x14000b155
   14000b148:	mov    eax,DWORD PTR [rbx+0x20]
   14000b14b:	sub    eax,0x19930520
   14000b150:	cmp    eax,0x2
   14000b153:	jbe    0x14000b15a
   14000b155:	call   0x14000c260
   14000b15a:	mov    rbp,QWORD PTR [rbx+0x38]
   14000b15e:	mov    rax,QWORD PTR [rbx+0x30]
   14000b162:	movsxd rcx,DWORD PTR [rax+0xc]
   14000b166:	lea    rsi,[rbp+0x4]
   14000b16a:	mov    edi,DWORD PTR [rcx+rbp*1]
   14000b16d:	add    rsi,rcx
   14000b170:	jmp    0x14000b19b
   14000b172:	movsxd rax,DWORD PTR [rsi]
   14000b175:	mov    rcx,r14
   14000b178:	movsxd rbx,DWORD PTR [rax+rbp*1+0x4]
   14000b17d:	call   0x140007274
   14000b182:	lea    rdx,[rbp+0x10]
   14000b186:	mov    rcx,rax
   14000b189:	add    rdx,rbx
   14000b18c:	call   0x14000c3b0
   14000b191:	test   eax,eax
   14000b193:	je     0x14000b1bc
   14000b195:	dec    edi
   14000b197:	add    rsi,0x4
   14000b19b:	test   edi,edi
   14000b19d:	jg     0x14000b172
   14000b19f:	xor    eax,eax
   14000b1a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b1a6:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b1ab:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b1b0:	mov    rdi,QWORD PTR [rsp+0x48]
   14000b1b5:	add    rsp,0x20
   14000b1b9:	pop    r14
   14000b1bb:	ret    
   14000b1bc:	mov    eax,0x1
   14000b1c1:	jmp    0x14000b1a1
   14000b1c3:	int3   
   14000b1c4:	mov    QWORD PTR [rip+0x32b15],rcx        # 0x14003dce0
   14000b1cb:	ret    
   14000b1cc:	movsxd rax,DWORD PTR [rdx]
   14000b1cf:	add    rax,rcx
   14000b1d2:	cmp    DWORD PTR [rdx+0x4],0x0
   14000b1d6:	jl     0x14000b1ee
   14000b1d8:	movsxd r9,DWORD PTR [rdx+0x4]
   14000b1dc:	movsxd rdx,DWORD PTR [rdx+0x8]
   14000b1e0:	mov    rcx,QWORD PTR [r9+rcx*1]
   14000b1e4:	movsxd r8,DWORD PTR [rdx+rcx*1]
   14000b1e8:	add    r8,r9
   14000b1eb:	add    rax,r8
   14000b1ee:	ret    
   14000b1ef:	int3   
   14000b1f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b1f5:	mov    QWORD PTR [rsp+0x10],rsi
   14000b1fa:	mov    QWORD PTR [rsp+0x18],rdi
   14000b1ff:	push   r14
   14000b201:	sub    rsp,0x20
   14000b205:	mov    rdi,r9
   14000b208:	mov    r14,rcx
   14000b20b:	test   DWORD PTR [r8],0x80000000
   14000b212:	je     0x14000b219
   14000b214:	mov    rsi,rdx
   14000b217:	jmp    0x14000b220
   14000b219:	movsxd rsi,DWORD PTR [r8+0x8]
   14000b21d:	add    rsi,QWORD PTR [rdx]
   14000b220:	call   0x14000b2a8
   14000b225:	dec    eax
   14000b227:	je     0x14000b260
   14000b229:	dec    eax
   14000b22b:	jne    0x14000b288
   14000b22d:	xor    ebx,ebx
   14000b22f:	cmp    DWORD PTR [rdi+0x18],ebx
   14000b232:	je     0x14000b243
   14000b234:	call   0x140006b4c
   14000b239:	mov    rbx,rax
   14000b23c:	movsxd rax,DWORD PTR [rdi+0x18]
   14000b240:	add    rbx,rax
   14000b243:	lea    rdx,[rdi+0x8]
   14000b247:	mov    rcx,QWORD PTR [r14+0x28]
   14000b24b:	call   0x14000b1cc
   14000b250:	mov    rdx,rax
   14000b253:	mov    r8d,0x1
   14000b259:	mov    rcx,rsi
   14000b25c:	call   rbx
   14000b25e:	jmp    0x14000b288
   14000b260:	xor    ebx,ebx
   14000b262:	cmp    DWORD PTR [rdi+0x18],ebx
   14000b265:	je     0x14000b273
   14000b267:	call   0x140006b4c
   14000b26c:	movsxd rbx,DWORD PTR [rdi+0x18]
   14000b270:	add    rbx,rax
   14000b273:	lea    rdx,[rdi+0x8]
   14000b277:	mov    rcx,QWORD PTR [r14+0x28]
   14000b27b:	call   0x14000b1cc
   14000b280:	mov    rdx,rax
   14000b283:	mov    rcx,rsi
   14000b286:	call   rbx
   14000b288:	jmp    0x14000b290
   14000b28a:	call   0x14000c280
   14000b28f:	nop
   14000b290:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b295:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b29a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000b29f:	add    rsp,0x20
   14000b2a3:	pop    r14
   14000b2a5:	ret    
   14000b2a6:	int3   
   14000b2a7:	int3   
   14000b2a8:	mov    QWORD PTR [rsp+0x8],rbx
   14000b2ad:	mov    QWORD PTR [rsp+0x10],rsi
   14000b2b2:	mov    QWORD PTR [rsp+0x18],rdi
   14000b2b7:	push   r13
   14000b2b9:	push   r14
   14000b2bb:	push   r15
   14000b2bd:	sub    rsp,0x30
   14000b2c1:	mov    r14,r9
   14000b2c4:	mov    rbx,r8
   14000b2c7:	mov    rsi,rdx
   14000b2ca:	mov    r13,rcx
   14000b2cd:	xor    edi,edi
   14000b2cf:	mov    r15d,DWORD PTR [r8+0x4]
   14000b2d3:	test   r15d,r15d
   14000b2d6:	je     0x14000b2e6
   14000b2d8:	movsxd r15,r15d
   14000b2db:	call   0x140006b34
   14000b2e0:	lea    rdx,[r15+rax*1]
   14000b2e4:	jmp    0x14000b2e9
   14000b2e6:	mov    rdx,rdi
   14000b2e9:	test   rdx,rdx
   14000b2ec:	je     0x14000b4db
   14000b2f2:	test   r15d,r15d
   14000b2f5:	je     0x14000b308
   14000b2f7:	call   0x140006b34
   14000b2fc:	mov    rcx,rax
   14000b2ff:	movsxd rax,DWORD PTR [rbx+0x4]
   14000b303:	add    rcx,rax
   14000b306:	jmp    0x14000b30b
   14000b308:	mov    rcx,rdi
   14000b30b:	cmp    BYTE PTR [rcx+0x10],dil
   14000b30f:	je     0x14000b4db
   14000b315:	cmp    DWORD PTR [rbx+0x8],edi
   14000b318:	jne    0x14000b326
   14000b31a:	test   DWORD PTR [rbx],0x80000000
   14000b320:	je     0x14000b4db
   14000b326:	mov    ecx,DWORD PTR [rbx]
   14000b328:	test   ecx,ecx
   14000b32a:	js     0x14000b336
   14000b32c:	movsxd rax,DWORD PTR [rbx+0x8]
   14000b330:	add    rax,QWORD PTR [rsi]
   14000b333:	mov    rsi,rax
   14000b336:	test   cl,cl
   14000b338:	jns    0x14000b391
   14000b33a:	test   BYTE PTR [r14],0x10
   14000b33e:	je     0x14000b391
   14000b340:	mov    rax,QWORD PTR [rip+0x32999]        # 0x14003dce0
   14000b347:	test   rax,rax
   14000b34a:	je     0x14000b391
   14000b34c:	call   rax
   14000b34e:	mov    r15,rax
   14000b351:	mov    ebx,0x1
   14000b356:	mov    edx,ebx
   14000b358:	mov    rcx,rax
   14000b35b:	call   0x140013b90
   14000b360:	test   eax,eax
   14000b362:	je     0x14000b4cb
   14000b368:	mov    edx,ebx
   14000b36a:	mov    rcx,rsi
   14000b36d:	call   0x140013b9c
   14000b372:	test   eax,eax
   14000b374:	je     0x14000b4cb
   14000b37a:	mov    QWORD PTR [rsi],r15
   14000b37d:	mov    rcx,r15
   14000b380:	lea    rdx,[r14+0x8]
   14000b384:	call   0x14000b1cc
   14000b389:	mov    QWORD PTR [rsi],rax
   14000b38c:	jmp    0x14000b4d1
   14000b391:	mov    ebx,0x1
   14000b396:	test   cl,0x8
   14000b399:	je     0x14000b3c9
   14000b39b:	mov    edx,ebx
   14000b39d:	mov    rcx,QWORD PTR [r13+0x28]
   14000b3a1:	call   0x140013b90
   14000b3a6:	test   eax,eax
   14000b3a8:	je     0x14000b4cb
   14000b3ae:	mov    edx,ebx
   14000b3b0:	mov    rcx,rsi
   14000b3b3:	call   0x140013b9c
   14000b3b8:	test   eax,eax
   14000b3ba:	je     0x14000b4cb
   14000b3c0:	mov    rcx,QWORD PTR [r13+0x28]
   14000b3c4:	mov    QWORD PTR [rsi],rcx
   14000b3c7:	jmp    0x14000b380
   14000b3c9:	test   BYTE PTR [r14],bl
   14000b3cc:	je     0x14000b41f
   14000b3ce:	mov    edx,ebx
   14000b3d0:	mov    rcx,QWORD PTR [r13+0x28]
   14000b3d4:	call   0x140013b90
   14000b3d9:	test   eax,eax
   14000b3db:	je     0x14000b4cb
   14000b3e1:	mov    edx,ebx
   14000b3e3:	mov    rcx,rsi
   14000b3e6:	call   0x140013b9c
   14000b3eb:	test   eax,eax
   14000b3ed:	je     0x14000b4cb
   14000b3f3:	movsxd r8,DWORD PTR [r14+0x14]
   14000b3f7:	mov    rdx,QWORD PTR [r13+0x28]
   14000b3fb:	mov    rcx,rsi
   14000b3fe:	call   0x1400059f0
   14000b403:	cmp    DWORD PTR [r14+0x14],0x8
   14000b408:	jne    0x14000b4d1
   14000b40e:	cmp    QWORD PTR [rsi],rdi
   14000b411:	je     0x14000b4d1
   14000b417:	mov    rcx,QWORD PTR [rsi]
   14000b41a:	jmp    0x14000b380
   14000b41f:	cmp    DWORD PTR [r14+0x18],edi
   14000b423:	je     0x14000b436
   14000b425:	call   0x140006b4c
   14000b42a:	mov    rcx,rax
   14000b42d:	movsxd rax,DWORD PTR [r14+0x18]
   14000b431:	add    rcx,rax
   14000b434:	jmp    0x14000b439
   14000b436:	mov    rcx,rdi
   14000b439:	mov    edx,ebx
   14000b43b:	test   rcx,rcx
   14000b43e:	mov    rcx,QWORD PTR [r13+0x28]
   14000b442:	jne    0x14000b47c
   14000b444:	call   0x140013b90
   14000b449:	test   eax,eax
   14000b44b:	je     0x14000b4cb
   14000b44d:	mov    edx,ebx
   14000b44f:	mov    rcx,rsi
   14000b452:	call   0x140013b9c
   14000b457:	test   eax,eax
   14000b459:	je     0x14000b4cb
   14000b45b:	movsxd rbx,DWORD PTR [r14+0x14]
   14000b45f:	lea    rdx,[r14+0x8]
   14000b463:	mov    rcx,QWORD PTR [r13+0x28]
   14000b467:	call   0x14000b1cc
   14000b46c:	mov    rdx,rax
   14000b46f:	mov    r8,rbx
   14000b472:	mov    rcx,rsi
   14000b475:	call   0x1400059f0
   14000b47a:	jmp    0x14000b4d1
   14000b47c:	call   0x140013b90
   14000b481:	test   eax,eax
   14000b483:	je     0x14000b4cb
   14000b485:	mov    edx,ebx
   14000b487:	mov    rcx,rsi
   14000b48a:	call   0x140013b9c
   14000b48f:	test   eax,eax
   14000b491:	je     0x14000b4cb
   14000b493:	cmp    DWORD PTR [r14+0x18],edi
   14000b497:	je     0x14000b4aa
   14000b499:	call   0x140006b4c
   14000b49e:	mov    rcx,rax
   14000b4a1:	movsxd rax,DWORD PTR [r14+0x18]
   14000b4a5:	add    rcx,rax
   14000b4a8:	jmp    0x14000b4ad
   14000b4aa:	mov    rcx,rdi
   14000b4ad:	call   0x140013b84
   14000b4b2:	test   eax,eax
   14000b4b4:	je     0x14000b4cb
   14000b4b6:	mov    al,BYTE PTR [r14]
   14000b4b9:	and    al,0x4
   14000b4bb:	neg    al
   14000b4bd:	sbb    ecx,ecx
   14000b4bf:	neg    ecx
   14000b4c1:	add    ecx,ebx
   14000b4c3:	mov    edi,ecx
   14000b4c5:	mov    DWORD PTR [rsp+0x20],ecx
   14000b4c9:	jmp    0x14000b4d1
   14000b4cb:	call   0x14000c260
   14000b4d0:	nop
   14000b4d1:	mov    eax,edi
   14000b4d3:	jmp    0x14000b4dd
   14000b4d5:	call   0x14000c280
   14000b4da:	nop
   14000b4db:	xor    eax,eax
   14000b4dd:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b4e2:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b4e7:	mov    rdi,QWORD PTR [rsp+0x60]
   14000b4ec:	add    rsp,0x30
   14000b4f0:	pop    r15
   14000b4f2:	pop    r14
   14000b4f4:	pop    r13
   14000b4f6:	ret    
   14000b4f7:	int3   
   14000b4f8:	rex push rbx
   14000b4fa:	push   rsi
   14000b4fb:	push   rdi
   14000b4fc:	push   r12
   14000b4fe:	push   r13
   14000b500:	push   r14
   14000b502:	push   r15
   14000b504:	sub    rsp,0x90
   14000b50b:	mov    rdi,rcx
   14000b50e:	xor    r15d,r15d
   14000b511:	mov    DWORD PTR [rsp+0x20],r15d
   14000b516:	and    DWORD PTR [rsp+0xd0],r15d
   14000b51e:	and    QWORD PTR [rsp+0x40],r15
   14000b523:	and    QWORD PTR [rsp+0xe8],r15
   14000b52b:	call   0x14000a3ec
   14000b530:	mov    r13,QWORD PTR [rax+0xf8]
   14000b537:	mov    QWORD PTR [rsp+0x50],r13
   14000b53c:	call   0x14000a3ec
   14000b541:	mov    rax,QWORD PTR [rax+0xf0]
   14000b548:	mov    QWORD PTR [rsp+0xe0],rax
   14000b550:	mov    rsi,QWORD PTR [rdi+0x50]
   14000b554:	mov    QWORD PTR [rsp+0xd8],rsi
   14000b55c:	mov    rax,QWORD PTR [rdi+0x48]
   14000b560:	mov    QWORD PTR [rsp+0x48],rax
   14000b565:	mov    rbx,QWORD PTR [rdi+0x40]
   14000b569:	mov    rax,QWORD PTR [rdi+0x30]
   14000b56d:	mov    QWORD PTR [rsp+0x58],rax
   14000b572:	mov    r14,QWORD PTR [rdi+0x28]
   14000b576:	mov    QWORD PTR [rsp+0x60],r14
   14000b57b:	call   0x14000a3ec
   14000b580:	mov    QWORD PTR [rax+0xf0],rsi
   14000b587:	call   0x14000a3ec
   14000b58c:	mov    QWORD PTR [rax+0xf8],rbx
   14000b593:	call   0x14000a3ec
   14000b598:	mov    rdx,QWORD PTR [rax+0xf0]
   14000b59f:	mov    rdx,QWORD PTR [rdx+0x28]
   14000b5a3:	lea    rcx,[rsp+0x78]
   14000b5a8:	call   0x140006a90
   14000b5ad:	mov    r12,rax
   14000b5b0:	mov    QWORD PTR [rsp+0x38],rax
   14000b5b5:	cmp    QWORD PTR [rdi+0x58],r15
   14000b5b9:	je     0x14000b5da
   14000b5bb:	mov    DWORD PTR [rsp+0xd0],0x1
   14000b5c6:	call   0x14000a3ec
   14000b5cb:	mov    rcx,QWORD PTR [rax+0x138]
   14000b5d2:	mov    QWORD PTR [rsp+0xe8],rcx
   14000b5da:	mov    r8d,0x100
   14000b5e0:	mov    rdx,r14
   14000b5e3:	mov    rcx,QWORD PTR [rsp+0x58]
   14000b5e8:	call   0x140013bc0
   14000b5ed:	mov    rbx,rax
   14000b5f0:	mov    QWORD PTR [rsp+0x40],rax
   14000b5f5:	mov    rdi,QWORD PTR [rsp+0xe0]
   14000b5fd:	jmp    0x14000b67a
   14000b5ff:	mov    DWORD PTR [rsp+0x20],0x1
   14000b607:	call   0x14000a3ec
   14000b60c:	and    DWORD PTR [rax+0x460],0x0
   14000b613:	mov    rsi,QWORD PTR [rsp+0xd8]
   14000b61b:	cmp    DWORD PTR [rsp+0xd0],0x0
   14000b623:	je     0x14000b646
   14000b625:	mov    dl,0x1
   14000b627:	mov    rcx,rsi
   14000b62a:	call   0x14000a5fc
   14000b62f:	mov    rax,QWORD PTR [rsp+0xe8]
   14000b637:	lea    r9,[rax+0x20]
   14000b63b:	mov    r8d,DWORD PTR [rax+0x18]
   14000b63f:	mov    edx,DWORD PTR [rax+0x4]
   14000b642:	mov    ecx,DWORD PTR [rax]
   14000b644:	jmp    0x14000b653
   14000b646:	lea    r9,[rsi+0x20]
   14000b64a:	mov    r8d,DWORD PTR [rsi+0x18]
   14000b64e:	mov    edx,DWORD PTR [rsi+0x4]
   14000b651:	mov    ecx,DWORD PTR [rsi]
   14000b653:	call   QWORD PTR [rip+0x20acf]        # 0x14002c128
   14000b659:	mov    r15d,DWORD PTR [rsp+0x20]
   14000b65e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b663:	mov    r13,QWORD PTR [rsp+0x50]
   14000b668:	mov    rdi,QWORD PTR [rsp+0xe0]
   14000b670:	mov    r14,QWORD PTR [rsp+0x60]
   14000b675:	mov    r12,QWORD PTR [rsp+0x38]
   14000b67a:	mov    rcx,r12
   14000b67d:	call   0x140006ad4
   14000b682:	test   r15d,r15d
   14000b685:	jne    0x14000b6b9
   14000b687:	cmp    DWORD PTR [rsi],0xe06d7363
   14000b68d:	jne    0x14000b6b9
   14000b68f:	cmp    DWORD PTR [rsi+0x18],0x4
   14000b693:	jne    0x14000b6b9
   14000b695:	mov    eax,DWORD PTR [rsi+0x20]
   14000b698:	sub    eax,0x19930520
   14000b69d:	cmp    eax,0x2
   14000b6a0:	ja     0x14000b6b9
   14000b6a2:	mov    rcx,QWORD PTR [rsi+0x28]
   14000b6a6:	call   0x140006b64
   14000b6ab:	test   eax,eax
   14000b6ad:	je     0x14000b6b9
   14000b6af:	mov    dl,0x1
   14000b6b1:	mov    rcx,rsi
   14000b6b4:	call   0x14000a5fc
   14000b6b9:	call   0x14000a3ec
   14000b6be:	mov    QWORD PTR [rax+0xf0],rdi
   14000b6c5:	call   0x14000a3ec
   14000b6ca:	mov    QWORD PTR [rax+0xf8],r13
   14000b6d1:	mov    rax,QWORD PTR [rsp+0x48]
   14000b6d6:	movsxd rcx,DWORD PTR [rax+0x1c]
   14000b6da:	mov    rax,QWORD PTR [r14]
   14000b6dd:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14000b6e5:	mov    rax,rbx
   14000b6e8:	add    rsp,0x90
   14000b6ef:	pop    r15
   14000b6f1:	pop    r14
   14000b6f3:	pop    r13
   14000b6f5:	pop    r12
   14000b6f7:	pop    rdi
   14000b6f8:	pop    rsi
   14000b6f9:	pop    rbx
   14000b6fa:	ret    
   14000b6fb:	int3   
   14000b6fc:	sub    rsp,0x28
   14000b700:	test   rcx,rcx
   14000b703:	je     0x14000b73c
   14000b705:	mov    rcx,QWORD PTR [rcx]
   14000b708:	cmp    DWORD PTR [rcx],0xe06d7363
   14000b70e:	jne    0x14000b73c
   14000b710:	cmp    DWORD PTR [rcx+0x18],0x4
   14000b714:	jne    0x14000b73c
   14000b716:	mov    eax,DWORD PTR [rcx+0x20]
   14000b719:	sub    eax,0x19930520
   14000b71e:	cmp    eax,0x2
   14000b721:	ja     0x14000b73c
   14000b723:	cmp    QWORD PTR [rcx+0x30],0x0
   14000b728:	jne    0x14000b73c
   14000b72a:	call   0x14000a3ec
   14000b72f:	inc    DWORD PTR [rax+0x100]
   14000b735:	mov    eax,0x1
   14000b73a:	jmp    0x14000b73e
   14000b73c:	xor    eax,eax
   14000b73e:	add    rsp,0x28
   14000b742:	ret    
   14000b743:	int3   
   14000b744:	mov    QWORD PTR [rsp+0x10],rbx
   14000b749:	mov    QWORD PTR [rsp+0x18],rsi
   14000b74e:	mov    QWORD PTR [rsp+0x20],rdi
   14000b753:	push   r12
   14000b755:	push   r14
   14000b757:	push   r15
   14000b759:	sub    rsp,0x60
   14000b75d:	mov    QWORD PTR [rsp+0x38],rsp
   14000b762:	mov    r12,r9
   14000b765:	mov    esi,r8d
   14000b768:	mov    rdi,rdx
   14000b76b:	test   rcx,rcx
   14000b76e:	jne    0x14000b777
   14000b770:	xor    eax,eax
   14000b772:	jmp    0x14000b91f
   14000b777:	mov    rbx,QWORD PTR [rcx]
   14000b77a:	test   rdx,rdx
   14000b77d:	je     0x14000b785
   14000b77f:	cmp    BYTE PTR [rdx+0x10],0x0
   14000b783:	jne    0x14000b7a7
   14000b785:	cmp    DWORD PTR [rbx],0xe0434f4d
   14000b78b:	je     0x14000b8da
   14000b791:	cmp    DWORD PTR [rbx],0xe0434352
   14000b797:	je     0x14000b8da
   14000b79d:	test   sil,0x40
   14000b7a1:	je     0x14000b8da
   14000b7a7:	cmp    DWORD PTR [rbx],0xe06d7363
   14000b7ad:	jne    0x14000b770
   14000b7af:	cmp    DWORD PTR [rbx+0x18],0x4
   14000b7b3:	jne    0x14000b770
   14000b7b5:	mov    eax,DWORD PTR [rbx+0x20]
   14000b7b8:	sub    eax,0x19930520
   14000b7bd:	cmp    eax,0x2
   14000b7c0:	ja     0x14000b770
   14000b7c2:	cmp    QWORD PTR [rbx+0x30],0x0
   14000b7c7:	jne    0x14000b7e4
   14000b7c9:	call   0x14000a3ec
   14000b7ce:	cmp    QWORD PTR [rax+0xf0],0x0
   14000b7d6:	je     0x14000b770
   14000b7d8:	call   0x14000a3ec
   14000b7dd:	mov    rbx,QWORD PTR [rax+0xf0]
   14000b7e4:	call   0x140006b34
   14000b7e9:	mov    r15,rax
   14000b7ec:	mov    QWORD PTR [rsp+0x30],rax
   14000b7f1:	mov    rcx,QWORD PTR [rbx+0x38]
   14000b7f5:	call   0x140006bc0
   14000b7fa:	nop
   14000b7fb:	lea    rdx,[rsp+0x80]
   14000b803:	mov    rcx,rdi
   14000b806:	call   QWORD PTR [rip+0x20914]        # 0x14002c120
   14000b80c:	mov    QWORD PTR [rsp+0x80],rax
   14000b814:	mov    rcx,rax
   14000b817:	call   0x140006ba4
   14000b81c:	sub    rdi,QWORD PTR [rsp+0x80]
   14000b824:	mov    DWORD PTR [rsp+0x44],edi
   14000b828:	mov    DWORD PTR [rsp+0x40],esi
   14000b82c:	bts    esi,0x1f
   14000b830:	mov    DWORD PTR [rsp+0x40],esi
   14000b834:	call   0x140006b4c
   14000b839:	mov    rcx,QWORD PTR [rbx+0x30]
   14000b83d:	movsxd rsi,DWORD PTR [rcx+0xc]
   14000b841:	add    rax,0x4
   14000b845:	add    rsi,rax
   14000b848:	mov    QWORD PTR [rsp+0x28],rsi
   14000b84d:	call   0x140006b4c
   14000b852:	mov    rcx,QWORD PTR [rbx+0x30]
   14000b856:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000b85a:	mov    edi,DWORD PTR [rax+rdx*1]
   14000b85d:	mov    DWORD PTR [rsp+0x20],edi
   14000b861:	test   edi,edi
   14000b863:	jle    0x14000b8cd
   14000b865:	call   0x140006b4c
   14000b86a:	mov    r14,rax
   14000b86d:	movsxd rax,DWORD PTR [rsi]
   14000b870:	add    r14,rax
   14000b873:	mov    r8,QWORD PTR [rbx+0x30]
   14000b877:	mov    rdx,r14
   14000b87a:	lea    rcx,[rsp+0x40]
   14000b87f:	call   0x14000c000
   14000b884:	test   eax,eax
   14000b886:	je     0x14000b8bc
   14000b888:	call   0x14000a3ec
   14000b88d:	inc    DWORD PTR [rax+0x100]
   14000b893:	test   r12,r12
   14000b896:	je     0x14000b8ab
   14000b898:	mov    r9,r14
   14000b89b:	lea    r8,[rsp+0x40]
   14000b8a0:	mov    rdx,r12
   14000b8a3:	mov    rcx,rbx
   14000b8a6:	call   0x14000b1f0
   14000b8ab:	lea    rdx,[rip+0x68]        # 0x14000b91a
   14000b8b2:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b8b7:	call   0x140010cd0
   14000b8bc:	dec    edi
   14000b8be:	mov    DWORD PTR [rsp+0x20],edi
   14000b8c2:	add    rsi,0x4
   14000b8c6:	mov    QWORD PTR [rsp+0x28],rsi
   14000b8cb:	jmp    0x14000b861
   14000b8cd:	mov    rcx,r15
   14000b8d0:	call   0x140006ba4
   14000b8d5:	jmp    0x14000b770
   14000b8da:	cmp    DWORD PTR [rbx],0xe06d7363
   14000b8e0:	jne    0x14000b90f
   14000b8e2:	cmp    DWORD PTR [rbx+0x18],0x4
   14000b8e6:	jne    0x14000b90f
   14000b8e8:	mov    eax,DWORD PTR [rbx+0x20]
   14000b8eb:	sub    eax,0x19930520
   14000b8f0:	cmp    eax,0x2
   14000b8f3:	ja     0x14000b90f
   14000b8f5:	cmp    QWORD PTR [rbx+0x30],0x0
   14000b8fa:	jne    0x14000b90f
   14000b8fc:	call   0x14000a3ec
   14000b901:	cmp    QWORD PTR [rax+0xf0],0x0
   14000b909:	je     0x14000b770
   14000b90f:	call   0x14000a3ec
   14000b914:	inc    DWORD PTR [rax+0x100]
   14000b91a:	mov    eax,0x1
   14000b91f:	lea    r11,[rsp+0x60]
   14000b924:	mov    rbx,QWORD PTR [r11+0x28]
   14000b928:	mov    rsi,QWORD PTR [r11+0x30]
   14000b92c:	mov    rdi,QWORD PTR [r11+0x38]
   14000b930:	mov    rsp,r11
   14000b933:	pop    r15
   14000b935:	pop    r14
   14000b937:	pop    r12
   14000b939:	ret    
   14000b93a:	int3   
   14000b93b:	int3   
   14000b93c:	mov    eax,0x20
   14000b941:	ret    
   14000b942:	int3   
   14000b943:	int3   
   14000b944:	mov    QWORD PTR [rsp+0x8],rbx
   14000b949:	push   rdi
   14000b94a:	sub    rsp,0x20
   14000b94e:	mov    rdi,rdx
   14000b951:	test   rcx,rcx
   14000b954:	je     0x14000b9c6
   14000b956:	mov    rbx,QWORD PTR [rcx]
   14000b959:	test   rbx,rbx
   14000b95c:	je     0x14000b9c6
   14000b95e:	cmp    DWORD PTR [rbx],0xe06d7363
   14000b964:	jne    0x14000b98c
   14000b966:	cmp    DWORD PTR [rbx+0x18],0x4
   14000b96a:	jne    0x14000b98c
   14000b96c:	mov    eax,DWORD PTR [rbx+0x20]
   14000b96f:	sub    eax,0x19930520
   14000b974:	cmp    eax,0x2
   14000b977:	ja     0x14000b98c
   14000b979:	cmp    QWORD PTR [rbx+0x30],0x0
   14000b97e:	jne    0x14000b98c
   14000b980:	call   0x14000a3ec
   14000b985:	mov    rbx,QWORD PTR [rax+0xf0]
   14000b98c:	mov    rdx,QWORD PTR [rbx+0x28]
   14000b990:	mov    rcx,rdi
   14000b993:	call   0x140006a90
   14000b998:	call   0x14000a3ec
   14000b99d:	mov    rcx,QWORD PTR [rax+0xf0]
   14000b9a4:	mov    QWORD PTR [rdi+0x10],rcx
   14000b9a8:	call   0x14000a3ec
   14000b9ad:	mov    rcx,QWORD PTR [rax+0xf8]
   14000b9b4:	mov    QWORD PTR [rdi+0x18],rcx
   14000b9b8:	call   0x14000a3ec
   14000b9bd:	mov    QWORD PTR [rax+0xf0],rbx
   14000b9c4:	jmp    0x14000b9d0
   14000b9c6:	or     QWORD PTR [rdx+0x10],0xffffffffffffffff
   14000b9cb:	or     QWORD PTR [rdx+0x18],0xffffffffffffffff
   14000b9d0:	call   0x14000a3ec
   14000b9d5:	dec    DWORD PTR [rax+0x100]
   14000b9db:	call   0x14000a3ec
   14000b9e0:	cmp    DWORD PTR [rax+0x100],0x0
   14000b9e7:	jge    0x14000b9f5
   14000b9e9:	call   0x14000a3ec
   14000b9ee:	and    DWORD PTR [rax+0x100],0x0
   14000b9f5:	mov    eax,0x1
   14000b9fa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b9ff:	add    rsp,0x20
   14000ba03:	pop    rdi
   14000ba04:	ret    
   14000ba05:	int3   
   14000ba06:	int3   
   14000ba07:	int3   
   14000ba08:	mov    QWORD PTR [rsp+0x8],rbx
   14000ba0d:	push   rdi
   14000ba0e:	sub    rsp,0x20
   14000ba12:	cmp    QWORD PTR [rcx+0x10],0xffffffffffffffff
   14000ba17:	mov    edi,edx
   14000ba19:	mov    rbx,rcx
   14000ba1c:	je     0x14000bb54
   14000ba22:	call   0x140006ad4
   14000ba27:	test   edi,edi
   14000ba29:	jne    0x14000bac0
   14000ba2f:	call   0x14000a3ec
   14000ba34:	mov    rcx,QWORD PTR [rax+0xf0]
   14000ba3b:	cmp    DWORD PTR [rcx],0xe06d7363
   14000ba41:	jne    0x14000bac0
   14000ba43:	call   0x14000a3ec
   14000ba48:	mov    rcx,QWORD PTR [rax+0xf0]
   14000ba4f:	cmp    DWORD PTR [rcx+0x18],0x4
   14000ba53:	jne    0x14000bac0
   14000ba55:	call   0x14000a3ec
   14000ba5a:	mov    rcx,QWORD PTR [rax+0xf0]
   14000ba61:	cmp    DWORD PTR [rcx+0x20],0x19930520
   14000ba68:	je     0x14000ba94
   14000ba6a:	call   0x14000a3ec
   14000ba6f:	mov    rcx,QWORD PTR [rax+0xf0]
   14000ba76:	cmp    DWORD PTR [rcx+0x20],0x19930521
   14000ba7d:	je     0x14000ba94
   14000ba7f:	call   0x14000a3ec
   14000ba84:	mov    rcx,QWORD PTR [rax+0xf0]
   14000ba8b:	cmp    DWORD PTR [rcx+0x20],0x19930522
   14000ba92:	jne    0x14000bac0
   14000ba94:	call   0x14000a3ec
   14000ba99:	mov    rcx,QWORD PTR [rax+0xf0]
   14000baa0:	mov    rcx,QWORD PTR [rcx+0x28]
   14000baa4:	call   0x140006b64
   14000baa9:	test   eax,eax
   14000baab:	je     0x14000bac0
   14000baad:	call   0x14000a3ec
   14000bab2:	mov    dl,0x1
   14000bab4:	mov    rcx,QWORD PTR [rax+0xf0]
   14000babb:	call   0x14000a5fc
   14000bac0:	call   0x14000a3ec
   14000bac5:	mov    rcx,QWORD PTR [rax+0xf0]
   14000bacc:	cmp    DWORD PTR [rcx],0xe06d7363
   14000bad2:	jne    0x14000bb34
   14000bad4:	call   0x14000a3ec
   14000bad9:	mov    rcx,QWORD PTR [rax+0xf0]
   14000bae0:	cmp    DWORD PTR [rcx+0x18],0x4
   14000bae4:	jne    0x14000bb34
   14000bae6:	call   0x14000a3ec
   14000baeb:	mov    rcx,QWORD PTR [rax+0xf0]
   14000baf2:	cmp    DWORD PTR [rcx+0x20],0x19930520
   14000baf9:	je     0x14000bb25
   14000bafb:	call   0x14000a3ec
   14000bb00:	mov    rcx,QWORD PTR [rax+0xf0]
   14000bb07:	cmp    DWORD PTR [rcx+0x20],0x19930521
   14000bb0e:	je     0x14000bb25
   14000bb10:	call   0x14000a3ec
   14000bb15:	mov    rcx,QWORD PTR [rax+0xf0]
   14000bb1c:	cmp    DWORD PTR [rcx+0x20],0x19930522
   14000bb23:	jne    0x14000bb34
   14000bb25:	test   edi,edi
   14000bb27:	je     0x14000bb34
   14000bb29:	call   0x14000a3ec
   14000bb2e:	dec    DWORD PTR [rax+0x100]
   14000bb34:	call   0x14000a3ec
   14000bb39:	mov    rcx,QWORD PTR [rbx+0x10]
   14000bb3d:	mov    QWORD PTR [rax+0xf0],rcx
   14000bb44:	call   0x14000a3ec
   14000bb49:	mov    rcx,QWORD PTR [rbx+0x18]
   14000bb4d:	mov    QWORD PTR [rax+0xf8],rcx
   14000bb54:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bb59:	add    rsp,0x20
   14000bb5d:	pop    rdi
   14000bb5e:	ret    
   14000bb5f:	int3   
   14000bb60:	sub    rsp,0x28
   14000bb64:	mov    rax,QWORD PTR [rcx]
   14000bb67:	cmp    DWORD PTR [rax],0xe0434352
   14000bb6d:	je     0x14000bb81
   14000bb6f:	cmp    DWORD PTR [rax],0xe0434f4d
   14000bb75:	je     0x14000bb81
   14000bb77:	cmp    DWORD PTR [rax],0xe06d7363
   14000bb7d:	jne    0x14000bb9a
   14000bb7f:	jmp    0x14000bba1
   14000bb81:	call   0x14000a3ec
   14000bb86:	cmp    DWORD PTR [rax+0x100],0x0
   14000bb8d:	jle    0x14000bb9a
   14000bb8f:	call   0x14000a3ec
   14000bb94:	dec    DWORD PTR [rax+0x100]
   14000bb9a:	xor    eax,eax
   14000bb9c:	add    rsp,0x28
   14000bba0:	ret    
   14000bba1:	call   0x14000a3ec
   14000bba6:	and    DWORD PTR [rax+0x100],0x0
   14000bbad:	call   0x14000c280
   14000bbb2:	int3   
   14000bbb3:	int3   
   14000bbb4:	mov    rax,rsp
   14000bbb7:	mov    DWORD PTR [rax+0x20],r9d
   14000bbbb:	mov    QWORD PTR [rax+0x18],r8
   14000bbbf:	mov    QWORD PTR [rax+0x10],rdx
   14000bbc3:	mov    QWORD PTR [rax+0x8],rcx
   14000bbc7:	push   rbx
   14000bbc8:	push   rsi
   14000bbc9:	push   rdi
   14000bbca:	push   r12
   14000bbcc:	push   r13
   14000bbce:	push   r14
   14000bbd0:	push   r15
   14000bbd2:	sub    rsp,0x30
   14000bbd6:	mov    r12d,r9d
   14000bbd9:	mov    rsi,r8
   14000bbdc:	mov    r13,rdx
   14000bbdf:	mov    r15,rcx
   14000bbe2:	call   0x140006b34
   14000bbe7:	mov    QWORD PTR [rsp+0x28],rax
   14000bbec:	mov    r8,rsi
   14000bbef:	mov    rdx,r13
   14000bbf2:	mov    rcx,r15
   14000bbf5:	call   0x14000c130
   14000bbfa:	mov    edi,eax
   14000bbfc:	call   0x14000a3ec
   14000bc01:	inc    DWORD PTR [rax+0x100]
   14000bc07:	cmp    edi,0xffffffff
   14000bc0a:	je     0x14000bcfd
   14000bc10:	cmp    edi,r12d
   14000bc13:	jle    0x14000bcfd
   14000bc19:	cmp    edi,0xffffffff
   14000bc1c:	jle    0x14000bc23
   14000bc1e:	cmp    edi,DWORD PTR [rsi+0x4]
   14000bc21:	jl     0x14000bc28
   14000bc23:	call   0x14000c260
   14000bc28:	movsxd r14,edi
   14000bc2b:	call   0x140006b34
   14000bc30:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000bc34:	lea    rax,[rax+r14*8]
   14000bc38:	mov    edi,DWORD PTR [rcx+rax*1]
   14000bc3b:	mov    DWORD PTR [rsp+0x20],edi
   14000bc3f:	call   0x140006b34
   14000bc44:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000bc48:	lea    rax,[rax+r14*8]
   14000bc4c:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000bc51:	je     0x14000bc6f
   14000bc53:	call   0x140006b34
   14000bc58:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000bc5c:	lea    rax,[rax+r14*8]
   14000bc60:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000bc65:	call   0x140006b34
   14000bc6a:	add    rax,rbx
   14000bc6d:	jmp    0x14000bc71
   14000bc6f:	xor    eax,eax
   14000bc71:	test   rax,rax
   14000bc74:	je     0x14000bcd4
   14000bc76:	mov    r9d,edi
   14000bc79:	mov    r8,rsi
   14000bc7c:	mov    rdx,r13
   14000bc7f:	mov    rcx,r15
   14000bc82:	call   0x14000c184
   14000bc87:	call   0x140006b34
   14000bc8c:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000bc90:	lea    rax,[rax+r14*8]
   14000bc94:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000bc99:	je     0x14000bcb7
   14000bc9b:	call   0x140006b34
   14000bca0:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000bca4:	lea    rax,[rax+r14*8]
   14000bca8:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000bcad:	call   0x140006b34
   14000bcb2:	add    rax,rbx
   14000bcb5:	jmp    0x14000bcb9
   14000bcb7:	xor    eax,eax
   14000bcb9:	mov    r8d,0x103
   14000bcbf:	mov    rdx,r15
   14000bcc2:	mov    rcx,rax
   14000bcc5:	call   0x140013bc0
   14000bcca:	mov    rcx,QWORD PTR [rsp+0x28]
   14000bccf:	call   0x140006ba4
   14000bcd4:	jmp    0x14000bcf4
   14000bcd6:	mov    r12d,DWORD PTR [rsp+0x88]
   14000bcde:	mov    rsi,QWORD PTR [rsp+0x80]
   14000bce6:	mov    r13,QWORD PTR [rsp+0x78]
   14000bceb:	mov    r15,QWORD PTR [rsp+0x70]
   14000bcf0:	mov    edi,DWORD PTR [rsp+0x20]
   14000bcf4:	mov    DWORD PTR [rsp+0x24],edi
   14000bcf8:	jmp    0x14000bc07
   14000bcfd:	call   0x14000a3ec
   14000bd02:	cmp    DWORD PTR [rax+0x100],0x0
   14000bd09:	jle    0x14000bd16
   14000bd0b:	call   0x14000a3ec
   14000bd10:	dec    DWORD PTR [rax+0x100]
   14000bd16:	cmp    edi,0xffffffff
   14000bd19:	je     0x14000bd25
   14000bd1b:	cmp    edi,r12d
   14000bd1e:	jle    0x14000bd25
   14000bd20:	call   0x14000c260
   14000bd25:	mov    r9d,edi
   14000bd28:	mov    r8,rsi
   14000bd2b:	mov    rdx,r13
   14000bd2e:	mov    rcx,r15
   14000bd31:	call   0x14000c184
   14000bd36:	add    rsp,0x30
   14000bd3a:	pop    r15
   14000bd3c:	pop    r14
   14000bd3e:	pop    r13
   14000bd40:	pop    r12
   14000bd42:	pop    rdi
   14000bd43:	pop    rsi
   14000bd44:	pop    rbx
   14000bd45:	ret    
   14000bd46:	int3   
   14000bd47:	int3   
   14000bd48:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd4d:	mov    QWORD PTR [rsp+0x10],rsi
   14000bd52:	push   rdi
   14000bd53:	sub    rsp,0x20
   14000bd57:	and    DWORD PTR [rcx],0x0
   14000bd5a:	mov    rsi,rcx
   14000bd5d:	call   0x14000a3ec
   14000bd62:	mov    rax,QWORD PTR [rax+0xf0]
   14000bd69:	test   rax,rax
   14000bd6c:	je     0x14000bdc7
   14000bd6e:	mov    rbx,QWORD PTR [rax+0x30]
   14000bd72:	test   rbx,rbx
   14000bd75:	je     0x14000bd89
   14000bd77:	test   BYTE PTR [rbx],0x10
   14000bd7a:	je     0x14000bd89
   14000bd7c:	mov    rax,QWORD PTR [rax+0x28]
   14000bd80:	mov    rax,QWORD PTR [rax]
   14000bd83:	mov    rax,QWORD PTR [rax-0x8]
   14000bd87:	jmp    0x14000bdc9
   14000bd89:	call   0x140006b4c
   14000bd8e:	movsxd rdi,DWORD PTR [rbx+0xc]
   14000bd92:	add    rax,0x4
   14000bd96:	add    rdi,rax
   14000bd99:	call   0x140006b4c
   14000bd9e:	movsxd rcx,DWORD PTR [rbx+0xc]
   14000bda2:	mov    ebx,DWORD PTR [rax+rcx*1]
   14000bda5:	jmp    0x14000bdbb
   14000bda7:	call   0x140006b4c
   14000bdac:	movsxd rcx,DWORD PTR [rdi]
   14000bdaf:	test   BYTE PTR [rax+rcx*1],0x10
   14000bdb3:	jne    0x14000bdc1
   14000bdb5:	dec    ebx
   14000bdb7:	add    rdi,0x4
   14000bdbb:	test   ebx,ebx
   14000bdbd:	jg     0x14000bda7
   14000bdbf:	jmp    0x14000bdc7
   14000bdc1:	mov    DWORD PTR [rsi],0x1
   14000bdc7:	xor    eax,eax
   14000bdc9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bdce:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bdd3:	add    rsp,0x20
   14000bdd7:	pop    rdi
   14000bdd8:	ret    
   14000bdd9:	int3   
   14000bdda:	int3   
   14000bddb:	int3   
   14000bddc:	mov    QWORD PTR [rsp+0x8],rbx
   14000bde1:	mov    QWORD PTR [rsp+0x10],rbp
   14000bde6:	mov    QWORD PTR [rsp+0x18],rsi
   14000bdeb:	push   rdi
   14000bdec:	push   r12
   14000bdee:	push   r14
   14000bdf0:	sub    rsp,0x40
   14000bdf4:	mov    rbp,r9
   14000bdf7:	mov    r14,r8
   14000bdfa:	mov    rsi,rdx
   14000bdfd:	mov    rbx,rcx
   14000be00:	call   0x14000a3ec
   14000be05:	mov    rdi,QWORD PTR [rsp+0x80]
   14000be0d:	cmp    DWORD PTR [rax+0x460],0x0
   14000be14:	mov    edx,0x1fffffff
   14000be19:	mov    r8d,0x80000029
   14000be1f:	mov    r9d,0x80000026
   14000be25:	mov    r12d,0x1
   14000be2b:	jne    0x14000be65
   14000be2d:	cmp    DWORD PTR [rbx],0xe06d7363
   14000be33:	je     0x14000be65
   14000be35:	cmp    DWORD PTR [rbx],r8d
   14000be38:	jne    0x14000be4a
   14000be3a:	cmp    DWORD PTR [rbx+0x18],0xf
   14000be3e:	jne    0x14000be4a
   14000be40:	cmp    QWORD PTR [rbx+0x60],0x19930520
   14000be48:	je     0x14000be65
   14000be4a:	cmp    DWORD PTR [rbx],r9d
   14000be4d:	je     0x14000be65
   14000be4f:	mov    ecx,DWORD PTR [rdi]
   14000be51:	and    ecx,edx
   14000be53:	cmp    ecx,0x19930522
   14000be59:	jb     0x14000be65
   14000be5b:	test   BYTE PTR [rdi+0x24],r12b
   14000be5f:	jne    0x14000bfe4
   14000be65:	mov    eax,DWORD PTR [rbx+0x4]
   14000be68:	test   al,0x66
   14000be6a:	je     0x14000bf02
   14000be70:	cmp    DWORD PTR [rdi+0x4],0x0
   14000be74:	je     0x14000bfe4
   14000be7a:	cmp    DWORD PTR [rsp+0x88],0x0
   14000be82:	jne    0x14000bfe4
   14000be88:	and    eax,0x20
   14000be8b:	je     0x14000becb
   14000be8d:	cmp    DWORD PTR [rbx],r9d
   14000be90:	jne    0x14000becb
   14000be92:	mov    r8,QWORD PTR [r14+0xf8]
   14000be99:	mov    rdx,rbp
   14000be9c:	mov    rcx,rdi
   14000be9f:	call   0x14000c1d4
   14000bea4:	mov    ebx,eax
   14000bea6:	cmp    eax,0xffffffff
   14000bea9:	jl     0x14000beb0
   14000beab:	cmp    eax,DWORD PTR [rdi+0x4]
   14000beae:	jl     0x14000beb5
   14000beb0:	call   0x14000c260
   14000beb5:	mov    r9d,ebx
   14000beb8:	mov    rcx,rsi
   14000bebb:	mov    rdx,rbp
   14000bebe:	mov    r8,rdi
   14000bec1:	call   0x14000bbb4
   14000bec6:	jmp    0x14000bfe4
   14000becb:	test   eax,eax
   14000becd:	je     0x14000beef
   14000becf:	cmp    DWORD PTR [rbx],r8d
   14000bed2:	jne    0x14000beef
   14000bed4:	mov    esi,DWORD PTR [rbx+0x38]
   14000bed7:	cmp    esi,0xffffffff
   14000beda:	jl     0x14000bee1
   14000bedc:	cmp    esi,DWORD PTR [rdi+0x4]
   14000bedf:	jl     0x14000bee6
   14000bee1:	call   0x14000c260
   14000bee6:	mov    rcx,QWORD PTR [rbx+0x28]
   14000beea:	mov    r9d,esi
   14000beed:	jmp    0x14000bebb
   14000beef:	mov    r8,rdi
   14000bef2:	mov    rdx,rbp
   14000bef5:	mov    rcx,rsi
   14000bef8:	call   0x140006904
   14000befd:	jmp    0x14000bfe4
   14000bf02:	cmp    DWORD PTR [rdi+0xc],0x0
   14000bf06:	jne    0x14000bf36
   14000bf08:	mov    eax,DWORD PTR [rdi]
   14000bf0a:	and    eax,edx
   14000bf0c:	cmp    eax,0x19930521
   14000bf11:	jb     0x14000bfe4
   14000bf17:	cmp    DWORD PTR [rdi+0x20],0x0
   14000bf1b:	je     0x14000bf2b
   14000bf1d:	call   0x140006b34
   14000bf22:	movsxd rcx,DWORD PTR [rdi+0x20]
   14000bf26:	add    rax,rcx
   14000bf29:	jmp    0x14000bf2d
   14000bf2b:	xor    eax,eax
   14000bf2d:	test   rax,rax
   14000bf30:	je     0x14000bfe4
   14000bf36:	cmp    DWORD PTR [rbx],0xe06d7363
   14000bf3c:	jne    0x14000bfab
   14000bf3e:	cmp    DWORD PTR [rbx+0x18],0x3
   14000bf42:	jb     0x14000bfab
   14000bf44:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14000bf4b:	jbe    0x14000bfab
   14000bf4d:	mov    rax,QWORD PTR [rbx+0x30]
   14000bf51:	cmp    DWORD PTR [rax+0x8],0x0
   14000bf55:	je     0x14000bf69
   14000bf57:	call   0x140006b4c
   14000bf5c:	mov    rcx,QWORD PTR [rbx+0x30]
   14000bf60:	movsxd r10,DWORD PTR [rcx+0x8]
   14000bf64:	add    r10,rax
   14000bf67:	jmp    0x14000bf6c
   14000bf69:	xor    r10d,r10d
   14000bf6c:	test   r10,r10
   14000bf6f:	je     0x14000bfab
   14000bf71:	movzx  eax,BYTE PTR [rsp+0x98]
   14000bf79:	mov    r9,rbp
   14000bf7c:	mov    r8,r14
   14000bf7f:	mov    DWORD PTR [rsp+0x38],eax
   14000bf83:	mov    rax,QWORD PTR [rsp+0x90]
   14000bf8b:	mov    rdx,rsi
   14000bf8e:	mov    QWORD PTR [rsp+0x30],rax
   14000bf93:	mov    eax,DWORD PTR [rsp+0x88]
   14000bf9a:	mov    rcx,rbx
   14000bf9d:	mov    DWORD PTR [rsp+0x28],eax
   14000bfa1:	mov    QWORD PTR [rsp+0x20],rdi
   14000bfa6:	call   r10
   14000bfa9:	jmp    0x14000bfe7
   14000bfab:	mov    rax,QWORD PTR [rsp+0x90]
   14000bfb3:	mov    r9,rbp
   14000bfb6:	mov    r8,r14
   14000bfb9:	mov    QWORD PTR [rsp+0x38],rax
   14000bfbe:	mov    eax,DWORD PTR [rsp+0x88]
   14000bfc5:	mov    rdx,rsi
   14000bfc8:	mov    DWORD PTR [rsp+0x30],eax
   14000bfcc:	mov    al,BYTE PTR [rsp+0x98]
   14000bfd3:	mov    rcx,rbx
   14000bfd6:	mov    BYTE PTR [rsp+0x28],al
   14000bfda:	mov    QWORD PTR [rsp+0x20],rdi
   14000bfdf:	call   0x14000a858
   14000bfe4:	mov    eax,r12d
   14000bfe7:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bfec:	mov    rbp,QWORD PTR [rsp+0x68]
   14000bff1:	mov    rsi,QWORD PTR [rsp+0x70]
   14000bff6:	add    rsp,0x40
   14000bffa:	pop    r14
   14000bffc:	pop    r12
   14000bffe:	pop    rdi
   14000bfff:	ret    
   14000c000:	mov    rax,rsp
   14000c003:	mov    QWORD PTR [rax+0x8],rbx
   14000c007:	mov    QWORD PTR [rax+0x10],rbp
   14000c00b:	mov    QWORD PTR [rax+0x18],rsi
   14000c00f:	mov    QWORD PTR [rax+0x20],rdi
   14000c013:	push   r14
   14000c015:	sub    rsp,0x20
   14000c019:	mov    esi,DWORD PTR [rcx+0x4]
   14000c01c:	xor    ebx,ebx
   14000c01e:	mov    r14,r8
   14000c021:	mov    rbp,rdx
   14000c024:	mov    rdi,rcx
   14000c027:	test   esi,esi
   14000c029:	je     0x14000c039
   14000c02b:	movsxd rsi,esi
   14000c02e:	call   0x140006b34
   14000c033:	lea    rcx,[rsi+rax*1]
   14000c037:	jmp    0x14000c03c
   14000c039:	mov    rcx,rbx
   14000c03c:	test   rcx,rcx
   14000c03f:	je     0x14000c10d
   14000c045:	test   esi,esi
   14000c047:	je     0x14000c058
   14000c049:	movsxd rsi,DWORD PTR [rdi+0x4]
   14000c04d:	call   0x140006b34
   14000c052:	lea    rcx,[rsi+rax*1]
   14000c056:	jmp    0x14000c05b
   14000c058:	mov    rcx,rbx
   14000c05b:	cmp    BYTE PTR [rcx+0x10],bl
   14000c05e:	je     0x14000c10d
   14000c064:	test   BYTE PTR [rdi],0x80
   14000c067:	je     0x14000c073
   14000c069:	test   BYTE PTR [rbp+0x0],0x10
   14000c06d:	jne    0x14000c10d
   14000c073:	test   esi,esi
   14000c075:	je     0x14000c088
   14000c077:	call   0x140006b34
   14000c07c:	mov    rsi,rax
   14000c07f:	movsxd rax,DWORD PTR [rdi+0x4]
   14000c083:	add    rsi,rax
   14000c086:	jmp    0x14000c08b
   14000c088:	mov    rsi,rbx
   14000c08b:	call   0x140006b4c
   14000c090:	mov    rcx,rax
   14000c093:	movsxd rax,DWORD PTR [rbp+0x4]
   14000c097:	add    rcx,rax
   14000c09a:	cmp    rsi,rcx
   14000c09d:	je     0x14000c0d9
   14000c09f:	cmp    DWORD PTR [rdi+0x4],ebx
   14000c0a2:	je     0x14000c0b5
   14000c0a4:	call   0x140006b34
   14000c0a9:	mov    rsi,rax
   14000c0ac:	movsxd rax,DWORD PTR [rdi+0x4]
   14000c0b0:	add    rsi,rax
   14000c0b3:	jmp    0x14000c0b8
   14000c0b5:	mov    rsi,rbx
   14000c0b8:	call   0x140006b4c
   14000c0bd:	movsxd rdx,DWORD PTR [rbp+0x4]
   14000c0c1:	lea    rcx,[rsi+0x10]
   14000c0c5:	add    rdx,0x10
   14000c0c9:	add    rdx,rax
   14000c0cc:	call   0x14000c3b0
   14000c0d1:	test   eax,eax
   14000c0d3:	je     0x14000c0d9
   14000c0d5:	xor    eax,eax
   14000c0d7:	jmp    0x14000c112
   14000c0d9:	mov    al,0x2
   14000c0db:	test   BYTE PTR [rbp+0x0],al
   14000c0de:	je     0x14000c0e5
   14000c0e0:	test   BYTE PTR [rdi],0x8
   14000c0e3:	je     0x14000c109
   14000c0e5:	test   BYTE PTR [r14],0x1
   14000c0e9:	je     0x14000c0f0
   14000c0eb:	test   BYTE PTR [rdi],0x1
   14000c0ee:	je     0x14000c109
   14000c0f0:	test   BYTE PTR [r14],0x4
   14000c0f4:	je     0x14000c0fb
   14000c0f6:	test   BYTE PTR [rdi],0x4
   14000c0f9:	je     0x14000c109
   14000c0fb:	test   BYTE PTR [r14],al
   14000c0fe:	je     0x14000c104
   14000c100:	test   BYTE PTR [rdi],al
   14000c102:	je     0x14000c109
   14000c104:	mov    ebx,0x1
   14000c109:	mov    eax,ebx
   14000c10b:	jmp    0x14000c112
   14000c10d:	mov    eax,0x1
   14000c112:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c117:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c11c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c121:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c126:	add    rsp,0x20
   14000c12a:	pop    r14
   14000c12c:	ret    
   14000c12d:	int3   
   14000c12e:	int3   
   14000c12f:	int3   
   14000c130:	sub    rsp,0x28
   14000c134:	movsxd r9,DWORD PTR [r8+0x1c]
   14000c138:	mov    rax,QWORD PTR [rcx]
   14000c13b:	mov    r10,r8
   14000c13e:	mov    eax,DWORD PTR [r9+rax*1]
   14000c142:	cmp    eax,0xfffffffe
   14000c145:	jne    0x14000c152
   14000c147:	mov    r8,QWORD PTR [rdx]
   14000c14a:	mov    rcx,r10
   14000c14d:	call   0x14000c1d4
   14000c152:	add    rsp,0x28
   14000c156:	ret    
   14000c157:	int3   
   14000c158:	rex push rbx
   14000c15a:	sub    rsp,0x20
   14000c15e:	lea    r9,[rsp+0x40]
   14000c163:	mov    rbx,r8
   14000c166:	call   0x14000670c
   14000c16b:	mov    rcx,QWORD PTR [rax]
   14000c16e:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000c172:	mov    QWORD PTR [rsp+0x40],rcx
   14000c177:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14000c17b:	add    rsp,0x20
   14000c17f:	pop    rbx
   14000c180:	ret    
   14000c181:	int3   
   14000c182:	int3   
   14000c183:	int3   
   14000c184:	movsxd rdx,DWORD PTR [r8+0x1c]
   14000c188:	mov    rax,QWORD PTR [rcx]
   14000c18b:	mov    DWORD PTR [rdx+rax*1],r9d
   14000c18f:	ret    
   14000c190:	mov    QWORD PTR [rsp+0x8],rbx
   14000c195:	push   rdi
   14000c196:	sub    rsp,0x20
   14000c19a:	mov    edi,r9d
   14000c19d:	lea    r9,[rsp+0x40]
   14000c1a2:	mov    rbx,r8
   14000c1a5:	call   0x14000670c
   14000c1aa:	mov    rcx,QWORD PTR [rax]
   14000c1ad:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000c1b1:	mov    QWORD PTR [rsp+0x40],rcx
   14000c1b6:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14000c1ba:	jle    0x14000c1c0
   14000c1bc:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14000c1c0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c1c5:	add    rsp,0x20
   14000c1c9:	pop    rdi
   14000c1ca:	ret    
   14000c1cb:	int3   
   14000c1cc:	mov    r8,QWORD PTR [rdx]
   14000c1cf:	jmp    0x14000c1d4
   14000c1d4:	mov    QWORD PTR [rsp+0x8],rbx
   14000c1d9:	mov    QWORD PTR [rsp+0x10],rbp
   14000c1de:	mov    QWORD PTR [rsp+0x18],rsi
   14000c1e3:	push   rdi
   14000c1e4:	sub    rsp,0x20
   14000c1e8:	mov    rbp,r8
   14000c1eb:	mov    rsi,rdx
   14000c1ee:	mov    rbx,rcx
   14000c1f1:	test   rcx,rcx
   14000c1f4:	jne    0x14000c1fb
   14000c1f6:	call   0x14000c260
   14000c1fb:	movsxd rax,DWORD PTR [rbx+0x18]
   14000c1ff:	mov    edi,DWORD PTR [rbx+0x14]
   14000c202:	add    rax,QWORD PTR [rsi+0x8]
   14000c206:	jne    0x14000c20d
   14000c208:	call   0x14000c260
   14000c20d:	xor    r8d,r8d
   14000c210:	test   edi,edi
   14000c212:	je     0x14000c248
   14000c214:	mov    r9,QWORD PTR [rsi+0x8]
   14000c218:	movsxd r10,DWORD PTR [rbx+0x18]
   14000c21c:	lea    rcx,[r9+r8*8]
   14000c220:	movsxd rdx,DWORD PTR [rcx+r10*1]
   14000c224:	add    rdx,r9
   14000c227:	cmp    rbp,rdx
   14000c22a:	jl     0x14000c234
   14000c22c:	inc    r8d
   14000c22f:	cmp    r8d,edi
   14000c232:	jb     0x14000c21c
   14000c234:	test   r8d,r8d
   14000c237:	je     0x14000c248
   14000c239:	lea    ecx,[r8-0x1]
   14000c23d:	lea    rax,[r9+rcx*8]
   14000c241:	mov    eax,DWORD PTR [rax+r10*1+0x4]
   14000c246:	jmp    0x14000c24b
   14000c248:	or     eax,0xffffffff
   14000c24b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c250:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c255:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c25a:	add    rsp,0x20
   14000c25e:	pop    rdi
   14000c25f:	ret    
   14000c260:	sub    rsp,0x28
   14000c264:	mov    rcx,QWORD PTR [rip+0x31a7d]        # 0x14003dce8
   14000c26b:	call   QWORD PTR [rip+0x1fea7]        # 0x14002c118
   14000c271:	test   rax,rax
   14000c274:	je     0x14000c27a
   14000c276:	call   rax
   14000c278:	jmp    0x14000c27a
   14000c27a:	call   0x14000c280
   14000c27f:	nop
   14000c280:	sub    rsp,0x28
   14000c284:	call   0x14000a3ec
   14000c289:	mov    rcx,QWORD PTR [rax+0xd0]
   14000c290:	test   rcx,rcx
   14000c293:	je     0x14000c299
   14000c295:	call   rcx
   14000c297:	jmp    0x14000c299
   14000c299:	call   0x140007998
   14000c29e:	nop
   14000c29f:	int3   
   14000c2a0:	sub    rsp,0x28
   14000c2a4:	call   0x14000a3ec
   14000c2a9:	mov    rcx,QWORD PTR [rax+0xd8]
   14000c2b0:	test   rcx,rcx
   14000c2b3:	je     0x14000c2b7
   14000c2b5:	call   rcx
   14000c2b7:	call   0x14000c280
   14000c2bc:	int3   
   14000c2bd:	int3   
   14000c2be:	int3   
   14000c2bf:	int3   
   14000c2c0:	sub    rsp,0x28
   14000c2c4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000c280
   14000c2cb:	call   QWORD PTR [rip+0x1fe3f]        # 0x14002c110
   14000c2d1:	mov    QWORD PTR [rip+0x31a10],rax        # 0x14003dce8
   14000c2d8:	add    rsp,0x28
   14000c2dc:	ret    
   14000c2dd:	int3   
   14000c2de:	int3   
   14000c2df:	int3   
   14000c2e0:	sub    rsp,0x28
   14000c2e4:	mov    r8,QWORD PTR [r9+0x38]
   14000c2e8:	mov    rcx,rdx
   14000c2eb:	mov    rdx,r9
   14000c2ee:	call   0x14000c300
   14000c2f3:	mov    eax,0x1
   14000c2f8:	add    rsp,0x28
   14000c2fc:	ret    
   14000c2fd:	int3   
   14000c2fe:	int3   
   14000c2ff:	int3   
   14000c300:	rex push rbx
   14000c302:	sub    rsp,0x20
   14000c306:	mov    r11d,DWORD PTR [r8]
   14000c309:	mov    rbx,rdx
   14000c30c:	mov    r9,rcx
   14000c30f:	and    r11d,0xfffffff8
   14000c313:	test   BYTE PTR [r8],0x4
   14000c317:	mov    r10,rcx
   14000c31a:	je     0x14000c32f
   14000c31c:	mov    eax,DWORD PTR [r8+0x8]
   14000c320:	movsxd r10,DWORD PTR [r8+0x4]
   14000c324:	neg    eax
   14000c326:	add    r10,rcx
   14000c329:	movsxd rcx,eax
   14000c32c:	and    r10,rcx
   14000c32f:	movsxd rax,r11d
   14000c332:	mov    rdx,QWORD PTR [rax+r10*1]
   14000c336:	mov    rax,QWORD PTR [rbx+0x10]
   14000c33a:	mov    ecx,DWORD PTR [rax+0x8]
   14000c33d:	add    rcx,QWORD PTR [rbx+0x8]
   14000c341:	test   BYTE PTR [rcx+0x3],0xf
   14000c345:	je     0x14000c353
   14000c347:	movzx  eax,BYTE PTR [rcx+0x3]
   14000c34b:	and    eax,0xfffffff0
   14000c34e:	cdqe   
   14000c350:	add    r9,rax
   14000c353:	xor    r9,rdx
   14000c356:	mov    rcx,r9
   14000c359:	add    rsp,0x20
   14000c35d:	pop    rbx
   14000c35e:	jmp    0x14000c380
   14000c363:	int3   
   14000c364:	int3   
   14000c365:	int3   
   14000c366:	int3   
   14000c367:	int3   
   14000c368:	int3   
   14000c369:	int3   
   14000c36a:	int3   
   14000c36b:	int3   
   14000c36c:	int3   
   14000c36d:	int3   
   14000c36e:	int3   
   14000c36f:	int3   
   14000c370:	int3   
   14000c371:	int3   
   14000c372:	int3   
   14000c373:	int3   
   14000c374:	int3   
   14000c375:	int3   
   14000c376:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c380:	cmp    rcx,QWORD PTR [rip+0x2fe49]        # 0x14003c1d0
   14000c387:	jne    0x14000c39a
   14000c389:	rol    rcx,0x10
   14000c38d:	test   cx,0xffff
   14000c392:	jne    0x14000c396
   14000c394:	repz ret 
   14000c396:	ror    rcx,0x10
   14000c39a:	jmp    0x140013c54
   14000c39f:	int3   
   14000c3a0:	int3   
   14000c3a1:	int3   
   14000c3a2:	int3   
   14000c3a3:	int3   
   14000c3a4:	int3   
   14000c3a5:	int3   
   14000c3a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c3b0:	sub    rdx,rcx
   14000c3b3:	test   cl,0x7
   14000c3b6:	je     0x14000c3cc
   14000c3b8:	movzx  eax,BYTE PTR [rcx]
   14000c3bb:	cmp    al,BYTE PTR [rcx+rdx*1]
   14000c3be:	jne    0x14000c40f
   14000c3c0:	inc    rcx
   14000c3c3:	test   al,al
   14000c3c5:	je     0x14000c40c
   14000c3c7:	test   cl,0x7
   14000c3ca:	jne    0x14000c3b8
   14000c3cc:	movabs r11,0x8080808080808080
   14000c3d6:	movabs r10,0xfefefefefefefeff
   14000c3e0:	lea    eax,[ecx+edx*1]
   14000c3e4:	and    eax,0xfff
   14000c3e9:	cmp    eax,0xff8
   14000c3ee:	ja     0x14000c3b8
   14000c3f0:	mov    rax,QWORD PTR [rcx]
   14000c3f3:	cmp    rax,QWORD PTR [rcx+rdx*1]
   14000c3f7:	jne    0x14000c3b8
   14000c3f9:	lea    r9,[r10+rax*1]
   14000c3fd:	not    rax
   14000c400:	add    rcx,0x8
   14000c404:	and    rax,r9
   14000c407:	test   r11,rax
   14000c40a:	je     0x14000c3e0
   14000c40c:	xor    eax,eax
   14000c40e:	ret    
   14000c40f:	sbb    rax,rax
   14000c412:	or     rax,0x1
   14000c416:	ret    
   14000c417:	int3   
   14000c418:	mov    r11,rsp
   14000c41b:	mov    QWORD PTR [r11+0x8],rbx
   14000c41f:	mov    QWORD PTR [r11+0x10],rsi
   14000c423:	mov    QWORD PTR [r11+0x18],rdi
   14000c427:	mov    QWORD PTR [r11+0x20],r14
   14000c42b:	push   r15
   14000c42d:	sub    rsp,0x30
   14000c431:	mov    r15,rdx
   14000c434:	mov    rdi,rcx
   14000c437:	cmp    QWORD PTR [rcx+0x8],0x0
   14000c43c:	jne    0x14000c52d
   14000c442:	mov    eax,0x2800
   14000c447:	lea    rdx,[rcx+0x11]
   14000c44b:	mov    WORD PTR [rsp+0x28],ax
   14000c450:	lea    rax,[rip+0xffffffffffffb969]        # 0x140007dc0
   14000c457:	mov    QWORD PTR [r11-0x18],rax
   14000c45b:	lea    r9,[rip+0xffffffffffffb802]        # 0x140007c64
   14000c462:	xor    r8d,r8d
   14000c465:	xor    ecx,ecx
   14000c467:	call   0x14001ab48
   14000c46c:	mov    r14,rax
   14000c46f:	test   rax,rax
   14000c472:	je     0x14000c531
   14000c478:	mov    rcx,rax
   14000c47b:	call   0x140007550
   14000c480:	mov    rbx,rax
   14000c483:	test   rax,rax
   14000c486:	je     0x14000c49c
   14000c488:	dec    rbx
   14000c48b:	cmp    BYTE PTR [rbx+r14*1],0x20
   14000c490:	jne    0x14000c49f
   14000c492:	mov    BYTE PTR [rbx+r14*1],0x0
   14000c497:	test   rbx,rbx
   14000c49a:	jne    0x14000c488
   14000c49c:	dec    rbx
   14000c49f:	mov    ecx,0xe
   14000c4a4:	call   0x14000fc2c
   14000c4a9:	nop
   14000c4aa:	cmp    QWORD PTR [rdi+0x8],0x0
   14000c4af:	jne    0x14000c51a
   14000c4b1:	mov    ecx,0x10
   14000c4b6:	call   0x140007c64
   14000c4bb:	mov    rsi,rax
   14000c4be:	test   rax,rax
   14000c4c1:	je     0x14000c51a
   14000c4c3:	lea    rcx,[rbx+0x2]
   14000c4c7:	call   0x140007c64
   14000c4cc:	mov    QWORD PTR [rdi+0x8],rax
   14000c4d0:	test   rax,rax
   14000c4d3:	je     0x14000c512
   14000c4d5:	mov    r8,r14
   14000c4d8:	lea    rdx,[rbx+0x2]
   14000c4dc:	mov    rcx,rax
   14000c4df:	call   0x14000edd8
   14000c4e4:	test   eax,eax
   14000c4e6:	jne    0x14000c4fd
   14000c4e8:	mov    rax,QWORD PTR [rdi+0x8]
   14000c4ec:	mov    QWORD PTR [rsi],rax
   14000c4ef:	mov    rax,QWORD PTR [r15+0x8]
   14000c4f3:	mov    QWORD PTR [rsi+0x8],rax
   14000c4f7:	mov    QWORD PTR [r15+0x8],rsi
   14000c4fb:	jmp    0x14000c51a
   14000c4fd:	and    QWORD PTR [rsp+0x20],0x0
   14000c503:	xor    r9d,r9d
   14000c506:	xor    r8d,r8d
   14000c509:	xor    edx,edx
   14000c50b:	xor    ecx,ecx
   14000c50d:	call   0x140008da8
   14000c512:	mov    rcx,rsi
   14000c515:	call   0x140007dc0
   14000c51a:	mov    rcx,r14
   14000c51d:	call   0x140007dc0
   14000c522:	nop
   14000c523:	mov    ecx,0xe
   14000c528:	call   0x14000fe48
   14000c52d:	mov    rax,QWORD PTR [rdi+0x8]
   14000c531:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c536:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c53b:	mov    rdi,QWORD PTR [rsp+0x50]
   14000c540:	mov    r14,QWORD PTR [rsp+0x58]
   14000c545:	add    rsp,0x30
   14000c549:	pop    r15
   14000c54b:	ret    
   14000c54c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c551:	mov    QWORD PTR [rsp+0x10],rsi
   14000c556:	mov    QWORD PTR [rsp+0x18],rdi
   14000c55b:	push   r12
   14000c55d:	push   r14
   14000c55f:	push   r15
   14000c561:	sub    rsp,0x40
   14000c565:	mov    QWORD PTR [rsp+0x38],rsp
   14000c56a:	mov    r15,rdx
   14000c56d:	mov    rsi,rcx
   14000c570:	cmp    QWORD PTR [rcx+0x8],0x0
   14000c575:	jne    0x14000c687
   14000c57b:	mov    ecx,0xe
   14000c580:	call   0x14000fc2c
   14000c585:	nop
   14000c586:	cmp    QWORD PTR [rsi+0x8],0x0
   14000c58b:	jne    0x14000c67d
   14000c591:	mov    eax,0x2800
   14000c596:	lea    rdx,[rsi+0x11]
   14000c59a:	mov    WORD PTR [rsp+0x28],ax
   14000c59f:	lea    rax,[rip+0xffffffffffffb81a]        # 0x140007dc0
   14000c5a6:	mov    QWORD PTR [rsp+0x20],rax
   14000c5ab:	lea    r9,[rip+0xffffffffffffb6b2]        # 0x140007c64
   14000c5b2:	xor    r8d,r8d
   14000c5b5:	xor    ecx,ecx
   14000c5b7:	call   0x14001ab48
   14000c5bc:	mov    r14,rax
   14000c5bf:	test   rax,rax
   14000c5c2:	jne    0x14000c5dc
   14000c5c4:	lea    rdx,[rip+0xa]        # 0x14000c5d5
   14000c5cb:	mov    rcx,rsp
   14000c5ce:	call   0x140010cd0
   14000c5d3:	nop
   14000c5d4:	nop
   14000c5d5:	xor    eax,eax
   14000c5d7:	jmp    0x14000c68b
   14000c5dc:	mov    rcx,rax
   14000c5df:	call   0x140007550
   14000c5e4:	mov    rbx,rax
   14000c5e7:	mov    QWORD PTR [rsp+0x30],rax
   14000c5ec:	mov    rcx,rbx
   14000c5ef:	dec    rbx
   14000c5f2:	mov    QWORD PTR [rsp+0x30],rbx
   14000c5f7:	test   rcx,rcx
   14000c5fa:	je     0x14000c60a
   14000c5fc:	cmp    BYTE PTR [rbx+r14*1],0x20
   14000c601:	jne    0x14000c60a
   14000c603:	mov    BYTE PTR [rbx+r14*1],0x0
   14000c608:	jmp    0x14000c5ec
   14000c60a:	mov    ecx,0x10
   14000c60f:	call   0x140007c64
   14000c614:	mov    rdi,rax
   14000c617:	test   rax,rax
   14000c61a:	je     0x14000c674
   14000c61c:	lea    r12,[rbx+0x2]
   14000c620:	mov    rcx,r12
   14000c623:	call   0x140007c64
   14000c628:	mov    rbx,rax
   14000c62b:	test   rax,rax
   14000c62e:	je     0x14000c66c
   14000c630:	mov    r8,r14
   14000c633:	mov    rdx,r12
   14000c636:	mov    rcx,rax
   14000c639:	call   0x14000edd8
   14000c63e:	test   eax,eax
   14000c640:	jne    0x14000c657
   14000c642:	mov    QWORD PTR [rsi+0x8],rbx
   14000c646:	mov    QWORD PTR [rdi],rbx
   14000c649:	mov    rax,QWORD PTR [r15+0x8]
   14000c64d:	mov    QWORD PTR [rdi+0x8],rax
   14000c651:	mov    QWORD PTR [r15+0x8],rdi
   14000c655:	jmp    0x14000c674
   14000c657:	and    QWORD PTR [rsp+0x20],0x0
   14000c65d:	xor    r9d,r9d
   14000c660:	xor    r8d,r8d
   14000c663:	xor    edx,edx
   14000c665:	xor    ecx,ecx
   14000c667:	call   0x140008da8
   14000c66c:	mov    rcx,rdi
   14000c66f:	call   0x140007dc0
   14000c674:	mov    rcx,r14
   14000c677:	call   0x140007dc0
   14000c67c:	nop
   14000c67d:	mov    ecx,0xe
   14000c682:	call   0x14000fe48
   14000c687:	mov    rax,QWORD PTR [rsi+0x8]
   14000c68b:	mov    rbx,QWORD PTR [rsp+0x60]
   14000c690:	mov    rsi,QWORD PTR [rsp+0x68]
   14000c695:	mov    rdi,QWORD PTR [rsp+0x70]
   14000c69a:	add    rsp,0x40
   14000c69e:	pop    r15
   14000c6a0:	pop    r14
   14000c6a2:	pop    r12
   14000c6a4:	ret    
   14000c6a5:	int3   
   14000c6a6:	int3   
   14000c6a7:	int3   
   14000c6a8:	rex push rbx
   14000c6aa:	sub    rsp,0x30
   14000c6ae:	mov    rbx,rcx
   14000c6b1:	mov    ecx,0xe
   14000c6b6:	call   0x14000fc2c
   14000c6bb:	nop
   14000c6bc:	mov    rax,QWORD PTR [rbx+0x8]
   14000c6c0:	test   rax,rax
   14000c6c3:	je     0x14000c704
   14000c6c5:	mov    rcx,QWORD PTR [rip+0x3162c]        # 0x14003dcf8
   14000c6cc:	lea    rdx,[rip+0x3161d]        # 0x14003dcf0
   14000c6d3:	mov    QWORD PTR [rsp+0x20],rcx
   14000c6d8:	test   rcx,rcx
   14000c6db:	je     0x14000c6f6
   14000c6dd:	cmp    QWORD PTR [rcx],rax
   14000c6e0:	jne    0x14000c6f1
   14000c6e2:	mov    rax,QWORD PTR [rcx+0x8]
   14000c6e6:	mov    QWORD PTR [rdx+0x8],rax
   14000c6ea:	call   0x140007dc0
   14000c6ef:	jmp    0x14000c6f6
   14000c6f1:	mov    rdx,rcx
   14000c6f4:	jmp    0x14000c6d3
   14000c6f6:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c6fa:	call   0x140007dc0
   14000c6ff:	and    QWORD PTR [rbx+0x8],0x0
   14000c704:	mov    ecx,0xe
   14000c709:	call   0x14000fe48
   14000c70e:	add    rsp,0x30
   14000c712:	pop    rbx
   14000c713:	ret    
   14000c714:	rex push rbx
   14000c716:	sub    rsp,0x30
   14000c71a:	mov    rbx,rcx
   14000c71d:	mov    ecx,0xe
   14000c722:	call   0x14000fc2c
   14000c727:	nop
   14000c728:	mov    rax,QWORD PTR [rbx+0x8]
   14000c72c:	test   rax,rax
   14000c72f:	je     0x14000c770
   14000c731:	mov    rcx,QWORD PTR [rip+0x315c0]        # 0x14003dcf8
   14000c738:	lea    rdx,[rip+0x315b1]        # 0x14003dcf0
   14000c73f:	mov    QWORD PTR [rsp+0x20],rcx
   14000c744:	test   rcx,rcx
   14000c747:	je     0x14000c762
   14000c749:	cmp    QWORD PTR [rcx],rax
   14000c74c:	jne    0x14000c75d
   14000c74e:	mov    rax,QWORD PTR [rcx+0x8]
   14000c752:	mov    QWORD PTR [rdx+0x8],rax
   14000c756:	call   0x140007dc0
   14000c75b:	jmp    0x14000c762
   14000c75d:	mov    rdx,rcx
   14000c760:	jmp    0x14000c73f
   14000c762:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c766:	call   0x140007dc0
   14000c76b:	and    QWORD PTR [rbx+0x8],0x0
   14000c770:	mov    ecx,0xe
   14000c775:	call   0x14000fe48
   14000c77a:	add    rsp,0x30
   14000c77e:	pop    rbx
   14000c77f:	ret    
   14000c780:	mov    QWORD PTR [rsp+0x8],rbx
   14000c785:	push   rdi
   14000c786:	sub    rsp,0x20
   14000c78a:	mov    rbx,rcx
   14000c78d:	mov    ecx,0xe
   14000c792:	call   0x14000fc2c
   14000c797:	nop
   14000c798:	mov    rbx,QWORD PTR [rbx+0x8]
   14000c79c:	test   rbx,rbx
   14000c79f:	je     0x14000c7ba
   14000c7a1:	mov    rdi,QWORD PTR [rbx+0x8]
   14000c7a5:	mov    rcx,QWORD PTR [rbx]
   14000c7a8:	call   0x140007dc0
   14000c7ad:	mov    rcx,rbx
   14000c7b0:	call   0x140007dc0
   14000c7b5:	mov    rbx,rdi
   14000c7b8:	jmp    0x14000c79c
   14000c7ba:	mov    ecx,0xe
   14000c7bf:	call   0x14000fe48
   14000c7c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7c9:	add    rsp,0x20
   14000c7cd:	pop    rdi
   14000c7ce:	ret    
   14000c7cf:	int3   
   14000c7d0:	sub    rsp,0x38
   14000c7d4:	movzx  eax,r9w
   14000c7d8:	test   r9w,r9w
   14000c7dc:	jne    0x14000c7e3
   14000c7de:	mov    eax,0x2800
   14000c7e3:	mov    WORD PTR [rsp+0x28],ax
   14000c7e8:	lea    rax,[rip+0xffffffffffffb5d1]        # 0x140007dc0
   14000c7ef:	lea    r9,[rip+0xffffffffffffb46e]        # 0x140007c64
   14000c7f6:	mov    QWORD PTR [rsp+0x20],rax
   14000c7fb:	call   0x14001ab48
   14000c800:	add    rsp,0x38
   14000c804:	ret    
   14000c805:	int3   
   14000c806:	int3   
   14000c807:	int3   
   14000c808:	jmp    0x14001ba50
   14000c80d:	int3   
   14000c80e:	int3   
   14000c80f:	int3   
   14000c810:	sub    rsp,0x48
   14000c814:	mov    eax,DWORD PTR [rsp+0x78]
   14000c818:	and    QWORD PTR [rsp+0x30],0x0
   14000c81e:	mov    DWORD PTR [rsp+0x28],eax
   14000c822:	mov    eax,DWORD PTR [rsp+0x70]
   14000c826:	mov    DWORD PTR [rsp+0x20],eax
   14000c82a:	call   0x14000c834
   14000c82f:	add    rsp,0x48
   14000c833:	ret    
   14000c834:	sub    rsp,0x38
   14000c838:	lea    eax,[r9-0x45]
   14000c83c:	mov    r10d,0xffffffdf
   14000c842:	test   r10d,eax
   14000c845:	je     0x14000c891
   14000c847:	cmp    r9d,0x66
   14000c84b:	jne    0x14000c863
   14000c84d:	mov    rax,QWORD PTR [rsp+0x70]
   14000c852:	mov    r9d,DWORD PTR [rsp+0x60]
   14000c857:	mov    QWORD PTR [rsp+0x20],rax
   14000c85c:	call   0x14000d108
   14000c861:	jmp    0x14000c8ad
   14000c863:	lea    eax,[r9-0x41]
   14000c867:	mov    r9d,DWORD PTR [rsp+0x60]
   14000c86c:	test   r10d,eax
   14000c86f:	mov    rax,QWORD PTR [rsp+0x70]
   14000c874:	mov    QWORD PTR [rsp+0x28],rax
   14000c879:	mov    eax,DWORD PTR [rsp+0x68]
   14000c87d:	mov    DWORD PTR [rsp+0x20],eax
   14000c881:	je     0x14000c88a
   14000c883:	call   0x14000d1f8
   14000c888:	jmp    0x14000c8ad
   14000c88a:	call   0x14000c8d0
   14000c88f:	jmp    0x14000c8ad
   14000c891:	mov    rax,QWORD PTR [rsp+0x70]
   14000c896:	mov    r9d,DWORD PTR [rsp+0x60]
   14000c89b:	mov    QWORD PTR [rsp+0x28],rax
   14000c8a0:	mov    eax,DWORD PTR [rsp+0x68]
   14000c8a4:	mov    DWORD PTR [rsp+0x20],eax
   14000c8a8:	call   0x14000ce98
   14000c8ad:	add    rsp,0x38
   14000c8b1:	ret    
   14000c8b2:	int3   
   14000c8b3:	int3   
   14000c8b4:	sub    rsp,0x38
   14000c8b8:	mov    eax,DWORD PTR [rsp+0x60]
   14000c8bc:	and    QWORD PTR [rsp+0x28],0x0
   14000c8c2:	mov    DWORD PTR [rsp+0x20],eax
   14000c8c6:	call   0x14000c8d0
   14000c8cb:	add    rsp,0x38
   14000c8cf:	ret    
   14000c8d0:	mov    rax,rsp
   14000c8d3:	mov    QWORD PTR [rax+0x8],rbx
   14000c8d7:	mov    QWORD PTR [rax+0x10],rbp
   14000c8db:	mov    QWORD PTR [rax+0x18],rsi
   14000c8df:	push   rdi
   14000c8e0:	push   r12
   14000c8e2:	push   r13
   14000c8e4:	push   r14
   14000c8e6:	push   r15
   14000c8e8:	sub    rsp,0x50
   14000c8ec:	mov    rdi,rdx
   14000c8ef:	mov    rdx,QWORD PTR [rsp+0xa8]
   14000c8f7:	mov    r14,rcx
   14000c8fa:	lea    rcx,[rax-0x48]
   14000c8fe:	mov    r15d,0x30
   14000c904:	mov    ebx,r9d
   14000c907:	mov    rsi,r8
   14000c90a:	mov    r12d,0x3ff
   14000c910:	movzx  ebp,r15w
   14000c914:	call   0x140008fac
   14000c919:	xor    r9d,r9d
   14000c91c:	test   ebx,ebx
   14000c91e:	cmovs  ebx,r9d
   14000c922:	test   rdi,rdi
   14000c925:	jne    0x14000c933
   14000c927:	call   0x140009cb4
   14000c92c:	mov    ebx,0x16
   14000c931:	jmp    0x14000c950
   14000c933:	test   rsi,rsi
   14000c936:	je     0x14000c927
   14000c938:	lea    eax,[rbx+0xb]
   14000c93b:	mov    BYTE PTR [rdi],r9b
   14000c93e:	movsxd rcx,eax
   14000c941:	cmp    rsi,rcx
   14000c944:	ja     0x14000c95f
   14000c946:	call   0x140009cb4
   14000c94b:	mov    ebx,0x22
   14000c950:	mov    DWORD PTR [rax],ebx
   14000c952:	call   0x140008d58
   14000c957:	xor    r9d,r9d
   14000c95a:	jmp    0x14000cc4d
   14000c95f:	mov    rax,QWORD PTR [r14]
   14000c962:	mov    ecx,0x7ff
   14000c967:	shr    rax,0x34
   14000c96b:	and    rax,rcx
   14000c96e:	cmp    rax,rcx
   14000c971:	jne    0x14000ca09
   14000c977:	mov    QWORD PTR [rsp+0x28],r9
   14000c97c:	mov    DWORD PTR [rsp+0x20],r9d
   14000c981:	lea    r8,[rsi-0x2]
   14000c985:	cmp    rsi,0xffffffffffffffff
   14000c989:	lea    rdx,[rdi+0x2]
   14000c98d:	mov    r9d,ebx
   14000c990:	cmove  r8,rsi
   14000c994:	mov    rcx,r14
   14000c997:	call   0x14000ce98
   14000c99c:	xor    r9d,r9d
   14000c99f:	mov    ebx,eax
   14000c9a1:	test   eax,eax
   14000c9a3:	je     0x14000c9ad
   14000c9a5:	mov    BYTE PTR [rdi],r9b
   14000c9a8:	jmp    0x14000cc4d
   14000c9ad:	cmp    BYTE PTR [rdi+0x2],0x2d
   14000c9b1:	mov    esi,0x1
   14000c9b6:	jne    0x14000c9be
   14000c9b8:	mov    BYTE PTR [rdi],0x2d
   14000c9bb:	add    rdi,rsi
   14000c9be:	mov    ebx,DWORD PTR [rsp+0xa0]
   14000c9c5:	mov    BYTE PTR [rdi],r15b
   14000c9c8:	mov    edx,0x65
   14000c9cd:	mov    eax,ebx
   14000c9cf:	neg    eax
   14000c9d1:	sbb    cl,cl
   14000c9d3:	and    cl,0xe0
   14000c9d6:	add    cl,0x78
   14000c9d9:	mov    BYTE PTR [rdi+rsi*1],cl
   14000c9dc:	lea    rcx,[rsi+0x1]
   14000c9e0:	add    rcx,rdi
   14000c9e3:	call   0x14001ba50
   14000c9e8:	xor    r9d,r9d
   14000c9eb:	test   rax,rax
   14000c9ee:	je     0x14000cc4a
   14000c9f4:	neg    ebx
   14000c9f6:	sbb    cl,cl
   14000c9f8:	and    cl,0xe0
   14000c9fb:	add    cl,0x70
   14000c9fe:	mov    BYTE PTR [rax],cl
   14000ca00:	mov    BYTE PTR [rax+0x3],r9b
   14000ca04:	jmp    0x14000cc4a
   14000ca09:	movabs rax,0x8000000000000000
   14000ca13:	mov    esi,0x1
   14000ca18:	test   QWORD PTR [r14],rax
   14000ca1b:	je     0x14000ca23
   14000ca1d:	mov    BYTE PTR [rdi],0x2d
   14000ca20:	add    rdi,rsi
   14000ca23:	mov    r13d,DWORD PTR [rsp+0xa0]
   14000ca2b:	mov    r10d,r15d
   14000ca2e:	movabs r11,0xfffffffffffff
   14000ca38:	mov    BYTE PTR [rdi],r10b
   14000ca3b:	add    rdi,rsi
   14000ca3e:	mov    eax,r13d
   14000ca41:	neg    eax
   14000ca43:	mov    eax,r13d
   14000ca46:	sbb    cl,cl
   14000ca48:	and    cl,0xe0
   14000ca4b:	add    cl,0x78
   14000ca4e:	mov    BYTE PTR [rdi],cl
   14000ca50:	add    rdi,rsi
   14000ca53:	neg    eax
   14000ca55:	sbb    edx,edx
   14000ca57:	movabs rax,0x7ff0000000000000
   14000ca61:	and    edx,0xffffffe0
   14000ca64:	sub    edx,0xffffffd9
   14000ca67:	test   QWORD PTR [r14],rax
   14000ca6a:	jne    0x14000ca87
   14000ca6c:	mov    BYTE PTR [rdi],r10b
   14000ca6f:	mov    rax,QWORD PTR [r14]
   14000ca72:	add    rdi,rsi
   14000ca75:	and    rax,r11
   14000ca78:	neg    rax
   14000ca7b:	sbb    r12,r12
   14000ca7e:	and    r12d,0x3fe
   14000ca85:	jmp    0x14000ca8d
   14000ca87:	mov    BYTE PTR [rdi],0x31
   14000ca8a:	add    rdi,rsi
   14000ca8d:	mov    r15,rdi
   14000ca90:	add    rdi,rsi
   14000ca93:	test   ebx,ebx
   14000ca95:	jne    0x14000ca9c
   14000ca97:	mov    BYTE PTR [r15],r9b
   14000ca9a:	jmp    0x14000cab0
   14000ca9c:	mov    rax,QWORD PTR [rsp+0x30]
   14000caa1:	mov    rcx,QWORD PTR [rax+0xf0]
   14000caa8:	mov    rax,QWORD PTR [rcx]
   14000caab:	mov    cl,BYTE PTR [rax]
   14000caad:	mov    BYTE PTR [r15],cl
   14000cab0:	test   QWORD PTR [r14],r11
   14000cab3:	jbe    0x14000cb41
   14000cab9:	movabs r8,0xf000000000000
   14000cac3:	test   ebx,ebx
   14000cac5:	jle    0x14000caf4
   14000cac7:	mov    rax,QWORD PTR [r14]
   14000caca:	mov    cl,bpl
   14000cacd:	and    rax,r8
   14000cad0:	and    rax,r11
   14000cad3:	shr    rax,cl
   14000cad6:	add    ax,r10w
   14000cada:	cmp    ax,0x39
   14000cade:	jbe    0x14000cae3
   14000cae0:	add    ax,dx
   14000cae3:	mov    BYTE PTR [rdi],al
   14000cae5:	shr    r8,0x4
   14000cae9:	sub    ebx,esi
   14000caeb:	add    rdi,rsi
   14000caee:	add    bp,0xfffc
   14000caf2:	jns    0x14000cac3
   14000caf4:	test   bp,bp
   14000caf7:	js     0x14000cb41
   14000caf9:	mov    rax,QWORD PTR [r14]
   14000cafc:	mov    cl,bpl
   14000caff:	and    rax,r8
   14000cb02:	and    rax,r11
   14000cb05:	shr    rax,cl
   14000cb08:	cmp    ax,0x8
   14000cb0c:	jbe    0x14000cb41
   14000cb0e:	lea    rcx,[rdi-0x1]
   14000cb12:	mov    al,BYTE PTR [rcx]
   14000cb14:	sub    al,0x46
   14000cb16:	test   al,0xdf
   14000cb18:	jne    0x14000cb22
   14000cb1a:	mov    BYTE PTR [rcx],r10b
   14000cb1d:	sub    rcx,rsi
   14000cb20:	jmp    0x14000cb12
   14000cb22:	cmp    rcx,r15
   14000cb25:	je     0x14000cb3b
   14000cb27:	mov    al,BYTE PTR [rcx]
   14000cb29:	cmp    al,0x39
   14000cb2b:	jne    0x14000cb34
   14000cb2d:	add    dl,0x3a
   14000cb30:	mov    BYTE PTR [rcx],dl
   14000cb32:	jmp    0x14000cb41
   14000cb34:	add    al,sil
   14000cb37:	mov    BYTE PTR [rcx],al
   14000cb39:	jmp    0x14000cb41
   14000cb3b:	sub    rcx,rsi
   14000cb3e:	add    BYTE PTR [rcx],sil
   14000cb41:	test   ebx,ebx
   14000cb43:	jle    0x14000cb5d
   14000cb45:	mov    r8,rbx
   14000cb48:	mov    dl,r10b
   14000cb4b:	mov    rcx,rdi
   14000cb4e:	call   0x140006f70
   14000cb53:	add    rdi,rbx
   14000cb56:	xor    r9d,r9d
   14000cb59:	lea    r10d,[r9+0x30]
   14000cb5d:	cmp    BYTE PTR [r15],r9b
   14000cb60:	cmove  rdi,r15
   14000cb64:	neg    r13d
   14000cb67:	sbb    al,al
   14000cb69:	and    al,0xe0
   14000cb6b:	add    al,0x70
   14000cb6d:	mov    BYTE PTR [rdi],al
   14000cb6f:	mov    rcx,QWORD PTR [r14]
   14000cb72:	add    rdi,rsi
   14000cb75:	shr    rcx,0x34
   14000cb79:	and    ecx,0x7ff
   14000cb7f:	sub    rcx,r12
   14000cb82:	js     0x14000cb8c
   14000cb84:	mov    BYTE PTR [rdi],0x2b
   14000cb87:	add    rdi,rsi
   14000cb8a:	jmp    0x14000cb95
   14000cb8c:	mov    BYTE PTR [rdi],0x2d
   14000cb8f:	add    rdi,rsi
   14000cb92:	neg    rcx
   14000cb95:	mov    r8,rdi
   14000cb98:	mov    BYTE PTR [rdi],r10b
   14000cb9b:	cmp    rcx,0x3e8
   14000cba2:	jl     0x14000cbd7
   14000cba4:	movabs rax,0x20c49ba5e353f7cf
   14000cbae:	imul   rcx
   14000cbb1:	sar    rdx,0x7
   14000cbb5:	mov    rax,rdx
   14000cbb8:	shr    rax,0x3f
   14000cbbc:	add    rdx,rax
   14000cbbf:	lea    eax,[r10+rdx*1]
   14000cbc3:	mov    BYTE PTR [rdi],al
   14000cbc5:	add    rdi,rsi
   14000cbc8:	imul   rax,rdx,0xfffffffffffffc18
   14000cbcf:	add    rcx,rax
   14000cbd2:	cmp    rdi,r8
   14000cbd5:	jne    0x14000cbdd
   14000cbd7:	cmp    rcx,0x64
   14000cbdb:	jl     0x14000cc0b
   14000cbdd:	movabs rax,0xa3d70a3d70a3d70b
   14000cbe7:	imul   rcx
   14000cbea:	add    rdx,rcx
   14000cbed:	sar    rdx,0x6
   14000cbf1:	mov    rax,rdx
   14000cbf4:	shr    rax,0x3f
   14000cbf8:	add    rdx,rax
   14000cbfb:	lea    eax,[r10+rdx*1]
   14000cbff:	mov    BYTE PTR [rdi],al
   14000cc01:	add    rdi,rsi
   14000cc04:	imul   rax,rdx,0xffffffffffffff9c
   14000cc08:	add    rcx,rax
   14000cc0b:	cmp    rdi,r8
   14000cc0e:	jne    0x14000cc16
   14000cc10:	cmp    rcx,0xa
   14000cc14:	jl     0x14000cc41
   14000cc16:	movabs rax,0x6666666666666667
   14000cc20:	imul   rcx
   14000cc23:	sar    rdx,0x2
   14000cc27:	mov    rax,rdx
   14000cc2a:	shr    rax,0x3f
   14000cc2e:	add    rdx,rax
   14000cc31:	lea    eax,[r10+rdx*1]
   14000cc35:	mov    BYTE PTR [rdi],al
   14000cc37:	add    rdi,rsi
   14000cc3a:	imul   rax,rdx,0xfffffffffffffff6
   14000cc3e:	add    rcx,rax
   14000cc41:	add    cl,r10b
   14000cc44:	mov    BYTE PTR [rdi],cl
   14000cc46:	mov    BYTE PTR [rdi+0x1],r9b
   14000cc4a:	mov    ebx,r9d
   14000cc4d:	cmp    BYTE PTR [rsp+0x48],r9b
   14000cc52:	je     0x14000cc60
   14000cc54:	mov    rcx,QWORD PTR [rsp+0x40]
   14000cc59:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000cc60:	lea    r11,[rsp+0x50]
   14000cc65:	mov    eax,ebx
   14000cc67:	mov    rbx,QWORD PTR [r11+0x30]
   14000cc6b:	mov    rbp,QWORD PTR [r11+0x38]
   14000cc6f:	mov    rsi,QWORD PTR [r11+0x40]
   14000cc73:	mov    rsp,r11
   14000cc76:	pop    r15
   14000cc78:	pop    r14
   14000cc7a:	pop    r13
   14000cc7c:	pop    r12
   14000cc7e:	pop    rdi
   14000cc7f:	ret    
   14000cc80:	sub    rsp,0x38
   14000cc84:	mov    eax,DWORD PTR [rsp+0x60]
   14000cc88:	and    QWORD PTR [rsp+0x28],0x0
   14000cc8e:	mov    DWORD PTR [rsp+0x20],eax
   14000cc92:	call   0x14000ce98
   14000cc97:	add    rsp,0x38
   14000cc9b:	ret    
   14000cc9c:	mov    rax,rsp
   14000cc9f:	mov    QWORD PTR [rax+0x8],rbx
   14000cca3:	mov    QWORD PTR [rax+0x10],rbp
   14000cca7:	mov    QWORD PTR [rax+0x18],rsi
   14000ccab:	mov    QWORD PTR [rax+0x20],rdi
   14000ccaf:	push   r13
   14000ccb1:	push   r14
   14000ccb3:	push   r15
   14000ccb5:	sub    rsp,0x50
   14000ccb9:	mov    r14,rdx
   14000ccbc:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000ccc4:	mov    rdi,rcx
   14000ccc7:	lea    rcx,[rax-0x38]
   14000cccb:	mov    r13d,r9d
   14000ccce:	movsxd rsi,r8d
   14000ccd1:	call   0x140008fac
   14000ccd6:	test   rdi,rdi
   14000ccd9:	je     0x14000cce0
   14000ccdb:	test   r14,r14
   14000ccde:	jne    0x14000ccec
   14000cce0:	call   0x140009cb4
   14000cce5:	mov    ebx,0x16
   14000ccea:	jmp    0x14000cd07
   14000ccec:	xor    eax,eax
   14000ccee:	test   esi,esi
   14000ccf0:	cmovg  eax,esi
   14000ccf3:	add    eax,0x9
   14000ccf6:	cdqe   
   14000ccf8:	cmp    r14,rax
   14000ccfb:	ja     0x14000cd13
   14000ccfd:	call   0x140009cb4
   14000cd02:	mov    ebx,0x22
   14000cd07:	mov    DWORD PTR [rax],ebx
   14000cd09:	call   0x140008d58
   14000cd0e:	jmp    0x14000ce4b
   14000cd13:	cmp    BYTE PTR [rsp+0x98],0x0
   14000cd1b:	mov    rbp,QWORD PTR [rsp+0x90]
   14000cd23:	je     0x14000cd59
   14000cd25:	xor    ebx,ebx
   14000cd27:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000cd2b:	sete   bl
   14000cd2e:	xor    r15d,r15d
   14000cd31:	add    rbx,rdi
   14000cd34:	test   esi,esi
   14000cd36:	setg   r15b
   14000cd3a:	test   r15d,r15d
   14000cd3d:	je     0x14000cd59
   14000cd3f:	mov    rcx,rbx
   14000cd42:	call   0x140007550
   14000cd47:	movsxd rcx,r15d
   14000cd4a:	mov    rdx,rbx
   14000cd4d:	lea    r8,[rax+0x1]
   14000cd51:	add    rcx,rbx
   14000cd54:	call   0x1400059f0
   14000cd59:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000cd5d:	mov    rdx,rdi
   14000cd60:	jne    0x14000cd69
   14000cd62:	mov    BYTE PTR [rdi],0x2d
   14000cd65:	lea    rdx,[rdi+0x1]
   14000cd69:	test   esi,esi
   14000cd6b:	jle    0x14000cd88
   14000cd6d:	mov    al,BYTE PTR [rdx+0x1]
   14000cd70:	mov    BYTE PTR [rdx],al
   14000cd72:	mov    rax,QWORD PTR [rsp+0x30]
   14000cd77:	inc    rdx
   14000cd7a:	mov    rcx,QWORD PTR [rax+0xf0]
   14000cd81:	mov    rax,QWORD PTR [rcx]
   14000cd84:	mov    cl,BYTE PTR [rax]
   14000cd86:	mov    BYTE PTR [rdx],cl
   14000cd88:	xor    ecx,ecx
   14000cd8a:	lea    rbx,[rdx+rsi*1]
   14000cd8e:	lea    r8,[rip+0x21d7b]        # 0x14002eb10
   14000cd95:	cmp    BYTE PTR [rsp+0x98],cl
   14000cd9c:	sete   cl
   14000cd9f:	add    rbx,rcx
   14000cda2:	sub    rdi,rbx
   14000cda5:	cmp    r14,0xffffffffffffffff
   14000cda9:	mov    rcx,rbx
   14000cdac:	lea    rdx,[r14+rdi*1]
   14000cdb0:	cmove  rdx,r14
   14000cdb4:	call   0x14000edd8
   14000cdb9:	test   eax,eax
   14000cdbb:	jne    0x14000ce7f
   14000cdc1:	lea    rcx,[rbx+0x2]
   14000cdc5:	test   r13d,r13d
   14000cdc8:	je     0x14000cdcd
   14000cdca:	mov    BYTE PTR [rbx],0x45
   14000cdcd:	mov    rax,QWORD PTR [rbp+0x10]
   14000cdd1:	cmp    BYTE PTR [rax],0x30
   14000cdd4:	je     0x14000ce2c
   14000cdd6:	mov    r8d,DWORD PTR [rbp+0x4]
   14000cdda:	dec    r8d
   14000cddd:	jns    0x14000cde6
   14000cddf:	neg    r8d
   14000cde2:	mov    BYTE PTR [rbx+0x1],0x2d
   14000cde6:	cmp    r8d,0x64
   14000cdea:	jl     0x14000ce07
   14000cdec:	mov    eax,0x51eb851f
   14000cdf1:	imul   r8d
   14000cdf4:	sar    edx,0x5
   14000cdf7:	mov    eax,edx
   14000cdf9:	shr    eax,0x1f
   14000cdfc:	add    edx,eax
   14000cdfe:	add    BYTE PTR [rbx+0x2],dl
   14000ce01:	imul   eax,edx,0xffffff9c
   14000ce04:	add    r8d,eax
   14000ce07:	cmp    r8d,0xa
   14000ce0b:	jl     0x14000ce28
   14000ce0d:	mov    eax,0x66666667
   14000ce12:	imul   r8d
   14000ce15:	sar    edx,0x2
   14000ce18:	mov    eax,edx
   14000ce1a:	shr    eax,0x1f
   14000ce1d:	add    edx,eax
   14000ce1f:	add    BYTE PTR [rbx+0x3],dl
   14000ce22:	imul   eax,edx,0xfffffff6
   14000ce25:	add    r8d,eax
   14000ce28:	add    BYTE PTR [rbx+0x4],r8b
   14000ce2c:	test   BYTE PTR [rip+0x32121],0x1        # 0x14003ef54
   14000ce33:	je     0x14000ce49
   14000ce35:	cmp    BYTE PTR [rcx],0x30
   14000ce38:	jne    0x14000ce49
   14000ce3a:	lea    rdx,[rcx+0x1]
   14000ce3e:	mov    r8d,0x3
   14000ce44:	call   0x1400059f0
   14000ce49:	xor    ebx,ebx
   14000ce4b:	cmp    BYTE PTR [rsp+0x48],0x0
   14000ce50:	je     0x14000ce5e
   14000ce52:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ce57:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ce5e:	lea    r11,[rsp+0x50]
   14000ce63:	mov    eax,ebx
   14000ce65:	mov    rbx,QWORD PTR [r11+0x20]
   14000ce69:	mov    rbp,QWORD PTR [r11+0x28]
   14000ce6d:	mov    rsi,QWORD PTR [r11+0x30]
   14000ce71:	mov    rdi,QWORD PTR [r11+0x38]
   14000ce75:	mov    rsp,r11
   14000ce78:	pop    r15
   14000ce7a:	pop    r14
   14000ce7c:	pop    r13
   14000ce7e:	ret    
   14000ce7f:	and    QWORD PTR [rsp+0x20],0x0
   14000ce85:	xor    r9d,r9d
   14000ce88:	xor    r8d,r8d
   14000ce8b:	xor    edx,edx
   14000ce8d:	xor    ecx,ecx
   14000ce8f:	call   0x140008da8
   14000ce94:	int3   
   14000ce95:	int3   
   14000ce96:	int3   
   14000ce97:	int3   
   14000ce98:	rex push rbx
   14000ce9a:	push   rbp
   14000ce9b:	push   rsi
   14000ce9c:	push   rdi
   14000ce9d:	sub    rsp,0x88
   14000cea4:	mov    rax,QWORD PTR [rip+0x2f325]        # 0x14003c1d0
   14000ceab:	xor    rax,rsp
   14000ceae:	mov    QWORD PTR [rsp+0x70],rax
   14000ceb3:	mov    rcx,QWORD PTR [rcx]
   14000ceb6:	mov    rbx,r8
   14000ceb9:	mov    rdi,rdx
   14000cebc:	mov    esi,r9d
   14000cebf:	mov    ebp,0x16
   14000cec4:	lea    r8,[rsp+0x58]
   14000cec9:	lea    rdx,[rsp+0x40]
   14000cece:	mov    r9d,ebp
   14000ced1:	call   0x14001bfb8
   14000ced6:	test   rdi,rdi
   14000ced9:	jne    0x14000ceee
   14000cedb:	call   0x140009cb4
   14000cee0:	mov    DWORD PTR [rax],ebp
   14000cee2:	call   0x140008d58
   14000cee7:	mov    eax,ebp
   14000cee9:	jmp    0x14000cf76
   14000ceee:	test   rbx,rbx
   14000cef1:	je     0x14000cedb
   14000cef3:	or     rdx,0xffffffffffffffff
   14000cef7:	cmp    rbx,rdx
   14000cefa:	je     0x14000cf16
   14000cefc:	xor    eax,eax
   14000cefe:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000cf03:	mov    rdx,rbx
   14000cf06:	sete   al
   14000cf09:	sub    rdx,rax
   14000cf0c:	xor    eax,eax
   14000cf0e:	test   esi,esi
   14000cf10:	setg   al
   14000cf13:	sub    rdx,rax
   14000cf16:	xor    eax,eax
   14000cf18:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000cf1d:	lea    r8d,[rsi+0x1]
   14000cf21:	sete   al
   14000cf24:	xor    ecx,ecx
   14000cf26:	test   esi,esi
   14000cf28:	setg   cl
   14000cf2b:	add    rax,rdi
   14000cf2e:	lea    r9,[rsp+0x40]
   14000cf33:	add    rcx,rax
   14000cf36:	call   0x14001bb94
   14000cf3b:	test   eax,eax
   14000cf3d:	je     0x14000cf44
   14000cf3f:	mov    BYTE PTR [rdi],0x0
   14000cf42:	jmp    0x14000cf76
   14000cf44:	mov    rax,QWORD PTR [rsp+0xd8]
   14000cf4c:	mov    r9d,DWORD PTR [rsp+0xd0]
   14000cf54:	mov    r8d,esi
   14000cf57:	mov    QWORD PTR [rsp+0x30],rax
   14000cf5c:	lea    rax,[rsp+0x40]
   14000cf61:	mov    rdx,rbx
   14000cf64:	mov    rcx,rdi
   14000cf67:	mov    BYTE PTR [rsp+0x28],0x0
   14000cf6c:	mov    QWORD PTR [rsp+0x20],rax
   14000cf71:	call   0x14000cc9c
   14000cf76:	mov    rcx,QWORD PTR [rsp+0x70]
   14000cf7b:	xor    rcx,rsp
   14000cf7e:	call   0x14000c380
   14000cf83:	add    rsp,0x88
   14000cf8a:	pop    rdi
   14000cf8b:	pop    rsi
   14000cf8c:	pop    rbp
   14000cf8d:	pop    rbx
   14000cf8e:	ret    
   14000cf8f:	int3   
   14000cf90:	sub    rsp,0x38
   14000cf94:	and    QWORD PTR [rsp+0x20],0x0
   14000cf9a:	call   0x14000d108
   14000cf9f:	add    rsp,0x38
   14000cfa3:	ret    
   14000cfa4:	mov    rax,rsp
   14000cfa7:	mov    QWORD PTR [rax+0x8],rbx
   14000cfab:	mov    QWORD PTR [rax+0x10],rbp
   14000cfaf:	mov    QWORD PTR [rax+0x18],rsi
   14000cfb3:	mov    QWORD PTR [rax+0x20],rdi
   14000cfb7:	push   r14
   14000cfb9:	sub    rsp,0x40
   14000cfbd:	mov    ebx,DWORD PTR [r9+0x4]
   14000cfc1:	mov    rsi,rdx
   14000cfc4:	mov    rdx,QWORD PTR [rsp+0x78]
   14000cfc9:	mov    rdi,rcx
   14000cfcc:	lea    rcx,[rax-0x28]
   14000cfd0:	mov    rbp,r9
   14000cfd3:	dec    ebx
   14000cfd5:	mov    r14d,r8d
   14000cfd8:	call   0x140008fac
   14000cfdd:	test   rdi,rdi
   14000cfe0:	je     0x14000cfe7
   14000cfe2:	test   rsi,rsi
   14000cfe5:	jne    0x14000cffd
   14000cfe7:	call   0x140009cb4
   14000cfec:	mov    ebx,0x16
   14000cff1:	mov    DWORD PTR [rax],ebx
   14000cff3:	call   0x140008d58
   14000cff8:	jmp    0x14000d0d5
   14000cffd:	cmp    BYTE PTR [rsp+0x70],0x0
   14000d002:	je     0x14000d01e
   14000d004:	cmp    ebx,r14d
   14000d007:	jne    0x14000d01e
   14000d009:	xor    eax,eax
   14000d00b:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000d00f:	movsxd rcx,ebx
   14000d012:	sete   al
   14000d015:	add    rax,rdi
   14000d018:	mov    WORD PTR [rcx+rax*1],0x30
   14000d01e:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000d022:	jne    0x14000d02a
   14000d024:	mov    BYTE PTR [rdi],0x2d
   14000d027:	inc    rdi
   14000d02a:	cmp    DWORD PTR [rbp+0x4],0x0
   14000d02e:	jg     0x14000d050
   14000d030:	mov    rcx,rdi
   14000d033:	call   0x140007550
   14000d038:	lea    rcx,[rdi+0x1]
   14000d03c:	mov    rdx,rdi
   14000d03f:	lea    r8,[rax+0x1]
   14000d043:	call   0x1400059f0
   14000d048:	mov    BYTE PTR [rdi],0x30
   14000d04b:	inc    rdi
   14000d04e:	jmp    0x14000d057
   14000d050:	movsxd rax,DWORD PTR [rbp+0x4]
   14000d054:	add    rdi,rax
   14000d057:	test   r14d,r14d
   14000d05a:	jle    0x14000d0d3
   14000d05c:	mov    rcx,rdi
   14000d05f:	lea    rsi,[rdi+0x1]
   14000d063:	call   0x140007550
   14000d068:	mov    rdx,rdi
   14000d06b:	mov    rcx,rsi
   14000d06e:	lea    r8,[rax+0x1]
   14000d072:	call   0x1400059f0
   14000d077:	mov    rax,QWORD PTR [rsp+0x20]
   14000d07c:	mov    rcx,QWORD PTR [rax+0xf0]
   14000d083:	mov    rax,QWORD PTR [rcx]
   14000d086:	mov    cl,BYTE PTR [rax]
   14000d088:	mov    BYTE PTR [rdi],cl
   14000d08a:	mov    ebx,DWORD PTR [rbp+0x4]
   14000d08d:	test   ebx,ebx
   14000d08f:	jns    0x14000d0d3
   14000d091:	neg    ebx
   14000d093:	cmp    BYTE PTR [rsp+0x70],0x0
   14000d098:	jne    0x14000d0a5
   14000d09a:	mov    eax,ebx
   14000d09c:	mov    ebx,r14d
   14000d09f:	cmp    r14d,eax
   14000d0a2:	cmovge ebx,eax
   14000d0a5:	test   ebx,ebx
   14000d0a7:	je     0x14000d0c3
   14000d0a9:	mov    rcx,rsi
   14000d0ac:	call   0x140007550
   14000d0b1:	movsxd rcx,ebx
   14000d0b4:	mov    rdx,rsi
   14000d0b7:	lea    r8,[rax+0x1]
   14000d0bb:	add    rcx,rsi
   14000d0be:	call   0x1400059f0
   14000d0c3:	movsxd r8,ebx
   14000d0c6:	mov    edx,0x30
   14000d0cb:	mov    rcx,rsi
   14000d0ce:	call   0x140006f70
   14000d0d3:	xor    ebx,ebx
   14000d0d5:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d0da:	je     0x14000d0e8
   14000d0dc:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d0e1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d0e8:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d0ed:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d0f2:	mov    rdi,QWORD PTR [rsp+0x68]
   14000d0f7:	mov    eax,ebx
   14000d0f9:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d0fe:	add    rsp,0x40
   14000d102:	pop    r14
   14000d104:	ret    
   14000d105:	int3   
   14000d106:	int3   
   14000d107:	int3   
   14000d108:	rex push rbx
   14000d10a:	push   rbp
   14000d10b:	push   rsi
   14000d10c:	push   rdi
   14000d10d:	sub    rsp,0x78
   14000d111:	mov    rax,QWORD PTR [rip+0x2f0b8]        # 0x14003c1d0
   14000d118:	xor    rax,rsp
   14000d11b:	mov    QWORD PTR [rsp+0x60],rax
   14000d120:	mov    rcx,QWORD PTR [rcx]
   14000d123:	mov    rbx,r8
   14000d126:	mov    rdi,rdx
   14000d129:	mov    esi,r9d
   14000d12c:	mov    ebp,0x16
   14000d131:	lea    r8,[rsp+0x48]
   14000d136:	lea    rdx,[rsp+0x30]
   14000d13b:	mov    r9d,ebp
   14000d13e:	call   0x14001bfb8
   14000d143:	test   rdi,rdi
   14000d146:	jne    0x14000d158
   14000d148:	call   0x140009cb4
   14000d14d:	mov    DWORD PTR [rax],ebp
   14000d14f:	call   0x140008d58
   14000d154:	mov    eax,ebp
   14000d156:	jmp    0x14000d1c3
   14000d158:	test   rbx,rbx
   14000d15b:	je     0x14000d148
   14000d15d:	or     rdx,0xffffffffffffffff
   14000d161:	cmp    rbx,rdx
   14000d164:	je     0x14000d176
   14000d166:	xor    eax,eax
   14000d168:	cmp    DWORD PTR [rsp+0x30],0x2d
   14000d16d:	mov    rdx,rbx
   14000d170:	sete   al
   14000d173:	sub    rdx,rax
   14000d176:	mov    r8d,DWORD PTR [rsp+0x34]
   14000d17b:	xor    ecx,ecx
   14000d17d:	lea    r9,[rsp+0x30]
   14000d182:	add    r8d,esi
   14000d185:	cmp    DWORD PTR [rsp+0x30],0x2d
   14000d18a:	sete   cl
   14000d18d:	add    rcx,rdi
   14000d190:	call   0x14001bb94
   14000d195:	test   eax,eax
   14000d197:	je     0x14000d19e
   14000d199:	mov    BYTE PTR [rdi],0x0
   14000d19c:	jmp    0x14000d1c3
   14000d19e:	mov    rax,QWORD PTR [rsp+0xc0]
   14000d1a6:	lea    r9,[rsp+0x30]
   14000d1ab:	mov    r8d,esi
   14000d1ae:	mov    QWORD PTR [rsp+0x28],rax
   14000d1b3:	mov    rdx,rbx
   14000d1b6:	mov    rcx,rdi
   14000d1b9:	mov    BYTE PTR [rsp+0x20],0x0
   14000d1be:	call   0x14000cfa4
   14000d1c3:	mov    rcx,QWORD PTR [rsp+0x60]
   14000d1c8:	xor    rcx,rsp
   14000d1cb:	call   0x14000c380
   14000d1d0:	add    rsp,0x78
   14000d1d4:	pop    rdi
   14000d1d5:	pop    rsi
   14000d1d6:	pop    rbp
   14000d1d7:	pop    rbx
   14000d1d8:	ret    
   14000d1d9:	int3   
   14000d1da:	int3   
   14000d1db:	int3   
   14000d1dc:	sub    rsp,0x38
   14000d1e0:	mov    eax,DWORD PTR [rsp+0x60]
   14000d1e4:	and    QWORD PTR [rsp+0x28],0x0
   14000d1ea:	mov    DWORD PTR [rsp+0x20],eax
   14000d1ee:	call   0x14000d1f8
   14000d1f3:	add    rsp,0x38
   14000d1f7:	ret    
   14000d1f8:	rex push rbx
   14000d1fa:	push   rbp
   14000d1fb:	push   rsi
   14000d1fc:	push   rdi
   14000d1fd:	push   r14
   14000d1ff:	sub    rsp,0x80
   14000d206:	mov    rax,QWORD PTR [rip+0x2efc3]        # 0x14003c1d0
   14000d20d:	xor    rax,rsp
   14000d210:	mov    QWORD PTR [rsp+0x70],rax
   14000d215:	mov    rcx,QWORD PTR [rcx]
   14000d218:	mov    rdi,r8
   14000d21b:	mov    rsi,rdx
   14000d21e:	mov    ebp,r9d
   14000d221:	mov    ebx,0x16
   14000d226:	lea    r8,[rsp+0x58]
   14000d22b:	lea    rdx,[rsp+0x40]
   14000d230:	mov    r9d,ebx
   14000d233:	call   0x14001bfb8
   14000d238:	test   rsi,rsi
   14000d23b:	jne    0x14000d250
   14000d23d:	call   0x140009cb4
   14000d242:	mov    DWORD PTR [rax],ebx
   14000d244:	call   0x140008d58
   14000d249:	mov    eax,ebx
   14000d24b:	jmp    0x14000d311
   14000d250:	test   rdi,rdi
   14000d253:	je     0x14000d23d
   14000d255:	mov    r14d,DWORD PTR [rsp+0x44]
   14000d25a:	xor    eax,eax
   14000d25c:	dec    r14d
   14000d25f:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000d264:	sete   al
   14000d267:	or     rdx,0xffffffffffffffff
   14000d26b:	lea    rbx,[rax+rsi*1]
   14000d26f:	cmp    rdi,rdx
   14000d272:	je     0x14000d27a
   14000d274:	mov    rdx,rdi
   14000d277:	sub    rdx,rax
   14000d27a:	lea    r9,[rsp+0x40]
   14000d27f:	mov    r8d,ebp
   14000d282:	mov    rcx,rbx
   14000d285:	call   0x14001bb94
   14000d28a:	test   eax,eax
   14000d28c:	je     0x14000d293
   14000d28e:	mov    BYTE PTR [rsi],0x0
   14000d291:	jmp    0x14000d311
   14000d293:	mov    eax,DWORD PTR [rsp+0x44]
   14000d297:	dec    eax
   14000d299:	cmp    r14d,eax
   14000d29c:	setl   cl
   14000d29f:	cmp    eax,0xfffffffc
   14000d2a2:	jl     0x14000d2df
   14000d2a4:	cmp    eax,ebp
   14000d2a6:	jge    0x14000d2df
   14000d2a8:	test   cl,cl
   14000d2aa:	je     0x14000d2b8
   14000d2ac:	mov    al,BYTE PTR [rbx]
   14000d2ae:	inc    rbx
   14000d2b1:	test   al,al
   14000d2b3:	jne    0x14000d2ac
   14000d2b5:	mov    BYTE PTR [rbx-0x2],al
   14000d2b8:	mov    rax,QWORD PTR [rsp+0xd8]
   14000d2c0:	lea    r9,[rsp+0x40]
   14000d2c5:	mov    r8d,ebp
   14000d2c8:	mov    QWORD PTR [rsp+0x28],rax
   14000d2cd:	mov    rdx,rdi
   14000d2d0:	mov    rcx,rsi
   14000d2d3:	mov    BYTE PTR [rsp+0x20],0x1
   14000d2d8:	call   0x14000cfa4
   14000d2dd:	jmp    0x14000d311
   14000d2df:	mov    rax,QWORD PTR [rsp+0xd8]
   14000d2e7:	mov    r9d,DWORD PTR [rsp+0xd0]
   14000d2ef:	mov    r8d,ebp
   14000d2f2:	mov    QWORD PTR [rsp+0x30],rax
   14000d2f7:	lea    rax,[rsp+0x40]
   14000d2fc:	mov    rdx,rdi
   14000d2ff:	mov    rcx,rsi
   14000d302:	mov    BYTE PTR [rsp+0x28],0x1
   14000d307:	mov    QWORD PTR [rsp+0x20],rax
   14000d30c:	call   0x14000cc9c
   14000d311:	mov    rcx,QWORD PTR [rsp+0x70]
   14000d316:	xor    rcx,rsp
   14000d319:	call   0x14000c380
   14000d31e:	add    rsp,0x80
   14000d325:	pop    r14
   14000d327:	pop    rdi
   14000d328:	pop    rsi
   14000d329:	pop    rbp
   14000d32a:	pop    rbx
   14000d32b:	ret    
   14000d32c:	xor    edx,edx
   14000d32e:	jmp    0x14000d334
   14000d333:	int3   
   14000d334:	rex push rbx
   14000d336:	sub    rsp,0x40
   14000d33a:	mov    rbx,rcx
   14000d33d:	lea    rcx,[rsp+0x20]
   14000d342:	call   0x140008fac
   14000d347:	mov    cl,BYTE PTR [rbx]
   14000d349:	mov    r8,QWORD PTR [rsp+0x20]
   14000d34e:	test   cl,cl
   14000d350:	je     0x14000d36b
   14000d352:	mov    rax,QWORD PTR [r8+0xf0]
   14000d359:	mov    rdx,QWORD PTR [rax]
   14000d35c:	mov    al,BYTE PTR [rdx]
   14000d35e:	cmp    cl,al
   14000d360:	je     0x14000d36b
   14000d362:	inc    rbx
   14000d365:	mov    cl,BYTE PTR [rbx]
   14000d367:	test   cl,cl
   14000d369:	jne    0x14000d35e
   14000d36b:	mov    al,BYTE PTR [rbx]
   14000d36d:	inc    rbx
   14000d370:	test   al,al
   14000d372:	je     0x14000d3b1
   14000d374:	jmp    0x14000d37f
   14000d376:	sub    al,0x45
   14000d378:	test   al,0xdf
   14000d37a:	je     0x14000d385
   14000d37c:	inc    rbx
   14000d37f:	mov    al,BYTE PTR [rbx]
   14000d381:	test   al,al
   14000d383:	jne    0x14000d376
   14000d385:	mov    rdx,rbx
   14000d388:	dec    rbx
   14000d38b:	cmp    BYTE PTR [rbx],0x30
   14000d38e:	je     0x14000d388
   14000d390:	mov    rax,QWORD PTR [r8+0xf0]
   14000d397:	mov    rcx,QWORD PTR [rax]
   14000d39a:	mov    al,BYTE PTR [rcx]
   14000d39c:	cmp    BYTE PTR [rbx],al
   14000d39e:	jne    0x14000d3a3
   14000d3a0:	dec    rbx
   14000d3a3:	mov    al,BYTE PTR [rdx]
   14000d3a5:	inc    rbx
   14000d3a8:	inc    rdx
   14000d3ab:	mov    BYTE PTR [rbx],al
   14000d3ad:	test   al,al
   14000d3af:	jne    0x14000d3a3
   14000d3b1:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d3b6:	je     0x14000d3c4
   14000d3b8:	mov    rax,QWORD PTR [rsp+0x30]
   14000d3bd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d3c4:	add    rsp,0x40
   14000d3c8:	pop    rbx
   14000d3c9:	ret    
   14000d3ca:	int3   
   14000d3cb:	int3   
   14000d3cc:	xor    r9d,r9d
   14000d3cf:	jmp    0x14000d3d4
   14000d3d4:	rex push rbx
   14000d3d6:	sub    rsp,0x30
   14000d3da:	mov    rax,r8
   14000d3dd:	mov    rbx,rdx
   14000d3e0:	mov    r8,r9
   14000d3e3:	mov    rdx,rax
   14000d3e6:	test   ecx,ecx
   14000d3e8:	je     0x14000d3fe
   14000d3ea:	lea    rcx,[rsp+0x20]
   14000d3ef:	call   0x14001bd38
   14000d3f4:	mov    rax,QWORD PTR [rsp+0x20]
   14000d3f9:	mov    QWORD PTR [rbx],rax
   14000d3fc:	jmp    0x14000d40e
   14000d3fe:	lea    rcx,[rsp+0x40]
   14000d403:	call   0x14001be0c
   14000d408:	mov    eax,DWORD PTR [rsp+0x40]
   14000d40c:	mov    DWORD PTR [rbx],eax
   14000d40e:	add    rsp,0x30
   14000d412:	pop    rbx
   14000d413:	ret    
   14000d414:	xor    edx,edx
   14000d416:	jmp    0x14000d41c
   14000d41b:	int3   
   14000d41c:	rex push rbx
   14000d41e:	sub    rsp,0x40
   14000d422:	mov    rbx,rcx
   14000d425:	lea    rcx,[rsp+0x20]
   14000d42a:	call   0x140008fac
   14000d42f:	movsx  ecx,BYTE PTR [rbx]
   14000d432:	call   0x14001ba30
   14000d437:	cmp    eax,0x65
   14000d43a:	je     0x14000d44b
   14000d43c:	inc    rbx
   14000d43f:	movzx  ecx,BYTE PTR [rbx]
   14000d442:	call   0x14001b4ec
   14000d447:	test   eax,eax
   14000d449:	jne    0x14000d43c
   14000d44b:	movsx  ecx,BYTE PTR [rbx]
   14000d44e:	call   0x14001ba30
   14000d453:	cmp    eax,0x78
   14000d456:	jne    0x14000d45c
   14000d458:	add    rbx,0x2
   14000d45c:	mov    rax,QWORD PTR [rsp+0x20]
   14000d461:	mov    dl,BYTE PTR [rbx]
   14000d463:	mov    rcx,QWORD PTR [rax+0xf0]
   14000d46a:	mov    rax,QWORD PTR [rcx]
   14000d46d:	mov    cl,BYTE PTR [rax]
   14000d46f:	mov    BYTE PTR [rbx],cl
   14000d471:	inc    rbx
   14000d474:	mov    al,BYTE PTR [rbx]
   14000d476:	mov    BYTE PTR [rbx],dl
   14000d478:	mov    dl,al
   14000d47a:	mov    al,BYTE PTR [rbx]
   14000d47c:	inc    rbx
   14000d47f:	test   al,al
   14000d481:	jne    0x14000d474
   14000d483:	cmp    BYTE PTR [rsp+0x38],al
   14000d487:	je     0x14000d495
   14000d489:	mov    rax,QWORD PTR [rsp+0x30]
   14000d48e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d495:	add    rsp,0x40
   14000d499:	pop    rbx
   14000d49a:	ret    
   14000d49b:	int3   
   14000d49c:	movsd  xmm0,QWORD PTR [rcx]
   14000d4a0:	xor    eax,eax
   14000d4a2:	comisd xmm0,QWORD PTR [rip+0x2166e]        # 0x14002eb18
   14000d4aa:	setae  al
   14000d4ad:	ret    
   14000d4ae:	int3   
   14000d4af:	int3   
   14000d4b0:	test   edx,edx
   14000d4b2:	je     0x14000d4e3
   14000d4b4:	mov    QWORD PTR [rsp+0x8],rbx
   14000d4b9:	push   rdi
   14000d4ba:	sub    rsp,0x20
   14000d4be:	movsxd rbx,edx
   14000d4c1:	mov    rdi,rcx
   14000d4c4:	call   0x140007550
   14000d4c9:	lea    rcx,[rdi+rbx*1]
   14000d4cd:	lea    r8,[rax+0x1]
   14000d4d1:	mov    rdx,rdi
   14000d4d4:	call   0x1400059f0
   14000d4d9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d4de:	add    rsp,0x20
   14000d4e2:	pop    rdi
   14000d4e3:	ret    
   14000d4e4:	mov    QWORD PTR [rsp+0x8],rbx
   14000d4e9:	push   rdi
   14000d4ea:	sub    rsp,0x20
   14000d4ee:	xor    edi,edi
   14000d4f0:	lea    rbx,[rip+0x2ece9]        # 0x14003c1e0
   14000d4f7:	mov    rcx,QWORD PTR [rbx]
   14000d4fa:	call   QWORD PTR [rip+0x1ec10]        # 0x14002c110
   14000d500:	inc    edi
   14000d502:	mov    QWORD PTR [rbx],rax
   14000d505:	movsxd rax,edi
   14000d508:	lea    rbx,[rbx+0x8]
   14000d50c:	cmp    rax,0xa
   14000d510:	jb     0x14000d4f7
   14000d512:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d517:	add    rsp,0x20
   14000d51b:	pop    rdi
   14000d51c:	ret    
   14000d51d:	int3   
   14000d51e:	int3   
   14000d51f:	int3   
   14000d520:	sub    rsp,0x28
   14000d524:	mov    rax,QWORD PTR [rcx]
   14000d527:	cmp    DWORD PTR [rax],0xe06d7363
   14000d52d:	jne    0x14000d54b
   14000d52f:	cmp    DWORD PTR [rax+0x18],0x4
   14000d533:	jne    0x14000d54b
   14000d535:	mov    ecx,DWORD PTR [rax+0x20]
   14000d538:	lea    eax,[rcx-0x19930520]
   14000d53e:	cmp    eax,0x2
   14000d541:	jbe    0x14000d552
   14000d543:	cmp    ecx,0x1994000
   14000d549:	je     0x14000d552
   14000d54b:	xor    eax,eax
   14000d54d:	add    rsp,0x28
   14000d551:	ret    
   14000d552:	call   0x14000c280
   14000d557:	int3   
   14000d558:	sub    rsp,0x28
   14000d55c:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14000d520
   14000d563:	call   0x14000ecf0
   14000d568:	xor    eax,eax
   14000d56a:	add    rsp,0x28
   14000d56e:	ret    
   14000d56f:	int3   
   14000d570:	mov    QWORD PTR [rsp+0x8],rbx
   14000d575:	mov    QWORD PTR [rsp+0x10],rbp
   14000d57a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d57f:	push   rdi
   14000d580:	sub    rsp,0x20
   14000d584:	mov    rsi,rdx
   14000d587:	mov    edi,ecx
   14000d589:	call   0x14000a410
   14000d58e:	xor    r9d,r9d
   14000d591:	mov    rbx,rax
   14000d594:	test   rax,rax
   14000d597:	je     0x14000d725
   14000d59d:	mov    rdx,QWORD PTR [rax+0xa0]
   14000d5a4:	mov    rcx,rdx
   14000d5a7:	cmp    DWORD PTR [rcx],edi
   14000d5a9:	je     0x14000d5bb
   14000d5ab:	lea    rax,[rdx+0xc0]
   14000d5b2:	add    rcx,0x10
   14000d5b6:	cmp    rcx,rax
   14000d5b9:	jb     0x14000d5a7
   14000d5bb:	lea    rax,[rdx+0xc0]
   14000d5c2:	cmp    rcx,rax
   14000d5c5:	jae    0x14000d5cb
   14000d5c7:	cmp    DWORD PTR [rcx],edi
   14000d5c9:	je     0x14000d5ce
   14000d5cb:	mov    rcx,r9
   14000d5ce:	test   rcx,rcx
   14000d5d1:	je     0x14000d725
   14000d5d7:	mov    r8,QWORD PTR [rcx+0x8]
   14000d5db:	test   r8,r8
   14000d5de:	je     0x14000d725
   14000d5e4:	cmp    r8,0x5
   14000d5e8:	jne    0x14000d5f7
   14000d5ea:	mov    QWORD PTR [rcx+0x8],r9
   14000d5ee:	lea    eax,[r8-0x4]
   14000d5f2:	jmp    0x14000d727
   14000d5f7:	cmp    r8,0x1
   14000d5fb:	jne    0x14000d605
   14000d5fd:	or     eax,0xffffffff
   14000d600:	jmp    0x14000d727
   14000d605:	mov    rbp,QWORD PTR [rbx+0xa8]
   14000d60c:	mov    QWORD PTR [rbx+0xa8],rsi
   14000d613:	cmp    DWORD PTR [rcx+0x4],0x8
   14000d617:	jne    0x14000d70f
   14000d61d:	mov    edx,0x30
   14000d622:	mov    rax,QWORD PTR [rbx+0xa0]
   14000d629:	add    rdx,0x10
   14000d62d:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14000d632:	cmp    rdx,0xc0
   14000d639:	jl     0x14000d622
   14000d63b:	cmp    DWORD PTR [rcx],0xc000008e
   14000d641:	mov    edi,DWORD PTR [rbx+0xb0]
   14000d647:	jne    0x14000d658
   14000d649:	mov    DWORD PTR [rbx+0xb0],0x83
   14000d653:	jmp    0x14000d6f9
   14000d658:	cmp    DWORD PTR [rcx],0xc0000090
   14000d65e:	jne    0x14000d66f
   14000d660:	mov    DWORD PTR [rbx+0xb0],0x81
   14000d66a:	jmp    0x14000d6f9
   14000d66f:	cmp    DWORD PTR [rcx],0xc0000091
   14000d675:	jne    0x14000d683
   14000d677:	mov    DWORD PTR [rbx+0xb0],0x84
   14000d681:	jmp    0x14000d6f9
   14000d683:	cmp    DWORD PTR [rcx],0xc0000093
   14000d689:	jne    0x14000d697
   14000d68b:	mov    DWORD PTR [rbx+0xb0],0x85
   14000d695:	jmp    0x14000d6f9
   14000d697:	cmp    DWORD PTR [rcx],0xc000008d
   14000d69d:	jne    0x14000d6ab
   14000d69f:	mov    DWORD PTR [rbx+0xb0],0x82
   14000d6a9:	jmp    0x14000d6f9
   14000d6ab:	cmp    DWORD PTR [rcx],0xc000008f
   14000d6b1:	jne    0x14000d6bf
   14000d6b3:	mov    DWORD PTR [rbx+0xb0],0x86
   14000d6bd:	jmp    0x14000d6f9
   14000d6bf:	cmp    DWORD PTR [rcx],0xc0000092
   14000d6c5:	jne    0x14000d6d3
   14000d6c7:	mov    DWORD PTR [rbx+0xb0],0x8a
   14000d6d1:	jmp    0x14000d6f9
   14000d6d3:	cmp    DWORD PTR [rcx],0xc00002b5
   14000d6d9:	jne    0x14000d6e7
   14000d6db:	mov    DWORD PTR [rbx+0xb0],0x8d
   14000d6e5:	jmp    0x14000d6f9
   14000d6e7:	cmp    DWORD PTR [rcx],0xc00002b4
   14000d6ed:	jne    0x14000d6f9
   14000d6ef:	mov    DWORD PTR [rbx+0xb0],0x8e
   14000d6f9:	mov    edx,DWORD PTR [rbx+0xb0]
   14000d6ff:	mov    ecx,0x8
   14000d704:	call   r8
   14000d707:	mov    DWORD PTR [rbx+0xb0],edi
   14000d70d:	jmp    0x14000d719
   14000d70f:	mov    QWORD PTR [rcx+0x8],r9
   14000d713:	mov    ecx,DWORD PTR [rcx+0x4]
   14000d716:	call   r8
   14000d719:	mov    QWORD PTR [rbx+0xa8],rbp
   14000d720:	jmp    0x14000d5fd
   14000d725:	xor    eax,eax
   14000d727:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d72c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d731:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d736:	add    rsp,0x20
   14000d73a:	pop    rdi
   14000d73b:	ret    
   14000d73c:	mov    eax,0xe06d7363
   14000d741:	cmp    ecx,eax
   14000d743:	jne    0x14000d74c
   14000d745:	mov    ecx,eax
   14000d747:	jmp    0x14000d570
   14000d74c:	xor    eax,eax
   14000d74e:	ret    
   14000d74f:	int3   
   14000d750:	mov    r9d,ecx
   14000d753:	mov    rax,rdx
   14000d756:	cmp    DWORD PTR [rax],ecx
   14000d758:	je     0x14000d76a
   14000d75a:	lea    r8,[rdx+0xc0]
   14000d761:	add    rax,0x10
   14000d765:	cmp    rax,r8
   14000d768:	jb     0x14000d756
   14000d76a:	lea    rcx,[rdx+0xc0]
   14000d771:	cmp    rax,rcx
   14000d774:	jae    0x14000d77b
   14000d776:	cmp    DWORD PTR [rax],r9d
   14000d779:	je     0x14000d77d
   14000d77b:	xor    eax,eax
   14000d77d:	ret    
   14000d77e:	int3   
   14000d77f:	int3   
   14000d780:	mov    rax,QWORD PTR [rip+0x30579]        # 0x14003dd00
   14000d787:	ret    
   14000d788:	sub    rsp,0x28
   14000d78c:	call   QWORD PTR [rip+0x1e86e]        # 0x14002c000
   14000d792:	xor    ecx,ecx
   14000d794:	test   rax,rax
   14000d797:	mov    QWORD PTR [rip+0x30562],rax        # 0x14003dd00
   14000d79e:	setne  cl
   14000d7a1:	mov    eax,ecx
   14000d7a3:	add    rsp,0x28
   14000d7a7:	ret    
   14000d7a8:	and    QWORD PTR [rip+0x30550],0x0        # 0x14003dd00
   14000d7b0:	ret    
   14000d7b1:	int3   
   14000d7b2:	int3   
   14000d7b3:	int3   
   14000d7b4:	mov    rax,rsp
   14000d7b7:	mov    QWORD PTR [rax+0x8],rbx
   14000d7bb:	mov    QWORD PTR [rax+0x10],rsi
   14000d7bf:	mov    QWORD PTR [rax+0x18],rdi
   14000d7c3:	mov    QWORD PTR [rax+0x20],r12
   14000d7c7:	push   r13
   14000d7c9:	push   r14
   14000d7cb:	push   r15
   14000d7cd:	sub    rsp,0xc0
   14000d7d4:	mov    QWORD PTR [rsp+0x48],rsp
   14000d7d9:	mov    ecx,0xb
   14000d7de:	call   0x14000fc2c
   14000d7e3:	nop
   14000d7e4:	mov    edi,0x58
   14000d7e9:	mov    edx,edi
   14000d7eb:	lea    r13d,[rdi-0x38]
   14000d7ef:	mov    ecx,r13d
   14000d7f2:	call   0x140008604
   14000d7f7:	mov    rcx,rax
   14000d7fa:	mov    QWORD PTR [rsp+0x28],rax
   14000d7ff:	xor    r12d,r12d
   14000d802:	test   rax,rax
   14000d805:	jne    0x14000d820
   14000d807:	lea    rdx,[rip+0xa]        # 0x14000d818
   14000d80e:	mov    rcx,rsp
   14000d811:	call   0x140010cd0
   14000d816:	nop
   14000d817:	nop
   14000d818:	or     eax,0xffffffff
   14000d81b:	jmp    0x14000dabf
   14000d820:	mov    QWORD PTR [rip+0x304e9],rax        # 0x14003dd10
   14000d827:	mov    DWORD PTR [rip+0x328ba],r13d        # 0x1400400e8
   14000d82e:	add    rax,0xb00
   14000d834:	cmp    rcx,rax
   14000d837:	jae    0x14000d872
   14000d839:	mov    WORD PTR [rcx+0x8],0xa00
   14000d83f:	or     QWORD PTR [rcx],0xffffffffffffffff
   14000d843:	mov    DWORD PTR [rcx+0xc],r12d
   14000d847:	and    BYTE PTR [rcx+0x38],0x80
   14000d84b:	mov    al,BYTE PTR [rcx+0x38]
   14000d84e:	and    al,0x7f
   14000d850:	mov    BYTE PTR [rcx+0x38],al
   14000d853:	mov    WORD PTR [rcx+0x39],0xa0a
   14000d859:	mov    DWORD PTR [rcx+0x50],r12d
   14000d85d:	mov    BYTE PTR [rcx+0x4c],r12b
   14000d861:	add    rcx,rdi
   14000d864:	mov    QWORD PTR [rsp+0x28],rcx
   14000d869:	mov    rax,QWORD PTR [rip+0x304a0]        # 0x14003dd10
   14000d870:	jmp    0x14000d82e
   14000d872:	lea    rcx,[rsp+0x50]
   14000d877:	call   QWORD PTR [rip+0x1e963]        # 0x14002c1e0
   14000d87d:	cmp    WORD PTR [rsp+0x92],r12w
   14000d886:	je     0x14000d9ce
   14000d88c:	mov    rax,QWORD PTR [rsp+0x98]
   14000d894:	test   rax,rax
   14000d897:	je     0x14000d9ce
   14000d89d:	lea    r14,[rax+0x4]
   14000d8a1:	mov    QWORD PTR [rsp+0x38],r14
   14000d8a6:	movsxd rsi,DWORD PTR [rax]
   14000d8a9:	add    rsi,r14
   14000d8ac:	mov    QWORD PTR [rsp+0x40],rsi
   14000d8b1:	mov    r15d,0x800
   14000d8b7:	cmp    DWORD PTR [rax],r15d
   14000d8ba:	cmovl  r15d,DWORD PTR [rax]
   14000d8be:	mov    ebx,0x1
   14000d8c3:	mov    DWORD PTR [rsp+0x30],ebx
   14000d8c7:	cmp    DWORD PTR [rip+0x3281a],r15d        # 0x1400400e8
   14000d8ce:	jge    0x14000d943
   14000d8d0:	mov    rdx,rdi
   14000d8d3:	mov    rcx,r13
   14000d8d6:	call   0x140008604
   14000d8db:	mov    rcx,rax
   14000d8de:	mov    QWORD PTR [rsp+0x28],rax
   14000d8e3:	test   rax,rax
   14000d8e6:	jne    0x14000d8f1
   14000d8e8:	mov    r15d,DWORD PTR [rip+0x327f9]        # 0x1400400e8
   14000d8ef:	jmp    0x14000d943
   14000d8f1:	movsxd rdx,ebx
   14000d8f4:	lea    r8,[rip+0x30415]        # 0x14003dd10
   14000d8fb:	mov    QWORD PTR [r8+rdx*8],rax
   14000d8ff:	add    DWORD PTR [rip+0x327e2],r13d        # 0x1400400e8
   14000d906:	mov    rax,QWORD PTR [r8+rdx*8]
   14000d90a:	add    rax,0xb00
   14000d910:	cmp    rcx,rax
   14000d913:	jae    0x14000d93f
   14000d915:	mov    WORD PTR [rcx+0x8],0xa00
   14000d91b:	or     QWORD PTR [rcx],0xffffffffffffffff
   14000d91f:	mov    DWORD PTR [rcx+0xc],r12d
   14000d923:	and    BYTE PTR [rcx+0x38],0x80
   14000d927:	mov    WORD PTR [rcx+0x39],0xa0a
   14000d92d:	mov    DWORD PTR [rcx+0x50],r12d
   14000d931:	mov    BYTE PTR [rcx+0x4c],r12b
   14000d935:	add    rcx,rdi
   14000d938:	mov    QWORD PTR [rsp+0x28],rcx
   14000d93d:	jmp    0x14000d906
   14000d93f:	inc    ebx
   14000d941:	jmp    0x14000d8c3
   14000d943:	mov    edi,r12d
   14000d946:	mov    DWORD PTR [rsp+0x20],r12d
   14000d94b:	lea    r13,[rip+0x303be]        # 0x14003dd10
   14000d952:	cmp    edi,r15d
   14000d955:	jge    0x14000d9ce
   14000d957:	mov    rcx,QWORD PTR [rsi]
   14000d95a:	lea    rax,[rcx+0x2]
   14000d95e:	cmp    rax,0x1
   14000d962:	jbe    0x14000d9b5
   14000d964:	test   BYTE PTR [r14],0x1
   14000d968:	je     0x14000d9b5
   14000d96a:	test   BYTE PTR [r14],0x8
   14000d96e:	jne    0x14000d97a
   14000d970:	call   QWORD PTR [rip+0x1e85a]        # 0x14002c1d0
   14000d976:	test   eax,eax
   14000d978:	je     0x14000d9b5
   14000d97a:	movsxd rcx,edi
   14000d97d:	mov    rax,rcx
   14000d980:	sar    rax,0x5
   14000d984:	and    ecx,0x1f
   14000d987:	imul   rbx,rcx,0x58
   14000d98b:	add    rbx,QWORD PTR [r13+rax*8+0x0]
   14000d990:	mov    QWORD PTR [rsp+0x28],rbx
   14000d995:	mov    rax,QWORD PTR [rsi]
   14000d998:	mov    QWORD PTR [rbx],rax
   14000d99b:	mov    al,BYTE PTR [r14]
   14000d99e:	mov    BYTE PTR [rbx+0x8],al
   14000d9a1:	lea    rcx,[rbx+0x10]
   14000d9a5:	xor    r8d,r8d
   14000d9a8:	mov    edx,0xfa0
   14000d9ad:	call   0x14000e7fc
   14000d9b2:	inc    DWORD PTR [rbx+0xc]
   14000d9b5:	inc    edi
   14000d9b7:	mov    DWORD PTR [rsp+0x20],edi
   14000d9bb:	inc    r14
   14000d9be:	mov    QWORD PTR [rsp+0x38],r14
   14000d9c3:	add    rsi,0x8
   14000d9c7:	mov    QWORD PTR [rsp+0x40],rsi
   14000d9cc:	jmp    0x14000d952
   14000d9ce:	mov    edi,r12d
   14000d9d1:	mov    DWORD PTR [rsp+0x20],r12d
   14000d9d6:	mov    r15,0xfffffffffffffffe
   14000d9dd:	cmp    edi,0x3
   14000d9e0:	jge    0x14000dab3
   14000d9e6:	movsxd rsi,edi
   14000d9e9:	imul   rbx,rsi,0x58
   14000d9ed:	add    rbx,QWORD PTR [rip+0x3031c]        # 0x14003dd10
   14000d9f4:	mov    QWORD PTR [rsp+0x28],rbx
   14000d9f9:	mov    rax,QWORD PTR [rbx]
   14000d9fc:	add    rax,0x2
   14000da00:	cmp    rax,0x1
   14000da04:	jbe    0x14000da16
   14000da06:	movsx  eax,BYTE PTR [rbx+0x8]
   14000da0a:	bts    eax,0x7
   14000da0e:	mov    BYTE PTR [rbx+0x8],al
   14000da11:	jmp    0x14000daa8
   14000da16:	mov    BYTE PTR [rbx+0x8],0x81
   14000da1a:	lea    eax,[rdi-0x1]
   14000da1d:	neg    eax
   14000da1f:	sbb    ecx,ecx
   14000da21:	add    ecx,0xfffffff5
   14000da24:	mov    eax,0xfffffff6
   14000da29:	test   edi,edi
   14000da2b:	cmove  ecx,eax
   14000da2e:	call   QWORD PTR [rip+0x1e794]        # 0x14002c1c8
   14000da34:	mov    r14,rax
   14000da37:	lea    rcx,[rax+0x1]
   14000da3b:	cmp    rcx,0x1
   14000da3f:	jbe    0x14000da87
   14000da41:	mov    rcx,rax
   14000da44:	call   QWORD PTR [rip+0x1e786]        # 0x14002c1d0
   14000da4a:	test   eax,eax
   14000da4c:	je     0x14000da87
   14000da4e:	mov    QWORD PTR [rbx],r14
   14000da51:	movzx  eax,al
   14000da54:	cmp    eax,0x2
   14000da57:	jne    0x14000da62
   14000da59:	movsx  eax,BYTE PTR [rbx+0x8]
   14000da5d:	or     eax,0x40
   14000da60:	jmp    0x14000da6e
   14000da62:	cmp    eax,0x3
   14000da65:	jne    0x14000da71
   14000da67:	movsx  eax,BYTE PTR [rbx+0x8]
   14000da6b:	or     eax,0x8
   14000da6e:	mov    BYTE PTR [rbx+0x8],al
   14000da71:	lea    rcx,[rbx+0x10]
   14000da75:	xor    r8d,r8d
   14000da78:	mov    edx,0xfa0
   14000da7d:	call   0x14000e7fc
   14000da82:	inc    DWORD PTR [rbx+0xc]
   14000da85:	jmp    0x14000daa8
   14000da87:	movsx  eax,BYTE PTR [rbx+0x8]
   14000da8b:	or     eax,0x40
   14000da8e:	mov    BYTE PTR [rbx+0x8],al
   14000da91:	mov    QWORD PTR [rbx],r15
   14000da94:	mov    rax,QWORD PTR [rip+0x314fd]        # 0x14003ef98
   14000da9b:	test   rax,rax
   14000da9e:	je     0x14000daa8
   14000daa0:	mov    rax,QWORD PTR [rax+rsi*8]
   14000daa4:	mov    DWORD PTR [rax+0x1c],r15d
   14000daa8:	inc    edi
   14000daaa:	mov    DWORD PTR [rsp+0x20],edi
   14000daae:	jmp    0x14000d9dd
   14000dab3:	mov    ecx,0xb
   14000dab8:	call   0x14000fe48
   14000dabd:	xor    eax,eax
   14000dabf:	lea    r11,[rsp+0xc0]
   14000dac7:	mov    rbx,QWORD PTR [r11+0x20]
   14000dacb:	mov    rsi,QWORD PTR [r11+0x28]
   14000dacf:	mov    rdi,QWORD PTR [r11+0x30]
   14000dad3:	mov    r12,QWORD PTR [r11+0x38]
   14000dad7:	mov    rsp,r11
   14000dada:	pop    r15
   14000dadc:	pop    r14
   14000dade:	pop    r13
   14000dae0:	ret    
   14000dae1:	int3   
   14000dae2:	int3   
   14000dae3:	int3   
   14000dae4:	mov    QWORD PTR [rsp+0x8],rbx
   14000dae9:	mov    QWORD PTR [rsp+0x10],rsi
   14000daee:	push   rdi
   14000daef:	sub    rsp,0x20
   14000daf3:	lea    rdi,[rip+0x30216]        # 0x14003dd10
   14000dafa:	mov    esi,0x40
   14000daff:	mov    rbx,QWORD PTR [rdi]
   14000db02:	test   rbx,rbx
   14000db05:	je     0x14000db3e
   14000db07:	lea    rax,[rbx+0xb00]
   14000db0e:	jmp    0x14000db2d
   14000db10:	cmp    DWORD PTR [rbx+0xc],0x0
   14000db14:	je     0x14000db20
   14000db16:	lea    rcx,[rbx+0x10]
   14000db1a:	call   QWORD PTR [rip+0x1e6b8]        # 0x14002c1d8
   14000db20:	mov    rax,QWORD PTR [rdi]
   14000db23:	add    rbx,0x58
   14000db27:	add    rax,0xb00
   14000db2d:	cmp    rbx,rax
   14000db30:	jb     0x14000db10
   14000db32:	mov    rcx,QWORD PTR [rdi]
   14000db35:	call   0x140007dc0
   14000db3a:	and    QWORD PTR [rdi],0x0
   14000db3e:	add    rdi,0x8
   14000db42:	dec    rsi
   14000db45:	jne    0x14000daff
   14000db47:	mov    rbx,QWORD PTR [rsp+0x30]
   14000db4c:	mov    rsi,QWORD PTR [rsp+0x38]
   14000db51:	add    rsp,0x20
   14000db55:	pop    rdi
   14000db56:	ret    
   14000db57:	int3   
   14000db58:	mov    QWORD PTR [rip+0x30141],rcx        # 0x14003dca0
   14000db5f:	ret    
   14000db60:	mov    QWORD PTR [rsp+0x18],rbx
   14000db65:	mov    QWORD PTR [rsp+0x20],rsi
   14000db6a:	push   rdi
   14000db6b:	sub    rsp,0x30
   14000db6f:	cmp    DWORD PTR [rip+0x32592],0x0        # 0x140040108
   14000db76:	jne    0x14000db7d
   14000db78:	call   0x140010074
   14000db7d:	lea    rdi,[rip+0x3038c]        # 0x14003df10
   14000db84:	mov    r8d,0x104
   14000db8a:	xor    ecx,ecx
   14000db8c:	mov    rdx,rdi
   14000db8f:	mov    BYTE PTR [rip+0x3047e],0x0        # 0x14003e014
   14000db96:	call   QWORD PTR [rip+0x1e64c]        # 0x14002c1e8
   14000db9c:	mov    rbx,QWORD PTR [rip+0x3256d]        # 0x140040110
   14000dba3:	mov    QWORD PTR [rip+0x300f6],rdi        # 0x14003dca0
   14000dbaa:	test   rbx,rbx
   14000dbad:	je     0x14000dbb4
   14000dbaf:	cmp    BYTE PTR [rbx],0x0
   14000dbb2:	jne    0x14000dbb7
   14000dbb4:	mov    rbx,rdi
   14000dbb7:	lea    rax,[rsp+0x48]
   14000dbbc:	lea    r9,[rsp+0x40]
   14000dbc1:	xor    r8d,r8d
   14000dbc4:	xor    edx,edx
   14000dbc6:	mov    rcx,rbx
   14000dbc9:	mov    QWORD PTR [rsp+0x20],rax
   14000dbce:	call   0x14000dc54
   14000dbd3:	movsxd rsi,DWORD PTR [rsp+0x40]
   14000dbd8:	movabs rcx,0x1fffffffffffffff
   14000dbe2:	cmp    rsi,rcx
   14000dbe5:	jae    0x14000dc40
   14000dbe7:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000dbec:	cmp    rcx,0xffffffffffffffff
   14000dbf0:	jae    0x14000dc40
   14000dbf2:	lea    rdx,[rcx+rsi*8]
   14000dbf6:	cmp    rdx,rcx
   14000dbf9:	jb     0x14000dc40
   14000dbfb:	mov    rcx,rdx
   14000dbfe:	call   0x140008684
   14000dc03:	mov    rdi,rax
   14000dc06:	test   rax,rax
   14000dc09:	je     0x14000dc40
   14000dc0b:	lea    r8,[rax+rsi*8]
   14000dc0f:	lea    rax,[rsp+0x48]
   14000dc14:	lea    r9,[rsp+0x40]
   14000dc19:	mov    rdx,rdi
   14000dc1c:	mov    rcx,rbx
   14000dc1f:	mov    QWORD PTR [rsp+0x20],rax
   14000dc24:	call   0x14000dc54
   14000dc29:	mov    eax,DWORD PTR [rsp+0x40]
   14000dc2d:	mov    QWORD PTR [rip+0x3004c],rdi        # 0x14003dc80
   14000dc34:	dec    eax
   14000dc36:	mov    DWORD PTR [rip+0x30040],eax        # 0x14003dc7c
   14000dc3c:	xor    eax,eax
   14000dc3e:	jmp    0x14000dc43
   14000dc40:	or     eax,0xffffffff
   14000dc43:	mov    rbx,QWORD PTR [rsp+0x50]
   14000dc48:	mov    rsi,QWORD PTR [rsp+0x58]
   14000dc4d:	add    rsp,0x30
   14000dc51:	pop    rdi
   14000dc52:	ret    
   14000dc53:	int3   
   14000dc54:	mov    rax,rsp
   14000dc57:	mov    QWORD PTR [rax+0x8],rbx
   14000dc5b:	mov    QWORD PTR [rax+0x10],rbp
   14000dc5f:	mov    QWORD PTR [rax+0x18],rsi
   14000dc63:	mov    QWORD PTR [rax+0x20],rdi
   14000dc67:	push   r12
   14000dc69:	push   r14
   14000dc6b:	push   r15
   14000dc6d:	sub    rsp,0x20
   14000dc71:	mov    r14,QWORD PTR [rsp+0x60]
   14000dc76:	mov    r12,r9
   14000dc79:	mov    rdi,r8
   14000dc7c:	and    DWORD PTR [r14],0x0
   14000dc80:	mov    r15,rdx
   14000dc83:	mov    rbx,rcx
   14000dc86:	mov    DWORD PTR [r9],0x1
   14000dc8d:	test   rdx,rdx
   14000dc90:	je     0x14000dc99
   14000dc92:	mov    QWORD PTR [rdx],r8
   14000dc95:	add    r15,0x8
   14000dc99:	xor    ebp,ebp
   14000dc9b:	cmp    BYTE PTR [rbx],0x22
   14000dc9e:	jne    0x14000dcb1
   14000dca0:	xor    eax,eax
   14000dca2:	test   ebp,ebp
   14000dca4:	mov    sil,0x22
   14000dca7:	sete   al
   14000dcaa:	inc    rbx
   14000dcad:	mov    ebp,eax
   14000dcaf:	jmp    0x14000dce8
   14000dcb1:	inc    DWORD PTR [r14]
   14000dcb4:	test   rdi,rdi
   14000dcb7:	je     0x14000dcc0
   14000dcb9:	mov    al,BYTE PTR [rbx]
   14000dcbb:	mov    BYTE PTR [rdi],al
   14000dcbd:	inc    rdi
   14000dcc0:	movzx  esi,BYTE PTR [rbx]
   14000dcc3:	inc    rbx
   14000dcc6:	mov    ecx,esi
   14000dcc8:	call   0x14001c300
   14000dccd:	test   eax,eax
   14000dccf:	je     0x14000dce3
   14000dcd1:	inc    DWORD PTR [r14]
   14000dcd4:	test   rdi,rdi
   14000dcd7:	je     0x14000dce0
   14000dcd9:	mov    al,BYTE PTR [rbx]
   14000dcdb:	mov    BYTE PTR [rdi],al
   14000dcdd:	inc    rdi
   14000dce0:	inc    rbx
   14000dce3:	test   sil,sil
   14000dce6:	je     0x14000dd03
   14000dce8:	test   ebp,ebp
   14000dcea:	jne    0x14000dc9b
   14000dcec:	cmp    sil,0x20
   14000dcf0:	je     0x14000dcf8
   14000dcf2:	cmp    sil,0x9
   14000dcf6:	jne    0x14000dc9b
   14000dcf8:	test   rdi,rdi
   14000dcfb:	je     0x14000dd06
   14000dcfd:	mov    BYTE PTR [rdi-0x1],0x0
   14000dd01:	jmp    0x14000dd06
   14000dd03:	dec    rbx
   14000dd06:	xor    esi,esi
   14000dd08:	cmp    BYTE PTR [rbx],0x0
   14000dd0b:	je     0x14000ddef
   14000dd11:	cmp    BYTE PTR [rbx],0x20
   14000dd14:	je     0x14000dd1b
   14000dd16:	cmp    BYTE PTR [rbx],0x9
   14000dd19:	jne    0x14000dd20
   14000dd1b:	inc    rbx
   14000dd1e:	jmp    0x14000dd11
   14000dd20:	cmp    BYTE PTR [rbx],0x0
   14000dd23:	je     0x14000ddef
   14000dd29:	test   r15,r15
   14000dd2c:	je     0x14000dd35
   14000dd2e:	mov    QWORD PTR [r15],rdi
   14000dd31:	add    r15,0x8
   14000dd35:	inc    DWORD PTR [r12]
   14000dd39:	mov    edx,0x1
   14000dd3e:	xor    ecx,ecx
   14000dd40:	jmp    0x14000dd47
   14000dd42:	inc    rbx
   14000dd45:	inc    ecx
   14000dd47:	cmp    BYTE PTR [rbx],0x5c
   14000dd4a:	je     0x14000dd42
   14000dd4c:	cmp    BYTE PTR [rbx],0x22
   14000dd4f:	jne    0x14000dd86
   14000dd51:	test   dl,cl
   14000dd53:	jne    0x14000dd72
   14000dd55:	test   esi,esi
   14000dd57:	je     0x14000dd67
   14000dd59:	lea    rax,[rbx+0x1]
   14000dd5d:	cmp    BYTE PTR [rax],0x22
   14000dd60:	jne    0x14000dd67
   14000dd62:	mov    rbx,rax
   14000dd65:	jmp    0x14000dd72
   14000dd67:	xor    eax,eax
   14000dd69:	xor    edx,edx
   14000dd6b:	test   esi,esi
   14000dd6d:	sete   al
   14000dd70:	mov    esi,eax
   14000dd72:	shr    ecx,1
   14000dd74:	jmp    0x14000dd86
   14000dd76:	dec    ecx
   14000dd78:	test   rdi,rdi
   14000dd7b:	je     0x14000dd83
   14000dd7d:	mov    BYTE PTR [rdi],0x5c
   14000dd80:	inc    rdi
   14000dd83:	inc    DWORD PTR [r14]
   14000dd86:	test   ecx,ecx
   14000dd88:	jne    0x14000dd76
   14000dd8a:	mov    al,BYTE PTR [rbx]
   14000dd8c:	test   al,al
   14000dd8e:	je     0x14000dddc
   14000dd90:	test   esi,esi
   14000dd92:	jne    0x14000dd9c
   14000dd94:	cmp    al,0x20
   14000dd96:	je     0x14000dddc
   14000dd98:	cmp    al,0x9
   14000dd9a:	je     0x14000dddc
   14000dd9c:	test   edx,edx
   14000dd9e:	je     0x14000ddd4
   14000dda0:	movsx  ecx,al
   14000dda3:	call   0x14001c300
   14000dda8:	test   rdi,rdi
   14000ddab:	je     0x14000ddc7
   14000ddad:	test   eax,eax
   14000ddaf:	je     0x14000ddbe
   14000ddb1:	mov    al,BYTE PTR [rbx]
   14000ddb3:	inc    rbx
   14000ddb6:	mov    BYTE PTR [rdi],al
   14000ddb8:	inc    rdi
   14000ddbb:	inc    DWORD PTR [r14]
   14000ddbe:	mov    al,BYTE PTR [rbx]
   14000ddc0:	mov    BYTE PTR [rdi],al
   14000ddc2:	inc    rdi
   14000ddc5:	jmp    0x14000ddd1
   14000ddc7:	test   eax,eax
   14000ddc9:	je     0x14000ddd1
   14000ddcb:	inc    rbx
   14000ddce:	inc    DWORD PTR [r14]
   14000ddd1:	inc    DWORD PTR [r14]
   14000ddd4:	inc    rbx
   14000ddd7:	jmp    0x14000dd39
   14000dddc:	test   rdi,rdi
   14000dddf:	je     0x14000dde7
   14000dde1:	mov    BYTE PTR [rdi],0x0
   14000dde4:	inc    rdi
   14000dde7:	inc    DWORD PTR [r14]
   14000ddea:	jmp    0x14000dd08
   14000ddef:	test   r15,r15
   14000ddf2:	je     0x14000ddf8
   14000ddf4:	and    QWORD PTR [r15],0x0
   14000ddf8:	inc    DWORD PTR [r12]
   14000ddfc:	mov    rbx,QWORD PTR [rsp+0x40]
   14000de01:	mov    rbp,QWORD PTR [rsp+0x48]
   14000de06:	mov    rsi,QWORD PTR [rsp+0x50]
   14000de0b:	mov    rdi,QWORD PTR [rsp+0x58]
   14000de10:	add    rsp,0x20
   14000de14:	pop    r15
   14000de16:	pop    r14
   14000de18:	pop    r12
   14000de1a:	ret    
   14000de1b:	int3   
   14000de1c:	mov    QWORD PTR [rsp+0x8],rbx
   14000de21:	mov    QWORD PTR [rsp+0x10],rbp
   14000de26:	mov    QWORD PTR [rsp+0x18],rsi
   14000de2b:	push   rdi
   14000de2c:	sub    rsp,0x30
   14000de30:	cmp    DWORD PTR [rip+0x322d1],0x0        # 0x140040108
   14000de37:	jne    0x14000de3e
   14000de39:	call   0x140010074
   14000de3e:	mov    rbx,QWORD PTR [rip+0x2fe13]        # 0x14003dc58
   14000de45:	xor    edi,edi
   14000de47:	test   rbx,rbx
   14000de4a:	jne    0x14000de68
   14000de4c:	or     eax,0xffffffff
   14000de4f:	jmp    0x14000df09
   14000de54:	cmp    al,0x3d
   14000de56:	je     0x14000de5a
   14000de58:	inc    edi
   14000de5a:	mov    rcx,rbx
   14000de5d:	call   0x140007550
   14000de62:	inc    rbx
   14000de65:	add    rbx,rax
   14000de68:	mov    al,BYTE PTR [rbx]
   14000de6a:	test   al,al
   14000de6c:	jne    0x14000de54
   14000de6e:	lea    eax,[rdi+0x1]
   14000de71:	mov    edx,0x8
   14000de76:	movsxd rcx,eax
   14000de79:	call   0x140008604
   14000de7e:	mov    rdi,rax
   14000de81:	mov    QWORD PTR [rip+0x2fe08],rax        # 0x14003dc90
   14000de88:	test   rax,rax
   14000de8b:	je     0x14000de4c
   14000de8d:	mov    rbx,QWORD PTR [rip+0x2fdc4]        # 0x14003dc58
   14000de94:	cmp    BYTE PTR [rbx],0x0
   14000de97:	je     0x14000dee9
   14000de99:	mov    rcx,rbx
   14000de9c:	call   0x140007550
   14000dea1:	cmp    BYTE PTR [rbx],0x3d
   14000dea4:	lea    esi,[rax+0x1]
   14000dea7:	je     0x14000ded7
   14000dea9:	movsxd rbp,esi
   14000deac:	mov    edx,0x1
   14000deb1:	mov    rcx,rbp
   14000deb4:	call   0x140008604
   14000deb9:	mov    QWORD PTR [rdi],rax
   14000debc:	test   rax,rax
   14000debf:	je     0x14000df1e
   14000dec1:	mov    r8,rbx
   14000dec4:	mov    rdx,rbp
   14000dec7:	mov    rcx,rax
   14000deca:	call   0x14000edd8
   14000decf:	test   eax,eax
   14000ded1:	jne    0x14000df37
   14000ded3:	add    rdi,0x8
   14000ded7:	movsxd rax,esi
   14000deda:	add    rbx,rax
   14000dedd:	cmp    BYTE PTR [rbx],0x0
   14000dee0:	jne    0x14000de99
   14000dee2:	mov    rbx,QWORD PTR [rip+0x2fd6f]        # 0x14003dc58
   14000dee9:	mov    rcx,rbx
   14000deec:	call   0x140007dc0
   14000def1:	and    QWORD PTR [rip+0x2fd5f],0x0        # 0x14003dc58
   14000def9:	and    QWORD PTR [rdi],0x0
   14000defd:	mov    DWORD PTR [rip+0x32205],0x1        # 0x14004010c
   14000df07:	xor    eax,eax
   14000df09:	mov    rbx,QWORD PTR [rsp+0x40]
   14000df0e:	mov    rbp,QWORD PTR [rsp+0x48]
   14000df13:	mov    rsi,QWORD PTR [rsp+0x50]
   14000df18:	add    rsp,0x30
   14000df1c:	pop    rdi
   14000df1d:	ret    
   14000df1e:	mov    rcx,QWORD PTR [rip+0x2fd6b]        # 0x14003dc90
   14000df25:	call   0x140007dc0
   14000df2a:	and    QWORD PTR [rip+0x2fd5e],0x0        # 0x14003dc90
   14000df32:	jmp    0x14000de4c
   14000df37:	and    QWORD PTR [rsp+0x20],0x0
   14000df3d:	xor    r9d,r9d
   14000df40:	xor    r8d,r8d
   14000df43:	xor    edx,edx
   14000df45:	xor    ecx,ecx
   14000df47:	call   0x140008da8
   14000df4c:	int3   
   14000df4d:	int3   
   14000df4e:	int3   
   14000df4f:	int3   
   14000df50:	sub    rsp,0x28
   14000df54:	mov    ecx,0x3
   14000df59:	call   0x14000e23c
   14000df5e:	cmp    eax,0x1
   14000df61:	je     0x14000df7a
   14000df63:	mov    ecx,0x3
   14000df68:	call   0x14000e23c
   14000df6d:	test   eax,eax
   14000df6f:	jne    0x14000df8e
   14000df71:	cmp    DWORD PTR [rip+0x300a8],0x1        # 0x14003e020
   14000df78:	jne    0x14000df8e
   14000df7a:	mov    ecx,0xfc
   14000df7f:	call   0x14000dfc4
   14000df84:	mov    ecx,0xff
   14000df89:	call   0x14000dfc4
   14000df8e:	add    rsp,0x28
   14000df92:	ret    
   14000df93:	int3   
   14000df94:	lea    r9,[rip+0x20c55]        # 0x14002ebf0
   14000df9b:	xor    edx,edx
   14000df9d:	mov    r8,r9
   14000dfa0:	cmp    ecx,DWORD PTR [r8]
   14000dfa3:	je     0x14000dfb7
   14000dfa5:	inc    edx
   14000dfa7:	add    r8,0x10
   14000dfab:	movsxd rax,edx
   14000dfae:	cmp    rax,0x17
   14000dfb2:	jb     0x14000dfa0
   14000dfb4:	xor    eax,eax
   14000dfb6:	ret    
   14000dfb7:	movsxd rax,edx
   14000dfba:	add    rax,rax
   14000dfbd:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   14000dfc2:	ret    
   14000dfc3:	int3   
   14000dfc4:	mov    QWORD PTR [rsp+0x10],rbx
   14000dfc9:	mov    QWORD PTR [rsp+0x18],rbp
   14000dfce:	mov    QWORD PTR [rsp+0x20],rsi
   14000dfd3:	push   rdi
   14000dfd4:	push   r14
   14000dfd6:	push   r15
   14000dfd8:	sub    rsp,0x250
   14000dfdf:	mov    rax,QWORD PTR [rip+0x2e1ea]        # 0x14003c1d0
   14000dfe6:	xor    rax,rsp
   14000dfe9:	mov    QWORD PTR [rsp+0x240],rax
   14000dff1:	mov    edi,ecx
   14000dff3:	call   0x14000df94
   14000dff8:	xor    esi,esi
   14000dffa:	mov    rbx,rax
   14000dffd:	test   rax,rax
   14000e000:	je     0x14000e19f
   14000e006:	lea    ecx,[rsi+0x3]
   14000e009:	call   0x14000e23c
   14000e00e:	cmp    eax,0x1
   14000e011:	je     0x14000e134
   14000e017:	lea    ecx,[rsi+0x3]
   14000e01a:	call   0x14000e23c
   14000e01f:	test   eax,eax
   14000e021:	jne    0x14000e030
   14000e023:	cmp    DWORD PTR [rip+0x2fff6],0x1        # 0x14003e020
   14000e02a:	je     0x14000e134
   14000e030:	cmp    edi,0xfc
   14000e036:	je     0x14000e19f
   14000e03c:	lea    rbp,[rip+0x2ffed]        # 0x14003e030
   14000e043:	mov    r15d,0x314
   14000e049:	lea    r8,[rip+0x21640]        # 0x14002f690
   14000e050:	mov    rcx,rbp
   14000e053:	mov    edx,r15d
   14000e056:	call   0x14001c440
   14000e05b:	xor    ecx,ecx
   14000e05d:	test   eax,eax
   14000e05f:	jne    0x14000e220
   14000e065:	lea    r14,[rip+0x2fff6]        # 0x14003e062
   14000e06c:	mov    r8d,0x104
   14000e072:	mov    WORD PTR [rip+0x301f1],si        # 0x14003e26a
   14000e079:	mov    rdx,r14
   14000e07c:	call   QWORD PTR [rip+0x1e176]        # 0x14002c1f8
   14000e082:	lea    edi,[r15-0x19]
   14000e086:	test   eax,eax
   14000e088:	jne    0x14000e0a3
   14000e08a:	lea    r8,[rip+0x21637]        # 0x14002f6c8
   14000e091:	mov    edx,edi
   14000e093:	mov    rcx,r14
   14000e096:	call   0x14001c440
   14000e09b:	test   eax,eax
   14000e09d:	jne    0x14000e1cc
   14000e0a3:	mov    rcx,r14
   14000e0a6:	call   0x14001c4ac
   14000e0ab:	inc    rax
   14000e0ae:	cmp    rax,0x3c
   14000e0b2:	jbe    0x14000e0ed
   14000e0b4:	mov    rcx,r14
   14000e0b7:	call   0x14001c4ac
   14000e0bc:	lea    rcx,[rbp-0x44]
   14000e0c0:	lea    r8,[rip+0x21631]        # 0x14002f6f8
   14000e0c7:	lea    rcx,[rcx+rax*2]
   14000e0cb:	mov    r9d,0x3
   14000e0d1:	mov    rax,rcx
   14000e0d4:	sub    rax,r14
   14000e0d7:	sar    rax,1
   14000e0da:	sub    rdi,rax
   14000e0dd:	mov    rdx,rdi
   14000e0e0:	call   0x14001c4c8
   14000e0e5:	test   eax,eax
   14000e0e7:	jne    0x14000e1e1
   14000e0ed:	lea    r8,[rip+0x2160c]        # 0x14002f700
   14000e0f4:	mov    rdx,r15
   14000e0f7:	mov    rcx,rbp
   14000e0fa:	call   0x14001c3b8
   14000e0ff:	test   eax,eax
   14000e101:	jne    0x14000e20b
   14000e107:	mov    r8,rbx
   14000e10a:	mov    rdx,r15
   14000e10d:	mov    rcx,rbp
   14000e110:	call   0x14001c3b8
   14000e115:	test   eax,eax
   14000e117:	jne    0x14000e1f6
   14000e11d:	lea    rdx,[rip+0x215ec]        # 0x14002f710
   14000e124:	mov    r8d,0x12010
   14000e12a:	mov    rcx,rbp
   14000e12d:	call   0x14001c594
   14000e132:	jmp    0x14000e19f
   14000e134:	mov    ecx,0xfffffff4
   14000e139:	call   QWORD PTR [rip+0x1e089]        # 0x14002c1c8
   14000e13f:	mov    rdi,rax
   14000e142:	lea    rcx,[rax-0x1]
   14000e146:	cmp    rcx,0xfffffffffffffffd
   14000e14a:	ja     0x14000e19f
   14000e14c:	mov    r8d,esi
   14000e14f:	lea    rdx,[rsp+0x40]
   14000e154:	mov    cl,BYTE PTR [rbx]
   14000e156:	mov    BYTE PTR [rdx],cl
   14000e158:	cmp    WORD PTR [rbx],si
   14000e15b:	je     0x14000e172
   14000e15d:	inc    r8d
   14000e160:	inc    rdx
   14000e163:	add    rbx,0x2
   14000e167:	movsxd rax,r8d
   14000e16a:	cmp    rax,0x1f4
   14000e170:	jb     0x14000e154
   14000e172:	lea    rcx,[rsp+0x40]
   14000e177:	mov    BYTE PTR [rsp+0x233],sil
   14000e17f:	call   0x140007550
   14000e184:	lea    r9,[rsp+0x30]
   14000e189:	lea    rdx,[rsp+0x40]
   14000e18e:	mov    rcx,rdi
   14000e191:	mov    r8,rax
   14000e194:	mov    QWORD PTR [rsp+0x20],rsi
   14000e199:	call   QWORD PTR [rip+0x1e051]        # 0x14002c1f0
   14000e19f:	mov    rcx,QWORD PTR [rsp+0x240]
   14000e1a7:	xor    rcx,rsp
   14000e1aa:	call   0x14000c380
   14000e1af:	lea    r11,[rsp+0x250]
   14000e1b7:	mov    rbx,QWORD PTR [r11+0x28]
   14000e1bb:	mov    rbp,QWORD PTR [r11+0x30]
   14000e1bf:	mov    rsi,QWORD PTR [r11+0x38]
   14000e1c3:	mov    rsp,r11
   14000e1c6:	pop    r15
   14000e1c8:	pop    r14
   14000e1ca:	pop    rdi
   14000e1cb:	ret    
   14000e1cc:	xor    r9d,r9d
   14000e1cf:	xor    r8d,r8d
   14000e1d2:	xor    edx,edx
   14000e1d4:	xor    ecx,ecx
   14000e1d6:	mov    QWORD PTR [rsp+0x20],rsi
   14000e1db:	call   0x140008da8
   14000e1e0:	int3   
   14000e1e1:	xor    r9d,r9d
   14000e1e4:	xor    r8d,r8d
   14000e1e7:	xor    edx,edx
   14000e1e9:	xor    ecx,ecx
   14000e1eb:	mov    QWORD PTR [rsp+0x20],rsi
   14000e1f0:	call   0x140008da8
   14000e1f5:	int3   
   14000e1f6:	xor    r9d,r9d
   14000e1f9:	xor    r8d,r8d
   14000e1fc:	xor    edx,edx
   14000e1fe:	xor    ecx,ecx
   14000e200:	mov    QWORD PTR [rsp+0x20],rsi
   14000e205:	call   0x140008da8
   14000e20a:	int3   
   14000e20b:	xor    r9d,r9d
   14000e20e:	xor    r8d,r8d
   14000e211:	xor    edx,edx
   14000e213:	xor    ecx,ecx
   14000e215:	mov    QWORD PTR [rsp+0x20],rsi
   14000e21a:	call   0x140008da8
   14000e21f:	int3   
   14000e220:	xor    r9d,r9d
   14000e223:	xor    r8d,r8d
   14000e226:	xor    edx,edx
   14000e228:	mov    QWORD PTR [rsp+0x20],rsi
   14000e22d:	call   0x140008da8
   14000e232:	int3   
   14000e233:	int3   
   14000e234:	mov    DWORD PTR [rip+0x2fde6],ecx        # 0x14003e020
   14000e23a:	ret    
   14000e23b:	int3   
   14000e23c:	sub    rsp,0x28
   14000e240:	test   ecx,ecx
   14000e242:	js     0x14000e264
   14000e244:	cmp    ecx,0x2
   14000e247:	jle    0x14000e256
   14000e249:	cmp    ecx,0x3
   14000e24c:	jne    0x14000e264
   14000e24e:	mov    eax,DWORD PTR [rip+0x30404]        # 0x14003e658
   14000e254:	jmp    0x14000e277
   14000e256:	mov    eax,DWORD PTR [rip+0x303fc]        # 0x14003e658
   14000e25c:	mov    DWORD PTR [rip+0x303f6],ecx        # 0x14003e658
   14000e262:	jmp    0x14000e277
   14000e264:	call   0x140009cb4
   14000e269:	mov    DWORD PTR [rax],0x16
   14000e26f:	call   0x140008d58
   14000e274:	or     eax,0xffffffff
   14000e277:	add    rsp,0x28
   14000e27b:	ret    
   14000e27c:	mov    QWORD PTR [rsp+0x20],rbx
   14000e281:	push   rbp
   14000e282:	mov    rbp,rsp
   14000e285:	sub    rsp,0x20
   14000e289:	mov    rax,QWORD PTR [rip+0x2df40]        # 0x14003c1d0
   14000e290:	and    QWORD PTR [rbp+0x18],0x0
   14000e295:	movabs rbx,0x2b992ddfa232
   14000e29f:	cmp    rax,rbx
   14000e2a2:	jne    0x14000e313
   14000e2a4:	lea    rcx,[rbp+0x18]
   14000e2a8:	call   QWORD PTR [rip+0x1df62]        # 0x14002c210
   14000e2ae:	mov    rax,QWORD PTR [rbp+0x18]
   14000e2b2:	mov    QWORD PTR [rbp+0x10],rax
   14000e2b6:	call   QWORD PTR [rip+0x1defc]        # 0x14002c1b8
   14000e2bc:	mov    eax,eax
   14000e2be:	xor    QWORD PTR [rbp+0x10],rax
   14000e2c2:	call   QWORD PTR [rip+0x1df40]        # 0x14002c208
   14000e2c8:	lea    rcx,[rbp+0x20]
   14000e2cc:	mov    eax,eax
   14000e2ce:	xor    QWORD PTR [rbp+0x10],rax
   14000e2d2:	call   QWORD PTR [rip+0x1df28]        # 0x14002c200
   14000e2d8:	mov    eax,DWORD PTR [rbp+0x20]
   14000e2db:	shl    rax,0x20
   14000e2df:	lea    rcx,[rbp+0x10]
   14000e2e3:	xor    rax,QWORD PTR [rbp+0x20]
   14000e2e7:	xor    rax,QWORD PTR [rbp+0x10]
   14000e2eb:	xor    rax,rcx
   14000e2ee:	movabs rcx,0xffffffffffff
   14000e2f8:	and    rax,rcx
   14000e2fb:	movabs rcx,0x2b992ddfa233
   14000e305:	cmp    rax,rbx
   14000e308:	cmove  rax,rcx
   14000e30c:	mov    QWORD PTR [rip+0x2debd],rax        # 0x14003c1d0
   14000e313:	mov    rbx,QWORD PTR [rsp+0x48]
   14000e318:	not    rax
   14000e31b:	mov    QWORD PTR [rip+0x2deb6],rax        # 0x14003c1d8
   14000e322:	add    rsp,0x20
   14000e326:	pop    rbp
   14000e327:	ret    
   14000e328:	mov    QWORD PTR [rsp+0x8],rbx
   14000e32d:	push   rdi
   14000e32e:	sub    rsp,0x20
   14000e332:	lea    rbx,[rip+0x28617]        # 0x140036950
   14000e339:	lea    rdi,[rip+0x28610]        # 0x140036950
   14000e340:	jmp    0x14000e350
   14000e342:	mov    rax,QWORD PTR [rbx]
   14000e345:	test   rax,rax
   14000e348:	je     0x14000e34c
   14000e34a:	call   rax
   14000e34c:	add    rbx,0x8
   14000e350:	cmp    rbx,rdi
   14000e353:	jb     0x14000e342
   14000e355:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e35a:	add    rsp,0x20
   14000e35e:	pop    rdi
   14000e35f:	ret    
   14000e360:	mov    QWORD PTR [rsp+0x8],rbx
   14000e365:	push   rdi
   14000e366:	sub    rsp,0x20
   14000e36a:	lea    rbx,[rip+0x285ef]        # 0x140036960
   14000e371:	lea    rdi,[rip+0x285e8]        # 0x140036960
   14000e378:	jmp    0x14000e388
   14000e37a:	mov    rax,QWORD PTR [rbx]
   14000e37d:	test   rax,rax
   14000e380:	je     0x14000e384
   14000e382:	call   rax
   14000e384:	add    rbx,0x8
   14000e388:	cmp    rbx,rdi
   14000e38b:	jb     0x14000e37a
   14000e38d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e392:	add    rsp,0x20
   14000e396:	pop    rdi
   14000e397:	ret    
   14000e398:	mov    rax,rsp
   14000e39b:	mov    QWORD PTR [rax+0x8],rbx
   14000e39f:	mov    QWORD PTR [rax+0x10],rbp
   14000e3a3:	mov    QWORD PTR [rax+0x18],rsi
   14000e3a7:	mov    QWORD PTR [rax+0x20],rdi
   14000e3ab:	push   r14
   14000e3ad:	sub    rsp,0x40
   14000e3b1:	call   QWORD PTR [rip+0x1de61]        # 0x14002c218
   14000e3b7:	xor    r14d,r14d
   14000e3ba:	mov    rdi,rax
   14000e3bd:	test   rax,rax
   14000e3c0:	je     0x14000e46f
   14000e3c6:	mov    rbx,rax
   14000e3c9:	cmp    WORD PTR [rax],r14w
   14000e3cd:	je     0x14000e3e3
   14000e3cf:	add    rbx,0x2
   14000e3d3:	cmp    WORD PTR [rbx],r14w
   14000e3d7:	jne    0x14000e3cf
   14000e3d9:	add    rbx,0x2
   14000e3dd:	cmp    WORD PTR [rbx],r14w
   14000e3e1:	jne    0x14000e3cf
   14000e3e3:	mov    QWORD PTR [rsp+0x38],r14
   14000e3e8:	sub    rbx,rax
   14000e3eb:	mov    QWORD PTR [rsp+0x30],r14
   14000e3f0:	sar    rbx,1
   14000e3f3:	mov    r8,rax
   14000e3f6:	xor    edx,edx
   14000e3f8:	lea    r9d,[rbx+0x1]
   14000e3fc:	xor    ecx,ecx
   14000e3fe:	mov    DWORD PTR [rsp+0x28],r14d
   14000e403:	mov    QWORD PTR [rsp+0x20],r14
   14000e408:	call   QWORD PTR [rip+0x1dd82]        # 0x14002c190
   14000e40e:	movsxd rbp,eax
   14000e411:	test   eax,eax
   14000e413:	je     0x14000e466
   14000e415:	mov    rcx,rbp
   14000e418:	call   0x140008684
   14000e41d:	mov    rsi,rax
   14000e420:	test   rax,rax
   14000e423:	je     0x14000e466
   14000e425:	mov    QWORD PTR [rsp+0x38],r14
   14000e42a:	mov    QWORD PTR [rsp+0x30],r14
   14000e42f:	lea    r9d,[rbx+0x1]
   14000e433:	mov    r8,rdi
   14000e436:	xor    edx,edx
   14000e438:	xor    ecx,ecx
   14000e43a:	mov    DWORD PTR [rsp+0x28],ebp
   14000e43e:	mov    QWORD PTR [rsp+0x20],rax
   14000e443:	call   QWORD PTR [rip+0x1dd47]        # 0x14002c190
   14000e449:	test   eax,eax
   14000e44b:	jne    0x14000e458
   14000e44d:	mov    rcx,rsi
   14000e450:	call   0x140007dc0
   14000e455:	mov    rsi,r14
   14000e458:	mov    rcx,rdi
   14000e45b:	call   QWORD PTR [rip+0x1ddbf]        # 0x14002c220
   14000e461:	mov    rax,rsi
   14000e464:	jmp    0x14000e471
   14000e466:	mov    rcx,rdi
   14000e469:	call   QWORD PTR [rip+0x1ddb1]        # 0x14002c220
   14000e46f:	xor    eax,eax
   14000e471:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e476:	mov    rbp,QWORD PTR [rsp+0x58]
   14000e47b:	mov    rsi,QWORD PTR [rsp+0x60]
   14000e480:	mov    rdi,QWORD PTR [rsp+0x68]
   14000e485:	add    rsp,0x40
   14000e489:	pop    r14
   14000e48b:	ret    
   14000e48c:	sub    rsp,0x28
   14000e490:	mov    rax,QWORD PTR [rip+0x31c31]        # 0x1400400c8
   14000e497:	and    DWORD PTR [rsp+0x30],0x0
   14000e49c:	xor    rax,QWORD PTR [rip+0x2dd2d]        # 0x14003c1d0
   14000e4a3:	je     0x14000e4ba
   14000e4a5:	lea    rcx,[rsp+0x30]
   14000e4aa:	xor    edx,edx
   14000e4ac:	call   rax
   14000e4ae:	cmp    eax,0x7a
   14000e4b1:	jne    0x14000e4ba
   14000e4b3:	mov    eax,0x1
   14000e4b8:	jmp    0x14000e4bc
   14000e4ba:	xor    eax,eax
   14000e4bc:	add    rsp,0x28
   14000e4c0:	ret    
   14000e4c1:	int3   
   14000e4c2:	int3   
   14000e4c3:	int3   
   14000e4c4:	mov    QWORD PTR [rsp+0x20],rbx
   14000e4c9:	push   rdi
   14000e4ca:	sub    rsp,0x40
   14000e4ce:	mov    rbx,rcx
   14000e4d1:	call   QWORD PTR [rip+0x1dd51]        # 0x14002c228
   14000e4d7:	mov    rdi,QWORD PTR [rbx+0xf8]
   14000e4de:	lea    rdx,[rsp+0x50]
   14000e4e3:	xor    r8d,r8d
   14000e4e6:	mov    rcx,rdi
   14000e4e9:	call   QWORD PTR [rip+0x1dc41]        # 0x14002c130
   14000e4ef:	test   rax,rax
   14000e4f2:	je     0x14000e526
   14000e4f4:	and    QWORD PTR [rsp+0x38],0x0
   14000e4fa:	mov    rdx,QWORD PTR [rsp+0x50]
   14000e4ff:	lea    rcx,[rsp+0x58]
   14000e504:	mov    QWORD PTR [rsp+0x30],rcx
   14000e509:	lea    rcx,[rsp+0x60]
   14000e50e:	mov    r9,rax
   14000e511:	mov    QWORD PTR [rsp+0x28],rcx
   14000e516:	xor    ecx,ecx
   14000e518:	mov    r8,rdi
   14000e51b:	mov    QWORD PTR [rsp+0x20],rbx
   14000e520:	call   QWORD PTR [rip+0x1dd0a]        # 0x14002c230
   14000e526:	mov    rbx,QWORD PTR [rsp+0x68]
   14000e52b:	add    rsp,0x40
   14000e52f:	pop    rdi
   14000e530:	ret    
   14000e531:	int3   
   14000e532:	int3   
   14000e533:	int3   
   14000e534:	rex push rbx
   14000e536:	push   rsi
   14000e537:	push   rdi
   14000e538:	sub    rsp,0x40
   14000e53c:	mov    rbx,rcx
   14000e53f:	call   QWORD PTR [rip+0x1dce3]        # 0x14002c228
   14000e545:	mov    rsi,QWORD PTR [rbx+0xf8]
   14000e54c:	xor    edi,edi
   14000e54e:	lea    rdx,[rsp+0x60]
   14000e553:	xor    r8d,r8d
   14000e556:	mov    rcx,rsi
   14000e559:	call   QWORD PTR [rip+0x1dbd1]        # 0x14002c130
   14000e55f:	test   rax,rax
   14000e562:	je     0x14000e59d
   14000e564:	and    QWORD PTR [rsp+0x38],0x0
   14000e56a:	mov    rdx,QWORD PTR [rsp+0x60]
   14000e56f:	lea    rcx,[rsp+0x68]
   14000e574:	mov    QWORD PTR [rsp+0x30],rcx
   14000e579:	lea    rcx,[rsp+0x70]
   14000e57e:	mov    r9,rax
   14000e581:	mov    QWORD PTR [rsp+0x28],rcx
   14000e586:	xor    ecx,ecx
   14000e588:	mov    r8,rsi
   14000e58b:	mov    QWORD PTR [rsp+0x20],rbx
   14000e590:	call   QWORD PTR [rip+0x1dc9a]        # 0x14002c230
   14000e596:	inc    edi
   14000e598:	cmp    edi,0x2
   14000e59b:	jl     0x14000e54e
   14000e59d:	add    rsp,0x40
   14000e5a1:	pop    rdi
   14000e5a2:	pop    rsi
   14000e5a3:	pop    rbx
   14000e5a4:	ret    
   14000e5a5:	int3   
   14000e5a6:	int3   
   14000e5a7:	int3   
   14000e5a8:	sub    rsp,0x28
   14000e5ac:	mov    rax,QWORD PTR [rip+0x31a85]        # 0x140040038
   14000e5b3:	xor    rax,QWORD PTR [rip+0x2dc16]        # 0x14003c1d0
   14000e5ba:	je     0x14000e5be
   14000e5bc:	call   rax
   14000e5be:	add    rsp,0x28
   14000e5c2:	ret    
   14000e5c3:	int3   
   14000e5c4:	sub    rsp,0x28
   14000e5c8:	mov    rax,QWORD PTR [rip+0x31a81]        # 0x140040050
   14000e5cf:	xor    rax,QWORD PTR [rip+0x2dbfa]        # 0x14003c1d0
   14000e5d6:	je     0x14000e5da
   14000e5d8:	call   rax
   14000e5da:	add    rsp,0x28
   14000e5de:	ret    
   14000e5df:	int3   
   14000e5e0:	mov    r10,QWORD PTR [rip+0x31a21]        # 0x140040008
   14000e5e7:	mov    eax,r8d
   14000e5ea:	xor    r10,QWORD PTR [rip+0x2dbdf]        # 0x14003c1d0
   14000e5f1:	je     0x14000e5f6
   14000e5f3:	rex.WB jmp r10
   14000e5f6:	and    eax,0x1
   14000e5f9:	mov    r9,rdx
   14000e5fc:	and    r8d,0x2
   14000e600:	mov    edx,eax
   14000e602:	rex.W jmp QWORD PTR [rip+0x1dc47]        # 0x14002c250
   14000e609:	int3   
   14000e60a:	int3   
   14000e60b:	int3   
   14000e60c:	mov    r10,QWORD PTR [rip+0x319fd]        # 0x140040010
   14000e613:	xor    r10,QWORD PTR [rip+0x2dbb6]        # 0x14003c1d0
   14000e61a:	je     0x14000e61f
   14000e61c:	rex.WB jmp r10
   14000e61f:	rex.W jmp QWORD PTR [rip+0x1dc72]        # 0x14002c298
   14000e626:	int3   
   14000e627:	int3   
   14000e628:	sub    rsp,0x28
   14000e62c:	mov    rax,QWORD PTR [rip+0x31a45]        # 0x140040078
   14000e633:	xor    rax,QWORD PTR [rip+0x2db96]        # 0x14003c1d0
   14000e63a:	je     0x14000e643
   14000e63c:	add    rsp,0x28
   14000e640:	rex.W jmp rax
   14000e643:	mov    ecx,0x78
   14000e648:	call   QWORD PTR [rip+0x1db5a]        # 0x14002c1a8
   14000e64e:	xor    al,al
   14000e650:	add    rsp,0x28
   14000e654:	ret    
   14000e655:	int3   
   14000e656:	int3   
   14000e657:	int3   
   14000e658:	mov    rax,QWORD PTR [rip+0x319c1]        # 0x140040020
   14000e65f:	xor    rax,QWORD PTR [rip+0x2db6a]        # 0x14003c1d0
   14000e666:	je     0x14000e66b
   14000e668:	rex.W jmp rax
   14000e66b:	xor    eax,eax
   14000e66d:	ret    
   14000e66e:	int3   
   14000e66f:	int3   
   14000e670:	mov    rax,QWORD PTR [rip+0x319c9]        # 0x140040040
   14000e677:	xor    rax,QWORD PTR [rip+0x2db52]        # 0x14003c1d0
   14000e67e:	je     0x14000e683
   14000e680:	rex.W jmp rax
   14000e683:	xor    eax,eax
   14000e685:	ret    
   14000e686:	int3   
   14000e687:	int3   
   14000e688:	mov    rax,QWORD PTR [rip+0x31951]        # 0x14003ffe0
   14000e68f:	xor    rax,QWORD PTR [rip+0x2db3a]        # 0x14003c1d0
   14000e696:	je     0x14000e69b
   14000e698:	rex.W jmp rax
   14000e69b:	rex.W jmp QWORD PTR [rip+0x1dbce]        # 0x14002c270
   14000e6a2:	int3   
   14000e6a3:	int3   
   14000e6a4:	mov    rax,QWORD PTR [rip+0x3193d]        # 0x14003ffe8
   14000e6ab:	xor    rax,QWORD PTR [rip+0x2db1e]        # 0x14003c1d0
   14000e6b2:	je     0x14000e6b7
   14000e6b4:	rex.W jmp rax
   14000e6b7:	rex.W jmp QWORD PTR [rip+0x1dbca]        # 0x14002c288
   14000e6be:	int3   
   14000e6bf:	int3   
   14000e6c0:	mov    rax,QWORD PTR [rip+0x31929]        # 0x14003fff0
   14000e6c7:	xor    rax,QWORD PTR [rip+0x2db02]        # 0x14003c1d0
   14000e6ce:	je     0x14000e6d3
   14000e6d0:	rex.W jmp rax
   14000e6d3:	rex.W jmp QWORD PTR [rip+0x1db9e]        # 0x14002c278
   14000e6da:	int3   
   14000e6db:	int3   
   14000e6dc:	mov    rax,QWORD PTR [rip+0x31915]        # 0x14003fff8
   14000e6e3:	xor    rax,QWORD PTR [rip+0x2dae6]        # 0x14003c1d0
   14000e6ea:	je     0x14000e6ef
   14000e6ec:	rex.W jmp rax
   14000e6ef:	rex.W jmp QWORD PTR [rip+0x1db8a]        # 0x14002c280
   14000e6f6:	int3   
   14000e6f7:	int3   
   14000e6f8:	sub    rsp,0x28
   14000e6fc:	mov    rax,QWORD PTR [rip+0x31955]        # 0x140040058
   14000e703:	xor    rax,QWORD PTR [rip+0x2dac6]        # 0x14003c1d0
   14000e70a:	je     0x14000e70e
   14000e70c:	call   rax
   14000e70e:	add    rsp,0x28
   14000e712:	ret    
   14000e713:	int3   
   14000e714:	sub    rsp,0x28
   14000e718:	mov    rax,QWORD PTR [rip+0x31941]        # 0x140040060
   14000e71f:	xor    rax,QWORD PTR [rip+0x2daaa]        # 0x14003c1d0
   14000e726:	je     0x14000e72a
   14000e728:	call   rax
   14000e72a:	add    rsp,0x28
   14000e72e:	ret    
   14000e72f:	int3   
   14000e730:	mov    rax,QWORD PTR [rip+0x31931]        # 0x140040068
   14000e737:	xor    rax,QWORD PTR [rip+0x2da92]        # 0x14003c1d0
   14000e73e:	je     0x14000e743
   14000e740:	rex.W jmp rax
   14000e743:	xor    eax,eax
   14000e745:	ret    
   14000e746:	int3   
   14000e747:	int3   
   14000e748:	sub    rsp,0x28
   14000e74c:	mov    rax,QWORD PTR [rip+0x31985]        # 0x1400400d8
   14000e753:	xor    rax,QWORD PTR [rip+0x2da76]        # 0x14003c1d0
   14000e75a:	je     0x14000e763
   14000e75c:	add    rsp,0x28
   14000e760:	rex.W jmp rax
   14000e763:	mov    ecx,0x78
   14000e768:	call   QWORD PTR [rip+0x1da3a]        # 0x14002c1a8
   14000e76e:	xor    eax,eax
   14000e770:	add    rsp,0x28
   14000e774:	ret    
   14000e775:	int3   
   14000e776:	int3   
   14000e777:	int3   
   14000e778:	sub    rsp,0x28
   14000e77c:	mov    rax,QWORD PTR [rip+0x318ed]        # 0x140040070
   14000e783:	xor    rax,QWORD PTR [rip+0x2da46]        # 0x14003c1d0
   14000e78a:	je     0x14000e793
   14000e78c:	add    rsp,0x28
   14000e790:	rex.W jmp rax
   14000e793:	mov    ecx,0x78
   14000e798:	call   QWORD PTR [rip+0x1da0a]        # 0x14002c1a8
   14000e79e:	xor    eax,eax
   14000e7a0:	add    rsp,0x28
   14000e7a4:	ret    
   14000e7a5:	int3   
   14000e7a6:	int3   
   14000e7a7:	int3   
   14000e7a8:	sub    rsp,0x98
   14000e7af:	lea    rcx,[rsp+0x20]
   14000e7b4:	call   QWORD PTR [rip+0x1da26]        # 0x14002c1e0
   14000e7ba:	test   BYTE PTR [rsp+0x5c],0x1
   14000e7bf:	movzx  ecx,WORD PTR [rsp+0x60]
   14000e7c4:	mov    eax,0xa
   14000e7c9:	cmovne eax,ecx
   14000e7cc:	add    rsp,0x98
   14000e7d3:	ret    
   14000e7d4:	sub    rsp,0x28
   14000e7d8:	mov    rax,QWORD PTR [rip+0x318f1]        # 0x1400400d0
   14000e7df:	xor    rax,QWORD PTR [rip+0x2d9ea]        # 0x14003c1d0
   14000e7e6:	je     0x14000e7ef
   14000e7e8:	add    rsp,0x28
   14000e7ec:	rex.W jmp rax
   14000e7ef:	call   QWORD PTR [rip+0x1da9b]        # 0x14002c290
   14000e7f5:	mov    eax,eax
   14000e7f7:	add    rsp,0x28
   14000e7fb:	ret    
   14000e7fc:	sub    rsp,0x28
   14000e800:	mov    rax,QWORD PTR [rip+0x317f9]        # 0x140040000
   14000e807:	xor    rax,QWORD PTR [rip+0x2d9c2]        # 0x14003c1d0
   14000e80e:	je     0x14000e817
   14000e810:	add    rsp,0x28
   14000e814:	rex.W jmp rax
   14000e817:	call   QWORD PTR [rip+0x1da2b]        # 0x14002c248
   14000e81d:	mov    eax,0x1
   14000e822:	add    rsp,0x28
   14000e826:	ret    
   14000e827:	int3   
   14000e828:	rex push rbx
   14000e82a:	sub    rsp,0x20
   14000e82e:	mov    eax,DWORD PTR [rip+0x2da54]        # 0x14003c288
   14000e834:	xor    ebx,ebx
   14000e836:	test   eax,eax
   14000e838:	jns    0x14000e869
   14000e83a:	mov    rax,QWORD PTR [rip+0x31887]        # 0x1400400c8
   14000e841:	mov    DWORD PTR [rsp+0x30],ebx
   14000e845:	xor    rax,QWORD PTR [rip+0x2d984]        # 0x14003c1d0
   14000e84c:	je     0x14000e85f
   14000e84e:	lea    rcx,[rsp+0x30]
   14000e853:	xor    edx,edx
   14000e855:	call   rax
   14000e857:	cmp    eax,0x7a
   14000e85a:	lea    eax,[rbx+0x1]
   14000e85d:	je     0x14000e861
   14000e85f:	mov    eax,ebx
   14000e861:	mov    DWORD PTR [rip+0x2da21],eax        # 0x14003c288
   14000e867:	test   eax,eax
   14000e869:	setg   bl
   14000e86c:	mov    eax,ebx
   14000e86e:	add    rsp,0x20
   14000e872:	pop    rbx
   14000e873:	ret    
   14000e874:	rex push rbx
   14000e876:	sub    rsp,0x20
   14000e87a:	lea    rcx,[rip+0x20edf]        # 0x14002f760
   14000e881:	call   QWORD PTR [rip+0x1d849]        # 0x14002c0d0
   14000e887:	lea    rdx,[rip+0x20ef2]        # 0x14002f780
   14000e88e:	mov    rcx,rax
   14000e891:	mov    rbx,rax
   14000e894:	call   QWORD PTR [rip+0x1d8de]        # 0x14002c178
   14000e89a:	lea    rdx,[rip+0x20eef]        # 0x14002f790
   14000e8a1:	mov    rcx,rbx
   14000e8a4:	xor    rax,QWORD PTR [rip+0x2d925]        # 0x14003c1d0
   14000e8ab:	mov    QWORD PTR [rip+0x3172e],rax        # 0x14003ffe0
   14000e8b2:	call   QWORD PTR [rip+0x1d8c0]        # 0x14002c178
   14000e8b8:	lea    rdx,[rip+0x20ed9]        # 0x14002f798
   14000e8bf:	xor    rax,QWORD PTR [rip+0x2d90a]        # 0x14003c1d0
   14000e8c6:	mov    rcx,rbx
   14000e8c9:	mov    QWORD PTR [rip+0x31718],rax        # 0x14003ffe8
   14000e8d0:	call   QWORD PTR [rip+0x1d8a2]        # 0x14002c178
   14000e8d6:	lea    rdx,[rip+0x20ecb]        # 0x14002f7a8
   14000e8dd:	xor    rax,QWORD PTR [rip+0x2d8ec]        # 0x14003c1d0
   14000e8e4:	mov    rcx,rbx
   14000e8e7:	mov    QWORD PTR [rip+0x31702],rax        # 0x14003fff0
   14000e8ee:	call   QWORD PTR [rip+0x1d884]        # 0x14002c178
   14000e8f4:	lea    rdx,[rip+0x20ebd]        # 0x14002f7b8
   14000e8fb:	xor    rax,QWORD PTR [rip+0x2d8ce]        # 0x14003c1d0
   14000e902:	mov    rcx,rbx
   14000e905:	mov    QWORD PTR [rip+0x316ec],rax        # 0x14003fff8
   14000e90c:	call   QWORD PTR [rip+0x1d866]        # 0x14002c178
   14000e912:	lea    rdx,[rip+0x20ebf]        # 0x14002f7d8
   14000e919:	xor    rax,QWORD PTR [rip+0x2d8b0]        # 0x14003c1d0
   14000e920:	mov    rcx,rbx
   14000e923:	mov    QWORD PTR [rip+0x316d6],rax        # 0x140040000
   14000e92a:	call   QWORD PTR [rip+0x1d848]        # 0x14002c178
   14000e930:	lea    rdx,[rip+0x20eb1]        # 0x14002f7e8
   14000e937:	xor    rax,QWORD PTR [rip+0x2d892]        # 0x14003c1d0
   14000e93e:	mov    rcx,rbx
   14000e941:	mov    QWORD PTR [rip+0x316c0],rax        # 0x140040008
   14000e948:	call   QWORD PTR [rip+0x1d82a]        # 0x14002c178
   14000e94e:	lea    rdx,[rip+0x20eab]        # 0x14002f800
   14000e955:	xor    rax,QWORD PTR [rip+0x2d874]        # 0x14003c1d0
   14000e95c:	mov    rcx,rbx
   14000e95f:	mov    QWORD PTR [rip+0x316aa],rax        # 0x140040010
   14000e966:	call   QWORD PTR [rip+0x1d80c]        # 0x14002c178
   14000e96c:	lea    rdx,[rip+0x20ea5]        # 0x14002f818
   14000e973:	xor    rax,QWORD PTR [rip+0x2d856]        # 0x14003c1d0
   14000e97a:	mov    rcx,rbx
   14000e97d:	mov    QWORD PTR [rip+0x31694],rax        # 0x140040018
   14000e984:	call   QWORD PTR [rip+0x1d7ee]        # 0x14002c178
   14000e98a:	lea    rdx,[rip+0x20e9f]        # 0x14002f830
   14000e991:	xor    rax,QWORD PTR [rip+0x2d838]        # 0x14003c1d0
   14000e998:	mov    rcx,rbx
   14000e99b:	mov    QWORD PTR [rip+0x3167e],rax        # 0x140040020
   14000e9a2:	call   QWORD PTR [rip+0x1d7d0]        # 0x14002c178
   14000e9a8:	lea    rdx,[rip+0x20e99]        # 0x14002f848
   14000e9af:	xor    rax,QWORD PTR [rip+0x2d81a]        # 0x14003c1d0
   14000e9b6:	mov    rcx,rbx
   14000e9b9:	mov    QWORD PTR [rip+0x31668],rax        # 0x140040028
   14000e9c0:	call   QWORD PTR [rip+0x1d7b2]        # 0x14002c178
   14000e9c6:	lea    rdx,[rip+0x20e9b]        # 0x14002f868
   14000e9cd:	xor    rax,QWORD PTR [rip+0x2d7fc]        # 0x14003c1d0
   14000e9d4:	mov    rcx,rbx
   14000e9d7:	mov    QWORD PTR [rip+0x31652],rax        # 0x140040030
   14000e9de:	call   QWORD PTR [rip+0x1d794]        # 0x14002c178
   14000e9e4:	lea    rdx,[rip+0x20e95]        # 0x14002f880
   14000e9eb:	xor    rax,QWORD PTR [rip+0x2d7de]        # 0x14003c1d0
   14000e9f2:	mov    rcx,rbx
   14000e9f5:	mov    QWORD PTR [rip+0x3163c],rax        # 0x140040038
   14000e9fc:	call   QWORD PTR [rip+0x1d776]        # 0x14002c178
   14000ea02:	lea    rdx,[rip+0x20e8f]        # 0x14002f898
   14000ea09:	xor    rax,QWORD PTR [rip+0x2d7c0]        # 0x14003c1d0
   14000ea10:	mov    rcx,rbx
   14000ea13:	mov    QWORD PTR [rip+0x31626],rax        # 0x140040040
   14000ea1a:	call   QWORD PTR [rip+0x1d758]        # 0x14002c178
   14000ea20:	lea    rdx,[rip+0x20e89]        # 0x14002f8b0
   14000ea27:	xor    rax,QWORD PTR [rip+0x2d7a2]        # 0x14003c1d0
   14000ea2e:	mov    rcx,rbx
   14000ea31:	mov    QWORD PTR [rip+0x31610],rax        # 0x140040048
   14000ea38:	call   QWORD PTR [rip+0x1d73a]        # 0x14002c178
   14000ea3e:	lea    rdx,[rip+0x20e83]        # 0x14002f8c8
   14000ea45:	xor    rax,QWORD PTR [rip+0x2d784]        # 0x14003c1d0
   14000ea4c:	mov    rcx,rbx
   14000ea4f:	mov    QWORD PTR [rip+0x315fa],rax        # 0x140040050
   14000ea56:	call   QWORD PTR [rip+0x1d71c]        # 0x14002c178
   14000ea5c:	xor    rax,QWORD PTR [rip+0x2d76d]        # 0x14003c1d0
   14000ea63:	lea    rdx,[rip+0x20e7e]        # 0x14002f8e8
   14000ea6a:	mov    rcx,rbx
   14000ea6d:	mov    QWORD PTR [rip+0x315e4],rax        # 0x140040058
   14000ea74:	call   QWORD PTR [rip+0x1d6fe]        # 0x14002c178
   14000ea7a:	lea    rdx,[rip+0x20e87]        # 0x14002f908
   14000ea81:	xor    rax,QWORD PTR [rip+0x2d748]        # 0x14003c1d0
   14000ea88:	mov    rcx,rbx
   14000ea8b:	mov    QWORD PTR [rip+0x315ce],rax        # 0x140040060
   14000ea92:	call   QWORD PTR [rip+0x1d6e0]        # 0x14002c178
   14000ea98:	lea    rdx,[rip+0x20e89]        # 0x14002f928
   14000ea9f:	xor    rax,QWORD PTR [rip+0x2d72a]        # 0x14003c1d0
   14000eaa6:	mov    rcx,rbx
   14000eaa9:	mov    QWORD PTR [rip+0x315b8],rax        # 0x140040068
   14000eab0:	call   QWORD PTR [rip+0x1d6c2]        # 0x14002c178
   14000eab6:	lea    rdx,[rip+0x20e8b]        # 0x14002f948
   14000eabd:	xor    rax,QWORD PTR [rip+0x2d70c]        # 0x14003c1d0
   14000eac4:	mov    rcx,rbx
   14000eac7:	mov    QWORD PTR [rip+0x315a2],rax        # 0x140040070
   14000eace:	call   QWORD PTR [rip+0x1d6a4]        # 0x14002c178
   14000ead4:	lea    rdx,[rip+0x20e85]        # 0x14002f960
   14000eadb:	xor    rax,QWORD PTR [rip+0x2d6ee]        # 0x14003c1d0
   14000eae2:	mov    rcx,rbx
   14000eae5:	mov    QWORD PTR [rip+0x3158c],rax        # 0x140040078
   14000eaec:	call   QWORD PTR [rip+0x1d686]        # 0x14002c178
   14000eaf2:	lea    rdx,[rip+0x20e87]        # 0x14002f980
   14000eaf9:	xor    rax,QWORD PTR [rip+0x2d6d0]        # 0x14003c1d0
   14000eb00:	mov    rcx,rbx
   14000eb03:	mov    QWORD PTR [rip+0x31576],rax        # 0x140040080
   14000eb0a:	call   QWORD PTR [rip+0x1d668]        # 0x14002c178
   14000eb10:	lea    rdx,[rip+0x20e81]        # 0x14002f998
   14000eb17:	xor    rax,QWORD PTR [rip+0x2d6b2]        # 0x14003c1d0
   14000eb1e:	mov    rcx,rbx
   14000eb21:	mov    QWORD PTR [rip+0x31568],rax        # 0x140040090
   14000eb28:	call   QWORD PTR [rip+0x1d64a]        # 0x14002c178
   14000eb2e:	lea    rdx,[rip+0x20e73]        # 0x14002f9a8
   14000eb35:	xor    rax,QWORD PTR [rip+0x2d694]        # 0x14003c1d0
   14000eb3c:	mov    rcx,rbx
   14000eb3f:	mov    QWORD PTR [rip+0x31542],rax        # 0x140040088
   14000eb46:	call   QWORD PTR [rip+0x1d62c]        # 0x14002c178
   14000eb4c:	lea    rdx,[rip+0x20e65]        # 0x14002f9b8
   14000eb53:	xor    rax,QWORD PTR [rip+0x2d676]        # 0x14003c1d0
   14000eb5a:	mov    rcx,rbx
   14000eb5d:	mov    QWORD PTR [rip+0x31534],rax        # 0x140040098
   14000eb64:	call   QWORD PTR [rip+0x1d60e]        # 0x14002c178
   14000eb6a:	lea    rdx,[rip+0x20e57]        # 0x14002f9c8
   14000eb71:	xor    rax,QWORD PTR [rip+0x2d658]        # 0x14003c1d0
   14000eb78:	mov    rcx,rbx
   14000eb7b:	mov    QWORD PTR [rip+0x3151e],rax        # 0x1400400a0
   14000eb82:	call   QWORD PTR [rip+0x1d5f0]        # 0x14002c178
   14000eb88:	lea    rdx,[rip+0x20e49]        # 0x14002f9d8
   14000eb8f:	xor    rax,QWORD PTR [rip+0x2d63a]        # 0x14003c1d0
   14000eb96:	mov    rcx,rbx
   14000eb99:	mov    QWORD PTR [rip+0x31508],rax        # 0x1400400a8
   14000eba0:	call   QWORD PTR [rip+0x1d5d2]        # 0x14002c178
   14000eba6:	lea    rdx,[rip+0x20e4b]        # 0x14002f9f8
   14000ebad:	xor    rax,QWORD PTR [rip+0x2d61c]        # 0x14003c1d0
   14000ebb4:	mov    rcx,rbx
   14000ebb7:	mov    QWORD PTR [rip+0x314f2],rax        # 0x1400400b0
   14000ebbe:	call   QWORD PTR [rip+0x1d5b4]        # 0x14002c178
   14000ebc4:	lea    rdx,[rip+0x20e45]        # 0x14002fa10
   14000ebcb:	xor    rax,QWORD PTR [rip+0x2d5fe]        # 0x14003c1d0
   14000ebd2:	mov    rcx,rbx
   14000ebd5:	mov    QWORD PTR [rip+0x314dc],rax        # 0x1400400b8
   14000ebdc:	call   QWORD PTR [rip+0x1d596]        # 0x14002c178
   14000ebe2:	lea    rdx,[rip+0x20e37]        # 0x14002fa20
   14000ebe9:	xor    rax,QWORD PTR [rip+0x2d5e0]        # 0x14003c1d0
   14000ebf0:	mov    rcx,rbx
   14000ebf3:	mov    QWORD PTR [rip+0x314c6],rax        # 0x1400400c0
   14000ebfa:	call   QWORD PTR [rip+0x1d578]        # 0x14002c178
   14000ec00:	lea    rdx,[rip+0x20e31]        # 0x14002fa38
   14000ec07:	xor    rax,QWORD PTR [rip+0x2d5c2]        # 0x14003c1d0
   14000ec0e:	mov    rcx,rbx
   14000ec11:	mov    QWORD PTR [rip+0x314b0],rax        # 0x1400400c8
   14000ec18:	call   QWORD PTR [rip+0x1d55a]        # 0x14002c178
   14000ec1e:	lea    rdx,[rip+0x20e23]        # 0x14002fa48
   14000ec25:	xor    rax,QWORD PTR [rip+0x2d5a4]        # 0x14003c1d0
   14000ec2c:	mov    rcx,rbx
   14000ec2f:	mov    QWORD PTR [rip+0x3149a],rax        # 0x1400400d0
   14000ec36:	call   QWORD PTR [rip+0x1d53c]        # 0x14002c178
   14000ec3c:	xor    rax,QWORD PTR [rip+0x2d58d]        # 0x14003c1d0
   14000ec43:	lea    rdx,[rip+0x20e1e]        # 0x14002fa68
   14000ec4a:	mov    rcx,rbx
   14000ec4d:	mov    QWORD PTR [rip+0x31484],rax        # 0x1400400d8
   14000ec54:	call   QWORD PTR [rip+0x1d51e]        # 0x14002c178
   14000ec5a:	xor    rax,QWORD PTR [rip+0x2d56f]        # 0x14003c1d0
   14000ec61:	mov    QWORD PTR [rip+0x31478],rax        # 0x1400400e0
   14000ec68:	add    rsp,0x20
   14000ec6c:	pop    rbx
   14000ec6d:	ret    
   14000ec6e:	int3   
   14000ec6f:	int3   
   14000ec70:	sub    rsp,0x28
   14000ec74:	mov    rax,QWORD PTR [rip+0x31465]        # 0x1400400e0
   14000ec7b:	xor    rax,QWORD PTR [rip+0x2d54e]        # 0x14003c1d0
   14000ec82:	je     0x14000ec8b
   14000ec84:	add    rsp,0x28
   14000ec88:	rex.W jmp rax
   14000ec8b:	mov    ecx,0x78
   14000ec90:	call   QWORD PTR [rip+0x1d512]        # 0x14002c1a8
   14000ec96:	xor    eax,eax
   14000ec98:	add    rsp,0x28
   14000ec9c:	ret    
   14000ec9d:	int3   
   14000ec9e:	int3   
   14000ec9f:	int3   
   14000eca0:	mov    rax,QWORD PTR [rip+0x31371]        # 0x140040018
   14000eca7:	xor    rax,QWORD PTR [rip+0x2d522]        # 0x14003c1d0
   14000ecae:	je     0x14000ecb3
   14000ecb0:	rex.W jmp rax
   14000ecb3:	xor    eax,eax
   14000ecb5:	ret    
   14000ecb6:	int3   
   14000ecb7:	int3   
   14000ecb8:	sub    rsp,0x28
   14000ecbc:	mov    rax,QWORD PTR [rip+0x31365]        # 0x140040028
   14000ecc3:	xor    rax,QWORD PTR [rip+0x2d506]        # 0x14003c1d0
   14000ecca:	je     0x14000ecce
   14000eccc:	call   rax
   14000ecce:	add    rsp,0x28
   14000ecd2:	ret    
   14000ecd3:	int3   
   14000ecd4:	sub    rsp,0x28
   14000ecd8:	mov    rax,QWORD PTR [rip+0x31369]        # 0x140040048
   14000ecdf:	xor    rax,QWORD PTR [rip+0x2d4ea]        # 0x14003c1d0
   14000ece6:	je     0x14000ecea
   14000ece8:	call   rax
   14000ecea:	add    rsp,0x28
   14000ecee:	ret    
   14000ecef:	int3   
   14000ecf0:	rex.W jmp QWORD PTR [rip+0x1d549]        # 0x14002c240
   14000ecf7:	int3   
   14000ecf8:	rex.W jmp QWORD PTR [rip+0x1d559]        # 0x14002c258
   14000ecff:	int3   
   14000ed00:	rex push rbx
   14000ed02:	sub    rsp,0x20
   14000ed06:	mov    ebx,ecx
   14000ed08:	call   QWORD PTR [rip+0x1d552]        # 0x14002c260
   14000ed0e:	mov    edx,ebx
   14000ed10:	mov    rcx,rax
   14000ed13:	add    rsp,0x20
   14000ed17:	pop    rbx
   14000ed18:	rex.W jmp QWORD PTR [rip+0x1d549]        # 0x14002c268
   14000ed1f:	int3   
   14000ed20:	rex push rbx
   14000ed22:	sub    rsp,0x20
   14000ed26:	mov    rbx,rcx
   14000ed29:	xor    ecx,ecx
   14000ed2b:	call   QWORD PTR [rip+0x1d50f]        # 0x14002c240
   14000ed31:	mov    rcx,rbx
   14000ed34:	add    rsp,0x20
   14000ed38:	pop    rbx
   14000ed39:	rex.W jmp QWORD PTR [rip+0x1d4f8]        # 0x14002c238
   14000ed40:	sub    rsp,0x28
   14000ed44:	mov    rax,QWORD PTR [rip+0x312e5]        # 0x140040030
   14000ed4b:	xor    rax,QWORD PTR [rip+0x2d47e]        # 0x14003c1d0
   14000ed52:	je     0x14000ed56
   14000ed54:	call   rax
   14000ed56:	add    rsp,0x28
   14000ed5a:	ret    
   14000ed5b:	int3   
   14000ed5c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ed61:	push   rdi
   14000ed62:	sub    rsp,0x20
   14000ed66:	xor    edi,edi
   14000ed68:	cmp    DWORD PTR [rip+0x3139a],edi        # 0x140040108
   14000ed6e:	jne    0x14000ed75
   14000ed70:	call   0x140010074
   14000ed75:	mov    rbx,QWORD PTR [rip+0x31394]        # 0x140040110
   14000ed7c:	lea    rax,[rip+0x20d01]        # 0x14002fa84
   14000ed83:	test   rbx,rbx
   14000ed86:	cmove  rbx,rax
   14000ed8a:	cmp    BYTE PTR [rbx],0x20
   14000ed8d:	ja     0x14000ed98
   14000ed8f:	cmp    BYTE PTR [rbx],0x0
   14000ed92:	je     0x14000edc7
   14000ed94:	test   edi,edi
   14000ed96:	je     0x14000edc1
   14000ed98:	cmp    BYTE PTR [rbx],0x22
   14000ed9b:	jne    0x14000eda6
   14000ed9d:	xor    eax,eax
   14000ed9f:	test   edi,edi
   14000eda1:	sete   al
   14000eda4:	mov    edi,eax
   14000eda6:	movzx  ecx,BYTE PTR [rbx]
   14000eda9:	call   0x14001c300
   14000edae:	test   eax,eax
   14000edb0:	je     0x14000edb5
   14000edb2:	inc    rbx
   14000edb5:	inc    rbx
   14000edb8:	jmp    0x14000ed8a
   14000edba:	cmp    al,0x20
   14000edbc:	ja     0x14000edc7
   14000edbe:	inc    rbx
   14000edc1:	mov    al,BYTE PTR [rbx]
   14000edc3:	test   al,al
   14000edc5:	jne    0x14000edba
   14000edc7:	mov    rax,rbx
   14000edca:	mov    rbx,QWORD PTR [rsp+0x30]
   14000edcf:	add    rsp,0x20
   14000edd3:	pop    rdi
   14000edd4:	ret    
   14000edd5:	int3   
   14000edd6:	int3   
   14000edd7:	int3   
   14000edd8:	rex push rbx
   14000edda:	sub    rsp,0x20
   14000edde:	test   rcx,rcx
   14000ede1:	je     0x14000edf0
   14000ede3:	test   rdx,rdx
   14000ede6:	je     0x14000edf0
   14000ede8:	test   r8,r8
   14000edeb:	jne    0x14000ee09
   14000eded:	mov    BYTE PTR [rcx],r8b
   14000edf0:	call   0x140009cb4
   14000edf5:	mov    ebx,0x16
   14000edfa:	mov    DWORD PTR [rax],ebx
   14000edfc:	call   0x140008d58
   14000ee01:	mov    eax,ebx
   14000ee03:	add    rsp,0x20
   14000ee07:	pop    rbx
   14000ee08:	ret    
   14000ee09:	mov    r9,rcx
   14000ee0c:	sub    r9,r8
   14000ee0f:	mov    al,BYTE PTR [r8]
   14000ee12:	mov    BYTE PTR [r9+r8*1],al
   14000ee16:	inc    r8
   14000ee19:	test   al,al
   14000ee1b:	je     0x14000ee22
   14000ee1d:	dec    rdx
   14000ee20:	jne    0x14000ee0f
   14000ee22:	test   rdx,rdx
   14000ee25:	jne    0x14000ee35
   14000ee27:	mov    BYTE PTR [rcx],dl
   14000ee29:	call   0x140009cb4
   14000ee2e:	mov    ebx,0x22
   14000ee33:	jmp    0x14000edfa
   14000ee35:	xor    eax,eax
   14000ee37:	jmp    0x14000ee03
   14000ee39:	int3   
   14000ee3a:	int3   
   14000ee3b:	int3   
   14000ee3c:	sub    rsp,0x28
   14000ee40:	call   0x14000a3ec
   14000ee45:	add    rax,0xb0
   14000ee4b:	add    rsp,0x28
   14000ee4f:	ret    
   14000ee50:	mov    rcx,QWORD PTR [rip+0x2f819]        # 0x14003e670
   14000ee57:	rex.W jmp QWORD PTR [rip+0x1d2ba]        # 0x14002c118
   14000ee5e:	int3   
   14000ee5f:	int3   
   14000ee60:	sub    rsp,0x28
   14000ee64:	call   0x14000a3ec
   14000ee69:	add    rax,0xa8
   14000ee6f:	add    rsp,0x28
   14000ee73:	ret    
   14000ee74:	mov    QWORD PTR [rip+0x2f7e5],rcx        # 0x14003e660
   14000ee7b:	mov    QWORD PTR [rip+0x2f7e6],rcx        # 0x14003e668
   14000ee82:	mov    QWORD PTR [rip+0x2f7e7],rcx        # 0x14003e670
   14000ee89:	mov    QWORD PTR [rip+0x2f7e8],rcx        # 0x14003e678
   14000ee90:	ret    
   14000ee91:	int3   
   14000ee92:	int3   
   14000ee93:	int3   
   14000ee94:	mov    QWORD PTR [rsp+0x8],rbx
   14000ee99:	mov    QWORD PTR [rsp+0x10],rsi
   14000ee9e:	push   rdi
   14000ee9f:	sub    rsp,0x20
   14000eea3:	mov    ebx,ecx
   14000eea5:	xor    ecx,ecx
   14000eea7:	call   0x14000fc2c
   14000eeac:	nop
   14000eead:	test   ebx,ebx
   14000eeaf:	jne    0x14000eeca
   14000eeb1:	lea    rdi,[rip+0x2f7a8]        # 0x14003e660
   14000eeb8:	mov    rcx,QWORD PTR [rip+0x2f7a1]        # 0x14003e660
   14000eebf:	call   QWORD PTR [rip+0x1d253]        # 0x14002c118
   14000eec5:	lea    esi,[rbx+0x2]
   14000eec8:	jmp    0x14000eee3
   14000eeca:	lea    rdi,[rip+0x2f797]        # 0x14003e668
   14000eed1:	mov    rcx,QWORD PTR [rip+0x2f790]        # 0x14003e668
   14000eed8:	call   QWORD PTR [rip+0x1d23a]        # 0x14002c118
   14000eede:	mov    esi,0x15
   14000eee3:	mov    rbx,rax
   14000eee6:	cmp    rax,0x2
   14000eeea:	jb     0x14000eef7
   14000eeec:	xor    ecx,ecx
   14000eeee:	call   QWORD PTR [rip+0x1d21c]        # 0x14002c110
   14000eef4:	mov    QWORD PTR [rdi],rax
   14000eef7:	xor    ecx,ecx
   14000eef9:	call   0x14000fe48
   14000eefe:	test   rbx,rbx
   14000ef01:	jne    0x14000ef07
   14000ef03:	xor    eax,eax
   14000ef05:	jmp    0x14000ef16
   14000ef07:	cmp    rbx,0x1
   14000ef0b:	je     0x14000ef11
   14000ef0d:	mov    ecx,esi
   14000ef0f:	call   rbx
   14000ef11:	mov    eax,0x1
   14000ef16:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ef1b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ef20:	add    rsp,0x20
   14000ef24:	pop    rdi
   14000ef25:	ret    
   14000ef26:	int3   
   14000ef27:	int3   
   14000ef28:	mov    QWORD PTR [rsp+0x18],rbx
   14000ef2d:	mov    QWORD PTR [rsp+0x20],rsi
   14000ef32:	push   rdi
   14000ef33:	push   r12
   14000ef35:	push   r13
   14000ef37:	push   r14
   14000ef39:	push   r15
   14000ef3b:	sub    rsp,0x30
   14000ef3f:	mov    ebx,ecx
   14000ef41:	xor    r13d,r13d
   14000ef44:	and    DWORD PTR [rsp+0x68],r13d
   14000ef49:	xor    edi,edi
   14000ef4b:	mov    DWORD PTR [rsp+0x60],edi
   14000ef4f:	xor    esi,esi
   14000ef51:	mov    edx,ecx
   14000ef53:	sub    edx,0x2
   14000ef56:	je     0x14000f020
   14000ef5c:	sub    edx,0x2
   14000ef5f:	je     0x14000efc3
   14000ef61:	sub    edx,0x2
   14000ef64:	je     0x14000efb3
   14000ef66:	sub    edx,0x2
   14000ef69:	je     0x14000efc3
   14000ef6b:	sub    edx,0x3
   14000ef6e:	je     0x14000efc3
   14000ef70:	sub    edx,0x4
   14000ef73:	je     0x14000efa3
   14000ef75:	sub    edx,0x6
   14000ef78:	je     0x14000ef90
   14000ef7a:	dec    edx
   14000ef7c:	je     0x14000efb3
   14000ef7e:	call   0x140009cb4
   14000ef83:	mov    DWORD PTR [rax],0x16
   14000ef89:	call   0x140008d58
   14000ef8e:	jmp    0x14000efd0
   14000ef90:	lea    r14,[rip+0x2f6d1]        # 0x14003e668
   14000ef97:	mov    rcx,QWORD PTR [rip+0x2f6ca]        # 0x14003e668
   14000ef9e:	jmp    0x14000f02e
   14000efa3:	lea    r14,[rip+0x2f6ce]        # 0x14003e678
   14000efaa:	mov    rcx,QWORD PTR [rip+0x2f6c7]        # 0x14003e678
   14000efb1:	jmp    0x14000f02e
   14000efb3:	lea    r14,[rip+0x2f6b6]        # 0x14003e670
   14000efba:	mov    rcx,QWORD PTR [rip+0x2f6af]        # 0x14003e670
   14000efc1:	jmp    0x14000f02e
   14000efc3:	call   0x14000a410
   14000efc8:	mov    rsi,rax
   14000efcb:	test   rax,rax
   14000efce:	jne    0x14000efd8
   14000efd0:	or     eax,0xffffffff
   14000efd3:	jmp    0x14000f143
   14000efd8:	mov    rdx,QWORD PTR [rax+0xa0]
   14000efdf:	mov    rcx,rdx
   14000efe2:	movsxd r8,DWORD PTR [rip+0x1fbf7]        # 0x14002ebe0
   14000efe9:	cmp    DWORD PTR [rcx+0x4],ebx
   14000efec:	je     0x14000f001
   14000efee:	add    rcx,0x10
   14000eff2:	mov    rax,r8
   14000eff5:	shl    rax,0x4
   14000eff9:	add    rax,rdx
   14000effc:	cmp    rcx,rax
   14000efff:	jb     0x14000efe9
   14000f001:	mov    rax,r8
   14000f004:	shl    rax,0x4
   14000f008:	add    rax,rdx
   14000f00b:	cmp    rcx,rax
   14000f00e:	jae    0x14000f015
   14000f010:	cmp    DWORD PTR [rcx+0x4],ebx
   14000f013:	je     0x14000f017
   14000f015:	xor    ecx,ecx
   14000f017:	lea    r14,[rcx+0x8]
   14000f01b:	mov    r15,QWORD PTR [r14]
   14000f01e:	jmp    0x14000f040
   14000f020:	lea    r14,[rip+0x2f639]        # 0x14003e660
   14000f027:	mov    rcx,QWORD PTR [rip+0x2f632]        # 0x14003e660
   14000f02e:	mov    edi,0x1
   14000f033:	mov    DWORD PTR [rsp+0x60],edi
   14000f037:	call   QWORD PTR [rip+0x1d0db]        # 0x14002c118
   14000f03d:	mov    r15,rax
   14000f040:	cmp    r15,0x1
   14000f044:	jne    0x14000f04d
   14000f046:	xor    eax,eax
   14000f048:	jmp    0x14000f143
   14000f04d:	test   r15,r15
   14000f050:	jne    0x14000f05c
   14000f052:	lea    ecx,[r15+0x3]
   14000f056:	call   0x14000829c
   14000f05b:	int3   
   14000f05c:	test   edi,edi
   14000f05e:	je     0x14000f068
   14000f060:	xor    ecx,ecx
   14000f062:	call   0x14000fc2c
   14000f067:	nop
   14000f068:	mov    r12d,0x910
   14000f06e:	cmp    ebx,0xb
   14000f071:	ja     0x14000f0a6
   14000f073:	bt     r12d,ebx
   14000f077:	jae    0x14000f0a6
   14000f079:	mov    r13,QWORD PTR [rsi+0xa8]
   14000f080:	mov    QWORD PTR [rsp+0x28],r13
   14000f085:	and    QWORD PTR [rsi+0xa8],0x0
   14000f08d:	cmp    ebx,0x8
   14000f090:	jne    0x14000f0e4
   14000f092:	mov    eax,DWORD PTR [rsi+0xb0]
   14000f098:	mov    DWORD PTR [rsp+0x68],eax
   14000f09c:	mov    DWORD PTR [rsi+0xb0],0x8c
   14000f0a6:	cmp    ebx,0x8
   14000f0a9:	jne    0x14000f0e4
   14000f0ab:	mov    ecx,DWORD PTR [rip+0x1fb37]        # 0x14002ebe8
   14000f0b1:	mov    edx,ecx
   14000f0b3:	mov    DWORD PTR [rsp+0x20],ecx
   14000f0b7:	mov    eax,DWORD PTR [rip+0x1fb2f]        # 0x14002ebec
   14000f0bd:	add    ecx,eax
   14000f0bf:	cmp    edx,ecx
   14000f0c1:	jge    0x14000f0ef
   14000f0c3:	movsxd rcx,edx
   14000f0c6:	add    rcx,rcx
   14000f0c9:	mov    rax,QWORD PTR [rsi+0xa0]
   14000f0d0:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14000f0d6:	inc    edx
   14000f0d8:	mov    DWORD PTR [rsp+0x20],edx
   14000f0dc:	mov    ecx,DWORD PTR [rip+0x1fb06]        # 0x14002ebe8
   14000f0e2:	jmp    0x14000f0b7
   14000f0e4:	xor    ecx,ecx
   14000f0e6:	call   QWORD PTR [rip+0x1d024]        # 0x14002c110
   14000f0ec:	mov    QWORD PTR [r14],rax
   14000f0ef:	test   edi,edi
   14000f0f1:	je     0x14000f0fa
   14000f0f3:	xor    ecx,ecx
   14000f0f5:	call   0x14000fe48
   14000f0fa:	cmp    ebx,0x8
   14000f0fd:	jne    0x14000f10c
   14000f0ff:	mov    edx,DWORD PTR [rsi+0xb0]
   14000f105:	mov    ecx,ebx
   14000f107:	call   r15
   14000f10a:	jmp    0x14000f111
   14000f10c:	mov    ecx,ebx
   14000f10e:	call   r15
   14000f111:	cmp    ebx,0xb
   14000f114:	ja     0x14000f046
   14000f11a:	bt     r12d,ebx
   14000f11e:	jae    0x14000f046
   14000f124:	mov    QWORD PTR [rsi+0xa8],r13
   14000f12b:	cmp    ebx,0x8
   14000f12e:	jne    0x14000f046
   14000f134:	mov    eax,DWORD PTR [rsp+0x68]
   14000f138:	mov    DWORD PTR [rsi+0xb0],eax
   14000f13e:	jmp    0x14000f046
   14000f143:	mov    rbx,QWORD PTR [rsp+0x70]
   14000f148:	mov    rsi,QWORD PTR [rsp+0x78]
   14000f14d:	add    rsp,0x30
   14000f151:	pop    r15
   14000f153:	pop    r14
   14000f155:	pop    r13
   14000f157:	pop    r12
   14000f159:	pop    rdi
   14000f15a:	ret    
   14000f15b:	int3   
   14000f15c:	mov    r9d,ecx
   14000f15f:	movsxd rcx,DWORD PTR [rip+0x1fa7a]        # 0x14002ebe0
   14000f166:	mov    rax,rdx
   14000f169:	cmp    DWORD PTR [rax+0x4],r9d
   14000f16d:	je     0x14000f182
   14000f16f:	mov    r8,rcx
   14000f172:	add    rax,0x10
   14000f176:	shl    r8,0x4
   14000f17a:	add    r8,rdx
   14000f17d:	cmp    rax,r8
   14000f180:	jb     0x14000f169
   14000f182:	shl    rcx,0x4
   14000f186:	add    rcx,rdx
   14000f189:	cmp    rax,rcx
   14000f18c:	jae    0x14000f194
   14000f18e:	cmp    DWORD PTR [rax+0x4],r9d
   14000f192:	je     0x14000f196
   14000f194:	xor    eax,eax
   14000f196:	ret    
   14000f197:	int3   
   14000f198:	mov    QWORD PTR [rsp+0x8],rbx
   14000f19d:	mov    QWORD PTR [rsp+0x10],rsi
   14000f1a2:	mov    QWORD PTR [rsp+0x18],rdi
   14000f1a7:	push   r14
   14000f1a9:	sub    rsp,0x20
   14000f1ad:	mov    rsi,rdx
   14000f1b0:	mov    edi,ecx
   14000f1b2:	xor    r14d,r14d
   14000f1b5:	xor    ebx,ebx
   14000f1b7:	lea    rax,[rdx-0x3]
   14000f1bb:	cmp    rax,0x1
   14000f1bf:	jbe    0x14000f3ea
   14000f1c5:	cmp    ecx,0x16
   14000f1c8:	ja     0x14000f304
   14000f1ce:	mov    eax,0x608044
   14000f1d3:	bt     eax,ecx
   14000f1d6:	jae    0x14000f304
   14000f1dc:	xor    ecx,ecx
   14000f1de:	call   0x14000fc2c
   14000f1e3:	nop
   14000f1e4:	cmp    edi,0x2
   14000f1e7:	je     0x14000f1ee
   14000f1e9:	cmp    edi,0x15
   14000f1ec:	jne    0x14000f22b
   14000f1ee:	cmp    DWORD PTR [rip+0x2f48b],0x0        # 0x14003e680
   14000f1f5:	jne    0x14000f22b
   14000f1f7:	mov    edx,0x1
   14000f1fc:	lea    rcx,[rip+0xfffffffffffffc91]        # 0x14000ee94
   14000f203:	call   QWORD PTR [rip+0x1ceff]        # 0x14002c108
   14000f209:	cmp    eax,0x1
   14000f20c:	jne    0x14000f216
   14000f20e:	mov    DWORD PTR [rip+0x2f46c],eax        # 0x14003e680
   14000f214:	jmp    0x14000f22b
   14000f216:	call   0x140009c44
   14000f21b:	mov    rbx,rax
   14000f21e:	call   QWORD PTR [rip+0x1cf2c]        # 0x14002c150
   14000f224:	mov    DWORD PTR [rbx],eax
   14000f226:	mov    ebx,0x1
   14000f22b:	mov    ecx,edi
   14000f22d:	sub    ecx,0x2
   14000f230:	je     0x14000f2ca
   14000f236:	sub    ecx,0x4
   14000f239:	je     0x14000f2a2
   14000f23b:	sub    ecx,0x9
   14000f23e:	je     0x14000f27a
   14000f240:	sub    ecx,0x6
   14000f243:	je     0x14000f24e
   14000f245:	dec    ecx
   14000f247:	je     0x14000f2a2
   14000f249:	jmp    0x14000f2f0
   14000f24e:	mov    rcx,QWORD PTR [rip+0x2f413]        # 0x14003e668
   14000f255:	call   QWORD PTR [rip+0x1cebd]        # 0x14002c118
   14000f25b:	mov    r14,rax
   14000f25e:	cmp    rsi,0x2
   14000f262:	je     0x14000f2f0
   14000f268:	mov    rcx,rsi
   14000f26b:	call   QWORD PTR [rip+0x1ce9f]        # 0x14002c110
   14000f271:	mov    QWORD PTR [rip+0x2f3f0],rax        # 0x14003e668
   14000f278:	jmp    0x14000f2f0
   14000f27a:	mov    rcx,QWORD PTR [rip+0x2f3f7]        # 0x14003e678
   14000f281:	call   QWORD PTR [rip+0x1ce91]        # 0x14002c118
   14000f287:	mov    r14,rax
   14000f28a:	cmp    rsi,0x2
   14000f28e:	je     0x14000f2f0
   14000f290:	mov    rcx,rsi
   14000f293:	call   QWORD PTR [rip+0x1ce77]        # 0x14002c110
   14000f299:	mov    QWORD PTR [rip+0x2f3d8],rax        # 0x14003e678
   14000f2a0:	jmp    0x14000f2f0
   14000f2a2:	mov    rcx,QWORD PTR [rip+0x2f3c7]        # 0x14003e670
   14000f2a9:	call   QWORD PTR [rip+0x1ce69]        # 0x14002c118
   14000f2af:	mov    r14,rax
   14000f2b2:	cmp    rsi,0x2
   14000f2b6:	je     0x14000f2f0
   14000f2b8:	mov    rcx,rsi
   14000f2bb:	call   QWORD PTR [rip+0x1ce4f]        # 0x14002c110
   14000f2c1:	mov    QWORD PTR [rip+0x2f3a8],rax        # 0x14003e670
   14000f2c8:	jmp    0x14000f2f0
   14000f2ca:	mov    rcx,QWORD PTR [rip+0x2f38f]        # 0x14003e660
   14000f2d1:	call   QWORD PTR [rip+0x1ce41]        # 0x14002c118
   14000f2d7:	mov    r14,rax
   14000f2da:	cmp    rsi,0x2
   14000f2de:	je     0x14000f2f0
   14000f2e0:	mov    rcx,rsi
   14000f2e3:	call   QWORD PTR [rip+0x1ce27]        # 0x14002c110
   14000f2e9:	mov    QWORD PTR [rip+0x2f370],rax        # 0x14003e660
   14000f2f0:	xor    ecx,ecx
   14000f2f2:	call   0x14000fe48
   14000f2f7:	test   ebx,ebx
   14000f2f9:	jne    0x14000f3ea
   14000f2ff:	jmp    0x14000f3e5
   14000f304:	cmp    ecx,0xb
   14000f307:	ja     0x14000f3ea
   14000f30d:	mov    eax,0x910
   14000f312:	bt     eax,ecx
   14000f315:	jae    0x14000f3ea
   14000f31b:	call   0x14000a410
   14000f320:	mov    rbx,rax
   14000f323:	test   rax,rax
   14000f326:	je     0x14000f3ea
   14000f32c:	lea    r14,[rip+0x1f7ed]        # 0x14002eb20
   14000f333:	cmp    QWORD PTR [rax+0xa0],r14
   14000f33a:	jne    0x14000f36a
   14000f33c:	movsxd rcx,DWORD PTR [rip+0x1f8a1]        # 0x14002ebe4
   14000f343:	call   0x140008684
   14000f348:	mov    QWORD PTR [rbx+0xa0],rax
   14000f34f:	test   rax,rax
   14000f352:	je     0x14000f3ea
   14000f358:	movsxd r8,DWORD PTR [rip+0x1f885]        # 0x14002ebe4
   14000f35f:	mov    rdx,r14
   14000f362:	mov    rcx,rax
   14000f365:	call   0x1400059f0
   14000f36a:	mov    rdx,QWORD PTR [rbx+0xa0]
   14000f371:	mov    rcx,rdx
   14000f374:	movsxd r8,DWORD PTR [rip+0x1f865]        # 0x14002ebe0
   14000f37b:	cmp    DWORD PTR [rcx+0x4],edi
   14000f37e:	je     0x14000f393
   14000f380:	add    rcx,0x10
   14000f384:	mov    rax,r8
   14000f387:	shl    rax,0x4
   14000f38b:	add    rax,rdx
   14000f38e:	cmp    rcx,rax
   14000f391:	jb     0x14000f37b
   14000f393:	mov    rax,r8
   14000f396:	shl    rax,0x4
   14000f39a:	add    rax,rdx
   14000f39d:	cmp    rcx,rax
   14000f3a0:	jae    0x14000f3a7
   14000f3a2:	cmp    DWORD PTR [rcx+0x4],edi
   14000f3a5:	je     0x14000f3a9
   14000f3a7:	xor    ecx,ecx
   14000f3a9:	test   rcx,rcx
   14000f3ac:	je     0x14000f3ea
   14000f3ae:	mov    r14,QWORD PTR [rcx+0x8]
   14000f3b2:	cmp    rsi,0x2
   14000f3b6:	je     0x14000f3e5
   14000f3b8:	lea    rdx,[rcx+0x4]
   14000f3bc:	jmp    0x14000f3e1
   14000f3be:	mov    QWORD PTR [rdx+0x4],rsi
   14000f3c2:	lea    rdx,[rdx+0x10]
   14000f3c6:	movsxd rcx,DWORD PTR [rip+0x1f813]        # 0x14002ebe0
   14000f3cd:	shl    rcx,0x4
   14000f3d1:	add    rcx,QWORD PTR [rbx+0xa0]
   14000f3d8:	lea    rax,[rdx-0x4]
   14000f3dc:	cmp    rax,rcx
   14000f3df:	jae    0x14000f3e5
   14000f3e1:	cmp    DWORD PTR [rdx],edi
   14000f3e3:	je     0x14000f3be
   14000f3e5:	mov    rax,r14
   14000f3e8:	jmp    0x14000f40d
   14000f3ea:	cmp    edi,0x11
   14000f3ed:	ja     0x14000f3f9
   14000f3ef:	mov    eax,0x3200a
   14000f3f4:	bt     eax,edi
   14000f3f7:	jb     0x14000f409
   14000f3f9:	call   0x140009cb4
   14000f3fe:	mov    DWORD PTR [rax],0x16
   14000f404:	call   0x140008d58
   14000f409:	or     rax,0xffffffffffffffff
   14000f40d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f412:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f417:	mov    rdi,QWORD PTR [rsp+0x40]
   14000f41c:	add    rsp,0x20
   14000f420:	pop    r14
   14000f422:	ret    
   14000f423:	int3   
   14000f424:	rex push rbx
   14000f426:	sub    rsp,0x20
   14000f42a:	xor    ebx,ebx
   14000f42c:	test   r9,r9
   14000f42f:	jne    0x14000f43f
   14000f431:	test   rcx,rcx
   14000f434:	jne    0x14000f444
   14000f436:	test   rdx,rdx
   14000f439:	jne    0x14000f459
   14000f43b:	xor    eax,eax
   14000f43d:	jmp    0x14000f46c
   14000f43f:	test   rcx,rcx
   14000f442:	je     0x14000f459
   14000f444:	test   rdx,rdx
   14000f447:	je     0x14000f459
   14000f449:	test   r9,r9
   14000f44c:	jne    0x14000f452
   14000f44e:	mov    BYTE PTR [rcx],bl
   14000f450:	jmp    0x14000f43b
   14000f452:	test   r8,r8
   14000f455:	jne    0x14000f472
   14000f457:	mov    BYTE PTR [rcx],bl
   14000f459:	call   0x140009cb4
   14000f45e:	mov    ebx,0x16
   14000f463:	mov    DWORD PTR [rax],ebx
   14000f465:	call   0x140008d58
   14000f46a:	mov    eax,ebx
   14000f46c:	add    rsp,0x20
   14000f470:	pop    rbx
   14000f471:	ret    
   14000f472:	mov    r11,rcx
   14000f475:	mov    r10,rdx
   14000f478:	cmp    r9,0xffffffffffffffff
   14000f47c:	jne    0x14000f496
   14000f47e:	sub    r11,r8
   14000f481:	mov    al,BYTE PTR [r8]
   14000f484:	mov    BYTE PTR [r11+r8*1],al
   14000f488:	inc    r8
   14000f48b:	test   al,al
   14000f48d:	je     0x14000f4b9
   14000f48f:	dec    r10
   14000f492:	jne    0x14000f481
   14000f494:	jmp    0x14000f4b9
   14000f496:	sub    r8,rcx
   14000f499:	mov    al,BYTE PTR [r8+r11*1]
   14000f49d:	mov    BYTE PTR [r11],al
   14000f4a0:	inc    r11
   14000f4a3:	test   al,al
   14000f4a5:	je     0x14000f4b1
   14000f4a7:	dec    r10
   14000f4aa:	je     0x14000f4b1
   14000f4ac:	dec    r9
   14000f4af:	jne    0x14000f499
   14000f4b1:	test   r9,r9
   14000f4b4:	jne    0x14000f4b9
   14000f4b6:	mov    BYTE PTR [r11],bl
   14000f4b9:	test   r10,r10
   14000f4bc:	jne    0x14000f43b
   14000f4c2:	cmp    r9,0xffffffffffffffff
   14000f4c6:	jne    0x14000f4d2
   14000f4c8:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   14000f4cc:	lea    eax,[r10+0x50]
   14000f4d0:	jmp    0x14000f46c
   14000f4d2:	mov    BYTE PTR [rcx],bl
   14000f4d4:	call   0x140009cb4
   14000f4d9:	mov    ebx,0x22
   14000f4de:	jmp    0x14000f463
   14000f4e0:	rex push rbp
   14000f4e2:	push   r12
   14000f4e4:	push   r13
   14000f4e6:	push   r14
   14000f4e8:	push   r15
   14000f4ea:	sub    rsp,0x50
   14000f4ee:	lea    rbp,[rsp+0x40]
   14000f4f3:	mov    QWORD PTR [rbp+0x40],rbx
   14000f4f7:	mov    QWORD PTR [rbp+0x48],rsi
   14000f4fb:	mov    QWORD PTR [rbp+0x50],rdi
   14000f4ff:	mov    rax,QWORD PTR [rip+0x2ccca]        # 0x14003c1d0
   14000f506:	xor    rax,rbp
   14000f509:	mov    QWORD PTR [rbp+0x0],rax
   14000f50d:	mov    rax,QWORD PTR [rcx]
   14000f510:	mov    r15d,r8d
   14000f513:	mov    r12,rdx
   14000f516:	mov    r14d,DWORD PTR [rax+0x4]
   14000f51a:	mov    r13,r9
   14000f51d:	xor    r8d,r8d
   14000f520:	xor    r9d,r9d
   14000f523:	mov    edx,r15d
   14000f526:	mov    rcx,r12
   14000f529:	xor    edi,edi
   14000f52b:	call   0x14000fa04
   14000f530:	movsxd rsi,eax
   14000f533:	test   eax,eax
   14000f535:	jne    0x14000f53e
   14000f537:	xor    eax,eax
   14000f539:	jmp    0x14000f624
   14000f53e:	jle    0x14000f5b7
   14000f540:	xor    edx,edx
   14000f542:	lea    rax,[rdx-0x20]
   14000f546:	div    rsi
   14000f549:	cmp    rax,0x2
   14000f54d:	jb     0x14000f5b7
   14000f54f:	lea    rcx,[rsi+rsi*1]
   14000f553:	lea    rax,[rcx+0x10]
   14000f557:	cmp    rax,rcx
   14000f55a:	jbe    0x14000f5b7
   14000f55c:	lea    rcx,[rsi*2+0x10]
   14000f564:	cmp    rcx,0x400
   14000f56b:	ja     0x14000f59e
   14000f56d:	lea    rax,[rcx+0xf]
   14000f571:	cmp    rax,rcx
   14000f574:	ja     0x14000f580
   14000f576:	movabs rax,0xffffffffffffff0
   14000f580:	and    rax,0xfffffffffffffff0
   14000f584:	call   0x140006e30
   14000f589:	sub    rsp,rax
   14000f58c:	lea    rbx,[rsp+0x40]
   14000f591:	test   rbx,rbx
   14000f594:	je     0x14000f537
   14000f596:	mov    DWORD PTR [rbx],0xcccc
   14000f59c:	jmp    0x14000f5b1
   14000f59e:	call   0x140007c64
   14000f5a3:	mov    rbx,rax
   14000f5a6:	test   rax,rax
   14000f5a9:	je     0x14000f5ba
   14000f5ab:	mov    DWORD PTR [rax],0xdddd
   14000f5b1:	add    rbx,0x10
   14000f5b5:	jmp    0x14000f5ba
   14000f5b7:	mov    rbx,rdi
   14000f5ba:	test   rbx,rbx
   14000f5bd:	je     0x14000f537
   14000f5c3:	mov    r9d,esi
   14000f5c6:	mov    r8,rbx
   14000f5c9:	mov    edx,r15d
   14000f5cc:	mov    rcx,r12
   14000f5cf:	call   0x14000fa04
   14000f5d4:	test   eax,eax
   14000f5d6:	je     0x14000f611
   14000f5d8:	mov    eax,DWORD PTR [rbp+0x60]
   14000f5db:	or     r9d,0xffffffff
   14000f5df:	xor    edx,edx
   14000f5e1:	mov    QWORD PTR [rsp+0x38],rdi
   14000f5e6:	mov    r8,rbx
   14000f5e9:	mov    ecx,r14d
   14000f5ec:	mov    QWORD PTR [rsp+0x30],rdi
   14000f5f1:	test   eax,eax
   14000f5f3:	jne    0x14000f600
   14000f5f5:	mov    DWORD PTR [rsp+0x28],edi
   14000f5f9:	mov    QWORD PTR [rsp+0x20],rdi
   14000f5fe:	jmp    0x14000f609
   14000f600:	mov    DWORD PTR [rsp+0x28],eax
   14000f604:	mov    QWORD PTR [rsp+0x20],r13
   14000f609:	call   QWORD PTR [rip+0x1cb81]        # 0x14002c190
   14000f60f:	mov    edi,eax
   14000f611:	lea    rcx,[rbx-0x10]
   14000f615:	cmp    DWORD PTR [rcx],0xdddd
   14000f61b:	jne    0x14000f622
   14000f61d:	call   0x140007dc0
   14000f622:	mov    eax,edi
   14000f624:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f628:	xor    rcx,rbp
   14000f62b:	call   0x14000c380
   14000f630:	mov    rbx,QWORD PTR [rbp+0x40]
   14000f634:	mov    rsi,QWORD PTR [rbp+0x48]
   14000f638:	mov    rdi,QWORD PTR [rbp+0x50]
   14000f63c:	lea    rsp,[rbp+0x10]
   14000f640:	pop    r15
   14000f642:	pop    r14
   14000f644:	pop    r13
   14000f646:	pop    r12
   14000f648:	pop    rbp
   14000f649:	ret    
   14000f64a:	int3   
   14000f64b:	int3   
   14000f64c:	xor    eax,eax
   14000f64e:	lea    rdx,[rcx+0x10]
   14000f652:	cmp    rdx,rcx
   14000f655:	seta   al
   14000f658:	ret    
   14000f659:	int3   
   14000f65a:	int3   
   14000f65b:	int3   
   14000f65c:	test   rcx,rcx
   14000f65f:	je     0x14000f667
   14000f661:	mov    DWORD PTR [rcx],edx
   14000f663:	add    rcx,0x10
   14000f667:	mov    rax,rcx
   14000f66a:	ret    
   14000f66b:	int3   
   14000f66c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f671:	mov    QWORD PTR [rsp+0x10],rsi
   14000f676:	push   rdi
   14000f677:	sub    rsp,0x50
   14000f67b:	mov    rsi,rdx
   14000f67e:	mov    rdx,rcx
   14000f681:	lea    rcx,[rsp+0x30]
   14000f686:	mov    rbx,r9
   14000f689:	mov    edi,r8d
   14000f68c:	call   0x140008fac
   14000f691:	mov    eax,DWORD PTR [rsp+0x80]
   14000f698:	lea    rcx,[rsp+0x30]
   14000f69d:	mov    r9,rbx
   14000f6a0:	mov    r8d,edi
   14000f6a3:	mov    rdx,rsi
   14000f6a6:	mov    DWORD PTR [rsp+0x20],eax
   14000f6aa:	call   0x14000f4e0
   14000f6af:	cmp    BYTE PTR [rsp+0x48],0x0
   14000f6b4:	je     0x14000f6c2
   14000f6b6:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f6bb:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000f6c2:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f6c7:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f6cc:	add    rsp,0x50
   14000f6d0:	pop    rdi
   14000f6d1:	ret    
   14000f6d2:	int3   
   14000f6d3:	int3   
   14000f6d4:	sub    rsp,0x28
   14000f6d8:	test   rcx,rcx
   14000f6db:	je     0x14000f6ee
   14000f6dd:	sub    rcx,0x10
   14000f6e1:	cmp    DWORD PTR [rcx],0xdddd
   14000f6e7:	jne    0x14000f6ee
   14000f6e9:	call   0x140007dc0
   14000f6ee:	add    rsp,0x28
   14000f6f2:	ret    
   14000f6f3:	int3   
   14000f6f4:	mov    r10d,ecx
   14000f6f7:	xor    r8d,r8d
   14000f6fa:	mov    r9d,0xe3
   14000f700:	lea    eax,[r9+r8*1]
   14000f704:	lea    r11,[rip+0x20385]        # 0x14002fa90
   14000f70b:	mov    ecx,r10d
   14000f70e:	cdq    
   14000f70f:	sub    eax,edx
   14000f711:	sar    eax,1
   14000f713:	movsxd rdx,eax
   14000f716:	shl    rdx,0x4
   14000f71a:	sub    ecx,DWORD PTR [rdx+r11*1]
   14000f71e:	je     0x14000f736
   14000f720:	test   ecx,ecx
   14000f722:	jns    0x14000f72a
   14000f724:	lea    r9d,[rax-0x1]
   14000f728:	jmp    0x14000f72e
   14000f72a:	lea    r8d,[rax+0x1]
   14000f72e:	cmp    r8d,r9d
   14000f731:	jle    0x14000f700
   14000f733:	or     eax,0xffffffff
   14000f736:	ret    
   14000f737:	int3   
   14000f738:	mov    rax,rsp
   14000f73b:	mov    QWORD PTR [rax+0x8],rbx
   14000f73f:	mov    QWORD PTR [rax+0x10],rbp
   14000f743:	mov    QWORD PTR [rax+0x18],rsi
   14000f747:	mov    QWORD PTR [rax+0x20],rdi
   14000f74b:	push   r14
   14000f74d:	sub    rsp,0x20
   14000f751:	mov    rbp,rcx
   14000f754:	xor    edi,edi
   14000f756:	mov    esi,0xe3
   14000f75b:	lea    r14,[rip+0x2116e]        # 0x1400308d0
   14000f762:	lea    eax,[rsi+rdi*1]
   14000f765:	mov    r8d,0x55
   14000f76b:	mov    rcx,rbp
   14000f76e:	cdq    
   14000f76f:	sub    eax,edx
   14000f771:	sar    eax,1
   14000f773:	movsxd rbx,eax
   14000f776:	mov    rdx,rbx
   14000f779:	add    rdx,rdx
   14000f77c:	mov    rdx,QWORD PTR [r14+rdx*8]
   14000f780:	call   0x14000fbd4
   14000f785:	test   eax,eax
   14000f787:	je     0x14000f79c
   14000f789:	jns    0x14000f790
   14000f78b:	lea    esi,[rbx-0x1]
   14000f78e:	jmp    0x14000f793
   14000f790:	lea    edi,[rbx+0x1]
   14000f793:	cmp    edi,esi
   14000f795:	jle    0x14000f762
   14000f797:	or     eax,0xffffffff
   14000f79a:	jmp    0x14000f7a7
   14000f79c:	mov    rax,rbx
   14000f79f:	add    rax,rax
   14000f7a2:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   14000f7a7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f7ac:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f7b1:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f7b6:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f7bb:	add    rsp,0x20
   14000f7bf:	pop    r14
   14000f7c1:	ret    
   14000f7c2:	int3   
   14000f7c3:	int3   
   14000f7c4:	mov    r11,rsp
   14000f7c7:	mov    QWORD PTR [r11+0x8],rbx
   14000f7cb:	mov    QWORD PTR [r11+0x10],rsi
   14000f7cf:	push   rdi
   14000f7d0:	sub    rsp,0x50
   14000f7d4:	mov    r10,QWORD PTR [rip+0x308ad]        # 0x140040088
   14000f7db:	mov    ebx,r9d
   14000f7de:	mov    rdi,r8
   14000f7e1:	xor    r10,QWORD PTR [rip+0x2c9e8]        # 0x14003c1d0
   14000f7e8:	mov    esi,edx
   14000f7ea:	je     0x14000f816
   14000f7ec:	xor    eax,eax
   14000f7ee:	mov    QWORD PTR [r11-0x18],rax
   14000f7f2:	mov    QWORD PTR [r11-0x20],rax
   14000f7f6:	mov    QWORD PTR [r11-0x28],rax
   14000f7fa:	mov    eax,DWORD PTR [rsp+0x88]
   14000f801:	mov    DWORD PTR [rsp+0x28],eax
   14000f805:	mov    rax,QWORD PTR [rsp+0x80]
   14000f80d:	mov    QWORD PTR [r11-0x38],rax
   14000f811:	call   r10
   14000f814:	jmp    0x14000f843
   14000f816:	call   0x14000f904
   14000f81b:	mov    r9d,ebx
   14000f81e:	mov    r8,rdi
   14000f821:	mov    ecx,eax
   14000f823:	mov    eax,DWORD PTR [rsp+0x88]
   14000f82a:	mov    edx,esi
   14000f82c:	mov    DWORD PTR [rsp+0x28],eax
   14000f830:	mov    rax,QWORD PTR [rsp+0x80]
   14000f838:	mov    QWORD PTR [rsp+0x20],rax
   14000f83d:	call   QWORD PTR [rip+0x1c8ad]        # 0x14002c0f0
   14000f843:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f848:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f84d:	add    rsp,0x50
   14000f851:	pop    rdi
   14000f852:	ret    
   14000f853:	int3   
   14000f854:	mov    QWORD PTR [rsp+0x8],rbx
   14000f859:	mov    QWORD PTR [rsp+0x10],rbp
   14000f85e:	mov    QWORD PTR [rsp+0x18],rsi
   14000f863:	push   rdi
   14000f864:	sub    rsp,0x30
   14000f868:	movsxd rbx,r8d
   14000f86b:	mov    rsi,rdx
   14000f86e:	test   ecx,0xfffff3ff
   14000f874:	jne    0x14000f87e
   14000f876:	cmp    ecx,0xc00
   14000f87c:	jne    0x14000f88d
   14000f87e:	test   rdx,rdx
   14000f881:	jne    0x14000f888
   14000f883:	test   r8d,r8d
   14000f886:	jg     0x14000f88d
   14000f888:	test   r8d,r8d
   14000f88b:	jns    0x14000f891
   14000f88d:	xor    eax,eax
   14000f88f:	jmp    0x14000f8d8
   14000f891:	call   0x14000f6f4
   14000f896:	test   eax,eax
   14000f898:	js     0x14000f88d
   14000f89a:	cdqe   
   14000f89c:	lea    rbp,[rip+0x201f5]        # 0x14002fa98
   14000f8a3:	mov    edx,0x55
   14000f8a8:	add    rax,rax
   14000f8ab:	mov    rbp,QWORD PTR [rbp+rax*8+0x0]
   14000f8b0:	mov    rcx,rbp
   14000f8b3:	call   0x14001c82c
   14000f8b8:	mov    rdi,rax
   14000f8bb:	test   ebx,ebx
   14000f8bd:	jle    0x14000f8d5
   14000f8bf:	cmp    eax,ebx
   14000f8c1:	jge    0x14000f88d
   14000f8c3:	mov    rdx,rbx
   14000f8c6:	mov    r8,rbp
   14000f8c9:	mov    rcx,rsi
   14000f8cc:	call   0x14001c440
   14000f8d1:	test   eax,eax
   14000f8d3:	jne    0x14000f8ed
   14000f8d5:	lea    eax,[rdi+0x1]
   14000f8d8:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f8dd:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f8e2:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f8e7:	add    rsp,0x30
   14000f8eb:	pop    rdi
   14000f8ec:	ret    
   14000f8ed:	and    QWORD PTR [rsp+0x20],0x0
   14000f8f3:	xor    r9d,r9d
   14000f8f6:	xor    r8d,r8d
   14000f8f9:	xor    edx,edx
   14000f8fb:	xor    ecx,ecx
   14000f8fd:	call   0x140008da8
   14000f902:	int3   
   14000f903:	int3   
   14000f904:	sub    rsp,0x28
   14000f908:	test   rcx,rcx
   14000f90b:	je     0x14000f92f
   14000f90d:	call   0x14000f738
   14000f912:	test   eax,eax
   14000f914:	js     0x14000f92f
   14000f916:	cdqe   
   14000f918:	cmp    rax,0xe4
   14000f91e:	jae    0x14000f92f
   14000f920:	lea    rcx,[rip+0x20169]        # 0x14002fa90
   14000f927:	add    rax,rax
   14000f92a:	mov    eax,DWORD PTR [rcx+rax*8]
   14000f92d:	jmp    0x14000f931
   14000f92f:	xor    eax,eax
   14000f931:	add    rsp,0x28
   14000f935:	ret    
   14000f936:	int3   
   14000f937:	int3   
   14000f938:	xor    r8d,r8d
   14000f93b:	xor    edx,edx
   14000f93d:	rex.W jmp QWORD PTR [rip+0x2ed44]        # 0x14003e688
   14000f944:	sub    rsp,0x28
   14000f948:	mov    rax,QWORD PTR [rip+0x30741]        # 0x140040090
   14000f94f:	xor    rax,QWORD PTR [rip+0x2c87a]        # 0x14003c1d0
   14000f956:	je     0x14000f962
   14000f958:	xor    r9d,r9d
   14000f95b:	add    rsp,0x28
   14000f95f:	rex.W jmp rax
   14000f962:	mov    QWORD PTR [rip+0x2ed1f],rcx        # 0x14003e688
   14000f969:	lea    rcx,[rip+0xffffffffffffffc8]        # 0x14000f938
   14000f970:	mov    edx,0x1
   14000f975:	call   QWORD PTR [rip+0x1c725]        # 0x14002c0a0
   14000f97b:	and    QWORD PTR [rip+0x2ed05],0x0        # 0x14003e688
   14000f983:	add    rsp,0x28
   14000f987:	ret    
   14000f988:	mov    r11,rsp
   14000f98b:	mov    QWORD PTR [r11+0x8],rbx
   14000f98f:	mov    QWORD PTR [r11+0x10],rsi
   14000f993:	push   rdi
   14000f994:	sub    rsp,0x40
   14000f998:	mov    r10,QWORD PTR [rip+0x306f9]        # 0x140040098
   14000f99f:	mov    rbx,r9
   14000f9a2:	mov    rdi,r8
   14000f9a5:	xor    r10,QWORD PTR [rip+0x2c824]        # 0x14003c1d0
   14000f9ac:	mov    esi,edx
   14000f9ae:	je     0x14000f9cb
   14000f9b0:	and    QWORD PTR [r11-0x18],0x0
   14000f9b5:	mov    eax,DWORD PTR [rsp+0x78]
   14000f9b9:	mov    DWORD PTR [rsp+0x28],eax
   14000f9bd:	mov    rax,QWORD PTR [rsp+0x70]
   14000f9c2:	mov    QWORD PTR [r11-0x28],rax
   14000f9c6:	call   r10
   14000f9c9:	jmp    0x14000f9f2
   14000f9cb:	call   0x14000f904
   14000f9d0:	mov    r9,rbx
   14000f9d3:	mov    r8,rdi
   14000f9d6:	mov    ecx,eax
   14000f9d8:	mov    eax,DWORD PTR [rsp+0x78]
   14000f9dc:	mov    edx,esi
   14000f9de:	mov    DWORD PTR [rsp+0x28],eax
   14000f9e2:	mov    rax,QWORD PTR [rsp+0x70]
   14000f9e7:	mov    QWORD PTR [rsp+0x20],rax
   14000f9ec:	call   QWORD PTR [rip+0x1c70e]        # 0x14002c100
   14000f9f2:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f9f7:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f9fc:	add    rsp,0x40
   14000fa00:	pop    rdi
   14000fa01:	ret    
   14000fa02:	int3   
   14000fa03:	int3   
   14000fa04:	mov    QWORD PTR [rsp+0x8],rbx
   14000fa09:	mov    QWORD PTR [rsp+0x10],rsi
   14000fa0e:	push   rdi
   14000fa0f:	sub    rsp,0x20
   14000fa13:	mov    rax,QWORD PTR [rip+0x30686]        # 0x1400400a0
   14000fa1a:	mov    ebx,r9d
   14000fa1d:	mov    rdi,r8
   14000fa20:	xor    rax,QWORD PTR [rip+0x2c7a9]        # 0x14003c1d0
   14000fa27:	mov    esi,edx
   14000fa29:	je     0x14000fa2f
   14000fa2b:	call   rax
   14000fa2d:	jmp    0x14000fa44
   14000fa2f:	call   0x14000f904
   14000fa34:	mov    r9d,ebx
   14000fa37:	mov    r8,rdi
   14000fa3a:	mov    ecx,eax
   14000fa3c:	mov    edx,esi
   14000fa3e:	call   QWORD PTR [rip+0x1c69c]        # 0x14002c0e0
   14000fa44:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fa49:	mov    rsi,QWORD PTR [rsp+0x38]
   14000fa4e:	add    rsp,0x20
   14000fa52:	pop    rdi
   14000fa53:	ret    
   14000fa54:	mov    QWORD PTR [rsp+0x8],rbx
   14000fa59:	mov    QWORD PTR [rsp+0x10],rsi
   14000fa5e:	push   rdi
   14000fa5f:	sub    rsp,0x30
   14000fa63:	mov    r10,QWORD PTR [rip+0x3063e]        # 0x1400400a8
   14000fa6a:	mov    rbx,r9
   14000fa6d:	mov    rdi,r8
   14000fa70:	xor    r10,QWORD PTR [rip+0x2c759]        # 0x14003c1d0
   14000fa77:	mov    esi,edx
   14000fa79:	je     0x14000fa92
   14000fa7b:	mov    eax,DWORD PTR [rsp+0x68]
   14000fa7f:	mov    DWORD PTR [rsp+0x28],eax
   14000fa83:	mov    rax,QWORD PTR [rsp+0x60]
   14000fa88:	mov    QWORD PTR [rsp+0x20],rax
   14000fa8d:	call   r10
   14000fa90:	jmp    0x14000fab9
   14000fa92:	call   0x14000f904
   14000fa97:	mov    r9,rbx
   14000fa9a:	mov    r8,rdi
   14000fa9d:	mov    ecx,eax
   14000fa9f:	mov    eax,DWORD PTR [rsp+0x68]
   14000faa3:	mov    edx,esi
   14000faa5:	mov    DWORD PTR [rsp+0x28],eax
   14000faa9:	mov    rax,QWORD PTR [rsp+0x60]
   14000faae:	mov    QWORD PTR [rsp+0x20],rax
   14000fab3:	call   QWORD PTR [rip+0x1c63f]        # 0x14002c0f8
   14000fab9:	mov    rbx,QWORD PTR [rsp+0x40]
   14000fabe:	mov    rsi,QWORD PTR [rsp+0x48]
   14000fac3:	add    rsp,0x30
   14000fac7:	pop    rdi
   14000fac8:	ret    
   14000fac9:	int3   
   14000faca:	int3   
   14000facb:	int3   
   14000facc:	mov    QWORD PTR [rsp+0x8],rbx
   14000fad1:	push   rdi
   14000fad2:	sub    rsp,0x20
   14000fad6:	mov    rax,QWORD PTR [rip+0x305d3]        # 0x1400400b0
   14000fadd:	mov    ebx,edx
   14000fadf:	mov    rdi,rcx
   14000fae2:	xor    rax,QWORD PTR [rip+0x2c6e7]        # 0x14003c1d0
   14000fae9:	je     0x14000faef
   14000faeb:	call   rax
   14000faed:	jmp    0x14000fb02
   14000faef:	call   QWORD PTR [rip+0x1c5b3]        # 0x14002c0a8
   14000faf5:	mov    r8d,ebx
   14000faf8:	mov    rdx,rdi
   14000fafb:	mov    ecx,eax
   14000fafd:	call   0x14000f854
   14000fb02:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fb07:	add    rsp,0x20
   14000fb0b:	pop    rdi
   14000fb0c:	ret    
   14000fb0d:	int3   
   14000fb0e:	int3   
   14000fb0f:	int3   
   14000fb10:	sub    rsp,0x28
   14000fb14:	mov    rax,QWORD PTR [rip+0x3059d]        # 0x1400400b8
   14000fb1b:	xor    rax,QWORD PTR [rip+0x2c6ae]        # 0x14003c1d0
   14000fb22:	je     0x14000fb2b
   14000fb24:	add    rsp,0x28
   14000fb28:	rex.W jmp rax
   14000fb2b:	call   0x14000f904
   14000fb30:	mov    edx,0x1
   14000fb35:	mov    ecx,eax
   14000fb37:	add    rsp,0x28
   14000fb3b:	rex.W jmp QWORD PTR [rip+0x1c596]        # 0x14002c0d8
   14000fb42:	int3   
   14000fb43:	int3   
   14000fb44:	mov    r11,rsp
   14000fb47:	mov    QWORD PTR [r11+0x8],rbx
   14000fb4b:	mov    QWORD PTR [r11+0x10],rsi
   14000fb4f:	push   rdi
   14000fb50:	sub    rsp,0x50
   14000fb54:	mov    r10,QWORD PTR [rip+0x30565]        # 0x1400400c0
   14000fb5b:	mov    ebx,r9d
   14000fb5e:	mov    rdi,r8
   14000fb61:	xor    r10,QWORD PTR [rip+0x2c668]        # 0x14003c1d0
   14000fb68:	mov    esi,edx
   14000fb6a:	je     0x14000fb96
   14000fb6c:	xor    eax,eax
   14000fb6e:	mov    QWORD PTR [r11-0x18],rax
   14000fb72:	mov    QWORD PTR [r11-0x20],rax
   14000fb76:	mov    QWORD PTR [r11-0x28],rax
   14000fb7a:	mov    eax,DWORD PTR [rsp+0x88]
   14000fb81:	mov    DWORD PTR [rsp+0x28],eax
   14000fb85:	mov    rax,QWORD PTR [rsp+0x80]
   14000fb8d:	mov    QWORD PTR [r11-0x38],rax
   14000fb91:	call   r10
   14000fb94:	jmp    0x14000fbc3
   14000fb96:	call   0x14000f904
   14000fb9b:	mov    r9d,ebx
   14000fb9e:	mov    r8,rdi
   14000fba1:	mov    ecx,eax
   14000fba3:	mov    eax,DWORD PTR [rsp+0x88]
   14000fbaa:	mov    edx,esi
   14000fbac:	mov    DWORD PTR [rsp+0x28],eax
   14000fbb0:	mov    rax,QWORD PTR [rsp+0x80]
   14000fbb8:	mov    QWORD PTR [rsp+0x20],rax
   14000fbbd:	call   QWORD PTR [rip+0x1c525]        # 0x14002c0e8
   14000fbc3:	mov    rbx,QWORD PTR [rsp+0x60]
   14000fbc8:	mov    rsi,QWORD PTR [rsp+0x68]
   14000fbcd:	add    rsp,0x50
   14000fbd1:	pop    rdi
   14000fbd2:	ret    
   14000fbd3:	int3   
   14000fbd4:	xor    r9d,r9d
   14000fbd7:	mov    r10,rdx
   14000fbda:	mov    r11,rcx
   14000fbdd:	test   r8,r8
   14000fbe0:	je     0x14000fc25
   14000fbe2:	sub    r11,rdx
   14000fbe5:	movzx  ecx,WORD PTR [r11+r10*1]
   14000fbea:	lea    eax,[rcx-0x41]
   14000fbed:	cmp    ax,0x19
   14000fbf1:	ja     0x14000fbf7
   14000fbf3:	add    cx,0x20
   14000fbf7:	movzx  edx,WORD PTR [r10]
   14000fbfb:	lea    eax,[rdx-0x41]
   14000fbfe:	cmp    ax,0x19
   14000fc02:	ja     0x14000fc08
   14000fc04:	add    dx,0x20
   14000fc08:	add    r10,0x2
   14000fc0c:	dec    r8
   14000fc0f:	je     0x14000fc1b
   14000fc11:	test   cx,cx
   14000fc14:	je     0x14000fc1b
   14000fc16:	cmp    cx,dx
   14000fc19:	je     0x14000fbe5
   14000fc1b:	movzx  eax,dx
   14000fc1e:	movzx  r9d,cx
   14000fc22:	sub    r9d,eax
   14000fc25:	mov    eax,r9d
   14000fc28:	ret    
   14000fc29:	int3   
   14000fc2a:	int3   
   14000fc2b:	int3   
   14000fc2c:	mov    QWORD PTR [rsp+0x8],rbx
   14000fc31:	push   rdi
   14000fc32:	sub    rsp,0x20
   14000fc36:	movsxd rbx,ecx
   14000fc39:	lea    rdi,[rip+0x2c650]        # 0x14003c290
   14000fc40:	add    rbx,rbx
   14000fc43:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000fc48:	jne    0x14000fc5b
   14000fc4a:	call   0x14000fd24
   14000fc4f:	test   eax,eax
   14000fc51:	jne    0x14000fc5b
   14000fc53:	lea    ecx,[rax+0x11]
   14000fc56:	call   0x1400081bc
   14000fc5b:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000fc5f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fc64:	add    rsp,0x20
   14000fc68:	pop    rdi
   14000fc69:	rex.W jmp QWORD PTR [rip+0x1c428]        # 0x14002c098
   14000fc70:	rex push rbx
   14000fc72:	sub    rsp,0x20
   14000fc76:	mov    rbx,rcx
   14000fc79:	call   0x14000e828
   14000fc7e:	test   eax,eax
   14000fc80:	jne    0x14000fc8d
   14000fc82:	mov    rdx,rbx
   14000fc85:	xor    ecx,ecx
   14000fc87:	call   QWORD PTR [rip+0x1c3fb]        # 0x14002c088
   14000fc8d:	mov    ecx,0xff
   14000fc92:	add    rsp,0x20
   14000fc96:	pop    rbx
   14000fc97:	jmp    0x14000805c
   14000fc9c:	mov    QWORD PTR [rsp+0x8],rbx
   14000fca1:	mov    QWORD PTR [rsp+0x10],rbp
   14000fca6:	mov    QWORD PTR [rsp+0x18],rsi
   14000fcab:	push   rdi
   14000fcac:	sub    rsp,0x20
   14000fcb0:	mov    edi,0x24
   14000fcb5:	lea    rbx,[rip+0x2c5d4]        # 0x14003c290
   14000fcbc:	mov    ebp,edi
   14000fcbe:	mov    rsi,QWORD PTR [rbx]
   14000fcc1:	test   rsi,rsi
   14000fcc4:	je     0x14000fce1
   14000fcc6:	cmp    DWORD PTR [rbx+0x8],0x1
   14000fcca:	je     0x14000fce1
   14000fccc:	mov    rcx,rsi
   14000fccf:	call   QWORD PTR [rip+0x1c503]        # 0x14002c1d8
   14000fcd5:	mov    rcx,rsi
   14000fcd8:	call   0x140007dc0
   14000fcdd:	and    QWORD PTR [rbx],0x0
   14000fce1:	add    rbx,0x10
   14000fce5:	dec    rbp
   14000fce8:	jne    0x14000fcbe
   14000fcea:	lea    rbx,[rip+0x2c5a7]        # 0x14003c298
   14000fcf1:	mov    rcx,QWORD PTR [rbx-0x8]
   14000fcf5:	test   rcx,rcx
   14000fcf8:	je     0x14000fd05
   14000fcfa:	cmp    DWORD PTR [rbx],0x1
   14000fcfd:	jne    0x14000fd05
   14000fcff:	call   QWORD PTR [rip+0x1c4d3]        # 0x14002c1d8
   14000fd05:	add    rbx,0x10
   14000fd09:	dec    rdi
   14000fd0c:	jne    0x14000fcf1
   14000fd0e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fd13:	mov    rbp,QWORD PTR [rsp+0x38]
   14000fd18:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fd1d:	add    rsp,0x20
   14000fd21:	pop    rdi
   14000fd22:	ret    
   14000fd23:	int3   
   14000fd24:	mov    QWORD PTR [rsp+0x8],rbx
   14000fd29:	mov    QWORD PTR [rsp+0x10],rdi
   14000fd2e:	push   r14
   14000fd30:	sub    rsp,0x20
   14000fd34:	movsxd rbx,ecx
   14000fd37:	cmp    QWORD PTR [rip+0x2dfc1],0x0        # 0x14003dd00
   14000fd3f:	jne    0x14000fd5a
   14000fd41:	call   0x14000df50
   14000fd46:	mov    ecx,0x1e
   14000fd4b:	call   0x14000dfc4
   14000fd50:	mov    ecx,0xff
   14000fd55:	call   0x14000805c
   14000fd5a:	add    rbx,rbx
   14000fd5d:	lea    r14,[rip+0x2c52c]        # 0x14003c290
   14000fd64:	cmp    QWORD PTR [r14+rbx*8],0x0
   14000fd69:	je     0x14000fd72
   14000fd6b:	mov    eax,0x1
   14000fd70:	jmp    0x14000fdd0
   14000fd72:	mov    ecx,0x28
   14000fd77:	call   0x140008684
   14000fd7c:	mov    rdi,rax
   14000fd7f:	test   rax,rax
   14000fd82:	jne    0x14000fd93
   14000fd84:	call   0x140009cb4
   14000fd89:	mov    DWORD PTR [rax],0xc
   14000fd8f:	xor    eax,eax
   14000fd91:	jmp    0x14000fdd0
   14000fd93:	mov    ecx,0xa
   14000fd98:	call   0x14000fc2c
   14000fd9d:	nop
   14000fd9e:	mov    rcx,rdi
   14000fda1:	cmp    QWORD PTR [r14+rbx*8],0x0
   14000fda6:	jne    0x14000fdbb
   14000fda8:	xor    r8d,r8d
   14000fdab:	mov    edx,0xfa0
   14000fdb0:	call   0x14000e7fc
   14000fdb5:	mov    QWORD PTR [r14+rbx*8],rdi
   14000fdb9:	jmp    0x14000fdc1
   14000fdbb:	call   0x140007dc0
   14000fdc0:	nop
   14000fdc1:	mov    rcx,QWORD PTR [rip+0x2c568]        # 0x14003c330
   14000fdc8:	call   QWORD PTR [rip+0x1c2c2]        # 0x14002c090
   14000fdce:	jmp    0x14000fd6b
   14000fdd0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fdd5:	mov    rdi,QWORD PTR [rsp+0x38]
   14000fdda:	add    rsp,0x20
   14000fdde:	pop    r14
   14000fde0:	ret    
   14000fde1:	int3   
   14000fde2:	int3   
   14000fde3:	int3   
   14000fde4:	mov    QWORD PTR [rsp+0x8],rbx
   14000fde9:	mov    QWORD PTR [rsp+0x10],rsi
   14000fdee:	push   rdi
   14000fdef:	sub    rsp,0x20
   14000fdf3:	xor    esi,esi
   14000fdf5:	lea    rbx,[rip+0x2c494]        # 0x14003c290
   14000fdfc:	lea    edi,[rsi+0x24]
   14000fdff:	cmp    DWORD PTR [rbx+0x8],0x1
   14000fe03:	jne    0x14000fe29
   14000fe05:	movsxd rax,esi
   14000fe08:	lea    rdx,[rip+0x2e891]        # 0x14003e6a0
   14000fe0f:	xor    r8d,r8d
   14000fe12:	lea    rcx,[rax+rax*4]
   14000fe16:	inc    esi
   14000fe18:	lea    rcx,[rdx+rcx*8]
   14000fe1c:	mov    edx,0xfa0
   14000fe21:	mov    QWORD PTR [rbx],rcx
   14000fe24:	call   0x14000e7fc
   14000fe29:	add    rbx,0x10
   14000fe2d:	dec    rdi
   14000fe30:	jne    0x14000fdff
   14000fe32:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fe37:	mov    rsi,QWORD PTR [rsp+0x38]
   14000fe3c:	lea    eax,[rdi+0x1]
   14000fe3f:	add    rsp,0x20
   14000fe43:	pop    rdi
   14000fe44:	ret    
   14000fe45:	int3   
   14000fe46:	int3   
   14000fe47:	int3   
   14000fe48:	movsxd rcx,ecx
   14000fe4b:	lea    rax,[rip+0x2c43e]        # 0x14003c290
   14000fe52:	add    rcx,rcx
   14000fe55:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000fe59:	rex.W jmp QWORD PTR [rip+0x1c230]        # 0x14002c090
   14000fe60:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000fe64:	xor    r9d,r9d
   14000fe67:	mov    r10,rdx
   14000fe6a:	add    r8,rcx
   14000fe6d:	movzx  eax,WORD PTR [r8+0x14]
   14000fe72:	movzx  r11d,WORD PTR [r8+0x6]
   14000fe77:	add    rax,0x18
   14000fe7b:	add    rax,r8
   14000fe7e:	test   r11d,r11d
   14000fe81:	je     0x14000fea1
   14000fe83:	mov    edx,DWORD PTR [rax+0xc]
   14000fe86:	cmp    r10,rdx
   14000fe89:	jb     0x14000fe95
   14000fe8b:	mov    ecx,DWORD PTR [rax+0x8]
   14000fe8e:	add    ecx,edx
   14000fe90:	cmp    r10,rcx
   14000fe93:	jb     0x14000fea3
   14000fe95:	inc    r9d
   14000fe98:	add    rax,0x28
   14000fe9c:	cmp    r9d,r11d
   14000fe9f:	jb     0x14000fe83
   14000fea1:	xor    eax,eax
   14000fea3:	ret    
   14000fea4:	int3   
   14000fea5:	int3   
   14000fea6:	int3   
   14000fea7:	int3   
   14000fea8:	int3   
   14000fea9:	int3   
   14000feaa:	int3   
   14000feab:	int3   
   14000feac:	int3   
   14000fead:	int3   
   14000feae:	int3   
   14000feaf:	int3   
   14000feb0:	mov    QWORD PTR [rsp+0x8],rbx
   14000feb5:	push   rdi
   14000feb6:	sub    rsp,0x20
   14000feba:	mov    rbx,rcx
   14000febd:	lea    rdi,[rip+0xffffffffffff013c]        # 0x140000000
   14000fec4:	mov    rcx,rdi
   14000fec7:	call   0x14000ff00
   14000fecc:	test   eax,eax
   14000fece:	je     0x14000fef2
   14000fed0:	sub    rbx,rdi
   14000fed3:	mov    rdx,rbx
   14000fed6:	mov    rcx,rdi
   14000fed9:	call   0x14000fe60
   14000fede:	test   rax,rax
   14000fee1:	je     0x14000fef2
   14000fee3:	mov    eax,DWORD PTR [rax+0x24]
   14000fee6:	shr    eax,0x1f
   14000fee9:	not    eax
   14000feeb:	and    eax,0x1
   14000feee:	jmp    0x14000fef2
   14000fef0:	xor    eax,eax
   14000fef2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fef7:	add    rsp,0x20
   14000fefb:	pop    rdi
   14000fefc:	ret    
   14000fefd:	int3   
   14000fefe:	int3   
   14000feff:	int3   
   14000ff00:	mov    rax,rcx
   14000ff03:	mov    ecx,0x5a4d
   14000ff08:	cmp    WORD PTR [rax],cx
   14000ff0b:	je     0x14000ff10
   14000ff0d:	xor    eax,eax
   14000ff0f:	ret    
   14000ff10:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000ff14:	add    rcx,rax
   14000ff17:	xor    eax,eax
   14000ff19:	cmp    DWORD PTR [rcx],0x4550
   14000ff1f:	jne    0x14000ff2d
   14000ff21:	mov    edx,0x20b
   14000ff26:	cmp    WORD PTR [rcx+0x18],dx
   14000ff2a:	sete   al
   14000ff2d:	ret    
   14000ff2e:	int3   
   14000ff2f:	int3   
   14000ff30:	mov    QWORD PTR [rip+0x2e999],rcx        # 0x14003e8d0
   14000ff37:	ret    
   14000ff38:	mov    QWORD PTR [rsp+0x8],rbx
   14000ff3d:	mov    QWORD PTR [rsp+0x10],rsi
   14000ff42:	mov    QWORD PTR [rsp+0x18],rdi
   14000ff47:	push   r14
   14000ff49:	sub    rsp,0x20
   14000ff4d:	mov    r14,rcx
   14000ff50:	mov    rcx,QWORD PTR [rip+0x2e979]        # 0x14003e8d0
   14000ff57:	call   QWORD PTR [rip+0x1c1bb]        # 0x14002c118
   14000ff5d:	mov    rdi,rax
   14000ff60:	test   r14,r14
   14000ff63:	jne    0x14000ff7d
   14000ff65:	call   0x140009cb4
   14000ff6a:	mov    ebx,0x16
   14000ff6f:	mov    DWORD PTR [rax],ebx
   14000ff71:	call   0x140008d58
   14000ff76:	mov    eax,ebx
   14000ff78:	jmp    0x14001005c
   14000ff7d:	and    DWORD PTR [r14],0x0
   14000ff81:	test   rax,rax
   14000ff84:	jne    0x140010038
   14000ff8a:	lea    rcx,[rip+0x22e3f]        # 0x140032dd0
   14000ff91:	xor    edx,edx
   14000ff93:	mov    r8d,0x800
   14000ff99:	call   QWORD PTR [rip+0x1c0d9]        # 0x14002c078
   14000ff9f:	mov    rsi,rax
   14000ffa2:	test   rax,rax
   14000ffa5:	jne    0x14000ffcc
   14000ffa7:	call   QWORD PTR [rip+0x1c1a3]        # 0x14002c150
   14000ffad:	cmp    eax,0x57
   14000ffb0:	jne    0x14000ff65
   14000ffb2:	lea    rcx,[rip+0x22e17]        # 0x140032dd0
   14000ffb9:	xor    r8d,r8d
   14000ffbc:	xor    edx,edx
   14000ffbe:	call   QWORD PTR [rip+0x1c0b4]        # 0x14002c078
   14000ffc4:	mov    rsi,rax
   14000ffc7:	test   rax,rax
   14000ffca:	je     0x14000ff65
   14000ffcc:	lea    rdx,[rip+0x22e1d]        # 0x140032df0
   14000ffd3:	mov    rcx,rsi
   14000ffd6:	call   QWORD PTR [rip+0x1c19c]        # 0x14002c178
   14000ffdc:	mov    rdi,rax
   14000ffdf:	test   rax,rax
   14000ffe2:	jne    0x14001000f
   14000ffe4:	call   0x140009cb4
   14000ffe9:	mov    rbx,rax
   14000ffec:	call   QWORD PTR [rip+0x1c15e]        # 0x14002c150
   14000fff2:	mov    ecx,eax
   14000fff4:	call   0x140009d4c
   14000fff9:	mov    DWORD PTR [rbx],eax
   14000fffb:	call   0x140008d58
   140010000:	call   QWORD PTR [rip+0x1c14a]        # 0x14002c150
   140010006:	mov    ecx,eax
   140010008:	call   0x140009d4c
   14001000d:	jmp    0x14001005c
   14001000f:	mov    rcx,rax
   140010012:	call   QWORD PTR [rip+0x1c0f8]        # 0x14002c110
   140010018:	xor    ecx,ecx
   14001001a:	mov    rbx,rax
   14001001d:	call   QWORD PTR [rip+0x1c0ed]        # 0x14002c110
   140010023:	xchg   QWORD PTR [rip+0x2e8a6],rbx        # 0x14003e8d0
   14001002a:	cmp    rbx,rax
   14001002d:	je     0x140010038
   14001002f:	mov    rcx,rsi
   140010032:	call   QWORD PTR [rip+0x1c048]        # 0x14002c080
   140010038:	mov    edx,0x4
   14001003d:	mov    rcx,r14
   140010040:	call   rdi
   140010042:	test   eax,eax
   140010044:	jne    0x14001005a
   140010046:	call   0x140009cb4
   14001004b:	mov    DWORD PTR [rax],0xc
   140010051:	call   0x140009cb4
   140010056:	mov    eax,DWORD PTR [rax]
   140010058:	jmp    0x14001005c
   14001005a:	xor    eax,eax
   14001005c:	mov    rbx,QWORD PTR [rsp+0x30]
   140010061:	mov    rsi,QWORD PTR [rsp+0x38]
   140010066:	mov    rdi,QWORD PTR [rsp+0x40]
   14001006b:	add    rsp,0x20
   14001006f:	pop    r14
   140010071:	ret    
   140010072:	int3   
   140010073:	int3   
   140010074:	sub    rsp,0x28
   140010078:	cmp    DWORD PTR [rip+0x30089],0x0        # 0x140040108
   14001007f:	jne    0x140010095
   140010081:	mov    ecx,0xfffffffd
   140010086:	call   0x1400104c4
   14001008b:	mov    DWORD PTR [rip+0x30073],0x1        # 0x140040108
   140010095:	xor    eax,eax
   140010097:	add    rsp,0x28
   14001009b:	ret    
   14001009c:	sub    ecx,0x3a4
   1400100a2:	je     0x1400100cd
   1400100a4:	sub    ecx,0x4
   1400100a7:	je     0x1400100c5
   1400100a9:	sub    ecx,0xd
   1400100ac:	je     0x1400100bd
   1400100ae:	dec    ecx
   1400100b0:	je     0x1400100b5
   1400100b2:	xor    eax,eax
   1400100b4:	ret    
   1400100b5:	mov    rax,QWORD PTR [rip+0x22d64]        # 0x140032e20
   1400100bc:	ret    
   1400100bd:	mov    rax,QWORD PTR [rip+0x22d54]        # 0x140032e18
   1400100c4:	ret    
   1400100c5:	mov    rax,QWORD PTR [rip+0x22d44]        # 0x140032e10
   1400100cc:	ret    
   1400100cd:	mov    rax,QWORD PTR [rip+0x22d34]        # 0x140032e08
   1400100d4:	ret    
   1400100d5:	int3   
   1400100d6:	int3   
   1400100d7:	int3   
   1400100d8:	rex push rbx
   1400100da:	sub    rsp,0x40
   1400100de:	mov    ebx,ecx
   1400100e0:	lea    rcx,[rsp+0x20]
   1400100e5:	xor    edx,edx
   1400100e7:	call   0x140008fac
   1400100ec:	and    DWORD PTR [rip+0x2e805],0x0        # 0x14003e8f8
   1400100f3:	cmp    ebx,0xfffffffe
   1400100f6:	jne    0x14001010a
   1400100f8:	mov    DWORD PTR [rip+0x2e7f6],0x1        # 0x14003e8f8
   140010102:	call   QWORD PTR [rip+0x1bf58]        # 0x14002c060
   140010108:	jmp    0x14001011f
   14001010a:	cmp    ebx,0xfffffffd
   14001010d:	jne    0x140010123
   14001010f:	mov    DWORD PTR [rip+0x2e7df],0x1        # 0x14003e8f8
   140010119:	call   QWORD PTR [rip+0x1bf49]        # 0x14002c068
   14001011f:	mov    ebx,eax
   140010121:	jmp    0x14001013a
   140010123:	cmp    ebx,0xfffffffc
   140010126:	jne    0x14001013a
   140010128:	mov    rax,QWORD PTR [rsp+0x20]
   14001012d:	mov    DWORD PTR [rip+0x2e7c1],0x1        # 0x14003e8f8
   140010137:	mov    ebx,DWORD PTR [rax+0x4]
   14001013a:	cmp    BYTE PTR [rsp+0x38],0x0
   14001013f:	je     0x14001014d
   140010141:	mov    rcx,QWORD PTR [rsp+0x30]
   140010146:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001014d:	mov    eax,ebx
   14001014f:	add    rsp,0x40
   140010153:	pop    rbx
   140010154:	ret    
   140010155:	int3   
   140010156:	int3   
   140010157:	int3   
   140010158:	mov    QWORD PTR [rsp+0x8],rbx
   14001015d:	mov    QWORD PTR [rsp+0x10],rbp
   140010162:	mov    QWORD PTR [rsp+0x18],rsi
   140010167:	push   rdi
   140010168:	sub    rsp,0x20
   14001016c:	lea    rbx,[rcx+0x18]
   140010170:	mov    rsi,rcx
   140010173:	mov    ebp,0x101
   140010178:	mov    rcx,rbx
   14001017b:	mov    r8d,ebp
   14001017e:	xor    edx,edx
   140010180:	call   0x140006f70
   140010185:	xor    eax,eax
   140010187:	lea    rdi,[rsi+0xc]
   14001018b:	mov    QWORD PTR [rsi+0x4],rax
   14001018f:	mov    QWORD PTR [rsi+0x220],rax
   140010196:	mov    ecx,0x6
   14001019b:	movzx  eax,ax
   14001019e:	rep stos WORD PTR es:[rdi],ax
   1400101a1:	lea    rdi,[rip+0x2c538]        # 0x14003c6e0
   1400101a8:	sub    rdi,rsi
   1400101ab:	mov    al,BYTE PTR [rdi+rbx*1]
   1400101ae:	mov    BYTE PTR [rbx],al
   1400101b0:	inc    rbx
   1400101b3:	dec    rbp
   1400101b6:	jne    0x1400101ab
   1400101b8:	lea    rcx,[rsi+0x119]
   1400101bf:	mov    edx,0x100
   1400101c4:	mov    al,BYTE PTR [rcx+rdi*1]
   1400101c7:	mov    BYTE PTR [rcx],al
   1400101c9:	inc    rcx
   1400101cc:	dec    rdx
   1400101cf:	jne    0x1400101c4
   1400101d1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400101d6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400101db:	mov    rsi,QWORD PTR [rsp+0x40]
   1400101e0:	add    rsp,0x20
   1400101e4:	pop    rdi
   1400101e5:	ret    
   1400101e6:	int3   
   1400101e7:	int3   
   1400101e8:	mov    QWORD PTR [rsp+0x10],rbx
   1400101ed:	mov    QWORD PTR [rsp+0x18],rdi
   1400101f2:	push   rbp
   1400101f3:	lea    rbp,[rsp-0x480]
   1400101fb:	sub    rsp,0x580
   140010202:	mov    rax,QWORD PTR [rip+0x2bfc7]        # 0x14003c1d0
   140010209:	xor    rax,rsp
   14001020c:	mov    QWORD PTR [rbp+0x470],rax
   140010213:	mov    rdi,rcx
   140010216:	mov    ecx,DWORD PTR [rcx+0x4]
   140010219:	lea    rdx,[rsp+0x50]
   14001021e:	call   QWORD PTR [rip+0x1be34]        # 0x14002c058
   140010224:	mov    ebx,0x100
   140010229:	test   eax,eax
   14001022b:	je     0x140010366
   140010231:	xor    eax,eax
   140010233:	lea    rcx,[rsp+0x70]
   140010238:	mov    BYTE PTR [rcx],al
   14001023a:	inc    eax
   14001023c:	inc    rcx
   14001023f:	cmp    eax,ebx
   140010241:	jb     0x140010238
   140010243:	mov    al,BYTE PTR [rsp+0x56]
   140010247:	mov    BYTE PTR [rsp+0x70],0x20
   14001024c:	lea    rdx,[rsp+0x56]
   140010251:	jmp    0x140010275
   140010253:	movzx  r8d,BYTE PTR [rdx+0x1]
   140010258:	movzx  ecx,al
   14001025b:	jmp    0x14001026a
   14001025d:	cmp    ecx,ebx
   14001025f:	jae    0x14001026f
   140010261:	mov    eax,ecx
   140010263:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   140010268:	inc    ecx
   14001026a:	cmp    ecx,r8d
   14001026d:	jbe    0x14001025d
   14001026f:	add    rdx,0x2
   140010273:	mov    al,BYTE PTR [rdx]
   140010275:	test   al,al
   140010277:	jne    0x140010253
   140010279:	mov    eax,DWORD PTR [rdi+0x4]
   14001027c:	and    DWORD PTR [rsp+0x30],0x0
   140010281:	lea    r8,[rsp+0x70]
   140010286:	mov    DWORD PTR [rsp+0x28],eax
   14001028a:	lea    rax,[rbp+0x270]
   140010291:	mov    r9d,ebx
   140010294:	mov    edx,0x1
   140010299:	xor    ecx,ecx
   14001029b:	mov    QWORD PTR [rsp+0x20],rax
   1400102a0:	call   0x14001cd64
   1400102a5:	and    DWORD PTR [rsp+0x40],0x0
   1400102aa:	mov    eax,DWORD PTR [rdi+0x4]
   1400102ad:	mov    rdx,QWORD PTR [rdi+0x220]
   1400102b4:	mov    DWORD PTR [rsp+0x38],eax
   1400102b8:	lea    rax,[rbp+0x70]
   1400102bc:	mov    DWORD PTR [rsp+0x30],ebx
   1400102c0:	mov    QWORD PTR [rsp+0x28],rax
   1400102c5:	lea    r9,[rsp+0x70]
   1400102ca:	mov    r8d,ebx
   1400102cd:	xor    ecx,ecx
   1400102cf:	mov    DWORD PTR [rsp+0x20],ebx
   1400102d3:	call   0x14001cb54
   1400102d8:	and    DWORD PTR [rsp+0x40],0x0
   1400102dd:	mov    eax,DWORD PTR [rdi+0x4]
   1400102e0:	mov    rdx,QWORD PTR [rdi+0x220]
   1400102e7:	mov    DWORD PTR [rsp+0x38],eax
   1400102eb:	lea    rax,[rbp+0x170]
   1400102f2:	mov    DWORD PTR [rsp+0x30],ebx
   1400102f6:	mov    QWORD PTR [rsp+0x28],rax
   1400102fb:	lea    r9,[rsp+0x70]
   140010300:	mov    r8d,0x200
   140010306:	xor    ecx,ecx
   140010308:	mov    DWORD PTR [rsp+0x20],ebx
   14001030c:	call   0x14001cb54
   140010311:	lea    r8,[rbp+0x70]
   140010315:	lea    r9,[rbp+0x170]
   14001031c:	sub    r8,rdi
   14001031f:	lea    rdx,[rbp+0x270]
   140010326:	lea    rcx,[rdi+0x19]
   14001032a:	sub    r9,rdi
   14001032d:	test   BYTE PTR [rdx],0x1
   140010330:	je     0x14001033c
   140010332:	or     BYTE PTR [rcx],0x10
   140010335:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14001033a:	jmp    0x140010349
   14001033c:	test   BYTE PTR [rdx],0x2
   14001033f:	je     0x140010351
   140010341:	or     BYTE PTR [rcx],0x20
   140010344:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   140010349:	mov    BYTE PTR [rcx+0x100],al
   14001034f:	jmp    0x140010358
   140010351:	mov    BYTE PTR [rcx+0x100],0x0
   140010358:	inc    rcx
   14001035b:	add    rdx,0x2
   14001035f:	dec    rbx
   140010362:	jne    0x14001032d
   140010364:	jmp    0x1400103a5
   140010366:	xor    edx,edx
   140010368:	lea    rcx,[rdi+0x19]
   14001036c:	lea    r8d,[rdx-0x61]
   140010370:	lea    eax,[r8+0x20]
   140010374:	cmp    eax,0x19
   140010377:	ja     0x140010381
   140010379:	or     BYTE PTR [rcx],0x10
   14001037c:	lea    eax,[rdx+0x20]
   14001037f:	jmp    0x14001038d
   140010381:	cmp    r8d,0x19
   140010385:	ja     0x140010395
   140010387:	or     BYTE PTR [rcx],0x20
   14001038a:	lea    eax,[rdx-0x20]
   14001038d:	mov    BYTE PTR [rcx+0x100],al
   140010393:	jmp    0x14001039c
   140010395:	mov    BYTE PTR [rcx+0x100],0x0
   14001039c:	inc    edx
   14001039e:	inc    rcx
   1400103a1:	cmp    edx,ebx
   1400103a3:	jb     0x14001036c
   1400103a5:	mov    rcx,QWORD PTR [rbp+0x470]
   1400103ac:	xor    rcx,rsp
   1400103af:	call   0x14000c380
   1400103b4:	lea    r11,[rsp+0x580]
   1400103bc:	mov    rbx,QWORD PTR [r11+0x18]
   1400103c0:	mov    rdi,QWORD PTR [r11+0x20]
   1400103c4:	mov    rsp,r11
   1400103c7:	pop    rbp
   1400103c8:	ret    
   1400103c9:	int3   
   1400103ca:	int3   
   1400103cb:	int3   
   1400103cc:	mov    QWORD PTR [rsp+0x10],rbx
   1400103d1:	push   rdi
   1400103d2:	sub    rsp,0x20
   1400103d6:	call   0x14000a3ec
   1400103db:	mov    rdi,rax
   1400103de:	mov    ecx,DWORD PTR [rip+0x2ce34]        # 0x14003d218
   1400103e4:	test   DWORD PTR [rax+0xc8],ecx
   1400103ea:	je     0x1400103ff
   1400103ec:	cmp    QWORD PTR [rax+0xc0],0x0
   1400103f4:	je     0x1400103ff
   1400103f6:	mov    rbx,QWORD PTR [rax+0xb8]
   1400103fd:	jmp    0x14001046b
   1400103ff:	mov    ecx,0xd
   140010404:	call   0x14000fc2c
   140010409:	nop
   14001040a:	mov    rbx,QWORD PTR [rdi+0xb8]
   140010411:	mov    QWORD PTR [rsp+0x30],rbx
   140010416:	cmp    rbx,QWORD PTR [rip+0x2c5e3]        # 0x14003ca00
   14001041d:	je     0x140010461
   14001041f:	test   rbx,rbx
   140010422:	je     0x14001043f
   140010424:	lock dec DWORD PTR [rbx]
   140010427:	jne    0x14001043f
   140010429:	lea    rax,[rip+0x2c2b0]        # 0x14003c6e0
   140010430:	mov    rcx,QWORD PTR [rsp+0x30]
   140010435:	cmp    rcx,rax
   140010438:	je     0x14001043f
   14001043a:	call   0x140007dc0
   14001043f:	mov    rax,QWORD PTR [rip+0x2c5ba]        # 0x14003ca00
   140010446:	mov    QWORD PTR [rdi+0xb8],rax
   14001044d:	mov    rax,QWORD PTR [rip+0x2c5ac]        # 0x14003ca00
   140010454:	mov    QWORD PTR [rsp+0x30],rax
   140010459:	lock inc DWORD PTR [rax]
   14001045c:	mov    rbx,QWORD PTR [rsp+0x30]
   140010461:	mov    ecx,0xd
   140010466:	call   0x14000fe48
   14001046b:	test   rbx,rbx
   14001046e:	jne    0x140010478
   140010470:	lea    ecx,[rbx+0x20]
   140010473:	call   0x1400081bc
   140010478:	mov    rax,rbx
   14001047b:	mov    rbx,QWORD PTR [rsp+0x38]
   140010480:	add    rsp,0x20
   140010484:	pop    rdi
   140010485:	ret    
   140010486:	int3   
   140010487:	int3   
   140010488:	sub    rsp,0x48
   14001048c:	lea    rcx,[rsp+0x20]
   140010491:	xor    edx,edx
   140010493:	call   0x140008fac
   140010498:	mov    rax,QWORD PTR [rsp+0x28]
   14001049d:	cmp    DWORD PTR [rax+0x8],0x0
   1400104a1:	je     0x1400104a8
   1400104a3:	mov    eax,DWORD PTR [rax+0x4]
   1400104a6:	jmp    0x1400104aa
   1400104a8:	xor    eax,eax
   1400104aa:	cmp    BYTE PTR [rsp+0x38],0x0
   1400104af:	je     0x1400104bd
   1400104b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400104b6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400104bd:	add    rsp,0x48
   1400104c1:	ret    
   1400104c2:	int3   
   1400104c3:	int3   
   1400104c4:	mov    rax,rsp
   1400104c7:	mov    QWORD PTR [rax+0x8],rbx
   1400104cb:	mov    QWORD PTR [rax+0x10],rsi
   1400104cf:	mov    QWORD PTR [rax+0x18],rdi
   1400104d3:	mov    QWORD PTR [rax+0x20],r14
   1400104d7:	push   r15
   1400104d9:	sub    rsp,0x30
   1400104dd:	mov    edi,ecx
   1400104df:	or     r15d,0xffffffff
   1400104e3:	call   0x14000a3ec
   1400104e8:	mov    rsi,rax
   1400104eb:	call   0x1400103cc
   1400104f0:	mov    rbx,QWORD PTR [rsi+0xb8]
   1400104f7:	mov    ecx,edi
   1400104f9:	call   0x1400100d8
   1400104fe:	mov    r14d,eax
   140010501:	cmp    eax,DWORD PTR [rbx+0x4]
   140010504:	je     0x1400106e5
   14001050a:	mov    ecx,0x228
   14001050f:	call   0x140008684
   140010514:	mov    rbx,rax
   140010517:	xor    edi,edi
   140010519:	test   rax,rax
   14001051c:	je     0x1400106ea
   140010522:	mov    rax,QWORD PTR [rsi+0xb8]
   140010529:	mov    rcx,rbx
   14001052c:	lea    edx,[rdi+0x4]
   14001052f:	lea    r8d,[rdx+0x7c]
   140010533:	movups xmm0,XMMWORD PTR [rax]
   140010536:	movups XMMWORD PTR [rcx],xmm0
   140010539:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001053d:	movups XMMWORD PTR [rcx+0x10],xmm1
   140010541:	movups xmm0,XMMWORD PTR [rax+0x20]
   140010545:	movups XMMWORD PTR [rcx+0x20],xmm0
   140010549:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001054d:	movups XMMWORD PTR [rcx+0x30],xmm1
   140010551:	movups xmm0,XMMWORD PTR [rax+0x40]
   140010555:	movups XMMWORD PTR [rcx+0x40],xmm0
   140010559:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001055d:	movups XMMWORD PTR [rcx+0x50],xmm1
   140010561:	movups xmm0,XMMWORD PTR [rax+0x60]
   140010565:	movups XMMWORD PTR [rcx+0x60],xmm0
   140010569:	add    rcx,r8
   14001056c:	movups xmm1,XMMWORD PTR [rax+0x70]
   140010570:	movups XMMWORD PTR [rcx-0x10],xmm1
   140010574:	add    rax,r8
   140010577:	dec    rdx
   14001057a:	jne    0x140010533
   14001057c:	movups xmm0,XMMWORD PTR [rax]
   14001057f:	movups XMMWORD PTR [rcx],xmm0
   140010582:	movups xmm1,XMMWORD PTR [rax+0x10]
   140010586:	movups XMMWORD PTR [rcx+0x10],xmm1
   14001058a:	mov    rax,QWORD PTR [rax+0x20]
   14001058e:	mov    QWORD PTR [rcx+0x20],rax
   140010592:	mov    DWORD PTR [rbx],edi
   140010594:	mov    rdx,rbx
   140010597:	mov    ecx,r14d
   14001059a:	call   0x140010708
   14001059f:	mov    r15d,eax
   1400105a2:	test   eax,eax
   1400105a4:	jne    0x1400106bf
   1400105aa:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400105b1:	lea    r14,[rip+0x2c128]        # 0x14003c6e0
   1400105b8:	lock dec DWORD PTR [rcx]
   1400105bb:	jne    0x1400105ce
   1400105bd:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400105c4:	cmp    rcx,r14
   1400105c7:	je     0x1400105ce
   1400105c9:	call   0x140007dc0
   1400105ce:	mov    QWORD PTR [rsi+0xb8],rbx
   1400105d5:	lock inc DWORD PTR [rbx]
   1400105d8:	test   BYTE PTR [rsi+0xc8],0x2
   1400105df:	jne    0x1400106ea
   1400105e5:	test   BYTE PTR [rip+0x2cc2c],0x1        # 0x14003d218
   1400105ec:	jne    0x1400106ea
   1400105f2:	mov    esi,0xd
   1400105f7:	mov    ecx,esi
   1400105f9:	call   0x14000fc2c
   1400105fe:	nop
   1400105ff:	mov    eax,DWORD PTR [rbx+0x4]
   140010602:	mov    DWORD PTR [rip+0x2e2d0],eax        # 0x14003e8d8
   140010608:	mov    eax,DWORD PTR [rbx+0x8]
   14001060b:	mov    DWORD PTR [rip+0x2e2cb],eax        # 0x14003e8dc
   140010611:	mov    rax,QWORD PTR [rbx+0x220]
   140010618:	mov    QWORD PTR [rip+0x2e2d1],rax        # 0x14003e8f0
   14001061f:	mov    edx,edi
   140010621:	lea    r8,[rip+0xfffffffffffef9d8]        # 0x140000000
   140010628:	mov    DWORD PTR [rsp+0x20],edx
   14001062c:	cmp    edx,0x5
   14001062f:	jge    0x140010646
   140010631:	movsxd rcx,edx
   140010634:	movzx  eax,WORD PTR [rbx+rcx*2+0xc]
   140010639:	mov    WORD PTR [r8+rcx*2+0x3e8e0],ax
   140010642:	inc    edx
   140010644:	jmp    0x140010628
   140010646:	mov    edx,edi
   140010648:	mov    DWORD PTR [rsp+0x20],edx
   14001064c:	cmp    edx,0x101
   140010652:	jge    0x140010667
   140010654:	movsxd rcx,edx
   140010657:	mov    al,BYTE PTR [rcx+rbx*1+0x18]
   14001065b:	mov    BYTE PTR [rcx+r8*1+0x3c4d0],al
   140010663:	inc    edx
   140010665:	jmp    0x140010648
   140010667:	mov    DWORD PTR [rsp+0x20],edi
   14001066b:	cmp    edi,0x100
   140010671:	jge    0x140010689
   140010673:	movsxd rcx,edi
   140010676:	mov    al,BYTE PTR [rcx+rbx*1+0x119]
   14001067d:	mov    BYTE PTR [rcx+r8*1+0x3c5e0],al
   140010685:	inc    edi
   140010687:	jmp    0x140010667
   140010689:	mov    rcx,QWORD PTR [rip+0x2c370]        # 0x14003ca00
   140010690:	or     eax,0xffffffff
   140010693:	lock xadd DWORD PTR [rcx],eax
   140010697:	dec    eax
   140010699:	jne    0x1400106ac
   14001069b:	mov    rcx,QWORD PTR [rip+0x2c35e]        # 0x14003ca00
   1400106a2:	cmp    rcx,r14
   1400106a5:	je     0x1400106ac
   1400106a7:	call   0x140007dc0
   1400106ac:	mov    QWORD PTR [rip+0x2c34d],rbx        # 0x14003ca00
   1400106b3:	lock inc DWORD PTR [rbx]
   1400106b6:	mov    ecx,esi
   1400106b8:	call   0x14000fe48
   1400106bd:	jmp    0x1400106ea
   1400106bf:	cmp    eax,0xffffffff
   1400106c2:	jne    0x1400106ea
   1400106c4:	lea    r14,[rip+0x2c015]        # 0x14003c6e0
   1400106cb:	cmp    rbx,r14
   1400106ce:	je     0x1400106d8
   1400106d0:	mov    rcx,rbx
   1400106d3:	call   0x140007dc0
   1400106d8:	call   0x140009cb4
   1400106dd:	mov    DWORD PTR [rax],0x16
   1400106e3:	jmp    0x1400106ea
   1400106e5:	xor    edi,edi
   1400106e7:	mov    r15d,edi
   1400106ea:	mov    eax,r15d
   1400106ed:	mov    rbx,QWORD PTR [rsp+0x40]
   1400106f2:	mov    rsi,QWORD PTR [rsp+0x48]
   1400106f7:	mov    rdi,QWORD PTR [rsp+0x50]
   1400106fc:	mov    r14,QWORD PTR [rsp+0x58]
   140010701:	add    rsp,0x30
   140010705:	pop    r15
   140010707:	ret    
   140010708:	mov    QWORD PTR [rsp+0x18],rbx
   14001070d:	mov    QWORD PTR [rsp+0x20],rbp
   140010712:	push   rsi
   140010713:	push   rdi
   140010714:	push   r12
   140010716:	push   r14
   140010718:	push   r15
   14001071a:	sub    rsp,0x40
   14001071e:	mov    rax,QWORD PTR [rip+0x2baab]        # 0x14003c1d0
   140010725:	xor    rax,rsp
   140010728:	mov    QWORD PTR [rsp+0x38],rax
   14001072d:	mov    rbx,rdx
   140010730:	call   0x1400100d8
   140010735:	xor    esi,esi
   140010737:	mov    edi,eax
   140010739:	test   eax,eax
   14001073b:	jne    0x14001074a
   14001073d:	mov    rcx,rbx
   140010740:	call   0x140010158
   140010745:	jmp    0x14001098e
   14001074a:	lea    r12,[rip+0x2c1bf]        # 0x14003c910
   140010751:	mov    ebp,esi
   140010753:	mov    r15d,0x1
   140010759:	mov    rax,r12
   14001075c:	cmp    DWORD PTR [rax],edi
   14001075e:	je     0x14001089c
   140010764:	add    ebp,r15d
   140010767:	add    rax,0x30
   14001076b:	cmp    ebp,0x5
   14001076e:	jb     0x14001075c
   140010770:	lea    eax,[rdi-0xfde8]
   140010776:	cmp    eax,r15d
   140010779:	jbe    0x140010894
   14001077f:	movzx  ecx,di
   140010782:	call   QWORD PTR [rip+0x1b8e8]        # 0x14002c070
   140010788:	test   eax,eax
   14001078a:	je     0x140010894
   140010790:	lea    rdx,[rsp+0x20]
   140010795:	mov    ecx,edi
   140010797:	call   QWORD PTR [rip+0x1b8bb]        # 0x14002c058
   14001079d:	test   eax,eax
   14001079f:	je     0x140010888
   1400107a5:	lea    rcx,[rbx+0x18]
   1400107a9:	xor    edx,edx
   1400107ab:	mov    r8d,0x101
   1400107b1:	call   0x140006f70
   1400107b6:	mov    DWORD PTR [rbx+0x4],edi
   1400107b9:	mov    QWORD PTR [rbx+0x220],rsi
   1400107c0:	cmp    DWORD PTR [rsp+0x20],r15d
   1400107c5:	jbe    0x140010871
   1400107cb:	lea    rdx,[rsp+0x26]
   1400107d0:	cmp    BYTE PTR [rsp+0x26],sil
   1400107d5:	je     0x140010810
   1400107d7:	cmp    BYTE PTR [rdx+0x1],sil
   1400107db:	je     0x140010810
   1400107dd:	movzx  edi,BYTE PTR [rdx+0x1]
   1400107e1:	movzx  r8d,BYTE PTR [rdx]
   1400107e5:	cmp    r8d,edi
   1400107e8:	ja     0x140010807
   1400107ea:	lea    ecx,[r8+0x1]
   1400107ee:	lea    rax,[rbx+0x18]
   1400107f2:	add    rax,rcx
   1400107f5:	sub    edi,r8d
   1400107f8:	lea    ecx,[r15+rdi*1]
   1400107fc:	or     BYTE PTR [rax],0x4
   1400107ff:	add    rax,r15
   140010802:	sub    rcx,r15
   140010805:	jne    0x1400107fc
   140010807:	add    rdx,0x2
   14001080b:	cmp    BYTE PTR [rdx],sil
   14001080e:	jne    0x1400107d7
   140010810:	lea    rax,[rbx+0x1a]
   140010814:	mov    ecx,0xfe
   140010819:	or     BYTE PTR [rax],0x8
   14001081c:	add    rax,r15
   14001081f:	sub    rcx,r15
   140010822:	jne    0x140010819
   140010824:	mov    ecx,DWORD PTR [rbx+0x4]
   140010827:	sub    ecx,0x3a4
   14001082d:	je     0x14001085d
   14001082f:	sub    ecx,0x4
   140010832:	je     0x140010854
   140010834:	sub    ecx,0xd
   140010837:	je     0x14001084b
   140010839:	dec    ecx
   14001083b:	je     0x140010842
   14001083d:	mov    rax,rsi
   140010840:	jmp    0x140010864
   140010842:	mov    rax,QWORD PTR [rip+0x225d7]        # 0x140032e20
   140010849:	jmp    0x140010864
   14001084b:	mov    rax,QWORD PTR [rip+0x225c6]        # 0x140032e18
   140010852:	jmp    0x140010864
   140010854:	mov    rax,QWORD PTR [rip+0x225b5]        # 0x140032e10
   14001085b:	jmp    0x140010864
   14001085d:	mov    rax,QWORD PTR [rip+0x225a4]        # 0x140032e08
   140010864:	mov    QWORD PTR [rbx+0x220],rax
   14001086b:	mov    DWORD PTR [rbx+0x8],r15d
   14001086f:	jmp    0x140010874
   140010871:	mov    DWORD PTR [rbx+0x8],esi
   140010874:	lea    rdi,[rbx+0xc]
   140010878:	movzx  eax,si
   14001087b:	mov    ecx,0x6
   140010880:	rep stos WORD PTR es:[rdi],ax
   140010883:	jmp    0x140010986
   140010888:	cmp    DWORD PTR [rip+0x2e06a],esi        # 0x14003e8f8
   14001088e:	jne    0x14001073d
   140010894:	or     eax,0xffffffff
   140010897:	jmp    0x140010990
   14001089c:	lea    rcx,[rbx+0x18]
   1400108a0:	xor    edx,edx
   1400108a2:	mov    r8d,0x101
   1400108a8:	call   0x140006f70
   1400108ad:	mov    eax,ebp
   1400108af:	lea    r9,[r12+0x10]
   1400108b4:	lea    r11,[rax+rax*2]
   1400108b8:	lea    r14,[rip+0x2c049]        # 0x14003c908
   1400108bf:	mov    ebp,0x4
   1400108c4:	shl    r11,0x4
   1400108c8:	add    r9,r11
   1400108cb:	mov    rdx,r9
   1400108ce:	cmp    BYTE PTR [r9],sil
   1400108d1:	je     0x140010913
   1400108d3:	cmp    BYTE PTR [rdx+0x1],sil
   1400108d7:	je     0x140010913
   1400108d9:	movzx  r8d,BYTE PTR [rdx]
   1400108dd:	movzx  eax,BYTE PTR [rdx+0x1]
   1400108e1:	cmp    r8d,eax
   1400108e4:	ja     0x14001090a
   1400108e6:	lea    r10d,[r8+0x1]
   1400108ea:	cmp    r10d,0x101
   1400108f1:	jae    0x14001090a
   1400108f3:	mov    al,BYTE PTR [r14]
   1400108f6:	add    r8d,r15d
   1400108f9:	or     BYTE PTR [r10+rbx*1+0x18],al
   1400108fe:	movzx  eax,BYTE PTR [rdx+0x1]
   140010902:	add    r10d,r15d
   140010905:	cmp    r8d,eax
   140010908:	jbe    0x1400108ea
   14001090a:	add    rdx,0x2
   14001090e:	cmp    BYTE PTR [rdx],sil
   140010911:	jne    0x1400108d3
   140010913:	add    r9,0x8
   140010917:	add    r14,r15
   14001091a:	sub    rbp,r15
   14001091d:	jne    0x1400108cb
   14001091f:	mov    DWORD PTR [rbx+0x4],edi
   140010922:	mov    DWORD PTR [rbx+0x8],r15d
   140010926:	sub    edi,0x3a4
   14001092c:	je     0x140010957
   14001092e:	sub    edi,0x4
   140010931:	je     0x14001094e
   140010933:	sub    edi,0xd
   140010936:	je     0x140010945
   140010938:	dec    edi
   14001093a:	jne    0x14001095e
   14001093c:	mov    rsi,QWORD PTR [rip+0x224dd]        # 0x140032e20
   140010943:	jmp    0x14001095e
   140010945:	mov    rsi,QWORD PTR [rip+0x224cc]        # 0x140032e18
   14001094c:	jmp    0x14001095e
   14001094e:	mov    rsi,QWORD PTR [rip+0x224bb]        # 0x140032e10
   140010955:	jmp    0x14001095e
   140010957:	mov    rsi,QWORD PTR [rip+0x224aa]        # 0x140032e08
   14001095e:	sub    r11,rbx
   140010961:	mov    QWORD PTR [rbx+0x220],rsi
   140010968:	lea    rcx,[rbx+0xc]
   14001096c:	lea    rdi,[r11+r12*1]
   140010970:	mov    edx,0x6
   140010975:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14001097a:	mov    WORD PTR [rcx],ax
   14001097d:	lea    rcx,[rcx+0x2]
   140010981:	sub    rdx,r15
   140010984:	jne    0x140010975
   140010986:	mov    rcx,rbx
   140010989:	call   0x1400101e8
   14001098e:	xor    eax,eax
   140010990:	mov    rcx,QWORD PTR [rsp+0x38]
   140010995:	xor    rcx,rsp
   140010998:	call   0x14000c380
   14001099d:	lea    r11,[rsp+0x40]
   1400109a2:	mov    rbx,QWORD PTR [r11+0x40]
   1400109a6:	mov    rbp,QWORD PTR [r11+0x48]
   1400109aa:	mov    rsp,r11
   1400109ad:	pop    r15
   1400109af:	pop    r14
   1400109b1:	pop    r12
   1400109b3:	pop    rdi
   1400109b4:	pop    rsi
   1400109b5:	ret    
   1400109b6:	int3   
   1400109b7:	int3   
   1400109b8:	test   ecx,ecx
   1400109ba:	je     0x1400109ee
   1400109bc:	push   rbx
   1400109bd:	sub    rsp,0x20
   1400109c1:	test   DWORD PTR [rdx+0x18],0x1000
   1400109c8:	mov    rbx,rdx
   1400109cb:	je     0x1400109e9
   1400109cd:	mov    rcx,rdx
   1400109d0:	call   0x14001ce2c
   1400109d5:	and    DWORD PTR [rbx+0x18],0xffffeeff
   1400109dc:	and    DWORD PTR [rbx+0x24],0x0
   1400109e0:	and    QWORD PTR [rbx],0x0
   1400109e4:	and    QWORD PTR [rbx+0x10],0x0
   1400109e9:	add    rsp,0x20
   1400109ed:	pop    rbx
   1400109ee:	ret    
   1400109ef:	int3   
   1400109f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400109f5:	mov    QWORD PTR [rsp+0x10],rdi
   1400109fa:	push   r14
   1400109fc:	sub    rsp,0x20
   140010a00:	mov    rbx,rcx
   140010a03:	call   0x140010f18
   140010a08:	mov    ecx,eax
   140010a0a:	call   0x140010f40
   140010a0f:	test   eax,eax
   140010a11:	je     0x140010aac
   140010a17:	call   0x140010e04
   140010a1c:	add    rax,0x30
   140010a20:	cmp    rbx,rax
   140010a23:	jne    0x140010a29
   140010a25:	xor    eax,eax
   140010a27:	jmp    0x140010a3c
   140010a29:	call   0x140010e04
   140010a2e:	add    rax,0x60
   140010a32:	cmp    rbx,rax
   140010a35:	jne    0x140010aac
   140010a37:	mov    eax,0x1
   140010a3c:	inc    DWORD PTR [rip+0x2dece]        # 0x14003e910
   140010a42:	test   DWORD PTR [rbx+0x18],0x10c
   140010a49:	jne    0x140010aac
   140010a4b:	lea    r14,[rip+0x2deae]        # 0x14003e900
   140010a52:	movsxd rdi,eax
   140010a55:	mov    rax,QWORD PTR [r14+rdi*8]
   140010a59:	test   rax,rax
   140010a5c:	jne    0x140010a89
   140010a5e:	mov    ecx,0x1000
   140010a63:	call   0x140008684
   140010a68:	mov    QWORD PTR [r14+rdi*8],rax
   140010a6c:	test   rax,rax
   140010a6f:	jne    0x140010a89
   140010a71:	lea    rax,[rbx+0x20]
   140010a75:	mov    QWORD PTR [rbx+0x10],rax
   140010a79:	mov    QWORD PTR [rbx],rax
   140010a7c:	mov    eax,0x2
   140010a81:	mov    DWORD PTR [rbx+0x24],eax
   140010a84:	mov    DWORD PTR [rbx+0x8],eax
   140010a87:	jmp    0x140010a9e
   140010a89:	mov    QWORD PTR [rbx+0x10],rax
   140010a8d:	mov    QWORD PTR [rbx],rax
   140010a90:	mov    DWORD PTR [rbx+0x24],0x1000
   140010a97:	mov    DWORD PTR [rbx+0x8],0x1000
   140010a9e:	or     DWORD PTR [rbx+0x18],0x1102
   140010aa5:	mov    eax,0x1
   140010aaa:	jmp    0x140010aae
   140010aac:	xor    eax,eax
   140010aae:	mov    rbx,QWORD PTR [rsp+0x30]
   140010ab3:	mov    rdi,QWORD PTR [rsp+0x38]
   140010ab8:	add    rsp,0x20
   140010abc:	pop    r14
   140010abe:	ret    
   140010abf:	int3   
   140010ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140010ac5:	mov    QWORD PTR [rsp+0x10],rsi
   140010aca:	push   rdi
   140010acb:	sub    rsp,0x20
   140010acf:	mov    rbx,rdx
   140010ad2:	mov    rdi,rcx
   140010ad5:	test   rcx,rcx
   140010ad8:	jne    0x140010ae4
   140010ada:	mov    rcx,rdx
   140010add:	call   0x140007c64
   140010ae2:	jmp    0x140010b4e
   140010ae4:	test   rdx,rdx
   140010ae7:	jne    0x140010af0
   140010ae9:	call   0x140007dc0
   140010aee:	jmp    0x140010b4c
   140010af0:	cmp    rdx,0xffffffffffffffe0
   140010af4:	ja     0x140010b39
   140010af6:	mov    rcx,QWORD PTR [rip+0x2d203]        # 0x14003dd00
   140010afd:	mov    eax,0x1
   140010b02:	test   rbx,rbx
   140010b05:	cmove  rbx,rax
   140010b09:	mov    r8,rdi
   140010b0c:	xor    edx,edx
   140010b0e:	mov    r9,rbx
   140010b11:	call   QWORD PTR [rip+0x1b539]        # 0x14002c050
   140010b17:	mov    rsi,rax
   140010b1a:	test   rax,rax
   140010b1d:	jne    0x140010b8e
   140010b1f:	cmp    DWORD PTR [rip+0x2db6b],eax        # 0x14003e690
   140010b25:	je     0x140010b77
   140010b27:	mov    rcx,rbx
   140010b2a:	call   0x140007d84
   140010b2f:	test   eax,eax
   140010b31:	je     0x140010b5e
   140010b33:	cmp    rbx,0xffffffffffffffe0
   140010b37:	jbe    0x140010af6
   140010b39:	mov    rcx,rbx
   140010b3c:	call   0x140007d84
   140010b41:	call   0x140009cb4
   140010b46:	mov    DWORD PTR [rax],0xc
   140010b4c:	xor    eax,eax
   140010b4e:	mov    rbx,QWORD PTR [rsp+0x30]
   140010b53:	mov    rsi,QWORD PTR [rsp+0x38]
   140010b58:	add    rsp,0x20
   140010b5c:	pop    rdi
   140010b5d:	ret    
   140010b5e:	call   0x140009cb4
   140010b63:	mov    rbx,rax
   140010b66:	call   QWORD PTR [rip+0x1b5e4]        # 0x14002c150
   140010b6c:	mov    ecx,eax
   140010b6e:	call   0x140009d4c
   140010b73:	mov    DWORD PTR [rbx],eax
   140010b75:	jmp    0x140010b4c
   140010b77:	call   0x140009cb4
   140010b7c:	mov    rbx,rax
   140010b7f:	call   QWORD PTR [rip+0x1b5cb]        # 0x14002c150
   140010b85:	mov    ecx,eax
   140010b87:	call   0x140009d4c
   140010b8c:	mov    DWORD PTR [rbx],eax
   140010b8e:	mov    rax,rsi
   140010b91:	jmp    0x140010b4e
   140010b93:	int3   
   140010b94:	mov    QWORD PTR [rsp+0x8],rbx
   140010b99:	mov    QWORD PTR [rsp+0x10],rsi
   140010b9e:	push   rdi
   140010b9f:	sub    rsp,0x20
   140010ba3:	xor    edi,edi
   140010ba5:	mov    rbx,rdx
   140010ba8:	mov    rsi,rcx
   140010bab:	test   rdx,rdx
   140010bae:	je     0x140010bcd
   140010bb0:	xor    edx,edx
   140010bb2:	lea    rax,[rdi-0x20]
   140010bb6:	div    rbx
   140010bb9:	cmp    rax,r8
   140010bbc:	jae    0x140010bcd
   140010bbe:	call   0x140009cb4
   140010bc3:	mov    DWORD PTR [rax],0xc
   140010bc9:	xor    eax,eax
   140010bcb:	jmp    0x140010c0a
   140010bcd:	imul   rbx,r8
   140010bd1:	test   rcx,rcx
   140010bd4:	je     0x140010bde
   140010bd6:	call   0x1400085c8
   140010bdb:	mov    rdi,rax
   140010bde:	mov    rdx,rbx
   140010be1:	mov    rcx,rsi
   140010be4:	call   0x140010ac0
   140010be9:	mov    rsi,rax
   140010bec:	test   rax,rax
   140010bef:	je     0x140010c07
   140010bf1:	cmp    rdi,rbx
   140010bf4:	jae    0x140010c07
   140010bf6:	sub    rbx,rdi
   140010bf9:	lea    rcx,[rdi+rax*1]
   140010bfd:	xor    edx,edx
   140010bff:	mov    r8,rbx
   140010c02:	call   0x140006f70
   140010c07:	mov    rax,rsi
   140010c0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c0f:	mov    rsi,QWORD PTR [rsp+0x38]
   140010c14:	add    rsp,0x20
   140010c18:	pop    rdi
   140010c19:	ret    
   140010c1a:	int3   
   140010c1b:	int3   
   140010c1c:	mov    QWORD PTR [rsp+0x8],rbx
   140010c21:	push   rdi
   140010c22:	sub    rsp,0x20
   140010c26:	mov    rdi,r8
   140010c29:	mov    rbx,rdx
   140010c2c:	test   rcx,rcx
   140010c2f:	je     0x140010c4e
   140010c31:	xor    edx,edx
   140010c33:	lea    rax,[rdx-0x20]
   140010c37:	div    rcx
   140010c3a:	cmp    rax,rbx
   140010c3d:	jae    0x140010c4e
   140010c3f:	call   0x140009cb4
   140010c44:	mov    DWORD PTR [rax],0xc
   140010c4a:	xor    eax,eax
   140010c4c:	jmp    0x140010cab
   140010c4e:	imul   rbx,rcx
   140010c52:	mov    eax,0x1
   140010c57:	test   rbx,rbx
   140010c5a:	cmove  rbx,rax
   140010c5e:	xor    eax,eax
   140010c60:	cmp    rbx,0xffffffffffffffe0
   140010c64:	ja     0x140010c7e
   140010c66:	mov    rcx,QWORD PTR [rip+0x2d093]        # 0x14003dd00
   140010c6d:	lea    edx,[rax+0x8]
   140010c70:	mov    r8,rbx
   140010c73:	call   QWORD PTR [rip+0x1b4df]        # 0x14002c158
   140010c79:	test   rax,rax
   140010c7c:	jne    0x140010cab
   140010c7e:	cmp    DWORD PTR [rip+0x2da0b],0x0        # 0x14003e690
   140010c85:	je     0x140010ca0
   140010c87:	mov    rcx,rbx
   140010c8a:	call   0x140007d84
   140010c8f:	test   eax,eax
   140010c91:	jne    0x140010c5e
   140010c93:	test   rdi,rdi
   140010c96:	je     0x140010c4a
   140010c98:	mov    DWORD PTR [rdi],0xc
   140010c9e:	jmp    0x140010c4a
   140010ca0:	test   rdi,rdi
   140010ca3:	je     0x140010cab
   140010ca5:	mov    DWORD PTR [rdi],0xc
   140010cab:	mov    rbx,QWORD PTR [rsp+0x30]
   140010cb0:	add    rsp,0x20
   140010cb4:	pop    rdi
   140010cb5:	ret    
   140010cb6:	int3   
   140010cb7:	int3   
   140010cb8:	int3   
   140010cb9:	int3   
   140010cba:	int3   
   140010cbb:	int3   
   140010cbc:	int3   
   140010cbd:	int3   
   140010cbe:	int3   
   140010cbf:	int3   
   140010cc0:	int3   
   140010cc1:	int3   
   140010cc2:	int3   
   140010cc3:	int3   
   140010cc4:	int3   
   140010cc5:	int3   
   140010cc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140010cd0:	sub    rsp,0x4d8
   140010cd7:	xor    r8,r8
   140010cda:	xor    r9,r9
   140010cdd:	mov    QWORD PTR [rsp+0x20],rsp
   140010ce2:	mov    QWORD PTR [rsp+0x28],r8
   140010ce7:	call   0x14002a600
   140010cec:	add    rsp,0x4d8
   140010cf3:	ret    
   140010cf4:	int3   
   140010cf5:	int3   
   140010cf6:	int3   
   140010cf7:	int3   
   140010cf8:	int3   
   140010cf9:	int3   
   140010cfa:	nop    WORD PTR [rax+rax*1+0x0]
   140010d00:	mov    QWORD PTR [rsp+0x8],rcx
   140010d05:	mov    QWORD PTR [rsp+0x18],rdx
   140010d0a:	mov    DWORD PTR [rsp+0x10],r8d
   140010d0f:	mov    r9,0x19930520
   140010d16:	jmp    0x140010d20
   140010d18:	int3   
   140010d19:	int3   
   140010d1a:	int3   
   140010d1b:	int3   
   140010d1c:	int3   
   140010d1d:	int3   
   140010d1e:	xchg   ax,ax
   140010d20:	ret    
   140010d21:	int3   
   140010d22:	int3   
   140010d23:	int3   
   140010d24:	int3   
   140010d25:	int3   
   140010d26:	int3   
   140010d27:	nop    WORD PTR [rax+rax*1+0x0]
   140010d30:	ret    
   140010d31:	int3   
   140010d32:	int3   
   140010d33:	int3   
   140010d34:	and    DWORD PTR [rip+0x2f285],0x0        # 0x14003ffc0
   140010d3b:	ret    
   140010d3c:	mov    QWORD PTR [rsp+0x8],rbx
   140010d41:	push   rdi
   140010d42:	sub    rsp,0x20
   140010d46:	mov    eax,DWORD PTR [rip+0x2e254]        # 0x14003efa0
   140010d4c:	xor    ebx,ebx
   140010d4e:	mov    edi,0x14
   140010d53:	test   eax,eax
   140010d55:	jne    0x140010d5e
   140010d57:	mov    eax,0x200
   140010d5c:	jmp    0x140010d63
   140010d5e:	cmp    eax,edi
   140010d60:	cmovl  eax,edi
   140010d63:	movsxd rcx,eax
   140010d66:	mov    edx,0x8
   140010d6b:	mov    DWORD PTR [rip+0x2e22f],eax        # 0x14003efa0
   140010d71:	call   0x140008604
   140010d76:	mov    QWORD PTR [rip+0x2e21b],rax        # 0x14003ef98
   140010d7d:	test   rax,rax
   140010d80:	jne    0x140010da6
   140010d82:	lea    edx,[rax+0x8]
   140010d85:	mov    rcx,rdi
   140010d88:	mov    DWORD PTR [rip+0x2e212],edi        # 0x14003efa0
   140010d8e:	call   0x140008604
   140010d93:	mov    QWORD PTR [rip+0x2e1fe],rax        # 0x14003ef98
   140010d9a:	test   rax,rax
   140010d9d:	jne    0x140010da6
   140010d9f:	mov    eax,0x1a
   140010da4:	jmp    0x140010dc9
   140010da6:	lea    rcx,[rip+0x2bc63]        # 0x14003ca10
   140010dad:	mov    QWORD PTR [rbx+rax*1],rcx
   140010db1:	add    rcx,0x30
   140010db5:	lea    rbx,[rbx+0x8]
   140010db9:	dec    rdi
   140010dbc:	je     0x140010dc7
   140010dbe:	mov    rax,QWORD PTR [rip+0x2e1d3]        # 0x14003ef98
   140010dc5:	jmp    0x140010dad
   140010dc7:	xor    eax,eax
   140010dc9:	mov    rbx,QWORD PTR [rsp+0x30]
   140010dce:	add    rsp,0x20
   140010dd2:	pop    rdi
   140010dd3:	ret    
   140010dd4:	sub    rsp,0x28
   140010dd8:	call   0x14001cea8
   140010ddd:	cmp    BYTE PTR [rip+0x2ced0],0x0        # 0x14003dcb4
   140010de4:	je     0x140010deb
   140010de6:	call   0x14001cfe0
   140010deb:	mov    rcx,QWORD PTR [rip+0x2e1a6]        # 0x14003ef98
   140010df2:	call   0x140007dc0
   140010df7:	and    QWORD PTR [rip+0x2e199],0x0        # 0x14003ef98
   140010dff:	add    rsp,0x28
   140010e03:	ret    
   140010e04:	lea    rax,[rip+0x2bc05]        # 0x14003ca10
   140010e0b:	ret    
   140010e0c:	rex push rbx
   140010e0e:	sub    rsp,0x20
   140010e12:	mov    rbx,rcx
   140010e15:	lea    rcx,[rip+0x2bbf4]        # 0x14003ca10
   140010e1c:	cmp    rbx,rcx
   140010e1f:	jb     0x140010e61
   140010e21:	lea    rax,[rip+0x2bf78]        # 0x14003cda0
   140010e28:	cmp    rbx,rax
   140010e2b:	ja     0x140010e61
   140010e2d:	mov    rdx,rbx
   140010e30:	movabs rax,0x2aaaaaaaaaaaaaab
   140010e3a:	sub    rdx,rcx
   140010e3d:	imul   rdx
   140010e40:	sar    rdx,0x3
   140010e44:	mov    rcx,rdx
   140010e47:	shr    rcx,0x3f
   140010e4b:	add    rcx,rdx
   140010e4e:	add    ecx,0x10
   140010e51:	call   0x14000fc2c
   140010e56:	bts    DWORD PTR [rbx+0x18],0xf
   140010e5b:	add    rsp,0x20
   140010e5f:	pop    rbx
   140010e60:	ret    
   140010e61:	lea    rcx,[rbx+0x30]
   140010e65:	add    rsp,0x20
   140010e69:	pop    rbx
   140010e6a:	rex.W jmp QWORD PTR [rip+0x1b227]        # 0x14002c098
   140010e71:	int3   
   140010e72:	int3   
   140010e73:	int3   
   140010e74:	rex push rbx
   140010e76:	sub    rsp,0x20
   140010e7a:	mov    rbx,rdx
   140010e7d:	cmp    ecx,0x14
   140010e80:	jge    0x140010e95
   140010e82:	add    ecx,0x10
   140010e85:	call   0x14000fc2c
   140010e8a:	bts    DWORD PTR [rbx+0x18],0xf
   140010e8f:	add    rsp,0x20
   140010e93:	pop    rbx
   140010e94:	ret    
   140010e95:	lea    rcx,[rdx+0x30]
   140010e99:	add    rsp,0x20
   140010e9d:	pop    rbx
   140010e9e:	rex.W jmp QWORD PTR [rip+0x1b1f3]        # 0x14002c098
   140010ea5:	int3   
   140010ea6:	int3   
   140010ea7:	int3   
   140010ea8:	lea    rdx,[rip+0x2bb61]        # 0x14003ca10
   140010eaf:	cmp    rcx,rdx
   140010eb2:	jb     0x140010eeb
   140010eb4:	lea    rax,[rip+0x2bee5]        # 0x14003cda0
   140010ebb:	cmp    rcx,rax
   140010ebe:	ja     0x140010eeb
   140010ec0:	btr    DWORD PTR [rcx+0x18],0xf
   140010ec5:	sub    rcx,rdx
   140010ec8:	movabs rax,0x2aaaaaaaaaaaaaab
   140010ed2:	imul   rcx
   140010ed5:	sar    rdx,0x3
   140010ed9:	mov    rcx,rdx
   140010edc:	shr    rcx,0x3f
   140010ee0:	add    rcx,rdx
   140010ee3:	add    ecx,0x10
   140010ee6:	jmp    0x14000fe48
   140010eeb:	add    rcx,0x30
   140010eef:	rex.W jmp QWORD PTR [rip+0x1b19a]        # 0x14002c090
   140010ef6:	int3   
   140010ef7:	int3   
   140010ef8:	cmp    ecx,0x14
   140010efb:	jge    0x140010f0a
   140010efd:	btr    DWORD PTR [rdx+0x18],0xf
   140010f02:	add    ecx,0x10
   140010f05:	jmp    0x14000fe48
   140010f0a:	lea    rcx,[rdx+0x30]
   140010f0e:	rex.W jmp QWORD PTR [rip+0x1b17b]        # 0x14002c090
   140010f15:	int3   
   140010f16:	int3   
   140010f17:	int3   
   140010f18:	sub    rsp,0x28
   140010f1c:	test   rcx,rcx
   140010f1f:	jne    0x140010f36
   140010f21:	call   0x140009cb4
   140010f26:	mov    DWORD PTR [rax],0x16
   140010f2c:	call   0x140008d58
   140010f31:	or     eax,0xffffffff
   140010f34:	jmp    0x140010f39
   140010f36:	mov    eax,DWORD PTR [rcx+0x1c]
   140010f39:	add    rsp,0x28
   140010f3d:	ret    
   140010f3e:	int3   
   140010f3f:	int3   
   140010f40:	sub    rsp,0x28
   140010f44:	cmp    ecx,0xfffffffe
   140010f47:	jne    0x140010f56
   140010f49:	call   0x140009cb4
   140010f4e:	mov    DWORD PTR [rax],0x9
   140010f54:	jmp    0x140010f98
   140010f56:	test   ecx,ecx
   140010f58:	js     0x140010f88
   140010f5a:	cmp    ecx,DWORD PTR [rip+0x2f188]        # 0x1400400e8
   140010f60:	jae    0x140010f88
   140010f62:	movsxd rcx,ecx
   140010f65:	lea    rdx,[rip+0x2cda4]        # 0x14003dd10
   140010f6c:	mov    rax,rcx
   140010f6f:	and    ecx,0x1f
   140010f72:	sar    rax,0x5
   140010f76:	imul   rcx,rcx,0x58
   140010f7a:	mov    rax,QWORD PTR [rdx+rax*8]
   140010f7e:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   140010f83:	and    eax,0x40
   140010f86:	jmp    0x140010f9a
   140010f88:	call   0x140009cb4
   140010f8d:	mov    DWORD PTR [rax],0x9
   140010f93:	call   0x140008d58
   140010f98:	xor    eax,eax
   140010f9a:	add    rsp,0x28
   140010f9e:	ret    
   140010f9f:	int3   
   140010fa0:	mov    QWORD PTR [rsp+0x10],rbx
   140010fa5:	mov    DWORD PTR [rsp+0x8],ecx
   140010fa9:	push   rsi
   140010faa:	push   rdi
   140010fab:	push   r12
   140010fad:	push   r14
   140010faf:	push   r15
   140010fb1:	sub    rsp,0x20
   140010fb5:	mov    esi,r8d
   140010fb8:	mov    r14,rdx
   140010fbb:	movsxd rbx,ecx
   140010fbe:	cmp    ebx,0xfffffffe
   140010fc1:	jne    0x140010fdb
   140010fc3:	call   0x140009c44
   140010fc8:	and    DWORD PTR [rax],0x0
   140010fcb:	call   0x140009cb4
   140010fd0:	mov    DWORD PTR [rax],0x9
   140010fd6:	jmp    0x14001106c
   140010fdb:	test   ecx,ecx
   140010fdd:	js     0x140011054
   140010fdf:	cmp    ebx,DWORD PTR [rip+0x2f103]        # 0x1400400e8
   140010fe5:	jae    0x140011054
   140010fe7:	mov    rax,rbx
   140010fea:	mov    rdi,rbx
   140010fed:	sar    rdi,0x5
   140010ff1:	lea    r12,[rip+0x2cd18]        # 0x14003dd10
   140010ff8:	and    eax,0x1f
   140010ffb:	imul   r15,rax,0x58
   140010fff:	mov    rax,QWORD PTR [r12+rdi*8]
   140011003:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   140011009:	and    ecx,0x1
   14001100c:	je     0x140011054
   14001100e:	mov    ecx,ebx
   140011010:	call   0x14001d088
   140011015:	nop
   140011016:	mov    rax,QWORD PTR [r12+rdi*8]
   14001101a:	test   BYTE PTR [rax+r15*1+0x8],0x1
   140011020:	je     0x140011033
   140011022:	mov    r8d,esi
   140011025:	mov    rdx,r14
   140011028:	mov    ecx,ebx
   14001102a:	call   0x140011084
   14001102f:	mov    edi,eax
   140011031:	jmp    0x140011049
   140011033:	call   0x140009cb4
   140011038:	mov    DWORD PTR [rax],0x9
   14001103e:	call   0x140009c44
   140011043:	and    DWORD PTR [rax],0x0
   140011046:	or     edi,0xffffffff
   140011049:	mov    ecx,ebx
   14001104b:	call   0x14001d5e4
   140011050:	mov    eax,edi
   140011052:	jmp    0x14001106f
   140011054:	call   0x140009c44
   140011059:	and    DWORD PTR [rax],0x0
   14001105c:	call   0x140009cb4
   140011061:	mov    DWORD PTR [rax],0x9
   140011067:	call   0x140008d58
   14001106c:	or     eax,0xffffffff
   14001106f:	mov    rbx,QWORD PTR [rsp+0x58]
   140011074:	add    rsp,0x20
   140011078:	pop    r15
   14001107a:	pop    r14
   14001107c:	pop    r12
   14001107e:	pop    rdi
   14001107f:	pop    rsi
   140011080:	ret    
   140011081:	int3   
   140011082:	int3   
   140011083:	int3   
   140011084:	mov    QWORD PTR [rsp+0x20],rbx
   140011089:	push   rbp
   14001108a:	push   rsi
   14001108b:	push   rdi
   14001108c:	push   r12
   14001108e:	push   r13
   140011090:	push   r14
   140011092:	push   r15
   140011094:	lea    rbp,[rsp-0x1a40]
   14001109c:	mov    eax,0x1b40
   1400110a1:	call   0x140006e30
   1400110a6:	sub    rsp,rax
   1400110a9:	mov    rax,QWORD PTR [rip+0x2b120]        # 0x14003c1d0
   1400110b0:	xor    rax,rsp
   1400110b3:	mov    QWORD PTR [rbp+0x1a30],rax
   1400110ba:	xor    r12d,r12d
   1400110bd:	mov    r15d,r8d
   1400110c0:	mov    r14,rdx
   1400110c3:	movsxd rdi,ecx
   1400110c6:	mov    DWORD PTR [rsp+0x40],r12d
   1400110cb:	mov    ebx,r12d
   1400110ce:	mov    esi,r12d
   1400110d1:	test   r8d,r8d
   1400110d4:	jne    0x1400110dd
   1400110d6:	xor    eax,eax
   1400110d8:	jmp    0x14001184b
   1400110dd:	test   rdx,rdx
   1400110e0:	jne    0x140011102
   1400110e2:	call   0x140009c44
   1400110e7:	mov    DWORD PTR [rax],r12d
   1400110ea:	call   0x140009cb4
   1400110ef:	mov    DWORD PTR [rax],0x16
   1400110f5:	call   0x140008d58
   1400110fa:	or     eax,0xffffffff
   1400110fd:	jmp    0x14001184b
   140011102:	mov    rax,rdi
   140011105:	mov    rcx,rdi
   140011108:	lea    rdx,[rip+0x2cc01]        # 0x14003dd10
   14001110f:	sar    rcx,0x5
   140011113:	and    eax,0x1f
   140011116:	mov    QWORD PTR [rsp+0x48],rcx
   14001111b:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14001111f:	imul   r13,rax,0x58
   140011123:	mov    r12b,BYTE PTR [r13+rcx*1+0x38]
   140011128:	mov    QWORD PTR [rsp+0x58],r13
   14001112d:	add    r12b,r12b
   140011130:	sar    r12b,1
   140011133:	lea    eax,[r12-0x1]
   140011138:	cmp    al,0x1
   14001113a:	ja     0x140011150
   14001113c:	mov    eax,r15d
   14001113f:	not    eax
   140011141:	test   al,0x1
   140011143:	jne    0x140011150
   140011145:	call   0x140009c44
   14001114a:	xor    ecx,ecx
   14001114c:	mov    DWORD PTR [rax],ecx
   14001114e:	jmp    0x1400110ea
   140011150:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   140011156:	je     0x140011165
   140011158:	xor    edx,edx
   14001115a:	mov    ecx,edi
   14001115c:	lea    r8d,[rdx+0x2]
   140011160:	call   0x140011960
   140011165:	mov    ecx,edi
   140011167:	call   0x140010f40
   14001116c:	mov    rdi,QWORD PTR [rsp+0x48]
   140011171:	test   eax,eax
   140011173:	je     0x1400114b9
   140011179:	lea    rax,[rip+0x2cb90]        # 0x14003dd10
   140011180:	mov    rax,QWORD PTR [rax+rdi*8]
   140011184:	test   BYTE PTR [r13+rax*1+0x8],0x80
   14001118a:	je     0x1400114b9
   140011190:	call   0x14000a3ec
   140011195:	lea    rdx,[rsp+0x64]
   14001119a:	mov    rcx,QWORD PTR [rax+0xc0]
   1400111a1:	xor    eax,eax
   1400111a3:	cmp    QWORD PTR [rcx+0x138],rax
   1400111aa:	mov    edi,eax
   1400111ac:	mov    rax,QWORD PTR [rsp+0x48]
   1400111b1:	lea    rcx,[rip+0x2cb58]        # 0x14003dd10
   1400111b8:	sete   dil
   1400111bc:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400111c0:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   1400111c5:	call   QWORD PTR [rip+0x1ae75]        # 0x14002c040
   1400111cb:	xor    ecx,ecx
   1400111cd:	test   eax,eax
   1400111cf:	je     0x1400114b4
   1400111d5:	xor    eax,eax
   1400111d7:	test   edi,edi
   1400111d9:	je     0x1400111e4
   1400111db:	test   r12b,r12b
   1400111de:	je     0x1400114ad
   1400111e4:	call   QWORD PTR [rip+0x1ae5e]        # 0x14002c048
   1400111ea:	mov    rdi,r14
   1400111ed:	mov    DWORD PTR [rsp+0x68],eax
   1400111f1:	xor    eax,eax
   1400111f3:	movzx  ecx,ax
   1400111f6:	mov    WORD PTR [rsp+0x44],ax
   1400111fb:	mov    DWORD PTR [rsp+0x60],eax
   1400111ff:	test   r15d,r15d
   140011202:	je     0x14001180e
   140011208:	mov    r13d,eax
   14001120b:	test   r12b,r12b
   14001120e:	jne    0x1400113b7
   140011214:	mov    cl,BYTE PTR [rdi]
   140011216:	mov    r13,QWORD PTR [rsp+0x58]
   14001121b:	lea    rdx,[rip+0x2caee]        # 0x14003dd10
   140011222:	cmp    cl,0xa
   140011225:	sete   al
   140011228:	xor    r8d,r8d
   14001122b:	mov    DWORD PTR [rsp+0x64],eax
   14001122f:	mov    rax,QWORD PTR [rsp+0x48]
   140011234:	mov    rdx,QWORD PTR [rdx+rax*8]
   140011238:	cmp    DWORD PTR [r13+rdx*1+0x50],r8d
   14001123d:	je     0x14001125e
   14001123f:	mov    al,BYTE PTR [r13+rdx*1+0x4c]
   140011244:	mov    BYTE PTR [rsp+0x6d],cl
   140011248:	mov    BYTE PTR [rsp+0x6c],al
   14001124c:	mov    DWORD PTR [r13+rdx*1+0x50],r8d
   140011251:	mov    r8d,0x2
   140011257:	lea    rdx,[rsp+0x6c]
   14001125c:	jmp    0x1400112a7
   14001125e:	movsx  ecx,cl
   140011261:	call   0x140011f7c
   140011266:	test   eax,eax
   140011268:	je     0x14001129e
   14001126a:	mov    rax,r15
   14001126d:	sub    rax,rdi
   140011270:	add    rax,r14
   140011273:	cmp    rax,0x1
   140011277:	jle    0x140011430
   14001127d:	lea    rcx,[rsp+0x44]
   140011282:	mov    r8d,0x2
   140011288:	mov    rdx,rdi
   14001128b:	call   0x1400125d0
   140011290:	cmp    eax,0xffffffff
   140011293:	je     0x140011472
   140011299:	inc    rdi
   14001129c:	jmp    0x1400112ba
   14001129e:	mov    r8d,0x1
   1400112a4:	mov    rdx,rdi
   1400112a7:	lea    rcx,[rsp+0x44]
   1400112ac:	call   0x1400125d0
   1400112b1:	cmp    eax,0xffffffff
   1400112b4:	je     0x140011472
   1400112ba:	mov    ecx,DWORD PTR [rsp+0x68]
   1400112be:	xor    eax,eax
   1400112c0:	lea    r8,[rsp+0x44]
   1400112c5:	mov    QWORD PTR [rsp+0x38],rax
   1400112ca:	mov    QWORD PTR [rsp+0x30],rax
   1400112cf:	lea    rax,[rsp+0x6c]
   1400112d4:	mov    r9d,0x1
   1400112da:	xor    edx,edx
   1400112dc:	mov    DWORD PTR [rsp+0x28],0x5
   1400112e4:	mov    QWORD PTR [rsp+0x20],rax
   1400112e9:	inc    rdi
   1400112ec:	call   QWORD PTR [rip+0x1ae9e]        # 0x14002c190
   1400112f2:	mov    r13d,eax
   1400112f5:	test   eax,eax
   1400112f7:	je     0x14001146d
   1400112fd:	mov    rax,QWORD PTR [rsp+0x48]
   140011302:	lea    rcx,[rip+0x2ca07]        # 0x14003dd10
   140011309:	lea    r9,[rsp+0x60]
   14001130e:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011312:	xor    eax,eax
   140011314:	lea    rdx,[rsp+0x6c]
   140011319:	mov    QWORD PTR [rsp+0x20],rax
   14001131e:	mov    rax,QWORD PTR [rsp+0x58]
   140011323:	mov    r8d,r13d
   140011326:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001132a:	call   QWORD PTR [rip+0x1aec0]        # 0x14002c1f0
   140011330:	test   eax,eax
   140011332:	je     0x140011465
   140011338:	mov    eax,DWORD PTR [rsp+0x40]
   14001133c:	mov    ebx,edi
   14001133e:	sub    ebx,r14d
   140011341:	add    ebx,eax
   140011343:	cmp    DWORD PTR [rsp+0x60],r13d
   140011348:	jl     0x1400117f3
   14001134e:	xor    r13d,r13d
   140011351:	cmp    DWORD PTR [rsp+0x64],r13d
   140011356:	je     0x1400113b0
   140011358:	mov    rax,QWORD PTR [rsp+0x48]
   14001135d:	lea    r8d,[r13+0x1]
   140011361:	mov    BYTE PTR [rsp+0x6c],0xd
   140011366:	lea    rcx,[rip+0x2c9a3]        # 0x14003dd10
   14001136d:	mov    QWORD PTR [rsp+0x20],r13
   140011372:	mov    r13,QWORD PTR [rsp+0x58]
   140011377:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001137b:	lea    r9,[rsp+0x60]
   140011380:	lea    rdx,[rsp+0x6c]
   140011385:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001138a:	call   QWORD PTR [rip+0x1ae60]        # 0x14002c1f0
   140011390:	test   eax,eax
   140011392:	je     0x14001145b
   140011398:	cmp    DWORD PTR [rsp+0x60],0x1
   14001139d:	jl     0x140011472
   1400113a3:	inc    DWORD PTR [rsp+0x40]
   1400113a7:	movzx  ecx,WORD PTR [rsp+0x44]
   1400113ac:	inc    ebx
   1400113ae:	jmp    0x14001141f
   1400113b0:	movzx  ecx,WORD PTR [rsp+0x44]
   1400113b5:	jmp    0x14001141a
   1400113b7:	lea    eax,[r12-0x1]
   1400113bc:	cmp    al,0x1
   1400113be:	ja     0x1400113d9
   1400113c0:	movzx  ecx,WORD PTR [rdi]
   1400113c3:	xor    eax,eax
   1400113c5:	cmp    cx,0xa
   1400113c9:	mov    r13d,eax
   1400113cc:	mov    WORD PTR [rsp+0x44],cx
   1400113d1:	sete   r13b
   1400113d5:	add    rdi,0x2
   1400113d9:	lea    eax,[r12-0x1]
   1400113de:	cmp    al,0x1
   1400113e0:	ja     0x14001141a
   1400113e2:	call   0x14001d644
   1400113e7:	movzx  ecx,WORD PTR [rsp+0x44]
   1400113ec:	cmp    ax,cx
   1400113ef:	jne    0x140011465
   1400113f1:	add    ebx,0x2
   1400113f4:	test   r13d,r13d
   1400113f7:	je     0x14001141a
   1400113f9:	mov    eax,0xd
   1400113fe:	mov    ecx,eax
   140011400:	mov    WORD PTR [rsp+0x44],ax
   140011405:	call   0x14001d644
   14001140a:	movzx  ecx,WORD PTR [rsp+0x44]
   14001140f:	cmp    ax,cx
   140011412:	jne    0x140011465
   140011414:	inc    ebx
   140011416:	inc    DWORD PTR [rsp+0x40]
   14001141a:	mov    r13,QWORD PTR [rsp+0x58]
   14001141f:	mov    eax,edi
   140011421:	sub    eax,r14d
   140011424:	cmp    eax,r15d
   140011427:	jae    0x140011472
   140011429:	xor    eax,eax
   14001142b:	jmp    0x140011208
   140011430:	mov    al,BYTE PTR [rdi]
   140011432:	mov    r15,QWORD PTR [rsp+0x48]
   140011437:	lea    r12,[rip+0x2c8d2]        # 0x14003dd10
   14001143e:	mov    rcx,QWORD PTR [r12+r15*8]
   140011442:	inc    ebx
   140011444:	mov    rdi,r15
   140011447:	mov    BYTE PTR [r13+rcx*1+0x4c],al
   14001144c:	mov    rax,QWORD PTR [r12+r15*8]
   140011450:	mov    DWORD PTR [r13+rax*1+0x50],0x1
   140011459:	jmp    0x140011477
   14001145b:	call   QWORD PTR [rip+0x1acef]        # 0x14002c150
   140011461:	mov    esi,eax
   140011463:	jmp    0x140011472
   140011465:	call   QWORD PTR [rip+0x1ace5]        # 0x14002c150
   14001146b:	mov    esi,eax
   14001146d:	mov    r13,QWORD PTR [rsp+0x58]
   140011472:	mov    rdi,QWORD PTR [rsp+0x48]
   140011477:	mov    eax,DWORD PTR [rsp+0x40]
   14001147b:	test   ebx,ebx
   14001147d:	jne    0x140011847
   140011483:	xor    ebx,ebx
   140011485:	test   esi,esi
   140011487:	je     0x140011813
   14001148d:	cmp    esi,0x5
   140011490:	jne    0x140011802
   140011496:	call   0x140009cb4
   14001149b:	mov    DWORD PTR [rax],0x9
   1400114a1:	call   0x140009c44
   1400114a6:	mov    DWORD PTR [rax],esi
   1400114a8:	jmp    0x1400110fa
   1400114ad:	mov    rdi,QWORD PTR [rsp+0x48]
   1400114b2:	jmp    0x1400114bb
   1400114b4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400114b9:	xor    eax,eax
   1400114bb:	lea    r9,[rip+0x2c84e]        # 0x14003dd10
   1400114c2:	mov    rcx,QWORD PTR [r9+rdi*8]
   1400114c6:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   1400114cc:	je     0x1400117ba
   1400114d2:	mov    esi,eax
   1400114d4:	test   r12b,r12b
   1400114d7:	jne    0x1400115b5
   1400114dd:	mov    r12,r14
   1400114e0:	test   r15d,r15d
   1400114e3:	je     0x140011813
   1400114e9:	mov    edx,0xd
   1400114ee:	jmp    0x1400114f2
   1400114f0:	xor    eax,eax
   1400114f2:	mov    r13d,DWORD PTR [rsp+0x40]
   1400114f7:	lea    rdi,[rbp+0x630]
   1400114fe:	mov    rcx,rax
   140011501:	mov    eax,r12d
   140011504:	sub    eax,r14d
   140011507:	cmp    eax,r15d
   14001150a:	jae    0x140011533
   14001150c:	mov    al,BYTE PTR [r12]
   140011510:	inc    r12
   140011513:	cmp    al,0xa
   140011515:	jne    0x140011522
   140011517:	mov    BYTE PTR [rdi],dl
   140011519:	inc    r13d
   14001151c:	inc    rdi
   14001151f:	inc    rcx
   140011522:	inc    rcx
   140011525:	mov    BYTE PTR [rdi],al
   140011527:	inc    rdi
   14001152a:	cmp    rcx,0x13ff
   140011531:	jb     0x140011501
   140011533:	lea    rax,[rbp+0x630]
   14001153a:	mov    r8d,edi
   14001153d:	mov    DWORD PTR [rsp+0x40],r13d
   140011542:	mov    r13,QWORD PTR [rsp+0x58]
   140011547:	sub    r8d,eax
   14001154a:	mov    rax,QWORD PTR [rsp+0x48]
   14001154f:	mov    rcx,QWORD PTR [r9+rax*8]
   140011553:	xor    eax,eax
   140011555:	lea    r9,[rsp+0x50]
   14001155a:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001155f:	lea    rdx,[rbp+0x630]
   140011566:	mov    QWORD PTR [rsp+0x20],rax
   14001156b:	call   QWORD PTR [rip+0x1ac7f]        # 0x14002c1f0
   140011571:	test   eax,eax
   140011573:	je     0x14001145b
   140011579:	add    ebx,DWORD PTR [rsp+0x50]
   14001157d:	lea    rax,[rbp+0x630]
   140011584:	sub    rdi,rax
   140011587:	movsxd rax,DWORD PTR [rsp+0x50]
   14001158c:	cmp    rax,rdi
   14001158f:	jl     0x140011472
   140011595:	mov    eax,r12d
   140011598:	mov    edx,0xd
   14001159d:	lea    r9,[rip+0x2c76c]        # 0x14003dd10
   1400115a4:	sub    eax,r14d
   1400115a7:	cmp    eax,r15d
   1400115aa:	jb     0x1400114f0
   1400115b0:	jmp    0x140011472
   1400115b5:	cmp    r12b,0x2
   1400115b9:	mov    r12,r14
   1400115bc:	jne    0x1400116a2
   1400115c2:	test   r15d,r15d
   1400115c5:	je     0x140011813
   1400115cb:	mov    edx,0xd
   1400115d0:	jmp    0x1400115d4
   1400115d2:	xor    eax,eax
   1400115d4:	mov    r13d,DWORD PTR [rsp+0x40]
   1400115d9:	lea    rdi,[rbp+0x630]
   1400115e0:	mov    rcx,rax
   1400115e3:	mov    eax,r12d
   1400115e6:	sub    eax,r14d
   1400115e9:	cmp    eax,r15d
   1400115ec:	jae    0x140011620
   1400115ee:	movzx  eax,WORD PTR [r12]
   1400115f3:	add    r12,0x2
   1400115f7:	cmp    ax,0xa
   1400115fb:	jne    0x14001160c
   1400115fd:	mov    WORD PTR [rdi],dx
   140011600:	add    r13d,0x2
   140011604:	add    rdi,0x2
   140011608:	add    rcx,0x2
   14001160c:	add    rcx,0x2
   140011610:	mov    WORD PTR [rdi],ax
   140011613:	add    rdi,0x2
   140011617:	cmp    rcx,0x13fe
   14001161e:	jb     0x1400115e3
   140011620:	lea    rax,[rbp+0x630]
   140011627:	mov    r8d,edi
   14001162a:	mov    DWORD PTR [rsp+0x40],r13d
   14001162f:	mov    r13,QWORD PTR [rsp+0x58]
   140011634:	sub    r8d,eax
   140011637:	mov    rax,QWORD PTR [rsp+0x48]
   14001163c:	mov    rcx,QWORD PTR [r9+rax*8]
   140011640:	xor    eax,eax
   140011642:	lea    r9,[rsp+0x50]
   140011647:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001164c:	lea    rdx,[rbp+0x630]
   140011653:	mov    QWORD PTR [rsp+0x20],rax
   140011658:	call   QWORD PTR [rip+0x1ab92]        # 0x14002c1f0
   14001165e:	test   eax,eax
   140011660:	je     0x14001145b
   140011666:	add    ebx,DWORD PTR [rsp+0x50]
   14001166a:	lea    rax,[rbp+0x630]
   140011671:	sub    rdi,rax
   140011674:	movsxd rax,DWORD PTR [rsp+0x50]
   140011679:	cmp    rax,rdi
   14001167c:	jl     0x140011472
   140011682:	mov    eax,r12d
   140011685:	mov    edx,0xd
   14001168a:	lea    r9,[rip+0x2c67f]        # 0x14003dd10
   140011691:	sub    eax,r14d
   140011694:	cmp    eax,r15d
   140011697:	jb     0x1400115d2
   14001169d:	jmp    0x140011472
   1400116a2:	test   r15d,r15d
   1400116a5:	je     0x140011813
   1400116ab:	mov    r8d,0xd
   1400116b1:	jmp    0x1400116b5
   1400116b3:	xor    eax,eax
   1400116b5:	lea    rcx,[rbp-0x80]
   1400116b9:	mov    rdx,rax
   1400116bc:	mov    eax,r12d
   1400116bf:	sub    eax,r14d
   1400116c2:	cmp    eax,r15d
   1400116c5:	jae    0x1400116f6
   1400116c7:	movzx  eax,WORD PTR [r12]
   1400116cc:	add    r12,0x2
   1400116d0:	cmp    ax,0xa
   1400116d4:	jne    0x1400116e2
   1400116d6:	mov    WORD PTR [rcx],r8w
   1400116da:	add    rcx,0x2
   1400116de:	add    rdx,0x2
   1400116e2:	add    rdx,0x2
   1400116e6:	mov    WORD PTR [rcx],ax
   1400116e9:	add    rcx,0x2
   1400116ed:	cmp    rdx,0x6a8
   1400116f4:	jb     0x1400116bc
   1400116f6:	lea    rax,[rbp-0x80]
   1400116fa:	xor    edi,edi
   1400116fc:	lea    r8,[rbp-0x80]
   140011700:	sub    ecx,eax
   140011702:	mov    QWORD PTR [rsp+0x38],rdi
   140011707:	mov    QWORD PTR [rsp+0x30],rdi
   14001170c:	mov    eax,ecx
   14001170e:	mov    ecx,0xfde9
   140011713:	mov    DWORD PTR [rsp+0x28],0xd55
   14001171b:	cdq    
   14001171c:	sub    eax,edx
   14001171e:	xor    edx,edx
   140011720:	sar    eax,1
   140011722:	mov    r9d,eax
   140011725:	lea    rax,[rbp+0x630]
   14001172c:	mov    QWORD PTR [rsp+0x20],rax
   140011731:	call   QWORD PTR [rip+0x1aa59]        # 0x14002c190
   140011737:	mov    r13d,eax
   14001173a:	test   eax,eax
   14001173c:	je     0x140011465
   140011742:	movsxd rax,edi
   140011745:	mov    r8d,r13d
   140011748:	lea    rdx,[rbp+0x630]
   14001174f:	add    rdx,rax
   140011752:	mov    rax,QWORD PTR [rsp+0x48]
   140011757:	lea    rcx,[rip+0x2c5b2]        # 0x14003dd10
   14001175e:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011762:	xor    eax,eax
   140011764:	lea    r9,[rsp+0x50]
   140011769:	mov    QWORD PTR [rsp+0x20],rax
   14001176e:	mov    rax,QWORD PTR [rsp+0x58]
   140011773:	sub    r8d,edi
   140011776:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001177a:	call   QWORD PTR [rip+0x1aa70]        # 0x14002c1f0
   140011780:	test   eax,eax
   140011782:	je     0x14001178f
   140011784:	add    edi,DWORD PTR [rsp+0x50]
   140011788:	cmp    r13d,edi
   14001178b:	jg     0x140011742
   14001178d:	jmp    0x140011797
   14001178f:	call   QWORD PTR [rip+0x1a9bb]        # 0x14002c150
   140011795:	mov    esi,eax
   140011797:	cmp    r13d,edi
   14001179a:	jg     0x14001146d
   1400117a0:	mov    ebx,r12d
   1400117a3:	mov    r8d,0xd
   1400117a9:	sub    ebx,r14d
   1400117ac:	cmp    ebx,r15d
   1400117af:	jb     0x1400116b3
   1400117b5:	jmp    0x14001146d
   1400117ba:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   1400117bf:	lea    r9,[rsp+0x50]
   1400117c4:	mov    r8d,r15d
   1400117c7:	mov    rdx,r14
   1400117ca:	mov    QWORD PTR [rsp+0x20],rax
   1400117cf:	call   QWORD PTR [rip+0x1aa1b]        # 0x14002c1f0
   1400117d5:	test   eax,eax
   1400117d7:	je     0x1400117e4
   1400117d9:	mov    ebx,DWORD PTR [rsp+0x50]
   1400117dd:	mov    eax,esi
   1400117df:	jmp    0x14001147b
   1400117e4:	call   QWORD PTR [rip+0x1a966]        # 0x14002c150
   1400117ea:	mov    esi,eax
   1400117ec:	mov    eax,ebx
   1400117ee:	jmp    0x14001147b
   1400117f3:	mov    r13,QWORD PTR [rsp+0x58]
   1400117f8:	mov    rdi,QWORD PTR [rsp+0x48]
   1400117fd:	jmp    0x14001147b
   140011802:	mov    ecx,esi
   140011804:	call   0x140009c64
   140011809:	jmp    0x1400110fa
   14001180e:	mov    rdi,QWORD PTR [rsp+0x48]
   140011813:	lea    rax,[rip+0x2c4f6]        # 0x14003dd10
   14001181a:	mov    rax,QWORD PTR [rax+rdi*8]
   14001181e:	test   BYTE PTR [r13+rax*1+0x8],0x40
   140011824:	je     0x140011830
   140011826:	cmp    BYTE PTR [r14],0x1a
   14001182a:	je     0x1400110d6
   140011830:	call   0x140009cb4
   140011835:	mov    DWORD PTR [rax],0x1c
   14001183b:	call   0x140009c44
   140011840:	mov    DWORD PTR [rax],ebx
   140011842:	jmp    0x1400110fa
   140011847:	sub    ebx,eax
   140011849:	mov    eax,ebx
   14001184b:	mov    rcx,QWORD PTR [rbp+0x1a30]
   140011852:	xor    rcx,rsp
   140011855:	call   0x14000c380
   14001185a:	mov    rbx,QWORD PTR [rsp+0x1b98]
   140011862:	add    rsp,0x1b40
   140011869:	pop    r15
   14001186b:	pop    r14
   14001186d:	pop    r13
   14001186f:	pop    r12
   140011871:	pop    rdi
   140011872:	pop    rsi
   140011873:	pop    rbp
   140011874:	ret    
   140011875:	int3   
   140011876:	int3   
   140011877:	int3   
   140011878:	mov    QWORD PTR [rsp+0x10],rbx
   14001187d:	mov    DWORD PTR [rsp+0x8],ecx
   140011881:	push   rsi
   140011882:	push   rdi
   140011883:	push   r12
   140011885:	push   r14
   140011887:	push   r15
   140011889:	sub    rsp,0x20
   14001188d:	mov    esi,r8d
   140011890:	mov    r14,rdx
   140011893:	movsxd rbx,ecx
   140011896:	cmp    ebx,0xfffffffe
   140011899:	jne    0x1400118b3
   14001189b:	call   0x140009c44
   1400118a0:	and    DWORD PTR [rax],0x0
   1400118a3:	call   0x140009cb4
   1400118a8:	mov    DWORD PTR [rax],0x9
   1400118ae:	jmp    0x140011947
   1400118b3:	test   ecx,ecx
   1400118b5:	js     0x14001192f
   1400118b7:	cmp    ebx,DWORD PTR [rip+0x2e82b]        # 0x1400400e8
   1400118bd:	jae    0x14001192f
   1400118bf:	mov    rax,rbx
   1400118c2:	mov    rdi,rbx
   1400118c5:	sar    rdi,0x5
   1400118c9:	lea    r12,[rip+0x2c440]        # 0x14003dd10
   1400118d0:	and    eax,0x1f
   1400118d3:	imul   r15,rax,0x58
   1400118d7:	mov    rax,QWORD PTR [r12+rdi*8]
   1400118db:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   1400118e1:	and    ecx,0x1
   1400118e4:	je     0x14001192f
   1400118e6:	mov    ecx,ebx
   1400118e8:	call   0x14001d088
   1400118ed:	nop
   1400118ee:	mov    rax,QWORD PTR [r12+rdi*8]
   1400118f2:	test   BYTE PTR [rax+r15*1+0x8],0x1
   1400118f8:	je     0x14001190c
   1400118fa:	mov    r8d,esi
   1400118fd:	mov    rdx,r14
   140011900:	mov    ecx,ebx
   140011902:	call   0x140011960
   140011907:	mov    rdi,rax
   14001190a:	jmp    0x140011923
   14001190c:	call   0x140009cb4
   140011911:	mov    DWORD PTR [rax],0x9
   140011917:	call   0x140009c44
   14001191c:	and    DWORD PTR [rax],0x0
   14001191f:	or     rdi,0xffffffffffffffff
   140011923:	mov    ecx,ebx
   140011925:	call   0x14001d5e4
   14001192a:	mov    rax,rdi
   14001192d:	jmp    0x14001194b
   14001192f:	call   0x140009c44
   140011934:	and    DWORD PTR [rax],0x0
   140011937:	call   0x140009cb4
   14001193c:	mov    DWORD PTR [rax],0x9
   140011942:	call   0x140008d58
   140011947:	or     rax,0xffffffffffffffff
   14001194b:	mov    rbx,QWORD PTR [rsp+0x58]
   140011950:	add    rsp,0x20
   140011954:	pop    r15
   140011956:	pop    r14
   140011958:	pop    r12
   14001195a:	pop    rdi
   14001195b:	pop    rsi
   14001195c:	ret    
   14001195d:	int3   
   14001195e:	int3   
   14001195f:	int3   
   140011960:	mov    QWORD PTR [rsp+0x8],rbx
   140011965:	mov    QWORD PTR [rsp+0x10],rsi
   14001196a:	push   rdi
   14001196b:	sub    rsp,0x20
   14001196f:	movsxd rbx,ecx
   140011972:	mov    edi,r8d
   140011975:	mov    rsi,rdx
   140011978:	mov    ecx,ebx
   14001197a:	call   0x14001d3c4
   14001197f:	cmp    rax,0xffffffffffffffff
   140011983:	jne    0x140011996
   140011985:	call   0x140009cb4
   14001198a:	mov    DWORD PTR [rax],0x9
   140011990:	or     rax,0xffffffffffffffff
   140011994:	jmp    0x1400119e3
   140011996:	lea    r8,[rsp+0x48]
   14001199b:	mov    r9d,edi
   14001199e:	mov    rdx,rsi
   1400119a1:	mov    rcx,rax
   1400119a4:	call   QWORD PTR [rip+0x1a68e]        # 0x14002c038
   1400119aa:	test   eax,eax
   1400119ac:	jne    0x1400119bd
   1400119ae:	call   QWORD PTR [rip+0x1a79c]        # 0x14002c150
   1400119b4:	mov    ecx,eax
   1400119b6:	call   0x140009c64
   1400119bb:	jmp    0x140011990
   1400119bd:	mov    rcx,rbx
   1400119c0:	mov    rax,rbx
   1400119c3:	lea    rdx,[rip+0x2c346]        # 0x14003dd10
   1400119ca:	sar    rax,0x5
   1400119ce:	and    ecx,0x1f
   1400119d1:	mov    rax,QWORD PTR [rdx+rax*8]
   1400119d5:	imul   rcx,rcx,0x58
   1400119d9:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   1400119de:	mov    rax,QWORD PTR [rsp+0x48]
   1400119e3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400119e8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400119ed:	add    rsp,0x20
   1400119f1:	pop    rdi
   1400119f2:	ret    
   1400119f3:	int3   
   1400119f4:	rex push rbx
   1400119f6:	sub    rsp,0x20
   1400119fa:	inc    DWORD PTR [rip+0x2cf10]        # 0x14003e910
   140011a00:	mov    rbx,rcx
   140011a03:	mov    ecx,0x1000
   140011a08:	call   0x140008684
   140011a0d:	mov    QWORD PTR [rbx+0x10],rax
   140011a11:	test   rax,rax
   140011a14:	je     0x140011a23
   140011a16:	or     DWORD PTR [rbx+0x18],0x8
   140011a1a:	mov    DWORD PTR [rbx+0x24],0x1000
   140011a21:	jmp    0x140011a36
   140011a23:	or     DWORD PTR [rbx+0x18],0x4
   140011a27:	lea    rax,[rbx+0x20]
   140011a2b:	mov    DWORD PTR [rbx+0x24],0x2
   140011a32:	mov    QWORD PTR [rbx+0x10],rax
   140011a36:	mov    rax,QWORD PTR [rbx+0x10]
   140011a3a:	and    DWORD PTR [rbx+0x8],0x0
   140011a3e:	mov    QWORD PTR [rbx],rax
   140011a41:	add    rsp,0x20
   140011a45:	pop    rbx
   140011a46:	ret    
   140011a47:	int3   
   140011a48:	lock inc DWORD PTR [rcx]
   140011a4b:	mov    rax,QWORD PTR [rcx+0xd8]
   140011a52:	test   rax,rax
   140011a55:	je     0x140011a5a
   140011a57:	lock inc DWORD PTR [rax]
   140011a5a:	mov    rax,QWORD PTR [rcx+0xe8]
   140011a61:	test   rax,rax
   140011a64:	je     0x140011a69
   140011a66:	lock inc DWORD PTR [rax]
   140011a69:	mov    rax,QWORD PTR [rcx+0xe0]
   140011a70:	test   rax,rax
   140011a73:	je     0x140011a78
   140011a75:	lock inc DWORD PTR [rax]
   140011a78:	mov    rax,QWORD PTR [rcx+0xf8]
   140011a7f:	test   rax,rax
   140011a82:	je     0x140011a87
   140011a84:	lock inc DWORD PTR [rax]
   140011a87:	lea    rax,[rcx+0x28]
   140011a8b:	mov    r8d,0x6
   140011a91:	lea    rdx,[rip+0x2b33c]        # 0x14003cdd4
   140011a98:	cmp    QWORD PTR [rax-0x10],rdx
   140011a9c:	je     0x140011aa9
   140011a9e:	mov    rdx,QWORD PTR [rax]
   140011aa1:	test   rdx,rdx
   140011aa4:	je     0x140011aa9
   140011aa6:	lock inc DWORD PTR [rdx]
   140011aa9:	cmp    QWORD PTR [rax-0x18],0x0
   140011aae:	je     0x140011abc
   140011ab0:	mov    rdx,QWORD PTR [rax-0x8]
   140011ab4:	test   rdx,rdx
   140011ab7:	je     0x140011abc
   140011ab9:	lock inc DWORD PTR [rdx]
   140011abc:	add    rax,0x20
   140011ac0:	dec    r8
   140011ac3:	jne    0x140011a91
   140011ac5:	mov    rax,QWORD PTR [rcx+0x120]
   140011acc:	lock inc DWORD PTR [rax+0x15c]
   140011ad3:	ret    
   140011ad4:	mov    QWORD PTR [rsp+0x8],rbx
   140011ad9:	mov    QWORD PTR [rsp+0x10],rbp
   140011ade:	mov    QWORD PTR [rsp+0x18],rsi
   140011ae3:	push   rdi
   140011ae4:	sub    rsp,0x20
   140011ae8:	mov    rax,QWORD PTR [rcx+0xf0]
   140011aef:	mov    rbx,rcx
   140011af2:	test   rax,rax
   140011af5:	je     0x140011b70
   140011af7:	lea    rcx,[rip+0x2b912]        # 0x14003d410
   140011afe:	cmp    rax,rcx
   140011b01:	je     0x140011b70
   140011b03:	mov    rax,QWORD PTR [rbx+0xd8]
   140011b0a:	test   rax,rax
   140011b0d:	je     0x140011b70
   140011b0f:	cmp    DWORD PTR [rax],0x0
   140011b12:	jne    0x140011b70
   140011b14:	mov    rcx,QWORD PTR [rbx+0xe8]
   140011b1b:	test   rcx,rcx
   140011b1e:	je     0x140011b36
   140011b20:	cmp    DWORD PTR [rcx],0x0
   140011b23:	jne    0x140011b36
   140011b25:	call   0x140007dc0
   140011b2a:	mov    rcx,QWORD PTR [rbx+0xf0]
   140011b31:	call   0x14001d6a0
   140011b36:	mov    rcx,QWORD PTR [rbx+0xe0]
   140011b3d:	test   rcx,rcx
   140011b40:	je     0x140011b58
   140011b42:	cmp    DWORD PTR [rcx],0x0
   140011b45:	jne    0x140011b58
   140011b47:	call   0x140007dc0
   140011b4c:	mov    rcx,QWORD PTR [rbx+0xf0]
   140011b53:	call   0x14001dce8
   140011b58:	mov    rcx,QWORD PTR [rbx+0xd8]
   140011b5f:	call   0x140007dc0
   140011b64:	mov    rcx,QWORD PTR [rbx+0xf0]
   140011b6b:	call   0x140007dc0
   140011b70:	mov    rax,QWORD PTR [rbx+0xf8]
   140011b77:	test   rax,rax
   140011b7a:	je     0x140011bc3
   140011b7c:	cmp    DWORD PTR [rax],0x0
   140011b7f:	jne    0x140011bc3
   140011b81:	mov    rcx,QWORD PTR [rbx+0x100]
   140011b88:	sub    rcx,0xfe
   140011b8f:	call   0x140007dc0
   140011b94:	mov    rcx,QWORD PTR [rbx+0x110]
   140011b9b:	mov    edi,0x80
   140011ba0:	sub    rcx,rdi
   140011ba3:	call   0x140007dc0
   140011ba8:	mov    rcx,QWORD PTR [rbx+0x118]
   140011baf:	sub    rcx,rdi
   140011bb2:	call   0x140007dc0
   140011bb7:	mov    rcx,QWORD PTR [rbx+0xf8]
   140011bbe:	call   0x140007dc0
   140011bc3:	mov    rcx,QWORD PTR [rbx+0x120]
   140011bca:	lea    rax,[rip+0x2b20f]        # 0x14003cde0
   140011bd1:	cmp    rcx,rax
   140011bd4:	je     0x140011bf0
   140011bd6:	cmp    DWORD PTR [rcx+0x15c],0x0
   140011bdd:	jne    0x140011bf0
   140011bdf:	call   0x14001e058
   140011be4:	mov    rcx,QWORD PTR [rbx+0x120]
   140011beb:	call   0x140007dc0
   140011bf0:	lea    rsi,[rbx+0x128]
   140011bf7:	lea    rdi,[rbx+0x28]
   140011bfb:	mov    ebp,0x6
   140011c00:	lea    rax,[rip+0x2b1cd]        # 0x14003cdd4
   140011c07:	cmp    QWORD PTR [rdi-0x10],rax
   140011c0b:	je     0x140011c27
   140011c0d:	mov    rcx,QWORD PTR [rdi]
   140011c10:	test   rcx,rcx
   140011c13:	je     0x140011c27
   140011c15:	cmp    DWORD PTR [rcx],0x0
   140011c18:	jne    0x140011c27
   140011c1a:	call   0x140007dc0
   140011c1f:	mov    rcx,QWORD PTR [rsi]
   140011c22:	call   0x140007dc0
   140011c27:	cmp    QWORD PTR [rdi-0x18],0x0
   140011c2c:	je     0x140011c41
   140011c2e:	mov    rcx,QWORD PTR [rdi-0x8]
   140011c32:	test   rcx,rcx
   140011c35:	je     0x140011c41
   140011c37:	cmp    DWORD PTR [rcx],0x0
   140011c3a:	jne    0x140011c41
   140011c3c:	call   0x140007dc0
   140011c41:	add    rsi,0x8
   140011c45:	add    rdi,0x20
   140011c49:	dec    rbp
   140011c4c:	jne    0x140011c00
   140011c4e:	mov    rcx,rbx
   140011c51:	mov    rbx,QWORD PTR [rsp+0x30]
   140011c56:	mov    rbp,QWORD PTR [rsp+0x38]
   140011c5b:	mov    rsi,QWORD PTR [rsp+0x40]
   140011c60:	add    rsp,0x20
   140011c64:	pop    rdi
   140011c65:	jmp    0x140007dc0
   140011c6a:	int3   
   140011c6b:	int3   
   140011c6c:	test   rcx,rcx
   140011c6f:	je     0x140011d0c
   140011c75:	or     r9d,0xffffffff
   140011c79:	lock add DWORD PTR [rcx],r9d
   140011c7d:	mov    rax,QWORD PTR [rcx+0xd8]
   140011c84:	test   rax,rax
   140011c87:	je     0x140011c8d
   140011c89:	lock add DWORD PTR [rax],r9d
   140011c8d:	mov    rax,QWORD PTR [rcx+0xe8]
   140011c94:	test   rax,rax
   140011c97:	je     0x140011c9d
   140011c99:	lock add DWORD PTR [rax],r9d
   140011c9d:	mov    rax,QWORD PTR [rcx+0xe0]
   140011ca4:	test   rax,rax
   140011ca7:	je     0x140011cad
   140011ca9:	lock add DWORD PTR [rax],r9d
   140011cad:	mov    rax,QWORD PTR [rcx+0xf8]
   140011cb4:	test   rax,rax
   140011cb7:	je     0x140011cbd
   140011cb9:	lock add DWORD PTR [rax],r9d
   140011cbd:	lea    rax,[rcx+0x28]
   140011cc1:	mov    r8d,0x6
   140011cc7:	lea    rdx,[rip+0x2b106]        # 0x14003cdd4
   140011cce:	cmp    QWORD PTR [rax-0x10],rdx
   140011cd2:	je     0x140011ce0
   140011cd4:	mov    rdx,QWORD PTR [rax]
   140011cd7:	test   rdx,rdx
   140011cda:	je     0x140011ce0
   140011cdc:	lock add DWORD PTR [rdx],r9d
   140011ce0:	cmp    QWORD PTR [rax-0x18],0x0
   140011ce5:	je     0x140011cf4
   140011ce7:	mov    rdx,QWORD PTR [rax-0x8]
   140011ceb:	test   rdx,rdx
   140011cee:	je     0x140011cf4
   140011cf0:	lock add DWORD PTR [rdx],r9d
   140011cf4:	add    rax,0x20
   140011cf8:	dec    r8
   140011cfb:	jne    0x140011cc7
   140011cfd:	mov    rax,QWORD PTR [rcx+0x120]
   140011d04:	lock add DWORD PTR [rax+0x15c],r9d
   140011d0c:	mov    rax,rcx
   140011d0f:	ret    
   140011d10:	rex push rbx
   140011d12:	sub    rsp,0x20
   140011d16:	call   0x14000a3ec
   140011d1b:	mov    rbx,rax
   140011d1e:	mov    ecx,DWORD PTR [rip+0x2b4f4]        # 0x14003d218
   140011d24:	test   DWORD PTR [rax+0xc8],ecx
   140011d2a:	je     0x140011d44
   140011d2c:	cmp    QWORD PTR [rax+0xc0],0x0
   140011d34:	je     0x140011d44
   140011d36:	call   0x14000a3ec
   140011d3b:	mov    rbx,QWORD PTR [rax+0xc0]
   140011d42:	jmp    0x140011d6f
   140011d44:	mov    ecx,0xc
   140011d49:	call   0x14000fc2c
   140011d4e:	nop
   140011d4f:	lea    rcx,[rbx+0xc0]
   140011d56:	mov    rdx,QWORD PTR [rip+0x2b343]        # 0x14003d0a0
   140011d5d:	call   0x140011d88
   140011d62:	mov    rbx,rax
   140011d65:	mov    ecx,0xc
   140011d6a:	call   0x14000fe48
   140011d6f:	test   rbx,rbx
   140011d72:	jne    0x140011d7c
   140011d74:	lea    ecx,[rbx+0x20]
   140011d77:	call   0x1400081bc
   140011d7c:	mov    rax,rbx
   140011d7f:	add    rsp,0x20
   140011d83:	pop    rbx
   140011d84:	ret    
   140011d85:	int3   
   140011d86:	int3   
   140011d87:	int3   
   140011d88:	mov    QWORD PTR [rsp+0x8],rbx
   140011d8d:	push   rdi
   140011d8e:	sub    rsp,0x20
   140011d92:	mov    rdi,rdx
   140011d95:	test   rdx,rdx
   140011d98:	je     0x140011ddd
   140011d9a:	test   rcx,rcx
   140011d9d:	je     0x140011ddd
   140011d9f:	mov    rbx,QWORD PTR [rcx]
   140011da2:	cmp    rbx,rdx
   140011da5:	je     0x140011dd8
   140011da7:	mov    QWORD PTR [rcx],rdx
   140011daa:	mov    rcx,rdx
   140011dad:	call   0x140011a48
   140011db2:	test   rbx,rbx
   140011db5:	je     0x140011dd8
   140011db7:	mov    rcx,rbx
   140011dba:	call   0x140011c6c
   140011dbf:	cmp    DWORD PTR [rbx],0x0
   140011dc2:	jne    0x140011dd8
   140011dc4:	lea    rax,[rip+0x2b2e5]        # 0x14003d0b0
   140011dcb:	cmp    rbx,rax
   140011dce:	je     0x140011dd8
   140011dd0:	mov    rcx,rbx
   140011dd3:	call   0x140011ad4
   140011dd8:	mov    rax,rdi
   140011ddb:	jmp    0x140011ddf
   140011ddd:	xor    eax,eax
   140011ddf:	mov    rbx,QWORD PTR [rsp+0x30]
   140011de4:	add    rsp,0x20
   140011de8:	pop    rdi
   140011de9:	ret    
   140011dea:	int3   
   140011deb:	int3   
   140011dec:	rex push rbx
   140011dee:	sub    rsp,0x20
   140011df2:	mov    edx,0x107
   140011df7:	movzx  ebx,cx
   140011dfa:	call   0x14001f0b8
   140011dff:	xor    edx,edx
   140011e01:	test   eax,eax
   140011e03:	jne    0x140011e0b
   140011e05:	cmp    bx,0x5f
   140011e09:	jne    0x140011e10
   140011e0b:	mov    edx,0x1
   140011e10:	mov    eax,edx
   140011e12:	add    rsp,0x20
   140011e16:	pop    rbx
   140011e17:	ret    
   140011e18:	rex push rbx
   140011e1a:	sub    rsp,0x20
   140011e1e:	mov    edx,0x103
   140011e23:	movzx  ebx,cx
   140011e26:	call   0x14001f0b8
   140011e2b:	xor    edx,edx
   140011e2d:	test   eax,eax
   140011e2f:	jne    0x140011e37
   140011e31:	cmp    bx,0x5f
   140011e35:	jne    0x140011e3c
   140011e37:	mov    edx,0x1
   140011e3c:	mov    eax,edx
   140011e3e:	add    rsp,0x20
   140011e42:	pop    rbx
   140011e43:	ret    
   140011e44:	rex push rbx
   140011e46:	sub    rsp,0x40
   140011e4a:	mov    ebx,ecx
   140011e4c:	lea    rcx,[rsp+0x20]
   140011e51:	call   0x140008fac
   140011e56:	mov    rax,QWORD PTR [rsp+0x20]
   140011e5b:	movzx  edx,bl
   140011e5e:	mov    rcx,QWORD PTR [rax+0x108]
   140011e65:	movzx  eax,WORD PTR [rcx+rdx*2]
   140011e69:	and    eax,0x8000
   140011e6e:	cmp    BYTE PTR [rsp+0x38],0x0
   140011e73:	je     0x140011e81
   140011e75:	mov    rcx,QWORD PTR [rsp+0x30]
   140011e7a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140011e81:	add    rsp,0x40
   140011e85:	pop    rbx
   140011e86:	ret    
   140011e87:	int3   
   140011e88:	mov    edx,0x107
   140011e8d:	jmp    0x14001f0b8
   140011e92:	int3   
   140011e93:	int3   
   140011e94:	mov    edx,0x103
   140011e99:	jmp    0x14001f0b8
   140011e9e:	int3   
   140011e9f:	int3   
   140011ea0:	cmp    cx,0x9
   140011ea4:	jne    0x140011eac
   140011ea6:	mov    eax,0x40
   140011eab:	ret    
   140011eac:	mov    edx,0x40
   140011eb1:	jmp    0x14001f0b8
   140011eb6:	int3   
   140011eb7:	int3   
   140011eb8:	mov    edx,0x20
   140011ebd:	jmp    0x14001f0b8
   140011ec2:	int3   
   140011ec3:	int3   
   140011ec4:	rex push rbx
   140011ec6:	sub    rsp,0x20
   140011eca:	mov    edx,0x107
   140011ecf:	movzx  ebx,cx
   140011ed2:	call   0x14001f0b8
   140011ed7:	xor    edx,edx
   140011ed9:	test   eax,eax
   140011edb:	jne    0x140011ee3
   140011edd:	cmp    bx,0x5f
   140011ee1:	jne    0x140011ee8
   140011ee3:	mov    edx,0x1
   140011ee8:	mov    eax,edx
   140011eea:	add    rsp,0x20
   140011eee:	pop    rbx
   140011eef:	ret    
   140011ef0:	rex push rbx
   140011ef2:	sub    rsp,0x20
   140011ef6:	mov    edx,0x103
   140011efb:	movzx  ebx,cx
   140011efe:	call   0x14001f0b8
   140011f03:	xor    edx,edx
   140011f05:	test   eax,eax
   140011f07:	jne    0x140011f0f
   140011f09:	cmp    bx,0x5f
   140011f0d:	jne    0x140011f14
   140011f0f:	mov    edx,0x1
   140011f14:	mov    eax,edx
   140011f16:	add    rsp,0x20
   140011f1a:	pop    rbx
   140011f1b:	ret    
   140011f1c:	mov    edx,0x4
   140011f21:	jmp    0x14001f0b8
   140011f26:	int3   
   140011f27:	int3   
   140011f28:	mov    edx,0x117
   140011f2d:	jmp    0x14001f0b8
   140011f32:	int3   
   140011f33:	int3   
   140011f34:	mov    edx,0x2
   140011f39:	jmp    0x14001f0b8
   140011f3e:	int3   
   140011f3f:	int3   
   140011f40:	mov    edx,0x157
   140011f45:	jmp    0x14001f0b8
   140011f4a:	int3   
   140011f4b:	int3   
   140011f4c:	mov    edx,0x10
   140011f51:	jmp    0x14001f0b8
   140011f56:	int3   
   140011f57:	int3   
   140011f58:	mov    edx,0x8
   140011f5d:	jmp    0x14001f0b8
   140011f62:	int3   
   140011f63:	int3   
   140011f64:	mov    edx,0x1
   140011f69:	jmp    0x14001f0b8
   140011f6e:	int3   
   140011f6f:	int3   
   140011f70:	mov    edx,0x80
   140011f75:	jmp    0x14001f0b8
   140011f7a:	int3   
   140011f7b:	int3   
   140011f7c:	rex push rbx
   140011f7e:	sub    rsp,0x40
   140011f82:	mov    ebx,ecx
   140011f84:	lea    rcx,[rsp+0x20]
   140011f89:	xor    edx,edx
   140011f8b:	call   0x140008fac
   140011f90:	mov    rax,QWORD PTR [rsp+0x20]
   140011f95:	movzx  edx,bl
   140011f98:	mov    rcx,QWORD PTR [rax+0x108]
   140011f9f:	movzx  eax,WORD PTR [rcx+rdx*2]
   140011fa3:	and    eax,0x8000
   140011fa8:	cmp    BYTE PTR [rsp+0x38],0x0
   140011fad:	je     0x140011fbb
   140011faf:	mov    rcx,QWORD PTR [rsp+0x30]
   140011fb4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140011fbb:	add    rsp,0x40
   140011fbf:	pop    rbx
   140011fc0:	ret    
   140011fc1:	int3   
   140011fc2:	int3   
   140011fc3:	int3   
   140011fc4:	mov    edx,0x107
   140011fc9:	jmp    0x14001f0b8
   140011fce:	int3   
   140011fcf:	int3   
   140011fd0:	mov    edx,0x103
   140011fd5:	jmp    0x14001f0b8
   140011fda:	int3   
   140011fdb:	int3   
   140011fdc:	xor    eax,eax
   140011fde:	mov    edx,0x80
   140011fe3:	cmp    cx,dx
   140011fe6:	setb   al
   140011fe9:	ret    
   140011fea:	int3   
   140011feb:	int3   
   140011fec:	cmp    cx,0x9
   140011ff0:	jne    0x140011ff8
   140011ff2:	mov    eax,0x40
   140011ff7:	ret    
   140011ff8:	mov    edx,0x40
   140011ffd:	jmp    0x14001f0b8
   140012002:	int3   
   140012003:	int3   
   140012004:	mov    edx,0x20
   140012009:	jmp    0x14001f0b8
   14001200e:	int3   
   14001200f:	int3   
   140012010:	mov    edx,0x4
   140012015:	jmp    0x14001f0b8
   14001201a:	int3   
   14001201b:	int3   
   14001201c:	mov    edx,0x117
   140012021:	jmp    0x14001f0b8
   140012026:	int3   
   140012027:	int3   
   140012028:	mov    edx,0x2
   14001202d:	jmp    0x14001f0b8
   140012032:	int3   
   140012033:	int3   
   140012034:	mov    edx,0x157
   140012039:	jmp    0x14001f0b8
   14001203e:	int3   
   14001203f:	int3   
   140012040:	mov    edx,0x10
   140012045:	jmp    0x14001f0b8
   14001204a:	int3   
   14001204b:	int3   
   14001204c:	mov    edx,0x8
   140012051:	jmp    0x14001f0b8
   140012056:	int3   
   140012057:	int3   
   140012058:	mov    edx,0x1
   14001205d:	jmp    0x14001f0b8
   140012062:	int3   
   140012063:	int3   
   140012064:	mov    edx,0x80
   140012069:	jmp    0x14001f0b8
   14001206e:	int3   
   14001206f:	int3   
   140012070:	mov    rcx,QWORD PTR [rip+0x2a159]        # 0x14003c1d0
   140012077:	xor    eax,eax
   140012079:	or     rcx,0x1
   14001207d:	cmp    QWORD PTR [rip+0x2c894],rcx        # 0x14003e918
   140012084:	sete   al
   140012087:	ret    
   140012088:	mov    rax,rsp
   14001208b:	mov    QWORD PTR [rax+0x10],rdx
   14001208f:	mov    QWORD PTR [rax+0x18],r8
   140012093:	mov    QWORD PTR [rax+0x20],r9
   140012097:	sub    rsp,0x28
   14001209b:	lea    r8,[rax+0x18]
   14001209f:	call   0x14001f120
   1400120a4:	add    rsp,0x28
   1400120a8:	ret    
   1400120a9:	int3   
   1400120aa:	int3   
   1400120ab:	int3   
   1400120ac:	mov    rax,rsp
   1400120af:	mov    QWORD PTR [rax+0x8],rcx
   1400120b3:	mov    QWORD PTR [rax+0x10],rdx
   1400120b7:	mov    QWORD PTR [rax+0x18],r8
   1400120bb:	mov    QWORD PTR [rax+0x20],r9
   1400120bf:	sub    rsp,0x28
   1400120c3:	lea    r8,[rax+0x10]
   1400120c7:	xor    edx,edx
   1400120c9:	call   0x14001f150
   1400120ce:	add    rsp,0x28
   1400120d2:	ret    
   1400120d3:	int3   
   1400120d4:	mov    rax,rsp
   1400120d7:	mov    QWORD PTR [rax+0x10],rdx
   1400120db:	mov    QWORD PTR [rax+0x18],r8
   1400120df:	mov    QWORD PTR [rax+0x20],r9
   1400120e3:	sub    rsp,0x28
   1400120e7:	lea    r8,[rax+0x18]
   1400120eb:	call   0x14001f150
   1400120f0:	add    rsp,0x28
   1400120f4:	ret    
   1400120f5:	int3   
   1400120f6:	int3   
   1400120f7:	int3   
   1400120f8:	mov    rax,rsp
   1400120fb:	mov    QWORD PTR [rax+0x10],rdx
   1400120ff:	mov    QWORD PTR [rax+0x18],r8
   140012103:	mov    QWORD PTR [rax+0x20],r9
   140012107:	sub    rsp,0x28
   14001210b:	lea    r8,[rax+0x18]
   14001210f:	call   0x14001f168
   140012114:	add    rsp,0x28
   140012118:	ret    
   140012119:	int3   
   14001211a:	int3   
   14001211b:	int3   
   14001211c:	mov    rdx,QWORD PTR [rip+0x2a0ad]        # 0x14003c1d0
   140012123:	xor    eax,eax
   140012125:	or     rdx,0x1
   140012129:	cmp    QWORD PTR [rip+0x2c7e8],rdx        # 0x14003e918
   140012130:	sete   al
   140012133:	neg    ecx
   140012135:	sbb    rcx,rcx
   140012138:	and    rcx,rdx
   14001213b:	mov    QWORD PTR [rip+0x2c7d6],rcx        # 0x14003e918
   140012142:	ret    
   140012143:	int3   
   140012144:	mov    rax,rsp
   140012147:	mov    QWORD PTR [rax+0x8],rcx
   14001214b:	mov    QWORD PTR [rax+0x10],rdx
   14001214f:	mov    QWORD PTR [rax+0x18],r8
   140012153:	mov    QWORD PTR [rax+0x20],r9
   140012157:	push   rbx
   140012158:	push   rdi
   140012159:	sub    rsp,0x28
   14001215d:	xor    eax,eax
   14001215f:	test   rcx,rcx
   140012162:	setne  al
   140012165:	test   eax,eax
   140012167:	jne    0x14001217e
   140012169:	call   0x140009cb4
   14001216e:	mov    DWORD PTR [rax],0x16
   140012174:	call   0x140008d58
   140012179:	or     eax,0xffffffff
   14001217c:	jmp    0x1400121e8
   14001217e:	lea    rdi,[rsp+0x48]
   140012183:	call   0x140010e04
   140012188:	lea    rdx,[rax+0x30]
   14001218c:	mov    ecx,0x1
   140012191:	call   0x140010e74
   140012196:	nop
   140012197:	call   0x140010e04
   14001219c:	lea    rcx,[rax+0x30]
   1400121a0:	call   0x1400109f0
   1400121a5:	mov    ebx,eax
   1400121a7:	call   0x140010e04
   1400121ac:	lea    rcx,[rax+0x30]
   1400121b0:	mov    r9,rdi
   1400121b3:	xor    r8d,r8d
   1400121b6:	mov    rdx,QWORD PTR [rsp+0x40]
   1400121bb:	call   0x1400125d8
   1400121c0:	mov    edi,eax
   1400121c2:	call   0x140010e04
   1400121c7:	lea    rdx,[rax+0x30]
   1400121cb:	mov    ecx,ebx
   1400121cd:	call   0x1400109b8
   1400121d2:	nop
   1400121d3:	call   0x140010e04
   1400121d8:	lea    rdx,[rax+0x30]
   1400121dc:	mov    ecx,0x1
   1400121e1:	call   0x140010ef8
   1400121e6:	mov    eax,edi
   1400121e8:	add    rsp,0x28
   1400121ec:	pop    rdi
   1400121ed:	pop    rbx
   1400121ee:	ret    
   1400121ef:	int3   
   1400121f0:	mov    rax,rsp
   1400121f3:	mov    QWORD PTR [rax+0x8],rcx
   1400121f7:	mov    QWORD PTR [rax+0x10],rdx
   1400121fb:	mov    QWORD PTR [rax+0x18],r8
   1400121ff:	mov    QWORD PTR [rax+0x20],r9
   140012203:	sub    rsp,0x28
   140012207:	lea    r8,[rax+0x10]
   14001220b:	xor    edx,edx
   14001220d:	call   0x14001f168
   140012212:	add    rsp,0x28
   140012216:	ret    
   140012217:	int3   
   140012218:	mov    QWORD PTR [rsp+0x18],rbx
   14001221d:	mov    QWORD PTR [rsp+0x20],rbp
   140012222:	push   rsi
   140012223:	push   rdi
   140012224:	push   r14
   140012226:	sub    rsp,0x40
   14001222a:	mov    rax,QWORD PTR [rip+0x29f9f]        # 0x14003c1d0
   140012231:	xor    rax,rsp
   140012234:	mov    QWORD PTR [rsp+0x30],rax
   140012239:	test   BYTE PTR [rdx+0x18],0x40
   14001223d:	mov    rdi,rdx
   140012240:	movzx  esi,cx
   140012243:	jne    0x1400123c2
   140012249:	mov    rcx,rdx
   14001224c:	call   0x140010f18
   140012251:	lea    rbp,[rip+0x29fd8]        # 0x14003c230
   140012258:	lea    r14,[rip+0x2bab1]        # 0x14003dd10
   14001225f:	cmp    eax,0xffffffff
   140012262:	je     0x140012295
   140012264:	mov    rcx,rdi
   140012267:	call   0x140010f18
   14001226c:	cmp    eax,0xfffffffe
   14001226f:	je     0x140012295
   140012271:	mov    rcx,rdi
   140012274:	call   0x140010f18
   140012279:	mov    rcx,rdi
   14001227c:	movsxd rbx,eax
   14001227f:	sar    rbx,0x5
   140012283:	call   0x140010f18
   140012288:	and    eax,0x1f
   14001228b:	imul   rcx,rax,0x58
   14001228f:	add    rcx,QWORD PTR [r14+rbx*8]
   140012293:	jmp    0x140012298
   140012295:	mov    rcx,rbp
   140012298:	mov    al,BYTE PTR [rcx+0x38]
   14001229b:	and    al,0x7f
   14001229d:	cmp    al,0x2
   14001229f:	je     0x1400123ab
   1400122a5:	mov    rcx,rdi
   1400122a8:	call   0x140010f18
   1400122ad:	cmp    eax,0xffffffff
   1400122b0:	je     0x1400122e3
   1400122b2:	mov    rcx,rdi
   1400122b5:	call   0x140010f18
   1400122ba:	cmp    eax,0xfffffffe
   1400122bd:	je     0x1400122e3
   1400122bf:	mov    rcx,rdi
   1400122c2:	call   0x140010f18
   1400122c7:	mov    rcx,rdi
   1400122ca:	movsxd rbx,eax
   1400122cd:	sar    rbx,0x5
   1400122d1:	call   0x140010f18
   1400122d6:	and    eax,0x1f
   1400122d9:	imul   rcx,rax,0x58
   1400122dd:	add    rcx,QWORD PTR [r14+rbx*8]
   1400122e1:	jmp    0x1400122e6
   1400122e3:	mov    rcx,rbp
   1400122e6:	mov    al,BYTE PTR [rcx+0x38]
   1400122e9:	and    al,0x7f
   1400122eb:	cmp    al,0x1
   1400122ed:	je     0x1400123ab
   1400122f3:	mov    rcx,rdi
   1400122f6:	call   0x140010f18
   1400122fb:	cmp    eax,0xffffffff
   1400122fe:	je     0x14001232f
   140012300:	mov    rcx,rdi
   140012303:	call   0x140010f18
   140012308:	cmp    eax,0xfffffffe
   14001230b:	je     0x14001232f
   14001230d:	mov    rcx,rdi
   140012310:	call   0x140010f18
   140012315:	mov    rcx,rdi
   140012318:	movsxd rbx,eax
   14001231b:	sar    rbx,0x5
   14001231f:	call   0x140010f18
   140012324:	and    eax,0x1f
   140012327:	imul   rbp,rax,0x58
   14001232b:	add    rbp,QWORD PTR [r14+rbx*8]
   14001232f:	test   BYTE PTR [rbp+0x8],0x80
   140012333:	je     0x1400123c2
   140012339:	lea    rdx,[rsp+0x24]
   14001233e:	lea    rcx,[rsp+0x20]
   140012343:	movzx  r9d,si
   140012347:	mov    r8d,0x5
   14001234d:	call   0x14001f4b4
   140012352:	xor    ebx,ebx
   140012354:	test   eax,eax
   140012356:	je     0x140012362
   140012358:	mov    eax,0xffff
   14001235d:	jmp    0x1400123eb
   140012362:	cmp    DWORD PTR [rsp+0x20],ebx
   140012366:	jle    0x1400123a6
   140012368:	lea    r14,[rsp+0x24]
   14001236d:	dec    DWORD PTR [rdi+0x8]
   140012370:	js     0x140012388
   140012372:	mov    rcx,QWORD PTR [rdi]
   140012375:	mov    al,BYTE PTR [r14]
   140012378:	mov    BYTE PTR [rcx],al
   14001237a:	mov    rax,QWORD PTR [rdi]
   14001237d:	movzx  ecx,BYTE PTR [rax]
   140012380:	inc    rax
   140012383:	mov    QWORD PTR [rdi],rax
   140012386:	jmp    0x140012396
   140012388:	movsx  ecx,BYTE PTR [r14]
   14001238c:	mov    rdx,rdi
   14001238f:	call   0x140008e20
   140012394:	mov    ecx,eax
   140012396:	cmp    ecx,0xffffffff
   140012399:	je     0x140012358
   14001239b:	inc    ebx
   14001239d:	inc    r14
   1400123a0:	cmp    ebx,DWORD PTR [rsp+0x20]
   1400123a4:	jl     0x14001236d
   1400123a6:	movzx  eax,si
   1400123a9:	jmp    0x1400123eb
   1400123ab:	movsxd rcx,DWORD PTR [rdi+0x8]
   1400123af:	add    rcx,0xfffffffffffffffe
   1400123b3:	mov    DWORD PTR [rdi+0x8],ecx
   1400123b6:	test   ecx,ecx
   1400123b8:	js     0x1400123e0
   1400123ba:	mov    rcx,QWORD PTR [rdi]
   1400123bd:	mov    WORD PTR [rcx],si
   1400123c0:	jmp    0x1400123d7
   1400123c2:	movsxd rax,DWORD PTR [rdi+0x8]
   1400123c6:	add    rax,0xfffffffffffffffe
   1400123ca:	mov    DWORD PTR [rdi+0x8],eax
   1400123cd:	test   eax,eax
   1400123cf:	js     0x1400123e0
   1400123d1:	mov    rax,QWORD PTR [rdi]
   1400123d4:	mov    WORD PTR [rax],si
   1400123d7:	add    QWORD PTR [rdi],0x2
   1400123db:	movzx  eax,si
   1400123de:	jmp    0x1400123eb
   1400123e0:	mov    rdx,rdi
   1400123e3:	movzx  ecx,si
   1400123e6:	call   0x14001f4c8
   1400123eb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400123f0:	xor    rcx,rsp
   1400123f3:	call   0x14000c380
   1400123f8:	mov    rbx,QWORD PTR [rsp+0x70]
   1400123fd:	mov    rbp,QWORD PTR [rsp+0x78]
   140012402:	add    rsp,0x40
   140012406:	pop    r14
   140012408:	pop    rdi
   140012409:	pop    rsi
   14001240a:	ret    
   14001240b:	int3   
   14001240c:	mov    QWORD PTR [rsp+0x8],rbx
   140012411:	mov    QWORD PTR [rsp+0x10],rdx
   140012416:	push   rdi
   140012417:	sub    rsp,0x20
   14001241b:	mov    rbx,rdx
   14001241e:	movzx  edi,cx
   140012421:	xor    eax,eax
   140012423:	test   rdx,rdx
   140012426:	setne  al
   140012429:	test   eax,eax
   14001242b:	jne    0x140012444
   14001242d:	call   0x140009cb4
   140012432:	mov    DWORD PTR [rax],0x16
   140012438:	call   0x140008d58
   14001243d:	mov    eax,0xffff
   140012442:	jmp    0x140012466
   140012444:	mov    rcx,rdx
   140012447:	call   0x140010e0c
   14001244c:	nop
   14001244d:	mov    rdx,rbx
   140012450:	movzx  ecx,di
   140012453:	call   0x140012218
   140012458:	movzx  edi,ax
   14001245b:	mov    rcx,rbx
   14001245e:	call   0x140010ea8
   140012463:	movzx  eax,di
   140012466:	mov    rbx,QWORD PTR [rsp+0x30]
   14001246b:	add    rsp,0x20
   14001246f:	pop    rdi
   140012470:	ret    
   140012471:	int3   
   140012472:	int3   
   140012473:	int3   
   140012474:	jmp    0x14001240c
   140012479:	int3   
   14001247a:	int3   
   14001247b:	int3   
   14001247c:	mov    rax,rsp
   14001247f:	mov    QWORD PTR [rax+0x8],rbx
   140012483:	mov    QWORD PTR [rax+0x10],rbp
   140012487:	mov    QWORD PTR [rax+0x18],rsi
   14001248b:	mov    QWORD PTR [rax+0x20],rdi
   14001248f:	push   r14
   140012491:	sub    rsp,0x50
   140012495:	xor    r14d,r14d
   140012498:	mov    rbp,r8
   14001249b:	mov    rsi,rdx
   14001249e:	mov    rdi,rcx
   1400124a1:	test   rdx,rdx
   1400124a4:	je     0x1400124b9
   1400124a6:	test   r8,r8
   1400124a9:	je     0x1400124b9
   1400124ab:	cmp    BYTE PTR [rdx],r14b
   1400124ae:	jne    0x1400124d6
   1400124b0:	test   rcx,rcx
   1400124b3:	je     0x1400124b9
   1400124b5:	mov    WORD PTR [rcx],r14w
   1400124b9:	xor    eax,eax
   1400124bb:	mov    rbx,QWORD PTR [rsp+0x60]
   1400124c0:	mov    rbp,QWORD PTR [rsp+0x68]
   1400124c5:	mov    rsi,QWORD PTR [rsp+0x70]
   1400124ca:	mov    rdi,QWORD PTR [rsp+0x78]
   1400124cf:	add    rsp,0x50
   1400124d3:	pop    r14
   1400124d5:	ret    
   1400124d6:	lea    rcx,[rsp+0x30]
   1400124db:	mov    rdx,r9
   1400124de:	call   0x140008fac
   1400124e3:	mov    rax,QWORD PTR [rsp+0x30]
   1400124e8:	cmp    QWORD PTR [rax+0x138],r14
   1400124ef:	jne    0x140012506
   1400124f1:	test   rdi,rdi
   1400124f4:	je     0x1400124fc
   1400124f6:	movzx  eax,BYTE PTR [rsi]
   1400124f9:	mov    WORD PTR [rdi],ax
   1400124fc:	mov    ebx,0x1
   140012501:	jmp    0x1400125b3
   140012506:	movzx  ecx,BYTE PTR [rsi]
   140012509:	lea    rdx,[rsp+0x30]
   14001250e:	call   0x140011e44
   140012513:	mov    ebx,0x1
   140012518:	test   eax,eax
   14001251a:	je     0x140012576
   14001251c:	mov    rcx,QWORD PTR [rsp+0x30]
   140012521:	mov    r9d,DWORD PTR [rcx+0xd4]
   140012528:	cmp    r9d,ebx
   14001252b:	jle    0x14001255c
   14001252d:	cmp    ebp,r9d
   140012530:	jl     0x14001255c
   140012532:	mov    ecx,DWORD PTR [rcx+0x4]
   140012535:	mov    eax,r14d
   140012538:	test   rdi,rdi
   14001253b:	setne  al
   14001253e:	lea    edx,[rbx+0x8]
   140012541:	mov    r8,rsi
   140012544:	mov    DWORD PTR [rsp+0x28],eax
   140012548:	mov    QWORD PTR [rsp+0x20],rdi
   14001254d:	call   QWORD PTR [rip+0x19c35]        # 0x14002c188
   140012553:	mov    rcx,QWORD PTR [rsp+0x30]
   140012558:	test   eax,eax
   14001255a:	jne    0x14001256e
   14001255c:	movsxd rax,DWORD PTR [rcx+0xd4]
   140012563:	cmp    rbp,rax
   140012566:	jb     0x1400125a5
   140012568:	cmp    BYTE PTR [rsi+0x1],r14b
   14001256c:	je     0x1400125a5
   14001256e:	mov    ebx,DWORD PTR [rcx+0xd4]
   140012574:	jmp    0x1400125b3
   140012576:	mov    eax,r14d
   140012579:	test   rdi,rdi
   14001257c:	mov    r9d,ebx
   14001257f:	setne  al
   140012582:	mov    r8,rsi
   140012585:	mov    edx,0x9
   14001258a:	mov    DWORD PTR [rsp+0x28],eax
   14001258e:	mov    rax,QWORD PTR [rsp+0x30]
   140012593:	mov    QWORD PTR [rsp+0x20],rdi
   140012598:	mov    ecx,DWORD PTR [rax+0x4]
   14001259b:	call   QWORD PTR [rip+0x19be7]        # 0x14002c188
   1400125a1:	test   eax,eax
   1400125a3:	jne    0x1400125b3
   1400125a5:	call   0x140009cb4
   1400125aa:	or     ebx,0xffffffff
   1400125ad:	mov    DWORD PTR [rax],0x2a
   1400125b3:	cmp    BYTE PTR [rsp+0x48],r14b
   1400125b8:	je     0x1400125c6
   1400125ba:	mov    rcx,QWORD PTR [rsp+0x40]
   1400125bf:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400125c6:	mov    eax,ebx
   1400125c8:	jmp    0x1400124bb
   1400125cd:	int3   
   1400125ce:	int3   
   1400125cf:	int3   
   1400125d0:	xor    r9d,r9d
   1400125d3:	jmp    0x14001247c
   1400125d8:	mov    QWORD PTR [rsp+0x18],rbx
   1400125dd:	push   rbp
   1400125de:	push   rsi
   1400125df:	push   rdi
   1400125e0:	push   r12
   1400125e2:	push   r13
   1400125e4:	push   r14
   1400125e6:	push   r15
   1400125e8:	lea    rbp,[rsp-0x1e0]
   1400125f0:	sub    rsp,0x2e0
   1400125f7:	mov    rax,QWORD PTR [rip+0x29bd2]        # 0x14003c1d0
   1400125fe:	xor    rax,rsp
   140012601:	mov    QWORD PTR [rbp+0x1d8],rax
   140012608:	xor    eax,eax
   14001260a:	mov    rsi,rcx
   14001260d:	mov    QWORD PTR [rsp+0x68],rcx
   140012612:	mov    rdi,rdx
   140012615:	lea    rcx,[rbp-0x58]
   140012619:	mov    rdx,r8
   14001261c:	mov    r13,r9
   14001261f:	mov    DWORD PTR [rsp+0x70],eax
   140012623:	mov    r14d,eax
   140012626:	mov    DWORD PTR [rsp+0x54],eax
   14001262a:	mov    r12d,eax
   14001262d:	mov    DWORD PTR [rsp+0x48],eax
   140012631:	mov    DWORD PTR [rsp+0x60],eax
   140012635:	mov    DWORD PTR [rsp+0x58],eax
   140012639:	mov    ebx,eax
   14001263b:	mov    DWORD PTR [rsp+0x50],eax
   14001263f:	call   0x140008fac
   140012644:	call   0x140009cb4
   140012649:	or     r8d,0xffffffff
   14001264d:	xor    r10d,r10d
   140012650:	mov    QWORD PTR [rbp-0x80],rax
   140012654:	test   rsi,rsi
   140012657:	je     0x140012f93
   14001265d:	test   BYTE PTR [rsi+0x18],0x40
   140012661:	lea    r9,[rip+0xfffffffffffed998]        # 0x140000000
   140012668:	jne    0x1400126f4
   14001266e:	mov    rcx,rsi
   140012671:	call   0x140010f18
   140012676:	lea    r8,[rip+0x29bb3]        # 0x14003c230
   14001267d:	movsxd r10,eax
   140012680:	lea    ecx,[r10+0x2]
   140012684:	cmp    ecx,0x1
   140012687:	jbe    0x1400126ab
   140012689:	mov    rdx,r10
   14001268c:	mov    rcx,r10
   14001268f:	lea    rax,[rip+0xfffffffffffed96a]        # 0x140000000
   140012696:	and    edx,0x1f
   140012699:	sar    rcx,0x5
   14001269d:	imul   r9,rdx,0x58
   1400126a1:	add    r9,QWORD PTR [rax+rcx*8+0x3dd10]
   1400126a9:	jmp    0x1400126ae
   1400126ab:	mov    r9,r8
   1400126ae:	test   BYTE PTR [r9+0x38],0x7f
   1400126b3:	jne    0x140012f93
   1400126b9:	lea    eax,[r10+0x2]
   1400126bd:	lea    r9,[rip+0xfffffffffffed93c]        # 0x140000000
   1400126c4:	cmp    eax,0x1
   1400126c7:	jbe    0x1400126e2
   1400126c9:	mov    rcx,r10
   1400126cc:	mov    rax,r10
   1400126cf:	and    ecx,0x1f
   1400126d2:	sar    rax,0x5
   1400126d6:	imul   r8,rcx,0x58
   1400126da:	add    r8,QWORD PTR [r9+rax*8+0x3dd10]
   1400126e2:	test   BYTE PTR [r8+0x38],0x80
   1400126e7:	jne    0x140012f93
   1400126ed:	or     r8d,0xffffffff
   1400126f1:	xor    r10d,r10d
   1400126f4:	test   rdi,rdi
   1400126f7:	je     0x140012f93
   1400126fd:	mov    r15b,BYTE PTR [rdi]
   140012700:	mov    esi,r10d
   140012703:	mov    DWORD PTR [rsp+0x40],r10d
   140012708:	mov    DWORD PTR [rsp+0x44],r10d
   14001270d:	mov    edx,r10d
   140012710:	mov    QWORD PTR [rbp-0x78],r10
   140012714:	test   r15b,r15b
   140012717:	je     0x140012fab
   14001271d:	mov    r11d,0x200
   140012723:	inc    rdi
   140012726:	mov    QWORD PTR [rbp-0x68],rdi
   14001272a:	test   esi,esi
   14001272c:	js     0x140012fab
   140012732:	lea    eax,[r15-0x20]
   140012736:	cmp    al,0x58
   140012738:	ja     0x14001274c
   14001273a:	movsx  rax,r15b
   14001273e:	movsx  ecx,BYTE PTR [rax+r9*1+0x331d0]
   140012747:	and    ecx,0xf
   14001274a:	jmp    0x14001274f
   14001274c:	mov    ecx,r10d
   14001274f:	movsxd rax,edx
   140012752:	movsxd rcx,ecx
   140012755:	lea    rdx,[rax+rcx*8]
   140012759:	movsx  edx,BYTE PTR [rdx+r9*1+0x331f0]
   140012762:	sar    edx,0x4
   140012765:	mov    DWORD PTR [rsp+0x5c],edx
   140012769:	mov    ecx,edx
   14001276b:	test   edx,edx
   14001276d:	je     0x140012e55
   140012773:	dec    ecx
   140012775:	je     0x140012f6f
   14001277b:	dec    ecx
   14001277d:	je     0x140012f1f
   140012783:	dec    ecx
   140012785:	je     0x140012ee3
   14001278b:	dec    ecx
   14001278d:	je     0x140012edb
   140012793:	dec    ecx
   140012795:	je     0x140012ea6
   14001279b:	dec    ecx
   14001279d:	je     0x140012dcb
   1400127a3:	dec    ecx
   1400127a5:	jne    0x140012db6
   1400127ab:	movsx  ecx,r15b
   1400127af:	cmp    ecx,0x64
   1400127b2:	jg     0x140012921
   1400127b8:	je     0x140012a19
   1400127be:	cmp    ecx,0x41
   1400127c1:	je     0x1400128f6
   1400127c7:	cmp    ecx,0x43
   1400127ca:	je     0x14001289c
   1400127d0:	lea    eax,[rcx-0x45]
   1400127d3:	test   eax,0xfffffffd
   1400127d8:	je     0x1400128f6
   1400127de:	cmp    ecx,0x53
   1400127e1:	je     0x140012850
   1400127e3:	cmp    ecx,0x58
   1400127e6:	je     0x1400129b2
   1400127ec:	cmp    ecx,0x5a
   1400127ef:	je     0x140012808
   1400127f1:	cmp    ecx,0x61
   1400127f4:	je     0x140012902
   1400127fa:	cmp    ecx,0x63
   1400127fd:	je     0x1400128aa
   140012803:	jmp    0x140012c24
   140012808:	mov    rax,QWORD PTR [r13+0x0]
   14001280c:	add    r13,0x8
   140012810:	test   rax,rax
   140012813:	je     0x140012844
   140012815:	mov    rbx,QWORD PTR [rax+0x8]
   140012819:	test   rbx,rbx
   14001281c:	je     0x140012844
   14001281e:	movsx  eax,WORD PTR [rax]
   140012821:	bt     r14d,0xb
   140012826:	jae    0x14001283a
   140012828:	cdq    
   140012829:	mov    DWORD PTR [rsp+0x50],0x1
   140012831:	sub    eax,edx
   140012833:	sar    eax,1
   140012835:	jmp    0x140012c20
   14001283a:	mov    DWORD PTR [rsp+0x50],r10d
   14001283f:	jmp    0x140012c20
   140012844:	mov    rbx,QWORD PTR [rip+0x2a9d5]        # 0x14003d220
   14001284b:	jmp    0x140012c15
   140012850:	test   r14d,0x830
   140012857:	jne    0x14001285e
   140012859:	bts    r14d,0xb
   14001285e:	mov    rbx,QWORD PTR [r13+0x0]
   140012862:	cmp    r12d,r8d
   140012865:	mov    eax,r12d
   140012868:	mov    ecx,0x7fffffff
   14001286d:	cmove  eax,ecx
   140012870:	add    r13,0x8
   140012874:	test   r14d,0x810
   14001287b:	je     0x14001297e
   140012881:	test   rbx,rbx
   140012884:	mov    DWORD PTR [rsp+0x50],0x1
   14001288c:	cmove  rbx,QWORD PTR [rip+0x2a994]        # 0x14003d228
   140012894:	mov    rcx,rbx
   140012897:	jmp    0x140012972
   14001289c:	test   r14d,0x830
   1400128a3:	jne    0x1400128aa
   1400128a5:	bts    r14d,0xb
   1400128aa:	add    r13,0x8
   1400128ae:	test   r14d,0x810
   1400128b5:	je     0x1400128de
   1400128b7:	movzx  r9d,WORD PTR [r13-0x8]
   1400128bc:	lea    rdx,[rbp-0x30]
   1400128c0:	lea    rcx,[rsp+0x44]
   1400128c5:	mov    r8,r11
   1400128c8:	call   0x14001f4b4
   1400128cd:	xor    r10d,r10d
   1400128d0:	test   eax,eax
   1400128d2:	je     0x1400128ed
   1400128d4:	mov    DWORD PTR [rsp+0x58],0x1
   1400128dc:	jmp    0x1400128ed
   1400128de:	mov    al,BYTE PTR [r13-0x8]
   1400128e2:	mov    DWORD PTR [rsp+0x44],0x1
   1400128ea:	mov    BYTE PTR [rbp-0x30],al
   1400128ed:	lea    rbx,[rbp-0x30]
   1400128f1:	jmp    0x140012c24
   1400128f6:	mov    DWORD PTR [rsp+0x60],0x1
   1400128fe:	add    r15b,0x20
   140012902:	or     r14d,0x40
   140012906:	lea    rbx,[rbp-0x30]
   14001290a:	mov    esi,r11d
   14001290d:	test   r12d,r12d
   140012910:	jns    0x140012b37
   140012916:	mov    r12d,0x6
   14001291c:	jmp    0x140012b7d
   140012921:	cmp    ecx,0x67
   140012924:	jle    0x140012902
   140012926:	cmp    ecx,0x69
   140012929:	je     0x140012a19
   14001292f:	cmp    ecx,0x6e
   140012932:	je     0x1400129e7
   140012938:	cmp    ecx,0x6f
   14001293b:	je     0x1400129d7
   140012941:	cmp    ecx,0x70
   140012944:	je     0x1400129a7
   140012946:	cmp    ecx,0x73
   140012949:	je     0x14001285e
   14001294f:	cmp    ecx,0x75
   140012952:	je     0x140012a1d
   140012958:	cmp    ecx,0x78
   14001295b:	jne    0x140012c24
   140012961:	lea    eax,[rcx-0x51]
   140012964:	jmp    0x1400129b7
   140012966:	dec    eax
   140012968:	cmp    WORD PTR [rcx],r10w
   14001296c:	je     0x140012976
   14001296e:	add    rcx,0x2
   140012972:	test   eax,eax
   140012974:	jne    0x140012966
   140012976:	sub    rcx,rbx
   140012979:	sar    rcx,1
   14001297c:	jmp    0x14001299e
   14001297e:	test   rbx,rbx
   140012981:	cmove  rbx,QWORD PTR [rip+0x2a897]        # 0x14003d220
   140012989:	mov    rcx,rbx
   14001298c:	jmp    0x140012998
   14001298e:	dec    eax
   140012990:	cmp    BYTE PTR [rcx],r10b
   140012993:	je     0x14001299c
   140012995:	inc    rcx
   140012998:	test   eax,eax
   14001299a:	jne    0x14001298e
   14001299c:	sub    ecx,ebx
   14001299e:	mov    DWORD PTR [rsp+0x44],ecx
   1400129a2:	jmp    0x140012c24
   1400129a7:	mov    r12d,0x10
   1400129ad:	bts    r14d,0xf
   1400129b2:	mov    eax,0x7
   1400129b7:	mov    DWORD PTR [rsp+0x70],eax
   1400129bb:	mov    r9d,0x10
   1400129c1:	test   r14b,r14b
   1400129c4:	jns    0x140012a23
   1400129c6:	add    al,0x51
   1400129c8:	mov    BYTE PTR [rsp+0x4c],0x30
   1400129cd:	lea    edx,[r9-0xe]
   1400129d1:	mov    BYTE PTR [rsp+0x4d],al
   1400129d5:	jmp    0x140012a27
   1400129d7:	mov    r9d,0x8
   1400129dd:	test   r14b,r14b
   1400129e0:	jns    0x140012a23
   1400129e2:	or     r14d,r11d
   1400129e5:	jmp    0x140012a23
   1400129e7:	mov    rdi,QWORD PTR [r13+0x0]
   1400129eb:	add    r13,0x8
   1400129ef:	call   0x140012070
   1400129f4:	xor    r10d,r10d
   1400129f7:	test   eax,eax
   1400129f9:	je     0x140012f93
   1400129ff:	test   r14b,0x20
   140012a03:	je     0x140012a0a
   140012a05:	mov    WORD PTR [rdi],si
   140012a08:	jmp    0x140012a0c
   140012a0a:	mov    DWORD PTR [rdi],esi
   140012a0c:	mov    DWORD PTR [rsp+0x58],0x1
   140012a14:	jmp    0x140012d85
   140012a19:	or     r14d,0x40
   140012a1d:	mov    r9d,0xa
   140012a23:	mov    edx,DWORD PTR [rsp+0x48]
   140012a27:	mov    eax,0x8000
   140012a2c:	test   eax,r14d
   140012a2f:	je     0x140012a3b
   140012a31:	mov    r8,QWORD PTR [r13+0x0]
   140012a35:	add    r13,0x8
   140012a39:	jmp    0x140012a75
   140012a3b:	bt     r14d,0xc
   140012a40:	jb     0x140012a31
   140012a42:	add    r13,0x8
   140012a46:	test   r14b,0x20
   140012a4a:	je     0x140012a65
   140012a4c:	mov    QWORD PTR [rsp+0x78],r13
   140012a51:	test   r14b,0x40
   140012a55:	je     0x140012a5e
   140012a57:	movsx  r8,WORD PTR [r13-0x8]
   140012a5c:	jmp    0x140012a7a
   140012a5e:	movzx  r8d,WORD PTR [r13-0x8]
   140012a63:	jmp    0x140012a7a
   140012a65:	test   r14b,0x40
   140012a69:	je     0x140012a71
   140012a6b:	movsxd r8,DWORD PTR [r13-0x8]
   140012a6f:	jmp    0x140012a75
   140012a71:	mov    r8d,DWORD PTR [r13-0x8]
   140012a75:	mov    QWORD PTR [rsp+0x78],r13
   140012a7a:	test   r14b,0x40
   140012a7e:	je     0x140012a8d
   140012a80:	test   r8,r8
   140012a83:	jns    0x140012a8d
   140012a85:	neg    r8
   140012a88:	bts    r14d,0x8
   140012a8d:	test   eax,r14d
   140012a90:	jne    0x140012a9c
   140012a92:	bt     r14d,0xc
   140012a97:	jb     0x140012a9c
   140012a99:	mov    r8d,r8d
   140012a9c:	test   r12d,r12d
   140012a9f:	jns    0x140012aa9
   140012aa1:	mov    r12d,0x1
   140012aa7:	jmp    0x140012ab4
   140012aa9:	and    r14d,0xfffffff7
   140012aad:	cmp    r12d,r11d
   140012ab0:	cmovg  r12d,r11d
   140012ab4:	mov    r13d,DWORD PTR [rsp+0x70]
   140012ab9:	mov    rax,r8
   140012abc:	lea    rbx,[rbp+0x1cf]
   140012ac3:	neg    rax
   140012ac6:	sbb    ecx,ecx
   140012ac8:	and    ecx,edx
   140012aca:	mov    DWORD PTR [rsp+0x48],ecx
   140012ace:	mov    ecx,r12d
   140012ad1:	dec    r12d
   140012ad4:	test   ecx,ecx
   140012ad6:	jg     0x140012add
   140012ad8:	test   r8,r8
   140012adb:	je     0x140012afd
   140012add:	xor    edx,edx
   140012adf:	mov    rax,r8
   140012ae2:	movsxd rcx,r9d
   140012ae5:	div    rcx
   140012ae8:	mov    r8,rax
   140012aeb:	lea    eax,[rdx+0x30]
   140012aee:	cmp    eax,0x39
   140012af1:	jle    0x140012af6
   140012af3:	add    eax,r13d
   140012af6:	mov    BYTE PTR [rbx],al
   140012af8:	dec    rbx
   140012afb:	jmp    0x140012ace
   140012afd:	mov    r13,QWORD PTR [rsp+0x78]
   140012b02:	lea    rax,[rbp+0x1cf]
   140012b09:	sub    eax,ebx
   140012b0b:	inc    rbx
   140012b0e:	mov    DWORD PTR [rsp+0x44],eax
   140012b12:	test   r11d,r14d
   140012b15:	je     0x140012c24
   140012b1b:	test   eax,eax
   140012b1d:	je     0x140012b28
   140012b1f:	cmp    BYTE PTR [rbx],0x30
   140012b22:	je     0x140012c24
   140012b28:	dec    rbx
   140012b2b:	inc    DWORD PTR [rsp+0x44]
   140012b2f:	mov    BYTE PTR [rbx],0x30
   140012b32:	jmp    0x140012c24
   140012b37:	jne    0x140012b47
   140012b39:	cmp    r15b,0x67
   140012b3d:	jne    0x140012b7d
   140012b3f:	mov    r12d,0x1
   140012b45:	jmp    0x140012b7d
   140012b47:	cmp    r12d,r11d
   140012b4a:	cmovg  r12d,r11d
   140012b4e:	cmp    r12d,0xa3
   140012b55:	jle    0x140012b7d
   140012b57:	lea    edi,[r12+0x15d]
   140012b5f:	movsxd rcx,edi
   140012b62:	call   0x140008684
   140012b67:	mov    QWORD PTR [rbp-0x78],rax
   140012b6b:	test   rax,rax
   140012b6e:	je     0x140012b77
   140012b70:	mov    rbx,rax
   140012b73:	mov    esi,edi
   140012b75:	jmp    0x140012b7d
   140012b77:	mov    r12d,0xa3
   140012b7d:	mov    rax,QWORD PTR [r13+0x0]
   140012b81:	mov    rcx,QWORD PTR [rip+0x29688]        # 0x14003c210
   140012b88:	add    r13,0x8
   140012b8c:	movsx  edi,r15b
   140012b90:	movsxd rsi,esi
   140012b93:	mov    QWORD PTR [rbp-0x60],rax
   140012b97:	call   QWORD PTR [rip+0x1957b]        # 0x14002c118
   140012b9d:	lea    rcx,[rbp-0x58]
   140012ba1:	mov    r9d,edi
   140012ba4:	mov    QWORD PTR [rsp+0x30],rcx
   140012ba9:	mov    ecx,DWORD PTR [rsp+0x60]
   140012bad:	mov    r8,rsi
   140012bb0:	mov    DWORD PTR [rsp+0x28],ecx
   140012bb4:	lea    rcx,[rbp-0x60]
   140012bb8:	mov    rdx,rbx
   140012bbb:	mov    DWORD PTR [rsp+0x20],r12d
   140012bc0:	call   rax
   140012bc2:	mov    edi,r14d
   140012bc5:	and    edi,0x80
   140012bcb:	je     0x140012be8
   140012bcd:	test   r12d,r12d
   140012bd0:	jne    0x140012be8
   140012bd2:	mov    rcx,QWORD PTR [rip+0x2964f]        # 0x14003c228
   140012bd9:	call   QWORD PTR [rip+0x19539]        # 0x14002c118
   140012bdf:	lea    rdx,[rbp-0x58]
   140012be3:	mov    rcx,rbx
   140012be6:	call   rax
   140012be8:	cmp    r15b,0x67
   140012bec:	jne    0x140012c08
   140012bee:	test   edi,edi
   140012bf0:	jne    0x140012c08
   140012bf2:	mov    rcx,QWORD PTR [rip+0x29627]        # 0x14003c220
   140012bf9:	call   QWORD PTR [rip+0x19519]        # 0x14002c118
   140012bff:	lea    rdx,[rbp-0x58]
   140012c03:	mov    rcx,rbx
   140012c06:	call   rax
   140012c08:	cmp    BYTE PTR [rbx],0x2d
   140012c0b:	jne    0x140012c15
   140012c0d:	bts    r14d,0x8
   140012c12:	inc    rbx
   140012c15:	mov    rcx,rbx
   140012c18:	call   0x140007550
   140012c1d:	xor    r10d,r10d
   140012c20:	mov    DWORD PTR [rsp+0x44],eax
   140012c24:	cmp    DWORD PTR [rsp+0x58],r10d
   140012c29:	jne    0x140012d85
   140012c2f:	test   r14b,0x40
   140012c33:	je     0x140012c66
   140012c35:	bt     r14d,0x8
   140012c3a:	jae    0x140012c43
   140012c3c:	mov    BYTE PTR [rsp+0x4c],0x2d
   140012c41:	jmp    0x140012c4e
   140012c43:	test   r14b,0x1
   140012c47:	je     0x140012c59
   140012c49:	mov    BYTE PTR [rsp+0x4c],0x2b
   140012c4e:	mov    edi,0x1
   140012c53:	mov    DWORD PTR [rsp+0x48],edi
   140012c57:	jmp    0x140012c6a
   140012c59:	test   r14b,0x2
   140012c5d:	je     0x140012c66
   140012c5f:	mov    BYTE PTR [rsp+0x4c],0x20
   140012c64:	jmp    0x140012c4e
   140012c66:	mov    edi,DWORD PTR [rsp+0x48]
   140012c6a:	mov    esi,DWORD PTR [rsp+0x54]
   140012c6e:	mov    r15,QWORD PTR [rsp+0x68]
   140012c73:	sub    esi,DWORD PTR [rsp+0x44]
   140012c77:	sub    esi,edi
   140012c79:	test   r14b,0xc
   140012c7d:	jne    0x140012c90
   140012c7f:	lea    r9,[rsp+0x40]
   140012c84:	mov    r8,r15
   140012c87:	mov    edx,esi
   140012c89:	mov    cl,0x20
   140012c8b:	call   0x14001303c
   140012c90:	mov    rax,QWORD PTR [rbp-0x80]
   140012c94:	lea    r9,[rsp+0x40]
   140012c99:	lea    rcx,[rsp+0x4c]
   140012c9e:	mov    r8,r15
   140012ca1:	mov    edx,edi
   140012ca3:	mov    QWORD PTR [rsp+0x20],rax
   140012ca8:	call   0x140013090
   140012cad:	test   r14b,0x8
   140012cb1:	je     0x140012cca
   140012cb3:	test   r14b,0x4
   140012cb7:	jne    0x140012cca
   140012cb9:	lea    r9,[rsp+0x40]
   140012cbe:	mov    r8,r15
   140012cc1:	mov    edx,esi
   140012cc3:	mov    cl,0x30
   140012cc5:	call   0x14001303c
   140012cca:	cmp    DWORD PTR [rsp+0x50],0x0
   140012ccf:	mov    edi,DWORD PTR [rsp+0x44]
   140012cd3:	je     0x140012d45
   140012cd5:	test   edi,edi
   140012cd7:	jle    0x140012d45
   140012cd9:	mov    r15,rbx
   140012cdc:	movzx  r9d,WORD PTR [r15]
   140012ce0:	lea    rdx,[rbp+0x1d0]
   140012ce7:	lea    rcx,[rbp-0x70]
   140012ceb:	mov    r8d,0x6
   140012cf1:	dec    edi
   140012cf3:	lea    r15,[r15+0x2]
   140012cf7:	call   0x14001f4b4
   140012cfc:	xor    r10d,r10d
   140012cff:	test   eax,eax
   140012d01:	jne    0x140012d37
   140012d03:	mov    edx,DWORD PTR [rbp-0x70]
   140012d06:	test   edx,edx
   140012d08:	je     0x140012d37
   140012d0a:	mov    rax,QWORD PTR [rbp-0x80]
   140012d0e:	mov    r8,QWORD PTR [rsp+0x68]
   140012d13:	lea    r9,[rsp+0x40]
   140012d18:	lea    rcx,[rbp+0x1d0]
   140012d1f:	mov    QWORD PTR [rsp+0x20],rax
   140012d24:	call   0x140013090
   140012d29:	xor    r10d,r10d
   140012d2c:	test   edi,edi
   140012d2e:	jne    0x140012cdc
   140012d30:	mov    r15,QWORD PTR [rsp+0x68]
   140012d35:	jmp    0x140012d63
   140012d37:	mov    r15,QWORD PTR [rsp+0x68]
   140012d3c:	or     eax,0xffffffff
   140012d3f:	mov    DWORD PTR [rsp+0x40],eax
   140012d43:	jmp    0x140012d67
   140012d45:	mov    rax,QWORD PTR [rbp-0x80]
   140012d49:	lea    r9,[rsp+0x40]
   140012d4e:	mov    r8,r15
   140012d51:	mov    edx,edi
   140012d53:	mov    rcx,rbx
   140012d56:	mov    QWORD PTR [rsp+0x20],rax
   140012d5b:	call   0x140013090
   140012d60:	xor    r10d,r10d
   140012d63:	mov    eax,DWORD PTR [rsp+0x40]
   140012d67:	test   eax,eax
   140012d69:	js     0x140012d85
   140012d6b:	test   r14b,0x4
   140012d6f:	je     0x140012d85
   140012d71:	lea    r9,[rsp+0x40]
   140012d76:	mov    r8,r15
   140012d79:	mov    edx,esi
   140012d7b:	mov    cl,0x20
   140012d7d:	call   0x14001303c
   140012d82:	xor    r10d,r10d
   140012d85:	mov    rax,QWORD PTR [rbp-0x78]
   140012d89:	test   rax,rax
   140012d8c:	je     0x140012d9d
   140012d8e:	mov    rcx,rax
   140012d91:	call   0x140007dc0
   140012d96:	xor    r10d,r10d
   140012d99:	mov    QWORD PTR [rbp-0x78],r10
   140012d9d:	mov    rdi,QWORD PTR [rbp-0x68]
   140012da1:	mov    esi,DWORD PTR [rsp+0x40]
   140012da5:	mov    edx,DWORD PTR [rsp+0x5c]
   140012da9:	mov    r11d,0x200
   140012daf:	lea    r9,[rip+0xfffffffffffed24a]        # 0x140000000
   140012db6:	mov    r15b,BYTE PTR [rdi]
   140012db9:	test   r15b,r15b
   140012dbc:	je     0x140012fab
   140012dc2:	or     r8d,0xffffffff
   140012dc6:	jmp    0x140012723
   140012dcb:	cmp    r15b,0x49
   140012dcf:	je     0x140012e05
   140012dd1:	cmp    r15b,0x68
   140012dd5:	je     0x140012dff
   140012dd7:	cmp    r15b,0x6c
   140012ddb:	je     0x140012dea
   140012ddd:	cmp    r15b,0x77
   140012de1:	jne    0x140012db6
   140012de3:	bts    r14d,0xb
   140012de8:	jmp    0x140012db6
   140012dea:	cmp    BYTE PTR [rdi],0x6c
   140012ded:	jne    0x140012df9
   140012def:	inc    rdi
   140012df2:	bts    r14d,0xc
   140012df7:	jmp    0x140012db6
   140012df9:	or     r14d,0x10
   140012dfd:	jmp    0x140012db6
   140012dff:	or     r14d,0x20
   140012e03:	jmp    0x140012db6
   140012e05:	mov    al,BYTE PTR [rdi]
   140012e07:	bts    r14d,0xf
   140012e0c:	cmp    al,0x36
   140012e0e:	jne    0x140012e21
   140012e10:	cmp    BYTE PTR [rdi+0x1],0x34
   140012e14:	jne    0x140012e21
   140012e16:	add    rdi,0x2
   140012e1a:	bts    r14d,0xf
   140012e1f:	jmp    0x140012db6
   140012e21:	cmp    al,0x33
   140012e23:	jne    0x140012e36
   140012e25:	cmp    BYTE PTR [rdi+0x1],0x32
   140012e29:	jne    0x140012e36
   140012e2b:	add    rdi,0x2
   140012e2f:	btr    r14d,0xf
   140012e34:	jmp    0x140012db6
   140012e36:	sub    al,0x58
   140012e38:	cmp    al,0x20
   140012e3a:	ja     0x140012e50
   140012e3c:	movabs rcx,0x120821001
   140012e46:	bt     rcx,rax
   140012e4a:	jb     0x140012db6
   140012e50:	mov    DWORD PTR [rsp+0x5c],r10d
   140012e55:	lea    rdx,[rbp-0x58]
   140012e59:	movzx  ecx,r15b
   140012e5d:	mov    DWORD PTR [rsp+0x50],r10d
   140012e62:	call   0x140011e44
   140012e67:	test   eax,eax
   140012e69:	je     0x140012e8c
   140012e6b:	mov    rdx,QWORD PTR [rsp+0x68]
   140012e70:	lea    r8,[rsp+0x40]
   140012e75:	mov    cl,r15b
   140012e78:	call   0x140012ff4
   140012e7d:	mov    r15b,BYTE PTR [rdi]
   140012e80:	inc    rdi
   140012e83:	test   r15b,r15b
   140012e86:	je     0x140012f93
   140012e8c:	mov    rdx,QWORD PTR [rsp+0x68]
   140012e91:	lea    r8,[rsp+0x40]
   140012e96:	mov    cl,r15b
   140012e99:	call   0x140012ff4
   140012e9e:	xor    r10d,r10d
   140012ea1:	jmp    0x140012da1
   140012ea6:	cmp    r15b,0x2a
   140012eaa:	jne    0x140012ec5
   140012eac:	mov    r12d,DWORD PTR [r13+0x0]
   140012eb0:	add    r13,0x8
   140012eb4:	test   r12d,r12d
   140012eb7:	jns    0x140012db6
   140012ebd:	mov    r12d,r8d
   140012ec0:	jmp    0x140012db6
   140012ec5:	lea    r12d,[r12+r12*4]
   140012ec9:	movsx  eax,r15b
   140012ecd:	lea    r12d,[r12-0x18]
   140012ed2:	lea    r12d,[rax+r12*2]
   140012ed6:	jmp    0x140012db6
   140012edb:	mov    r12d,r10d
   140012ede:	jmp    0x140012db6
   140012ee3:	cmp    r15b,0x2a
   140012ee7:	jne    0x140012f05
   140012ee9:	mov    eax,DWORD PTR [r13+0x0]
   140012eed:	add    r13,0x8
   140012ef1:	mov    DWORD PTR [rsp+0x54],eax
   140012ef5:	test   eax,eax
   140012ef7:	jns    0x140012db6
   140012efd:	or     r14d,0x4
   140012f01:	neg    eax
   140012f03:	jmp    0x140012f16
   140012f05:	mov    eax,DWORD PTR [rsp+0x54]
   140012f09:	lea    ecx,[rax+rax*4]
   140012f0c:	movsx  eax,r15b
   140012f10:	lea    eax,[rax+rcx*2]
   140012f13:	add    eax,0xffffffd0
   140012f16:	mov    DWORD PTR [rsp+0x54],eax
   140012f1a:	jmp    0x140012db6
   140012f1f:	cmp    r15b,0x20
   140012f23:	je     0x140012f66
   140012f25:	cmp    r15b,0x23
   140012f29:	je     0x140012f5c
   140012f2b:	cmp    r15b,0x2b
   140012f2f:	je     0x140012f53
   140012f31:	cmp    r15b,0x2d
   140012f35:	je     0x140012f4a
   140012f37:	cmp    r15b,0x30
   140012f3b:	jne    0x140012db6
   140012f41:	or     r14d,0x8
   140012f45:	jmp    0x140012db6
   140012f4a:	or     r14d,0x4
   140012f4e:	jmp    0x140012db6
   140012f53:	or     r14d,0x1
   140012f57:	jmp    0x140012db6
   140012f5c:	bts    r14d,0x7
   140012f61:	jmp    0x140012db6
   140012f66:	or     r14d,0x2
   140012f6a:	jmp    0x140012db6
   140012f6f:	mov    DWORD PTR [rsp+0x60],r10d
   140012f74:	mov    DWORD PTR [rsp+0x58],r10d
   140012f79:	mov    DWORD PTR [rsp+0x54],r10d
   140012f7e:	mov    DWORD PTR [rsp+0x48],r10d
   140012f83:	mov    r14d,r10d
   140012f86:	mov    r12d,r8d
   140012f89:	mov    DWORD PTR [rsp+0x50],r10d
   140012f8e:	jmp    0x140012db6
   140012f93:	call   0x140009cb4
   140012f98:	mov    DWORD PTR [rax],0x16
   140012f9e:	call   0x140008d58
   140012fa3:	or     eax,0xffffffff
   140012fa6:	xor    r10d,r10d
   140012fa9:	jmp    0x140012fad
   140012fab:	mov    eax,esi
   140012fad:	cmp    BYTE PTR [rbp-0x40],r10b
   140012fb1:	je     0x140012fbe
   140012fb3:	mov    rcx,QWORD PTR [rbp-0x48]
   140012fb7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140012fbe:	mov    rcx,QWORD PTR [rbp+0x1d8]
   140012fc5:	xor    rcx,rsp
   140012fc8:	call   0x14000c380
   140012fcd:	mov    rbx,QWORD PTR [rsp+0x330]
   140012fd5:	add    rsp,0x2e0
   140012fdc:	pop    r15
   140012fde:	pop    r14
   140012fe0:	pop    r13
   140012fe2:	pop    r12
   140012fe4:	pop    rdi
   140012fe5:	pop    rsi
   140012fe6:	pop    rbp
   140012fe7:	ret    
   140012fe8:	add    QWORD PTR [rcx],0x8
   140012fec:	mov    rax,QWORD PTR [rcx]
   140012fef:	movzx  eax,WORD PTR [rax-0x8]
   140012ff3:	ret    
   140012ff4:	rex push rbx
   140012ff6:	sub    rsp,0x20
   140012ffa:	test   BYTE PTR [rdx+0x18],0x40
   140012ffe:	mov    rbx,r8
   140013001:	je     0x14001300f
   140013003:	cmp    QWORD PTR [rdx+0x10],0x0
   140013008:	jne    0x14001300f
   14001300a:	inc    DWORD PTR [r8]
   14001300d:	jmp    0x140013034
   14001300f:	dec    DWORD PTR [rdx+0x8]
   140013012:	js     0x140013021
   140013014:	mov    rax,QWORD PTR [rdx]
   140013017:	mov    BYTE PTR [rax],cl
   140013019:	inc    QWORD PTR [rdx]
   14001301c:	movzx  eax,cl
   14001301f:	jmp    0x140013029
   140013021:	movsx  ecx,cl
   140013024:	call   0x140008e20
   140013029:	cmp    eax,0xffffffff
   14001302c:	jne    0x140013032
   14001302e:	or     DWORD PTR [rbx],eax
   140013030:	jmp    0x140013034
   140013032:	inc    DWORD PTR [rbx]
   140013034:	add    rsp,0x20
   140013038:	pop    rbx
   140013039:	ret    
   14001303a:	int3   
   14001303b:	int3   
   14001303c:	test   edx,edx
   14001303e:	jle    0x14001308c
   140013040:	mov    QWORD PTR [rsp+0x8],rbx
   140013045:	mov    QWORD PTR [rsp+0x10],rbp
   14001304a:	mov    QWORD PTR [rsp+0x18],rsi
   14001304f:	push   rdi
   140013050:	sub    rsp,0x20
   140013054:	mov    rdi,r9
   140013057:	mov    rsi,r8
   14001305a:	mov    ebx,edx
   14001305c:	mov    bpl,cl
   14001305f:	mov    r8,rdi
   140013062:	mov    rdx,rsi
   140013065:	mov    cl,bpl
   140013068:	dec    ebx
   14001306a:	call   0x140012ff4
   14001306f:	cmp    DWORD PTR [rdi],0xffffffff
   140013072:	je     0x140013078
   140013074:	test   ebx,ebx
   140013076:	jg     0x14001305f
   140013078:	mov    rbx,QWORD PTR [rsp+0x30]
   14001307d:	mov    rbp,QWORD PTR [rsp+0x38]
   140013082:	mov    rsi,QWORD PTR [rsp+0x40]
   140013087:	add    rsp,0x20
   14001308b:	pop    rdi
   14001308c:	ret    
   14001308d:	int3   
   14001308e:	int3   
   14001308f:	int3   
   140013090:	mov    QWORD PTR [rsp+0x8],rbx
   140013095:	mov    QWORD PTR [rsp+0x10],rbp
   14001309a:	mov    QWORD PTR [rsp+0x18],rsi
   14001309f:	push   rdi
   1400130a0:	push   r14
   1400130a2:	push   r15
   1400130a4:	sub    rsp,0x20
   1400130a8:	test   BYTE PTR [r8+0x18],0x40
   1400130ad:	mov    rbx,QWORD PTR [rsp+0x60]
   1400130b2:	mov    rdi,r9
   1400130b5:	mov    r15d,DWORD PTR [rbx]
   1400130b8:	mov    rbp,r8
   1400130bb:	mov    esi,edx
   1400130bd:	mov    r14,rcx
   1400130c0:	je     0x1400130ce
   1400130c2:	cmp    QWORD PTR [r8+0x10],0x0
   1400130c7:	jne    0x1400130ce
   1400130c9:	add    DWORD PTR [r9],edx
   1400130cc:	jmp    0x14001310b
   1400130ce:	and    DWORD PTR [rbx],0x0
   1400130d1:	test   edx,edx
   1400130d3:	jle    0x140013108
   1400130d5:	mov    cl,BYTE PTR [r14]
   1400130d8:	mov    r8,rdi
   1400130db:	mov    rdx,rbp
   1400130de:	dec    esi
   1400130e0:	call   0x140012ff4
   1400130e5:	inc    r14
   1400130e8:	cmp    DWORD PTR [rdi],0xffffffff
   1400130eb:	jne    0x1400130ff
   1400130ed:	cmp    DWORD PTR [rbx],0x2a
   1400130f0:	jne    0x140013103
   1400130f2:	mov    r8,rdi
   1400130f5:	mov    rdx,rbp
   1400130f8:	mov    cl,0x3f
   1400130fa:	call   0x140012ff4
   1400130ff:	test   esi,esi
   140013101:	jg     0x1400130d5
   140013103:	cmp    DWORD PTR [rbx],0x0
   140013106:	jne    0x14001310b
   140013108:	mov    DWORD PTR [rbx],r15d
   14001310b:	mov    rbx,QWORD PTR [rsp+0x40]
   140013110:	mov    rbp,QWORD PTR [rsp+0x48]
   140013115:	mov    rsi,QWORD PTR [rsp+0x50]
   14001311a:	add    rsp,0x20
   14001311e:	pop    r15
   140013120:	pop    r14
   140013122:	pop    rdi
   140013123:	ret    
   140013124:	int3   
   140013125:	int3   
   140013126:	int3   
   140013127:	int3   
   140013128:	int3   
   140013129:	int3   
   14001312a:	int3   
   14001312b:	int3   
   14001312c:	int3   
   14001312d:	int3   
   14001312e:	int3   
   14001312f:	int3   
   140013130:	int3   
   140013131:	int3   
   140013132:	int3   
   140013133:	int3   
   140013134:	int3   
   140013135:	int3   
   140013136:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013140:	sub    rsp,0x8
   140013144:	stmxcsr DWORD PTR [rsp]
   140013148:	mov    eax,DWORD PTR [rsp]
   14001314b:	add    rsp,0x8
   14001314f:	ret    
   140013150:	mov    DWORD PTR [rsp+0x8],ecx
   140013154:	ldmxcsr DWORD PTR [rsp+0x8]
   140013159:	ret    
   14001315a:	stmxcsr DWORD PTR [rsp+0x8]
   14001315f:	mov    ecx,0xffffffc0
   140013164:	and    DWORD PTR [rsp+0x8],ecx
   140013168:	ldmxcsr DWORD PTR [rsp+0x8]
   14001316d:	ret    
   14001316e:	ucomisd xmm0,QWORD PTR [rip+0x200da]        # 0x140033250
   140013176:	jae    0x14001318c
   140013178:	ucomisd xmm0,QWORD PTR [rip+0x200d8]        # 0x140033258
   140013180:	jbe    0x14001318c
   140013182:	cvtsd2si rcx,xmm0
   140013187:	cvtsi2sd xmm0,rcx
   14001318c:	ret    
   14001318d:	int3   
   14001318e:	int3   
   14001318f:	int3   
   140013190:	mov    eax,ecx
   140013192:	test   cl,0x20
   140013195:	je     0x14001319e
   140013197:	mov    ecx,0x5
   14001319c:	jmp    0x1400131d0
   14001319e:	test   al,0x8
   1400131a0:	je     0x1400131a9
   1400131a2:	mov    ecx,0x1
   1400131a7:	jmp    0x1400131d0
   1400131a9:	test   al,0x4
   1400131ab:	je     0x1400131b4
   1400131ad:	mov    ecx,0x2
   1400131b2:	jmp    0x1400131d0
   1400131b4:	mov    ecx,0x1
   1400131b9:	test   cl,al
   1400131bb:	je     0x1400131c4
   1400131bd:	mov    ecx,0x3
   1400131c2:	jmp    0x1400131d0
   1400131c4:	movzx  eax,al
   1400131c7:	mov    ecx,0x2
   1400131cc:	and    ecx,eax
   1400131ce:	add    ecx,ecx
   1400131d0:	mov    eax,ecx
   1400131d2:	ret    
   1400131d3:	int3   
   1400131d4:	mov    rax,rsp
   1400131d7:	mov    QWORD PTR [rax+0x10],rbx
   1400131db:	push   rbp
   1400131dc:	push   rsi
   1400131dd:	push   rdi
   1400131de:	lea    rbp,[rax-0x57]
   1400131e2:	sub    rsp,0xe0
   1400131e9:	movaps XMMWORD PTR [rax-0x28],xmm6
   1400131ed:	mov    rax,QWORD PTR [rip+0x28fdc]        # 0x14003c1d0
   1400131f4:	xor    rax,rsp
   1400131f7:	mov    QWORD PTR [rbp+0x1f],rax
   1400131fb:	mov    rbx,QWORD PTR [rbp+0x7f]
   1400131ff:	mov    esi,edx
   140013201:	lea    rdx,[rbp-0x61]
   140013205:	movsd  QWORD PTR [rbp-0x59],xmm2
   14001320a:	movsd  QWORD PTR [rbp-0x61],xmm3
   14001320f:	movaps xmm6,xmm2
   140013212:	mov    r8,rbx
   140013215:	mov    edi,ecx
   140013217:	call   0x1400133fc
   14001321c:	test   eax,eax
   14001321e:	jne    0x140013251
   140013220:	and    DWORD PTR [rsp+0x30],eax
   140013224:	and    DWORD PTR [rbp-0x11],0xfffffffe
   140013228:	lea    rax,[rbp-0x61]
   14001322c:	mov    QWORD PTR [rsp+0x28],rax
   140013231:	lea    rax,[rbp-0x59]
   140013235:	lea    rdx,[rbp+0x7f]
   140013239:	lea    rcx,[rbp-0x51]
   14001323d:	mov    r9d,esi
   140013240:	mov    r8d,edi
   140013243:	mov    QWORD PTR [rsp+0x20],rax
   140013248:	call   0x14001374c
   14001324d:	mov    rbx,QWORD PTR [rbp+0x7f]
   140013251:	mov    ecx,edi
   140013253:	call   0x140013190
   140013258:	cmp    DWORD PTR [rip+0x2a1a1],0x0        # 0x14003d400
   14001325f:	jne    0x140013286
   140013261:	test   eax,eax
   140013263:	je     0x140013286
   140013265:	movsd  xmm0,QWORD PTR [rbp-0x61]
   14001326a:	xorps  xmm3,xmm3
   14001326d:	movaps xmm2,xmm6
   140013270:	mov    edx,esi
   140013272:	mov    ecx,eax
   140013274:	mov    QWORD PTR [rsp+0x28],rbx
   140013279:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001327f:	call   0x140013aac
   140013284:	jmp    0x14001329f
   140013286:	mov    ecx,eax
   140013288:	call   0x140013a7c
   14001328d:	mov    edx,0xffc0
   140013292:	mov    rcx,rbx
   140013295:	call   0x140009e34
   14001329a:	movsd  xmm0,QWORD PTR [rbp-0x61]
   14001329f:	mov    rcx,QWORD PTR [rbp+0x1f]
   1400132a3:	xor    rcx,rsp
   1400132a6:	call   0x14000c380
   1400132ab:	lea    r11,[rsp+0xe0]
   1400132b3:	mov    rbx,QWORD PTR [r11+0x28]
   1400132b7:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400132bc:	mov    rsp,r11
   1400132bf:	pop    rdi
   1400132c0:	pop    rsi
   1400132c1:	pop    rbp
   1400132c2:	ret    
   1400132c3:	int3   
   1400132c4:	mov    rax,rsp
   1400132c7:	mov    QWORD PTR [rax+0x10],rbx
   1400132cb:	push   rbp
   1400132cc:	push   rsi
   1400132cd:	push   rdi
   1400132ce:	lea    rbp,[rax-0x4f]
   1400132d2:	sub    rsp,0xf0
   1400132d9:	movaps XMMWORD PTR [rax-0x28],xmm6
   1400132dd:	movaps XMMWORD PTR [rax-0x38],xmm7
   1400132e1:	mov    rax,QWORD PTR [rip+0x28ee8]        # 0x14003c1d0
   1400132e8:	xor    rax,rsp
   1400132eb:	mov    QWORD PTR [rbp+0x7],rax
   1400132ef:	mov    rbx,QWORD PTR [rbp+0x7f]
   1400132f3:	mov    esi,edx
   1400132f5:	lea    rdx,[rbp+0x77]
   1400132f9:	movsd  QWORD PTR [rbp-0x79],xmm2
   1400132fe:	movaps xmm6,xmm3
   140013301:	movaps xmm7,xmm2
   140013304:	mov    r8,rbx
   140013307:	mov    edi,ecx
   140013309:	call   0x1400133fc
   14001330e:	test   eax,eax
   140013310:	jne    0x140013351
   140013312:	mov    eax,DWORD PTR [rbp-0x29]
   140013315:	and    DWORD PTR [rsp+0x30],0x0
   14001331a:	lea    rdx,[rbp+0x7f]
   14001331e:	movsd  QWORD PTR [rbp-0x39],xmm6
   140013323:	and    eax,0xffffffe3
   140013326:	lea    rcx,[rbp-0x69]
   14001332a:	mov    r9d,esi
   14001332d:	or     eax,0x3
   140013330:	mov    r8d,edi
   140013333:	mov    DWORD PTR [rbp-0x29],eax
   140013336:	lea    rax,[rbp+0x77]
   14001333a:	mov    QWORD PTR [rsp+0x28],rax
   14001333f:	lea    rax,[rbp-0x79]
   140013343:	mov    QWORD PTR [rsp+0x20],rax
   140013348:	call   0x14001374c
   14001334d:	mov    rbx,QWORD PTR [rbp+0x7f]
   140013351:	mov    ecx,edi
   140013353:	call   0x140013190
   140013358:	cmp    DWORD PTR [rip+0x2a0a1],0x0        # 0x14003d400
   14001335f:	jne    0x140013386
   140013361:	test   eax,eax
   140013363:	je     0x140013386
   140013365:	movsd  xmm0,QWORD PTR [rbp+0x77]
   14001336a:	movaps xmm3,xmm6
   14001336d:	movaps xmm2,xmm7
   140013370:	mov    edx,esi
   140013372:	mov    ecx,eax
   140013374:	mov    QWORD PTR [rsp+0x28],rbx
   140013379:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001337f:	call   0x140013aac
   140013384:	jmp    0x14001339f
   140013386:	mov    ecx,eax
   140013388:	call   0x140013a7c
   14001338d:	mov    edx,0xffc0
   140013392:	mov    rcx,rbx
   140013395:	call   0x140009e34
   14001339a:	movsd  xmm0,QWORD PTR [rbp+0x77]
   14001339f:	mov    rcx,QWORD PTR [rbp+0x7]
   1400133a3:	xor    rcx,rsp
   1400133a6:	call   0x14000c380
   1400133ab:	lea    r11,[rsp+0xf0]
   1400133b3:	mov    rbx,QWORD PTR [r11+0x28]
   1400133b7:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400133bc:	movaps xmm7,XMMWORD PTR [r11-0x20]
   1400133c1:	mov    rsp,r11
   1400133c4:	pop    rdi
   1400133c5:	pop    rsi
   1400133c6:	pop    rbp
   1400133c7:	ret    
   1400133c8:	lea    r9,[rip+0x29e61]        # 0x14003d230
   1400133cf:	xor    edx,edx
   1400133d1:	mov    rax,r9
   1400133d4:	cmp    DWORD PTR [rax],ecx
   1400133d6:	je     0x1400133ed
   1400133d8:	lea    r8,[rip+0x2a021]        # 0x14003d400
   1400133df:	add    rax,0x10
   1400133e3:	inc    edx
   1400133e5:	cmp    rax,r8
   1400133e8:	jl     0x1400133d4
   1400133ea:	xor    eax,eax
   1400133ec:	ret    
   1400133ed:	movsxd rax,edx
   1400133f0:	add    rax,rax
   1400133f3:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   1400133f8:	ret    
   1400133f9:	int3   
   1400133fa:	int3   
   1400133fb:	int3   
   1400133fc:	mov    QWORD PTR [rsp+0x10],rbx
   140013401:	push   rbp
   140013402:	push   rsi
   140013403:	push   rdi
   140013404:	push   r12
   140013406:	push   r13
   140013408:	push   r14
   14001340a:	push   r15
   14001340c:	sub    rsp,0x30
   140013410:	xor    r14d,r14d
   140013413:	mov    ebx,ecx
   140013415:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14001341a:	and    ebx,0x1f
   14001341d:	mov    r15,r8
   140013420:	mov    rsi,rdx
   140013423:	mov    r12d,ecx
   140013426:	lea    r13d,[r14+0x10]
   14001342a:	test   cl,0x8
   14001342d:	je     0x140013445
   14001342f:	test   r15b,r15b
   140013432:	jns    0x140013445
   140013434:	lea    ecx,[r14+0x1]
   140013438:	call   0x140009eb0
   14001343d:	and    ebx,0xfffffff7
   140013440:	jmp    0x140013622
   140013445:	mov    ecx,0x4
   14001344a:	test   cl,r12b
   14001344d:	je     0x140013463
   14001344f:	bt     r8,0x9
   140013454:	jae    0x140013463
   140013456:	call   0x140009eb0
   14001345b:	and    ebx,0xfffffffb
   14001345e:	jmp    0x140013622
   140013463:	mov    edi,0x1
   140013468:	test   dil,r12b
   14001346b:	je     0x140013521
   140013471:	bt     r8,0xa
   140013476:	jae    0x140013521
   14001347c:	lea    ecx,[rdi+0x7]
   14001347f:	call   0x140009eb0
   140013484:	mov    rax,r15
   140013487:	mov    ecx,0x6000
   14001348c:	and    rax,rcx
   14001348f:	je     0x1400134ee
   140013491:	cmp    rax,0x2000
   140013497:	je     0x1400134d6
   140013499:	cmp    rax,0x4000
   14001349f:	je     0x1400134be
   1400134a1:	cmp    rax,rcx
   1400134a4:	jne    0x140013519
   1400134a6:	movsd  xmm0,QWORD PTR [rsi]
   1400134aa:	comisd xmm0,QWORD PTR [rip+0x1b666]        # 0x14002eb18
   1400134b2:	movsd  xmm0,QWORD PTR [rip+0x2a01e]        # 0x14003d4d8
   1400134ba:	ja     0x140013515
   1400134bc:	jmp    0x14001350e
   1400134be:	movsd  xmm0,QWORD PTR [rsi]
   1400134c2:	comisd xmm0,QWORD PTR [rip+0x1b64e]        # 0x14002eb18
   1400134ca:	ja     0x1400134fc
   1400134cc:	movsd  xmm0,QWORD PTR [rip+0x2a004]        # 0x14003d4d8
   1400134d4:	jmp    0x14001350e
   1400134d6:	movsd  xmm0,QWORD PTR [rsi]
   1400134da:	comisd xmm0,QWORD PTR [rip+0x1b636]        # 0x14002eb18
   1400134e2:	jbe    0x140013506
   1400134e4:	movsd  xmm0,QWORD PTR [rip+0x29fec]        # 0x14003d4d8
   1400134ec:	jmp    0x140013515
   1400134ee:	movsd  xmm0,QWORD PTR [rsi]
   1400134f2:	comisd xmm0,QWORD PTR [rip+0x1b61e]        # 0x14002eb18
   1400134fa:	jbe    0x140013506
   1400134fc:	movsd  xmm0,QWORD PTR [rip+0x29fc4]        # 0x14003d4c8
   140013504:	jmp    0x140013515
   140013506:	movsd  xmm0,QWORD PTR [rip+0x29fba]        # 0x14003d4c8
   14001350e:	xorps  xmm0,XMMWORD PTR [rip+0x1fe1b]        # 0x140033330
   140013515:	movsd  QWORD PTR [rsi],xmm0
   140013519:	and    ebx,0xfffffffe
   14001351c:	jmp    0x140013622
   140013521:	test   r12b,0x2
   140013525:	je     0x140013622
   14001352b:	bt     r8,0xb
   140013530:	jae    0x140013622
   140013536:	movsd  xmm0,QWORD PTR [rdx]
   14001353a:	test   r13b,r12b
   14001353d:	xorps  xmm6,xmm6
   140013540:	mov    ebp,r14d
   140013543:	cmovne ebp,edi
   140013546:	ucomisd xmm0,xmm6
   14001354a:	jp     0x140013555
   14001354c:	jne    0x140013555
   14001354e:	mov    ebp,edi
   140013550:	jmp    0x140013613
   140013555:	lea    rdx,[rsp+0x70]
   14001355a:	call   0x14001f6ec
   14001355f:	mov    ecx,DWORD PTR [rsp+0x70]
   140013563:	add    ecx,0xfffffa00
   140013569:	movsd  QWORD PTR [rsp+0x88],xmm0
   140013572:	cmp    ecx,0xfffffbce
   140013578:	jge    0x140013585
   14001357a:	mulsd  xmm0,xmm6
   14001357e:	mov    ebp,edi
   140013580:	jmp    0x14001360f
   140013585:	mov    rax,QWORD PTR [rsp+0x88]
   14001358d:	comisd xmm6,xmm0
   140013591:	mov    r8d,r14d
   140013594:	seta   r8b
   140013598:	shr    rax,0x30
   14001359c:	and    ax,0xf
   1400135a0:	or     ax,r13w
   1400135a4:	mov    WORD PTR [rsp+0x8e],ax
   1400135ac:	cmp    ecx,0xfffffc03
   1400135b2:	jge    0x1400135fa
   1400135b4:	mov    eax,DWORD PTR [rsp+0x88]
   1400135bb:	mov    edx,0xfffffc03
   1400135c0:	sub    edx,ecx
   1400135c2:	mov    ecx,DWORD PTR [rsp+0x8c]
   1400135c9:	test   dil,al
   1400135cc:	je     0x1400135d3
   1400135ce:	test   ebp,ebp
   1400135d0:	cmove  ebp,edi
   1400135d3:	shr    eax,1
   1400135d5:	mov    DWORD PTR [rsp+0x88],eax
   1400135dc:	test   dil,cl
   1400135df:	je     0x1400135ec
   1400135e1:	bts    eax,0x1f
   1400135e5:	mov    DWORD PTR [rsp+0x88],eax
   1400135ec:	shr    ecx,1
   1400135ee:	sub    rdx,rdi
   1400135f1:	jne    0x1400135c9
   1400135f3:	mov    DWORD PTR [rsp+0x8c],ecx
   1400135fa:	movsd  xmm0,QWORD PTR [rsp+0x88]
   140013603:	test   r8d,r8d
   140013606:	je     0x14001360f
   140013608:	xorps  xmm0,XMMWORD PTR [rip+0x1fd21]        # 0x140033330
   14001360f:	movsd  QWORD PTR [rsi],xmm0
   140013613:	test   ebp,ebp
   140013615:	je     0x14001361f
   140013617:	mov    rcx,r13
   14001361a:	call   0x140009eb0
   14001361f:	and    ebx,0xfffffffd
   140013622:	test   r13b,r12b
   140013625:	je     0x14001363b
   140013627:	bt     r15,0xc
   14001362c:	jae    0x14001363b
   14001362e:	mov    ecx,0x20
   140013633:	call   0x140009eb0
   140013638:	and    ebx,0xffffffef
   14001363b:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140013640:	test   ebx,ebx
   140013642:	mov    rbx,QWORD PTR [rsp+0x78]
   140013647:	sete   r14b
   14001364b:	mov    eax,r14d
   14001364e:	add    rsp,0x30
   140013652:	pop    r15
   140013654:	pop    r14
   140013656:	pop    r13
   140013658:	pop    r12
   14001365a:	pop    rdi
   14001365b:	pop    rsi
   14001365c:	pop    rbp
   14001365d:	ret    
   14001365e:	int3   
   14001365f:	int3   
   140013660:	rex push rbx
   140013662:	sub    rsp,0x40
   140013666:	cmp    DWORD PTR [rip+0x29d93],0x0        # 0x14003d400
   14001366d:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140013672:	mov    rbx,r8
   140013675:	movaps xmm6,xmm1
   140013678:	jne    0x140013699
   14001367a:	mov    edx,ecx
   14001367c:	xorps  xmm3,xmm3
   14001367f:	movaps xmm2,xmm1
   140013682:	mov    ecx,0x1
   140013687:	mov    QWORD PTR [rsp+0x28],rbx
   14001368c:	movsd  QWORD PTR [rsp+0x20],xmm1
   140013692:	call   0x140013aac
   140013697:	jmp    0x1400136b4
   140013699:	call   0x140009cb4
   14001369e:	mov    edx,0xffc0
   1400136a3:	mov    rcx,rbx
   1400136a6:	mov    DWORD PTR [rax],0x21
   1400136ac:	call   0x140009e34
   1400136b1:	movaps xmm0,xmm6
   1400136b4:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400136b9:	add    rsp,0x40
   1400136bd:	pop    rbx
   1400136be:	ret    
   1400136bf:	int3   
   1400136c0:	rex push rbx
   1400136c2:	sub    rsp,0x40
   1400136c6:	cmp    DWORD PTR [rip+0x29d33],0x0        # 0x14003d400
   1400136cd:	movaps XMMWORD PTR [rsp+0x30],xmm6
   1400136d2:	movaps xmm6,xmm1
   1400136d5:	addsd  xmm6,xmm2
   1400136d9:	mov    rbx,r9
   1400136dc:	jne    0x1400136fd
   1400136de:	movaps xmm3,xmm2
   1400136e1:	mov    edx,ecx
   1400136e3:	movaps xmm2,xmm1
   1400136e6:	mov    ecx,0x1
   1400136eb:	mov    QWORD PTR [rsp+0x28],rbx
   1400136f0:	movsd  QWORD PTR [rsp+0x20],xmm6
   1400136f6:	call   0x140013aac
   1400136fb:	jmp    0x140013718
   1400136fd:	call   0x140009cb4
   140013702:	mov    edx,0xffc0
   140013707:	mov    rcx,rbx
   14001370a:	mov    DWORD PTR [rax],0x21
   140013710:	call   0x140009e34
   140013715:	movaps xmm0,xmm6
   140013718:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001371d:	add    rsp,0x40
   140013721:	pop    rbx
   140013722:	ret    
   140013723:	int3   
   140013724:	sub    rsp,0x48
   140013728:	and    DWORD PTR [rsp+0x30],0x0
   14001372d:	mov    rax,QWORD PTR [rsp+0x78]
   140013732:	mov    QWORD PTR [rsp+0x28],rax
   140013737:	mov    rax,QWORD PTR [rsp+0x70]
   14001373c:	mov    QWORD PTR [rsp+0x20],rax
   140013741:	call   0x14001374c
   140013746:	add    rsp,0x48
   14001374a:	ret    
   14001374b:	int3   
   14001374c:	mov    rax,rsp
   14001374f:	mov    QWORD PTR [rax+0x10],rbx
   140013753:	mov    QWORD PTR [rax+0x18],rsi
   140013757:	mov    QWORD PTR [rax+0x20],rdi
   14001375b:	mov    QWORD PTR [rax+0x8],rcx
   14001375f:	push   rbp
   140013760:	mov    rbp,rsp
   140013763:	sub    rsp,0x20
   140013767:	mov    rbx,rdx
   14001376a:	xor    edx,edx
   14001376c:	mov    esi,r9d
   14001376f:	mov    DWORD PTR [rcx+0x4],edx
   140013772:	mov    rax,QWORD PTR [rbp+0x10]
   140013776:	mov    edi,0xc000000d
   14001377b:	mov    DWORD PTR [rax+0x8],edx
   14001377e:	mov    rax,QWORD PTR [rbp+0x10]
   140013782:	mov    DWORD PTR [rax+0xc],edx
   140013785:	test   r8b,0x10
   140013789:	je     0x140013798
   14001378b:	mov    rax,QWORD PTR [rbp+0x10]
   14001378f:	mov    edi,0xc000008f
   140013794:	or     DWORD PTR [rax+0x4],0x1
   140013798:	test   r8b,0x2
   14001379c:	je     0x1400137ab
   14001379e:	mov    rax,QWORD PTR [rbp+0x10]
   1400137a2:	mov    edi,0xc0000093
   1400137a7:	or     DWORD PTR [rax+0x4],0x2
   1400137ab:	test   r8b,0x1
   1400137af:	je     0x1400137be
   1400137b1:	mov    rax,QWORD PTR [rbp+0x10]
   1400137b5:	mov    edi,0xc0000091
   1400137ba:	or     DWORD PTR [rax+0x4],0x4
   1400137be:	test   r8b,0x4
   1400137c2:	je     0x1400137d1
   1400137c4:	mov    rax,QWORD PTR [rbp+0x10]
   1400137c8:	mov    edi,0xc000008e
   1400137cd:	or     DWORD PTR [rax+0x4],0x8
   1400137d1:	test   r8b,0x8
   1400137d5:	je     0x1400137e4
   1400137d7:	mov    rax,QWORD PTR [rbp+0x10]
   1400137db:	mov    edi,0xc0000090
   1400137e0:	or     DWORD PTR [rax+0x4],0x10
   1400137e4:	mov    rcx,QWORD PTR [rbp+0x10]
   1400137e8:	mov    rax,QWORD PTR [rbx]
   1400137eb:	shr    rax,0x7
   1400137ef:	shl    eax,0x4
   1400137f2:	not    eax
   1400137f4:	xor    eax,DWORD PTR [rcx+0x8]
   1400137f7:	and    eax,0x10
   1400137fa:	xor    DWORD PTR [rcx+0x8],eax
   1400137fd:	mov    rcx,QWORD PTR [rbp+0x10]
   140013801:	mov    rax,QWORD PTR [rbx]
   140013804:	shr    rax,0x9
   140013808:	shl    eax,0x3
   14001380b:	not    eax
   14001380d:	xor    eax,DWORD PTR [rcx+0x8]
   140013810:	and    eax,0x8
   140013813:	xor    DWORD PTR [rcx+0x8],eax
   140013816:	mov    rcx,QWORD PTR [rbp+0x10]
   14001381a:	mov    rax,QWORD PTR [rbx]
   14001381d:	shr    rax,0xa
   140013821:	shl    eax,0x2
   140013824:	not    eax
   140013826:	xor    eax,DWORD PTR [rcx+0x8]
   140013829:	and    eax,0x4
   14001382c:	xor    DWORD PTR [rcx+0x8],eax
   14001382f:	mov    rcx,QWORD PTR [rbp+0x10]
   140013833:	mov    rax,QWORD PTR [rbx]
   140013836:	shr    rax,0xb
   14001383a:	add    eax,eax
   14001383c:	not    eax
   14001383e:	xor    eax,DWORD PTR [rcx+0x8]
   140013841:	and    eax,0x2
   140013844:	xor    DWORD PTR [rcx+0x8],eax
   140013847:	mov    eax,DWORD PTR [rbx]
   140013849:	mov    rcx,QWORD PTR [rbp+0x10]
   14001384d:	shr    rax,0xc
   140013851:	not    eax
   140013853:	xor    eax,DWORD PTR [rcx+0x8]
   140013856:	and    eax,0x1
   140013859:	xor    DWORD PTR [rcx+0x8],eax
   14001385c:	call   0x140009ed0
   140013861:	mov    rdx,rax
   140013864:	test   al,0x1
   140013866:	je     0x140013870
   140013868:	mov    rcx,QWORD PTR [rbp+0x10]
   14001386c:	or     DWORD PTR [rcx+0xc],0x10
   140013870:	test   al,0x4
   140013872:	je     0x14001387c
   140013874:	mov    rcx,QWORD PTR [rbp+0x10]
   140013878:	or     DWORD PTR [rcx+0xc],0x8
   14001387c:	test   al,0x8
   14001387e:	je     0x140013888
   140013880:	mov    rax,QWORD PTR [rbp+0x10]
   140013884:	or     DWORD PTR [rax+0xc],0x4
   140013888:	test   dl,0x10
   14001388b:	je     0x140013895
   14001388d:	mov    rax,QWORD PTR [rbp+0x10]
   140013891:	or     DWORD PTR [rax+0xc],0x2
   140013895:	test   dl,0x20
   140013898:	je     0x1400138a2
   14001389a:	mov    rax,QWORD PTR [rbp+0x10]
   14001389e:	or     DWORD PTR [rax+0xc],0x1
   1400138a2:	mov    eax,DWORD PTR [rbx]
   1400138a4:	mov    ecx,0x6000
   1400138a9:	and    rax,rcx
   1400138ac:	je     0x1400138ec
   1400138ae:	cmp    rax,0x2000
   1400138b4:	je     0x1400138dc
   1400138b6:	cmp    rax,0x4000
   1400138bc:	je     0x1400138cc
   1400138be:	cmp    rax,rcx
   1400138c1:	jne    0x1400138f3
   1400138c3:	mov    rax,QWORD PTR [rbp+0x10]
   1400138c7:	or     DWORD PTR [rax],0x3
   1400138ca:	jmp    0x1400138f3
   1400138cc:	mov    rax,QWORD PTR [rbp+0x10]
   1400138d0:	and    DWORD PTR [rax],0xfffffffe
   1400138d3:	mov    rax,QWORD PTR [rbp+0x10]
   1400138d7:	or     DWORD PTR [rax],0x2
   1400138da:	jmp    0x1400138f3
   1400138dc:	mov    rax,QWORD PTR [rbp+0x10]
   1400138e0:	and    DWORD PTR [rax],0xfffffffd
   1400138e3:	mov    rax,QWORD PTR [rbp+0x10]
   1400138e7:	or     DWORD PTR [rax],0x1
   1400138ea:	jmp    0x1400138f3
   1400138ec:	mov    rax,QWORD PTR [rbp+0x10]
   1400138f0:	and    DWORD PTR [rax],0xfffffffc
   1400138f3:	mov    rax,QWORD PTR [rbp+0x10]
   1400138f7:	and    esi,0xfff
   1400138fd:	and    DWORD PTR [rax],0xfffe001f
   140013903:	mov    rax,QWORD PTR [rbp+0x10]
   140013907:	shl    esi,0x5
   14001390a:	or     DWORD PTR [rax],esi
   14001390c:	mov    rax,QWORD PTR [rbp+0x10]
   140013910:	mov    rsi,QWORD PTR [rbp+0x38]
   140013914:	or     DWORD PTR [rax+0x20],0x1
   140013918:	cmp    DWORD PTR [rbp+0x40],0x0
   14001391c:	je     0x140013951
   14001391e:	mov    rax,QWORD PTR [rbp+0x10]
   140013922:	mov    edx,0xffffffe1
   140013927:	and    DWORD PTR [rax+0x20],edx
   14001392a:	mov    rax,QWORD PTR [rbp+0x30]
   14001392e:	mov    ecx,DWORD PTR [rax]
   140013930:	mov    rax,QWORD PTR [rbp+0x10]
   140013934:	mov    DWORD PTR [rax+0x10],ecx
   140013937:	mov    rax,QWORD PTR [rbp+0x10]
   14001393b:	or     DWORD PTR [rax+0x60],0x1
   14001393f:	mov    rax,QWORD PTR [rbp+0x10]
   140013943:	and    DWORD PTR [rax+0x60],edx
   140013946:	mov    rax,QWORD PTR [rbp+0x10]
   14001394a:	mov    ecx,DWORD PTR [rsi]
   14001394c:	mov    DWORD PTR [rax+0x50],ecx
   14001394f:	jmp    0x140013999
   140013951:	mov    rcx,QWORD PTR [rbp+0x10]
   140013955:	mov    r8d,0xffffffe3
   14001395b:	mov    eax,DWORD PTR [rcx+0x20]
   14001395e:	and    eax,r8d
   140013961:	or     eax,0x2
   140013964:	mov    DWORD PTR [rcx+0x20],eax
   140013967:	mov    rax,QWORD PTR [rbp+0x30]
   14001396b:	mov    rcx,QWORD PTR [rax]
   14001396e:	mov    rax,QWORD PTR [rbp+0x10]
   140013972:	mov    QWORD PTR [rax+0x10],rcx
   140013976:	mov    rax,QWORD PTR [rbp+0x10]
   14001397a:	or     DWORD PTR [rax+0x60],0x1
   14001397e:	mov    rdx,QWORD PTR [rbp+0x10]
   140013982:	mov    eax,DWORD PTR [rdx+0x60]
   140013985:	and    eax,r8d
   140013988:	or     eax,0x2
   14001398b:	mov    DWORD PTR [rdx+0x60],eax
   14001398e:	mov    rax,QWORD PTR [rbp+0x10]
   140013992:	mov    rdx,QWORD PTR [rsi]
   140013995:	mov    QWORD PTR [rax+0x50],rdx
   140013999:	call   0x140009e14
   14001399e:	xor    edx,edx
   1400139a0:	lea    r9,[rbp+0x10]
   1400139a4:	lea    r8d,[rdx+0x1]
   1400139a8:	mov    ecx,edi
   1400139aa:	call   QWORD PTR [rip+0x18778]        # 0x14002c128
   1400139b0:	mov    rcx,QWORD PTR [rbp+0x10]
   1400139b4:	test   BYTE PTR [rcx+0x8],0x10
   1400139b8:	je     0x1400139bf
   1400139ba:	btr    QWORD PTR [rbx],0x7
   1400139bf:	test   BYTE PTR [rcx+0x8],0x8
   1400139c3:	je     0x1400139ca
   1400139c5:	btr    QWORD PTR [rbx],0x9
   1400139ca:	test   BYTE PTR [rcx+0x8],0x4
   1400139ce:	je     0x1400139d5
   1400139d0:	btr    QWORD PTR [rbx],0xa
   1400139d5:	test   BYTE PTR [rcx+0x8],0x2
   1400139d9:	je     0x1400139e0
   1400139db:	btr    QWORD PTR [rbx],0xb
   1400139e0:	test   BYTE PTR [rcx+0x8],0x1
   1400139e4:	je     0x1400139eb
   1400139e6:	btr    QWORD PTR [rbx],0xc
   1400139eb:	mov    eax,DWORD PTR [rcx]
   1400139ed:	and    eax,0x3
   1400139f0:	je     0x140013a1f
   1400139f2:	dec    eax
   1400139f4:	je     0x140013a13
   1400139f6:	dec    eax
   1400139f8:	je     0x140013a07
   1400139fa:	dec    eax
   1400139fc:	jne    0x140013a26
   1400139fe:	or     QWORD PTR [rbx],0x6000
   140013a05:	jmp    0x140013a26
   140013a07:	btr    QWORD PTR [rbx],0xd
   140013a0c:	bts    QWORD PTR [rbx],0xe
   140013a11:	jmp    0x140013a26
   140013a13:	btr    QWORD PTR [rbx],0xe
   140013a18:	bts    QWORD PTR [rbx],0xd
   140013a1d:	jmp    0x140013a26
   140013a1f:	and    QWORD PTR [rbx],0xffffffffffff9fff
   140013a26:	cmp    DWORD PTR [rbp+0x40],0x0
   140013a2a:	je     0x140013a33
   140013a2c:	mov    eax,DWORD PTR [rcx+0x50]
   140013a2f:	mov    DWORD PTR [rsi],eax
   140013a31:	jmp    0x140013a3a
   140013a33:	mov    rax,QWORD PTR [rcx+0x50]
   140013a37:	mov    QWORD PTR [rsi],rax
   140013a3a:	mov    rbx,QWORD PTR [rsp+0x38]
   140013a3f:	mov    rsi,QWORD PTR [rsp+0x40]
   140013a44:	mov    rdi,QWORD PTR [rsp+0x48]
   140013a49:	add    rsp,0x20
   140013a4d:	pop    rbp
   140013a4e:	ret    
   140013a4f:	int3   
   140013a50:	sub    rsp,0x48
   140013a54:	mov    rax,QWORD PTR [rsp+0x78]
   140013a59:	mov    DWORD PTR [rsp+0x30],0x1
   140013a61:	mov    QWORD PTR [rsp+0x28],rax
   140013a66:	mov    rax,QWORD PTR [rsp+0x70]
   140013a6b:	mov    QWORD PTR [rsp+0x20],rax
   140013a70:	call   0x14001374c
   140013a75:	add    rsp,0x48
   140013a79:	ret    
   140013a7a:	int3   
   140013a7b:	int3   
   140013a7c:	sub    rsp,0x28
   140013a80:	cmp    ecx,0x1
   140013a83:	je     0x140013a9a
   140013a85:	lea    eax,[rcx-0x2]
   140013a88:	cmp    eax,0x1
   140013a8b:	ja     0x140013aa5
   140013a8d:	call   0x140009cb4
   140013a92:	mov    DWORD PTR [rax],0x22
   140013a98:	jmp    0x140013aa5
   140013a9a:	call   0x140009cb4
   140013a9f:	mov    DWORD PTR [rax],0x21
   140013aa5:	add    rsp,0x28
   140013aa9:	ret    
   140013aaa:	int3   
   140013aab:	int3   
   140013aac:	movsd  QWORD PTR [rsp+0x20],xmm3
   140013ab2:	movsd  QWORD PTR [rsp+0x18],xmm2
   140013ab8:	push   rbx
   140013ab9:	sub    rsp,0x50
   140013abd:	lea    r9,[rip+0x2976c]        # 0x14003d230
   140013ac4:	mov    ebx,ecx
   140013ac6:	xor    r8d,r8d
   140013ac9:	mov    rax,r9
   140013acc:	cmp    DWORD PTR [rax],edx
   140013ace:	je     0x140013ae7
   140013ad0:	lea    rcx,[rip+0x29929]        # 0x14003d400
   140013ad7:	add    rax,0x10
   140013adb:	inc    r8d
   140013ade:	cmp    rax,rcx
   140013ae1:	jl     0x140013acc
   140013ae3:	xor    eax,eax
   140013ae5:	jmp    0x140013af2
   140013ae7:	movsxd rax,r8d
   140013aea:	add    rax,rax
   140013aed:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   140013af2:	mov    rcx,QWORD PTR [rsp+0x88]
   140013afa:	mov    QWORD PTR [rsp+0x28],rax
   140013aff:	mov    edx,0xffc0
   140013b04:	test   rax,rax
   140013b07:	je     0x140013b65
   140013b09:	mov    eax,DWORD PTR [rsp+0x70]
   140013b0d:	mov    DWORD PTR [rsp+0x20],ebx
   140013b11:	mov    DWORD PTR [rsp+0x30],eax
   140013b15:	mov    eax,DWORD PTR [rsp+0x74]
   140013b19:	mov    DWORD PTR [rsp+0x34],eax
   140013b1d:	mov    eax,DWORD PTR [rsp+0x78]
   140013b21:	mov    DWORD PTR [rsp+0x38],eax
   140013b25:	mov    eax,DWORD PTR [rsp+0x7c]
   140013b29:	mov    DWORD PTR [rsp+0x3c],eax
   140013b2d:	mov    eax,DWORD PTR [rsp+0x80]
   140013b34:	mov    DWORD PTR [rsp+0x40],eax
   140013b38:	mov    eax,DWORD PTR [rsp+0x84]
   140013b3f:	mov    DWORD PTR [rsp+0x44],eax
   140013b43:	call   0x140009e34
   140013b48:	lea    rcx,[rsp+0x20]
   140013b4d:	call   0x140013b80
   140013b52:	test   eax,eax
   140013b54:	jne    0x140013b5d
   140013b56:	mov    ecx,ebx
   140013b58:	call   0x140013a7c
   140013b5d:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140013b63:	jmp    0x140013b7a
   140013b65:	call   0x140009e34
   140013b6a:	mov    ecx,ebx
   140013b6c:	call   0x140013a7c
   140013b71:	movsd  xmm0,QWORD PTR [rsp+0x80]
   140013b7a:	add    rsp,0x50
   140013b7e:	pop    rbx
   140013b7f:	ret    
   140013b80:	xor    eax,eax
   140013b82:	ret    
   140013b83:	int3   
   140013b84:	neg    rcx
   140013b87:	sbb    eax,eax
   140013b89:	and    eax,0x1
   140013b8c:	ret    
   140013b8d:	int3   
   140013b8e:	int3   
   140013b8f:	int3   
   140013b90:	neg    rcx
   140013b93:	sbb    eax,eax
   140013b95:	and    eax,0x1
   140013b98:	ret    
   140013b99:	int3   
   140013b9a:	int3   
   140013b9b:	int3   
   140013b9c:	neg    rcx
   140013b9f:	sbb    eax,eax
   140013ba1:	and    eax,0x1
   140013ba4:	ret    
   140013ba5:	int3   
   140013ba6:	int3   
   140013ba7:	int3   
   140013ba8:	int3   
   140013ba9:	int3   
   140013baa:	int3   
   140013bab:	int3   
   140013bac:	int3   
   140013bad:	int3   
   140013bae:	int3   
   140013baf:	int3   
   140013bb0:	int3   
   140013bb1:	int3   
   140013bb2:	int3   
   140013bb3:	int3   
   140013bb4:	int3   
   140013bb5:	int3   
   140013bb6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013bc0:	sub    rsp,0x28
   140013bc4:	mov    QWORD PTR [rsp+0x30],rcx
   140013bc9:	mov    QWORD PTR [rsp+0x38],rdx
   140013bce:	mov    DWORD PTR [rsp+0x40],r8d
   140013bd3:	mov    rdx,QWORD PTR [rdx]
   140013bd6:	mov    rax,rcx
   140013bd9:	call   0x140010d00
   140013bde:	call   rax
   140013be0:	call   0x140010d30
   140013be5:	mov    rcx,rax
   140013be8:	mov    rdx,QWORD PTR [rsp+0x38]
   140013bed:	mov    rdx,QWORD PTR [rdx]
   140013bf0:	mov    r8d,0x2
   140013bf6:	call   0x140010d00
   140013bfb:	add    rsp,0x28
   140013bff:	ret    
   140013c00:	mov    rax,QWORD PTR [rsp]
   140013c04:	mov    QWORD PTR [rcx],rax
   140013c07:	ret    
   140013c08:	rex push rbx
   140013c0a:	sub    rsp,0x20
   140013c0e:	mov    rbx,rcx
   140013c11:	call   QWORD PTR [rip+0x18589]        # 0x14002c1a0
   140013c17:	mov    ecx,0x1
   140013c1c:	mov    DWORD PTR [rip+0x2b26e],eax        # 0x14003ee90
   140013c22:	call   0x140010d34
   140013c27:	mov    rcx,rbx
   140013c2a:	call   0x14000ed20
   140013c2f:	cmp    DWORD PTR [rip+0x2b25a],0x0        # 0x14003ee90
   140013c36:	jne    0x140013c42
   140013c38:	mov    ecx,0x1
   140013c3d:	call   0x140010d34
   140013c42:	mov    ecx,0xc0000409
   140013c47:	add    rsp,0x20
   140013c4b:	pop    rbx
   140013c4c:	jmp    0x14000ed00
   140013c51:	int3   
   140013c52:	int3   
   140013c53:	int3   
   140013c54:	mov    QWORD PTR [rsp+0x8],rcx
   140013c59:	sub    rsp,0x38
   140013c5d:	mov    ecx,0x17
   140013c62:	call   0x14002a60c
   140013c67:	test   eax,eax
   140013c69:	je     0x140013c72
   140013c6b:	mov    ecx,0x2
   140013c70:	int    0x29
   140013c72:	lea    rcx,[rip+0x2ad47]        # 0x14003e9c0
   140013c79:	call   0x14000e534
   140013c7e:	mov    rax,QWORD PTR [rsp+0x38]
   140013c83:	mov    QWORD PTR [rip+0x2ae2e],rax        # 0x14003eab8
   140013c8a:	lea    rax,[rsp+0x38]
   140013c8f:	add    rax,0x8
   140013c93:	mov    QWORD PTR [rip+0x2adbe],rax        # 0x14003ea58
   140013c9a:	mov    rax,QWORD PTR [rip+0x2ae17]        # 0x14003eab8
   140013ca1:	mov    QWORD PTR [rip+0x2ac88],rax        # 0x14003e930
   140013ca8:	mov    rax,QWORD PTR [rsp+0x40]
   140013cad:	mov    QWORD PTR [rip+0x2ad8c],rax        # 0x14003ea40
   140013cb4:	mov    DWORD PTR [rip+0x2ac62],0xc0000409        # 0x14003e920
   140013cbe:	mov    DWORD PTR [rip+0x2ac5c],0x1        # 0x14003e924
   140013cc8:	mov    DWORD PTR [rip+0x2ac66],0x1        # 0x14003e938
   140013cd2:	mov    eax,0x8
   140013cd7:	imul   rax,rax,0x0
   140013cdb:	lea    rcx,[rip+0x2ac5e]        # 0x14003e940
   140013ce2:	mov    QWORD PTR [rcx+rax*1],0x2
   140013cea:	mov    eax,0x8
   140013cef:	imul   rax,rax,0x0
   140013cf3:	mov    rcx,QWORD PTR [rip+0x284d6]        # 0x14003c1d0
   140013cfa:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140013cff:	mov    eax,0x8
   140013d04:	imul   rax,rax,0x1
   140013d08:	mov    rcx,QWORD PTR [rip+0x284c9]        # 0x14003c1d8
   140013d0f:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140013d14:	lea    rcx,[rip+0x1f625]        # 0x140033340
   140013d1b:	call   0x140013c08
   140013d20:	add    rsp,0x38
   140013d24:	ret    
   140013d25:	int3   
   140013d26:	int3   
   140013d27:	int3   
   140013d28:	sub    rsp,0x28
   140013d2c:	mov    ecx,0x8
   140013d31:	call   0x140013d3c
   140013d36:	add    rsp,0x28
   140013d3a:	ret    
   140013d3b:	int3   
   140013d3c:	mov    DWORD PTR [rsp+0x8],ecx
   140013d40:	sub    rsp,0x28
   140013d44:	mov    ecx,0x17
   140013d49:	call   0x14002a60c
   140013d4e:	test   eax,eax
   140013d50:	je     0x140013d5a
   140013d52:	mov    eax,DWORD PTR [rsp+0x30]
   140013d56:	mov    ecx,eax
   140013d58:	int    0x29
   140013d5a:	lea    rcx,[rip+0x2ac5f]        # 0x14003e9c0
   140013d61:	call   0x14000e4c4
   140013d66:	mov    rax,QWORD PTR [rsp+0x28]
   140013d6b:	mov    QWORD PTR [rip+0x2ad46],rax        # 0x14003eab8
   140013d72:	lea    rax,[rsp+0x28]
   140013d77:	add    rax,0x8
   140013d7b:	mov    QWORD PTR [rip+0x2acd6],rax        # 0x14003ea58
   140013d82:	mov    rax,QWORD PTR [rip+0x2ad2f]        # 0x14003eab8
   140013d89:	mov    QWORD PTR [rip+0x2aba0],rax        # 0x14003e930
   140013d90:	mov    DWORD PTR [rip+0x2ab86],0xc0000409        # 0x14003e920
   140013d9a:	mov    DWORD PTR [rip+0x2ab80],0x1        # 0x14003e924
   140013da4:	mov    DWORD PTR [rip+0x2ab8a],0x1        # 0x14003e938
   140013dae:	mov    eax,0x8
   140013db3:	imul   rax,rax,0x0
   140013db7:	lea    rcx,[rip+0x2ab82]        # 0x14003e940
   140013dbe:	mov    edx,DWORD PTR [rsp+0x30]
   140013dc2:	mov    QWORD PTR [rcx+rax*1],rdx
   140013dc6:	lea    rcx,[rip+0x1f573]        # 0x140033340
   140013dcd:	call   0x140013c08
   140013dd2:	add    rsp,0x28
   140013dd6:	ret    
   140013dd7:	int3   
   140013dd8:	mov    QWORD PTR [rsp+0x18],r8
   140013ddd:	mov    DWORD PTR [rsp+0x10],edx
   140013de1:	mov    DWORD PTR [rsp+0x8],ecx
   140013de5:	sub    rsp,0x38
   140013de9:	mov    ecx,0x17
   140013dee:	call   0x14002a60c
   140013df3:	test   eax,eax
   140013df5:	je     0x140013dff
   140013df7:	mov    eax,DWORD PTR [rsp+0x40]
   140013dfb:	mov    ecx,eax
   140013dfd:	int    0x29
   140013dff:	lea    rcx,[rip+0x2abba]        # 0x14003e9c0
   140013e06:	call   0x14000e4c4
   140013e0b:	mov    rax,QWORD PTR [rsp+0x38]
   140013e10:	mov    QWORD PTR [rip+0x2aca1],rax        # 0x14003eab8
   140013e17:	lea    rax,[rsp+0x38]
   140013e1c:	add    rax,0x8
   140013e20:	mov    QWORD PTR [rip+0x2ac31],rax        # 0x14003ea58
   140013e27:	mov    rax,QWORD PTR [rip+0x2ac8a]        # 0x14003eab8
   140013e2e:	mov    QWORD PTR [rip+0x2aafb],rax        # 0x14003e930
   140013e35:	mov    DWORD PTR [rip+0x2aae1],0xc0000409        # 0x14003e920
   140013e3f:	mov    DWORD PTR [rip+0x2aadb],0x1        # 0x14003e924
   140013e49:	cmp    DWORD PTR [rsp+0x48],0x0
   140013e4e:	jbe    0x140013e60
   140013e50:	cmp    QWORD PTR [rsp+0x50],0x0
   140013e56:	jne    0x140013e60
   140013e58:	mov    DWORD PTR [rsp+0x48],0x0
   140013e60:	cmp    DWORD PTR [rsp+0x48],0xe
   140013e65:	jbe    0x140013e71
   140013e67:	mov    eax,DWORD PTR [rsp+0x48]
   140013e6b:	dec    eax
   140013e6d:	mov    DWORD PTR [rsp+0x48],eax
   140013e71:	mov    eax,DWORD PTR [rsp+0x48]
   140013e75:	inc    eax
   140013e77:	mov    DWORD PTR [rip+0x2aabb],eax        # 0x14003e938
   140013e7d:	mov    eax,0x8
   140013e82:	imul   rax,rax,0x0
   140013e86:	lea    rcx,[rip+0x2aab3]        # 0x14003e940
   140013e8d:	mov    edx,DWORD PTR [rsp+0x40]
   140013e91:	mov    QWORD PTR [rcx+rax*1],rdx
   140013e95:	mov    DWORD PTR [rsp+0x20],0x0
   140013e9d:	jmp    0x140013ea9
   140013e9f:	mov    eax,DWORD PTR [rsp+0x20]
   140013ea3:	inc    eax
   140013ea5:	mov    DWORD PTR [rsp+0x20],eax
   140013ea9:	mov    eax,DWORD PTR [rsp+0x48]
   140013ead:	cmp    DWORD PTR [rsp+0x20],eax
   140013eb1:	jae    0x140013ed5
   140013eb3:	mov    eax,DWORD PTR [rsp+0x20]
   140013eb7:	mov    ecx,DWORD PTR [rsp+0x20]
   140013ebb:	inc    ecx
   140013ebd:	mov    ecx,ecx
   140013ebf:	lea    rdx,[rip+0x2aa7a]        # 0x14003e940
   140013ec6:	mov    r8,QWORD PTR [rsp+0x50]
   140013ecb:	mov    rax,QWORD PTR [r8+rax*8]
   140013ecf:	mov    QWORD PTR [rdx+rcx*8],rax
   140013ed3:	jmp    0x140013e9f
   140013ed5:	lea    rcx,[rip+0x1f464]        # 0x140033340
   140013edc:	call   0x140013c08
   140013ee1:	add    rsp,0x38
   140013ee5:	ret    
   140013ee6:	int3   
   140013ee7:	int3   
   140013ee8:	and    QWORD PTR [rcx],0x0
   140013eec:	mov    rax,rcx
   140013eef:	ret    
   140013ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140013ef5:	mov    QWORD PTR [rsp+0x10],rsi
   140013efa:	push   rdi
   140013efb:	sub    rsp,0x20
   140013eff:	and    QWORD PTR [rcx],0x0
   140013f03:	mov    BYTE PTR [rcx+0x8],0x0
   140013f07:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140013f0e:	mov    rdi,rdx
   140013f11:	mov    rdx,QWORD PTR [rdx]
   140013f14:	mov    sil,r8b
   140013f17:	mov    rbx,rcx
   140013f1a:	test   rdx,rdx
   140013f1d:	je     0x140013fb9
   140013f23:	cmp    BYTE PTR [rdx],0x0
   140013f26:	je     0x140013fb3
   140013f2c:	xor    r8d,r8d
   140013f2f:	mov    r9,QWORD PTR [rdi]
   140013f32:	mov    cl,BYTE PTR [r9]
   140013f35:	cmp    cl,sil
   140013f38:	je     0x140013f7b
   140013f3a:	lea    eax,[rcx-0x24]
   140013f3d:	cmp    al,0x3b
   140013f3f:	ja     0x140013f51
   140013f41:	movabs r10,0x87fffffe53ff201
   140013f4b:	bt     r10,rax
   140013f4f:	jb     0x140013f6c
   140013f51:	lea    eax,[rcx-0x61]
   140013f54:	cmp    al,0x19
   140013f56:	jbe    0x140013f6c
   140013f58:	add    cl,0x80
   140013f5b:	cmp    cl,0x7e
   140013f5e:	jbe    0x140013f6c
   140013f60:	test   DWORD PTR [rip+0x2af6a],0x10000        # 0x14003eed4
   140013f6a:	je     0x140013fa1
   140013f6c:	lea    rax,[r9+0x1]
   140013f70:	inc    r8d
   140013f73:	mov    QWORD PTR [rdi],rax
   140013f76:	cmp    BYTE PTR [rax],0x0
   140013f79:	jne    0x140013f2f
   140013f7b:	mov    rcx,rbx
   140013f7e:	call   0x140015aa8
   140013f83:	mov    rax,QWORD PTR [rdi]
   140013f86:	mov    cl,BYTE PTR [rax]
   140013f88:	test   cl,cl
   140013f8a:	je     0x140013fa7
   140013f8c:	inc    rax
   140013f8f:	mov    QWORD PTR [rdi],rax
   140013f92:	cmp    cl,sil
   140013f95:	je     0x140013fbd
   140013f97:	and    QWORD PTR [rbx],0x0
   140013f9b:	mov    BYTE PTR [rbx+0x8],0x3
   140013f9f:	jmp    0x140013fbd
   140013fa1:	mov    BYTE PTR [rbx+0x8],0x2
   140013fa5:	jmp    0x140013fbd
   140013fa7:	cmp    BYTE PTR [rbx+0x8],0x0
   140013fab:	jne    0x140013fbd
   140013fad:	mov    BYTE PTR [rbx+0x8],0x1
   140013fb1:	jmp    0x140013fbd
   140013fb3:	mov    BYTE PTR [rcx+0x8],0x1
   140013fb7:	jmp    0x140013fbd
   140013fb9:	mov    BYTE PTR [rcx+0x8],0x2
   140013fbd:	mov    rsi,QWORD PTR [rsp+0x38]
   140013fc2:	mov    rax,rbx
   140013fc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140013fca:	add    rsp,0x20
   140013fce:	pop    rdi
   140013fcf:	ret    
   140013fd0:	movups xmm0,XMMWORD PTR [rdx]
   140013fd3:	mov    rax,rcx
   140013fd6:	movdqu XMMWORD PTR [rcx],xmm0
   140013fda:	ret    
   140013fdb:	int3   
   140013fdc:	mov    BYTE PTR [rsp+0x10],dl
   140013fe0:	push   rbx
   140013fe1:	sub    rsp,0x20
   140013fe5:	and    QWORD PTR [rcx],0x0
   140013fe9:	mov    BYTE PTR [rcx+0x8],0x0
   140013fed:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140013ff4:	mov    rbx,rcx
   140013ff7:	test   dl,dl
   140013ff9:	je     0x14001400b
   140013ffb:	lea    rdx,[rsp+0x38]
   140014000:	mov    r8d,0x1
   140014006:	call   0x140015aa8
   14001400b:	mov    rax,rbx
   14001400e:	add    rsp,0x20
   140014012:	pop    rbx
   140014013:	ret    
   140014014:	mov    QWORD PTR [rsp+0x8],rbx
   140014019:	mov    QWORD PTR [rsp+0x10],rsi
   14001401e:	push   rdi
   14001401f:	sub    rsp,0x20
   140014023:	xor    esi,esi
   140014025:	mov    rdi,rdx
   140014028:	mov    rbx,rcx
   14001402b:	test   rdx,rdx
   14001402e:	je     0x140014078
   140014030:	lea    edx,[rsi+0x10]
   140014033:	lea    rcx,[rip+0x2aea6]        # 0x14003eee0
   14001403a:	xor    r8d,r8d
   14001403d:	call   0x140017e18
   140014042:	test   rax,rax
   140014045:	je     0x140014064
   140014047:	lea    rcx,[rip+0x20082]        # 0x1400340d0
   14001404e:	mov    QWORD PTR [rax],rcx
   140014051:	mov    cl,BYTE PTR [rdi+0x8]
   140014054:	sub    cl,0x2
   140014057:	cmp    cl,0x1
   14001405a:	cmovbe rdi,rsi
   14001405e:	mov    QWORD PTR [rax+0x8],rdi
   140014062:	jmp    0x140014067
   140014064:	mov    rax,rsi
   140014067:	mov    QWORD PTR [rbx],rax
   14001406a:	neg    rax
   14001406d:	sbb    al,al
   14001406f:	not    al
   140014071:	and    al,0x3
   140014073:	mov    BYTE PTR [rbx+0x8],al
   140014076:	jmp    0x14001407f
   140014078:	mov    BYTE PTR [rcx+0x8],sil
   14001407c:	mov    QWORD PTR [rcx],rsi
   14001407f:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140014086:	mov    rsi,QWORD PTR [rsp+0x38]
   14001408b:	mov    rax,rbx
   14001408e:	mov    rbx,QWORD PTR [rsp+0x30]
   140014093:	add    rsp,0x20
   140014097:	pop    rdi
   140014098:	ret    
   140014099:	int3   
   14001409a:	int3   
   14001409b:	int3   
   14001409c:	rex push rbx
   14001409e:	sub    rsp,0x20
   1400140a2:	mov    rbx,rcx
   1400140a5:	xor    ecx,ecx
   1400140a7:	mov    BYTE PTR [rbx+0x8],cl
   1400140aa:	and    DWORD PTR [rbx+0x8],0xffff00ff
   1400140b1:	mov    QWORD PTR [rbx],rcx
   1400140b4:	test   rdx,rdx
   1400140b7:	je     0x1400140da
   1400140b9:	mov    rax,rdx
   1400140bc:	mov    r8d,ecx
   1400140bf:	cmp    BYTE PTR [rdx],cl
   1400140c1:	je     0x1400140da
   1400140c3:	inc    rax
   1400140c6:	inc    r8d
   1400140c9:	cmp    BYTE PTR [rax],cl
   1400140cb:	jne    0x1400140c3
   1400140cd:	test   r8d,r8d
   1400140d0:	je     0x1400140da
   1400140d2:	mov    rcx,rbx
   1400140d5:	call   0x140015aa8
   1400140da:	mov    rax,rbx
   1400140dd:	add    rsp,0x20
   1400140e1:	pop    rbx
   1400140e2:	ret    
   1400140e3:	int3   
   1400140e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400140e9:	push   rdi
   1400140ea:	sub    rsp,0x20
   1400140ee:	and    DWORD PTR [rcx+0x8],0xffff00ff
   1400140f5:	xor    edi,edi
   1400140f7:	mov    rbx,rcx
   1400140fa:	lea    ecx,[rdi+0x1]
   1400140fd:	lea    eax,[rdx-0x2]
   140014100:	mov    r8d,edx
   140014103:	cmp    eax,ecx
   140014105:	mov    QWORD PTR [rbx],rdi
   140014108:	cmova  r8d,edi
   14001410c:	mov    BYTE PTR [rbx+0x8],r8b
   140014110:	cmp    edx,ecx
   140014112:	jne    0x140014125
   140014114:	call   0x14001aa1c
   140014119:	mov    QWORD PTR [rbx],rax
   14001411c:	test   rax,rax
   14001411f:	jne    0x140014125
   140014121:	mov    BYTE PTR [rbx+0x8],0x3
   140014125:	mov    rax,rbx
   140014128:	mov    rbx,QWORD PTR [rsp+0x30]
   14001412d:	add    rsp,0x20
   140014131:	pop    rdi
   140014132:	ret    
   140014133:	int3   
   140014134:	and    QWORD PTR [rcx],0x0
   140014138:	mov    BYTE PTR [rcx+0x8],0x0
   14001413c:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140014143:	mov    rax,rcx
   140014146:	ret    
   140014147:	int3   
   140014148:	rex push rbx
   14001414a:	sub    rsp,0x40
   14001414e:	mov    rax,QWORD PTR [rip+0x2807b]        # 0x14003c1d0
   140014155:	xor    rax,rsp
   140014158:	mov    QWORD PTR [rsp+0x38],rax
   14001415d:	xor    r11d,r11d
   140014160:	mov    r8,rdx
   140014163:	mov    rbx,rcx
   140014166:	mov    BYTE PTR [rcx+0x8],r11b
   14001416a:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140014171:	lea    r9,[rsp+0x35]
   140014176:	mov    QWORD PTR [rcx],r11
   140014179:	mov    BYTE PTR [rsp+0x35],r11b
   14001417e:	mov    r10b,r11b
   140014181:	test   rdx,rdx
   140014184:	jns    0x14001418c
   140014186:	mov    r10b,0x1
   140014189:	neg    r8
   14001418c:	dec    r9
   14001418f:	movabs rax,0xcccccccccccccccd
   140014199:	mul    r8
   14001419c:	shr    rdx,0x3
   1400141a0:	mov    al,dl
   1400141a2:	shl    al,0x2
   1400141a5:	lea    ecx,[rax+rdx*1]
   1400141a8:	add    cl,cl
   1400141aa:	sub    r8b,cl
   1400141ad:	add    r8b,0x30
   1400141b1:	mov    BYTE PTR [r9],r8b
   1400141b4:	mov    r8,rdx
   1400141b7:	test   rdx,rdx
   1400141ba:	jne    0x14001418c
   1400141bc:	test   r10b,r10b
   1400141bf:	je     0x1400141c8
   1400141c1:	dec    r9
   1400141c4:	mov    BYTE PTR [r9],0x2d
   1400141c8:	lea    r8,[rsp+0x35]
   1400141cd:	mov    rdx,r9
   1400141d0:	mov    rcx,rbx
   1400141d3:	sub    r8d,r9d
   1400141d6:	call   0x140015aa8
   1400141db:	mov    rax,rbx
   1400141de:	mov    rcx,QWORD PTR [rsp+0x38]
   1400141e3:	xor    rcx,rsp
   1400141e6:	call   0x14000c380
   1400141eb:	add    rsp,0x40
   1400141ef:	pop    rbx
   1400141f0:	ret    
   1400141f1:	int3   
   1400141f2:	int3   
   1400141f3:	int3   
   1400141f4:	rex push rbx
   1400141f6:	sub    rsp,0x40
   1400141fa:	mov    rax,QWORD PTR [rip+0x27fcf]        # 0x14003c1d0
   140014201:	xor    rax,rsp
   140014204:	mov    QWORD PTR [rsp+0x38],rax
   140014209:	xor    r10d,r10d
   14001420c:	mov    r8,rdx
   14001420f:	mov    rbx,rcx
   140014212:	mov    BYTE PTR [rcx+0x8],r10b
   140014216:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14001421d:	lea    r9,[rsp+0x34]
   140014222:	mov    QWORD PTR [rcx],r10
   140014225:	mov    BYTE PTR [rsp+0x34],r10b
   14001422a:	dec    r9
   14001422d:	movabs rax,0xcccccccccccccccd
   140014237:	mul    r8
   14001423a:	shr    rdx,0x3
   14001423e:	mov    al,dl
   140014240:	shl    al,0x2
   140014243:	lea    ecx,[rax+rdx*1]
   140014246:	add    cl,cl
   140014248:	sub    r8b,cl
   14001424b:	add    r8b,0x30
   14001424f:	mov    BYTE PTR [r9],r8b
   140014252:	mov    r8,rdx
   140014255:	test   rdx,rdx
   140014258:	jne    0x14001422a
   14001425a:	lea    r8,[rsp+0x34]
   14001425f:	mov    rdx,r9
   140014262:	mov    rcx,rbx
   140014265:	sub    r8d,r9d
   140014268:	call   0x140015aa8
   14001426d:	mov    rax,rbx
   140014270:	mov    rcx,QWORD PTR [rsp+0x38]
   140014275:	xor    rcx,rsp
   140014278:	call   0x14000c380
   14001427d:	add    rsp,0x40
   140014281:	pop    rbx
   140014282:	ret    
   140014283:	int3   
   140014284:	lea    rax,[rip+0x1fde5]        # 0x140034070
   14001428b:	mov    QWORD PTR [rcx],rax
   14001428e:	mov    rax,rcx
   140014291:	ret    
   140014292:	int3   
   140014293:	int3   
   140014294:	lea    rax,[rip+0x1fe55]        # 0x1400340f0
   14001429b:	mov    DWORD PTR [rcx+0x8],edx
   14001429e:	mov    QWORD PTR [rcx],rax
   1400142a1:	xor    eax,eax
   1400142a3:	cmp    edx,0x1
   1400142a6:	lea    r8d,[rax+0x4]
   1400142aa:	cmove  eax,r8d
   1400142ae:	mov    DWORD PTR [rcx+0xc],eax
   1400142b1:	mov    rax,rcx
   1400142b4:	ret    
   1400142b5:	int3   
   1400142b6:	int3   
   1400142b7:	int3   
   1400142b8:	or     DWORD PTR [rcx],0xffffffff
   1400142bb:	mov    rax,rcx
   1400142be:	ret    
   1400142bf:	int3   
   1400142c0:	or     r10d,0xffffffff
   1400142c4:	lea    rax,[rcx+0x58]
   1400142c8:	mov    DWORD PTR [rcx],r10d
   1400142cb:	mov    DWORD PTR [rax],r10d
   1400142ce:	mov    QWORD PTR [rip+0x2abeb],r8        # 0x14003eec0
   1400142d5:	mov    QWORD PTR [rip+0x2abdc],r8        # 0x14003eeb8
   1400142dc:	xor    r8d,r8d
   1400142df:	test   rdx,rdx
   1400142e2:	je     0x1400142f4
   1400142e4:	mov    DWORD PTR [rip+0x2abe5],r9d        # 0x14003eed0
   1400142eb:	mov    QWORD PTR [rip+0x2abd6],rdx        # 0x14003eec8
   1400142f2:	jmp    0x140014302
   1400142f4:	mov    QWORD PTR [rip+0x2abcd],r8        # 0x14003eec8
   1400142fb:	mov    DWORD PTR [rip+0x2abce],r8d        # 0x14003eed0
   140014302:	mov    QWORD PTR [rip+0x2ab9f],rax        # 0x14003eea8
   140014309:	mov    eax,DWORD PTR [rsp+0x30]
   14001430d:	mov    QWORD PTR [rip+0x2ab8c],rcx        # 0x14003eea0
   140014314:	mov    DWORD PTR [rip+0x2abba],eax        # 0x14003eed4
   14001431a:	mov    rax,QWORD PTR [rsp+0x28]
   14001431f:	mov    BYTE PTR [rip+0x2abb2],r8b        # 0x14003eed8
   140014326:	mov    QWORD PTR [rip+0x2ab6b],rax        # 0x14003ee98
   14001432d:	mov    rax,rcx
   140014330:	ret    
   140014331:	int3   
   140014332:	int3   
   140014333:	int3   
   140014334:	lea    rax,[rip+0x1fd55]        # 0x140034090
   14001433b:	mov    BYTE PTR [rcx+0x8],dl
   14001433e:	mov    QWORD PTR [rcx],rax
   140014341:	mov    rax,rcx
   140014344:	ret    
   140014345:	int3   
   140014346:	int3   
   140014347:	int3   
   140014348:	lea    rax,[rip+0x1fd81]        # 0x1400340d0
   14001434f:	xor    r8d,r8d
   140014352:	mov    QWORD PTR [rcx],rax
   140014355:	test   rdx,rdx
   140014358:	je     0x140014363
   14001435a:	mov    al,BYTE PTR [rdx+0x8]
   14001435d:	sub    al,0x2
   14001435f:	cmp    al,0x1
   140014361:	jbe    0x140014366
   140014363:	mov    r8,rdx
   140014366:	mov    QWORD PTR [rcx+0x8],r8
   14001436a:	mov    rax,rcx
   14001436d:	ret    
   14001436e:	int3   
   14001436f:	int3   
   140014370:	or     DWORD PTR [rcx+0x18],0xffffffff
   140014374:	lea    rax,[rip+0x1fd95]        # 0x140034110
   14001437b:	mov    QWORD PTR [rcx+0x8],rdx
   14001437f:	mov    QWORD PTR [rcx],rax
   140014382:	mov    QWORD PTR [rcx+0x10],r8
   140014386:	mov    rax,rcx
   140014389:	ret    
   14001438a:	int3   
   14001438b:	int3   
   14001438c:	mov    QWORD PTR [rsp+0x8],rbx
   140014391:	mov    QWORD PTR [rsp+0x10],rsi
   140014396:	push   rdi
   140014397:	sub    rsp,0x20
   14001439b:	lea    rax,[rip+0x1fd0e]        # 0x1400340b0
   1400143a2:	mov    edi,r8d
   1400143a5:	mov    rsi,rdx
   1400143a8:	mov    rbx,rcx
   1400143ab:	mov    QWORD PTR [rcx],rax
   1400143ae:	test   r8d,r8d
   1400143b1:	je     0x1400143f7
   1400143b3:	test   rdx,rdx
   1400143b6:	je     0x1400143f7
   1400143b8:	lea    rcx,[rip+0x2ab21]        # 0x14003eee0
   1400143bf:	movsxd rdx,edi
   1400143c2:	xor    r8d,r8d
   1400143c5:	call   0x140017e18
   1400143ca:	mov    DWORD PTR [rbx+0x10],edi
   1400143cd:	mov    rcx,rax
   1400143d0:	mov    QWORD PTR [rbx+0x8],rax
   1400143d4:	test   rax,rax
   1400143d7:	je     0x1400143f1
   1400143d9:	test   edi,edi
   1400143db:	je     0x140014400
   1400143dd:	sub    rsi,rax
   1400143e0:	mov    edx,edi
   1400143e2:	mov    al,BYTE PTR [rsi+rcx*1]
   1400143e5:	mov    BYTE PTR [rcx],al
   1400143e7:	inc    rcx
   1400143ea:	dec    rdx
   1400143ed:	jne    0x1400143e2
   1400143ef:	jmp    0x140014400
   1400143f1:	and    DWORD PTR [rbx+0x10],0x0
   1400143f5:	jmp    0x140014400
   1400143f7:	and    QWORD PTR [rcx+0x8],0x0
   1400143fc:	and    DWORD PTR [rcx+0x10],0x0
   140014400:	mov    rsi,QWORD PTR [rsp+0x38]
   140014405:	mov    rax,rbx
   140014408:	mov    rbx,QWORD PTR [rsp+0x30]
   14001440d:	add    rsp,0x20
   140014411:	pop    rdi
   140014412:	ret    
   140014413:	int3   
   140014414:	mov    rdx,rcx
   140014417:	lea    rcx,[rip+0x2aac2]        # 0x14003eee0
   14001441e:	jmp    0x140017e18
   140014423:	int3   
   140014424:	movups xmm0,XMMWORD PTR [rdx]
   140014427:	mov    rax,rcx
   14001442a:	movdqu XMMWORD PTR [rcx],xmm0
   14001442e:	ret    
   14001442f:	int3   
   140014430:	mov    BYTE PTR [rsp+0x10],dl
   140014434:	push   rbx
   140014435:	sub    rsp,0x20
   140014439:	and    QWORD PTR [rcx],0x0
   14001443d:	mov    BYTE PTR [rcx+0x8],0x0
   140014441:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140014448:	mov    rbx,rcx
   14001444b:	test   dl,dl
   14001444d:	je     0x14001445f
   14001444f:	lea    rdx,[rsp+0x38]
   140014454:	mov    r8d,0x1
   14001445a:	call   0x140015aa8
   14001445f:	mov    rax,rbx
   140014462:	add    rsp,0x20
   140014466:	pop    rbx
   140014467:	ret    
   140014468:	mov    QWORD PTR [rsp+0x8],rbx
   14001446d:	mov    QWORD PTR [rsp+0x10],rsi
   140014472:	push   rdi
   140014473:	sub    rsp,0x20
   140014477:	xor    esi,esi
   140014479:	mov    rdi,rdx
   14001447c:	mov    rbx,rcx
   14001447f:	mov    BYTE PTR [rcx+0x8],sil
   140014483:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14001448a:	mov    QWORD PTR [rcx],rsi
   14001448d:	test   rdx,rdx
   140014490:	je     0x1400144d7
   140014492:	lea    edx,[rsi+0x10]
   140014495:	lea    rcx,[rip+0x2aa44]        # 0x14003eee0
   14001449c:	xor    r8d,r8d
   14001449f:	call   0x140017e18
   1400144a4:	test   rax,rax
   1400144a7:	je     0x1400144c6
   1400144a9:	lea    rcx,[rip+0x1fc20]        # 0x1400340d0
   1400144b0:	mov    QWORD PTR [rax],rcx
   1400144b3:	mov    cl,BYTE PTR [rdi+0x8]
   1400144b6:	sub    cl,0x2
   1400144b9:	cmp    cl,0x1
   1400144bc:	cmovbe rdi,rsi
   1400144c0:	mov    QWORD PTR [rax+0x8],rdi
   1400144c4:	jmp    0x1400144c9
   1400144c6:	mov    rax,rsi
   1400144c9:	mov    QWORD PTR [rbx],rax
   1400144cc:	test   rax,rax
   1400144cf:	jne    0x1400144db
   1400144d1:	mov    BYTE PTR [rbx+0x8],0x3
   1400144d5:	jmp    0x1400144db
   1400144d7:	mov    BYTE PTR [rcx+0x8],0x3
   1400144db:	mov    rsi,QWORD PTR [rsp+0x38]
   1400144e0:	mov    rax,rbx
   1400144e3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400144e8:	add    rsp,0x20
   1400144ec:	pop    rdi
   1400144ed:	ret    
   1400144ee:	int3   
   1400144ef:	int3   
   1400144f0:	rex push rbx
   1400144f2:	sub    rsp,0x20
   1400144f6:	mov    rbx,rcx
   1400144f9:	xor    ecx,ecx
   1400144fb:	mov    rax,rdx
   1400144fe:	mov    BYTE PTR [rbx+0x8],cl
   140014501:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140014508:	mov    QWORD PTR [rbx],rcx
   14001450b:	mov    r8d,ecx
   14001450e:	cmp    BYTE PTR [rdx],cl
   140014510:	je     0x14001451c
   140014512:	inc    rax
   140014515:	inc    r8d
   140014518:	cmp    BYTE PTR [rax],cl
   14001451a:	jne    0x140014512
   14001451c:	mov    rcx,rbx
   14001451f:	call   0x140015aa8
   140014524:	mov    rax,rbx
   140014527:	add    rsp,0x20
   14001452b:	pop    rbx
   14001452c:	ret    
   14001452d:	int3   
   14001452e:	int3   
   14001452f:	int3   
   140014530:	rex push rbx
   140014532:	sub    rsp,0x20
   140014536:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14001453d:	mov    rbx,rcx
   140014540:	mov    BYTE PTR [rcx+0x8],dl
   140014543:	mov    ecx,0x1
   140014548:	cmp    edx,ecx
   14001454a:	jne    0x14001455f
   14001454c:	call   0x14001aa1c
   140014551:	mov    QWORD PTR [rbx],rax
   140014554:	test   rax,rax
   140014557:	jne    0x140014563
   140014559:	mov    BYTE PTR [rbx+0x8],0x3
   14001455d:	jmp    0x140014563
   14001455f:	and    QWORD PTR [rbx],0x0
   140014563:	mov    rax,rbx
   140014566:	add    rsp,0x20
   14001456a:	pop    rbx
   14001456b:	ret    
   14001456c:	rex push rbx
   14001456e:	sub    rsp,0x20
   140014572:	mov    rbx,rdx
   140014575:	cmp    r8d,0x9
   140014579:	ja     0x14001459d
   14001457b:	cmp    DWORD PTR [rcx],0xffffffff
   14001457e:	je     0x140014596
   140014580:	cmp    r8d,DWORD PTR [rcx]
   140014583:	jg     0x140014596
   140014585:	movsxd rax,r8d
   140014588:	mov    rcx,QWORD PTR [rcx+rax*8+0x8]
   14001458d:	movups xmm0,XMMWORD PTR [rcx]
   140014590:	movdqu XMMWORD PTR [rdx],xmm0
   140014594:	jmp    0x1400145aa
   140014596:	mov    edx,0x2
   14001459b:	jmp    0x1400145a2
   14001459d:	mov    edx,0x3
   1400145a2:	mov    rcx,rbx
   1400145a5:	call   0x1400140e4
   1400145aa:	mov    rax,rbx
   1400145ad:	add    rsp,0x20
   1400145b1:	pop    rbx
   1400145b2:	ret    
   1400145b3:	int3   
   1400145b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400145b9:	push   rbp
   1400145ba:	mov    rbp,rsp
   1400145bd:	sub    rsp,0x70
   1400145c1:	mov    ecx,DWORD PTR [rbp-0x48]
   1400145c4:	and    QWORD PTR [rbp-0x50],0x0
   1400145c9:	and    QWORD PTR [rbp-0x40],0x0
   1400145ce:	mov    eax,0xffff0000
   1400145d3:	and    DWORD PTR [rbp-0x38],eax
   1400145d6:	and    ecx,eax
   1400145d8:	mov    rax,QWORD PTR [rip+0x2a8e1]        # 0x14003eec0
   1400145df:	mov    DWORD PTR [rbp-0x48],ecx
   1400145e2:	test   rax,rax
   1400145e5:	je     0x1400146bc
   1400145eb:	cmp    BYTE PTR [rax],0x3f
   1400145ee:	jne    0x140014687
   1400145f4:	mov    dl,BYTE PTR [rax+0x1]
   1400145f7:	cmp    dl,0x40
   1400145fa:	jne    0x14001463a
   1400145fc:	add    QWORD PTR [rip+0x2a8b4],0x2        # 0x14003eeb8
   140014604:	lea    rcx,[rbp-0x20]
   140014608:	call   0x140016e40
   14001460d:	lea    rdx,[rip+0x1f698]        # 0x140033cac
   140014614:	lea    rcx,[rbp-0x10]
   140014618:	mov    rbx,rax
   14001461b:	call   0x14001409c
   140014620:	lea    rcx,[rbp-0x30]
   140014624:	mov    rdx,rbx
   140014627:	movups xmm0,XMMWORD PTR [rax]
   14001462a:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   14001462f:	call   0x140014910
   140014634:	movaps xmm1,XMMWORD PTR [rbp-0x30]
   140014638:	jmp    0x140014693
   14001463a:	cmp    dl,0x24
   14001463d:	jne    0x140014699
   14001463f:	lea    rcx,[rbp-0x10]
   140014643:	xor    edx,edx
   140014645:	call   0x140019c20
   14001464a:	movups xmm1,XMMWORD PTR [rax]
   14001464d:	movdqa xmm0,xmm1
   140014651:	psrldq xmm0,0x8
   140014656:	movd   eax,xmm0
   14001465a:	mov    BYTE PTR [rbp-0x48],al
   14001465d:	cmp    al,0x2
   14001465f:	je     0x140014679
   140014661:	test   DWORD PTR [rip+0x2a869],0x1000        # 0x14003eed4
   14001466b:	jne    0x1400146c0
   14001466d:	mov    rax,QWORD PTR [rip+0x2a844]        # 0x14003eeb8
   140014674:	cmp    BYTE PTR [rax],0x0
   140014677:	je     0x1400146c0
   140014679:	mov    rax,QWORD PTR [rip+0x2a840]        # 0x14003eec0
   140014680:	mov    QWORD PTR [rip+0x2a831],rax        # 0x14003eeb8
   140014687:	lea    rcx,[rbp-0x10]
   14001468b:	call   0x140016e40
   140014690:	movups xmm1,XMMWORD PTR [rax]
   140014693:	movaps XMMWORD PTR [rbp-0x50],xmm1
   140014697:	jmp    0x1400146c0
   140014699:	cmp    dl,0x3f
   14001469c:	jne    0x140014687
   14001469e:	mov    rax,QWORD PTR [rip+0x2a81b]        # 0x14003eec0
   1400146a5:	cmp    BYTE PTR [rax+0x2],0x40
   1400146a9:	jne    0x140014687
   1400146ab:	and    ecx,0xffff0002
   1400146b1:	or     ecx,0x2
   1400146b4:	and    QWORD PTR [rbp-0x50],0x0
   1400146b9:	mov    DWORD PTR [rbp-0x48],ecx
   1400146bc:	movaps xmm1,XMMWORD PTR [rbp-0x50]
   1400146c0:	cmp    BYTE PTR [rbp-0x48],0x3
   1400146c4:	jne    0x1400146cd
   1400146c6:	xor    eax,eax
   1400146c8:	jmp    0x14001479a
   1400146cd:	cmp    BYTE PTR [rbp-0x48],0x2
   1400146d1:	je     0x1400146f2
   1400146d3:	test   DWORD PTR [rip+0x2a7f7],0x1000        # 0x14003eed4
   1400146dd:	jne    0x1400146eb
   1400146df:	mov    rax,QWORD PTR [rip+0x2a7d2]        # 0x14003eeb8
   1400146e6:	cmp    BYTE PTR [rax],0x0
   1400146e9:	jne    0x1400146f2
   1400146eb:	movdqa XMMWORD PTR [rbp-0x40],xmm1
   1400146f0:	jmp    0x140014702
   1400146f2:	mov    rdx,QWORD PTR [rip+0x2a7c7]        # 0x14003eec0
   1400146f9:	lea    rcx,[rbp-0x40]
   1400146fd:	call   0x1400144f0
   140014702:	mov    rax,QWORD PTR [rip+0x2a7bf]        # 0x14003eec8
   140014709:	test   rax,rax
   14001470c:	jne    0x140014741
   14001470e:	mov    rcx,QWORD PTR [rbp-0x40]
   140014712:	test   rcx,rcx
   140014715:	je     0x14001471c
   140014717:	mov    rax,QWORD PTR [rcx]
   14001471a:	call   QWORD PTR [rax]
   14001471c:	inc    eax
   14001471e:	movsxd rcx,eax
   140014721:	mov    DWORD PTR [rip+0x2a7a9],eax        # 0x14003eed0
   140014727:	add    rcx,0x7
   14001472b:	and    rcx,0xfffffffffffffff8
   14001472f:	call   QWORD PTR [rip+0x2a7ab]        # 0x14003eee0
   140014735:	mov    QWORD PTR [rip+0x2a78c],rax        # 0x14003eec8
   14001473c:	test   rax,rax
   14001473f:	je     0x14001479a
   140014741:	mov    r8d,DWORD PTR [rip+0x2a788]        # 0x14003eed0
   140014748:	lea    rcx,[rbp-0x40]
   14001474c:	mov    rdx,rax
   14001474f:	call   0x140019304
   140014754:	mov    rax,QWORD PTR [rip+0x2a76d]        # 0x14003eec8
   14001475b:	mov    dl,BYTE PTR [rax]
   14001475d:	mov    rcx,rax
   140014760:	test   dl,dl
   140014762:	je     0x14001478f
   140014764:	mov    r8b,0x20
   140014767:	cmp    dl,r8b
   14001476a:	jne    0x140014781
   14001476c:	inc    rax
   14001476f:	mov    BYTE PTR [rcx],r8b
   140014772:	inc    rcx
   140014775:	jmp    0x14001477a
   140014777:	inc    rax
   14001477a:	cmp    BYTE PTR [rax],r8b
   14001477d:	je     0x140014777
   14001477f:	jmp    0x140014789
   140014781:	mov    BYTE PTR [rcx],dl
   140014783:	inc    rcx
   140014786:	inc    rax
   140014789:	mov    dl,BYTE PTR [rax]
   14001478b:	test   dl,dl
   14001478d:	jne    0x140014767
   14001478f:	mov    al,BYTE PTR [rax]
   140014791:	mov    BYTE PTR [rcx],al
   140014793:	mov    rax,QWORD PTR [rip+0x2a72e]        # 0x14003eec8
   14001479a:	mov    rbx,QWORD PTR [rsp+0x80]
   1400147a2:	add    rsp,0x70
   1400147a6:	pop    rbp
   1400147a7:	ret    
   1400147a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400147ad:	push   rdi
   1400147ae:	sub    rsp,0x30
   1400147b2:	mov    rdi,rcx
   1400147b5:	lea    rcx,[rsp+0x20]
   1400147ba:	mov    rbx,r8
   1400147bd:	call   0x140013fdc
   1400147c2:	mov    rdx,rbx
   1400147c5:	mov    rcx,rdi
   1400147c8:	movups xmm0,XMMWORD PTR [rax]
   1400147cb:	movdqu XMMWORD PTR [rdi],xmm0
   1400147cf:	call   0x140014910
   1400147d4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400147d9:	mov    rax,rdi
   1400147dc:	add    rsp,0x30
   1400147e0:	pop    rdi
   1400147e1:	ret    
   1400147e2:	int3   
   1400147e3:	int3   
   1400147e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400147e9:	push   rdi
   1400147ea:	sub    rsp,0x30
   1400147ee:	mov    rdi,rcx
   1400147f1:	lea    rcx,[rsp+0x20]
   1400147f6:	mov    rbx,r8
   1400147f9:	call   0x14001409c
   1400147fe:	mov    rdx,rbx
   140014801:	mov    rcx,rdi
   140014804:	movups xmm0,XMMWORD PTR [rax]
   140014807:	movdqu XMMWORD PTR [rdi],xmm0
   14001480b:	call   0x140014910
   140014810:	mov    rbx,QWORD PTR [rsp+0x40]
   140014815:	mov    rax,rdi
   140014818:	add    rsp,0x30
   14001481c:	pop    rdi
   14001481d:	ret    
   14001481e:	int3   
   14001481f:	int3   
   140014820:	mov    QWORD PTR [rsp+0x8],rbx
   140014825:	push   rdi
   140014826:	sub    rsp,0x30
   14001482a:	mov    rdi,rcx
   14001482d:	lea    rcx,[rsp+0x20]
   140014832:	mov    rbx,r8
   140014835:	call   0x1400140e4
   14001483a:	mov    rdx,rbx
   14001483d:	mov    rcx,rdi
   140014840:	movups xmm0,XMMWORD PTR [rax]
   140014843:	movdqu XMMWORD PTR [rdi],xmm0
   140014847:	call   0x140014910
   14001484c:	mov    rbx,QWORD PTR [rsp+0x40]
   140014851:	mov    rax,rdi
   140014854:	add    rsp,0x30
   140014858:	pop    rdi
   140014859:	ret    
   14001485a:	int3   
   14001485b:	int3   
   14001485c:	rex push rbx
   14001485e:	sub    rsp,0x20
   140014862:	movups xmm0,XMMWORD PTR [rcx]
   140014865:	mov    rbx,rdx
   140014868:	mov    rcx,rbx
   14001486b:	movdqu XMMWORD PTR [rdx],xmm0
   14001486f:	mov    rdx,r8
   140014872:	call   0x140014910
   140014877:	mov    rax,rbx
   14001487a:	add    rsp,0x20
   14001487e:	pop    rbx
   14001487f:	ret    
   140014880:	rex push rbx
   140014882:	sub    rsp,0x20
   140014886:	movups xmm0,XMMWORD PTR [rcx]
   140014889:	mov    rbx,rdx
   14001488c:	mov    rcx,rbx
   14001488f:	movdqu XMMWORD PTR [rdx],xmm0
   140014893:	mov    dl,r8b
   140014896:	call   0x140014950
   14001489b:	mov    rax,rbx
   14001489e:	add    rsp,0x20
   1400148a2:	pop    rbx
   1400148a3:	ret    
   1400148a4:	rex push rbx
   1400148a6:	sub    rsp,0x20
   1400148aa:	movups xmm0,XMMWORD PTR [rcx]
   1400148ad:	mov    rbx,rdx
   1400148b0:	mov    rcx,rbx
   1400148b3:	movdqu XMMWORD PTR [rdx],xmm0
   1400148b7:	mov    rdx,r8
   1400148ba:	call   0x1400149d4
   1400148bf:	mov    rax,rbx
   1400148c2:	add    rsp,0x20
   1400148c6:	pop    rbx
   1400148c7:	ret    
   1400148c8:	rex push rbx
   1400148ca:	sub    rsp,0x20
   1400148ce:	movups xmm0,XMMWORD PTR [rcx]
   1400148d1:	mov    rbx,rdx
   1400148d4:	mov    rcx,rbx
   1400148d7:	movdqu XMMWORD PTR [rdx],xmm0
   1400148db:	mov    rdx,r8
   1400148de:	call   0x140014a6c
   1400148e3:	mov    rax,rbx
   1400148e6:	add    rsp,0x20
   1400148ea:	pop    rbx
   1400148eb:	ret    
   1400148ec:	rex push rbx
   1400148ee:	sub    rsp,0x20
   1400148f2:	movups xmm0,XMMWORD PTR [rcx]
   1400148f5:	mov    rbx,rdx
   1400148f8:	mov    rcx,rbx
   1400148fb:	movdqu XMMWORD PTR [rdx],xmm0
   1400148ff:	mov    edx,r8d
   140014902:	call   0x140014af8
   140014907:	mov    rax,rbx
   14001490a:	add    rsp,0x20
   14001490e:	pop    rbx
   14001490f:	ret    
   140014910:	rex push rbx
   140014912:	sub    rsp,0x20
   140014916:	cmp    BYTE PTR [rcx+0x8],0x1
   14001491a:	mov    rbx,rcx
   14001491d:	jg     0x140014947
   14001491f:	cmp    QWORD PTR [rdx],0x0
   140014923:	jne    0x140014930
   140014925:	movsx  edx,BYTE PTR [rdx+0x8]
   140014929:	call   0x140014af8
   14001492e:	jmp    0x140014947
   140014930:	cmp    QWORD PTR [rcx],0x0
   140014934:	jne    0x14001493f
   140014936:	movups xmm0,XMMWORD PTR [rdx]
   140014939:	movdqu XMMWORD PTR [rcx],xmm0
   14001493d:	jmp    0x140014947
   14001493f:	mov    rdx,QWORD PTR [rdx]
   140014942:	call   0x140014c28
   140014947:	mov    rax,rbx
   14001494a:	add    rsp,0x20
   14001494e:	pop    rbx
   14001494f:	ret    
   140014950:	mov    QWORD PTR [rsp+0x10],rbx
   140014955:	push   rdi
   140014956:	sub    rsp,0x20
   14001495a:	mov    r8d,0x1
   140014960:	mov    dil,dl
   140014963:	mov    rbx,rcx
   140014966:	cmp    BYTE PTR [rcx+0x8],r8b
   14001496a:	jg     0x1400149c6
   14001496c:	test   dl,dl
   14001496e:	je     0x1400149c6
   140014970:	cmp    QWORD PTR [rcx],0x0
   140014974:	jne    0x140014995
   140014976:	and    QWORD PTR [rcx],0x0
   14001497a:	mov    BYTE PTR [rsp+0x30],dl
   14001497e:	mov    BYTE PTR [rcx+0x8],0x0
   140014982:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140014989:	lea    rdx,[rsp+0x30]
   14001498e:	call   0x140015aa8
   140014993:	jmp    0x1400149c6
   140014995:	xor    r8d,r8d
   140014998:	lea    rcx,[rip+0x2a541]        # 0x14003eee0
   14001499f:	lea    edx,[r8+0x10]
   1400149a3:	call   0x140017e18
   1400149a8:	test   rax,rax
   1400149ab:	je     0x1400149bb
   1400149ad:	lea    rcx,[rip+0x1f6dc]        # 0x140034090
   1400149b4:	mov    BYTE PTR [rax+0x8],dil
   1400149b8:	mov    QWORD PTR [rax],rcx
   1400149bb:	mov    rdx,rax
   1400149be:	mov    rcx,rbx
   1400149c1:	call   0x140014c28
   1400149c6:	mov    rax,rbx
   1400149c9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400149ce:	add    rsp,0x20
   1400149d2:	pop    rdi
   1400149d3:	ret    
   1400149d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400149d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400149de:	push   rdi
   1400149df:	sub    rsp,0x20
   1400149e3:	cmp    BYTE PTR [rcx+0x8],0x1
   1400149e7:	mov    rdi,rdx
   1400149ea:	mov    rbx,rcx
   1400149ed:	jg     0x140014a56
   1400149ef:	xor    esi,esi
   1400149f1:	test   rdx,rdx
   1400149f4:	je     0x140014a56
   1400149f6:	cmp    QWORD PTR [rcx],rsi
   1400149f9:	jne    0x140014a02
   1400149fb:	call   0x140014468
   140014a00:	jmp    0x140014a56
   140014a02:	mov    al,BYTE PTR [rdx+0x8]
   140014a05:	cmp    al,0x1
   140014a07:	jbe    0x140014a13
   140014a09:	movsx  edx,al
   140014a0c:	call   0x140014af8
   140014a11:	jmp    0x140014a56
   140014a13:	xor    r8d,r8d
   140014a16:	lea    rcx,[rip+0x2a4c3]        # 0x14003eee0
   140014a1d:	lea    edx,[r8+0x10]
   140014a21:	call   0x140017e18
   140014a26:	test   rax,rax
   140014a29:	je     0x140014a48
   140014a2b:	lea    rcx,[rip+0x1f69e]        # 0x1400340d0
   140014a32:	mov    QWORD PTR [rax],rcx
   140014a35:	mov    cl,BYTE PTR [rdi+0x8]
   140014a38:	sub    cl,0x2
   140014a3b:	cmp    cl,0x1
   140014a3e:	cmovbe rdi,rsi
   140014a42:	mov    QWORD PTR [rax+0x8],rdi
   140014a46:	jmp    0x140014a4b
   140014a48:	mov    rax,rsi
   140014a4b:	mov    rdx,rax
   140014a4e:	mov    rcx,rbx
   140014a51:	call   0x140014c28
   140014a56:	mov    rsi,QWORD PTR [rsp+0x38]
   140014a5b:	mov    rax,rbx
   140014a5e:	mov    rbx,QWORD PTR [rsp+0x30]
   140014a63:	add    rsp,0x20
   140014a67:	pop    rdi
   140014a68:	ret    
   140014a69:	int3   
   140014a6a:	int3   
   140014a6b:	int3   
   140014a6c:	mov    QWORD PTR [rsp+0x8],rbx
   140014a71:	mov    QWORD PTR [rsp+0x10],rsi
   140014a76:	push   rdi
   140014a77:	sub    rsp,0x20
   140014a7b:	cmp    BYTE PTR [rcx+0x8],0x1
   140014a7f:	mov    rsi,rdx
   140014a82:	mov    rdi,rcx
   140014a85:	jg     0x140014ae3
   140014a87:	xor    ebx,ebx
   140014a89:	test   rdx,rdx
   140014a8c:	je     0x140014ae3
   140014a8e:	cmp    BYTE PTR [rdx],bl
   140014a90:	je     0x140014ae3
   140014a92:	cmp    QWORD PTR [rcx],rbx
   140014a95:	jne    0x140014a9e
   140014a97:	call   0x1400144f0
   140014a9c:	jmp    0x140014ae3
   140014a9e:	xor    r8d,r8d
   140014aa1:	lea    rcx,[rip+0x2a438]        # 0x14003eee0
   140014aa8:	lea    edx,[r8+0x18]
   140014aac:	call   0x140017e18
   140014ab1:	test   rax,rax
   140014ab4:	je     0x140014ad8
   140014ab6:	mov    rcx,rsi
   140014ab9:	mov    r8d,ebx
   140014abc:	cmp    BYTE PTR [rsi],bl
   140014abe:	je     0x140014aca
   140014ac0:	inc    rcx
   140014ac3:	inc    r8d
   140014ac6:	cmp    BYTE PTR [rcx],bl
   140014ac8:	jne    0x140014ac0
   140014aca:	mov    rdx,rsi
   140014acd:	mov    rcx,rax
   140014ad0:	call   0x14001438c
   140014ad5:	mov    rbx,rax
   140014ad8:	mov    rdx,rbx
   140014adb:	mov    rcx,rdi
   140014ade:	call   0x140014c28
   140014ae3:	mov    rbx,QWORD PTR [rsp+0x30]
   140014ae8:	mov    rsi,QWORD PTR [rsp+0x38]
   140014aed:	mov    rax,rdi
   140014af0:	add    rsp,0x20
   140014af4:	pop    rdi
   140014af5:	ret    
   140014af6:	int3   
   140014af7:	int3   
   140014af8:	rex push rbx
   140014afa:	sub    rsp,0x20
   140014afe:	cmp    BYTE PTR [rcx+0x8],0x1
   140014b02:	mov    rbx,rcx
   140014b05:	jg     0x140014b32
   140014b07:	cmp    QWORD PTR [rcx],0x0
   140014b0b:	je     0x140014b2d
   140014b0d:	lea    eax,[rdx-0x2]
   140014b10:	cmp    eax,0x1
   140014b13:	jbe    0x140014b2d
   140014b15:	test   edx,edx
   140014b17:	je     0x140014b32
   140014b19:	mov    ecx,edx
   140014b1b:	call   0x14001aa1c
   140014b20:	mov    rcx,rbx
   140014b23:	mov    rdx,rax
   140014b26:	call   0x140014c28
   140014b2b:	jmp    0x140014b32
   140014b2d:	call   0x140014530
   140014b32:	mov    rax,rbx
   140014b35:	add    rsp,0x20
   140014b39:	pop    rbx
   140014b3a:	ret    
   140014b3b:	int3   
   140014b3c:	mov    QWORD PTR [rsp+0x8],rbx
   140014b41:	push   rdi
   140014b42:	sub    rsp,0x20
   140014b46:	cmp    DWORD PTR [rcx],0x9
   140014b49:	mov    rdi,rdx
   140014b4c:	mov    rbx,rcx
   140014b4f:	je     0x140014b8c
   140014b51:	cmp    QWORD PTR [rdx],0x0
   140014b55:	je     0x140014b8c
   140014b57:	xor    r8d,r8d
   140014b5a:	lea    rcx,[rip+0x2a37f]        # 0x14003eee0
   140014b61:	lea    edx,[r8+0x10]
   140014b65:	call   0x140017e18
   140014b6a:	mov    rcx,rax
   140014b6d:	test   rax,rax
   140014b70:	je     0x140014b7b
   140014b72:	movups xmm0,XMMWORD PTR [rdi]
   140014b75:	movdqu XMMWORD PTR [rax],xmm0
   140014b79:	jmp    0x140014b7d
   140014b7b:	xor    ecx,ecx
   140014b7d:	test   rcx,rcx
   140014b80:	je     0x140014b8c
   140014b82:	inc    DWORD PTR [rbx]
   140014b84:	movsxd rax,DWORD PTR [rbx]
   140014b87:	mov    QWORD PTR [rbx+rax*8+0x8],rcx
   140014b8c:	mov    rax,rbx
   140014b8f:	mov    rbx,QWORD PTR [rsp+0x30]
   140014b94:	add    rsp,0x20
   140014b98:	pop    rdi
   140014b99:	ret    
   140014b9a:	int3   
   140014b9b:	int3   
   140014b9c:	cmp    BYTE PTR [rcx+0x8],0x3
   140014ba0:	je     0x140014bac
   140014ba2:	mov    al,BYTE PTR [rdx+0x8]
   140014ba5:	cmp    al,0x1
   140014ba7:	jle    0x140014bac
   140014ba9:	mov    BYTE PTR [rcx+0x8],al
   140014bac:	mov    rax,rcx
   140014baf:	ret    
   140014bb0:	xor    eax,eax
   140014bb2:	mov    QWORD PTR [rcx],rdx
   140014bb5:	mov    QWORD PTR [rcx+0x8],r8
   140014bb9:	mov    QWORD PTR [rcx+0x20],rax
   140014bbd:	mov    QWORD PTR [rcx+0x10],rax
   140014bc1:	mov    QWORD PTR [rcx+0x18],rax
   140014bc5:	ret    
   140014bc6:	int3   
   140014bc7:	int3   
   140014bc8:	rex push rbx
   140014bca:	sub    rsp,0x20
   140014bce:	cmp    QWORD PTR [rcx+0x8],0x0
   140014bd3:	mov    rbx,rcx
   140014bd6:	je     0x140014c00
   140014bd8:	mov    rax,QWORD PTR [rcx+0x10]
   140014bdc:	mov    QWORD PTR [rcx+0x18],rax
   140014be0:	jmp    0x140014bfb
   140014be2:	mov    rax,QWORD PTR [rbx+0x18]
   140014be6:	mov    rcx,QWORD PTR [rax]
   140014be9:	mov    QWORD PTR [rbx+0x10],rcx
   140014bed:	mov    rcx,rax
   140014bf0:	call   QWORD PTR [rbx+0x8]
   140014bf3:	mov    rax,QWORD PTR [rbx+0x10]
   140014bf7:	mov    QWORD PTR [rbx+0x18],rax
   140014bfb:	test   rax,rax
   140014bfe:	jne    0x140014be2
   140014c00:	add    rsp,0x20
   140014c04:	pop    rbx
   140014c05:	ret    
   140014c06:	int3   
   140014c07:	int3   
   140014c08:	mov    eax,DWORD PTR [rip+0x2a2c6]        # 0x14003eed4
   140014c0e:	not    eax
   140014c10:	test   al,0x1
   140014c12:	movsxd rax,ecx
   140014c15:	lea    rcx,[rip+0x1e734]        # 0x140033350
   140014c1c:	mov    rax,QWORD PTR [rcx+rax*8]
   140014c20:	jne    0x140014c26
   140014c22:	add    rax,0x2
   140014c26:	ret    
   140014c27:	int3   
   140014c28:	mov    QWORD PTR [rsp+0x8],rbx
   140014c2d:	push   rdi
   140014c2e:	sub    rsp,0x20
   140014c32:	mov    rdi,rdx
   140014c35:	mov    rbx,rcx
   140014c38:	test   rdx,rdx
   140014c3b:	je     0x140014c7c
   140014c3d:	xor    r8d,r8d
   140014c40:	lea    rcx,[rip+0x2a299]        # 0x14003eee0
   140014c47:	lea    edx,[r8+0x20]
   140014c4b:	call   0x140017e18
   140014c50:	test   rax,rax
   140014c53:	je     0x140014c6e
   140014c55:	mov    rdx,QWORD PTR [rbx]
   140014c58:	or     DWORD PTR [rax+0x18],0xffffffff
   140014c5c:	lea    rcx,[rip+0x1f4ad]        # 0x140034110
   140014c63:	mov    QWORD PTR [rax+0x8],rdx
   140014c67:	mov    QWORD PTR [rax],rcx
   140014c6a:	mov    QWORD PTR [rax+0x10],rdi
   140014c6e:	mov    QWORD PTR [rbx],rax
   140014c71:	test   rax,rax
   140014c74:	jne    0x140014c80
   140014c76:	mov    BYTE PTR [rbx+0x8],0x3
   140014c7a:	jmp    0x140014c80
   140014c7c:	mov    BYTE PTR [rcx+0x8],0x3
   140014c80:	mov    rbx,QWORD PTR [rsp+0x30]
   140014c85:	add    rsp,0x20
   140014c89:	pop    rdi
   140014c8a:	ret    
   140014c8b:	int3   
   140014c8c:	mov    rax,rsp
   140014c8f:	mov    QWORD PTR [rax+0x8],rbx
   140014c93:	push   rbp
   140014c94:	push   rsi
   140014c95:	push   rdi
   140014c96:	push   r12
   140014c98:	push   r13
   140014c9a:	push   r14
   140014c9c:	push   r15
   140014c9e:	lea    rbp,[rax-0x5f]
   140014ca2:	sub    rsp,0xf0
   140014ca9:	mov    ebx,DWORD PTR [rsp+0x48]
   140014cad:	and    QWORD PTR [rsp+0x40],0x0
   140014cb3:	movaps XMMWORD PTR [rax-0x48],xmm6
   140014cb7:	and    ebx,0xffff0000
   140014cbd:	movaps XMMWORD PTR [rax-0x58],xmm7
   140014cc1:	mov    r12,rdx
   140014cc4:	mov    DWORD PTR [rsp+0x48],ebx
   140014cc8:	mov    rdi,rcx
   140014ccb:	call   0x140019efc
   140014cd0:	cmp    QWORD PTR [r12],0x0
   140014cd5:	mov    esi,eax
   140014cd7:	je     0x140014ced
   140014cd9:	test   DWORD PTR [r12+0x8],0x200
   140014ce2:	je     0x140014ced
   140014ce4:	mov    DWORD PTR [rbp+0x7f],0x1
   140014ceb:	jmp    0x140014cf1
   140014ced:	and    DWORD PTR [rbp+0x7f],0x0
   140014cf1:	cmp    eax,0xffff
   140014cf6:	jne    0x140014d0a
   140014cf8:	mov    edx,0x2
   140014cfd:	mov    rcx,rdi
   140014d00:	call   0x1400140e4
   140014d05:	jmp    0x1400159e8
   140014d0a:	cmp    eax,0xfffe
   140014d0f:	jne    0x140014d37
   140014d11:	lea    rcx,[rsp+0x30]
   140014d16:	mov    edx,0x1
   140014d1b:	call   0x1400140e4
   140014d20:	mov    rdx,r12
   140014d23:	mov    rcx,rdi
   140014d26:	movups xmm0,XMMWORD PTR [rax]
   140014d29:	movdqu XMMWORD PTR [rdi],xmm0
   140014d2d:	call   0x140014910
   140014d32:	jmp    0x1400159e8
   140014d37:	cmp    eax,0xfffd
   140014d3c:	jne    0x140014d4c
   140014d3e:	movups xmm0,XMMWORD PTR [r12]
   140014d43:	movdqu XMMWORD PTR [rdi],xmm0
   140014d47:	jmp    0x1400159e8
   140014d4c:	mov    r15d,eax
   140014d4f:	mov    r9d,0x1000
   140014d55:	mov    r8d,0x1b00
   140014d5b:	and    r15d,0x8000
   140014d62:	je     0x140015587
   140014d68:	xor    r13d,r13d
   140014d6b:	mov    edx,eax
   140014d6d:	mov    r14d,esi
   140014d70:	and    edx,0x1800
   140014d76:	cmp    edx,0x800
   140014d7c:	mov    DWORD PTR [rbp+0x6f],edx
   140014d7f:	sete   r13b
   140014d83:	and    eax,0x400
   140014d88:	and    r14d,r9d
   140014d8b:	mov    DWORD PTR [rbp+0x77],eax
   140014d8e:	test   r13d,r13d
   140014d91:	mov    eax,r14d
   140014d94:	mov    ecx,DWORD PTR [rbp+0x77]
   140014d97:	mov    DWORD PTR [rbp-0x45],r13d
   140014d9b:	mov    DWORD PTR [rbp-0x49],r14d
   140014d9f:	cmovne eax,ecx
   140014da2:	test   eax,eax
   140014da4:	je     0x140014db4
   140014da6:	mov    eax,esi
   140014da8:	and    eax,r8d
   140014dab:	cmp    eax,r9d
   140014dae:	je     0x140015587
   140014db4:	test   r13d,r13d
   140014db7:	mov    eax,r14d
   140014dba:	cmovne eax,ecx
   140014dbd:	test   eax,eax
   140014dbf:	je     0x140014ddc
   140014dc1:	mov    eax,esi
   140014dc3:	and    eax,r8d
   140014dc6:	cmp    eax,0x1100
   140014dcb:	je     0x140015587
   140014dd1:	cmp    eax,0x1200
   140014dd6:	je     0x140015587
   140014ddc:	bt     esi,0xe
   140014de0:	jae    0x140014e41
   140014de2:	mov    ecx,DWORD PTR [rip+0x2a0ec]        # 0x14003eed4
   140014de8:	mov    eax,ecx
   140014dea:	shr    eax,1
   140014dec:	not    eax
   140014dee:	test   al,0x1
   140014df0:	je     0x140014ec0
   140014df6:	shr    ecx,0x3
   140014df9:	not    ecx
   140014dfb:	test   cl,0x1
   140014dfe:	je     0x140014ec0
   140014e04:	lea    rcx,[rsp+0x30]
   140014e09:	call   0x140016034
   140014e0e:	lea    rcx,[rbp-0x59]
   140014e12:	mov    dl,0x20
   140014e14:	mov    rbx,rax
   140014e17:	call   0x140013fdc
   140014e1c:	lea    rcx,[rbp-0x79]
   140014e20:	mov    rdx,rbx
   140014e23:	movups xmm0,XMMWORD PTR [rax]
   140014e26:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140014e2b:	call   0x140014910
   140014e30:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140014e34:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140014e3a:	mov    ebx,DWORD PTR [rsp+0x48]
   140014e3e:	mov    edx,DWORD PTR [rbp+0x6f]
   140014e41:	test   r13d,r13d
   140014e44:	cmovne r14d,DWORD PTR [rbp+0x77]
   140014e49:	test   r14d,r14d
   140014e4c:	je     0x14001500d
   140014e52:	cmp    edx,0x1800
   140014e58:	jne    0x14001500d
   140014e5e:	lea    rcx,[rsp+0x30]
   140014e63:	xor    edx,edx
   140014e65:	call   0x1400170b4
   140014e6a:	lea    rcx,[rbp-0x79]
   140014e6e:	mov    dl,0x7b
   140014e70:	movups xmm0,XMMWORD PTR [r12]
   140014e75:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140014e7a:	call   0x140014950
   140014e7f:	lea    rdx,[rsp+0x30]
   140014e84:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140014e88:	lea    rcx,[rbp-0x79]
   140014e8c:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140014e91:	call   0x140014910
   140014e96:	lea    rdx,[rbp-0x79]
   140014e9a:	lea    rcx,[rsp+0x40]
   140014e9f:	call   0x140014910
   140014ea4:	mov    rax,QWORD PTR [rip+0x2a00d]        # 0x14003eeb8
   140014eab:	lea    rcx,[rbp-0x39]
   140014eaf:	cmp    BYTE PTR [rax],0x0
   140014eb2:	je     0x140014f0f
   140014eb4:	cmp    BYTE PTR [rax],0x41
   140014eb7:	je     0x140014ef7
   140014eb9:	mov    edx,0x2
   140014ebe:	jmp    0x140014f14
   140014ec0:	lea    rcx,[rsp+0x30]
   140014ec5:	call   0x140016034
   140014eca:	cmp    BYTE PTR [rsp+0x48],0x3
   140014ecf:	je     0x140014e3e
   140014ed5:	cmp    BYTE PTR [rax+0x8],0x1
   140014ed9:	mov    edx,DWORD PTR [rbp+0x6f]
   140014edc:	jle    0x140014e41
   140014ee2:	movzx  eax,BYTE PTR [rax+0x8]
   140014ee6:	and    ebx,0xffffff00
   140014eec:	or     ebx,eax
   140014eee:	mov    DWORD PTR [rsp+0x48],ebx
   140014ef2:	jmp    0x140014e41
   140014ef7:	inc    rax
   140014efa:	lea    rdx,[rip+0x1f153]        # 0x140034054
   140014f01:	mov    QWORD PTR [rip+0x29fb0],rax        # 0x14003eeb8
   140014f08:	call   0x14001409c
   140014f0d:	jmp    0x140014f19
   140014f0f:	mov    edx,0x1
   140014f14:	call   0x1400140e4
   140014f19:	mov    ebx,0x1000
   140014f1e:	test   DWORD PTR [rip+0x29fb0],ebx        # 0x14003eed4
   140014f24:	jne    0x140014f6e
   140014f26:	lea    rcx,[rsp+0x30]
   140014f2b:	mov    dl,0x2c
   140014f2d:	call   0x140013fdc
   140014f32:	lea    rdx,[rbp-0x39]
   140014f36:	lea    rcx,[rbp-0x79]
   140014f3a:	movups xmm0,XMMWORD PTR [rax]
   140014f3d:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140014f42:	call   0x140014910
   140014f47:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140014f4b:	lea    rdx,[rip+0x1edfe]        # 0x140033d50
   140014f52:	lea    rcx,[rbp-0x79]
   140014f56:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140014f5b:	call   0x140014a6c
   140014f60:	lea    rdx,[rbp-0x79]
   140014f64:	lea    rcx,[rsp+0x40]
   140014f69:	call   0x140014910
   140014f6e:	lea    rdx,[rip+0x1eddf]        # 0x140033d54
   140014f75:	lea    rcx,[rsp+0x40]
   140014f7a:	call   0x140014a6c
   140014f7f:	lea    rcx,[rsp+0x30]
   140014f84:	call   0x140016520
   140014f89:	mov    ecx,DWORD PTR [rip+0x29f45]        # 0x14003eed4
   140014f8f:	mov    eax,ecx
   140014f91:	shr    eax,1
   140014f93:	not    eax
   140014f95:	test   al,0x1
   140014f97:	je     0x140015579
   140014f9d:	mov    eax,ecx
   140014f9f:	shr    eax,0x4
   140014fa2:	not    eax
   140014fa4:	test   al,0x1
   140014fa6:	je     0x140015579
   140014fac:	test   ebx,ecx
   140014fae:	jne    0x140015579
   140014fb4:	lea    rcx,[rbp-0x59]
   140014fb8:	mov    dl,0x20
   140014fba:	call   0x140013fdc
   140014fbf:	lea    rdx,[rsp+0x30]
   140014fc4:	lea    rcx,[rbp-0x79]
   140014fc8:	movups xmm0,XMMWORD PTR [rax]
   140014fcb:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140014fd0:	call   0x140014910
   140014fd5:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140014fd9:	lea    rcx,[rbp-0x79]
   140014fdd:	mov    dl,0x20
   140014fdf:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140014fe4:	call   0x140014950
   140014fe9:	lea    rdx,[rsp+0x40]
   140014fee:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140014ff2:	lea    rcx,[rbp-0x79]
   140014ff6:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140014ffb:	call   0x140014910
   140015000:	movaps xmm6,XMMWORD PTR [rbp-0x79]
   140015004:	mov    r12d,DWORD PTR [rbp+0x6f]
   140015008:	jmp    0x1400157f2
   14001500d:	mov    r14d,DWORD PTR [rbp-0x21]
   140015011:	and    QWORD PTR [rbp-0x9],0x0
   140015016:	and    QWORD PTR [rbp-0x39],0x0
   14001501b:	and    QWORD PTR [rbp-0x19],0x0
   140015020:	and    QWORD PTR [rbp-0x59],0x0
   140015025:	and    QWORD PTR [rbp-0x29],0x0
   14001502a:	mov    eax,DWORD PTR [rbp-0x49]
   14001502d:	mov    edx,0xffff0000
   140015032:	and    DWORD PTR [rbp-0x1],edx
   140015035:	and    DWORD PTR [rbp-0x31],edx
   140015038:	and    DWORD PTR [rbp-0x11],edx
   14001503b:	and    DWORD PTR [rbp-0x51],edx
   14001503e:	and    r14d,edx
   140015041:	test   r13d,r13d
   140015044:	cmovne eax,DWORD PTR [rbp+0x77]
   140015048:	mov    DWORD PTR [rbp-0x21],r14d
   14001504c:	test   eax,eax
   14001504e:	je     0x1400150d6
   140015054:	test   r13d,r13d
   140015057:	je     0x1400150be
   140015059:	mov    eax,esi
   14001505b:	and    eax,0x700
   140015060:	cmp    eax,0x600
   140015065:	jne    0x140015095
   140015067:	lea    rcx,[rsp+0x30]
   14001506c:	mov    dl,0x1
   14001506e:	call   0x1400170b4
   140015073:	lea    rcx,[rsp+0x30]
   140015078:	mov    dl,0x1
   14001507a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001507f:	movdqa XMMWORD PTR [rbp-0x9],xmm0
   140015084:	call   0x1400170b4
   140015089:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001508e:	movdqa XMMWORD PTR [rbp-0x39],xmm0
   140015093:	jmp    0x1400150a8
   140015095:	test   r13d,r13d
   140015098:	je     0x1400150be
   14001509a:	mov    eax,esi
   14001509c:	and    eax,0x700
   1400150a1:	cmp    eax,0x500
   1400150a6:	jne    0x1400150be
   1400150a8:	lea    rcx,[rsp+0x30]
   1400150ad:	mov    dl,0x1
   1400150af:	call   0x1400170b4
   1400150b4:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400150b9:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   1400150be:	lea    rcx,[rsp+0x30]
   1400150c3:	mov    dl,0x1
   1400150c5:	call   0x1400170b4
   1400150ca:	mov    edx,0xffff0000
   1400150cf:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   1400150d4:	jmp    0x1400150da
   1400150d6:	movaps xmm7,XMMWORD PTR [rbp-0x59]
   1400150da:	test   r13d,r13d
   1400150dd:	je     0x140015168
   1400150e3:	mov    eax,esi
   1400150e5:	and    eax,0x700
   1400150ea:	cmp    eax,0x200
   1400150ef:	je     0x140015168
   1400150f1:	mov    eax,DWORD PTR [rip+0x29ddd]        # 0x14003eed4
   1400150f7:	and    QWORD PTR [rbp-0x59],0x0
   1400150fc:	and    DWORD PTR [rbp-0x51],edx
   1400150ff:	and    QWORD PTR [rbp-0x79],0x0
   140015104:	and    DWORD PTR [rbp-0x71],edx
   140015107:	and    eax,0x60
   14001510a:	mov    DWORD PTR [rsp+0x20],0x1
   140015112:	lea    r8,[rip+0x1a96b]        # 0x14002fa84
   140015119:	lea    rcx,[rsp+0x30]
   14001511e:	cmp    al,0x60
   140015120:	je     0x14001513b
   140015122:	lea    r9,[rbp-0x59]
   140015126:	lea    rdx,[rbp-0x79]
   14001512a:	call   0x140016620
   14001512f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140015134:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140015139:	jmp    0x140015168
   14001513b:	lea    r9,[rbp-0x79]
   14001513f:	lea    rdx,[rbp-0x59]
   140015143:	call   0x140016620
   140015148:	cmp    BYTE PTR [rbp-0x21],0x3
   14001514c:	je     0x140015168
   14001514e:	cmp    BYTE PTR [rsp+0x38],0x1
   140015153:	jle    0x140015168
   140015155:	movzx  eax,BYTE PTR [rsp+0x38]
   14001515a:	and    r14d,0xffffff00
   140015161:	or     r14d,eax
   140015164:	mov    DWORD PTR [rbp-0x21],r14d
   140015168:	mov    ecx,DWORD PTR [rip+0x29d66]        # 0x14003eed4
   14001516e:	mov    eax,ecx
   140015170:	shr    eax,1
   140015172:	not    eax
   140015174:	test   al,0x1
   140015176:	je     0x1400151b0
   140015178:	shr    ecx,0x4
   14001517b:	not    ecx
   14001517d:	test   cl,0x1
   140015180:	je     0x1400151b0
   140015182:	lea    rcx,[rbp-0x79]
   140015186:	call   0x140016520
   14001518b:	lea    rdx,[rsp+0x40]
   140015190:	lea    rcx,[rsp+0x30]
   140015195:	movups xmm0,XMMWORD PTR [rax]
   140015198:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001519e:	call   0x140014910
   1400151a3:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400151a8:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400151ae:	jmp    0x1400151d7
   1400151b0:	lea    rcx,[rsp+0x30]
   1400151b5:	call   0x140016520
   1400151ba:	cmp    BYTE PTR [rsp+0x48],0x3
   1400151bf:	je     0x1400151d7
   1400151c1:	cmp    BYTE PTR [rax+0x8],0x1
   1400151c5:	jle    0x1400151d7
   1400151c7:	movzx  eax,BYTE PTR [rax+0x8]
   1400151cb:	and    ebx,0xffffff00
   1400151d1:	or     ebx,eax
   1400151d3:	mov    DWORD PTR [rsp+0x48],ebx
   1400151d7:	xor    ebx,ebx
   1400151d9:	cmp    QWORD PTR [r12],rbx
   1400151dd:	je     0x14001522f
   1400151df:	cmp    QWORD PTR [rsp+0x40],rbx
   1400151e4:	je     0x140015224
   1400151e6:	test   DWORD PTR [rip+0x29ce4],0x1000        # 0x14003eed4
   1400151f0:	jne    0x140015224
   1400151f2:	lea    rcx,[rbp-0x79]
   1400151f6:	mov    dl,0x20
   1400151f8:	call   0x140013fdc
   1400151fd:	lea    rcx,[rsp+0x30]
   140015202:	mov    rdx,r12
   140015205:	movups xmm0,XMMWORD PTR [rax]
   140015208:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001520e:	call   0x140014910
   140015213:	lea    rdx,[rsp+0x30]
   140015218:	lea    rcx,[rsp+0x40]
   14001521d:	call   0x140014910
   140015222:	jmp    0x14001522f
   140015224:	movups xmm0,XMMWORD PTR [r12]
   140015229:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14001522f:	and    DWORD PTR [rbp-0x71],0xffff0000
   140015236:	mov    r12,rbx
   140015239:	mov    QWORD PTR [rbp-0x79],rbx
   14001523d:	cmp    DWORD PTR [rbp+0x7f],ebx
   140015240:	je     0x1400152a1
   140015242:	lea    rcx,[rbp-0x59]
   140015246:	xor    edx,edx
   140015248:	call   0x140018bec
   14001524d:	lea    rdx,[rip+0x1eb04]        # 0x140033d58
   140015254:	lea    rcx,[rbp-0x69]
   140015258:	mov    rbx,rax
   14001525b:	call   0x14001409c
   140015260:	lea    rcx,[rsp+0x30]
   140015265:	mov    rdx,rbx
   140015268:	movups xmm0,XMMWORD PTR [rax]
   14001526b:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140015271:	call   0x140014910
   140015276:	lea    rdx,[rsp+0x30]
   14001527b:	lea    rcx,[rsp+0x40]
   140015280:	call   0x140014910
   140015285:	test   DWORD PTR [rip+0x29c45],0x1000        # 0x14003eed4
   14001528f:	je     0x14001529b
   140015291:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140015296:	jmp    0x140014d43
   14001529b:	movaps xmm6,XMMWORD PTR [rbp-0x79]
   14001529f:	jmp    0x1400152dd
   1400152a1:	xor    r8d,r8d
   1400152a4:	lea    rcx,[rip+0x29c35]        # 0x14003eee0
   1400152ab:	lea    edx,[r8+0x10]
   1400152af:	call   0x140017e18
   1400152b4:	mov    r12,rax
   1400152b7:	test   rax,rax
   1400152ba:	je     0x1400152cb
   1400152bc:	mov    BYTE PTR [rax+0x8],bl
   1400152bf:	and    DWORD PTR [rax+0x8],0xffff00ff
   1400152c6:	mov    QWORD PTR [rax],rbx
   1400152c9:	jmp    0x1400152ce
   1400152cb:	mov    r12,rbx
   1400152ce:	lea    rcx,[rbp-0x69]
   1400152d2:	mov    rdx,r12
   1400152d5:	call   0x140018bec
   1400152da:	movups xmm6,XMMWORD PTR [rax]
   1400152dd:	mov    r14d,DWORD PTR [rbp-0x49]
   1400152e1:	test   r13d,r13d
   1400152e4:	cmovne r14d,DWORD PTR [rbp+0x77]
   1400152e9:	test   r14d,r14d
   1400152ec:	je     0x14001541d
   1400152f2:	test   r13d,r13d
   1400152f5:	je     0x1400153e6
   1400152fb:	mov    eax,esi
   1400152fd:	and    eax,0x700
   140015302:	cmp    eax,0x600
   140015307:	jne    0x140015384
   140015309:	lea    rdx,[rip+0x1ea50]        # 0x140033d60
   140015310:	lea    rcx,[rbp-0x69]
   140015314:	call   0x14001409c
   140015319:	lea    rdx,[rbp-0x9]
   14001531d:	lea    rcx,[rsp+0x30]
   140015322:	movups xmm0,XMMWORD PTR [rax]
   140015325:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001532b:	call   0x140014910
   140015330:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140015335:	lea    rcx,[rsp+0x30]
   14001533a:	mov    dl,0x2c
   14001533c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140015342:	call   0x140014950
   140015347:	lea    rdx,[rbp-0x39]
   14001534b:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140015350:	lea    rcx,[rsp+0x30]
   140015355:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001535b:	call   0x140014910
   140015360:	lea    rcx,[rsp+0x30]
   140015365:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001536a:	mov    dl,0x2c
   14001536c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140015372:	call   0x140014950
   140015377:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001537c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140015382:	jmp    0x1400153b0
   140015384:	test   r13d,r13d
   140015387:	je     0x1400153e6
   140015389:	mov    eax,esi
   14001538b:	and    eax,0x700
   140015390:	cmp    eax,0x500
   140015395:	jne    0x1400153e6
   140015397:	lea    rdx,[rip+0x1e9d2]        # 0x140033d70
   14001539e:	lea    rcx,[rbp-0x69]
   1400153a2:	call   0x14001409c
   1400153a7:	movups xmm0,XMMWORD PTR [rax]
   1400153aa:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400153b0:	lea    rdx,[rbp-0x19]
   1400153b4:	lea    rcx,[rsp+0x30]
   1400153b9:	call   0x140014910
   1400153be:	lea    rcx,[rsp+0x30]
   1400153c3:	mov    dl,0x2c
   1400153c5:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400153ca:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400153d0:	call   0x140014950
   1400153d5:	lea    rdx,[rsp+0x30]
   1400153da:	lea    rcx,[rsp+0x40]
   1400153df:	call   0x140014910
   1400153e4:	jmp    0x1400153f7
   1400153e6:	lea    rdx,[rip+0x1e993]        # 0x140033d80
   1400153ed:	lea    rcx,[rsp+0x40]
   1400153f2:	call   0x140014a6c
   1400153f7:	lea    rdx,[rip+0x1e952]        # 0x140033d50
   1400153fe:	lea    rcx,[rsp+0x30]
   140015403:	movdqa XMMWORD PTR [rsp+0x30],xmm7
   140015409:	call   0x140014a6c
   14001540e:	lea    rdx,[rsp+0x30]
   140015413:	lea    rcx,[rsp+0x40]
   140015418:	call   0x140014910
   14001541d:	lea    rcx,[rbp-0x69]
   140015421:	call   0x140015cf4
   140015426:	lea    rcx,[rbp-0x79]
   14001542a:	mov    dl,0x28
   14001542c:	mov    rbx,rax
   14001542f:	call   0x140013fdc
   140015434:	lea    rcx,[rsp+0x30]
   140015439:	mov    rdx,rbx
   14001543c:	movups xmm0,XMMWORD PTR [rax]
   14001543f:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140015445:	call   0x140014910
   14001544a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001544f:	lea    rcx,[rsp+0x30]
   140015454:	mov    dl,0x29
   140015456:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001545c:	call   0x140014950
   140015461:	lea    rdx,[rsp+0x30]
   140015466:	lea    rcx,[rsp+0x40]
   14001546b:	call   0x140014910
   140015470:	test   r13d,r13d
   140015473:	je     0x140015491
   140015475:	mov    eax,esi
   140015477:	and    eax,0x700
   14001547c:	cmp    eax,0x200
   140015481:	je     0x140015491
   140015483:	lea    rdx,[rbp-0x29]
   140015487:	lea    rcx,[rsp+0x40]
   14001548c:	call   0x140014910
   140015491:	mov    eax,DWORD PTR [rip+0x29a3d]        # 0x14003eed4
   140015497:	lea    rcx,[rbp-0x69]
   14001549b:	shr    eax,0x13
   14001549e:	not    eax
   1400154a0:	test   al,0x1
   1400154a2:	je     0x1400154b8
   1400154a4:	call   0x140018ac4
   1400154a9:	lea    rcx,[rsp+0x40]
   1400154ae:	mov    rdx,rax
   1400154b1:	call   0x140014910
   1400154b6:	jmp    0x1400154de
   1400154b8:	call   0x140018ac4
   1400154bd:	cmp    BYTE PTR [rsp+0x48],0x3
   1400154c2:	je     0x1400154de
   1400154c4:	cmp    BYTE PTR [rax+0x8],0x1
   1400154c8:	jle    0x1400154de
   1400154ca:	mov    ecx,DWORD PTR [rsp+0x48]
   1400154ce:	movzx  eax,BYTE PTR [rax+0x8]
   1400154d2:	and    ecx,0xffffff00
   1400154d8:	or     ecx,eax
   1400154da:	mov    DWORD PTR [rsp+0x48],ecx
   1400154de:	mov    eax,DWORD PTR [rip+0x299f0]        # 0x14003eed4
   1400154e4:	lea    rcx,[rbp-0x69]
   1400154e8:	shr    eax,0x8
   1400154eb:	not    eax
   1400154ed:	test   al,0x1
   1400154ef:	je     0x140015505
   1400154f1:	call   0x140019e38
   1400154f6:	lea    rcx,[rsp+0x40]
   1400154fb:	mov    rdx,rax
   1400154fe:	call   0x140014910
   140015503:	jmp    0x14001552b
   140015505:	call   0x140019e38
   14001550a:	cmp    BYTE PTR [rsp+0x48],0x3
   14001550f:	je     0x14001552b
   140015511:	cmp    BYTE PTR [rax+0x8],0x1
   140015515:	jle    0x14001552b
   140015517:	mov    ecx,DWORD PTR [rsp+0x48]
   14001551b:	movzx  eax,BYTE PTR [rax+0x8]
   14001551f:	and    ecx,0xffffff00
   140015525:	or     ecx,eax
   140015527:	mov    DWORD PTR [rsp+0x48],ecx
   14001552b:	lea    rcx,[rbp-0x69]
   14001552f:	call   0x140017210
   140015534:	cmp    BYTE PTR [rsp+0x48],0x3
   140015539:	je     0x140015555
   14001553b:	cmp    BYTE PTR [rax+0x8],0x1
   14001553f:	jle    0x140015555
   140015541:	mov    ecx,DWORD PTR [rsp+0x48]
   140015545:	movzx  eax,BYTE PTR [rax+0x8]
   140015549:	and    ecx,0xffffff00
   14001554f:	or     ecx,eax
   140015551:	mov    DWORD PTR [rsp+0x48],ecx
   140015555:	mov    eax,DWORD PTR [rip+0x29979]        # 0x14003eed4
   14001555b:	shr    eax,0x2
   14001555e:	not    eax
   140015560:	test   al,0x1
   140015562:	je     0x140015579
   140015564:	test   r12,r12
   140015567:	je     0x140015579
   140015569:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001556e:	movdqu XMMWORD PTR [r12],xmm0
   140015574:	jmp    0x140015004
   140015579:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14001557e:	mov    r12d,DWORD PTR [rbp+0x6f]
   140015582:	jmp    0x1400157f7
   140015587:	lea    rcx,[rsp+0x40]
   14001558c:	mov    rdx,r12
   14001558f:	call   0x140014910
   140015594:	mov    r8d,0x7c00
   14001559a:	test   r15d,r15d
   14001559d:	jne    0x1400155ce
   14001559f:	mov    eax,esi
   1400155a1:	and    eax,r8d
   1400155a4:	cmp    eax,0x6800
   1400155a9:	jne    0x1400155bd
   1400155ab:	lea    rdx,[rsp+0x40]
   1400155b0:	mov    rcx,rdi
   1400155b3:	call   0x14001a49c
   1400155b8:	jmp    0x1400159e8
   1400155bd:	test   r15d,r15d
   1400155c0:	jne    0x1400155ce
   1400155c2:	mov    eax,esi
   1400155c4:	and    eax,r8d
   1400155c7:	cmp    eax,0x7000
   1400155cc:	je     0x1400155ab
   1400155ce:	mov    ecx,0x6000
   1400155d3:	test   r15d,r15d
   1400155d6:	jne    0x1400156a1
   1400155dc:	mov    eax,esi
   1400155de:	and    eax,r8d
   1400155e1:	cmp    eax,ecx
   1400155e3:	jne    0x14001563d
   1400155e5:	lea    rcx,[rbp-0x79]
   1400155e9:	xor    edx,edx
   1400155eb:	call   0x1400170b4
   1400155f0:	lea    rcx,[rsp+0x30]
   1400155f5:	mov    dl,0x7b
   1400155f7:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400155fc:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140015602:	call   0x140014950
   140015607:	lea    rdx,[rbp-0x79]
   14001560b:	lea    rcx,[rsp+0x30]
   140015610:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140015615:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001561b:	call   0x140014910
   140015620:	lea    rdx,[rip+0x1e72d]        # 0x140033d54
   140015627:	mov    rcx,rdi
   14001562a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001562f:	movdqu XMMWORD PTR [rdi],xmm0
   140015633:	call   0x140014a6c
   140015638:	jmp    0x1400159e8
   14001563d:	test   r15d,r15d
   140015640:	jne    0x1400156a1
   140015642:	mov    eax,esi
   140015644:	and    eax,r8d
   140015647:	cmp    eax,r8d
   14001564a:	jne    0x1400156a1
   14001564c:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140015651:	lea    rdx,[rip+0x1ea04]        # 0x14003405c
   140015658:	mov    rcx,rdi
   14001565b:	movdqu XMMWORD PTR [rdi],xmm0
   14001565f:	call   0x140014a6c
   140015664:	lea    rcx,[rbp-0x69]
   140015668:	call   0x140018c20
   14001566d:	mov    rcx,rdi
   140015670:	mov    rdx,rax
   140015673:	call   0x140014910
   140015678:	mov    dl,0x7d
   14001567a:	mov    rcx,rdi
   14001567d:	call   0x140014950
   140015682:	mov    rax,QWORD PTR [rip+0x2982f]        # 0x14003eeb8
   140015689:	cmp    BYTE PTR [rax],0x40
   14001568c:	jne    0x1400159e8
   140015692:	inc    rax
   140015695:	mov    QWORD PTR [rip+0x2981c],rax        # 0x14003eeb8
   14001569c:	jmp    0x1400159e8
   1400156a1:	xor    r13d,r13d
   1400156a4:	mov    r12d,esi
   1400156a7:	mov    eax,esi
   1400156a9:	and    r12d,0x1800
   1400156b0:	mov    r14d,esi
   1400156b3:	mov    r9d,0x1000
   1400156b9:	cmp    r12d,0x800
   1400156c0:	mov    ebx,0x1b00
   1400156c5:	sete   r13b
   1400156c9:	test   ecx,esi
   1400156cb:	mov    ecx,0x0
   1400156d0:	sete   cl
   1400156d3:	test   r15d,r15d
   1400156d6:	cmovne ecx,r13d
   1400156da:	and    eax,0x400
   1400156df:	and    r14d,r9d
   1400156e2:	test   ecx,ecx
   1400156e4:	mov    DWORD PTR [rbp-0x45],ecx
   1400156e7:	cmovne r14d,eax
   1400156eb:	test   r14d,r14d
   1400156ee:	je     0x140015768
   1400156f0:	xor    ecx,ecx
   1400156f2:	mov    eax,esi
   1400156f4:	mov    edx,r15d
   1400156f7:	and    eax,ebx
   1400156f9:	cmp    eax,r9d
   1400156fc:	sete   cl
   1400156ff:	neg    edx
   140015701:	sbb    eax,eax
   140015703:	test   ecx,eax
   140015705:	je     0x140015710
   140015707:	lea    rdx,[rip+0x1e682]        # 0x140033d90
   14001570e:	jmp    0x14001575c
   140015710:	test   r14d,r14d
   140015713:	je     0x140015768
   140015715:	xor    ecx,ecx
   140015717:	mov    eax,esi
   140015719:	mov    edx,r15d
   14001571c:	and    eax,ebx
   14001571e:	cmp    eax,0x1100
   140015723:	sete   cl
   140015726:	neg    edx
   140015728:	sbb    eax,eax
   14001572a:	test   ecx,eax
   14001572c:	je     0x140015737
   14001572e:	lea    rdx,[rip+0x1e683]        # 0x140033db8
   140015735:	jmp    0x14001575c
   140015737:	test   r14d,r14d
   14001573a:	je     0x140015768
   14001573c:	xor    ecx,ecx
   14001573e:	mov    eax,esi
   140015740:	mov    edx,r15d
   140015743:	and    eax,ebx
   140015745:	cmp    eax,0x1200
   14001574a:	sete   cl
   14001574d:	neg    edx
   14001574f:	sbb    eax,eax
   140015751:	test   ecx,eax
   140015753:	je     0x140015768
   140015755:	lea    rdx,[rip+0x1e694]        # 0x140033df0
   14001575c:	lea    rcx,[rsp+0x40]
   140015761:	call   0x140014a6c
   140015766:	jmp    0x14001577d
   140015768:	test   r15d,r15d
   14001576b:	jne    0x14001577d
   14001576d:	mov    eax,esi
   14001576f:	and    eax,r8d
   140015772:	cmp    eax,0x7800
   140015777:	je     0x140015291
   14001577d:	test   r14d,r14d
   140015780:	je     0x1400157e1
   140015782:	xor    ecx,ecx
   140015784:	mov    edx,esi
   140015786:	mov    eax,r15d
   140015789:	and    edx,ebx
   14001578b:	cmp    edx,0x1100
   140015791:	sete   cl
   140015794:	neg    eax
   140015796:	sbb    eax,eax
   140015798:	test   ecx,eax
   14001579a:	jne    0x1400157b2
   14001579c:	xor    ecx,ecx
   14001579e:	cmp    edx,0x1200
   1400157a4:	mov    eax,r15d
   1400157a7:	sete   cl
   1400157aa:	neg    eax
   1400157ac:	sbb    eax,eax
   1400157ae:	test   ecx,eax
   1400157b0:	je     0x1400157e1
   1400157b2:	lea    rdx,[rip+0x1e59f]        # 0x140033d58
   1400157b9:	lea    rcx,[rbp-0x69]
   1400157bd:	call   0x14001409c
   1400157c2:	lea    rdx,[rsp+0x40]
   1400157c7:	lea    rcx,[rsp+0x30]
   1400157cc:	movups xmm0,XMMWORD PTR [rax]
   1400157cf:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400157d5:	call   0x140014910
   1400157da:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400157df:	jmp    0x1400157f2
   1400157e1:	lea    rdx,[rsp+0x40]
   1400157e6:	lea    rcx,[rbp-0x69]
   1400157ea:	call   0x14001773c
   1400157ef:	movups xmm6,XMMWORD PTR [rax]
   1400157f2:	movaps XMMWORD PTR [rsp+0x40],xmm6
   1400157f7:	cmp    DWORD PTR [rbp-0x45],0x0
   1400157fb:	je     0x14001596e
   140015801:	mov    eax,DWORD PTR [rip+0x296cd]        # 0x14003eed4
   140015807:	shr    eax,0x9
   14001580a:	not    eax
   14001580c:	test   al,0x1
   14001580e:	je     0x1400158c1
   140015814:	xor    ecx,ecx
   140015816:	mov    ebx,esi
   140015818:	mov    eax,0x1
   14001581d:	and    ebx,0x700
   140015823:	cmp    ebx,0x200
   140015829:	sete   cl
   14001582c:	test   r15d,r15d
   14001582f:	cmovne eax,ecx
   140015832:	test   eax,eax
   140015834:	je     0x140015868
   140015836:	lea    rdx,[rip+0x1e5e3]        # 0x140033e20
   14001583d:	lea    rcx,[rbp-0x69]
   140015841:	call   0x14001409c
   140015846:	lea    rdx,[rsp+0x40]
   14001584b:	lea    rcx,[rsp+0x30]
   140015850:	movups xmm0,XMMWORD PTR [rax]
   140015853:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140015859:	call   0x140014910
   14001585e:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140015863:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140015868:	test   r15d,r15d
   14001586b:	je     0x140015875
   14001586d:	cmp    ebx,0x100
   140015873:	je     0x14001588f
   140015875:	test   r14d,r14d
   140015878:	je     0x1400158c1
   14001587a:	lea    eax,[rbx-0x400]
   140015880:	test   eax,0xfffffcff
   140015885:	jne    0x1400158c1
   140015887:	cmp    ebx,0x700
   14001588d:	je     0x1400158c1
   14001588f:	lea    rdx,[rip+0x1e592]        # 0x140033e28
   140015896:	lea    rcx,[rbp-0x69]
   14001589a:	call   0x14001409c
   14001589f:	lea    rdx,[rsp+0x40]
   1400158a4:	lea    rcx,[rsp+0x30]
   1400158a9:	movups xmm0,XMMWORD PTR [rax]
   1400158ac:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400158b2:	call   0x140014910
   1400158b7:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400158bc:	movaps XMMWORD PTR [rsp+0x40],xmm6
   1400158c1:	mov    eax,DWORD PTR [rip+0x2960d]        # 0x14003eed4
   1400158c7:	shr    eax,0x7
   1400158ca:	not    eax
   1400158cc:	test   al,0x1
   1400158ce:	je     0x14001596e
   1400158d4:	xor    eax,eax
   1400158d6:	mov    edx,esi
   1400158d8:	and    edx,0xc0
   1400158de:	cmp    edx,0x40
   1400158e1:	sete   al
   1400158e4:	test   r15d,r15d
   1400158e7:	cmovne r13d,eax
   1400158eb:	test   r13d,r13d
   1400158ee:	je     0x1400158f9
   1400158f0:	lea    rdx,[rip+0x1e541]        # 0x140033e38
   1400158f7:	jmp    0x140015943
   1400158f9:	xor    ecx,ecx
   1400158fb:	cmp    edx,0x80
   140015901:	sete   cl
   140015904:	xor    eax,eax
   140015906:	cmp    r12d,0x1000
   14001590d:	sete   al
   140015910:	test   r15d,r15d
   140015913:	cmovne eax,ecx
   140015916:	test   eax,eax
   140015918:	je     0x140015923
   14001591a:	lea    rdx,[rip+0x1e527]        # 0x140033e48
   140015921:	jmp    0x140015943
   140015923:	xor    ecx,ecx
   140015925:	test   edx,edx
   140015927:	sete   cl
   14001592a:	xor    eax,eax
   14001592c:	test   r12d,r12d
   14001592f:	sete   al
   140015932:	test   r15d,r15d
   140015935:	cmovne eax,ecx
   140015938:	test   eax,eax
   14001593a:	je     0x14001596e
   14001593c:	lea    rdx,[rip+0x1e515]        # 0x140033e58
   140015943:	lea    rcx,[rbp-0x69]
   140015947:	call   0x14001409c
   14001594c:	lea    rdx,[rsp+0x40]
   140015951:	lea    rcx,[rsp+0x30]
   140015956:	movups xmm0,XMMWORD PTR [rax]
   140015959:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001595f:	call   0x140014910
   140015964:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140015969:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14001596e:	test   r14d,r14d
   140015971:	je     0x1400159b1
   140015973:	test   DWORD PTR [rip+0x29557],0x1000        # 0x14003eed4
   14001597d:	jne    0x1400159b1
   14001597f:	lea    rdx,[rip+0x1e4e2]        # 0x140033e68
   140015986:	lea    rcx,[rbp-0x69]
   14001598a:	call   0x14001409c
   14001598f:	lea    rdx,[rsp+0x40]
   140015994:	lea    rcx,[rsp+0x30]
   140015999:	movups xmm0,XMMWORD PTR [rax]
   14001599c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400159a2:	call   0x140014910
   1400159a7:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400159ac:	movaps XMMWORD PTR [rsp+0x40],xmm6
   1400159b1:	bt     esi,0x10
   1400159b5:	jae    0x1400159e4
   1400159b7:	lea    rdx,[rip+0x1e4ba]        # 0x140033e78
   1400159be:	lea    rcx,[rbp-0x69]
   1400159c2:	call   0x14001409c
   1400159c7:	lea    rdx,[rsp+0x40]
   1400159cc:	lea    rcx,[rsp+0x30]
   1400159d1:	movups xmm0,XMMWORD PTR [rax]
   1400159d4:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400159da:	call   0x140014910
   1400159df:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400159e4:	movdqu XMMWORD PTR [rdi],xmm6
   1400159e8:	lea    r11,[rsp+0xf0]
   1400159f0:	mov    rax,rdi
   1400159f3:	mov    rbx,QWORD PTR [r11+0x40]
   1400159f7:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400159fc:	movaps xmm7,XMMWORD PTR [r11-0x20]
   140015a01:	mov    rsp,r11
   140015a04:	pop    r15
   140015a06:	pop    r14
   140015a08:	pop    r13
   140015a0a:	pop    r12
   140015a0c:	pop    rdi
   140015a0d:	pop    rsi
   140015a0e:	pop    rbp
   140015a0f:	ret    
   140015a10:	mov    eax,DWORD PTR [rip+0x294be]        # 0x14003eed4
   140015a16:	shr    eax,0x7
   140015a19:	not    eax
   140015a1b:	and    eax,0x1
   140015a1e:	ret    
   140015a1f:	int3   
   140015a20:	mov    eax,DWORD PTR [rip+0x294ae]        # 0x14003eed4
   140015a26:	shr    eax,0x4
   140015a29:	not    eax
   140015a2b:	and    eax,0x1
   140015a2e:	ret    
   140015a2f:	int3   
   140015a30:	mov    eax,DWORD PTR [rip+0x2949e]        # 0x14003eed4
   140015a36:	shr    eax,0x3
   140015a39:	not    eax
   140015a3b:	and    eax,0x1
   140015a3e:	ret    
   140015a3f:	int3   
   140015a40:	mov    eax,DWORD PTR [rip+0x2948e]        # 0x14003eed4
   140015a46:	shr    eax,0xf
   140015a49:	not    eax
   140015a4b:	and    eax,0x1
   140015a4e:	ret    
   140015a4f:	int3   
   140015a50:	mov    eax,DWORD PTR [rip+0x2947e]        # 0x14003eed4
   140015a56:	shr    eax,0x12
   140015a59:	not    eax
   140015a5b:	and    eax,0x1
   140015a5e:	ret    
   140015a5f:	int3   
   140015a60:	mov    eax,DWORD PTR [rip+0x2946e]        # 0x14003eed4
   140015a66:	shr    eax,0x2
   140015a69:	not    eax
   140015a6b:	and    eax,0x1
   140015a6e:	ret    
   140015a6f:	int3   
   140015a70:	mov    eax,DWORD PTR [rip+0x2945e]        # 0x14003eed4
   140015a76:	shr    eax,1
   140015a78:	not    eax
   140015a7a:	and    eax,0x1
   140015a7d:	ret    
   140015a7e:	int3   
   140015a7f:	int3   
   140015a80:	mov    eax,DWORD PTR [rip+0x2944e]        # 0x14003eed4
   140015a86:	shr    eax,0x9
   140015a89:	not    eax
   140015a8b:	and    eax,0x1
   140015a8e:	ret    
   140015a8f:	int3   
   140015a90:	mov    eax,DWORD PTR [rip+0x2943e]        # 0x14003eed4
   140015a96:	and    eax,0x1000
   140015a9b:	ret    
   140015a9c:	mov    eax,DWORD PTR [rip+0x29432]        # 0x14003eed4
   140015aa2:	and    eax,0x10000
   140015aa7:	ret    
   140015aa8:	mov    QWORD PTR [rsp+0x8],rbx
   140015aad:	mov    QWORD PTR [rsp+0x10],rsi
   140015ab2:	push   rdi
   140015ab3:	sub    rsp,0x20
   140015ab7:	cmp    QWORD PTR [rcx],0x0
   140015abb:	mov    edi,r8d
   140015abe:	mov    rsi,rdx
   140015ac1:	mov    rbx,rcx
   140015ac4:	je     0x140015ad7
   140015ac6:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140015acd:	and    QWORD PTR [rcx],0x0
   140015ad1:	mov    BYTE PTR [rcx+0x8],0x3
   140015ad5:	jmp    0x140015b44
   140015ad7:	test   rdx,rdx
   140015ada:	je     0x140015b40
   140015adc:	test   r8d,r8d
   140015adf:	je     0x140015b40
   140015ae1:	mov    ecx,r8d
   140015ae4:	xor    r8d,r8d
   140015ae7:	dec    ecx
   140015ae9:	lea    rcx,[rip+0x293f0]        # 0x14003eee0
   140015af0:	je     0x140015b10
   140015af2:	lea    edx,[r8+0x18]
   140015af6:	call   0x140017e18
   140015afb:	test   rax,rax
   140015afe:	je     0x140015b30
   140015b00:	mov    r8d,edi
   140015b03:	mov    rdx,rsi
   140015b06:	mov    rcx,rax
   140015b09:	call   0x14001438c
   140015b0e:	jmp    0x140015b32
   140015b10:	mov    edx,0x10
   140015b15:	call   0x140017e18
   140015b1a:	test   rax,rax
   140015b1d:	je     0x140015b30
   140015b1f:	mov    cl,BYTE PTR [rsi]
   140015b21:	lea    rdx,[rip+0x1e568]        # 0x140034090
   140015b28:	mov    BYTE PTR [rax+0x8],cl
   140015b2b:	mov    QWORD PTR [rax],rdx
   140015b2e:	jmp    0x140015b32
   140015b30:	xor    eax,eax
   140015b32:	mov    QWORD PTR [rbx],rax
   140015b35:	test   rax,rax
   140015b38:	jne    0x140015b44
   140015b3a:	mov    BYTE PTR [rbx+0x8],0x3
   140015b3e:	jmp    0x140015b44
   140015b40:	mov    BYTE PTR [rcx+0x8],0x2
   140015b44:	mov    rbx,QWORD PTR [rsp+0x30]
   140015b49:	mov    rsi,QWORD PTR [rsp+0x38]
   140015b4e:	add    rsp,0x20
   140015b52:	pop    rdi
   140015b53:	ret    
   140015b54:	mov    eax,DWORD PTR [rip+0x2937a]        # 0x14003eed4
   140015b5a:	shr    eax,0x11
   140015b5d:	not    eax
   140015b5f:	and    eax,0x1
   140015b62:	ret    
   140015b63:	int3   
   140015b64:	mov    eax,DWORD PTR [rip+0x2936a]        # 0x14003eed4
   140015b6a:	shr    eax,0x13
   140015b6d:	not    eax
   140015b6f:	and    eax,0x1
   140015b72:	ret    
   140015b73:	int3   
   140015b74:	mov    ecx,DWORD PTR [rip+0x2935a]        # 0x14003eed4
   140015b7a:	xor    eax,eax
   140015b7c:	and    ecx,0x60
   140015b7f:	cmp    cl,0x60
   140015b82:	setne  al
   140015b85:	ret    
   140015b86:	int3   
   140015b87:	int3   
   140015b88:	mov    eax,DWORD PTR [rip+0x29346]        # 0x14003eed4
   140015b8e:	shr    eax,0x8
   140015b91:	not    eax
   140015b93:	and    eax,0x1
   140015b96:	ret    
   140015b97:	int3   
   140015b98:	mov    eax,DWORD PTR [rip+0x29336]        # 0x14003eed4
   140015b9e:	and    eax,0x2000
   140015ba3:	ret    
   140015ba4:	mov    eax,DWORD PTR [rip+0x2932a]        # 0x14003eed4
   140015baa:	not    eax
   140015bac:	and    eax,0x1
   140015baf:	ret    
   140015bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140015bb5:	mov    QWORD PTR [rsp+0x10],rsi
   140015bba:	push   rdi
   140015bbb:	sub    rsp,0x50
   140015bbf:	and    QWORD PTR [rcx],0x0
   140015bc3:	mov    BYTE PTR [rcx+0x8],0x0
   140015bc7:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140015bce:	cmp    BYTE PTR [rcx+0x8],0x0
   140015bd2:	mov    rbx,rcx
   140015bd5:	mov    esi,0x1
   140015bda:	jne    0x140015cdf
   140015be0:	mov    rax,QWORD PTR [rip+0x292d1]        # 0x14003eeb8
   140015be7:	cmp    BYTE PTR [rax],0x40
   140015bea:	je     0x140015cdf
   140015bf0:	cmp    BYTE PTR [rax],0x5a
   140015bf3:	je     0x140015cdf
   140015bf9:	test   esi,esi
   140015bfb:	je     0x140015c01
   140015bfd:	xor    esi,esi
   140015bff:	jmp    0x140015c12
   140015c01:	mov    dl,0x2c
   140015c03:	mov    rcx,rbx
   140015c06:	call   0x140014950
   140015c0b:	mov    rax,QWORD PTR [rip+0x292a6]        # 0x14003eeb8
   140015c12:	cmp    BYTE PTR [rax],0x0
   140015c15:	je     0x140015cd2
   140015c1b:	movsx  r8d,BYTE PTR [rax]
   140015c1f:	sub    r8d,0x30
   140015c23:	cmp    r8d,0x9
   140015c27:	ja     0x140015c51
   140015c29:	mov    rcx,QWORD PTR [rip+0x29270]        # 0x14003eea0
   140015c30:	inc    rax
   140015c33:	lea    rdx,[rsp+0x40]
   140015c38:	mov    QWORD PTR [rip+0x29279],rax        # 0x14003eeb8
   140015c3f:	call   0x14001456c
   140015c44:	mov    rcx,rbx
   140015c47:	mov    rdx,rax
   140015c4a:	call   0x140014910
   140015c4f:	jmp    0x140015cbf
   140015c51:	and    QWORD PTR [rsp+0x20],0x0
   140015c57:	and    DWORD PTR [rsp+0x28],0xffff0000
   140015c5f:	lea    rdx,[rsp+0x20]
   140015c64:	lea    rcx,[rsp+0x30]
   140015c69:	mov    rdi,rax
   140015c6c:	call   0x140018658
   140015c71:	mov    rax,QWORD PTR [rip+0x29240]        # 0x14003eeb8
   140015c78:	sub    rax,rdi
   140015c7b:	cmp    rax,0x1
   140015c7f:	jle    0x140015c97
   140015c81:	mov    rcx,QWORD PTR [rip+0x29218]        # 0x14003eea0
   140015c88:	cmp    DWORD PTR [rcx],0x9
   140015c8b:	je     0x140015c97
   140015c8d:	lea    rdx,[rsp+0x30]
   140015c92:	call   0x140014b3c
   140015c97:	lea    rdx,[rsp+0x30]
   140015c9c:	mov    rcx,rbx
   140015c9f:	call   0x140014910
   140015ca4:	mov    rax,QWORD PTR [rip+0x2920d]        # 0x14003eeb8
   140015cab:	cmp    rax,rdi
   140015cae:	jne    0x140015cc6
   140015cb0:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140015cb7:	and    QWORD PTR [rbx],0x0
   140015cbb:	mov    BYTE PTR [rbx+0x8],0x2
   140015cbf:	mov    rax,QWORD PTR [rip+0x291f2]        # 0x14003eeb8
   140015cc6:	cmp    BYTE PTR [rbx+0x8],0x0
   140015cca:	je     0x140015be7
   140015cd0:	jmp    0x140015cdf
   140015cd2:	mov    edx,0x1
   140015cd7:	mov    rcx,rbx
   140015cda:	call   0x140014af8
   140015cdf:	mov    rsi,QWORD PTR [rsp+0x68]
   140015ce4:	mov    rax,rbx
   140015ce7:	mov    rbx,QWORD PTR [rsp+0x60]
   140015cec:	add    rsp,0x50
   140015cf0:	pop    rdi
   140015cf1:	ret    
   140015cf2:	int3   
   140015cf3:	int3   
   140015cf4:	rex push rbx
   140015cf6:	sub    rsp,0x30
   140015cfa:	mov    rax,QWORD PTR [rip+0x291b7]        # 0x14003eeb8
   140015d01:	mov    rbx,rcx
   140015d04:	cmp    BYTE PTR [rax],0x58
   140015d07:	je     0x140015dcf
   140015d0d:	cmp    BYTE PTR [rax],0x5a
   140015d10:	je     0x140015da4
   140015d16:	lea    rcx,[rsp+0x20]
   140015d1b:	call   0x140015bb0
   140015d20:	cmp    BYTE PTR [rsp+0x28],0x0
   140015d25:	jne    0x140015d8d
   140015d27:	mov    rax,QWORD PTR [rip+0x2918a]        # 0x14003eeb8
   140015d2e:	cmp    BYTE PTR [rax],0x0
   140015d31:	je     0x140015d8d
   140015d33:	cmp    BYTE PTR [rax],0x40
   140015d36:	je     0x140015d98
   140015d38:	cmp    BYTE PTR [rax],0x5a
   140015d3b:	je     0x140015d4f
   140015d3d:	mov    edx,0x2
   140015d42:	mov    rcx,rbx
   140015d45:	call   0x1400140e4
   140015d4a:	jmp    0x140015de5
   140015d4f:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140015d54:	inc    rax
   140015d57:	lea    rdx,[rip+0x1e19a]        # 0x140033ef8
   140015d5e:	mov    QWORD PTR [rip+0x29153],rax        # 0x14003eeb8
   140015d65:	mov    eax,DWORD PTR [rip+0x29169]        # 0x14003eed4
   140015d6b:	lea    rcx,[rsp+0x20]
   140015d70:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140015d76:	shr    eax,0x12
   140015d79:	not    eax
   140015d7b:	test   al,0x1
   140015d7d:	lea    rax,[rip+0x1e168]        # 0x140033eec
   140015d84:	cmovne rdx,rax
   140015d88:	call   0x140014a6c
   140015d8d:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140015d92:	movdqu XMMWORD PTR [rbx],xmm0
   140015d96:	jmp    0x140015de5
   140015d98:	inc    rax
   140015d9b:	mov    QWORD PTR [rip+0x29116],rax        # 0x14003eeb8
   140015da2:	jmp    0x140015d8d
   140015da4:	inc    rax
   140015da7:	lea    rdx,[rip+0x1e132]        # 0x140033ee0
   140015dae:	mov    QWORD PTR [rip+0x29103],rax        # 0x14003eeb8
   140015db5:	mov    eax,DWORD PTR [rip+0x29119]        # 0x14003eed4
   140015dbb:	shr    eax,0x12
   140015dbe:	not    eax
   140015dc0:	test   al,0x1
   140015dc2:	lea    rax,[rip+0x1df7b]        # 0x140033d44
   140015dc9:	cmovne rdx,rax
   140015dcd:	jmp    0x140015de0
   140015dcf:	inc    rax
   140015dd2:	lea    rdx,[rip+0x1df4f]        # 0x140033d28
   140015dd9:	mov    QWORD PTR [rip+0x290d8],rax        # 0x14003eeb8
   140015de0:	call   0x14001409c
   140015de5:	mov    rax,rbx
   140015de8:	add    rsp,0x30
   140015dec:	pop    rbx
   140015ded:	ret    
   140015dee:	int3   
   140015def:	int3   
   140015df0:	mov    QWORD PTR [rsp+0x8],rbx
   140015df5:	mov    QWORD PTR [rsp+0x10],rsi
   140015dfa:	mov    QWORD PTR [rsp+0x18],rdi
   140015dff:	push   rbp
   140015e00:	push   r14
   140015e02:	push   r15
   140015e04:	mov    rbp,rsp
   140015e07:	sub    rsp,0x80
   140015e0e:	mov    rax,QWORD PTR [rip+0x290a3]        # 0x14003eeb8
   140015e15:	xor    r15d,r15d
   140015e18:	mov    rsi,rdx
   140015e1b:	mov    r14,rcx
   140015e1e:	cmp    BYTE PTR [rax],r15b
   140015e21:	je     0x140015f8c
   140015e27:	call   0x140017ec8
   140015e2c:	test   eax,eax
   140015e2e:	mov    edi,eax
   140015e30:	cmovs  edi,r15d
   140015e34:	test   edi,edi
   140015e36:	jne    0x140015e74
   140015e38:	lea    rcx,[rbp-0x30]
   140015e3c:	mov    dl,0x5b
   140015e3e:	call   0x140013fdc
   140015e43:	lea    edx,[rdi+0x1]
   140015e46:	lea    rcx,[rbp-0x50]
   140015e4a:	movups xmm0,XMMWORD PTR [rax]
   140015e4d:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   140015e52:	call   0x140014af8
   140015e57:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   140015e5b:	lea    rcx,[rbp-0x60]
   140015e5f:	mov    dl,0x5d
   140015e61:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   140015e66:	call   0x140014950
   140015e6b:	lea    rdx,[rbp-0x60]
   140015e6f:	jmp    0x140016009
   140015e74:	and    DWORD PTR [rbp-0x58],0xffff0000
   140015e7b:	test   DWORD PTR [rsi+0x8],0x800
   140015e82:	mov    QWORD PTR [rbp-0x60],r15
   140015e86:	je     0x140015efc
   140015e88:	lea    rdx,[rip+0x1d8b9]        # 0x140033748
   140015e8f:	lea    rcx,[rbp-0x60]
   140015e93:	call   0x140014a6c
   140015e98:	jmp    0x140015efc
   140015e9a:	mov    eax,edi
   140015e9c:	dec    edi
   140015e9e:	test   eax,eax
   140015ea0:	je     0x140015f02
   140015ea2:	mov    rax,QWORD PTR [rip+0x2900f]        # 0x14003eeb8
   140015ea9:	cmp    BYTE PTR [rax],r15b
   140015eac:	je     0x140015f02
   140015eae:	lea    rcx,[rbp-0x20]
   140015eb2:	xor    edx,edx
   140015eb4:	call   0x1400170b4
   140015eb9:	lea    rcx,[rbp-0x10]
   140015ebd:	mov    dl,0x5b
   140015ebf:	mov    rbx,rax
   140015ec2:	call   0x140013fdc
   140015ec7:	lea    rcx,[rbp-0x40]
   140015ecb:	mov    rdx,rbx
   140015ece:	movups xmm0,XMMWORD PTR [rax]
   140015ed1:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140015ed6:	call   0x140014910
   140015edb:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140015edf:	lea    rcx,[rbp-0x30]
   140015ee3:	mov    dl,0x5d
   140015ee5:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140015eea:	call   0x140014950
   140015eef:	lea    rdx,[rbp-0x30]
   140015ef3:	lea    rcx,[rbp-0x60]
   140015ef7:	call   0x140014910
   140015efc:	cmp    BYTE PTR [rbp-0x58],0x1
   140015f00:	jle    0x140015e9a
   140015f02:	cmp    QWORD PTR [rsi],r15
   140015f05:	je     0x140015f6c
   140015f07:	test   DWORD PTR [rsi+0x8],0x800
   140015f0e:	je     0x140015f1a
   140015f10:	movups xmm0,XMMWORD PTR [rsi]
   140015f13:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140015f18:	jmp    0x140015f56
   140015f1a:	lea    rcx,[rbp-0x10]
   140015f1e:	mov    dl,0x28
   140015f20:	call   0x140013fdc
   140015f25:	lea    rcx,[rbp-0x30]
   140015f29:	mov    rdx,rsi
   140015f2c:	movups xmm0,XMMWORD PTR [rax]
   140015f2f:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140015f34:	call   0x140014910
   140015f39:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015f3d:	lea    rcx,[rbp-0x30]
   140015f41:	mov    dl,0x29
   140015f43:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140015f48:	call   0x140014950
   140015f4d:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015f51:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140015f56:	lea    rdx,[rbp-0x60]
   140015f5a:	lea    rcx,[rbp-0x30]
   140015f5e:	call   0x140014910
   140015f63:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015f67:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   140015f6c:	lea    rdx,[rbp-0x60]
   140015f70:	lea    rcx,[rbp-0x50]
   140015f74:	call   0x140018658
   140015f79:	bts    DWORD PTR [rbp-0x48],0xb
   140015f7e:	movups xmm0,XMMWORD PTR [rbp-0x50]
   140015f82:	movdqu XMMWORD PTR [r14],xmm0
   140015f87:	jmp    0x140016011
   140015f8c:	lea    rcx,[rbp-0x10]
   140015f90:	cmp    QWORD PTR [rdx],r15
   140015f93:	je     0x140015fd4
   140015f95:	mov    dl,0x28
   140015f97:	call   0x140013fdc
   140015f9c:	lea    rcx,[rbp-0x30]
   140015fa0:	mov    rdx,rsi
   140015fa3:	movups xmm0,XMMWORD PTR [rax]
   140015fa6:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140015fab:	call   0x140014910
   140015fb0:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015fb4:	lea    rdx,[rip+0x1e095]        # 0x140034050
   140015fbb:	lea    rcx,[rbp-0x30]
   140015fbf:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140015fc4:	call   0x140014a6c
   140015fc9:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015fcd:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140015fd2:	jmp    0x140015fe3
   140015fd4:	mov    dl,0x5b
   140015fd6:	call   0x140013fdc
   140015fdb:	movups xmm0,XMMWORD PTR [rax]
   140015fde:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140015fe3:	lea    rcx,[rbp-0x30]
   140015fe7:	mov    edx,0x1
   140015fec:	call   0x140014af8
   140015ff1:	lea    rcx,[rbp-0x40]
   140015ff5:	mov    dl,0x5d
   140015ff7:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015ffb:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   140016000:	call   0x140014950
   140016005:	lea    rdx,[rbp-0x40]
   140016009:	mov    rcx,r14
   14001600c:	call   0x1400160f4
   140016011:	lea    r11,[rsp+0x80]
   140016019:	mov    rax,r14
   14001601c:	mov    rbx,QWORD PTR [r11+0x20]
   140016020:	mov    rsi,QWORD PTR [r11+0x28]
   140016024:	mov    rdi,QWORD PTR [r11+0x30]
   140016028:	mov    rsp,r11
   14001602b:	pop    r15
   14001602d:	pop    r14
   14001602f:	pop    rbp
   140016030:	ret    
   140016031:	int3   
   140016032:	int3   
   140016033:	int3   
   140016034:	rex push rbx
   140016036:	sub    rsp,0x40
   14001603a:	mov    eax,DWORD PTR [rip+0x28e94]        # 0x14003eed4
   140016040:	mov    rdx,QWORD PTR [rip+0x1d309]        # 0x140033350
   140016047:	mov    rbx,rcx
   14001604a:	not    eax
   14001604c:	test   al,0x1
   14001604e:	jne    0x140016054
   140016050:	add    rdx,0x2
   140016054:	lea    rcx,[rsp+0x20]
   140016059:	call   0x14001409c
   14001605e:	mov    rcx,QWORD PTR [rip+0x28e53]        # 0x14003eeb8
   140016065:	cmp    BYTE PTR [rcx],0x0
   140016068:	je     0x1400160bf
   14001606a:	movsx  eax,BYTE PTR [rcx]
   14001606d:	inc    rcx
   140016070:	mov    QWORD PTR [rip+0x28e41],rcx        # 0x14003eeb8
   140016077:	cmp    eax,0x30
   14001607a:	je     0x1400160ac
   14001607c:	cmp    eax,0x32
   14001607f:	je     0x140016093
   140016081:	cmp    eax,0x35
   140016084:	jne    0x1400160ce
   140016086:	lea    edx,[rax-0x33]
   140016089:	mov    rcx,rbx
   14001608c:	call   0x1400140e4
   140016091:	jmp    0x1400160e8
   140016093:	lea    rcx,[rsp+0x30]
   140016098:	call   0x140019114
   14001609d:	lea    rcx,[rsp+0x20]
   1400160a2:	mov    rdx,rax
   1400160a5:	call   0x140014910
   1400160aa:	jmp    0x1400160ce
   1400160ac:	lea    rdx,[rip+0x1dc75]        # 0x140033d28
   1400160b3:	lea    rcx,[rsp+0x20]
   1400160b8:	call   0x140014a6c
   1400160bd:	jmp    0x1400160ce
   1400160bf:	lea    rcx,[rsp+0x20]
   1400160c4:	mov    edx,0x1
   1400160c9:	call   0x140014af8
   1400160ce:	lea    rdx,[rip+0x1ddaf]        # 0x140033e84
   1400160d5:	lea    rcx,[rsp+0x20]
   1400160da:	call   0x140014a6c
   1400160df:	movups xmm0,XMMWORD PTR [rsp+0x20]
   1400160e4:	movdqu XMMWORD PTR [rbx],xmm0
   1400160e8:	mov    rax,rbx
   1400160eb:	add    rsp,0x40
   1400160ef:	pop    rbx
   1400160f0:	ret    
   1400160f1:	int3   
   1400160f2:	int3   
   1400160f3:	int3   
   1400160f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400160f9:	push   rbp
   1400160fa:	push   rsi
   1400160fb:	push   rdi
   1400160fc:	mov    rbp,rsp
   1400160ff:	sub    rsp,0x70
   140016103:	mov    rdi,rcx
   140016106:	mov    rcx,QWORD PTR [rip+0x28dab]        # 0x14003eeb8
   14001610d:	mov    rsi,rdx
   140016110:	mov    al,BYTE PTR [rcx]
   140016112:	mov    BYTE PTR [rbp+0x38],al
   140016115:	test   al,al
   140016117:	je     0x1400164d1
   14001611d:	and    QWORD PTR [rbp-0x50],0x0
   140016122:	and    DWORD PTR [rbp-0x48],0xffff0000
   140016129:	inc    rcx
   14001612c:	movzx  eax,al
   14001612f:	or     ebx,0xffffffff
   140016132:	mov    QWORD PTR [rip+0x28d7f],rcx        # 0x14003eeb8
   140016139:	mov    BYTE PTR [rbp+0x30],0x0
   14001613d:	cmp    eax,0x4e
   140016140:	jg     0x1400161a7
   140016142:	je     0x1400163c2
   140016148:	cmp    eax,0x43
   14001614b:	jl     0x140016389
   140016151:	cmp    eax,0x45
   140016154:	jle    0x14001619e
   140016156:	cmp    eax,0x47
   140016159:	jle    0x140016195
   14001615b:	cmp    eax,0x49
   14001615e:	jle    0x14001618c
   140016160:	cmp    eax,0x4b
   140016163:	jle    0x140016183
   140016165:	cmp    eax,0x4d
   140016168:	jne    0x140016389
   14001616e:	lea    rdx,[rip+0x1ddc3]        # 0x140033f38
   140016175:	lea    rcx,[rbp-0x50]
   140016179:	call   0x1400144f0
   14001617e:	jmp    0x1400163db
   140016183:	lea    rdx,[rip+0x1dda6]        # 0x140033f30
   14001618a:	jmp    0x140016175
   14001618c:	lea    rdx,[rip+0x1dd99]        # 0x140033f2c
   140016193:	jmp    0x140016175
   140016195:	lea    rdx,[rip+0x1dd88]        # 0x140033f24
   14001619c:	jmp    0x140016175
   14001619e:	lea    rdx,[rip+0x1dd77]        # 0x140033f1c
   1400161a5:	jmp    0x140016175
   1400161a7:	cmp    eax,0x4f
   1400161aa:	je     0x1400163b2
   1400161b0:	jle    0x140016389
   1400161b6:	cmp    eax,0x53
   1400161b9:	jle    0x140016382
   1400161bf:	cmp    eax,0x58
   1400161c2:	je     0x140016376
   1400161c8:	cmp    eax,0x5f
   1400161cb:	jne    0x140016389
   1400161d1:	movzx  ebx,BYTE PTR [rcx]
   1400161d4:	inc    rcx
   1400161d7:	mov    eax,ebx
   1400161d9:	mov    QWORD PTR [rip+0x28cd8],rcx        # 0x14003eeb8
   1400161e0:	cmp    ebx,0x4d
   1400161e3:	jg     0x140016295
   1400161e9:	cmp    eax,0x4c
   1400161ec:	jge    0x14001628c
   1400161f2:	cmp    eax,0x47
   1400161f5:	jg     0x140016270
   1400161f7:	cmp    eax,0x46
   1400161fa:	jge    0x140016267
   1400161fc:	test   eax,eax
   1400161fe:	je     0x14001624a
   140016200:	cmp    eax,0x24
   140016203:	je     0x140016226
   140016205:	add    eax,0xffffffbc
   140016208:	cmp    eax,0x1
   14001620b:	ja     0x1400162e6
   140016211:	lea    rdx,[rip+0x1dd38]        # 0x140033f50
   140016218:	lea    rcx,[rbp-0x50]
   14001621c:	call   0x1400144f0
   140016221:	jmp    0x1400163de
   140016226:	lea    rcx,[rbp-0x30]
   14001622a:	call   0x1400160f4
   14001622f:	lea    rdx,[rip+0x1dd62]        # 0x140033f98
   140016236:	lea    rcx,[rbp-0x40]
   14001623a:	mov    rbx,rax
   14001623d:	call   0x14001409c
   140016242:	mov    rdx,rbx
   140016245:	jmp    0x1400164e2
   14001624a:	dec    rcx
   14001624d:	mov    edx,0x1
   140016252:	mov    QWORD PTR [rip+0x28c5f],rcx        # 0x14003eeb8
   140016259:	lea    rcx,[rbp-0x50]
   14001625d:	call   0x140014530
   140016262:	jmp    0x1400163de
   140016267:	lea    rdx,[rip+0x1dcea]        # 0x140033f58
   14001626e:	jmp    0x140016218
   140016270:	cmp    eax,0x49
   140016273:	jle    0x140016283
   140016275:	cmp    eax,0x4b
   140016278:	jg     0x1400162e6
   14001627a:	lea    rdx,[rip+0x1dce7]        # 0x140033f68
   140016281:	jmp    0x140016218
   140016283:	lea    rdx,[rip+0x1dcd6]        # 0x140033f60
   14001628a:	jmp    0x140016218
   14001628c:	lea    rdx,[rip+0x1dcdd]        # 0x140033f70
   140016293:	jmp    0x140016218
   140016295:	cmp    eax,0x4e
   140016298:	je     0x14001636a
   14001629e:	cmp    eax,0x4f
   1400162a1:	je     0x14001630a
   1400162a3:	cmp    eax,0x52
   1400162a6:	je     0x1400162fe
   1400162a8:	cmp    eax,0x57
   1400162ab:	je     0x1400162f2
   1400162ad:	add    eax,0xffffffa8
   1400162b0:	cmp    eax,0x1
   1400162b3:	ja     0x1400162e6
   1400162b5:	dec    rcx
   1400162b8:	mov    QWORD PTR [rip+0x28bf9],rcx        # 0x14003eeb8
   1400162bf:	lea    rcx,[rbp-0x20]
   1400162c3:	call   0x140017290
   1400162c8:	movups xmm0,XMMWORD PTR [rax]
   1400162cb:	movq   rax,xmm0
   1400162d0:	movaps XMMWORD PTR [rbp-0x50],xmm0
   1400162d4:	test   rax,rax
   1400162d7:	jne    0x1400163de
   1400162dd:	movdqu XMMWORD PTR [rdi],xmm0
   1400162e1:	jmp    0x1400164f1
   1400162e6:	lea    rdx,[rip+0x1dcb3]        # 0x140033fa0
   1400162ed:	jmp    0x140016218
   1400162f2:	lea    rdx,[rip+0x1dc97]        # 0x140033f90
   1400162f9:	jmp    0x140016218
   1400162fe:	lea    rdx,[rip+0x1dc7b]        # 0x140033f80
   140016305:	jmp    0x140016218
   14001630a:	mov    ebx,0xfffffffe
   14001630f:	movups xmm0,XMMWORD PTR [rsi]
   140016312:	and    QWORD PTR [rbp-0x50],0x0
   140016317:	and    DWORD PTR [rbp-0x48],0xffff0000
   14001631e:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140016323:	cmp    ebx,0xfffffffe
   140016326:	jne    0x140016471
   14001632c:	lea    r9,[rip+0x19751]        # 0x14002fa84
   140016333:	lea    r8,[rbp-0x40]
   140016337:	lea    rdx,[rbp-0x50]
   14001633b:	lea    rcx,[rbp-0x30]
   14001633f:	mov    ebx,0x800
   140016344:	or     DWORD PTR [rbp-0x38],ebx
   140016347:	call   0x140018978
   14001634c:	test   DWORD PTR [rbp-0x28],ebx
   14001634f:	jne    0x140016361
   140016351:	lea    rdx,[rip+0x1d3f0]        # 0x140033748
   140016358:	lea    rcx,[rbp-0x30]
   14001635c:	call   0x140014a6c
   140016361:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140016365:	jmp    0x1400162dd
   14001636a:	lea    rdx,[rip+0x1dbd7]        # 0x140033f48
   140016371:	jmp    0x140016218
   140016376:	lea    rdx,[rip+0x1d9ab]        # 0x140033d28
   14001637d:	jmp    0x140016175
   140016382:	mov    ebx,eax
   140016384:	and    ebx,0x3
   140016387:	jmp    0x1400163d2
   140016389:	dec    rcx
   14001638c:	mov    QWORD PTR [rip+0x28b25],rcx        # 0x14003eeb8
   140016393:	lea    rcx,[rbp-0x10]
   140016397:	call   0x140017290
   14001639c:	movups xmm0,XMMWORD PTR [rax]
   14001639f:	movq   rax,xmm0
   1400163a4:	movaps XMMWORD PTR [rbp-0x50],xmm0
   1400163a8:	test   rax,rax
   1400163ab:	jne    0x1400163db
   1400163ad:	jmp    0x1400162dd
   1400163b2:	lea    rdx,[rip+0x1dae7]        # 0x140033ea0
   1400163b9:	lea    rcx,[rbp-0x50]
   1400163bd:	call   0x1400144f0
   1400163c2:	lea    rdx,[rip+0x1db77]        # 0x140033f40
   1400163c9:	lea    rcx,[rbp-0x50]
   1400163cd:	call   0x140014a6c
   1400163d2:	cmp    ebx,0xffffffff
   1400163d5:	jne    0x14001630f
   1400163db:	mov    bl,BYTE PTR [rbp+0x30]
   1400163de:	mov    cl,BYTE PTR [rbp+0x38]
   1400163e1:	cmp    cl,0x43
   1400163e4:	je     0x140016408
   1400163e6:	lea    eax,[rcx-0x45]
   1400163e9:	test   al,0xf9
   1400163eb:	je     0x1400163ff
   1400163ed:	cmp    cl,0x5f
   1400163f0:	jne    0x140016436
   1400163f2:	sub    bl,0x45
   1400163f5:	cmp    bl,0x8
   1400163f8:	ja     0x140016436
   1400163fa:	test   bl,0x1
   1400163fd:	jne    0x140016436
   1400163ff:	lea    rdx,[rip+0x1daa2]        # 0x140033ea8
   140016406:	jmp    0x14001640f
   140016408:	lea    rdx,[rip+0x1db99]        # 0x140033fa8
   14001640f:	lea    rcx,[rbp-0x10]
   140016413:	call   0x14001409c
   140016418:	lea    rdx,[rbp-0x50]
   14001641c:	lea    rcx,[rbp-0x30]
   140016420:	movups xmm0,XMMWORD PTR [rax]
   140016423:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140016428:	call   0x140014910
   14001642d:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140016431:	movdqa XMMWORD PTR [rbp-0x50],xmm0
   140016436:	cmp    QWORD PTR [rsi],0x0
   14001643a:	je     0x140016468
   14001643c:	lea    rcx,[rbp-0x10]
   140016440:	mov    dl,0x20
   140016442:	call   0x140013fdc
   140016447:	lea    rcx,[rbp-0x30]
   14001644b:	mov    rdx,rsi
   14001644e:	movups xmm0,XMMWORD PTR [rax]
   140016451:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140016456:	call   0x140014910
   14001645b:	lea    rdx,[rbp-0x30]
   14001645f:	lea    rcx,[rbp-0x50]
   140016463:	call   0x140014910
   140016468:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   14001646c:	jmp    0x1400162dd
   140016471:	cmp    QWORD PTR [rsi],0x0
   140016475:	jne    0x1400164b8
   140016477:	test   bl,0x1
   14001647a:	je     0x1400164a3
   14001647c:	lea    rdx,[rip+0x1db2d]        # 0x140033fb0
   140016483:	lea    rcx,[rbp-0x50]
   140016487:	call   0x1400144f0
   14001648c:	test   bl,0x2
   14001648f:	je     0x1400164b8
   140016491:	lea    rdx,[rip+0x1db20]        # 0x140033fb8
   140016498:	lea    rcx,[rbp-0x50]
   14001649c:	call   0x140014a6c
   1400164a1:	jmp    0x1400164b8
   1400164a3:	test   bl,0x2
   1400164a6:	je     0x1400164b8
   1400164a8:	lea    rdx,[rip+0x1da11]        # 0x140033ec0
   1400164af:	lea    rcx,[rbp-0x50]
   1400164b3:	call   0x1400144f0
   1400164b8:	lea    r9,[rip+0x1d2a1]        # 0x140033760
   1400164bf:	lea    r8,[rbp-0x40]
   1400164c3:	lea    rdx,[rbp-0x50]
   1400164c7:	mov    rcx,rdi
   1400164ca:	call   0x140018978
   1400164cf:	jmp    0x1400164f1
   1400164d1:	lea    rcx,[rbp-0x10]
   1400164d5:	mov    edx,0x1
   1400164da:	call   0x1400140e4
   1400164df:	mov    rdx,rsi
   1400164e2:	movups xmm0,XMMWORD PTR [rax]
   1400164e5:	mov    rcx,rdi
   1400164e8:	movdqu XMMWORD PTR [rdi],xmm0
   1400164ec:	call   0x140014910
   1400164f1:	mov    rax,rdi
   1400164f4:	mov    rbx,QWORD PTR [rsp+0x90]
   1400164fc:	add    rsp,0x70
   140016500:	pop    rdi
   140016501:	pop    rsi
   140016502:	pop    rbp
   140016503:	ret    
   140016504:	rex push rbx
   140016506:	sub    rsp,0x20
   14001650a:	xor    edx,edx
   14001650c:	mov    rbx,rcx
   14001650f:	call   0x1400170b4
   140016514:	mov    rax,rbx
   140016517:	add    rsp,0x20
   14001651b:	pop    rbx
   14001651c:	ret    
   14001651d:	int3   
   14001651e:	int3   
   14001651f:	int3   
   140016520:	mov    QWORD PTR [rsp+0x8],rbx
   140016525:	push   rdi
   140016526:	sub    rsp,0x30
   14001652a:	mov    rax,QWORD PTR [rip+0x28987]        # 0x14003eeb8
   140016531:	mov    rdi,rcx
   140016534:	cmp    BYTE PTR [rax],0x0
   140016537:	je     0x140016607
   14001653d:	movsx  ebx,BYTE PTR [rax]
   140016540:	inc    rax
   140016543:	mov    edx,0x2
   140016548:	sub    ebx,0x41
   14001654b:	mov    QWORD PTR [rip+0x28966],rax        # 0x14003eeb8
   140016552:	cmp    ebx,0x10
   140016555:	ja     0x14001660c
   14001655b:	lea    rcx,[rsp+0x20]
   140016560:	call   0x1400140e4
   140016565:	mov    ecx,DWORD PTR [rip+0x28969]        # 0x14003eed4
   14001656b:	mov    eax,ecx
   14001656d:	shr    eax,1
   14001656f:	not    eax
   140016571:	test   al,0x1
   140016573:	je     0x1400165fc
   140016579:	and    ebx,0xfffffffe
   14001657c:	je     0x1400165e0
   14001657e:	cmp    ebx,0x2
   140016581:	je     0x1400165d7
   140016583:	cmp    ebx,0x4
   140016586:	je     0x1400165ce
   140016588:	cmp    ebx,0x6
   14001658b:	je     0x1400165c5
   14001658d:	cmp    ebx,0x8
   140016590:	je     0x1400165bc
   140016592:	cmp    ebx,0xc
   140016595:	je     0x1400165b3
   140016597:	cmp    ebx,0xe
   14001659a:	je     0x1400165aa
   14001659c:	cmp    ebx,0x10
   14001659f:	jne    0x1400165fc
   1400165a1:	mov    rdx,QWORD PTR [rip+0x1cdd8]        # 0x140033380
   1400165a8:	jmp    0x1400165e7
   1400165aa:	mov    rdx,QWORD PTR [rip+0x1cddf]        # 0x140033390
   1400165b1:	jmp    0x1400165e7
   1400165b3:	mov    rdx,QWORD PTR [rip+0x1cdce]        # 0x140033388
   1400165ba:	jmp    0x1400165e7
   1400165bc:	mov    rdx,QWORD PTR [rip+0x1cdb5]        # 0x140033378
   1400165c3:	jmp    0x1400165e7
   1400165c5:	mov    rdx,QWORD PTR [rip+0x1cd9c]        # 0x140033368
   1400165cc:	jmp    0x1400165e7
   1400165ce:	mov    rdx,QWORD PTR [rip+0x1cd9b]        # 0x140033370
   1400165d5:	jmp    0x1400165e7
   1400165d7:	mov    rdx,QWORD PTR [rip+0x1cd82]        # 0x140033360
   1400165de:	jmp    0x1400165e7
   1400165e0:	mov    rdx,QWORD PTR [rip+0x1cd71]        # 0x140033358
   1400165e7:	not    ecx
   1400165e9:	test   cl,0x1
   1400165ec:	jne    0x1400165f2
   1400165ee:	add    rdx,0x2
   1400165f2:	lea    rcx,[rsp+0x20]
   1400165f7:	call   0x1400144f0
   1400165fc:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140016601:	movdqu XMMWORD PTR [rdi],xmm0
   140016605:	jmp    0x140016611
   140016607:	mov    edx,0x1
   14001660c:	call   0x1400140e4
   140016611:	mov    rax,rdi
   140016614:	mov    rbx,QWORD PTR [rsp+0x40]
   140016619:	add    rsp,0x30
   14001661d:	pop    rdi
   14001661e:	ret    
   14001661f:	int3   
   140016620:	mov    rax,rsp
   140016623:	mov    QWORD PTR [rax+0x8],rbx
   140016627:	mov    QWORD PTR [rax+0x10],rsi
   14001662b:	mov    QWORD PTR [rax+0x18],r8
   14001662f:	push   rbp
   140016630:	push   rdi
   140016631:	push   r12
   140016633:	push   r14
   140016635:	push   r15
   140016637:	lea    rbp,[rax-0x57]
   14001663b:	sub    rsp,0xe0
   140016642:	xor    r14d,r14d
   140016645:	movaps XMMWORD PTR [rax-0x38],xmm6
   140016649:	mov    rax,QWORD PTR [rip+0x28868]        # 0x14003eeb8
   140016650:	mov    rsi,rdx
   140016653:	mov    edx,0xffff0000
   140016658:	mov    r15,r9
   14001665b:	and    DWORD PTR [rbp-0x39],edx
   14001665e:	mov    rbx,rcx
   140016661:	mov    QWORD PTR [rbp-0x41],r14
   140016665:	mov    BYTE PTR [rsp+0x20],r14b
   14001666a:	cmp    BYTE PTR [rax],r14b
   14001666d:	je     0x140016c4e
   140016673:	cmp    BYTE PTR [rax],0x24
   140016676:	jne    0x1400166a6
   140016678:	mov    r9d,DWORD PTR [rbp+0x7f]
   14001667c:	lea    r8,[rsp+0x20]
   140016681:	lea    rdx,[rbp+0x6f]
   140016685:	lea    rcx,[rbp-0x51]
   140016689:	call   0x1400174f0
   14001668e:	cmp    QWORD PTR [rbp-0x51],r14
   140016692:	je     0x1400166a1
   140016694:	movups xmm0,XMMWORD PTR [rbp-0x51]
   140016698:	movdqu XMMWORD PTR [rbx],xmm0
   14001669c:	jmp    0x140016cf0
   1400166a1:	mov    edx,0xffff0000
   1400166a6:	mov    rax,QWORD PTR [rip+0x2880b]        # 0x14003eeb8
   1400166ad:	mov    QWORD PTR [rbp-0x71],r14
   1400166b1:	mov    QWORD PTR [rbp-0x51],r14
   1400166b5:	movsx  ecx,BYTE PTR [rax]
   1400166b8:	mov    eax,0x16
   1400166bd:	mov    r12,r14
   1400166c0:	lea    r8d,[rax+0x2b]
   1400166c4:	mov    edi,ecx
   1400166c6:	cmp    cl,r8b
   1400166c9:	cmovge eax,r8d
   1400166cd:	and    DWORD PTR [rbp-0x49],edx
   1400166d0:	sub    edi,eax
   1400166d2:	and    DWORD PTR [rbp-0x69],edx
   1400166d5:	mov    edx,DWORD PTR [rip+0x287f9]        # 0x14003eed4
   1400166db:	movaps xmm6,XMMWORD PTR [rbp-0x71]
   1400166df:	mov    eax,edi
   1400166e1:	sub    eax,0x4
   1400166e4:	je     0x1400167e1
   1400166ea:	dec    eax
   1400166ec:	je     0x140016763
   1400166ee:	cmp    eax,0x3
   1400166f1:	jne    0x1400168c7
   1400166f7:	mov    eax,edx
   1400166f9:	shr    eax,1
   1400166fb:	not    eax
   1400166fd:	test   al,0x1
   1400166ff:	je     0x140016868
   140016705:	not    edx
   140016707:	cmp    QWORD PTR [rbp-0x51],r14
   14001670b:	je     0x140016754
   14001670d:	mov    rdi,QWORD PTR [rip+0x1cc8c]        # 0x1400333a0
   140016714:	test   dl,0x1
   140016717:	jne    0x14001671d
   140016719:	add    rdi,0x2
   14001671d:	movaps xmm0,XMMWORD PTR [rbp-0x51]
   140016721:	lea    rcx,[rbp-0x11]
   140016725:	mov    dl,0x20
   140016727:	movdqa XMMWORD PTR [rbp-0x11],xmm0
   14001672c:	call   0x140014950
   140016731:	lea    rcx,[rbp-0x31]
   140016735:	movaps xmm0,XMMWORD PTR [rbp-0x11]
   140016739:	mov    rdx,rdi
   14001673c:	movdqa XMMWORD PTR [rbp-0x31],xmm0
   140016741:	call   0x140014a6c
   140016746:	movaps xmm0,XMMWORD PTR [rbp-0x31]
   14001674a:	movdqa XMMWORD PTR [rbp-0x51],xmm0
   14001674f:	jmp    0x14001685c
   140016754:	test   dl,0x1
   140016757:	mov    rdx,QWORD PTR [rip+0x1cc42]        # 0x1400333a0
   14001675e:	jmp    0x14001684d
   140016763:	mov    eax,edx
   140016765:	shr    eax,1
   140016767:	not    eax
   140016769:	test   al,0x1
   14001676b:	je     0x140016868
   140016771:	not    edx
   140016773:	test   r12,r12
   140016776:	je     0x1400167be
   140016778:	mov    rdi,QWORD PTR [rip+0x1cc29]        # 0x1400333a8
   14001677f:	test   dl,0x1
   140016782:	jne    0x140016788
   140016784:	add    rdi,0x2
   140016788:	lea    rcx,[rbp+0xf]
   14001678c:	mov    dl,0x20
   14001678e:	movdqa XMMWORD PTR [rbp+0xf],xmm6
   140016793:	call   0x140014950
   140016798:	lea    rcx,[rbp-0x1]
   14001679c:	mov    rdx,rdi
   14001679f:	movaps xmm0,XMMWORD PTR [rbp+0xf]
   1400167a3:	movdqa XMMWORD PTR [rbp-0x1],xmm0
   1400167a8:	call   0x140014a6c
   1400167ad:	movaps xmm6,XMMWORD PTR [rbp-0x1]
   1400167b1:	movaps XMMWORD PTR [rbp-0x71],xmm6
   1400167b5:	mov    r12,QWORD PTR [rbp-0x71]
   1400167b9:	jmp    0x14001685c
   1400167be:	test   dl,0x1
   1400167c1:	mov    rdx,QWORD PTR [rip+0x1cbe0]        # 0x1400333a8
   1400167c8:	jne    0x1400167ce
   1400167ca:	add    rdx,0x2
   1400167ce:	lea    rcx,[rbp-0x71]
   1400167d2:	call   0x1400144f0
   1400167d7:	mov    r12,QWORD PTR [rbp-0x71]
   1400167db:	movaps xmm6,XMMWORD PTR [rbp-0x71]
   1400167df:	jmp    0x14001685c
   1400167e1:	mov    eax,edx
   1400167e3:	shr    eax,1
   1400167e5:	not    eax
   1400167e7:	test   al,0x1
   1400167e9:	je     0x140016868
   1400167eb:	mov    eax,edx
   1400167ed:	shr    eax,0x11
   1400167f0:	not    eax
   1400167f2:	test   al,0x1
   1400167f4:	je     0x140016868
   1400167f6:	not    edx
   1400167f8:	cmp    QWORD PTR [rbp-0x51],r14
   1400167fc:	je     0x140016843
   1400167fe:	mov    rdi,QWORD PTR [rip+0x1cb93]        # 0x140033398
   140016805:	test   dl,0x1
   140016808:	jne    0x14001680e
   14001680a:	add    rdi,0x2
   14001680e:	movaps xmm0,XMMWORD PTR [rbp-0x51]
   140016812:	lea    rcx,[rbp-0x21]
   140016816:	mov    dl,0x20
   140016818:	movdqa XMMWORD PTR [rbp-0x21],xmm0
   14001681d:	call   0x140014950
   140016822:	lea    rcx,[rsp+0x30]
   140016827:	movaps xmm0,XMMWORD PTR [rbp-0x21]
   14001682b:	mov    rdx,rdi
   14001682e:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016834:	call   0x140014a6c
   140016839:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001683e:	jmp    0x14001674a
   140016843:	test   dl,0x1
   140016846:	mov    rdx,QWORD PTR [rip+0x1cb4b]        # 0x140033398
   14001684d:	jne    0x140016853
   14001684f:	add    rdx,0x2
   140016853:	lea    rcx,[rbp-0x51]
   140016857:	call   0x1400144f0
   14001685c:	mov    edx,DWORD PTR [rip+0x28672]        # 0x14003eed4
   140016862:	mov    r8d,0x41
   140016868:	mov    rax,QWORD PTR [rip+0x28649]        # 0x14003eeb8
   14001686f:	inc    rax
   140016872:	mov    QWORD PTR [rip+0x2863f],rax        # 0x14003eeb8
   140016879:	cmp    BYTE PTR [rax],0x24
   14001687c:	jne    0x1400168aa
   14001687e:	mov    r9d,DWORD PTR [rbp+0x7f]
   140016882:	lea    r8,[rsp+0x20]
   140016887:	lea    rdx,[rbp+0x6f]
   14001688b:	lea    rcx,[rbp-0x61]
   14001688f:	call   0x1400174f0
   140016894:	cmp    QWORD PTR [rbp-0x61],r14
   140016898:	jne    0x140016c45
   14001689e:	mov    edx,DWORD PTR [rip+0x28630]        # 0x14003eed4
   1400168a4:	mov    r8d,0x41
   1400168aa:	mov    rax,QWORD PTR [rip+0x28607]        # 0x14003eeb8
   1400168b1:	mov    ecx,0x16
   1400168b6:	cmp    BYTE PTR [rax],r8b
   1400168b9:	movsx  edi,BYTE PTR [rax]
   1400168bc:	cmovge ecx,r8d
   1400168c0:	sub    edi,ecx
   1400168c2:	jmp    0x1400166df
   1400168c7:	mov    rax,QWORD PTR [rip+0x285ea]        # 0x14003eeb8
   1400168ce:	cmp    BYTE PTR [rax],r14b
   1400168d1:	je     0x1400168da
   1400168d3:	inc    QWORD PTR [rip+0x285de]        # 0x14003eeb8
   1400168da:	cmp    edi,0x1f
   1400168dd:	ja     0x14001699e
   1400168e3:	mov    r14,QWORD PTR [rbp+0x6f]
   1400168e7:	lea    rcx,[rbp-0x71]
   1400168eb:	mov    rdx,r14
   1400168ee:	call   0x14001409c
   1400168f3:	lea    rdx,[rbp-0x71]
   1400168f7:	lea    rcx,[rsp+0x30]
   1400168fc:	movaps xmm0,XMMWORD PTR [rbp-0x41]
   140016900:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016906:	call   0x140014910
   14001690b:	cmp    QWORD PTR [rbp-0x51],0x0
   140016910:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016915:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   14001691a:	je     0x140016951
   14001691c:	lea    rcx,[rsp+0x30]
   140016921:	mov    dl,0x20
   140016923:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016929:	call   0x140014950
   14001692e:	lea    rdx,[rbp-0x51]
   140016932:	lea    rcx,[rsp+0x30]
   140016937:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001693c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016942:	call   0x140014910
   140016947:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001694c:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140016951:	test   r12,r12
   140016954:	je     0x14001698b
   140016956:	lea    rcx,[rsp+0x30]
   14001695b:	mov    dl,0x20
   14001695d:	movdqa XMMWORD PTR [rsp+0x30],xmm6
   140016963:	call   0x140014950
   140016968:	lea    rdx,[rbp-0x71]
   14001696c:	lea    rcx,[rsp+0x30]
   140016971:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016976:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001697c:	call   0x140014910
   140016981:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016986:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   14001698b:	xor    r12d,r12d
   14001698e:	test   dil,0x10
   140016992:	je     0x140016a87
   140016998:	cmp    DWORD PTR [rbp+0x7f],r12d
   14001699c:	je     0x1400169ab
   14001699e:	mov    edx,0x2
   1400169a3:	mov    rcx,rbx
   1400169a6:	jmp    0x140016ceb
   1400169ab:	cmp    BYTE PTR [r14],r12b
   1400169ae:	je     0x140016a25
   1400169b0:	lea    rdx,[rip+0x1d2fd]        # 0x140033cb4
   1400169b7:	lea    rcx,[rbp-0x61]
   1400169bb:	call   0x14001409c
   1400169c0:	lea    rdx,[rbp-0x71]
   1400169c4:	lea    rcx,[rsp+0x30]
   1400169c9:	movups xmm0,XMMWORD PTR [rax]
   1400169cc:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400169d2:	call   0x140014910
   1400169d7:	mov    rax,QWORD PTR [rip+0x284da]        # 0x14003eeb8
   1400169de:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400169e3:	lea    rcx,[rbp-0x61]
   1400169e7:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400169ec:	cmp    BYTE PTR [rax],r12b
   1400169ef:	je     0x1400169f8
   1400169f1:	call   0x140018c20
   1400169f6:	jmp    0x140016a02
   1400169f8:	mov    edx,0x1
   1400169fd:	call   0x1400140e4
   140016a02:	movups xmm0,XMMWORD PTR [rax]
   140016a05:	lea    rdx,[rbp-0x71]
   140016a09:	lea    rcx,[rsp+0x30]
   140016a0e:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016a14:	call   0x140014910
   140016a19:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016a1e:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140016a23:	jmp    0x140016a58
   140016a25:	mov    rax,QWORD PTR [rip+0x2848c]        # 0x14003eeb8
   140016a2c:	cmp    BYTE PTR [rax],r12b
   140016a2f:	je     0x140016a79
   140016a31:	lea    rcx,[rbp-0x61]
   140016a35:	call   0x140018c20
   140016a3a:	cmp    BYTE PTR [rbp-0x69],0x3
   140016a3e:	je     0x140016a58
   140016a40:	cmp    BYTE PTR [rax+0x8],0x1
   140016a44:	jle    0x140016a58
   140016a46:	mov    ecx,DWORD PTR [rbp-0x69]
   140016a49:	movzx  eax,BYTE PTR [rax+0x8]
   140016a4d:	and    ecx,0xffffff00
   140016a53:	or     ecx,eax
   140016a55:	mov    DWORD PTR [rbp-0x69],ecx
   140016a58:	mov    rax,QWORD PTR [rip+0x28459]        # 0x14003eeb8
   140016a5f:	mov    cl,BYTE PTR [rax]
   140016a61:	test   cl,cl
   140016a63:	je     0x140016a79
   140016a65:	inc    rax
   140016a68:	mov    QWORD PTR [rip+0x28449],rax        # 0x14003eeb8
   140016a6f:	cmp    cl,0x40
   140016a72:	je     0x140016a87
   140016a74:	jmp    0x14001699e
   140016a79:	lea    rcx,[rbp-0x71]
   140016a7d:	mov    edx,0x1
   140016a82:	call   0x140014af8
   140016a87:	mov    eax,DWORD PTR [rip+0x28447]        # 0x14003eed4
   140016a8d:	shr    eax,1
   140016a8f:	not    eax
   140016a91:	test   al,0x1
   140016a93:	mov    eax,edi
   140016a95:	je     0x140016ad4
   140016a97:	and    eax,0xc
   140016a9a:	cmp    al,0xc
   140016a9c:	jne    0x140016b02
   140016a9e:	cmp    DWORD PTR [rbp+0x7f],r12d
   140016aa2:	jne    0x14001699e
   140016aa8:	lea    rcx,[rbp-0x61]
   140016aac:	call   0x140016034
   140016ab1:	lea    rdx,[rbp-0x71]
   140016ab5:	lea    rcx,[rsp+0x30]
   140016aba:	movups xmm0,XMMWORD PTR [rax]
   140016abd:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016ac3:	call   0x140014910
   140016ac8:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016acd:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140016ad2:	jmp    0x140016b02
   140016ad4:	and    eax,0xc
   140016ad7:	cmp    al,0xc
   140016ad9:	jne    0x140016b02
   140016adb:	lea    rcx,[rbp-0x61]
   140016adf:	call   0x140016034
   140016ae4:	cmp    BYTE PTR [rbp-0x69],0x3
   140016ae8:	je     0x140016b02
   140016aea:	cmp    BYTE PTR [rax+0x8],0x1
   140016aee:	jle    0x140016b02
   140016af0:	mov    ecx,DWORD PTR [rbp-0x69]
   140016af3:	movzx  eax,BYTE PTR [rax+0x8]
   140016af7:	and    ecx,0xffffff00
   140016afd:	or     ecx,eax
   140016aff:	mov    DWORD PTR [rbp-0x69],ecx
   140016b02:	test   dil,0x2
   140016b06:	je     0x140016b39
   140016b08:	lea    rdx,[rip+0x1d509]        # 0x140034018
   140016b0f:	lea    rcx,[rbp-0x61]
   140016b13:	call   0x14001409c
   140016b18:	lea    rdx,[rbp-0x71]
   140016b1c:	lea    rcx,[rsp+0x30]
   140016b21:	movups xmm0,XMMWORD PTR [rax]
   140016b24:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016b2a:	call   0x140014910
   140016b2f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016b34:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140016b39:	test   dil,0x1
   140016b3d:	je     0x140016b70
   140016b3f:	lea    rdx,[rip+0x1d4de]        # 0x140034024
   140016b46:	lea    rcx,[rbp-0x61]
   140016b4a:	call   0x14001409c
   140016b4f:	lea    rdx,[rbp-0x71]
   140016b53:	lea    rcx,[rsp+0x30]
   140016b58:	movups xmm0,XMMWORD PTR [rax]
   140016b5b:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016b61:	call   0x140014910
   140016b66:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016b6b:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140016b70:	mov    edi,0x100
   140016b75:	cmp    DWORD PTR [rbp+0x7f],r12d
   140016b79:	jne    0x140016c2d
   140016b7f:	cmp    QWORD PTR [rsi],r12
   140016b82:	je     0x140016bf9
   140016b84:	test   DWORD PTR [rsi+0x8],edi
   140016b87:	jne    0x140016bd6
   140016b89:	cmp    QWORD PTR [r15],r12
   140016b8c:	je     0x140016bd6
   140016b8e:	lea    rcx,[rbp-0x61]
   140016b92:	mov    dl,0x20
   140016b94:	call   0x140013fdc
   140016b99:	lea    rcx,[rsp+0x30]
   140016b9e:	mov    rdx,r15
   140016ba1:	movups xmm0,XMMWORD PTR [rax]
   140016ba4:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016baa:	call   0x140014910
   140016baf:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016bb4:	lea    rcx,[rsp+0x30]
   140016bb9:	mov    dl,0x20
   140016bbb:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016bc1:	call   0x140014950
   140016bc6:	mov    rdx,rsi
   140016bc9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016bce:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016bd4:	jmp    0x140016c15
   140016bd6:	test   DWORD PTR [rsi+0x8],0x800
   140016bdd:	je     0x140016be9
   140016bdf:	movups xmm0,XMMWORD PTR [rsi]
   140016be2:	movdqu XMMWORD PTR [rbp-0x71],xmm0
   140016be7:	jmp    0x140016c2d
   140016be9:	lea    rcx,[rbp-0x61]
   140016bed:	mov    dl,0x20
   140016bef:	call   0x140013fdc
   140016bf4:	mov    rdx,rsi
   140016bf7:	jmp    0x140016c0c
   140016bf9:	cmp    QWORD PTR [r15],r12
   140016bfc:	je     0x140016c2d
   140016bfe:	lea    rcx,[rbp-0x61]
   140016c02:	mov    dl,0x20
   140016c04:	call   0x140013fdc
   140016c09:	mov    rdx,r15
   140016c0c:	movups xmm0,XMMWORD PTR [rax]
   140016c0f:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016c15:	lea    rcx,[rsp+0x30]
   140016c1a:	call   0x140014910
   140016c1f:	lea    rdx,[rsp+0x30]
   140016c24:	lea    rcx,[rbp-0x71]
   140016c28:	call   0x140014910
   140016c2d:	or     DWORD PTR [rbp-0x69],edi
   140016c30:	cmp    BYTE PTR [rsp+0x20],r12b
   140016c35:	je     0x140016c3c
   140016c37:	bts    DWORD PTR [rbp-0x69],0xd
   140016c3c:	movaps xmm0,XMMWORD PTR [rbp-0x71]
   140016c40:	jmp    0x140016698
   140016c45:	movups xmm0,XMMWORD PTR [rbp-0x61]
   140016c49:	jmp    0x140016698
   140016c4e:	cmp    DWORD PTR [rbp+0x7f],r14d
   140016c52:	jne    0x140016ce6
   140016c58:	cmp    QWORD PTR [rsi],r14
   140016c5b:	je     0x140016ccb
   140016c5d:	mov    edi,0x100
   140016c62:	test   DWORD PTR [rsi+0x8],edi
   140016c65:	jne    0x140016cb8
   140016c67:	cmp    QWORD PTR [r9],r14
   140016c6a:	je     0x140016cb8
   140016c6c:	lea    rcx,[rsp+0x30]
   140016c71:	mov    edx,0x1
   140016c76:	call   0x1400140e4
   140016c7b:	lea    rcx,[rbp-0x61]
   140016c7f:	mov    rdx,r15
   140016c82:	movups xmm0,XMMWORD PTR [rax]
   140016c85:	movdqu XMMWORD PTR [rbp-0x61],xmm0
   140016c8a:	call   0x140014910
   140016c8f:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   140016c93:	lea    rcx,[rbp-0x61]
   140016c97:	mov    dl,0x20
   140016c99:	movdqa XMMWORD PTR [rbp-0x61],xmm0
   140016c9e:	call   0x140014950
   140016ca3:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   140016ca7:	mov    rdx,rsi
   140016caa:	mov    rcx,rbx
   140016cad:	movdqu XMMWORD PTR [rbx],xmm0
   140016cb1:	call   0x140014910
   140016cb6:	jmp    0x140016cf0
   140016cb8:	lea    rcx,[rbp-0x61]
   140016cbc:	mov    edx,0x1
   140016cc1:	call   0x1400140e4
   140016cc6:	movups xmm0,XMMWORD PTR [rax]
   140016cc9:	jmp    0x140016ca7
   140016ccb:	cmp    QWORD PTR [r9],r14
   140016cce:	je     0x140016ce6
   140016cd0:	lea    rcx,[rbp-0x61]
   140016cd4:	mov    edx,0x1
   140016cd9:	call   0x1400140e4
   140016cde:	mov    rdx,r15
   140016ce1:	movups xmm0,XMMWORD PTR [rax]
   140016ce4:	jmp    0x140016caa
   140016ce6:	mov    edx,0x1
   140016ceb:	call   0x1400140e4
   140016cf0:	lea    r11,[rsp+0xe0]
   140016cf8:	mov    rax,rbx
   140016cfb:	mov    rbx,QWORD PTR [r11+0x30]
   140016cff:	mov    rsi,QWORD PTR [r11+0x38]
   140016d03:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140016d08:	mov    rsp,r11
   140016d0b:	pop    r15
   140016d0d:	pop    r14
   140016d0f:	pop    r12
   140016d11:	pop    rdi
   140016d12:	pop    rbp
   140016d13:	ret    
   140016d14:	mov    r11,rsp
   140016d17:	push   rbx
   140016d18:	sub    rsp,0x50
   140016d1c:	mov    rbx,rcx
   140016d1f:	xor    ecx,ecx
   140016d21:	mov    eax,0xffff0000
   140016d26:	mov    QWORD PTR [r11-0x28],rcx
   140016d2a:	and    DWORD PTR [rsp+0x38],eax
   140016d2e:	mov    QWORD PTR [r11-0x18],rcx
   140016d32:	and    DWORD PTR [rsp+0x48],eax
   140016d36:	mov    DWORD PTR [rsp+0x20],ecx
   140016d3a:	lea    r9,[r11-0x28]
   140016d3e:	lea    r8,[rip+0x18d3f]        # 0x14002fa84
   140016d45:	lea    rdx,[r11-0x18]
   140016d49:	mov    rcx,rbx
   140016d4c:	call   0x140016620
   140016d51:	mov    rax,rbx
   140016d54:	add    rsp,0x50
   140016d58:	pop    rbx
   140016d59:	ret    
   140016d5a:	int3   
   140016d5b:	int3   
   140016d5c:	mov    QWORD PTR [rsp+0x8],rbx
   140016d61:	push   rbp
   140016d62:	mov    rbp,rsp
   140016d65:	sub    rsp,0x60
   140016d69:	mov    rbx,rcx
   140016d6c:	lea    rcx,[rbp-0x30]
   140016d70:	call   0x140014014
   140016d75:	mov    rax,QWORD PTR [rip+0x2813c]        # 0x14003eeb8
   140016d7c:	xor    ecx,ecx
   140016d7e:	cmp    BYTE PTR [rax],cl
   140016d80:	je     0x140016e0f
   140016d86:	cmp    BYTE PTR [rax],0x3f
   140016d89:	je     0x140016dd4
   140016d8b:	cmp    BYTE PTR [rax],0x58
   140016d8e:	je     0x140016da1
   140016d90:	lea    rdx,[rbp-0x30]
   140016d94:	mov    rcx,rbx
   140016d97:	call   0x140018658
   140016d9c:	jmp    0x140016e30
   140016da1:	inc    rax
   140016da4:	mov    QWORD PTR [rip+0x2810d],rax        # 0x14003eeb8
   140016dab:	cmp    QWORD PTR [rbp-0x30],rcx
   140016daf:	jne    0x140016dc2
   140016db1:	lea    rdx,[rip+0x1cf70]        # 0x140033d28
   140016db8:	mov    rcx,rbx
   140016dbb:	call   0x14001409c
   140016dc0:	jmp    0x140016e30
   140016dc2:	lea    rdx,[rip+0x1d0eb]        # 0x140033eb4
   140016dc9:	lea    rcx,[rbp-0x20]
   140016dcd:	call   0x14001409c
   140016dd2:	jmp    0x140016e1d
   140016dd4:	and    DWORD PTR [rbp-0x18],0xffff0000
   140016ddb:	mov    QWORD PTR [rbp-0x20],rcx
   140016ddf:	mov    DWORD PTR [rsp+0x20],ecx
   140016de3:	inc    rax
   140016de6:	lea    rcx,[rbp-0x10]
   140016dea:	lea    r9,[rbp-0x20]
   140016dee:	lea    r8,[rip+0x18c8f]        # 0x14002fa84
   140016df5:	lea    rdx,[rbp-0x30]
   140016df9:	mov    QWORD PTR [rip+0x280b8],rax        # 0x14003eeb8
   140016e00:	call   0x140016620
   140016e05:	movups xmm0,XMMWORD PTR [rax]
   140016e08:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140016e0d:	jmp    0x140016d90
   140016e0f:	lea    rcx,[rbp-0x20]
   140016e13:	mov    edx,0x1
   140016e18:	call   0x1400140e4
   140016e1d:	movups xmm0,XMMWORD PTR [rax]
   140016e20:	lea    rdx,[rbp-0x30]
   140016e24:	mov    rcx,rbx
   140016e27:	movdqu XMMWORD PTR [rbx],xmm0
   140016e2b:	call   0x140014910
   140016e30:	mov    rax,rbx
   140016e33:	mov    rbx,QWORD PTR [rsp+0x70]
   140016e38:	add    rsp,0x60
   140016e3c:	pop    rbp
   140016e3d:	ret    
   140016e3e:	int3   
   140016e3f:	int3   
   140016e40:	mov    QWORD PTR [rsp+0x8],rbx
   140016e45:	mov    QWORD PTR [rsp+0x20],rsi
   140016e4a:	push   rbp
   140016e4b:	mov    rbp,rsp
   140016e4e:	sub    rsp,0x50
   140016e52:	mov    eax,DWORD PTR [rip+0x2807c]        # 0x14003eed4
   140016e58:	mov    rbx,rcx
   140016e5b:	bt     eax,0xd
   140016e5f:	jae    0x140016e8b
   140016e61:	btr    eax,0xd
   140016e65:	lea    rcx,[rbp-0x10]
   140016e69:	xor    edx,edx
   140016e6b:	mov    DWORD PTR [rip+0x28063],eax        # 0x14003eed4
   140016e71:	call   0x140016d5c
   140016e76:	bts    DWORD PTR [rip+0x28056],0xd        # 0x14003eed4
   140016e7e:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140016e82:	movdqu XMMWORD PTR [rbx],xmm0
   140016e86:	jmp    0x14001709f
   140016e8b:	mov    rax,QWORD PTR [rip+0x28026]        # 0x14003eeb8
   140016e92:	mov    dl,0x3f
   140016e94:	mov    cl,BYTE PTR [rax]
   140016e96:	cmp    cl,dl
   140016e98:	jne    0x140017089
   140016e9e:	inc    rax
   140016ea1:	mov    QWORD PTR [rip+0x28010],rax        # 0x14003eeb8
   140016ea8:	cmp    BYTE PTR [rax],dl
   140016eaa:	jne    0x140016efb
   140016eac:	inc    rax
   140016eaf:	cmp    BYTE PTR [rax],dl
   140016eb1:	jne    0x140016ed6
   140016eb3:	lea    rcx,[rbp-0x10]
   140016eb7:	call   0x140016e40
   140016ebc:	mov    rax,QWORD PTR [rip+0x27ff5]        # 0x14003eeb8
   140016ec3:	jmp    0x140016ecf
   140016ec5:	inc    rax
   140016ec8:	mov    QWORD PTR [rip+0x27fe9],rax        # 0x14003eeb8
   140016ecf:	cmp    BYTE PTR [rax],0x0
   140016ed2:	jne    0x140016ec5
   140016ed4:	jmp    0x140016e7e
   140016ed6:	cmp    BYTE PTR [rax],0x24
   140016ed9:	lea    rcx,[rbp-0x30]
   140016edd:	jne    0x140016ee8
   140016edf:	mov    dl,0x1
   140016ee1:	call   0x140019c20
   140016ee6:	jmp    0x140016f09
   140016ee8:	xor    r8d,r8d
   140016eeb:	xor    edx,edx
   140016eed:	mov    QWORD PTR [rip+0x27fc4],rax        # 0x14003eeb8
   140016ef4:	call   0x140017f3c
   140016ef9:	jmp    0x140016f09
   140016efb:	lea    rcx,[rbp-0x30]
   140016eff:	xor    r8d,r8d
   140016f02:	mov    dl,0x1
   140016f04:	call   0x14001a66c
   140016f09:	cmp    QWORD PTR [rbp-0x30],0x0
   140016f0e:	mov    esi,DWORD PTR [rbp-0x28]
   140016f11:	je     0x140016f22
   140016f13:	bt     esi,0x9
   140016f17:	jae    0x140016f22
   140016f19:	mov    DWORD PTR [rbp+0x20],0x1
   140016f20:	jmp    0x140016f26
   140016f22:	and    DWORD PTR [rbp+0x20],0x0
   140016f26:	mov    ecx,esi
   140016f28:	shr    ecx,0xf
   140016f2b:	and    ecx,0x1
   140016f2e:	cmp    BYTE PTR [rbp-0x28],0x1
   140016f32:	mov    DWORD PTR [rbp+0x18],ecx
   140016f35:	jle    0x140016f40
   140016f37:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140016f3b:	jmp    0x140016e82
   140016f40:	mov    rax,QWORD PTR [rip+0x27f71]        # 0x14003eeb8
   140016f47:	test   BYTE PTR [rax],0xbf
   140016f4a:	je     0x140016ff0
   140016f50:	lea    rcx,[rbp-0x20]
   140016f54:	call   0x140018c20
   140016f59:	cmp    QWORD PTR [rbp-0x20],0x0
   140016f5e:	je     0x140016fed
   140016f64:	cmp    BYTE PTR [rip+0x27f6d],0x0        # 0x14003eed8
   140016f6b:	lea    rcx,[rbp-0x10]
   140016f6f:	je     0x140016fb6
   140016f71:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140016f75:	lea    rdx,[rbp-0x20]
   140016f79:	mov    BYTE PTR [rip+0x27f58],0x0        # 0x14003eed8
   140016f80:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140016f85:	call   0x140014910
   140016f8a:	mov    rax,QWORD PTR [rip+0x27f27]        # 0x14003eeb8
   140016f91:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140016f95:	cmp    BYTE PTR [rax],0x40
   140016f98:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140016f9d:	je     0x140016fea
   140016f9f:	lea    rcx,[rbp-0x10]
   140016fa3:	call   0x140018c20
   140016fa8:	lea    rcx,[rbp-0x10]
   140016fac:	movups xmm0,XMMWORD PTR [rax]
   140016faf:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140016fb4:	jmp    0x140016fbf
   140016fb6:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016fba:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140016fbf:	lea    rdx,[rip+0x1ccee]        # 0x140033cb4
   140016fc6:	call   0x140014a6c
   140016fcb:	lea    rdx,[rbp-0x30]
   140016fcf:	lea    rcx,[rbp-0x10]
   140016fd3:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140016fd7:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140016fdc:	call   0x140014910
   140016fe1:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140016fe5:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140016fea:	mov    esi,DWORD PTR [rbp-0x28]
   140016fed:	mov    ecx,DWORD PTR [rbp+0x18]
   140016ff0:	mov    edx,DWORD PTR [rbp+0x20]
   140016ff3:	test   edx,edx
   140016ff5:	je     0x140017005
   140016ff7:	cmp    QWORD PTR [rbp-0x30],0x0
   140016ffc:	je     0x140017005
   140016ffe:	bts    esi,0x9
   140017002:	mov    DWORD PTR [rbp-0x28],esi
   140017005:	mov    r8d,0x8000
   14001700b:	test   ecx,ecx
   14001700d:	je     0x140017015
   14001700f:	or     esi,r8d
   140017012:	mov    DWORD PTR [rbp-0x28],esi
   140017015:	cmp    QWORD PTR [rbp-0x30],0x0
   14001701a:	je     0x140016f37
   140017020:	mov    ecx,0x1000
   140017025:	test   ecx,esi
   140017027:	jne    0x140016f37
   14001702d:	mov    rax,QWORD PTR [rip+0x27e84]        # 0x14003eeb8
   140017034:	cmp    BYTE PTR [rax],0x0
   140017037:	je     0x14001704c
   140017039:	cmp    BYTE PTR [rax],0x40
   14001703c:	je     0x140017045
   14001703e:	mov    edx,0x2
   140017043:	jmp    0x140017097
   140017045:	inc    QWORD PTR [rip+0x27e6c]        # 0x14003eeb8
   14001704c:	test   DWORD PTR [rip+0x27e82],ecx        # 0x14003eed4
   140017052:	je     0x14001707b
   140017054:	test   edx,edx
   140017056:	jne    0x14001707b
   140017058:	test   r8d,esi
   14001705b:	jne    0x14001707b
   14001705d:	and    QWORD PTR [rbp-0x20],0x0
   140017062:	and    DWORD PTR [rbp-0x18],0xffff0000
   140017069:	lea    rdx,[rbp-0x20]
   14001706d:	lea    rcx,[rbp-0x10]
   140017071:	call   0x140014c8c
   140017076:	jmp    0x140016f37
   14001707b:	lea    rdx,[rbp-0x30]
   14001707f:	mov    rcx,rbx
   140017082:	call   0x140014c8c
   140017087:	jmp    0x14001709f
   140017089:	mov    edx,0x2
   14001708e:	test   cl,cl
   140017090:	jne    0x140017097
   140017092:	mov    edx,0x1
   140017097:	mov    rcx,rbx
   14001709a:	call   0x1400140e4
   14001709f:	mov    rsi,QWORD PTR [rsp+0x78]
   1400170a4:	mov    rax,rbx
   1400170a7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400170ac:	add    rsp,0x50
   1400170b0:	pop    rbp
   1400170b1:	ret    
   1400170b2:	int3   
   1400170b3:	int3   
   1400170b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400170b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400170be:	mov    QWORD PTR [rsp+0x18],rdi
   1400170c3:	push   rbp
   1400170c4:	mov    rbp,rsp
   1400170c7:	sub    rsp,0x60
   1400170cb:	mov    r8,QWORD PTR [rip+0x27de6]        # 0x14003eeb8
   1400170d2:	xor    esi,esi
   1400170d4:	mov    r9b,dl
   1400170d7:	cmp    BYTE PTR [r8],0x51
   1400170db:	mov    rdi,rcx
   1400170de:	lea    r10d,[rsi+0x1]
   1400170e2:	jne    0x1400170f5
   1400170e4:	add    r8,r10
   1400170e7:	lea    rsi,[rip+0x1cc1a]        # 0x140033d08
   1400170ee:	mov    QWORD PTR [rip+0x27dc3],r8        # 0x14003eeb8
   1400170f5:	mov    cl,BYTE PTR [r8]
   1400170f8:	test   cl,cl
   1400170fa:	jne    0x14001710c
   1400170fc:	mov    edx,r10d
   1400170ff:	mov    rcx,rdi
   140017102:	call   0x1400140e4
   140017107:	jmp    0x1400171f7
   14001710c:	lea    eax,[rcx-0x30]
   14001710f:	cmp    al,0x9
   140017111:	ja     0x14001713d
   140017113:	add    r8,r10
   140017116:	movsx  eax,cl
   140017119:	sub    eax,0x2f
   14001711c:	mov    QWORD PTR [rip+0x27d95],r8        # 0x14003eeb8
   140017123:	movsxd rdx,eax
   140017126:	test   rsi,rsi
   140017129:	je     0x140017134
   14001712b:	lea    rcx,[rbp-0x30]
   14001712f:	jmp    0x1400171b9
   140017134:	lea    rcx,[rbp-0x10]
   140017138:	jmp    0x1400171eb
   14001713d:	xor    edx,edx
   14001713f:	mov    r11b,0x40
   140017142:	jmp    0x14001716f
   140017144:	test   cl,cl
   140017146:	je     0x1400170fc
   140017148:	lea    eax,[rcx-0x41]
   14001714b:	cmp    al,0xf
   14001714d:	ja     0x14001719b
   14001714f:	movsx  eax,cl
   140017152:	shl    rdx,0x4
   140017156:	sub    eax,0x41
   140017159:	movsxd rcx,eax
   14001715c:	add    rcx,rdx
   14001715f:	add    r8,r10
   140017162:	mov    QWORD PTR [rip+0x27d4f],r8        # 0x14003eeb8
   140017169:	mov    rdx,rcx
   14001716c:	mov    cl,BYTE PTR [r8]
   14001716f:	cmp    cl,r11b
   140017172:	jne    0x140017144
   140017174:	mov    al,BYTE PTR [r8]
   140017177:	add    r8,r10
   14001717a:	mov    QWORD PTR [rip+0x27d37],r8        # 0x14003eeb8
   140017181:	cmp    al,r11b
   140017184:	jne    0x14001719b
   140017186:	test   r9b,r9b
   140017189:	je     0x1400171b0
   14001718b:	test   rsi,rsi
   14001718e:	je     0x1400171a5
   140017190:	lea    rcx,[rbp-0x10]
   140017194:	call   0x140014148
   140017199:	jmp    0x1400171be
   14001719b:	mov    edx,0x2
   1400171a0:	jmp    0x1400170ff
   1400171a5:	lea    rcx,[rbp-0x30]
   1400171a9:	call   0x140014148
   1400171ae:	jmp    0x1400171f0
   1400171b0:	test   rsi,rsi
   1400171b3:	je     0x1400171e7
   1400171b5:	lea    rcx,[rbp-0x10]
   1400171b9:	call   0x1400141f4
   1400171be:	lea    rcx,[rbp-0x20]
   1400171c2:	mov    rdx,rsi
   1400171c5:	mov    rbx,rax
   1400171c8:	call   0x14001409c
   1400171cd:	lea    rcx,[rbp-0x40]
   1400171d1:	mov    rdx,rbx
   1400171d4:	movups xmm0,XMMWORD PTR [rax]
   1400171d7:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   1400171dc:	call   0x140014910
   1400171e1:	lea    rax,[rbp-0x40]
   1400171e5:	jmp    0x1400171f0
   1400171e7:	lea    rcx,[rbp-0x30]
   1400171eb:	call   0x1400141f4
   1400171f0:	movups xmm0,XMMWORD PTR [rax]
   1400171f3:	movdqu XMMWORD PTR [rdi],xmm0
   1400171f7:	lea    r11,[rsp+0x60]
   1400171fc:	mov    rax,rdi
   1400171ff:	mov    rbx,QWORD PTR [r11+0x10]
   140017203:	mov    rsi,QWORD PTR [r11+0x18]
   140017207:	mov    rdi,QWORD PTR [r11+0x20]
   14001720b:	mov    rsp,r11
   14001720e:	pop    rbp
   14001720f:	ret    
   140017210:	rex push rbx
   140017212:	sub    rsp,0x20
   140017216:	mov    rbx,rcx
   140017219:	mov    rcx,QWORD PTR [rip+0x27c98]        # 0x14003eeb8
   140017220:	cmp    BYTE PTR [rcx],0x5f
   140017223:	jne    0x14001725a
   140017225:	cmp    BYTE PTR [rcx+0x1],0x5f
   140017229:	jne    0x14001725a
   14001722b:	add    rcx,0x2
   14001722f:	mov    QWORD PTR [rip+0x27c82],rcx        # 0x14003eeb8
   140017236:	movsx  eax,BYTE PTR [rcx]
   140017239:	inc    rcx
   14001723c:	sub    eax,0x41
   14001723f:	mov    QWORD PTR [rip+0x27c72],rcx        # 0x14003eeb8
   140017246:	cmp    eax,0x3
   140017249:	jbe    0x14001725a
   14001724b:	mov    edx,0x2
   140017250:	mov    rcx,rbx
   140017253:	call   0x1400140e4
   140017258:	jmp    0x140017269
   14001725a:	and    QWORD PTR [rbx],0x0
   14001725e:	mov    BYTE PTR [rbx+0x8],0x0
   140017262:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140017269:	mov    rax,rbx
   14001726c:	add    rsp,0x20
   140017270:	pop    rbx
   140017271:	ret    
   140017272:	int3   
   140017273:	int3   
   140017274:	rex push rbx
   140017276:	sub    rsp,0x20
   14001727a:	mov    dl,0x1
   14001727c:	mov    rbx,rcx
   14001727f:	call   0x1400170b4
   140017284:	mov    rax,rbx
   140017287:	add    rsp,0x20
   14001728b:	pop    rbx
   14001728c:	ret    
   14001728d:	int3   
   14001728e:	int3   
   14001728f:	int3   
   140017290:	mov    QWORD PTR [rsp+0x8],rbx
   140017295:	mov    QWORD PTR [rsp+0x10],rsi
   14001729a:	mov    QWORD PTR [rsp+0x18],rdi
   14001729f:	push   rbp
   1400172a0:	mov    rbp,rsp
   1400172a3:	sub    rsp,0x60
   1400172a7:	mov    eax,DWORD PTR [rip+0x27c27]        # 0x14003eed4
   1400172ad:	mov    rdi,rcx
   1400172b0:	mov    r8d,eax
   1400172b3:	shr    r8d,0xf
   1400172b7:	not    r8d
   1400172ba:	and    r8d,0x1
   1400172be:	je     0x1400172cd
   1400172c0:	bt     eax,0xc
   1400172c4:	jb     0x1400172cd
   1400172c6:	mov    esi,0x1
   1400172cb:	jmp    0x1400172cf
   1400172cd:	xor    esi,esi
   1400172cf:	mov    rdx,QWORD PTR [rip+0x27be2]        # 0x14003eeb8
   1400172d6:	and    QWORD PTR [rbp-0x40],0x0
   1400172db:	and    DWORD PTR [rbp-0x38],0xffff0000
   1400172e2:	movsx  ecx,BYTE PTR [rdx]
   1400172e5:	inc    rdx
   1400172e8:	mov    QWORD PTR [rip+0x27bc9],rdx        # 0x14003eeb8
   1400172ef:	test   ecx,ecx
   1400172f1:	je     0x1400173bb
   1400172f7:	sub    ecx,0x54
   1400172fa:	je     0x140017372
   1400172fc:	dec    ecx
   1400172fe:	je     0x140017369
   140017300:	dec    ecx
   140017302:	je     0x140017360
   140017304:	dec    ecx
   140017306:	je     0x140017322
   140017308:	dec    ecx
   14001730a:	je     0x140017319
   14001730c:	dec    ecx
   14001730e:	jne    0x140017382
   140017310:	lea    rdx,[rip+0x1cce9]        # 0x140034000
   140017317:	jmp    0x140017379
   140017319:	lea    rdx,[rip+0x1ccd0]        # 0x140033ff0
   140017320:	jmp    0x140017379
   140017322:	lea    rcx,[rbp-0x20]
   140017326:	mov    esi,r8d
   140017329:	call   0x140017408
   14001732e:	lea    rdx,[rip+0x1ccdb]        # 0x140034010
   140017335:	lea    rcx,[rbp-0x10]
   140017339:	mov    rbx,rax
   14001733c:	call   0x14001409c
   140017341:	lea    rcx,[rbp-0x30]
   140017345:	mov    rdx,rbx
   140017348:	movups xmm0,XMMWORD PTR [rax]
   14001734b:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140017350:	call   0x140014910
   140017355:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140017359:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   14001735e:	jmp    0x140017382
   140017360:	lea    rdx,[rip+0x1cc81]        # 0x140033fe8
   140017367:	jmp    0x140017379
   140017369:	lea    rdx,[rip+0x1cc70]        # 0x140033fe0
   140017370:	jmp    0x140017379
   140017372:	lea    rdx,[rip+0x1cc5f]        # 0x140033fd8
   140017379:	lea    rcx,[rbp-0x40]
   14001737d:	call   0x1400144f0
   140017382:	and    QWORD PTR [rbp-0x30],0x0
   140017387:	and    DWORD PTR [rbp-0x28],0xffff0000
   14001738e:	test   esi,esi
   140017390:	je     0x14001739b
   140017392:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140017396:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001739b:	lea    rcx,[rbp-0x40]
   14001739f:	call   0x140019114
   1400173a4:	lea    rdx,[rbp-0x40]
   1400173a8:	lea    rcx,[rbp-0x30]
   1400173ac:	call   0x140014910
   1400173b1:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400173b5:	movdqu XMMWORD PTR [rdi],xmm0
   1400173b9:	jmp    0x1400173d4
   1400173bb:	dec    rdx
   1400173be:	mov    rcx,rdi
   1400173c1:	mov    QWORD PTR [rip+0x27af0],rdx        # 0x14003eeb8
   1400173c8:	lea    rdx,[rip+0x1cbfa]        # 0x140033fc9
   1400173cf:	call   0x14001409c
   1400173d4:	lea    r11,[rsp+0x60]
   1400173d9:	mov    rax,rdi
   1400173dc:	mov    rbx,QWORD PTR [r11+0x10]
   1400173e0:	mov    rsi,QWORD PTR [r11+0x18]
   1400173e4:	mov    rdi,QWORD PTR [r11+0x20]
   1400173e8:	mov    rsp,r11
   1400173eb:	pop    rbp
   1400173ec:	ret    
   1400173ed:	int3   
   1400173ee:	int3   
   1400173ef:	int3   
   1400173f0:	rex push rbx
   1400173f2:	sub    rsp,0x20
   1400173f6:	mov    rbx,rcx
   1400173f9:	call   0x140019114
   1400173fe:	mov    rax,rbx
   140017401:	add    rsp,0x20
   140017405:	pop    rbx
   140017406:	ret    
   140017407:	int3   
   140017408:	mov    QWORD PTR [rsp+0x8],rbx
   14001740d:	push   rbp
   14001740e:	mov    rbp,rsp
   140017411:	sub    rsp,0x50
   140017415:	mov    rax,QWORD PTR [rip+0x27a9c]        # 0x14003eeb8
   14001741c:	and    QWORD PTR [rbp-0x30],0x0
   140017421:	and    DWORD PTR [rbp-0x28],0xffff0000
   140017428:	cmp    BYTE PTR [rax],0x0
   14001742b:	mov    rbx,rcx
   14001742e:	je     0x1400174d6
   140017434:	mov    al,BYTE PTR [rax]
   140017436:	cmp    al,0x30
   140017438:	jl     0x1400174cf
   14001743e:	cmp    al,0x31
   140017440:	jle    0x14001746f
   140017442:	cmp    al,0x33
   140017444:	jle    0x140017466
   140017446:	cmp    al,0x34
   140017448:	je     0x14001747f
   14001744a:	cmp    al,0x35
   14001744c:	je     0x14001745d
   14001744e:	sub    al,0x36
   140017450:	cmp    al,0x1
   140017452:	ja     0x1400174cf
   140017454:	lea    rdx,[rip+0x1ca45]        # 0x140033ea0
   14001745b:	jmp    0x140017476
   14001745d:	lea    rdx,[rip+0x1ca34]        # 0x140033e98
   140017464:	jmp    0x140017476
   140017466:	lea    rdx,[rip+0x1ca23]        # 0x140033e90
   14001746d:	jmp    0x140017476
   14001746f:	lea    rdx,[rip+0x1ca12]        # 0x140033e88
   140017476:	lea    rcx,[rbp-0x30]
   14001747a:	call   0x1400144f0
   14001747f:	mov    rax,QWORD PTR [rip+0x27a32]        # 0x14003eeb8
   140017486:	movsx  eax,BYTE PTR [rax]
   140017489:	inc    QWORD PTR [rip+0x27a28]        # 0x14003eeb8
   140017490:	add    eax,0xffffffcf
   140017493:	test   eax,0xfffffff9
   140017498:	jne    0x1400174c5
   14001749a:	lea    rdx,[rip+0x1ca07]        # 0x140033ea8
   1400174a1:	lea    rcx,[rbp-0x10]
   1400174a5:	call   0x14001409c
   1400174aa:	lea    rdx,[rbp-0x30]
   1400174ae:	lea    rcx,[rbp-0x20]
   1400174b2:	movups xmm0,XMMWORD PTR [rax]
   1400174b5:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   1400174ba:	call   0x140014910
   1400174bf:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400174c3:	jmp    0x1400174c9
   1400174c5:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400174c9:	movdqu XMMWORD PTR [rbx],xmm0
   1400174cd:	jmp    0x1400174e0
   1400174cf:	mov    edx,0x2
   1400174d4:	jmp    0x1400174db
   1400174d6:	mov    edx,0x1
   1400174db:	call   0x1400140e4
   1400174e0:	mov    rax,rbx
   1400174e3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400174e8:	add    rsp,0x50
   1400174ec:	pop    rbp
   1400174ed:	ret    
   1400174ee:	int3   
   1400174ef:	int3   
   1400174f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400174f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400174fa:	mov    QWORD PTR [rsp+0x18],r14
   1400174ff:	push   rbp
   140017500:	mov    rbp,rsp
   140017503:	sub    rsp,0x60
   140017507:	mov    r10d,DWORD PTR [rbp-0x28]
   14001750b:	and    QWORD PTR [rbp-0x30],0x0
   140017510:	mov    rbx,rcx
   140017513:	mov    rcx,QWORD PTR [rip+0x2799e]        # 0x14003eeb8
   14001751a:	mov    rsi,r8
   14001751d:	and    r10d,0xffff0000
   140017524:	mov    r14d,0x1
   14001752a:	mov    r11d,r9d
   14001752d:	mov    DWORD PTR [rbp-0x28],r10d
   140017531:	add    rcx,r14
   140017534:	mov    QWORD PTR [rip+0x2797d],rcx        # 0x14003eeb8
   14001753b:	movsx  r9d,BYTE PTR [rcx]
   14001753f:	mov    r8d,r9d
   140017542:	sub    r8d,0x41
   140017546:	je     0x1400176d2
   14001754c:	dec    r8d
   14001754f:	je     0x140017692
   140017555:	dec    r8d
   140017558:	je     0x140017686
   14001755e:	cmp    BYTE PTR [rcx],0x0
   140017561:	je     0x14001767e
   140017567:	mov    al,BYTE PTR [rcx+0x1]
   14001756a:	test   al,al
   14001756c:	je     0x14001767e
   140017572:	test   r11d,r11d
   140017575:	je     0x140017589
   140017577:	mov    edx,0x2
   14001757c:	mov    rcx,rbx
   14001757f:	call   0x1400140e4
   140017584:	jmp    0x140017722
   140017589:	shl    r9d,0x4
   14001758d:	add    rcx,0x2
   140017591:	movsx  esi,al
   140017594:	add    esi,0xfffffcd0
   14001759a:	mov    QWORD PTR [rip+0x27917],rcx        # 0x14003eeb8
   1400175a1:	add    esi,r9d
   1400175a4:	cmp    esi,r14d
   1400175a7:	jbe    0x1400175fa
   1400175a9:	and    QWORD PTR [rbp-0x30],0x0
   1400175ae:	and    r10d,0xffffff00
   1400175b5:	lea    rdx,[rbp-0x40]
   1400175b9:	and    r10d,0xffff00ff
   1400175c0:	lea    rcx,[rbp-0x30]
   1400175c4:	mov    r8d,r14d
   1400175c7:	mov    DWORD PTR [rbp-0x28],r10d
   1400175cb:	mov    BYTE PTR [rbp-0x40],0x2c
   1400175cf:	call   0x140015aa8
   1400175d4:	lea    rcx,[rbp-0x10]
   1400175d8:	mov    edx,esi
   1400175da:	call   0x1400141f4
   1400175df:	lea    rcx,[rbp-0x20]
   1400175e3:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400175e7:	mov    rdx,rax
   1400175ea:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   1400175ef:	call   0x140014910
   1400175f4:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400175f8:	jmp    0x1400175fe
   1400175fa:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400175fe:	lea    rcx,[rbp-0x20]
   140017602:	mov    dl,0x3e
   140017604:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140017609:	call   0x140014950
   14001760e:	mov    rax,QWORD PTR [rip+0x278a3]        # 0x14003eeb8
   140017615:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140017619:	cmp    BYTE PTR [rax],0x24
   14001761c:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140017621:	jne    0x14001762f
   140017623:	add    rax,r14
   140017626:	mov    QWORD PTR [rip+0x2788b],rax        # 0x14003eeb8
   14001762d:	jmp    0x14001764f
   14001762f:	lea    rcx,[rbp-0x20]
   140017633:	mov    dl,0x5e
   140017635:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   14001763a:	call   0x140014950
   14001763f:	mov    rax,QWORD PTR [rip+0x27872]        # 0x14003eeb8
   140017646:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14001764a:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001764f:	cmp    BYTE PTR [rax],0x0
   140017652:	je     0x140017660
   140017654:	add    rax,r14
   140017657:	mov    QWORD PTR [rip+0x2785a],rax        # 0x14003eeb8
   14001765e:	jmp    0x14001766c
   140017660:	lea    rcx,[rbp-0x30]
   140017664:	mov    edx,r14d
   140017667:	call   0x140014af8
   14001766c:	bts    DWORD PTR [rbp-0x28],0xe
   140017671:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140017675:	movdqu XMMWORD PTR [rbx],xmm0
   140017679:	jmp    0x140017722
   14001767e:	mov    edx,r14d
   140017681:	jmp    0x14001757c
   140017686:	lea    rax,[rip+0x1c0f3]        # 0x140033780
   14001768d:	mov    QWORD PTR [rdx],rax
   140017690:	jmp    0x1400176c9
   140017692:	test   r11d,r11d
   140017695:	jne    0x140017577
   14001769b:	and    QWORD PTR [rbp-0x30],0x0
   1400176a0:	and    r10d,0xffffff00
   1400176a7:	lea    rdx,[rbp-0x40]
   1400176ab:	and    r10d,0xffff00ff
   1400176b2:	lea    rcx,[rbp-0x30]
   1400176b6:	mov    r8d,r14d
   1400176b9:	mov    BYTE PTR [rsi],r14b
   1400176bc:	mov    BYTE PTR [rbp-0x40],0x3e
   1400176c0:	mov    DWORD PTR [rbp-0x28],r10d
   1400176c4:	call   0x140015aa8
   1400176c9:	add    QWORD PTR [rip+0x277e8],r14        # 0x14003eeb8
   1400176d0:	jmp    0x140017713
   1400176d2:	test   r11d,r11d
   1400176d5:	jne    0x140017709
   1400176d7:	mov    rax,QWORD PTR [rdx]
   1400176da:	cmp    BYTE PTR [rax],0x26
   1400176dd:	jne    0x1400176f0
   1400176df:	lea    rax,[rip+0x1c09a]        # 0x140033780
   1400176e6:	mov    QWORD PTR [rdx],rax
   1400176e9:	mov    rcx,QWORD PTR [rip+0x277c8]        # 0x14003eeb8
   1400176f0:	mov    rax,QWORD PTR [rdx]
   1400176f3:	cmp    BYTE PTR [rax],0x2a
   1400176f6:	jne    0x140017709
   1400176f8:	lea    rax,[rip+0x1c0a1]        # 0x1400337a0
   1400176ff:	mov    QWORD PTR [rdx],rax
   140017702:	mov    rcx,QWORD PTR [rip+0x277af]        # 0x14003eeb8
   140017709:	add    rcx,r14
   14001770c:	mov    QWORD PTR [rip+0x277a5],rcx        # 0x14003eeb8
   140017713:	and    QWORD PTR [rbx],0x0
   140017717:	mov    BYTE PTR [rbx+0x8],0x0
   14001771b:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140017722:	lea    r11,[rsp+0x60]
   140017727:	mov    rax,rbx
   14001772a:	mov    rbx,QWORD PTR [r11+0x10]
   14001772e:	mov    rsi,QWORD PTR [r11+0x18]
   140017732:	mov    r14,QWORD PTR [r11+0x20]
   140017736:	mov    rsp,r11
   140017739:	pop    rbp
   14001773a:	ret    
   14001773b:	int3   
   14001773c:	mov    QWORD PTR [rsp+0x8],rbx
   140017741:	mov    QWORD PTR [rsp+0x10],rsi
   140017746:	mov    QWORD PTR [rsp+0x18],rdi
   14001774b:	push   rbp
   14001774c:	mov    rbp,rsp
   14001774f:	sub    rsp,0x60
   140017753:	xor    r8d,r8d
   140017756:	mov    rsi,rdx
   140017759:	mov    rdi,rcx
   14001775c:	lea    edx,[r8+0x10]
   140017760:	lea    rcx,[rip+0x27779]        # 0x14003eee0
   140017767:	call   0x140017e18
   14001776c:	mov    rbx,rax
   14001776f:	test   rax,rax
   140017772:	je     0x140017785
   140017774:	and    QWORD PTR [rax],0x0
   140017778:	mov    BYTE PTR [rax+0x8],0x0
   14001777c:	and    DWORD PTR [rax+0x8],0xffff00ff
   140017783:	jmp    0x140017787
   140017785:	xor    ebx,ebx
   140017787:	mov    rdx,rbx
   14001778a:	mov    rcx,rdi
   14001778d:	call   0x140016d5c
   140017792:	and    QWORD PTR [rbp-0x30],0x0
   140017797:	and    QWORD PTR [rbp-0x20],0x0
   14001779c:	and    DWORD PTR [rsp+0x20],0x0
   1400177a1:	mov    eax,0xffff0000
   1400177a6:	lea    r9,[rbp-0x30]
   1400177aa:	and    DWORD PTR [rbp-0x28],eax
   1400177ad:	and    DWORD PTR [rbp-0x18],eax
   1400177b0:	lea    r8,[rip+0x182cd]        # 0x14002fa84
   1400177b7:	lea    rdx,[rbp-0x20]
   1400177bb:	lea    rcx,[rbp-0x10]
   1400177bf:	call   0x140016620
   1400177c4:	lea    rcx,[rbp-0x20]
   1400177c8:	mov    dl,0x20
   1400177ca:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   1400177ce:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   1400177d3:	call   0x140014950
   1400177d8:	lea    rcx,[rbp-0x20]
   1400177dc:	mov    rdx,rsi
   1400177df:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400177e3:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   1400177e8:	call   0x140014910
   1400177ed:	lea    r11,[rsp+0x60]
   1400177f2:	mov    rax,rdi
   1400177f5:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400177f9:	movdqu XMMWORD PTR [rbx],xmm0
   1400177fd:	mov    rbx,QWORD PTR [r11+0x10]
   140017801:	mov    rsi,QWORD PTR [r11+0x18]
   140017805:	mov    rdi,QWORD PTR [r11+0x20]
   140017809:	mov    rsp,r11
   14001780c:	pop    rbp
   14001780d:	ret    
   14001780e:	int3   
   14001780f:	int3   
   140017810:	mov    rax,rsp
   140017813:	mov    QWORD PTR [rax+0x8],rbx
   140017817:	mov    QWORD PTR [rax+0x10],rsi
   14001781b:	mov    QWORD PTR [rax+0x18],rdi
   14001781f:	push   rbp
   140017820:	push   r12
   140017822:	push   r13
   140017824:	push   r14
   140017826:	push   r15
   140017828:	lea    rbp,[rax-0x5f]
   14001782c:	sub    rsp,0x90
   140017833:	mov    rdi,rcx
   140017836:	mov    rcx,QWORD PTR [rip+0x2767b]        # 0x14003eeb8
   14001783d:	xor    ebx,ebx
   14001783f:	mov    r12,rdx
   140017842:	cmp    BYTE PTR [rcx],bl
   140017844:	jne    0x140017869
   140017846:	lea    edx,[rbx+0x1]
   140017849:	lea    rcx,[rbp+0x17]
   14001784d:	call   0x1400140e4
   140017852:	mov    rdx,r12
   140017855:	movups xmm0,XMMWORD PTR [rax]
   140017858:	mov    rcx,rdi
   14001785b:	movdqu XMMWORD PTR [rdi],xmm0
   14001785f:	call   0x140014910
   140017864:	jmp    0x140017cf2
   140017869:	mov    al,BYTE PTR [rcx]
   14001786b:	sub    al,0x36
   14001786d:	cmp    al,0x3
   14001786f:	jbe    0x140017880
   140017871:	cmp    BYTE PTR [rcx],0x5f
   140017874:	je     0x140017880
   140017876:	mov    edx,0x2
   14001787b:	jmp    0x140017cea
   140017880:	movsx  r14d,BYTE PTR [rcx]
   140017884:	mov    esi,0x1
   140017889:	or     edx,0xffffffff
   14001788c:	add    rcx,rsi
   14001788f:	sub    r14d,0x36
   140017893:	mov    QWORD PTR [rip+0x2761e],rcx        # 0x14003eeb8
   14001789a:	cmp    r14d,0x29
   14001789e:	jne    0x1400178c8
   1400178a0:	cmp    BYTE PTR [rcx],bl
   1400178a2:	je     0x1400178c4
   1400178a4:	movsx  r14d,BYTE PTR [rcx]
   1400178a8:	add    rcx,rsi
   1400178ab:	sub    r14d,0x3d
   1400178af:	mov    QWORD PTR [rip+0x27602],rcx        # 0x14003eeb8
   1400178b6:	lea    eax,[r14-0x4]
   1400178ba:	cmp    eax,0x3
   1400178bd:	jbe    0x1400178d0
   1400178bf:	mov    r14d,edx
   1400178c2:	jmp    0x1400178d0
   1400178c4:	mov    edx,esi
   1400178c6:	jmp    0x140017849
   1400178c8:	cmp    r14d,0x3
   1400178cc:	cmova  r14d,edx
   1400178d0:	cmp    r14d,edx
   1400178d3:	je     0x140017876
   1400178d5:	mov    r15d,DWORD PTR [rbp-0x11]
   1400178d9:	movups xmm0,XMMWORD PTR [r12]
   1400178de:	mov    r13d,r14d
   1400178e1:	and    r15d,0xffff0000
   1400178e8:	mov    QWORD PTR [rbp-0x19],rbx
   1400178ec:	mov    DWORD PTR [rbp-0x11],r15d
   1400178f0:	movdqu XMMWORD PTR [rbp-0x29],xmm0
   1400178f5:	and    r13d,0x2
   1400178f9:	je     0x140017a0d
   1400178ff:	lea    rdx,[rip+0x1c3ae]        # 0x140033cb4
   140017906:	lea    rcx,[rbp+0x17]
   14001790a:	call   0x14001409c
   14001790f:	lea    rdx,[rbp-0x29]
   140017913:	lea    rcx,[rbp+0x7]
   140017917:	movups xmm0,XMMWORD PTR [rax]
   14001791a:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   14001791f:	call   0x140014910
   140017924:	mov    rax,QWORD PTR [rip+0x2758d]        # 0x14003eeb8
   14001792b:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   14001792f:	lea    rcx,[rbp+0x17]
   140017933:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140017938:	cmp    BYTE PTR [rax],bl
   14001793a:	je     0x14001797d
   14001793c:	call   0x140018c20
   140017941:	lea    rcx,[rbp-0x9]
   140017945:	mov    dl,0x20
   140017947:	mov    rbx,rax
   14001794a:	call   0x140013fdc
   14001794f:	lea    rcx,[rbp+0x7]
   140017953:	mov    rdx,rbx
   140017956:	movups xmm0,XMMWORD PTR [rax]
   140017959:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   14001795e:	call   0x140014910
   140017963:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   140017967:	lea    rdx,[rbp-0x29]
   14001796b:	lea    rcx,[rbp+0x7]
   14001796f:	movdqa XMMWORD PTR [rbp+0x7],xmm0
   140017974:	call   0x140014910
   140017979:	xor    ebx,ebx
   14001797b:	jmp    0x140017999
   14001797d:	mov    edx,esi
   14001797f:	call   0x1400140e4
   140017984:	lea    rdx,[rbp-0x29]
   140017988:	lea    rcx,[rbp+0x7]
   14001798c:	movups xmm0,XMMWORD PTR [rax]
   14001798f:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   140017994:	call   0x140014910
   140017999:	mov    rax,QWORD PTR [rip+0x27518]        # 0x14003eeb8
   1400179a0:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   1400179a4:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   1400179a9:	cmp    BYTE PTR [rax],bl
   1400179ab:	je     0x140017ab6
   1400179b1:	cmp    BYTE PTR [rax],0x40
   1400179b4:	jne    0x140017876
   1400179ba:	add    rax,rsi
   1400179bd:	mov    QWORD PTR [rbp-0x9],rbx
   1400179c1:	mov    QWORD PTR [rbp+0x7],rbx
   1400179c5:	mov    QWORD PTR [rip+0x274ec],rax        # 0x14003eeb8
   1400179cc:	mov    eax,DWORD PTR [rip+0x27502]        # 0x14003eed4
   1400179d2:	mov    DWORD PTR [rsp+0x20],esi
   1400179d6:	and    eax,0x60
   1400179d9:	lea    r8,[rip+0x180a4]        # 0x14002fa84
   1400179e0:	lea    rcx,[rbp+0x17]
   1400179e4:	cmp    al,0x60
   1400179e6:	mov    eax,0xffff0000
   1400179eb:	je     0x140017a78
   1400179f1:	and    DWORD PTR [rbp-0x1],eax
   1400179f4:	and    DWORD PTR [rbp+0xf],eax
   1400179f7:	lea    r9,[rbp-0x9]
   1400179fb:	lea    rdx,[rbp+0x7]
   1400179ff:	call   0x140016620
   140017a04:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017a08:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   140017a0d:	test   r14b,0x4
   140017a11:	je     0x140017af1
   140017a17:	mov    eax,DWORD PTR [rip+0x274b7]        # 0x14003eed4
   140017a1d:	shr    eax,1
   140017a1f:	not    eax
   140017a21:	test   sil,al
   140017a24:	je     0x140017aca
   140017a2a:	lea    rcx,[rbp+0x7]
   140017a2e:	call   0x140016034
   140017a33:	lea    rcx,[rbp-0x9]
   140017a37:	mov    dl,0x20
   140017a39:	mov    rbx,rax
   140017a3c:	call   0x140013fdc
   140017a41:	lea    rcx,[rbp+0x17]
   140017a45:	mov    rdx,rbx
   140017a48:	movups xmm0,XMMWORD PTR [rax]
   140017a4b:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140017a50:	call   0x140014910
   140017a55:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017a59:	lea    rdx,[rbp-0x29]
   140017a5d:	lea    rcx,[rbp+0x17]
   140017a61:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140017a66:	call   0x140014910
   140017a6b:	xor    ebx,ebx
   140017a6d:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017a71:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140017a76:	jmp    0x140017af1
   140017a78:	and    DWORD PTR [rbp+0xf],eax
   140017a7b:	and    DWORD PTR [rbp-0x1],eax
   140017a7e:	lea    r9,[rbp+0x7]
   140017a82:	lea    rdx,[rbp-0x9]
   140017a86:	call   0x140016620
   140017a8b:	cmp    BYTE PTR [rbp-0x11],0x3
   140017a8f:	je     0x140017a0d
   140017a95:	cmp    BYTE PTR [rbp+0x1f],sil
   140017a99:	jle    0x140017a0d
   140017a9f:	movzx  eax,BYTE PTR [rbp+0x1f]
   140017aa3:	and    r15d,0xffffff00
   140017aaa:	or     r15d,eax
   140017aad:	mov    DWORD PTR [rbp-0x11],r15d
   140017ab1:	jmp    0x140017a0d
   140017ab6:	lea    rcx,[rbp+0x17]
   140017aba:	mov    edx,esi
   140017abc:	call   0x1400140e4
   140017ac1:	lea    rdx,[rbp-0x29]
   140017ac5:	jmp    0x140017855
   140017aca:	lea    rcx,[rbp+0x17]
   140017ace:	call   0x140016034
   140017ad3:	cmp    BYTE PTR [rbp-0x21],0x3
   140017ad7:	je     0x140017af1
   140017ad9:	cmp    BYTE PTR [rax+0x8],sil
   140017add:	jle    0x140017af1
   140017adf:	mov    ecx,DWORD PTR [rbp-0x21]
   140017ae2:	movzx  eax,BYTE PTR [rax+0x8]
   140017ae6:	and    ecx,0xffffff00
   140017aec:	or     ecx,eax
   140017aee:	mov    DWORD PTR [rbp-0x21],ecx
   140017af1:	mov    eax,DWORD PTR [rip+0x273dd]        # 0x14003eed4
   140017af7:	shr    eax,1
   140017af9:	not    eax
   140017afb:	test   sil,al
   140017afe:	je     0x140017b29
   140017b00:	lea    rcx,[rbp+0x7]
   140017b04:	call   0x140016520
   140017b09:	lea    rdx,[rbp-0x29]
   140017b0d:	lea    rcx,[rbp+0x17]
   140017b11:	movups xmm0,XMMWORD PTR [rax]
   140017b14:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140017b19:	call   0x140014910
   140017b1e:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017b22:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140017b27:	jmp    0x140017b50
   140017b29:	lea    rcx,[rbp+0x17]
   140017b2d:	call   0x140016520
   140017b32:	cmp    BYTE PTR [rbp-0x21],0x3
   140017b36:	je     0x140017b50
   140017b38:	cmp    BYTE PTR [rax+0x8],sil
   140017b3c:	jle    0x140017b50
   140017b3e:	mov    ecx,DWORD PTR [rbp-0x21]
   140017b41:	movzx  eax,BYTE PTR [rax+0x8]
   140017b45:	and    ecx,0xffffff00
   140017b4b:	or     ecx,eax
   140017b4d:	mov    DWORD PTR [rbp-0x21],ecx
   140017b50:	cmp    QWORD PTR [r12],rbx
   140017b54:	je     0x140017b93
   140017b56:	lea    rcx,[rbp+0x7]
   140017b5a:	mov    dl,0x28
   140017b5c:	call   0x140013fdc
   140017b61:	lea    rdx,[rbp-0x29]
   140017b65:	lea    rcx,[rbp+0x17]
   140017b69:	movups xmm0,XMMWORD PTR [rax]
   140017b6c:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140017b71:	call   0x140014910
   140017b76:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017b7a:	lea    rcx,[rbp+0x17]
   140017b7e:	mov    dl,0x29
   140017b80:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140017b85:	call   0x140014950
   140017b8a:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017b8e:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140017b93:	xor    r8d,r8d
   140017b96:	lea    rcx,[rip+0x27343]        # 0x14003eee0
   140017b9d:	lea    edx,[r8+0x10]
   140017ba1:	call   0x140017e18
   140017ba6:	mov    r14,rax
   140017ba9:	test   rax,rax
   140017bac:	je     0x140017bbd
   140017bae:	mov    BYTE PTR [rax+0x8],bl
   140017bb1:	and    DWORD PTR [rax+0x8],0xffff00ff
   140017bb8:	mov    QWORD PTR [rax],rbx
   140017bbb:	jmp    0x140017bc0
   140017bbd:	mov    r14,rbx
   140017bc0:	lea    rcx,[rbp+0x27]
   140017bc4:	mov    rdx,r14
   140017bc7:	call   0x140018bec
   140017bcc:	lea    rcx,[rbp+0x7]
   140017bd0:	call   0x140015cf4
   140017bd5:	lea    rcx,[rbp-0x9]
   140017bd9:	mov    dl,0x28
   140017bdb:	mov    rbx,rax
   140017bde:	call   0x140013fdc
   140017be3:	lea    rcx,[rbp+0x17]
   140017be7:	mov    rdx,rbx
   140017bea:	movups xmm0,XMMWORD PTR [rax]
   140017bed:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140017bf2:	call   0x140014910
   140017bf7:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017bfb:	lea    rcx,[rbp+0x17]
   140017bff:	mov    dl,0x29
   140017c01:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140017c06:	call   0x140014950
   140017c0b:	lea    rdx,[rbp+0x17]
   140017c0f:	lea    rcx,[rbp-0x29]
   140017c13:	call   0x140014910
   140017c18:	mov    ecx,DWORD PTR [rip+0x272b6]        # 0x14003eed4
   140017c1e:	mov    eax,ecx
   140017c20:	and    eax,0x60
   140017c23:	cmp    al,0x60
   140017c25:	je     0x140017c3f
   140017c27:	test   r13d,r13d
   140017c2a:	je     0x140017c3f
   140017c2c:	lea    rdx,[rbp-0x19]
   140017c30:	lea    rcx,[rbp-0x29]
   140017c34:	call   0x140014910
   140017c39:	mov    ecx,DWORD PTR [rip+0x27295]        # 0x14003eed4
   140017c3f:	shr    ecx,0x13
   140017c42:	not    ecx
   140017c44:	test   sil,cl
   140017c47:	lea    rcx,[rbp+0x17]
   140017c4b:	je     0x140017c60
   140017c4d:	call   0x140018ac4
   140017c52:	lea    rcx,[rbp-0x29]
   140017c56:	mov    rdx,rax
   140017c59:	call   0x140014910
   140017c5e:	jmp    0x140017c83
   140017c60:	call   0x140018ac4
   140017c65:	cmp    BYTE PTR [rbp-0x21],0x3
   140017c69:	je     0x140017c83
   140017c6b:	cmp    BYTE PTR [rax+0x8],sil
   140017c6f:	jle    0x140017c83
   140017c71:	mov    ecx,DWORD PTR [rbp-0x21]
   140017c74:	movzx  eax,BYTE PTR [rax+0x8]
   140017c78:	and    ecx,0xffffff00
   140017c7e:	or     ecx,eax
   140017c80:	mov    DWORD PTR [rbp-0x21],ecx
   140017c83:	mov    eax,DWORD PTR [rip+0x2724b]        # 0x14003eed4
   140017c89:	lea    rcx,[rbp+0x17]
   140017c8d:	shr    eax,0x8
   140017c90:	not    eax
   140017c92:	test   sil,al
   140017c95:	je     0x140017caa
   140017c97:	call   0x140019e38
   140017c9c:	lea    rcx,[rbp-0x29]
   140017ca0:	mov    rdx,rax
   140017ca3:	call   0x140014910
   140017ca8:	jmp    0x140017ccd
   140017caa:	call   0x140019e38
   140017caf:	cmp    BYTE PTR [rbp-0x21],0x3
   140017cb3:	je     0x140017ccd
   140017cb5:	cmp    BYTE PTR [rax+0x8],sil
   140017cb9:	jle    0x140017ccd
   140017cbb:	mov    ecx,DWORD PTR [rbp-0x21]
   140017cbe:	movzx  eax,BYTE PTR [rax+0x8]
   140017cc2:	and    ecx,0xffffff00
   140017cc8:	or     ecx,eax
   140017cca:	mov    DWORD PTR [rbp-0x21],ecx
   140017ccd:	test   r14,r14
   140017cd0:	je     0x140017ce5
   140017cd2:	movaps xmm0,XMMWORD PTR [rbp-0x29]
   140017cd6:	movdqu XMMWORD PTR [r14],xmm0
   140017cdb:	movups xmm1,XMMWORD PTR [rbp+0x27]
   140017cdf:	movdqu XMMWORD PTR [rdi],xmm1
   140017ce3:	jmp    0x140017cf2
   140017ce5:	mov    edx,0x3
   140017cea:	mov    rcx,rdi
   140017ced:	call   0x1400140e4
   140017cf2:	lea    r11,[rsp+0x90]
   140017cfa:	mov    rax,rdi
   140017cfd:	mov    rbx,QWORD PTR [r11+0x30]
   140017d01:	mov    rsi,QWORD PTR [r11+0x38]
   140017d05:	mov    rdi,QWORD PTR [r11+0x40]
   140017d09:	mov    rsp,r11
   140017d0c:	pop    r15
   140017d0e:	pop    r14
   140017d10:	pop    r13
   140017d12:	pop    r12
   140017d14:	pop    rbp
   140017d15:	ret    
   140017d16:	int3   
   140017d17:	int3   
   140017d18:	rex push rbx
   140017d1a:	sub    rsp,0x20
   140017d1e:	xor    edx,edx
   140017d20:	mov    rbx,rcx
   140017d23:	call   0x1400170b4
   140017d28:	mov    rax,rbx
   140017d2b:	add    rsp,0x20
   140017d2f:	pop    rbx
   140017d30:	ret    
   140017d31:	int3   
   140017d32:	int3   
   140017d33:	int3   
   140017d34:	mov    rcx,QWORD PTR [rcx]
   140017d37:	test   rcx,rcx
   140017d3a:	jne    0x140017d3f
   140017d3c:	xor    al,al
   140017d3e:	ret    
   140017d3f:	mov    rax,QWORD PTR [rcx]
   140017d42:	rex.W jmp QWORD PTR [rax+0x8]
   140017d46:	int3   
   140017d47:	int3   
   140017d48:	cmp    DWORD PTR [rcx+0x8],0x1
   140017d4c:	setne  al
   140017d4f:	dec    al
   140017d51:	and    al,0x20
   140017d53:	ret    
   140017d54:	mov    al,BYTE PTR [rcx+0x8]
   140017d57:	ret    
   140017d58:	sub    rsp,0x28
   140017d5c:	mov    rcx,QWORD PTR [rcx+0x8]
   140017d60:	xor    eax,eax
   140017d62:	test   rcx,rcx
   140017d65:	je     0x140017d75
   140017d67:	mov    rcx,QWORD PTR [rcx]
   140017d6a:	test   rcx,rcx
   140017d6d:	je     0x140017d75
   140017d6f:	mov    rax,QWORD PTR [rcx]
   140017d72:	call   QWORD PTR [rax+0x8]
   140017d75:	add    rsp,0x28
   140017d79:	ret    
   140017d7a:	int3   
   140017d7b:	int3   
   140017d7c:	rex push rbx
   140017d7e:	sub    rsp,0x20
   140017d82:	mov    rbx,rcx
   140017d85:	mov    rcx,QWORD PTR [rcx+0x10]
   140017d89:	mov    rax,QWORD PTR [rcx]
   140017d8c:	call   QWORD PTR [rax+0x8]
   140017d8f:	test   al,al
   140017d91:	jne    0x140017d9d
   140017d93:	mov    rcx,QWORD PTR [rbx+0x8]
   140017d97:	mov    rax,QWORD PTR [rcx]
   140017d9a:	call   QWORD PTR [rax+0x8]
   140017d9d:	add    rsp,0x20
   140017da1:	pop    rbx
   140017da2:	ret    
   140017da3:	int3   
   140017da4:	xor    eax,eax
   140017da6:	cmp    DWORD PTR [rcx+0x10],eax
   140017da9:	je     0x140017db7
   140017dab:	movsxd rdx,DWORD PTR [rcx+0x10]
   140017daf:	mov    rax,QWORD PTR [rcx+0x8]
   140017db3:	mov    al,BYTE PTR [rax+rdx*1-0x1]
   140017db7:	ret    
   140017db8:	mov    QWORD PTR [rsp+0x8],rbx
   140017dbd:	push   rdi
   140017dbe:	sub    rsp,0x50
   140017dc2:	mov    rdi,rcx
   140017dc5:	lea    rcx,[rsp+0x30]
   140017dca:	xor    edx,edx
   140017dcc:	call   0x1400170b4
   140017dd1:	lea    rcx,[rsp+0x40]
   140017dd6:	mov    dl,0x60
   140017dd8:	mov    rbx,rax
   140017ddb:	call   0x140013fdc
   140017de0:	lea    rcx,[rsp+0x20]
   140017de5:	mov    rdx,rbx
   140017de8:	movups xmm0,XMMWORD PTR [rax]
   140017deb:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140017df1:	call   0x140014910
   140017df6:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140017dfb:	mov    dl,0x27
   140017dfd:	mov    rcx,rdi
   140017e00:	movdqu XMMWORD PTR [rdi],xmm0
   140017e04:	call   0x140014950
   140017e09:	mov    rbx,QWORD PTR [rsp+0x60]
   140017e0e:	mov    rax,rdi
   140017e11:	add    rsp,0x50
   140017e15:	pop    rdi
   140017e16:	ret    
   140017e17:	int3   
   140017e18:	mov    QWORD PTR [rsp+0x8],rbx
   140017e1d:	mov    QWORD PTR [rsp+0x10],rsi
   140017e22:	push   rdi
   140017e23:	sub    rsp,0x20
   140017e27:	lea    rdi,[rdx+0x7]
   140017e2b:	mov    rbx,rcx
   140017e2e:	and    rdi,0xfffffffffffffff8
   140017e32:	test   r8d,r8d
   140017e35:	je     0x140017e3e
   140017e37:	mov    rcx,rdi
   140017e3a:	call   QWORD PTR [rbx]
   140017e3c:	jmp    0x140017eb8
   140017e3e:	mov    eax,0x8
   140017e43:	test   rdi,rdi
   140017e46:	cmove  rdi,rax
   140017e4a:	mov    rax,QWORD PTR [rcx+0x20]
   140017e4e:	cmp    rax,rdi
   140017e51:	jae    0x140017ea5
   140017e53:	mov    esi,0x1000
   140017e58:	cmp    rdi,rsi
   140017e5b:	jbe    0x140017e61
   140017e5d:	xor    eax,eax
   140017e5f:	jmp    0x140017eb8
   140017e61:	lea    rcx,[rip+0x27078]        # 0x14003eee0
   140017e68:	mov    edx,0x1008
   140017e6d:	mov    r8d,0x1
   140017e73:	call   0x140017e18
   140017e78:	test   rax,rax
   140017e7b:	je     0x140017e81
   140017e7d:	and    QWORD PTR [rax],0x0
   140017e81:	test   rax,rax
   140017e84:	je     0x140017e5d
   140017e86:	mov    rcx,QWORD PTR [rbx+0x18]
   140017e8a:	test   rcx,rcx
   140017e8d:	je     0x140017e94
   140017e8f:	mov    QWORD PTR [rcx],rax
   140017e92:	jmp    0x140017e98
   140017e94:	mov    QWORD PTR [rbx+0x10],rax
   140017e98:	sub    rsi,rdi
   140017e9b:	mov    QWORD PTR [rbx+0x18],rax
   140017e9f:	mov    QWORD PTR [rbx+0x20],rsi
   140017ea3:	jmp    0x140017eac
   140017ea5:	sub    rax,rdi
   140017ea8:	mov    QWORD PTR [rcx+0x20],rax
   140017eac:	mov    rax,QWORD PTR [rbx+0x20]
   140017eb0:	add    rax,0x8
   140017eb4:	add    rax,QWORD PTR [rbx+0x18]
   140017eb8:	mov    rbx,QWORD PTR [rsp+0x30]
   140017ebd:	mov    rsi,QWORD PTR [rsp+0x38]
   140017ec2:	add    rsp,0x20
   140017ec6:	pop    rdi
   140017ec7:	ret    
   140017ec8:	mov    rcx,QWORD PTR [rip+0x26fe9]        # 0x14003eeb8
   140017ecf:	mov    dl,BYTE PTR [rcx]
   140017ed1:	test   dl,dl
   140017ed3:	jne    0x140017ed8
   140017ed5:	xor    eax,eax
   140017ed7:	ret    
   140017ed8:	lea    eax,[rdx-0x30]
   140017edb:	cmp    al,0x9
   140017edd:	ja     0x140017ef0
   140017edf:	movsx  eax,dl
   140017ee2:	sub    eax,0x2f
   140017ee5:	inc    rcx
   140017ee8:	mov    QWORD PTR [rip+0x26fc9],rcx        # 0x14003eeb8
   140017eef:	ret    
   140017ef0:	xor    r8d,r8d
   140017ef3:	mov    r9b,0x40
   140017ef6:	jmp    0x140017f1d
   140017ef8:	test   dl,dl
   140017efa:	je     0x140017ed5
   140017efc:	lea    eax,[rdx-0x41]
   140017eff:	cmp    al,0xf
   140017f01:	ja     0x140017f37
   140017f03:	shl    r8d,0x4
   140017f07:	movsx  eax,dl
   140017f0a:	add    r8d,0xffffffbf
   140017f0e:	add    r8d,eax
   140017f11:	inc    rcx
   140017f14:	mov    QWORD PTR [rip+0x26f9d],rcx        # 0x14003eeb8
   140017f1b:	mov    dl,BYTE PTR [rcx]
   140017f1d:	cmp    dl,r9b
   140017f20:	jne    0x140017ef8
   140017f22:	mov    al,BYTE PTR [rcx]
   140017f24:	inc    rcx
   140017f27:	mov    QWORD PTR [rip+0x26f8a],rcx        # 0x14003eeb8
   140017f2e:	cmp    al,r9b
   140017f31:	jne    0x140017f37
   140017f33:	mov    eax,r8d
   140017f36:	ret    
   140017f37:	or     eax,0xffffffff
   140017f3a:	ret    
   140017f3b:	int3   
   140017f3c:	mov    rax,rsp
   140017f3f:	mov    QWORD PTR [rax+0x8],rbx
   140017f43:	mov    QWORD PTR [rax+0x10],rsi
   140017f47:	mov    QWORD PTR [rax+0x20],rdi
   140017f4b:	mov    QWORD PTR [rax+0x18],r8
   140017f4f:	push   rbp
   140017f50:	lea    rbp,[rax-0x5f]
   140017f54:	sub    rsp,0xf0
   140017f5b:	mov    rbx,QWORD PTR [rip+0x26f56]        # 0x14003eeb8
   140017f62:	and    QWORD PTR [rbp-0x69],0x0
   140017f67:	and    QWORD PTR [rbp-0x79],0x0
   140017f6c:	movsx  eax,BYTE PTR [rbx]
   140017f6f:	xor    esi,esi
   140017f71:	mov    rdi,rcx
   140017f74:	mov    ecx,0xffff0000
   140017f79:	lea    r8d,[rsi+0x1]
   140017f7d:	and    DWORD PTR [rbp-0x61],ecx
   140017f80:	and    DWORD PTR [rbp-0x71],ecx
   140017f83:	add    rbx,r8
   140017f86:	mov    QWORD PTR [rip+0x26f2b],rbx        # 0x14003eeb8
   140017f8d:	cmp    eax,0x41
   140017f90:	jg     0x14001814e
   140017f96:	je     0x1400185dd
   140017f9c:	test   eax,eax
   140017f9e:	je     0x140018137
   140017fa4:	cmp    eax,0x2f
   140017fa7:	jle    0x14001825d
   140017fad:	cmp    eax,0x31
   140017fb0:	jle    0x140018011
   140017fb2:	cmp    eax,0x39
   140017fb5:	jg     0x14001825d
   140017fbb:	movsx  rdx,BYTE PTR [rbx-0x1]
   140017fc0:	lea    rbx,[rip+0xfffffffffffe8039]        # 0x140000000
   140017fc7:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33230]
   140017fcf:	lea    rcx,[rbp-0x69]
   140017fd3:	call   0x1400144f0
   140017fd8:	cmp    QWORD PTR [rbp-0x69],0x0
   140017fdd:	je     0x140018113
   140017fe3:	lea    rdx,[rip+0x1b766]        # 0x140033750
   140017fea:	lea    rcx,[rbp-0x39]
   140017fee:	call   0x14001409c
   140017ff3:	lea    rdx,[rbp-0x69]
   140017ff7:	lea    rcx,[rbp-0x59]
   140017ffb:	movups xmm0,XMMWORD PTR [rax]
   140017ffe:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140018003:	call   0x140014910
   140018008:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14001800c:	jmp    0x140018117
   140018011:	and    DWORD PTR [rbp-0x71],ecx
   140018014:	mov    QWORD PTR [rbp-0x79],rsi
   140018018:	test   dl,dl
   14001801a:	je     0x1400180ad
   140018020:	lea    rcx,[rbp-0x9]
   140018024:	call   0x1400195b8
   140018029:	lea    rcx,[rbp-0x49]
   14001802d:	mov    dl,0x3c
   14001802f:	mov    rbx,rax
   140018032:	call   0x140013fdc
   140018037:	lea    rcx,[rbp-0x59]
   14001803b:	mov    rdx,rbx
   14001803e:	movups xmm0,XMMWORD PTR [rax]
   140018041:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140018046:	call   0x140014910
   14001804b:	lea    rdx,[rbp-0x59]
   14001804f:	lea    rcx,[rbp-0x79]
   140018053:	call   0x140014910
   140018058:	mov    rcx,QWORD PTR [rbp-0x79]
   14001805c:	test   rcx,rcx
   14001805f:	je     0x140018076
   140018061:	mov    rax,QWORD PTR [rcx]
   140018064:	call   QWORD PTR [rax+0x8]
   140018067:	cmp    al,0x3e
   140018069:	jne    0x140018076
   14001806b:	lea    rcx,[rbp-0x79]
   14001806f:	mov    dl,0x20
   140018071:	call   0x140014950
   140018076:	lea    rcx,[rbp-0x79]
   14001807a:	mov    dl,0x3e
   14001807c:	call   0x140014950
   140018081:	mov    rax,QWORD PTR [rbp+0x77]
   140018085:	test   rax,rax
   140018088:	je     0x14001808d
   14001808a:	mov    BYTE PTR [rax],0x1
   14001808d:	mov    rbx,QWORD PTR [rip+0x26e24]        # 0x14003eeb8
   140018094:	cmp    BYTE PTR [rbx],sil
   140018097:	jne    0x14001809f
   140018099:	movups xmm0,XMMWORD PTR [rbp-0x79]
   14001809d:	jmp    0x140018117
   14001809f:	mov    rsi,QWORD PTR [rbp-0x79]
   1400180a3:	inc    rbx
   1400180a6:	mov    QWORD PTR [rip+0x26e0b],rbx        # 0x14003eeb8
   1400180ad:	lea    rcx,[rbp+0x47]
   1400180b1:	xor    r8d,r8d
   1400180b4:	xor    edx,edx
   1400180b6:	call   0x14001a66c
   1400180bb:	movups xmm0,XMMWORD PTR [rax]
   1400180be:	mov    QWORD PTR [rip+0x26df3],rbx        # 0x14003eeb8
   1400180c5:	movq   rax,xmm0
   1400180ca:	movaps XMMWORD PTR [rbp-0x69],xmm0
   1400180ce:	test   rax,rax
   1400180d1:	je     0x140018101
   1400180d3:	cmp    BYTE PTR [rbx-0x1],0x31
   1400180d7:	jne    0x140018101
   1400180d9:	lea    rcx,[rbp-0x49]
   1400180dd:	mov    dl,0x7e
   1400180df:	call   0x140013fdc
   1400180e4:	lea    rdx,[rbp-0x69]
   1400180e8:	lea    rcx,[rbp-0x59]
   1400180ec:	movups xmm0,XMMWORD PTR [rax]
   1400180ef:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400180f4:	call   0x140014910
   1400180f9:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   1400180fd:	movaps XMMWORD PTR [rbp-0x69],xmm0
   140018101:	test   rsi,rsi
   140018104:	je     0x140018117
   140018106:	lea    rdx,[rbp-0x79]
   14001810a:	lea    rcx,[rbp-0x69]
   14001810e:	call   0x140014910
   140018113:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140018117:	movdqu XMMWORD PTR [rdi],xmm0
   14001811b:	lea    r11,[rsp+0xf0]
   140018123:	mov    rax,rdi
   140018126:	mov    rbx,QWORD PTR [r11+0x10]
   14001812a:	mov    rsi,QWORD PTR [r11+0x18]
   14001812e:	mov    rdi,QWORD PTR [r11+0x28]
   140018132:	mov    rsp,r11
   140018135:	pop    rbp
   140018136:	ret    
   140018137:	sub    rbx,r8
   14001813a:	mov    edx,r8d
   14001813d:	mov    QWORD PTR [rip+0x26d74],rbx        # 0x14003eeb8
   140018144:	mov    rcx,rdi
   140018147:	call   0x1400140e4
   14001814c:	jmp    0x14001811b
   14001814e:	cmp    eax,0x42
   140018151:	je     0x1400185da
   140018157:	jle    0x14001825d
   14001815d:	cmp    eax,0x5a
   140018160:	jle    0x1400185dd
   140018166:	cmp    eax,0x5f
   140018169:	jne    0x14001825d
   14001816f:	movsx  ecx,BYTE PTR [rbx]
   140018172:	add    rbx,r8
   140018175:	mov    QWORD PTR [rip+0x26d3c],rbx        # 0x14003eeb8
   14001817c:	cmp    ecx,0x4f
   14001817f:	jg     0x140018273
   140018185:	cmp    ecx,0x44
   140018188:	jge    0x1400185a8
   14001818e:	cmp    ecx,0x39
   140018191:	jg     0x140018211
   140018193:	je     0x1400181ea
   140018195:	test   ecx,ecx
   140018197:	je     0x140018137
   140018199:	cmp    ecx,0x2f
   14001819c:	jle    0x14001825d
   1400181a2:	cmp    ecx,0x36
   1400181a5:	jle    0x1400181d1
   1400181a7:	cmp    ecx,0x38
   1400181aa:	jg     0x14001825d
   1400181b0:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400181b5:	lea    rbx,[rip+0xfffffffffffe7e44]        # 0x140000000
   1400181bc:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33350]
   1400181c4:	mov    rcx,rdi
   1400181c7:	call   0x14001409c
   1400181cc:	jmp    0x14001811b
   1400181d1:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400181d6:	lea    rbx,[rip+0xfffffffffffe7e23]        # 0x140000000
   1400181dd:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33350]
   1400181e5:	jmp    0x140017fcf
   1400181ea:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400181ef:	lea    rbx,[rip+0xfffffffffffe7e0a]        # 0x140000000
   1400181f6:	lea    rcx,[rbp-0x79]
   1400181fa:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33350]
   140018202:	call   0x14001409c
   140018207:	bts    DWORD PTR [rbp-0x71],0xf
   14001820c:	jmp    0x140018099
   140018211:	cmp    ecx,0x3f
   140018214:	je     0x140018243
   140018216:	cmp    ecx,0x40
   140018219:	jle    0x14001825d
   14001821b:	cmp    ecx,0x42
   14001821e:	jle    0x1400185a8
   140018224:	cmp    ecx,0x43
   140018227:	jne    0x14001825d
   140018229:	lea    rdx,[rip+0x1b5f8]        # 0x140033828
   140018230:	lea    rcx,[rbp-0x79]
   140018234:	call   0x140019480
   140018239:	bts    DWORD PTR [rbp-0x71],0xc
   14001823e:	jmp    0x140018099
   140018243:	movsx  eax,BYTE PTR [rbx]
   140018246:	add    rbx,r8
   140018249:	mov    QWORD PTR [rip+0x26c68],rbx        # 0x14003eeb8
   140018250:	test   eax,eax
   140018252:	je     0x140018137
   140018258:	cmp    eax,0x30
   14001825b:	je     0x140018267
   14001825d:	mov    edx,0x2
   140018262:	jmp    0x140018144
   140018267:	xor    r8d,r8d
   14001826a:	lea    rdx,[rip+0x1ba77]        # 0x140033ce8
   140018271:	jmp    0x140018230
   140018273:	cmp    ecx,0x54
   140018276:	jg     0x1400184c2
   14001827c:	cmp    ecx,0x53
   14001827f:	jge    0x1400185a8
   140018285:	sub    ecx,0x50
   140018288:	je     0x140018470
   14001828e:	dec    ecx
   140018290:	je     0x140018113
   140018296:	dec    ecx
   140018298:	jne    0x14001825d
   14001829a:	movsx  rdx,BYTE PTR [rbx-0x1]
   14001829f:	lea    rbx,[rip+0xfffffffffffe7d5a]        # 0x140000000
   1400182a6:	lea    rcx,[rbp-0x69]
   1400182aa:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33318]
   1400182b2:	call   0x1400144f0
   1400182b7:	mov    rax,QWORD PTR [rip+0x26bfa]        # 0x14003eeb8
   1400182be:	mov    cl,BYTE PTR [rax]
   1400182c0:	test   cl,cl
   1400182c2:	jne    0x1400182de
   1400182c4:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   1400182c8:	mov    edx,0x1
   1400182cd:	mov    rcx,rdi
   1400182d0:	movdqu XMMWORD PTR [rdi],xmm0
   1400182d4:	call   0x140014af8
   1400182d9:	jmp    0x14001811b
   1400182de:	movsx  eax,cl
   1400182e1:	sub    eax,0x30
   1400182e4:	js     0x14001825d
   1400182ea:	movsxd rdx,eax
   1400182ed:	cmp    rdx,0x5
   1400182f1:	jae    0x14001825d
   1400182f7:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33640]
   1400182ff:	lea    rcx,[rbp-0x79]
   140018303:	call   0x1400144f0
   140018308:	mov    rcx,QWORD PTR [rip+0x26ba9]        # 0x14003eeb8
   14001830f:	movsx  eax,BYTE PTR [rcx]
   140018312:	inc    rcx
   140018315:	mov    QWORD PTR [rip+0x26b9c],rcx        # 0x14003eeb8
   14001831c:	cmp    eax,0x30
   14001831f:	je     0x140018432
   140018325:	cmp    eax,0x31
   140018328:	je     0x14001835f
   14001832a:	add    eax,0xffffffce
   14001832d:	cmp    eax,0x2
   140018330:	ja     0x14001834b
   140018332:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140018336:	lea    rdx,[rbp-0x79]
   14001833a:	mov    rcx,rdi
   14001833d:	movdqu XMMWORD PTR [rdi],xmm0
   140018341:	call   0x140014910
   140018346:	jmp    0x14001811b
   14001834b:	dec    rcx
   14001834e:	mov    edx,0x1
   140018353:	mov    QWORD PTR [rip+0x26b5e],rcx        # 0x14003eeb8
   14001835a:	jmp    0x140018144
   14001835f:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140018363:	lea    rdx,[rbp-0x79]
   140018367:	lea    rcx,[rbp-0x69]
   14001836b:	movdqa XMMWORD PTR [rbp-0x69],xmm0
   140018370:	call   0x140014910
   140018375:	lea    rcx,[rbp-0x29]
   140018379:	call   0x14001922c
   14001837e:	lea    rcx,[rbp-0x59]
   140018382:	mov    dl,0x2c
   140018384:	movups xmm0,XMMWORD PTR [rax]
   140018387:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   14001838c:	call   0x140014950
   140018391:	lea    rdx,[rbp-0x59]
   140018395:	lea    rcx,[rbp-0x69]
   140018399:	call   0x140014910
   14001839e:	lea    rcx,[rbp+0x37]
   1400183a2:	call   0x14001922c
   1400183a7:	lea    rcx,[rbp-0x59]
   1400183ab:	mov    dl,0x2c
   1400183ad:	movups xmm0,XMMWORD PTR [rax]
   1400183b0:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400183b5:	call   0x140014950
   1400183ba:	lea    rdx,[rbp-0x59]
   1400183be:	lea    rcx,[rbp-0x69]
   1400183c2:	call   0x140014910
   1400183c7:	lea    rcx,[rbp+0x17]
   1400183cb:	call   0x14001922c
   1400183d0:	lea    rcx,[rbp-0x59]
   1400183d4:	mov    dl,0x2c
   1400183d6:	movups xmm0,XMMWORD PTR [rax]
   1400183d9:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400183de:	call   0x140014950
   1400183e3:	lea    rdx,[rbp-0x59]
   1400183e7:	lea    rcx,[rbp-0x69]
   1400183eb:	call   0x140014910
   1400183f0:	lea    rcx,[rbp-0x19]
   1400183f4:	xor    edx,edx
   1400183f6:	call   0x1400170b4
   1400183fb:	lea    rcx,[rbp-0x59]
   1400183ff:	mov    dl,0x29
   140018401:	movups xmm0,XMMWORD PTR [rax]
   140018404:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140018409:	call   0x140014950
   14001840e:	lea    rdx,[rbp-0x59]
   140018412:	lea    rcx,[rbp-0x69]
   140018416:	call   0x140014910
   14001841b:	mov    dl,0x27
   14001841d:	mov    rcx,rdi
   140018420:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140018424:	movdqu XMMWORD PTR [rdi],xmm0
   140018428:	call   0x140014950
   14001842d:	jmp    0x14001811b
   140018432:	lea    rcx,[rbp-0x49]
   140018436:	xor    edx,edx
   140018438:	call   0x140016d5c
   14001843d:	lea    rcx,[rbp-0x59]
   140018441:	mov    dl,0x20
   140018443:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   140018447:	movdqa XMMWORD PTR [rbp-0x59],xmm0
   14001844c:	call   0x140014950
   140018451:	lea    rdx,[rbp-0x69]
   140018455:	lea    rcx,[rbp-0x59]
   140018459:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14001845d:	movdqa XMMWORD PTR [rbp-0x59],xmm0
   140018462:	call   0x140014910
   140018467:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14001846b:	jmp    0x140018336
   140018470:	movsx  rdx,BYTE PTR [rbx-0x1]
   140018475:	lea    rbx,[rip+0xfffffffffffe7b84]        # 0x140000000
   14001847c:	lea    rcx,[rbp-0x69]
   140018480:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33318]
   140018488:	call   0x1400144f0
   14001848d:	lea    rcx,[rbp+0x7]
   140018491:	xor    r8d,r8d
   140018494:	xor    edx,edx
   140018496:	call   0x140017f3c
   14001849b:	movups xmm0,XMMWORD PTR [rax]
   14001849e:	movq   rax,xmm0
   1400184a3:	movups XMMWORD PTR [rbp-0x79],xmm0
   1400184a7:	test   rax,rax
   1400184aa:	je     0x140018332
   1400184b0:	test   DWORD PTR [rbp-0x71],0x400
   1400184b7:	je     0x140018332
   1400184bd:	jmp    0x14001825d
   1400184c2:	cmp    ecx,0x56
   1400184c5:	jle    0x1400185c1
   1400184cb:	cmp    ecx,0x57
   1400184ce:	jle    0x14001825d
   1400184d4:	cmp    ecx,0x59
   1400184d7:	jle    0x1400185a8
   1400184dd:	cmp    ecx,0x5f
   1400184e0:	jne    0x14001825d
   1400184e6:	movsx  eax,BYTE PTR [rbx]
   1400184e9:	add    rbx,r8
   1400184ec:	mov    QWORD PTR [rip+0x269c5],rbx        # 0x14003eeb8
   1400184f3:	cmp    eax,0x41
   1400184f6:	jl     0x14001825d
   1400184fc:	cmp    eax,0x44
   1400184ff:	jle    0x14001850f
   140018501:	cmp    eax,0x46
   140018504:	jle    0x140018528
   140018506:	cmp    eax,0x4a
   140018509:	jg     0x14001825d
   14001850f:	movsx  rdx,BYTE PTR [rbx-0x1]
   140018514:	lea    rbx,[rip+0xfffffffffffe7ae5]        # 0x140000000
   14001851b:	mov    rdx,QWORD PTR [rbx+rdx*8+0x333e0]
   140018523:	jmp    0x1400181c4
   140018528:	movsx  rdx,BYTE PTR [rbx-0x1]
   14001852d:	lea    rbx,[rip+0xfffffffffffe7acc]        # 0x140000000
   140018534:	lea    rcx,[rbp-0x79]
   140018538:	mov    rdx,QWORD PTR [rbx+rdx*8+0x333e0]
   140018540:	call   0x14001409c
   140018545:	mov    rax,QWORD PTR [rip+0x2696c]        # 0x14003eeb8
   14001854c:	cmp    BYTE PTR [rax],0x3f
   14001854f:	jne    0x14001857e
   140018551:	lea    rcx,[rbp+0x27]
   140018555:	call   0x140016e40
   14001855a:	lea    rcx,[rbp-0x79]
   14001855e:	mov    rdx,rax
   140018561:	call   0x140014910
   140018566:	mov    rax,QWORD PTR [rip+0x2694b]        # 0x14003eeb8
   14001856d:	cmp    BYTE PTR [rax],0x40
   140018570:	jne    0x140018593
   140018572:	inc    rax
   140018575:	mov    QWORD PTR [rip+0x2693c],rax        # 0x14003eeb8
   14001857c:	jmp    0x140018593
   14001857e:	lea    rcx,[rbp-0x39]
   140018582:	call   0x14001956c
   140018587:	lea    rcx,[rbp-0x79]
   14001858b:	mov    rdx,rax
   14001858e:	call   0x140014910
   140018593:	lea    rdx,[rip+0x1b766]        # 0x140033d00
   14001859a:	lea    rcx,[rbp-0x79]
   14001859e:	call   0x140014a6c
   1400185a3:	jmp    0x140018099
   1400185a8:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400185ad:	lea    rbx,[rip+0xfffffffffffe7a4c]        # 0x140000000
   1400185b4:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33318]
   1400185bc:	jmp    0x1400181c4
   1400185c1:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400185c6:	lea    rbx,[rip+0xfffffffffffe7a33]        # 0x140000000
   1400185cd:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33318]
   1400185d5:	jmp    0x140017fcf
   1400185da:	mov    esi,r8d
   1400185dd:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400185e2:	lea    rbx,[rip+0xfffffffffffe7a17]        # 0x140000000
   1400185e9:	lea    rcx,[rbp-0x69]
   1400185ed:	mov    rdx,QWORD PTR [rbx+rdx*8+0x331f8]
   1400185f5:	call   0x1400144f0
   1400185fa:	test   esi,esi
   1400185fc:	je     0x140017fd8
   140018602:	cmp    QWORD PTR [rbp-0x69],0x0
   140018607:	je     0x140018113
   14001860d:	bts    DWORD PTR [rbp-0x61],0x9
   140018612:	jmp    0x140018113
   140018617:	int3   
   140018618:	rex push rbx
   14001861a:	sub    rsp,0x20
   14001861e:	lea    r9,[rip+0x1b13b]        # 0x140033760
   140018625:	mov    rbx,rcx
   140018628:	call   0x140018978
   14001862d:	mov    rax,rbx
   140018630:	add    rsp,0x20
   140018634:	pop    rbx
   140018635:	ret    
   140018636:	int3   
   140018637:	int3   
   140018638:	rex push rbx
   14001863a:	sub    rsp,0x20
   14001863e:	lea    r9,[rip+0x1743f]        # 0x14002fa84
   140018645:	mov    rbx,rcx
   140018648:	call   0x140018978
   14001864d:	mov    rax,rbx
   140018650:	add    rsp,0x20
   140018654:	pop    rbx
   140018655:	ret    
   140018656:	int3   
   140018657:	int3   
   140018658:	mov    QWORD PTR [rsp+0x8],rbx
   14001865d:	mov    QWORD PTR [rsp+0x10],rdi
   140018662:	push   rbp
   140018663:	mov    rbp,rsp
   140018666:	sub    rsp,0x60
   14001866a:	mov    r8,QWORD PTR [rip+0x26847]        # 0x14003eeb8
   140018671:	and    QWORD PTR [rbp-0x30],0x0
   140018676:	mov    rbx,rcx
   140018679:	movsx  ecx,BYTE PTR [r8]
   14001867d:	mov    rdi,rdx
   140018680:	mov    edx,0xffff0000
   140018685:	and    DWORD PTR [rbp-0x28],edx
   140018688:	test   ecx,ecx
   14001868a:	je     0x14001883a
   140018690:	sub    ecx,0x24
   140018693:	je     0x140018713
   140018695:	sub    ecx,0x1d
   140018698:	je     0x1400186d6
   14001869a:	dec    ecx
   14001869c:	je     0x1400186ae
   14001869e:	mov    rdx,rdi
   1400186a1:	mov    rcx,rbx
   1400186a4:	call   0x1400160f4
   1400186a9:	jmp    0x14001885a
   1400186ae:	lea    rdx,[rip+0x1b80b]        # 0x140033ec0
   1400186b5:	lea    rcx,[rbp-0x30]
   1400186b9:	call   0x1400144f0
   1400186be:	cmp    QWORD PTR [rdi],0x0
   1400186c2:	je     0x1400186cf
   1400186c4:	lea    rcx,[rbp-0x30]
   1400186c8:	mov    dl,0x20
   1400186ca:	call   0x140014950
   1400186cf:	mov    r8,QWORD PTR [rip+0x267e2]        # 0x14003eeb8
   1400186d6:	lea    r9,[rip+0x1b097]        # 0x140033774
   1400186dd:	movups xmm0,XMMWORD PTR [rdi]
   1400186e0:	inc    r8
   1400186e3:	lea    rdx,[rbp-0x30]
   1400186e7:	mov    QWORD PTR [rip+0x267ca],r8        # 0x14003eeb8
   1400186ee:	lea    r8,[rbp-0x20]
   1400186f2:	mov    rcx,rbx
   1400186f5:	movups XMMWORD PTR [rbp-0x20],xmm0
   1400186f9:	psrldq xmm0,0x8
   1400186fe:	movd   eax,xmm0
   140018702:	bts    eax,0x8
   140018706:	mov    DWORD PTR [rbp-0x18],eax
   140018709:	call   0x140018978
   14001870e:	jmp    0x14001885a
   140018713:	mov    al,BYTE PTR [r8+0x1]
   140018717:	cmp    al,0x24
   140018719:	je     0x140018735
   14001871b:	test   al,al
   14001871d:	je     0x14001883a
   140018723:	mov    rcx,rbx
   140018726:	mov    edx,0x2
   14001872b:	call   0x1400140e4
   140018730:	jmp    0x14001885a
   140018735:	add    r8,0x2
   140018739:	mov    QWORD PTR [rip+0x26778],r8        # 0x14003eeb8
   140018740:	movsx  ecx,BYTE PTR [r8]
   140018744:	test   ecx,ecx
   140018746:	je     0x14001883a
   14001874c:	sub    ecx,0x41
   14001874f:	je     0x140018823
   140018755:	dec    ecx
   140018757:	je     0x140018806
   14001875d:	dec    ecx
   14001875f:	je     0x1400187d0
   140018761:	sub    ecx,0xe
   140018764:	je     0x1400187c4
   140018766:	dec    ecx
   140018768:	je     0x14001879c
   14001876a:	dec    ecx
   14001876c:	je     0x140018790
   14001876e:	dec    ecx
   140018770:	mov    rcx,rbx
   140018773:	jne    0x140018726
   140018775:	inc    r8
   140018778:	lea    rdx,[rip+0x1b751]        # 0x140033ed0
   14001877f:	mov    QWORD PTR [rip+0x26732],r8        # 0x14003eeb8
   140018786:	call   0x14001409c
   14001878b:	jmp    0x14001885a
   140018790:	inc    r8
   140018793:	mov    QWORD PTR [rip+0x2671e],r8        # 0x14003eeb8
   14001879a:	jmp    0x140018723
   14001879c:	lea    rdx,[rip+0x1b71d]        # 0x140033ec0
   1400187a3:	lea    rcx,[rbp-0x30]
   1400187a7:	call   0x1400144f0
   1400187ac:	cmp    QWORD PTR [rdi],0x0
   1400187b0:	je     0x1400187bd
   1400187b2:	lea    rcx,[rbp-0x30]
   1400187b6:	mov    dl,0x20
   1400187b8:	call   0x140014950
   1400187bd:	mov    r8,QWORD PTR [rip+0x266f4]        # 0x14003eeb8
   1400187c4:	lea    r9,[rip+0x1afdd]        # 0x1400337a8
   1400187cb:	jmp    0x1400186dd
   1400187d0:	and    DWORD PTR [rbp-0x28],edx
   1400187d3:	and    QWORD PTR [rbp-0x30],0x0
   1400187d8:	and    DWORD PTR [rsp+0x20],0x0
   1400187dd:	inc    r8
   1400187e0:	lea    r9,[rbp-0x30]
   1400187e4:	lea    rcx,[rbp-0x10]
   1400187e8:	mov    QWORD PTR [rip+0x266c9],r8        # 0x14003eeb8
   1400187ef:	lea    r8,[rip+0x1728e]        # 0x14002fa84
   1400187f6:	mov    rdx,rdi
   1400187f9:	call   0x140016620
   1400187fe:	mov    rdx,rax
   140018801:	jmp    0x1400186a1
   140018806:	inc    r8
   140018809:	mov    rdx,rdi
   14001880c:	mov    rcx,rbx
   14001880f:	mov    QWORD PTR [rip+0x266a2],r8        # 0x14003eeb8
   140018816:	mov    r8d,0x1
   14001881c:	call   0x140018870
   140018821:	jmp    0x14001885a
   140018823:	inc    r8
   140018826:	mov    rdx,rdi
   140018829:	mov    rcx,rbx
   14001882c:	mov    QWORD PTR [rip+0x26685],r8        # 0x14003eeb8
   140018833:	call   0x140017810
   140018838:	jmp    0x14001885a
   14001883a:	lea    rcx,[rbp-0x20]
   14001883e:	mov    edx,0x1
   140018843:	call   0x1400140e4
   140018848:	mov    rdx,rdi
   14001884b:	mov    rcx,rbx
   14001884e:	movups xmm0,XMMWORD PTR [rax]
   140018851:	movdqu XMMWORD PTR [rbx],xmm0
   140018855:	call   0x140014910
   14001885a:	mov    rdi,QWORD PTR [rsp+0x78]
   14001885f:	mov    rax,rbx
   140018862:	mov    rbx,QWORD PTR [rsp+0x70]
   140018867:	add    rsp,0x60
   14001886b:	pop    rbp
   14001886c:	ret    
   14001886d:	int3   
   14001886e:	int3   
   14001886f:	int3   
   140018870:	mov    QWORD PTR [rsp+0x8],rbx
   140018875:	mov    QWORD PTR [rsp+0x10],rdi
   14001887a:	push   rbp
   14001887b:	mov    rbp,rsp
   14001887e:	sub    rsp,0x50
   140018882:	mov    rax,QWORD PTR [rip+0x2662f]        # 0x14003eeb8
   140018889:	mov    rdi,rdx
   14001888c:	mov    rbx,rcx
   14001888f:	cmp    BYTE PTR [rax],0x0
   140018892:	je     0x140018944
   140018898:	test   r8d,r8d
   14001889b:	je     0x1400188d5
   14001889d:	cmp    BYTE PTR [rax],0x58
   1400188a0:	jne    0x1400188d5
   1400188a2:	inc    rax
   1400188a5:	mov    QWORD PTR [rip+0x2660c],rax        # 0x14003eeb8
   1400188ac:	cmp    QWORD PTR [rdx],0x0
   1400188b0:	jne    0x1400188c3
   1400188b2:	lea    rdx,[rip+0x1b46f]        # 0x140033d28
   1400188b9:	call   0x14001409c
   1400188be:	jmp    0x140018964
   1400188c3:	lea    rdx,[rip+0x1b5ea]        # 0x140033eb4
   1400188ca:	lea    rcx,[rbp-0x20]
   1400188ce:	call   0x14001409c
   1400188d3:	jmp    0x140018952
   1400188d5:	cmp    BYTE PTR [rax],0x59
   1400188d8:	jne    0x1400188eb
   1400188da:	inc    rax
   1400188dd:	mov    QWORD PTR [rip+0x265d4],rax        # 0x14003eeb8
   1400188e4:	call   0x140015df0
   1400188e9:	jmp    0x140018964
   1400188eb:	lea    rcx,[rbp-0x30]
   1400188ef:	call   0x1400160f4
   1400188f4:	test   DWORD PTR [rdi+0x8],0x4000
   1400188fb:	je     0x140018928
   1400188fd:	lea    rdx,[rip+0x1b72c]        # 0x140034030
   140018904:	lea    rcx,[rbp-0x10]
   140018908:	call   0x14001409c
   14001890d:	lea    rdx,[rbp-0x30]
   140018911:	lea    rcx,[rbp-0x20]
   140018915:	movups xmm0,XMMWORD PTR [rax]
   140018918:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14001891d:	call   0x140014910
   140018922:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140018926:	jmp    0x14001893e
   140018928:	test   DWORD PTR [rdi+0x8],0x2000
   14001892f:	je     0x14001893a
   140018931:	lea    rdx,[rip+0x1b708]        # 0x140034040
   140018938:	jmp    0x140018904
   14001893a:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001893e:	movdqu XMMWORD PTR [rbx],xmm0
   140018942:	jmp    0x140018964
   140018944:	lea    rcx,[rbp-0x10]
   140018948:	mov    edx,0x1
   14001894d:	call   0x1400140e4
   140018952:	movups xmm0,XMMWORD PTR [rax]
   140018955:	mov    rdx,rdi
   140018958:	mov    rcx,rbx
   14001895b:	movdqu XMMWORD PTR [rbx],xmm0
   14001895f:	call   0x140014910
   140018964:	mov    rdi,QWORD PTR [rsp+0x68]
   140018969:	mov    rax,rbx
   14001896c:	mov    rbx,QWORD PTR [rsp+0x60]
   140018971:	add    rsp,0x50
   140018975:	pop    rbp
   140018976:	ret    
   140018977:	int3   
   140018978:	mov    QWORD PTR [rsp+0x8],rbx
   14001897d:	mov    QWORD PTR [rsp+0x10],rsi
   140018982:	mov    QWORD PTR [rsp+0x18],rdi
   140018987:	push   rbp
   140018988:	push   r14
   14001898a:	push   r15
   14001898c:	mov    rbp,rsp
   14001898f:	sub    rsp,0x40
   140018993:	mov    rax,QWORD PTR [rip+0x2651e]        # 0x14003eeb8
   14001899a:	mov    rsi,rcx
   14001899d:	xor    ebx,ebx
   14001899f:	mov    cl,BYTE PTR [rax]
   1400189a1:	mov    r15,r9
   1400189a4:	mov    rdi,r8
   1400189a7:	mov    r14,rdx
   1400189aa:	test   cl,cl
   1400189ac:	je     0x140018a39
   1400189b2:	lea    eax,[rcx-0x36]
   1400189b5:	cmp    al,0x3
   1400189b7:	jbe    0x1400189ef
   1400189b9:	cmp    cl,0x5f
   1400189bc:	je     0x1400189ef
   1400189be:	mov    r9,rdx
   1400189c1:	lea    rcx,[rbp-0x10]
   1400189c5:	mov    r8,r15
   1400189c8:	mov    rdx,rdi
   1400189cb:	mov    DWORD PTR [rsp+0x20],ebx
   1400189cf:	call   0x140016620
   1400189d4:	cmp    BYTE PTR [r15],0x2a
   1400189d8:	lea    rdx,[rbp-0x10]
   1400189dc:	sete   bl
   1400189df:	mov    rcx,rsi
   1400189e2:	mov    r8d,ebx
   1400189e5:	call   0x140018870
   1400189ea:	jmp    0x140018a8d
   1400189ef:	lea    rcx,[rbp-0x10]
   1400189f3:	mov    rdx,r9
   1400189f6:	call   0x14001409c
   1400189fb:	cmp    QWORD PTR [r14],rbx
   1400189fe:	je     0x140018a1a
   140018a00:	cmp    QWORD PTR [rdi],rbx
   140018a03:	je     0x140018a0e
   140018a05:	test   DWORD PTR [rdi+0x8],0x100
   140018a0c:	jne    0x140018a1a
   140018a0e:	lea    rcx,[rbp-0x10]
   140018a12:	mov    rdx,r14
   140018a15:	call   0x140014910
   140018a1a:	cmp    QWORD PTR [rdi],rbx
   140018a1d:	je     0x140018a2b
   140018a1f:	lea    rcx,[rbp-0x10]
   140018a23:	mov    rdx,rdi
   140018a26:	call   0x140014910
   140018a2b:	lea    rdx,[rbp-0x10]
   140018a2f:	mov    rcx,rsi
   140018a32:	call   0x140017810
   140018a37:	jmp    0x140018a8d
   140018a39:	lea    rcx,[rbp-0x10]
   140018a3d:	mov    edx,0x1
   140018a42:	call   0x1400140e4
   140018a47:	lea    rcx,[rbp-0x10]
   140018a4b:	mov    rdx,r15
   140018a4e:	call   0x140014a6c
   140018a53:	cmp    QWORD PTR [r14],rbx
   140018a56:	je     0x140018a64
   140018a58:	lea    rcx,[rbp-0x10]
   140018a5c:	mov    rdx,r14
   140018a5f:	call   0x140014910
   140018a64:	cmp    QWORD PTR [rdi],rbx
   140018a67:	je     0x140018a85
   140018a69:	cmp    QWORD PTR [r14],rbx
   140018a6c:	je     0x140018a79
   140018a6e:	lea    rcx,[rbp-0x10]
   140018a72:	mov    dl,0x20
   140018a74:	call   0x140014950
   140018a79:	lea    rcx,[rbp-0x10]
   140018a7d:	mov    rdx,rdi
   140018a80:	call   0x140014910
   140018a85:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140018a89:	movdqu XMMWORD PTR [rsi],xmm0
   140018a8d:	mov    rbx,QWORD PTR [rsp+0x60]
   140018a92:	mov    rdi,QWORD PTR [rsp+0x70]
   140018a97:	mov    rax,rsi
   140018a9a:	mov    rsi,QWORD PTR [rsp+0x68]
   140018a9f:	add    rsp,0x40
   140018aa3:	pop    r15
   140018aa5:	pop    r14
   140018aa7:	pop    rbp
   140018aa8:	ret    
   140018aa9:	int3   
   140018aaa:	int3   
   140018aab:	int3   
   140018aac:	rex push rbx
   140018aae:	sub    rsp,0x20
   140018ab2:	mov    rbx,rcx
   140018ab5:	call   0x140018978
   140018aba:	mov    rax,rbx
   140018abd:	add    rsp,0x20
   140018ac1:	pop    rbx
   140018ac2:	ret    
   140018ac3:	int3   
   140018ac4:	mov    r11,rsp
   140018ac7:	mov    QWORD PTR [r11+0x8],rbx
   140018acb:	mov    QWORD PTR [r11+0x10],rsi
   140018acf:	push   rdi
   140018ad0:	sub    rsp,0x30
   140018ad4:	mov    rax,QWORD PTR [rip+0x263dd]        # 0x14003eeb8
   140018adb:	mov    rbx,rcx
   140018ade:	cmp    BYTE PTR [rax],0x5f
   140018ae1:	jne    0x140018bc9
   140018ae7:	inc    rax
   140018aea:	mov    QWORD PTR [rip+0x263c7],rax        # 0x14003eeb8
   140018af1:	movsx  esi,BYTE PTR [rax]
   140018af4:	inc    rax
   140018af7:	sub    esi,0x41
   140018afa:	mov    QWORD PTR [rip+0x263b7],rax        # 0x14003eeb8
   140018b01:	cmp    esi,0x3
   140018b04:	ja     0x140018ba6
   140018b0a:	and    QWORD PTR [r11-0x18],0x0
   140018b0f:	mov    eax,DWORD PTR [rip+0x263bf]        # 0x14003eed4
   140018b15:	and    DWORD PTR [rsp+0x28],0xffff0000
   140018b1d:	shr    eax,1
   140018b1f:	not    eax
   140018b21:	test   al,0x1
   140018b23:	je     0x140018bbe
   140018b29:	lea    rdx,[rip+0x1b228]        # 0x140033d58
   140018b30:	lea    rcx,[r11-0x18]
   140018b34:	call   0x140014a6c
   140018b39:	mov    eax,DWORD PTR [rip+0x26395]        # 0x14003eed4
   140018b3f:	mov    rdx,QWORD PTR [rip+0x1a86a]        # 0x1400333b0
   140018b46:	not    eax
   140018b48:	test   al,0x1
   140018b4a:	jne    0x140018b50
   140018b4c:	add    rdx,0x2
   140018b50:	lea    rcx,[rsp+0x20]
   140018b55:	call   0x140014a6c
   140018b5a:	test   esi,esi
   140018b5c:	je     0x140018bb2
   140018b5e:	mov    edi,esi
   140018b60:	not    edi
   140018b62:	inc    edi
   140018b64:	and    edi,esi
   140018b66:	mov    eax,edi
   140018b68:	dec    eax
   140018b6a:	je     0x140018b79
   140018b6c:	dec    eax
   140018b6e:	jne    0x140018ba3
   140018b70:	lea    rdx,[rip+0x1b39d]        # 0x140033f14
   140018b77:	jmp    0x140018b80
   140018b79:	lea    rdx,[rip+0x1b390]        # 0x140033f10
   140018b80:	lea    rcx,[rsp+0x20]
   140018b85:	call   0x140014a6c
   140018b8a:	not    edi
   140018b8c:	and    esi,edi
   140018b8e:	je     0x140018bb2
   140018b90:	lea    rdx,[rip+0x1b381]        # 0x140033f18
   140018b97:	lea    rcx,[rsp+0x20]
   140018b9c:	call   0x140014a6c
   140018ba1:	jmp    0x140018b5e
   140018ba3:	mov    rcx,rbx
   140018ba6:	mov    edx,0x2
   140018bab:	call   0x1400140e4
   140018bb0:	jmp    0x140018bd8
   140018bb2:	lea    rcx,[rsp+0x20]
   140018bb7:	mov    dl,0x29
   140018bb9:	call   0x140014950
   140018bbe:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140018bc3:	movdqu XMMWORD PTR [rbx],xmm0
   140018bc7:	jmp    0x140018bd8
   140018bc9:	and    QWORD PTR [rcx],0x0
   140018bcd:	mov    BYTE PTR [rcx+0x8],0x0
   140018bd1:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140018bd8:	mov    rsi,QWORD PTR [rsp+0x48]
   140018bdd:	mov    rax,rbx
   140018be0:	mov    rbx,QWORD PTR [rsp+0x40]
   140018be5:	add    rsp,0x30
   140018be9:	pop    rdi
   140018bea:	ret    
   140018beb:	int3   
   140018bec:	rex push rbx
   140018bee:	sub    rsp,0x20
   140018bf2:	mov    rax,QWORD PTR [rip+0x262bf]        # 0x14003eeb8
   140018bf9:	mov    rbx,rcx
   140018bfc:	cmp    BYTE PTR [rax],0x40
   140018bff:	jne    0x140018c12
   140018c01:	inc    rax
   140018c04:	mov    QWORD PTR [rip+0x262ad],rax        # 0x14003eeb8
   140018c0b:	call   0x140014014
   140018c10:	jmp    0x140018c17
   140018c12:	call   0x140016d5c
   140018c17:	mov    rax,rbx
   140018c1a:	add    rsp,0x20
   140018c1e:	pop    rbx
   140018c1f:	ret    
   140018c20:	mov    rax,rsp
   140018c23:	mov    QWORD PTR [rax+0x8],rbx
   140018c27:	mov    QWORD PTR [rax+0x10],rsi
   140018c2b:	mov    QWORD PTR [rax+0x18],rdi
   140018c2f:	mov    QWORD PTR [rax+0x20],r14
   140018c33:	push   rbp
   140018c34:	lea    rbp,[rax-0x138]
   140018c3b:	sub    rsp,0x230
   140018c42:	xor    r14d,r14d
   140018c45:	mov    rdi,rcx
   140018c48:	mov    BYTE PTR [rcx+0x8],r14b
   140018c4c:	mov    eax,DWORD PTR [rcx+0x8]
   140018c4f:	mov    QWORD PTR [rcx],r14
   140018c52:	and    eax,0xffff00ff
   140018c57:	mov    sil,r14b
   140018c5a:	mov    DWORD PTR [rcx+0x8],eax
   140018c5d:	test   al,al
   140018c5f:	jne    0x140019079
   140018c65:	mov    rax,QWORD PTR [rip+0x2624c]        # 0x14003eeb8
   140018c6c:	test   BYTE PTR [rax],0xbf
   140018c6f:	je     0x140019079
   140018c75:	cmp    BYTE PTR [rip+0x2625c],r14b        # 0x14003eed8
   140018c7c:	je     0x140018c8b
   140018c7e:	cmp    BYTE PTR [rip+0x26254],r14b        # 0x14003eed9
   140018c85:	je     0x1400190f2
   140018c8b:	cmp    QWORD PTR [rdi],r14
   140018c8e:	je     0x140018cf1
   140018c90:	lea    rdx,[rip+0x1b01d]        # 0x140033cb4
   140018c97:	lea    rcx,[rbp+0xd0]
   140018c9e:	call   0x14001409c
   140018ca3:	lea    rcx,[rbp-0x10]
   140018ca7:	mov    rdx,rdi
   140018caa:	movups xmm0,XMMWORD PTR [rax]
   140018cad:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140018cb2:	call   0x140014910
   140018cb7:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140018cbb:	movdqu XMMWORD PTR [rdi],xmm0
   140018cbf:	test   sil,sil
   140018cc2:	je     0x140018cf1
   140018cc4:	lea    rcx,[rbp+0x120]
   140018ccb:	mov    dl,0x5b
   140018ccd:	call   0x140013fdc
   140018cd2:	lea    rcx,[rbp-0x80]
   140018cd6:	mov    rdx,rdi
   140018cd9:	movups xmm0,XMMWORD PTR [rax]
   140018cdc:	movdqu XMMWORD PTR [rbp-0x80],xmm0
   140018ce1:	call   0x140014910
   140018ce6:	movups xmm0,XMMWORD PTR [rbp-0x80]
   140018cea:	mov    sil,r14b
   140018ced:	movdqu XMMWORD PTR [rdi],xmm0
   140018cf1:	mov    rax,QWORD PTR [rip+0x261c0]        # 0x14003eeb8
   140018cf8:	cmp    BYTE PTR [rax],0x3f
   140018cfb:	jne    0x140019043
   140018d01:	inc    rax
   140018d04:	mov    QWORD PTR [rip+0x261ad],rax        # 0x14003eeb8
   140018d0b:	movsx  ecx,BYTE PTR [rax]
   140018d0e:	sub    ecx,0x24
   140018d11:	je     0x14001900e
   140018d17:	dec    ecx
   140018d19:	je     0x140018fb5
   140018d1f:	sub    ecx,0x1a
   140018d22:	je     0x140018ef0
   140018d28:	sub    ecx,0x2
   140018d2b:	je     0x140018fb5
   140018d31:	sub    ecx,0x8
   140018d34:	je     0x140018ea4
   140018d3a:	cmp    ecx,0x8
   140018d3d:	je     0x140018dab
   140018d3f:	lea    rcx,[rbp+0x110]
   140018d46:	xor    edx,edx
   140018d48:	call   0x1400170b4
   140018d4d:	lea    rcx,[rbp+0xb0]
   140018d54:	mov    dl,0x60
   140018d56:	mov    rbx,rax
   140018d59:	call   0x140013fdc
   140018d5e:	lea    rcx,[rsp+0x70]
   140018d63:	mov    rdx,rax
   140018d66:	call   0x140013fd0
   140018d6b:	lea    rcx,[rsp+0x70]
   140018d70:	mov    rdx,rbx
   140018d73:	call   0x140014910
   140018d78:	lea    rcx,[rbp+0x30]
   140018d7c:	mov    dl,0x27
   140018d7e:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140018d83:	movdqa XMMWORD PTR [rbp+0x30],xmm0
   140018d88:	call   0x140014950
   140018d8d:	lea    rcx,[rbp-0x70]
   140018d91:	mov    rdx,rdi
   140018d94:	movaps xmm0,XMMWORD PTR [rbp+0x30]
   140018d98:	movdqa XMMWORD PTR [rbp-0x70],xmm0
   140018d9d:	call   0x140014910
   140018da2:	movaps xmm0,XMMWORD PTR [rbp-0x70]
   140018da6:	jmp    0x14001906c
   140018dab:	and    DWORD PTR [rsp+0x28],0xffff0000
   140018db3:	inc    QWORD PTR [rip+0x260fe]        # 0x14003eeb8
   140018dba:	mov    QWORD PTR [rsp+0x20],r14
   140018dbf:	lea    rcx,[rsp+0x40]
   140018dc4:	xor    r8d,r8d
   140018dc7:	mov    dl,0x1
   140018dc9:	call   0x14001a66c
   140018dce:	cmp    BYTE PTR [rsp+0x48],r14b
   140018dd3:	jne    0x140018e19
   140018dd5:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140018dda:	cmp    QWORD PTR [rsp+0x20],r14
   140018ddf:	je     0x140018e11
   140018de1:	lea    rdx,[rip+0x1aecc]        # 0x140033cb4
   140018de8:	lea    rcx,[rbp+0x50]
   140018dec:	movdqa XMMWORD PTR [rbp+0x50],xmm0
   140018df1:	call   0x140014a6c
   140018df6:	lea    rdx,[rsp+0x20]
   140018dfb:	lea    rcx,[rbp+0x0]
   140018dff:	movaps xmm0,XMMWORD PTR [rbp+0x50]
   140018e03:	movdqa XMMWORD PTR [rbp+0x0],xmm0
   140018e08:	call   0x140014910
   140018e0d:	movaps xmm0,XMMWORD PTR [rbp+0x0]
   140018e11:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140018e17:	jmp    0x140018e2e
   140018e19:	mov    eax,DWORD PTR [rsp+0x28]
   140018e1d:	mov    QWORD PTR [rsp+0x20],r14
   140018e22:	and    eax,0xffff0002
   140018e27:	or     eax,0x2
   140018e2a:	mov    DWORD PTR [rsp+0x28],eax
   140018e2e:	cmp    BYTE PTR [rsp+0x28],r14b
   140018e33:	jne    0x140018e91
   140018e35:	mov    rax,QWORD PTR [rip+0x2607c]        # 0x14003eeb8
   140018e3c:	cmp    BYTE PTR [rax],0x40
   140018e3f:	jne    0x140018dbf
   140018e45:	lea    rcx,[rbp+0xf0]
   140018e4c:	mov    dl,0x5b
   140018e4e:	call   0x140013fdc
   140018e53:	lea    rdx,[rsp+0x20]
   140018e58:	lea    rcx,[rbp-0x40]
   140018e5c:	movups xmm0,XMMWORD PTR [rax]
   140018e5f:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140018e64:	call   0x140014910
   140018e69:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140018e6d:	lea    rcx,[rbp+0x40]
   140018e71:	mov    dl,0x5d
   140018e73:	movdqa XMMWORD PTR [rbp+0x40],xmm0
   140018e78:	call   0x140014950
   140018e7d:	movaps xmm0,XMMWORD PTR [rbp+0x40]
   140018e81:	movdqu XMMWORD PTR [rdi],xmm0
   140018e85:	inc    QWORD PTR [rip+0x2602c]        # 0x14003eeb8
   140018e8c:	jmp    0x140019070
   140018e91:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140018e98:	mov    QWORD PTR [rdi],r14
   140018e9b:	mov    BYTE PTR [rdi+0x8],0x2
   140018e9f:	jmp    0x140019070
   140018ea4:	inc    QWORD PTR [rip+0x2600d]        # 0x14003eeb8
   140018eab:	lea    rcx,[rbp+0x80]
   140018eb2:	xor    r8d,r8d
   140018eb5:	mov    dl,0x1
   140018eb7:	call   0x14001a66c
   140018ebc:	lea    rcx,[rbp-0x20]
   140018ec0:	mov    dl,0x5d
   140018ec2:	movups xmm0,XMMWORD PTR [rax]
   140018ec5:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140018eca:	call   0x140014950
   140018ecf:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140018ed3:	lea    rcx,[rbp+0x20]
   140018ed7:	mov    rdx,rdi
   140018eda:	movdqa XMMWORD PTR [rbp+0x20],xmm0
   140018edf:	call   0x140014910
   140018ee4:	mov    sil,0x1
   140018ee7:	movaps xmm0,XMMWORD PTR [rbp+0x20]
   140018eeb:	jmp    0x14001906c
   140018ef0:	mov    rax,QWORD PTR [rip+0x25fc1]        # 0x14003eeb8
   140018ef7:	lea    rcx,[rax+0x1]
   140018efb:	cmp    BYTE PTR [rcx],0x5f
   140018efe:	jne    0x140018f4f
   140018f00:	cmp    BYTE PTR [rax+0x2],0x3f
   140018f04:	jne    0x140018f4f
   140018f06:	mov    QWORD PTR [rip+0x25fab],rcx        # 0x14003eeb8
   140018f0d:	lea    rcx,[rbp+0x90]
   140018f14:	xor    r8d,r8d
   140018f17:	xor    edx,edx
   140018f19:	call   0x140017f3c
   140018f1e:	lea    rcx,[rbp-0x60]
   140018f22:	mov    rdx,rdi
   140018f25:	movups xmm0,XMMWORD PTR [rax]
   140018f28:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   140018f2d:	call   0x140014910
   140018f32:	movups xmm0,XMMWORD PTR [rbp-0x60]
   140018f36:	movdqu XMMWORD PTR [rdi],xmm0
   140018f3a:	mov    rax,QWORD PTR [rip+0x25f77]        # 0x14003eeb8
   140018f41:	cmp    BYTE PTR [rax],0x40
   140018f44:	jne    0x140019070
   140018f4a:	jmp    0x140018e85
   140018f4f:	lea    rcx,[rbp+0xa0]
   140018f56:	call   0x140016e40
   140018f5b:	lea    rcx,[rbp+0xc0]
   140018f62:	mov    dl,0x60
   140018f64:	mov    rbx,rax
   140018f67:	call   0x140013fdc
   140018f6c:	lea    rcx,[rbp-0x50]
   140018f70:	mov    rdx,rbx
   140018f73:	movups xmm0,XMMWORD PTR [rax]
   140018f76:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   140018f7b:	call   0x140014910
   140018f80:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   140018f84:	lea    rcx,[rbp-0x30]
   140018f88:	mov    dl,0x27
   140018f8a:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140018f8f:	call   0x140014950
   140018f94:	lea    rcx,[rsp+0x50]
   140018f99:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140018f9d:	mov    rdx,rdi
   140018fa0:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140018fa6:	call   0x140014910
   140018fab:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140018fb0:	jmp    0x14001906c
   140018fb5:	lea    rdx,[rip+0x25efc]        # 0x14003eeb8
   140018fbc:	lea    rcx,[rbp+0x60]
   140018fc0:	mov    r8b,0x40
   140018fc3:	call   0x140013ef0
   140018fc8:	lea    rdx,[rip+0x1ad19]        # 0x140033ce8
   140018fcf:	lea    rcx,[rbp+0xe0]
   140018fd6:	call   0x14001409c
   140018fdb:	lea    rcx,[rbp+0x10]
   140018fdf:	mov    rdx,rdi
   140018fe2:	movups xmm0,XMMWORD PTR [rax]
   140018fe5:	movdqu XMMWORD PTR [rbp+0x10],xmm0
   140018fea:	call   0x140014910
   140018fef:	movups xmm0,XMMWORD PTR [rbp+0x10]
   140018ff3:	movdqu XMMWORD PTR [rdi],xmm0
   140018ff7:	mov    rcx,QWORD PTR [rip+0x25eaa]        # 0x14003eea8
   140018ffe:	cmp    DWORD PTR [rcx],0x9
   140019001:	je     0x140019070
   140019003:	lea    rdx,[rbp+0x60]
   140019007:	call   0x140014b3c
   14001900c:	jmp    0x140019070
   14001900e:	dec    QWORD PTR [rip+0x25ea3]        # 0x14003eeb8
   140019015:	lea    rcx,[rbp+0x100]
   14001901c:	xor    r8d,r8d
   14001901f:	mov    dl,0x1
   140019021:	call   0x14001a66c
   140019026:	lea    rcx,[rsp+0x60]
   14001902b:	mov    rdx,rdi
   14001902e:	movups xmm0,XMMWORD PTR [rax]
   140019031:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   140019037:	call   0x140014910
   14001903c:	movups xmm0,XMMWORD PTR [rsp+0x60]
   140019041:	jmp    0x14001906c
   140019043:	lea    rcx,[rbp+0x70]
   140019047:	xor    r8d,r8d
   14001904a:	mov    dl,0x1
   14001904c:	call   0x14001a66c
   140019051:	lea    rcx,[rsp+0x30]
   140019056:	mov    rdx,rdi
   140019059:	movups xmm0,XMMWORD PTR [rax]
   14001905c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140019062:	call   0x140014910
   140019067:	movups xmm0,XMMWORD PTR [rsp+0x30]
   14001906c:	movdqu XMMWORD PTR [rdi],xmm0
   140019070:	cmp    BYTE PTR [rdi+0x8],r14b
   140019074:	jmp    0x140018c5f
   140019079:	mov    rax,QWORD PTR [rip+0x25e38]        # 0x14003eeb8
   140019080:	cmp    BYTE PTR [rax],r14b
   140019083:	je     0x14001909a
   140019085:	cmp    BYTE PTR [rax],0x40
   140019088:	je     0x1400190f2
   14001908a:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140019091:	mov    QWORD PTR [rdi],r14
   140019094:	mov    BYTE PTR [rdi+0x8],0x2
   140019098:	jmp    0x1400190f2
   14001909a:	mov    edx,0x1
   14001909f:	cmp    QWORD PTR [rdi],r14
   1400190a2:	jne    0x1400190ae
   1400190a4:	mov    rcx,rdi
   1400190a7:	call   0x140014530
   1400190ac:	jmp    0x1400190f2
   1400190ae:	lea    rcx,[rbp+0x70]
   1400190b2:	call   0x1400140e4
   1400190b7:	lea    rdx,[rip+0x1abf6]        # 0x140033cb4
   1400190be:	lea    rcx,[rsp+0x30]
   1400190c3:	movups xmm0,XMMWORD PTR [rax]
   1400190c6:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400190cc:	call   0x140014a6c
   1400190d1:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400190d6:	lea    rcx,[rsp+0x30]
   1400190db:	mov    rdx,rdi
   1400190de:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400190e4:	call   0x140014910
   1400190e9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400190ee:	movdqu XMMWORD PTR [rdi],xmm0
   1400190f2:	lea    r11,[rsp+0x230]
   1400190fa:	mov    rax,rdi
   1400190fd:	mov    rbx,QWORD PTR [r11+0x10]
   140019101:	mov    rsi,QWORD PTR [r11+0x18]
   140019105:	mov    rdi,QWORD PTR [r11+0x20]
   140019109:	mov    r14,QWORD PTR [r11+0x28]
   14001910d:	mov    rsp,r11
   140019110:	pop    rbp
   140019111:	ret    
   140019112:	int3   
   140019113:	int3   
   140019114:	mov    QWORD PTR [rsp+0x8],rbx
   140019119:	push   rbp
   14001911a:	mov    rbp,rsp
   14001911d:	sub    rsp,0x40
   140019121:	and    QWORD PTR [rcx],0x0
   140019125:	mov    BYTE PTR [rcx+0x8],0x0
   140019129:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140019130:	mov    rbx,rcx
   140019133:	lea    rcx,[rbp-0x20]
   140019137:	xor    r8d,r8d
   14001913a:	mov    dl,0x1
   14001913c:	call   0x14001a66c
   140019141:	movups xmm0,XMMWORD PTR [rax]
   140019144:	movdqu XMMWORD PTR [rbx],xmm0
   140019148:	cmp    BYTE PTR [rbx+0x8],0x0
   14001914c:	mov    rax,QWORD PTR [rip+0x25d65]        # 0x14003eeb8
   140019153:	jne    0x1400191a4
   140019155:	cmp    BYTE PTR [rax],0x0
   140019158:	je     0x1400191a4
   14001915a:	cmp    BYTE PTR [rax],0x40
   14001915d:	je     0x1400191a9
   14001915f:	lea    rcx,[rbp-0x10]
   140019163:	call   0x140018c20
   140019168:	lea    rdx,[rip+0x1ab45]        # 0x140033cb4
   14001916f:	lea    rcx,[rbp-0x20]
   140019173:	movups xmm0,XMMWORD PTR [rax]
   140019176:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14001917b:	call   0x140014a6c
   140019180:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140019184:	lea    rcx,[rbp-0x20]
   140019188:	mov    rdx,rbx
   14001918b:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140019190:	call   0x140014910
   140019195:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140019199:	movdqu XMMWORD PTR [rbx],xmm0
   14001919d:	mov    rax,QWORD PTR [rip+0x25d14]        # 0x14003eeb8
   1400191a4:	cmp    BYTE PTR [rax],0x40
   1400191a7:	jne    0x1400191b5
   1400191a9:	inc    rax
   1400191ac:	mov    QWORD PTR [rip+0x25d05],rax        # 0x14003eeb8
   1400191b3:	jmp    0x14001921e
   1400191b5:	cmp    BYTE PTR [rax],0x0
   1400191b8:	je     0x1400191cb
   1400191ba:	and    DWORD PTR [rbx+0x8],0xffff00ff
   1400191c1:	and    QWORD PTR [rbx],0x0
   1400191c5:	mov    BYTE PTR [rbx+0x8],0x2
   1400191c9:	jmp    0x14001921e
   1400191cb:	cmp    QWORD PTR [rbx],0x0
   1400191cf:	mov    edx,0x1
   1400191d4:	jne    0x1400191e0
   1400191d6:	mov    rcx,rbx
   1400191d9:	call   0x140014530
   1400191de:	jmp    0x14001921e
   1400191e0:	lea    rcx,[rbp-0x10]
   1400191e4:	call   0x1400140e4
   1400191e9:	lea    rdx,[rip+0x1aac4]        # 0x140033cb4
   1400191f0:	lea    rcx,[rbp-0x20]
   1400191f4:	movups xmm0,XMMWORD PTR [rax]
   1400191f7:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   1400191fc:	call   0x140014a6c
   140019201:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140019205:	lea    rcx,[rbp-0x20]
   140019209:	mov    rdx,rbx
   14001920c:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140019211:	call   0x140014910
   140019216:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14001921a:	movdqu XMMWORD PTR [rbx],xmm0
   14001921e:	mov    rax,rbx
   140019221:	mov    rbx,QWORD PTR [rsp+0x50]
   140019226:	add    rsp,0x40
   14001922a:	pop    rbp
   14001922b:	ret    
   14001922c:	mov    QWORD PTR [rsp+0x8],rbx
   140019231:	push   rdi
   140019232:	sub    rsp,0x40
   140019236:	mov    rdi,rcx
   140019239:	mov    rcx,QWORD PTR [rip+0x25c78]        # 0x14003eeb8
   140019240:	mov    al,BYTE PTR [rcx]
   140019242:	test   al,al
   140019244:	jne    0x140019255
   140019246:	mov    edx,0x1
   14001924b:	mov    rcx,rdi
   14001924e:	call   0x1400140e4
   140019253:	jmp    0x14001929a
   140019255:	xor    edx,edx
   140019257:	cmp    al,0x3f
   140019259:	jne    0x140019292
   14001925b:	inc    rcx
   14001925e:	mov    QWORD PTR [rip+0x25c53],rcx        # 0x14003eeb8
   140019265:	lea    rcx,[rsp+0x20]
   14001926a:	call   0x1400170b4
   14001926f:	lea    rcx,[rsp+0x30]
   140019274:	mov    dl,0x2d
   140019276:	mov    rbx,rax
   140019279:	call   0x140013fdc
   14001927e:	mov    rdx,rbx
   140019281:	mov    rcx,rdi
   140019284:	movups xmm0,XMMWORD PTR [rax]
   140019287:	movdqu XMMWORD PTR [rdi],xmm0
   14001928b:	call   0x140014910
   140019290:	jmp    0x14001929a
   140019292:	mov    rcx,rdi
   140019295:	call   0x1400170b4
   14001929a:	mov    rax,rdi
   14001929d:	mov    rbx,QWORD PTR [rsp+0x50]
   1400192a2:	add    rsp,0x40
   1400192a6:	pop    rdi
   1400192a7:	ret    
   1400192a8:	mov    r11,rsp
   1400192ab:	push   rbx
   1400192ac:	sub    rsp,0x50
   1400192b0:	mov    rbx,rcx
   1400192b3:	xor    ecx,ecx
   1400192b5:	mov    eax,0xffff0000
   1400192ba:	mov    QWORD PTR [r11-0x28],rcx
   1400192be:	and    DWORD PTR [rsp+0x38],eax
   1400192c2:	mov    QWORD PTR [r11-0x18],rcx
   1400192c6:	and    DWORD PTR [rsp+0x48],eax
   1400192ca:	mov    DWORD PTR [rsp+0x20],ecx
   1400192ce:	lea    r9,[r11-0x28]
   1400192d2:	lea    r8,[rip+0x167ab]        # 0x14002fa84
   1400192d9:	lea    rdx,[r11-0x18]
   1400192dd:	mov    rcx,rbx
   1400192e0:	call   0x140016620
   1400192e5:	mov    rax,rbx
   1400192e8:	add    rsp,0x50
   1400192ec:	pop    rbx
   1400192ed:	ret    
   1400192ee:	int3   
   1400192ef:	int3   
   1400192f0:	mov    rcx,QWORD PTR [rcx]
   1400192f3:	test   rcx,rcx
   1400192f6:	jne    0x1400192fc
   1400192f8:	mov    rax,rdx
   1400192fb:	ret    
   1400192fc:	mov    rax,QWORD PTR [rcx]
   1400192ff:	rex.W jmp QWORD PTR [rax+0x10]
   140019303:	int3   
   140019304:	mov    QWORD PTR [rsp+0x8],rbx
   140019309:	mov    QWORD PTR [rsp+0x10],rsi
   14001930e:	push   rdi
   14001930f:	sub    rsp,0x20
   140019313:	mov    rdi,rcx
   140019316:	mov    rcx,QWORD PTR [rcx]
   140019319:	mov    esi,r8d
   14001931c:	mov    rbx,rdx
   14001931f:	test   rcx,rcx
   140019322:	je     0x140019370
   140019324:	test   rdx,rdx
   140019327:	jne    0x14001934b
   140019329:	mov    rax,QWORD PTR [rcx]
   14001932c:	call   QWORD PTR [rax]
   14001932e:	lea    rcx,[rip+0x25bab]        # 0x14003eee0
   140019335:	xor    r8d,r8d
   140019338:	lea    esi,[rax+0x1]
   14001933b:	movsxd rdx,esi
   14001933e:	call   0x140017e18
   140019343:	mov    rbx,rax
   140019346:	test   rax,rax
   140019349:	je     0x140019378
   14001934b:	mov    rcx,QWORD PTR [rdi]
   14001934e:	test   rcx,rcx
   140019351:	jne    0x140019358
   140019353:	mov    rax,rbx
   140019356:	jmp    0x14001936b
   140019358:	mov    r9,QWORD PTR [rcx]
   14001935b:	movsxd r8,esi
   14001935e:	mov    rdx,rbx
   140019361:	dec    r8
   140019364:	add    r8,rbx
   140019367:	call   QWORD PTR [r9+0x10]
   14001936b:	mov    BYTE PTR [rax],0x0
   14001936e:	jmp    0x140019378
   140019370:	test   rdx,rdx
   140019373:	je     0x140019378
   140019375:	mov    BYTE PTR [rdx],0x0
   140019378:	mov    rsi,QWORD PTR [rsp+0x38]
   14001937d:	mov    rax,rbx
   140019380:	mov    rbx,QWORD PTR [rsp+0x30]
   140019385:	add    rsp,0x20
   140019389:	pop    rdi
   14001938a:	ret    
   14001938b:	int3   
   14001938c:	cmp    DWORD PTR [rcx+0x8],0x1
   140019390:	jne    0x1400193cb
   140019392:	sub    r8d,edx
   140019395:	mov    ecx,0x4
   14001939a:	cmp    r8d,ecx
   14001939d:	cmovl  ecx,r8d
   1400193a1:	test   ecx,ecx
   1400193a3:	je     0x1400193c4
   1400193a5:	lea    r9,[rip+0x1ad7c]        # 0x140034128
   1400193ac:	mov    r8,rdx
   1400193af:	mov    r10d,ecx
   1400193b2:	sub    r9,rdx
   1400193b5:	mov    al,BYTE PTR [r9+r8*1]
   1400193b9:	mov    BYTE PTR [r8],al
   1400193bc:	inc    r8
   1400193bf:	dec    r10
   1400193c2:	jne    0x1400193b5
   1400193c4:	movsxd rax,ecx
   1400193c7:	add    rax,rdx
   1400193ca:	ret    
   1400193cb:	mov    rax,rdx
   1400193ce:	ret    
   1400193cf:	int3   
   1400193d0:	cmp    rdx,r8
   1400193d3:	jae    0x1400193dd
   1400193d5:	mov    al,BYTE PTR [rcx+0x8]
   1400193d8:	mov    BYTE PTR [rdx],al
   1400193da:	inc    rdx
   1400193dd:	mov    rax,rdx
   1400193e0:	ret    
   1400193e1:	int3   
   1400193e2:	int3   
   1400193e3:	int3   
   1400193e4:	sub    rsp,0x28
   1400193e8:	mov    rcx,QWORD PTR [rcx+0x8]
   1400193ec:	test   rcx,rcx
   1400193ef:	je     0x140019402
   1400193f1:	mov    rcx,QWORD PTR [rcx]
   1400193f4:	test   rcx,rcx
   1400193f7:	je     0x140019402
   1400193f9:	mov    rax,QWORD PTR [rcx]
   1400193fc:	call   QWORD PTR [rax+0x10]
   1400193ff:	mov    rdx,rax
   140019402:	mov    rax,rdx
   140019405:	add    rsp,0x28
   140019409:	ret    
   14001940a:	int3   
   14001940b:	int3   
   14001940c:	mov    QWORD PTR [rsp+0x8],rbx
   140019411:	push   rdi
   140019412:	sub    rsp,0x20
   140019416:	mov    rdi,rcx
   140019419:	mov    rcx,QWORD PTR [rcx+0x8]
   14001941d:	mov    rbx,r8
   140019420:	mov    rax,QWORD PTR [rcx]
   140019423:	call   QWORD PTR [rax+0x10]
   140019426:	cmp    rax,rbx
   140019429:	jae    0x14001943c
   14001942b:	mov    rcx,QWORD PTR [rdi+0x10]
   14001942f:	mov    r8,rbx
   140019432:	mov    rdx,rax
   140019435:	mov    r9,QWORD PTR [rcx]
   140019438:	call   QWORD PTR [r9+0x10]
   14001943c:	mov    rbx,QWORD PTR [rsp+0x30]
   140019441:	add    rsp,0x20
   140019445:	pop    rdi
   140019446:	ret    
   140019447:	int3   
   140019448:	mov    r9d,DWORD PTR [rcx+0x10]
   14001944c:	mov    r10,QWORD PTR [rcx+0x8]
   140019450:	sub    r8d,edx
   140019453:	cmp    r9d,r8d
   140019456:	cmovg  r9d,r8d
   14001945a:	test   r9d,r9d
   14001945d:	je     0x140019476
   14001945f:	mov    rcx,rdx
   140019462:	sub    r10,rdx
   140019465:	mov    r8d,r9d
   140019468:	mov    al,BYTE PTR [r10+rcx*1]
   14001946c:	mov    BYTE PTR [rcx],al
   14001946e:	inc    rcx
   140019471:	dec    r8
   140019474:	jne    0x140019468
   140019476:	movsxd rax,r9d
   140019479:	add    rax,rdx
   14001947c:	ret    
   14001947d:	int3   
   14001947e:	int3   
   14001947f:	int3   
   140019480:	rex push rbx
   140019482:	sub    rsp,0x40
   140019486:	mov    rbx,rcx
   140019489:	lea    rcx,[rsp+0x20]
   14001948e:	call   0x14001409c
   140019493:	mov    rdx,QWORD PTR [rip+0x25a1e]        # 0x14003eeb8
   14001949a:	mov    al,BYTE PTR [rdx]
   14001949c:	inc    rdx
   14001949f:	mov    QWORD PTR [rip+0x25a12],rdx        # 0x14003eeb8
   1400194a6:	cmp    al,0x40
   1400194a8:	jne    0x140019529
   1400194aa:	mov    al,BYTE PTR [rdx]
   1400194ac:	inc    rdx
   1400194af:	mov    QWORD PTR [rip+0x25a02],rdx        # 0x14003eeb8
   1400194b6:	cmp    al,0x5f
   1400194b8:	jne    0x140019529
   1400194ba:	inc    rdx
   1400194bd:	lea    rcx,[rsp+0x30]
   1400194c2:	mov    QWORD PTR [rip+0x259ef],rdx        # 0x14003eeb8
   1400194c9:	xor    edx,edx
   1400194cb:	call   0x1400170b4
   1400194d0:	lea    rcx,[rsp+0x30]
   1400194d5:	xor    edx,edx
   1400194d7:	call   0x1400170b4
   1400194dc:	mov    rax,QWORD PTR [rip+0x259d5]        # 0x14003eeb8
   1400194e3:	mov    cl,BYTE PTR [rax]
   1400194e5:	test   cl,cl
   1400194e7:	je     0x140019518
   1400194e9:	cmp    cl,0x40
   1400194ec:	je     0x1400194fe
   1400194ee:	inc    rax
   1400194f1:	mov    QWORD PTR [rip+0x259c0],rax        # 0x14003eeb8
   1400194f8:	mov    cl,BYTE PTR [rax]
   1400194fa:	test   cl,cl
   1400194fc:	jne    0x1400194e9
   1400194fe:	cmp    BYTE PTR [rax],0x0
   140019501:	je     0x140019518
   140019503:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140019508:	inc    rax
   14001950b:	mov    QWORD PTR [rip+0x259a6],rax        # 0x14003eeb8
   140019512:	movdqu XMMWORD PTR [rbx],xmm0
   140019516:	jmp    0x140019536
   140019518:	dec    rax
   14001951b:	mov    edx,0x1
   140019520:	mov    QWORD PTR [rip+0x25991],rax        # 0x14003eeb8
   140019527:	jmp    0x14001952e
   140019529:	mov    edx,0x2
   14001952e:	mov    rcx,rbx
   140019531:	call   0x1400140e4
   140019536:	mov    rax,rbx
   140019539:	add    rsp,0x40
   14001953d:	pop    rbx
   14001953e:	ret    
   14001953f:	int3   
   140019540:	sub    edx,ecx
   140019542:	cmp    r9d,edx
   140019545:	cmovg  r9d,edx
   140019549:	test   r9d,r9d
   14001954c:	je     0x140019565
   14001954e:	mov    rdx,rcx
   140019551:	sub    r8,rcx
   140019554:	mov    r10d,r9d
   140019557:	mov    al,BYTE PTR [r8+rdx*1]
   14001955b:	mov    BYTE PTR [rdx],al
   14001955d:	inc    rdx
   140019560:	dec    r10
   140019563:	jne    0x140019557
   140019565:	movsxd rax,r9d
   140019568:	add    rax,rcx
   14001956b:	ret    
   14001956c:	rex push rbx
   14001956e:	sub    rsp,0x20
   140019572:	mov    rax,QWORD PTR [rip+0x2593f]        # 0x14003eeb8
   140019579:	mov    rbx,rcx
   14001957c:	cmp    BYTE PTR [rax],0x3f
   14001957f:	jne    0x1400195a5
   140019581:	inc    rax
   140019584:	cmp    BYTE PTR [rax],0x24
   140019587:	jne    0x140019592
   140019589:	mov    dl,0x1
   14001958b:	call   0x140019c20
   140019590:	jmp    0x1400195af
   140019592:	xor    r8d,r8d
   140019595:	xor    edx,edx
   140019597:	mov    QWORD PTR [rip+0x2591a],rax        # 0x14003eeb8
   14001959e:	call   0x140017f3c
   1400195a3:	jmp    0x1400195af
   1400195a5:	xor    r8d,r8d
   1400195a8:	mov    dl,0x1
   1400195aa:	call   0x14001a66c
   1400195af:	mov    rax,rbx
   1400195b2:	add    rsp,0x20
   1400195b6:	pop    rbx
   1400195b7:	ret    
   1400195b8:	mov    rax,rsp
   1400195bb:	mov    QWORD PTR [rax+0x10],rbx
   1400195bf:	mov    QWORD PTR [rax+0x18],rsi
   1400195c3:	mov    QWORD PTR [rax+0x20],rdi
   1400195c7:	push   rbp
   1400195c8:	push   r14
   1400195ca:	push   r15
   1400195cc:	lea    rbp,[rax-0x5f]
   1400195d0:	sub    rsp,0x100
   1400195d7:	mov    rax,QWORD PTR [rip+0x22bf2]        # 0x14003c1d0
   1400195de:	xor    rax,rsp
   1400195e1:	mov    QWORD PTR [rbp+0x37],rax
   1400195e5:	and    QWORD PTR [rcx],0x0
   1400195e9:	mov    BYTE PTR [rcx+0x8],0x0
   1400195ed:	and    DWORD PTR [rcx+0x8],0xffff00ff
   1400195f4:	mov    r15b,0x1
   1400195f7:	mov    rbx,rcx
   1400195fa:	mov    BYTE PTR [rip+0x258d8],r15b        # 0x14003eed9
   140019601:	cmp    BYTE PTR [rcx+0x8],0x0
   140019605:	jne    0x14001986f
   14001960b:	mov    rcx,QWORD PTR [rip+0x258a6]        # 0x14003eeb8
   140019612:	test   BYTE PTR [rcx],0xbf
   140019615:	je     0x14001986f
   14001961b:	xor    sil,sil
   14001961e:	test   r15b,r15b
   140019621:	je     0x140019628
   140019623:	xor    r15b,r15b
   140019626:	jmp    0x14001962b
   140019628:	mov    sil,0x1
   14001962b:	movsx  r8d,BYTE PTR [rcx]
   14001962f:	sub    r8d,0x30
   140019633:	cmp    r8d,0x9
   140019637:	ja     0x140019663
   140019639:	inc    rcx
   14001963c:	lea    rdx,[rbp-0x29]
   140019640:	mov    QWORD PTR [rip+0x25871],rcx        # 0x14003eeb8
   140019647:	mov    rcx,QWORD PTR [rip+0x25862]        # 0x14003eeb0
   14001964e:	call   0x14001456c
   140019653:	mov    rcx,rbx
   140019656:	mov    rdx,rax
   140019659:	call   0x140014910
   14001965e:	jmp    0x14001985e
   140019663:	and    QWORD PTR [rsp+0x20],0x0
   140019669:	and    DWORD PTR [rsp+0x28],0xffff0000
   140019671:	xor    dil,dil
   140019674:	cmp    BYTE PTR [rcx],0x24
   140019677:	mov    r14,rcx
   14001967a:	jne    0x140019697
   14001967c:	cmp    BYTE PTR [rcx+0x1],0x24
   140019680:	jne    0x140019697
   140019682:	mov    al,BYTE PTR [rcx+0x2]
   140019685:	cmp    al,0x57
   140019687:	jne    0x1400196bd
   140019689:	add    rcx,0x3
   14001968d:	mov    dil,0x1
   140019690:	mov    QWORD PTR [rip+0x25821],rcx        # 0x14003eeb8
   140019697:	mov    al,BYTE PTR [rcx]
   140019699:	cmp    al,0x58
   14001969b:	jne    0x1400196d1
   14001969d:	inc    rcx
   1400196a0:	lea    rdx,[rip+0x1a681]        # 0x140033d28
   1400196a7:	mov    QWORD PTR [rip+0x2580a],rcx        # 0x14003eeb8
   1400196ae:	lea    rcx,[rsp+0x20]
   1400196b3:	call   0x1400144f0
   1400196b8:	jmp    0x1400197f3
   1400196bd:	cmp    al,0x56
   1400196bf:	jne    0x140019697
   1400196c1:	add    rcx,0x3
   1400196c5:	mov    QWORD PTR [rip+0x257ec],rcx        # 0x14003eeb8
   1400196cc:	jmp    0x140019865
   1400196d1:	cmp    al,0x24
   1400196d3:	jne    0x1400196f1
   1400196d5:	inc    rcx
   1400196d8:	cmp    BYTE PTR [rcx],al
   1400196da:	je     0x1400196f1
   1400196dc:	mov    QWORD PTR [rip+0x257d5],rcx        # 0x14003eeb8
   1400196e3:	lea    rcx,[rbp-0x9]
   1400196e7:	call   0x1400198a4
   1400196ec:	jmp    0x1400197ea
   1400196f1:	cmp    al,0x3f
   1400196f3:	jne    0x1400197d1
   1400196f9:	lea    rcx,[rsp+0x30]
   1400196fe:	call   0x14001922c
   140019703:	test   DWORD PTR [rip+0x257c7],0x4000        # 0x14003eed4
   14001970d:	je     0x140019786
   14001970f:	lea    rdx,[rbp+0x27]
   140019713:	lea    rcx,[rsp+0x30]
   140019718:	mov    r8d,0x10
   14001971e:	call   0x140019304
   140019723:	lea    rcx,[rbp+0x27]
   140019727:	call   0x14001f97c
   14001972c:	mov    ecx,eax
   14001972e:	call   QWORD PTR [rip+0x25764]        # 0x14003ee98
   140019734:	test   rax,rax
   140019737:	je     0x140019741
   140019739:	mov    rdx,rax
   14001973c:	jmp    0x1400196ae
   140019741:	lea    rdx,[rip+0x1a5e8]        # 0x140033d30
   140019748:	lea    rcx,[rbp-0x19]
   14001974c:	call   0x14001409c
   140019751:	lea    rdx,[rsp+0x30]
   140019756:	lea    rcx,[rbp-0x39]
   14001975a:	movups xmm0,XMMWORD PTR [rax]
   14001975d:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   140019762:	call   0x140014910
   140019767:	movaps xmm0,XMMWORD PTR [rbp-0x39]
   14001976b:	lea    rdx,[rip+0x1a572]        # 0x140033ce4
   140019772:	lea    rcx,[rbp-0x49]
   140019776:	movdqa XMMWORD PTR [rbp-0x49],xmm0
   14001977b:	call   0x140014a6c
   140019780:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   140019784:	jmp    0x1400197c9
   140019786:	lea    rdx,[rip+0x1a5a3]        # 0x140033d30
   14001978d:	lea    rcx,[rbp+0x17]
   140019791:	call   0x14001409c
   140019796:	lea    rdx,[rsp+0x30]
   14001979b:	lea    rcx,[rbp-0x59]
   14001979f:	movups xmm0,XMMWORD PTR [rax]
   1400197a2:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400197a7:	call   0x140014910
   1400197ac:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   1400197b0:	lea    rdx,[rip+0x1a52d]        # 0x140033ce4
   1400197b7:	lea    rcx,[rbp-0x69]
   1400197bb:	movdqa XMMWORD PTR [rbp-0x69],xmm0
   1400197c0:	call   0x140014a6c
   1400197c5:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   1400197c9:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400197cf:	jmp    0x1400197f3
   1400197d1:	and    QWORD PTR [rbp-0x79],0x0
   1400197d6:	and    DWORD PTR [rbp-0x71],0xffff0000
   1400197dd:	lea    rdx,[rbp-0x79]
   1400197e1:	lea    rcx,[rbp+0x7]
   1400197e5:	call   0x140018658
   1400197ea:	movups xmm0,XMMWORD PTR [rax]
   1400197ed:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   1400197f3:	mov    rcx,QWORD PTR [rip+0x256be]        # 0x14003eeb8
   1400197fa:	mov    rax,rcx
   1400197fd:	sub    rax,r14
   140019800:	cmp    rax,0x1
   140019804:	jle    0x140019826
   140019806:	mov    rax,QWORD PTR [rip+0x256a3]        # 0x14003eeb0
   14001980d:	cmp    DWORD PTR [rax],0x9
   140019810:	je     0x140019826
   140019812:	lea    rdx,[rsp+0x20]
   140019817:	mov    rcx,rax
   14001981a:	call   0x140014b3c
   14001981f:	mov    rcx,QWORD PTR [rip+0x25692]        # 0x14003eeb8
   140019826:	cmp    QWORD PTR [rsp+0x20],0x0
   14001982c:	je     0x140019865
   14001982e:	test   sil,sil
   140019831:	je     0x14001983d
   140019833:	mov    dl,0x2c
   140019835:	mov    rcx,rbx
   140019838:	call   0x140014950
   14001983d:	lea    rdx,[rsp+0x20]
   140019842:	mov    rcx,rbx
   140019845:	call   0x140014910
   14001984a:	test   dil,dil
   14001984d:	je     0x14001985e
   14001984f:	lea    rdx,[rip+0x1a4ee]        # 0x140033d44
   140019856:	mov    rcx,rbx
   140019859:	call   0x140014a6c
   14001985e:	mov    rcx,QWORD PTR [rip+0x25653]        # 0x14003eeb8
   140019865:	cmp    BYTE PTR [rbx+0x8],0x0
   140019869:	je     0x140019612
   14001986f:	mov    BYTE PTR [rip+0x25663],0x0        # 0x14003eed9
   140019876:	mov    rax,rbx
   140019879:	mov    rcx,QWORD PTR [rbp+0x37]
   14001987d:	xor    rcx,rsp
   140019880:	call   0x14000c380
   140019885:	lea    r11,[rsp+0x100]
   14001988d:	mov    rbx,QWORD PTR [r11+0x28]
   140019891:	mov    rsi,QWORD PTR [r11+0x30]
   140019895:	mov    rdi,QWORD PTR [r11+0x38]
   140019899:	mov    rsp,r11
   14001989c:	pop    r15
   14001989e:	pop    r14
   1400198a0:	pop    rbp
   1400198a1:	ret    
   1400198a2:	int3   
   1400198a3:	int3   
   1400198a4:	mov    rax,rsp
   1400198a7:	mov    QWORD PTR [rax+0x10],rbx
   1400198ab:	mov    QWORD PTR [rax+0x18],rsi
   1400198af:	mov    QWORD PTR [rax+0x20],rdi
   1400198b3:	push   rbp
   1400198b4:	lea    rbp,[rax-0x48]
   1400198b8:	sub    rsp,0x140
   1400198bf:	mov    rax,QWORD PTR [rip+0x2290a]        # 0x14003c1d0
   1400198c6:	xor    rax,rsp
   1400198c9:	mov    QWORD PTR [rbp+0x30],rax
   1400198cd:	mov    rdi,rcx
   1400198d0:	mov    rcx,QWORD PTR [rip+0x255e1]        # 0x14003eeb8
   1400198d7:	movsx  esi,BYTE PTR [rcx]
   1400198da:	inc    rcx
   1400198dd:	mov    QWORD PTR [rip+0x255d4],rcx        # 0x14003eeb8
   1400198e4:	mov    ebx,esi
   1400198e6:	cmp    esi,0x45
   1400198e9:	jg     0x140019a8e
   1400198ef:	cmp    ebx,0x45
   1400198f2:	je     0x140019a81
   1400198f8:	test   ebx,ebx
   1400198fa:	je     0x140019a6d
   140019900:	sub    ebx,0x30
   140019903:	je     0x140019a60
   140019909:	dec    ebx
   14001990b:	je     0x140019a18
   140019911:	dec    ebx
   140019913:	je     0x14001996e
   140019915:	cmp    ebx,0x12
   140019918:	jne    0x1400199af
   14001991e:	lea    rcx,[rsp+0x20]
   140019923:	call   0x14001922c
   140019928:	test   DWORD PTR [rip+0x255a2],0x4000        # 0x14003eed4
   140019932:	je     0x140019ae7
   140019938:	lea    rdx,[rbp-0x50]
   14001993c:	lea    rcx,[rsp+0x20]
   140019941:	mov    r8d,0x10
   140019947:	call   0x140019304
   14001994c:	lea    rcx,[rbp-0x50]
   140019950:	call   0x14001f97c
   140019955:	mov    ecx,eax
   140019957:	call   QWORD PTR [rip+0x2553b]        # 0x14003ee98
   14001995d:	test   rax,rax
   140019960:	je     0x140019ae7
   140019966:	mov    rdx,rax
   140019969:	jmp    0x140019a2e
   14001996e:	lea    rcx,[rsp+0x20]
   140019973:	call   0x14001922c
   140019978:	lea    rcx,[rbp-0x50]
   14001997c:	call   0x14001922c
   140019981:	cmp    BYTE PTR [rsp+0x28],0x1
   140019986:	jg     0x140019a77
   14001998c:	cmp    BYTE PTR [rbp-0x48],0x1
   140019990:	jg     0x140019a77
   140019996:	lea    rdx,[rbp-0x3f]
   14001999a:	lea    rcx,[rsp+0x20]
   14001999f:	mov    r8d,0x64
   1400199a5:	call   0x140019304
   1400199aa:	test   rax,rax
   1400199ad:	jne    0x1400199c1
   1400199af:	mov    edx,0x2
   1400199b4:	mov    rcx,rdi
   1400199b7:	call   0x1400140e4
   1400199bc:	jmp    0x140019bf5
   1400199c1:	mov    al,BYTE PTR [rbp-0x3f]
   1400199c4:	mov    BYTE PTR [rbp-0x40],al
   1400199c7:	cmp    al,0x2d
   1400199c9:	jne    0x1400199d7
   1400199cb:	mov    al,BYTE PTR [rbp-0x3e]
   1400199ce:	mov    BYTE PTR [rbp-0x3e],0x2e
   1400199d2:	mov    BYTE PTR [rbp-0x3f],al
   1400199d5:	jmp    0x1400199db
   1400199d7:	mov    BYTE PTR [rbp-0x3f],0x2e
   1400199db:	lea    rdx,[rbp-0x40]
   1400199df:	lea    rcx,[rsp+0x50]
   1400199e4:	call   0x14001409c
   1400199e9:	lea    rcx,[rsp+0x20]
   1400199ee:	mov    dl,0x65
   1400199f0:	movups xmm0,XMMWORD PTR [rax]
   1400199f3:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   1400199f9:	call   0x140014950
   1400199fe:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140019a03:	lea    rdx,[rbp-0x50]
   140019a07:	mov    rcx,rdi
   140019a0a:	movdqu XMMWORD PTR [rdi],xmm0
   140019a0e:	call   0x140014910
   140019a13:	jmp    0x140019bf5
   140019a18:	cmp    BYTE PTR [rcx],0x40
   140019a1b:	jne    0x140019a3b
   140019a1d:	inc    rcx
   140019a20:	lea    rdx,[rip+0x1a321]        # 0x140033d48
   140019a27:	mov    QWORD PTR [rip+0x2548a],rcx        # 0x14003eeb8
   140019a2e:	mov    rcx,rdi
   140019a31:	call   0x14001409c
   140019a36:	jmp    0x140019bf5
   140019a3b:	lea    rcx,[rbp-0x70]
   140019a3f:	call   0x140016e40
   140019a44:	lea    rdx,[rip+0x19d29]        # 0x140033774
   140019a4b:	lea    rcx,[rsp+0x70]
   140019a50:	mov    rbx,rax
   140019a53:	call   0x14001409c
   140019a58:	mov    rdx,rbx
   140019a5b:	movups xmm0,XMMWORD PTR [rax]
   140019a5e:	jmp    0x140019a07
   140019a60:	mov    rcx,rdi
   140019a63:	call   0x14001922c
   140019a68:	jmp    0x140019bf5
   140019a6d:	dec    rcx
   140019a70:	mov    QWORD PTR [rip+0x25441],rcx        # 0x14003eeb8
   140019a77:	mov    edx,0x1
   140019a7c:	jmp    0x1400199b4
   140019a81:	mov    rcx,rdi
   140019a84:	call   0x140016e40
   140019a89:	jmp    0x140019bf5
   140019a8e:	cmp    ebx,0x4a
   140019a91:	jle    0x140019b39
   140019a97:	cmp    ebx,0x51
   140019a9a:	je     0x14001991e
   140019aa0:	cmp    ebx,0x52
   140019aa3:	je     0x140019ac2
   140019aa5:	cmp    ebx,0x53
   140019aa8:	jne    0x1400199af
   140019aae:	and    QWORD PTR [rdi],0x0
   140019ab2:	mov    BYTE PTR [rdi+0x8],0x0
   140019ab6:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140019abd:	jmp    0x140019bf5
   140019ac2:	lea    rcx,[rbp-0x50]
   140019ac6:	xor    r8d,r8d
   140019ac9:	xor    edx,edx
   140019acb:	call   0x14001a66c
   140019ad0:	lea    rcx,[rsp+0x20]
   140019ad5:	call   0x14001922c
   140019ada:	movups xmm0,XMMWORD PTR [rbp-0x50]
   140019ade:	movdqu XMMWORD PTR [rdi],xmm0
   140019ae2:	jmp    0x140019bf5
   140019ae7:	lea    rcx,[rsp+0x30]
   140019aec:	cmp    sil,0x44
   140019af0:	jne    0x140019b30
   140019af2:	lea    rdx,[rip+0x1a237]        # 0x140033d30
   140019af9:	call   0x14001409c
   140019afe:	lea    rdx,[rsp+0x20]
   140019b03:	lea    rcx,[rbp-0x50]
   140019b07:	movups xmm0,XMMWORD PTR [rax]
   140019b0a:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   140019b0f:	call   0x140014910
   140019b14:	movups xmm0,XMMWORD PTR [rbp-0x50]
   140019b18:	lea    rdx,[rip+0x1a1c5]        # 0x140033ce4
   140019b1f:	mov    rcx,rdi
   140019b22:	movdqu XMMWORD PTR [rdi],xmm0
   140019b26:	call   0x140014a6c
   140019b2b:	jmp    0x140019bf5
   140019b30:	lea    rdx,[rip+0x1a1d1]        # 0x140033d08
   140019b37:	jmp    0x140019af9
   140019b39:	lea    rcx,[rsp+0x20]
   140019b3e:	mov    dl,0x7b
   140019b40:	call   0x140013fdc
   140019b45:	sub    sil,0x48
   140019b49:	cmp    sil,0x2
   140019b4d:	ja     0x140019b72
   140019b4f:	lea    rcx,[rsp+0x40]
   140019b54:	call   0x140016e40
   140019b59:	lea    rcx,[rsp+0x20]
   140019b5e:	mov    rdx,rax
   140019b61:	call   0x140014910
   140019b66:	lea    rcx,[rsp+0x20]
   140019b6b:	mov    dl,0x2c
   140019b6d:	call   0x140014950
   140019b72:	sub    ebx,0x46
   140019b75:	je     0x140019baa
   140019b77:	dec    ebx
   140019b79:	je     0x140019b87
   140019b7b:	dec    ebx
   140019b7d:	je     0x140019bcc
   140019b7f:	dec    ebx
   140019b81:	je     0x140019baa
   140019b83:	dec    ebx
   140019b85:	jne    0x140019be2
   140019b87:	lea    rcx,[rsp+0x60]
   140019b8c:	call   0x14001922c
   140019b91:	lea    rcx,[rsp+0x20]
   140019b96:	mov    rdx,rax
   140019b99:	call   0x140014910
   140019b9e:	lea    rcx,[rsp+0x20]
   140019ba3:	mov    dl,0x2c
   140019ba5:	call   0x140014950
   140019baa:	lea    rcx,[rbp-0x80]
   140019bae:	call   0x14001922c
   140019bb3:	lea    rcx,[rsp+0x20]
   140019bb8:	mov    rdx,rax
   140019bbb:	call   0x140014910
   140019bc0:	lea    rcx,[rsp+0x20]
   140019bc5:	mov    dl,0x2c
   140019bc7:	call   0x140014950
   140019bcc:	lea    rcx,[rbp-0x60]
   140019bd0:	call   0x14001922c
   140019bd5:	lea    rcx,[rsp+0x20]
   140019bda:	mov    rdx,rax
   140019bdd:	call   0x140014910
   140019be2:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140019be7:	mov    dl,0x7d
   140019be9:	mov    rcx,rdi
   140019bec:	movdqu XMMWORD PTR [rdi],xmm0
   140019bf0:	call   0x140014950
   140019bf5:	mov    rax,rdi
   140019bf8:	mov    rcx,QWORD PTR [rbp+0x30]
   140019bfc:	xor    rcx,rsp
   140019bff:	call   0x14000c380
   140019c04:	lea    r11,[rsp+0x140]
   140019c0c:	mov    rbx,QWORD PTR [r11+0x18]
   140019c10:	mov    rsi,QWORD PTR [r11+0x20]
   140019c14:	mov    rdi,QWORD PTR [r11+0x28]
   140019c18:	mov    rsp,r11
   140019c1b:	pop    rbp
   140019c1c:	ret    
   140019c1d:	int3   
   140019c1e:	int3   
   140019c1f:	int3   
   140019c20:	mov    QWORD PTR [rsp+0x8],rbx
   140019c25:	mov    QWORD PTR [rsp+0x10],rsi
   140019c2a:	mov    QWORD PTR [rsp+0x20],rdi
   140019c2f:	push   rbp
   140019c30:	push   r12
   140019c32:	push   r13
   140019c34:	push   r14
   140019c36:	push   r15
   140019c38:	lea    rbp,[rsp-0x80]
   140019c3d:	sub    rsp,0x180
   140019c44:	mov    rax,QWORD PTR [rip+0x2526d]        # 0x14003eeb8
   140019c4b:	mov    r14b,dl
   140019c4e:	mov    rdi,rcx
   140019c51:	cmp    BYTE PTR [rax],0x3f
   140019c54:	jne    0x140019dc0
   140019c5a:	cmp    BYTE PTR [rax+0x1],0x24
   140019c5e:	jne    0x140019dc0
   140019c64:	mov    r15,QWORD PTR [rip+0x25235]        # 0x14003eea0
   140019c6b:	mov    r12,QWORD PTR [rip+0x25236]        # 0x14003eea8
   140019c72:	mov    r13,QWORD PTR [rip+0x25237]        # 0x14003eeb0
   140019c79:	or     ecx,0xffffffff
   140019c7c:	add    rax,0x2
   140019c80:	xor    bl,bl
   140019c82:	mov    DWORD PTR [rsp+0x60],ecx
   140019c86:	mov    DWORD PTR [rbp-0x40],ecx
   140019c89:	mov    DWORD PTR [rbp+0x20],ecx
   140019c8c:	lea    rcx,[rsp+0x60]
   140019c91:	mov    esi,0x1
   140019c96:	mov    QWORD PTR [rip+0x2521b],rax        # 0x14003eeb8
   140019c9d:	mov    QWORD PTR [rip+0x251fc],rcx        # 0x14003eea0
   140019ca4:	lea    rcx,[rbp-0x40]
   140019ca8:	mov    BYTE PTR [rbp+0xc0],bl
   140019cae:	mov    QWORD PTR [rip+0x251f3],rcx        # 0x14003eea8
   140019cb5:	lea    rcx,[rbp+0x20]
   140019cb9:	mov    dl,sil
   140019cbc:	mov    QWORD PTR [rip+0x251ed],rcx        # 0x14003eeb0
   140019cc3:	cmp    BYTE PTR [rax],0x3f
   140019cc6:	lea    rcx,[rsp+0x30]
   140019ccb:	jne    0x140019ceb
   140019ccd:	add    rax,rsi
   140019cd0:	lea    r8,[rbp+0xc0]
   140019cd7:	mov    QWORD PTR [rip+0x251da],rax        # 0x14003eeb8
   140019cde:	call   0x140017f3c
   140019ce3:	mov    bl,BYTE PTR [rbp+0xc0]
   140019ce9:	jmp    0x140019cf3
   140019ceb:	mov    r8b,sil
   140019cee:	call   0x14001a66c
   140019cf3:	movups xmm0,XMMWORD PTR [rax]
   140019cf6:	movzx  ecx,BYTE PTR [rip+0x251db]        # 0x14003eed8
   140019cfd:	movq   rax,xmm0
   140019d02:	movups XMMWORD PTR [rsp+0x20],xmm0
   140019d07:	test   rax,rax
   140019d0a:	cmove  ecx,esi
   140019d0d:	mov    BYTE PTR [rip+0x251c5],cl        # 0x14003eed8
   140019d13:	test   bl,bl
   140019d15:	jne    0x140019da5
   140019d1b:	lea    rcx,[rsp+0x50]
   140019d20:	call   0x1400195b8
   140019d25:	lea    rcx,[rsp+0x40]
   140019d2a:	mov    dl,0x3c
   140019d2c:	mov    rbx,rax
   140019d2f:	call   0x140013fdc
   140019d34:	lea    rcx,[rsp+0x30]
   140019d39:	mov    rdx,rbx
   140019d3c:	movups xmm0,XMMWORD PTR [rax]
   140019d3f:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140019d45:	call   0x140014910
   140019d4a:	lea    rdx,[rsp+0x30]
   140019d4f:	lea    rcx,[rsp+0x20]
   140019d54:	call   0x140014910
   140019d59:	mov    rcx,QWORD PTR [rsp+0x20]
   140019d5e:	test   rcx,rcx
   140019d61:	je     0x140019d79
   140019d63:	mov    rax,QWORD PTR [rcx]
   140019d66:	call   QWORD PTR [rax+0x8]
   140019d69:	cmp    al,0x3e
   140019d6b:	jne    0x140019d79
   140019d6d:	lea    rcx,[rsp+0x20]
   140019d72:	mov    dl,0x20
   140019d74:	call   0x140014950
   140019d79:	lea    rcx,[rsp+0x20]
   140019d7e:	mov    dl,0x3e
   140019d80:	call   0x140014950
   140019d85:	test   r14b,r14b
   140019d88:	je     0x140019da0
   140019d8a:	mov    rax,QWORD PTR [rip+0x25127]        # 0x14003eeb8
   140019d91:	cmp    BYTE PTR [rax],0x0
   140019d94:	je     0x140019da0
   140019d96:	add    rax,rsi
   140019d99:	mov    QWORD PTR [rip+0x25118],rax        # 0x14003eeb8
   140019da0:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140019da5:	mov    QWORD PTR [rip+0x250f4],r15        # 0x14003eea0
   140019dac:	mov    QWORD PTR [rip+0x250f5],r12        # 0x14003eea8
   140019db3:	mov    QWORD PTR [rip+0x250f6],r13        # 0x14003eeb0
   140019dba:	movdqu XMMWORD PTR [rdi],xmm0
   140019dbe:	jmp    0x140019dca
   140019dc0:	mov    edx,0x2
   140019dc5:	call   0x1400140e4
   140019dca:	lea    r11,[rsp+0x180]
   140019dd2:	mov    rax,rdi
   140019dd5:	mov    rbx,QWORD PTR [r11+0x30]
   140019dd9:	mov    rsi,QWORD PTR [r11+0x38]
   140019ddd:	mov    rdi,QWORD PTR [r11+0x48]
   140019de1:	mov    rsp,r11
   140019de4:	pop    r15
   140019de6:	pop    r14
   140019de8:	pop    r13
   140019dea:	pop    r12
   140019dec:	pop    rbp
   140019ded:	ret    
   140019dee:	int3   
   140019def:	int3   
   140019df0:	mov    r11,rsp
   140019df3:	push   rbx
   140019df4:	sub    rsp,0x50
   140019df8:	and    QWORD PTR [r11-0x28],0x0
   140019dfd:	and    QWORD PTR [r11-0x18],0x0
   140019e02:	mov    eax,0xffff0000
   140019e07:	and    DWORD PTR [rsp+0x38],eax
   140019e0b:	and    DWORD PTR [rsp+0x48],eax
   140019e0f:	lea    r9,[r11-0x28]
   140019e13:	lea    r8,[rip+0x15c6a]        # 0x14002fa84
   140019e1a:	lea    rdx,[r11-0x18]
   140019e1e:	mov    rbx,rcx
   140019e21:	mov    DWORD PTR [rsp+0x20],0x1
   140019e29:	call   0x140016620
   140019e2e:	mov    rax,rbx
   140019e31:	add    rsp,0x50
   140019e35:	pop    rbx
   140019e36:	ret    
   140019e37:	int3   
   140019e38:	mov    QWORD PTR [rsp+0x8],rbx
   140019e3d:	mov    QWORD PTR [rsp+0x10],rdi
   140019e42:	push   rbp
   140019e43:	mov    rbp,rsp
   140019e46:	sub    rsp,0x50
   140019e4a:	mov    rax,QWORD PTR [rip+0x25067]        # 0x14003eeb8
   140019e51:	mov    rdi,rcx
   140019e54:	cmp    BYTE PTR [rax],0x0
   140019e57:	je     0x140019eb0
   140019e59:	cmp    BYTE PTR [rax],0x5a
   140019e5c:	jne    0x140019e7e
   140019e5e:	and    QWORD PTR [rbp-0x30],0x0
   140019e63:	inc    rax
   140019e66:	and    DWORD PTR [rbp-0x28],0xffff0000
   140019e6d:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140019e71:	mov    QWORD PTR [rip+0x25040],rax        # 0x14003eeb8
   140019e78:	movdqu XMMWORD PTR [rcx],xmm0
   140019e7c:	jmp    0x140019ee8
   140019e7e:	lea    rcx,[rbp-0x20]
   140019e82:	call   0x140015cf4
   140019e87:	lea    rdx,[rip+0x1a07a]        # 0x140033f08
   140019e8e:	lea    rcx,[rbp-0x10]
   140019e92:	mov    rbx,rax
   140019e95:	call   0x14001409c
   140019e9a:	lea    rcx,[rbp-0x30]
   140019e9e:	mov    rdx,rbx
   140019ea1:	movups xmm0,XMMWORD PTR [rax]
   140019ea4:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140019ea9:	call   0x140014910
   140019eae:	jmp    0x140019ed6
   140019eb0:	lea    rdx,[rip+0x1a051]        # 0x140033f08
   140019eb7:	lea    rcx,[rbp-0x10]
   140019ebb:	call   0x14001409c
   140019ec0:	lea    rcx,[rbp-0x30]
   140019ec4:	mov    edx,0x1
   140019ec9:	movups xmm0,XMMWORD PTR [rax]
   140019ecc:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140019ed1:	call   0x140014af8
   140019ed6:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140019eda:	mov    dl,0x29
   140019edc:	mov    rcx,rdi
   140019edf:	movdqu XMMWORD PTR [rdi],xmm0
   140019ee3:	call   0x140014950
   140019ee8:	mov    rbx,QWORD PTR [rsp+0x60]
   140019eed:	mov    rax,rdi
   140019ef0:	mov    rdi,QWORD PTR [rsp+0x68]
   140019ef5:	add    rsp,0x50
   140019ef9:	pop    rbp
   140019efa:	ret    
   140019efb:	int3   
   140019efc:	sub    rsp,0x28
   140019f00:	mov    r8,QWORD PTR [rip+0x24fb1]        # 0x14003eeb8
   140019f07:	mov    r9d,0x4000
   140019f0d:	xor    edx,edx
   140019f0f:	cmp    BYTE PTR [r8],0x5f
   140019f13:	jne    0x140019f22
   140019f15:	inc    r8
   140019f18:	mov    edx,r9d
   140019f1b:	mov    QWORD PTR [rip+0x24f96],r8        # 0x14003eeb8
   140019f22:	mov    al,BYTE PTR [r8]
   140019f25:	sub    al,0x41
   140019f27:	cmp    al,0x19
   140019f29:	jbe    0x14001a2e4
   140019f2f:	cmp    BYTE PTR [r8],0x24
   140019f33:	jne    0x14001a16e
   140019f39:	inc    r8
   140019f3c:	xor    r10b,r10b
   140019f3f:	mov    QWORD PTR [rip+0x24f72],r8        # 0x14003eeb8
   140019f46:	movsx  ecx,BYTE PTR [r8]
   140019f4a:	cmp    ecx,0x42
   140019f4d:	jg     0x14001a04a
   140019f53:	je     0x14001a03f
   140019f59:	test   ecx,ecx
   140019f5b:	je     0x14001a032
   140019f61:	cmp    ecx,0x24
   140019f64:	jne    0x14001a00a
   140019f6a:	lea    rax,[r8+0x1]
   140019f6e:	cmp    BYTE PTR [rax],0x50
   140019f71:	cmove  r8,rax
   140019f75:	inc    r8
   140019f78:	mov    QWORD PTR [rip+0x24f39],r8        # 0x14003eeb8
   140019f7f:	cmp    BYTE PTR [r8],r10b
   140019f82:	je     0x14001a000
   140019f84:	mov    al,BYTE PTR [r8]
   140019f87:	sub    al,0x46
   140019f89:	test   al,0xfd
   140019f8b:	je     0x140019fb3
   140019f8d:	cmp    BYTE PTR [r8],0x4a
   140019f91:	je     0x140019fc2
   140019f93:	cmp    BYTE PTR [r8],0x4b
   140019f97:	jle    0x14001a345
   140019f9d:	cmp    BYTE PTR [r8],0x4d
   140019fa1:	jle    0x140019fb3
   140019fa3:	cmp    BYTE PTR [r8],0x4f
   140019fa7:	jle    0x140019fc2
   140019fa9:	cmp    BYTE PTR [r8],0x51
   140019fad:	jne    0x14001a345
   140019fb3:	inc    r8
   140019fb6:	mov    QWORD PTR [rip+0x24efb],r8        # 0x14003eeb8
   140019fbd:	jmp    0x140019f0d
   140019fc2:	inc    r8
   140019fc5:	mov    QWORD PTR [rip+0x24eec],r8        # 0x14003eeb8
   140019fcc:	mov    al,BYTE PTR [r8]
   140019fcf:	sub    al,0x30
   140019fd1:	cmp    al,0x9
   140019fd3:	ja     0x140019ff6
   140019fd5:	movsx  eax,BYTE PTR [r8]
   140019fd9:	sub    eax,0x2f
   140019fdc:	cdqe   
   140019fde:	add    r8,rax
   140019fe1:	mov    QWORD PTR [rip+0x24ed0],r8        # 0x14003eeb8
   140019fe8:	call   0x140019efc
   140019fed:	bts    eax,0x10
   140019ff1:	jmp    0x14001a3d6
   140019ff6:	mov    edx,0xffff
   140019ffb:	jmp    0x14001a15f
   14001a000:	mov    eax,0xfffe
   14001a005:	jmp    0x14001a3d6
   14001a00a:	cmp    ecx,0x2f
   14001a00d:	jle    0x14001a345
   14001a013:	cmp    ecx,0x35
   14001a016:	jle    0x14001a087
   14001a018:	cmp    ecx,0x41
   14001a01b:	jne    0x14001a345
   14001a021:	and    edx,0xfffff4ff
   14001a027:	or     edx,0x9000
   14001a02d:	jmp    0x14001a15f
   14001a032:	mov    edx,0xfffe
   14001a037:	dec    r8
   14001a03a:	jmp    0x14001a15f
   14001a03f:	or     edx,0x9800
   14001a045:	jmp    0x14001a15f
   14001a04a:	sub    ecx,0x43
   14001a04d:	je     0x14001a159
   14001a053:	dec    ecx
   14001a055:	je     0x14001a14b
   14001a05b:	dec    ecx
   14001a05d:	je     0x14001a13d
   14001a063:	sub    ecx,0xd
   14001a066:	jne    0x14001a345
   14001a06c:	inc    r8
   14001a06f:	mov    r10b,0x1
   14001a072:	mov    QWORD PTR [rip+0x24e3f],r8        # 0x14003eeb8
   14001a079:	mov    cl,BYTE PTR [r8]
   14001a07c:	lea    eax,[rcx-0x30]
   14001a07f:	cmp    al,0x5
   14001a081:	ja     0x14001a12d
   14001a087:	movsx  eax,BYTE PTR [r8]
   14001a08b:	mov    r9d,0x8000
   14001a091:	mov    r11d,0xffffefff
   14001a097:	or     edx,r9d
   14001a09a:	sub    eax,0x30
   14001a09d:	test   r9d,edx
   14001a0a0:	je     0x14001a0ab
   14001a0a2:	and    edx,r11d
   14001a0a5:	bts    edx,0xb
   14001a0a9:	jmp    0x14001a0b1
   14001a0ab:	and    edx,0xffff9fff
   14001a0b1:	test   r10b,r10b
   14001a0b4:	je     0x14001a0c2
   14001a0b6:	btr    edx,0x8
   14001a0ba:	or     edx,0x600
   14001a0c0:	jmp    0x14001a0cc
   14001a0c2:	btr    edx,0x9
   14001a0c6:	or     edx,0x500
   14001a0cc:	test   al,0x1
   14001a0ce:	je     0x14001a0d6
   14001a0d0:	bts    edx,0xd
   14001a0d4:	jmp    0x14001a0da
   14001a0d6:	btr    edx,0xd
   14001a0da:	and    eax,0x6
   14001a0dd:	je     0x14001a113
   14001a0df:	cmp    eax,0x2
   14001a0e2:	je     0x14001a0fe
   14001a0e4:	cmp    eax,0x4
   14001a0e7:	jne    0x14001a345
   14001a0ed:	mov    eax,edx
   14001a0ef:	mov    ecx,edx
   14001a0f1:	and    eax,0xffffff3f
   14001a0f6:	and    edx,0xffffe7ff
   14001a0fc:	jmp    0x14001a125
   14001a0fe:	mov    eax,edx
   14001a100:	mov    ecx,edx
   14001a102:	btr    edx,0xb
   14001a106:	and    eax,0xffffffbf
   14001a109:	bts    eax,0x7
   14001a10d:	bts    edx,0xc
   14001a111:	jmp    0x14001a125
   14001a113:	mov    eax,edx
   14001a115:	mov    ecx,edx
   14001a117:	and    edx,r11d
   14001a11a:	btr    eax,0x7
   14001a11e:	or     eax,0x40
   14001a121:	bts    edx,0xb
   14001a125:	and    ecx,r9d
   14001a128:	cmovne edx,eax
   14001a12b:	jmp    0x14001a15f
   14001a12d:	neg    cl
   14001a12f:	mov    edx,0xffff
   14001a134:	sbb    eax,eax
   14001a136:	add    eax,edx
   14001a138:	jmp    0x14001a3d6
   14001a13d:	and    edx,0xfffff6ff
   14001a143:	or     edx,0x9200
   14001a149:	jmp    0x14001a15f
   14001a14b:	and    edx,0xfffff5ff
   14001a151:	or     edx,0x9100
   14001a157:	jmp    0x14001a15f
   14001a159:	or     edx,0x7c00
   14001a15f:	inc    r8
   14001a162:	mov    QWORD PTR [rip+0x24d4f],r8        # 0x14003eeb8
   14001a169:	jmp    0x14001a3d4
   14001a16e:	mov    cl,BYTE PTR [r8]
   14001a171:	lea    eax,[rcx-0x30]
   14001a174:	cmp    al,0x8
   14001a176:	ja     0x14001a2b9
   14001a17c:	inc    r8
   14001a17f:	movsx  ecx,cl
   14001a182:	btr    edx,0xf
   14001a186:	mov    QWORD PTR [rip+0x24d2b],r8        # 0x14003eeb8
   14001a18d:	sub    ecx,0x30
   14001a190:	je     0x14001a279
   14001a196:	dec    ecx
   14001a198:	je     0x14001a247
   14001a19e:	dec    ecx
   14001a1a0:	je     0x14001a219
   14001a1a2:	dec    ecx
   14001a1a4:	je     0x14001a20d
   14001a1a6:	dec    ecx
   14001a1a8:	je     0x14001a200
   14001a1aa:	dec    ecx
   14001a1ac:	je     0x14001a1ef
   14001a1ae:	dec    ecx
   14001a1b0:	je     0x14001a1de
   14001a1b2:	dec    ecx
   14001a1b4:	je     0x14001a1cd
   14001a1b6:	dec    ecx
   14001a1b8:	jne    0x14001a345
   14001a1be:	btr    edx,0xa
   14001a1c2:	or     edx,0x7800
   14001a1c8:	jmp    0x14001a3d4
   14001a1cd:	and    edx,0xfffff3ff
   14001a1d3:	or     edx,0x7000
   14001a1d9:	jmp    0x14001a3d4
   14001a1de:	and    edx,0xffffebff
   14001a1e4:	or     edx,0x6800
   14001a1ea:	jmp    0x14001a3d4
   14001a1ef:	and    edx,0xffffe3ff
   14001a1f5:	or     edx,0x6000
   14001a1fb:	jmp    0x14001a3d4
   14001a200:	btr    edx,0xe
   14001a204:	bts    edx,0xd
   14001a208:	jmp    0x14001a3d4
   14001a20d:	btr    edx,0xd
   14001a211:	or     edx,r9d
   14001a214:	jmp    0x14001a3d4
   14001a219:	mov    r9d,0x8000
   14001a21f:	test   r9d,edx
   14001a222:	je     0x14001a230
   14001a224:	and    edx,0xfffffaff
   14001a22a:	bts    edx,0x9
   14001a22e:	jmp    0x14001a236
   14001a230:	and    edx,0xffff9fff
   14001a236:	mov    eax,edx
   14001a238:	mov    ecx,edx
   14001a23a:	and    eax,0xffffff3f
   14001a23f:	and    edx,0xffffe7ff
   14001a245:	jmp    0x14001a2ae
   14001a247:	mov    r9d,0x8000
   14001a24d:	test   r9d,edx
   14001a250:	je     0x14001a25e
   14001a252:	and    edx,0xfffffaff
   14001a258:	bts    edx,0x9
   14001a25c:	jmp    0x14001a264
   14001a25e:	and    edx,0xffff9fff
   14001a264:	mov    eax,edx
   14001a266:	mov    ecx,edx
   14001a268:	btr    edx,0xb
   14001a26c:	and    eax,0xffffffbf
   14001a26f:	bts    eax,0x7
   14001a273:	bts    edx,0xc
   14001a277:	jmp    0x14001a2ae
   14001a279:	mov    r9d,0x8000
   14001a27f:	test   r9d,edx
   14001a282:	je     0x14001a290
   14001a284:	and    edx,0xfffffaff
   14001a28a:	bts    edx,0x9
   14001a28e:	jmp    0x14001a296
   14001a290:	and    edx,0xffff9fff
   14001a296:	mov    eax,edx
   14001a298:	mov    ecx,edx
   14001a29a:	mov    r11d,0xffffefff
   14001a2a0:	btr    eax,0x7
   14001a2a4:	and    edx,r11d
   14001a2a7:	or     eax,0x40
   14001a2aa:	bts    edx,0xb
   14001a2ae:	and    ecx,r9d
   14001a2b1:	cmovne edx,eax
   14001a2b4:	jmp    0x14001a3d4
   14001a2b9:	cmp    cl,0x39
   14001a2bc:	jne    0x14001a2d2
   14001a2be:	inc    r8
   14001a2c1:	mov    edx,0xfffd
   14001a2c6:	mov    QWORD PTR [rip+0x24beb],r8        # 0x14003eeb8
   14001a2cd:	jmp    0x14001a3d4
   14001a2d2:	neg    cl
   14001a2d4:	mov    edx,0xfffe
   14001a2d9:	sbb    eax,eax
   14001a2db:	neg    eax
   14001a2dd:	add    edx,eax
   14001a2df:	jmp    0x14001a3d4
   14001a2e4:	movsx  r10d,BYTE PTR [r8]
   14001a2e8:	inc    r8
   14001a2eb:	mov    r9d,0x8000
   14001a2f1:	sub    r10d,0x41
   14001a2f5:	or     edx,r9d
   14001a2f8:	mov    QWORD PTR [rip+0x24bb9],r8        # 0x14003eeb8
   14001a2ff:	test   r10b,0x1
   14001a303:	je     0x14001a30b
   14001a305:	bts    edx,0xd
   14001a309:	jmp    0x14001a30f
   14001a30b:	btr    edx,0xd
   14001a30f:	cmp    r10d,0x18
   14001a313:	jge    0x14001a3d4
   14001a319:	mov    r11d,0xffffefff
   14001a31f:	test   r9d,edx
   14001a322:	je     0x14001a32d
   14001a324:	and    edx,r11d
   14001a327:	bts    edx,0xb
   14001a32b:	jmp    0x14001a333
   14001a32d:	and    edx,0xffff9fff
   14001a333:	mov    eax,r10d
   14001a336:	and    eax,0x18
   14001a339:	je     0x14001a375
   14001a33b:	cmp    eax,0x8
   14001a33e:	je     0x14001a360
   14001a340:	cmp    eax,0x10
   14001a343:	je     0x14001a34f
   14001a345:	mov    eax,0xffff
   14001a34a:	jmp    0x14001a3d6
   14001a34f:	mov    eax,edx
   14001a351:	mov    ecx,edx
   14001a353:	and    eax,0xffffff3f
   14001a358:	and    edx,0xffffe7ff
   14001a35e:	jmp    0x14001a387
   14001a360:	mov    eax,edx
   14001a362:	mov    ecx,edx
   14001a364:	btr    edx,0xb
   14001a368:	and    eax,0xffffffbf
   14001a36b:	bts    eax,0x7
   14001a36f:	bts    edx,0xc
   14001a373:	jmp    0x14001a387
   14001a375:	mov    eax,edx
   14001a377:	mov    ecx,edx
   14001a379:	and    edx,r11d
   14001a37c:	btr    eax,0x7
   14001a380:	or     eax,0x40
   14001a383:	bts    edx,0xb
   14001a387:	and    ecx,r9d
   14001a38a:	cmovne edx,eax
   14001a38d:	and    r10d,0x6
   14001a391:	je     0x14001a3d4
   14001a393:	cmp    r10d,0x2
   14001a397:	je     0x14001a3bd
   14001a399:	cmp    r10d,0x4
   14001a39d:	je     0x14001a3b1
   14001a39f:	cmp    r10d,0x6
   14001a3a3:	jne    0x14001a345
   14001a3a5:	and    edx,0xfffffcff
   14001a3ab:	bts    edx,0xa
   14001a3af:	jmp    0x14001a3d4
   14001a3b1:	and    edx,0xfffff9ff
   14001a3b7:	bts    edx,0x8
   14001a3bb:	jmp    0x14001a3d4
   14001a3bd:	test   r9d,edx
   14001a3c0:	je     0x14001a3ce
   14001a3c2:	and    edx,0xfffffaff
   14001a3c8:	bts    edx,0x9
   14001a3cc:	jmp    0x14001a3d4
   14001a3ce:	and    edx,0xffff9fff
   14001a3d4:	mov    eax,edx
   14001a3d6:	add    rsp,0x28
   14001a3da:	ret    
   14001a3db:	int3   
   14001a3dc:	rex push rbx
   14001a3de:	sub    rsp,0x20
   14001a3e2:	mov    rax,QWORD PTR [rip+0x24acf]        # 0x14003eeb8
   14001a3e9:	mov    rbx,rcx
   14001a3ec:	cmp    BYTE PTR [rax],0x0
   14001a3ef:	je     0x14001a415
   14001a3f1:	cmp    BYTE PTR [rax],0x41
   14001a3f4:	je     0x14001a3fd
   14001a3f6:	mov    edx,0x2
   14001a3fb:	jmp    0x14001a41a
   14001a3fd:	inc    rax
   14001a400:	lea    rdx,[rip+0x19c4d]        # 0x140034054
   14001a407:	mov    QWORD PTR [rip+0x24aaa],rax        # 0x14003eeb8
   14001a40e:	call   0x14001409c
   14001a413:	jmp    0x14001a41f
   14001a415:	mov    edx,0x1
   14001a41a:	call   0x1400140e4
   14001a41f:	mov    rax,rbx
   14001a422:	add    rsp,0x20
   14001a426:	pop    rbx
   14001a427:	ret    
   14001a428:	rex push rbx
   14001a42a:	sub    rsp,0x20
   14001a42e:	mov    rbx,rcx
   14001a431:	call   0x14001a49c
   14001a436:	mov    rax,rbx
   14001a439:	add    rsp,0x20
   14001a43d:	pop    rbx
   14001a43e:	ret    
   14001a43f:	int3   
   14001a440:	rex push rbx
   14001a442:	sub    rsp,0x30
   14001a446:	movups xmm0,XMMWORD PTR [rdx]
   14001a449:	lea    rdx,[rip+0x19c0c]        # 0x14003405c
   14001a450:	mov    rbx,rcx
   14001a453:	movdqu XMMWORD PTR [rcx],xmm0
   14001a457:	call   0x140014a6c
   14001a45c:	lea    rcx,[rsp+0x20]
   14001a461:	call   0x140018c20
   14001a466:	mov    rcx,rbx
   14001a469:	mov    rdx,rax
   14001a46c:	call   0x140014910
   14001a471:	mov    dl,0x7d
   14001a473:	mov    rcx,rbx
   14001a476:	call   0x140014950
   14001a47b:	mov    rax,QWORD PTR [rip+0x24a36]        # 0x14003eeb8
   14001a482:	cmp    BYTE PTR [rax],0x40
   14001a485:	jne    0x14001a491
   14001a487:	inc    rax
   14001a48a:	mov    QWORD PTR [rip+0x24a27],rax        # 0x14003eeb8
   14001a491:	mov    rax,rbx
   14001a494:	add    rsp,0x30
   14001a498:	pop    rbx
   14001a499:	ret    
   14001a49a:	int3   
   14001a49b:	int3   
   14001a49c:	mov    QWORD PTR [rsp+0x8],rbx
   14001a4a1:	mov    QWORD PTR [rsp+0x10],rdi
   14001a4a6:	push   rbp
   14001a4a7:	mov    rbp,rsp
   14001a4aa:	sub    rsp,0x70
   14001a4ae:	movups xmm0,XMMWORD PTR [rdx]
   14001a4b1:	mov    rdi,rcx
   14001a4b4:	movdqu XMMWORD PTR [rcx],xmm0
   14001a4b8:	cmp    BYTE PTR [rcx+0x8],0x1
   14001a4bc:	jg     0x14001a656
   14001a4c2:	mov    rax,QWORD PTR [rip+0x249ef]        # 0x14003eeb8
   14001a4c9:	cmp    BYTE PTR [rax],0x0
   14001a4cc:	je     0x14001a626
   14001a4d2:	and    QWORD PTR [rbp-0x40],0x0
   14001a4d7:	and    QWORD PTR [rbp-0x30],0x0
   14001a4dc:	and    DWORD PTR [rsp+0x20],0x0
   14001a4e1:	mov    eax,0xffff0000
   14001a4e6:	lea    r9,[rbp-0x40]
   14001a4ea:	lea    r8,[rip+0x15593]        # 0x14002fa84
   14001a4f1:	and    DWORD PTR [rbp-0x38],eax
   14001a4f4:	and    DWORD PTR [rbp-0x28],eax
   14001a4f7:	lea    rdx,[rbp-0x30]
   14001a4fb:	lea    rcx,[rbp-0x20]
   14001a4ff:	call   0x140016620
   14001a504:	lea    rcx,[rbp-0x30]
   14001a508:	mov    dl,0x20
   14001a50a:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14001a50e:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001a513:	call   0x140014950
   14001a518:	lea    rcx,[rbp-0x30]
   14001a51c:	mov    rdx,rdi
   14001a51f:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001a523:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001a528:	call   0x140014910
   14001a52d:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001a531:	movdqu XMMWORD PTR [rdi],xmm0
   14001a535:	cmp    BYTE PTR [rdi+0x8],0x1
   14001a539:	jg     0x14001a656
   14001a53f:	mov    rax,QWORD PTR [rip+0x24972]        # 0x14003eeb8
   14001a546:	cmp    BYTE PTR [rax],0x40
   14001a549:	je     0x14001a61a
   14001a54f:	lea    rdx,[rip+0x19b06]        # 0x14003405c
   14001a556:	mov    rcx,rdi
   14001a559:	call   0x140014a6c
   14001a55e:	mov    rax,QWORD PTR [rip+0x24953]        # 0x14003eeb8
   14001a565:	cmp    BYTE PTR [rdi+0x8],0x1
   14001a569:	jg     0x14001a615
   14001a56f:	test   BYTE PTR [rax],0xbf
   14001a572:	je     0x14001a5ec
   14001a574:	lea    rcx,[rbp-0x20]
   14001a578:	call   0x140018c20
   14001a57d:	lea    rcx,[rbp-0x10]
   14001a581:	mov    dl,0x60
   14001a583:	mov    rbx,rax
   14001a586:	call   0x140013fdc
   14001a58b:	lea    rcx,[rbp-0x30]
   14001a58f:	mov    rdx,rbx
   14001a592:	movups xmm0,XMMWORD PTR [rax]
   14001a595:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   14001a59a:	call   0x140014910
   14001a59f:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001a5a3:	lea    rcx,[rbp-0x40]
   14001a5a7:	mov    dl,0x27
   14001a5a9:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   14001a5ae:	call   0x140014950
   14001a5b3:	lea    rdx,[rbp-0x40]
   14001a5b7:	mov    rcx,rdi
   14001a5ba:	call   0x140014910
   14001a5bf:	mov    rax,QWORD PTR [rip+0x248f2]        # 0x14003eeb8
   14001a5c6:	cmp    BYTE PTR [rax],0x40
   14001a5c9:	jne    0x14001a5d5
   14001a5cb:	inc    rax
   14001a5ce:	mov    QWORD PTR [rip+0x248e3],rax        # 0x14003eeb8
   14001a5d5:	cmp    BYTE PTR [rdi+0x8],0x1
   14001a5d9:	jg     0x14001a615
   14001a5db:	cmp    BYTE PTR [rax],0x40
   14001a5de:	je     0x14001a565
   14001a5e0:	lea    rdx,[rip+0x19a7d]        # 0x140034064
   14001a5e7:	jmp    0x14001a556
   14001a5ec:	cmp    BYTE PTR [rdi+0x8],0x1
   14001a5f0:	jg     0x14001a615
   14001a5f2:	cmp    BYTE PTR [rax],0x0
   14001a5f5:	jne    0x14001a604
   14001a5f7:	mov    edx,0x1
   14001a5fc:	mov    rcx,rdi
   14001a5ff:	call   0x140014af8
   14001a604:	mov    dl,0x7d
   14001a606:	mov    rcx,rdi
   14001a609:	call   0x140014950
   14001a60e:	mov    rax,QWORD PTR [rip+0x248a3]        # 0x14003eeb8
   14001a615:	cmp    BYTE PTR [rax],0x40
   14001a618:	jne    0x14001a656
   14001a61a:	inc    rax
   14001a61d:	mov    QWORD PTR [rip+0x24894],rax        # 0x14003eeb8
   14001a624:	jmp    0x14001a656
   14001a626:	cmp    BYTE PTR [rcx+0x8],0x1
   14001a62a:	jg     0x14001a656
   14001a62c:	lea    rcx,[rbp-0x10]
   14001a630:	mov    edx,0x1
   14001a635:	call   0x1400140e4
   14001a63a:	lea    rcx,[rbp-0x30]
   14001a63e:	mov    rdx,rdi
   14001a641:	movups xmm0,XMMWORD PTR [rax]
   14001a644:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   14001a649:	call   0x140014910
   14001a64e:	movups xmm0,XMMWORD PTR [rbp-0x30]
   14001a652:	movdqu XMMWORD PTR [rdi],xmm0
   14001a656:	lea    r11,[rsp+0x70]
   14001a65b:	mov    rax,rdi
   14001a65e:	mov    rbx,QWORD PTR [r11+0x10]
   14001a662:	mov    rdi,QWORD PTR [r11+0x18]
   14001a666:	mov    rsp,r11
   14001a669:	pop    rbp
   14001a66a:	ret    
   14001a66b:	int3   
   14001a66c:	mov    QWORD PTR [rsp+0x10],rbx
   14001a671:	mov    QWORD PTR [rsp+0x18],rsi
   14001a676:	mov    QWORD PTR [rsp+0x20],rdi
   14001a67b:	push   rbp
   14001a67c:	mov    rbp,rsp
   14001a67f:	sub    rsp,0x80
   14001a686:	mov    rax,QWORD PTR [rip+0x21b43]        # 0x14003c1d0
   14001a68d:	xor    rax,rsp
   14001a690:	mov    QWORD PTR [rbp-0x8],rax
   14001a694:	mov    r9,QWORD PTR [rip+0x2481d]        # 0x14003eeb8
   14001a69b:	mov    r10b,r8b
   14001a69e:	mov    sil,dl
   14001a6a1:	movsx  r8d,BYTE PTR [r9]
   14001a6a5:	mov    rbx,rcx
   14001a6a8:	sub    r8d,0x30
   14001a6ac:	cmp    r8d,0x9
   14001a6b0:	ja     0x14001a6d0
   14001a6b2:	mov    rdx,rcx
   14001a6b5:	mov    rcx,QWORD PTR [rip+0x247ec]        # 0x14003eea8
   14001a6bc:	inc    r9
   14001a6bf:	mov    QWORD PTR [rip+0x247f2],r9        # 0x14003eeb8
   14001a6c6:	call   0x14001456c
   14001a6cb:	jmp    0x14001a8bc
   14001a6d0:	and    QWORD PTR [rbp-0x60],0x0
   14001a6d5:	mov    r11d,0xffff0000
   14001a6db:	and    DWORD PTR [rbp-0x58],r11d
   14001a6df:	cmp    BYTE PTR [r9],0x3f
   14001a6e3:	jne    0x14001a735
   14001a6e5:	lea    rcx,[rbp-0x18]
   14001a6e9:	xor    edx,edx
   14001a6eb:	call   0x140019c20
   14001a6f0:	mov    rcx,QWORD PTR [rip+0x247c1]        # 0x14003eeb8
   14001a6f7:	movups xmm0,XMMWORD PTR [rax]
   14001a6fa:	mov    al,BYTE PTR [rcx]
   14001a6fc:	inc    rcx
   14001a6ff:	mov    QWORD PTR [rip+0x247b2],rcx        # 0x14003eeb8
   14001a706:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   14001a70b:	cmp    al,0x40
   14001a70d:	je     0x14001a89a
   14001a713:	dec    rcx
   14001a716:	mov    QWORD PTR [rip+0x2479b],rcx        # 0x14003eeb8
   14001a71d:	mov    al,BYTE PTR [rcx]
   14001a71f:	lea    rcx,[rbp-0x60]
   14001a723:	neg    al
   14001a725:	sbb    edx,edx
   14001a727:	neg    edx
   14001a729:	inc    edx
   14001a72b:	call   0x140014530
   14001a730:	jmp    0x14001a89a
   14001a735:	lea    rdi,[rip+0x1957c]        # 0x140033cb8
   14001a73c:	mov    rcx,r9
   14001a73f:	mov    r8d,0x12
   14001a745:	mov    rax,rdi
   14001a748:	mov    dl,BYTE PTR [rcx]
   14001a74a:	test   dl,dl
   14001a74c:	je     0x14001a75d
   14001a74e:	cmp    dl,BYTE PTR [rax]
   14001a750:	jne    0x14001a75d
   14001a752:	inc    rcx
   14001a755:	inc    rax
   14001a758:	dec    r8d
   14001a75b:	jne    0x14001a748
   14001a75d:	movzx  ecx,BYTE PTR [rcx]
   14001a760:	movzx  eax,BYTE PTR [rax]
   14001a763:	cmp    ecx,eax
   14001a765:	jne    0x14001a76d
   14001a767:	add    r9,0x13
   14001a76b:	jmp    0x14001a7a7
   14001a76d:	lea    rdi,[rip+0x1955c]        # 0x140033cd0
   14001a774:	mov    rcx,r9
   14001a777:	mov    r8d,0xc
   14001a77d:	mov    rax,rdi
   14001a780:	mov    dl,BYTE PTR [rcx]
   14001a782:	test   dl,dl
   14001a784:	je     0x14001a795
   14001a786:	cmp    dl,BYTE PTR [rax]
   14001a788:	jne    0x14001a795
   14001a78a:	inc    rcx
   14001a78d:	inc    rax
   14001a790:	dec    r8d
   14001a793:	jne    0x14001a780
   14001a795:	movzx  ecx,BYTE PTR [rcx]
   14001a798:	movzx  eax,BYTE PTR [rax]
   14001a79b:	cmp    ecx,eax
   14001a79d:	jne    0x14001a856
   14001a7a3:	add    r9,0xd
   14001a7a7:	lea    rcx,[rbp-0x40]
   14001a7ab:	mov    QWORD PTR [rip+0x24706],r9        # 0x14003eeb8
   14001a7b2:	call   0x14001922c
   14001a7b7:	test   DWORD PTR [rip+0x24713],0x4000        # 0x14003eed4
   14001a7c1:	je     0x14001a7fd
   14001a7c3:	lea    rdx,[rbp-0x18]
   14001a7c7:	lea    rcx,[rbp-0x40]
   14001a7cb:	mov    r8d,0x10
   14001a7d1:	call   0x140019304
   14001a7d6:	lea    rcx,[rbp-0x18]
   14001a7da:	call   0x14001f97c
   14001a7df:	mov    ecx,eax
   14001a7e1:	call   QWORD PTR [rip+0x246b1]        # 0x14003ee98
   14001a7e7:	lea    rcx,[rbp-0x60]
   14001a7eb:	test   rax,rax
   14001a7ee:	je     0x14001a801
   14001a7f0:	mov    rdx,rax
   14001a7f3:	call   0x1400144f0
   14001a7f8:	jmp    0x14001a89a
   14001a7fd:	lea    rcx,[rbp-0x60]
   14001a801:	lea    rdx,[rip+0x194d8]        # 0x140033ce0
   14001a808:	call   0x1400144f0
   14001a80d:	lea    rcx,[rbp-0x28]
   14001a811:	mov    rdx,rdi
   14001a814:	call   0x14001409c
   14001a819:	lea    rdx,[rbp-0x40]
   14001a81d:	lea    rcx,[rbp-0x50]
   14001a821:	movups xmm0,XMMWORD PTR [rax]
   14001a824:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   14001a829:	call   0x140014910
   14001a82e:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   14001a832:	lea    rdx,[rip+0x194ab]        # 0x140033ce4
   14001a839:	lea    rcx,[rbp-0x50]
   14001a83d:	movdqa XMMWORD PTR [rbp-0x50],xmm0
   14001a842:	call   0x140014a6c
   14001a847:	lea    rdx,[rbp-0x50]
   14001a84b:	lea    rcx,[rbp-0x60]
   14001a84f:	call   0x140014910
   14001a854:	jmp    0x14001a89a
   14001a856:	test   r10b,r10b
   14001a859:	je     0x14001a87f
   14001a85b:	cmp    BYTE PTR [r9],0x40
   14001a85f:	jne    0x14001a87f
   14001a861:	and    QWORD PTR [rbp-0x40],0x0
   14001a866:	and    DWORD PTR [rbp-0x38],r11d
   14001a86a:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14001a86e:	inc    r9
   14001a871:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   14001a876:	mov    QWORD PTR [rip+0x2463b],r9        # 0x14003eeb8
   14001a87d:	jmp    0x14001a89a
   14001a87f:	lea    rdx,[rip+0x24632]        # 0x14003eeb8
   14001a886:	lea    rcx,[rbp-0x28]
   14001a88a:	mov    r8b,0x40
   14001a88d:	call   0x140013ef0
   14001a892:	movups xmm0,XMMWORD PTR [rax]
   14001a895:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   14001a89a:	test   sil,sil
   14001a89d:	je     0x14001a8b4
   14001a89f:	mov    rcx,QWORD PTR [rip+0x24602]        # 0x14003eea8
   14001a8a6:	cmp    DWORD PTR [rcx],0x9
   14001a8a9:	je     0x14001a8b4
   14001a8ab:	lea    rdx,[rbp-0x60]
   14001a8af:	call   0x140014b3c
   14001a8b4:	movaps xmm0,XMMWORD PTR [rbp-0x60]
   14001a8b8:	movdqu XMMWORD PTR [rbx],xmm0
   14001a8bc:	mov    rax,rbx
   14001a8bf:	mov    rcx,QWORD PTR [rbp-0x8]
   14001a8c3:	xor    rcx,rsp
   14001a8c6:	call   0x14000c380
   14001a8cb:	lea    r11,[rsp+0x80]
   14001a8d3:	mov    rbx,QWORD PTR [r11+0x18]
   14001a8d7:	mov    rsi,QWORD PTR [r11+0x20]
   14001a8db:	mov    rdi,QWORD PTR [r11+0x28]
   14001a8df:	mov    rsp,r11
   14001a8e2:	pop    rbp
   14001a8e3:	ret    
   14001a8e4:	mov    eax,DWORD PTR [rip+0x245ea]        # 0x14003eed4
   14001a8ea:	and    eax,0x4000
   14001a8ef:	ret    
   14001a8f0:	mov    eax,DWORD PTR [rcx+0x8]
   14001a8f3:	shr    eax,0xb
   14001a8f6:	and    eax,0x1
   14001a8f9:	ret    
   14001a8fa:	int3   
   14001a8fb:	int3   
   14001a8fc:	mov    eax,DWORD PTR [rcx+0x8]
   14001a8ff:	shr    eax,0xe
   14001a902:	and    eax,0x1
   14001a905:	ret    
   14001a906:	int3   
   14001a907:	int3   
   14001a908:	xor    eax,eax
   14001a90a:	cmp    QWORD PTR [rcx],rax
   14001a90d:	sete   al
   14001a910:	ret    
   14001a911:	int3   
   14001a912:	int3   
   14001a913:	int3   
   14001a914:	xor    eax,eax
   14001a916:	cmp    DWORD PTR [rcx],0x9
   14001a919:	sete   al
   14001a91c:	ret    
   14001a91d:	int3   
   14001a91e:	int3   
   14001a91f:	int3   
   14001a920:	mov    eax,DWORD PTR [rcx+0x8]
   14001a923:	shr    eax,0xc
   14001a926:	and    eax,0x1
   14001a929:	ret    
   14001a92a:	int3   
   14001a92b:	int3   
   14001a92c:	mov    eax,DWORD PTR [rcx+0x8]
   14001a92f:	shr    eax,0xd
   14001a932:	and    eax,0x1
   14001a935:	ret    
   14001a936:	int3   
   14001a937:	int3   
   14001a938:	mov    eax,DWORD PTR [rcx+0x8]
   14001a93b:	shr    eax,0x8
   14001a93e:	and    eax,0x1
   14001a941:	ret    
   14001a942:	int3   
   14001a943:	int3   
   14001a944:	xor    eax,eax
   14001a946:	cmp    QWORD PTR [rcx],rax
   14001a949:	je     0x14001a959
   14001a94b:	test   DWORD PTR [rcx+0x8],0x200
   14001a952:	je     0x14001a959
   14001a954:	mov    eax,0x1
   14001a959:	ret    
   14001a95a:	int3   
   14001a95b:	int3   
   14001a95c:	xor    eax,eax
   14001a95e:	cmp    QWORD PTR [rcx],rax
   14001a961:	je     0x14001a971
   14001a963:	test   DWORD PTR [rcx+0x8],0x400
   14001a96a:	je     0x14001a971
   14001a96c:	mov    eax,0x1
   14001a971:	ret    
   14001a972:	int3   
   14001a973:	int3   
   14001a974:	mov    eax,DWORD PTR [rcx+0x8]
   14001a977:	shr    eax,0xf
   14001a97a:	and    eax,0x1
   14001a97d:	ret    
   14001a97e:	int3   
   14001a97f:	int3   
   14001a980:	xor    eax,eax
   14001a982:	cmp    BYTE PTR [rcx+0x8],0x1
   14001a986:	setle  al
   14001a989:	ret    
   14001a98a:	int3   
   14001a98b:	int3   
   14001a98c:	mov    rcx,QWORD PTR [rcx]
   14001a98f:	test   rcx,rcx
   14001a992:	jne    0x14001a997
   14001a994:	xor    eax,eax
   14001a996:	ret    
   14001a997:	mov    rax,QWORD PTR [rcx]
   14001a99a:	rex.W jmp QWORD PTR [rax]
   14001a99d:	int3   
   14001a99e:	int3   
   14001a99f:	int3   
   14001a9a0:	mov    eax,DWORD PTR [rcx+0xc]
   14001a9a3:	ret    
   14001a9a4:	mov    eax,0x1
   14001a9a9:	ret    
   14001a9aa:	int3   
   14001a9ab:	int3   
   14001a9ac:	sub    rsp,0x28
   14001a9b0:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a9b4:	xor    eax,eax
   14001a9b6:	test   rcx,rcx
   14001a9b9:	je     0x14001a9c8
   14001a9bb:	mov    rcx,QWORD PTR [rcx]
   14001a9be:	test   rcx,rcx
   14001a9c1:	je     0x14001a9c8
   14001a9c3:	mov    rax,QWORD PTR [rcx]
   14001a9c6:	call   QWORD PTR [rax]
   14001a9c8:	add    rsp,0x28
   14001a9cc:	ret    
   14001a9cd:	int3   
   14001a9ce:	int3   
   14001a9cf:	int3   
   14001a9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a9d5:	mov    QWORD PTR [rsp+0x10],rsi
   14001a9da:	push   rdi
   14001a9db:	sub    rsp,0x20
   14001a9df:	cmp    DWORD PTR [rcx+0x18],0x0
   14001a9e3:	mov    rsi,rcx
   14001a9e6:	jge    0x14001aa04
   14001a9e8:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a9ec:	mov    rbx,QWORD PTR [rsi+0x8]
   14001a9f0:	mov    rax,QWORD PTR [rcx]
   14001a9f3:	call   QWORD PTR [rax]
   14001a9f5:	mov    rdx,QWORD PTR [rbx]
   14001a9f8:	mov    rcx,rbx
   14001a9fb:	mov    edi,eax
   14001a9fd:	call   QWORD PTR [rdx]
   14001a9ff:	add    edi,eax
   14001aa01:	mov    DWORD PTR [rsi+0x18],edi
   14001aa04:	mov    eax,DWORD PTR [rsi+0x18]
   14001aa07:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aa0c:	mov    rsi,QWORD PTR [rsp+0x38]
   14001aa11:	add    rsp,0x20
   14001aa15:	pop    rdi
   14001aa16:	ret    
   14001aa17:	int3   
   14001aa18:	mov    eax,DWORD PTR [rcx+0x10]
   14001aa1b:	ret    
   14001aa1c:	mov    eax,DWORD PTR [rip+0x2452e]        # 0x14003ef50
   14001aa22:	test   al,0x1
   14001aa24:	jne    0x14001aa85
   14001aa26:	or     eax,0x1
   14001aa29:	xor    edx,edx
   14001aa2b:	mov    DWORD PTR [rip+0x244f3],0x1        # 0x14003ef28
   14001aa35:	mov    DWORD PTR [rip+0x24515],eax        # 0x14003ef50
   14001aa3b:	lea    rax,[rip+0x196ae]        # 0x1400340f0
   14001aa42:	mov    DWORD PTR [rip+0x244e0],0x4        # 0x14003ef2c
   14001aa4c:	mov    QWORD PTR [rip+0x244c5],rdx        # 0x14003ef18
   14001aa53:	mov    QWORD PTR [rip+0x244da],0x2        # 0x14003ef38
   14001aa5e:	mov    QWORD PTR [rip+0x244df],0x3        # 0x14003ef48
   14001aa69:	mov    QWORD PTR [rip+0x244a0],rax        # 0x14003ef10
   14001aa70:	mov    QWORD PTR [rip+0x244a9],rax        # 0x14003ef20
   14001aa77:	mov    QWORD PTR [rip+0x244b2],rax        # 0x14003ef30
   14001aa7e:	mov    QWORD PTR [rip+0x244bb],rax        # 0x14003ef40
   14001aa85:	cmp    ecx,0x3
   14001aa88:	ja     0x14001aa9c
   14001aa8a:	movsxd rax,ecx
   14001aa8d:	lea    rcx,[rip+0x2447c]        # 0x14003ef10
   14001aa94:	shl    rax,0x4
   14001aa98:	add    rax,rcx
   14001aa9b:	ret    
   14001aa9c:	lea    rax,[rip+0x2449d]        # 0x14003ef40
   14001aaa3:	ret    
   14001aaa4:	bts    DWORD PTR [rcx+0x8],0xb
   14001aaa9:	ret    
   14001aaaa:	int3   
   14001aaab:	int3   
   14001aaac:	bts    DWORD PTR [rcx+0x8],0xe
   14001aab1:	ret    
   14001aab2:	int3   
   14001aab3:	int3   
   14001aab4:	bts    DWORD PTR [rcx+0x8],0xc
   14001aab9:	ret    
   14001aaba:	int3   
   14001aabb:	int3   
   14001aabc:	bts    DWORD PTR [rcx+0x8],0xd
   14001aac1:	ret    
   14001aac2:	int3   
   14001aac3:	int3   
   14001aac4:	cmp    QWORD PTR [rcx],0x0
   14001aac8:	je     0x14001aacf
   14001aaca:	bts    DWORD PTR [rcx+0x8],0x9
   14001aacf:	ret    
   14001aad0:	bts    DWORD PTR [rcx+0x8],0xf
   14001aad5:	ret    
   14001aad6:	int3   
   14001aad7:	int3   
   14001aad8:	bts    DWORD PTR [rcx+0x8],0x8
   14001aadd:	mov    rax,rcx
   14001aae0:	ret    
   14001aae1:	int3   
   14001aae2:	int3   
   14001aae3:	int3   
   14001aae4:	movsx  eax,BYTE PTR [rcx+0x8]
   14001aae8:	ret    
   14001aae9:	int3   
   14001aaea:	int3   
   14001aaeb:	int3   
   14001aaec:	test   r8d,r8d
   14001aaef:	je     0x14001ab04
   14001aaf1:	sub    rdx,rcx
   14001aaf4:	mov    r8d,r8d
   14001aaf7:	mov    al,BYTE PTR [rdx+rcx*1]
   14001aafa:	mov    BYTE PTR [rcx],al
   14001aafc:	inc    rcx
   14001aaff:	dec    r8
   14001ab02:	jne    0x14001aaf7
   14001ab04:	ret    
   14001ab05:	int3   
   14001ab06:	int3   
   14001ab07:	int3   
   14001ab08:	xor    eax,eax
   14001ab0a:	cmp    BYTE PTR [rcx],al
   14001ab0c:	je     0x14001ab18
   14001ab0e:	inc    rcx
   14001ab11:	inc    eax
   14001ab13:	cmp    BYTE PTR [rcx],0x0
   14001ab16:	jne    0x14001ab0e
   14001ab18:	ret    
   14001ab19:	int3   
   14001ab1a:	int3   
   14001ab1b:	int3   
   14001ab1c:	test   r8d,r8d
   14001ab1f:	jne    0x14001ab24
   14001ab21:	xor    eax,eax
   14001ab23:	ret    
   14001ab24:	or     r9d,0xffffffff
   14001ab28:	jmp    0x14001ab3a
   14001ab2a:	mov    al,BYTE PTR [rcx]
   14001ab2c:	test   al,al
   14001ab2e:	je     0x14001ab3f
   14001ab30:	cmp    al,BYTE PTR [rdx]
   14001ab32:	jne    0x14001ab3f
   14001ab34:	inc    rcx
   14001ab37:	inc    rdx
   14001ab3a:	add    r8d,r9d
   14001ab3d:	jne    0x14001ab2a
   14001ab3f:	movzx  eax,BYTE PTR [rcx]
   14001ab42:	movzx  ecx,BYTE PTR [rdx]
   14001ab45:	sub    eax,ecx
   14001ab47:	ret    
   14001ab48:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab4d:	mov    QWORD PTR [rsp+0x10],rsi
   14001ab52:	mov    QWORD PTR [rsp+0x18],rdi
   14001ab57:	push   r14
   14001ab59:	sub    rsp,0xe0
   14001ab60:	mov    rbx,r9
   14001ab63:	mov    edi,r8d
   14001ab66:	mov    rsi,rdx
   14001ab69:	mov    r14,rcx
   14001ab6c:	test   r9,r9
   14001ab6f:	jne    0x14001ab78
   14001ab71:	xor    eax,eax
   14001ab73:	jmp    0x14001ac2e
   14001ab78:	mov    ecx,0x5
   14001ab7d:	call   0x14000fd24
   14001ab82:	test   eax,eax
   14001ab84:	je     0x14001ab71
   14001ab86:	mov    ecx,0x5
   14001ab8b:	call   0x14000fc2c
   14001ab90:	nop
   14001ab91:	mov    QWORD PTR [rip+0x24348],rbx        # 0x14003eee0
   14001ab98:	mov    rax,QWORD PTR [rsp+0x110]
   14001aba0:	mov    QWORD PTR [rip+0x24341],rax        # 0x14003eee8
   14001aba7:	and    QWORD PTR [rip+0x24351],0x0        # 0x14003ef00
   14001abaf:	xorps  xmm0,xmm0
   14001abb2:	movdqu XMMWORD PTR [rip+0x24336],xmm0        # 0x14003eef0
   14001abba:	movzx  eax,WORD PTR [rsp+0x118]
   14001abc2:	mov    DWORD PTR [rsp+0x28],eax
   14001abc6:	and    QWORD PTR [rsp+0x20],0x0
   14001abcc:	mov    r9d,edi
   14001abcf:	mov    r8,rsi
   14001abd2:	mov    rdx,r14
   14001abd5:	lea    rcx,[rsp+0x30]
   14001abda:	call   0x1400142c0
   14001abdf:	lea    rcx,[rsp+0x30]
   14001abe4:	call   0x1400145b4
   14001abe9:	mov    rbx,rax
   14001abec:	mov    r8,QWORD PTR [rip+0x242f5]        # 0x14003eee8
   14001abf3:	test   r8,r8
   14001abf6:	je     0x14001ac21
   14001abf8:	mov    rcx,QWORD PTR [rip+0x242f1]        # 0x14003eef0
   14001abff:	mov    QWORD PTR [rip+0x242f2],rcx        # 0x14003eef8
   14001ac06:	test   rcx,rcx
   14001ac09:	je     0x14001ac21
   14001ac0b:	mov    rdx,QWORD PTR [rcx]
   14001ac0e:	mov    QWORD PTR [rip+0x242db],rdx        # 0x14003eef0
   14001ac15:	call   r8
   14001ac18:	mov    r8,QWORD PTR [rip+0x242c9]        # 0x14003eee8
   14001ac1f:	jmp    0x14001abf8
   14001ac21:	mov    ecx,0x5
   14001ac26:	call   0x14000fe48
   14001ac2b:	mov    rax,rbx
   14001ac2e:	lea    r11,[rsp+0xe0]
   14001ac36:	mov    rbx,QWORD PTR [r11+0x10]
   14001ac3a:	mov    rsi,QWORD PTR [r11+0x18]
   14001ac3e:	mov    rdi,QWORD PTR [r11+0x20]
   14001ac42:	mov    rsp,r11
   14001ac45:	pop    r14
   14001ac47:	ret    
   14001ac48:	mov    QWORD PTR [rsp+0x8],rbx
   14001ac4d:	mov    QWORD PTR [rsp+0x10],rsi
   14001ac52:	mov    QWORD PTR [rsp+0x18],rdi
   14001ac57:	push   r14
   14001ac59:	sub    rsp,0xe0
   14001ac60:	mov    rbx,r9
   14001ac63:	mov    edi,r8d
   14001ac66:	mov    rsi,rdx
   14001ac69:	mov    r14,rcx
   14001ac6c:	test   r9,r9
   14001ac6f:	jne    0x14001ac78
   14001ac71:	xor    eax,eax
   14001ac73:	jmp    0x14001ad34
   14001ac78:	mov    ecx,0x5
   14001ac7d:	call   0x14000fd24
   14001ac82:	test   eax,eax
   14001ac84:	je     0x14001ac71
   14001ac86:	mov    ecx,0x5
   14001ac8b:	call   0x14000fc2c
   14001ac90:	nop
   14001ac91:	mov    QWORD PTR [rip+0x24248],rbx        # 0x14003eee0
   14001ac98:	mov    rax,QWORD PTR [rsp+0x110]
   14001aca0:	mov    QWORD PTR [rip+0x24241],rax        # 0x14003eee8
   14001aca7:	and    QWORD PTR [rip+0x24251],0x0        # 0x14003ef00
   14001acaf:	xorps  xmm0,xmm0
   14001acb2:	movdqu XMMWORD PTR [rip+0x24236],xmm0        # 0x14003eef0
   14001acba:	mov    eax,DWORD PTR [rsp+0x120]
   14001acc1:	mov    DWORD PTR [rsp+0x28],eax
   14001acc5:	mov    rax,QWORD PTR [rsp+0x118]
   14001accd:	mov    QWORD PTR [rsp+0x20],rax
   14001acd2:	mov    r9d,edi
   14001acd5:	mov    r8,rsi
   14001acd8:	mov    rdx,r14
   14001acdb:	lea    rcx,[rsp+0x30]
   14001ace0:	call   0x1400142c0
   14001ace5:	lea    rcx,[rsp+0x30]
   14001acea:	call   0x1400145b4
   14001acef:	mov    rbx,rax
   14001acf2:	mov    r8,QWORD PTR [rip+0x241ef]        # 0x14003eee8
   14001acf9:	test   r8,r8
   14001acfc:	je     0x14001ad27
   14001acfe:	mov    rcx,QWORD PTR [rip+0x241eb]        # 0x14003eef0
   14001ad05:	mov    QWORD PTR [rip+0x241ec],rcx        # 0x14003eef8
   14001ad0c:	test   rcx,rcx
   14001ad0f:	je     0x14001ad27
   14001ad11:	mov    rdx,QWORD PTR [rcx]
   14001ad14:	mov    QWORD PTR [rip+0x241d5],rdx        # 0x14003eef0
   14001ad1b:	call   r8
   14001ad1e:	mov    r8,QWORD PTR [rip+0x241c3]        # 0x14003eee8
   14001ad25:	jmp    0x14001acfe
   14001ad27:	mov    ecx,0x5
   14001ad2c:	call   0x14000fe48
   14001ad31:	mov    rax,rbx
   14001ad34:	lea    r11,[rsp+0xe0]
   14001ad3c:	mov    rbx,QWORD PTR [r11+0x10]
   14001ad40:	mov    rsi,QWORD PTR [r11+0x18]
   14001ad44:	mov    rdi,QWORD PTR [r11+0x20]
   14001ad48:	mov    rsp,r11
   14001ad4b:	pop    r14
   14001ad4d:	ret    
   14001ad4e:	int3   
   14001ad4f:	int3   
   14001ad50:	xor    eax,eax
   14001ad52:	cmp    ecx,0x80
   14001ad58:	setb   al
   14001ad5b:	ret    
   14001ad5c:	rex push rbx
   14001ad5e:	sub    rsp,0x20
   14001ad62:	mov    ebx,ecx
   14001ad64:	movzx  ecx,cl
   14001ad67:	call   0x14001b340
   14001ad6c:	xor    edx,edx
   14001ad6e:	test   eax,eax
   14001ad70:	jne    0x14001ad77
   14001ad72:	cmp    bl,0x5f
   14001ad75:	jne    0x14001ad7c
   14001ad77:	mov    edx,0x1
   14001ad7c:	mov    eax,edx
   14001ad7e:	add    rsp,0x20
   14001ad82:	pop    rbx
   14001ad83:	ret    
   14001ad84:	rex push rbx
   14001ad86:	sub    rsp,0x20
   14001ad8a:	mov    ebx,ecx
   14001ad8c:	call   0x14001b3c0
   14001ad91:	xor    edx,edx
   14001ad93:	test   eax,eax
   14001ad95:	jne    0x14001ad9c
   14001ad97:	cmp    ebx,0x5f
   14001ad9a:	jne    0x14001ada1
   14001ad9c:	mov    edx,0x1
   14001ada1:	mov    eax,edx
   14001ada3:	add    rsp,0x20
   14001ada7:	pop    rbx
   14001ada8:	ret    
   14001ada9:	int3   
   14001adaa:	int3   
   14001adab:	int3   
   14001adac:	and    ecx,0x7f
   14001adaf:	mov    eax,ecx
   14001adb1:	ret    
   14001adb2:	int3   
   14001adb3:	int3   
   14001adb4:	rex push rbx
   14001adb6:	sub    rsp,0x40
   14001adba:	movsxd rbx,ecx
   14001adbd:	lea    rcx,[rsp+0x20]
   14001adc2:	call   0x140008fac
   14001adc7:	mov    rax,QWORD PTR [rsp+0x20]
   14001adcc:	cmp    DWORD PTR [rax+0xd4],0x1
   14001add3:	jle    0x14001adea
   14001add5:	lea    r8,[rsp+0x20]
   14001adda:	mov    edx,0x107
   14001addf:	mov    ecx,ebx
   14001ade1:	call   0x14001f9b8
   14001ade6:	mov    ecx,eax
   14001ade8:	jmp    0x14001adfb
   14001adea:	mov    rax,QWORD PTR [rax+0x108]
   14001adf1:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001adf5:	and    ecx,0x107
   14001adfb:	cmp    BYTE PTR [rsp+0x38],0x0
   14001ae00:	je     0x14001ae0e
   14001ae02:	mov    rax,QWORD PTR [rsp+0x30]
   14001ae07:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001ae0e:	mov    eax,ecx
   14001ae10:	add    rsp,0x40
   14001ae14:	pop    rbx
   14001ae15:	ret    
   14001ae16:	int3   
   14001ae17:	int3   
   14001ae18:	rex push rbx
   14001ae1a:	sub    rsp,0x40
   14001ae1e:	movsxd rbx,ecx
   14001ae21:	lea    rcx,[rsp+0x20]
   14001ae26:	call   0x140008fac
   14001ae2b:	mov    rax,QWORD PTR [rsp+0x20]
   14001ae30:	cmp    DWORD PTR [rax+0xd4],0x1
   14001ae37:	jle    0x14001ae4e
   14001ae39:	lea    r8,[rsp+0x20]
   14001ae3e:	mov    edx,0x103
   14001ae43:	mov    ecx,ebx
   14001ae45:	call   0x14001f9b8
   14001ae4a:	mov    ecx,eax
   14001ae4c:	jmp    0x14001ae5f
   14001ae4e:	mov    rax,QWORD PTR [rax+0x108]
   14001ae55:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001ae59:	and    ecx,0x103
   14001ae5f:	cmp    BYTE PTR [rsp+0x38],0x0
   14001ae64:	je     0x14001ae72
   14001ae66:	mov    rax,QWORD PTR [rsp+0x30]
   14001ae6b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001ae72:	mov    eax,ecx
   14001ae74:	add    rsp,0x40
   14001ae78:	pop    rbx
   14001ae79:	ret    
   14001ae7a:	int3   
   14001ae7b:	int3   
   14001ae7c:	rex push rbx
   14001ae7e:	sub    rsp,0x40
   14001ae82:	movsxd rbx,ecx
   14001ae85:	lea    rcx,[rsp+0x20]
   14001ae8a:	call   0x140008fac
   14001ae8f:	cmp    ebx,0x9
   14001ae92:	jne    0x14001ae99
   14001ae94:	lea    ecx,[rbx+0x37]
   14001ae97:	jmp    0x14001aece
   14001ae99:	mov    rax,QWORD PTR [rsp+0x20]
   14001ae9e:	cmp    DWORD PTR [rax+0xd4],0x1
   14001aea5:	jle    0x14001aebc
   14001aea7:	lea    r8,[rsp+0x20]
   14001aeac:	mov    edx,0x40
   14001aeb1:	mov    ecx,ebx
   14001aeb3:	call   0x14001f9b8
   14001aeb8:	mov    ecx,eax
   14001aeba:	jmp    0x14001aece
   14001aebc:	mov    rax,QWORD PTR [rax+0x108]
   14001aec3:	mov    ecx,0x40
   14001aec8:	movzx  edx,WORD PTR [rax+rbx*2]
   14001aecc:	and    ecx,edx
   14001aece:	cmp    BYTE PTR [rsp+0x38],0x0
   14001aed3:	je     0x14001aee1
   14001aed5:	mov    rax,QWORD PTR [rsp+0x30]
   14001aeda:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001aee1:	mov    eax,ecx
   14001aee3:	add    rsp,0x40
   14001aee7:	pop    rbx
   14001aee8:	ret    
   14001aee9:	int3   
   14001aeea:	int3   
   14001aeeb:	int3   
   14001aeec:	rex push rbx
   14001aeee:	sub    rsp,0x40
   14001aef2:	movsxd rbx,ecx
   14001aef5:	lea    rcx,[rsp+0x20]
   14001aefa:	call   0x140008fac
   14001aeff:	mov    rax,QWORD PTR [rsp+0x20]
   14001af04:	cmp    DWORD PTR [rax+0xd4],0x1
   14001af0b:	jle    0x14001af22
   14001af0d:	lea    r8,[rsp+0x20]
   14001af12:	mov    edx,0x20
   14001af17:	mov    ecx,ebx
   14001af19:	call   0x14001f9b8
   14001af1e:	mov    ecx,eax
   14001af20:	jmp    0x14001af30
   14001af22:	mov    rax,QWORD PTR [rax+0x108]
   14001af29:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001af2d:	and    ecx,0x20
   14001af30:	cmp    BYTE PTR [rsp+0x38],0x0
   14001af35:	je     0x14001af43
   14001af37:	mov    rax,QWORD PTR [rsp+0x30]
   14001af3c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001af43:	mov    eax,ecx
   14001af45:	add    rsp,0x40
   14001af49:	pop    rbx
   14001af4a:	ret    
   14001af4b:	int3   
   14001af4c:	rex push rbx
   14001af4e:	sub    rsp,0x40
   14001af52:	movsxd rbx,ecx
   14001af55:	lea    rcx,[rsp+0x20]
   14001af5a:	call   0x140008fac
   14001af5f:	mov    rax,QWORD PTR [rsp+0x20]
   14001af64:	cmp    DWORD PTR [rax+0xd4],0x1
   14001af6b:	jle    0x14001af82
   14001af6d:	lea    r8,[rsp+0x20]
   14001af72:	mov    edx,0x107
   14001af77:	mov    ecx,ebx
   14001af79:	call   0x14001f9b8
   14001af7e:	mov    edx,eax
   14001af80:	jmp    0x14001af93
   14001af82:	mov    rax,QWORD PTR [rax+0x108]
   14001af89:	movzx  edx,WORD PTR [rax+rbx*2]
   14001af8d:	and    edx,0x107
   14001af93:	xor    ecx,ecx
   14001af95:	cmp    BYTE PTR [rsp+0x38],cl
   14001af99:	je     0x14001afa7
   14001af9b:	mov    rax,QWORD PTR [rsp+0x30]
   14001afa0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001afa7:	test   edx,edx
   14001afa9:	jne    0x14001afb0
   14001afab:	cmp    ebx,0x5f
   14001afae:	jne    0x14001afb5
   14001afb0:	mov    ecx,0x1
   14001afb5:	mov    eax,ecx
   14001afb7:	add    rsp,0x40
   14001afbb:	pop    rbx
   14001afbc:	ret    
   14001afbd:	int3   
   14001afbe:	int3   
   14001afbf:	int3   
   14001afc0:	rex push rbx
   14001afc2:	sub    rsp,0x40
   14001afc6:	movsxd rbx,ecx
   14001afc9:	lea    rcx,[rsp+0x20]
   14001afce:	call   0x140008fac
   14001afd3:	mov    rax,QWORD PTR [rsp+0x20]
   14001afd8:	cmp    DWORD PTR [rax+0xd4],0x1
   14001afdf:	jle    0x14001aff6
   14001afe1:	lea    r8,[rsp+0x20]
   14001afe6:	mov    edx,0x103
   14001afeb:	mov    ecx,ebx
   14001afed:	call   0x14001f9b8
   14001aff2:	mov    edx,eax
   14001aff4:	jmp    0x14001b007
   14001aff6:	mov    rax,QWORD PTR [rax+0x108]
   14001affd:	movzx  edx,WORD PTR [rax+rbx*2]
   14001b001:	and    edx,0x103
   14001b007:	xor    ecx,ecx
   14001b009:	cmp    BYTE PTR [rsp+0x38],cl
   14001b00d:	je     0x14001b01b
   14001b00f:	mov    rax,QWORD PTR [rsp+0x30]
   14001b014:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b01b:	test   edx,edx
   14001b01d:	jne    0x14001b024
   14001b01f:	cmp    ebx,0x5f
   14001b022:	jne    0x14001b029
   14001b024:	mov    ecx,0x1
   14001b029:	mov    eax,ecx
   14001b02b:	add    rsp,0x40
   14001b02f:	pop    rbx
   14001b030:	ret    
   14001b031:	int3   
   14001b032:	int3   
   14001b033:	int3   
   14001b034:	rex push rbx
   14001b036:	sub    rsp,0x40
   14001b03a:	movsxd rbx,ecx
   14001b03d:	lea    rcx,[rsp+0x20]
   14001b042:	call   0x140008fac
   14001b047:	mov    rax,QWORD PTR [rsp+0x20]
   14001b04c:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b053:	jle    0x14001b06a
   14001b055:	lea    r8,[rsp+0x20]
   14001b05a:	mov    edx,0x4
   14001b05f:	mov    ecx,ebx
   14001b061:	call   0x14001f9b8
   14001b066:	mov    ecx,eax
   14001b068:	jmp    0x14001b078
   14001b06a:	mov    rax,QWORD PTR [rax+0x108]
   14001b071:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b075:	and    ecx,0x4
   14001b078:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b07d:	je     0x14001b08b
   14001b07f:	mov    rax,QWORD PTR [rsp+0x30]
   14001b084:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b08b:	mov    eax,ecx
   14001b08d:	add    rsp,0x40
   14001b091:	pop    rbx
   14001b092:	ret    
   14001b093:	int3   
   14001b094:	rex push rbx
   14001b096:	sub    rsp,0x40
   14001b09a:	movsxd rbx,ecx
   14001b09d:	lea    rcx,[rsp+0x20]
   14001b0a2:	call   0x140008fac
   14001b0a7:	mov    rax,QWORD PTR [rsp+0x20]
   14001b0ac:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b0b3:	jle    0x14001b0ca
   14001b0b5:	lea    r8,[rsp+0x20]
   14001b0ba:	mov    edx,0x117
   14001b0bf:	mov    ecx,ebx
   14001b0c1:	call   0x14001f9b8
   14001b0c6:	mov    ecx,eax
   14001b0c8:	jmp    0x14001b0db
   14001b0ca:	mov    rax,QWORD PTR [rax+0x108]
   14001b0d1:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b0d5:	and    ecx,0x117
   14001b0db:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b0e0:	je     0x14001b0ee
   14001b0e2:	mov    rax,QWORD PTR [rsp+0x30]
   14001b0e7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b0ee:	mov    eax,ecx
   14001b0f0:	add    rsp,0x40
   14001b0f4:	pop    rbx
   14001b0f5:	ret    
   14001b0f6:	int3   
   14001b0f7:	int3   
   14001b0f8:	rex push rbx
   14001b0fa:	sub    rsp,0x40
   14001b0fe:	movsxd rbx,ecx
   14001b101:	lea    rcx,[rsp+0x20]
   14001b106:	call   0x140008fac
   14001b10b:	mov    rax,QWORD PTR [rsp+0x20]
   14001b110:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b117:	jle    0x14001b12e
   14001b119:	lea    r8,[rsp+0x20]
   14001b11e:	mov    edx,0x2
   14001b123:	mov    ecx,ebx
   14001b125:	call   0x14001f9b8
   14001b12a:	mov    ecx,eax
   14001b12c:	jmp    0x14001b13c
   14001b12e:	mov    rax,QWORD PTR [rax+0x108]
   14001b135:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b139:	and    ecx,0x2
   14001b13c:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b141:	je     0x14001b14f
   14001b143:	mov    rax,QWORD PTR [rsp+0x30]
   14001b148:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b14f:	mov    eax,ecx
   14001b151:	add    rsp,0x40
   14001b155:	pop    rbx
   14001b156:	ret    
   14001b157:	int3   
   14001b158:	rex push rbx
   14001b15a:	sub    rsp,0x40
   14001b15e:	movsxd rbx,ecx
   14001b161:	lea    rcx,[rsp+0x20]
   14001b166:	call   0x140008fac
   14001b16b:	mov    rax,QWORD PTR [rsp+0x20]
   14001b170:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b177:	jle    0x14001b18e
   14001b179:	lea    r8,[rsp+0x20]
   14001b17e:	mov    edx,0x157
   14001b183:	mov    ecx,ebx
   14001b185:	call   0x14001f9b8
   14001b18a:	mov    ecx,eax
   14001b18c:	jmp    0x14001b19f
   14001b18e:	mov    rax,QWORD PTR [rax+0x108]
   14001b195:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b199:	and    ecx,0x157
   14001b19f:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b1a4:	je     0x14001b1b2
   14001b1a6:	mov    rax,QWORD PTR [rsp+0x30]
   14001b1ab:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b1b2:	mov    eax,ecx
   14001b1b4:	add    rsp,0x40
   14001b1b8:	pop    rbx
   14001b1b9:	ret    
   14001b1ba:	int3   
   14001b1bb:	int3   
   14001b1bc:	rex push rbx
   14001b1be:	sub    rsp,0x40
   14001b1c2:	movsxd rbx,ecx
   14001b1c5:	lea    rcx,[rsp+0x20]
   14001b1ca:	call   0x140008fac
   14001b1cf:	mov    rax,QWORD PTR [rsp+0x20]
   14001b1d4:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b1db:	jle    0x14001b1f2
   14001b1dd:	lea    r8,[rsp+0x20]
   14001b1e2:	mov    edx,0x10
   14001b1e7:	mov    ecx,ebx
   14001b1e9:	call   0x14001f9b8
   14001b1ee:	mov    ecx,eax
   14001b1f0:	jmp    0x14001b200
   14001b1f2:	mov    rax,QWORD PTR [rax+0x108]
   14001b1f9:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b1fd:	and    ecx,0x10
   14001b200:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b205:	je     0x14001b213
   14001b207:	mov    rax,QWORD PTR [rsp+0x30]
   14001b20c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b213:	mov    eax,ecx
   14001b215:	add    rsp,0x40
   14001b219:	pop    rbx
   14001b21a:	ret    
   14001b21b:	int3   
   14001b21c:	rex push rbx
   14001b21e:	sub    rsp,0x40
   14001b222:	movsxd rbx,ecx
   14001b225:	lea    rcx,[rsp+0x20]
   14001b22a:	call   0x140008fac
   14001b22f:	mov    rax,QWORD PTR [rsp+0x20]
   14001b234:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b23b:	jle    0x14001b252
   14001b23d:	lea    r8,[rsp+0x20]
   14001b242:	mov    edx,0x8
   14001b247:	mov    ecx,ebx
   14001b249:	call   0x14001f9b8
   14001b24e:	mov    ecx,eax
   14001b250:	jmp    0x14001b260
   14001b252:	mov    rax,QWORD PTR [rax+0x108]
   14001b259:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b25d:	and    ecx,0x8
   14001b260:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b265:	je     0x14001b273
   14001b267:	mov    rax,QWORD PTR [rsp+0x30]
   14001b26c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b273:	mov    eax,ecx
   14001b275:	add    rsp,0x40
   14001b279:	pop    rbx
   14001b27a:	ret    
   14001b27b:	int3   
   14001b27c:	rex push rbx
   14001b27e:	sub    rsp,0x40
   14001b282:	movsxd rbx,ecx
   14001b285:	lea    rcx,[rsp+0x20]
   14001b28a:	call   0x140008fac
   14001b28f:	mov    rax,QWORD PTR [rsp+0x20]
   14001b294:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b29b:	jle    0x14001b2b2
   14001b29d:	lea    r8,[rsp+0x20]
   14001b2a2:	mov    edx,0x1
   14001b2a7:	mov    ecx,ebx
   14001b2a9:	call   0x14001f9b8
   14001b2ae:	mov    ecx,eax
   14001b2b0:	jmp    0x14001b2c0
   14001b2b2:	mov    rax,QWORD PTR [rax+0x108]
   14001b2b9:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b2bd:	and    ecx,0x1
   14001b2c0:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b2c5:	je     0x14001b2d3
   14001b2c7:	mov    rax,QWORD PTR [rsp+0x30]
   14001b2cc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b2d3:	mov    eax,ecx
   14001b2d5:	add    rsp,0x40
   14001b2d9:	pop    rbx
   14001b2da:	ret    
   14001b2db:	int3   
   14001b2dc:	rex push rbx
   14001b2de:	sub    rsp,0x40
   14001b2e2:	movsxd rbx,ecx
   14001b2e5:	lea    rcx,[rsp+0x20]
   14001b2ea:	call   0x140008fac
   14001b2ef:	mov    rax,QWORD PTR [rsp+0x20]
   14001b2f4:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b2fb:	jle    0x14001b312
   14001b2fd:	lea    r8,[rsp+0x20]
   14001b302:	mov    edx,0x80
   14001b307:	mov    ecx,ebx
   14001b309:	call   0x14001f9b8
   14001b30e:	mov    ecx,eax
   14001b310:	jmp    0x14001b323
   14001b312:	mov    rax,QWORD PTR [rax+0x108]
   14001b319:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b31d:	and    ecx,0x80
   14001b323:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b328:	je     0x14001b336
   14001b32a:	mov    rax,QWORD PTR [rsp+0x30]
   14001b32f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b336:	mov    eax,ecx
   14001b338:	add    rsp,0x40
   14001b33c:	pop    rbx
   14001b33d:	ret    
   14001b33e:	int3   
   14001b33f:	int3   
   14001b340:	rex push rbx
   14001b342:	sub    rsp,0x40
   14001b346:	cmp    DWORD PTR [rip+0x23c3b],0x0        # 0x14003ef88
   14001b34d:	movsxd rbx,ecx
   14001b350:	jne    0x14001b364
   14001b352:	mov    rax,QWORD PTR [rip+0x21e5f]        # 0x14003d1b8
   14001b359:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b35d:	and    eax,0x107
   14001b362:	jmp    0x14001b3b9
   14001b364:	lea    rcx,[rsp+0x20]
   14001b369:	xor    edx,edx
   14001b36b:	call   0x140008fac
   14001b370:	mov    rax,QWORD PTR [rsp+0x20]
   14001b375:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b37c:	jle    0x14001b393
   14001b37e:	lea    r8,[rsp+0x20]
   14001b383:	mov    edx,0x107
   14001b388:	mov    ecx,ebx
   14001b38a:	call   0x14001f9b8
   14001b38f:	mov    ecx,eax
   14001b391:	jmp    0x14001b3a4
   14001b393:	mov    rax,QWORD PTR [rax+0x108]
   14001b39a:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b39e:	and    ecx,0x107
   14001b3a4:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b3a9:	je     0x14001b3b7
   14001b3ab:	mov    rax,QWORD PTR [rsp+0x30]
   14001b3b0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b3b7:	mov    eax,ecx
   14001b3b9:	add    rsp,0x40
   14001b3bd:	pop    rbx
   14001b3be:	ret    
   14001b3bf:	int3   
   14001b3c0:	rex push rbx
   14001b3c2:	sub    rsp,0x40
   14001b3c6:	cmp    DWORD PTR [rip+0x23bbb],0x0        # 0x14003ef88
   14001b3cd:	movsxd rbx,ecx
   14001b3d0:	jne    0x14001b3e4
   14001b3d2:	mov    rax,QWORD PTR [rip+0x21ddf]        # 0x14003d1b8
   14001b3d9:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b3dd:	and    eax,0x103
   14001b3e2:	jmp    0x14001b439
   14001b3e4:	lea    rcx,[rsp+0x20]
   14001b3e9:	xor    edx,edx
   14001b3eb:	call   0x140008fac
   14001b3f0:	mov    rax,QWORD PTR [rsp+0x20]
   14001b3f5:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b3fc:	jle    0x14001b413
   14001b3fe:	lea    r8,[rsp+0x20]
   14001b403:	mov    edx,0x103
   14001b408:	mov    ecx,ebx
   14001b40a:	call   0x14001f9b8
   14001b40f:	mov    ecx,eax
   14001b411:	jmp    0x14001b424
   14001b413:	mov    rax,QWORD PTR [rax+0x108]
   14001b41a:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b41e:	and    ecx,0x103
   14001b424:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b429:	je     0x14001b437
   14001b42b:	mov    rax,QWORD PTR [rsp+0x30]
   14001b430:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b437:	mov    eax,ecx
   14001b439:	add    rsp,0x40
   14001b43d:	pop    rbx
   14001b43e:	ret    
   14001b43f:	int3   
   14001b440:	cmp    DWORD PTR [rip+0x23b41],0x0        # 0x14003ef88
   14001b447:	jne    0x14001b468
   14001b449:	cmp    ecx,0x9
   14001b44c:	jne    0x14001b452
   14001b44e:	lea    eax,[rcx+0x37]
   14001b451:	ret    
   14001b452:	mov    rax,QWORD PTR [rip+0x21d5f]        # 0x14003d1b8
   14001b459:	movsxd rcx,ecx
   14001b45c:	movzx  edx,WORD PTR [rax+rcx*2]
   14001b460:	mov    eax,0x40
   14001b465:	and    eax,edx
   14001b467:	ret    
   14001b468:	xor    edx,edx
   14001b46a:	jmp    0x14001ae7c
   14001b46f:	int3   
   14001b470:	rex push rbx
   14001b472:	sub    rsp,0x40
   14001b476:	cmp    DWORD PTR [rip+0x23b0b],0x0        # 0x14003ef88
   14001b47d:	movsxd rbx,ecx
   14001b480:	jne    0x14001b492
   14001b482:	mov    rax,QWORD PTR [rip+0x21d2f]        # 0x14003d1b8
   14001b489:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b48d:	and    eax,0x20
   14001b490:	jmp    0x14001b4e4
   14001b492:	lea    rcx,[rsp+0x20]
   14001b497:	xor    edx,edx
   14001b499:	call   0x140008fac
   14001b49e:	mov    rax,QWORD PTR [rsp+0x20]
   14001b4a3:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b4aa:	jle    0x14001b4c1
   14001b4ac:	lea    r8,[rsp+0x20]
   14001b4b1:	mov    edx,0x20
   14001b4b6:	mov    ecx,ebx
   14001b4b8:	call   0x14001f9b8
   14001b4bd:	mov    ecx,eax
   14001b4bf:	jmp    0x14001b4cf
   14001b4c1:	mov    rax,QWORD PTR [rax+0x108]
   14001b4c8:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b4cc:	and    ecx,0x20
   14001b4cf:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b4d4:	je     0x14001b4e2
   14001b4d6:	mov    rax,QWORD PTR [rsp+0x30]
   14001b4db:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b4e2:	mov    eax,ecx
   14001b4e4:	add    rsp,0x40
   14001b4e8:	pop    rbx
   14001b4e9:	ret    
   14001b4ea:	int3   
   14001b4eb:	int3   
   14001b4ec:	rex push rbx
   14001b4ee:	sub    rsp,0x40
   14001b4f2:	cmp    DWORD PTR [rip+0x23a8f],0x0        # 0x14003ef88
   14001b4f9:	movsxd rbx,ecx
   14001b4fc:	jne    0x14001b50e
   14001b4fe:	mov    rax,QWORD PTR [rip+0x21cb3]        # 0x14003d1b8
   14001b505:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b509:	and    eax,0x4
   14001b50c:	jmp    0x14001b560
   14001b50e:	lea    rcx,[rsp+0x20]
   14001b513:	xor    edx,edx
   14001b515:	call   0x140008fac
   14001b51a:	mov    rax,QWORD PTR [rsp+0x20]
   14001b51f:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b526:	jle    0x14001b53d
   14001b528:	lea    r8,[rsp+0x20]
   14001b52d:	mov    edx,0x4
   14001b532:	mov    ecx,ebx
   14001b534:	call   0x14001f9b8
   14001b539:	mov    ecx,eax
   14001b53b:	jmp    0x14001b54b
   14001b53d:	mov    rax,QWORD PTR [rax+0x108]
   14001b544:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b548:	and    ecx,0x4
   14001b54b:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b550:	je     0x14001b55e
   14001b552:	mov    rax,QWORD PTR [rsp+0x30]
   14001b557:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b55e:	mov    eax,ecx
   14001b560:	add    rsp,0x40
   14001b564:	pop    rbx
   14001b565:	ret    
   14001b566:	int3   
   14001b567:	int3   
   14001b568:	rex push rbx
   14001b56a:	sub    rsp,0x40
   14001b56e:	cmp    DWORD PTR [rip+0x23a13],0x0        # 0x14003ef88
   14001b575:	movsxd rbx,ecx
   14001b578:	jne    0x14001b58c
   14001b57a:	mov    rax,QWORD PTR [rip+0x21c37]        # 0x14003d1b8
   14001b581:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b585:	and    eax,0x117
   14001b58a:	jmp    0x14001b5e1
   14001b58c:	lea    rcx,[rsp+0x20]
   14001b591:	xor    edx,edx
   14001b593:	call   0x140008fac
   14001b598:	mov    rax,QWORD PTR [rsp+0x20]
   14001b59d:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b5a4:	jle    0x14001b5bb
   14001b5a6:	lea    r8,[rsp+0x20]
   14001b5ab:	mov    edx,0x117
   14001b5b0:	mov    ecx,ebx
   14001b5b2:	call   0x14001f9b8
   14001b5b7:	mov    ecx,eax
   14001b5b9:	jmp    0x14001b5cc
   14001b5bb:	mov    rax,QWORD PTR [rax+0x108]
   14001b5c2:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b5c6:	and    ecx,0x117
   14001b5cc:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b5d1:	je     0x14001b5df
   14001b5d3:	mov    rax,QWORD PTR [rsp+0x30]
   14001b5d8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b5df:	mov    eax,ecx
   14001b5e1:	add    rsp,0x40
   14001b5e5:	pop    rbx
   14001b5e6:	ret    
   14001b5e7:	int3   
   14001b5e8:	rex push rbx
   14001b5ea:	sub    rsp,0x40
   14001b5ee:	cmp    DWORD PTR [rip+0x23993],0x0        # 0x14003ef88
   14001b5f5:	movsxd rbx,ecx
   14001b5f8:	jne    0x14001b60a
   14001b5fa:	mov    rax,QWORD PTR [rip+0x21bb7]        # 0x14003d1b8
   14001b601:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b605:	and    eax,0x2
   14001b608:	jmp    0x14001b65c
   14001b60a:	lea    rcx,[rsp+0x20]
   14001b60f:	xor    edx,edx
   14001b611:	call   0x140008fac
   14001b616:	mov    rax,QWORD PTR [rsp+0x20]
   14001b61b:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b622:	jle    0x14001b639
   14001b624:	lea    r8,[rsp+0x20]
   14001b629:	mov    edx,0x2
   14001b62e:	mov    ecx,ebx
   14001b630:	call   0x14001f9b8
   14001b635:	mov    ecx,eax
   14001b637:	jmp    0x14001b647
   14001b639:	mov    rax,QWORD PTR [rax+0x108]
   14001b640:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b644:	and    ecx,0x2
   14001b647:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b64c:	je     0x14001b65a
   14001b64e:	mov    rax,QWORD PTR [rsp+0x30]
   14001b653:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b65a:	mov    eax,ecx
   14001b65c:	add    rsp,0x40
   14001b660:	pop    rbx
   14001b661:	ret    
   14001b662:	int3   
   14001b663:	int3   
   14001b664:	rex push rbx
   14001b666:	sub    rsp,0x40
   14001b66a:	cmp    DWORD PTR [rip+0x23917],0x0        # 0x14003ef88
   14001b671:	movsxd rbx,ecx
   14001b674:	jne    0x14001b688
   14001b676:	mov    rax,QWORD PTR [rip+0x21b3b]        # 0x14003d1b8
   14001b67d:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b681:	and    eax,0x157
   14001b686:	jmp    0x14001b6dd
   14001b688:	lea    rcx,[rsp+0x20]
   14001b68d:	xor    edx,edx
   14001b68f:	call   0x140008fac
   14001b694:	mov    rax,QWORD PTR [rsp+0x20]
   14001b699:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b6a0:	jle    0x14001b6b7
   14001b6a2:	lea    r8,[rsp+0x20]
   14001b6a7:	mov    edx,0x157
   14001b6ac:	mov    ecx,ebx
   14001b6ae:	call   0x14001f9b8
   14001b6b3:	mov    ecx,eax
   14001b6b5:	jmp    0x14001b6c8
   14001b6b7:	mov    rax,QWORD PTR [rax+0x108]
   14001b6be:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b6c2:	and    ecx,0x157
   14001b6c8:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b6cd:	je     0x14001b6db
   14001b6cf:	mov    rax,QWORD PTR [rsp+0x30]
   14001b6d4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b6db:	mov    eax,ecx
   14001b6dd:	add    rsp,0x40
   14001b6e1:	pop    rbx
   14001b6e2:	ret    
   14001b6e3:	int3   
   14001b6e4:	rex push rbx
   14001b6e6:	sub    rsp,0x40
   14001b6ea:	cmp    DWORD PTR [rip+0x23897],0x0        # 0x14003ef88
   14001b6f1:	movsxd rbx,ecx
   14001b6f4:	jne    0x14001b706
   14001b6f6:	mov    rax,QWORD PTR [rip+0x21abb]        # 0x14003d1b8
   14001b6fd:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b701:	and    eax,0x10
   14001b704:	jmp    0x14001b758
   14001b706:	lea    rcx,[rsp+0x20]
   14001b70b:	xor    edx,edx
   14001b70d:	call   0x140008fac
   14001b712:	mov    rax,QWORD PTR [rsp+0x20]
   14001b717:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b71e:	jle    0x14001b735
   14001b720:	lea    r8,[rsp+0x20]
   14001b725:	mov    edx,0x10
   14001b72a:	mov    ecx,ebx
   14001b72c:	call   0x14001f9b8
   14001b731:	mov    ecx,eax
   14001b733:	jmp    0x14001b743
   14001b735:	mov    rax,QWORD PTR [rax+0x108]
   14001b73c:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b740:	and    ecx,0x10
   14001b743:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b748:	je     0x14001b756
   14001b74a:	mov    rax,QWORD PTR [rsp+0x30]
   14001b74f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b756:	mov    eax,ecx
   14001b758:	add    rsp,0x40
   14001b75c:	pop    rbx
   14001b75d:	ret    
   14001b75e:	int3   
   14001b75f:	int3   
   14001b760:	rex push rbx
   14001b762:	sub    rsp,0x40
   14001b766:	cmp    DWORD PTR [rip+0x2381b],0x0        # 0x14003ef88
   14001b76d:	movsxd rbx,ecx
   14001b770:	jne    0x14001b782
   14001b772:	mov    rax,QWORD PTR [rip+0x21a3f]        # 0x14003d1b8
   14001b779:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b77d:	and    eax,0x8
   14001b780:	jmp    0x14001b7d4
   14001b782:	lea    rcx,[rsp+0x20]
   14001b787:	xor    edx,edx
   14001b789:	call   0x140008fac
   14001b78e:	mov    rax,QWORD PTR [rsp+0x20]
   14001b793:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b79a:	jle    0x14001b7b1
   14001b79c:	lea    r8,[rsp+0x20]
   14001b7a1:	mov    edx,0x8
   14001b7a6:	mov    ecx,ebx
   14001b7a8:	call   0x14001f9b8
   14001b7ad:	mov    ecx,eax
   14001b7af:	jmp    0x14001b7bf
   14001b7b1:	mov    rax,QWORD PTR [rax+0x108]
   14001b7b8:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b7bc:	and    ecx,0x8
   14001b7bf:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b7c4:	je     0x14001b7d2
   14001b7c6:	mov    rax,QWORD PTR [rsp+0x30]
   14001b7cb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b7d2:	mov    eax,ecx
   14001b7d4:	add    rsp,0x40
   14001b7d8:	pop    rbx
   14001b7d9:	ret    
   14001b7da:	int3   
   14001b7db:	int3   
   14001b7dc:	rex push rbx
   14001b7de:	sub    rsp,0x40
   14001b7e2:	cmp    DWORD PTR [rip+0x2379f],0x0        # 0x14003ef88
   14001b7e9:	movsxd rbx,ecx
   14001b7ec:	jne    0x14001b7fe
   14001b7ee:	mov    rax,QWORD PTR [rip+0x219c3]        # 0x14003d1b8
   14001b7f5:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b7f9:	and    eax,0x1
   14001b7fc:	jmp    0x14001b850
   14001b7fe:	lea    rcx,[rsp+0x20]
   14001b803:	xor    edx,edx
   14001b805:	call   0x140008fac
   14001b80a:	mov    rax,QWORD PTR [rsp+0x20]
   14001b80f:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b816:	jle    0x14001b82d
   14001b818:	lea    r8,[rsp+0x20]
   14001b81d:	mov    edx,0x1
   14001b822:	mov    ecx,ebx
   14001b824:	call   0x14001f9b8
   14001b829:	mov    ecx,eax
   14001b82b:	jmp    0x14001b83b
   14001b82d:	mov    rax,QWORD PTR [rax+0x108]
   14001b834:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b838:	and    ecx,0x1
   14001b83b:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b840:	je     0x14001b84e
   14001b842:	mov    rax,QWORD PTR [rsp+0x30]
   14001b847:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b84e:	mov    eax,ecx
   14001b850:	add    rsp,0x40
   14001b854:	pop    rbx
   14001b855:	ret    
   14001b856:	int3   
   14001b857:	int3   
   14001b858:	rex push rbx
   14001b85a:	sub    rsp,0x40
   14001b85e:	cmp    DWORD PTR [rip+0x23723],0x0        # 0x14003ef88
   14001b865:	movsxd rbx,ecx
   14001b868:	jne    0x14001b87c
   14001b86a:	mov    rax,QWORD PTR [rip+0x21947]        # 0x14003d1b8
   14001b871:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b875:	and    eax,0x80
   14001b87a:	jmp    0x14001b8d1
   14001b87c:	lea    rcx,[rsp+0x20]
   14001b881:	xor    edx,edx
   14001b883:	call   0x140008fac
   14001b888:	mov    rax,QWORD PTR [rsp+0x20]
   14001b88d:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b894:	jle    0x14001b8ab
   14001b896:	lea    r8,[rsp+0x20]
   14001b89b:	mov    edx,0x80
   14001b8a0:	mov    ecx,ebx
   14001b8a2:	call   0x14001f9b8
   14001b8a7:	mov    ecx,eax
   14001b8a9:	jmp    0x14001b8bc
   14001b8ab:	mov    rax,QWORD PTR [rax+0x108]
   14001b8b2:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b8b6:	and    ecx,0x80
   14001b8bc:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b8c1:	je     0x14001b8cf
   14001b8c3:	mov    rax,QWORD PTR [rsp+0x30]
   14001b8c8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b8cf:	mov    eax,ecx
   14001b8d1:	add    rsp,0x40
   14001b8d5:	pop    rbx
   14001b8d6:	ret    
   14001b8d7:	int3   
   14001b8d8:	lea    eax,[rcx+0x20]
   14001b8db:	ret    
   14001b8dc:	mov    QWORD PTR [rsp+0x10],rdi
   14001b8e1:	mov    QWORD PTR [rsp+0x20],r14
   14001b8e6:	push   rbp
   14001b8e7:	mov    rbp,rsp
   14001b8ea:	sub    rsp,0x70
   14001b8ee:	movsxd rdi,ecx
   14001b8f1:	lea    rcx,[rbp-0x20]
   14001b8f5:	call   0x140008fac
   14001b8fa:	cmp    edi,0x100
   14001b900:	jae    0x14001b95f
   14001b902:	mov    rdx,QWORD PTR [rbp-0x20]
   14001b906:	cmp    DWORD PTR [rdx+0xd4],0x1
   14001b90d:	jle    0x14001b925
   14001b90f:	lea    r8,[rbp-0x20]
   14001b913:	mov    edx,0x1
   14001b918:	mov    ecx,edi
   14001b91a:	call   0x14001f9b8
   14001b91f:	mov    rdx,QWORD PTR [rbp-0x20]
   14001b923:	jmp    0x14001b933
   14001b925:	mov    rax,QWORD PTR [rdx+0x108]
   14001b92c:	movzx  eax,WORD PTR [rax+rdi*2]
   14001b930:	and    eax,0x1
   14001b933:	test   eax,eax
   14001b935:	je     0x14001b947
   14001b937:	mov    rax,QWORD PTR [rdx+0x110]
   14001b93e:	movzx  eax,BYTE PTR [rax+rdi*1]
   14001b942:	jmp    0x14001ba0b
   14001b947:	cmp    BYTE PTR [rbp-0x8],0x0
   14001b94b:	je     0x14001b958
   14001b94d:	mov    rax,QWORD PTR [rbp-0x10]
   14001b951:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b958:	mov    eax,edi
   14001b95a:	jmp    0x14001ba1c
   14001b95f:	mov    rax,QWORD PTR [rbp-0x20]
   14001b963:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b96a:	jle    0x14001b997
   14001b96c:	mov    r14d,edi
   14001b96f:	lea    rdx,[rbp-0x20]
   14001b973:	sar    r14d,0x8
   14001b977:	movzx  ecx,r14b
   14001b97b:	call   0x140011e44
   14001b980:	test   eax,eax
   14001b982:	je     0x14001b997
   14001b984:	mov    BYTE PTR [rbp+0x10],r14b
   14001b988:	mov    BYTE PTR [rbp+0x11],dil
   14001b98c:	mov    BYTE PTR [rbp+0x12],0x0
   14001b990:	mov    ecx,0x2
   14001b995:	jmp    0x14001b9af
   14001b997:	call   0x140009cb4
   14001b99c:	mov    ecx,0x1
   14001b9a1:	mov    DWORD PTR [rax],0x2a
   14001b9a7:	mov    BYTE PTR [rbp+0x10],dil
   14001b9ab:	mov    BYTE PTR [rbp+0x11],0x0
   14001b9af:	mov    rdx,QWORD PTR [rbp-0x20]
   14001b9b3:	mov    DWORD PTR [rsp+0x40],0x1
   14001b9bb:	lea    r9,[rbp+0x10]
   14001b9bf:	mov    eax,DWORD PTR [rdx+0x4]
   14001b9c2:	mov    rdx,QWORD PTR [rdx+0x138]
   14001b9c9:	mov    r8d,0x100
   14001b9cf:	mov    DWORD PTR [rsp+0x38],eax
   14001b9d3:	lea    rax,[rbp+0x20]
   14001b9d7:	mov    DWORD PTR [rsp+0x30],0x3
   14001b9df:	mov    QWORD PTR [rsp+0x28],rax
   14001b9e4:	mov    DWORD PTR [rsp+0x20],ecx
   14001b9e8:	lea    rcx,[rbp-0x20]
   14001b9ec:	call   0x14001cb54
   14001b9f1:	test   eax,eax
   14001b9f3:	je     0x14001b947
   14001b9f9:	cmp    eax,0x1
   14001b9fc:	movzx  eax,BYTE PTR [rbp+0x20]
   14001ba00:	je     0x14001ba0b
   14001ba02:	movzx  ecx,BYTE PTR [rbp+0x21]
   14001ba06:	shl    eax,0x8
   14001ba09:	or     eax,ecx
   14001ba0b:	cmp    BYTE PTR [rbp-0x8],0x0
   14001ba0f:	je     0x14001ba1c
   14001ba11:	mov    rcx,QWORD PTR [rbp-0x10]
   14001ba15:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001ba1c:	lea    r11,[rsp+0x70]
   14001ba21:	mov    rdi,QWORD PTR [r11+0x18]
   14001ba25:	mov    r14,QWORD PTR [r11+0x28]
   14001ba29:	mov    rsp,r11
   14001ba2c:	pop    rbp
   14001ba2d:	ret    
   14001ba2e:	int3   
   14001ba2f:	int3   
   14001ba30:	cmp    DWORD PTR [rip+0x23551],0x0        # 0x14003ef88
   14001ba37:	jne    0x14001ba47
   14001ba39:	lea    eax,[rcx-0x41]
   14001ba3c:	cmp    eax,0x19
   14001ba3f:	ja     0x14001ba44
   14001ba41:	add    ecx,0x20
   14001ba44:	mov    eax,ecx
   14001ba46:	ret    
   14001ba47:	xor    edx,edx
   14001ba49:	jmp    0x14001b8dc
   14001ba4e:	int3   
   14001ba4f:	int3   
   14001ba50:	sub    rsp,0x18
   14001ba54:	xor    r8d,r8d
   14001ba57:	mov    r9,rcx
   14001ba5a:	test   edx,edx
   14001ba5c:	jne    0x14001baa6
   14001ba5e:	and    r9d,0xf
   14001ba62:	mov    rdx,rcx
   14001ba65:	xorps  xmm1,xmm1
   14001ba68:	and    rdx,0xfffffffffffffff0
   14001ba6c:	mov    ecx,r9d
   14001ba6f:	or     r9d,0xffffffff
   14001ba73:	shl    r9d,cl
   14001ba76:	movdqa xmm0,XMMWORD PTR [rdx]
   14001ba7a:	pcmpeqb xmm0,xmm1
   14001ba7e:	pmovmskb eax,xmm0
   14001ba82:	and    eax,r9d
   14001ba85:	jne    0x14001ba9b
   14001ba87:	add    rdx,0x10
   14001ba8b:	movdqa xmm0,XMMWORD PTR [rdx]
   14001ba8f:	pcmpeqb xmm0,xmm1
   14001ba93:	pmovmskb eax,xmm0
   14001ba97:	test   eax,eax
   14001ba99:	je     0x14001ba87
   14001ba9b:	bsf    eax,eax
   14001ba9e:	add    rax,rdx
   14001baa1:	jmp    0x14001bb4c
   14001baa6:	cmp    DWORD PTR [rip+0x20597],0x2        # 0x14003c044
   14001baad:	jge    0x14001bb51
   14001bab3:	mov    r10,rcx
   14001bab6:	movzx  eax,dl
   14001bab9:	and    r9d,0xf
   14001babd:	and    r10,0xfffffffffffffff0
   14001bac1:	mov    ecx,eax
   14001bac3:	xorps  xmm2,xmm2
   14001bac6:	shl    ecx,0x8
   14001bac9:	or     ecx,eax
   14001bacb:	movd   xmm0,ecx
   14001bacf:	mov    ecx,r9d
   14001bad2:	or     r9d,0xffffffff
   14001bad6:	shl    r9d,cl
   14001bad9:	pshuflw xmm1,xmm0,0x0
   14001bade:	movdqa xmm0,xmm2
   14001bae2:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14001bae7:	pshufd xmm3,xmm1,0x0
   14001baec:	pmovmskb ecx,xmm0
   14001baf0:	movdqa xmm0,xmm3
   14001baf4:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14001baf9:	pmovmskb edx,xmm0
   14001bafd:	and    edx,r9d
   14001bb00:	and    ecx,r9d
   14001bb03:	jne    0x14001bb33
   14001bb05:	bsr    ecx,edx
   14001bb08:	movdqa xmm1,xmm2
   14001bb0c:	movdqa xmm0,xmm3
   14001bb10:	add    rcx,r10
   14001bb13:	test   edx,edx
   14001bb15:	cmovne r8,rcx
   14001bb19:	add    r10,0x10
   14001bb1d:	pcmpeqb xmm1,XMMWORD PTR [r10]
   14001bb22:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14001bb27:	pmovmskb ecx,xmm1
   14001bb2b:	pmovmskb edx,xmm0
   14001bb2f:	test   ecx,ecx
   14001bb31:	je     0x14001bb05
   14001bb33:	mov    eax,ecx
   14001bb35:	neg    eax
   14001bb37:	and    eax,ecx
   14001bb39:	dec    eax
   14001bb3b:	and    edx,eax
   14001bb3d:	bsr    ecx,edx
   14001bb40:	add    rcx,r10
   14001bb43:	test   edx,edx
   14001bb45:	cmovne r8,rcx
   14001bb49:	mov    rax,r8
   14001bb4c:	add    rsp,0x18
   14001bb50:	ret    
   14001bb51:	test   cl,0xf
   14001bb54:	je     0x14001bb6f
   14001bb56:	movsx  eax,BYTE PTR [r9]
   14001bb5a:	cmp    eax,edx
   14001bb5c:	cmove  r8,r9
   14001bb60:	cmp    BYTE PTR [r9],0x0
   14001bb64:	je     0x14001bb49
   14001bb66:	inc    r9
   14001bb69:	test   r9b,0xf
   14001bb6d:	jne    0x14001bb56
   14001bb6f:	movzx  eax,dl
   14001bb72:	movd   xmm0,eax
   14001bb76:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14001bb7d:	jae    0x14001bb8c
   14001bb7f:	movsxd r8,ecx
   14001bb82:	add    r8,r9
   14001bb85:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14001bb8c:	je     0x14001bb49
   14001bb8e:	add    r9,0x10
   14001bb92:	jmp    0x14001bb76
   14001bb94:	mov    QWORD PTR [rsp+0x8],rbx
   14001bb99:	push   rdi
   14001bb9a:	sub    rsp,0x20
   14001bb9e:	mov    rbx,rcx
   14001bba1:	mov    rcx,QWORD PTR [r9+0x10]
   14001bba5:	xor    r10d,r10d
   14001bba8:	test   rbx,rbx
   14001bbab:	jne    0x14001bbc5
   14001bbad:	call   0x140009cb4
   14001bbb2:	mov    ebx,0x16
   14001bbb7:	mov    DWORD PTR [rax],ebx
   14001bbb9:	call   0x140008d58
   14001bbbe:	mov    eax,ebx
   14001bbc0:	jmp    0x14001bc54
   14001bbc5:	test   rdx,rdx
   14001bbc8:	je     0x14001bbad
   14001bbca:	mov    eax,r10d
   14001bbcd:	test   r8d,r8d
   14001bbd0:	mov    BYTE PTR [rbx],r10b
   14001bbd3:	cmovg  eax,r8d
   14001bbd7:	inc    eax
   14001bbd9:	cdqe   
   14001bbdb:	cmp    rdx,rax
   14001bbde:	ja     0x14001bbec
   14001bbe0:	call   0x140009cb4
   14001bbe5:	mov    ebx,0x22
   14001bbea:	jmp    0x14001bbb7
   14001bbec:	lea    rdi,[rbx+0x1]
   14001bbf0:	mov    BYTE PTR [rbx],0x30
   14001bbf3:	mov    rax,rdi
   14001bbf6:	jmp    0x14001bc12
   14001bbf8:	cmp    BYTE PTR [rcx],r10b
   14001bbfb:	je     0x14001bc05
   14001bbfd:	movsx  edx,BYTE PTR [rcx]
   14001bc00:	inc    rcx
   14001bc03:	jmp    0x14001bc0a
   14001bc05:	mov    edx,0x30
   14001bc0a:	mov    BYTE PTR [rax],dl
   14001bc0c:	inc    rax
   14001bc0f:	dec    r8d
   14001bc12:	test   r8d,r8d
   14001bc15:	jg     0x14001bbf8
   14001bc17:	mov    BYTE PTR [rax],r10b
   14001bc1a:	js     0x14001bc30
   14001bc1c:	cmp    BYTE PTR [rcx],0x35
   14001bc1f:	jl     0x14001bc30
   14001bc21:	jmp    0x14001bc26
   14001bc23:	mov    BYTE PTR [rax],0x30
   14001bc26:	dec    rax
   14001bc29:	cmp    BYTE PTR [rax],0x39
   14001bc2c:	je     0x14001bc23
   14001bc2e:	inc    BYTE PTR [rax]
   14001bc30:	cmp    BYTE PTR [rbx],0x31
   14001bc33:	jne    0x14001bc3b
   14001bc35:	inc    DWORD PTR [r9+0x4]
   14001bc39:	jmp    0x14001bc52
   14001bc3b:	mov    rcx,rdi
   14001bc3e:	call   0x140007550
   14001bc43:	mov    rdx,rdi
   14001bc46:	mov    rcx,rbx
   14001bc49:	lea    r8,[rax+0x1]
   14001bc4d:	call   0x1400059f0
   14001bc52:	xor    eax,eax
   14001bc54:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bc59:	add    rsp,0x20
   14001bc5d:	pop    rdi
   14001bc5e:	ret    
   14001bc5f:	int3   
   14001bc60:	rex push rbx
   14001bc62:	push   rsi
   14001bc63:	push   rdi
   14001bc64:	sub    rsp,0x80
   14001bc6b:	mov    rax,QWORD PTR [rip+0x2055e]        # 0x14003c1d0
   14001bc72:	xor    rax,rsp
   14001bc75:	mov    QWORD PTR [rsp+0x78],rax
   14001bc7a:	mov    rsi,rcx
   14001bc7d:	mov    rbx,rdx
   14001bc80:	lea    rcx,[rsp+0x48]
   14001bc85:	mov    rdx,r8
   14001bc88:	mov    rdi,r9
   14001bc8b:	call   0x140008fac
   14001bc90:	lea    rax,[rsp+0x48]
   14001bc95:	lea    rdx,[rsp+0x40]
   14001bc9a:	mov    QWORD PTR [rsp+0x38],rax
   14001bc9f:	and    DWORD PTR [rsp+0x30],0x0
   14001bca4:	and    DWORD PTR [rsp+0x28],0x0
   14001bca9:	and    DWORD PTR [rsp+0x20],0x0
   14001bcae:	lea    rcx,[rsp+0x68]
   14001bcb3:	xor    r9d,r9d
   14001bcb6:	mov    r8,rbx
   14001bcb9:	call   0x140022bd8
   14001bcbe:	mov    ebx,eax
   14001bcc0:	test   rdi,rdi
   14001bcc3:	je     0x14001bccd
   14001bcc5:	mov    rcx,QWORD PTR [rsp+0x40]
   14001bcca:	mov    QWORD PTR [rdi],rcx
   14001bccd:	lea    rcx,[rsp+0x68]
   14001bcd2:	mov    rdx,rsi
   14001bcd5:	call   0x140021d80
   14001bcda:	mov    ecx,eax
   14001bcdc:	mov    eax,0x3
   14001bce1:	test   al,bl
   14001bce3:	jne    0x14001bcf1
   14001bce5:	cmp    ecx,0x1
   14001bce8:	je     0x14001bd04
   14001bcea:	cmp    ecx,0x2
   14001bced:	jne    0x14001bd02
   14001bcef:	jmp    0x14001bcf6
   14001bcf1:	test   bl,0x1
   14001bcf4:	je     0x14001bcfd
   14001bcf6:	mov    eax,0x4
   14001bcfb:	jmp    0x14001bd04
   14001bcfd:	test   bl,0x2
   14001bd00:	jne    0x14001bd04
   14001bd02:	xor    eax,eax
   14001bd04:	cmp    BYTE PTR [rsp+0x60],0x0
   14001bd09:	je     0x14001bd17
   14001bd0b:	mov    rcx,QWORD PTR [rsp+0x58]
   14001bd10:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001bd17:	mov    rcx,QWORD PTR [rsp+0x78]
   14001bd1c:	xor    rcx,rsp
   14001bd1f:	call   0x14000c380
   14001bd24:	add    rsp,0x80
   14001bd2b:	pop    rdi
   14001bd2c:	pop    rsi
   14001bd2d:	pop    rbx
   14001bd2e:	ret    
   14001bd2f:	int3   
   14001bd30:	xor    r8d,r8d
   14001bd33:	jmp    0x14001bd38
   14001bd38:	mov    QWORD PTR [rsp+0x18],rbx
   14001bd3d:	push   rdi
   14001bd3e:	sub    rsp,0x80
   14001bd45:	mov    rax,QWORD PTR [rip+0x20484]        # 0x14003c1d0
   14001bd4c:	xor    rax,rsp
   14001bd4f:	mov    QWORD PTR [rsp+0x78],rax
   14001bd54:	mov    rdi,rcx
   14001bd57:	mov    rbx,rdx
   14001bd5a:	lea    rcx,[rsp+0x40]
   14001bd5f:	mov    rdx,r8
   14001bd62:	call   0x140008fac
   14001bd67:	lea    rax,[rsp+0x40]
   14001bd6c:	lea    rdx,[rsp+0x60]
   14001bd71:	mov    QWORD PTR [rsp+0x38],rax
   14001bd76:	and    DWORD PTR [rsp+0x30],0x0
   14001bd7b:	and    DWORD PTR [rsp+0x28],0x0
   14001bd80:	and    DWORD PTR [rsp+0x20],0x0
   14001bd85:	lea    rcx,[rsp+0x68]
   14001bd8a:	xor    r9d,r9d
   14001bd8d:	mov    r8,rbx
   14001bd90:	call   0x140022bd8
   14001bd95:	lea    rcx,[rsp+0x68]
   14001bd9a:	mov    rdx,rdi
   14001bd9d:	mov    ebx,eax
   14001bd9f:	call   0x1400217c8
   14001bda4:	mov    ecx,eax
   14001bda6:	mov    eax,0x3
   14001bdab:	test   al,bl
   14001bdad:	jne    0x14001bdbb
   14001bdaf:	cmp    ecx,0x1
   14001bdb2:	je     0x14001bdce
   14001bdb4:	cmp    ecx,0x2
   14001bdb7:	jne    0x14001bdcc
   14001bdb9:	jmp    0x14001bdc0
   14001bdbb:	test   bl,0x1
   14001bdbe:	je     0x14001bdc7
   14001bdc0:	mov    eax,0x4
   14001bdc5:	jmp    0x14001bdce
   14001bdc7:	test   bl,0x2
   14001bdca:	jne    0x14001bdce
   14001bdcc:	xor    eax,eax
   14001bdce:	cmp    BYTE PTR [rsp+0x58],0x0
   14001bdd3:	je     0x14001bde1
   14001bdd5:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bdda:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001bde1:	mov    rcx,QWORD PTR [rsp+0x78]
   14001bde6:	xor    rcx,rsp
   14001bde9:	call   0x14000c380
   14001bdee:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001bdf6:	add    rsp,0x80
   14001bdfd:	pop    rdi
   14001bdfe:	ret    
   14001bdff:	int3   
   14001be00:	xor    r9d,r9d
   14001be03:	xor    r8d,r8d
   14001be06:	jmp    0x14001bc60
   14001be0b:	int3   
   14001be0c:	xor    r9d,r9d
   14001be0f:	jmp    0x14001bc60
   14001be14:	xor    r8d,r8d
   14001be17:	jmp    0x14001be1c
   14001be1c:	mov    QWORD PTR [rsp+0x18],rbx
   14001be21:	push   rdi
   14001be22:	sub    rsp,0x80
   14001be29:	mov    rax,QWORD PTR [rip+0x203a0]        # 0x14003c1d0
   14001be30:	xor    rax,rsp
   14001be33:	mov    QWORD PTR [rsp+0x78],rax
   14001be38:	mov    rdi,rcx
   14001be3b:	mov    rbx,rdx
   14001be3e:	lea    rcx,[rsp+0x40]
   14001be43:	mov    rdx,r8
   14001be46:	call   0x140008fac
   14001be4b:	lea    rax,[rsp+0x40]
   14001be50:	lea    rdx,[rsp+0x60]
   14001be55:	mov    QWORD PTR [rsp+0x38],rax
   14001be5a:	and    DWORD PTR [rsp+0x30],0x0
   14001be5f:	and    DWORD PTR [rsp+0x28],0x0
   14001be64:	and    DWORD PTR [rsp+0x20],0x0
   14001be69:	lea    rcx,[rsp+0x68]
   14001be6e:	mov    r9d,0x1
   14001be74:	mov    r8,rbx
   14001be77:	call   0x140022bd8
   14001be7c:	lea    rcx,[rsp+0x68]
   14001be81:	mov    rdx,rdi
   14001be84:	mov    ebx,eax
   14001be86:	call   0x140022338
   14001be8b:	mov    ecx,eax
   14001be8d:	mov    eax,0x3
   14001be92:	test   al,bl
   14001be94:	jne    0x14001bea2
   14001be96:	cmp    ecx,0x1
   14001be99:	je     0x14001beb5
   14001be9b:	cmp    ecx,0x2
   14001be9e:	jne    0x14001beb3
   14001bea0:	jmp    0x14001bea7
   14001bea2:	test   bl,0x1
   14001bea5:	je     0x14001beae
   14001bea7:	mov    eax,0x4
   14001beac:	jmp    0x14001beb5
   14001beae:	test   bl,0x2
   14001beb1:	jne    0x14001beb5
   14001beb3:	xor    eax,eax
   14001beb5:	cmp    BYTE PTR [rsp+0x58],0x0
   14001beba:	je     0x14001bec8
   14001bebc:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bec1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001bec8:	mov    rcx,QWORD PTR [rsp+0x78]
   14001becd:	xor    rcx,rsp
   14001bed0:	call   0x14000c380
   14001bed5:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001bedd:	add    rsp,0x80
   14001bee4:	pop    rdi
   14001bee5:	ret    
   14001bee6:	int3   
   14001bee7:	int3   
   14001bee8:	mov    QWORD PTR [rsp+0x8],rbx
   14001beed:	movzx  r11d,WORD PTR [rdx+0x6]
   14001bef2:	mov    r10,rcx
   14001bef5:	mov    ecx,DWORD PTR [rdx+0x4]
   14001bef8:	movzx  r8d,r11w
   14001befc:	mov    eax,0x8000
   14001bf01:	mov    r9d,0x7ff
   14001bf07:	shr    r8w,0x4
   14001bf0c:	and    r11w,ax
   14001bf10:	mov    eax,DWORD PTR [rdx]
   14001bf12:	and    r8w,r9w
   14001bf16:	and    ecx,0xfffff
   14001bf1c:	mov    ebx,0x80000000
   14001bf21:	movzx  edx,r8w
   14001bf25:	test   edx,edx
   14001bf27:	je     0x14001bf41
   14001bf29:	cmp    edx,r9d
   14001bf2c:	je     0x14001bf39
   14001bf2e:	mov    edx,0x3c00
   14001bf33:	add    r8w,dx
   14001bf37:	jmp    0x14001bf5d
   14001bf39:	mov    r8d,0x7fff
   14001bf3f:	jmp    0x14001bf5d
   14001bf41:	test   ecx,ecx
   14001bf43:	jne    0x14001bf52
   14001bf45:	test   eax,eax
   14001bf47:	jne    0x14001bf52
   14001bf49:	and    DWORD PTR [r10+0x4],eax
   14001bf4d:	and    DWORD PTR [r10],eax
   14001bf50:	jmp    0x14001bfaa
   14001bf52:	mov    edx,0x3c01
   14001bf57:	add    r8w,dx
   14001bf5b:	xor    ebx,ebx
   14001bf5d:	mov    r9d,eax
   14001bf60:	shl    ecx,0xb
   14001bf63:	shl    eax,0xb
   14001bf66:	shr    r9d,0x15
   14001bf6a:	mov    DWORD PTR [r10],eax
   14001bf6d:	or     r9d,ecx
   14001bf70:	or     r9d,ebx
   14001bf73:	mov    DWORD PTR [r10+0x4],r9d
   14001bf77:	test   r9d,r9d
   14001bf7a:	js     0x14001bfa6
   14001bf7c:	mov    edx,DWORD PTR [r10]
   14001bf7f:	lea    eax,[r9+r9*1]
   14001bf83:	mov    ecx,edx
   14001bf85:	shr    ecx,0x1f
   14001bf88:	mov    r9d,ecx
   14001bf8b:	or     r9d,eax
   14001bf8e:	lea    eax,[rdx+rdx*1]
   14001bf91:	mov    DWORD PTR [r10],eax
   14001bf94:	mov    eax,0xffff
   14001bf99:	add    r8w,ax
   14001bf9d:	test   r9d,r9d
   14001bfa0:	jns    0x14001bf7c
   14001bfa2:	mov    DWORD PTR [r10+0x4],r9d
   14001bfa6:	or     r11w,r8w
   14001bfaa:	mov    rbx,QWORD PTR [rsp+0x8]
   14001bfaf:	mov    WORD PTR [r10+0x8],r11w
   14001bfb4:	ret    
   14001bfb5:	int3   
   14001bfb6:	int3   
   14001bfb7:	int3   
   14001bfb8:	rex push rbp
   14001bfba:	push   rbx
   14001bfbb:	push   rsi
   14001bfbc:	push   rdi
   14001bfbd:	lea    rbp,[rsp-0x3f]
   14001bfc2:	sub    rsp,0x88
   14001bfc9:	mov    rax,QWORD PTR [rip+0x20200]        # 0x14003c1d0
   14001bfd0:	xor    rax,rsp
   14001bfd3:	mov    QWORD PTR [rbp+0x27],rax
   14001bfd7:	mov    rdi,rdx
   14001bfda:	mov    QWORD PTR [rbp-0x19],rcx
   14001bfde:	lea    rdx,[rbp-0x19]
   14001bfe2:	lea    rcx,[rbp-0x9]
   14001bfe6:	mov    rbx,r9
   14001bfe9:	mov    rsi,r8
   14001bfec:	call   0x14001bee8
   14001bff1:	movzx  eax,WORD PTR [rbp-0x1]
   14001bff5:	xor    r8d,r8d
   14001bff8:	movsd  xmm0,QWORD PTR [rbp-0x9]
   14001bffd:	movsd  QWORD PTR [rbp-0x19],xmm0
   14001c002:	lea    r9,[rbp+0x7]
   14001c006:	lea    rcx,[rbp-0x19]
   14001c00a:	lea    edx,[r8+0x11]
   14001c00e:	mov    WORD PTR [rbp-0x11],ax
   14001c012:	call   0x14002343c
   14001c017:	movsx  ecx,BYTE PTR [rbp+0x9]
   14001c01b:	mov    DWORD PTR [rdi],ecx
   14001c01d:	movsx  ecx,WORD PTR [rbp+0x7]
   14001c021:	lea    r8,[rbp+0xb]
   14001c025:	mov    DWORD PTR [rdi+0x4],ecx
   14001c028:	mov    rdx,rbx
   14001c02b:	mov    rcx,rsi
   14001c02e:	mov    DWORD PTR [rdi+0x8],eax
   14001c031:	call   0x14000edd8
   14001c036:	test   eax,eax
   14001c038:	jne    0x14001c059
   14001c03a:	mov    QWORD PTR [rdi+0x10],rsi
   14001c03e:	mov    rax,rdi
   14001c041:	mov    rcx,QWORD PTR [rbp+0x27]
   14001c045:	xor    rcx,rsp
   14001c048:	call   0x14000c380
   14001c04d:	add    rsp,0x88
   14001c054:	pop    rdi
   14001c055:	pop    rsi
   14001c056:	pop    rbx
   14001c057:	pop    rbp
   14001c058:	ret    
   14001c059:	and    QWORD PTR [rsp+0x20],0x0
   14001c05f:	xor    r9d,r9d
   14001c062:	xor    r8d,r8d
   14001c065:	xor    edx,edx
   14001c067:	xor    ecx,ecx
   14001c069:	call   0x140008da8
   14001c06e:	int3   
   14001c06f:	int3   
   14001c070:	mov    eax,DWORD PTR [rip+0x22ede]        # 0x14003ef54
   14001c076:	ret    
   14001c077:	int3   
   14001c078:	rex push rbx
   14001c07a:	sub    rsp,0x20
   14001c07e:	mov    ebx,DWORD PTR [rip+0x22ed0]        # 0x14003ef54
   14001c084:	test   ecx,0xfffffffe
   14001c08a:	je     0x14001c09e
   14001c08c:	call   0x140009cb4
   14001c091:	mov    DWORD PTR [rax],0x16
   14001c097:	call   0x140008d58
   14001c09c:	jmp    0x14001c0a4
   14001c09e:	mov    DWORD PTR [rip+0x22eb0],ecx        # 0x14003ef54
   14001c0a4:	mov    eax,ebx
   14001c0a6:	add    rsp,0x20
   14001c0aa:	pop    rbx
   14001c0ab:	ret    
   14001c0ac:	mov    ecx,0x2
   14001c0b1:	jmp    0x1400081bc
   14001c0b6:	int3   
   14001c0b7:	int3   
   14001c0b8:	mov    QWORD PTR [rsp+0x8],rbx
   14001c0bd:	mov    QWORD PTR [rsp+0x10],rsi
   14001c0c2:	push   rdi
   14001c0c3:	sub    rsp,0x40
   14001c0c7:	mov    ebx,edx
   14001c0c9:	mov    rdx,rcx
   14001c0cc:	lea    rcx,[rsp+0x20]
   14001c0d1:	mov    edi,r9d
   14001c0d4:	mov    esi,r8d
   14001c0d7:	call   0x140008fac
   14001c0dc:	mov    rax,QWORD PTR [rsp+0x28]
   14001c0e1:	movzx  edx,bl
   14001c0e4:	test   BYTE PTR [rdx+rax*1+0x19],dil
   14001c0e9:	jne    0x14001c109
   14001c0eb:	test   esi,esi
   14001c0ed:	je     0x14001c103
   14001c0ef:	mov    rax,QWORD PTR [rsp+0x20]
   14001c0f4:	mov    rcx,QWORD PTR [rax+0x108]
   14001c0fb:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001c0ff:	and    eax,esi
   14001c101:	jmp    0x14001c105
   14001c103:	xor    eax,eax
   14001c105:	test   eax,eax
   14001c107:	je     0x14001c10e
   14001c109:	mov    eax,0x1
   14001c10e:	cmp    BYTE PTR [rsp+0x38],0x0
   14001c113:	je     0x14001c121
   14001c115:	mov    rcx,QWORD PTR [rsp+0x30]
   14001c11a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001c121:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c126:	mov    rsi,QWORD PTR [rsp+0x58]
   14001c12b:	add    rsp,0x40
   14001c12f:	pop    rdi
   14001c130:	ret    
   14001c131:	int3   
   14001c132:	int3   
   14001c133:	int3   
   14001c134:	mov    edx,ecx
   14001c136:	mov    r9d,0x1
   14001c13c:	mov    r8d,0x107
   14001c142:	xor    ecx,ecx
   14001c144:	jmp    0x14001c0b8
   14001c149:	int3   
   14001c14a:	int3   
   14001c14b:	int3   
   14001c14c:	mov    rax,rdx
   14001c14f:	mov    edx,ecx
   14001c151:	mov    r9d,0x1
   14001c157:	mov    rcx,rax
   14001c15a:	mov    r8d,0x107
   14001c160:	jmp    0x14001c0b8
   14001c165:	int3   
   14001c166:	int3   
   14001c167:	int3   
   14001c168:	mov    edx,ecx
   14001c16a:	mov    r9d,0x1
   14001c170:	mov    r8d,0x103
   14001c176:	xor    ecx,ecx
   14001c178:	jmp    0x14001c0b8
   14001c17d:	int3   
   14001c17e:	int3   
   14001c17f:	int3   
   14001c180:	mov    rax,rdx
   14001c183:	mov    edx,ecx
   14001c185:	mov    r9d,0x1
   14001c18b:	mov    rcx,rax
   14001c18e:	mov    r8d,0x103
   14001c194:	jmp    0x14001c0b8
   14001c199:	int3   
   14001c19a:	int3   
   14001c19b:	int3   
   14001c19c:	cmp    ecx,0x9
   14001c19f:	jne    0x14001c1a5
   14001c1a1:	lea    eax,[rcx+0x37]
   14001c1a4:	ret    
   14001c1a5:	mov    r9d,0x2
   14001c1ab:	mov    edx,ecx
   14001c1ad:	xor    ecx,ecx
   14001c1af:	lea    r8d,[r9+0x3e]
   14001c1b3:	jmp    0x14001c0b8
   14001c1b8:	mov    r10,rdx
   14001c1bb:	cmp    ecx,0x9
   14001c1be:	jne    0x14001c1c4
   14001c1c0:	lea    eax,[rcx+0x37]
   14001c1c3:	ret    
   14001c1c4:	mov    r9d,0x2
   14001c1ca:	mov    edx,ecx
   14001c1cc:	mov    rcx,r10
   14001c1cf:	lea    r8d,[r9+0x3e]
   14001c1d3:	jmp    0x14001c0b8
   14001c1d8:	mov    edx,ecx
   14001c1da:	mov    r9d,0x3
   14001c1e0:	mov    r8d,0x117
   14001c1e6:	xor    ecx,ecx
   14001c1e8:	jmp    0x14001c0b8
   14001c1ed:	int3   
   14001c1ee:	int3   
   14001c1ef:	int3   
   14001c1f0:	mov    rax,rdx
   14001c1f3:	mov    edx,ecx
   14001c1f5:	mov    r9d,0x3
   14001c1fb:	mov    rcx,rax
   14001c1fe:	mov    r8d,0x117
   14001c204:	jmp    0x14001c0b8
   14001c209:	int3   
   14001c20a:	int3   
   14001c20b:	int3   
   14001c20c:	mov    edx,ecx
   14001c20e:	mov    r9d,0x1
   14001c214:	xor    r8d,r8d
   14001c217:	xor    ecx,ecx
   14001c219:	jmp    0x14001c0b8
   14001c21e:	int3   
   14001c21f:	int3   
   14001c220:	mov    rax,rdx
   14001c223:	mov    edx,ecx
   14001c225:	mov    r9d,0x1
   14001c22b:	mov    rcx,rax
   14001c22e:	xor    r8d,r8d
   14001c231:	jmp    0x14001c0b8
   14001c236:	int3   
   14001c237:	int3   
   14001c238:	xor    edx,edx
   14001c23a:	jmp    0x14001c240
   14001c23f:	int3   
   14001c240:	mov    QWORD PTR [rsp+0x8],rbx
   14001c245:	push   rdi
   14001c246:	sub    rsp,0x40
   14001c24a:	mov    edi,ecx
   14001c24c:	lea    rcx,[rsp+0x20]
   14001c251:	mov    rbx,rdx
   14001c254:	call   0x140008fac
   14001c259:	mov    rax,QWORD PTR [rsp+0x28]
   14001c25e:	test   rax,rax
   14001c261:	je     0x14001c283
   14001c263:	cmp    DWORD PTR [rax+0x4],0x3a4
   14001c26a:	jne    0x14001c283
   14001c26c:	mov    r9d,0x3
   14001c272:	xor    r8d,r8d
   14001c275:	mov    edx,edi
   14001c277:	mov    rcx,rbx
   14001c27a:	call   0x14001c0b8
   14001c27f:	mov    ecx,eax
   14001c281:	jmp    0x14001c285
   14001c283:	xor    ecx,ecx
   14001c285:	cmp    BYTE PTR [rsp+0x38],0x0
   14001c28a:	je     0x14001c298
   14001c28c:	mov    rax,QWORD PTR [rsp+0x30]
   14001c291:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001c298:	mov    eax,ecx
   14001c29a:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c29f:	add    rsp,0x40
   14001c2a3:	pop    rdi
   14001c2a4:	ret    
   14001c2a5:	int3   
   14001c2a6:	int3   
   14001c2a7:	int3   
   14001c2a8:	mov    edx,ecx
   14001c2aa:	mov    r9d,0x3
   14001c2b0:	xor    r8d,r8d
   14001c2b3:	xor    ecx,ecx
   14001c2b5:	jmp    0x14001c0b8
   14001c2ba:	int3   
   14001c2bb:	int3   
   14001c2bc:	mov    rax,rdx
   14001c2bf:	mov    edx,ecx
   14001c2c1:	mov    r9d,0x3
   14001c2c7:	mov    rcx,rax
   14001c2ca:	xor    r8d,r8d
   14001c2cd:	jmp    0x14001c0b8
   14001c2d2:	int3   
   14001c2d3:	int3   
   14001c2d4:	mov    edx,ecx
   14001c2d6:	mov    r9d,0x2
   14001c2dc:	xor    r8d,r8d
   14001c2df:	xor    ecx,ecx
   14001c2e1:	jmp    0x14001c0b8
   14001c2e6:	int3   
   14001c2e7:	int3   
   14001c2e8:	mov    rax,rdx
   14001c2eb:	mov    edx,ecx
   14001c2ed:	mov    r9d,0x2
   14001c2f3:	mov    rcx,rax
   14001c2f6:	xor    r8d,r8d
   14001c2f9:	jmp    0x14001c0b8
   14001c2fe:	int3   
   14001c2ff:	int3   
   14001c300:	mov    edx,ecx
   14001c302:	mov    r9d,0x4
   14001c308:	xor    r8d,r8d
   14001c30b:	xor    ecx,ecx
   14001c30d:	jmp    0x14001c0b8
   14001c312:	int3   
   14001c313:	int3   
   14001c314:	mov    rax,rdx
   14001c317:	mov    edx,ecx
   14001c319:	mov    r9d,0x4
   14001c31f:	mov    rcx,rax
   14001c322:	xor    r8d,r8d
   14001c325:	jmp    0x14001c0b8
   14001c32a:	int3   
   14001c32b:	int3   
   14001c32c:	mov    edx,ecx
   14001c32e:	mov    r9d,0x3
   14001c334:	mov    r8d,0x157
   14001c33a:	xor    ecx,ecx
   14001c33c:	jmp    0x14001c0b8
   14001c341:	int3   
   14001c342:	int3   
   14001c343:	int3   
   14001c344:	mov    rax,rdx
   14001c347:	mov    edx,ecx
   14001c349:	mov    r9d,0x3
   14001c34f:	mov    rcx,rax
   14001c352:	mov    r8d,0x157
   14001c358:	jmp    0x14001c0b8
   14001c35d:	int3   
   14001c35e:	int3   
   14001c35f:	int3   
   14001c360:	mov    r9d,0x2
   14001c366:	mov    edx,ecx
   14001c368:	xor    ecx,ecx
   14001c36a:	lea    r8d,[r9+0xe]
   14001c36e:	jmp    0x14001c0b8
   14001c373:	int3   
   14001c374:	mov    rax,rdx
   14001c377:	mov    r9d,0x2
   14001c37d:	mov    edx,ecx
   14001c37f:	lea    r8d,[r9+0xe]
   14001c383:	mov    rcx,rax
   14001c386:	jmp    0x14001c0b8
   14001c38b:	int3   
   14001c38c:	mov    edx,ecx
   14001c38e:	mov    r9d,0x8
   14001c394:	xor    r8d,r8d
   14001c397:	xor    ecx,ecx
   14001c399:	jmp    0x14001c0b8
   14001c39e:	int3   
   14001c39f:	int3   
   14001c3a0:	mov    rax,rdx
   14001c3a3:	mov    edx,ecx
   14001c3a5:	mov    r9d,0x8
   14001c3ab:	mov    rcx,rax
   14001c3ae:	xor    r8d,r8d
   14001c3b1:	jmp    0x14001c0b8
   14001c3b6:	int3   
   14001c3b7:	int3   
   14001c3b8:	rex push rbx
   14001c3ba:	sub    rsp,0x20
   14001c3be:	xor    r10d,r10d
   14001c3c1:	mov    r9,rcx
   14001c3c4:	test   rcx,rcx
   14001c3c7:	je     0x14001c3d7
   14001c3c9:	test   rdx,rdx
   14001c3cc:	je     0x14001c3d7
   14001c3ce:	test   r8,r8
   14001c3d1:	jne    0x14001c3f0
   14001c3d3:	mov    WORD PTR [rcx],r10w
   14001c3d7:	call   0x140009cb4
   14001c3dc:	mov    ebx,0x16
   14001c3e1:	mov    DWORD PTR [rax],ebx
   14001c3e3:	call   0x140008d58
   14001c3e8:	mov    eax,ebx
   14001c3ea:	add    rsp,0x20
   14001c3ee:	pop    rbx
   14001c3ef:	ret    
   14001c3f0:	cmp    WORD PTR [rcx],r10w
   14001c3f4:	je     0x14001c3ff
   14001c3f6:	add    rcx,0x2
   14001c3fa:	dec    rdx
   14001c3fd:	jne    0x14001c3f0
   14001c3ff:	test   rdx,rdx
   14001c402:	jne    0x14001c40a
   14001c404:	mov    WORD PTR [r9],r10w
   14001c408:	jmp    0x14001c3d7
   14001c40a:	sub    rcx,r8
   14001c40d:	movzx  eax,WORD PTR [r8]
   14001c411:	mov    WORD PTR [rcx+r8*1],ax
   14001c416:	lea    r8,[r8+0x2]
   14001c41a:	test   ax,ax
   14001c41d:	je     0x14001c424
   14001c41f:	dec    rdx
   14001c422:	jne    0x14001c40d
   14001c424:	test   rdx,rdx
   14001c427:	jne    0x14001c439
   14001c429:	mov    WORD PTR [r9],r10w
   14001c42d:	call   0x140009cb4
   14001c432:	mov    ebx,0x22
   14001c437:	jmp    0x14001c3e1
   14001c439:	xor    eax,eax
   14001c43b:	jmp    0x14001c3ea
   14001c43d:	int3   
   14001c43e:	int3   
   14001c43f:	int3   
   14001c440:	rex push rbx
   14001c442:	sub    rsp,0x20
   14001c446:	xor    r10d,r10d
   14001c449:	test   rcx,rcx
   14001c44c:	je     0x14001c45c
   14001c44e:	test   rdx,rdx
   14001c451:	je     0x14001c45c
   14001c453:	test   r8,r8
   14001c456:	jne    0x14001c475
   14001c458:	mov    WORD PTR [rcx],r10w
   14001c45c:	call   0x140009cb4
   14001c461:	mov    ebx,0x16
   14001c466:	mov    DWORD PTR [rax],ebx
   14001c468:	call   0x140008d58
   14001c46d:	mov    eax,ebx
   14001c46f:	add    rsp,0x20
   14001c473:	pop    rbx
   14001c474:	ret    
   14001c475:	mov    r9,rcx
   14001c478:	sub    r9,r8
   14001c47b:	movzx  eax,WORD PTR [r8]
   14001c47f:	mov    WORD PTR [r9+r8*1],ax
   14001c484:	lea    r8,[r8+0x2]
   14001c488:	test   ax,ax
   14001c48b:	je     0x14001c492
   14001c48d:	dec    rdx
   14001c490:	jne    0x14001c47b
   14001c492:	test   rdx,rdx
   14001c495:	jne    0x14001c4a7
   14001c497:	mov    WORD PTR [rcx],r10w
   14001c49b:	call   0x140009cb4
   14001c4a0:	mov    ebx,0x22
   14001c4a5:	jmp    0x14001c466
   14001c4a7:	xor    eax,eax
   14001c4a9:	jmp    0x14001c46f
   14001c4ab:	int3   
   14001c4ac:	mov    rax,rcx
   14001c4af:	movzx  edx,WORD PTR [rax]
   14001c4b2:	add    rax,0x2
   14001c4b6:	test   dx,dx
   14001c4b9:	jne    0x14001c4af
   14001c4bb:	sub    rax,rcx
   14001c4be:	sar    rax,1
   14001c4c1:	dec    rax
   14001c4c4:	ret    
   14001c4c5:	int3   
   14001c4c6:	int3   
   14001c4c7:	int3   
   14001c4c8:	rex push rbx
   14001c4ca:	sub    rsp,0x20
   14001c4ce:	xor    ebx,ebx
   14001c4d0:	test   r9,r9
   14001c4d3:	jne    0x14001c4e3
   14001c4d5:	test   rcx,rcx
   14001c4d8:	jne    0x14001c4e8
   14001c4da:	test   rdx,rdx
   14001c4dd:	jne    0x14001c4ff
   14001c4df:	xor    eax,eax
   14001c4e1:	jmp    0x14001c512
   14001c4e3:	test   rcx,rcx
   14001c4e6:	je     0x14001c4ff
   14001c4e8:	test   rdx,rdx
   14001c4eb:	je     0x14001c4ff
   14001c4ed:	test   r9,r9
   14001c4f0:	jne    0x14001c4f7
   14001c4f2:	mov    WORD PTR [rcx],bx
   14001c4f5:	jmp    0x14001c4df
   14001c4f7:	test   r8,r8
   14001c4fa:	jne    0x14001c518
   14001c4fc:	mov    WORD PTR [rcx],bx
   14001c4ff:	call   0x140009cb4
   14001c504:	mov    ebx,0x16
   14001c509:	mov    DWORD PTR [rax],ebx
   14001c50b:	call   0x140008d58
   14001c510:	mov    eax,ebx
   14001c512:	add    rsp,0x20
   14001c516:	pop    rbx
   14001c517:	ret    
   14001c518:	mov    r11,rcx
   14001c51b:	mov    r10,rdx
   14001c51e:	cmp    r9,0xffffffffffffffff
   14001c522:	jne    0x14001c540
   14001c524:	sub    r11,r8
   14001c527:	movzx  eax,WORD PTR [r8]
   14001c52b:	mov    WORD PTR [r11+r8*1],ax
   14001c530:	lea    r8,[r8+0x2]
   14001c534:	test   ax,ax
   14001c537:	je     0x14001c568
   14001c539:	dec    r10
   14001c53c:	jne    0x14001c527
   14001c53e:	jmp    0x14001c568
   14001c540:	sub    r8,rcx
   14001c543:	movzx  eax,WORD PTR [r8+r11*1]
   14001c548:	mov    WORD PTR [r11],ax
   14001c54c:	lea    r11,[r11+0x2]
   14001c550:	test   ax,ax
   14001c553:	je     0x14001c55f
   14001c555:	dec    r10
   14001c558:	je     0x14001c55f
   14001c55a:	dec    r9
   14001c55d:	jne    0x14001c543
   14001c55f:	test   r9,r9
   14001c562:	jne    0x14001c568
   14001c564:	mov    WORD PTR [r11],bx
   14001c568:	test   r10,r10
   14001c56b:	jne    0x14001c4df
   14001c571:	cmp    r9,0xffffffffffffffff
   14001c575:	jne    0x14001c582
   14001c577:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   14001c57c:	lea    eax,[r10+0x50]
   14001c580:	jmp    0x14001c512
   14001c582:	mov    WORD PTR [rcx],bx
   14001c585:	call   0x140009cb4
   14001c58a:	mov    ebx,0x22
   14001c58f:	jmp    0x14001c509
   14001c594:	rex push rbx
   14001c596:	push   rbp
   14001c597:	push   rsi
   14001c598:	push   rdi
   14001c599:	push   r12
   14001c59b:	push   r14
   14001c59d:	push   r15
   14001c59f:	sub    rsp,0x50
   14001c5a3:	mov    rax,QWORD PTR [rip+0x1fc26]        # 0x14003c1d0
   14001c5aa:	xor    rax,rsp
   14001c5ad:	mov    QWORD PTR [rsp+0x48],rax
   14001c5b2:	mov    r15,rcx
   14001c5b5:	xor    ecx,ecx
   14001c5b7:	mov    ebp,r8d
   14001c5ba:	mov    r12,rdx
   14001c5bd:	call   QWORD PTR [rip+0xfb4d]        # 0x14002c110
   14001c5c3:	xor    edi,edi
   14001c5c5:	mov    rsi,rax
   14001c5c8:	call   0x14000e828
   14001c5cd:	cmp    QWORD PTR [rip+0x22984],rdi        # 0x14003ef58
   14001c5d4:	mov    r14d,eax
   14001c5d7:	jne    0x14001c6d5
   14001c5dd:	lea    rcx,[rip+0x17b4c]        # 0x140034130
   14001c5e4:	xor    edx,edx
   14001c5e6:	mov    r8d,0x800
   14001c5ec:	call   QWORD PTR [rip+0xfa86]        # 0x14002c078
   14001c5f2:	mov    rbx,rax
   14001c5f5:	test   rax,rax
   14001c5f8:	jne    0x14001c627
   14001c5fa:	call   QWORD PTR [rip+0xfb50]        # 0x14002c150
   14001c600:	cmp    eax,0x57
   14001c603:	jne    0x14001c7e9
   14001c609:	lea    rcx,[rip+0x17b20]        # 0x140034130
   14001c610:	xor    r8d,r8d
   14001c613:	xor    edx,edx
   14001c615:	call   QWORD PTR [rip+0xfa5d]        # 0x14002c078
   14001c61b:	mov    rbx,rax
   14001c61e:	test   rax,rax
   14001c621:	je     0x14001c7e9
   14001c627:	lea    rdx,[rip+0x17b1a]        # 0x140034148
   14001c62e:	mov    rcx,rbx
   14001c631:	call   QWORD PTR [rip+0xfb41]        # 0x14002c178
   14001c637:	test   rax,rax
   14001c63a:	je     0x14001c7e9
   14001c640:	mov    rcx,rax
   14001c643:	call   QWORD PTR [rip+0xfac7]        # 0x14002c110
   14001c649:	lea    rdx,[rip+0x17b08]        # 0x140034158
   14001c650:	mov    rcx,rbx
   14001c653:	mov    QWORD PTR [rip+0x228fe],rax        # 0x14003ef58
   14001c65a:	call   QWORD PTR [rip+0xfb18]        # 0x14002c178
   14001c660:	mov    rcx,rax
   14001c663:	call   QWORD PTR [rip+0xfaa7]        # 0x14002c110
   14001c669:	lea    rdx,[rip+0x17af8]        # 0x140034168
   14001c670:	mov    rcx,rbx
   14001c673:	mov    QWORD PTR [rip+0x228e6],rax        # 0x14003ef60
   14001c67a:	call   QWORD PTR [rip+0xfaf8]        # 0x14002c178
   14001c680:	mov    rcx,rax
   14001c683:	call   QWORD PTR [rip+0xfa87]        # 0x14002c110
   14001c689:	lea    rdx,[rip+0x17af0]        # 0x140034180
   14001c690:	mov    rcx,rbx
   14001c693:	mov    QWORD PTR [rip+0x228ce],rax        # 0x14003ef68
   14001c69a:	call   QWORD PTR [rip+0xfad8]        # 0x14002c178
   14001c6a0:	mov    rcx,rax
   14001c6a3:	call   QWORD PTR [rip+0xfa67]        # 0x14002c110
   14001c6a9:	mov    QWORD PTR [rip+0x228c8],rax        # 0x14003ef78
   14001c6b0:	test   rax,rax
   14001c6b3:	je     0x14001c6d5
   14001c6b5:	lea    rdx,[rip+0x17ae4]        # 0x1400341a0
   14001c6bc:	mov    rcx,rbx
   14001c6bf:	call   QWORD PTR [rip+0xfab3]        # 0x14002c178
   14001c6c5:	mov    rcx,rax
   14001c6c8:	call   QWORD PTR [rip+0xfa42]        # 0x14002c110
   14001c6ce:	mov    QWORD PTR [rip+0x2289b],rax        # 0x14003ef70
   14001c6d5:	call   QWORD PTR [rip+0xfac5]        # 0x14002c1a0
   14001c6db:	test   eax,eax
   14001c6dd:	je     0x14001c6fc
   14001c6df:	test   r15,r15
   14001c6e2:	je     0x14001c6ed
   14001c6e4:	mov    rcx,r15
   14001c6e7:	call   QWORD PTR [rip+0xf943]        # 0x14002c030
   14001c6ed:	test   r14d,r14d
   14001c6f0:	je     0x14001c718
   14001c6f2:	mov    eax,0x4
   14001c6f7:	jmp    0x14001c7eb
   14001c6fc:	test   r14d,r14d
   14001c6ff:	je     0x14001c718
   14001c701:	mov    rcx,QWORD PTR [rip+0x22850]        # 0x14003ef58
   14001c708:	call   QWORD PTR [rip+0xfa0a]        # 0x14002c118
   14001c70e:	mov    eax,0x3
   14001c713:	jmp    0x14001c7eb
   14001c718:	mov    rcx,QWORD PTR [rip+0x22851]        # 0x14003ef70
   14001c71f:	cmp    rcx,rsi
   14001c722:	je     0x14001c787
   14001c724:	cmp    QWORD PTR [rip+0x2284d],rsi        # 0x14003ef78
   14001c72b:	je     0x14001c787
   14001c72d:	call   QWORD PTR [rip+0xf9e5]        # 0x14002c118
   14001c733:	mov    rcx,QWORD PTR [rip+0x2283e]        # 0x14003ef78
   14001c73a:	mov    rbx,rax
   14001c73d:	call   QWORD PTR [rip+0xf9d5]        # 0x14002c118
   14001c743:	mov    r14,rax
   14001c746:	test   rbx,rbx
   14001c749:	je     0x14001c787
   14001c74b:	test   rax,rax
   14001c74e:	je     0x14001c787
   14001c750:	call   rbx
   14001c752:	test   rax,rax
   14001c755:	je     0x14001c781
   14001c757:	lea    rcx,[rsp+0x30]
   14001c75c:	mov    r9d,0xc
   14001c762:	lea    r8,[rsp+0x38]
   14001c767:	mov    QWORD PTR [rsp+0x20],rcx
   14001c76c:	lea    edx,[r9-0xb]
   14001c770:	mov    rcx,rax
   14001c773:	call   r14
   14001c776:	test   eax,eax
   14001c778:	je     0x14001c781
   14001c77a:	test   BYTE PTR [rsp+0x40],0x1
   14001c77f:	jne    0x14001c787
   14001c781:	bts    ebp,0x15
   14001c785:	jmp    0x14001c7c7
   14001c787:	mov    rcx,QWORD PTR [rip+0x227d2]        # 0x14003ef60
   14001c78e:	cmp    rcx,rsi
   14001c791:	je     0x14001c7c7
   14001c793:	call   QWORD PTR [rip+0xf97f]        # 0x14002c118
   14001c799:	test   rax,rax
   14001c79c:	je     0x14001c7c7
   14001c79e:	call   rax
   14001c7a0:	mov    rdi,rax
   14001c7a3:	test   rax,rax
   14001c7a6:	je     0x14001c7c7
   14001c7a8:	mov    rcx,QWORD PTR [rip+0x227b9]        # 0x14003ef68
   14001c7af:	cmp    rcx,rsi
   14001c7b2:	je     0x14001c7c7
   14001c7b4:	call   QWORD PTR [rip+0xf95e]        # 0x14002c118
   14001c7ba:	test   rax,rax
   14001c7bd:	je     0x14001c7c7
   14001c7bf:	mov    rcx,rdi
   14001c7c2:	call   rax
   14001c7c4:	mov    rdi,rax
   14001c7c7:	mov    rcx,QWORD PTR [rip+0x2278a]        # 0x14003ef58
   14001c7ce:	call   QWORD PTR [rip+0xf944]        # 0x14002c118
   14001c7d4:	test   rax,rax
   14001c7d7:	je     0x14001c7e9
   14001c7d9:	mov    r9d,ebp
   14001c7dc:	mov    r8,r12
   14001c7df:	mov    rdx,r15
   14001c7e2:	mov    rcx,rdi
   14001c7e5:	call   rax
   14001c7e7:	jmp    0x14001c7eb
   14001c7e9:	xor    eax,eax
   14001c7eb:	mov    rcx,QWORD PTR [rsp+0x48]
   14001c7f0:	xor    rcx,rsp
   14001c7f3:	call   0x14000c380
   14001c7f8:	add    rsp,0x50
   14001c7fc:	pop    r15
   14001c7fe:	pop    r14
   14001c800:	pop    r12
   14001c802:	pop    rdi
   14001c803:	pop    rsi
   14001c804:	pop    rbp
   14001c805:	pop    rbx
   14001c806:	ret    
   14001c807:	int3   
   14001c808:	rex push rbx
   14001c80a:	sub    rsp,0x20
   14001c80e:	mov    r9d,DWORD PTR [rcx+0x18]
   14001c812:	mov    r8,QWORD PTR [rcx+0x10]
   14001c816:	mov    rdx,QWORD PTR [rcx+0x8]
   14001c81a:	mov    rbx,rcx
   14001c81d:	xor    ecx,ecx
   14001c81f:	call   QWORD PTR [rbx]
   14001c821:	mov    DWORD PTR [rbx+0x1c],eax
   14001c824:	xor    eax,eax
   14001c826:	add    rsp,0x20
   14001c82a:	pop    rbx
   14001c82b:	ret    
   14001c82c:	xor    r8d,r8d
   14001c82f:	mov    eax,r8d
   14001c832:	test   rdx,rdx
   14001c835:	je     0x14001c849
   14001c837:	cmp    WORD PTR [rcx],r8w
   14001c83b:	je     0x14001c849
   14001c83d:	inc    rax
   14001c840:	add    rcx,0x2
   14001c844:	cmp    rax,rdx
   14001c847:	jb     0x14001c837
   14001c849:	ret    
   14001c84a:	int3   
   14001c84b:	int3   
   14001c84c:	rex push rbp
   14001c84e:	push   r12
   14001c850:	push   r13
   14001c852:	push   r14
   14001c854:	push   r15
   14001c856:	sub    rsp,0x50
   14001c85a:	lea    rbp,[rsp+0x40]
   14001c85f:	mov    QWORD PTR [rbp+0x40],rbx
   14001c863:	mov    QWORD PTR [rbp+0x48],rsi
   14001c867:	mov    QWORD PTR [rbp+0x50],rdi
   14001c86b:	mov    rax,QWORD PTR [rip+0x1f95e]        # 0x14003c1d0
   14001c872:	xor    rax,rbp
   14001c875:	mov    QWORD PTR [rbp+0x8],rax
   14001c879:	mov    ebx,DWORD PTR [rbp+0x60]
   14001c87c:	xor    edi,edi
   14001c87e:	mov    r12,r9
   14001c881:	mov    r13d,r8d
   14001c884:	mov    QWORD PTR [rbp+0x0],rdx
   14001c888:	test   ebx,ebx
   14001c88a:	jle    0x14001c8b6
   14001c88c:	mov    r10d,ebx
   14001c88f:	mov    rax,r9
   14001c892:	dec    r10d
   14001c895:	cmp    BYTE PTR [rax],dil
   14001c898:	je     0x14001c8a6
   14001c89a:	inc    rax
   14001c89d:	test   r10d,r10d
   14001c8a0:	jne    0x14001c892
   14001c8a2:	or     r10d,0xffffffff
   14001c8a6:	mov    eax,ebx
   14001c8a8:	sub    eax,r10d
   14001c8ab:	dec    eax
   14001c8ad:	cmp    eax,ebx
   14001c8af:	lea    ebx,[rax+0x1]
   14001c8b2:	jl     0x14001c8b6
   14001c8b4:	mov    ebx,eax
   14001c8b6:	mov    r14d,DWORD PTR [rbp+0x78]
   14001c8ba:	mov    esi,edi
   14001c8bc:	test   r14d,r14d
   14001c8bf:	jne    0x14001c8c8
   14001c8c1:	mov    rax,QWORD PTR [rcx]
   14001c8c4:	mov    r14d,DWORD PTR [rax+0x4]
   14001c8c8:	neg    DWORD PTR [rbp+0x80]
   14001c8ce:	mov    r9d,ebx
   14001c8d1:	mov    r8,r12
   14001c8d4:	sbb    edx,edx
   14001c8d6:	mov    ecx,r14d
   14001c8d9:	mov    DWORD PTR [rsp+0x28],edi
   14001c8dd:	and    edx,0x8
   14001c8e0:	mov    QWORD PTR [rsp+0x20],rdi
   14001c8e5:	inc    edx
   14001c8e7:	call   QWORD PTR [rip+0xf89b]        # 0x14002c188
   14001c8ed:	movsxd r15,eax
   14001c8f0:	test   eax,eax
   14001c8f2:	jne    0x14001c8fb
   14001c8f4:	xor    eax,eax
   14001c8f6:	jmp    0x14001cb12
   14001c8fb:	movabs r9,0xffffffffffffff0
   14001c905:	test   eax,eax
   14001c907:	jle    0x14001c977
   14001c909:	xor    edx,edx
   14001c90b:	lea    rax,[rdx-0x20]
   14001c90f:	div    r15
   14001c912:	cmp    rax,0x2
   14001c916:	jb     0x14001c977
   14001c918:	lea    rcx,[r15+r15*1]
   14001c91c:	lea    rax,[rcx+0x10]
   14001c920:	cmp    rax,rcx
   14001c923:	jbe    0x14001c977
   14001c925:	lea    rcx,[r15*2+0x10]
   14001c92d:	cmp    rcx,0x400
   14001c934:	ja     0x14001c960
   14001c936:	lea    rax,[rcx+0xf]
   14001c93a:	cmp    rax,rcx
   14001c93d:	ja     0x14001c942
   14001c93f:	mov    rax,r9
   14001c942:	and    rax,0xfffffffffffffff0
   14001c946:	call   0x140006e30
   14001c94b:	sub    rsp,rax
   14001c94e:	lea    rdi,[rsp+0x40]
   14001c953:	test   rdi,rdi
   14001c956:	je     0x14001c8f4
   14001c958:	mov    DWORD PTR [rdi],0xcccc
   14001c95e:	jmp    0x14001c973
   14001c960:	call   0x140007c64
   14001c965:	mov    rdi,rax
   14001c968:	test   rax,rax
   14001c96b:	je     0x14001c977
   14001c96d:	mov    DWORD PTR [rax],0xdddd
   14001c973:	add    rdi,0x10
   14001c977:	test   rdi,rdi
   14001c97a:	je     0x14001c8f4
   14001c980:	mov    r9d,ebx
   14001c983:	mov    r8,r12
   14001c986:	mov    edx,0x1
   14001c98b:	mov    ecx,r14d
   14001c98e:	mov    DWORD PTR [rsp+0x28],r15d
   14001c993:	mov    QWORD PTR [rsp+0x20],rdi
   14001c998:	call   QWORD PTR [rip+0xf7ea]        # 0x14002c188
   14001c99e:	test   eax,eax
   14001c9a0:	je     0x14001caff
   14001c9a6:	mov    r12,QWORD PTR [rbp+0x0]
   14001c9aa:	and    DWORD PTR [rsp+0x28],esi
   14001c9ae:	and    QWORD PTR [rsp+0x20],rsi
   14001c9b3:	mov    rcx,r12
   14001c9b6:	mov    r9d,r15d
   14001c9b9:	mov    r8,rdi
   14001c9bc:	mov    edx,r13d
   14001c9bf:	call   0x14000fb44
   14001c9c4:	movsxd rsi,eax
   14001c9c7:	test   eax,eax
   14001c9c9:	je     0x14001caff
   14001c9cf:	mov    r9d,0x400
   14001c9d5:	test   r9d,r13d
   14001c9d8:	je     0x14001ca10
   14001c9da:	mov    ecx,DWORD PTR [rbp+0x70]
   14001c9dd:	test   ecx,ecx
   14001c9df:	je     0x14001caff
   14001c9e5:	cmp    esi,ecx
   14001c9e7:	jg     0x14001caff
   14001c9ed:	mov    rax,QWORD PTR [rbp+0x68]
   14001c9f1:	mov    DWORD PTR [rsp+0x28],ecx
   14001c9f5:	mov    r9d,r15d
   14001c9f8:	mov    r8,rdi
   14001c9fb:	mov    edx,r13d
   14001c9fe:	mov    rcx,r12
   14001ca01:	mov    QWORD PTR [rsp+0x20],rax
   14001ca06:	call   0x14000fb44
   14001ca0b:	jmp    0x14001caff
   14001ca10:	test   eax,eax
   14001ca12:	jle    0x14001ca8b
   14001ca14:	xor    edx,edx
   14001ca16:	lea    rax,[rdx-0x20]
   14001ca1a:	div    rsi
   14001ca1d:	cmp    rax,0x2
   14001ca21:	jb     0x14001ca8b
   14001ca23:	lea    rcx,[rsi+rsi*1]
   14001ca27:	lea    rax,[rcx+0x10]
   14001ca2b:	cmp    rax,rcx
   14001ca2e:	jbe    0x14001ca8b
   14001ca30:	lea    rcx,[rsi*2+0x10]
   14001ca38:	cmp    rcx,r9
   14001ca3b:	ja     0x14001ca72
   14001ca3d:	lea    rax,[rcx+0xf]
   14001ca41:	cmp    rax,rcx
   14001ca44:	ja     0x14001ca50
   14001ca46:	movabs rax,0xffffffffffffff0
   14001ca50:	and    rax,0xfffffffffffffff0
   14001ca54:	call   0x140006e30
   14001ca59:	sub    rsp,rax
   14001ca5c:	lea    rbx,[rsp+0x40]
   14001ca61:	test   rbx,rbx
   14001ca64:	je     0x14001caff
   14001ca6a:	mov    DWORD PTR [rbx],0xcccc
   14001ca70:	jmp    0x14001ca85
   14001ca72:	call   0x140007c64
   14001ca77:	mov    rbx,rax
   14001ca7a:	test   rax,rax
   14001ca7d:	je     0x14001ca8d
   14001ca7f:	mov    DWORD PTR [rax],0xdddd
   14001ca85:	add    rbx,0x10
   14001ca89:	jmp    0x14001ca8d
   14001ca8b:	xor    ebx,ebx
   14001ca8d:	test   rbx,rbx
   14001ca90:	je     0x14001caff
   14001ca92:	mov    r9d,r15d
   14001ca95:	mov    r8,rdi
   14001ca98:	mov    edx,r13d
   14001ca9b:	mov    rcx,r12
   14001ca9e:	mov    DWORD PTR [rsp+0x28],esi
   14001caa2:	mov    QWORD PTR [rsp+0x20],rbx
   14001caa7:	call   0x14000fb44
   14001caac:	xor    ecx,ecx
   14001caae:	test   eax,eax
   14001cab0:	je     0x14001caee
   14001cab2:	mov    eax,DWORD PTR [rbp+0x70]
   14001cab5:	xor    edx,edx
   14001cab7:	mov    QWORD PTR [rsp+0x38],rcx
   14001cabc:	mov    r9d,esi
   14001cabf:	mov    r8,rbx
   14001cac2:	mov    QWORD PTR [rsp+0x30],rcx
   14001cac7:	test   eax,eax
   14001cac9:	jne    0x14001cad6
   14001cacb:	mov    DWORD PTR [rsp+0x28],ecx
   14001cacf:	mov    QWORD PTR [rsp+0x20],rcx
   14001cad4:	jmp    0x14001cae3
   14001cad6:	mov    DWORD PTR [rsp+0x28],eax
   14001cada:	mov    rax,QWORD PTR [rbp+0x68]
   14001cade:	mov    QWORD PTR [rsp+0x20],rax
   14001cae3:	mov    ecx,r14d
   14001cae6:	call   QWORD PTR [rip+0xf6a4]        # 0x14002c190
   14001caec:	mov    esi,eax
   14001caee:	lea    rcx,[rbx-0x10]
   14001caf2:	cmp    DWORD PTR [rcx],0xdddd
   14001caf8:	jne    0x14001caff
   14001cafa:	call   0x140007dc0
   14001caff:	lea    rcx,[rdi-0x10]
   14001cb03:	cmp    DWORD PTR [rcx],0xdddd
   14001cb09:	jne    0x14001cb10
   14001cb0b:	call   0x140007dc0
   14001cb10:	mov    eax,esi
   14001cb12:	mov    rcx,QWORD PTR [rbp+0x8]
   14001cb16:	xor    rcx,rbp
   14001cb19:	call   0x14000c380
   14001cb1e:	mov    rbx,QWORD PTR [rbp+0x40]
   14001cb22:	mov    rsi,QWORD PTR [rbp+0x48]
   14001cb26:	mov    rdi,QWORD PTR [rbp+0x50]
   14001cb2a:	lea    rsp,[rbp+0x10]
   14001cb2e:	pop    r15
   14001cb30:	pop    r14
   14001cb32:	pop    r13
   14001cb34:	pop    r12
   14001cb36:	pop    rbp
   14001cb37:	ret    
   14001cb38:	mov    eax,edx
   14001cb3a:	test   edx,edx
   14001cb3c:	je     0x14001cb4c
   14001cb3e:	dec    eax
   14001cb40:	cmp    BYTE PTR [rcx],0x0
   14001cb43:	je     0x14001cb4e
   14001cb45:	inc    rcx
   14001cb48:	test   eax,eax
   14001cb4a:	jne    0x14001cb3e
   14001cb4c:	dec    eax
   14001cb4e:	sub    edx,eax
   14001cb50:	lea    eax,[rdx-0x1]
   14001cb53:	ret    
   14001cb54:	mov    QWORD PTR [rsp+0x8],rbx
   14001cb59:	mov    QWORD PTR [rsp+0x10],rsi
   14001cb5e:	push   rdi
   14001cb5f:	sub    rsp,0x70
   14001cb63:	mov    rsi,rdx
   14001cb66:	mov    rdx,rcx
   14001cb69:	lea    rcx,[rsp+0x50]
   14001cb6e:	mov    rbx,r9
   14001cb71:	mov    edi,r8d
   14001cb74:	call   0x140008fac
   14001cb79:	mov    eax,DWORD PTR [rsp+0xc0]
   14001cb80:	lea    rcx,[rsp+0x50]
   14001cb85:	mov    r9,rbx
   14001cb88:	mov    DWORD PTR [rsp+0x40],eax
   14001cb8c:	mov    eax,DWORD PTR [rsp+0xb8]
   14001cb93:	mov    r8d,edi
   14001cb96:	mov    DWORD PTR [rsp+0x38],eax
   14001cb9a:	mov    eax,DWORD PTR [rsp+0xb0]
   14001cba1:	mov    rdx,rsi
   14001cba4:	mov    DWORD PTR [rsp+0x30],eax
   14001cba8:	mov    rax,QWORD PTR [rsp+0xa8]
   14001cbb0:	mov    QWORD PTR [rsp+0x28],rax
   14001cbb5:	mov    eax,DWORD PTR [rsp+0xa0]
   14001cbbc:	mov    DWORD PTR [rsp+0x20],eax
   14001cbc0:	call   0x14001c84c
   14001cbc5:	cmp    BYTE PTR [rsp+0x68],0x0
   14001cbca:	je     0x14001cbd8
   14001cbcc:	mov    rcx,QWORD PTR [rsp+0x60]
   14001cbd1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001cbd8:	lea    r11,[rsp+0x70]
   14001cbdd:	mov    rbx,QWORD PTR [r11+0x10]
   14001cbe1:	mov    rsi,QWORD PTR [r11+0x18]
   14001cbe5:	mov    rsp,r11
   14001cbe8:	pop    rdi
   14001cbe9:	ret    
   14001cbea:	int3   
   14001cbeb:	int3   
   14001cbec:	rex push rbp
   14001cbee:	push   r12
   14001cbf0:	push   r13
   14001cbf2:	push   r14
   14001cbf4:	push   r15
   14001cbf6:	sub    rsp,0x40
   14001cbfa:	lea    rbp,[rsp+0x30]
   14001cbff:	mov    QWORD PTR [rbp+0x40],rbx
   14001cc03:	mov    QWORD PTR [rbp+0x48],rsi
   14001cc07:	mov    QWORD PTR [rbp+0x50],rdi
   14001cc0b:	mov    rax,QWORD PTR [rip+0x1f5be]        # 0x14003c1d0
   14001cc12:	xor    rax,rbp
   14001cc15:	mov    QWORD PTR [rbp+0x0],rax
   14001cc19:	mov    r14d,DWORD PTR [rbp+0x68]
   14001cc1d:	xor    edi,edi
   14001cc1f:	mov    r15d,r9d
   14001cc22:	mov    r12,r8
   14001cc25:	mov    r13d,edx
   14001cc28:	test   r14d,r14d
   14001cc2b:	jne    0x14001cc34
   14001cc2d:	mov    rax,QWORD PTR [rcx]
   14001cc30:	mov    r14d,DWORD PTR [rax+0x4]
   14001cc34:	neg    DWORD PTR [rbp+0x70]
   14001cc37:	mov    ecx,r14d
   14001cc3a:	mov    DWORD PTR [rsp+0x28],edi
   14001cc3e:	sbb    edx,edx
   14001cc40:	mov    QWORD PTR [rsp+0x20],rdi
   14001cc45:	and    edx,0x8
   14001cc48:	inc    edx
   14001cc4a:	call   QWORD PTR [rip+0xf538]        # 0x14002c188
   14001cc50:	movsxd rsi,eax
   14001cc53:	test   eax,eax
   14001cc55:	jne    0x14001cc5e
   14001cc57:	xor    eax,eax
   14001cc59:	jmp    0x14001cd3c
   14001cc5e:	jle    0x14001ccd7
   14001cc60:	movabs rax,0x7ffffffffffffff0
   14001cc6a:	cmp    rsi,rax
   14001cc6d:	ja     0x14001ccd7
   14001cc6f:	lea    rcx,[rsi+rsi*1]
   14001cc73:	lea    rax,[rcx+0x10]
   14001cc77:	cmp    rax,rcx
   14001cc7a:	jbe    0x14001ccd7
   14001cc7c:	lea    rcx,[rsi*2+0x10]
   14001cc84:	cmp    rcx,0x400
   14001cc8b:	ja     0x14001ccbe
   14001cc8d:	lea    rax,[rcx+0xf]
   14001cc91:	cmp    rax,rcx
   14001cc94:	ja     0x14001cca0
   14001cc96:	movabs rax,0xffffffffffffff0
   14001cca0:	and    rax,0xfffffffffffffff0
   14001cca4:	call   0x140006e30
   14001cca9:	sub    rsp,rax
   14001ccac:	lea    rbx,[rsp+0x30]
   14001ccb1:	test   rbx,rbx
   14001ccb4:	je     0x14001cc57
   14001ccb6:	mov    DWORD PTR [rbx],0xcccc
   14001ccbc:	jmp    0x14001ccd1
   14001ccbe:	call   0x140007c64
   14001ccc3:	mov    rbx,rax
   14001ccc6:	test   rax,rax
   14001ccc9:	je     0x14001ccda
   14001cccb:	mov    DWORD PTR [rax],0xdddd
   14001ccd1:	add    rbx,0x10
   14001ccd5:	jmp    0x14001ccda
   14001ccd7:	mov    rbx,rdi
   14001ccda:	test   rbx,rbx
   14001ccdd:	je     0x14001cc57
   14001cce3:	mov    r8,rsi
   14001cce6:	xor    edx,edx
   14001cce8:	mov    rcx,rbx
   14001cceb:	add    r8,r8
   14001ccee:	call   0x140006f70
   14001ccf3:	mov    r9d,r15d
   14001ccf6:	mov    r8,r12
   14001ccf9:	mov    edx,0x1
   14001ccfe:	mov    ecx,r14d
   14001cd01:	mov    DWORD PTR [rsp+0x28],esi
   14001cd05:	mov    QWORD PTR [rsp+0x20],rbx
   14001cd0a:	call   QWORD PTR [rip+0xf478]        # 0x14002c188
   14001cd10:	test   eax,eax
   14001cd12:	je     0x14001cd29
   14001cd14:	mov    r9,QWORD PTR [rbp+0x60]
   14001cd18:	mov    r8d,eax
   14001cd1b:	mov    rdx,rbx
   14001cd1e:	mov    ecx,r13d
   14001cd21:	call   QWORD PTR [rip+0xf301]        # 0x14002c028
   14001cd27:	mov    edi,eax
   14001cd29:	lea    rcx,[rbx-0x10]
   14001cd2d:	cmp    DWORD PTR [rcx],0xdddd
   14001cd33:	jne    0x14001cd3a
   14001cd35:	call   0x140007dc0
   14001cd3a:	mov    eax,edi
   14001cd3c:	mov    rcx,QWORD PTR [rbp+0x0]
   14001cd40:	xor    rcx,rbp
   14001cd43:	call   0x14000c380
   14001cd48:	mov    rbx,QWORD PTR [rbp+0x40]
   14001cd4c:	mov    rsi,QWORD PTR [rbp+0x48]
   14001cd50:	mov    rdi,QWORD PTR [rbp+0x50]
   14001cd54:	lea    rsp,[rbp+0x10]
   14001cd58:	pop    r15
   14001cd5a:	pop    r14
   14001cd5c:	pop    r13
   14001cd5e:	pop    r12
   14001cd60:	pop    rbp
   14001cd61:	ret    
   14001cd62:	int3   
   14001cd63:	int3   
   14001cd64:	mov    QWORD PTR [rsp+0x8],rbx
   14001cd69:	mov    QWORD PTR [rsp+0x10],rsi
   14001cd6e:	push   rdi
   14001cd6f:	sub    rsp,0x60
   14001cd73:	mov    esi,edx
   14001cd75:	mov    rdx,rcx
   14001cd78:	lea    rcx,[rsp+0x40]
   14001cd7d:	mov    ebx,r9d
   14001cd80:	mov    rdi,r8
   14001cd83:	call   0x140008fac
   14001cd88:	mov    eax,DWORD PTR [rsp+0xa0]
   14001cd8f:	lea    rcx,[rsp+0x40]
   14001cd94:	mov    r9d,ebx
   14001cd97:	mov    DWORD PTR [rsp+0x30],eax
   14001cd9b:	mov    eax,DWORD PTR [rsp+0x98]
   14001cda2:	mov    r8,rdi
   14001cda5:	mov    DWORD PTR [rsp+0x28],eax
   14001cda9:	mov    rax,QWORD PTR [rsp+0x90]
   14001cdb1:	mov    edx,esi
   14001cdb3:	mov    QWORD PTR [rsp+0x20],rax
   14001cdb8:	call   0x14001cbec
   14001cdbd:	cmp    BYTE PTR [rsp+0x58],0x0
   14001cdc2:	je     0x14001cdd0
   14001cdc4:	mov    rcx,QWORD PTR [rsp+0x50]
   14001cdc9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001cdd0:	mov    rbx,QWORD PTR [rsp+0x70]
   14001cdd5:	mov    rsi,QWORD PTR [rsp+0x78]
   14001cdda:	add    rsp,0x60
   14001cdde:	pop    rdi
   14001cddf:	ret    
   14001cde0:	rex push rbx
   14001cde2:	sub    rsp,0x20
   14001cde6:	mov    rbx,rcx
   14001cde9:	test   rcx,rcx
   14001cdec:	jne    0x14001cdf8
   14001cdee:	add    rsp,0x20
   14001cdf2:	pop    rbx
   14001cdf3:	jmp    0x14001cef8
   14001cdf8:	call   0x14001ce2c
   14001cdfd:	test   eax,eax
   14001cdff:	je     0x14001ce06
   14001ce01:	or     eax,0xffffffff
   14001ce04:	jmp    0x14001ce26
   14001ce06:	test   DWORD PTR [rbx+0x18],0x4000
   14001ce0d:	je     0x14001ce24
   14001ce0f:	mov    rcx,rbx
   14001ce12:	call   0x140010f18
   14001ce17:	mov    ecx,eax
   14001ce19:	call   0x140023f90
   14001ce1e:	neg    eax
   14001ce20:	sbb    eax,eax
   14001ce22:	jmp    0x14001ce26
   14001ce24:	xor    eax,eax
   14001ce26:	add    rsp,0x20
   14001ce2a:	pop    rbx
   14001ce2b:	ret    
   14001ce2c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ce31:	mov    QWORD PTR [rsp+0x10],rsi
   14001ce36:	push   rdi
   14001ce37:	sub    rsp,0x20
   14001ce3b:	mov    eax,DWORD PTR [rcx+0x18]
   14001ce3e:	xor    esi,esi
   14001ce40:	mov    rbx,rcx
   14001ce43:	and    al,0x3
   14001ce45:	cmp    al,0x2
   14001ce47:	jne    0x14001ce88
   14001ce49:	test   DWORD PTR [rcx+0x18],0x108
   14001ce50:	je     0x14001ce88
   14001ce52:	mov    edi,DWORD PTR [rcx]
   14001ce54:	sub    edi,DWORD PTR [rcx+0x10]
   14001ce57:	test   edi,edi
   14001ce59:	jle    0x14001ce88
   14001ce5b:	call   0x140010f18
   14001ce60:	mov    rdx,QWORD PTR [rbx+0x10]
   14001ce64:	mov    r8d,edi
   14001ce67:	mov    ecx,eax
   14001ce69:	call   0x140010fa0
   14001ce6e:	cmp    eax,edi
   14001ce70:	jne    0x14001ce81
   14001ce72:	mov    eax,DWORD PTR [rbx+0x18]
   14001ce75:	test   al,al
   14001ce77:	jns    0x14001ce88
   14001ce79:	and    eax,0xfffffffd
   14001ce7c:	mov    DWORD PTR [rbx+0x18],eax
   14001ce7f:	jmp    0x14001ce88
   14001ce81:	or     DWORD PTR [rbx+0x18],0x20
   14001ce85:	or     esi,0xffffffff
   14001ce88:	mov    rcx,QWORD PTR [rbx+0x10]
   14001ce8c:	and    DWORD PTR [rbx+0x8],0x0
   14001ce90:	mov    eax,esi
   14001ce92:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ce97:	mov    QWORD PTR [rbx],rcx
   14001ce9a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce9f:	add    rsp,0x20
   14001cea3:	pop    rdi
   14001cea4:	ret    
   14001cea5:	int3   
   14001cea6:	int3   
   14001cea7:	int3   
   14001cea8:	mov    ecx,0x1
   14001cead:	jmp    0x14001cef8
   14001ceb2:	int3   
   14001ceb3:	int3   
   14001ceb4:	mov    QWORD PTR [rsp+0x10],rbx
   14001ceb9:	mov    QWORD PTR [rsp+0x8],rcx
   14001cebe:	push   rdi
   14001cebf:	sub    rsp,0x20
   14001cec3:	mov    rbx,rcx
   14001cec6:	test   rcx,rcx
   14001cec9:	jne    0x14001ced2
   14001cecb:	call   0x14001cef8
   14001ced0:	jmp    0x14001ceec
   14001ced2:	call   0x140010e0c
   14001ced7:	nop
   14001ced8:	mov    rcx,rbx
   14001cedb:	call   0x14001cde0
   14001cee0:	mov    edi,eax
   14001cee2:	mov    rcx,rbx
   14001cee5:	call   0x140010ea8
   14001ceea:	mov    eax,edi
   14001ceec:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cef1:	add    rsp,0x20
   14001cef5:	pop    rdi
   14001cef6:	ret    
   14001cef7:	int3   
   14001cef8:	mov    QWORD PTR [rsp+0x8],rbx
   14001cefd:	mov    QWORD PTR [rsp+0x10],rsi
   14001cf02:	mov    QWORD PTR [rsp+0x18],rdi
   14001cf07:	push   r13
   14001cf09:	push   r14
   14001cf0b:	push   r15
   14001cf0d:	sub    rsp,0x30
   14001cf11:	mov    r14d,ecx
   14001cf14:	xor    esi,esi
   14001cf16:	xor    edi,edi
   14001cf18:	lea    ecx,[rsi+0x1]
   14001cf1b:	call   0x14000fc2c
   14001cf20:	nop
   14001cf21:	xor    ebx,ebx
   14001cf23:	or     r13d,0xffffffff
   14001cf27:	mov    DWORD PTR [rsp+0x20],ebx
   14001cf2b:	cmp    ebx,DWORD PTR [rip+0x2206f]        # 0x14003efa0
   14001cf31:	jge    0x14001cfb1
   14001cf33:	movsxd r15,ebx
   14001cf36:	mov    rax,QWORD PTR [rip+0x2205b]        # 0x14003ef98
   14001cf3d:	mov    rdx,QWORD PTR [rax+r15*8]
   14001cf41:	test   rdx,rdx
   14001cf44:	je     0x14001cfaa
   14001cf46:	test   BYTE PTR [rdx+0x18],0x83
   14001cf4a:	je     0x14001cfaa
   14001cf4c:	mov    ecx,ebx
   14001cf4e:	call   0x140010e74
   14001cf53:	nop
   14001cf54:	mov    rax,QWORD PTR [rip+0x2203d]        # 0x14003ef98
   14001cf5b:	mov    rcx,QWORD PTR [rax+r15*8]
   14001cf5f:	test   BYTE PTR [rcx+0x18],0x83
   14001cf63:	je     0x14001cf98
   14001cf65:	cmp    r14d,0x1
   14001cf69:	jne    0x14001cf7d
   14001cf6b:	call   0x14001cde0
   14001cf70:	cmp    eax,r13d
   14001cf73:	je     0x14001cf98
   14001cf75:	inc    esi
   14001cf77:	mov    DWORD PTR [rsp+0x24],esi
   14001cf7b:	jmp    0x14001cf98
   14001cf7d:	test   r14d,r14d
   14001cf80:	jne    0x14001cf98
   14001cf82:	test   BYTE PTR [rcx+0x18],0x2
   14001cf86:	je     0x14001cf98
   14001cf88:	call   0x14001cde0
   14001cf8d:	cmp    eax,r13d
   14001cf90:	cmove  edi,r13d
   14001cf94:	mov    DWORD PTR [rsp+0x28],edi
   14001cf98:	mov    rdx,QWORD PTR [rip+0x21ff9]        # 0x14003ef98
   14001cf9f:	mov    rdx,QWORD PTR [rdx+r15*8]
   14001cfa3:	mov    ecx,ebx
   14001cfa5:	call   0x140010ef8
   14001cfaa:	inc    ebx
   14001cfac:	jmp    0x14001cf27
   14001cfb1:	mov    ecx,0x1
   14001cfb6:	call   0x14000fe48
   14001cfbb:	cmp    r14d,0x1
   14001cfbf:	cmove  edi,esi
   14001cfc2:	mov    eax,edi
   14001cfc4:	mov    rbx,QWORD PTR [rsp+0x50]
   14001cfc9:	mov    rsi,QWORD PTR [rsp+0x58]
   14001cfce:	mov    rdi,QWORD PTR [rsp+0x60]
   14001cfd3:	add    rsp,0x30
   14001cfd7:	pop    r15
   14001cfd9:	pop    r14
   14001cfdb:	pop    r13
   14001cfdd:	ret    
   14001cfde:	int3   
   14001cfdf:	int3   
   14001cfe0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cfe5:	mov    QWORD PTR [rsp+0x10],rsi
   14001cfea:	push   rdi
   14001cfeb:	sub    rsp,0x30
   14001cfef:	xor    edi,edi
   14001cff1:	lea    ecx,[rdi+0x1]
   14001cff4:	call   0x14000fc2c
   14001cff9:	nop
   14001cffa:	lea    ebx,[rdi+0x3]
   14001cffd:	mov    DWORD PTR [rsp+0x20],ebx
   14001d001:	cmp    ebx,DWORD PTR [rip+0x21f99]        # 0x14003efa0
   14001d007:	jge    0x14001d06c
   14001d009:	movsxd rsi,ebx
   14001d00c:	mov    rax,QWORD PTR [rip+0x21f85]        # 0x14003ef98
   14001d013:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001d017:	test   rcx,rcx
   14001d01a:	je     0x14001d068
   14001d01c:	test   BYTE PTR [rcx+0x18],0x83
   14001d020:	je     0x14001d032
   14001d022:	call   0x1400240e4
   14001d027:	cmp    eax,0xffffffff
   14001d02a:	je     0x14001d032
   14001d02c:	inc    edi
   14001d02e:	mov    DWORD PTR [rsp+0x24],edi
   14001d032:	cmp    ebx,0x14
   14001d035:	jl     0x14001d068
   14001d037:	mov    rax,QWORD PTR [rip+0x21f5a]        # 0x14003ef98
   14001d03e:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001d042:	add    rcx,0x30
   14001d046:	call   QWORD PTR [rip+0xf18c]        # 0x14002c1d8
   14001d04c:	mov    rcx,QWORD PTR [rip+0x21f45]        # 0x14003ef98
   14001d053:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14001d057:	call   0x140007dc0
   14001d05c:	mov    rax,QWORD PTR [rip+0x21f35]        # 0x14003ef98
   14001d063:	and    QWORD PTR [rax+rsi*8],0x0
   14001d068:	inc    ebx
   14001d06a:	jmp    0x14001cffd
   14001d06c:	mov    ecx,0x1
   14001d071:	call   0x14000fe48
   14001d076:	mov    eax,edi
   14001d078:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d07d:	mov    rsi,QWORD PTR [rsp+0x48]
   14001d082:	add    rsp,0x30
   14001d086:	pop    rdi
   14001d087:	ret    
   14001d088:	mov    QWORD PTR [rsp+0x8],rbx
   14001d08d:	mov    QWORD PTR [rsp+0x10],rsi
   14001d092:	mov    QWORD PTR [rsp+0x18],rdi
   14001d097:	push   r15
   14001d099:	sub    rsp,0x20
   14001d09d:	movsxd rax,ecx
   14001d0a0:	mov    rsi,rax
   14001d0a3:	sar    rsi,0x5
   14001d0a7:	lea    r15,[rip+0x20c62]        # 0x14003dd10
   14001d0ae:	and    eax,0x1f
   14001d0b1:	imul   rbx,rax,0x58
   14001d0b5:	mov    rdi,QWORD PTR [r15+rsi*8]
   14001d0b9:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14001d0be:	jne    0x14001d0f4
   14001d0c0:	mov    ecx,0xa
   14001d0c5:	call   0x14000fc2c
   14001d0ca:	nop
   14001d0cb:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14001d0d0:	jne    0x14001d0ea
   14001d0d2:	lea    rcx,[rbx+0x10]
   14001d0d6:	add    rcx,rdi
   14001d0d9:	xor    r8d,r8d
   14001d0dc:	mov    edx,0xfa0
   14001d0e1:	call   0x14000e7fc
   14001d0e6:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14001d0ea:	mov    ecx,0xa
   14001d0ef:	call   0x14000fe48
   14001d0f4:	mov    rcx,QWORD PTR [r15+rsi*8]
   14001d0f8:	add    rcx,0x10
   14001d0fc:	add    rcx,rbx
   14001d0ff:	call   QWORD PTR [rip+0xef93]        # 0x14002c098
   14001d105:	mov    eax,0x1
   14001d10a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d10f:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d114:	mov    rdi,QWORD PTR [rsp+0x40]
   14001d119:	add    rsp,0x20
   14001d11d:	pop    r15
   14001d11f:	ret    
   14001d120:	mov    rax,rsp
   14001d123:	mov    QWORD PTR [rax+0x8],rbx
   14001d127:	mov    QWORD PTR [rax+0x10],rsi
   14001d12b:	mov    QWORD PTR [rax+0x18],rdi
   14001d12f:	mov    QWORD PTR [rax+0x20],r12
   14001d133:	push   r13
   14001d135:	push   r14
   14001d137:	push   r15
   14001d139:	sub    rsp,0x30
   14001d13d:	or     r13,0xffffffffffffffff
   14001d141:	mov    esi,r13d
   14001d144:	xor    r12d,r12d
   14001d147:	lea    ebx,[r13+0xc]
   14001d14b:	mov    ecx,ebx
   14001d14d:	call   0x14000fd24
   14001d152:	test   eax,eax
   14001d154:	jne    0x14001d15e
   14001d156:	mov    eax,r13d
   14001d159:	jmp    0x14001d2f9
   14001d15e:	mov    ecx,ebx
   14001d160:	call   0x14000fc2c
   14001d165:	nop
   14001d166:	mov    edi,r12d
   14001d169:	mov    DWORD PTR [rsp+0x24],r12d
   14001d16e:	lea    r14,[rip+0x20b9b]        # 0x14003dd10
   14001d175:	cmp    edi,0x40
   14001d178:	jge    0x14001d2ed
   14001d17e:	movsxd r15,edi
   14001d181:	mov    rbx,QWORD PTR [r14+r15*8]
   14001d185:	test   rbx,rbx
   14001d188:	je     0x14001d26c
   14001d18e:	mov    QWORD PTR [rsp+0x28],rbx
   14001d193:	mov    rax,QWORD PTR [r14+r15*8]
   14001d197:	add    rax,0xb00
   14001d19d:	cmp    rbx,rax
   14001d1a0:	jae    0x14001d258
   14001d1a6:	test   BYTE PTR [rbx+0x8],0x1
   14001d1aa:	jne    0x14001d248
   14001d1b0:	cmp    DWORD PTR [rbx+0xc],r12d
   14001d1b4:	jne    0x14001d1e5
   14001d1b6:	mov    ecx,0xa
   14001d1bb:	call   0x14000fc2c
   14001d1c0:	nop
   14001d1c1:	cmp    DWORD PTR [rbx+0xc],r12d
   14001d1c5:	jne    0x14001d1db
   14001d1c7:	lea    rcx,[rbx+0x10]
   14001d1cb:	xor    r8d,r8d
   14001d1ce:	mov    edx,0xfa0
   14001d1d3:	call   0x14000e7fc
   14001d1d8:	inc    DWORD PTR [rbx+0xc]
   14001d1db:	mov    ecx,0xa
   14001d1e0:	call   0x14000fe48
   14001d1e5:	test   r12d,r12d
   14001d1e8:	jne    0x14001d248
   14001d1ea:	lea    rcx,[rbx+0x10]
   14001d1ee:	call   QWORD PTR [rip+0xeea4]        # 0x14002c098
   14001d1f4:	test   BYTE PTR [rbx+0x8],0x1
   14001d1f8:	je     0x14001d206
   14001d1fa:	lea    rcx,[rbx+0x10]
   14001d1fe:	call   QWORD PTR [rip+0xee8c]        # 0x14002c090
   14001d204:	jmp    0x14001d248
   14001d206:	lea    r14,[rip+0x20b03]        # 0x14003dd10
   14001d20d:	test   r12d,r12d
   14001d210:	jne    0x14001d248
   14001d212:	mov    BYTE PTR [rbx+0x8],0x1
   14001d216:	mov    QWORD PTR [rbx],r13
   14001d219:	sub    rbx,QWORD PTR [r14+r15*8]
   14001d21d:	movabs rax,0x2e8ba2e8ba2e8ba3
   14001d227:	imul   rbx
   14001d22a:	mov    rsi,rdx
   14001d22d:	sar    rsi,0x4
   14001d231:	mov    rax,rsi
   14001d234:	shr    rax,0x3f
   14001d238:	add    rsi,rax
   14001d23b:	mov    eax,edi
   14001d23d:	shl    eax,0x5
   14001d240:	add    esi,eax
   14001d242:	mov    DWORD PTR [rsp+0x20],esi
   14001d246:	jmp    0x14001d258
   14001d248:	add    rbx,0x58
   14001d24c:	lea    r14,[rip+0x20abd]        # 0x14003dd10
   14001d253:	jmp    0x14001d18e
   14001d258:	cmp    esi,r13d
   14001d25b:	jne    0x14001d2ed
   14001d261:	inc    edi
   14001d263:	mov    DWORD PTR [rsp+0x24],edi
   14001d267:	jmp    0x14001d175
   14001d26c:	mov    edx,0x58
   14001d271:	lea    ecx,[rdx-0x38]
   14001d274:	call   0x140008604
   14001d279:	mov    QWORD PTR [rsp+0x28],rax
   14001d27e:	test   rax,rax
   14001d281:	je     0x14001d2ed
   14001d283:	movsxd rdx,edi
   14001d286:	mov    QWORD PTR [r14+rdx*8],rax
   14001d28a:	add    DWORD PTR [rip+0x22e57],0x20        # 0x1400400e8
   14001d291:	mov    rcx,QWORD PTR [r14+rdx*8]
   14001d295:	add    rcx,0xb00
   14001d29c:	cmp    rax,rcx
   14001d29f:	jae    0x14001d2b9
   14001d2a1:	mov    WORD PTR [rax+0x8],0xa00
   14001d2a7:	mov    QWORD PTR [rax],r13
   14001d2aa:	mov    DWORD PTR [rax+0xc],r12d
   14001d2ae:	add    rax,0x58
   14001d2b2:	mov    QWORD PTR [rsp+0x28],rax
   14001d2b7:	jmp    0x14001d291
   14001d2b9:	shl    edi,0x5
   14001d2bc:	mov    DWORD PTR [rsp+0x20],edi
   14001d2c0:	movsxd rcx,edi
   14001d2c3:	mov    rax,rcx
   14001d2c6:	sar    rax,0x5
   14001d2ca:	and    ecx,0x1f
   14001d2cd:	imul   rcx,rcx,0x58
   14001d2d1:	mov    rax,QWORD PTR [r14+rax*8]
   14001d2d5:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   14001d2da:	mov    ecx,edi
   14001d2dc:	call   0x14001d088
   14001d2e1:	test   eax,eax
   14001d2e3:	cmove  edi,r13d
   14001d2e7:	mov    esi,edi
   14001d2e9:	mov    DWORD PTR [rsp+0x20],edi
   14001d2ed:	mov    ecx,0xb
   14001d2f2:	call   0x14000fe48
   14001d2f7:	mov    eax,esi
   14001d2f9:	mov    rbx,QWORD PTR [rsp+0x50]
   14001d2fe:	mov    rsi,QWORD PTR [rsp+0x58]
   14001d303:	mov    rdi,QWORD PTR [rsp+0x60]
   14001d308:	mov    r12,QWORD PTR [rsp+0x68]
   14001d30d:	add    rsp,0x30
   14001d311:	pop    r15
   14001d313:	pop    r14
   14001d315:	pop    r13
   14001d317:	ret    
   14001d318:	mov    QWORD PTR [rsp+0x8],rbx
   14001d31d:	mov    QWORD PTR [rsp+0x10],rdi
   14001d322:	push   r14
   14001d324:	sub    rsp,0x20
   14001d328:	test   ecx,ecx
   14001d32a:	js     0x14001d39b
   14001d32c:	cmp    ecx,DWORD PTR [rip+0x22db6]        # 0x1400400e8
   14001d332:	jae    0x14001d39b
   14001d334:	movsxd rax,ecx
   14001d337:	lea    r14,[rip+0x209d2]        # 0x14003dd10
   14001d33e:	mov    rdi,rax
   14001d341:	and    eax,0x1f
   14001d344:	sar    rdi,0x5
   14001d348:	imul   rbx,rax,0x58
   14001d34c:	mov    rax,QWORD PTR [r14+rdi*8]
   14001d350:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14001d355:	je     0x14001d39b
   14001d357:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14001d35c:	je     0x14001d39b
   14001d35e:	cmp    DWORD PTR [rip+0x20cbb],0x1        # 0x14003e020
   14001d365:	jne    0x14001d38e
   14001d367:	test   ecx,ecx
   14001d369:	je     0x14001d381
   14001d36b:	dec    ecx
   14001d36d:	je     0x14001d37a
   14001d36f:	dec    ecx
   14001d371:	jne    0x14001d38e
   14001d373:	mov    ecx,0xfffffff4
   14001d378:	jmp    0x14001d386
   14001d37a:	mov    ecx,0xfffffff5
   14001d37f:	jmp    0x14001d386
   14001d381:	mov    ecx,0xfffffff6
   14001d386:	xor    edx,edx
   14001d388:	call   QWORD PTR [rip+0xec92]        # 0x14002c020
   14001d38e:	mov    rax,QWORD PTR [r14+rdi*8]
   14001d392:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14001d397:	xor    eax,eax
   14001d399:	jmp    0x14001d3b1
   14001d39b:	call   0x140009cb4
   14001d3a0:	mov    DWORD PTR [rax],0x9
   14001d3a6:	call   0x140009c44
   14001d3ab:	and    DWORD PTR [rax],0x0
   14001d3ae:	or     eax,0xffffffff
   14001d3b1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d3b6:	mov    rdi,QWORD PTR [rsp+0x38]
   14001d3bb:	add    rsp,0x20
   14001d3bf:	pop    r14
   14001d3c1:	ret    
   14001d3c2:	int3   
   14001d3c3:	int3   
   14001d3c4:	sub    rsp,0x28
   14001d3c8:	cmp    ecx,0xfffffffe
   14001d3cb:	jne    0x14001d3e2
   14001d3cd:	call   0x140009c44
   14001d3d2:	and    DWORD PTR [rax],0x0
   14001d3d5:	call   0x140009cb4
   14001d3da:	mov    DWORD PTR [rax],0x9
   14001d3e0:	jmp    0x14001d42f
   14001d3e2:	test   ecx,ecx
   14001d3e4:	js     0x14001d417
   14001d3e6:	cmp    ecx,DWORD PTR [rip+0x22cfc]        # 0x1400400e8
   14001d3ec:	jae    0x14001d417
   14001d3ee:	movsxd rcx,ecx
   14001d3f1:	lea    r8,[rip+0x20918]        # 0x14003dd10
   14001d3f8:	mov    rax,rcx
   14001d3fb:	and    ecx,0x1f
   14001d3fe:	sar    rax,0x5
   14001d402:	imul   rdx,rcx,0x58
   14001d406:	mov    rax,QWORD PTR [r8+rax*8]
   14001d40a:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14001d40f:	je     0x14001d417
   14001d411:	mov    rax,QWORD PTR [rax+rdx*1]
   14001d415:	jmp    0x14001d433
   14001d417:	call   0x140009c44
   14001d41c:	and    DWORD PTR [rax],0x0
   14001d41f:	call   0x140009cb4
   14001d424:	mov    DWORD PTR [rax],0x9
   14001d42a:	call   0x140008d58
   14001d42f:	or     rax,0xffffffffffffffff
   14001d433:	add    rsp,0x28
   14001d437:	ret    
   14001d438:	mov    rax,rsp
   14001d43b:	mov    QWORD PTR [rax+0x8],rbx
   14001d43f:	mov    QWORD PTR [rax+0x18],rsi
   14001d443:	mov    QWORD PTR [rax+0x20],rdi
   14001d447:	push   r14
   14001d449:	sub    rsp,0x30
   14001d44d:	mov    rsi,rcx
   14001d450:	xor    r14d,r14d
   14001d453:	mov    DWORD PTR [rax-0x18],r14d
   14001d457:	test   dl,0x8
   14001d45a:	movzx  ebx,r14b
   14001d45e:	lea    eax,[r14+0x20]
   14001d462:	cmovne ebx,eax
   14001d465:	bt     edx,0xe
   14001d469:	jae    0x14001d46e
   14001d46b:	or     bl,0x80
   14001d46e:	test   dl,dl
   14001d470:	jns    0x14001d475
   14001d472:	or     bl,0x10
   14001d475:	call   QWORD PTR [rip+0xed55]        # 0x14002c1d0
   14001d47b:	test   eax,eax
   14001d47d:	jne    0x14001d494
   14001d47f:	call   QWORD PTR [rip+0xeccb]        # 0x14002c150
   14001d485:	mov    ecx,eax
   14001d487:	call   0x140009c64
   14001d48c:	or     eax,0xffffffff
   14001d48f:	jmp    0x14001d51c
   14001d494:	cmp    eax,0x2
   14001d497:	jne    0x14001d49e
   14001d499:	or     bl,0x40
   14001d49c:	jmp    0x14001d4a6
   14001d49e:	cmp    eax,0x3
   14001d4a1:	jne    0x14001d4a6
   14001d4a3:	or     bl,0x8
   14001d4a6:	call   0x14001d120
   14001d4ab:	movsxd rdi,eax
   14001d4ae:	mov    DWORD PTR [rsp+0x48],edi
   14001d4b2:	cmp    edi,0xffffffff
   14001d4b5:	jne    0x14001d4cc
   14001d4b7:	call   0x140009cb4
   14001d4bc:	mov    DWORD PTR [rax],0x18
   14001d4c2:	call   0x140009c44
   14001d4c7:	mov    DWORD PTR [rax],r14d
   14001d4ca:	jmp    0x14001d48c
   14001d4cc:	mov    rdx,rsi
   14001d4cf:	mov    ecx,edi
   14001d4d1:	call   0x14001d534
   14001d4d6:	or     bl,0x1
   14001d4d9:	mov    rax,rdi
   14001d4dc:	mov    rdx,rdi
   14001d4df:	sar    rdx,0x5
   14001d4e3:	lea    r8,[rip+0x20826]        # 0x14003dd10
   14001d4ea:	and    eax,0x1f
   14001d4ed:	imul   rcx,rax,0x58
   14001d4f1:	mov    rax,QWORD PTR [r8+rdx*8]
   14001d4f5:	mov    BYTE PTR [rcx+rax*1+0x8],bl
   14001d4f9:	mov    rax,QWORD PTR [r8+rdx*8]
   14001d4fd:	and    BYTE PTR [rcx+rax*1+0x38],0x80
   14001d502:	mov    rax,QWORD PTR [r8+rdx*8]
   14001d506:	and    BYTE PTR [rcx+rax*1+0x38],0x7f
   14001d50b:	mov    DWORD PTR [rsp+0x20],0x1
   14001d513:	mov    ecx,edi
   14001d515:	call   0x14001d5e4
   14001d51a:	mov    eax,edi
   14001d51c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d521:	mov    rsi,QWORD PTR [rsp+0x50]
   14001d526:	mov    rdi,QWORD PTR [rsp+0x58]
   14001d52b:	add    rsp,0x30
   14001d52f:	pop    r14
   14001d531:	ret    
   14001d532:	int3   
   14001d533:	int3   
   14001d534:	mov    QWORD PTR [rsp+0x8],rbx
   14001d539:	mov    QWORD PTR [rsp+0x10],rsi
   14001d53e:	mov    QWORD PTR [rsp+0x18],rdi
   14001d543:	push   r14
   14001d545:	sub    rsp,0x20
   14001d549:	mov    rbx,rdx
   14001d54c:	test   ecx,ecx
   14001d54e:	js     0x14001d5b5
   14001d550:	cmp    ecx,DWORD PTR [rip+0x22b92]        # 0x1400400e8
   14001d556:	jae    0x14001d5b5
   14001d558:	movsxd rax,ecx
   14001d55b:	lea    r14,[rip+0x207ae]        # 0x14003dd10
   14001d562:	mov    rdi,rax
   14001d565:	and    eax,0x1f
   14001d568:	sar    rdi,0x5
   14001d56c:	imul   rsi,rax,0x58
   14001d570:	mov    rax,QWORD PTR [r14+rdi*8]
   14001d574:	cmp    QWORD PTR [rsi+rax*1],0xffffffffffffffff
   14001d579:	jne    0x14001d5b5
   14001d57b:	cmp    DWORD PTR [rip+0x20a9e],0x1        # 0x14003e020
   14001d582:	jne    0x14001d5a9
   14001d584:	test   ecx,ecx
   14001d586:	je     0x14001d59e
   14001d588:	dec    ecx
   14001d58a:	je     0x14001d597
   14001d58c:	dec    ecx
   14001d58e:	jne    0x14001d5a9
   14001d590:	mov    ecx,0xfffffff4
   14001d595:	jmp    0x14001d5a3
   14001d597:	mov    ecx,0xfffffff5
   14001d59c:	jmp    0x14001d5a3
   14001d59e:	mov    ecx,0xfffffff6
   14001d5a3:	call   QWORD PTR [rip+0xea77]        # 0x14002c020
   14001d5a9:	mov    rax,QWORD PTR [r14+rdi*8]
   14001d5ad:	mov    QWORD PTR [rsi+rax*1],rbx
   14001d5b1:	xor    eax,eax
   14001d5b3:	jmp    0x14001d5cb
   14001d5b5:	call   0x140009cb4
   14001d5ba:	mov    DWORD PTR [rax],0x9
   14001d5c0:	call   0x140009c44
   14001d5c5:	and    DWORD PTR [rax],0x0
   14001d5c8:	or     eax,0xffffffff
   14001d5cb:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d5d0:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d5d5:	mov    rdi,QWORD PTR [rsp+0x40]
   14001d5da:	add    rsp,0x20
   14001d5de:	pop    r14
   14001d5e0:	ret    
   14001d5e1:	int3   
   14001d5e2:	int3   
   14001d5e3:	int3   
   14001d5e4:	movsxd rdx,ecx
   14001d5e7:	lea    r8,[rip+0x20722]        # 0x14003dd10
   14001d5ee:	mov    rax,rdx
   14001d5f1:	and    edx,0x1f
   14001d5f4:	sar    rax,0x5
   14001d5f8:	imul   rcx,rdx,0x58
   14001d5fc:	mov    rax,QWORD PTR [r8+rax*8]
   14001d600:	add    rcx,0x10
   14001d604:	add    rcx,rax
   14001d607:	rex.W jmp QWORD PTR [rip+0xea82]        # 0x14002c090
   14001d60e:	int3   
   14001d60f:	int3   
   14001d610:	rex push rbx
   14001d612:	sub    rsp,0x20
   14001d616:	movzx  ebx,cx
   14001d619:	mov    ecx,0x3
   14001d61e:	call   0x14000fc2c
   14001d623:	nop
   14001d624:	movzx  ecx,bx
   14001d627:	call   0x14001d644
   14001d62c:	movzx  ebx,ax
   14001d62f:	mov    ecx,0x3
   14001d634:	call   0x14000fe48
   14001d639:	movzx  eax,bx
   14001d63c:	add    rsp,0x20
   14001d640:	pop    rbx
   14001d641:	ret    
   14001d642:	int3   
   14001d643:	int3   
   14001d644:	mov    WORD PTR [rsp+0x8],cx
   14001d649:	sub    rsp,0x38
   14001d64d:	mov    rcx,QWORD PTR [rip+0x1fed4]        # 0x14003d528
   14001d654:	cmp    rcx,0xfffffffffffffffe
   14001d658:	jne    0x14001d666
   14001d65a:	call   0x14002416c
   14001d65f:	mov    rcx,QWORD PTR [rip+0x1fec2]        # 0x14003d528
   14001d666:	cmp    rcx,0xffffffffffffffff
   14001d66a:	jne    0x14001d673
   14001d66c:	mov    eax,0xffff
   14001d671:	jmp    0x14001d698
   14001d673:	and    QWORD PTR [rsp+0x20],0x0
   14001d679:	lea    r9,[rsp+0x48]
   14001d67e:	lea    rdx,[rsp+0x40]
   14001d683:	mov    r8d,0x1
   14001d689:	call   QWORD PTR [rip+0xe989]        # 0x14002c018
   14001d68f:	test   eax,eax
   14001d691:	je     0x14001d66c
   14001d693:	movzx  eax,WORD PTR [rsp+0x40]
   14001d698:	add    rsp,0x38
   14001d69c:	ret    
   14001d69d:	int3   
   14001d69e:	int3   
   14001d69f:	int3   
   14001d6a0:	test   rcx,rcx
   14001d6a3:	je     0x14001d7a9
   14001d6a9:	push   rbx
   14001d6aa:	sub    rsp,0x20
   14001d6ae:	mov    rbx,rcx
   14001d6b1:	mov    rcx,QWORD PTR [rcx+0x18]
   14001d6b5:	cmp    rcx,QWORD PTR [rip+0x1fd6c]        # 0x14003d428
   14001d6bc:	je     0x14001d6c3
   14001d6be:	call   0x140007dc0
   14001d6c3:	mov    rcx,QWORD PTR [rbx+0x20]
   14001d6c7:	cmp    rcx,QWORD PTR [rip+0x1fd62]        # 0x14003d430
   14001d6ce:	je     0x14001d6d5
   14001d6d0:	call   0x140007dc0
   14001d6d5:	mov    rcx,QWORD PTR [rbx+0x28]
   14001d6d9:	cmp    rcx,QWORD PTR [rip+0x1fd58]        # 0x14003d438
   14001d6e0:	je     0x14001d6e7
   14001d6e2:	call   0x140007dc0
   14001d6e7:	mov    rcx,QWORD PTR [rbx+0x30]
   14001d6eb:	cmp    rcx,QWORD PTR [rip+0x1fd4e]        # 0x14003d440
   14001d6f2:	je     0x14001d6f9
   14001d6f4:	call   0x140007dc0
   14001d6f9:	mov    rcx,QWORD PTR [rbx+0x38]
   14001d6fd:	cmp    rcx,QWORD PTR [rip+0x1fd44]        # 0x14003d448
   14001d704:	je     0x14001d70b
   14001d706:	call   0x140007dc0
   14001d70b:	mov    rcx,QWORD PTR [rbx+0x40]
   14001d70f:	cmp    rcx,QWORD PTR [rip+0x1fd3a]        # 0x14003d450
   14001d716:	je     0x14001d71d
   14001d718:	call   0x140007dc0
   14001d71d:	mov    rcx,QWORD PTR [rbx+0x48]
   14001d721:	cmp    rcx,QWORD PTR [rip+0x1fd30]        # 0x14003d458
   14001d728:	je     0x14001d72f
   14001d72a:	call   0x140007dc0
   14001d72f:	mov    rcx,QWORD PTR [rbx+0x68]
   14001d733:	cmp    rcx,QWORD PTR [rip+0x1fd3e]        # 0x14003d478
   14001d73a:	je     0x14001d741
   14001d73c:	call   0x140007dc0
   14001d741:	mov    rcx,QWORD PTR [rbx+0x70]
   14001d745:	cmp    rcx,QWORD PTR [rip+0x1fd34]        # 0x14003d480
   14001d74c:	je     0x14001d753
   14001d74e:	call   0x140007dc0
   14001d753:	mov    rcx,QWORD PTR [rbx+0x78]
   14001d757:	cmp    rcx,QWORD PTR [rip+0x1fd2a]        # 0x14003d488
   14001d75e:	je     0x14001d765
   14001d760:	call   0x140007dc0
   14001d765:	mov    rcx,QWORD PTR [rbx+0x80]
   14001d76c:	cmp    rcx,QWORD PTR [rip+0x1fd1d]        # 0x14003d490
   14001d773:	je     0x14001d77a
   14001d775:	call   0x140007dc0
   14001d77a:	mov    rcx,QWORD PTR [rbx+0x88]
   14001d781:	cmp    rcx,QWORD PTR [rip+0x1fd10]        # 0x14003d498
   14001d788:	je     0x14001d78f
   14001d78a:	call   0x140007dc0
   14001d78f:	mov    rcx,QWORD PTR [rbx+0x90]
   14001d796:	cmp    rcx,QWORD PTR [rip+0x1fd03]        # 0x14003d4a0
   14001d79d:	je     0x14001d7a4
   14001d79f:	call   0x140007dc0
   14001d7a4:	add    rsp,0x20
   14001d7a8:	pop    rbx
   14001d7a9:	ret    
   14001d7aa:	int3   
   14001d7ab:	int3   
   14001d7ac:	mov    QWORD PTR [rsp+0x8],rbx
   14001d7b1:	mov    QWORD PTR [rsp+0x10],rsi
   14001d7b6:	mov    QWORD PTR [rsp+0x18],rdi
   14001d7bb:	push   rbp
   14001d7bc:	push   r12
   14001d7be:	push   r13
   14001d7c0:	push   r14
   14001d7c2:	push   r15
   14001d7c4:	mov    rbp,rsp
   14001d7c7:	sub    rsp,0x40
   14001d7cb:	xor    ebx,ebx
   14001d7cd:	mov    rsi,rcx
   14001d7d0:	mov    QWORD PTR [rbp-0x10],rcx
   14001d7d4:	mov    r15d,ebx
   14001d7d7:	mov    QWORD PTR [rbp-0x8],rbx
   14001d7db:	cmp    QWORD PTR [rcx+0x140],rbx
   14001d7e2:	jne    0x14001d7fc
   14001d7e4:	cmp    QWORD PTR [rcx+0x148],rbx
   14001d7eb:	jne    0x14001d7fc
   14001d7ed:	mov    r12d,ebx
   14001d7f0:	lea    r14,[rip+0x1fc19]        # 0x14003d410
   14001d7f7:	jmp    0x14001dc3f
   14001d7fc:	mov    edx,0x98
   14001d801:	mov    ecx,0x1
   14001d806:	call   0x140008604
   14001d80b:	mov    r14,rax
   14001d80e:	test   rax,rax
   14001d811:	jne    0x14001d81d
   14001d813:	mov    eax,0x1
   14001d818:	jmp    0x14001dc8e
   14001d81d:	mov    edi,0x4
   14001d822:	mov    ecx,edi
   14001d824:	call   0x140008684
   14001d829:	mov    r12,rax
   14001d82c:	test   rax,rax
   14001d82f:	jne    0x14001d83b
   14001d831:	mov    rcx,r14
   14001d834:	call   0x140007dc0
   14001d839:	jmp    0x14001d813
   14001d83b:	mov    DWORD PTR [rax],ebx
   14001d83d:	cmp    QWORD PTR [rsi+0x140],rbx
   14001d844:	je     0x14001db7c
   14001d84a:	mov    rcx,rdi
   14001d84d:	call   0x140008684
   14001d852:	mov    r15,rax
   14001d855:	test   rax,rax
   14001d858:	jne    0x14001d867
   14001d85a:	mov    rcx,r14
   14001d85d:	call   0x140007dc0
   14001d862:	mov    rcx,r12
   14001d865:	jmp    0x14001d834
   14001d867:	mov    DWORD PTR [rax],ebx
   14001d869:	mov    rdi,QWORD PTR [rsi+0x140]
   14001d870:	mov    r9d,0x15
   14001d876:	lea    rax,[r14+0x18]
   14001d87a:	lea    rcx,[rbp-0x10]
   14001d87e:	lea    edx,[r9-0x14]
   14001d882:	mov    r8,rdi
   14001d885:	mov    QWORD PTR [rsp+0x20],rax
   14001d88a:	call   0x1400079f0
   14001d88f:	lea    rcx,[r14+0x20]
   14001d893:	mov    r9d,0x14
   14001d899:	mov    QWORD PTR [rsp+0x20],rcx
   14001d89e:	lea    edx,[r9-0x13]
   14001d8a2:	lea    rcx,[rbp-0x10]
   14001d8a6:	mov    r8,rdi
   14001d8a9:	mov    ebx,eax
   14001d8ab:	call   0x1400079f0
   14001d8b0:	lea    rcx,[r14+0x28]
   14001d8b4:	mov    r9d,0x16
   14001d8ba:	mov    QWORD PTR [rsp+0x20],rcx
   14001d8bf:	lea    edx,[r9-0x15]
   14001d8c3:	lea    rcx,[rbp-0x10]
   14001d8c7:	mov    r8,rdi
   14001d8ca:	or     ebx,eax
   14001d8cc:	call   0x1400079f0
   14001d8d1:	mov    r9d,0x17
   14001d8d7:	lea    rcx,[rbp-0x10]
   14001d8db:	or     ebx,eax
   14001d8dd:	lea    rax,[r14+0x30]
   14001d8e1:	lea    edx,[r9-0x16]
   14001d8e5:	mov    r8,rdi
   14001d8e8:	mov    QWORD PTR [rsp+0x20],rax
   14001d8ed:	call   0x1400079f0
   14001d8f2:	mov    r9d,0x18
   14001d8f8:	lea    r13,[r14+0x38]
   14001d8fc:	lea    rcx,[rbp-0x10]
   14001d900:	lea    edx,[r9-0x17]
   14001d904:	mov    r8,rdi
   14001d907:	or     ebx,eax
   14001d909:	mov    QWORD PTR [rsp+0x20],r13
   14001d90e:	call   0x1400079f0
   14001d913:	mov    r9d,0x50
   14001d919:	or     ebx,eax
   14001d91b:	lea    rax,[r14+0x40]
   14001d91f:	lea    rcx,[rbp-0x10]
   14001d923:	lea    edx,[r9-0x4f]
   14001d927:	mov    r8,rdi
   14001d92a:	mov    QWORD PTR [rsp+0x20],rax
   14001d92f:	call   0x1400079f0
   14001d934:	mov    r9d,0x51
   14001d93a:	or     ebx,eax
   14001d93c:	lea    rax,[r14+0x48]
   14001d940:	lea    rcx,[rbp-0x10]
   14001d944:	lea    edx,[r9-0x50]
   14001d948:	mov    r8,rdi
   14001d94b:	mov    QWORD PTR [rsp+0x20],rax
   14001d950:	call   0x1400079f0
   14001d955:	lea    rcx,[rbp-0x10]
   14001d959:	mov    r9d,0x1a
   14001d95f:	or     ebx,eax
   14001d961:	lea    rax,[r14+0x50]
   14001d965:	mov    r8,rdi
   14001d968:	xor    edx,edx
   14001d96a:	mov    QWORD PTR [rsp+0x20],rax
   14001d96f:	call   0x1400079f0
   14001d974:	lea    rcx,[rbp-0x10]
   14001d978:	mov    r9d,0x19
   14001d97e:	or     ebx,eax
   14001d980:	lea    rax,[r14+0x51]
   14001d984:	mov    r8,rdi
   14001d987:	xor    edx,edx
   14001d989:	mov    QWORD PTR [rsp+0x20],rax
   14001d98e:	call   0x1400079f0
   14001d993:	lea    rcx,[rbp-0x10]
   14001d997:	mov    r9d,0x54
   14001d99d:	or     ebx,eax
   14001d99f:	lea    rax,[r14+0x52]
   14001d9a3:	mov    r8,rdi
   14001d9a6:	xor    edx,edx
   14001d9a8:	mov    QWORD PTR [rsp+0x20],rax
   14001d9ad:	call   0x1400079f0
   14001d9b2:	or     ebx,eax
   14001d9b4:	lea    rax,[r14+0x53]
   14001d9b8:	lea    rcx,[rbp-0x10]
   14001d9bc:	mov    r9d,0x55
   14001d9c2:	mov    r8,rdi
   14001d9c5:	xor    edx,edx
   14001d9c7:	mov    QWORD PTR [rsp+0x20],rax
   14001d9cc:	call   0x1400079f0
   14001d9d1:	lea    rcx,[rbp-0x10]
   14001d9d5:	or     ebx,eax
   14001d9d7:	lea    rax,[r14+0x54]
   14001d9db:	mov    r9d,0x56
   14001d9e1:	mov    r8,rdi
   14001d9e4:	xor    edx,edx
   14001d9e6:	mov    QWORD PTR [rsp+0x20],rax
   14001d9eb:	call   0x1400079f0
   14001d9f0:	lea    rcx,[rbp-0x10]
   14001d9f4:	mov    r9d,0x57
   14001d9fa:	or     ebx,eax
   14001d9fc:	lea    rax,[r14+0x55]
   14001da00:	mov    r8,rdi
   14001da03:	xor    edx,edx
   14001da05:	mov    QWORD PTR [rsp+0x20],rax
   14001da0a:	call   0x1400079f0
   14001da0f:	lea    rcx,[rbp-0x10]
   14001da13:	mov    r9d,0x52
   14001da19:	or     ebx,eax
   14001da1b:	lea    rax,[r14+0x56]
   14001da1f:	mov    r8,rdi
   14001da22:	xor    edx,edx
   14001da24:	mov    QWORD PTR [rsp+0x20],rax
   14001da29:	call   0x1400079f0
   14001da2e:	lea    rcx,[rbp-0x10]
   14001da32:	mov    r9d,0x53
   14001da38:	or     ebx,eax
   14001da3a:	lea    rax,[r14+0x57]
   14001da3e:	mov    r8,rdi
   14001da41:	xor    edx,edx
   14001da43:	mov    QWORD PTR [rsp+0x20],rax
   14001da48:	call   0x1400079f0
   14001da4d:	mov    r9d,0x15
   14001da53:	lea    rcx,[rbp-0x10]
   14001da57:	or     ebx,eax
   14001da59:	lea    rax,[r14+0x68]
   14001da5d:	lea    edx,[r9-0x13]
   14001da61:	mov    r8,rdi
   14001da64:	mov    QWORD PTR [rsp+0x20],rax
   14001da69:	call   0x1400079f0
   14001da6e:	mov    r9d,0x14
   14001da74:	lea    rcx,[rbp-0x10]
   14001da78:	or     ebx,eax
   14001da7a:	lea    rax,[r14+0x70]
   14001da7e:	lea    edx,[r9-0x12]
   14001da82:	mov    r8,rdi
   14001da85:	mov    QWORD PTR [rsp+0x20],rax
   14001da8a:	call   0x1400079f0
   14001da8f:	mov    r9d,0x16
   14001da95:	lea    rcx,[rbp-0x10]
   14001da99:	or     ebx,eax
   14001da9b:	lea    rax,[r14+0x78]
   14001da9f:	lea    edx,[r9-0x14]
   14001daa3:	mov    r8,rdi
   14001daa6:	mov    QWORD PTR [rsp+0x20],rax
   14001daab:	call   0x1400079f0
   14001dab0:	mov    r9d,0x17
   14001dab6:	lea    rcx,[rbp-0x10]
   14001daba:	or     ebx,eax
   14001dabc:	lea    rax,[r14+0x80]
   14001dac3:	lea    edx,[r9-0x15]
   14001dac7:	mov    r8,rdi
   14001daca:	mov    QWORD PTR [rsp+0x20],rax
   14001dacf:	call   0x1400079f0
   14001dad4:	mov    r9d,0x50
   14001dada:	lea    rcx,[rbp-0x10]
   14001dade:	or     ebx,eax
   14001dae0:	lea    rax,[r14+0x88]
   14001dae7:	lea    edx,[r9-0x4e]
   14001daeb:	mov    r8,rdi
   14001daee:	mov    QWORD PTR [rsp+0x20],rax
   14001daf3:	call   0x1400079f0
   14001daf8:	or     ebx,eax
   14001dafa:	mov    r9d,0x51
   14001db00:	lea    rax,[r14+0x90]
   14001db07:	lea    rcx,[rbp-0x10]
   14001db0b:	lea    edx,[r9-0x4f]
   14001db0f:	mov    r8,rdi
   14001db12:	mov    QWORD PTR [rsp+0x20],rax
   14001db17:	call   0x1400079f0
   14001db1c:	or     eax,ebx
   14001db1e:	je     0x14001db40
   14001db20:	mov    rcx,r14
   14001db23:	call   0x14001d6a0
   14001db28:	mov    rcx,r14
   14001db2b:	call   0x140007dc0
   14001db30:	mov    rcx,r12
   14001db33:	call   0x140007dc0
   14001db38:	mov    rcx,r15
   14001db3b:	jmp    0x14001d834
   14001db40:	mov    rdx,QWORD PTR [r13+0x0]
   14001db44:	xor    ebx,ebx
   14001db46:	jmp    0x14001db59
   14001db48:	mov    cl,BYTE PTR [rdx]
   14001db4a:	lea    eax,[rcx-0x30]
   14001db4d:	cmp    al,0x9
   14001db4f:	ja     0x14001db62
   14001db51:	sub    cl,0x30
   14001db54:	mov    BYTE PTR [rdx],cl
   14001db56:	inc    rdx
   14001db59:	cmp    BYTE PTR [rdx],bl
   14001db5b:	jne    0x14001db48
   14001db5d:	jmp    0x14001dbe2
   14001db62:	cmp    cl,0x3b
   14001db65:	jne    0x14001db56
   14001db67:	mov    r8,rdx
   14001db6a:	lea    rcx,[r8+0x1]
   14001db6e:	mov    al,BYTE PTR [rcx]
   14001db70:	mov    BYTE PTR [r8],al
   14001db73:	mov    r8,rcx
   14001db76:	test   al,al
   14001db78:	jne    0x14001db6a
   14001db7a:	jmp    0x14001db59
   14001db7c:	lea    rax,[rip+0x1f88d]        # 0x14003d410
   14001db83:	mov    edx,0x80
   14001db88:	movups xmm0,XMMWORD PTR [rax]
   14001db8b:	movups XMMWORD PTR [r14],xmm0
   14001db8f:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001db93:	movups XMMWORD PTR [r14+0x10],xmm1
   14001db98:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001db9c:	movups XMMWORD PTR [r14+0x20],xmm0
   14001dba1:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001dba5:	movups XMMWORD PTR [r14+0x30],xmm1
   14001dbaa:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001dbae:	movups XMMWORD PTR [r14+0x40],xmm0
   14001dbb3:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001dbb7:	movups XMMWORD PTR [r14+0x50],xmm1
   14001dbbc:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001dbc0:	movups XMMWORD PTR [r14+0x60],xmm0
   14001dbc5:	movups xmm0,XMMWORD PTR [rax+0x70]
   14001dbc9:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   14001dbcf:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   14001dbd3:	movups XMMWORD PTR [r14+rdx*1],xmm1
   14001dbd8:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   14001dbdd:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14001dbe2:	mov    rax,QWORD PTR [rsi+0xf0]
   14001dbe9:	mov    rcx,QWORD PTR [rax]
   14001dbec:	mov    QWORD PTR [r14],rcx
   14001dbef:	mov    rax,QWORD PTR [rsi+0xf0]
   14001dbf6:	mov    rcx,QWORD PTR [rax+0x8]
   14001dbfa:	mov    QWORD PTR [r14+0x8],rcx
   14001dbfe:	mov    rax,QWORD PTR [rsi+0xf0]
   14001dc05:	mov    rcx,QWORD PTR [rax+0x10]
   14001dc09:	mov    QWORD PTR [r14+0x10],rcx
   14001dc0d:	mov    rax,QWORD PTR [rsi+0xf0]
   14001dc14:	mov    rcx,QWORD PTR [rax+0x58]
   14001dc18:	mov    QWORD PTR [r14+0x58],rcx
   14001dc1c:	mov    rax,QWORD PTR [rsi+0xf0]
   14001dc23:	mov    rcx,QWORD PTR [rax+0x60]
   14001dc27:	mov    QWORD PTR [r14+0x60],rcx
   14001dc2b:	mov    DWORD PTR [r12],0x1
   14001dc33:	test   r15,r15
   14001dc36:	je     0x14001dc3f
   14001dc38:	mov    DWORD PTR [r15],0x1
   14001dc3f:	mov    rax,QWORD PTR [rsi+0xe8]
   14001dc46:	test   rax,rax
   14001dc49:	je     0x14001dc4e
   14001dc4b:	lock dec DWORD PTR [rax]
   14001dc4e:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001dc55:	test   rcx,rcx
   14001dc58:	je     0x14001dc77
   14001dc5a:	lock dec DWORD PTR [rcx]
   14001dc5d:	jne    0x14001dc77
   14001dc5f:	mov    rcx,QWORD PTR [rsi+0xf0]
   14001dc66:	call   0x140007dc0
   14001dc6b:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001dc72:	call   0x140007dc0
   14001dc77:	mov    QWORD PTR [rsi+0xe8],r15
   14001dc7e:	mov    QWORD PTR [rsi+0xd8],r12
   14001dc85:	mov    QWORD PTR [rsi+0xf0],r14
   14001dc8c:	xor    eax,eax
   14001dc8e:	lea    r11,[rsp+0x40]
   14001dc93:	mov    rbx,QWORD PTR [r11+0x30]
   14001dc97:	mov    rsi,QWORD PTR [r11+0x38]
   14001dc9b:	mov    rdi,QWORD PTR [r11+0x40]
   14001dc9f:	mov    rsp,r11
   14001dca2:	pop    r15
   14001dca4:	pop    r14
   14001dca6:	pop    r13
   14001dca8:	pop    r12
   14001dcaa:	pop    rbp
   14001dcab:	ret    
   14001dcac:	xor    r9d,r9d
   14001dcaf:	mov    rdx,rcx
   14001dcb2:	cmp    BYTE PTR [rcx],r9b
   14001dcb5:	je     0x14001dccd
   14001dcb7:	mov    cl,BYTE PTR [rdx]
   14001dcb9:	lea    eax,[rcx-0x30]
   14001dcbc:	cmp    al,0x9
   14001dcbe:	ja     0x14001dcce
   14001dcc0:	sub    cl,0x30
   14001dcc3:	mov    BYTE PTR [rdx],cl
   14001dcc5:	inc    rdx
   14001dcc8:	cmp    BYTE PTR [rdx],r9b
   14001dccb:	jne    0x14001dcb7
   14001dccd:	ret    
   14001dcce:	cmp    cl,0x3b
   14001dcd1:	jne    0x14001dcc5
   14001dcd3:	mov    r8,rdx
   14001dcd6:	lea    rcx,[r8+0x1]
   14001dcda:	mov    al,BYTE PTR [rcx]
   14001dcdc:	mov    BYTE PTR [r8],al
   14001dcdf:	mov    r8,rcx
   14001dce2:	test   al,al
   14001dce4:	jne    0x14001dcd6
   14001dce6:	jmp    0x14001dcc8
   14001dce8:	test   rcx,rcx
   14001dceb:	je     0x14001dd53
   14001dced:	push   rbx
   14001dcee:	sub    rsp,0x20
   14001dcf2:	mov    rbx,rcx
   14001dcf5:	mov    rcx,QWORD PTR [rcx]
   14001dcf8:	cmp    rcx,QWORD PTR [rip+0x1f711]        # 0x14003d410
   14001dcff:	je     0x14001dd06
   14001dd01:	call   0x140007dc0
   14001dd06:	mov    rcx,QWORD PTR [rbx+0x8]
   14001dd0a:	cmp    rcx,QWORD PTR [rip+0x1f707]        # 0x14003d418
   14001dd11:	je     0x14001dd18
   14001dd13:	call   0x140007dc0
   14001dd18:	mov    rcx,QWORD PTR [rbx+0x10]
   14001dd1c:	cmp    rcx,QWORD PTR [rip+0x1f6fd]        # 0x14003d420
   14001dd23:	je     0x14001dd2a
   14001dd25:	call   0x140007dc0
   14001dd2a:	mov    rcx,QWORD PTR [rbx+0x58]
   14001dd2e:	cmp    rcx,QWORD PTR [rip+0x1f733]        # 0x14003d468
   14001dd35:	je     0x14001dd3c
   14001dd37:	call   0x140007dc0
   14001dd3c:	mov    rcx,QWORD PTR [rbx+0x60]
   14001dd40:	cmp    rcx,QWORD PTR [rip+0x1f729]        # 0x14003d470
   14001dd47:	je     0x14001dd4e
   14001dd49:	call   0x140007dc0
   14001dd4e:	add    rsp,0x20
   14001dd52:	pop    rbx
   14001dd53:	ret    
   14001dd54:	mov    rax,rsp
   14001dd57:	mov    QWORD PTR [rax+0x8],rbx
   14001dd5b:	mov    QWORD PTR [rax+0x10],rbp
   14001dd5f:	mov    QWORD PTR [rax+0x18],rsi
   14001dd63:	push   rdi
   14001dd64:	push   r12
   14001dd66:	push   r13
   14001dd68:	push   r14
   14001dd6a:	push   r15
   14001dd6c:	sub    rsp,0x40
   14001dd70:	xor    ebx,ebx
   14001dd72:	mov    rsi,rcx
   14001dd75:	mov    QWORD PTR [rax-0x38],rcx
   14001dd79:	mov    QWORD PTR [rax-0x30],rbx
   14001dd7d:	cmp    QWORD PTR [rcx+0x148],rbx
   14001dd84:	jne    0x14001dda1
   14001dd86:	cmp    QWORD PTR [rcx+0x140],rbx
   14001dd8d:	jne    0x14001dda1
   14001dd8f:	mov    r15d,ebx
   14001dd92:	mov    r12d,ebx
   14001dd95:	lea    r14,[rip+0x1f674]        # 0x14003d410
   14001dd9c:	jmp    0x14001dfad
   14001dda1:	mov    ebp,0x1
   14001dda6:	mov    edx,0x98
   14001ddab:	mov    ecx,ebp
   14001ddad:	call   0x140008604
   14001ddb2:	mov    r14,rax
   14001ddb5:	test   rax,rax
   14001ddb8:	jne    0x14001ddc1
   14001ddba:	mov    eax,ebp
   14001ddbc:	jmp    0x14001dffc
   14001ddc1:	mov    rax,QWORD PTR [rsi+0xf0]
   14001ddc8:	mov    edx,0x80
   14001ddcd:	lea    edi,[rdx-0x7c]
   14001ddd0:	mov    ecx,edi
   14001ddd2:	movups xmm0,XMMWORD PTR [rax]
   14001ddd5:	movups XMMWORD PTR [r14],xmm0
   14001ddd9:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001dddd:	movups XMMWORD PTR [r14+0x10],xmm1
   14001dde2:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001dde6:	movups XMMWORD PTR [r14+0x20],xmm0
   14001ddeb:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001ddef:	movups XMMWORD PTR [r14+0x30],xmm1
   14001ddf4:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001ddf8:	movups XMMWORD PTR [r14+0x40],xmm0
   14001ddfd:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001de01:	movups XMMWORD PTR [r14+0x50],xmm1
   14001de06:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001de0a:	movups XMMWORD PTR [r14+0x60],xmm0
   14001de0f:	movups xmm0,XMMWORD PTR [rax+0x70]
   14001de13:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   14001de19:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   14001de1d:	movups XMMWORD PTR [r14+rdx*1],xmm1
   14001de22:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   14001de27:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14001de2c:	call   0x140008684
   14001de31:	mov    r12,rax
   14001de34:	test   rax,rax
   14001de37:	jne    0x14001de46
   14001de39:	mov    rcx,r14
   14001de3c:	call   0x140007dc0
   14001de41:	jmp    0x14001ddba
   14001de46:	mov    DWORD PTR [rax],ebx
   14001de48:	cmp    QWORD PTR [rsi+0x148],rbx
   14001de4f:	je     0x14001df68
   14001de55:	mov    rcx,rdi
   14001de58:	call   0x140008684
   14001de5d:	mov    r15,rax
   14001de60:	test   rax,rax
   14001de63:	je     0x14001df1f
   14001de69:	mov    DWORD PTR [rax],ebx
   14001de6b:	mov    rdi,QWORD PTR [rsi+0x148]
   14001de72:	lea    rcx,[rsp+0x30]
   14001de77:	mov    r9d,0xe
   14001de7d:	mov    edx,ebp
   14001de7f:	mov    r8,rdi
   14001de82:	mov    QWORD PTR [rsp+0x20],r14
   14001de87:	call   0x1400079f0
   14001de8c:	lea    rcx,[r14+0x8]
   14001de90:	mov    QWORD PTR [rsp+0x20],rcx
   14001de95:	lea    rcx,[rsp+0x30]
   14001de9a:	mov    r9d,0xf
   14001dea0:	mov    r8,rdi
   14001dea3:	mov    edx,ebp
   14001dea5:	mov    ebx,eax
   14001dea7:	call   0x1400079f0
   14001deac:	lea    r13,[r14+0x10]
   14001deb0:	lea    rcx,[rsp+0x30]
   14001deb5:	mov    r9d,0x10
   14001debb:	mov    r8,rdi
   14001debe:	mov    edx,ebp
   14001dec0:	or     ebx,eax
   14001dec2:	mov    QWORD PTR [rsp+0x20],r13
   14001dec7:	call   0x1400079f0
   14001decc:	mov    r9d,0xe
   14001ded2:	or     ebx,eax
   14001ded4:	lea    rax,[r14+0x58]
   14001ded8:	lea    rcx,[rsp+0x30]
   14001dedd:	lea    edx,[r9-0xc]
   14001dee1:	mov    r8,rdi
   14001dee4:	mov    QWORD PTR [rsp+0x20],rax
   14001dee9:	call   0x1400079f0
   14001deee:	mov    r9d,0xf
   14001def4:	or     ebx,eax
   14001def6:	lea    rax,[r14+0x60]
   14001defa:	lea    rcx,[rsp+0x30]
   14001deff:	lea    edx,[r9-0xd]
   14001df03:	mov    r8,rdi
   14001df06:	mov    QWORD PTR [rsp+0x20],rax
   14001df0b:	call   0x1400079f0
   14001df10:	or     eax,ebx
   14001df12:	je     0x14001df2f
   14001df14:	mov    rcx,r14
   14001df17:	call   0x14001dce8
   14001df1c:	or     ebp,0xffffffff
   14001df1f:	mov    rcx,r14
   14001df22:	call   0x140007dc0
   14001df27:	mov    rcx,r12
   14001df2a:	jmp    0x14001de3c
   14001df2f:	mov    rdx,QWORD PTR [r13+0x0]
   14001df33:	xor    ebx,ebx
   14001df35:	jmp    0x14001df48
   14001df37:	mov    cl,BYTE PTR [rdx]
   14001df39:	lea    eax,[rcx-0x30]
   14001df3c:	cmp    al,0x9
   14001df3e:	ja     0x14001df4e
   14001df40:	sub    cl,0x30
   14001df43:	mov    BYTE PTR [rdx],cl
   14001df45:	add    rdx,rbp
   14001df48:	cmp    BYTE PTR [rdx],bl
   14001df4a:	jne    0x14001df37
   14001df4c:	jmp    0x14001dfa1
   14001df4e:	cmp    cl,0x3b
   14001df51:	jne    0x14001df45
   14001df53:	mov    r8,rdx
   14001df56:	lea    rcx,[r8+0x1]
   14001df5a:	mov    al,BYTE PTR [rcx]
   14001df5c:	mov    BYTE PTR [r8],al
   14001df5f:	mov    r8,rcx
   14001df62:	test   al,al
   14001df64:	jne    0x14001df56
   14001df66:	jmp    0x14001df48
   14001df68:	mov    rax,QWORD PTR [rip+0x1f4a1]        # 0x14003d410
   14001df6f:	mov    r15,rbx
   14001df72:	mov    QWORD PTR [r14],rax
   14001df75:	mov    rax,QWORD PTR [rip+0x1f49c]        # 0x14003d418
   14001df7c:	mov    QWORD PTR [r14+0x8],rax
   14001df80:	mov    rax,QWORD PTR [rip+0x1f499]        # 0x14003d420
   14001df87:	mov    QWORD PTR [r14+0x10],rax
   14001df8b:	mov    rax,QWORD PTR [rip+0x1f4d6]        # 0x14003d468
   14001df92:	mov    QWORD PTR [r14+0x58],rax
   14001df96:	mov    rax,QWORD PTR [rip+0x1f4d3]        # 0x14003d470
   14001df9d:	mov    QWORD PTR [r14+0x60],rax
   14001dfa1:	mov    DWORD PTR [r12],ebp
   14001dfa5:	test   r15,r15
   14001dfa8:	je     0x14001dfad
   14001dfaa:	mov    DWORD PTR [r15],ebp
   14001dfad:	mov    rax,QWORD PTR [rsi+0xe0]
   14001dfb4:	test   rax,rax
   14001dfb7:	je     0x14001dfbc
   14001dfb9:	lock dec DWORD PTR [rax]
   14001dfbc:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001dfc3:	test   rcx,rcx
   14001dfc6:	je     0x14001dfe5
   14001dfc8:	lock dec DWORD PTR [rcx]
   14001dfcb:	jne    0x14001dfe5
   14001dfcd:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001dfd4:	call   0x140007dc0
   14001dfd9:	mov    rcx,QWORD PTR [rsi+0xf0]
   14001dfe0:	call   0x140007dc0
   14001dfe5:	mov    QWORD PTR [rsi+0xe0],r15
   14001dfec:	mov    QWORD PTR [rsi+0xd8],r12
   14001dff3:	mov    QWORD PTR [rsi+0xf0],r14
   14001dffa:	xor    eax,eax
   14001dffc:	lea    r11,[rsp+0x40]
   14001e001:	mov    rbx,QWORD PTR [r11+0x30]
   14001e005:	mov    rbp,QWORD PTR [r11+0x38]
   14001e009:	mov    rsi,QWORD PTR [r11+0x40]
   14001e00d:	mov    rsp,r11
   14001e010:	pop    r15
   14001e012:	pop    r14
   14001e014:	pop    r13
   14001e016:	pop    r12
   14001e018:	pop    rdi
   14001e019:	ret    
   14001e01a:	int3   
   14001e01b:	int3   
   14001e01c:	xor    r9d,r9d
   14001e01f:	mov    rdx,rcx
   14001e022:	cmp    BYTE PTR [rcx],r9b
   14001e025:	je     0x14001e03d
   14001e027:	mov    cl,BYTE PTR [rdx]
   14001e029:	lea    eax,[rcx-0x30]
   14001e02c:	cmp    al,0x9
   14001e02e:	ja     0x14001e03e
   14001e030:	sub    cl,0x30
   14001e033:	mov    BYTE PTR [rdx],cl
   14001e035:	inc    rdx
   14001e038:	cmp    BYTE PTR [rdx],r9b
   14001e03b:	jne    0x14001e027
   14001e03d:	ret    
   14001e03e:	cmp    cl,0x3b
   14001e041:	jne    0x14001e035
   14001e043:	mov    r8,rdx
   14001e046:	lea    rcx,[r8+0x1]
   14001e04a:	mov    al,BYTE PTR [rcx]
   14001e04c:	mov    BYTE PTR [r8],al
   14001e04f:	mov    r8,rcx
   14001e052:	test   al,al
   14001e054:	jne    0x14001e046
   14001e056:	jmp    0x14001e038
   14001e058:	test   rcx,rcx
   14001e05b:	je     0x14001e451
   14001e061:	push   rbx
   14001e062:	sub    rsp,0x20
   14001e066:	mov    rbx,rcx
   14001e069:	mov    rcx,QWORD PTR [rcx+0x8]
   14001e06d:	call   0x140007dc0
   14001e072:	mov    rcx,QWORD PTR [rbx+0x10]
   14001e076:	call   0x140007dc0
   14001e07b:	mov    rcx,QWORD PTR [rbx+0x18]
   14001e07f:	call   0x140007dc0
   14001e084:	mov    rcx,QWORD PTR [rbx+0x20]
   14001e088:	call   0x140007dc0
   14001e08d:	mov    rcx,QWORD PTR [rbx+0x28]
   14001e091:	call   0x140007dc0
   14001e096:	mov    rcx,QWORD PTR [rbx+0x30]
   14001e09a:	call   0x140007dc0
   14001e09f:	mov    rcx,QWORD PTR [rbx]
   14001e0a2:	call   0x140007dc0
   14001e0a7:	mov    rcx,QWORD PTR [rbx+0x40]
   14001e0ab:	call   0x140007dc0
   14001e0b0:	mov    rcx,QWORD PTR [rbx+0x48]
   14001e0b4:	call   0x140007dc0
   14001e0b9:	mov    rcx,QWORD PTR [rbx+0x50]
   14001e0bd:	call   0x140007dc0
   14001e0c2:	mov    rcx,QWORD PTR [rbx+0x58]
   14001e0c6:	call   0x140007dc0
   14001e0cb:	mov    rcx,QWORD PTR [rbx+0x60]
   14001e0cf:	call   0x140007dc0
   14001e0d4:	mov    rcx,QWORD PTR [rbx+0x68]
   14001e0d8:	call   0x140007dc0
   14001e0dd:	mov    rcx,QWORD PTR [rbx+0x38]
   14001e0e1:	call   0x140007dc0
   14001e0e6:	mov    rcx,QWORD PTR [rbx+0x70]
   14001e0ea:	call   0x140007dc0
   14001e0ef:	mov    rcx,QWORD PTR [rbx+0x78]
   14001e0f3:	call   0x140007dc0
   14001e0f8:	mov    rcx,QWORD PTR [rbx+0x80]
   14001e0ff:	call   0x140007dc0
   14001e104:	mov    rcx,QWORD PTR [rbx+0x88]
   14001e10b:	call   0x140007dc0
   14001e110:	mov    rcx,QWORD PTR [rbx+0x90]
   14001e117:	call   0x140007dc0
   14001e11c:	mov    rcx,QWORD PTR [rbx+0x98]
   14001e123:	call   0x140007dc0
   14001e128:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001e12f:	call   0x140007dc0
   14001e134:	mov    rcx,QWORD PTR [rbx+0xa8]
   14001e13b:	call   0x140007dc0
   14001e140:	mov    rcx,QWORD PTR [rbx+0xb0]
   14001e147:	call   0x140007dc0
   14001e14c:	mov    rcx,QWORD PTR [rbx+0xb8]
   14001e153:	call   0x140007dc0
   14001e158:	mov    rcx,QWORD PTR [rbx+0xc0]
   14001e15f:	call   0x140007dc0
   14001e164:	mov    rcx,QWORD PTR [rbx+0xc8]
   14001e16b:	call   0x140007dc0
   14001e170:	mov    rcx,QWORD PTR [rbx+0xd0]
   14001e177:	call   0x140007dc0
   14001e17c:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001e183:	call   0x140007dc0
   14001e188:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001e18f:	call   0x140007dc0
   14001e194:	mov    rcx,QWORD PTR [rbx+0xe8]
   14001e19b:	call   0x140007dc0
   14001e1a0:	mov    rcx,QWORD PTR [rbx+0xf0]
   14001e1a7:	call   0x140007dc0
   14001e1ac:	mov    rcx,QWORD PTR [rbx+0xf8]
   14001e1b3:	call   0x140007dc0
   14001e1b8:	mov    rcx,QWORD PTR [rbx+0x100]
   14001e1bf:	call   0x140007dc0
   14001e1c4:	mov    rcx,QWORD PTR [rbx+0x108]
   14001e1cb:	call   0x140007dc0
   14001e1d0:	mov    rcx,QWORD PTR [rbx+0x110]
   14001e1d7:	call   0x140007dc0
   14001e1dc:	mov    rcx,QWORD PTR [rbx+0x118]
   14001e1e3:	call   0x140007dc0
   14001e1e8:	mov    rcx,QWORD PTR [rbx+0x120]
   14001e1ef:	call   0x140007dc0
   14001e1f4:	mov    rcx,QWORD PTR [rbx+0x128]
   14001e1fb:	call   0x140007dc0
   14001e200:	mov    rcx,QWORD PTR [rbx+0x130]
   14001e207:	call   0x140007dc0
   14001e20c:	mov    rcx,QWORD PTR [rbx+0x138]
   14001e213:	call   0x140007dc0
   14001e218:	mov    rcx,QWORD PTR [rbx+0x140]
   14001e21f:	call   0x140007dc0
   14001e224:	mov    rcx,QWORD PTR [rbx+0x148]
   14001e22b:	call   0x140007dc0
   14001e230:	mov    rcx,QWORD PTR [rbx+0x150]
   14001e237:	call   0x140007dc0
   14001e23c:	mov    rcx,QWORD PTR [rbx+0x168]
   14001e243:	call   0x140007dc0
   14001e248:	mov    rcx,QWORD PTR [rbx+0x170]
   14001e24f:	call   0x140007dc0
   14001e254:	mov    rcx,QWORD PTR [rbx+0x178]
   14001e25b:	call   0x140007dc0
   14001e260:	mov    rcx,QWORD PTR [rbx+0x180]
   14001e267:	call   0x140007dc0
   14001e26c:	mov    rcx,QWORD PTR [rbx+0x188]
   14001e273:	call   0x140007dc0
   14001e278:	mov    rcx,QWORD PTR [rbx+0x190]
   14001e27f:	call   0x140007dc0
   14001e284:	mov    rcx,QWORD PTR [rbx+0x160]
   14001e28b:	call   0x140007dc0
   14001e290:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14001e297:	call   0x140007dc0
   14001e29c:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14001e2a3:	call   0x140007dc0
   14001e2a8:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14001e2af:	call   0x140007dc0
   14001e2b4:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14001e2bb:	call   0x140007dc0
   14001e2c0:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14001e2c7:	call   0x140007dc0
   14001e2cc:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14001e2d3:	call   0x140007dc0
   14001e2d8:	mov    rcx,QWORD PTR [rbx+0x198]
   14001e2df:	call   0x140007dc0
   14001e2e4:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14001e2eb:	call   0x140007dc0
   14001e2f0:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14001e2f7:	call   0x140007dc0
   14001e2fc:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14001e303:	call   0x140007dc0
   14001e308:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14001e30f:	call   0x140007dc0
   14001e314:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14001e31b:	call   0x140007dc0
   14001e320:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14001e327:	call   0x140007dc0
   14001e32c:	mov    rcx,QWORD PTR [rbx+0x200]
   14001e333:	call   0x140007dc0
   14001e338:	mov    rcx,QWORD PTR [rbx+0x208]
   14001e33f:	call   0x140007dc0
   14001e344:	mov    rcx,QWORD PTR [rbx+0x210]
   14001e34b:	call   0x140007dc0
   14001e350:	mov    rcx,QWORD PTR [rbx+0x218]
   14001e357:	call   0x140007dc0
   14001e35c:	mov    rcx,QWORD PTR [rbx+0x220]
   14001e363:	call   0x140007dc0
   14001e368:	mov    rcx,QWORD PTR [rbx+0x228]
   14001e36f:	call   0x140007dc0
   14001e374:	mov    rcx,QWORD PTR [rbx+0x230]
   14001e37b:	call   0x140007dc0
   14001e380:	mov    rcx,QWORD PTR [rbx+0x238]
   14001e387:	call   0x140007dc0
   14001e38c:	mov    rcx,QWORD PTR [rbx+0x240]
   14001e393:	call   0x140007dc0
   14001e398:	mov    rcx,QWORD PTR [rbx+0x248]
   14001e39f:	call   0x140007dc0
   14001e3a4:	mov    rcx,QWORD PTR [rbx+0x250]
   14001e3ab:	call   0x140007dc0
   14001e3b0:	mov    rcx,QWORD PTR [rbx+0x258]
   14001e3b7:	call   0x140007dc0
   14001e3bc:	mov    rcx,QWORD PTR [rbx+0x260]
   14001e3c3:	call   0x140007dc0
   14001e3c8:	mov    rcx,QWORD PTR [rbx+0x268]
   14001e3cf:	call   0x140007dc0
   14001e3d4:	mov    rcx,QWORD PTR [rbx+0x270]
   14001e3db:	call   0x140007dc0
   14001e3e0:	mov    rcx,QWORD PTR [rbx+0x278]
   14001e3e7:	call   0x140007dc0
   14001e3ec:	mov    rcx,QWORD PTR [rbx+0x280]
   14001e3f3:	call   0x140007dc0
   14001e3f8:	mov    rcx,QWORD PTR [rbx+0x288]
   14001e3ff:	call   0x140007dc0
   14001e404:	mov    rcx,QWORD PTR [rbx+0x290]
   14001e40b:	call   0x140007dc0
   14001e410:	mov    rcx,QWORD PTR [rbx+0x298]
   14001e417:	call   0x140007dc0
   14001e41c:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14001e423:	call   0x140007dc0
   14001e428:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14001e42f:	call   0x140007dc0
   14001e434:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14001e43b:	call   0x140007dc0
   14001e440:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14001e447:	call   0x140007dc0
   14001e44c:	add    rsp,0x20
   14001e450:	pop    rbx
   14001e451:	ret    
   14001e452:	int3   
   14001e453:	int3   
   14001e454:	mov    QWORD PTR [rsp+0x8],rbx
   14001e459:	mov    QWORD PTR [rsp+0x10],rbp
   14001e45e:	push   rdi
   14001e45f:	sub    rsp,0x20
   14001e463:	cmp    QWORD PTR [rcx+0x150],0x0
   14001e46b:	mov    rdi,rcx
   14001e46e:	lea    rbp,[rip+0x1e96b]        # 0x14003cde0
   14001e475:	je     0x14001e4c2
   14001e477:	mov    edx,0x2c0
   14001e47c:	mov    ecx,0x1
   14001e481:	call   0x140008604
   14001e486:	mov    rbx,rax
   14001e489:	test   rax,rax
   14001e48c:	jne    0x14001e495
   14001e48e:	mov    eax,0x1
   14001e493:	jmp    0x14001e4e1
   14001e495:	mov    rdx,rdi
   14001e498:	mov    rcx,rax
   14001e49b:	call   0x14001e4f4
   14001e4a0:	test   eax,eax
   14001e4a2:	je     0x14001e4b6
   14001e4a4:	mov    rcx,rbx
   14001e4a7:	call   0x14001e058
   14001e4ac:	mov    rcx,rbx
   14001e4af:	call   0x140007dc0
   14001e4b4:	jmp    0x14001e48e
   14001e4b6:	mov    DWORD PTR [rbx+0x15c],0x1
   14001e4c0:	jmp    0x14001e4c5
   14001e4c2:	mov    rbx,rbp
   14001e4c5:	mov    rax,QWORD PTR [rdi+0x120]
   14001e4cc:	cmp    rax,rbp
   14001e4cf:	je     0x14001e4d8
   14001e4d1:	lock dec DWORD PTR [rax+0x15c]
   14001e4d8:	mov    QWORD PTR [rdi+0x120],rbx
   14001e4df:	xor    eax,eax
   14001e4e1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e4e6:	mov    rbp,QWORD PTR [rsp+0x38]
   14001e4eb:	add    rsp,0x20
   14001e4ef:	pop    rdi
   14001e4f0:	ret    
   14001e4f1:	int3   
   14001e4f2:	int3   
   14001e4f3:	int3   
   14001e4f4:	mov    rax,rsp
   14001e4f7:	mov    QWORD PTR [rax+0x8],rbx
   14001e4fb:	mov    QWORD PTR [rax+0x10],rsi
   14001e4ff:	mov    QWORD PTR [rax+0x18],rdi
   14001e503:	mov    QWORD PTR [rax+0x20],r14
   14001e507:	push   rbp
   14001e508:	mov    rbp,rsp
   14001e50b:	sub    rsp,0x40
   14001e50f:	mov    rsi,QWORD PTR [rdx+0x150]
   14001e516:	mov    rbx,rdx
   14001e519:	mov    rdi,rcx
   14001e51c:	test   rcx,rcx
   14001e51f:	jne    0x14001e529
   14001e521:	or     eax,0xffffffff
   14001e524:	jmp    0x14001f053
   14001e529:	mov    rcx,rsi
   14001e52c:	call   0x14001faf0
   14001e531:	and    QWORD PTR [rbp-0x8],0x0
   14001e536:	mov    r9d,0x31
   14001e53c:	lea    r14d,[r9-0x30]
   14001e540:	mov    QWORD PTR [rdi+0x2b8],rax
   14001e547:	lea    rax,[rdi+0x8]
   14001e54b:	lea    rcx,[rbp-0x10]
   14001e54f:	mov    r8,rsi
   14001e552:	mov    edx,r14d
   14001e555:	mov    QWORD PTR [rbp-0x10],rbx
   14001e559:	mov    QWORD PTR [rsp+0x20],rax
   14001e55e:	call   0x1400079f0
   14001e563:	lea    rcx,[rdi+0x10]
   14001e567:	lea    r9d,[r14+0x31]
   14001e56b:	mov    r8,rsi
   14001e56e:	mov    QWORD PTR [rsp+0x20],rcx
   14001e573:	lea    rcx,[rbp-0x10]
   14001e577:	mov    edx,r14d
   14001e57a:	mov    ebx,eax
   14001e57c:	call   0x1400079f0
   14001e581:	lea    rcx,[rdi+0x18]
   14001e585:	mov    QWORD PTR [rsp+0x20],rcx
   14001e58a:	lea    r9d,[r14+0x32]
   14001e58e:	lea    rcx,[rbp-0x10]
   14001e592:	mov    r8,rsi
   14001e595:	mov    edx,r14d
   14001e598:	or     ebx,eax
   14001e59a:	call   0x1400079f0
   14001e59f:	lea    r9d,[r14+0x33]
   14001e5a3:	lea    rcx,[rbp-0x10]
   14001e5a7:	or     ebx,eax
   14001e5a9:	lea    rax,[rdi+0x20]
   14001e5ad:	mov    r8,rsi
   14001e5b0:	mov    edx,r14d
   14001e5b3:	mov    QWORD PTR [rsp+0x20],rax
   14001e5b8:	call   0x1400079f0
   14001e5bd:	lea    r9d,[r14+0x34]
   14001e5c1:	lea    rcx,[rbp-0x10]
   14001e5c5:	or     ebx,eax
   14001e5c7:	lea    rax,[rdi+0x28]
   14001e5cb:	mov    r8,rsi
   14001e5ce:	mov    edx,r14d
   14001e5d1:	mov    QWORD PTR [rsp+0x20],rax
   14001e5d6:	call   0x1400079f0
   14001e5db:	lea    r9d,[r14+0x35]
   14001e5df:	lea    rcx,[rbp-0x10]
   14001e5e3:	or     ebx,eax
   14001e5e5:	lea    rax,[rdi+0x30]
   14001e5e9:	mov    r8,rsi
   14001e5ec:	mov    edx,r14d
   14001e5ef:	mov    QWORD PTR [rsp+0x20],rax
   14001e5f4:	call   0x1400079f0
   14001e5f9:	lea    r9d,[r14+0x36]
   14001e5fd:	lea    rcx,[rbp-0x10]
   14001e601:	mov    r8,rsi
   14001e604:	mov    edx,r14d
   14001e607:	mov    QWORD PTR [rsp+0x20],rdi
   14001e60c:	or     ebx,eax
   14001e60e:	call   0x1400079f0
   14001e613:	lea    r9d,[r14+0x29]
   14001e617:	or     ebx,eax
   14001e619:	lea    rax,[rdi+0x40]
   14001e61d:	lea    rcx,[rbp-0x10]
   14001e621:	mov    r8,rsi
   14001e624:	mov    edx,r14d
   14001e627:	mov    QWORD PTR [rsp+0x20],rax
   14001e62c:	call   0x1400079f0
   14001e631:	lea    r9d,[r14+0x2a]
   14001e635:	lea    rcx,[rbp-0x10]
   14001e639:	or     ebx,eax
   14001e63b:	lea    rax,[rdi+0x48]
   14001e63f:	mov    r8,rsi
   14001e642:	mov    edx,r14d
   14001e645:	mov    QWORD PTR [rsp+0x20],rax
   14001e64a:	call   0x1400079f0
   14001e64f:	lea    r9d,[r14+0x2b]
   14001e653:	mov    r8,rsi
   14001e656:	or     ebx,eax
   14001e658:	lea    rax,[rdi+0x50]
   14001e65c:	mov    QWORD PTR [rsp+0x20],rax
   14001e661:	lea    rcx,[rbp-0x10]
   14001e665:	mov    edx,r14d
   14001e668:	call   0x1400079f0
   14001e66d:	lea    r9d,[r14+0x2c]
   14001e671:	lea    rcx,[rbp-0x10]
   14001e675:	or     ebx,eax
   14001e677:	lea    rax,[rdi+0x58]
   14001e67b:	mov    r8,rsi
   14001e67e:	mov    edx,r14d
   14001e681:	mov    QWORD PTR [rsp+0x20],rax
   14001e686:	call   0x1400079f0
   14001e68b:	lea    r9d,[r14+0x2d]
   14001e68f:	lea    rcx,[rbp-0x10]
   14001e693:	or     ebx,eax
   14001e695:	lea    rax,[rdi+0x60]
   14001e699:	mov    r8,rsi
   14001e69c:	mov    edx,r14d
   14001e69f:	mov    QWORD PTR [rsp+0x20],rax
   14001e6a4:	call   0x1400079f0
   14001e6a9:	lea    r9d,[r14+0x2e]
   14001e6ad:	lea    rcx,[rbp-0x10]
   14001e6b1:	or     ebx,eax
   14001e6b3:	lea    rax,[rdi+0x68]
   14001e6b7:	mov    r8,rsi
   14001e6ba:	mov    edx,r14d
   14001e6bd:	mov    QWORD PTR [rsp+0x20],rax
   14001e6c2:	call   0x1400079f0
   14001e6c7:	lea    r9d,[r14+0x2f]
   14001e6cb:	lea    rcx,[rbp-0x10]
   14001e6cf:	or     ebx,eax
   14001e6d1:	lea    rax,[rdi+0x38]
   14001e6d5:	mov    r8,rsi
   14001e6d8:	mov    edx,r14d
   14001e6db:	mov    QWORD PTR [rsp+0x20],rax
   14001e6e0:	call   0x1400079f0
   14001e6e5:	lea    r9d,[r14+0x43]
   14001e6e9:	lea    rcx,[rbp-0x10]
   14001e6ed:	or     ebx,eax
   14001e6ef:	lea    rax,[rdi+0x70]
   14001e6f3:	mov    r8,rsi
   14001e6f6:	mov    edx,r14d
   14001e6f9:	mov    QWORD PTR [rsp+0x20],rax
   14001e6fe:	call   0x1400079f0
   14001e703:	lea    r9d,[r14+0x44]
   14001e707:	lea    rcx,[rbp-0x10]
   14001e70b:	or     ebx,eax
   14001e70d:	lea    rax,[rdi+0x78]
   14001e711:	mov    r8,rsi
   14001e714:	mov    edx,r14d
   14001e717:	mov    QWORD PTR [rsp+0x20],rax
   14001e71c:	call   0x1400079f0
   14001e721:	lea    r9d,[r14+0x45]
   14001e725:	lea    rcx,[rbp-0x10]
   14001e729:	or     ebx,eax
   14001e72b:	lea    rax,[rdi+0x80]
   14001e732:	mov    r8,rsi
   14001e735:	mov    edx,r14d
   14001e738:	mov    QWORD PTR [rsp+0x20],rax
   14001e73d:	call   0x1400079f0
   14001e742:	lea    r9d,[r14+0x46]
   14001e746:	lea    rcx,[rbp-0x10]
   14001e74a:	or     ebx,eax
   14001e74c:	lea    rax,[rdi+0x88]
   14001e753:	mov    r8,rsi
   14001e756:	mov    edx,r14d
   14001e759:	mov    QWORD PTR [rsp+0x20],rax
   14001e75e:	call   0x1400079f0
   14001e763:	lea    r9d,[r14+0x47]
   14001e767:	lea    rcx,[rbp-0x10]
   14001e76b:	or     ebx,eax
   14001e76d:	lea    rax,[rdi+0x90]
   14001e774:	mov    r8,rsi
   14001e777:	mov    edx,r14d
   14001e77a:	mov    QWORD PTR [rsp+0x20],rax
   14001e77f:	call   0x1400079f0
   14001e784:	lea    r9d,[r14+0x48]
   14001e788:	mov    r8,rsi
   14001e78b:	or     ebx,eax
   14001e78d:	lea    rax,[rdi+0x98]
   14001e794:	mov    edx,r14d
   14001e797:	mov    QWORD PTR [rsp+0x20],rax
   14001e79c:	lea    rcx,[rbp-0x10]
   14001e7a0:	call   0x1400079f0
   14001e7a5:	lea    r9d,[r14+0x49]
   14001e7a9:	lea    rcx,[rbp-0x10]
   14001e7ad:	or     ebx,eax
   14001e7af:	lea    rax,[rdi+0xa0]
   14001e7b6:	mov    r8,rsi
   14001e7b9:	mov    edx,r14d
   14001e7bc:	mov    QWORD PTR [rsp+0x20],rax
   14001e7c1:	call   0x1400079f0
   14001e7c6:	lea    r9d,[r14+0x4a]
   14001e7ca:	lea    rcx,[rbp-0x10]
   14001e7ce:	or     ebx,eax
   14001e7d0:	lea    rax,[rdi+0xa8]
   14001e7d7:	mov    r8,rsi
   14001e7da:	mov    edx,r14d
   14001e7dd:	mov    QWORD PTR [rsp+0x20],rax
   14001e7e2:	call   0x1400079f0
   14001e7e7:	lea    r9d,[r14+0x4b]
   14001e7eb:	lea    rcx,[rbp-0x10]
   14001e7ef:	or     ebx,eax
   14001e7f1:	lea    rax,[rdi+0xb0]
   14001e7f8:	mov    r8,rsi
   14001e7fb:	mov    edx,r14d
   14001e7fe:	mov    QWORD PTR [rsp+0x20],rax
   14001e803:	call   0x1400079f0
   14001e808:	lea    r9d,[r14+0x4c]
   14001e80c:	lea    rcx,[rbp-0x10]
   14001e810:	or     ebx,eax
   14001e812:	lea    rax,[rdi+0xb8]
   14001e819:	mov    r8,rsi
   14001e81c:	mov    edx,r14d
   14001e81f:	mov    QWORD PTR [rsp+0x20],rax
   14001e824:	call   0x1400079f0
   14001e829:	lea    r9d,[r14+0x4d]
   14001e82d:	lea    rcx,[rbp-0x10]
   14001e831:	or     ebx,eax
   14001e833:	lea    rax,[rdi+0xc0]
   14001e83a:	mov    r8,rsi
   14001e83d:	mov    edx,r14d
   14001e840:	mov    QWORD PTR [rsp+0x20],rax
   14001e845:	call   0x1400079f0
   14001e84a:	lea    r9d,[r14+0x4e]
   14001e84e:	lea    rcx,[rbp-0x10]
   14001e852:	or     ebx,eax
   14001e854:	lea    rax,[rdi+0xc8]
   14001e85b:	mov    r8,rsi
   14001e85e:	mov    edx,r14d
   14001e861:	mov    QWORD PTR [rsp+0x20],rax
   14001e866:	call   0x1400079f0
   14001e86b:	lea    r9d,[r14+0x37]
   14001e86f:	lea    rcx,[rbp-0x10]
   14001e873:	or     ebx,eax
   14001e875:	lea    rax,[rdi+0xd0]
   14001e87c:	mov    r8,rsi
   14001e87f:	mov    edx,r14d
   14001e882:	mov    QWORD PTR [rsp+0x20],rax
   14001e887:	call   0x1400079f0
   14001e88c:	lea    r9d,[r14+0x38]
   14001e890:	lea    rcx,[rbp-0x10]
   14001e894:	or     ebx,eax
   14001e896:	lea    rax,[rdi+0xd8]
   14001e89d:	mov    r8,rsi
   14001e8a0:	mov    edx,r14d
   14001e8a3:	mov    QWORD PTR [rsp+0x20],rax
   14001e8a8:	call   0x1400079f0
   14001e8ad:	lea    r9d,[r14+0x39]
   14001e8b1:	lea    rcx,[rbp-0x10]
   14001e8b5:	or     ebx,eax
   14001e8b7:	lea    rax,[rdi+0xe0]
   14001e8be:	mov    r8,rsi
   14001e8c1:	mov    edx,r14d
   14001e8c4:	mov    QWORD PTR [rsp+0x20],rax
   14001e8c9:	call   0x1400079f0
   14001e8ce:	lea    r9d,[r14+0x3a]
   14001e8d2:	mov    r8,rsi
   14001e8d5:	or     ebx,eax
   14001e8d7:	lea    rax,[rdi+0xe8]
   14001e8de:	mov    edx,r14d
   14001e8e1:	mov    QWORD PTR [rsp+0x20],rax
   14001e8e6:	lea    rcx,[rbp-0x10]
   14001e8ea:	call   0x1400079f0
   14001e8ef:	lea    r9d,[r14+0x3b]
   14001e8f3:	lea    rcx,[rbp-0x10]
   14001e8f7:	or     ebx,eax
   14001e8f9:	lea    rax,[rdi+0xf0]
   14001e900:	mov    r8,rsi
   14001e903:	mov    edx,r14d
   14001e906:	mov    QWORD PTR [rsp+0x20],rax
   14001e90b:	call   0x1400079f0
   14001e910:	lea    r9d,[r14+0x3c]
   14001e914:	lea    rcx,[rbp-0x10]
   14001e918:	or     ebx,eax
   14001e91a:	lea    rax,[rdi+0xf8]
   14001e921:	mov    r8,rsi
   14001e924:	mov    edx,r14d
   14001e927:	mov    QWORD PTR [rsp+0x20],rax
   14001e92c:	call   0x1400079f0
   14001e931:	lea    r9d,[r14+0x3d]
   14001e935:	lea    rcx,[rbp-0x10]
   14001e939:	or     ebx,eax
   14001e93b:	lea    rax,[rdi+0x100]
   14001e942:	mov    r8,rsi
   14001e945:	mov    edx,r14d
   14001e948:	mov    QWORD PTR [rsp+0x20],rax
   14001e94d:	call   0x1400079f0
   14001e952:	lea    r9d,[r14+0x3e]
   14001e956:	lea    rcx,[rbp-0x10]
   14001e95a:	or     ebx,eax
   14001e95c:	lea    rax,[rdi+0x108]
   14001e963:	mov    r8,rsi
   14001e966:	mov    edx,r14d
   14001e969:	mov    QWORD PTR [rsp+0x20],rax
   14001e96e:	call   0x1400079f0
   14001e973:	lea    r9d,[r14+0x3f]
   14001e977:	lea    rcx,[rbp-0x10]
   14001e97b:	or     ebx,eax
   14001e97d:	lea    rax,[rdi+0x110]
   14001e984:	mov    r8,rsi
   14001e987:	mov    edx,r14d
   14001e98a:	mov    QWORD PTR [rsp+0x20],rax
   14001e98f:	call   0x1400079f0
   14001e994:	lea    r9d,[r14+0x40]
   14001e998:	lea    rcx,[rbp-0x10]
   14001e99c:	or     ebx,eax
   14001e99e:	lea    rax,[rdi+0x118]
   14001e9a5:	mov    r8,rsi
   14001e9a8:	mov    edx,r14d
   14001e9ab:	mov    QWORD PTR [rsp+0x20],rax
   14001e9b0:	call   0x1400079f0
   14001e9b5:	lea    r9d,[r14+0x41]
   14001e9b9:	lea    rcx,[rbp-0x10]
   14001e9bd:	or     ebx,eax
   14001e9bf:	lea    rax,[rdi+0x120]
   14001e9c6:	mov    r8,rsi
   14001e9c9:	mov    edx,r14d
   14001e9cc:	mov    QWORD PTR [rsp+0x20],rax
   14001e9d1:	call   0x1400079f0
   14001e9d6:	lea    r9d,[r14+0x42]
   14001e9da:	lea    rcx,[rbp-0x10]
   14001e9de:	or     ebx,eax
   14001e9e0:	lea    rax,[rdi+0x128]
   14001e9e7:	mov    r8,rsi
   14001e9ea:	mov    edx,r14d
   14001e9ed:	mov    QWORD PTR [rsp+0x20],rax
   14001e9f2:	call   0x1400079f0
   14001e9f7:	lea    r9d,[r14+0x27]
   14001e9fb:	lea    rcx,[rbp-0x10]
   14001e9ff:	or     ebx,eax
   14001ea01:	lea    rax,[rdi+0x130]
   14001ea08:	mov    r8,rsi
   14001ea0b:	mov    edx,r14d
   14001ea0e:	mov    QWORD PTR [rsp+0x20],rax
   14001ea13:	call   0x1400079f0
   14001ea18:	lea    r9d,[r14+0x28]
   14001ea1c:	lea    rcx,[rbp-0x10]
   14001ea20:	or     ebx,eax
   14001ea22:	lea    rax,[rdi+0x138]
   14001ea29:	mov    r8,rsi
   14001ea2c:	mov    edx,r14d
   14001ea2f:	mov    QWORD PTR [rsp+0x20],rax
   14001ea34:	call   0x1400079f0
   14001ea39:	or     ebx,eax
   14001ea3b:	lea    rax,[rdi+0x140]
   14001ea42:	lea    r9d,[r14+0x1e]
   14001ea46:	lea    rcx,[rbp-0x10]
   14001ea4a:	mov    r8,rsi
   14001ea4d:	mov    edx,r14d
   14001ea50:	mov    QWORD PTR [rsp+0x20],rax
   14001ea55:	call   0x1400079f0
   14001ea5a:	lea    r9d,[r14+0x1f]
   14001ea5e:	or     ebx,eax
   14001ea60:	lea    rax,[rdi+0x148]
   14001ea67:	lea    rcx,[rbp-0x10]
   14001ea6b:	mov    r8,rsi
   14001ea6e:	mov    edx,r14d
   14001ea71:	mov    QWORD PTR [rsp+0x20],rax
   14001ea76:	call   0x1400079f0
   14001ea7b:	lea    rcx,[rbp-0x10]
   14001ea7f:	mov    r9d,0x1003
   14001ea85:	or     ebx,eax
   14001ea87:	lea    rax,[rdi+0x150]
   14001ea8e:	mov    r8,rsi
   14001ea91:	mov    edx,r14d
   14001ea94:	mov    QWORD PTR [rsp+0x20],rax
   14001ea99:	call   0x1400079f0
   14001ea9e:	lea    rcx,[rbp-0x10]
   14001eaa2:	mov    r9d,0x1009
   14001eaa8:	or     ebx,eax
   14001eaaa:	lea    rax,[rdi+0x158]
   14001eab1:	mov    r8,rsi
   14001eab4:	xor    edx,edx
   14001eab6:	mov    QWORD PTR [rsp+0x20],rax
   14001eabb:	call   0x1400079f0
   14001eac0:	lea    r9d,[r14+0x30]
   14001eac4:	lea    rcx,[rbp-0x10]
   14001eac8:	lea    r14d,[r9-0x2f]
   14001eacc:	or     ebx,eax
   14001eace:	lea    rax,[rdi+0x168]
   14001ead5:	mov    edx,r14d
   14001ead8:	mov    r8,rsi
   14001eadb:	mov    QWORD PTR [rsp+0x20],rax
   14001eae0:	call   0x1400079f0
   14001eae5:	lea    r9d,[r14+0x30]
   14001eae9:	lea    rcx,[rbp-0x10]
   14001eaed:	or     ebx,eax
   14001eaef:	lea    rax,[rdi+0x170]
   14001eaf6:	mov    r8,rsi
   14001eaf9:	mov    edx,r14d
   14001eafc:	mov    QWORD PTR [rsp+0x20],rax
   14001eb01:	call   0x1400079f0
   14001eb06:	lea    r9d,[r14+0x31]
   14001eb0a:	lea    rcx,[rbp-0x10]
   14001eb0e:	or     ebx,eax
   14001eb10:	lea    rax,[rdi+0x178]
   14001eb17:	mov    r8,rsi
   14001eb1a:	mov    edx,r14d
   14001eb1d:	mov    QWORD PTR [rsp+0x20],rax
   14001eb22:	call   0x1400079f0
   14001eb27:	lea    r9d,[r14+0x32]
   14001eb2b:	lea    rcx,[rbp-0x10]
   14001eb2f:	or     ebx,eax
   14001eb31:	lea    rax,[rdi+0x180]
   14001eb38:	mov    r8,rsi
   14001eb3b:	mov    edx,r14d
   14001eb3e:	mov    QWORD PTR [rsp+0x20],rax
   14001eb43:	call   0x1400079f0
   14001eb48:	lea    r9d,[r14+0x33]
   14001eb4c:	lea    rcx,[rbp-0x10]
   14001eb50:	or     ebx,eax
   14001eb52:	lea    rax,[rdi+0x188]
   14001eb59:	mov    r8,rsi
   14001eb5c:	mov    edx,r14d
   14001eb5f:	mov    QWORD PTR [rsp+0x20],rax
   14001eb64:	call   0x1400079f0
   14001eb69:	lea    r9d,[r14+0x34]
   14001eb6d:	lea    rcx,[rbp-0x10]
   14001eb71:	or     ebx,eax
   14001eb73:	lea    rax,[rdi+0x190]
   14001eb7a:	mov    r8,rsi
   14001eb7d:	mov    edx,r14d
   14001eb80:	mov    QWORD PTR [rsp+0x20],rax
   14001eb85:	call   0x1400079f0
   14001eb8a:	or     ebx,eax
   14001eb8c:	lea    rax,[rdi+0x160]
   14001eb93:	lea    r9d,[r14+0x35]
   14001eb97:	lea    rcx,[rbp-0x10]
   14001eb9b:	mov    r8,rsi
   14001eb9e:	mov    edx,r14d
   14001eba1:	mov    QWORD PTR [rsp+0x20],rax
   14001eba6:	call   0x1400079f0
   14001ebab:	lea    r9d,[r14+0x28]
   14001ebaf:	or     ebx,eax
   14001ebb1:	lea    rax,[rdi+0x1a0]
   14001ebb8:	lea    rcx,[rbp-0x10]
   14001ebbc:	mov    r8,rsi
   14001ebbf:	mov    edx,r14d
   14001ebc2:	mov    QWORD PTR [rsp+0x20],rax
   14001ebc7:	call   0x1400079f0
   14001ebcc:	lea    r9d,[r14+0x29]
   14001ebd0:	lea    rcx,[rbp-0x10]
   14001ebd4:	or     ebx,eax
   14001ebd6:	lea    rax,[rdi+0x1a8]
   14001ebdd:	mov    r8,rsi
   14001ebe0:	mov    edx,r14d
   14001ebe3:	mov    QWORD PTR [rsp+0x20],rax
   14001ebe8:	call   0x1400079f0
   14001ebed:	lea    r9d,[r14+0x2a]
   14001ebf1:	lea    rcx,[rbp-0x10]
   14001ebf5:	or     ebx,eax
   14001ebf7:	lea    rax,[rdi+0x1b0]
   14001ebfe:	mov    r8,rsi
   14001ec01:	mov    edx,r14d
   14001ec04:	mov    QWORD PTR [rsp+0x20],rax
   14001ec09:	call   0x1400079f0
   14001ec0e:	lea    r9d,[r14+0x2b]
   14001ec12:	lea    rcx,[rbp-0x10]
   14001ec16:	or     ebx,eax
   14001ec18:	lea    rax,[rdi+0x1b8]
   14001ec1f:	mov    r8,rsi
   14001ec22:	mov    edx,r14d
   14001ec25:	mov    QWORD PTR [rsp+0x20],rax
   14001ec2a:	call   0x1400079f0
   14001ec2f:	lea    r9d,[r14+0x2c]
   14001ec33:	lea    rcx,[rbp-0x10]
   14001ec37:	or     ebx,eax
   14001ec39:	lea    rax,[rdi+0x1c0]
   14001ec40:	mov    r8,rsi
   14001ec43:	mov    edx,r14d
   14001ec46:	mov    QWORD PTR [rsp+0x20],rax
   14001ec4b:	call   0x1400079f0
   14001ec50:	lea    r9d,[r14+0x2d]
   14001ec54:	lea    rcx,[rbp-0x10]
   14001ec58:	or     ebx,eax
   14001ec5a:	lea    rax,[rdi+0x1c8]
   14001ec61:	mov    r8,rsi
   14001ec64:	mov    edx,r14d
   14001ec67:	mov    QWORD PTR [rsp+0x20],rax
   14001ec6c:	call   0x1400079f0
   14001ec71:	lea    r9d,[r14+0x2e]
   14001ec75:	lea    rcx,[rbp-0x10]
   14001ec79:	or     ebx,eax
   14001ec7b:	lea    rax,[rdi+0x198]
   14001ec82:	mov    r8,rsi
   14001ec85:	mov    edx,r14d
   14001ec88:	mov    QWORD PTR [rsp+0x20],rax
   14001ec8d:	call   0x1400079f0
   14001ec92:	lea    r9d,[r14+0x42]
   14001ec96:	lea    rcx,[rbp-0x10]
   14001ec9a:	or     ebx,eax
   14001ec9c:	lea    rax,[rdi+0x1d0]
   14001eca3:	mov    r8,rsi
   14001eca6:	mov    edx,r14d
   14001eca9:	mov    QWORD PTR [rsp+0x20],rax
   14001ecae:	call   0x1400079f0
   14001ecb3:	lea    r9d,[r14+0x43]
   14001ecb7:	lea    rcx,[rbp-0x10]
   14001ecbb:	or     ebx,eax
   14001ecbd:	lea    rax,[rdi+0x1d8]
   14001ecc4:	mov    r8,rsi
   14001ecc7:	mov    edx,r14d
   14001ecca:	mov    QWORD PTR [rsp+0x20],rax
   14001eccf:	call   0x1400079f0
   14001ecd4:	or     ebx,eax
   14001ecd6:	lea    rax,[rdi+0x1e0]
   14001ecdd:	lea    r9d,[r14+0x44]
   14001ece1:	lea    rcx,[rbp-0x10]
   14001ece5:	mov    r8,rsi
   14001ece8:	mov    edx,r14d
   14001eceb:	mov    QWORD PTR [rsp+0x20],rax
   14001ecf0:	call   0x1400079f0
   14001ecf5:	lea    r9d,[r14+0x45]
   14001ecf9:	lea    rcx,[rbp-0x10]
   14001ecfd:	or     ebx,eax
   14001ecff:	lea    rax,[rdi+0x1e8]
   14001ed06:	mov    r8,rsi
   14001ed09:	mov    edx,r14d
   14001ed0c:	mov    QWORD PTR [rsp+0x20],rax
   14001ed11:	call   0x1400079f0
   14001ed16:	lea    r9d,[r14+0x46]
   14001ed1a:	lea    rcx,[rbp-0x10]
   14001ed1e:	or     ebx,eax
   14001ed20:	lea    rax,[rdi+0x1f0]
   14001ed27:	mov    r8,rsi
   14001ed2a:	mov    edx,r14d
   14001ed2d:	mov    QWORD PTR [rsp+0x20],rax
   14001ed32:	call   0x1400079f0
   14001ed37:	lea    r9d,[r14+0x47]
   14001ed3b:	lea    rcx,[rbp-0x10]
   14001ed3f:	or     ebx,eax
   14001ed41:	lea    rax,[rdi+0x1f8]
   14001ed48:	mov    r8,rsi
   14001ed4b:	mov    edx,r14d
   14001ed4e:	mov    QWORD PTR [rsp+0x20],rax
   14001ed53:	call   0x1400079f0
   14001ed58:	lea    r9d,[r14+0x48]
   14001ed5c:	lea    rcx,[rbp-0x10]
   14001ed60:	or     ebx,eax
   14001ed62:	lea    rax,[rdi+0x200]
   14001ed69:	mov    r8,rsi
   14001ed6c:	mov    edx,r14d
   14001ed6f:	mov    QWORD PTR [rsp+0x20],rax
   14001ed74:	call   0x1400079f0
   14001ed79:	lea    r9d,[r14+0x49]
   14001ed7d:	lea    rcx,[rbp-0x10]
   14001ed81:	or     ebx,eax
   14001ed83:	lea    rax,[rdi+0x208]
   14001ed8a:	mov    r8,rsi
   14001ed8d:	mov    edx,r14d
   14001ed90:	mov    QWORD PTR [rsp+0x20],rax
   14001ed95:	call   0x1400079f0
   14001ed9a:	lea    r9d,[r14+0x4a]
   14001ed9e:	lea    rcx,[rbp-0x10]
   14001eda2:	or     ebx,eax
   14001eda4:	lea    rax,[rdi+0x210]
   14001edab:	mov    r8,rsi
   14001edae:	mov    edx,r14d
   14001edb1:	mov    QWORD PTR [rsp+0x20],rax
   14001edb6:	call   0x1400079f0
   14001edbb:	lea    r9d,[r14+0x4b]
   14001edbf:	lea    rcx,[rbp-0x10]
   14001edc3:	or     ebx,eax
   14001edc5:	lea    rax,[rdi+0x218]
   14001edcc:	mov    r8,rsi
   14001edcf:	mov    edx,r14d
   14001edd2:	mov    QWORD PTR [rsp+0x20],rax
   14001edd7:	call   0x1400079f0
   14001eddc:	lea    r9d,[r14+0x4c]
   14001ede0:	lea    rcx,[rbp-0x10]
   14001ede4:	or     ebx,eax
   14001ede6:	lea    rax,[rdi+0x220]
   14001eded:	mov    r8,rsi
   14001edf0:	mov    edx,r14d
   14001edf3:	mov    QWORD PTR [rsp+0x20],rax
   14001edf8:	call   0x1400079f0
   14001edfd:	lea    r9d,[r14+0x4d]
   14001ee01:	lea    rcx,[rbp-0x10]
   14001ee05:	or     ebx,eax
   14001ee07:	lea    rax,[rdi+0x228]
   14001ee0e:	mov    r8,rsi
   14001ee11:	mov    edx,r14d
   14001ee14:	mov    QWORD PTR [rsp+0x20],rax
   14001ee19:	call   0x1400079f0
   14001ee1e:	or     ebx,eax
   14001ee20:	lea    rax,[rdi+0x230]
   14001ee27:	lea    r9d,[r14+0x36]
   14001ee2b:	lea    rcx,[rbp-0x10]
   14001ee2f:	mov    r8,rsi
   14001ee32:	mov    edx,r14d
   14001ee35:	mov    QWORD PTR [rsp+0x20],rax
   14001ee3a:	call   0x1400079f0
   14001ee3f:	lea    r9d,[r14+0x37]
   14001ee43:	lea    rcx,[rbp-0x10]
   14001ee47:	or     ebx,eax
   14001ee49:	lea    rax,[rdi+0x238]
   14001ee50:	mov    r8,rsi
   14001ee53:	mov    edx,r14d
   14001ee56:	mov    QWORD PTR [rsp+0x20],rax
   14001ee5b:	call   0x1400079f0
   14001ee60:	lea    r9d,[r14+0x38]
   14001ee64:	lea    rcx,[rbp-0x10]
   14001ee68:	or     ebx,eax
   14001ee6a:	lea    rax,[rdi+0x240]
   14001ee71:	mov    r8,rsi
   14001ee74:	mov    edx,r14d
   14001ee77:	mov    QWORD PTR [rsp+0x20],rax
   14001ee7c:	call   0x1400079f0
   14001ee81:	lea    r9d,[r14+0x39]
   14001ee85:	lea    rcx,[rbp-0x10]
   14001ee89:	or     ebx,eax
   14001ee8b:	lea    rax,[rdi+0x248]
   14001ee92:	mov    r8,rsi
   14001ee95:	mov    edx,r14d
   14001ee98:	mov    QWORD PTR [rsp+0x20],rax
   14001ee9d:	call   0x1400079f0
   14001eea2:	lea    r9d,[r14+0x3a]
   14001eea6:	lea    rcx,[rbp-0x10]
   14001eeaa:	or     ebx,eax
   14001eeac:	lea    rax,[rdi+0x250]
   14001eeb3:	mov    r8,rsi
   14001eeb6:	mov    edx,r14d
   14001eeb9:	mov    QWORD PTR [rsp+0x20],rax
   14001eebe:	call   0x1400079f0
   14001eec3:	lea    r9d,[r14+0x3b]
   14001eec7:	lea    rcx,[rbp-0x10]
   14001eecb:	or     ebx,eax
   14001eecd:	lea    rax,[rdi+0x258]
   14001eed4:	mov    r8,rsi
   14001eed7:	mov    edx,r14d
   14001eeda:	mov    QWORD PTR [rsp+0x20],rax
   14001eedf:	call   0x1400079f0
   14001eee4:	lea    r9d,[r14+0x3c]
   14001eee8:	lea    rcx,[rbp-0x10]
   14001eeec:	or     ebx,eax
   14001eeee:	lea    rax,[rdi+0x260]
   14001eef5:	mov    r8,rsi
   14001eef8:	mov    edx,r14d
   14001eefb:	mov    QWORD PTR [rsp+0x20],rax
   14001ef00:	call   0x1400079f0
   14001ef05:	lea    r9d,[r14+0x3d]
   14001ef09:	lea    rcx,[rbp-0x10]
   14001ef0d:	or     ebx,eax
   14001ef0f:	lea    rax,[rdi+0x268]
   14001ef16:	mov    r8,rsi
   14001ef19:	mov    edx,r14d
   14001ef1c:	mov    QWORD PTR [rsp+0x20],rax
   14001ef21:	call   0x1400079f0
   14001ef26:	lea    r9d,[r14+0x3e]
   14001ef2a:	lea    rcx,[rbp-0x10]
   14001ef2e:	or     ebx,eax
   14001ef30:	lea    rax,[rdi+0x270]
   14001ef37:	mov    r8,rsi
   14001ef3a:	mov    edx,r14d
   14001ef3d:	mov    QWORD PTR [rsp+0x20],rax
   14001ef42:	call   0x1400079f0
   14001ef47:	lea    r9d,[r14+0x3f]
   14001ef4b:	lea    rcx,[rbp-0x10]
   14001ef4f:	or     ebx,eax
   14001ef51:	lea    rax,[rdi+0x278]
   14001ef58:	mov    r8,rsi
   14001ef5b:	mov    edx,r14d
   14001ef5e:	mov    QWORD PTR [rsp+0x20],rax
   14001ef63:	call   0x1400079f0
   14001ef68:	or     ebx,eax
   14001ef6a:	lea    rax,[rdi+0x280]
   14001ef71:	mov    QWORD PTR [rsp+0x20],rax
   14001ef76:	lea    r9d,[r14+0x40]
   14001ef7a:	lea    rcx,[rbp-0x10]
   14001ef7e:	mov    r8,rsi
   14001ef81:	mov    edx,r14d
   14001ef84:	call   0x1400079f0
   14001ef89:	lea    r9d,[r14+0x41]
   14001ef8d:	lea    rcx,[rbp-0x10]
   14001ef91:	or     ebx,eax
   14001ef93:	lea    rax,[rdi+0x288]
   14001ef9a:	mov    r8,rsi
   14001ef9d:	mov    edx,r14d
   14001efa0:	mov    QWORD PTR [rsp+0x20],rax
   14001efa5:	call   0x1400079f0
   14001efaa:	lea    r9d,[r14+0x26]
   14001efae:	lea    rcx,[rbp-0x10]
   14001efb2:	or     ebx,eax
   14001efb4:	lea    rax,[rdi+0x290]
   14001efbb:	mov    r8,rsi
   14001efbe:	mov    edx,r14d
   14001efc1:	mov    QWORD PTR [rsp+0x20],rax
   14001efc6:	call   0x1400079f0
   14001efcb:	lea    r9d,[r14+0x27]
   14001efcf:	lea    rcx,[rbp-0x10]
   14001efd3:	or     ebx,eax
   14001efd5:	lea    rax,[rdi+0x298]
   14001efdc:	mov    r8,rsi
   14001efdf:	mov    edx,r14d
   14001efe2:	mov    QWORD PTR [rsp+0x20],rax
   14001efe7:	call   0x1400079f0
   14001efec:	lea    r9d,[r14+0x1d]
   14001eff0:	lea    rcx,[rbp-0x10]
   14001eff4:	or     ebx,eax
   14001eff6:	lea    rax,[rdi+0x2a0]
   14001effd:	mov    r8,rsi
   14001f000:	mov    edx,r14d
   14001f003:	mov    QWORD PTR [rsp+0x20],rax
   14001f008:	call   0x1400079f0
   14001f00d:	lea    r9d,[r14+0x1e]
   14001f011:	lea    rcx,[rbp-0x10]
   14001f015:	or     ebx,eax
   14001f017:	lea    rax,[rdi+0x2a8]
   14001f01e:	mov    r8,rsi
   14001f021:	mov    edx,r14d
   14001f024:	mov    QWORD PTR [rsp+0x20],rax
   14001f029:	call   0x1400079f0
   14001f02e:	lea    rcx,[rbp-0x10]
   14001f032:	mov    r9d,0x1003
   14001f038:	or     ebx,eax
   14001f03a:	lea    rax,[rdi+0x2b0]
   14001f041:	mov    r8,rsi
   14001f044:	mov    edx,r14d
   14001f047:	mov    QWORD PTR [rsp+0x20],rax
   14001f04c:	call   0x1400079f0
   14001f051:	or     eax,ebx
   14001f053:	mov    rbx,QWORD PTR [rsp+0x50]
   14001f058:	mov    rsi,QWORD PTR [rsp+0x58]
   14001f05d:	mov    rdi,QWORD PTR [rsp+0x60]
   14001f062:	mov    r14,QWORD PTR [rsp+0x68]
   14001f067:	add    rsp,0x40
   14001f06b:	pop    rbp
   14001f06c:	ret    
   14001f06d:	int3   
   14001f06e:	int3   
   14001f06f:	int3   
   14001f070:	sub    rsp,0x28
   14001f074:	call   0x14000a3ec
   14001f079:	mov    rcx,QWORD PTR [rip+0x1e020]        # 0x14003d0a0
   14001f080:	cmp    QWORD PTR [rax+0xc0],rcx
   14001f087:	je     0x14001f09c
   14001f089:	mov    eax,DWORD PTR [rax+0xc8]
   14001f08f:	test   DWORD PTR [rip+0x1e183],eax        # 0x14003d218
   14001f095:	jne    0x14001f09c
   14001f097:	call   0x140011d10
   14001f09c:	mov    rax,QWORD PTR [rip+0x1e40d]        # 0x14003d4b0
   14001f0a3:	add    rsp,0x28
   14001f0a7:	ret    
   14001f0a8:	jmp    0x14001f0b8
   14001f0ad:	int3   
   14001f0ae:	int3   
   14001f0af:	int3   
   14001f0b0:	jmp    0x14001f0b8
   14001f0b5:	int3   
   14001f0b6:	int3   
   14001f0b7:	int3   
   14001f0b8:	mov    WORD PTR [rsp+0x8],cx
   14001f0bd:	push   rbx
   14001f0be:	sub    rsp,0x20
   14001f0c2:	mov    eax,0xffff
   14001f0c7:	movzx  ebx,dx
   14001f0ca:	cmp    cx,ax
   14001f0cd:	jne    0x14001f0d3
   14001f0cf:	xor    eax,eax
   14001f0d1:	jmp    0x14001f118
   14001f0d3:	mov    eax,0x100
   14001f0d8:	cmp    cx,ax
   14001f0db:	jae    0x14001f0ed
   14001f0dd:	mov    rax,QWORD PTR [rip+0x1e3dc]        # 0x14003d4c0
   14001f0e4:	movzx  ecx,cx
   14001f0e7:	movzx  eax,WORD PTR [rax+rcx*2]
   14001f0eb:	jmp    0x14001f113
   14001f0ed:	mov    ecx,0x1
   14001f0f2:	lea    r9,[rsp+0x40]
   14001f0f7:	lea    rdx,[rsp+0x30]
   14001f0fc:	mov    r8d,ecx
   14001f0ff:	call   QWORD PTR [rip+0xcf23]        # 0x14002c028
   14001f105:	xor    ecx,ecx
   14001f107:	test   eax,eax
   14001f109:	je     0x14001f110
   14001f10b:	movzx  ecx,WORD PTR [rsp+0x40]
   14001f110:	movzx  eax,cx
   14001f113:	movzx  ecx,bx
   14001f116:	and    eax,ecx
   14001f118:	add    rsp,0x20
   14001f11c:	pop    rbx
   14001f11d:	ret    
   14001f11e:	int3   
   14001f11f:	int3   
   14001f120:	mov    r9,r8
   14001f123:	mov    r8,rdx
   14001f126:	mov    rdx,rcx
   14001f129:	lea    rcx,[rip+0xffffffffffff34a8]        # 0x1400125d8
   14001f130:	jmp    0x14001f198
   14001f135:	int3   
   14001f136:	int3   
   14001f137:	int3   
   14001f138:	mov    r9,rdx
   14001f13b:	mov    rdx,rcx
   14001f13e:	lea    rcx,[rip+0x5bbb]        # 0x140024d00
   14001f145:	xor    r8d,r8d
   14001f148:	jmp    0x14001f198
   14001f14d:	int3   
   14001f14e:	int3   
   14001f14f:	int3   
   14001f150:	mov    r9,r8
   14001f153:	mov    r8,rdx
   14001f156:	mov    rdx,rcx
   14001f159:	lea    rcx,[rip+0x5ba0]        # 0x140024d00
   14001f160:	jmp    0x14001f198
   14001f165:	int3   
   14001f166:	int3   
   14001f167:	int3   
   14001f168:	mov    r9,r8
   14001f16b:	mov    r8,rdx
   14001f16e:	mov    rdx,rcx
   14001f171:	lea    rcx,[rip+0x5030]        # 0x1400241a8
   14001f178:	jmp    0x14001f198
   14001f17d:	int3   
   14001f17e:	int3   
   14001f17f:	int3   
   14001f180:	mov    r9,rdx
   14001f183:	mov    rdx,rcx
   14001f186:	lea    rcx,[rip+0xffffffffffff344b]        # 0x1400125d8
   14001f18d:	xor    r8d,r8d
   14001f190:	jmp    0x14001f198
   14001f195:	int3   
   14001f196:	int3   
   14001f197:	int3   
   14001f198:	mov    QWORD PTR [rsp+0x8],rbx
   14001f19d:	mov    QWORD PTR [rsp+0x18],rsi
   14001f1a2:	mov    QWORD PTR [rsp+0x20],rdi
   14001f1a7:	push   r12
   14001f1a9:	push   r14
   14001f1ab:	push   r15
   14001f1ad:	sub    rsp,0x20
   14001f1b1:	mov    r14,r9
   14001f1b4:	mov    r15,r8
   14001f1b7:	mov    rsi,rdx
   14001f1ba:	mov    r12,rcx
   14001f1bd:	call   0x140010e04
   14001f1c2:	lea    rdi,[rax+0x30]
   14001f1c6:	mov    QWORD PTR [rsp+0x48],rdi
   14001f1cb:	xor    eax,eax
   14001f1cd:	test   rsi,rsi
   14001f1d0:	setne  al
   14001f1d3:	test   eax,eax
   14001f1d5:	jne    0x14001f1ec
   14001f1d7:	call   0x140009cb4
   14001f1dc:	mov    DWORD PTR [rax],0x16
   14001f1e2:	call   0x140008d58
   14001f1e7:	or     eax,0xffffffff
   14001f1ea:	jmp    0x14001f225
   14001f1ec:	mov    rcx,rdi
   14001f1ef:	call   0x140010e0c
   14001f1f4:	nop
   14001f1f5:	mov    rcx,rdi
   14001f1f8:	call   0x1400109f0
   14001f1fd:	mov    ebx,eax
   14001f1ff:	mov    r9,r14
   14001f202:	mov    r8,r15
   14001f205:	mov    rdx,rsi
   14001f208:	mov    rcx,rdi
   14001f20b:	call   r12
   14001f20e:	mov    esi,eax
   14001f210:	mov    rdx,rdi
   14001f213:	mov    ecx,ebx
   14001f215:	call   0x1400109b8
   14001f21a:	nop
   14001f21b:	mov    rcx,rdi
   14001f21e:	call   0x140010ea8
   14001f223:	mov    eax,esi
   14001f225:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f22a:	mov    rsi,QWORD PTR [rsp+0x50]
   14001f22f:	mov    rdi,QWORD PTR [rsp+0x58]
   14001f234:	add    rsp,0x20
   14001f238:	pop    r15
   14001f23a:	pop    r14
   14001f23c:	pop    r12
   14001f23e:	ret    
   14001f23f:	int3   
   14001f240:	mov    r9,rdx
   14001f243:	mov    rdx,rcx
   14001f246:	lea    rcx,[rip+0x4f5b]        # 0x1400241a8
   14001f24d:	xor    r8d,r8d
   14001f250:	jmp    0x14001f198
   14001f255:	int3   
   14001f256:	int3   
   14001f257:	int3   
   14001f258:	mov    rax,rsp
   14001f25b:	mov    QWORD PTR [rax+0x8],rbx
   14001f25f:	mov    QWORD PTR [rax+0x10],rsi
   14001f263:	push   rdi
   14001f264:	sub    rsp,0x50
   14001f268:	mov    rdi,rcx
   14001f26b:	movzx  ebx,dx
   14001f26e:	lea    rcx,[rax-0x28]
   14001f272:	or     esi,0xffffffff
   14001f275:	mov    rdx,r8
   14001f278:	mov    DWORD PTR [rax+0x20],esi
   14001f27b:	call   0x140008fac
   14001f280:	mov    rax,QWORD PTR [rsp+0x30]
   14001f285:	movsxd r8,DWORD PTR [rax+0xd4]
   14001f28c:	lea    rax,[rsp+0x30]
   14001f291:	lea    rcx,[rsp+0x78]
   14001f296:	movzx  r9d,bx
   14001f29a:	mov    rdx,rdi
   14001f29d:	mov    QWORD PTR [rsp+0x20],rax
   14001f2a2:	call   0x14001f2d4
   14001f2a7:	test   eax,eax
   14001f2a9:	cmove  esi,DWORD PTR [rsp+0x78]
   14001f2ae:	cmp    BYTE PTR [rsp+0x48],0x0
   14001f2b3:	je     0x14001f2c1
   14001f2b5:	mov    rax,QWORD PTR [rsp+0x40]
   14001f2ba:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001f2c1:	mov    rbx,QWORD PTR [rsp+0x60]
   14001f2c6:	mov    eax,esi
   14001f2c8:	mov    rsi,QWORD PTR [rsp+0x68]
   14001f2cd:	add    rsp,0x50
   14001f2d1:	pop    rdi
   14001f2d2:	ret    
   14001f2d3:	int3   
   14001f2d4:	mov    QWORD PTR [rsp+0x8],rbx
   14001f2d9:	mov    QWORD PTR [rsp+0x18],rsi
   14001f2de:	mov    WORD PTR [rsp+0x20],r9w
   14001f2e4:	push   rdi
   14001f2e5:	sub    rsp,0x60
   14001f2e9:	mov    rdi,r8
   14001f2ec:	mov    rsi,rdx
   14001f2ef:	mov    rbx,rcx
   14001f2f2:	test   rdx,rdx
   14001f2f5:	jne    0x14001f30a
   14001f2f7:	test   r8,r8
   14001f2fa:	je     0x14001f30a
   14001f2fc:	test   rcx,rcx
   14001f2ff:	je     0x14001f303
   14001f301:	and    DWORD PTR [rcx],edx
   14001f303:	xor    eax,eax
   14001f305:	jmp    0x14001f39f
   14001f30a:	test   rcx,rcx
   14001f30d:	je     0x14001f312
   14001f30f:	or     DWORD PTR [rcx],0xffffffff
   14001f312:	cmp    r8,0x7fffffff
   14001f319:	jbe    0x14001f32e
   14001f31b:	call   0x140009cb4
   14001f320:	mov    ebx,0x16
   14001f325:	mov    DWORD PTR [rax],ebx
   14001f327:	call   0x140008d58
   14001f32c:	jmp    0x14001f39d
   14001f32e:	mov    rdx,QWORD PTR [rsp+0x90]
   14001f336:	lea    rcx,[rsp+0x40]
   14001f33b:	call   0x140008fac
   14001f340:	mov    rax,QWORD PTR [rsp+0x40]
   14001f345:	cmp    QWORD PTR [rax+0x138],0x0
   14001f34d:	jne    0x14001f3ce
   14001f34f:	movzx  eax,WORD PTR [rsp+0x88]
   14001f357:	mov    ecx,0xff
   14001f35c:	cmp    ax,cx
   14001f35f:	jbe    0x14001f3b1
   14001f361:	test   rsi,rsi
   14001f364:	je     0x14001f378
   14001f366:	test   rdi,rdi
   14001f369:	je     0x14001f378
   14001f36b:	mov    r8,rdi
   14001f36e:	xor    edx,edx
   14001f370:	mov    rcx,rsi
   14001f373:	call   0x140006f70
   14001f378:	call   0x140009cb4
   14001f37d:	mov    DWORD PTR [rax],0x2a
   14001f383:	call   0x140009cb4
   14001f388:	mov    ebx,DWORD PTR [rax]
   14001f38a:	cmp    BYTE PTR [rsp+0x58],0x0
   14001f38f:	je     0x14001f39d
   14001f391:	mov    rcx,QWORD PTR [rsp+0x50]
   14001f396:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001f39d:	mov    eax,ebx
   14001f39f:	lea    r11,[rsp+0x60]
   14001f3a4:	mov    rbx,QWORD PTR [r11+0x10]
   14001f3a8:	mov    rsi,QWORD PTR [r11+0x20]
   14001f3ac:	mov    rsp,r11
   14001f3af:	pop    rdi
   14001f3b0:	ret    
   14001f3b1:	test   rsi,rsi
   14001f3b4:	je     0x14001f3c1
   14001f3b6:	test   rdi,rdi
   14001f3b9:	je     0x14001f448
   14001f3bf:	mov    BYTE PTR [rsi],al
   14001f3c1:	test   rbx,rbx
   14001f3c4:	je     0x14001f41b
   14001f3c6:	mov    DWORD PTR [rbx],0x1
   14001f3cc:	jmp    0x14001f41b
   14001f3ce:	and    DWORD PTR [rsp+0x78],0x0
   14001f3d3:	lea    rcx,[rsp+0x78]
   14001f3d8:	lea    r8,[rsp+0x88]
   14001f3e0:	mov    QWORD PTR [rsp+0x38],rcx
   14001f3e5:	and    QWORD PTR [rsp+0x30],0x0
   14001f3eb:	mov    ecx,DWORD PTR [rax+0x4]
   14001f3ee:	mov    r9d,0x1
   14001f3f4:	xor    edx,edx
   14001f3f6:	mov    DWORD PTR [rsp+0x28],edi
   14001f3fa:	mov    QWORD PTR [rsp+0x20],rsi
   14001f3ff:	call   QWORD PTR [rip+0xcd8b]        # 0x14002c190
   14001f405:	test   eax,eax
   14001f407:	je     0x14001f422
   14001f409:	cmp    DWORD PTR [rsp+0x78],0x0
   14001f40e:	jne    0x14001f378
   14001f414:	test   rbx,rbx
   14001f417:	je     0x14001f41b
   14001f419:	mov    DWORD PTR [rbx],eax
   14001f41b:	xor    ebx,ebx
   14001f41d:	jmp    0x14001f38a
   14001f422:	call   QWORD PTR [rip+0xcd28]        # 0x14002c150
   14001f428:	cmp    eax,0x7a
   14001f42b:	jne    0x14001f378
   14001f431:	test   rsi,rsi
   14001f434:	je     0x14001f448
   14001f436:	test   rdi,rdi
   14001f439:	je     0x14001f448
   14001f43b:	mov    r8,rdi
   14001f43e:	xor    edx,edx
   14001f440:	mov    rcx,rsi
   14001f443:	call   0x140006f70
   14001f448:	call   0x140009cb4
   14001f44d:	mov    ebx,0x22
   14001f452:	mov    DWORD PTR [rax],ebx
   14001f454:	call   0x140008d58
   14001f459:	jmp    0x14001f38a
   14001f45e:	int3   
   14001f45f:	int3   
   14001f460:	mov    QWORD PTR [rsp+0x8],rbx
   14001f465:	mov    QWORD PTR [rsp+0x10],rsi
   14001f46a:	push   rdi
   14001f46b:	sub    rsp,0x30
   14001f46f:	or     esi,0xffffffff
   14001f472:	movzx  ebx,dx
   14001f475:	mov    rdi,rcx
   14001f478:	mov    DWORD PTR [rsp+0x50],esi
   14001f47c:	call   0x1400260e0
   14001f481:	and    QWORD PTR [rsp+0x20],0x0
   14001f487:	lea    rcx,[rsp+0x50]
   14001f48c:	movsxd r8,eax
   14001f48f:	movzx  r9d,bx
   14001f493:	mov    rdx,rdi
   14001f496:	call   0x14001f2d4
   14001f49b:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f4a0:	test   eax,eax
   14001f4a2:	cmove  esi,DWORD PTR [rsp+0x50]
   14001f4a7:	mov    eax,esi
   14001f4a9:	mov    rsi,QWORD PTR [rsp+0x48]
   14001f4ae:	add    rsp,0x30
   14001f4b2:	pop    rdi
   14001f4b3:	ret    
   14001f4b4:	sub    rsp,0x38
   14001f4b8:	and    QWORD PTR [rsp+0x20],0x0
   14001f4be:	call   0x14001f2d4
   14001f4c3:	add    rsp,0x38
   14001f4c7:	ret    
   14001f4c8:	mov    QWORD PTR [rsp+0x8],rbx
   14001f4cd:	mov    QWORD PTR [rsp+0x18],rbp
   14001f4d2:	push   rsi
   14001f4d3:	push   rdi
   14001f4d4:	push   r14
   14001f4d6:	sub    rsp,0x20
   14001f4da:	mov    r14d,ecx
   14001f4dd:	mov    rcx,rdx
   14001f4e0:	mov    rbx,rdx
   14001f4e3:	call   0x140010f18
   14001f4e8:	mov    edx,DWORD PTR [rbx+0x18]
   14001f4eb:	movsxd rsi,eax
   14001f4ee:	test   dl,0x82
   14001f4f1:	jne    0x14001f50c
   14001f4f3:	call   0x140009cb4
   14001f4f8:	mov    DWORD PTR [rax],0x9
   14001f4fe:	or     DWORD PTR [rbx+0x18],0x20
   14001f502:	mov    eax,0xffff
   14001f507:	jmp    0x14001f642
   14001f50c:	test   dl,0x40
   14001f50f:	je     0x14001f51e
   14001f511:	call   0x140009cb4
   14001f516:	mov    DWORD PTR [rax],0x22
   14001f51c:	jmp    0x14001f4fe
   14001f51e:	xor    edi,edi
   14001f520:	test   dl,0x1
   14001f523:	je     0x14001f53e
   14001f525:	mov    DWORD PTR [rbx+0x8],edi
   14001f528:	test   dl,0x10
   14001f52b:	je     0x14001f5bb
   14001f531:	mov    rax,QWORD PTR [rbx+0x10]
   14001f535:	and    edx,0xfffffffe
   14001f538:	mov    QWORD PTR [rbx],rax
   14001f53b:	mov    DWORD PTR [rbx+0x18],edx
   14001f53e:	mov    eax,DWORD PTR [rbx+0x18]
   14001f541:	mov    DWORD PTR [rbx+0x8],edi
   14001f544:	and    eax,0xffffffef
   14001f547:	or     eax,0x2
   14001f54a:	mov    DWORD PTR [rbx+0x18],eax
   14001f54d:	test   eax,0x10c
   14001f552:	jne    0x14001f583
   14001f554:	call   0x140010e04
   14001f559:	add    rax,0x30
   14001f55d:	cmp    rbx,rax
   14001f560:	je     0x14001f570
   14001f562:	call   0x140010e04
   14001f567:	add    rax,0x60
   14001f56b:	cmp    rbx,rax
   14001f56e:	jne    0x14001f57b
   14001f570:	mov    ecx,esi
   14001f572:	call   0x140010f40
   14001f577:	test   eax,eax
   14001f579:	jne    0x14001f583
   14001f57b:	mov    rcx,rbx
   14001f57e:	call   0x1400119f4
   14001f583:	test   DWORD PTR [rbx+0x18],0x108
   14001f58a:	je     0x14001f61a
   14001f590:	mov    ebp,DWORD PTR [rbx]
   14001f592:	mov    rdx,QWORD PTR [rbx+0x10]
   14001f596:	sub    ebp,DWORD PTR [rbx+0x10]
   14001f599:	lea    rax,[rdx+0x2]
   14001f59d:	mov    QWORD PTR [rbx],rax
   14001f5a0:	mov    eax,DWORD PTR [rbx+0x24]
   14001f5a3:	sub    eax,0x2
   14001f5a6:	mov    DWORD PTR [rbx+0x8],eax
   14001f5a9:	test   ebp,ebp
   14001f5ab:	jle    0x14001f5c6
   14001f5ad:	mov    r8d,ebp
   14001f5b0:	mov    ecx,esi
   14001f5b2:	call   0x140010fa0
   14001f5b7:	mov    edi,eax
   14001f5b9:	jmp    0x14001f610
   14001f5bb:	or     edx,0x20
   14001f5be:	mov    DWORD PTR [rbx+0x18],edx
   14001f5c1:	jmp    0x14001f502
   14001f5c6:	lea    eax,[rsi+0x2]
   14001f5c9:	cmp    eax,0x1
   14001f5cc:	jbe    0x14001f5ec
   14001f5ce:	mov    rcx,rsi
   14001f5d1:	mov    rax,rsi
   14001f5d4:	lea    r8,[rip+0x1e735]        # 0x14003dd10
   14001f5db:	and    ecx,0x1f
   14001f5de:	sar    rax,0x5
   14001f5e2:	imul   rdx,rcx,0x58
   14001f5e6:	add    rdx,QWORD PTR [r8+rax*8]
   14001f5ea:	jmp    0x14001f5f3
   14001f5ec:	lea    rdx,[rip+0x1cc3d]        # 0x14003c230
   14001f5f3:	test   BYTE PTR [rdx+0x8],0x20
   14001f5f7:	je     0x14001f610
   14001f5f9:	xor    edx,edx
   14001f5fb:	mov    ecx,esi
   14001f5fd:	lea    r8d,[rdx+0x2]
   14001f601:	call   0x140011878
   14001f606:	cmp    rax,0xffffffffffffffff
   14001f60a:	je     0x14001f4fe
   14001f610:	mov    rax,QWORD PTR [rbx+0x10]
   14001f614:	mov    WORD PTR [rax],r14w
   14001f618:	jmp    0x14001f636
   14001f61a:	mov    ebp,0x2
   14001f61f:	lea    rdx,[rsp+0x48]
   14001f624:	mov    ecx,esi
   14001f626:	mov    r8d,ebp
   14001f629:	mov    WORD PTR [rsp+0x48],r14w
   14001f62f:	call   0x140010fa0
   14001f634:	mov    edi,eax
   14001f636:	cmp    edi,ebp
   14001f638:	jne    0x14001f4fe
   14001f63e:	movzx  eax,r14w
   14001f642:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f647:	mov    rbp,QWORD PTR [rsp+0x50]
   14001f64c:	add    rsp,0x20
   14001f650:	pop    r14
   14001f652:	pop    rdi
   14001f653:	pop    rsi
   14001f654:	ret    
   14001f655:	int3   
   14001f656:	int3   
   14001f657:	int3   
   14001f658:	sub    rsp,0x28
   14001f65c:	call   0x14000a3ec
   14001f661:	mov    rcx,QWORD PTR [rax+0xc0]
   14001f668:	cmp    rcx,QWORD PTR [rip+0x1da31]        # 0x14003d0a0
   14001f66f:	je     0x14001f687
   14001f671:	mov    eax,DWORD PTR [rax+0xc8]
   14001f677:	test   DWORD PTR [rip+0x1db9b],eax        # 0x14003d218
   14001f67d:	jne    0x14001f687
   14001f67f:	call   0x140011d10
   14001f684:	mov    rcx,rax
   14001f687:	mov    rax,QWORD PTR [rcx+0x108]
   14001f68e:	add    rsp,0x28
   14001f692:	ret    
   14001f693:	int3   
   14001f694:	mov    rax,QWORD PTR [rip+0x1de25]        # 0x14003d4c0
   14001f69b:	ret    
   14001f69c:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f6a2:	mov    rcx,QWORD PTR [rsp+0x8]
   14001f6a7:	mov    eax,0x7ff
   14001f6ac:	shr    rcx,0x30
   14001f6b0:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001f6b6:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001f6bc:	shr    cx,0x4
   14001f6c0:	and    cx,ax
   14001f6c3:	mov    rax,QWORD PTR [rsp+0x20]
   14001f6c8:	add    cx,dx
   14001f6cb:	shr    rax,0x30
   14001f6cf:	mov    edx,0x800f
   14001f6d4:	and    ax,dx
   14001f6d7:	shl    cx,0x4
   14001f6db:	or     cx,ax
   14001f6de:	mov    WORD PTR [rsp+0x1e],cx
   14001f6e3:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001f6e9:	ret    
   14001f6ea:	int3   
   14001f6eb:	int3   
   14001f6ec:	movaps xmm1,xmm0
   14001f6ef:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f6f5:	xorps  xmm0,xmm0
   14001f6f8:	mov    r10,rdx
   14001f6fb:	ucomisd xmm1,xmm0
   14001f6ff:	jp     0x14001f70a
   14001f701:	jne    0x14001f70a
   14001f703:	xor    ecx,ecx
   14001f705:	jmp    0x14001f81c
   14001f70a:	mov    rax,QWORD PTR [rsp+0x8]
   14001f70f:	mov    ecx,0x7ff0
   14001f714:	mov    r8,rax
   14001f717:	shr    r8,0x30
   14001f71b:	test   cx,r8w
   14001f71f:	jne    0x14001f7d2
   14001f725:	mov    edx,DWORD PTR [rsp+0x8]
   14001f729:	shr    rax,0x20
   14001f72d:	test   eax,0xfffff
   14001f732:	jne    0x14001f73c
   14001f734:	test   edx,edx
   14001f736:	je     0x14001f7d2
   14001f73c:	xor    r9d,r9d
   14001f73f:	comisd xmm0,xmm1
   14001f743:	mov    ecx,0xfffffc03
   14001f748:	seta   r9b
   14001f74c:	test   r8b,0x10
   14001f750:	jne    0x14001f776
   14001f752:	mov    eax,DWORD PTR [rsp+0xc]
   14001f756:	add    eax,eax
   14001f758:	mov    DWORD PTR [rsp+0xc],eax
   14001f75c:	test   edx,edx
   14001f75e:	jns    0x14001f767
   14001f760:	or     eax,0x1
   14001f763:	mov    DWORD PTR [rsp+0xc],eax
   14001f767:	add    edx,edx
   14001f769:	dec    ecx
   14001f76b:	test   BYTE PTR [rsp+0xe],0x10
   14001f770:	je     0x14001f756
   14001f772:	mov    DWORD PTR [rsp+0x8],edx
   14001f776:	movzx  eax,WORD PTR [rsp+0xe]
   14001f77b:	mov    edx,0xffef
   14001f780:	and    ax,dx
   14001f783:	mov    WORD PTR [rsp+0xe],ax
   14001f788:	test   r9d,r9d
   14001f78b:	je     0x14001f79a
   14001f78d:	mov    edx,0x8000
   14001f792:	or     ax,dx
   14001f795:	mov    WORD PTR [rsp+0xe],ax
   14001f79a:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14001f7a0:	mov    edx,0xbfef
   14001f7a5:	movsd  QWORD PTR [rsp+0x10],xmm0
   14001f7ab:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f7b1:	mov    rax,QWORD PTR [rsp+0x10]
   14001f7b6:	shr    rax,0x30
   14001f7ba:	and    ax,dx
   14001f7bd:	mov    edx,0x3fe0
   14001f7c2:	or     ax,dx
   14001f7c5:	mov    WORD PTR [rsp+0xe],ax
   14001f7ca:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14001f7d0:	jmp    0x14001f81c
   14001f7d2:	mov    edx,0xbfef
   14001f7d7:	movsd  QWORD PTR [rsp+0x10],xmm1
   14001f7dd:	mov    ecx,0x7ff
   14001f7e2:	movsd  QWORD PTR [rsp+0x18],xmm1
   14001f7e8:	mov    rax,QWORD PTR [rsp+0x18]
   14001f7ed:	shr    rax,0x30
   14001f7f1:	and    ax,dx
   14001f7f4:	mov    edx,0x3fe0
   14001f7f9:	or     ax,dx
   14001f7fc:	mov    WORD PTR [rsp+0x16],ax
   14001f801:	movzx  eax,WORD PTR [rsp+0xe]
   14001f806:	shr    ax,0x4
   14001f80a:	movsd  xmm0,QWORD PTR [rsp+0x10]
   14001f810:	and    ax,cx
   14001f813:	movsx  ecx,ax
   14001f816:	sub    ecx,0x3fe
   14001f81c:	mov    DWORD PTR [r10],ecx
   14001f81f:	ret    
   14001f820:	mov    ecx,0x7ff
   14001f825:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f82b:	mov    rax,QWORD PTR [rsp+0x8]
   14001f830:	shr    rax,0x30
   14001f834:	shr    ax,0x4
   14001f838:	and    ax,cx
   14001f83b:	mov    ecx,0x3fe
   14001f840:	sub    ax,cx
   14001f843:	cwde   
   14001f844:	ret    
   14001f845:	int3   
   14001f846:	int3   
   14001f847:	int3   
   14001f848:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f84e:	mov    rax,QWORD PTR [rsp+0x8]
   14001f853:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001f859:	shr    rax,0x30
   14001f85d:	mov    ecx,0x800f
   14001f862:	shl    dx,0x4
   14001f866:	and    ax,cx
   14001f869:	or     ax,dx
   14001f86c:	mov    WORD PTR [rsp+0x1e],ax
   14001f871:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001f877:	ret    
   14001f878:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f87e:	mov    rax,QWORD PTR [rsp+0x8]
   14001f883:	mov    ecx,0x800f
   14001f888:	shr    rax,0x30
   14001f88c:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001f892:	and    ax,cx
   14001f895:	mov    ecx,0x3fe
   14001f89a:	add    dx,cx
   14001f89d:	shl    dx,0x4
   14001f8a1:	or     ax,dx
   14001f8a4:	mov    WORD PTR [rsp+0x1e],ax
   14001f8a9:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001f8af:	ret    
   14001f8b0:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f8b6:	mov    rax,QWORD PTR [rsp+0x8]
   14001f8bb:	mov    rcx,rax
   14001f8be:	shr    rcx,0x20
   14001f8c2:	cmp    ecx,0x7ff00000
   14001f8c8:	jne    0x14001f8d4
   14001f8ca:	test   eax,eax
   14001f8cc:	jne    0x14001f8d4
   14001f8ce:	mov    eax,0x1
   14001f8d3:	ret    
   14001f8d4:	cmp    ecx,0xfff00000
   14001f8da:	jne    0x14001f8e6
   14001f8dc:	test   eax,eax
   14001f8de:	jne    0x14001f8e6
   14001f8e0:	mov    eax,0x2
   14001f8e5:	ret    
   14001f8e6:	mov    r8d,0x7ff8
   14001f8ec:	mov    rdx,rax
   14001f8ef:	shr    rdx,0x30
   14001f8f3:	and    dx,r8w
   14001f8f7:	cmp    dx,r8w
   14001f8fb:	jne    0x14001f903
   14001f8fd:	mov    eax,0x3
   14001f902:	ret    
   14001f903:	mov    r8d,0x7ff0
   14001f909:	cmp    dx,r8w
   14001f90d:	jne    0x14001f921
   14001f90f:	test   ecx,0x7ffff
   14001f915:	jne    0x14001f91b
   14001f917:	test   eax,eax
   14001f919:	je     0x14001f921
   14001f91b:	mov    eax,0x4
   14001f920:	ret    
   14001f921:	xor    eax,eax
   14001f923:	ret    
   14001f924:	xor    edx,edx
   14001f926:	lea    r8d,[rdx+0xa]
   14001f92a:	jmp    0x1400267c4
   14001f92f:	int3   
   14001f930:	mov    r9,rdx
   14001f933:	xor    edx,edx
   14001f935:	lea    r8d,[rdx+0xa]
   14001f939:	jmp    0x1400267f4
   14001f93e:	int3   
   14001f93f:	int3   
   14001f940:	mov    r9,rdx
   14001f943:	xor    edx,edx
   14001f945:	lea    r8d,[rdx+0xa]
   14001f949:	jmp    0x140026b9c
   14001f94e:	int3   
   14001f94f:	int3   
   14001f950:	mov    r9,rdx
   14001f953:	xor    edx,edx
   14001f955:	lea    r8d,[rdx+0xa]
   14001f959:	jmp    0x140026b9c
   14001f95e:	int3   
   14001f95f:	int3   
   14001f960:	mov    r9,rdx
   14001f963:	xor    edx,edx
   14001f965:	lea    r8d,[rdx+0xa]
   14001f969:	jmp    0x1400267f4
   14001f96e:	int3   
   14001f96f:	int3   
   14001f970:	xor    edx,edx
   14001f972:	lea    r8d,[rdx+0xa]
   14001f976:	jmp    0x140026be8
   14001f97b:	int3   
   14001f97c:	xor    edx,edx
   14001f97e:	lea    r8d,[rdx+0xa]
   14001f982:	jmp    0x140026be8
   14001f987:	int3   
   14001f988:	xor    edx,edx
   14001f98a:	lea    r8d,[rdx+0xa]
   14001f98e:	jmp    0x1400267c4
   14001f993:	int3   
   14001f994:	cmp    DWORD PTR [rip+0x1f5ed],0x0        # 0x14003ef88
   14001f99b:	jne    0x14001f9ae
   14001f99d:	mov    rax,QWORD PTR [rip+0x1d814]        # 0x14003d1b8
   14001f9a4:	movsxd rcx,ecx
   14001f9a7:	movzx  eax,WORD PTR [rax+rcx*2]
   14001f9ab:	and    eax,edx
   14001f9ad:	ret    
   14001f9ae:	xor    r8d,r8d
   14001f9b1:	jmp    0x14001f9b8
   14001f9b6:	int3   
   14001f9b7:	int3   
   14001f9b8:	mov    QWORD PTR [rsp+0x10],rsi
   14001f9bd:	push   rbp
   14001f9be:	push   rdi
   14001f9bf:	push   r14
   14001f9c1:	mov    rbp,rsp
   14001f9c4:	sub    rsp,0x60
   14001f9c8:	movsxd rdi,ecx
   14001f9cb:	mov    r14d,edx
   14001f9ce:	lea    rcx,[rbp-0x20]
   14001f9d2:	mov    rdx,r8
   14001f9d5:	call   0x140008fac
   14001f9da:	lea    eax,[rdi+0x1]
   14001f9dd:	cmp    eax,0x100
   14001f9e2:	ja     0x14001f9f5
   14001f9e4:	mov    rax,QWORD PTR [rbp-0x20]
   14001f9e8:	mov    rcx,QWORD PTR [rax+0x108]
   14001f9ef:	movzx  eax,WORD PTR [rcx+rdi*2]
   14001f9f3:	jmp    0x14001fa6e
   14001f9f5:	mov    esi,edi
   14001f9f7:	lea    rdx,[rbp-0x20]
   14001f9fb:	sar    esi,0x8
   14001f9fe:	movzx  ecx,sil
   14001fa02:	call   0x140011e44
   14001fa07:	mov    edx,0x1
   14001fa0c:	test   eax,eax
   14001fa0e:	je     0x14001fa22
   14001fa10:	mov    BYTE PTR [rbp+0x38],sil
   14001fa14:	mov    BYTE PTR [rbp+0x39],dil
   14001fa18:	mov    BYTE PTR [rbp+0x3a],0x0
   14001fa1c:	lea    r9d,[rdx+0x1]
   14001fa20:	jmp    0x14001fa2d
   14001fa22:	mov    BYTE PTR [rbp+0x38],dil
   14001fa26:	mov    BYTE PTR [rbp+0x39],0x0
   14001fa2a:	mov    r9d,edx
   14001fa2d:	mov    rax,QWORD PTR [rbp-0x20]
   14001fa31:	mov    DWORD PTR [rsp+0x30],edx
   14001fa35:	lea    r8,[rbp+0x38]
   14001fa39:	mov    ecx,DWORD PTR [rax+0x4]
   14001fa3c:	lea    rax,[rbp+0x20]
   14001fa40:	mov    DWORD PTR [rsp+0x28],ecx
   14001fa44:	lea    rcx,[rbp-0x20]
   14001fa48:	mov    QWORD PTR [rsp+0x20],rax
   14001fa4d:	call   0x14001cd64
   14001fa52:	test   eax,eax
   14001fa54:	jne    0x14001fa6a
   14001fa56:	cmp    BYTE PTR [rbp-0x8],al
   14001fa59:	je     0x14001fa66
   14001fa5b:	mov    rax,QWORD PTR [rbp-0x10]
   14001fa5f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001fa66:	xor    eax,eax
   14001fa68:	jmp    0x14001fa82
   14001fa6a:	movzx  eax,WORD PTR [rbp+0x20]
   14001fa6e:	and    eax,r14d
   14001fa71:	cmp    BYTE PTR [rbp-0x8],0x0
   14001fa75:	je     0x14001fa82
   14001fa77:	mov    rcx,QWORD PTR [rbp-0x10]
   14001fa7b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001fa82:	mov    rsi,QWORD PTR [rsp+0x88]
   14001fa8a:	add    rsp,0x60
   14001fa8e:	pop    r14
   14001fa90:	pop    rdi
   14001fa91:	pop    rbp
   14001fa92:	ret    
   14001fa93:	int3   
   14001fa94:	xor    eax,eax
   14001fa96:	ret    
   14001fa97:	int3   
   14001fa98:	rex push rdi
   14001fa9a:	sub    rsp,0x20
   14001fa9e:	lea    rdi,[rip+0x1d60b]        # 0x14003d0b0
   14001faa5:	cmp    QWORD PTR [rip+0x1d5f4],rdi        # 0x14003d0a0
   14001faac:	je     0x14001fad9
   14001faae:	mov    ecx,0xc
   14001fab3:	call   0x14000fc2c
   14001fab8:	nop
   14001fab9:	mov    rdx,rdi
   14001fabc:	lea    rcx,[rip+0x1d5dd]        # 0x14003d0a0
   14001fac3:	call   0x140011d88
   14001fac8:	mov    QWORD PTR [rip+0x1d5d1],rax        # 0x14003d0a0
   14001facf:	mov    ecx,0xc
   14001fad4:	call   0x14000fe48
   14001fad9:	add    rsp,0x20
   14001fadd:	pop    rdi
   14001fade:	ret    
   14001fadf:	int3   
   14001fae0:	mov    eax,DWORD PTR [rip+0x1f4aa]        # 0x14003ef90
   14001fae6:	ret    
   14001fae7:	int3   
   14001fae8:	lea    rax,[rip+0x1f49d]        # 0x14003ef8c
   14001faef:	ret    
   14001faf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001faf5:	mov    QWORD PTR [rsp+0x10],rsi
   14001fafa:	push   rdi
   14001fafb:	sub    rsp,0x30
   14001faff:	mov    rdi,rcx
   14001fb02:	test   rcx,rcx
   14001fb05:	jne    0x14001fb19
   14001fb07:	xor    eax,eax
   14001fb09:	mov    rbx,QWORD PTR [rsp+0x40]
   14001fb0e:	mov    rsi,QWORD PTR [rsp+0x48]
   14001fb13:	add    rsp,0x30
   14001fb17:	pop    rdi
   14001fb18:	ret    
   14001fb19:	mov    edx,0x55
   14001fb1e:	call   0x14001c82c
   14001fb23:	mov    rsi,rax
   14001fb26:	cmp    rax,0x55
   14001fb2a:	jae    0x14001fb07
   14001fb2c:	lea    rcx,[rax*2+0x2]
   14001fb34:	call   0x140008684
   14001fb39:	mov    rbx,rax
   14001fb3c:	test   rax,rax
   14001fb3f:	je     0x14001fb07
   14001fb41:	lea    rdx,[rsi+0x1]
   14001fb45:	mov    r8,rdi
   14001fb48:	mov    rcx,rax
   14001fb4b:	mov    r9,rdx
   14001fb4e:	call   0x14001c4c8
   14001fb53:	test   eax,eax
   14001fb55:	jne    0x14001fb5c
   14001fb57:	mov    rax,rbx
   14001fb5a:	jmp    0x14001fb09
   14001fb5c:	and    QWORD PTR [rsp+0x20],0x0
   14001fb62:	xor    r9d,r9d
   14001fb65:	xor    r8d,r8d
   14001fb68:	xor    edx,edx
   14001fb6a:	xor    ecx,ecx
   14001fb6c:	call   0x140008da8
   14001fb71:	int3   
   14001fb72:	int3   
   14001fb73:	int3   
   14001fb74:	jmp    0x14001ff10
   14001fb79:	int3   
   14001fb7a:	int3   
   14001fb7b:	int3   
   14001fb7c:	jmp    0x14002035c
   14001fb81:	int3   
   14001fb82:	int3   
   14001fb83:	int3   
   14001fb84:	jmp    0x1400203f8
   14001fb89:	int3   
   14001fb8a:	int3   
   14001fb8b:	int3   
   14001fb8c:	mov    QWORD PTR [rsp+0x8],rbx
   14001fb91:	mov    QWORD PTR [rsp+0x10],rbp
   14001fb96:	mov    QWORD PTR [rsp+0x18],rsi
   14001fb9b:	push   rdi
   14001fb9c:	sub    rsp,0x30
   14001fba0:	mov    rbx,r8
   14001fba3:	mov    rdi,rdx
   14001fba6:	mov    rsi,rcx
   14001fba9:	call   0x14001c440
   14001fbae:	xor    ebp,ebp
   14001fbb0:	test   eax,eax
   14001fbb2:	jne    0x14001fc19
   14001fbb4:	lea    rax,[rbx+0x80]
   14001fbbb:	cmp    WORD PTR [rax],bp
   14001fbbe:	je     0x14001fbdb
   14001fbc0:	lea    r9,[rip+0x14fb9]        # 0x140034b80
   14001fbc7:	lea    r8d,[rbp+0x2]
   14001fbcb:	mov    rdx,rdi
   14001fbce:	mov    rcx,rsi
   14001fbd1:	mov    QWORD PTR [rsp+0x20],rax
   14001fbd6:	call   0x140020594
   14001fbdb:	lea    rax,[rbx+0x100]
   14001fbe2:	cmp    WORD PTR [rax],bp
   14001fbe5:	je     0x14001fc04
   14001fbe7:	lea    r9,[rip+0x14f96]        # 0x140034b84
   14001fbee:	mov    r8d,0x2
   14001fbf4:	mov    rdx,rdi
   14001fbf7:	mov    rcx,rsi
   14001fbfa:	mov    QWORD PTR [rsp+0x20],rax
   14001fbff:	call   0x140020594
   14001fc04:	mov    rbx,QWORD PTR [rsp+0x40]
   14001fc09:	mov    rbp,QWORD PTR [rsp+0x48]
   14001fc0e:	mov    rsi,QWORD PTR [rsp+0x50]
   14001fc13:	add    rsp,0x30
   14001fc17:	pop    rdi
   14001fc18:	ret    
   14001fc19:	xor    r9d,r9d
   14001fc1c:	xor    r8d,r8d
   14001fc1f:	xor    edx,edx
   14001fc21:	xor    ecx,ecx
   14001fc23:	mov    QWORD PTR [rsp+0x20],rbp
   14001fc28:	call   0x140008da8
   14001fc2d:	int3   
   14001fc2e:	int3   
   14001fc2f:	int3   
   14001fc30:	mov    QWORD PTR [rsp+0x8],rbx
   14001fc35:	mov    QWORD PTR [rsp+0x10],rbp
   14001fc3a:	mov    QWORD PTR [rsp+0x18],rsi
   14001fc3f:	push   rdi
   14001fc40:	push   r14
   14001fc42:	push   r15
   14001fc44:	sub    rsp,0x30
   14001fc48:	mov    rbx,rdx
   14001fc4b:	mov    r8d,0x1ca
   14001fc51:	xor    edx,edx
   14001fc53:	mov    rsi,rcx
   14001fc56:	call   0x140006f70
   14001fc5b:	xor    r15d,r15d
   14001fc5e:	cmp    WORD PTR [rbx],r15w
   14001fc62:	jne    0x14001fc6b
   14001fc64:	xor    eax,eax
   14001fc66:	jmp    0x14001fd78
   14001fc6b:	cmp    WORD PTR [rbx],0x2e
   14001fc6f:	jne    0x14001fca2
   14001fc71:	lea    r8,[rbx+0x2]
   14001fc75:	cmp    WORD PTR [r8],r15w
   14001fc79:	je     0x14001fca2
   14001fc7b:	mov    edx,0x10
   14001fc80:	lea    rcx,[rsi+0x100]
   14001fc87:	lea    r9d,[rdx-0x1]
   14001fc8b:	call   0x14001c4c8
   14001fc90:	test   eax,eax
   14001fc92:	jne    0x14001fd91
   14001fc98:	mov    WORD PTR [rsi+0x11e],r15w
   14001fca0:	jmp    0x14001fc64
   14001fca2:	mov    ebp,r15d
   14001fca5:	lea    rdx,[rip+0x14ecc]        # 0x140034b78
   14001fcac:	mov    rcx,rbx
   14001fcaf:	call   0x140026c8c
   14001fcb4:	test   rax,rax
   14001fcb7:	je     0x14001fd75
   14001fcbd:	lea    r14,[rbx+rax*2]
   14001fcc1:	movzx  edi,WORD PTR [r14]
   14001fcc5:	test   ebp,ebp
   14001fcc7:	jne    0x14001fcf7
   14001fcc9:	cmp    rax,0x40
   14001fccd:	jae    0x14001fd75
   14001fcd3:	cmp    di,0x2e
   14001fcd7:	je     0x14001fd75
   14001fcdd:	lea    edx,[rbp+0x40]
   14001fce0:	mov    r9,rax
   14001fce3:	mov    r8,rbx
   14001fce6:	mov    rcx,rsi
   14001fce9:	call   0x14001c4c8
   14001fcee:	test   eax,eax
   14001fcf0:	je     0x14001fd57
   14001fcf2:	jmp    0x14001fda6
   14001fcf7:	cmp    ebp,0x1
   14001fcfa:	jne    0x14001fd26
   14001fcfc:	cmp    rax,0x40
   14001fd00:	jae    0x14001fd75
   14001fd02:	cmp    di,0x5f
   14001fd06:	je     0x14001fd75
   14001fd08:	lea    rcx,[rsi+0x80]
   14001fd0f:	lea    edx,[rbp+0x3f]
   14001fd12:	mov    r9,rax
   14001fd15:	mov    r8,rbx
   14001fd18:	call   0x14001c4c8
   14001fd1d:	test   eax,eax
   14001fd1f:	je     0x14001fd57
   14001fd21:	jmp    0x14001fdbb
   14001fd26:	cmp    ebp,0x2
   14001fd29:	jne    0x14001fd75
   14001fd2b:	cmp    rax,0x10
   14001fd2f:	jae    0x14001fd75
   14001fd31:	test   di,di
   14001fd34:	je     0x14001fd3c
   14001fd36:	cmp    di,0x2c
   14001fd3a:	jne    0x14001fd75
   14001fd3c:	lea    rcx,[rsi+0x100]
   14001fd43:	mov    r9,rax
   14001fd46:	mov    r8,rbx
   14001fd49:	mov    edx,0x10
   14001fd4e:	call   0x14001c4c8
   14001fd53:	test   eax,eax
   14001fd55:	jne    0x14001fdd0
   14001fd57:	cmp    di,0x2c
   14001fd5b:	je     0x14001fc64
   14001fd61:	test   di,di
   14001fd64:	je     0x14001fc64
   14001fd6a:	lea    rbx,[r14+0x2]
   14001fd6e:	inc    ebp
   14001fd70:	jmp    0x14001fca5
   14001fd75:	or     eax,0xffffffff
   14001fd78:	mov    rbx,QWORD PTR [rsp+0x50]
   14001fd7d:	mov    rbp,QWORD PTR [rsp+0x58]
   14001fd82:	mov    rsi,QWORD PTR [rsp+0x60]
   14001fd87:	add    rsp,0x30
   14001fd8b:	pop    r15
   14001fd8d:	pop    r14
   14001fd8f:	pop    rdi
   14001fd90:	ret    
   14001fd91:	xor    r9d,r9d
   14001fd94:	xor    r8d,r8d
   14001fd97:	xor    edx,edx
   14001fd99:	xor    ecx,ecx
   14001fd9b:	mov    QWORD PTR [rsp+0x20],r15
   14001fda0:	call   0x140008da8
   14001fda5:	int3   
   14001fda6:	xor    r9d,r9d
   14001fda9:	xor    r8d,r8d
   14001fdac:	xor    edx,edx
   14001fdae:	xor    ecx,ecx
   14001fdb0:	mov    QWORD PTR [rsp+0x20],r15
   14001fdb5:	call   0x140008da8
   14001fdba:	int3   
   14001fdbb:	xor    r9d,r9d
   14001fdbe:	xor    r8d,r8d
   14001fdc1:	xor    edx,edx
   14001fdc3:	xor    ecx,ecx
   14001fdc5:	mov    QWORD PTR [rsp+0x20],r15
   14001fdca:	call   0x140008da8
   14001fdcf:	int3   
   14001fdd0:	xor    r9d,r9d
   14001fdd3:	xor    r8d,r8d
   14001fdd6:	xor    edx,edx
   14001fdd8:	xor    ecx,ecx
   14001fdda:	mov    QWORD PTR [rsp+0x20],r15
   14001fddf:	call   0x140008da8
   14001fde4:	int3   
   14001fde5:	int3   
   14001fde6:	int3   
   14001fde7:	int3   
   14001fde8:	rex push rbx
   14001fdea:	sub    rsp,0x20
   14001fdee:	mov    ebx,ecx
   14001fdf0:	call   0x14000a3ec
   14001fdf5:	mov    r8d,DWORD PTR [rax+0xc8]
   14001fdfc:	mov    edx,r8d
   14001fdff:	and    dl,0x2
   14001fe02:	neg    dl
   14001fe04:	sbb    ecx,ecx
   14001fe06:	cmp    ebx,0xffffffff
   14001fe09:	je     0x14001fe41
   14001fe0b:	test   ebx,ebx
   14001fe0d:	je     0x14001fe48
   14001fe0f:	cmp    ebx,0x1
   14001fe12:	je     0x14001fe34
   14001fe14:	cmp    ebx,0x2
   14001fe17:	je     0x14001fe2e
   14001fe19:	call   0x140009cb4
   14001fe1e:	mov    DWORD PTR [rax],0x16
   14001fe24:	call   0x140008d58
   14001fe29:	or     eax,0xffffffff
   14001fe2c:	jmp    0x14001fe4b
   14001fe2e:	and    r8d,0xfffffffd
   14001fe32:	jmp    0x14001fe38
   14001fe34:	or     r8d,0x2
   14001fe38:	mov    DWORD PTR [rax+0xc8],r8d
   14001fe3f:	jmp    0x14001fe48
   14001fe41:	or     DWORD PTR [rip+0x1d3d0],0xffffffff        # 0x14003d218
   14001fe48:	lea    eax,[rcx+0x2]
   14001fe4b:	add    rsp,0x20
   14001fe4f:	pop    rbx
   14001fe50:	ret    
   14001fe51:	int3   
   14001fe52:	int3   
   14001fe53:	int3   
   14001fe54:	sub    rsp,0x28
   14001fe58:	test   rdx,rdx
   14001fe5b:	je     0x14001ff0b
   14001fe61:	test   rcx,rcx
   14001fe64:	je     0x14001ff0b
   14001fe6a:	cmp    rcx,rdx
   14001fe6d:	je     0x14001ff0b
   14001fe73:	mov    eax,0x2
   14001fe78:	mov    r8,rcx
   14001fe7b:	lea    r9d,[rax+0x7e]
   14001fe7f:	movups xmm0,XMMWORD PTR [rdx]
   14001fe82:	movups XMMWORD PTR [r8],xmm0
   14001fe86:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14001fe8a:	movups XMMWORD PTR [r8+0x10],xmm1
   14001fe8f:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14001fe93:	movups XMMWORD PTR [r8+0x20],xmm0
   14001fe98:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14001fe9c:	movups XMMWORD PTR [r8+0x30],xmm1
   14001fea1:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14001fea5:	movups XMMWORD PTR [r8+0x40],xmm0
   14001feaa:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14001feae:	movups XMMWORD PTR [r8+0x50],xmm1
   14001feb3:	movups xmm0,XMMWORD PTR [rdx+0x60]
   14001feb7:	movups XMMWORD PTR [r8+0x60],xmm0
   14001febc:	movups xmm1,XMMWORD PTR [rdx+0x70]
   14001fec0:	add    r8,r9
   14001fec3:	add    rdx,r9
   14001fec6:	movups XMMWORD PTR [r8-0x10],xmm1
   14001fecb:	dec    rax
   14001fece:	jne    0x14001fe7f
   14001fed0:	movups xmm0,XMMWORD PTR [rdx]
   14001fed3:	movups XMMWORD PTR [r8],xmm0
   14001fed7:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14001fedb:	movups XMMWORD PTR [r8+0x10],xmm1
   14001fee0:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14001fee4:	movups XMMWORD PTR [r8+0x20],xmm0
   14001fee9:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14001feed:	movups XMMWORD PTR [r8+0x30],xmm1
   14001fef2:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14001fef6:	movups XMMWORD PTR [r8+0x40],xmm0
   14001fefb:	mov    rax,QWORD PTR [rdx+0x50]
   14001feff:	mov    QWORD PTR [r8+0x50],rax
   14001ff03:	and    DWORD PTR [rcx],0x0
   14001ff06:	call   0x140011a48
   14001ff0b:	add    rsp,0x28
   14001ff0f:	ret    
   14001ff10:	rex push rbx
   14001ff12:	sub    rsp,0x150
   14001ff19:	mov    rax,QWORD PTR [rip+0x1c2b0]        # 0x14003c1d0
   14001ff20:	xor    rax,rsp
   14001ff23:	mov    QWORD PTR [rsp+0x140],rax
   14001ff2b:	mov    ebx,ecx
   14001ff2d:	cmp    ecx,0x5
   14001ff30:	ja     0x14001ff6c
   14001ff32:	test   rdx,rdx
   14001ff35:	je     0x14001ff6c
   14001ff37:	lea    rax,[rsp+0x30]
   14001ff3c:	mov    r8,rdx
   14001ff3f:	or     r9d,0xffffffff
   14001ff43:	xor    edx,edx
   14001ff45:	xor    ecx,ecx
   14001ff47:	mov    DWORD PTR [rsp+0x28],0x83
   14001ff4f:	mov    QWORD PTR [rsp+0x20],rax
   14001ff54:	call   QWORD PTR [rip+0xc22e]        # 0x14002c188
   14001ff5a:	test   eax,eax
   14001ff5c:	je     0x14001ff6c
   14001ff5e:	lea    rdx,[rsp+0x30]
   14001ff63:	mov    ecx,ebx
   14001ff65:	call   0x140020494
   14001ff6a:	jmp    0x14001ff6e
   14001ff6c:	xor    eax,eax
   14001ff6e:	mov    rcx,QWORD PTR [rsp+0x140]
   14001ff76:	xor    rcx,rsp
   14001ff79:	call   0x14000c380
   14001ff7e:	add    rsp,0x150
   14001ff85:	pop    rbx
   14001ff86:	ret    
   14001ff87:	int3   
   14001ff88:	rex push rbp
   14001ff8a:	push   rbx
   14001ff8b:	push   rsi
   14001ff8c:	push   rdi
   14001ff8d:	push   r12
   14001ff8f:	push   r13
   14001ff91:	push   r14
   14001ff93:	push   r15
   14001ff95:	lea    rbp,[rsp-0x148]
   14001ff9d:	sub    rsp,0x248
   14001ffa4:	mov    rax,QWORD PTR [rip+0x1c225]        # 0x14003c1d0
   14001ffab:	xor    rax,rsp
   14001ffae:	mov    QWORD PTR [rbp+0x130],rax
   14001ffb5:	mov    rdi,QWORD PTR [rbp+0x1b8]
   14001ffbc:	mov    rsi,r9
   14001ffbf:	mov    r13,r8
   14001ffc2:	mov    QWORD PTR [rsp+0x50],r8
   14001ffc7:	mov    r12,rdx
   14001ffca:	mov    rbx,rcx
   14001ffcd:	call   0x14000a3ec
   14001ffd2:	lea    rcx,[rax+0x160]
   14001ffd9:	lea    r15,[rax+0x164]
   14001ffe0:	lea    r14,[rax+0x26a]
   14001ffe7:	mov    QWORD PTR [rsp+0x38],rcx
   14001ffec:	xor    ecx,ecx
   14001ffee:	mov    QWORD PTR [rsp+0x40],r15
   14001fff3:	mov    DWORD PTR [rsp+0x30],ecx
   14001fff7:	test   rbx,rbx
   14001fffa:	jne    0x140020021
   14001fffc:	xor    eax,eax
   14001fffe:	mov    rcx,QWORD PTR [rbp+0x130]
   140020005:	xor    rcx,rsp
   140020008:	call   0x14000c380
   14002000d:	add    rsp,0x248
   140020014:	pop    r15
   140020016:	pop    r14
   140020018:	pop    r13
   14002001a:	pop    r12
   14002001c:	pop    rdi
   14002001d:	pop    rsi
   14002001e:	pop    rbx
   14002001f:	pop    rbp
   140020020:	ret    
   140020021:	mov    rdx,QWORD PTR [rbp+0x1b0]
   140020028:	add    rax,0x398
   14002002e:	mov    r9d,0x55
   140020034:	mov    r8,rax
   140020037:	mov    rcx,rsi
   14002003a:	mov    QWORD PTR [rsp+0x48],rax
   14002003f:	call   0x14001c4c8
   140020044:	xor    ecx,ecx
   140020046:	test   eax,eax
   140020048:	jne    0x140020347
   14002004e:	cmp    WORD PTR [rbx],0x43
   140020052:	jne    0x140020085
   140020054:	cmp    WORD PTR [rbx+0x2],cx
   140020058:	jne    0x140020085
   14002005a:	lea    r8,[rip+0x14b0f]        # 0x140034b70
   140020061:	mov    rdx,r13
   140020064:	mov    rcx,r12
   140020067:	call   0x14001c440
   14002006c:	xor    ecx,ecx
   14002006e:	test   eax,eax
   140020070:	jne    0x1400202a5
   140020076:	test   rdi,rdi
   140020079:	je     0x14002007d
   14002007b:	mov    DWORD PTR [rdi],ecx
   14002007d:	mov    rax,r12
   140020080:	jmp    0x14001fffe
   140020085:	mov    rcx,rbx
   140020088:	call   0x14001c4ac
   14002008d:	mov    r13,rax
   140020090:	cmp    rax,0x83
   140020096:	jae    0x1400200be
   140020098:	mov    rdx,rbx
   14002009b:	mov    rcx,r14
   14002009e:	call   0x140026c50
   1400200a3:	test   eax,eax
   1400200a5:	je     0x140020242
   1400200ab:	mov    rdx,rbx
   1400200ae:	mov    rcx,r15
   1400200b1:	call   0x140026c50
   1400200b6:	test   eax,eax
   1400200b8:	je     0x140020242
   1400200be:	mov    rax,QWORD PTR [rip+0x1ffcb]        # 0x140040090
   1400200c5:	lea    rcx,[rsp+0x60]
   1400200ca:	mov    rdx,rbx
   1400200cd:	xor    rax,QWORD PTR [rip+0x1c0fc]        # 0x14003c1d0
   1400200d4:	mov    eax,0x0
   1400200d9:	lea    r15d,[rax+0x1]
   1400200dd:	cmovne r15d,eax
   1400200e1:	call   0x14001fc30
   1400200e6:	test   eax,eax
   1400200e8:	jne    0x140020165
   1400200ea:	test   r15d,r15d
   1400200ed:	mov    r15,QWORD PTR [rsp+0x38]
   1400200f2:	lea    r8,[rsp+0x60]
   1400200f7:	mov    rdx,r15
   1400200fa:	lea    rcx,[rsp+0x60]
   1400200ff:	je     0x140020108
   140020101:	call   0x1400280b8
   140020106:	jmp    0x14002010d
   140020108:	call   0x1400275bc
   14002010d:	test   eax,eax
   14002010f:	je     0x14002016a
   140020111:	mov    r15d,0x83
   140020117:	lea    r8,[rsp+0x60]
   14002011c:	mov    rcx,r14
   14002011f:	mov    edx,r15d
   140020122:	call   0x14001fb8c
   140020127:	test   rsi,rsi
   14002012a:	je     0x140020236
   140020130:	lea    rcx,[rbp+0x80]
   140020137:	call   0x14001c4ac
   14002013c:	mov    rdx,QWORD PTR [rbp+0x1b0]
   140020143:	lea    r8,[rbp+0x80]
   14002014a:	lea    r9,[rax+0x1]
   14002014e:	mov    rcx,rsi
   140020151:	call   0x14001c4c8
   140020156:	xor    esi,esi
   140020158:	test   eax,eax
   14002015a:	je     0x14002020f
   140020160:	jmp    0x1400202b8
   140020165:	mov    r15,QWORD PTR [rsp+0x38]
   14002016a:	mov    rcx,rbx
   14002016d:	call   0x14000fb10
   140020172:	test   eax,eax
   140020174:	je     0x140020278
   14002017a:	lea    r8,[rsp+0x30]
   14002017f:	mov    r9d,0x2
   140020185:	mov    edx,0x20001004
   14002018a:	mov    rcx,rbx
   14002018d:	call   0x14000fa04
   140020192:	test   eax,eax
   140020194:	je     0x14002019e
   140020196:	mov    eax,DWORD PTR [rsp+0x30]
   14002019a:	test   eax,eax
   14002019c:	jne    0x1400201a8
   14002019e:	call   QWORD PTR [rip+0xbec4]        # 0x14002c068
   1400201a4:	mov    DWORD PTR [rsp+0x30],eax
   1400201a8:	movzx  eax,ax
   1400201ab:	mov    r8,rbx
   1400201ae:	mov    edx,0x83
   1400201b3:	mov    DWORD PTR [r15],eax
   1400201b6:	lea    r15,[r13+0x1]
   1400201ba:	mov    rcx,r14
   1400201bd:	mov    r9,r15
   1400201c0:	call   0x14001c4c8
   1400201c5:	xor    ecx,ecx
   1400201c7:	test   eax,eax
   1400201c9:	jne    0x140020321
   1400201cf:	mov    rdx,QWORD PTR [rbp+0x1b0]
   1400201d6:	mov    r9,r15
   1400201d9:	mov    r8,rbx
   1400201dc:	mov    rcx,rsi
   1400201df:	call   0x14001c4c8
   1400201e4:	xor    esi,esi
   1400201e6:	test   eax,eax
   1400201e8:	jne    0x14002030c
   1400201ee:	mov    rcx,QWORD PTR [rsp+0x48]
   1400201f3:	lea    edx,[rsi+0x55]
   1400201f6:	mov    r9,r15
   1400201f9:	mov    r8,rbx
   1400201fc:	call   0x14001c4c8
   140020201:	test   eax,eax
   140020203:	jne    0x1400202f7
   140020209:	mov    r15d,0x83
   14002020f:	cmp    WORD PTR [rbx],si
   140020212:	je     0x140020238
   140020214:	cmp    r13,r15
   140020217:	jae    0x140020238
   140020219:	mov    rcx,QWORD PTR [rsp+0x40]
   14002021e:	lea    r9,[r13+0x1]
   140020222:	mov    r8,rbx
   140020225:	mov    rdx,r15
   140020228:	call   0x14001c4c8
   14002022d:	test   eax,eax
   14002022f:	je     0x140020244
   140020231:	jmp    0x1400202cd
   140020236:	jmp    0x14002020f
   140020238:	mov    rax,QWORD PTR [rsp+0x40]
   14002023d:	mov    WORD PTR [rax],si
   140020240:	jmp    0x140020244
   140020242:	xor    esi,esi
   140020244:	test   rdi,rdi
   140020247:	je     0x14002025c
   140020249:	mov    rdx,QWORD PTR [rsp+0x38]
   14002024e:	mov    r8d,0x4
   140020254:	mov    rcx,rdi
   140020257:	call   0x1400059f0
   14002025c:	mov    rdx,QWORD PTR [rsp+0x50]
   140020261:	mov    r8,r14
   140020264:	mov    rcx,r12
   140020267:	call   0x14001c440
   14002026c:	test   eax,eax
   14002026e:	jne    0x1400202e2
   140020270:	mov    rax,r14
   140020273:	jmp    0x14001fffe
   140020278:	mov    rcx,rsi
   14002027b:	call   0x14001c4ac
   140020280:	mov    rcx,QWORD PTR [rsp+0x48]
   140020285:	mov    r8,rsi
   140020288:	lea    r9,[rax+0x1]
   14002028c:	mov    edx,0x55
   140020291:	call   0x14001c4c8
   140020296:	xor    ecx,ecx
   140020298:	test   eax,eax
   14002029a:	je     0x14001fffc
   1400202a0:	jmp    0x140020334
   1400202a5:	xor    r9d,r9d
   1400202a8:	xor    r8d,r8d
   1400202ab:	xor    edx,edx
   1400202ad:	mov    QWORD PTR [rsp+0x20],rcx
   1400202b2:	call   0x140008da8
   1400202b7:	int3   
   1400202b8:	xor    r9d,r9d
   1400202bb:	xor    r8d,r8d
   1400202be:	xor    edx,edx
   1400202c0:	xor    ecx,ecx
   1400202c2:	mov    QWORD PTR [rsp+0x20],rsi
   1400202c7:	call   0x140008da8
   1400202cc:	int3   
   1400202cd:	xor    r9d,r9d
   1400202d0:	xor    r8d,r8d
   1400202d3:	xor    edx,edx
   1400202d5:	xor    ecx,ecx
   1400202d7:	mov    QWORD PTR [rsp+0x20],rsi
   1400202dc:	call   0x140008da8
   1400202e1:	int3   
   1400202e2:	xor    r9d,r9d
   1400202e5:	xor    r8d,r8d
   1400202e8:	xor    edx,edx
   1400202ea:	xor    ecx,ecx
   1400202ec:	mov    QWORD PTR [rsp+0x20],rsi
   1400202f1:	call   0x140008da8
   1400202f6:	int3   
   1400202f7:	xor    r9d,r9d
   1400202fa:	xor    r8d,r8d
   1400202fd:	xor    edx,edx
   1400202ff:	xor    ecx,ecx
   140020301:	mov    QWORD PTR [rsp+0x20],rsi
   140020306:	call   0x140008da8
   14002030b:	int3   
   14002030c:	xor    r9d,r9d
   14002030f:	xor    r8d,r8d
   140020312:	xor    edx,edx
   140020314:	xor    ecx,ecx
   140020316:	mov    QWORD PTR [rsp+0x20],rsi
   14002031b:	call   0x140008da8
   140020320:	int3   
   140020321:	xor    r9d,r9d
   140020324:	xor    r8d,r8d
   140020327:	xor    edx,edx
   140020329:	mov    QWORD PTR [rsp+0x20],rcx
   14002032e:	call   0x140008da8
   140020333:	int3   
   140020334:	xor    r9d,r9d
   140020337:	xor    r8d,r8d
   14002033a:	xor    edx,edx
   14002033c:	mov    QWORD PTR [rsp+0x20],rcx
   140020341:	call   0x140008da8
   140020346:	int3   
   140020347:	xor    r9d,r9d
   14002034a:	xor    r8d,r8d
   14002034d:	xor    edx,edx
   14002034f:	mov    QWORD PTR [rsp+0x20],rcx
   140020354:	call   0x140008da8
   140020359:	int3   
   14002035a:	int3   
   14002035b:	int3   
   14002035c:	test   rcx,rcx
   14002035f:	je     0x1400203f5
   140020365:	push   rbx
   140020366:	sub    rsp,0x20
   14002036a:	mov    rbx,rcx
   14002036d:	mov    ecx,0xd
   140020372:	call   0x14000fc2c
   140020377:	nop
   140020378:	mov    rcx,QWORD PTR [rbx+0x8]
   14002037c:	test   rcx,rcx
   14002037f:	je     0x14002039c
   140020381:	lock dec DWORD PTR [rcx]
   140020384:	jne    0x14002039c
   140020386:	mov    rcx,QWORD PTR [rbx+0x8]
   14002038a:	lea    rax,[rip+0x1c34f]        # 0x14003c6e0
   140020391:	cmp    rcx,rax
   140020394:	je     0x14002039c
   140020396:	call   0x140007dc0
   14002039b:	nop
   14002039c:	mov    ecx,0xd
   1400203a1:	call   0x14000fe48
   1400203a6:	cmp    QWORD PTR [rbx],0x0
   1400203aa:	je     0x1400203e8
   1400203ac:	mov    ecx,0xc
   1400203b1:	call   0x14000fc2c
   1400203b6:	nop
   1400203b7:	mov    rcx,QWORD PTR [rbx]
   1400203ba:	call   0x140011c6c
   1400203bf:	mov    rcx,QWORD PTR [rbx]
   1400203c2:	test   rcx,rcx
   1400203c5:	je     0x1400203de
   1400203c7:	cmp    DWORD PTR [rcx],0x0
   1400203ca:	jne    0x1400203de
   1400203cc:	lea    rax,[rip+0x1ccdd]        # 0x14003d0b0
   1400203d3:	cmp    rcx,rax
   1400203d6:	je     0x1400203de
   1400203d8:	call   0x140011ad4
   1400203dd:	nop
   1400203de:	mov    ecx,0xc
   1400203e3:	call   0x14000fe48
   1400203e8:	mov    rcx,rbx
   1400203eb:	call   0x140007dc0
   1400203f0:	add    rsp,0x20
   1400203f4:	pop    rbx
   1400203f5:	ret    
   1400203f6:	int3   
   1400203f7:	int3   
   1400203f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400203fd:	push   rdi
   1400203fe:	sub    rsp,0x20
   140020402:	call   0x14000a3ec
   140020407:	mov    rdi,rax
   14002040a:	mov    edx,0x1
   14002040f:	lea    ecx,[rdx+0xf]
   140020412:	call   0x140008604
   140020417:	mov    rbx,rax
   14002041a:	test   rax,rax
   14002041d:	jne    0x14002042e
   14002041f:	call   0x140009cb4
   140020424:	mov    DWORD PTR [rax],0xc
   14002042a:	xor    eax,eax
   14002042c:	jmp    0x140020489
   14002042e:	call   0x140011d10
   140020433:	call   0x1400103cc
   140020438:	mov    rax,QWORD PTR [rdi+0xc0]
   14002043f:	mov    QWORD PTR [rbx],rax
   140020442:	mov    rax,QWORD PTR [rdi+0xb8]
   140020449:	mov    QWORD PTR [rbx+0x8],rax
   14002044d:	mov    ecx,0xc
   140020452:	call   0x14000fc2c
   140020457:	nop
   140020458:	mov    rcx,QWORD PTR [rbx]
   14002045b:	call   0x140011a48
   140020460:	nop
   140020461:	mov    ecx,0xc
   140020466:	call   0x14000fe48
   14002046b:	mov    edi,0xd
   140020470:	mov    ecx,edi
   140020472:	call   0x14000fc2c
   140020477:	nop
   140020478:	mov    rax,QWORD PTR [rbx+0x8]
   14002047c:	lock inc DWORD PTR [rax]
   14002047f:	mov    ecx,edi
   140020481:	call   0x14000fe48
   140020486:	mov    rax,rbx
   140020489:	mov    rbx,QWORD PTR [rsp+0x30]
   14002048e:	add    rsp,0x20
   140020492:	pop    rdi
   140020493:	ret    
   140020494:	mov    QWORD PTR [rsp+0x8],rbx
   140020499:	mov    QWORD PTR [rsp+0x10],rbp
   14002049e:	mov    QWORD PTR [rsp+0x18],rsi
   1400204a3:	push   rdi
   1400204a4:	sub    rsp,0x20
   1400204a8:	mov    rdi,rdx
   1400204ab:	mov    esi,ecx
   1400204ad:	cmp    ecx,0x5
   1400204b0:	ja     0x1400204d9
   1400204b2:	test   rdx,rdx
   1400204b5:	je     0x1400204d9
   1400204b7:	mov    ebp,0x1
   1400204bc:	mov    edx,ebp
   1400204be:	lea    ecx,[rbp+0xf]
   1400204c1:	call   0x140008604
   1400204c6:	mov    rbx,rax
   1400204c9:	test   rax,rax
   1400204cc:	jne    0x1400204f0
   1400204ce:	call   0x140009cb4
   1400204d3:	mov    DWORD PTR [rax],0xc
   1400204d9:	xor    eax,eax
   1400204db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400204e0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400204e5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400204ea:	add    rsp,0x20
   1400204ee:	pop    rdi
   1400204ef:	ret    
   1400204f0:	mov    rdx,rbp
   1400204f3:	mov    ecx,0x158
   1400204f8:	call   0x140008604
   1400204fd:	mov    QWORD PTR [rbx],rax
   140020500:	test   rax,rax
   140020503:	jne    0x14002050f
   140020505:	mov    rcx,rbx
   140020508:	call   0x140007dc0
   14002050d:	jmp    0x1400204ce
   14002050f:	mov    rdx,rbp
   140020512:	mov    ecx,0x228
   140020517:	call   0x140008604
   14002051c:	mov    rcx,QWORD PTR [rbx]
   14002051f:	mov    QWORD PTR [rbx+0x8],rax
   140020523:	test   rax,rax
   140020526:	jne    0x14002052f
   140020528:	call   0x140007dc0
   14002052d:	jmp    0x140020505
   14002052f:	lea    rdx,[rip+0x1cb7a]        # 0x14003d0b0
   140020536:	call   0x14001fe54
   14002053b:	mov    rcx,QWORD PTR [rbx]
   14002053e:	mov    r8,rdi
   140020541:	mov    edx,esi
   140020543:	call   0x14002096c
   140020548:	test   rax,rax
   14002054b:	je     0x140020560
   14002054d:	mov    rax,QWORD PTR [rbx]
   140020550:	mov    rdx,QWORD PTR [rbx+0x8]
   140020554:	mov    ecx,DWORD PTR [rax+0x4]
   140020557:	call   0x140010708
   14002055c:	test   eax,eax
   14002055e:	je     0x140020585
   140020560:	mov    rcx,QWORD PTR [rbx+0x8]
   140020564:	call   0x140007dc0
   140020569:	mov    rcx,QWORD PTR [rbx]
   14002056c:	call   0x140011c6c
   140020571:	mov    rcx,QWORD PTR [rbx]
   140020574:	call   0x140011ad4
   140020579:	mov    rcx,rbx
   14002057c:	call   0x140007dc0
   140020581:	xor    ebx,ebx
   140020583:	jmp    0x14002058b
   140020585:	mov    rax,QWORD PTR [rbx+0x8]
   140020589:	mov    DWORD PTR [rax],ebp
   14002058b:	mov    rax,rbx
   14002058e:	jmp    0x1400204db
   140020593:	int3   
   140020594:	test   r8d,r8d
   140020597:	jle    0x1400205e2
   140020599:	mov    DWORD PTR [rsp+0x18],r8d
   14002059e:	mov    QWORD PTR [rsp+0x20],r9
   1400205a3:	push   rbx
   1400205a4:	push   rbp
   1400205a5:	push   rsi
   1400205a6:	push   rdi
   1400205a7:	sub    rsp,0x38
   1400205ab:	lea    rdi,[rsp+0x78]
   1400205b0:	xor    ebx,ebx
   1400205b2:	mov    rsi,rdx
   1400205b5:	add    rdi,0xfffffffffffffff8
   1400205b9:	mov    rbp,rcx
   1400205bc:	lea    rdi,[rdi+0x8]
   1400205c0:	mov    rdx,rsi
   1400205c3:	mov    rcx,rbp
   1400205c6:	mov    r8,QWORD PTR [rdi]
   1400205c9:	call   0x14001c3b8
   1400205ce:	test   eax,eax
   1400205d0:	jne    0x1400205e3
   1400205d2:	inc    ebx
   1400205d4:	cmp    ebx,DWORD PTR [rsp+0x70]
   1400205d8:	jl     0x1400205bc
   1400205da:	add    rsp,0x38
   1400205de:	pop    rdi
   1400205df:	pop    rsi
   1400205e0:	pop    rbp
   1400205e1:	pop    rbx
   1400205e2:	ret    
   1400205e3:	and    QWORD PTR [rsp+0x20],0x0
   1400205e9:	xor    r9d,r9d
   1400205ec:	xor    r8d,r8d
   1400205ef:	xor    edx,edx
   1400205f1:	xor    ecx,ecx
   1400205f3:	call   0x140008da8
   1400205f8:	int3   
   1400205f9:	int3   
   1400205fa:	int3   
   1400205fb:	int3   
   1400205fc:	mov    QWORD PTR [rsp+0x8],rbx
   140020601:	mov    QWORD PTR [rsp+0x10],rsi
   140020606:	mov    QWORD PTR [rsp+0x20],rdi
   14002060b:	push   r12
   14002060d:	push   r14
   14002060f:	push   r15
   140020611:	sub    rsp,0x30
   140020615:	mov    r14,rdx
   140020618:	mov    r12d,ecx
   14002061b:	xor    esi,esi
   14002061d:	cmp    ecx,0x5
   140020620:	jbe    0x140020639
   140020622:	call   0x140009cb4
   140020627:	mov    DWORD PTR [rax],0x16
   14002062d:	call   0x140008d58
   140020632:	xor    eax,eax
   140020634:	jmp    0x14002077d
   140020639:	call   0x14000a3ec
   14002063e:	mov    rbx,rax
   140020641:	mov    QWORD PTR [rsp+0x60],rax
   140020646:	call   0x140011d10
   14002064b:	or     DWORD PTR [rbx+0xc8],0x10
   140020652:	mov    edx,0x1
   140020657:	mov    ecx,0x158
   14002065c:	call   0x140008604
   140020661:	mov    rdi,rax
   140020664:	test   rax,rax
   140020667:	je     0x140020773
   14002066d:	mov    ecx,0xc
   140020672:	call   0x14000fc2c
   140020677:	nop
   140020678:	lea    r15,[rbx+0xc0]
   14002067f:	mov    rdx,QWORD PTR [r15]
   140020682:	mov    rcx,rdi
   140020685:	call   0x14001fe54
   14002068a:	nop
   14002068b:	mov    ecx,0xc
   140020690:	call   0x14000fe48
   140020695:	mov    r8,r14
   140020698:	mov    edx,r12d
   14002069b:	mov    rcx,rdi
   14002069e:	call   0x14002096c
   1400206a3:	mov    rsi,rax
   1400206a6:	mov    QWORD PTR [rsp+0x20],rax
   1400206ab:	test   rax,rax
   1400206ae:	je     0x140020762
   1400206b4:	test   r14,r14
   1400206b7:	je     0x1400206e2
   1400206b9:	lea    rdx,[rip+0x1c714]        # 0x14003cdd4
   1400206c0:	mov    rcx,r14
   1400206c3:	call   0x140026c50
   1400206c8:	mov    ecx,DWORD PTR [rip+0x1e8ba]        # 0x14003ef88
   1400206ce:	test   eax,eax
   1400206d0:	mov    r14d,0x1
   1400206d6:	cmovne ecx,r14d
   1400206da:	mov    DWORD PTR [rip+0x1e8a8],ecx        # 0x14003ef88
   1400206e0:	jmp    0x1400206e8
   1400206e2:	mov    r14d,0x1
   1400206e8:	mov    ecx,0xc
   1400206ed:	call   0x14000fc2c
   1400206f2:	nop
   1400206f3:	mov    rdx,rdi
   1400206f6:	mov    rcx,r15
   1400206f9:	call   0x140011d88
   1400206fe:	mov    rcx,rdi
   140020701:	call   0x140011c6c
   140020706:	test   BYTE PTR [rbx+0xc8],0x2
   14002070d:	jne    0x140020756
   14002070f:	test   BYTE PTR [rip+0x1cb02],r14b        # 0x14003d218
   140020716:	jne    0x140020756
   140020718:	mov    rdx,QWORD PTR [r15]
   14002071b:	lea    rcx,[rip+0x1c97e]        # 0x14003d0a0
   140020722:	call   0x140011d88
   140020727:	mov    rdx,QWORD PTR [rip+0x1c972]        # 0x14003d0a0
   14002072e:	mov    rax,QWORD PTR [rdx+0xf0]
   140020735:	mov    QWORD PTR [rip+0x1cd74],rax        # 0x14003d4b0
   14002073c:	mov    rax,QWORD PTR [rdx+0x108]
   140020743:	mov    QWORD PTR [rip+0x1cd6e],rax        # 0x14003d4b8
   14002074a:	mov    eax,DWORD PTR [rdx+0xd4]
   140020750:	mov    DWORD PTR [rip+0x1c67a],eax        # 0x14003cdd0
   140020756:	mov    ecx,0xc
   14002075b:	call   0x14000fe48
   140020760:	jmp    0x140020773
   140020762:	mov    rcx,rdi
   140020765:	call   0x140011c6c
   14002076a:	mov    rcx,rdi
   14002076d:	call   0x140011ad4
   140020772:	nop
   140020773:	and    DWORD PTR [rbx+0xc8],0xffffffef
   14002077a:	mov    rax,rsi
   14002077d:	mov    rbx,QWORD PTR [rsp+0x50]
   140020782:	mov    rsi,QWORD PTR [rsp+0x58]
   140020787:	mov    rdi,QWORD PTR [rsp+0x68]
   14002078c:	add    rsp,0x30
   140020790:	pop    r15
   140020792:	pop    r14
   140020794:	pop    r12
   140020796:	ret    
   140020797:	int3   
   140020798:	mov    QWORD PTR [rsp+0x8],rbx
   14002079d:	mov    QWORD PTR [rsp+0x10],rbp
   1400207a2:	mov    QWORD PTR [rsp+0x18],rsi
   1400207a7:	push   rdi
   1400207a8:	push   r12
   1400207aa:	push   r13
   1400207ac:	push   r14
   1400207ae:	push   r15
   1400207b0:	sub    rsp,0x30
   1400207b4:	mov    rdi,rcx
   1400207b7:	mov    ecx,0x6a6
   1400207bc:	mov    ebp,0x1
   1400207c1:	call   0x140008684
   1400207c6:	xor    r13d,r13d
   1400207c9:	mov    rsi,rax
   1400207cc:	test   rax,rax
   1400207cf:	jne    0x1400207ee
   1400207d1:	mov    rbx,QWORD PTR [rsp+0x60]
   1400207d6:	mov    rbp,QWORD PTR [rsp+0x68]
   1400207db:	mov    rsi,QWORD PTR [rsp+0x70]
   1400207e0:	add    rsp,0x30
   1400207e4:	pop    r15
   1400207e6:	pop    r14
   1400207e8:	pop    r13
   1400207ea:	pop    r12
   1400207ec:	pop    rdi
   1400207ed:	ret    
   1400207ee:	lea    r14,[rax+0x4]
   1400207f2:	mov    ebx,0x351
   1400207f7:	mov    r8d,0x3
   1400207fd:	mov    WORD PTR [r14],r13w
   140020801:	mov    DWORD PTR [rax],ebp
   140020803:	mov    rax,QWORD PTR [rdi+0x38]
   140020807:	mov    r9,QWORD PTR [rip+0x141da]        # 0x1400349e8
   14002080e:	mov    QWORD PTR [rsp+0x28],rax
   140020813:	lea    rax,[rip+0x14352]        # 0x140034b6c
   14002081a:	mov    edx,ebx
   14002081c:	mov    rcx,r14
   14002081f:	mov    QWORD PTR [rsp+0x20],rax
   140020824:	call   0x140020594
   140020829:	lea    r15,[rip+0x141b8]        # 0x1400349e8
   140020830:	lea    r12,[rdi+0x38]
   140020834:	lea    r8,[rip+0x1432d]        # 0x140034b68
   14002083b:	mov    rdx,rbx
   14002083e:	mov    rcx,r14
   140020841:	call   0x14001c3b8
   140020846:	test   eax,eax
   140020848:	jne    0x140020957
   14002084e:	mov    rcx,QWORD PTR [r12]
   140020852:	lea    rbx,[r12+0x20]
   140020857:	mov    rdx,QWORD PTR [rbx]
   14002085a:	call   0x140026c50
   14002085f:	mov    r12,rbx
   140020862:	mov    r8d,0x3
   140020868:	test   eax,eax
   14002086a:	mov    rax,QWORD PTR [rbx]
   14002086d:	mov    ebx,0x351
   140020872:	mov    QWORD PTR [rsp+0x28],rax
   140020877:	cmovne ebp,r13d
   14002087b:	lea    rax,[rip+0x142ea]        # 0x140034b6c
   140020882:	add    r15,0x18
   140020886:	mov    edx,ebx
   140020888:	mov    rcx,r14
   14002088b:	mov    r9,QWORD PTR [r15]
   14002088e:	mov    QWORD PTR [rsp+0x20],rax
   140020893:	call   0x140020594
   140020898:	lea    rax,[rip+0x141a9]        # 0x140034a48
   14002089f:	cmp    r15,rax
   1400208a2:	jl     0x140020834
   1400208a4:	test   ebp,ebp
   1400208a6:	jne    0x1400208fb
   1400208a8:	mov    rcx,QWORD PTR [rdi+0x28]
   1400208ac:	or     ebx,0xffffffff
   1400208af:	test   rcx,rcx
   1400208b2:	je     0x1400208c7
   1400208b4:	mov    eax,ebx
   1400208b6:	lock xadd DWORD PTR [rcx],eax
   1400208ba:	add    eax,ebx
   1400208bc:	jne    0x1400208c7
   1400208be:	mov    rcx,QWORD PTR [rdi+0x28]
   1400208c2:	call   0x140007dc0
   1400208c7:	mov    rax,QWORD PTR [rdi+0x20]
   1400208cb:	test   rax,rax
   1400208ce:	je     0x1400208e3
   1400208d0:	mov    ecx,ebx
   1400208d2:	lock xadd DWORD PTR [rax],ecx
   1400208d6:	add    ecx,ebx
   1400208d8:	jne    0x1400208e3
   1400208da:	mov    rcx,QWORD PTR [rdi+0x20]
   1400208de:	call   0x140007dc0
   1400208e3:	mov    QWORD PTR [rdi+0x20],r13
   1400208e7:	mov    QWORD PTR [rdi+0x10],r13
   1400208eb:	mov    QWORD PTR [rdi+0x28],rsi
   1400208ef:	mov    QWORD PTR [rdi+0x18],r14
   1400208f3:	mov    rax,r14
   1400208f6:	jmp    0x1400207d1
   1400208fb:	mov    rcx,rsi
   1400208fe:	call   0x140007dc0
   140020903:	mov    rcx,QWORD PTR [rdi+0x28]
   140020907:	or     ebx,0xffffffff
   14002090a:	test   rcx,rcx
   14002090d:	je     0x140020922
   14002090f:	mov    eax,ebx
   140020911:	lock xadd DWORD PTR [rcx],eax
   140020915:	add    eax,ebx
   140020917:	jne    0x140020922
   140020919:	mov    rcx,QWORD PTR [rdi+0x28]
   14002091d:	call   0x140007dc0
   140020922:	mov    rcx,QWORD PTR [rdi+0x20]
   140020926:	test   rcx,rcx
   140020929:	je     0x14002093e
   14002092b:	mov    eax,ebx
   14002092d:	lock xadd DWORD PTR [rcx],eax
   140020931:	add    eax,ebx
   140020933:	jne    0x14002093e
   140020935:	mov    rcx,QWORD PTR [rdi+0x20]
   140020939:	call   0x140007dc0
   14002093e:	mov    rax,QWORD PTR [rdi+0x58]
   140020942:	mov    QWORD PTR [rdi+0x20],r13
   140020946:	mov    QWORD PTR [rdi+0x10],r13
   14002094a:	mov    QWORD PTR [rdi+0x28],r13
   14002094e:	mov    QWORD PTR [rdi+0x18],r13
   140020952:	jmp    0x1400207d1
   140020957:	xor    r9d,r9d
   14002095a:	xor    r8d,r8d
   14002095d:	xor    edx,edx
   14002095f:	xor    ecx,ecx
   140020961:	mov    QWORD PTR [rsp+0x20],r13
   140020966:	call   0x140008da8
   14002096b:	int3   
   14002096c:	mov    QWORD PTR [rsp+0x20],rbx
   140020971:	push   rbp
   140020972:	push   rsi
   140020973:	push   rdi
   140020974:	push   r12
   140020976:	push   r13
   140020978:	push   r14
   14002097a:	push   r15
   14002097c:	sub    rsp,0x200
   140020983:	mov    rax,QWORD PTR [rip+0x1b846]        # 0x14003c1d0
   14002098a:	xor    rax,rsp
   14002098d:	mov    QWORD PTR [rsp+0x1f0],rax
   140020995:	xor    r13d,r13d
   140020998:	mov    rbx,r8
   14002099b:	mov    rdi,rcx
   14002099e:	test   edx,edx
   1400209a0:	je     0x1400209c2
   1400209a2:	test   rbx,rbx
   1400209a5:	je     0x1400209b1
   1400209a7:	call   0x140020bd8
   1400209ac:	jmp    0x140020b07
   1400209b1:	movsxd rax,edx
   1400209b4:	shl    rax,0x5
   1400209b8:	mov    rax,QWORD PTR [rax+rcx*1+0x18]
   1400209bd:	jmp    0x140020b07
   1400209c2:	mov    ebp,0x1
   1400209c7:	mov    esi,r13d
   1400209ca:	test   rbx,rbx
   1400209cd:	je     0x140020b02
   1400209d3:	cmp    WORD PTR [r8],0x4c
   1400209d8:	jne    0x140020b36
   1400209de:	cmp    WORD PTR [r8+0x2],0x43
   1400209e4:	jne    0x140020b36
   1400209ea:	cmp    WORD PTR [r8+0x4],0x5f
   1400209f0:	jne    0x140020b36
   1400209f6:	lea    rdx,[rip+0x14163]        # 0x140034b60
   1400209fd:	mov    rcx,rbx
   140020a00:	call   0x140026cf8
   140020a05:	mov    r14,rax
   140020a08:	test   rax,rax
   140020a0b:	je     0x140020b32
   140020a11:	mov    rbp,rax
   140020a14:	sub    rbp,rbx
   140020a17:	sar    rbp,1
   140020a1a:	je     0x140020b32
   140020a20:	cmp    WORD PTR [rax],0x3b
   140020a24:	je     0x140020b32
   140020a2a:	mov    r12d,0x1
   140020a30:	lea    r15,[rip+0x13fb1]        # 0x1400349e8
   140020a37:	mov    rcx,QWORD PTR [r15]
   140020a3a:	mov    r8,rbp
   140020a3d:	mov    rdx,rbx
   140020a40:	call   0x140026ccc
   140020a45:	test   eax,eax
   140020a47:	jne    0x140020a56
   140020a49:	mov    rcx,QWORD PTR [r15]
   140020a4c:	call   0x14001c4ac
   140020a51:	cmp    rbp,rax
   140020a54:	je     0x140020a69
   140020a56:	lea    rax,[rip+0x13feb]        # 0x140034a48
   140020a5d:	add    r15,0x18
   140020a61:	inc    r12d
   140020a64:	cmp    r15,rax
   140020a67:	jle    0x140020a37
   140020a69:	add    r14,0x2
   140020a6d:	lea    rdx,[rip+0x140f4]        # 0x140034b68
   140020a74:	mov    rcx,r14
   140020a77:	call   0x140026c8c
   140020a7c:	mov    rbx,rax
   140020a7f:	test   rax,rax
   140020a82:	jne    0x140020a8f
   140020a84:	cmp    WORD PTR [r14],0x3b
   140020a89:	jne    0x140020b32
   140020a8f:	cmp    r12d,0x5
   140020a93:	jg     0x140020adf
   140020a95:	lea    rcx,[rsp+0x30]
   140020a9a:	mov    r9,rax
   140020a9d:	mov    r8,r14
   140020aa0:	mov    edx,0x83
   140020aa5:	call   0x14001c4c8
   140020aaa:	test   eax,eax
   140020aac:	jne    0x140020bc1
   140020ab2:	lea    rax,[rbx+rbx*1]
   140020ab6:	cmp    rax,0x106
   140020abc:	jae    0x140020bbb
   140020ac2:	lea    r8,[rsp+0x30]
   140020ac7:	mov    edx,r12d
   140020aca:	mov    rcx,rdi
   140020acd:	mov    WORD PTR [rsp+rax*1+0x30],r13w
   140020ad3:	call   0x140020bd8
   140020ad8:	test   rax,rax
   140020adb:	je     0x140020adf
   140020add:	inc    esi
   140020adf:	lea    rbx,[r14+rbx*2]
   140020ae3:	cmp    WORD PTR [rbx],r13w
   140020ae7:	je     0x140020af7
   140020ae9:	add    rbx,0x2
   140020aed:	cmp    WORD PTR [rbx],r13w
   140020af1:	jne    0x1400209f6
   140020af7:	test   esi,esi
   140020af9:	je     0x140020bb3
   140020aff:	mov    rcx,rdi
   140020b02:	call   0x140020798
   140020b07:	mov    rcx,QWORD PTR [rsp+0x1f0]
   140020b0f:	xor    rcx,rsp
   140020b12:	call   0x14000c380
   140020b17:	mov    rbx,QWORD PTR [rsp+0x258]
   140020b1f:	add    rsp,0x200
   140020b26:	pop    r15
   140020b28:	pop    r14
   140020b2a:	pop    r13
   140020b2c:	pop    r12
   140020b2e:	pop    rdi
   140020b2f:	pop    rsi
   140020b30:	pop    rbp
   140020b31:	ret    
   140020b32:	xor    eax,eax
   140020b34:	jmp    0x140020b07
   140020b36:	lea    r9,[rsp+0x140]
   140020b3e:	lea    rdx,[rsp+0x30]
   140020b43:	mov    r8d,0x83
   140020b49:	mov    rcx,rbx
   140020b4c:	mov    QWORD PTR [rsp+0x28],r13
   140020b51:	mov    QWORD PTR [rsp+0x20],0x55
   140020b5a:	call   0x14001ff88
   140020b5f:	test   rax,rax
   140020b62:	je     0x140020b07
   140020b64:	mov    ebx,r13d
   140020b67:	lea    r14,[rdi+0x18]
   140020b6b:	test   ebx,ebx
   140020b6d:	je     0x140020b9b
   140020b6f:	mov    rdx,QWORD PTR [r14]
   140020b72:	lea    rcx,[rsp+0x30]
   140020b77:	call   0x140026c50
   140020b7c:	test   eax,eax
   140020b7e:	je     0x140020b99
   140020b80:	lea    r8,[rsp+0x30]
   140020b85:	mov    edx,ebx
   140020b87:	mov    rcx,rdi
   140020b8a:	call   0x140020bd8
   140020b8f:	test   rax,rax
   140020b92:	jne    0x140020b99
   140020b94:	mov    ebp,r13d
   140020b97:	jmp    0x140020b9b
   140020b99:	inc    esi
   140020b9b:	inc    ebx
   140020b9d:	add    r14,0x20
   140020ba1:	cmp    ebx,0x5
   140020ba4:	jle    0x140020b6b
   140020ba6:	test   ebp,ebp
   140020ba8:	jne    0x140020aff
   140020bae:	jmp    0x140020af7
   140020bb3:	mov    rax,r13
   140020bb6:	jmp    0x140020b07
   140020bbb:	call   0x140013d28
   140020bc0:	int3   
   140020bc1:	xor    r9d,r9d
   140020bc4:	xor    r8d,r8d
   140020bc7:	xor    edx,edx
   140020bc9:	xor    ecx,ecx
   140020bcb:	mov    QWORD PTR [rsp+0x20],r13
   140020bd0:	call   0x140008da8
   140020bd5:	int3   
   140020bd6:	int3   
   140020bd7:	int3   
   140020bd8:	mov    QWORD PTR [rsp+0x20],rbx
   140020bdd:	push   rbp
   140020bde:	push   rsi
   140020bdf:	push   rdi
   140020be0:	push   r12
   140020be2:	push   r13
   140020be4:	push   r14
   140020be6:	push   r15
   140020be8:	lea    rbp,[rsp-0x230]
   140020bf0:	sub    rsp,0x330
   140020bf7:	mov    rax,QWORD PTR [rip+0x1b5d2]        # 0x14003c1d0
   140020bfe:	xor    rax,rsp
   140020c01:	mov    QWORD PTR [rbp+0x220],rax
   140020c08:	mov    rbx,r8
   140020c0b:	movsxd r12,edx
   140020c0e:	mov    rdi,rcx
   140020c11:	call   0x14000a3ec
   140020c16:	lea    r9,[rbp+0x170]
   140020c1d:	lea    rdx,[rsp+0x60]
   140020c22:	lea    r14,[rax+0x370]
   140020c29:	lea    rax,[rsp+0x40]
   140020c2e:	mov    r8d,0x83
   140020c34:	mov    QWORD PTR [rsp+0x28],rax
   140020c39:	mov    rcx,rbx
   140020c3c:	mov    QWORD PTR [rsp+0x20],0x55
   140020c45:	call   0x14001ff88
   140020c4a:	test   rax,rax
   140020c4d:	jne    0x140020c7b
   140020c4f:	xor    eax,eax
   140020c51:	mov    rcx,QWORD PTR [rbp+0x220]
   140020c58:	xor    rcx,rsp
   140020c5b:	call   0x14000c380
   140020c60:	mov    rbx,QWORD PTR [rsp+0x388]
   140020c68:	add    rsp,0x330
   140020c6f:	pop    r15
   140020c71:	pop    r14
   140020c73:	pop    r13
   140020c75:	pop    r12
   140020c77:	pop    rdi
   140020c78:	pop    rsi
   140020c79:	pop    rbp
   140020c7a:	ret    
   140020c7b:	mov    rbx,r12
   140020c7e:	lea    rcx,[rsp+0x60]
   140020c83:	shl    rbx,0x5
   140020c87:	mov    rdx,QWORD PTR [rbx+rdi*1+0x18]
   140020c8c:	call   0x140026c50
   140020c91:	test   eax,eax
   140020c93:	jne    0x140020c9c
   140020c95:	mov    rax,QWORD PTR [rbx+rdi*1+0x18]
   140020c9a:	jmp    0x140020c51
   140020c9c:	lea    rcx,[rsp+0x60]
   140020ca1:	call   0x14001c4ac
   140020ca6:	mov    r15,rax
   140020ca9:	lea    rcx,[rax*2+0x6]
   140020cb1:	call   0x140008684
   140020cb6:	mov    r13,rax
   140020cb9:	test   rax,rax
   140020cbc:	je     0x140020c4f
   140020cbe:	mov    rcx,QWORD PTR [rbx+rdi*1+0x18]
   140020cc3:	lea    r8,[rsp+0x60]
   140020cc8:	lea    rdx,[r15+0x1]
   140020ccc:	mov    QWORD PTR [rsp+0x48],rcx
   140020cd1:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   140020cd9:	mov    QWORD PTR [rsp+0x50],rcx
   140020cde:	mov    ecx,DWORD PTR [rdi+0x4]
   140020ce1:	mov    DWORD PTR [rsp+0x44],ecx
   140020ce5:	lea    rcx,[rax+0x4]
   140020ce9:	call   0x14001c440
   140020cee:	xor    r15d,r15d
   140020cf1:	test   eax,eax
   140020cf3:	jne    0x140020ed1
   140020cf9:	cmp    WORD PTR [rsp+0x60],0x43
   140020cff:	lea    rax,[r13+0x4]
   140020d03:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   140020d08:	jne    0x140020d1c
   140020d0a:	cmp    WORD PTR [rsp+0x62],r15w
   140020d10:	jne    0x140020d1c
   140020d12:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   140020d1a:	jmp    0x140020d30
   140020d1c:	lea    rcx,[rbp+0x170]
   140020d23:	call   0x14001faf0
   140020d28:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   140020d30:	cmp    r12d,0x2
   140020d34:	jne    0x140020e10
   140020d3a:	mov    eax,DWORD PTR [rsp+0x40]
   140020d3e:	mov    r8d,r15d
   140020d41:	mov    rdx,r15
   140020d44:	mov    DWORD PTR [rdi+0x4],eax
   140020d47:	mov    rcx,QWORD PTR [r14+0x20]
   140020d4b:	mov    eax,DWORD PTR [r14+rdx*8]
   140020d4f:	cmp    DWORD PTR [rdi+0x4],eax
   140020d52:	je     0x140020d6d
   140020d54:	mov    rax,QWORD PTR [r14+rdx*8]
   140020d58:	mov    QWORD PTR [r14+rdx*8],rcx
   140020d5c:	inc    rdx
   140020d5f:	inc    r8d
   140020d62:	mov    rcx,rax
   140020d65:	cmp    rdx,0x5
   140020d69:	jl     0x140020d4b
   140020d6b:	jmp    0x140020d80
   140020d6d:	test   r8d,r8d
   140020d70:	je     0x140020d80
   140020d72:	movsxd rdx,r8d
   140020d75:	mov    rax,QWORD PTR [r14+rdx*8]
   140020d79:	mov    QWORD PTR [r14],rax
   140020d7c:	mov    QWORD PTR [r14+rdx*8],rcx
   140020d80:	cmp    r8d,0x5
   140020d84:	jne    0x140020e04
   140020d86:	mov    eax,DWORD PTR [rdi+0x4]
   140020d89:	lea    r9d,[r8+0x7a]
   140020d8d:	mov    DWORD PTR [rsp+0x30],0x1
   140020d95:	mov    DWORD PTR [rsp+0x28],eax
   140020d99:	lea    rax,[rbp+0x70]
   140020d9d:	lea    r8,[rip+0x13d3c]        # 0x140034ae0
   140020da4:	lea    edx,[r9-0x7e]
   140020da8:	xor    ecx,ecx
   140020daa:	mov    QWORD PTR [rsp+0x20],rax
   140020daf:	call   0x14001cd64
   140020db4:	test   eax,eax
   140020db6:	je     0x140020dfa
   140020db8:	mov    edx,r15d
   140020dbb:	lea    rcx,[rbp+0x70]
   140020dbf:	mov    eax,0x1ff
   140020dc4:	inc    edx
   140020dc6:	and    WORD PTR [rcx],ax
   140020dc9:	movsxd rax,edx
   140020dcc:	lea    rcx,[rcx+0x2]
   140020dd0:	cmp    rax,0x7f
   140020dd4:	jb     0x140020dbf
   140020dd6:	mov    rdx,QWORD PTR [rip+0x1c713]        # 0x14003d4f0
   140020ddd:	lea    rcx,[rbp+0x70]
   140020de1:	mov    r8d,0xfe
   140020de7:	call   0x140006e90
   140020dec:	mov    ecx,r15d
   140020def:	test   eax,eax
   140020df1:	sete   cl
   140020df4:	mov    DWORD PTR [r14+0x4],ecx
   140020df8:	jmp    0x140020dfe
   140020dfa:	mov    DWORD PTR [r14+0x4],r15d
   140020dfe:	mov    eax,DWORD PTR [rdi+0x4]
   140020e01:	mov    DWORD PTR [r14],eax
   140020e04:	mov    eax,DWORD PTR [r14+0x4]
   140020e08:	mov    DWORD PTR [rdi+0xd0],eax
   140020e0e:	jmp    0x140020e2c
   140020e10:	cmp    r12d,0x1
   140020e14:	jne    0x140020e1f
   140020e16:	mov    eax,DWORD PTR [rsp+0x40]
   140020e1a:	mov    DWORD PTR [rdi+0x8],eax
   140020e1d:	jmp    0x140020e2c
   140020e1f:	cmp    r12d,0x5
   140020e23:	jne    0x140020e2c
   140020e25:	mov    eax,DWORD PTR [rsp+0x40]
   140020e29:	mov    DWORD PTR [rdi+0xc],eax
   140020e2c:	lea    rax,[r12+r12*2]
   140020e30:	lea    rdx,[rip+0x13ba9]        # 0x1400349e0
   140020e37:	mov    rcx,rdi
   140020e3a:	call   QWORD PTR [rdx+rax*8]
   140020e3d:	test   eax,eax
   140020e3f:	je     0x140020e79
   140020e41:	mov    rax,QWORD PTR [rsp+0x48]
   140020e46:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   140020e4b:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   140020e53:	call   0x140007dc0
   140020e58:	mov    rax,QWORD PTR [rsp+0x50]
   140020e5d:	mov    rcx,r13
   140020e60:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   140020e68:	call   0x140007dc0
   140020e6d:	mov    eax,DWORD PTR [rsp+0x44]
   140020e71:	mov    DWORD PTR [rdi+0x4],eax
   140020e74:	jmp    0x140020c4f
   140020e79:	lea    rcx,[rip+0x1bf54]        # 0x14003cdd4
   140020e80:	cmp    QWORD PTR [rsp+0x48],rcx
   140020e85:	je     0x140020ebf
   140020e87:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   140020e8c:	lock dec DWORD PTR [rcx]
   140020e8f:	jne    0x140020ebf
   140020e91:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   140020e96:	call   0x140007dc0
   140020e9b:	mov    rcx,QWORD PTR [rbx+rdi*1+0x20]
   140020ea0:	call   0x140007dc0
   140020ea5:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   140020ead:	call   0x140007dc0
   140020eb2:	mov    QWORD PTR [rbx+rdi*1+0x18],r15
   140020eb7:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   140020ebf:	mov    DWORD PTR [r13+0x0],0x1
   140020ec7:	mov    QWORD PTR [rbx+rdi*1+0x28],r13
   140020ecc:	jmp    0x140020c95
   140020ed1:	xor    r9d,r9d
   140020ed4:	xor    r8d,r8d
   140020ed7:	xor    edx,edx
   140020ed9:	xor    ecx,ecx
   140020edb:	mov    QWORD PTR [rsp+0x20],r15
   140020ee0:	call   0x140008da8
   140020ee5:	int3   
   140020ee6:	int3   
   140020ee7:	int3   
   140020ee8:	mov    rcx,QWORD PTR [rip+0x1c1b1]        # 0x14003d0a0
   140020eef:	mov    rax,QWORD PTR [rcx+0xf0]
   140020ef6:	mov    QWORD PTR [rip+0x1c5b3],rax        # 0x14003d4b0
   140020efd:	mov    rax,QWORD PTR [rcx+0x108]
   140020f04:	mov    QWORD PTR [rip+0x1c5ad],rax        # 0x14003d4b8
   140020f0b:	mov    eax,DWORD PTR [rcx+0xd4]
   140020f11:	mov    DWORD PTR [rip+0x1beb9],eax        # 0x14003cdd0
   140020f17:	ret    
   140020f18:	sub    rcx,rdx
   140020f1b:	mov    r8d,0x3
   140020f21:	mov    eax,DWORD PTR [rdx]
   140020f23:	mov    DWORD PTR [rcx+rdx*1],eax
   140020f26:	lea    rdx,[rdx+0x4]
   140020f2a:	dec    r8
   140020f2d:	jne    0x140020f21
   140020f2f:	ret    
   140020f30:	and    QWORD PTR [rcx],0x0
   140020f34:	and    DWORD PTR [rcx+0x8],0x0
   140020f38:	ret    
   140020f39:	int3   
   140020f3a:	int3   
   140020f3b:	int3   
   140020f3c:	mov    r9,rcx
   140020f3f:	mov    eax,edx
   140020f41:	mov    ecx,0x1f
   140020f46:	cdq    
   140020f47:	mov    r8d,0x1
   140020f4d:	and    edx,ecx
   140020f4f:	add    eax,edx
   140020f51:	mov    r10d,eax
   140020f54:	and    eax,ecx
   140020f56:	sub    eax,edx
   140020f58:	sar    r10d,0x5
   140020f5c:	sub    ecx,eax
   140020f5e:	movsxd r11,r10d
   140020f61:	mov    eax,DWORD PTR [r9+r11*4]
   140020f65:	shl    r8d,cl
   140020f68:	xor    ecx,ecx
   140020f6a:	lea    edx,[rax+r8*1]
   140020f6e:	cmp    edx,eax
   140020f70:	jb     0x140020f77
   140020f72:	cmp    edx,r8d
   140020f75:	jae    0x140020f7c
   140020f77:	mov    ecx,0x1
   140020f7c:	lea    eax,[r10-0x1]
   140020f80:	mov    DWORD PTR [r9+r11*4],edx
   140020f84:	movsxd rdx,eax
   140020f87:	test   eax,eax
   140020f89:	js     0x140020fb2
   140020f8b:	test   ecx,ecx
   140020f8d:	je     0x140020fb2
   140020f8f:	mov    eax,DWORD PTR [r9+rdx*4]
   140020f93:	xor    ecx,ecx
   140020f95:	lea    r8d,[rax+0x1]
   140020f99:	cmp    r8d,eax
   140020f9c:	jb     0x140020fa4
   140020f9e:	cmp    r8d,0x1
   140020fa2:	jae    0x140020fa9
   140020fa4:	mov    ecx,0x1
   140020fa9:	mov    DWORD PTR [r9+rdx*4],r8d
   140020fad:	dec    rdx
   140020fb0:	jns    0x140020f8b
   140020fb2:	mov    eax,ecx
   140020fb4:	ret    
   140020fb5:	int3   
   140020fb6:	int3   
   140020fb7:	int3   
   140020fb8:	xor    edx,edx
   140020fba:	cmp    DWORD PTR [rcx+rdx*4],0x0
   140020fbe:	jne    0x140020fcf
   140020fc0:	inc    rdx
   140020fc3:	cmp    rdx,0x3
   140020fc7:	jl     0x140020fba
   140020fc9:	mov    eax,0x1
   140020fce:	ret    
   140020fcf:	xor    eax,eax
   140020fd1:	ret    
   140020fd2:	int3   
   140020fd3:	int3   
   140020fd4:	mov    QWORD PTR [rsp+0x8],rbx
   140020fd9:	mov    QWORD PTR [rsp+0x10],rbp
   140020fde:	mov    QWORD PTR [rsp+0x18],rsi
   140020fe3:	push   rdi
   140020fe4:	push   r14
   140020fe6:	push   r15
   140020fe8:	sub    rsp,0x20
   140020fec:	lea    r10d,[rdx-0x1]
   140020ff0:	xor    ebx,ebx
   140020ff2:	or     r11d,0xffffffff
   140020ff6:	lea    esi,[rbx+0x1f]
   140020ff9:	lea    eax,[r10+0x1]
   140020ffd:	mov    r8,rcx
   140021000:	cdq    
   140021001:	mov    r14d,esi
   140021004:	lea    r9d,[rbx+0x3]
   140021008:	and    edx,esi
   14002100a:	add    eax,edx
   14002100c:	mov    edi,eax
   14002100e:	and    eax,esi
   140021010:	sub    eax,edx
   140021012:	sar    edi,0x5
   140021015:	sub    r14d,eax
   140021018:	movsxd r15,edi
   14002101b:	mov    eax,DWORD PTR [rcx+r15*4]
   14002101f:	bt     eax,r14d
   140021023:	jae    0x1400210c5
   140021029:	mov    ecx,r14d
   14002102c:	mov    edx,r11d
   14002102f:	movsxd rax,edi
   140021032:	shl    edx,cl
   140021034:	not    edx
   140021036:	test   DWORD PTR [r8+rax*4],edx
   14002103a:	jne    0x140021054
   14002103c:	lea    eax,[rdi+0x1]
   14002103f:	movsxd rcx,eax
   140021042:	jmp    0x14002104d
   140021044:	cmp    DWORD PTR [r8+rcx*4],ebx
   140021048:	jne    0x140021054
   14002104a:	inc    rcx
   14002104d:	cmp    rcx,r9
   140021050:	jl     0x140021044
   140021052:	jmp    0x1400210c5
   140021054:	mov    eax,r10d
   140021057:	mov    r10d,0x1
   14002105d:	cdq    
   14002105e:	and    edx,esi
   140021060:	add    eax,edx
   140021062:	mov    ebp,eax
   140021064:	and    eax,esi
   140021066:	sub    eax,edx
   140021068:	sar    ebp,0x5
   14002106b:	sub    esi,eax
   14002106d:	mov    cl,sil
   140021070:	movsxd rsi,ebp
   140021073:	mov    eax,DWORD PTR [r8+rsi*4]
   140021077:	shl    r10d,cl
   14002107a:	mov    ecx,ebx
   14002107c:	lea    edx,[rax+r10*1]
   140021080:	cmp    edx,eax
   140021082:	jb     0x140021089
   140021084:	cmp    edx,r10d
   140021087:	jae    0x14002108e
   140021089:	mov    ecx,0x1
   14002108e:	lea    eax,[rbp-0x1]
   140021091:	mov    DWORD PTR [r8+rsi*4],edx
   140021095:	movsxd rdx,eax
   140021098:	test   eax,eax
   14002109a:	js     0x1400210c3
   14002109c:	test   ecx,ecx
   14002109e:	je     0x1400210c3
   1400210a0:	mov    eax,DWORD PTR [r8+rdx*4]
   1400210a4:	mov    ecx,ebx
   1400210a6:	lea    r10d,[rax+0x1]
   1400210aa:	cmp    r10d,eax
   1400210ad:	jb     0x1400210b5
   1400210af:	cmp    r10d,0x1
   1400210b3:	jae    0x1400210ba
   1400210b5:	mov    ecx,0x1
   1400210ba:	mov    DWORD PTR [r8+rdx*4],r10d
   1400210be:	dec    rdx
   1400210c1:	jns    0x14002109c
   1400210c3:	mov    ebx,ecx
   1400210c5:	lea    eax,[rdi+0x1]
   1400210c8:	mov    ecx,r14d
   1400210cb:	shl    r11d,cl
   1400210ce:	movsxd rdx,eax
   1400210d1:	and    DWORD PTR [r8+r15*4],r11d
   1400210d5:	cmp    rdx,r9
   1400210d8:	jge    0x1400210ef
   1400210da:	sub    r9,rdx
   1400210dd:	lea    rcx,[r8+rdx*4]
   1400210e1:	xor    edx,edx
   1400210e3:	shl    r9,0x2
   1400210e7:	mov    r8,r9
   1400210ea:	call   0x140006f70
   1400210ef:	mov    rbp,QWORD PTR [rsp+0x48]
   1400210f4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400210f9:	mov    eax,ebx
   1400210fb:	mov    rbx,QWORD PTR [rsp+0x40]
   140021100:	add    rsp,0x20
   140021104:	pop    r15
   140021106:	pop    r14
   140021108:	pop    rdi
   140021109:	ret    
   14002110a:	int3   
   14002110b:	int3   
   14002110c:	mov    rax,rsp
   14002110f:	mov    QWORD PTR [rax+0x8],rbx
   140021113:	mov    QWORD PTR [rax+0x10],rbp
   140021117:	mov    QWORD PTR [rax+0x18],rsi
   14002111b:	mov    QWORD PTR [rax+0x20],rdi
   14002111f:	xor    r9d,r9d
   140021122:	or     r10d,0xffffffff
   140021126:	mov    eax,edx
   140021128:	cdq    
   140021129:	mov    rbx,rcx
   14002112c:	lea    ebp,[r9+0x20]
   140021130:	and    edx,0x1f
   140021133:	mov    r8,rbx
   140021136:	lea    edi,[r9+0x3]
   14002113a:	add    eax,edx
   14002113c:	mov    r11d,eax
   14002113f:	and    eax,0x1f
   140021142:	sub    eax,edx
   140021144:	sar    r11d,0x5
   140021148:	mov    ecx,eax
   14002114a:	mov    esi,eax
   14002114c:	shl    r10d,cl
   14002114f:	sub    ebp,eax
   140021151:	not    r10d
   140021154:	mov    eax,DWORD PTR [r8]
   140021157:	mov    ecx,esi
   140021159:	mov    edx,eax
   14002115b:	shr    eax,cl
   14002115d:	mov    ecx,ebp
   14002115f:	or     eax,r9d
   140021162:	and    edx,r10d
   140021165:	mov    r9d,edx
   140021168:	mov    DWORD PTR [r8],eax
   14002116b:	lea    r8,[r8+0x4]
   14002116f:	shl    r9d,cl
   140021172:	dec    rdi
   140021175:	jne    0x140021154
   140021177:	movsxd r9,r11d
   14002117a:	lea    edx,[rdi+0x2]
   14002117d:	lea    rcx,[rbx+0x8]
   140021181:	mov    r8,r9
   140021184:	neg    r8
   140021187:	cmp    rdx,r9
   14002118a:	jl     0x140021194
   14002118c:	mov    eax,DWORD PTR [rcx+r8*4]
   140021190:	mov    DWORD PTR [rcx],eax
   140021192:	jmp    0x140021197
   140021194:	and    DWORD PTR [rcx],0x0
   140021197:	sub    rcx,0x4
   14002119b:	dec    rdx
   14002119e:	jns    0x140021187
   1400211a0:	mov    rbx,QWORD PTR [rsp+0x8]
   1400211a5:	mov    rbp,QWORD PTR [rsp+0x10]
   1400211aa:	mov    rsi,QWORD PTR [rsp+0x18]
   1400211af:	mov    rdi,QWORD PTR [rsp+0x20]
   1400211b4:	ret    
   1400211b5:	int3   
   1400211b6:	int3   
   1400211b7:	int3   
   1400211b8:	mov    eax,edx
   1400211ba:	mov    r9,rcx
   1400211bd:	mov    ecx,0x1f
   1400211c2:	cdq    
   1400211c3:	and    edx,ecx
   1400211c5:	add    eax,edx
   1400211c7:	mov    r8d,eax
   1400211ca:	and    eax,ecx
   1400211cc:	sub    eax,edx
   1400211ce:	or     edx,0xffffffff
   1400211d1:	sar    r8d,0x5
   1400211d5:	sub    ecx,eax
   1400211d7:	movsxd rax,r8d
   1400211da:	shl    edx,cl
   1400211dc:	not    edx
   1400211de:	test   DWORD PTR [r9+rax*4],edx
   1400211e2:	je     0x1400211e7
   1400211e4:	xor    eax,eax
   1400211e6:	ret    
   1400211e7:	lea    eax,[r8+0x1]
   1400211eb:	movsxd rcx,eax
   1400211ee:	jmp    0x1400211fa
   1400211f0:	cmp    DWORD PTR [r9+rcx*4],0x0
   1400211f5:	jne    0x1400211e4
   1400211f7:	inc    rcx
   1400211fa:	cmp    rcx,0x3
   1400211fe:	jl     0x1400211f0
   140021200:	mov    eax,0x1
   140021205:	ret    
   140021206:	int3   
   140021207:	int3   
   140021208:	lea    r9d,[rcx+rdx*1]
   14002120c:	xor    eax,eax
   14002120e:	cmp    r9d,ecx
   140021211:	jb     0x140021218
   140021213:	cmp    r9d,edx
   140021216:	jae    0x14002121d
   140021218:	mov    eax,0x1
   14002121d:	mov    DWORD PTR [r8],r9d
   140021220:	ret    
   140021221:	int3   
   140021222:	int3   
   140021223:	int3   
   140021224:	mov    QWORD PTR [rsp+0x8],rbx
   140021229:	push   rbp
   14002122a:	push   rsi
   14002122b:	push   rdi
   14002122c:	push   r12
   14002122e:	push   r13
   140021230:	push   r14
   140021232:	push   r15
   140021234:	mov    rbp,rsp
   140021237:	sub    rsp,0x70
   14002123b:	mov    rax,QWORD PTR [rip+0x1af8e]        # 0x14003c1d0
   140021242:	xor    rax,rsp
   140021245:	mov    QWORD PTR [rbp-0x10],rax
   140021249:	movzx  eax,WORD PTR [rcx+0xa]
   14002124d:	movzx  r11d,WORD PTR [rcx]
   140021251:	xor    ebx,ebx
   140021253:	mov    edi,eax
   140021255:	and    eax,0x8000
   14002125a:	shl    r11d,0x10
   14002125e:	mov    DWORD PTR [rbp-0x40],eax
   140021261:	mov    eax,DWORD PTR [rcx+0x6]
   140021264:	and    edi,0x7fff
   14002126a:	mov    DWORD PTR [rbp-0x20],eax
   14002126d:	mov    eax,DWORD PTR [rcx+0x2]
   140021270:	sub    edi,0x3fff
   140021276:	mov    r13d,0x1f
   14002127c:	mov    r9,r8
   14002127f:	mov    QWORD PTR [rbp-0x48],r8
   140021283:	mov    DWORD PTR [rbp-0x1c],eax
   140021286:	mov    QWORD PTR [rbp-0x38],rdx
   14002128a:	mov    DWORD PTR [rbp-0x2c],r11d
   14002128e:	mov    DWORD PTR [rbp-0x18],r11d
   140021292:	lea    esi,[rbx+0x1]
   140021295:	lea    r14d,[r13-0x1c]
   140021299:	cmp    edi,0xffffc001
   14002129f:	jne    0x1400212ca
   1400212a1:	mov    r8d,ebx
   1400212a4:	mov    eax,ebx
   1400212a6:	cmp    DWORD PTR [rbp+rax*4-0x20],ebx
   1400212aa:	jne    0x1400212b9
   1400212ac:	add    rax,rsi
   1400212af:	cmp    rax,r14
   1400212b2:	jl     0x1400212a6
   1400212b4:	jmp    0x14002176b
   1400212b9:	mov    QWORD PTR [rbp-0x20],rbx
   1400212bd:	mov    DWORD PTR [rbp-0x18],ebx
   1400212c0:	mov    ebx,0x2
   1400212c5:	jmp    0x14002176b
   1400212ca:	mov    rax,QWORD PTR [rbp-0x20]
   1400212ce:	or     r15d,0xffffffff
   1400212d2:	mov    DWORD PTR [rbp-0x50],edi
   1400212d5:	mov    QWORD PTR [rbp-0x28],rax
   1400212d9:	mov    eax,DWORD PTR [r8+0x8]
   1400212dd:	mov    r8d,r13d
   1400212e0:	dec    eax
   1400212e2:	mov    r12d,ebx
   1400212e5:	mov    DWORD PTR [rbp-0x4c],eax
   1400212e8:	inc    eax
   1400212ea:	cdq    
   1400212eb:	and    edx,r13d
   1400212ee:	add    eax,edx
   1400212f0:	mov    r9d,eax
   1400212f3:	and    eax,r13d
   1400212f6:	sar    r9d,0x5
   1400212fa:	sub    eax,edx
   1400212fc:	sub    r8d,eax
   1400212ff:	movsxd r10,r9d
   140021302:	mov    ecx,DWORD PTR [rbp+r10*4-0x20]
   140021307:	mov    DWORD PTR [rbp-0x30],r8d
   14002130b:	bt     ecx,r8d
   14002130f:	jae    0x1400213b3
   140021315:	mov    ecx,r8d
   140021318:	mov    eax,r15d
   14002131b:	movsxd rdx,r9d
   14002131e:	shl    eax,cl
   140021320:	not    eax
   140021322:	test   DWORD PTR [rbp+rdx*4-0x20],eax
   140021326:	jne    0x140021341
   140021328:	lea    eax,[r9+0x1]
   14002132c:	movsxd rcx,eax
   14002132f:	jmp    0x14002133a
   140021331:	cmp    DWORD PTR [rbp+rcx*4-0x20],ebx
   140021335:	jne    0x140021341
   140021337:	add    rcx,rsi
   14002133a:	cmp    rcx,r14
   14002133d:	jl     0x140021331
   14002133f:	jmp    0x1400213b3
   140021341:	mov    eax,DWORD PTR [rbp-0x4c]
   140021344:	mov    ecx,r13d
   140021347:	cdq    
   140021348:	and    edx,r13d
   14002134b:	add    eax,edx
   14002134d:	mov    r8d,eax
   140021350:	and    eax,r13d
   140021353:	sub    eax,edx
   140021355:	sar    r8d,0x5
   140021359:	mov    edx,esi
   14002135b:	sub    ecx,eax
   14002135d:	movsxd r10,r8d
   140021360:	mov    eax,DWORD PTR [rbp+r10*4-0x20]
   140021365:	shl    edx,cl
   140021367:	lea    ecx,[rax+rdx*1]
   14002136a:	cmp    ecx,eax
   14002136c:	jb     0x140021372
   14002136e:	cmp    ecx,edx
   140021370:	jae    0x140021375
   140021372:	mov    r12d,esi
   140021375:	lea    eax,[r8-0x1]
   140021379:	mov    DWORD PTR [rbp+r10*4-0x20],ecx
   14002137e:	movsxd rdx,eax
   140021381:	test   eax,eax
   140021383:	js     0x1400213ac
   140021385:	test   r12d,r12d
   140021388:	je     0x1400213ac
   14002138a:	mov    eax,DWORD PTR [rbp+rdx*4-0x20]
   14002138e:	mov    r12d,ebx
   140021391:	lea    r8d,[rax+0x1]
   140021395:	cmp    r8d,eax
   140021398:	jb     0x14002139f
   14002139a:	cmp    r8d,esi
   14002139d:	jae    0x1400213a2
   14002139f:	mov    r12d,esi
   1400213a2:	mov    DWORD PTR [rbp+rdx*4-0x20],r8d
   1400213a7:	sub    rdx,rsi
   1400213aa:	jns    0x140021385
   1400213ac:	mov    r8d,DWORD PTR [rbp-0x30]
   1400213b0:	movsxd r10,r9d
   1400213b3:	mov    ecx,r8d
   1400213b6:	mov    eax,r15d
   1400213b9:	shl    eax,cl
   1400213bb:	and    DWORD PTR [rbp+r10*4-0x20],eax
   1400213c0:	lea    eax,[r9+0x1]
   1400213c4:	movsxd rdx,eax
   1400213c7:	cmp    rdx,r14
   1400213ca:	jge    0x1400213e9
   1400213cc:	lea    rcx,[rbp-0x20]
   1400213d0:	mov    r8,r14
   1400213d3:	sub    r8,rdx
   1400213d6:	lea    rcx,[rcx+rdx*4]
   1400213da:	xor    edx,edx
   1400213dc:	shl    r8,0x2
   1400213e0:	call   0x140006f70
   1400213e5:	mov    r11d,DWORD PTR [rbp-0x2c]
   1400213e9:	test   r12d,r12d
   1400213ec:	je     0x1400213f0
   1400213ee:	add    edi,esi
   1400213f0:	mov    r9,QWORD PTR [rbp-0x48]
   1400213f4:	mov    ecx,DWORD PTR [r9+0x4]
   1400213f8:	mov    eax,ecx
   1400213fa:	sub    eax,DWORD PTR [r9+0x8]
   1400213fe:	cmp    edi,eax
   140021400:	jge    0x140021416
   140021402:	mov    QWORD PTR [rbp-0x20],rbx
   140021406:	mov    DWORD PTR [rbp-0x18],ebx
   140021409:	mov    r8d,ebx
   14002140c:	mov    ebx,0x2
   140021411:	jmp    0x140021767
   140021416:	cmp    edi,ecx
   140021418:	jg     0x140021650
   14002141e:	sub    ecx,DWORD PTR [rbp-0x50]
   140021421:	mov    rax,QWORD PTR [rbp-0x28]
   140021425:	mov    r10d,r15d
   140021428:	mov    QWORD PTR [rbp-0x20],rax
   14002142c:	mov    eax,ecx
   14002142e:	mov    DWORD PTR [rbp-0x18],r11d
   140021432:	cdq    
   140021433:	mov    r11,r14
   140021436:	mov    r9d,ebx
   140021439:	and    edx,r13d
   14002143c:	lea    r8,[rbp-0x20]
   140021440:	add    eax,edx
   140021442:	mov    r12d,eax
   140021445:	and    eax,r13d
   140021448:	sub    eax,edx
   14002144a:	sar    r12d,0x5
   14002144e:	mov    ecx,eax
   140021450:	mov    edi,eax
   140021452:	mov    eax,0x20
   140021457:	shl    r10d,cl
   14002145a:	sub    eax,ecx
   14002145c:	mov    r14d,eax
   14002145f:	not    r10d
   140021462:	mov    eax,DWORD PTR [r8]
   140021465:	mov    ecx,edi
   140021467:	mov    edx,eax
   140021469:	shr    eax,cl
   14002146b:	mov    ecx,r14d
   14002146e:	or     eax,r9d
   140021471:	and    edx,r10d
   140021474:	mov    r9d,edx
   140021477:	mov    DWORD PTR [r8],eax
   14002147a:	lea    r8,[r8+0x4]
   14002147e:	shl    r9d,cl
   140021481:	sub    r11,rsi
   140021484:	jne    0x140021462
   140021486:	movsxd r10,r12d
   140021489:	lea    edi,[r11+0x2]
   14002148d:	lea    r14d,[r11+0x3]
   140021491:	mov    r9,r10
   140021494:	mov    r8d,edi
   140021497:	neg    r9
   14002149a:	cmp    r8,r10
   14002149d:	jl     0x1400214b4
   14002149f:	mov    rdx,r8
   1400214a2:	shl    rdx,0x2
   1400214a6:	lea    rax,[rdx+r9*4]
   1400214aa:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   1400214ae:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   1400214b2:	jmp    0x1400214b9
   1400214b4:	mov    DWORD PTR [rbp+r8*4-0x20],ebx
   1400214b9:	sub    r8,rsi
   1400214bc:	jns    0x14002149a
   1400214be:	mov    r8d,DWORD PTR [rbp-0x4c]
   1400214c2:	mov    r11d,r13d
   1400214c5:	lea    eax,[r8+0x1]
   1400214c9:	cdq    
   1400214ca:	and    edx,r13d
   1400214cd:	add    eax,edx
   1400214cf:	mov    r9d,eax
   1400214d2:	and    eax,r13d
   1400214d5:	sub    eax,edx
   1400214d7:	sar    r9d,0x5
   1400214db:	sub    r11d,eax
   1400214de:	movsxd rax,r9d
   1400214e1:	mov    ecx,DWORD PTR [rbp+rax*4-0x20]
   1400214e5:	bt     ecx,r11d
   1400214e9:	jae    0x140021587
   1400214ef:	mov    ecx,r11d
   1400214f2:	mov    eax,r15d
   1400214f5:	movsxd rdx,r9d
   1400214f8:	shl    eax,cl
   1400214fa:	not    eax
   1400214fc:	test   DWORD PTR [rbp+rdx*4-0x20],eax
   140021500:	jne    0x14002151b
   140021502:	lea    eax,[r9+0x1]
   140021506:	movsxd rcx,eax
   140021509:	jmp    0x140021514
   14002150b:	cmp    DWORD PTR [rbp+rcx*4-0x20],ebx
   14002150f:	jne    0x14002151b
   140021511:	add    rcx,rsi
   140021514:	cmp    rcx,r14
   140021517:	jl     0x14002150b
   140021519:	jmp    0x140021587
   14002151b:	mov    eax,r8d
   14002151e:	mov    ecx,r13d
   140021521:	cdq    
   140021522:	and    edx,r13d
   140021525:	add    eax,edx
   140021527:	mov    r10d,eax
   14002152a:	and    eax,r13d
   14002152d:	sub    eax,edx
   14002152f:	sar    r10d,0x5
   140021533:	mov    edx,esi
   140021535:	sub    ecx,eax
   140021537:	movsxd r12,r10d
   14002153a:	mov    eax,DWORD PTR [rbp+r12*4-0x20]
   14002153f:	shl    edx,cl
   140021541:	mov    ecx,ebx
   140021543:	lea    r8d,[rax+rdx*1]
   140021547:	cmp    r8d,eax
   14002154a:	jb     0x140021551
   14002154c:	cmp    r8d,edx
   14002154f:	jae    0x140021553
   140021551:	mov    ecx,esi
   140021553:	lea    eax,[r10-0x1]
   140021557:	mov    DWORD PTR [rbp+r12*4-0x20],r8d
   14002155c:	movsxd rdx,eax
   14002155f:	test   eax,eax
   140021561:	js     0x140021587
   140021563:	test   ecx,ecx
   140021565:	je     0x140021587
   140021567:	mov    eax,DWORD PTR [rbp+rdx*4-0x20]
   14002156b:	mov    ecx,ebx
   14002156d:	lea    r8d,[rax+0x1]
   140021571:	cmp    r8d,eax
   140021574:	jb     0x14002157b
   140021576:	cmp    r8d,esi
   140021579:	jae    0x14002157d
   14002157b:	mov    ecx,esi
   14002157d:	mov    DWORD PTR [rbp+rdx*4-0x20],r8d
   140021582:	sub    rdx,rsi
   140021585:	jns    0x140021563
   140021587:	mov    ecx,r11d
   14002158a:	mov    eax,r15d
   14002158d:	shl    eax,cl
   14002158f:	movsxd rcx,r9d
   140021592:	and    DWORD PTR [rbp+rcx*4-0x20],eax
   140021596:	lea    eax,[r9+0x1]
   14002159a:	movsxd rdx,eax
   14002159d:	cmp    rdx,r14
   1400215a0:	jge    0x1400215bb
   1400215a2:	lea    rcx,[rbp-0x20]
   1400215a6:	mov    r8,r14
   1400215a9:	sub    r8,rdx
   1400215ac:	lea    rcx,[rcx+rdx*4]
   1400215b0:	xor    edx,edx
   1400215b2:	shl    r8,0x2
   1400215b6:	call   0x140006f70
   1400215bb:	mov    rax,QWORD PTR [rbp-0x48]
   1400215bf:	mov    r12d,0x20
   1400215c5:	mov    r9d,ebx
   1400215c8:	mov    eax,DWORD PTR [rax+0xc]
   1400215cb:	lea    r8,[rbp-0x20]
   1400215cf:	add    eax,esi
   1400215d1:	cdq    
   1400215d2:	and    edx,r13d
   1400215d5:	add    eax,edx
   1400215d7:	mov    r10d,eax
   1400215da:	and    eax,r13d
   1400215dd:	sub    eax,edx
   1400215df:	sar    r10d,0x5
   1400215e3:	mov    ecx,eax
   1400215e5:	mov    r11d,eax
   1400215e8:	shl    r15d,cl
   1400215eb:	sub    r12d,eax
   1400215ee:	not    r15d
   1400215f1:	mov    eax,DWORD PTR [r8]
   1400215f4:	mov    ecx,r11d
   1400215f7:	mov    edx,eax
   1400215f9:	shr    eax,cl
   1400215fb:	mov    ecx,r12d
   1400215fe:	or     eax,r9d
   140021601:	and    edx,r15d
   140021604:	mov    r9d,edx
   140021607:	mov    DWORD PTR [r8],eax
   14002160a:	lea    r8,[r8+0x4]
   14002160e:	shl    r9d,cl
   140021611:	sub    r14,rsi
   140021614:	jne    0x1400215f1
   140021616:	movsxd r10,r10d
   140021619:	mov    r8,rdi
   14002161c:	mov    r9,r10
   14002161f:	neg    r9
   140021622:	cmp    r8,r10
   140021625:	jl     0x14002163c
   140021627:	mov    rdx,r8
   14002162a:	shl    rdx,0x2
   14002162e:	lea    rax,[rdx+r9*4]
   140021632:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   140021636:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14002163a:	jmp    0x140021641
   14002163c:	mov    DWORD PTR [rbp+r8*4-0x20],ebx
   140021641:	sub    r8,rsi
   140021644:	jns    0x140021622
   140021646:	mov    r8d,ebx
   140021649:	mov    ebx,edi
   14002164b:	jmp    0x140021763
   140021650:	mov    eax,DWORD PTR [r9+0xc]
   140021654:	mov    r10d,DWORD PTR [r9]
   140021657:	mov    r12d,0x20
   14002165d:	cdq    
   14002165e:	and    edx,r13d
   140021661:	add    eax,edx
   140021663:	mov    r11d,eax
   140021666:	and    eax,r13d
   140021669:	sub    eax,edx
   14002166b:	sar    r11d,0x5
   14002166f:	mov    ecx,eax
   140021671:	shl    r15d,cl
   140021674:	not    r15d
   140021677:	cmp    edi,r10d
   14002167a:	jl     0x1400216f7
   14002167c:	mov    QWORD PTR [rbp-0x20],rbx
   140021680:	bts    DWORD PTR [rbp-0x20],0x1f
   140021685:	mov    DWORD PTR [rbp-0x18],ebx
   140021688:	sub    r12d,eax
   14002168b:	mov    edi,eax
   14002168d:	mov    r9d,ebx
   140021690:	lea    r8,[rbp-0x20]
   140021694:	mov    eax,DWORD PTR [r8]
   140021697:	mov    ecx,edi
   140021699:	mov    edx,r15d
   14002169c:	and    edx,eax
   14002169e:	shr    eax,cl
   1400216a0:	mov    ecx,r12d
   1400216a3:	or     eax,r9d
   1400216a6:	mov    r9d,edx
   1400216a9:	shl    r9d,cl
   1400216ac:	mov    DWORD PTR [r8],eax
   1400216af:	lea    r8,[r8+0x4]
   1400216b3:	sub    r14,rsi
   1400216b6:	jne    0x140021694
   1400216b8:	movsxd r9,r11d
   1400216bb:	lea    edi,[r14+0x2]
   1400216bf:	mov    r8,r9
   1400216c2:	neg    r8
   1400216c5:	cmp    rdi,r9
   1400216c8:	jl     0x1400216df
   1400216ca:	mov    rdx,rdi
   1400216cd:	shl    rdx,0x2
   1400216d1:	lea    rax,[rdx+r8*4]
   1400216d5:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   1400216d9:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   1400216dd:	jmp    0x1400216e3
   1400216df:	mov    DWORD PTR [rbp+rdi*4-0x20],ebx
   1400216e3:	sub    rdi,rsi
   1400216e6:	jns    0x1400216c5
   1400216e8:	mov    r9,QWORD PTR [rbp-0x48]
   1400216ec:	mov    ebx,esi
   1400216ee:	mov    r8d,DWORD PTR [r9+0x14]
   1400216f2:	add    r8d,r10d
   1400216f5:	jmp    0x140021767
   1400216f7:	mov    r8d,DWORD PTR [r9+0x14]
   1400216fb:	btr    DWORD PTR [rbp-0x20],0x1f
   140021700:	mov    r10d,ebx
   140021703:	add    r8d,edi
   140021706:	mov    edi,eax
   140021708:	sub    r12d,eax
   14002170b:	lea    r9,[rbp-0x20]
   14002170f:	mov    eax,DWORD PTR [r9]
   140021712:	mov    ecx,edi
   140021714:	mov    edx,eax
   140021716:	shr    eax,cl
   140021718:	mov    ecx,r12d
   14002171b:	or     eax,r10d
   14002171e:	and    edx,r15d
   140021721:	mov    r10d,edx
   140021724:	mov    DWORD PTR [r9],eax
   140021727:	lea    r9,[r9+0x4]
   14002172b:	shl    r10d,cl
   14002172e:	sub    r14,rsi
   140021731:	jne    0x14002170f
   140021733:	movsxd r10,r11d
   140021736:	lea    edi,[r14+0x2]
   14002173a:	mov    r9,r10
   14002173d:	neg    r9
   140021740:	cmp    rdi,r10
   140021743:	jl     0x14002175a
   140021745:	mov    rdx,rdi
   140021748:	shl    rdx,0x2
   14002174c:	lea    rax,[rdx+r9*4]
   140021750:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   140021754:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   140021758:	jmp    0x14002175e
   14002175a:	mov    DWORD PTR [rbp+rdi*4-0x20],ebx
   14002175e:	sub    rdi,rsi
   140021761:	jns    0x140021740
   140021763:	mov    r9,QWORD PTR [rbp-0x48]
   140021767:	mov    rdx,QWORD PTR [rbp-0x38]
   14002176b:	sub    r13d,DWORD PTR [r9+0xc]
   14002176f:	mov    cl,r13b
   140021772:	shl    r8d,cl
   140021775:	neg    DWORD PTR [rbp-0x40]
   140021778:	sbb    eax,eax
   14002177a:	and    eax,0x80000000
   14002177f:	or     r8d,eax
   140021782:	or     r8d,DWORD PTR [rbp-0x20]
   140021786:	cmp    DWORD PTR [r9+0x10],0x40
   14002178b:	jne    0x140021798
   14002178d:	mov    eax,DWORD PTR [rbp-0x1c]
   140021790:	mov    DWORD PTR [rdx+0x4],r8d
   140021794:	mov    DWORD PTR [rdx],eax
   140021796:	jmp    0x1400217a2
   140021798:	cmp    DWORD PTR [r9+0x10],0x20
   14002179d:	jne    0x1400217a2
   14002179f:	mov    DWORD PTR [rdx],r8d
   1400217a2:	mov    eax,ebx
   1400217a4:	mov    rcx,QWORD PTR [rbp-0x10]
   1400217a8:	xor    rcx,rsp
   1400217ab:	call   0x14000c380
   1400217b0:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400217b8:	add    rsp,0x70
   1400217bc:	pop    r15
   1400217be:	pop    r14
   1400217c0:	pop    r13
   1400217c2:	pop    r12
   1400217c4:	pop    rdi
   1400217c5:	pop    rsi
   1400217c6:	pop    rbp
   1400217c7:	ret    
   1400217c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400217cd:	mov    QWORD PTR [rsp+0x18],rsi
   1400217d2:	mov    QWORD PTR [rsp+0x20],rdi
   1400217d7:	push   rbp
   1400217d8:	push   r12
   1400217da:	push   r13
   1400217dc:	push   r14
   1400217de:	push   r15
   1400217e0:	mov    rbp,rsp
   1400217e3:	sub    rsp,0x60
   1400217e7:	mov    rax,QWORD PTR [rip+0x1a9e2]        # 0x14003c1d0
   1400217ee:	xor    rax,rsp
   1400217f1:	mov    QWORD PTR [rbp-0x8],rax
   1400217f5:	movzx  eax,WORD PTR [rcx+0xa]
   1400217f9:	movzx  r9d,WORD PTR [rcx]
   1400217fd:	xor    ebx,ebx
   1400217ff:	mov    edi,eax
   140021801:	and    eax,0x8000
   140021806:	shl    r9d,0x10
   14002180a:	mov    DWORD PTR [rbp-0x3c],eax
   14002180d:	mov    eax,DWORD PTR [rcx+0x6]
   140021810:	and    edi,0x7fff
   140021816:	mov    DWORD PTR [rbp-0x18],eax
   140021819:	mov    eax,DWORD PTR [rcx+0x2]
   14002181c:	sub    edi,0x3fff
   140021822:	mov    r12d,0x1f
   140021828:	mov    QWORD PTR [rbp-0x30],rdx
   14002182c:	mov    DWORD PTR [rbp-0x28],r9d
   140021830:	mov    DWORD PTR [rbp-0x14],eax
   140021833:	mov    DWORD PTR [rbp-0x10],r9d
   140021837:	lea    esi,[rbx+0x1]
   14002183a:	lea    r14d,[r12-0x1c]
   14002183f:	cmp    edi,0xffffc001
   140021845:	jne    0x140021870
   140021847:	mov    r8d,ebx
   14002184a:	mov    eax,ebx
   14002184c:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   140021850:	jne    0x14002185f
   140021852:	add    rax,rsi
   140021855:	cmp    rax,r14
   140021858:	jl     0x14002184c
   14002185a:	jmp    0x140021d16
   14002185f:	mov    QWORD PTR [rbp-0x18],rbx
   140021863:	mov    DWORD PTR [rbp-0x10],ebx
   140021866:	mov    ebx,0x2
   14002186b:	jmp    0x140021d16
   140021870:	mov    rax,QWORD PTR [rbp-0x18]
   140021874:	mov    r8d,r12d
   140021877:	or     r15d,0xffffffff
   14002187b:	mov    QWORD PTR [rbp-0x20],rax
   14002187f:	mov    eax,DWORD PTR [rip+0x1bc7b]        # 0x14003d500
   140021885:	mov    DWORD PTR [rbp-0x40],edi
   140021888:	dec    eax
   14002188a:	mov    r13d,ebx
   14002188d:	mov    DWORD PTR [rbp-0x38],eax
   140021890:	inc    eax
   140021892:	cdq    
   140021893:	and    edx,r12d
   140021896:	add    eax,edx
   140021898:	mov    r10d,eax
   14002189b:	and    eax,r12d
   14002189e:	sar    r10d,0x5
   1400218a2:	sub    eax,edx
   1400218a4:	sub    r8d,eax
   1400218a7:	movsxd r11,r10d
   1400218aa:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   1400218af:	mov    DWORD PTR [rbp-0x24],r8d
   1400218b3:	bt     ecx,r8d
   1400218b7:	jae    0x14002195b
   1400218bd:	mov    ecx,r8d
   1400218c0:	mov    eax,r15d
   1400218c3:	movsxd rdx,r10d
   1400218c6:	shl    eax,cl
   1400218c8:	not    eax
   1400218ca:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   1400218ce:	jne    0x1400218e9
   1400218d0:	lea    eax,[r10+0x1]
   1400218d4:	movsxd rcx,eax
   1400218d7:	jmp    0x1400218e2
   1400218d9:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   1400218dd:	jne    0x1400218e9
   1400218df:	add    rcx,rsi
   1400218e2:	cmp    rcx,r14
   1400218e5:	jl     0x1400218d9
   1400218e7:	jmp    0x14002195b
   1400218e9:	mov    eax,DWORD PTR [rbp-0x38]
   1400218ec:	mov    ecx,r12d
   1400218ef:	cdq    
   1400218f0:	and    edx,r12d
   1400218f3:	add    eax,edx
   1400218f5:	mov    r8d,eax
   1400218f8:	and    eax,r12d
   1400218fb:	sub    eax,edx
   1400218fd:	sar    r8d,0x5
   140021901:	mov    edx,esi
   140021903:	sub    ecx,eax
   140021905:	movsxd r11,r8d
   140021908:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   14002190d:	shl    edx,cl
   14002190f:	lea    ecx,[rax+rdx*1]
   140021912:	cmp    ecx,eax
   140021914:	jb     0x14002191a
   140021916:	cmp    ecx,edx
   140021918:	jae    0x14002191d
   14002191a:	mov    r13d,esi
   14002191d:	lea    eax,[r8-0x1]
   140021921:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   140021926:	movsxd rdx,eax
   140021929:	test   eax,eax
   14002192b:	js     0x140021954
   14002192d:	test   r13d,r13d
   140021930:	je     0x140021954
   140021932:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140021936:	mov    r13d,ebx
   140021939:	lea    r8d,[rax+0x1]
   14002193d:	cmp    r8d,eax
   140021940:	jb     0x140021947
   140021942:	cmp    r8d,esi
   140021945:	jae    0x14002194a
   140021947:	mov    r13d,esi
   14002194a:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14002194f:	sub    rdx,rsi
   140021952:	jns    0x14002192d
   140021954:	mov    r8d,DWORD PTR [rbp-0x24]
   140021958:	movsxd r11,r10d
   14002195b:	mov    ecx,r8d
   14002195e:	mov    eax,r15d
   140021961:	shl    eax,cl
   140021963:	and    DWORD PTR [rbp+r11*4-0x18],eax
   140021968:	lea    eax,[r10+0x1]
   14002196c:	movsxd rdx,eax
   14002196f:	cmp    rdx,r14
   140021972:	jge    0x140021991
   140021974:	lea    rcx,[rbp-0x18]
   140021978:	mov    r8,r14
   14002197b:	sub    r8,rdx
   14002197e:	lea    rcx,[rcx+rdx*4]
   140021982:	xor    edx,edx
   140021984:	shl    r8,0x2
   140021988:	call   0x140006f70
   14002198d:	mov    r9d,DWORD PTR [rbp-0x28]
   140021991:	test   r13d,r13d
   140021994:	je     0x140021998
   140021996:	add    edi,esi
   140021998:	mov    ecx,DWORD PTR [rip+0x1bb5e]        # 0x14003d4fc
   14002199e:	mov    eax,ecx
   1400219a0:	sub    eax,DWORD PTR [rip+0x1bb5a]        # 0x14003d500
   1400219a6:	cmp    edi,eax
   1400219a8:	jge    0x1400219be
   1400219aa:	mov    QWORD PTR [rbp-0x18],rbx
   1400219ae:	mov    DWORD PTR [rbp-0x10],ebx
   1400219b1:	mov    r8d,ebx
   1400219b4:	mov    ebx,0x2
   1400219b9:	jmp    0x140021d12
   1400219be:	cmp    edi,ecx
   1400219c0:	jg     0x140021bf7
   1400219c6:	sub    ecx,DWORD PTR [rbp-0x40]
   1400219c9:	mov    rax,QWORD PTR [rbp-0x20]
   1400219cd:	mov    r10d,r15d
   1400219d0:	mov    QWORD PTR [rbp-0x18],rax
   1400219d4:	mov    eax,ecx
   1400219d6:	mov    DWORD PTR [rbp-0x10],r9d
   1400219da:	cdq    
   1400219db:	mov    r11,r14
   1400219de:	mov    r9d,ebx
   1400219e1:	and    edx,r12d
   1400219e4:	lea    r8,[rbp-0x18]
   1400219e8:	add    eax,edx
   1400219ea:	mov    r13d,eax
   1400219ed:	and    eax,r12d
   1400219f0:	sub    eax,edx
   1400219f2:	sar    r13d,0x5
   1400219f6:	mov    ecx,eax
   1400219f8:	mov    edi,eax
   1400219fa:	mov    eax,0x20
   1400219ff:	shl    r10d,cl
   140021a02:	sub    eax,ecx
   140021a04:	mov    r14d,eax
   140021a07:	not    r10d
   140021a0a:	mov    eax,DWORD PTR [r8]
   140021a0d:	mov    ecx,edi
   140021a0f:	mov    edx,eax
   140021a11:	shr    eax,cl
   140021a13:	mov    ecx,r14d
   140021a16:	or     eax,r9d
   140021a19:	and    edx,r10d
   140021a1c:	mov    r9d,edx
   140021a1f:	mov    DWORD PTR [r8],eax
   140021a22:	lea    r8,[r8+0x4]
   140021a26:	shl    r9d,cl
   140021a29:	sub    r11,rsi
   140021a2c:	jne    0x140021a0a
   140021a2e:	movsxd r10,r13d
   140021a31:	lea    edi,[r11+0x2]
   140021a35:	lea    r14d,[r11+0x3]
   140021a39:	mov    r9,r10
   140021a3c:	mov    r8d,edi
   140021a3f:	neg    r9
   140021a42:	cmp    r8,r10
   140021a45:	jl     0x140021a5c
   140021a47:	mov    rdx,r8
   140021a4a:	shl    rdx,0x2
   140021a4e:	lea    rax,[rdx+r9*4]
   140021a52:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140021a56:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140021a5a:	jmp    0x140021a61
   140021a5c:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140021a61:	sub    r8,rsi
   140021a64:	jns    0x140021a42
   140021a66:	mov    r8d,DWORD PTR [rbp-0x38]
   140021a6a:	mov    r11d,r12d
   140021a6d:	lea    eax,[r8+0x1]
   140021a71:	cdq    
   140021a72:	and    edx,r12d
   140021a75:	add    eax,edx
   140021a77:	mov    r9d,eax
   140021a7a:	and    eax,r12d
   140021a7d:	sub    eax,edx
   140021a7f:	sar    r9d,0x5
   140021a83:	sub    r11d,eax
   140021a86:	movsxd rax,r9d
   140021a89:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   140021a8d:	bt     ecx,r11d
   140021a91:	jae    0x140021b2f
   140021a97:	mov    ecx,r11d
   140021a9a:	mov    eax,r15d
   140021a9d:	movsxd rdx,r9d
   140021aa0:	shl    eax,cl
   140021aa2:	not    eax
   140021aa4:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   140021aa8:	jne    0x140021ac3
   140021aaa:	lea    eax,[r9+0x1]
   140021aae:	movsxd rcx,eax
   140021ab1:	jmp    0x140021abc
   140021ab3:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   140021ab7:	jne    0x140021ac3
   140021ab9:	add    rcx,rsi
   140021abc:	cmp    rcx,r14
   140021abf:	jl     0x140021ab3
   140021ac1:	jmp    0x140021b2f
   140021ac3:	mov    eax,r8d
   140021ac6:	mov    ecx,r12d
   140021ac9:	cdq    
   140021aca:	and    edx,r12d
   140021acd:	add    eax,edx
   140021acf:	mov    r10d,eax
   140021ad2:	and    eax,r12d
   140021ad5:	sub    eax,edx
   140021ad7:	sar    r10d,0x5
   140021adb:	mov    edx,esi
   140021add:	sub    ecx,eax
   140021adf:	movsxd r13,r10d
   140021ae2:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   140021ae7:	shl    edx,cl
   140021ae9:	mov    ecx,ebx
   140021aeb:	lea    r8d,[rax+rdx*1]
   140021aef:	cmp    r8d,eax
   140021af2:	jb     0x140021af9
   140021af4:	cmp    r8d,edx
   140021af7:	jae    0x140021afb
   140021af9:	mov    ecx,esi
   140021afb:	lea    eax,[r10-0x1]
   140021aff:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   140021b04:	movsxd rdx,eax
   140021b07:	test   eax,eax
   140021b09:	js     0x140021b2f
   140021b0b:	test   ecx,ecx
   140021b0d:	je     0x140021b2f
   140021b0f:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140021b13:	mov    ecx,ebx
   140021b15:	lea    r8d,[rax+0x1]
   140021b19:	cmp    r8d,eax
   140021b1c:	jb     0x140021b23
   140021b1e:	cmp    r8d,esi
   140021b21:	jae    0x140021b25
   140021b23:	mov    ecx,esi
   140021b25:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   140021b2a:	sub    rdx,rsi
   140021b2d:	jns    0x140021b0b
   140021b2f:	mov    ecx,r11d
   140021b32:	mov    eax,r15d
   140021b35:	shl    eax,cl
   140021b37:	movsxd rcx,r9d
   140021b3a:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   140021b3e:	lea    eax,[r9+0x1]
   140021b42:	movsxd rdx,eax
   140021b45:	cmp    rdx,r14
   140021b48:	jge    0x140021b63
   140021b4a:	lea    rcx,[rbp-0x18]
   140021b4e:	mov    r8,r14
   140021b51:	sub    r8,rdx
   140021b54:	lea    rcx,[rcx+rdx*4]
   140021b58:	xor    edx,edx
   140021b5a:	shl    r8,0x2
   140021b5e:	call   0x140006f70
   140021b63:	mov    eax,DWORD PTR [rip+0x1b99b]        # 0x14003d504
   140021b69:	mov    r13d,0x20
   140021b6f:	mov    r9d,ebx
   140021b72:	inc    eax
   140021b74:	lea    r8,[rbp-0x18]
   140021b78:	cdq    
   140021b79:	and    edx,r12d
   140021b7c:	add    eax,edx
   140021b7e:	mov    r10d,eax
   140021b81:	and    eax,r12d
   140021b84:	sub    eax,edx
   140021b86:	sar    r10d,0x5
   140021b8a:	mov    ecx,eax
   140021b8c:	mov    r11d,eax
   140021b8f:	shl    r15d,cl
   140021b92:	sub    r13d,eax
   140021b95:	not    r15d
   140021b98:	mov    eax,DWORD PTR [r8]
   140021b9b:	mov    ecx,r11d
   140021b9e:	mov    edx,eax
   140021ba0:	shr    eax,cl
   140021ba2:	mov    ecx,r13d
   140021ba5:	or     eax,r9d
   140021ba8:	and    edx,r15d
   140021bab:	mov    r9d,edx
   140021bae:	mov    DWORD PTR [r8],eax
   140021bb1:	lea    r8,[r8+0x4]
   140021bb5:	shl    r9d,cl
   140021bb8:	sub    r14,rsi
   140021bbb:	jne    0x140021b98
   140021bbd:	movsxd r10,r10d
   140021bc0:	mov    r8,rdi
   140021bc3:	mov    r9,r10
   140021bc6:	neg    r9
   140021bc9:	cmp    r8,r10
   140021bcc:	jl     0x140021be3
   140021bce:	mov    rdx,r8
   140021bd1:	shl    rdx,0x2
   140021bd5:	lea    rax,[rdx+r9*4]
   140021bd9:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140021bdd:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140021be1:	jmp    0x140021be8
   140021be3:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140021be8:	sub    r8,rsi
   140021beb:	jns    0x140021bc9
   140021bed:	mov    r8d,ebx
   140021bf0:	mov    ebx,edi
   140021bf2:	jmp    0x140021d12
   140021bf7:	mov    eax,DWORD PTR [rip+0x1b907]        # 0x14003d504
   140021bfd:	mov    r10d,DWORD PTR [rip+0x1b8f4]        # 0x14003d4f8
   140021c04:	mov    r13d,0x20
   140021c0a:	cdq    
   140021c0b:	and    edx,r12d
   140021c0e:	add    eax,edx
   140021c10:	mov    r11d,eax
   140021c13:	and    eax,r12d
   140021c16:	sub    eax,edx
   140021c18:	sar    r11d,0x5
   140021c1c:	mov    ecx,eax
   140021c1e:	shl    r15d,cl
   140021c21:	not    r15d
   140021c24:	cmp    edi,r10d
   140021c27:	jl     0x140021ca3
   140021c29:	mov    QWORD PTR [rbp-0x18],rbx
   140021c2d:	bts    DWORD PTR [rbp-0x18],0x1f
   140021c32:	mov    DWORD PTR [rbp-0x10],ebx
   140021c35:	sub    r13d,eax
   140021c38:	mov    edi,eax
   140021c3a:	mov    r9d,ebx
   140021c3d:	lea    r8,[rbp-0x18]
   140021c41:	mov    eax,DWORD PTR [r8]
   140021c44:	mov    ecx,edi
   140021c46:	mov    edx,r15d
   140021c49:	and    edx,eax
   140021c4b:	shr    eax,cl
   140021c4d:	mov    ecx,r13d
   140021c50:	or     eax,r9d
   140021c53:	mov    r9d,edx
   140021c56:	shl    r9d,cl
   140021c59:	mov    DWORD PTR [r8],eax
   140021c5c:	lea    r8,[r8+0x4]
   140021c60:	sub    r14,rsi
   140021c63:	jne    0x140021c41
   140021c65:	movsxd r9,r11d
   140021c68:	lea    edi,[r14+0x2]
   140021c6c:	mov    r8,r9
   140021c6f:	neg    r8
   140021c72:	cmp    rdi,r9
   140021c75:	jl     0x140021c8c
   140021c77:	mov    rdx,rdi
   140021c7a:	shl    rdx,0x2
   140021c7e:	lea    rax,[rdx+r8*4]
   140021c82:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140021c86:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140021c8a:	jmp    0x140021c90
   140021c8c:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   140021c90:	sub    rdi,rsi
   140021c93:	jns    0x140021c72
   140021c95:	mov    r8d,DWORD PTR [rip+0x1b870]        # 0x14003d50c
   140021c9c:	mov    ebx,esi
   140021c9e:	add    r8d,r10d
   140021ca1:	jmp    0x140021d12
   140021ca3:	mov    r8d,DWORD PTR [rip+0x1b862]        # 0x14003d50c
   140021caa:	btr    DWORD PTR [rbp-0x18],0x1f
   140021caf:	mov    r10d,ebx
   140021cb2:	add    r8d,edi
   140021cb5:	mov    edi,eax
   140021cb7:	sub    r13d,eax
   140021cba:	lea    r9,[rbp-0x18]
   140021cbe:	mov    eax,DWORD PTR [r9]
   140021cc1:	mov    ecx,edi
   140021cc3:	mov    edx,eax
   140021cc5:	shr    eax,cl
   140021cc7:	mov    ecx,r13d
   140021cca:	or     eax,r10d
   140021ccd:	and    edx,r15d
   140021cd0:	mov    r10d,edx
   140021cd3:	mov    DWORD PTR [r9],eax
   140021cd6:	lea    r9,[r9+0x4]
   140021cda:	shl    r10d,cl
   140021cdd:	sub    r14,rsi
   140021ce0:	jne    0x140021cbe
   140021ce2:	movsxd r10,r11d
   140021ce5:	lea    edi,[r14+0x2]
   140021ce9:	mov    r9,r10
   140021cec:	neg    r9
   140021cef:	cmp    rdi,r10
   140021cf2:	jl     0x140021d09
   140021cf4:	mov    rdx,rdi
   140021cf7:	shl    rdx,0x2
   140021cfb:	lea    rax,[rdx+r9*4]
   140021cff:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140021d03:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140021d07:	jmp    0x140021d0d
   140021d09:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   140021d0d:	sub    rdi,rsi
   140021d10:	jns    0x140021cef
   140021d12:	mov    rdx,QWORD PTR [rbp-0x30]
   140021d16:	sub    r12d,DWORD PTR [rip+0x1b7e7]        # 0x14003d504
   140021d1d:	mov    cl,r12b
   140021d20:	shl    r8d,cl
   140021d23:	neg    DWORD PTR [rbp-0x3c]
   140021d26:	sbb    eax,eax
   140021d28:	and    eax,0x80000000
   140021d2d:	or     r8d,eax
   140021d30:	mov    eax,DWORD PTR [rip+0x1b7d2]        # 0x14003d508
   140021d36:	or     r8d,DWORD PTR [rbp-0x18]
   140021d3a:	cmp    eax,0x40
   140021d3d:	jne    0x140021d4a
   140021d3f:	mov    eax,DWORD PTR [rbp-0x14]
   140021d42:	mov    DWORD PTR [rdx+0x4],r8d
   140021d46:	mov    DWORD PTR [rdx],eax
   140021d48:	jmp    0x140021d52
   140021d4a:	cmp    eax,0x20
   140021d4d:	jne    0x140021d52
   140021d4f:	mov    DWORD PTR [rdx],r8d
   140021d52:	mov    eax,ebx
   140021d54:	mov    rcx,QWORD PTR [rbp-0x8]
   140021d58:	xor    rcx,rsp
   140021d5b:	call   0x14000c380
   140021d60:	lea    r11,[rsp+0x60]
   140021d65:	mov    rbx,QWORD PTR [r11+0x30]
   140021d69:	mov    rsi,QWORD PTR [r11+0x40]
   140021d6d:	mov    rdi,QWORD PTR [r11+0x48]
   140021d71:	mov    rsp,r11
   140021d74:	pop    r15
   140021d76:	pop    r14
   140021d78:	pop    r13
   140021d7a:	pop    r12
   140021d7c:	pop    rbp
   140021d7d:	ret    
   140021d7e:	int3   
   140021d7f:	int3   
   140021d80:	mov    QWORD PTR [rsp+0x8],rbx
   140021d85:	mov    QWORD PTR [rsp+0x18],rsi
   140021d8a:	mov    QWORD PTR [rsp+0x20],rdi
   140021d8f:	push   rbp
   140021d90:	push   r12
   140021d92:	push   r13
   140021d94:	push   r14
   140021d96:	push   r15
   140021d98:	mov    rbp,rsp
   140021d9b:	sub    rsp,0x60
   140021d9f:	mov    rax,QWORD PTR [rip+0x1a42a]        # 0x14003c1d0
   140021da6:	xor    rax,rsp
   140021da9:	mov    QWORD PTR [rbp-0x8],rax
   140021dad:	movzx  eax,WORD PTR [rcx+0xa]
   140021db1:	movzx  r9d,WORD PTR [rcx]
   140021db5:	xor    ebx,ebx
   140021db7:	mov    edi,eax
   140021db9:	and    eax,0x8000
   140021dbe:	shl    r9d,0x10
   140021dc2:	mov    DWORD PTR [rbp-0x3c],eax
   140021dc5:	mov    eax,DWORD PTR [rcx+0x6]
   140021dc8:	and    edi,0x7fff
   140021dce:	mov    DWORD PTR [rbp-0x18],eax
   140021dd1:	mov    eax,DWORD PTR [rcx+0x2]
   140021dd4:	sub    edi,0x3fff
   140021dda:	mov    r12d,0x1f
   140021de0:	mov    QWORD PTR [rbp-0x30],rdx
   140021de4:	mov    DWORD PTR [rbp-0x28],r9d
   140021de8:	mov    DWORD PTR [rbp-0x14],eax
   140021deb:	mov    DWORD PTR [rbp-0x10],r9d
   140021def:	lea    esi,[rbx+0x1]
   140021df2:	lea    r14d,[r12-0x1c]
   140021df7:	cmp    edi,0xffffc001
   140021dfd:	jne    0x140021e28
   140021dff:	mov    r8d,ebx
   140021e02:	mov    eax,ebx
   140021e04:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   140021e08:	jne    0x140021e17
   140021e0a:	add    rax,rsi
   140021e0d:	cmp    rax,r14
   140021e10:	jl     0x140021e04
   140021e12:	jmp    0x1400222ce
   140021e17:	mov    QWORD PTR [rbp-0x18],rbx
   140021e1b:	mov    DWORD PTR [rbp-0x10],ebx
   140021e1e:	mov    ebx,0x2
   140021e23:	jmp    0x1400222ce
   140021e28:	mov    rax,QWORD PTR [rbp-0x18]
   140021e2c:	mov    r8d,r12d
   140021e2f:	or     r15d,0xffffffff
   140021e33:	mov    QWORD PTR [rbp-0x20],rax
   140021e37:	mov    eax,DWORD PTR [rip+0x1b6db]        # 0x14003d518
   140021e3d:	mov    DWORD PTR [rbp-0x40],edi
   140021e40:	dec    eax
   140021e42:	mov    r13d,ebx
   140021e45:	mov    DWORD PTR [rbp-0x38],eax
   140021e48:	inc    eax
   140021e4a:	cdq    
   140021e4b:	and    edx,r12d
   140021e4e:	add    eax,edx
   140021e50:	mov    r10d,eax
   140021e53:	and    eax,r12d
   140021e56:	sar    r10d,0x5
   140021e5a:	sub    eax,edx
   140021e5c:	sub    r8d,eax
   140021e5f:	movsxd r11,r10d
   140021e62:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   140021e67:	mov    DWORD PTR [rbp-0x24],r8d
   140021e6b:	bt     ecx,r8d
   140021e6f:	jae    0x140021f13
   140021e75:	mov    ecx,r8d
   140021e78:	mov    eax,r15d
   140021e7b:	movsxd rdx,r10d
   140021e7e:	shl    eax,cl
   140021e80:	not    eax
   140021e82:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   140021e86:	jne    0x140021ea1
   140021e88:	lea    eax,[r10+0x1]
   140021e8c:	movsxd rcx,eax
   140021e8f:	jmp    0x140021e9a
   140021e91:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   140021e95:	jne    0x140021ea1
   140021e97:	add    rcx,rsi
   140021e9a:	cmp    rcx,r14
   140021e9d:	jl     0x140021e91
   140021e9f:	jmp    0x140021f13
   140021ea1:	mov    eax,DWORD PTR [rbp-0x38]
   140021ea4:	mov    ecx,r12d
   140021ea7:	cdq    
   140021ea8:	and    edx,r12d
   140021eab:	add    eax,edx
   140021ead:	mov    r8d,eax
   140021eb0:	and    eax,r12d
   140021eb3:	sub    eax,edx
   140021eb5:	sar    r8d,0x5
   140021eb9:	mov    edx,esi
   140021ebb:	sub    ecx,eax
   140021ebd:	movsxd r11,r8d
   140021ec0:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   140021ec5:	shl    edx,cl
   140021ec7:	lea    ecx,[rax+rdx*1]
   140021eca:	cmp    ecx,eax
   140021ecc:	jb     0x140021ed2
   140021ece:	cmp    ecx,edx
   140021ed0:	jae    0x140021ed5
   140021ed2:	mov    r13d,esi
   140021ed5:	lea    eax,[r8-0x1]
   140021ed9:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   140021ede:	movsxd rdx,eax
   140021ee1:	test   eax,eax
   140021ee3:	js     0x140021f0c
   140021ee5:	test   r13d,r13d
   140021ee8:	je     0x140021f0c
   140021eea:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140021eee:	mov    r13d,ebx
   140021ef1:	lea    r8d,[rax+0x1]
   140021ef5:	cmp    r8d,eax
   140021ef8:	jb     0x140021eff
   140021efa:	cmp    r8d,esi
   140021efd:	jae    0x140021f02
   140021eff:	mov    r13d,esi
   140021f02:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   140021f07:	sub    rdx,rsi
   140021f0a:	jns    0x140021ee5
   140021f0c:	mov    r8d,DWORD PTR [rbp-0x24]
   140021f10:	movsxd r11,r10d
   140021f13:	mov    ecx,r8d
   140021f16:	mov    eax,r15d
   140021f19:	shl    eax,cl
   140021f1b:	and    DWORD PTR [rbp+r11*4-0x18],eax
   140021f20:	lea    eax,[r10+0x1]
   140021f24:	movsxd rdx,eax
   140021f27:	cmp    rdx,r14
   140021f2a:	jge    0x140021f49
   140021f2c:	lea    rcx,[rbp-0x18]
   140021f30:	mov    r8,r14
   140021f33:	sub    r8,rdx
   140021f36:	lea    rcx,[rcx+rdx*4]
   140021f3a:	xor    edx,edx
   140021f3c:	shl    r8,0x2
   140021f40:	call   0x140006f70
   140021f45:	mov    r9d,DWORD PTR [rbp-0x28]
   140021f49:	test   r13d,r13d
   140021f4c:	je     0x140021f50
   140021f4e:	add    edi,esi
   140021f50:	mov    ecx,DWORD PTR [rip+0x1b5be]        # 0x14003d514
   140021f56:	mov    eax,ecx
   140021f58:	sub    eax,DWORD PTR [rip+0x1b5ba]        # 0x14003d518
   140021f5e:	cmp    edi,eax
   140021f60:	jge    0x140021f76
   140021f62:	mov    QWORD PTR [rbp-0x18],rbx
   140021f66:	mov    DWORD PTR [rbp-0x10],ebx
   140021f69:	mov    r8d,ebx
   140021f6c:	mov    ebx,0x2
   140021f71:	jmp    0x1400222ca
   140021f76:	cmp    edi,ecx
   140021f78:	jg     0x1400221af
   140021f7e:	sub    ecx,DWORD PTR [rbp-0x40]
   140021f81:	mov    rax,QWORD PTR [rbp-0x20]
   140021f85:	mov    r10d,r15d
   140021f88:	mov    QWORD PTR [rbp-0x18],rax
   140021f8c:	mov    eax,ecx
   140021f8e:	mov    DWORD PTR [rbp-0x10],r9d
   140021f92:	cdq    
   140021f93:	mov    r11,r14
   140021f96:	mov    r9d,ebx
   140021f99:	and    edx,r12d
   140021f9c:	lea    r8,[rbp-0x18]
   140021fa0:	add    eax,edx
   140021fa2:	mov    r13d,eax
   140021fa5:	and    eax,r12d
   140021fa8:	sub    eax,edx
   140021faa:	sar    r13d,0x5
   140021fae:	mov    ecx,eax
   140021fb0:	mov    edi,eax
   140021fb2:	mov    eax,0x20
   140021fb7:	shl    r10d,cl
   140021fba:	sub    eax,ecx
   140021fbc:	mov    r14d,eax
   140021fbf:	not    r10d
   140021fc2:	mov    eax,DWORD PTR [r8]
   140021fc5:	mov    ecx,edi
   140021fc7:	mov    edx,eax
   140021fc9:	shr    eax,cl
   140021fcb:	mov    ecx,r14d
   140021fce:	or     eax,r9d
   140021fd1:	and    edx,r10d
   140021fd4:	mov    r9d,edx
   140021fd7:	mov    DWORD PTR [r8],eax
   140021fda:	lea    r8,[r8+0x4]
   140021fde:	shl    r9d,cl
   140021fe1:	sub    r11,rsi
   140021fe4:	jne    0x140021fc2
   140021fe6:	movsxd r10,r13d
   140021fe9:	lea    edi,[r11+0x2]
   140021fed:	lea    r14d,[r11+0x3]
   140021ff1:	mov    r9,r10
   140021ff4:	mov    r8d,edi
   140021ff7:	neg    r9
   140021ffa:	cmp    r8,r10
   140021ffd:	jl     0x140022014
   140021fff:	mov    rdx,r8
   140022002:	shl    rdx,0x2
   140022006:	lea    rax,[rdx+r9*4]
   14002200a:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002200e:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140022012:	jmp    0x140022019
   140022014:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140022019:	sub    r8,rsi
   14002201c:	jns    0x140021ffa
   14002201e:	mov    r8d,DWORD PTR [rbp-0x38]
   140022022:	mov    r11d,r12d
   140022025:	lea    eax,[r8+0x1]
   140022029:	cdq    
   14002202a:	and    edx,r12d
   14002202d:	add    eax,edx
   14002202f:	mov    r9d,eax
   140022032:	and    eax,r12d
   140022035:	sub    eax,edx
   140022037:	sar    r9d,0x5
   14002203b:	sub    r11d,eax
   14002203e:	movsxd rax,r9d
   140022041:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   140022045:	bt     ecx,r11d
   140022049:	jae    0x1400220e7
   14002204f:	mov    ecx,r11d
   140022052:	mov    eax,r15d
   140022055:	movsxd rdx,r9d
   140022058:	shl    eax,cl
   14002205a:	not    eax
   14002205c:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   140022060:	jne    0x14002207b
   140022062:	lea    eax,[r9+0x1]
   140022066:	movsxd rcx,eax
   140022069:	jmp    0x140022074
   14002206b:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14002206f:	jne    0x14002207b
   140022071:	add    rcx,rsi
   140022074:	cmp    rcx,r14
   140022077:	jl     0x14002206b
   140022079:	jmp    0x1400220e7
   14002207b:	mov    eax,r8d
   14002207e:	mov    ecx,r12d
   140022081:	cdq    
   140022082:	and    edx,r12d
   140022085:	add    eax,edx
   140022087:	mov    r10d,eax
   14002208a:	and    eax,r12d
   14002208d:	sub    eax,edx
   14002208f:	sar    r10d,0x5
   140022093:	mov    edx,esi
   140022095:	sub    ecx,eax
   140022097:	movsxd r13,r10d
   14002209a:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14002209f:	shl    edx,cl
   1400220a1:	mov    ecx,ebx
   1400220a3:	lea    r8d,[rax+rdx*1]
   1400220a7:	cmp    r8d,eax
   1400220aa:	jb     0x1400220b1
   1400220ac:	cmp    r8d,edx
   1400220af:	jae    0x1400220b3
   1400220b1:	mov    ecx,esi
   1400220b3:	lea    eax,[r10-0x1]
   1400220b7:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   1400220bc:	movsxd rdx,eax
   1400220bf:	test   eax,eax
   1400220c1:	js     0x1400220e7
   1400220c3:	test   ecx,ecx
   1400220c5:	je     0x1400220e7
   1400220c7:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   1400220cb:	mov    ecx,ebx
   1400220cd:	lea    r8d,[rax+0x1]
   1400220d1:	cmp    r8d,eax
   1400220d4:	jb     0x1400220db
   1400220d6:	cmp    r8d,esi
   1400220d9:	jae    0x1400220dd
   1400220db:	mov    ecx,esi
   1400220dd:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   1400220e2:	sub    rdx,rsi
   1400220e5:	jns    0x1400220c3
   1400220e7:	mov    ecx,r11d
   1400220ea:	mov    eax,r15d
   1400220ed:	shl    eax,cl
   1400220ef:	movsxd rcx,r9d
   1400220f2:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   1400220f6:	lea    eax,[r9+0x1]
   1400220fa:	movsxd rdx,eax
   1400220fd:	cmp    rdx,r14
   140022100:	jge    0x14002211b
   140022102:	lea    rcx,[rbp-0x18]
   140022106:	mov    r8,r14
   140022109:	sub    r8,rdx
   14002210c:	lea    rcx,[rcx+rdx*4]
   140022110:	xor    edx,edx
   140022112:	shl    r8,0x2
   140022116:	call   0x140006f70
   14002211b:	mov    eax,DWORD PTR [rip+0x1b3fb]        # 0x14003d51c
   140022121:	mov    r13d,0x20
   140022127:	mov    r9d,ebx
   14002212a:	inc    eax
   14002212c:	lea    r8,[rbp-0x18]
   140022130:	cdq    
   140022131:	and    edx,r12d
   140022134:	add    eax,edx
   140022136:	mov    r10d,eax
   140022139:	and    eax,r12d
   14002213c:	sub    eax,edx
   14002213e:	sar    r10d,0x5
   140022142:	mov    ecx,eax
   140022144:	mov    r11d,eax
   140022147:	shl    r15d,cl
   14002214a:	sub    r13d,eax
   14002214d:	not    r15d
   140022150:	mov    eax,DWORD PTR [r8]
   140022153:	mov    ecx,r11d
   140022156:	mov    edx,eax
   140022158:	shr    eax,cl
   14002215a:	mov    ecx,r13d
   14002215d:	or     eax,r9d
   140022160:	and    edx,r15d
   140022163:	mov    r9d,edx
   140022166:	mov    DWORD PTR [r8],eax
   140022169:	lea    r8,[r8+0x4]
   14002216d:	shl    r9d,cl
   140022170:	sub    r14,rsi
   140022173:	jne    0x140022150
   140022175:	movsxd r10,r10d
   140022178:	mov    r8,rdi
   14002217b:	mov    r9,r10
   14002217e:	neg    r9
   140022181:	cmp    r8,r10
   140022184:	jl     0x14002219b
   140022186:	mov    rdx,r8
   140022189:	shl    rdx,0x2
   14002218d:	lea    rax,[rdx+r9*4]
   140022191:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140022195:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140022199:	jmp    0x1400221a0
   14002219b:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   1400221a0:	sub    r8,rsi
   1400221a3:	jns    0x140022181
   1400221a5:	mov    r8d,ebx
   1400221a8:	mov    ebx,edi
   1400221aa:	jmp    0x1400222ca
   1400221af:	mov    eax,DWORD PTR [rip+0x1b367]        # 0x14003d51c
   1400221b5:	mov    r10d,DWORD PTR [rip+0x1b354]        # 0x14003d510
   1400221bc:	mov    r13d,0x20
   1400221c2:	cdq    
   1400221c3:	and    edx,r12d
   1400221c6:	add    eax,edx
   1400221c8:	mov    r11d,eax
   1400221cb:	and    eax,r12d
   1400221ce:	sub    eax,edx
   1400221d0:	sar    r11d,0x5
   1400221d4:	mov    ecx,eax
   1400221d6:	shl    r15d,cl
   1400221d9:	not    r15d
   1400221dc:	cmp    edi,r10d
   1400221df:	jl     0x14002225b
   1400221e1:	mov    QWORD PTR [rbp-0x18],rbx
   1400221e5:	bts    DWORD PTR [rbp-0x18],0x1f
   1400221ea:	mov    DWORD PTR [rbp-0x10],ebx
   1400221ed:	sub    r13d,eax
   1400221f0:	mov    edi,eax
   1400221f2:	mov    r9d,ebx
   1400221f5:	lea    r8,[rbp-0x18]
   1400221f9:	mov    eax,DWORD PTR [r8]
   1400221fc:	mov    ecx,edi
   1400221fe:	mov    edx,r15d
   140022201:	and    edx,eax
   140022203:	shr    eax,cl
   140022205:	mov    ecx,r13d
   140022208:	or     eax,r9d
   14002220b:	mov    r9d,edx
   14002220e:	shl    r9d,cl
   140022211:	mov    DWORD PTR [r8],eax
   140022214:	lea    r8,[r8+0x4]
   140022218:	sub    r14,rsi
   14002221b:	jne    0x1400221f9
   14002221d:	movsxd r9,r11d
   140022220:	lea    edi,[r14+0x2]
   140022224:	mov    r8,r9
   140022227:	neg    r8
   14002222a:	cmp    rdi,r9
   14002222d:	jl     0x140022244
   14002222f:	mov    rdx,rdi
   140022232:	shl    rdx,0x2
   140022236:	lea    rax,[rdx+r8*4]
   14002223a:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002223e:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140022242:	jmp    0x140022248
   140022244:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   140022248:	sub    rdi,rsi
   14002224b:	jns    0x14002222a
   14002224d:	mov    r8d,DWORD PTR [rip+0x1b2d0]        # 0x14003d524
   140022254:	mov    ebx,esi
   140022256:	add    r8d,r10d
   140022259:	jmp    0x1400222ca
   14002225b:	mov    r8d,DWORD PTR [rip+0x1b2c2]        # 0x14003d524
   140022262:	btr    DWORD PTR [rbp-0x18],0x1f
   140022267:	mov    r10d,ebx
   14002226a:	add    r8d,edi
   14002226d:	mov    edi,eax
   14002226f:	sub    r13d,eax
   140022272:	lea    r9,[rbp-0x18]
   140022276:	mov    eax,DWORD PTR [r9]
   140022279:	mov    ecx,edi
   14002227b:	mov    edx,eax
   14002227d:	shr    eax,cl
   14002227f:	mov    ecx,r13d
   140022282:	or     eax,r10d
   140022285:	and    edx,r15d
   140022288:	mov    r10d,edx
   14002228b:	mov    DWORD PTR [r9],eax
   14002228e:	lea    r9,[r9+0x4]
   140022292:	shl    r10d,cl
   140022295:	sub    r14,rsi
   140022298:	jne    0x140022276
   14002229a:	movsxd r10,r11d
   14002229d:	lea    edi,[r14+0x2]
   1400222a1:	mov    r9,r10
   1400222a4:	neg    r9
   1400222a7:	cmp    rdi,r10
   1400222aa:	jl     0x1400222c1
   1400222ac:	mov    rdx,rdi
   1400222af:	shl    rdx,0x2
   1400222b3:	lea    rax,[rdx+r9*4]
   1400222b7:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   1400222bb:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   1400222bf:	jmp    0x1400222c5
   1400222c1:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   1400222c5:	sub    rdi,rsi
   1400222c8:	jns    0x1400222a7
   1400222ca:	mov    rdx,QWORD PTR [rbp-0x30]
   1400222ce:	sub    r12d,DWORD PTR [rip+0x1b247]        # 0x14003d51c
   1400222d5:	mov    cl,r12b
   1400222d8:	shl    r8d,cl
   1400222db:	neg    DWORD PTR [rbp-0x3c]
   1400222de:	sbb    eax,eax
   1400222e0:	and    eax,0x80000000
   1400222e5:	or     r8d,eax
   1400222e8:	mov    eax,DWORD PTR [rip+0x1b232]        # 0x14003d520
   1400222ee:	or     r8d,DWORD PTR [rbp-0x18]
   1400222f2:	cmp    eax,0x40
   1400222f5:	jne    0x140022302
   1400222f7:	mov    eax,DWORD PTR [rbp-0x14]
   1400222fa:	mov    DWORD PTR [rdx+0x4],r8d
   1400222fe:	mov    DWORD PTR [rdx],eax
   140022300:	jmp    0x14002230a
   140022302:	cmp    eax,0x20
   140022305:	jne    0x14002230a
   140022307:	mov    DWORD PTR [rdx],r8d
   14002230a:	mov    eax,ebx
   14002230c:	mov    rcx,QWORD PTR [rbp-0x8]
   140022310:	xor    rcx,rsp
   140022313:	call   0x14000c380
   140022318:	lea    r11,[rsp+0x60]
   14002231d:	mov    rbx,QWORD PTR [r11+0x30]
   140022321:	mov    rsi,QWORD PTR [r11+0x40]
   140022325:	mov    rdi,QWORD PTR [r11+0x48]
   140022329:	mov    rsp,r11
   14002232c:	pop    r15
   14002232e:	pop    r14
   140022330:	pop    r13
   140022332:	pop    r12
   140022334:	pop    rbp
   140022335:	ret    
   140022336:	int3   
   140022337:	int3   
   140022338:	mov    QWORD PTR [rsp+0x8],rbx
   14002233d:	mov    QWORD PTR [rsp+0x18],rbp
   140022342:	push   rdi
   140022343:	sub    rsp,0x20
   140022347:	mov    rax,QWORD PTR [rip+0x19e82]        # 0x14003c1d0
   14002234e:	xor    rax,rsp
   140022351:	mov    QWORD PTR [rsp+0x10],rax
   140022356:	movzx  r11d,WORD PTR [rcx+0xa]
   14002235b:	movzx  r10d,WORD PTR [rcx]
   14002235f:	mov    ebp,0x7fff
   140022364:	lea    eax,[rbp+0x1]
   140022367:	movzx  r9d,r11w
   14002236b:	xor    r8d,r8d
   14002236e:	shl    r10d,0x10
   140022372:	and    r11w,ax
   140022376:	mov    eax,DWORD PTR [rcx+0x2]
   140022379:	mov    rbx,rdx
   14002237c:	mov    edx,DWORD PTR [rcx+0x6]
   14002237f:	and    r9w,bp
   140022383:	mov    DWORD PTR [rsp+0x8],r10d
   140022388:	lea    edi,[r8+0x1]
   14002238c:	mov    DWORD PTR [rsp],edx
   14002238f:	test   r10d,r10d
   140022392:	jns    0x1400223ed
   140022394:	test   r10d,0x7fffffff
   14002239b:	je     0x1400223ed
   14002239d:	lea    edx,[rax+0x1]
   1400223a0:	mov    ecx,r8d
   1400223a3:	cmp    edx,eax
   1400223a5:	jb     0x1400223ab
   1400223a7:	cmp    edx,edi
   1400223a9:	jae    0x1400223ad
   1400223ab:	mov    ecx,edi
   1400223ad:	mov    DWORD PTR [rsp+0x4],edx
   1400223b1:	mov    rdx,r8
   1400223b4:	test   ecx,ecx
   1400223b6:	je     0x1400223e6
   1400223b8:	mov    eax,DWORD PTR [rsp+rdx*4]
   1400223bb:	mov    ecx,r8d
   1400223be:	lea    r10d,[rax+0x1]
   1400223c2:	cmp    r10d,eax
   1400223c5:	jb     0x1400223cc
   1400223c7:	cmp    r10d,edi
   1400223ca:	jae    0x1400223ce
   1400223cc:	mov    ecx,edi
   1400223ce:	mov    DWORD PTR [rsp+rdx*4],r10d
   1400223d2:	sub    rdx,rdi
   1400223d5:	jns    0x1400223b4
   1400223d7:	test   ecx,ecx
   1400223d9:	je     0x1400223e6
   1400223db:	mov    edx,0x80000000
   1400223e0:	add    r9w,di
   1400223e4:	jmp    0x1400223e9
   1400223e6:	mov    edx,DWORD PTR [rsp]
   1400223e9:	mov    eax,DWORD PTR [rsp+0x4]
   1400223ed:	cmp    r9w,bp
   1400223f1:	mov    DWORD PTR [rbx],eax
   1400223f3:	mov    DWORD PTR [rbx+0x4],edx
   1400223f6:	cmove  r8d,edi
   1400223fa:	or     r11w,r9w
   1400223fe:	mov    WORD PTR [rbx+0x8],r11w
   140022403:	mov    eax,r8d
   140022406:	mov    rcx,QWORD PTR [rsp+0x10]
   14002240b:	xor    rcx,rsp
   14002240e:	call   0x14000c380
   140022413:	mov    rbx,QWORD PTR [rsp+0x30]
   140022418:	mov    rbp,QWORD PTR [rsp+0x40]
   14002241d:	add    rsp,0x20
   140022421:	pop    rdi
   140022422:	ret    
   140022423:	int3   
   140022424:	mov    QWORD PTR [rsp+0x20],rbx
   140022429:	push   rdi
   14002242a:	sub    rsp,0x60
   14002242e:	mov    rax,QWORD PTR [rip+0x19d9b]        # 0x14003c1d0
   140022435:	xor    rax,rsp
   140022438:	mov    QWORD PTR [rsp+0x50],rax
   14002243d:	mov    rax,QWORD PTR [rsp+0x90]
   140022445:	mov    rbx,rcx
   140022448:	lea    rcx,[rsp+0x40]
   14002244d:	mov    QWORD PTR [rsp+0x38],rax
   140022452:	xor    eax,eax
   140022454:	mov    DWORD PTR [rsp+0x30],eax
   140022458:	mov    DWORD PTR [rsp+0x28],eax
   14002245c:	mov    DWORD PTR [rsp+0x20],eax
   140022460:	call   0x140022bd8
   140022465:	lea    rcx,[rsp+0x40]
   14002246a:	mov    rdx,rbx
   14002246d:	mov    edi,eax
   14002246f:	call   0x140022338
   140022474:	cmp    eax,0x1
   140022477:	jne    0x14002247c
   140022479:	or     edi,0x2
   14002247c:	mov    eax,edi
   14002247e:	mov    rcx,QWORD PTR [rsp+0x50]
   140022483:	xor    rcx,rsp
   140022486:	call   0x14000c380
   14002248b:	mov    rbx,QWORD PTR [rsp+0x88]
   140022493:	add    rsp,0x60
   140022497:	pop    rdi
   140022498:	ret    
   140022499:	int3   
   14002249a:	int3   
   14002249b:	int3   
   14002249c:	mov    QWORD PTR [rsp+0x10],rbx
   1400224a1:	mov    QWORD PTR [rsp+0x18],rsi
   1400224a6:	mov    QWORD PTR [rsp+0x20],rdi
   1400224ab:	push   rbp
   1400224ac:	push   r12
   1400224ae:	push   r13
   1400224b0:	push   r14
   1400224b2:	push   r15
   1400224b4:	mov    rbp,rsp
   1400224b7:	sub    rsp,0x30
   1400224bb:	mov    rax,QWORD PTR [rip+0x19d0e]        # 0x14003c1d0
   1400224c2:	xor    rax,rsp
   1400224c5:	mov    QWORD PTR [rbp-0x10],rax
   1400224c9:	movzx  eax,WORD PTR [rdx+0xa]
   1400224cd:	xor    r12d,r12d
   1400224d0:	mov    r8,rcx
   1400224d3:	mov    QWORD PTR [rbp-0x28],rcx
   1400224d7:	movzx  ecx,WORD PTR [rcx+0xa]
   1400224db:	movzx  esi,ax
   1400224de:	xor    si,cx
   1400224e1:	mov    rdi,rdx
   1400224e4:	mov    edx,0x8000
   1400224e9:	and    si,dx
   1400224ec:	mov    edx,0x7fff
   1400224f1:	mov    DWORD PTR [rbp-0x2c],r12d
   1400224f5:	and    cx,dx
   1400224f8:	and    ax,dx
   1400224fb:	mov    QWORD PTR [rbp-0x20],r12
   1400224ff:	lea    r9d,[rcx+rax*1]
   140022503:	mov    DWORD PTR [rbp-0x18],r12d
   140022507:	mov    WORD PTR [rbp-0x2e],si
   14002250b:	mov    WORD PTR [rbp-0x30],r9w
   140022510:	cmp    cx,dx
   140022513:	jae    0x140022788
   140022519:	cmp    ax,dx
   14002251c:	jae    0x140022788
   140022522:	mov    edx,0xbffd
   140022527:	cmp    r9w,dx
   14002252b:	ja     0x140022788
   140022531:	mov    edx,0x3fbf
   140022536:	cmp    r9w,dx
   14002253a:	ja     0x140022548
   14002253c:	mov    QWORD PTR [r8+0x4],r12
   140022540:	mov    DWORD PTR [r8],r12d
   140022543:	jmp    0x1400227a0
   140022548:	mov    edx,0x7fffffff
   14002254d:	mov    r14d,0x1
   140022553:	test   cx,cx
   140022556:	jne    0x14002257c
   140022558:	add    r9w,r14w
   14002255c:	mov    WORD PTR [rbp-0x30],r9w
   140022561:	test   DWORD PTR [r8+0x8],edx
   140022565:	jne    0x14002257c
   140022567:	cmp    DWORD PTR [r8+0x4],r12d
   14002256b:	jne    0x14002257c
   14002256d:	cmp    DWORD PTR [r8],r12d
   140022570:	jne    0x14002257c
   140022572:	mov    WORD PTR [r8+0xa],r12w
   140022577:	jmp    0x1400227a0
   14002257c:	test   ax,ax
   14002257f:	jne    0x14002259a
   140022581:	add    r9w,r14w
   140022585:	mov    WORD PTR [rbp-0x30],r9w
   14002258a:	test   DWORD PTR [rdi+0x8],edx
   14002258d:	jne    0x14002259a
   14002258f:	cmp    DWORD PTR [rdi+0x4],r12d
   140022593:	jne    0x14002259a
   140022595:	cmp    DWORD PTR [rdi],r12d
   140022598:	je     0x14002253c
   14002259a:	mov    r10d,0x5
   1400225a0:	mov    r14d,r12d
   1400225a3:	lea    rdx,[rbp-0x20]
   1400225a7:	lea    r9d,[r10-0x4]
   1400225ab:	mov    r15d,r10d
   1400225ae:	test   r10d,r10d
   1400225b1:	jle    0x140022606
   1400225b3:	lea    eax,[r14+r14*1]
   1400225b7:	mov    esi,r14d
   1400225ba:	lea    r12,[rdi+0x8]
   1400225be:	movsxd r13,eax
   1400225c1:	and    esi,r9d
   1400225c4:	add    r13,r8
   1400225c7:	movzx  eax,WORD PTR [r13+0x0]
   1400225cc:	movzx  ecx,WORD PTR [r12]
   1400225d1:	xor    r11d,r11d
   1400225d4:	imul   ecx,eax
   1400225d7:	mov    eax,DWORD PTR [rdx]
   1400225d9:	lea    ebx,[rax+rcx*1]
   1400225dc:	cmp    ebx,eax
   1400225de:	jb     0x1400225e4
   1400225e0:	cmp    ebx,ecx
   1400225e2:	jae    0x1400225e7
   1400225e4:	mov    r11d,r9d
   1400225e7:	mov    DWORD PTR [rdx],ebx
   1400225e9:	test   r11d,r11d
   1400225ec:	je     0x1400225f3
   1400225ee:	add    WORD PTR [rdx+0x4],r9w
   1400225f3:	sub    r15d,r9d
   1400225f6:	add    r13,0x2
   1400225fa:	sub    r12,0x2
   1400225fe:	test   r15d,r15d
   140022601:	jg     0x1400225c7
   140022603:	xor    r12d,r12d
   140022606:	sub    r10d,r9d
   140022609:	add    rdx,0x2
   14002260d:	add    r14d,r9d
   140022610:	test   r10d,r10d
   140022613:	jg     0x1400225ab
   140022615:	movzx  r9d,WORD PTR [rbp-0x30]
   14002261a:	mov    r10d,DWORD PTR [rbp-0x18]
   14002261e:	mov    r11d,DWORD PTR [rbp-0x20]
   140022622:	mov    eax,0xc002
   140022627:	mov    ebx,0x80000000
   14002262c:	mov    r15d,0xffff
   140022632:	add    r9w,ax
   140022636:	test   r9w,r9w
   14002263a:	jle    0x140022678
   14002263c:	test   ebx,r10d
   14002263f:	jne    0x140022672
   140022641:	mov    edi,DWORD PTR [rbp-0x1c]
   140022644:	mov    edx,r11d
   140022647:	add    r10d,r10d
   14002264a:	shr    edx,0x1f
   14002264d:	add    r11d,r11d
   140022650:	mov    ecx,edi
   140022652:	shr    ecx,0x1f
   140022655:	lea    eax,[rdi+rdi*1]
   140022658:	add    r9w,r15w
   14002265c:	or     eax,edx
   14002265e:	or     r10d,ecx
   140022661:	mov    DWORD PTR [rbp-0x20],r11d
   140022665:	mov    DWORD PTR [rbp-0x1c],eax
   140022668:	mov    DWORD PTR [rbp-0x18],r10d
   14002266c:	test   r9w,r9w
   140022670:	jg     0x14002263c
   140022672:	test   r9w,r9w
   140022676:	jg     0x1400226e5
   140022678:	add    r9w,r15w
   14002267c:	mov    r14d,0x1
   140022682:	jns    0x1400226eb
   140022684:	mov    r8d,DWORD PTR [rbp-0x2c]
   140022688:	movzx  eax,r9w
   14002268c:	neg    ax
   14002268f:	movzx  edx,ax
   140022692:	add    r9w,dx
   140022696:	test   BYTE PTR [rbp-0x20],r14b
   14002269a:	je     0x14002269f
   14002269c:	add    r8d,r14d
   14002269f:	mov    edi,DWORD PTR [rbp-0x1c]
   1400226a2:	mov    eax,r10d
   1400226a5:	shr    r11d,1
   1400226a8:	mov    ecx,edi
   1400226aa:	shl    eax,0x1f
   1400226ad:	shr    edi,1
   1400226af:	shl    ecx,0x1f
   1400226b2:	or     edi,eax
   1400226b4:	shr    r10d,1
   1400226b7:	or     r11d,ecx
   1400226ba:	mov    DWORD PTR [rbp-0x1c],edi
   1400226bd:	mov    DWORD PTR [rbp-0x20],r11d
   1400226c1:	sub    rdx,r14
   1400226c4:	jne    0x140022696
   1400226c6:	test   r8d,r8d
   1400226c9:	mov    r8,QWORD PTR [rbp-0x28]
   1400226cd:	mov    DWORD PTR [rbp-0x18],r10d
   1400226d1:	je     0x1400226eb
   1400226d3:	movzx  eax,r11w
   1400226d7:	or     ax,r14w
   1400226db:	mov    WORD PTR [rbp-0x20],ax
   1400226df:	mov    r11d,DWORD PTR [rbp-0x20]
   1400226e3:	jmp    0x1400226ef
   1400226e5:	mov    r14d,0x1
   1400226eb:	movzx  eax,WORD PTR [rbp-0x20]
   1400226ef:	movzx  esi,WORD PTR [rbp-0x2e]
   1400226f3:	mov    edx,0x8000
   1400226f8:	cmp    ax,dx
   1400226fb:	ja     0x14002270d
   1400226fd:	and    r11d,0x1ffff
   140022704:	cmp    r11d,0x18000
   14002270b:	jne    0x140022756
   14002270d:	mov    eax,DWORD PTR [rbp-0x1e]
   140022710:	or     ecx,0xffffffff
   140022713:	cmp    eax,ecx
   140022715:	jne    0x140022750
   140022717:	mov    eax,DWORD PTR [rbp-0x1a]
   14002271a:	mov    DWORD PTR [rbp-0x1e],r12d
   14002271e:	cmp    eax,ecx
   140022720:	jne    0x140022744
   140022722:	movzx  eax,WORD PTR [rbp-0x16]
   140022726:	mov    DWORD PTR [rbp-0x1a],r12d
   14002272a:	cmp    ax,r15w
   14002272e:	jne    0x14002273a
   140022730:	mov    WORD PTR [rbp-0x16],dx
   140022734:	add    r9w,r14w
   140022738:	jmp    0x14002274a
   14002273a:	add    ax,r14w
   14002273e:	mov    WORD PTR [rbp-0x16],ax
   140022742:	jmp    0x14002274a
   140022744:	add    eax,r14d
   140022747:	mov    DWORD PTR [rbp-0x1a],eax
   14002274a:	mov    r10d,DWORD PTR [rbp-0x18]
   14002274e:	jmp    0x140022756
   140022750:	add    eax,r14d
   140022753:	mov    DWORD PTR [rbp-0x1e],eax
   140022756:	mov    eax,0x7fff
   14002275b:	cmp    r9w,ax
   14002275f:	jb     0x14002276a
   140022761:	mov    QWORD PTR [r8],0x0
   140022768:	jmp    0x140022790
   14002276a:	movzx  eax,WORD PTR [rbp-0x1e]
   14002276e:	or     r9w,si
   140022772:	mov    DWORD PTR [r8+0x6],r10d
   140022776:	mov    WORD PTR [r8],ax
   14002277a:	mov    eax,DWORD PTR [rbp-0x1c]
   14002277d:	mov    WORD PTR [r8+0xa],r9w
   140022782:	mov    DWORD PTR [r8+0x2],eax
   140022786:	jmp    0x1400227a0
   140022788:	mov    ebx,0x80000000
   14002278d:	mov    QWORD PTR [r8],r12
   140022790:	neg    si
   140022793:	sbb    eax,eax
   140022795:	and    eax,ebx
   140022797:	add    eax,0x7fff8000
   14002279c:	mov    DWORD PTR [r8+0x8],eax
   1400227a0:	mov    rcx,QWORD PTR [rbp-0x10]
   1400227a4:	xor    rcx,rsp
   1400227a7:	call   0x14000c380
   1400227ac:	mov    rbx,QWORD PTR [rsp+0x68]
   1400227b1:	mov    rsi,QWORD PTR [rsp+0x70]
   1400227b6:	mov    rdi,QWORD PTR [rsp+0x78]
   1400227bb:	add    rsp,0x30
   1400227bf:	pop    r15
   1400227c1:	pop    r14
   1400227c3:	pop    r13
   1400227c5:	pop    r12
   1400227c7:	pop    rbp
   1400227c8:	ret    
   1400227c9:	int3   
   1400227ca:	int3   
   1400227cb:	int3   
   1400227cc:	test   edx,edx
   1400227ce:	je     0x140022b7f
   1400227d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400227d9:	mov    QWORD PTR [rsp+0x18],rsi
   1400227de:	mov    QWORD PTR [rsp+0x20],rdi
   1400227e3:	push   rbp
   1400227e4:	push   r12
   1400227e6:	push   r13
   1400227e8:	push   r14
   1400227ea:	push   r15
   1400227ec:	mov    rbp,rsp
   1400227ef:	sub    rsp,0x50
   1400227f3:	mov    rax,QWORD PTR [rip+0x199d6]        # 0x14003c1d0
   1400227fa:	xor    rax,rsp
   1400227fd:	mov    QWORD PTR [rbp-0x8],rax
   140022801:	lea    r14,[rip+0x1ad28]        # 0x14003d530
   140022808:	xor    edi,edi
   14002280a:	mov    ebx,edx
   14002280c:	sub    r14,0x60
   140022810:	mov    r9,rcx
   140022813:	mov    QWORD PTR [rbp-0x40],rcx
   140022817:	test   edx,edx
   140022819:	jns    0x140022828
   14002281b:	lea    r14,[rip+0x1ae6e]        # 0x14003d690
   140022822:	neg    ebx
   140022824:	sub    r14,0x60
   140022828:	test   r8d,r8d
   14002282b:	jne    0x140022830
   14002282d:	mov    WORD PTR [rcx],di
   140022830:	test   ebx,ebx
   140022832:	je     0x140022b56
   140022838:	mov    r15d,0x8000
   14002283e:	mov    esi,0x1
   140022843:	lea    r11d,[r15-0x1]
   140022847:	mov    eax,ebx
   140022849:	add    r14,0x54
   14002284d:	sar    ebx,0x3
   140022850:	mov    DWORD PTR [rbp-0x48],ebx
   140022853:	mov    QWORD PTR [rbp-0x38],r14
   140022857:	and    eax,0x7
   14002285a:	je     0x140022b4e
   140022860:	cdqe   
   140022862:	lea    rcx,[rax+rax*2]
   140022866:	lea    rdx,[r14+rcx*4]
   14002286a:	cmp    WORD PTR [rdx],r15w
   14002286e:	jb     0x140022890
   140022870:	mov    eax,DWORD PTR [rdx+0x8]
   140022873:	movsd  xmm0,QWORD PTR [rdx]
   140022877:	lea    rdx,[rbp-0x18]
   14002287b:	mov    DWORD PTR [rbp-0x10],eax
   14002287e:	movsd  QWORD PTR [rbp-0x18],xmm0
   140022883:	mov    rax,QWORD PTR [rbp-0x18]
   140022887:	shr    rax,0x10
   14002288b:	sub    eax,esi
   14002288d:	mov    DWORD PTR [rbp-0x16],eax
   140022890:	movzx  ecx,WORD PTR [rdx+0xa]
   140022894:	movzx  eax,WORD PTR [r9+0xa]
   140022899:	mov    DWORD PTR [rbp-0x4c],edi
   14002289c:	movzx  r10d,cx
   1400228a0:	and    cx,r11w
   1400228a4:	mov    QWORD PTR [rbp-0x28],0x0
   1400228ac:	xor    r10w,ax
   1400228b0:	and    ax,r11w
   1400228b4:	mov    DWORD PTR [rbp-0x20],edi
   1400228b7:	and    r10w,r15w
   1400228bb:	lea    r8d,[rax+rcx*1]
   1400228bf:	mov    WORD PTR [rbp-0x50],r10w
   1400228c4:	cmp    ax,r11w
   1400228c8:	jae    0x140022b33
   1400228ce:	cmp    cx,r11w
   1400228d2:	jae    0x140022b33
   1400228d8:	mov    r11d,0xbffd
   1400228de:	cmp    r8w,r11w
   1400228e2:	ja     0x140022b2d
   1400228e8:	mov    r10d,0x3fbf
   1400228ee:	cmp    r8w,r10w
   1400228f2:	ja     0x14002290a
   1400228f4:	mov    QWORD PTR [r9+0x4],0x0
   1400228fc:	mov    DWORD PTR [r9],edi
   1400228ff:	mov    r11d,0x7fff
   140022905:	jmp    0x140022b4e
   14002290a:	test   ax,ax
   14002290d:	jne    0x14002292f
   14002290f:	add    r8w,si
   140022913:	test   DWORD PTR [r9+0x8],0x7fffffff
   14002291b:	jne    0x14002292f
   14002291d:	cmp    DWORD PTR [r9+0x4],edi
   140022921:	jne    0x14002292f
   140022923:	cmp    DWORD PTR [r9],edi
   140022926:	jne    0x14002292f
   140022928:	mov    WORD PTR [r9+0xa],di
   14002292d:	jmp    0x1400228ff
   14002292f:	test   cx,cx
   140022932:	jne    0x14002294a
   140022934:	add    r8w,si
   140022938:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14002293f:	jne    0x14002294a
   140022941:	cmp    DWORD PTR [rdx+0x4],edi
   140022944:	jne    0x14002294a
   140022946:	cmp    DWORD PTR [rdx],edi
   140022948:	je     0x1400228f4
   14002294a:	xor    r14d,r14d
   14002294d:	lea    r10,[rbp-0x28]
   140022951:	lea    r11d,[r14+0x5]
   140022955:	mov    r15d,r14d
   140022958:	mov    r12d,r11d
   14002295b:	test   r11d,r11d
   14002295e:	jle    0x1400229bc
   140022960:	lea    eax,[r15+r15*1]
   140022964:	mov    ebx,r15d
   140022967:	lea    r13,[rdx+0x8]
   14002296b:	cdqe   
   14002296d:	and    ebx,esi
   14002296f:	add    rax,r9
   140022972:	mov    r9,rax
   140022975:	movzx  eax,WORD PTR [r13+0x0]
   14002297a:	movzx  ecx,WORD PTR [r9]
   14002297e:	mov    esi,r14d
   140022981:	imul   ecx,eax
   140022984:	mov    eax,DWORD PTR [r10]
   140022987:	lea    edi,[rax+rcx*1]
   14002298a:	cmp    edi,eax
   14002298c:	jb     0x140022992
   14002298e:	cmp    edi,ecx
   140022990:	jae    0x140022997
   140022992:	mov    esi,0x1
   140022997:	test   esi,esi
   140022999:	mov    DWORD PTR [r10],edi
   14002299c:	mov    esi,0x1
   1400229a1:	je     0x1400229a8
   1400229a3:	add    WORD PTR [r10+0x4],si
   1400229a8:	sub    r12d,esi
   1400229ab:	add    r9,0x2
   1400229af:	sub    r13,0x2
   1400229b3:	test   r12d,r12d
   1400229b6:	jg     0x140022975
   1400229b8:	mov    r9,QWORD PTR [rbp-0x40]
   1400229bc:	sub    r11d,esi
   1400229bf:	add    r10,0x2
   1400229c3:	add    r15d,esi
   1400229c6:	test   r11d,r11d
   1400229c9:	jg     0x140022958
   1400229cb:	mov    r10d,DWORD PTR [rbp-0x20]
   1400229cf:	mov    r11d,DWORD PTR [rbp-0x28]
   1400229d3:	mov    eax,0xc002
   1400229d8:	add    r8w,ax
   1400229dc:	mov    r12d,0xffff
   1400229e2:	test   r8w,r8w
   1400229e6:	jle    0x140022a24
   1400229e8:	test   r10d,r10d
   1400229eb:	js     0x140022a1e
   1400229ed:	mov    edi,DWORD PTR [rbp-0x24]
   1400229f0:	mov    edx,r11d
   1400229f3:	add    r10d,r10d
   1400229f6:	shr    edx,0x1f
   1400229f9:	add    r11d,r11d
   1400229fc:	mov    ecx,edi
   1400229fe:	shr    ecx,0x1f
   140022a01:	lea    eax,[rdi+rdi*1]
   140022a04:	add    r8w,r12w
   140022a08:	or     eax,edx
   140022a0a:	or     r10d,ecx
   140022a0d:	mov    DWORD PTR [rbp-0x28],r11d
   140022a11:	mov    DWORD PTR [rbp-0x24],eax
   140022a14:	mov    DWORD PTR [rbp-0x20],r10d
   140022a18:	test   r8w,r8w
   140022a1c:	jg     0x1400229e8
   140022a1e:	test   r8w,r8w
   140022a22:	jg     0x140022a8a
   140022a24:	add    r8w,r12w
   140022a28:	jns    0x140022a8a
   140022a2a:	mov    r9d,DWORD PTR [rbp-0x4c]
   140022a2e:	movzx  eax,r8w
   140022a32:	neg    ax
   140022a35:	movzx  edx,ax
   140022a38:	add    r8w,dx
   140022a3c:	test   BYTE PTR [rbp-0x28],sil
   140022a40:	je     0x140022a45
   140022a42:	add    r9d,esi
   140022a45:	mov    edi,DWORD PTR [rbp-0x24]
   140022a48:	mov    eax,r10d
   140022a4b:	shr    r11d,1
   140022a4e:	mov    ecx,edi
   140022a50:	shl    eax,0x1f
   140022a53:	shr    edi,1
   140022a55:	shl    ecx,0x1f
   140022a58:	or     edi,eax
   140022a5a:	shr    r10d,1
   140022a5d:	or     r11d,ecx
   140022a60:	mov    DWORD PTR [rbp-0x24],edi
   140022a63:	mov    DWORD PTR [rbp-0x28],r11d
   140022a67:	sub    rdx,rsi
   140022a6a:	jne    0x140022a3c
   140022a6c:	test   r9d,r9d
   140022a6f:	mov    r9,QWORD PTR [rbp-0x40]
   140022a73:	mov    DWORD PTR [rbp-0x20],r10d
   140022a77:	je     0x140022a8a
   140022a79:	movzx  eax,r11w
   140022a7d:	or     ax,si
   140022a80:	mov    WORD PTR [rbp-0x28],ax
   140022a84:	mov    r11d,DWORD PTR [rbp-0x28]
   140022a88:	jmp    0x140022a8e
   140022a8a:	movzx  eax,WORD PTR [rbp-0x28]
   140022a8e:	mov    ebx,DWORD PTR [rbp-0x48]
   140022a91:	mov    r14,QWORD PTR [rbp-0x38]
   140022a95:	mov    r15d,0x8000
   140022a9b:	cmp    ax,r15w
   140022a9f:	ja     0x140022ab1
   140022aa1:	and    r11d,0x1ffff
   140022aa8:	cmp    r11d,0x18000
   140022aaf:	jne    0x140022af7
   140022ab1:	mov    eax,DWORD PTR [rbp-0x26]
   140022ab4:	cmp    eax,0xffffffff
   140022ab7:	jne    0x140022af2
   140022ab9:	mov    eax,DWORD PTR [rbp-0x22]
   140022abc:	xor    edi,edi
   140022abe:	mov    DWORD PTR [rbp-0x26],edi
   140022ac1:	cmp    eax,0xffffffff
   140022ac4:	jne    0x140022ae7
   140022ac6:	movzx  eax,WORD PTR [rbp-0x1e]
   140022aca:	mov    DWORD PTR [rbp-0x22],edi
   140022acd:	cmp    ax,r12w
   140022ad1:	jne    0x140022ade
   140022ad3:	mov    WORD PTR [rbp-0x1e],r15w
   140022ad8:	add    r8w,si
   140022adc:	jmp    0x140022aec
   140022ade:	add    ax,si
   140022ae1:	mov    WORD PTR [rbp-0x1e],ax
   140022ae5:	jmp    0x140022aec
   140022ae7:	add    eax,esi
   140022ae9:	mov    DWORD PTR [rbp-0x22],eax
   140022aec:	mov    r10d,DWORD PTR [rbp-0x20]
   140022af0:	jmp    0x140022af9
   140022af2:	add    eax,esi
   140022af4:	mov    DWORD PTR [rbp-0x26],eax
   140022af7:	xor    edi,edi
   140022af9:	mov    r11d,0x7fff
   140022aff:	cmp    r8w,r11w
   140022b03:	jb     0x140022b0e
   140022b05:	movzx  eax,WORD PTR [rbp-0x50]
   140022b09:	neg    ax
   140022b0c:	jmp    0x140022b37
   140022b0e:	movzx  eax,WORD PTR [rbp-0x26]
   140022b12:	or     r8w,WORD PTR [rbp-0x50]
   140022b17:	mov    DWORD PTR [r9+0x6],r10d
   140022b1b:	mov    WORD PTR [r9],ax
   140022b1f:	mov    eax,DWORD PTR [rbp-0x24]
   140022b22:	mov    WORD PTR [r9+0xa],r8w
   140022b27:	mov    DWORD PTR [r9+0x2],eax
   140022b2b:	jmp    0x140022b4e
   140022b2d:	mov    r11d,0x7fff
   140022b33:	neg    r10w
   140022b37:	sbb    eax,eax
   140022b39:	mov    QWORD PTR [r9],0x0
   140022b40:	and    eax,0x80000000
   140022b45:	add    eax,0x7fff8000
   140022b4a:	mov    DWORD PTR [r9+0x8],eax
   140022b4e:	test   ebx,ebx
   140022b50:	jne    0x140022847
   140022b56:	mov    rcx,QWORD PTR [rbp-0x8]
   140022b5a:	xor    rcx,rsp
   140022b5d:	call   0x14000c380
   140022b62:	lea    r11,[rsp+0x50]
   140022b67:	mov    rbx,QWORD PTR [r11+0x38]
   140022b6b:	mov    rsi,QWORD PTR [r11+0x40]
   140022b6f:	mov    rdi,QWORD PTR [r11+0x48]
   140022b73:	mov    rsp,r11
   140022b76:	pop    r15
   140022b78:	pop    r14
   140022b7a:	pop    r13
   140022b7c:	pop    r12
   140022b7e:	pop    rbp
   140022b7f:	ret    
   140022b80:	mov    eax,DWORD PTR [rcx]
   140022b82:	mov    edx,DWORD PTR [rcx+0x4]
   140022b85:	mov    r8d,eax
   140022b88:	add    eax,eax
   140022b8a:	mov    r9d,edx
   140022b8d:	mov    DWORD PTR [rcx],eax
   140022b8f:	lea    eax,[rdx+rdx*1]
   140022b92:	shr    r8d,0x1f
   140022b96:	or     eax,r8d
   140022b99:	shr    r9d,0x1f
   140022b9d:	mov    DWORD PTR [rcx+0x4],eax
   140022ba0:	mov    eax,DWORD PTR [rcx+0x8]
   140022ba3:	add    eax,eax
   140022ba5:	or     eax,r9d
   140022ba8:	mov    DWORD PTR [rcx+0x8],eax
   140022bab:	ret    
   140022bac:	mov    eax,DWORD PTR [rcx+0x8]
   140022baf:	mov    edx,DWORD PTR [rcx+0x4]
   140022bb2:	mov    r8d,eax
   140022bb5:	shr    eax,1
   140022bb7:	mov    r9d,edx
   140022bba:	mov    DWORD PTR [rcx+0x8],eax
   140022bbd:	mov    eax,DWORD PTR [rcx]
   140022bbf:	shl    r8d,0x1f
   140022bc3:	shl    r9d,0x1f
   140022bc7:	shr    edx,1
   140022bc9:	shr    eax,1
   140022bcb:	or     eax,r9d
   140022bce:	or     edx,r8d
   140022bd1:	mov    DWORD PTR [rcx],eax
   140022bd3:	mov    DWORD PTR [rcx+0x4],edx
   140022bd6:	ret    
   140022bd7:	int3   
   140022bd8:	mov    QWORD PTR [rsp+0x18],rbx
   140022bdd:	push   rbp
   140022bde:	push   rsi
   140022bdf:	push   rdi
   140022be0:	push   r12
   140022be2:	push   r13
   140022be4:	push   r14
   140022be6:	push   r15
   140022be8:	lea    rbp,[rsp-0x7]
   140022bed:	sub    rsp,0xa0
   140022bf4:	mov    rax,QWORD PTR [rip+0x195d5]        # 0x14003c1d0
   140022bfb:	xor    rax,rsp
   140022bfe:	mov    QWORD PTR [rbp-0x1],rax
   140022c02:	mov    r14,QWORD PTR [rbp+0x7f]
   140022c06:	xor    ebx,ebx
   140022c08:	mov    DWORD PTR [rbp-0x6d],r9d
   140022c0c:	lea    r9d,[rbx+0x1]
   140022c10:	mov    QWORD PTR [rbp-0x59],rcx
   140022c14:	mov    QWORD PTR [rbp-0x69],rdx
   140022c18:	lea    r10,[rbp-0x21]
   140022c1c:	mov    WORD PTR [rbp-0x71],bx
   140022c20:	mov    r11d,ebx
   140022c23:	mov    DWORD PTR [rbp-0x75],r9d
   140022c27:	mov    r15d,ebx
   140022c2a:	mov    DWORD PTR [rbp-0x79],ebx
   140022c2d:	mov    r12d,ebx
   140022c30:	mov    r13d,ebx
   140022c33:	mov    esi,ebx
   140022c35:	mov    ecx,ebx
   140022c37:	test   r14,r14
   140022c3a:	jne    0x140022c53
   140022c3c:	call   0x140009cb4
   140022c41:	mov    DWORD PTR [rax],0x16
   140022c47:	call   0x140008d58
   140022c4c:	xor    eax,eax
   140022c4e:	jmp    0x140023412
   140022c53:	mov    rdi,r8
   140022c56:	cmp    BYTE PTR [r8],0x20
   140022c5a:	ja     0x140022c75
   140022c5c:	movsx  rax,BYTE PTR [r8]
   140022c60:	movabs rdx,0x100002600
   140022c6a:	bt     rdx,rax
   140022c6e:	jae    0x140022c75
   140022c70:	add    r8,r9
   140022c73:	jmp    0x140022c56
   140022c75:	mov    dl,BYTE PTR [r8]
   140022c78:	add    r8,r9
   140022c7b:	cmp    ecx,0x5
   140022c7e:	jg     0x140022e8e
   140022c84:	je     0x140022e74
   140022c8a:	mov    r9d,ecx
   140022c8d:	test   ecx,ecx
   140022c8f:	je     0x140022e18
   140022c95:	dec    r9d
   140022c98:	je     0x140022dd8
   140022c9e:	dec    r9d
   140022ca1:	je     0x140022d86
   140022ca7:	dec    r9d
   140022caa:	je     0x140022d39
   140022cb0:	dec    r9d
   140022cb3:	jne    0x140022f53
   140022cb9:	mov    r9d,0x1
   140022cbf:	mov    al,0x30
   140022cc1:	mov    r15d,r9d
   140022cc4:	mov    DWORD PTR [rbp-0x79],r9d
   140022cc8:	test   r11d,r11d
   140022ccb:	jne    0x140022cfd
   140022ccd:	jmp    0x140022cd8
   140022ccf:	mov    dl,BYTE PTR [r8]
   140022cd2:	sub    esi,r9d
   140022cd5:	add    r8,r9
   140022cd8:	cmp    dl,al
   140022cda:	je     0x140022ccf
   140022cdc:	jmp    0x140022cfd
   140022cde:	cmp    dl,0x39
   140022ce1:	jg     0x140022d01
   140022ce3:	cmp    r11d,0x19
   140022ce7:	jae    0x140022cf7
   140022ce9:	sub    dl,al
   140022ceb:	add    r11d,r9d
   140022cee:	mov    BYTE PTR [r10],dl
   140022cf1:	add    r10,r9
   140022cf4:	sub    esi,r9d
   140022cf7:	mov    dl,BYTE PTR [r8]
   140022cfa:	add    r8,r9
   140022cfd:	cmp    dl,al
   140022cff:	jge    0x140022cde
   140022d01:	lea    eax,[rdx-0x2b]
   140022d04:	test   al,0xfd
   140022d06:	je     0x140022d2c
   140022d08:	cmp    dl,0x43
   140022d0b:	jle    0x140022e4d
   140022d11:	cmp    dl,0x45
   140022d14:	jle    0x140022d22
   140022d16:	sub    dl,0x64
   140022d19:	cmp    dl,r9b
   140022d1c:	ja     0x140022e4d
   140022d22:	mov    ecx,0x6
   140022d27:	jmp    0x140022c75
   140022d2c:	sub    r8,r9
   140022d2f:	mov    ecx,0xb
   140022d34:	jmp    0x140022c75
   140022d39:	mov    r9d,0x1
   140022d3f:	mov    al,0x30
   140022d41:	mov    r15d,r9d
   140022d44:	jmp    0x140022d67
   140022d46:	cmp    dl,0x39
   140022d49:	jg     0x140022d6b
   140022d4b:	cmp    r11d,0x19
   140022d4f:	jae    0x140022d5e
   140022d51:	sub    dl,al
   140022d53:	add    r11d,r9d
   140022d56:	mov    BYTE PTR [r10],dl
   140022d59:	add    r10,r9
   140022d5c:	jmp    0x140022d61
   140022d5e:	add    esi,r9d
   140022d61:	mov    dl,BYTE PTR [r8]
   140022d64:	add    r8,r9
   140022d67:	cmp    dl,al
   140022d69:	jge    0x140022d46
   140022d6b:	mov    rax,QWORD PTR [r14]
   140022d6e:	mov    rcx,QWORD PTR [rax+0xf0]
   140022d75:	mov    rax,QWORD PTR [rcx]
   140022d78:	cmp    dl,BYTE PTR [rax]
   140022d7a:	jne    0x140022d01
   140022d7c:	mov    ecx,0x4
   140022d81:	jmp    0x140022c75
   140022d86:	lea    eax,[rdx-0x31]
   140022d89:	cmp    al,0x8
   140022d8b:	ja     0x140022da0
   140022d8d:	mov    ecx,0x3
   140022d92:	mov    r9d,0x1
   140022d98:	sub    r8,r9
   140022d9b:	jmp    0x140022c75
   140022da0:	mov    rax,QWORD PTR [r14]
   140022da3:	mov    rcx,QWORD PTR [rax+0xf0]
   140022daa:	mov    rax,QWORD PTR [rcx]
   140022dad:	cmp    dl,BYTE PTR [rax]
   140022daf:	jne    0x140022dc1
   140022db1:	mov    ecx,0x5
   140022db6:	mov    r9d,0x1
   140022dbc:	jmp    0x140022c75
   140022dc1:	cmp    dl,0x30
   140022dc4:	jne    0x140022fbc
   140022dca:	mov    r9d,0x1
   140022dd0:	mov    ecx,r9d
   140022dd3:	jmp    0x140022c75
   140022dd8:	lea    eax,[rdx-0x31]
   140022ddb:	mov    r9d,0x1
   140022de1:	mov    r15d,r9d
   140022de4:	cmp    al,0x8
   140022de6:	ja     0x140022dee
   140022de8:	lea    ecx,[r9+0x2]
   140022dec:	jmp    0x140022d98
   140022dee:	mov    rax,QWORD PTR [r14]
   140022df1:	mov    rcx,QWORD PTR [rax+0xf0]
   140022df8:	mov    rax,QWORD PTR [rcx]
   140022dfb:	cmp    dl,BYTE PTR [rax]
   140022dfd:	je     0x140022d7c
   140022e03:	lea    eax,[rdx-0x2b]
   140022e06:	test   al,0xfd
   140022e08:	je     0x140022d2c
   140022e0e:	cmp    dl,0x30
   140022e11:	je     0x140022dd0
   140022e13:	jmp    0x140022d08
   140022e18:	lea    eax,[rdx-0x31]
   140022e1b:	cmp    al,0x8
   140022e1d:	jbe    0x140022d8d
   140022e23:	mov    rax,QWORD PTR [r14]
   140022e26:	mov    rcx,QWORD PTR [rax+0xf0]
   140022e2d:	mov    rax,QWORD PTR [rcx]
   140022e30:	cmp    dl,BYTE PTR [rax]
   140022e32:	je     0x140022db1
   140022e38:	cmp    dl,0x2b
   140022e3b:	je     0x140022e66
   140022e3d:	cmp    dl,0x2d
   140022e40:	je     0x140022e55
   140022e42:	cmp    dl,0x30
   140022e45:	je     0x140022dca
   140022e47:	mov    r9d,0x1
   140022e4d:	sub    r8,r9
   140022e50:	jmp    0x140022fc5
   140022e55:	mov    ecx,0x2
   140022e5a:	mov    DWORD PTR [rbp-0x71],0x8000
   140022e61:	jmp    0x140022db6
   140022e66:	mov    ecx,0x2
   140022e6b:	mov    WORD PTR [rbp-0x71],bx
   140022e6f:	jmp    0x140022db6
   140022e74:	sub    dl,0x30
   140022e77:	mov    DWORD PTR [rbp-0x79],r9d
   140022e7b:	cmp    dl,0x9
   140022e7e:	ja     0x140022f5d
   140022e84:	mov    ecx,0x4
   140022e89:	jmp    0x140022d98
   140022e8e:	mov    r9d,ecx
   140022e91:	sub    r9d,0x6
   140022e95:	je     0x140022f37
   140022e9b:	dec    r9d
   140022e9e:	je     0x140022f13
   140022ea0:	dec    r9d
   140022ea3:	je     0x140022ee7
   140022ea5:	dec    r9d
   140022ea8:	je     0x140022f62
   140022eae:	cmp    r9d,0x2
   140022eb2:	jne    0x140022f53
   140022eb8:	cmp    DWORD PTR [rbp+0x77],ebx
   140022ebb:	je     0x140022e47
   140022ebd:	lea    rdi,[r8-0x1]
   140022ec1:	cmp    dl,0x2b
   140022ec4:	je     0x140022edd
   140022ec6:	cmp    dl,0x2d
   140022ec9:	jne    0x140022fbc
   140022ecf:	or     DWORD PTR [rbp-0x75],0xffffffff
   140022ed3:	mov    ecx,0x7
   140022ed8:	jmp    0x140022db6
   140022edd:	mov    ecx,0x7
   140022ee2:	jmp    0x140022db6
   140022ee7:	mov    r9d,0x1
   140022eed:	mov    r12d,r9d
   140022ef0:	jmp    0x140022ef8
   140022ef2:	mov    dl,BYTE PTR [r8]
   140022ef5:	add    r8,r9
   140022ef8:	cmp    dl,0x30
   140022efb:	je     0x140022ef2
   140022efd:	sub    dl,0x31
   140022f00:	cmp    dl,0x8
   140022f03:	ja     0x140022e4d
   140022f09:	mov    ecx,0x9
   140022f0e:	jmp    0x140022d98
   140022f13:	lea    eax,[rdx-0x31]
   140022f16:	cmp    al,0x8
   140022f18:	ja     0x140022f24
   140022f1a:	mov    ecx,0x9
   140022f1f:	jmp    0x140022d92
   140022f24:	cmp    dl,0x30
   140022f27:	jne    0x140022fbc
   140022f2d:	mov    ecx,0x8
   140022f32:	jmp    0x140022db6
   140022f37:	lea    eax,[rdx-0x31]
   140022f3a:	lea    rdi,[r8-0x2]
   140022f3e:	cmp    al,0x8
   140022f40:	jbe    0x140022f1a
   140022f42:	cmp    dl,0x2b
   140022f45:	je     0x140022f4e
   140022f47:	cmp    dl,0x2d
   140022f4a:	je     0x140022ecf
   140022f4c:	jmp    0x140022f24
   140022f4e:	mov    ecx,0x7
   140022f53:	cmp    ecx,0xa
   140022f56:	je     0x140022fbf
   140022f58:	jmp    0x140022db6
   140022f5d:	mov    r8,rdi
   140022f60:	jmp    0x140022fc5
   140022f62:	mov    r9d,0x1
   140022f68:	mov    dil,0x30
   140022f6b:	mov    r12d,r9d
   140022f6e:	jmp    0x140022f94
   140022f70:	cmp    dl,0x39
   140022f73:	jg     0x140022fb2
   140022f75:	lea    r13d,[r13+r13*4+0x0]
   140022f7a:	movsx  eax,dl
   140022f7d:	lea    r13d,[r13-0x18]
   140022f81:	lea    r13d,[rax+r13*2]
   140022f85:	cmp    r13d,0x1450
   140022f8c:	jg     0x140022f9b
   140022f8e:	mov    dl,BYTE PTR [r8]
   140022f91:	add    r8,r9
   140022f94:	cmp    dl,dil
   140022f97:	jge    0x140022f70
   140022f99:	jmp    0x140022fb2
   140022f9b:	mov    r13d,0x1451
   140022fa1:	jmp    0x140022fb2
   140022fa3:	cmp    dl,0x39
   140022fa6:	jg     0x140022e4d
   140022fac:	mov    dl,BYTE PTR [r8]
   140022faf:	add    r8,r9
   140022fb2:	cmp    dl,dil
   140022fb5:	jge    0x140022fa3
   140022fb7:	jmp    0x140022e4d
   140022fbc:	mov    r8,rdi
   140022fbf:	mov    r9d,0x1
   140022fc5:	mov    rax,QWORD PTR [rbp-0x69]
   140022fc9:	mov    QWORD PTR [rax],r8
   140022fcc:	test   r15d,r15d
   140022fcf:	je     0x1400233e8
   140022fd5:	cmp    r11d,0x18
   140022fd9:	jbe    0x140022ff4
   140022fdb:	mov    al,BYTE PTR [rbp-0xa]
   140022fde:	cmp    al,0x5
   140022fe0:	jl     0x140022fe8
   140022fe2:	add    al,r9b
   140022fe5:	mov    BYTE PTR [rbp-0xa],al
   140022fe8:	sub    r10,r9
   140022feb:	mov    r11d,0x18
   140022ff1:	add    esi,r9d
   140022ff4:	test   r11d,r11d
   140022ff7:	jne    0x14002300e
   140022ff9:	movzx  edx,bx
   140022ffc:	movzx  eax,bx
   140022fff:	mov    edi,ebx
   140023001:	mov    ecx,ebx
   140023003:	jmp    0x1400233f7
   140023008:	dec    r11d
   14002300b:	add    esi,r9d
   14002300e:	sub    r10,r9
   140023011:	cmp    BYTE PTR [r10],bl
   140023014:	je     0x140023008
   140023016:	lea    r8,[rbp-0x41]
   14002301a:	lea    rcx,[rbp-0x21]
   14002301e:	mov    edx,r11d
   140023021:	call   0x140028350
   140023026:	cmp    DWORD PTR [rbp-0x75],ebx
   140023029:	jge    0x14002302e
   14002302b:	neg    r13d
   14002302e:	add    r13d,esi
   140023031:	test   r12d,r12d
   140023034:	jne    0x14002303a
   140023036:	add    r13d,DWORD PTR [rbp+0x67]
   14002303a:	cmp    DWORD PTR [rbp-0x79],ebx
   14002303d:	jne    0x140023043
   14002303f:	sub    r13d,DWORD PTR [rbp+0x6f]
   140023043:	cmp    r13d,0x1450
   14002304a:	jg     0x1400233d2
   140023050:	cmp    r13d,0xffffebb0
   140023057:	jl     0x1400233c2
   14002305d:	lea    rsi,[rip+0x1a4cc]        # 0x14003d530
   140023064:	sub    rsi,0x60
   140023068:	test   r13d,r13d
   14002306b:	je     0x1400233b0
   140023071:	jns    0x140023081
   140023073:	lea    rsi,[rip+0x1a616]        # 0x14003d690
   14002307a:	neg    r13d
   14002307d:	sub    rsi,0x60
   140023081:	cmp    DWORD PTR [rbp-0x6d],ebx
   140023084:	jne    0x14002308a
   140023086:	mov    WORD PTR [rbp-0x41],bx
   14002308a:	test   r13d,r13d
   14002308d:	je     0x1400233b0
   140023093:	mov    edi,0x80000000
   140023098:	mov    r9d,0x7fff
   14002309e:	mov    eax,r13d
   1400230a1:	add    rsi,0x54
   1400230a5:	sar    r13d,0x3
   1400230a9:	mov    QWORD PTR [rbp-0x61],rsi
   1400230ad:	and    eax,0x7
   1400230b0:	je     0x1400233a7
   1400230b6:	cdqe   
   1400230b8:	mov    r11d,0x8000
   1400230be:	mov    r14d,0x1
   1400230c4:	lea    rcx,[rax+rax*2]
   1400230c8:	lea    rdx,[rsi+rcx*4]
   1400230cc:	mov    QWORD PTR [rbp-0x69],rdx
   1400230d0:	cmp    WORD PTR [rdx],r11w
   1400230d4:	jb     0x1400230fb
   1400230d6:	mov    eax,DWORD PTR [rdx+0x8]
   1400230d9:	movsd  xmm0,QWORD PTR [rdx]
   1400230dd:	lea    rdx,[rbp-0x31]
   1400230e1:	mov    DWORD PTR [rbp-0x29],eax
   1400230e4:	movsd  QWORD PTR [rbp-0x31],xmm0
   1400230e9:	mov    rax,QWORD PTR [rbp-0x31]
   1400230ed:	shr    rax,0x10
   1400230f1:	mov    QWORD PTR [rbp-0x69],rdx
   1400230f5:	sub    eax,r14d
   1400230f8:	mov    DWORD PTR [rbp-0x2f],eax
   1400230fb:	movzx  eax,WORD PTR [rdx+0xa]
   1400230ff:	movzx  ecx,WORD PTR [rbp-0x37]
   140023103:	mov    QWORD PTR [rbp-0x51],rbx
   140023107:	movzx  r12d,ax
   14002310b:	and    ax,r9w
   14002310f:	mov    DWORD PTR [rbp-0x49],ebx
   140023112:	xor    r12w,cx
   140023116:	and    cx,r9w
   14002311a:	and    r12w,r11w
   14002311e:	lea    r8d,[rcx+rax*1]
   140023122:	cmp    cx,r9w
   140023126:	jae    0x140023393
   14002312c:	cmp    ax,r9w
   140023130:	jae    0x140023393
   140023136:	mov    r10d,0xbffd
   14002313c:	cmp    r8w,r10w
   140023140:	ja     0x140023393
   140023146:	mov    r10d,0x3fbf
   14002314c:	cmp    r8w,r10w
   140023150:	ja     0x14002315e
   140023152:	mov    QWORD PTR [rbp-0x3d],rbx
   140023156:	mov    DWORD PTR [rbp-0x41],ebx
   140023159:	jmp    0x1400233a7
   14002315e:	test   cx,cx
   140023161:	jne    0x140023183
   140023163:	add    r8w,r14w
   140023167:	test   DWORD PTR [rbp-0x39],0x7fffffff
   14002316e:	jne    0x140023183
   140023170:	cmp    DWORD PTR [rbp-0x3d],ebx
   140023173:	jne    0x140023183
   140023175:	cmp    DWORD PTR [rbp-0x41],ebx
   140023178:	jne    0x140023183
   14002317a:	mov    WORD PTR [rbp-0x37],bx
   14002317e:	jmp    0x1400233a7
   140023183:	test   ax,ax
   140023186:	jne    0x14002319e
   140023188:	add    r8w,r14w
   14002318c:	test   DWORD PTR [rdx+0x8],0x7fffffff
   140023193:	jne    0x14002319e
   140023195:	cmp    DWORD PTR [rdx+0x4],ebx
   140023198:	jne    0x14002319e
   14002319a:	cmp    DWORD PTR [rdx],ebx
   14002319c:	je     0x140023152
   14002319e:	mov    r15d,ebx
   1400231a1:	lea    r9,[rbp-0x51]
   1400231a5:	mov    r10d,0x5
   1400231ab:	mov    DWORD PTR [rbp-0x79],r10d
   1400231af:	test   r10d,r10d
   1400231b2:	jle    0x140023220
   1400231b4:	lea    eax,[r15+r15*1]
   1400231b8:	lea    rdi,[rbp-0x41]
   1400231bc:	lea    rsi,[rdx+0x8]
   1400231c0:	movsxd rcx,eax
   1400231c3:	mov    eax,r15d
   1400231c6:	and    eax,r14d
   1400231c9:	add    rdi,rcx
   1400231cc:	mov    edx,eax
   1400231ce:	movzx  eax,WORD PTR [rdi]
   1400231d1:	movzx  ecx,WORD PTR [rsi]
   1400231d4:	mov    r11d,ebx
   1400231d7:	imul   ecx,eax
   1400231da:	mov    eax,DWORD PTR [r9]
   1400231dd:	lea    r14d,[rax+rcx*1]
   1400231e1:	cmp    r14d,eax
   1400231e4:	jb     0x1400231eb
   1400231e6:	cmp    r14d,ecx
   1400231e9:	jae    0x1400231f1
   1400231eb:	mov    r11d,0x1
   1400231f1:	mov    DWORD PTR [r9],r14d
   1400231f4:	mov    r14d,0x1
   1400231fa:	test   r11d,r11d
   1400231fd:	je     0x140023204
   1400231ff:	add    WORD PTR [r9+0x4],r14w
   140023204:	mov    r11d,DWORD PTR [rbp-0x79]
   140023208:	add    rdi,0x2
   14002320c:	sub    rsi,0x2
   140023210:	sub    r11d,r14d
   140023213:	mov    DWORD PTR [rbp-0x79],r11d
   140023217:	test   r11d,r11d
   14002321a:	jg     0x1400231ce
   14002321c:	mov    rdx,QWORD PTR [rbp-0x69]
   140023220:	sub    r10d,r14d
   140023223:	add    r9,0x2
   140023227:	add    r15d,r14d
   14002322a:	test   r10d,r10d
   14002322d:	jg     0x1400231ab
   140023233:	mov    r10d,DWORD PTR [rbp-0x49]
   140023237:	mov    r9d,DWORD PTR [rbp-0x51]
   14002323b:	mov    eax,0xc002
   140023240:	add    r8w,ax
   140023244:	mov    edi,0x80000000
   140023249:	mov    r15d,0xffff
   14002324f:	test   r8w,r8w
   140023253:	jle    0x140023294
   140023255:	test   edi,r10d
   140023258:	jne    0x14002328e
   14002325a:	mov    r11d,DWORD PTR [rbp-0x4d]
   14002325e:	mov    edx,r9d
   140023261:	add    r10d,r10d
   140023264:	shr    edx,0x1f
   140023267:	add    r9d,r9d
   14002326a:	mov    ecx,r11d
   14002326d:	shr    ecx,0x1f
   140023270:	lea    eax,[r11+r11*1]
   140023274:	add    r8w,r15w
   140023278:	or     eax,edx
   14002327a:	or     r10d,ecx
   14002327d:	mov    DWORD PTR [rbp-0x51],r9d
   140023281:	mov    DWORD PTR [rbp-0x4d],eax
   140023284:	mov    DWORD PTR [rbp-0x49],r10d
   140023288:	test   r8w,r8w
   14002328c:	jg     0x140023255
   14002328e:	test   r8w,r8w
   140023292:	jg     0x1400232fe
   140023294:	add    r8w,r15w
   140023298:	jns    0x1400232fe
   14002329a:	movzx  eax,r8w
   14002329e:	mov    edi,ebx
   1400232a0:	neg    ax
   1400232a3:	movzx  edx,ax
   1400232a6:	add    r8w,dx
   1400232aa:	test   BYTE PTR [rbp-0x51],r14b
   1400232ae:	je     0x1400232b3
   1400232b0:	add    edi,r14d
   1400232b3:	mov    r11d,DWORD PTR [rbp-0x4d]
   1400232b7:	mov    eax,r10d
   1400232ba:	shr    r9d,1
   1400232bd:	mov    ecx,r11d
   1400232c0:	shl    eax,0x1f
   1400232c3:	shr    r11d,1
   1400232c6:	shl    ecx,0x1f
   1400232c9:	or     r11d,eax
   1400232cc:	shr    r10d,1
   1400232cf:	or     r9d,ecx
   1400232d2:	mov    DWORD PTR [rbp-0x4d],r11d
   1400232d6:	mov    DWORD PTR [rbp-0x51],r9d
   1400232da:	sub    rdx,r14
   1400232dd:	jne    0x1400232aa
   1400232df:	test   edi,edi
   1400232e1:	mov    DWORD PTR [rbp-0x49],r10d
   1400232e5:	mov    edi,0x80000000
   1400232ea:	je     0x1400232fe
   1400232ec:	movzx  eax,r9w
   1400232f0:	or     ax,r14w
   1400232f4:	mov    WORD PTR [rbp-0x51],ax
   1400232f8:	mov    r9d,DWORD PTR [rbp-0x51]
   1400232fc:	jmp    0x140023302
   1400232fe:	movzx  eax,WORD PTR [rbp-0x51]
   140023302:	mov    rsi,QWORD PTR [rbp-0x61]
   140023306:	mov    r11d,0x8000
   14002330c:	cmp    ax,r11w
   140023310:	ja     0x140023322
   140023312:	and    r9d,0x1ffff
   140023319:	cmp    r9d,0x18000
   140023320:	jne    0x14002336a
   140023322:	mov    eax,DWORD PTR [rbp-0x4f]
   140023325:	or     ecx,0xffffffff
   140023328:	cmp    eax,ecx
   14002332a:	jne    0x140023364
   14002332c:	mov    eax,DWORD PTR [rbp-0x4b]
   14002332f:	mov    DWORD PTR [rbp-0x4f],ebx
   140023332:	cmp    eax,ecx
   140023334:	jne    0x140023358
   140023336:	movzx  eax,WORD PTR [rbp-0x47]
   14002333a:	mov    DWORD PTR [rbp-0x4b],ebx
   14002333d:	cmp    ax,r15w
   140023341:	jne    0x14002334e
   140023343:	mov    WORD PTR [rbp-0x47],r11w
   140023348:	add    r8w,r14w
   14002334c:	jmp    0x14002335e
   14002334e:	add    ax,r14w
   140023352:	mov    WORD PTR [rbp-0x47],ax
   140023356:	jmp    0x14002335e
   140023358:	add    eax,r14d
   14002335b:	mov    DWORD PTR [rbp-0x4b],eax
   14002335e:	mov    r10d,DWORD PTR [rbp-0x49]
   140023362:	jmp    0x14002336a
   140023364:	add    eax,r14d
   140023367:	mov    DWORD PTR [rbp-0x4f],eax
   14002336a:	mov    r9d,0x7fff
   140023370:	cmp    r8w,r9w
   140023374:	jae    0x140023393
   140023376:	movzx  eax,WORD PTR [rbp-0x4f]
   14002337a:	or     r8w,r12w
   14002337e:	mov    DWORD PTR [rbp-0x3b],r10d
   140023382:	mov    WORD PTR [rbp-0x41],ax
   140023386:	mov    eax,DWORD PTR [rbp-0x4d]
   140023389:	mov    WORD PTR [rbp-0x37],r8w
   14002338e:	mov    DWORD PTR [rbp-0x3f],eax
   140023391:	jmp    0x1400233a7
   140023393:	neg    r12w
   140023397:	mov    QWORD PTR [rbp-0x41],rbx
   14002339b:	sbb    eax,eax
   14002339d:	and    eax,edi
   14002339f:	add    eax,0x7fff8000
   1400233a4:	mov    DWORD PTR [rbp-0x39],eax
   1400233a7:	test   r13d,r13d
   1400233aa:	jne    0x14002309e
   1400233b0:	mov    eax,DWORD PTR [rbp-0x39]
   1400233b3:	movzx  edx,WORD PTR [rbp-0x41]
   1400233b7:	mov    ecx,DWORD PTR [rbp-0x3f]
   1400233ba:	mov    edi,DWORD PTR [rbp-0x3b]
   1400233bd:	shr    eax,0x10
   1400233c0:	jmp    0x1400233f7
   1400233c2:	mov    edx,ebx
   1400233c4:	movzx  eax,bx
   1400233c7:	mov    edi,ebx
   1400233c9:	mov    ecx,ebx
   1400233cb:	mov    ebx,0x1
   1400233d0:	jmp    0x1400233f7
   1400233d2:	mov    ecx,ebx
   1400233d4:	movzx  edx,bx
   1400233d7:	mov    eax,0x7fff
   1400233dc:	mov    ebx,0x2
   1400233e1:	mov    edi,0x80000000
   1400233e6:	jmp    0x1400233f7
   1400233e8:	movzx  edx,bx
   1400233eb:	movzx  eax,bx
   1400233ee:	mov    edi,ebx
   1400233f0:	mov    ecx,ebx
   1400233f2:	mov    ebx,0x4
   1400233f7:	mov    r8,QWORD PTR [rbp-0x59]
   1400233fb:	or     ax,WORD PTR [rbp-0x71]
   1400233ff:	mov    WORD PTR [r8+0xa],ax
   140023404:	mov    eax,ebx
   140023406:	mov    WORD PTR [r8],dx
   14002340a:	mov    DWORD PTR [r8+0x2],ecx
   14002340e:	mov    DWORD PTR [r8+0x6],edi
   140023412:	mov    rcx,QWORD PTR [rbp-0x1]
   140023416:	xor    rcx,rsp
   140023419:	call   0x14000c380
   14002341e:	mov    rbx,QWORD PTR [rsp+0xf0]
   140023426:	add    rsp,0xa0
   14002342d:	pop    r15
   14002342f:	pop    r14
   140023431:	pop    r13
   140023433:	pop    r12
   140023435:	pop    rdi
   140023436:	pop    rsi
   140023437:	pop    rbp
   140023438:	ret    
   140023439:	int3   
   14002343a:	int3   
   14002343b:	int3   
   14002343c:	mov    QWORD PTR [rsp+0x10],rbx
   140023441:	push   rbp
   140023442:	push   rsi
   140023443:	push   rdi
   140023444:	push   r12
   140023446:	push   r13
   140023448:	push   r14
   14002344a:	push   r15
   14002344c:	lea    rbp,[rsp-0x27]
   140023451:	sub    rsp,0xc0
   140023458:	mov    rax,QWORD PTR [rip+0x18d71]        # 0x14003c1d0
   14002345f:	xor    rax,rsp
   140023462:	mov    QWORD PTR [rbp+0x17],rax
   140023466:	movzx  r10d,WORD PTR [rcx+0x8]
   14002346b:	mov    rbx,r9
   14002346e:	mov    r9d,DWORD PTR [rcx]
   140023471:	mov    DWORD PTR [rbp-0x4d],edx
   140023474:	mov    edx,0x8000
   140023479:	mov    r11d,0x1
   14002347f:	mov    DWORD PTR [rbp-0x39],r8d
   140023483:	mov    r8d,DWORD PTR [rcx+0x4]
   140023487:	movzx  ecx,r10w
   14002348b:	and    cx,dx
   14002348e:	lea    r13d,[rdx-0x1]
   140023492:	lea    eax,[r11+0x1f]
   140023496:	xor    r12d,r12d
   140023499:	and    r10w,r13w
   14002349d:	mov    QWORD PTR [rbp-0x41],rbx
   1400234a1:	mov    DWORD PTR [rbp-0x9],0xcccccccc
   1400234a8:	mov    DWORD PTR [rbp-0x5],0xcccccccc
   1400234af:	mov    DWORD PTR [rbp-0x1],0x3ffbcccc
   1400234b6:	mov    WORD PTR [rbp-0x67],cx
   1400234ba:	lea    edi,[rax+0xd]
   1400234bd:	test   cx,cx
   1400234c0:	je     0x1400234c8
   1400234c2:	mov    BYTE PTR [rbx+0x2],dil
   1400234c6:	jmp    0x1400234cb
   1400234c8:	mov    BYTE PTR [rbx+0x2],al
   1400234cb:	test   r10w,r10w
   1400234cf:	jne    0x1400234ff
   1400234d1:	test   r8d,r8d
   1400234d4:	jne    0x1400235ce
   1400234da:	test   r9d,r9d
   1400234dd:	jne    0x1400235ce
   1400234e3:	cmp    cx,dx
   1400234e6:	cmove  eax,edi
   1400234e9:	mov    WORD PTR [rbx],r12w
   1400234ed:	mov    BYTE PTR [rbx+0x2],al
   1400234f0:	mov    WORD PTR [rbx+0x3],0x3001
   1400234f6:	mov    BYTE PTR [rbx+0x5],r12b
   1400234fa:	jmp    0x140023e5a
   1400234ff:	cmp    r10w,r13w
   140023503:	jne    0x1400235ce
   140023509:	mov    esi,0x80000000
   14002350e:	mov    WORD PTR [rbx],r11w
   140023512:	cmp    r8d,esi
   140023515:	jne    0x14002351c
   140023517:	test   r9d,r9d
   14002351a:	je     0x140023545
   14002351c:	bt     r8d,0x1e
   140023521:	jb     0x140023545
   140023523:	lea    rcx,[rbx+0x4]
   140023527:	lea    r8,[rip+0x1165a]        # 0x140034b88
   14002352e:	mov    edx,0x16
   140023533:	call   0x14000edd8
   140023538:	test   eax,eax
   14002353a:	je     0x1400235c2
   140023540:	jmp    0x140023ec0
   140023545:	test   cx,cx
   140023548:	je     0x140023575
   14002354a:	cmp    r8d,0xc0000000
   140023551:	jne    0x140023575
   140023553:	test   r9d,r9d
   140023556:	jne    0x1400235a5
   140023558:	lea    rcx,[rbx+0x4]
   14002355c:	lea    r8,[rip+0x1162d]        # 0x140034b90
   140023563:	lea    edx,[r9+0x16]
   140023567:	call   0x14000edd8
   14002356c:	test   eax,eax
   14002356e:	je     0x14002359b
   140023570:	jmp    0x140023ed5
   140023575:	cmp    r8d,esi
   140023578:	jne    0x1400235a5
   14002357a:	test   r9d,r9d
   14002357d:	jne    0x1400235a5
   14002357f:	lea    rcx,[rbx+0x4]
   140023583:	lea    r8,[rip+0x1160e]        # 0x140034b98
   14002358a:	lea    edx,[r9+0x16]
   14002358e:	call   0x14000edd8
   140023593:	test   eax,eax
   140023595:	jne    0x140023eea
   14002359b:	mov    eax,0x5
   1400235a0:	mov    BYTE PTR [rbx+0x3],al
   1400235a3:	jmp    0x1400235c6
   1400235a5:	lea    rcx,[rbx+0x4]
   1400235a9:	lea    r8,[rip+0x115f0]        # 0x140034ba0
   1400235b0:	mov    edx,0x16
   1400235b5:	call   0x14000edd8
   1400235ba:	test   eax,eax
   1400235bc:	jne    0x140023eff
   1400235c2:	mov    BYTE PTR [rbx+0x3],0x6
   1400235c6:	mov    r11d,r12d
   1400235c9:	jmp    0x140023e5a
   1400235ce:	movzx  edx,r10w
   1400235d2:	mov    DWORD PTR [rbp-0x17],r9d
   1400235d6:	mov    WORD PTR [rbp-0xf],r10w
   1400235db:	mov    ecx,r8d
   1400235de:	mov    eax,edx
   1400235e0:	lea    r9,[rip+0x19f49]        # 0x14003d530
   1400235e7:	shr    ecx,0x18
   1400235ea:	shr    eax,0x8
   1400235ed:	mov    r15d,0x80000000
   1400235f3:	lea    eax,[rax+rcx*2]
   1400235f6:	mov    r14d,0x5
   1400235fc:	sub    r9,0x60
   140023600:	mov    DWORD PTR [rbp-0x13],r8d
   140023604:	mov    WORD PTR [rbp-0x19],r12w
   140023609:	mov    esi,0xbffd
   14002360e:	imul   ecx,eax,0x4d
   140023611:	imul   eax,edx,0x4d10
   140023617:	add    eax,0xecbced0c
   14002361c:	mov    DWORD PTR [rbp-0x49],r14d
   140023620:	lea    edi,[r15-0x1]
   140023624:	add    ecx,eax
   140023626:	sar    ecx,0x10
   140023629:	movsx  r10d,cx
   14002362d:	mov    DWORD PTR [rbp-0x61],ecx
   140023630:	neg    r10d
   140023633:	je     0x1400239a8
   140023639:	test   r10d,r10d
   14002363c:	jns    0x14002364f
   14002363e:	lea    r9,[rip+0x1a04b]        # 0x14003d690
   140023645:	neg    r10d
   140023648:	sub    r9,0x60
   14002364c:	test   r10d,r10d
   14002364f:	je     0x1400239a8
   140023655:	mov    r8d,DWORD PTR [rbp-0x15]
   140023659:	mov    edx,DWORD PTR [rbp-0x19]
   14002365c:	mov    eax,r10d
   14002365f:	add    r9,0x54
   140023663:	sar    r10d,0x3
   140023667:	mov    DWORD PTR [rbp-0x51],r10d
   14002366b:	mov    QWORD PTR [rbp-0x59],r9
   14002366f:	and    eax,0x7
   140023672:	je     0x140023991
   140023678:	cdqe   
   14002367a:	lea    rcx,[rax+rax*2]
   14002367e:	lea    rsi,[r9+rcx*4]
   140023682:	mov    r9d,0x8000
   140023688:	mov    QWORD PTR [rbp-0x31],rsi
   14002368c:	cmp    WORD PTR [rsi],r9w
   140023690:	jb     0x1400236b7
   140023692:	mov    eax,DWORD PTR [rsi+0x8]
   140023695:	movsd  xmm0,QWORD PTR [rsi]
   140023699:	lea    rsi,[rbp+0x7]
   14002369d:	mov    DWORD PTR [rbp+0xf],eax
   1400236a0:	movsd  QWORD PTR [rbp+0x7],xmm0
   1400236a5:	mov    rax,QWORD PTR [rbp+0x7]
   1400236a9:	shr    rax,0x10
   1400236ad:	mov    QWORD PTR [rbp-0x31],rsi
   1400236b1:	sub    eax,r11d
   1400236b4:	mov    DWORD PTR [rbp+0x9],eax
   1400236b7:	movzx  ecx,WORD PTR [rsi+0xa]
   1400236bb:	movzx  eax,WORD PTR [rbp-0xf]
   1400236bf:	mov    DWORD PTR [rbp-0x65],r12d
   1400236c3:	movzx  ebx,cx
   1400236c6:	and    cx,r13w
   1400236ca:	mov    QWORD PTR [rbp-0x29],0x0
   1400236d2:	xor    bx,ax
   1400236d5:	and    ax,r13w
   1400236d9:	mov    DWORD PTR [rbp-0x21],r12d
   1400236dd:	and    bx,r9w
   1400236e1:	lea    r9d,[rax+rcx*1]
   1400236e5:	mov    WORD PTR [rbp-0x69],bx
   1400236e9:	cmp    ax,r13w
   1400236ed:	jae    0x140023970
   1400236f3:	cmp    cx,r13w
   1400236f7:	jae    0x140023970
   1400236fd:	mov    r13d,0xbffd
   140023703:	cmp    r9w,r13w
   140023707:	ja     0x14002396a
   14002370d:	mov    ebx,0x3fbf
   140023712:	cmp    r9w,bx
   140023716:	ja     0x14002372b
   140023718:	mov    QWORD PTR [rbp-0x15],0x0
   140023720:	mov    r13d,0x7fff
   140023726:	jmp    0x140023984
   14002372b:	test   ax,ax
   14002372e:	jne    0x140023752
   140023730:	add    r9w,r11w
   140023734:	test   DWORD PTR [rbp-0x11],edi
   140023737:	jne    0x140023752
   140023739:	test   r8d,r8d
   14002373c:	jne    0x140023752
   14002373e:	test   edx,edx
   140023740:	jne    0x140023752
   140023742:	mov    WORD PTR [rbp-0xf],r12w
   140023747:	mov    r13d,0x7fff
   14002374d:	jmp    0x14002398d
   140023752:	test   cx,cx
   140023755:	jne    0x14002376b
   140023757:	add    r9w,r11w
   14002375b:	test   DWORD PTR [rsi+0x8],edi
   14002375e:	jne    0x14002376b
   140023760:	cmp    DWORD PTR [rsi+0x4],r12d
   140023764:	jne    0x14002376b
   140023766:	cmp    DWORD PTR [rsi],r12d
   140023769:	je     0x140023718
   14002376b:	mov    edi,r14d
   14002376e:	lea    rdx,[rbp-0x29]
   140023772:	xor    r14d,r14d
   140023775:	mov    r13d,edi
   140023778:	test   edi,edi
   14002377a:	jle    0x1400237db
   14002377c:	lea    eax,[r12+r12*1]
   140023780:	lea    r14,[rbp-0x19]
   140023784:	mov    ebx,r12d
   140023787:	movsxd rcx,eax
   14002378a:	and    ebx,r11d
   14002378d:	lea    r15,[rsi+0x8]
   140023791:	add    r14,rcx
   140023794:	xor    esi,esi
   140023796:	movzx  eax,WORD PTR [r15]
   14002379a:	movzx  ecx,WORD PTR [r14]
   14002379e:	mov    r10d,esi
   1400237a1:	imul   ecx,eax
   1400237a4:	mov    eax,DWORD PTR [rdx]
   1400237a6:	lea    r8d,[rax+rcx*1]
   1400237aa:	cmp    r8d,eax
   1400237ad:	jb     0x1400237b4
   1400237af:	cmp    r8d,ecx
   1400237b2:	jae    0x1400237b7
   1400237b4:	mov    r10d,r11d
   1400237b7:	mov    DWORD PTR [rdx],r8d
   1400237ba:	test   r10d,r10d
   1400237bd:	je     0x1400237c4
   1400237bf:	add    WORD PTR [rdx+0x4],r11w
   1400237c4:	sub    r13d,r11d
   1400237c7:	add    r14,0x2
   1400237cb:	sub    r15,0x2
   1400237cf:	test   r13d,r13d
   1400237d2:	jg     0x140023796
   1400237d4:	mov    rsi,QWORD PTR [rbp-0x31]
   1400237d8:	xor    r14d,r14d
   1400237db:	sub    edi,r11d
   1400237de:	add    rdx,0x2
   1400237e2:	add    r12d,r11d
   1400237e5:	test   edi,edi
   1400237e7:	jg     0x140023775
   1400237e9:	mov    r10d,DWORD PTR [rbp-0x21]
   1400237ed:	mov    r8d,DWORD PTR [rbp-0x29]
   1400237f1:	mov    eax,0xc002
   1400237f6:	add    r9w,ax
   1400237fa:	xor    r12d,r12d
   1400237fd:	mov    ebx,0xffff
   140023802:	mov    r15d,0x80000000
   140023808:	test   r9w,r9w
   14002380c:	jle    0x14002384a
   14002380e:	test   r15d,r10d
   140023811:	jne    0x140023844
   140023813:	mov    edi,DWORD PTR [rbp-0x25]
   140023816:	mov    edx,r8d
   140023819:	add    r10d,r10d
   14002381c:	shr    edx,0x1f
   14002381f:	add    r8d,r8d
   140023822:	mov    ecx,edi
   140023824:	shr    ecx,0x1f
   140023827:	lea    eax,[rdi+rdi*1]
   14002382a:	add    r9w,bx
   14002382e:	or     eax,edx
   140023830:	or     r10d,ecx
   140023833:	mov    DWORD PTR [rbp-0x29],r8d
   140023837:	mov    DWORD PTR [rbp-0x25],eax
   14002383a:	mov    DWORD PTR [rbp-0x21],r10d
   14002383e:	test   r9w,r9w
   140023842:	jg     0x14002380e
   140023844:	test   r9w,r9w
   140023848:	jg     0x1400238b7
   14002384a:	add    r9w,bx
   14002384e:	jns    0x1400238b7
   140023850:	movzx  eax,r9w
   140023854:	neg    ax
   140023857:	movzx  edx,ax
   14002385a:	add    r9w,dx
   14002385e:	mov    WORD PTR [rbp-0x5d],r9w
   140023863:	mov    r9d,DWORD PTR [rbp-0x65]
   140023867:	test   BYTE PTR [rbp-0x29],r11b
   14002386b:	je     0x140023870
   14002386d:	add    r9d,r11d
   140023870:	mov    edi,DWORD PTR [rbp-0x25]
   140023873:	mov    eax,r10d
   140023876:	shr    r8d,1
   140023879:	mov    ecx,edi
   14002387b:	shl    eax,0x1f
   14002387e:	shr    edi,1
   140023880:	shl    ecx,0x1f
   140023883:	or     edi,eax
   140023885:	shr    r10d,1
   140023888:	or     r8d,ecx
   14002388b:	mov    DWORD PTR [rbp-0x25],edi
   14002388e:	mov    DWORD PTR [rbp-0x29],r8d
   140023892:	sub    rdx,r11
   140023895:	jne    0x140023867
   140023897:	test   r9d,r9d
   14002389a:	movzx  r9d,WORD PTR [rbp-0x5d]
   14002389f:	mov    DWORD PTR [rbp-0x21],r10d
   1400238a3:	je     0x1400238b7
   1400238a5:	movzx  eax,r8w
   1400238a9:	or     ax,r11w
   1400238ad:	mov    WORD PTR [rbp-0x29],ax
   1400238b1:	mov    r8d,DWORD PTR [rbp-0x29]
   1400238b5:	jmp    0x1400238bb
   1400238b7:	movzx  eax,WORD PTR [rbp-0x29]
   1400238bb:	mov    ecx,0x8000
   1400238c0:	cmp    ax,cx
   1400238c3:	ja     0x1400238d5
   1400238c5:	and    r8d,0x1ffff
   1400238cc:	cmp    r8d,0x18000
   1400238d3:	jne    0x14002391d
   1400238d5:	mov    eax,DWORD PTR [rbp-0x27]
   1400238d8:	or     edx,0xffffffff
   1400238db:	cmp    eax,edx
   1400238dd:	jne    0x140023917
   1400238df:	mov    eax,DWORD PTR [rbp-0x23]
   1400238e2:	mov    DWORD PTR [rbp-0x27],r12d
   1400238e6:	cmp    eax,edx
   1400238e8:	jne    0x14002390b
   1400238ea:	movzx  eax,WORD PTR [rbp-0x1f]
   1400238ee:	mov    DWORD PTR [rbp-0x23],r12d
   1400238f2:	cmp    ax,bx
   1400238f5:	jne    0x140023901
   1400238f7:	mov    WORD PTR [rbp-0x1f],cx
   1400238fb:	add    r9w,r11w
   1400238ff:	jmp    0x140023911
   140023901:	add    ax,r11w
   140023905:	mov    WORD PTR [rbp-0x1f],ax
   140023909:	jmp    0x140023911
   14002390b:	add    eax,r11d
   14002390e:	mov    DWORD PTR [rbp-0x23],eax
   140023911:	mov    r10d,DWORD PTR [rbp-0x21]
   140023915:	jmp    0x14002391d
   140023917:	add    eax,r11d
   14002391a:	mov    DWORD PTR [rbp-0x27],eax
   14002391d:	mov    r13d,0x7fff
   140023923:	mov    r14d,0x5
   140023929:	mov    edi,0x7fffffff
   14002392e:	cmp    r9w,r13w
   140023932:	jb     0x140023941
   140023934:	movzx  eax,WORD PTR [rbp-0x69]
   140023938:	mov    r10d,DWORD PTR [rbp-0x51]
   14002393c:	neg    ax
   14002393f:	jmp    0x140023973
   140023941:	movzx  eax,WORD PTR [rbp-0x27]
   140023945:	or     r9w,WORD PTR [rbp-0x69]
   14002394a:	mov    DWORD PTR [rbp-0x13],r10d
   14002394e:	mov    r10d,DWORD PTR [rbp-0x51]
   140023952:	mov    WORD PTR [rbp-0x19],ax
   140023956:	mov    eax,DWORD PTR [rbp-0x25]
   140023959:	mov    DWORD PTR [rbp-0x17],eax
   14002395c:	mov    r8d,DWORD PTR [rbp-0x15]
   140023960:	mov    edx,DWORD PTR [rbp-0x19]
   140023963:	mov    WORD PTR [rbp-0xf],r9w
   140023968:	jmp    0x14002398d
   14002396a:	mov    r13d,0x7fff
   140023970:	neg    bx
   140023973:	sbb    eax,eax
   140023975:	mov    DWORD PTR [rbp-0x15],r12d
   140023979:	and    eax,r15d
   14002397c:	add    eax,0x7fff8000
   140023981:	mov    DWORD PTR [rbp-0x11],eax
   140023984:	mov    edx,r12d
   140023987:	mov    r8d,r12d
   14002398a:	mov    DWORD PTR [rbp-0x19],edx
   14002398d:	mov    r9,QWORD PTR [rbp-0x59]
   140023991:	test   r10d,r10d
   140023994:	jne    0x14002365c
   14002399a:	mov    rbx,QWORD PTR [rbp-0x41]
   14002399e:	mov    ecx,DWORD PTR [rbp-0x61]
   1400239a1:	mov    esi,0xbffd
   1400239a6:	jmp    0x1400239af
   1400239a8:	mov    r8d,DWORD PTR [rbp-0x15]
   1400239ac:	mov    edx,DWORD PTR [rbp-0x19]
   1400239af:	mov    eax,DWORD PTR [rbp-0x11]
   1400239b2:	mov    r9d,0x3fff
   1400239b8:	shr    eax,0x10
   1400239bb:	cmp    ax,r9w
   1400239bf:	jb     0x140023c7b
   1400239c5:	add    cx,r11w
   1400239c9:	mov    r9d,0x8000
   1400239cf:	mov    DWORD PTR [rbp-0x65],r12d
   1400239d3:	lea    r10d,[r9-0x1]
   1400239d7:	mov    DWORD PTR [rbp-0x61],ecx
   1400239da:	movzx  ecx,WORD PTR [rbp+0x1]
   1400239de:	movzx  r13d,cx
   1400239e2:	and    cx,r10w
   1400239e6:	mov    QWORD PTR [rbp-0x29],0x0
   1400239ee:	xor    r13w,ax
   1400239f2:	and    ax,r10w
   1400239f6:	mov    DWORD PTR [rbp-0x21],r12d
   1400239fa:	and    r13w,r9w
   1400239fe:	lea    r9d,[rax+rcx*1]
   140023a02:	cmp    ax,r10w
   140023a06:	jae    0x140023c64
   140023a0c:	cmp    cx,r10w
   140023a10:	jae    0x140023c64
   140023a16:	cmp    r9w,si
   140023a1a:	ja     0x140023c64
   140023a20:	mov    r10d,0x3fbf
   140023a26:	cmp    r9w,r10w
   140023a2a:	ja     0x140023a35
   140023a2c:	mov    DWORD PTR [rbp-0x11],r12d
   140023a30:	jmp    0x140023c75
   140023a35:	test   ax,ax
   140023a38:	jne    0x140023a56
   140023a3a:	add    r9w,r11w
   140023a3e:	test   DWORD PTR [rbp-0x11],edi
   140023a41:	jne    0x140023a56
   140023a43:	test   r8d,r8d
   140023a46:	jne    0x140023a56
   140023a48:	test   edx,edx
   140023a4a:	jne    0x140023a56
   140023a4c:	mov    WORD PTR [rbp-0xf],r12w
   140023a51:	jmp    0x140023c7b
   140023a56:	test   cx,cx
   140023a59:	jne    0x140023a70
   140023a5b:	add    r9w,r11w
   140023a5f:	test   DWORD PTR [rbp-0x1],edi
   140023a62:	jne    0x140023a70
   140023a64:	cmp    DWORD PTR [rbp-0x5],r12d
   140023a68:	jne    0x140023a70
   140023a6a:	cmp    DWORD PTR [rbp-0x9],r12d
   140023a6e:	je     0x140023a2c
   140023a70:	mov    edi,r12d
   140023a73:	lea    rdx,[rbp-0x29]
   140023a77:	mov    esi,r14d
   140023a7a:	test   r14d,r14d
   140023a7d:	jle    0x140023adc
   140023a7f:	lea    eax,[rdi+rdi*1]
   140023a82:	lea    r15,[rbp-0x19]
   140023a86:	mov    r12d,edi
   140023a89:	movsxd rcx,eax
   140023a8c:	and    r12d,r11d
   140023a8f:	lea    r14,[rbp-0x1]
   140023a93:	add    r15,rcx
   140023a96:	xor    ebx,ebx
   140023a98:	movzx  eax,WORD PTR [r15]
   140023a9c:	movzx  ecx,WORD PTR [r14]
   140023aa0:	mov    r8d,ebx
   140023aa3:	imul   ecx,eax
   140023aa6:	mov    eax,DWORD PTR [rdx]
   140023aa8:	lea    r10d,[rax+rcx*1]
   140023aac:	cmp    r10d,eax
   140023aaf:	jb     0x140023ab6
   140023ab1:	cmp    r10d,ecx
   140023ab4:	jae    0x140023ab9
   140023ab6:	mov    r8d,r11d
   140023ab9:	mov    DWORD PTR [rdx],r10d
   140023abc:	test   r8d,r8d
   140023abf:	je     0x140023ac6
   140023ac1:	add    WORD PTR [rdx+0x4],r11w
   140023ac6:	sub    esi,r11d
   140023ac9:	add    r15,0x2
   140023acd:	sub    r14,0x2
   140023ad1:	test   esi,esi
   140023ad3:	jg     0x140023a98
   140023ad5:	mov    r14d,DWORD PTR [rbp-0x49]
   140023ad9:	xor    r12d,r12d
   140023adc:	sub    r14d,r11d
   140023adf:	add    rdx,0x2
   140023ae3:	add    edi,r11d
   140023ae6:	mov    DWORD PTR [rbp-0x49],r14d
   140023aea:	test   r14d,r14d
   140023aed:	jg     0x140023a77
   140023aef:	mov    rbx,QWORD PTR [rbp-0x41]
   140023af3:	mov    r8d,DWORD PTR [rbp-0x21]
   140023af7:	mov    r10d,DWORD PTR [rbp-0x29]
   140023afb:	mov    eax,0xc002
   140023b00:	mov    esi,0x80000000
   140023b05:	mov    r14d,0xffff
   140023b0b:	add    r9w,ax
   140023b0f:	test   r9w,r9w
   140023b13:	jle    0x140023b51
   140023b15:	test   esi,r8d
   140023b18:	jne    0x140023b4b
   140023b1a:	mov    edi,DWORD PTR [rbp-0x25]
   140023b1d:	mov    edx,r10d
   140023b20:	add    r8d,r8d
   140023b23:	shr    edx,0x1f
   140023b26:	add    r10d,r10d
   140023b29:	mov    ecx,edi
   140023b2b:	shr    ecx,0x1f
   140023b2e:	lea    eax,[rdi+rdi*1]
   140023b31:	add    r9w,r14w
   140023b35:	or     eax,edx
   140023b37:	or     r8d,ecx
   140023b3a:	mov    DWORD PTR [rbp-0x29],r10d
   140023b3e:	mov    DWORD PTR [rbp-0x25],eax
   140023b41:	mov    DWORD PTR [rbp-0x21],r8d
   140023b45:	test   r9w,r9w
   140023b49:	jg     0x140023b15
   140023b4b:	test   r9w,r9w
   140023b4f:	jg     0x140023bb6
   140023b51:	add    r9w,r14w
   140023b55:	jns    0x140023bb6
   140023b57:	mov    ebx,DWORD PTR [rbp-0x65]
   140023b5a:	movzx  eax,r9w
   140023b5e:	neg    ax
   140023b61:	movzx  edx,ax
   140023b64:	add    r9w,dx
   140023b68:	test   BYTE PTR [rbp-0x29],r11b
   140023b6c:	je     0x140023b71
   140023b6e:	add    ebx,r11d
   140023b71:	mov    edi,DWORD PTR [rbp-0x25]
   140023b74:	mov    eax,r8d
   140023b77:	shr    r10d,1
   140023b7a:	mov    ecx,edi
   140023b7c:	shl    eax,0x1f
   140023b7f:	shr    edi,1
   140023b81:	shl    ecx,0x1f
   140023b84:	or     edi,eax
   140023b86:	shr    r8d,1
   140023b89:	or     r10d,ecx
   140023b8c:	mov    DWORD PTR [rbp-0x25],edi
   140023b8f:	mov    DWORD PTR [rbp-0x29],r10d
   140023b93:	sub    rdx,r11
   140023b96:	jne    0x140023b68
   140023b98:	test   ebx,ebx
   140023b9a:	mov    rbx,QWORD PTR [rbp-0x41]
   140023b9e:	mov    DWORD PTR [rbp-0x21],r8d
   140023ba2:	je     0x140023bb6
   140023ba4:	movzx  eax,r10w
   140023ba8:	or     ax,r11w
   140023bac:	mov    WORD PTR [rbp-0x29],ax
   140023bb0:	mov    r10d,DWORD PTR [rbp-0x29]
   140023bb4:	jmp    0x140023bba
   140023bb6:	movzx  eax,WORD PTR [rbp-0x29]
   140023bba:	mov    ecx,0x8000
   140023bbf:	cmp    ax,cx
   140023bc2:	ja     0x140023bd4
   140023bc4:	and    r10d,0x1ffff
   140023bcb:	cmp    r10d,0x18000
   140023bd2:	jne    0x140023c1d
   140023bd4:	mov    eax,DWORD PTR [rbp-0x27]
   140023bd7:	or     edx,0xffffffff
   140023bda:	cmp    eax,edx
   140023bdc:	jne    0x140023c17
   140023bde:	mov    eax,DWORD PTR [rbp-0x23]
   140023be1:	mov    DWORD PTR [rbp-0x27],r12d
   140023be5:	cmp    eax,edx
   140023be7:	jne    0x140023c0b
   140023be9:	movzx  eax,WORD PTR [rbp-0x1f]
   140023bed:	mov    DWORD PTR [rbp-0x23],r12d
   140023bf1:	cmp    ax,r14w
   140023bf5:	jne    0x140023c01
   140023bf7:	mov    WORD PTR [rbp-0x1f],cx
   140023bfb:	add    r9w,r11w
   140023bff:	jmp    0x140023c11
   140023c01:	add    ax,r11w
   140023c05:	mov    WORD PTR [rbp-0x1f],ax
   140023c09:	jmp    0x140023c11
   140023c0b:	add    eax,r11d
   140023c0e:	mov    DWORD PTR [rbp-0x23],eax
   140023c11:	mov    r8d,DWORD PTR [rbp-0x21]
   140023c15:	jmp    0x140023c1d
   140023c17:	add    eax,r11d
   140023c1a:	mov    DWORD PTR [rbp-0x27],eax
   140023c1d:	mov    eax,0x7fff
   140023c22:	cmp    r9w,ax
   140023c26:	jb     0x140023c40
   140023c28:	neg    r13w
   140023c2c:	mov    r8d,r12d
   140023c2f:	mov    edx,r12d
   140023c32:	sbb    eax,eax
   140023c34:	and    eax,esi
   140023c36:	add    eax,0x7fff8000
   140023c3b:	mov    DWORD PTR [rbp-0x11],eax
   140023c3e:	jmp    0x140023c80
   140023c40:	movzx  eax,WORD PTR [rbp-0x27]
   140023c44:	or     r9w,r13w
   140023c48:	mov    DWORD PTR [rbp-0x13],r8d
   140023c4c:	mov    WORD PTR [rbp-0x19],ax
   140023c50:	mov    eax,DWORD PTR [rbp-0x25]
   140023c53:	mov    WORD PTR [rbp-0xf],r9w
   140023c58:	mov    DWORD PTR [rbp-0x17],eax
   140023c5b:	mov    r8d,DWORD PTR [rbp-0x15]
   140023c5f:	mov    edx,DWORD PTR [rbp-0x19]
   140023c62:	jmp    0x140023c80
   140023c64:	neg    r13w
   140023c68:	sbb    eax,eax
   140023c6a:	and    eax,r15d
   140023c6d:	add    eax,0x7fff8000
   140023c72:	mov    DWORD PTR [rbp-0x11],eax
   140023c75:	mov    edx,r12d
   140023c78:	mov    r8d,r12d
   140023c7b:	mov    ecx,0x8000
   140023c80:	mov    eax,DWORD PTR [rbp-0x61]
   140023c83:	mov    r14d,DWORD PTR [rbp-0x4d]
   140023c87:	mov    WORD PTR [rbx],ax
   140023c8a:	test   BYTE PTR [rbp-0x39],r11b
   140023c8e:	je     0x140023cad
   140023c90:	cwde   
   140023c91:	add    r14d,eax
   140023c94:	test   r14d,r14d
   140023c97:	jg     0x140023cad
   140023c99:	cmp    WORD PTR [rbp-0x67],cx
   140023c9d:	mov    eax,0x20
   140023ca2:	lea    ecx,[rax+0xd]
   140023ca5:	cmove  eax,ecx
   140023ca8:	jmp    0x1400234e9
   140023cad:	mov    r9d,DWORD PTR [rbp-0x11]
   140023cb1:	mov    eax,0x15
   140023cb6:	mov    WORD PTR [rbp-0xf],r12w
   140023cbb:	mov    esi,DWORD PTR [rbp-0x11]
   140023cbe:	cmp    r14d,eax
   140023cc1:	lea    r10d,[rax-0xd]
   140023cc5:	cmovg  r14d,eax
   140023cc9:	shr    r9d,0x10
   140023ccd:	sub    r9d,0x3ffe
   140023cd4:	mov    ecx,r8d
   140023cd7:	mov    eax,edx
   140023cd9:	add    esi,esi
   140023cdb:	add    r8d,r8d
   140023cde:	shr    eax,0x1f
   140023ce1:	shr    ecx,0x1f
   140023ce4:	or     r8d,eax
   140023ce7:	or     esi,ecx
   140023ce9:	add    edx,edx
   140023ceb:	sub    r10,r11
   140023cee:	jne    0x140023cd4
   140023cf0:	mov    DWORD PTR [rbp-0x15],r8d
   140023cf4:	mov    DWORD PTR [rbp-0x19],edx
   140023cf7:	test   r9d,r9d
   140023cfa:	jns    0x140023d2e
   140023cfc:	neg    r9d
   140023cff:	movzx  r10d,r9b
   140023d03:	test   r10d,r10d
   140023d06:	jle    0x140023d2e
   140023d08:	mov    ecx,r8d
   140023d0b:	mov    eax,esi
   140023d0d:	shr    edx,1
   140023d0f:	shr    r8d,1
   140023d12:	shl    eax,0x1f
   140023d15:	shl    ecx,0x1f
   140023d18:	sub    r10d,r11d
   140023d1b:	shr    esi,1
   140023d1d:	or     r8d,eax
   140023d20:	or     edx,ecx
   140023d22:	test   r10d,r10d
   140023d25:	jg     0x140023d08
   140023d27:	mov    DWORD PTR [rbp-0x15],r8d
   140023d2b:	mov    DWORD PTR [rbp-0x19],edx
   140023d2e:	lea    r15d,[r14+0x1]
   140023d32:	lea    rdi,[rbx+0x4]
   140023d36:	mov    r10,rdi
   140023d39:	test   r15d,r15d
   140023d3c:	jle    0x140023e16
   140023d42:	movsd  xmm0,QWORD PTR [rbp-0x19]
   140023d47:	mov    ecx,r8d
   140023d4a:	add    r8d,r8d
   140023d4d:	shr    ecx,0x1f
   140023d50:	mov    eax,edx
   140023d52:	add    edx,edx
   140023d54:	shr    eax,0x1f
   140023d57:	lea    r9d,[rsi+rsi*1]
   140023d5b:	movsd  QWORD PTR [rbp+0x7],xmm0
   140023d60:	or     r8d,eax
   140023d63:	or     r9d,ecx
   140023d66:	mov    eax,edx
   140023d68:	mov    ecx,r8d
   140023d6b:	shr    eax,0x1f
   140023d6e:	add    r8d,r8d
   140023d71:	or     r8d,eax
   140023d74:	mov    eax,DWORD PTR [rbp+0x7]
   140023d77:	add    edx,edx
   140023d79:	shr    ecx,0x1f
   140023d7c:	add    r9d,r9d
   140023d7f:	lea    r12d,[rax+rdx*1]
   140023d83:	or     r9d,ecx
   140023d86:	cmp    r12d,edx
   140023d89:	jb     0x140023d90
   140023d8b:	cmp    r12d,eax
   140023d8e:	jae    0x140023db1
   140023d90:	xor    r14d,r14d
   140023d93:	lea    eax,[r8+0x1]
   140023d97:	mov    ecx,r14d
   140023d9a:	cmp    eax,r8d
   140023d9d:	jb     0x140023da4
   140023d9f:	cmp    eax,r11d
   140023da2:	jae    0x140023da7
   140023da4:	mov    ecx,r11d
   140023da7:	mov    r8d,eax
   140023daa:	test   ecx,ecx
   140023dac:	je     0x140023db1
   140023dae:	add    r9d,r11d
   140023db1:	mov    rax,QWORD PTR [rbp+0x7]
   140023db5:	shr    rax,0x20
   140023db9:	lea    r14d,[r8+rax*1]
   140023dbd:	cmp    r14d,r8d
   140023dc0:	jb     0x140023dc7
   140023dc2:	cmp    r14d,eax
   140023dc5:	jae    0x140023dca
   140023dc7:	add    r9d,r11d
   140023dca:	mov    eax,r12d
   140023dcd:	add    r9d,esi
   140023dd0:	lea    edx,[r12+r12*1]
   140023dd4:	shr    eax,0x1f
   140023dd7:	xor    r12d,r12d
   140023dda:	lea    r8d,[r14+r14*1]
   140023dde:	or     r8d,eax
   140023de1:	mov    ecx,r14d
   140023de4:	lea    eax,[r9+r9*1]
   140023de8:	shr    ecx,0x1f
   140023deb:	sub    r15d,r11d
   140023dee:	mov    DWORD PTR [rbp-0x19],edx
   140023df1:	or     eax,ecx
   140023df3:	mov    DWORD PTR [rbp-0x15],r8d
   140023df7:	mov    DWORD PTR [rbp-0x11],eax
   140023dfa:	shr    eax,0x18
   140023dfd:	mov    BYTE PTR [rbp-0xe],r12b
   140023e01:	add    al,0x30
   140023e03:	mov    BYTE PTR [r10],al
   140023e06:	add    r10,r11
   140023e09:	test   r15d,r15d
   140023e0c:	jle    0x140023e16
   140023e0e:	mov    esi,DWORD PTR [rbp-0x11]
   140023e11:	jmp    0x140023d42
   140023e16:	sub    r10,r11
   140023e19:	mov    al,BYTE PTR [r10]
   140023e1c:	sub    r10,r11
   140023e1f:	cmp    al,0x35
   140023e21:	jl     0x140023e8d
   140023e23:	jmp    0x140023e32
   140023e25:	cmp    BYTE PTR [r10],0x39
   140023e29:	jne    0x140023e37
   140023e2b:	mov    BYTE PTR [r10],0x30
   140023e2f:	sub    r10,r11
   140023e32:	cmp    r10,rdi
   140023e35:	jae    0x140023e25
   140023e37:	cmp    r10,rdi
   140023e3a:	jae    0x140023e43
   140023e3c:	add    r10,r11
   140023e3f:	add    WORD PTR [rbx],r11w
   140023e43:	add    BYTE PTR [r10],r11b
   140023e46:	sub    r10b,bl
   140023e49:	sub    r10b,0x3
   140023e4d:	movsx  rax,r10b
   140023e51:	mov    BYTE PTR [rbx+0x3],r10b
   140023e55:	mov    BYTE PTR [rax+rbx*1+0x4],r12b
   140023e5a:	mov    eax,r11d
   140023e5d:	mov    rcx,QWORD PTR [rbp+0x17]
   140023e61:	xor    rcx,rsp
   140023e64:	call   0x14000c380
   140023e69:	mov    rbx,QWORD PTR [rsp+0x108]
   140023e71:	add    rsp,0xc0
   140023e78:	pop    r15
   140023e7a:	pop    r14
   140023e7c:	pop    r13
   140023e7e:	pop    r12
   140023e80:	pop    rdi
   140023e81:	pop    rsi
   140023e82:	pop    rbp
   140023e83:	ret    
   140023e84:	cmp    BYTE PTR [r10],0x30
   140023e88:	jne    0x140023e92
   140023e8a:	sub    r10,r11
   140023e8d:	cmp    r10,rdi
   140023e90:	jae    0x140023e84
   140023e92:	cmp    r10,rdi
   140023e95:	jae    0x140023e46
   140023e97:	mov    eax,0x20
   140023e9c:	mov    r9d,0x8000
   140023ea2:	mov    WORD PTR [rbx],r12w
   140023ea6:	cmp    WORD PTR [rbp-0x67],r9w
   140023eab:	lea    ecx,[rax+0xd]
   140023eae:	mov    BYTE PTR [rbx+0x3],r11b
   140023eb2:	cmove  eax,ecx
   140023eb5:	mov    BYTE PTR [rbx+0x2],al
   140023eb8:	mov    BYTE PTR [rdi],0x30
   140023ebb:	jmp    0x1400234f6
   140023ec0:	xor    r9d,r9d
   140023ec3:	xor    r8d,r8d
   140023ec6:	xor    edx,edx
   140023ec8:	xor    ecx,ecx
   140023eca:	mov    QWORD PTR [rsp+0x20],r12
   140023ecf:	call   0x140008da8
   140023ed4:	int3   
   140023ed5:	xor    r9d,r9d
   140023ed8:	xor    r8d,r8d
   140023edb:	xor    edx,edx
   140023edd:	xor    ecx,ecx
   140023edf:	mov    QWORD PTR [rsp+0x20],r12
   140023ee4:	call   0x140008da8
   140023ee9:	int3   
   140023eea:	xor    r9d,r9d
   140023eed:	xor    r8d,r8d
   140023ef0:	xor    edx,edx
   140023ef2:	xor    ecx,ecx
   140023ef4:	mov    QWORD PTR [rsp+0x20],r12
   140023ef9:	call   0x140008da8
   140023efe:	int3   
   140023eff:	xor    r9d,r9d
   140023f02:	xor    r8d,r8d
   140023f05:	xor    edx,edx
   140023f07:	xor    ecx,ecx
   140023f09:	mov    QWORD PTR [rsp+0x20],r12
   140023f0e:	call   0x140008da8
   140023f13:	int3   
   140023f14:	mov    eax,DWORD PTR [rcx]
   140023f16:	mov    r10d,DWORD PTR [rdx]
   140023f19:	xor    r9d,r9d
   140023f1c:	lea    r8d,[rax+r10*1]
   140023f20:	mov    r11,rdx
   140023f23:	cmp    r8d,eax
   140023f26:	jb     0x140023f2d
   140023f28:	cmp    r8d,r10d
   140023f2b:	jae    0x140023f33
   140023f2d:	mov    r9d,0x1
   140023f33:	mov    DWORD PTR [rcx],r8d
   140023f36:	test   r9d,r9d
   140023f39:	je     0x140023f5e
   140023f3b:	mov    eax,DWORD PTR [rcx+0x4]
   140023f3e:	xor    r8d,r8d
   140023f41:	lea    edx,[rax+0x1]
   140023f44:	cmp    edx,eax
   140023f46:	jb     0x140023f4d
   140023f48:	cmp    edx,0x1
   140023f4b:	jae    0x140023f53
   140023f4d:	mov    r8d,0x1
   140023f53:	mov    DWORD PTR [rcx+0x4],edx
   140023f56:	test   r8d,r8d
   140023f59:	je     0x140023f5e
   140023f5b:	inc    DWORD PTR [rcx+0x8]
   140023f5e:	mov    eax,DWORD PTR [rcx+0x4]
   140023f61:	mov    r9d,DWORD PTR [r11+0x4]
   140023f65:	xor    r8d,r8d
   140023f68:	lea    edx,[rax+r9*1]
   140023f6c:	cmp    edx,eax
   140023f6e:	jb     0x140023f75
   140023f70:	cmp    edx,r9d
   140023f73:	jae    0x140023f7b
   140023f75:	mov    r8d,0x1
   140023f7b:	mov    DWORD PTR [rcx+0x4],edx
   140023f7e:	test   r8d,r8d
   140023f81:	je     0x140023f86
   140023f83:	inc    DWORD PTR [rcx+0x8]
   140023f86:	mov    eax,DWORD PTR [r11+0x8]
   140023f8a:	add    DWORD PTR [rcx+0x8],eax
   140023f8d:	ret    
   140023f8e:	int3   
   140023f8f:	int3   
   140023f90:	mov    QWORD PTR [rsp+0x18],rbx
   140023f95:	mov    DWORD PTR [rsp+0x8],ecx
   140023f99:	push   rsi
   140023f9a:	push   rdi
   140023f9b:	push   r14
   140023f9d:	sub    rsp,0x20
   140023fa1:	movsxd rdi,ecx
   140023fa4:	cmp    edi,0xfffffffe
   140023fa7:	jne    0x140023fb9
   140023fa9:	call   0x140009cb4
   140023fae:	mov    DWORD PTR [rax],0x9
   140023fb4:	jmp    0x140024056
   140023fb9:	test   ecx,ecx
   140023fbb:	js     0x140024046
   140023fc1:	cmp    edi,DWORD PTR [rip+0x1c121]        # 0x1400400e8
   140023fc7:	jae    0x140024046
   140023fc9:	mov    rax,rdi
   140023fcc:	mov    rbx,rdi
   140023fcf:	sar    rbx,0x5
   140023fd3:	lea    r14,[rip+0x19d36]        # 0x14003dd10
   140023fda:	and    eax,0x1f
   140023fdd:	imul   rsi,rax,0x58
   140023fe1:	mov    rax,QWORD PTR [r14+rbx*8]
   140023fe5:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   140023fea:	and    ecx,0x1
   140023fed:	je     0x140024046
   140023fef:	mov    ecx,edi
   140023ff1:	call   0x14001d088
   140023ff6:	nop
   140023ff7:	mov    rax,QWORD PTR [r14+rbx*8]
   140023ffb:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140024000:	je     0x14002402d
   140024002:	mov    ecx,edi
   140024004:	call   0x14001d3c4
   140024009:	mov    rcx,rax
   14002400c:	call   QWORD PTR [rip+0x7ffe]        # 0x14002c010
   140024012:	test   eax,eax
   140024014:	jne    0x140024020
   140024016:	call   QWORD PTR [rip+0x8134]        # 0x14002c150
   14002401c:	mov    ebx,eax
   14002401e:	jmp    0x140024022
   140024020:	xor    ebx,ebx
   140024022:	test   ebx,ebx
   140024024:	je     0x14002403b
   140024026:	call   0x140009c44
   14002402b:	mov    DWORD PTR [rax],ebx
   14002402d:	call   0x140009cb4
   140024032:	mov    DWORD PTR [rax],0x9
   140024038:	or     ebx,0xffffffff
   14002403b:	mov    ecx,edi
   14002403d:	call   0x14001d5e4
   140024042:	mov    eax,ebx
   140024044:	jmp    0x140024059
   140024046:	call   0x140009cb4
   14002404b:	mov    DWORD PTR [rax],0x9
   140024051:	call   0x140008d58
   140024056:	or     eax,0xffffffff
   140024059:	mov    rbx,QWORD PTR [rsp+0x50]
   14002405e:	add    rsp,0x20
   140024062:	pop    r14
   140024064:	pop    rdi
   140024065:	pop    rsi
   140024066:	ret    
   140024067:	int3   
   140024068:	mov    QWORD PTR [rsp+0x8],rbx
   14002406d:	push   rdi
   14002406e:	sub    rsp,0x20
   140024072:	or     edi,0xffffffff
   140024075:	mov    rbx,rcx
   140024078:	test   rcx,rcx
   14002407b:	jne    0x140024091
   14002407d:	call   0x140009cb4
   140024082:	mov    DWORD PTR [rax],0x16
   140024088:	call   0x140008d58
   14002408d:	or     eax,edi
   14002408f:	jmp    0x1400240d7
   140024091:	test   BYTE PTR [rcx+0x18],0x83
   140024095:	je     0x1400240d1
   140024097:	call   0x14001ce2c
   14002409c:	mov    rcx,rbx
   14002409f:	mov    edi,eax
   1400240a1:	call   0x1400286f4
   1400240a6:	mov    rcx,rbx
   1400240a9:	call   0x140010f18
   1400240ae:	mov    ecx,eax
   1400240b0:	call   0x140028574
   1400240b5:	test   eax,eax
   1400240b7:	jns    0x1400240be
   1400240b9:	or     edi,0xffffffff
   1400240bc:	jmp    0x1400240d1
   1400240be:	mov    rcx,QWORD PTR [rbx+0x28]
   1400240c2:	test   rcx,rcx
   1400240c5:	je     0x1400240d1
   1400240c7:	call   0x140007dc0
   1400240cc:	and    QWORD PTR [rbx+0x28],0x0
   1400240d1:	and    DWORD PTR [rbx+0x18],0x0
   1400240d5:	mov    eax,edi
   1400240d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400240dc:	add    rsp,0x20
   1400240e0:	pop    rdi
   1400240e1:	ret    
   1400240e2:	int3   
   1400240e3:	int3   
   1400240e4:	mov    QWORD PTR [rsp+0x10],rbx
   1400240e9:	mov    QWORD PTR [rsp+0x8],rcx
   1400240ee:	push   rdi
   1400240ef:	sub    rsp,0x20
   1400240f3:	mov    rbx,rcx
   1400240f6:	or     edi,0xffffffff
   1400240f9:	xor    eax,eax
   1400240fb:	test   rcx,rcx
   1400240fe:	setne  al
   140024101:	test   eax,eax
   140024103:	jne    0x140024119
   140024105:	call   0x140009cb4
   14002410a:	mov    DWORD PTR [rax],0x16
   140024110:	call   0x140008d58
   140024115:	mov    eax,edi
   140024117:	jmp    0x14002413f
   140024119:	test   BYTE PTR [rcx+0x18],0x40
   14002411d:	je     0x140024125
   14002411f:	and    DWORD PTR [rcx+0x18],0x0
   140024123:	jmp    0x140024115
   140024125:	call   0x140010e0c
   14002412a:	nop
   14002412b:	mov    rcx,rbx
   14002412e:	call   0x140024068
   140024133:	mov    edi,eax
   140024135:	mov    rcx,rbx
   140024138:	call   0x140010ea8
   14002413d:	jmp    0x140024115
   14002413f:	mov    rbx,QWORD PTR [rsp+0x38]
   140024144:	add    rsp,0x20
   140024148:	pop    rdi
   140024149:	ret    
   14002414a:	int3   
   14002414b:	int3   
   14002414c:	sub    rsp,0x28
   140024150:	mov    rcx,QWORD PTR [rip+0x193d1]        # 0x14003d528
   140024157:	lea    rax,[rcx+0x2]
   14002415b:	cmp    rax,0x1
   14002415f:	jbe    0x140024167
   140024161:	call   QWORD PTR [rip+0x8059]        # 0x14002c1c0
   140024167:	add    rsp,0x28
   14002416b:	ret    
   14002416c:	sub    rsp,0x48
   140024170:	and    QWORD PTR [rsp+0x30],0x0
   140024176:	and    DWORD PTR [rsp+0x28],0x0
   14002417b:	mov    r8d,0x3
   140024181:	lea    rcx,[rip+0x10a20]        # 0x140034ba8
   140024188:	xor    r9d,r9d
   14002418b:	mov    edx,0x40000000
   140024190:	mov    DWORD PTR [rsp+0x20],r8d
   140024195:	call   QWORD PTR [rip+0x7e6d]        # 0x14002c008
   14002419b:	mov    QWORD PTR [rip+0x19386],rax        # 0x14003d528
   1400241a2:	add    rsp,0x48
   1400241a6:	ret    
   1400241a7:	int3   
   1400241a8:	mov    QWORD PTR [rsp+0x18],rbx
   1400241ad:	push   rbp
   1400241ae:	push   rsi
   1400241af:	push   rdi
   1400241b0:	push   r12
   1400241b2:	push   r13
   1400241b4:	push   r14
   1400241b6:	push   r15
   1400241b8:	lea    rbp,[rsp-0x1e0]
   1400241c0:	sub    rsp,0x2e0
   1400241c7:	mov    rax,QWORD PTR [rip+0x18002]        # 0x14003c1d0
   1400241ce:	xor    rax,rsp
   1400241d1:	mov    QWORD PTR [rbp+0x1d8],rax
   1400241d8:	xor    eax,eax
   1400241da:	mov    rsi,rcx
   1400241dd:	mov    QWORD PTR [rsp+0x68],rcx
   1400241e2:	mov    rdi,rdx
   1400241e5:	lea    rcx,[rbp-0x58]
   1400241e9:	mov    rdx,r8
   1400241ec:	mov    r13,r9
   1400241ef:	mov    DWORD PTR [rsp+0x70],eax
   1400241f3:	mov    r14d,eax
   1400241f6:	mov    DWORD PTR [rsp+0x54],eax
   1400241fa:	mov    r12d,eax
   1400241fd:	mov    DWORD PTR [rsp+0x48],eax
   140024201:	mov    DWORD PTR [rsp+0x60],eax
   140024205:	mov    DWORD PTR [rsp+0x58],eax
   140024209:	mov    ebx,eax
   14002420b:	mov    DWORD PTR [rsp+0x50],eax
   14002420f:	call   0x140008fac
   140024214:	call   0x140009cb4
   140024219:	or     r8d,0xffffffff
   14002421d:	xor    r10d,r10d
   140024220:	mov    QWORD PTR [rbp-0x80],rax
   140024224:	test   rsi,rsi
   140024227:	je     0x140024b78
   14002422d:	test   BYTE PTR [rsi+0x18],0x40
   140024231:	lea    r9,[rip+0xfffffffffffdbdc8]        # 0x140000000
   140024238:	jne    0x1400242c4
   14002423e:	mov    rcx,rsi
   140024241:	call   0x140010f18
   140024246:	lea    r8,[rip+0x17fe3]        # 0x14003c230
   14002424d:	movsxd r10,eax
   140024250:	lea    ecx,[r10+0x2]
   140024254:	cmp    ecx,0x1
   140024257:	jbe    0x14002427b
   140024259:	mov    rdx,r10
   14002425c:	mov    rcx,r10
   14002425f:	lea    rax,[rip+0xfffffffffffdbd9a]        # 0x140000000
   140024266:	and    edx,0x1f
   140024269:	sar    rcx,0x5
   14002426d:	imul   r9,rdx,0x58
   140024271:	add    r9,QWORD PTR [rax+rcx*8+0x3dd10]
   140024279:	jmp    0x14002427e
   14002427b:	mov    r9,r8
   14002427e:	test   BYTE PTR [r9+0x38],0x7f
   140024283:	jne    0x140024b78
   140024289:	lea    eax,[r10+0x2]
   14002428d:	lea    r9,[rip+0xfffffffffffdbd6c]        # 0x140000000
   140024294:	cmp    eax,0x1
   140024297:	jbe    0x1400242b2
   140024299:	mov    rcx,r10
   14002429c:	mov    rax,r10
   14002429f:	and    ecx,0x1f
   1400242a2:	sar    rax,0x5
   1400242a6:	imul   r8,rcx,0x58
   1400242aa:	add    r8,QWORD PTR [r9+rax*8+0x3dd10]
   1400242b2:	test   BYTE PTR [r8+0x38],0x80
   1400242b7:	jne    0x140024b78
   1400242bd:	or     r8d,0xffffffff
   1400242c1:	xor    r10d,r10d
   1400242c4:	test   rdi,rdi
   1400242c7:	je     0x140024b78
   1400242cd:	mov    r15b,BYTE PTR [rdi]
   1400242d0:	mov    esi,r10d
   1400242d3:	mov    DWORD PTR [rsp+0x40],r10d
   1400242d8:	mov    DWORD PTR [rsp+0x44],r10d
   1400242dd:	mov    edx,r10d
   1400242e0:	mov    QWORD PTR [rbp-0x78],r10
   1400242e4:	test   r15b,r15b
   1400242e7:	je     0x140024b90
   1400242ed:	mov    r11d,0x200
   1400242f3:	inc    rdi
   1400242f6:	mov    QWORD PTR [rbp-0x68],rdi
   1400242fa:	test   esi,esi
   1400242fc:	js     0x140024b6f
   140024302:	lea    eax,[r15-0x20]
   140024306:	cmp    al,0x58
   140024308:	ja     0x14002431c
   14002430a:	movsx  rax,r15b
   14002430e:	movzx  ecx,BYTE PTR [rax+r9*1+0x34ba0]
   140024317:	and    ecx,0xf
   14002431a:	jmp    0x14002431f
   14002431c:	mov    ecx,r10d
   14002431f:	movsxd rax,ecx
   140024322:	lea    rcx,[rax+rax*8]
   140024326:	movsxd rax,edx
   140024329:	add    rcx,rax
   14002432c:	movzx  edx,BYTE PTR [rcx+r9*1+0x34bc0]
   140024335:	shr    edx,0x4
   140024338:	mov    DWORD PTR [rsp+0x5c],edx
   14002433c:	cmp    edx,0x8
   14002433f:	je     0x140024b78
   140024345:	mov    ecx,edx
   140024347:	test   edx,edx
   140024349:	je     0x140024a31
   14002434f:	dec    ecx
   140024351:	je     0x140024b4b
   140024357:	dec    ecx
   140024359:	je     0x140024afb
   14002435f:	dec    ecx
   140024361:	je     0x140024abf
   140024367:	dec    ecx
   140024369:	je     0x140024ab7
   14002436f:	dec    ecx
   140024371:	je     0x140024a82
   140024377:	dec    ecx
   140024379:	je     0x1400249a7
   14002437f:	dec    ecx
   140024381:	jne    0x140024992
   140024387:	movsx  ecx,r15b
   14002438b:	cmp    ecx,0x64
   14002438e:	jg     0x1400244fd
   140024394:	je     0x1400245f5
   14002439a:	cmp    ecx,0x41
   14002439d:	je     0x1400244d2
   1400243a3:	cmp    ecx,0x43
   1400243a6:	je     0x140024478
   1400243ac:	lea    eax,[rcx-0x45]
   1400243af:	test   eax,0xfffffffd
   1400243b4:	je     0x1400244d2
   1400243ba:	cmp    ecx,0x53
   1400243bd:	je     0x14002442c
   1400243bf:	cmp    ecx,0x58
   1400243c2:	je     0x14002458e
   1400243c8:	cmp    ecx,0x5a
   1400243cb:	je     0x1400243e4
   1400243cd:	cmp    ecx,0x61
   1400243d0:	je     0x1400244de
   1400243d6:	cmp    ecx,0x63
   1400243d9:	je     0x140024486
   1400243df:	jmp    0x140024800
   1400243e4:	mov    rax,QWORD PTR [r13+0x0]
   1400243e8:	add    r13,0x8
   1400243ec:	test   rax,rax
   1400243ef:	je     0x140024420
   1400243f1:	mov    rbx,QWORD PTR [rax+0x8]
   1400243f5:	test   rbx,rbx
   1400243f8:	je     0x140024420
   1400243fa:	movsx  eax,WORD PTR [rax]
   1400243fd:	bt     r14d,0xb
   140024402:	jae    0x140024416
   140024404:	cdq    
   140024405:	mov    DWORD PTR [rsp+0x50],0x1
   14002440d:	sub    eax,edx
   14002440f:	sar    eax,1
   140024411:	jmp    0x1400247fc
   140024416:	mov    DWORD PTR [rsp+0x50],r10d
   14002441b:	jmp    0x1400247fc
   140024420:	mov    rbx,QWORD PTR [rip+0x18df9]        # 0x14003d220
   140024427:	jmp    0x1400247f1
   14002442c:	test   r14d,0x830
   140024433:	jne    0x14002443a
   140024435:	bts    r14d,0xb
   14002443a:	mov    rbx,QWORD PTR [r13+0x0]
   14002443e:	cmp    r12d,r8d
   140024441:	mov    eax,r12d
   140024444:	mov    ecx,0x7fffffff
   140024449:	cmove  eax,ecx
   14002444c:	add    r13,0x8
   140024450:	test   r14d,0x810
   140024457:	je     0x14002455a
   14002445d:	test   rbx,rbx
   140024460:	mov    DWORD PTR [rsp+0x50],0x1
   140024468:	cmove  rbx,QWORD PTR [rip+0x18db8]        # 0x14003d228
   140024470:	mov    rcx,rbx
   140024473:	jmp    0x14002454e
   140024478:	test   r14d,0x830
   14002447f:	jne    0x140024486
   140024481:	bts    r14d,0xb
   140024486:	add    r13,0x8
   14002448a:	test   r14d,0x810
   140024491:	je     0x1400244ba
   140024493:	movzx  r9d,WORD PTR [r13-0x8]
   140024498:	lea    rdx,[rbp-0x30]
   14002449c:	lea    rcx,[rsp+0x44]
   1400244a1:	mov    r8,r11
   1400244a4:	call   0x14001f4b4
   1400244a9:	xor    r10d,r10d
   1400244ac:	test   eax,eax
   1400244ae:	je     0x1400244c9
   1400244b0:	mov    DWORD PTR [rsp+0x58],0x1
   1400244b8:	jmp    0x1400244c9
   1400244ba:	mov    al,BYTE PTR [r13-0x8]
   1400244be:	mov    DWORD PTR [rsp+0x44],0x1
   1400244c6:	mov    BYTE PTR [rbp-0x30],al
   1400244c9:	lea    rbx,[rbp-0x30]
   1400244cd:	jmp    0x140024800
   1400244d2:	mov    DWORD PTR [rsp+0x60],0x1
   1400244da:	add    r15b,0x20
   1400244de:	or     r14d,0x40
   1400244e2:	lea    rbx,[rbp-0x30]
   1400244e6:	mov    esi,r11d
   1400244e9:	test   r12d,r12d
   1400244ec:	jns    0x140024713
   1400244f2:	mov    r12d,0x6
   1400244f8:	jmp    0x140024759
   1400244fd:	cmp    ecx,0x67
   140024500:	jle    0x1400244de
   140024502:	cmp    ecx,0x69
   140024505:	je     0x1400245f5
   14002450b:	cmp    ecx,0x6e
   14002450e:	je     0x1400245c3
   140024514:	cmp    ecx,0x6f
   140024517:	je     0x1400245b3
   14002451d:	cmp    ecx,0x70
   140024520:	je     0x140024583
   140024522:	cmp    ecx,0x73
   140024525:	je     0x14002443a
   14002452b:	cmp    ecx,0x75
   14002452e:	je     0x1400245f9
   140024534:	cmp    ecx,0x78
   140024537:	jne    0x140024800
   14002453d:	lea    eax,[rcx-0x51]
   140024540:	jmp    0x140024593
   140024542:	dec    eax
   140024544:	cmp    WORD PTR [rcx],r10w
   140024548:	je     0x140024552
   14002454a:	add    rcx,0x2
   14002454e:	test   eax,eax
   140024550:	jne    0x140024542
   140024552:	sub    rcx,rbx
   140024555:	sar    rcx,1
   140024558:	jmp    0x14002457a
   14002455a:	test   rbx,rbx
   14002455d:	cmove  rbx,QWORD PTR [rip+0x18cbb]        # 0x14003d220
   140024565:	mov    rcx,rbx
   140024568:	jmp    0x140024574
   14002456a:	dec    eax
   14002456c:	cmp    BYTE PTR [rcx],r10b
   14002456f:	je     0x140024578
   140024571:	inc    rcx
   140024574:	test   eax,eax
   140024576:	jne    0x14002456a
   140024578:	sub    ecx,ebx
   14002457a:	mov    DWORD PTR [rsp+0x44],ecx
   14002457e:	jmp    0x140024800
   140024583:	mov    r12d,0x10
   140024589:	bts    r14d,0xf
   14002458e:	mov    eax,0x7
   140024593:	mov    DWORD PTR [rsp+0x70],eax
   140024597:	mov    r9d,0x10
   14002459d:	test   r14b,r14b
   1400245a0:	jns    0x1400245ff
   1400245a2:	add    al,0x51
   1400245a4:	mov    BYTE PTR [rsp+0x4c],0x30
   1400245a9:	lea    edx,[r9-0xe]
   1400245ad:	mov    BYTE PTR [rsp+0x4d],al
   1400245b1:	jmp    0x140024603
   1400245b3:	mov    r9d,0x8
   1400245b9:	test   r14b,r14b
   1400245bc:	jns    0x1400245ff
   1400245be:	or     r14d,r11d
   1400245c1:	jmp    0x1400245ff
   1400245c3:	mov    rdi,QWORD PTR [r13+0x0]
   1400245c7:	add    r13,0x8
   1400245cb:	call   0x140012070
   1400245d0:	xor    r10d,r10d
   1400245d3:	test   eax,eax
   1400245d5:	je     0x140024b78
   1400245db:	test   r14b,0x20
   1400245df:	je     0x1400245e6
   1400245e1:	mov    WORD PTR [rdi],si
   1400245e4:	jmp    0x1400245e8
   1400245e6:	mov    DWORD PTR [rdi],esi
   1400245e8:	mov    DWORD PTR [rsp+0x58],0x1
   1400245f0:	jmp    0x140024961
   1400245f5:	or     r14d,0x40
   1400245f9:	mov    r9d,0xa
   1400245ff:	mov    edx,DWORD PTR [rsp+0x48]
   140024603:	mov    eax,0x8000
   140024608:	test   eax,r14d
   14002460b:	je     0x140024617
   14002460d:	mov    r8,QWORD PTR [r13+0x0]
   140024611:	add    r13,0x8
   140024615:	jmp    0x140024651
   140024617:	bt     r14d,0xc
   14002461c:	jb     0x14002460d
   14002461e:	add    r13,0x8
   140024622:	test   r14b,0x20
   140024626:	je     0x140024641
   140024628:	mov    QWORD PTR [rsp+0x78],r13
   14002462d:	test   r14b,0x40
   140024631:	je     0x14002463a
   140024633:	movsx  r8,WORD PTR [r13-0x8]
   140024638:	jmp    0x140024656
   14002463a:	movzx  r8d,WORD PTR [r13-0x8]
   14002463f:	jmp    0x140024656
   140024641:	test   r14b,0x40
   140024645:	je     0x14002464d
   140024647:	movsxd r8,DWORD PTR [r13-0x8]
   14002464b:	jmp    0x140024651
   14002464d:	mov    r8d,DWORD PTR [r13-0x8]
   140024651:	mov    QWORD PTR [rsp+0x78],r13
   140024656:	test   r14b,0x40
   14002465a:	je     0x140024669
   14002465c:	test   r8,r8
   14002465f:	jns    0x140024669
   140024661:	neg    r8
   140024664:	bts    r14d,0x8
   140024669:	test   eax,r14d
   14002466c:	jne    0x140024678
   14002466e:	bt     r14d,0xc
   140024673:	jb     0x140024678
   140024675:	mov    r8d,r8d
   140024678:	test   r12d,r12d
   14002467b:	jns    0x140024685
   14002467d:	mov    r12d,0x1
   140024683:	jmp    0x140024690
   140024685:	and    r14d,0xfffffff7
   140024689:	cmp    r12d,r11d
   14002468c:	cmovg  r12d,r11d
   140024690:	mov    r13d,DWORD PTR [rsp+0x70]
   140024695:	mov    rax,r8
   140024698:	lea    rbx,[rbp+0x1cf]
   14002469f:	neg    rax
   1400246a2:	sbb    ecx,ecx
   1400246a4:	and    ecx,edx
   1400246a6:	mov    DWORD PTR [rsp+0x48],ecx
   1400246aa:	mov    ecx,r12d
   1400246ad:	dec    r12d
   1400246b0:	test   ecx,ecx
   1400246b2:	jg     0x1400246b9
   1400246b4:	test   r8,r8
   1400246b7:	je     0x1400246d9
   1400246b9:	xor    edx,edx
   1400246bb:	mov    rax,r8
   1400246be:	movsxd rcx,r9d
   1400246c1:	div    rcx
   1400246c4:	mov    r8,rax
   1400246c7:	lea    eax,[rdx+0x30]
   1400246ca:	cmp    eax,0x39
   1400246cd:	jle    0x1400246d2
   1400246cf:	add    eax,r13d
   1400246d2:	mov    BYTE PTR [rbx],al
   1400246d4:	dec    rbx
   1400246d7:	jmp    0x1400246aa
   1400246d9:	mov    r13,QWORD PTR [rsp+0x78]
   1400246de:	lea    rax,[rbp+0x1cf]
   1400246e5:	sub    eax,ebx
   1400246e7:	inc    rbx
   1400246ea:	mov    DWORD PTR [rsp+0x44],eax
   1400246ee:	test   r11d,r14d
   1400246f1:	je     0x140024800
   1400246f7:	test   eax,eax
   1400246f9:	je     0x140024704
   1400246fb:	cmp    BYTE PTR [rbx],0x30
   1400246fe:	je     0x140024800
   140024704:	dec    rbx
   140024707:	inc    DWORD PTR [rsp+0x44]
   14002470b:	mov    BYTE PTR [rbx],0x30
   14002470e:	jmp    0x140024800
   140024713:	jne    0x140024723
   140024715:	cmp    r15b,0x67
   140024719:	jne    0x140024759
   14002471b:	mov    r12d,0x1
   140024721:	jmp    0x140024759
   140024723:	cmp    r12d,r11d
   140024726:	cmovg  r12d,r11d
   14002472a:	cmp    r12d,0xa3
   140024731:	jle    0x140024759
   140024733:	lea    edi,[r12+0x15d]
   14002473b:	movsxd rcx,edi
   14002473e:	call   0x140008684
   140024743:	mov    QWORD PTR [rbp-0x78],rax
   140024747:	test   rax,rax
   14002474a:	je     0x140024753
   14002474c:	mov    rbx,rax
   14002474f:	mov    esi,edi
   140024751:	jmp    0x140024759
   140024753:	mov    r12d,0xa3
   140024759:	mov    rax,QWORD PTR [r13+0x0]
   14002475d:	mov    rcx,QWORD PTR [rip+0x17aac]        # 0x14003c210
   140024764:	add    r13,0x8
   140024768:	movsx  edi,r15b
   14002476c:	movsxd rsi,esi
   14002476f:	mov    QWORD PTR [rbp-0x60],rax
   140024773:	call   QWORD PTR [rip+0x799f]        # 0x14002c118
   140024779:	lea    rcx,[rbp-0x58]
   14002477d:	mov    r9d,edi
   140024780:	mov    QWORD PTR [rsp+0x30],rcx
   140024785:	mov    ecx,DWORD PTR [rsp+0x60]
   140024789:	mov    r8,rsi
   14002478c:	mov    DWORD PTR [rsp+0x28],ecx
   140024790:	lea    rcx,[rbp-0x60]
   140024794:	mov    rdx,rbx
   140024797:	mov    DWORD PTR [rsp+0x20],r12d
   14002479c:	call   rax
   14002479e:	mov    edi,r14d
   1400247a1:	and    edi,0x80
   1400247a7:	je     0x1400247c4
   1400247a9:	test   r12d,r12d
   1400247ac:	jne    0x1400247c4
   1400247ae:	mov    rcx,QWORD PTR [rip+0x17a73]        # 0x14003c228
   1400247b5:	call   QWORD PTR [rip+0x795d]        # 0x14002c118
   1400247bb:	lea    rdx,[rbp-0x58]
   1400247bf:	mov    rcx,rbx
   1400247c2:	call   rax
   1400247c4:	cmp    r15b,0x67
   1400247c8:	jne    0x1400247e4
   1400247ca:	test   edi,edi
   1400247cc:	jne    0x1400247e4
   1400247ce:	mov    rcx,QWORD PTR [rip+0x17a4b]        # 0x14003c220
   1400247d5:	call   QWORD PTR [rip+0x793d]        # 0x14002c118
   1400247db:	lea    rdx,[rbp-0x58]
   1400247df:	mov    rcx,rbx
   1400247e2:	call   rax
   1400247e4:	cmp    BYTE PTR [rbx],0x2d
   1400247e7:	jne    0x1400247f1
   1400247e9:	bts    r14d,0x8
   1400247ee:	inc    rbx
   1400247f1:	mov    rcx,rbx
   1400247f4:	call   0x140007550
   1400247f9:	xor    r10d,r10d
   1400247fc:	mov    DWORD PTR [rsp+0x44],eax
   140024800:	cmp    DWORD PTR [rsp+0x58],r10d
   140024805:	jne    0x140024961
   14002480b:	test   r14b,0x40
   14002480f:	je     0x140024842
   140024811:	bt     r14d,0x8
   140024816:	jae    0x14002481f
   140024818:	mov    BYTE PTR [rsp+0x4c],0x2d
   14002481d:	jmp    0x14002482a
   14002481f:	test   r14b,0x1
   140024823:	je     0x140024835
   140024825:	mov    BYTE PTR [rsp+0x4c],0x2b
   14002482a:	mov    edi,0x1
   14002482f:	mov    DWORD PTR [rsp+0x48],edi
   140024833:	jmp    0x140024846
   140024835:	test   r14b,0x2
   140024839:	je     0x140024842
   14002483b:	mov    BYTE PTR [rsp+0x4c],0x20
   140024840:	jmp    0x14002482a
   140024842:	mov    edi,DWORD PTR [rsp+0x48]
   140024846:	mov    esi,DWORD PTR [rsp+0x54]
   14002484a:	mov    r15,QWORD PTR [rsp+0x68]
   14002484f:	sub    esi,DWORD PTR [rsp+0x44]
   140024853:	sub    esi,edi
   140024855:	test   r14b,0xc
   140024859:	jne    0x14002486c
   14002485b:	lea    r9,[rsp+0x40]
   140024860:	mov    r8,r15
   140024863:	mov    edx,esi
   140024865:	mov    cl,0x20
   140024867:	call   0x140024c18
   14002486c:	mov    rax,QWORD PTR [rbp-0x80]
   140024870:	lea    r9,[rsp+0x40]
   140024875:	lea    rcx,[rsp+0x4c]
   14002487a:	mov    r8,r15
   14002487d:	mov    edx,edi
   14002487f:	mov    QWORD PTR [rsp+0x20],rax
   140024884:	call   0x140024c6c
   140024889:	test   r14b,0x8
   14002488d:	je     0x1400248a6
   14002488f:	test   r14b,0x4
   140024893:	jne    0x1400248a6
   140024895:	lea    r9,[rsp+0x40]
   14002489a:	mov    r8,r15
   14002489d:	mov    edx,esi
   14002489f:	mov    cl,0x30
   1400248a1:	call   0x140024c18
   1400248a6:	cmp    DWORD PTR [rsp+0x50],0x0
   1400248ab:	mov    edi,DWORD PTR [rsp+0x44]
   1400248af:	je     0x140024921
   1400248b1:	test   edi,edi
   1400248b3:	jle    0x140024921
   1400248b5:	mov    r15,rbx
   1400248b8:	movzx  r9d,WORD PTR [r15]
   1400248bc:	lea    rdx,[rbp+0x1d0]
   1400248c3:	lea    rcx,[rbp-0x70]
   1400248c7:	mov    r8d,0x6
   1400248cd:	dec    edi
   1400248cf:	lea    r15,[r15+0x2]
   1400248d3:	call   0x14001f4b4
   1400248d8:	xor    r10d,r10d
   1400248db:	test   eax,eax
   1400248dd:	jne    0x140024913
   1400248df:	mov    edx,DWORD PTR [rbp-0x70]
   1400248e2:	test   edx,edx
   1400248e4:	je     0x140024913
   1400248e6:	mov    rax,QWORD PTR [rbp-0x80]
   1400248ea:	mov    r8,QWORD PTR [rsp+0x68]
   1400248ef:	lea    r9,[rsp+0x40]
   1400248f4:	lea    rcx,[rbp+0x1d0]
   1400248fb:	mov    QWORD PTR [rsp+0x20],rax
   140024900:	call   0x140024c6c
   140024905:	xor    r10d,r10d
   140024908:	test   edi,edi
   14002490a:	jne    0x1400248b8
   14002490c:	mov    r15,QWORD PTR [rsp+0x68]
   140024911:	jmp    0x14002493f
   140024913:	mov    r15,QWORD PTR [rsp+0x68]
   140024918:	or     eax,0xffffffff
   14002491b:	mov    DWORD PTR [rsp+0x40],eax
   14002491f:	jmp    0x140024943
   140024921:	mov    rax,QWORD PTR [rbp-0x80]
   140024925:	lea    r9,[rsp+0x40]
   14002492a:	mov    r8,r15
   14002492d:	mov    edx,edi
   14002492f:	mov    rcx,rbx
   140024932:	mov    QWORD PTR [rsp+0x20],rax
   140024937:	call   0x140024c6c
   14002493c:	xor    r10d,r10d
   14002493f:	mov    eax,DWORD PTR [rsp+0x40]
   140024943:	test   eax,eax
   140024945:	js     0x140024961
   140024947:	test   r14b,0x4
   14002494b:	je     0x140024961
   14002494d:	lea    r9,[rsp+0x40]
   140024952:	mov    r8,r15
   140024955:	mov    edx,esi
   140024957:	mov    cl,0x20
   140024959:	call   0x140024c18
   14002495e:	xor    r10d,r10d
   140024961:	mov    rax,QWORD PTR [rbp-0x78]
   140024965:	test   rax,rax
   140024968:	je     0x140024979
   14002496a:	mov    rcx,rax
   14002496d:	call   0x140007dc0
   140024972:	xor    r10d,r10d
   140024975:	mov    QWORD PTR [rbp-0x78],r10
   140024979:	mov    rdi,QWORD PTR [rbp-0x68]
   14002497d:	mov    esi,DWORD PTR [rsp+0x40]
   140024981:	mov    edx,DWORD PTR [rsp+0x5c]
   140024985:	mov    r11d,0x200
   14002498b:	lea    r9,[rip+0xfffffffffffdb66e]        # 0x140000000
   140024992:	mov    r15b,BYTE PTR [rdi]
   140024995:	test   r15b,r15b
   140024998:	je     0x140024b6f
   14002499e:	or     r8d,0xffffffff
   1400249a2:	jmp    0x1400242f3
   1400249a7:	cmp    r15b,0x49
   1400249ab:	je     0x1400249e1
   1400249ad:	cmp    r15b,0x68
   1400249b1:	je     0x1400249db
   1400249b3:	cmp    r15b,0x6c
   1400249b7:	je     0x1400249c6
   1400249b9:	cmp    r15b,0x77
   1400249bd:	jne    0x140024992
   1400249bf:	bts    r14d,0xb
   1400249c4:	jmp    0x140024992
   1400249c6:	cmp    BYTE PTR [rdi],0x6c
   1400249c9:	jne    0x1400249d5
   1400249cb:	inc    rdi
   1400249ce:	bts    r14d,0xc
   1400249d3:	jmp    0x140024992
   1400249d5:	or     r14d,0x10
   1400249d9:	jmp    0x140024992
   1400249db:	or     r14d,0x20
   1400249df:	jmp    0x140024992
   1400249e1:	mov    al,BYTE PTR [rdi]
   1400249e3:	bts    r14d,0xf
   1400249e8:	cmp    al,0x36
   1400249ea:	jne    0x1400249fd
   1400249ec:	cmp    BYTE PTR [rdi+0x1],0x34
   1400249f0:	jne    0x1400249fd
   1400249f2:	add    rdi,0x2
   1400249f6:	bts    r14d,0xf
   1400249fb:	jmp    0x140024992
   1400249fd:	cmp    al,0x33
   1400249ff:	jne    0x140024a12
   140024a01:	cmp    BYTE PTR [rdi+0x1],0x32
   140024a05:	jne    0x140024a12
   140024a07:	add    rdi,0x2
   140024a0b:	btr    r14d,0xf
   140024a10:	jmp    0x140024992
   140024a12:	sub    al,0x58
   140024a14:	cmp    al,0x20
   140024a16:	ja     0x140024a2c
   140024a18:	movabs rcx,0x120821001
   140024a22:	bt     rcx,rax
   140024a26:	jb     0x140024992
   140024a2c:	mov    DWORD PTR [rsp+0x5c],r10d
   140024a31:	lea    rdx,[rbp-0x58]
   140024a35:	movzx  ecx,r15b
   140024a39:	mov    DWORD PTR [rsp+0x50],r10d
   140024a3e:	call   0x140011e44
   140024a43:	test   eax,eax
   140024a45:	je     0x140024a68
   140024a47:	mov    rdx,QWORD PTR [rsp+0x68]
   140024a4c:	lea    r8,[rsp+0x40]
   140024a51:	mov    cl,r15b
   140024a54:	call   0x140024bd0
   140024a59:	mov    r15b,BYTE PTR [rdi]
   140024a5c:	inc    rdi
   140024a5f:	test   r15b,r15b
   140024a62:	je     0x140024b78
   140024a68:	mov    rdx,QWORD PTR [rsp+0x68]
   140024a6d:	lea    r8,[rsp+0x40]
   140024a72:	mov    cl,r15b
   140024a75:	call   0x140024bd0
   140024a7a:	xor    r10d,r10d
   140024a7d:	jmp    0x14002497d
   140024a82:	cmp    r15b,0x2a
   140024a86:	jne    0x140024aa1
   140024a88:	mov    r12d,DWORD PTR [r13+0x0]
   140024a8c:	add    r13,0x8
   140024a90:	test   r12d,r12d
   140024a93:	jns    0x140024992
   140024a99:	mov    r12d,r8d
   140024a9c:	jmp    0x140024992
   140024aa1:	lea    r12d,[r12+r12*4]
   140024aa5:	movsx  eax,r15b
   140024aa9:	lea    r12d,[r12-0x18]
   140024aae:	lea    r12d,[rax+r12*2]
   140024ab2:	jmp    0x140024992
   140024ab7:	mov    r12d,r10d
   140024aba:	jmp    0x140024992
   140024abf:	cmp    r15b,0x2a
   140024ac3:	jne    0x140024ae1
   140024ac5:	mov    eax,DWORD PTR [r13+0x0]
   140024ac9:	add    r13,0x8
   140024acd:	mov    DWORD PTR [rsp+0x54],eax
   140024ad1:	test   eax,eax
   140024ad3:	jns    0x140024992
   140024ad9:	or     r14d,0x4
   140024add:	neg    eax
   140024adf:	jmp    0x140024af2
   140024ae1:	mov    eax,DWORD PTR [rsp+0x54]
   140024ae5:	lea    ecx,[rax+rax*4]
   140024ae8:	movsx  eax,r15b
   140024aec:	lea    eax,[rax+rcx*2]
   140024aef:	add    eax,0xffffffd0
   140024af2:	mov    DWORD PTR [rsp+0x54],eax
   140024af6:	jmp    0x140024992
   140024afb:	cmp    r15b,0x20
   140024aff:	je     0x140024b42
   140024b01:	cmp    r15b,0x23
   140024b05:	je     0x140024b38
   140024b07:	cmp    r15b,0x2b
   140024b0b:	je     0x140024b2f
   140024b0d:	cmp    r15b,0x2d
   140024b11:	je     0x140024b26
   140024b13:	cmp    r15b,0x30
   140024b17:	jne    0x140024992
   140024b1d:	or     r14d,0x8
   140024b21:	jmp    0x140024992
   140024b26:	or     r14d,0x4
   140024b2a:	jmp    0x140024992
   140024b2f:	or     r14d,0x1
   140024b33:	jmp    0x140024992
   140024b38:	bts    r14d,0x7
   140024b3d:	jmp    0x140024992
   140024b42:	or     r14d,0x2
   140024b46:	jmp    0x140024992
   140024b4b:	mov    DWORD PTR [rsp+0x60],r10d
   140024b50:	mov    DWORD PTR [rsp+0x58],r10d
   140024b55:	mov    DWORD PTR [rsp+0x54],r10d
   140024b5a:	mov    DWORD PTR [rsp+0x48],r10d
   140024b5f:	mov    r14d,r10d
   140024b62:	mov    r12d,r8d
   140024b65:	mov    DWORD PTR [rsp+0x50],r10d
   140024b6a:	jmp    0x140024992
   140024b6f:	test   edx,edx
   140024b71:	je     0x140024b90
   140024b73:	cmp    edx,0x7
   140024b76:	je     0x140024b90
   140024b78:	call   0x140009cb4
   140024b7d:	mov    DWORD PTR [rax],0x16
   140024b83:	call   0x140008d58
   140024b88:	or     eax,0xffffffff
   140024b8b:	xor    r10d,r10d
   140024b8e:	jmp    0x140024b92
   140024b90:	mov    eax,esi
   140024b92:	cmp    BYTE PTR [rbp-0x40],r10b
   140024b96:	je     0x140024ba3
   140024b98:	mov    rcx,QWORD PTR [rbp-0x48]
   140024b9c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024ba3:	mov    rcx,QWORD PTR [rbp+0x1d8]
   140024baa:	xor    rcx,rsp
   140024bad:	call   0x14000c380
   140024bb2:	mov    rbx,QWORD PTR [rsp+0x330]
   140024bba:	add    rsp,0x2e0
   140024bc1:	pop    r15
   140024bc3:	pop    r14
   140024bc5:	pop    r13
   140024bc7:	pop    r12
   140024bc9:	pop    rdi
   140024bca:	pop    rsi
   140024bcb:	pop    rbp
   140024bcc:	ret    
   140024bcd:	int3   
   140024bce:	int3   
   140024bcf:	int3   
   140024bd0:	rex push rbx
   140024bd2:	sub    rsp,0x20
   140024bd6:	test   BYTE PTR [rdx+0x18],0x40
   140024bda:	mov    rbx,r8
   140024bdd:	je     0x140024beb
   140024bdf:	cmp    QWORD PTR [rdx+0x10],0x0
   140024be4:	jne    0x140024beb
   140024be6:	inc    DWORD PTR [r8]
   140024be9:	jmp    0x140024c10
   140024beb:	dec    DWORD PTR [rdx+0x8]
   140024bee:	js     0x140024bfd
   140024bf0:	mov    rax,QWORD PTR [rdx]
   140024bf3:	mov    BYTE PTR [rax],cl
   140024bf5:	inc    QWORD PTR [rdx]
   140024bf8:	movzx  eax,cl
   140024bfb:	jmp    0x140024c05
   140024bfd:	movsx  ecx,cl
   140024c00:	call   0x140008e20
   140024c05:	cmp    eax,0xffffffff
   140024c08:	jne    0x140024c0e
   140024c0a:	or     DWORD PTR [rbx],eax
   140024c0c:	jmp    0x140024c10
   140024c0e:	inc    DWORD PTR [rbx]
   140024c10:	add    rsp,0x20
   140024c14:	pop    rbx
   140024c15:	ret    
   140024c16:	int3   
   140024c17:	int3   
   140024c18:	test   edx,edx
   140024c1a:	jle    0x140024c68
   140024c1c:	mov    QWORD PTR [rsp+0x8],rbx
   140024c21:	mov    QWORD PTR [rsp+0x10],rbp
   140024c26:	mov    QWORD PTR [rsp+0x18],rsi
   140024c2b:	push   rdi
   140024c2c:	sub    rsp,0x20
   140024c30:	mov    rdi,r9
   140024c33:	mov    rsi,r8
   140024c36:	mov    ebx,edx
   140024c38:	mov    bpl,cl
   140024c3b:	mov    r8,rdi
   140024c3e:	mov    rdx,rsi
   140024c41:	mov    cl,bpl
   140024c44:	dec    ebx
   140024c46:	call   0x140024bd0
   140024c4b:	cmp    DWORD PTR [rdi],0xffffffff
   140024c4e:	je     0x140024c54
   140024c50:	test   ebx,ebx
   140024c52:	jg     0x140024c3b
   140024c54:	mov    rbx,QWORD PTR [rsp+0x30]
   140024c59:	mov    rbp,QWORD PTR [rsp+0x38]
   140024c5e:	mov    rsi,QWORD PTR [rsp+0x40]
   140024c63:	add    rsp,0x20
   140024c67:	pop    rdi
   140024c68:	ret    
   140024c69:	int3   
   140024c6a:	int3   
   140024c6b:	int3   
   140024c6c:	mov    QWORD PTR [rsp+0x8],rbx
   140024c71:	mov    QWORD PTR [rsp+0x10],rbp
   140024c76:	mov    QWORD PTR [rsp+0x18],rsi
   140024c7b:	push   rdi
   140024c7c:	push   r14
   140024c7e:	push   r15
   140024c80:	sub    rsp,0x20
   140024c84:	test   BYTE PTR [r8+0x18],0x40
   140024c89:	mov    rbx,QWORD PTR [rsp+0x60]
   140024c8e:	mov    rdi,r9
   140024c91:	mov    r15d,DWORD PTR [rbx]
   140024c94:	mov    rbp,r8
   140024c97:	mov    esi,edx
   140024c99:	mov    r14,rcx
   140024c9c:	je     0x140024caa
   140024c9e:	cmp    QWORD PTR [r8+0x10],0x0
   140024ca3:	jne    0x140024caa
   140024ca5:	add    DWORD PTR [r9],edx
   140024ca8:	jmp    0x140024ce7
   140024caa:	and    DWORD PTR [rbx],0x0
   140024cad:	test   edx,edx
   140024caf:	jle    0x140024ce4
   140024cb1:	mov    cl,BYTE PTR [r14]
   140024cb4:	mov    r8,rdi
   140024cb7:	mov    rdx,rbp
   140024cba:	dec    esi
   140024cbc:	call   0x140024bd0
   140024cc1:	inc    r14
   140024cc4:	cmp    DWORD PTR [rdi],0xffffffff
   140024cc7:	jne    0x140024cdb
   140024cc9:	cmp    DWORD PTR [rbx],0x2a
   140024ccc:	jne    0x140024cdf
   140024cce:	mov    r8,rdi
   140024cd1:	mov    rdx,rbp
   140024cd4:	mov    cl,0x3f
   140024cd6:	call   0x140024bd0
   140024cdb:	test   esi,esi
   140024cdd:	jg     0x140024cb1
   140024cdf:	cmp    DWORD PTR [rbx],0x0
   140024ce2:	jne    0x140024ce7
   140024ce4:	mov    DWORD PTR [rbx],r15d
   140024ce7:	mov    rbx,QWORD PTR [rsp+0x40]
   140024cec:	mov    rbp,QWORD PTR [rsp+0x48]
   140024cf1:	mov    rsi,QWORD PTR [rsp+0x50]
   140024cf6:	add    rsp,0x20
   140024cfa:	pop    r15
   140024cfc:	pop    r14
   140024cfe:	pop    rdi
   140024cff:	ret    
   140024d00:	mov    QWORD PTR [rsp+0x18],rbx
   140024d05:	push   rbp
   140024d06:	push   rsi
   140024d07:	push   rdi
   140024d08:	push   r12
   140024d0a:	push   r13
   140024d0c:	push   r14
   140024d0e:	push   r15
   140024d10:	lea    rbp,[rsp-0xb60]
   140024d18:	sub    rsp,0xc60
   140024d1f:	mov    rax,QWORD PTR [rip+0x174aa]        # 0x14003c1d0
   140024d26:	xor    rax,rsp
   140024d29:	mov    QWORD PTR [rbp+0xb58],rax
   140024d30:	xor    esi,esi
   140024d32:	mov    rdi,rcx
   140024d35:	mov    QWORD PTR [rbp-0x68],rcx
   140024d39:	mov    r12,rdx
   140024d3c:	mov    QWORD PTR [rbp-0x38],rdx
   140024d40:	lea    rcx,[rbp-0x30]
   140024d44:	mov    rdx,r8
   140024d47:	mov    r13,r9
   140024d4a:	mov    DWORD PTR [rbp-0x70],esi
   140024d4d:	mov    r15d,esi
   140024d50:	mov    DWORD PTR [rsp+0x50],esi
   140024d54:	mov    DWORD PTR [rbp-0x74],esi
   140024d57:	mov    DWORD PTR [rsp+0x44],esi
   140024d5b:	mov    ebx,esi
   140024d5d:	mov    DWORD PTR [rsp+0x68],esi
   140024d61:	call   0x140008fac
   140024d66:	mov    QWORD PTR [rbp-0x80],rsi
   140024d6a:	or     r14d,0xffffffff
   140024d6e:	mov    esi,r14d
   140024d71:	call   0x140009cb4
   140024d76:	mov    QWORD PTR [rbp-0x58],rax
   140024d7a:	test   rdi,rdi
   140024d7d:	je     0x140024e04
   140024d83:	test   BYTE PTR [rdi+0x18],0x40
   140024d87:	jne    0x140024e19
   140024d8d:	mov    rcx,rdi
   140024d90:	call   0x140010f18
   140024d95:	lea    r8,[rip+0x17494]        # 0x14003c230
   140024d9c:	movsxd r10,eax
   140024d9f:	lea    ecx,[r10+0x2]
   140024da3:	cmp    ecx,0x1
   140024da6:	jbe    0x140024dca
   140024da8:	mov    rdx,r10
   140024dab:	mov    rcx,r10
   140024dae:	and    edx,0x1f
   140024db1:	sar    rcx,0x5
   140024db5:	imul   r9,rdx,0x58
   140024db9:	lea    rdx,[rip+0xfffffffffffdb240]        # 0x140000000
   140024dc0:	add    r9,QWORD PTR [rdx+rcx*8+0x3dd10]
   140024dc8:	jmp    0x140024dd4
   140024dca:	mov    r9,r8
   140024dcd:	lea    rdx,[rip+0xfffffffffffdb22c]        # 0x140000000
   140024dd4:	test   BYTE PTR [r9+0x38],0x7f
   140024dd9:	jne    0x140024e04
   140024ddb:	lea    eax,[r10+0x2]
   140024ddf:	cmp    eax,0x1
   140024de2:	jbe    0x140024dfd
   140024de4:	mov    rcx,r10
   140024de7:	mov    rax,r10
   140024dea:	and    ecx,0x1f
   140024ded:	sar    rax,0x5
   140024df1:	imul   r8,rcx,0x58
   140024df5:	add    r8,QWORD PTR [rdx+rax*8+0x3dd10]
   140024dfd:	test   BYTE PTR [r8+0x38],0x80
   140024e02:	je     0x140024e19
   140024e04:	call   0x140009cb4
   140024e09:	mov    DWORD PTR [rax],0x16
   140024e0f:	call   0x140008d58
   140024e14:	jmp    0x140025128
   140024e19:	xor    edi,edi
   140024e1b:	test   r12,r12
   140024e1e:	jne    0x140024e35
   140024e20:	call   0x140009cb4
   140024e25:	mov    DWORD PTR [rax],0x16
   140024e2b:	call   0x140008d58
   140024e30:	jmp    0x140025d95
   140024e35:	mov    ecx,edi
   140024e37:	mov    r10d,edi
   140024e3a:	mov    DWORD PTR [rsp+0x4c],edi
   140024e3e:	mov    DWORD PTR [rsp+0x7c],ecx
   140024e42:	cmp    ecx,0x1
   140024e45:	jne    0x140024e4f
   140024e47:	test   esi,esi
   140024e49:	je     0x140025d92
   140024e4f:	mov    rax,QWORD PTR [rbp-0x38]
   140024e53:	mov    edx,r14d
   140024e56:	mov    r9,r12
   140024e59:	mov    DWORD PTR [rsp+0x54],edi
   140024e5d:	mov    r12d,r14d
   140024e60:	mov    DWORD PTR [rbp-0x60],r14d
   140024e64:	mov    esi,r14d
   140024e67:	mov    DWORD PTR [rsp+0x78],r14d
   140024e6c:	mov    r14b,BYTE PTR [rax]
   140024e6f:	mov    r11d,edi
   140024e72:	mov    QWORD PTR [rbp-0x50],rdi
   140024e76:	mov    DWORD PTR [rsp+0x40],edx
   140024e7a:	mov    DWORD PTR [rsp+0x5c],edi
   140024e7e:	mov    DWORD PTR [rsp+0x48],edi
   140024e82:	test   r14b,r14b
   140024e85:	je     0x140025d62
   140024e8b:	movsxd r8,ecx
   140024e8e:	mov    QWORD PTR [rsp+0x70],r8
   140024e93:	inc    r9
   140024e96:	mov    QWORD PTR [rsp+0x60],r9
   140024e9b:	test   r10d,r10d
   140024e9e:	js     0x140025cfe
   140024ea4:	lea    eax,[r14-0x20]
   140024ea8:	cmp    al,0x58
   140024eaa:	ja     0x140024ec7
   140024eac:	lea    rcx,[rip+0xfffffffffffdb14d]        # 0x140000000
   140024eb3:	movsx  rax,r14b
   140024eb7:	movzx  ecx,BYTE PTR [rax+rcx*1+0x34ba0]
   140024ebf:	and    ecx,0xf
   140024ec2:	xor    r10d,r10d
   140024ec5:	jmp    0x140024ecd
   140024ec7:	xor    r10d,r10d
   140024eca:	mov    ecx,r10d
   140024ecd:	movsxd rax,ecx
   140024ed0:	lea    rcx,[rax+rax*8]
   140024ed4:	movsxd rax,r11d
   140024ed7:	mov    r11d,0x1
   140024edd:	add    rcx,rax
   140024ee0:	lea    rax,[rip+0xfffffffffffdb119]        # 0x140000000
   140024ee7:	movzx  eax,BYTE PTR [rcx+rax*1+0x34bc0]
   140024eef:	shr    eax,0x4
   140024ef2:	mov    DWORD PTR [rbp-0x78],eax
   140024ef5:	cmp    eax,r11d
   140024ef8:	jne    0x140024fdb
   140024efe:	cmp    BYTE PTR [r9],0x25
   140024f02:	je     0x140024fe4
   140024f08:	cmp    esi,0xffffffff
   140024f0b:	jne    0x140024f6b
   140024f0d:	lea    r8d,[r11+0x9]
   140024f11:	lea    rdx,[rbp-0x80]
   140024f15:	mov    rcx,r9
   140024f18:	call   0x140026be8
   140024f1d:	xor    r10d,r10d
   140024f20:	test   eax,eax
   140024f22:	jle    0x140024f53
   140024f24:	mov    rax,QWORD PTR [rbp-0x80]
   140024f28:	cmp    BYTE PTR [rax],0x24
   140024f2b:	jne    0x140024f53
   140024f2d:	cmp    QWORD PTR [rsp+0x70],r10
   140024f32:	jne    0x140024f48
   140024f34:	lea    rcx,[rbp+0x1f0]
   140024f3b:	xor    edx,edx
   140024f3d:	mov    r8d,0x960
   140024f43:	call   0x140006f70
   140024f48:	mov    esi,0x1
   140024f4d:	mov    DWORD PTR [rsp+0x78],esi
   140024f51:	jmp    0x140024f70
   140024f53:	mov    r8,QWORD PTR [rsp+0x70]
   140024f58:	mov    r9,QWORD PTR [rsp+0x60]
   140024f5d:	mov    esi,r10d
   140024f60:	mov    DWORD PTR [rsp+0x78],r10d
   140024f65:	mov    r11d,0x1
   140024f6b:	cmp    esi,r11d
   140024f6e:	jne    0x140024fe4
   140024f70:	mov    rcx,QWORD PTR [rsp+0x60]
   140024f75:	lea    rdx,[rbp-0x80]
   140024f79:	mov    r8d,0xa
   140024f7f:	call   0x140026be8
   140024f84:	mov    rcx,QWORD PTR [rbp-0x80]
   140024f88:	mov    r8,QWORD PTR [rsp+0x70]
   140024f8d:	mov    r12d,eax
   140024f90:	mov    r11d,0x1
   140024f96:	lea    r9,[rcx+0x1]
   140024f9a:	sub    r12d,r11d
   140024f9d:	xor    r10d,r10d
   140024fa0:	mov    QWORD PTR [rsp+0x60],r9
   140024fa5:	mov    DWORD PTR [rbp-0x60],r12d
   140024fa9:	test   r8,r8
   140024fac:	jne    0x140024fe4
   140024fae:	test   r12d,r12d
   140024fb1:	js     0x140025114
   140024fb7:	cmp    BYTE PTR [rcx],0x24
   140024fba:	jne    0x140025114
   140024fc0:	cmp    r12d,0x64
   140024fc4:	jge    0x140025114
   140024fca:	mov    eax,DWORD PTR [rsp+0x40]
   140024fce:	cmp    r12d,eax
   140024fd1:	cmovg  eax,r12d
   140024fd5:	mov    DWORD PTR [rsp+0x40],eax
   140024fd9:	jmp    0x140024fe4
   140024fdb:	cmp    eax,0x8
   140024fde:	je     0x140025114
   140024fe4:	mov    ecx,DWORD PTR [rbp-0x78]
   140024fe7:	test   ecx,ecx
   140024fe9:	je     0x140025c6e
   140024fef:	dec    ecx
   140024ff1:	je     0x140025c4a
   140024ff7:	dec    ecx
   140024ff9:	je     0x140025bf7
   140024fff:	dec    ecx
   140025001:	je     0x140025b61
   140025007:	dec    ecx
   140025009:	je     0x140025b54
   14002500f:	dec    ecx
   140025011:	je     0x140025a61
   140025017:	dec    ecx
   140025019:	je     0x1400259ae
   14002501f:	dec    ecx
   140025021:	jne    0x140025ce1
   140025027:	movsx  ecx,r14b
   14002502b:	cmp    ecx,0x64
   14002502e:	jg     0x1400252af
   140025034:	je     0x140025446
   14002503a:	cmp    ecx,0x41
   14002503d:	je     0x140025251
   140025043:	cmp    ecx,0x43
   140025046:	je     0x140025175
   14002504c:	lea    eax,[rcx-0x45]
   14002504f:	test   eax,0xfffffffd
   140025054:	je     0x140025251
   14002505a:	cmp    ecx,0x53
   14002505d:	je     0x140025145
   140025063:	cmp    ecx,0x58
   140025066:	je     0x1400253a3
   14002506c:	cmp    ecx,0x5a
   14002506f:	je     0x140025088
   140025071:	cmp    ecx,0x61
   140025074:	je     0x140025259
   14002507a:	cmp    ecx,0x63
   14002507d:	je     0x140025183
   140025083:	jmp    0x14002581f
   140025088:	test   esi,esi
   14002508a:	jne    0x140025096
   14002508c:	mov    rax,QWORD PTR [r13+0x0]
   140025090:	add    r13,0x8
   140025094:	jmp    0x1400250b7
   140025096:	cmp    r12d,0x63
   14002509a:	ja     0x140025114
   14002509c:	movsxd rax,r12d
   14002509f:	lea    rcx,[rax+rax*2]
   1400250a3:	test   r8,r8
   1400250a6:	je     0x140025311
   1400250ac:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400250b4:	mov    rax,QWORD PTR [rax]
   1400250b7:	test   rax,rax
   1400250ba:	je     0x140025139
   1400250bc:	mov    rbx,QWORD PTR [rax+0x8]
   1400250c0:	test   rbx,rbx
   1400250c3:	je     0x140025139
   1400250c5:	movsx  eax,WORD PTR [rax]
   1400250c8:	bt     r15d,0xb
   1400250cd:	jae    0x14002512f
   1400250cf:	cdq    
   1400250d0:	mov    DWORD PTR [rsp+0x68],r11d
   1400250d5:	sub    eax,edx
   1400250d7:	sar    eax,1
   1400250d9:	jmp    0x14002581b
   1400250de:	mov    DWORD PTR [rax],0x3
   1400250e4:	mov    BYTE PTR [rbp+rcx*8+0x200],r14b
   1400250ec:	mov    DWORD PTR [rbp+rcx*8+0x204],r15d
   1400250f4:	jmp    0x14002581f
   1400250f9:	mov    edx,0x3
   1400250fe:	mov    r9d,r15d
   140025101:	mov    r8b,r14b
   140025104:	mov    rcx,rax
   140025107:	call   0x140025dd4
   14002510c:	test   eax,eax
   14002510e:	jne    0x14002581f
   140025114:	call   0x140009cb4
   140025119:	mov    DWORD PTR [rax],0x16
   14002511f:	call   0x140008d58
   140025124:	or     r14d,0xffffffff
   140025128:	xor    edi,edi
   14002512a:	jmp    0x140025d95
   14002512f:	mov    DWORD PTR [rsp+0x68],r10d
   140025134:	jmp    0x14002581b
   140025139:	mov    rbx,QWORD PTR [rip+0x180e0]        # 0x14003d220
   140025140:	jmp    0x140025813
   140025145:	test   r15d,0x830
   14002514c:	jne    0x140025153
   14002514e:	bts    r15d,0xb
   140025153:	cmp    edi,0xffffffff
   140025156:	mov    edx,edi
   140025158:	mov    eax,0x7fffffff
   14002515d:	cmove  edx,eax
   140025160:	test   esi,esi
   140025162:	jne    0x1400252fb
   140025168:	mov    rbx,QWORD PTR [r13+0x0]
   14002516c:	add    r13,0x8
   140025170:	jmp    0x140025335
   140025175:	test   r15d,0x830
   14002517c:	jne    0x140025183
   14002517e:	bts    r15d,0xb
   140025183:	test   r15d,0x810
   14002518a:	je     0x140025204
   14002518c:	test   esi,esi
   14002518e:	jne    0x14002519b
   140025190:	movzx  r9d,WORD PTR [r13+0x0]
   140025195:	add    r13,0x8
   140025199:	jmp    0x1400251e2
   14002519b:	cmp    r12d,0x63
   14002519f:	ja     0x140025114
   1400251a5:	movsxd rax,r12d
   1400251a8:	lea    rcx,[rax+rax*2]
   1400251ac:	test   r8,r8
   1400251af:	jne    0x1400251d6
   1400251b1:	lea    rax,[rbp+0x1f0]
   1400251b8:	lea    rax,[rax+rcx*8]
   1400251bc:	cmp    DWORD PTR [rax],r10d
   1400251bf:	jne    0x1400251cc
   1400251c1:	mov    DWORD PTR [rax],0x2
   1400251c7:	jmp    0x1400250e4
   1400251cc:	mov    edx,0x2
   1400251d1:	jmp    0x1400250fe
   1400251d6:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400251de:	movzx  r9d,WORD PTR [rax]
   1400251e2:	lea    rdx,[rbp-0x10]
   1400251e6:	lea    rcx,[rsp+0x54]
   1400251eb:	mov    r8d,0x200
   1400251f1:	call   0x14001f4b4
   1400251f6:	test   eax,eax
   1400251f8:	je     0x140025240
   1400251fa:	mov    DWORD PTR [rsp+0x44],0x1
   140025202:	jmp    0x140025240
   140025204:	test   esi,esi
   140025206:	jne    0x140025213
   140025208:	movzx  eax,WORD PTR [r13+0x0]
   14002520d:	add    r13,0x8
   140025211:	jmp    0x140025238
   140025213:	cmp    r12d,0x63
   140025217:	ja     0x140025114
   14002521d:	movsxd rax,r12d
   140025220:	lea    rcx,[rax+rax*2]
   140025224:	test   r8,r8
   140025227:	je     0x140025535
   14002522d:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025235:	movzx  eax,WORD PTR [rax]
   140025238:	mov    BYTE PTR [rbp-0x10],al
   14002523b:	mov    DWORD PTR [rsp+0x54],r11d
   140025240:	lea    rbx,[rbp-0x10]
   140025244:	jmp    0x14002581f
   140025249:	mov    DWORD PTR [rax],r11d
   14002524c:	jmp    0x1400250e4
   140025251:	mov    DWORD PTR [rbp-0x74],r11d
   140025255:	add    r14b,0x20
   140025259:	or     r15d,0x40
   14002525d:	cmp    esi,r11d
   140025260:	jne    0x1400256eb
   140025266:	test   r8,r8
   140025269:	jne    0x1400256eb
   14002526f:	cmp    r12d,0x63
   140025273:	ja     0x140025114
   140025279:	movsxd rax,r12d
   14002527c:	lea    rcx,[rax+rax*2]
   140025280:	lea    rax,[rbp+0x1f0]
   140025287:	lea    rax,[rax+rcx*8]
   14002528b:	cmp    DWORD PTR [rax],r10d
   14002528e:	jne    0x1400256c6
   140025294:	mov    DWORD PTR [rax],0x8
   14002529a:	mov    BYTE PTR [rbp+rcx*8+0x200],r14b
   1400252a2:	mov    DWORD PTR [rbp+rcx*8+0x204],r15d
   1400252aa:	jmp    0x140025ce1
   1400252af:	cmp    ecx,0x67
   1400252b2:	jle    0x140025259
   1400252b4:	cmp    ecx,0x69
   1400252b7:	je     0x140025446
   1400252bd:	cmp    ecx,0x6e
   1400252c0:	je     0x1400253e7
   1400252c6:	cmp    ecx,0x6f
   1400252c9:	je     0x1400253d2
   1400252cf:	cmp    ecx,0x70
   1400252d2:	je     0x140025395
   1400252d8:	cmp    ecx,0x73
   1400252db:	je     0x140025153
   1400252e1:	cmp    ecx,0x75
   1400252e4:	je     0x14002544a
   1400252ea:	cmp    ecx,0x78
   1400252ed:	jne    0x14002581f
   1400252f3:	lea    eax,[rcx-0x51]
   1400252f6:	jmp    0x1400253a8
   1400252fb:	cmp    r12d,0x63
   1400252ff:	ja     0x140025114
   140025305:	movsxd rax,r12d
   140025308:	lea    rcx,[rax+rax*2]
   14002530c:	test   r8,r8
   14002530f:	jne    0x14002532a
   140025311:	lea    rax,[rbp+0x1f0]
   140025318:	lea    rax,[rax+rcx*8]
   14002531c:	cmp    DWORD PTR [rax],r10d
   14002531f:	je     0x1400250de
   140025325:	jmp    0x1400250f9
   14002532a:	mov    rbx,QWORD PTR [rbp+rcx*8+0x1f8]
   140025332:	mov    rbx,QWORD PTR [rbx]
   140025335:	test   r15d,0x810
   14002533c:	je     0x14002536f
   14002533e:	test   rbx,rbx
   140025341:	mov    DWORD PTR [rsp+0x68],r11d
   140025346:	cmove  rbx,QWORD PTR [rip+0x17eda]        # 0x14003d228
   14002534e:	mov    rax,rbx
   140025351:	jmp    0x140025360
   140025353:	sub    edx,r11d
   140025356:	cmp    WORD PTR [rax],r10w
   14002535a:	je     0x140025364
   14002535c:	add    rax,0x2
   140025360:	test   edx,edx
   140025362:	jne    0x140025353
   140025364:	sub    rax,rbx
   140025367:	sar    rax,1
   14002536a:	jmp    0x14002581b
   14002536f:	test   rbx,rbx
   140025372:	cmove  rbx,QWORD PTR [rip+0x17ea6]        # 0x14003d220
   14002537a:	mov    rax,rbx
   14002537d:	jmp    0x14002538a
   14002537f:	sub    edx,r11d
   140025382:	cmp    BYTE PTR [rax],r10b
   140025385:	je     0x14002538e
   140025387:	add    rax,r11
   14002538a:	test   edx,edx
   14002538c:	jne    0x14002537f
   14002538e:	sub    eax,ebx
   140025390:	jmp    0x14002581b
   140025395:	mov    edi,0x10
   14002539a:	bts    r15d,0xf
   14002539f:	mov    DWORD PTR [rsp+0x48],edi
   1400253a3:	mov    eax,0x7
   1400253a8:	mov    DWORD PTR [rbp-0x70],eax
   1400253ab:	mov    r9d,0x10
   1400253b1:	test   r15b,r15b
   1400253b4:	jns    0x140025450
   1400253ba:	lea    edx,[r9-0xe]
   1400253be:	add    al,0x51
   1400253c0:	mov    BYTE PTR [rsp+0x58],0x30
   1400253c5:	mov    DWORD PTR [rsp+0x50],edx
   1400253c9:	mov    BYTE PTR [rsp+0x59],al
   1400253cd:	jmp    0x140025454
   1400253d2:	mov    r9d,0x8
   1400253d8:	test   r15b,r15b
   1400253db:	jns    0x140025450
   1400253dd:	mov    eax,0x200
   1400253e2:	or     r15d,eax
   1400253e5:	jmp    0x140025450
   1400253e7:	test   esi,esi
   1400253e9:	jne    0x1400253f5
   1400253eb:	mov    rdi,QWORD PTR [r13+0x0]
   1400253ef:	add    r13,0x8
   1400253f3:	jmp    0x14002541a
   1400253f5:	cmp    r12d,0x63
   1400253f9:	ja     0x140025114
   1400253ff:	movsxd rax,r12d
   140025402:	lea    rcx,[rax+rax*2]
   140025406:	test   r8,r8
   140025409:	je     0x140025311
   14002540f:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025417:	mov    rdi,QWORD PTR [rax]
   14002541a:	call   0x140012070
   14002541f:	test   eax,eax
   140025421:	je     0x140025114
   140025427:	mov    eax,DWORD PTR [rsp+0x4c]
   14002542b:	test   r15b,0x20
   14002542f:	je     0x140025436
   140025431:	mov    WORD PTR [rdi],ax
   140025434:	jmp    0x140025438
   140025436:	mov    DWORD PTR [rdi],eax
   140025438:	mov    eax,0x1
   14002543d:	mov    DWORD PTR [rsp+0x44],eax
   140025441:	jmp    0x140025823
   140025446:	or     r15d,0x40
   14002544a:	mov    r9d,0xa
   140025450:	mov    edx,DWORD PTR [rsp+0x50]
   140025454:	bt     r15d,0xf
   140025459:	jae    0x1400254a7
   14002545b:	test   esi,esi
   14002545d:	jne    0x14002546c
   14002545f:	mov    r8,QWORD PTR [r13+0x0]
   140025463:	add    r13,0x8
   140025467:	jmp    0x140025606
   14002546c:	cmp    r12d,0x63
   140025470:	ja     0x140025114
   140025476:	movsxd rax,r12d
   140025479:	lea    rcx,[rax+rax*2]
   14002547d:	test   r8,r8
   140025480:	jne    0x1400254ed
   140025482:	lea    rax,[rbp+0x1f0]
   140025489:	lea    rax,[rax+rcx*8]
   14002548d:	cmp    DWORD PTR [rax],r10d
   140025490:	jne    0x14002549d
   140025492:	mov    DWORD PTR [rax],0x4
   140025498:	jmp    0x1400250e4
   14002549d:	mov    edx,0x4
   1400254a2:	jmp    0x1400250fe
   1400254a7:	bt     r15d,0xc
   1400254ac:	jae    0x1400254fd
   1400254ae:	test   esi,esi
   1400254b0:	je     0x14002545f
   1400254b2:	cmp    r12d,0x63
   1400254b6:	ja     0x140025114
   1400254bc:	movsxd rax,r12d
   1400254bf:	lea    rcx,[rax+rax*2]
   1400254c3:	test   r8,r8
   1400254c6:	jne    0x1400254ed
   1400254c8:	lea    rax,[rbp+0x1f0]
   1400254cf:	lea    rax,[rax+rcx*8]
   1400254d3:	cmp    DWORD PTR [rax],r10d
   1400254d6:	jne    0x1400254e3
   1400254d8:	mov    DWORD PTR [rax],0x5
   1400254de:	jmp    0x1400250e4
   1400254e3:	mov    edx,0x5
   1400254e8:	jmp    0x1400250fe
   1400254ed:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400254f5:	mov    r8,QWORD PTR [rax]
   1400254f8:	jmp    0x140025606
   1400254fd:	test   r15b,0x20
   140025501:	je     0x140025598
   140025507:	test   r15b,0x40
   14002550b:	je     0x140025562
   14002550d:	test   esi,esi
   14002550f:	jne    0x14002551f
   140025511:	movsx  r8,WORD PTR [r13+0x0]
   140025516:	add    r13,0x8
   14002551a:	jmp    0x140025606
   14002551f:	cmp    r12d,0x63
   140025523:	ja     0x140025114
   140025529:	movsxd rax,r12d
   14002552c:	lea    rcx,[rax+rax*2]
   140025530:	test   r8,r8
   140025533:	jne    0x140025551
   140025535:	lea    rax,[rbp+0x1f0]
   14002553c:	lea    rax,[rax+rcx*8]
   140025540:	cmp    DWORD PTR [rax],r10d
   140025543:	je     0x140025249
   140025549:	mov    edx,r11d
   14002554c:	jmp    0x1400250fe
   140025551:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025559:	movsx  r8,WORD PTR [rax]
   14002555d:	jmp    0x140025606
   140025562:	test   esi,esi
   140025564:	jne    0x140025574
   140025566:	movzx  r8d,WORD PTR [r13+0x0]
   14002556b:	add    r13,0x8
   14002556f:	jmp    0x140025606
   140025574:	cmp    r12d,0x63
   140025578:	ja     0x140025114
   14002557e:	movsxd rax,r12d
   140025581:	lea    rcx,[rax+rax*2]
   140025585:	test   r8,r8
   140025588:	je     0x140025535
   14002558a:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025592:	movzx  r8d,WORD PTR [rax]
   140025596:	jmp    0x140025606
   140025598:	test   r15b,0x40
   14002559c:	je     0x1400255d3
   14002559e:	test   esi,esi
   1400255a0:	jne    0x1400255ac
   1400255a2:	movsxd r8,DWORD PTR [r13+0x0]
   1400255a6:	add    r13,0x8
   1400255aa:	jmp    0x140025606
   1400255ac:	cmp    r12d,0x63
   1400255b0:	ja     0x140025114
   1400255b6:	movsxd rax,r12d
   1400255b9:	lea    rcx,[rax+rax*2]
   1400255bd:	test   r8,r8
   1400255c0:	je     0x140025535
   1400255c6:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400255ce:	movsxd r8,DWORD PTR [rax]
   1400255d1:	jmp    0x140025606
   1400255d3:	test   esi,esi
   1400255d5:	jne    0x1400255e1
   1400255d7:	mov    r8d,DWORD PTR [r13+0x0]
   1400255db:	add    r13,0x8
   1400255df:	jmp    0x140025606
   1400255e1:	cmp    r12d,0x63
   1400255e5:	ja     0x140025114
   1400255eb:	movsxd rax,r12d
   1400255ee:	lea    rcx,[rax+rax*2]
   1400255f2:	test   r8,r8
   1400255f5:	je     0x140025535
   1400255fb:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025603:	mov    r8d,DWORD PTR [rax]
   140025606:	test   r15b,0x40
   14002560a:	je     0x140025619
   14002560c:	test   r8,r8
   14002560f:	jns    0x140025619
   140025611:	neg    r8
   140025614:	bts    r15d,0x8
   140025619:	bt     r15d,0xf
   14002561e:	jb     0x14002562a
   140025620:	bt     r15d,0xc
   140025625:	jb     0x14002562a
   140025627:	mov    r8d,r8d
   14002562a:	mov    esi,0x200
   14002562f:	test   edi,edi
   140025631:	jns    0x140025638
   140025633:	mov    edi,r11d
   140025636:	jmp    0x140025641
   140025638:	and    r15d,0xfffffff7
   14002563c:	cmp    edi,esi
   14002563e:	cmovg  edi,esi
   140025641:	mov    r12d,DWORD PTR [rbp-0x70]
   140025645:	mov    rax,r8
   140025648:	lea    rbx,[rbp+0x1ef]
   14002564f:	neg    rax
   140025652:	sbb    ecx,ecx
   140025654:	and    ecx,edx
   140025656:	mov    DWORD PTR [rsp+0x50],ecx
   14002565a:	mov    ecx,edi
   14002565c:	sub    edi,r11d
   14002565f:	test   ecx,ecx
   140025661:	jg     0x140025668
   140025663:	test   r8,r8
   140025666:	je     0x140025688
   140025668:	xor    edx,edx
   14002566a:	mov    rax,r8
   14002566d:	movsxd rcx,r9d
   140025670:	div    rcx
   140025673:	mov    r8,rax
   140025676:	lea    eax,[rdx+0x30]
   140025679:	cmp    eax,0x39
   14002567c:	jle    0x140025681
   14002567e:	add    eax,r12d
   140025681:	mov    BYTE PTR [rbx],al
   140025683:	sub    rbx,r11
   140025686:	jmp    0x14002565a
   140025688:	mov    r12d,DWORD PTR [rbp-0x60]
   14002568c:	lea    rax,[rbp+0x1ef]
   140025693:	mov    DWORD PTR [rsp+0x48],edi
   140025697:	sub    eax,ebx
   140025699:	add    rbx,r11
   14002569c:	mov    DWORD PTR [rsp+0x54],eax
   1400256a0:	test   esi,r15d
   1400256a3:	je     0x14002581f
   1400256a9:	test   eax,eax
   1400256ab:	je     0x1400256b6
   1400256ad:	cmp    BYTE PTR [rbx],0x30
   1400256b0:	je     0x14002581f
   1400256b6:	sub    rbx,r11
   1400256b9:	add    DWORD PTR [rsp+0x54],r11d
   1400256be:	mov    BYTE PTR [rbx],0x30
   1400256c1:	jmp    0x14002581f
   1400256c6:	mov    r8b,r14b
   1400256c9:	mov    edx,0x8
   1400256ce:	mov    r9d,r15d
   1400256d1:	mov    rcx,rax
   1400256d4:	call   0x140025dd4
   1400256d9:	test   eax,eax
   1400256db:	je     0x140025114
   1400256e1:	mov    r8,QWORD PTR [rsp+0x70]
   1400256e6:	jmp    0x140025cdc
   1400256eb:	mov    eax,0x200
   1400256f0:	lea    rbx,[rbp-0x10]
   1400256f4:	mov    esi,eax
   1400256f6:	test   edi,edi
   1400256f8:	jns    0x140025704
   1400256fa:	mov    DWORD PTR [rsp+0x48],0x6
   140025702:	jmp    0x14002574d
   140025704:	jne    0x140025713
   140025706:	cmp    r14b,0x67
   14002570a:	jne    0x14002574d
   14002570c:	mov    DWORD PTR [rsp+0x48],r11d
   140025711:	jmp    0x14002574d
   140025713:	cmp    edi,eax
   140025715:	cmovg  edi,eax
   140025718:	mov    DWORD PTR [rsp+0x48],edi
   14002571c:	cmp    edi,0xa3
   140025722:	jle    0x14002574d
   140025724:	add    edi,0x15d
   14002572a:	movsxd rcx,edi
   14002572d:	call   0x140008684
   140025732:	xor    r10d,r10d
   140025735:	mov    QWORD PTR [rbp-0x50],rax
   140025739:	test   rax,rax
   14002573c:	je     0x140025745
   14002573e:	mov    rbx,rax
   140025741:	mov    esi,edi
   140025743:	jmp    0x14002574d
   140025745:	mov    DWORD PTR [rsp+0x48],0xa3
   14002574d:	cmp    DWORD PTR [rsp+0x78],r10d
   140025752:	jne    0x140025762
   140025754:	mov    rax,QWORD PTR [r13+0x0]
   140025758:	add    r13,0x8
   14002575c:	mov    QWORD PTR [rbp-0x40],rax
   140025760:	jmp    0x140025782
   140025762:	cmp    r12d,0x63
   140025766:	ja     0x140025114
   14002576c:	movsxd rax,r12d
   14002576f:	lea    rcx,[rax+rax*2]
   140025773:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   14002577b:	mov    rcx,QWORD PTR [rax]
   14002577e:	mov    QWORD PTR [rbp-0x40],rcx
   140025782:	mov    rcx,QWORD PTR [rip+0x16a87]        # 0x14003c210
   140025789:	movsx  edi,r14b
   14002578d:	movsxd rsi,esi
   140025790:	call   QWORD PTR [rip+0x6982]        # 0x14002c118
   140025796:	lea    rcx,[rbp-0x30]
   14002579a:	mov    r9d,edi
   14002579d:	mov    QWORD PTR [rsp+0x30],rcx
   1400257a2:	mov    ecx,DWORD PTR [rbp-0x74]
   1400257a5:	mov    r8,rsi
   1400257a8:	mov    DWORD PTR [rsp+0x28],ecx
   1400257ac:	mov    ecx,DWORD PTR [rsp+0x48]
   1400257b0:	mov    rdx,rbx
   1400257b3:	mov    DWORD PTR [rsp+0x20],ecx
   1400257b7:	lea    rcx,[rbp-0x40]
   1400257bb:	call   rax
   1400257bd:	mov    edi,r15d
   1400257c0:	and    edi,0x80
   1400257c6:	je     0x1400257e6
   1400257c8:	xor    eax,eax
   1400257ca:	cmp    DWORD PTR [rsp+0x48],eax
   1400257ce:	jne    0x1400257e6
   1400257d0:	mov    rcx,QWORD PTR [rip+0x16a51]        # 0x14003c228
   1400257d7:	call   QWORD PTR [rip+0x693b]        # 0x14002c118
   1400257dd:	lea    rdx,[rbp-0x30]
   1400257e1:	mov    rcx,rbx
   1400257e4:	call   rax
   1400257e6:	cmp    r14b,0x67
   1400257ea:	jne    0x140025806
   1400257ec:	test   edi,edi
   1400257ee:	jne    0x140025806
   1400257f0:	mov    rcx,QWORD PTR [rip+0x16a29]        # 0x14003c220
   1400257f7:	call   QWORD PTR [rip+0x691b]        # 0x14002c118
   1400257fd:	lea    rdx,[rbp-0x30]
   140025801:	mov    rcx,rbx
   140025804:	call   rax
   140025806:	cmp    BYTE PTR [rbx],0x2d
   140025809:	jne    0x140025813
   14002580b:	bts    r15d,0x8
   140025810:	inc    rbx
   140025813:	mov    rcx,rbx
   140025816:	call   0x140007550
   14002581b:	mov    DWORD PTR [rsp+0x54],eax
   14002581f:	mov    eax,DWORD PTR [rsp+0x44]
   140025823:	cmp    DWORD PTR [rsp+0x78],0x1
   140025828:	jne    0x140025838
   14002582a:	mov    r8,QWORD PTR [rsp+0x70]
   14002582f:	test   r8,r8
   140025832:	je     0x140025cd8
   140025838:	test   eax,eax
   14002583a:	jne    0x14002598d
   140025840:	test   r15b,0x40
   140025844:	je     0x140025877
   140025846:	bt     r15d,0x8
   14002584b:	jae    0x140025854
   14002584d:	mov    BYTE PTR [rsp+0x58],0x2d
   140025852:	jmp    0x14002585f
   140025854:	test   r15b,0x1
   140025858:	je     0x14002586a
   14002585a:	mov    BYTE PTR [rsp+0x58],0x2b
   14002585f:	mov    edi,0x1
   140025864:	mov    DWORD PTR [rsp+0x50],edi
   140025868:	jmp    0x14002587b
   14002586a:	test   r15b,0x2
   14002586e:	je     0x140025877
   140025870:	mov    BYTE PTR [rsp+0x58],0x20
   140025875:	jmp    0x14002585f
   140025877:	mov    edi,DWORD PTR [rsp+0x50]
   14002587b:	mov    r14d,DWORD PTR [rsp+0x5c]
   140025880:	mov    rsi,QWORD PTR [rbp-0x68]
   140025884:	sub    r14d,DWORD PTR [rsp+0x54]
   140025889:	sub    r14d,edi
   14002588c:	test   r15b,0xc
   140025890:	jne    0x1400258a4
   140025892:	lea    r9,[rsp+0x4c]
   140025897:	mov    r8,rsi
   14002589a:	mov    edx,r14d
   14002589d:	mov    cl,0x20
   14002589f:	call   0x140025f4c
   1400258a4:	mov    rax,QWORD PTR [rbp-0x58]
   1400258a8:	lea    r9,[rsp+0x4c]
   1400258ad:	lea    rcx,[rsp+0x58]
   1400258b2:	mov    r8,rsi
   1400258b5:	mov    edx,edi
   1400258b7:	mov    QWORD PTR [rsp+0x20],rax
   1400258bc:	call   0x140025fa0
   1400258c1:	test   r15b,0x8
   1400258c5:	je     0x1400258df
   1400258c7:	test   r15b,0x4
   1400258cb:	jne    0x1400258df
   1400258cd:	lea    r9,[rsp+0x4c]
   1400258d2:	mov    r8,rsi
   1400258d5:	mov    edx,r14d
   1400258d8:	mov    cl,0x30
   1400258da:	call   0x140025f4c
   1400258df:	mov    edi,DWORD PTR [rsp+0x54]
   1400258e3:	xor    eax,eax
   1400258e5:	cmp    DWORD PTR [rsp+0x68],eax
   1400258e9:	je     0x140025952
   1400258eb:	test   edi,edi
   1400258ed:	jle    0x140025952
   1400258ef:	mov    rsi,rbx
   1400258f2:	movzx  r9d,WORD PTR [rsi]
   1400258f6:	lea    rdx,[rbp+0xb50]
   1400258fd:	lea    rcx,[rbp-0x48]
   140025901:	mov    r8d,0x6
   140025907:	dec    edi
   140025909:	lea    rsi,[rsi+0x2]
   14002590d:	call   0x14001f4b4
   140025912:	test   eax,eax
   140025914:	jne    0x140025945
   140025916:	mov    edx,DWORD PTR [rbp-0x48]
   140025919:	test   edx,edx
   14002591b:	je     0x140025945
   14002591d:	mov    rax,QWORD PTR [rbp-0x58]
   140025921:	mov    r8,QWORD PTR [rbp-0x68]
   140025925:	lea    r9,[rsp+0x4c]
   14002592a:	lea    rcx,[rbp+0xb50]
   140025931:	mov    QWORD PTR [rsp+0x20],rax
   140025936:	call   0x140025fa0
   14002593b:	test   edi,edi
   14002593d:	jne    0x1400258f2
   14002593f:	mov    rsi,QWORD PTR [rbp-0x68]
   140025943:	jmp    0x14002596d
   140025945:	mov    rsi,QWORD PTR [rbp-0x68]
   140025949:	or     eax,0xffffffff
   14002594c:	mov    DWORD PTR [rsp+0x4c],eax
   140025950:	jmp    0x140025971
   140025952:	mov    rax,QWORD PTR [rbp-0x58]
   140025956:	lea    r9,[rsp+0x4c]
   14002595b:	mov    r8,rsi
   14002595e:	mov    edx,edi
   140025960:	mov    rcx,rbx
   140025963:	mov    QWORD PTR [rsp+0x20],rax
   140025968:	call   0x140025fa0
   14002596d:	mov    eax,DWORD PTR [rsp+0x4c]
   140025971:	test   eax,eax
   140025973:	js     0x14002598d
   140025975:	test   r15b,0x4
   140025979:	je     0x14002598d
   14002597b:	lea    r9,[rsp+0x4c]
   140025980:	mov    r8,rsi
   140025983:	mov    edx,r14d
   140025986:	mov    cl,0x20
   140025988:	call   0x140025f4c
   14002598d:	mov    rax,QWORD PTR [rbp-0x50]
   140025991:	test   rax,rax
   140025994:	je     0x1400259a5
   140025996:	mov    rcx,rax
   140025999:	call   0x140007dc0
   14002599e:	xor    r10d,r10d
   1400259a1:	mov    QWORD PTR [rbp-0x50],r10
   1400259a5:	mov    edi,DWORD PTR [rsp+0x48]
   1400259a9:	jmp    0x1400256e1
   1400259ae:	cmp    r14b,0x49
   1400259b2:	je     0x1400259fd
   1400259b4:	cmp    r14b,0x68
   1400259b8:	je     0x1400259f4
   1400259ba:	cmp    r14b,0x6c
   1400259be:	je     0x1400259d4
   1400259c0:	cmp    r14b,0x77
   1400259c4:	jne    0x140025ce1
   1400259ca:	bts    r15d,0xb
   1400259cf:	jmp    0x140025ce1
   1400259d4:	cmp    BYTE PTR [r9],0x6c
   1400259d8:	mov    edx,DWORD PTR [rsp+0x40]
   1400259dc:	jne    0x1400259eb
   1400259de:	add    r9,r11
   1400259e1:	bts    r15d,0xc
   1400259e6:	jmp    0x140025ce5
   1400259eb:	or     r15d,0x10
   1400259ef:	jmp    0x140025ce5
   1400259f4:	or     r15d,0x20
   1400259f8:	jmp    0x140025ce1
   1400259fd:	mov    al,BYTE PTR [r9]
   140025a00:	mov    ecx,0x8000
   140025a05:	or     r15d,ecx
   140025a08:	cmp    al,0x36
   140025a0a:	jne    0x140025a1f
   140025a0c:	cmp    BYTE PTR [r9+0x1],0x34
   140025a11:	jne    0x140025a1f
   140025a13:	add    r9,0x2
   140025a17:	or     r15d,ecx
   140025a1a:	jmp    0x140025ce1
   140025a1f:	cmp    al,0x33
   140025a21:	jne    0x140025a38
   140025a23:	cmp    BYTE PTR [r9+0x1],0x32
   140025a28:	jne    0x140025a38
   140025a2a:	add    r9,0x2
   140025a2e:	btr    r15d,0xf
   140025a33:	jmp    0x140025ce1
   140025a38:	sub    al,0x58
   140025a3a:	cmp    al,0x20
   140025a3c:	ja     0x140025a58
   140025a3e:	movabs rcx,0x120821001
   140025a48:	bt     rcx,rax
   140025a4c:	jae    0x140025a58
   140025a4e:	bts    r15d,0x10
   140025a53:	jmp    0x140025ce1
   140025a58:	mov    DWORD PTR [rbp-0x78],r10d
   140025a5c:	jmp    0x140025c82
   140025a61:	cmp    r14b,0x2a
   140025a65:	jne    0x140025b3e
   140025a6b:	test   esi,esi
   140025a6d:	jne    0x140025a7c
   140025a6f:	mov    edi,DWORD PTR [r13+0x0]
   140025a73:	add    r13,0x8
   140025a77:	jmp    0x140025b22
   140025a7c:	lea    rdx,[rbp-0x80]
   140025a80:	mov    r8d,0xa
   140025a86:	mov    rcx,r9
   140025a89:	call   0x140026be8
   140025a8e:	mov    rcx,QWORD PTR [rbp-0x80]
   140025a92:	mov    r8,QWORD PTR [rsp+0x70]
   140025a97:	lea    r9,[rcx+0x1]
   140025a9b:	mov    r11d,0x1
   140025aa1:	xor    r10d,r10d
   140025aa4:	sub    eax,r11d
   140025aa7:	mov    QWORD PTR [rsp+0x60],r9
   140025aac:	test   r8,r8
   140025aaf:	jne    0x140025b12
   140025ab1:	test   eax,eax
   140025ab3:	js     0x140025114
   140025ab9:	cmp    BYTE PTR [rcx],0x24
   140025abc:	jne    0x140025114
   140025ac2:	cmp    r12d,0x64
   140025ac6:	jge    0x140025114
   140025acc:	mov    edx,DWORD PTR [rsp+0x40]
   140025ad0:	cmp    eax,edx
   140025ad2:	cmovg  edx,eax
   140025ad5:	cdqe   
   140025ad7:	lea    rcx,[rax+rax*2]
   140025adb:	lea    rax,[rbp+0x1f0]
   140025ae2:	mov    DWORD PTR [rsp+0x40],edx
   140025ae6:	lea    rax,[rax+rcx*8]
   140025aea:	cmp    DWORD PTR [rax],r10d
   140025aed:	jne    0x140025b07
   140025aef:	mov    DWORD PTR [rax],r11d
   140025af2:	mov    BYTE PTR [rbp+rcx*8+0x200],0x2a
   140025afa:	mov    DWORD PTR [rbp+rcx*8+0x204],r15d
   140025b02:	jmp    0x140025ce5
   140025b07:	mov    r8b,0x2a
   140025b0a:	mov    edx,r11d
   140025b0d:	jmp    0x1400256ce
   140025b12:	cdqe   
   140025b14:	lea    rcx,[rax+rax*2]
   140025b18:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025b20:	mov    edi,DWORD PTR [rax]
   140025b22:	mov    edx,DWORD PTR [rsp+0x40]
   140025b26:	mov    DWORD PTR [rsp+0x48],edi
   140025b2a:	test   edi,edi
   140025b2c:	jns    0x140025ce5
   140025b32:	or     edi,0xffffffff
   140025b35:	mov    DWORD PTR [rsp+0x48],edi
   140025b39:	jmp    0x140025ce5
   140025b3e:	lea    edi,[rdi+rdi*4]
   140025b41:	movsx  eax,r14b
   140025b45:	lea    edi,[rdi-0x18]
   140025b48:	lea    edi,[rax+rdi*2]
   140025b4b:	mov    DWORD PTR [rsp+0x48],edi
   140025b4f:	jmp    0x140025ce1
   140025b54:	mov    edi,r10d
   140025b57:	mov    DWORD PTR [rsp+0x48],r10d
   140025b5c:	jmp    0x140025ce1
   140025b61:	cmp    r14b,0x2a
   140025b65:	jne    0x140025bdd
   140025b67:	test   esi,esi
   140025b69:	jne    0x140025b75
   140025b6b:	mov    eax,DWORD PTR [r13+0x0]
   140025b6f:	add    r13,0x8
   140025b73:	jmp    0x140025bbe
   140025b75:	lea    rdx,[rbp-0x80]
   140025b79:	mov    r8d,0xa
   140025b7f:	mov    rcx,r9
   140025b82:	call   0x140026be8
   140025b87:	mov    rcx,QWORD PTR [rbp-0x80]
   140025b8b:	mov    r8,QWORD PTR [rsp+0x70]
   140025b90:	lea    r9,[rcx+0x1]
   140025b94:	mov    r11d,0x1
   140025b9a:	xor    r10d,r10d
   140025b9d:	sub    eax,r11d
   140025ba0:	mov    QWORD PTR [rsp+0x60],r9
   140025ba5:	test   r8,r8
   140025ba8:	je     0x140025ab1
   140025bae:	cdqe   
   140025bb0:	lea    rcx,[rax+rax*2]
   140025bb4:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025bbc:	mov    eax,DWORD PTR [rax]
   140025bbe:	mov    edx,DWORD PTR [rsp+0x40]
   140025bc2:	mov    DWORD PTR [rsp+0x5c],eax
   140025bc6:	test   eax,eax
   140025bc8:	jns    0x140025ce5
   140025bce:	or     r15d,0x4
   140025bd2:	neg    eax
   140025bd4:	mov    DWORD PTR [rsp+0x5c],eax
   140025bd8:	jmp    0x140025ce5
   140025bdd:	mov    eax,DWORD PTR [rsp+0x5c]
   140025be1:	lea    ecx,[rax+rax*4]
   140025be4:	movsx  eax,r14b
   140025be8:	lea    eax,[rax+rcx*2]
   140025beb:	add    eax,0xffffffd0
   140025bee:	mov    DWORD PTR [rsp+0x5c],eax
   140025bf2:	jmp    0x140025ce1
   140025bf7:	cmp    r14b,0x20
   140025bfb:	je     0x140025c41
   140025bfd:	cmp    r14b,0x23
   140025c01:	je     0x140025c37
   140025c03:	cmp    r14b,0x2b
   140025c07:	je     0x140025c2f
   140025c09:	cmp    r14b,0x2d
   140025c0d:	je     0x140025c26
   140025c0f:	mov    edx,DWORD PTR [rsp+0x40]
   140025c13:	cmp    r14b,0x30
   140025c17:	jne    0x140025ce5
   140025c1d:	or     r15d,0x8
   140025c21:	jmp    0x140025ce5
   140025c26:	or     r15d,0x4
   140025c2a:	jmp    0x140025ce1
   140025c2f:	or     r15d,r11d
   140025c32:	jmp    0x140025ce1
   140025c37:	bts    r15d,0x7
   140025c3c:	jmp    0x140025ce1
   140025c41:	or     r15d,0x2
   140025c45:	jmp    0x140025ce1
   140025c4a:	or     edi,0xffffffff
   140025c4d:	mov    DWORD PTR [rbp-0x74],r10d
   140025c51:	mov    DWORD PTR [rsp+0x44],r10d
   140025c56:	mov    DWORD PTR [rsp+0x5c],r10d
   140025c5b:	mov    DWORD PTR [rsp+0x50],r10d
   140025c60:	mov    r15d,r10d
   140025c63:	mov    DWORD PTR [rsp+0x48],edi
   140025c67:	mov    DWORD PTR [rsp+0x68],r10d
   140025c6c:	jmp    0x140025ce1
   140025c6e:	test   r8,r8
   140025c71:	jne    0x140025c78
   140025c73:	cmp    esi,r11d
   140025c76:	je     0x140025ce1
   140025c78:	cmp    r8,r11
   140025c7b:	jne    0x140025c82
   140025c7d:	cmp    esi,0xffffffff
   140025c80:	je     0x140025ce1
   140025c82:	lea    rdx,[rbp-0x30]
   140025c86:	movzx  ecx,r14b
   140025c8a:	mov    DWORD PTR [rsp+0x68],r10d
   140025c8f:	call   0x140011e44
   140025c94:	test   eax,eax
   140025c96:	je     0x140025cc2
   140025c98:	mov    rdx,QWORD PTR [rbp-0x68]
   140025c9c:	lea    r8,[rsp+0x4c]
   140025ca1:	mov    cl,r14b
   140025ca4:	call   0x140025f04
   140025ca9:	mov    rax,QWORD PTR [rsp+0x60]
   140025cae:	mov    r14b,BYTE PTR [rax]
   140025cb1:	inc    rax
   140025cb4:	mov    QWORD PTR [rsp+0x60],rax
   140025cb9:	test   r14b,r14b
   140025cbc:	je     0x140025114
   140025cc2:	mov    rdx,QWORD PTR [rbp-0x68]
   140025cc6:	lea    r8,[rsp+0x4c]
   140025ccb:	mov    cl,r14b
   140025cce:	call   0x140025f04
   140025cd3:	jmp    0x1400256e1
   140025cd8:	mov    edi,DWORD PTR [rsp+0x48]
   140025cdc:	mov    r9,QWORD PTR [rsp+0x60]
   140025ce1:	mov    edx,DWORD PTR [rsp+0x40]
   140025ce5:	mov    r14b,BYTE PTR [r9]
   140025ce8:	mov    esi,DWORD PTR [rsp+0x78]
   140025cec:	mov    r10d,DWORD PTR [rsp+0x4c]
   140025cf1:	mov    r11d,DWORD PTR [rbp-0x78]
   140025cf5:	test   r14b,r14b
   140025cf8:	jne    0x140024e93
   140025cfe:	xor    edi,edi
   140025d00:	test   r11d,r11d
   140025d03:	je     0x140025d0b
   140025d05:	cmp    r11d,0x7
   140025d09:	jne    0x140025d7c
   140025d0b:	mov    ecx,DWORD PTR [rsp+0x7c]
   140025d0f:	cmp    esi,0x1
   140025d12:	jne    0x140025d64
   140025d14:	test   ecx,ecx
   140025d16:	jne    0x140025d64
   140025d18:	mov    r8,rdi
   140025d1b:	movsxd r9,edx
   140025d1e:	test   edx,edx
   140025d20:	js     0x140025d64
   140025d22:	lea    rdx,[rbp+0x1f8]
   140025d29:	mov    ecx,DWORD PTR [rdx-0x8]
   140025d2c:	dec    ecx
   140025d2e:	je     0x140025d49
   140025d30:	dec    ecx
   140025d32:	je     0x140025d49
   140025d34:	dec    ecx
   140025d36:	je     0x140025d49
   140025d38:	dec    ecx
   140025d3a:	je     0x140025d49
   140025d3c:	dec    ecx
   140025d3e:	je     0x140025d49
   140025d40:	dec    ecx
   140025d42:	je     0x140025d49
   140025d44:	cmp    ecx,0x2
   140025d47:	jne    0x140025d7c
   140025d49:	mov    QWORD PTR [rdx],r13
   140025d4c:	inc    r8
   140025d4f:	add    r13,0x8
   140025d53:	add    rdx,0x18
   140025d57:	cmp    r8,r9
   140025d5a:	jle    0x140025d29
   140025d5c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140025d60:	jmp    0x140025d64
   140025d62:	xor    edi,edi
   140025d64:	inc    ecx
   140025d66:	mov    DWORD PTR [rsp+0x7c],ecx
   140025d6a:	cmp    ecx,0x2
   140025d6d:	jge    0x140025d92
   140025d6f:	mov    r12,QWORD PTR [rbp-0x38]
   140025d73:	or     r14d,0xffffffff
   140025d77:	jmp    0x140024e42
   140025d7c:	call   0x140009cb4
   140025d81:	mov    DWORD PTR [rax],0x16
   140025d87:	call   0x140008d58
   140025d8c:	or     r14d,0xffffffff
   140025d90:	jmp    0x140025d95
   140025d92:	mov    r14d,r10d
   140025d95:	cmp    BYTE PTR [rbp-0x18],dil
   140025d99:	je     0x140025da6
   140025d9b:	mov    rcx,QWORD PTR [rbp-0x20]
   140025d9f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140025da6:	mov    eax,r14d
   140025da9:	mov    rcx,QWORD PTR [rbp+0xb58]
   140025db0:	xor    rcx,rsp
   140025db3:	call   0x14000c380
   140025db8:	mov    rbx,QWORD PTR [rsp+0xcb0]
   140025dc0:	add    rsp,0xc60
   140025dc7:	pop    r15
   140025dc9:	pop    r14
   140025dcb:	pop    r13
   140025dcd:	pop    r12
   140025dcf:	pop    rdi
   140025dd0:	pop    rsi
   140025dd1:	pop    rbp
   140025dd2:	ret    
   140025dd3:	int3   
   140025dd4:	mov    QWORD PTR [rsp+0x8],rbx
   140025dd9:	mov    QWORD PTR [rsp+0x10],rdi
   140025dde:	mov    QWORD PTR [rsp+0x18],r14
   140025de3:	mov    r10b,BYTE PTR [rcx+0x10]
   140025de7:	mov    ebx,r9d
   140025dea:	mov    edi,edx
   140025dec:	mov    r11,rcx
   140025def:	cmp    r10b,0x70
   140025df3:	je     0x140025edc
   140025df9:	cmp    r8b,0x70
   140025dfd:	je     0x140025edc
   140025e03:	lea    eax,[r10-0x53]
   140025e07:	mov    edx,0x0
   140025e0c:	test   al,0xdf
   140025e0e:	lea    eax,[r8-0x53]
   140025e12:	mov    ecx,edx
   140025e14:	sete   cl
   140025e17:	test   al,0xdf
   140025e19:	mov    eax,edx
   140025e1b:	sete   al
   140025e1e:	test   ecx,ecx
   140025e20:	jne    0x140025eb4
   140025e26:	test   eax,eax
   140025e28:	jne    0x140025ed6
   140025e2e:	lea    eax,[r10-0x58]
   140025e32:	movabs r14,0x120821001
   140025e3c:	cmp    al,0x20
   140025e3e:	ja     0x140025e4a
   140025e40:	movsx  rax,al
   140025e44:	bt     r14,rax
   140025e48:	jb     0x140025e5c
   140025e4a:	lea    eax,[r8-0x58]
   140025e4e:	cmp    al,0x20
   140025e50:	ja     0x140025eaf
   140025e52:	movsx  rax,al
   140025e56:	bt     r14,rax
   140025e5a:	jae    0x140025eaf
   140025e5c:	sub    r10b,0x58
   140025e60:	mov    ecx,0x1
   140025e65:	cmp    r10b,0x20
   140025e69:	ja     0x140025e78
   140025e6b:	movsx  rax,r10b
   140025e6f:	mov    r9d,ecx
   140025e72:	bt     r14,rax
   140025e76:	jb     0x140025e7b
   140025e78:	mov    r9d,edx
   140025e7b:	sub    r8b,0x58
   140025e7f:	cmp    r8b,0x20
   140025e83:	ja     0x140025e8f
   140025e85:	movsx  rax,r8b
   140025e89:	bt     r14,rax
   140025e8d:	jb     0x140025e91
   140025e8f:	mov    ecx,edx
   140025e91:	cmp    r9d,ecx
   140025e94:	je     0x140025e9a
   140025e96:	xor    eax,eax
   140025e98:	jmp    0x140025ee6
   140025e9a:	mov    ecx,DWORD PTR [r11+0x14]
   140025e9e:	mov    eax,ecx
   140025ea0:	xor    eax,ebx
   140025ea2:	bt     eax,0x10
   140025ea6:	jb     0x140025e96
   140025ea8:	xor    ecx,ebx
   140025eaa:	test   cl,0x20
   140025ead:	jne    0x140025e96
   140025eaf:	cmp    DWORD PTR [r11],edi
   140025eb2:	jmp    0x140025ee1
   140025eb4:	cmp    ecx,eax
   140025eb6:	jne    0x140025ed6
   140025eb8:	mov    eax,0x810
   140025ebd:	mov    ecx,edx
   140025ebf:	test   DWORD PTR [r11+0x14],eax
   140025ec3:	setne  cl
   140025ec6:	test   eax,ebx
   140025ec8:	mov    eax,edx
   140025eca:	setne  al
   140025ecd:	cmp    ecx,eax
   140025ecf:	mov    ecx,0x1
   140025ed4:	je     0x140025ed8
   140025ed6:	mov    ecx,edx
   140025ed8:	mov    eax,ecx
   140025eda:	jmp    0x140025ee6
   140025edc:	xor    edx,edx
   140025ede:	cmp    r10b,r8b
   140025ee1:	sete   dl
   140025ee4:	mov    eax,edx
   140025ee6:	mov    rbx,QWORD PTR [rsp+0x8]
   140025eeb:	mov    rdi,QWORD PTR [rsp+0x10]
   140025ef0:	mov    r14,QWORD PTR [rsp+0x18]
   140025ef5:	ret    
   140025ef6:	int3   
   140025ef7:	int3   
   140025ef8:	add    QWORD PTR [rcx],0x8
   140025efc:	mov    rax,QWORD PTR [rcx]
   140025eff:	mov    rax,QWORD PTR [rax-0x8]
   140025f03:	ret    
   140025f04:	rex push rbx
   140025f06:	sub    rsp,0x20
   140025f0a:	test   BYTE PTR [rdx+0x18],0x40
   140025f0e:	mov    rbx,r8
   140025f11:	je     0x140025f1f
   140025f13:	cmp    QWORD PTR [rdx+0x10],0x0
   140025f18:	jne    0x140025f1f
   140025f1a:	inc    DWORD PTR [r8]
   140025f1d:	jmp    0x140025f44
   140025f1f:	dec    DWORD PTR [rdx+0x8]
   140025f22:	js     0x140025f31
   140025f24:	mov    rax,QWORD PTR [rdx]
   140025f27:	mov    BYTE PTR [rax],cl
   140025f29:	inc    QWORD PTR [rdx]
   140025f2c:	movzx  eax,cl
   140025f2f:	jmp    0x140025f39
   140025f31:	movsx  ecx,cl
   140025f34:	call   0x140008e20
   140025f39:	cmp    eax,0xffffffff
   140025f3c:	jne    0x140025f42
   140025f3e:	or     DWORD PTR [rbx],eax
   140025f40:	jmp    0x140025f44
   140025f42:	inc    DWORD PTR [rbx]
   140025f44:	add    rsp,0x20
   140025f48:	pop    rbx
   140025f49:	ret    
   140025f4a:	int3   
   140025f4b:	int3   
   140025f4c:	test   edx,edx
   140025f4e:	jle    0x140025f9c
   140025f50:	mov    QWORD PTR [rsp+0x8],rbx
   140025f55:	mov    QWORD PTR [rsp+0x10],rbp
   140025f5a:	mov    QWORD PTR [rsp+0x18],rsi
   140025f5f:	push   rdi
   140025f60:	sub    rsp,0x20
   140025f64:	mov    rdi,r9
   140025f67:	mov    rsi,r8
   140025f6a:	mov    ebx,edx
   140025f6c:	mov    bpl,cl
   140025f6f:	mov    r8,rdi
   140025f72:	mov    rdx,rsi
   140025f75:	mov    cl,bpl
   140025f78:	dec    ebx
   140025f7a:	call   0x140025f04
   140025f7f:	cmp    DWORD PTR [rdi],0xffffffff
   140025f82:	je     0x140025f88
   140025f84:	test   ebx,ebx
   140025f86:	jg     0x140025f6f
   140025f88:	mov    rbx,QWORD PTR [rsp+0x30]
   140025f8d:	mov    rbp,QWORD PTR [rsp+0x38]
   140025f92:	mov    rsi,QWORD PTR [rsp+0x40]
   140025f97:	add    rsp,0x20
   140025f9b:	pop    rdi
   140025f9c:	ret    
   140025f9d:	int3   
   140025f9e:	int3   
   140025f9f:	int3   
   140025fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140025fa5:	mov    QWORD PTR [rsp+0x10],rbp
   140025faa:	mov    QWORD PTR [rsp+0x18],rsi
   140025faf:	push   rdi
   140025fb0:	push   r14
   140025fb2:	push   r15
   140025fb4:	sub    rsp,0x20
   140025fb8:	test   BYTE PTR [r8+0x18],0x40
   140025fbd:	mov    rbx,QWORD PTR [rsp+0x60]
   140025fc2:	mov    rdi,r9
   140025fc5:	mov    r15d,DWORD PTR [rbx]
   140025fc8:	mov    rbp,r8
   140025fcb:	mov    esi,edx
   140025fcd:	mov    r14,rcx
   140025fd0:	je     0x140025fde
   140025fd2:	cmp    QWORD PTR [r8+0x10],0x0
   140025fd7:	jne    0x140025fde
   140025fd9:	add    DWORD PTR [r9],edx
   140025fdc:	jmp    0x14002601b
   140025fde:	and    DWORD PTR [rbx],0x0
   140025fe1:	test   edx,edx
   140025fe3:	jle    0x140026018
   140025fe5:	mov    cl,BYTE PTR [r14]
   140025fe8:	mov    r8,rdi
   140025feb:	mov    rdx,rbp
   140025fee:	dec    esi
   140025ff0:	call   0x140025f04
   140025ff5:	inc    r14
   140025ff8:	cmp    DWORD PTR [rdi],0xffffffff
   140025ffb:	jne    0x14002600f
   140025ffd:	cmp    DWORD PTR [rbx],0x2a
   140026000:	jne    0x140026013
   140026002:	mov    r8,rdi
   140026005:	mov    rdx,rbp
   140026008:	mov    cl,0x3f
   14002600a:	call   0x140025f04
   14002600f:	test   esi,esi
   140026011:	jg     0x140025fe5
   140026013:	cmp    DWORD PTR [rbx],0x0
   140026016:	jne    0x14002601b
   140026018:	mov    DWORD PTR [rbx],r15d
   14002601b:	mov    rbx,QWORD PTR [rsp+0x40]
   140026020:	mov    rbp,QWORD PTR [rsp+0x48]
   140026025:	mov    rsi,QWORD PTR [rsp+0x50]
   14002602a:	add    rsp,0x20
   14002602e:	pop    r15
   140026030:	pop    r14
   140026032:	pop    rdi
   140026033:	ret    
   140026034:	sub    rsp,0x28
   140026038:	call   0x14000a3ec
   14002603d:	mov    rcx,QWORD PTR [rax+0xc0]
   140026044:	cmp    rcx,QWORD PTR [rip+0x17055]        # 0x14003d0a0
   14002604b:	je     0x140026063
   14002604d:	mov    eax,DWORD PTR [rax+0xc8]
   140026053:	test   DWORD PTR [rip+0x171bf],eax        # 0x14003d218
   140026059:	jne    0x140026063
   14002605b:	call   0x140011d10
   140026060:	mov    rcx,rax
   140026063:	mov    eax,DWORD PTR [rcx+0x4]
   140026066:	add    rsp,0x28
   14002606a:	ret    
   14002606b:	int3   
   14002606c:	sub    rsp,0x28
   140026070:	call   0x14000a3ec
   140026075:	mov    rcx,QWORD PTR [rax+0xc0]
   14002607c:	cmp    rcx,QWORD PTR [rip+0x1701d]        # 0x14003d0a0
   140026083:	je     0x14002609b
   140026085:	mov    eax,DWORD PTR [rax+0xc8]
   14002608b:	test   DWORD PTR [rip+0x17187],eax        # 0x14003d218
   140026091:	jne    0x14002609b
   140026093:	call   0x140011d10
   140026098:	mov    rcx,rax
   14002609b:	mov    eax,DWORD PTR [rcx+0x8]
   14002609e:	add    rsp,0x28
   1400260a2:	ret    
   1400260a3:	int3   
   1400260a4:	sub    rsp,0x28
   1400260a8:	call   0x14000a3ec
   1400260ad:	mov    rcx,QWORD PTR [rax+0xc0]
   1400260b4:	cmp    rcx,QWORD PTR [rip+0x16fe5]        # 0x14003d0a0
   1400260bb:	je     0x1400260d3
   1400260bd:	mov    eax,DWORD PTR [rax+0xc8]
   1400260c3:	test   DWORD PTR [rip+0x1714f],eax        # 0x14003d218
   1400260c9:	jne    0x1400260d3
   1400260cb:	call   0x140011d10
   1400260d0:	mov    rcx,rax
   1400260d3:	lea    rax,[rcx+0x128]
   1400260da:	add    rsp,0x28
   1400260de:	ret    
   1400260df:	int3   
   1400260e0:	sub    rsp,0x28
   1400260e4:	call   0x14000a3ec
   1400260e9:	mov    rcx,QWORD PTR [rax+0xc0]
   1400260f0:	cmp    rcx,QWORD PTR [rip+0x16fa9]        # 0x14003d0a0
   1400260f7:	je     0x14002610f
   1400260f9:	mov    eax,DWORD PTR [rax+0xc8]
   1400260ff:	test   DWORD PTR [rip+0x17113],eax        # 0x14003d218
   140026105:	jne    0x14002610f
   140026107:	call   0x140011d10
   14002610c:	mov    rcx,rax
   14002610f:	mov    eax,DWORD PTR [rcx+0xd4]
   140026115:	add    rsp,0x28
   140026119:	ret    
   14002611a:	int3   
   14002611b:	int3   
   14002611c:	test   rcx,rcx
   14002611f:	je     0x1400260e0
   140026125:	mov    rax,QWORD PTR [rcx]
   140026128:	mov    eax,DWORD PTR [rax+0xd4]
   14002612e:	ret    
   14002612f:	int3   
   140026130:	mov    r11,rsp
   140026133:	mov    QWORD PTR [r11+0x10],rbx
   140026137:	mov    QWORD PTR [r11+0x18],rbp
   14002613b:	mov    QWORD PTR [r11+0x20],rsi
   14002613f:	push   rdi
   140026140:	push   r12
   140026142:	push   r13
   140026144:	push   r14
   140026146:	push   r15
   140026148:	sub    rsp,0x90
   14002614f:	mov    rax,QWORD PTR [rip+0x1607a]        # 0x14003c1d0
   140026156:	xor    rax,rsp
   140026159:	mov    QWORD PTR [rsp+0x88],rax
   140026161:	mov    r8,QWORD PTR [rcx+0x138]
   140026168:	xor    ebx,ebx
   14002616a:	mov    rdi,rcx
   14002616d:	mov    QWORD PTR [rsp+0x58],rbx
   140026172:	mov    r15d,ebx
   140026175:	mov    r12d,ebx
   140026178:	mov    r13d,ebx
   14002617b:	mov    ebp,ebx
   14002617d:	mov    QWORD PTR [r11-0x58],rcx
   140026181:	mov    QWORD PTR [r11-0x50],rbx
   140026185:	test   r8,r8
   140026188:	je     0x1400264ce
   14002618e:	lea    r14,[rcx+0x4]
   140026192:	lea    esi,[rbx+0x1]
   140026195:	cmp    DWORD PTR [r14],ebx
   140026198:	jne    0x1400261b8
   14002619a:	lea    rcx,[r11-0x58]
   14002619e:	xor    edx,edx
   1400261a0:	mov    r9d,0x1004
   1400261a6:	mov    QWORD PTR [rsp+0x20],r14
   1400261ab:	call   0x1400079f0
   1400261b0:	test   eax,eax
   1400261b2:	jne    0x14002649e
   1400261b8:	mov    ecx,0x4
   1400261bd:	call   0x140008684
   1400261c2:	mov    ebp,0x180
   1400261c7:	mov    edx,0x2
   1400261cc:	mov    ecx,ebp
   1400261ce:	mov    QWORD PTR [rsp+0x58],rax
   1400261d3:	call   0x140008604
   1400261d8:	mov    rdx,rsi
   1400261db:	mov    ecx,ebp
   1400261dd:	mov    r15,rax
   1400261e0:	call   0x140008604
   1400261e5:	mov    rdx,rsi
   1400261e8:	mov    ecx,ebp
   1400261ea:	mov    r12,rax
   1400261ed:	call   0x140008604
   1400261f2:	lea    ecx,[rbp-0x7f]
   1400261f5:	mov    rdx,rsi
   1400261f8:	mov    r13,rax
   1400261fb:	call   0x140008604
   140026200:	mov    rbp,rax
   140026203:	mov    rax,QWORD PTR [rsp+0x58]
   140026208:	test   rax,rax
   14002620b:	je     0x14002649e
   140026211:	test   r15,r15
   140026214:	je     0x14002649e
   14002621a:	test   rbp,rbp
   14002621d:	je     0x14002649e
   140026223:	test   r12,r12
   140026226:	je     0x14002649e
   14002622c:	test   r13,r13
   14002622f:	je     0x14002649e
   140026235:	mov    DWORD PTR [rax],ebx
   140026237:	mov    rcx,rbp
   14002623a:	mov    eax,ebx
   14002623c:	mov    BYTE PTR [rcx],al
   14002623e:	add    eax,esi
   140026240:	add    rcx,rsi
   140026243:	cmp    eax,0x100
   140026248:	jl     0x14002623c
   14002624a:	mov    ecx,DWORD PTR [r14]
   14002624d:	lea    rdx,[rsp+0x70]
   140026252:	call   QWORD PTR [rip+0x5e00]        # 0x14002c058
   140026258:	test   eax,eax
   14002625a:	je     0x14002649e
   140026260:	cmp    DWORD PTR [rsp+0x70],0x5
   140026265:	ja     0x14002649e
   14002626b:	movzx  eax,WORD PTR [rsp+0x70]
   140026270:	mov    rdx,QWORD PTR [rdi+0x138]
   140026277:	mov    DWORD PTR [rsp+0x40],ebx
   14002627b:	mov    DWORD PTR [rsp+0x50],eax
   14002627f:	mov    eax,DWORD PTR [r14]
   140026282:	lea    rcx,[r12+0x81]
   14002628a:	mov    DWORD PTR [rsp+0x38],eax
   14002628e:	mov    eax,0xff
   140026293:	lea    r9,[rbp+0x1]
   140026297:	mov    DWORD PTR [rsp+0x30],eax
   14002629b:	mov    QWORD PTR [rsp+0x28],rcx
   1400262a0:	lea    r8d,[rax+0x1]
   1400262a4:	xor    ecx,ecx
   1400262a6:	mov    DWORD PTR [rsp+0x20],eax
   1400262aa:	call   0x14001cb54
   1400262af:	test   eax,eax
   1400262b1:	je     0x14002649e
   1400262b7:	mov    eax,DWORD PTR [r14]
   1400262ba:	mov    rdx,QWORD PTR [rdi+0x138]
   1400262c1:	mov    DWORD PTR [rsp+0x40],ebx
   1400262c5:	mov    DWORD PTR [rsp+0x38],eax
   1400262c9:	mov    eax,0xff
   1400262ce:	lea    rcx,[r13+0x81]
   1400262d5:	mov    DWORD PTR [rsp+0x30],eax
   1400262d9:	mov    QWORD PTR [rsp+0x28],rcx
   1400262de:	lea    r9,[rbp+0x1]
   1400262e2:	xor    ecx,ecx
   1400262e4:	mov    r8d,0x200
   1400262ea:	mov    DWORD PTR [rsp+0x20],eax
   1400262ee:	call   0x14001cb54
   1400262f3:	test   eax,eax
   1400262f5:	je     0x14002649e
   1400262fb:	cmp    DWORD PTR [rsp+0x50],esi
   1400262ff:	jle    0x14002632f
   140026301:	cmp    BYTE PTR [rsp+0x76],bl
   140026305:	je     0x14002632f
   140026307:	lea    rcx,[rsp+0x77]
   14002630c:	cmp    BYTE PTR [rcx],bl
   14002630e:	je     0x14002632f
   140026310:	movzx  edx,BYTE PTR [rcx-0x1]
   140026314:	jmp    0x14002631f
   140026316:	movsxd rax,edx
   140026319:	add    edx,esi
   14002631b:	mov    BYTE PTR [rax+rbp*1],0x20
   14002631f:	movzx  eax,BYTE PTR [rcx]
   140026322:	cmp    edx,eax
   140026324:	jle    0x140026316
   140026326:	add    rcx,0x2
   14002632a:	cmp    BYTE PTR [rcx-0x1],bl
   14002632d:	jne    0x14002630c
   14002632f:	mov    eax,DWORD PTR [r14]
   140026332:	lea    rcx,[r15+0x100]
   140026339:	mov    DWORD PTR [rsp+0x30],ebx
   14002633d:	mov    DWORD PTR [rsp+0x28],eax
   140026341:	mov    QWORD PTR [rsp+0x20],rcx
   140026346:	mov    r9d,0x100
   14002634c:	xor    ecx,ecx
   14002634e:	mov    r8,rbp
   140026351:	mov    edx,esi
   140026353:	call   0x14001cd64
   140026358:	test   eax,eax
   14002635a:	je     0x14002649e
   140026360:	lea    r14,[r15+0xfe]
   140026367:	mov    WORD PTR [r14],bx
   14002636b:	mov    BYTE PTR [r12+0x7f],bl
   140026370:	mov    BYTE PTR [r13+0x7f],bl
   140026374:	mov    BYTE PTR [r12+0x80],bl
   14002637c:	mov    BYTE PTR [r13+0x80],bl
   140026383:	cmp    DWORD PTR [rsp+0x50],esi
   140026387:	jle    0x1400263c2
   140026389:	cmp    BYTE PTR [rsp+0x76],bl
   14002638d:	je     0x1400263c2
   14002638f:	lea    rcx,[rsp+0x77]
   140026394:	cmp    BYTE PTR [rcx],bl
   140026396:	je     0x1400263c2
   140026398:	movzx  edx,BYTE PTR [rcx-0x1]
   14002639c:	jmp    0x1400263b2
   14002639e:	movsxd rax,edx
   1400263a1:	mov    r8d,0x8000
   1400263a7:	add    edx,esi
   1400263a9:	mov    WORD PTR [r15+rax*2+0x100],r8w
   1400263b2:	movzx  eax,BYTE PTR [rcx]
   1400263b5:	cmp    edx,eax
   1400263b7:	jle    0x14002639e
   1400263b9:	add    rcx,0x2
   1400263bd:	cmp    BYTE PTR [rcx-0x1],bl
   1400263c0:	jne    0x140026394
   1400263c2:	lea    rdx,[r15+0x200]
   1400263c9:	mov    r8d,0xfe
   1400263cf:	mov    rcx,r15
   1400263d2:	call   0x1400059f0
   1400263d7:	lea    rdx,[r12+0x100]
   1400263df:	mov    r8d,0x7f
   1400263e5:	mov    rcx,r12
   1400263e8:	call   0x1400059f0
   1400263ed:	lea    rdx,[r13+0x100]
   1400263f4:	mov    r8d,0x7f
   1400263fa:	mov    rcx,r13
   1400263fd:	call   0x1400059f0
   140026402:	mov    rcx,QWORD PTR [rdi+0xf8]
   140026409:	test   rcx,rcx
   14002640c:	je     0x140026452
   14002640e:	lock dec DWORD PTR [rcx]
   140026411:	jne    0x140026452
   140026413:	mov    rcx,QWORD PTR [rdi+0x100]
   14002641a:	sub    rcx,0xfe
   140026421:	call   0x140007dc0
   140026426:	mov    rcx,QWORD PTR [rdi+0x110]
   14002642d:	add    rcx,0xffffffffffffff80
   140026431:	call   0x140007dc0
   140026436:	mov    rcx,QWORD PTR [rdi+0x118]
   14002643d:	add    rcx,0xffffffffffffff80
   140026441:	call   0x140007dc0
   140026446:	mov    rcx,QWORD PTR [rdi+0xf8]
   14002644d:	call   0x140007dc0
   140026452:	mov    rax,QWORD PTR [rsp+0x58]
   140026457:	mov    DWORD PTR [rax],esi
   140026459:	mov    QWORD PTR [rdi+0xf8],rax
   140026460:	lea    rax,[r15+0x100]
   140026467:	mov    QWORD PTR [rdi+0x108],rax
   14002646e:	lea    rax,[r12+0x80]
   140026476:	mov    QWORD PTR [rdi+0x100],r14
   14002647d:	mov    QWORD PTR [rdi+0x110],rax
   140026484:	lea    rax,[r13+0x80]
   14002648b:	mov    QWORD PTR [rdi+0x118],rax
   140026492:	mov    eax,DWORD PTR [rsp+0x50]
   140026496:	mov    DWORD PTR [rdi+0xd4],eax
   14002649c:	jmp    0x1400264c2
   14002649e:	mov    rcx,QWORD PTR [rsp+0x58]
   1400264a3:	call   0x140007dc0
   1400264a8:	mov    rcx,r15
   1400264ab:	call   0x140007dc0
   1400264b0:	mov    rcx,r12
   1400264b3:	call   0x140007dc0
   1400264b8:	mov    rcx,r13
   1400264bb:	call   0x140007dc0
   1400264c0:	mov    ebx,esi
   1400264c2:	mov    rcx,rbp
   1400264c5:	call   0x140007dc0
   1400264ca:	mov    eax,ebx
   1400264cc:	jmp    0x140026522
   1400264ce:	mov    rax,QWORD PTR [rcx+0xf8]
   1400264d5:	test   rax,rax
   1400264d8:	je     0x1400264dd
   1400264da:	lock dec DWORD PTR [rax]
   1400264dd:	lea    rax,[rip+0xdddc]        # 0x1400342c0
   1400264e4:	mov    esi,0x1
   1400264e9:	mov    QWORD PTR [rcx+0xf8],rbx
   1400264f0:	mov    QWORD PTR [rcx+0x108],rax
   1400264f7:	lea    rax,[rip+0xe252]        # 0x140034750
   1400264fe:	mov    QWORD PTR [rcx+0x100],rbx
   140026505:	mov    QWORD PTR [rcx+0x110],rax
   14002650c:	lea    rax,[rip+0xe3bd]        # 0x1400348d0
   140026513:	mov    DWORD PTR [rcx+0xd4],esi
   140026519:	mov    QWORD PTR [rcx+0x118],rax
   140026520:	xor    eax,eax
   140026522:	mov    rcx,QWORD PTR [rsp+0x88]
   14002652a:	xor    rcx,rsp
   14002652d:	call   0x14000c380
   140026532:	lea    r11,[rsp+0x90]
   14002653a:	mov    rbx,QWORD PTR [r11+0x38]
   14002653e:	mov    rbp,QWORD PTR [r11+0x40]
   140026542:	mov    rsi,QWORD PTR [r11+0x48]
   140026546:	mov    rsp,r11
   140026549:	pop    r15
   14002654b:	pop    r14
   14002654d:	pop    r13
   14002654f:	pop    r12
   140026551:	pop    rdi
   140026552:	ret    
   140026553:	int3   
   140026554:	mov    rax,rsp
   140026557:	mov    QWORD PTR [rax+0x8],rbx
   14002655b:	mov    QWORD PTR [rax+0x18],rbp
   14002655f:	mov    QWORD PTR [rax+0x20],rsi
   140026563:	push   rdi
   140026564:	push   r12
   140026566:	push   r13
   140026568:	push   r14
   14002656a:	push   r15
   14002656c:	sub    rsp,0x40
   140026570:	mov    r12,rdx
   140026573:	mov    rdx,rcx
   140026576:	lea    rcx,[rax-0x48]
   14002657a:	mov    r14d,r9d
   14002657d:	mov    r15,r8
   140026580:	call   0x140008fac
   140026585:	test   r15,r15
   140026588:	je     0x14002658d
   14002658a:	mov    QWORD PTR [r15],r12
   14002658d:	test   r12,r12
   140026590:	je     0x1400265a0
   140026592:	test   r14d,r14d
   140026595:	je     0x1400265b7
   140026597:	lea    eax,[r14-0x2]
   14002659b:	cmp    eax,0x22
   14002659e:	jbe    0x1400265b7
   1400265a0:	call   0x140009cb4
   1400265a5:	mov    DWORD PTR [rax],0x16
   1400265ab:	call   0x140008d58
   1400265b0:	xor    edi,edi
   1400265b2:	jmp    0x14002676d
   1400265b7:	mov    sil,BYTE PTR [r12]
   1400265bb:	mov    r8,QWORD PTR [rsp+0x20]
   1400265c0:	xor    edi,edi
   1400265c2:	lea    rbx,[r12+0x1]
   1400265c7:	cmp    DWORD PTR [r8+0xd4],0x1
   1400265cf:	jle    0x1400265eb
   1400265d1:	lea    r8,[rsp+0x20]
   1400265d6:	movzx  ecx,sil
   1400265da:	mov    edx,0x8
   1400265df:	call   0x14001f9b8
   1400265e4:	mov    r8,QWORD PTR [rsp+0x20]
   1400265e9:	jmp    0x1400265fd
   1400265eb:	mov    rax,QWORD PTR [r8+0x108]
   1400265f2:	movzx  ecx,sil
   1400265f6:	movzx  eax,WORD PTR [rax+rcx*2]
   1400265fa:	and    eax,0x8
   1400265fd:	test   eax,eax
   1400265ff:	je     0x140026609
   140026601:	mov    sil,BYTE PTR [rbx]
   140026604:	inc    rbx
   140026607:	jmp    0x1400265c7
   140026609:	mov    ebp,DWORD PTR [rsp+0x90]
   140026610:	cmp    sil,0x2d
   140026614:	jne    0x14002661b
   140026616:	or     ebp,0x2
   140026619:	jmp    0x140026621
   14002661b:	cmp    sil,0x2b
   14002661f:	jne    0x140026627
   140026621:	mov    sil,BYTE PTR [rbx]
   140026624:	inc    rbx
   140026627:	test   r14d,r14d
   14002662a:	jne    0x140026650
   14002662c:	cmp    sil,0x30
   140026630:	je     0x14002663a
   140026632:	mov    r14d,0xa
   140026638:	jmp    0x14002666c
   14002663a:	mov    al,BYTE PTR [rbx]
   14002663c:	sub    al,0x58
   14002663e:	test   al,0xdf
   140026640:	je     0x14002664a
   140026642:	mov    r14d,0x8
   140026648:	jmp    0x14002666c
   14002664a:	mov    r14d,0x10
   140026650:	cmp    r14d,0x10
   140026654:	jne    0x14002666c
   140026656:	cmp    sil,0x30
   14002665a:	jne    0x14002666c
   14002665c:	mov    al,BYTE PTR [rbx]
   14002665e:	sub    al,0x58
   140026660:	test   al,0xdf
   140026662:	jne    0x14002666c
   140026664:	mov    sil,BYTE PTR [rbx+0x1]
   140026668:	add    rbx,0x2
   14002666c:	mov    r13,QWORD PTR [r8+0x108]
   140026673:	movsxd r10,r14d
   140026676:	xor    edx,edx
   140026678:	or     rax,0xffffffffffffffff
   14002667c:	div    r10
   14002667f:	mov    r11,rdx
   140026682:	mov    r9,rax
   140026685:	movzx  ecx,sil
   140026689:	movzx  r8d,WORD PTR [r13+rcx*2+0x0]
   14002668f:	mov    ecx,r8d
   140026692:	and    ecx,0x4
   140026695:	je     0x1400266a0
   140026697:	movsx  edx,sil
   14002669b:	sub    edx,0x30
   14002669e:	jmp    0x1400266ba
   1400266a0:	and    r8d,0x103
   1400266a7:	je     0x1400266d8
   1400266a9:	lea    eax,[rsi-0x61]
   1400266ac:	movsx  edx,sil
   1400266b0:	cmp    al,0x19
   1400266b2:	ja     0x1400266b7
   1400266b4:	sub    edx,0x20
   1400266b7:	add    edx,0xffffffc9
   1400266ba:	cmp    edx,r14d
   1400266bd:	jae    0x1400266d8
   1400266bf:	or     ebp,0x8
   1400266c2:	cmp    rdi,r9
   1400266c5:	jb     0x1400266ec
   1400266c7:	jne    0x1400266d0
   1400266c9:	mov    eax,edx
   1400266cb:	cmp    rax,r11
   1400266ce:	jbe    0x1400266ec
   1400266d0:	or     ebp,0x4
   1400266d3:	test   r15,r15
   1400266d6:	jne    0x1400266f8
   1400266d8:	dec    rbx
   1400266db:	test   bpl,0x8
   1400266df:	jne    0x140026700
   1400266e1:	test   r15,r15
   1400266e4:	cmovne rbx,r12
   1400266e8:	xor    edi,edi
   1400266ea:	jmp    0x14002675c
   1400266ec:	mov    rcx,r10
   1400266ef:	imul   rcx,rdi
   1400266f3:	mov    edi,edx
   1400266f5:	add    rdi,rcx
   1400266f8:	mov    sil,BYTE PTR [rbx]
   1400266fb:	inc    rbx
   1400266fe:	jmp    0x140026685
   140026700:	movabs rsi,0x7fffffffffffffff
   14002670a:	test   bpl,0x4
   14002670e:	jne    0x140026735
   140026710:	test   bpl,0x1
   140026714:	jne    0x14002675c
   140026716:	mov    eax,ebp
   140026718:	and    eax,0x2
   14002671b:	je     0x14002672c
   14002671d:	movabs rcx,0x8000000000000000
   140026727:	cmp    rdi,rcx
   14002672a:	ja     0x140026735
   14002672c:	test   eax,eax
   14002672e:	jne    0x14002675c
   140026730:	cmp    rdi,rsi
   140026733:	jbe    0x14002675c
   140026735:	call   0x140009cb4
   14002673a:	mov    DWORD PTR [rax],0x22
   140026740:	test   bpl,0x1
   140026744:	je     0x14002674c
   140026746:	or     rdi,0xffffffffffffffff
   14002674a:	jmp    0x14002675c
   14002674c:	mov    al,bpl
   14002674f:	and    al,0x2
   140026751:	neg    al
   140026753:	sbb    rdi,rdi
   140026756:	neg    rdi
   140026759:	add    rdi,rsi
   14002675c:	test   r15,r15
   14002675f:	je     0x140026764
   140026761:	mov    QWORD PTR [r15],rbx
   140026764:	test   bpl,0x2
   140026768:	je     0x14002676d
   14002676a:	neg    rdi
   14002676d:	cmp    BYTE PTR [rsp+0x38],0x0
   140026772:	je     0x140026780
   140026774:	mov    rcx,QWORD PTR [rsp+0x30]
   140026779:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140026780:	lea    r11,[rsp+0x40]
   140026785:	mov    rax,rdi
   140026788:	mov    rbx,QWORD PTR [r11+0x30]
   14002678c:	mov    rbp,QWORD PTR [r11+0x40]
   140026790:	mov    rsi,QWORD PTR [r11+0x48]
   140026794:	mov    rsp,r11
   140026797:	pop    r15
   140026799:	pop    r14
   14002679b:	pop    r13
   14002679d:	pop    r12
   14002679f:	pop    rdi
   1400267a0:	ret    
   1400267a1:	int3   
   1400267a2:	int3   
   1400267a3:	int3   
   1400267a4:	sub    rsp,0x28
   1400267a8:	mov    r9,rdx
   1400267ab:	mov    rdx,rcx
   1400267ae:	lea    rcx,[rsp+0x48]
   1400267b3:	call   0x14001bc60
   1400267b8:	movss  xmm0,DWORD PTR [rsp+0x48]
   1400267be:	add    rsp,0x28
   1400267c2:	ret    
   1400267c3:	int3   
   1400267c4:	sub    rsp,0x38
   1400267c8:	xor    eax,eax
   1400267ca:	mov    r9d,r8d
   1400267cd:	mov    r8,rdx
   1400267d0:	cmp    DWORD PTR [rip+0x187b2],eax        # 0x14003ef88
   1400267d6:	mov    DWORD PTR [rsp+0x20],eax
   1400267da:	mov    rdx,rcx
   1400267dd:	jne    0x1400267e8
   1400267df:	lea    rcx,[rip+0x16a22]        # 0x14003d208
   1400267e6:	jmp    0x1400267ea
   1400267e8:	xor    ecx,ecx
   1400267ea:	call   0x140026554
   1400267ef:	add    rsp,0x38
   1400267f3:	ret    
   1400267f4:	sub    rsp,0x38
   1400267f8:	and    DWORD PTR [rsp+0x20],0x0
   1400267fd:	mov    rax,r9
   140026800:	mov    r9d,r8d
   140026803:	mov    r8,rdx
   140026806:	mov    rdx,rcx
   140026809:	mov    rcx,rax
   14002680c:	call   0x140026554
   140026811:	add    rsp,0x38
   140026815:	ret    
   140026816:	int3   
   140026817:	int3   
   140026818:	sub    rsp,0x38
   14002681c:	and    DWORD PTR [rsp+0x20],0x0
   140026821:	mov    rax,r9
   140026824:	mov    r9d,r8d
   140026827:	mov    r8,rdx
   14002682a:	mov    rdx,rcx
   14002682d:	mov    rcx,rax
   140026830:	call   0x140026554
   140026835:	add    rsp,0x38
   140026839:	ret    
   14002683a:	int3   
   14002683b:	int3   
   14002683c:	jmp    0x14002872c
   140026841:	int3   
   140026842:	int3   
   140026843:	int3   
   140026844:	sub    rsp,0x38
   140026848:	and    DWORD PTR [rsp+0x20],0x0
   14002684d:	mov    rax,r9
   140026850:	mov    r9d,r8d
   140026853:	mov    r8,rdx
   140026856:	mov    rdx,rcx
   140026859:	mov    rcx,rax
   14002685c:	call   0x140026554
   140026861:	add    rsp,0x38
   140026865:	ret    
   140026866:	int3   
   140026867:	int3   
   140026868:	sub    rsp,0x38
   14002686c:	cmp    DWORD PTR [rip+0x18715],0x0        # 0x14003ef88
   140026873:	mov    r9d,r8d
   140026876:	mov    r8,rdx
   140026879:	mov    rdx,rcx
   14002687c:	mov    DWORD PTR [rsp+0x20],0x1
   140026884:	jne    0x14002688f
   140026886:	lea    rcx,[rip+0x1697b]        # 0x14003d208
   14002688d:	jmp    0x140026891
   14002688f:	xor    ecx,ecx
   140026891:	call   0x140026554
   140026896:	add    rsp,0x38
   14002689a:	ret    
   14002689b:	int3   
   14002689c:	sub    rsp,0x38
   1400268a0:	mov    rax,r9
   1400268a3:	mov    r9d,r8d
   1400268a6:	mov    r8,rdx
   1400268a9:	mov    rdx,rcx
   1400268ac:	mov    rcx,rax
   1400268af:	mov    DWORD PTR [rsp+0x20],0x1
   1400268b7:	call   0x140026554
   1400268bc:	add    rsp,0x38
   1400268c0:	ret    
   1400268c1:	int3   
   1400268c2:	int3   
   1400268c3:	int3   
   1400268c4:	sub    rsp,0x38
   1400268c8:	mov    rax,r9
   1400268cb:	mov    r9d,r8d
   1400268ce:	mov    r8,rdx
   1400268d1:	mov    rdx,rcx
   1400268d4:	mov    rcx,rax
   1400268d7:	mov    DWORD PTR [rsp+0x20],0x1
   1400268df:	call   0x140026554
   1400268e4:	add    rsp,0x38
   1400268e8:	ret    
   1400268e9:	int3   
   1400268ea:	int3   
   1400268eb:	int3   
   1400268ec:	sub    rsp,0x38
   1400268f0:	mov    rax,r9
   1400268f3:	mov    r9d,r8d
   1400268f6:	mov    r8,rdx
   1400268f9:	mov    rdx,rcx
   1400268fc:	mov    rcx,rax
   1400268ff:	mov    DWORD PTR [rsp+0x20],0x1
   140026907:	call   0x140026554
   14002690c:	add    rsp,0x38
   140026910:	ret    
   140026911:	int3   
   140026912:	int3   
   140026913:	int3   
   140026914:	sub    rsp,0x28
   140026918:	mov    r9,rdx
   14002691b:	mov    rdx,rcx
   14002691e:	lea    rcx,[rsp+0x40]
   140026923:	xor    r8d,r8d
   140026926:	call   0x14001bc60
   14002692b:	movss  xmm0,DWORD PTR [rsp+0x40]
   140026931:	add    rsp,0x28
   140026935:	ret    
   140026936:	int3   
   140026937:	int3   
   140026938:	jmp    0x1400267c4
   14002693d:	int3   
   14002693e:	int3   
   14002693f:	int3   
   140026940:	jmp    0x140028880
   140026945:	int3   
   140026946:	int3   
   140026947:	int3   
   140026948:	jmp    0x1400267c4
   14002694d:	int3   
   14002694e:	int3   
   14002694f:	int3   
   140026950:	jmp    0x140026868
   140026955:	int3   
   140026956:	int3   
   140026957:	int3   
   140026958:	jmp    0x140026868
   14002695d:	int3   
   14002695e:	int3   
   14002695f:	int3   
   140026960:	mov    QWORD PTR [rsp+0x8],rbx
   140026965:	mov    QWORD PTR [rsp+0x18],rbp
   14002696a:	push   rsi
   14002696b:	push   rdi
   14002696c:	push   r12
   14002696e:	push   r14
   140026970:	push   r15
   140026972:	sub    rsp,0x40
   140026976:	mov    r12,rdx
   140026979:	mov    rdx,rcx
   14002697c:	lea    rcx,[rsp+0x20]
   140026981:	mov    r14d,r9d
   140026984:	mov    r15,r8
   140026987:	call   0x140008fac
   14002698c:	test   r15,r15
   14002698f:	je     0x140026994
   140026991:	mov    QWORD PTR [r15],r12
   140026994:	test   r12,r12
   140026997:	je     0x1400269a7
   140026999:	test   r14d,r14d
   14002699c:	je     0x1400269bc
   14002699e:	lea    eax,[r14-0x2]
   1400269a2:	cmp    eax,0x22
   1400269a5:	jbe    0x1400269bc
   1400269a7:	call   0x140009cb4
   1400269ac:	mov    DWORD PTR [rax],0x16
   1400269b2:	call   0x140008d58
   1400269b7:	jmp    0x140026a42
   1400269bc:	mov    sil,BYTE PTR [r12]
   1400269c0:	mov    r8,QWORD PTR [rsp+0x20]
   1400269c5:	xor    edi,edi
   1400269c7:	lea    rbx,[r12+0x1]
   1400269cc:	cmp    DWORD PTR [r8+0xd4],0x1
   1400269d4:	jle    0x1400269f0
   1400269d6:	lea    r8,[rsp+0x20]
   1400269db:	movzx  ecx,sil
   1400269df:	mov    edx,0x8
   1400269e4:	call   0x14001f9b8
   1400269e9:	mov    r8,QWORD PTR [rsp+0x20]
   1400269ee:	jmp    0x140026a02
   1400269f0:	mov    rax,QWORD PTR [r8+0x108]
   1400269f7:	movzx  ecx,sil
   1400269fb:	movzx  eax,WORD PTR [rax+rcx*2]
   1400269ff:	and    eax,0x8
   140026a02:	test   eax,eax
   140026a04:	je     0x140026a0e
   140026a06:	mov    sil,BYTE PTR [rbx]
   140026a09:	inc    rbx
   140026a0c:	jmp    0x1400269cc
   140026a0e:	mov    ebp,DWORD PTR [rsp+0x90]
   140026a15:	cmp    sil,0x2d
   140026a19:	jne    0x140026a20
   140026a1b:	or     ebp,0x2
   140026a1e:	jmp    0x140026a26
   140026a20:	cmp    sil,0x2b
   140026a24:	jne    0x140026a2c
   140026a26:	mov    sil,BYTE PTR [rbx]
   140026a29:	inc    rbx
   140026a2c:	test   r14d,r14d
   140026a2f:	je     0x140026a4e
   140026a31:	lea    eax,[r14-0x2]
   140026a35:	cmp    eax,0x22
   140026a38:	jbe    0x140026a49
   140026a3a:	test   r15,r15
   140026a3d:	je     0x140026a42
   140026a3f:	mov    QWORD PTR [r15],r12
   140026a42:	xor    edi,edi
   140026a44:	jmp    0x140026b6e
   140026a49:	test   r14d,r14d
   140026a4c:	jne    0x140026a74
   140026a4e:	cmp    sil,0x30
   140026a52:	je     0x140026a5c
   140026a54:	mov    r14d,0xa
   140026a5a:	jmp    0x140026a90
   140026a5c:	mov    al,BYTE PTR [rbx]
   140026a5e:	sub    al,0x58
   140026a60:	test   al,0xdf
   140026a62:	je     0x140026a6c
   140026a64:	mov    r14d,0x8
   140026a6a:	jmp    0x140026a90
   140026a6c:	mov    r14d,0x10
   140026a72:	jmp    0x140026a80
   140026a74:	cmp    r14d,0x10
   140026a78:	jne    0x140026a90
   140026a7a:	cmp    sil,0x30
   140026a7e:	jne    0x140026a90
   140026a80:	mov    al,BYTE PTR [rbx]
   140026a82:	sub    al,0x58
   140026a84:	test   al,0xdf
   140026a86:	jne    0x140026a90
   140026a88:	mov    sil,BYTE PTR [rbx+0x1]
   140026a8c:	add    rbx,0x2
   140026a90:	mov    r10,QWORD PTR [r8+0x108]
   140026a97:	xor    edx,edx
   140026a99:	or     eax,0xffffffff
   140026a9c:	div    r14d
   140026a9f:	mov    r9d,eax
   140026aa2:	movzx  ecx,sil
   140026aa6:	movzx  r8d,WORD PTR [r10+rcx*2]
   140026aab:	mov    ecx,r8d
   140026aae:	and    ecx,0x4
   140026ab1:	je     0x140026abc
   140026ab3:	movsx  ecx,sil
   140026ab7:	sub    ecx,0x30
   140026aba:	jmp    0x140026ad6
   140026abc:	and    r8d,0x103
   140026ac3:	je     0x140026af1
   140026ac5:	lea    eax,[rsi-0x61]
   140026ac8:	movsx  ecx,sil
   140026acc:	cmp    al,0x19
   140026ace:	ja     0x140026ad3
   140026ad0:	sub    ecx,0x20
   140026ad3:	add    ecx,0xffffffc9
   140026ad6:	cmp    ecx,r14d
   140026ad9:	jae    0x140026af1
   140026adb:	or     ebp,0x8
   140026ade:	cmp    edi,r9d
   140026ae1:	jb     0x140026b05
   140026ae3:	jne    0x140026ae9
   140026ae5:	cmp    ecx,edx
   140026ae7:	jbe    0x140026b05
   140026ae9:	or     ebp,0x4
   140026aec:	test   r15,r15
   140026aef:	jne    0x140026b0b
   140026af1:	dec    rbx
   140026af4:	test   bpl,0x8
   140026af8:	jne    0x140026b13
   140026afa:	test   r15,r15
   140026afd:	cmovne rbx,r12
   140026b01:	xor    edi,edi
   140026b03:	jmp    0x140026b5e
   140026b05:	imul   edi,r14d
   140026b09:	add    edi,ecx
   140026b0b:	mov    sil,BYTE PTR [rbx]
   140026b0e:	inc    rbx
   140026b11:	jmp    0x140026aa2
   140026b13:	mov    esi,0x7fffffff
   140026b18:	test   bpl,0x4
   140026b1c:	jne    0x140026b3b
   140026b1e:	test   bpl,0x1
   140026b22:	jne    0x140026b5e
   140026b24:	mov    eax,ebp
   140026b26:	and    eax,0x2
   140026b29:	je     0x140026b33
   140026b2b:	cmp    edi,0x80000000
   140026b31:	ja     0x140026b3b
   140026b33:	test   eax,eax
   140026b35:	jne    0x140026b5e
   140026b37:	cmp    edi,esi
   140026b39:	jbe    0x140026b5e
   140026b3b:	call   0x140009cb4
   140026b40:	mov    DWORD PTR [rax],0x22
   140026b46:	test   bpl,0x1
   140026b4a:	je     0x140026b51
   140026b4c:	or     edi,0xffffffff
   140026b4f:	jmp    0x140026b5e
   140026b51:	mov    al,bpl
   140026b54:	and    al,0x2
   140026b56:	neg    al
   140026b58:	sbb    edi,edi
   140026b5a:	neg    edi
   140026b5c:	add    edi,esi
   140026b5e:	test   r15,r15
   140026b61:	je     0x140026b66
   140026b63:	mov    QWORD PTR [r15],rbx
   140026b66:	test   bpl,0x2
   140026b6a:	je     0x140026b6e
   140026b6c:	neg    edi
   140026b6e:	cmp    BYTE PTR [rsp+0x38],0x0
   140026b73:	je     0x140026b81
   140026b75:	mov    rcx,QWORD PTR [rsp+0x30]
   140026b7a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140026b81:	lea    r11,[rsp+0x40]
   140026b86:	mov    eax,edi
   140026b88:	mov    rbx,QWORD PTR [r11+0x30]
   140026b8c:	mov    rbp,QWORD PTR [r11+0x40]
   140026b90:	mov    rsp,r11
   140026b93:	pop    r15
   140026b95:	pop    r14
   140026b97:	pop    r12
   140026b99:	pop    rdi
   140026b9a:	pop    rsi
   140026b9b:	ret    
   140026b9c:	sub    rsp,0x38
   140026ba0:	and    DWORD PTR [rsp+0x20],0x0
   140026ba5:	mov    rax,r9
   140026ba8:	mov    r9d,r8d
   140026bab:	mov    r8,rdx
   140026bae:	mov    rdx,rcx
   140026bb1:	mov    rcx,rax
   140026bb4:	call   0x140026960
   140026bb9:	add    rsp,0x38
   140026bbd:	ret    
   140026bbe:	int3   
   140026bbf:	int3   
   140026bc0:	sub    rsp,0x38
   140026bc4:	mov    rax,r9
   140026bc7:	mov    r9d,r8d
   140026bca:	mov    r8,rdx
   140026bcd:	mov    rdx,rcx
   140026bd0:	mov    rcx,rax
   140026bd3:	mov    DWORD PTR [rsp+0x20],0x1
   140026bdb:	call   0x140026960
   140026be0:	add    rsp,0x38
   140026be4:	ret    
   140026be5:	int3   
   140026be6:	int3   
   140026be7:	int3   
   140026be8:	sub    rsp,0x38
   140026bec:	xor    eax,eax
   140026bee:	mov    r9d,r8d
   140026bf1:	mov    r8,rdx
   140026bf4:	cmp    DWORD PTR [rip+0x1838e],eax        # 0x14003ef88
   140026bfa:	mov    DWORD PTR [rsp+0x20],eax
   140026bfe:	mov    rdx,rcx
   140026c01:	jne    0x140026c0c
   140026c03:	lea    rcx,[rip+0x165fe]        # 0x14003d208
   140026c0a:	jmp    0x140026c0e
   140026c0c:	xor    ecx,ecx
   140026c0e:	call   0x140026960
   140026c13:	add    rsp,0x38
   140026c17:	ret    
   140026c18:	sub    rsp,0x38
   140026c1c:	cmp    DWORD PTR [rip+0x18365],0x0        # 0x14003ef88
   140026c23:	mov    r9d,r8d
   140026c26:	mov    r8,rdx
   140026c29:	mov    rdx,rcx
   140026c2c:	mov    DWORD PTR [rsp+0x20],0x1
   140026c34:	jne    0x140026c3f
   140026c36:	lea    rcx,[rip+0x165cb]        # 0x14003d208
   140026c3d:	jmp    0x140026c41
   140026c3f:	xor    ecx,ecx
   140026c41:	call   0x140026960
   140026c46:	add    rsp,0x38
   140026c4a:	ret    
   140026c4b:	int3   
   140026c4c:	xor    eax,eax
   140026c4e:	ret    
   140026c4f:	int3   
   140026c50:	movzx  r8d,WORD PTR [rdx]
   140026c54:	movzx  eax,WORD PTR [rcx]
   140026c57:	sub    eax,r8d
   140026c5a:	jne    0x140026c76
   140026c5c:	sub    rcx,rdx
   140026c5f:	test   r8w,r8w
   140026c63:	je     0x140026c76
   140026c65:	add    rdx,0x2
   140026c69:	movzx  r8d,WORD PTR [rdx]
   140026c6d:	movzx  eax,WORD PTR [rcx+rdx*1]
   140026c71:	sub    eax,r8d
   140026c74:	je     0x140026c5f
   140026c76:	test   eax,eax
   140026c78:	jns    0x140026c7e
   140026c7a:	or     eax,0xffffffff
   140026c7d:	ret    
   140026c7e:	mov    ecx,0x1
   140026c83:	test   eax,eax
   140026c85:	cmovg  eax,ecx
   140026c88:	ret    
   140026c89:	int3   
   140026c8a:	int3   
   140026c8b:	int3   
   140026c8c:	xor    r10d,r10d
   140026c8f:	mov    r9,rdx
   140026c92:	mov    rax,rcx
   140026c95:	cmp    WORD PTR [rcx],r10w
   140026c99:	je     0x140026cc4
   140026c9b:	mov    r8,r9
   140026c9e:	cmp    WORD PTR [r9],r10w
   140026ca2:	je     0x140026cba
   140026ca4:	movzx  edx,WORD PTR [r9]
   140026ca8:	cmp    dx,WORD PTR [rax]
   140026cab:	je     0x140026cc4
   140026cad:	add    r8,0x2
   140026cb1:	movzx  edx,WORD PTR [r8]
   140026cb5:	test   dx,dx
   140026cb8:	jne    0x140026ca8
   140026cba:	add    rax,0x2
   140026cbe:	cmp    WORD PTR [rax],r10w
   140026cc2:	jmp    0x140026c99
   140026cc4:	sub    rax,rcx
   140026cc7:	sar    rax,1
   140026cca:	ret    
   140026ccb:	int3   
   140026ccc:	test   r8,r8
   140026ccf:	jne    0x140026ce9
   140026cd1:	xor    eax,eax
   140026cd3:	ret    
   140026cd4:	movzx  eax,WORD PTR [rcx]
   140026cd7:	test   ax,ax
   140026cda:	je     0x140026cee
   140026cdc:	cmp    ax,WORD PTR [rdx]
   140026cdf:	jne    0x140026cee
   140026ce1:	add    rcx,0x2
   140026ce5:	add    rdx,0x2
   140026ce9:	dec    r8
   140026cec:	jne    0x140026cd4
   140026cee:	movzx  eax,WORD PTR [rcx]
   140026cf1:	movzx  ecx,WORD PTR [rdx]
   140026cf4:	sub    eax,ecx
   140026cf6:	ret    
   140026cf7:	int3   
   140026cf8:	mov    r9,rdx
   140026cfb:	movzx  eax,WORD PTR [rcx]
   140026cfe:	test   ax,ax
   140026d01:	je     0x140026d2d
   140026d03:	cmp    WORD PTR [r9],0x0
   140026d08:	mov    r8,r9
   140026d0b:	je     0x140026d23
   140026d0d:	movzx  edx,WORD PTR [r9]
   140026d11:	cmp    dx,ax
   140026d14:	je     0x140026d29
   140026d16:	add    r8,0x2
   140026d1a:	movzx  edx,WORD PTR [r8]
   140026d1e:	test   dx,dx
   140026d21:	jne    0x140026d11
   140026d23:	add    rcx,0x2
   140026d27:	jmp    0x140026cfb
   140026d29:	mov    rax,rcx
   140026d2c:	ret    
   140026d2d:	xor    eax,eax
   140026d2f:	ret    
   140026d30:	rex push rbx
   140026d32:	sub    rsp,0xf0
   140026d39:	mov    rax,QWORD PTR [rip+0x15490]        # 0x14003c1d0
   140026d40:	xor    rax,rsp
   140026d43:	mov    QWORD PTR [rsp+0xe0],rax
   140026d4b:	or     DWORD PTR [rcx+0x10],0x104
   140026d52:	mov    rbx,rcx
   140026d55:	lea    rcx,[rsp+0x30]
   140026d5a:	mov    edx,0x55
   140026d5f:	call   0x14000facc
   140026d64:	cmp    eax,0x1
   140026d67:	jle    0x140026d91
   140026d69:	lea    rcx,[rsp+0x30]
   140026d6e:	call   0x14001c4ac
   140026d73:	lea    rcx,[rbx+0x258]
   140026d7a:	lea    r8,[rsp+0x30]
   140026d7f:	lea    r9,[rax+0x1]
   140026d83:	mov    edx,0x55
   140026d88:	call   0x14001c4c8
   140026d8d:	test   eax,eax
   140026d8f:	jne    0x140026daa
   140026d91:	mov    rcx,QWORD PTR [rsp+0xe0]
   140026d99:	xor    rcx,rsp
   140026d9c:	call   0x14000c380
   140026da1:	add    rsp,0xf0
   140026da8:	pop    rbx
   140026da9:	ret    
   140026daa:	and    QWORD PTR [rsp+0x20],0x0
   140026db0:	xor    r9d,r9d
   140026db3:	xor    r8d,r8d
   140026db6:	xor    edx,edx
   140026db8:	xor    ecx,ecx
   140026dba:	call   0x140008da8
   140026dbf:	int3   
   140026dc0:	rex push rbx
   140026dc2:	sub    rsp,0x20
   140026dc6:	mov    rbx,rcx
   140026dc9:	mov    rcx,QWORD PTR [rcx]
   140026dcc:	call   0x14001c4ac
   140026dd1:	mov    rcx,QWORD PTR [rbx+0x8]
   140026dd5:	xor    edx,edx
   140026dd7:	cmp    rax,0x3
   140026ddb:	sete   dl
   140026dde:	mov    DWORD PTR [rbx+0x18],edx
   140026de1:	call   0x14001c4ac
   140026de6:	xor    ecx,ecx
   140026de8:	cmp    rax,0x3
   140026dec:	sete   cl
   140026def:	cmp    DWORD PTR [rbx+0x18],0x0
   140026df3:	mov    DWORD PTR [rbx+0x1c],ecx
   140026df6:	je     0x140026dff
   140026df8:	mov    edx,0x2
   140026dfd:	jmp    0x140026e38
   140026dff:	mov    rcx,QWORD PTR [rbx]
   140026e02:	xor    r9d,r9d
   140026e05:	test   rcx,rcx
   140026e08:	jne    0x140026e0e
   140026e0a:	xor    edx,edx
   140026e0c:	jmp    0x140026e38
   140026e0e:	mov    edx,0x2
   140026e13:	movzx  r8d,WORD PTR [rcx]
   140026e17:	add    rcx,rdx
   140026e1a:	lea    eax,[r8-0x41]
   140026e1e:	cmp    ax,0x19
   140026e22:	jbe    0x140026e30
   140026e24:	sub    r8w,0x61
   140026e29:	cmp    r8w,0x19
   140026e2e:	ja     0x140026e35
   140026e30:	inc    r9d
   140026e33:	jmp    0x140026e13
   140026e35:	mov    edx,r9d
   140026e38:	xor    r8d,r8d
   140026e3b:	mov    DWORD PTR [rbx+0x14],edx
   140026e3e:	lea    rcx,[rip+0xe3]        # 0x140026f28
   140026e45:	lea    edx,[r8+0x3]
   140026e49:	call   0x14000f944
   140026e4e:	test   DWORD PTR [rbx+0x10],0x100
   140026e55:	je     0x140026e66
   140026e57:	test   DWORD PTR [rbx+0x10],0x200
   140026e5e:	je     0x140026e66
   140026e60:	test   BYTE PTR [rbx+0x10],0x7
   140026e64:	jne    0x140026e6a
   140026e66:	and    DWORD PTR [rbx+0x10],0x0
   140026e6a:	add    rsp,0x20
   140026e6e:	pop    rbx
   140026e6f:	ret    
   140026e70:	rex push rbx
   140026e72:	sub    rsp,0x20
   140026e76:	mov    rbx,rcx
   140026e79:	mov    rcx,QWORD PTR [rcx]
   140026e7c:	call   0x14001c4ac
   140026e81:	xor    edx,edx
   140026e83:	cmp    rax,0x3
   140026e87:	sete   dl
   140026e8a:	mov    DWORD PTR [rbx+0x18],edx
   140026e8d:	test   edx,edx
   140026e8f:	je     0x140026e98
   140026e91:	mov    edx,0x2
   140026e96:	jmp    0x140026ed1
   140026e98:	mov    rcx,QWORD PTR [rbx]
   140026e9b:	xor    r9d,r9d
   140026e9e:	test   rcx,rcx
   140026ea1:	jne    0x140026ea7
   140026ea3:	xor    edx,edx
   140026ea5:	jmp    0x140026ed1
   140026ea7:	mov    edx,0x2
   140026eac:	movzx  r8d,WORD PTR [rcx]
   140026eb0:	add    rcx,rdx
   140026eb3:	lea    eax,[r8-0x41]
   140026eb7:	cmp    ax,0x19
   140026ebb:	jbe    0x140026ec9
   140026ebd:	sub    r8w,0x61
   140026ec2:	cmp    r8w,0x19
   140026ec7:	ja     0x140026ece
   140026ec9:	inc    r9d
   140026ecc:	jmp    0x140026eac
   140026ece:	mov    edx,r9d
   140026ed1:	xor    r8d,r8d
   140026ed4:	mov    DWORD PTR [rbx+0x14],edx
   140026ed7:	lea    rcx,[rip+0x3d6]        # 0x1400272b4
   140026ede:	lea    edx,[r8+0x3]
   140026ee2:	call   0x14000f944
   140026ee7:	test   BYTE PTR [rbx+0x10],0x4
   140026eeb:	jne    0x140026ef1
   140026eed:	and    DWORD PTR [rbx+0x10],0x0
   140026ef1:	add    rsp,0x20
   140026ef5:	pop    rbx
   140026ef6:	ret    
   140026ef7:	int3   
   140026ef8:	xor    edx,edx
   140026efa:	test   rcx,rcx
   140026efd:	jne    0x140026f02
   140026eff:	xor    eax,eax
   140026f01:	ret    
   140026f02:	movzx  r8d,WORD PTR [rcx]
   140026f06:	add    rcx,0x2
   140026f0a:	lea    eax,[r8-0x41]
   140026f0e:	cmp    ax,0x19
   140026f12:	jbe    0x140026f20
   140026f14:	sub    r8w,0x61
   140026f19:	cmp    r8w,0x19
   140026f1e:	ja     0x140026f24
   140026f20:	inc    edx
   140026f22:	jmp    0x140026f02
   140026f24:	mov    eax,edx
   140026f26:	ret    
   140026f27:	int3   
   140026f28:	mov    QWORD PTR [rsp+0x10],rbx
   140026f2d:	mov    QWORD PTR [rsp+0x18],rbp
   140026f32:	push   rsi
   140026f33:	push   rdi
   140026f34:	push   r14
   140026f36:	sub    rsp,0xc0
   140026f3d:	mov    rax,QWORD PTR [rip+0x1528c]        # 0x14003c1d0
   140026f44:	xor    rax,rsp
   140026f47:	mov    QWORD PTR [rsp+0xb0],rax
   140026f4f:	mov    rdi,rcx
   140026f52:	call   0x14000a3ec
   140026f57:	mov    esi,0x40
   140026f5c:	lea    rbx,[rax+0x140]
   140026f63:	lea    r8,[rsp+0x30]
   140026f68:	mov    r9d,esi
   140026f6b:	mov    ecx,DWORD PTR [rbx+0x1c]
   140026f6e:	neg    ecx
   140026f70:	mov    rcx,rdi
   140026f73:	sbb    edx,edx
   140026f75:	and    edx,0xfffff005
   140026f7b:	add    edx,0x1002
   140026f81:	call   0x14000fa04
   140026f86:	xor    ebp,ebp
   140026f88:	test   eax,eax
   140026f8a:	jne    0x140026f99
   140026f8c:	mov    DWORD PTR [rbx+0x10],ebp
   140026f8f:	mov    eax,0x1
   140026f94:	jmp    0x14002720d
   140026f99:	mov    rcx,QWORD PTR [rbx+0x8]
   140026f9d:	lea    rdx,[rsp+0x30]
   140026fa2:	call   0x140028c40
   140026fa7:	mov    r14d,0x55
   140026fad:	test   eax,eax
   140026faf:	jne    0x1400270aa
   140026fb5:	mov    eax,DWORD PTR [rbx+0x18]
   140026fb8:	lea    r8,[rsp+0x30]
   140026fbd:	mov    r9d,esi
   140026fc0:	neg    eax
   140026fc2:	mov    rcx,rdi
   140026fc5:	sbb    edx,edx
   140026fc7:	and    edx,0xfffff002
   140026fcd:	add    edx,0x1001
   140026fd3:	call   0x14000fa04
   140026fd8:	test   eax,eax
   140026fda:	je     0x140026f8c
   140026fdc:	mov    rcx,QWORD PTR [rbx]
   140026fdf:	lea    rdx,[rsp+0x30]
   140026fe4:	call   0x140028c40
   140026fe9:	test   eax,eax
   140026feb:	jne    0x14002701f
   140026fed:	or     DWORD PTR [rbx+0x10],0x304
   140026ff4:	mov    rcx,rdi
   140026ff7:	call   0x14001c4ac
   140026ffc:	lea    rcx,[rbx+0x258]
   140027003:	mov    r8,rdi
   140027006:	lea    r9,[rax+0x1]
   14002700a:	mov    edx,r14d
   14002700d:	call   0x14001c4c8
   140027012:	test   eax,eax
   140027014:	je     0x1400270aa
   14002701a:	jmp    0x140027235
   14002701f:	test   BYTE PTR [rbx+0x10],0x2
   140027023:	jne    0x1400270aa
   140027029:	cmp    DWORD PTR [rbx+0x14],ebp
   14002702c:	je     0x14002706e
   14002702e:	movsxd r8,DWORD PTR [rbx+0x14]
   140027032:	mov    rcx,QWORD PTR [rbx]
   140027035:	lea    rdx,[rsp+0x30]
   14002703a:	call   0x140028db4
   14002703f:	test   eax,eax
   140027041:	jne    0x14002706e
   140027043:	or     DWORD PTR [rbx+0x10],0x2
   140027047:	mov    rcx,rdi
   14002704a:	call   0x14001c4ac
   14002704f:	lea    rcx,[rbx+0x258]
   140027056:	mov    r8,rdi
   140027059:	lea    r9,[rax+0x1]
   14002705d:	mov    rdx,r14
   140027060:	call   0x14001c4c8
   140027065:	test   eax,eax
   140027067:	je     0x1400270aa
   140027069:	jmp    0x14002724a
   14002706e:	test   BYTE PTR [rbx+0x10],0x1
   140027072:	jne    0x1400270aa
   140027074:	mov    rcx,rdi
   140027077:	call   0x140027448
   14002707c:	test   eax,eax
   14002707e:	je     0x1400270aa
   140027080:	or     DWORD PTR [rbx+0x10],0x1
   140027084:	mov    rcx,rdi
   140027087:	call   0x14001c4ac
   14002708c:	lea    rcx,[rbx+0x258]
   140027093:	mov    r8,rdi
   140027096:	lea    r9,[rax+0x1]
   14002709a:	mov    rdx,r14
   14002709d:	call   0x14001c4c8
   1400270a2:	test   eax,eax
   1400270a4:	jne    0x14002725f
   1400270aa:	mov    eax,DWORD PTR [rbx+0x10]
   1400270ad:	mov    ecx,0x300
   1400270b2:	and    eax,ecx
   1400270b4:	cmp    eax,ecx
   1400270b6:	je     0x140027202
   1400270bc:	mov    eax,DWORD PTR [rbx+0x18]
   1400270bf:	lea    r8,[rsp+0x30]
   1400270c4:	mov    r9d,0x80
   1400270ca:	neg    eax
   1400270cc:	mov    rcx,rdi
   1400270cf:	sbb    edx,edx
   1400270d1:	and    edx,0xfffff002
   1400270d7:	add    edx,0x1001
   1400270dd:	call   0x14000fa04
   1400270e2:	test   eax,eax
   1400270e4:	je     0x140026f8c
   1400270ea:	mov    rcx,QWORD PTR [rbx]
   1400270ed:	lea    rdx,[rsp+0x30]
   1400270f2:	call   0x140028c40
   1400270f7:	test   eax,eax
   1400270f9:	jne    0x140027202
   1400270ff:	bts    DWORD PTR [rbx+0x10],0x9
   140027104:	cmp    DWORD PTR [rbx+0x18],ebp
   140027107:	je     0x140027145
   140027109:	bts    DWORD PTR [rbx+0x10],0x8
   14002710e:	lea    rsi,[rbx+0x258]
   140027115:	cmp    WORD PTR [rsi],bp
   140027118:	jne    0x140027202
   14002711e:	mov    rcx,rdi
   140027121:	call   0x14001c4ac
   140027126:	mov    r8,rdi
   140027129:	mov    rdx,r14
   14002712c:	lea    r9,[rax+0x1]
   140027130:	mov    rcx,rsi
   140027133:	call   0x14001c4c8
   140027138:	test   eax,eax
   14002713a:	je     0x140027202
   140027140:	jmp    0x140027274
   140027145:	cmp    DWORD PTR [rbx+0x14],ebp
   140027148:	je     0x1400271cf
   14002714e:	mov    rcx,QWORD PTR [rbx]
   140027151:	call   0x14001c4ac
   140027156:	cmp    eax,DWORD PTR [rbx+0x14]
   140027159:	jne    0x1400271cf
   14002715b:	mov    rcx,rdi
   14002715e:	call   0x140027448
   140027163:	test   eax,eax
   140027165:	jne    0x14002719b
   140027167:	mov    rcx,QWORD PTR [rbx]
   14002716a:	mov    esi,ebp
   14002716c:	test   rcx,rcx
   14002716f:	je     0x14002718f
   140027171:	movzx  edx,WORD PTR [rcx]
   140027174:	add    rcx,0x2
   140027178:	lea    eax,[rdx-0x41]
   14002717b:	cmp    ax,0x19
   14002717f:	jbe    0x14002718b
   140027181:	sub    dx,0x61
   140027185:	cmp    dx,0x19
   140027189:	ja     0x14002718f
   14002718b:	inc    esi
   14002718d:	jmp    0x140027171
   14002718f:	mov    rcx,QWORD PTR [rbx]
   140027192:	call   0x14001c4ac
   140027197:	cmp    esi,eax
   140027199:	je     0x140027202
   14002719b:	bts    DWORD PTR [rbx+0x10],0x8
   1400271a0:	lea    rsi,[rbx+0x258]
   1400271a7:	cmp    WORD PTR [rsi],bp
   1400271aa:	jne    0x140027202
   1400271ac:	mov    rcx,rdi
   1400271af:	call   0x14001c4ac
   1400271b4:	mov    r8,rdi
   1400271b7:	mov    rdx,r14
   1400271ba:	lea    r9,[rax+0x1]
   1400271be:	mov    rcx,rsi
   1400271c1:	call   0x14001c4c8
   1400271c6:	test   eax,eax
   1400271c8:	je     0x140027202
   1400271ca:	jmp    0x140027289
   1400271cf:	bts    DWORD PTR [rbx+0x10],0x8
   1400271d4:	lea    rsi,[rbx+0x258]
   1400271db:	cmp    WORD PTR [rsi],bp
   1400271de:	jne    0x140027202
   1400271e0:	mov    rcx,rdi
   1400271e3:	call   0x14001c4ac
   1400271e8:	mov    r8,rdi
   1400271eb:	mov    rdx,r14
   1400271ee:	lea    r9,[rax+0x1]
   1400271f2:	mov    rcx,rsi
   1400271f5:	call   0x14001c4c8
   1400271fa:	test   eax,eax
   1400271fc:	jne    0x14002729e
   140027202:	mov    eax,DWORD PTR [rbx+0x10]
   140027205:	shr    eax,0x2
   140027208:	not    eax
   14002720a:	and    eax,0x1
   14002720d:	mov    rcx,QWORD PTR [rsp+0xb0]
   140027215:	xor    rcx,rsp
   140027218:	call   0x14000c380
   14002721d:	lea    r11,[rsp+0xc0]
   140027225:	mov    rbx,QWORD PTR [r11+0x28]
   140027229:	mov    rbp,QWORD PTR [r11+0x30]
   14002722d:	mov    rsp,r11
   140027230:	pop    r14
   140027232:	pop    rdi
   140027233:	pop    rsi
   140027234:	ret    
   140027235:	xor    r9d,r9d
   140027238:	xor    r8d,r8d
   14002723b:	xor    edx,edx
   14002723d:	xor    ecx,ecx
   14002723f:	mov    QWORD PTR [rsp+0x20],rbp
   140027244:	call   0x140008da8
   140027249:	int3   
   14002724a:	xor    r9d,r9d
   14002724d:	xor    r8d,r8d
   140027250:	xor    edx,edx
   140027252:	xor    ecx,ecx
   140027254:	mov    QWORD PTR [rsp+0x20],rbp
   140027259:	call   0x140008da8
   14002725e:	int3   
   14002725f:	xor    r9d,r9d
   140027262:	xor    r8d,r8d
   140027265:	xor    edx,edx
   140027267:	xor    ecx,ecx
   140027269:	mov    QWORD PTR [rsp+0x20],rbp
   14002726e:	call   0x140008da8
   140027273:	int3   
   140027274:	xor    r9d,r9d
   140027277:	xor    r8d,r8d
   14002727a:	xor    edx,edx
   14002727c:	xor    ecx,ecx
   14002727e:	mov    QWORD PTR [rsp+0x20],rbp
   140027283:	call   0x140008da8
   140027288:	int3   
   140027289:	xor    r9d,r9d
   14002728c:	xor    r8d,r8d
   14002728f:	xor    edx,edx
   140027291:	xor    ecx,ecx
   140027293:	mov    QWORD PTR [rsp+0x20],rbp
   140027298:	call   0x140008da8
   14002729d:	int3   
   14002729e:	xor    r9d,r9d
   1400272a1:	xor    r8d,r8d
   1400272a4:	xor    edx,edx
   1400272a6:	xor    ecx,ecx
   1400272a8:	mov    QWORD PTR [rsp+0x20],rbp
   1400272ad:	call   0x140008da8
   1400272b2:	int3   
   1400272b3:	int3   
   1400272b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400272b9:	push   rdi
   1400272ba:	sub    rsp,0x130
   1400272c1:	mov    rax,QWORD PTR [rip+0x14f08]        # 0x14003c1d0
   1400272c8:	xor    rax,rsp
   1400272cb:	mov    QWORD PTR [rsp+0x120],rax
   1400272d3:	mov    rdi,rcx
   1400272d6:	call   0x14000a3ec
   1400272db:	lea    r8,[rsp+0x30]
   1400272e0:	lea    rbx,[rax+0x140]
   1400272e7:	mov    r9d,0x78
   1400272ed:	mov    ecx,DWORD PTR [rbx+0x18]
   1400272f0:	neg    ecx
   1400272f2:	mov    rcx,rdi
   1400272f5:	sbb    edx,edx
   1400272f7:	and    edx,0xfffff002
   1400272fd:	add    edx,0x1001
   140027303:	call   0x14000fa04
   140027308:	test   eax,eax
   14002730a:	jne    0x140027316
   14002730c:	and    DWORD PTR [rbx+0x10],eax
   14002730f:	mov    eax,0x1
   140027314:	jmp    0x14002735a
   140027316:	mov    rcx,QWORD PTR [rbx]
   140027319:	lea    rdx,[rsp+0x30]
   14002731e:	call   0x140028c40
   140027323:	test   eax,eax
   140027325:	jne    0x14002734f
   140027327:	mov    rcx,rdi
   14002732a:	call   0x14001c4ac
   14002732f:	lea    rcx,[rbx+0x258]
   140027336:	mov    r8,rdi
   140027339:	lea    r9,[rax+0x1]
   14002733d:	mov    edx,0x55
   140027342:	call   0x14001c4c8
   140027347:	test   eax,eax
   140027349:	jne    0x14002737b
   14002734b:	or     DWORD PTR [rbx+0x10],0x4
   14002734f:	mov    eax,DWORD PTR [rbx+0x10]
   140027352:	shr    eax,0x2
   140027355:	not    eax
   140027357:	and    eax,0x1
   14002735a:	mov    rcx,QWORD PTR [rsp+0x120]
   140027362:	xor    rcx,rsp
   140027365:	call   0x14000c380
   14002736a:	mov    rbx,QWORD PTR [rsp+0x148]
   140027372:	add    rsp,0x130
   140027379:	pop    rdi
   14002737a:	ret    
   14002737b:	and    QWORD PTR [rsp+0x20],0x0
   140027381:	xor    r9d,r9d
   140027384:	xor    r8d,r8d
   140027387:	xor    edx,edx
   140027389:	xor    ecx,ecx
   14002738b:	call   0x140008da8
   140027390:	int3   
   140027391:	int3   
   140027392:	int3   
   140027393:	int3   
   140027394:	mov    QWORD PTR [rsp+0x10],rbx
   140027399:	mov    QWORD PTR [rsp+0x18],rsi
   14002739e:	push   rdi
   14002739f:	sub    rsp,0x20
   1400273a3:	xor    esi,esi
   1400273a5:	mov    rdi,rdx
   1400273a8:	mov    rbx,rcx
   1400273ab:	test   rcx,rcx
   1400273ae:	je     0x140027406
   1400273b0:	cmp    WORD PTR [rcx],si
   1400273b3:	je     0x140027406
   1400273b5:	lea    rdx,[rip+0xe7f4]        # 0x140035bb0
   1400273bc:	call   0x140026c50
   1400273c1:	test   eax,eax
   1400273c3:	je     0x140027406
   1400273c5:	lea    rdx,[rip+0xe7ec]        # 0x140035bb8
   1400273cc:	mov    rcx,rbx
   1400273cf:	call   0x140026c50
   1400273d4:	test   eax,eax
   1400273d6:	jne    0x1400273fc
   1400273d8:	lea    rcx,[rdi+0x258]
   1400273df:	lea    r9d,[rsi+0x2]
   1400273e3:	lea    r8,[rsp+0x30]
   1400273e8:	mov    edx,0x2000000b
   1400273ed:	call   0x14000fa04
   1400273f2:	test   eax,eax
   1400273f4:	je     0x140027426
   1400273f6:	mov    eax,DWORD PTR [rsp+0x30]
   1400273fa:	jmp    0x140027438
   1400273fc:	mov    rcx,rbx
   1400273ff:	call   0x140028b7c
   140027404:	jmp    0x140027438
   140027406:	lea    rcx,[rdi+0x258]
   14002740d:	lea    r8,[rsp+0x30]
   140027412:	mov    r9d,0x2
   140027418:	mov    edx,0x20001004
   14002741d:	call   0x14000fa04
   140027422:	test   eax,eax
   140027424:	jne    0x14002742a
   140027426:	xor    eax,eax
   140027428:	jmp    0x140027438
   14002742a:	mov    eax,DWORD PTR [rsp+0x30]
   14002742e:	test   eax,eax
   140027430:	jne    0x140027438
   140027432:	call   QWORD PTR [rip+0x4c30]        # 0x14002c068
   140027438:	mov    rbx,QWORD PTR [rsp+0x38]
   14002743d:	mov    rsi,QWORD PTR [rsp+0x40]
   140027442:	add    rsp,0x20
   140027446:	pop    rdi
   140027447:	ret    
   140027448:	mov    QWORD PTR [rsp+0x10],rbx
   14002744d:	push   rdi
   14002744e:	sub    rsp,0x40
   140027452:	mov    rax,QWORD PTR [rip+0x14d77]        # 0x14003c1d0
   140027459:	xor    rax,rsp
   14002745c:	mov    QWORD PTR [rsp+0x38],rax
   140027461:	mov    r9d,0x9
   140027467:	lea    r8,[rsp+0x20]
   14002746c:	mov    rdi,rcx
   14002746f:	lea    edx,[r9+0x50]
   140027473:	call   0x14000fa04
   140027478:	xor    ebx,ebx
   14002747a:	test   eax,eax
   14002747c:	je     0x140027498
   14002747e:	lea    rcx,[rsp+0x20]
   140027483:	mov    r8d,0x9
   140027489:	mov    rdx,rdi
   14002748c:	call   0x140026ccc
   140027491:	test   eax,eax
   140027493:	sete   bl
   140027496:	mov    eax,ebx
   140027498:	mov    rcx,QWORD PTR [rsp+0x38]
   14002749d:	xor    rcx,rsp
   1400274a0:	call   0x14000c380
   1400274a5:	mov    rbx,QWORD PTR [rsp+0x58]
   1400274aa:	add    rsp,0x40
   1400274ae:	pop    rdi
   1400274af:	ret    
   1400274b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400274b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400274ba:	push   rdi
   1400274bb:	sub    rsp,0x20
   1400274bf:	mov    rsi,r8
   1400274c2:	mov    edi,edx
   1400274c4:	call   0x140027448
   1400274c9:	xor    ebx,ebx
   1400274cb:	test   eax,eax
   1400274cd:	jne    0x140027509
   1400274cf:	test   edi,edi
   1400274d1:	je     0x140027509
   1400274d3:	mov    rcx,QWORD PTR [rsi]
   1400274d6:	test   rcx,rcx
   1400274d9:	je     0x1400274f9
   1400274db:	movzx  edx,WORD PTR [rcx]
   1400274de:	add    rcx,0x2
   1400274e2:	lea    eax,[rdx-0x41]
   1400274e5:	cmp    ax,0x19
   1400274e9:	jbe    0x1400274f5
   1400274eb:	sub    dx,0x61
   1400274ef:	cmp    dx,0x19
   1400274f3:	ja     0x1400274f9
   1400274f5:	inc    ebx
   1400274f7:	jmp    0x1400274db
   1400274f9:	mov    rcx,QWORD PTR [rsi]
   1400274fc:	call   0x14001c4ac
   140027501:	cmp    ebx,eax
   140027503:	jne    0x140027509
   140027505:	xor    eax,eax
   140027507:	jmp    0x14002750e
   140027509:	mov    eax,0x1
   14002750e:	mov    rbx,QWORD PTR [rsp+0x30]
   140027513:	mov    rsi,QWORD PTR [rsp+0x38]
   140027518:	add    rsp,0x20
   14002751c:	pop    rdi
   14002751d:	ret    
   14002751e:	int3   
   14002751f:	int3   
   140027520:	mov    rax,rsp
   140027523:	mov    QWORD PTR [rax+0x8],rbx
   140027527:	mov    QWORD PTR [rax+0x10],rbp
   14002752b:	mov    QWORD PTR [rax+0x18],rsi
   14002752f:	mov    QWORD PTR [rax+0x20],rdi
   140027533:	push   r12
   140027535:	push   r14
   140027537:	push   r15
   140027539:	sub    rsp,0x20
   14002753d:	xor    ebx,ebx
   14002753f:	mov    r15,r8
   140027542:	mov    edi,edx
   140027544:	mov    r12,rcx
   140027547:	mov    eax,0x1
   14002754c:	mov    esi,ebx
   14002754e:	test   edx,edx
   140027550:	js     0x140027593
   140027552:	test   eax,eax
   140027554:	je     0x140027595
   140027556:	mov    rcx,QWORD PTR [r15]
   140027559:	lea    eax,[rsi+rdi*1]
   14002755c:	cdq    
   14002755d:	sub    eax,edx
   14002755f:	sar    eax,1
   140027561:	movsxd rbp,eax
   140027564:	mov    r14,rbp
   140027567:	shl    r14,0x4
   14002756b:	mov    rdx,QWORD PTR [r14+r12*1]
   14002756f:	call   0x140028c40
   140027574:	test   eax,eax
   140027576:	jne    0x140027585
   140027578:	lea    rcx,[r12+0x8]
   14002757d:	add    rcx,r14
   140027580:	mov    QWORD PTR [r15],rcx
   140027583:	jmp    0x14002758f
   140027585:	jns    0x14002758c
   140027587:	lea    edi,[rbp-0x1]
   14002758a:	jmp    0x14002758f
   14002758c:	lea    esi,[rbp+0x1]
   14002758f:	cmp    esi,edi
   140027591:	jle    0x140027552
   140027593:	test   eax,eax
   140027595:	mov    rbp,QWORD PTR [rsp+0x48]
   14002759a:	mov    rsi,QWORD PTR [rsp+0x50]
   14002759f:	mov    rdi,QWORD PTR [rsp+0x58]
   1400275a4:	sete   bl
   1400275a7:	mov    eax,ebx
   1400275a9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400275ae:	add    rsp,0x20
   1400275b2:	pop    r15
   1400275b4:	pop    r14
   1400275b6:	pop    r12
   1400275b8:	ret    
   1400275b9:	int3   
   1400275ba:	int3   
   1400275bb:	int3   
   1400275bc:	rex push rbx
   1400275be:	push   rbp
   1400275bf:	push   rsi
   1400275c0:	push   rdi
   1400275c1:	push   r12
   1400275c3:	push   r14
   1400275c5:	push   r15
   1400275c7:	sub    rsp,0xf0
   1400275ce:	mov    rax,QWORD PTR [rip+0x14bfb]        # 0x14003c1d0
   1400275d5:	xor    rax,rsp
   1400275d8:	mov    QWORD PTR [rsp+0xe0],rax
   1400275e0:	mov    rbp,r8
   1400275e3:	mov    rsi,rdx
   1400275e6:	mov    r14,rcx
   1400275e9:	call   0x14000a3ec
   1400275ee:	xor    r12d,r12d
   1400275f1:	lea    rbx,[rax+0x140]
   1400275f8:	lea    rax,[r14+0x80]
   1400275ff:	lea    r15,[rbx+0x258]
   140027606:	lea    rdi,[rbx+0x8]
   14002760a:	mov    DWORD PTR [rbx+0x10],r12d
   14002760e:	mov    WORD PTR [r15],r12w
   140027612:	mov    QWORD PTR [rdi],rax
   140027615:	mov    QWORD PTR [rbx],r14
   140027618:	cmp    WORD PTR [rax],r12w
   14002761c:	je     0x140027632
   14002761e:	lea    edx,[r12+0x16]
   140027623:	lea    rcx,[rip+0xe226]        # 0x140035850
   14002762a:	mov    r8,rdi
   14002762d:	call   0x140027520
   140027632:	mov    rax,QWORD PTR [rbx]
   140027635:	cmp    WORD PTR [rax],r12w
   140027639:	je     0x1400277b1
   14002763f:	mov    rax,QWORD PTR [rdi]
   140027642:	mov    rcx,rbx
   140027645:	cmp    WORD PTR [rax],r12w
   140027649:	je     0x140027652
   14002764b:	call   0x140026dc0
   140027650:	jmp    0x140027657
   140027652:	call   0x140026e70
   140027657:	cmp    DWORD PTR [rbx+0x10],r12d
   14002765b:	jne    0x140027694
   14002765d:	lea    rcx,[rip+0xd5bc]        # 0x140034c20
   140027664:	mov    r8,rbx
   140027667:	mov    edx,0x40
   14002766c:	call   0x140027520
   140027671:	test   eax,eax
   140027673:	je     0x14002768a
   140027675:	mov    rax,QWORD PTR [rdi]
   140027678:	mov    rcx,rbx
   14002767b:	cmp    WORD PTR [rax],r12w
   14002767f:	je     0x1400277a7
   140027685:	call   0x140026dc0
   14002768a:	cmp    DWORD PTR [rbx+0x10],r12d
   14002768e:	je     0x1400277fa
   140027694:	lea    rcx,[r14+0x100]
   14002769b:	mov    rdx,rbx
   14002769e:	call   0x140027394
   1400276a3:	mov    ebx,eax
   1400276a5:	test   eax,eax
   1400276a7:	je     0x1400277fa
   1400276ad:	lea    ecx,[rax-0xfde8]
   1400276b3:	cmp    ecx,0x1
   1400276b6:	jbe    0x1400277fa
   1400276bc:	movzx  ecx,ax
   1400276bf:	call   QWORD PTR [rip+0x49ab]        # 0x14002c070
   1400276c5:	test   eax,eax
   1400276c7:	je     0x1400277fa
   1400276cd:	test   rsi,rsi
   1400276d0:	je     0x1400276d4
   1400276d2:	mov    DWORD PTR [rsi],ebx
   1400276d4:	test   rbp,rbp
   1400276d7:	je     0x1400277a0
   1400276dd:	lea    rsi,[rbp+0x120]
   1400276e4:	mov    rcx,r15
   1400276e7:	mov    WORD PTR [rsi],r12w
   1400276eb:	call   0x14001c4ac
   1400276f0:	mov    r8,r15
   1400276f3:	lea    r9,[rax+0x1]
   1400276f7:	mov    edx,0x55
   1400276fc:	mov    rcx,rsi
   1400276ff:	call   0x14001c4c8
   140027704:	test   eax,eax
   140027706:	jne    0x140027833
   14002770c:	lea    r9d,[rax+0x40]
   140027710:	mov    r8,rbp
   140027713:	mov    edx,0x1001
   140027718:	mov    rcx,rsi
   14002771b:	call   0x14000fa04
   140027720:	test   eax,eax
   140027722:	je     0x1400277fa
   140027728:	lea    rdi,[rbp+0x80]
   14002772f:	mov    r9d,0x40
   140027735:	mov    edx,0x1002
   14002773a:	mov    r8,rdi
   14002773d:	mov    rcx,rsi
   140027740:	call   0x14000fa04
   140027745:	test   eax,eax
   140027747:	je     0x1400277fa
   14002774d:	mov    edx,0x5f
   140027752:	mov    rcx,rdi
   140027755:	call   0x140028bb4
   14002775a:	test   rax,rax
   14002775d:	jne    0x14002776f
   14002775f:	lea    edx,[rax+0x2e]
   140027762:	mov    rcx,rdi
   140027765:	call   0x140028bb4
   14002776a:	test   rax,rax
   14002776d:	je     0x140027788
   14002776f:	mov    r9d,0x40
   140027775:	mov    r8,rdi
   140027778:	mov    rcx,rsi
   14002777b:	lea    edx,[r9-0x39]
   14002777f:	call   0x14000fa04
   140027784:	test   eax,eax
   140027786:	je     0x1400277fa
   140027788:	mov    r9d,0xa
   14002778e:	lea    rdx,[rbp+0x100]
   140027795:	mov    ecx,ebx
   140027797:	lea    r8d,[r9+0x6]
   14002779b:	call   0x1400288ac
   1400277a0:	mov    eax,0x1
   1400277a5:	jmp    0x1400277fc
   1400277a7:	call   0x140026e70
   1400277ac:	jmp    0x14002768a
   1400277b1:	or     DWORD PTR [rbx+0x10],0x104
   1400277b8:	lea    rcx,[rsp+0x30]
   1400277bd:	mov    edx,0x55
   1400277c2:	call   0x14000facc
   1400277c7:	cmp    eax,0x1
   1400277ca:	jle    0x14002768a
   1400277d0:	lea    rcx,[rsp+0x30]
   1400277d5:	call   0x14001c4ac
   1400277da:	lea    r8,[rsp+0x30]
   1400277df:	mov    edx,0x55
   1400277e4:	lea    r9,[rax+0x1]
   1400277e8:	mov    rcx,r15
   1400277eb:	call   0x14001c4c8
   1400277f0:	test   eax,eax
   1400277f2:	je     0x14002768a
   1400277f8:	jmp    0x14002781e
   1400277fa:	xor    eax,eax
   1400277fc:	mov    rcx,QWORD PTR [rsp+0xe0]
   140027804:	xor    rcx,rsp
   140027807:	call   0x14000c380
   14002780c:	add    rsp,0xf0
   140027813:	pop    r15
   140027815:	pop    r14
   140027817:	pop    r12
   140027819:	pop    rdi
   14002781a:	pop    rsi
   14002781b:	pop    rbp
   14002781c:	pop    rbx
   14002781d:	ret    
   14002781e:	xor    r9d,r9d
   140027821:	xor    r8d,r8d
   140027824:	xor    edx,edx
   140027826:	xor    ecx,ecx
   140027828:	mov    QWORD PTR [rsp+0x20],r12
   14002782d:	call   0x140008da8
   140027832:	int3   
   140027833:	xor    r9d,r9d
   140027836:	xor    r8d,r8d
   140027839:	xor    edx,edx
   14002783b:	xor    ecx,ecx
   14002783d:	mov    QWORD PTR [rsp+0x20],r12
   140027842:	call   0x140008da8
   140027847:	int3   
   140027848:	mov    QWORD PTR [rsp+0x10],rbx
   14002784d:	mov    QWORD PTR [rsp+0x18],rbp
   140027852:	mov    QWORD PTR [rsp+0x20],rsi
   140027857:	push   rdi
   140027858:	sub    rsp,0x120
   14002785f:	mov    rax,QWORD PTR [rip+0x1496a]        # 0x14003c1d0
   140027866:	xor    rax,rsp
   140027869:	mov    QWORD PTR [rsp+0x110],rax
   140027871:	mov    rbx,rcx
   140027874:	call   0x14000a3ec
   140027879:	mov    rbp,rax
   14002787c:	call   0x14000a3ec
   140027881:	mov    rcx,rbx
   140027884:	mov    rdi,QWORD PTR [rax+0x470]
   14002788b:	call   0x140027e4c
   140027890:	mov    ecx,DWORD PTR [rbp+0x15c]
   140027896:	neg    ecx
   140027898:	lea    r8,[rsp+0x20]
   14002789d:	mov    r9d,0xf0
   1400278a3:	sbb    edx,edx
   1400278a5:	mov    ecx,eax
   1400278a7:	mov    esi,eax
   1400278a9:	and    edx,0xfffff005
   1400278af:	add    edx,0x1002
   1400278b5:	call   QWORD PTR [rip+0x4825]        # 0x14002c0e0
   1400278bb:	xor    ebx,ebx
   1400278bd:	test   eax,eax
   1400278bf:	jne    0x1400278c8
   1400278c1:	mov    DWORD PTR [rdi],ebx
   1400278c3:	lea    eax,[rbx+0x1]
   1400278c6:	jmp    0x14002790b
   1400278c8:	mov    rcx,QWORD PTR [rbp+0x148]
   1400278cf:	lea    rdx,[rsp+0x20]
   1400278d4:	call   0x140028c40
   1400278d9:	test   eax,eax
   1400278db:	jne    0x140027901
   1400278dd:	lea    rcx,[rip+0xe2dc]        # 0x140035bc0
   1400278e4:	cmp    si,WORD PTR [rcx]
   1400278e7:	je     0x140027901
   1400278e9:	inc    ebx
   1400278eb:	add    rcx,0x2
   1400278ef:	movsxd rax,ebx
   1400278f2:	cmp    rax,0xa
   1400278f6:	jb     0x1400278e4
   1400278f8:	or     DWORD PTR [rdi],0x4
   1400278fb:	mov    DWORD PTR [rdi+0x8],esi
   1400278fe:	mov    DWORD PTR [rdi+0x4],esi
   140027901:	mov    eax,DWORD PTR [rdi]
   140027903:	shr    eax,0x2
   140027906:	not    eax
   140027908:	and    eax,0x1
   14002790b:	mov    rcx,QWORD PTR [rsp+0x110]
   140027913:	xor    rcx,rsp
   140027916:	call   0x14000c380
   14002791b:	lea    r11,[rsp+0x120]
   140027923:	mov    rbx,QWORD PTR [r11+0x18]
   140027927:	mov    rbp,QWORD PTR [r11+0x20]
   14002792b:	mov    rsi,QWORD PTR [r11+0x28]
   14002792f:	mov    rsp,r11
   140027932:	pop    rdi
   140027933:	ret    
   140027934:	mov    QWORD PTR [rsp+0x8],rbx
   140027939:	push   rdi
   14002793a:	sub    rsp,0x20
   14002793e:	mov    rdi,rcx
   140027941:	call   0x14000a3ec
   140027946:	mov    rcx,QWORD PTR [rax+0x148]
   14002794d:	mov    rbx,rax
   140027950:	call   0x14001c4ac
   140027955:	xor    edx,edx
   140027957:	lea    rcx,[rip+0xfffffffffffffeea]        # 0x140027848
   14002795e:	cmp    rax,0x3
   140027962:	sete   dl
   140027965:	mov    DWORD PTR [rbx+0x15c],edx
   14002796b:	mov    edx,0x1
   140027970:	call   QWORD PTR [rip+0x472a]        # 0x14002c0a0
   140027976:	test   BYTE PTR [rdi],0x4
   140027979:	jne    0x14002797e
   14002797b:	and    DWORD PTR [rdi],0x0
   14002797e:	mov    rbx,QWORD PTR [rsp+0x30]
   140027983:	add    rsp,0x20
   140027987:	pop    rdi
   140027988:	ret    
   140027989:	int3   
   14002798a:	int3   
   14002798b:	int3   
   14002798c:	rex push rbx
   14002798e:	sub    rsp,0x20
   140027992:	or     DWORD PTR [rcx],0x104
   140027998:	mov    rbx,rcx
   14002799b:	call   QWORD PTR [rip+0x4707]        # 0x14002c0a8
   1400279a1:	mov    DWORD PTR [rbx+0x8],eax
   1400279a4:	mov    DWORD PTR [rbx+0x4],eax
   1400279a7:	add    rsp,0x20
   1400279ab:	pop    rbx
   1400279ac:	ret    
   1400279ad:	int3   
   1400279ae:	int3   
   1400279af:	int3   
   1400279b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400279b5:	push   rdi
   1400279b6:	sub    rsp,0x20
   1400279ba:	mov    rdi,rcx
   1400279bd:	call   0x14000a3ec
   1400279c2:	lea    rbx,[rax+0x140]
   1400279c9:	mov    rcx,QWORD PTR [rbx]
   1400279cc:	call   0x14001c4ac
   1400279d1:	mov    rcx,QWORD PTR [rbx+0x8]
   1400279d5:	xor    edx,edx
   1400279d7:	cmp    rax,0x3
   1400279db:	sete   dl
   1400279de:	mov    DWORD PTR [rbx+0x18],edx
   1400279e1:	call   0x14001c4ac
   1400279e6:	xor    ecx,ecx
   1400279e8:	cmp    rax,0x3
   1400279ec:	mov    edx,0x2
   1400279f1:	sete   cl
   1400279f4:	mov    DWORD PTR [rbx+0x1c],ecx
   1400279f7:	and    DWORD PTR [rdi+0x4],0x0
   1400279fb:	cmp    DWORD PTR [rbx+0x18],0x0
   1400279ff:	jne    0x140027a2c
   140027a01:	mov    rcx,QWORD PTR [rbx]
   140027a04:	xor    r9d,r9d
   140027a07:	movzx  r8d,WORD PTR [rcx]
   140027a0b:	add    rcx,rdx
   140027a0e:	lea    eax,[r8-0x41]
   140027a12:	cmp    ax,0x19
   140027a16:	jbe    0x140027a24
   140027a18:	sub    r8w,0x61
   140027a1d:	cmp    r8w,0x19
   140027a22:	ja     0x140027a29
   140027a24:	inc    r9d
   140027a27:	jmp    0x140027a07
   140027a29:	mov    edx,r9d
   140027a2c:	mov    DWORD PTR [rbx+0x14],edx
   140027a2f:	lea    rcx,[rip+0xea]        # 0x140027b20
   140027a36:	mov    edx,0x1
   140027a3b:	call   QWORD PTR [rip+0x465f]        # 0x14002c0a0
   140027a41:	test   DWORD PTR [rdi],0x100
   140027a47:	je     0x140027a56
   140027a49:	test   DWORD PTR [rdi],0x200
   140027a4f:	je     0x140027a56
   140027a51:	test   BYTE PTR [rdi],0x7
   140027a54:	jne    0x140027a59
   140027a56:	and    DWORD PTR [rdi],0x0
   140027a59:	mov    rbx,QWORD PTR [rsp+0x30]
   140027a5e:	add    rsp,0x20
   140027a62:	pop    rdi
   140027a63:	ret    
   140027a64:	mov    QWORD PTR [rsp+0x8],rbx
   140027a69:	push   rdi
   140027a6a:	sub    rsp,0x20
   140027a6e:	mov    rdi,rcx
   140027a71:	call   0x14000a3ec
   140027a76:	mov    rcx,QWORD PTR [rax+0x140]
   140027a7d:	mov    rbx,rax
   140027a80:	call   0x14001c4ac
   140027a85:	xor    edx,edx
   140027a87:	mov    ecx,0x2
   140027a8c:	cmp    rax,0x3
   140027a90:	sete   dl
   140027a93:	mov    DWORD PTR [rbx+0x158],edx
   140027a99:	test   edx,edx
   140027a9b:	jne    0x140027acc
   140027a9d:	mov    rdx,QWORD PTR [rbx+0x140]
   140027aa4:	xor    r9d,r9d
   140027aa7:	movzx  r8d,WORD PTR [rdx]
   140027aab:	add    rdx,rcx
   140027aae:	lea    eax,[r8-0x41]
   140027ab2:	cmp    ax,0x19
   140027ab6:	jbe    0x140027ac4
   140027ab8:	sub    r8w,0x61
   140027abd:	cmp    r8w,0x19
   140027ac2:	ja     0x140027ac9
   140027ac4:	inc    r9d
   140027ac7:	jmp    0x140027aa7
   140027ac9:	mov    ecx,r9d
   140027acc:	mov    DWORD PTR [rbx+0x154],ecx
   140027ad2:	lea    rcx,[rip+0x277]        # 0x140027d50
   140027ad9:	mov    edx,0x1
   140027ade:	call   QWORD PTR [rip+0x45bc]        # 0x14002c0a0
   140027ae4:	test   BYTE PTR [rdi],0x4
   140027ae7:	jne    0x140027aec
   140027ae9:	and    DWORD PTR [rdi],0x0
   140027aec:	mov    rbx,QWORD PTR [rsp+0x30]
   140027af1:	add    rsp,0x20
   140027af5:	pop    rdi
   140027af6:	ret    
   140027af7:	int3   
   140027af8:	xor    r8d,r8d
   140027afb:	movzx  edx,WORD PTR [rcx]
   140027afe:	add    rcx,0x2
   140027b02:	lea    eax,[rdx-0x41]
   140027b05:	cmp    ax,0x19
   140027b09:	jbe    0x140027b15
   140027b0b:	sub    dx,0x61
   140027b0f:	cmp    dx,0x19
   140027b13:	ja     0x140027b1a
   140027b15:	inc    r8d
   140027b18:	jmp    0x140027afb
   140027b1a:	mov    eax,r8d
   140027b1d:	ret    
   140027b1e:	int3   
   140027b1f:	int3   
   140027b20:	mov    QWORD PTR [rsp+0x10],rbx
   140027b25:	mov    QWORD PTR [rsp+0x18],rsi
   140027b2a:	mov    QWORD PTR [rsp+0x20],rdi
   140027b2f:	push   r14
   140027b31:	sub    rsp,0x120
   140027b38:	mov    rax,QWORD PTR [rip+0x14691]        # 0x14003c1d0
   140027b3f:	xor    rax,rsp
   140027b42:	mov    QWORD PTR [rsp+0x110],rax
   140027b4a:	mov    rbx,rcx
   140027b4d:	call   0x14000a3ec
   140027b52:	lea    rsi,[rax+0x140]
   140027b59:	call   0x14000a3ec
   140027b5e:	mov    rcx,rbx
   140027b61:	mov    rdi,QWORD PTR [rax+0x470]
   140027b68:	call   0x140027e4c
   140027b6d:	mov    ecx,DWORD PTR [rsi+0x1c]
   140027b70:	neg    ecx
   140027b72:	lea    r8,[rsp+0x20]
   140027b77:	mov    r9d,0xf0
   140027b7d:	sbb    edx,edx
   140027b7f:	mov    ecx,eax
   140027b81:	mov    ebx,eax
   140027b83:	and    edx,0xfffff005
   140027b89:	add    edx,0x1002
   140027b8f:	call   QWORD PTR [rip+0x454b]        # 0x14002c0e0
   140027b95:	xor    r14d,r14d
   140027b98:	test   eax,eax
   140027b9a:	jne    0x140027ba9
   140027b9c:	mov    DWORD PTR [rdi],r14d
   140027b9f:	mov    eax,0x1
   140027ba4:	jmp    0x140027d23
   140027ba9:	mov    rcx,QWORD PTR [rsi+0x8]
   140027bad:	lea    rdx,[rsp+0x20]
   140027bb2:	call   0x140028c40
   140027bb7:	test   eax,eax
   140027bb9:	jne    0x140027c6b
   140027bbf:	mov    eax,DWORD PTR [rsi+0x18]
   140027bc2:	lea    r8,[rsp+0x20]
   140027bc7:	mov    r9d,0xf0
   140027bcd:	neg    eax
   140027bcf:	mov    ecx,ebx
   140027bd1:	sbb    edx,edx
   140027bd3:	and    edx,0xfffff002
   140027bd9:	add    edx,0x1001
   140027bdf:	call   QWORD PTR [rip+0x44fb]        # 0x14002c0e0
   140027be5:	test   eax,eax
   140027be7:	je     0x140027b9c
   140027be9:	mov    rcx,QWORD PTR [rsi]
   140027bec:	lea    rdx,[rsp+0x20]
   140027bf1:	call   0x140028c40
   140027bf6:	test   eax,eax
   140027bf8:	jne    0x140027c05
   140027bfa:	or     DWORD PTR [rdi],0x304
   140027c00:	mov    DWORD PTR [rdi+0x4],ebx
   140027c03:	jmp    0x140027c68
   140027c05:	test   BYTE PTR [rdi],0x2
   140027c08:	jne    0x140027c6b
   140027c0a:	cmp    DWORD PTR [rsi+0x14],r14d
   140027c0e:	je     0x140027c3d
   140027c10:	movsxd r8,DWORD PTR [rsi+0x14]
   140027c14:	mov    rcx,QWORD PTR [rsi]
   140027c17:	lea    rdx,[rsp+0x20]
   140027c1c:	call   0x140028db4
   140027c21:	test   eax,eax
   140027c23:	jne    0x140027c3d
   140027c25:	or     DWORD PTR [rdi],0x2
   140027c28:	mov    DWORD PTR [rdi+0x8],ebx
   140027c2b:	mov    rcx,QWORD PTR [rsi]
   140027c2e:	call   0x14001c4ac
   140027c33:	cmp    eax,DWORD PTR [rsi+0x14]
   140027c36:	jne    0x140027c6b
   140027c38:	mov    DWORD PTR [rdi+0x4],ebx
   140027c3b:	jmp    0x140027c6b
   140027c3d:	mov    ecx,DWORD PTR [rdi]
   140027c3f:	test   cl,0x1
   140027c42:	jne    0x140027c6b
   140027c44:	mov    r8d,r14d
   140027c47:	lea    rdx,[rip+0xdf72]        # 0x140035bc0
   140027c4e:	cmp    bx,WORD PTR [rdx]
   140027c51:	je     0x140027c6b
   140027c53:	inc    r8d
   140027c56:	add    rdx,0x2
   140027c5a:	movsxd rax,r8d
   140027c5d:	cmp    rax,0xa
   140027c61:	jb     0x140027c4e
   140027c63:	or     ecx,0x1
   140027c66:	mov    DWORD PTR [rdi],ecx
   140027c68:	mov    DWORD PTR [rdi+0x8],ebx
   140027c6b:	mov    eax,DWORD PTR [rdi]
   140027c6d:	mov    ecx,0x300
   140027c72:	and    eax,ecx
   140027c74:	cmp    eax,ecx
   140027c76:	je     0x140027d19
   140027c7c:	mov    eax,DWORD PTR [rsi+0x18]
   140027c7f:	lea    r8,[rsp+0x20]
   140027c84:	mov    r9d,0xf0
   140027c8a:	neg    eax
   140027c8c:	mov    ecx,ebx
   140027c8e:	sbb    edx,edx
   140027c90:	and    edx,0xfffff002
   140027c96:	add    edx,0x1001
   140027c9c:	call   QWORD PTR [rip+0x443e]        # 0x14002c0e0
   140027ca2:	test   eax,eax
   140027ca4:	je     0x140027b9c
   140027caa:	mov    rcx,QWORD PTR [rsi]
   140027cad:	lea    rdx,[rsp+0x20]
   140027cb2:	call   0x140028c40
   140027cb7:	test   eax,eax
   140027cb9:	jne    0x140027cdf
   140027cbb:	bts    DWORD PTR [rdi],0x9
   140027cbf:	cmp    DWORD PTR [rsi+0x18],r14d
   140027cc3:	jne    0x140027d0c
   140027cc5:	cmp    DWORD PTR [rsi+0x14],r14d
   140027cc9:	je     0x140027d0c
   140027ccb:	mov    rcx,QWORD PTR [rsi]
   140027cce:	call   0x14001c4ac
   140027cd3:	cmp    eax,DWORD PTR [rsi+0x14]
   140027cd6:	jne    0x140027d0c
   140027cd8:	mov    edx,0x1
   140027cdd:	jmp    0x140027cfe
   140027cdf:	cmp    DWORD PTR [rsi+0x18],r14d
   140027ce3:	jne    0x140027d19
   140027ce5:	cmp    DWORD PTR [rsi+0x14],r14d
   140027ce9:	je     0x140027d19
   140027ceb:	mov    rcx,QWORD PTR [rsi]
   140027cee:	lea    rdx,[rsp+0x20]
   140027cf3:	call   0x140028c40
   140027cf8:	test   eax,eax
   140027cfa:	jne    0x140027d19
   140027cfc:	xor    edx,edx
   140027cfe:	mov    r8,rdi
   140027d01:	mov    ecx,ebx
   140027d03:	call   0x140027f74
   140027d08:	test   eax,eax
   140027d0a:	je     0x140027d19
   140027d0c:	bts    DWORD PTR [rdi],0x8
   140027d10:	cmp    DWORD PTR [rdi+0x4],r14d
   140027d14:	jne    0x140027d19
   140027d16:	mov    DWORD PTR [rdi+0x4],ebx
   140027d19:	mov    eax,DWORD PTR [rdi]
   140027d1b:	shr    eax,0x2
   140027d1e:	not    eax
   140027d20:	and    eax,0x1
   140027d23:	mov    rcx,QWORD PTR [rsp+0x110]
   140027d2b:	xor    rcx,rsp
   140027d2e:	call   0x14000c380
   140027d33:	lea    r11,[rsp+0x120]
   140027d3b:	mov    rbx,QWORD PTR [r11+0x18]
   140027d3f:	mov    rsi,QWORD PTR [r11+0x20]
   140027d43:	mov    rdi,QWORD PTR [r11+0x28]
   140027d47:	mov    rsp,r11
   140027d4a:	pop    r14
   140027d4c:	ret    
   140027d4d:	int3   
   140027d4e:	int3   
   140027d4f:	int3   
   140027d50:	mov    QWORD PTR [rsp+0x10],rbx
   140027d55:	mov    QWORD PTR [rsp+0x18],rsi
   140027d5a:	push   rdi
   140027d5b:	sub    rsp,0x120
   140027d62:	mov    rax,QWORD PTR [rip+0x14467]        # 0x14003c1d0
   140027d69:	xor    rax,rsp
   140027d6c:	mov    QWORD PTR [rsp+0x110],rax
   140027d74:	mov    rbx,rcx
   140027d77:	call   0x14000a3ec
   140027d7c:	lea    rsi,[rax+0x140]
   140027d83:	call   0x14000a3ec
   140027d88:	mov    rcx,rbx
   140027d8b:	mov    rdi,QWORD PTR [rax+0x470]
   140027d92:	call   0x140027e4c
   140027d97:	mov    ecx,DWORD PTR [rsi+0x18]
   140027d9a:	neg    ecx
   140027d9c:	lea    r8,[rsp+0x20]
   140027da1:	mov    r9d,0xf0
   140027da7:	sbb    edx,edx
   140027da9:	mov    ecx,eax
   140027dab:	mov    ebx,eax
   140027dad:	and    edx,0xfffff002
   140027db3:	add    edx,0x1001
   140027db9:	call   QWORD PTR [rip+0x4321]        # 0x14002c0e0
   140027dbf:	test   eax,eax
   140027dc1:	jne    0x140027dcc
   140027dc3:	and    DWORD PTR [rdi],eax
   140027dc5:	mov    eax,0x1
   140027dca:	jmp    0x140027e27
   140027dcc:	mov    rcx,QWORD PTR [rsi]
   140027dcf:	lea    rdx,[rsp+0x20]
   140027dd4:	call   0x140028c40
   140027dd9:	test   eax,eax
   140027ddb:	jne    0x140027de7
   140027ddd:	cmp    DWORD PTR [rsi+0x18],eax
   140027de0:	jne    0x140027e14
   140027de2:	lea    edx,[rax+0x1]
   140027de5:	jmp    0x140027e06
   140027de7:	cmp    DWORD PTR [rsi+0x18],0x0
   140027deb:	jne    0x140027e1d
   140027ded:	cmp    DWORD PTR [rsi+0x14],0x0
   140027df1:	je     0x140027e1d
   140027df3:	mov    rcx,QWORD PTR [rsi]
   140027df6:	lea    rdx,[rsp+0x20]
   140027dfb:	call   0x140028c40
   140027e00:	test   eax,eax
   140027e02:	jne    0x140027e1d
   140027e04:	xor    edx,edx
   140027e06:	mov    r8,rdi
   140027e09:	mov    ecx,ebx
   140027e0b:	call   0x140027f74
   140027e10:	test   eax,eax
   140027e12:	je     0x140027e1d
   140027e14:	or     DWORD PTR [rdi],0x4
   140027e17:	mov    DWORD PTR [rdi+0x4],ebx
   140027e1a:	mov    DWORD PTR [rdi+0x8],ebx
   140027e1d:	mov    eax,DWORD PTR [rdi]
   140027e1f:	shr    eax,0x2
   140027e22:	not    eax
   140027e24:	and    eax,0x1
   140027e27:	mov    rcx,QWORD PTR [rsp+0x110]
   140027e2f:	xor    rcx,rsp
   140027e32:	call   0x14000c380
   140027e37:	lea    r11,[rsp+0x120]
   140027e3f:	mov    rbx,QWORD PTR [r11+0x18]
   140027e43:	mov    rsi,QWORD PTR [r11+0x20]
   140027e47:	mov    rsp,r11
   140027e4a:	pop    rdi
   140027e4b:	ret    
   140027e4c:	movzx  edx,WORD PTR [rcx]
   140027e4f:	xor    r10d,r10d
   140027e52:	mov    r9,rcx
   140027e55:	mov    r8d,r10d
   140027e58:	jmp    0x140027e91
   140027e5a:	lea    eax,[rdx-0x61]
   140027e5d:	lea    r9,[r9+0x2]
   140027e61:	cmp    ax,0x5
   140027e65:	ja     0x140027e6e
   140027e67:	mov    eax,0xffd9
   140027e6c:	jmp    0x140027e7c
   140027e6e:	lea    eax,[rdx-0x41]
   140027e71:	cmp    ax,0x5
   140027e75:	ja     0x140027e7f
   140027e77:	mov    eax,0xfff9
   140027e7c:	add    dx,ax
   140027e7f:	shl    r8d,0x4
   140027e83:	movzx  ecx,dx
   140027e86:	movzx  edx,WORD PTR [r9]
   140027e8a:	add    r8d,0xffffffd0
   140027e8e:	add    r8d,ecx
   140027e91:	test   dx,dx
   140027e94:	jne    0x140027e5a
   140027e96:	mov    eax,r8d
   140027e99:	ret    
   140027e9a:	int3   
   140027e9b:	int3   
   140027e9c:	mov    QWORD PTR [rsp+0x10],rbx
   140027ea1:	mov    QWORD PTR [rsp+0x18],rsi
   140027ea6:	push   rdi
   140027ea7:	sub    rsp,0x20
   140027eab:	xor    esi,esi
   140027ead:	mov    rdi,rdx
   140027eb0:	mov    rbx,rcx
   140027eb3:	test   rcx,rcx
   140027eb6:	je     0x140027f0b
   140027eb8:	cmp    WORD PTR [rcx],si
   140027ebb:	je     0x140027f0b
   140027ebd:	lea    rdx,[rip+0xdcec]        # 0x140035bb0
   140027ec4:	call   0x140026c50
   140027ec9:	test   eax,eax
   140027ecb:	je     0x140027f0b
   140027ecd:	lea    rdx,[rip+0xdce4]        # 0x140035bb8
   140027ed4:	mov    rcx,rbx
   140027ed7:	call   0x140026c50
   140027edc:	test   eax,eax
   140027ede:	jne    0x140027f01
   140027ee0:	mov    ecx,DWORD PTR [rdi+0x8]
   140027ee3:	lea    r9d,[rsi+0x2]
   140027ee7:	lea    r8,[rsp+0x30]
   140027eec:	mov    edx,0x2000000b
   140027ef1:	call   QWORD PTR [rip+0x41e9]        # 0x14002c0e0
   140027ef7:	test   eax,eax
   140027ef9:	je     0x140027f28
   140027efb:	mov    eax,DWORD PTR [rsp+0x30]
   140027eff:	jmp    0x140027f3a
   140027f01:	mov    rcx,rbx
   140027f04:	call   0x140028b7c
   140027f09:	jmp    0x140027f3a
   140027f0b:	mov    ecx,DWORD PTR [rdi+0x8]
   140027f0e:	lea    r8,[rsp+0x30]
   140027f13:	mov    r9d,0x2
   140027f19:	mov    edx,0x20001004
   140027f1e:	call   QWORD PTR [rip+0x41bc]        # 0x14002c0e0
   140027f24:	test   eax,eax
   140027f26:	jne    0x140027f2c
   140027f28:	xor    eax,eax
   140027f2a:	jmp    0x140027f3a
   140027f2c:	mov    eax,DWORD PTR [rsp+0x30]
   140027f30:	test   eax,eax
   140027f32:	jne    0x140027f3a
   140027f34:	call   QWORD PTR [rip+0x412e]        # 0x14002c068
   140027f3a:	mov    rbx,QWORD PTR [rsp+0x38]
   140027f3f:	mov    rsi,QWORD PTR [rsp+0x40]
   140027f44:	add    rsp,0x20
   140027f48:	pop    rdi
   140027f49:	ret    
   140027f4a:	int3   
   140027f4b:	int3   
   140027f4c:	xor    r9d,r9d
   140027f4f:	lea    r8,[rip+0xdc6a]        # 0x140035bc0
   140027f56:	lea    eax,[r9+0x1]
   140027f5a:	cmp    cx,WORD PTR [r8]
   140027f5e:	je     0x140027f71
   140027f60:	add    r9d,eax
   140027f63:	add    r8,0x2
   140027f67:	movsxd rdx,r9d
   140027f6a:	cmp    rdx,0xa
   140027f6e:	jb     0x140027f5a
   140027f70:	ret    
   140027f71:	xor    eax,eax
   140027f73:	ret    
   140027f74:	mov    QWORD PTR [rsp+0x10],rbx
   140027f79:	mov    QWORD PTR [rsp+0x18],rbp
   140027f7e:	mov    QWORD PTR [rsp+0x20],rsi
   140027f83:	push   rdi
   140027f84:	sub    rsp,0x20
   140027f88:	mov    ebp,edx
   140027f8a:	mov    edi,ecx
   140027f8c:	call   0x14000a3ec
   140027f91:	mov    ecx,edi
   140027f93:	lea    r8,[rsp+0x30]
   140027f98:	mov    r9d,0x2
   140027f9e:	and    ecx,0x3ff
   140027fa4:	mov    edx,0x20000001
   140027fa9:	mov    rsi,rax
   140027fac:	bts    ecx,0xa
   140027fb0:	call   QWORD PTR [rip+0x412a]        # 0x14002c0e0
   140027fb6:	xor    ebx,ebx
   140027fb8:	test   eax,eax
   140027fba:	jne    0x140027fc0
   140027fbc:	xor    eax,eax
   140027fbe:	jmp    0x140028004
   140027fc0:	cmp    edi,DWORD PTR [rsp+0x30]
   140027fc4:	je     0x140027fff
   140027fc6:	test   ebp,ebp
   140027fc8:	je     0x140027fff
   140027fca:	mov    rcx,QWORD PTR [rsi+0x140]
   140027fd1:	movzx  edx,WORD PTR [rcx]
   140027fd4:	add    rcx,0x2
   140027fd8:	lea    eax,[rdx-0x41]
   140027fdb:	cmp    ax,0x19
   140027fdf:	jbe    0x140027feb
   140027fe1:	sub    dx,0x61
   140027fe5:	cmp    dx,0x19
   140027fe9:	ja     0x140027fef
   140027feb:	inc    ebx
   140027fed:	jmp    0x140027fd1
   140027fef:	mov    rcx,QWORD PTR [rsi+0x140]
   140027ff6:	call   0x14001c4ac
   140027ffb:	cmp    ebx,eax
   140027ffd:	je     0x140027fbc
   140027fff:	mov    eax,0x1
   140028004:	mov    rbx,QWORD PTR [rsp+0x38]
   140028009:	mov    rbp,QWORD PTR [rsp+0x40]
   14002800e:	mov    rsi,QWORD PTR [rsp+0x48]
   140028013:	add    rsp,0x20
   140028017:	pop    rdi
   140028018:	ret    
   140028019:	int3   
   14002801a:	int3   
   14002801b:	int3   
   14002801c:	mov    rax,rsp
   14002801f:	mov    QWORD PTR [rax+0x8],rbx
   140028023:	mov    QWORD PTR [rax+0x10],rbp
   140028027:	mov    QWORD PTR [rax+0x18],rsi
   14002802b:	mov    QWORD PTR [rax+0x20],rdi
   14002802f:	push   r12
   140028031:	push   r14
   140028033:	push   r15
   140028035:	sub    rsp,0x20
   140028039:	xor    ebx,ebx
   14002803b:	mov    r15,r8
   14002803e:	mov    edi,edx
   140028040:	mov    r12,rcx
   140028043:	mov    eax,0x1
   140028048:	mov    esi,ebx
   14002804a:	test   edx,edx
   14002804c:	js     0x14002808f
   14002804e:	test   eax,eax
   140028050:	je     0x140028091
   140028052:	mov    rcx,QWORD PTR [r15]
   140028055:	lea    eax,[rsi+rdi*1]
   140028058:	cdq    
   140028059:	sub    eax,edx
   14002805b:	sar    eax,1
   14002805d:	movsxd rbp,eax
   140028060:	mov    r14,rbp
   140028063:	shl    r14,0x4
   140028067:	mov    rdx,QWORD PTR [r14+r12*1]
   14002806b:	call   0x140028c40
   140028070:	test   eax,eax
   140028072:	jne    0x140028081
   140028074:	lea    rcx,[r12+0x8]
   140028079:	add    rcx,r14
   14002807c:	mov    QWORD PTR [r15],rcx
   14002807f:	jmp    0x14002808b
   140028081:	jns    0x140028088
   140028083:	lea    edi,[rbp-0x1]
   140028086:	jmp    0x14002808b
   140028088:	lea    esi,[rbp+0x1]
   14002808b:	cmp    esi,edi
   14002808d:	jle    0x14002804e
   14002808f:	test   eax,eax
   140028091:	mov    rbp,QWORD PTR [rsp+0x48]
   140028096:	mov    rsi,QWORD PTR [rsp+0x50]
   14002809b:	mov    rdi,QWORD PTR [rsp+0x58]
   1400280a0:	sete   bl
   1400280a3:	mov    eax,ebx
   1400280a5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400280aa:	add    rsp,0x20
   1400280ae:	pop    r15
   1400280b0:	pop    r14
   1400280b2:	pop    r12
   1400280b4:	ret    
   1400280b5:	int3   
   1400280b6:	int3   
   1400280b7:	int3   
   1400280b8:	rex push rbp
   1400280ba:	push   rbx
   1400280bb:	push   rsi
   1400280bc:	push   rdi
   1400280bd:	push   r12
   1400280bf:	push   r14
   1400280c1:	push   r15
   1400280c3:	mov    rbp,rsp
   1400280c6:	sub    rsp,0x40
   1400280ca:	mov    rax,QWORD PTR [rip+0x140ff]        # 0x14003c1d0
   1400280d1:	xor    rax,rsp
   1400280d4:	mov    QWORD PTR [rbp-0x10],rax
   1400280d8:	mov    r14,r8
   1400280db:	mov    r15,rdx
   1400280de:	mov    rsi,rcx
   1400280e1:	call   0x14000a3ec
   1400280e6:	xor    edx,edx
   1400280e8:	lea    rcx,[rbp-0x20]
   1400280ec:	lea    r8d,[rdx+0xc]
   1400280f0:	mov    rdi,rax
   1400280f3:	call   0x140006f70
   1400280f8:	call   0x14000a3ec
   1400280fd:	lea    rcx,[rbp-0x20]
   140028101:	xor    r12d,r12d
   140028104:	mov    QWORD PTR [rax+0x470],rcx
   14002810b:	test   rsi,rsi
   14002810e:	jne    0x14002811c
   140028110:	or     DWORD PTR [rbp-0x20],0x104
   140028117:	jmp    0x140028236
   14002811c:	lea    rax,[rsi+0x80]
   140028123:	lea    rbx,[rdi+0x148]
   14002812a:	mov    QWORD PTR [rdi+0x140],rsi
   140028131:	mov    QWORD PTR [rbx],rax
   140028134:	test   rax,rax
   140028137:	je     0x140028156
   140028139:	cmp    WORD PTR [rax],r12w
   14002813d:	je     0x140028156
   14002813f:	mov    edx,DWORD PTR [rip+0xda63]        # 0x140035ba8
   140028145:	lea    rcx,[rip+0xd704]        # 0x140035850
   14002814c:	mov    r8,rbx
   14002814f:	dec    edx
   140028151:	call   0x14002801c
   140028156:	mov    DWORD PTR [rbp-0x20],r12d
   14002815a:	mov    rax,QWORD PTR [rdi+0x140]
   140028161:	test   rax,rax
   140028164:	je     0x1400281df
   140028166:	cmp    WORD PTR [rax],r12w
   14002816a:	je     0x1400281df
   14002816c:	mov    rax,QWORD PTR [rbx]
   14002816f:	test   rax,rax
   140028172:	je     0x140028185
   140028174:	cmp    WORD PTR [rax],r12w
   140028178:	je     0x140028185
   14002817a:	lea    rcx,[rbp-0x20]
   14002817e:	call   0x1400279b0
   140028183:	jmp    0x14002818e
   140028185:	lea    rcx,[rbp-0x20]
   140028189:	call   0x140027a64
   14002818e:	cmp    DWORD PTR [rbp-0x20],r12d
   140028192:	jne    0x14002824c
   140028198:	mov    edx,DWORD PTR [rip+0xda06]        # 0x140035ba4
   14002819e:	lea    r8,[rdi+0x140]
   1400281a5:	lea    rcx,[rip+0xca74]        # 0x140034c20
   1400281ac:	dec    edx
   1400281ae:	call   0x14002801c
   1400281b3:	test   eax,eax
   1400281b5:	je     0x140028242
   1400281bb:	mov    rax,QWORD PTR [rbx]
   1400281be:	test   rax,rax
   1400281c1:	je     0x1400281d4
   1400281c3:	cmp    WORD PTR [rax],r12w
   1400281c7:	je     0x1400281d4
   1400281c9:	lea    rcx,[rbp-0x20]
   1400281cd:	call   0x1400279b0
   1400281d2:	jmp    0x140028242
   1400281d4:	lea    rcx,[rbp-0x20]
   1400281d8:	call   0x140027a64
   1400281dd:	jmp    0x140028242
   1400281df:	mov    rax,QWORD PTR [rbx]
   1400281e2:	test   rax,rax
   1400281e5:	je     0x14002822f
   1400281e7:	cmp    WORD PTR [rax],r12w
   1400281eb:	je     0x14002822f
   1400281ed:	call   0x14000a3ec
   1400281f2:	mov    rbx,rax
   1400281f5:	mov    rcx,QWORD PTR [rax+0x148]
   1400281fc:	call   0x14001c4ac
   140028201:	mov    ecx,r12d
   140028204:	mov    edx,0x1
   140028209:	cmp    rax,0x3
   14002820d:	sete   cl
   140028210:	mov    DWORD PTR [rbx+0x15c],ecx
   140028216:	lea    rcx,[rip+0xfffffffffffff62b]        # 0x140027848
   14002821d:	call   QWORD PTR [rip+0x3e7d]        # 0x14002c0a0
   140028223:	test   BYTE PTR [rbp-0x20],0x4
   140028227:	jne    0x140028242
   140028229:	mov    DWORD PTR [rbp-0x20],r12d
   14002822d:	jmp    0x140028242
   14002822f:	mov    DWORD PTR [rbp-0x20],0x104
   140028236:	call   QWORD PTR [rip+0x3e6c]        # 0x14002c0a8
   14002823c:	mov    DWORD PTR [rbp-0x1c],eax
   14002823f:	mov    DWORD PTR [rbp-0x18],eax
   140028242:	cmp    DWORD PTR [rbp-0x20],r12d
   140028246:	je     0x140028331
   14002824c:	lea    rax,[rsi+0x100]
   140028253:	neg    rsi
   140028256:	lea    rdx,[rbp-0x20]
   14002825a:	sbb    rcx,rcx
   14002825d:	and    rcx,rax
   140028260:	call   0x140027e9c
   140028265:	mov    ebx,eax
   140028267:	test   eax,eax
   140028269:	je     0x140028331
   14002826f:	lea    ecx,[rax-0xfde8]
   140028275:	cmp    ecx,0x1
   140028278:	jbe    0x140028331
   14002827e:	movzx  ecx,ax
   140028281:	call   QWORD PTR [rip+0x3de9]        # 0x14002c070
   140028287:	test   eax,eax
   140028289:	je     0x140028331
   14002828f:	mov    ecx,DWORD PTR [rbp-0x1c]
   140028292:	mov    edx,0x1
   140028297:	call   QWORD PTR [rip+0x3e3b]        # 0x14002c0d8
   14002829d:	test   eax,eax
   14002829f:	je     0x140028331
   1400282a5:	test   r15,r15
   1400282a8:	je     0x1400282ad
   1400282aa:	mov    DWORD PTR [r15],ebx
   1400282ad:	mov    ecx,DWORD PTR [rbp-0x1c]
   1400282b0:	lea    rdx,[rdi+0x398]
   1400282b7:	mov    edi,0x55
   1400282bc:	mov    r8d,edi
   1400282bf:	call   0x14000f854
   1400282c4:	test   r14,r14
   1400282c7:	je     0x14002832a
   1400282c9:	mov    ecx,DWORD PTR [rbp-0x1c]
   1400282cc:	lea    rdx,[r14+0x120]
   1400282d3:	mov    r8d,edi
   1400282d6:	call   0x14000f854
   1400282db:	mov    ecx,DWORD PTR [rbp-0x1c]
   1400282de:	mov    edi,0x40
   1400282e3:	mov    r9d,edi
   1400282e6:	mov    r8,r14
   1400282e9:	mov    edx,0x1001
   1400282ee:	call   QWORD PTR [rip+0x3dec]        # 0x14002c0e0
   1400282f4:	test   eax,eax
   1400282f6:	je     0x140028331
   1400282f8:	mov    ecx,DWORD PTR [rbp-0x18]
   1400282fb:	lea    r8,[r14+0x80]
   140028302:	mov    r9d,edi
   140028305:	mov    edx,0x1002
   14002830a:	call   QWORD PTR [rip+0x3dd0]        # 0x14002c0e0
   140028310:	test   eax,eax
   140028312:	je     0x140028331
   140028314:	lea    rdx,[r14+0x100]
   14002831b:	lea    r9d,[rdi-0x36]
   14002831f:	lea    r8d,[rdi-0x30]
   140028323:	mov    ecx,ebx
   140028325:	call   0x1400288ac
   14002832a:	mov    eax,0x1
   14002832f:	jmp    0x140028333
   140028331:	xor    eax,eax
   140028333:	mov    rcx,QWORD PTR [rbp-0x10]
   140028337:	xor    rcx,rsp
   14002833a:	call   0x14000c380
   14002833f:	add    rsp,0x40
   140028343:	pop    r15
   140028345:	pop    r14
   140028347:	pop    r12
   140028349:	pop    rdi
   14002834a:	pop    rsi
   14002834b:	pop    rbx
   14002834c:	pop    rbp
   14002834d:	ret    
   14002834e:	int3   
   14002834f:	int3   
   140028350:	mov    QWORD PTR [rsp+0x8],rbx
   140028355:	mov    QWORD PTR [rsp+0x10],rbp
   14002835a:	mov    QWORD PTR [rsp+0x18],rsi
   14002835f:	push   rdi
   140028360:	push   r12
   140028362:	push   r14
   140028364:	sub    rsp,0x10
   140028368:	and    DWORD PTR [r8],0x0
   14002836c:	and    DWORD PTR [r8+0x4],0x0
   140028371:	and    DWORD PTR [r8+0x8],0x0
   140028376:	mov    r10,r8
   140028379:	mov    edi,edx
   14002837b:	mov    rbp,rcx
   14002837e:	mov    ebx,0x404e
   140028383:	test   edx,edx
   140028385:	je     0x1400284cc
   14002838b:	xor    r11d,r11d
   14002838e:	xor    r8d,r8d
   140028391:	xor    r9d,r9d
   140028394:	lea    r12d,[r11+0x1]
   140028398:	movsd  xmm0,QWORD PTR [r10]
   14002839d:	mov    r14d,DWORD PTR [r10+0x8]
   1400283a1:	mov    ecx,r8d
   1400283a4:	shr    ecx,0x1f
   1400283a7:	add    r8d,r8d
   1400283aa:	add    r9d,r9d
   1400283ad:	movsd  QWORD PTR [rsp],xmm0
   1400283b2:	or     r9d,ecx
   1400283b5:	lea    edx,[r11+r11*1]
   1400283b9:	mov    eax,r11d
   1400283bc:	shr    eax,0x1f
   1400283bf:	add    r9d,r9d
   1400283c2:	or     r8d,eax
   1400283c5:	mov    eax,edx
   1400283c7:	add    edx,edx
   1400283c9:	mov    ecx,r8d
   1400283cc:	shr    eax,0x1f
   1400283cf:	add    r8d,r8d
   1400283d2:	shr    ecx,0x1f
   1400283d5:	or     r8d,eax
   1400283d8:	xor    eax,eax
   1400283da:	or     r9d,ecx
   1400283dd:	mov    ecx,DWORD PTR [rsp]
   1400283e0:	mov    DWORD PTR [r10],edx
   1400283e3:	lea    esi,[rdx+rcx*1]
   1400283e6:	mov    DWORD PTR [r10+0x4],r8d
   1400283ea:	mov    DWORD PTR [r10+0x8],r9d
   1400283ee:	cmp    esi,edx
   1400283f0:	jb     0x1400283f6
   1400283f2:	cmp    esi,ecx
   1400283f4:	jae    0x1400283f9
   1400283f6:	mov    eax,r12d
   1400283f9:	mov    DWORD PTR [r10],esi
   1400283fc:	test   eax,eax
   1400283fe:	je     0x140028424
   140028400:	mov    eax,r8d
   140028403:	inc    r8d
   140028406:	xor    ecx,ecx
   140028408:	cmp    r8d,eax
   14002840b:	jb     0x140028412
   14002840d:	cmp    r8d,r12d
   140028410:	jae    0x140028415
   140028412:	mov    ecx,r12d
   140028415:	mov    DWORD PTR [r10+0x4],r8d
   140028419:	test   ecx,ecx
   14002841b:	je     0x140028424
   14002841d:	inc    r9d
   140028420:	mov    DWORD PTR [r10+0x8],r9d
   140028424:	mov    rax,QWORD PTR [rsp]
   140028428:	xor    ecx,ecx
   14002842a:	shr    rax,0x20
   14002842e:	lea    r11d,[r8+rax*1]
   140028432:	cmp    r11d,r8d
   140028435:	jb     0x14002843c
   140028437:	cmp    r11d,eax
   14002843a:	jae    0x14002843f
   14002843c:	mov    ecx,r12d
   14002843f:	mov    DWORD PTR [r10+0x4],r11d
   140028443:	test   ecx,ecx
   140028445:	je     0x14002844e
   140028447:	add    r9d,r12d
   14002844a:	mov    DWORD PTR [r10+0x8],r9d
   14002844e:	add    r9d,r14d
   140028451:	lea    edx,[rsi+rsi*1]
   140028454:	mov    ecx,r11d
   140028457:	shr    ecx,0x1f
   14002845a:	lea    r8d,[r11+r11*1]
   14002845e:	add    r9d,r9d
   140028461:	or     r9d,ecx
   140028464:	mov    eax,esi
   140028466:	mov    DWORD PTR [r10],edx
   140028469:	shr    eax,0x1f
   14002846c:	mov    DWORD PTR [r10+0x8],r9d
   140028470:	or     r8d,eax
   140028473:	xor    eax,eax
   140028475:	mov    DWORD PTR [r10+0x4],r8d
   140028479:	movsx  ecx,BYTE PTR [rbp+0x0]
   14002847d:	lea    r11d,[rdx+rcx*1]
   140028481:	cmp    r11d,edx
   140028484:	jb     0x14002848b
   140028486:	cmp    r11d,ecx
   140028489:	jae    0x14002848e
   14002848b:	mov    eax,r12d
   14002848e:	mov    DWORD PTR [r10],r11d
   140028491:	test   eax,eax
   140028493:	je     0x1400284b9
   140028495:	mov    eax,r8d
   140028498:	inc    r8d
   14002849b:	xor    ecx,ecx
   14002849d:	cmp    r8d,eax
   1400284a0:	jb     0x1400284a7
   1400284a2:	cmp    r8d,r12d
   1400284a5:	jae    0x1400284aa
   1400284a7:	mov    ecx,r12d
   1400284aa:	mov    DWORD PTR [r10+0x4],r8d
   1400284ae:	test   ecx,ecx
   1400284b0:	je     0x1400284b9
   1400284b2:	inc    r9d
   1400284b5:	mov    DWORD PTR [r10+0x8],r9d
   1400284b9:	add    rbp,r12
   1400284bc:	mov    DWORD PTR [r10+0x4],r8d
   1400284c0:	mov    DWORD PTR [r10+0x8],r9d
   1400284c4:	dec    edi
   1400284c6:	jne    0x140028398
   1400284cc:	cmp    DWORD PTR [r10+0x8],0x0
   1400284d1:	jne    0x14002850d
   1400284d3:	mov    r8d,DWORD PTR [r10+0x4]
   1400284d7:	mov    edx,DWORD PTR [r10]
   1400284da:	mov    eax,r8d
   1400284dd:	mov    r9d,r8d
   1400284e0:	shl    eax,0x10
   1400284e3:	mov    ecx,edx
   1400284e5:	shl    edx,0x10
   1400284e8:	shr    ecx,0x10
   1400284eb:	shr    r9d,0x10
   1400284ef:	mov    DWORD PTR [r10],edx
   1400284f2:	mov    r8d,ecx
   1400284f5:	or     r8d,eax
   1400284f8:	mov    eax,0xfff0
   1400284fd:	add    bx,ax
   140028500:	test   r9d,r9d
   140028503:	je     0x1400284d7
   140028505:	mov    DWORD PTR [r10+0x4],r8d
   140028509:	mov    DWORD PTR [r10+0x8],r9d
   14002850d:	mov    edx,DWORD PTR [r10+0x8]
   140028511:	mov    r11d,0x8000
   140028517:	test   r11d,edx
   14002851a:	jne    0x140028554
   14002851c:	mov    r9d,DWORD PTR [r10]
   14002851f:	mov    r8d,DWORD PTR [r10+0x4]
   140028523:	mov    ecx,r8d
   140028526:	mov    eax,r9d
   140028529:	add    r8d,r8d
   14002852c:	shr    eax,0x1f
   14002852f:	add    edx,edx
   140028531:	shr    ecx,0x1f
   140028534:	or     r8d,eax
   140028537:	mov    eax,0xffff
   14002853c:	or     edx,ecx
   14002853e:	add    bx,ax
   140028541:	add    r9d,r9d
   140028544:	test   r11d,edx
   140028547:	je     0x140028523
   140028549:	mov    DWORD PTR [r10],r9d
   14002854c:	mov    DWORD PTR [r10+0x4],r8d
   140028550:	mov    DWORD PTR [r10+0x8],edx
   140028554:	mov    rbp,QWORD PTR [rsp+0x38]
   140028559:	mov    rsi,QWORD PTR [rsp+0x40]
   14002855e:	mov    WORD PTR [r10+0xa],bx
   140028563:	mov    rbx,QWORD PTR [rsp+0x30]
   140028568:	add    rsp,0x10
   14002856c:	pop    r14
   14002856e:	pop    r12
   140028570:	pop    rdi
   140028571:	ret    
   140028572:	int3   
   140028573:	int3   
   140028574:	mov    QWORD PTR [rsp+0x18],rbx
   140028579:	mov    DWORD PTR [rsp+0x8],ecx
   14002857d:	push   rsi
   14002857e:	push   rdi
   14002857f:	push   r14
   140028581:	sub    rsp,0x20
   140028585:	movsxd rbx,ecx
   140028588:	cmp    ebx,0xfffffffe
   14002858b:	jne    0x1400285a5
   14002858d:	call   0x140009c44
   140028592:	and    DWORD PTR [rax],0x0
   140028595:	call   0x140009cb4
   14002859a:	mov    DWORD PTR [rax],0x9
   1400285a0:	jmp    0x140028626
   1400285a5:	test   ecx,ecx
   1400285a7:	js     0x14002860e
   1400285a9:	cmp    ebx,DWORD PTR [rip+0x17b39]        # 0x1400400e8
   1400285af:	jae    0x14002860e
   1400285b1:	mov    rax,rbx
   1400285b4:	mov    rdi,rbx
   1400285b7:	sar    rdi,0x5
   1400285bb:	lea    r14,[rip+0x1574e]        # 0x14003dd10
   1400285c2:	and    eax,0x1f
   1400285c5:	imul   rsi,rax,0x58
   1400285c9:	mov    rax,QWORD PTR [r14+rdi*8]
   1400285cd:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   1400285d2:	and    ecx,0x1
   1400285d5:	je     0x14002860e
   1400285d7:	mov    ecx,ebx
   1400285d9:	call   0x14001d088
   1400285de:	nop
   1400285df:	mov    rax,QWORD PTR [r14+rdi*8]
   1400285e3:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   1400285e8:	je     0x1400285f5
   1400285ea:	mov    ecx,ebx
   1400285ec:	call   0x140028638
   1400285f1:	mov    edi,eax
   1400285f3:	jmp    0x140028603
   1400285f5:	call   0x140009cb4
   1400285fa:	mov    DWORD PTR [rax],0x9
   140028600:	or     edi,0xffffffff
   140028603:	mov    ecx,ebx
   140028605:	call   0x14001d5e4
   14002860a:	mov    eax,edi
   14002860c:	jmp    0x140028629
   14002860e:	call   0x140009c44
   140028613:	and    DWORD PTR [rax],0x0
   140028616:	call   0x140009cb4
   14002861b:	mov    DWORD PTR [rax],0x9
   140028621:	call   0x140008d58
   140028626:	or     eax,0xffffffff
   140028629:	mov    rbx,QWORD PTR [rsp+0x50]
   14002862e:	add    rsp,0x20
   140028632:	pop    r14
   140028634:	pop    rdi
   140028635:	pop    rsi
   140028636:	ret    
   140028637:	int3   
   140028638:	mov    QWORD PTR [rsp+0x8],rbx
   14002863d:	push   rdi
   14002863e:	sub    rsp,0x20
   140028642:	movsxd rdi,ecx
   140028645:	mov    ecx,edi
   140028647:	call   0x14001d3c4
   14002864c:	cmp    rax,0xffffffffffffffff
   140028650:	je     0x1400286ab
   140028652:	mov    rax,QWORD PTR [rip+0x156b7]        # 0x14003dd10
   140028659:	mov    ecx,0x2
   14002865e:	cmp    edi,0x1
   140028661:	jne    0x14002866c
   140028663:	test   BYTE PTR [rax+0xb8],dil
   14002866a:	jne    0x140028676
   14002866c:	cmp    edi,ecx
   14002866e:	jne    0x14002868d
   140028670:	test   BYTE PTR [rax+0x60],0x1
   140028674:	je     0x14002868d
   140028676:	call   0x14001d3c4
   14002867b:	mov    ecx,0x1
   140028680:	mov    rbx,rax
   140028683:	call   0x14001d3c4
   140028688:	cmp    rax,rbx
   14002868b:	je     0x1400286ab
   14002868d:	mov    ecx,edi
   14002868f:	call   0x14001d3c4
   140028694:	mov    rcx,rax
   140028697:	call   QWORD PTR [rip+0x3b23]        # 0x14002c1c0
   14002869d:	test   eax,eax
   14002869f:	jne    0x1400286ab
   1400286a1:	call   QWORD PTR [rip+0x3aa9]        # 0x14002c150
   1400286a7:	mov    ebx,eax
   1400286a9:	jmp    0x1400286ad
   1400286ab:	xor    ebx,ebx
   1400286ad:	mov    ecx,edi
   1400286af:	call   0x14001d318
   1400286b4:	mov    rdx,rdi
   1400286b7:	mov    rcx,rdi
   1400286ba:	sar    rcx,0x5
   1400286be:	and    edx,0x1f
   1400286c1:	lea    r8,[rip+0x15648]        # 0x14003dd10
   1400286c8:	mov    rcx,QWORD PTR [r8+rcx*8]
   1400286cc:	imul   rdx,rdx,0x58
   1400286d0:	mov    BYTE PTR [rcx+rdx*1+0x8],0x0
   1400286d5:	test   ebx,ebx
   1400286d7:	je     0x1400286e5
   1400286d9:	mov    ecx,ebx
   1400286db:	call   0x140009c64
   1400286e0:	or     eax,0xffffffff
   1400286e3:	jmp    0x1400286e7
   1400286e5:	xor    eax,eax
   1400286e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400286ec:	add    rsp,0x20
   1400286f0:	pop    rdi
   1400286f1:	ret    
   1400286f2:	int3   
   1400286f3:	int3   
   1400286f4:	rex push rbx
   1400286f6:	sub    rsp,0x20
   1400286fa:	test   BYTE PTR [rcx+0x18],0x83
   1400286fe:	mov    rbx,rcx
   140028701:	je     0x140028725
   140028703:	test   BYTE PTR [rcx+0x18],0x8
   140028707:	je     0x140028725
   140028709:	mov    rcx,QWORD PTR [rcx+0x10]
   14002870d:	call   0x140007dc0
   140028712:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140028719:	xor    eax,eax
   14002871b:	mov    QWORD PTR [rbx],rax
   14002871e:	mov    QWORD PTR [rbx+0x10],rax
   140028722:	mov    DWORD PTR [rbx+0x8],eax
   140028725:	add    rsp,0x20
   140028729:	pop    rbx
   14002872a:	ret    
   14002872b:	int3   
   14002872c:	mov    QWORD PTR [rsp+0x18],rbx
   140028731:	mov    QWORD PTR [rsp+0x20],rsi
   140028736:	push   rdi
   140028737:	sub    rsp,0x70
   14002873b:	movaps XMMWORD PTR [rsp+0x60],xmm6
   140028740:	mov    rax,QWORD PTR [rip+0x13a89]        # 0x14003c1d0
   140028747:	xor    rax,rsp
   14002874a:	mov    QWORD PTR [rsp+0x58],rax
   14002874f:	mov    rsi,rcx
   140028752:	mov    rbx,rcx
   140028755:	mov    rdi,rdx
   140028758:	lea    rcx,[rsp+0x20]
   14002875d:	mov    rdx,r8
   140028760:	call   0x140008fac
   140028765:	test   rdi,rdi
   140028768:	je     0x14002876d
   14002876a:	mov    QWORD PTR [rdi],rbx
   14002876d:	test   rsi,rsi
   140028770:	jne    0x14002878a
   140028772:	call   0x140009cb4
   140028777:	mov    DWORD PTR [rax],0x16
   14002877d:	call   0x140008d58
   140028782:	xorps  xmm6,xmm6
   140028785:	jmp    0x140028846
   14002878a:	mov    rdx,QWORD PTR [rsp+0x20]
   14002878f:	cmp    DWORD PTR [rdx+0xd4],0x1
   140028796:	jle    0x1400287b1
   140028798:	movzx  ecx,BYTE PTR [rbx]
   14002879b:	lea    r8,[rsp+0x20]
   1400287a0:	mov    edx,0x8
   1400287a5:	call   0x14001f9b8
   1400287aa:	mov    rdx,QWORD PTR [rsp+0x20]
   1400287af:	jmp    0x1400287c2
   1400287b1:	movzx  ecx,BYTE PTR [rbx]
   1400287b4:	mov    rax,QWORD PTR [rdx+0x108]
   1400287bb:	movzx  eax,WORD PTR [rax+rcx*2]
   1400287bf:	and    eax,0x8
   1400287c2:	test   eax,eax
   1400287c4:	je     0x1400287cb
   1400287c6:	inc    rbx
   1400287c9:	jmp    0x14002878f
   1400287cb:	lea    r8,[rsp+0x20]
   1400287d0:	lea    rcx,[rsp+0x40]
   1400287d5:	mov    rdx,rbx
   1400287d8:	call   0x140028f64
   1400287dd:	test   rdi,rdi
   1400287e0:	je     0x1400287ec
   1400287e2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400287e6:	add    rcx,rbx
   1400287e9:	mov    QWORD PTR [rdi],rcx
   1400287ec:	test   DWORD PTR [rax],0x240
   1400287f2:	je     0x140028801
   1400287f4:	xorps  xmm6,xmm6
   1400287f7:	test   rdi,rdi
   1400287fa:	je     0x140028846
   1400287fc:	mov    QWORD PTR [rdi],rsi
   1400287ff:	jmp    0x140028846
   140028801:	test   BYTE PTR [rax],0x81
   140028804:	je     0x14002881c
   140028806:	cmp    BYTE PTR [rbx],0x2d
   140028809:	movsd  xmm6,QWORD PTR [rip+0x14fdf]        # 0x14003d7f0
   140028811:	jne    0x140028834
   140028813:	xorps  xmm6,XMMWORD PTR [rip+0xab16]        # 0x140033330
   14002881a:	jmp    0x140028834
   14002881c:	test   DWORD PTR [rax],0x100
   140028822:	je     0x140028841
   140028824:	movsd  xmm0,QWORD PTR [rax+0x10]
   140028829:	xorps  xmm6,xmm6
   14002882c:	ucomisd xmm0,xmm6
   140028830:	jp     0x140028841
   140028832:	jne    0x140028841
   140028834:	call   0x140009cb4
   140028839:	mov    DWORD PTR [rax],0x22
   14002883f:	jmp    0x140028846
   140028841:	movsd  xmm6,QWORD PTR [rax+0x10]
   140028846:	cmp    BYTE PTR [rsp+0x38],0x0
   14002884b:	je     0x140028859
   14002884d:	mov    rax,QWORD PTR [rsp+0x30]
   140028852:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140028859:	movaps xmm0,xmm6
   14002885c:	mov    rcx,QWORD PTR [rsp+0x58]
   140028861:	xor    rcx,rsp
   140028864:	call   0x14000c380
   140028869:	lea    r11,[rsp+0x70]
   14002886e:	mov    rbx,QWORD PTR [r11+0x20]
   140028872:	mov    rsi,QWORD PTR [r11+0x28]
   140028876:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14002887b:	mov    rsp,r11
   14002887e:	pop    rdi
   14002887f:	ret    
   140028880:	xor    r8d,r8d
   140028883:	jmp    0x14002872c
   140028888:	sub    rsp,0x38
   14002888c:	xor    eax,eax
   14002888e:	cmp    r9d,0xa
   140028892:	jne    0x14002889d
   140028894:	test   rcx,rcx
   140028897:	jns    0x14002889d
   140028899:	lea    eax,[r9-0x9]
   14002889d:	mov    DWORD PTR [rsp+0x20],eax
   1400288a1:	call   0x140028920
   1400288a6:	add    rsp,0x38
   1400288aa:	ret    
   1400288ab:	int3   
   1400288ac:	sub    rsp,0x38
   1400288b0:	cmp    r9d,0xa
   1400288b4:	jne    0x1400288c4
   1400288b6:	test   ecx,ecx
   1400288b8:	jns    0x1400288c4
   1400288ba:	mov    DWORD PTR [rsp+0x20],0x1
   1400288c2:	jmp    0x1400288c9
   1400288c4:	and    DWORD PTR [rsp+0x20],0x0
   1400288c9:	call   0x140028a34
   1400288ce:	add    rsp,0x38
   1400288d2:	ret    
   1400288d3:	int3   
   1400288d4:	sub    rsp,0x38
   1400288d8:	xor    eax,eax
   1400288da:	cmp    r9d,0xa
   1400288de:	jne    0x1400288e8
   1400288e0:	test   ecx,ecx
   1400288e2:	jns    0x1400288e8
   1400288e4:	lea    eax,[r9-0x9]
   1400288e8:	mov    DWORD PTR [rsp+0x20],eax
   1400288ec:	call   0x140028a34
   1400288f1:	add    rsp,0x38
   1400288f5:	ret    
   1400288f6:	int3   
   1400288f7:	int3   
   1400288f8:	sub    rsp,0x38
   1400288fc:	and    DWORD PTR [rsp+0x20],0x0
   140028901:	call   0x140028920
   140028906:	add    rsp,0x38
   14002890a:	ret    
   14002890b:	int3   
   14002890c:	sub    rsp,0x38
   140028910:	and    DWORD PTR [rsp+0x20],0x0
   140028915:	call   0x140028a34
   14002891a:	add    rsp,0x38
   14002891e:	ret    
   14002891f:	int3   
   140028920:	mov    QWORD PTR [rsp+0x8],rbx
   140028925:	mov    QWORD PTR [rsp+0x10],rbp
   14002892a:	mov    QWORD PTR [rsp+0x18],rsi
   14002892f:	push   rdi
   140028930:	sub    rsp,0x20
   140028934:	xor    ebp,ebp
   140028936:	mov    esi,r9d
   140028939:	mov    rdi,r8
   14002893c:	mov    r10,rdx
   14002893f:	mov    r11,rcx
   140028942:	test   rdx,rdx
   140028945:	jne    0x14002895f
   140028947:	call   0x140009cb4
   14002894c:	mov    ebx,0x16
   140028951:	mov    DWORD PTR [rax],ebx
   140028953:	call   0x140008d58
   140028958:	mov    eax,ebx
   14002895a:	jmp    0x140028a1c
   14002895f:	test   r8,r8
   140028962:	je     0x140028947
   140028964:	mov    WORD PTR [rdx],bp
   140028967:	mov    edx,DWORD PTR [rsp+0x50]
   14002896b:	mov    eax,edx
   14002896d:	neg    eax
   14002896f:	sbb    rcx,rcx
   140028972:	neg    rcx
   140028975:	inc    rcx
   140028978:	cmp    r8,rcx
   14002897b:	ja     0x140028989
   14002897d:	call   0x140009cb4
   140028982:	mov    ebx,0x22
   140028987:	jmp    0x140028951
   140028989:	lea    eax,[rsi-0x2]
   14002898c:	mov    ebx,0x22
   140028991:	cmp    eax,ebx
   140028993:	ja     0x140028947
   140028995:	mov    rcx,rbp
   140028998:	mov    r8,r10
   14002899b:	test   edx,edx
   14002899d:	je     0x1400289b0
   14002899f:	lea    eax,[rbx+0xb]
   1400289a2:	lea    r8,[r10+0x2]
   1400289a6:	lea    ecx,[rbx-0x21]
   1400289a9:	mov    WORD PTR [r10],ax
   1400289ad:	neg    r11
   1400289b0:	mov    r9,r8
   1400289b3:	xor    edx,edx
   1400289b5:	mov    rax,r11
   1400289b8:	div    rsi
   1400289bb:	mov    r11,rax
   1400289be:	cmp    edx,0x9
   1400289c1:	jbe    0x1400289c9
   1400289c3:	add    dx,0x57
   1400289c7:	jmp    0x1400289cd
   1400289c9:	add    dx,0x30
   1400289cd:	mov    WORD PTR [r8],dx
   1400289d1:	inc    rcx
   1400289d4:	add    r8,0x2
   1400289d8:	test   rax,rax
   1400289db:	je     0x1400289e2
   1400289dd:	cmp    rcx,rdi
   1400289e0:	jb     0x1400289b3
   1400289e2:	cmp    rcx,rdi
   1400289e5:	jb     0x1400289f5
   1400289e7:	mov    WORD PTR [r10],bp
   1400289eb:	call   0x140009cb4
   1400289f0:	jmp    0x140028951
   1400289f5:	mov    WORD PTR [r8],bp
   1400289f9:	sub    r8,0x2
   1400289fd:	movzx  eax,WORD PTR [r9]
   140028a01:	movzx  ecx,WORD PTR [r8]
   140028a05:	mov    WORD PTR [r8],ax
   140028a09:	mov    WORD PTR [r9],cx
   140028a0d:	add    r9,0x2
   140028a11:	sub    r8,0x2
   140028a15:	cmp    r9,r8
   140028a18:	jb     0x1400289fd
   140028a1a:	xor    eax,eax
   140028a1c:	mov    rbx,QWORD PTR [rsp+0x30]
   140028a21:	mov    rbp,QWORD PTR [rsp+0x38]
   140028a26:	mov    rsi,QWORD PTR [rsp+0x40]
   140028a2b:	add    rsp,0x20
   140028a2f:	pop    rdi
   140028a30:	ret    
   140028a31:	int3   
   140028a32:	int3   
   140028a33:	int3   
   140028a34:	mov    QWORD PTR [rsp+0x8],rbx
   140028a39:	mov    QWORD PTR [rsp+0x10],rbp
   140028a3e:	mov    QWORD PTR [rsp+0x18],rsi
   140028a43:	push   rdi
   140028a44:	sub    rsp,0x20
   140028a48:	xor    ebp,ebp
   140028a4a:	mov    esi,r9d
   140028a4d:	mov    rdi,r8
   140028a50:	mov    r10,rdx
   140028a53:	mov    r11d,ecx
   140028a56:	test   rdx,rdx
   140028a59:	jne    0x140028a73
   140028a5b:	call   0x140009cb4
   140028a60:	mov    ebx,0x16
   140028a65:	mov    DWORD PTR [rax],ebx
   140028a67:	call   0x140008d58
   140028a6c:	mov    eax,ebx
   140028a6e:	jmp    0x140028b2f
   140028a73:	test   r8,r8
   140028a76:	je     0x140028a5b
   140028a78:	mov    WORD PTR [rdx],bp
   140028a7b:	mov    edx,DWORD PTR [rsp+0x50]
   140028a7f:	mov    eax,edx
   140028a81:	neg    eax
   140028a83:	sbb    rcx,rcx
   140028a86:	neg    rcx
   140028a89:	inc    rcx
   140028a8c:	cmp    r8,rcx
   140028a8f:	ja     0x140028a9d
   140028a91:	call   0x140009cb4
   140028a96:	mov    ebx,0x22
   140028a9b:	jmp    0x140028a65
   140028a9d:	lea    eax,[r9-0x2]
   140028aa1:	mov    ebx,0x22
   140028aa6:	cmp    eax,ebx
   140028aa8:	ja     0x140028a5b
   140028aaa:	mov    rcx,rbp
   140028aad:	mov    r8,r10
   140028ab0:	test   edx,edx
   140028ab2:	je     0x140028ac5
   140028ab4:	lea    eax,[rbx+0xb]
   140028ab7:	lea    r8,[r10+0x2]
   140028abb:	lea    ecx,[rbx-0x21]
   140028abe:	mov    WORD PTR [r10],ax
   140028ac2:	neg    r11d
   140028ac5:	mov    r9,r8
   140028ac8:	xor    edx,edx
   140028aca:	mov    eax,r11d
   140028acd:	div    esi
   140028acf:	mov    r11d,eax
   140028ad2:	cmp    edx,0x9
   140028ad5:	jbe    0x140028add
   140028ad7:	add    dx,0x57
   140028adb:	jmp    0x140028ae1
   140028add:	add    dx,0x30
   140028ae1:	mov    WORD PTR [r8],dx
   140028ae5:	inc    rcx
   140028ae8:	add    r8,0x2
   140028aec:	test   eax,eax
   140028aee:	je     0x140028af5
   140028af0:	cmp    rcx,rdi
   140028af3:	jb     0x140028ac8
   140028af5:	cmp    rcx,rdi
   140028af8:	jb     0x140028b08
   140028afa:	mov    WORD PTR [r10],bp
   140028afe:	call   0x140009cb4
   140028b03:	jmp    0x140028a65
   140028b08:	mov    WORD PTR [r8],bp
   140028b0c:	sub    r8,0x2
   140028b10:	movzx  eax,WORD PTR [r9]
   140028b14:	movzx  ecx,WORD PTR [r8]
   140028b18:	mov    WORD PTR [r8],ax
   140028b1c:	mov    WORD PTR [r9],cx
   140028b20:	add    r9,0x2
   140028b24:	sub    r8,0x2
   140028b28:	cmp    r9,r8
   140028b2b:	jb     0x140028b10
   140028b2d:	xor    eax,eax
   140028b2f:	mov    rbx,QWORD PTR [rsp+0x30]
   140028b34:	mov    rbp,QWORD PTR [rsp+0x38]
   140028b39:	mov    rsi,QWORD PTR [rsp+0x40]
   140028b3e:	add    rsp,0x20
   140028b42:	pop    rdi
   140028b43:	ret    
   140028b44:	xor    edx,edx
   140028b46:	lea    r8d,[rdx+0xa]
   140028b4a:	jmp    0x14002922c
   140028b4f:	int3   
   140028b50:	xor    edx,edx
   140028b52:	lea    r8d,[rdx+0xa]
   140028b56:	jmp    0x1400295b8
   140028b5b:	int3   
   140028b5c:	mov    r9,rdx
   140028b5f:	xor    edx,edx
   140028b61:	lea    r8d,[rdx+0xa]
   140028b65:	jmp    0x1400295e8
   140028b6a:	int3   
   140028b6b:	int3   
   140028b6c:	mov    r9,rdx
   140028b6f:	xor    edx,edx
   140028b71:	lea    r8d,[rdx+0xa]
   140028b75:	jmp    0x140029218
   140028b7a:	int3   
   140028b7b:	int3   
   140028b7c:	xor    edx,edx
   140028b7e:	lea    r8d,[rdx+0xa]
   140028b82:	jmp    0x14002922c
   140028b87:	int3   
   140028b88:	mov    r9,rdx
   140028b8b:	xor    edx,edx
   140028b8d:	lea    r8d,[rdx+0xa]
   140028b91:	jmp    0x140029218
   140028b96:	int3   
   140028b97:	int3   
   140028b98:	xor    edx,edx
   140028b9a:	lea    r8d,[rdx+0xa]
   140028b9e:	jmp    0x1400295b8
   140028ba3:	int3   
   140028ba4:	mov    r9,rdx
   140028ba7:	xor    edx,edx
   140028ba9:	lea    r8d,[rdx+0xa]
   140028bad:	jmp    0x1400295e8
   140028bb2:	int3   
   140028bb3:	int3   
   140028bb4:	sub    rsp,0x18
   140028bb8:	movdqa xmm2,XMMWORD PTR [rsp]
   140028bbd:	movzx  eax,dx
   140028bc0:	mov    r8,rcx
   140028bc3:	movd   xmm0,eax
   140028bc7:	xor    r9d,r9d
   140028bca:	pshuflw xmm1,xmm0,0x0
   140028bcf:	pshufd xmm3,xmm1,0x0
   140028bd4:	mov    rax,r8
   140028bd7:	and    eax,0xfff
   140028bdc:	cmp    rax,0xff0
   140028be2:	ja     0x140028c0f
   140028be4:	movdqu xmm1,XMMWORD PTR [r8]
   140028be9:	movdqa xmm0,xmm2
   140028bed:	pxor   xmm0,xmm2
   140028bf1:	movdqa xmm2,xmm0
   140028bf5:	pcmpeqw xmm2,xmm1
   140028bf9:	pcmpeqw xmm1,xmm3
   140028bfd:	por    xmm2,xmm1
   140028c01:	pmovmskb eax,xmm2
   140028c05:	test   eax,eax
   140028c07:	jne    0x140028c21
   140028c09:	add    r8,0x10
   140028c0d:	jmp    0x140028bd4
   140028c0f:	cmp    WORD PTR [r8],dx
   140028c13:	je     0x140028c38
   140028c15:	cmp    WORD PTR [r8],r9w
   140028c19:	je     0x140028c34
   140028c1b:	add    r8,0x2
   140028c1f:	jmp    0x140028bd4
   140028c21:	bsf    ecx,eax
   140028c24:	add    r8,rcx
   140028c27:	cmp    WORD PTR [r8],dx
   140028c2b:	cmove  r9,r8
   140028c2f:	mov    rax,r9
   140028c32:	jmp    0x140028c3b
   140028c34:	xor    eax,eax
   140028c36:	jmp    0x140028c3b
   140028c38:	mov    rax,r8
   140028c3b:	add    rsp,0x18
   140028c3f:	ret    
   140028c40:	sub    rsp,0x28
   140028c44:	xor    r8d,r8d
   140028c47:	mov    r9,rdx
   140028c4a:	mov    r10,rcx
   140028c4d:	cmp    DWORD PTR [rip+0x16334],r8d        # 0x14003ef88
   140028c54:	jne    0x140028cbb
   140028c56:	test   rcx,rcx
   140028c59:	jne    0x140028c75
   140028c5b:	call   0x140009cb4
   140028c60:	mov    DWORD PTR [rax],0x16
   140028c66:	call   0x140008d58
   140028c6b:	mov    eax,0x7fffffff
   140028c70:	add    rsp,0x28
   140028c74:	ret    
   140028c75:	test   rdx,rdx
   140028c78:	je     0x140028c5b
   140028c7a:	sub    r10,rdx
   140028c7d:	movzx  edx,WORD PTR [r10+r9*1]
   140028c82:	lea    eax,[rdx-0x41]
   140028c85:	cmp    ax,0x19
   140028c89:	ja     0x140028c8f
   140028c8b:	add    dx,0x20
   140028c8f:	movzx  ecx,WORD PTR [r9]
   140028c93:	lea    eax,[rcx-0x41]
   140028c96:	cmp    ax,0x19
   140028c9a:	ja     0x140028ca0
   140028c9c:	add    cx,0x20
   140028ca0:	add    r9,0x2
   140028ca4:	test   dx,dx
   140028ca7:	je     0x140028cae
   140028ca9:	cmp    dx,cx
   140028cac:	je     0x140028c7d
   140028cae:	movzx  ecx,cx
   140028cb1:	movzx  eax,dx
   140028cb4:	sub    eax,ecx
   140028cb6:	add    rsp,0x28
   140028cba:	ret    
   140028cbb:	add    rsp,0x28
   140028cbf:	jmp    0x140028cc4
   140028cc4:	mov    rax,rsp
   140028cc7:	mov    QWORD PTR [rax+0x8],rbx
   140028ccb:	mov    QWORD PTR [rax+0x10],rbp
   140028ccf:	mov    QWORD PTR [rax+0x18],rsi
   140028cd3:	push   rdi
   140028cd4:	sub    rsp,0x40
   140028cd8:	mov    rsi,rcx
   140028cdb:	mov    rdi,rdx
   140028cde:	lea    rcx,[rax-0x28]
   140028ce2:	mov    rdx,r8
   140028ce5:	call   0x140008fac
   140028cea:	xor    ebp,ebp
   140028cec:	test   rsi,rsi
   140028cef:	je     0x140028cf6
   140028cf1:	test   rdi,rdi
   140028cf4:	jne    0x140028d0d
   140028cf6:	call   0x140009cb4
   140028cfb:	mov    DWORD PTR [rax],0x16
   140028d01:	call   0x140008d58
   140028d06:	mov    eax,0x7fffffff
   140028d0b:	jmp    0x140028d89
   140028d0d:	mov    rax,QWORD PTR [rsp+0x20]
   140028d12:	cmp    QWORD PTR [rax+0x138],rbp
   140028d19:	jne    0x140028d4f
   140028d1b:	sub    rsi,rdi
   140028d1e:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140028d22:	lea    eax,[rbx-0x41]
   140028d25:	cmp    ax,0x19
   140028d29:	ja     0x140028d2f
   140028d2b:	add    bx,0x20
   140028d2f:	movzx  ecx,WORD PTR [rdi]
   140028d32:	lea    eax,[rcx-0x41]
   140028d35:	cmp    ax,0x19
   140028d39:	ja     0x140028d3f
   140028d3b:	add    cx,0x20
   140028d3f:	add    rdi,0x2
   140028d43:	test   bx,bx
   140028d46:	je     0x140028d81
   140028d48:	cmp    bx,cx
   140028d4b:	je     0x140028d1e
   140028d4d:	jmp    0x140028d81
   140028d4f:	movzx  ecx,WORD PTR [rsi]
   140028d52:	lea    rdx,[rsp+0x20]
   140028d57:	call   0x140029738
   140028d5c:	movzx  ecx,WORD PTR [rdi]
   140028d5f:	lea    rdx,[rsp+0x20]
   140028d64:	movzx  ebx,ax
   140028d67:	lea    rsi,[rsi+0x2]
   140028d6b:	call   0x140029738
   140028d70:	lea    rdi,[rdi+0x2]
   140028d74:	movzx  ecx,ax
   140028d77:	test   bx,bx
   140028d7a:	je     0x140028d81
   140028d7c:	cmp    bx,ax
   140028d7f:	je     0x140028d4f
   140028d81:	movzx  ecx,cx
   140028d84:	movzx  eax,bx
   140028d87:	sub    eax,ecx
   140028d89:	cmp    BYTE PTR [rsp+0x38],bpl
   140028d8e:	je     0x140028d9c
   140028d90:	mov    rcx,QWORD PTR [rsp+0x30]
   140028d95:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140028d9c:	mov    rbx,QWORD PTR [rsp+0x50]
   140028da1:	mov    rbp,QWORD PTR [rsp+0x58]
   140028da6:	mov    rsi,QWORD PTR [rsp+0x60]
   140028dab:	add    rsp,0x40
   140028daf:	pop    rdi
   140028db0:	ret    
   140028db1:	int3   
   140028db2:	int3   
   140028db3:	int3   
   140028db4:	sub    rsp,0x28
   140028db8:	xor    r9d,r9d
   140028dbb:	mov    r11,r8
   140028dbe:	mov    r10,rcx
   140028dc1:	cmp    DWORD PTR [rip+0x161c0],r9d        # 0x14003ef88
   140028dc8:	jne    0x140028e42
   140028dca:	test   r8,r8
   140028dcd:	je     0x140028e3a
   140028dcf:	test   rcx,rcx
   140028dd2:	jne    0x140028dee
   140028dd4:	call   0x140009cb4
   140028dd9:	mov    DWORD PTR [rax],0x16
   140028ddf:	call   0x140008d58
   140028de4:	mov    eax,0x7fffffff
   140028de9:	add    rsp,0x28
   140028ded:	ret    
   140028dee:	test   rdx,rdx
   140028df1:	je     0x140028dd4
   140028df3:	sub    r10,rdx
   140028df6:	movzx  ecx,WORD PTR [r10+rdx*1]
   140028dfb:	lea    eax,[rcx-0x41]
   140028dfe:	cmp    ax,0x19
   140028e02:	ja     0x140028e08
   140028e04:	add    cx,0x20
   140028e08:	movzx  r8d,WORD PTR [rdx]
   140028e0c:	lea    eax,[r8-0x41]
   140028e10:	cmp    ax,0x19
   140028e14:	ja     0x140028e1b
   140028e16:	add    r8w,0x20
   140028e1b:	add    rdx,0x2
   140028e1f:	dec    r11
   140028e22:	je     0x140028e2f
   140028e24:	test   cx,cx
   140028e27:	je     0x140028e2f
   140028e29:	cmp    cx,r8w
   140028e2d:	je     0x140028df6
   140028e2f:	movzx  eax,r8w
   140028e33:	movzx  r9d,cx
   140028e37:	sub    r9d,eax
   140028e3a:	mov    eax,r9d
   140028e3d:	add    rsp,0x28
   140028e41:	ret    
   140028e42:	add    rsp,0x28
   140028e46:	jmp    0x140028e4c
   140028e4b:	int3   
   140028e4c:	mov    rax,rsp
   140028e4f:	mov    QWORD PTR [rax+0x8],rbx
   140028e53:	mov    QWORD PTR [rax+0x10],rbp
   140028e57:	mov    QWORD PTR [rax+0x18],rsi
   140028e5b:	mov    QWORD PTR [rax+0x20],rdi
   140028e5f:	push   r14
   140028e61:	sub    rsp,0x40
   140028e65:	xor    r14d,r14d
   140028e68:	mov    rbp,r8
   140028e6b:	mov    rdi,rdx
   140028e6e:	mov    rsi,rcx
   140028e71:	mov    eax,r14d
   140028e74:	test   r8,r8
   140028e77:	je     0x140028f47
   140028e7d:	test   rcx,rcx
   140028e80:	jne    0x140028e9c
   140028e82:	call   0x140009cb4
   140028e87:	mov    DWORD PTR [rax],0x16
   140028e8d:	call   0x140008d58
   140028e92:	mov    eax,0x7fffffff
   140028e97:	jmp    0x140028f47
   140028e9c:	test   rdx,rdx
   140028e9f:	je     0x140028e82
   140028ea1:	lea    rcx,[rsp+0x20]
   140028ea6:	mov    rdx,r9
   140028ea9:	call   0x140008fac
   140028eae:	mov    rax,QWORD PTR [rsp+0x20]
   140028eb3:	cmp    QWORD PTR [rax+0x138],r14
   140028eba:	jne    0x140028ef5
   140028ebc:	sub    rsi,rdi
   140028ebf:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140028ec3:	lea    eax,[rbx-0x41]
   140028ec6:	cmp    ax,0x19
   140028eca:	ja     0x140028ed0
   140028ecc:	add    bx,0x20
   140028ed0:	movzx  ecx,WORD PTR [rdi]
   140028ed3:	lea    eax,[rcx-0x41]
   140028ed6:	cmp    ax,0x19
   140028eda:	ja     0x140028ee0
   140028edc:	add    cx,0x20
   140028ee0:	add    rdi,0x2
   140028ee4:	dec    rbp
   140028ee7:	je     0x140028f2c
   140028ee9:	test   bx,bx
   140028eec:	je     0x140028f2c
   140028eee:	cmp    bx,cx
   140028ef1:	je     0x140028ebf
   140028ef3:	jmp    0x140028f2c
   140028ef5:	movzx  ecx,WORD PTR [rsi]
   140028ef8:	lea    rdx,[rsp+0x20]
   140028efd:	call   0x140029738
   140028f02:	movzx  ecx,WORD PTR [rdi]
   140028f05:	lea    rdx,[rsp+0x20]
   140028f0a:	movzx  ebx,ax
   140028f0d:	call   0x140029738
   140028f12:	lea    rsi,[rsi+0x2]
   140028f16:	lea    rdi,[rdi+0x2]
   140028f1a:	movzx  ecx,ax
   140028f1d:	dec    rbp
   140028f20:	je     0x140028f2c
   140028f22:	test   bx,bx
   140028f25:	je     0x140028f2c
   140028f27:	cmp    bx,ax
   140028f2a:	je     0x140028ef5
   140028f2c:	movzx  ecx,cx
   140028f2f:	movzx  eax,bx
   140028f32:	sub    eax,ecx
   140028f34:	cmp    BYTE PTR [rsp+0x38],r14b
   140028f39:	je     0x140028f47
   140028f3b:	mov    rcx,QWORD PTR [rsp+0x30]
   140028f40:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140028f47:	mov    rbx,QWORD PTR [rsp+0x50]
   140028f4c:	mov    rbp,QWORD PTR [rsp+0x58]
   140028f51:	mov    rsi,QWORD PTR [rsp+0x60]
   140028f56:	mov    rdi,QWORD PTR [rsp+0x68]
   140028f5b:	add    rsp,0x40
   140028f5f:	pop    r14
   140028f61:	ret    
   140028f62:	int3   
   140028f63:	int3   
   140028f64:	mov    r11,rsp
   140028f67:	mov    QWORD PTR [r11+0x20],rbx
   140028f6b:	push   rbp
   140028f6c:	push   rsi
   140028f6d:	push   rdi
   140028f6e:	sub    rsp,0x70
   140028f72:	mov    rax,QWORD PTR [rip+0x13257]        # 0x14003c1d0
   140028f79:	xor    rax,rsp
   140028f7c:	mov    QWORD PTR [rsp+0x60],rax
   140028f81:	mov    QWORD PTR [r11-0x50],r8
   140028f85:	xor    ebx,ebx
   140028f87:	mov    rbp,rdx
   140028f8a:	and    DWORD PTR [rsp+0x30],ebx
   140028f8e:	and    DWORD PTR [rsp+0x28],ebx
   140028f92:	and    DWORD PTR [rsp+0x20],ebx
   140028f96:	mov    r8,rdx
   140028f99:	mov    rdi,rcx
   140028f9c:	lea    rdx,[r11-0x40]
   140028fa0:	lea    rcx,[r11-0x38]
   140028fa4:	xor    r9d,r9d
   140028fa7:	call   0x140022bd8
   140028fac:	mov    esi,eax
   140028fae:	test   al,0x4
   140028fb0:	je     0x140028fc3
   140028fb2:	and    DWORD PTR [rsp+0x40],0x0
   140028fb7:	and    DWORD PTR [rsp+0x44],0x0
   140028fbc:	mov    ebx,0x200
   140028fc1:	jmp    0x140028ff1
   140028fc3:	lea    rdx,[rsp+0x40]
   140028fc8:	lea    rcx,[rsp+0x50]
   140028fcd:	call   0x1400217c8
   140028fd2:	test   sil,0x2
   140028fd6:	jne    0x140028fdd
   140028fd8:	cmp    eax,0x1
   140028fdb:	jne    0x140028fe2
   140028fdd:	mov    ebx,0x80
   140028fe2:	test   sil,0x1
   140028fe6:	jne    0x140028fed
   140028fe8:	cmp    eax,0x2
   140028feb:	jne    0x140028ff1
   140028fed:	bts    ebx,0x8
   140028ff1:	mov    ecx,DWORD PTR [rsp+0x48]
   140028ff5:	mov    DWORD PTR [rdi],ebx
   140028ff7:	mov    rax,rdi
   140028ffa:	sub    ecx,ebp
   140028ffc:	mov    DWORD PTR [rdi+0x4],ecx
   140028fff:	mov    rcx,QWORD PTR [rsp+0x40]
   140029004:	mov    QWORD PTR [rdi+0x10],rcx
   140029008:	mov    rcx,QWORD PTR [rsp+0x60]
   14002900d:	xor    rcx,rsp
   140029010:	call   0x14000c380
   140029015:	mov    rbx,QWORD PTR [rsp+0xa8]
   14002901d:	add    rsp,0x70
   140029021:	pop    rdi
   140029022:	pop    rsi
   140029023:	pop    rbp
   140029024:	ret    
   140029025:	int3   
   140029026:	int3   
   140029027:	int3   
   140029028:	int3   
   140029029:	int3   
   14002902a:	int3   
   14002902b:	int3   
   14002902c:	int3   
   14002902d:	int3   
   14002902e:	int3   
   14002902f:	int3   
   140029030:	mov    QWORD PTR [rsp+0x18],rbx
   140029035:	mov    QWORD PTR [rsp+0x8],rcx
   14002903a:	push   rbp
   14002903b:	push   rsi
   14002903c:	push   rdi
   14002903d:	push   r12
   14002903f:	push   r13
   140029041:	push   r14
   140029043:	push   r15
   140029045:	sub    rsp,0x20
   140029049:	mov    ebp,r9d
   14002904c:	mov    r14d,r8d
   14002904f:	mov    r15,rdx
   140029052:	test   rdx,rdx
   140029055:	je     0x14002905a
   140029057:	mov    QWORD PTR [rdx],rcx
   14002905a:	test   rcx,rcx
   14002905d:	jne    0x140029076
   14002905f:	call   0x140009cb4
   140029064:	mov    DWORD PTR [rax],0x16
   14002906a:	call   0x140008d58
   14002906f:	xor    eax,eax
   140029071:	jmp    0x140029203
   140029076:	test   r8d,r8d
   140029079:	je     0x140029084
   14002907b:	lea    eax,[r8-0x2]
   14002907f:	cmp    eax,0x22
   140029082:	ja     0x14002905f
   140029084:	movzx  esi,WORD PTR [rcx]
   140029087:	xor    edi,edi
   140029089:	lea    rbx,[rcx+0x2]
   14002908d:	lea    r13d,[rdi+0x8]
   140029091:	jmp    0x14002909a
   140029093:	movzx  esi,WORD PTR [rbx]
   140029096:	add    rbx,0x2
   14002909a:	mov    edx,r13d
   14002909d:	movzx  ecx,si
   1400290a0:	call   0x14001f0b8
   1400290a5:	test   eax,eax
   1400290a7:	jne    0x140029093
   1400290a9:	cmp    si,0x2d
   1400290ad:	jne    0x1400290b4
   1400290af:	or     ebp,0x2
   1400290b2:	jmp    0x1400290ba
   1400290b4:	cmp    si,0x2b
   1400290b8:	jne    0x1400290c1
   1400290ba:	movzx  esi,WORD PTR [rbx]
   1400290bd:	add    rbx,0x2
   1400290c1:	mov    r13d,0xffdf
   1400290c7:	test   r14d,r14d
   1400290ca:	jne    0x1400290fb
   1400290cc:	movzx  ecx,si
   1400290cf:	call   0x14002980c
   1400290d4:	test   eax,eax
   1400290d6:	je     0x1400290e0
   1400290d8:	mov    r14d,0xa
   1400290de:	jmp    0x140029122
   1400290e0:	movzx  eax,WORD PTR [rbx]
   1400290e3:	sub    ax,0x58
   1400290e7:	test   r13w,ax
   1400290eb:	je     0x1400290f5
   1400290ed:	mov    r14d,0x8
   1400290f3:	jmp    0x140029122
   1400290f5:	mov    r14d,0x10
   1400290fb:	cmp    r14d,0x10
   1400290ff:	jne    0x140029122
   140029101:	movzx  ecx,si
   140029104:	call   0x14002980c
   140029109:	test   eax,eax
   14002910b:	jne    0x140029122
   14002910d:	movzx  eax,WORD PTR [rbx]
   140029110:	sub    ax,0x58
   140029114:	test   r13w,ax
   140029118:	jne    0x140029122
   14002911a:	movzx  esi,WORD PTR [rbx+0x2]
   14002911e:	add    rbx,0x4
   140029122:	xor    edx,edx
   140029124:	or     eax,0xffffffff
   140029127:	div    r14d
   14002912a:	mov    r13d,eax
   14002912d:	mov    r12d,edx
   140029130:	movzx  ecx,si
   140029133:	call   0x14002980c
   140029138:	cmp    eax,0xffffffff
   14002913b:	jne    0x140029161
   14002913d:	lea    ecx,[rsi-0x41]
   140029140:	cmp    cx,0x19
   140029144:	jbe    0x14002914f
   140029146:	lea    eax,[rsi-0x61]
   140029149:	cmp    ax,0x19
   14002914d:	ja     0x14002917d
   14002914f:	lea    eax,[rsi-0x61]
   140029152:	cmp    ax,0x19
   140029156:	movzx  eax,si
   140029159:	ja     0x14002915e
   14002915b:	sub    eax,0x20
   14002915e:	add    eax,0xffffffc9
   140029161:	cmp    eax,r14d
   140029164:	jae    0x14002917d
   140029166:	or     ebp,0x8
   140029169:	cmp    edi,r13d
   14002916c:	jb     0x140029197
   14002916e:	jne    0x140029175
   140029170:	cmp    eax,r12d
   140029173:	jbe    0x140029197
   140029175:	or     ebp,0x4
   140029178:	test   r15,r15
   14002917b:	jne    0x14002919d
   14002917d:	mov    r12,QWORD PTR [rsp+0x60]
   140029182:	sub    rbx,0x2
   140029186:	test   bpl,0x8
   14002918a:	jne    0x1400291a6
   14002918c:	test   r15,r15
   14002918f:	cmovne rbx,r12
   140029193:	xor    edi,edi
   140029195:	jmp    0x1400291f1
   140029197:	imul   edi,r14d
   14002919b:	add    edi,eax
   14002919d:	movzx  esi,WORD PTR [rbx]
   1400291a0:	add    rbx,0x2
   1400291a4:	jmp    0x140029130
   1400291a6:	mov    esi,0x7fffffff
   1400291ab:	test   bpl,0x4
   1400291af:	jne    0x1400291ce
   1400291b1:	test   bpl,0x1
   1400291b5:	jne    0x1400291f1
   1400291b7:	mov    eax,ebp
   1400291b9:	and    eax,0x2
   1400291bc:	je     0x1400291c6
   1400291be:	cmp    edi,0x80000000
   1400291c4:	ja     0x1400291ce
   1400291c6:	test   eax,eax
   1400291c8:	jne    0x1400291f1
   1400291ca:	cmp    edi,esi
   1400291cc:	jbe    0x1400291f1
   1400291ce:	call   0x140009cb4
   1400291d3:	mov    DWORD PTR [rax],0x22
   1400291d9:	test   bpl,0x1
   1400291dd:	je     0x1400291e4
   1400291df:	or     edi,0xffffffff
   1400291e2:	jmp    0x1400291f1
   1400291e4:	mov    al,bpl
   1400291e7:	and    al,0x2
   1400291e9:	neg    al
   1400291eb:	sbb    edi,edi
   1400291ed:	neg    edi
   1400291ef:	add    edi,esi
   1400291f1:	test   r15,r15
   1400291f4:	je     0x1400291f9
   1400291f6:	mov    QWORD PTR [r15],rbx
   1400291f9:	test   bpl,0x2
   1400291fd:	je     0x140029201
   1400291ff:	neg    edi
   140029201:	mov    eax,edi
   140029203:	mov    rbx,QWORD PTR [rsp+0x70]
   140029208:	add    rsp,0x20
   14002920c:	pop    r15
   14002920e:	pop    r14
   140029210:	pop    r13
   140029212:	pop    r12
   140029214:	pop    rdi
   140029215:	pop    rsi
   140029216:	pop    rbp
   140029217:	ret    
   140029218:	xor    r9d,r9d
   14002921b:	jmp    0x140029030
   140029220:	mov    r9d,0x1
   140029226:	jmp    0x140029030
   14002922b:	int3   
   14002922c:	xor    r9d,r9d
   14002922f:	jmp    0x140029030
   140029234:	mov    r9d,0x1
   14002923a:	jmp    0x140029030
   14002923f:	int3   
   140029240:	mov    QWORD PTR [rsp+0x8],rbx
   140029245:	mov    QWORD PTR [rsp+0x10],rdx
   14002924a:	push   rbp
   14002924b:	push   rsi
   14002924c:	push   rdi
   14002924d:	push   r12
   14002924f:	push   r13
   140029251:	push   r14
   140029253:	push   r15
   140029255:	sub    rsp,0x40
   140029259:	mov    r12,rdx
   14002925c:	mov    rdx,rcx
   14002925f:	lea    rcx,[rsp+0x20]
   140029264:	mov    r14d,r9d
   140029267:	mov    r15,r8
   14002926a:	call   0x140008fac
   14002926f:	test   r15,r15
   140029272:	je     0x140029277
   140029274:	mov    QWORD PTR [r15],r12
   140029277:	test   r12,r12
   14002927a:	je     0x14002928a
   14002927c:	test   r14d,r14d
   14002927f:	je     0x14002929c
   140029281:	lea    eax,[r14-0x2]
   140029285:	cmp    eax,0x22
   140029288:	jbe    0x14002929c
   14002928a:	call   0x140009cb4
   14002928f:	mov    DWORD PTR [rax],0x16
   140029295:	call   0x140008d58
   14002929a:	jmp    0x1400292f7
   14002929c:	movzx  esi,WORD PTR [r12]
   1400292a1:	xor    edi,edi
   1400292a3:	lea    rbx,[r12+0x2]
   1400292a8:	lea    ebp,[rdi+0x8]
   1400292ab:	jmp    0x1400292b4
   1400292ad:	movzx  esi,WORD PTR [rbx]
   1400292b0:	add    rbx,0x2
   1400292b4:	mov    edx,ebp
   1400292b6:	movzx  ecx,si
   1400292b9:	call   0x14001f0b8
   1400292be:	test   eax,eax
   1400292c0:	jne    0x1400292ad
   1400292c2:	mov    ebp,DWORD PTR [rsp+0xa0]
   1400292c9:	cmp    si,0x2d
   1400292cd:	jne    0x1400292d4
   1400292cf:	or     ebp,0x2
   1400292d2:	jmp    0x1400292da
   1400292d4:	cmp    si,0x2b
   1400292d8:	jne    0x1400292e1
   1400292da:	movzx  esi,WORD PTR [rbx]
   1400292dd:	add    rbx,0x2
   1400292e1:	test   r14d,r14d
   1400292e4:	je     0x1400292fe
   1400292e6:	lea    eax,[r14-0x2]
   1400292ea:	cmp    eax,0x22
   1400292ed:	jbe    0x1400292fe
   1400292ef:	test   r15,r15
   1400292f2:	je     0x1400292f7
   1400292f4:	mov    QWORD PTR [r15],r12
   1400292f7:	xor    edi,edi
   1400292f9:	jmp    0x140029477
   1400292fe:	mov    r13d,0xffdf
   140029304:	test   r14d,r14d
   140029307:	jne    0x140029338
   140029309:	movzx  ecx,si
   14002930c:	call   0x14002980c
   140029311:	test   eax,eax
   140029313:	je     0x14002931d
   140029315:	mov    r14d,0xa
   14002931b:	jmp    0x14002935f
   14002931d:	movzx  eax,WORD PTR [rbx]
   140029320:	sub    ax,0x58
   140029324:	test   r13w,ax
   140029328:	je     0x140029332
   14002932a:	mov    r14d,0x8
   140029330:	jmp    0x14002935f
   140029332:	mov    r14d,0x10
   140029338:	cmp    r14d,0x10
   14002933c:	jne    0x14002935f
   14002933e:	movzx  ecx,si
   140029341:	call   0x14002980c
   140029346:	test   eax,eax
   140029348:	jne    0x14002935f
   14002934a:	movzx  eax,WORD PTR [rbx]
   14002934d:	sub    ax,0x58
   140029351:	test   r13w,ax
   140029355:	jne    0x14002935f
   140029357:	movzx  esi,WORD PTR [rbx+0x2]
   14002935b:	add    rbx,0x4
   14002935f:	movsxd rcx,r14d
   140029362:	xor    edx,edx
   140029364:	or     rax,0xffffffffffffffff
   140029368:	div    rcx
   14002936b:	movsxd r12,r14d
   14002936e:	mov    QWORD PTR [rsp+0x90],rdx
   140029376:	mov    r13,rax
   140029379:	movzx  ecx,si
   14002937c:	call   0x14002980c
   140029381:	mov    r8d,eax
   140029384:	cmp    eax,0xffffffff
   140029387:	jne    0x1400293b0
   140029389:	lea    ecx,[rsi-0x41]
   14002938c:	cmp    cx,0x19
   140029390:	jbe    0x14002939b
   140029392:	lea    eax,[rsi-0x61]
   140029395:	cmp    ax,0x19
   140029399:	ja     0x1400293d4
   14002939b:	lea    eax,[rsi-0x61]
   14002939e:	movzx  r8d,si
   1400293a2:	cmp    ax,0x19
   1400293a6:	ja     0x1400293ac
   1400293a8:	sub    r8d,0x20
   1400293ac:	add    r8d,0xffffffc9
   1400293b0:	cmp    r8d,r14d
   1400293b3:	jae    0x1400293d4
   1400293b5:	or     ebp,0x8
   1400293b8:	cmp    rdi,r13
   1400293bb:	jb     0x1400293f1
   1400293bd:	jne    0x1400293cc
   1400293bf:	mov    eax,r8d
   1400293c2:	cmp    rax,QWORD PTR [rsp+0x90]
   1400293ca:	jbe    0x1400293f1
   1400293cc:	or     ebp,0x4
   1400293cf:	test   r15,r15
   1400293d2:	jne    0x1400293fe
   1400293d4:	mov    r12,QWORD PTR [rsp+0x88]
   1400293dc:	sub    rbx,0x2
   1400293e0:	test   bpl,0x8
   1400293e4:	jne    0x14002940a
   1400293e6:	test   r15,r15
   1400293e9:	cmovne rbx,r12
   1400293ed:	xor    edi,edi
   1400293ef:	jmp    0x140029466
   1400293f1:	mov    rcx,r12
   1400293f4:	imul   rcx,rdi
   1400293f8:	mov    edi,r8d
   1400293fb:	add    rdi,rcx
   1400293fe:	movzx  esi,WORD PTR [rbx]
   140029401:	add    rbx,0x2
   140029405:	jmp    0x140029379
   14002940a:	movabs rsi,0x7fffffffffffffff
   140029414:	test   bpl,0x4
   140029418:	jne    0x14002943f
   14002941a:	test   bpl,0x1
   14002941e:	jne    0x140029466
   140029420:	mov    eax,ebp
   140029422:	and    eax,0x2
   140029425:	je     0x140029436
   140029427:	movabs rcx,0x8000000000000000
   140029431:	cmp    rdi,rcx
   140029434:	ja     0x14002943f
   140029436:	test   eax,eax
   140029438:	jne    0x140029466
   14002943a:	cmp    rdi,rsi
   14002943d:	jbe    0x140029466
   14002943f:	call   0x140009cb4
   140029444:	mov    DWORD PTR [rax],0x22
   14002944a:	test   bpl,0x1
   14002944e:	je     0x140029456
   140029450:	or     rdi,0xffffffffffffffff
   140029454:	jmp    0x140029466
   140029456:	mov    al,bpl
   140029459:	and    al,0x2
   14002945b:	neg    al
   14002945d:	sbb    rdi,rdi
   140029460:	neg    rdi
   140029463:	add    rdi,rsi
   140029466:	test   r15,r15
   140029469:	je     0x14002946e
   14002946b:	mov    QWORD PTR [r15],rbx
   14002946e:	test   bpl,0x2
   140029472:	je     0x140029477
   140029474:	neg    rdi
   140029477:	cmp    BYTE PTR [rsp+0x38],0x0
   14002947c:	je     0x14002948a
   14002947e:	mov    rcx,QWORD PTR [rsp+0x30]
   140029483:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002948a:	mov    rax,rdi
   14002948d:	mov    rbx,QWORD PTR [rsp+0x80]
   140029495:	add    rsp,0x40
   140029499:	pop    r15
   14002949b:	pop    r14
   14002949d:	pop    r13
   14002949f:	pop    r12
   1400294a1:	pop    rdi
   1400294a2:	pop    rsi
   1400294a3:	pop    rbp
   1400294a4:	ret    
   1400294a5:	int3   
   1400294a6:	int3   
   1400294a7:	int3   
   1400294a8:	mov    rax,rsp
   1400294ab:	mov    QWORD PTR [rax+0x8],rbx
   1400294af:	mov    QWORD PTR [rax+0x10],rbp
   1400294b3:	push   rsi
   1400294b4:	push   rdi
   1400294b5:	push   r14
   1400294b7:	sub    rsp,0x50
   1400294bb:	and    QWORD PTR [rax-0x30],0x0
   1400294c0:	and    QWORD PTR [rax-0x38],0x0
   1400294c5:	and    DWORD PTR [rax-0x40],0x0
   1400294c9:	and    QWORD PTR [rax-0x48],0x0
   1400294ce:	mov    r14,r8
   1400294d1:	mov    rdi,rdx
   1400294d4:	mov    r8,rcx
   1400294d7:	mov    rsi,rcx
   1400294da:	or     r9d,0xffffffff
   1400294de:	xor    ecx,ecx
   1400294e0:	xor    edx,edx
   1400294e2:	call   QWORD PTR [rip+0x2ca8]        # 0x14002c190
   1400294e8:	movsxd rbp,eax
   1400294eb:	test   eax,eax
   1400294ed:	jne    0x140029504
   1400294ef:	call   QWORD PTR [rip+0x2c5b]        # 0x14002c150
   1400294f5:	mov    ecx,eax
   1400294f7:	call   0x140009c64
   1400294fc:	xorps  xmm0,xmm0
   1400294ff:	jmp    0x1400295a3
   140029504:	mov    rcx,rbp
   140029507:	call   0x140008684
   14002950c:	mov    rbx,rax
   14002950f:	test   rax,rax
   140029512:	je     0x1400294fc
   140029514:	and    QWORD PTR [rsp+0x38],0x0
   14002951a:	and    QWORD PTR [rsp+0x30],0x0
   140029520:	or     r9d,0xffffffff
   140029524:	mov    r8,rsi
   140029527:	xor    edx,edx
   140029529:	xor    ecx,ecx
   14002952b:	mov    DWORD PTR [rsp+0x28],ebp
   14002952f:	mov    QWORD PTR [rsp+0x20],rax
   140029534:	call   QWORD PTR [rip+0x2c56]        # 0x14002c190
   14002953a:	test   eax,eax
   14002953c:	jne    0x140029555
   14002953e:	call   QWORD PTR [rip+0x2c0c]        # 0x14002c150
   140029544:	mov    ecx,eax
   140029546:	call   0x140009c64
   14002954b:	mov    rcx,rbx
   14002954e:	call   0x140007dc0
   140029553:	jmp    0x1400294fc
   140029555:	and    QWORD PTR [rsp+0x40],0x0
   14002955b:	lea    r9,[rsp+0x40]
   140029560:	lea    rcx,[rsp+0x88]
   140029568:	mov    r8,r14
   14002956b:	mov    rdx,rbx
   14002956e:	call   0x14001bc60
   140029573:	test   rdi,rdi
   140029576:	je     0x140029592
   140029578:	mov    rax,QWORD PTR [rsp+0x40]
   14002957d:	test   rax,rax
   140029580:	je     0x14002958e
   140029582:	sub    rax,rbx
   140029585:	lea    rax,[rsi+rax*2]
   140029589:	mov    QWORD PTR [rdi],rax
   14002958c:	jmp    0x140029592
   14002958e:	and    QWORD PTR [rdi],0x0
   140029592:	mov    rcx,rbx
   140029595:	call   0x140007dc0
   14002959a:	movss  xmm0,DWORD PTR [rsp+0x88]
   1400295a3:	mov    rbx,QWORD PTR [rsp+0x70]
   1400295a8:	mov    rbp,QWORD PTR [rsp+0x78]
   1400295ad:	add    rsp,0x50
   1400295b1:	pop    r14
   1400295b3:	pop    rdi
   1400295b4:	pop    rsi
   1400295b5:	ret    
   1400295b6:	int3   
   1400295b7:	int3   
   1400295b8:	sub    rsp,0x38
   1400295bc:	xor    eax,eax
   1400295be:	mov    r9d,r8d
   1400295c1:	mov    r8,rdx
   1400295c4:	cmp    DWORD PTR [rip+0x159be],eax        # 0x14003ef88
   1400295ca:	mov    DWORD PTR [rsp+0x20],eax
   1400295ce:	mov    rdx,rcx
   1400295d1:	jne    0x1400295dc
   1400295d3:	lea    rcx,[rip+0x13c2e]        # 0x14003d208
   1400295da:	jmp    0x1400295de
   1400295dc:	xor    ecx,ecx
   1400295de:	call   0x140029240
   1400295e3:	add    rsp,0x38
   1400295e7:	ret    
   1400295e8:	sub    rsp,0x38
   1400295ec:	and    DWORD PTR [rsp+0x20],0x0
   1400295f1:	mov    rax,r9
   1400295f4:	mov    r9d,r8d
   1400295f7:	mov    r8,rdx
   1400295fa:	mov    rdx,rcx
   1400295fd:	mov    rcx,rax
   140029600:	call   0x140029240
   140029605:	add    rsp,0x38
   140029609:	ret    
   14002960a:	int3   
   14002960b:	int3   
   14002960c:	sub    rsp,0x38
   140029610:	and    DWORD PTR [rsp+0x20],0x0
   140029615:	mov    rax,r9
   140029618:	mov    r9d,r8d
   14002961b:	mov    r8,rdx
   14002961e:	mov    rdx,rcx
   140029621:	mov    rcx,rax
   140029624:	call   0x140029240
   140029629:	add    rsp,0x38
   14002962d:	ret    
   14002962e:	int3   
   14002962f:	int3   
   140029630:	jmp    0x1400299a4
   140029635:	int3   
   140029636:	int3   
   140029637:	int3   
   140029638:	sub    rsp,0x38
   14002963c:	and    DWORD PTR [rsp+0x20],0x0
   140029641:	mov    rax,r9
   140029644:	mov    r9d,r8d
   140029647:	mov    r8,rdx
   14002964a:	mov    rdx,rcx
   14002964d:	mov    rcx,rax
   140029650:	call   0x140029240
   140029655:	add    rsp,0x38
   140029659:	ret    
   14002965a:	int3   
   14002965b:	int3   
   14002965c:	sub    rsp,0x38
   140029660:	cmp    DWORD PTR [rip+0x15921],0x0        # 0x14003ef88
   140029667:	mov    r9d,r8d
   14002966a:	mov    r8,rdx
   14002966d:	mov    rdx,rcx
   140029670:	mov    DWORD PTR [rsp+0x20],0x1
   140029678:	jne    0x140029683
   14002967a:	lea    rcx,[rip+0x13b87]        # 0x14003d208
   140029681:	jmp    0x140029685
   140029683:	xor    ecx,ecx
   140029685:	call   0x140029240
   14002968a:	add    rsp,0x38
   14002968e:	ret    
   14002968f:	int3   
   140029690:	sub    rsp,0x38
   140029694:	mov    rax,r9
   140029697:	mov    r9d,r8d
   14002969a:	mov    r8,rdx
   14002969d:	mov    rdx,rcx
   1400296a0:	mov    rcx,rax
   1400296a3:	mov    DWORD PTR [rsp+0x20],0x1
   1400296ab:	call   0x140029240
   1400296b0:	add    rsp,0x38
   1400296b4:	ret    
   1400296b5:	int3   
   1400296b6:	int3   
   1400296b7:	int3   
   1400296b8:	sub    rsp,0x38
   1400296bc:	mov    rax,r9
   1400296bf:	mov    r9d,r8d
   1400296c2:	mov    r8,rdx
   1400296c5:	mov    rdx,rcx
   1400296c8:	mov    rcx,rax
   1400296cb:	mov    DWORD PTR [rsp+0x20],0x1
   1400296d3:	call   0x140029240
   1400296d8:	add    rsp,0x38
   1400296dc:	ret    
   1400296dd:	int3   
   1400296de:	int3   
   1400296df:	int3   
   1400296e0:	sub    rsp,0x38
   1400296e4:	mov    rax,r9
   1400296e7:	mov    r9d,r8d
   1400296ea:	mov    r8,rdx
   1400296ed:	mov    rdx,rcx
   1400296f0:	mov    rcx,rax
   1400296f3:	mov    DWORD PTR [rsp+0x20],0x1
   1400296fb:	call   0x140029240
   140029700:	add    rsp,0x38
   140029704:	ret    
   140029705:	int3   
   140029706:	int3   
   140029707:	int3   
   140029708:	xor    r8d,r8d
   14002970b:	jmp    0x1400294a8
   140029710:	jmp    0x1400295b8
   140029715:	int3   
   140029716:	int3   
   140029717:	int3   
   140029718:	jmp    0x140029ad4
   14002971d:	int3   
   14002971e:	int3   
   14002971f:	int3   
   140029720:	jmp    0x1400295b8
   140029725:	int3   
   140029726:	int3   
   140029727:	int3   
   140029728:	jmp    0x14002965c
   14002972d:	int3   
   14002972e:	int3   
   14002972f:	int3   
   140029730:	jmp    0x14002965c
   140029735:	int3   
   140029736:	int3   
   140029737:	int3   
   140029738:	mov    QWORD PTR [rsp+0x10],rbx
   14002973d:	mov    WORD PTR [rsp+0x8],cx
   140029742:	push   rbp
   140029743:	mov    rbp,rsp
   140029746:	sub    rsp,0x50
   14002974a:	mov    eax,0xffff
   14002974f:	cmp    cx,ax
   140029752:	je     0x1400297f7
   140029758:	lea    rcx,[rbp-0x20]
   14002975c:	call   0x140008fac
   140029761:	mov    rbx,QWORD PTR [rbp-0x20]
   140029765:	mov    rax,QWORD PTR [rbx+0x138]
   14002976c:	test   rax,rax
   14002976f:	jne    0x140029784
   140029771:	movzx  edx,WORD PTR [rbp+0x10]
   140029775:	lea    eax,[rdx-0x41]
   140029778:	cmp    ax,0x19
   14002977c:	ja     0x1400297e3
   14002977e:	add    dx,0x20
   140029782:	jmp    0x1400297e3
   140029784:	movzx  ecx,WORD PTR [rbp+0x10]
   140029788:	mov    edx,0x100
   14002978d:	cmp    cx,dx
   140029790:	jae    0x1400297b7
   140029792:	mov    edx,0x1
   140029797:	call   0x14001f0b8
   14002979c:	test   eax,eax
   14002979e:	jne    0x1400297a6
   1400297a0:	movzx  edx,WORD PTR [rbp+0x10]
   1400297a4:	jmp    0x1400297e3
   1400297a6:	movzx  ecx,WORD PTR [rbp+0x10]
   1400297aa:	mov    rax,QWORD PTR [rbx+0x110]
   1400297b1:	movzx  edx,BYTE PTR [rax+rcx*1]
   1400297b5:	jmp    0x1400297e3
   1400297b7:	lea    rcx,[rbp+0x20]
   1400297bb:	mov    r9d,0x1
   1400297c1:	lea    r8,[rbp+0x10]
   1400297c5:	mov    DWORD PTR [rsp+0x28],r9d
   1400297ca:	mov    QWORD PTR [rsp+0x20],rcx
   1400297cf:	mov    rcx,rax
   1400297d2:	call   0x140029adc
   1400297d7:	movzx  edx,WORD PTR [rbp+0x10]
   1400297db:	test   eax,eax
   1400297dd:	je     0x1400297e3
   1400297df:	movzx  edx,WORD PTR [rbp+0x20]
   1400297e3:	cmp    BYTE PTR [rbp-0x8],0x0
   1400297e7:	je     0x1400297f4
   1400297e9:	mov    rcx,QWORD PTR [rbp-0x10]
   1400297ed:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400297f4:	movzx  eax,dx
   1400297f7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400297fc:	add    rsp,0x50
   140029800:	pop    rbp
   140029801:	ret    
   140029802:	int3   
   140029803:	int3   
   140029804:	xor    edx,edx
   140029806:	jmp    0x140029738
   14002980b:	int3   
   14002980c:	mov    edx,0x30
   140029811:	cmp    cx,dx
   140029814:	jb     0x14002999d
   14002981a:	cmp    cx,0x3a
   14002981e:	jae    0x140029826
   140029820:	movzx  eax,cx
   140029823:	sub    eax,edx
   140029825:	ret    
   140029826:	mov    edx,0xff10
   14002982b:	cmp    cx,dx
   14002982e:	jae    0x14002998f
   140029834:	mov    edx,0x660
   140029839:	cmp    cx,dx
   14002983c:	jb     0x14002999d
   140029842:	lea    eax,[rdx+0xa]
   140029845:	cmp    cx,ax
   140029848:	jb     0x140029820
   14002984a:	mov    edx,0x6f0
   14002984f:	cmp    cx,dx
   140029852:	jb     0x14002999d
   140029858:	lea    eax,[rdx+0xa]
   14002985b:	cmp    cx,ax
   14002985e:	jb     0x140029820
   140029860:	mov    edx,0x966
   140029865:	cmp    cx,dx
   140029868:	jb     0x14002999d
   14002986e:	lea    eax,[rdx+0xa]
   140029871:	cmp    cx,ax
   140029874:	jb     0x140029820
   140029876:	lea    edx,[rax+0x76]
   140029879:	cmp    cx,dx
   14002987c:	jb     0x14002999d
   140029882:	lea    eax,[rdx+0xa]
   140029885:	cmp    cx,ax
   140029888:	jb     0x140029820
   14002988a:	lea    edx,[rax+0x76]
   14002988d:	cmp    cx,dx
   140029890:	jb     0x14002999d
   140029896:	lea    eax,[rdx+0xa]
   140029899:	cmp    cx,ax
   14002989c:	jb     0x140029820
   14002989e:	lea    edx,[rax+0x76]
   1400298a1:	cmp    cx,dx
   1400298a4:	jb     0x14002999d
   1400298aa:	lea    eax,[rdx+0xa]
   1400298ad:	cmp    cx,ax
   1400298b0:	jb     0x140029820
   1400298b6:	lea    edx,[rax+0x76]
   1400298b9:	cmp    cx,dx
   1400298bc:	jb     0x14002999d
   1400298c2:	lea    eax,[rdx+0xa]
   1400298c5:	cmp    cx,ax
   1400298c8:	jb     0x140029820
   1400298ce:	mov    edx,0xc66
   1400298d3:	cmp    cx,dx
   1400298d6:	jb     0x14002999d
   1400298dc:	lea    eax,[rdx+0xa]
   1400298df:	cmp    cx,ax
   1400298e2:	jb     0x140029820
   1400298e8:	lea    edx,[rax+0x76]
   1400298eb:	cmp    cx,dx
   1400298ee:	jb     0x14002999d
   1400298f4:	lea    eax,[rdx+0xa]
   1400298f7:	cmp    cx,ax
   1400298fa:	jb     0x140029820
   140029900:	lea    edx,[rax+0x76]
   140029903:	cmp    cx,dx
   140029906:	jb     0x14002999d
   14002990c:	lea    eax,[rdx+0xa]
   14002990f:	cmp    cx,ax
   140029912:	jb     0x140029820
   140029918:	mov    edx,0xe50
   14002991d:	cmp    cx,dx
   140029920:	jb     0x14002999d
   140029922:	lea    eax,[rdx+0xa]
   140029925:	cmp    cx,ax
   140029928:	jb     0x140029820
   14002992e:	lea    edx,[rax+0x76]
   140029931:	cmp    cx,dx
   140029934:	jb     0x14002999d
   140029936:	lea    eax,[rdx+0xa]
   140029939:	cmp    cx,ax
   14002993c:	jb     0x140029820
   140029942:	lea    edx,[rax+0x46]
   140029945:	cmp    cx,dx
   140029948:	jb     0x14002999d
   14002994a:	lea    eax,[rdx+0xa]
   14002994d:	cmp    cx,ax
   140029950:	jb     0x140029820
   140029956:	mov    edx,0x1040
   14002995b:	cmp    cx,dx
   14002995e:	jb     0x14002999d
   140029960:	lea    eax,[rdx+0xa]
   140029963:	cmp    cx,ax
   140029966:	jb     0x140029820
   14002996c:	mov    edx,0x17e0
   140029971:	cmp    cx,dx
   140029974:	jb     0x14002999d
   140029976:	lea    eax,[rdx+0xa]
   140029979:	cmp    cx,ax
   14002997c:	jb     0x140029820
   140029982:	lea    edx,[rax+0x26]
   140029985:	cmp    cx,dx
   140029988:	jb     0x14002999d
   14002998a:	lea    eax,[rdx+0xa]
   14002998d:	jmp    0x140029994
   14002998f:	mov    eax,0xff1a
   140029994:	cmp    cx,ax
   140029997:	jb     0x140029820
   14002999d:	or     eax,0xffffffff
   1400299a0:	ret    
   1400299a1:	int3   
   1400299a2:	int3   
   1400299a3:	int3   
   1400299a4:	mov    QWORD PTR [rsp+0x18],rbx
   1400299a9:	mov    QWORD PTR [rsp+0x20],rsi
   1400299ae:	push   rdi
   1400299af:	sub    rsp,0x70
   1400299b3:	movaps XMMWORD PTR [rsp+0x60],xmm6
   1400299b8:	mov    rax,QWORD PTR [rip+0x12811]        # 0x14003c1d0
   1400299bf:	xor    rax,rsp
   1400299c2:	mov    QWORD PTR [rsp+0x58],rax
   1400299c7:	mov    rsi,rcx
   1400299ca:	mov    rdi,rcx
   1400299cd:	mov    rbx,rdx
   1400299d0:	lea    rcx,[rsp+0x20]
   1400299d5:	mov    rdx,r8
   1400299d8:	call   0x140008fac
   1400299dd:	test   rbx,rbx
   1400299e0:	je     0x1400299e5
   1400299e2:	mov    QWORD PTR [rbx],rdi
   1400299e5:	test   rsi,rsi
   1400299e8:	jne    0x140029a02
   1400299ea:	call   0x140009cb4
   1400299ef:	mov    DWORD PTR [rax],0x16
   1400299f5:	call   0x140008d58
   1400299fa:	xorps  xmm6,xmm6
   1400299fd:	jmp    0x140029a99
   140029a02:	movzx  ecx,WORD PTR [rsi]
   140029a05:	jmp    0x140029a0e
   140029a07:	add    rdi,0x2
   140029a0b:	movzx  ecx,WORD PTR [rdi]
   140029a0e:	mov    edx,0x8
   140029a13:	call   0x14001f0b8
   140029a18:	test   eax,eax
   140029a1a:	jne    0x140029a07
   140029a1c:	lea    r8,[rsp+0x20]
   140029a21:	lea    rcx,[rsp+0x40]
   140029a26:	mov    rdx,rdi
   140029a29:	call   0x140029b28
   140029a2e:	test   rbx,rbx
   140029a31:	je     0x140029a3e
   140029a33:	movsxd rcx,DWORD PTR [rax+0x4]
   140029a37:	lea    rdx,[rdi+rcx*2]
   140029a3b:	mov    QWORD PTR [rbx],rdx
   140029a3e:	test   DWORD PTR [rax],0x240
   140029a44:	je     0x140029a53
   140029a46:	xorps  xmm6,xmm6
   140029a49:	test   rbx,rbx
   140029a4c:	je     0x140029a99
   140029a4e:	mov    QWORD PTR [rbx],rsi
   140029a51:	jmp    0x140029a99
   140029a53:	test   BYTE PTR [rax],0x81
   140029a56:	je     0x140029a6f
   140029a58:	cmp    WORD PTR [rdi],0x2d
   140029a5c:	movsd  xmm6,QWORD PTR [rip+0x13d8c]        # 0x14003d7f0
   140029a64:	jne    0x140029a87
   140029a66:	xorps  xmm6,XMMWORD PTR [rip+0x98c3]        # 0x140033330
   140029a6d:	jmp    0x140029a87
   140029a6f:	test   DWORD PTR [rax],0x100
   140029a75:	je     0x140029a94
   140029a77:	movsd  xmm0,QWORD PTR [rax+0x10]
   140029a7c:	xorps  xmm6,xmm6
   140029a7f:	ucomisd xmm0,xmm6
   140029a83:	jp     0x140029a94
   140029a85:	jne    0x140029a94
   140029a87:	call   0x140009cb4
   140029a8c:	mov    DWORD PTR [rax],0x22
   140029a92:	jmp    0x140029a99
   140029a94:	movsd  xmm6,QWORD PTR [rax+0x10]
   140029a99:	cmp    BYTE PTR [rsp+0x38],0x0
   140029a9e:	je     0x140029aac
   140029aa0:	mov    rax,QWORD PTR [rsp+0x30]
   140029aa5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140029aac:	movaps xmm0,xmm6
   140029aaf:	mov    rcx,QWORD PTR [rsp+0x58]
   140029ab4:	xor    rcx,rsp
   140029ab7:	call   0x14000c380
   140029abc:	lea    r11,[rsp+0x70]
   140029ac1:	mov    rbx,QWORD PTR [r11+0x20]
   140029ac5:	mov    rsi,QWORD PTR [r11+0x28]
   140029ac9:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   140029ace:	mov    rsp,r11
   140029ad1:	pop    rdi
   140029ad2:	ret    
   140029ad3:	int3   
   140029ad4:	xor    r8d,r8d
   140029ad7:	jmp    0x1400299a4
   140029adc:	mov    QWORD PTR [rsp+0x8],rbx
   140029ae1:	mov    QWORD PTR [rsp+0x10],rsi
   140029ae6:	push   rdi
   140029ae7:	sub    rsp,0x30
   140029aeb:	movsxd rax,r9d
   140029aee:	mov    rbx,r8
   140029af1:	mov    edi,edx
   140029af3:	mov    rsi,rcx
   140029af6:	test   r9d,r9d
   140029af9:	jle    0x140029b06
   140029afb:	mov    rdx,rax
   140029afe:	mov    rcx,rbx
   140029b01:	call   0x14001c82c
   140029b06:	mov    r8,rbx
   140029b09:	mov    edx,edi
   140029b0b:	mov    r9d,eax
   140029b0e:	mov    rcx,rsi
   140029b11:	mov    rbx,QWORD PTR [rsp+0x40]
   140029b16:	mov    rsi,QWORD PTR [rsp+0x48]
   140029b1b:	add    rsp,0x30
   140029b1f:	pop    rdi
   140029b20:	jmp    0x14000fb44
   140029b25:	int3   
   140029b26:	int3   
   140029b27:	int3   
   140029b28:	mov    r11,rsp
   140029b2b:	mov    QWORD PTR [r11+0x20],rbx
   140029b2f:	push   rbp
   140029b30:	push   rsi
   140029b31:	push   rdi
   140029b32:	sub    rsp,0x70
   140029b36:	mov    rax,QWORD PTR [rip+0x12693]        # 0x14003c1d0
   140029b3d:	xor    rax,rsp
   140029b40:	mov    QWORD PTR [rsp+0x60],rax
   140029b45:	mov    QWORD PTR [r11-0x50],r8
   140029b49:	xor    ebx,ebx
   140029b4b:	mov    rbp,rdx
   140029b4e:	and    DWORD PTR [rsp+0x30],ebx
   140029b52:	and    DWORD PTR [rsp+0x28],ebx
   140029b56:	and    DWORD PTR [rsp+0x20],ebx
   140029b5a:	mov    r8,rdx
   140029b5d:	mov    rdi,rcx
   140029b60:	lea    rdx,[r11-0x40]
   140029b64:	lea    rcx,[r11-0x38]
   140029b68:	xor    r9d,r9d
   140029b6b:	call   0x140029c68
   140029b70:	mov    esi,eax
   140029b72:	test   al,0x4
   140029b74:	je     0x140029b87
   140029b76:	and    DWORD PTR [rsp+0x40],0x0
   140029b7b:	and    DWORD PTR [rsp+0x44],0x0
   140029b80:	mov    ebx,0x200
   140029b85:	jmp    0x140029bb5
   140029b87:	lea    rdx,[rsp+0x40]
   140029b8c:	lea    rcx,[rsp+0x50]
   140029b91:	call   0x1400217c8
   140029b96:	test   sil,0x2
   140029b9a:	jne    0x140029ba1
   140029b9c:	cmp    eax,0x1
   140029b9f:	jne    0x140029ba6
   140029ba1:	mov    ebx,0x80
   140029ba6:	test   sil,0x1
   140029baa:	jne    0x140029bb1
   140029bac:	cmp    eax,0x2
   140029baf:	jne    0x140029bb5
   140029bb1:	bts    ebx,0x8
   140029bb5:	mov    rcx,QWORD PTR [rsp+0x48]
   140029bba:	mov    DWORD PTR [rdi],ebx
   140029bbc:	mov    rax,rdi
   140029bbf:	sub    rcx,rbp
   140029bc2:	sar    rcx,1
   140029bc5:	mov    DWORD PTR [rdi+0x4],ecx
   140029bc8:	mov    rcx,QWORD PTR [rsp+0x40]
   140029bcd:	mov    QWORD PTR [rdi+0x10],rcx
   140029bd1:	mov    rcx,QWORD PTR [rsp+0x60]
   140029bd6:	xor    rcx,rsp
   140029bd9:	call   0x14000c380
   140029bde:	mov    rbx,QWORD PTR [rsp+0xa8]
   140029be6:	add    rsp,0x70
   140029bea:	pop    rdi
   140029beb:	pop    rsi
   140029bec:	pop    rbp
   140029bed:	ret    
   140029bee:	int3   
   140029bef:	int3   
   140029bf0:	mov    QWORD PTR [rsp+0x20],rbx
   140029bf5:	push   rdi
   140029bf6:	sub    rsp,0x60
   140029bfa:	mov    rax,QWORD PTR [rip+0x125cf]        # 0x14003c1d0
   140029c01:	xor    rax,rsp
   140029c04:	mov    QWORD PTR [rsp+0x50],rax
   140029c09:	mov    rax,QWORD PTR [rsp+0x90]
   140029c11:	mov    rbx,rcx
   140029c14:	lea    rcx,[rsp+0x40]
   140029c19:	mov    QWORD PTR [rsp+0x38],rax
   140029c1e:	xor    eax,eax
   140029c20:	mov    DWORD PTR [rsp+0x30],eax
   140029c24:	mov    DWORD PTR [rsp+0x28],eax
   140029c28:	mov    DWORD PTR [rsp+0x20],eax
   140029c2c:	call   0x140029c68
   140029c31:	lea    rcx,[rsp+0x40]
   140029c36:	mov    rdx,rbx
   140029c39:	mov    edi,eax
   140029c3b:	call   0x140022338
   140029c40:	cmp    eax,0x1
   140029c43:	jne    0x140029c48
   140029c45:	or     edi,0x2
   140029c48:	mov    eax,edi
   140029c4a:	mov    rcx,QWORD PTR [rsp+0x50]
   140029c4f:	xor    rcx,rsp
   140029c52:	call   0x14000c380
   140029c57:	mov    rbx,QWORD PTR [rsp+0x88]
   140029c5f:	add    rsp,0x60
   140029c63:	pop    rdi
   140029c64:	ret    
   140029c65:	int3   
   140029c66:	int3   
   140029c67:	int3   
   140029c68:	mov    QWORD PTR [rsp+0x18],rbx
   140029c6d:	push   rbp
   140029c6e:	push   rsi
   140029c6f:	push   rdi
   140029c70:	push   r12
   140029c72:	push   r13
   140029c74:	push   r14
   140029c76:	push   r15
   140029c78:	lea    rbp,[rsp-0x7]
   140029c7d:	sub    rsp,0xa0
   140029c84:	mov    rax,QWORD PTR [rip+0x12545]        # 0x14003c1d0
   140029c8b:	xor    rax,rsp
   140029c8e:	mov    QWORD PTR [rbp-0x1],rax
   140029c92:	mov    r15,QWORD PTR [rbp+0x7f]
   140029c96:	xor    ebx,ebx
   140029c98:	mov    DWORD PTR [rbp-0x6d],r9d
   140029c9c:	lea    r9d,[rbx+0x1]
   140029ca0:	mov    QWORD PTR [rbp-0x59],rcx
   140029ca4:	mov    QWORD PTR [rbp-0x69],rdx
   140029ca8:	lea    r10,[rbp-0x21]
   140029cac:	mov    WORD PTR [rbp-0x71],bx
   140029cb0:	mov    r11d,ebx
   140029cb3:	mov    DWORD PTR [rbp-0x75],r9d
   140029cb7:	mov    r12d,ebx
   140029cba:	mov    DWORD PTR [rbp-0x79],ebx
   140029cbd:	mov    r13d,ebx
   140029cc0:	mov    esi,ebx
   140029cc2:	mov    r14d,ebx
   140029cc5:	mov    ecx,ebx
   140029cc7:	test   r15,r15
   140029cca:	jne    0x140029ce3
   140029ccc:	call   0x140009cb4
   140029cd1:	mov    DWORD PTR [rax],0x16
   140029cd7:	call   0x140008d58
   140029cdc:	xor    eax,eax
   140029cde:	jmp    0x14002a5ba
   140029ce3:	mov    rdi,r8
   140029ce6:	cmp    WORD PTR [r8],0x20
   140029ceb:	ja     0x140029d07
   140029ced:	movzx  eax,WORD PTR [r8]
   140029cf1:	movabs rdx,0x100002600
   140029cfb:	bt     rdx,rax
   140029cff:	jae    0x140029d07
   140029d01:	add    r8,0x2
   140029d05:	jmp    0x140029ce6
   140029d07:	mov    eax,0x30
   140029d0c:	movzx  edx,WORD PTR [r8]
   140029d10:	add    r8,0x2
   140029d14:	cmp    ecx,0x5
   140029d17:	jg     0x14002a00a
   140029d1d:	je     0x140029fe7
   140029d23:	mov    r9d,ecx
   140029d26:	test   ecx,ecx
   140029d28:	je     0x140029f77
   140029d2e:	dec    r9d
   140029d31:	je     0x140029ee3
   140029d37:	dec    r9d
   140029d3a:	je     0x140029e83
   140029d40:	dec    r9d
   140029d43:	je     0x140029de2
   140029d49:	dec    r9d
   140029d4c:	jne    0x14002a147
   140029d52:	mov    r9d,0x1
   140029d58:	mov    r12d,r9d
   140029d5b:	mov    DWORD PTR [rbp-0x79],r9d
   140029d5f:	lea    eax,[r9+0x2f]
   140029d63:	test   r11d,r11d
   140029d66:	jne    0x140029d9e
   140029d68:	jmp    0x140029d75
   140029d6a:	movzx  edx,WORD PTR [r8]
   140029d6e:	sub    r14d,r9d
   140029d71:	add    r8,0x2
   140029d75:	cmp    dx,ax
   140029d78:	je     0x140029d6a
   140029d7a:	jmp    0x140029d9e
   140029d7c:	cmp    dx,0x39
   140029d80:	ja     0x140029da3
   140029d82:	cmp    r11d,0x19
   140029d86:	jae    0x140029d96
   140029d88:	sub    dl,al
   140029d8a:	add    r11d,r9d
   140029d8d:	mov    BYTE PTR [r10],dl
   140029d90:	add    r10,r9
   140029d93:	sub    r14d,r9d
   140029d96:	movzx  edx,WORD PTR [r8]
   140029d9a:	add    r8,0x2
   140029d9e:	cmp    dx,ax
   140029da1:	jae    0x140029d7c
   140029da3:	movzx  ecx,dx
   140029da6:	lea    eax,[rcx-0x2b]
   140029da9:	test   eax,0xfffffffd
   140029dae:	je     0x140029dd4
   140029db0:	cmp    ecx,0x43
   140029db3:	jle    0x14002a155
   140029db9:	cmp    ecx,0x45
   140029dbc:	jle    0x140029dca
   140029dbe:	lea    eax,[rcx-0x64]
   140029dc1:	cmp    eax,r9d
   140029dc4:	ja     0x14002a155
   140029dca:	mov    ecx,0x6
   140029dcf:	jmp    0x140029d07
   140029dd4:	sub    r8,0x2
   140029dd8:	mov    ecx,0xb
   140029ddd:	jmp    0x140029d07
   140029de2:	mov    eax,0x1
   140029de7:	mov    r12d,eax
   140029dea:	lea    r9d,[rax+0x2f]
   140029dee:	jmp    0x140029e15
   140029df0:	cmp    dx,0x39
   140029df4:	ja     0x140029e1b
   140029df6:	cmp    r11d,0x19
   140029dfa:	jae    0x140029e0a
   140029dfc:	sub    dl,r9b
   140029dff:	add    r11d,eax
   140029e02:	mov    BYTE PTR [r10],dl
   140029e05:	add    r10,rax
   140029e08:	jmp    0x140029e0d
   140029e0a:	add    r14d,eax
   140029e0d:	movzx  edx,WORD PTR [r8]
   140029e11:	add    r8,0x2
   140029e15:	cmp    dx,r9w
   140029e19:	jae    0x140029df0
   140029e1b:	mov    rax,QWORD PTR [r15]
   140029e1e:	movzx  r9d,dx
   140029e22:	mov    rcx,QWORD PTR [rax+0xf0]
   140029e29:	mov    rax,QWORD PTR [rcx]
   140029e2c:	movsx  ecx,BYTE PTR [rax]
   140029e2f:	cmp    r9d,ecx
   140029e32:	jne    0x140029e41
   140029e34:	mov    ecx,0x4
   140029e39:	mov    r9,r12
   140029e3c:	jmp    0x140029d07
   140029e41:	lea    eax,[r9-0x2b]
   140029e45:	test   eax,0xfffffffd
   140029e4a:	je     0x140029e78
   140029e4c:	cmp    r9d,0x43
   140029e50:	jle    0x140029e68
   140029e52:	cmp    r9d,0x45
   140029e56:	jle    0x140029e70
   140029e58:	lea    eax,[r9-0x64]
   140029e5c:	mov    r9,r12
   140029e5f:	cmp    eax,r9d
   140029e62:	jbe    0x140029dca
   140029e68:	mov    r15,r12
   140029e6b:	jmp    0x14002a1b5
   140029e70:	mov    r9,r12
   140029e73:	jmp    0x140029dca
   140029e78:	sub    r8,0x2
   140029e7c:	mov    ecx,0xb
   140029e81:	jmp    0x140029e39
   140029e83:	lea    eax,[rdx-0x31]
   140029e86:	mov    ecx,0x8
   140029e8b:	cmp    ax,cx
   140029e8e:	ja     0x140029ea9
   140029e90:	mov    ecx,0x3
   140029e95:	sub    r8,0x2
   140029e99:	mov    eax,0x30
   140029e9e:	mov    r9d,0x1
   140029ea4:	jmp    0x140029d0c
   140029ea9:	mov    rax,QWORD PTR [r15]
   140029eac:	mov    rcx,QWORD PTR [rax+0xf0]
   140029eb3:	mov    rax,QWORD PTR [rcx]
   140029eb6:	movsx  ecx,BYTE PTR [rax]
   140029eb9:	movzx  eax,dx
   140029ebc:	cmp    eax,ecx
   140029ebe:	jne    0x140029ec7
   140029ec0:	mov    ecx,0x5
   140029ec5:	jmp    0x140029e99
   140029ec7:	mov    eax,0x30
   140029ecc:	cmp    dx,ax
   140029ecf:	jne    0x14002a0bf
   140029ed5:	mov    r9d,0x1
   140029edb:	mov    ecx,r9d
   140029ede:	jmp    0x140029d0c
   140029ee3:	mov    r9d,0x1
   140029ee9:	lea    eax,[rdx-0x31]
   140029eec:	lea    ecx,[r9+0x7]
   140029ef0:	mov    r12d,r9d
   140029ef3:	cmp    ax,cx
   140029ef6:	ja     0x140029f05
   140029ef8:	lea    ecx,[r9+0x2]
   140029efc:	sub    r8,0x2
   140029f00:	jmp    0x140029d07
   140029f05:	mov    rax,QWORD PTR [r15]
   140029f08:	movzx  r9d,dx
   140029f0c:	mov    rcx,QWORD PTR [rax+0xf0]
   140029f13:	mov    rax,QWORD PTR [rcx]
   140029f16:	movsx  ecx,BYTE PTR [rax]
   140029f19:	cmp    r9d,ecx
   140029f1c:	je     0x140029e34
   140029f22:	lea    eax,[r9-0x2b]
   140029f26:	test   eax,0xfffffffd
   140029f2b:	je     0x140029e78
   140029f31:	mov    eax,0x30
   140029f36:	cmp    r9d,eax
   140029f39:	je     0x140029f6f
   140029f3b:	cmp    r9d,0x43
   140029f3f:	jle    0x140029e68
   140029f45:	cmp    r9d,0x45
   140029f49:	jle    0x140029f6a
   140029f4b:	lea    eax,[r9-0x64]
   140029f4f:	mov    r9,r12
   140029f52:	cmp    eax,r9d
   140029f55:	ja     0x140029e68
   140029f5b:	mov    eax,0x30
   140029f60:	mov    ecx,0x6
   140029f65:	jmp    0x140029d0c
   140029f6a:	mov    r9,r12
   140029f6d:	jmp    0x140029f60
   140029f6f:	mov    r9,r12
   140029f72:	jmp    0x140029edb
   140029f77:	lea    eax,[rdx-0x31]
   140029f7a:	mov    ecx,0x8
   140029f7f:	cmp    ax,cx
   140029f82:	jbe    0x140029e90
   140029f88:	mov    rax,QWORD PTR [r15]
   140029f8b:	movzx  r9d,dx
   140029f8f:	mov    rcx,QWORD PTR [rax+0xf0]
   140029f96:	mov    rax,QWORD PTR [rcx]
   140029f99:	movsx  ecx,BYTE PTR [rax]
   140029f9c:	cmp    r9d,ecx
   140029f9f:	je     0x140029ec0
   140029fa5:	cmp    r9d,0x2b
   140029fa9:	je     0x140029fd9
   140029fab:	cmp    r9d,0x2d
   140029faf:	je     0x140029fc8
   140029fb1:	mov    eax,0x30
   140029fb6:	cmp    r9d,eax
   140029fb9:	je     0x140029ed5
   140029fbf:	sub    r8,0x2
   140029fc3:	jmp    0x14002a0c2
   140029fc8:	mov    ecx,0x2
   140029fcd:	mov    DWORD PTR [rbp-0x71],0x8000
   140029fd4:	jmp    0x140029e99
   140029fd9:	mov    ecx,0x2
   140029fde:	mov    WORD PTR [rbp-0x71],bx
   140029fe2:	jmp    0x140029e99
   140029fe7:	sub    dx,ax
   140029fea:	mov    ecx,0x9
   140029fef:	mov    DWORD PTR [rbp-0x79],r9d
   140029ff3:	cmp    dx,cx
   140029ff6:	ja     0x14002a0bf
   140029ffc:	mov    ecx,0x4
   14002a001:	sub    r8,0x2
   14002a005:	jmp    0x140029d0c
   14002a00a:	mov    r9d,ecx
   14002a00d:	sub    r9d,0x6
   14002a011:	je     0x14002a10f
   14002a017:	dec    r9d
   14002a01a:	je     0x14002a09a
   14002a01c:	dec    r9d
   14002a01f:	je     0x14002a062
   14002a021:	dec    r9d
   14002a024:	je     0x14002a161
   14002a02a:	cmp    r9d,0x2
   14002a02e:	jne    0x14002a147
   14002a034:	cmp    DWORD PTR [rbp+0x77],ebx
   14002a037:	je     0x140029fbf
   14002a039:	movzx  eax,dx
   14002a03c:	lea    rdi,[r8-0x2]
   14002a040:	cmp    eax,0x2b
   14002a043:	je     0x14002a058
   14002a045:	cmp    eax,0x2d
   14002a048:	jne    0x14002a0bf
   14002a04a:	or     DWORD PTR [rbp-0x75],0xffffffff
   14002a04e:	mov    ecx,0x7
   14002a053:	jmp    0x140029e99
   14002a058:	mov    ecx,0x7
   14002a05d:	jmp    0x140029e99
   14002a062:	mov    r9d,0x1
   14002a068:	mov    r13d,r9d
   14002a06b:	lea    eax,[r9+0x2f]
   14002a06f:	jmp    0x14002a079
   14002a071:	movzx  edx,WORD PTR [r8]
   14002a075:	add    r8,0x2
   14002a079:	cmp    dx,ax
   14002a07c:	je     0x14002a071
   14002a07e:	sub    dx,0x31
   14002a082:	mov    ecx,0x8
   14002a087:	cmp    dx,cx
   14002a08a:	ja     0x14002a155
   14002a090:	mov    ecx,0x9
   14002a095:	jmp    0x14002a001
   14002a09a:	lea    eax,[rdx-0x31]
   14002a09d:	mov    ecx,0x8
   14002a0a2:	cmp    ax,cx
   14002a0a5:	ja     0x14002a0b1
   14002a0a7:	mov    ecx,0x9
   14002a0ac:	jmp    0x140029e95
   14002a0b1:	mov    eax,0x30
   14002a0b6:	cmp    dx,ax
   14002a0b9:	je     0x140029e9e
   14002a0bf:	mov    r8,rdi
   14002a0c2:	mov    r15d,0x1
   14002a0c8:	mov    rax,QWORD PTR [rbp-0x69]
   14002a0cc:	mov    QWORD PTR [rax],r8
   14002a0cf:	test   r12d,r12d
   14002a0d2:	je     0x14002a590
   14002a0d8:	cmp    r11d,0x18
   14002a0dc:	jbe    0x14002a0f7
   14002a0de:	mov    al,BYTE PTR [rbp-0xa]
   14002a0e1:	cmp    al,0x5
   14002a0e3:	jl     0x14002a0eb
   14002a0e5:	add    al,r15b
   14002a0e8:	mov    BYTE PTR [rbp-0xa],al
   14002a0eb:	sub    r10,r15
   14002a0ee:	mov    r11d,0x18
   14002a0f4:	add    r14d,r15d
   14002a0f7:	test   r11d,r11d
   14002a0fa:	jne    0x14002a1c4
   14002a100:	movzx  edx,bx
   14002a103:	movzx  eax,bx
   14002a106:	mov    edi,ebx
   14002a108:	mov    ecx,ebx
   14002a10a:	jmp    0x14002a59f
   14002a10f:	lea    eax,[rdx-0x31]
   14002a112:	mov    ecx,0x8
   14002a117:	lea    rdi,[r8-0x4]
   14002a11b:	cmp    ax,cx
   14002a11e:	jbe    0x14002a0a7
   14002a120:	movzx  eax,dx
   14002a123:	cmp    eax,0x2b
   14002a126:	je     0x14002a142
   14002a128:	cmp    eax,0x2d
   14002a12b:	je     0x14002a04a
   14002a131:	lea    r9d,[rcx+0x28]
   14002a135:	cmp    eax,r9d
   14002a138:	jne    0x14002a0bf
   14002a13a:	mov    eax,r9d
   14002a13d:	jmp    0x140029e9e
   14002a142:	mov    ecx,0x7
   14002a147:	cmp    ecx,0xa
   14002a14a:	je     0x14002a0c2
   14002a150:	jmp    0x140029e99
   14002a155:	sub    r8,0x2
   14002a159:	mov    r15,r9
   14002a15c:	jmp    0x14002a0c8
   14002a161:	mov    r15d,0x1
   14002a167:	mov    r13d,r15d
   14002a16a:	lea    r9d,[r15+0x2f]
   14002a16e:	jmp    0x14002a192
   14002a170:	cmp    dx,0x39
   14002a174:	ja     0x14002a1af
   14002a176:	lea    esi,[rsi+rsi*4]
   14002a179:	movzx  eax,dx
   14002a17c:	lea    esi,[rsi-0x18]
   14002a17f:	lea    esi,[rax+rsi*2]
   14002a182:	cmp    esi,0x1450
   14002a188:	jg     0x14002a19a
   14002a18a:	movzx  edx,WORD PTR [r8]
   14002a18e:	add    r8,0x2
   14002a192:	cmp    dx,r9w
   14002a196:	jae    0x14002a170
   14002a198:	jmp    0x14002a1af
   14002a19a:	mov    esi,0x1451
   14002a19f:	jmp    0x14002a1af
   14002a1a1:	cmp    dx,0x39
   14002a1a5:	ja     0x14002a1b5
   14002a1a7:	movzx  edx,WORD PTR [r8]
   14002a1ab:	add    r8,0x2
   14002a1af:	cmp    dx,r9w
   14002a1b3:	jae    0x14002a1a1
   14002a1b5:	sub    r8,0x2
   14002a1b9:	jmp    0x14002a0c8
   14002a1be:	dec    r11d
   14002a1c1:	add    r14d,r15d
   14002a1c4:	sub    r10,r15
   14002a1c7:	cmp    BYTE PTR [r10],bl
   14002a1ca:	je     0x14002a1be
   14002a1cc:	lea    r8,[rbp-0x41]
   14002a1d0:	lea    rcx,[rbp-0x21]
   14002a1d4:	mov    edx,r11d
   14002a1d7:	call   0x140028350
   14002a1dc:	cmp    DWORD PTR [rbp-0x75],ebx
   14002a1df:	jge    0x14002a1e3
   14002a1e1:	neg    esi
   14002a1e3:	add    esi,r14d
   14002a1e6:	test   r13d,r13d
   14002a1e9:	jne    0x14002a1ee
   14002a1eb:	add    esi,DWORD PTR [rbp+0x67]
   14002a1ee:	cmp    DWORD PTR [rbp-0x79],ebx
   14002a1f1:	jne    0x14002a1f6
   14002a1f3:	sub    esi,DWORD PTR [rbp+0x6f]
   14002a1f6:	cmp    esi,0x1450
   14002a1fc:	jg     0x14002a57a
   14002a202:	cmp    esi,0xffffebb0
   14002a208:	jl     0x14002a56c
   14002a20e:	lea    r14,[rip+0x1331b]        # 0x14003d530
   14002a215:	sub    r14,0x60
   14002a219:	test   esi,esi
   14002a21b:	je     0x14002a55a
   14002a221:	jns    0x14002a230
   14002a223:	lea    r14,[rip+0x13466]        # 0x14003d690
   14002a22a:	neg    esi
   14002a22c:	sub    r14,0x60
   14002a230:	cmp    DWORD PTR [rbp-0x6d],ebx
   14002a233:	jne    0x14002a239
   14002a235:	mov    WORD PTR [rbp-0x41],bx
   14002a239:	test   esi,esi
   14002a23b:	je     0x14002a55a
   14002a241:	mov    edi,0x80000000
   14002a246:	mov    r9d,0x7fff
   14002a24c:	mov    eax,esi
   14002a24e:	add    r14,0x54
   14002a252:	sar    esi,0x3
   14002a255:	mov    QWORD PTR [rbp-0x61],r14
   14002a259:	and    eax,0x7
   14002a25c:	je     0x14002a552
   14002a262:	cdqe   
   14002a264:	mov    r11d,0x8000
   14002a26a:	lea    rcx,[rax+rax*2]
   14002a26e:	lea    rdx,[r14+rcx*4]
   14002a272:	mov    QWORD PTR [rbp-0x69],rdx
   14002a276:	cmp    WORD PTR [rdx],r11w
   14002a27a:	jb     0x14002a2a1
   14002a27c:	mov    eax,DWORD PTR [rdx+0x8]
   14002a27f:	movsd  xmm0,QWORD PTR [rdx]
   14002a283:	lea    rdx,[rbp-0x31]
   14002a287:	mov    DWORD PTR [rbp-0x29],eax
   14002a28a:	movsd  QWORD PTR [rbp-0x31],xmm0
   14002a28f:	mov    rax,QWORD PTR [rbp-0x31]
   14002a293:	shr    rax,0x10
   14002a297:	mov    QWORD PTR [rbp-0x69],rdx
   14002a29b:	sub    eax,r15d
   14002a29e:	mov    DWORD PTR [rbp-0x2f],eax
   14002a2a1:	movzx  eax,WORD PTR [rdx+0xa]
   14002a2a5:	movzx  ecx,WORD PTR [rbp-0x37]
   14002a2a9:	mov    QWORD PTR [rbp-0x51],rbx
   14002a2ad:	movzx  r12d,ax
   14002a2b1:	and    ax,r9w
   14002a2b5:	mov    DWORD PTR [rbp-0x49],ebx
   14002a2b8:	xor    r12w,cx
   14002a2bc:	and    cx,r9w
   14002a2c0:	and    r12w,r11w
   14002a2c4:	lea    r8d,[rcx+rax*1]
   14002a2c8:	cmp    cx,r9w
   14002a2cc:	jae    0x14002a53e
   14002a2d2:	cmp    ax,r9w
   14002a2d6:	jae    0x14002a53e
   14002a2dc:	mov    r10d,0xbffd
   14002a2e2:	cmp    r8w,r10w
   14002a2e6:	ja     0x14002a53e
   14002a2ec:	mov    r10d,0x3fbf
   14002a2f2:	cmp    r8w,r10w
   14002a2f6:	ja     0x14002a304
   14002a2f8:	mov    QWORD PTR [rbp-0x3d],rbx
   14002a2fc:	mov    DWORD PTR [rbp-0x41],ebx
   14002a2ff:	jmp    0x14002a552
   14002a304:	test   cx,cx
   14002a307:	jne    0x14002a329
   14002a309:	add    r8w,r15w
   14002a30d:	test   DWORD PTR [rbp-0x39],0x7fffffff
   14002a314:	jne    0x14002a329
   14002a316:	cmp    DWORD PTR [rbp-0x3d],ebx
   14002a319:	jne    0x14002a329
   14002a31b:	cmp    DWORD PTR [rbp-0x41],ebx
   14002a31e:	jne    0x14002a329
   14002a320:	mov    WORD PTR [rbp-0x37],bx
   14002a324:	jmp    0x14002a552
   14002a329:	test   ax,ax
   14002a32c:	jne    0x14002a344
   14002a32e:	add    r8w,r15w
   14002a332:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14002a339:	jne    0x14002a344
   14002a33b:	cmp    DWORD PTR [rdx+0x4],ebx
   14002a33e:	jne    0x14002a344
   14002a340:	cmp    DWORD PTR [rdx],ebx
   14002a342:	je     0x14002a2f8
   14002a344:	mov    r13d,ebx
   14002a347:	lea    r9,[rbp-0x51]
   14002a34b:	mov    r10d,0x5
   14002a351:	mov    DWORD PTR [rbp-0x79],r10d
   14002a355:	test   r10d,r10d
   14002a358:	jle    0x14002a3cb
   14002a35a:	lea    eax,[r13*2+0x0]
   14002a362:	lea    rdi,[rbp-0x41]
   14002a366:	lea    r14,[rdx+0x8]
   14002a36a:	movsxd rcx,eax
   14002a36d:	mov    eax,r13d
   14002a370:	and    eax,r15d
   14002a373:	add    rdi,rcx
   14002a376:	mov    edx,eax
   14002a378:	movzx  eax,WORD PTR [r14]
   14002a37c:	movzx  ecx,WORD PTR [rdi]
   14002a37f:	mov    r11d,ebx
   14002a382:	imul   ecx,eax
   14002a385:	mov    eax,DWORD PTR [r9]
   14002a388:	lea    r15d,[rax+rcx*1]
   14002a38c:	cmp    r15d,eax
   14002a38f:	jb     0x14002a396
   14002a391:	cmp    r15d,ecx
   14002a394:	jae    0x14002a39c
   14002a396:	mov    r11d,0x1
   14002a39c:	mov    DWORD PTR [r9],r15d
   14002a39f:	mov    r15d,0x1
   14002a3a5:	test   r11d,r11d
   14002a3a8:	je     0x14002a3af
   14002a3aa:	add    WORD PTR [r9+0x4],r15w
   14002a3af:	mov    r11d,DWORD PTR [rbp-0x79]
   14002a3b3:	add    rdi,0x2
   14002a3b7:	sub    r14,0x2
   14002a3bb:	sub    r11d,r15d
   14002a3be:	mov    DWORD PTR [rbp-0x79],r11d
   14002a3c2:	test   r11d,r11d
   14002a3c5:	jg     0x14002a378
   14002a3c7:	mov    rdx,QWORD PTR [rbp-0x69]
   14002a3cb:	sub    r10d,r15d
   14002a3ce:	add    r9,0x2
   14002a3d2:	add    r13d,r15d
   14002a3d5:	test   r10d,r10d
   14002a3d8:	jg     0x14002a351
   14002a3de:	mov    r10d,DWORD PTR [rbp-0x49]
   14002a3e2:	mov    r9d,DWORD PTR [rbp-0x51]
   14002a3e6:	mov    eax,0xc002
   14002a3eb:	add    r8w,ax
   14002a3ef:	mov    edi,0x80000000
   14002a3f4:	mov    r13d,0xffff
   14002a3fa:	test   r8w,r8w
   14002a3fe:	jle    0x14002a43f
   14002a400:	test   edi,r10d
   14002a403:	jne    0x14002a439
   14002a405:	mov    r11d,DWORD PTR [rbp-0x4d]
   14002a409:	mov    edx,r9d
   14002a40c:	add    r10d,r10d
   14002a40f:	shr    edx,0x1f
   14002a412:	add    r9d,r9d
   14002a415:	mov    ecx,r11d
   14002a418:	shr    ecx,0x1f
   14002a41b:	lea    eax,[r11+r11*1]
   14002a41f:	add    r8w,r13w
   14002a423:	or     eax,edx
   14002a425:	or     r10d,ecx
   14002a428:	mov    DWORD PTR [rbp-0x51],r9d
   14002a42c:	mov    DWORD PTR [rbp-0x4d],eax
   14002a42f:	mov    DWORD PTR [rbp-0x49],r10d
   14002a433:	test   r8w,r8w
   14002a437:	jg     0x14002a400
   14002a439:	test   r8w,r8w
   14002a43d:	jg     0x14002a4a9
   14002a43f:	add    r8w,r13w
   14002a443:	jns    0x14002a4a9
   14002a445:	movzx  eax,r8w
   14002a449:	mov    edi,ebx
   14002a44b:	neg    ax
   14002a44e:	movzx  edx,ax
   14002a451:	add    r8w,dx
   14002a455:	test   BYTE PTR [rbp-0x51],r15b
   14002a459:	je     0x14002a45e
   14002a45b:	add    edi,r15d
   14002a45e:	mov    r11d,DWORD PTR [rbp-0x4d]
   14002a462:	mov    eax,r10d
   14002a465:	shr    r9d,1
   14002a468:	mov    ecx,r11d
   14002a46b:	shl    eax,0x1f
   14002a46e:	shr    r11d,1
   14002a471:	shl    ecx,0x1f
   14002a474:	or     r11d,eax
   14002a477:	shr    r10d,1
   14002a47a:	or     r9d,ecx
   14002a47d:	mov    DWORD PTR [rbp-0x4d],r11d
   14002a481:	mov    DWORD PTR [rbp-0x51],r9d
   14002a485:	sub    rdx,r15
   14002a488:	jne    0x14002a455
   14002a48a:	test   edi,edi
   14002a48c:	mov    DWORD PTR [rbp-0x49],r10d
   14002a490:	mov    edi,0x80000000
   14002a495:	je     0x14002a4a9
   14002a497:	movzx  eax,r9w
   14002a49b:	or     ax,r15w
   14002a49f:	mov    WORD PTR [rbp-0x51],ax
   14002a4a3:	mov    r9d,DWORD PTR [rbp-0x51]
   14002a4a7:	jmp    0x14002a4ad
   14002a4a9:	movzx  eax,WORD PTR [rbp-0x51]
   14002a4ad:	mov    r14,QWORD PTR [rbp-0x61]
   14002a4b1:	mov    r11d,0x8000
   14002a4b7:	cmp    ax,r11w
   14002a4bb:	ja     0x14002a4cd
   14002a4bd:	and    r9d,0x1ffff
   14002a4c4:	cmp    r9d,0x18000
   14002a4cb:	jne    0x14002a515
   14002a4cd:	mov    eax,DWORD PTR [rbp-0x4f]
   14002a4d0:	or     ecx,0xffffffff
   14002a4d3:	cmp    eax,ecx
   14002a4d5:	jne    0x14002a50f
   14002a4d7:	mov    eax,DWORD PTR [rbp-0x4b]
   14002a4da:	mov    DWORD PTR [rbp-0x4f],ebx
   14002a4dd:	cmp    eax,ecx
   14002a4df:	jne    0x14002a503
   14002a4e1:	movzx  eax,WORD PTR [rbp-0x47]
   14002a4e5:	mov    DWORD PTR [rbp-0x4b],ebx
   14002a4e8:	cmp    ax,r13w
   14002a4ec:	jne    0x14002a4f9
   14002a4ee:	mov    WORD PTR [rbp-0x47],r11w
   14002a4f3:	add    r8w,r15w
   14002a4f7:	jmp    0x14002a509
   14002a4f9:	add    ax,r15w
   14002a4fd:	mov    WORD PTR [rbp-0x47],ax
   14002a501:	jmp    0x14002a509
   14002a503:	add    eax,r15d
   14002a506:	mov    DWORD PTR [rbp-0x4b],eax
   14002a509:	mov    r10d,DWORD PTR [rbp-0x49]
   14002a50d:	jmp    0x14002a515
   14002a50f:	add    eax,r15d
   14002a512:	mov    DWORD PTR [rbp-0x4f],eax
   14002a515:	mov    r9d,0x7fff
   14002a51b:	cmp    r8w,r9w
   14002a51f:	jae    0x14002a53e
   14002a521:	movzx  eax,WORD PTR [rbp-0x4f]
   14002a525:	or     r8w,r12w
   14002a529:	mov    DWORD PTR [rbp-0x3b],r10d
   14002a52d:	mov    WORD PTR [rbp-0x41],ax
   14002a531:	mov    eax,DWORD PTR [rbp-0x4d]
   14002a534:	mov    WORD PTR [rbp-0x37],r8w
   14002a539:	mov    DWORD PTR [rbp-0x3f],eax
   14002a53c:	jmp    0x14002a552
   14002a53e:	neg    r12w
   14002a542:	mov    QWORD PTR [rbp-0x41],rbx
   14002a546:	sbb    eax,eax
   14002a548:	and    eax,edi
   14002a54a:	add    eax,0x7fff8000
   14002a54f:	mov    DWORD PTR [rbp-0x39],eax
   14002a552:	test   esi,esi
   14002a554:	jne    0x14002a24c
   14002a55a:	mov    eax,DWORD PTR [rbp-0x39]
   14002a55d:	movzx  edx,WORD PTR [rbp-0x41]
   14002a561:	mov    ecx,DWORD PTR [rbp-0x3f]
   14002a564:	mov    edi,DWORD PTR [rbp-0x3b]
   14002a567:	shr    eax,0x10
   14002a56a:	jmp    0x14002a59f
   14002a56c:	mov    edx,ebx
   14002a56e:	movzx  eax,bx
   14002a571:	mov    edi,ebx
   14002a573:	mov    ecx,ebx
   14002a575:	mov    ebx,r15d
   14002a578:	jmp    0x14002a59f
   14002a57a:	mov    ecx,ebx
   14002a57c:	movzx  edx,bx
   14002a57f:	mov    eax,0x7fff
   14002a584:	mov    ebx,0x2
   14002a589:	mov    edi,0x80000000
   14002a58e:	jmp    0x14002a59f
   14002a590:	movzx  edx,bx
   14002a593:	movzx  eax,bx
   14002a596:	mov    edi,ebx
   14002a598:	mov    ecx,ebx
   14002a59a:	mov    ebx,0x4
   14002a59f:	mov    r8,QWORD PTR [rbp-0x59]
   14002a5a3:	or     ax,WORD PTR [rbp-0x71]
   14002a5a7:	mov    WORD PTR [r8+0xa],ax
   14002a5ac:	mov    eax,ebx
   14002a5ae:	mov    WORD PTR [r8],dx
   14002a5b2:	mov    DWORD PTR [r8+0x2],ecx
   14002a5b6:	mov    DWORD PTR [r8+0x6],edi
   14002a5ba:	mov    rcx,QWORD PTR [rbp-0x1]
   14002a5be:	xor    rcx,rsp
   14002a5c1:	call   0x14000c380
   14002a5c6:	mov    rbx,QWORD PTR [rsp+0xf0]
   14002a5ce:	add    rsp,0xa0
   14002a5d5:	pop    r15
   14002a5d7:	pop    r14
   14002a5d9:	pop    r13
   14002a5db:	pop    r12
   14002a5dd:	pop    rdi
   14002a5de:	pop    rsi
   14002a5df:	pop    rbp
   14002a5e0:	ret    
   14002a5e1:	int3   
   14002a5e2:	jmp    QWORD PTR [rip+0x1b28]        # 0x14002c110
   14002a5e8:	jmp    QWORD PTR [rip+0x1b2a]        # 0x14002c118
   14002a5ee:	jmp    QWORD PTR [rip+0x1b2c]        # 0x14002c120
   14002a5f4:	jmp    QWORD PTR [rip+0x1b2e]        # 0x14002c128
   14002a5fa:	jmp    QWORD PTR [rip+0x1b30]        # 0x14002c130
   14002a600:	jmp    QWORD PTR [rip+0x1b32]        # 0x14002c138
   14002a606:	jmp    QWORD PTR [rip+0x1b34]        # 0x14002c140
   14002a60c:	jmp    QWORD PTR [rip+0x1b36]        # 0x14002c148
   14002a612:	jmp    QWORD PTR [rip+0x1b38]        # 0x14002c150
   14002a618:	jmp    QWORD PTR [rip+0x1b3a]        # 0x14002c158
   14002a61e:	jmp    QWORD PTR [rip+0x1b3c]        # 0x14002c160
   14002a624:	jmp    QWORD PTR [rip+0x1b3e]        # 0x14002c168
   14002a62a:	jmp    QWORD PTR [rip+0x1b40]        # 0x14002c170
   14002a630:	jmp    QWORD PTR [rip+0x1b42]        # 0x14002c178
   14002a636:	jmp    QWORD PTR [rip+0x1b44]        # 0x14002c180
   14002a63c:	jmp    QWORD PTR [rip+0x1b46]        # 0x14002c188
   14002a642:	jmp    QWORD PTR [rip+0x1b48]        # 0x14002c190
   14002a648:	jmp    QWORD PTR [rip+0x1b4a]        # 0x14002c198
   14002a64e:	jmp    QWORD PTR [rip+0x1b4c]        # 0x14002c1a0
   14002a654:	jmp    QWORD PTR [rip+0x1b4e]        # 0x14002c1a8
   14002a65a:	jmp    QWORD PTR [rip+0x1b50]        # 0x14002c1b0
   14002a660:	jmp    QWORD PTR [rip+0x1b52]        # 0x14002c1b8
   14002a666:	jmp    QWORD PTR [rip+0x1994]        # 0x14002c000
   14002a66c:	jmp    QWORD PTR [rip+0x1b56]        # 0x14002c1c8
   14002a672:	jmp    QWORD PTR [rip+0x1b58]        # 0x14002c1d0
   14002a678:	jmp    QWORD PTR [rip+0x1b5a]        # 0x14002c1d8
   14002a67e:	jmp    QWORD PTR [rip+0x1b5c]        # 0x14002c1e0
   14002a684:	jmp    QWORD PTR [rip+0x1b5e]        # 0x14002c1e8
   14002a68a:	jmp    QWORD PTR [rip+0x1b60]        # 0x14002c1f0
   14002a690:	jmp    QWORD PTR [rip+0x1b62]        # 0x14002c1f8
   14002a696:	jmp    QWORD PTR [rip+0x1b64]        # 0x14002c200
   14002a69c:	jmp    QWORD PTR [rip+0x1b66]        # 0x14002c208
   14002a6a2:	jmp    QWORD PTR [rip+0x1b68]        # 0x14002c210
   14002a6a8:	jmp    QWORD PTR [rip+0x1b6a]        # 0x14002c218
   14002a6ae:	jmp    QWORD PTR [rip+0x1b6c]        # 0x14002c220
   14002a6b4:	jmp    QWORD PTR [rip+0x1b6e]        # 0x14002c228
   14002a6ba:	jmp    QWORD PTR [rip+0x1b70]        # 0x14002c230
   14002a6c0:	jmp    QWORD PTR [rip+0x1b72]        # 0x14002c238
   14002a6c6:	jmp    QWORD PTR [rip+0x1b74]        # 0x14002c240
   14002a6cc:	jmp    QWORD PTR [rip+0x1b76]        # 0x14002c248
   14002a6d2:	jmp    QWORD PTR [rip+0x1b78]        # 0x14002c250
   14002a6d8:	jmp    QWORD PTR [rip+0x1b7a]        # 0x14002c258
   14002a6de:	jmp    QWORD PTR [rip+0x1b7c]        # 0x14002c260
   14002a6e4:	jmp    QWORD PTR [rip+0x1b7e]        # 0x14002c268
   14002a6ea:	jmp    QWORD PTR [rip+0x1b80]        # 0x14002c270
   14002a6f0:	jmp    QWORD PTR [rip+0x1b82]        # 0x14002c278
   14002a6f6:	jmp    QWORD PTR [rip+0x1b84]        # 0x14002c280
   14002a6fc:	jmp    QWORD PTR [rip+0x1b86]        # 0x14002c288
   14002a702:	jmp    QWORD PTR [rip+0x1b88]        # 0x14002c290
   14002a708:	jmp    QWORD PTR [rip+0x1b8a]        # 0x14002c298
   14002a70e:	jmp    QWORD PTR [rip+0x19f4]        # 0x14002c108
   14002a714:	jmp    QWORD PTR [rip+0x19e6]        # 0x14002c100
   14002a71a:	jmp    QWORD PTR [rip+0x19d8]        # 0x14002c0f8
   14002a720:	jmp    QWORD PTR [rip+0x19ca]        # 0x14002c0f0
   14002a726:	jmp    QWORD PTR [rip+0x19bc]        # 0x14002c0e8
   14002a72c:	jmp    QWORD PTR [rip+0x19ae]        # 0x14002c0e0
   14002a732:	jmp    QWORD PTR [rip+0x19a0]        # 0x14002c0d8
   14002a738:	jmp    QWORD PTR [rip+0x196a]        # 0x14002c0a8
   14002a73e:	jmp    QWORD PTR [rip+0x195c]        # 0x14002c0a0
   14002a744:	jmp    QWORD PTR [rip+0x194e]        # 0x14002c098
   14002a74a:	jmp    QWORD PTR [rip+0x1940]        # 0x14002c090
   14002a750:	jmp    QWORD PTR [rip+0x1932]        # 0x14002c088
   14002a756:	jmp    QWORD PTR [rip+0x1924]        # 0x14002c080
   14002a75c:	jmp    QWORD PTR [rip+0x1916]        # 0x14002c078
   14002a762:	jmp    QWORD PTR [rip+0x1908]        # 0x14002c070
   14002a768:	jmp    QWORD PTR [rip+0x18fa]        # 0x14002c068
   14002a76e:	jmp    QWORD PTR [rip+0x18ec]        # 0x14002c060
   14002a774:	jmp    QWORD PTR [rip+0x18de]        # 0x14002c058
   14002a77a:	jmp    QWORD PTR [rip+0x18d0]        # 0x14002c050
   14002a780:	jmp    QWORD PTR [rip+0x18c2]        # 0x14002c048
   14002a786:	jmp    QWORD PTR [rip+0x18b4]        # 0x14002c040
   14002a78c:	jmp    QWORD PTR [rip+0x18a6]        # 0x14002c038
   14002a792:	jmp    QWORD PTR [rip+0x1898]        # 0x14002c030
   14002a798:	jmp    QWORD PTR [rip+0x188a]        # 0x14002c028
   14002a79e:	jmp    QWORD PTR [rip+0x187c]        # 0x14002c020
   14002a7a4:	jmp    QWORD PTR [rip+0x186e]        # 0x14002c018
   14002a7aa:	jmp    QWORD PTR [rip+0x1860]        # 0x14002c010
   14002a7b0:	jmp    QWORD PTR [rip+0x1852]        # 0x14002c008
   14002a7b6:	jmp    QWORD PTR [rip+0x1a04]        # 0x14002c1c0
   14002a7bc:	int3   
   14002a7bd:	int3   
   14002a7be:	int3   
   14002a7bf:	int3   
   14002a7c0:	rex push rbp
   14002a7c2:	sub    rsp,0x20
   14002a7c6:	mov    rbp,rdx
   14002a7c9:	mov    rdx,QWORD PTR [rbp+0x30]
   14002a7cd:	mov    rcx,QWORD PTR [rbp+0x38]
   14002a7d1:	call   0x140002470
   14002a7d6:	add    rsp,0x20
   14002a7da:	pop    rbp
   14002a7db:	ret    
   14002a7dc:	mov    QWORD PTR [rsp+0x10],rdx
   14002a7e1:	push   rbp
   14002a7e2:	sub    rsp,0x20
   14002a7e6:	mov    rbp,rdx
   14002a7e9:	mov    rcx,QWORD PTR [rbp+0x20]
   14002a7ed:	call   0x140005778
   14002a7f2:	xor    edx,edx
   14002a7f4:	xor    ecx,ecx
   14002a7f6:	call   0x140006570
   14002a7fb:	nop
   14002a7fc:	int3   
   14002a7fd:	int3   
   14002a7fe:	int3   
   14002a7ff:	int3   
   14002a800:	mov    QWORD PTR [rsp+0x10],rdx
   14002a805:	push   rbp
   14002a806:	sub    rsp,0x20
   14002a80a:	mov    rbp,rdx
   14002a80d:	mov    rdx,QWORD PTR [rbp+0x88]
   14002a814:	mov    rcx,QWORD PTR [rbp+0x70]
   14002a818:	call   0x140002ce0
   14002a81d:	xor    edx,edx
   14002a81f:	xor    ecx,ecx
   14002a821:	call   0x140006570
   14002a826:	nop
   14002a827:	int3   
   14002a828:	int3   
   14002a829:	int3   
   14002a82a:	int3   
   14002a82b:	int3   
   14002a82c:	int3   
   14002a82d:	int3   
   14002a82e:	int3   
   14002a82f:	int3   
   14002a830:	mov    QWORD PTR [rsp+0x10],rdx
   14002a835:	push   rbp
   14002a836:	sub    rsp,0x20
   14002a83a:	mov    rbp,rdx
   14002a83d:	xor    edx,edx
   14002a83f:	xor    ecx,ecx
   14002a841:	call   0x140006570
   14002a846:	nop
   14002a847:	int3   
   14002a848:	int3   
   14002a849:	int3   
   14002a84a:	int3   
   14002a84b:	int3   
   14002a84c:	int3   
   14002a84d:	int3   
   14002a84e:	int3   
   14002a84f:	int3   
   14002a850:	mov    QWORD PTR [rsp+0x10],rdx
   14002a855:	push   rbp
   14002a856:	sub    rsp,0x20
   14002a85a:	mov    rbp,rdx
   14002a85d:	xor    edx,edx
   14002a85f:	xor    ecx,ecx
   14002a861:	call   0x140006570
   14002a866:	nop
   14002a867:	int3   
   14002a868:	int3   
   14002a869:	int3   
   14002a86a:	int3   
   14002a86b:	int3   
   14002a86c:	int3   
   14002a86d:	int3   
   14002a86e:	int3   
   14002a86f:	int3   
   14002a870:	rex push rbp
   14002a872:	sub    rsp,0x20
   14002a876:	mov    rbp,rdx
   14002a879:	mov    rdx,QWORD PTR [rbp+0x48]
   14002a87d:	mov    rcx,QWORD PTR [rbp+0x58]
   14002a881:	call   0x140002470
   14002a886:	add    rsp,0x20
   14002a88a:	pop    rbp
   14002a88b:	ret    
   14002a88c:	int3   
   14002a88d:	int3   
   14002a88e:	int3   
   14002a88f:	int3   
   14002a890:	rex push rbp
   14002a892:	sub    rsp,0x20
   14002a896:	mov    rbp,rdx
   14002a899:	mov    rdx,QWORD PTR [rbp+0x48]
   14002a89d:	mov    rcx,QWORD PTR [rbp+0x58]
   14002a8a1:	call   0x140002470
   14002a8a6:	add    rsp,0x20
   14002a8aa:	pop    rbp
   14002a8ab:	ret    
   14002a8ac:	int3   
   14002a8ad:	int3   
   14002a8ae:	int3   
   14002a8af:	int3   
   14002a8b0:	rex push rbp
   14002a8b2:	sub    rsp,0x20
   14002a8b6:	mov    rbp,rdx
   14002a8b9:	mov    rdx,QWORD PTR [rbp+0x48]
   14002a8bd:	mov    rcx,QWORD PTR [rbp+0x58]
   14002a8c1:	call   0x140002470
   14002a8c6:	add    rsp,0x20
   14002a8ca:	pop    rbp
   14002a8cb:	ret    
   14002a8cc:	int3   
   14002a8cd:	int3   
   14002a8ce:	int3   
   14002a8cf:	int3   
   14002a8d0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a8d7:	jmp    0x140002330
   14002a8dc:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a8e3:	add    rcx,0x10
   14002a8e7:	jmp    0x1400023f0
   14002a8ec:	int3   
   14002a8ed:	int3   
   14002a8ee:	int3   
   14002a8ef:	int3   
   14002a8f0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a8f7:	jmp    0x1400022f0
   14002a8fc:	int3   
   14002a8fd:	int3   
   14002a8fe:	int3   
   14002a8ff:	int3   
   14002a900:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a907:	jmp    0x140002330
   14002a90c:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a913:	add    rcx,0x10
   14002a917:	jmp    0x1400023f0
   14002a91c:	int3   
   14002a91d:	int3   
   14002a91e:	int3   
   14002a91f:	int3   
   14002a920:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a927:	jmp    0x140002330
   14002a92c:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a933:	add    rcx,0x10
   14002a937:	jmp    0x1400023f0
   14002a93c:	int3   
   14002a93d:	int3   
   14002a93e:	int3   
   14002a93f:	int3   
   14002a940:	mov    QWORD PTR [rsp+0x10],rdx
   14002a945:	push   rbp
   14002a946:	sub    rsp,0x20
   14002a94a:	mov    rbp,rdx
   14002a94d:	mov    rcx,QWORD PTR [rbp+0x58]
   14002a951:	call   0x140005778
   14002a956:	xor    edx,edx
   14002a958:	xor    ecx,ecx
   14002a95a:	call   0x140006570
   14002a95f:	nop
   14002a960:	mov    QWORD PTR [rsp+0x10],rdx
   14002a965:	push   rbp
   14002a966:	sub    rsp,0x30
   14002a96a:	mov    rbp,rdx
   14002a96d:	mov    rcx,QWORD PTR [rbp+0x50]
   14002a971:	call   0x140003d10
   14002a976:	xor    edx,edx
   14002a978:	xor    ecx,ecx
   14002a97a:	call   0x140006570
   14002a97f:	nop
   14002a980:	mov    QWORD PTR [rsp+0x10],rdx
   14002a985:	push   rbp
   14002a986:	sub    rsp,0x20
   14002a98a:	mov    rbp,rdx
   14002a98d:	mov    rcx,QWORD PTR [rbp+0x68]
   14002a991:	mov    QWORD PTR [rbp+0x68],rcx
   14002a995:	xor    eax,eax
   14002a997:	inc    rcx
   14002a99a:	je     0x14002a9b1
   14002a99c:	cmp    rcx,0xffffffffffffffff
   14002a9a0:	ja     0x14002a9ac
   14002a9a2:	call   0x14000570c
   14002a9a7:	test   rax,rax
   14002a9aa:	jne    0x14002a9b1
   14002a9ac:	call   0x140005470
   14002a9b1:	mov    QWORD PTR [rbp+0x78],rax
   14002a9b5:	lea    rax,[rip+0xfffffffffffd8299]        # 0x140002c55
   14002a9bc:	add    rsp,0x20
   14002a9c0:	pop    rbp
   14002a9c1:	ret    
   14002a9c2:	int3   
   14002a9c3:	mov    QWORD PTR [rsp+0x10],rdx
   14002a9c8:	push   rbx
   14002a9c9:	push   rbp
   14002a9ca:	sub    rsp,0x28
   14002a9ce:	mov    rbp,rdx
   14002a9d1:	mov    rbx,QWORD PTR [rbp+0x60]
   14002a9d5:	cmp    QWORD PTR [rbx+0x18],0x10
   14002a9da:	jb     0x14002a9e4
   14002a9dc:	mov    rcx,QWORD PTR [rbx]
   14002a9df:	call   0x140005778
   14002a9e4:	mov    QWORD PTR [rbx+0x18],0xf
   14002a9ec:	mov    QWORD PTR [rbx+0x10],0x0
   14002a9f4:	mov    BYTE PTR [rbx],0x0
   14002a9f7:	xor    edx,edx
   14002a9f9:	xor    ecx,ecx
   14002a9fb:	call   0x140006570
   14002aa00:	nop
   14002aa01:	int3   
   14002aa02:	int3   
   14002aa03:	int3   
   14002aa04:	int3   
   14002aa05:	int3   
   14002aa06:	int3   
   14002aa07:	int3   
   14002aa08:	int3   
   14002aa09:	int3   
   14002aa0a:	int3   
   14002aa0b:	int3   
   14002aa0c:	int3   
   14002aa0d:	int3   
   14002aa0e:	int3   
   14002aa0f:	int3   
   14002aa10:	mov    QWORD PTR [rsp+0x10],rdx
   14002aa15:	push   rbp
   14002aa16:	sub    rsp,0x30
   14002aa1a:	mov    rbp,rdx
   14002aa1d:	mov    rcx,QWORD PTR [rbp+0x98]
   14002aa24:	call   0x140005778
   14002aa29:	xor    edx,edx
   14002aa2b:	xor    ecx,ecx
   14002aa2d:	call   0x140006570
   14002aa32:	nop
   14002aa33:	mov    QWORD PTR [rsp+0x10],rdx
   14002aa38:	push   rbp
   14002aa39:	sub    rsp,0x30
   14002aa3d:	mov    rbp,rdx
   14002aa40:	xor    edx,edx
   14002aa42:	xor    ecx,ecx
   14002aa44:	call   0x140006570
   14002aa49:	nop
   14002aa4a:	int3   
   14002aa4b:	int3   
   14002aa4c:	int3   
   14002aa4d:	int3   
   14002aa4e:	int3   
   14002aa4f:	int3   
   14002aa50:	lea    rcx,[rdx+0x48]
   14002aa57:	jmp    0x1400022f0
   14002aa5c:	lea    rcx,[rdx+0x28]
   14002aa63:	jmp    0x1400022f0
   14002aa68:	int3   
   14002aa69:	int3   
   14002aa6a:	int3   
   14002aa6b:	int3   
   14002aa6c:	int3   
   14002aa6d:	int3   
   14002aa6e:	int3   
   14002aa6f:	int3   
   14002aa70:	lea    rcx,[rdx+0x30]
   14002aa77:	jmp    0x140004e40
   14002aa7c:	rex push rbp
   14002aa7e:	sub    rsp,0x20
   14002aa82:	mov    rbp,rdx
   14002aa85:	add    rsp,0x20
   14002aa89:	pop    rbp
   14002aa8a:	jmp    0x140008418
   14002aa8f:	int3   
   14002aa90:	rex push rbp
   14002aa92:	sub    rsp,0x40
   14002aa96:	mov    rbp,rdx
   14002aa99:	lea    rax,[rbp+0x40]
   14002aa9d:	mov    QWORD PTR [rsp+0x30],rax
   14002aaa2:	mov    rax,QWORD PTR [rbp+0x90]
   14002aaa9:	mov    QWORD PTR [rsp+0x28],rax
   14002aaae:	mov    rax,QWORD PTR [rbp+0x88]
   14002aab5:	mov    QWORD PTR [rsp+0x20],rax
   14002aaba:	mov    r9,QWORD PTR [rbp+0x80]
   14002aac1:	mov    r8,QWORD PTR [rbp+0x78]
   14002aac5:	mov    rdx,QWORD PTR [rbp+0x70]
   14002aac9:	call   0x140006998
   14002aace:	nop
   14002aacf:	add    rsp,0x40
   14002aad3:	pop    rbp
   14002aad4:	ret    
   14002aad5:	int3   
   14002aad6:	rex push rbp
   14002aad8:	sub    rsp,0x20
   14002aadc:	mov    rbp,rdx
   14002aadf:	mov    rax,QWORD PTR [rcx]
   14002aae2:	mov    rdx,rcx
   14002aae5:	mov    ecx,DWORD PTR [rax]
   14002aae7:	call   0x14000d570
   14002aaec:	nop
   14002aaed:	add    rsp,0x20
   14002aaf1:	pop    rbp
   14002aaf2:	ret    
   14002aaf3:	int3   
   14002aaf4:	rex push rbp
   14002aaf6:	sub    rsp,0x20
   14002aafa:	mov    rbp,rdx
   14002aafd:	cmp    DWORD PTR [rbp+0x80],0x0
   14002ab04:	je     0x14002ab11
   14002ab06:	mov    ecx,0x8
   14002ab0b:	call   0x14000fe48
   14002ab10:	nop
   14002ab11:	add    rsp,0x20
   14002ab15:	pop    rbp
   14002ab16:	ret    
   14002ab17:	int3   
   14002ab18:	rex push rbp
   14002ab1a:	sub    rsp,0x20
   14002ab1e:	mov    rbp,rdx
   14002ab21:	mov    rax,QWORD PTR [rcx]
   14002ab24:	cmp    DWORD PTR [rax],0xc0000005
   14002ab2a:	je     0x14002ab38
   14002ab2c:	cmp    DWORD PTR [rax],0xc000001d
   14002ab32:	je     0x14002ab38
   14002ab34:	xor    eax,eax
   14002ab36:	jmp    0x14002ab3d
   14002ab38:	mov    eax,0x1
   14002ab3d:	add    rsp,0x20
   14002ab41:	pop    rbp
   14002ab42:	ret    
   14002ab43:	int3   
   14002ab44:	rex push rbp
   14002ab46:	sub    rsp,0x20
   14002ab4a:	mov    rbp,rdx
   14002ab4d:	mov    ecx,0xd
   14002ab52:	add    rsp,0x20
   14002ab56:	pop    rbp
   14002ab57:	jmp    0x14000fe48
   14002ab5c:	int3   
   14002ab5d:	rex push rbp
   14002ab5f:	sub    rsp,0x20
   14002ab63:	mov    rbp,rdx
   14002ab66:	mov    ecx,0xc
   14002ab6b:	add    rsp,0x20
   14002ab6f:	pop    rbp
   14002ab70:	jmp    0x14000fe48
   14002ab75:	int3   
   14002ab76:	rex push rbp
   14002ab78:	sub    rsp,0x20
   14002ab7c:	mov    rbp,rdx
   14002ab7f:	mov    ecx,0xd
   14002ab84:	add    rsp,0x20
   14002ab88:	pop    rbp
   14002ab89:	jmp    0x14000fe48
   14002ab8e:	int3   
   14002ab8f:	rex push rbp
   14002ab91:	sub    rsp,0x20
   14002ab95:	mov    rbp,rdx
   14002ab98:	mov    ecx,0xc
   14002ab9d:	add    rsp,0x20
   14002aba1:	pop    rbp
   14002aba2:	jmp    0x14000fe48
   14002aba7:	int3   
   14002aba8:	rex push rbp
   14002abaa:	sub    rsp,0x20
   14002abae:	mov    rbp,rdx
   14002abb1:	mov    QWORD PTR [rbp+0x70],rcx
   14002abb5:	mov    QWORD PTR [rbp+0x68],rcx
   14002abb9:	mov    rax,QWORD PTR [rbp+0x68]
   14002abbd:	mov    rcx,QWORD PTR [rax]
   14002abc0:	mov    QWORD PTR [rbp+0x28],rcx
   14002abc4:	mov    DWORD PTR [rbp+0x20],0x0
   14002abcb:	mov    rax,QWORD PTR [rbp+0x28]
   14002abcf:	cmp    DWORD PTR [rax],0xe06d7363
   14002abd5:	jne    0x14002ac24
   14002abd7:	mov    rax,QWORD PTR [rbp+0x28]
   14002abdb:	cmp    DWORD PTR [rax+0x18],0x4
   14002abdf:	jne    0x14002ac24
   14002abe1:	mov    rax,QWORD PTR [rbp+0x28]
   14002abe5:	cmp    DWORD PTR [rax+0x20],0x19930520
   14002abec:	je     0x14002ac08
   14002abee:	mov    rax,QWORD PTR [rbp+0x28]
   14002abf2:	cmp    DWORD PTR [rax+0x20],0x19930521
   14002abf9:	je     0x14002ac08
   14002abfb:	mov    rax,QWORD PTR [rbp+0x28]
   14002abff:	cmp    DWORD PTR [rax+0x20],0x19930522
   14002ac06:	jne    0x14002ac24
   14002ac08:	mov    rdx,QWORD PTR [rbp+0x28]
   14002ac0c:	mov    rax,QWORD PTR [rbp+0xd8]
   14002ac13:	mov    rcx,QWORD PTR [rax+0x28]
   14002ac17:	cmp    QWORD PTR [rdx+0x28],rcx
   14002ac1b:	jne    0x14002ac24
   14002ac1d:	mov    DWORD PTR [rbp+0x20],0x1
   14002ac24:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac28:	cmp    DWORD PTR [rax],0xe06d7363
   14002ac2e:	jne    0x14002ac8b
   14002ac30:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac34:	cmp    DWORD PTR [rax+0x18],0x4
   14002ac38:	jne    0x14002ac8b
   14002ac3a:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac3e:	cmp    DWORD PTR [rax+0x20],0x19930520
   14002ac45:	je     0x14002ac61
   14002ac47:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac4b:	cmp    DWORD PTR [rax+0x20],0x19930521
   14002ac52:	je     0x14002ac61
   14002ac54:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac58:	cmp    DWORD PTR [rax+0x20],0x19930522
   14002ac5f:	jne    0x14002ac8b
   14002ac61:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac65:	cmp    QWORD PTR [rax+0x30],0x0
   14002ac6a:	jne    0x14002ac8b
   14002ac6c:	call   0x14000a3ec
   14002ac71:	mov    DWORD PTR [rax+0x460],0x1
   14002ac7b:	mov    DWORD PTR [rbp+0x20],0x1
   14002ac82:	mov    DWORD PTR [rbp+0x30],0x1
   14002ac89:	jmp    0x14002ac92
   14002ac8b:	mov    DWORD PTR [rbp+0x30],0x0
   14002ac92:	mov    eax,DWORD PTR [rbp+0x30]
   14002ac95:	add    rsp,0x20
   14002ac99:	pop    rbp
   14002ac9a:	ret    
   14002ac9b:	int3   
   14002ac9c:	rex push rbx
   14002ac9e:	push   rbp
   14002ac9f:	sub    rsp,0x28
   14002aca3:	mov    rbp,rdx
   14002aca6:	mov    rcx,QWORD PTR [rbp+0x38]
   14002acaa:	call   0x140006ad4
   14002acaf:	cmp    DWORD PTR [rbp+0x20],0x0
   14002acb3:	jne    0x14002acef
   14002acb5:	mov    rbx,QWORD PTR [rbp+0xd8]
   14002acbc:	cmp    DWORD PTR [rbx],0xe06d7363
   14002acc2:	jne    0x14002acef
   14002acc4:	cmp    DWORD PTR [rbx+0x18],0x4
   14002acc8:	jne    0x14002acef
   14002acca:	mov    eax,DWORD PTR [rbx+0x20]
   14002accd:	sub    eax,0x19930520
   14002acd2:	cmp    eax,0x2
   14002acd5:	ja     0x14002acef
   14002acd7:	mov    rcx,QWORD PTR [rbx+0x28]
   14002acdb:	call   0x140006b64
   14002ace0:	test   eax,eax
   14002ace2:	je     0x14002acef
   14002ace4:	mov    dl,0x1
   14002ace6:	mov    rcx,rbx
   14002ace9:	call   0x14000a5fc
   14002acee:	nop
   14002acef:	call   0x14000a3ec
   14002acf4:	mov    rcx,QWORD PTR [rbp+0xe0]
   14002acfb:	mov    QWORD PTR [rax+0xf0],rcx
   14002ad02:	call   0x14000a3ec
   14002ad07:	mov    rcx,QWORD PTR [rbp+0x50]
   14002ad0b:	mov    QWORD PTR [rax+0xf8],rcx
   14002ad12:	add    rsp,0x28
   14002ad16:	pop    rbp
   14002ad17:	pop    rbx
   14002ad18:	ret    
   14002ad19:	int3   
   14002ad1a:	rex push rbp
   14002ad1c:	sub    rsp,0x20
   14002ad20:	mov    rbp,rdx
   14002ad23:	mov    rcx,QWORD PTR [rbp+0x30]
   14002ad27:	call   0x140006ba4
   14002ad2c:	nop
   14002ad2d:	add    rsp,0x20
   14002ad31:	pop    rbp
   14002ad32:	ret    
   14002ad33:	int3   
   14002ad34:	rex push rbp
   14002ad36:	sub    rsp,0x20
   14002ad3a:	mov    rbp,rdx
   14002ad3d:	xor    eax,eax
   14002ad3f:	cmp    BYTE PTR [rbp+0x38],al
   14002ad42:	setne  al
   14002ad45:	add    rsp,0x20
   14002ad49:	pop    rbp
   14002ad4a:	ret    
   14002ad4b:	int3   
   14002ad4c:	rex push rbp
   14002ad4e:	sub    rsp,0x20
   14002ad52:	mov    rbp,rdx
   14002ad55:	call   0x14000bb60
   14002ad5a:	nop
   14002ad5b:	add    rsp,0x20
   14002ad5f:	pop    rbp
   14002ad60:	ret    
   14002ad61:	int3   
   14002ad62:	rex push rbp
   14002ad64:	sub    rsp,0x20
   14002ad68:	mov    rbp,rdx
   14002ad6b:	call   0x14000a3ec
   14002ad70:	cmp    DWORD PTR [rax+0x100],0x0
   14002ad77:	jle    0x14002ad84
   14002ad79:	call   0x14000a3ec
   14002ad7e:	dec    DWORD PTR [rax+0x100]
   14002ad84:	add    rsp,0x20
   14002ad88:	pop    rbp
   14002ad89:	ret    
   14002ad8a:	int3   
   14002ad8b:	rex push rbp
   14002ad8d:	sub    rsp,0x30
   14002ad91:	mov    rbp,rdx
   14002ad94:	mov    ecx,0xe
   14002ad99:	add    rsp,0x30
   14002ad9d:	pop    rbp
   14002ad9e:	jmp    0x14000fe48
   14002ada3:	int3   
   14002ada4:	rex push rbp
   14002ada6:	sub    rsp,0x30
   14002adaa:	mov    rbp,rdx
   14002adad:	mov    ecx,0xe
   14002adb2:	call   0x14000fe48
   14002adb7:	nop
   14002adb8:	add    rsp,0x30
   14002adbc:	pop    rbp
   14002adbd:	ret    
   14002adbe:	int3   
   14002adbf:	rex push rbp
   14002adc1:	sub    rsp,0x20
   14002adc5:	mov    rbp,rdx
   14002adc8:	mov    ecx,0xe
   14002adcd:	add    rsp,0x20
   14002add1:	pop    rbp
   14002add2:	jmp    0x14000fe48
   14002add7:	int3   
   14002add8:	rex push rbp
   14002adda:	sub    rsp,0x20
   14002adde:	mov    rbp,rdx
   14002ade1:	mov    ecx,0xe
   14002ade6:	add    rsp,0x20
   14002adea:	pop    rbp
   14002adeb:	jmp    0x14000fe48
   14002adf0:	int3   
   14002adf1:	rex push rbp
   14002adf3:	sub    rsp,0x20
   14002adf7:	mov    rbp,rdx
   14002adfa:	mov    ecx,0xe
   14002adff:	add    rsp,0x20
   14002ae03:	pop    rbp
   14002ae04:	jmp    0x14000fe48
   14002ae09:	int3   
   14002ae0a:	rex push rbp
   14002ae0c:	sub    rsp,0x20
   14002ae10:	mov    rbp,rdx
   14002ae13:	mov    ecx,0xb
   14002ae18:	call   0x14000fe48
   14002ae1d:	nop
   14002ae1e:	add    rsp,0x20
   14002ae22:	pop    rbp
   14002ae23:	ret    
   14002ae24:	int3   
   14002ae25:	rex push rbp
   14002ae27:	sub    rsp,0x20
   14002ae2b:	mov    rbp,rdx
   14002ae2e:	xor    ecx,ecx
   14002ae30:	add    rsp,0x20
   14002ae34:	pop    rbp
   14002ae35:	jmp    0x14000fe48
   14002ae3a:	int3   
   14002ae3b:	rex push rbp
   14002ae3d:	sub    rsp,0x20
   14002ae41:	mov    rbp,rdx
   14002ae44:	cmp    DWORD PTR [rbp+0x60],0x0
   14002ae48:	je     0x14002ae52
   14002ae4a:	xor    ecx,ecx
   14002ae4c:	call   0x14000fe48
   14002ae51:	nop
   14002ae52:	add    rsp,0x20
   14002ae56:	pop    rbp
   14002ae57:	ret    
   14002ae58:	int3   
   14002ae59:	rex push rbp
   14002ae5b:	sub    rsp,0x20
   14002ae5f:	mov    rbp,rdx
   14002ae62:	xor    ecx,ecx
   14002ae64:	add    rsp,0x20
   14002ae68:	pop    rbp
   14002ae69:	jmp    0x14000fe48
   14002ae6e:	int3   
   14002ae6f:	rex push rbp
   14002ae71:	sub    rsp,0x20
   14002ae75:	mov    rbp,rdx
   14002ae78:	mov    rcx,QWORD PTR [rip+0x114b1]        # 0x14003c330
   14002ae7f:	add    rsp,0x20
   14002ae83:	pop    rbp
   14002ae84:	rex.W jmp QWORD PTR [rip+0x1205]        # 0x14002c090
   14002ae8b:	int3   
   14002ae8c:	int3   
   14002ae8d:	int3   
   14002ae8e:	int3   
   14002ae8f:	int3   
   14002ae90:	rex push rbp
   14002ae92:	sub    rsp,0x20
   14002ae96:	mov    rbp,rdx
   14002ae99:	mov    rax,QWORD PTR [rcx]
   14002ae9c:	xor    ecx,ecx
   14002ae9e:	cmp    DWORD PTR [rax],0xc0000005
   14002aea4:	sete   cl
   14002aea7:	mov    eax,ecx
   14002aea9:	add    rsp,0x20
   14002aead:	pop    rbp
   14002aeae:	ret    
   14002aeaf:	int3   
   14002aeb0:	rex push rbp
   14002aeb2:	sub    rsp,0x20
   14002aeb6:	mov    rbp,rdx
   14002aeb9:	mov    ecx,0xd
   14002aebe:	add    rsp,0x20
   14002aec2:	pop    rbp
   14002aec3:	jmp    0x14000fe48
   14002aec8:	int3   
   14002aec9:	rex push rbp
   14002aecb:	sub    rsp,0x20
   14002aecf:	mov    rbp,rdx
   14002aed2:	mov    ecx,0xd
   14002aed7:	add    rsp,0x20
   14002aedb:	pop    rbp
   14002aedc:	jmp    0x14000fe48
   14002aee1:	int3   
   14002aee2:	rex push rbp
   14002aee4:	sub    rsp,0x20
   14002aee8:	mov    rbp,rdx
   14002aeeb:	mov    ecx,DWORD PTR [rbp+0x50]
   14002aeee:	add    rsp,0x20
   14002aef2:	pop    rbp
   14002aef3:	jmp    0x14001d5e4
   14002aef8:	int3   
   14002aef9:	rex push rbp
   14002aefb:	sub    rsp,0x20
   14002aeff:	mov    rbp,rdx
   14002af02:	mov    ecx,DWORD PTR [rbp+0x50]
   14002af05:	add    rsp,0x20
   14002af09:	pop    rbp
   14002af0a:	jmp    0x14001d5e4
   14002af0f:	int3   
   14002af10:	rex push rbp
   14002af12:	sub    rsp,0x20
   14002af16:	mov    rbp,rdx
   14002af19:	mov    ecx,0xc
   14002af1e:	add    rsp,0x20
   14002af22:	pop    rbp
   14002af23:	jmp    0x14000fe48
   14002af28:	int3   
   14002af29:	rex push rbp
   14002af2b:	sub    rsp,0x20
   14002af2f:	mov    rbp,rdx
   14002af32:	call   0x140010e04
   14002af37:	add    rax,0x30
   14002af3b:	mov    rdx,rax
   14002af3e:	mov    ecx,0x1
   14002af43:	call   0x140010ef8
   14002af48:	nop
   14002af49:	add    rsp,0x20
   14002af4d:	pop    rbp
   14002af4e:	ret    
   14002af4f:	int3   
   14002af50:	rex push rbp
   14002af52:	sub    rsp,0x20
   14002af56:	mov    rbp,rdx
   14002af59:	mov    rcx,QWORD PTR [rbp+0x38]
   14002af5d:	add    rsp,0x20
   14002af61:	pop    rbp
   14002af62:	jmp    0x140010ea8
   14002af67:	int3   
   14002af68:	rex push rbp
   14002af6a:	sub    rsp,0x30
   14002af6e:	mov    rbp,rdx
   14002af71:	mov    ecx,0x5
   14002af76:	add    rsp,0x30
   14002af7a:	pop    rbp
   14002af7b:	jmp    0x14000fe48
   14002af80:	int3   
   14002af81:	rex push rbp
   14002af83:	sub    rsp,0x30
   14002af87:	mov    rbp,rdx
   14002af8a:	mov    ecx,0x5
   14002af8f:	add    rsp,0x30
   14002af93:	pop    rbp
   14002af94:	jmp    0x14000fe48
   14002af99:	int3   
   14002af9a:	rex push rbp
   14002af9c:	sub    rsp,0x20
   14002afa0:	mov    rbp,rdx
   14002afa3:	mov    rcx,QWORD PTR [rbp+0x30]
   14002afa7:	add    rsp,0x20
   14002afab:	pop    rbp
   14002afac:	jmp    0x140010ea8
   14002afb1:	int3   
   14002afb2:	rex push rbp
   14002afb4:	sub    rsp,0x20
   14002afb8:	mov    rbp,rdx
   14002afbb:	movsxd rcx,DWORD PTR [rbp+0x20]
   14002afbf:	mov    rax,rcx
   14002afc2:	mov    rdx,QWORD PTR [rip+0x13fcf]        # 0x14003ef98
   14002afc9:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14002afcd:	call   0x140010ef8
   14002afd2:	nop
   14002afd3:	add    rsp,0x20
   14002afd7:	pop    rbp
   14002afd8:	ret    
   14002afd9:	int3   
   14002afda:	rex push rbp
   14002afdc:	sub    rsp,0x20
   14002afe0:	mov    rbp,rdx
   14002afe3:	mov    ecx,0x1
   14002afe8:	add    rsp,0x20
   14002afec:	pop    rbp
   14002afed:	jmp    0x14000fe48
   14002aff2:	int3   
   14002aff3:	rex push rbp
   14002aff5:	sub    rsp,0x20
   14002aff9:	mov    rbp,rdx
   14002affc:	mov    ecx,0x1
   14002b001:	add    rsp,0x20
   14002b005:	pop    rbp
   14002b006:	jmp    0x14000fe48
   14002b00b:	int3   
   14002b00c:	rex push rbp
   14002b00e:	sub    rsp,0x20
   14002b012:	mov    rbp,rdx
   14002b015:	mov    ecx,0xa
   14002b01a:	add    rsp,0x20
   14002b01e:	pop    rbp
   14002b01f:	jmp    0x14000fe48
   14002b024:	int3   
   14002b025:	rex push rbp
   14002b027:	sub    rsp,0x20
   14002b02b:	mov    rbp,rdx
   14002b02e:	mov    ecx,0xa
   14002b033:	call   0x14000fe48
   14002b038:	nop
   14002b039:	add    rsp,0x20
   14002b03d:	pop    rbp
   14002b03e:	ret    
   14002b03f:	int3   
   14002b040:	rex push rbp
   14002b042:	sub    rsp,0x20
   14002b046:	mov    rbp,rdx
   14002b049:	mov    ecx,0xb
   14002b04e:	add    rsp,0x20
   14002b052:	pop    rbp
   14002b053:	jmp    0x14000fe48
   14002b058:	int3   
   14002b059:	rex push rbp
   14002b05b:	sub    rsp,0x20
   14002b05f:	mov    rbp,rdx
   14002b062:	cmp    DWORD PTR [rbp+0x20],0x0
   14002b066:	jne    0x14002b08a
   14002b068:	movsxd rcx,DWORD PTR [rbp+0x48]
   14002b06c:	mov    rax,rcx
   14002b06f:	sar    rax,0x5
   14002b073:	lea    rdx,[rip+0x12c96]        # 0x14003dd10
   14002b07a:	and    ecx,0x1f
   14002b07d:	imul   rcx,rcx,0x58
   14002b081:	mov    rax,QWORD PTR [rdx+rax*8]
   14002b085:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002b08a:	mov    ecx,DWORD PTR [rbp+0x48]
   14002b08d:	call   0x14001d5e4
   14002b092:	nop
   14002b093:	add    rsp,0x20
   14002b097:	pop    rbp
   14002b098:	ret    
   14002b099:	int3   
   14002b09a:	rex push rbp
   14002b09c:	sub    rsp,0x20
   14002b0a0:	mov    rbp,rdx
   14002b0a3:	mov    ecx,0x3
   14002b0a8:	add    rsp,0x20
   14002b0ac:	pop    rbp
   14002b0ad:	jmp    0x14000fe48
   14002b0b2:	int3   
   14002b0b3:	rex push rbp
   14002b0b5:	sub    rsp,0x20
   14002b0b9:	mov    rbp,rdx
   14002b0bc:	mov    rcx,QWORD PTR [rbp+0x48]
   14002b0c0:	add    rsp,0x20
   14002b0c4:	pop    rbp
   14002b0c5:	jmp    0x140010ea8
   14002b0ca:	int3   
   14002b0cb:	rex push rbp
   14002b0cd:	sub    rsp,0x20
   14002b0d1:	mov    rbp,rdx
   14002b0d4:	mov    ecx,0xd
   14002b0d9:	add    rsp,0x20
   14002b0dd:	pop    rbp
   14002b0de:	jmp    0x14000fe48
   14002b0e3:	int3   
   14002b0e4:	rex push rbp
   14002b0e6:	sub    rsp,0x20
   14002b0ea:	mov    rbp,rdx
   14002b0ed:	mov    ecx,0xc
   14002b0f2:	add    rsp,0x20
   14002b0f6:	pop    rbp
   14002b0f7:	jmp    0x14000fe48
   14002b0fc:	int3   
   14002b0fd:	rex push rbp
   14002b0ff:	sub    rsp,0x20
   14002b103:	mov    rbp,rdx
   14002b106:	mov    ecx,0xc
   14002b10b:	add    rsp,0x20
   14002b10f:	pop    rbp
   14002b110:	jmp    0x14000fe48
   14002b115:	int3   
   14002b116:	rex push rbp
   14002b118:	sub    rsp,0x20
   14002b11c:	mov    rbp,rdx
   14002b11f:	mov    ecx,0xd
   14002b124:	add    rsp,0x20
   14002b128:	pop    rbp
   14002b129:	jmp    0x14000fe48
   14002b12e:	int3   
   14002b12f:	rex push rbp
   14002b131:	sub    rsp,0x20
   14002b135:	mov    rbp,rdx
   14002b138:	mov    ecx,0xc
   14002b13d:	add    rsp,0x20
   14002b141:	pop    rbp
   14002b142:	jmp    0x14000fe48
   14002b147:	int3   
   14002b148:	rex push rbp
   14002b14a:	sub    rsp,0x20
   14002b14e:	mov    rbp,rdx
   14002b151:	mov    ecx,0xc
   14002b156:	call   0x14000fe48
   14002b15b:	nop
   14002b15c:	add    rsp,0x20
   14002b160:	pop    rbp
   14002b161:	ret    
   14002b162:	int3   
   14002b163:	rex push rbp
   14002b165:	sub    rsp,0x20
   14002b169:	mov    rbp,rdx
   14002b16c:	mov    ecx,0xc
   14002b171:	call   0x14000fe48
   14002b176:	nop
   14002b177:	add    rsp,0x20
   14002b17b:	pop    rbp
   14002b17c:	ret    
   14002b17d:	int3   
   14002b17e:	rex push rbp
   14002b180:	sub    rsp,0x20
   14002b184:	mov    rbp,rdx
   14002b187:	mov    rax,QWORD PTR [rbp+0x60]
   14002b18b:	and    DWORD PTR [rax+0xc8],0xffffffef
   14002b192:	add    rsp,0x20
   14002b196:	pop    rbp
   14002b197:	ret    
   14002b198:	int3   
   14002b199:	rex push rbp
   14002b19b:	sub    rsp,0x20
   14002b19f:	mov    rbp,rdx
   14002b1a2:	mov    ecx,DWORD PTR [rbp+0x40]
   14002b1a5:	add    rsp,0x20
   14002b1a9:	pop    rbp
   14002b1aa:	jmp    0x14001d5e4
   14002b1af:	int3   
   14002b1b0:	rex push rbp
   14002b1b2:	sub    rsp,0x20
   14002b1b6:	mov    rbp,rdx
   14002b1b9:	mov    rcx,QWORD PTR [rbp+0x30]
   14002b1bd:	add    rsp,0x20
   14002b1c1:	pop    rbp
   14002b1c2:	jmp    0x140010ea8
   14002b1c7:	int3   
   14002b1c8:	rex push rbp
   14002b1ca:	sub    rsp,0x20
   14002b1ce:	mov    rbp,rdx
   14002b1d1:	mov    ecx,DWORD PTR [rbp+0x40]
   14002b1d4:	add    rsp,0x20
   14002b1d8:	pop    rbp
   14002b1d9:	jmp    0x14001d5e4
   14002b1de:	int3   
   14002b1df:	int3   
   14002b1e0:	lea    rax,[rip+0x1531]        # 0x14002c718
   14002b1e7:	mov    QWORD PTR [rip+0x10e12],rax        # 0x14003c000
   14002b1ee:	ret    
   14002b1ef:	int3   
   14002b1f0:	lea    rax,[rip+0x1521]        # 0x14002c718
   14002b1f7:	mov    QWORD PTR [rip+0x10e0a],rax        # 0x14003c008
   14002b1fe:	ret    
   14002b1ff:	int3   
   14002b200:	lea    rax,[rip+0x1511]        # 0x14002c718
   14002b207:	mov    QWORD PTR [rip+0x10e02],rax        # 0x14003c010
   14002b20e:	ret    
   14002b20f:	int3   
   14002b210:	lea    rax,[rip+0x1501]        # 0x14002c718
   14002b217:	mov    QWORD PTR [rip+0x10de2],rax        # 0x14003c000
   14002b21e:	ret    
   14002b21f:	int3   
   14002b220:	lea    rax,[rip+0x14f1]        # 0x14002c718
   14002b227:	mov    QWORD PTR [rip+0x10dda],rax        # 0x14003c008
   14002b22e:	ret    
   14002b22f:	int3   
   14002b230:	lea    rax,[rip+0x14e1]        # 0x14002c718
   14002b237:	mov    QWORD PTR [rip+0x10dd2],rax        # 0x14003c010
   14002b23e:	ret    
   14002b23f:	int3   
   14002b240:	lea    rax,[rip+0x14d1]        # 0x14002c718
   14002b247:	mov    QWORD PTR [rip+0x10db2],rax        # 0x14003c000
   14002b24e:	ret    
   14002b24f:	int3   
   14002b250:	lea    rax,[rip+0x14c1]        # 0x14002c718
   14002b257:	mov    QWORD PTR [rip+0x10daa],rax        # 0x14003c008
   14002b25e:	ret    
   14002b25f:	int3   
   14002b260:	lea    rax,[rip+0x14b1]        # 0x14002c718
   14002b267:	mov    QWORD PTR [rip+0x10da2],rax        # 0x14003c010
   14002b26e:	ret    

Disassembly of section .rdata:

000000014002c000 <.rdata>:
   14002c000:	and    al,0xae
   14002c002:	add    eax,DWORD PTR [rax]
   14002c004:	add    BYTE PTR [rax],al
   14002c006:	add    BYTE PTR [rax],al
   14002c008:	xor    al,0xb2
   14002c00a:	add    eax,DWORD PTR [rax]
   14002c00c:	add    BYTE PTR [rax],al
   14002c00e:	add    BYTE PTR [rax],al
   14002c010:	and    BYTE PTR [rdx+0x3],dh
   14002c016:	add    BYTE PTR [rax],al
   14002c018:	adc    BYTE PTR [rdx+0x3],dh
   14002c01e:	add    BYTE PTR [rax],al
   14002c020:	add    BYTE PTR [rdx+0x3],dh
   14002c026:	add    BYTE PTR [rax],al
   14002c028:	out    dx,al
   14002c029:	mov    cl,0x3
   14002c02b:	add    BYTE PTR [rax],al
   14002c02d:	add    BYTE PTR [rax],al
   14002c02f:	add    al,bl
   14002c031:	mov    cl,0x3
   14002c033:	add    BYTE PTR [rax],al
   14002c035:	add    BYTE PTR [rax],al
   14002c037:	add    ah,al
   14002c039:	mov    cl,0x3
   14002c03b:	add    BYTE PTR [rax],al
   14002c03d:	add    BYTE PTR [rax],al
   14002c03f:	add    BYTE PTR [rdx+0x3b1],dh
   14002c045:	add    BYTE PTR [rax],al
   14002c047:	add    BYTE PTR [rdx+0x3b1],ah
   14002c04d:	add    BYTE PTR [rax],al
   14002c04f:	add    BYTE PTR [rcx+rsi*4+0x3],dl
   14002c056:	add    BYTE PTR [rax],al
   14002c058:	mov    BYTE PTR [rcx+0x3],dh
   14002c05e:	add    BYTE PTR [rax],al
   14002c060:	jl     0x14002c013
   14002c062:	add    eax,DWORD PTR [rax]
   14002c064:	add    BYTE PTR [rax],al
   14002c066:	add    BYTE PTR [rax],al
   14002c068:	jb     0x14002c01b
   14002c06a:	add    eax,DWORD PTR [rax]
   14002c06c:	add    BYTE PTR [rax],al
   14002c06e:	add    BYTE PTR [rax],al
   14002c070:	(bad)  
   14002c071:	mov    cl,0x3
   14002c073:	add    BYTE PTR [rax],al
   14002c075:	add    BYTE PTR [rax],al
   14002c077:	add    BYTE PTR [rsi-0x4f],cl
   14002c07a:	add    eax,DWORD PTR [rax]
   14002c07c:	add    BYTE PTR [rax],al
   14002c07e:	add    BYTE PTR [rax],al
   14002c080:	mov    cl,0x3
   14002c083:	add    BYTE PTR [rax],al
   14002c085:	add    BYTE PTR [rax],al
   14002c087:	add    BYTE PTR [rax],dh
   14002c089:	mov    cl,0x3
   14002c08b:	add    BYTE PTR [rax],al
   14002c08d:	add    BYTE PTR [rax],al
   14002c08f:	add    BYTE PTR [rax],bl
   14002c091:	mov    cl,0x3
   14002c093:	add    BYTE PTR [rax],al
   14002c095:	add    BYTE PTR [rax],al
   14002c097:	add    BYTE PTR [rax],al
   14002c099:	mov    cl,0x3
   14002c09b:	add    BYTE PTR [rax],al
   14002c09d:	add    BYTE PTR [rax],al
   14002c09f:	add    dl,ch
   14002c0a1:	mov    al,0x3
   14002c0a3:	add    BYTE PTR [rax],al
   14002c0a5:	add    BYTE PTR [rax],al
   14002c0a7:	add    ah,dl
   14002c0a9:	mov    al,0x3
   14002c0ab:	add    BYTE PTR [rax],al
   14002c0ad:	add    BYTE PTR [rax],al
   14002c0af:	add    BYTE PTR [rdx+0x3ab],ch
   14002c0b5:	add    BYTE PTR [rax],al
   14002c0b7:	add    BYTE PTR [rbx+rbp*4+0x3],bh
   14002c0be:	add    BYTE PTR [rax],al
   14002c0c0:	(bad)  
   14002c0c1:	stos   DWORD PTR es:[rdi],eax
   14002c0c2:	add    eax,DWORD PTR [rax]
   14002c0c4:	add    BYTE PTR [rax],al
   14002c0c6:	add    BYTE PTR [rax],al
   14002c0c8:	lock stos DWORD PTR es:[rdi],eax
   14002c0ca:	add    eax,DWORD PTR [rax]
   14002c0cc:	add    BYTE PTR [rax],al
   14002c0ce:	add    BYTE PTR [rax],al
   14002c0d0:	add    ch,BYTE PTR [rbx+rax*1+0x0]
   14002c0d7:	add    ah,al
   14002c0d9:	mov    al,0x3
   14002c0db:	add    BYTE PTR [rax],al
   14002c0dd:	add    BYTE PTR [rax],al
   14002c0df:	add    BYTE PTR [rdx+0x3b0],dh
   14002c0e5:	add    BYTE PTR [rax],al
   14002c0e7:	add    BYTE PTR [rdx+0x3b0],ah
   14002c0ed:	add    BYTE PTR [rax],al
   14002c0ef:	add    BYTE PTR [rax+0x3b0],dl
   14002c0f5:	add    BYTE PTR [rax],al
   14002c0f7:	add    BYTE PTR [rsi-0x50],bh
   14002c0fa:	add    eax,DWORD PTR [rax]
   14002c0fc:	add    BYTE PTR [rax],al
   14002c0fe:	add    BYTE PTR [rax],al
   14002c100:	ins    BYTE PTR es:[rdi],dx
   14002c101:	mov    al,0x3
   14002c103:	add    BYTE PTR [rax],al
   14002c105:	add    BYTE PTR [rax],al
   14002c107:	add    BYTE PTR [rax+rsi*4+0x3],dl
   14002c10b:	add    BYTE PTR [rax],al
   14002c10d:	add    BYTE PTR [rax],al
   14002c10f:	add    BYTE PTR [rdx+0x3ac],dl
   14002c115:	add    BYTE PTR [rax],al
   14002c117:	add    BYTE PTR [rdx+0x3ac],ah
   14002c11d:	add    BYTE PTR [rax],al
   14002c11f:	add    BYTE PTR [rdx+0x3ac],dh
   14002c125:	add    BYTE PTR [rax],al
   14002c127:	add    dh,al
   14002c129:	lods   al,BYTE PTR ds:[rsi]
   14002c12a:	add    eax,DWORD PTR [rax]
   14002c12c:	add    BYTE PTR [rax],al
   14002c12e:	add    BYTE PTR [rax],al
   14002c130:	fsubr  DWORD PTR [rbx+rax*1+0x0]
   14002c137:	add    dl,dh
   14002c139:	lods   al,BYTE PTR ds:[rsi]
   14002c13a:	add    eax,DWORD PTR [rax]
   14002c13c:	add    BYTE PTR [rax],al
   14002c13e:	add    BYTE PTR [rax],al
   14002c140:	add    BYTE PTR [rbp+0x3],ch
   14002c146:	add    BYTE PTR [rax],al
   14002c148:	adc    ch,BYTE PTR [rbp+0x3]
   14002c14e:	add    BYTE PTR [rax],al
   14002c150:	lods   eax,DWORD PTR cs:[rsi]
   14002c152:	add    eax,DWORD PTR [rax]
   14002c154:	add    BYTE PTR [rax],al
   14002c156:	add    BYTE PTR [rax],al
   14002c158:	lods   eax,DWORD PTR ds:[rsi]
   14002c15a:	add    eax,DWORD PTR [rax]
   14002c15c:	add    BYTE PTR [rax],al
   14002c15e:	add    BYTE PTR [rax],al
   14002c160:	rex.WX lods rax,QWORD PTR ds:[rsi]
   14002c162:	add    eax,DWORD PTR [rax]
   14002c164:	add    BYTE PTR [rax],al
   14002c166:	add    BYTE PTR [rax],al
   14002c168:	push   rsi
   14002c169:	lods   eax,DWORD PTR ds:[rsi]
   14002c16a:	add    eax,DWORD PTR [rax]
   14002c16c:	add    BYTE PTR [rax],al
   14002c16e:	add    BYTE PTR [rax],al
   14002c170:	lods   eax,DWORD PTR fs:[rsi]
   14002c172:	add    eax,DWORD PTR [rax]
   14002c174:	add    BYTE PTR [rax],al
   14002c176:	add    BYTE PTR [rax],al
   14002c178:	jp     0x14002c127
   14002c17a:	add    eax,DWORD PTR [rax]
   14002c17c:	add    BYTE PTR [rax],al
   14002c17e:	add    BYTE PTR [rax],al
   14002c180:	mov    WORD PTR [rbp+0x3],gs
   14002c186:	add    BYTE PTR [rax],al
   14002c188:	sahf   
   14002c189:	lods   eax,DWORD PTR ds:[rsi]
   14002c18a:	add    eax,DWORD PTR [rax]
   14002c18c:	add    BYTE PTR [rax],al
   14002c18e:	add    BYTE PTR [rax],al
   14002c190:	mov    ah,0xad
   14002c192:	add    eax,DWORD PTR [rax]
   14002c194:	add    BYTE PTR [rax],al
   14002c196:	add    BYTE PTR [rax],al
   14002c198:	retf   0x3ad
   14002c19b:	add    BYTE PTR [rax],al
   14002c19d:	add    BYTE PTR [rax],al
   14002c19f:	add    dh,dl
   14002c1a1:	lods   eax,DWORD PTR ds:[rsi]
   14002c1a2:	add    eax,DWORD PTR [rax]
   14002c1a4:	add    BYTE PTR [rax],al
   14002c1a6:	add    BYTE PTR [rax],al
   14002c1a8:	(bad)  
   14002c1a9:	lods   eax,DWORD PTR ds:[rsi]
   14002c1aa:	add    eax,DWORD PTR [rax]
   14002c1ac:	add    BYTE PTR [rax],al
   14002c1ae:	add    BYTE PTR [rax],al
   14002c1b0:	cli    
   14002c1b1:	lods   eax,DWORD PTR ds:[rsi]
   14002c1b2:	add    eax,DWORD PTR [rax]
   14002c1b4:	add    BYTE PTR [rax],al
   14002c1b6:	add    BYTE PTR [rax],al
   14002c1b8:	(bad)  
   14002c1b9:	scas   al,BYTE PTR es:[rdi]
   14002c1ba:	add    eax,DWORD PTR [rax]
   14002c1bc:	add    BYTE PTR [rax],al
   14002c1be:	add    BYTE PTR [rax],al
   14002c1c0:	rex.X mov dl,0x3
   14002c1c3:	add    BYTE PTR [rax],al
   14002c1c5:	add    BYTE PTR [rax],al
   14002c1c7:	add    BYTE PTR [rsi],dh
   14002c1c9:	scas   al,BYTE PTR es:[rdi]
   14002c1ca:	add    eax,DWORD PTR [rax]
   14002c1cc:	add    BYTE PTR [rax],al
   14002c1ce:	add    BYTE PTR [rax],al
   14002c1d0:	rex.RX scas al,BYTE PTR es:[rdi]
   14002c1d2:	add    eax,DWORD PTR [rax]
   14002c1d4:	add    BYTE PTR [rax],al
   14002c1d6:	add    BYTE PTR [rax],al
   14002c1d8:	push   rsp
   14002c1d9:	scas   al,BYTE PTR es:[rdi]
   14002c1da:	add    eax,DWORD PTR [rax]
   14002c1dc:	add    BYTE PTR [rax],al
   14002c1de:	add    BYTE PTR [rax],al
   14002c1e0:	ins    BYTE PTR es:[rdi],dx
   14002c1e1:	scas   al,BYTE PTR es:[rdi]
   14002c1e2:	add    eax,DWORD PTR [rax]
   14002c1e4:	add    BYTE PTR [rax],al
   14002c1e6:	add    BYTE PTR [rax],al
   14002c1e8:	jle    0x14002c198
   14002c1ea:	add    eax,DWORD PTR [rax]
   14002c1ec:	add    BYTE PTR [rax],al
   14002c1ee:	add    BYTE PTR [rax],al
   14002c1f0:	xchg   esp,eax
   14002c1f1:	scas   al,BYTE PTR es:[rdi]
   14002c1f2:	add    eax,DWORD PTR [rax]
   14002c1f4:	add    BYTE PTR [rax],al
   14002c1f6:	add    BYTE PTR [rax],al
   14002c1f8:	movabs al,ds:0xb6000000000003ae
   14002c201:	scas   al,BYTE PTR es:[rdi]
   14002c202:	add    eax,DWORD PTR [rax]
   14002c204:	add    BYTE PTR [rax],al
   14002c206:	add    BYTE PTR [rax],al
   14002c208:	shr    BYTE PTR [rsi+0x3],1
   14002c20e:	add    BYTE PTR [rax],al
   14002c210:	out    0xae,al
   14002c212:	add    eax,DWORD PTR [rax]
   14002c214:	add    BYTE PTR [rax],al
   14002c216:	add    BYTE PTR [rax],al
   14002c218:	add    BYTE PTR [rdi+0x3],ch
   14002c21e:	add    BYTE PTR [rax],al
   14002c220:	sbb    ch,BYTE PTR [rdi+0x3]
   14002c226:	add    BYTE PTR [rax],al
   14002c228:	xor    al,0xaf
   14002c22a:	add    eax,DWORD PTR [rax]
   14002c22c:	add    BYTE PTR [rax],al
   14002c22e:	add    BYTE PTR [rax],al
   14002c230:	scas   rax,QWORD PTR es:[rdi]
   14002c232:	add    eax,DWORD PTR [rax]
   14002c234:	add    BYTE PTR [rax],al
   14002c236:	add    BYTE PTR [rax],al
   14002c238:	pop    rsp
   14002c239:	scas   eax,DWORD PTR es:[rdi]
   14002c23a:	add    eax,DWORD PTR [rax]
   14002c23c:	add    BYTE PTR [rax],al
   14002c23e:	add    BYTE PTR [rax],al
   14002c240:	js     0x14002c1f1
   14002c242:	add    eax,DWORD PTR [rax]
   14002c244:	add    BYTE PTR [rax],al
   14002c246:	add    BYTE PTR [rax],al
   14002c248:	xchg   esi,eax
   14002c249:	scas   eax,DWORD PTR es:[rdi]
   14002c24a:	add    eax,DWORD PTR [rax]
   14002c24c:	add    BYTE PTR [rax],al
   14002c24e:	add    BYTE PTR [rax],al
   14002c250:	mov    esi,0x3af
   14002c255:	add    BYTE PTR [rax],al
   14002c257:	add    dh,cl
   14002c259:	scas   eax,DWORD PTR es:[rdi]
   14002c25a:	add    eax,DWORD PTR [rax]
   14002c25c:	add    BYTE PTR [rax],al
   14002c25e:	add    BYTE PTR [rax],al
   14002c260:	(bad)  
   14002c261:	scas   eax,DWORD PTR es:[rdi]
   14002c262:	add    eax,DWORD PTR [rax]
   14002c264:	add    BYTE PTR [rax],al
   14002c266:	add    BYTE PTR [rax],al
   14002c268:	(bad)  
   14002c269:	scas   eax,DWORD PTR es:[rdi]
   14002c26a:	add    eax,DWORD PTR [rax]
   14002c26c:	add    BYTE PTR [rax],al
   14002c26e:	add    BYTE PTR [rax],al
   14002c270:	(bad)  
   14002c271:	scas   eax,DWORD PTR es:[rdi]
   14002c272:	add    eax,DWORD PTR [rax]
   14002c274:	add    BYTE PTR [rax],al
   14002c276:	add    BYTE PTR [rax],al
   14002c278:	or     dh,BYTE PTR [rax+0x3]
   14002c27e:	add    BYTE PTR [rax],al
   14002c280:	sbb    BYTE PTR [rax+0x3],dh
   14002c286:	add    BYTE PTR [rax],al
   14002c288:	es mov al,0x3
   14002c28b:	add    BYTE PTR [rax],al
   14002c28d:	add    BYTE PTR [rax],al
   14002c28f:	add    BYTE PTR [rax],dh
   14002c291:	mov    al,0x3
   14002c293:	add    BYTE PTR [rax],al
   14002c295:	add    BYTE PTR [rax],al
   14002c297:	add    BYTE PTR [rax-0x50],al
   14002c29a:	add    eax,DWORD PTR [rax]
	...
   14002c2a8:	js     0x14002c256
   14002c2aa:	add    eax,DWORD PTR [rax]
   14002c2ac:	add    BYTE PTR [rax],al
   14002c2ae:	add    BYTE PTR [rax],al
   14002c2b0:	push   0xffffffffffffffac
   14002c2b2:	add    eax,DWORD PTR [rax]
   14002c2b4:	add    BYTE PTR [rax],al
   14002c2b6:	add    BYTE PTR [rax],al
   14002c2b8:	pop    rax
   14002c2b9:	lods   al,BYTE PTR ds:[rsi]
   14002c2ba:	add    eax,DWORD PTR [rax]
   14002c2bc:	add    BYTE PTR [rax],al
   14002c2be:	add    BYTE PTR [rax],al
   14002c2c0:	rex.R lods al,BYTE PTR ds:[rsi]
   14002c2c2:	add    eax,DWORD PTR [rax]
   14002c2c4:	add    BYTE PTR [rax],al
   14002c2c6:	add    BYTE PTR [rax],al
   14002c2c8:	xor    ch,BYTE PTR [rbx+rax*1+0x0]
   14002c2cf:	add    BYTE PTR [rsp+rbp*4],ah
   14002c2d2:	add    eax,DWORD PTR [rax]
	...
   14002c2e0:	(bad)  
   14002c2e1:	stos   DWORD PTR es:[rdi],eax
   14002c2e2:	add    eax,DWORD PTR [rax]
   14002c2e4:	add    BYTE PTR [rax],al
   14002c2e6:	add    BYTE PTR [rax],al
   14002c2e8:	rex.WR stos QWORD PTR es:[rdi],rax
   14002c2ea:	add    eax,DWORD PTR [rax]
   14002c2ec:	add    BYTE PTR [rax],al
   14002c2ee:	add    BYTE PTR [rax],al
   14002c2f0:	sbb    ch,BYTE PTR [rbx+0x3]
   14002c2f6:	add    BYTE PTR [rax],al
   14002c2f8:	test   al,0xaa
   14002c2fa:	add    eax,DWORD PTR [rax]
   14002c2fc:	add    BYTE PTR [rax],al
   14002c2fe:	add    BYTE PTR [rax],al
   14002c300:	cmp    al,0xaa
   14002c302:	add    eax,DWORD PTR [rax]
   14002c304:	add    BYTE PTR [rax],al
   14002c306:	add    BYTE PTR [rax],al
   14002c308:	sbb    ch,BYTE PTR [rdx+0x3]
   14002c30e:	add    BYTE PTR [rax],al
   14002c310:	hlt    
   14002c311:	test   eax,0x3
   14002c316:	add    BYTE PTR [rax],al
   14002c318:	pushf  
   14002c319:	test   eax,0x3
   14002c31e:	add    BYTE PTR [rax],al
   14002c320:	jle    0x14002c2cb
   14002c322:	add    eax,DWORD PTR [rax]
   14002c324:	add    BYTE PTR [rax],al
   14002c326:	add    BYTE PTR [rax],al
   14002c328:	fs test eax,0x3
   14002c32e:	add    BYTE PTR [rax],al
   14002c330:	test   rax,0x3
   14002c336:	add    BYTE PTR [rax],al
   14002c338:	sub    al,0xa9
   14002c33a:	add    eax,DWORD PTR [rax]
   14002c33c:	add    BYTE PTR [rax],al
   14002c33e:	add    BYTE PTR [rax],al
   14002c340:	add    al,0xa9
   14002c342:	add    eax,DWORD PTR [rax]
   14002c344:	add    BYTE PTR [rax],al
   14002c346:	add    BYTE PTR [rax],al
   14002c348:	out    dx,al
   14002c349:	test   al,0x3
   14002c34b:	add    BYTE PTR [rax],al
   14002c34d:	add    BYTE PTR [rax],al
   14002c34f:	add    dh,dl
   14002c351:	test   al,0x3
   14002c353:	add    BYTE PTR [rax],al
   14002c355:	add    BYTE PTR [rax],al
   14002c357:	add    BYTE PTR [rsi+0x3a8],dh
   14002c35d:	add    BYTE PTR [rax],al
   14002c35f:	add    BYTE PTR [rax+0x3a8],ah
   14002c365:	add    BYTE PTR [rax],al
   14002c367:	add    BYTE PTR [rdx+0x3a8],cl
   14002c36d:	add    BYTE PTR [rax],al
   14002c36f:	add    BYTE PTR [rax-0x58],bh
   14002c372:	add    eax,DWORD PTR [rax]
   14002c374:	add    BYTE PTR [rax],al
   14002c376:	add    BYTE PTR [rax],al
   14002c378:	pop    rsi
   14002c379:	test   al,0x3
   14002c37b:	add    BYTE PTR [rax],al
   14002c37d:	add    BYTE PTR [rax],al
   14002c37f:	add    BYTE PTR [rax-0x58],cl
   14002c382:	add    eax,DWORD PTR [rax]
	...
   14002c398:	add    BYTE PTR [rax],dl
   14002c39a:	add    BYTE PTR [rax+0x1],al
   14002c39d:	add    BYTE PTR [rax],al
   14002c39f:	add    BYTE PTR [rax],dl
   14002c3a1:	adc    BYTE PTR [rax],al
   14002c3a3:	rex add DWORD PTR [rax],eax
   14002c3a6:	add    BYTE PTR [rax],al
   14002c3a8:	and    BYTE PTR [rax],dl
   14002c3aa:	add    BYTE PTR [rax+0x1],al
	...
   14002c3bd:	add    BYTE PTR [rax],al
   14002c3bf:	add    BYTE PTR [rax+0x1400057],al
   14002c3c5:	add    BYTE PTR [rax],al
   14002c3c7:	add    BYTE PTR [rdx+rcx*4],ah
   14002c3ca:	add    BYTE PTR [rax+0x1],al
   14002c3cd:	add    BYTE PTR [rax],al
   14002c3cf:	add    BYTE PTR [rax+rax*1+0x1],dh
   14002c3d3:	rex add DWORD PTR [rax],eax
   14002c3d6:	add    BYTE PTR [rax],al
   14002c3d8:	cmp    al,0xd
   14002c3da:	add    DWORD PTR [rax+0x1],eax
   14002c3dd:	add    BYTE PTR [rax],al
   14002c3df:	add    BYTE PTR [rax-0x2b],bl
   14002c3e2:	add    BYTE PTR [rax+0x1],al
	...
   14002c3f5:	add    BYTE PTR [rax],al
   14002c3f7:	add    BYTE PTR [rax+0x14001fa],bl
   14002c3fd:	add    BYTE PTR [rax],al
   14002c3ff:	add    BYTE PTR [rcx+rax*2+0x2],cl
   14002c403:	rex add DWORD PTR [rax],eax
   14002c406:	add    BYTE PTR [rax],al
   14002c408:	(bad)  
   14002c409:	or     eax,0x14001
	...
   14002c432:	add    BYTE PTR [rax],al
   14002c434:	outs   dx,BYTE PTR ds:[rsi]
   14002c435:	adc    BYTE PTR [rcx+0x58],al
   14002c43b:	add    BYTE PTR [rdx],al
   14002c43d:	add    BYTE PTR [rax],al
   14002c43f:	add    BYTE PTR [rax+rax*1+0x0],al
   14002c443:	add    BYTE PTR [rax+0x5c],dl
   14002c446:	add    eax,DWORD PTR [rax]
   14002c448:	push   rax
   14002c449:	add    r8d,DWORD PTR [rax]
   14002c44c:	add    BYTE PTR [rax],al
   14002c44e:	add    BYTE PTR [rax],al
   14002c450:	outs   dx,BYTE PTR ds:[rsi]
   14002c451:	adc    BYTE PTR [rcx+0x58],al
   14002c457:	add    BYTE PTR [rax+rax*1],cl
   14002c45a:	add    BYTE PTR [rax],al
   14002c45c:	adc    al,0x0
   14002c45e:	add    BYTE PTR [rax],al
   14002c460:	xchg   esp,eax
   14002c461:	pop    rsp
   14002c462:	add    eax,DWORD PTR [rax]
   14002c464:	xchg   esp,eax
   14002c465:	add    r8d,DWORD PTR [rax]
   14002c468:	and    al,BYTE PTR [rip+0x11993]        # 0x14003de01
   14002c46e:	add    BYTE PTR [rax],al
   14002c470:	test   BYTE PTR [rcx+0x3],ch
	...
   14002c47b:	add    BYTE PTR [rbx],al
   14002c47d:	add    BYTE PTR [rax],al
   14002c47f:	add    BYTE PTR [rax+0x28000369],dl
   14002c485:	add    BYTE PTR [rax],al
   14002c487:	add    BYTE PTR [rax],al
   14002c489:	add    BYTE PTR [rax],al
   14002c48b:	add    BYTE PTR [rcx],al
   14002c48d:	add    BYTE PTR [rax],al
   14002c48f:	add    BYTE PTR [rdx],ah
   14002c491:	add    eax,0x41993
   14002c496:	add    BYTE PTR [rax],al
   14002c498:	sub    BYTE PTR [rdx+0x3],0x0
   14002c49c:	add    al,BYTE PTR [rax]
   14002c49e:	add    BYTE PTR [rax],al
   14002c4a0:	movabs al,ds:0xf00000000800036a
   14002c4a9:	push   0x3
   14002c4ab:	add    BYTE PTR [rax],ah
   14002c4ad:	add    BYTE PTR [rax],al
   14002c4af:	add    BYTE PTR [rax],al
   14002c4b1:	add    BYTE PTR [rax],al
   14002c4b3:	add    BYTE PTR [rcx],al
   14002c4b5:	add    BYTE PTR [rax],al
   14002c4b7:	add    BYTE PTR [rdx],ah
   14002c4b9:	add    eax,0x21993
   14002c4be:	add    BYTE PTR [rax],al
   14002c4c0:	hlt    
   14002c4c1:	ins    BYTE PTR es:[rdi],dx
   14002c4c2:	add    eax,DWORD PTR [rax]
   14002c4c4:	add    DWORD PTR [rax],eax
   14002c4c6:	add    BYTE PTR [rax],al
   14002c4c8:	add    al,0x6d
   14002c4ca:	add    eax,DWORD PTR [rax]
   14002c4cc:	add    eax,0x30000000
   14002c4d1:	ins    DWORD PTR es:[rdi],dx
   14002c4d2:	add    eax,DWORD PTR [rax]
   14002c4d4:	and    BYTE PTR [rax],al
   14002c4d6:	add    BYTE PTR [rax],al
   14002c4d8:	add    BYTE PTR [rax],al
   14002c4da:	add    BYTE PTR [rax],al
   14002c4dc:	add    DWORD PTR [rax],eax
   14002c4de:	add    BYTE PTR [rax],al
   14002c4e0:	and    al,BYTE PTR [rip+0x21993]        # 0x14004de79
   14002c4e6:	add    BYTE PTR [rax],al
   14002c4e8:	call   0x14002c85a
   14002c4ed:	add    BYTE PTR [rax],al
   14002c4ef:	add    BYTE PTR [rax],al
   14002c4f1:	add    BYTE PTR [rax],al
   14002c4f3:	add    BYTE PTR [rax+rax*1],al
   14002c4f6:	add    BYTE PTR [rax],al
   14002c4f8:	clc    
   14002c4f9:	ins    DWORD PTR es:[rdi],dx
   14002c4fa:	add    eax,DWORD PTR [rax]
   14002c4fc:	and    BYTE PTR [rax],al
   14002c4fe:	add    BYTE PTR [rax],al
   14002c500:	add    BYTE PTR [rax],al
   14002c502:	add    BYTE PTR [rax],al
   14002c504:	add    DWORD PTR [rax],eax
   14002c506:	add    BYTE PTR [rax],al
   14002c508:	and    al,BYTE PTR [rip+0x21993]        # 0x14004dea1
   14002c50e:	add    BYTE PTR [rax],al
   14002c510:	rex.WR outs dx,BYTE PTR ds:[rsi]
   14002c512:	add    eax,DWORD PTR [rax]
   14002c514:	add    DWORD PTR [rax],eax
   14002c516:	add    BYTE PTR [rax],al
   14002c518:	pop    rsp
   14002c519:	outs   dx,BYTE PTR ds:[rsi]
   14002c51a:	add    eax,DWORD PTR [rax]
   14002c51c:	add    eax,0x88000000
   14002c521:	outs   dx,BYTE PTR ds:[rsi]
   14002c522:	add    eax,DWORD PTR [rax]
   14002c524:	xor    BYTE PTR [rax],al
   14002c526:	add    BYTE PTR [rax],al
   14002c528:	add    BYTE PTR [rax],al
   14002c52a:	add    BYTE PTR [rax],al
   14002c52c:	add    DWORD PTR [rax],eax
   14002c52e:	add    BYTE PTR [rax],al
   14002c530:	and    al,BYTE PTR [rip+0x41993]        # 0x14006dec9
   14002c536:	add    BYTE PTR [rax],al
   14002c538:	sub    BYTE PTR [rdi+0x3],0x0
   14002c53c:	add    al,BYTE PTR [rax]
   14002c53e:	add    BYTE PTR [rax],al
   14002c540:	movabs al,ds:0xf00000000900036f
   14002c549:	outs   dx,DWORD PTR ds:[rsi]
   14002c54a:	add    eax,DWORD PTR [rax]
   14002c54c:	cmp    BYTE PTR [rax],al
   14002c54e:	add    BYTE PTR [rax],al
   14002c550:	add    BYTE PTR [rax],al
   14002c552:	add    BYTE PTR [rax],al
   14002c554:	add    DWORD PTR [rax],eax
   14002c556:	add    BYTE PTR [rax],al
   14002c558:	and    al,BYTE PTR [rip+0x21993]        # 0x14004def1
   14002c55e:	add    BYTE PTR [rax],al
   14002c560:	test   BYTE PTR [rax+0x3],dh
	...
   14002c56b:	add    BYTE PTR [rax+rax*1],al
   14002c56e:	add    BYTE PTR [rax],al
   14002c570:	cwde   
   14002c571:	jo     0x14002c576
   14002c573:	add    BYTE PTR [rax],ah
   14002c575:	add    BYTE PTR [rax],al
   14002c577:	add    BYTE PTR [rax],al
   14002c579:	add    BYTE PTR [rax],al
   14002c57b:	add    BYTE PTR [rcx],al
   14002c57d:	add    BYTE PTR [rax],al
   14002c57f:	add    BYTE PTR [rdx],ah
   14002c581:	add    eax,0x21993
   14002c586:	add    BYTE PTR [rax],al
   14002c588:	loopne 0x14002c5fa
   14002c58a:	add    eax,DWORD PTR [rax]
	...
   14002c594:	add    al,0x0
   14002c596:	add    BYTE PTR [rax],al
   14002c598:	lock jo 0x14002c59e
   14002c59b:	add    BYTE PTR [rax],ah
   14002c59d:	add    BYTE PTR [rax],al
   14002c59f:	add    BYTE PTR [rax],al
   14002c5a1:	add    BYTE PTR [rax],al
   14002c5a3:	add    BYTE PTR [rcx],al
   14002c5a5:	add    BYTE PTR [rax],al
   14002c5a7:	add    BYTE PTR [rdx],ah
   14002c5a9:	add    eax,0x21993
   14002c5ae:	add    BYTE PTR [rax],al
   14002c5b0:	pop    rsp
   14002c5b1:	jno    0x14002c5b6
	...
   14002c5bb:	add    BYTE PTR [rip+0x70000000],al        # 0x1b002c5c1
   14002c5c1:	jno    0x14002c5c6
   14002c5c3:	add    BYTE PTR [rax],ah
   14002c5c5:	add    BYTE PTR [rax],al
   14002c5c7:	add    BYTE PTR [rax],al
   14002c5c9:	add    BYTE PTR [rax],al
   14002c5cb:	add    BYTE PTR [rcx],al
   14002c5cd:	add    BYTE PTR [rax],al
   14002c5cf:	add    BYTE PTR [rdx],ah
   14002c5d1:	add    eax,0x11993
   14002c5d6:	add    BYTE PTR [rax],al
   14002c5d8:	adc    al,0x72
   14002c5da:	add    eax,DWORD PTR [rax]
	...
   14002c5e4:	add    eax,DWORD PTR [rax]
   14002c5e6:	add    BYTE PTR [rax],al
   14002c5e8:	and    BYTE PTR [rdx+0x3],dh
   14002c5eb:	add    BYTE PTR [rax],ah
   14002c5ed:	add    BYTE PTR [rax],al
   14002c5ef:	add    BYTE PTR [rax],al
   14002c5f1:	add    BYTE PTR [rax],al
   14002c5f3:	add    BYTE PTR [rcx],al
   14002c5f5:	add    BYTE PTR [rax],al
   14002c5f7:	add    BYTE PTR [rdx],ah
   14002c5f9:	add    eax,0x21993
   14002c5fe:	add    BYTE PTR [rax],al
   14002c600:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c601:	jb     0x14002c606
   14002c603:	add    BYTE PTR [rcx],al
   14002c605:	add    BYTE PTR [rax],al
   14002c607:	add    BYTE PTR [rdx+rsi*2+0x50003],dh
   14002c60e:	add    BYTE PTR [rax],al
   14002c610:	loopne 0x14002c684
   14002c612:	add    eax,DWORD PTR [rax]
   14002c614:	and    BYTE PTR [rax],al
   14002c616:	add    BYTE PTR [rax],al
   14002c618:	add    BYTE PTR [rax],al
   14002c61a:	add    BYTE PTR [rax],al
   14002c61c:	add    DWORD PTR [rax],eax
   14002c61e:	add    BYTE PTR [rax],al
   14002c620:	and    al,BYTE PTR [rip+0x21993]        # 0x14004dfb9
   14002c626:	add    BYTE PTR [rax],al
   14002c628:	rex jae 0x14002c62e
   14002c62b:	add    BYTE PTR [rcx],al
   14002c62d:	add    BYTE PTR [rax],al
   14002c62f:	add    BYTE PTR [rax+0x73],dl
   14002c632:	add    eax,DWORD PTR [rax]
   14002c634:	add    eax,0x78000000
   14002c639:	jae    0x14002c63e
   14002c63b:	add    BYTE PTR [rax],ah
   14002c63d:	add    BYTE PTR [rax],al
   14002c63f:	add    BYTE PTR [rax],al
   14002c641:	add    BYTE PTR [rax],al
   14002c643:	add    BYTE PTR [rcx],al
   14002c645:	add    BYTE PTR [rax],al
   14002c647:	add    BYTE PTR [rdx],ah
   14002c649:	add    eax,0x21993
   14002c64e:	add    BYTE PTR [rax],al
   14002c650:	fdiv   QWORD PTR [rbx+0x3]
   14002c653:	add    BYTE PTR [rcx],al
   14002c655:	add    BYTE PTR [rax],al
   14002c657:	add    ah,ch
   14002c659:	jae    0x14002c65e
   14002c65b:	add    BYTE PTR [rip+0x18000000],al        # 0x15802c661
   14002c661:	je     0x14002c666
   14002c663:	add    BYTE PTR [rax],ah
   14002c665:	add    BYTE PTR [rax],al
   14002c667:	add    BYTE PTR [rax],al
   14002c669:	add    BYTE PTR [rax],al
   14002c66b:	add    BYTE PTR [rcx],al
   14002c66d:	add    BYTE PTR [rax],al
   14002c66f:	add    BYTE PTR [rdx],ah
   14002c671:	add    eax,0x31993
   14002c676:	add    BYTE PTR [rax],al
   14002c678:	ins    BYTE PTR es:[rdi],dx
   14002c679:	je     0x14002c67e
   14002c67b:	add    BYTE PTR [rcx],al
   14002c67d:	add    BYTE PTR [rax],al
   14002c67f:	add    BYTE PTR [rsp+rsi*2+0x60003],al
   14002c686:	add    BYTE PTR [rax],al
   14002c688:	mov    al,0x74
   14002c68a:	add    eax,DWORD PTR [rax]
   14002c68c:	sub    BYTE PTR [rax],al
   14002c68e:	add    BYTE PTR [rax],al
   14002c690:	add    BYTE PTR [rax],al
   14002c692:	add    BYTE PTR [rax],al
   14002c694:	add    DWORD PTR [rax],eax
   14002c696:	add    BYTE PTR [rax],al
   14002c698:	and    al,BYTE PTR [rip+0x11993]        # 0x14003e031
   14002c69e:	add    BYTE PTR [rax],al
   14002c6a0:	or     BYTE PTR [rbp+0x3],dh
	...
   14002c6ab:	add    BYTE PTR [rbx],al
   14002c6ad:	add    BYTE PTR [rax],al
   14002c6af:	add    BYTE PTR [rax],dl
   14002c6b1:	jne    0x14002c6b6
   14002c6b3:	add    BYTE PTR [rax],ah
   14002c6b5:	add    BYTE PTR [rax],al
   14002c6b7:	add    BYTE PTR [rax],al
   14002c6b9:	add    BYTE PTR [rax],al
   14002c6bb:	add    BYTE PTR [rcx],al
   14002c6bd:	add    BYTE PTR [rax],al
   14002c6bf:	add    BYTE PTR [rdx],ah
   14002c6c1:	add    eax,0x11993
   14002c6c6:	add    BYTE PTR [rax],al
   14002c6c8:	rex jne 0x14002c6ce
	...
   14002c6d3:	add    BYTE PTR [rbx],al
   14002c6d5:	add    BYTE PTR [rax],al
   14002c6d7:	add    BYTE PTR [rax+0x75],cl
   14002c6da:	add    eax,DWORD PTR [rax]
   14002c6dc:	and    BYTE PTR [rax],al
   14002c6de:	add    BYTE PTR [rax],al
   14002c6e0:	add    BYTE PTR [rax],al
   14002c6e2:	add    BYTE PTR [rax],al
   14002c6e4:	add    DWORD PTR [rax],eax
   14002c6e6:	add    BYTE PTR [rax],al
   14002c6e8:	and    al,BYTE PTR [rip+0x11993]        # 0x14003e081
   14002c6ee:	add    BYTE PTR [rax],al
   14002c6f0:	js     0x14002c767
   14002c6f2:	add    eax,DWORD PTR [rax]
	...
   14002c6fc:	add    eax,DWORD PTR [rax]
   14002c6fe:	add    BYTE PTR [rax],al
   14002c700:	xor    BYTE PTR [rbp+0x3],0x0
   14002c704:	and    BYTE PTR [rax],al
   14002c706:	add    BYTE PTR [rax],al
   14002c708:	add    BYTE PTR [rax],al
   14002c70a:	add    BYTE PTR [rax],al
   14002c70c:	add    DWORD PTR [rax],eax
   14002c70e:	add    BYTE PTR [rax],al
   14002c710:	test   al,0x5c
   14002c712:	add    eax,DWORD PTR [rax+0x1]
   14002c715:	add    BYTE PTR [rax],al
   14002c717:	add    BYTE PTR [rax],dh
   14002c719:	sub    BYTE PTR [rax],al
   14002c71b:	rex add DWORD PTR [rax],eax
   14002c71e:	add    BYTE PTR [rax],al
   14002c720:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c721:	push   rsi
   14002c722:	add    BYTE PTR [rax+0x1],al
   14002c725:	add    BYTE PTR [rax],al
   14002c727:	add    BYTE PTR [rsi+rdx*2+0x14000],ah
   14002c72e:	add    BYTE PTR [rax],al
   14002c730:	xor    BYTE PTR [rax+0x0],al
   14002c733:	rex add DWORD PTR [rax],eax
   14002c736:	add    BYTE PTR [rax],al
   14002c738:	(bad)  
   14002c739:	add    BYTE PTR [rax+0x1],al
   14002c73d:	add    BYTE PTR [rax],al
   14002c73f:	add    BYTE PTR [rax+0x1400040],al
   14002c745:	add    BYTE PTR [rax],al
   14002c747:	add    BYTE PTR [rax],ah
   14002c749:	pop    rbp
   14002c74a:	add    eax,DWORD PTR [rax+0x1]
   14002c74d:	add    BYTE PTR [rax],al
   14002c74f:	add    BYTE PTR [rax+0x1400027],ah
   14002c755:	add    BYTE PTR [rax],al
   14002c757:	add    BYTE PTR [rax+0x47],dh
   14002c75a:	add    BYTE PTR [rax+0x1],al
   14002c75d:	add    BYTE PTR [rax],al
   14002c75f:	add    BYTE PTR [rax],dh
   14002c761:	rex.RX add BYTE PTR [rax+0x1],r8b
   14002c765:	add    BYTE PTR [rax],al
   14002c767:	add    BYTE PTR [rax],dh
   14002c769:	add    BYTE PTR [rax+0x1],al
   14002c76d:	add    BYTE PTR [rax],al
   14002c76f:	add    BYTE PTR [rax+0x40],ah
   14002c772:	add    BYTE PTR [rax+0x1],al
   14002c775:	add    BYTE PTR [rax],al
   14002c777:	add    BYTE PTR [rax+0x1400040],al
   14002c77d:	add    BYTE PTR [rax],al
   14002c77f:	add    BYTE PTR [rdi+0x65],ah
   14002c782:	outs   dx,BYTE PTR ds:[rsi]
   14002c783:	gs jb  0x14002c7ef
   14002c786:	movsxd eax,DWORD PTR [rax]
   14002c788:	jne    0x14002c7f8
   14002c78a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14002c78e:	outs   dx,BYTE PTR ds:[rsi]
   14002c78f:	and    BYTE PTR [rbp+0x72],ah
   14002c792:	jb     0x14002c803
   14002c794:	jb     0x14002c796
   14002c796:	add    BYTE PTR [rax],al
   14002c798:	movabs al,ds:0xd00000000140035d
   14002c7a1:	(bad)  
   14002c7a2:	add    BYTE PTR [rax+0x1],al
   14002c7a5:	add    BYTE PTR [rax],al
   14002c7a7:	add    BYTE PTR [rax+0x1400047],al
   14002c7ad:	add    BYTE PTR [rax],al
   14002c7af:	add    BYTE PTR [rax+0x1400046],ah
   14002c7b5:	add    BYTE PTR [rax],al
   14002c7b7:	add    BYTE PTR [rax],dh
   14002c7b9:	add    BYTE PTR [rax+0x1],al
   14002c7bd:	add    BYTE PTR [rax],al
   14002c7bf:	add    BYTE PTR [rax+0x40],ah
   14002c7c2:	add    BYTE PTR [rax+0x1],al
   14002c7c5:	add    BYTE PTR [rax],al
   14002c7c7:	add    BYTE PTR [rax+0x1400040],al
   14002c7cd:	add    BYTE PTR [rax],al
   14002c7cf:	add    BYTE PTR [rcx+0x6f],ch
   14002c7d2:	jae    0x14002c848
   14002c7d4:	jb     0x14002c83b
   14002c7d6:	(bad)  
   14002c7d7:	ins    DWORD PTR es:[rdi],dx
	...
   14002c7e0:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14002c7e7:	ins    DWORD PTR es:[rdi],dx
   14002c7e8:	and    BYTE PTR [rbx+0x74],dh
   14002c7eb:	jb     0x14002c852
   14002c7ed:	(bad)  
   14002c7ee:	ins    DWORD PTR es:[rdi],dx
   14002c7ef:	and    BYTE PTR [rbp+0x72],ah
   14002c7f2:	jb     0x14002c863
   14002c7f4:	jb     0x14002c7f6
   14002c7f6:	add    BYTE PTR [rax],al
   14002c7f8:	sub    BYTE PTR [rsi+0x3],bl
   14002c7fb:	rex add DWORD PTR [rax],eax
   14002c7fe:	add    BYTE PTR [rax],al
   14002c800:	add    BYTE PTR [rax],ch
   14002c802:	add    BYTE PTR [rax+0x1],al
   14002c805:	add    BYTE PTR [rax],al
   14002c807:	add    BYTE PTR [rax+0x1400047],dl
   14002c80d:	add    BYTE PTR [rax],al
   14002c80f:	add    al,dh
   14002c811:	rex.RX add BYTE PTR [rax+0x1],r8b
   14002c815:	add    BYTE PTR [rax],al
   14002c817:	add    al,dh
   14002c819:	(bad)  
   14002c81a:	add    BYTE PTR [rax+0x1],al
   14002c81d:	add    BYTE PTR [rax],al
   14002c81f:	add    BYTE PTR [rax+0x40],ah
   14002c822:	add    BYTE PTR [rax+0x1],al
   14002c825:	add    BYTE PTR [rax],al
   14002c827:	add    BYTE PTR [rax+0x1400040],al
   14002c82d:	add    BYTE PTR [rax],al
   14002c82f:	add    BYTE PTR [rbx+0x79],dh
   14002c832:	jae    0x14002c8a8
   14002c834:	gs ins DWORD PTR es:[rdi],dx
	...
   14002c83e:	add    BYTE PTR [rax],al
   14002c840:	and    eax,0x5c007300
   14002c845:	add    BYTE PTR [rdx+0x0],ah
   14002c848:	imul   eax,DWORD PTR [rax],0x5c006e
   14002c84e:	and    eax,0x5c007300
   14002c853:	add    BYTE PTR [rbx+0x0],dh
   14002c856:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14002c85b:	add    BYTE PTR [rax+0x0],dh
   14002c85e:	add    BYTE PTR cs:[rbp+0x0],ah
   14002c862:	js     0x14002c864
   14002c864:	add    BYTE PTR gs:[rax],al
   14002c867:	add    BYTE PTR [rip+0x20007300],ah        # 0x160033b6d
   14002c86d:	add    BYTE PTR [rip+0x63002d00],ch        # 0x1a302f573
   14002c873:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002c877:	add    BYTE PTR [rcx+0x0],ah
   14002c87a:	outs   dx,BYTE PTR ds:[rsi]
   14002c87b:	add    BYTE PTR [rbp+0x0],dh
   14002c87e:	jo     0x14002c880
   14002c880:	and    BYTE PTR [rax],al
   14002c882:	sub    eax,0x6c002d00
   14002c887:	add    BYTE PTR [rdi+0x0],ch
   14002c88a:	movsxd eax,DWORD PTR [rax]
   14002c88c:	(bad)  
   14002c88d:	add    BYTE PTR [rax+rax*1+0x72],ch
   14002c891:	add    BYTE PTR [rbp+0x0],dh
   14002c894:	outs   dx,BYTE PTR ds:[rsi]
   14002c895:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002c899:	add    BYTE PTR [rdx+0x0],dh
   14002c89c:	and    BYTE PTR [rax],al
   14002c89e:	and    eax,0x7300
   14002c8a3:	add    BYTE PTR [rip+0x7300],ah        # 0x140033ba9
   14002c8a9:	add    BYTE PTR [rax],al
   14002c8ab:	add    BYTE PTR [rax],al
   14002c8ad:	add    BYTE PTR [rax],al
   14002c8af:	add    BYTE PTR [rip+0x20007300],ah        # 0x160033bb5
   14002c8b5:	add    BYTE PTR [rip+0x6f007200],ch        # 0x1af033abb
   14002c8bb:	add    BYTE PTR [rdi+0x0],ch
   14002c8be:	je     0x14002c8c0
   14002c8c0:	and    BYTE PTR [rax],al
   14002c8c2:	and    al,BYTE PTR [rax]
   14002c8c4:	and    eax,0x22007300
   14002c8c9:	add    BYTE PTR [rax],al
   14002c8cb:	add    BYTE PTR [rax],al
   14002c8cd:	add    BYTE PTR [rax],al
   14002c8cf:	add    BYTE PTR [rax+0x0],dl
   14002c8d2:	(bad)  
   14002c8d3:	add    BYTE PTR [rax+rax*1+0x68],dh
	...
   14002c8df:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c033be5
   14002c8e5:	add    BYTE PTR [rdx+0x0],ah
   14002c8e8:	imul   eax,DWORD PTR [rax],0x5c006e
   14002c8ee:	and    eax,0x3b007300
   14002c8f3:	add    BYTE PTR [rip+0x7300],ah        # 0x140033bf9
   14002c8f9:	add    BYTE PTR [rax],al
   14002c8fb:	add    BYTE PTR [rax],al
   14002c8fd:	add    BYTE PTR [rax],al
   14002c8ff:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c033c05
   14002c905:	add    BYTE PTR [rdx+0x0],ah
   14002c908:	imul   eax,DWORD PTR [rax],0x5c006e
   14002c90e:	and    eax,0x7300
   14002c913:	add    BYTE PTR [rax],al
   14002c915:	add    BYTE PTR [rax],al
   14002c917:	add    BYTE PTR [rax],ah
   14002c919:	add    BYTE PTR [rip+0x6f007200],ch        # 0x1af033b1f
   14002c91f:	add    BYTE PTR [rdi+0x0],ch
   14002c922:	je     0x14002c924
   14002c924:	and    BYTE PTR [rax],al
   14002c926:	add    BYTE PTR [rax],al
   14002c928:	sub    eax,0x6f007200
   14002c92d:	add    BYTE PTR [rdi+0x0],ch
   14002c930:	je     0x14002c932
   14002c932:	add    BYTE PTR [rax],al
   14002c934:	add    BYTE PTR [rax],al
   14002c936:	add    BYTE PTR [rax],al
   14002c938:	sub    eax,0x69006c00
   14002c93d:	add    BYTE PTR [rdx+0x0],ah
   14002c940:	add    BYTE PTR fs:[rcx+0x0],ch
   14002c944:	jb     0x14002c946
   14002c946:	add    BYTE PTR [rax],al
   14002c948:	je     0x14002c94a
   14002c94a:	ins    DWORD PTR es:[rdi],dx
   14002c94b:	add    BYTE PTR [rdi+0x0],dh
   14002c94e:	jae    0x14002c950
   14002c950:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14002c955:	add    BYTE PTR [rax+0x0],dh
	...
   14002c960:	jae    0x14002c9d6
   14002c962:	jb     0x14002c9cd
   14002c964:	outs   dx,BYTE PTR ds:[rsi]
   14002c965:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14002c96a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14002c96e:	add    BYTE PTR [ecx+0x6e],ch
   14002c972:	jbe    0x14002c9d5
   14002c974:	ins    BYTE PTR es:[rdi],dx
   14002c975:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   14002c97d:	and    BYTE PTR [eax+0x6f],dh
   14002c981:	jae    0x14002c9ec
   14002c983:	je     0x14002c9ee
   14002c985:	outs   dx,DWORD PTR ds:[rsi]
   14002c986:	outs   dx,BYTE PTR ds:[rsi]
   14002c987:	add    BYTE PTR [rsi+0x65],dh
   14002c98a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002c98e:	cmp    al,0x54
   14002c990:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14002c995:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14002c999:	add    BYTE PTR [eax],al
   14002c99c:	add    BYTE PTR [rax],al
   14002c99e:	add    BYTE PTR [rax],al
   14002c9a0:	ins    BYTE PTR es:[rdi],dx
   14002c9a1:	imul   esi,DWORD PTR [rbx+0x74],0x203e543c
   14002c9a8:	je     0x14002ca19
   14002c9aa:	outs   dx,DWORD PTR ds:[rsi]
   14002c9ab:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14002c9af:	add    BYTE PTR [eax],al
   14002c9b2:	add    BYTE PTR [rax],al
   14002c9b4:	add    BYTE PTR [rax],al
   14002c9b6:	sbb    BYTE PTR [rdi+0x39],0x2e
   14002c9ba:	xor    ch,BYTE PTR [rsi]
   14002c9bc:	xor    BYTE PTR [rsi],ch
   14002c9be:	xor    eax,0x34363831
   14002c9c3:	xor    DWORD PTR [rax],eax
   14002c9c5:	add    BYTE PTR [rax],al
   14002c9c7:	add    BYTE PTR [rdx+0x61],cl
   14002c9ca:	outs   dx,BYTE PTR ds:[rsi]
   14002c9cb:	and    BYTE PTR [rcx],dh
   14002c9cd:	cmp    DWORD PTR [rax],esp
   14002c9cf:	xor    dh,BYTE PTR [rax]
   14002c9d1:	xor    DWORD PTR [rdi],esi
   14002c9d3:	add    BYTE PTR [rax],al
   14002c9d5:	add    BYTE PTR [rax],al
   14002c9d7:	add    BYTE PTR [rcx+0x6e],ch
   14002c9da:	jae    0x14002ca50
   14002c9dc:	(bad)  
   14002c9dd:	ins    BYTE PTR es:[rdi],dx
   14002c9de:	ins    BYTE PTR es:[rdi],dx
   14002c9df:	pop    rsp
   14002c9e0:	(bad)  
   14002c9e1:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   14002c9e8:	xor    al,0x5c
   14002c9ea:	jae    0x14002ca51
   14002c9ec:	je     0x14002ca63
   14002c9ee:	jo     0x14002ca4c
   14002c9f0:	jae    0x14002ca57
   14002c9f2:	je     0x14002ca69
   14002c9f4:	jo     0x14002ca24
   14002c9f6:	gs js  0x14002ca5e
   14002c9f9:	add    BYTE PTR [rcx],al
   14002c9fb:	add    BYTE PTR [rdi],al
   14002c9fd:	add    BYTE PTR [rax],al
   14002c9ff:	add    BYTE PTR [rdx],al
   14002ca01:	add    BYTE PTR [rax],al
   14002ca03:	add    BYTE PTR [rax],al
   14002ca05:	add    BYTE PTR [rax],al
   14002ca07:	add    BYTE PTR [rax],dl
   14002ca09:	add    BYTE PTR [rax],al
   14002ca0b:	add    BYTE PTR [rax+rax*1],al
   14002ca0e:	add    BYTE PTR [rax],al
   14002ca10:	add    BYTE PTR [rax],al
   14002ca12:	add    BYTE PTR [rax],al
   14002ca14:	add    DWORD PTR [rax],eax
   14002ca16:	add    BYTE PTR [rax],al
   14002ca18:	add    BYTE PTR [rax],al
   14002ca1a:	add    BYTE PTR [rax],al
   14002ca1c:	add    DWORD PTR [rax],eax
   14002ca1e:	add    BYTE PTR [rax],al
   14002ca20:	add    al,BYTE PTR [rax]
   14002ca22:	add    BYTE PTR [rax],al
   14002ca24:	add    al,0x0
   14002ca26:	add    BYTE PTR [rax],al
   14002ca28:	or     BYTE PTR [rax],al
   14002ca2a:	add    BYTE PTR [rax],al
   14002ca2c:	adc    BYTE PTR [rax],al
   14002ca2e:	add    BYTE PTR [rax],al
   14002ca30:	and    BYTE PTR [rax],al
   14002ca32:	add    BYTE PTR [rax],al
   14002ca34:	add    DWORD PTR [rax],eax
   14002ca36:	add    BYTE PTR [rax],al
   14002ca38:	(bad)  
   14002ca39:	add    BYTE PTR [rax],al
   14002ca3b:	add    BYTE PTR [rax],al
   14002ca3d:	add    BYTE PTR [rax],al
   14002ca3f:	add    BYTE PTR [rdi],al
   14002ca41:	add    BYTE PTR [rax],al
   14002ca43:	add    BYTE PTR [rdx],al
   14002ca45:	add    BYTE PTR [rax],al
   14002ca47:	add    BYTE PTR [rax],al
   14002ca49:	add    BYTE PTR [rax],al
   14002ca4b:	add    BYTE PTR [rax],cl
   14002ca4d:	add    BYTE PTR [rax],al
   14002ca4f:	add    BYTE PTR [rdx],al
   14002ca51:	add    BYTE PTR [rax],al
   14002ca53:	add    BYTE PTR [rcx],al
   14002ca55:	add    BYTE PTR [rax],al
   14002ca57:	add    BYTE PTR [rdi],cl
   14002ca59:	add    BYTE PTR [rax],al
   14002ca5b:	add    BYTE PTR [rax+rax*1],al
   14002ca5e:	add    BYTE PTR [rax],al
   14002ca60:	add    BYTE PTR [rax],al
   14002ca62:	add    BYTE PTR [rax],al
   14002ca64:	adc    BYTE PTR [rax],al
   14002ca66:	add    BYTE PTR [rax],al
   14002ca68:	add    al,0x0
   14002ca6a:	add    BYTE PTR [rax],al
   14002ca6c:	add    DWORD PTR [rax],eax
   14002ca6e:	add    BYTE PTR [rax],al
   14002ca70:	add    BYTE PTR [rcx],al
   14002ca72:	add    BYTE PTR [rax],al
   14002ca74:	add    BYTE PTR [rax],al
   14002ca76:	add    BYTE PTR [rax],al
   14002ca78:	(bad)  
   14002ca79:	add    BYTE PTR [rax],al
   14002ca7b:	add    BYTE PTR [rcx],cl
   14002ca7d:	add    BYTE PTR [rax],al
   14002ca7f:	add    BYTE PTR [rax],al
   14002ca81:	add    BYTE PTR [rax],al
   14002ca83:	add    BYTE PTR [rax],ah
   14002ca85:	add    BYTE PTR [rax],al
   14002ca87:	add    BYTE PTR [rcx],cl
   14002ca89:	add    BYTE PTR [rax],al
   14002ca8b:	add    BYTE PTR [rcx],al
   14002ca8d:	add    BYTE PTR [rax],al
   14002ca8f:	add    BYTE PTR [rdi],bl
   14002ca91:	add    BYTE PTR [rax],al
   14002ca93:	add    BYTE PTR [rcx],cl
	...
   14002ca9d:	add    BYTE PTR [rax],al
   14002ca9f:	add    BYTE PTR [rax],ah
   14002caa1:	add    BYTE PTR [rax],al
   14002caa3:	add    BYTE PTR [rcx],cl
   14002caa5:	add    BYTE PTR [rax],al
   14002caa7:	add    BYTE PTR [rcx],al
   14002caa9:	add    BYTE PTR [rax],al
   14002caab:	add    BYTE PTR [rdi],bh
   14002caad:	add    BYTE PTR [rax],al
   14002caaf:	add    BYTE PTR [rdx],dl
   14002cab1:	add    BYTE PTR [rax],al
   14002cab3:	add    BYTE PTR [rax],al
   14002cab5:	add    BYTE PTR [rax],al
   14002cab7:	add    BYTE PTR [rax+0x0],al
   14002caba:	add    BYTE PTR [rax],al
   14002cabc:	adc    eax,DWORD PTR [rax]
   14002cabe:	add    BYTE PTR [rax],al
   14002cac0:	(bad)  
   14002cac1:	retf   
   14002cac2:	add    al,BYTE PTR [rax+0x1]
   14002cac5:	add    BYTE PTR [rax],al
   14002cac7:	add    BYTE PTR [rip+0x7000000],al        # 0x14702cacd
   14002cacd:	add    DWORD PTR [rax],eax
   14002cacf:	add    ah,bl
   14002cad1:	retf   
   14002cad2:	add    al,BYTE PTR [rax+0x1]
   14002cad5:	add    BYTE PTR [rax],al
   14002cad7:	add    BYTE PTR [rip+0x3000000],al        # 0x14302cadd
   14002cadd:	add    DWORD PTR [rax],eax
   14002cadf:	add    al,ch
   14002cae1:	retf   
   14002cae2:	add    al,BYTE PTR [rax+0x1]
   14002cae5:	add    BYTE PTR [rax],al
   14002cae7:	add    BYTE PTR [rip+0x48000000],al        # 0x18802caed
   14002caed:	add    BYTE PTR [rax],al
   14002caef:	add    al,dh
   14002caf1:	retf   
   14002caf2:	add    al,BYTE PTR [rax+0x1]
   14002caf5:	add    BYTE PTR [rax],al
   14002caf7:	add    BYTE PTR [rip+0x20000000],al        # 0x16002cafd
   14002cafd:	add    BYTE PTR [rax],al
   14002caff:	add    al,bh
   14002cb01:	retf   
   14002cb02:	add    al,BYTE PTR [rax+0x1]
   14002cb05:	add    BYTE PTR [rax],al
   14002cb07:	add    BYTE PTR [rcx],al
   14002cb09:	add    BYTE PTR [rax],al
   14002cb0b:	add    BYTE PTR [rax+rax*1],al
   14002cb0e:	add    BYTE PTR [rax],al
   14002cb10:	cld    
   14002cb11:	retf   
   14002cb12:	add    al,BYTE PTR [rax+0x1]
   14002cb15:	add    BYTE PTR [rax],al
   14002cb17:	add    BYTE PTR [rip+0x4000000],al        # 0x14402cb1d
   14002cb1d:	add    BYTE PTR [rax],al
   14002cb1f:	add    BYTE PTR [rax],cl
   14002cb21:	int3   
   14002cb22:	add    al,BYTE PTR [rax+0x1]
   14002cb25:	add    BYTE PTR [rax],al
   14002cb27:	add    BYTE PTR [rip+0x17000000],al        # 0x15702cb2d
   14002cb2d:	add    DWORD PTR [rax],eax
   14002cb2f:	add    BYTE PTR [rax],dl
   14002cb31:	int3   
   14002cb32:	add    al,BYTE PTR [rax+0x1]
   14002cb35:	add    BYTE PTR [rax],al
   14002cb37:	add    BYTE PTR [rip+0x2000000],al        # 0x14202cb3d
   14002cb3d:	add    BYTE PTR [rax],al
   14002cb3f:	add    BYTE PTR [rax],bl
   14002cb41:	int3   
   14002cb42:	add    al,BYTE PTR [rax+0x1]
   14002cb45:	add    BYTE PTR [rax],al
   14002cb47:	add    BYTE PTR [rip+0xffffffffd7000000],al        # 0x11702cb4d
   14002cb4d:	add    DWORD PTR [rax],eax
   14002cb4f:	add    BYTE PTR [rax],ah
   14002cb51:	int3   
   14002cb52:	add    al,BYTE PTR [rax+0x1]
   14002cb55:	add    BYTE PTR [rax],al
   14002cb57:	add    BYTE PTR [rip+0x10000000],al        # 0x15002cb5d
   14002cb5d:	add    BYTE PTR [rax],al
   14002cb5f:	add    BYTE PTR [rax],ch
   14002cb61:	int3   
   14002cb62:	add    al,BYTE PTR [rax+0x1]
   14002cb65:	add    BYTE PTR [rax],al
   14002cb67:	add    BYTE PTR [rip+0x48000000],al        # 0x18802cb6d
   14002cb6d:	add    BYTE PTR [rax],al
   14002cb6f:	add    BYTE PTR [rax],dh
   14002cb71:	int3   
   14002cb72:	add    al,BYTE PTR [rax+0x1]
   14002cb75:	add    BYTE PTR [rax],al
   14002cb77:	add    BYTE PTR [rcx],al
   14002cb79:	add    BYTE PTR [rax],al
   14002cb7b:	add    BYTE PTR [rax+0x0],cl
   14002cb7e:	add    BYTE PTR [rax],al
   14002cb80:	xor    al,0xcc
   14002cb82:	add    al,BYTE PTR [rax+0x1]
   14002cb85:	add    BYTE PTR [rax],al
   14002cb87:	add    BYTE PTR [rip+0x1000000],al        # 0x14102cb8d
   14002cb8d:	add    BYTE PTR [rax],al
   14002cb8f:	add    BYTE PTR [rsp+rcx*8],bh
   14002cb92:	add    al,BYTE PTR [rax+0x1]
   14002cb95:	add    BYTE PTR [rax],al
   14002cb97:	add    BYTE PTR [rcx],al
   14002cb99:	add    BYTE PTR [rax],al
   14002cb9b:	add    bh,bh
   14002cb9d:	inc    DWORD PTR [rax]
   14002cb9f:	add    BYTE PTR [rax-0x34],al
   14002cba2:	add    al,BYTE PTR [rax+0x1]
   14002cba5:	add    BYTE PTR [rax],al
   14002cba7:	add    BYTE PTR [rsi],al
   14002cba9:	add    BYTE PTR [rax],al
   14002cbab:	add    BYTE PTR [rax+0x0],al
	...
   14002cbbd:	add    BYTE PTR [rax],al
   14002cbbf:	add    BYTE PTR [rax],bl
   14002cbc1:	add    BYTE PTR [rax],al
   14002cbc3:	add    BYTE PTR [rsi],al
   14002cbc5:	add    BYTE PTR [rax],al
   14002cbc7:	add    BYTE PTR [rcx],cl
   14002cbc9:	add    BYTE PTR [rax],al
   14002cbcb:	add    BYTE PTR [rax+0x26000000],al
   14002cbd1:	add    BYTE PTR [rax],al
   14002cbd3:	add    BYTE PTR [rcx+0x6c],ah
   14002cbd6:	outs   dx,BYTE PTR ds:[rsi]
   14002cbd7:	jne    0x14002cc46
   14002cbd9:	add    BYTE PTR [rax],al
   14002cbdb:	add    BYTE PTR [rcx+0x6c],ah
   14002cbde:	jo     0x14002cc48
   14002cbe0:	(bad)  
   14002cbe1:	add    BYTE PTR [rax],al
   14002cbe3:	add    BYTE PTR [rbx+0x62ffffff],al
   14002cbe9:	ins    BYTE PTR es:[rdi],dx
   14002cbea:	(bad)  
   14002cbeb:	outs   dx,BYTE PTR ds:[rsi]
   14002cbec:	imul   eax,DWORD PTR [rax],0x0
   14002cbef:	add    BYTE PTR [rbx+0x6e],ah
   14002cbf2:	je     0x14002cc66
   14002cbf4:	ins    BYTE PTR es:[rdi],dx
   14002cbf5:	add    BYTE PTR [rax],al
   14002cbf7:	add    BYTE PTR [rax+rax*1+0x0],ah
   14002cbfb:	add    BYTE PTR [rcx+rbp*2+0x67],ah
   14002cbff:	imul   esi,DWORD PTR [rax+rax*1+0x0],0xffffdb00
   14002cc07:	jmp    QWORD PTR [rdi+0x72]
   14002cc0a:	(bad)  
   14002cc0b:	jo     0x14002cc75
   14002cc0d:	add    BYTE PTR [rax],al
   14002cc0f:	add    BYTE PTR [rdi+rbp*2+0x77],ch
   14002cc13:	gs jb  0x14002cc16
   14002cc16:	add    BYTE PTR [rax],al
   14002cc18:	jo     0x14002cc8c
   14002cc1a:	imul   ebp,DWORD PTR [rsi+0x74],0x70000000
   14002cc21:	jne    0x14002cc91
   14002cc23:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14002cc27:	add    BYTE PTR [rbx+0x70],dh
   14002cc2a:	(bad)  
   14002cc2b:	movsxd esp,DWORD PTR [rbp+0x0]
   14002cc2e:	add    BYTE PTR [rax],al
   14002cc30:	jae    0x14002cc32
   14002cc32:	add    BYTE PTR [rax],al
   14002cc34:	jne    0x14002cca6
   14002cc36:	jo     0x14002cc9d
   14002cc38:	jb     0x14002cc3a
   14002cc3a:	add    BYTE PTR [rax],al
   14002cc3c:	ja     0x14002cc3e
   14002cc3e:	add    BYTE PTR [rax],al
   14002cc40:	js     0x14002cca6
   14002cc42:	imul   esp,DWORD PTR [rdi+0x69],0x35000074
   14002cc49:	add    BYTE PTR [rax],al
   14002cc4b:	add    BYTE PTR [rdi],cl
   14002cc4d:	add    BYTE PTR [rax],al
   14002cc4f:	add    BYTE PTR [rcx],dl
   14002cc51:	add    BYTE PTR [rax],al
   14002cc53:	add    BYTE PTR [rax],al
   14002cc55:	add    al,0x0
   14002cc57:	add    BYTE PTR [rcx+rax*1],dh
   14002cc5a:	add    BYTE PTR [rax],al
   14002cc5c:	add    edi,esp
   14002cc5e:	(bad)  
   14002cc5f:	dec    ebp
   14002cc61:	(bad)  
   14002cc62:	(bad)  
   14002cc63:	inc    DWORD PTR [rax]
	...
   14002cc6d:	add    BYTE PTR [rax],al
   14002cc6f:	add    BYTE PTR [rax+0x14002cd],dl
   14002cc75:	add    BYTE PTR [rax],al
   14002cc77:	add    BYTE PTR [rip+0x7000000],al        # 0x14702cc7d
   14002cc7d:	add    DWORD PTR [rax],eax
   14002cc7f:	add    BYTE PTR [rax+0x14002cd],ah
   14002cc85:	add    BYTE PTR [rax],al
   14002cc87:	add    BYTE PTR [rip+0x3000000],al        # 0x14302cc8d
   14002cc8d:	add    DWORD PTR [rax],eax
   14002cc8f:	add    BYTE PTR [rax+0x14002cd],dh
   14002cc95:	add    BYTE PTR [rax],al
   14002cc97:	add    BYTE PTR [rip+0x48000000],al        # 0x18802cc9d
   14002cc9d:	add    BYTE PTR [rax],al
   14002cc9f:	add    al,al
   14002cca1:	int    0x2
   14002cca3:	rex add DWORD PTR [rax],eax
   14002cca6:	add    BYTE PTR [rax],al
   14002cca8:	add    eax,0x20000000
   14002ccad:	add    BYTE PTR [rax],al
   14002ccaf:	add    ah,cl
   14002ccb1:	int    0x2
   14002ccb3:	rex add DWORD PTR [rax],eax
   14002ccb6:	add    BYTE PTR [rax],al
   14002ccb8:	add    DWORD PTR [rax],eax
   14002ccba:	add    BYTE PTR [rax],al
   14002ccbc:	add    al,0x0
   14002ccbe:	add    BYTE PTR [rax],al
   14002ccc0:	ror    ch,1
   14002ccc2:	add    al,BYTE PTR [rax+0x1]
   14002ccc5:	add    BYTE PTR [rax],al
   14002ccc7:	add    BYTE PTR [rip+0x4000000],al        # 0x14402cccd
   14002cccd:	add    BYTE PTR [rax],al
   14002cccf:	add    al,ah
   14002ccd1:	int    0x2
   14002ccd3:	rex add DWORD PTR [rax],eax
   14002ccd6:	add    BYTE PTR [rax],al
   14002ccd8:	add    eax,0x17000000
   14002ccdd:	add    DWORD PTR [rax],eax
   14002ccdf:	add    al,dh
   14002cce1:	int    0x2
   14002cce3:	rex add DWORD PTR [rax],eax
   14002cce6:	add    BYTE PTR [rax],al
   14002cce8:	add    eax,0x2000000
   14002cced:	add    BYTE PTR [rax],al
   14002ccef:	add    BYTE PTR [rax],al
   14002ccf1:	(bad)  
   14002ccf2:	add    al,BYTE PTR [rax+0x1]
   14002ccf5:	add    BYTE PTR [rax],al
   14002ccf7:	add    BYTE PTR [rip+0xffffffffd7000000],al        # 0x11702ccfd
   14002ccfd:	add    DWORD PTR [rax],eax
   14002ccff:	add    BYTE PTR [rax],dl
   14002cd01:	(bad)  
   14002cd02:	add    al,BYTE PTR [rax+0x1]
   14002cd05:	add    BYTE PTR [rax],al
   14002cd07:	add    BYTE PTR [rip+0x10000000],al        # 0x15002cd0d
   14002cd0d:	add    BYTE PTR [rax],al
   14002cd0f:	add    BYTE PTR [rax],ah
   14002cd11:	(bad)  
   14002cd12:	add    al,BYTE PTR [rax+0x1]
   14002cd15:	add    BYTE PTR [rax],al
   14002cd17:	add    BYTE PTR [rip+0x48000000],al        # 0x18802cd1d
   14002cd1d:	add    BYTE PTR [rax],al
   14002cd1f:	add    BYTE PTR [rsi+rcx*8],ch
   14002cd22:	add    al,BYTE PTR [rax+0x1]
   14002cd25:	add    BYTE PTR [rax],al
   14002cd27:	add    BYTE PTR [rcx],al
   14002cd29:	add    BYTE PTR [rax],al
   14002cd2b:	add    BYTE PTR [rax+0x0],cl
   14002cd2e:	add    BYTE PTR [rax],al
   14002cd30:	xor    dh,cl
   14002cd32:	add    al,BYTE PTR [rax+0x1]
   14002cd35:	add    BYTE PTR [rax],al
   14002cd37:	add    BYTE PTR [rip+0x1000000],al        # 0x14102cd3d
   14002cd3d:	add    BYTE PTR [rax],al
   14002cd3f:	add    BYTE PTR [rsi+rcx*8],bh
   14002cd42:	add    al,BYTE PTR [rax+0x1]
   14002cd45:	add    BYTE PTR [rax],al
   14002cd47:	add    BYTE PTR [rcx],al
   14002cd49:	add    BYTE PTR [rax],al
   14002cd4b:	add    bh,bh
   14002cd4d:	inc    DWORD PTR [rax]
   14002cd4f:	add    BYTE PTR [rax-0x32],al
   14002cd52:	add    al,BYTE PTR [rax+0x1]
   14002cd55:	add    BYTE PTR [rax],al
   14002cd57:	add    BYTE PTR [rsi],al
   14002cd59:	add    BYTE PTR [rax],al
   14002cd5b:	add    BYTE PTR [rax+0x0],al
	...
   14002cd6d:	add    BYTE PTR [rax],al
   14002cd6f:	add    BYTE PTR [rax],cl
   14002cd71:	add    BYTE PTR [rax],al
   14002cd73:	add    BYTE PTR [rax],al
   14002cd75:	add    BYTE PTR [rax],al
   14002cd77:	add    BYTE PTR [rip+0xf000000],dh        # 0x14f02cd7d
   14002cd7d:	add    BYTE PTR [rax],al
   14002cd7f:	add    BYTE PTR [rcx],dl
   14002cd81:	add    BYTE PTR [rax],al
   14002cd83:	add    BYTE PTR [rax],al
   14002cd85:	add    al,0x0
   14002cd87:	add    BYTE PTR [rcx+rax*1],dh
   14002cd8a:	add    BYTE PTR [rax],al
   14002cd8c:	add    edi,esp
   14002cd8e:	(bad)  
   14002cd8f:	jmp    QWORD PTR [rcx+0x0]
   14002cd92:	ins    BYTE PTR es:[rdi],dx
   14002cd93:	add    BYTE PTR [rsi+0x0],ch
   14002cd96:	jne    0x14002cd98
   14002cd98:	ins    DWORD PTR es:[rdi],dx
   14002cd99:	add    BYTE PTR [rax],al
   14002cd9b:	add    BYTE PTR [rax],al
   14002cd9d:	add    BYTE PTR [rax],al
   14002cd9f:	add    BYTE PTR [rcx+0x0],ah
   14002cda2:	ins    BYTE PTR es:[rdi],dx
   14002cda3:	add    BYTE PTR [rax+0x0],dh
   14002cda6:	push   0x6100
   14002cdab:	add    BYTE PTR [rax],al
   14002cdad:	add    BYTE PTR [rax],al
   14002cdaf:	add    BYTE PTR [rdx+0x0],ah
   14002cdb2:	ins    BYTE PTR es:[rdi],dx
   14002cdb3:	add    BYTE PTR [rcx+0x0],ah
   14002cdb6:	outs   dx,BYTE PTR ds:[rsi]
   14002cdb7:	add    BYTE PTR [rbx+0x0],ch
   14002cdba:	add    BYTE PTR [rax],al
   14002cdbc:	int    0xfe
   14002cdbe:	(bad)  
   14002cdbf:	jmp    QWORD PTR [rbx+0x0]
   14002cdc2:	outs   dx,BYTE PTR ds:[rsi]
   14002cdc3:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002cdc7:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002cdcb:	add    BYTE PTR [rax+rax*1+0x0],ah
   14002cdcf:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002cdd3:	add    BYTE PTR [rdi+0x0],ah
   14002cdd6:	imul   eax,DWORD PTR [rax],0x74
   14002cddc:	add    BYTE PTR [rax],al
   14002cdde:	add    BYTE PTR [rax],al
   14002cde0:	add    BYTE PTR [edx+0x0],dh
   14002cde4:	(bad)  
   14002cde5:	add    BYTE PTR [rax+0x0],dh
   14002cde8:	push   0x0
   14002cded:	add    BYTE PTR [rax],al
   14002cdef:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002cdf3:	add    BYTE PTR [rdi+0x0],dh
   14002cdf6:	add    BYTE PTR gs:[rdx+0x0],dh
   14002cdfa:	add    BYTE PTR [rax],al
   14002cdfc:	add    BYTE PTR [rax],al
   14002cdfe:	add    BYTE PTR [rax],al
   14002ce00:	jo     0x14002ce02
   14002ce02:	jb     0x14002ce04
   14002ce04:	imul   eax,DWORD PTR [rax],0x74006e
   14002ce0a:	add    BYTE PTR [rax],al
   14002ce0c:	add    BYTE PTR [rax],al
   14002ce0e:	add    BYTE PTR [rax],al
   14002ce10:	jo     0x14002ce12
   14002ce12:	jne    0x14002ce14
   14002ce14:	outs   dx,BYTE PTR ds:[rsi]
   14002ce15:	add    BYTE PTR [rbx+0x0],ah
   14002ce18:	je     0x14002ce1a
   14002ce1a:	add    BYTE PTR [rax],al
   14002ce1c:	add    BYTE PTR [rax],al
   14002ce1e:	add    BYTE PTR [rax],al
   14002ce20:	jae    0x14002ce22
   14002ce22:	jo     0x14002ce24
   14002ce24:	(bad)  
   14002ce25:	add    BYTE PTR [rbx+0x0],ah
   14002ce28:	add    BYTE PTR gs:[rax],al
   14002ce2b:	add    BYTE PTR [rbx+0x0],dh
   14002ce2e:	add    BYTE PTR [rax],al
   14002ce30:	jne    0x14002ce32
   14002ce32:	jo     0x14002ce34
   14002ce34:	jo     0x14002ce36
   14002ce36:	add    BYTE PTR gs:[rdx+0x0],dh
   14002ce3a:	add    BYTE PTR [rax],al
   14002ce3c:	ja     0x14002ce3e
   14002ce3e:	add    BYTE PTR [rax],al
   14002ce40:	js     0x14002ce42
   14002ce42:	add    BYTE PTR fs:[rcx+0x0],ch
   14002ce46:	add    BYTE PTR [ecx+0x0],ch
   14002ce4a:	je     0x14002ce4c
   14002ce4c:	add    BYTE PTR [rax],al
   14002ce4e:	add    BYTE PTR [rax],al
   14002ce50:	add    al,0x0
   14002ce52:	add    BYTE PTR [rax],al
   14002ce54:	add    BYTE PTR [rax],al
   14002ce56:	add    BYTE PTR [rax],al
   14002ce58:	add    al,BYTE PTR [rax]
   14002ce5a:	add    BYTE PTR [rax],al
   14002ce5c:	add    BYTE PTR [rax],al
   14002ce5e:	add    BYTE PTR [rax],al
   14002ce60:	add    DWORD PTR [rax],eax
   14002ce62:	add    BYTE PTR [rax],al
   14002ce64:	add    BYTE PTR [rax],al
   14002ce66:	add    BYTE PTR [rax],al
   14002ce68:	and    BYTE PTR [rax],al
	...
   14002ce76:	add    BYTE PTR [rax],al
   14002ce78:	add    DWORD PTR [rax],eax
   14002ce7a:	add    BYTE PTR [rax],al
   14002ce7c:	add    DWORD PTR [rax],eax
	...
   14002ce86:	add    BYTE PTR [rax],al
   14002ce88:	add    al,BYTE PTR [rax]
   14002ce8a:	add    BYTE PTR [rax],al
   14002ce8c:	add    al,0x0
   14002ce8e:	add    BYTE PTR [rax],al
   14002ce90:	or     BYTE PTR [rax],al
   14002ce92:	add    BYTE PTR [rax],al
   14002ce94:	add    BYTE PTR [rax],al
   14002ce96:	add    BYTE PTR [rax],al
   14002ce98:	adc    BYTE PTR [rax],al
   14002ce9a:	add    BYTE PTR [rax],al
   14002ce9c:	add    BYTE PTR [rax],al
   14002ce9e:	add    BYTE PTR [rax],al
   14002cea0:	and    BYTE PTR [rax],al
   14002cea2:	add    BYTE PTR [rax],al
   14002cea4:	add    BYTE PTR [rax],al
   14002cea6:	add    BYTE PTR [rax],al
   14002cea8:	add    BYTE PTR [rax],al
   14002ceab:	add    BYTE PTR [rax],al
   14002cead:	add    BYTE PTR [rax],al
   14002ceaf:	add    BYTE PTR [rax+0x0],al
   14002ceb5:	add    BYTE PTR [rax],al
   14002ceb7:	add    BYTE PTR [rax],al
   14002ceb9:	add    DWORD PTR [rax],eax
   14002cebb:	add    BYTE PTR [rax],al
   14002cebd:	add    BYTE PTR [rax],al
   14002cebf:	add    BYTE PTR [rax],al
   14002cec1:	add    al,BYTE PTR [rax]
   14002cec3:	add    BYTE PTR [rax],al
   14002cec5:	add    BYTE PTR [rax],al
   14002cec7:	add    BYTE PTR [rax],al
   14002cec9:	add    al,0x0
   14002cecb:	add    BYTE PTR [rax],al
   14002cecd:	add    BYTE PTR [rax],al
   14002cecf:	add    BYTE PTR [rax],al
   14002ced1:	or     BYTE PTR [rax],al
   14002ced3:	add    BYTE PTR [rax],al
   14002ced5:	add    BYTE PTR [rax],al
   14002ced7:	add    BYTE PTR [rax],al
   14002ced9:	adc    BYTE PTR [rax],al
   14002cedb:	add    BYTE PTR [rax],al
   14002cedd:	add    BYTE PTR [rax],al
   14002cedf:	add    BYTE PTR [rax],al
   14002cee1:	and    BYTE PTR [rax],al
   14002cee3:	add    BYTE PTR [rax],al
   14002cee5:	add    BYTE PTR [rax],al
   14002cee7:	add    BYTE PTR [rax],al
   14002cee9:	xor    BYTE PTR [rax],al
   14002ceeb:	add    BYTE PTR [rax],al
   14002ceed:	add    BYTE PTR [rax],al
   14002ceef:	add    BYTE PTR [rax],al
   14002cef1:	add    BYTE PTR [rax],al
   14002cef4:	add    BYTE PTR [rax],al
   14002cef6:	add    BYTE PTR [rax],al
   14002cef8:	add    BYTE PTR [rax+0x0],al
   14002cefe:	add    BYTE PTR [rax],al
   14002cf00:	rol    BYTE PTR [rcx],0x0
   14002cf03:	add    BYTE PTR [rax],al
   14002cf05:	add    BYTE PTR [rax],al
   14002cf07:	add    BYTE PTR [rax],al
   14002cf09:	(bad)  
   14002cf0a:	add    BYTE PTR [rax],al
   14002cf0c:	add    BYTE PTR [rax],al
   14002cf0e:	add    BYTE PTR [rax],al
   14002cf10:	add    BYTE PTR [rax],dh
	...
   14002cf22:	add    BYTE PTR [rax],al
   14002cf24:	add    DWORD PTR [rax],eax
   14002cf26:	add    BYTE PTR [rax],al
   14002cf28:	add    al,BYTE PTR [rax]
	...
   14002cf32:	add    BYTE PTR [rax],al
   14002cf34:	add    al,0x0
   14002cf36:	add    BYTE PTR [rax],al
   14002cf38:	add    BYTE PTR [rax],al
   14002cf3a:	add    BYTE PTR [rax],al
   14002cf3c:	adc    BYTE PTR [rax],al
   14002cf3e:	add    BYTE PTR [rax],al
   14002cf40:	add    BYTE PTR [rax],al
   14002cf42:	add    BYTE PTR [rax],al
   14002cf44:	add    DWORD PTR [rax],eax
   14002cf46:	add    BYTE PTR [rax],al
   14002cf48:	add    al,BYTE PTR [rax]
   14002cf4a:	add    BYTE PTR [rax],al
   14002cf4c:	add    al,0x0
   14002cf4e:	add    BYTE PTR [rax],al
   14002cf50:	or     BYTE PTR [rax],al
   14002cf52:	add    BYTE PTR [rax],al
   14002cf54:	adc    BYTE PTR [rax],al
   14002cf56:	add    BYTE PTR [rax],al
   14002cf58:	add    BYTE PTR [rax],al
   14002cf5b:	add    BYTE PTR [rax+0x20000000],al
   14002cf61:	add    BYTE PTR [rax],al
   14002cf63:	add    BYTE PTR [rax],al
   14002cf65:	add    BYTE PTR [rax],al
   14002cf67:	add    BYTE PTR [rcx],al
   14002cf69:	add    BYTE PTR [rax],al
   14002cf6b:	add    BYTE PTR [rcx],al
   14002cf6d:	add    BYTE PTR [rax],al
   14002cf6f:	add    BYTE PTR [rcx],al
   14002cf71:	add    BYTE PTR [rax],al
   14002cf73:	add    BYTE PTR [rdx],al
   14002cf75:	add    BYTE PTR [rax],al
   14002cf77:	add    BYTE PTR [rcx],al
   14002cf79:	add    DWORD PTR [rcx],eax
   14002cf7b:	add    BYTE PTR [rdx],al
   14002cf7d:	add    BYTE PTR [rax],al
   14002cf7f:	add    BYTE PTR [rcx],al
   14002cf81:	add    BYTE PTR [rax],al
   14002cf83:	add    BYTE PTR [rcx],al
   14002cf85:	add    DWORD PTR [rcx],eax
   14002cf87:	add    DWORD PTR [rcx],eax
   14002cf89:	add    BYTE PTR [rcx],al
   14002cf8b:	add    BYTE PTR [rax],al
   14002cf8d:	add    DWORD PTR [rcx],eax
   14002cf8f:	add    DWORD PTR [rax],eax
   14002cf91:	add    BYTE PTR [rax],al
   14002cf93:	add    BYTE PTR [rcx],al
   14002cf95:	add    BYTE PTR [rax],al
   14002cf97:	add    BYTE PTR [rdx],al
	...
   14002cfa1:	pop    rdi
   14002cfa2:	add    eax,DWORD PTR [rax+0x1]
   14002cfa5:	add    BYTE PTR [rax],al
   14002cfa7:	add    ah,dh
   14002cfa9:	push   rcx
   14002cfaa:	add    BYTE PTR [rax+0x1],al
   14002cfad:	add    BYTE PTR [rax],al
   14002cfaf:	add    BYTE PTR [rax+0x79],ch
   14002cfb2:	add    BYTE PTR [rax+0x1],al
   14002cfb5:	add    BYTE PTR [rax],al
   14002cfb7:	add    BYTE PTR [rdx+0x61],ah
   14002cfba:	and    BYTE PTR fs:[rcx+0x6c],ah
   14002cfbe:	ins    BYTE PTR es:[rdi],dx
   14002cfbf:	outs   dx,DWORD PTR ds:[rsi]
   14002cfc0:	movsxd esp,DWORD PTR [rcx+0x74]
   14002cfc3:	imul   ebp,DWORD PTR [rdi+0x6e],0x5f800000
   14002cfca:	add    eax,DWORD PTR [rax+0x1]
   14002cfcd:	add    BYTE PTR [rax],al
   14002cfcf:	add    al,al
   14002cfd1:	push   rdx
   14002cfd2:	add    BYTE PTR [rax+0x1],al
   14002cfd5:	add    BYTE PTR [rax],al
   14002cfd7:	add    BYTE PTR [rax+0x79],ch
   14002cfda:	add    BYTE PTR [rax+0x1],al
   14002cfdd:	add    BYTE PTR [rax],al
   14002cfdf:	add    BYTE PTR [rax],al
   14002cfe1:	(bad)  
   14002cfe2:	add    eax,DWORD PTR [rax+0x1]
   14002cfe5:	add    BYTE PTR [rax],al
   14002cfe7:	add    BYTE PTR [rax+0x52],ah
   14002cfea:	add    BYTE PTR [rax+0x1],al
   14002cfed:	add    BYTE PTR [rax],al
   14002cfef:	add    BYTE PTR [rax+0x79],ch
   14002cff2:	add    BYTE PTR [rax+0x1],al
   14002cff5:	add    BYTE PTR [rax],al
   14002cff7:	add    BYTE PTR [rax+0x1400360],cl
   14002cffd:	add    BYTE PTR [rax],al
   14002cfff:	add    BYTE PTR [rax+0x1400052],dl
   14002d005:	add    BYTE PTR [rax],al
   14002d007:	add    BYTE PTR [rax+0x79],ch
   14002d00a:	add    BYTE PTR [rax+0x1],al
   14002d00d:	add    BYTE PTR [rax],al
   14002d00f:	add    BYTE PTR [rax],dl
   14002d011:	(bad)  
   14002d012:	add    eax,DWORD PTR [rax+0x1]
   14002d015:	add    BYTE PTR [rax],al
   14002d017:	add    al,dh
   14002d019:	push   rdx
   14002d01a:	add    BYTE PTR [rax+0x1],al
   14002d01d:	add    BYTE PTR [rax],al
   14002d01f:	add    BYTE PTR [rax+0x79],ch
   14002d022:	add    BYTE PTR [rax+0x1],al
   14002d025:	add    BYTE PTR [rax],al
   14002d027:	add    BYTE PTR [rax+0x1400361],bl
   14002d02d:	add    BYTE PTR [rax],al
   14002d02f:	add    BYTE PTR [rax+0x1400053],al
   14002d035:	add    BYTE PTR [rax],al
   14002d037:	add    BYTE PTR [rax+0x79],ch
   14002d03a:	add    BYTE PTR [rax+0x1],al
   14002d03d:	add    BYTE PTR [rax],al
   14002d03f:	add    BYTE PTR [rax],bl
   14002d041:	(bad)  
   14002d043:	rex add DWORD PTR [rax],eax
   14002d046:	add    BYTE PTR [rax],al
   14002d048:	and    BYTE PTR [rbx+0x0],dl
   14002d04b:	rex add DWORD PTR [rax],eax
   14002d04e:	add    BYTE PTR [rax],al
   14002d050:	push   0x1400079
   14002d055:	add    BYTE PTR [rax],al
   14002d057:	add    BYTE PTR [rax+0x1400362],ah
   14002d05d:	add    BYTE PTR [rax],al
   14002d05f:	add    BYTE PTR [rax],dh
   14002d061:	push   rdx
   14002d062:	add    BYTE PTR [rax+0x1],al
   14002d065:	add    BYTE PTR [rax],al
   14002d067:	add    BYTE PTR [rsi+rdx*2],bh
   14002d06a:	add    BYTE PTR [rax+0x1],al
   14002d06d:	add    BYTE PTR [rax],al
   14002d06f:	add    BYTE PTR [rdx+0x61],ah
   14002d072:	and    BYTE PTR fs:[rsi+0x75],ah
   14002d076:	outs   dx,BYTE PTR ds:[rsi]
   14002d077:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14002d07b:	outs   dx,BYTE PTR ds:[rsi]
   14002d07c:	and    BYTE PTR [rbx+0x61],ah
   14002d07f:	ins    BYTE PTR es:[rdi],dx
   14002d080:	ins    BYTE PTR es:[rdi],dx
   14002d081:	add    BYTE PTR [rax],al
   14002d083:	add    BYTE PTR [rax],al
   14002d085:	add    BYTE PTR [rax],al
   14002d087:	add    BYTE PTR [rax],ah
   14002d089:	movsxd eax,DWORD PTR [rbx]
   14002d08b:	rex add DWORD PTR [rax],eax
   14002d08e:	add    BYTE PTR [rax],al
   14002d090:	push   rax
   14002d091:	push   rbx
   14002d092:	add    BYTE PTR [rax+0x1],al
   14002d095:	add    BYTE PTR [rax],al
   14002d097:	add    BYTE PTR [rax+0x79],ch
   14002d09a:	add    BYTE PTR [rax+0x1],al
   14002d09d:	add    BYTE PTR [rax],al
   14002d09f:	add    BYTE PTR [rdx+0x65],dh
   14002d0a2:	addr32 gs js 0x14002d105
   14002d0a6:	gs jb  0x14002d11b
   14002d0a9:	outs   dx,DWORD PTR ds:[rsi]
   14002d0aa:	jb     0x14002d0d4
   14002d0ac:	gs jb  0x14002d121
   14002d0af:	outs   dx,DWORD PTR ds:[rsi]
   14002d0b0:	jb     0x14002d111
   14002d0b2:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14002d0b5:	ins    BYTE PTR es:[rdi],dx
   14002d0b6:	(bad)  
   14002d0b7:	je     0x14002d11e
   14002d0b9:	sub    DWORD PTR [rdx],edi
   14002d0bb:	and    BYTE PTR [rax+rbp*2+0x65],dl
   14002d0bf:	and    BYTE PTR [rbp+0x78],ah
   14002d0c2:	jo     0x14002d136
   14002d0c4:	gs jae 0x14002d13a
   14002d0c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002d0ce:	je     0x14002d131
   14002d0d0:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   14002d0d7:	and    BYTE PTR [rcx+0x6e],ch
   14002d0da:	jbe    0x14002d13d
   14002d0dc:	ins    BYTE PTR es:[rdi],dx
   14002d0dd:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x616c6c6f
   14002d0e5:	je     0x14002d150
   14002d0e7:	outs   dx,BYTE PTR ds:[rsi]
   14002d0e8:	and    BYTE PTR [ebp+0x6c],ah
   14002d0ec:	gs ins DWORD PTR es:[rdi],dx
   14002d0ee:	outs   dx,BYTE PTR gs:[rsi]
   14002d0f0:	je     0x14002d112
   14002d0f2:	outs   dx,BYTE PTR ds:[rsi]
   14002d0f3:	(bad)  
   14002d0f4:	ins    DWORD PTR es:[rdi],dx
   14002d0f5:	gs add BYTE PTR cs:[rax],al
   14002d0f9:	add    BYTE PTR [rax],al
   14002d0fb:	add    BYTE PTR [rax],al
   14002d0fd:	add    BYTE PTR [rax],al
   14002d0ff:	add    BYTE PTR [rdx+0x65],dh
   14002d102:	addr32 gs js 0x14002d165
   14002d106:	gs jb  0x14002d17b
   14002d109:	outs   dx,DWORD PTR ds:[rsi]
   14002d10a:	jb     0x14002d134
   14002d10c:	gs jb  0x14002d181
   14002d10f:	outs   dx,DWORD PTR ds:[rsi]
   14002d110:	jb     0x14002d171
   14002d112:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
   14002d116:	sub    DWORD PTR gs:[rdx],edi
   14002d119:	and    BYTE PTR [rax+rbp*2+0x65],dl
   14002d11d:	and    BYTE PTR [rbp+0x78],ah
   14002d120:	jo     0x14002d194
   14002d122:	gs jae 0x14002d198
   14002d125:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002d12c:	je     0x14002d18f
   14002d12e:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   14002d135:	and    BYTE PTR [rcx+0x6e],ch
   14002d138:	jbe    0x14002d19b
   14002d13a:	ins    BYTE PTR es:[rdi],dx
   14002d13b:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x61726168
   14002d143:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   14002d147:	and    BYTE PTR [rbx+0x6c],ah
   14002d14a:	(bad)  
   14002d14b:	jae    0x14002d1c0
   14002d14d:	and    BYTE PTR [rsi+0x61],ch
   14002d150:	ins    DWORD PTR es:[rdi],dx
   14002d151:	gs add BYTE PTR cs:[rax],al
	...
   14002d15d:	add    BYTE PTR [rax],al
   14002d15f:	add    BYTE PTR [rdx+0x65],dh
   14002d162:	addr32 gs js 0x14002d1c5
   14002d166:	gs jb  0x14002d1db
   14002d169:	outs   dx,DWORD PTR ds:[rsi]
   14002d16a:	jb     0x14002d194
   14002d16c:	gs jb  0x14002d1e1
   14002d16f:	outs   dx,DWORD PTR ds:[rsi]
   14002d170:	jb     0x14002d1d1
   14002d172:	gs jae 0x14002d1d8
   14002d175:	(bad)  
   14002d176:	jo     0x14002d1dd
   14002d178:	sub    DWORD PTR [rdx],edi
   14002d17a:	and    BYTE PTR [rax+rbp*2+0x65],dl
   14002d17e:	and    BYTE PTR [rbp+0x78],ah
   14002d181:	jo     0x14002d1f5
   14002d183:	gs jae 0x14002d1f9
   14002d186:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002d18d:	je     0x14002d1f0
   14002d18f:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   14002d196:	and    BYTE PTR [rcx+0x6e],ch
   14002d199:	jbe    0x14002d1fc
   14002d19b:	ins    BYTE PTR es:[rdi],dx
   14002d19c:	imul   esp,DWORD PTR [rax+riz*1+0x65],0x70616373
   14002d1a4:	gs and BYTE PTR fs:[rbx+0x68],ah
   14002d1a9:	(bad)  
   14002d1aa:	jb     0x14002d20d
   14002d1ac:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   14002d1b0:	sub    al,0x20
   14002d1b2:	outs   dx,DWORD PTR ds:[rsi]
   14002d1b3:	jb     0x14002d1d5
   14002d1b5:	(bad)  
   14002d1b6:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   14002d1ba:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x73652067
   14002d1c2:	movsxd esp,DWORD PTR [rcx+0x70]
   14002d1c5:	gs add BYTE PTR cs:[rax],al
   14002d1c9:	add    BYTE PTR [rax],al
   14002d1cb:	add    BYTE PTR [rax],al
   14002d1cd:	add    BYTE PTR [rax],al
   14002d1cf:	add    BYTE PTR [rdx+0x65],dh
   14002d1d2:	addr32 gs js 0x14002d235
   14002d1d6:	gs jb  0x14002d24b
   14002d1d9:	outs   dx,DWORD PTR ds:[rsi]
   14002d1da:	jb     0x14002d204
   14002d1dc:	gs jb  0x14002d251
   14002d1df:	outs   dx,DWORD PTR ds:[rsi]
   14002d1e0:	jb     0x14002d241
   14002d1e2:	(bad)  
   14002d1e4:	movsxd ebp,DWORD PTR [rbx+0x72]
   14002d1e7:	sub    WORD PTR gs:[rdx],di
   14002d1eb:	and    BYTE PTR [rax+rbp*2+0x65],dl
   14002d1ef:	and    BYTE PTR [rbp+0x78],ah
   14002d1f2:	jo     0x14002d266
   14002d1f4:	gs jae 0x14002d26a
   14002d1f7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002d1fe:	je     0x14002d261
   14002d200:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   14002d207:	and    BYTE PTR [rcx+0x6e],ch
   14002d20a:	jbe    0x14002d26d
   14002d20c:	ins    BYTE PTR es:[rdi],dx
   14002d20d:	imul   esp,DWORD PTR [rax+riz*1+0x62],0x206b6361
   14002d215:	jb     0x14002d27c
   14002d217:	data16 gs jb 0x14002d280
   14002d21b:	outs   dx,BYTE PTR ds:[rsi]
   14002d21c:	movsxd esp,DWORD PTR [rbp+0x2e]
   14002d21f:	add    BYTE PTR [rdx+0x65],dh
   14002d222:	addr32 gs js 0x14002d285
   14002d226:	gs jb  0x14002d29b
   14002d229:	outs   dx,DWORD PTR ds:[rsi]
   14002d22a:	jb     0x14002d254
   14002d22c:	gs jb  0x14002d2a1
   14002d22f:	outs   dx,DWORD PTR ds:[rsi]
   14002d230:	jb     0x14002d291
   14002d232:	(bad)  
   14002d234:	(bad)  
   14002d235:	movsxd ebp,DWORD PTR [rbx+0x29]
   14002d238:	cmp    ah,BYTE PTR [rax]
   14002d23a:	push   rsp
   14002d23b:	push   0x78652065
   14002d240:	jo     0x14002d2b4
   14002d242:	gs jae 0x14002d2b8
   14002d245:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002d24c:	je     0x14002d2af
   14002d24e:	imul   ebp,DWORD PTR [rsi+0x65],0x696d2064
   14002d255:	jae    0x14002d2c4
   14002d257:	(bad)  
   14002d258:	je     0x14002d2bd
   14002d25a:	push   0x5b206465
   14002d25f:	and    BYTE PTR [rcx+0x6e],ah
   14002d262:	and    BYTE PTR fs:[rbp+0x2e],bl
	...
   14002d26e:	add    BYTE PTR [rax],al
   14002d270:	jb     0x14002d2d7
   14002d272:	addr32 gs js 0x14002d2d5
   14002d276:	gs jb  0x14002d2eb
   14002d279:	outs   dx,DWORD PTR ds:[rsi]
   14002d27a:	jb     0x14002d2a4
   14002d27c:	gs jb  0x14002d2f1
   14002d27f:	outs   dx,DWORD PTR ds:[rsi]
   14002d280:	jb     0x14002d2e1
   14002d282:	jo     0x14002d2e5
   14002d284:	jb     0x14002d2eb
   14002d286:	outs   dx,BYTE PTR ds:[rsi]
   14002d287:	sub    DWORD PTR [rdx],edi
   14002d289:	and    BYTE PTR [rax+rbp*2+0x65],dl
   14002d28d:	and    BYTE PTR [rbp+0x78],ah
   14002d290:	jo     0x14002d304
   14002d292:	gs jae 0x14002d308
   14002d295:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002d29c:	je     0x14002d2ff
   14002d29e:	imul   ebp,DWORD PTR [rsi+0x65],0x696d2064
   14002d2a5:	jae    0x14002d314
   14002d2a7:	(bad)  
   14002d2a8:	je     0x14002d30d
   14002d2aa:	push   0x28206465
   14002d2af:	and    BYTE PTR [rcx+0x6e],ah
   14002d2b2:	and    BYTE PTR fs:[rcx],ch
   14002d2b5:	add    BYTE PTR cs:[rax],al
	...
   14002d2c0:	jb     0x14002d327
   14002d2c2:	addr32 gs js 0x14002d325
   14002d2c6:	gs jb  0x14002d33b
   14002d2c9:	outs   dx,DWORD PTR ds:[rsi]
   14002d2ca:	jb     0x14002d2f4
   14002d2cc:	gs jb  0x14002d341
   14002d2cf:	outs   dx,DWORD PTR ds:[rsi]
   14002d2d0:	jb     0x14002d331
   14002d2d2:	(bad)  
   14002d2d4:	(bad)  
   14002d2d5:	movsxd esp,DWORD PTR [rbp+0x29]
   14002d2d8:	cmp    ah,BYTE PTR [rax]
   14002d2da:	push   rsp
   14002d2db:	push   0x78652065
   14002d2e0:	jo     0x14002d354
   14002d2e2:	gs jae 0x14002d358
   14002d2e5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002d2ec:	je     0x14002d34f
   14002d2ee:	imul   ebp,DWORD PTR [rsi+0x65],0x696d2064
   14002d2f5:	jae    0x14002d364
   14002d2f7:	(bad)  
   14002d2f8:	je     0x14002d35d
   14002d2fa:	push   0x7b206465
   14002d2ff:	and    BYTE PTR [rcx+0x6e],ah
   14002d302:	and    BYTE PTR fs:[rbp+0x2e],bh
	...
   14002d30e:	add    BYTE PTR [rax],al
   14002d310:	jb     0x14002d377
   14002d312:	addr32 gs js 0x14002d375
   14002d316:	gs jb  0x14002d38b
   14002d319:	outs   dx,DWORD PTR ds:[rsi]
   14002d31a:	jb     0x14002d344
   14002d31c:	gs jb  0x14002d391
   14002d31f:	outs   dx,DWORD PTR ds:[rsi]
   14002d320:	jb     0x14002d381
   14002d322:	(bad)
   14002d327:	(bad)  
   14002d328:	movsxd esp,DWORD PTR [rbp+0x29]
   14002d32b:	cmp    ah,BYTE PTR [rax]
   14002d32d:	push   rsp
   14002d32e:	push   0x78652065
   14002d333:	jo     0x14002d3a7
   14002d335:	gs jae 0x14002d3ab
   14002d338:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002d33f:	je     0x14002d3a2
   14002d341:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   14002d348:	and    BYTE PTR [rcx+0x6e],ch
   14002d34b:	jbe    0x14002d3ae
   14002d34d:	ins    BYTE PTR es:[rdi],dx
   14002d34e:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x65676e61
   14002d356:	and    BYTE PTR [rcx+0x6e],ch
   14002d359:	and    BYTE PTR [rcx+0x20],ah
   14002d35c:	jnp    0x14002d37e
   14002d35e:	gs js  0x14002d3d1
   14002d361:	jb     0x14002d3c8
   14002d363:	jae    0x14002d3d8
   14002d365:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e7d20
   14002d36c:	add    BYTE PTR [rax],al
   14002d36e:	add    BYTE PTR [rax],al
   14002d370:	jb     0x14002d3d7
   14002d372:	addr32 gs js 0x14002d3d5
   14002d376:	gs jb  0x14002d3eb
   14002d379:	outs   dx,DWORD PTR ds:[rsi]
   14002d37a:	jb     0x14002d3a4
   14002d37c:	gs jb  0x14002d3f1
   14002d37f:	outs   dx,DWORD PTR ds:[rsi]
   14002d380:	jb     0x14002d3e1
   14002d382:	jb     0x14002d3e5
   14002d384:	outs   dx,BYTE PTR ds:[rsi]
   14002d385:	sub    DWORD PTR gs:[edx],edi
   14002d389:	and    BYTE PTR [rax+rbp*2+0x65],dl
   14002d38d:	and    BYTE PTR [rbp+0x78],ah
   14002d390:	jo     0x14002d404
   14002d392:	gs jae 0x14002d408
   14002d395:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002d39c:	je     0x14002d3ff
   14002d39e:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   14002d3a5:	and    BYTE PTR [rcx+0x6e],ch
   14002d3a8:	jbe    0x14002d40b
   14002d3aa:	ins    BYTE PTR es:[rdi],dx
   14002d3ab:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x61726168
   14002d3b3:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   14002d3b7:	and    BYTE PTR [rdx+0x61],dh
   14002d3ba:	outs   dx,BYTE PTR ds:[rsi]
   14002d3bb:	addr32 gs sub al,0x20
   14002d3bf:	jae    0x14002d436
   14002d3c1:	movsxd ebp,DWORD PTR [rax+0x20]
   14002d3c4:	(bad)  
   14002d3c5:	jae    0x14002d3e7
   14002d3c7:	pop    rbx
   14002d3c8:	(bad)  
   14002d3c9:	sub    eax,0x69205d61
   14002d3ce:	outs   dx,BYTE PTR ds:[rsi]
   14002d3cf:	and    BYTE PTR [rbp+0x6f],ch
   14002d3d2:	jae    0x14002d448
   14002d3d4:	and    BYTE PTR [rbp+0x6e],ah
   14002d3d7:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002d3da:	imul   ebp,DWORD PTR [rsi+0x67],0x72002e73
   14002d3e1:	gs addr32 gs js 0x14002d445
   14002d3e6:	gs jb  0x14002d45b
   14002d3e9:	outs   dx,DWORD PTR ds:[rsi]
   14002d3ea:	jb     0x14002d414
   14002d3ec:	gs jb  0x14002d461
   14002d3ef:	outs   dx,DWORD PTR ds:[rsi]
   14002d3f0:	jb     0x14002d451
   14002d3f2:	jae    0x14002d464
   14002d3f4:	(bad)  
   14002d3f5:	movsxd esp,DWORD PTR [rbp+0x29]
   14002d3f8:	cmp    ah,BYTE PTR [rax]
   14002d3fa:	push   rsp
   14002d3fb:	push   0x20657265
   14002d400:	ja     0x14002d463
   14002d402:	jae    0x14002d424
   14002d404:	imul   ebp,DWORD PTR [rsi+0x73],0x69666675
   14002d40b:	movsxd ebp,DWORD PTR [rcx+0x65]
   14002d40e:	outs   dx,BYTE PTR ds:[rsi]
   14002d40f:	je     0x14002d431
   14002d411:	ins    DWORD PTR es:[rdi],dx
   14002d412:	gs ins DWORD PTR es:[rdi],dx
   14002d414:	outs   dx,DWORD PTR ds:[rsi]
   14002d415:	jb     0x14002d490
   14002d417:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14002d41b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002d41e:	jbe    0x14002d485
   14002d420:	jb     0x14002d496
   14002d422:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14002d426:	and    BYTE PTR [rbp+0x78],ah
   14002d429:	jo     0x14002d49d
   14002d42b:	gs jae 0x14002d4a1
   14002d42e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746e6920
   14002d435:	outs   dx,DWORD PTR ds:[rsi]
   14002d436:	and    BYTE PTR [rcx+0x20],ah
   14002d439:	imul   bp,WORD PTR [rsi+0x69],0x6574
   14002d43f:	and    BYTE PTR [rbx+0x74],dh
   14002d442:	(bad)  
   14002d443:	je     0x14002d4aa
   14002d445:	and    BYTE PTR [rbp+0x61],ch
   14002d448:	movsxd ebp,DWORD PTR [rax+0x69]
   14002d44b:	outs   dx,BYTE PTR ds:[rsi]
   14002d44c:	gs add BYTE PTR cs:[rax],al
   14002d450:	jb     0x14002d4b7
   14002d452:	addr32 gs js 0x14002d4b5
   14002d456:	gs jb  0x14002d4cb
   14002d459:	outs   dx,DWORD PTR ds:[rsi]
   14002d45a:	jb     0x14002d484
   14002d45c:	gs jb  0x14002d4d1
   14002d45f:	outs   dx,DWORD PTR ds:[rsi]
   14002d460:	jb     0x14002d4c1
   14002d462:	(bad)
   14002d467:	jo     0x14002d4ce
   14002d469:	(bad)  
   14002d46a:	je     0x14002d495
   14002d46c:	cmp    ah,BYTE PTR [rax]
   14002d46e:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14002d470:	and    BYTE PTR gs:[rdi+0x66],ch
   14002d474:	and    BYTE PTR [rdx],ch
   14002d476:	(bad)  
   14002d477:	sub    edi,DWORD PTR [rbx+0x20]
   14002d47a:	ja     0x14002d4dd
   14002d47c:	jae    0x14002d49e
   14002d47e:	outs   dx,BYTE PTR ds:[rsi]
   14002d47f:	outs   dx,DWORD PTR ds:[rsi]
   14002d480:	je     0x14002d4a2
   14002d482:	jo     0x14002d4f6
   14002d484:	movsxd esp,DWORD PTR gs:[rbp+0x64]
   14002d488:	gs and BYTE PTR fs:[rdx+0x79],ah
   14002d48d:	and    BYTE PTR [rcx+0x20],ah
   14002d490:	jbe    0x14002d4f3
   14002d492:	ins    BYTE PTR es:[rdi],dx
   14002d493:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x6c756765
   14002d49b:	(bad)  
   14002d49c:	jb     0x14002d4be
   14002d49e:	gs js  0x14002d511
   14002d4a1:	jb     0x14002d508
   14002d4a3:	jae    0x14002d518
   14002d4a5:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e
   14002d4ac:	add    BYTE PTR [rax],al
   14002d4ae:	add    BYTE PTR [rax],al
   14002d4b0:	jb     0x14002d517
   14002d4b2:	addr32 gs js 0x14002d515
   14002d4b6:	gs jb  0x14002d52b
   14002d4b9:	outs   dx,DWORD PTR ds:[rsi]
   14002d4ba:	jb     0x14002d4e4
   14002d4bc:	gs jb  0x14002d531
   14002d4bf:	outs   dx,DWORD PTR ds:[rsi]
   14002d4c0:	jb     0x14002d521
   14002d4c2:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002d4c5:	jo     0x14002d533
   14002d4c7:	gs js  0x14002d533
   14002d4ca:	je     0x14002d545
   14002d4cc:	sub    DWORD PTR [rdx],edi
   14002d4ce:	and    BYTE PTR [rax+rbp*2+0x65],dl
   14002d4d2:	and    BYTE PTR [rbx+0x6f],ah
   14002d4d5:	ins    DWORD PTR es:[rdi],dx
   14002d4d6:	jo     0x14002d544
   14002d4d8:	gs js  0x14002d544
   14002d4db:	je     0x14002d556
   14002d4dd:	and    BYTE PTR [rdi+0x66],ch
   14002d4e0:	and    BYTE PTR [rcx+0x6e],ah
   14002d4e3:	and    BYTE PTR [rcx+0x74],ah
   14002d4e6:	je     0x14002d54d
   14002d4e8:	ins    DWORD PTR es:[rdi],dx
   14002d4e9:	jo     0x14002d55f
   14002d4eb:	gs and BYTE PTR fs:[rbp+0x61],ch
   14002d4f0:	je     0x14002d555
   14002d4f2:	push   0x61676120
   14002d4f7:	imul   ebp,DWORD PTR [rsi+0x73],0x20612074
   14002d4fe:	jb     0x14002d565
   14002d500:	addr32 jne 0x14002d56f
   14002d503:	(bad)  
   14002d504:	jb     0x14002d526
   14002d506:	gs js  0x14002d579
   14002d509:	jb     0x14002d570
   14002d50b:	jae    0x14002d580
   14002d50d:	imul   ebp,DWORD PTR [rdi+0x6e],0x63786520
   14002d514:	gs gs fs gs and BYTE PTR fs:[rcx+0x20],ah
   14002d51c:	jo     0x14002d590
   14002d51e:	gs sub eax,0x20746573
   14002d524:	ins    BYTE PTR es:[rdi],dx
   14002d525:	gs jbe 0x14002d58d
   14002d528:	ins    BYTE PTR es:[rdi],dx
   14002d529:	add    BYTE PTR cs:[rax],al
   14002d52c:	add    BYTE PTR [rax],al
   14002d52e:	add    BYTE PTR [rax],al
   14002d530:	jb     0x14002d597
   14002d532:	addr32 gs js 0x14002d595
   14002d536:	gs jb  0x14002d5ab
   14002d539:	outs   dx,DWORD PTR ds:[rsi]
   14002d53a:	jb     0x14002d564
   14002d53c:	gs jb  0x14002d5b1
   14002d53f:	outs   dx,DWORD PTR ds:[rsi]
   14002d540:	jb     0x14002d5a1
   14002d542:	jae    0x14002d5b8
   14002d544:	(bad)  
   14002d545:	movsxd ebp,DWORD PTR [rbx+0x29]
   14002d548:	cmp    ah,BYTE PTR [rax]
   14002d54a:	push   rsp
   14002d54b:	push   0x20657265
   14002d550:	ja     0x14002d5b3
   14002d552:	jae    0x14002d574
   14002d554:	imul   ebp,DWORD PTR [rsi+0x73],0x69666675
   14002d55b:	movsxd ebp,DWORD PTR [rcx+0x65]
   14002d55e:	outs   dx,BYTE PTR ds:[rsi]
   14002d55f:	je     0x14002d581
   14002d561:	ins    DWORD PTR es:[rdi],dx
   14002d562:	gs ins DWORD PTR es:[rdi],dx
   14002d564:	outs   dx,DWORD PTR ds:[rsi]
   14002d565:	jb     0x14002d5e0
   14002d567:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14002d56b:	fs gs je 0x14002d5d4
   14002d56f:	jb     0x14002d5de
   14002d571:	imul   ebp,DWORD PTR [rsi+0x65],0x65687720
   14002d578:	je     0x14002d5e2
   14002d57a:	gs jb  0x14002d59d
   14002d57d:	je     0x14002d5e7
   14002d57f:	and    BYTE PTR gs:[rdx+0x65],dh
   14002d583:	addr32 jne 0x14002d5f2
   14002d586:	(bad)  
   14002d587:	jb     0x14002d5a9
   14002d589:	gs js  0x14002d5fc
   14002d58c:	jb     0x14002d5f3
   14002d58e:	jae    0x14002d603
   14002d590:	imul   ebp,DWORD PTR [rdi+0x6e],0x756f6320
   14002d597:	ins    BYTE PTR es:[rdi],dx
   14002d598:	and    BYTE PTR fs:[rbp+0x61],ch
   14002d59c:	je     0x14002d601
   14002d59e:	push   0x65687420
   14002d5a3:	and    BYTE PTR [rbx+0x70],dh
   14002d5a6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14002d5aa:	imul   esp,DWORD PTR [rbp+0x64],0x61686320
   14002d5b1:	jb     0x14002d614
   14002d5b3:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   14002d5b7:	and    BYTE PTR [rbx+0x65],dh
   14002d5ba:	jno    0x14002d631
   14002d5bc:	outs   dx,BYTE PTR gs:[rsi]
   14002d5be:	movsxd esp,DWORD PTR [rbp+0x2e]
   14002d5c1:	add    BYTE PTR [rax],al
   14002d5c3:	add    BYTE PTR [rax],al
   14002d5c5:	add    BYTE PTR [rax],al
   14002d5c7:	add    BYTE PTR [rdx+0x65],dh
   14002d5ca:	addr32 gs js 0x14002d62d
   14002d5ce:	gs jb  0x14002d643
   14002d5d1:	outs   dx,DWORD PTR ds:[rsi]
   14002d5d2:	jb     0x14002d5fc
   14002d5d4:	gs jb  0x14002d649
   14002d5d7:	outs   dx,DWORD PTR ds:[rsi]
   14002d5d8:	jb     0x14002d639
   14002d5da:	jo     0x14002d63d
   14002d5dc:	jb     0x14002d651
   14002d5de:	sub    DWORD PTR gs:[rax],eax
   14002d5e1:	add    BYTE PTR [rax],al
   14002d5e3:	add    BYTE PTR [rax],al
   14002d5e5:	add    BYTE PTR [rax],al
   14002d5e7:	add    BYTE PTR [rdx+0x65],dh
   14002d5ea:	addr32 gs js 0x14002d64d
   14002d5ee:	gs jb  0x14002d663
   14002d5f1:	outs   dx,DWORD PTR ds:[rsi]
   14002d5f2:	jb     0x14002d61c
   14002d5f4:	gs jb  0x14002d669
   14002d5f7:	outs   dx,DWORD PTR ds:[rsi]
   14002d5f8:	jb     0x14002d659
   14002d5fa:	jae    0x14002d675
   14002d5fc:	outs   dx,BYTE PTR ds:[rsi]
   14002d5fd:	je     0x14002d660
   14002d5ff:	js     0x14002d62a
   14002d601:	add    BYTE PTR [rax],al
   14002d603:	add    BYTE PTR [rax],al
   14002d605:	add    BYTE PTR [rax],al
   14002d607:	add    BYTE PTR [rdx+0x65],dh
   14002d60a:	addr32 gs js 0x14002d66d
   14002d60e:	gs jb  0x14002d683
   14002d611:	outs   dx,DWORD PTR ds:[rsi]
   14002d612:	jb     0x14002d614
	...
   14002d620:	add    eax,0x0
   14002d625:	add    BYTE PTR [rax],al
   14002d627:	add    al,al
   14002d629:	fild   WORD PTR [rdx]
   14002d62b:	rex add DWORD PTR [rax],eax
   14002d62e:	add    BYTE PTR [rax],al
   14002d630:	mov    bh,0x0
   14002d632:	add    BYTE PTR [rax],al
   14002d634:	add    BYTE PTR [rax],al
   14002d636:	add    BYTE PTR [rax],al
   14002d638:	fcomp  st(7)
   14002d63a:	add    al,BYTE PTR [rax+0x1]
   14002d63d:	add    BYTE PTR [rax],al
   14002d63f:	add    BYTE PTR [rax+rax*1],dl
   14002d642:	add    BYTE PTR [rax],al
   14002d644:	add    BYTE PTR [rax],al
   14002d646:	add    BYTE PTR [rax],al
   14002d648:	call   0x14142d92c
   14002d64d:	add    BYTE PTR [rax],al
   14002d64f:	add    BYTE PTR [rdi+0x0],ch
   14002d652:	add    BYTE PTR [rax],al
   14002d654:	add    BYTE PTR [rax],al
   14002d656:	add    BYTE PTR [rax],al
   14002d658:	clc    
   14002d659:	fild   WORD PTR [rdx]
   14002d65b:	rex add DWORD PTR [rax],eax
   14002d65e:	add    BYTE PTR [rax],al
   14002d660:	stos   BYTE PTR es:[rdi],al
   14002d661:	add    BYTE PTR [rax],al
   14002d663:	add    BYTE PTR [rax],al
   14002d665:	add    BYTE PTR [rax],al
   14002d667:	add    BYTE PTR [rax],dl
   14002d669:	loopne 0x14002d66d
   14002d66b:	rex add DWORD PTR [rax],eax
   14002d66e:	add    BYTE PTR [rax],al
   14002d670:	mov    es,WORD PTR [rax]
   14002d672:	add    BYTE PTR [rax],al
   14002d674:	add    BYTE PTR [rax],al
   14002d676:	add    BYTE PTR [rax],al
   14002d678:	adc    al,ah
   14002d67a:	add    al,BYTE PTR [rax+0x1]
   14002d67d:	add    BYTE PTR [rax],al
   14002d67f:	add    BYTE PTR [rdx+0x0],dl
   14002d682:	add    BYTE PTR [rax],al
   14002d684:	add    BYTE PTR [rax],al
   14002d686:	add    BYTE PTR [rax],al
   14002d688:	rcr    bh,0x2
   14002d68b:	rex add DWORD PTR [rax],eax
   14002d68e:	add    BYTE PTR [rax],al
   14002d690:	repz add eax,DWORD PTR [rax]
   14002d693:	add    BYTE PTR [rax],al
   14002d695:	add    BYTE PTR [rax],al
   14002d697:	add    BYTE PTR [rax],ch
   14002d699:	loopne 0x14002d69d
   14002d69b:	rex add DWORD PTR [rax],eax
   14002d69e:	add    BYTE PTR [rax],al
   14002d6a0:	hlt    
   14002d6a1:	add    eax,DWORD PTR [rax]
   14002d6a3:	add    BYTE PTR [rax],al
   14002d6a5:	add    BYTE PTR [rax],al
   14002d6a7:	add    BYTE PTR [rax],ch
   14002d6a9:	loopne 0x14002d6ad
   14002d6ab:	rex add DWORD PTR [rax],eax
   14002d6ae:	add    BYTE PTR [rax],al
   14002d6b0:	cmc    
   14002d6b1:	add    eax,DWORD PTR [rax]
   14002d6b3:	add    BYTE PTR [rax],al
   14002d6b5:	add    BYTE PTR [rax],al
   14002d6b7:	add    BYTE PTR [rax],ch
   14002d6b9:	loopne 0x14002d6bd
   14002d6bb:	rex add DWORD PTR [rax],eax
   14002d6be:	add    BYTE PTR [rax],al
   14002d6c0:	adc    BYTE PTR [rax],al
   14002d6c2:	add    BYTE PTR [rax],al
   14002d6c4:	add    BYTE PTR [rax],al
   14002d6c6:	add    BYTE PTR [rax],al
   14002d6c8:	rcr    bh,0x2
   14002d6cb:	rex add DWORD PTR [rax],eax
   14002d6ce:	add    BYTE PTR [rax],al
   14002d6d0:	(bad)  
   14002d6d1:	add    BYTE PTR [rax],al
   14002d6d3:	add    BYTE PTR [rax],al
   14002d6d5:	add    BYTE PTR [rax],al
   14002d6d7:	add    al,ch
   14002d6d9:	fild   WORD PTR [rdx]
   14002d6db:	rex add DWORD PTR [rax],eax
   14002d6de:	add    BYTE PTR [rax],al
   14002d6e0:	or     DWORD PTR fs:[rax],eax
   14002d6e3:	add    BYTE PTR [rax],al
   14002d6e5:	add    BYTE PTR [rax],al
   14002d6e7:	add    BYTE PTR [rax],dl
   14002d6e9:	loopne 0x14002d6ed
   14002d6eb:	rex add DWORD PTR [rax],eax
   14002d6ee:	add    BYTE PTR [rax],al
   14002d6f0:	xchg   ecx,eax
   14002d6f1:	add    BYTE PTR [rax],al
   14002d6f3:	add    BYTE PTR [rax],al
   14002d6f5:	add    BYTE PTR [rax],al
   14002d6f7:	add    BYTE PTR [rax],bh
   14002d6f9:	loopne 0x14002d6fd
   14002d6fb:	rex add DWORD PTR [rax],eax
   14002d6fe:	add    BYTE PTR [rax],al
   14002d700:	or     eax,DWORD PTR [rcx]
   14002d702:	add    BYTE PTR [rax],al
   14002d704:	add    BYTE PTR [rax],al
   14002d706:	add    BYTE PTR [rax],al
   14002d708:	push   rax
   14002d709:	loopne 0x14002d70d
   14002d70b:	rex add DWORD PTR [rax],eax
   14002d70e:	add    BYTE PTR [rax],al
   14002d710:	jo     0x14002d712
   14002d712:	add    BYTE PTR [rax],al
   14002d714:	add    BYTE PTR [rax],al
   14002d716:	add    BYTE PTR [rax],al
   14002d718:	push   0x14002e0
   14002d71d:	add    BYTE PTR [rax],al
   14002d71f:	add    BYTE PTR [rax+0x0],dl
   14002d722:	add    BYTE PTR [rax],al
   14002d724:	add    BYTE PTR [rax],al
   14002d726:	add    BYTE PTR [rax],al
   14002d728:	fcomp  st(7)
   14002d72a:	add    al,BYTE PTR [rax+0x1]
   14002d72d:	add    BYTE PTR [rax],al
   14002d72f:	add    BYTE PTR [rdx],al
   14002d731:	add    BYTE PTR [rax],al
   14002d733:	add    BYTE PTR [rax],al
   14002d735:	add    BYTE PTR [rax],al
   14002d737:	add    BYTE PTR [rax+0x14002e0],al
   14002d73d:	add    BYTE PTR [rax],al
   14002d73f:	add    BYTE PTR [rdi],ah
   14002d741:	add    BYTE PTR [rax],al
   14002d743:	add    BYTE PTR [rax],al
   14002d745:	add    BYTE PTR [rax],al
   14002d747:	add    BYTE PTR [rax-0x20],ch
   14002d74a:	add    al,BYTE PTR [rax+0x1]
   14002d74d:	add    BYTE PTR [rax],al
   14002d74f:	add    BYTE PTR [rax+rax*1],cl
   14002d752:	add    BYTE PTR [rax],al
   14002d754:	add    BYTE PTR [rax],al
   14002d756:	add    BYTE PTR [rax],al
   14002d758:	rcr    bh,0x2
   14002d75b:	rex add DWORD PTR [rax],eax
   14002d75e:	add    BYTE PTR [rax],al
   14002d760:	sldt   WORD PTR [rax]
   14002d763:	add    BYTE PTR [rax],al
   14002d765:	add    BYTE PTR [rax],al
   14002d767:	add    al,ch
   14002d769:	fild   WORD PTR [rdx]
   14002d76b:	rex add DWORD PTR [rax],eax
   14002d76e:	add    BYTE PTR [rax],al
   14002d770:	add    DWORD PTR [rax],eax
   14002d772:	add    BYTE PTR [rax],al
   14002d774:	add    BYTE PTR [rax],al
   14002d776:	add    BYTE PTR [rax],al
   14002d778:	movabs al,ds:0x6000000014002e0
   14002d781:	add    BYTE PTR [rax],al
   14002d783:	add    BYTE PTR [rax],al
   14002d785:	add    BYTE PTR [rax],al
   14002d787:	add    BYTE PTR [rax-0x20],dl
   14002d78a:	add    al,BYTE PTR [rax+0x1]
   14002d78d:	add    BYTE PTR [rax],al
   14002d78f:	add    BYTE PTR [rbx+0x0],bh
   14002d792:	add    BYTE PTR [rax],al
   14002d794:	add    BYTE PTR [rax],al
   14002d796:	add    BYTE PTR [rax],al
   14002d798:	push   rax
   14002d799:	loopne 0x14002d79d
   14002d79b:	rex add DWORD PTR [rax],eax
   14002d79e:	add    BYTE PTR [rax],al
   14002d7a0:	and    DWORD PTR [rax],eax
   14002d7a2:	add    BYTE PTR [rax],al
   14002d7a4:	add    BYTE PTR [rax],al
   14002d7a6:	add    BYTE PTR [rax],al
   14002d7a8:	mov    eax,0x14002e0
   14002d7ad:	add    BYTE PTR [rax],al
   14002d7af:	add    ah,dl
   14002d7b1:	add    BYTE PTR [rax],al
   14002d7b3:	add    BYTE PTR [rax],al
   14002d7b5:	add    BYTE PTR [rax],al
   14002d7b7:	add    BYTE PTR [rax+0x14002e0],bh
   14002d7bd:	add    BYTE PTR [rax],al
   14002d7bf:	add    BYTE PTR [rbx+0x0],al
   14002d7c5:	add    BYTE PTR [rax],al
   14002d7c7:	add    BYTE PTR [rax-0x20],dl
   14002d7ca:	add    al,BYTE PTR [rax+0x1]
   14002d7cd:	add    BYTE PTR [rax],al
   14002d7cf:	add    dh,ah
   14002d7d1:	add    eax,DWORD PTR [rax]
   14002d7d3:	add    BYTE PTR [rax],al
   14002d7d5:	add    BYTE PTR [rax],al
   14002d7d7:	add    al,al
   14002d7d9:	fild   WORD PTR [rdx]
   14002d7db:	rex add DWORD PTR [rax],eax
   14002d7de:	add    BYTE PTR [rax],al
   14002d7e0:	or     BYTE PTR [rax],al
   14002d7e2:	add    BYTE PTR [rax],al
   14002d7e4:	add    BYTE PTR [rax],al
   14002d7e6:	add    BYTE PTR [rax],al
   14002d7e8:	shl    al,1
   14002d7ea:	add    al,BYTE PTR [rax+0x1]
   14002d7ed:	add    BYTE PTR [rax],al
   14002d7ef:	add    BYTE PTR [rip+0x0],dl        # 0x14002d7f5
   14002d7f5:	add    BYTE PTR [rax],al
   14002d7f7:	add    al,ch
   14002d7f9:	loopne 0x14002d7fd
   14002d7fb:	rex add DWORD PTR [rax],eax
   14002d7fe:	add    BYTE PTR [rax],al
   14002d800:	adc    DWORD PTR [rax],eax
   14002d802:	add    BYTE PTR [rax],al
   14002d804:	add    BYTE PTR [rax],al
   14002d806:	add    BYTE PTR [rax],al
   14002d808:	or     cl,ah
   14002d80a:	add    al,BYTE PTR [rax+0x1]
   14002d80d:	add    BYTE PTR [rax],al
   14002d80f:	add    BYTE PTR [rsi+0x0],ch
   14002d812:	add    BYTE PTR [rax],al
   14002d814:	add    BYTE PTR [rax],al
   14002d816:	add    BYTE PTR [rax],al
   14002d818:	sub    al,ah
   14002d81a:	add    al,BYTE PTR [rax+0x1]
   14002d81d:	add    BYTE PTR [rax],al
   14002d81f:	add    BYTE PTR [rcx+0x9],ah
   14002d822:	add    BYTE PTR [rax],al
   14002d824:	add    BYTE PTR [rax],al
   14002d826:	add    BYTE PTR [rax],al
   14002d828:	adc    al,ah
   14002d82a:	add    al,BYTE PTR [rax+0x1]
   14002d82d:	add    BYTE PTR [rax],al
   14002d82f:	add    bl,ah
   14002d831:	add    eax,DWORD PTR [rax]
   14002d833:	add    BYTE PTR [rax],al
   14002d835:	add    BYTE PTR [rax],al
   14002d837:	add    BYTE PTR [rax],ah
   14002d839:	loope  0x14002d83d
   14002d83b:	rex add DWORD PTR [rax],eax
   14002d83e:	add    BYTE PTR [rax],al
   14002d840:	(bad)  
   14002d841:	add    BYTE PTR [rax],al
   14002d843:	add    BYTE PTR [rax],al
   14002d845:	add    BYTE PTR [rax],al
   14002d847:	add    al,dl
   14002d849:	loopne 0x14002d84d
   14002d84b:	rex add DWORD PTR [rax],eax
   14002d84e:	add    BYTE PTR [rax],al
   14002d850:	add    eax,DWORD PTR [rax]
   14002d852:	add    BYTE PTR [rax],al
   14002d854:	add    BYTE PTR [rax],al
   14002d856:	add    BYTE PTR [rax],al
   14002d858:	and    al,0x2
   14002d85b:	rex add DWORD PTR [rax],eax
   14002d85e:	add    BYTE PTR [rax],al
   14002d860:	(bad)  
   14002d861:	add    BYTE PTR [rax],al
   14002d863:	add    BYTE PTR [rax],al
   14002d865:	add    BYTE PTR [rax],al
   14002d867:	add    BYTE PTR [rax],ch
   14002d869:	loopne 0x14002d86d
   14002d86b:	rex add DWORD PTR [rax],eax
   14002d86e:	add    BYTE PTR [rax],al
   14002d870:	(bad)  
   14002d871:	add    al,0x0
   14002d873:	add    BYTE PTR [rax],al
   14002d875:	add    BYTE PTR [rax],al
   14002d877:	add    al,ch
   14002d879:	loopne 0x14002d87d
   14002d87b:	rex add DWORD PTR [rax],eax
   14002d87e:	add    BYTE PTR [rax],al
   14002d880:	sbb    DWORD PTR [rax],eax
   14002d882:	add    BYTE PTR [rax],al
   14002d884:	add    BYTE PTR [rax],al
   14002d886:	add    BYTE PTR [rax],al
   14002d888:	sub    al,ah
   14002d88a:	add    al,BYTE PTR [rax+0x1]
   14002d88d:	add    BYTE PTR [rax],al
   14002d88f:	add    BYTE PTR [rax],ah
   14002d891:	add    BYTE PTR [rax],al
   14002d893:	add    BYTE PTR [rax],al
   14002d895:	add    BYTE PTR [rax],al
   14002d897:	add    al,al
   14002d899:	fild   WORD PTR [rdx]
   14002d89b:	rex add DWORD PTR [rax],eax
   14002d89e:	add    BYTE PTR [rax],al
   14002d8a0:	add    al,0x0
   14002d8a2:	add    BYTE PTR [rax],al
   14002d8a4:	add    BYTE PTR [rax],al
   14002d8a6:	add    BYTE PTR [rax],al
   14002d8a8:	cmp    cl,ah
   14002d8aa:	add    al,BYTE PTR [rax+0x1]
   14002d8ad:	add    BYTE PTR [rax],al
   14002d8af:	add    BYTE PTR [rip+0x0],bl        # 0x14002d8b5
   14002d8b5:	add    BYTE PTR [rax],al
   14002d8b7:	add    BYTE PTR [rax],ch
   14002d8b9:	loopne 0x14002d8bd
   14002d8bb:	rex add DWORD PTR [rax],eax
   14002d8be:	add    BYTE PTR [rax],al
   14002d8c0:	adc    eax,DWORD PTR [rax]
   14002d8c2:	add    BYTE PTR [rax],al
   14002d8c4:	add    BYTE PTR [rax],al
   14002d8c6:	add    BYTE PTR [rax],al
   14002d8c8:	rcr    bh,0x2
   14002d8cb:	rex add DWORD PTR [rax],eax
   14002d8ce:	add    BYTE PTR [rax],al
   14002d8d0:	sbb    eax,0x27
   14002d8d5:	add    BYTE PTR [rax],al
   14002d8d7:	add    BYTE PTR [rax-0x1f],dl
   14002d8da:	add    al,BYTE PTR [rax+0x1]
   14002d8dd:	add    BYTE PTR [rax],al
   14002d8df:	add    BYTE PTR [rax+0x27],al
   14002d8e2:	add    BYTE PTR [rax],al
   14002d8e4:	add    BYTE PTR [rax],al
   14002d8e6:	add    BYTE PTR [rax],al
   14002d8e8:	push   0x14002e1
   14002d8ed:	add    BYTE PTR [rax],al
   14002d8ef:	add    BYTE PTR [rcx+0x27],al
   14002d8f2:	add    BYTE PTR [rax],al
   14002d8f4:	add    BYTE PTR [rax],al
   14002d8f6:	add    BYTE PTR [rax],al
   14002d8f8:	js     0x14002d8db
   14002d8fa:	add    al,BYTE PTR [rax+0x1]
   14002d8fd:	add    BYTE PTR [rax],al
   14002d8ff:	add    BYTE PTR [rdi],bh
   14002d901:	(bad)  
   14002d902:	add    BYTE PTR [rax],al
   14002d904:	add    BYTE PTR [rax],al
   14002d906:	add    BYTE PTR [rax],al
   14002d908:	nop
   14002d909:	loope  0x14002d90d
   14002d90b:	rex add DWORD PTR [rax],eax
   14002d90e:	add    BYTE PTR [rax],al
   14002d910:	xor    eax,0x27
   14002d915:	add    BYTE PTR [rax],al
   14002d917:	add    BYTE PTR [rax+0x14002e1],dh
   14002d91d:	add    BYTE PTR [rax],al
   14002d91f:	add    BYTE PTR [rcx],bl
   14002d921:	(bad)  
   14002d922:	add    BYTE PTR [rax],al
   14002d924:	add    BYTE PTR [rax],al
   14002d926:	add    BYTE PTR [rax],al
   14002d928:	shl    cl,1
   14002d92a:	add    al,BYTE PTR [rax+0x1]
   14002d92d:	add    BYTE PTR [rax],al
   14002d92f:	add    BYTE PTR [rbp+0x27],al
   14002d932:	add    BYTE PTR [rax],al
   14002d934:	add    BYTE PTR [rax],al
   14002d936:	add    BYTE PTR [rax],al
   14002d938:	call   0x14142dc1e
   14002d93d:	add    BYTE PTR [rax],al
   14002d93f:	add    BYTE PTR [rbp+0x27],cl
   14002d942:	add    BYTE PTR [rax],al
   14002d944:	add    BYTE PTR [rax],al
   14002d946:	add    BYTE PTR [rax],al
   14002d948:	add    dl,ah
   14002d94a:	add    al,BYTE PTR [rax+0x1]
   14002d94d:	add    BYTE PTR [rax],al
   14002d94f:	add    BYTE PTR [rsi+0x27],al
   14002d952:	add    BYTE PTR [rax],al
   14002d954:	add    BYTE PTR [rax],al
   14002d956:	add    BYTE PTR [rax],al
   14002d958:	sbb    dl,ah
   14002d95a:	add    al,BYTE PTR [rax+0x1]
   14002d95d:	add    BYTE PTR [rax],al
   14002d95f:	add    BYTE PTR [rdi],dh
   14002d961:	(bad)  
   14002d962:	add    BYTE PTR [rax],al
   14002d964:	add    BYTE PTR [rax],al
   14002d966:	add    BYTE PTR [rax],al
   14002d968:	xor    dl,ah
   14002d96a:	add    al,BYTE PTR [rax+0x1]
   14002d96d:	add    BYTE PTR [rax],al
   14002d96f:	add    BYTE PTR [rsi],bl
   14002d971:	(bad)  
   14002d972:	add    BYTE PTR [rax],al
   14002d974:	add    BYTE PTR [rax],al
   14002d976:	add    BYTE PTR [rax],al
   14002d978:	push   rax
   14002d979:	loop   0x14002d97d
   14002d97b:	rex add DWORD PTR [rax],eax
   14002d97e:	add    BYTE PTR [rax],al
   14002d980:	push   rcx
   14002d981:	(bad)  
   14002d982:	add    BYTE PTR [rax],al
   14002d984:	add    BYTE PTR [rax],al
   14002d986:	add    BYTE PTR [rax],al
   14002d988:	(bad)  
   14002d989:	loop   0x14002d98d
   14002d98b:	rex add DWORD PTR [rax],eax
   14002d98e:	add    BYTE PTR [rax],al
   14002d990:	xor    al,0x27
   14002d992:	add    BYTE PTR [rax],al
   14002d994:	add    BYTE PTR [rax],al
   14002d996:	add    BYTE PTR [rax],al
   14002d998:	js     0x14002d97c
   14002d99a:	add    al,BYTE PTR [rax+0x1]
   14002d99d:	add    BYTE PTR [rax],al
   14002d99f:	add    BYTE PTR [rdi+riz*1],dl
   14002d9a2:	add    BYTE PTR [rax],al
   14002d9a4:	add    BYTE PTR [rax],al
   14002d9a6:	add    BYTE PTR [rax],al
   14002d9a8:	nop
   14002d9a9:	loop   0x14002d9ad
   14002d9ab:	rex add DWORD PTR [rax],eax
   14002d9ae:	add    BYTE PTR [rax],al
   14002d9b0:	es (bad) 
   14002d9b2:	add    BYTE PTR [rax],al
   14002d9b4:	add    BYTE PTR [rax],al
   14002d9b6:	add    BYTE PTR [rax],al
   14002d9b8:	movabs al,ds:0x48000000014002e2
   14002d9c1:	(bad)  
   14002d9c2:	add    BYTE PTR [rax],al
   14002d9c4:	add    BYTE PTR [rax],al
   14002d9c6:	add    BYTE PTR [rax],al
   14002d9c8:	mov    eax,0x14002e2
   14002d9cd:	add    BYTE PTR [rax],al
   14002d9cf:	add    BYTE PTR [rax],ch
   14002d9d1:	(bad)  
   14002d9d2:	add    BYTE PTR [rax],al
   14002d9d4:	add    BYTE PTR [rax],al
   14002d9d6:	add    BYTE PTR [rax],al
   14002d9d8:	shl    dl,1
   14002d9da:	add    al,BYTE PTR [rax+0x1]
   14002d9dd:	add    BYTE PTR [rax],al
   14002d9df:	add    BYTE PTR [rax],bh
   14002d9e1:	(bad)  
   14002d9e2:	add    BYTE PTR [rax],al
   14002d9e4:	add    BYTE PTR [rax],al
   14002d9e6:	add    BYTE PTR [rax],al
   14002d9e8:	call   0x14142dccf
   14002d9ed:	add    BYTE PTR [rax],al
   14002d9ef:	add    BYTE PTR [rdi+0x27],cl
   14002d9f2:	add    BYTE PTR [rax],al
   14002d9f4:	add    BYTE PTR [rax],al
   14002d9f6:	add    BYTE PTR [rax],al
   14002d9f8:	clc    
   14002d9f9:	loop   0x14002d9fd
   14002d9fb:	rex add DWORD PTR [rax],eax
   14002d9fe:	add    BYTE PTR [rax],al
   14002da00:	rex.X (bad) 
   14002da02:	add    BYTE PTR [rax],al
   14002da04:	add    BYTE PTR [rax],al
   14002da06:	add    BYTE PTR [rax],al
   14002da08:	adc    bl,ah
   14002da0a:	add    al,BYTE PTR [rax+0x1]
   14002da0d:	add    BYTE PTR [rax],al
   14002da0f:	add    BYTE PTR [rdi+riz*1+0x0],al
   14002da13:	add    BYTE PTR [rax],al
   14002da15:	add    BYTE PTR [rax],al
   14002da17:	add    BYTE PTR [rax],ah
   14002da19:	jrcxz  0x14002da1d
   14002da1b:	rex add DWORD PTR [rax],eax
   14002da1e:	add    BYTE PTR [rax],al
   14002da20:	rex.XB (bad) 
   14002da22:	add    BYTE PTR [rax],al
   14002da24:	add    BYTE PTR [rax],al
   14002da26:	add    BYTE PTR [rax],al
   14002da28:	xor    bl,ah
   14002da2a:	add    al,BYTE PTR [rax+0x1]
   14002da2d:	add    BYTE PTR [rax],al
   14002da2f:	add    BYTE PTR [rdi+0x27],al
   14002da32:	add    BYTE PTR [rax],al
   14002da34:	add    BYTE PTR [rax],al
   14002da36:	add    BYTE PTR [rax],al
   14002da38:	rex.W jrcxz 0x14002da3d
   14002da3b:	rex add DWORD PTR [rax],eax
   14002da3e:	add    BYTE PTR [rax],al
   14002da40:	cmp    ah,BYTE PTR [rdi]
   14002da42:	add    BYTE PTR [rax],al
   14002da44:	add    BYTE PTR [rax],al
   14002da46:	add    BYTE PTR [rax],al
   14002da48:	pop    rax
   14002da49:	jrcxz  0x14002da4d
   14002da4b:	rex add DWORD PTR [rax],eax
   14002da4e:	add    BYTE PTR [rax],al
   14002da50:	rex.WB (bad) 
   14002da52:	add    BYTE PTR [rax],al
   14002da54:	add    BYTE PTR [rax],al
   14002da56:	add    BYTE PTR [rax],al
   14002da58:	jo     0x14002da3d
   14002da5a:	add    al,BYTE PTR [rax+0x1]
   14002da5d:	add    BYTE PTR [rax],al
   14002da5f:	add    BYTE PTR [rsi],dh
   14002da61:	(bad)  
   14002da62:	add    BYTE PTR [rax],al
   14002da64:	add    BYTE PTR [rax],al
   14002da66:	add    BYTE PTR [rax],al
   14002da68:	and    bl,0x2
   14002da6b:	rex add DWORD PTR [rax],eax
   14002da6e:	add    BYTE PTR [rax],al
   14002da70:	cmp    eax,0x27
   14002da75:	add    BYTE PTR [rax],al
   14002da77:	add    BYTE PTR [rax+0x14002e3],dl
   14002da7d:	add    BYTE PTR [rax],al
   14002da7f:	add    BYTE PTR [rbx],bh
   14002da81:	(bad)  
   14002da82:	add    BYTE PTR [rax],al
   14002da84:	add    BYTE PTR [rax],al
   14002da86:	add    BYTE PTR [rax],al
   14002da88:	test   al,0xe3
   14002da8a:	add    al,BYTE PTR [rax+0x1]
   14002da8d:	add    BYTE PTR [rax],al
   14002da8f:	add    BYTE PTR [rcx],bh
   14002da91:	(bad)  
   14002da92:	add    BYTE PTR [rax],al
   14002da94:	add    BYTE PTR [rax],al
   14002da96:	add    BYTE PTR [rax],al
   14002da98:	shl    bl,0x2
   14002da9b:	rex add DWORD PTR [rax],eax
   14002da9e:	add    BYTE PTR [rax],al
   14002daa0:	rex.WR (bad) 
   14002daa2:	add    BYTE PTR [rax],al
   14002daa4:	add    BYTE PTR [rax],al
   14002daa6:	add    BYTE PTR [rax],al
   14002daa8:	fsub   st,st(3)
   14002daaa:	add    al,BYTE PTR [rax+0x1]
   14002daad:	add    BYTE PTR [rax],al
   14002daaf:	add    BYTE PTR [rbx],dh
   14002dab1:	(bad)  
   14002dab2:	add    BYTE PTR [rax],al
   14002dab4:	add    BYTE PTR [rax],al
   14002dab6:	add    BYTE PTR [rax],al
   14002dab8:	call   0x14142dda0
	...
   14002dacd:	add    BYTE PTR [rax],al
   14002dacf:	add    BYTE PTR [rsi+0x0],ah
   14002dad2:	add    BYTE PTR [rax],al
   14002dad4:	add    BYTE PTR [rax],al
   14002dad6:	add    BYTE PTR [rax],al
   14002dad8:	add    ah,ah
   14002dada:	add    al,BYTE PTR [rax+0x1]
   14002dadd:	add    BYTE PTR [rax],al
   14002dadf:	add    BYTE PTR [rax+rax*1+0x0],ah
   14002dae3:	add    BYTE PTR [rax],al
   14002dae5:	add    BYTE PTR [rax],al
   14002dae7:	add    BYTE PTR [rax],ah
   14002dae9:	in     al,0x2
   14002daeb:	rex add DWORD PTR [rax],eax
   14002daee:	add    BYTE PTR [rax],al
   14002daf0:	add    BYTE PTR gs:[rax],al
   14002daf3:	add    BYTE PTR [rax],al
   14002daf5:	add    BYTE PTR [rax],al
   14002daf7:	add    BYTE PTR [rax],dh
   14002daf9:	in     al,0x2
   14002dafb:	rex add DWORD PTR [rax],eax
   14002dafe:	add    BYTE PTR [rax],al
   14002db00:	jno    0x14002db02
   14002db02:	add    BYTE PTR [rax],al
   14002db04:	add    BYTE PTR [rax],al
   14002db06:	add    BYTE PTR [rax],al
   14002db08:	rex.W in al,0x2
   14002db0b:	rex add DWORD PTR [rax],eax
   14002db0e:	add    BYTE PTR [rax],al
   14002db10:	(bad)  
   14002db11:	add    BYTE PTR [rax],al
   14002db13:	add    BYTE PTR [rax],al
   14002db15:	add    BYTE PTR [rax],al
   14002db17:	add    BYTE PTR [rax-0x1c],ah
   14002db1a:	add    al,BYTE PTR [rax+0x1]
   14002db1d:	add    BYTE PTR [rax],al
   14002db1f:	add    BYTE PTR [rcx],ah
   14002db21:	add    BYTE PTR [rax],al
   14002db23:	add    BYTE PTR [rax],al
   14002db25:	add    BYTE PTR [rax],al
   14002db27:	add    BYTE PTR [rax-0x1c],bh
   14002db2a:	add    al,BYTE PTR [rax+0x1]
   14002db2d:	add    BYTE PTR [rax],al
   14002db2f:	add    BYTE PTR [rsi],cl
   14002db31:	add    BYTE PTR [rax],al
   14002db33:	add    BYTE PTR [rax],al
   14002db35:	add    BYTE PTR [rax],al
   14002db37:	add    BYTE PTR [rax+0x14002e4],dl
   14002db3d:	add    BYTE PTR [rax],al
   14002db3f:	add    BYTE PTR [rcx],cl
   14002db41:	add    BYTE PTR [rax],al
   14002db43:	add    BYTE PTR [rax],al
   14002db45:	add    BYTE PTR [rax],al
   14002db47:	add    BYTE PTR [rax+0x14002e4],ah
   14002db4d:	add    BYTE PTR [rax],al
   14002db4f:	add    BYTE PTR [rax+0x0],ch
   14002db52:	add    BYTE PTR [rax],al
   14002db54:	add    BYTE PTR [rax],al
   14002db56:	add    BYTE PTR [rax],al
   14002db58:	mov    eax,0x14002e4
   14002db5d:	add    BYTE PTR [rax],al
   14002db5f:	add    BYTE PTR [rax],ah
   14002db61:	add    BYTE PTR [rax],al
   14002db63:	add    BYTE PTR [rax],al
   14002db65:	add    BYTE PTR [rax],al
   14002db67:	add    al,cl
   14002db69:	in     al,0x2
   14002db6b:	rex add DWORD PTR [rax],eax
   14002db6e:	add    BYTE PTR [rax],al
   14002db70:	push   0x0
   14002db72:	add    BYTE PTR [rax],al
   14002db74:	add    BYTE PTR [rax],al
   14002db76:	add    BYTE PTR [rax],al
   14002db78:	fsub   st,st(4)
   14002db7a:	add    al,BYTE PTR [rax+0x1]
   14002db7d:	add    BYTE PTR [rax],al
   14002db7f:	add    BYTE PTR [rdi+0x0],ah
   14002db82:	add    BYTE PTR [rax],al
   14002db84:	add    BYTE PTR [rax],al
   14002db86:	add    BYTE PTR [rax],al
   14002db88:	lock in al,0x2
   14002db8b:	rex add DWORD PTR [rax],eax
   14002db8e:	add    BYTE PTR [rax],al
   14002db90:	imul   eax,DWORD PTR [rax],0x0
   14002db93:	add    BYTE PTR [rax],al
   14002db95:	add    BYTE PTR [rax],al
   14002db97:	add    BYTE PTR [rax],dl
   14002db99:	in     eax,0x2
   14002db9b:	rex add DWORD PTR [rax],eax
   14002db9e:	add    BYTE PTR [rax],al
   14002dba0:	ins    BYTE PTR es:[rdi],dx
   14002dba1:	add    BYTE PTR [rax],al
   14002dba3:	add    BYTE PTR [rax],al
   14002dba5:	add    BYTE PTR [rax],al
   14002dba7:	add    BYTE PTR [rax],ch
   14002dba9:	in     eax,0x2
   14002dbab:	rex add DWORD PTR [rax],eax
   14002dbae:	add    BYTE PTR [rax],al
   14002dbb0:	adc    al,BYTE PTR [rax]
   14002dbb2:	add    BYTE PTR [rax],al
   14002dbb4:	add    BYTE PTR [rax],al
   14002dbb6:	add    BYTE PTR [rax],al
   14002dbb8:	or     cl,ah
   14002dbba:	add    al,BYTE PTR [rax+0x1]
   14002dbbd:	add    BYTE PTR [rax],al
   14002dbbf:	add    BYTE PTR [rbp+0x0],ch
   14002dbc2:	add    BYTE PTR [rax],al
   14002dbc4:	add    BYTE PTR [rax],al
   14002dbc6:	add    BYTE PTR [rax],al
   14002dbc8:	rex in eax,0x2
   14002dbcb:	rex add DWORD PTR [rax],eax
   14002dbce:	add    BYTE PTR [rax],al
   14002dbd0:	adc    BYTE PTR [rax],al
   14002dbd2:	add    BYTE PTR [rax],al
   14002dbd4:	add    BYTE PTR [rax],al
   14002dbd6:	add    BYTE PTR [rax],al
   14002dbd8:	adc    al,ah
   14002dbda:	add    al,BYTE PTR [rax+0x1]
   14002dbdd:	add    BYTE PTR [rax],al
   14002dbdf:	add    BYTE PTR [rcx],ch
   14002dbe1:	add    BYTE PTR [rax],al
   14002dbe3:	add    BYTE PTR [rax],al
   14002dbe5:	add    BYTE PTR [rax],al
   14002dbe7:	add    BYTE PTR [rax],bh
   14002dbe9:	loopne 0x14002dbed
   14002dbeb:	rex add DWORD PTR [rax],eax
   14002dbee:	add    BYTE PTR [rax],al
   14002dbf0:	or     BYTE PTR [rax],al
   14002dbf2:	add    BYTE PTR [rax],al
   14002dbf4:	add    BYTE PTR [rax],al
   14002dbf6:	add    BYTE PTR [rax],al
   14002dbf8:	(bad)  
   14002dbf9:	in     eax,0x2
   14002dbfb:	rex add DWORD PTR [rax],eax
   14002dbfe:	add    BYTE PTR [rax],al
   14002dc00:	adc    DWORD PTR [rax],eax
   14002dc02:	add    BYTE PTR [rax],al
   14002dc04:	add    BYTE PTR [rax],al
   14002dc06:	add    BYTE PTR [rax],al
   14002dc08:	fcomp  st(7)
   14002dc0a:	add    al,BYTE PTR [rax+0x1]
   14002dc0d:	add    BYTE PTR [rax],al
   14002dc0f:	add    BYTE PTR [rbx],bl
   14002dc11:	add    BYTE PTR [rax],al
   14002dc13:	add    BYTE PTR [rax],al
   14002dc15:	add    BYTE PTR [rax],al
   14002dc17:	add    BYTE PTR [rax-0x1b],bh
   14002dc1a:	add    al,BYTE PTR [rax+0x1]
   14002dc1d:	add    BYTE PTR [rax],al
   14002dc1f:	add    BYTE PTR [rsi],ah
   14002dc21:	add    BYTE PTR [rax],al
   14002dc23:	add    BYTE PTR [rax],al
   14002dc25:	add    BYTE PTR [rax],al
   14002dc27:	add    al,bh
   14002dc29:	fild   WORD PTR [rdx]
   14002dc2b:	rex add DWORD PTR [rax],eax
   14002dc2e:	add    BYTE PTR [rax],al
   14002dc30:	sub    BYTE PTR [rax],al
   14002dc32:	add    BYTE PTR [rax],al
   14002dc34:	add    BYTE PTR [rax],al
   14002dc36:	add    BYTE PTR [rax],al
   14002dc38:	movabs al,ds:0x6e000000014002e0
   14002dc41:	add    BYTE PTR [rax],al
   14002dc43:	add    BYTE PTR [rax],al
   14002dc45:	add    BYTE PTR [rax],al
   14002dc47:	add    BYTE PTR [rax+0x14002e5],cl
   14002dc4d:	add    BYTE PTR [rax],al
   14002dc4f:	add    BYTE PTR [rdi+0x0],ch
   14002dc52:	add    BYTE PTR [rax],al
   14002dc54:	add    BYTE PTR [rax],al
   14002dc56:	add    BYTE PTR [rax],al
   14002dc58:	movabs al,ds:0x2a000000014002e5
   14002dc61:	add    BYTE PTR [rax],al
   14002dc63:	add    BYTE PTR [rax],al
   14002dc65:	add    BYTE PTR [rax],al
   14002dc67:	add    BYTE PTR [rax+0x14002e5],bh
   14002dc6d:	add    BYTE PTR [rax],al
   14002dc6f:	add    BYTE PTR [rcx],bl
   14002dc71:	add    BYTE PTR [rax],al
   14002dc73:	add    BYTE PTR [rax],al
   14002dc75:	add    BYTE PTR [rax],al
   14002dc77:	add    al,dl
   14002dc79:	in     eax,0x2
   14002dc7b:	rex add DWORD PTR [rax],eax
   14002dc7e:	add    BYTE PTR [rax],al
   14002dc80:	add    al,0x0
   14002dc82:	add    BYTE PTR [rax],al
   14002dc84:	add    BYTE PTR [rax],al
   14002dc86:	add    BYTE PTR [rax],al
   14002dc88:	nop
   14002dc89:	loop   0x14002dc8d
   14002dc8b:	rex add DWORD PTR [rax],eax
   14002dc8e:	add    BYTE PTR [rax],al
   14002dc90:	(bad)  
   14002dc91:	add    BYTE PTR [rax],al
   14002dc93:	add    BYTE PTR [rax],al
   14002dc95:	add    BYTE PTR [rax],al
   14002dc97:	add    BYTE PTR [rax-0x20],dl
   14002dc9a:	add    al,BYTE PTR [rax+0x1]
   14002dc9d:	add    BYTE PTR [rax],al
   14002dc9f:	add    BYTE PTR [rip+0x0],bl        # 0x14002dca5
   14002dca5:	add    BYTE PTR [rax],al
   14002dca7:	add    al,bh
   14002dca9:	in     eax,0x2
   14002dcab:	rex add DWORD PTR [rax],eax
   14002dcae:	add    BYTE PTR [rax],al
   14002dcb0:	add    eax,0x0
   14002dcb5:	add    BYTE PTR [rax],al
   14002dcb7:	add    BYTE PTR [rax],ch
   14002dcb9:	loopne 0x14002dcbd
   14002dcbb:	rex add DWORD PTR [rax],eax
   14002dcbe:	add    BYTE PTR [rax],al
   14002dcc0:	adc    eax,0x0
   14002dcc5:	add    BYTE PTR [rax],al
   14002dcc7:	add    BYTE PTR [rax],cl
   14002dcc9:	out    0x2,al
   14002dccb:	rex add DWORD PTR [rax],eax
   14002dcce:	add    BYTE PTR [rax],al
   14002dcd0:	jae    0x14002dcd2
   14002dcd2:	add    BYTE PTR [rax],al
   14002dcd4:	add    BYTE PTR [rax],al
   14002dcd6:	add    BYTE PTR [rax],al
   14002dcd8:	sbb    dh,ah
   14002dcda:	add    al,BYTE PTR [rax+0x1]
   14002dcdd:	add    BYTE PTR [rax],al
   14002dcdf:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002dce3:	add    BYTE PTR [rax],al
   14002dce5:	add    BYTE PTR [rax],al
   14002dce7:	add    BYTE PTR [rax],ch
   14002dce9:	out    0x2,al
   14002dceb:	rex add DWORD PTR [rax],eax
   14002dcee:	add    BYTE PTR [rax],al
   14002dcf0:	jne    0x14002dcf2
   14002dcf2:	add    BYTE PTR [rax],al
   14002dcf4:	add    BYTE PTR [rax],al
   14002dcf6:	add    BYTE PTR [rax],al
   14002dcf8:	cmp    dh,ah
   14002dcfa:	add    al,BYTE PTR [rax+0x1]
   14002dcfd:	add    BYTE PTR [rax],al
   14002dcff:	add    BYTE PTR [rsi+0x0],dh
   14002dd02:	add    BYTE PTR [rax],al
   14002dd04:	add    BYTE PTR [rax],al
   14002dd06:	add    BYTE PTR [rax],al
   14002dd08:	rex.W out 0x2,al
   14002dd0b:	rex add DWORD PTR [rax],eax
   14002dd0e:	add    BYTE PTR [rax],al
   14002dd10:	ja     0x14002dd12
   14002dd12:	add    BYTE PTR [rax],al
   14002dd14:	add    BYTE PTR [rax],al
   14002dd16:	add    BYTE PTR [rax],al
   14002dd18:	(bad)  
   14002dd19:	out    0x2,al
   14002dd1b:	rex add DWORD PTR [rax],eax
   14002dd1e:	add    BYTE PTR [rax],al
   14002dd20:	or     al,BYTE PTR [rax]
   14002dd22:	add    BYTE PTR [rax],al
   14002dd24:	add    BYTE PTR [rax],al
   14002dd26:	add    BYTE PTR [rax],al
   14002dd28:	jo     0x14002dd10
   14002dd2a:	add    al,BYTE PTR [rax+0x1]
   14002dd2d:	add    BYTE PTR [rax],al
   14002dd2f:	add    BYTE PTR [rcx+0x0],bh
   14002dd32:	add    BYTE PTR [rax],al
   14002dd34:	add    BYTE PTR [rax],al
   14002dd36:	add    BYTE PTR [rax],al
   14002dd38:	mov    dh,ah
   14002dd3a:	add    al,BYTE PTR [rax+0x1]
   14002dd3d:	add    BYTE PTR [rax],al
   14002dd3f:	add    BYTE PTR [rdi],ah
   14002dd41:	add    BYTE PTR [rax],al
   14002dd43:	add    BYTE PTR [rax],al
   14002dd45:	add    BYTE PTR [rax],al
   14002dd47:	add    BYTE PTR [rax+0x14002e0],bh
   14002dd4d:	add    BYTE PTR [rax],al
   14002dd4f:	add    BYTE PTR [rax+0x0],bh
   14002dd52:	add    BYTE PTR [rax],al
   14002dd54:	add    BYTE PTR [rax],al
   14002dd56:	add    BYTE PTR [rax],al
   14002dd58:	nop
   14002dd59:	out    0x2,al
   14002dd5b:	rex add DWORD PTR [rax],eax
   14002dd5e:	add    BYTE PTR [rax],al
   14002dd60:	jp     0x14002dd62
   14002dd62:	add    BYTE PTR [rax],al
   14002dd64:	add    BYTE PTR [rax],al
   14002dd66:	add    BYTE PTR [rax],al
   14002dd68:	test   al,0xe6
   14002dd6a:	add    al,BYTE PTR [rax+0x1]
   14002dd6d:	add    BYTE PTR [rax],al
   14002dd6f:	add    BYTE PTR [rbx+0x0],bh
   14002dd72:	add    BYTE PTR [rax],al
   14002dd74:	add    BYTE PTR [rax],al
   14002dd76:	add    BYTE PTR [rax],al
   14002dd78:	mov    eax,0x14002e6
   14002dd7d:	add    BYTE PTR [rax],al
   14002dd7f:	add    BYTE PTR [rax+rax*1],bl
   14002dd82:	add    BYTE PTR [rax],al
   14002dd84:	add    BYTE PTR [rax],al
   14002dd86:	add    BYTE PTR [rax],al
   14002dd88:	push   0x14002e0
   14002dd8d:	add    BYTE PTR [rax],al
   14002dd8f:	add    BYTE PTR [rax+rax*1+0x0],bh
   14002dd93:	add    BYTE PTR [rax],al
   14002dd95:	add    BYTE PTR [rax],al
   14002dd97:	add    al,dl
   14002dd99:	out    0x2,al
   14002dd9b:	rex add DWORD PTR [rax],eax
   14002dd9e:	add    BYTE PTR [rax],al
   14002dda0:	(bad)  
   14002dda1:	add    BYTE PTR [rax],al
   14002dda3:	add    BYTE PTR [rax],al
   14002dda5:	add    BYTE PTR [rax],al
   14002dda7:	add    al,ch
   14002dda9:	out    0x2,al
   14002ddab:	rex add DWORD PTR [rax],eax
   14002ddae:	add    BYTE PTR [rax],al
   14002ddb0:	adc    eax,DWORD PTR [rax]
   14002ddb2:	add    BYTE PTR [rax],al
   14002ddb4:	add    BYTE PTR [rax],al
   14002ddb6:	add    BYTE PTR [rax],al
   14002ddb8:	call   0x14142e09c
   14002ddbd:	add    BYTE PTR [rax],al
   14002ddbf:	add    BYTE PTR [rdx],al
   14002ddc1:	add    BYTE PTR [rax],al
   14002ddc3:	add    BYTE PTR [rax],al
   14002ddc5:	add    BYTE PTR [rax],al
   14002ddc7:	add    BYTE PTR [rax+0x14002e0],al
   14002ddcd:	add    BYTE PTR [rax],al
   14002ddcf:	add    BYTE PTR [rbx],al
   14002ddd1:	add    BYTE PTR [rax],al
   14002ddd3:	add    BYTE PTR [rax],al
   14002ddd5:	add    BYTE PTR [rax],al
   14002ddd7:	add    BYTE PTR [rax],cl
   14002ddd9:	out    0x2,eax
   14002dddb:	rex add DWORD PTR [rax],eax
   14002ddde:	add    BYTE PTR [rax],al
   14002dde0:	adc    al,0x0
   14002dde2:	add    BYTE PTR [rax],al
   14002dde4:	add    BYTE PTR [rax],al
   14002dde6:	add    BYTE PTR [rax],al
   14002dde8:	sbb    bh,ah
   14002ddea:	add    al,BYTE PTR [rax+0x1]
   14002dded:	add    BYTE PTR [rax],al
   14002ddef:	add    BYTE PTR [rax+0x0],al
   14002ddf5:	add    BYTE PTR [rax],al
   14002ddf7:	add    BYTE PTR [rax],ch
   14002ddf9:	out    0x2,eax
   14002ddfb:	rex add DWORD PTR [rax],eax
   14002ddfe:	add    BYTE PTR [rax],al
   14002de00:	jge    0x14002de02
   14002de02:	add    BYTE PTR [rax],al
   14002de04:	add    BYTE PTR [rax],al
   14002de06:	add    BYTE PTR [rax],al
   14002de08:	cmp    bh,ah
   14002de0a:	add    al,BYTE PTR [rax+0x1]
   14002de0d:	add    BYTE PTR [rax],al
   14002de0f:	add    BYTE PTR [rsi+0x0],bh
   14002de12:	add    BYTE PTR [rax],al
   14002de14:	add    BYTE PTR [rax],al
   14002de16:	add    BYTE PTR [rax],al
   14002de18:	rex.W out 0x2,eax
   14002de1b:	rex add DWORD PTR [rax],eax
   14002de1e:	add    BYTE PTR [rax],al
   14002de20:	or     al,0x0
   14002de22:	add    BYTE PTR [rax],al
   14002de24:	add    BYTE PTR [rax],al
   14002de26:	add    BYTE PTR [rax],al
   14002de28:	shl    al,1
   14002de2a:	add    al,BYTE PTR [rax+0x1]
   14002de2d:	add    BYTE PTR [rax],al
   14002de2f:	add    BYTE PTR [rcx+0x0],al
   14002de35:	add    BYTE PTR [rax],al
   14002de37:	add    BYTE PTR [rax-0x19],bl
   14002de3a:	add    al,BYTE PTR [rax+0x1]
   14002de3d:	add    BYTE PTR [rax],al
   14002de3f:	add    BYTE PTR [rcx+0x0],ch
   14002de42:	add    BYTE PTR [rax],al
   14002de44:	add    BYTE PTR [rax],al
   14002de46:	add    BYTE PTR [rax],al
   14002de48:	and    cl,ah
   14002de4a:	add    al,BYTE PTR [rax+0x1]
   14002de4d:	add    BYTE PTR [rax],al
   14002de4f:	add    BYTE PTR [rax+0x0],dh
   14002de52:	add    BYTE PTR [rax],al
   14002de54:	add    BYTE PTR [rax],al
   14002de56:	add    BYTE PTR [rax],al
   14002de58:	push   0x14002e7
   14002de5d:	add    BYTE PTR [rax],al
   14002de5f:	add    BYTE PTR [rcx],al
   14002de61:	add    BYTE PTR [rax],al
   14002de63:	add    BYTE PTR [rax],al
   14002de65:	add    BYTE PTR [rax],al
   14002de67:	add    BYTE PTR [rax+0x14002e7],al
   14002de6d:	add    BYTE PTR [rax],al
   14002de6f:	add    BYTE PTR [rdx+0x0],al
   14002de75:	add    BYTE PTR [rax],al
   14002de77:	add    BYTE PTR [rax+0x14002e7],bl
   14002de7d:	add    BYTE PTR [rax],al
   14002de7f:	add    BYTE PTR [rax+rax*1+0x0],cl
   14002de86:	add    BYTE PTR [rax],al
   14002de88:	mov    al,0xe7
   14002de8a:	add    al,BYTE PTR [rax+0x1]
   14002de8d:	add    BYTE PTR [rax],al
   14002de8f:	add    BYTE PTR [rbp+0x0],al
   14002de95:	add    BYTE PTR [rax],al
   14002de97:	add    al,cl
   14002de99:	out    0x2,eax
   14002de9b:	rex add DWORD PTR [rax],eax
   14002de9e:	add    BYTE PTR [rax],al
   14002dea0:	or     eax,0x0
   14002dea5:	add    BYTE PTR [rax],al
   14002dea7:	add    al,al
   14002dea9:	fild   WORD PTR [rdx]
   14002deab:	rex add DWORD PTR [rax],eax
   14002deae:	add    BYTE PTR [rax],al
   14002deb0:	xchg   BYTE PTR [rax],al
   14002deb2:	add    BYTE PTR [rax],al
   14002deb4:	add    BYTE PTR [rax],al
   14002deb6:	add    BYTE PTR [rax],al
   14002deb8:	fsub   st,st(7)
   14002deba:	add    al,BYTE PTR [rax+0x1]
   14002debd:	add    BYTE PTR [rax],al
   14002debf:	add    BYTE PTR [rdi+0x0],al
   14002dec5:	add    BYTE PTR [rax],al
   14002dec7:	add    al,ch
   14002dec9:	out    0x2,eax
   14002decb:	rex add DWORD PTR [rax],eax
   14002dece:	add    BYTE PTR [rax],al
   14002ded0:	(bad)  
	...
   14002ded9:	call   0x140041ee0
   14002dede:	add    BYTE PTR [rax],al
   14002dee0:	and    al,0x0
   14002dee2:	add    BYTE PTR [rax],al
   14002dee4:	add    BYTE PTR [rax],al
   14002dee6:	add    BYTE PTR [rax],al
   14002dee8:	sbb    al,ch
   14002deea:	add    al,BYTE PTR [rax+0x1]
   14002deed:	add    BYTE PTR [rax],al
   14002deef:	add    BYTE PTR [rbx],cl
   14002def1:	add    BYTE PTR [rax],al
   14002def3:	add    BYTE PTR [rax],al
   14002def5:	add    BYTE PTR [rax],al
   14002def7:	add    al,ch
   14002def9:	loopne 0x14002defd
   14002defb:	rex add DWORD PTR [rax],eax
   14002defe:	add    BYTE PTR [rax],al
   14002df00:	and    al,BYTE PTR [rax]
   14002df02:	add    BYTE PTR [rax],al
   14002df04:	add    BYTE PTR [rax],al
   14002df06:	add    BYTE PTR [rax],al
   14002df08:	cmp    al,ch
   14002df0a:	add    al,BYTE PTR [rax+0x1]
   14002df0d:	add    BYTE PTR [rax],al
   14002df0f:	add    BYTE PTR [rdi+0x0],bh
   14002df12:	add    BYTE PTR [rax],al
   14002df14:	add    BYTE PTR [rax],al
   14002df16:	add    BYTE PTR [rax],al
   14002df18:	push   rax
   14002df19:	call   0x140041f20
   14002df1e:	add    BYTE PTR [rax],al
   14002df20:	mov    DWORD PTR [rax],eax
   14002df22:	add    BYTE PTR [rax],al
   14002df24:	add    BYTE PTR [rax],al
   14002df26:	add    BYTE PTR [rax],al
   14002df28:	push   0x14002e8
   14002df2d:	add    BYTE PTR [rax],al
   14002df2f:	add    BYTE PTR [rbx+0x0],cl
   14002df35:	add    BYTE PTR [rax],al
   14002df37:	add    BYTE PTR [rax-0x18],bh
   14002df3a:	add    al,BYTE PTR [rax+0x1]
   14002df3d:	add    BYTE PTR [rax],al
   14002df3f:	add    BYTE PTR [rdx+0x0],cl
   14002df45:	add    BYTE PTR [rax],al
   14002df47:	add    BYTE PTR [rax+0x14002e8],cl
   14002df4d:	add    BYTE PTR [rax],al
   14002df4f:	add    BYTE PTR [rdi],dl
   14002df51:	add    BYTE PTR [rax],al
   14002df53:	add    BYTE PTR [rax],al
   14002df55:	add    BYTE PTR [rax],al
   14002df57:	add    BYTE PTR [rax+0x14002e8],bl
   14002df5d:	add    BYTE PTR [rax],al
   14002df5f:	add    BYTE PTR [rax],bl
   14002df61:	add    BYTE PTR [rax],al
   14002df63:	add    BYTE PTR [rax],al
   14002df65:	add    BYTE PTR [rax],al
   14002df67:	add    BYTE PTR [rax],bh
   14002df69:	loope  0x14002df6d
   14002df6b:	rex add DWORD PTR [rax],eax
   14002df6e:	add    BYTE PTR [rax],al
   14002df70:	(bad)  
   14002df71:	add    BYTE PTR [rax],al
   14002df73:	add    BYTE PTR [rax],al
   14002df75:	add    BYTE PTR [rax],al
   14002df77:	add    BYTE PTR [rax+0x14002e8],bh
   14002df7d:	add    BYTE PTR [rax],al
   14002df7f:	add    BYTE PTR [rdx+0x0],dh
   14002df82:	add    BYTE PTR [rax],al
   14002df84:	add    BYTE PTR [rax],al
   14002df86:	add    BYTE PTR [rax],al
   14002df88:	enter  0x2e8,0x40
   14002df8c:	add    DWORD PTR [rax],eax
   14002df8e:	add    BYTE PTR [rax],al
   14002df90:	test   BYTE PTR [rax],al
   14002df92:	add    BYTE PTR [rax],al
   14002df94:	add    BYTE PTR [rax],al
   14002df96:	add    BYTE PTR [rax],al
   14002df98:	call   0x14142e285
   14002df9d:	add    BYTE PTR [rax],al
   14002df9f:	add    BYTE PTR [rax+0x0],cl
   14002dfa5:	add    BYTE PTR [rax],al
   14002dfa7:	add    al,bh
   14002dfa9:	call   0x140041fb0
	...
   14002dfbe:	add    BYTE PTR [rax],al
   14002dfc0:	jo     0x14002e027
   14002dfc2:	jb     0x14002e031
   14002dfc4:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   14002dfcb:	fs outs dx,BYTE PTR gs:[rsi]
   14002dfce:	imul   esp,DWORD PTR [rbp+0x64],0x0
   14002dfd5:	add    BYTE PTR [rax],al
   14002dfd7:	add    BYTE PTR [rsi+0x69],ah
   14002dfda:	ins    BYTE PTR es:[rdi],dx
   14002dfdb:	and    BYTE PTR gs:[rbp+0x78],ah
   14002dfdf:	imul   esi,DWORD PTR [rbx+0x74],0x73
   14002dfe6:	add    BYTE PTR [rax],al
   14002dfe8:	outs   dx,BYTE PTR ds:[rsi]
   14002dfe9:	outs   dx,DWORD PTR ds:[rsi]
   14002dfea:	and    BYTE PTR [rbx+0x75],dh
   14002dfed:	movsxd ebp,DWORD PTR [rax+0x20]
   14002dff0:	fs gs jbe 0x14002e05d
   14002dff4:	movsxd esp,DWORD PTR [rbp+0x0]
   14002dff7:	add    BYTE PTR [rsi+0x69],ah
   14002dffa:	ins    BYTE PTR es:[rdi],dx
   14002dffb:	outs   dx,BYTE PTR gs:[rsi]
   14002dffd:	(bad)  
   14002dffe:	ins    DWORD PTR es:[rdi],dx
   14002dfff:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   14002e004:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14002e008:	add    BYTE PTR [eax],al
   14002e00b:	add    BYTE PTR [rax],al
   14002e00d:	add    BYTE PTR [rax],al
   14002e00f:	add    BYTE PTR [rbp+riz*2+0x76],ah
   14002e013:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   14002e01a:	jb     0x14002e081
   14002e01c:	jae    0x14002e08d
   14002e01e:	jne    0x14002e092
   14002e020:	movsxd esp,DWORD PTR [rbp+0x20]
   14002e023:	(bad)  
   14002e024:	jne    0x14002e099
   14002e026:	jns    0x14002e028
   14002e028:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   14002e02f:	jb     0x14002e031
   14002e031:	add    BYTE PTR [rax],al
   14002e033:	add    BYTE PTR [rax],al
   14002e035:	add    BYTE PTR [rax],al
   14002e037:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   14002e03b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14002e040:	jns    0x14002e062
   14002e042:	outs   dx,BYTE PTR ds:[rsi]
   14002e043:	outs   dx,DWORD PTR ds:[rsi]
   14002e044:	je     0x14002e066
   14002e046:	gs ins DWORD PTR es:[rdi],dx
   14002e048:	jo     0x14002e0be
   14002e04a:	jns    0x14002e04c
   14002e04c:	add    BYTE PTR [rax],al
   14002e04e:	add    BYTE PTR [rax],al
   14002e050:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14002e057:	and    BYTE PTR [rcx+0x72],ah
   14002e05a:	addr32 jne 0x14002e0ca
   14002e05d:	outs   dx,BYTE PTR gs:[rsi]
   14002e05f:	je     0x14002e061
   14002e061:	add    BYTE PTR [rax],al
   14002e063:	add    BYTE PTR [rax],al
   14002e065:	add    BYTE PTR [rax],al
   14002e067:	add    BYTE PTR [rsi+0x6f],ch
   14002e06a:	and    BYTE PTR [rbx+0x70],dh
   14002e06d:	(bad)  
   14002e06e:	movsxd esp,DWORD PTR [rbp+0x20]
   14002e071:	outs   dx,DWORD PTR ds:[rsi]
   14002e072:	outs   dx,BYTE PTR ds:[rsi]
   14002e073:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14002e077:	imul   esp,DWORD PTR [rbx+0x65],0x0
   14002e07e:	add    BYTE PTR [rax],al
   14002e080:	outs   dx,BYTE PTR ds:[rsi]
   14002e081:	outs   dx,DWORD PTR ds:[rsi]
   14002e082:	and    BYTE PTR [rbx+0x75],dh
   14002e085:	movsxd ebp,DWORD PTR [rax+0x20]
   14002e088:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   14002e08f:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14002e093:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14002e098:	jns    0x14002e09a
   14002e09a:	add    BYTE PTR [rax],al
   14002e09c:	add    BYTE PTR [rax],al
   14002e09e:	add    BYTE PTR [rax],al
   14002e0a0:	data16 jne 0x14002e111
   14002e0a3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14002e0a7:	outs   dx,BYTE PTR ds:[rsi]
   14002e0a8:	and    BYTE PTR [rsi+0x6f],ch
   14002e0ab:	je     0x14002e0cd
   14002e0ad:	jae    0x14002e124
   14002e0af:	jo     0x14002e121
   14002e0b1:	outs   dx,DWORD PTR ds:[rsi]
   14002e0b2:	jb     0x14002e128
   14002e0b4:	gs add BYTE PTR fs:[rax],al
   14002e0b8:	outs   dx,BYTE PTR ds:[rsi]
   14002e0b9:	outs   dx,DWORD PTR ds:[rsi]
   14002e0ba:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   14002e0be:	imul   esp,DWORD PTR [rax],0x61
   14002e0c1:	jbe    0x14002e124
   14002e0c3:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14002e0cb:	add    BYTE PTR [rax],al
   14002e0cd:	add    BYTE PTR [rax],al
   14002e0cf:	add    BYTE PTR [rsi+0x6f],ch
   14002e0d2:	je     0x14002e0f4
   14002e0d4:	outs   dx,BYTE PTR gs:[rsi]
   14002e0d6:	outs   dx,DWORD PTR ds:[rsi]
   14002e0d7:	jne    0x14002e140
   14002e0d9:	push   0x6d656d20
   14002e0de:	outs   dx,DWORD PTR ds:[rsi]
   14002e0df:	jb     0x14002e15a
   14002e0e1:	add    BYTE PTR [rax],al
   14002e0e3:	add    BYTE PTR [rax],al
   14002e0e5:	add    BYTE PTR [rax],al
   14002e0e7:	add    BYTE PTR [rdx+0x65],dh
   14002e0ea:	jae    0x14002e15b
   14002e0ec:	jne    0x14002e160
   14002e0ee:	movsxd esp,DWORD PTR [rbp+0x20]
   14002e0f1:	jne    0x14002e161
   14002e0f3:	(bad)  
   14002e0f4:	jbe    0x14002e157
   14002e0f6:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   14002e0fe:	jb     0x14002e179
   14002e100:	and    BYTE PTR [rcx+0x67],ah
   14002e103:	(bad)  
   14002e104:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   14002e10b:	jae    0x14002e180
   14002e10d:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14002e111:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   14002e118:	imul   eax,DWORD PTR [rax],0x0
   14002e11b:	add    BYTE PTR [rax],al
   14002e11d:	add    BYTE PTR [rax],al
   14002e11f:	add    BYTE PTR [rdi+0x70],ch
   14002e122:	gs jb  0x14002e186
   14002e125:	je     0x14002e190
   14002e127:	outs   dx,DWORD PTR ds:[rsi]
   14002e128:	outs   dx,BYTE PTR ds:[rsi]
   14002e129:	and    BYTE PTR [rbx+0x61],ah
   14002e12c:	outs   dx,BYTE PTR ds:[rsi]
   14002e12d:	movsxd esp,DWORD PTR [rbp+0x6c]
   14002e130:	gs add BYTE PTR fs:[rax],al
   14002e134:	add    BYTE PTR [rax],al
   14002e136:	add    BYTE PTR [rax],al
   14002e138:	je     0x14002e1a9
   14002e13a:	outs   dx,DWORD PTR ds:[rsi]
   14002e13b:	and    BYTE PTR [rbp+0x61],ch
   14002e13e:	outs   dx,BYTE PTR ds:[rsi]
   14002e13f:	jns    0x14002e161
   14002e141:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   14002e148:	jo     0x14002e1af
   14002e14a:	outs   dx,BYTE PTR ds:[rsi]
   14002e14b:	add    BYTE PTR [rax],al
   14002e14d:	add    BYTE PTR [rax],al
   14002e14f:	add    BYTE PTR [rax+0x65],dh
   14002e152:	jb     0x14002e1c1
   14002e154:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   14002e15b:	fs outs dx,BYTE PTR gs:[rsi]
   14002e15e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   14002e165:	add    BYTE PTR [rax],al
   14002e167:	add    BYTE PTR [rcx+0x64],ah
   14002e16a:	fs jb  0x14002e1d2
   14002e16d:	jae    0x14002e1e2
   14002e16f:	pop    rdi
   14002e170:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   14002e177:	add    BYTE PTR [rcx+0x64],ah
   14002e17a:	fs jb  0x14002e1e2
   14002e17d:	jae    0x14002e1f2
   14002e17f:	pop    rdi
   14002e180:	outs   dx,BYTE PTR ds:[rsi]
   14002e181:	outs   dx,DWORD PTR ds:[rsi]
   14002e182:	je     0x14002e1e3
   14002e184:	(bad)  
   14002e185:	jbe    0x14002e1e8
   14002e187:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14002e18f:	add    BYTE PTR [rcx+0x64],ah
   14002e192:	fs jb  0x14002e1fa
   14002e195:	jae    0x14002e20a
   14002e197:	pop    rdi
   14002e198:	data16 (bad) 
   14002e19a:	ins    DWORD PTR es:[rdi],dx
   14002e19b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   14002e1a3:	jae    0x14002e21a
   14002e1a5:	jo     0x14002e217
   14002e1a7:	outs   dx,DWORD PTR ds:[rsi]
   14002e1a8:	jb     0x14002e21e
   14002e1aa:	gs add BYTE PTR fs:[rax],al
   14002e1ae:	add    BYTE PTR [rax],al
   14002e1b0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e1b3:	outs   dx,BYTE PTR ds:[rsi]
   14002e1b4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002e1b9:	outs   dx,BYTE PTR ds:[rsi]
   14002e1ba:	pop    rdi
   14002e1bb:	(bad)  
   14002e1bc:	ins    BYTE PTR es:[rdi],dx
   14002e1bd:	jb     0x14002e224
   14002e1bf:	(bad)  
   14002e1c0:	fs jns 0x14002e222
   14002e1c3:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   14002e1ca:	jb     0x14002e231
   14002e1cc:	jae    0x14002e241
   14002e1ce:	add    BYTE PTR [rax],al
   14002e1d0:	(bad)
   14002e1d5:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   14002e1dd:	jb     0x14002e248
   14002e1df:	jo     0x14002e255
   14002e1e1:	outs   dx,DWORD PTR ds:[rsi]
   14002e1e2:	jb     0x14002e1e4
   14002e1e4:	add    BYTE PTR [rax],al
   14002e1e6:	add    BYTE PTR [rax],al
   14002e1e8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e1eb:	outs   dx,BYTE PTR ds:[rsi]
   14002e1ec:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002e1f1:	outs   dx,BYTE PTR ds:[rsi]
   14002e1f2:	pop    rdi
   14002e1f3:	(bad)  
   14002e1f4:	(bad)  
   14002e1f5:	outs   dx,DWORD PTR ds:[rsi]
   14002e1f6:	jb     0x14002e26c
   14002e1f8:	gs add BYTE PTR fs:[rax],al
   14002e1fc:	add    BYTE PTR [rax],al
   14002e1fe:	add    BYTE PTR [rax],al
   14002e200:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e203:	outs   dx,BYTE PTR ds:[rsi]
   14002e204:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002e209:	outs   dx,BYTE PTR ds:[rsi]
   14002e20a:	pop    rdi
   14002e20b:	jb     0x14002e272
   14002e20d:	data16 jne 0x14002e283
   14002e210:	gs add BYTE PTR fs:[rax],al
   14002e214:	add    BYTE PTR [rax],al
   14002e216:	add    BYTE PTR [rax],al
   14002e218:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e21b:	outs   dx,BYTE PTR ds:[rsi]
   14002e21c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002e221:	outs   dx,BYTE PTR ds:[rsi]
   14002e222:	pop    rdi
   14002e223:	jb     0x14002e28a
   14002e225:	jae    0x14002e28c
   14002e227:	je     0x14002e229
   14002e229:	add    BYTE PTR [rax],al
   14002e22b:	add    BYTE PTR [rax],al
   14002e22d:	add    BYTE PTR [rax],al
   14002e22f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   14002e233:	je     0x14002e29e
   14002e235:	outs   dx,BYTE PTR ds:[rsi]
   14002e236:	(bad)  
   14002e237:	je     0x14002e2a2
   14002e239:	outs   dx,DWORD PTR ds:[rsi]
   14002e23a:	outs   dx,BYTE PTR ds:[rsi]
   14002e23b:	pop    rdi
   14002e23c:	(bad)  
   14002e23d:	fs fs jb 0x14002e2a6
   14002e241:	jae    0x14002e2b6
   14002e243:	pop    rdi
   14002e244:	jb     0x14002e2ab
   14002e246:	jno    0x14002e2bd
   14002e248:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14002e24f:	add    BYTE PTR [rdx+0x61],ah
   14002e252:	fs pop rdi
   14002e254:	(bad)  
   14002e255:	fs fs jb 0x14002e2be
   14002e259:	jae    0x14002e2ce
   14002e25b:	add    BYTE PTR [rax],al
   14002e25d:	add    BYTE PTR [rax],al
   14002e25f:	add    BYTE PTR [rax+0x6f],ch
   14002e262:	jae    0x14002e2d8
   14002e264:	pop    rdi
   14002e265:	jne    0x14002e2d5
   14002e267:	jb     0x14002e2ce
   14002e269:	(bad)  
   14002e26a:	movsxd ebp,DWORD PTR [rax+0x61]
   14002e26d:	(bad)  
   14002e26e:	ins    BYTE PTR es:[rdi],dx
   14002e26f:	add    BYTE PTR gs:[rax],al
   14002e272:	add    BYTE PTR [rax],al
   14002e274:	add    BYTE PTR [rax],al
   14002e276:	add    BYTE PTR [rax],al
   14002e278:	outs   dx,DWORD PTR ds:[rsi]
   14002e279:	jo     0x14002e2e0
   14002e27b:	jb     0x14002e2de
   14002e27d:	je     0x14002e2e8
   14002e27f:	outs   dx,DWORD PTR ds:[rsi]
   14002e280:	outs   dx,BYTE PTR ds:[rsi]
   14002e281:	pop    rdi
   14002e282:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   14002e289:	jb     0x14002e2f0
   14002e28b:	jae    0x14002e300
   14002e28d:	add    BYTE PTR [rax],al
   14002e28f:	add    BYTE PTR [rcx+0x6e],ch
   14002e292:	je     0x14002e2f9
   14002e294:	jb     0x14002e308
   14002e296:	jne    0x14002e308
   14002e298:	je     0x14002e2ff
   14002e29a:	add    BYTE PTR fs:[rax],al
   14002e29d:	add    BYTE PTR [rax],al
   14002e29f:	add    BYTE PTR [rcx+0x6e],ch
   14002e2a2:	jbe    0x14002e305
   14002e2a4:	ins    BYTE PTR es:[rdi],dx
   14002e2a5:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   14002e2ad:	outs   dx,BYTE PTR gs:[rsi]
   14002e2af:	je     0x14002e2b1
   14002e2b1:	add    BYTE PTR [rax],al
   14002e2b3:	add    BYTE PTR [rax],al
   14002e2b5:	add    BYTE PTR [rax],al
   14002e2b7:	add    BYTE PTR [rcx+0x6c],ah
   14002e2ba:	jb     0x14002e321
   14002e2bc:	(bad)  
   14002e2bd:	fs jns 0x14002e31f
   14002e2c0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e2c3:	outs   dx,BYTE PTR ds:[rsi]
   14002e2c4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002e2c9:	add    BYTE PTR [rax],al
   14002e2cb:	add    BYTE PTR [rax],al
   14002e2cd:	add    BYTE PTR [rax],al
   14002e2cf:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14002e2d3:	pop    rdi
   14002e2d4:	ins    DWORD PTR es:[rdi],dx
   14002e2d5:	(bad)  
   14002e2d6:	outs   dx,BYTE PTR ds:[rsi]
   14002e2d7:	jns    0x14002e338
   14002e2d9:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   14002e2e0:	jo     0x14002e347
   14002e2e2:	outs   dx,BYTE PTR ds:[rsi]
   14002e2e3:	add    BYTE PTR [rax],al
   14002e2e5:	add    BYTE PTR [rax],al
   14002e2e7:	add    BYTE PTR [rbp+0x65],ch
   14002e2ea:	jae    0x14002e35f
   14002e2ec:	(bad)  
   14002e2ed:	addr32 gs pop rdi
   14002e2f0:	jae    0x14002e35b
   14002e2f2:	jp     0x14002e359
   14002e2f4:	add    BYTE PTR [rax],al
   14002e2f6:	add    BYTE PTR [rax],al
   14002e2f8:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   14002e2ff:	gs pop rdi
   14002e301:	je     0x14002e372
   14002e303:	outs   dx,DWORD PTR ds:[rsi]
   14002e304:	pop    rdi
   14002e305:	ins    BYTE PTR es:[rdi],dx
   14002e306:	outs   dx,DWORD PTR ds:[rsi]
   14002e307:	outs   dx,BYTE PTR ds:[rsi]
   14002e308:	add    BYTE PTR [eax],al
   14002e30b:	add    BYTE PTR [rax],al
   14002e30d:	add    BYTE PTR [rax],al
   14002e30f:	add    BYTE PTR [rsi+0x65],ch
   14002e312:	je     0x14002e38b
   14002e314:	outs   dx,DWORD PTR ds:[rsi]
   14002e315:	jb     0x14002e382
   14002e317:	pop    rdi
   14002e318:	outs   dx,DWORD PTR fs:[rsi]
   14002e31a:	ja     0x14002e38a
   14002e31c:	add    BYTE PTR [rax],al
   14002e31e:	add    BYTE PTR [rax],al
   14002e320:	outs   dx,BYTE PTR ds:[rsi]
   14002e321:	gs je  0x14002e39b
   14002e324:	outs   dx,DWORD PTR ds:[rsi]
   14002e325:	jb     0x14002e392
   14002e327:	pop    rdi
   14002e328:	jb     0x14002e38f
   14002e32a:	jae    0x14002e391
   14002e32c:	je     0x14002e32e
   14002e32e:	add    BYTE PTR [rax],al
   14002e330:	outs   dx,BYTE PTR ds:[rsi]
   14002e331:	gs je  0x14002e3ab
   14002e334:	outs   dx,DWORD PTR ds:[rsi]
   14002e335:	jb     0x14002e3a2
   14002e337:	pop    rdi
   14002e338:	jne    0x14002e3a8
   14002e33a:	jb     0x14002e3a1
   14002e33c:	(bad)  
   14002e33d:	movsxd ebp,DWORD PTR [rax+0x61]
   14002e340:	(bad)  
   14002e341:	ins    BYTE PTR es:[rdi],dx
   14002e342:	add    BYTE PTR gs:[rax],al
   14002e345:	add    BYTE PTR [rax],al
   14002e347:	add    BYTE PTR [rsi+0x6f],ch
   14002e34a:	pop    rdi
   14002e34b:	(bad)  
   14002e34c:	jne    0x14002e3b4
   14002e34e:	data16 gs jb 0x14002e3b1
   14002e352:	jae    0x14002e3c4
   14002e354:	(bad)  
   14002e355:	movsxd esp,DWORD PTR [rbp+0x0]
   14002e358:	outs   dx,BYTE PTR ds:[rsi]
   14002e359:	outs   dx,DWORD PTR ds:[rsi]
   14002e35a:	pop    rdi
   14002e35b:	jo     0x14002e3cf
   14002e35d:	outs   dx,DWORD PTR ds:[rsi]
   14002e35e:	je     0x14002e3cf
   14002e360:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14002e363:	pop    rdi
   14002e364:	outs   dx,DWORD PTR ds:[rsi]
   14002e365:	jo     0x14002e3db
   14002e367:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14002e36e:	add    BYTE PTR [rax],al
   14002e370:	outs   dx,BYTE PTR ds:[rsi]
   14002e371:	outs   dx,DWORD PTR ds:[rsi]
   14002e372:	je     0x14002e3d3
   14002e374:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e377:	outs   dx,BYTE PTR ds:[rsi]
   14002e378:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002e37d:	add    BYTE PTR [rax],al
   14002e37f:	add    BYTE PTR [rsi+0x6f],ch
   14002e382:	je     0x14002e3e3
   14002e384:	(bad)  
   14002e385:	pop    rdi
   14002e386:	jae    0x14002e3f7
   14002e388:	movsxd ebp,DWORD PTR [rbx+0x65]
   14002e38b:	je     0x14002e38d
   14002e38d:	add    BYTE PTR [rax],al
   14002e38f:	add    BYTE PTR [rdi+0x70],ch
   14002e392:	gs jb  0x14002e3f6
   14002e395:	je     0x14002e400
   14002e397:	outs   dx,DWORD PTR ds:[rsi]
   14002e398:	outs   dx,BYTE PTR ds:[rsi]
   14002e399:	pop    rdi
   14002e39a:	outs   dx,BYTE PTR ds:[rsi]
   14002e39b:	outs   dx,DWORD PTR ds:[rsi]
   14002e39c:	je     0x14002e3fd
   14002e39e:	jae    0x14002e415
   14002e3a0:	jo     0x14002e412
   14002e3a2:	outs   dx,DWORD PTR ds:[rsi]
   14002e3a3:	jb     0x14002e419
   14002e3a5:	gs add BYTE PTR fs:[rax+0x72],dh
   14002e3aa:	outs   dx,DWORD PTR ds:[rsi]
   14002e3ab:	je     0x14002e41c
   14002e3ad:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14002e3b0:	pop    rdi
   14002e3b1:	outs   dx,BYTE PTR ds:[rsi]
   14002e3b2:	outs   dx,DWORD PTR ds:[rsi]
   14002e3b3:	je     0x14002e414
   14002e3b5:	jae    0x14002e42c
   14002e3b7:	jo     0x14002e429
   14002e3b9:	outs   dx,DWORD PTR ds:[rsi]
   14002e3ba:	jb     0x14002e430
   14002e3bc:	gs add BYTE PTR fs:[rax],al
   14002e3c0:	ja     0x14002e434
   14002e3c2:	outs   dx,DWORD PTR ds:[rsi]
   14002e3c3:	outs   dx,BYTE PTR ds:[rsi]
   14002e3c4:	addr32 pop rdi
   14002e3c6:	jo     0x14002e43a
   14002e3c8:	outs   dx,DWORD PTR ds:[rsi]
   14002e3c9:	je     0x14002e43a
   14002e3cb:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14002e3ce:	pop    rdi
   14002e3cf:	je     0x14002e44a
   14002e3d1:	jo     0x14002e438
   14002e3d3:	add    BYTE PTR [rax],al
   14002e3d5:	add    BYTE PTR [rax],al
   14002e3d7:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   14002e3db:	gs fs pop rdi
   14002e3de:	outs   dx,DWORD PTR ds:[rsi]
   14002e3df:	jne    0x14002e455
   14002e3e1:	add    BYTE PTR [rax],al
   14002e3e3:	add    BYTE PTR [rax],al
   14002e3e5:	add    BYTE PTR [rax],al
   14002e3e7:	add    BYTE PTR [rdi+0x70],ch
   14002e3ea:	gs jb  0x14002e44e
   14002e3ed:	je     0x14002e458
   14002e3ef:	outs   dx,DWORD PTR ds:[rsi]
   14002e3f0:	outs   dx,BYTE PTR ds:[rsi]
   14002e3f1:	pop    rdi
   14002e3f2:	ja     0x14002e463
   14002e3f4:	jne    0x14002e462
   14002e3f6:	fs pop rdi
   14002e3f8:	(bad)  
   14002e3f9:	ins    BYTE PTR es:[rdi],dx
   14002e3fa:	outs   dx,DWORD PTR ds:[rsi]
   14002e3fb:	movsxd ebp,DWORD PTR [rbx+0x0]
   14002e3fe:	add    BYTE PTR [rax],al
   14002e400:	(bad)  
   14002e401:	fs fs jb 0x14002e46a
   14002e405:	jae    0x14002e47a
   14002e407:	and    BYTE PTR [rsi+0x61],ah
   14002e40a:	ins    DWORD PTR es:[rdi],dx
   14002e40b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   14002e413:	jae    0x14002e48a
   14002e415:	jo     0x14002e487
   14002e417:	outs   dx,DWORD PTR ds:[rsi]
   14002e418:	jb     0x14002e48e
   14002e41a:	gs add BYTE PTR fs:[rax],al
   14002e41e:	add    BYTE PTR [rax],al
   14002e420:	(bad)  
   14002e421:	fs fs jb 0x14002e48a
   14002e425:	jae    0x14002e49a
   14002e427:	and    BYTE PTR [rcx+0x6e],ch
   14002e42a:	and    BYTE PTR [rbp+0x73],dh
   14002e42d:	add    BYTE PTR gs:[rax],al
   14002e430:	(bad)  
   14002e431:	fs fs jb 0x14002e49a
   14002e435:	jae    0x14002e4aa
   14002e437:	and    BYTE PTR [rsi+0x6f],ch
   14002e43a:	je     0x14002e45c
   14002e43c:	(bad)  
   14002e43d:	jbe    0x14002e4a0
   14002e43f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14002e447:	add    BYTE PTR [rcx+0x6c],ah
   14002e44a:	jb     0x14002e4b1
   14002e44c:	(bad)  
   14002e44d:	fs jns 0x14002e470
   14002e450:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e453:	outs   dx,BYTE PTR ds:[rsi]
   14002e454:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002e459:	add    BYTE PTR [rax],al
   14002e45b:	add    BYTE PTR [rax],al
   14002e45d:	add    BYTE PTR [rax],al
   14002e45f:	add    BYTE PTR [rcx+0x72],ah
   14002e462:	addr32 jne 0x14002e4d2
   14002e465:	outs   dx,BYTE PTR gs:[rsi]
   14002e467:	je     0x14002e489
   14002e469:	ins    BYTE PTR es:[rdi],dx
   14002e46a:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   14002e471:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14002e475:	add    BYTE PTR [eax],al
   14002e478:	(bad)  
   14002e479:	jb     0x14002e4e2
   14002e47b:	jne    0x14002e4ea
   14002e47d:	outs   dx,BYTE PTR gs:[rsi]
   14002e47f:	je     0x14002e4a1
   14002e481:	outs   dx,DWORD PTR ds:[rsi]
   14002e482:	jne    0x14002e4f8
   14002e484:	and    BYTE PTR [rdi+0x66],ch
   14002e487:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   14002e48b:	(bad)  
   14002e48c:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   14002e493:	and    BYTE PTR [rcx+0x64],ah
   14002e496:	fs jb  0x14002e4fe
   14002e499:	jae    0x14002e50e
   14002e49b:	add    BYTE PTR [rax],al
   14002e49d:	add    BYTE PTR [rax],al
   14002e49f:	add    BYTE PTR [rdx+0x61],ah
   14002e4a2:	and    BYTE PTR fs:[rsi+0x69],ah
   14002e4a6:	ins    BYTE PTR es:[rdi],dx
   14002e4a7:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   14002e4ac:	movsxd esi,DWORD PTR [rdx+0x69]
   14002e4af:	jo     0x14002e525
   14002e4b1:	outs   dx,DWORD PTR ds:[rsi]
   14002e4b2:	jb     0x14002e4b4
   14002e4b4:	add    BYTE PTR [rax],al
   14002e4b6:	add    BYTE PTR [rax],al
   14002e4b8:	(bad)
   14002e4bd:	gs jae 0x14002e533
   14002e4c0:	(bad)  
   14002e4c1:	add    BYTE PTR gs:[eax],al
   14002e4c5:	add    BYTE PTR [rax],al
   14002e4c7:	add    BYTE PTR [rdx+0x72],ah
   14002e4ca:	outs   dx,DWORD PTR ds:[rsi]
   14002e4cb:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   14002e4cf:	jo     0x14002e53a
   14002e4d1:	jo     0x14002e538
   14002e4d3:	add    BYTE PTR [rax],al
   14002e4d5:	add    BYTE PTR [rax],al
   14002e4d7:	add    BYTE PTR [rbx+0x6f],ah
   14002e4da:	outs   dx,BYTE PTR ds:[rsi]
   14002e4db:	outs   dx,BYTE PTR ds:[rsi]
   14002e4dc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002e4e1:	outs   dx,BYTE PTR ds:[rsi]
   14002e4e2:	and    BYTE PTR [rcx+0x62],ah
   14002e4e5:	outs   dx,DWORD PTR ds:[rsi]
   14002e4e6:	jb     0x14002e55c
   14002e4e8:	gs add BYTE PTR fs:[rax],al
   14002e4ec:	add    BYTE PTR [rax],al
   14002e4ee:	add    BYTE PTR [rax],al
   14002e4f0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e4f3:	outs   dx,BYTE PTR ds:[rsi]
   14002e4f4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002e4f9:	outs   dx,BYTE PTR ds:[rsi]
   14002e4fa:	and    BYTE PTR [rcx+0x6c],ah
   14002e4fd:	jb     0x14002e564
   14002e4ff:	(bad)  
   14002e500:	fs jns 0x14002e523
   14002e503:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   14002e50a:	jb     0x14002e571
   14002e50c:	jae    0x14002e581
   14002e50e:	add    BYTE PTR [rax],al
   14002e510:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e513:	outs   dx,BYTE PTR ds:[rsi]
   14002e514:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002e519:	outs   dx,BYTE PTR ds:[rsi]
   14002e51a:	and    BYTE PTR [rdx+0x65],dh
   14002e51d:	data16 jne 0x14002e593
   14002e520:	gs add BYTE PTR fs:[rax],al
   14002e524:	add    BYTE PTR [rax],al
   14002e526:	add    BYTE PTR [rax],al
   14002e528:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e52b:	outs   dx,BYTE PTR ds:[rsi]
   14002e52c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002e531:	outs   dx,BYTE PTR ds:[rsi]
   14002e532:	and    BYTE PTR [rdx+0x65],dh
   14002e535:	jae    0x14002e59c
   14002e537:	je     0x14002e539
   14002e539:	add    BYTE PTR [rax],al
   14002e53b:	add    BYTE PTR [rax],al
   14002e53d:	add    BYTE PTR [rax],al
   14002e53f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   14002e543:	je     0x14002e5ae
   14002e545:	outs   dx,BYTE PTR ds:[rsi]
   14002e546:	(bad)  
   14002e547:	je     0x14002e5b2
   14002e549:	outs   dx,DWORD PTR ds:[rsi]
   14002e54a:	outs   dx,BYTE PTR ds:[rsi]
   14002e54b:	and    BYTE PTR [rcx+0x64],ah
   14002e54e:	fs jb  0x14002e5b6
   14002e551:	jae    0x14002e5c6
   14002e553:	and    BYTE PTR [rdx+0x65],dh
   14002e556:	jno    0x14002e5cd
   14002e558:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14002e55f:	add    BYTE PTR [rbp+0x78],ah
   14002e562:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   14002e566:	(bad)  
   14002e567:	(bad)  
   14002e568:	ins    BYTE PTR es:[rdi],dx
   14002e569:	and    BYTE PTR gs:[rsi+0x6f],ah
   14002e56d:	jb     0x14002e5dc
   14002e56f:	(bad)  
   14002e570:	je     0x14002e592
   14002e572:	gs jb  0x14002e5e7
   14002e575:	outs   dx,DWORD PTR ds:[rsi]
   14002e576:	jb     0x14002e578
   14002e578:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   14002e57f:	outs   dx,DWORD PTR ds:[rsi]
   14002e580:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14002e584:	add    BYTE PTR gs:[eax],al
   14002e588:	push   0x2074736f
   14002e58d:	jne    0x14002e5fd
   14002e58f:	jb     0x14002e5f6
   14002e591:	(bad)  
   14002e592:	movsxd ebp,DWORD PTR [rax+0x61]
   14002e595:	(bad)  
   14002e596:	ins    BYTE PTR es:[rdi],dx
   14002e597:	add    BYTE PTR gs:[rax],al
   14002e59a:	add    BYTE PTR [rax],al
   14002e59c:	add    BYTE PTR [rax],al
   14002e59e:	add    BYTE PTR [rax],al
   14002e5a0:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   14002e5a8:	gs jb  0x14002e5cb
   14002e5ab:	jb     0x14002e612
   14002e5ad:	ins    DWORD PTR es:[rdi],dx
   14002e5ae:	outs   dx,DWORD PTR ds:[rsi]
   14002e5af:	jbe    0x14002e616
   14002e5b1:	add    BYTE PTR fs:[rax],al
   14002e5b4:	add    BYTE PTR [rax],al
   14002e5b6:	add    BYTE PTR [rax],al
   14002e5b8:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   14002e5c0:	(bad)  
   14002e5c1:	jns    0x14002e637
   14002e5c3:	and    BYTE PTR gs:[rbx+0x65],dh
   14002e5c7:	jno    0x14002e63e
   14002e5c9:	outs   dx,BYTE PTR gs:[rsi]
   14002e5cb:	movsxd esp,DWORD PTR [rbp+0x0]
   14002e5ce:	add    BYTE PTR [rax],al
   14002e5d0:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   14002e5d7:	jo     0x14002e64b
   14002e5d9:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   14002e5e0:	and    BYTE PTR [rbx+0x6f],ah
   14002e5e3:	outs   dx,BYTE PTR ds:[rsi]
   14002e5e4:	je     0x14002e658
   14002e5e6:	outs   dx,DWORD PTR ds:[rsi]
   14002e5e7:	ins    BYTE PTR es:[rdi],dx
   14002e5e8:	and    BYTE PTR [rdi+0x70],ch
   14002e5eb:	gs jb  0x14002e64f
   14002e5ee:	je     0x14002e659
   14002e5f0:	outs   dx,DWORD PTR ds:[rsi]
   14002e5f1:	outs   dx,BYTE PTR ds:[rsi]
   14002e5f2:	add    BYTE PTR [rax],al
   14002e5f4:	add    BYTE PTR [rax],al
   14002e5f6:	add    BYTE PTR [rax],al
   14002e5f8:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14002e5ff:	and    BYTE PTR [rbx+0x65],dh
   14002e602:	imul   eax,DWORD PTR gs:[rax],0x0
   14002e606:	add    BYTE PTR [rax],al
   14002e608:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   14002e60f:	jb     0x14002e676
   14002e611:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e615:	jns    0x14002e617
   14002e617:	add    BYTE PTR [rbp+0x65],ch
   14002e61a:	jae    0x14002e68f
   14002e61c:	(bad)  
   14002e61d:	and    BYTE PTR gs:[ebx+0x69],dh
   14002e622:	jp     0x14002e689
   14002e624:	add    BYTE PTR [rax],al
   14002e626:	add    BYTE PTR [rax],al
   14002e628:	outs   dx,BYTE PTR ds:[rsi]
   14002e629:	gs je  0x14002e6a3
   14002e62c:	outs   dx,DWORD PTR ds:[rsi]
   14002e62d:	jb     0x14002e69a
   14002e62f:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   14002e633:	outs   dx,BYTE PTR ds:[rsi]
   14002e634:	add    BYTE PTR [rax],al
   14002e636:	add    BYTE PTR [rax],al
   14002e638:	outs   dx,BYTE PTR ds:[rsi]
   14002e639:	gs je  0x14002e6b3
   14002e63c:	outs   dx,DWORD PTR ds:[rsi]
   14002e63d:	jb     0x14002e6aa
   14002e63f:	and    BYTE PTR [rdx+0x65],dh
   14002e642:	jae    0x14002e6a9
   14002e644:	je     0x14002e646
   14002e646:	add    BYTE PTR [rax],al
   14002e648:	outs   dx,BYTE PTR ds:[rsi]
   14002e649:	gs je  0x14002e6c3
   14002e64c:	outs   dx,DWORD PTR ds:[rsi]
   14002e64d:	jb     0x14002e6ba
   14002e64f:	and    BYTE PTR [rbp+0x6e],dh
   14002e652:	jb     0x14002e6b9
   14002e654:	(bad)  
   14002e655:	movsxd ebp,DWORD PTR [rax+0x61]
   14002e658:	(bad)  
   14002e659:	ins    BYTE PTR es:[rdi],dx
   14002e65a:	add    BYTE PTR gs:[rax],al
   14002e65d:	add    BYTE PTR [rax],al
   14002e65f:	add    BYTE PTR [rsi+0x6f],ch
   14002e662:	and    BYTE PTR [rdx+0x75],ah
   14002e665:	data16 data16 gs jb 0x14002e68a
   14002e66a:	jae    0x14002e6dc
   14002e66c:	(bad)  
   14002e66d:	movsxd esp,DWORD PTR [rbp+0x0]
   14002e670:	outs   dx,BYTE PTR ds:[rsi]
   14002e671:	outs   dx,DWORD PTR ds:[rsi]
   14002e672:	and    BYTE PTR [rbx+0x68],ah
   14002e675:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   14002e67d:	gs jae 0x14002e6f3
	...
   14002e688:	outs   dx,BYTE PTR ds:[rsi]
   14002e689:	outs   dx,DWORD PTR ds:[rsi]
   14002e68a:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14002e68e:	imul   eax,DWORD PTR [rax],0x6e
   14002e691:	outs   dx,DWORD PTR ds:[rsi]
   14002e692:	and    BYTE PTR [rbp+0x65],ch
   14002e695:	jae    0x14002e70a
   14002e697:	(bad)  
   14002e698:	and    BYTE PTR gs:[ecx+0x76],ah
   14002e69d:	(bad)  
   14002e69e:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14002e6a6:	add    BYTE PTR [rax],al
   14002e6a8:	outs   dx,BYTE PTR ds:[rsi]
   14002e6a9:	outs   dx,DWORD PTR ds:[rsi]
   14002e6aa:	and    BYTE PTR [rbp+0x65],ch
   14002e6ad:	jae    0x14002e722
   14002e6af:	(bad)  
   14002e6b0:	add    BYTE PTR gs:[eax],al
   14002e6b4:	add    BYTE PTR [rax],al
   14002e6b6:	add    BYTE PTR [rax],al
   14002e6b8:	outs   dx,BYTE PTR ds:[rsi]
   14002e6b9:	outs   dx,DWORD PTR ds:[rsi]
   14002e6ba:	and    BYTE PTR [rax+0x72],dh
   14002e6bd:	outs   dx,DWORD PTR ds:[rsi]
   14002e6be:	je     0x14002e72f
   14002e6c0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14002e6c3:	and    BYTE PTR [rdi+0x70],ch
   14002e6c6:	je     0x14002e731
   14002e6c8:	outs   dx,DWORD PTR ds:[rsi]
   14002e6c9:	outs   dx,BYTE PTR ds:[rsi]
   14002e6ca:	add    BYTE PTR [rax],al
   14002e6cc:	add    BYTE PTR [rax],al
   14002e6ce:	add    BYTE PTR [rax],al
   14002e6d0:	outs   dx,BYTE PTR ds:[rsi]
   14002e6d1:	outs   dx,DWORD PTR ds:[rsi]
   14002e6d2:	and    BYTE PTR [rbx+0x74],dh
   14002e6d5:	jb     0x14002e73c
   14002e6d7:	(bad)  
   14002e6d8:	ins    DWORD PTR es:[rdi],dx
   14002e6d9:	and    BYTE PTR [rdx+0x65],dh
   14002e6dc:	jae    0x14002e74d
   14002e6de:	jne    0x14002e752
   14002e6e0:	movsxd esp,DWORD PTR [rbp+0x73]
   14002e6e3:	add    BYTE PTR [rax],al
   14002e6e5:	add    BYTE PTR [rax],al
   14002e6e7:	add    BYTE PTR [rsi+0x6f],ch
   14002e6ea:	and    BYTE PTR [rbx+0x75],dh
   14002e6ed:	movsxd ebp,DWORD PTR [rax+0x20]
   14002e6f0:	fs gs jbe 0x14002e75d
   14002e6f4:	movsxd esp,DWORD PTR [rbp+0x20]
   14002e6f7:	outs   dx,DWORD PTR ds:[rsi]
   14002e6f8:	jb     0x14002e71a
   14002e6fa:	(bad)  
   14002e6fb:	fs fs jb 0x14002e764
   14002e6ff:	jae    0x14002e774
   14002e701:	add    BYTE PTR [rax],al
   14002e703:	add    BYTE PTR [rax],al
   14002e705:	add    BYTE PTR [rax],al
   14002e707:	add    BYTE PTR [rsi+0x6f],ch
   14002e70a:	and    BYTE PTR [rbx+0x75],dh
   14002e70d:	movsxd ebp,DWORD PTR [rax+0x20]
   14002e710:	jo     0x14002e784
   14002e712:	outs   dx,DWORD PTR ds:[rsi]
   14002e713:	movsxd esp,DWORD PTR [rbp+0x73]
   14002e716:	jae    0x14002e718
   14002e718:	outs   dx,BYTE PTR ds:[rsi]
   14002e719:	outs   dx,DWORD PTR ds:[rsi]
   14002e71a:	je     0x14002e73c
   14002e71c:	(bad)  
   14002e71d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14002e721:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14002e726:	jns    0x14002e728
   14002e728:	outs   dx,BYTE PTR ds:[rsi]
   14002e729:	outs   dx,DWORD PTR ds:[rsi]
   14002e72a:	je     0x14002e74c
   14002e72c:	(bad)  
   14002e72d:	and    BYTE PTR [rbx+0x6f],dh
   14002e730:	movsxd ebp,DWORD PTR [rbx+0x65]
   14002e733:	je     0x14002e735
   14002e735:	add    BYTE PTR [rax],al
   14002e737:	add    BYTE PTR [rsi+0x6f],ch
   14002e73a:	je     0x14002e75c
   14002e73c:	(bad)  
   14002e73d:	and    BYTE PTR [rbx+0x74],dh
   14002e740:	jb     0x14002e7a7
   14002e742:	(bad)  
   14002e743:	ins    DWORD PTR es:[rdi],dx
   14002e744:	add    BYTE PTR [rax],al
   14002e746:	add    BYTE PTR [rax],al
   14002e748:	outs   dx,BYTE PTR ds:[rsi]
   14002e749:	outs   dx,DWORD PTR ds:[rsi]
   14002e74a:	je     0x14002e76c
   14002e74c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e74f:	outs   dx,BYTE PTR ds:[rsi]
   14002e750:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002e755:	add    BYTE PTR [rax],al
   14002e757:	add    BYTE PTR [rsi+0x6f],ch
   14002e75a:	je     0x14002e77c
   14002e75c:	jae    0x14002e7d3
   14002e75e:	jo     0x14002e7d0
   14002e760:	outs   dx,DWORD PTR ds:[rsi]
   14002e761:	jb     0x14002e7d7
   14002e763:	gs add BYTE PTR fs:[rax],al
   14002e767:	add    BYTE PTR [rdi+0x70],ch
   14002e76a:	gs jb  0x14002e7ce
   14002e76d:	je     0x14002e7d8
   14002e76f:	outs   dx,DWORD PTR ds:[rsi]
   14002e770:	outs   dx,BYTE PTR ds:[rsi]
   14002e771:	and    BYTE PTR [rcx+0x6e],ch
   14002e774:	and    BYTE PTR [rax+0x72],dh
   14002e777:	outs   dx,DWORD PTR ds:[rsi]
   14002e778:	addr32 jb 0x14002e7e0
   14002e77b:	jae    0x14002e7f0
   14002e77d:	add    BYTE PTR [rax],al
   14002e77f:	add    BYTE PTR [rdi+0x70],ch
   14002e782:	gs jb  0x14002e7e6
   14002e785:	je     0x14002e7f0
   14002e787:	outs   dx,DWORD PTR ds:[rsi]
   14002e788:	outs   dx,BYTE PTR ds:[rsi]
   14002e789:	and    BYTE PTR [rsi+0x6f],ch
   14002e78c:	je     0x14002e7ae
   14002e78e:	jo     0x14002e7f5
   14002e790:	jb     0x14002e7ff
   14002e792:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   14002e79a:	gs jb  0x14002e7fe
   14002e79d:	je     0x14002e808
   14002e79f:	outs   dx,DWORD PTR ds:[rsi]
   14002e7a0:	outs   dx,BYTE PTR ds:[rsi]
   14002e7a1:	and    BYTE PTR [rsi+0x6f],ch
   14002e7a4:	je     0x14002e7c6
   14002e7a6:	jae    0x14002e81d
   14002e7a8:	jo     0x14002e81a
   14002e7aa:	outs   dx,DWORD PTR ds:[rsi]
   14002e7ab:	jb     0x14002e821
   14002e7ad:	gs add BYTE PTR fs:[rdi+0x70],ch
   14002e7b2:	gs jb  0x14002e816
   14002e7b5:	je     0x14002e820
   14002e7b7:	outs   dx,DWORD PTR ds:[rsi]
   14002e7b8:	outs   dx,BYTE PTR ds:[rsi]
   14002e7b9:	and    BYTE PTR [rdi+0x6f],dh
   14002e7bc:	jne    0x14002e82a
   14002e7be:	and    BYTE PTR fs:[rdx+0x6c],ah
   14002e7c2:	outs   dx,DWORD PTR ds:[rsi]
   14002e7c3:	movsxd ebp,DWORD PTR [rbx+0x0]
   14002e7c6:	add    BYTE PTR [rax],al
   14002e7c8:	outs   dx,DWORD PTR ds:[rsi]
   14002e7c9:	ja     0x14002e839
   14002e7cb:	gs jb  0x14002e7ee
   14002e7ce:	fs gs (bad) 
   14002e7d1:	add    BYTE PTR fs:[rax],al
   14002e7d4:	add    BYTE PTR [rax],al
   14002e7d6:	add    BYTE PTR [rax],al
   14002e7d8:	jo     0x14002e84c
   14002e7da:	outs   dx,DWORD PTR ds:[rsi]
   14002e7db:	je     0x14002e84c
   14002e7dd:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14002e7e0:	and    BYTE PTR [rbp+0x72],ah
   14002e7e3:	jb     0x14002e854
   14002e7e5:	jb     0x14002e7e7
   14002e7e7:	add    BYTE PTR [rax+0x72],dh
   14002e7ea:	outs   dx,DWORD PTR ds:[rsi]
   14002e7eb:	je     0x14002e85c
   14002e7ed:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14002e7f0:	and    BYTE PTR [rsi+0x6f],ch
   14002e7f3:	je     0x14002e815
   14002e7f5:	jae    0x14002e86c
   14002e7f7:	jo     0x14002e869
   14002e7f9:	outs   dx,DWORD PTR ds:[rsi]
   14002e7fa:	jb     0x14002e870
   14002e7fc:	gs add BYTE PTR fs:[rax],al
   14002e800:	jb     0x14002e867
   14002e802:	(bad)  
   14002e803:	and    BYTE PTR fs:[rdi+0x6e],ch
   14002e807:	ins    BYTE PTR es:[rdi],dx
   14002e808:	jns    0x14002e82a
   14002e80a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   14002e811:	jae    0x14002e887
   14002e813:	gs ins DWORD PTR es:[rdi],dx
   14002e815:	add    BYTE PTR [rax],al
   14002e817:	add    BYTE PTR [rdx+0x65],dh
   14002e81a:	jae    0x14002e88b
   14002e81c:	jne    0x14002e890
   14002e81e:	movsxd esp,DWORD PTR [rbp+0x20]
   14002e821:	fs gs (bad) 
   14002e824:	fs ins BYTE PTR es:[rdi],dx
   14002e826:	outs   dx,DWORD PTR ds:[rsi]
   14002e827:	movsxd ebp,DWORD PTR [rbx+0x20]
   14002e82a:	ja     0x14002e89b
   14002e82c:	jne    0x14002e89a
   14002e82e:	and    BYTE PTR fs:[rdi+0x63],ch
   14002e832:	movsxd esi,DWORD PTR [rbp+0x72]
   14002e835:	add    BYTE PTR [rax],al
   14002e837:	add    BYTE PTR [rdx+0x65],dh
   14002e83a:	jae    0x14002e8b1
   14002e83c:	ins    BYTE PTR es:[rdi],dx
   14002e83d:	je     0x14002e85f
   14002e83f:	outs   dx,DWORD PTR ds:[rsi]
   14002e840:	jne    0x14002e8b6
   14002e842:	and    BYTE PTR [rdi+0x66],ch
   14002e845:	and    BYTE PTR [rdx+0x61],dh
   14002e848:	outs   dx,BYTE PTR ds:[rsi]
   14002e849:	add    BYTE PTR gs:[eax],al
   14002e84d:	add    BYTE PTR [rax],al
   14002e84f:	add    BYTE PTR [rbx+0x74],dh
   14002e852:	(bad)  
   14002e853:	je     0x14002e8ba
   14002e855:	and    BYTE PTR [rsi+0x6f],ch
   14002e858:	je     0x14002e87a
   14002e85a:	jb     0x14002e8c1
   14002e85c:	movsxd ebp,DWORD PTR [rdi+0x76]
   14002e85f:	gs jb  0x14002e8c3
   14002e862:	(bad)  
   14002e863:	ins    BYTE PTR es:[rdi],dx
   14002e864:	add    BYTE PTR gs:[rax],al
   14002e867:	add    BYTE PTR [rbx+0x74],dh
   14002e86a:	jb     0x14002e8d1
   14002e86c:	(bad)  
   14002e86d:	ins    DWORD PTR es:[rdi],dx
   14002e86e:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   14002e872:	outs   dx,DWORD PTR gs:[rsi]
   14002e874:	jne    0x14002e8ea
   14002e876:	add    BYTE PTR [rax],al
   14002e878:	je     0x14002e8df
   14002e87a:	js     0x14002e8f0
   14002e87c:	and    BYTE PTR [rsi+0x69],ah
   14002e87f:	ins    BYTE PTR es:[rdi],dx
   14002e880:	and    BYTE PTR gs:[rdx+0x75],ah
   14002e884:	jae    0x14002e8ff
   14002e886:	add    BYTE PTR [rax],al
   14002e888:	je     0x14002e8f3
   14002e88a:	ins    DWORD PTR es:[rdi],dx
   14002e88b:	gs and BYTE PTR fs:[rdi+0x75],ch
   14002e890:	je     0x14002e892
   14002e892:	add    BYTE PTR [rax],al
   14002e894:	add    BYTE PTR [rax],al
   14002e896:	add    BYTE PTR [rax],al
   14002e898:	je     0x14002e909
   14002e89a:	outs   dx,DWORD PTR ds:[rsi]
   14002e89b:	and    BYTE PTR [rbp+0x61],ch
   14002e89e:	outs   dx,BYTE PTR ds:[rsi]
   14002e89f:	jns    0x14002e8c1
   14002e8a1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   14002e8a8:	jo     0x14002e90f
   14002e8aa:	outs   dx,BYTE PTR ds:[rsi]
   14002e8ab:	and    BYTE PTR [rcx+0x6e],ch
   14002e8ae:	and    BYTE PTR [rbx+0x79],dh
   14002e8b1:	jae    0x14002e927
   14002e8b3:	gs ins DWORD PTR es:[rdi],dx
   14002e8b5:	add    BYTE PTR [rax],al
   14002e8b7:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14002e8bb:	and    BYTE PTR [rbp+0x61],ch
   14002e8be:	outs   dx,BYTE PTR ds:[rsi]
   14002e8bf:	jns    0x14002e8e1
   14002e8c1:	ins    BYTE PTR es:[rdi],dx
   14002e8c2:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   14002e8c9:	outs   dx,DWORD PTR ds:[rsi]
   14002e8ca:	outs   dx,DWORD PTR ds:[rsi]
   14002e8cb:	and    BYTE PTR [rbp+0x61],ch
   14002e8ce:	outs   dx,BYTE PTR ds:[rsi]
   14002e8cf:	jns    0x14002e8f1
   14002e8d1:	jae    0x14002e94c
   14002e8d3:	ins    DWORD PTR es:[rdi],dx
   14002e8d4:	(bad)  
   14002e8d5:	outs   dx,DWORD PTR ds:[rsi]
   14002e8d6:	ins    BYTE PTR es:[rdi],dx
   14002e8d7:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   14002e8de:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14002e8e2:	gs ins BYTE PTR es:[rdi],dx
   14002e8e4:	jae    0x14002e8e6
   14002e8e6:	add    BYTE PTR [rax],al
   14002e8e8:	jbe    0x14002e94b
   14002e8ea:	ins    BYTE PTR es:[rdi],dx
   14002e8eb:	jne    0x14002e952
   14002e8ed:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   14002e8f1:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14002e8f5:	add    BYTE PTR gs:[edi+0x72],dh
   14002e8fa:	outs   dx,DWORD PTR ds:[rsi]
   14002e8fb:	outs   dx,BYTE PTR ds:[rsi]
   14002e8fc:	and    BYTE PTR [eax+0x72],dh
   14002e900:	outs   dx,DWORD PTR ds:[rsi]
   14002e901:	je     0x14002e972
   14002e903:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14002e906:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14002e90a:	add    BYTE PTR gs:[rdi+0x68],bl
   14002e90e:	jns    0x14002e980
   14002e910:	outs   dx,DWORD PTR ds:[rsi]
   14002e911:	je     0x14002e913
   14002e913:	add    BYTE PTR [rax],al
   14002e915:	add    BYTE PTR [rax],al
   14002e917:	add    bh,bh
   14002e919:	(bad)  
   14002e91a:	(bad)  
   14002e91b:	(bad)  
   14002e91c:	(bad)  
   14002e91d:	(bad)  
   14002e91e:	out    dx,eax
   14002e91f:	jg     0x14002e921
   14002e921:	add    BYTE PTR [rax],al
   14002e923:	add    BYTE PTR [rax],al
   14002e925:	add    BYTE PTR [rax+0xa5],dl
   14002e92b:	add    BYTE PTR [rax],al
   14002e92d:	add    BYTE PTR [rax],al
   14002e92f:	add    BYTE PTR [rbx+0x73],ah
   14002e932:	ins    DWORD PTR es:[rdi],dx
   14002e933:	loopne 0x14002e936
	...
   14002e945:	add    BYTE PTR [rax],al
   14002e947:	add    BYTE PTR [rax+rax*1],al
   14002e94a:	add    BYTE PTR [rax],al
   14002e94c:	add    BYTE PTR [rax],al
   14002e94e:	add    BYTE PTR [rax],al
   14002e950:	and    BYTE PTR [rip+0x1993],al        # 0x1400302e9
	...
   14002e972:	add    BYTE PTR [rax],al
   14002e974:	add    DWORD PTR [rax],eax
   14002e976:	add    BYTE PTR [rax],al
   14002e978:	add    al,BYTE PTR [rax]
   14002e97a:	add    BYTE PTR [rax],al
   14002e97c:	add    eax,DWORD PTR [rax]
   14002e97e:	add    BYTE PTR [rax],al
   14002e980:	add    al,0x0
	...
   14002e98e:	add    BYTE PTR [rax],al
   14002e990:	sub    DWORD PTR [rax],eax
   14002e992:	add    BYTE PTR [rax+0x1],al
	...
   14002e9a8:	sldt   WORD PTR [rax]
   14002e9ab:	add    BYTE PTR [rax],al
   14002e9ad:	add    BYTE PTR [rax],al
   14002e9af:	add    BYTE PTR [rax],ah
   14002e9b1:	add    eax,0x1993
	...
   14002ea26:	add    BYTE PTR [rax],al
   14002ea28:	test   al,0x63
   14002ea2a:	add    eax,DWORD PTR [rax+0x1]
   14002ea2d:	add    BYTE PTR [rax],al
   14002ea2f:	add    BYTE PTR [rax],al
   14002ea31:	jb     0x14002ea33
   14002ea33:	rex add DWORD PTR [rax],eax
   14002ea36:	add    BYTE PTR [rax],al
   14002ea38:	jl     0x14002eaac
   14002ea3a:	add    BYTE PTR [rax+0x1],al
   14002ea3d:	add    BYTE PTR [rax],al
   14002ea3f:	add    BYTE PTR [rax],ah
   14002ea41:	add    eax,DWORD PTR fs:[rax+0x1]
   14002ea45:	add    BYTE PTR [rax],al
   14002ea47:	add    BYTE PTR [rax+0x1400078],ch
   14002ea4d:	add    BYTE PTR [rax],al
   14002ea4f:	add    BYTE PTR [rax+0x79],ch
   14002ea52:	add    BYTE PTR [rax+0x1],al
   14002ea55:	add    BYTE PTR [rax],al
   14002ea57:	add    BYTE PTR [rbp+0x6e],dl
   14002ea5a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14002ea5e:	outs   dx,BYTE PTR ds:[rsi]
   14002ea5f:	and    BYTE PTR [rbp+0x78],ah
   14002ea62:	movsxd esp,DWORD PTR [rbp+0x70]
   14002ea65:	je     0x14002ead0
   14002ea67:	outs   dx,DWORD PTR ds:[rsi]
   14002ea68:	outs   dx,BYTE PTR ds:[rsi]
   14002ea69:	add    BYTE PTR [rax],al
   14002ea6b:	add    BYTE PTR [rax],al
   14002ea6d:	add    BYTE PTR [rax],al
   14002ea6f:	add    BYTE PTR [rax+0x64],cl
   14002ea72:	add    eax,DWORD PTR [rax+0x1]
   14002ea75:	add    BYTE PTR [rax],al
   14002ea77:	add    BYTE PTR [rax],dh
   14002ea79:	js     0x14002ea7b
   14002ea7b:	rex add DWORD PTR [rax],eax
   14002ea7e:	add    BYTE PTR [rax],al
   14002ea80:	push   0x1400079
   14002ea85:	add    BYTE PTR [rax],al
   14002ea87:	add    al,cl
   14002ea89:	add    eax,DWORD PTR fs:[rax+0x1]
   14002ea8d:	add    BYTE PTR [rax],al
   14002ea8f:	add    BYTE PTR [rax+rdi*2+0x0],ch
   14002ea93:	rex add DWORD PTR [rax],eax
   14002ea96:	add    BYTE PTR [rax],al
   14002ea98:	push   0x1400079
   14002ea9d:	add    BYTE PTR [rax],al
   14002ea9f:	add    BYTE PTR [rax+0x65],cl
   14002eaa2:	add    eax,DWORD PTR [rax+0x1]
   14002eaa5:	add    BYTE PTR [rax],al
   14002eaa7:	add    ah,dh
   14002eaa9:	ja     0x14002eaab
   14002eaab:	rex add DWORD PTR [rax],eax
   14002eaae:	add    BYTE PTR [rax],al
   14002eab0:	push   0x1400079
   14002eab5:	add    BYTE PTR [rax],al
   14002eab7:	add    BYTE PTR [rbp+0x0],ch
   14002eaba:	jae    0x14002eabc
   14002eabc:	movsxd eax,DWORD PTR [rax]
   14002eabe:	outs   dx,DWORD PTR ds:[rsi]
   14002eabf:	add    BYTE PTR [rdx+0x0],dh
   14002eac2:	add    BYTE PTR gs:[rbp+0x0],ah
   14002eac6:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14002eacb:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002eacf:	add    BYTE PTR [rbx+0x6f],al
   14002ead2:	jb     0x14002eb19
   14002ead4:	js     0x14002eb3f
   14002ead6:	je     0x14002eb28
   14002ead8:	jb     0x14002eb49
   14002eada:	movsxd esp,DWORD PTR [rbp+0x73]
   14002eadd:	jae    0x14002eadf
   14002eadf:	add    ah,bh
   14002eae1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002eae2:	add    BYTE PTR [rax+0x1],al
   14002eae5:	add    BYTE PTR [rax],al
   14002eae7:	add    al,dl
   14002eae9:	add    eax,DWORD PTR gs:[rax+0x1]
   14002eaed:	add    BYTE PTR [rax],al
   14002eaef:	add    ah,cl
   14002eaf1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002eaf2:	add    BYTE PTR [rax+0x1],al
   14002eaf5:	add    BYTE PTR [rax],al
   14002eaf7:	add    BYTE PTR [rax+0x79],ch
   14002eafa:	add    BYTE PTR [rax+0x1],al
   14002eafd:	add    BYTE PTR [rax],al
   14002eaff:	add    BYTE PTR [rdx+0x61],ah
   14002eb02:	and    BYTE PTR fs:[rbp+0x78],ah
   14002eb06:	movsxd esp,DWORD PTR [rbp+0x70]
   14002eb09:	je     0x14002eb74
   14002eb0b:	outs   dx,DWORD PTR ds:[rsi]
   14002eb0c:	outs   dx,BYTE PTR ds:[rsi]
   14002eb0d:	add    BYTE PTR [rax],al
   14002eb0f:	add    BYTE PTR [rbp+0x2b],ah
   14002eb12:	xor    BYTE PTR [rax],dh
   14002eb14:	xor    BYTE PTR [rax],al
	...
   14002eb1e:	add    BYTE PTR [rax],al
   14002eb20:	add    eax,0xbc00000
	...
   14002eb2d:	add    BYTE PTR [rax],al
   14002eb2f:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c2eb35
	...
   14002eb3d:	add    BYTE PTR [rax],al
   14002eb3f:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   14002eb4d:	add    BYTE PTR [rax],al
   14002eb4f:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   14002eb5d:	add    BYTE PTR [rax],al
   14002eb5f:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   14002eb6d:	add    BYTE PTR [rax],al
   14002eb6f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   14002eb7d:	add    BYTE PTR [rax],al
   14002eb7f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   14002eb8d:	add    BYTE PTR [rax],al
   14002eb8f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14002eb9d:	add    BYTE PTR [rax],al
   14002eb9f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   14002ebad:	add    BYTE PTR [rax],al
   14002ebaf:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   14002ebbd:	add    BYTE PTR [rax],al
   14002ebbf:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   14002ebce:	add    BYTE PTR [rax],al
   14002ebd0:	mov    ch,0x2
   14002ebd2:	add    al,al
   14002ebd4:	or     BYTE PTR [rax],al
	...
   14002ebde:	add    BYTE PTR [rax],al
   14002ebe0:	or     al,0x0
   14002ebe2:	add    BYTE PTR [rax],al
   14002ebe4:	rol    BYTE PTR [rax],0x0
   14002ebe7:	add    BYTE PTR [rbx],al
   14002ebe9:	add    BYTE PTR [rax],al
   14002ebeb:	add    BYTE PTR [rcx],cl
   14002ebed:	add    BYTE PTR [rax],al
   14002ebef:	add    BYTE PTR [rdx],al
   14002ebf1:	add    BYTE PTR [rax],al
   14002ebf3:	add    BYTE PTR [rax],al
   14002ebf5:	add    BYTE PTR [rax],al
   14002ebf7:	add    BYTE PTR [rax-0x13],ah
   14002ebfa:	add    al,BYTE PTR [rax+0x1]
   14002ebfd:	add    BYTE PTR [rax],al
   14002ebff:	add    BYTE PTR [rax],cl
   14002ec01:	add    BYTE PTR [rax],al
   14002ec03:	add    BYTE PTR [rax],al
   14002ec05:	add    BYTE PTR [rax],al
   14002ec07:	add    al,al
   14002ec09:	in     eax,dx
   14002ec0a:	add    al,BYTE PTR [rax+0x1]
   14002ec0d:	add    BYTE PTR [rax],al
   14002ec0f:	add    BYTE PTR [rcx],cl
   14002ec11:	add    BYTE PTR [rax],al
   14002ec13:	add    BYTE PTR [rax],al
   14002ec15:	add    BYTE PTR [rax],al
   14002ec17:	add    BYTE PTR [rax],ah
   14002ec19:	out    dx,al
   14002ec1a:	add    al,BYTE PTR [rax+0x1]
   14002ec1d:	add    BYTE PTR [rax],al
   14002ec1f:	add    BYTE PTR [rdx],cl
   14002ec21:	add    BYTE PTR [rax],al
   14002ec23:	add    BYTE PTR [rax],al
   14002ec25:	add    BYTE PTR [rax],al
   14002ec27:	add    BYTE PTR [rax+0x14002ee],al
   14002ec2d:	add    BYTE PTR [rax],al
   14002ec2f:	add    BYTE PTR [rax],dl
   14002ec31:	add    BYTE PTR [rax],al
   14002ec33:	add    BYTE PTR [rax],al
   14002ec35:	add    BYTE PTR [rax],al
   14002ec37:	add    al,dl
   14002ec39:	out    dx,al
   14002ec3a:	add    al,BYTE PTR [rax+0x1]
   14002ec3d:	add    BYTE PTR [rax],al
   14002ec3f:	add    BYTE PTR [rcx],dl
   14002ec41:	add    BYTE PTR [rax],al
   14002ec43:	add    BYTE PTR [rax],al
   14002ec45:	add    BYTE PTR [rax],al
   14002ec47:	add    BYTE PTR [rax],dh
   14002ec49:	out    dx,eax
   14002ec4a:	add    al,BYTE PTR [rax+0x1]
   14002ec4d:	add    BYTE PTR [rax],al
   14002ec4f:	add    BYTE PTR [rdx],dl
   14002ec51:	add    BYTE PTR [rax],al
   14002ec53:	add    BYTE PTR [rax],al
   14002ec55:	add    BYTE PTR [rax],al
   14002ec57:	add    BYTE PTR [rax+0x14002ef],dl
   14002ec5d:	add    BYTE PTR [rax],al
   14002ec5f:	add    BYTE PTR [rbx],dl
   14002ec61:	add    BYTE PTR [rax],al
   14002ec63:	add    BYTE PTR [rax],al
   14002ec65:	add    BYTE PTR [rax],al
   14002ec67:	add    al,ah
   14002ec69:	out    dx,eax
   14002ec6a:	add    al,BYTE PTR [rax+0x1]
   14002ec6d:	add    BYTE PTR [rax],al
   14002ec6f:	add    BYTE PTR [rax],bl
   14002ec71:	add    BYTE PTR [rax],al
   14002ec73:	add    BYTE PTR [rax],al
   14002ec75:	add    BYTE PTR [rax],al
   14002ec77:	add    BYTE PTR [rax-0x10],al
   14002ec7a:	add    al,BYTE PTR [rax+0x1]
   14002ec7d:	add    BYTE PTR [rax],al
   14002ec7f:	add    BYTE PTR [rcx],bl
   14002ec81:	add    BYTE PTR [rax],al
   14002ec83:	add    BYTE PTR [rax],al
   14002ec85:	add    BYTE PTR [rax],al
   14002ec87:	add    BYTE PTR [rax+0x14002f0],dh
   14002ec8d:	add    BYTE PTR [rax],al
   14002ec8f:	add    BYTE PTR [rdx],bl
	...
   14002ec99:	icebp  
   14002ec9a:	add    al,BYTE PTR [rax+0x1]
   14002ec9d:	add    BYTE PTR [rax],al
   14002ec9f:	add    BYTE PTR [rbx],bl
   14002eca1:	add    BYTE PTR [rax],al
   14002eca3:	add    BYTE PTR [rax],al
   14002eca5:	add    BYTE PTR [rax],al
   14002eca7:	add    BYTE PTR [rax-0xf],dh
   14002ecaa:	add    al,BYTE PTR [rax+0x1]
   14002ecad:	add    BYTE PTR [rax],al
   14002ecaf:	add    BYTE PTR [rax+rax*1],bl
   14002ecb2:	add    BYTE PTR [rax],al
   14002ecb4:	add    BYTE PTR [rax],al
   14002ecb6:	add    BYTE PTR [rax],al
   14002ecb8:	loopne 0x14002ecab
   14002ecba:	add    al,BYTE PTR [rax+0x1]
   14002ecbd:	add    BYTE PTR [rax],al
   14002ecbf:	add    BYTE PTR [rsi],bl
   14002ecc1:	add    BYTE PTR [rax],al
   14002ecc3:	add    BYTE PTR [rax],al
   14002ecc5:	add    BYTE PTR [rax],al
   14002ecc7:	add    BYTE PTR [rax],dh
   14002ecc9:	repnz add al,BYTE PTR [rax+0x1]
   14002eccd:	add    BYTE PTR [rax],al
   14002eccf:	add    BYTE PTR [rdi],bl
   14002ecd1:	add    BYTE PTR [rax],al
   14002ecd3:	add    BYTE PTR [rax],al
   14002ecd5:	add    BYTE PTR [rax],al
   14002ecd7:	add    BYTE PTR [rax-0xe],dh
   14002ecda:	add    al,BYTE PTR [rax+0x1]
   14002ecdd:	add    BYTE PTR [rax],al
   14002ecdf:	add    BYTE PTR [rax],ah
   14002ece1:	add    BYTE PTR [rax],al
   14002ece3:	add    BYTE PTR [rax],al
   14002ece5:	add    BYTE PTR [rax],al
   14002ece7:	add    BYTE PTR [rax-0xd],al
   14002ecea:	add    al,BYTE PTR [rax+0x1]
   14002eced:	add    BYTE PTR [rax],al
   14002ecef:	add    BYTE PTR [rcx],ah
   14002ecf1:	add    BYTE PTR [rax],al
   14002ecf3:	add    BYTE PTR [rax],al
   14002ecf5:	add    BYTE PTR [rax],al
   14002ecf7:	add    BYTE PTR [rax+0x14002f3],dh
   14002ecfd:	add    BYTE PTR [rax],al
   14002ecff:	add    BYTE PTR [rdx],ah
   14002ed01:	add    BYTE PTR [rax],al
   14002ed03:	add    BYTE PTR [rax],al
   14002ed05:	add    BYTE PTR [rax],al
   14002ed07:	add    BYTE PTR [rax+0x14002f5],ah
   14002ed0d:	add    BYTE PTR [rax],al
   14002ed0f:	add    BYTE PTR [rax+0x0],bh
   14002ed12:	add    BYTE PTR [rax],al
   14002ed14:	add    BYTE PTR [rax],al
   14002ed16:	add    BYTE PTR [rax],al
   14002ed18:	or     dh,dh
   14002ed1a:	add    al,BYTE PTR [rax+0x1]
   14002ed1d:	add    BYTE PTR [rax],al
   14002ed1f:	add    BYTE PTR [rcx+0x0],bh
   14002ed22:	add    BYTE PTR [rax],al
   14002ed24:	add    BYTE PTR [rax],al
   14002ed26:	add    BYTE PTR [rax],al
   14002ed28:	sub    dh,dh
   14002ed2a:	add    al,BYTE PTR [rax+0x1]
   14002ed2d:	add    BYTE PTR [rax],al
   14002ed2f:	add    BYTE PTR [rdx+0x0],bh
   14002ed32:	add    BYTE PTR [rax],al
   14002ed34:	add    BYTE PTR [rax],al
   14002ed36:	add    BYTE PTR [rax],al
   14002ed38:	rex.W test BYTE PTR [rdx],0x40
   14002ed3c:	add    DWORD PTR [rax],eax
   14002ed3e:	add    BYTE PTR [rax],al
   14002ed40:	cld    
   14002ed41:	add    BYTE PTR [rax],al
   14002ed43:	add    BYTE PTR [rax],al
   14002ed45:	add    BYTE PTR [rax],al
   14002ed47:	add    BYTE PTR [rsi+rsi*8+0x2],ah
   14002ed4b:	rex add DWORD PTR [rax],eax
   14002ed4e:	add    BYTE PTR [rax],al
   14002ed50:	inc    DWORD PTR [rax]
   14002ed52:	add    BYTE PTR [rax],al
   14002ed54:	add    BYTE PTR [rax],al
   14002ed56:	add    BYTE PTR [rax],al
   14002ed58:	jo     0x14002ed50
   14002ed5a:	add    al,BYTE PTR [rax+0x1]
   14002ed5d:	add    BYTE PTR [rax],al
   14002ed5f:	add    BYTE PTR [rdx+0x0],dl
   14002ed62:	add    BYTE PTR ss:[rax],dh
   14002ed65:	add    BYTE PTR [rax],dh
   14002ed67:	add    BYTE PTR [rdx],dh
   14002ed69:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02f76f
   14002ed6f:	add    BYTE PTR [rax],ah
   14002ed71:	add    BYTE PTR [rsi+0x0],ah
   14002ed74:	ins    BYTE PTR es:[rdi],dx
   14002ed75:	add    BYTE PTR [rdi+0x0],ch
   14002ed78:	(bad)  
   14002ed79:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002ed7d:	add    BYTE PTR [rsi+0x0],ch
   14002ed80:	add    BYTE PTR [eax],ah
   14002ed83:	add    BYTE PTR [rax+0x0],dh
   14002ed86:	outs   dx,DWORD PTR ds:[rsi]
   14002ed87:	add    BYTE PTR [rcx+0x0],ch
   14002ed8a:	outs   dx,BYTE PTR ds:[rsi]
   14002ed8b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002ed8f:	add    BYTE PTR [rbx+0x0],dh
   14002ed92:	jne    0x14002ed94
   14002ed94:	jo     0x14002ed96
   14002ed96:	jo     0x14002ed98
   14002ed98:	outs   dx,DWORD PTR ds:[rsi]
   14002ed99:	add    BYTE PTR [rdx+0x0],dh
   14002ed9c:	je     0x14002ed9e
   14002ed9e:	and    BYTE PTR [rax],al
   14002eda0:	outs   dx,BYTE PTR ds:[rsi]
   14002eda1:	add    BYTE PTR [rdi+0x0],ch
   14002eda4:	je     0x14002eda6
   14002eda6:	and    BYTE PTR [rax],al
   14002eda8:	ins    BYTE PTR es:[rdi],dx
   14002eda9:	add    BYTE PTR [rdi+0x0],ch
   14002edac:	(bad)  
   14002edad:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002edb1:	add    BYTE PTR [rax+rax*1+0xd],ah
   14002edb5:	add    BYTE PTR [rdx],cl
	...
   14002edbf:	add    BYTE PTR [rdx+0x0],dl
   14002edc2:	add    BYTE PTR ss:[rax],dh
   14002edc5:	add    BYTE PTR [rax],dh
   14002edc7:	add    BYTE PTR [rax],bh
   14002edc9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02f7cf
   14002edcf:	add    BYTE PTR [rax],ah
   14002edd1:	add    BYTE PTR [rsi+0x0],ch
   14002edd4:	outs   dx,DWORD PTR ds:[rsi]
   14002edd5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002edd9:	add    BYTE PTR [rbp+0x0],ah
   14002eddc:	outs   dx,BYTE PTR ds:[rsi]
   14002eddd:	add    BYTE PTR [rdi+0x0],ch
   14002ede0:	jne    0x14002ede2
   14002ede2:	add    BYTE PTR [eax+0x0],ch
   14002ede6:	and    BYTE PTR [rax],al
   14002ede8:	jae    0x14002edea
   14002edea:	jo     0x14002edec
   14002edec:	(bad)  
   14002eded:	add    BYTE PTR [rbx+0x0],ah
   14002edf0:	add    BYTE PTR gs:[rax],ah
   14002edf3:	add    BYTE PTR [rsi+0x0],ah
   14002edf6:	outs   dx,DWORD PTR ds:[rsi]
   14002edf7:	add    BYTE PTR [rdx+0x0],dh
   14002edfa:	and    BYTE PTR [rax],al
   14002edfc:	(bad)  
   14002edfd:	add    BYTE PTR [rdx+0x0],dh
   14002ee00:	add    BYTE PTR [ebp+0x0],dh
   14002ee04:	ins    DWORD PTR es:[rdi],dx
   14002ee05:	add    BYTE PTR [rbp+0x0],ah
   14002ee08:	outs   dx,BYTE PTR ds:[rsi]
   14002ee09:	add    BYTE PTR [rax+rax*1+0x73],dh
   14002ee0d:	add    BYTE PTR [rip+0xa00],cl        # 0x14002f813
	...
   14002ee1f:	add    BYTE PTR [rdx+0x0],dl
   14002ee22:	add    BYTE PTR ss:[rax],dh
   14002ee25:	add    BYTE PTR [rax],dh
   14002ee27:	add    BYTE PTR [rcx],bh
   14002ee29:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02f82f
   14002ee2f:	add    BYTE PTR [rax],ah
   14002ee31:	add    BYTE PTR [rsi+0x0],ch
   14002ee34:	outs   dx,DWORD PTR ds:[rsi]
   14002ee35:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002ee39:	add    BYTE PTR [rbp+0x0],ah
   14002ee3c:	outs   dx,BYTE PTR ds:[rsi]
   14002ee3d:	add    BYTE PTR [rdi+0x0],ch
   14002ee40:	jne    0x14002ee42
   14002ee42:	add    BYTE PTR [eax+0x0],ch
   14002ee46:	and    BYTE PTR [rax],al
   14002ee48:	jae    0x14002ee4a
   14002ee4a:	jo     0x14002ee4c
   14002ee4c:	(bad)  
   14002ee4d:	add    BYTE PTR [rbx+0x0],ah
   14002ee50:	add    BYTE PTR gs:[rax],ah
   14002ee53:	add    BYTE PTR [rsi+0x0],ah
   14002ee56:	outs   dx,DWORD PTR ds:[rsi]
   14002ee57:	add    BYTE PTR [rdx+0x0],dh
   14002ee5a:	and    BYTE PTR [rax],al
   14002ee5c:	add    BYTE PTR gs:[rsi+0x0],ch
   14002ee60:	jbe    0x14002ee62
   14002ee62:	imul   eax,DWORD PTR [rax],0x6f0072
   14002ee68:	outs   dx,BYTE PTR ds:[rsi]
   14002ee69:	add    BYTE PTR [rbp+0x0],ch
   14002ee6c:	add    BYTE PTR gs:[rsi+0x0],ch
   14002ee70:	je     0x14002ee72
   14002ee72:	or     eax,0xa00
	...
   14002ee7f:	add    BYTE PTR [rdx+0x0],dl
   14002ee82:	add    BYTE PTR ss:[rax],dh
   14002ee85:	add    BYTE PTR [rcx],dh
   14002ee87:	add    BYTE PTR [rax],dh
   14002ee89:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02f88f
   14002ee8f:	add    BYTE PTR [rax],ah
   14002ee91:	add    BYTE PTR [rcx+0x0],ah
   14002ee94:	(bad)  
   14002ee95:	add    BYTE PTR [rdi+0x0],ch
   14002ee98:	jb     0x14002ee9a
   14002ee9a:	je     0x14002ee9c
   14002ee9c:	sub    BYTE PTR [rax],al
   14002ee9e:	sub    DWORD PTR [rax],eax
   14002eea0:	and    BYTE PTR [rax],al
   14002eea2:	push   0x73006100
   14002eea7:	add    BYTE PTR [rax],ah
   14002eea9:	add    BYTE PTR [rdx+0x0],ah
   14002eeac:	add    BYTE PTR gs:[rbp+0x0],ah
   14002eeb0:	outs   dx,BYTE PTR ds:[rsi]
   14002eeb1:	add    BYTE PTR [rax],ah
   14002eeb3:	add    BYTE PTR [rbx+0x0],ah
   14002eeb6:	(bad)  
   14002eeb7:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002eebb:	add    BYTE PTR [rbp+0x0],ah
   14002eebe:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14002f8c5
	...
   14002eecd:	add    BYTE PTR [rax],al
   14002eecf:	add    BYTE PTR [rdx+0x0],dl
   14002eed2:	add    BYTE PTR ss:[rax],dh
   14002eed5:	add    BYTE PTR [rcx],dh
   14002eed7:	add    BYTE PTR [rsi],dh
   14002eed9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02f8df
   14002eedf:	add    BYTE PTR [rax],ah
   14002eee1:	add    BYTE PTR [rsi+0x0],ch
   14002eee4:	outs   dx,DWORD PTR ds:[rsi]
   14002eee5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002eee9:	add    BYTE PTR [rbp+0x0],ah
   14002eeec:	outs   dx,BYTE PTR ds:[rsi]
   14002eeed:	add    BYTE PTR [rdi+0x0],ch
   14002eef0:	jne    0x14002eef2
   14002eef2:	add    BYTE PTR [eax+0x0],ch
   14002eef6:	and    BYTE PTR [rax],al
   14002eef8:	jae    0x14002eefa
   14002eefa:	jo     0x14002eefc
   14002eefc:	(bad)  
   14002eefd:	add    BYTE PTR [rbx+0x0],ah
   14002ef00:	add    BYTE PTR gs:[rax],ah
   14002ef03:	add    BYTE PTR [rsi+0x0],ah
   14002ef06:	outs   dx,DWORD PTR ds:[rsi]
   14002ef07:	add    BYTE PTR [rdx+0x0],dh
   14002ef0a:	and    BYTE PTR [rax],al
   14002ef0c:	je     0x14002ef0e
   14002ef0e:	push   0x65007200
   14002ef13:	add    BYTE PTR [rcx+0x0],ah
   14002ef16:	add    BYTE PTR fs:[rax],ah
   14002ef19:	add    BYTE PTR [rax+rax*1+0x61],ah
   14002ef1d:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002ef21:	add    BYTE PTR [rip+0xa00],cl        # 0x14002f927
	...
   14002ef2f:	add    BYTE PTR [rdx+0x0],dl
   14002ef32:	add    BYTE PTR ss:[rax],dh
   14002ef35:	add    BYTE PTR [rcx],dh
   14002ef37:	add    BYTE PTR [rdi],dh
   14002ef39:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02f93f
   14002ef3f:	add    BYTE PTR [rax],ah
   14002ef41:	add    BYTE PTR [rbp+0x0],dh
   14002ef44:	outs   dx,BYTE PTR ds:[rsi]
   14002ef45:	add    BYTE PTR [rbp+0x0],ah
   14002ef48:	js     0x14002ef4a
   14002ef4a:	jo     0x14002ef4c
   14002ef4c:	add    BYTE PTR gs:[rbx+0x0],ah
   14002ef50:	je     0x14002ef52
   14002ef52:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14002ef57:	add    BYTE PTR [rbp+0x0],ch
   14002ef5a:	jne    0x14002ef5c
   14002ef5c:	ins    BYTE PTR es:[rdi],dx
   14002ef5d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002ef61:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002ef65:	add    BYTE PTR [rdx+0x0],dh
   14002ef68:	add    BYTE PTR gs:[rcx+0x0],ah
   14002ef6c:	add    BYTE PTR fs:[rax],ah
   14002ef6f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002ef73:	add    BYTE PTR [rbx+0x0],ah
   14002ef76:	imul   eax,DWORD PTR [rax],0x20
   14002ef79:	add    BYTE PTR [rbp+0x0],ah
   14002ef7c:	jb     0x14002ef7e
   14002ef7e:	jb     0x14002ef80
   14002ef80:	outs   dx,DWORD PTR ds:[rsi]
   14002ef81:	add    BYTE PTR [rdx+0x0],dh
   14002ef84:	or     eax,0xa00
   14002ef89:	add    BYTE PTR [rax],al
   14002ef8b:	add    BYTE PTR [rax],al
   14002ef8d:	add    BYTE PTR [rax],al
   14002ef8f:	add    BYTE PTR [rdx+0x0],dl
   14002ef92:	add    BYTE PTR ss:[rax],dh
   14002ef95:	add    BYTE PTR [rcx],dh
   14002ef97:	add    BYTE PTR [rax],bh
   14002ef99:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02f99f
   14002ef9f:	add    BYTE PTR [rax],ah
   14002efa1:	add    BYTE PTR [rbp+0x0],dh
   14002efa4:	outs   dx,BYTE PTR ds:[rsi]
   14002efa5:	add    BYTE PTR [rbp+0x0],ah
   14002efa8:	js     0x14002efaa
   14002efaa:	jo     0x14002efac
   14002efac:	add    BYTE PTR gs:[rbx+0x0],ah
   14002efb0:	je     0x14002efb2
   14002efb2:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14002efb7:	add    BYTE PTR [rax+0x0],ch
   14002efba:	add    BYTE PTR gs:[rcx+0x0],ah
   14002efbe:	jo     0x14002efc0
   14002efc0:	and    BYTE PTR [rax],al
   14002efc2:	add    BYTE PTR gs:[rdx+0x0],dh
   14002efc6:	jb     0x14002efc8
   14002efc8:	outs   dx,DWORD PTR ds:[rsi]
   14002efc9:	add    BYTE PTR [rdx+0x0],dh
   14002efcc:	or     eax,0xa00
	...
   14002efdd:	add    BYTE PTR [rax],al
   14002efdf:	add    BYTE PTR [rdx+0x0],dl
   14002efe2:	add    BYTE PTR ss:[rax],dh
   14002efe5:	add    BYTE PTR [rcx],dh
   14002efe7:	add    BYTE PTR [rcx],bh
   14002efe9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02f9ef
   14002efef:	add    BYTE PTR [rax],ah
   14002eff1:	add    BYTE PTR [rbp+0x0],dh
   14002eff4:	outs   dx,BYTE PTR ds:[rsi]
   14002eff5:	add    BYTE PTR [rcx+0x0],ah
   14002eff8:	(bad)  
   14002eff9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002effd:	add    BYTE PTR [rax],ah
   14002efff:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14002f003:	add    BYTE PTR [rax],ah
   14002f005:	add    BYTE PTR [rdi+0x0],ch
   14002f008:	jo     0x14002f00a
   14002f00a:	add    BYTE PTR gs:[rsi+0x0],ch
   14002f00e:	and    BYTE PTR [rax],al
   14002f010:	movsxd eax,DWORD PTR [rax]
   14002f012:	outs   dx,DWORD PTR ds:[rsi]
   14002f013:	add    BYTE PTR [rsi+0x0],ch
   14002f016:	jae    0x14002f018
   14002f018:	outs   dx,DWORD PTR ds:[rsi]
   14002f019:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002f01d:	add    BYTE PTR [rax],ah
   14002f01f:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002f023:	add    BYTE PTR [rsi+0x0],dh
   14002f026:	imul   eax,DWORD PTR [rax],0x650063
   14002f02c:	or     eax,0xa00
	...
   14002f03d:	add    BYTE PTR [rax],al
   14002f03f:	add    BYTE PTR [rdx+0x0],dl
   14002f042:	add    BYTE PTR ss:[rax],dh
   14002f045:	add    BYTE PTR [rdx],dh
   14002f047:	add    BYTE PTR [rax+rax*1],dh
   14002f04a:	or     eax,0x2d000a00
   14002f04f:	add    BYTE PTR [rax],ah
   14002f051:	add    BYTE PTR [rsi+0x0],ch
   14002f054:	outs   dx,DWORD PTR ds:[rsi]
   14002f055:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002f059:	add    BYTE PTR [rbp+0x0],ah
   14002f05c:	outs   dx,BYTE PTR ds:[rsi]
   14002f05d:	add    BYTE PTR [rdi+0x0],ch
   14002f060:	jne    0x14002f062
   14002f062:	add    BYTE PTR [eax+0x0],ch
   14002f066:	and    BYTE PTR [rax],al
   14002f068:	jae    0x14002f06a
   14002f06a:	jo     0x14002f06c
   14002f06c:	(bad)  
   14002f06d:	add    BYTE PTR [rbx+0x0],ah
   14002f070:	add    BYTE PTR gs:[rax],ah
   14002f073:	add    BYTE PTR [rsi+0x0],ah
   14002f076:	outs   dx,DWORD PTR ds:[rsi]
   14002f077:	add    BYTE PTR [rdx+0x0],dh
   14002f07a:	and    BYTE PTR [rax],al
   14002f07c:	pop    rdi
   14002f07d:	add    BYTE PTR [rdi+0x0],ch
   14002f080:	outs   dx,BYTE PTR ds:[rsi]
   14002f081:	add    BYTE PTR [rbp+0x0],ah
   14002f084:	js     0x14002f086
   14002f086:	imul   eax,DWORD PTR [rax],0x2f0074
   14002f08c:	(bad)  
   14002f08d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14002f091:	add    BYTE PTR [rax+0x0],bh
   14002f094:	imul   eax,DWORD PTR [rax],0x200074
   14002f09a:	je     0x14002f09c
   14002f09c:	(bad)  
   14002f09d:	add    BYTE PTR [rdx+0x0],ah
   14002f0a0:	ins    BYTE PTR es:[rdi],dx
   14002f0a1:	add    BYTE PTR [rbp+0x0],ah
   14002f0a4:	or     eax,0xa00
   14002f0a9:	add    BYTE PTR [rax],al
   14002f0ab:	add    BYTE PTR [rax],al
   14002f0ad:	add    BYTE PTR [rax],al
   14002f0af:	add    BYTE PTR [rdx+0x0],dl
   14002f0b2:	add    BYTE PTR ss:[rax],dh
   14002f0b5:	add    BYTE PTR [rdx],dh
   14002f0b7:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a02fdbd
   14002f0bd:	add    BYTE PTR [rip+0x70002000],ch        # 0x1b00310c3
   14002f0c3:	add    BYTE PTR [rbp+0x0],dh
   14002f0c6:	jb     0x14002f0c8
   14002f0c8:	add    BYTE PTR gs:[rax],ah
   14002f0cb:	add    BYTE PTR [rsi+0x0],dh
   14002f0ce:	imul   eax,DWORD PTR [rax],0x740072
   14002f0d4:	jne    0x14002f0d6
   14002f0d6:	(bad)  
   14002f0d7:	add    BYTE PTR [rax+rax*1+0x20],ch
   14002f0db:	add    BYTE PTR [rsi+0x0],ah
   14002f0de:	jne    0x14002f0e0
   14002f0e0:	outs   dx,BYTE PTR ds:[rsi]
   14002f0e1:	add    BYTE PTR [rbx+0x0],ah
   14002f0e4:	je     0x14002f0e6
   14002f0e6:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f0ec:	and    BYTE PTR [rax],al
   14002f0ee:	movsxd eax,DWORD PTR [rax]
   14002f0f0:	(bad)  
   14002f0f1:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002f0f5:	add    BYTE PTR [rip+0xa00],cl        # 0x14002fafb
   14002f0fb:	add    BYTE PTR [rax],al
   14002f0fd:	add    BYTE PTR [rax],al
   14002f0ff:	add    BYTE PTR [rdx+0x0],dl
   14002f102:	add    BYTE PTR ss:[rax],dh
   14002f105:	add    BYTE PTR [rdx],dh
   14002f107:	add    BYTE PTR [rsi],dh
   14002f109:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02fb0f
   14002f10f:	add    BYTE PTR [rax],ah
   14002f111:	add    BYTE PTR [rsi+0x0],ch
   14002f114:	outs   dx,DWORD PTR ds:[rsi]
   14002f115:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002f119:	add    BYTE PTR [rbp+0x0],ah
   14002f11c:	outs   dx,BYTE PTR ds:[rsi]
   14002f11d:	add    BYTE PTR [rdi+0x0],ch
   14002f120:	jne    0x14002f122
   14002f122:	add    BYTE PTR [eax+0x0],ch
   14002f126:	and    BYTE PTR [rax],al
   14002f128:	jae    0x14002f12a
   14002f12a:	jo     0x14002f12c
   14002f12c:	(bad)  
   14002f12d:	add    BYTE PTR [rbx+0x0],ah
   14002f130:	add    BYTE PTR gs:[rax],ah
   14002f133:	add    BYTE PTR [rsi+0x0],ah
   14002f136:	outs   dx,DWORD PTR ds:[rsi]
   14002f137:	add    BYTE PTR [rdx+0x0],dh
   14002f13a:	and    BYTE PTR [rax],al
   14002f13c:	jae    0x14002f13e
   14002f13e:	je     0x14002f140
   14002f140:	add    BYTE PTR fs:[rcx+0x0],ch
   14002f144:	outs   dx,DWORD PTR ds:[rsi]
   14002f145:	add    BYTE PTR [rax],ah
   14002f147:	add    BYTE PTR [rcx+0x0],ch
   14002f14a:	outs   dx,BYTE PTR ds:[rsi]
   14002f14b:	add    BYTE PTR [rcx+0x0],ch
   14002f14e:	je     0x14002f150
   14002f150:	imul   eax,DWORD PTR [rax],0x6c0061
   14002f156:	imul   eax,DWORD PTR [rax],0x61007a
   14002f15c:	je     0x14002f15e
   14002f15e:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f164:	or     eax,0xa00
   14002f169:	add    BYTE PTR [rax],al
   14002f16b:	add    BYTE PTR [rax],al
   14002f16d:	add    BYTE PTR [rax],al
   14002f16f:	add    BYTE PTR [rdx+0x0],dl
   14002f172:	add    BYTE PTR ss:[rax],dh
   14002f175:	add    BYTE PTR [rdx],dh
   14002f177:	add    BYTE PTR [rdi],dh
   14002f179:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02fb7f
   14002f17f:	add    BYTE PTR [rax],ah
   14002f181:	add    BYTE PTR [rsi+0x0],ch
   14002f184:	outs   dx,DWORD PTR ds:[rsi]
   14002f185:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002f189:	add    BYTE PTR [rbp+0x0],ah
   14002f18c:	outs   dx,BYTE PTR ds:[rsi]
   14002f18d:	add    BYTE PTR [rdi+0x0],ch
   14002f190:	jne    0x14002f192
   14002f192:	add    BYTE PTR [eax+0x0],ch
   14002f196:	and    BYTE PTR [rax],al
   14002f198:	jae    0x14002f19a
   14002f19a:	jo     0x14002f19c
   14002f19c:	(bad)  
   14002f19d:	add    BYTE PTR [rbx+0x0],ah
   14002f1a0:	add    BYTE PTR gs:[rax],ah
   14002f1a3:	add    BYTE PTR [rsi+0x0],ah
   14002f1a6:	outs   dx,DWORD PTR ds:[rsi]
   14002f1a7:	add    BYTE PTR [rdx+0x0],dh
   14002f1aa:	and    BYTE PTR [rax],al
   14002f1ac:	ins    BYTE PTR es:[rdi],dx
   14002f1ad:	add    BYTE PTR [rdi+0x0],ch
   14002f1b0:	ja     0x14002f1b2
   14002f1b2:	imul   eax,DWORD PTR [rax],0x20006f
   14002f1b8:	imul   eax,DWORD PTR [rax],0x69006e
   14002f1be:	je     0x14002f1c0
   14002f1c0:	imul   eax,DWORD PTR [rax],0x6c0061
   14002f1c6:	imul   eax,DWORD PTR [rax],0x61007a
   14002f1cc:	je     0x14002f1ce
   14002f1ce:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f1d4:	or     eax,0xa00
   14002f1d9:	add    BYTE PTR [rax],al
   14002f1db:	add    BYTE PTR [rax],al
   14002f1dd:	add    BYTE PTR [rax],al
   14002f1df:	add    BYTE PTR [rdx+0x0],dl
   14002f1e2:	add    BYTE PTR ss:[rax],dh
   14002f1e5:	add    BYTE PTR [rdx],dh
   14002f1e7:	add    BYTE PTR [rax],bh
   14002f1e9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02fbef
   14002f1ef:	add    BYTE PTR [rax],ah
   14002f1f1:	add    BYTE PTR [rbp+0x0],dh
   14002f1f4:	outs   dx,BYTE PTR ds:[rsi]
   14002f1f5:	add    BYTE PTR [rcx+0x0],ah
   14002f1f8:	(bad)  
   14002f1f9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002f1fd:	add    BYTE PTR [rax],ah
   14002f1ff:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14002f203:	add    BYTE PTR [rax],ah
   14002f205:	add    BYTE PTR [rcx+0x0],ch
   14002f208:	outs   dx,BYTE PTR ds:[rsi]
   14002f209:	add    BYTE PTR [rcx+0x0],ch
   14002f20c:	je     0x14002f20e
   14002f20e:	imul   eax,DWORD PTR [rax],0x6c0061
   14002f214:	imul   eax,DWORD PTR [rax],0x65007a
   14002f21a:	and    BYTE PTR [rax],al
   14002f21c:	push   0x61006500
   14002f221:	add    BYTE PTR [rax+0x0],dh
   14002f224:	or     eax,0xa00
   14002f229:	add    BYTE PTR [rax],al
   14002f22b:	add    BYTE PTR [rax],al
   14002f22d:	add    BYTE PTR [rax],al
   14002f22f:	add    BYTE PTR [rdx+0x0],dl
   14002f232:	add    BYTE PTR ss:[rax],dh
   14002f235:	add    BYTE PTR [rbx],dh
   14002f237:	add    BYTE PTR [rax],dh
   14002f239:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02fc3f
   14002f23f:	add    BYTE PTR [rax],ah
   14002f241:	add    BYTE PTR [rbx+0x0],al
   14002f244:	push   rdx
   14002f245:	add    BYTE PTR [rax+rax*1+0x20],dl
   14002f249:	add    BYTE PTR [rsi+0x0],ch
   14002f24c:	outs   dx,DWORD PTR ds:[rsi]
   14002f24d:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002f251:	add    BYTE PTR [rcx+0x0],ch
   14002f254:	outs   dx,BYTE PTR ds:[rsi]
   14002f255:	add    BYTE PTR [rcx+0x0],ch
   14002f258:	je     0x14002f25a
   14002f25a:	imul   eax,DWORD PTR [rax],0x6c0061
   14002f260:	imul   eax,DWORD PTR [rax],0x65007a
   14002f266:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14002fc6d
   14002f26d:	add    BYTE PTR [rax],al
   14002f26f:	add    BYTE PTR [rdx+0x0],dl
   14002f272:	add    BYTE PTR ss:[rax],dh
   14002f275:	add    BYTE PTR [rbx],dh
   14002f277:	add    BYTE PTR [rcx],dh
   14002f279:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02fc7f
   14002f27f:	add    BYTE PTR [rax],ah
   14002f281:	add    BYTE PTR [rcx+0x0],al
   14002f284:	je     0x14002f286
   14002f286:	je     0x14002f288
   14002f288:	add    BYTE PTR gs:[rbp+0x0],ch
   14002f28c:	jo     0x14002f28e
   14002f28e:	je     0x14002f290
   14002f290:	and    BYTE PTR [rax],al
   14002f292:	je     0x14002f294
   14002f294:	outs   dx,DWORD PTR ds:[rsi]
   14002f295:	add    BYTE PTR [rax],ah
   14002f297:	add    BYTE PTR [rcx+0x0],ch
   14002f29a:	outs   dx,BYTE PTR ds:[rsi]
   14002f29b:	add    BYTE PTR [rcx+0x0],ch
   14002f29e:	je     0x14002f2a0
   14002f2a0:	imul   eax,DWORD PTR [rax],0x6c0061
   14002f2a6:	imul   eax,DWORD PTR [rax],0x65007a
   14002f2ac:	and    BYTE PTR [rax],al
   14002f2ae:	je     0x14002f2b0
   14002f2b0:	push   0x20006500
   14002f2b5:	add    BYTE PTR [rbx+0x0],al
   14002f2b8:	push   rdx
   14002f2b9:	add    BYTE PTR [rax+rax*1+0x20],dl
   14002f2bd:	add    BYTE PTR [rbp+0x0],ch
   14002f2c0:	outs   dx,DWORD PTR ds:[rsi]
   14002f2c1:	add    BYTE PTR [rdx+0x0],dh
   14002f2c4:	add    BYTE PTR gs:[rax],ah
   14002f2c7:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002f2cb:	add    BYTE PTR [rcx+0x0],ah
   14002f2ce:	outs   dx,BYTE PTR ds:[rsi]
   14002f2cf:	add    BYTE PTR [rax],ah
   14002f2d1:	add    BYTE PTR [rdi+0x0],ch
   14002f2d4:	outs   dx,BYTE PTR ds:[rsi]
   14002f2d5:	add    BYTE PTR [rbx+0x0],ah
   14002f2d8:	add    BYTE PTR gs:[rsi],ch
   14002f2db:	add    BYTE PTR [rdx],cl
   14002f2dd:	add    BYTE PTR [rax+rax*1+0x68],dl
   14002f2e1:	add    BYTE PTR [rcx+0x0],ch
   14002f2e4:	jae    0x14002f2e6
   14002f2e6:	and    BYTE PTR [rax],al
   14002f2e8:	imul   eax,DWORD PTR [rax],0x64006e
   14002f2ee:	imul   eax,DWORD PTR [rax],0x610063
   14002f2f4:	je     0x14002f2f6
   14002f2f6:	add    BYTE PTR gs:[rbx+0x0],dh
   14002f2fa:	and    BYTE PTR [rax],al
   14002f2fc:	(bad)  
   14002f2fd:	add    BYTE PTR [rax],ah
   14002f2ff:	add    BYTE PTR [rdx+0x0],ah
   14002f302:	jne    0x14002f304
   14002f304:	add    BYTE PTR [eax],ah
   14002f307:	add    BYTE PTR [rcx+0x0],ch
   14002f30a:	outs   dx,BYTE PTR ds:[rsi]
   14002f30b:	add    BYTE PTR [rax],ah
   14002f30d:	add    BYTE PTR [rcx+0x0],bh
   14002f310:	outs   dx,DWORD PTR ds:[rsi]
   14002f311:	add    BYTE PTR [rbp+0x0],dh
   14002f314:	jb     0x14002f316
   14002f316:	and    BYTE PTR [rax],al
   14002f318:	(bad)  
   14002f319:	add    BYTE PTR [rax+0x0],dh
   14002f31c:	jo     0x14002f31e
   14002f31e:	ins    BYTE PTR es:[rdi],dx
   14002f31f:	add    BYTE PTR [rcx+0x0],ch
   14002f322:	movsxd eax,DWORD PTR [rax]
   14002f324:	(bad)  
   14002f325:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002f329:	add    BYTE PTR [rdi+0x0],ch
   14002f32c:	outs   dx,BYTE PTR ds:[rsi]
   14002f32d:	add    BYTE PTR [rsi],ch
   14002f32f:	add    BYTE PTR [rip+0xa00],cl        # 0x14002fd35
	...
   14002f33d:	add    BYTE PTR [rax],al
   14002f33f:	add    BYTE PTR [rdx+0x0],dl
   14002f342:	add    BYTE PTR ss:[rax],dh
   14002f345:	add    BYTE PTR [rbx],dh
   14002f347:	add    BYTE PTR [rdx],dh
   14002f349:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02fd4f
   14002f34f:	add    BYTE PTR [rax],ah
   14002f351:	add    BYTE PTR [rsi+0x0],ch
   14002f354:	outs   dx,DWORD PTR ds:[rsi]
   14002f355:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002f359:	add    BYTE PTR [rbp+0x0],ah
   14002f35c:	outs   dx,BYTE PTR ds:[rsi]
   14002f35d:	add    BYTE PTR [rdi+0x0],ch
   14002f360:	jne    0x14002f362
   14002f362:	add    BYTE PTR [eax+0x0],ch
   14002f366:	and    BYTE PTR [rax],al
   14002f368:	jae    0x14002f36a
   14002f36a:	jo     0x14002f36c
   14002f36c:	(bad)  
   14002f36d:	add    BYTE PTR [rbx+0x0],ah
   14002f370:	add    BYTE PTR gs:[rax],ah
   14002f373:	add    BYTE PTR [rsi+0x0],ah
   14002f376:	outs   dx,DWORD PTR ds:[rsi]
   14002f377:	add    BYTE PTR [rdx+0x0],dh
   14002f37a:	and    BYTE PTR [rax],al
   14002f37c:	ins    BYTE PTR es:[rdi],dx
   14002f37d:	add    BYTE PTR [rdi+0x0],ch
   14002f380:	movsxd eax,DWORD PTR [rax]
   14002f382:	(bad)  
   14002f383:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002f387:	add    BYTE PTR [rax],ah
   14002f389:	add    BYTE PTR [rcx+0x0],ch
   14002f38c:	outs   dx,BYTE PTR ds:[rsi]
   14002f38d:	add    BYTE PTR [rsi+0x0],ah
   14002f390:	outs   dx,DWORD PTR ds:[rsi]
   14002f391:	add    BYTE PTR [rdx+0x0],dh
   14002f394:	ins    DWORD PTR es:[rdi],dx
   14002f395:	add    BYTE PTR [rcx+0x0],ah
   14002f398:	je     0x14002f39a
   14002f39a:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f3a0:	or     eax,0xa00
	...
   14002f3ad:	add    BYTE PTR [rax],al
   14002f3af:	add    BYTE PTR [rdx+0x0],dl
   14002f3b2:	add    BYTE PTR ss:[rax],dh
   14002f3b5:	add    BYTE PTR [rbx],dh
   14002f3b7:	add    BYTE PTR [rbx],dh
   14002f3b9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02fdbf
   14002f3bf:	add    BYTE PTR [rax],ah
   14002f3c1:	add    BYTE PTR [rcx+0x0],al
   14002f3c4:	je     0x14002f3c6
   14002f3c6:	je     0x14002f3c8
   14002f3c8:	add    BYTE PTR gs:[rbp+0x0],ch
   14002f3cc:	jo     0x14002f3ce
   14002f3ce:	je     0x14002f3d0
   14002f3d0:	and    BYTE PTR [rax],al
   14002f3d2:	je     0x14002f3d4
   14002f3d4:	outs   dx,DWORD PTR ds:[rsi]
   14002f3d5:	add    BYTE PTR [rax],ah
   14002f3d7:	add    BYTE PTR [rbp+0x0],dh
   14002f3da:	jae    0x14002f3dc
   14002f3dc:	add    BYTE PTR gs:[rax],ah
   14002f3df:	add    BYTE PTR [rbp+0x0],cl
   14002f3e2:	push   rbx
   14002f3e3:	add    BYTE PTR [rcx+0x0],cl
   14002f3e6:	rex.WR add BYTE PTR [rax],r12b
   14002f3e9:	add    BYTE PTR [rbx+0x0],ah
   14002f3ec:	outs   dx,DWORD PTR ds:[rsi]
   14002f3ed:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002f3f1:	add    BYTE PTR [rax],ah
   14002f3f3:	add    BYTE PTR [rsi+0x0],ah
   14002f3f6:	jb     0x14002f3f8
   14002f3f8:	outs   dx,DWORD PTR ds:[rsi]
   14002f3f9:	add    BYTE PTR [rbp+0x0],ch
   14002f3fc:	and    BYTE PTR [rax],al
   14002f3fe:	je     0x14002f400
   14002f400:	push   0x73006900
   14002f405:	add    BYTE PTR [rax],ah
   14002f407:	add    BYTE PTR [rcx+0x0],ah
   14002f40a:	jae    0x14002f40c
   14002f40c:	jae    0x14002f40e
   14002f40e:	add    BYTE PTR gs:[rbp+0x0],ch
   14002f412:	(bad)  
   14002f413:	add    BYTE PTR [rax+rax*1+0x79],ch
   14002f417:	add    BYTE PTR [rax],ah
   14002f419:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002f41d:	add    BYTE PTR [rdx+0x0],dh
   14002f420:	imul   eax,DWORD PTR [rax],0x67006e
   14002f426:	and    BYTE PTR [rax],al
   14002f428:	outs   dx,BYTE PTR ds:[rsi]
   14002f429:	add    BYTE PTR [rcx+0x0],ah
   14002f42c:	je     0x14002f42e
   14002f42e:	imul   eax,DWORD PTR [rax],0x650076
   14002f434:	and    BYTE PTR [rax],al
   14002f436:	movsxd eax,DWORD PTR [rax]
   14002f438:	outs   dx,DWORD PTR ds:[rsi]
   14002f439:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002f43d:	add    BYTE PTR [rax],ah
   14002f43f:	add    BYTE PTR [rcx+0x0],ch
   14002f442:	outs   dx,BYTE PTR ds:[rsi]
   14002f443:	add    BYTE PTR [rcx+0x0],ch
   14002f446:	je     0x14002f448
   14002f448:	imul   eax,DWORD PTR [rax],0x6c0061
   14002f44e:	imul   eax,DWORD PTR [rax],0x61007a
   14002f454:	je     0x14002f456
   14002f456:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f45c:	or     al,BYTE PTR [rax]
   14002f45e:	push   rsp
   14002f45f:	add    BYTE PTR [rax+0x0],ch
   14002f462:	imul   eax,DWORD PTR [rax],0x200073
   14002f468:	imul   eax,DWORD PTR [rax],0x64006e
   14002f46e:	imul   eax,DWORD PTR [rax],0x610063
   14002f474:	je     0x14002f476
   14002f476:	add    BYTE PTR gs:[rbx+0x0],dh
   14002f47a:	and    BYTE PTR [rax],al
   14002f47c:	(bad)  
   14002f47d:	add    BYTE PTR [rax],ah
   14002f47f:	add    BYTE PTR [rdx+0x0],ah
   14002f482:	jne    0x14002f484
   14002f484:	add    BYTE PTR [eax],ah
   14002f487:	add    BYTE PTR [rcx+0x0],ch
   14002f48a:	outs   dx,BYTE PTR ds:[rsi]
   14002f48b:	add    BYTE PTR [rax],ah
   14002f48d:	add    BYTE PTR [rcx+0x0],bh
   14002f490:	outs   dx,DWORD PTR ds:[rsi]
   14002f491:	add    BYTE PTR [rbp+0x0],dh
   14002f494:	jb     0x14002f496
   14002f496:	and    BYTE PTR [rax],al
   14002f498:	(bad)  
   14002f499:	add    BYTE PTR [rax+0x0],dh
   14002f49c:	jo     0x14002f49e
   14002f49e:	ins    BYTE PTR es:[rdi],dx
   14002f49f:	add    BYTE PTR [rcx+0x0],ch
   14002f4a2:	movsxd eax,DWORD PTR [rax]
   14002f4a4:	(bad)  
   14002f4a5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002f4a9:	add    BYTE PTR [rdi+0x0],ch
   14002f4ac:	outs   dx,BYTE PTR ds:[rsi]
   14002f4ad:	add    BYTE PTR [rsi],ch
   14002f4af:	add    BYTE PTR [rax],ah
   14002f4b1:	add    BYTE PTR [rcx+0x0],cl
   14002f4b4:	je     0x14002f4b6
   14002f4b6:	and    BYTE PTR [rax],al
   14002f4b8:	imul   eax,DWORD PTR [rax],0x200073
   14002f4be:	ins    DWORD PTR es:[rdi],dx
   14002f4bf:	add    BYTE PTR [rdi+0x0],ch
   14002f4c2:	jae    0x14002f4c4
   14002f4c4:	je     0x14002f4c6
   14002f4c6:	and    BYTE PTR [rax],al
   14002f4c8:	ins    BYTE PTR es:[rdi],dx
   14002f4c9:	add    BYTE PTR [rcx+0x0],ch
   14002f4cc:	imul   eax,DWORD PTR [rax],0x65
   14002f4cf:	add    BYTE PTR [rax+rax*1+0x79],ch
   14002f4d3:	add    BYTE PTR [rax],ah
   14002f4d5:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002f4d9:	add    BYTE PTR [rbp+0x0],ah
   14002f4dc:	and    BYTE PTR [rax],al
   14002f4de:	jb     0x14002f4e0
   14002f4e0:	add    BYTE PTR gs:[rbx+0x0],dh
   14002f4e4:	jne    0x14002f4e6
   14002f4e6:	ins    BYTE PTR es:[rdi],dx
   14002f4e7:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002f4eb:	add    BYTE PTR [rdi+0x0],ch
   14002f4ee:	data16 add BYTE PTR [rax],ah
   14002f4f1:	add    BYTE PTR [rbx+0x0],ah
   14002f4f4:	(bad)  
   14002f4f5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002f4f9:	add    BYTE PTR [rcx+0x0],ch
   14002f4fc:	outs   dx,BYTE PTR ds:[rsi]
   14002f4fd:	add    BYTE PTR [rdi+0x0],ah
   14002f500:	and    BYTE PTR [rax],al
   14002f502:	(bad)  
   14002f503:	add    BYTE PTR [rsi+0x0],ch
   14002f506:	and    BYTE PTR [rax],al
   14002f508:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14002f50c:	rex.WB add BYTE PTR [r8+rax*1+0x2d],cl
   14002f511:	add    BYTE PTR [rbx+0x0],ah
   14002f514:	outs   dx,DWORD PTR ds:[rsi]
   14002f515:	add    BYTE PTR [rbp+0x0],ch
   14002f518:	jo     0x14002f51a
   14002f51a:	imul   eax,DWORD PTR [rax],0x65006c
   14002f520:	add    BYTE PTR fs:[rax],ah
   14002f523:	add    BYTE PTR [rax],ch
   14002f525:	add    BYTE PTR [rdi],ch
   14002f527:	add    BYTE PTR [rbx+0x0],ah
   14002f52a:	ins    BYTE PTR es:[rdi],dx
   14002f52b:	add    BYTE PTR [rdx+0x0],dh
   14002f52e:	sub    DWORD PTR [rax],eax
   14002f530:	and    BYTE PTR [rax],al
   14002f532:	data16 add BYTE PTR [rbp+0x0],dh
   14002f536:	outs   dx,BYTE PTR ds:[rsi]
   14002f537:	add    BYTE PTR [rbx+0x0],ah
   14002f53a:	je     0x14002f53c
   14002f53c:	imul   eax,DWORD PTR [rax],0x6e006f
   14002f542:	and    BYTE PTR [rax],al
   14002f544:	data16 add BYTE PTR [rdx+0x0],dh
   14002f548:	outs   dx,DWORD PTR ds:[rsi]
   14002f549:	add    BYTE PTR [rbp+0x0],ch
   14002f54c:	and    BYTE PTR [rax],al
   14002f54e:	(bad)  
   14002f54f:	add    BYTE PTR [rax],ah
   14002f551:	add    BYTE PTR [rsi+0x0],ch
   14002f554:	(bad)  
   14002f555:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002f559:	add    BYTE PTR [rsi+0x0],dh
   14002f55c:	add    BYTE PTR gs:[rax],ah
   14002f55f:	add    BYTE PTR [rbx+0x0],ah
   14002f562:	outs   dx,DWORD PTR ds:[rsi]
   14002f563:	add    BYTE PTR [rsi+0x0],ch
   14002f566:	jae    0x14002f568
   14002f568:	je     0x14002f56a
   14002f56a:	jb     0x14002f56c
   14002f56c:	jne    0x14002f56e
   14002f56e:	movsxd eax,DWORD PTR [rax]
   14002f570:	je     0x14002f572
   14002f572:	outs   dx,DWORD PTR ds:[rsi]
   14002f573:	add    BYTE PTR [rdx+0x0],dh
   14002f576:	and    BYTE PTR [rax],al
   14002f578:	outs   dx,DWORD PTR ds:[rsi]
   14002f579:	add    BYTE PTR [rdx+0x0],dh
   14002f57c:	and    BYTE PTR [rax],al
   14002f57e:	data16 add BYTE PTR [rdx+0x0],dh
   14002f582:	outs   dx,DWORD PTR ds:[rsi]
   14002f583:	add    BYTE PTR [rbp+0x0],ch
   14002f586:	and    BYTE PTR [rax],al
   14002f588:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   14002f58d:	add    BYTE PTR [rbp+0x0],cl
   14002f590:	(bad)  
   14002f591:	add    BYTE PTR [rcx+0x0],ch
   14002f594:	outs   dx,BYTE PTR ds:[rsi]
   14002f595:	add    BYTE PTR [rsi],ch
   14002f597:	add    BYTE PTR [rip+0xa00],cl        # 0x14002ff9d
   14002f59d:	add    BYTE PTR [rax],al
   14002f59f:	add    BYTE PTR [rdx+0x0],dl
   14002f5a2:	add    BYTE PTR ss:[rax],dh
   14002f5a5:	add    BYTE PTR [rbx],dh
   14002f5a7:	add    BYTE PTR [rax+rax*1],dh
   14002f5aa:	or     eax,0x2d000a00
   14002f5af:	add    BYTE PTR [rax],ah
   14002f5b1:	add    BYTE PTR [rcx+0x0],ch
   14002f5b4:	outs   dx,BYTE PTR ds:[rsi]
   14002f5b5:	add    BYTE PTR [rbx+0x0],ah
   14002f5b8:	outs   dx,DWORD PTR ds:[rsi]
   14002f5b9:	add    BYTE PTR [rsi+0x0],ch
   14002f5bc:	jae    0x14002f5be
   14002f5be:	imul   eax,DWORD PTR [rax],0x740073
   14002f5c4:	add    BYTE PTR gs:[rsi+0x0],ch
   14002f5c8:	je     0x14002f5ca
   14002f5ca:	and    BYTE PTR [rax],al
   14002f5cc:	outs   dx,DWORD PTR ds:[rsi]
   14002f5cd:	add    BYTE PTR [rsi+0x0],ch
   14002f5d0:	add    BYTE PTR gs:[rax+0x0],bh
   14002f5d4:	imul   eax,DWORD PTR [rax],0x200074
   14002f5da:	(bad)  
   14002f5db:	add    BYTE PTR [rbp+0x0],ah
   14002f5de:	add    BYTE PTR [ecx+0x0],ch
   14002f5e2:	outs   dx,BYTE PTR ds:[rsi]
   14002f5e3:	add    BYTE PTR [rip+0x6e006500],ch        # 0x1ae035ae9
   14002f5e9:	add    BYTE PTR [rax+rax*1+0x20],ah
   14002f5ed:	add    BYTE PTR [rsi+0x0],dh
   14002f5f0:	(bad)  
   14002f5f1:	add    BYTE PTR [rdx+0x0],dh
   14002f5f4:	imul   eax,DWORD PTR [rax],0x620061
   14002f5fa:	ins    BYTE PTR es:[rdi],dx
   14002f5fb:	add    BYTE PTR [rbp+0x0],ah
   14002f5fe:	jae    0x14002f600
   14002f600:	or     eax,0xa00
   14002f605:	add    BYTE PTR [rax],al
   14002f607:	add    BYTE PTR [rax+rax*1+0x4f],al
   14002f60b:	add    BYTE PTR [rbp+0x0],cl
   14002f60e:	add    BYTE PTR [r9+0x0],cl
   14002f612:	rex.WRX add BYTE PTR [rax],r12b
   14002f615:	add    BYTE PTR [rbp+0x0],ah
   14002f618:	jb     0x14002f61a
   14002f61a:	jb     0x14002f61c
   14002f61c:	outs   dx,DWORD PTR ds:[rsi]
   14002f61d:	add    BYTE PTR [rdx+0x0],dh
   14002f620:	or     eax,0xa00
   14002f625:	add    BYTE PTR [rax],al
   14002f627:	add    BYTE PTR [rbx+0x0],dl
   14002f62a:	rex.WB add BYTE PTR [r14+0x0],cl
   14002f62e:	rex.RXB add BYTE PTR [r8],r12b
   14002f631:	add    BYTE PTR [rbp+0x0],ah
   14002f634:	jb     0x14002f636
   14002f636:	jb     0x14002f638
   14002f638:	outs   dx,DWORD PTR ds:[rsi]
   14002f639:	add    BYTE PTR [rdx+0x0],dh
   14002f63c:	or     eax,0xa00
   14002f641:	add    BYTE PTR [rax],al
   14002f643:	add    BYTE PTR [rax],al
   14002f645:	add    BYTE PTR [rax],al
   14002f647:	add    BYTE PTR [rax+rax*1+0x4c],dl
   14002f64b:	add    BYTE PTR [rdi+0x0],cl
   14002f64e:	push   rbx
   14002f64f:	add    BYTE PTR [rbx+0x0],dl
   14002f652:	and    BYTE PTR [rax],al
   14002f654:	add    BYTE PTR gs:[rdx+0x0],dh
   14002f658:	jb     0x14002f65a
   14002f65a:	outs   dx,DWORD PTR ds:[rsi]
   14002f65b:	add    BYTE PTR [rdx+0x0],dh
   14002f65e:	or     eax,0xa00
   14002f663:	add    BYTE PTR [rip+0xa00],cl        # 0x140030069
   14002f669:	add    BYTE PTR [rax],al
   14002f66b:	add    BYTE PTR [rax],al
   14002f66d:	add    BYTE PTR [rax],al
   14002f66f:	add    BYTE PTR [rdx+0x0],dh
   14002f672:	jne    0x14002f674
   14002f674:	outs   dx,BYTE PTR ds:[rsi]
   14002f675:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002f679:	add    BYTE PTR [rbp+0x0],ch
   14002f67c:	add    BYTE PTR gs:[rax],ah
   14002f67f:	add    BYTE PTR [rbp+0x0],ah
   14002f682:	jb     0x14002f684
   14002f684:	jb     0x14002f686
   14002f686:	outs   dx,DWORD PTR ds:[rsi]
   14002f687:	add    BYTE PTR [rdx+0x0],dh
   14002f68a:	and    BYTE PTR [rax],al
   14002f68c:	add    BYTE PTR [rax],al
   14002f68e:	add    BYTE PTR [rax],al
   14002f690:	push   rdx
   14002f691:	add    BYTE PTR [rbp+0x0],dh
   14002f694:	outs   dx,BYTE PTR ds:[rsi]
   14002f695:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002f699:	add    BYTE PTR [rbp+0x0],ch
   14002f69c:	add    BYTE PTR gs:[rax],ah
   14002f69f:	add    BYTE PTR [rbp+0x0],al
   14002f6a2:	jb     0x14002f6a4
   14002f6a4:	jb     0x14002f6a6
   14002f6a6:	outs   dx,DWORD PTR ds:[rsi]
   14002f6a7:	add    BYTE PTR [rdx+0x0],dh
   14002f6aa:	and    DWORD PTR [rax],eax
   14002f6ac:	or     al,BYTE PTR [rax]
   14002f6ae:	or     al,BYTE PTR [rax]
   14002f6b0:	push   rax
   14002f6b1:	add    BYTE PTR [rdx+0x0],dh
   14002f6b4:	outs   dx,DWORD PTR ds:[rsi]
   14002f6b5:	add    BYTE PTR [rdi+0x0],ah
   14002f6b8:	jb     0x14002f6ba
   14002f6ba:	(bad)  
   14002f6bb:	add    BYTE PTR [rbp+0x0],ch
   14002f6be:	cmp    al,BYTE PTR [rax]
   14002f6c0:	and    BYTE PTR [rax],al
   14002f6c2:	add    BYTE PTR [rax],al
   14002f6c4:	add    BYTE PTR [rax],al
   14002f6c6:	add    BYTE PTR [rax],al
   14002f6c8:	cmp    al,0x0
   14002f6ca:	jo     0x14002f6cc
   14002f6cc:	jb     0x14002f6ce
   14002f6ce:	outs   dx,DWORD PTR ds:[rsi]
   14002f6cf:	add    BYTE PTR [rdi+0x0],ah
   14002f6d2:	jb     0x14002f6d4
   14002f6d4:	(bad)  
   14002f6d5:	add    BYTE PTR [rbp+0x0],ch
   14002f6d8:	and    BYTE PTR [rax],al
   14002f6da:	outs   dx,BYTE PTR ds:[rsi]
   14002f6db:	add    BYTE PTR [rcx+0x0],ah
   14002f6de:	ins    DWORD PTR es:[rdi],dx
   14002f6df:	add    BYTE PTR [rbp+0x0],ah
   14002f6e2:	and    BYTE PTR [rax],al
   14002f6e4:	jne    0x14002f6e6
   14002f6e6:	outs   dx,BYTE PTR ds:[rsi]
   14002f6e7:	add    BYTE PTR [rbx+0x0],ch
   14002f6ea:	outs   dx,BYTE PTR ds:[rsi]
   14002f6eb:	add    BYTE PTR [rdi+0x0],ch
   14002f6ee:	ja     0x14002f6f0
   14002f6f0:	outs   dx,BYTE PTR ds:[rsi]
   14002f6f1:	add    BYTE PTR [rsi],bh
   14002f6f3:	add    BYTE PTR [rax],al
   14002f6f5:	add    BYTE PTR [rax],al
   14002f6f7:	add    BYTE PTR [rsi],ch
   14002f6f9:	add    BYTE PTR [rsi],ch
   14002f6fb:	add    BYTE PTR [rsi],ch
   14002f6fd:	add    BYTE PTR [rax],al
   14002f6ff:	add    BYTE PTR [rdx],cl
   14002f701:	add    BYTE PTR [rdx],cl
	...
   14002f70f:	add    BYTE PTR [rbp+0x0],cl
   14002f712:	imul   eax,DWORD PTR [rax],0x720063
   14002f718:	outs   dx,DWORD PTR ds:[rsi]
   14002f719:	add    BYTE PTR [rbx+0x0],dh
   14002f71c:	outs   dx,DWORD PTR ds:[rsi]
   14002f71d:	add    BYTE PTR [rsi+0x0],ah
   14002f720:	je     0x14002f722
   14002f722:	and    BYTE PTR [rax],al
   14002f724:	push   rsi
   14002f725:	add    BYTE PTR [rcx+0x0],ch
   14002f728:	jae    0x14002f72a
   14002f72a:	jne    0x14002f72c
   14002f72c:	(bad)  
   14002f72d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14002f731:	add    BYTE PTR [rbx+0x0],al
   14002f734:	sub    eax,DWORD PTR [rax]
   14002f736:	sub    eax,DWORD PTR [rax]
   14002f738:	and    BYTE PTR [rax],al
   14002f73a:	push   rdx
   14002f73b:	add    BYTE PTR [rbp+0x0],dh
   14002f73e:	outs   dx,BYTE PTR ds:[rsi]
   14002f73f:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002f743:	add    BYTE PTR [rbp+0x0],ch
   14002f746:	add    BYTE PTR gs:[rax],ah
   14002f749:	add    BYTE PTR [rax+rax*1+0x69],cl
   14002f74d:	add    BYTE PTR [rdx+0x0],ah
   14002f750:	jb     0x14002f752
   14002f752:	(bad)  
   14002f753:	add    BYTE PTR [rdx+0x0],dh
   14002f756:	jns    0x14002f758
	...
   14002f760:	imul   eax,DWORD PTR [rax],0x65
   14002f763:	add    BYTE PTR [rdx+0x0],dh
   14002f766:	outs   dx,BYTE PTR ds:[rsi]
   14002f767:	add    BYTE PTR [rbp+0x0],ah
   14002f76a:	ins    BYTE PTR es:[rdi],dx
   14002f76b:	add    BYTE PTR [rbx],dh
   14002f76d:	add    BYTE PTR [rdx],dh
   14002f76f:	add    BYTE PTR [rsi],ch
   14002f771:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14002f775:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002f779:	add    BYTE PTR [rax],al
   14002f77b:	add    BYTE PTR [rax],al
   14002f77d:	add    BYTE PTR [rax],al
   14002f77f:	add    BYTE PTR [rsi+0x6c],al
   14002f782:	jae    0x14002f7c5
   14002f784:	ins    BYTE PTR es:[rdi],dx
   14002f785:	ins    BYTE PTR es:[rdi],dx
   14002f786:	outs   dx,DWORD PTR ds:[rsi]
   14002f787:	movsxd eax,DWORD PTR [rax]
   14002f789:	add    BYTE PTR [rax],al
   14002f78b:	add    BYTE PTR [rax],al
   14002f78d:	add    BYTE PTR [rax],al
   14002f78f:	add    BYTE PTR [rsi+0x6c],al
   14002f792:	jae    0x14002f7da
   14002f794:	jb     0x14002f7fb
   14002f796:	add    BYTE PTR gs:[rsi+0x6c],al
   14002f79a:	jae    0x14002f7e3
   14002f79c:	gs je  0x14002f7f5
   14002f79f:	(bad)  
   14002f7a0:	ins    BYTE PTR es:[rdi],dx
   14002f7a1:	jne    0x14002f808
   14002f7a3:	add    BYTE PTR [rax],al
   14002f7a5:	add    BYTE PTR [rax],al
   14002f7a7:	add    BYTE PTR [rsi+0x6c],al
   14002f7aa:	jae    0x14002f7ff
   14002f7ac:	gs je  0x14002f805
   14002f7af:	(bad)  
   14002f7b0:	ins    BYTE PTR es:[rdi],dx
   14002f7b1:	jne    0x14002f818
   14002f7b3:	add    BYTE PTR [rax],al
   14002f7b5:	add    BYTE PTR [rax],al
   14002f7b7:	add    BYTE PTR [rcx+0x6e],cl
   14002f7ba:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14002f7c2:	rex.XB jb 0x14002f82e
   14002f7c5:	je     0x14002f830
   14002f7c7:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002f7ca:	push   rbx
   14002f7cb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002f7d0:	outs   dx,BYTE PTR ds:[rsi]
   14002f7d1:	rex.RB js 0x14002f7d4
   14002f7d4:	add    BYTE PTR [rax],al
   14002f7d6:	add    BYTE PTR [rax],al
   14002f7d8:	rex.XB jb 0x14002f840
   14002f7db:	(bad)  
   14002f7dc:	je     0x14002f843
   14002f7de:	rex.RB jbe 0x14002f846
   14002f7e1:	outs   dx,BYTE PTR ds:[rsi]
   14002f7e2:	je     0x14002f829
   14002f7e4:	js     0x14002f83d
   14002f7e6:	add    BYTE PTR [rax],al
   14002f7e8:	rex.XB jb 0x14002f850
   14002f7eb:	(bad)  
   14002f7ec:	je     0x14002f853
   14002f7ee:	push   rbx
   14002f7ef:	gs ins DWORD PTR es:[rdi],dx
   14002f7f1:	(bad)  
   14002f7f2:	jo     0x14002f85c
   14002f7f4:	outs   dx,DWORD PTR ds:[rsi]
   14002f7f5:	jb     0x14002f85c
   14002f7f7:	rex.RB js 0x14002f851
   14002f7fa:	add    BYTE PTR [rax],al
   14002f7fc:	add    BYTE PTR [rax],al
   14002f7fe:	add    BYTE PTR [rax],al
   14002f800:	push   rbx
   14002f801:	gs je  0x14002f858
   14002f804:	push   0x64616572
   14002f809:	push   rbx
   14002f80a:	je     0x14002f86d
   14002f80c:	movsxd ebp,DWORD PTR [rbx+0x47]
   14002f80f:	jne    0x14002f872
   14002f811:	jb     0x14002f874
   14002f813:	outs   dx,BYTE PTR ds:[rsi]
   14002f814:	je     0x14002f87b
   14002f816:	add    BYTE PTR gs:[rbx+0x72],al
   14002f81a:	gs (bad) 
   14002f81c:	je     0x14002f883
   14002f81e:	push   rsp
   14002f81f:	push   0x64616572
   14002f824:	jo     0x14002f895
   14002f826:	outs   dx,DWORD PTR ds:[rsi]
   14002f827:	ins    BYTE PTR es:[rdi],dx
   14002f828:	push   rsp
   14002f829:	imul   ebp,DWORD PTR [rbp+0x65],0x72
   14002f830:	push   rbx
   14002f831:	gs je  0x14002f888
   14002f834:	push   0x64616572
   14002f839:	jo     0x14002f8aa
   14002f83b:	outs   dx,DWORD PTR ds:[rsi]
   14002f83c:	ins    BYTE PTR es:[rdi],dx
   14002f83d:	push   rsp
   14002f83e:	imul   ebp,DWORD PTR [rbp+0x65],0x72
   14002f845:	add    BYTE PTR [rax],al
   14002f847:	add    BYTE PTR [rdi+0x61],dl
   14002f84a:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x72685472
   14002f852:	gs (bad) 
   14002f854:	fs jo  0x14002f8c6
   14002f857:	outs   dx,DWORD PTR ds:[rsi]
   14002f858:	ins    BYTE PTR es:[rdi],dx
   14002f859:	push   rsp
   14002f85a:	imul   ebp,DWORD PTR [rbp+0x65],0x6c614372
   14002f861:	ins    BYTE PTR es:[rdi],dx
   14002f862:	(bad)  
   14002f864:	movsxd ebp,DWORD PTR [rbx+0x73]
   14002f867:	add    BYTE PTR [rbx+0x6c],al
   14002f86a:	outs   dx,DWORD PTR ds:[rsi]
   14002f86b:	jae    0x14002f8d2
   14002f86d:	push   rsp
   14002f86e:	push   0x64616572
   14002f873:	jo     0x14002f8e4
   14002f875:	outs   dx,DWORD PTR ds:[rsi]
   14002f876:	ins    BYTE PTR es:[rdi],dx
   14002f877:	push   rsp
   14002f878:	imul   ebp,DWORD PTR [rbp+0x65],0x72
   14002f87f:	add    BYTE PTR [rbx+0x72],al
   14002f882:	gs (bad) 
   14002f884:	je     0x14002f8eb
   14002f886:	push   rsp
   14002f887:	push   0x64616572
   14002f88c:	jo     0x14002f8fd
   14002f88e:	outs   dx,DWORD PTR ds:[rsi]
   14002f88f:	ins    BYTE PTR es:[rdi],dx
   14002f890:	push   rdi
   14002f891:	(bad)  
   14002f892:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x65530000
   14002f89a:	je     0x14002f8f0
   14002f89c:	push   0x64616572
   14002f8a1:	jo     0x14002f912
   14002f8a3:	outs   dx,DWORD PTR ds:[rsi]
   14002f8a4:	ins    BYTE PTR es:[rdi],dx
   14002f8a5:	push   rdi
   14002f8a6:	(bad)  
   14002f8a7:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x0
   14002f8af:	add    BYTE PTR [rbx+0x6c],al
   14002f8b2:	outs   dx,DWORD PTR ds:[rsi]
   14002f8b3:	jae    0x14002f91a
   14002f8b5:	push   rsp
   14002f8b6:	push   0x64616572
   14002f8bb:	jo     0x14002f92c
   14002f8bd:	outs   dx,DWORD PTR ds:[rsi]
   14002f8be:	ins    BYTE PTR es:[rdi],dx
   14002f8bf:	push   rdi
   14002f8c0:	(bad)  
   14002f8c1:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x46000000
   14002f8c9:	ins    BYTE PTR es:[rdi],dx
   14002f8ca:	jne    0x14002f93f
   14002f8cc:	push   0x636f7250
   14002f8d1:	gs jae 0x14002f947
   14002f8d4:	push   rdi
   14002f8d5:	jb     0x14002f940
   14002f8d7:	je     0x14002f93e
   14002f8d9:	rex.X jne 0x14002f942
   14002f8dc:	data16 gs jb 0x14002f953
	...
   14002f8e8:	rex.RX jb 0x14002f950
   14002f8eb:	imul   r12,QWORD PTR gs:[rdx+0x72],0x57797261
   14002f8f4:	push   0x61436e65
   14002f8f9:	ins    BYTE PTR es:[rdi],dx
   14002f8fa:	ins    BYTE PTR es:[rdi],dx
   14002f8fb:	(bad)  
   14002f8fd:	movsxd ebp,DWORD PTR [rbx+0x52]
   14002f900:	gs je  0x14002f978
   14002f903:	jb     0x14002f973
   14002f905:	jae    0x14002f907
   14002f907:	add    BYTE PTR [rdi+0x65],al
   14002f90a:	je     0x14002f94f
   14002f90c:	jne    0x14002f980
   14002f90e:	jb     0x14002f975
   14002f910:	outs   dx,BYTE PTR ds:[rsi]
   14002f911:	je     0x14002f963
   14002f913:	jb     0x14002f984
   14002f915:	movsxd esp,DWORD PTR [rbp+0x73]
   14002f918:	jae    0x14002f989
   14002f91a:	jb     0x14002f96a
   14002f91c:	jne    0x14002f98b
   14002f91e:	(bad)  
   14002f91f:	gs jb  0x14002f922
   14002f922:	add    BYTE PTR [rax],al
   14002f924:	add    BYTE PTR [rax],al
   14002f926:	add    BYTE PTR [rax],al
   14002f928:	rex.RXB
   14002f929:	gs je  0x14002f978
   14002f92c:	outs   dx,DWORD PTR ds:[rsi]
   14002f92d:	imul   esp,DWORD PTR [ebx+0x61],0x6f72506c
   14002f935:	movsxd esp,DWORD PTR [rbp+0x73]
   14002f938:	jae    0x14002f9a9
   14002f93a:	jb     0x14002f985
   14002f93c:	outs   dx,BYTE PTR ds:[rsi]
   14002f93d:	outs   dx,WORD PTR ds:[rsi]
   14002f93f:	jb     0x14002f9ae
   14002f941:	(bad)  
   14002f942:	je     0x14002f9ad
   14002f944:	outs   dx,DWORD PTR ds:[rsi]
   14002f945:	outs   dx,BYTE PTR ds:[rsi]
   14002f946:	add    BYTE PTR [rax],al
   14002f948:	rex.XB jb 0x14002f9b0
   14002f94b:	(bad)  
   14002f94c:	je     0x14002f9b3
   14002f94e:	push   rbx
   14002f94f:	jns    0x14002f9be
   14002f951:	(bad)  
   14002f952:	outs   dx,DWORD PTR ds:[rsi]
   14002f953:	ins    BYTE PTR es:[rdi],dx
   14002f954:	imul   esp,DWORD PTR [rbx+0x4c],0x576b6e69
   14002f95b:	add    BYTE PTR [rax],al
   14002f95d:	add    BYTE PTR [rax],al
   14002f95f:	add    BYTE PTR [rbx+0x65],dl
   14002f962:	je     0x14002f9a8
   14002f964:	gs data16 (bad) 
   14002f967:	jne    0x14002f9d5
   14002f969:	je     0x14002f9af
   14002f96b:	ins    BYTE PTR es:[rdi],dx
   14002f96c:	ins    BYTE PTR es:[rdi],dx
   14002f96d:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14002f975:	imul   esp,DWORD PTR [rbp+0x73],0x0
   14002f97c:	add    BYTE PTR [rax],al
   14002f97e:	add    BYTE PTR [rax],al
   14002f980:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14002f982:	jne    0x14002f9f1
   14002f984:	push   rbx
   14002f985:	jns    0x14002f9fa
   14002f987:	je     0x14002f9ee
   14002f989:	ins    DWORD PTR es:[rdi],dx
   14002f98a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14002f98c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002f98f:	gs jae 0x14002f9d7
   14002f992:	js     0x14002f994
   14002f994:	add    BYTE PTR [rax],al
   14002f996:	add    BYTE PTR [rax],al
   14002f998:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002f99a:	ins    DWORD PTR es:[rdi],dx
   14002f99b:	jo     0x14002f9fe
   14002f99d:	jb     0x14002fa04
   14002f99f:	push   rbx
   14002f9a0:	je     0x14002fa14
   14002f9a2:	imul   ebp,DWORD PTR [rsi+0x67],0x47007845
   14002f9a9:	gs je  0x14002f9f0
   14002f9ac:	(bad)  
   14002f9ad:	je     0x14002fa14
   14002f9af:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14002f9b1:	jb     0x14002fa20
   14002f9b3:	(bad)  
   14002f9b4:	je     0x14002f9fb
   14002f9b6:	js     0x14002f9b8
   14002f9b8:	rex.RXB
   14002f9b9:	gs je  0x14002fa08
   14002f9bc:	outs   dx,DWORD PTR ds:[rsi]
   14002f9bd:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002f9c0:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14002f9c3:	outs   dx,WORD PTR ds:[rsi]
   14002f9c5:	rex.RB js 0x14002f9c8
   14002f9c8:	rex.RXB
   14002f9c9:	gs je  0x14002fa20
   14002f9cc:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
   14002f9d3:	(bad)  
   14002f9d4:	je     0x14002fa1b
   14002f9d6:	js     0x14002f9d8
   14002f9d8:	rex.RXB
   14002f9d9:	gs je  0x14002fa31
   14002f9dc:	jae    0x14002fa43
   14002f9de:	jb     0x14002fa24
   14002f9e0:	gs data16 (bad) 
   14002f9e3:	jne    0x14002fa51
   14002f9e5:	je     0x14002fa33
   14002f9e7:	outs   dx,DWORD PTR ds:[rsi]
   14002f9e8:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002f9eb:	gs rex.WRX (bad) 
   14002f9ee:	ins    DWORD PTR es:[rdi],dx
   14002f9ef:	add    BYTE PTR gs:[rax],al
   14002f9f2:	add    BYTE PTR [rax],al
   14002f9f4:	add    BYTE PTR [rax],al
   14002f9f6:	add    BYTE PTR [rax],al
   14002f9f8:	rex.WB jae 0x14002fa51
   14002f9fb:	(bad)  
   14002f9fc:	ins    BYTE PTR es:[rdi],dx
   14002f9fd:	imul   esp,DWORD PTR [rsp+rcx*2+0x6f],0x656c6163
   14002fa05:	rex.WRX (bad) 
   14002fa07:	ins    DWORD PTR es:[rdi],dx
   14002fa08:	add    BYTE PTR gs:[rax],al
   14002fa0b:	add    BYTE PTR [rax],al
   14002fa0d:	add    BYTE PTR [rax],al
   14002fa0f:	add    BYTE PTR [rbx+rax*2+0x4d],cl
   14002fa13:	(bad)  
   14002fa14:	jo     0x14002fa69
   14002fa16:	je     0x14002fa8a
   14002fa18:	imul   ebp,DWORD PTR [rsi+0x67],0x7845
   14002fa1f:	add    BYTE PTR [rdi+0x65],al
   14002fa22:	je     0x14002fa67
   14002fa24:	jne    0x14002fa98
   14002fa26:	jb     0x14002fa8d
   14002fa28:	outs   dx,BYTE PTR ds:[rsi]
   14002fa29:	je     0x14002fa7b
   14002fa2b:	(bad)  
   14002fa2c:	movsxd ebp,DWORD PTR [rbx+0x61]
   14002fa2f:	addr32 gs rex.WB
   14002fa32:	add    BYTE PTR fs:[rax],al
   14002fa35:	add    BYTE PTR [rax],al
   14002fa37:	add    BYTE PTR [rdi+0x65],al
   14002fa3a:	je     0x14002fa90
   14002fa3c:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14002fa43:	je     0x14002fa7b
   14002fa45:	xor    al,0x0
   14002fa47:	add    BYTE PTR [rdi+0x65],al
   14002fa4a:	je     0x14002fa92
   14002fa4c:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x726f666e
   14002fa54:	ins    DWORD PTR es:[rdi],dx
   14002fa55:	(bad)  
   14002fa56:	je     0x14002fac1
   14002fa58:	outs   dx,DWORD PTR ds:[rsi]
   14002fa59:	outs   dx,BYTE PTR ds:[rsi]
   14002fa5a:	rex.X jns 0x14002faa5
   14002fa5d:	(bad)  
   14002fa5e:	outs   dx,BYTE PTR ds:[rsi]
   14002fa5f:	fs ins BYTE PTR es:[rdi],dx
   14002fa61:	gs rex.RB js 0x14002fabc
   14002fa65:	add    BYTE PTR [rax],al
   14002fa67:	add    BYTE PTR [rbx+0x65],dl
   14002fa6a:	je     0x14002fab2
   14002fa6c:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x726f666e
   14002fa74:	ins    DWORD PTR es:[rdi],dx
   14002fa75:	(bad)  
   14002fa76:	je     0x14002fae1
   14002fa78:	outs   dx,DWORD PTR ds:[rsi]
   14002fa79:	outs   dx,BYTE PTR ds:[rsi]
   14002fa7a:	rex.X jns 0x14002fac5
   14002fa7d:	(bad)  
   14002fa7e:	outs   dx,BYTE PTR ds:[rsi]
   14002fa7f:	fs ins BYTE PTR es:[rdi],dx
   14002fa81:	gs push rdi
	...
   14002fa8f:	add    BYTE PTR [rcx],al
   14002fa91:	add    BYTE PTR [rax],al
   14002fa93:	add    BYTE PTR [rax],al
   14002fa95:	add    BYTE PTR [rax],al
   14002fa97:	add    BYTE PTR [rax],dl
   14002fa99:	(bad)  
   14002fa9a:	add    eax,DWORD PTR [rax+0x1]
   14002fa9d:	add    BYTE PTR [rax],al
   14002fa9f:	add    BYTE PTR [rdx],al
   14002faa1:	add    BYTE PTR [rax],al
   14002faa3:	add    BYTE PTR [rax],al
   14002faa5:	add    BYTE PTR [rax],al
   14002faa7:	add    BYTE PTR [rax],bl
   14002faa9:	(bad)  
   14002faaa:	add    eax,DWORD PTR [rax+0x1]
   14002faad:	add    BYTE PTR [rax],al
   14002faaf:	add    BYTE PTR [rbx],al
   14002fab1:	add    BYTE PTR [rax],al
   14002fab3:	add    BYTE PTR [rax],al
   14002fab5:	add    BYTE PTR [rax],al
   14002fab7:	add    BYTE PTR [rax],ah
   14002fab9:	(bad)  
   14002faba:	add    eax,DWORD PTR [rax+0x1]
   14002fabd:	add    BYTE PTR [rax],al
   14002fabf:	add    BYTE PTR [rax+rax*1],al
   14002fac2:	add    BYTE PTR [rax],al
   14002fac4:	add    BYTE PTR [rax],al
   14002fac6:	add    BYTE PTR [rax],al
   14002fac8:	sub    BYTE PTR [rdi],dl
   14002faca:	add    eax,DWORD PTR [rax+0x1]
   14002facd:	add    BYTE PTR [rax],al
   14002facf:	add    BYTE PTR [rip+0x0],al        # 0x14002fad5
   14002fad5:	add    BYTE PTR [rax],al
   14002fad7:	add    BYTE PTR [rax],bh
   14002fad9:	(bad)  
   14002fada:	add    eax,DWORD PTR [rax+0x1]
   14002fadd:	add    BYTE PTR [rax],al
   14002fadf:	add    BYTE PTR [rsi],al
   14002fae1:	add    BYTE PTR [rax],al
   14002fae3:	add    BYTE PTR [rax],al
   14002fae5:	add    BYTE PTR [rax],al
   14002fae7:	add    BYTE PTR [rax+0x17],al
   14002faea:	add    eax,DWORD PTR [rax+0x1]
   14002faed:	add    BYTE PTR [rax],al
   14002faef:	add    BYTE PTR [rdi],al
   14002faf1:	add    BYTE PTR [rax],al
   14002faf3:	add    BYTE PTR [rax],al
   14002faf5:	add    BYTE PTR [rax],al
   14002faf7:	add    BYTE PTR [rax+0x17],cl
   14002fafa:	add    eax,DWORD PTR [rax+0x1]
   14002fafd:	add    BYTE PTR [rax],al
   14002faff:	add    BYTE PTR [rax],cl
   14002fb01:	add    BYTE PTR [rax],al
   14002fb03:	add    BYTE PTR [rax],al
   14002fb05:	add    BYTE PTR [rax],al
   14002fb07:	add    BYTE PTR [rax+0x17],dl
   14002fb0a:	add    eax,DWORD PTR [rax+0x1]
   14002fb0d:	add    BYTE PTR [rax],al
   14002fb0f:	add    BYTE PTR [rcx],cl
   14002fb11:	add    BYTE PTR [rax],al
   14002fb13:	add    BYTE PTR [rax],al
   14002fb15:	add    BYTE PTR [rax],al
   14002fb17:	add    BYTE PTR [rax+0x17],bl
   14002fb1a:	add    eax,DWORD PTR [rax+0x1]
   14002fb1d:	add    BYTE PTR [rax],al
   14002fb1f:	add    BYTE PTR [rdx],cl
   14002fb21:	add    BYTE PTR [rax],al
   14002fb23:	add    BYTE PTR [rax],al
   14002fb25:	add    BYTE PTR [rax],al
   14002fb27:	add    BYTE PTR [rax+0x17],ah
   14002fb2a:	add    eax,DWORD PTR [rax+0x1]
   14002fb2d:	add    BYTE PTR [rax],al
   14002fb2f:	add    BYTE PTR [rbx],cl
   14002fb31:	add    BYTE PTR [rax],al
   14002fb33:	add    BYTE PTR [rax],al
   14002fb35:	add    BYTE PTR [rax],al
   14002fb37:	add    BYTE PTR [rax+0x17],ch
   14002fb3a:	add    eax,DWORD PTR [rax+0x1]
   14002fb3d:	add    BYTE PTR [rax],al
   14002fb3f:	add    BYTE PTR [rax+rax*1],cl
   14002fb42:	add    BYTE PTR [rax],al
   14002fb44:	add    BYTE PTR [rax],al
   14002fb46:	add    BYTE PTR [rax],al
   14002fb48:	jo     0x14002fb61
   14002fb4a:	add    eax,DWORD PTR [rax+0x1]
   14002fb4d:	add    BYTE PTR [rax],al
   14002fb4f:	add    BYTE PTR [rip+0x0],cl        # 0x14002fb55
   14002fb55:	add    BYTE PTR [rax],al
   14002fb57:	add    BYTE PTR [rax+0x17],bh
   14002fb5a:	add    eax,DWORD PTR [rax+0x1]
   14002fb5d:	add    BYTE PTR [rax],al
   14002fb5f:	add    BYTE PTR [rsi],cl
   14002fb61:	add    BYTE PTR [rax],al
   14002fb63:	add    BYTE PTR [rax],al
   14002fb65:	add    BYTE PTR [rax],al
   14002fb67:	add    BYTE PTR [rax+0x1400317],al
   14002fb6d:	add    BYTE PTR [rax],al
   14002fb6f:	add    BYTE PTR [rdi],cl
   14002fb71:	add    BYTE PTR [rax],al
   14002fb73:	add    BYTE PTR [rax],al
   14002fb75:	add    BYTE PTR [rax],al
   14002fb77:	add    BYTE PTR [rax+0x1400317],cl
   14002fb7d:	add    BYTE PTR [rax],al
   14002fb7f:	add    BYTE PTR [rax],dl
   14002fb81:	add    BYTE PTR [rax],al
   14002fb83:	add    BYTE PTR [rax],al
   14002fb85:	add    BYTE PTR [rax],al
   14002fb87:	add    BYTE PTR [rax+0x1400317],dl
   14002fb8d:	add    BYTE PTR [rax],al
   14002fb8f:	add    BYTE PTR [rcx],dl
   14002fb91:	add    BYTE PTR [rax],al
   14002fb93:	add    BYTE PTR [rax],al
   14002fb95:	add    BYTE PTR [rax],al
   14002fb97:	add    BYTE PTR [rax+0x1400317],bl
   14002fb9d:	add    BYTE PTR [rax],al
   14002fb9f:	add    BYTE PTR [rdx],dl
   14002fba1:	add    BYTE PTR [rax],al
   14002fba3:	add    BYTE PTR [rax],al
   14002fba5:	add    BYTE PTR [rax],al
   14002fba7:	add    BYTE PTR [rax+0x1400317],ah
   14002fbad:	add    BYTE PTR [rax],al
   14002fbaf:	add    BYTE PTR [rbx],dl
   14002fbb1:	add    BYTE PTR [rax],al
   14002fbb3:	add    BYTE PTR [rax],al
   14002fbb5:	add    BYTE PTR [rax],al
   14002fbb7:	add    BYTE PTR [rax+0x1400317],ch
   14002fbbd:	add    BYTE PTR [rax],al
   14002fbbf:	add    BYTE PTR [rax+rax*1],dl
   14002fbc2:	add    BYTE PTR [rax],al
   14002fbc4:	add    BYTE PTR [rax],al
   14002fbc6:	add    BYTE PTR [rax],al
   14002fbc8:	mov    al,0x17
   14002fbca:	add    eax,DWORD PTR [rax+0x1]
   14002fbcd:	add    BYTE PTR [rax],al
   14002fbcf:	add    BYTE PTR [rip+0x0],dl        # 0x14002fbd5
   14002fbd5:	add    BYTE PTR [rax],al
   14002fbd7:	add    BYTE PTR [rax+0x1400317],bh
   14002fbdd:	add    BYTE PTR [rax],al
   14002fbdf:	add    BYTE PTR [rsi],dl
   14002fbe1:	add    BYTE PTR [rax],al
   14002fbe3:	add    BYTE PTR [rax],al
   14002fbe5:	add    BYTE PTR [rax],al
   14002fbe7:	add    al,al
   14002fbe9:	(bad)  
   14002fbea:	add    eax,DWORD PTR [rax+0x1]
   14002fbed:	add    BYTE PTR [rax],al
   14002fbef:	add    BYTE PTR [rax],bl
   14002fbf1:	add    BYTE PTR [rax],al
   14002fbf3:	add    BYTE PTR [rax],al
   14002fbf5:	add    BYTE PTR [rax],al
   14002fbf7:	add    al,cl
   14002fbf9:	(bad)  
   14002fbfa:	add    eax,DWORD PTR [rax+0x1]
   14002fbfd:	add    BYTE PTR [rax],al
   14002fbff:	add    BYTE PTR [rcx],bl
   14002fc01:	add    BYTE PTR [rax],al
   14002fc03:	add    BYTE PTR [rax],al
   14002fc05:	add    BYTE PTR [rax],al
   14002fc07:	add    al,dl
   14002fc09:	(bad)  
   14002fc0a:	add    eax,DWORD PTR [rax+0x1]
   14002fc0d:	add    BYTE PTR [rax],al
   14002fc0f:	add    BYTE PTR [rdx],bl
   14002fc11:	add    BYTE PTR [rax],al
   14002fc13:	add    BYTE PTR [rax],al
   14002fc15:	add    BYTE PTR [rax],al
   14002fc17:	add    al,bl
   14002fc19:	(bad)  
   14002fc1a:	add    eax,DWORD PTR [rax+0x1]
   14002fc1d:	add    BYTE PTR [rax],al
   14002fc1f:	add    BYTE PTR [rbx],bl
   14002fc21:	add    BYTE PTR [rax],al
   14002fc23:	add    BYTE PTR [rax],al
   14002fc25:	add    BYTE PTR [rax],al
   14002fc27:	add    al,ah
   14002fc29:	(bad)  
   14002fc2a:	add    eax,DWORD PTR [rax+0x1]
   14002fc2d:	add    BYTE PTR [rax],al
   14002fc2f:	add    BYTE PTR [rax+rax*1],bl
   14002fc32:	add    BYTE PTR [rax],al
   14002fc34:	add    BYTE PTR [rax],al
   14002fc36:	add    BYTE PTR [rax],al
   14002fc38:	call   0x14142ff54
   14002fc3d:	add    BYTE PTR [rax],al
   14002fc3f:	add    BYTE PTR [rip+0x0],bl        # 0x14002fc45
   14002fc45:	add    BYTE PTR [rax],al
   14002fc47:	add    al,dh
   14002fc49:	(bad)  
   14002fc4a:	add    eax,DWORD PTR [rax+0x1]
   14002fc4d:	add    BYTE PTR [rax],al
   14002fc4f:	add    BYTE PTR [rsi],bl
   14002fc51:	add    BYTE PTR [rax],al
   14002fc53:	add    BYTE PTR [rax],al
   14002fc55:	add    BYTE PTR [rax],al
   14002fc57:	add    al,bh
   14002fc59:	(bad)  
   14002fc5a:	add    eax,DWORD PTR [rax+0x1]
   14002fc5d:	add    BYTE PTR [rax],al
   14002fc5f:	add    BYTE PTR [rdi],bl
	...
   14002fc69:	sbb    BYTE PTR [rbx],al
   14002fc6b:	rex add DWORD PTR [rax],eax
   14002fc6e:	add    BYTE PTR [rax],al
   14002fc70:	and    BYTE PTR [rax],al
   14002fc72:	add    BYTE PTR [rax],al
   14002fc74:	add    BYTE PTR [rax],al
   14002fc76:	add    BYTE PTR [rax],al
   14002fc78:	or     BYTE PTR [rax],bl
   14002fc7a:	add    eax,DWORD PTR [rax+0x1]
   14002fc7d:	add    BYTE PTR [rax],al
   14002fc7f:	add    BYTE PTR [rcx],ah
   14002fc81:	add    BYTE PTR [rax],al
   14002fc83:	add    BYTE PTR [rax],al
   14002fc85:	add    BYTE PTR [rax],al
   14002fc87:	add    BYTE PTR [rax],dl
   14002fc89:	sbb    BYTE PTR [rbx],al
   14002fc8b:	rex add DWORD PTR [rax],eax
   14002fc8e:	add    BYTE PTR [rax],al
   14002fc90:	and    al,BYTE PTR [rax]
   14002fc92:	add    BYTE PTR [rax],al
   14002fc94:	add    BYTE PTR [rax],al
   14002fc96:	add    BYTE PTR [rax],al
   14002fc98:	sbb    BYTE PTR [rax],bl
   14002fc9a:	add    eax,DWORD PTR [rax+0x1]
   14002fc9d:	add    BYTE PTR [rax],al
   14002fc9f:	add    BYTE PTR [rbx],ah
   14002fca1:	add    BYTE PTR [rax],al
   14002fca3:	add    BYTE PTR [rax],al
   14002fca5:	add    BYTE PTR [rax],al
   14002fca7:	add    BYTE PTR [rax],ah
   14002fca9:	sbb    BYTE PTR [rbx],al
   14002fcab:	rex add DWORD PTR [rax],eax
   14002fcae:	add    BYTE PTR [rax],al
   14002fcb0:	and    al,0x0
   14002fcb2:	add    BYTE PTR [rax],al
   14002fcb4:	add    BYTE PTR [rax],al
   14002fcb6:	add    BYTE PTR [rax],al
   14002fcb8:	sub    BYTE PTR [rax],bl
   14002fcba:	add    eax,DWORD PTR [rax+0x1]
   14002fcbd:	add    BYTE PTR [rax],al
   14002fcbf:	add    BYTE PTR [rip+0x0],ah        # 0x14002fcc5
   14002fcc5:	add    BYTE PTR [rax],al
   14002fcc7:	add    BYTE PTR [rax],dh
   14002fcc9:	sbb    BYTE PTR [rbx],al
   14002fccb:	rex add DWORD PTR [rax],eax
   14002fcce:	add    BYTE PTR [rax],al
   14002fcd0:	add    BYTE PTR es:[rax],al
   14002fcd3:	add    BYTE PTR [rax],al
   14002fcd5:	add    BYTE PTR [rax],al
   14002fcd7:	add    BYTE PTR [rax],bh
   14002fcd9:	sbb    BYTE PTR [rbx],al
   14002fcdb:	rex add DWORD PTR [rax],eax
   14002fcde:	add    BYTE PTR [rax],al
   14002fce0:	(bad)  
   14002fce1:	add    BYTE PTR [rax],al
   14002fce3:	add    BYTE PTR [rax],al
   14002fce5:	add    BYTE PTR [rax],al
   14002fce7:	add    BYTE PTR [rax+0x18],al
   14002fcea:	add    eax,DWORD PTR [rax+0x1]
   14002fced:	add    BYTE PTR [rax],al
   14002fcef:	add    BYTE PTR [rcx],ch
   14002fcf1:	add    BYTE PTR [rax],al
   14002fcf3:	add    BYTE PTR [rax],al
   14002fcf5:	add    BYTE PTR [rax],al
   14002fcf7:	add    BYTE PTR [rax+0x18],cl
   14002fcfa:	add    eax,DWORD PTR [rax+0x1]
   14002fcfd:	add    BYTE PTR [rax],al
   14002fcff:	add    BYTE PTR [rdx],ch
   14002fd01:	add    BYTE PTR [rax],al
   14002fd03:	add    BYTE PTR [rax],al
   14002fd05:	add    BYTE PTR [rax],al
   14002fd07:	add    BYTE PTR [rax+0x18],dl
   14002fd0a:	add    eax,DWORD PTR [rax+0x1]
   14002fd0d:	add    BYTE PTR [rax],al
   14002fd0f:	add    BYTE PTR [rbx],ch
   14002fd11:	add    BYTE PTR [rax],al
   14002fd13:	add    BYTE PTR [rax],al
   14002fd15:	add    BYTE PTR [rax],al
   14002fd17:	add    BYTE PTR [rax+0x18],bl
   14002fd1a:	add    eax,DWORD PTR [rax+0x1]
   14002fd1d:	add    BYTE PTR [rax],al
   14002fd1f:	add    BYTE PTR [rax+rax*1],ch
   14002fd22:	add    BYTE PTR [rax],al
   14002fd24:	add    BYTE PTR [rax],al
   14002fd26:	add    BYTE PTR [rax],al
   14002fd28:	(bad)  
   14002fd29:	sbb    BYTE PTR [rbx],al
   14002fd2b:	rex add DWORD PTR [rax],eax
   14002fd2e:	add    BYTE PTR [rax],al
   14002fd30:	sub    eax,0x0
   14002fd35:	add    BYTE PTR [rax],al
   14002fd37:	add    BYTE PTR [rax+0x18],ch
   14002fd3a:	add    eax,DWORD PTR [rax+0x1]
   14002fd3d:	add    BYTE PTR [rax],al
   14002fd3f:	add    BYTE PTR [rdi],ch
   14002fd41:	add    BYTE PTR [rax],al
   14002fd43:	add    BYTE PTR [rax],al
   14002fd45:	add    BYTE PTR [rax],al
   14002fd47:	add    BYTE PTR [rax+0x18],dh
   14002fd4a:	add    eax,DWORD PTR [rax+0x1]
   14002fd4d:	add    BYTE PTR [rax],al
   14002fd4f:	add    BYTE PTR [rsi],dh
   14002fd51:	add    BYTE PTR [rax],al
   14002fd53:	add    BYTE PTR [rax],al
   14002fd55:	add    BYTE PTR [rax],al
   14002fd57:	add    BYTE PTR [rax+0x18],bh
   14002fd5a:	add    eax,DWORD PTR [rax+0x1]
   14002fd5d:	add    BYTE PTR [rax],al
   14002fd5f:	add    BYTE PTR [rdi],dh
   14002fd61:	add    BYTE PTR [rax],al
   14002fd63:	add    BYTE PTR [rax],al
   14002fd65:	add    BYTE PTR [rax],al
   14002fd67:	add    BYTE PTR [rax+0x1400318],al
   14002fd6d:	add    BYTE PTR [rax],al
   14002fd6f:	add    BYTE PTR [rax],bh
   14002fd71:	add    BYTE PTR [rax],al
   14002fd73:	add    BYTE PTR [rax],al
   14002fd75:	add    BYTE PTR [rax],al
   14002fd77:	add    BYTE PTR [rax+0x1400318],cl
   14002fd7d:	add    BYTE PTR [rax],al
   14002fd7f:	add    BYTE PTR [rcx],bh
   14002fd81:	add    BYTE PTR [rax],al
   14002fd83:	add    BYTE PTR [rax],al
   14002fd85:	add    BYTE PTR [rax],al
   14002fd87:	add    BYTE PTR [rax+0x1400318],dl
   14002fd8d:	add    BYTE PTR [rax],al
   14002fd8f:	add    BYTE PTR [rsi],bh
   14002fd91:	add    BYTE PTR [rax],al
   14002fd93:	add    BYTE PTR [rax],al
   14002fd95:	add    BYTE PTR [rax],al
   14002fd97:	add    BYTE PTR [rax+0x1400318],bl
   14002fd9d:	add    BYTE PTR [rax],al
   14002fd9f:	add    BYTE PTR [rdi],bh
   14002fda1:	add    BYTE PTR [rax],al
   14002fda3:	add    BYTE PTR [rax],al
   14002fda5:	add    BYTE PTR [rax],al
   14002fda7:	add    BYTE PTR [rax+0x1400318],ah
   14002fdad:	add    BYTE PTR [rax],al
   14002fdaf:	add    BYTE PTR [rax+0x0],al
   14002fdb2:	add    BYTE PTR [rax],al
   14002fdb4:	add    BYTE PTR [rax],al
   14002fdb6:	add    BYTE PTR [rax],al
   14002fdb8:	test   al,0x18
   14002fdba:	add    eax,DWORD PTR [rax+0x1]
   14002fdbd:	add    BYTE PTR [rax],al
   14002fdbf:	add    BYTE PTR [rcx+0x0],al
   14002fdc2:	add    BYTE PTR [rax],al
   14002fdc4:	add    BYTE PTR [rax],al
   14002fdc6:	add    BYTE PTR [rax],al
   14002fdc8:	mov    al,0x18
   14002fdca:	add    eax,DWORD PTR [rax+0x1]
   14002fdcd:	add    BYTE PTR [rax],al
   14002fdcf:	add    BYTE PTR [rbx+0x0],al
   14002fdd2:	add    BYTE PTR [rax],al
   14002fdd4:	add    BYTE PTR [rax],al
   14002fdd6:	add    BYTE PTR [rax],al
   14002fdd8:	mov    eax,0x1400318
   14002fddd:	add    BYTE PTR [rax],al
   14002fddf:	add    BYTE PTR [rax+rax*1+0x0],al
   14002fde3:	add    BYTE PTR [rax],al
   14002fde5:	add    BYTE PTR [rax],al
   14002fde7:	add    al,al
   14002fde9:	sbb    BYTE PTR [rbx],al
   14002fdeb:	rex add DWORD PTR [rax],eax
   14002fdee:	add    BYTE PTR [rax],al
   14002fdf0:	rex.RX add BYTE PTR [rax],r8b
   14002fdf3:	add    BYTE PTR [rax],al
   14002fdf5:	add    BYTE PTR [rax],al
   14002fdf7:	add    al,cl
   14002fdf9:	sbb    BYTE PTR [rbx],al
   14002fdfb:	rex add DWORD PTR [rax],eax
   14002fdfe:	add    BYTE PTR [rax],al
   14002fe00:	rex.RXB add BYTE PTR [r8],r8b
   14002fe03:	add    BYTE PTR [rax],al
   14002fe05:	add    BYTE PTR [rax],al
   14002fe07:	add    al,dl
   14002fe09:	sbb    BYTE PTR [rbx],al
   14002fe0b:	rex add DWORD PTR [rax],eax
   14002fe0e:	add    BYTE PTR [rax],al
   14002fe10:	rex.WB add BYTE PTR [r8],al
   14002fe13:	add    BYTE PTR [rax],al
   14002fe15:	add    BYTE PTR [rax],al
   14002fe17:	add    al,bl
   14002fe19:	sbb    BYTE PTR [rbx],al
   14002fe1b:	rex add DWORD PTR [rax],eax
   14002fe1e:	add    BYTE PTR [rax],al
   14002fe20:	rex.WX add BYTE PTR [rax],al
   14002fe23:	add    BYTE PTR [rax],al
   14002fe25:	add    BYTE PTR [rax],al
   14002fe27:	add    al,ah
   14002fe29:	sbb    BYTE PTR [rbx],al
   14002fe2b:	rex add DWORD PTR [rax],eax
   14002fe2e:	add    BYTE PTR [rax],al
   14002fe30:	rex.WXB add BYTE PTR [r8],al
   14002fe33:	add    BYTE PTR [rax],al
   14002fe35:	add    BYTE PTR [rax],al
   14002fe37:	add    al,ch
   14002fe39:	sbb    BYTE PTR [rbx],al
   14002fe3b:	rex add DWORD PTR [rax],eax
   14002fe3e:	add    BYTE PTR [rax],al
   14002fe40:	rex.WRX add BYTE PTR [rax],r8b
   14002fe43:	add    BYTE PTR [rax],al
   14002fe45:	add    BYTE PTR [rax],al
   14002fe47:	add    al,dh
   14002fe49:	sbb    BYTE PTR [rbx],al
   14002fe4b:	rex add DWORD PTR [rax],eax
   14002fe4e:	add    BYTE PTR [rax],al
   14002fe50:	rex.WRXB add BYTE PTR [r8],r8b
   14002fe53:	add    BYTE PTR [rax],al
   14002fe55:	add    BYTE PTR [rax],al
   14002fe57:	add    al,bh
   14002fe59:	sbb    BYTE PTR [rbx],al
   14002fe5b:	rex add DWORD PTR [rax],eax
   14002fe5e:	add    BYTE PTR [rax],al
   14002fe60:	push   rax
	...
   14002fe69:	sbb    DWORD PTR [rbx],eax
   14002fe6b:	rex add DWORD PTR [rax],eax
   14002fe6e:	add    BYTE PTR [rax],al
   14002fe70:	push   rsi
   14002fe71:	add    BYTE PTR [rax],al
   14002fe73:	add    BYTE PTR [rax],al
   14002fe75:	add    BYTE PTR [rax],al
   14002fe77:	add    BYTE PTR [rax],cl
   14002fe79:	sbb    DWORD PTR [rbx],eax
   14002fe7b:	rex add DWORD PTR [rax],eax
   14002fe7e:	add    BYTE PTR [rax],al
   14002fe80:	push   rdi
   14002fe81:	add    BYTE PTR [rax],al
   14002fe83:	add    BYTE PTR [rax],al
   14002fe85:	add    BYTE PTR [rax],al
   14002fe87:	add    BYTE PTR [rax],dl
   14002fe89:	sbb    DWORD PTR [rbx],eax
   14002fe8b:	rex add DWORD PTR [rax],eax
   14002fe8e:	add    BYTE PTR [rax],al
   14002fe90:	pop    rdx
   14002fe91:	add    BYTE PTR [rax],al
   14002fe93:	add    BYTE PTR [rax],al
   14002fe95:	add    BYTE PTR [rax],al
   14002fe97:	add    BYTE PTR [rax],bl
   14002fe99:	sbb    DWORD PTR [rbx],eax
   14002fe9b:	rex add DWORD PTR [rax],eax
   14002fe9e:	add    BYTE PTR [rax],al
   14002fea0:	add    BYTE PTR gs:[rax],al
   14002fea3:	add    BYTE PTR [rax],al
   14002fea5:	add    BYTE PTR [rax],al
   14002fea7:	add    BYTE PTR [rax],ah
   14002fea9:	sbb    DWORD PTR [rbx],eax
   14002feab:	rex add DWORD PTR [rax],eax
   14002feae:	add    BYTE PTR [rax],al
   14002feb0:	jg     0x14002feb2
   14002feb2:	add    BYTE PTR [rax],al
   14002feb4:	add    BYTE PTR [rax],al
   14002feb6:	add    BYTE PTR [rax],al
   14002feb8:	cmp    al,cl
   14002feba:	add    al,BYTE PTR [rax+0x1]
   14002febd:	add    BYTE PTR [rax],al
   14002febf:	add    BYTE PTR [rcx],al
   14002fec1:	add    al,0x0
   14002fec3:	add    BYTE PTR [rax],al
   14002fec5:	add    BYTE PTR [rax],al
   14002fec7:	add    BYTE PTR [rax],ch
   14002fec9:	sbb    DWORD PTR [rbx],eax
   14002fecb:	rex add DWORD PTR [rax],eax
   14002fece:	add    BYTE PTR [rax],al
   14002fed0:	add    al,BYTE PTR [rax+rax*1]
   14002fed3:	add    BYTE PTR [rax],al
   14002fed5:	add    BYTE PTR [rax],al
   14002fed7:	add    BYTE PTR [rax],bh
   14002fed9:	sbb    DWORD PTR [rbx],eax
   14002fedb:	rex add DWORD PTR [rax],eax
   14002fede:	add    BYTE PTR [rax],al
   14002fee0:	add    eax,DWORD PTR [rax+rax*1]
   14002fee3:	add    BYTE PTR [rax],al
   14002fee5:	add    BYTE PTR [rax],al
   14002fee7:	add    BYTE PTR [rax+0x19],cl
   14002feea:	add    eax,DWORD PTR [rax+0x1]
   14002feed:	add    BYTE PTR [rax],al
   14002feef:	add    BYTE PTR [rsp+rax*1],al
   14002fef2:	add    BYTE PTR [rax],al
   14002fef4:	add    BYTE PTR [rax],al
   14002fef6:	add    BYTE PTR [rax],al
   14002fef8:	pop    rax
   14002fef9:	sbb    DWORD PTR [rbx],eax
   14002fefb:	rex add DWORD PTR [rax],eax
   14002fefe:	add    BYTE PTR [rax],al
   14002ff00:	add    eax,0x4
   14002ff05:	add    BYTE PTR [rax],al
   14002ff07:	add    BYTE PTR [rax+0x19],ch
   14002ff0a:	add    eax,DWORD PTR [rax+0x1]
   14002ff0d:	add    BYTE PTR [rax],al
   14002ff0f:	add    BYTE PTR [rsi],al
   14002ff11:	add    al,0x0
   14002ff13:	add    BYTE PTR [rax],al
   14002ff15:	add    BYTE PTR [rax],al
   14002ff17:	add    BYTE PTR [rax+0x19],bh
   14002ff1a:	add    eax,DWORD PTR [rax+0x1]
   14002ff1d:	add    BYTE PTR [rax],al
   14002ff1f:	add    BYTE PTR [rdi],al
   14002ff21:	add    al,0x0
   14002ff23:	add    BYTE PTR [rax],al
   14002ff25:	add    BYTE PTR [rax],al
   14002ff27:	add    BYTE PTR [rax+0x1400319],cl
   14002ff2d:	add    BYTE PTR [rax],al
   14002ff2f:	add    BYTE PTR [rax],cl
   14002ff31:	add    al,0x0
   14002ff33:	add    BYTE PTR [rax],al
   14002ff35:	add    BYTE PTR [rax],al
   14002ff37:	add    BYTE PTR [rax+0x1400319],bl
   14002ff3d:	add    BYTE PTR [rax],al
   14002ff3f:	add    BYTE PTR [rcx],cl
   14002ff41:	add    al,0x0
   14002ff43:	add    BYTE PTR [rax],al
   14002ff45:	add    BYTE PTR [rax],al
   14002ff47:	add    BYTE PTR [rax+0x1400319],ch
   14002ff4d:	add    BYTE PTR [rax],al
   14002ff4f:	add    BYTE PTR [rbx],cl
   14002ff51:	add    al,0x0
   14002ff53:	add    BYTE PTR [rax],al
   14002ff55:	add    BYTE PTR [rax],al
   14002ff57:	add    BYTE PTR [rax+0x1400319],bh
   14002ff5d:	add    BYTE PTR [rax],al
   14002ff5f:	add    BYTE PTR [rsp+rax*1],cl
   14002ff62:	add    BYTE PTR [rax],al
   14002ff64:	add    BYTE PTR [rax],al
   14002ff66:	add    BYTE PTR [rax],al
   14002ff68:	enter  0x319,0x40
   14002ff6c:	add    DWORD PTR [rax],eax
   14002ff6e:	add    BYTE PTR [rax],al
   14002ff70:	or     eax,0x4
   14002ff75:	add    BYTE PTR [rax],al
   14002ff77:	add    al,bl
   14002ff79:	sbb    DWORD PTR [rbx],eax
   14002ff7b:	rex add DWORD PTR [rax],eax
   14002ff7e:	add    BYTE PTR [rax],al
   14002ff80:	(bad)  
   14002ff81:	add    al,0x0
   14002ff83:	add    BYTE PTR [rax],al
   14002ff85:	add    BYTE PTR [rax],al
   14002ff87:	add    al,ch
   14002ff89:	sbb    DWORD PTR [rbx],eax
   14002ff8b:	rex add DWORD PTR [rax],eax
   14002ff8e:	add    BYTE PTR [rax],al
   14002ff90:	(bad)  
   14002ff92:	add    BYTE PTR [rax],al
   14002ff94:	add    BYTE PTR [rax],al
   14002ff96:	add    BYTE PTR [rax],al
   14002ff98:	clc    
   14002ff99:	sbb    DWORD PTR [rbx],eax
   14002ff9b:	rex add DWORD PTR [rax],eax
   14002ff9e:	add    BYTE PTR [rax],al
   14002ffa0:	adc    BYTE PTR [rax+rax*1],al
   14002ffa3:	add    BYTE PTR [rax],al
   14002ffa5:	add    BYTE PTR [rax],al
   14002ffa7:	add    BYTE PTR [rax],cl
   14002ffa9:	sbb    al,BYTE PTR [rbx]
   14002ffab:	rex add DWORD PTR [rax],eax
   14002ffae:	add    BYTE PTR [rax],al
   14002ffb0:	adc    DWORD PTR [rax+rax*1],eax
   14002ffb3:	add    BYTE PTR [rax],al
   14002ffb5:	add    BYTE PTR [rax],al
   14002ffb7:	add    BYTE PTR [rax],bl
   14002ffb9:	sbb    al,BYTE PTR [rbx]
   14002ffbb:	rex add DWORD PTR [rax],eax
   14002ffbe:	add    BYTE PTR [rax],al
   14002ffc0:	adc    al,BYTE PTR [rax+rax*1]
   14002ffc3:	add    BYTE PTR [rax],al
   14002ffc5:	add    BYTE PTR [rax],al
   14002ffc7:	add    BYTE PTR [rax],ch
   14002ffc9:	sbb    al,BYTE PTR [rbx]
   14002ffcb:	rex add DWORD PTR [rax],eax
   14002ffce:	add    BYTE PTR [rax],al
   14002ffd0:	adc    eax,DWORD PTR [rax+rax*1]
   14002ffd3:	add    BYTE PTR [rax],al
   14002ffd5:	add    BYTE PTR [rax],al
   14002ffd7:	add    BYTE PTR [rax],bh
   14002ffd9:	sbb    al,BYTE PTR [rbx]
   14002ffdb:	rex add DWORD PTR [rax],eax
   14002ffde:	add    BYTE PTR [rax],al
   14002ffe0:	adc    al,0x4
   14002ffe2:	add    BYTE PTR [rax],al
   14002ffe4:	add    BYTE PTR [rax],al
   14002ffe6:	add    BYTE PTR [rax],al
   14002ffe8:	rex.W sbb al,BYTE PTR [rbx]
   14002ffeb:	rex add DWORD PTR [rax],eax
   14002ffee:	add    BYTE PTR [rax],al
   14002fff0:	adc    eax,0x4
   14002fff5:	add    BYTE PTR [rax],al
   14002fff7:	add    BYTE PTR [rax+0x1a],bl
   14002fffa:	add    eax,DWORD PTR [rax+0x1]
   14002fffd:	add    BYTE PTR [rax],al
   14002ffff:	add    BYTE PTR [rsi],dl
   140030001:	add    al,0x0
   140030003:	add    BYTE PTR [rax],al
   140030005:	add    BYTE PTR [rax],al
   140030007:	add    BYTE PTR [rax+0x1a],ch
   14003000a:	add    eax,DWORD PTR [rax+0x1]
   14003000d:	add    BYTE PTR [rax],al
   14003000f:	add    BYTE PTR [rax],bl
   140030011:	add    al,0x0
   140030013:	add    BYTE PTR [rax],al
   140030015:	add    BYTE PTR [rax],al
   140030017:	add    BYTE PTR [rax+0x1a],bh
   14003001a:	add    eax,DWORD PTR [rax+0x1]
   14003001d:	add    BYTE PTR [rax],al
   14003001f:	add    BYTE PTR [rcx],bl
   140030021:	add    al,0x0
   140030023:	add    BYTE PTR [rax],al
   140030025:	add    BYTE PTR [rax],al
   140030027:	add    BYTE PTR [rax+0x140031a],cl
   14003002d:	add    BYTE PTR [rax],al
   14003002f:	add    BYTE PTR [rdx],bl
   140030031:	add    al,0x0
   140030033:	add    BYTE PTR [rax],al
   140030035:	add    BYTE PTR [rax],al
   140030037:	add    BYTE PTR [rax+0x140031a],bl
   14003003d:	add    BYTE PTR [rax],al
   14003003f:	add    BYTE PTR [rbx],bl
   140030041:	add    al,0x0
   140030043:	add    BYTE PTR [rax],al
   140030045:	add    BYTE PTR [rax],al
   140030047:	add    BYTE PTR [rax+0x140031a],ch
   14003004d:	add    BYTE PTR [rax],al
   14003004f:	add    BYTE PTR [rsp+rax*1],bl
   140030052:	add    BYTE PTR [rax],al
   140030054:	add    BYTE PTR [rax],al
   140030056:	add    BYTE PTR [rax],al
   140030058:	mov    eax,0x140031a
   14003005d:	add    BYTE PTR [rax],al
   14003005f:	add    BYTE PTR [rip+0x4],bl        # 0x140030069
   140030065:	add    BYTE PTR [rax],al
   140030067:	add    al,cl
   140030069:	sbb    al,BYTE PTR [rbx]
   14003006b:	rex add DWORD PTR [rax],eax
   14003006e:	add    BYTE PTR [rax],al
   140030070:	(bad)  
   140030071:	add    al,0x0
   140030073:	add    BYTE PTR [rax],al
   140030075:	add    BYTE PTR [rax],al
   140030077:	add    al,bl
   140030079:	sbb    al,BYTE PTR [rbx]
   14003007b:	rex add DWORD PTR [rax],eax
   14003007e:	add    BYTE PTR [rax],al
   140030080:	(bad)  
   140030081:	add    al,0x0
   140030083:	add    BYTE PTR [rax],al
   140030085:	add    BYTE PTR [rax],al
   140030087:	add    al,ch
   140030089:	sbb    al,BYTE PTR [rbx]
   14003008b:	rex add DWORD PTR [rax],eax
   14003008e:	add    BYTE PTR [rax],al
   140030090:	and    BYTE PTR [rax+rax*1],al
   140030093:	add    BYTE PTR [rax],al
   140030095:	add    BYTE PTR [rax],al
   140030097:	add    al,bh
   140030099:	sbb    al,BYTE PTR [rbx]
   14003009b:	rex add DWORD PTR [rax],eax
   14003009e:	add    BYTE PTR [rax],al
   1400300a0:	and    DWORD PTR [rax+rax*1],eax
   1400300a3:	add    BYTE PTR [rax],al
   1400300a5:	add    BYTE PTR [rax],al
   1400300a7:	add    BYTE PTR [rax],cl
   1400300a9:	sbb    eax,DWORD PTR [rbx]
   1400300ab:	rex add DWORD PTR [rax],eax
   1400300ae:	add    BYTE PTR [rax],al
   1400300b0:	and    al,BYTE PTR [rax+rax*1]
   1400300b3:	add    BYTE PTR [rax],al
   1400300b5:	add    BYTE PTR [rax],al
   1400300b7:	add    BYTE PTR [rax],bl
   1400300b9:	sbb    eax,DWORD PTR [rbx]
   1400300bb:	rex add DWORD PTR [rax],eax
   1400300be:	add    BYTE PTR [rax],al
   1400300c0:	and    eax,DWORD PTR [rax+rax*1]
   1400300c3:	add    BYTE PTR [rax],al
   1400300c5:	add    BYTE PTR [rax],al
   1400300c7:	add    BYTE PTR [rax],ch
   1400300c9:	sbb    eax,DWORD PTR [rbx]
   1400300cb:	rex add DWORD PTR [rax],eax
   1400300ce:	add    BYTE PTR [rax],al
   1400300d0:	and    al,0x4
   1400300d2:	add    BYTE PTR [rax],al
   1400300d4:	add    BYTE PTR [rax],al
   1400300d6:	add    BYTE PTR [rax],al
   1400300d8:	cmp    BYTE PTR [rbx],bl
   1400300da:	add    eax,DWORD PTR [rax+0x1]
   1400300dd:	add    BYTE PTR [rax],al
   1400300df:	add    BYTE PTR [rip+0x4],ah        # 0x1400300e9
   1400300e5:	add    BYTE PTR [rax],al
   1400300e7:	add    BYTE PTR [rax+0x1b],cl
   1400300ea:	add    eax,DWORD PTR [rax+0x1]
   1400300ed:	add    BYTE PTR [rax],al
   1400300ef:	add    BYTE PTR [rsi],ah
   1400300f1:	add    al,0x0
   1400300f3:	add    BYTE PTR [rax],al
   1400300f5:	add    BYTE PTR [rax],al
   1400300f7:	add    BYTE PTR [rax+0x1b],bl
   1400300fa:	add    eax,DWORD PTR [rax+0x1]
   1400300fd:	add    BYTE PTR [rax],al
   1400300ff:	add    BYTE PTR [rdi],ah
   140030101:	add    al,0x0
   140030103:	add    BYTE PTR [rax],al
   140030105:	add    BYTE PTR [rax],al
   140030107:	add    BYTE PTR [rax+0x1b],ch
   14003010a:	add    eax,DWORD PTR [rax+0x1]
   14003010d:	add    BYTE PTR [rax],al
   14003010f:	add    BYTE PTR [rcx],ch
   140030111:	add    al,0x0
   140030113:	add    BYTE PTR [rax],al
   140030115:	add    BYTE PTR [rax],al
   140030117:	add    BYTE PTR [rax+0x1b],bh
   14003011a:	add    eax,DWORD PTR [rax+0x1]
   14003011d:	add    BYTE PTR [rax],al
   14003011f:	add    BYTE PTR [rdx],ch
   140030121:	add    al,0x0
   140030123:	add    BYTE PTR [rax],al
   140030125:	add    BYTE PTR [rax],al
   140030127:	add    BYTE PTR [rax+0x140031b],cl
   14003012d:	add    BYTE PTR [rax],al
   14003012f:	add    BYTE PTR [rbx],ch
   140030131:	add    al,0x0
   140030133:	add    BYTE PTR [rax],al
   140030135:	add    BYTE PTR [rax],al
   140030137:	add    BYTE PTR [rax+0x140031b],bl
   14003013d:	add    BYTE PTR [rax],al
   14003013f:	add    BYTE PTR [rsp+rax*1],ch
   140030142:	add    BYTE PTR [rax],al
   140030144:	add    BYTE PTR [rax],al
   140030146:	add    BYTE PTR [rax],al
   140030148:	test   al,0x1b
   14003014a:	add    eax,DWORD PTR [rax+0x1]
   14003014d:	add    BYTE PTR [rax],al
   14003014f:	add    BYTE PTR [rip+0x4],ch        # 0x140030159
   140030155:	add    BYTE PTR [rax],al
   140030157:	add    al,al
   140030159:	sbb    eax,DWORD PTR [rbx]
   14003015b:	rex add DWORD PTR [rax],eax
   14003015e:	add    BYTE PTR [rax],al
   140030160:	(bad)  
   140030161:	add    al,0x0
   140030163:	add    BYTE PTR [rax],al
   140030165:	add    BYTE PTR [rax],al
   140030167:	add    al,dl
   140030169:	sbb    eax,DWORD PTR [rbx]
   14003016b:	rex add DWORD PTR [rax],eax
   14003016e:	add    BYTE PTR [rax],al
   140030170:	xor    al,BYTE PTR [rax+rax*1]
   140030173:	add    BYTE PTR [rax],al
   140030175:	add    BYTE PTR [rax],al
   140030177:	add    al,ah
   140030179:	sbb    eax,DWORD PTR [rbx]
   14003017b:	rex add DWORD PTR [rax],eax
   14003017e:	add    BYTE PTR [rax],al
   140030180:	xor    al,0x4
   140030182:	add    BYTE PTR [rax],al
   140030184:	add    BYTE PTR [rax],al
   140030186:	add    BYTE PTR [rax],al
   140030188:	lock sbb eax,DWORD PTR [rbx]
   14003018b:	rex add DWORD PTR [rax],eax
   14003018e:	add    BYTE PTR [rax],al
   140030190:	xor    eax,0x4
   140030195:	add    BYTE PTR [rax],al
   140030197:	add    BYTE PTR [rax],al
   140030199:	sbb    al,0x3
   14003019b:	rex add DWORD PTR [rax],eax
   14003019e:	add    BYTE PTR [rax],al
   1400301a0:	ss add al,0x0
   1400301a3:	add    BYTE PTR [rax],al
   1400301a5:	add    BYTE PTR [rax],al
   1400301a7:	add    BYTE PTR [rax],dl
   1400301a9:	sbb    al,0x3
   1400301ab:	rex add DWORD PTR [rax],eax
   1400301ae:	add    BYTE PTR [rax],al
   1400301b0:	(bad)  
   1400301b1:	add    al,0x0
   1400301b3:	add    BYTE PTR [rax],al
   1400301b5:	add    BYTE PTR [rax],al
   1400301b7:	add    BYTE PTR [rax],ah
   1400301b9:	sbb    al,0x3
   1400301bb:	rex add DWORD PTR [rax],eax
   1400301be:	add    BYTE PTR [rax],al
   1400301c0:	cmp    BYTE PTR [rax+rax*1],al
   1400301c3:	add    BYTE PTR [rax],al
   1400301c5:	add    BYTE PTR [rax],al
   1400301c7:	add    BYTE PTR [rax],dh
   1400301c9:	sbb    al,0x3
   1400301cb:	rex add DWORD PTR [rax],eax
   1400301ce:	add    BYTE PTR [rax],al
   1400301d0:	cmp    DWORD PTR [rax+rax*1],eax
   1400301d3:	add    BYTE PTR [rax],al
   1400301d5:	add    BYTE PTR [rax],al
   1400301d7:	add    BYTE PTR [rax+0x1c],al
   1400301da:	add    eax,DWORD PTR [rax+0x1]
   1400301dd:	add    BYTE PTR [rax],al
   1400301df:	add    BYTE PTR [rdx],bh
   1400301e1:	add    al,0x0
   1400301e3:	add    BYTE PTR [rax],al
   1400301e5:	add    BYTE PTR [rax],al
   1400301e7:	add    BYTE PTR [rax+0x1c],dl
   1400301ea:	add    eax,DWORD PTR [rax+0x1]
   1400301ed:	add    BYTE PTR [rax],al
   1400301ef:	add    BYTE PTR [rbx],bh
   1400301f1:	add    al,0x0
   1400301f3:	add    BYTE PTR [rax],al
   1400301f5:	add    BYTE PTR [rax],al
   1400301f7:	add    BYTE PTR [rax+0x1c],ah
   1400301fa:	add    eax,DWORD PTR [rax+0x1]
   1400301fd:	add    BYTE PTR [rax],al
   1400301ff:	add    BYTE PTR [rsi],bh
   140030201:	add    al,0x0
   140030203:	add    BYTE PTR [rax],al
   140030205:	add    BYTE PTR [rax],al
   140030207:	add    BYTE PTR [rax+0x1c],dh
   14003020a:	add    eax,DWORD PTR [rax+0x1]
   14003020d:	add    BYTE PTR [rax],al
   14003020f:	add    BYTE PTR [rdi],bh
   140030211:	add    al,0x0
   140030213:	add    BYTE PTR [rax],al
   140030215:	add    BYTE PTR [rax],al
   140030217:	add    BYTE PTR [rax+0x140031c],al
   14003021d:	add    BYTE PTR [rax],al
   14003021f:	add    BYTE PTR [rax+0x4],al
   140030222:	add    BYTE PTR [rax],al
   140030224:	add    BYTE PTR [rax],al
   140030226:	add    BYTE PTR [rax],al
   140030228:	nop
   140030229:	sbb    al,0x3
   14003022b:	rex add DWORD PTR [rax],eax
   14003022e:	add    BYTE PTR [rax],al
   140030230:	rex.B add al,0x0
   140030233:	add    BYTE PTR [rax],al
   140030235:	add    BYTE PTR [rax],al
   140030237:	add    BYTE PTR [rax+0x140031c],ah
   14003023d:	add    BYTE PTR [rax],al
   14003023f:	add    BYTE PTR [rbx+0x4],al
   140030242:	add    BYTE PTR [rax],al
   140030244:	add    BYTE PTR [rax],al
   140030246:	add    BYTE PTR [rax],al
   140030248:	mov    al,0x1c
   14003024a:	add    eax,DWORD PTR [rax+0x1]
   14003024d:	add    BYTE PTR [rax],al
   14003024f:	add    BYTE PTR [rsp+rax*1+0x0],al
   140030253:	add    BYTE PTR [rax],al
   140030255:	add    BYTE PTR [rax],al
   140030257:	add    al,cl
   140030259:	sbb    al,0x3
   14003025b:	rex add DWORD PTR [rax],eax
   14003025e:	add    BYTE PTR [rax],al
   140030260:	rex.RB add al,0x0
   140030263:	add    BYTE PTR [rax],al
   140030265:	add    BYTE PTR [rax],al
   140030267:	add    al,bl
   140030269:	sbb    al,0x3
   14003026b:	rex add DWORD PTR [rax],eax
   14003026e:	add    BYTE PTR [rax],al
   140030270:	rex.RX add al,0x0
   140030273:	add    BYTE PTR [rax],al
   140030275:	add    BYTE PTR [rax],al
   140030277:	add    al,ch
   140030279:	sbb    al,0x3
   14003027b:	rex add DWORD PTR [rax],eax
   14003027e:	add    BYTE PTR [rax],al
   140030280:	rex.RXB add al,0x0
   140030283:	add    BYTE PTR [rax],al
   140030285:	add    BYTE PTR [rax],al
   140030287:	add    al,bh
   140030289:	sbb    al,0x3
   14003028b:	rex add DWORD PTR [rax],eax
   14003028e:	add    BYTE PTR [rax],al
   140030290:	rex.WB add al,0x0
   140030293:	add    BYTE PTR [rax],al
   140030295:	add    BYTE PTR [rax],al
   140030297:	add    BYTE PTR [rax],cl
   140030299:	sbb    eax,0x14003
   14003029e:	add    BYTE PTR [rax],al
   1400302a0:	rex.WX add al,0x0
   1400302a3:	add    BYTE PTR [rax],al
   1400302a5:	add    BYTE PTR [rax],al
   1400302a7:	add    BYTE PTR [rax],bl
   1400302a9:	sbb    eax,0x14003
   1400302ae:	add    BYTE PTR [rax],al
   1400302b0:	rex.WXB add al,0x0
   1400302b3:	add    BYTE PTR [rax],al
   1400302b5:	add    BYTE PTR [rax],al
   1400302b7:	add    BYTE PTR [rax],ch
   1400302b9:	sbb    eax,0x14003
   1400302be:	add    BYTE PTR [rax],al
   1400302c0:	rex.WR add al,0x0
   1400302c3:	add    BYTE PTR [rax],al
   1400302c5:	add    BYTE PTR [rax],al
   1400302c7:	add    BYTE PTR [rax],bh
   1400302c9:	sbb    eax,0x14003
   1400302ce:	add    BYTE PTR [rax],al
   1400302d0:	rex.WRX add al,0x0
   1400302d3:	add    BYTE PTR [rax],al
   1400302d5:	add    BYTE PTR [rax],al
   1400302d7:	add    BYTE PTR [rax+0x1d],cl
   1400302da:	add    eax,DWORD PTR [rax+0x1]
   1400302dd:	add    BYTE PTR [rax],al
   1400302df:	add    BYTE PTR [rdi+0x4],cl
   1400302e2:	add    BYTE PTR [rax],al
   1400302e4:	add    BYTE PTR [rax],al
   1400302e6:	add    BYTE PTR [rax],al
   1400302e8:	pop    rax
   1400302e9:	sbb    eax,0x14003
   1400302ee:	add    BYTE PTR [rax],al
   1400302f0:	push   rax
   1400302f1:	add    al,0x0
   1400302f3:	add    BYTE PTR [rax],al
   1400302f5:	add    BYTE PTR [rax],al
   1400302f7:	add    BYTE PTR [rax+0x1d],ch
   1400302fa:	add    eax,DWORD PTR [rax+0x1]
   1400302fd:	add    BYTE PTR [rax],al
   1400302ff:	add    BYTE PTR [rdx+0x4],dl
   140030302:	add    BYTE PTR [rax],al
   140030304:	add    BYTE PTR [rax],al
   140030306:	add    BYTE PTR [rax],al
   140030308:	js     0x140030327
   14003030a:	add    eax,DWORD PTR [rax+0x1]
   14003030d:	add    BYTE PTR [rax],al
   14003030f:	add    BYTE PTR [rsi+0x4],dl
   140030312:	add    BYTE PTR [rax],al
   140030314:	add    BYTE PTR [rax],al
   140030316:	add    BYTE PTR [rax],al
   140030318:	mov    BYTE PTR [rip+0x14003],bl        # 0x140044321
   14003031e:	add    BYTE PTR [rax],al
   140030320:	push   rdi
   140030321:	add    al,0x0
   140030323:	add    BYTE PTR [rax],al
   140030325:	add    BYTE PTR [rax],al
   140030327:	add    BYTE PTR [rax+0x140031d],bl
   14003032d:	add    BYTE PTR [rax],al
   14003032f:	add    BYTE PTR [rdx+0x4],bl
   140030332:	add    BYTE PTR [rax],al
   140030334:	add    BYTE PTR [rax],al
   140030336:	add    BYTE PTR [rax],al
   140030338:	test   al,0x1d
   14003033a:	add    eax,DWORD PTR [rax+0x1]
   14003033d:	add    BYTE PTR [rax],al
   14003033f:	add    BYTE PTR [rbp+0x4],ah
   140030342:	add    BYTE PTR [rax],al
   140030344:	add    BYTE PTR [rax],al
   140030346:	add    BYTE PTR [rax],al
   140030348:	mov    eax,0x140031d
   14003034d:	add    BYTE PTR [rax],al
   14003034f:	add    BYTE PTR [rbx+0x4],ch
   140030352:	add    BYTE PTR [rax],al
   140030354:	add    BYTE PTR [rax],al
   140030356:	add    BYTE PTR [rax],al
   140030358:	enter  0x31d,0x40
   14003035c:	add    DWORD PTR [rax],eax
   14003035e:	add    BYTE PTR [rax],al
   140030360:	ins    BYTE PTR es:[rdi],dx
   140030361:	add    al,0x0
   140030363:	add    BYTE PTR [rax],al
   140030365:	add    BYTE PTR [rax],al
   140030367:	add    al,bl
   140030369:	sbb    eax,0x14003
   14003036e:	add    BYTE PTR [rax],al
   140030370:	add    DWORD PTR [rax+rax*1],0x0
   140030377:	add    al,ch
   140030379:	sbb    eax,0x14003
   14003037e:	add    BYTE PTR [rax],al
   140030380:	add    DWORD PTR [rax],ecx
   140030382:	add    BYTE PTR [rax],al
   140030384:	add    BYTE PTR [rax],al
   140030386:	add    BYTE PTR [rax],al
   140030388:	clc    
   140030389:	sbb    eax,0x14003
   14003038e:	add    BYTE PTR [rax],al
   140030390:	add    al,0x8
   140030392:	add    BYTE PTR [rax],al
   140030394:	add    BYTE PTR [rax],al
   140030396:	add    BYTE PTR [rax],al
   140030398:	or     BYTE PTR [rsi],bl
   14003039a:	add    eax,DWORD PTR [rax+0x1]
   14003039d:	add    BYTE PTR [rax],al
   14003039f:	add    BYTE PTR [rdi],al
   1400303a1:	or     BYTE PTR [rax],al
   1400303a3:	add    BYTE PTR [rax],al
   1400303a5:	add    BYTE PTR [rax],al
   1400303a7:	add    BYTE PTR [rax],bl
   1400303a9:	(bad)  
   1400303aa:	add    eax,DWORD PTR [rax+0x1]
   1400303ad:	add    BYTE PTR [rax],al
   1400303af:	add    BYTE PTR [rcx],cl
   1400303b1:	or     BYTE PTR [rax],al
   1400303b3:	add    BYTE PTR [rax],al
   1400303b5:	add    BYTE PTR [rax],al
   1400303b7:	add    BYTE PTR [rax],ch
   1400303b9:	(bad)  
   1400303ba:	add    eax,DWORD PTR [rax+0x1]
   1400303bd:	add    BYTE PTR [rax],al
   1400303bf:	add    BYTE PTR [rdx],cl
   1400303c1:	or     BYTE PTR [rax],al
   1400303c3:	add    BYTE PTR [rax],al
   1400303c5:	add    BYTE PTR [rax],al
   1400303c7:	add    BYTE PTR [rax],bh
   1400303c9:	(bad)  
   1400303ca:	add    eax,DWORD PTR [rax+0x1]
   1400303cd:	add    BYTE PTR [rax],al
   1400303cf:	add    BYTE PTR [rax+rcx*1],cl
   1400303d2:	add    BYTE PTR [rax],al
   1400303d4:	add    BYTE PTR [rax],al
   1400303d6:	add    BYTE PTR [rax],al
   1400303d8:	rex.W (bad) 
   1400303da:	add    eax,DWORD PTR [rax+0x1]
   1400303dd:	add    BYTE PTR [rax],al
   1400303df:	add    BYTE PTR [rax],dl
   1400303e1:	or     BYTE PTR [rax],al
   1400303e3:	add    BYTE PTR [rax],al
   1400303e5:	add    BYTE PTR [rax],al
   1400303e7:	add    BYTE PTR [rax+0x1e],bl
   1400303ea:	add    eax,DWORD PTR [rax+0x1]
   1400303ed:	add    BYTE PTR [rax],al
   1400303ef:	add    BYTE PTR [rbx],dl
   1400303f1:	or     BYTE PTR [rax],al
   1400303f3:	add    BYTE PTR [rax],al
   1400303f5:	add    BYTE PTR [rax],al
   1400303f7:	add    BYTE PTR [rax+0x1e],ch
   1400303fa:	add    eax,DWORD PTR [rax+0x1]
   1400303fd:	add    BYTE PTR [rax],al
   1400303ff:	add    BYTE PTR [rax+rcx*1],dl
   140030402:	add    BYTE PTR [rax],al
   140030404:	add    BYTE PTR [rax],al
   140030406:	add    BYTE PTR [rax],al
   140030408:	js     0x140030428
   14003040a:	add    eax,DWORD PTR [rax+0x1]
   14003040d:	add    BYTE PTR [rax],al
   14003040f:	add    BYTE PTR [rsi],dl
   140030411:	or     BYTE PTR [rax],al
   140030413:	add    BYTE PTR [rax],al
   140030415:	add    BYTE PTR [rax],al
   140030417:	add    BYTE PTR [rax+0x140031e],cl
   14003041d:	add    BYTE PTR [rax],al
   14003041f:	add    BYTE PTR [rdx],bl
   140030421:	or     BYTE PTR [rax],al
   140030423:	add    BYTE PTR [rax],al
   140030425:	add    BYTE PTR [rax],al
   140030427:	add    BYTE PTR [rax+0x140031e],bl
   14003042d:	add    BYTE PTR [rax],al
   14003042f:	add    BYTE PTR [rip+0x8],bl        # 0x14003043d
   140030435:	add    BYTE PTR [rax],al
   140030437:	add    BYTE PTR [rax+0x140031e],dh
   14003043d:	add    BYTE PTR [rax],al
   14003043f:	add    BYTE PTR [rax+rcx*1],ch
   140030442:	add    BYTE PTR [rax],al
   140030444:	add    BYTE PTR [rax],al
   140030446:	add    BYTE PTR [rax],al
   140030448:	rcr    BYTE PTR [rsi],0x3
   14003044b:	rex add DWORD PTR [rax],eax
   14003044e:	add    BYTE PTR [rax],al
   140030450:	cmp    ecx,DWORD PTR [rax]
   140030452:	add    BYTE PTR [rax],al
   140030454:	add    BYTE PTR [rax],al
   140030456:	add    BYTE PTR [rax],al
   140030458:	fcomp  DWORD PTR [rsi]
   14003045a:	add    eax,DWORD PTR [rax+0x1]
   14003045d:	add    BYTE PTR [rax],al
   14003045f:	add    BYTE PTR [rsi],bh
   140030461:	or     BYTE PTR [rax],al
   140030463:	add    BYTE PTR [rax],al
   140030465:	add    BYTE PTR [rax],al
   140030467:	add    al,ch
   140030469:	(bad)  
   14003046a:	add    eax,DWORD PTR [rax+0x1]
   14003046d:	add    BYTE PTR [rax],al
   14003046f:	add    BYTE PTR [rbx+0x8],al
   140030472:	add    BYTE PTR [rax],al
   140030474:	add    BYTE PTR [rax],al
   140030476:	add    BYTE PTR [rax],al
   140030478:	clc    
   140030479:	(bad)  
   14003047a:	add    eax,DWORD PTR [rax+0x1]
   14003047d:	add    BYTE PTR [rax],al
   14003047f:	add    BYTE PTR [rbx+0x8],ch
   140030482:	add    BYTE PTR [rax],al
   140030484:	add    BYTE PTR [rax],al
   140030486:	add    BYTE PTR [rax],al
   140030488:	adc    BYTE PTR [rdi],bl
   14003048a:	add    eax,DWORD PTR [rax+0x1]
   14003048d:	add    BYTE PTR [rax],al
   14003048f:	add    BYTE PTR [rcx],al
   140030491:	or     al,0x0
   140030493:	add    BYTE PTR [rax],al
   140030495:	add    BYTE PTR [rax],al
   140030497:	add    BYTE PTR [rax],ah
   140030499:	(bad)  
   14003049a:	add    eax,DWORD PTR [rax+0x1]
   14003049d:	add    BYTE PTR [rax],al
   14003049f:	add    BYTE PTR [rsp+rcx*1],al
   1400304a2:	add    BYTE PTR [rax],al
   1400304a4:	add    BYTE PTR [rax],al
   1400304a6:	add    BYTE PTR [rax],al
   1400304a8:	xor    BYTE PTR [rdi],bl
   1400304aa:	add    eax,DWORD PTR [rax+0x1]
   1400304ad:	add    BYTE PTR [rax],al
   1400304af:	add    BYTE PTR [rdi],al
   1400304b1:	or     al,0x0
   1400304b3:	add    BYTE PTR [rax],al
   1400304b5:	add    BYTE PTR [rax],al
   1400304b7:	add    BYTE PTR [rax+0x1f],al
   1400304ba:	add    eax,DWORD PTR [rax+0x1]
   1400304bd:	add    BYTE PTR [rax],al
   1400304bf:	add    BYTE PTR [rcx],cl
   1400304c1:	or     al,0x0
   1400304c3:	add    BYTE PTR [rax],al
   1400304c5:	add    BYTE PTR [rax],al
   1400304c7:	add    BYTE PTR [rax+0x1f],dl
   1400304ca:	add    eax,DWORD PTR [rax+0x1]
   1400304cd:	add    BYTE PTR [rax],al
   1400304cf:	add    BYTE PTR [rdx],cl
   1400304d1:	or     al,0x0
   1400304d3:	add    BYTE PTR [rax],al
   1400304d5:	add    BYTE PTR [rax],al
   1400304d7:	add    BYTE PTR [rax+0x1f],ah
   1400304da:	add    eax,DWORD PTR [rax+0x1]
   1400304dd:	add    BYTE PTR [rax],al
   1400304df:	add    BYTE PTR [rsp+rcx*1],cl
   1400304e2:	add    BYTE PTR [rax],al
   1400304e4:	add    BYTE PTR [rax],al
   1400304e6:	add    BYTE PTR [rax],al
   1400304e8:	jo     0x140030509
   1400304ea:	add    eax,DWORD PTR [rax+0x1]
   1400304ed:	add    BYTE PTR [rax],al
   1400304ef:	add    BYTE PTR [rdx],bl
   1400304f1:	or     al,0x0
   1400304f3:	add    BYTE PTR [rax],al
   1400304f5:	add    BYTE PTR [rax],al
   1400304f7:	add    BYTE PTR [rax+0x140031f],al
   1400304fd:	add    BYTE PTR [rax],al
   1400304ff:	add    BYTE PTR [rbx],bh
   140030501:	or     al,0x0
   140030503:	add    BYTE PTR [rax],al
   140030505:	add    BYTE PTR [rax],al
   140030507:	add    BYTE PTR [rax+0x140031f],bl
   14003050d:	add    BYTE PTR [rax],al
   14003050f:	add    BYTE PTR [rbx+0xc],ch
   140030512:	add    BYTE PTR [rax],al
   140030514:	add    BYTE PTR [rax],al
   140030516:	add    BYTE PTR [rax],al
   140030518:	test   al,0x1f
   14003051a:	add    eax,DWORD PTR [rax+0x1]
   14003051d:	add    BYTE PTR [rax],al
   14003051f:	add    BYTE PTR [rcx],al
   140030521:	adc    BYTE PTR [rax],al
   140030523:	add    BYTE PTR [rax],al
   140030525:	add    BYTE PTR [rax],al
   140030527:	add    BYTE PTR [rax+0x140031f],bh
   14003052d:	add    BYTE PTR [rax],al
   14003052f:	add    BYTE PTR [rax+rdx*1],al
   140030532:	add    BYTE PTR [rax],al
   140030534:	add    BYTE PTR [rax],al
   140030536:	add    BYTE PTR [rax],al
   140030538:	enter  0x31f,0x40
   14003053c:	add    DWORD PTR [rax],eax
   14003053e:	add    BYTE PTR [rax],al
   140030540:	(bad)  
   140030541:	adc    BYTE PTR [rax],al
   140030543:	add    BYTE PTR [rax],al
   140030545:	add    BYTE PTR [rax],al
   140030547:	add    al,bl
   140030549:	(bad)  
   14003054a:	add    eax,DWORD PTR [rax+0x1]
   14003054d:	add    BYTE PTR [rax],al
   14003054f:	add    BYTE PTR [rcx],cl
   140030551:	adc    BYTE PTR [rax],al
   140030553:	add    BYTE PTR [rax],al
   140030555:	add    BYTE PTR [rax],al
   140030557:	add    al,ch
   140030559:	(bad)  
   14003055a:	add    eax,DWORD PTR [rax+0x1]
   14003055d:	add    BYTE PTR [rax],al
   14003055f:	add    BYTE PTR [rdx],cl
   140030561:	adc    BYTE PTR [rax],al
   140030563:	add    BYTE PTR [rax],al
   140030565:	add    BYTE PTR [rax],al
   140030567:	add    al,bh
   140030569:	(bad)  
   14003056a:	add    eax,DWORD PTR [rax+0x1]
   14003056d:	add    BYTE PTR [rax],al
   14003056f:	add    BYTE PTR [rax+rdx*1],cl
   140030572:	add    BYTE PTR [rax],al
   140030574:	add    BYTE PTR [rax],al
   140030576:	add    BYTE PTR [rax],al
   140030578:	or     BYTE PTR [rax],ah
   14003057a:	add    eax,DWORD PTR [rax+0x1]
   14003057d:	add    BYTE PTR [rax],al
   14003057f:	add    BYTE PTR [rdx],bl
   140030581:	adc    BYTE PTR [rax],al
   140030583:	add    BYTE PTR [rax],al
   140030585:	add    BYTE PTR [rax],al
   140030587:	add    BYTE PTR [rax],bl
   140030589:	and    BYTE PTR [rbx],al
   14003058b:	rex add DWORD PTR [rax],eax
   14003058e:	add    BYTE PTR [rax],al
   140030590:	cmp    edx,DWORD PTR [rax]
   140030592:	add    BYTE PTR [rax],al
   140030594:	add    BYTE PTR [rax],al
   140030596:	add    BYTE PTR [rax],al
   140030598:	sub    BYTE PTR [rax],ah
   14003059a:	add    eax,DWORD PTR [rax+0x1]
   14003059d:	add    BYTE PTR [rax],al
   14003059f:	add    BYTE PTR [rcx],al
   1400305a1:	adc    al,0x0
   1400305a3:	add    BYTE PTR [rax],al
   1400305a5:	add    BYTE PTR [rax],al
   1400305a7:	add    BYTE PTR [rax],bh
   1400305a9:	and    BYTE PTR [rbx],al
   1400305ab:	rex add DWORD PTR [rax],eax
   1400305ae:	add    BYTE PTR [rax],al
   1400305b0:	add    al,0x14
   1400305b2:	add    BYTE PTR [rax],al
   1400305b4:	add    BYTE PTR [rax],al
   1400305b6:	add    BYTE PTR [rax],al
   1400305b8:	rex.W and BYTE PTR [rbx],al
   1400305bb:	rex add DWORD PTR [rax],eax
   1400305be:	add    BYTE PTR [rax],al
   1400305c0:	(bad)  
   1400305c1:	adc    al,0x0
   1400305c3:	add    BYTE PTR [rax],al
   1400305c5:	add    BYTE PTR [rax],al
   1400305c7:	add    BYTE PTR [rax+0x20],bl
   1400305ca:	add    eax,DWORD PTR [rax+0x1]
   1400305cd:	add    BYTE PTR [rax],al
   1400305cf:	add    BYTE PTR [rcx],cl
   1400305d1:	adc    al,0x0
   1400305d3:	add    BYTE PTR [rax],al
   1400305d5:	add    BYTE PTR [rax],al
   1400305d7:	add    BYTE PTR [rax+0x20],ch
   1400305da:	add    eax,DWORD PTR [rax+0x1]
   1400305dd:	add    BYTE PTR [rax],al
   1400305df:	add    BYTE PTR [rdx],cl
   1400305e1:	adc    al,0x0
   1400305e3:	add    BYTE PTR [rax],al
   1400305e5:	add    BYTE PTR [rax],al
   1400305e7:	add    BYTE PTR [rax+0x20],bh
   1400305ea:	add    eax,DWORD PTR [rax+0x1]
   1400305ed:	add    BYTE PTR [rax],al
   1400305ef:	add    BYTE PTR [rsp+rdx*1],cl
   1400305f2:	add    BYTE PTR [rax],al
   1400305f4:	add    BYTE PTR [rax],al
   1400305f6:	add    BYTE PTR [rax],al
   1400305f8:	mov    BYTE PTR [rax],ah
   1400305fa:	add    eax,DWORD PTR [rax+0x1]
   1400305fd:	add    BYTE PTR [rax],al
   1400305ff:	add    BYTE PTR [rdx],bl
   140030601:	adc    al,0x0
   140030603:	add    BYTE PTR [rax],al
   140030605:	add    BYTE PTR [rax],al
   140030607:	add    BYTE PTR [rax+0x1400320],bl
   14003060d:	add    BYTE PTR [rax],al
   14003060f:	add    BYTE PTR [rbx],bh
   140030611:	adc    al,0x0
   140030613:	add    BYTE PTR [rax],al
   140030615:	add    BYTE PTR [rax],al
   140030617:	add    BYTE PTR [rax+0x1400320],dh
   14003061d:	add    BYTE PTR [rax],al
   14003061f:	add    BYTE PTR [rcx],al
   140030621:	sbb    BYTE PTR [rax],al
   140030623:	add    BYTE PTR [rax],al
   140030625:	add    BYTE PTR [rax],al
   140030627:	add    al,al
   140030629:	and    BYTE PTR [rbx],al
   14003062b:	rex add DWORD PTR [rax],eax
   14003062e:	add    BYTE PTR [rax],al
   140030630:	or     DWORD PTR [rax],ebx
   140030632:	add    BYTE PTR [rax],al
   140030634:	add    BYTE PTR [rax],al
   140030636:	add    BYTE PTR [rax],al
   140030638:	shl    BYTE PTR [rax],1
   14003063a:	add    eax,DWORD PTR [rax+0x1]
   14003063d:	add    BYTE PTR [rax],al
   14003063f:	add    BYTE PTR [rdx],cl
   140030641:	sbb    BYTE PTR [rax],al
   140030643:	add    BYTE PTR [rax],al
   140030645:	add    BYTE PTR [rax],al
   140030647:	add    al,ah
   140030649:	and    BYTE PTR [rbx],al
   14003064b:	rex add DWORD PTR [rax],eax
   14003064e:	add    BYTE PTR [rax],al
   140030650:	or     al,0x18
   140030652:	add    BYTE PTR [rax],al
   140030654:	add    BYTE PTR [rax],al
   140030656:	add    BYTE PTR [rax],al
   140030658:	lock and BYTE PTR [rbx],al
   14003065b:	rex add DWORD PTR [rax],eax
   14003065e:	add    BYTE PTR [rax],al
   140030660:	sbb    bl,BYTE PTR [rax]
   140030662:	add    BYTE PTR [rax],al
   140030664:	add    BYTE PTR [rax],al
   140030666:	add    BYTE PTR [rax],al
   140030668:	add    BYTE PTR [rcx],ah
   14003066a:	add    eax,DWORD PTR [rax+0x1]
   14003066d:	add    BYTE PTR [rax],al
   14003066f:	add    BYTE PTR [rbx],bh
   140030671:	sbb    BYTE PTR [rax],al
   140030673:	add    BYTE PTR [rax],al
   140030675:	add    BYTE PTR [rax],al
   140030677:	add    BYTE PTR [rax],bl
   140030679:	and    DWORD PTR [rbx],eax
   14003067b:	rex add DWORD PTR [rax],eax
   14003067e:	add    BYTE PTR [rax],al
   140030680:	add    DWORD PTR [rax+rax*1],ebx
   140030683:	add    BYTE PTR [rax],al
   140030685:	add    BYTE PTR [rax],al
   140030687:	add    BYTE PTR [rax],ch
   140030689:	and    DWORD PTR [rbx],eax
   14003068b:	rex add DWORD PTR [rax],eax
   14003068e:	add    BYTE PTR [rax],al
   140030690:	or     DWORD PTR [rax+rax*1],ebx
   140030693:	add    BYTE PTR [rax],al
   140030695:	add    BYTE PTR [rax],al
   140030697:	add    BYTE PTR [rax],bh
   140030699:	and    DWORD PTR [rbx],eax
   14003069b:	rex add DWORD PTR [rax],eax
   14003069e:	add    BYTE PTR [rax],al
   1400306a0:	or     bl,BYTE PTR [rax+rax*1]
   1400306a3:	add    BYTE PTR [rax],al
   1400306a5:	add    BYTE PTR [rax],al
   1400306a7:	add    BYTE PTR [rax+0x21],cl
   1400306aa:	add    eax,DWORD PTR [rax+0x1]
   1400306ad:	add    BYTE PTR [rax],al
   1400306af:	add    BYTE PTR [rdx],bl
   1400306b1:	sbb    al,0x0
   1400306b3:	add    BYTE PTR [rax],al
   1400306b5:	add    BYTE PTR [rax],al
   1400306b7:	add    BYTE PTR [rax+0x21],bl
   1400306ba:	add    eax,DWORD PTR [rax+0x1]
   1400306bd:	add    BYTE PTR [rax],al
   1400306bf:	add    BYTE PTR [rbx],bh
   1400306c1:	sbb    al,0x0
   1400306c3:	add    BYTE PTR [rax],al
   1400306c5:	add    BYTE PTR [rax],al
   1400306c7:	add    BYTE PTR [rax+0x21],dh
   1400306ca:	add    eax,DWORD PTR [rax+0x1]
   1400306cd:	add    BYTE PTR [rax],al
   1400306cf:	add    BYTE PTR [rcx],al
   1400306d1:	and    BYTE PTR [rax],al
   1400306d3:	add    BYTE PTR [rax],al
   1400306d5:	add    BYTE PTR [rax],al
   1400306d7:	add    BYTE PTR [rax+0x1400321],al
   1400306dd:	add    BYTE PTR [rax],al
   1400306df:	add    BYTE PTR [rcx],cl
   1400306e1:	and    BYTE PTR [rax],al
   1400306e3:	add    BYTE PTR [rax],al
   1400306e5:	add    BYTE PTR [rax],al
   1400306e7:	add    BYTE PTR [rax+0x1400321],dl
   1400306ed:	add    BYTE PTR [rax],al
   1400306ef:	add    BYTE PTR [rdx],cl
   1400306f1:	and    BYTE PTR [rax],al
   1400306f3:	add    BYTE PTR [rax],al
   1400306f5:	add    BYTE PTR [rax],al
   1400306f7:	add    BYTE PTR [rax+0x1400321],ah
   1400306fd:	add    BYTE PTR [rax],al
   1400306ff:	add    BYTE PTR [rbx],bh
   140030701:	and    BYTE PTR [rax],al
   140030703:	add    BYTE PTR [rax],al
   140030705:	add    BYTE PTR [rax],al
   140030707:	add    BYTE PTR [rax+0x1400321],dh
   14003070d:	add    BYTE PTR [rax],al
   14003070f:	add    BYTE PTR [rcx],al
   140030711:	and    al,0x0
   140030713:	add    BYTE PTR [rax],al
   140030715:	add    BYTE PTR [rax],al
   140030717:	add    al,al
   140030719:	and    DWORD PTR [rbx],eax
   14003071b:	rex add DWORD PTR [rax],eax
   14003071e:	add    BYTE PTR [rax],al
   140030720:	or     DWORD PTR [rax+rax*1],esp
   140030723:	add    BYTE PTR [rax],al
   140030725:	add    BYTE PTR [rax],al
   140030727:	add    al,dl
   140030729:	and    DWORD PTR [rbx],eax
   14003072b:	rex add DWORD PTR [rax],eax
   14003072e:	add    BYTE PTR [rax],al
   140030730:	or     ah,BYTE PTR [rax+rax*1]
   140030733:	add    BYTE PTR [rax],al
   140030735:	add    BYTE PTR [rax],al
   140030737:	add    al,ah
   140030739:	and    DWORD PTR [rbx],eax
   14003073b:	rex add DWORD PTR [rax],eax
   14003073e:	add    BYTE PTR [rax],al
   140030740:	cmp    esp,DWORD PTR [rax+rax*1]
   140030743:	add    BYTE PTR [rax],al
   140030745:	add    BYTE PTR [rax],al
   140030747:	add    al,dh
   140030749:	and    DWORD PTR [rbx],eax
   14003074b:	rex add DWORD PTR [rax],eax
   14003074e:	add    BYTE PTR [rax],al
   140030750:	add    DWORD PTR [rax],ebp
   140030752:	add    BYTE PTR [rax],al
   140030754:	add    BYTE PTR [rax],al
   140030756:	add    BYTE PTR [rax],al
   140030758:	add    BYTE PTR [rdx],ah
   14003075a:	add    eax,DWORD PTR [rax+0x1]
   14003075d:	add    BYTE PTR [rax],al
   14003075f:	add    BYTE PTR [rcx],cl
   140030761:	sub    BYTE PTR [rax],al
   140030763:	add    BYTE PTR [rax],al
   140030765:	add    BYTE PTR [rax],al
   140030767:	add    BYTE PTR [rax],dl
   140030769:	and    al,BYTE PTR [rbx]
   14003076b:	rex add DWORD PTR [rax],eax
   14003076e:	add    BYTE PTR [rax],al
   140030770:	or     ch,BYTE PTR [rax]
   140030772:	add    BYTE PTR [rax],al
   140030774:	add    BYTE PTR [rax],al
   140030776:	add    BYTE PTR [rax],al
   140030778:	and    BYTE PTR [rdx],ah
   14003077a:	add    eax,DWORD PTR [rax+0x1]
   14003077d:	add    BYTE PTR [rax],al
   14003077f:	add    BYTE PTR [rcx],al
   140030781:	sub    al,0x0
   140030783:	add    BYTE PTR [rax],al
   140030785:	add    BYTE PTR [rax],al
   140030787:	add    BYTE PTR [rax],dh
   140030789:	and    al,BYTE PTR [rbx]
   14003078b:	rex add DWORD PTR [rax],eax
   14003078e:	add    BYTE PTR [rax],al
   140030790:	or     DWORD PTR [rax+rax*1],ebp
   140030793:	add    BYTE PTR [rax],al
   140030795:	add    BYTE PTR [rax],al
   140030797:	add    BYTE PTR [rax+0x22],al
   14003079a:	add    eax,DWORD PTR [rax+0x1]
   14003079d:	add    BYTE PTR [rax],al
   14003079f:	add    BYTE PTR [rdx],cl
   1400307a1:	sub    al,0x0
   1400307a3:	add    BYTE PTR [rax],al
   1400307a5:	add    BYTE PTR [rax],al
   1400307a7:	add    BYTE PTR [rax+0x22],dl
   1400307aa:	add    eax,DWORD PTR [rax+0x1]
   1400307ad:	add    BYTE PTR [rax],al
   1400307af:	add    BYTE PTR [rcx],al
   1400307b1:	xor    BYTE PTR [rax],al
   1400307b3:	add    BYTE PTR [rax],al
   1400307b5:	add    BYTE PTR [rax],al
   1400307b7:	add    BYTE PTR [rax+0x22],ah
   1400307ba:	add    eax,DWORD PTR [rax+0x1]
   1400307bd:	add    BYTE PTR [rax],al
   1400307bf:	add    BYTE PTR [rcx],cl
   1400307c1:	xor    BYTE PTR [rax],al
   1400307c3:	add    BYTE PTR [rax],al
   1400307c5:	add    BYTE PTR [rax],al
   1400307c7:	add    BYTE PTR [rax+0x22],dh
   1400307ca:	add    eax,DWORD PTR [rax+0x1]
   1400307cd:	add    BYTE PTR [rax],al
   1400307cf:	add    BYTE PTR [rdx],cl
   1400307d1:	xor    BYTE PTR [rax],al
   1400307d3:	add    BYTE PTR [rax],al
   1400307d5:	add    BYTE PTR [rax],al
   1400307d7:	add    BYTE PTR [rax+0x1400322],al
   1400307dd:	add    BYTE PTR [rax],al
   1400307df:	add    BYTE PTR [rcx],al
   1400307e1:	xor    al,0x0
   1400307e3:	add    BYTE PTR [rax],al
   1400307e5:	add    BYTE PTR [rax],al
   1400307e7:	add    BYTE PTR [rax+0x1400322],dl
   1400307ed:	add    BYTE PTR [rax],al
   1400307ef:	add    BYTE PTR [rcx],cl
   1400307f1:	xor    al,0x0
   1400307f3:	add    BYTE PTR [rax],al
   1400307f5:	add    BYTE PTR [rax],al
   1400307f7:	add    BYTE PTR [rax+0x1400322],ah
   1400307fd:	add    BYTE PTR [rax],al
   1400307ff:	add    BYTE PTR [rdx],cl
   140030801:	xor    al,0x0
   140030803:	add    BYTE PTR [rax],al
   140030805:	add    BYTE PTR [rax],al
   140030807:	add    BYTE PTR [rax+0x1400322],dh
   14003080d:	add    BYTE PTR [rax],al
   14003080f:	add    BYTE PTR [rcx],al
   140030811:	cmp    BYTE PTR [rax],al
   140030813:	add    BYTE PTR [rax],al
   140030815:	add    BYTE PTR [rax],al
   140030817:	add    al,al
   140030819:	and    al,BYTE PTR [rbx]
   14003081b:	rex add DWORD PTR [rax],eax
   14003081e:	add    BYTE PTR [rax],al
   140030820:	or     bh,BYTE PTR [rax]
   140030822:	add    BYTE PTR [rax],al
   140030824:	add    BYTE PTR [rax],al
   140030826:	add    BYTE PTR [rax],al
   140030828:	shl    BYTE PTR [rdx],1
   14003082a:	add    eax,DWORD PTR [rax+0x1]
   14003082d:	add    BYTE PTR [rax],al
   14003082f:	add    BYTE PTR [rcx],al
   140030831:	cmp    al,0x0
   140030833:	add    BYTE PTR [rax],al
   140030835:	add    BYTE PTR [rax],al
   140030837:	add    al,ah
   140030839:	and    al,BYTE PTR [rbx]
   14003083b:	rex add DWORD PTR [rax],eax
   14003083e:	add    BYTE PTR [rax],al
   140030840:	or     bh,BYTE PTR [rax+rax*1]
   140030843:	add    BYTE PTR [rax],al
   140030845:	add    BYTE PTR [rax],al
   140030847:	add    al,dh
   140030849:	and    al,BYTE PTR [rbx]
   14003084b:	rex add DWORD PTR [rax],eax
   14003084e:	add    BYTE PTR [rax],al
   140030850:	add    DWORD PTR [rax+0x0],eax
   140030853:	add    BYTE PTR [rax],al
   140030855:	add    BYTE PTR [rax],al
   140030857:	add    BYTE PTR [rax],al
   140030859:	and    eax,DWORD PTR [rbx]
   14003085b:	rex add DWORD PTR [rax],eax
   14003085e:	add    BYTE PTR [rax],al
   140030860:	or     al,BYTE PTR [rax+0x0]
   140030863:	add    BYTE PTR [rax],al
   140030865:	add    BYTE PTR [rax],al
   140030867:	add    BYTE PTR [rax],dl
   140030869:	and    eax,DWORD PTR [rbx]
   14003086b:	rex add DWORD PTR [rax],eax
   14003086e:	add    BYTE PTR [rax],al
   140030870:	or     al,BYTE PTR [rax+rax*1+0x0]
   140030874:	add    BYTE PTR [rax],al
   140030876:	add    BYTE PTR [rax],al
   140030878:	and    BYTE PTR [rbx],ah
   14003087a:	add    eax,DWORD PTR [rax+0x1]
   14003087d:	add    BYTE PTR [rax],al
   14003087f:	add    BYTE PTR [rdx],cl
   140030881:	rex.W add BYTE PTR [rax],al
   140030884:	add    BYTE PTR [rax],al
   140030886:	add    BYTE PTR [rax],al
   140030888:	xor    BYTE PTR [rbx],ah
   14003088a:	add    eax,DWORD PTR [rax+0x1]
   14003088d:	add    BYTE PTR [rax],al
   14003088f:	add    BYTE PTR [rdx],cl
   140030891:	rex.WR add BYTE PTR [rax],r8b
   140030894:	add    BYTE PTR [rax],al
   140030896:	add    BYTE PTR [rax],al
   140030898:	rex and eax,DWORD PTR [rbx]
   14003089b:	rex add DWORD PTR [rax],eax
   14003089e:	add    BYTE PTR [rax],al
   1400308a0:	or     dl,BYTE PTR [rax+0x0]
   1400308a3:	add    BYTE PTR [rax],al
   1400308a5:	add    BYTE PTR [rax],al
   1400308a7:	add    BYTE PTR [rax+0x23],dl
   1400308aa:	add    eax,DWORD PTR [rax+0x1]
   1400308ad:	add    BYTE PTR [rax],al
   1400308af:	add    BYTE PTR [rsp+rdi*2],al
   1400308b2:	add    BYTE PTR [rax],al
   1400308b4:	add    BYTE PTR [rax],al
   1400308b6:	add    BYTE PTR [rax],al
   1400308b8:	(bad)  
   1400308b9:	and    eax,DWORD PTR [rbx]
   1400308bb:	rex add DWORD PTR [rax],eax
   1400308be:	add    BYTE PTR [rax],al
   1400308c0:	sbb    bh,BYTE PTR [rax+rax*1+0x0]
   1400308c4:	add    BYTE PTR [rax],al
   1400308c6:	add    BYTE PTR [rax],al
   1400308c8:	jo     0x1400308ed
   1400308ca:	add    eax,DWORD PTR [rax+0x1]
   1400308cd:	add    BYTE PTR [rax],al
   1400308cf:	add    BYTE PTR [rax],bh
   1400308d1:	enter  0x4002,0x1
   1400308d5:	add    BYTE PTR [rax],al
   1400308d7:	add    BYTE PTR [rdx+0x0],al
   1400308da:	add    BYTE PTR [rax],al
   1400308dc:	add    BYTE PTR [rax],al
   1400308de:	add    BYTE PTR [rax],al
   1400308e0:	js     0x1400308fa
   1400308e2:	add    eax,DWORD PTR [rax+0x1]
   1400308e5:	add    BYTE PTR [rax],al
   1400308e7:	add    BYTE PTR [rax+rax*1],ch
   1400308ea:	add    BYTE PTR [rax],al
   1400308ec:	add    BYTE PTR [rax],al
   1400308ee:	add    BYTE PTR [rax],al
   1400308f0:	js     0x140030915
   1400308f2:	add    eax,DWORD PTR [rax+0x1]
   1400308f5:	add    BYTE PTR [rax],al
   1400308f7:	add    BYTE PTR [rcx+0x0],dh
   1400308fa:	add    BYTE PTR [rax],al
   1400308fc:	add    BYTE PTR [rax],al
   1400308fe:	add    BYTE PTR [rax],al
   140030900:	adc    BYTE PTR [rdi],dl
   140030902:	add    eax,DWORD PTR [rax+0x1]
	...
   14003090d:	add    BYTE PTR [rax],al
   14003090f:	add    BYTE PTR [rax+0x1400323],cl
   140030915:	add    BYTE PTR [rax],al
   140030917:	add    al,bl
   140030919:	add    BYTE PTR [rax],al
   14003091b:	add    BYTE PTR [rax],al
   14003091d:	add    BYTE PTR [rax],al
   14003091f:	add    BYTE PTR [rax+0x1400323],bl
   140030925:	add    BYTE PTR [rax],al
   140030927:	add    dl,bl
   140030929:	add    BYTE PTR [rax],al
   14003092b:	add    BYTE PTR [rax],al
   14003092d:	add    BYTE PTR [rax],al
   14003092f:	add    BYTE PTR [rax+0x1400323],ch
   140030935:	add    BYTE PTR [rax],al
   140030937:	add    BYTE PTR [rcx+0x0],dh
   14003093d:	add    BYTE PTR [rax],al
   14003093f:	add    BYTE PTR [rax+0x1400323],bh
   140030945:	add    BYTE PTR [rax],al
   140030947:	add    BYTE PTR [rax+0x0],ah
   14003094d:	add    BYTE PTR [rax],al
   14003094f:	add    al,cl
   140030951:	and    eax,DWORD PTR [rbx]
   140030953:	rex add DWORD PTR [rax],eax
   140030956:	add    BYTE PTR [rax],al
   140030958:	pop    QWORD PTR [rax]
   14003095a:	add    BYTE PTR [rax],al
   14003095c:	add    BYTE PTR [rax],al
   14003095e:	add    BYTE PTR [rax],al
   140030960:	fsub   DWORD PTR [rbx]
   140030962:	add    eax,DWORD PTR [rax+0x1]
   140030965:	add    BYTE PTR [rax],al
   140030967:	add    bh,cl
   140030969:	add    BYTE PTR [rax],al
   14003096b:	add    BYTE PTR [rax],al
   14003096d:	add    BYTE PTR [rax],al
   14003096f:	add    al,ch
   140030971:	and    eax,DWORD PTR [rbx]
   140030973:	rex add DWORD PTR [rax],eax
   140030976:	add    BYTE PTR [rax],al
   140030978:	(bad)  
   140030979:	add    BYTE PTR [rax],al
   14003097b:	add    BYTE PTR [rax],al
   14003097d:	add    BYTE PTR [rax],al
   14003097f:	add    al,bh
   140030981:	and    eax,DWORD PTR [rbx]
   140030983:	rex add DWORD PTR [rax],eax
   140030986:	add    BYTE PTR [rax],al
   140030988:	rol    BYTE PTR [rax],cl
   14003098a:	add    BYTE PTR [rax],al
   14003098c:	add    BYTE PTR [rax],al
   14003098e:	add    BYTE PTR [rax],al
   140030990:	or     BYTE PTR [rbx+rax*1],ah
   140030993:	rex add DWORD PTR [rax],eax
   140030996:	add    BYTE PTR [rax],al
   140030998:	test   eax,0x0
   14003099d:	add    BYTE PTR [rax],al
   14003099f:	add    BYTE PTR [rax],bl
   1400309a1:	and    al,0x3
   1400309a3:	rex add DWORD PTR [rax],eax
   1400309a6:	add    BYTE PTR [rax],al
   1400309a8:	mov    ecx,0x0
   1400309ad:	add    BYTE PTR [rax],al
   1400309af:	add    BYTE PTR [rax],ch
   1400309b1:	and    al,0x3
   1400309b3:	rex add DWORD PTR [rax],eax
   1400309b6:	add    BYTE PTR [rax],al
   1400309b8:	(bad)  
   1400309b9:	add    BYTE PTR [rax],al
   1400309bb:	add    BYTE PTR [rax],al
   1400309bd:	add    BYTE PTR [rax],al
   1400309bf:	add    BYTE PTR [rax],bh
   1400309c1:	and    al,0x3
   1400309c3:	rex add DWORD PTR [rax],eax
   1400309c6:	add    BYTE PTR [rax],al
   1400309c8:	fadd   QWORD PTR [rax]
   1400309ca:	add    BYTE PTR [rax],al
   1400309cc:	add    BYTE PTR [rax],al
   1400309ce:	add    BYTE PTR [rax],al
   1400309d0:	rex.W and al,0x3
   1400309d3:	rex add DWORD PTR [rax],eax
   1400309d6:	add    BYTE PTR [rax],al
   1400309d8:	rex.XB add BYTE PTR [r8],al
   1400309db:	add    BYTE PTR [rax],al
   1400309dd:	add    BYTE PTR [rax],al
   1400309df:	add    BYTE PTR [rax+0x24],bl
   1400309e2:	add    eax,DWORD PTR [rax+0x1]
   1400309e5:	add    BYTE PTR [rax],al
   1400309e7:	add    ah,cl
   1400309e9:	add    BYTE PTR [rax],al
   1400309eb:	add    BYTE PTR [rax],al
   1400309ed:	add    BYTE PTR [rax],al
   1400309ef:	add    BYTE PTR [rax+0x24],ch
   1400309f2:	add    eax,DWORD PTR [rax+0x1]
   1400309f5:	add    BYTE PTR [rax],al
   1400309f7:	add    BYTE PTR [rdi+0x0],bh
   1400309fd:	add    BYTE PTR [rax],al
   1400309ff:	add    BYTE PTR [rax+0x24],bh
   140030a02:	add    eax,DWORD PTR [rax+0x1]
   140030a05:	add    BYTE PTR [rax],al
   140030a07:	add    al,cl
   140030a09:	add    BYTE PTR [rax],al
   140030a0b:	add    BYTE PTR [rax],al
   140030a0d:	add    BYTE PTR [rax],al
   140030a0f:	add    BYTE PTR [rax+0x18],ah
   140030a12:	add    eax,DWORD PTR [rax+0x1]
   140030a15:	add    BYTE PTR [rax],al
   140030a17:	add    BYTE PTR [rcx],ch
   140030a19:	add    BYTE PTR [rax],al
   140030a1b:	add    BYTE PTR [rax],al
   140030a1d:	add    BYTE PTR [rax],al
   140030a1f:	add    BYTE PTR [rax+0x1400324],cl
   140030a25:	add    BYTE PTR [rax],al
   140030a27:	add    BYTE PTR [rbx+0x0],bl
   140030a2d:	add    BYTE PTR [rax],al
   140030a2f:	add    BYTE PTR [rax+0x1400324],ah
   140030a35:	add    BYTE PTR [rax],al
   140030a37:	add    BYTE PTR [rbx+0x0],ch
   140030a3a:	add    BYTE PTR [rax],al
   140030a3c:	add    BYTE PTR [rax],al
   140030a3e:	add    BYTE PTR [rax],al
   140030a40:	and    BYTE PTR [rax],bl
   140030a42:	add    eax,DWORD PTR [rax+0x1]
   140030a45:	add    BYTE PTR [rax],al
   140030a47:	add    BYTE PTR [rcx],ah
   140030a49:	add    BYTE PTR [rax],al
   140030a4b:	add    BYTE PTR [rax],al
   140030a4d:	add    BYTE PTR [rax],al
   140030a4f:	add    BYTE PTR [rax+0x1400324],bh
   140030a55:	add    BYTE PTR [rax],al
   140030a57:	add    BYTE PTR [rbx+0x0],ah
   140030a5a:	add    BYTE PTR [rax],al
   140030a5c:	add    BYTE PTR [rax],al
   140030a5e:	add    BYTE PTR [rax],al
   140030a60:	sbb    BYTE PTR [rdi],dl
   140030a62:	add    eax,DWORD PTR [rax+0x1]
   140030a65:	add    BYTE PTR [rax],al
   140030a67:	add    BYTE PTR [rcx],al
   140030a69:	add    BYTE PTR [rax],al
   140030a6b:	add    BYTE PTR [rax],al
   140030a6d:	add    BYTE PTR [rax],al
   140030a6f:	add    al,cl
   140030a71:	and    al,0x3
   140030a73:	rex add DWORD PTR [rax],eax
   140030a76:	add    BYTE PTR [rax],al
   140030a78:	add    BYTE PTR [rax],r8b
   140030a7b:	add    BYTE PTR [rax],al
   140030a7d:	add    BYTE PTR [rax],al
   140030a7f:	add    al,bl
   140030a81:	and    al,0x3
   140030a83:	rex add DWORD PTR [rax],eax
   140030a86:	add    BYTE PTR [rax],al
   140030a88:	jge    0x140030a8a
   140030a8a:	add    BYTE PTR [rax],al
   140030a8c:	add    BYTE PTR [rax],al
   140030a8e:	add    BYTE PTR [rax],al
   140030a90:	call   0x141430db9
   140030a95:	add    BYTE PTR [rax],al
   140030a97:	add    BYTE PTR [rdi+0x0],dh
   140030a9d:	add    BYTE PTR [rax],al
   140030a9f:	add    BYTE PTR [rax],ah
   140030aa1:	(bad)  
   140030aa2:	add    eax,DWORD PTR [rax+0x1]
   140030aa5:	add    BYTE PTR [rax],al
   140030aa7:	add    BYTE PTR [rdx],al
	...
   140030ab1:	and    eax,0x14003
   140030ab6:	add    BYTE PTR [rax],al
   140030ab8:	add    BYTE PTR [r8],r8b
   140030abb:	add    BYTE PTR [rax],al
   140030abd:	add    BYTE PTR [rax],al
   140030abf:	add    BYTE PTR [rax],bh
   140030ac1:	(bad)  
   140030ac2:	add    eax,DWORD PTR [rax+0x1]
   140030ac5:	add    BYTE PTR [rax],al
   140030ac7:	add    BYTE PTR [rax+rax*1],al
   140030aca:	add    BYTE PTR [rax],al
   140030acc:	add    BYTE PTR [rax],al
   140030ace:	add    BYTE PTR [rax],al
   140030ad0:	adc    BYTE PTR [rip+0x14003],ah        # 0x140044ad9
   140030ad6:	add    BYTE PTR [rax],al
   140030ad8:	rex.RXB add BYTE PTR [r8],r8b
   140030adb:	add    BYTE PTR [rax],al
   140030add:	add    BYTE PTR [rax],al
   140030adf:	add    BYTE PTR [rax],ah
   140030ae1:	and    eax,0x14003
   140030ae6:	add    BYTE PTR [rax],al
   140030ae8:	xchg   DWORD PTR [rax],eax
   140030aea:	add    BYTE PTR [rax],al
   140030aec:	add    BYTE PTR [rax],al
   140030aee:	add    BYTE PTR [rax],al
   140030af0:	rex (bad) 
   140030af2:	add    eax,DWORD PTR [rax+0x1]
   140030af5:	add    BYTE PTR [rax],al
   140030af7:	add    BYTE PTR [rip+0x0],al        # 0x140030afd
   140030afd:	add    BYTE PTR [rax],al
   140030aff:	add    BYTE PTR [rax],dh
   140030b01:	and    eax,0x14003
   140030b06:	add    BYTE PTR [rax],al
   140030b08:	rex.W add BYTE PTR [rax],al
   140030b0b:	add    BYTE PTR [rax],al
   140030b0d:	add    BYTE PTR [rax],al
   140030b0f:	add    BYTE PTR [rax+0x17],cl
   140030b12:	add    eax,DWORD PTR [rax+0x1]
   140030b15:	add    BYTE PTR [rax],al
   140030b17:	add    BYTE PTR [rsi],al
   140030b19:	add    BYTE PTR [rax],al
   140030b1b:	add    BYTE PTR [rax],al
   140030b1d:	add    BYTE PTR [rax],al
   140030b1f:	add    BYTE PTR [rax+0x25],al
   140030b22:	add    eax,DWORD PTR [rax+0x1]
   140030b25:	add    BYTE PTR [rax],al
   140030b27:	add    BYTE PTR [rdx+0x0],ah
   140030b2d:	add    BYTE PTR [rax],al
   140030b2f:	add    BYTE PTR [rax+0x25],dl
   140030b32:	add    eax,DWORD PTR [rax+0x1]
   140030b35:	add    BYTE PTR [rax],al
   140030b37:	add    BYTE PTR [rcx+0x0],dl
   140030b3d:	add    BYTE PTR [rax],al
   140030b3f:	add    BYTE PTR [rax+0x25],ah
   140030b42:	add    eax,DWORD PTR [rax+0x1]
   140030b45:	add    BYTE PTR [rax],al
   140030b47:	add    BYTE PTR [rcx+0x0],cl
   140030b4a:	add    BYTE PTR [rax],al
   140030b4c:	add    BYTE PTR [rax],al
   140030b4e:	add    BYTE PTR [rax],al
   140030b50:	jo     0x140030b77
   140030b52:	add    eax,DWORD PTR [rax+0x1]
   140030b55:	add    BYTE PTR [rax],al
   140030b57:	add    BYTE PTR [rbx+0x0],dh
   140030b5d:	add    BYTE PTR [rax],al
   140030b5f:	add    BYTE PTR [rax+0x1400325],al
   140030b65:	add    BYTE PTR [rax],al
   140030b67:	add    BYTE PTR [rbx+0x0],ch
   140030b6d:	add    BYTE PTR [rax],al
   140030b6f:	add    BYTE PTR [rax],ah
   140030b71:	sbb    DWORD PTR [rbx],eax
   140030b73:	rex add DWORD PTR [rax],eax
   140030b76:	add    BYTE PTR [rax],al
   140030b78:	add    BYTE PTR [r8],al
   140030b7b:	add    BYTE PTR [rax],al
   140030b7d:	add    BYTE PTR [rax],al
   140030b7f:	add    BYTE PTR [rax+0x1400325],dl
   140030b85:	add    BYTE PTR [rax],al
   140030b87:	add    BYTE PTR [rbx+0x0],cl
   140030b8d:	add    BYTE PTR [rax],al
   140030b8f:	add    BYTE PTR [rax+0x17],dl
   140030b92:	add    eax,DWORD PTR [rax+0x1]
   140030b95:	add    BYTE PTR [rax],al
   140030b97:	add    BYTE PTR [rdi],al
   140030b99:	add    BYTE PTR [rax],al
   140030b9b:	add    BYTE PTR [rax],al
   140030b9d:	add    BYTE PTR [rax],al
   140030b9f:	add    BYTE PTR [rax+0x1400325],ah
   140030ba5:	add    BYTE PTR [rax],al
   140030ba7:	add    BYTE PTR [rdx+0x0],cl
   140030baa:	add    BYTE PTR [rax],al
   140030bac:	add    BYTE PTR [rax],al
   140030bae:	add    BYTE PTR [rax],al
   140030bb0:	pop    rax
   140030bb1:	(bad)  
   140030bb2:	add    eax,DWORD PTR [rax+0x1]
   140030bb5:	add    BYTE PTR [rax],al
   140030bb7:	add    BYTE PTR [rax],cl
   140030bb9:	add    BYTE PTR [rax],al
   140030bbb:	add    BYTE PTR [rax],al
   140030bbd:	add    BYTE PTR [rax],al
   140030bbf:	add    BYTE PTR [rax+0x1400325],dh
   140030bc5:	add    BYTE PTR [rax],al
   140030bc7:	add    BYTE PTR [rbx+0x0],ah
   140030bcd:	add    BYTE PTR [rax],al
   140030bcf:	add    al,al
   140030bd1:	and    eax,0x14003
   140030bd6:	add    BYTE PTR [rax],al
   140030bd8:	int    0x0
   140030bda:	add    BYTE PTR [rax],al
   140030bdc:	add    BYTE PTR [rax],al
   140030bde:	add    BYTE PTR [rax],al
   140030be0:	shl    BYTE PTR [rip+0x14003],1        # 0x140044be9
   140030be6:	add    BYTE PTR [rax],al
   140030be8:	lods   al,BYTE PTR ds:[rsi]
   140030be9:	add    BYTE PTR [rax],al
   140030beb:	add    BYTE PTR [rax],al
   140030bed:	add    BYTE PTR [rax],al
   140030bef:	add    al,ah
   140030bf1:	and    eax,0x14003
   140030bf6:	add    BYTE PTR [rax],al
   140030bf8:	leave  
   140030bf9:	add    BYTE PTR [rax],al
   140030bfb:	add    BYTE PTR [rax],al
   140030bfd:	add    BYTE PTR [rax],al
   140030bff:	add    al,dh
   140030c01:	and    eax,0x14003
   140030c06:	add    BYTE PTR [rax],al
   140030c08:	xchg   edx,eax
	...
   140030c11:	add    eax,DWORD PTR es:[rax+0x1]
   140030c15:	add    BYTE PTR [rax],al
   140030c17:	add    BYTE PTR [rdx+0x0],bh
   140030c1d:	add    BYTE PTR [rax],al
   140030c1f:	add    BYTE PTR [rax],dl
   140030c21:	add    eax,DWORD PTR es:[rax+0x1]
   140030c25:	add    BYTE PTR [rax],al
   140030c27:	add    ch,al
   140030c29:	add    BYTE PTR [rax],al
   140030c2b:	add    BYTE PTR [rax],al
   140030c2d:	add    BYTE PTR [rax],al
   140030c2f:	add    BYTE PTR [rax],ah
   140030c31:	add    eax,DWORD PTR es:[rax+0x1]
   140030c35:	add    BYTE PTR [rax],al
   140030c37:	add    BYTE PTR [rax+rax*1+0x0],dh
   140030c3e:	add    BYTE PTR [rax],al
   140030c40:	xor    BYTE PTR [rsi],ah
   140030c42:	add    eax,DWORD PTR [rax+0x1]
   140030c45:	add    BYTE PTR [rax],al
   140030c47:	add    dh,dl
   140030c49:	add    BYTE PTR [rax],al
   140030c4b:	add    BYTE PTR [rax],al
   140030c4d:	add    BYTE PTR [rax],al
   140030c4f:	add    BYTE PTR [rax+0x26],al
   140030c52:	add    eax,DWORD PTR [rax+0x1]
   140030c55:	add    BYTE PTR [rax],al
   140030c57:	add    al,dl
   140030c59:	add    BYTE PTR [rax],al
   140030c5b:	add    BYTE PTR [rax],al
   140030c5d:	add    BYTE PTR [rax],al
   140030c5f:	add    BYTE PTR [rax+0x26],dl
   140030c62:	add    eax,DWORD PTR [rax+0x1]
   140030c65:	add    BYTE PTR [rax],al
   140030c67:	add    BYTE PTR [rbx+0x0],cl
   140030c6a:	add    BYTE PTR [rax],al
   140030c6c:	add    BYTE PTR [rax],al
   140030c6e:	add    BYTE PTR [rax],al
   140030c70:	(bad)  
   140030c71:	add    eax,DWORD PTR es:[rax+0x1]
   140030c75:	add    BYTE PTR [rax],al
   140030c77:	add    al,al
   140030c79:	add    BYTE PTR [rax],al
   140030c7b:	add    BYTE PTR [rax],al
   140030c7d:	add    BYTE PTR [rax],al
   140030c7f:	add    BYTE PTR [rax+0x26],dh
   140030c82:	add    eax,DWORD PTR [rax+0x1]
   140030c85:	add    BYTE PTR [rax],al
   140030c87:	add    bl,dl
   140030c89:	add    BYTE PTR [rax],al
   140030c8b:	add    BYTE PTR [rax],al
   140030c8d:	add    BYTE PTR [rax],al
   140030c8f:	add    BYTE PTR [rax+0x17],ah
   140030c92:	add    eax,DWORD PTR [rax+0x1]
   140030c95:	add    BYTE PTR [rax],al
   140030c97:	add    BYTE PTR [rcx],cl
   140030c99:	add    BYTE PTR [rax],al
   140030c9b:	add    BYTE PTR [rax],al
   140030c9d:	add    BYTE PTR [rax],al
   140030c9f:	add    BYTE PTR [rax+0x1400326],al
   140030ca5:	add    BYTE PTR [rax],al
   140030ca7:	add    cl,dl
   140030ca9:	add    BYTE PTR [rax],al
   140030cab:	add    BYTE PTR [rax],al
   140030cad:	add    BYTE PTR [rax],al
   140030caf:	add    BYTE PTR [rax+0x1400326],dl
   140030cb5:	add    BYTE PTR [rax],al
   140030cb7:	add    ch,bl
   140030cb9:	add    BYTE PTR [rax],al
   140030cbb:	add    BYTE PTR [rax],al
   140030cbd:	add    BYTE PTR [rax],al
   140030cbf:	add    BYTE PTR [rax+0x1400326],ah
   140030cc5:	add    BYTE PTR [rax],al
   140030cc7:	add    bh,dl
   140030cc9:	add    BYTE PTR [rax],al
   140030ccb:	add    BYTE PTR [rax],al
   140030ccd:	add    BYTE PTR [rax],al
   140030ccf:	add    BYTE PTR [rax+0x1400326],dh
   140030cd5:	add    BYTE PTR [rax],al
   140030cd7:	add    dl,cl
   140030cd9:	add    BYTE PTR [rax],al
   140030cdb:	add    BYTE PTR [rax],al
   140030cdd:	add    BYTE PTR [rax],al
   140030cdf:	add    al,al
   140030ce1:	add    eax,DWORD PTR es:[rax+0x1]
   140030ce5:	add    BYTE PTR [rax],al
   140030ce7:	add    BYTE PTR [rbp+0x0],dh
   140030ced:	add    BYTE PTR [rax],al
   140030cef:	add    al,dl
   140030cf1:	add    eax,DWORD PTR es:[rax+0x1]
   140030cf5:	add    BYTE PTR [rax],al
   140030cf7:	add    cl,al
   140030cf9:	add    BYTE PTR [rax],al
   140030cfb:	add    BYTE PTR [rax],al
   140030cfd:	add    BYTE PTR [rax],al
   140030cff:	add    al,ah
   140030d01:	add    eax,DWORD PTR es:[rax+0x1]
   140030d05:	add    BYTE PTR [rax],al
   140030d07:	add    ah,dl
   140030d09:	add    BYTE PTR [rax],al
   140030d0b:	add    BYTE PTR [rax],al
   140030d0d:	add    BYTE PTR [rax],al
   140030d0f:	add    al,dh
   140030d11:	add    eax,DWORD PTR es:[rax+0x1]
   140030d15:	add    BYTE PTR [rax],al
   140030d17:	add    BYTE PTR [rax+rax*1+0x0],ah
   140030d1e:	add    BYTE PTR [rax],al
   140030d20:	add    BYTE PTR [rdi],ah
   140030d22:	add    eax,DWORD PTR [rax+0x1]
   140030d25:	add    BYTE PTR [rax],al
   140030d27:	add    BYTE PTR [rbp+0x0],ch
   140030d2d:	add    BYTE PTR [rax],al
   140030d2f:	add    BYTE PTR [rax],dl
   140030d31:	(bad)  
   140030d32:	add    eax,DWORD PTR [rax+0x1]
   140030d35:	add    BYTE PTR [rax],al
   140030d37:	add    bh,bl
   140030d39:	add    BYTE PTR [rax],al
   140030d3b:	add    BYTE PTR [rax],al
   140030d3d:	add    BYTE PTR [rax],al
   140030d3f:	add    BYTE PTR [rax],ah
   140030d41:	(bad)  
   140030d42:	add    eax,DWORD PTR [rax+0x1]
   140030d45:	add    BYTE PTR [rax],al
   140030d47:	add    BYTE PTR [rbx+0x0],dl
   140030d4d:	add    BYTE PTR [rax],al
   140030d4f:	add    BYTE PTR [rax],dh
   140030d51:	(bad)  
   140030d52:	add    eax,DWORD PTR [rax+0x1]
   140030d55:	add    BYTE PTR [rax],al
   140030d57:	add    al,ah
   140030d59:	add    BYTE PTR [rax],al
   140030d5b:	add    BYTE PTR [rax],al
   140030d5d:	add    BYTE PTR [rax],al
   140030d5f:	add    BYTE PTR [rax+0x27],al
   140030d62:	add    eax,DWORD PTR [rax+0x1]
   140030d65:	add    BYTE PTR [rax],al
   140030d67:	add    BYTE PTR [rbx+0x0],bh
   140030d6d:	add    BYTE PTR [rax],al
   140030d6f:	add    BYTE PTR [rax+0x27],dl
   140030d72:	add    eax,DWORD PTR [rax+0x1]
   140030d75:	add    BYTE PTR [rax],al
   140030d77:	add    dh,cl
   140030d79:	add    BYTE PTR [rax],al
   140030d7b:	add    BYTE PTR [rax],al
   140030d7d:	add    BYTE PTR [rax],al
   140030d7f:	add    BYTE PTR [rax+0x27],ah
   140030d82:	add    eax,DWORD PTR [rax+0x1]
   140030d85:	add    BYTE PTR [rax],al
   140030d87:	add    cl,ah
   140030d89:	add    BYTE PTR [rax],al
   140030d8b:	add    BYTE PTR [rax],al
   140030d8d:	add    BYTE PTR [rax],al
   140030d8f:	add    BYTE PTR [rax+0x27],dh
   140030d92:	add    eax,DWORD PTR [rax+0x1]
   140030d95:	add    BYTE PTR [rax],al
   140030d97:	add    bl,bl
   140030d99:	add    BYTE PTR [rax],al
   140030d9b:	add    BYTE PTR [rax],al
   140030d9d:	add    BYTE PTR [rax],al
   140030d9f:	add    BYTE PTR [rax+0x1400327],al
   140030da5:	add    BYTE PTR [rax],al
   140030da7:	add    dh,bl
   140030da9:	add    BYTE PTR [rax],al
   140030dab:	add    BYTE PTR [rax],al
   140030dad:	add    BYTE PTR [rax],al
   140030daf:	add    BYTE PTR [rax+0x1400327],dl
   140030db5:	add    BYTE PTR [rax],al
   140030db7:	add    cl,bl
   140030db9:	add    BYTE PTR [rax],al
   140030dbb:	add    BYTE PTR [rax],al
   140030dbd:	add    BYTE PTR [rax],al
   140030dbf:	add    BYTE PTR [rax+0x1400327],ah
   140030dc5:	add    BYTE PTR [rax],al
   140030dc7:	add    dh,al
   140030dc9:	add    BYTE PTR [rax],al
   140030dcb:	add    BYTE PTR [rax],al
   140030dcd:	add    BYTE PTR [rax],al
   140030dcf:	add    BYTE PTR [rax],dh
   140030dd1:	sbb    BYTE PTR [rbx],al
   140030dd3:	rex add DWORD PTR [rax],eax
   140030dd6:	add    BYTE PTR [rax],al
   140030dd8:	and    eax,DWORD PTR [rax]
   140030dda:	add    BYTE PTR [rax],al
   140030ddc:	add    BYTE PTR [rax],al
   140030dde:	add    BYTE PTR [rax],al
   140030de0:	mov    al,0x27
   140030de2:	add    eax,DWORD PTR [rax+0x1]
   140030de5:	add    BYTE PTR [rax],al
   140030de7:	add    BYTE PTR [rbp+0x0],ah
   140030dea:	add    BYTE PTR [rax],al
   140030dec:	add    BYTE PTR [rax],al
   140030dee:	add    BYTE PTR [rax],al
   140030df0:	push   0x1400318
   140030df5:	add    BYTE PTR [rax],al
   140030df7:	add    BYTE PTR [rdx],ch
   140030df9:	add    BYTE PTR [rax],al
   140030dfb:	add    BYTE PTR [rax],al
   140030dfd:	add    BYTE PTR [rax],al
   140030dff:	add    al,al
   140030e01:	(bad)  
   140030e02:	add    eax,DWORD PTR [rax+0x1]
   140030e05:	add    BYTE PTR [rax],al
   140030e07:	add    BYTE PTR [rax+rax*1+0x0],ch
   140030e0b:	add    BYTE PTR [rax],al
   140030e0d:	add    BYTE PTR [rax],al
   140030e0f:	add    BYTE PTR [rax+0x18],cl
   140030e12:	add    eax,DWORD PTR [rax+0x1]
   140030e15:	add    BYTE PTR [rax],al
   140030e17:	add    BYTE PTR [rsi],ah
   140030e19:	add    BYTE PTR [rax],al
   140030e1b:	add    BYTE PTR [rax],al
   140030e1d:	add    BYTE PTR [rax],al
   140030e1f:	add    al,dl
   140030e21:	(bad)  
   140030e22:	add    eax,DWORD PTR [rax+0x1]
   140030e25:	add    BYTE PTR [rax],al
   140030e27:	add    BYTE PTR [rax+0x0],ch
   140030e2a:	add    BYTE PTR [rax],al
   140030e2c:	add    BYTE PTR [rax],al
   140030e2e:	add    BYTE PTR [rax],al
   140030e30:	push   0x1400317
   140030e35:	add    BYTE PTR [rax],al
   140030e37:	add    BYTE PTR [rdx],cl
   140030e39:	add    BYTE PTR [rax],al
   140030e3b:	add    BYTE PTR [rax],al
   140030e3d:	add    BYTE PTR [rax],al
   140030e3f:	add    al,ah
   140030e41:	(bad)  
   140030e42:	add    eax,DWORD PTR [rax+0x1]
   140030e45:	add    BYTE PTR [rax],al
   140030e47:	add    BYTE PTR [rax+rax*1+0x0],cl
   140030e4b:	add    BYTE PTR [rax],al
   140030e4d:	add    BYTE PTR [rax],al
   140030e4f:	add    BYTE PTR [rax+0x1400318],cl
   140030e55:	add    BYTE PTR [rax],al
   140030e57:	add    BYTE PTR [rsi],ch
   140030e59:	add    BYTE PTR [rax],al
   140030e5b:	add    BYTE PTR [rax],al
   140030e5d:	add    BYTE PTR [rax],al
   140030e5f:	add    al,dh
   140030e61:	(bad)  
   140030e62:	add    eax,DWORD PTR [rax+0x1]
   140030e65:	add    BYTE PTR [rax],al
   140030e67:	add    BYTE PTR [rbx+0x0],dh
   140030e6a:	add    BYTE PTR [rax],al
   140030e6c:	add    BYTE PTR [rax],al
   140030e6e:	add    BYTE PTR [rax],al
   140030e70:	jo     0x140030e89
   140030e72:	add    eax,DWORD PTR [rax+0x1]
   140030e75:	add    BYTE PTR [rax],al
   140030e77:	add    BYTE PTR [rbx],cl
	...
   140030e81:	sub    BYTE PTR [rbx],al
   140030e83:	rex add DWORD PTR [rax],eax
   140030e86:	add    BYTE PTR [rax],al
   140030e88:	xchg   esp,eax
   140030e89:	add    BYTE PTR [rax],al
   140030e8b:	add    BYTE PTR [rax],al
   140030e8d:	add    BYTE PTR [rax],al
   140030e8f:	add    BYTE PTR [rax],dl
   140030e91:	sub    BYTE PTR [rbx],al
   140030e93:	rex add DWORD PTR [rax],eax
   140030e96:	add    BYTE PTR [rax],al
   140030e98:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140030e99:	add    BYTE PTR [rax],al
   140030e9b:	add    BYTE PTR [rax],al
   140030e9d:	add    BYTE PTR [rax],al
   140030e9f:	add    BYTE PTR [rax],ah
   140030ea1:	sub    BYTE PTR [rbx],al
   140030ea3:	rex add DWORD PTR [rax],eax
   140030ea6:	add    BYTE PTR [rax],al
   140030ea8:	scas   al,BYTE PTR es:[rdi]
   140030ea9:	add    BYTE PTR [rax],al
   140030eab:	add    BYTE PTR [rax],al
   140030ead:	add    BYTE PTR [rax],al
   140030eaf:	add    BYTE PTR [rax],dh
   140030eb1:	sub    BYTE PTR [rbx],al
   140030eb3:	rex add DWORD PTR [rax],eax
   140030eb6:	add    BYTE PTR [rax],al
   140030eb8:	rex.WRB add BYTE PTR [r8],r8b
   140030ebb:	add    BYTE PTR [rax],al
   140030ebd:	add    BYTE PTR [rax],al
   140030ebf:	add    BYTE PTR [rax+0x28],al
   140030ec2:	add    eax,DWORD PTR [rax+0x1]
   140030ec5:	add    BYTE PTR [rax],al
   140030ec7:	add    BYTE PTR [rsi+0x0],dh
   140030ecd:	add    BYTE PTR [rax],al
   140030ecf:	add    BYTE PTR [rax+0x28],dl
   140030ed2:	add    eax,DWORD PTR [rax+0x1]
   140030ed5:	add    BYTE PTR [rax],al
   140030ed7:	add    BYTE PTR [rax+rax*1+0x0],bh
   140030ede:	add    BYTE PTR [rax],al
   140030ee0:	or     BYTE PTR [rcx],bl
   140030ee2:	add    eax,DWORD PTR [rax+0x1]
   140030ee5:	add    BYTE PTR [rax],al
   140030ee7:	add    BYTE PTR [rsi],bh
   140030ee9:	add    BYTE PTR [rax],al
   140030eeb:	add    BYTE PTR [rax],al
   140030eed:	add    BYTE PTR [rax],al
   140030eef:	add    BYTE PTR [rax+0x28],ah
   140030ef2:	add    eax,DWORD PTR [rax+0x1]
   140030ef5:	add    BYTE PTR [rax],al
   140030ef7:	add    BYTE PTR [rax+0x0],cl
   140030efd:	add    BYTE PTR [rax],al
   140030eff:	add    al,dl
   140030f01:	sbb    BYTE PTR [rbx],al
   140030f03:	rex add DWORD PTR [rax],eax
   140030f06:	add    BYTE PTR [rax],al
   140030f08:	(bad)  
   140030f09:	add    BYTE PTR [rax],al
   140030f0b:	add    BYTE PTR [rax],al
   140030f0d:	add    BYTE PTR [rax],al
   140030f0f:	add    BYTE PTR [rax+0x28],dh
   140030f12:	add    eax,DWORD PTR [rax+0x1]
   140030f15:	add    BYTE PTR [rax],al
   140030f17:	add    BYTE PTR [rdi+0x0],bh
   140030f1a:	add    BYTE PTR [rax],al
   140030f1c:	add    BYTE PTR [rax],al
   140030f1e:	add    BYTE PTR [rax],al
   140030f20:	js     0x140030f39
   140030f22:	add    eax,DWORD PTR [rax+0x1]
   140030f25:	add    BYTE PTR [rax],al
   140030f27:	add    BYTE PTR [rax+rax*1],cl
   140030f2a:	add    BYTE PTR [rax],al
   140030f2c:	add    BYTE PTR [rax],al
   140030f2e:	add    BYTE PTR [rax],al
   140030f30:	sub    BYTE PTR [rax],0x3
   140030f33:	rex add DWORD PTR [rax],eax
   140030f36:	add    BYTE PTR [rax],al
   140030f38:	rex.WRX add BYTE PTR [rax],r8b
   140030f3b:	add    BYTE PTR [rax],al
   140030f3d:	add    BYTE PTR [rax],al
   140030f3f:	add    BYTE PTR [rax+0x1400318],dl
   140030f45:	add    BYTE PTR [rax],al
   140030f47:	add    BYTE PTR [rdi],ch
   140030f49:	add    BYTE PTR [rax],al
   140030f4b:	add    BYTE PTR [rax],al
   140030f4d:	add    BYTE PTR [rax],al
   140030f4f:	add    BYTE PTR [rax+0x1400328],dl
   140030f55:	add    BYTE PTR [rax],al
   140030f57:	add    BYTE PTR [rax+rax*1+0x0],dh
   140030f5b:	add    BYTE PTR [rax],al
   140030f5d:	add    BYTE PTR [rax],al
   140030f5f:	add    al,bl
   140030f61:	(bad)  
   140030f62:	add    eax,DWORD PTR [rax+0x1]
   140030f65:	add    BYTE PTR [rax],al
   140030f67:	add    BYTE PTR [rax],bl
   140030f69:	add    BYTE PTR [rax],al
   140030f6b:	add    BYTE PTR [rax],al
   140030f6d:	add    BYTE PTR [rax],al
   140030f6f:	add    BYTE PTR [rax+0x1400328],ah
   140030f75:	add    BYTE PTR [rax],al
   140030f77:	add    BYTE PTR [rdi+0x0],ch
   140030f7d:	add    BYTE PTR [rax],al
   140030f7f:	add    BYTE PTR [rax+0x1400328],dh
   140030f85:	add    BYTE PTR [rax],al
   140030f87:	add    BYTE PTR [rdx+0x0],bl
   140030f8a:	add    BYTE PTR [rax],al
   140030f8c:	add    BYTE PTR [rax],al
   140030f8e:	add    BYTE PTR [rax],al
   140030f90:	adc    BYTE PTR [rdi],0x3
   140030f93:	rex add DWORD PTR [rax],eax
   140030f96:	add    BYTE PTR [rax],al
   140030f98:	or     eax,0x0
   140030f9d:	add    BYTE PTR [rax],al
   140030f9f:	add    al,al
   140030fa1:	sub    BYTE PTR [rbx],al
   140030fa3:	rex add DWORD PTR [rax],eax
   140030fa6:	add    BYTE PTR [rax],al
   140030fa8:	rex.WRXB add BYTE PTR [r8],r8b
   140030fab:	add    BYTE PTR [rax],al
   140030fad:	add    BYTE PTR [rax],al
   140030faf:	add    BYTE PTR [rax+0x18],bl
   140030fb2:	add    eax,DWORD PTR [rax+0x1]
   140030fb5:	add    BYTE PTR [rax],al
   140030fb7:	add    BYTE PTR [rax],ch
   140030fb9:	add    BYTE PTR [rax],al
   140030fbb:	add    BYTE PTR [rax],al
   140030fbd:	add    BYTE PTR [rax],al
   140030fbf:	add    al,dl
   140030fc1:	sub    BYTE PTR [rbx],al
   140030fc3:	rex add DWORD PTR [rax],eax
   140030fc6:	add    BYTE PTR [rax],al
   140030fc8:	push   0x0
   140030fca:	add    BYTE PTR [rax],al
   140030fcc:	add    BYTE PTR [rax],al
   140030fce:	add    BYTE PTR [rax],al
   140030fd0:	adc    BYTE PTR [rax],bl
   140030fd2:	add    eax,DWORD PTR [rax+0x1]
   140030fd5:	add    BYTE PTR [rax],al
   140030fd7:	add    BYTE PTR [rdi],bl
   140030fd9:	add    BYTE PTR [rax],al
   140030fdb:	add    BYTE PTR [rax],al
   140030fdd:	add    BYTE PTR [rax],al
   140030fdf:	add    al,ah
   140030fe1:	sub    BYTE PTR [rbx],al
   140030fe3:	rex add DWORD PTR [rax],eax
   140030fe6:	add    BYTE PTR [rax],al
   140030fe8:	(bad)  
   140030fe9:	add    BYTE PTR [rax],al
   140030feb:	add    BYTE PTR [rax],al
   140030fed:	add    BYTE PTR [rax],al
   140030fef:	add    BYTE PTR [rax+0x1400317],cl
   140030ff5:	add    BYTE PTR [rax],al
   140030ff7:	add    BYTE PTR [rsi],cl
   140030ff9:	add    BYTE PTR [rax],al
   140030ffb:	add    BYTE PTR [rax],al
   140030ffd:	add    BYTE PTR [rax],al
   140030fff:	add    al,dh
   140031001:	sub    BYTE PTR [rbx],al
   140031003:	rex add DWORD PTR [rax],eax
   140031006:	add    BYTE PTR [rax],al
   140031008:	push   rax
   140031009:	add    BYTE PTR [rax],al
   14003100b:	add    BYTE PTR [rax],al
   14003100d:	add    BYTE PTR [rax],al
   14003100f:	add    BYTE PTR [rax+0x1400317],dl
   140031015:	add    BYTE PTR [rax],al
   140031017:	add    BYTE PTR [rdi],cl
	...
   140031021:	sub    DWORD PTR [rbx],eax
   140031023:	rex add DWORD PTR [rax],eax
   140031026:	add    BYTE PTR [rax],al
   140031028:	xchg   ebp,eax
   140031029:	add    BYTE PTR [rax],al
   14003102b:	add    BYTE PTR [rax],al
   14003102d:	add    BYTE PTR [rax],al
   14003102f:	add    BYTE PTR [rax],dl
   140031031:	sub    DWORD PTR [rbx],eax
   140031033:	rex add DWORD PTR [rax],eax
   140031036:	add    BYTE PTR [rax],al
   140031038:	push   rcx
   140031039:	add    BYTE PTR [rax],al
   14003103b:	add    BYTE PTR [rax],al
   14003103d:	add    BYTE PTR [rax],al
   14003103f:	add    BYTE PTR [rax+0x1400317],bl
   140031045:	add    BYTE PTR [rax],al
   140031047:	add    BYTE PTR [rax],dl
   140031049:	add    BYTE PTR [rax],al
   14003104b:	add    BYTE PTR [rax],al
   14003104d:	add    BYTE PTR [rax],al
   14003104f:	add    BYTE PTR [rax],ah
   140031051:	sub    DWORD PTR [rbx],eax
   140031053:	rex add DWORD PTR [rax],eax
   140031056:	add    BYTE PTR [rax],al
   140031058:	push   rdx
   140031059:	add    BYTE PTR [rax],al
   14003105b:	add    BYTE PTR [rax],al
   14003105d:	add    BYTE PTR [rax],al
   14003105f:	add    BYTE PTR [rax+0x1400318],al
   140031065:	add    BYTE PTR [rax],al
   140031067:	add    BYTE PTR [rip+0x0],ch        # 0x14003106d
   14003106d:	add    BYTE PTR [rax],al
   14003106f:	add    BYTE PTR [rax],dh
   140031071:	sub    DWORD PTR [rbx],eax
   140031073:	rex add DWORD PTR [rax],eax
   140031076:	add    BYTE PTR [rax],al
   140031078:	jb     0x14003107a
   14003107a:	add    BYTE PTR [rax],al
   14003107c:	add    BYTE PTR [rax],al
   14003107e:	add    BYTE PTR [rax],al
   140031080:	movabs al,ds:0x3100000001400318
   140031089:	add    BYTE PTR [rax],al
   14003108b:	add    BYTE PTR [rax],al
   14003108d:	add    BYTE PTR [rax],al
   14003108f:	add    BYTE PTR [rax+0x29],al
   140031092:	add    eax,DWORD PTR [rax+0x1]
   140031095:	add    BYTE PTR [rax],al
   140031097:	add    BYTE PTR [rax+0x0],bh
   14003109a:	add    BYTE PTR [rax],al
   14003109c:	add    BYTE PTR [rax],al
   14003109e:	add    BYTE PTR [rax],al
   1400310a0:	call   0x1414313bd
   1400310a5:	add    BYTE PTR [rax],al
   1400310a7:	add    BYTE PTR [rdx],bh
   1400310a9:	add    BYTE PTR [rax],al
   1400310ab:	add    BYTE PTR [rax],al
   1400310ad:	add    BYTE PTR [rax],al
   1400310af:	add    BYTE PTR [rax+0x29],dl
   1400310b2:	add    eax,DWORD PTR [rax+0x1]
   1400310b5:	add    BYTE PTR [rax],al
   1400310b7:	add    BYTE PTR [rdx+0x0],al
   1400310bd:	add    BYTE PTR [rax],al
   1400310bf:	add    BYTE PTR [rax+0x1400317],ah
   1400310c5:	add    BYTE PTR [rax],al
   1400310c7:	add    BYTE PTR [rcx],dl
   1400310c9:	add    BYTE PTR [rax],al
   1400310cb:	add    BYTE PTR [rax],al
   1400310cd:	add    BYTE PTR [rax],al
   1400310cf:	add    BYTE PTR [rax],dl
   1400310d1:	sbb    DWORD PTR [rbx],eax
   1400310d3:	rex add DWORD PTR [rax],eax
   1400310d6:	add    BYTE PTR [rax],al
   1400310d8:	(bad)  
   1400310d9:	add    BYTE PTR [rax],al
   1400310db:	add    BYTE PTR [rax],al
   1400310dd:	add    BYTE PTR [rax],al
   1400310df:	add    BYTE PTR [rax+0x29],ah
   1400310e2:	add    eax,DWORD PTR [rax+0x1]
   1400310e5:	add    BYTE PTR [rax],al
   1400310e7:	add    BYTE PTR [rcx+0x0],cl
   1400310ed:	add    BYTE PTR [rax],al
   1400310ef:	add    BYTE PTR [rax+0x29],dh
   1400310f2:	add    eax,DWORD PTR [rax+0x1]
   1400310f5:	add    BYTE PTR [rax],al
   1400310f7:	add    BYTE PTR [rbx+0x0],dl
   1400310fa:	add    BYTE PTR [rax],al
   1400310fc:	add    BYTE PTR [rax],al
   1400310fe:	add    BYTE PTR [rax],al
   140031100:	test   al,0x18
   140031102:	add    eax,DWORD PTR [rax+0x1]
   140031105:	add    BYTE PTR [rax],al
   140031107:	add    BYTE PTR [rdx],dh
   140031109:	add    BYTE PTR [rax],al
   14003110b:	add    BYTE PTR [rax],al
   14003110d:	add    BYTE PTR [rax],al
   14003110f:	add    BYTE PTR [rax+0x1400329],al
   140031115:	add    BYTE PTR [rax],al
   140031117:	add    BYTE PTR [rcx+0x0],bh
   14003111a:	add    BYTE PTR [rax],al
   14003111c:	add    BYTE PTR [rax],al
   14003111e:	add    BYTE PTR [rax],al
   140031120:	sbb    BYTE PTR [rbx],al
   140031123:	rex add DWORD PTR [rax],eax
   140031126:	add    BYTE PTR [rax],al
   140031128:	and    eax,0x0
   14003112d:	add    BYTE PTR [rax],al
   14003112f:	add    BYTE PTR [rax+0x1400329],dl
   140031135:	add    BYTE PTR [rax],al
   140031137:	add    BYTE PTR [rdi+0x0],ah
   14003113a:	add    BYTE PTR [rax],al
   14003113c:	add    BYTE PTR [rax],al
   14003113e:	add    BYTE PTR [rax],al
   140031140:	cmp    BYTE PTR [rax],bl
   140031142:	add    eax,DWORD PTR [rax+0x1]
   140031145:	add    BYTE PTR [rax],al
   140031147:	add    BYTE PTR [rax+rax*1],ah
   14003114a:	add    BYTE PTR [rax],al
   14003114c:	add    BYTE PTR [rax],al
   14003114e:	add    BYTE PTR [rax],al
   140031150:	movabs al,ds:0x6600000001400329
   140031159:	add    BYTE PTR [rax],al
   14003115b:	add    BYTE PTR [rax],al
   14003115d:	add    BYTE PTR [rax],al
   14003115f:	add    BYTE PTR [rax+0x1400329],dh
   140031165:	add    BYTE PTR [rax],al
   140031167:	add    BYTE PTR [rsi+0x0],cl
   14003116d:	add    BYTE PTR [rax],al
   14003116f:	add    BYTE PTR [rax+0x18],dh
   140031172:	add    eax,DWORD PTR [rax+0x1]
   140031175:	add    BYTE PTR [rax],al
   140031177:	add    BYTE PTR [rbx],ch
   140031179:	add    BYTE PTR [rax],al
   14003117b:	add    BYTE PTR [rax],al
   14003117d:	add    BYTE PTR [rax],al
   14003117f:	add    al,al
   140031181:	sub    DWORD PTR [rbx],eax
   140031183:	rex add DWORD PTR [rax],eax
   140031186:	add    BYTE PTR [rax],al
   140031188:	ins    DWORD PTR es:[rdi],dx
   140031189:	add    BYTE PTR [rax],al
   14003118b:	add    BYTE PTR [rax],al
   14003118d:	add    BYTE PTR [rax],al
   14003118f:	add    al,dl
   140031191:	sub    DWORD PTR [rbx],eax
   140031193:	rex add DWORD PTR [rax],eax
   140031196:	add    BYTE PTR [rax],al
   140031198:	add    DWORD PTR [rax],0x0
   14003119b:	add    BYTE PTR [rax],al
   14003119d:	add    BYTE PTR [rax],al
   14003119f:	add    BYTE PTR [rax],al
   1400311a1:	sbb    DWORD PTR [rbx],eax
   1400311a3:	rex add DWORD PTR [rax],eax
   1400311a6:	add    BYTE PTR [rax],al
   1400311a8:	cmp    eax,0x0
   1400311ad:	add    BYTE PTR [rax],al
   1400311af:	add    al,ah
   1400311b1:	sub    DWORD PTR [rbx],eax
   1400311b3:	rex add DWORD PTR [rax],eax
   1400311b6:	add    BYTE PTR [rax],al
   1400311b8:	xchg   BYTE PTR [rax],al
   1400311ba:	add    BYTE PTR [rax],al
   1400311bc:	add    BYTE PTR [rax],al
   1400311be:	add    BYTE PTR [rax],al
   1400311c0:	lock sbb BYTE PTR [rbx],al
   1400311c3:	rex add DWORD PTR [rax],eax
   1400311c6:	add    BYTE PTR [rax],al
   1400311c8:	cmp    eax,DWORD PTR [rax]
   1400311ca:	add    BYTE PTR [rax],al
   1400311cc:	add    BYTE PTR [rax],al
   1400311ce:	add    BYTE PTR [rax],al
   1400311d0:	lock sub DWORD PTR [rbx],eax
   1400311d3:	rex add DWORD PTR [rax],eax
   1400311d6:	add    BYTE PTR [rax],al
   1400311d8:	test   BYTE PTR [rax],al
   1400311da:	add    BYTE PTR [rax],al
   1400311dc:	add    BYTE PTR [rax],al
   1400311de:	add    BYTE PTR [rax],al
   1400311e0:	cwde   
   1400311e1:	sbb    BYTE PTR [rbx],al
   1400311e3:	rex add DWORD PTR [rax],eax
   1400311e6:	add    BYTE PTR [rax],al
   1400311e8:	xor    BYTE PTR [rax],al
   1400311ea:	add    BYTE PTR [rax],al
   1400311ec:	add    BYTE PTR [rax],al
   1400311ee:	add    BYTE PTR [rax],al
   1400311f0:	add    BYTE PTR [rdx],ch
   1400311f2:	add    eax,DWORD PTR [rax+0x1]
   1400311f5:	add    BYTE PTR [rax],al
   1400311f7:	add    BYTE PTR [rbp+0x0],bl
   1400311fd:	add    BYTE PTR [rax],al
   1400311ff:	add    BYTE PTR [rax],dl
   140031201:	sub    al,BYTE PTR [rbx]
   140031203:	rex add DWORD PTR [rax],eax
   140031206:	add    BYTE PTR [rax],al
   140031208:	ja     0x14003120a
   14003120a:	add    BYTE PTR [rax],al
   14003120c:	add    BYTE PTR [rax],al
   14003120e:	add    BYTE PTR [rax],al
   140031210:	and    BYTE PTR [rdx],ch
   140031212:	add    eax,DWORD PTR [rax+0x1]
   140031215:	add    BYTE PTR [rax],al
   140031217:	add    BYTE PTR [rbp+0x0],dh
   14003121a:	add    BYTE PTR [rax],al
   14003121c:	add    BYTE PTR [rax],al
   14003121e:	add    BYTE PTR [rax],al
   140031220:	xor    BYTE PTR [rdx],ch
   140031222:	add    eax,DWORD PTR [rax+0x1]
   140031225:	add    BYTE PTR [rax],al
   140031227:	add    BYTE PTR [rbp+0x0],dl
   14003122a:	add    BYTE PTR [rax],al
   14003122c:	add    BYTE PTR [rax],al
   14003122e:	add    BYTE PTR [rax],al
   140031230:	test   al,0x17
   140031232:	add    eax,DWORD PTR [rax+0x1]
   140031235:	add    BYTE PTR [rax],al
   140031237:	add    BYTE PTR [rdx],dl
   140031239:	add    BYTE PTR [rax],al
   14003123b:	add    BYTE PTR [rax],al
   14003123d:	add    BYTE PTR [rax],al
   14003123f:	add    BYTE PTR [rax+0x2a],al
   140031242:	add    eax,DWORD PTR [rax+0x1]
   140031245:	add    BYTE PTR [rax],al
   140031247:	add    BYTE PTR [rsi+0x0],dl
   14003124d:	add    BYTE PTR [rax],al
   14003124f:	add    BYTE PTR [rax+0x2a],dl
   140031252:	add    eax,DWORD PTR [rax+0x1]
   140031255:	add    BYTE PTR [rax],al
   140031257:	add    BYTE PTR [rax+rax*1+0x0],dl
   14003125b:	add    BYTE PTR [rax],al
   14003125d:	add    BYTE PTR [rax],al
   14003125f:	add    BYTE PTR [rax+0x2a],ah
   140031262:	add    eax,DWORD PTR [rax+0x1]
   140031265:	add    BYTE PTR [rax],al
   140031267:	add    BYTE PTR [rdi+0x0],dl
   14003126d:	add    BYTE PTR [rax],al
   14003126f:	add    BYTE PTR [rax+0x1400317],dh
   140031275:	add    BYTE PTR [rax],al
   140031277:	add    BYTE PTR [rbx],dl
   140031279:	add    BYTE PTR [rax],al
   14003127b:	add    BYTE PTR [rax],al
   14003127d:	add    BYTE PTR [rax],al
   14003127f:	add    BYTE PTR [rax+0x2a],dh
   140031282:	add    eax,DWORD PTR [rax+0x1]
   140031285:	add    BYTE PTR [rax],al
   140031287:	add    BYTE PTR [rbp+0x0],cl
   14003128d:	add    BYTE PTR [rax],al
   14003128f:	add    al,cl
   140031291:	sbb    BYTE PTR [rbx],al
   140031293:	rex add DWORD PTR [rax],eax
   140031296:	add    BYTE PTR [rax],al
   140031298:	add    BYTE PTR ss:[rax],al
   14003129b:	add    BYTE PTR [rax],al
   14003129d:	add    BYTE PTR [rax],al
   14003129f:	add    BYTE PTR [rax+0x140032a],al
   1400312a5:	add    BYTE PTR [rax],al
   1400312a7:	add    BYTE PTR [rsi+0x0],bh
   1400312aa:	add    BYTE PTR [rax],al
   1400312ac:	add    BYTE PTR [rax],al
   1400312ae:	add    BYTE PTR [rax],al
   1400312b0:	mov    eax,0x1400317
   1400312b5:	add    BYTE PTR [rax],al
   1400312b7:	add    BYTE PTR [rax+rax*1],dl
   1400312ba:	add    BYTE PTR [rax],al
   1400312bc:	add    BYTE PTR [rax],al
   1400312be:	add    BYTE PTR [rax],al
   1400312c0:	nop
   1400312c1:	sub    al,BYTE PTR [rbx]
   1400312c3:	rex add DWORD PTR [rax],eax
   1400312c6:	add    BYTE PTR [rax],al
   1400312c8:	push   rsi
   1400312c9:	add    BYTE PTR [rax],al
   1400312cb:	add    BYTE PTR [rax],al
   1400312cd:	add    BYTE PTR [rax],al
   1400312cf:	add    al,al
   1400312d1:	(bad)  
   1400312d2:	add    eax,DWORD PTR [rax+0x1]
   1400312d5:	add    BYTE PTR [rax],al
   1400312d7:	add    BYTE PTR [rip+0x0],dl        # 0x1400312dd
   1400312dd:	add    BYTE PTR [rax],al
   1400312df:	add    BYTE PTR [rax+0x140032a],ah
   1400312e5:	add    BYTE PTR [rax],al
   1400312e7:	add    BYTE PTR [rdi+0x0],dl
   1400312ea:	add    BYTE PTR [rax],al
   1400312ec:	add    BYTE PTR [rax],al
   1400312ee:	add    BYTE PTR [rax],al
   1400312f0:	mov    al,0x2a
   1400312f2:	add    eax,DWORD PTR [rax+0x1]
   1400312f5:	add    BYTE PTR [rax],al
   1400312f7:	add    BYTE PTR [rax+0x0],bl
   1400312fd:	add    BYTE PTR [rax],al
   1400312ff:	add    al,al
   140031301:	sub    al,BYTE PTR [rbx]
   140031303:	rex add DWORD PTR [rax],eax
   140031306:	add    BYTE PTR [rax],al
   140031308:	mov    WORD PTR [rax],es
   14003130a:	add    BYTE PTR [rax],al
   14003130c:	add    BYTE PTR [rax],al
   14003130e:	add    BYTE PTR [rax],al
   140031310:	shr    BYTE PTR [rdx],1
   140031312:	add    eax,DWORD PTR [rax+0x1]
   140031315:	add    BYTE PTR [rax],al
   140031317:	add    BYTE PTR [rdi+0x0],bl
   14003131d:	add    BYTE PTR [rax],al
   14003131f:	add    al,ah
   140031321:	sub    al,BYTE PTR [rbx]
   140031323:	rex add DWORD PTR [rax],eax
   140031326:	add    BYTE PTR [rax],al
   140031328:	test   al,0x0
   14003132a:	add    BYTE PTR [rax],al
   14003132c:	add    BYTE PTR [rax],al
   14003132e:	add    BYTE PTR [rax],al
   140031330:	enter  0x317,0x40
   140031334:	add    DWORD PTR [rax],eax
   140031336:	add    BYTE PTR [rax],al
   140031338:	(bad)  
   140031339:	add    BYTE PTR [rax],al
   14003133b:	add    BYTE PTR [rax],al
   14003133d:	add    BYTE PTR [rax],al
   14003133f:	add    al,dh
   140031341:	sub    al,BYTE PTR [rbx]
   140031343:	rex add DWORD PTR [rax],eax
   140031346:	add    BYTE PTR [rax],al
   140031348:	pop    rax
   140031349:	add    BYTE PTR [rax],al
   14003134b:	add    BYTE PTR [rax],al
   14003134d:	add    BYTE PTR [rax],al
   14003134f:	add    al,dl
   140031351:	(bad)  
   140031352:	add    eax,DWORD PTR [rax+0x1]
   140031355:	add    BYTE PTR [rax],al
   140031357:	add    BYTE PTR [rdi],dl
	...
   140031361:	sub    eax,DWORD PTR [rbx]
   140031363:	rex add DWORD PTR [rax],eax
   140031366:	add    BYTE PTR [rax],al
   140031368:	pop    rcx
   140031369:	add    BYTE PTR [rax],al
   14003136b:	add    BYTE PTR [rax],al
   14003136d:	add    BYTE PTR [rax],al
   14003136f:	add    al,bh
   140031371:	sbb    BYTE PTR [rbx],al
   140031373:	rex add DWORD PTR [rax],eax
   140031376:	add    BYTE PTR [rax],al
   140031378:	cmp    al,0x0
   14003137a:	add    BYTE PTR [rax],al
   14003137c:	add    BYTE PTR [rax],al
   14003137e:	add    BYTE PTR [rax],al
   140031380:	adc    BYTE PTR [rbx],ch
   140031382:	add    eax,DWORD PTR [rax+0x1]
   140031385:	add    BYTE PTR [rax],al
   140031387:	add    BYTE PTR [rbp+0x0],al
   14003138d:	add    BYTE PTR [rax],al
   14003138f:	add    BYTE PTR [rax],ah
   140031391:	sub    eax,DWORD PTR [rbx]
   140031393:	rex add DWORD PTR [rax],eax
   140031396:	add    BYTE PTR [rax],al
   140031398:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140031399:	add    BYTE PTR [rax],al
   14003139b:	add    BYTE PTR [rax],al
   14003139d:	add    BYTE PTR [rax],al
   14003139f:	add    BYTE PTR [rax],dh
   1400313a1:	sub    eax,DWORD PTR [rbx]
   1400313a3:	rex add DWORD PTR [rax],eax
   1400313a6:	add    BYTE PTR [rax],al
   1400313a8:	jbe    0x1400313aa
   1400313aa:	add    BYTE PTR [rax],al
   1400313ac:	add    BYTE PTR [rax],al
   1400313ae:	add    BYTE PTR [rax],al
   1400313b0:	rex sub eax,DWORD PTR [rbx]
   1400313b3:	rex add DWORD PTR [rax],eax
   1400313b6:	add    BYTE PTR [rax],al
   1400313b8:	pushf  
   1400313b9:	add    BYTE PTR [rax],al
   1400313bb:	add    BYTE PTR [rax],al
   1400313bd:	add    BYTE PTR [rax],al
   1400313bf:	add    al,ah
   1400313c1:	(bad)  
   1400313c2:	add    eax,DWORD PTR [rax+0x1]
   1400313c5:	add    BYTE PTR [rax],al
   1400313c7:	add    BYTE PTR [rcx],bl
   1400313c9:	add    BYTE PTR [rax],al
   1400313cb:	add    BYTE PTR [rax],al
   1400313cd:	add    BYTE PTR [rax],al
   1400313cf:	add    BYTE PTR [rax+0x2b],dl
   1400313d2:	add    eax,DWORD PTR [rax+0x1]
   1400313d5:	add    BYTE PTR [rax],al
   1400313d7:	add    BYTE PTR [rbx+0x0],bl
   1400313da:	add    BYTE PTR [rax],al
   1400313dc:	add    BYTE PTR [rax],al
   1400313de:	add    BYTE PTR [rax],al
   1400313e0:	sub    BYTE PTR [rax],bl
   1400313e2:	add    eax,DWORD PTR [rax+0x1]
   1400313e5:	add    BYTE PTR [rax],al
   1400313e7:	add    BYTE PTR [rdx],ah
   1400313e9:	add    BYTE PTR [rax],al
   1400313eb:	add    BYTE PTR [rax],al
   1400313ed:	add    BYTE PTR [rax],al
   1400313ef:	add    BYTE PTR [rax+0x2b],ah
   1400313f2:	add    eax,DWORD PTR [rax+0x1]
   1400313f5:	add    BYTE PTR [rax],al
   1400313f7:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400313fb:	add    BYTE PTR [rax],al
   1400313fd:	add    BYTE PTR [rax],al
   1400313ff:	add    BYTE PTR [rax+0x2b],dh
   140031402:	add    eax,DWORD PTR [rax+0x1]
   140031405:	add    BYTE PTR [rax],al
   140031407:	add    BYTE PTR [rsi+0x0],bh
   14003140d:	add    BYTE PTR [rax],al
   14003140f:	add    BYTE PTR [rax+0x140032b],al
   140031415:	add    BYTE PTR [rax],al
   140031417:	add    bl,al
   140031419:	add    BYTE PTR [rax],al
   14003141b:	add    BYTE PTR [rax],al
   14003141d:	add    BYTE PTR [rax],al
   14003141f:	add    BYTE PTR [rax+0x140032b],dl
   140031425:	add    BYTE PTR [rax],al
   140031427:	add    BYTE PTR [rax+0x0],dh
   14003142d:	add    BYTE PTR [rax],al
   14003142f:	add    BYTE PTR [rax+0x140032b],ah
   140031435:	add    BYTE PTR [rax],al
   140031437:	add    BYTE PTR [rax+0x0],bh
   14003143d:	add    BYTE PTR [rax],al
   14003143f:	add    BYTE PTR [rax+0x140032b],dh
   140031445:	add    BYTE PTR [rax],al
   140031447:	add    bl,cl
   140031449:	add    BYTE PTR [rax],al
   14003144b:	add    BYTE PTR [rax],al
   14003144d:	add    BYTE PTR [rax],al
   14003144f:	add    al,al
   140031451:	sub    eax,DWORD PTR [rbx]
   140031453:	rex add DWORD PTR [rax],eax
   140031456:	add    BYTE PTR [rax],al
   140031458:	mov    DWORD PTR [rax],0x0
   14003145e:	add    BYTE PTR [rax],al
   140031460:	call   0x14143177c
   140031465:	add    BYTE PTR [rax],al
   140031467:	add    BYTE PTR [rdx],bl
   140031469:	add    BYTE PTR [rax],al
   14003146b:	add    BYTE PTR [rax],al
   14003146d:	add    BYTE PTR [rax],al
   14003146f:	add    al,dl
   140031471:	sub    eax,DWORD PTR [rbx]
   140031473:	rex add DWORD PTR [rax],eax
   140031476:	add    BYTE PTR [rax],al
   140031478:	pop    rsp
   140031479:	add    BYTE PTR [rax],al
   14003147b:	add    BYTE PTR [rax],al
   14003147d:	add    BYTE PTR [rax],al
   14003147f:	add    BYTE PTR [rax+0x23],dh
   140031482:	add    eax,DWORD PTR [rax+0x1]
   140031485:	add    BYTE PTR [rax],al
   140031487:	add    bl,ah
   140031489:	add    BYTE PTR [rax],al
   14003148b:	add    BYTE PTR [rax],al
   14003148d:	add    BYTE PTR [rax],al
   14003148f:	add    al,ah
   140031491:	sub    eax,DWORD PTR [rbx]
   140031493:	rex add DWORD PTR [rax],eax
   140031496:	add    BYTE PTR [rax],al
   140031498:	ret    0x0
   14003149b:	add    BYTE PTR [rax],al
   14003149d:	add    BYTE PTR [rax],al
   14003149f:	add    al,bh
   1400314a1:	sub    eax,DWORD PTR [rbx]
   1400314a3:	rex add DWORD PTR [rax],eax
   1400314a6:	add    BYTE PTR [rax],al
   1400314a8:	mov    ebp,0x0
   1400314ad:	add    BYTE PTR [rax],al
   1400314af:	add    BYTE PTR [rax],dl
   1400314b1:	sub    al,0x3
   1400314b3:	rex add DWORD PTR [rax],eax
   1400314b6:	add    BYTE PTR [rax],al
   1400314b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400314b9:	add    BYTE PTR [rax],al
   1400314bb:	add    BYTE PTR [rax],al
   1400314bd:	add    BYTE PTR [rax],al
   1400314bf:	add    BYTE PTR [rax],ch
   1400314c1:	sub    al,0x3
   1400314c3:	rex add DWORD PTR [rax],eax
   1400314c6:	add    BYTE PTR [rax],al
   1400314c8:	cdq    
   1400314c9:	add    BYTE PTR [rax],al
   1400314cb:	add    BYTE PTR [rax],al
   1400314cd:	add    BYTE PTR [rax],al
   1400314cf:	add    al,dh
   1400314d1:	(bad)  
   1400314d2:	add    eax,DWORD PTR [rax+0x1]
   1400314d5:	add    BYTE PTR [rax],al
   1400314d7:	add    BYTE PTR [rbx],bl
   1400314d9:	add    BYTE PTR [rax],al
   1400314db:	add    BYTE PTR [rax],al
   1400314dd:	add    BYTE PTR [rax],al
   1400314df:	add    BYTE PTR [rax+0x2c],al
   1400314e2:	add    eax,DWORD PTR [rax+0x1]
   1400314e5:	add    BYTE PTR [rax],al
   1400314e7:	add    BYTE PTR [rdx+0x0],bl
   1400314ed:	add    BYTE PTR [rax],al
   1400314ef:	add    BYTE PTR [rax+0x2c],dl
   1400314f2:	add    eax,DWORD PTR [rax+0x1]
   1400314f5:	add    BYTE PTR [rax],al
   1400314f7:	add    BYTE PTR [rbp+0x0],bl
   1400314fa:	add    BYTE PTR [rax],al
   1400314fc:	add    BYTE PTR [rax],al
   1400314fe:	add    BYTE PTR [rax],al
   140031500:	mov    al,0x18
   140031502:	add    eax,DWORD PTR [rax+0x1]
   140031505:	add    BYTE PTR [rax],al
   140031507:	add    BYTE PTR [rbx],dh
   140031509:	add    BYTE PTR [rax],al
   14003150b:	add    BYTE PTR [rax],al
   14003150d:	add    BYTE PTR [rax],al
   14003150f:	add    BYTE PTR [rax+0x2c],ah
   140031512:	add    eax,DWORD PTR [rax+0x1]
   140031515:	add    BYTE PTR [rax],al
   140031517:	add    BYTE PTR [rdx+0x0],bh
   14003151a:	add    BYTE PTR [rax],al
   14003151c:	add    BYTE PTR [rax],al
   14003151e:	add    BYTE PTR [rax],al
   140031520:	sbb    BYTE PTR [rcx],bl
   140031522:	add    eax,DWORD PTR [rax+0x1]
   140031525:	add    BYTE PTR [rax],al
   140031527:	add    BYTE PTR [rax+0x0],al
   14003152a:	add    BYTE PTR [rax],al
   14003152c:	add    BYTE PTR [rax],al
   14003152e:	add    BYTE PTR [rax],al
   140031530:	jo     0x14003155e
   140031532:	add    eax,DWORD PTR [rax+0x1]
   140031535:	add    BYTE PTR [rax],al
   140031537:	add    BYTE PTR [rdx+0x0],cl
   14003153d:	add    BYTE PTR [rax],al
   14003153f:	add    al,bl
   140031541:	sbb    BYTE PTR [rbx],al
   140031543:	rex add DWORD PTR [rax],eax
   140031546:	add    BYTE PTR [rax],al
   140031548:	cmp    BYTE PTR [rax],al
   14003154a:	add    BYTE PTR [rax],al
   14003154c:	add    BYTE PTR [rax],al
   14003154e:	add    BYTE PTR [rax],al
   140031550:	sub    BYTE PTR [rbx+rax*1],0x40
   140031554:	add    DWORD PTR [rax],eax
   140031556:	add    BYTE PTR [rax],al
   140031558:	add    BYTE PTR [rax],0x0
   14003155b:	add    BYTE PTR [rax],al
   14003155d:	add    BYTE PTR [rax],al
   14003155f:	add    al,ah
   140031561:	sbb    BYTE PTR [rbx],al
   140031563:	rex add DWORD PTR [rax],eax
   140031566:	add    BYTE PTR [rax],al
   140031568:	cmp    DWORD PTR [rax],eax
   14003156a:	add    BYTE PTR [rax],al
   14003156c:	add    BYTE PTR [rax],al
   14003156e:	add    BYTE PTR [rax],al
   140031570:	nop
   140031571:	sub    al,0x3
   140031573:	rex add DWORD PTR [rax],eax
   140031576:	add    BYTE PTR [rax],al
   140031578:	add    DWORD PTR [rax],0x0
   14003157e:	add    BYTE PTR [rax],al
   140031580:	clc    
   140031581:	(bad)  
   140031582:	add    eax,DWORD PTR [rax+0x1]
   140031585:	add    BYTE PTR [rax],al
   140031587:	add    BYTE PTR [rax+rax*1],bl
   14003158a:	add    BYTE PTR [rax],al
   14003158c:	add    BYTE PTR [rax],al
   14003158e:	add    BYTE PTR [rax],al
   140031590:	movabs al,ds:0x5e0000000140032c
   140031599:	add    BYTE PTR [rax],al
   14003159b:	add    BYTE PTR [rax],al
   14003159d:	add    BYTE PTR [rax],al
   14003159f:	add    BYTE PTR [rax+0x140032c],dh
   1400315a5:	add    BYTE PTR [rax],al
   1400315a7:	add    BYTE PTR [rsi+0x0],ch
   1400315aa:	add    BYTE PTR [rax],al
   1400315ac:	add    BYTE PTR [rax],al
   1400315ae:	add    BYTE PTR [rax],al
   1400315b0:	add    BYTE PTR [rax],bl
   1400315b2:	add    eax,DWORD PTR [rax+0x1]
   1400315b5:	add    BYTE PTR [rax],al
   1400315b7:	add    BYTE PTR [rip+0x0],bl        # 0x1400315bd
   1400315bd:	add    BYTE PTR [rax],al
   1400315bf:	add    al,al
   1400315c1:	sub    al,0x3
   1400315c3:	rex add DWORD PTR [rax],eax
   1400315c6:	add    BYTE PTR [rax],al
   1400315c8:	pop    rdi
   1400315c9:	add    BYTE PTR [rax],al
   1400315cb:	add    BYTE PTR [rax],al
   1400315cd:	add    BYTE PTR [rax],al
   1400315cf:	add    al,al
   1400315d1:	sbb    BYTE PTR [rbx],al
   1400315d3:	rex add DWORD PTR [rax],eax
   1400315d6:	add    BYTE PTR [rax],al
   1400315d8:	xor    eax,0x0
   1400315dd:	add    BYTE PTR [rax],al
   1400315df:	add    al,dl
   1400315e1:	sub    al,0x3
   1400315e3:	rex add DWORD PTR [rax],eax
   1400315e6:	add    BYTE PTR [rax],al
   1400315e8:	jl     0x1400315ea
   1400315ea:	add    BYTE PTR [rax],al
   1400315ec:	add    BYTE PTR [rax],al
   1400315ee:	add    BYTE PTR [rax],al
   1400315f0:	sbb    BYTE PTR [rax],bl
   1400315f2:	add    eax,DWORD PTR [rax+0x1]
   1400315f5:	add    BYTE PTR [rax],al
   1400315f7:	add    BYTE PTR [rax],ah
   1400315f9:	add    BYTE PTR [rax],al
   1400315fb:	add    BYTE PTR [rax],al
   1400315fd:	add    BYTE PTR [rax],al
   1400315ff:	add    al,ah
   140031601:	sub    al,0x3
   140031603:	rex add DWORD PTR [rax],eax
   140031606:	add    BYTE PTR [rax],al
   140031608:	(bad)  
   140031609:	add    BYTE PTR [rax],al
   14003160b:	add    BYTE PTR [rax],al
   14003160d:	add    BYTE PTR [rax],al
   14003160f:	add    BYTE PTR [rax],cl
   140031611:	sbb    BYTE PTR [rbx],al
   140031613:	rex add DWORD PTR [rax],eax
   140031616:	add    BYTE PTR [rax],al
   140031618:	(bad)  
   140031619:	add    BYTE PTR [rax],al
   14003161b:	add    BYTE PTR [rax],al
   14003161d:	add    BYTE PTR [rax],al
   14003161f:	add    al,dh
   140031621:	sub    al,0x3
   140031623:	rex add DWORD PTR [rax],eax
   140031626:	add    BYTE PTR [rax],al
   140031628:	(bad)  
   140031629:	add    BYTE PTR [rax],al
   14003162b:	add    BYTE PTR [rax],al
   14003162d:	add    BYTE PTR [rax],al
   14003162f:	add    BYTE PTR [rax+0x1400318],bh
   140031635:	add    BYTE PTR [rax],al
   140031637:	add    BYTE PTR [rax+rax*1],dh
   14003163a:	add    BYTE PTR [rax],al
   14003163c:	add    BYTE PTR [rax],al
   14003163e:	add    BYTE PTR [rax],al
   140031640:	add    BYTE PTR [rip+0x14003],ch        # 0x140045649
   140031646:	add    BYTE PTR [rax],al
   140031648:	sahf   
   140031649:	add    BYTE PTR [rax],al
   14003164b:	add    BYTE PTR [rax],al
   14003164d:	add    BYTE PTR [rax],al
   14003164f:	add    BYTE PTR [rax],bl
   140031651:	sub    eax,0x14003
   140031656:	add    BYTE PTR [rax],al
   140031658:	jnp    0x14003165a
   14003165a:	add    BYTE PTR [rax],al
   14003165c:	add    BYTE PTR [rax],al
   14003165e:	add    BYTE PTR [rax],al
   140031660:	push   rax
   140031661:	sbb    BYTE PTR [rbx],al
   140031663:	rex add DWORD PTR [rax],eax
   140031666:	add    BYTE PTR [rax],al
   140031668:	(bad)  
   140031669:	add    BYTE PTR [rax],al
   14003166b:	add    BYTE PTR [rax],al
   14003166d:	add    BYTE PTR [rax],al
   14003166f:	add    BYTE PTR [rax],dh
   140031671:	sub    eax,0x14003
   140031676:	add    BYTE PTR [rax],al
   140031678:	imul   eax,DWORD PTR [rax],0x0
   14003167e:	add    BYTE PTR [rax],al
   140031680:	rex sub eax,0x14003
   140031686:	add    BYTE PTR [rax],al
   140031688:	outs   dx,DWORD PTR ds:[rsi]
   140031689:	add    BYTE PTR [rax],al
   14003168b:	add    BYTE PTR [rax],al
   14003168d:	add    BYTE PTR [rax],al
   14003168f:	add    BYTE PTR [rax+0x2d],dl
   140031692:	add    eax,DWORD PTR [rax+0x1]
   140031695:	add    BYTE PTR [rax],al
   140031697:	add    BYTE PTR [rbx],al
   140031699:	add    BYTE PTR [rax],al
   14003169b:	add    BYTE PTR [rax],al
   14003169d:	add    BYTE PTR [rax],al
   14003169f:	add    BYTE PTR [rax+0x2d],ah
   1400316a2:	add    eax,DWORD PTR [rax+0x1]
   1400316a5:	add    BYTE PTR [rax],al
   1400316a7:	add    dl,ah
   1400316a9:	add    BYTE PTR [rax],al
   1400316ab:	add    BYTE PTR [rax],al
   1400316ad:	add    BYTE PTR [rax],al
   1400316af:	add    BYTE PTR [rax+0x2d],dh
   1400316b2:	add    eax,DWORD PTR [rax+0x1]
   1400316b5:	add    BYTE PTR [rax],al
   1400316b7:	add    BYTE PTR [rax+0x0],dl
   1400316bd:	add    BYTE PTR [rax],al
   1400316bf:	add    BYTE PTR [rax+0x140032d],al
   1400316c5:	add    BYTE PTR [rax],al
   1400316c7:	add    BYTE PTR [rcx+0x0],ah
   1400316cd:	add    BYTE PTR [rax],al
   1400316cf:	add    BYTE PTR [rax+0x140032d],dl
   1400316d5:	add    BYTE PTR [rax],al
   1400316d7:	add    BYTE PTR [rdx+0x0],dh
   1400316dd:	add    BYTE PTR [rax],al
   1400316df:	add    BYTE PTR [rax+0x140032d],ah
   1400316e5:	add    BYTE PTR [rax],al
   1400316e7:	add    BYTE PTR [rdx+0x0],ch
   1400316ed:	add    BYTE PTR [rax],al
   1400316ef:	add    BYTE PTR [rax+0x140032d],dh
   1400316f5:	add    BYTE PTR [rax],al
   1400316f7:	add    BYTE PTR [rsi+0x0],al
   1400316fa:	add    BYTE PTR [rax],al
   1400316fc:	add    BYTE PTR [rax],al
   1400316fe:	add    BYTE PTR [rax],al
   140031700:	shr    BYTE PTR [rip+0x14003],0x0        # 0x14004570a
   140031707:	add    BYTE PTR [rax+0x0],dh
   14003170a:	add    BYTE PTR [rax],al
   14003170c:	add    BYTE PTR [rax],al
   14003170e:	add    BYTE PTR [rax],al
   140031710:	(bad)  
   140031711:	add    BYTE PTR [rdx+0x0],dh
   140031714:	add    BYTE PTR [rax],al
   140031716:	add    BYTE PTR [rax],al
   140031718:	(bad)  
   140031719:	add    BYTE PTR [rdi+0x0],ah
   14003171c:	add    BYTE PTR [rax],al
   14003171e:	add    BYTE PTR [rax],al
   140031720:	movsxd eax,DWORD PTR [rax]
   140031722:	(bad)  
   140031723:	add    BYTE PTR [rax],al
   140031725:	add    BYTE PTR [rax],al
   140031727:	add    BYTE PTR [rdx+0x0],bh
   14003172a:	push   0x43002d00
   14003172f:	add    BYTE PTR [rax+0x0],cl
   140031732:	push   rbx
   140031733:	add    BYTE PTR [rax],al
   140031735:	add    BYTE PTR [rax],al
   140031737:	add    BYTE PTR [rbx+0x0],ah
   14003173a:	jae    0x14003173c
   14003173c:	add    BYTE PTR [rax],al
   14003173e:	add    BYTE PTR [rax],al
   140031740:	add    BYTE PTR fs:[rcx+0x0],ah
   140031744:	add    BYTE PTR [rax],al
   140031746:	add    BYTE PTR [rax],al
   140031748:	add    BYTE PTR fs:[rbp+0x0],ah
   14003174c:	add    BYTE PTR [rax],al
   14003174e:	add    BYTE PTR [rax],al
   140031750:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140031755:	add    BYTE PTR [rax],al
   140031757:	add    BYTE PTR [rbp+0x0],ah
   14003175a:	outs   dx,BYTE PTR ds:[rsi]
   14003175b:	add    BYTE PTR [rax],al
   14003175d:	add    BYTE PTR [rax],al
   14003175f:	add    BYTE PTR [rbp+0x0],ah
   140031762:	jae    0x140031764
   140031764:	add    BYTE PTR [rax],al
   140031766:	add    BYTE PTR [rax],al
   140031768:	data16 add BYTE PTR [rcx+0x0],ch
   14003176c:	add    BYTE PTR [rax],al
   14003176e:	add    BYTE PTR [rax],al
   140031770:	data16 add BYTE PTR [rdx+0x0],dh
   140031774:	add    BYTE PTR [rax],al
   140031776:	add    BYTE PTR [rax],al
   140031778:	push   0x6500
   14003177d:	add    BYTE PTR [rax],al
   14003177f:	add    BYTE PTR [rax+0x0],ch
   140031782:	jne    0x140031784
   140031784:	add    BYTE PTR [rax],al
   140031786:	add    BYTE PTR [rax],al
   140031788:	imul   eax,DWORD PTR [rax],0x73
   14003178e:	add    BYTE PTR [rax],al
   140031790:	imul   eax,DWORD PTR [rax],0x74
   140031796:	add    BYTE PTR [rax],al
   140031798:	push   0x0
   14003179a:	(bad)  
   14003179b:	add    BYTE PTR [rax],al
   14003179d:	add    BYTE PTR [rax],al
   14003179f:	add    BYTE PTR [rbx+0x0],ch
   1400317a2:	outs   dx,DWORD PTR ds:[rsi]
   1400317a3:	add    BYTE PTR [rax],al
   1400317a5:	add    BYTE PTR [rax],al
   1400317a7:	add    BYTE PTR [rsi+0x0],ch
   1400317aa:	ins    BYTE PTR es:[rdi],dx
   1400317ab:	add    BYTE PTR [rax],al
   1400317ad:	add    BYTE PTR [rax],al
   1400317af:	add    BYTE PTR [rsi+0x0],ch
   1400317b2:	outs   dx,DWORD PTR ds:[rsi]
   1400317b3:	add    BYTE PTR [rax],al
   1400317b5:	add    BYTE PTR [rax],al
   1400317b7:	add    BYTE PTR [rax+0x0],dh
   1400317ba:	ins    BYTE PTR es:[rdi],dx
   1400317bb:	add    BYTE PTR [rax],al
   1400317bd:	add    BYTE PTR [rax],al
   1400317bf:	add    BYTE PTR [rax+0x0],dh
   1400317c2:	je     0x1400317c4
   1400317c4:	add    BYTE PTR [rax],al
   1400317c6:	add    BYTE PTR [rax],al
   1400317c8:	jb     0x1400317ca
   1400317ca:	outs   dx,DWORD PTR ds:[rsi]
   1400317cb:	add    BYTE PTR [rax],al
   1400317cd:	add    BYTE PTR [rax],al
   1400317cf:	add    BYTE PTR [rdx+0x0],dh
   1400317d2:	jne    0x1400317d4
   1400317d4:	add    BYTE PTR [rax],al
   1400317d6:	add    BYTE PTR [rax],al
   1400317d8:	push   0x7200
   1400317dd:	add    BYTE PTR [rax],al
   1400317df:	add    BYTE PTR [rbx+0x0],dh
   1400317e2:	imul   eax,DWORD PTR [rax],0x0
   1400317e5:	add    BYTE PTR [rax],al
   1400317e7:	add    BYTE PTR [rbx+0x0],dh
   1400317ea:	jno    0x1400317ec
   1400317ec:	add    BYTE PTR [rax],al
   1400317ee:	add    BYTE PTR [rax],al
   1400317f0:	jae    0x1400317f2
   1400317f2:	jbe    0x1400317f4
   1400317f4:	add    BYTE PTR [rax],al
   1400317f6:	add    BYTE PTR [rax],al
   1400317f8:	je     0x1400317fa
   1400317fa:	push   0x0
   1400317ff:	add    BYTE PTR [rax+rax*1+0x72],dh
   140031803:	add    BYTE PTR [rax],al
   140031805:	add    BYTE PTR [rax],al
   140031807:	add    BYTE PTR [rbp+0x0],dh
   14003180a:	jb     0x14003180c
   14003180c:	add    BYTE PTR [rax],al
   14003180e:	add    BYTE PTR [rax],al
   140031810:	imul   eax,DWORD PTR [rax],0x64
   140031816:	add    BYTE PTR [rax],al
   140031818:	jne    0x14003181a
   14003181a:	imul   eax,DWORD PTR [rax],0x0
   14003181d:	add    BYTE PTR [rax],al
   14003181f:	add    BYTE PTR [rdx+0x0],ah
   140031822:	add    BYTE PTR gs:[rax],al
   140031825:	add    BYTE PTR [rax],al
   140031827:	add    BYTE PTR [rbx+0x0],dh
   14003182a:	ins    BYTE PTR es:[rdi],dx
   14003182b:	add    BYTE PTR [rax],al
   14003182d:	add    BYTE PTR [rax],al
   14003182f:	add    BYTE PTR [rbp+0x0],ah
   140031832:	je     0x140031834
   140031834:	add    BYTE PTR [rax],al
   140031836:	add    BYTE PTR [rax],al
   140031838:	ins    BYTE PTR es:[rdi],dx
   140031839:	add    BYTE PTR [rsi+0x0],dh
   14003183c:	add    BYTE PTR [rax],al
   14003183e:	add    BYTE PTR [rax],al
   140031840:	ins    BYTE PTR es:[rdi],dx
   140031841:	add    BYTE PTR [rax+rax*1+0x0],dh
   140031845:	add    BYTE PTR [rax],al
   140031847:	add    BYTE PTR [rsi+0x0],ah
   14003184a:	(bad)  
   14003184b:	add    BYTE PTR [rax],al
   14003184d:	add    BYTE PTR [rax],al
   14003184f:	add    BYTE PTR [rsi+0x0],dh
   140031852:	imul   eax,DWORD PTR [rax],0x0
   140031858:	push   0x7900
   14003185d:	add    BYTE PTR [rax],al
   14003185f:	add    BYTE PTR [rcx+0x0],ah
   140031862:	jp     0x140031864
   140031864:	add    BYTE PTR [rax],al
   140031866:	add    BYTE PTR [rax],al
   140031868:	add    BYTE PTR gs:[rbp+0x0],dh
   14003186c:	add    BYTE PTR [rax],al
   14003186e:	add    BYTE PTR [rax],al
   140031870:	ins    DWORD PTR es:[rdi],dx
   140031871:	add    BYTE PTR [rbx+0x0],ch
   140031874:	add    BYTE PTR [rax],al
   140031876:	add    BYTE PTR [rax],al
   140031878:	(bad)  
   140031879:	add    BYTE PTR [rsi+0x0],ah
   14003187c:	add    BYTE PTR [rax],al
   14003187e:	add    BYTE PTR [rax],al
   140031880:	imul   eax,DWORD PTR [rax],0x61
   140031883:	add    BYTE PTR [rax],al
   140031885:	add    BYTE PTR [rax],al
   140031887:	add    BYTE PTR [rsi+0x0],ah
   14003188a:	outs   dx,DWORD PTR ds:[rsi]
   14003188b:	add    BYTE PTR [rax],al
   14003188d:	add    BYTE PTR [rax],al
   14003188f:	add    BYTE PTR [rax+0x0],ch
   140031892:	imul   eax,DWORD PTR [rax],0x0
   140031898:	ins    DWORD PTR es:[rdi],dx
   140031899:	add    BYTE PTR [rbx+0x0],dh
   14003189c:	add    BYTE PTR [rax],al
   14003189e:	add    BYTE PTR [rax],al
   1400318a0:	imul   eax,DWORD PTR [rax],0x6b
   1400318a3:	add    BYTE PTR [rax],al
   1400318a5:	add    BYTE PTR [rax],al
   1400318a7:	add    BYTE PTR [rbx+0x0],ch
   1400318aa:	jns    0x1400318ac
   1400318ac:	add    BYTE PTR [rax],al
   1400318ae:	add    BYTE PTR [rax],al
   1400318b0:	jae    0x1400318b2
   1400318b2:	ja     0x1400318b4
   1400318b4:	add    BYTE PTR [rax],al
   1400318b6:	add    BYTE PTR [rax],al
   1400318b8:	jne    0x1400318ba
   1400318ba:	jp     0x1400318bc
   1400318bc:	add    BYTE PTR [rax],al
   1400318be:	add    BYTE PTR [rax],al
   1400318c0:	je     0x1400318c2
   1400318c2:	je     0x1400318c4
   1400318c4:	add    BYTE PTR [rax],al
   1400318c6:	add    BYTE PTR [rax],al
   1400318c8:	jo     0x1400318ca
   1400318ca:	(bad)  
   1400318cb:	add    BYTE PTR [rax],al
   1400318cd:	add    BYTE PTR [rax],al
   1400318cf:	add    BYTE PTR [rdi+0x0],ah
   1400318d2:	jne    0x1400318d4
   1400318d4:	add    BYTE PTR [rax],al
   1400318d6:	add    BYTE PTR [rax],al
   1400318d8:	je     0x1400318da
   1400318da:	(bad)  
   1400318db:	add    BYTE PTR [rax],al
   1400318dd:	add    BYTE PTR [rax],al
   1400318df:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400318e3:	add    BYTE PTR [rax],al
   1400318e5:	add    BYTE PTR [rax],al
   1400318e7:	add    BYTE PTR [rbx+0x0],ch
   1400318ea:	outs   dx,BYTE PTR ds:[rsi]
   1400318eb:	add    BYTE PTR [rax],al
   1400318ed:	add    BYTE PTR [rax],al
   1400318ef:	add    BYTE PTR [rbp+0x0],ch
   1400318f2:	jb     0x1400318f4
   1400318f4:	add    BYTE PTR [rax],al
   1400318f6:	add    BYTE PTR [rax],al
   1400318f8:	jae    0x1400318fa
   1400318fa:	(bad)  
   1400318fb:	add    BYTE PTR [rax],al
   1400318fd:	add    BYTE PTR [rax],al
   1400318ff:	add    BYTE PTR [rbp+0x0],ch
   140031902:	outs   dx,BYTE PTR ds:[rsi]
   140031903:	add    BYTE PTR [rax],al
   140031905:	add    BYTE PTR [rax],al
   140031907:	add    BYTE PTR [rdi+0x0],ah
   14003190a:	ins    BYTE PTR es:[rdi],dx
   14003190b:	add    BYTE PTR [rax],al
   14003190d:	add    BYTE PTR [rax],al
   14003190f:	add    BYTE PTR [rbx+0x0],ch
   140031912:	outs   dx,DWORD PTR ds:[rsi]
   140031913:	add    BYTE PTR [rbx+0x0],ch
   140031916:	add    BYTE PTR [rax],al
   140031918:	jae    0x14003191a
   14003191a:	jns    0x14003191c
   14003191c:	jb     0x14003191e
   14003191e:	add    BYTE PTR [rax],al
   140031920:	add    BYTE PTR fs:[rcx+0x0],ch
   140031924:	jbe    0x140031926
   140031926:	add    BYTE PTR [rax],al
   140031928:	(bad)  
   140031929:	add    BYTE PTR [rdx+0x0],dh
   14003192c:	sub    eax,0x41005300
   140031931:	add    BYTE PTR [rax],al
   140031933:	add    BYTE PTR [rax],al
   140031935:	add    BYTE PTR [rax],al
   140031937:	add    BYTE PTR [rdx+0x0],ah
   14003193a:	add    BYTE PTR [eip+0x47004200],ch        # 0x187035b41
   140031941:	add    BYTE PTR [rax],al
   140031943:	add    BYTE PTR [rax],al
   140031945:	add    BYTE PTR [rax],al
   140031947:	add    BYTE PTR [rbx+0x0],ah
   14003194a:	(bad)  
   14003194b:	add    BYTE PTR [rip+0x53004500],ch        # 0x193035e51
   140031951:	add    BYTE PTR [rax],al
   140031953:	add    BYTE PTR [rax],al
   140031955:	add    BYTE PTR [rax],al
   140031957:	add    BYTE PTR [rdx+0x0],bh
   14003195a:	push   0x54002d00
   14003195f:	add    BYTE PTR [rdi+0x0],dl
   140031962:	add    BYTE PTR [rax],al
   140031964:	add    BYTE PTR [rax],al
   140031966:	add    BYTE PTR [rax],al
   140031968:	movsxd eax,DWORD PTR [rax]
   14003196a:	jae    0x14003196c
   14003196c:	sub    eax,0x5a004300
   140031971:	add    BYTE PTR [rax],al
   140031973:	add    BYTE PTR [rax],al
   140031975:	add    BYTE PTR [rax],al
   140031977:	add    BYTE PTR [rax+rax*1+0x61],ah
   14003197b:	add    BYTE PTR [rip+0x4b004400],ch        # 0x18b035d81
   140031981:	add    BYTE PTR [rax],al
   140031983:	add    BYTE PTR [rax],al
   140031985:	add    BYTE PTR [rax],al
   140031987:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003198b:	add    BYTE PTR [rip+0x45004400],ch        # 0x185035d91
   140031991:	add    BYTE PTR [rax],al
   140031993:	add    BYTE PTR [rax],al
   140031995:	add    BYTE PTR [rax],al
   140031997:	add    BYTE PTR [rbp+0x0],ah
   14003199a:	ins    BYTE PTR es:[rdi],dx
   14003199b:	add    BYTE PTR [rip+0x52004700],ch        # 0x1920360a1
   1400319a1:	add    BYTE PTR [rax],al
   1400319a3:	add    BYTE PTR [rax],al
   1400319a5:	add    BYTE PTR [rax],al
   1400319a7:	add    BYTE PTR [rbp+0x0],ah
   1400319aa:	outs   dx,BYTE PTR ds:[rsi]
   1400319ab:	add    BYTE PTR [rip+0x53005500],ch        # 0x193036eb1
   1400319b1:	add    BYTE PTR [rax],al
   1400319b3:	add    BYTE PTR [rax],al
   1400319b5:	add    BYTE PTR [rax],al
   1400319b7:	add    BYTE PTR [rsi+0x0],ah
   1400319ba:	imul   eax,DWORD PTR [rax],0x46002d
   1400319c0:	rex.WB add BYTE PTR [r8],al
   1400319c3:	add    BYTE PTR [rax],al
   1400319c5:	add    BYTE PTR [rax],al
   1400319c7:	add    BYTE PTR [rsi+0x0],ah
   1400319ca:	jb     0x1400319cc
   1400319cc:	sub    eax,0x52004600
   1400319d1:	add    BYTE PTR [rax],al
   1400319d3:	add    BYTE PTR [rax],al
   1400319d5:	add    BYTE PTR [rax],al
   1400319d7:	add    BYTE PTR [rax+0x0],ch
   1400319da:	add    BYTE PTR gs:[rip+0x4c004900],ch        # 0x18c0362e1
   1400319e1:	add    BYTE PTR [rax],al
   1400319e3:	add    BYTE PTR [rax],al
   1400319e5:	add    BYTE PTR [rax],al
   1400319e7:	add    BYTE PTR [rax+0x0],ch
   1400319ea:	jne    0x1400319ec
   1400319ec:	sub    eax,0x55004800
   1400319f1:	add    BYTE PTR [rax],al
   1400319f3:	add    BYTE PTR [rax],al
   1400319f5:	add    BYTE PTR [rax],al
   1400319f7:	add    BYTE PTR [rcx+0x0],ch
   1400319fa:	jae    0x1400319fc
   1400319fc:	sub    eax,0x53004900
   140031a01:	add    BYTE PTR [rax],al
   140031a03:	add    BYTE PTR [rax],al
   140031a05:	add    BYTE PTR [rax],al
   140031a07:	add    BYTE PTR [rcx+0x0],ch
   140031a0a:	je     0x140031a0c
   140031a0c:	sub    eax,0x54004900
   140031a11:	add    BYTE PTR [rax],al
   140031a13:	add    BYTE PTR [rax],al
   140031a15:	add    BYTE PTR [rax],al
   140031a17:	add    BYTE PTR [rdx+0x0],ch
   140031a1a:	(bad)  
   140031a1b:	add    BYTE PTR [rip+0x50004a00],ch        # 0x190036421
   140031a21:	add    BYTE PTR [rax],al
   140031a23:	add    BYTE PTR [rax],al
   140031a25:	add    BYTE PTR [rax],al
   140031a27:	add    BYTE PTR [rbx+0x0],ch
   140031a2a:	outs   dx,DWORD PTR ds:[rsi]
   140031a2b:	add    BYTE PTR [rip+0x52004b00],ch        # 0x192036531
   140031a31:	add    BYTE PTR [rax],al
   140031a33:	add    BYTE PTR [rax],al
   140031a35:	add    BYTE PTR [rax],al
   140031a37:	add    BYTE PTR [rsi+0x0],ch
   140031a3a:	ins    BYTE PTR es:[rdi],dx
   140031a3b:	add    BYTE PTR [rip+0x4c004e00],ch        # 0x18c036841
   140031a41:	add    BYTE PTR [rax],al
   140031a43:	add    BYTE PTR [rax],al
   140031a45:	add    BYTE PTR [rax],al
   140031a47:	add    BYTE PTR [rsi+0x0],ch
   140031a4a:	(bad)  
   140031a4b:	add    BYTE PTR [rip+0x4f004e00],ch        # 0x18f036851
   140031a51:	add    BYTE PTR [rax],al
   140031a53:	add    BYTE PTR [rax],al
   140031a55:	add    BYTE PTR [rax],al
   140031a57:	add    BYTE PTR [rax+0x0],dh
   140031a5a:	ins    BYTE PTR es:[rdi],dx
   140031a5b:	add    BYTE PTR [rip+0x4c005000],ch        # 0x18c036a61
   140031a61:	add    BYTE PTR [rax],al
   140031a63:	add    BYTE PTR [rax],al
   140031a65:	add    BYTE PTR [rax],al
   140031a67:	add    BYTE PTR [rax+0x0],dh
   140031a6a:	je     0x140031a6c
   140031a6c:	sub    eax,0x52004200
   140031a71:	add    BYTE PTR [rax],al
   140031a73:	add    BYTE PTR [rax],al
   140031a75:	add    BYTE PTR [rax],al
   140031a77:	add    BYTE PTR [rdx+0x0],dh
   140031a7a:	outs   dx,DWORD PTR ds:[rsi]
   140031a7b:	add    BYTE PTR [rip+0x4f005200],ch        # 0x18f036c81
   140031a81:	add    BYTE PTR [rax],al
   140031a83:	add    BYTE PTR [rax],al
   140031a85:	add    BYTE PTR [rax],al
   140031a87:	add    BYTE PTR [rdx+0x0],dh
   140031a8a:	jne    0x140031a8c
   140031a8c:	sub    eax,0x55005200
   140031a91:	add    BYTE PTR [rax],al
   140031a93:	add    BYTE PTR [rax],al
   140031a95:	add    BYTE PTR [rax],al
   140031a97:	add    BYTE PTR [rax+0x0],ch
   140031a9a:	jb     0x140031a9c
   140031a9c:	sub    eax,0x52004800
   140031aa1:	add    BYTE PTR [rax],al
   140031aa3:	add    BYTE PTR [rax],al
   140031aa5:	add    BYTE PTR [rax],al
   140031aa7:	add    BYTE PTR [rbx+0x0],dh
   140031aaa:	imul   eax,DWORD PTR [rax],0x2d
   140031aad:	add    BYTE PTR [rbx+0x0],dl
   140031ab0:	rex.WXB add BYTE PTR [r8],al
   140031ab3:	add    BYTE PTR [rax],al
   140031ab5:	add    BYTE PTR [rax],al
   140031ab7:	add    BYTE PTR [rbx+0x0],dh
   140031aba:	jno    0x140031abc
   140031abc:	sub    eax,0x4c004100
   140031ac1:	add    BYTE PTR [rax],al
   140031ac3:	add    BYTE PTR [rax],al
   140031ac5:	add    BYTE PTR [rax],al
   140031ac7:	add    BYTE PTR [rbx+0x0],dh
   140031aca:	jbe    0x140031acc
   140031acc:	sub    eax,0x45005300
   140031ad1:	add    BYTE PTR [rax],al
   140031ad3:	add    BYTE PTR [rax],al
   140031ad5:	add    BYTE PTR [rax],al
   140031ad7:	add    BYTE PTR [rax+rax*1+0x68],dh
   140031adb:	add    BYTE PTR [rip+0x48005400],ch        # 0x188036ee1
   140031ae1:	add    BYTE PTR [rax],al
   140031ae3:	add    BYTE PTR [rax],al
   140031ae5:	add    BYTE PTR [rax],al
   140031ae7:	add    BYTE PTR [rax+rax*1+0x72],dh
   140031aeb:	add    BYTE PTR [rip+0x52005400],ch        # 0x192036ef1
   140031af1:	add    BYTE PTR [rax],al
   140031af3:	add    BYTE PTR [rax],al
   140031af5:	add    BYTE PTR [rax],al
   140031af7:	add    BYTE PTR [rbp+0x0],dh
   140031afa:	jb     0x140031afc
   140031afc:	sub    eax,0x4b005000
   140031b01:	add    BYTE PTR [rax],al
   140031b03:	add    BYTE PTR [rax],al
   140031b05:	add    BYTE PTR [rax],al
   140031b07:	add    BYTE PTR [rcx+0x0],ch
   140031b0a:	add    BYTE PTR fs:[rip+0x44004900],ch        # 0x184036411
   140031b11:	add    BYTE PTR [rax],al
   140031b13:	add    BYTE PTR [rax],al
   140031b15:	add    BYTE PTR [rax],al
   140031b17:	add    BYTE PTR [rbp+0x0],dh
   140031b1a:	imul   eax,DWORD PTR [rax],0x2d
   140031b1d:	add    BYTE PTR [rbp+0x0],dl
   140031b20:	add    BYTE PTR [r8],al
   140031b23:	add    BYTE PTR [rax],al
   140031b25:	add    BYTE PTR [rax],al
   140031b27:	add    BYTE PTR [rdx+0x0],ah
   140031b2a:	add    BYTE PTR gs:[rip+0x59004200],ch        # 0x199035d31
   140031b31:	add    BYTE PTR [rax],al
   140031b33:	add    BYTE PTR [rax],al
   140031b35:	add    BYTE PTR [rax],al
   140031b37:	add    BYTE PTR [rbx+0x0],dh
   140031b3a:	ins    BYTE PTR es:[rdi],dx
   140031b3b:	add    BYTE PTR [rip+0x49005300],ch        # 0x189036e41
   140031b41:	add    BYTE PTR [rax],al
   140031b43:	add    BYTE PTR [rax],al
   140031b45:	add    BYTE PTR [rax],al
   140031b47:	add    BYTE PTR [rbp+0x0],ah
   140031b4a:	je     0x140031b4c
   140031b4c:	sub    eax,0x45004500
   140031b51:	add    BYTE PTR [rax],al
   140031b53:	add    BYTE PTR [rax],al
   140031b55:	add    BYTE PTR [rax],al
   140031b57:	add    BYTE PTR [rax+rax*1+0x76],ch
   140031b5b:	add    BYTE PTR [rip+0x56004c00],ch        # 0x196036761
   140031b61:	add    BYTE PTR [rax],al
   140031b63:	add    BYTE PTR [rax],al
   140031b65:	add    BYTE PTR [rax],al
   140031b67:	add    BYTE PTR [rax+rax*1+0x74],ch
   140031b6b:	add    BYTE PTR [rip+0x54004c00],ch        # 0x194036771
   140031b71:	add    BYTE PTR [rax],al
   140031b73:	add    BYTE PTR [rax],al
   140031b75:	add    BYTE PTR [rax],al
   140031b77:	add    BYTE PTR [rsi+0x0],ah
   140031b7a:	(bad)  
   140031b7b:	add    BYTE PTR [rip+0x52004900],ch        # 0x192036481
   140031b81:	add    BYTE PTR [rax],al
   140031b83:	add    BYTE PTR [rax],al
   140031b85:	add    BYTE PTR [rax],al
   140031b87:	add    BYTE PTR [rsi+0x0],dh
   140031b8a:	imul   eax,DWORD PTR [rax],0x56002d
   140031b90:	rex.WRX add BYTE PTR [rax],r8b
   140031b93:	add    BYTE PTR [rax],al
   140031b95:	add    BYTE PTR [rax],al
   140031b97:	add    BYTE PTR [rax+0x0],ch
   140031b9a:	jns    0x140031b9c
   140031b9c:	sub    eax,0x4d004100
   140031ba1:	add    BYTE PTR [rax],al
   140031ba3:	add    BYTE PTR [rax],al
   140031ba5:	add    BYTE PTR [rax],al
   140031ba7:	add    BYTE PTR [rcx+0x0],ah
   140031baa:	jp     0x140031bac
   140031bac:	sub    eax,0x5a004100
   140031bb1:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a10367b7
   140031bb7:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140031bbb:	add    BYTE PTR [rax],al
   140031bbd:	add    BYTE PTR [rax],al
   140031bbf:	add    BYTE PTR [rbp+0x0],ah
   140031bc2:	jne    0x140031bc4
   140031bc4:	sub    eax,0x53004500
   140031bc9:	add    BYTE PTR [rax],al
   140031bcb:	add    BYTE PTR [rax],al
   140031bcd:	add    BYTE PTR [rax],al
   140031bcf:	add    BYTE PTR [rbp+0x0],ch
   140031bd2:	imul   eax,DWORD PTR [rax],0x2d
   140031bd5:	add    BYTE PTR [rbp+0x0],cl
   140031bd8:	rex.WXB add BYTE PTR [r8],al
   140031bdb:	add    BYTE PTR [rax],al
   140031bdd:	add    BYTE PTR [rax],al
   140031bdf:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140031be3:	add    BYTE PTR [rip+0x41005a00],ch        # 0x1810375e9
   140031be9:	add    BYTE PTR [rax],al
   140031beb:	add    BYTE PTR [rax],al
   140031bed:	add    BYTE PTR [rax],al
   140031bef:	add    BYTE PTR [rax+0x0],bh
   140031bf2:	push   0x5a002d00
   140031bf7:	add    BYTE PTR [rcx+0x0],al
   140031bfa:	add    BYTE PTR [rax],al
   140031bfc:	add    BYTE PTR [rax],al
   140031bfe:	add    BYTE PTR [rax],al
   140031c00:	jp     0x140031c02
   140031c02:	jne    0x140031c04
   140031c04:	sub    eax,0x41005a00
   140031c09:	add    BYTE PTR [rax],al
   140031c0b:	add    BYTE PTR [rax],al
   140031c0d:	add    BYTE PTR [rax],al
   140031c0f:	add    BYTE PTR [rcx+0x0],ah
   140031c12:	data16 add BYTE PTR [rip+0x41005a00],ch        # 0x181037619
   140031c19:	add    BYTE PTR [rax],al
   140031c1b:	add    BYTE PTR [rax],al
   140031c1d:	add    BYTE PTR [rax],al
   140031c1f:	add    BYTE PTR [rbx+0x0],ch
   140031c22:	(bad)  
   140031c23:	add    BYTE PTR [rip+0x45004700],ch        # 0x185036329
   140031c29:	add    BYTE PTR [rax],al
   140031c2b:	add    BYTE PTR [rax],al
   140031c2d:	add    BYTE PTR [rax],al
   140031c2f:	add    BYTE PTR [rsi+0x0],ah
   140031c32:	outs   dx,DWORD PTR ds:[rsi]
   140031c33:	add    BYTE PTR [rip+0x4f004600],ch        # 0x18f036239
   140031c39:	add    BYTE PTR [rax],al
   140031c3b:	add    BYTE PTR [rax],al
   140031c3d:	add    BYTE PTR [rax],al
   140031c3f:	add    BYTE PTR [rax+0x0],ch
   140031c42:	imul   eax,DWORD PTR [rax],0x49002d
   140031c48:	rex.WRX add BYTE PTR [rax],r8b
   140031c4b:	add    BYTE PTR [rax],al
   140031c4d:	add    BYTE PTR [rax],al
   140031c4f:	add    BYTE PTR [rbp+0x0],ch
   140031c52:	je     0x140031c54
   140031c54:	sub    eax,0x54004d00
   140031c59:	add    BYTE PTR [rax],al
   140031c5b:	add    BYTE PTR [rax],al
   140031c5d:	add    BYTE PTR [rax],al
   140031c5f:	add    BYTE PTR [rbx+0x0],dh
   140031c62:	add    BYTE PTR gs:[rip+0x4f004e00],ch        # 0x18f036a69
   140031c69:	add    BYTE PTR [rax],al
   140031c6b:	add    BYTE PTR [rax],al
   140031c6d:	add    BYTE PTR [rax],al
   140031c6f:	add    BYTE PTR [rbp+0x0],ch
   140031c72:	jae    0x140031c74
   140031c74:	sub    eax,0x59004d00
   140031c79:	add    BYTE PTR [rax],al
   140031c7b:	add    BYTE PTR [rax],al
   140031c7d:	add    BYTE PTR [rax],al
   140031c7f:	add    BYTE PTR [rbx+0x0],ch
   140031c82:	imul   eax,DWORD PTR [rax],0x2d
   140031c85:	add    BYTE PTR [rbx+0x0],cl
   140031c88:	pop    rdx
   140031c89:	add    BYTE PTR [rax],al
   140031c8b:	add    BYTE PTR [rax],al
   140031c8d:	add    BYTE PTR [rax],al
   140031c8f:	add    BYTE PTR [rbx+0x0],ch
   140031c92:	jns    0x140031c94
   140031c94:	sub    eax,0x47004b00
   140031c99:	add    BYTE PTR [rax],al
   140031c9b:	add    BYTE PTR [rax],al
   140031c9d:	add    BYTE PTR [rax],al
   140031c9f:	add    BYTE PTR [rbx+0x0],dh
   140031ca2:	ja     0x140031ca4
   140031ca4:	sub    eax,0x45004b00
   140031ca9:	add    BYTE PTR [rax],al
   140031cab:	add    BYTE PTR [rax],al
   140031cad:	add    BYTE PTR [rax],al
   140031caf:	add    BYTE PTR [rbp+0x0],dh
   140031cb2:	jp     0x140031cb4
   140031cb4:	sub    eax,0x5a005500
   140031cb9:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a10368bf
   140031cbf:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140031cc3:	add    BYTE PTR [rax],al
   140031cc5:	add    BYTE PTR [rax],al
   140031cc7:	add    BYTE PTR [rax+rax*1+0x74],dh
   140031ccb:	add    BYTE PTR [rip+0x55005200],ch        # 0x195036ed1
   140031cd1:	add    BYTE PTR [rax],al
   140031cd3:	add    BYTE PTR [rax],al
   140031cd5:	add    BYTE PTR [rax],al
   140031cd7:	add    BYTE PTR [rdx+0x0],ah
   140031cda:	outs   dx,BYTE PTR ds:[rsi]
   140031cdb:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0365e1
   140031ce1:	add    BYTE PTR [rax],al
   140031ce3:	add    BYTE PTR [rax],al
   140031ce5:	add    BYTE PTR [rax],al
   140031ce7:	add    BYTE PTR [rax+0x0],dh
   140031cea:	(bad)  
   140031ceb:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0365f1
   140031cf1:	add    BYTE PTR [rax],al
   140031cf3:	add    BYTE PTR [rax],al
   140031cf5:	add    BYTE PTR [rax],al
   140031cf7:	add    BYTE PTR [rdi+0x0],ah
   140031cfa:	jne    0x140031cfc
   140031cfc:	sub    eax,0x4e004900
   140031d01:	add    BYTE PTR [rax],al
   140031d03:	add    BYTE PTR [rax],al
   140031d05:	add    BYTE PTR [rax],al
   140031d07:	add    BYTE PTR [rax+rax*1+0x61],dh
   140031d0b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e036611
   140031d11:	add    BYTE PTR [rax],al
   140031d13:	add    BYTE PTR [rax],al
   140031d15:	add    BYTE PTR [rax],al
   140031d17:	add    BYTE PTR [rax+rax*1+0x65],dh
   140031d1b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e036621
   140031d21:	add    BYTE PTR [rax],al
   140031d23:	add    BYTE PTR [rax],al
   140031d25:	add    BYTE PTR [rax],al
   140031d27:	add    BYTE PTR [rbx+0x0],ch
   140031d2a:	outs   dx,BYTE PTR ds:[rsi]
   140031d2b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e036631
   140031d31:	add    BYTE PTR [rax],al
   140031d33:	add    BYTE PTR [rax],al
   140031d35:	add    BYTE PTR [rax],al
   140031d37:	add    BYTE PTR [rbp+0x0],ch
   140031d3a:	ins    BYTE PTR es:[rdi],dx
   140031d3b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e036641
   140031d41:	add    BYTE PTR [rax],al
   140031d43:	add    BYTE PTR [rax],al
   140031d45:	add    BYTE PTR [rax],al
   140031d47:	add    BYTE PTR [rbp+0x0],ch
   140031d4a:	jb     0x140031d4c
   140031d4c:	sub    eax,0x4e004900
   140031d51:	add    BYTE PTR [rax],al
   140031d53:	add    BYTE PTR [rax],al
   140031d55:	add    BYTE PTR [rax],al
   140031d57:	add    BYTE PTR [rbx+0x0],dh
   140031d5a:	(bad)  
   140031d5b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e036661
   140031d61:	add    BYTE PTR [rax],al
   140031d63:	add    BYTE PTR [rax],al
   140031d65:	add    BYTE PTR [rax],al
   140031d67:	add    BYTE PTR [rbp+0x0],ch
   140031d6a:	outs   dx,BYTE PTR ds:[rsi]
   140031d6b:	add    BYTE PTR [rip+0x4e004d00],ch        # 0x18e036a71
   140031d71:	add    BYTE PTR [rax],al
   140031d73:	add    BYTE PTR [rax],al
   140031d75:	add    BYTE PTR [rax],al
   140031d77:	add    BYTE PTR [rbx+0x0],ah
   140031d7a:	jns    0x140031d7c
   140031d7c:	sub    eax,0x42004700
   140031d81:	add    BYTE PTR [rax],al
   140031d83:	add    BYTE PTR [rax],al
   140031d85:	add    BYTE PTR [rax],al
   140031d87:	add    BYTE PTR [rdi+0x0],ah
   140031d8a:	ins    BYTE PTR es:[rdi],dx
   140031d8b:	add    BYTE PTR [rip+0x53004500],ch        # 0x193036291
   140031d91:	add    BYTE PTR [rax],al
   140031d93:	add    BYTE PTR [rax],al
   140031d95:	add    BYTE PTR [rax],al
   140031d97:	add    BYTE PTR [rbx+0x0],ch
   140031d9a:	outs   dx,DWORD PTR ds:[rsi]
   140031d9b:	add    BYTE PTR [rbx+0x0],ch
   140031d9e:	sub    eax,0x4e004900
   140031da3:	add    BYTE PTR [rax],al
   140031da5:	add    BYTE PTR [rax],al
   140031da7:	add    BYTE PTR [rbx+0x0],dh
   140031daa:	jns    0x140031dac
   140031dac:	jb     0x140031dae
   140031dae:	sub    eax,0x59005300
   140031db3:	add    BYTE PTR [rax],al
   140031db5:	add    BYTE PTR [rax],al
   140031db7:	add    BYTE PTR [rax+rax*1+0x69],ah
   140031dbb:	add    BYTE PTR [rsi+0x0],dh
   140031dbe:	sub    eax,0x56004d00
   140031dc3:	add    BYTE PTR [rax],al
   140031dc5:	add    BYTE PTR [rax],al
   140031dc7:	add    BYTE PTR [rcx+0x0],dh
   140031dca:	jne    0x140031dcc
   140031dcc:	jp     0x140031dce
   140031dce:	sub    eax,0x4f004200
   140031dd3:	add    BYTE PTR [rax],al
   140031dd5:	add    BYTE PTR [rax],al
   140031dd7:	add    BYTE PTR [rsi+0x0],ch
   140031dda:	jae    0x140031ddc
   140031ddc:	sub    eax,0x41005a00
   140031de1:	add    BYTE PTR [rax],al
   140031de3:	add    BYTE PTR [rax],al
   140031de5:	add    BYTE PTR [rax],al
   140031de7:	add    BYTE PTR [rbp+0x0],ch
   140031dea:	imul   eax,DWORD PTR [rax],0x4e002d
   140031df0:	pop    rdx
   140031df1:	add    BYTE PTR [rax],al
   140031df3:	add    BYTE PTR [rax],al
   140031df5:	add    BYTE PTR [rax],al
   140031df7:	add    BYTE PTR [rcx+0x0],ah
   140031dfa:	jb     0x140031dfc
   140031dfc:	sub    eax,0x51004900
   140031e01:	add    BYTE PTR [rax],al
   140031e03:	add    BYTE PTR [rax],al
   140031e05:	add    BYTE PTR [rax],al
   140031e07:	add    BYTE PTR [rdx+0x0],bh
   140031e0a:	push   0x43002d00
   140031e0f:	add    BYTE PTR [rsi+0x0],cl
   140031e12:	add    BYTE PTR [rax],al
   140031e14:	add    BYTE PTR [rax],al
   140031e16:	add    BYTE PTR [rax],al
   140031e18:	add    BYTE PTR fs:[rbp+0x0],ah
   140031e1c:	sub    eax,0x48004300
   140031e21:	add    BYTE PTR [rax],al
   140031e23:	add    BYTE PTR [rax],al
   140031e25:	add    BYTE PTR [rax],al
   140031e27:	add    BYTE PTR [rbp+0x0],ah
   140031e2a:	outs   dx,BYTE PTR ds:[rsi]
   140031e2b:	add    BYTE PTR [rip+0x42004700],ch        # 0x182036531
   140031e31:	add    BYTE PTR [rax],al
   140031e33:	add    BYTE PTR [rax],al
   140031e35:	add    BYTE PTR [rax],al
   140031e37:	add    BYTE PTR [rbp+0x0],ah
   140031e3a:	jae    0x140031e3c
   140031e3c:	sub    eax,0x58004d00
   140031e41:	add    BYTE PTR [rax],al
   140031e43:	add    BYTE PTR [rax],al
   140031e45:	add    BYTE PTR [rax],al
   140031e47:	add    BYTE PTR [rsi+0x0],ah
   140031e4a:	jb     0x140031e4c
   140031e4c:	sub    eax,0x45004200
   140031e51:	add    BYTE PTR [rax],al
   140031e53:	add    BYTE PTR [rax],al
   140031e55:	add    BYTE PTR [rax],al
   140031e57:	add    BYTE PTR [rcx+0x0],ch
   140031e5a:	je     0x140031e5c
   140031e5c:	sub    eax,0x48004300
   140031e61:	add    BYTE PTR [rax],al
   140031e63:	add    BYTE PTR [rax],al
   140031e65:	add    BYTE PTR [rax],al
   140031e67:	add    BYTE PTR [rsi+0x0],ch
   140031e6a:	ins    BYTE PTR es:[rdi],dx
   140031e6b:	add    BYTE PTR [rip+0x45004200],ch        # 0x185036071
   140031e71:	add    BYTE PTR [rax],al
   140031e73:	add    BYTE PTR [rax],al
   140031e75:	add    BYTE PTR [rax],al
   140031e77:	add    BYTE PTR [rsi+0x0],ch
   140031e7a:	outs   dx,BYTE PTR ds:[rsi]
   140031e7b:	add    BYTE PTR [rip+0x4f004e00],ch        # 0x18f036c81
   140031e81:	add    BYTE PTR [rax],al
   140031e83:	add    BYTE PTR [rax],al
   140031e85:	add    BYTE PTR [rax],al
   140031e87:	add    BYTE PTR [rax+0x0],dh
   140031e8a:	je     0x140031e8c
   140031e8c:	sub    eax,0x54005000
   140031e91:	add    BYTE PTR [rax],al
   140031e93:	add    BYTE PTR [rax],al
   140031e95:	add    BYTE PTR [rax],al
   140031e97:	add    BYTE PTR [rbx+0x0],dh
   140031e9a:	jb     0x140031e9c
   140031e9c:	sub    eax,0x50005300
   140031ea1:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a1036aa7
   140031ea7:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140031eab:	add    BYTE PTR [rax],al
   140031ead:	add    BYTE PTR [rax],al
   140031eaf:	add    BYTE PTR [rbx+0x0],dh
   140031eb2:	jbe    0x140031eb4
   140031eb4:	sub    eax,0x49004600
   140031eb9:	add    BYTE PTR [rax],al
   140031ebb:	add    BYTE PTR [rax],al
   140031ebd:	add    BYTE PTR [rax],al
   140031ebf:	add    BYTE PTR [rcx+0x0],ah
   140031ec2:	jp     0x140031ec4
   140031ec4:	sub    eax,0x5a004100
   140031ec9:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b90361cf
   140031ecf:	add    BYTE PTR [rdx+0x0],dh
   140031ed2:	ins    BYTE PTR es:[rdi],dx
   140031ed3:	add    BYTE PTR [rax],al
   140031ed5:	add    BYTE PTR [rax],al
   140031ed7:	add    BYTE PTR [rbx+0x0],dh
   140031eda:	add    BYTE PTR gs:[rip+0x45005300],ch        # 0x1850371e1
   140031ee1:	add    BYTE PTR [rax],al
   140031ee3:	add    BYTE PTR [rax],al
   140031ee5:	add    BYTE PTR [rax],al
   140031ee7:	add    BYTE PTR [rbp+0x0],ch
   140031eea:	jae    0x140031eec
   140031eec:	sub    eax,0x4e004200
   140031ef1:	add    BYTE PTR [rax],al
   140031ef3:	add    BYTE PTR [rax],al
   140031ef5:	add    BYTE PTR [rax],al
   140031ef7:	add    BYTE PTR [rbp+0x0],dh
   140031efa:	jp     0x140031efc
   140031efc:	sub    eax,0x5a005500
   140031f01:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b9036207
   140031f07:	add    BYTE PTR [rdx+0x0],dh
   140031f0a:	ins    BYTE PTR es:[rdi],dx
   140031f0b:	add    BYTE PTR [rax],al
   140031f0d:	add    BYTE PTR [rax],al
   140031f0f:	add    BYTE PTR [rcx+0x0],dh
   140031f12:	jne    0x140031f14
   140031f14:	jp     0x140031f16
   140031f16:	sub    eax,0x43004500
   140031f1b:	add    BYTE PTR [rax],al
   140031f1d:	add    BYTE PTR [rax],al
   140031f1f:	add    BYTE PTR [rcx+0x0],ah
   140031f22:	jb     0x140031f24
   140031f24:	sub    eax,0x47004500
   140031f29:	add    BYTE PTR [rax],al
   140031f2b:	add    BYTE PTR [rax],al
   140031f2d:	add    BYTE PTR [rax],al
   140031f2f:	add    BYTE PTR [rdx+0x0],bh
   140031f32:	push   0x48002d00
   140031f37:	add    BYTE PTR [rbx+0x0],cl
   140031f3a:	add    BYTE PTR [rax],al
   140031f3c:	add    BYTE PTR [rax],al
   140031f3e:	add    BYTE PTR [rax],al
   140031f40:	add    BYTE PTR fs:[rbp+0x0],ah
   140031f44:	sub    eax,0x54004100
   140031f49:	add    BYTE PTR [rax],al
   140031f4b:	add    BYTE PTR [rax],al
   140031f4d:	add    BYTE PTR [rax],al
   140031f4f:	add    BYTE PTR [rbp+0x0],ah
   140031f52:	outs   dx,BYTE PTR ds:[rsi]
   140031f53:	add    BYTE PTR [rip+0x55004100],ch        # 0x195036059
   140031f59:	add    BYTE PTR [rax],al
   140031f5b:	add    BYTE PTR [rax],al
   140031f5d:	add    BYTE PTR [rax],al
   140031f5f:	add    BYTE PTR [rbp+0x0],ah
   140031f62:	jae    0x140031f64
   140031f64:	sub    eax,0x53004500
   140031f69:	add    BYTE PTR [rax],al
   140031f6b:	add    BYTE PTR [rax],al
   140031f6d:	add    BYTE PTR [rax],al
   140031f6f:	add    BYTE PTR [rsi+0x0],ah
   140031f72:	jb     0x140031f74
   140031f74:	sub    eax,0x41004300
   140031f79:	add    BYTE PTR [rax],al
   140031f7b:	add    BYTE PTR [rax],al
   140031f7d:	add    BYTE PTR [rax],al
   140031f7f:	add    BYTE PTR [rbx+0x0],dh
   140031f82:	jb     0x140031f84
   140031f84:	sub    eax,0x50005300
   140031f89:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b903628f
   140031f8f:	add    BYTE PTR [rdx+0x0],dh
   140031f92:	ins    BYTE PTR es:[rdi],dx
   140031f93:	add    BYTE PTR [rax],al
   140031f95:	add    BYTE PTR [rax],al
   140031f97:	add    BYTE PTR [rbx+0x0],dh
   140031f9a:	add    BYTE PTR gs:[rip+0x49004600],ch        # 0x1890365a1
   140031fa1:	add    BYTE PTR [rax],al
   140031fa3:	add    BYTE PTR [rax],al
   140031fa5:	add    BYTE PTR [rax],al
   140031fa7:	add    BYTE PTR [rcx+0x0],dh
   140031faa:	jne    0x140031fac
   140031fac:	jp     0x140031fae
   140031fae:	sub    eax,0x45005000
   140031fb3:	add    BYTE PTR [rax],al
   140031fb5:	add    BYTE PTR [rax],al
   140031fb7:	add    BYTE PTR [rcx+0x0],ah
   140031fba:	jb     0x140031fbc
   140031fbc:	sub    eax,0x59004c00
   140031fc1:	add    BYTE PTR [rax],al
   140031fc3:	add    BYTE PTR [rax],al
   140031fc5:	add    BYTE PTR [rax],al
   140031fc7:	add    BYTE PTR [rdx+0x0],bh
   140031fca:	push   0x53002d00
   140031fcf:	add    BYTE PTR [rdi+0x0],al
   140031fd2:	add    BYTE PTR [rax],al
   140031fd4:	add    BYTE PTR [rax],al
   140031fd6:	add    BYTE PTR [rax],al
   140031fd8:	add    BYTE PTR fs:[rbp+0x0],ah
   140031fdc:	sub    eax,0x55004c00
   140031fe1:	add    BYTE PTR [rax],al
   140031fe3:	add    BYTE PTR [rax],al
   140031fe5:	add    BYTE PTR [rax],al
   140031fe7:	add    BYTE PTR [rbp+0x0],ah
   140031fea:	outs   dx,BYTE PTR ds:[rsi]
   140031feb:	add    BYTE PTR [rip+0x41004300],ch        # 0x1810362f1
   140031ff1:	add    BYTE PTR [rax],al
   140031ff3:	add    BYTE PTR [rax],al
   140031ff5:	add    BYTE PTR [rax],al
   140031ff7:	add    BYTE PTR [rbp+0x0],ah
   140031ffa:	jae    0x140031ffc
   140031ffc:	sub    eax,0x54004700
   140032001:	add    BYTE PTR [rax],al
   140032003:	add    BYTE PTR [rax],al
   140032005:	add    BYTE PTR [rax],al
   140032007:	add    BYTE PTR [rsi+0x0],ah
   14003200a:	jb     0x14003200c
   14003200c:	sub    eax,0x48004300
   140032011:	add    BYTE PTR [rax],al
   140032013:	add    BYTE PTR [rax],al
   140032015:	add    BYTE PTR [rax],al
   140032017:	add    BYTE PTR [rax+0x0],ch
   14003201a:	jb     0x14003201c
   14003201c:	sub    eax,0x41004200
   140032021:	add    BYTE PTR [rax],al
   140032023:	add    BYTE PTR [rax],al
   140032025:	add    BYTE PTR [rax],al
   140032027:	add    BYTE PTR [rbx+0x0],dh
   14003202a:	ins    DWORD PTR es:[rdi],dx
   14003202b:	add    BYTE PTR [rdx+0x0],ch
   14003202e:	sub    eax,0x4f004e00
   140032033:	add    BYTE PTR [rax],al
   140032035:	add    BYTE PTR [rax],al
   140032037:	add    BYTE PTR [rcx+0x0],ah
   14003203a:	jb     0x14003203c
   14003203c:	sub    eax,0x5a004400
   140032041:	add    BYTE PTR [rax],al
   140032043:	add    BYTE PTR [rax],al
   140032045:	add    BYTE PTR [rax],al
   140032047:	add    BYTE PTR [rdx+0x0],bh
   14003204a:	push   0x4d002d00
   14003204f:	add    BYTE PTR [rdi+0x0],cl
   140032052:	add    BYTE PTR [rax],al
   140032054:	add    BYTE PTR [rax],al
   140032056:	add    BYTE PTR [rax],al
   140032058:	add    BYTE PTR fs:[rbp+0x0],ah
   14003205c:	sub    eax,0x49004c00
   140032061:	add    BYTE PTR [rax],al
   140032063:	add    BYTE PTR [rax],al
   140032065:	add    BYTE PTR [rax],al
   140032067:	add    BYTE PTR [rbp+0x0],ah
   14003206a:	outs   dx,BYTE PTR ds:[rsi]
   14003206b:	add    BYTE PTR [rip+0x5a004e00],ch        # 0x19a036e71
   140032071:	add    BYTE PTR [rax],al
   140032073:	add    BYTE PTR [rax],al
   140032075:	add    BYTE PTR [rax],al
   140032077:	add    BYTE PTR [rbp+0x0],ah
   14003207a:	jae    0x14003207c
   14003207c:	sub    eax,0x52004300
   140032081:	add    BYTE PTR [rax],al
   140032083:	add    BYTE PTR [rax],al
   140032085:	add    BYTE PTR [rax],al
   140032087:	add    BYTE PTR [rsi+0x0],ah
   14003208a:	jb     0x14003208c
   14003208c:	sub    eax,0x55004c00
   140032091:	add    BYTE PTR [rax],al
   140032093:	add    BYTE PTR [rax],al
   140032095:	add    BYTE PTR [rax],al
   140032097:	add    BYTE PTR [rdx+0x0],ah
   14003209a:	jae    0x14003209c
   14003209c:	sub    eax,0x41004200
   1400320a1:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a1036ca7
   1400320a7:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400320ab:	add    BYTE PTR [rax],al
   1400320ad:	add    BYTE PTR [rax],al
   1400320af:	add    BYTE PTR [rbx+0x0],dh
   1400320b2:	ins    DWORD PTR es:[rdi],dx
   1400320b3:	add    BYTE PTR [rdx+0x0],ch
   1400320b6:	sub    eax,0x45005300
   1400320bb:	add    BYTE PTR [rax],al
   1400320bd:	add    BYTE PTR [rax],al
   1400320bf:	add    BYTE PTR [rcx+0x0],ah
   1400320c2:	jb     0x1400320c4
   1400320c4:	sub    eax,0x41004d00
   1400320c9:	add    BYTE PTR [rax],al
   1400320cb:	add    BYTE PTR [rax],al
   1400320cd:	add    BYTE PTR [rax],al
   1400320cf:	add    BYTE PTR [rbp+0x0],ah
   1400320d2:	outs   dx,BYTE PTR ds:[rsi]
   1400320d3:	add    BYTE PTR [rip+0x45004900],ch        # 0x1850369d9
   1400320d9:	add    BYTE PTR [rax],al
   1400320db:	add    BYTE PTR [rax],al
   1400320dd:	add    BYTE PTR [rax],al
   1400320df:	add    BYTE PTR [rbp+0x0],ah
   1400320e2:	jae    0x1400320e4
   1400320e4:	sub    eax,0x41005000
   1400320e9:	add    BYTE PTR [rax],al
   1400320eb:	add    BYTE PTR [rax],al
   1400320ed:	add    BYTE PTR [rax],al
   1400320ef:	add    BYTE PTR [rsi+0x0],ah
   1400320f2:	jb     0x1400320f4
   1400320f4:	sub    eax,0x43004d00
   1400320f9:	add    BYTE PTR [rax],al
   1400320fb:	add    BYTE PTR [rax],al
   1400320fd:	add    BYTE PTR [rax],al
   1400320ff:	add    BYTE PTR [rbx+0x0],dh
   140032102:	jb     0x140032104
   140032104:	sub    eax,0x41004200
   140032109:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a1036d0f
   14003210f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140032113:	add    BYTE PTR [rax],al
   140032115:	add    BYTE PTR [rax],al
   140032117:	add    BYTE PTR [rbx+0x0],dh
   14003211a:	ins    DWORD PTR es:[rdi],dx
   14003211b:	add    BYTE PTR [rcx+0x0],ah
   14003211e:	sub    eax,0x4f004e00
   140032123:	add    BYTE PTR [rax],al
   140032125:	add    BYTE PTR [rax],al
   140032127:	add    BYTE PTR [rcx+0x0],ah
   14003212a:	jb     0x14003212c
   14003212c:	sub    eax,0x4e005400
   140032131:	add    BYTE PTR [rax],al
   140032133:	add    BYTE PTR [rax],al
   140032135:	add    BYTE PTR [rax],al
   140032137:	add    BYTE PTR [rbp+0x0],ah
   14003213a:	outs   dx,BYTE PTR ds:[rsi]
   14003213b:	add    BYTE PTR [rip+0x41005a00],ch        # 0x181037b41
   140032141:	add    BYTE PTR [rax],al
   140032143:	add    BYTE PTR [rax],al
   140032145:	add    BYTE PTR [rax],al
   140032147:	add    BYTE PTR [rbp+0x0],ah
   14003214a:	jae    0x14003214c
   14003214c:	sub    eax,0x4f004400
   140032151:	add    BYTE PTR [rax],al
   140032153:	add    BYTE PTR [rax],al
   140032155:	add    BYTE PTR [rax],al
   140032157:	add    BYTE PTR [rbx+0x0],dh
   14003215a:	jb     0x14003215c
   14003215c:	sub    eax,0x41004200
   140032161:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b9036467
   140032167:	add    BYTE PTR [rdx+0x0],dh
   14003216a:	ins    BYTE PTR es:[rdi],dx
   14003216b:	add    BYTE PTR [rax],al
   14003216d:	add    BYTE PTR [rax],al
   14003216f:	add    BYTE PTR [rbx+0x0],dh
   140032172:	ins    DWORD PTR es:[rdi],dx
   140032173:	add    BYTE PTR [rcx+0x0],ah
   140032176:	sub    eax,0x45005300
   14003217b:	add    BYTE PTR [rax],al
   14003217d:	add    BYTE PTR [rax],al
   14003217f:	add    BYTE PTR [rcx+0x0],ah
   140032182:	jb     0x140032184
   140032184:	sub    eax,0x4d004f00
   140032189:	add    BYTE PTR [rax],al
   14003218b:	add    BYTE PTR [rax],al
   14003218d:	add    BYTE PTR [rax],al
   14003218f:	add    BYTE PTR [rbp+0x0],ah
   140032192:	outs   dx,BYTE PTR ds:[rsi]
   140032193:	add    BYTE PTR [rip+0x4d004a00],ch        # 0x18d036b99
   140032199:	add    BYTE PTR [rax],al
   14003219b:	add    BYTE PTR [rax],al
   14003219d:	add    BYTE PTR [rax],al
   14003219f:	add    BYTE PTR [rbp+0x0],ah
   1400321a2:	jae    0x1400321a4
   1400321a4:	sub    eax,0x45005600
   1400321a9:	add    BYTE PTR [rax],al
   1400321ab:	add    BYTE PTR [rax],al
   1400321ad:	add    BYTE PTR [rax],al
   1400321af:	add    BYTE PTR [rbx+0x0],dh
   1400321b2:	ins    DWORD PTR es:[rdi],dx
   1400321b3:	add    BYTE PTR [rbx+0x0],dh
   1400321b6:	sub    eax,0x49004600
   1400321bb:	add    BYTE PTR [rax],al
   1400321bd:	add    BYTE PTR [rax],al
   1400321bf:	add    BYTE PTR [rcx+0x0],ah
   1400321c2:	jb     0x1400321c4
   1400321c4:	sub    eax,0x45005900
   1400321c9:	add    BYTE PTR [rax],al
   1400321cb:	add    BYTE PTR [rax],al
   1400321cd:	add    BYTE PTR [rax],al
   1400321cf:	add    BYTE PTR [rbp+0x0],ah
   1400321d2:	outs   dx,BYTE PTR ds:[rsi]
   1400321d3:	add    BYTE PTR [rip+0x42004300],ch        # 0x1820364d9
   1400321d9:	add    BYTE PTR [rax],al
   1400321db:	add    BYTE PTR [rax],al
   1400321dd:	add    BYTE PTR [rax],al
   1400321df:	add    BYTE PTR [rbp+0x0],ah
   1400321e2:	jae    0x1400321e4
   1400321e4:	sub    eax,0x4f004300
   1400321e9:	add    BYTE PTR [rax],al
   1400321eb:	add    BYTE PTR [rax],al
   1400321ed:	add    BYTE PTR [rax],al
   1400321ef:	add    BYTE PTR [rbx+0x0],dh
   1400321f2:	ins    DWORD PTR es:[rdi],dx
   1400321f3:	add    BYTE PTR [rsi+0x0],ch
   1400321f6:	sub    eax,0x49004600
   1400321fb:	add    BYTE PTR [rax],al
   1400321fd:	add    BYTE PTR [rax],al
   1400321ff:	add    BYTE PTR [rcx+0x0],ah
   140032202:	jb     0x140032204
   140032204:	sub    eax,0x59005300
   140032209:	add    BYTE PTR [rax],al
   14003220b:	add    BYTE PTR [rax],al
   14003220d:	add    BYTE PTR [rax],al
   14003220f:	add    BYTE PTR [rbp+0x0],ah
   140032212:	outs   dx,BYTE PTR ds:[rsi]
   140032213:	add    BYTE PTR [rip+0x5a004200],ch        # 0x19a036419
   140032219:	add    BYTE PTR [rax],al
   14003221b:	add    BYTE PTR [rax],al
   14003221d:	add    BYTE PTR [rax],al
   14003221f:	add    BYTE PTR [rbp+0x0],ah
   140032222:	jae    0x140032224
   140032224:	sub    eax,0x45005000
   140032229:	add    BYTE PTR [rax],al
   14003222b:	add    BYTE PTR [rax],al
   14003222d:	add    BYTE PTR [rax],al
   14003222f:	add    BYTE PTR [rcx+0x0],ah
   140032232:	jb     0x140032234
   140032234:	sub    eax,0x4f004a00
   140032239:	add    BYTE PTR [rax],al
   14003223b:	add    BYTE PTR [rax],al
   14003223d:	add    BYTE PTR [rax],al
   14003223f:	add    BYTE PTR [rbp+0x0],ah
   140032242:	outs   dx,BYTE PTR ds:[rsi]
   140032243:	add    BYTE PTR [rip+0x54005400],ch        # 0x194037649
   140032249:	add    BYTE PTR [rax],al
   14003224b:	add    BYTE PTR [rax],al
   14003224d:	add    BYTE PTR [rax],al
   14003224f:	add    BYTE PTR [rbp+0x0],ah
   140032252:	jae    0x140032254
   140032254:	sub    eax,0x52004100
   140032259:	add    BYTE PTR [rax],al
   14003225b:	add    BYTE PTR [rax],al
   14003225d:	add    BYTE PTR [rax],al
   14003225f:	add    BYTE PTR [rcx+0x0],ah
   140032262:	jb     0x140032264
   140032264:	sub    eax,0x42004c00
   140032269:	add    BYTE PTR [rax],al
   14003226b:	add    BYTE PTR [rax],al
   14003226d:	add    BYTE PTR [rax],al
   14003226f:	add    BYTE PTR [rbp+0x0],ah
   140032272:	outs   dx,BYTE PTR ds:[rsi]
   140032273:	add    BYTE PTR [rip+0x57005a00],ch        # 0x197037c79
   140032279:	add    BYTE PTR [rax],al
   14003227b:	add    BYTE PTR [rax],al
   14003227d:	add    BYTE PTR [rax],al
   14003227f:	add    BYTE PTR [rbp+0x0],ah
   140032282:	jae    0x140032284
   140032284:	sub    eax,0x43004500
   140032289:	add    BYTE PTR [rax],al
   14003228b:	add    BYTE PTR [rax],al
   14003228d:	add    BYTE PTR [rax],al
   14003228f:	add    BYTE PTR [rcx+0x0],ah
   140032292:	jb     0x140032294
   140032294:	sub    eax,0x57004b00
   140032299:	add    BYTE PTR [rax],al
   14003229b:	add    BYTE PTR [rax],al
   14003229d:	add    BYTE PTR [rax],al
   14003229f:	add    BYTE PTR [rbp+0x0],ah
   1400322a2:	outs   dx,BYTE PTR ds:[rsi]
   1400322a3:	add    BYTE PTR [rip+0x48005000],ch        # 0x1880372a9
   1400322a9:	add    BYTE PTR [rax],al
   1400322ab:	add    BYTE PTR [rax],al
   1400322ad:	add    BYTE PTR [rax],al
   1400322af:	add    BYTE PTR [rbp+0x0],ah
   1400322b2:	jae    0x1400322b4
   1400322b4:	sub    eax,0x4c004300
   1400322b9:	add    BYTE PTR [rax],al
   1400322bb:	add    BYTE PTR [rax],al
   1400322bd:	add    BYTE PTR [rax],al
   1400322bf:	add    BYTE PTR [rcx+0x0],ah
   1400322c2:	jb     0x1400322c4
   1400322c4:	sub    eax,0x45004100
   1400322c9:	add    BYTE PTR [rax],al
   1400322cb:	add    BYTE PTR [rax],al
   1400322cd:	add    BYTE PTR [rax],al
   1400322cf:	add    BYTE PTR [rbp+0x0],ah
   1400322d2:	jae    0x1400322d4
   1400322d4:	sub    eax,0x59005500
   1400322d9:	add    BYTE PTR [rax],al
   1400322db:	add    BYTE PTR [rax],al
   1400322dd:	add    BYTE PTR [rax],al
   1400322df:	add    BYTE PTR [rcx+0x0],ah
   1400322e2:	jb     0x1400322e4
   1400322e4:	sub    eax,0x48004200
   1400322e9:	add    BYTE PTR [rax],al
   1400322eb:	add    BYTE PTR [rax],al
   1400322ed:	add    BYTE PTR [rax],al
   1400322ef:	add    BYTE PTR [rbp+0x0],ah
   1400322f2:	jae    0x1400322f4
   1400322f4:	sub    eax,0x59005000
   1400322f9:	add    BYTE PTR [rax],al
   1400322fb:	add    BYTE PTR [rax],al
   1400322fd:	add    BYTE PTR [rax],al
   1400322ff:	add    BYTE PTR [rcx+0x0],ah
   140032302:	jb     0x140032304
   140032304:	sub    eax,0x41005100
   140032309:	add    BYTE PTR [rax],al
   14003230b:	add    BYTE PTR [rax],al
   14003230d:	add    BYTE PTR [rax],al
   14003230f:	add    BYTE PTR [rbp+0x0],ah
   140032312:	jae    0x140032314
   140032314:	sub    eax,0x4f004200
   140032319:	add    BYTE PTR [rax],al
   14003231b:	add    BYTE PTR [rax],al
   14003231d:	add    BYTE PTR [rax],al
   14003231f:	add    BYTE PTR [rbp+0x0],ah
   140032322:	jae    0x140032324
   140032324:	sub    eax,0x56005300
   140032329:	add    BYTE PTR [rax],al
   14003232b:	add    BYTE PTR [rax],al
   14003232d:	add    BYTE PTR [rax],al
   14003232f:	add    BYTE PTR [rbp+0x0],ah
   140032332:	jae    0x140032334
   140032334:	sub    eax,0x4e004800
   140032339:	add    BYTE PTR [rax],al
   14003233b:	add    BYTE PTR [rax],al
   14003233d:	add    BYTE PTR [rax],al
   14003233f:	add    BYTE PTR [rbp+0x0],ah
   140032342:	jae    0x140032344
   140032344:	sub    eax,0x49004e00
   140032349:	add    BYTE PTR [rax],al
   14003234b:	add    BYTE PTR [rax],al
   14003234d:	add    BYTE PTR [rax],al
   14003234f:	add    BYTE PTR [rbp+0x0],ah
   140032352:	jae    0x140032354
   140032354:	sub    eax,0x52005000
   140032359:	add    BYTE PTR [rax],al
   14003235b:	add    BYTE PTR [rax],al
   14003235d:	add    BYTE PTR [rax],al
   14003235f:	add    BYTE PTR [rdx+0x0],bh
   140032362:	push   0x43002d00
   140032367:	add    BYTE PTR [rax+0x0],cl
   14003236a:	push   rsp
   14003236b:	add    BYTE PTR [rax],al
   14003236d:	add    BYTE PTR [rax],al
   14003236f:	add    BYTE PTR [rbx+0x0],dh
   140032372:	jb     0x140032374
   140032374:	add    BYTE PTR [rax],al
   140032376:	add    BYTE PTR [rax],al
   140032378:	(bad)  
   140032379:	add    BYTE PTR [rsi+0x0],ah
   14003237c:	sub    eax,0x61007a00
   140032381:	add    BYTE PTR [rax],al
   140032383:	add    BYTE PTR [rax],al
   140032385:	add    BYTE PTR [rax],al
   140032387:	add    BYTE PTR [rcx+0x0],ah
   14003238a:	jb     0x14003238c
   14003238c:	sub    eax,0x65006100
   140032391:	add    BYTE PTR [rax],al
   140032393:	add    BYTE PTR [rax],al
   140032395:	add    BYTE PTR [rax],al
   140032397:	add    BYTE PTR [rcx+0x0],ah
   14003239a:	jb     0x14003239c
   14003239c:	sub    eax,0x68006200
   1400323a1:	add    BYTE PTR [rax],al
   1400323a3:	add    BYTE PTR [rax],al
   1400323a5:	add    BYTE PTR [rax],al
   1400323a7:	add    BYTE PTR [rcx+0x0],ah
   1400323aa:	jb     0x1400323ac
   1400323ac:	sub    eax,0x7a006400
   1400323b1:	add    BYTE PTR [rax],al
   1400323b3:	add    BYTE PTR [rax],al
   1400323b5:	add    BYTE PTR [rax],al
   1400323b7:	add    BYTE PTR [rcx+0x0],ah
   1400323ba:	jb     0x1400323bc
   1400323bc:	sub    eax,0x67006500
   1400323c1:	add    BYTE PTR [rax],al
   1400323c3:	add    BYTE PTR [rax],al
   1400323c5:	add    BYTE PTR [rax],al
   1400323c7:	add    BYTE PTR [rcx+0x0],ah
   1400323ca:	jb     0x1400323cc
   1400323cc:	sub    eax,0x71006900
   1400323d1:	add    BYTE PTR [rax],al
   1400323d3:	add    BYTE PTR [rax],al
   1400323d5:	add    BYTE PTR [rax],al
   1400323d7:	add    BYTE PTR [rcx+0x0],ah
   1400323da:	jb     0x1400323dc
   1400323dc:	sub    eax,0x6f006a00
   1400323e1:	add    BYTE PTR [rax],al
   1400323e3:	add    BYTE PTR [rax],al
   1400323e5:	add    BYTE PTR [rax],al
   1400323e7:	add    BYTE PTR [rcx+0x0],ah
   1400323ea:	jb     0x1400323ec
   1400323ec:	sub    eax,0x77006b00
   1400323f1:	add    BYTE PTR [rax],al
   1400323f3:	add    BYTE PTR [rax],al
   1400323f5:	add    BYTE PTR [rax],al
   1400323f7:	add    BYTE PTR [rcx+0x0],ah
   1400323fa:	jb     0x1400323fc
   1400323fc:	sub    eax,0x62006c00
   140032401:	add    BYTE PTR [rax],al
   140032403:	add    BYTE PTR [rax],al
   140032405:	add    BYTE PTR [rax],al
   140032407:	add    BYTE PTR [rcx+0x0],ah
   14003240a:	jb     0x14003240c
   14003240c:	sub    eax,0x79006c00
   140032411:	add    BYTE PTR [rax],al
   140032413:	add    BYTE PTR [rax],al
   140032415:	add    BYTE PTR [rax],al
   140032417:	add    BYTE PTR [rcx+0x0],ah
   14003241a:	jb     0x14003241c
   14003241c:	sub    eax,0x61006d00
   140032421:	add    BYTE PTR [rax],al
   140032423:	add    BYTE PTR [rax],al
   140032425:	add    BYTE PTR [rax],al
   140032427:	add    BYTE PTR [rcx+0x0],ah
   14003242a:	jb     0x14003242c
   14003242c:	sub    eax,0x6d006f00
   140032431:	add    BYTE PTR [rax],al
   140032433:	add    BYTE PTR [rax],al
   140032435:	add    BYTE PTR [rax],al
   140032437:	add    BYTE PTR [rcx+0x0],ah
   14003243a:	jb     0x14003243c
   14003243c:	sub    eax,0x61007100
   140032441:	add    BYTE PTR [rax],al
   140032443:	add    BYTE PTR [rax],al
   140032445:	add    BYTE PTR [rax],al
   140032447:	add    BYTE PTR [rcx+0x0],ah
   14003244a:	jb     0x14003244c
   14003244c:	sub    eax,0x61007300
   140032451:	add    BYTE PTR [rax],al
   140032453:	add    BYTE PTR [rax],al
   140032455:	add    BYTE PTR [rax],al
   140032457:	add    BYTE PTR [rcx+0x0],ah
   14003245a:	jb     0x14003245c
   14003245c:	sub    eax,0x79007300
   140032461:	add    BYTE PTR [rax],al
   140032463:	add    BYTE PTR [rax],al
   140032465:	add    BYTE PTR [rax],al
   140032467:	add    BYTE PTR [rcx+0x0],ah
   14003246a:	jb     0x14003246c
   14003246c:	sub    eax,0x6e007400
   140032471:	add    BYTE PTR [rax],al
   140032473:	add    BYTE PTR [rax],al
   140032475:	add    BYTE PTR [rax],al
   140032477:	add    BYTE PTR [rcx+0x0],ah
   14003247a:	jb     0x14003247c
   14003247c:	sub    eax,0x65007900
   140032481:	add    BYTE PTR [rax],al
   140032483:	add    BYTE PTR [rax],al
   140032485:	add    BYTE PTR [rax],al
   140032487:	add    BYTE PTR [rcx+0x0],ah
   14003248a:	jp     0x14003248c
   14003248c:	sub    eax,0x7a006100
   140032491:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b9038797
   140032497:	add    BYTE PTR [rdx+0x0],dh
   14003249a:	ins    BYTE PTR es:[rdi],dx
   14003249b:	add    BYTE PTR [rax],al
   14003249d:	add    BYTE PTR [rax],al
   14003249f:	add    BYTE PTR [rcx+0x0],ah
   1400324a2:	jp     0x1400324a4
   1400324a4:	sub    eax,0x7a006100
   1400324a9:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a10390af
   1400324af:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400324b3:	add    BYTE PTR [rax],al
   1400324b5:	add    BYTE PTR [rax],al
   1400324b7:	add    BYTE PTR [rdx+0x0],ah
   1400324ba:	add    BYTE PTR gs:[rip+0x79006200],ch        # 0x1b90386c1
   1400324c1:	add    BYTE PTR [rax],al
   1400324c3:	add    BYTE PTR [rax],al
   1400324c5:	add    BYTE PTR [rax],al
   1400324c7:	add    BYTE PTR [rdx+0x0],ah
   1400324ca:	add    BYTE PTR [eip+0x67006200],ch        # 0x1a70386d1
   1400324d1:	add    BYTE PTR [rax],al
   1400324d3:	add    BYTE PTR [rax],al
   1400324d5:	add    BYTE PTR [rax],al
   1400324d7:	add    BYTE PTR [rdx+0x0],ah
   1400324da:	outs   dx,BYTE PTR ds:[rsi]
   1400324db:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae038de1
   1400324e1:	add    BYTE PTR [rax],al
   1400324e3:	add    BYTE PTR [rax],al
   1400324e5:	add    BYTE PTR [rax],al
   1400324e7:	add    BYTE PTR [rdx+0x0],ah
   1400324ea:	jae    0x1400324ec
   1400324ec:	sub    eax,0x61006200
   1400324f1:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a10390f7
   1400324f7:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400324fb:	add    BYTE PTR [rax],al
   1400324fd:	add    BYTE PTR [rax],al
   1400324ff:	add    BYTE PTR [rbx+0x0],ah
   140032502:	(bad)  
   140032503:	add    BYTE PTR [rip+0x73006500],ch        # 0x1b3038a09
   140032509:	add    BYTE PTR [rax],al
   14003250b:	add    BYTE PTR [rax],al
   14003250d:	add    BYTE PTR [rax],al
   14003250f:	add    BYTE PTR [rbx+0x0],ah
   140032512:	jae    0x140032514
   140032514:	sub    eax,0x7a006300
   140032519:	add    BYTE PTR [rax],al
   14003251b:	add    BYTE PTR [rax],al
   14003251d:	add    BYTE PTR [rax],al
   14003251f:	add    BYTE PTR [rbx+0x0],ah
   140032522:	jns    0x140032524
   140032524:	sub    eax,0x62006700
   140032529:	add    BYTE PTR [rax],al
   14003252b:	add    BYTE PTR [rax],al
   14003252d:	add    BYTE PTR [rax],al
   14003252f:	add    BYTE PTR [rax+rax*1+0x61],ah
   140032533:	add    BYTE PTR [rip+0x6b006400],ch        # 0x1ab038939
   140032539:	add    BYTE PTR [rax],al
   14003253b:	add    BYTE PTR [rax],al
   14003253d:	add    BYTE PTR [rax],al
   14003253f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140032543:	add    BYTE PTR [rip+0x74006100],ch        # 0x1b4038649
   140032549:	add    BYTE PTR [rax],al
   14003254b:	add    BYTE PTR [rax],al
   14003254d:	add    BYTE PTR [rax],al
   14003254f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140032553:	add    BYTE PTR [rip+0x68006300],ch        # 0x1a8038859
   140032559:	add    BYTE PTR [rax],al
   14003255b:	add    BYTE PTR [rax],al
   14003255d:	add    BYTE PTR [rax],al
   14003255f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140032563:	add    BYTE PTR [rip+0x65006400],ch        # 0x1a5038969
   140032569:	add    BYTE PTR [rax],al
   14003256b:	add    BYTE PTR [rax],al
   14003256d:	add    BYTE PTR [rax],al
   14003256f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140032573:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a9039179
   140032579:	add    BYTE PTR [rax],al
   14003257b:	add    BYTE PTR [rax],al
   14003257d:	add    BYTE PTR [rax],al
   14003257f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140032583:	add    BYTE PTR [rip+0x75006c00],ch        # 0x1b5039189
   140032589:	add    BYTE PTR [rax],al
   14003258b:	add    BYTE PTR [rax],al
   14003258d:	add    BYTE PTR [rax],al
   14003258f:	add    BYTE PTR [rax+rax*1+0x69],ah
   140032593:	add    BYTE PTR [rsi+0x0],dh
   140032596:	sub    eax,0x76006d00
   14003259b:	add    BYTE PTR [rax],al
   14003259d:	add    BYTE PTR [rax],al
   14003259f:	add    BYTE PTR [rbp+0x0],ah
   1400325a2:	ins    BYTE PTR es:[rdi],dx
   1400325a3:	add    BYTE PTR [rip+0x72006700],ch        # 0x1b2038ca9
   1400325a9:	add    BYTE PTR [rax],al
   1400325ab:	add    BYTE PTR [rax],al
   1400325ad:	add    BYTE PTR [rax],al
   1400325af:	add    BYTE PTR [rbp+0x0],ah
   1400325b2:	outs   dx,BYTE PTR ds:[rsi]
   1400325b3:	add    BYTE PTR [rip+0x75006100],ch        # 0x1b50386b9
   1400325b9:	add    BYTE PTR [rax],al
   1400325bb:	add    BYTE PTR [rax],al
   1400325bd:	add    BYTE PTR [rax],al
   1400325bf:	add    BYTE PTR [rbp+0x0],ah
   1400325c2:	outs   dx,BYTE PTR ds:[rsi]
   1400325c3:	add    BYTE PTR [rip+0x7a006200],ch        # 0x1ba0387c9
   1400325c9:	add    BYTE PTR [rax],al
   1400325cb:	add    BYTE PTR [rax],al
   1400325cd:	add    BYTE PTR [rax],al
   1400325cf:	add    BYTE PTR [rbp+0x0],ah
   1400325d2:	outs   dx,BYTE PTR ds:[rsi]
   1400325d3:	add    BYTE PTR [rip+0x61006300],ch        # 0x1a10388d9
   1400325d9:	add    BYTE PTR [rax],al
   1400325db:	add    BYTE PTR [rax],al
   1400325dd:	add    BYTE PTR [rax],al
   1400325df:	add    BYTE PTR [rbp+0x0],ah
   1400325e2:	outs   dx,BYTE PTR ds:[rsi]
   1400325e3:	add    BYTE PTR [rip+0x62006300],ch        # 0x1a20388e9
   1400325e9:	add    BYTE PTR [rax],al
   1400325eb:	add    BYTE PTR [rax],al
   1400325ed:	add    BYTE PTR [rax],al
   1400325ef:	add    BYTE PTR [rbp+0x0],ah
   1400325f2:	outs   dx,BYTE PTR ds:[rsi]
   1400325f3:	add    BYTE PTR [rip+0x62006700],ch        # 0x1a2038cf9
   1400325f9:	add    BYTE PTR [rax],al
   1400325fb:	add    BYTE PTR [rax],al
   1400325fd:	add    BYTE PTR [rax],al
   1400325ff:	add    BYTE PTR [rbp+0x0],ah
   140032602:	outs   dx,BYTE PTR ds:[rsi]
   140032603:	add    BYTE PTR [rip+0x65006900],ch        # 0x1a5038f09
   140032609:	add    BYTE PTR [rax],al
   14003260b:	add    BYTE PTR [rax],al
   14003260d:	add    BYTE PTR [rax],al
   14003260f:	add    BYTE PTR [rbp+0x0],ah
   140032612:	outs   dx,BYTE PTR ds:[rsi]
   140032613:	add    BYTE PTR [rip+0x6d006a00],ch        # 0x1ad039019
   140032619:	add    BYTE PTR [rax],al
   14003261b:	add    BYTE PTR [rax],al
   14003261d:	add    BYTE PTR [rax],al
   14003261f:	add    BYTE PTR [rbp+0x0],ah
   140032622:	outs   dx,BYTE PTR ds:[rsi]
   140032623:	add    BYTE PTR [rip+0x7a006e00],ch        # 0x1ba039429
   140032629:	add    BYTE PTR [rax],al
   14003262b:	add    BYTE PTR [rax],al
   14003262d:	add    BYTE PTR [rax],al
   14003262f:	add    BYTE PTR [rbp+0x0],ah
   140032632:	outs   dx,BYTE PTR ds:[rsi]
   140032633:	add    BYTE PTR [rip+0x68007000],ch        # 0x1a8039639
   140032639:	add    BYTE PTR [rax],al
   14003263b:	add    BYTE PTR [rax],al
   14003263d:	add    BYTE PTR [rax],al
   14003263f:	add    BYTE PTR [rbp+0x0],ah
   140032642:	outs   dx,BYTE PTR ds:[rsi]
   140032643:	add    BYTE PTR [rip+0x74007400],ch        # 0x1b4039a49
   140032649:	add    BYTE PTR [rax],al
   14003264b:	add    BYTE PTR [rax],al
   14003264d:	add    BYTE PTR [rax],al
   14003264f:	add    BYTE PTR [rbp+0x0],ah
   140032652:	outs   dx,BYTE PTR ds:[rsi]
   140032653:	add    BYTE PTR [rip+0x73007500],ch        # 0x1b3039b59
   140032659:	add    BYTE PTR [rax],al
   14003265b:	add    BYTE PTR [rax],al
   14003265d:	add    BYTE PTR [rax],al
   14003265f:	add    BYTE PTR [rbp+0x0],ah
   140032662:	outs   dx,BYTE PTR ds:[rsi]
   140032663:	add    BYTE PTR [rip+0x61007a00],ch        # 0x1a103a069
   140032669:	add    BYTE PTR [rax],al
   14003266b:	add    BYTE PTR [rax],al
   14003266d:	add    BYTE PTR [rax],al
   14003266f:	add    BYTE PTR [rbp+0x0],ah
   140032672:	outs   dx,BYTE PTR ds:[rsi]
   140032673:	add    BYTE PTR [rip+0x77007a00],ch        # 0x1b703a079
   140032679:	add    BYTE PTR [rax],al
   14003267b:	add    BYTE PTR [rax],al
   14003267d:	add    BYTE PTR [rax],al
   14003267f:	add    BYTE PTR [rbp+0x0],ah
   140032682:	jae    0x140032684
   140032684:	sub    eax,0x72006100
   140032689:	add    BYTE PTR [rax],al
   14003268b:	add    BYTE PTR [rax],al
   14003268d:	add    BYTE PTR [rax],al
   14003268f:	add    BYTE PTR [rbp+0x0],ah
   140032692:	jae    0x140032694
   140032694:	sub    eax,0x6f006200
   140032699:	add    BYTE PTR [rax],al
   14003269b:	add    BYTE PTR [rax],al
   14003269d:	add    BYTE PTR [rax],al
   14003269f:	add    BYTE PTR [rbp+0x0],ah
   1400326a2:	jae    0x1400326a4
   1400326a4:	sub    eax,0x6c006300
   1400326a9:	add    BYTE PTR [rax],al
   1400326ab:	add    BYTE PTR [rax],al
   1400326ad:	add    BYTE PTR [rax],al
   1400326af:	add    BYTE PTR [rbp+0x0],ah
   1400326b2:	jae    0x1400326b4
   1400326b4:	sub    eax,0x6f006300
   1400326b9:	add    BYTE PTR [rax],al
   1400326bb:	add    BYTE PTR [rax],al
   1400326bd:	add    BYTE PTR [rax],al
   1400326bf:	add    BYTE PTR [rbp+0x0],ah
   1400326c2:	jae    0x1400326c4
   1400326c4:	sub    eax,0x72006300
   1400326c9:	add    BYTE PTR [rax],al
   1400326cb:	add    BYTE PTR [rax],al
   1400326cd:	add    BYTE PTR [rax],al
   1400326cf:	add    BYTE PTR [rbp+0x0],ah
   1400326d2:	jae    0x1400326d4
   1400326d4:	sub    eax,0x6f006400
   1400326d9:	add    BYTE PTR [rax],al
   1400326db:	add    BYTE PTR [rax],al
   1400326dd:	add    BYTE PTR [rax],al
   1400326df:	add    BYTE PTR [rbp+0x0],ah
   1400326e2:	jae    0x1400326e4
   1400326e4:	sub    eax,0x63006500
   1400326e9:	add    BYTE PTR [rax],al
   1400326eb:	add    BYTE PTR [rax],al
   1400326ed:	add    BYTE PTR [rax],al
   1400326ef:	add    BYTE PTR [rbp+0x0],ah
   1400326f2:	jae    0x1400326f4
   1400326f4:	sub    eax,0x73006500
   1400326f9:	add    BYTE PTR [rax],al
   1400326fb:	add    BYTE PTR [rax],al
   1400326fd:	add    BYTE PTR [rax],al
   1400326ff:	add    BYTE PTR [rbp+0x0],ah
   140032702:	jae    0x140032704
   140032704:	sub    eax,0x74006700
   140032709:	add    BYTE PTR [rax],al
   14003270b:	add    BYTE PTR [rax],al
   14003270d:	add    BYTE PTR [rax],al
   14003270f:	add    BYTE PTR [rbp+0x0],ah
   140032712:	jae    0x140032714
   140032714:	sub    eax,0x6e006800
   140032719:	add    BYTE PTR [rax],al
   14003271b:	add    BYTE PTR [rax],al
   14003271d:	add    BYTE PTR [rax],al
   14003271f:	add    BYTE PTR [rbp+0x0],ah
   140032722:	jae    0x140032724
   140032724:	sub    eax,0x78006d00
   140032729:	add    BYTE PTR [rax],al
   14003272b:	add    BYTE PTR [rax],al
   14003272d:	add    BYTE PTR [rax],al
   14003272f:	add    BYTE PTR [rbp+0x0],ah
   140032732:	jae    0x140032734
   140032734:	sub    eax,0x69006e00
   140032739:	add    BYTE PTR [rax],al
   14003273b:	add    BYTE PTR [rax],al
   14003273d:	add    BYTE PTR [rax],al
   14003273f:	add    BYTE PTR [rbp+0x0],ah
   140032742:	jae    0x140032744
   140032744:	sub    eax,0x61007000
   140032749:	add    BYTE PTR [rax],al
   14003274b:	add    BYTE PTR [rax],al
   14003274d:	add    BYTE PTR [rax],al
   14003274f:	add    BYTE PTR [rbp+0x0],ah
   140032752:	jae    0x140032754
   140032754:	sub    eax,0x65007000
   140032759:	add    BYTE PTR [rax],al
   14003275b:	add    BYTE PTR [rax],al
   14003275d:	add    BYTE PTR [rax],al
   14003275f:	add    BYTE PTR [rbp+0x0],ah
   140032762:	jae    0x140032764
   140032764:	sub    eax,0x72007000
   140032769:	add    BYTE PTR [rax],al
   14003276b:	add    BYTE PTR [rax],al
   14003276d:	add    BYTE PTR [rax],al
   14003276f:	add    BYTE PTR [rbp+0x0],ah
   140032772:	jae    0x140032774
   140032774:	sub    eax,0x79007000
   140032779:	add    BYTE PTR [rax],al
   14003277b:	add    BYTE PTR [rax],al
   14003277d:	add    BYTE PTR [rax],al
   14003277f:	add    BYTE PTR [rbp+0x0],ah
   140032782:	jae    0x140032784
   140032784:	sub    eax,0x76007300
   140032789:	add    BYTE PTR [rax],al
   14003278b:	add    BYTE PTR [rax],al
   14003278d:	add    BYTE PTR [rax],al
   14003278f:	add    BYTE PTR [rbp+0x0],ah
   140032792:	jae    0x140032794
   140032794:	sub    eax,0x79007500
   140032799:	add    BYTE PTR [rax],al
   14003279b:	add    BYTE PTR [rax],al
   14003279d:	add    BYTE PTR [rax],al
   14003279f:	add    BYTE PTR [rbp+0x0],ah
   1400327a2:	jae    0x1400327a4
   1400327a4:	sub    eax,0x65007600
   1400327a9:	add    BYTE PTR [rax],al
   1400327ab:	add    BYTE PTR [rax],al
   1400327ad:	add    BYTE PTR [rax],al
   1400327af:	add    BYTE PTR [rbp+0x0],ah
   1400327b2:	je     0x1400327b4
   1400327b4:	sub    eax,0x65006500
   1400327b9:	add    BYTE PTR [rax],al
   1400327bb:	add    BYTE PTR [rax],al
   1400327bd:	add    BYTE PTR [rax],al
   1400327bf:	add    BYTE PTR [rbp+0x0],ah
   1400327c2:	jne    0x1400327c4
   1400327c4:	sub    eax,0x73006500
   1400327c9:	add    BYTE PTR [rax],al
   1400327cb:	add    BYTE PTR [rax],al
   1400327cd:	add    BYTE PTR [rax],al
   1400327cf:	add    BYTE PTR [rsi+0x0],ah
   1400327d2:	(bad)  
   1400327d3:	add    BYTE PTR [rip+0x72006900],ch        # 0x1b20390d9
   1400327d9:	add    BYTE PTR [rax],al
   1400327db:	add    BYTE PTR [rax],al
   1400327dd:	add    BYTE PTR [rax],al
   1400327df:	add    BYTE PTR [rsi+0x0],ah
   1400327e2:	imul   eax,DWORD PTR [rax],0x66002d
   1400327e8:	imul   eax,DWORD PTR [rax],0x0
   1400327ee:	add    BYTE PTR [rax],al
   1400327f0:	data16 add BYTE PTR [rdi+0x0],ch
   1400327f4:	sub    eax,0x6f006600
   1400327f9:	add    BYTE PTR [rax],al
   1400327fb:	add    BYTE PTR [rax],al
   1400327fd:	add    BYTE PTR [rax],al
   1400327ff:	add    BYTE PTR [rsi+0x0],ah
   140032802:	jb     0x140032804
   140032804:	sub    eax,0x65006200
   140032809:	add    BYTE PTR [rax],al
   14003280b:	add    BYTE PTR [rax],al
   14003280d:	add    BYTE PTR [rax],al
   14003280f:	add    BYTE PTR [rsi+0x0],ah
   140032812:	jb     0x140032814
   140032814:	sub    eax,0x61006300
   140032819:	add    BYTE PTR [rax],al
   14003281b:	add    BYTE PTR [rax],al
   14003281d:	add    BYTE PTR [rax],al
   14003281f:	add    BYTE PTR [rsi+0x0],ah
   140032822:	jb     0x140032824
   140032824:	sub    eax,0x68006300
   140032829:	add    BYTE PTR [rax],al
   14003282b:	add    BYTE PTR [rax],al
   14003282d:	add    BYTE PTR [rax],al
   14003282f:	add    BYTE PTR [rsi+0x0],ah
   140032832:	jb     0x140032834
   140032834:	sub    eax,0x72006600
   140032839:	add    BYTE PTR [rax],al
   14003283b:	add    BYTE PTR [rax],al
   14003283d:	add    BYTE PTR [rax],al
   14003283f:	add    BYTE PTR [rsi+0x0],ah
   140032842:	jb     0x140032844
   140032844:	sub    eax,0x75006c00
   140032849:	add    BYTE PTR [rax],al
   14003284b:	add    BYTE PTR [rax],al
   14003284d:	add    BYTE PTR [rax],al
   14003284f:	add    BYTE PTR [rsi+0x0],ah
   140032852:	jb     0x140032854
   140032854:	sub    eax,0x63006d00
   140032859:	add    BYTE PTR [rax],al
   14003285b:	add    BYTE PTR [rax],al
   14003285d:	add    BYTE PTR [rax],al
   14003285f:	add    BYTE PTR [rdi+0x0],ah
   140032862:	ins    BYTE PTR es:[rdi],dx
   140032863:	add    BYTE PTR [rip+0x73006500],ch        # 0x1b3038d69
   140032869:	add    BYTE PTR [rax],al
   14003286b:	add    BYTE PTR [rax],al
   14003286d:	add    BYTE PTR [rax],al
   14003286f:	add    BYTE PTR [rdi+0x0],ah
   140032872:	jne    0x140032874
   140032874:	sub    eax,0x6e006900
   140032879:	add    BYTE PTR [rax],al
   14003287b:	add    BYTE PTR [rax],al
   14003287d:	add    BYTE PTR [rax],al
   14003287f:	add    BYTE PTR [rax+0x0],ch
   140032882:	add    BYTE PTR gs:[rip+0x6c006900],ch        # 0x1ac039189
   140032889:	add    BYTE PTR [rax],al
   14003288b:	add    BYTE PTR [rax],al
   14003288d:	add    BYTE PTR [rax],al
   14003288f:	add    BYTE PTR [rax+0x0],ch
   140032892:	imul   eax,DWORD PTR [rax],0x69002d
   140032898:	outs   dx,BYTE PTR ds:[rsi]
   140032899:	add    BYTE PTR [rax],al
   14003289b:	add    BYTE PTR [rax],al
   14003289d:	add    BYTE PTR [rax],al
   14003289f:	add    BYTE PTR [rax+0x0],ch
   1400328a2:	jb     0x1400328a4
   1400328a4:	sub    eax,0x61006200
   1400328a9:	add    BYTE PTR [rax],al
   1400328ab:	add    BYTE PTR [rax],al
   1400328ad:	add    BYTE PTR [rax],al
   1400328af:	add    BYTE PTR [rax+0x0],ch
   1400328b2:	jb     0x1400328b4
   1400328b4:	sub    eax,0x72006800
   1400328b9:	add    BYTE PTR [rax],al
   1400328bb:	add    BYTE PTR [rax],al
   1400328bd:	add    BYTE PTR [rax],al
   1400328bf:	add    BYTE PTR [rax+0x0],ch
   1400328c2:	jne    0x1400328c4
   1400328c4:	sub    eax,0x75006800
   1400328c9:	add    BYTE PTR [rax],al
   1400328cb:	add    BYTE PTR [rax],al
   1400328cd:	add    BYTE PTR [rax],al
   1400328cf:	add    BYTE PTR [rax+0x0],ch
   1400328d2:	jns    0x1400328d4
   1400328d4:	sub    eax,0x6d006100
   1400328d9:	add    BYTE PTR [rax],al
   1400328db:	add    BYTE PTR [rax],al
   1400328dd:	add    BYTE PTR [rax],al
   1400328df:	add    BYTE PTR [rcx+0x0],ch
   1400328e2:	add    BYTE PTR fs:[rip+0x64006900],ch        # 0x1a40391e9
   1400328e9:	add    BYTE PTR [rax],al
   1400328eb:	add    BYTE PTR [rax],al
   1400328ed:	add    BYTE PTR [rax],al
   1400328ef:	add    BYTE PTR [rcx+0x0],ch
   1400328f2:	jae    0x1400328f4
   1400328f4:	sub    eax,0x73006900
   1400328f9:	add    BYTE PTR [rax],al
   1400328fb:	add    BYTE PTR [rax],al
   1400328fd:	add    BYTE PTR [rax],al
   1400328ff:	add    BYTE PTR [rcx+0x0],ch
   140032902:	je     0x140032904
   140032904:	sub    eax,0x68006300
   140032909:	add    BYTE PTR [rax],al
   14003290b:	add    BYTE PTR [rax],al
   14003290d:	add    BYTE PTR [rax],al
   14003290f:	add    BYTE PTR [rcx+0x0],ch
   140032912:	je     0x140032914
   140032914:	sub    eax,0x74006900
   140032919:	add    BYTE PTR [rax],al
   14003291b:	add    BYTE PTR [rax],al
   14003291d:	add    BYTE PTR [rax],al
   14003291f:	add    BYTE PTR [rdx+0x0],ch
   140032922:	(bad)  
   140032923:	add    BYTE PTR [rip+0x70006a00],ch        # 0x1b0039329
   140032929:	add    BYTE PTR [rax],al
   14003292b:	add    BYTE PTR [rax],al
   14003292d:	add    BYTE PTR [rax],al
   14003292f:	add    BYTE PTR [rbx+0x0],ch
   140032932:	(bad)  
   140032933:	add    BYTE PTR [rip+0x65006700],ch        # 0x1a5039039
   140032939:	add    BYTE PTR [rax],al
   14003293b:	add    BYTE PTR [rax],al
   14003293d:	add    BYTE PTR [rax],al
   14003293f:	add    BYTE PTR [rbx+0x0],ch
   140032942:	imul   eax,DWORD PTR [rax],0x2d
   140032945:	add    BYTE PTR [rbx+0x0],ch
   140032948:	jp     0x14003294a
   14003294a:	add    BYTE PTR [rax],al
   14003294c:	add    BYTE PTR [rax],al
   14003294e:	add    BYTE PTR [rax],al
   140032950:	imul   eax,DWORD PTR [rax],0x6e
   140032953:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae039259
   140032959:	add    BYTE PTR [rax],al
   14003295b:	add    BYTE PTR [rax],al
   14003295d:	add    BYTE PTR [rax],al
   14003295f:	add    BYTE PTR [rbx+0x0],ch
   140032962:	outs   dx,DWORD PTR ds:[rsi]
   140032963:	add    BYTE PTR [rbx+0x0],ch
   140032966:	sub    eax,0x6e006900
   14003296b:	add    BYTE PTR [rax],al
   14003296d:	add    BYTE PTR [rax],al
   14003296f:	add    BYTE PTR [rbx+0x0],ch
   140032972:	outs   dx,DWORD PTR ds:[rsi]
   140032973:	add    BYTE PTR [rip+0x72006b00],ch        # 0x1b2039479
   140032979:	add    BYTE PTR [rax],al
   14003297b:	add    BYTE PTR [rax],al
   14003297d:	add    BYTE PTR [rax],al
   14003297f:	add    BYTE PTR [rbx+0x0],ch
   140032982:	jns    0x140032984
   140032984:	sub    eax,0x67006b00
   140032989:	add    BYTE PTR [rax],al
   14003298b:	add    BYTE PTR [rax],al
   14003298d:	add    BYTE PTR [rax],al
   14003298f:	add    BYTE PTR [rax+rax*1+0x74],ch
   140032993:	add    BYTE PTR [rip+0x74006c00],ch        # 0x1b4039599
   140032999:	add    BYTE PTR [rax],al
   14003299b:	add    BYTE PTR [rax],al
   14003299d:	add    BYTE PTR [rax],al
   14003299f:	add    BYTE PTR [rax+rax*1+0x76],ch
   1400329a3:	add    BYTE PTR [rip+0x76006c00],ch        # 0x1b60395a9
   1400329a9:	add    BYTE PTR [rax],al
   1400329ab:	add    BYTE PTR [rax],al
   1400329ad:	add    BYTE PTR [rax],al
   1400329af:	add    BYTE PTR [rbp+0x0],ch
   1400329b2:	imul   eax,DWORD PTR [rax],0x6e002d
   1400329b8:	jp     0x1400329ba
   1400329ba:	add    BYTE PTR [rax],al
   1400329bc:	add    BYTE PTR [rax],al
   1400329be:	add    BYTE PTR [rax],al
   1400329c0:	ins    DWORD PTR es:[rdi],dx
   1400329c1:	add    BYTE PTR [rbx+0x0],ch
   1400329c4:	sub    eax,0x6b006d00
   1400329c9:	add    BYTE PTR [rax],al
   1400329cb:	add    BYTE PTR [rax],al
   1400329cd:	add    BYTE PTR [rax],al
   1400329cf:	add    BYTE PTR [rbp+0x0],ch
   1400329d2:	ins    BYTE PTR es:[rdi],dx
   1400329d3:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae0392d9
   1400329d9:	add    BYTE PTR [rax],al
   1400329db:	add    BYTE PTR [rax],al
   1400329dd:	add    BYTE PTR [rax],al
   1400329df:	add    BYTE PTR [rbp+0x0],ch
   1400329e2:	outs   dx,BYTE PTR ds:[rsi]
   1400329e3:	add    BYTE PTR [rip+0x6e006d00],ch        # 0x1ae0396e9
   1400329e9:	add    BYTE PTR [rax],al
   1400329eb:	add    BYTE PTR [rax],al
   1400329ed:	add    BYTE PTR [rax],al
   1400329ef:	add    BYTE PTR [rbp+0x0],ch
   1400329f2:	jb     0x1400329f4
   1400329f4:	sub    eax,0x6e006900
   1400329f9:	add    BYTE PTR [rax],al
   1400329fb:	add    BYTE PTR [rax],al
   1400329fd:	add    BYTE PTR [rax],al
   1400329ff:	add    BYTE PTR [rbp+0x0],ch
   140032a02:	jae    0x140032a04
   140032a04:	sub    eax,0x6e006200
   140032a09:	add    BYTE PTR [rax],al
   140032a0b:	add    BYTE PTR [rax],al
   140032a0d:	add    BYTE PTR [rax],al
   140032a0f:	add    BYTE PTR [rbp+0x0],ch
   140032a12:	jae    0x140032a14
   140032a14:	sub    eax,0x79006d00
   140032a19:	add    BYTE PTR [rax],al
   140032a1b:	add    BYTE PTR [rax],al
   140032a1d:	add    BYTE PTR [rax],al
   140032a1f:	add    BYTE PTR [rbp+0x0],ch
   140032a22:	je     0x140032a24
   140032a24:	sub    eax,0x74006d00
   140032a29:	add    BYTE PTR [rax],al
   140032a2b:	add    BYTE PTR [rax],al
   140032a2d:	add    BYTE PTR [rax],al
   140032a2f:	add    BYTE PTR [rsi+0x0],ch
   140032a32:	(bad)  
   140032a33:	add    BYTE PTR [rip+0x6f006e00],ch        # 0x1af039839
   140032a39:	add    BYTE PTR [rax],al
   140032a3b:	add    BYTE PTR [rax],al
   140032a3d:	add    BYTE PTR [rax],al
   140032a3f:	add    BYTE PTR [rsi+0x0],ch
   140032a42:	ins    BYTE PTR es:[rdi],dx
   140032a43:	add    BYTE PTR [rip+0x65006200],ch        # 0x1a5038c49
   140032a49:	add    BYTE PTR [rax],al
   140032a4b:	add    BYTE PTR [rax],al
   140032a4d:	add    BYTE PTR [rax],al
   140032a4f:	add    BYTE PTR [rsi+0x0],ch
   140032a52:	ins    BYTE PTR es:[rdi],dx
   140032a53:	add    BYTE PTR [rip+0x6c006e00],ch        # 0x1ac039859
   140032a59:	add    BYTE PTR [rax],al
   140032a5b:	add    BYTE PTR [rax],al
   140032a5d:	add    BYTE PTR [rax],al
   140032a5f:	add    BYTE PTR [rsi+0x0],ch
   140032a62:	outs   dx,BYTE PTR ds:[rsi]
   140032a63:	add    BYTE PTR [rip+0x6f006e00],ch        # 0x1af039869
   140032a69:	add    BYTE PTR [rax],al
   140032a6b:	add    BYTE PTR [rax],al
   140032a6d:	add    BYTE PTR [rax],al
   140032a6f:	add    BYTE PTR [rsi+0x0],ch
   140032a72:	jae    0x140032a74
   140032a74:	sub    eax,0x61007a00
   140032a79:	add    BYTE PTR [rax],al
   140032a7b:	add    BYTE PTR [rax],al
   140032a7d:	add    BYTE PTR [rax],al
   140032a7f:	add    BYTE PTR [rax+0x0],dh
   140032a82:	(bad)  
   140032a83:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae039389
   140032a89:	add    BYTE PTR [rax],al
   140032a8b:	add    BYTE PTR [rax],al
   140032a8d:	add    BYTE PTR [rax],al
   140032a8f:	add    BYTE PTR [rax+0x0],dh
   140032a92:	ins    BYTE PTR es:[rdi],dx
   140032a93:	add    BYTE PTR [rip+0x6c007000],ch        # 0x1ac039a99
   140032a99:	add    BYTE PTR [rax],al
   140032a9b:	add    BYTE PTR [rax],al
   140032a9d:	add    BYTE PTR [rax],al
   140032a9f:	add    BYTE PTR [rax+0x0],dh
   140032aa2:	je     0x140032aa4
   140032aa4:	sub    eax,0x72006200
   140032aa9:	add    BYTE PTR [rax],al
   140032aab:	add    BYTE PTR [rax],al
   140032aad:	add    BYTE PTR [rax],al
   140032aaf:	add    BYTE PTR [rax+0x0],dh
   140032ab2:	je     0x140032ab4
   140032ab4:	sub    eax,0x74007000
   140032ab9:	add    BYTE PTR [rax],al
   140032abb:	add    BYTE PTR [rax],al
   140032abd:	add    BYTE PTR [rax],al
   140032abf:	add    BYTE PTR [rcx+0x0],dh
   140032ac2:	jne    0x140032ac4
   140032ac4:	jp     0x140032ac6
   140032ac6:	sub    eax,0x6f006200
   140032acb:	add    BYTE PTR [rax],al
   140032acd:	add    BYTE PTR [rax],al
   140032acf:	add    BYTE PTR [rcx+0x0],dh
   140032ad2:	jne    0x140032ad4
   140032ad4:	jp     0x140032ad6
   140032ad6:	sub    eax,0x63006500
   140032adb:	add    BYTE PTR [rax],al
   140032add:	add    BYTE PTR [rax],al
   140032adf:	add    BYTE PTR [rcx+0x0],dh
   140032ae2:	jne    0x140032ae4
   140032ae4:	jp     0x140032ae6
   140032ae6:	sub    eax,0x65007000
   140032aeb:	add    BYTE PTR [rax],al
   140032aed:	add    BYTE PTR [rax],al
   140032aef:	add    BYTE PTR [rdx+0x0],dh
   140032af2:	outs   dx,DWORD PTR ds:[rsi]
   140032af3:	add    BYTE PTR [rip+0x6f007200],ch        # 0x1af039cf9
   140032af9:	add    BYTE PTR [rax],al
   140032afb:	add    BYTE PTR [rax],al
   140032afd:	add    BYTE PTR [rax],al
   140032aff:	add    BYTE PTR [rdx+0x0],dh
   140032b02:	jne    0x140032b04
   140032b04:	sub    eax,0x75007200
   140032b09:	add    BYTE PTR [rax],al
   140032b0b:	add    BYTE PTR [rax],al
   140032b0d:	add    BYTE PTR [rax],al
   140032b0f:	add    BYTE PTR [rbx+0x0],dh
   140032b12:	(bad)  
   140032b13:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae039419
   140032b19:	add    BYTE PTR [rax],al
   140032b1b:	add    BYTE PTR [rax],al
   140032b1d:	add    BYTE PTR [rax],al
   140032b1f:	add    BYTE PTR [rbx+0x0],dh
   140032b22:	add    BYTE PTR gs:[rip+0x69006600],ch        # 0x1a9039129
   140032b29:	add    BYTE PTR [rax],al
   140032b2b:	add    BYTE PTR [rax],al
   140032b2d:	add    BYTE PTR [rax],al
   140032b2f:	add    BYTE PTR [rbx+0x0],dh
   140032b32:	add    BYTE PTR gs:[rip+0x6f006e00],ch        # 0x1af039939
   140032b39:	add    BYTE PTR [rax],al
   140032b3b:	add    BYTE PTR [rax],al
   140032b3d:	add    BYTE PTR [rax],al
   140032b3f:	add    BYTE PTR [rbx+0x0],dh
   140032b42:	add    BYTE PTR gs:[rip+0x65007300],ch        # 0x1a5039e49
   140032b49:	add    BYTE PTR [rax],al
   140032b4b:	add    BYTE PTR [rax],al
   140032b4d:	add    BYTE PTR [rax],al
   140032b4f:	add    BYTE PTR [rbx+0x0],dh
   140032b52:	imul   eax,DWORD PTR [rax],0x2d
   140032b55:	add    BYTE PTR [rbx+0x0],dh
   140032b58:	imul   eax,DWORD PTR [rax],0x0
   140032b5b:	add    BYTE PTR [rax],al
   140032b5d:	add    BYTE PTR [rax],al
   140032b5f:	add    BYTE PTR [rbx+0x0],dh
   140032b62:	ins    BYTE PTR es:[rdi],dx
   140032b63:	add    BYTE PTR [rip+0x69007300],ch        # 0x1a9039e69
   140032b69:	add    BYTE PTR [rax],al
   140032b6b:	add    BYTE PTR [rax],al
   140032b6d:	add    BYTE PTR [rax],al
   140032b6f:	add    BYTE PTR [rbx+0x0],dh
   140032b72:	ins    DWORD PTR es:[rdi],dx
   140032b73:	add    BYTE PTR [rcx+0x0],ah
   140032b76:	sub    eax,0x6f006e00
   140032b7b:	add    BYTE PTR [rax],al
   140032b7d:	add    BYTE PTR [rax],al
   140032b7f:	add    BYTE PTR [rbx+0x0],dh
   140032b82:	ins    DWORD PTR es:[rdi],dx
   140032b83:	add    BYTE PTR [rcx+0x0],ah
   140032b86:	sub    eax,0x65007300
   140032b8b:	add    BYTE PTR [rax],al
   140032b8d:	add    BYTE PTR [rax],al
   140032b8f:	add    BYTE PTR [rbx+0x0],dh
   140032b92:	ins    DWORD PTR es:[rdi],dx
   140032b93:	add    BYTE PTR [rdx+0x0],ch
   140032b96:	sub    eax,0x6f006e00
   140032b9b:	add    BYTE PTR [rax],al
   140032b9d:	add    BYTE PTR [rax],al
   140032b9f:	add    BYTE PTR [rbx+0x0],dh
   140032ba2:	ins    DWORD PTR es:[rdi],dx
   140032ba3:	add    BYTE PTR [rdx+0x0],ch
   140032ba6:	sub    eax,0x65007300
   140032bab:	add    BYTE PTR [rax],al
   140032bad:	add    BYTE PTR [rax],al
   140032baf:	add    BYTE PTR [rbx+0x0],dh
   140032bb2:	ins    DWORD PTR es:[rdi],dx
   140032bb3:	add    BYTE PTR [rsi+0x0],ch
   140032bb6:	sub    eax,0x69006600
   140032bbb:	add    BYTE PTR [rax],al
   140032bbd:	add    BYTE PTR [rax],al
   140032bbf:	add    BYTE PTR [rbx+0x0],dh
   140032bc2:	ins    DWORD PTR es:[rdi],dx
   140032bc3:	add    BYTE PTR [rbx+0x0],dh
   140032bc6:	sub    eax,0x69006600
   140032bcb:	add    BYTE PTR [rax],al
   140032bcd:	add    BYTE PTR [rax],al
   140032bcf:	add    BYTE PTR [rbx+0x0],dh
   140032bd2:	jno    0x140032bd4
   140032bd4:	sub    eax,0x6c006100
   140032bd9:	add    BYTE PTR [rax],al
   140032bdb:	add    BYTE PTR [rax],al
   140032bdd:	add    BYTE PTR [rax],al
   140032bdf:	add    BYTE PTR [rbx+0x0],dh
   140032be2:	jb     0x140032be4
   140032be4:	sub    eax,0x61006200
   140032be9:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b9038eef
   140032bef:	add    BYTE PTR [rdx+0x0],dh
   140032bf2:	ins    BYTE PTR es:[rdi],dx
   140032bf3:	add    BYTE PTR [rax],al
   140032bf5:	add    BYTE PTR [rax],al
   140032bf7:	add    BYTE PTR [rbx+0x0],dh
   140032bfa:	jb     0x140032bfc
   140032bfc:	sub    eax,0x61006200
   140032c01:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a1039807
   140032c07:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140032c0b:	add    BYTE PTR [rax],al
   140032c0d:	add    BYTE PTR [rax],al
   140032c0f:	add    BYTE PTR [rbx+0x0],dh
   140032c12:	jb     0x140032c14
   140032c14:	sub    eax,0x70007300
   140032c19:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b9038f1f
   140032c1f:	add    BYTE PTR [rdx+0x0],dh
   140032c22:	ins    BYTE PTR es:[rdi],dx
   140032c23:	add    BYTE PTR [rax],al
   140032c25:	add    BYTE PTR [rax],al
   140032c27:	add    BYTE PTR [rbx+0x0],dh
   140032c2a:	jb     0x140032c2c
   140032c2c:	sub    eax,0x70007300
   140032c31:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a1039837
   140032c37:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140032c3b:	add    BYTE PTR [rax],al
   140032c3d:	add    BYTE PTR [rax],al
   140032c3f:	add    BYTE PTR [rbx+0x0],dh
   140032c42:	jbe    0x140032c44
   140032c44:	sub    eax,0x69006600
   140032c49:	add    BYTE PTR [rax],al
   140032c4b:	add    BYTE PTR [rax],al
   140032c4d:	add    BYTE PTR [rax],al
   140032c4f:	add    BYTE PTR [rbx+0x0],dh
   140032c52:	jbe    0x140032c54
   140032c54:	sub    eax,0x65007300
   140032c59:	add    BYTE PTR [rax],al
   140032c5b:	add    BYTE PTR [rax],al
   140032c5d:	add    BYTE PTR [rax],al
   140032c5f:	add    BYTE PTR [rbx+0x0],dh
   140032c62:	ja     0x140032c64
   140032c64:	sub    eax,0x65006b00
   140032c69:	add    BYTE PTR [rax],al
   140032c6b:	add    BYTE PTR [rax],al
   140032c6d:	add    BYTE PTR [rax],al
   140032c6f:	add    BYTE PTR [rbx+0x0],dh
   140032c72:	jns    0x140032c74
   140032c74:	jb     0x140032c76
   140032c76:	sub    eax,0x79007300
   140032c7b:	add    BYTE PTR [rax],al
   140032c7d:	add    BYTE PTR [rax],al
   140032c7f:	add    BYTE PTR [rax+rax*1+0x61],dh
   140032c83:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae039589
   140032c89:	add    BYTE PTR [rax],al
   140032c8b:	add    BYTE PTR [rax],al
   140032c8d:	add    BYTE PTR [rax],al
   140032c8f:	add    BYTE PTR [rax+rax*1+0x65],dh
   140032c93:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae039599
   140032c99:	add    BYTE PTR [rax],al
   140032c9b:	add    BYTE PTR [rax],al
   140032c9d:	add    BYTE PTR [rax],al
   140032c9f:	add    BYTE PTR [rax+rax*1+0x68],dh
   140032ca3:	add    BYTE PTR [rip+0x68007400],ch        # 0x1a803a0a9
   140032ca9:	add    BYTE PTR [rax],al
   140032cab:	add    BYTE PTR [rax],al
   140032cad:	add    BYTE PTR [rax],al
   140032caf:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140032cb3:	add    BYTE PTR [rip+0x61007a00],ch        # 0x1a103a6b9
   140032cb9:	add    BYTE PTR [rax],al
   140032cbb:	add    BYTE PTR [rax],al
   140032cbd:	add    BYTE PTR [rax],al
   140032cbf:	add    BYTE PTR [rax+rax*1+0x72],dh
   140032cc3:	add    BYTE PTR [rip+0x72007400],ch        # 0x1b203a0c9
   140032cc9:	add    BYTE PTR [rax],al
   140032ccb:	add    BYTE PTR [rax],al
   140032ccd:	add    BYTE PTR [rax],al
   140032ccf:	add    BYTE PTR [rax+rax*1+0x74],dh
   140032cd3:	add    BYTE PTR [rip+0x75007200],ch        # 0x1b5039ed9
   140032cd9:	add    BYTE PTR [rax],al
   140032cdb:	add    BYTE PTR [rax],al
   140032cdd:	add    BYTE PTR [rax],al
   140032cdf:	add    BYTE PTR [rbp+0x0],dh
   140032ce2:	imul   eax,DWORD PTR [rax],0x2d
   140032ce5:	add    BYTE PTR [rbp+0x0],dh
   140032ce8:	(bad)  
   140032ce9:	add    BYTE PTR [rax],al
   140032ceb:	add    BYTE PTR [rax],al
   140032ced:	add    BYTE PTR [rax],al
   140032cef:	add    BYTE PTR [rbp+0x0],dh
   140032cf2:	jb     0x140032cf4
   140032cf4:	sub    eax,0x6b007000
   140032cf9:	add    BYTE PTR [rax],al
   140032cfb:	add    BYTE PTR [rax],al
   140032cfd:	add    BYTE PTR [rax],al
   140032cff:	add    BYTE PTR [rbp+0x0],dh
   140032d02:	jp     0x140032d04
   140032d04:	sub    eax,0x7a007500
   140032d09:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b903900f
   140032d0f:	add    BYTE PTR [rdx+0x0],dh
   140032d12:	ins    BYTE PTR es:[rdi],dx
   140032d13:	add    BYTE PTR [rax],al
   140032d15:	add    BYTE PTR [rax],al
   140032d17:	add    BYTE PTR [rbp+0x0],dh
   140032d1a:	jp     0x140032d1c
   140032d1c:	sub    eax,0x7a007500
   140032d21:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a1039927
   140032d27:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140032d2b:	add    BYTE PTR [rax],al
   140032d2d:	add    BYTE PTR [rax],al
   140032d2f:	add    BYTE PTR [rsi+0x0],dh
   140032d32:	imul   eax,DWORD PTR [rax],0x76002d
   140032d38:	outs   dx,BYTE PTR ds:[rsi]
   140032d39:	add    BYTE PTR [rax],al
   140032d3b:	add    BYTE PTR [rax],al
   140032d3d:	add    BYTE PTR [rax],al
   140032d3f:	add    BYTE PTR [rax+0x0],bh
   140032d42:	push   0x7a002d00
   140032d47:	add    BYTE PTR [rcx+0x0],ah
   140032d4a:	add    BYTE PTR [rax],al
   140032d4c:	add    BYTE PTR [rax],al
   140032d4e:	add    BYTE PTR [rax],al
   140032d50:	jp     0x140032d52
   140032d52:	push   0x63002d00
   140032d57:	add    BYTE PTR [rax+0x0],ch
   140032d5a:	jae    0x140032d5c
   140032d5c:	add    BYTE PTR [rax],al
   140032d5e:	add    BYTE PTR [rax],al
   140032d60:	jp     0x140032d62
   140032d62:	push   0x63002d00
   140032d67:	add    BYTE PTR [rax+0x0],ch
   140032d6a:	je     0x140032d6c
   140032d6c:	add    BYTE PTR [rax],al
   140032d6e:	add    BYTE PTR [rax],al
   140032d70:	jp     0x140032d72
   140032d72:	push   0x63002d00
   140032d77:	add    BYTE PTR [rsi+0x0],ch
   140032d7a:	add    BYTE PTR [rax],al
   140032d7c:	add    BYTE PTR [rax],al
   140032d7e:	add    BYTE PTR [rax],al
   140032d80:	jp     0x140032d82
   140032d82:	push   0x68002d00
   140032d87:	add    BYTE PTR [rbx+0x0],ch
   140032d8a:	add    BYTE PTR [rax],al
   140032d8c:	add    BYTE PTR [rax],al
   140032d8e:	add    BYTE PTR [rax],al
   140032d90:	jp     0x140032d92
   140032d92:	push   0x6d002d00
   140032d97:	add    BYTE PTR [rdi+0x0],ch
   140032d9a:	add    BYTE PTR [rax],al
   140032d9c:	add    BYTE PTR [rax],al
   140032d9e:	add    BYTE PTR [rax],al
   140032da0:	jp     0x140032da2
   140032da2:	push   0x73002d00
   140032da7:	add    BYTE PTR [rdi+0x0],ah
   140032daa:	add    BYTE PTR [rax],al
   140032dac:	add    BYTE PTR [rax],al
   140032dae:	add    BYTE PTR [rax],al
   140032db0:	jp     0x140032db2
   140032db2:	push   0x74002d00
   140032db7:	add    BYTE PTR [rdi+0x0],dh
   140032dba:	add    BYTE PTR [rax],al
   140032dbc:	add    BYTE PTR [rax],al
   140032dbe:	add    BYTE PTR [rax],al
   140032dc0:	jp     0x140032dc2
   140032dc2:	jne    0x140032dc4
   140032dc4:	sub    eax,0x61007a00
   140032dc9:	add    BYTE PTR [rax],al
   140032dcb:	add    BYTE PTR [rax],al
   140032dcd:	add    BYTE PTR [rax],al
   140032dcf:	add    BYTE PTR [rcx+0x0],al
   140032dd2:	add    BYTE PTR [rsi+0x0],r10b
   140032dd6:	add    BYTE PTR [r8+0x0],dl
   140032dda:	rex.WB add BYTE PTR [r11],sil
   140032ddd:	add    BYTE PTR [rdx],dh
   140032ddf:	add    BYTE PTR [rsi],ch
   140032de1:	add    BYTE PTR [rax+rax*1+0x4c],al
   140032de5:	add    BYTE PTR [rax+rax*1+0x0],cl
   140032de9:	add    BYTE PTR [rax],al
   140032deb:	add    BYTE PTR [rax],al
   140032ded:	add    BYTE PTR [rax],al
   140032def:	add    BYTE PTR [rbx+0x79],dl
   140032df2:	jae    0x140032e68
   140032df4:	gs ins DWORD PTR es:[rdi],dx
   140032df6:	rex.RX jne 0x140032e67
   140032df9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140032dfd:	outs   dx,BYTE PTR ds:[rsi]
   140032dfe:	xor    BYTE PTR [rbx],dh
   140032e00:	add    BYTE PTR ss:[rax],al
   140032e03:	add    BYTE PTR [rax],al
   140032e05:	add    BYTE PTR [rax],al
   140032e07:	add    BYTE PTR [rax],bl
   140032e09:	sbb    al,BYTE PTR [rbx]
   140032e0b:	rex add DWORD PTR [rax],eax
   140032e0e:	add    BYTE PTR [rax],al
   140032e10:	or     BYTE PTR [rsi],bl
   140032e12:	add    eax,DWORD PTR [rax+0x1]
   140032e15:	add    BYTE PTR [rax],al
   140032e17:	add    BYTE PTR [rax],ch
   140032e19:	sbb    al,BYTE PTR [rbx]
   140032e1b:	rex add DWORD PTR [rax],eax
   140032e1e:	add    BYTE PTR [rax],al
   140032e20:	pop    rax
   140032e21:	sbb    DWORD PTR [rbx],eax
   140032e23:	rex add DWORD PTR [rax],eax
   140032e26:	add    BYTE PTR [rax],al
   140032e28:	push   rbx
   140032e29:	jne    0x140032e99
   140032e2b:	add    BYTE PTR [rbp+0x6f],cl
   140032e2e:	outs   dx,BYTE PTR ds:[rsi]
   140032e2f:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   140032e33:	add    BYTE PTR [rdi+0x65],dl
   140032e36:	add    BYTE PTR fs:[rax+rbp*2+0x75],dl
   140032e3b:	add    BYTE PTR [rsi+0x72],al
   140032e3e:	imul   eax,DWORD PTR [rax],0x746153
   140032e44:	push   rbx
   140032e45:	jne    0x140032eb5
   140032e47:	fs (bad) 
   140032e49:	jns    0x140032e4b
   140032e4b:	add    BYTE PTR [rbp+0x6f],cl
   140032e4e:	outs   dx,BYTE PTR ds:[rsi]
   140032e4f:	fs (bad) 
   140032e51:	jns    0x140032e53
   140032e53:	add    BYTE PTR [rax],al
   140032e55:	add    BYTE PTR [rax],al
   140032e57:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   140032e5b:	jae    0x140032ec1
   140032e5d:	(bad)  
   140032e5e:	jns    0x140032e60
   140032e60:	push   rdi
   140032e61:	gs outs dx,BYTE PTR fs:[rsi]
   140032e64:	gs jae 0x140032ecb
   140032e67:	(bad)  
   140032e68:	jns    0x140032e6a
   140032e6a:	add    BYTE PTR [rax],al
   140032e6c:	add    BYTE PTR [rax],al
   140032e6e:	add    BYTE PTR [rax],al
   140032e70:	push   rsp
   140032e71:	push   0x64737275
   140032e76:	(bad)  
   140032e77:	jns    0x140032e79
   140032e79:	add    BYTE PTR [rax],al
   140032e7b:	add    BYTE PTR [rsi+0x72],al
   140032e7e:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   140032e86:	add    BYTE PTR [rax],al
   140032e88:	push   rbx
   140032e89:	(bad)  
   140032e8a:	je     0x140032f01
   140032e8c:	jb     0x140032ef2
   140032e8e:	(bad)  
   140032e8f:	jns    0x140032e91
   140032e91:	add    BYTE PTR [rax],al
   140032e93:	add    BYTE PTR [rdx+0x61],cl
   140032e96:	outs   dx,BYTE PTR ds:[rsi]
   140032e97:	add    BYTE PTR [rsi+0x65],al
   140032e9a:	(bad)  
   140032e9b:	add    BYTE PTR [rbp+0x61],cl
   140032e9e:	jb     0x140032ea0
   140032ea0:	rex.B jo 0x140032f15
   140032ea3:	add    BYTE PTR [rbp+0x61],cl
   140032ea6:	jns    0x140032ea8
   140032ea8:	rex.WX jne 0x140032f19
   140032eab:	add    BYTE PTR [rdx+0x75],cl
   140032eae:	ins    BYTE PTR es:[rdi],dx
   140032eaf:	add    BYTE PTR [rcx+0x75],al
   140032eb2:	add    BYTE PTR [ebx+0x65],dl
   140032eb6:	jo     0x140032eb8
   140032eb8:	movsxd r14,DWORD PTR [r8+r8*1+0x4e]
   140032ebd:	outs   dx,DWORD PTR ds:[rsi]
   140032ebe:	jbe    0x140032ec0
   140032ec0:	rex.R
   140032ec1:	movsxd eax,DWORD PTR gs:[rax]
   140032ec4:	add    BYTE PTR [rax],al
   140032ec6:	add    BYTE PTR [rax],al
   140032ec8:	rex.WX (bad) 
   140032eca:	outs   dx,BYTE PTR ds:[rsi]
   140032ecb:	jne    0x140032f2e
   140032ecd:	jb     0x140032f48
   140032ecf:	add    BYTE PTR [rsi+0x65],al
   140032ed2:	(bad)
   140032ed7:	jns    0x140032ed9
   140032ed9:	add    BYTE PTR [rax],al
   140032edb:	add    BYTE PTR [rbp+0x61],cl
   140032ede:	jb     0x140032f43
   140032ee0:	push   0x41000000
   140032ee5:	jo     0x140032f59
   140032ee7:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x6e754a00
   140032eef:	add    BYTE PTR gs:[rax],al
   140032ef2:	add    BYTE PTR [rax],al
   140032ef4:	rex.WX jne 0x140032f63
   140032ef7:	jns    0x140032ef9
   140032ef9:	add    BYTE PTR [rax],al
   140032efb:	add    BYTE PTR [rcx+0x75],al
   140032efe:	addr32 jne 0x140032f74
   140032f01:	je     0x140032f03
   140032f03:	add    BYTE PTR [rax],al
   140032f05:	add    BYTE PTR [rax],al
   140032f07:	add    BYTE PTR [rbx+0x65],dl
   140032f0a:	jo     0x140032f80
   140032f0c:	gs ins DWORD PTR es:[rdi],dx
   140032f0e:	(bad)  
   140032f0f:	gs jb  0x140032f12
   140032f12:	add    BYTE PTR [rax],al
   140032f14:	add    BYTE PTR [rax],al
   140032f16:	add    BYTE PTR [rax],al
   140032f18:	movsxd r14,DWORD PTR [r15+r13*2+0x62]
   140032f1d:	gs jb  0x140032f20
   140032f20:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140032f22:	jbe    0x140032f89
   140032f24:	ins    DWORD PTR es:[rdi],dx
   140032f25:	(bad)  
   140032f26:	gs jb  0x140032f29
   140032f29:	add    BYTE PTR [rax],al
   140032f2b:	add    BYTE PTR [rax],al
   140032f2d:	add    BYTE PTR [rax],al
   140032f2f:	add    BYTE PTR [rbp+riz*2+0x63],al
   140032f33:	gs ins DWORD PTR es:[rdi],dx
   140032f35:	(bad)  
   140032f36:	gs jb  0x140032f39
   140032f39:	add    BYTE PTR [rax],al
   140032f3b:	add    BYTE PTR [rcx+0x4d],al
   140032f3e:	add    BYTE PTR [rax],al
   140032f40:	push   rax
   140032f41:	rex.WRB add BYTE PTR [r8],r8b
   140032f44:	add    BYTE PTR [rax],al
   140032f46:	add    BYTE PTR [rax],al
   140032f48:	rex.WRB
   140032f49:	rex.WRB (bad) 
   140032f4b:	fs fs (bad) 
   140032f4e:	jns    0x140032fc9
	...
   140032f58:	fs fs fs fs sub al,0x20
   140032f5e:	rex.WRB
   140032f5f:	rex.WRB
   140032f60:	rex.WRB
   140032f61:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   140032f66:	and    BYTE PTR [rcx+0x79],bh
   140032f69:	jns    0x140032fe4
   140032f6b:	add    BYTE PTR [rax],al
   140032f6d:	add    BYTE PTR [rax],al
   140032f6f:	add    BYTE PTR [rax+0x48],cl
   140032f72:	cmp    ch,BYTE PTR [rbp+0x6d]
   140032f75:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   140032f80:	push   rbx
   140032f81:	add    BYTE PTR [rbp+0x0],dh
   140032f84:	outs   dx,BYTE PTR ds:[rsi]
   140032f85:	add    BYTE PTR [rax],al
   140032f87:	add    BYTE PTR [rbp+0x0],cl
   140032f8a:	outs   dx,DWORD PTR ds:[rsi]
   140032f8b:	add    BYTE PTR [rsi+0x0],ch
   140032f8e:	add    BYTE PTR [rax],al
   140032f90:	push   rsp
   140032f91:	add    BYTE PTR [rbp+0x0],dh
   140032f94:	add    BYTE PTR gs:[rax],al
   140032f97:	add    BYTE PTR [rdi+0x0],dl
   140032f9a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140032f9f:	add    BYTE PTR [rax+rax*1+0x68],dl
   140032fa3:	add    BYTE PTR [rbp+0x0],dh
   140032fa6:	add    BYTE PTR [rax],al
   140032fa8:	rex.RX add BYTE PTR [rdx+0x0],r14b
   140032fac:	imul   eax,DWORD PTR [rax],0x530000
   140032fb2:	(bad)  
   140032fb3:	add    BYTE PTR [rax+rax*1+0x0],dh
   140032fb7:	add    BYTE PTR [rbx+0x0],dl
   140032fba:	jne    0x140032fbc
   140032fbc:	outs   dx,BYTE PTR ds:[rsi]
   140032fbd:	add    BYTE PTR [rax+rax*1+0x61],ah
   140032fc1:	add    BYTE PTR [rcx+0x0],bh
   140032fc4:	add    BYTE PTR [rax],al
   140032fc6:	add    BYTE PTR [rax],al
   140032fc8:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140032fcc:	outs   dx,BYTE PTR ds:[rsi]
   140032fcd:	add    BYTE PTR [rax+rax*1+0x61],ah
   140032fd1:	add    BYTE PTR [rcx+0x0],bh
   140032fd4:	add    BYTE PTR [rax],al
   140032fd6:	add    BYTE PTR [rax],al
   140032fd8:	push   rsp
   140032fd9:	add    BYTE PTR [rbp+0x0],dh
   140032fdc:	add    BYTE PTR gs:[rbx+0x0],dh
   140032fe0:	add    BYTE PTR fs:[rcx+0x0],ah
   140032fe4:	jns    0x140032fe6
   140032fe6:	add    BYTE PTR [rax],al
   140032fe8:	push   rdi
   140032fe9:	add    BYTE PTR [rbp+0x0],ah
   140032fec:	add    BYTE PTR fs:[rsi+0x0],ch
   140032ff0:	add    BYTE PTR gs:[rbx+0x0],dh
   140032ff4:	add    BYTE PTR fs:[rcx+0x0],ah
   140032ff8:	jns    0x140032ffa
   140032ffa:	add    BYTE PTR [rax],al
   140032ffc:	add    BYTE PTR [rax],al
   140032ffe:	add    BYTE PTR [rax],al
   140033000:	push   rsp
   140033001:	add    BYTE PTR [rax+0x0],ch
   140033004:	jne    0x140033006
   140033006:	jb     0x140033008
   140033008:	jae    0x14003300a
   14003300a:	add    BYTE PTR fs:[rcx+0x0],ah
   14003300e:	jns    0x140033010
	...
   140033018:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14003301c:	imul   eax,DWORD PTR [rax],0x610064
   140033022:	jns    0x140033024
   140033024:	add    BYTE PTR [rax],al
   140033026:	add    BYTE PTR [rax],al
   140033028:	push   rbx
   140033029:	add    BYTE PTR [rcx+0x0],ah
   14003302c:	je     0x14003302e
   14003302e:	jne    0x140033030
   140033030:	jb     0x140033032
   140033032:	add    BYTE PTR fs:[rcx+0x0],ah
   140033036:	jns    0x140033038
	...
   140033040:	rex.WX add BYTE PTR [rcx+0x0],spl
   140033044:	outs   dx,BYTE PTR ds:[rsi]
   140033045:	add    BYTE PTR [rax],al
   140033047:	add    BYTE PTR [rsi+0x0],al
   14003304a:	add    BYTE PTR gs:[rdx+0x0],ah
   14003304e:	add    BYTE PTR [rax],al
   140033050:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140033054:	jb     0x140033056
   140033056:	add    BYTE PTR [rax],al
   140033058:	add    BYTE PTR [r8+0x0],sil
   14003305c:	jb     0x14003305e
   14003305e:	add    BYTE PTR [rax],al
   140033060:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140033064:	jns    0x140033066
   140033066:	add    BYTE PTR [rax],al
   140033068:	rex.WX add BYTE PTR [rbp+0x0],sil
   14003306c:	outs   dx,BYTE PTR ds:[rsi]
   14003306d:	add    BYTE PTR [rax],al
   14003306f:	add    BYTE PTR [rdx+0x0],cl
   140033072:	jne    0x140033074
   140033074:	ins    BYTE PTR es:[rdi],dx
   140033075:	add    BYTE PTR [rax],al
   140033077:	add    BYTE PTR [rcx+0x0],al
   14003307a:	jne    0x14003307c
   14003307c:	add    BYTE PTR [eax],al
   14003307f:	add    BYTE PTR [rbx+0x0],dl
   140033082:	add    BYTE PTR gs:[rax+0x0],dh
   140033086:	add    BYTE PTR [rax],al
   140033088:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14003308c:	je     0x14003308e
   14003308e:	add    BYTE PTR [rax],al
   140033090:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140033094:	jbe    0x140033096
   140033096:	add    BYTE PTR [rax],al
   140033098:	add    BYTE PTR [rbp+0x0],r12b
   14003309c:	movsxd eax,DWORD PTR [rax]
   14003309e:	add    BYTE PTR [rax],al
   1400330a0:	rex.WX add BYTE PTR [rcx+0x0],spl
   1400330a4:	outs   dx,BYTE PTR ds:[rsi]
   1400330a5:	add    BYTE PTR [rbp+0x0],dh
   1400330a8:	(bad)  
   1400330a9:	add    BYTE PTR [rdx+0x0],dh
   1400330ac:	jns    0x1400330ae
   1400330ae:	add    BYTE PTR [rax],al
   1400330b0:	rex.RX add BYTE PTR [rbp+0x0],r12b
   1400330b4:	(bad)  
   1400330b5:	add    BYTE PTR [rdx+0x0],dh
   1400330b8:	jne    0x1400330ba
   1400330ba:	(bad)  
   1400330bb:	add    BYTE PTR [rdx+0x0],dh
   1400330be:	jns    0x1400330c0
	...
   1400330c8:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400330cc:	jb     0x1400330ce
   1400330ce:	movsxd eax,DWORD PTR [rax]
   1400330d0:	push   0x0
   1400330d5:	add    BYTE PTR [rax],al
   1400330d7:	add    BYTE PTR [rcx+0x0],al
   1400330da:	jo     0x1400330dc
   1400330dc:	jb     0x1400330de
   1400330de:	imul   eax,DWORD PTR [rax],0x6c
   1400330e4:	add    BYTE PTR [rax],al
   1400330e6:	add    BYTE PTR [rax],al
   1400330e8:	rex.WX add BYTE PTR [rbp+0x0],sil
   1400330ec:	outs   dx,BYTE PTR ds:[rsi]
   1400330ed:	add    BYTE PTR [rbp+0x0],ah
	...
   1400330f8:	rex.WX add BYTE PTR [rbp+0x0],sil
   1400330fc:	ins    BYTE PTR es:[rdi],dx
   1400330fd:	add    BYTE PTR [rcx+0x0],bh
	...
   140033108:	add    BYTE PTR [r13+0x0],sil
   14003310c:	add    BYTE PTR [ebp+0x0],dh
   140033110:	jae    0x140033112
   140033112:	je     0x140033114
   140033114:	add    BYTE PTR [rax],al
   140033116:	add    BYTE PTR [rax],al
   140033118:	push   rbx
   140033119:	add    BYTE PTR [rbp+0x0],ah
   14003311c:	jo     0x14003311e
   14003311e:	je     0x140033120
   140033120:	add    BYTE PTR gs:[rbp+0x0],ch
   140033124:	(bad)  
   140033125:	add    BYTE PTR [rbp+0x0],ah
   140033128:	jb     0x14003312a
   14003312a:	add    BYTE PTR [rax],al
   14003312c:	add    BYTE PTR [rax],al
   14003312e:	add    BYTE PTR [rax],al
   140033130:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   140033134:	je     0x140033136
   140033136:	outs   dx,DWORD PTR ds:[rsi]
   140033137:	add    BYTE PTR [rdx+0x0],ah
   14003313a:	add    BYTE PTR gs:[rdx+0x0],dh
   14003313e:	add    BYTE PTR [rax],al
   140033140:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140033144:	jbe    0x140033146
   140033146:	add    BYTE PTR gs:[rbp+0x0],ch
   14003314a:	(bad)  
   14003314b:	add    BYTE PTR [rbp+0x0],ah
   14003314e:	jb     0x140033150
	...
   140033158:	add    BYTE PTR [rbp+0x0],r12b
   14003315c:	movsxd eax,DWORD PTR [rax]
   14003315e:	add    BYTE PTR gs:[rbp+0x0],ch
   140033162:	(bad)  
   140033163:	add    BYTE PTR [rbp+0x0],ah
   140033166:	jb     0x140033168
   140033168:	add    BYTE PTR [rax],al
   14003316a:	add    BYTE PTR [rax],al
   14003316c:	add    BYTE PTR [r13+0x0],cl
   140033170:	add    BYTE PTR [rax],al
   140033172:	add    BYTE PTR [rax],al
   140033174:	push   rax
   140033175:	add    BYTE PTR [rbp+0x0],cl
	...
   140033180:	rex.WRB add BYTE PTR [r13+0x0],r9b
   140033184:	(bad)  
   140033185:	add    BYTE PTR [rax+rax*1+0x64],ah
   140033189:	add    BYTE PTR [rdi],ch
   14003318b:	add    BYTE PTR [rcx+0x0],bh
   14003318e:	jns    0x140033190
	...
   140033198:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   14003319d:	add    BYTE PTR [rax+rax*1+0x2c],ah
   1400331a1:	add    BYTE PTR [rax],ah
   1400331a3:	add    BYTE PTR [rbp+0x0],cl
   1400331a6:	rex.WRB add BYTE PTR [r13+0x0],r9b
   1400331aa:	rex.WRB add BYTE PTR [r8],r12b
   1400331ad:	add    BYTE PTR [rax+rax*1+0x64],ah
   1400331b1:	add    BYTE PTR [rax+rax*1],ch
   1400331b4:	and    BYTE PTR [rax],al
   1400331b6:	jns    0x1400331b8
   1400331b8:	jns    0x1400331ba
   1400331ba:	jns    0x1400331bc
   1400331bc:	jns    0x1400331be
   1400331be:	add    BYTE PTR [rax],al
   1400331c0:	rex.W add BYTE PTR [rax+0x0],cl
   1400331c4:	cmp    al,BYTE PTR [rax]
   1400331c6:	ins    DWORD PTR es:[rdi],dx
   1400331c7:	add    BYTE PTR [rbp+0x0],ch
   1400331ca:	cmp    al,BYTE PTR [rax]
   1400331cc:	jae    0x1400331ce
   1400331ce:	jae    0x1400331d0
   1400331d0:	add    BYTE PTR [rax],al
   1400331d2:	add    BYTE PTR [rax],al
   1400331d4:	sub    BYTE PTR [rsi+0x75],ch
   1400331d7:	ins    BYTE PTR es:[rdi],dx
   1400331d8:	ins    BYTE PTR es:[rdi],dx
   1400331d9:	sub    DWORD PTR [rax],eax
   1400331db:	add    BYTE PTR [rax],al
   1400331dd:	add    BYTE PTR [rax],al
   1400331df:	add    BYTE PTR [rax],ch
   1400331e1:	add    BYTE PTR [rsi+0x0],ch
   1400331e4:	jne    0x1400331e6
   1400331e6:	ins    BYTE PTR es:[rdi],dx
   1400331e7:	add    BYTE PTR [rax+rax*1+0x29],ch
   1400331eb:	add    BYTE PTR [rax],al
   1400331ed:	add    BYTE PTR [rax],al
   1400331ef:	add    BYTE PTR [rsi],al
   1400331f1:	add    BYTE PTR [rax],al
   1400331f3:	(bad)  
   1400331f4:	add    BYTE PTR [rcx],al
   1400331f6:	add    BYTE PTR [rax],al
   1400331f8:	adc    BYTE PTR [rax],al
   1400331fa:	add    eax,DWORD PTR [rsi]
   1400331fc:	add    BYTE PTR [rsi],al
   1400331fe:	add    dl,BYTE PTR [rax]
   140033200:	add    al,0x45
   140033202:	rex.RB
   140033203:	rex.RB add eax,0x5050505
   140033209:	xor    eax,0x500030
   14003320e:	add    BYTE PTR [rax],al
   140033210:	add    BYTE PTR [rax],ch
   140033212:	and    BYTE PTR [rax],bh
   140033214:	push   rax
   140033215:	pop    rax
   140033216:	(bad)  
   140033217:	or     BYTE PTR [rax],al
   140033219:	(bad)  
   14003321a:	xor    BYTE PTR [rax],dh
   14003321c:	push   rdi
   14003321d:	push   rax
   14003321e:	(bad)  
   14003321f:	add    BYTE PTR [rax],al
   140033221:	and    BYTE PTR [rax],ah
   140033223:	or     BYTE PTR [rax],al
   140033225:	add    BYTE PTR [rax],al
   140033227:	add    BYTE PTR [rax],cl
   140033229:	(bad)  
   14003322a:	push   0x60606060
   14003322f:	add    BYTE PTR [rax],al
   140033231:	js     0x1400332a3
   140033233:	js     0x1400332ad
   140033235:	js     0x1400332af
   140033237:	or     BYTE PTR [rdi],al
   140033239:	or     BYTE PTR [rax],al
   14003323b:	add    BYTE PTR [rdi],al
   14003323d:	add    BYTE PTR [rax],cl
   14003323f:	or     BYTE PTR [rax],cl
   140033241:	add    BYTE PTR [rax],al
   140033243:	or     BYTE PTR [rax],al
   140033245:	or     BYTE PTR [rax],al
   140033247:	(bad)  
   140033248:	or     BYTE PTR [rax],al
   14003324a:	add    BYTE PTR [rax],al
   14003324c:	add    BYTE PTR [rax],al
   14003324e:	add    BYTE PTR [rax],al
   140033250:	(bad)  
   140033251:	(bad)  
   140033252:	(bad)  
   140033253:	(bad)  
   140033254:	(bad)  
   140033255:	(bad)  
   140033256:	(bad)  
   140033257:	rex.XB (bad) 
   140033259:	(bad)  
   14003325a:	(bad)  
   14003325b:	(bad)  
   14003325c:	(bad)  
   14003325d:	(bad)  
   14003325e:	(bad)  
   14003325f:	ret    
   140033260:	gs js  0x1400332d3
   140033263:	add    BYTE PTR [rax+0x6f],dh
   140033266:	ja     0x140033268
   140033268:	ins    BYTE PTR es:[rdi],dx
   140033269:	outs   dx,DWORD PTR ds:[rsi]
   14003326a:	add    BYTE PTR [edi+ebp*2+0x67],ch
   14003326f:	xor    DWORD PTR [rax],esi
   140033271:	add    BYTE PTR [rax],al
   140033273:	add    BYTE PTR [rbx+0x69],dh
   140033276:	outs   dx,BYTE PTR ds:[rsi]
   140033277:	push   0x0
   14003327c:	movsxd ebp,DWORD PTR [rdi+0x73]
   14003327f:	push   0x0
   140033284:	je     0x1400332e7
   140033286:	outs   dx,BYTE PTR ds:[rsi]
   140033287:	push   0x0
   14003328c:	(bad)  
   14003328d:	jae    0x1400332f8
   14003328f:	outs   dx,BYTE PTR ds:[rsi]
   140033290:	add    BYTE PTR [rax],al
   140033292:	add    BYTE PTR [rax],al
   140033294:	(bad)  
   140033295:	movsxd ebp,DWORD PTR [rdi+0x73]
   140033298:	add    BYTE PTR [rax],al
   14003329a:	add    BYTE PTR [rax],al
   14003329c:	(bad)  
   14003329d:	je     0x140033300
   14003329f:	outs   dx,BYTE PTR ds:[rsi]
   1400332a0:	add    BYTE PTR [rax],al
   1400332a2:	add    BYTE PTR [rax],al
   1400332a4:	(bad)  
   1400332a5:	je     0x140033308
   1400332a7:	outs   dx,BYTE PTR ds:[rsi]
   1400332a8:	xor    al,BYTE PTR [rax]
   1400332aa:	add    BYTE PTR [rax],al
   1400332ac:	jae    0x14003331f
   1400332ae:	jb     0x140033324
   1400332b0:	add    BYTE PTR [rax],al
   1400332b2:	add    BYTE PTR [rax],al
   1400332b4:	jae    0x14003331f
   1400332b6:	outs   dx,BYTE PTR ds:[rsi]
   1400332b7:	add    BYTE PTR [rbx+0x6f],ah
   1400332ba:	jae    0x1400332bc
   1400332bc:	je     0x14003331f
   1400332be:	outs   dx,BYTE PTR ds:[rsi]
   1400332bf:	add    BYTE PTR [rbx+0x65],ah
   1400332c2:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x6c660000
   1400332ca:	outs   dx,DWORD PTR ds:[rsi]
   1400332cb:	outs   dx,DWORD PTR ds:[rsi]
   1400332cc:	jb     0x1400332ce
   1400332ce:	add    BYTE PTR [rax],al
   1400332d0:	data16 (bad) 
   1400332d2:	(bad)  
   1400332d4:	add    BYTE PTR [rax],al
   1400332d6:	add    BYTE PTR [rax],al
   1400332d8:	ins    DWORD PTR es:[rdi],dx
   1400332d9:	outs   dx,DWORD PTR ds:[rsi]
   1400332da:	data16 add BYTE PTR fs:[rax],al
   1400332de:	add    BYTE PTR [rax],al
   1400332e0:	ins    BYTE PTR es:[rdi],dx
   1400332e1:	fs gs js 0x140033355
   1400332e5:	add    BYTE PTR [rax],al
   1400332e7:	add    BYTE PTR [rdi+0x63],bl
   1400332ea:	(bad)  
   1400332eb:	(bad)  
   1400332ed:	add    BYTE PTR [rax],al
   1400332ef:	add    BYTE PTR [rsi+0x6d],ah
   1400332f2:	outs   dx,DWORD PTR ds:[rsi]
   1400332f3:	add    BYTE PTR fs:[rax],al
   1400332f6:	add    BYTE PTR [rax],al
   1400332f8:	data16 jb 0x140033360
   1400332fb:	js     0x14003336d
   1400332fd:	add    BYTE PTR [rax],al
   1400332ff:	add    BYTE PTR [rdi+0x79],bl
   140033302:	xor    BYTE PTR [rax],al
   140033304:	pop    rdi
   140033305:	jns    0x140033338
   140033307:	add    BYTE PTR [rdi+0x79],bl
   14003330a:	outs   dx,BYTE PTR ds:[rsi]
   14003330b:	add    BYTE PTR [rdi+0x6c],bl
   14003330e:	outs   dx,DWORD PTR ds:[rsi]
   14003330f:	addr32 (bad) 
   140033311:	add    BYTE PTR [rax],al
   140033313:	add    BYTE PTR [rax],al
   140033315:	add    BYTE PTR [rax],al
   140033317:	add    BYTE PTR [rdi+0x6e],bl
   14003331a:	gs js  0x140033391
   14003331d:	(bad)  
   14003331e:	data16 je 0x140033386
   140033321:	jb     0x140033323
	...
   140033337:	add    BYTE PTR [rax],0x0
   14003333a:	add    BYTE PTR [rax],al
   14003333c:	add    BYTE PTR [rax],al
   14003333e:	add    BYTE PTR [rax+0x4003e920],al
   140033344:	add    DWORD PTR [rax],eax
   140033346:	add    BYTE PTR [rax],al
   140033348:	shr    cl,0x3
   14003334b:	rex add DWORD PTR [rax],eax
   14003334e:	add    BYTE PTR [rax],al
   140033350:	push   0x1400336
   140033355:	add    BYTE PTR [rax],al
   140033357:	add    BYTE PTR [rax+0x36],bh
   14003335a:	add    eax,DWORD PTR [rax+0x1]
   14003335d:	add    BYTE PTR [rax],al
   14003335f:	add    BYTE PTR [rax+0x1400336],al
   140033365:	add    BYTE PTR [rax],al
   140033367:	add    BYTE PTR [rax+0x1400336],dl
   14003336d:	add    BYTE PTR [rax],al
   14003336f:	add    BYTE PTR [rax+0x1400336],ah
   140033375:	add    BYTE PTR [rax],al
   140033377:	add    BYTE PTR [rax+0x1400336],dh
   14003337d:	add    BYTE PTR [rax],al
   14003337f:	add    al,al
   140033381:	add    eax,DWORD PTR ss:[rax+0x1]
   140033385:	add    BYTE PTR [rax],al
   140033387:	add    al,dl
   140033389:	add    eax,DWORD PTR ss:[rax+0x1]
   14003338d:	add    BYTE PTR [rax],al
   14003338f:	add    ah,bl
   140033391:	add    eax,DWORD PTR ss:[rax+0x1]
   140033395:	add    BYTE PTR [rax],al
   140033397:	add    al,ch
   140033399:	add    eax,DWORD PTR ss:[rax+0x1]
   14003339d:	add    BYTE PTR [rax],al
   14003339f:	add    al,dh
   1400333a1:	add    eax,DWORD PTR ss:[rax+0x1]
   1400333a5:	add    BYTE PTR [rax],al
   1400333a7:	add    BYTE PTR [rax],al
   1400333a9:	(bad)  
   1400333aa:	add    eax,DWORD PTR [rax+0x1]
   1400333ad:	add    BYTE PTR [rax],al
   1400333af:	add    BYTE PTR [rax],dl
   1400333b1:	(bad)  
   1400333b2:	add    eax,DWORD PTR [rax+0x1]
   1400333b5:	add    BYTE PTR [rax],al
   1400333b7:	add    BYTE PTR [rdx+rdi*8+0x14002],al
   1400333be:	add    BYTE PTR [rax],al
   1400333c0:	sbb    al,0x37
   1400333c2:	add    eax,DWORD PTR [rax+0x1]
   1400333c5:	add    BYTE PTR [rax],al
   1400333c7:	add    BYTE PTR [rax],ch
   1400333c9:	(bad)  
   1400333ca:	add    eax,DWORD PTR [rax+0x1]
   1400333cd:	add    BYTE PTR [rax],al
   1400333cf:	add    BYTE PTR [rax],dh
   1400333d1:	(bad)  
   1400333d2:	add    eax,DWORD PTR [rax+0x1]
   1400333d5:	add    BYTE PTR [rax],al
   1400333d7:	add    BYTE PTR [rdi+rsi*1],dh
   1400333da:	add    eax,DWORD PTR [rax+0x1]
   1400333dd:	add    BYTE PTR [rax],al
   1400333df:	add    BYTE PTR [rax],bh
   1400333e1:	(bad)  
   1400333e2:	add    eax,DWORD PTR [rax+0x1]
   1400333e5:	add    BYTE PTR [rax],al
   1400333e7:	add    BYTE PTR [rdi+rsi*1],bh
   1400333ea:	add    eax,DWORD PTR [rax+0x1]
   1400333ed:	add    BYTE PTR [rax],al
   1400333ef:	add    BYTE PTR [rax+0x37],al
   1400333f2:	add    eax,DWORD PTR [rax+0x1]
   1400333f5:	add    BYTE PTR [rax],al
   1400333f7:	add    BYTE PTR [rdi+rsi*1+0x3],al
   1400333fb:	rex add DWORD PTR [rax],eax
   1400333fe:	add    BYTE PTR [rax],al
   140033400:	rex.W (bad) 
   140033402:	add    eax,DWORD PTR [rax+0x1]
   140033405:	add    BYTE PTR [rax],al
   140033407:	add    BYTE PTR [rax+0x37],dl
   14003340a:	add    eax,DWORD PTR [rax+0x1]
   14003340d:	add    BYTE PTR [rax],al
   14003340f:	add    BYTE PTR [rdi+rsi*1+0x3],bl
   140033413:	rex add DWORD PTR [rax],eax
   140033416:	add    BYTE PTR [rax],al
   140033418:	(bad)  
   140033419:	(bad)  
   14003341a:	add    eax,DWORD PTR [rax+0x1]
   14003341d:	add    BYTE PTR [rax],al
   14003341f:	add    BYTE PTR [rdi+rsi*1+0x3],ah
   140033423:	rex add DWORD PTR [rax],eax
   140033426:	add    BYTE PTR [rax],al
   140033428:	push   0x1400337
   14003342d:	add    BYTE PTR [rax],al
   14003342f:	add    BYTE PTR [rdi+rsi*1+0x3],ch
   140033433:	rex add DWORD PTR [rax],eax
   140033436:	add    BYTE PTR [rax],al
   140033438:	jo     0x140033471
   14003343a:	add    eax,DWORD PTR [rax+0x1]
   14003343d:	add    BYTE PTR [rax],al
   14003343f:	add    BYTE PTR [rdi+rsi*1+0x3],dh
   140033443:	rex add DWORD PTR [rax],eax
   140033446:	add    BYTE PTR [rax],al
   140033448:	js     0x140033481
   14003344a:	add    eax,DWORD PTR [rax+0x1]
   14003344d:	add    BYTE PTR [rax],al
   14003344f:	add    BYTE PTR [rdi+rsi*1+0x3],bh
   140033453:	rex add DWORD PTR [rax],eax
   140033456:	add    BYTE PTR [rax],al
   140033458:	xor    BYTE PTR [rdi],0x3
   14003345b:	rex add DWORD PTR [rax],eax
   14003345e:	add    BYTE PTR [rax],al
   140033460:	test   BYTE PTR [rdi],dh
   140033462:	add    eax,DWORD PTR [rax+0x1]
   140033465:	add    BYTE PTR [rax],al
   140033467:	add    BYTE PTR [rax+0x1400337],cl
   14003346d:	add    BYTE PTR [rax],al
   14003346f:	add    BYTE PTR [rdi+rsi*1+0x14003],cl
   140033476:	add    BYTE PTR [rax],al
   140033478:	nop
   140033479:	(bad)  
   14003347a:	add    eax,DWORD PTR [rax+0x1]
   14003347d:	add    BYTE PTR [rax],al
   14003347f:	add    BYTE PTR [rdi+rsi*1+0x14003],dl
   140033486:	add    BYTE PTR [rax],al
   140033488:	cwde   
   140033489:	(bad)  
   14003348a:	add    eax,DWORD PTR [rax+0x1]
   14003348d:	add    BYTE PTR [rax],al
   14003348f:	add    BYTE PTR [rdi+rsi*1+0x14003],bl
   140033496:	add    BYTE PTR [rax],al
   140033498:	movabs al,ds:0xa400000001400337
   1400334a1:	(bad)  
   1400334a2:	add    eax,DWORD PTR [rax+0x1]
   1400334a5:	add    BYTE PTR [rax],al
   1400334a7:	add    BYTE PTR [rax+0x1400337],ch
   1400334ad:	add    BYTE PTR [rax],al
   1400334af:	add    BYTE PTR [rdi+rsi*1+0x14003],ch
   1400334b6:	add    BYTE PTR [rax],al
   1400334b8:	mov    al,0x37
   1400334ba:	add    eax,DWORD PTR [rax+0x1]
   1400334bd:	add    BYTE PTR [rax],al
   1400334bf:	add    BYTE PTR [rdi+rsi*1+0x14003],dh
   1400334c6:	add    BYTE PTR [rax],al
   1400334c8:	mov    eax,0x1400337
   1400334cd:	add    BYTE PTR [rax],al
   1400334cf:	add    BYTE PTR [rdi+rsi*1+0x14003],bh
   1400334d6:	add    BYTE PTR [rax],al
   1400334d8:	shl    BYTE PTR [rdi],0x3
   1400334db:	rex add DWORD PTR [rax],eax
   1400334de:	add    BYTE PTR [rax],al
   1400334e0:	(bad)  
   1400334e1:	(bad)  
   1400334e2:	add    eax,DWORD PTR [rax+0x1]
   1400334e5:	add    BYTE PTR [rax],al
   1400334e7:	add    al,cl
   1400334e9:	(bad)  
   1400334ea:	add    eax,DWORD PTR [rax+0x1]
   1400334ed:	add    BYTE PTR [rax],al
   1400334ef:	add    ah,cl
   1400334f1:	(bad)  
   1400334f2:	add    eax,DWORD PTR [rax+0x1]
   1400334f5:	add    BYTE PTR [rax],al
   1400334f7:	add    al,dl
   1400334f9:	(bad)  
   1400334fa:	add    eax,DWORD PTR [rax+0x1]
   1400334fd:	add    BYTE PTR [rax],al
   1400334ff:	add    ah,dl
   140033501:	(bad)  
   140033502:	add    eax,DWORD PTR [rax+0x1]
   140033505:	add    BYTE PTR [rax],al
   140033507:	add    al,bl
   140033509:	(bad)  
   14003350a:	add    eax,DWORD PTR [rax+0x1]
   14003350d:	add    BYTE PTR [rax],al
   14003350f:	add    al,ch
   140033511:	(bad)  
   140033512:	add    eax,DWORD PTR [rax+0x1]
   140033515:	add    BYTE PTR [rax],al
   140033517:	add    al,bh
   140033519:	(bad)  
   14003351a:	add    eax,DWORD PTR [rax+0x1]
   14003351d:	add    BYTE PTR [rax],al
   14003351f:	add    BYTE PTR [rax],al
   140033521:	cmp    BYTE PTR [rbx],al
   140033523:	rex add DWORD PTR [rax],eax
   140033526:	add    BYTE PTR [rax],al
   140033528:	adc    BYTE PTR [rax],bh
   14003352a:	add    eax,DWORD PTR [rax+0x1]
   14003352d:	add    BYTE PTR [rax],al
   14003352f:	add    BYTE PTR [rax],ch
   140033531:	cmp    BYTE PTR [rbx],al
   140033533:	rex add DWORD PTR [rax],eax
   140033536:	add    BYTE PTR [rax],al
   140033538:	cmp    BYTE PTR [rax],bh
   14003353a:	add    eax,DWORD PTR [rax+0x1]
   14003353d:	add    BYTE PTR [rax],al
   14003353f:	add    BYTE PTR [rax+0x38],dl
   140033542:	add    eax,DWORD PTR [rax+0x1]
   140033545:	add    BYTE PTR [rax],al
   140033547:	add    BYTE PTR [rax+0x38],dh
   14003354a:	add    eax,DWORD PTR [rax+0x1]
   14003354d:	add    BYTE PTR [rax],al
   14003354f:	add    BYTE PTR [rax+0x1400338],dl
   140033555:	add    BYTE PTR [rax],al
   140033557:	add    BYTE PTR [rax+0x1400338],dh
   14003355d:	add    BYTE PTR [rax],al
   14003355f:	add    al,dl
   140033561:	cmp    BYTE PTR [rbx],al
   140033563:	rex add DWORD PTR [rax],eax
   140033566:	add    BYTE PTR [rax],al
   140033568:	lock cmp BYTE PTR [rbx],al
   14003356b:	rex add DWORD PTR [rax],eax
   14003356e:	add    BYTE PTR [rax],al
   140033570:	sbb    BYTE PTR [rcx],bh
   140033572:	add    eax,DWORD PTR [rax+0x1]
   140033575:	add    BYTE PTR [rax],al
   140033577:	add    BYTE PTR [rax],bh
   140033579:	cmp    DWORD PTR [rbx],eax
   14003357b:	rex add DWORD PTR [rax],eax
   14003357e:	add    BYTE PTR [rax],al
   140033580:	(bad)  
   140033581:	cmp    DWORD PTR [rbx],eax
   140033583:	rex add DWORD PTR [rax],eax
   140033586:	add    BYTE PTR [rax],al
   140033588:	cmp    BYTE PTR [rcx],0x3
   14003358b:	rex add DWORD PTR [rax],eax
   14003358e:	add    BYTE PTR [rax],al
   140033590:	test   al,0x39
   140033592:	add    eax,DWORD PTR [rax+0x1]
   140033595:	add    BYTE PTR [rax],al
   140033597:	add    al,cl
   140033599:	cmp    DWORD PTR [rbx],eax
   14003359b:	rex add DWORD PTR [rax],eax
   14003359e:	add    BYTE PTR [rax],al
   1400335a0:	fdivr  DWORD PTR [rcx]
   1400335a2:	add    eax,DWORD PTR [rax+0x1]
   1400335a5:	add    BYTE PTR [rax],al
   1400335a7:	add    ah,bl
   1400335a9:	cmp    DWORD PTR [rbx],eax
   1400335ab:	rex add DWORD PTR [rax],eax
   1400335ae:	add    BYTE PTR [rax],al
   1400335b0:	call   0x1414338ee
   1400335b5:	add    BYTE PTR [rax],al
   1400335b7:	add    al,bh
   1400335b9:	cmp    DWORD PTR [rbx],eax
   1400335bb:	rex add DWORD PTR [rax],eax
   1400335be:	add    BYTE PTR [rax],al
   1400335c0:	sbb    al,0x3a
   1400335c2:	add    eax,DWORD PTR [rax+0x1]
   1400335c5:	add    BYTE PTR [rax],al
   1400335c7:	add    BYTE PTR [rax],ch
   1400335c9:	cmp    al,BYTE PTR [rbx]
   1400335cb:	rex add DWORD PTR [rax],eax
   1400335ce:	add    BYTE PTR [rax],al
   1400335d0:	cmp    BYTE PTR [rdx],bh
   1400335d2:	add    eax,DWORD PTR [rax+0x1]
   1400335d5:	add    BYTE PTR [rax],al
   1400335d7:	add    BYTE PTR [rax+0x3a],cl
   1400335da:	add    eax,DWORD PTR [rax+0x1]
   1400335dd:	add    BYTE PTR [rax],al
   1400335df:	add    BYTE PTR [rax+0x3a],ch
   1400335e2:	add    eax,DWORD PTR [rax+0x1]
   1400335e5:	add    BYTE PTR [rax],al
   1400335e7:	add    BYTE PTR [rax+0x140033a],cl
   1400335ed:	add    BYTE PTR [rax],al
   1400335ef:	add    BYTE PTR [rax+0x140033a],dh
   1400335f5:	add    BYTE PTR [rax],al
   1400335f7:	add    al,bl
   1400335f9:	cmp    al,BYTE PTR [rbx]
   1400335fb:	rex add DWORD PTR [rax],eax
   1400335fe:	add    BYTE PTR [rax],al
   140033600:	add    BYTE PTR [rbx],bh
   140033602:	add    eax,DWORD PTR [rax+0x1]
   140033605:	add    BYTE PTR [rax],al
   140033607:	add    BYTE PTR [rax],dh
   140033609:	cmp    eax,DWORD PTR [rbx]
   14003360b:	rex add DWORD PTR [rax],eax
   14003360e:	add    BYTE PTR [rax],al
   140033610:	push   rax
   140033611:	cmp    eax,DWORD PTR [rbx]
   140033613:	rex add DWORD PTR [rax],eax
   140033616:	add    BYTE PTR [rax],al
   140033618:	js     0x140033655
   14003361a:	add    eax,DWORD PTR [rax+0x1]
   14003361d:	add    BYTE PTR [rax],al
   14003361f:	add    BYTE PTR [rax+0x140033b],ah
   140033625:	add    BYTE PTR [rax],al
   140033627:	add    al,dl
   140033629:	cmp    eax,DWORD PTR [rbx]
   14003362b:	rex add DWORD PTR [rax],eax
   14003362e:	add    BYTE PTR [rax],al
   140033630:	add    BYTE PTR [rbx+rax*1],bh
   140033633:	rex add DWORD PTR [rax],eax
   140033636:	add    BYTE PTR [rax],al
   140033638:	test   dl,bh
   14003363a:	add    al,BYTE PTR [rax+0x1]
   14003363d:	add    BYTE PTR [rax],al
   14003363f:	add    BYTE PTR [rax],ah
   140033641:	cmp    al,0x3
   140033643:	rex add DWORD PTR [rax],eax
   140033646:	add    BYTE PTR [rax],al
   140033648:	cmp    BYTE PTR [rbx+rax*1],bh
   14003364b:	rex add DWORD PTR [rax],eax
   14003364e:	add    BYTE PTR [rax],al
   140033650:	pop    rax
   140033651:	cmp    al,0x3
   140033653:	rex add DWORD PTR [rax],eax
   140033656:	add    BYTE PTR [rax],al
   140033658:	jo     0x140033696
   14003365a:	add    eax,DWORD PTR [rax+0x1]
   14003365d:	add    BYTE PTR [rax],al
   14003365f:	add    BYTE PTR [rax+0x140033c],dl
   140033665:	add    BYTE PTR [rax],al
   140033667:	add    BYTE PTR [rdi+0x5f],bl
   14003366a:	(bad)  
   14003366c:	jae    0x1400336d3
   14003366e:	sub    BYTE PTR fs:[rax],al
   140033671:	add    BYTE PTR [rax],al
   140033673:	add    BYTE PTR [rax],al
   140033675:	add    BYTE PTR [rax],al
   140033677:	add    BYTE PTR [rdi+0x5f],bl
   14003367a:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   14003367e:	ins    BYTE PTR es:[rdi],dx
   14003367f:	add    BYTE PTR [rdi+0x5f],bl
   140033682:	jo     0x1400336e5
   140033684:	jae    0x1400336e9
   140033686:	(bad)  
   140033687:	ins    BYTE PTR es:[rdi],dx
	...
   140033690:	pop    rdi
   140033691:	pop    rdi
   140033692:	jae    0x140033708
   140033694:	movsxd esp,DWORD PTR fs:[rcx+0x6c]
   140033698:	ins    BYTE PTR es:[rdi],dx
   140033699:	add    BYTE PTR [rax],al
   14003369b:	add    BYTE PTR [rax],al
   14003369d:	add    BYTE PTR [rax],al
   14003369f:	add    BYTE PTR [rdi+0x5f],bl
   1400336a2:	je     0x14003370c
   1400336a4:	imul   esi,DWORD PTR [rbx+0x63],0x6c6c61
   1400336ab:	add    BYTE PTR [rax],al
   1400336ad:	add    BYTE PTR [rax],al
   1400336af:	add    BYTE PTR [rdi+0x5f],bl
   1400336b2:	data16 (bad) 
   1400336b4:	jae    0x14003372a
   1400336b6:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400336b9:	ins    BYTE PTR es:[rdi],dx
   1400336ba:	add    BYTE PTR [rax],al
   1400336bc:	add    BYTE PTR [rax],al
   1400336be:	add    BYTE PTR [rax],al
   1400336c0:	pop    rdi
   1400336c1:	pop    rdi
   1400336c2:	jbe    0x140033729
   1400336c4:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400336c8:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400336cb:	ins    BYTE PTR es:[rdi],dx
   1400336cc:	add    BYTE PTR [rax],al
   1400336ce:	add    BYTE PTR [rax],al
   1400336d0:	pop    rdi
   1400336d1:	pop    rdi
   1400336d2:	movsxd ebp,DWORD PTR [rdx+rsi*2+0x63]
   1400336d6:	(bad)  
   1400336d7:	ins    BYTE PTR es:[rdi],dx
   1400336d8:	ins    BYTE PTR es:[rdi],dx
   1400336d9:	add    BYTE PTR [rax],al
   1400336db:	add    BYTE PTR [rdi+0x5f],bl
   1400336de:	gs (bad) 
   1400336e0:	(bad)  
   1400336e1:	imul   eax,DWORD PTR [rax],0x0
   1400336e7:	add    BYTE PTR [rdi+0x5f],bl
   1400336ea:	jo     0x140033760
   1400336ec:	jb     0x140033724
   1400336ee:	xor    al,0x0
   1400336f0:	pop    rdi
   1400336f1:	pop    rdi
   1400336f2:	jb     0x140033759
   1400336f4:	jae    0x14003376a
   1400336f6:	jb     0x140033761
   1400336f8:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   1400336fc:	add    BYTE PTR [rax],al
   1400336fe:	add    BYTE PTR [rax],al
   140033700:	pop    rdi
   140033701:	pop    rdi
   140033702:	jne    0x140033772
   140033704:	(bad)  
   140033705:	ins    BYTE PTR es:[rdi],dx
   140033706:	imul   esp,DWORD PTR [rdi+0x6e],0x6465
   14003370d:	add    BYTE PTR [rax],al
   14003370f:	add    BYTE PTR [rdx+0x65],dh
   140033712:	jae    0x140033788
   140033714:	jb     0x14003377f
   140033716:	movsxd esi,DWORD PTR [rax+rbp*1+0x0]
   14003371a:	add    BYTE PTR [rax],al
   14003371c:	and    BYTE PTR [rsi+0x65],ch
   14003371f:	ja     0x140033721
   140033721:	add    BYTE PTR [rax],al
   140033723:	add    BYTE PTR [rax],al
   140033725:	add    BYTE PTR [rax],al
   140033727:	add    BYTE PTR [rax],ah
   140033729:	fs gs ins BYTE PTR es:[rdi],dx
   14003372c:	gs je  0x140033794
   14003372f:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e033735
   140033735:	add    BYTE PTR ds:[rax],al
   140033738:	cmp    al,0x3c
   14003373a:	add    BYTE PTR [rax],al
   14003373c:	and    DWORD PTR [rax],eax
   14003373e:	add    BYTE PTR [rax],al
   140033740:	cmp    eax,0x2100003d
   140033745:	cmp    eax,0x5d5b0000
   14003374a:	add    BYTE PTR [rax],al
   14003374c:	add    BYTE PTR [rax],al
   14003374e:	add    BYTE PTR [rax],al
   140033750:	outs   dx,DWORD PTR ds:[rsi]
   140033751:	jo     0x1400337b8
   140033753:	jb     0x1400337b6
   140033755:	je     0x1400337c6
   140033757:	jb     0x140033759
   140033759:	add    BYTE PTR [rax],al
   14003375b:	add    BYTE PTR [rip+0x2a00003e],ch        # 0x16a03379f
   140033761:	add    BYTE PTR [rax],al
   140033763:	add    BYTE PTR [rbx],ch
   140033765:	sub    eax,DWORD PTR [rax]
   140033767:	add    BYTE PTR [rip+0x2d00002d],ch        # 0x16d03379a
   14003376d:	add    BYTE PTR [rax],al
   14003376f:	add    BYTE PTR [rbx],ch
   140033771:	add    BYTE PTR [rax],al
   140033773:	add    BYTE PTR [rsi],ah
   140033775:	add    BYTE PTR [rax],al
   140033777:	add    BYTE PTR [rip+0x2f002a3e],ch        # 0x16f0361bb
   14003377d:	add    BYTE PTR [rax],al
   14003377f:	add    BYTE PTR [rip+0x3c000000],ah        # 0x17c033785
   140033785:	add    BYTE PTR [rax],al
   140033787:	add    BYTE PTR [rdi*1+0x3e0000],bh
   14003378e:	add    BYTE PTR [rax],al
   140033790:	ds cmp eax,0x2c0000
   140033796:	add    BYTE PTR [rax],al
   140033798:	sub    BYTE PTR [rcx],ch
   14003379a:	add    BYTE PTR [rax],al
   14003379c:	jle    0x14003379e
   14003379e:	add    BYTE PTR [rax],al
   1400337a0:	pop    rsi
   1400337a1:	add    BYTE PTR [rax],al
   1400337a3:	add    BYTE PTR [rax+rax*1+0x0],bh
   1400337a7:	add    BYTE PTR [rsi],ah
   1400337a9:	add    BYTE PTR es:[rax],al
   1400337ac:	jl     0x14003382a
   1400337ae:	add    BYTE PTR [rax],al
   1400337b0:	sub    bh,BYTE PTR [rip+0x3d2b0000]        # 0x17d2e37b6
   1400337b6:	add    BYTE PTR [rax],al
   1400337b8:	sub    eax,0x2f00003d
   1400337bd:	cmp    eax,0x3d250000
   1400337c2:	add    BYTE PTR [rax],al
   1400337c4:	ds ds cmp eax,0x3d3c3c00
   1400337cb:	add    BYTE PTR [rsi],ah
   1400337cd:	cmp    eax,0x3d7c0000
   1400337d2:	add    BYTE PTR [rax],al
   1400337d4:	pop    rsi
   1400337d5:	cmp    eax,0x76600000
   1400337da:	data16 je 0x14003383e
   1400337dd:	(bad)  
   1400337de:	ins    BYTE PTR es:[rdi],dx
   1400337df:	gs (bad) 
   1400337e1:	add    BYTE PTR [rax],al
   1400337e3:	add    BYTE PTR [rax],al
   1400337e5:	add    BYTE PTR [rax],al
   1400337e7:	add    BYTE PTR [rax+0x76],ah
   1400337ea:	(bad)  
   1400337eb:	je     0x14003384e
   1400337ed:	(bad)  
   1400337ee:	ins    BYTE PTR es:[rdi],dx
   1400337ef:	gs (bad) 
   1400337f1:	add    BYTE PTR [rax],al
   1400337f3:	add    BYTE PTR [rax],al
   1400337f5:	add    BYTE PTR [rax],al
   1400337f7:	add    BYTE PTR [rax+0x76],ah
   1400337fa:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400337fd:	ins    BYTE PTR es:[rdi],dx
   1400337fe:	(bad)  
   1400337ff:	add    BYTE PTR [rax+0x74],ah
   140033802:	jns    0x140033874
   140033804:	outs   dx,DWORD PTR gs:[rsi]
   140033806:	data16 (bad) 
	...
   140033810:	(bad)  
   140033811:	ins    BYTE PTR es:[rdi],dx
   140033812:	outs   dx,DWORD PTR ds:[rsi]
   140033813:	movsxd esp,DWORD PTR [rcx+0x6c]
   140033816:	and    BYTE PTR [rbx+0x74],dh
   140033819:	(bad)  
   14003381a:	je     0x140033885
   14003381c:	movsxd esp,DWORD PTR [rax]
   14003381e:	addr32 jne 0x140033882
   140033821:	jb     0x140033887
   140033823:	(bad)  
   140033824:	add    BYTE PTR [rax],al
   140033826:	add    BYTE PTR [rax],al
   140033828:	(bad)  
   140033829:	jae    0x14003389f
   14003382b:	jb     0x140033896
   14003382d:	outs   dx,BYTE PTR ds:[rsi]
   14003382e:	addr32 (bad) 
	...
   140033838:	(bad)  
   140033839:	jbe    0x14003389d
   14003383b:	(bad)  
   14003383c:	jae    0x1400338a3
   14003383e:	and    BYTE PTR [rbp+riz*2+0x73],ah
   140033842:	je     0x1400338b6
   140033844:	jne    0x1400338a9
   140033846:	je     0x1400338b7
   140033848:	jb     0x140033871
   14003384a:	add    BYTE PTR [rax],al
   14003384c:	add    BYTE PTR [rax],al
   14003384e:	add    BYTE PTR [rax],al
   140033850:	(bad)  
   140033851:	jbe    0x1400338b8
   140033853:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033857:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14003385b:	gs je  0x1400338c7
   14003385e:	outs   dx,BYTE PTR ds:[rsi]
   14003385f:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   140033864:	je     0x1400338d8
   140033866:	jne    0x1400338cb
   140033868:	je     0x1400338d9
   14003386a:	jb     0x140033893
   14003386c:	add    BYTE PTR [rax],al
   14003386e:	add    BYTE PTR [rax],al
   140033870:	(bad)  
   140033871:	fs gs data16 (bad) 
   140033875:	jne    0x1400338e3
   140033877:	je     0x140033899
   140033879:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003387c:	jae    0x1400338f2
   14003387e:	jb     0x1400338f5
   140033880:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033884:	and    BYTE PTR [rbx+0x6c],ah
   140033887:	outs   dx,DWORD PTR ds:[rsi]
   140033888:	jae    0x1400338ff
   14003388a:	jb     0x1400338f1
   14003388c:	(bad)  
   14003388d:	add    BYTE PTR [rax],al
   14003388f:	add    BYTE PTR [rax+0x73],ah
   140033892:	movsxd esp,DWORD PTR [rcx+0x6c]
   140033895:	(bad)  
   140033896:	jb     0x1400338b8
   140033898:	fs gs ins BYTE PTR es:[rdi],dx
   14003389b:	gs je  0x140033907
   14003389e:	outs   dx,BYTE PTR ds:[rsi]
   14003389f:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   1400338a4:	je     0x140033918
   1400338a6:	jne    0x14003390b
   1400338a8:	je     0x140033919
   1400338aa:	jb     0x1400338d3
   1400338ac:	add    BYTE PTR [rax],al
   1400338ae:	add    BYTE PTR [rax],al
   1400338b0:	(bad)  
   1400338b1:	jbe    0x140033918
   1400338b3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400338b7:	and    BYTE PTR [rbx+0x6f],ah
   1400338ba:	outs   dx,BYTE PTR ds:[rsi]
   1400338bb:	jae    0x140033931
   1400338bd:	jb     0x140033934
   1400338bf:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400338c3:	and    BYTE PTR [rcx+0x74],ch
   1400338c6:	gs jb  0x14003392a
   1400338c9:	je     0x14003393a
   1400338cb:	jb     0x1400338f4
   1400338cd:	add    BYTE PTR [rax],al
   1400338cf:	add    BYTE PTR [rax+0x76],ah
   1400338d2:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400338d7:	and    BYTE PTR [rbp+riz*2+0x73],ah
   1400338db:	je     0x14003394f
   1400338dd:	jne    0x140033942
   1400338df:	je     0x140033950
   1400338e1:	jb     0x140033903
   1400338e3:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   1400338eb:	(bad)  
   1400338ec:	add    BYTE PTR [rax],al
   1400338ee:	add    BYTE PTR [rax],al
   1400338f0:	(bad)  
   1400338f1:	jbe    0x140033958
   1400338f3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400338f7:	and    BYTE PTR [rsi+0x62],dh
   1400338fa:	(bad)  
   1400338fb:	jae    0x140033962
   1400338fd:	and    BYTE PTR [rbx+0x6f],ah
   140033900:	outs   dx,BYTE PTR ds:[rsi]
   140033901:	jae    0x140033977
   140033903:	jb     0x14003397a
   140033905:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033909:	and    BYTE PTR [rcx+0x74],ch
   14003390c:	gs jb  0x140033970
   14003390f:	je     0x140033980
   140033911:	jb     0x14003393a
   140033913:	add    BYTE PTR [rax],al
   140033915:	add    BYTE PTR [rax],al
   140033917:	add    BYTE PTR [rax+0x76],ah
   14003391a:	imul   esi,DWORD PTR [rdx+0x74],0x206c6175
   140033921:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6563616c
   140033929:	ins    DWORD PTR es:[rdi],dx
   14003392a:	outs   dx,BYTE PTR gs:[rsi]
   14003392c:	je     0x14003394e
   14003392e:	ins    DWORD PTR es:[rdi],dx
   14003392f:	(bad)  
   140033930:	jo     0x140033959
   140033932:	add    BYTE PTR [rax],al
   140033934:	add    BYTE PTR [rax],al
   140033936:	add    BYTE PTR [rax],al
   140033938:	(bad)  
   140033939:	gs push 0x63657620
   14003393f:	je     0x1400339b0
   140033941:	jb     0x140033963
   140033943:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033946:	jae    0x1400339bc
   140033948:	jb     0x1400339bf
   14003394a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003394e:	and    BYTE PTR [rcx+0x74],ch
   140033951:	gs jb  0x1400339b5
   140033954:	je     0x1400339c5
   140033956:	jb     0x14003397f
	...
   140033960:	(bad)  
   140033961:	gs push 0x63657620
   140033967:	je     0x1400339d8
   140033969:	jb     0x14003398b
   14003396b:	fs gs jae 0x1400339e3
   14003396f:	jb     0x1400339e6
   140033971:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033975:	and    BYTE PTR [rcx+0x74],ch
   140033978:	gs jb  0x1400339dc
   14003397b:	je     0x1400339ec
   14003397d:	jb     0x1400339a6
   14003397f:	add    BYTE PTR [rax+0x65],ah
   140033982:	push   0x63657620
   140033987:	je     0x1400339f8
   140033989:	jb     0x1400339ab
   14003398b:	jbe    0x1400339ef
   14003398d:	(bad)  
   14003398e:	jae    0x1400339f5
   140033990:	and    BYTE PTR [rbx+0x6f],ah
   140033993:	outs   dx,BYTE PTR ds:[rsi]
   140033994:	jae    0x140033a0a
   140033996:	jb     0x140033a0d
   140033998:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003399c:	and    BYTE PTR [rcx+0x74],ch
   14003399f:	gs jb  0x140033a03
   1400339a2:	je     0x140033a13
   1400339a4:	jb     0x1400339cd
   1400339a6:	add    BYTE PTR [rax],al
   1400339a8:	(bad)  
   1400339a9:	movsxd ebp,DWORD PTR [rdi+0x70]
   1400339ac:	jns    0x1400339ce
   1400339ae:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400339b1:	jae    0x140033a27
   1400339b3:	jb     0x140033a2a
   1400339b5:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400339b9:	and    BYTE PTR [rbx+0x6c],ah
   1400339bc:	outs   dx,DWORD PTR ds:[rsi]
   1400339bd:	jae    0x140033a34
   1400339bf:	jb     0x140033a26
   1400339c1:	(bad)  
   1400339c2:	add    BYTE PTR [rax],al
   1400339c4:	add    BYTE PTR [rax],al
   1400339c6:	add    BYTE PTR [rax],al
   1400339c8:	(bad)  
   1400339c9:	jne    0x140033a2f
   1400339cb:	je     0x1400339ed
   1400339cd:	jb     0x140033a34
   1400339cf:	je     0x140033a46
   1400339d1:	jb     0x140033a41
   1400339d3:	imul   ebp,DWORD PTR [rsi+0x67],0x45600027
   1400339da:	rex.W add BYTE PTR [rax+0x52],spl
   1400339de:	push   rsp
   1400339df:	push   rsp
   1400339e0:	rex.WB add BYTE PTR [r8],al
   1400339e3:	add    BYTE PTR [rax],al
   1400339e5:	add    BYTE PTR [rax],al
   1400339e7:	add    BYTE PTR [rax+0x6c],ah
   1400339ea:	outs   dx,DWORD PTR ds:[rsi]
   1400339eb:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400339ee:	and    BYTE PTR [rsi+0x66],dh
   1400339f1:	je     0x140033a54
   1400339f3:	(bad)  
   1400339f4:	ins    BYTE PTR es:[rdi],dx
   1400339f5:	gs (bad) 
   1400339f7:	add    BYTE PTR [rax+0x6c],ah
   1400339fa:	outs   dx,DWORD PTR ds:[rsi]
   1400339fb:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400339fe:	and    BYTE PTR [rsi+0x66],dh
   140033a01:	je     0x140033a64
   140033a03:	(bad)  
   140033a04:	ins    BYTE PTR es:[rdi],dx
   140033a05:	and    BYTE PTR gs:[rbx+0x6f],ah
   140033a09:	outs   dx,BYTE PTR ds:[rsi]
   140033a0a:	jae    0x140033a80
   140033a0c:	jb     0x140033a83
   140033a0e:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033a12:	and    BYTE PTR [rbx+0x6c],ah
   140033a15:	outs   dx,DWORD PTR ds:[rsi]
   140033a16:	jae    0x140033a8d
   140033a18:	jb     0x140033a7f
   140033a1a:	(bad)  
   140033a1b:	add    BYTE PTR [rax],ah
   140033a1d:	outs   dx,BYTE PTR ds:[rsi]
   140033a1e:	gs ja  0x140033a7c
   140033a21:	pop    rbp
   140033a22:	add    BYTE PTR [rax],al
   140033a24:	add    BYTE PTR [rax],al
   140033a26:	add    BYTE PTR [rax],al
   140033a28:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   140033a2c:	gs je  0x140033a94
   140033a2f:	pop    rbx
   140033a30:	pop    rbp
   140033a31:	add    BYTE PTR [rax],al
   140033a33:	add    BYTE PTR [rax],al
   140033a35:	add    BYTE PTR [rax],al
   140033a37:	add    BYTE PTR [rax+0x6f],ah
   140033a3a:	ins    DWORD PTR es:[rdi],dx
   140033a3b:	outs   dx,BYTE PTR ds:[rsi]
   140033a3c:	imul   esp,DWORD PTR [rax],0x6c6c6163
   140033a42:	jae    0x140033aad
   140033a44:	addr32 (bad) 
   140033a46:	add    BYTE PTR [rax],al
   140033a48:	(bad)  
   140033a49:	jo     0x140033ab7
   140033a4b:	(bad)  
   140033a4c:	movsxd esp,DWORD PTR [rbp+0x6d]
   140033a4f:	outs   dx,BYTE PTR gs:[rsi]
   140033a51:	je     0x140033a73
   140033a53:	fs gs ins BYTE PTR es:[rdi],dx
   140033a56:	gs je  0x140033abe
   140033a59:	and    BYTE PTR [rbx+0x6c],ah
   140033a5c:	outs   dx,DWORD PTR ds:[rsi]
   140033a5d:	jae    0x140033ad4
   140033a5f:	jb     0x140033ac6
   140033a61:	(bad)  
   140033a62:	add    BYTE PTR [rax],al
   140033a64:	add    BYTE PTR [rax],al
   140033a66:	add    BYTE PTR [rax],al
   140033a68:	(bad)  
   140033a69:	jo     0x140033ad7
   140033a6b:	(bad)  
   140033a6c:	movsxd esp,DWORD PTR [rbp+0x6d]
   140033a6f:	outs   dx,BYTE PTR gs:[rsi]
   140033a71:	je     0x140033a93
   140033a73:	fs gs ins BYTE PTR es:[rdi],dx
   140033a76:	gs je  0x140033ade
   140033a79:	pop    rbx
   140033a7a:	pop    rbp
   140033a7b:	and    BYTE PTR [rbx+0x6c],ah
   140033a7e:	outs   dx,DWORD PTR ds:[rsi]
   140033a7f:	jae    0x140033af6
   140033a81:	jb     0x140033ae8
   140033a83:	(bad)  
   140033a84:	add    BYTE PTR [rax],al
   140033a86:	add    BYTE PTR [rax],al
   140033a88:	(bad)  
   140033a89:	ins    DWORD PTR es:[rdi],dx
   140033a8a:	(bad)  
   140033a8b:	outs   dx,BYTE PTR ds:[rsi]
   140033a8c:	(bad)  
   140033a8d:	gs and BYTE PTR fs:[esi+0x65],dh
   140033a93:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033a97:	and    BYTE PTR [rbx+0x6f],ah
   140033a9a:	outs   dx,BYTE PTR ds:[rsi]
   140033a9b:	jae    0x140033b11
   140033a9d:	jb     0x140033b14
   140033a9f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033aa3:	and    BYTE PTR [rcx+0x74],ch
   140033aa6:	gs jb  0x140033b0a
   140033aa9:	je     0x140033b1a
   140033aab:	jb     0x140033ad4
   140033aad:	add    BYTE PTR [rax],al
   140033aaf:	add    BYTE PTR [rax+0x6d],ah
   140033ab2:	(bad)  
   140033ab3:	outs   dx,BYTE PTR ds:[rsi]
   140033ab4:	(bad)  
   140033ab5:	gs and BYTE PTR fs:[esi+0x65],dh
   140033abb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033abf:	and    BYTE PTR [rbp+riz*2+0x73],ah
   140033ac3:	je     0x140033b37
   140033ac5:	jne    0x140033b2a
   140033ac7:	je     0x140033b38
   140033ac9:	jb     0x140033aeb
   140033acb:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   140033ad3:	(bad)  
   140033ad4:	add    BYTE PTR [rax],al
   140033ad6:	add    BYTE PTR [rax],al
   140033ad8:	(bad)  
   140033ad9:	gs push 0x63657620
   140033adf:	je     0x140033b50
   140033ae1:	jb     0x140033b03
   140033ae3:	movsxd ebp,DWORD PTR [rdi+0x70]
   140033ae6:	jns    0x140033b08
   140033ae8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033aeb:	jae    0x140033b61
   140033aed:	jb     0x140033b64
   140033aef:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033af3:	and    BYTE PTR [rcx+0x74],ch
   140033af6:	gs jb  0x140033b5a
   140033af9:	je     0x140033b6a
   140033afb:	jb     0x140033b24
   140033afd:	add    BYTE PTR [rax],al
   140033aff:	add    BYTE PTR [rax+0x65],ah
   140033b02:	push   0x63657620
   140033b07:	je     0x140033b78
   140033b09:	jb     0x140033b2b
   140033b0b:	jbe    0x140033b6f
   140033b0d:	(bad)  
   140033b0e:	jae    0x140033b75
   140033b10:	and    BYTE PTR [rbx+0x6f],ah
   140033b13:	jo     0x140033b8e
   140033b15:	and    BYTE PTR [rbx+0x6f],ah
   140033b18:	outs   dx,BYTE PTR ds:[rsi]
   140033b19:	jae    0x140033b8f
   140033b1b:	jb     0x140033b92
   140033b1d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033b21:	and    BYTE PTR [rcx+0x74],ch
   140033b24:	gs jb  0x140033b88
   140033b27:	je     0x140033b98
   140033b29:	jb     0x140033b52
   140033b2b:	add    BYTE PTR [rax],al
   140033b2d:	add    BYTE PTR [rax],al
   140033b2f:	add    BYTE PTR [rax+0x64],ah
   140033b32:	jns    0x140033ba2
   140033b34:	(bad)  
   140033b35:	ins    DWORD PTR es:[rdi],dx
   140033b36:	imul   esp,DWORD PTR [rbx+0x20],0x74696e69
   140033b3d:	imul   esp,DWORD PTR [rcx+0x6c],0x72657a69
   140033b44:	and    BYTE PTR [rsi+0x6f],ah
   140033b47:	jb     0x140033b69
   140033b49:	(bad)  
   140033b4a:	add    BYTE PTR [rax],al
   140033b4c:	add    BYTE PTR [rax],al
   140033b4e:	add    BYTE PTR [rax],al
   140033b50:	(bad)  
   140033b51:	fs jns 0x140033bc2
   140033b54:	(bad)  
   140033b55:	ins    DWORD PTR es:[rdi],dx
   140033b56:	imul   esp,DWORD PTR [rbx+0x20],0x78657461
   140033b5d:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x72747365
   140033b65:	jne    0x140033bca
   140033b67:	je     0x140033bd8
   140033b69:	jb     0x140033b8b
   140033b6b:	outs   dx,WORD PTR ds:[rsi]
   140033b6d:	jb     0x140033b8f
   140033b6f:	(bad)  
	...
   140033b78:	(bad)  
   140033b79:	jbe    0x140033be0
   140033b7b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033b7f:	and    BYTE PTR [rbx+0x6f],ah
   140033b82:	jo     0x140033bfd
   140033b84:	and    BYTE PTR [rbx+0x6f],ah
   140033b87:	outs   dx,BYTE PTR ds:[rsi]
   140033b88:	jae    0x140033bfe
   140033b8a:	jb     0x140033c01
   140033b8c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033b90:	and    BYTE PTR [rcx+0x74],ch
   140033b93:	gs jb  0x140033bf7
   140033b96:	je     0x140033c07
   140033b98:	jb     0x140033bc1
   140033b9a:	add    BYTE PTR [rax],al
   140033b9c:	add    BYTE PTR [rax],al
   140033b9e:	add    BYTE PTR [rax],al
   140033ba0:	(bad)  
   140033ba1:	jbe    0x140033c08
   140033ba3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033ba7:	and    BYTE PTR [rsi+0x62],dh
   140033baa:	(bad)  
   140033bab:	jae    0x140033c12
   140033bad:	and    BYTE PTR [rbx+0x6f],ah
   140033bb0:	jo     0x140033c2b
   140033bb2:	and    BYTE PTR [rbx+0x6f],ah
   140033bb5:	outs   dx,BYTE PTR ds:[rsi]
   140033bb6:	jae    0x140033c2c
   140033bb8:	jb     0x140033c2f
   140033bba:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033bbe:	and    BYTE PTR [rcx+0x74],ch
   140033bc1:	gs jb  0x140033c25
   140033bc4:	je     0x140033c35
   140033bc6:	jb     0x140033bef
	...
   140033bd0:	(bad)  
   140033bd1:	ins    DWORD PTR es:[rdi],dx
   140033bd2:	(bad)  
   140033bd3:	outs   dx,BYTE PTR ds:[rsi]
   140033bd4:	(bad)  
   140033bd5:	gs and BYTE PTR fs:[esi+0x65],dh
   140033bdb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033bdf:	and    BYTE PTR [rbx+0x6f],ah
   140033be2:	jo     0x140033c5d
   140033be4:	and    BYTE PTR [rbx+0x6f],ah
   140033be7:	outs   dx,BYTE PTR ds:[rsi]
   140033be8:	jae    0x140033c5e
   140033bea:	jb     0x140033c61
   140033bec:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033bf0:	and    BYTE PTR [rcx+0x74],ch
   140033bf3:	gs jb  0x140033c57
   140033bf6:	je     0x140033c67
   140033bf8:	jb     0x140033c21
   140033bfa:	add    BYTE PTR [rax],al
   140033bfc:	add    BYTE PTR [rax],al
   140033bfe:	add    BYTE PTR [rax],al
   140033c00:	(bad)  
   140033c01:	ins    BYTE PTR es:[rdi],dx
   140033c02:	outs   dx,DWORD PTR ds:[rsi]
   140033c03:	movsxd esp,DWORD PTR [rcx+0x6c]
   140033c06:	and    BYTE PTR [rbx+0x74],dh
   140033c09:	(bad)  
   140033c0a:	je     0x140033c75
   140033c0c:	movsxd esp,DWORD PTR [rax]
   140033c0e:	je     0x140033c78
   140033c10:	jb     0x140033c77
   140033c12:	(bad)  
   140033c13:	and    BYTE PTR fs:[rdi+0x75],ah
   140033c17:	(bad)  
   140033c18:	jb     0x140033c7e
   140033c1a:	(bad)  
   140033c1b:	add    BYTE PTR [rax],al
   140033c1d:	add    BYTE PTR [rax],al
   140033c1f:	add    BYTE PTR [rax],ah
   140033c21:	push   rsp
   140033c22:	jns    0x140033c94
   140033c24:	and    BYTE PTR gs:[rbp+riz*2+0x73],al
   140033c29:	movsxd esi,DWORD PTR [rdx+0x69]
   140033c2c:	jo     0x140033ca2
   140033c2e:	outs   dx,DWORD PTR ds:[rsi]
   140033c2f:	jb     0x140033c58
   140033c31:	add    BYTE PTR [rax],al
   140033c33:	add    BYTE PTR [rax],al
   140033c35:	add    BYTE PTR [rax],al
   140033c37:	add    BYTE PTR [rax],ah
   140033c39:	rex.X (bad) 
   140033c3b:	jae    0x140033ca2
   140033c3d:	and    BYTE PTR [rbx+0x6c],al
   140033c40:	(bad)  
   140033c41:	jae    0x140033cb6
   140033c43:	and    BYTE PTR [rbp+riz*2+0x73],al
   140033c47:	movsxd esi,DWORD PTR [rdx+0x69]
   140033c4a:	jo     0x140033cc0
   140033c4c:	outs   dx,DWORD PTR ds:[rsi]
   140033c4d:	jb     0x140033c6f
   140033c4f:	(bad)  
   140033c50:	je     0x140033c72
   140033c52:	sub    BYTE PTR [rax],al
   140033c54:	add    BYTE PTR [rax],al
   140033c56:	add    BYTE PTR [rax],al
   140033c58:	and    BYTE PTR [rdx+0x61],al
   140033c5b:	jae    0x140033cc2
   140033c5d:	and    BYTE PTR [rbx+0x6c],al
   140033c60:	(bad)  
   140033c61:	jae    0x140033cd6
   140033c63:	and    BYTE PTR [rcx+0x72],al
   140033c66:	jb     0x140033cc9
   140033c68:	jns    0x140033c91
   140033c6a:	add    BYTE PTR [rax],al
   140033c6c:	add    BYTE PTR [rax],al
   140033c6e:	add    BYTE PTR [rax],al
   140033c70:	and    BYTE PTR [rbx+0x6c],al
   140033c73:	(bad)  
   140033c74:	jae    0x140033ce9
   140033c76:	and    BYTE PTR [rax+0x69],cl
   140033c79:	gs jb  0x140033cdd
   140033c7c:	jb     0x140033ce1
   140033c7e:	push   0x65442079
   140033c83:	jae    0x140033ce8
   140033c85:	jb     0x140033cf0
   140033c87:	jo     0x140033cfd
   140033c89:	outs   dx,DWORD PTR ds:[rsi]
   140033c8a:	jb     0x140033cb3
   140033c8c:	add    BYTE PTR [rax],al
   140033c8e:	add    BYTE PTR [rax],al
   140033c90:	and    BYTE PTR [rbx+0x6f],al
   140033c93:	ins    DWORD PTR es:[rdi],dx
   140033c94:	jo     0x140033d02
   140033c96:	gs je  0x140033cfe
   140033c99:	and    BYTE PTR [rdi+0x62],cl
   140033c9c:	push   0x65
   140033c9e:	movsxd esi,DWORD PTR [rax+riz*1+0x4c]
   140033ca2:	outs   dx,DWORD PTR ds:[rsi]
   140033ca3:	movsxd esp,DWORD PTR [rcx+0x74]
   140033ca6:	outs   dx,DWORD PTR ds:[rsi]
   140033ca7:	jb     0x140033cd0
   140033ca9:	add    BYTE PTR [rax],al
   140033cab:	add    BYTE PTR [rbx+0x56],al
   140033cae:	cmp    ah,BYTE PTR [rax]
   140033cb0:	add    BYTE PTR [rax],al
   140033cb2:	add    BYTE PTR [rax],al
   140033cb4:	cmp    bh,BYTE PTR [rdx]
   140033cb6:	add    BYTE PTR [rax],al
   140033cb8:	je     0x140033d1f
   140033cba:	ins    DWORD PTR es:[rdi],dx
   140033cbb:	jo     0x140033d29
   140033cbd:	(bad)  
   140033cbe:	je     0x140033d25
   140033cc0:	sub    eax,0x61726170
   140033cc5:	ins    DWORD PTR es:[rdi],dx
   140033cc6:	gs je  0x140033d2e
   140033cc9:	jb     0x140033cf8
   140033ccb:	add    BYTE PTR [rax],al
   140033ccd:	add    BYTE PTR [rax],al
   140033ccf:	add    BYTE PTR [rdi+0x65],ah
   140033cd2:	outs   dx,BYTE PTR ds:[rsi]
   140033cd3:	gs jb  0x140033d3f
   140033cd6:	movsxd ebp,DWORD PTR [rip+0x65707974]        # 0x1a573b650
   140033cdc:	sub    eax,0x60000000
   140033ce1:	add    BYTE PTR [rax],al
   140033ce3:	add    BYTE PTR [rdi],ah
   140033ce5:	add    BYTE PTR [rax],al
   140033ce7:	add    BYTE PTR [rax+0x61],ah
   140033cea:	outs   dx,BYTE PTR ds:[rsi]
   140033ceb:	outs   dx,DWORD PTR ds:[rsi]
   140033cec:	outs   dx,BYTE PTR ds:[rsi]
   140033ced:	jns    0x140033d5c
   140033cef:	outs   dx,DWORD PTR ds:[rsi]
   140033cf0:	jne    0x140033d65
   140033cf2:	and    BYTE PTR [rsi+0x61],ch
   140033cf5:	ins    DWORD PTR es:[rdi],dx
   140033cf6:	gs jae 0x140033d69
   140033cf9:	(bad)  
   140033cfa:	movsxd esp,DWORD PTR [rbp+0x27]
   140033cfd:	add    BYTE PTR [rax],al
   140033cff:	add    BYTE PTR [rdi],ah
   140033d01:	(bad)  
   140033d02:	add    BYTE PTR [rax],al
   140033d04:	add    BYTE PTR [rax],al
   140033d06:	add    BYTE PTR [rax],al
   140033d08:	(bad)  
   140033d09:	outs   dx,BYTE PTR ds:[rsi]
   140033d0a:	outs   dx,DWORD PTR ds:[rsi]
   140033d0b:	outs   dx,BYTE PTR ds:[rsi]
   140033d0c:	sub    eax,0x65707974
   140033d11:	sub    eax,0x706d6574
   140033d16:	ins    BYTE PTR es:[rdi],dx
   140033d17:	(bad)  
   140033d18:	je     0x140033d7f
   140033d1a:	sub    eax,0x61726170
   140033d1f:	ins    DWORD PTR es:[rdi],dx
   140033d20:	gs je  0x140033d88
   140033d23:	jb     0x140033d25
   140033d25:	add    BYTE PTR [rax],al
   140033d27:	add    BYTE PTR [rsi+0x6f],dh
   140033d2a:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x74600000
   140033d32:	gs ins DWORD PTR es:[rdi],dx
   140033d34:	jo     0x140033da2
   140033d36:	(bad)  
   140033d37:	je     0x140033d9e
   140033d39:	sub    eax,0x61726170
   140033d3e:	ins    DWORD PTR es:[rdi],dx
   140033d3f:	gs je  0x140033da7
   140033d42:	jb     0x140033d44
   140033d44:	cs cs add BYTE PTR cs:[rsi+0x55],cl
   140033d4a:	rex.WR
   140033d4b:	rex.WR add BYTE PTR [rax],r8b
   140033d4e:	add    BYTE PTR [rax],al
   140033d50:	jge    0x140033d79
   140033d52:	and    BYTE PTR [rax],al
   140033d54:	jge    0x140033d7d
   140033d56:	add    BYTE PTR [rax],al
   140033d58:	and    BYTE PTR [rax],al
   140033d5a:	add    BYTE PTR [rax],al
   140033d5c:	add    BYTE PTR [rax],al
   140033d5e:	add    BYTE PTR [rax],al
   140033d60:	(bad)  
   140033d61:	jbe    0x140033dd7
   140033d63:	outs   dx,DWORD PTR ds:[rsi]
   140033d64:	jb     0x140033dca
   140033d66:	imul   esi,DWORD PTR [rbx+0x70],0x7b7865
   140033d6d:	add    BYTE PTR [rax],al
   140033d6f:	add    BYTE PTR [rax+0x76],ah
   140033d72:	je     0x140033de3
   140033d74:	jb     0x140033dda
   140033d76:	imul   esi,DWORD PTR [rbx+0x70],0x7b
   140033d7d:	add    BYTE PTR [rax],al
   140033d7f:	add    BYTE PTR [rax+0x61],ah
   140033d82:	fs push 0x75
   140033d85:	jae    0x140033dfb
   140033d87:	outs   dx,DWORD PTR ds:[rsi]
   140033d88:	jb     0x140033e05
   140033d8a:	add    BYTE PTR [rax],al
   140033d8c:	add    BYTE PTR [rax],al
   140033d8e:	add    BYTE PTR [rax],al
   140033d90:	(bad)  
   140033d91:	ins    BYTE PTR es:[rdi],dx
   140033d92:	outs   dx,DWORD PTR ds:[rsi]
   140033d93:	movsxd esp,DWORD PTR [rcx+0x6c]
   140033d96:	and    BYTE PTR [rbx+0x74],dh
   140033d99:	(bad)  
   140033d9a:	je     0x140033e05
   140033d9c:	movsxd esp,DWORD PTR [rax]
   140033d9e:	fs gs jae 0x140033e16
   140033da2:	jb     0x140033e19
   140033da4:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033da8:	and    BYTE PTR [rax+0x65],ch
   140033dab:	ins    BYTE PTR es:[rdi],dx
   140033dac:	jo     0x140033e13
   140033dae:	jb     0x140033dd7
	...
   140033db8:	(bad)  
   140033db9:	je     0x140033e20
   140033dbb:	ins    DWORD PTR es:[rdi],dx
   140033dbc:	jo     0x140033e2a
   140033dbe:	(bad)  
   140033dbf:	je     0x140033e26
   140033dc1:	and    BYTE PTR [rbx+0x74],dh
   140033dc4:	(bad)  
   140033dc5:	je     0x140033e30
   140033dc7:	movsxd esp,DWORD PTR [rax]
   140033dc9:	fs (bad) 
   140033dcb:	je     0x140033e2e
   140033dcd:	and    BYTE PTR [rbp+0x65],ch
   140033dd0:	ins    DWORD PTR es:[rdi],dx
   140033dd1:	(bad)  
   140033dd2:	gs jb  0x140033df5
   140033dd5:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033dd8:	jae    0x140033e4e
   140033dda:	jb     0x140033e51
   140033ddc:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033de0:	and    BYTE PTR [rax+0x65],ch
   140033de3:	ins    BYTE PTR es:[rdi],dx
   140033de4:	jo     0x140033e4b
   140033de6:	jb     0x140033e0f
	...
   140033df0:	(bad)  
   140033df1:	je     0x140033e58
   140033df3:	ins    DWORD PTR es:[rdi],dx
   140033df4:	jo     0x140033e62
   140033df6:	(bad)  
   140033df7:	je     0x140033e5e
   140033df9:	and    BYTE PTR [rbx+0x74],dh
   140033dfc:	(bad)  
   140033dfd:	je     0x140033e68
   140033dff:	movsxd esp,DWORD PTR [rax]
   140033e01:	fs (bad) 
   140033e03:	je     0x140033e66
   140033e05:	and    BYTE PTR [rbp+0x65],ch
   140033e08:	ins    DWORD PTR es:[rdi],dx
   140033e09:	(bad)  
   140033e0a:	gs jb  0x140033e2d
   140033e0d:	fs gs jae 0x140033e85
   140033e11:	jb     0x140033e88
   140033e13:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033e17:	and    BYTE PTR [rax+0x65],ch
   140033e1a:	ins    BYTE PTR es:[rdi],dx
   140033e1b:	jo     0x140033e82
   140033e1d:	jb     0x140033e46
   140033e1f:	add    BYTE PTR [rbx+0x74],dh
   140033e22:	(bad)  
   140033e23:	je     0x140033e8e
   140033e25:	movsxd esp,DWORD PTR [rax]
   140033e27:	add    BYTE PTR [rsi+0x69],dh
   140033e2a:	jb     0x140033ea0
   140033e2c:	jne    0x140033e8f
   140033e2e:	ins    BYTE PTR es:[rdi],dx
   140033e2f:	and    BYTE PTR [rax],al
   140033e31:	add    BYTE PTR [rax],al
   140033e33:	add    BYTE PTR [rax],al
   140033e35:	add    BYTE PTR [rax],al
   140033e37:	add    BYTE PTR [rax+0x72],dh
   140033e3a:	imul   esi,DWORD PTR [rsi+0x61],0x203a6574
   140033e41:	add    BYTE PTR [rax],al
   140033e43:	add    BYTE PTR [rax],al
   140033e45:	add    BYTE PTR [rax],al
   140033e47:	add    BYTE PTR [rax+0x72],dh
   140033e4a:	outs   dx,DWORD PTR ds:[rsi]
   140033e4b:	je     0x140033eb2
   140033e4d:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140033e51:	cmp    ah,BYTE PTR [rax]
   140033e53:	add    BYTE PTR [rax],al
   140033e55:	add    BYTE PTR [rax],al
   140033e57:	add    BYTE PTR [rax+0x75],dh
   140033e5a:	(bad)  
   140033e5b:	ins    BYTE PTR es:[rdi],dx
   140033e5c:	imul   esp,DWORD PTR [rbx+0x3a],0x20
   140033e63:	add    BYTE PTR [rax],al
   140033e65:	add    BYTE PTR [rax],al
   140033e67:	add    BYTE PTR [rbx+0x74],bl
   140033e6a:	push   0x5d6b6e75
   140033e6f:	cmp    al,BYTE PTR [rax]
   140033e71:	add    BYTE PTR [rax],al
   140033e73:	add    BYTE PTR [rax],al
   140033e75:	add    BYTE PTR [rax],al
   140033e77:	add    BYTE PTR [rbp+0x78],ah
   140033e7a:	je     0x140033ee1
   140033e7c:	jb     0x140033eec
   140033e7e:	and    BYTE PTR [rdx],ah
   140033e80:	rex.XB and spl,BYTE PTR [r8]
   140033e83:	add    BYTE PTR [rcx],ch
   140033e85:	and    BYTE PTR [rax],al
   140033e87:	add    BYTE PTR [rbx+0x68],ah
   140033e8a:	(bad)  
   140033e8b:	jb     0x140033ead
   140033e8d:	add    BYTE PTR [rax],al
   140033e8f:	add    BYTE PTR [rbx+0x68],dh
   140033e92:	outs   dx,DWORD PTR ds:[rsi]
   140033e93:	jb     0x140033f09
   140033e95:	and    BYTE PTR [rax],al
   140033e97:	add    BYTE PTR [rcx+0x6e],ch
   140033e9a:	je     0x140033ebc
   140033e9c:	add    BYTE PTR [rax],al
   140033e9e:	add    BYTE PTR [rax],al
   140033ea0:	ins    BYTE PTR es:[rdi],dx
   140033ea1:	outs   dx,DWORD PTR ds:[rsi]
   140033ea2:	outs   dx,BYTE PTR ds:[rsi]
   140033ea3:	and    BYTE PTR [eax],al
   140033ea6:	add    BYTE PTR [rax],al
   140033ea8:	jne    0x140033f18
   140033eaa:	jae    0x140033f15
   140033eac:	outs   dx,BYTE PTR ds:[esi]
   140033eae:	gs and BYTE PTR fs:[rax],al
   140033eb2:	add    BYTE PTR [rax],al
   140033eb4:	jbe    0x140033f25
   140033eb6:	imul   esp,DWORD PTR [rax+riz*1+0x0],0x0
   140033ebe:	add    BYTE PTR [rax],al
   140033ec0:	jbe    0x140033f31
   140033ec2:	ins    BYTE PTR es:[rdi],dx
   140033ec3:	(bad)  
   140033ec4:	je     0x140033f2f
   140033ec6:	ins    BYTE PTR es:[rdi],dx
   140033ec7:	add    BYTE PTR gs:[rax],al
   140033eca:	add    BYTE PTR [rax],al
   140033ecc:	add    BYTE PTR [rax],al
   140033ece:	add    BYTE PTR [rax],al
   140033ed0:	jae    0x140033f46
   140033ed2:	cmp    bh,BYTE PTR fs:[rdx]
   140033ed5:	outs   dx,BYTE PTR ds:[rsi]
   140033ed6:	jne    0x140033f44
   140033ed8:	ins    BYTE PTR es:[rdi],dx
   140033ed9:	jo     0x140033f4f
   140033edb:	jb     0x140033f3c
   140033edd:	je     0x140033edf
   140033edf:	add    BYTE PTR [riz*2+0x70696c6c],bh
   140033ee6:	jae    0x140033f51
   140033ee8:	jae    0x140033f28
   140033eea:	add    BYTE PTR [rax],al
   140033eec:	sub    al,0x2e
   140033eee:	cs add BYTE PTR cs:[rax],al
   140033ef2:	add    BYTE PTR [rax],al
   140033ef4:	add    BYTE PTR [rax],al
   140033ef6:	add    BYTE PTR [rax],al
   140033ef8:	sub    al,0x3c
   140033efa:	gs ins BYTE PTR es:[rdi],dx
   140033efc:	ins    BYTE PTR es:[rdi],dx
   140033efd:	imul   esi,DWORD PTR [rax+0x73],0x3e7369
   140033f04:	add    BYTE PTR [rax],al
   140033f06:	add    BYTE PTR [rax],al
   140033f08:	and    BYTE PTR [rax+rbp*2+0x72],dh
   140033f0c:	outs   dx,DWORD PTR ds:[rsi]
   140033f0d:	ja     0x140033f37
   140033f0f:	add    BYTE PTR [rbx+0x70],ah
   140033f12:	jne    0x140033f14
   140033f14:	(bad)  
   140033f15:	ins    DWORD PTR es:[rdi],dx
   140033f16:	jo     0x140033f18
   140033f18:	sub    al,0x20
   140033f1a:	add    BYTE PTR [rax],al
   140033f1c:	movsxd ebp,DWORD PTR [rax+0x61]
   140033f1f:	jb     0x140033f21
   140033f21:	add    BYTE PTR [rax],al
   140033f23:	add    BYTE PTR [rbx+0x68],dh
   140033f26:	outs   dx,DWORD PTR ds:[rsi]
   140033f27:	jb     0x140033f9d
   140033f29:	add    BYTE PTR [rax],al
   140033f2b:	add    BYTE PTR [rcx+0x6e],ch
   140033f2e:	je     0x140033f30
   140033f30:	ins    BYTE PTR es:[rdi],dx
   140033f31:	outs   dx,DWORD PTR ds:[rsi]
   140033f32:	outs   dx,BYTE PTR ds:[rsi]
   140033f33:	add    BYTE PTR [eax],al
   140033f36:	add    BYTE PTR [rax],al
   140033f38:	data16 ins BYTE PTR es:[rdi],dx
   140033f3a:	outs   dx,DWORD PTR ds:[rsi]
   140033f3b:	(bad)  
   140033f3c:	je     0x140033f3e
   140033f3e:	add    BYTE PTR [rax],al
   140033f40:	outs   dx,DWORD PTR fs:[rsi]
   140033f42:	jne    0x140033fa6
   140033f44:	ins    BYTE PTR es:[rdi],dx
   140033f45:	add    BYTE PTR gs:[rax],al
   140033f48:	(bad)  
   140033f49:	outs   dx,DWORD PTR ds:[rsi]
   140033f4a:	outs   dx,DWORD PTR ds:[rsi]
   140033f4b:	ins    BYTE PTR es:[rdi],dx
   140033f4c:	add    BYTE PTR [rax],al
   140033f4e:	add    BYTE PTR [rax],al
   140033f50:	pop    rdi
   140033f51:	pop    rdi
   140033f52:	imul   ebp,DWORD PTR [rsi+0x74],0x5f000038
   140033f59:	pop    rdi
   140033f5a:	imul   ebp,DWORD PTR [rsi+0x74],0x5f003631
   140033f61:	pop    rdi
   140033f62:	imul   ebp,DWORD PTR [rsi+0x74],0x5f003233
   140033f69:	pop    rdi
   140033f6a:	imul   ebp,DWORD PTR [rsi+0x74],0x5f003436
   140033f71:	pop    rdi
   140033f72:	imul   ebp,DWORD PTR [rsi+0x74],0x383231
   140033f79:	add    BYTE PTR [rax],al
   140033f7b:	add    BYTE PTR [rax],al
   140033f7d:	add    BYTE PTR [rax],al
   140033f7f:	add    BYTE PTR [rsi*2+0x6f6e6b6e],bh
   140033f86:	ja     0x140033ff6
   140033f88:	add    BYTE PTR ds:[rax],al
   140033f8b:	add    BYTE PTR [rax],al
   140033f8d:	add    BYTE PTR [rax],al
   140033f8f:	add    BYTE PTR [rdi+0x63],dh
   140033f92:	push   0x745f7261
   140033f97:	add    BYTE PTR [rdi+0x5f],bl
   140033f9a:	ja     0x140033fd2
   140033f9c:	xor    al,0x20
   140033f9e:	add    BYTE PTR [rax],al
   140033fa0:	push   rbp
   140033fa1:	rex.WRX
   140033fa2:	rex.WXB
   140033fa3:	rex.WRX
   140033fa4:	rex.WRXB push r15
   140033fa6:	rex.WRX add BYTE PTR [rbx+0x69],r14b
   140033faa:	outs   dx,BYTE PTR ds:[esi]
   140033fac:	gs and BYTE PTR fs:[rax],al
   140033fb0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033fb3:	jae    0x140034029
   140033fb5:	add    BYTE PTR [rax],al
   140033fb7:	add    BYTE PTR [rax],ah
   140033fb9:	jbe    0x14003402a
   140033fbb:	ins    BYTE PTR es:[rdi],dx
   140033fbc:	(bad)  
   140033fbd:	je     0x140034028
   140033fbf:	ins    BYTE PTR es:[rdi],dx
   140033fc0:	add    BYTE PTR gs:[rax],al
   140033fc3:	add    BYTE PTR [rax],al
   140033fc5:	add    BYTE PTR [rax],al
   140033fc7:	add    BYTE PTR [rax+0x75],ah
   140033fca:	outs   dx,BYTE PTR ds:[rsi]
   140033fcb:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140033fcf:	outs   dx,BYTE PTR ds:[rsi]
   140033fd0:	and    BYTE PTR [rbp+0x63],ah
   140033fd3:	jae    0x14003404a
   140033fd5:	(bad)  
   140033fd6:	add    BYTE PTR [rax],al
   140033fd8:	jne    0x140034048
   140033fda:	imul   ebp,DWORD PTR [rdi+0x6e],0x73000020
   140033fe1:	je     0x140034055
   140033fe3:	jne    0x140034048
   140033fe5:	je     0x140034007
   140033fe7:	add    BYTE PTR [rbx+0x6c],ah
   140033fea:	(bad)  
   140033feb:	jae    0x140034060
   140033fed:	and    BYTE PTR [rax],al
   140033fef:	add    BYTE PTR [rbx+0x6f],ah
   140033ff2:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   140033ff6:	jae    0x140034018
	...
   140034000:	movsxd ebp,DWORD PTR [rdi+0x69]
   140034003:	outs   dx,BYTE PTR ds:[rsi]
   140034004:	je     0x14003406b
   140034006:	jb     0x14003406e
   140034008:	(bad)  
   140034009:	movsxd esp,DWORD PTR [rbp+0x20]
   14003400c:	add    BYTE PTR [rax],al
   14003400e:	add    BYTE PTR [rax],al
   140034010:	outs   dx,BYTE PTR gs:[rsi]
   140034012:	jne    0x140034081
   140034014:	and    BYTE PTR [rax],al
   140034016:	add    BYTE PTR [rax],al
   140034018:	jbe    0x140034089
   14003401a:	ins    BYTE PTR es:[rdi],dx
   14003401b:	(bad)  
   14003401c:	je     0x140034087
   14003401e:	ins    BYTE PTR es:[rdi],dx
   14003401f:	and    BYTE PTR gs:[rax],al
   140034022:	add    BYTE PTR [rax],al
   140034024:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140034027:	jae    0x14003409d
   140034029:	and    BYTE PTR [rax],al
   14003402b:	add    BYTE PTR [rax],al
   14003402d:	add    BYTE PTR [rax],al
   14003402f:	add    BYTE PTR [rbx+0x6c],ah
   140034032:	imul   edi,DWORD PTR [rdx],0x7272613a
   140034038:	(bad)  
   140034039:	jns    0x140034077
   14003403b:	add    BYTE PTR [rax],al
   14003403d:	add    BYTE PTR [rax],al
   14003403f:	add    BYTE PTR [rbx+0x6c],ah
   140034042:	imul   edi,DWORD PTR [rdx],0x6e69703a
   140034048:	pop    rdi
   140034049:	jo     0x1400340bf
   14003404b:	jb     0x140034089
   14003404d:	add    BYTE PTR [rax],al
   14003404f:	add    BYTE PTR [rcx],ch
   140034051:	pop    rbx
   140034052:	add    BYTE PTR [rax],al
   140034054:	jnp    0x1400340bc
   140034056:	ins    BYTE PTR es:[rdi],dx
   140034057:	(bad)  
   140034058:	je     0x1400340d7
   14003405a:	add    BYTE PTR [rax],al
   14003405c:	jnp    0x1400340c4
   14003405e:	outs   dx,DWORD PTR ds:[rsi]
   14003405f:	jb     0x140034081
   140034061:	add    BYTE PTR [rax],al
   140034063:	add    BYTE PTR [rbx+0x20],dh
   140034066:	add    BYTE PTR [rax],al
   140034068:	push   rax
   140034069:	add    ax,WORD PTR [rax+0x1]
   14003406d:	add    BYTE PTR [rax],al
   14003406f:	add    BYTE PTR [rsi+rdx*2+0x14000],ah
   140034076:	add    BYTE PTR [rax],al
   140034078:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140034079:	push   rsi
   14003407a:	add    BYTE PTR [rax+0x1],al
   14003407d:	add    BYTE PTR [rax],al
   14003407f:	add    BYTE PTR [rsi+rdx*2+0x14000],ah
   140034086:	add    BYTE PTR [rax],al
   140034088:	enter  0x366,0x40
   14003408c:	add    DWORD PTR [rax],eax
   14003408e:	add    BYTE PTR [rax],al
   140034090:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140034091:	test   eax,0x14001
   140034096:	add    BYTE PTR [rax],al
   140034098:	push   rsp
   140034099:	jge    0x14003409c
   14003409b:	rex add DWORD PTR [rax],eax
   14003409e:	add    BYTE PTR [rax],al
   1400340a0:	rcl    BYTE PTR [rbx+0x14001],1
   1400340a6:	add    BYTE PTR [rax],al
   1400340a8:	rex.W
   1400340a9:	add    eax,DWORD PTR [eax+0x1]
   1400340ad:	add    BYTE PTR [rax],al
   1400340af:	add    BYTE PTR [rax],bl
   1400340b1:	stos   BYTE PTR es:[rdi],al
   1400340b2:	add    DWORD PTR [rax+0x1],eax
   1400340b5:	add    BYTE PTR [rax],al
   1400340b7:	add    BYTE PTR [rbp+rdi*2+0x14001],ah
   1400340be:	add    BYTE PTR [rax],al
   1400340c0:	xchg   rsp,rax
   1400340c2:	add    DWORD PTR [rax+0x1],eax
   1400340c5:	add    BYTE PTR [rax],al
   1400340c7:	add    al,cl
   1400340c9:	add    eax,DWORD PTR [eax+0x1]
   1400340cd:	add    BYTE PTR [rax],al
   1400340cf:	add    BYTE PTR [rcx+rbp*4+0x14001],ch
   1400340d6:	add    BYTE PTR [rax],al
   1400340d8:	pop    rax
   1400340d9:	jge    0x1400340dc
   1400340db:	rex add DWORD PTR [rax],eax
   1400340de:	add    BYTE PTR [rax],al
   1400340e0:	in     al,0x93
   1400340e2:	add    DWORD PTR [rax+0x1],eax
   1400340e5:	add    BYTE PTR [rax],al
   1400340e7:	add    BYTE PTR [rax+0x68],cl
   1400340ea:	add    eax,DWORD PTR [rax+0x1]
   1400340ed:	add    BYTE PTR [rax],al
   1400340ef:	add    BYTE PTR [rax+0x14001a9],ah
   1400340f5:	add    BYTE PTR [rax],al
   1400340f7:	add    BYTE PTR [rax+0x7d],cl
   1400340fa:	add    DWORD PTR [rax+0x1],eax
   1400340fd:	add    BYTE PTR [rax],al
   1400340ff:	add    BYTE PTR [rbx+rdx*4+0x14001],cl
   140034106:	add    BYTE PTR [rax],al
   140034108:	enter  0x368,0x40
   14003410c:	add    DWORD PTR [rax],eax
   14003410e:	add    BYTE PTR [rax],al
   140034110:	shr    BYTE PTR [rcx+0x14001],1
   140034116:	add    BYTE PTR [rax],al
   140034118:	jl     0x140034197
   14003411a:	add    DWORD PTR [rax+0x1],eax
   14003411d:	add    BYTE PTR [rax],al
   14003411f:	add    BYTE PTR [rsp+rdx*4],cl
   140034122:	add    DWORD PTR [rax+0x1],eax
   140034125:	add    BYTE PTR [rax],al
   140034127:	add    BYTE PTR [rax],ah
   140034129:	(bad)  
   14003412a:	(bad)  
   14003412b:	and    BYTE PTR [rax],al
   14003412d:	add    BYTE PTR [rax],al
   14003412f:	add    BYTE PTR [rbp+0x0],dl
   140034132:	push   rbx
   140034133:	add    BYTE PTR [rbp+0x0],al
   140034136:	push   rdx
   140034137:	add    BYTE PTR [rbx],dh
   140034139:	add    BYTE PTR [rdx],dh
   14003413b:	add    BYTE PTR [rsi],ch
   14003413d:	add    BYTE PTR [rax+rax*1+0x4c],al
   140034141:	add    BYTE PTR [rax+rax*1+0x0],cl
   140034145:	add    BYTE PTR [rax],al
   140034147:	add    BYTE PTR [rbp+0x65],cl
   14003414a:	jae    0x1400341bf
   14003414c:	(bad)  
   14003414d:	rex.X outs dx,DWORD PTR gs:[esi]
   140034151:	js     0x1400341aa
   140034153:	add    BYTE PTR [rax],al
   140034155:	add    BYTE PTR [rax],al
   140034157:	add    BYTE PTR [rdi+0x65],al
   14003415a:	je     0x14003419d
   14003415c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140034160:	gs push rdi
   140034162:	imul   ebp,DWORD PTR [rsi+0x64],0x4700776f
   140034169:	gs je  0x1400341b8
   14003416c:	(bad)  
   14003416d:	jae    0x1400341e3
   14003416f:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140034174:	gs push rax
   140034176:	outs   dx,DWORD PTR ds:[rsi]
   140034177:	jo     0x1400341ee
   140034179:	jo     0x14003417b
   14003417b:	add    BYTE PTR [rax],al
   14003417d:	add    BYTE PTR [rax],al
   14003417f:	add    BYTE PTR [rdi+0x65],al
   140034182:	je     0x1400341d9
   140034184:	jae    0x1400341eb
   140034186:	jb     0x1400341d7
   140034188:	(bad)  
   140034189:	push   0x65
   14003418b:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14003418f:	outs   dx,WORD PTR ds:[rsi]
   140034191:	jb     0x140034200
   140034193:	(bad)  
   140034194:	je     0x1400341ff
   140034196:	outs   dx,DWORD PTR ds:[rsi]
   140034197:	outs   dx,BYTE PTR ds:[rsi]
   140034198:	push   rdi
   140034199:	add    BYTE PTR [rax],al
   14003419b:	add    BYTE PTR [rax],al
   14003419d:	add    BYTE PTR [rax],al
   14003419f:	add    BYTE PTR [rdi+0x65],al
   1400341a2:	je     0x1400341f4
   1400341a4:	jb     0x140034215
   1400341a6:	movsxd esp,DWORD PTR [rbp+0x73]
   1400341a9:	jae    0x140034202
   1400341ab:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   1400341b2:	(bad)  
   1400341b3:	je     0x14003421e
   1400341b5:	outs   dx,DWORD PTR ds:[rsi]
   1400341b6:	outs   dx,BYTE PTR ds:[rsi]
	...
   1400342bf:	add    BYTE PTR [rax],ah
   1400342c1:	add    BYTE PTR [rax],ah
   1400342c3:	add    BYTE PTR [rax],ah
   1400342c5:	add    BYTE PTR [rax],ah
   1400342c7:	add    BYTE PTR [rax],ah
   1400342c9:	add    BYTE PTR [rax],ah
   1400342cb:	add    BYTE PTR [rax],ah
   1400342cd:	add    BYTE PTR [rax],ah
   1400342cf:	add    BYTE PTR [rax],ah
   1400342d1:	add    BYTE PTR [rax],ch
   1400342d3:	add    BYTE PTR [rax],ch
   1400342d5:	add    BYTE PTR [rax],ch
   1400342d7:	add    BYTE PTR [rax],ch
   1400342d9:	add    BYTE PTR [rax],ch
   1400342db:	add    BYTE PTR [rax],ah
   1400342dd:	add    BYTE PTR [rax],ah
   1400342df:	add    BYTE PTR [rax],ah
   1400342e1:	add    BYTE PTR [rax],ah
   1400342e3:	add    BYTE PTR [rax],ah
   1400342e5:	add    BYTE PTR [rax],ah
   1400342e7:	add    BYTE PTR [rax],ah
   1400342e9:	add    BYTE PTR [rax],ah
   1400342eb:	add    BYTE PTR [rax],ah
   1400342ed:	add    BYTE PTR [rax],ah
   1400342ef:	add    BYTE PTR [rax],ah
   1400342f1:	add    BYTE PTR [rax],ah
   1400342f3:	add    BYTE PTR [rax],ah
   1400342f5:	add    BYTE PTR [rax],ah
   1400342f7:	add    BYTE PTR [rax],ah
   1400342f9:	add    BYTE PTR [rax],ah
   1400342fb:	add    BYTE PTR [rax],ah
   1400342fd:	add    BYTE PTR [rax],ah
   1400342ff:	add    BYTE PTR [rax+0x0],cl
   140034302:	adc    BYTE PTR [rax],al
   140034304:	adc    BYTE PTR [rax],al
   140034306:	adc    BYTE PTR [rax],al
   140034308:	adc    BYTE PTR [rax],al
   14003430a:	adc    BYTE PTR [rax],al
   14003430c:	adc    BYTE PTR [rax],al
   14003430e:	adc    BYTE PTR [rax],al
   140034310:	adc    BYTE PTR [rax],al
   140034312:	adc    BYTE PTR [rax],al
   140034314:	adc    BYTE PTR [rax],al
   140034316:	adc    BYTE PTR [rax],al
   140034318:	adc    BYTE PTR [rax],al
   14003431a:	adc    BYTE PTR [rax],al
   14003431c:	adc    BYTE PTR [rax],al
   14003431e:	adc    BYTE PTR [rax],al
   140034320:	test   BYTE PTR [rax],al
   140034322:	test   BYTE PTR [rax],al
   140034324:	test   BYTE PTR [rax],al
   140034326:	test   BYTE PTR [rax],al
   140034328:	test   BYTE PTR [rax],al
   14003432a:	test   BYTE PTR [rax],al
   14003432c:	test   BYTE PTR [rax],al
   14003432e:	test   BYTE PTR [rax],al
   140034330:	test   BYTE PTR [rax],al
   140034332:	test   BYTE PTR [rax],al
   140034334:	adc    BYTE PTR [rax],al
   140034336:	adc    BYTE PTR [rax],al
   140034338:	adc    BYTE PTR [rax],al
   14003433a:	adc    BYTE PTR [rax],al
   14003433c:	adc    BYTE PTR [rax],al
   14003433e:	adc    BYTE PTR [rax],al
   140034340:	adc    BYTE PTR [rax],al
   140034342:	add    DWORD PTR [rax],0x810081
   140034348:	add    DWORD PTR [rax],0x810081
   14003434e:	add    DWORD PTR [rax],eax
   140034350:	add    DWORD PTR [rax],eax
   140034352:	add    DWORD PTR [rax],eax
   140034354:	add    DWORD PTR [rax],eax
   140034356:	add    DWORD PTR [rax],eax
   140034358:	add    DWORD PTR [rax],eax
   14003435a:	add    DWORD PTR [rax],eax
   14003435c:	add    DWORD PTR [rax],eax
   14003435e:	add    DWORD PTR [rax],eax
   140034360:	add    DWORD PTR [rax],eax
   140034362:	add    DWORD PTR [rax],eax
   140034364:	add    DWORD PTR [rax],eax
   140034366:	add    DWORD PTR [rax],eax
   140034368:	add    DWORD PTR [rax],eax
   14003436a:	add    DWORD PTR [rax],eax
   14003436c:	add    DWORD PTR [rax],eax
   14003436e:	add    DWORD PTR [rax],eax
   140034370:	add    DWORD PTR [rax],eax
   140034372:	add    DWORD PTR [rax],eax
   140034374:	add    DWORD PTR [rax],eax
   140034376:	adc    BYTE PTR [rax],al
   140034378:	adc    BYTE PTR [rax],al
   14003437a:	adc    BYTE PTR [rax],al
   14003437c:	adc    BYTE PTR [rax],al
   14003437e:	adc    BYTE PTR [rax],al
   140034380:	adc    BYTE PTR [rax],al
   140034382:	(bad)  
   140034383:	add    BYTE PTR [rdx-0x7dff7e00],al
   140034389:	add    BYTE PTR [rdx+0x2008200],al
   14003438f:	add    BYTE PTR [rdx],al
   140034391:	add    BYTE PTR [rdx],al
   140034393:	add    BYTE PTR [rdx],al
   140034395:	add    BYTE PTR [rdx],al
   140034397:	add    BYTE PTR [rdx],al
   140034399:	add    BYTE PTR [rdx],al
   14003439b:	add    BYTE PTR [rdx],al
   14003439d:	add    BYTE PTR [rdx],al
   14003439f:	add    BYTE PTR [rdx],al
   1400343a1:	add    BYTE PTR [rdx],al
   1400343a3:	add    BYTE PTR [rdx],al
   1400343a5:	add    BYTE PTR [rdx],al
   1400343a7:	add    BYTE PTR [rdx],al
   1400343a9:	add    BYTE PTR [rdx],al
   1400343ab:	add    BYTE PTR [rdx],al
   1400343ad:	add    BYTE PTR [rdx],al
   1400343af:	add    BYTE PTR [rdx],al
   1400343b1:	add    BYTE PTR [rdx],al
   1400343b3:	add    BYTE PTR [rdx],al
   1400343b5:	add    BYTE PTR [rax],dl
   1400343b7:	add    BYTE PTR [rax],dl
   1400343b9:	add    BYTE PTR [rax],dl
   1400343bb:	add    BYTE PTR [rax],dl
   1400343bd:	add    BYTE PTR [rax],ah
	...
   1400344bf:	add    BYTE PTR [rax],al
   1400344c1:	add    BYTE PTR [rax],ah
   1400344c3:	add    BYTE PTR [rax],ah
   1400344c5:	add    BYTE PTR [rax],ah
   1400344c7:	add    BYTE PTR [rax],ah
   1400344c9:	add    BYTE PTR [rax],ah
   1400344cb:	add    BYTE PTR [rax],ah
   1400344cd:	add    BYTE PTR [rax],ah
   1400344cf:	add    BYTE PTR [rax],ah
   1400344d1:	add    BYTE PTR [rax],ah
   1400344d3:	add    BYTE PTR [rax],ch
   1400344d5:	add    BYTE PTR [rax],ch
   1400344d7:	add    BYTE PTR [rax],ch
   1400344d9:	add    BYTE PTR [rax],ch
   1400344db:	add    BYTE PTR [rax],ch
   1400344dd:	add    BYTE PTR [rax],ah
   1400344df:	add    BYTE PTR [rax],ah
   1400344e1:	add    BYTE PTR [rax],ah
   1400344e3:	add    BYTE PTR [rax],ah
   1400344e5:	add    BYTE PTR [rax],ah
   1400344e7:	add    BYTE PTR [rax],ah
   1400344e9:	add    BYTE PTR [rax],ah
   1400344eb:	add    BYTE PTR [rax],ah
   1400344ed:	add    BYTE PTR [rax],ah
   1400344ef:	add    BYTE PTR [rax],ah
   1400344f1:	add    BYTE PTR [rax],ah
   1400344f3:	add    BYTE PTR [rax],ah
   1400344f5:	add    BYTE PTR [rax],ah
   1400344f7:	add    BYTE PTR [rax],ah
   1400344f9:	add    BYTE PTR [rax],ah
   1400344fb:	add    BYTE PTR [rax],ah
   1400344fd:	add    BYTE PTR [rax],ah
   1400344ff:	add    BYTE PTR [rax],ah
   140034501:	add    BYTE PTR [rax+0x0],cl
   140034504:	adc    BYTE PTR [rax],al
   140034506:	adc    BYTE PTR [rax],al
   140034508:	adc    BYTE PTR [rax],al
   14003450a:	adc    BYTE PTR [rax],al
   14003450c:	adc    BYTE PTR [rax],al
   14003450e:	adc    BYTE PTR [rax],al
   140034510:	adc    BYTE PTR [rax],al
   140034512:	adc    BYTE PTR [rax],al
   140034514:	adc    BYTE PTR [rax],al
   140034516:	adc    BYTE PTR [rax],al
   140034518:	adc    BYTE PTR [rax],al
   14003451a:	adc    BYTE PTR [rax],al
   14003451c:	adc    BYTE PTR [rax],al
   14003451e:	adc    BYTE PTR [rax],al
   140034520:	adc    BYTE PTR [rax],al
   140034522:	test   BYTE PTR [rax],al
   140034524:	test   BYTE PTR [rax],al
   140034526:	test   BYTE PTR [rax],al
   140034528:	test   BYTE PTR [rax],al
   14003452a:	test   BYTE PTR [rax],al
   14003452c:	test   BYTE PTR [rax],al
   14003452e:	test   BYTE PTR [rax],al
   140034530:	test   BYTE PTR [rax],al
   140034532:	test   BYTE PTR [rax],al
   140034534:	test   BYTE PTR [rax],al
   140034536:	adc    BYTE PTR [rax],al
   140034538:	adc    BYTE PTR [rax],al
   14003453a:	adc    BYTE PTR [rax],al
   14003453c:	adc    BYTE PTR [rax],al
   14003453e:	adc    BYTE PTR [rax],al
   140034540:	adc    BYTE PTR [rax],al
   140034542:	adc    BYTE PTR [rax],al
   140034544:	add    DWORD PTR [rcx],0x1810181
   14003454a:	add    DWORD PTR [rcx],0x1810181
   140034550:	add    DWORD PTR [rcx],eax
   140034552:	add    DWORD PTR [rcx],eax
   140034554:	add    DWORD PTR [rcx],eax
   140034556:	add    DWORD PTR [rcx],eax
   140034558:	add    DWORD PTR [rcx],eax
   14003455a:	add    DWORD PTR [rcx],eax
   14003455c:	add    DWORD PTR [rcx],eax
   14003455e:	add    DWORD PTR [rcx],eax
   140034560:	add    DWORD PTR [rcx],eax
   140034562:	add    DWORD PTR [rcx],eax
   140034564:	add    DWORD PTR [rcx],eax
   140034566:	add    DWORD PTR [rcx],eax
   140034568:	add    DWORD PTR [rcx],eax
   14003456a:	add    DWORD PTR [rcx],eax
   14003456c:	add    DWORD PTR [rcx],eax
   14003456e:	add    DWORD PTR [rcx],eax
   140034570:	add    DWORD PTR [rcx],eax
   140034572:	add    DWORD PTR [rcx],eax
   140034574:	add    DWORD PTR [rcx],eax
   140034576:	add    DWORD PTR [rcx],eax
   140034578:	adc    BYTE PTR [rax],al
   14003457a:	adc    BYTE PTR [rax],al
   14003457c:	adc    BYTE PTR [rax],al
   14003457e:	adc    BYTE PTR [rax],al
   140034580:	adc    BYTE PTR [rax],al
   140034582:	adc    BYTE PTR [rax],al
   140034584:	(bad)  
   140034585:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   14003458b:	add    DWORD PTR [rdx+0x2018201],eax
   140034591:	add    DWORD PTR [rdx],eax
   140034593:	add    DWORD PTR [rdx],eax
   140034595:	add    DWORD PTR [rdx],eax
   140034597:	add    DWORD PTR [rdx],eax
   140034599:	add    DWORD PTR [rdx],eax
   14003459b:	add    DWORD PTR [rdx],eax
   14003459d:	add    DWORD PTR [rdx],eax
   14003459f:	add    DWORD PTR [rdx],eax
   1400345a1:	add    DWORD PTR [rdx],eax
   1400345a3:	add    DWORD PTR [rdx],eax
   1400345a5:	add    DWORD PTR [rdx],eax
   1400345a7:	add    DWORD PTR [rdx],eax
   1400345a9:	add    DWORD PTR [rdx],eax
   1400345ab:	add    DWORD PTR [rdx],eax
   1400345ad:	add    DWORD PTR [rdx],eax
   1400345af:	add    DWORD PTR [rdx],eax
   1400345b1:	add    DWORD PTR [rdx],eax
   1400345b3:	add    DWORD PTR [rdx],eax
   1400345b5:	add    DWORD PTR [rdx],eax
   1400345b7:	add    DWORD PTR [rax],edx
   1400345b9:	add    BYTE PTR [rax],dl
   1400345bb:	add    BYTE PTR [rax],dl
   1400345bd:	add    BYTE PTR [rax],dl
   1400345bf:	add    BYTE PTR [rax],ah
   1400345c1:	add    BYTE PTR [rax],ah
   1400345c3:	add    BYTE PTR [rax],ah
   1400345c5:	add    BYTE PTR [rax],ah
   1400345c7:	add    BYTE PTR [rax],ah
   1400345c9:	add    BYTE PTR [rax],ah
   1400345cb:	add    BYTE PTR [rax],ah
   1400345cd:	add    BYTE PTR [rax],ah
   1400345cf:	add    BYTE PTR [rax],ah
   1400345d1:	add    BYTE PTR [rax],ah
   1400345d3:	add    BYTE PTR [rax],ah
   1400345d5:	add    BYTE PTR [rax],ah
   1400345d7:	add    BYTE PTR [rax],ah
   1400345d9:	add    BYTE PTR [rax],ah
   1400345db:	add    BYTE PTR [rax],ah
   1400345dd:	add    BYTE PTR [rax],ah
   1400345df:	add    BYTE PTR [rax],ah
   1400345e1:	add    BYTE PTR [rax],ah
   1400345e3:	add    BYTE PTR [rax],ah
   1400345e5:	add    BYTE PTR [rax],ah
   1400345e7:	add    BYTE PTR [rax],ah
   1400345e9:	add    BYTE PTR [rax],ah
   1400345eb:	add    BYTE PTR [rax],ah
   1400345ed:	add    BYTE PTR [rax],ah
   1400345ef:	add    BYTE PTR [rax],ah
   1400345f1:	add    BYTE PTR [rax],ah
   1400345f3:	add    BYTE PTR [rax],ah
   1400345f5:	add    BYTE PTR [rax],ah
   1400345f7:	add    BYTE PTR [rax],ah
   1400345f9:	add    BYTE PTR [rax],ah
   1400345fb:	add    BYTE PTR [rax],ah
   1400345fd:	add    BYTE PTR [rax],ah
   1400345ff:	add    BYTE PTR [rax],ah
   140034601:	add    BYTE PTR [rax],cl
   140034603:	add    BYTE PTR [rax],dl
   140034605:	add    BYTE PTR [rax],dl
   140034607:	add    BYTE PTR [rax],dl
   140034609:	add    BYTE PTR [rax],dl
   14003460b:	add    BYTE PTR [rax],dl
   14003460d:	add    BYTE PTR [rax],dl
   14003460f:	add    BYTE PTR [rax],dl
   140034611:	add    BYTE PTR [rax],dl
   140034613:	add    BYTE PTR [rax],dl
   140034615:	add    BYTE PTR [rax],dl
   140034617:	add    BYTE PTR [rax],dl
   140034619:	add    BYTE PTR [rax],dl
   14003461b:	add    BYTE PTR [rax],dl
   14003461d:	add    BYTE PTR [rax],dl
   14003461f:	add    BYTE PTR [rax],dl
   140034621:	add    BYTE PTR [rax],dl
   140034623:	add    BYTE PTR [rax],dl
   140034625:	add    BYTE PTR [rax],dl
   140034627:	add    BYTE PTR [rax],dl
   140034629:	add    BYTE PTR [rax],dl
   14003462b:	add    BYTE PTR [rax],dl
   14003462d:	add    BYTE PTR [rax],dl
   14003462f:	add    BYTE PTR [rax],dl
   140034631:	add    BYTE PTR [rax],dl
   140034633:	add    BYTE PTR [rax],dl
   140034635:	add    BYTE PTR [rax],dl
   140034637:	add    BYTE PTR [rax],dl
   140034639:	add    BYTE PTR [rax],dl
   14003463b:	add    BYTE PTR [rax],dl
   14003463d:	add    BYTE PTR [rax],dl
   14003463f:	add    BYTE PTR [rax],dl
   140034641:	add    BYTE PTR [rcx],al
   140034643:	add    DWORD PTR [rcx],eax
   140034645:	add    DWORD PTR [rcx],eax
   140034647:	add    DWORD PTR [rcx],eax
   140034649:	add    DWORD PTR [rcx],eax
   14003464b:	add    DWORD PTR [rcx],eax
   14003464d:	add    DWORD PTR [rcx],eax
   14003464f:	add    DWORD PTR [rcx],eax
   140034651:	add    DWORD PTR [rcx],eax
   140034653:	add    DWORD PTR [rcx],eax
   140034655:	add    DWORD PTR [rcx],eax
   140034657:	add    DWORD PTR [rcx],eax
   140034659:	add    DWORD PTR [rcx],eax
   14003465b:	add    DWORD PTR [rcx],eax
   14003465d:	add    DWORD PTR [rcx],eax
   14003465f:	add    DWORD PTR [rcx],eax
   140034661:	add    DWORD PTR [rcx],eax
   140034663:	add    DWORD PTR [rcx],eax
   140034665:	add    DWORD PTR [rcx],eax
   140034667:	add    DWORD PTR [rcx],eax
   140034669:	add    DWORD PTR [rcx],eax
   14003466b:	add    DWORD PTR [rcx],eax
   14003466d:	add    DWORD PTR [rcx],eax
   14003466f:	add    DWORD PTR [rax],edx
   140034671:	add    BYTE PTR [rcx],al
   140034673:	add    DWORD PTR [rcx],eax
   140034675:	add    DWORD PTR [rcx],eax
   140034677:	add    DWORD PTR [rcx],eax
   140034679:	add    DWORD PTR [rcx],eax
   14003467b:	add    DWORD PTR [rcx],eax
   14003467d:	add    DWORD PTR [rcx],eax
   14003467f:	add    DWORD PTR [rdx],eax
   140034681:	add    DWORD PTR [rdx],eax
   140034683:	add    DWORD PTR [rdx],eax
   140034685:	add    DWORD PTR [rdx],eax
   140034687:	add    DWORD PTR [rdx],eax
   140034689:	add    DWORD PTR [rdx],eax
   14003468b:	add    DWORD PTR [rdx],eax
   14003468d:	add    DWORD PTR [rdx],eax
   14003468f:	add    DWORD PTR [rdx],eax
   140034691:	add    DWORD PTR [rdx],eax
   140034693:	add    DWORD PTR [rdx],eax
   140034695:	add    DWORD PTR [rdx],eax
   140034697:	add    DWORD PTR [rdx],eax
   140034699:	add    DWORD PTR [rdx],eax
   14003469b:	add    DWORD PTR [rdx],eax
   14003469d:	add    DWORD PTR [rdx],eax
   14003469f:	add    DWORD PTR [rdx],eax
   1400346a1:	add    DWORD PTR [rdx],eax
   1400346a3:	add    DWORD PTR [rdx],eax
   1400346a5:	add    DWORD PTR [rdx],eax
   1400346a7:	add    DWORD PTR [rdx],eax
   1400346a9:	add    DWORD PTR [rdx],eax
   1400346ab:	add    DWORD PTR [rdx],eax
   1400346ad:	add    DWORD PTR [rdx],eax
   1400346af:	add    DWORD PTR [rax],edx
   1400346b1:	add    BYTE PTR [rdx],al
   1400346b3:	add    DWORD PTR [rdx],eax
   1400346b5:	add    DWORD PTR [rdx],eax
   1400346b7:	add    DWORD PTR [rdx],eax
   1400346b9:	add    DWORD PTR [rdx],eax
   1400346bb:	add    DWORD PTR [rdx],eax
   1400346bd:	add    DWORD PTR [rdx],eax
   1400346bf:	add    DWORD PTR [rdx],eax
   1400346c1:	add    DWORD PTR [rcx],eax
   1400346c3:	add    DWORD PTR [rax],eax
	...
   1400346cd:	add    BYTE PTR [rax],al
   1400346cf:	add    BYTE PTR [rax-0x7b7c7d7f],al
   1400346d5:	test   DWORD PTR [rsi-0x75767779],eax
   1400346db:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   1400346e2:	xchg   edx,eax
   1400346e3:	xchg   ebx,eax
   1400346e4:	xchg   esp,eax
   1400346e5:	xchg   ebp,eax
   1400346e6:	xchg   esi,eax
   1400346e7:	xchg   edi,eax
   1400346e8:	cwde   
   1400346e9:	cdq    
   1400346ea:	(bad)  
   1400346eb:	fwait
   1400346ec:	pushf  
   1400346ed:	popf   
   1400346ee:	sahf   
   1400346ef:	lahf   
   1400346f0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400346f9:	test   eax,0xadacabaa
   1400346fe:	scas   al,BYTE PTR es:[rdi]
   1400346ff:	scas   eax,DWORD PTR es:[rdi]
   140034700:	mov    al,0xb1
   140034702:	mov    dl,0xb3
   140034704:	mov    ah,0xb5
   140034706:	mov    dh,0xb7
   140034708:	mov    eax,0xbcbbbab9
   14003470d:	mov    ebp,0xc1c0bfbe
   140034712:	ret    0xc4c3
   140034715:	(bad)
   140034718:	enter  0xcac9,0xcb
   14003471c:	int3   
   14003471d:	int    0xce
   14003471f:	iret   
   140034720:	rcl    cl,1
   140034722:	rcl    bl,cl
   140034724:	(bad)  
   140034725:	(bad)  
   140034726:	(bad)  
   140034727:	xlat   BYTE PTR ds:[rbx]
   140034728:	fcomp  st(1)
   14003472a:	fcmovu st,st(3)
   14003472c:	(bad)  
   14003472e:	(bad)  
   140034730:	loopne 0x140034713
   140034732:	loop   0x140034717
   140034734:	in     al,0xe5
   140034736:	out    0xe7,al
   140034738:	call   0x12cef3226
   14003473d:	in     eax,dx
   14003473e:	out    dx,al
   14003473f:	out    dx,eax
   140034740:	lock icebp 
   140034742:	repnz repz hlt 
   140034745:	cmc    
   140034746:	div    bh
   140034748:	clc    
   140034749:	stc    
   14003474a:	cli    
   14003474b:	sti    
   14003474c:	cld    
   14003474d:	std    
   14003474e:	(bad)  
   14003474f:	inc    DWORD PTR [rax]
   140034751:	add    DWORD PTR [rdx],eax
   140034753:	add    eax,DWORD PTR [rax*1+0x9080706]
   14003475a:	or     cl,BYTE PTR [rbx]
   14003475c:	or     al,0xd
   14003475e:	(bad)  
   14003475f:	movups xmm2,XMMWORD PTR [rcx]
   140034762:	adc    dl,BYTE PTR [rbx]
   140034764:	adc    al,0x15
   140034766:	(bad)  
   140034767:	(bad)  
   140034768:	sbb    BYTE PTR [rcx],bl
   14003476a:	sbb    bl,BYTE PTR [rbx]
   14003476c:	sbb    al,0x1d
   14003476e:	(bad)  
   14003476f:	(bad)  
   140034770:	and    BYTE PTR [rcx],ah
   140034772:	and    ah,BYTE PTR [rbx]
   140034774:	and    al,0x25
   140034776:	es (bad) 
   140034778:	sub    BYTE PTR [rcx],ch
   14003477a:	sub    ch,BYTE PTR [rbx]
   14003477c:	sub    al,0x2d
   14003477e:	cs (bad) 
   140034780:	xor    BYTE PTR [rcx],dh
   140034782:	xor    dh,BYTE PTR [rbx]
   140034784:	xor    al,0x35
   140034786:	ss (bad) 
   140034788:	cmp    BYTE PTR [rcx],bh
   14003478a:	cmp    bh,BYTE PTR [rbx]
   14003478c:	cmp    al,0x3d
   14003478e:	ds (bad) 
   140034790:	rex (bad) 
   140034792:	(bad)
   140034797:	addr32 push 0x6c6b6a69
   14003479d:	ins    DWORD PTR es:[rdi],dx
   14003479e:	outs   dx,BYTE PTR ds:[rsi]
   14003479f:	outs   dx,DWORD PTR ds:[rsi]
   1400347a0:	jo     0x140034813
   1400347a2:	jb     0x140034817
   1400347a4:	je     0x14003481b
   1400347a6:	jbe    0x14003481f
   1400347a8:	js     0x140034823
   1400347aa:	jp     0x140034807
   1400347ac:	pop    rsp
   1400347ad:	pop    rbp
   1400347ae:	pop    rsi
   1400347af:	pop    rdi
   1400347b0:	(bad)  
   1400347b1:	(bad)  
   1400347b2:	(bad)
   1400347b7:	addr32 push 0x6c6b6a69
   1400347bd:	ins    DWORD PTR es:[rdi],dx
   1400347be:	outs   dx,BYTE PTR ds:[rsi]
   1400347bf:	outs   dx,DWORD PTR ds:[rsi]
   1400347c0:	jo     0x140034833
   1400347c2:	jb     0x140034837
   1400347c4:	je     0x14003483b
   1400347c6:	jbe    0x14003483f
   1400347c8:	js     0x140034843
   1400347ca:	jp     0x140034847
   1400347cc:	jl     0x14003484b
   1400347ce:	jle    0x14003484f
   1400347d0:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   1400347d7:	xchg   DWORD PTR [rax-0x73747577],ecx
   1400347dd:	lea    ecx,[rsi-0x6d6e6f71]
   1400347e3:	xchg   ebx,eax
   1400347e4:	xchg   esp,eax
   1400347e5:	xchg   ebp,eax
   1400347e6:	xchg   esi,eax
   1400347e7:	xchg   edi,eax
   1400347e8:	cwde   
   1400347e9:	cdq    
   1400347ea:	(bad)  
   1400347eb:	fwait
   1400347ec:	pushf  
   1400347ed:	popf   
   1400347ee:	sahf   
   1400347ef:	lahf   
   1400347f0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400347f9:	test   eax,0xadacabaa
   1400347fe:	scas   al,BYTE PTR es:[rdi]
   1400347ff:	scas   eax,DWORD PTR es:[rdi]
   140034800:	mov    al,0xb1
   140034802:	mov    dl,0xb3
   140034804:	mov    ah,0xb5
   140034806:	mov    dh,0xb7
   140034808:	mov    eax,0xbcbbbab9
   14003480d:	mov    ebp,0xc1c0bfbe
   140034812:	ret    0xc4c3
   140034815:	(bad)
   140034818:	enter  0xcac9,0xcb
   14003481c:	int3   
   14003481d:	int    0xce
   14003481f:	iret   
   140034820:	rcl    cl,1
   140034822:	rcl    bl,cl
   140034824:	(bad)  
   140034825:	(bad)  
   140034826:	(bad)  
   140034827:	xlat   BYTE PTR ds:[rbx]
   140034828:	fcomp  st(1)
   14003482a:	fcmovu st,st(3)
   14003482c:	(bad)  
   14003482e:	(bad)  
   140034830:	loopne 0x140034813
   140034832:	loop   0x140034817
   140034834:	in     al,0xe5
   140034836:	out    0xe7,al
   140034838:	call   0x12cef3326
   14003483d:	in     eax,dx
   14003483e:	out    dx,al
   14003483f:	out    dx,eax
   140034840:	lock icebp 
   140034842:	repnz repz hlt 
   140034845:	cmc    
   140034846:	div    bh
   140034848:	clc    
   140034849:	stc    
   14003484a:	cli    
   14003484b:	sti    
   14003484c:	cld    
   14003484d:	std    
   14003484e:	(bad)  
   14003484f:	inc    DWORD PTR [rax-0x7b7c7d7f]
   140034855:	test   DWORD PTR [rsi-0x75767779],eax
   14003485b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140034862:	xchg   edx,eax
   140034863:	xchg   ebx,eax
   140034864:	xchg   esp,eax
   140034865:	xchg   ebp,eax
   140034866:	xchg   esi,eax
   140034867:	xchg   edi,eax
   140034868:	cwde   
   140034869:	cdq    
   14003486a:	(bad)  
   14003486b:	fwait
   14003486c:	pushf  
   14003486d:	popf   
   14003486e:	sahf   
   14003486f:	lahf   
   140034870:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140034879:	test   eax,0xadacabaa
   14003487e:	scas   al,BYTE PTR es:[rdi]
   14003487f:	scas   eax,DWORD PTR es:[rdi]
   140034880:	mov    al,0xb1
   140034882:	mov    dl,0xb3
   140034884:	mov    ah,0xb5
   140034886:	mov    dh,0xb7
   140034888:	mov    eax,0xbcbbbab9
   14003488d:	mov    ebp,0xc1c0bfbe
   140034892:	ret    0xc4c3
   140034895:	(bad)
   140034898:	enter  0xcac9,0xcb
   14003489c:	int3   
   14003489d:	int    0xce
   14003489f:	iret   
   1400348a0:	rcl    cl,1
   1400348a2:	rcl    bl,cl
   1400348a4:	(bad)  
   1400348a5:	(bad)  
   1400348a6:	(bad)  
   1400348a7:	xlat   BYTE PTR ds:[rbx]
   1400348a8:	fcomp  st(1)
   1400348aa:	fcmovu st,st(3)
   1400348ac:	(bad)  
   1400348ae:	(bad)  
   1400348b0:	loopne 0x140034893
   1400348b2:	loop   0x140034897
   1400348b4:	in     al,0xe5
   1400348b6:	out    0xe7,al
   1400348b8:	call   0x12cef33a6
   1400348bd:	in     eax,dx
   1400348be:	out    dx,al
   1400348bf:	out    dx,eax
   1400348c0:	lock icebp 
   1400348c2:	repnz repz hlt 
   1400348c5:	cmc    
   1400348c6:	div    bh
   1400348c8:	clc    
   1400348c9:	stc    
   1400348ca:	cli    
   1400348cb:	sti    
   1400348cc:	cld    
   1400348cd:	std    
   1400348ce:	(bad)  
   1400348cf:	inc    DWORD PTR [rax]
   1400348d1:	add    DWORD PTR [rdx],eax
   1400348d3:	add    eax,DWORD PTR [rax*1+0x9080706]
   1400348da:	or     cl,BYTE PTR [rbx]
   1400348dc:	or     al,0xd
   1400348de:	(bad)  
   1400348df:	movups xmm2,XMMWORD PTR [rcx]
   1400348e2:	adc    dl,BYTE PTR [rbx]
   1400348e4:	adc    al,0x15
   1400348e6:	(bad)  
   1400348e7:	(bad)  
   1400348e8:	sbb    BYTE PTR [rcx],bl
   1400348ea:	sbb    bl,BYTE PTR [rbx]
   1400348ec:	sbb    al,0x1d
   1400348ee:	(bad)  
   1400348ef:	(bad)  
   1400348f0:	and    BYTE PTR [rcx],ah
   1400348f2:	and    ah,BYTE PTR [rbx]
   1400348f4:	and    al,0x25
   1400348f6:	es (bad) 
   1400348f8:	sub    BYTE PTR [rcx],ch
   1400348fa:	sub    ch,BYTE PTR [rbx]
   1400348fc:	sub    al,0x2d
   1400348fe:	cs (bad) 
   140034900:	xor    BYTE PTR [rcx],dh
   140034902:	xor    dh,BYTE PTR [rbx]
   140034904:	xor    al,0x35
   140034906:	ss (bad) 
   140034908:	cmp    BYTE PTR [rcx],bh
   14003490a:	cmp    bh,BYTE PTR [rbx]
   14003490c:	cmp    al,0x3d
   14003490e:	ds (bad) 
   140034910:	rex
   140034911:	rex.B
   140034912:	rex.X
   140034913:	rex.XB
   140034914:	rex.R
   140034915:	rex.RB
   140034916:	rex.RX
   140034917:	rex.RXB
   140034918:	rex.W
   140034919:	rex.WB
   14003491a:	rex.WX
   14003491b:	rex.WXB
   14003491c:	rex.WR
   14003491d:	rex.WRB
   14003491e:	rex.WRX
   14003491f:	rex.WRXB push r8
   140034921:	push   rcx
   140034922:	push   rdx
   140034923:	push   rbx
   140034924:	push   rsp
   140034925:	push   rbp
   140034926:	push   rsi
   140034927:	push   rdi
   140034928:	pop    rax
   140034929:	pop    rcx
   14003492a:	pop    rdx
   14003492b:	pop    rbx
   14003492c:	pop    rsp
   14003492d:	pop    rbp
   14003492e:	pop    rsi
   14003492f:	pop    rdi
   140034930:	(bad)  
   140034931:	rex.B
   140034932:	rex.X
   140034933:	rex.XB
   140034934:	rex.R
   140034935:	rex.RB
   140034936:	rex.RX
   140034937:	rex.RXB
   140034938:	rex.W
   140034939:	rex.WB
   14003493a:	rex.WX
   14003493b:	rex.WXB
   14003493c:	rex.WR
   14003493d:	rex.WRB
   14003493e:	rex.WRX
   14003493f:	rex.WRXB push r8
   140034941:	push   rcx
   140034942:	push   rdx
   140034943:	push   rbx
   140034944:	push   rsp
   140034945:	push   rbp
   140034946:	push   rsi
   140034947:	push   rdi
   140034948:	pop    rax
   140034949:	pop    rcx
   14003494a:	pop    rdx
   14003494b:	jnp    0x1400349c9
   14003494d:	jge    0x1400349cd
   14003494f:	jg     0x1400348d1
   140034951:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   14003495b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140034962:	xchg   edx,eax
   140034963:	xchg   ebx,eax
   140034964:	xchg   esp,eax
   140034965:	xchg   ebp,eax
   140034966:	xchg   esi,eax
   140034967:	xchg   edi,eax
   140034968:	cwde   
   140034969:	cdq    
   14003496a:	(bad)  
   14003496b:	fwait
   14003496c:	pushf  
   14003496d:	popf   
   14003496e:	sahf   
   14003496f:	lahf   
   140034970:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140034979:	test   eax,0xadacabaa
   14003497e:	scas   al,BYTE PTR es:[rdi]
   14003497f:	scas   eax,DWORD PTR es:[rdi]
   140034980:	mov    al,0xb1
   140034982:	mov    dl,0xb3
   140034984:	mov    ah,0xb5
   140034986:	mov    dh,0xb7
   140034988:	mov    eax,0xbcbbbab9
   14003498d:	mov    ebp,0xc1c0bfbe
   140034992:	ret    0xc4c3
   140034995:	(bad)
   140034998:	enter  0xcac9,0xcb
   14003499c:	int3   
   14003499d:	int    0xce
   14003499f:	iret   
   1400349a0:	rcl    cl,1
   1400349a2:	rcl    bl,cl
   1400349a4:	(bad)  
   1400349a5:	(bad)  
   1400349a6:	(bad)  
   1400349a7:	xlat   BYTE PTR ds:[rbx]
   1400349a8:	fcomp  st(1)
   1400349aa:	fcmovu st,st(3)
   1400349ac:	(bad)  
   1400349ae:	(bad)  
   1400349b0:	loopne 0x140034993
   1400349b2:	loop   0x140034997
   1400349b4:	in     al,0xe5
   1400349b6:	out    0xe7,al
   1400349b8:	call   0x12cef34a6
   1400349bd:	in     eax,dx
   1400349be:	out    dx,al
   1400349bf:	out    dx,eax
   1400349c0:	lock icebp 
   1400349c2:	repnz repz hlt 
   1400349c5:	cmc    
   1400349c6:	div    bh
   1400349c8:	clc    
   1400349c9:	stc    
   1400349ca:	cli    
   1400349cb:	sti    
   1400349cc:	cld    
   1400349cd:	std    
   1400349ce:	(bad)  
   1400349cf:	jmp    QWORD PTR [rax+0x4a]
   1400349d2:	add    eax,DWORD PTR [rax+0x1]
	...
   1400349dd:	add    BYTE PTR [rax],al
   1400349df:	add    BYTE PTR [rdx+rdi*8+0x14001],dl
   1400349e6:	add    BYTE PTR [rax],al
   1400349e8:	jo     0x140034a34
   1400349ea:	add    eax,DWORD PTR [rax+0x1]
   1400349ed:	add    BYTE PTR [rax],al
   1400349ef:	add    ah,dl
   1400349f1:	int    0x3
   1400349f3:	rex add DWORD PTR [rax],eax
   1400349f6:	add    BYTE PTR [rax],al
   1400349f8:	rex.WR ins BYTE PTR es:[rdi],dx
   1400349fa:	add    al,BYTE PTR [rax+0x1]
   1400349fd:	add    BYTE PTR [rax],al
   1400349ff:	add    BYTE PTR [rax+0x140034a],cl
   140034a05:	add    BYTE PTR [rax],al
   140034a07:	add    ah,dl
   140034a09:	int    0x3
   140034a0b:	rex add DWORD PTR [rax],eax
   140034a0e:	add    BYTE PTR [rax],al
   140034a10:	xor    BYTE PTR [rcx+0x2],ah
   140034a13:	rex add DWORD PTR [rax],eax
   140034a16:	add    BYTE PTR [rax],al
   140034a18:	movabs al,ds:0xd40000000140034a
   140034a21:	int    0x3
   140034a23:	rex add DWORD PTR [rax],eax
   140034a26:	add    BYTE PTR [rax],al
   140034a28:	lods   al,BYTE PTR ds:[rsi]
   140034a29:	xlat   BYTE PTR ds:[rbx]
   140034a2a:	add    DWORD PTR [rax+0x1],eax
   140034a2d:	add    BYTE PTR [rax],al
   140034a2f:	add    BYTE PTR [rax+0x140034a],bh
   140034a35:	add    BYTE PTR [rax],al
   140034a37:	add    ah,dl
   140034a39:	int    0x3
   140034a3b:	rex add DWORD PTR [rax],eax
   140034a3e:	add    BYTE PTR [rax],al
   140034a40:	push   rsp
   140034a41:	fld    QWORD PTR [rcx]
   140034a43:	rex add DWORD PTR [rax],eax
   140034a46:	add    BYTE PTR [rax],al
   140034a48:	ror    BYTE PTR [rdx+0x3],1
   140034a4b:	rex add DWORD PTR [rax],eax
   140034a4e:	add    BYTE PTR [rax],al
   140034a50:	(bad)  
   140034a51:	int    0x3
   140034a53:	rex add DWORD PTR [rax],eax
   140034a56:	add    BYTE PTR [rax],al
   140034a58:	push   rsp
   140034a59:	in     al,0x1
   140034a5b:	rex add DWORD PTR [rax],eax
   140034a5e:	add    BYTE PTR [rax],al
   140034a60:	rex.WR add BYTE PTR [rbx+0x0],r8b
   140034a64:	pop    rdi
   140034a65:	add    BYTE PTR [rcx+0x0],al
   140034a68:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   140034a6d:	add    BYTE PTR [rax],al
   140034a6f:	add    BYTE PTR [rax+rax*1+0x43],cl
   140034a73:	add    BYTE PTR [rdi+0x0],bl
   140034a76:	rex.XB add BYTE PTR [r15+0x0],cl
   140034a7a:	rex.WR add BYTE PTR [rax+rax*1+0x41],r9b
   140034a7f:	add    BYTE PTR [rax+rax*1+0x45],dl
   140034a83:	add    BYTE PTR [rax],al
   140034a85:	add    BYTE PTR [rax],al
   140034a87:	add    BYTE PTR [rax+rax*1+0x43],cl
   140034a8b:	add    BYTE PTR [rdi+0x0],bl
   140034a8e:	add    BYTE PTR [r8+r8*1+0x59],dl
   140034a93:	add    BYTE PTR [rax+0x0],dl
   140034a96:	add    BYTE PTR [r8],r8b
   140034a99:	add    BYTE PTR [rax],al
   140034a9b:	add    BYTE PTR [rax],al
   140034a9d:	add    BYTE PTR [rax],al
   140034a9f:	add    BYTE PTR [rax+rax*1+0x43],cl
   140034aa3:	add    BYTE PTR [rdi+0x0],bl
   140034aa6:	rex.WRB add BYTE PTR [r15+0x0],r9b
   140034aaa:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   140034aae:	push   rsp
   140034aaf:	add    BYTE PTR [rcx+0x0],al
   140034ab2:	push   rdx
   140034ab3:	add    BYTE PTR [rcx+0x0],bl
   140034ab6:	add    BYTE PTR [rax],al
   140034ab8:	rex.WR add BYTE PTR [rbx+0x0],r8b
   140034abc:	pop    rdi
   140034abd:	add    BYTE PTR [rsi+0x0],cl
   140034ac0:	push   rbp
   140034ac1:	add    BYTE PTR [rbp+0x0],cl
   140034ac4:	add    BYTE PTR [r10+0x0],r10b
   140034ac8:	rex.WB add BYTE PTR [r11+0x0],al
   140034acc:	add    BYTE PTR [rax],al
   140034ace:	add    BYTE PTR [rax],al
   140034ad0:	rex.WR add BYTE PTR [rbx+0x0],r8b
   140034ad4:	pop    rdi
   140034ad5:	add    BYTE PTR [rax+rax*1+0x49],dl
   140034ad9:	add    BYTE PTR [rbp+0x0],cl
   140034adc:	add    BYTE PTR [r8],r8b
   140034adf:	add    BYTE PTR [rcx],al
   140034ae1:	add    al,BYTE PTR [rbx]
   140034ae3:	add    al,0x5
   140034ae5:	(bad)  
   140034ae6:	(bad)  
   140034ae7:	or     BYTE PTR [rcx],cl
   140034ae9:	or     cl,BYTE PTR [rbx]
   140034aeb:	or     al,0xd
   140034aed:	(bad)  
   140034aee:	movups xmm2,XMMWORD PTR [rcx]
   140034af1:	adc    dl,BYTE PTR [rbx]
   140034af3:	adc    al,0x15
   140034af5:	(bad)  
   140034af6:	(bad)  
   140034af7:	sbb    BYTE PTR [rcx],bl
   140034af9:	sbb    bl,BYTE PTR [rbx]
   140034afb:	sbb    al,0x1d
   140034afd:	(bad)  
   140034afe:	(bad)  
   140034aff:	and    BYTE PTR [rcx],ah
   140034b01:	and    ah,BYTE PTR [rbx]
   140034b03:	and    al,0x25
   140034b05:	es (bad) 
   140034b07:	sub    BYTE PTR [rcx],ch
   140034b09:	sub    ch,BYTE PTR [rbx]
   140034b0b:	sub    al,0x2d
   140034b0d:	cs (bad) 
   140034b0f:	xor    BYTE PTR [rcx],dh
   140034b11:	xor    dh,BYTE PTR [rbx]
   140034b13:	xor    al,0x35
   140034b15:	ss (bad) 
   140034b17:	cmp    BYTE PTR [rcx],bh
   140034b19:	cmp    bh,BYTE PTR [rbx]
   140034b1b:	cmp    al,0x3d
   140034b1d:	ds (bad) 
   140034b1f:	rex
   140034b20:	rex.B
   140034b21:	rex.X
   140034b22:	rex.XB
   140034b23:	rex.R
   140034b24:	rex.RB
   140034b25:	rex.RX
   140034b26:	rex.RXB
   140034b27:	rex.W
   140034b28:	rex.WB
   140034b29:	rex.WX
   140034b2a:	rex.WXB
   140034b2b:	rex.WR
   140034b2c:	rex.WRB
   140034b2d:	rex.WRX
   140034b2e:	rex.WRXB push r8
   140034b30:	push   rcx
   140034b31:	push   rdx
   140034b32:	push   rbx
   140034b33:	push   rsp
   140034b34:	push   rbp
   140034b35:	push   rsi
   140034b36:	push   rdi
   140034b37:	pop    rax
   140034b38:	pop    rcx
   140034b39:	pop    rdx
   140034b3a:	pop    rbx
   140034b3b:	pop    rsp
   140034b3c:	pop    rbp
   140034b3d:	pop    rsi
   140034b3e:	pop    rdi
   140034b3f:	(bad)  
   140034b40:	(bad)  
   140034b41:	(bad)
   140034b46:	addr32 push 0x6c6b6a69
   140034b4c:	ins    DWORD PTR es:[rdi],dx
   140034b4d:	outs   dx,BYTE PTR ds:[rsi]
   140034b4e:	outs   dx,DWORD PTR ds:[rsi]
   140034b4f:	jo     0x140034bc2
   140034b51:	jb     0x140034bc6
   140034b53:	je     0x140034bca
   140034b55:	jbe    0x140034bce
   140034b57:	js     0x140034bd2
   140034b59:	jp     0x140034bd6
   140034b5b:	jl     0x140034bda
   140034b5d:	jle    0x140034bde
   140034b5f:	add    BYTE PTR [rip+0x3b00],bh        # 0x140038665
   140034b65:	add    BYTE PTR [rax],al
   140034b67:	add    BYTE PTR [rbx],bh
   140034b69:	add    BYTE PTR [rax],al
   140034b6b:	add    BYTE PTR [rip+0x43000000],bh        # 0x183034b71
   140034b71:	add    BYTE PTR [rax],al
   140034b73:	add    BYTE PTR [rax],al
   140034b75:	add    BYTE PTR [rax],al
   140034b77:	add    BYTE PTR [rdi+0x0],bl
   140034b7a:	add    BYTE PTR cs:[rax+rax*1],ch
   140034b7e:	add    BYTE PTR [rax],al
   140034b80:	pop    rdi
   140034b81:	add    BYTE PTR [rax],al
   140034b83:	add    BYTE PTR [rsi],ch
   140034b85:	add    BYTE PTR [rax],al
   140034b87:	add    BYTE PTR [rcx],dh
   140034b89:	and    edx,DWORD PTR [rbx+0x4e]
   140034b8c:	rex.B
   140034b8d:	rex.WRX add BYTE PTR [rax],r8b
   140034b90:	xor    DWORD PTR [rbx],esp
   140034b92:	rex.WB
   140034b93:	rex.WRX
   140034b94:	add    BYTE PTR [rax],r8b
   140034b97:	add    BYTE PTR [rcx],dh
   140034b99:	and    ecx,DWORD PTR [rcx+0x4e]
   140034b9c:	rex.RX add BYTE PTR [rax],r8b
   140034b9f:	add    BYTE PTR [rcx],dh
   140034ba1:	and    edx,DWORD PTR [rcx+0x4e]
   140034ba4:	rex.B
   140034ba5:	rex.WRX add BYTE PTR [rax],r8b
   140034ba8:	rex.XB add BYTE PTR [r15+0x0],cl
   140034bac:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   140034bb0:	push   rbp
   140034bb1:	add    BYTE PTR [rax+rax*1+0x24],dl
	...
   140034bbd:	add    BYTE PTR [rax],al
   140034bbf:	add    BYTE PTR [rsi],al
   140034bc1:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   140034bc8:	add    BYTE PTR [rax],dl
   140034bca:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   140034bd0:	adc    al,0x5
   140034bd2:	add    eax,0x85454545
   140034bd7:	test   DWORD PTR [rbp+0x30000005],eax
   140034bdd:	xor    BYTE PTR [rax+0x888050],al
   140034be3:	or     BYTE PTR [rax],al
   140034be5:	sub    BYTE PTR [rdi],ah
   140034be7:	cmp    BYTE PTR [rax+0x57],dl
   140034bea:	add    BYTE PTR [rax],0x7
   140034bed:	add    BYTE PTR [rdi],dh
   140034bef:	xor    BYTE PTR [rax],dh
   140034bf1:	push   rax
   140034bf2:	push   rax
   140034bf3:	mov    BYTE PTR [rax],al
   140034bf5:	add    BYTE PTR [rax],al
   140034bf7:	and    BYTE PTR [rax],ch
   140034bf9:	or     BYTE PTR [rax+0x8080],0x0
   140034c00:	(bad)  
   140034c01:	push   0x68686860
   140034c06:	or     BYTE PTR [rax],cl
   140034c08:	(bad)  
   140034c09:	js     0x140034c7b
   140034c0b:	jo     0x140034c84
   140034c0d:	jo     0x140034c7f
   140034c0f:	or     BYTE PTR [rax],cl
   140034c11:	add    BYTE PTR [rax],al
   140034c13:	or     BYTE PTR [rax],al
   140034c15:	or     BYTE PTR [rax],al
   140034c17:	(bad)  
   140034c18:	or     BYTE PTR [rax],al
   140034c1a:	add    BYTE PTR [rax],al
   140034c1c:	add    BYTE PTR [rax],al
   140034c1e:	add    BYTE PTR [rax],al
   140034c20:	xor    BYTE PTR [rax+0x3],dl
   140034c23:	rex add DWORD PTR [rax],eax
   140034c26:	add    BYTE PTR [rax],al
   140034c28:	add    BYTE PTR [r14+0x0],r9b
   140034c2c:	push   rbp
   140034c2d:	add    BYTE PTR [rax],al
   140034c2f:	add    BYTE PTR [rax+0x50],cl
   140034c32:	add    eax,DWORD PTR [rax+0x1]
   140034c35:	add    BYTE PTR [rax],al
   140034c37:	add    BYTE PTR [rbp+0x0],al
   140034c3a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140034c3e:	add    BYTE PTR [rax],al
   140034c40:	jo     0x140034c92
   140034c42:	add    eax,DWORD PTR [rax+0x1]
   140034c45:	add    BYTE PTR [rax],al
   140034c47:	add    BYTE PTR [rbp+0x0],al
   140034c4a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140034c4e:	add    BYTE PTR [rax],al
   140034c50:	cwde   
   140034c51:	push   rax
   140034c52:	add    eax,DWORD PTR [rax+0x1]
   140034c55:	add    BYTE PTR [rax],al
   140034c57:	add    BYTE PTR [rbp+0x0],al
   140034c5a:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   140034c5e:	add    BYTE PTR [rax],al
   140034c60:	mov    al,0x50
   140034c62:	add    eax,DWORD PTR [rax+0x1]
   140034c65:	add    BYTE PTR [rax],al
   140034c67:	add    BYTE PTR [rsi+0x0],cl
   140034c6a:	rex.WR add BYTE PTR [rdx+0x0],r8b
   140034c6e:	add    BYTE PTR [rax],al
   140034c70:	rcl    BYTE PTR [rax+0x3],0x40
   140034c74:	add    DWORD PTR [rax],eax
   140034c76:	add    BYTE PTR [rax],al
   140034c78:	add    BYTE PTR [r14+0x0],r9b
   140034c7c:	rex.XB add BYTE PTR [r8],al
   140034c7f:	add    al,bl
   140034c81:	push   rax
   140034c82:	add    eax,DWORD PTR [rax+0x1]
   140034c85:	add    BYTE PTR [rax],al
   140034c87:	add    BYTE PTR [rdx+0x0],bl
   140034c8a:	rex.W add BYTE PTR [rax+0x0],cl
   140034c8e:	add    BYTE PTR [rax],al
   140034c90:	loopne 0x140034ce2
   140034c92:	add    eax,DWORD PTR [rax+0x1]
   140034c95:	add    BYTE PTR [rax],al
   140034c97:	add    BYTE PTR [rdx+0x0],bl
   140034c9a:	rex.W add BYTE PTR [rcx+0x0],cl
   140034c9e:	add    BYTE PTR [rax],al
   140034ca0:	call   0x141434ff5
   140034ca5:	add    BYTE PTR [rax],al
   140034ca7:	add    BYTE PTR [rbx+0x0],al
   140034caa:	rex.W add BYTE PTR [rbx+0x0],dl
   140034cae:	add    BYTE PTR [rax],al
   140034cb0:	clc    
   140034cb1:	push   rax
   140034cb2:	add    eax,DWORD PTR [rax+0x1]
   140034cb5:	add    BYTE PTR [rax],al
   140034cb7:	add    BYTE PTR [rdx+0x0],bl
   140034cba:	rex.W add BYTE PTR [rax+0x0],cl
   140034cbe:	add    BYTE PTR [rax],al
   140034cc0:	and    BYTE PTR [rcx+0x3],dl
   140034cc3:	rex add DWORD PTR [rax],eax
   140034cc6:	add    BYTE PTR [rax],al
   140034cc8:	rex.XB add BYTE PTR [r8+0x0],cl
   140034ccc:	push   rbx
   140034ccd:	add    BYTE PTR [rax],al
   140034ccf:	add    BYTE PTR [rax+0x51],cl
   140034cd2:	add    eax,DWORD PTR [rax+0x1]
   140034cd5:	add    BYTE PTR [rax],al
   140034cd7:	add    BYTE PTR [rdx+0x0],bl
   140034cda:	rex.W add BYTE PTR [rcx+0x0],cl
   140034cde:	add    BYTE PTR [rax],al
   140034ce0:	jo     0x140034d33
   140034ce2:	add    eax,DWORD PTR [rax+0x1]
   140034ce5:	add    BYTE PTR [rax],al
   140034ce7:	add    BYTE PTR [rbx+0x0],al
   140034cea:	rex.W add BYTE PTR [rax+rax*1+0x0],dl
   140034cef:	add    BYTE PTR [rax+0x1400351],bl
   140034cf5:	add    BYTE PTR [rax],al
   140034cf7:	add    BYTE PTR [rsi+0x0],cl
   140034cfa:	rex.WR add BYTE PTR [rdx+0x0],r8b
   140034cfe:	add    BYTE PTR [rax],al
   140034d00:	mov    eax,0x1400351
   140034d05:	add    BYTE PTR [rax],al
   140034d07:	add    BYTE PTR [rbp+0x0],al
   140034d0a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140034d0e:	add    BYTE PTR [rax],al
   140034d10:	loopne 0x140034d63
   140034d12:	add    eax,DWORD PTR [rax+0x1]
   140034d15:	add    BYTE PTR [rax],al
   140034d17:	add    BYTE PTR [rbp+0x0],al
   140034d1a:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   140034d1e:	add    BYTE PTR [rax],al
   140034d20:	clc    
   140034d21:	push   rcx
   140034d22:	add    eax,DWORD PTR [rax+0x1]
   140034d25:	add    BYTE PTR [rax],al
   140034d27:	add    BYTE PTR [rbp+0x0],al
   140034d2a:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r9b
   140034d2f:	add    BYTE PTR [rax],bl
   140034d31:	push   rdx
   140034d32:	add    eax,DWORD PTR [rax+0x1]
   140034d35:	add    BYTE PTR [rax],al
   140034d37:	add    BYTE PTR [rbp+0x0],al
   140034d3a:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   140034d3e:	add    BYTE PTR [rax],al
   140034d40:	xor    BYTE PTR [rdx+0x3],dl
   140034d43:	rex add DWORD PTR [rax],eax
   140034d46:	add    BYTE PTR [rax],al
   140034d48:	add    BYTE PTR [r14+0x0],r9b
   140034d4c:	rex.X add BYTE PTR [rax],al
   140034d4f:	add    BYTE PTR [rax+0x52],bl
   140034d52:	add    eax,DWORD PTR [rax+0x1]
   140034d55:	add    BYTE PTR [rax],al
   140034d57:	add    BYTE PTR [rbp+0x0],al
   140034d5a:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140034d5e:	add    BYTE PTR [rax],al
   140034d60:	jo     0x140034db4
   140034d62:	add    eax,DWORD PTR [rax+0x1]
   140034d65:	add    BYTE PTR [rax],al
   140034d67:	add    BYTE PTR [rbp+0x0],al
   140034d6a:	rex.WRX add BYTE PTR [rdx+0x0],r9b
   140034d6e:	add    BYTE PTR [rax],al
   140034d70:	nop
   140034d71:	push   rdx
   140034d72:	add    eax,DWORD PTR [rax+0x1]
   140034d75:	add    BYTE PTR [rax],al
   140034d77:	add    BYTE PTR [rbp+0x0],al
   140034d7a:	rex.WRX add BYTE PTR [rdx+0x0],r11b
   140034d7e:	add    BYTE PTR [rax],al
   140034d80:	test   al,0x52
   140034d82:	add    eax,DWORD PTR [rax+0x1]
   140034d85:	add    BYTE PTR [rax],al
   140034d87:	add    BYTE PTR [rbp+0x0],al
   140034d8a:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   140034d8e:	add    BYTE PTR [rax],al
   140034d90:	fcom   DWORD PTR [rdx+0x3]
   140034d93:	rex add DWORD PTR [rax],eax
   140034d96:	add    BYTE PTR [rax],al
   140034d98:	add    BYTE PTR [r14+0x0],r9b
   140034d9c:	push   rsp
   140034d9d:	add    BYTE PTR [rax],al
   140034d9f:	add    BYTE PTR [rax],dl
   140034da1:	push   rbx
   140034da2:	add    eax,DWORD PTR [rax+0x1]
   140034da5:	add    BYTE PTR [rax],al
   140034da7:	add    BYTE PTR [rbp+0x0],al
   140034daa:	rex.WRX add BYTE PTR [rdi+0x0],r8b
   140034dae:	add    BYTE PTR [rax],al
   140034db0:	sub    BYTE PTR [rbx+0x3],dl
   140034db3:	rex add DWORD PTR [rax],eax
   140034db6:	add    BYTE PTR [rax],al
   140034db8:	add    BYTE PTR [r14+0x0],r9b
   140034dbc:	push   rbp
   140034dbd:	add    BYTE PTR [rax],al
   140034dbf:	add    BYTE PTR [rax+0x53],al
   140034dc2:	add    eax,DWORD PTR [rax+0x1]
   140034dc5:	add    BYTE PTR [rax],al
   140034dc7:	add    BYTE PTR [rbp+0x0],al
   140034dca:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140034dce:	add    BYTE PTR [rax],al
   140034dd0:	pop    rax
   140034dd1:	push   rbx
   140034dd2:	add    eax,DWORD PTR [rax+0x1]
   140034dd5:	add    BYTE PTR [rax],al
   140034dd7:	add    BYTE PTR [rsi+0x0],al
   140034dda:	push   rdx
   140034ddb:	add    BYTE PTR [rdx+0x0],al
   140034dde:	add    BYTE PTR [rax],al
   140034de0:	js     0x140034e35
   140034de2:	add    eax,DWORD PTR [rax+0x1]
   140034de5:	add    BYTE PTR [rax],al
   140034de7:	add    BYTE PTR [rsi+0x0],al
   140034dea:	push   rdx
   140034deb:	add    BYTE PTR [rbx+0x0],al
   140034dee:	add    BYTE PTR [rax],al
   140034df0:	cwde   
   140034df1:	push   rbx
   140034df2:	add    eax,DWORD PTR [rax+0x1]
   140034df5:	add    BYTE PTR [rax],al
   140034df7:	add    BYTE PTR [rsi+0x0],al
   140034dfa:	push   rdx
   140034dfb:	add    BYTE PTR [rax+rax*1+0x0],cl
   140034dff:	add    al,al
   140034e01:	push   rbx
   140034e02:	add    eax,DWORD PTR [rax+0x1]
   140034e05:	add    BYTE PTR [rax],al
   140034e07:	add    BYTE PTR [rsi+0x0],al
   140034e0a:	push   rdx
   140034e0b:	add    BYTE PTR [rbx+0x0],dl
   140034e0e:	add    BYTE PTR [rax],al
   140034e10:	loopne 0x140034e65
   140034e12:	add    eax,DWORD PTR [rax+0x1]
   140034e15:	add    BYTE PTR [rax],al
   140034e17:	add    BYTE PTR [rax+rax*1+0x45],al
   140034e1b:	add    BYTE PTR [rcx+0x0],al
   140034e1e:	add    BYTE PTR [rax],al
   140034e20:	add    BYTE PTR [rbx+rax*1+0x40],dl
   140034e24:	add    DWORD PTR [rax],eax
   140034e26:	add    BYTE PTR [rax],al
   140034e28:	add    BYTE PTR [rbp+0x0],r8b
   140034e2c:	rex.XB add BYTE PTR [r8],al
   140034e2f:	add    BYTE PTR [rax],ch
   140034e31:	push   rsp
   140034e32:	add    eax,DWORD PTR [rax+0x1]
   140034e35:	add    BYTE PTR [rax],al
   140034e37:	add    BYTE PTR [rax+rax*1+0x45],al
   140034e3b:	add    BYTE PTR [rax+rax*1+0x0],cl
   140034e3f:	add    BYTE PTR [rax+0x54],dl
   140034e42:	add    eax,DWORD PTR [rax+0x1]
   140034e45:	add    BYTE PTR [rax],al
   140034e47:	add    BYTE PTR [rax+rax*1+0x45],al
   140034e4b:	add    BYTE PTR [rbx+0x0],dl
   140034e4e:	add    BYTE PTR [rax],al
   140034e50:	jo     0x140034ea6
   140034e52:	add    eax,DWORD PTR [rax+0x1]
   140034e55:	add    BYTE PTR [rax],al
   140034e57:	add    BYTE PTR [rbp+0x0],al
   140034e5a:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140034e5e:	add    BYTE PTR [rax],al
   140034e60:	nop
   140034e61:	push   rsp
   140034e62:	add    eax,DWORD PTR [rax+0x1]
   140034e65:	add    BYTE PTR [rax],al
   140034e67:	add    BYTE PTR [rcx+0x0],cl
   140034e6a:	push   rsp
   140034e6b:	add    BYTE PTR [rbx+0x0],dl
   140034e6e:	add    BYTE PTR [rax],al
   140034e70:	mov    al,0x54
   140034e72:	add    eax,DWORD PTR [rax+0x1]
   140034e75:	add    BYTE PTR [rax],al
   140034e77:	add    BYTE PTR [rsi+0x0],cl
   140034e7a:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140034e7e:	add    BYTE PTR [rax],al
   140034e80:	enter  0x354,0x40
   140034e84:	add    DWORD PTR [rax],eax
   140034e86:	add    BYTE PTR [rax],al
   140034e88:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   140034e8c:	push   rdx
   140034e8d:	add    BYTE PTR [rax],al
   140034e8f:	add    al,dh
   140034e91:	push   rsp
   140034e92:	add    eax,DWORD PTR [rax+0x1]
   140034e95:	add    BYTE PTR [rax],al
   140034e97:	add    BYTE PTR [rsi+0x0],cl
   140034e9a:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140034e9e:	add    BYTE PTR [rax],al
   140034ea0:	sbb    BYTE PTR [rbp+0x3],dl
   140034ea3:	rex add DWORD PTR [rax],eax
   140034ea6:	add    BYTE PTR [rax],al
   140034ea8:	push   rax
   140034ea9:	add    BYTE PTR [rax+rax*1+0x42],dl
   140034ead:	add    BYTE PTR [rax],al
   140034eaf:	add    BYTE PTR [rax+0x55],cl
   140034eb2:	add    eax,DWORD PTR [rax+0x1]
   140034eb5:	add    BYTE PTR [rax],al
   140034eb7:	add    BYTE PTR [rbp+0x0],al
   140034eba:	push   rbx
   140034ebb:	add    BYTE PTR [rbx+0x0],dl
   140034ebe:	add    BYTE PTR [rax],al
   140034ec0:	jo     0x140034f17
   140034ec2:	add    eax,DWORD PTR [rax+0x1]
   140034ec5:	add    BYTE PTR [rax],al
   140034ec7:	add    BYTE PTR [rbp+0x0],al
   140034eca:	push   rbx
   140034ecb:	add    BYTE PTR [rdx+0x0],al
   140034ece:	add    BYTE PTR [rax],al
   140034ed0:	nop
   140034ed1:	push   rbp
   140034ed2:	add    eax,DWORD PTR [rax+0x1]
   140034ed5:	add    BYTE PTR [rax],al
   140034ed7:	add    BYTE PTR [rbp+0x0],al
   140034eda:	push   rbx
   140034edb:	add    BYTE PTR [rax+rax*1+0x0],cl
   140034edf:	add    BYTE PTR [rax+0x1400355],dh
   140034ee5:	add    BYTE PTR [rax],al
   140034ee7:	add    BYTE PTR [rbp+0x0],al
   140034eea:	push   rbx
   140034eeb:	add    BYTE PTR [rdi+0x0],cl
   140034eee:	add    BYTE PTR [rax],al
   140034ef0:	fcom   DWORD PTR [rbp+0x3]
   140034ef3:	rex add DWORD PTR [rax],eax
   140034ef6:	add    BYTE PTR [rax],al
   140034ef8:	add    BYTE PTR [r11+0x0],r10b
   140034efc:	rex.XB add BYTE PTR [r8],al
   140034eff:	add    BYTE PTR [rax],al
   140034f01:	push   rsi
   140034f02:	add    eax,DWORD PTR [rax+0x1]
   140034f05:	add    BYTE PTR [rax],al
   140034f07:	add    BYTE PTR [rbp+0x0],al
   140034f0a:	push   rbx
   140034f0b:	add    BYTE PTR [rax+rax*1+0x0],al
   140034f0f:	add    BYTE PTR [rax],bh
   140034f11:	push   rsi
   140034f12:	add    eax,DWORD PTR [rax+0x1]
   140034f15:	add    BYTE PTR [rax],al
   140034f17:	add    BYTE PTR [rbp+0x0],al
   140034f1a:	push   rbx
   140034f1b:	add    BYTE PTR [rsi+0x0],al
   140034f1e:	add    BYTE PTR [rax],al
   140034f20:	pop    rax
   140034f21:	push   rsi
   140034f22:	add    eax,DWORD PTR [rax+0x1]
   140034f25:	add    BYTE PTR [rax],al
   140034f27:	add    BYTE PTR [rbp+0x0],al
   140034f2a:	push   rbx
   140034f2b:	add    BYTE PTR [rbp+0x0],al
   140034f2e:	add    BYTE PTR [rax],al
   140034f30:	adc    BYTE PTR [rsi+0x3],0x40
   140034f34:	add    DWORD PTR [rax],eax
   140034f36:	add    BYTE PTR [rax],al
   140034f38:	add    BYTE PTR [r11+0x0],r10b
   140034f3c:	rex.RXB add BYTE PTR [r8],r8b
   140034f3f:	add    BYTE PTR [rax+0x1400356],ch
   140034f45:	add    BYTE PTR [rax],al
   140034f47:	add    BYTE PTR [rbp+0x0],al
   140034f4a:	push   rbx
   140034f4b:	add    BYTE PTR [rax+0x0],cl
   140034f4e:	add    BYTE PTR [rax],al
   140034f50:	rcl    BYTE PTR [rsi+0x3],1
   140034f53:	rex add DWORD PTR [rax],eax
   140034f56:	add    BYTE PTR [rax],al
   140034f58:	add    BYTE PTR [r11+0x0],r10b
   140034f5c:	rex.WRB add BYTE PTR [r8],r8b
   140034f5f:	add    al,dh
   140034f61:	push   rsi
   140034f62:	add    eax,DWORD PTR [rax+0x1]
   140034f65:	add    BYTE PTR [rax],al
   140034f67:	add    BYTE PTR [rbp+0x0],al
   140034f6a:	push   rbx
   140034f6b:	add    BYTE PTR [rsi+0x0],cl
   140034f6e:	add    BYTE PTR [rax],al
   140034f70:	adc    BYTE PTR [rdi+0x3],dl
   140034f73:	rex add DWORD PTR [rax],eax
   140034f76:	add    BYTE PTR [rax],al
   140034f78:	add    BYTE PTR [r11+0x0],r10b
   140034f7c:	rex.WB add BYTE PTR [r8],al
   140034f7f:	add    BYTE PTR [rax],bh
   140034f81:	push   rdi
   140034f82:	add    eax,DWORD PTR [rax+0x1]
   140034f85:	add    BYTE PTR [rax],al
   140034f87:	add    BYTE PTR [rbp+0x0],al
   140034f8a:	push   rbx
   140034f8b:	add    BYTE PTR [rcx+0x0],al
   140034f8e:	add    BYTE PTR [rax],al
   140034f90:	pop    rax
   140034f91:	push   rdi
   140034f92:	add    eax,DWORD PTR [rax+0x1]
   140034f95:	add    BYTE PTR [rax],al
   140034f97:	add    BYTE PTR [rbp+0x0],al
   140034f9a:	push   rbx
   140034f9b:	add    BYTE PTR [rdx+0x0],bl
   140034f9e:	add    BYTE PTR [rax],al
   140034fa0:	adc    BYTE PTR [rdi+0x3],0x40
   140034fa4:	add    DWORD PTR [rax],eax
   140034fa6:	add    BYTE PTR [rax],al
   140034fa8:	add    BYTE PTR [r11+0x0],r10b
   140034fac:	push   rdx
   140034fad:	add    BYTE PTR [rax],al
   140034faf:	add    BYTE PTR [rax+0x1400357],ah
   140034fb5:	add    BYTE PTR [rax],al
   140034fb7:	add    BYTE PTR [rbp+0x0],al
   140034fba:	push   rbx
   140034fbb:	add    BYTE PTR [rbp+0x0],dl
   140034fbe:	add    BYTE PTR [rax],al
   140034fc0:	enter  0x357,0x40
   140034fc4:	add    DWORD PTR [rax],eax
   140034fc6:	add    BYTE PTR [rax],al
   140034fc8:	add    BYTE PTR [r11+0x0],r10b
   140034fcc:	pop    rcx
   140034fcd:	add    BYTE PTR [rax],al
   140034fcf:	add    al,ch
   140034fd1:	push   rdi
   140034fd2:	add    eax,DWORD PTR [rax+0x1]
   140034fd5:	add    BYTE PTR [rax],al
   140034fd7:	add    BYTE PTR [rbp+0x0],al
   140034fda:	push   rbx
   140034fdb:	add    BYTE PTR [rsi+0x0],dl
   140034fde:	add    BYTE PTR [rax],al
   140034fe0:	adc    BYTE PTR [rax+0x3],bl
   140034fe3:	rex add DWORD PTR [rax],eax
   140034fe6:	add    BYTE PTR [rax],al
   140034fe8:	push   rbx
   140034fe9:	add    BYTE PTR [rsi+0x0],dl
   140034fec:	rex.RX add BYTE PTR [rax],r8b
   140034fef:	add    BYTE PTR [rax],dh
   140034ff1:	pop    rax
   140034ff2:	add    eax,DWORD PTR [rax+0x1]
   140034ff5:	add    BYTE PTR [rax],al
   140034ff7:	add    BYTE PTR [rax+rax*1+0x45],al
   140034ffb:	add    BYTE PTR [rbx+0x0],dl
   140034ffe:	add    BYTE PTR [rax],al
   140035000:	sbb    BYTE PTR [rax],bl
   140035002:	add    eax,DWORD PTR [rax+0x1]
   140035005:	add    BYTE PTR [rax],al
   140035007:	add    BYTE PTR [rbp+0x0],al
   14003500a:	rex.WRX add BYTE PTR [rdi+0x0],r8b
   14003500e:	add    BYTE PTR [rax],al
   140035010:	cmp    al,0x58
   140035012:	add    eax,DWORD PTR [rax+0x1]
   140035015:	add    BYTE PTR [rax],al
   140035017:	add    BYTE PTR [rbp+0x0],al
   14003501a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14003501e:	add    BYTE PTR [rax],al
   140035020:	rex.W pop rax
   140035022:	add    eax,DWORD PTR [rax+0x1]
   140035025:	add    BYTE PTR [rax],al
   140035027:	add    BYTE PTR [rbp+0x0],al
   14003502a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14003502e:	add    BYTE PTR [rax],al
   140035030:	(bad)  
   140035031:	add    BYTE PTR [rbp+0x0],ch
   140035034:	add    BYTE PTR gs:[rdx+0x0],dh
   140035038:	imul   eax,DWORD PTR [rax],0x610063
   14003503e:	outs   dx,BYTE PTR ds:[rsi]
	...
   140035047:	add    BYTE PTR [rcx+0x0],ah
   14003504a:	ins    DWORD PTR es:[rdi],dx
   14003504b:	add    BYTE PTR [rbp+0x0],ah
   14003504e:	jb     0x140035050
   140035050:	imul   eax,DWORD PTR [rax],0x610063
   140035056:	outs   dx,BYTE PTR ds:[rsi]
   140035057:	add    BYTE PTR [rax],ah
   140035059:	add    BYTE PTR [rbp+0x0],ah
   14003505c:	outs   dx,BYTE PTR ds:[rsi]
   14003505d:	add    BYTE PTR [rdi+0x0],ah
   140035060:	ins    BYTE PTR es:[rdi],dx
   140035061:	add    BYTE PTR [rcx+0x0],ch
   140035064:	jae    0x140035066
   140035066:	push   0x0
   14003506b:	add    BYTE PTR [rax],al
   14003506d:	add    BYTE PTR [rax],al
   14003506f:	add    BYTE PTR [rcx+0x0],ah
   140035072:	ins    DWORD PTR es:[rdi],dx
   140035073:	add    BYTE PTR [rbp+0x0],ah
   140035076:	jb     0x140035078
   140035078:	imul   eax,DWORD PTR [rax],0x610063
   14003507e:	outs   dx,BYTE PTR ds:[rsi]
   14003507f:	add    BYTE PTR [rip+0x6e006500],ch        # 0x1ae03b585
   140035085:	add    BYTE PTR [rdi+0x0],ah
   140035088:	ins    BYTE PTR es:[rdi],dx
   140035089:	add    BYTE PTR [rcx+0x0],ch
   14003508c:	jae    0x14003508e
   14003508e:	push   0x0
   140035093:	add    BYTE PTR [rax],al
   140035095:	add    BYTE PTR [rax],al
   140035097:	add    BYTE PTR [rcx+0x0],ah
   14003509a:	jne    0x14003509c
   14003509c:	jae    0x14003509e
   14003509e:	je     0x1400350a0
   1400350a0:	jb     0x1400350a2
   1400350a2:	(bad)  
   1400350a3:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400350a7:	add    BYTE PTR [rcx+0x0],ah
   1400350aa:	outs   dx,BYTE PTR ds:[rsi]
   1400350ab:	add    BYTE PTR [rax],al
   1400350ad:	add    BYTE PTR [rax],al
   1400350af:	add    BYTE PTR [rdx+0x0],ah
   1400350b2:	add    BYTE PTR gs:[rax+rax*1+0x67],ch
   1400350b7:	add    BYTE PTR [rcx+0x0],ch
   1400350ba:	(bad)  
   1400350bb:	add    BYTE PTR [rsi+0x0],ch
   1400350be:	add    BYTE PTR [rax],al
   1400350c0:	movsxd eax,DWORD PTR [rax]
   1400350c2:	(bad)  
   1400350c3:	add    BYTE PTR [rsi+0x0],ch
   1400350c6:	(bad)  
   1400350c7:	add    BYTE PTR [rax+rax*1+0x69],ah
   1400350cb:	add    BYTE PTR [rcx+0x0],ah
   1400350ce:	outs   dx,BYTE PTR ds:[rsi]
	...
   1400350d7:	add    BYTE PTR [rbx+0x0],ah
   1400350da:	push   0x6800
   1400350df:	add    BYTE PTR [rbx+0x0],ah
   1400350e2:	push   0x6900
   1400350e7:	add    BYTE PTR [rbx+0x0],ah
   1400350ea:	push   0x6e006900
   1400350ef:	add    BYTE PTR [rbp+0x0],ah
   1400350f2:	jae    0x1400350f4
   1400350f4:	add    BYTE PTR gs:[rax],al
   1400350f7:	add    BYTE PTR [rbx+0x0],ah
   1400350fa:	push   0x6e006900
   1400350ff:	add    BYTE PTR [rbp+0x0],ah
   140035102:	jae    0x140035104
   140035104:	add    BYTE PTR gs:[rip+0x6f006800],ch        # 0x1af03b90b
   14003510b:	add    BYTE PTR [rsi+0x0],ch
   14003510e:	add    BYTE PTR [ebx+0x0],ch
   140035112:	outs   dx,DWORD PTR ds:[rsi]
   140035113:	add    BYTE PTR [rsi+0x0],ch
   140035116:	add    BYTE PTR [eax],al
   140035119:	add    BYTE PTR [rax],al
   14003511b:	add    BYTE PTR [rax],al
   14003511d:	add    BYTE PTR [rax],al
   14003511f:	add    BYTE PTR [rbx+0x0],ah
   140035122:	push   0x6e006900
   140035127:	add    BYTE PTR [rbp+0x0],ah
   14003512a:	jae    0x14003512c
   14003512c:	add    BYTE PTR gs:[rip+0x69007300],ch        # 0x1a903c433
   140035133:	add    BYTE PTR [rbp+0x0],ch
   140035136:	jo     0x140035138
   140035138:	ins    BYTE PTR es:[rdi],dx
   140035139:	add    BYTE PTR [rcx+0x0],ch
   14003513c:	data16 add BYTE PTR [rcx+0x0],ch
   140035140:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140035145:	add    BYTE PTR [rax],al
   140035147:	add    BYTE PTR [rbx+0x0],ah
   14003514a:	push   0x6e006900
   14003514f:	add    BYTE PTR [rbp+0x0],ah
   140035152:	jae    0x140035154
   140035154:	add    BYTE PTR gs:[rip+0x69007300],ch        # 0x1a903c45b
   14003515b:	add    BYTE PTR [rsi+0x0],ch
   14003515e:	add    BYTE PTR [ecx+0x0],ah
   140035162:	jo     0x140035164
   140035164:	outs   dx,DWORD PTR ds:[rsi]
   140035165:	add    BYTE PTR [rdx+0x0],dh
   140035168:	add    BYTE PTR gs:[rax],al
   14003516b:	add    BYTE PTR [rax],al
   14003516d:	add    BYTE PTR [rax],al
   14003516f:	add    BYTE PTR [rbx+0x0],ah
   140035172:	push   0x6e006900
   140035177:	add    BYTE PTR [rbp+0x0],ah
   14003517a:	jae    0x14003517c
   14003517c:	add    BYTE PTR gs:[rip+0x72007400],ch        # 0x1b203c583
   140035183:	add    BYTE PTR [rcx+0x0],ah
   140035186:	add    BYTE PTR fs:[rcx+0x0],ch
   14003518a:	je     0x14003518c
   14003518c:	imul   eax,DWORD PTR [rax],0x6e006f
   140035192:	(bad)  
   140035193:	add    BYTE PTR [rax+rax*1+0x0],ch
   140035197:	add    BYTE PTR [rax+rax*1+0x75],ah
   14003519b:	add    BYTE PTR [rax+rax*1+0x63],dh
   14003519f:	add    BYTE PTR [rax+0x0],ch
   1400351a2:	sub    eax,0x65006200
   1400351a7:	add    BYTE PTR [rax+rax*1+0x67],ch
   1400351ab:	add    BYTE PTR [rcx+0x0],ch
   1400351ae:	(bad)  
   1400351af:	add    BYTE PTR [rsi+0x0],ch
   1400351b2:	add    BYTE PTR [rax],al
   1400351b4:	add    BYTE PTR [rax],al
   1400351b6:	add    BYTE PTR [rax],al
   1400351b8:	add    BYTE PTR gs:[rsi+0x0],ch
   1400351bc:	add    BYTE PTR [eax+eax*1+0x69],ch
   1400351c1:	add    BYTE PTR [rbx+0x0],dh
   1400351c4:	push   0x61002d00
   1400351c9:	add    BYTE PTR [rbp+0x0],ch
   1400351cc:	add    BYTE PTR gs:[rdx+0x0],dh
   1400351d0:	imul   eax,DWORD PTR [rax],0x610063
   1400351d6:	outs   dx,BYTE PTR ds:[rsi]
	...
   1400351df:	add    BYTE PTR [rbp+0x0],ah
   1400351e2:	outs   dx,BYTE PTR ds:[rsi]
   1400351e3:	add    BYTE PTR [rdi+0x0],ah
   1400351e6:	ins    BYTE PTR es:[rdi],dx
   1400351e7:	add    BYTE PTR [rcx+0x0],ch
   1400351ea:	jae    0x1400351ec
   1400351ec:	push   0x61002d00
   1400351f1:	add    BYTE PTR [rbp+0x0],dh
   1400351f4:	jae    0x1400351f6
   1400351f6:	add    BYTE PTR [rax],al
   1400351f8:	add    BYTE PTR gs:[rsi+0x0],ch
   1400351fc:	add    BYTE PTR [eax+eax*1+0x69],ch
   140035201:	add    BYTE PTR [rbx+0x0],dh
   140035204:	push   0x62002d00
   140035209:	add    BYTE PTR [rbp+0x0],ah
   14003520c:	ins    BYTE PTR es:[rdi],dx
   14003520d:	add    BYTE PTR [rcx+0x0],ch
   140035210:	jp     0x140035212
   140035212:	add    BYTE PTR gs:[rax],al
   140035215:	add    BYTE PTR [rax],al
   140035217:	add    BYTE PTR [rbp+0x0],ah
   14003521a:	outs   dx,BYTE PTR ds:[rsi]
   14003521b:	add    BYTE PTR [rdi+0x0],ah
   14003521e:	ins    BYTE PTR es:[rdi],dx
   14003521f:	add    BYTE PTR [rcx+0x0],ch
   140035222:	jae    0x140035224
   140035224:	push   0x63002d00
   140035229:	add    BYTE PTR [rcx+0x0],ah
   14003522c:	outs   dx,BYTE PTR ds:[rsi]
   14003522d:	add    BYTE PTR [rax],al
   14003522f:	add    BYTE PTR [rbp+0x0],ah
   140035232:	outs   dx,BYTE PTR ds:[rsi]
   140035233:	add    BYTE PTR [rdi+0x0],ah
   140035236:	ins    BYTE PTR es:[rdi],dx
   140035237:	add    BYTE PTR [rcx+0x0],ch
   14003523a:	jae    0x14003523c
   14003523c:	push   0x63002d00
   140035241:	add    BYTE PTR [rcx+0x0],ah
   140035244:	jb     0x140035246
   140035246:	imul   eax,DWORD PTR [rax],0x620062
   14003524c:	add    BYTE PTR gs:[rcx+0x0],ah
   140035250:	outs   dx,BYTE PTR ds:[rsi]
   140035251:	add    BYTE PTR [rax],al
   140035253:	add    BYTE PTR [rax],al
   140035255:	add    BYTE PTR [rax],al
   140035257:	add    BYTE PTR [rbp+0x0],ah
   14003525a:	outs   dx,BYTE PTR ds:[rsi]
   14003525b:	add    BYTE PTR [rdi+0x0],ah
   14003525e:	ins    BYTE PTR es:[rdi],dx
   14003525f:	add    BYTE PTR [rcx+0x0],ch
   140035262:	jae    0x140035264
   140035264:	push   0x69002d00
   140035269:	add    BYTE PTR [rdx+0x0],dh
   14003526c:	add    BYTE PTR gs:[rax],al
   14003526f:	add    BYTE PTR [rbp+0x0],ah
   140035272:	outs   dx,BYTE PTR ds:[rsi]
   140035273:	add    BYTE PTR [rdi+0x0],ah
   140035276:	ins    BYTE PTR es:[rdi],dx
   140035277:	add    BYTE PTR [rcx+0x0],ch
   14003527a:	jae    0x14003527c
   14003527c:	push   0x6a002d00
   140035281:	add    BYTE PTR [rcx+0x0],ah
   140035284:	ins    DWORD PTR es:[rdi],dx
   140035285:	add    BYTE PTR [rcx+0x0],ah
   140035288:	imul   eax,DWORD PTR [rax],0x610063
   14003528e:	add    BYTE PTR [rax],al
   140035290:	add    BYTE PTR gs:[rsi+0x0],ch
   140035294:	add    BYTE PTR [eax+eax*1+0x69],ch
   140035299:	add    BYTE PTR [rbx+0x0],dh
   14003529c:	push   0x6e002d00
   1400352a1:	add    BYTE PTR [rdx+0x0],bh
   1400352a4:	add    BYTE PTR [rax],al
   1400352a6:	add    BYTE PTR [rax],al
   1400352a8:	add    BYTE PTR gs:[rsi+0x0],ch
   1400352ac:	add    BYTE PTR [eax+eax*1+0x69],ch
   1400352b1:	add    BYTE PTR [rbx+0x0],dh
   1400352b4:	push   0x73002d00
   1400352b9:	add    BYTE PTR [rdi+0x0],ch
   1400352bc:	jne    0x1400352be
   1400352be:	je     0x1400352c0
   1400352c0:	push   0x61002000
   1400352c5:	add    BYTE PTR [rsi+0x0],ah
   1400352c8:	jb     0x1400352ca
   1400352ca:	imul   eax,DWORD PTR [rax],0x610063
	...
   1400352d8:	add    BYTE PTR gs:[rsi+0x0],ch
   1400352dc:	add    BYTE PTR [eax+eax*1+0x69],ch
   1400352e1:	add    BYTE PTR [rbx+0x0],dh
   1400352e4:	push   0x74002d00
   1400352e9:	add    BYTE PTR [rdx+0x0],dh
   1400352ec:	imul   eax,DWORD PTR [rax],0x69006e
   1400352f2:	add    BYTE PTR fs:[rcx+0x0],ah
   1400352f6:	add    BYTE PTR fs:[rax],ah
   1400352f9:	add    BYTE PTR [rcx+0x0],bh
   1400352fc:	and    BYTE PTR [rax],al
   1400352fe:	je     0x140035300
   140035300:	outs   dx,DWORD PTR ds:[rsi]
   140035301:	add    BYTE PTR [rdx+0x0],ah
   140035304:	(bad)  
   140035305:	add    BYTE PTR [rdi+0x0],ah
   140035308:	outs   dx,DWORD PTR ds:[rsi]
   140035309:	add    BYTE PTR [rax],al
   14003530b:	add    BYTE PTR [rax],al
   14003530d:	add    BYTE PTR [rax],al
   14003530f:	add    BYTE PTR [rbp+0x0],ah
   140035312:	outs   dx,BYTE PTR ds:[rsi]
   140035313:	add    BYTE PTR [rdi+0x0],ah
   140035316:	ins    BYTE PTR es:[rdi],dx
   140035317:	add    BYTE PTR [rcx+0x0],ch
   14003531a:	jae    0x14003531c
   14003531c:	push   0x75002d00
   140035321:	add    BYTE PTR [rbx+0x0],ch
   140035324:	add    BYTE PTR [rax],al
   140035326:	add    BYTE PTR [rax],al
   140035328:	add    BYTE PTR gs:[rsi+0x0],ch
   14003532c:	add    BYTE PTR [eax+eax*1+0x69],ch
   140035331:	add    BYTE PTR [rbx+0x0],dh
   140035334:	push   0x75002d00
   140035339:	add    BYTE PTR [rbx+0x0],dh
   14003533c:	add    BYTE PTR [rax],al
   14003533e:	add    BYTE PTR [rax],al
   140035340:	add    BYTE PTR gs:[rsi+0x0],ch
   140035344:	add    BYTE PTR [eax+eax*1+0x69],ch
   140035349:	add    BYTE PTR [rbx+0x0],dh
   14003534c:	push   0x75002d00
   140035351:	add    BYTE PTR [rbx+0x0],dh
   140035354:	(bad)  
   140035355:	add    BYTE PTR [rax],al
   140035357:	add    BYTE PTR [rsi+0x0],ah
   14003535a:	jb     0x14003535c
   14003535c:	add    BYTE PTR gs:[rsi+0x0],ch
   140035360:	movsxd eax,DWORD PTR [rax]
   140035362:	push   0x62002d00
   140035367:	add    BYTE PTR [rbp+0x0],ah
   14003536a:	ins    BYTE PTR es:[rdi],dx
   14003536b:	add    BYTE PTR [rdi+0x0],ah
   14003536e:	imul   eax,DWORD PTR [rax],0x6e0061
   140035374:	add    BYTE PTR [rax],al
   140035376:	add    BYTE PTR [rax],al
   140035378:	data16 add BYTE PTR [rdx+0x0],dh
   14003537c:	add    BYTE PTR gs:[rsi+0x0],ch
   140035380:	movsxd eax,DWORD PTR [rax]
   140035382:	push   0x63002d00
   140035387:	add    BYTE PTR [rcx+0x0],ah
   14003538a:	outs   dx,BYTE PTR ds:[rsi]
   14003538b:	add    BYTE PTR [rcx+0x0],ah
   14003538e:	add    BYTE PTR fs:[rcx+0x0],ch
   140035392:	(bad)  
   140035393:	add    BYTE PTR [rsi+0x0],ch
   140035396:	add    BYTE PTR [rax],al
   140035398:	data16 add BYTE PTR [rdx+0x0],dh
   14003539c:	add    BYTE PTR gs:[rsi+0x0],ch
   1400353a0:	movsxd eax,DWORD PTR [rax]
   1400353a2:	push   0x6c002d00
   1400353a7:	add    BYTE PTR [rbp+0x0],dh
   1400353aa:	js     0x1400353ac
   1400353ac:	add    BYTE PTR gs:[rbp+0x0],ch
   1400353b0:	(bad)  
   1400353b1:	add    BYTE PTR [rdi+0x0],ch
   1400353b4:	jne    0x1400353b6
   1400353b6:	jb     0x1400353b8
   1400353b8:	add    BYTE PTR [eax],al
   1400353bb:	add    BYTE PTR [rax],al
   1400353bd:	add    BYTE PTR [rax],al
   1400353bf:	add    BYTE PTR [rsi+0x0],ah
   1400353c2:	jb     0x1400353c4
   1400353c4:	add    BYTE PTR gs:[rsi+0x0],ch
   1400353c8:	movsxd eax,DWORD PTR [rax]
   1400353ca:	push   0x73002d00
   1400353cf:	add    BYTE PTR [rdi+0x0],dh
   1400353d2:	imul   eax,DWORD PTR [rax],0x730073
	...
   1400353e0:	add    BYTE PTR [ebp+0x0],ah
   1400353e4:	jb     0x1400353e6
   1400353e6:	ins    DWORD PTR es:[rdi],dx
   1400353e7:	add    BYTE PTR [rcx+0x0],ah
   1400353ea:	outs   dx,BYTE PTR ds:[rsi]
   1400353eb:	add    BYTE PTR [rip+0x75006100],ch        # 0x1b503b4f1
   1400353f1:	add    BYTE PTR [rbx+0x0],dh
   1400353f4:	je     0x1400353f6
   1400353f6:	jb     0x1400353f8
   1400353f8:	imul   eax,DWORD PTR [rax],0x6e0061
   1400353fe:	add    BYTE PTR [rax],al
   140035400:	add    BYTE PTR [ebp+0x0],ah
   140035404:	jb     0x140035406
   140035406:	ins    DWORD PTR es:[rdi],dx
   140035407:	add    BYTE PTR [rcx+0x0],ah
   14003540a:	outs   dx,BYTE PTR ds:[rsi]
   14003540b:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a903c011
   140035411:	add    BYTE PTR [rbx+0x0],ah
   140035414:	push   0x65007400
   140035419:	add    BYTE PTR [rsi+0x0],ch
   14003541c:	jae    0x14003541e
   14003541e:	je     0x140035420
   140035420:	add    BYTE PTR gs:[rcx+0x0],ch
   140035424:	outs   dx,BYTE PTR ds:[rsi]
   140035425:	add    BYTE PTR [rax],al
   140035427:	add    BYTE PTR [rdi+0x0],ah
   14003542a:	add    BYTE PTR gs:[rdx+0x0],dh
   14003542e:	ins    DWORD PTR es:[rdi],dx
   14003542f:	add    BYTE PTR [rcx+0x0],ah
   140035432:	outs   dx,BYTE PTR ds:[rsi]
   140035433:	add    BYTE PTR [rip+0x75006c00],ch        # 0x1b503c039
   140035439:	add    BYTE PTR [rax+0x0],bh
   14003543c:	add    BYTE PTR gs:[rbp+0x0],ch
   140035440:	(bad)  
   140035441:	add    BYTE PTR [rdi+0x0],ch
   140035444:	jne    0x140035446
   140035446:	jb     0x140035448
   140035448:	add    BYTE PTR [eax],al
   14003544b:	add    BYTE PTR [rax],al
   14003544d:	add    BYTE PTR [rax],al
   14003544f:	add    BYTE PTR [rdi+0x0],ah
   140035452:	add    BYTE PTR gs:[rdx+0x0],dh
   140035456:	ins    DWORD PTR es:[rdi],dx
   140035457:	add    BYTE PTR [rcx+0x0],ah
   14003545a:	outs   dx,BYTE PTR ds:[rsi]
   14003545b:	add    BYTE PTR [rip+0x77007300],ch        # 0x1b703c761
   140035461:	add    BYTE PTR [rcx+0x0],ch
   140035464:	jae    0x140035466
   140035466:	jae    0x140035468
	...
   140035470:	imul   eax,DWORD PTR [rax],0x690072
   140035476:	jae    0x140035478
   140035478:	push   0x65002d00
   14003547d:	add    BYTE PTR [rsi+0x0],ch
   140035480:	add    BYTE PTR [eax+eax*1+0x69],ch
   140035485:	add    BYTE PTR [rbx+0x0],dh
   140035488:	push   0x0
   14003548d:	add    BYTE PTR [rax],al
   14003548f:	add    BYTE PTR [rcx+0x0],ch
   140035492:	je     0x140035494
   140035494:	(bad)  
   140035495:	add    BYTE PTR [rax+rax*1+0x69],ch
   140035499:	add    BYTE PTR [rcx+0x0],ah
   14003549c:	outs   dx,BYTE PTR ds:[rsi]
   14003549d:	add    BYTE PTR [rip+0x77007300],ch        # 0x1b703c7a3
   1400354a3:	add    BYTE PTR [rcx+0x0],ch
   1400354a6:	jae    0x1400354a8
   1400354a8:	jae    0x1400354aa
   1400354aa:	add    BYTE PTR [rax],al
   1400354ac:	add    BYTE PTR [rax],al
   1400354ae:	add    BYTE PTR [rax],al
   1400354b0:	outs   dx,BYTE PTR ds:[rsi]
   1400354b1:	add    BYTE PTR [rdi+0x0],ch
   1400354b4:	jb     0x1400354b6
   1400354b6:	ja     0x1400354b8
   1400354b8:	add    BYTE PTR gs:[rdi+0x0],ah
   1400354bc:	imul   eax,DWORD PTR [rax],0x6e0061
   1400354c2:	add    BYTE PTR [rax],al
   1400354c4:	add    BYTE PTR [rax],al
   1400354c6:	add    BYTE PTR [rax],al
   1400354c8:	outs   dx,BYTE PTR ds:[rsi]
   1400354c9:	add    BYTE PTR [rdi+0x0],ch
   1400354cc:	jb     0x1400354ce
   1400354ce:	ja     0x1400354d0
   1400354d0:	add    BYTE PTR gs:[rdi+0x0],ah
   1400354d4:	imul   eax,DWORD PTR [rax],0x6e0061
   1400354da:	sub    eax,0x6f006200
   1400354df:	add    BYTE PTR [rbx+0x0],ch
   1400354e2:	ins    DWORD PTR es:[rdi],dx
   1400354e3:	add    BYTE PTR [rcx+0x0],ah
   1400354e6:	ins    BYTE PTR es:[rdi],dx
	...
   1400354ef:	add    BYTE PTR [rsi+0x0],ch
   1400354f2:	outs   dx,DWORD PTR ds:[rsi]
   1400354f3:	add    BYTE PTR [rdx+0x0],dh
   1400354f6:	ja     0x1400354f8
   1400354f8:	add    BYTE PTR gs:[rdi+0x0],ah
   1400354fc:	imul   eax,DWORD PTR [rax],0x6e0061
   140035502:	sub    eax,0x79006e00
   140035507:	add    BYTE PTR [rsi+0x0],ch
   14003550a:	outs   dx,DWORD PTR ds:[rsi]
   14003550b:	add    BYTE PTR [rdx+0x0],dh
   14003550e:	jae    0x140035510
   140035510:	imul   eax,DWORD PTR [rax],0x0
   140035513:	add    BYTE PTR [rax],al
   140035515:	add    BYTE PTR [rax],al
   140035517:	add    BYTE PTR [rax+0x0],dh
   14003551a:	outs   dx,DWORD PTR ds:[rsi]
   14003551b:	add    BYTE PTR [rdx+0x0],dh
   14003551e:	je     0x140035520
   140035520:	jne    0x140035522
   140035522:	add    BYTE PTR [ebp+0x0],dh
   140035526:	add    BYTE PTR gs:[rbx+0x0],dh
   14003552a:	add    BYTE PTR gs:[rip+0x72006200],ch        # 0x1b203b731
   140035531:	add    BYTE PTR [rcx+0x0],ah
   140035534:	jp     0x140035536
   140035536:	imul   eax,DWORD PTR [rax],0x69006c
   14003553c:	(bad)  
   14003553d:	add    BYTE PTR [rsi+0x0],ch
	...
   140035548:	jae    0x14003554a
   14003554a:	jo     0x14003554c
   14003554c:	(bad)  
   14003554d:	add    BYTE PTR [rsi+0x0],ch
   140035550:	imul   eax,DWORD PTR [rax],0x680073
   140035556:	sub    eax,0x72006100
   14003555b:	add    BYTE PTR [rdi+0x0],ah
   14003555e:	add    BYTE PTR gs:[rsi+0x0],ch
   140035562:	je     0x140035564
   140035564:	imul   eax,DWORD PTR [rax],0x61006e
   14003556a:	add    BYTE PTR [rax],al
   14003556c:	add    BYTE PTR [rax],al
   14003556e:	add    BYTE PTR [rax],al
   140035570:	jae    0x140035572
   140035572:	jo     0x140035574
   140035574:	(bad)  
   140035575:	add    BYTE PTR [rsi+0x0],ch
   140035578:	imul   eax,DWORD PTR [rax],0x680073
   14003557e:	sub    eax,0x6f006200
   140035583:	add    BYTE PTR [rax+rax*1+0x69],ch
   140035587:	add    BYTE PTR [rsi+0x0],dh
   14003558a:	imul   eax,DWORD PTR [rax],0x61
   140035590:	jae    0x140035592
   140035592:	jo     0x140035594
   140035594:	(bad)  
   140035595:	add    BYTE PTR [rsi+0x0],ch
   140035598:	imul   eax,DWORD PTR [rax],0x680073
   14003559e:	sub    eax,0x68006300
   1400355a3:	add    BYTE PTR [rcx+0x0],ch
   1400355a6:	ins    BYTE PTR es:[rdi],dx
   1400355a7:	add    BYTE PTR [rbp+0x0],ah
   1400355aa:	add    BYTE PTR [rax],al
   1400355ac:	add    BYTE PTR [rax],al
   1400355ae:	add    BYTE PTR [rax],al
   1400355b0:	jae    0x1400355b2
   1400355b2:	jo     0x1400355b4
   1400355b4:	(bad)  
   1400355b5:	add    BYTE PTR [rsi+0x0],ch
   1400355b8:	imul   eax,DWORD PTR [rax],0x680073
   1400355be:	sub    eax,0x6f006300
   1400355c3:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400355c7:	add    BYTE PTR [rbp+0x0],ch
   1400355ca:	(bad)  
   1400355cb:	add    BYTE PTR [rcx+0x0],ch
   1400355ce:	(bad)  
	...
   1400355d7:	add    BYTE PTR [rbx+0x0],dh
   1400355da:	jo     0x1400355dc
   1400355dc:	(bad)  
   1400355dd:	add    BYTE PTR [rsi+0x0],ch
   1400355e0:	imul   eax,DWORD PTR [rax],0x680073
   1400355e6:	sub    eax,0x6f006300
   1400355eb:	add    BYTE PTR [rbx+0x0],dh
   1400355ee:	je     0x1400355f0
   1400355f0:	(bad)  
   1400355f1:	add    BYTE PTR [rax],ah
   1400355f3:	add    BYTE PTR [rdx+0x0],dh
   1400355f6:	imul   eax,DWORD PTR [rax],0x610063
   1400355fc:	add    BYTE PTR [rax],al
   1400355fe:	add    BYTE PTR [rax],al
   140035600:	jae    0x140035602
   140035602:	jo     0x140035604
   140035604:	(bad)  
   140035605:	add    BYTE PTR [rsi+0x0],ch
   140035608:	imul   eax,DWORD PTR [rax],0x680073
   14003560e:	sub    eax,0x6f006400
   140035613:	add    BYTE PTR [rbp+0x0],ch
   140035616:	imul   eax,DWORD PTR [rax],0x69006e
   14003561c:	movsxd eax,DWORD PTR [rax]
   14003561e:	(bad)  
   14003561f:	add    BYTE PTR [rsi+0x0],ch
   140035622:	and    BYTE PTR [rax],al
   140035624:	jb     0x140035626
   140035626:	add    BYTE PTR gs:[rax+0x0],dh
   14003562a:	jne    0x14003562c
   14003562c:	(bad)  
   14003562d:	add    BYTE PTR [rax+rax*1+0x69],ch
   140035631:	add    BYTE PTR [rbx+0x0],ah
   140035634:	add    BYTE PTR [rax],al
   140035636:	add    BYTE PTR [rax],al
   140035638:	jae    0x14003563a
   14003563a:	jo     0x14003563c
   14003563c:	(bad)  
   14003563d:	add    BYTE PTR [rsi+0x0],ch
   140035640:	imul   eax,DWORD PTR [rax],0x680073
   140035646:	sub    eax,0x63006500
   14003564b:	add    BYTE PTR [rbp+0x0],dh
   14003564e:	(bad)  
   14003564f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140035653:	add    BYTE PTR [rdx+0x0],dh
   140035656:	add    BYTE PTR [rax],al
   140035658:	jae    0x14003565a
   14003565a:	jo     0x14003565c
   14003565c:	(bad)  
   14003565d:	add    BYTE PTR [rsi+0x0],ch
   140035660:	imul   eax,DWORD PTR [rax],0x680073
   140035666:	sub    eax,0x6c006500
   14003566b:	add    BYTE PTR [rax],ah
   14003566d:	add    BYTE PTR [rbx+0x0],dh
   140035670:	(bad)  
   140035671:	add    BYTE PTR [rax+rax*1+0x76],ch
   140035675:	add    BYTE PTR [rcx+0x0],ah
   140035678:	add    BYTE PTR fs:[rdi+0x0],ch
   14003567c:	jb     0x14003567e
   14003567e:	add    BYTE PTR [rax],al
   140035680:	jae    0x140035682
   140035682:	jo     0x140035684
   140035684:	(bad)  
   140035685:	add    BYTE PTR [rsi+0x0],ch
   140035688:	imul   eax,DWORD PTR [rax],0x680073
   14003568e:	sub    eax,0x75006700
   140035693:	add    BYTE PTR [rcx+0x0],ah
   140035696:	je     0x140035698
   140035698:	add    BYTE PTR gs:[rbp+0x0],ch
   14003569c:	(bad)  
   14003569d:	add    BYTE PTR [rax+rax*1+0x61],ch
   1400356a1:	add    BYTE PTR [rax],al
   1400356a3:	add    BYTE PTR [rax],al
   1400356a5:	add    BYTE PTR [rax],al
   1400356a7:	add    BYTE PTR [rbx+0x0],dh
   1400356aa:	jo     0x1400356ac
   1400356ac:	(bad)  
   1400356ad:	add    BYTE PTR [rsi+0x0],ch
   1400356b0:	imul   eax,DWORD PTR [rax],0x680073
   1400356b6:	sub    eax,0x6f006800
   1400356bb:	add    BYTE PTR [rsi+0x0],ch
   1400356be:	add    BYTE PTR fs:[rbp+0x0],dh
   1400356c2:	jb     0x1400356c4
   1400356c4:	(bad)  
   1400356c5:	add    BYTE PTR [rbx+0x0],dh
	...
   1400356d0:	jae    0x1400356d2
   1400356d2:	jo     0x1400356d4
   1400356d4:	(bad)  
   1400356d5:	add    BYTE PTR [rsi+0x0],ch
   1400356d8:	imul   eax,DWORD PTR [rax],0x680073
   1400356de:	sub    eax,0x65006d00
   1400356e3:	add    BYTE PTR [rax+0x0],bh
   1400356e6:	imul   eax,DWORD PTR [rax],0x610063
   1400356ec:	outs   dx,BYTE PTR ds:[rsi]
   1400356ed:	add    BYTE PTR [rax],al
   1400356ef:	add    BYTE PTR [rbx+0x0],dh
   1400356f2:	jo     0x1400356f4
   1400356f4:	(bad)  
   1400356f5:	add    BYTE PTR [rsi+0x0],ch
   1400356f8:	imul   eax,DWORD PTR [rax],0x680073
   1400356fe:	sub    eax,0x6f006d00
   140035703:	add    BYTE PTR [rax+rax*1+0x65],ah
   140035707:	add    BYTE PTR [rdx+0x0],dh
   14003570a:	outs   dx,BYTE PTR ds:[rsi]
   14003570b:	add    BYTE PTR [rax],al
   14003570d:	add    BYTE PTR [rax],al
   14003570f:	add    BYTE PTR [rbx+0x0],dh
   140035712:	jo     0x140035714
   140035714:	(bad)  
   140035715:	add    BYTE PTR [rsi+0x0],ch
   140035718:	imul   eax,DWORD PTR [rax],0x680073
   14003571e:	sub    eax,0x69006e00
   140035723:	add    BYTE PTR [rbx+0x0],ah
   140035726:	(bad)  
   140035727:	add    BYTE PTR [rdx+0x0],dh
   14003572a:	(bad)  
   14003572b:	add    BYTE PTR [rdi+0x0],ah
   14003572e:	jne    0x140035730
   140035730:	(bad)  
   140035731:	add    BYTE PTR [rax],al
   140035733:	add    BYTE PTR [rax],al
   140035735:	add    BYTE PTR [rax],al
   140035737:	add    BYTE PTR [rbx+0x0],dh
   14003573a:	jo     0x14003573c
   14003573c:	(bad)  
   14003573d:	add    BYTE PTR [rsi+0x0],ch
   140035740:	imul   eax,DWORD PTR [rax],0x680073
   140035746:	sub    eax,0x61007000
   14003574b:	add    BYTE PTR [rsi+0x0],ch
   14003574e:	(bad)  
   14003574f:	add    BYTE PTR [rbp+0x0],ch
   140035752:	(bad)  
   140035753:	add    BYTE PTR [rax],al
   140035755:	add    BYTE PTR [rax],al
   140035757:	add    BYTE PTR [rbx+0x0],dh
   14003575a:	jo     0x14003575c
   14003575c:	(bad)  
   14003575d:	add    BYTE PTR [rsi+0x0],ch
   140035760:	imul   eax,DWORD PTR [rax],0x680073
   140035766:	sub    eax,0x61007000
   14003576b:	add    BYTE PTR [rdx+0x0],dh
   14003576e:	(bad)  
   14003576f:	add    BYTE PTR [rdi+0x0],ah
   140035772:	jne    0x140035774
   140035774:	(bad)  
   140035775:	add    BYTE PTR [rcx+0x0],bh
	...
   140035780:	jae    0x140035782
   140035782:	jo     0x140035784
   140035784:	(bad)  
   140035785:	add    BYTE PTR [rsi+0x0],ch
   140035788:	imul   eax,DWORD PTR [rax],0x680073
   14003578e:	sub    eax,0x65007000
   140035793:	add    BYTE PTR [rdx+0x0],dh
   140035796:	jne    0x140035798
	...
   1400357a0:	jae    0x1400357a2
   1400357a2:	jo     0x1400357a4
   1400357a4:	(bad)  
   1400357a5:	add    BYTE PTR [rsi+0x0],ch
   1400357a8:	imul   eax,DWORD PTR [rax],0x680073
   1400357ae:	sub    eax,0x75007000
   1400357b3:	add    BYTE PTR [rbp+0x0],ah
   1400357b6:	jb     0x1400357b8
   1400357b8:	je     0x1400357ba
   1400357ba:	outs   dx,DWORD PTR ds:[rsi]
   1400357bb:	add    BYTE PTR [rax],ah
   1400357bd:	add    BYTE PTR [rdx+0x0],dh
   1400357c0:	imul   eax,DWORD PTR [rax],0x6f0063
   1400357c6:	add    BYTE PTR [rax],al
   1400357c8:	jae    0x1400357ca
   1400357ca:	jo     0x1400357cc
   1400357cc:	(bad)  
   1400357cd:	add    BYTE PTR [rsi+0x0],ch
   1400357d0:	imul   eax,DWORD PTR [rax],0x680073
   1400357d6:	sub    eax,0x72007500
   1400357db:	add    BYTE PTR [rbp+0x0],dh
   1400357de:	add    BYTE PTR [ebp+0x0],dh
   1400357e2:	(bad)  
   1400357e3:	add    BYTE PTR [rcx+0x0],bh
   1400357e6:	add    BYTE PTR [rax],al
   1400357e8:	jae    0x1400357ea
   1400357ea:	jo     0x1400357ec
   1400357ec:	(bad)  
   1400357ed:	add    BYTE PTR [rsi+0x0],ch
   1400357f0:	imul   eax,DWORD PTR [rax],0x680073
   1400357f6:	sub    eax,0x65007600
   1400357fb:	add    BYTE PTR [rsi+0x0],ch
   1400357fe:	add    BYTE PTR gs:[rdx+0x0],bh
   140035802:	jne    0x140035804
   140035804:	add    BYTE PTR gs:[rax+rax*1+0x61],ch
   140035809:	add    BYTE PTR [rax],al
   14003580b:	add    BYTE PTR [rax],al
   14003580d:	add    BYTE PTR [rax],al
   14003580f:	add    BYTE PTR [rbx+0x0],dh
   140035812:	ja     0x140035814
   140035814:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
   140035819:	add    BYTE PTR [rbx+0x0],dh
   14003581c:	push   0x66002d00
   140035821:	add    BYTE PTR [rcx+0x0],ch
   140035824:	outs   dx,BYTE PTR ds:[rsi]
   140035825:	add    BYTE PTR [rax+rax*1+0x61],ch
   140035829:	add    BYTE PTR [rsi+0x0],ch
   14003582c:	add    BYTE PTR fs:[rax],al
   14003582f:	add    BYTE PTR [rbx+0x0],dh
   140035832:	ja     0x140035834
   140035834:	imul   eax,DWORD PTR [rax],0x730073
   14003583a:	add    BYTE PTR [rax],al
   14003583c:	jne    0x14003583e
   14003583e:	jae    0x140035840
	...
   140035848:	jne    0x14003584a
   14003584a:	jae    0x14003584c
   14003584c:	(bad)  
   14003584d:	add    BYTE PTR [rax],al
   14003584f:	add    al,al
   140035851:	pop    rcx
   140035852:	add    eax,DWORD PTR [rax+0x1]
   140035855:	add    BYTE PTR [rax],al
   140035857:	add    BYTE PTR [rbp+0x0],dl
   14003585a:	push   rbx
   14003585b:	add    BYTE PTR [rcx+0x0],al
   14003585e:	add    BYTE PTR [rax],al
   140035860:	rcr    BYTE PTR [rcx+0x3],1
   140035863:	rex add DWORD PTR [rax],eax
   140035866:	add    BYTE PTR [rax],al
   140035868:	rex.RXB add BYTE PTR [r10+0x0],r8b
   14003586c:	push   rdx
   14003586d:	add    BYTE PTR [rax],al
   14003586f:	add    al,ah
   140035871:	pop    rcx
   140035872:	add    eax,DWORD PTR [rax+0x1]
   140035875:	add    BYTE PTR [rax],al
   140035877:	add    BYTE PTR [rbx+0x0],al
   14003587a:	rex.W add BYTE PTR [rsi+0x0],cl
   14003587e:	add    BYTE PTR [rax],al
   140035880:	lock pop rcx
   140035882:	add    eax,DWORD PTR [rax+0x1]
   140035885:	add    BYTE PTR [rax],al
   140035887:	add    BYTE PTR [rbx+0x0],al
   14003588a:	pop    rdx
   14003588b:	add    BYTE PTR [rbp+0x0],al
   14003588e:	add    BYTE PTR [rax],al
   140035890:	add    BYTE PTR [rdx+0x3],bl
   140035893:	rex add DWORD PTR [rax],eax
   140035896:	add    BYTE PTR [rax],al
   140035898:	rex.RXB add BYTE PTR [r10+0x0],r8b
   14003589c:	push   rdx
   14003589d:	add    BYTE PTR [rax],al
   14003589f:	add    BYTE PTR [rax],dl
   1400358a1:	pop    rdx
   1400358a2:	add    eax,DWORD PTR [rax+0x1]
   1400358a5:	add    BYTE PTR [rax],al
   1400358a7:	add    BYTE PTR [rdi+0x0],al
   1400358aa:	rex.X add BYTE PTR [rdx+0x0],dl
   1400358ae:	add    BYTE PTR [rax],al
   1400358b0:	xor    BYTE PTR [rdx+0x3],bl
   1400358b3:	rex add DWORD PTR [rax],eax
   1400358b6:	add    BYTE PTR [rax],al
   1400358b8:	rex.WRX add BYTE PTR [rax+r8*1+0x44],r9b
   1400358bd:	add    BYTE PTR [rax],al
   1400358bf:	add    BYTE PTR [rax+0x5a],al
   1400358c2:	add    eax,DWORD PTR [rax+0x1]
   1400358c5:	add    BYTE PTR [rax],al
   1400358c7:	add    BYTE PTR [rax+0x0],cl
   1400358ca:	rex.WXB add BYTE PTR [r15+0x0],al
   1400358ce:	add    BYTE PTR [rax],al
   1400358d0:	pop    rax
   1400358d1:	pop    rdx
   1400358d2:	add    eax,DWORD PTR [rax+0x1]
   1400358d5:	add    BYTE PTR [rax],al
   1400358d7:	add    BYTE PTR [rsi+0x0],cl
   1400358da:	pop    rdx
   1400358db:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400358df:	add    BYTE PTR [rax+0x5a],dh
   1400358e2:	add    eax,DWORD PTR [rax+0x1]
   1400358e5:	add    BYTE PTR [rax],al
   1400358e7:	add    BYTE PTR [rsi+0x0],cl
   1400358ea:	pop    rdx
   1400358eb:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400358ef:	add    BYTE PTR [rax+0x5a],bh
   1400358f2:	add    eax,DWORD PTR [rax+0x1]
   1400358f5:	add    BYTE PTR [rax],al
   1400358f7:	add    BYTE PTR [rbx+0x0],al
   1400358fa:	rex.W add BYTE PTR [rsi+0x0],cl
   1400358fe:	add    BYTE PTR [rax],al
   140035900:	nop
   140035901:	pop    rdx
   140035902:	add    eax,DWORD PTR [rax+0x1]
   140035905:	add    BYTE PTR [rax],al
   140035907:	add    BYTE PTR [rbx+0x0],al
   14003590a:	rex.W add BYTE PTR [rsi+0x0],cl
   14003590e:	add    BYTE PTR [rax],al
   140035910:	test   al,0x5a
   140035912:	add    eax,DWORD PTR [rax+0x1]
   140035915:	add    BYTE PTR [rax],al
   140035917:	add    BYTE PTR [rax+0x0],dl
   14003591a:	push   rdx
   14003591b:	add    BYTE PTR [rcx+0x0],cl
   14003591e:	add    BYTE PTR [rax],al
   140035920:	rcr    BYTE PTR [rdx+0x3],0x40
   140035924:	add    DWORD PTR [rax],eax
   140035926:	add    BYTE PTR [rax],al
   140035928:	push   rbx
   140035929:	add    BYTE PTR [rsi+0x0],dl
   14003592c:	rex.WXB add BYTE PTR [r8],al
   14003592f:	add    al,dl
   140035931:	pop    rdx
   140035932:	add    eax,DWORD PTR [rax+0x1]
   140035935:	add    BYTE PTR [rax],al
   140035937:	add    BYTE PTR [rdx+0x0],bl
   14003593a:	add    BYTE PTR [r14+0x0],al
   14003593e:	add    BYTE PTR [rax],al
   140035940:	lock pop rdx
   140035942:	add    eax,DWORD PTR [rax+0x1]
   140035945:	add    BYTE PTR [rax],al
   140035947:	add    BYTE PTR [rbx+0x0],cl
   14003594a:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14003594e:	add    BYTE PTR [rax],al
   140035950:	or     BYTE PTR [rbx+0x3],bl
   140035953:	rex add DWORD PTR [rax],eax
   140035956:	add    BYTE PTR [rax],al
   140035958:	pop    rdx
   140035959:	add    BYTE PTR [rcx+0x0],al
   14003595c:	rex.RX add BYTE PTR [rax],r8b
   14003595f:	add    BYTE PTR [rax],ch
   140035961:	pop    rbx
   140035962:	add    eax,DWORD PTR [rax+0x1]
   140035965:	add    BYTE PTR [rax],al
   140035967:	add    BYTE PTR [rbx+0x0],cl
   14003596a:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14003596e:	add    BYTE PTR [rax],al
   140035970:	rex pop rbx
   140035972:	add    eax,DWORD PTR [rax+0x1]
   140035975:	add    BYTE PTR [rax],al
   140035977:	add    BYTE PTR [rax+rax*1+0x54],dl
   14003597b:	add    BYTE PTR [rdi+0x0],cl
   14003597e:	add    BYTE PTR [rax],al
   140035980:	sbb    BYTE PTR [rax],bl
   140035982:	add    eax,DWORD PTR [rax+0x1]
   140035985:	add    BYTE PTR [rax],al
   140035987:	add    BYTE PTR [rdi+0x0],al
   14003598a:	rex.X add BYTE PTR [rdx+0x0],dl
   14003598e:	add    BYTE PTR [rax],al
   140035990:	push   0x140035b
   140035995:	add    BYTE PTR [rax],al
   140035997:	add    BYTE PTR [rdi+0x0],al
   14003599a:	rex.X add BYTE PTR [rdx+0x0],dl
   14003599e:	add    BYTE PTR [rax],al
   1400359a0:	mov    BYTE PTR [rbx+0x3],bl
   1400359a3:	rex add DWORD PTR [rax],eax
   1400359a6:	add    BYTE PTR [rax],al
   1400359a8:	push   rbp
   1400359a9:	add    BYTE PTR [rbx+0x0],dl
   1400359ac:	add    BYTE PTR [r8],al
   1400359af:	add    BYTE PTR [rax+rbx*2],bh
   1400359b2:	add    eax,DWORD PTR [rax+0x1]
   1400359b5:	add    BYTE PTR [rax],al
   1400359b7:	add    BYTE PTR [rbp+0x0],dl
   1400359ba:	push   rbx
   1400359bb:	add    BYTE PTR [rcx+0x0],al
   1400359be:	add    BYTE PTR [rax],al
   1400359c0:	(bad)  
   1400359c1:	add    BYTE PTR [rbp+0x0],ch
   1400359c4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400359c8:	imul   eax,DWORD PTR [rax],0x610063
   1400359ce:	add    BYTE PTR [rax],al
   1400359d0:	(bad)  
   1400359d1:	add    BYTE PTR [rdx+0x0],dh
   1400359d4:	imul   eax,DWORD PTR [rax],0x610074
   1400359da:	imul   eax,DWORD PTR [rax],0x6e
   1400359e0:	movsxd eax,DWORD PTR [rax]
   1400359e2:	push   0x6e006900
   1400359e7:	add    BYTE PTR [rcx+0x0],ah
   1400359ea:	add    BYTE PTR [rax],al
   1400359ec:	add    BYTE PTR [rax],al
   1400359ee:	add    BYTE PTR [rax],al
   1400359f0:	movsxd eax,DWORD PTR [rax]
   1400359f2:	jp     0x1400359f4
   1400359f4:	add    BYTE PTR gs:[rbx+0x0],ah
   1400359f8:	push   0x0
   1400359fd:	add    BYTE PTR [rax],al
   1400359ff:	add    BYTE PTR [rbp+0x0],ah
   140035a02:	outs   dx,BYTE PTR ds:[rsi]
   140035a03:	add    BYTE PTR [rdi+0x0],ah
   140035a06:	ins    BYTE PTR es:[rdi],dx
   140035a07:	add    BYTE PTR [rcx+0x0],ah
   140035a0a:	outs   dx,BYTE PTR ds:[rsi]
   140035a0b:	add    BYTE PTR [rax+rax*1+0x0],ah
   140035a0f:	add    BYTE PTR [rdi+0x0],ah
   140035a12:	jb     0x140035a14
   140035a14:	add    BYTE PTR gs:[rcx+0x0],ah
   140035a18:	je     0x140035a1a
   140035a1a:	and    BYTE PTR [rax],al
   140035a1c:	(bad)  
   140035a1d:	add    BYTE PTR [rdx+0x0],dh
   140035a20:	imul   eax,DWORD PTR [rax],0x610074
   140035a26:	imul   eax,DWORD PTR [rax],0x6e
   140035a2c:	add    BYTE PTR [rax],al
   140035a2e:	add    BYTE PTR [rax],al
   140035a30:	push   0x6c006f00
   140035a35:	add    BYTE PTR [rax+rax*1+0x61],ch
   140035a39:	add    BYTE PTR [rsi+0x0],ch
   140035a3c:	add    BYTE PTR fs:[rax],al
   140035a3f:	add    BYTE PTR [rax+0x0],ch
   140035a42:	outs   dx,DWORD PTR ds:[rsi]
   140035a43:	add    BYTE PTR [rsi+0x0],ch
   140035a46:	add    BYTE PTR [eip+0x6f006b00],ch        # 0x1af03c54d
   140035a4d:	add    BYTE PTR [rsi+0x0],ch
   140035a50:	add    BYTE PTR [eax],al
   140035a53:	add    BYTE PTR [rax],al
   140035a55:	add    BYTE PTR [rax],al
   140035a57:	add    BYTE PTR [rsi+0x0],ch
   140035a5a:	add    BYTE PTR gs:[rdi+0x0],dh
   140035a5e:	sub    eax,0x65007a00
   140035a63:	add    BYTE PTR [rcx+0x0],ah
   140035a66:	ins    BYTE PTR es:[rdi],dx
   140035a67:	add    BYTE PTR [rcx+0x0],ah
   140035a6a:	outs   dx,BYTE PTR ds:[rsi]
   140035a6b:	add    BYTE PTR [rax+rax*1+0x0],ah
   140035a6f:	add    BYTE PTR [rsi+0x0],ch
   140035a72:	jp     0x140035a74
   140035a74:	add    BYTE PTR [rax],al
   140035a76:	add    BYTE PTR [rax],al
   140035a78:	jo     0x140035a7a
   140035a7a:	jb     0x140035a7c
   140035a7c:	and    BYTE PTR [rax],al
   140035a7e:	movsxd eax,DWORD PTR [rax]
   140035a80:	push   0x6e006900
   140035a85:	add    BYTE PTR [rcx+0x0],ah
	...
   140035a90:	jo     0x140035a92
   140035a92:	jb     0x140035a94
   140035a94:	sub    eax,0x68006300
   140035a99:	add    BYTE PTR [rcx+0x0],ch
   140035a9c:	outs   dx,BYTE PTR ds:[rsi]
   140035a9d:	add    BYTE PTR [rcx+0x0],ah
	...
   140035aa8:	jo     0x140035aaa
   140035aaa:	jne    0x140035aac
   140035aac:	add    BYTE PTR gs:[rdx+0x0],dh
   140035ab0:	je     0x140035ab2
   140035ab2:	outs   dx,DWORD PTR ds:[rsi]
   140035ab3:	add    BYTE PTR [rip+0x69007200],ch        # 0x1a903ccb9
   140035ab9:	add    BYTE PTR [rbx+0x0],ah
   140035abc:	outs   dx,DWORD PTR ds:[rsi]
   140035abd:	add    BYTE PTR [rax],al
   140035abf:	add    BYTE PTR [rbx+0x0],dh
   140035ac2:	ins    BYTE PTR es:[rdi],dx
   140035ac3:	add    BYTE PTR [rdi+0x0],ch
   140035ac6:	jbe    0x140035ac8
   140035ac8:	(bad)  
   140035ac9:	add    BYTE PTR [rbx+0x0],ch
   140035acc:	add    BYTE PTR [rax],al
   140035ace:	add    BYTE PTR [rax],al
   140035ad0:	jae    0x140035ad2
   140035ad2:	outs   dx,DWORD PTR ds:[rsi]
   140035ad3:	add    BYTE PTR [rbp+0x0],dh
   140035ad6:	je     0x140035ad8
   140035ad8:	push   0x61002000
   140035add:	add    BYTE PTR [rsi+0x0],ah
   140035ae0:	jb     0x140035ae2
   140035ae2:	imul   eax,DWORD PTR [rax],0x610063
	...
   140035af0:	jae    0x140035af2
   140035af2:	outs   dx,DWORD PTR ds:[rsi]
   140035af3:	add    BYTE PTR [rbp+0x0],dh
   140035af6:	je     0x140035af8
   140035af8:	push   0x6b002000
   140035afd:	add    BYTE PTR [rdi+0x0],ch
   140035b00:	jb     0x140035b02
   140035b02:	add    BYTE PTR gs:[rcx+0x0],ah
   140035b06:	add    BYTE PTR [rax],al
   140035b08:	jae    0x140035b0a
   140035b0a:	outs   dx,DWORD PTR ds:[rsi]
   140035b0b:	add    BYTE PTR [rbp+0x0],dh
   140035b0e:	je     0x140035b10
   140035b10:	push   0x61002d00
   140035b15:	add    BYTE PTR [rsi+0x0],ah
   140035b18:	jb     0x140035b1a
   140035b1a:	imul   eax,DWORD PTR [rax],0x610063
	...
   140035b28:	jae    0x140035b2a
   140035b2a:	outs   dx,DWORD PTR ds:[rsi]
   140035b2b:	add    BYTE PTR [rbp+0x0],dh
   140035b2e:	je     0x140035b30
   140035b30:	push   0x6b002d00
   140035b35:	add    BYTE PTR [rdi+0x0],ch
   140035b38:	jb     0x140035b3a
   140035b3a:	add    BYTE PTR gs:[rcx+0x0],ah
   140035b3e:	add    BYTE PTR [rax],al
   140035b40:	je     0x140035b42
   140035b42:	jb     0x140035b44
   140035b44:	imul   eax,DWORD PTR [rax],0x69006e
   140035b4a:	add    BYTE PTR fs:[rcx+0x0],ah
   140035b4e:	add    BYTE PTR fs:[rax],ah
   140035b51:	add    BYTE PTR [rsi],ah
   140035b53:	add    BYTE PTR [rax],ah
   140035b55:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140035b59:	add    BYTE PTR [rdx+0x0],ah
   140035b5c:	(bad)  
   140035b5d:	add    BYTE PTR [rdi+0x0],ah
   140035b60:	outs   dx,DWORD PTR ds:[rsi]
   140035b61:	add    BYTE PTR [rax],al
   140035b63:	add    BYTE PTR [rax],al
   140035b65:	add    BYTE PTR [rax],al
   140035b67:	add    BYTE PTR [rbp+0x0],dh
   140035b6a:	outs   dx,BYTE PTR ds:[rsi]
   140035b6b:	add    BYTE PTR [rcx+0x0],ch
   140035b6e:	je     0x140035b70
   140035b70:	add    BYTE PTR gs:[rax+rax*1+0x2d],ah
   140035b75:	add    BYTE PTR [rbx+0x0],ch
   140035b78:	imul   eax,DWORD PTR [rax],0x67006e
   140035b7e:	add    BYTE PTR fs:[rdi+0x0],ch
   140035b82:	ins    DWORD PTR es:[rdi],dx
   140035b83:	add    BYTE PTR [rax],al
   140035b85:	add    BYTE PTR [rax],al
   140035b87:	add    BYTE PTR [rbp+0x0],dh
   140035b8a:	outs   dx,BYTE PTR ds:[rsi]
   140035b8b:	add    BYTE PTR [rcx+0x0],ch
   140035b8e:	je     0x140035b90
   140035b90:	add    BYTE PTR gs:[rax+rax*1+0x2d],ah
   140035b95:	add    BYTE PTR [rbx+0x0],dh
   140035b98:	je     0x140035b9a
   140035b9a:	(bad)  
   140035b9b:	add    BYTE PTR [rax+rax*1+0x65],dh
   140035b9f:	add    BYTE PTR [rbx+0x0],dh
   140035ba2:	add    BYTE PTR [rax],al
   140035ba4:	add    BYTE PTR [r8],al
   140035ba7:	add    BYTE PTR [rdi],dl
   140035ba9:	add    BYTE PTR [rax],al
   140035bab:	add    BYTE PTR [rax],al
   140035bad:	add    BYTE PTR [rax],al
   140035baf:	add    BYTE PTR [rcx+0x0],al
   140035bb2:	rex.XB add BYTE PTR [r8+0x0],dl
   140035bb6:	add    BYTE PTR [rax],al
   140035bb8:	rex.WRXB add BYTE PTR [r11+0x0],r8b
   140035bbc:	push   rax
   140035bbd:	add    BYTE PTR [rax],al
   140035bbf:	add    BYTE PTR [rsp+rcx*1],cl
   140035bc2:	sbb    cl,BYTE PTR [rdi+rax*1]
   140035bc5:	adc    BYTE PTR [rsi],dh
   140035bc7:	add    al,0xc
   140035bc9:	or     BYTE PTR [rip+0xc040304],ch        # 0x14c075ed3
   140035bcf:	adc    BYTE PTR [rax],dl
   140035bd1:	or     BYTE PTR [rip+0x8],bl        # 0x140035bdf
	...
   140035bdf:	add    BYTE PTR [rax+0x0],dh
	...
   140035c36:	add    BYTE PTR [rax],al
   140035c38:	rol    cl,1
   140035c3a:	add    eax,DWORD PTR [rax+0x1]
	...
   140035c4d:	add    BYTE PTR [rax],al
   140035c4f:	add    BYTE PTR [rdx+0x53],dl
   140035c52:	rex.R push rbx
   140035c54:	mov    esp,DWORD PTR [rdx+0x11]
   140035c57:	xor    edi,DWORD PTR [rdx-0x56b4f98e]
   140035c5d:	jne    0x140035c52
   140035c5f:	xchg   edx,eax
   140035c60:	push   rdi
   140035c61:	rex.X ret 
   140035c63:	add    QWORD PTR [r8],rax
   140035c66:	add    BYTE PTR [rax],al
   140035c68:	cmp    bl,BYTE PTR [rbp+r13*2+0x61]
   140035c6d:	je     0x140035cdb
   140035c6f:	(bad)  
   140035c70:	(bad)  
   140035c71:	pop    rsp
   140035c72:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   140035c79:	pop    rsp
   140035c7a:	(bad)  
   140035c7b:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   140035c82:	xor    al,0x5c
   140035c84:	jae    0x140035ceb
   140035c86:	je     0x140035cfd
   140035c88:	jo     0x140035ce6
   140035c8a:	jae    0x140035cf1
   140035c8c:	je     0x140035d03
   140035c8e:	jo     0x140035cbe
   140035c90:	jo     0x140035cf6
   140035c92:	(bad)  
   140035c93:	add    BYTE PTR [rax],al
   140035c95:	add    BYTE PTR [rax],al
   140035c97:	add    BYTE PTR [rdx-0x60000000],ah
	...
   140035ca5:	add    BYTE PTR [rax],al
   140035ca7:	add    BYTE PTR [rcx],al
	...
   140035cb1:	add    BYTE PTR [rax],al
   140035cb3:	add    al,bh
   140035cb5:	xlat   BYTE PTR ds:[rbx]
   140035cb6:	add    eax,DWORD PTR [rax]
   140035cb8:	rcr    BYTE PTR [rbx+rax*1+0x0],1
   140035cbc:	test   al,0x5c
   140035cbe:	add    eax,DWORD PTR [rax]
	...
   140035cd8:	add    DWORD PTR [rax],eax
   140035cda:	add    BYTE PTR [rax],al
   140035cdc:	call   0x14003603d
   140035ce1:	add    BYTE PTR [rax],al
   140035ce3:	add    BYTE PTR [rax],al
   140035ce5:	add    BYTE PTR [rax],al
   140035ce7:	add    al,bh
   140035ce9:	pop    rsp
   140035cea:	add    eax,DWORD PTR [rax]
	...
   140035cf8:	clc    
   140035cf9:	xlat   BYTE PTR ds:[rbx]
   140035cfa:	add    eax,DWORD PTR [rax]
	...
   140035d04:	(bad)  
   140035d05:	(bad)  
   140035d06:	(bad)  
   140035d07:	inc    DWORD PTR [rax]
   140035d09:	add    BYTE PTR [rax],al
   140035d0b:	add    BYTE PTR [rax+0x0],al
   140035d0e:	add    BYTE PTR [rax],al
   140035d10:	rcr    BYTE PTR [rbx+rax*1+0x0],1
	...
   140035d20:	add    DWORD PTR [rax],eax
	...
   140035d2a:	add    BYTE PTR [rax],al
   140035d2c:	sub    al,bl
   140035d2e:	add    eax,DWORD PTR [rax]
   140035d30:	rex.W pop rbp
   140035d32:	add    eax,DWORD PTR [rax]
   140035d34:	and    BYTE PTR [rbp+0x3],bl
	...
   140035d4f:	add    BYTE PTR [rdx],al
   140035d51:	add    BYTE PTR [rax],al
   140035d53:	add    BYTE PTR [rax+0x5d],ah
   140035d56:	add    eax,DWORD PTR [rax]
	...
   140035d60:	js     0x140035dbf
   140035d62:	add    eax,DWORD PTR [rax]
   140035d64:	clc    
   140035d65:	pop    rsp
   140035d66:	add    eax,DWORD PTR [rax]
	...
   140035d78:	sub    al,bl
   140035d7a:	add    eax,DWORD PTR [rax]
   140035d7c:	add    DWORD PTR [rax],eax
   140035d7e:	add    BYTE PTR [rax],al
   140035d80:	add    BYTE PTR [rax],al
   140035d82:	add    BYTE PTR [rax],al
   140035d84:	(bad)  
   140035d85:	(bad)  
   140035d86:	(bad)  
   140035d87:	inc    DWORD PTR [rax]
   140035d89:	add    BYTE PTR [rax],al
   140035d8b:	add    BYTE PTR [rax+0x0],al
   140035d8e:	add    BYTE PTR [rax],al
   140035d90:	rex.W pop rbp
   140035d92:	add    eax,DWORD PTR [rax]
	...
   140035da0:	add    DWORD PTR [rax],eax
	...
   140035daa:	add    BYTE PTR [rax],al
   140035dac:	(bad)  
   140035dad:	fadd   DWORD PTR [rbx]
   140035daf:	add    al,cl
   140035db1:	pop    rbp
   140035db2:	add    eax,DWORD PTR [rax]
   140035db4:	movabs al,ds:0x35d
	...
   140035dcd:	add    BYTE PTR [rax],al
   140035dcf:	add    BYTE PTR [rbx],al
   140035dd1:	add    BYTE PTR [rax],al
   140035dd3:	add    al,ah
   140035dd5:	pop    rbp
   140035dd6:	add    eax,DWORD PTR [rax]
	...
   140035de0:	add    BYTE PTR [rsi+0x3],bl
   140035de3:	add    BYTE PTR [rax+0x5d],bh
   140035de6:	add    eax,DWORD PTR [rax]
   140035de8:	clc    
   140035de9:	pop    rsp
   140035dea:	add    eax,DWORD PTR [rax]
	...
   140035e00:	(bad)  
   140035e01:	fadd   DWORD PTR [rbx]
   140035e03:	add    BYTE PTR [rdx],al
   140035e05:	add    BYTE PTR [rax],al
   140035e07:	add    BYTE PTR [rax],al
   140035e09:	add    BYTE PTR [rax],al
   140035e0b:	add    bh,bh
   140035e0d:	(bad)  
   140035e0e:	(bad)  
   140035e0f:	inc    DWORD PTR [rax]
   140035e11:	add    BYTE PTR [rax],al
   140035e13:	add    BYTE PTR [rax+0x0],al
   140035e16:	add    BYTE PTR [rax],al
   140035e18:	enter  0x35d,0x0
	...
   140035e28:	add    DWORD PTR [rax],eax
	...
   140035e32:	add    BYTE PTR [rax],al
   140035e34:	cwde   
   140035e35:	fadd   DWORD PTR [rbx]
   140035e37:	add    BYTE PTR [rax+0x5e],dl
   140035e3a:	add    eax,DWORD PTR [rax]
   140035e3c:	sub    BYTE PTR [rsi+0x3],bl
	...
   140035e57:	add    BYTE PTR [rbx],al
   140035e59:	add    BYTE PTR [rax],al
   140035e5b:	add    BYTE PTR [rax+0x5e],ch
   140035e5e:	add    eax,DWORD PTR [rax]
	...
   140035e68:	mov    BYTE PTR [rsi+0x3],bl
   140035e6b:	add    BYTE PTR [rax+0x5d],bh
   140035e6e:	add    eax,DWORD PTR [rax]
   140035e70:	clc    
   140035e71:	pop    rsp
   140035e72:	add    eax,DWORD PTR [rax]
	...
   140035e88:	cwde   
   140035e89:	fadd   DWORD PTR [rbx]
   140035e8b:	add    BYTE PTR [rdx],al
   140035e8d:	add    BYTE PTR [rax],al
   140035e8f:	add    BYTE PTR [rax],al
   140035e91:	add    BYTE PTR [rax],al
   140035e93:	add    bh,bh
   140035e95:	(bad)  
   140035e96:	(bad)  
   140035e97:	inc    DWORD PTR [rax]
   140035e99:	add    BYTE PTR [rax],al
   140035e9b:	add    BYTE PTR [rax+0x0],al
   140035e9e:	add    BYTE PTR [rax],al
   140035ea0:	push   rax
   140035ea1:	pop    rsi
   140035ea2:	add    eax,DWORD PTR [rax]
	...
   140035eb0:	clc    
   140035eb1:	fadd   DWORD PTR [rbx]
	...
   140035ebb:	add    bh,bh
   140035ebd:	(bad)  
   140035ebe:	(bad)  
   140035ebf:	inc    DWORD PTR [rax]
   140035ec1:	add    BYTE PTR [rax],al
   140035ec3:	add    BYTE PTR [rax+0x0],al
   140035ec6:	add    BYTE PTR [rax],al
   140035ec8:	fcomp  DWORD PTR [rsi+0x3]
	...
   140035edf:	add    BYTE PTR [rcx],al
   140035ee1:	add    BYTE PTR [rax],al
   140035ee3:	add    al,dh
   140035ee5:	pop    rsi
   140035ee6:	add    eax,DWORD PTR [rax]
	...
   140035ef0:	mov    al,0x5e
   140035ef2:	add    eax,DWORD PTR [rax]
	...
   140035f00:	add    DWORD PTR [rax],eax
	...
   140035f0a:	add    BYTE PTR [rax],al
   140035f0c:	rcr    al,1
   140035f0e:	add    eax,DWORD PTR [rax]
   140035f10:	sub    BYTE PTR [rdi+0x3],bl
   140035f13:	add    BYTE PTR [rax],al
   140035f15:	pop    rdi
   140035f16:	add    eax,DWORD PTR [rax]
	...
   140035f30:	add    al,BYTE PTR [rax]
   140035f32:	add    BYTE PTR [rax],al
   140035f34:	rex pop rdi
   140035f36:	add    eax,DWORD PTR [rax]
	...
   140035f40:	pop    rax
   140035f41:	pop    rdi
   140035f42:	add    eax,DWORD PTR [rax]
   140035f44:	mov    al,0x5e
   140035f46:	add    eax,DWORD PTR [rax]
	...
   140035f58:	rcr    al,1
   140035f5a:	add    eax,DWORD PTR [rax]
   140035f5c:	add    DWORD PTR [rax],eax
   140035f5e:	add    BYTE PTR [rax],al
   140035f60:	add    BYTE PTR [rax],al
   140035f62:	add    BYTE PTR [rax],al
   140035f64:	(bad)  
   140035f65:	(bad)  
   140035f66:	(bad)  
   140035f67:	inc    DWORD PTR [rax]
   140035f69:	add    BYTE PTR [rax],al
   140035f6b:	add    BYTE PTR [rax+0x0],al
   140035f6e:	add    BYTE PTR [rax],al
   140035f70:	sub    BYTE PTR [rdi+0x3],bl
	...
   140035f7f:	add    BYTE PTR [rcx],al
	...
   140035f89:	add    BYTE PTR [rax],al
   140035f8b:	add    BYTE PTR [rax-0x27],dl
   140035f8e:	add    eax,DWORD PTR [rax]
   140035f90:	test   al,0x5f
   140035f92:	add    eax,DWORD PTR [rax]
   140035f94:	sbb    BYTE PTR [rdi+0x3],0x0
	...
   140035fb0:	add    al,BYTE PTR [rax]
   140035fb2:	add    BYTE PTR [rax],al
   140035fb4:	rcr    BYTE PTR [rdi+0x3],0x0
	...
   140035fc0:	fcomp  DWORD PTR [rdi+0x3]
   140035fc3:	add    BYTE PTR [rax+0x35e],dh
	...
   140035fd5:	add    BYTE PTR [rax],al
   140035fd7:	add    BYTE PTR [rax-0x27],dl
   140035fda:	add    eax,DWORD PTR [rax]
   140035fdc:	add    DWORD PTR [rax],eax
   140035fde:	add    BYTE PTR [rax],al
   140035fe0:	add    BYTE PTR [rax],al
   140035fe2:	add    BYTE PTR [rax],al
   140035fe4:	(bad)  
   140035fe5:	(bad)  
   140035fe6:	(bad)  
   140035fe7:	inc    DWORD PTR [rax]
   140035fe9:	add    BYTE PTR [rax],al
   140035feb:	add    BYTE PTR [rax+0x0],al
   140035fee:	add    BYTE PTR [rax],al
   140035ff0:	test   al,0x5f
   140035ff2:	add    eax,DWORD PTR [rax]
	...
   140036000:	add    DWORD PTR [rax],eax
	...
   14003600a:	add    BYTE PTR [rax],al
   14003600c:	and    cl,bl
   14003600e:	add    eax,DWORD PTR [rax]
   140036010:	sub    BYTE PTR [rax+0x3],ah
   140036013:	add    BYTE PTR [rax],al
   140036015:	(bad)  
   140036016:	add    eax,DWORD PTR [rax]
	...
   140036030:	add    eax,DWORD PTR [rax]
   140036032:	add    BYTE PTR [rax],al
   140036034:	rex (bad) 
   140036036:	add    eax,DWORD PTR [rax]
	...
   140036040:	(bad)  
   140036041:	(bad)  
   140036042:	add    eax,DWORD PTR [rax]
   140036044:	fcomp  DWORD PTR [rdi+0x3]
   140036047:	add    BYTE PTR [rax+0x35e],dh
	...
   14003605d:	add    BYTE PTR [rax],al
   14003605f:	add    BYTE PTR [rax],ah
   140036061:	fld    DWORD PTR [rbx]
   140036063:	add    BYTE PTR [rdx],al
   140036065:	add    BYTE PTR [rax],al
   140036067:	add    BYTE PTR [rax],al
   140036069:	add    BYTE PTR [rax],al
   14003606b:	add    bh,bh
   14003606d:	(bad)  
   14003606e:	(bad)  
   14003606f:	inc    DWORD PTR [rax]
   140036071:	add    BYTE PTR [rax],al
   140036073:	add    BYTE PTR [rax+0x0],al
   140036076:	add    BYTE PTR [rax],al
   140036078:	sub    BYTE PTR [rax+0x3],ah
	...
   140036087:	add    BYTE PTR [rcx],al
	...
   140036091:	add    BYTE PTR [rax],al
   140036093:	add    BYTE PTR [rax-0x27],bh
   140036096:	add    eax,DWORD PTR [rax]
   140036098:	mov    al,0x60
   14003609a:	add    eax,DWORD PTR [rax]
   14003609c:	mov    BYTE PTR [rax+0x3],ah
	...
   1400360b7:	add    BYTE PTR [rbx],al
   1400360b9:	add    BYTE PTR [rax],al
   1400360bb:	add    al,cl
   1400360bd:	(bad)  
   1400360be:	add    eax,DWORD PTR [rax]
	...
   1400360c8:	call   0x11803642d
   1400360cd:	pop    rdi
   1400360ce:	add    eax,DWORD PTR [rax]
   1400360d0:	mov    al,0x5e
   1400360d2:	add    eax,DWORD PTR [rax]
	...
   1400360e8:	js     0x1400360c3
   1400360ea:	add    eax,DWORD PTR [rax]
   1400360ec:	add    al,BYTE PTR [rax]
   1400360ee:	add    BYTE PTR [rax],al
   1400360f0:	add    BYTE PTR [rax],al
   1400360f2:	add    BYTE PTR [rax],al
   1400360f4:	(bad)  
   1400360f5:	(bad)  
   1400360f6:	(bad)  
   1400360f7:	inc    DWORD PTR [rax]
   1400360f9:	add    BYTE PTR [rax],al
   1400360fb:	add    BYTE PTR [rax+0x0],al
   1400360fe:	add    BYTE PTR [rax],al
   140036100:	mov    al,0x60
   140036102:	add    eax,DWORD PTR [rax]
	...
   140036110:	add    DWORD PTR [rax],eax
	...
   14003611a:	add    BYTE PTR [rax],al
   14003611c:	movabs al,ds:0x10000361380003d9
   140036125:	(bad)  
   140036126:	add    eax,DWORD PTR [rax]
	...
   140036140:	add    eax,DWORD PTR [rax]
   140036142:	add    BYTE PTR [rax],al
   140036144:	push   rax
   140036145:	(bad)  
   140036146:	add    eax,DWORD PTR [rax]
	...
   140036150:	jo     0x1400361b3
   140036152:	add    eax,DWORD PTR [rax]
   140036154:	fcomp  DWORD PTR [rdi+0x3]
   140036157:	add    BYTE PTR [rax+0x35e],dh
	...
   14003616d:	add    BYTE PTR [rax],al
   14003616f:	add    BYTE PTR [rax+0x20003d9],ah
   140036175:	add    BYTE PTR [rax],al
   140036177:	add    BYTE PTR [rax],al
   140036179:	add    BYTE PTR [rax],al
   14003617b:	add    bh,bh
   14003617d:	(bad)  
   14003617e:	(bad)  
   14003617f:	inc    DWORD PTR [rax]
   140036181:	add    BYTE PTR [rax],al
   140036183:	add    BYTE PTR [rax+0x0],al
   140036186:	add    BYTE PTR [rax],al
   140036188:	cmp    BYTE PTR [rcx+0x3],ah
	...
   140036197:	add    BYTE PTR [rcx],al
	...
   1400361a1:	add    BYTE PTR [rax],al
   1400361a3:	add    al,bh
   1400361a5:	fld    DWORD PTR [rbx]
   1400361a7:	add    al,al
   1400361a9:	(bad)  
   1400361aa:	add    eax,DWORD PTR [rax]
   1400361ac:	cwde   
   1400361ad:	(bad)  
   1400361ae:	add    eax,DWORD PTR [rax]
	...
   1400361c8:	add    al,BYTE PTR [rax]
   1400361ca:	add    BYTE PTR [rax],al
   1400361cc:	fsub   DWORD PTR [rcx+0x3]
	...
   1400361d7:	add    al,dh
   1400361d9:	(bad)  
   1400361da:	add    eax,DWORD PTR [rax]
   1400361dc:	mov    al,0x5e
   1400361de:	add    eax,DWORD PTR [rax]
	...
   1400361f0:	clc    
   1400361f1:	fld    DWORD PTR [rbx]
   1400361f3:	add    BYTE PTR [rcx],al
   1400361f5:	add    BYTE PTR [rax],al
   1400361f7:	add    BYTE PTR [rax],al
   1400361f9:	add    BYTE PTR [rax],al
   1400361fb:	add    bh,bh
   1400361fd:	(bad)  
   1400361fe:	(bad)  
   1400361ff:	inc    DWORD PTR [rax]
   140036201:	add    BYTE PTR [rax],al
   140036203:	add    BYTE PTR [rax+0x0],al
   140036206:	add    BYTE PTR [rax],al
   140036208:	shl    BYTE PTR [rcx+0x3],0x0
	...
   140036218:	add    DWORD PTR [rax],eax
	...
   140036222:	add    BYTE PTR [rax],al
   140036224:	enter  0x3d9,0x0
   140036228:	rex (bad) 
   14003622b:	add    BYTE PTR [rax],bl
   14003622d:	(bad)  
	...
   140036247:	add    BYTE PTR [rbx],al
   140036249:	add    BYTE PTR [rax],al
   14003624b:	add    BYTE PTR [rax+0x62],bl
   14003624e:	add    eax,DWORD PTR [rax]
	...
   140036258:	js     0x1400362bc
   14003625a:	add    eax,DWORD PTR [rax]
   14003625c:	lock (bad) 
   14003625e:	add    eax,DWORD PTR [rax]
   140036260:	mov    al,0x5e
   140036262:	add    eax,DWORD PTR [rax]
	...
   140036278:	enter  0x3d9,0x0
   14003627c:	add    al,BYTE PTR [rax]
   14003627e:	add    BYTE PTR [rax],al
   140036280:	add    BYTE PTR [rax],al
   140036282:	add    BYTE PTR [rax],al
   140036284:	(bad)  
   140036285:	(bad)  
   140036286:	(bad)  
   140036287:	inc    DWORD PTR [rax]
   140036289:	add    BYTE PTR [rax],al
   14003628b:	add    BYTE PTR [rax+0x0],al
   14003628e:	add    BYTE PTR [rax],al
   140036290:	rex (bad) 
	...
   14003629f:	add    BYTE PTR [rcx],al
	...
   1400362a9:	add    BYTE PTR [rax],al
   1400362ab:	add    BYTE PTR [rax],ah
   1400362ad:	fiadd  DWORD PTR [rbx]
   1400362af:	add    al,cl
   1400362b1:	(bad)  
   1400362b3:	add    BYTE PTR [rax+0x362],ah
	...
   1400362cd:	add    BYTE PTR [rax],al
   1400362cf:	add    BYTE PTR [rdx],al
   1400362d1:	add    BYTE PTR [rax],al
   1400362d3:	add    al,ah
   1400362d5:	(bad)  
	...
   1400362df:	add    al,bh
   1400362e1:	(bad)  
   1400362e3:	add    BYTE PTR [rax+0x35e],dh
	...
   1400362f5:	add    BYTE PTR [rax],al
   1400362f7:	add    BYTE PTR [rax],ah
   1400362f9:	fiadd  DWORD PTR [rbx]
   1400362fb:	add    BYTE PTR [rcx],al
   1400362fd:	add    BYTE PTR [rax],al
   1400362ff:	add    BYTE PTR [rax],al
   140036301:	add    BYTE PTR [rax],al
   140036303:	add    bh,bh
   140036305:	(bad)  
   140036306:	(bad)  
   140036307:	inc    DWORD PTR [rax]
   140036309:	add    BYTE PTR [rax],al
   14003630b:	add    BYTE PTR [rax+0x0],al
   14003630e:	add    BYTE PTR [rax],al
   140036310:	enter  0x362,0x0
	...
   140036320:	add    DWORD PTR [rax],eax
	...
   14003632a:	add    BYTE PTR [rax],al
   14003632c:	push   rax
   14003632d:	fiadd  DWORD PTR [rbx]
   14003632f:	add    BYTE PTR [rax+0x63],cl
   140036332:	add    eax,DWORD PTR [rax]
   140036334:	and    BYTE PTR [rbx+0x3],ah
	...
   14003634f:	add    BYTE PTR [rbx],al
   140036351:	add    BYTE PTR [rax],al
   140036353:	add    BYTE PTR [rax+0x63],ah
   140036356:	add    eax,DWORD PTR [rax]
	...
   140036360:	and    BYTE PTR [rbx+0x3],0x0
   140036364:	lock (bad) 
   140036366:	add    eax,DWORD PTR [rax]
   140036368:	mov    al,0x5e
   14003636a:	add    eax,DWORD PTR [rax]
	...
   140036380:	push   rax
   140036381:	fiadd  DWORD PTR [rbx]
   140036383:	add    BYTE PTR [rdx],al
   140036385:	add    BYTE PTR [rax],al
   140036387:	add    BYTE PTR [rax],al
   140036389:	add    BYTE PTR [rax],al
   14003638b:	add    bh,bh
   14003638d:	(bad)  
   14003638e:	(bad)  
   14003638f:	inc    DWORD PTR [rax]
   140036391:	add    BYTE PTR [rax],al
   140036393:	add    BYTE PTR [rax+0x0],al
   140036396:	add    BYTE PTR [rax],al
   140036398:	movsxd rax,DWORD PTR [rbx]
	...
   1400363a7:	add    BYTE PTR [rcx],al
	...
   1400363b1:	add    BYTE PTR [rax],al
   1400363b3:	add    BYTE PTR [rax-0x26],bh
   1400363b6:	add    eax,DWORD PTR [rax]
   1400363b8:	shl    BYTE PTR [rbx+0x3],1
   1400363bb:	add    BYTE PTR [rax+0x363],ch
	...
   1400363d5:	add    BYTE PTR [rax],al
   1400363d7:	add    BYTE PTR [rcx],al
   1400363d9:	add    BYTE PTR [rax],al
   1400363db:	add    al,ch
   1400363dd:	movsxd eax,DWORD PTR [rbx]
	...
   1400363e7:	add    al,bh
   1400363e9:	movsxd eax,DWORD PTR [rbx]
	...
   1400363f7:	add    BYTE PTR [rax-0x26],bh
   1400363fa:	add    eax,DWORD PTR [rax]
	...
   140036404:	(bad)  
   140036405:	(bad)  
   140036406:	(bad)  
   140036407:	inc    DWORD PTR [rax]
   140036409:	add    BYTE PTR [rax],al
   14003640b:	add    BYTE PTR [rax+0x0],al
   14003640e:	add    BYTE PTR [rax],al
   140036410:	shl    BYTE PTR [rbx+0x3],1
	...
   14003641f:	add    BYTE PTR [rcx],al
	...
   140036429:	add    BYTE PTR [rax],al
   14003642b:	add    al,bh
   14003642d:	fadd   DWORD PTR [rbx]
   14003642f:	add    al,bl
   140036431:	pop    rsi
   140036432:	add    eax,DWORD PTR [rax]
   140036434:	and    BYTE PTR [rbx+rax*1+0x0],ah
	...
   140036448:	add    DWORD PTR [rax],eax
	...
   140036452:	add    BYTE PTR [rax],al
   140036454:	cwde   
   140036455:	fiadd  DWORD PTR [rbx]
   140036457:	add    BYTE PTR [rax+0x64],dh
   14003645a:	add    eax,DWORD PTR [rax]
   14003645c:	rex.W
   14003645d:	add    eax,DWORD PTR fs:[rax]
	...
   140036478:	add    al,BYTE PTR [rax]
   14003647a:	add    BYTE PTR [rax],al
   14003647c:	mov    BYTE PTR [rbx+rax*1+0x0],ah
	...
   140036488:	movabs al,ds:0x35eb0000364
	...
   14003649d:	add    BYTE PTR [rax],al
   14003649f:	add    BYTE PTR [rax+0x10003da],bl
   1400364a5:	add    BYTE PTR [rax],al
   1400364a7:	add    BYTE PTR [rax],al
   1400364a9:	add    BYTE PTR [rax],al
   1400364ab:	add    bh,bh
   1400364ad:	(bad)  
   1400364ae:	(bad)  
   1400364af:	inc    DWORD PTR [rax]
   1400364b1:	add    BYTE PTR [rax],al
   1400364b3:	add    BYTE PTR [rax+0x0],al
   1400364b6:	add    BYTE PTR [rax],al
   1400364b8:	jo     0x14003651e
   1400364ba:	add    eax,DWORD PTR [rax]
	...
   1400364c8:	add    DWORD PTR [rax],eax
	...
   1400364d2:	add    BYTE PTR [rax],al
   1400364d4:	rcr    dl,0x3
   1400364d7:	add    al,dh
   1400364d9:	add    eax,DWORD PTR fs:[rax]
   1400364dc:	enter  0x364,0x0
	...
   1400364f8:	add    al,BYTE PTR [rax]
   1400364fa:	add    BYTE PTR [rax],al
   1400364fc:	or     BYTE PTR [rbp+0x3],ah
	...
   140036507:	add    BYTE PTR [rax],ah
   140036509:	add    eax,DWORD PTR gs:[rax]
   14003650c:	mov    al,0x5e
   14003650e:	add    eax,DWORD PTR [rax]
	...
   140036520:	rcr    dl,0x3
   140036523:	add    BYTE PTR [rcx],al
   140036525:	add    BYTE PTR [rax],al
   140036527:	add    BYTE PTR [rax],al
   140036529:	add    BYTE PTR [rax],al
   14003652b:	add    bh,bh
   14003652d:	(bad)  
   14003652e:	(bad)  
   14003652f:	inc    DWORD PTR [rax]
   140036531:	add    BYTE PTR [rax],al
   140036533:	add    BYTE PTR [rax+0x0],al
   140036536:	add    BYTE PTR [rax],al
   140036538:	lock add eax,DWORD PTR fs:[rax]
	...
   140036548:	add    DWORD PTR [rax],eax
	...
   140036552:	add    BYTE PTR [rax],al
   140036554:	call   0x1b0036933
   140036559:	add    eax,DWORD PTR gs:[rax]
   14003655c:	rex.W
   14003655d:	add    eax,DWORD PTR gs:[rax]
	...
   140036578:	add    eax,DWORD PTR [rax]
   14003657a:	add    BYTE PTR [rax],al
   14003657c:	mov    BYTE PTR [rbp+0x3],ah
	...
   140036587:	add    BYTE PTR [rax+0x20000365],ch
   14003658d:	add    eax,DWORD PTR gs:[rax]
   140036590:	mov    al,0x5e
   140036592:	add    eax,DWORD PTR [rax]
	...
   1400365a8:	call   0x142036987
   1400365ad:	add    BYTE PTR [rax],al
   1400365af:	add    BYTE PTR [rax],al
   1400365b1:	add    BYTE PTR [rax],al
   1400365b3:	add    bh,bh
   1400365b5:	(bad)  
   1400365b6:	(bad)  
   1400365b7:	inc    DWORD PTR [rax]
   1400365b9:	add    BYTE PTR [rax],al
   1400365bb:	add    BYTE PTR [rax+0x0],al
   1400365be:	add    BYTE PTR [rax],al
   1400365c0:	jo     0x140036627
   1400365c2:	add    eax,DWORD PTR [rax]
	...
   1400365d0:	add    DWORD PTR [rax],eax
	...
   1400365da:	add    BYTE PTR [rax],al
   1400365dc:	sbb    bl,bl
   1400365de:	add    eax,DWORD PTR [rax]
   1400365e0:	clc    
   1400365e1:	add    eax,DWORD PTR gs:[rax]
   1400365e4:	shl    BYTE PTR [rbp+0x3],1
	...
   1400365ff:	add    BYTE PTR [rdx],al
   140036601:	add    BYTE PTR [rax],al
   140036603:	add    BYTE PTR [rax],dl
   140036605:	add    ax,WORD PTR [rax]
	...
   140036610:	sub    BYTE PTR [rsi+0x3],ah
   140036613:	add    BYTE PTR [rax+0x35e],dh
	...
   140036625:	add    BYTE PTR [rax],al
   140036627:	add    BYTE PTR [rax],bl
   140036629:	fild   DWORD PTR [rbx]
   14003662b:	add    BYTE PTR [rcx],al
   14003662d:	add    BYTE PTR [rax],al
   14003662f:	add    BYTE PTR [rax],al
   140036631:	add    BYTE PTR [rax],al
   140036633:	add    bh,bh
   140036635:	(bad)  
   140036636:	(bad)  
   140036637:	inc    DWORD PTR [rax]
   140036639:	add    BYTE PTR [rax],al
   14003663b:	add    BYTE PTR [rax+0x0],al
   14003663e:	add    BYTE PTR [rax],al
   140036640:	clc    
   140036641:	add    eax,DWORD PTR gs:[rax]
	...
   140036650:	add    DWORD PTR [rax],eax
	...
   14003665a:	add    BYTE PTR [rax],al
   14003665c:	rex fild DWORD PTR [rbx]
   14003665f:	add    BYTE PTR [rax+0x66],bh
   140036662:	add    eax,DWORD PTR [rax]
   140036664:	push   rax
   140036665:	add    ax,WORD PTR [rax]
	...
   140036680:	add    DWORD PTR [rax],eax
   140036682:	add    BYTE PTR [rax],al
   140036684:	nop
   140036685:	add    ax,WORD PTR [rax]
	...
   140036690:	movabs al,ds:0x366
   140036699:	add    BYTE PTR [rax],al
   14003669b:	add    BYTE PTR [rax],al
   14003669d:	add    BYTE PTR [rax],al
   14003669f:	add    BYTE PTR [rax-0x25],al
   1400366a2:	add    eax,DWORD PTR [rax]
	...
   1400366ac:	(bad)  
   1400366ad:	(bad)  
   1400366ae:	(bad)  
   1400366af:	inc    DWORD PTR [rax]
   1400366b1:	add    BYTE PTR [rax],al
   1400366b3:	add    BYTE PTR [rax+0x0],al
   1400366b6:	add    BYTE PTR [rax],al
   1400366b8:	js     0x140036720
   1400366ba:	add    eax,DWORD PTR [rax]
	...
   1400366c8:	add    DWORD PTR [rax],eax
	...
   1400366d2:	add    BYTE PTR [rax],al
   1400366d4:	(bad)  
   1400366d5:	fild   DWORD PTR [rbx]
   1400366d7:	add    al,dh
   1400366d9:	add    ax,WORD PTR [rax]
   1400366dc:	enter  0x366,0x0
	...
   1400366f8:	add    al,BYTE PTR [rax]
   1400366fa:	add    BYTE PTR [rax],al
   1400366fc:	or     BYTE PTR [rdi+0x3],ah
	...
   140036707:	add    BYTE PTR [rax],ah
   140036709:	add    eax,DWORD PTR [eax]
   14003670c:	movabs al,ds:0x366
	...
   14003671d:	add    BYTE PTR [rax],al
   14003671f:	add    BYTE PTR [rax-0x25],ah
   140036722:	add    eax,DWORD PTR [rax]
   140036724:	add    DWORD PTR [rax],eax
   140036726:	add    BYTE PTR [rax],al
   140036728:	add    BYTE PTR [rax],al
   14003672a:	add    BYTE PTR [rax],al
   14003672c:	(bad)  
   14003672d:	(bad)  
   14003672e:	(bad)  
   14003672f:	inc    DWORD PTR [rax]
   140036731:	add    BYTE PTR [rax],al
   140036733:	add    BYTE PTR [rax+0x0],al
   140036736:	add    BYTE PTR [rax],al
   140036738:	lock add ax,WORD PTR [rax]
	...
   140036748:	add    DWORD PTR [rax],eax
	...
   140036752:	add    BYTE PTR [rax],al
   140036754:	sbb    bl,0x3
   140036757:	add    BYTE PTR [rax+0x67],dh
   14003675a:	add    eax,DWORD PTR [rax]
   14003675c:	rex.W
   14003675d:	add    eax,DWORD PTR [eax]
	...
   140036778:	add    al,BYTE PTR [rax]
   14003677a:	add    BYTE PTR [rax],al
   14003677c:	mov    BYTE PTR [rdi+0x3],ah
	...
   140036787:	add    BYTE PTR [rax-0x5ffffc99],ah
   14003678d:	add    ax,WORD PTR [rax]
	...
   1400367a0:	sbb    bl,0x3
   1400367a3:	add    BYTE PTR [rcx],al
   1400367a5:	add    BYTE PTR [rax],al
   1400367a7:	add    BYTE PTR [rax],al
   1400367a9:	add    BYTE PTR [rax],al
   1400367ab:	add    bh,bh
   1400367ad:	(bad)  
   1400367ae:	(bad)  
   1400367af:	inc    DWORD PTR [rax]
   1400367b1:	add    BYTE PTR [rax],al
   1400367b3:	add    BYTE PTR [rax+0x0],al
   1400367b6:	add    BYTE PTR [rax],al
   1400367b8:	jo     0x140036821
   1400367ba:	add    eax,DWORD PTR [rax]
	...
   1400367c8:	add    DWORD PTR [rax],eax
	...
   1400367d2:	add    BYTE PTR [rax],al
   1400367d4:	movabs al,ds:0xc8000367f00003db
   1400367dd:	add    eax,DWORD PTR [eax]
	...
   1400367f8:	add    al,BYTE PTR [rax]
   1400367fa:	add    BYTE PTR [rax],al
   1400367fc:	or     BYTE PTR [rax+0x3],ch
	...
   140036807:	add    BYTE PTR [rax],ah
   140036809:	push   0x66a00003
   14003680e:	add    eax,DWORD PTR [rax]
	...
   140036820:	movabs al,ds:0x10003db
   140036829:	add    BYTE PTR [rax],al
   14003682b:	add    bh,bh
   14003682d:	(bad)  
   14003682e:	(bad)  
   14003682f:	inc    DWORD PTR [rax]
   140036831:	add    BYTE PTR [rax],al
   140036833:	add    BYTE PTR [rax+0x0],al
   140036836:	add    BYTE PTR [rax],al
   140036838:	lock add eax,DWORD PTR [eax]
	...
   140036848:	add    DWORD PTR [rax],eax
	...
   140036852:	add    BYTE PTR [rax],al
   140036854:	enter  0x3db,0x0
   140036858:	jo     0x1400368c2
   14003685a:	add    eax,DWORD PTR [rax]
   14003685c:	rex.W push 0x3
	...
   140036876:	add    BYTE PTR [rax],al
   140036878:	add    al,BYTE PTR [rax]
   14003687a:	add    BYTE PTR [rax],al
   14003687c:	mov    BYTE PTR [rax+0x3],ch
	...
   140036887:	add    BYTE PTR [rax-0x5ffffc98],ah
   14003688d:	add    ax,WORD PTR [rax]
	...
   1400368a0:	enter  0x3db,0x0
   1400368a4:	add    DWORD PTR [rax],eax
   1400368a6:	add    BYTE PTR [rax],al
   1400368a8:	add    BYTE PTR [rax],al
   1400368aa:	add    BYTE PTR [rax],al
   1400368ac:	(bad)  
   1400368ad:	(bad)  
   1400368ae:	(bad)  
   1400368af:	inc    DWORD PTR [rax]
   1400368b1:	add    BYTE PTR [rax],al
   1400368b3:	add    BYTE PTR [rax+0x0],al
   1400368b6:	add    BYTE PTR [rax],al
   1400368b8:	jo     0x140036922
   1400368ba:	add    eax,DWORD PTR [rax]
	...
   1400368c8:	add    DWORD PTR [rax],eax
	...
   1400368d2:	add    BYTE PTR [rax],al
   1400368d4:	lock fild DWORD PTR [rbx]
   1400368d7:	add    al,dh
   1400368d9:	push   0x68c80003
   1400368de:	add    eax,DWORD PTR [rax]
	...
   1400368f8:	add    al,BYTE PTR [rax]
   1400368fa:	add    BYTE PTR [rax],al
   1400368fc:	or     BYTE PTR [rcx+0x3],ch
	...
   140036907:	add    BYTE PTR [rax],ah
   140036909:	imul   eax,DWORD PTR [rbx],0x366a000
	...
   14003691f:	add    al,dh
   140036921:	fild   DWORD PTR [rbx]
   140036923:	add    BYTE PTR [rcx],al
   140036925:	add    BYTE PTR [rax],al
   140036927:	add    BYTE PTR [rax],al
   140036929:	add    BYTE PTR [rax],al
   14003692b:	add    bh,bh
   14003692d:	(bad)  
   14003692e:	(bad)  
   14003692f:	inc    DWORD PTR [rax]
   140036931:	add    BYTE PTR [rax],al
   140036933:	add    BYTE PTR [rax+0x0],al
   140036936:	add    BYTE PTR [rax],al
   140036938:	lock push 0x3
	...
   14003696e:	add    BYTE PTR [rax],al
   140036970:	adc    DWORD PTR [rdx],edx
   140036972:	add    eax,DWORD PTR [rax]
   140036974:	or     DWORD PTR [rcx],eax
   140036976:	nop
   140036977:	add    BYTE PTR [rdx],al
   140036979:	xor    BYTE PTR [rax],al
   14003697b:	add    BYTE PTR [rax+0x6800006d],dl
   140036981:	(bad)
   140036985:	(bad)  
   140036986:	(bad)  
   140036987:	push   QWORD PTR [rax-0x56]
   14003698a:	add    al,BYTE PTR [rax]
   14003698c:	add    BYTE PTR [rax],al
   14003698e:	add    BYTE PTR [rax],al
   140036990:	movabs al,ds:0x51ffffffff00004c
   140036999:	rex.WRB add BYTE PTR [r8],r8b
   14003699c:	add    BYTE PTR [rax],al
   14003699e:	add    BYTE PTR [rax],al
   1400369a0:	ret    0x4d
   1400369a3:	add    bh,bh
   1400369a5:	(bad)  
   1400369a6:	(bad)  
   1400369a7:	inc    DWORD PTR [rcx]
   1400369a9:	(bad)  
   1400369aa:	add    al,BYTE PTR [rax]
   1400369ac:	(bad)  
   1400369ad:	xor    al,BYTE PTR [rdx]
   1400369af:	xor    BYTE PTR [rcx],al
   1400369b1:	add    al,0x1
   1400369b3:	add    BYTE PTR [rdx+rax*2],al
   1400369b6:	add    BYTE PTR [rax],al
   1400369b8:	add    DWORD PTR [rcx+rax*1],eax
   1400369bb:	add    BYTE PTR [rdx+rax*2],al
   1400369be:	add    BYTE PTR [rax],al
   1400369c0:	add    DWORD PTR [rsi],eax
   1400369c2:	add    al,BYTE PTR [rax]
   1400369c4:	(bad)  
   1400369c5:	xor    al,BYTE PTR [rdx]
   1400369c7:	xor    BYTE PTR [rcx],al
   1400369c9:	(bad)  
   1400369ca:	add    al,BYTE PTR [rax]
   1400369cc:	(bad)  
   1400369cd:	xor    al,BYTE PTR [rdx]
   1400369cf:	xor    BYTE PTR [rcx],al
   1400369d1:	(bad)  
   1400369d2:	add    al,BYTE PTR [rax]
   1400369d4:	(bad)  
   1400369d5:	xor    al,BYTE PTR [rdx]
   1400369d7:	xor    BYTE PTR [rcx],al
   1400369d9:	adc    al,0x8
   1400369db:	add    BYTE PTR [rsp+riz*2],dl
   1400369de:	or     BYTE PTR [rax],al
   1400369e0:	adc    al,0x54
   1400369e2:	(bad)  
   1400369e3:	add    BYTE PTR [rsp+rsi*1],dl
   1400369e6:	(bad)  
   1400369e7:	add    BYTE PTR [rdx+rsi*1],dl
   1400369ea:	adc    BYTE PTR [rax+0x1],dh
   1400369ed:	clts   
   1400369ef:	add    BYTE PTR [rdi],cl
   1400369f1:	fs (bad) 
   1400369f3:	add    BYTE PTR [rdi],cl
   1400369f5:	xor    al,0x6
   1400369f7:	add    BYTE PTR [rdi],cl
   1400369f9:	xor    cl,BYTE PTR [rbx]
   1400369fb:	jo     0x1400369fe
   1400369fd:	add    al,0x1
   1400369ff:	add    BYTE PTR [rdx+rax*2],al
   140036a02:	add    BYTE PTR [rax],al
   140036a04:	add    DWORD PTR [rdx],ecx
   140036a06:	add    al,0x0
   140036a08:	or     dh,BYTE PTR [rsi+rax*1]
   140036a0b:	add    BYTE PTR [rdx],cl
   140036a0d:	xor    al,BYTE PTR [rsi]
   140036a0f:	jo     0x140036a12
   140036a11:	clts   
   140036a13:	add    BYTE PTR [rdi],cl
   140036a15:	fs (bad) 
   140036a17:	add    BYTE PTR [rdi],cl
   140036a19:	xor    al,0x6
   140036a1b:	add    BYTE PTR [rdi],cl
   140036a1d:	xor    cl,BYTE PTR [rbx]
   140036a1f:	jo     0x140036a22
   140036a21:	(bad)  
   140036a22:	add    al,BYTE PTR [rax]
   140036a24:	(bad)  
   140036a25:	xor    al,BYTE PTR [rdx]
   140036a27:	xor    BYTE PTR [rcx],ah
   140036a29:	or     al,BYTE PTR [rax+rax*1]
   140036a2c:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140036a30:	add    eax,0xa0000664
   140036a35:	add    BYTE PTR ds:[rax],al
   140036a38:	mov    ch,0x3e
   140036a3a:	add    BYTE PTR [rax],al
   140036a3c:	and    BYTE PTR [rdx+0x3],ch
   140036a3f:	add    BYTE PTR [rcx],ah
   140036a41:	add    BYTE PTR [rax+rax*1],al
   140036a44:	add    BYTE PTR [rdi+rax*1+0x0],dh
   140036a48:	add    BYTE PTR [rsi+rax*1+0x0],ah
   140036a4c:	movabs al,ds:0x2000003eb500003e
   140036a55:	push   0x3
   140036a57:	add    BYTE PTR [rcx],ah
   140036a59:	add    BYTE PTR [rax],al
   140036a5b:	add    BYTE PTR [rax-0x4affffc2],ah
   140036a61:	add    BYTE PTR ds:[rax],al
   140036a64:	and    BYTE PTR [rdx+0x3],ch
   140036a67:	add    BYTE PTR [rcx],bl
   140036a69:	and    DWORD PTR [rip+0x14621800],eax        # 0x15465826f
   140036a6f:	loopne 0x140036a83
   140036a71:	jo     0x140036a84
   140036a73:	(bad)  
   140036a74:	adc    BYTE PTR [rax],dh
   140036a76:	add    BYTE PTR [rax],al
   140036a78:	nop
   140036a79:	ins    DWORD PTR es:[rdi],dx
   140036a7a:	add    BYTE PTR [rax],al
   140036a7c:	nop
   140036a7d:	(bad)
   140036a81:	(bad)  
   140036a82:	(bad)  
   140036a83:	inc    DWORD PTR [rax]
   140036a85:	add    BYTE PTR [rax],al
   140036a87:	add    bh,bh
   140036a89:	(bad)  
   140036a8a:	(bad)  
   140036a8b:	inc    DWORD PTR [rax]
   140036a8d:	add    BYTE PTR [rax],al
   140036a8f:	add    BYTE PTR [rcx],al
   140036a91:	add    BYTE PTR [rax],al
   140036a93:	add    BYTE PTR [rax],al
   140036a95:	add    BYTE PTR [rax],al
   140036a97:	add    BYTE PTR [rcx],al
	...
   140036aa5:	add    BYTE PTR [rax],al
   140036aa7:	add    BYTE PTR [rbx],al
   140036aa9:	add    BYTE PTR [rax],al
   140036aab:	add    BYTE PTR [rcx],al
   140036aad:	add    BYTE PTR [rax],al
   140036aaf:	add    al,cl
   140036ab1:	push   0x3
   140036ab3:	add    BYTE PTR [rdx],al
   140036ab5:	add    BYTE PTR [rax],al
   140036ab7:	add    BYTE PTR [rdx],al
   140036ab9:	add    BYTE PTR [rax],al
   140036abb:	add    BYTE PTR [rbx],al
   140036abd:	add    BYTE PTR [rax],al
   140036abf:	add    BYTE PTR [rcx],al
   140036ac1:	add    BYTE PTR [rax],al
   140036ac3:	add    ah,bl
   140036ac5:	push   0x3
   140036ac7:	add    BYTE PTR [rax+0x0],al
	...
   140036ad2:	add    BYTE PTR [rax],al
   140036ad4:	sub    BYTE PTR [rcx+0x380002],0x0
   140036adb:	add    BYTE PTR [rax+0x0],al
	...
   140036ae6:	add    BYTE PTR [rax],al
   140036ae8:	ret    
   140036ae9:	test   eax,0x480002
   140036aee:	add    BYTE PTR [rax],al
   140036af0:	shr    BYTE PTR [rbx],0x0
   140036af3:	add    bh,bh
   140036af5:	(bad)  
   140036af6:	(bad)  
   140036af7:	jmp    FWORD PTR [rsi]
   140036af9:	sub    al,0x0
   140036afb:	add    BYTE PTR [rax],al
   140036afd:	add    BYTE PTR [rax],al
   140036aff:	add    BYTE PTR [rbx+0x2c],dl
   140036b02:	add    BYTE PTR [rax],al
   140036b04:	(bad)  
   140036b05:	(bad)  
   140036b06:	(bad)  
   140036b07:	inc    DWORD PTR [rax+0x2a9]
   140036b0d:	add    BYTE PTR [rax],al
   140036b0f:	add    BYTE PTR [rbp+0x10002a9],cl
   140036b15:	add    BYTE PTR [rax],al
   140036b17:	add    BYTE PTR [rbp+0x20002a9],dl
   140036b1d:	add    BYTE PTR [rax],al
   140036b1f:	add    BYTE PTR [rbp+0x2a9],dh
   140036b25:	add    BYTE PTR [rax],al
   140036b27:	add    cl,dl
   140036b29:	test   eax,0x30002
   140036b2e:	add    BYTE PTR [rax],al
   140036b30:	sbb    DWORD PTR [rdx],ecx
   140036b32:	add    al,BYTE PTR [rax]
   140036b34:	or     dh,BYTE PTR [rdx]
   140036b36:	(bad)  
   140036b37:	push   rax
   140036b38:	nop
   140036b39:	ins    DWORD PTR es:[rdi],dx
   140036b3a:	add    BYTE PTR [rax],al
   140036b3c:	nop
   140036b3d:	(bad)
   140036b41:	or     eax,DWORD PTR [rbx]
   140036b43:	add    BYTE PTR [rbx],cl
   140036b45:	rex.X (bad) 
   140036b47:	push   rax
   140036b48:	(bad)  
   140036b49:	xor    BYTE PTR [rax],al
   140036b4b:	add    BYTE PTR [rax-0x6fffff93],dl
   140036b51:	(bad)
   140036b55:	or     al,BYTE PTR [rax+rax*1]
   140036b58:	or     dh,BYTE PTR [rcx+rcx*1]
   140036b5b:	add    BYTE PTR [rdx],cl
   140036b5d:	xor    al,BYTE PTR [rsi]
   140036b5f:	jo     0x140036b82
   140036b61:	add    eax,0x54050002
   140036b66:	(bad)  
   140036b67:	add    BYTE PTR [rax+0x2e],dh
   140036b6a:	add    BYTE PTR [rax],al
   140036b6c:	mov    gs,WORD PTR [rsi]
   140036b6e:	add    BYTE PTR [rax],al
   140036b70:	push   rsp
   140036b71:	imul   eax,DWORD PTR [rbx],0x0
   140036b74:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4086b7c
   140036b7a:	(bad)  
   140036b7b:	add    BYTE PTR [rsi-0x4fffffd2],cl
   140036b81:	add    BYTE PTR cs:[rax],al
   140036b84:	(bad)  
   140036b85:	imul   eax,DWORD PTR [rbx],0x0
   140036b88:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x124086b90
   140036b8e:	or     BYTE PTR [rax],al
   140036b90:	mov    al,0x2e
   140036b92:	add    BYTE PTR [rax],al
   140036b94:	(bad)  
   140036b95:	add    BYTE PTR cs:[rax],al
   140036b98:	je     0x140036c05
   140036b9a:	add    eax,DWORD PTR [rax]
   140036b9c:	and    DWORD PTR [rax],eax
   140036b9e:	add    BYTE PTR [rax],al
   140036ba0:	mov    al,0x2e
   140036ba2:	add    BYTE PTR [rax],al
   140036ba4:	(bad)  
   140036ba5:	add    BYTE PTR cs:[rax],al
   140036ba8:	je     0x140036c15
   140036baa:	add    eax,DWORD PTR [rax]
   140036bac:	and    DWORD PTR [rax],eax
   140036bae:	add    BYTE PTR [rax],al
   140036bb0:	mov    gs,WORD PTR [rsi]
   140036bb2:	add    BYTE PTR [rax],al
   140036bb4:	mov    al,0x2e
   140036bb6:	add    BYTE PTR [rax],al
   140036bb8:	(bad)  
   140036bb9:	imul   eax,DWORD PTR [rbx],0x0
   140036bbc:	and    DWORD PTR [rax],eax
   140036bbe:	add    BYTE PTR [rax],al
   140036bc0:	jo     0x140036bf0
   140036bc2:	add    BYTE PTR [rax],al
   140036bc4:	mov    gs,WORD PTR [rsi]
   140036bc6:	add    BYTE PTR [rax],al
   140036bc8:	push   rsp
   140036bc9:	imul   eax,DWORD PTR [rbx],0x0
   140036bcc:	add    DWORD PTR [rdx],ecx
   140036bce:	add    al,0x0
   140036bd0:	or     dh,BYTE PTR [rdi+rax*1]
   140036bd3:	add    BYTE PTR [rdx],cl
   140036bd5:	xor    al,BYTE PTR [rsi]
   140036bd7:	jo     0x140036bfa
   140036bd9:	add    eax,0x64050002
   140036bde:	(bad)  
   140036bdf:	add    al,al
   140036be1:	xor    eax,0x35db0000
   140036be6:	add    BYTE PTR [rax],al
   140036be8:	int3   
   140036be9:	imul   eax,DWORD PTR [rbx],0x0
   140036bec:	and    DWORD PTR [rax],eax
   140036bee:	add    BYTE PTR [rax],al
   140036bf0:	shl    BYTE PTR [rip+0x35db0000],0x0        # 0x175de6bf7
   140036bf7:	add    ah,cl
   140036bf9:	imul   eax,DWORD PTR [rbx],0x0
   140036bfc:	add    DWORD PTR [rcx+rax*1],eax
   140036bff:	add    BYTE PTR [rdx+rax*2],al
   140036c02:	add    BYTE PTR [rax],al
   140036c04:	add    DWORD PTR [rcx+rax*1],eax
   140036c07:	add    BYTE PTR [rdx+rax*2],al
   140036c0a:	add    BYTE PTR [rax],al
   140036c0c:	add    DWORD PTR [rsi],eax
   140036c0e:	add    al,BYTE PTR [rax]
   140036c10:	(bad)  
   140036c11:	push   rdx
   140036c12:	add    dh,BYTE PTR [rax]
   140036c14:	add    DWORD PTR [rsi],eax
   140036c16:	add    al,BYTE PTR [rax]
   140036c18:	(bad)  
   140036c19:	xor    al,BYTE PTR [rdx]
   140036c1b:	xor    BYTE PTR [rcx],al
   140036c1d:	or     al,BYTE PTR [rax+rax*1]
   140036c20:	or     dh,BYTE PTR [rax+rcx*1]
   140036c23:	add    BYTE PTR [rdx],cl
   140036c25:	push   rdx
   140036c26:	(bad)  
   140036c27:	jo     0x140036c2a
   140036c29:	(bad)  
   140036c2a:	add    al,BYTE PTR [rax]
   140036c2c:	(bad)  
   140036c2d:	xor    al,BYTE PTR [rdx]
   140036c2f:	xor    BYTE PTR [rcx],al
   140036c31:	(bad)  
   140036c32:	add    al,BYTE PTR [rax]
   140036c34:	(bad)  
   140036c35:	push   rdx
   140036c36:	add    dh,BYTE PTR [rax]
   140036c38:	add    DWORD PTR [rsi],eax
   140036c3a:	add    al,BYTE PTR [rax]
   140036c3c:	(bad)  
   140036c3d:	xor    al,BYTE PTR [rdx]
   140036c3f:	xor    BYTE PTR [rcx],al
   140036c41:	or     al,BYTE PTR [rax+rax*1]
   140036c44:	or     dh,BYTE PTR [rax+rcx*1]
   140036c47:	add    BYTE PTR [rdx],cl
   140036c49:	push   rdx
   140036c4a:	(bad)  
   140036c4b:	jo     0x140036c4e
   140036c4d:	or     al,BYTE PTR [rax+rax*1]
   140036c50:	or     dh,BYTE PTR [rsi+rax*1]
   140036c53:	add    BYTE PTR [rdx],cl
   140036c55:	xor    al,BYTE PTR [rsi]
   140036c57:	jo     0x140036c5a
   140036c59:	(bad)  
   140036c5a:	add    al,BYTE PTR [rax]
   140036c5c:	(bad)  
   140036c5d:	xor    al,BYTE PTR [rdx]
   140036c5f:	xor    BYTE PTR [rcx],al
   140036c61:	adc    eax,0x74150008
   140036c66:	or     BYTE PTR [rax],al
   140036c68:	adc    eax,0x15000764
   140036c6d:	xor    al,0x6
   140036c6f:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e37da7
   140036c75:	adc    BYTE PTR [rbx],al
   140036c77:	add    BYTE PTR [rax],dl
   140036c79:	rex.X or al,0x60
   140036c7c:	or     esi,DWORD PTR [rax]
   140036c7e:	add    BYTE PTR [rax],al
   140036c80:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4086c88
   140036c86:	add    al,0x0
   140036c88:	(bad)  
   140036c89:	sub    BYTE PTR [rax],al
   140036c8b:	add    BYTE PTR [rax+0x74000028],dl
   140036c91:	ins    BYTE PTR es:[rdi],dx
   140036c92:	add    eax,DWORD PTR [rax]
   140036c94:	and    DWORD PTR [rax],eax
   140036c96:	add    al,BYTE PTR [rax]
   140036c98:	add    BYTE PTR [rsp+rax*1+0x0],dh
   140036c9c:	(bad)  
   140036c9d:	sub    BYTE PTR [rax],al
   140036c9f:	add    BYTE PTR [rax+0x74000028],dl
   140036ca5:	ins    BYTE PTR es:[rdi],dx
   140036ca6:	add    eax,DWORD PTR [rax]
   140036ca8:	and    DWORD PTR [rax],eax
   140036caa:	add    BYTE PTR [rax],al
   140036cac:	(bad)  
   140036cad:	sub    BYTE PTR [rax],al
   140036caf:	add    BYTE PTR [rax+0x74000028],dl
   140036cb5:	ins    BYTE PTR es:[rdi],dx
   140036cb6:	add    eax,DWORD PTR [rax]
   140036cb8:	add    DWORD PTR [rcx+rax*1],eax
   140036cbb:	add    BYTE PTR [rdx+rax*2],al
   140036cbe:	add    BYTE PTR [rax],al
   140036cc0:	add    DWORD PTR [rcx+rax*1],eax
   140036cc3:	add    BYTE PTR [rdx+rax*2],al
   140036cc6:	add    BYTE PTR [rax],al
   140036cc8:	add    DWORD PTR [rcx+rax*1],eax
   140036ccb:	add    BYTE PTR [rdx+rax*2],al
   140036cce:	add    BYTE PTR [rax],al
   140036cd0:	add    DWORD PTR [rcx+rax*1],eax
   140036cd3:	add    BYTE PTR [rdx+rax*2],al
   140036cd6:	add    BYTE PTR [rax],al
   140036cd8:	add    DWORD PTR [rsi],eax
   140036cda:	add    al,BYTE PTR [rax]
   140036cdc:	(bad)  
   140036cdd:	xor    al,BYTE PTR [rdx]
   140036cdf:	xor    BYTE PTR [rcx],bl
   140036ce1:	adc    al,0x4
   140036ce3:	add    BYTE PTR [rsp+rsi*1],dl
   140036ce6:	or     BYTE PTR [rax],al
   140036ce8:	(bad)  
   140036ce9:	push   rdx
   140036cea:	add    dh,BYTE PTR [rax-0x70]
   140036ced:	ins    DWORD PTR es:[rdi],dx
   140036cee:	add    BYTE PTR [rax],al
   140036cf0:	mov    eax,0xff0002c4
   140036cf5:	(bad)  
   140036cf6:	(bad)  
   140036cf7:	inc    DWORD PTR [rax]
   140036cf9:	add    BYTE PTR [rax],al
   140036cfb:	add    bh,bh
   140036cfd:	(bad)  
   140036cfe:	(bad)  
   140036cff:	inc    DWORD PTR [rax]
	...
   140036d09:	add    BYTE PTR [rax],al
   140036d0b:	add    BYTE PTR [rcx],al
   140036d0d:	add    BYTE PTR [rax],al
   140036d0f:	add    BYTE PTR [rcx],al
   140036d11:	add    BYTE PTR [rax],al
   140036d13:	add    BYTE PTR [rax],bl
   140036d15:	ins    DWORD PTR es:[rdi],dx
   140036d16:	add    eax,DWORD PTR [rax]
   140036d18:	add    BYTE PTR [rax],al
	...
   140036d23:	add    BYTE PTR [rax-0x57],al
   140036d26:	add    al,BYTE PTR [rax]
   140036d28:	cmp    BYTE PTR [rax],al
   140036d2a:	add    BYTE PTR [rax],al
   140036d2c:	add    BYTE PTR [rax],al
   140036d2e:	add    BYTE PTR [rax],al
   140036d30:	loopne 0x140036d5b
   140036d32:	add    BYTE PTR [rax],al
   140036d34:	(bad)  
   140036d35:	(bad)  
   140036d36:	(bad)  
   140036d37:	call   FWORD PTR [rdi]
   140036d39:	sub    al,BYTE PTR [rax]
   140036d3b:	add    BYTE PTR [rax],al
   140036d3d:	add    BYTE PTR [rax],al
   140036d3f:	add    BYTE PTR [rsi],ch
   140036d41:	sub    al,BYTE PTR [rax]
   140036d43:	add    bh,bh
   140036d45:	(bad)  
   140036d46:	(bad)  
   140036d47:	inc    DWORD PTR [rax-0x57]
   140036d4a:	add    al,BYTE PTR [rax]
   140036d4c:	add    BYTE PTR [rax],al
   140036d4e:	add    BYTE PTR [rax],al
   140036d50:	rex.WRB test rax,0x10002
   140036d56:	add    BYTE PTR [rax],al
   140036d58:	sbb    DWORD PTR [rdx],ecx
   140036d5a:	add    al,BYTE PTR [rax]
   140036d5c:	or     dh,BYTE PTR [rdx]
   140036d5e:	(bad)  
   140036d5f:	push   rax
   140036d60:	nop
   140036d61:	ins    DWORD PTR es:[rdi],dx
   140036d62:	add    BYTE PTR [rax],al
   140036d64:	mov    eax,0x10002c4
   140036d69:	(bad)  
   140036d6a:	add    al,BYTE PTR [rax]
   140036d6c:	(bad)  
   140036d6d:	xor    al,BYTE PTR [rdx]
   140036d6f:	xor    BYTE PTR [rcx],al
   140036d71:	(bad)  
   140036d72:	add    al,BYTE PTR [rax]
   140036d74:	(bad)  
   140036d75:	xor    al,BYTE PTR [rdx]
   140036d77:	xor    BYTE PTR [rcx],al
   140036d79:	(bad)  
   140036d7a:	add    al,BYTE PTR [rax]
   140036d7c:	(bad)  
   140036d7d:	xor    al,BYTE PTR [rdx]
   140036d7f:	xor    BYTE PTR [rcx],al
   140036d81:	(bad)  
   140036d82:	add    al,BYTE PTR [rax]
   140036d84:	(bad)  
   140036d85:	xor    al,BYTE PTR [rdx]
   140036d87:	xor    BYTE PTR [rcx],al
   140036d89:	(bad)  
   140036d8b:	add    BYTE PTR [rdi],cl
   140036d8d:	xor    al,0x6
   140036d8f:	add    BYTE PTR [rdi],cl
   140036d91:	xor    cl,BYTE PTR [rbx]
   140036d93:	jo     0x140036d96
   140036d95:	clts   
   140036d97:	add    BYTE PTR [rdi],cl
   140036d99:	push   rsp
   140036d9a:	or     BYTE PTR [rax],al
   140036d9c:	sysenter 
   140036d9e:	(bad)  
   140036d9f:	add    BYTE PTR [rdi],cl
   140036da1:	xor    cl,BYTE PTR [rbx]
   140036da3:	(bad)  
   140036da4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4086dac
   140036daa:	(bad)  
   140036dab:	add    BYTE PTR [rax+0x3d],dh
   140036dae:	add    BYTE PTR [rax],al
   140036db0:	popf   
   140036db1:	cmp    eax,0x6d940000
   140036db6:	add    eax,DWORD PTR [rax]
   140036db8:	and    DWORD PTR [rax],eax
   140036dba:	add    BYTE PTR [rax],al
   140036dbc:	jo     0x140036dfb
   140036dbe:	add    BYTE PTR [rax],al
   140036dc0:	popf   
   140036dc1:	cmp    eax,0x6d940000
   140036dc6:	add    eax,DWORD PTR [rax]
   140036dc8:	add    DWORD PTR [rcx+rax*1],eax
   140036dcb:	add    BYTE PTR [rdx+rax*2],al
   140036dce:	add    BYTE PTR [rax],al
   140036dd0:	adc    DWORD PTR [rip+0x641d0006],ebx        # 0x1a4206ddc
   140036dd6:	or     al,BYTE PTR [rax]
   140036dd8:	sbb    BYTE PTR [rcx+rcx*1],dh
   140036ddb:	add    BYTE PTR [rdx],cl
   140036ddd:	push   rdx
   140036dde:	(bad)  
   140036ddf:	jo     0x140036d71
   140036de1:	ins    DWORD PTR es:[rdi],dx
   140036de2:	add    BYTE PTR [rax],al
   140036de4:	loopne 0x140036daa
   140036de6:	add    al,BYTE PTR [rax]
   140036de8:	(bad)  
   140036de9:	(bad)  
   140036dea:	(bad)  
   140036deb:	call   rax
   140036ded:	test   al,0x2
   140036def:	add    BYTE PTR [rax],al
   140036df1:	add    BYTE PTR [rax],al
   140036df3:	add    ah,bl
   140036df5:	test   al,0x2
   140036df7:	add    BYTE PTR [rax],dh
   140036df9:	sbb    eax,0xffff0000
   140036dfe:	(bad)  
   140036dff:	jmp    FWORD PTR [rcx+0x1d]
   140036e02:	add    BYTE PTR [rax],al
   140036e04:	add    BYTE PTR [rax],al
   140036e06:	add    BYTE PTR [rax],al
   140036e08:	jne    0x140036e27
   140036e0a:	add    BYTE PTR [rax],al
   140036e0c:	add    DWORD PTR [rax],eax
   140036e0e:	add    BYTE PTR [rax],al
   140036e10:	mov    BYTE PTR [rip+0xffffffffffff0000],bl        # 0x140026e16
   140036e16:	(bad)  
   140036e17:	inc    DWORD PTR [rcx]
   140036e19:	(bad)  
   140036e1a:	add    al,BYTE PTR [rax]
   140036e1c:	(bad)  
   140036e1d:	xor    al,BYTE PTR [rdx]
   140036e1f:	xor    BYTE PTR [rcx],al
   140036e21:	(bad)  
   140036e22:	add    al,BYTE PTR [rax]
   140036e24:	(bad)  
   140036e25:	xor    al,BYTE PTR [rdx]
   140036e27:	xor    BYTE PTR [rcx],al
   140036e29:	(bad)  
   140036e2a:	add    al,BYTE PTR [rax]
   140036e2c:	(bad)  
   140036e2d:	push   rdx
   140036e2e:	add    dh,BYTE PTR [rax]
   140036e30:	add    DWORD PTR [rsi],eax
   140036e32:	add    al,BYTE PTR [rax]
   140036e34:	(bad)  
   140036e35:	xor    al,BYTE PTR [rdx]
   140036e37:	xor    BYTE PTR [rcx],bl
   140036e39:	sbb    BYTE PTR [rax+rax*1],al
   140036e3c:	sbb    BYTE PTR [rcx*1+0x6720a00],dh
   140036e43:	jo     0x140036dd5
   140036e45:	ins    DWORD PTR es:[rdi],dx
   140036e46:	add    BYTE PTR [rax],al
   140036e48:	or     ch,al
   140036e4a:	add    al,BYTE PTR [rax]
   140036e4c:	(bad)  
   140036e4d:	(bad)  
   140036e4e:	(bad)  
   140036e4f:	inc    DWORD PTR [rax]
   140036e51:	add    BYTE PTR [rax],al
   140036e53:	add    bh,bh
   140036e55:	(bad)  
   140036e56:	(bad)  
   140036e57:	inc    DWORD PTR [rax]
	...
   140036e61:	add    BYTE PTR [rax],al
   140036e63:	add    BYTE PTR [rcx],al
   140036e65:	add    BYTE PTR [rax],al
   140036e67:	add    BYTE PTR [rcx],al
   140036e69:	add    BYTE PTR [rax],al
   140036e6b:	add    BYTE PTR [rax+0x6e],dh
   140036e6e:	add    eax,DWORD PTR [rax]
   140036e70:	add    BYTE PTR [rax],al
	...
   140036e7b:	add    BYTE PTR [rax-0x57],ah
   140036e7e:	add    al,BYTE PTR [rax]
   140036e80:	rex.W add BYTE PTR [rax],al
   140036e83:	add    BYTE PTR [rax],al
   140036e85:	add    BYTE PTR [rax],al
   140036e87:	add    BYTE PTR [rax],dh
   140036e89:	sub    eax,DWORD PTR [rax]
   140036e8b:	add    bh,bh
   140036e8d:	(bad)  
   140036e8e:	(bad)  
   140036e8f:	jmp    FWORD PTR [rdx+0x2b]
   140036e92:	add    BYTE PTR [rax],al
   140036e94:	add    BYTE PTR [rax],al
   140036e96:	add    BYTE PTR [rax],al
   140036e98:	scas   eax,DWORD PTR es:[rdi]
   140036e99:	sub    eax,DWORD PTR [rax]
   140036e9b:	add    bh,bh
   140036e9d:	(bad)  
   140036e9e:	(bad)  
   140036e9f:	jmp    QWORD PTR [rax-0x57]
   140036ea2:	add    al,BYTE PTR [rax]
   140036ea4:	add    BYTE PTR [rax],al
   140036ea6:	add    BYTE PTR [rax],al
   140036ea8:	ins    DWORD PTR es:[rdi],dx
   140036ea9:	test   eax,0x10002
   140036eae:	add    BYTE PTR [rax],al
   140036eb0:	sbb    DWORD PTR [rdx],ecx
   140036eb2:	add    al,BYTE PTR [rax]
   140036eb4:	or     dl,BYTE PTR [rdx+0x6]
   140036eb7:	push   rax
   140036eb8:	nop
   140036eb9:	ins    DWORD PTR es:[rdi],dx
   140036eba:	add    BYTE PTR [rax],al
   140036ebc:	or     ch,al
   140036ebe:	add    al,BYTE PTR [rax]
   140036ec0:	add    DWORD PTR [rdx],ecx
   140036ec2:	add    al,0x0
   140036ec4:	or     dh,BYTE PTR [rdx+rcx*1]
   140036ec7:	add    BYTE PTR [rdx],cl
   140036ec9:	push   rdx
   140036eca:	(bad)  
   140036ecb:	jo     0x140036ece
   140036ecd:	or     al,BYTE PTR [rax+rax*1]
   140036ed0:	or     dh,BYTE PTR [rcx*1+0x6720a00]
   140036ed7:	(bad)  
   140036ed8:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4086ee0
   140036ede:	or     al,0x0
   140036ee0:	sub    al,BYTE PTR [rax]
   140036ee3:	add    BYTE PTR [rbp-0x33ffffd6],cl
   140036ee9:	outs   dx,BYTE PTR ds:[rsi]
   140036eea:	add    eax,DWORD PTR [rax]
   140036eec:	and    DWORD PTR [rax],eax
   140036eee:	add    BYTE PTR [rax],al
   140036ef0:	sub    al,BYTE PTR [rax]
   140036ef3:	add    BYTE PTR [rbp-0x33ffffd6],cl
   140036ef9:	outs   dx,BYTE PTR ds:[rsi]
   140036efa:	add    eax,DWORD PTR [rax]
   140036efc:	add    DWORD PTR [rsi],eax
   140036efe:	add    al,BYTE PTR [rax]
   140036f00:	(bad)  
   140036f01:	push   rdx
   140036f02:	add    ah,BYTE PTR [rax+0x21]
   140036f05:	or     al,BYTE PTR [rax+rax*1]
   140036f08:	or     dh,BYTE PTR [rcx+rcx*1+0x0]
   140036f0c:	add    eax,0x70000834
   140036f11:	xor    eax,0x35810000
   140036f16:	add    BYTE PTR [rax],al
   140036f18:	cld    
   140036f19:	outs   dx,BYTE PTR ds:[rsi]
   140036f1a:	add    eax,DWORD PTR [rax]
   140036f1c:	and    DWORD PTR [rax],eax
   140036f1e:	add    BYTE PTR [rax],al
   140036f20:	jo     0x140036f57
   140036f22:	add    BYTE PTR [rax],al
   140036f24:	xor    DWORD PTR [rip+0x6efc0000],0x4010003        # 0x1aeff6f2e
   140036f2e:	add    DWORD PTR [rax],eax
   140036f30:	add    al,0x42
   140036f32:	add    BYTE PTR [rax],al
   140036f34:	add    DWORD PTR [rcx+rax*1],eax
   140036f37:	add    BYTE PTR [rdx+rax*2],al
   140036f3a:	add    BYTE PTR [rax],al
   140036f3c:	add    DWORD PTR [rcx+rax*1],eax
   140036f3f:	add    BYTE PTR [rdx+rax*2],al
   140036f42:	add    BYTE PTR [rax],al
   140036f44:	add    DWORD PTR [rsi],eax
   140036f46:	add    al,BYTE PTR [rax]
   140036f48:	(bad)  
   140036f49:	xor    al,BYTE PTR [rdx]
   140036f4b:	xor    BYTE PTR [rcx],al
   140036f4d:	add    al,0x1
   140036f4f:	add    BYTE PTR [rdx+riz*2],al
   140036f52:	add    BYTE PTR [rax],al
   140036f54:	add    DWORD PTR [rsi],eax
   140036f56:	add    al,BYTE PTR [rax]
   140036f58:	(bad)  
   140036f59:	push   rdx
   140036f5a:	add    dh,BYTE PTR [rax]
   140036f5c:	add    DWORD PTR [rsi],eax
   140036f5e:	add    al,BYTE PTR [rax]
   140036f60:	(bad)  
   140036f61:	xor    al,BYTE PTR [rdx]
   140036f63:	xor    BYTE PTR [rcx],bl
   140036f65:	and    cl,BYTE PTR [rax]
   140036f67:	add    BYTE PTR [rcx],bl
   140036f69:	jb     0x140036f80
   140036f6b:	lock adc esp,eax
   140036f6e:	adc    eax,edx
   140036f70:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b637be7
   140036f77:	xor    BYTE PTR [rax+0x3000006d],dl
   140036f7d:	(bad)
   140036f80:	(bad)  
   140036f81:	(bad)  
   140036f82:	(bad)  
   140036f83:	inc    DWORD PTR [rax]
   140036f85:	add    BYTE PTR [rax],al
   140036f87:	add    bh,bh
   140036f89:	(bad)  
   140036f8a:	(bad)  
   140036f8b:	inc    DWORD PTR [rax]
   140036f8d:	add    BYTE PTR [rax],al
   140036f8f:	add    bh,bh
   140036f91:	(bad)  
   140036f92:	(bad)  
   140036f93:	inc    DWORD PTR [rax]
   140036f95:	add    BYTE PTR [rax],al
   140036f97:	add    bh,bh
   140036f99:	(bad)  
   140036f9a:	(bad)  
   140036f9b:	inc    DWORD PTR [rax]
	...
   140036fa5:	add    BYTE PTR [rax],al
   140036fa7:	add    BYTE PTR [rcx],al
   140036fa9:	add    BYTE PTR [rax],al
   140036fab:	add    BYTE PTR [rcx],al
   140036fad:	add    BYTE PTR [rax],al
   140036faf:	add    al,cl
   140036fb1:	outs   dx,DWORD PTR ds:[rsi]
   140036fb2:	add    eax,DWORD PTR [rax]
   140036fb4:	add    al,BYTE PTR [rax]
   140036fb6:	add    BYTE PTR [rax],al
   140036fb8:	add    al,BYTE PTR [rax]
   140036fba:	add    BYTE PTR [rax],al
   140036fbc:	add    eax,DWORD PTR [rax]
   140036fbe:	add    BYTE PTR [rax],al
   140036fc0:	add    DWORD PTR [rax],eax
   140036fc2:	add    BYTE PTR [rax],al
   140036fc4:	fsubr  QWORD PTR [rdi+0x3]
   140036fc7:	add    BYTE PTR [rax+0x0],al
	...
   140036fd2:	add    BYTE PTR [rax],al
   140036fd4:	adc    BYTE PTR [rdx+0x480002],ch
   140036fda:	add    BYTE PTR [rax],al
   140036fdc:	add    BYTE PTR [rax],al
	...
   140036fe7:	add    BYTE PTR [rbx],dh
   140036fe9:	stos   BYTE PTR es:[rdi],al
   140036fea:	add    al,BYTE PTR [rax]
   140036fec:	rex.W add BYTE PTR [rax],al
   140036fef:	add    BYTE PTR [rax],dh
   140036ff1:	xor    DWORD PTR [rax],eax
   140036ff3:	add    bh,bh
   140036ff5:	(bad)  
   140036ff6:	(bad)  
   140036ff7:	jmp    FWORD PTR [rdx+rsi*1]
   140036ffa:	add    BYTE PTR [rax],al
   140036ffc:	add    BYTE PTR [rax],al
   140036ffe:	add    BYTE PTR [rax],al
   140037000:	mov    eax,0xff000032
   140037005:	(bad)  
   140037006:	(bad)  
   140037007:	dec    DWORD PTR [rax+0x33]
   14003700a:	add    BYTE PTR [rax],al
   14003700c:	add    al,BYTE PTR [rax]
   14003700e:	add    BYTE PTR [rax],al
   140037010:	mov    BYTE PTR [rbx],dh
   140037012:	add    BYTE PTR [rax],al
   140037014:	(bad)  
   140037015:	(bad)  
   140037016:	(bad)  
   140037017:	call   QWORD PTR [rax]
   140037019:	stos   BYTE PTR es:[rdi],al
   14003701a:	add    al,BYTE PTR [rax]
   14003701c:	add    BYTE PTR [rax],al
   14003701e:	add    BYTE PTR [rax],al
   140037020:	sbb    eax,0x10002aa
   140037025:	add    BYTE PTR [rax],al
   140037027:	add    BYTE PTR [rbx],dh
   140037029:	stos   BYTE PTR es:[rdi],al
   14003702a:	add    al,BYTE PTR [rax]
   14003702c:	add    BYTE PTR [rax],al
   14003702e:	add    BYTE PTR [rax],al
   140037030:	stos   BYTE PTR es:[rdi],al
   140037032:	add    al,BYTE PTR [rax]
   140037034:	add    eax,DWORD PTR [rax]
   140037036:	add    BYTE PTR [rax],al
   140037038:	sbb    DWORD PTR [rdx],ecx
   14003703a:	add    al,BYTE PTR [rax]
   14003703c:	or     dl,BYTE PTR [rdx+0x6]
   14003703f:	push   rax
   140037040:	nop
   140037041:	ins    DWORD PTR es:[rdi],dx
   140037042:	add    BYTE PTR [rax],al
   140037044:	xor    ch,al
   140037046:	add    al,BYTE PTR [rax]
   140037048:	sbb    DWORD PTR [rdx],ecx
   14003704a:	add    al,BYTE PTR [rax]
   14003704c:	or     dl,BYTE PTR [rdx+0x6]
   14003704f:	push   rax
   140037050:	nop
   140037051:	ins    DWORD PTR es:[rdi],dx
   140037052:	add    BYTE PTR [rax],al
   140037054:	xor    ch,al
   140037056:	add    al,BYTE PTR [rax]
   140037058:	add    DWORD PTR [rdx],ecx
   14003705a:	add    al,0x0
   14003705c:	or     dh,BYTE PTR [rax+rcx*1]
   14003705f:	add    BYTE PTR [rdx],cl
   140037061:	push   rdx
   140037062:	(bad)  
   140037063:	jo     0x140037066
   140037065:	add    al,0x1
   140037067:	add    BYTE PTR [rdx+rax*2],al
   14003706a:	add    BYTE PTR [rax],al
   14003706c:	adc    DWORD PTR [rip+0x641d0006],ebx        # 0x1a4207078
   140037072:	or     al,BYTE PTR [rax]
   140037074:	sbb    BYTE PTR [rcx+rcx*1],dh
   140037077:	add    BYTE PTR [rdx],cl
   140037079:	push   rdx
   14003707a:	(bad)  
   14003707b:	jo     0x14003700d
   14003707d:	ins    DWORD PTR es:[rdi],dx
   14003707e:	add    BYTE PTR [rax],al
   140037080:	pop    rax
   140037081:	(bad)
   140037084:	(bad)  
   140037085:	(bad)  
   140037086:	(bad)  
   140037087:	inc    DWORD PTR [rax]
   140037089:	test   eax,0x2
   14003708e:	add    BYTE PTR [rax],al
   140037090:	or     al,0xa9
   140037092:	add    al,BYTE PTR [rax]
   140037094:	add    BYTE PTR [rax],al
   140037096:	add    BYTE PTR [rax],al
   140037098:	adc    BYTE PTR [rcx],ah
   14003709a:	add    BYTE PTR [rax],al
   14003709c:	(bad)  
   14003709d:	(bad)  
   14003709e:	(bad)  
   14003709f:	dec    DWORD PTR [rcx+0x21]
   1400370a2:	add    BYTE PTR [rax],al
   1400370a4:	add    BYTE PTR [rax],al
   1400370a6:	add    BYTE PTR [rax],al
   1400370a8:	push   rbp
   1400370a9:	and    DWORD PTR [rax],eax
   1400370ab:	add    BYTE PTR [rcx],al
   1400370ad:	add    BYTE PTR [rax],al
   1400370af:	add    BYTE PTR [rax+0x21],ch
   1400370b2:	add    BYTE PTR [rax],al
   1400370b4:	(bad)  
   1400370b5:	(bad)  
   1400370b6:	(bad)  
   1400370b7:	inc    DWORD PTR [rcx]
   1400370b9:	(bad)  
   1400370ba:	add    al,BYTE PTR [rax]
   1400370bc:	(bad)  
   1400370bd:	xor    al,BYTE PTR [rdx]
   1400370bf:	xor    BYTE PTR [rcx],al
   1400370c1:	(bad)  
   1400370c2:	add    al,BYTE PTR [rax]
   1400370c4:	(bad)  
   1400370c5:	xor    al,BYTE PTR [rdx]
   1400370c7:	xor    BYTE PTR [rcx],dl
   1400370c9:	sbb    DWORD PTR [rsi],eax
   1400370cb:	add    BYTE PTR [rcx],bl
   1400370cd:	or     al,BYTE PTR fs:[rax]
   1400370d0:	adc    al,0x34
   1400370d2:	or     DWORD PTR [rax],eax
   1400370d4:	(bad)  
   1400370d5:	push   rdx
   1400370d6:	add    dh,BYTE PTR [rax-0x70]
   1400370d9:	ins    DWORD PTR es:[rdi],dx
   1400370da:	add    BYTE PTR [rax],al
   1400370dc:	add    ch,0x2
   1400370df:	add    bh,bh
   1400370e1:	(bad)  
   1400370e2:	(bad)  
   1400370e3:	jmp    QWORD PTR [rax]
   1400370e5:	test   eax,0x2
   1400370ea:	add    BYTE PTR [rax],al
   1400370ec:	sub    al,0xa9
   1400370ee:	add    al,BYTE PTR [rax]
   1400370f0:	movabs al,ds:0xdaffffffff000021
   1400370f9:	and    DWORD PTR [rax],eax
   1400370fb:	add    BYTE PTR [rax],al
   1400370fd:	add    BYTE PTR [rax],al
   1400370ff:	add    dh,ah
   140037101:	and    DWORD PTR [rax],eax
   140037103:	add    BYTE PTR [rcx],al
   140037105:	add    BYTE PTR [rax],al
   140037107:	add    cl,bh
   140037109:	and    DWORD PTR [rax],eax
   14003710b:	add    bh,bh
   14003710d:	(bad)  
   14003710e:	(bad)  
   14003710f:	inc    DWORD PTR [rcx]
   140037111:	or     al,BYTE PTR [rax+rax*1]
   140037114:	or     dh,BYTE PTR [rsi+rax*1]
   140037117:	add    BYTE PTR [rdx],cl
   140037119:	xor    al,BYTE PTR [rsi]
   14003711b:	jo     0x14003711e
   14003711d:	adc    eax,DWORD PTR [rip+0x60341300]        # 0x1a0378423
   140037123:	and    BYTE PTR [rbx],dl
   140037125:	add    DWORD PTR [rsi+0x20],ebx
   140037128:	(bad)  
   140037129:	jo     0x14003712b
   14003712b:	add    BYTE PTR [rcx],al
   14003712d:	adc    eax,DWORD PTR [rip+0x60341300]        # 0x1a0378433
   140037133:	and    BYTE PTR [rbx],dl
   140037135:	add    DWORD PTR [rsi+0x20],ebx
   140037138:	(bad)  
   140037139:	jo     0x14003713b
   14003713b:	add    BYTE PTR [rcx],al
   14003713d:	lsl    eax,WORD PTR [rax]
   140037140:	sgdt   [rsi]
   140037143:	add    sil,BYTE PTR [rax]
   140037146:	add    BYTE PTR [rax],al
   140037148:	adc    DWORD PTR [rdx],edx
   14003714a:	add    eax,DWORD PTR [rax]
   14003714c:	or     DWORD PTR [rcx],eax
   14003714e:	adc    al,BYTE PTR [rax]
   140037150:	add    dh,BYTE PTR [rax]
   140037152:	add    BYTE PTR [rax],al
   140037154:	nop
   140037155:	ins    DWORD PTR es:[rdi],dx
   140037156:	add    BYTE PTR [rax],al
   140037158:	test   al,0xc5
   14003715a:	add    al,BYTE PTR [rax]
   14003715c:	(bad)  
   14003715d:	(bad)  
   14003715e:	(bad)  
   14003715f:	call   QWORD PTR [rax-0x56]
   140037162:	add    al,BYTE PTR [rax]
   140037164:	add    BYTE PTR [rax],al
   140037166:	add    BYTE PTR [rax],al
   140037168:	pop    rsp
   140037169:	stos   BYTE PTR es:[rdi],al
   14003716a:	add    al,BYTE PTR [rax]
   14003716c:	add    BYTE PTR [rax],al
   14003716e:	add    BYTE PTR [rax],al
   140037170:	and    BYTE PTR [rbx+0x0],cl
   140037173:	add    bh,bh
   140037175:	(bad)  
   140037176:	(bad)  
   140037177:	call   FWORD PTR [rbx+0x4b]
   14003717d:	add    BYTE PTR [rax],al
   14003717f:	add    BYTE PTR [rcx+0x100004b],dh
   140037185:	add    BYTE PTR [rax],al
   140037187:	add    BYTE PTR [rdi],dl
   140037189:	rex.WR add BYTE PTR [rax],r8b
   14003718c:	add    BYTE PTR [rax],al
   14003718e:	add    BYTE PTR [rax],al
   140037190:	cmp    al,0x4c
   140037192:	add    BYTE PTR [rax],al
   140037194:	(bad)  
   140037195:	(bad)  
   140037196:	(bad)  
   140037197:	inc    DWORD PTR [rcx]
   140037199:	(bad)  
   14003719a:	or     DWORD PTR [rax],eax
   14003719c:	(bad)  
   14003719d:	sbb    al,BYTE PTR fs:[rax]
   1400371a0:	(bad)  
   1400371a1:	push   rsp
   1400371a2:	sbb    DWORD PTR [rax],eax
   1400371a4:	(bad)  
   1400371a5:	xor    al,0x18
   1400371a7:	add    BYTE PTR [rdi],dl
   1400371a9:	add    DWORD PTR [rsi],edx
   1400371ab:	add    BYTE PTR [rax],dl
   1400371ad:	jo     0x1400371af
   1400371af:	add    BYTE PTR [rcx],al
   1400371b1:	sbb    BYTE PTR [rdx],al
   1400371b3:	add    BYTE PTR [rax],bl
   1400371b5:	push   rdx
   1400371b6:	adc    al,0x30
   1400371b8:	and    DWORD PTR [rip+0x740d0004],ecx        # 0x1b41071c2
   1400371be:	or     eax,DWORD PTR [rax]
   1400371c0:	add    eax,0x70000864
   1400371c5:	sbb    al,0x0
   1400371c7:	add    BYTE PTR [rax-0x4fffffe4],cl
   1400371cd:	jno    0x1400371d2
   1400371cf:	add    BYTE PTR [rcx],ah
   1400371d1:	add    BYTE PTR [rax],al
   1400371d3:	add    BYTE PTR [rax+0x1c],dh
   1400371d6:	add    BYTE PTR [rax],al
   1400371d8:	mov    BYTE PTR [rax+rax*1],bl
   1400371db:	add    BYTE PTR [rax+0x21000371],dh
   1400371e1:	add    BYTE PTR [rax+rax*1],al
   1400371e4:	add    BYTE PTR [rbx+rcx*1+0x0],dh
   1400371e8:	add    BYTE PTR [rax+rcx*1+0x0],ah
   1400371ec:	jo     0x14003720a
   1400371ee:	add    BYTE PTR [rax],al
   1400371f0:	mov    BYTE PTR [rax+rax*1],bl
   1400371f3:	add    BYTE PTR [rax+0x1000371],dh
   1400371f9:	(bad)  
   1400371fa:	add    al,BYTE PTR [rax]
   1400371fc:	(bad)  
   1400371fd:	xor    al,BYTE PTR [rdx]
   1400371ff:	xor    BYTE PTR [rcx],dl
   140037201:	sbb    BYTE PTR [rax+rax*1],al
   140037204:	sbb    BYTE PTR [rcx+rcx*1],dh
   140037207:	add    BYTE PTR [rdx],cl
   140037209:	push   rdx
   14003720a:	(bad)  
   14003720b:	jo     0x14003719d
   14003720d:	ins    DWORD PTR es:[rdi],dx
   14003720e:	add    BYTE PTR [rax],al
   140037210:	rol    ch,1
   140037212:	add    al,BYTE PTR [rax]
   140037214:	(bad)  
   140037215:	(bad)  
   140037216:	(bad)  
   140037217:	push   rax
   140037219:	test   al,0x2
   14003721b:	add    BYTE PTR [rax],al
   14003721d:	add    BYTE PTR [rax],al
   14003721f:	add    BYTE PTR [rax-0xffffe0],dl
   140037225:	(bad)  
   140037226:	(bad)  
   140037227:	dec    esi
   140037229:	and    BYTE PTR [rax],al
   14003722b:	add    BYTE PTR [rax],al
   14003722d:	add    BYTE PTR [rax],al
   14003722f:	add    dh,dh
   140037231:	and    BYTE PTR [rax],al
   140037233:	add    bh,bh
   140037235:	(bad)  
   140037236:	(bad)  
   140037237:	inc    DWORD PTR [rcx]
   140037239:	or     al,BYTE PTR [rax+rax*1]
   14003723c:	or     dh,BYTE PTR [rsi+rax*1]
   14003723f:	add    BYTE PTR [rdx],cl
   140037241:	xor    al,BYTE PTR [rsi]
   140037243:	jo     0x140037246
   140037245:	(bad)  
   140037246:	add    al,BYTE PTR [rax]
   140037248:	(bad)  
   140037249:	xor    al,BYTE PTR [rdx]
   14003724b:	xor    BYTE PTR [rcx],al
   14003724d:	add    al,0x1
   14003724f:	add    BYTE PTR [rdx+rax*2],al
   140037252:	add    BYTE PTR [rax],al
   140037254:	add    DWORD PTR [rsi],eax
   140037256:	add    al,BYTE PTR [rax]
   140037258:	(bad)  
   140037259:	push   rdx
   14003725a:	add    dh,BYTE PTR [rax]
   14003725c:	add    DWORD PTR [rcx+rax*1],eax
   14003725f:	add    BYTE PTR [rdx+rax*4],al
   140037262:	add    BYTE PTR [rax],al
   140037264:	add    DWORD PTR [rcx+rax*1],eax
   140037267:	add    BYTE PTR [rdx+rax*2],al
   14003726a:	add    BYTE PTR [rax],al
   14003726c:	add    DWORD PTR [rcx+rax*1],eax
   14003726f:	add    BYTE PTR [rdx+rax*2],al
   140037272:	add    BYTE PTR [rax],al
   140037274:	add    DWORD PTR [rdi],ecx
   140037276:	(bad)  
   140037277:	add    BYTE PTR [rdi],cl
   140037279:	fs (bad) 
   14003727b:	add    BYTE PTR [rdi],cl
   14003727d:	xor    al,0x6
   14003727f:	add    BYTE PTR [rdi],cl
   140037281:	xor    cl,BYTE PTR [rbx]
   140037283:	jo     0x140037286
   140037285:	(bad)  
   140037286:	add    al,BYTE PTR [rax]
   140037288:	(bad)  
   140037289:	xor    al,BYTE PTR [rdx]
   14003728b:	xor    BYTE PTR [rcx],al
   14003728d:	add    al,0x1
   14003728f:	add    BYTE PTR [rdx+riz*2],al
   140037292:	add    BYTE PTR [rax],al
   140037294:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a207729b
   14003729a:	add    BYTE PTR [rax],al
   14003729c:	nop
   14003729d:	ins    DWORD PTR es:[rdi],dx
   14003729e:	add    BYTE PTR [rax],al
   1400372a0:	clc    
   1400372a1:	(bad)
   1400372a4:	(bad)  
   1400372a5:	(bad)  
   1400372a6:	(bad)  
   1400372a7:	inc    DWORD PTR [rax]
   1400372a9:	add    BYTE PTR [rax],al
   1400372ab:	add    bh,bh
   1400372ad:	(bad)  
   1400372ae:	(bad)  
   1400372af:	inc    DWORD PTR [rax]
	...
   1400372b9:	add    BYTE PTR [rax],al
   1400372bb:	add    BYTE PTR [rcx],al
   1400372bd:	add    BYTE PTR [rax],al
   1400372bf:	add    BYTE PTR [rcx],al
   1400372c1:	add    BYTE PTR [rax],al
   1400372c3:	add    al,cl
   1400372c5:	jb     0x1400372ca
   1400372c7:	add    BYTE PTR [rax+0x0],al
	...
   1400372d2:	add    BYTE PTR [rax],al
   1400372d4:	xor    BYTE PTR [rax+0x380002],ch
   1400372da:	add    BYTE PTR [rax],al
   1400372dc:	add    BYTE PTR [rax],al
   1400372de:	add    BYTE PTR [rax],al
   1400372e0:	and    BYTE PTR [rsi],dl
   1400372e2:	add    BYTE PTR [rax],al
   1400372e4:	(bad)  
   1400372e5:	(bad)  
   1400372e6:	(bad)  
   1400372e7:	jmp    FWORD PTR [rip+0x16]        # 0x140037303
   1400372ed:	add    BYTE PTR [rax],al
   1400372ef:	add    BYTE PTR [rsi+0x16],al
   1400372f2:	add    BYTE PTR [rax],al
   1400372f4:	(bad)  
   1400372f5:	(bad)  
   1400372f6:	(bad)  
   1400372f7:	push   QWORD PTR [rax]
   1400372f9:	test   al,0x2
   1400372fb:	add    BYTE PTR [rax],al
   1400372fd:	add    BYTE PTR [rax],al
   1400372ff:	add    BYTE PTR [rip+0x10002a8],bh        # 0x1410375ad
   140037305:	add    BYTE PTR [rax],al
   140037307:	add    BYTE PTR [rcx],bl
   140037309:	or     al,BYTE PTR [rdx]
   14003730b:	add    BYTE PTR [rdx],cl
   14003730d:	xor    al,BYTE PTR [rsi]
   14003730f:	push   rax
   140037310:	nop
   140037311:	ins    DWORD PTR es:[rdi],dx
   140037312:	add    BYTE PTR [rax],al
   140037314:	clc    
   140037315:	(bad)
   140037318:	add    DWORD PTR [rdx],ecx
   14003731a:	add    al,0x0
   14003731c:	or     dh,BYTE PTR [rsi+rax*1]
   14003731f:	add    BYTE PTR [rdx],cl
   140037321:	xor    al,BYTE PTR [rsi]
   140037323:	jo     0x14003733e
   140037325:	(bad)  
   140037326:	or     BYTE PTR [rax],al
   140037328:	(bad)  
   140037329:	push   rdx
   14003732a:	sbb    dh,al
   14003732c:	sbb    al,ah
   14003732e:	(bad)  
   14003732f:	rcl    BYTE PTR [rax+rax*8],1
   140037332:	adc    dh,BYTE PTR [rax+0x11]
   140037335:	(bad)  
   140037336:	adc    BYTE PTR [rax],dh
   140037338:	nop
   140037339:	ins    DWORD PTR es:[rdi],dx
   14003733a:	add    BYTE PTR [rax],al
   14003733c:	and    dh,al
   14003733e:	add    al,BYTE PTR [rax]
   140037340:	(bad)  
   140037341:	(bad)  
   140037342:	(bad)  
   140037343:	inc    DWORD PTR [rax]
   140037345:	add    BYTE PTR [rax],al
   140037347:	add    bh,bh
   140037349:	(bad)  
   14003734a:	(bad)  
   14003734b:	inc    DWORD PTR [rax]
	...
   140037355:	add    BYTE PTR [rax],al
   140037357:	add    BYTE PTR [rcx],al
   140037359:	add    BYTE PTR [rax],al
   14003735b:	add    BYTE PTR [rcx],al
   14003735d:	add    BYTE PTR [rax],al
   14003735f:	add    BYTE PTR [rbx+rsi*2+0x3],ah
   140037363:	add    BYTE PTR [rax+0x0],al
	...
   14003736e:	add    BYTE PTR [rax],al
   140037370:	add    BYTE PTR [rax+0x380002],ch
   140037376:	add    BYTE PTR [rax],al
   140037378:	add    BYTE PTR [rbx],dl
   14003737a:	add    BYTE PTR [rax],al
   14003737c:	(bad)  
   14003737d:	(bad)  
   14003737e:	(bad)  
   14003737f:	push   QWORD PTR [rbx]
   140037381:	adc    eax,DWORD PTR [rax]
   140037383:	add    BYTE PTR [rax],al
   140037385:	add    BYTE PTR [rax],al
   140037387:	add    BYTE PTR [rdi-0xffffec],dl
   14003738d:	(bad)  
   14003738e:	(bad)  
   14003738f:	jmp    FWORD PTR [rax]
   140037391:	adc    eax,0x0
   140037396:	add    BYTE PTR [rax],al
   140037398:	or     eax,0x10002a8
   14003739d:	add    BYTE PTR [rax],al
   14003739f:	add    BYTE PTR [rcx],bl
   1400373a1:	or     al,BYTE PTR [rdx]
   1400373a3:	add    BYTE PTR [rdx],cl
   1400373a5:	xor    al,BYTE PTR [rsi]
   1400373a7:	push   rax
   1400373a8:	nop
   1400373a9:	ins    DWORD PTR es:[rdi],dx
   1400373aa:	add    BYTE PTR [rax],al
   1400373ac:	and    dh,al
   1400373ae:	add    al,BYTE PTR [rax]
   1400373b0:	add    DWORD PTR [rsi],eax
   1400373b2:	add    al,BYTE PTR [rax]
   1400373b4:	(bad)  
   1400373b5:	xor    al,BYTE PTR [rdx]
   1400373b7:	xor    BYTE PTR [rcx],al
   1400373b9:	add    al,0x1
   1400373bb:	add    BYTE PTR [rdx+rax*4],al
   1400373be:	add    BYTE PTR [rax],al
   1400373c0:	add    DWORD PTR [rdx],ecx
   1400373c2:	add    al,0x0
   1400373c4:	or     dh,BYTE PTR [rsi+rax*1]
   1400373c7:	add    BYTE PTR [rdx],cl
   1400373c9:	xor    al,BYTE PTR [rsi]
   1400373cb:	jo     0x1400373e6
   1400373cd:	or     eax,0x62040001
   1400373d2:	add    BYTE PTR [rax],al
   1400373d4:	nop
   1400373d5:	ins    DWORD PTR es:[rdi],dx
   1400373d6:	add    BYTE PTR [rax],al
   1400373d8:	rex.W mov BYTE PTR [rdx],0x0
   1400373dc:	(bad)  
   1400373dd:	(bad)  
   1400373de:	(bad)  
   1400373df:	inc    DWORD PTR [rax]
   1400373e1:	add    BYTE PTR [rax],al
   1400373e3:	add    bh,bh
   1400373e5:	(bad)  
   1400373e6:	(bad)  
   1400373e7:	inc    DWORD PTR [rax]
	...
   1400373f1:	add    BYTE PTR [rax],al
   1400373f3:	add    BYTE PTR [rcx],al
   1400373f5:	add    BYTE PTR [rax],al
   1400373f7:	add    BYTE PTR [rcx],al
   1400373f9:	add    BYTE PTR [rax],al
   1400373fb:	add    BYTE PTR [rax],al
   1400373fd:	je     0x140037402
   1400373ff:	add    BYTE PTR [rax+0x0],al
	...
   14003740a:	add    BYTE PTR [rax],al
   14003740c:	push   rax
   14003740d:	test   al,0x2
   14003740f:	add    BYTE PTR [rax],bh
   140037411:	add    BYTE PTR [rax],al
   140037413:	add    BYTE PTR [rax],al
   140037415:	add    BYTE PTR [rax],al
   140037417:	add    BYTE PTR [rax+0x16],dh
   14003741a:	add    BYTE PTR [rax],al
   14003741c:	(bad)  
   14003741d:	(bad)  
   14003741e:	(bad)  
   14003741f:	(bad)  
   140037420:	jge    0x140037438
   140037422:	add    BYTE PTR [rax],al
   140037424:	add    BYTE PTR [rax],al
   140037426:	add    BYTE PTR [rax],al
   140037428:	mov    eax,0xff000016
   14003742d:	(bad)  
   14003742e:	(bad)  
   14003742f:	call   QWORD PTR [rax-0x58]
   140037432:	add    al,BYTE PTR [rax]
   140037434:	add    BYTE PTR [rax],al
   140037436:	add    BYTE PTR [rax],al
   140037438:	pop    rbp
   140037439:	test   al,0x2
   14003743b:	add    BYTE PTR [rcx],al
   14003743d:	add    BYTE PTR [rax],al
   14003743f:	add    BYTE PTR [rcx],bl
   140037441:	or     al,BYTE PTR [rdx]
   140037443:	add    BYTE PTR [rdx],cl
   140037445:	xor    al,BYTE PTR [rsi]
   140037447:	push   rax
   140037448:	nop
   140037449:	ins    DWORD PTR es:[rdi],dx
   14003744a:	add    BYTE PTR [rax],al
   14003744c:	rex.W mov BYTE PTR [rdx],0x0
   140037450:	add    DWORD PTR [rcx+rax*1],eax
   140037453:	add    BYTE PTR [rdx+rax*2],al
   140037456:	add    BYTE PTR [rax],al
   140037458:	sbb    DWORD PTR [rsp+rax*1],edx
   14003745b:	add    BYTE PTR [rsp+rsi*1],dl
   14003745e:	or     al,BYTE PTR [rax]
   140037460:	(bad)  
   140037461:	jb     0x140037465
   140037463:	jo     0x1400373f5
   140037465:	ins    DWORD PTR es:[rdi],dx
   140037466:	add    BYTE PTR [rax],al
   140037468:	jo     0x140037430
   14003746a:	add    al,BYTE PTR [rax]
   14003746c:	(bad)  
   14003746d:	(bad)  
   14003746e:	(bad)  
   14003746f:	inc    DWORD PTR [rax]
   140037471:	add    BYTE PTR [rax],al
   140037473:	add    BYTE PTR [rax],al
   140037475:	add    BYTE PTR [rax],al
   140037477:	add    al,al
   140037479:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003747a:	add    al,BYTE PTR [rax]
   14003747c:	(bad)  
   14003747d:	(bad)  
   14003747e:	(bad)  
   14003747f:	inc    DWORD PTR [rax]
   140037481:	add    BYTE PTR [rax],al
   140037483:	add    BYTE PTR [rax],al
   140037485:	add    BYTE PTR [rax],al
   140037487:	add    BYTE PTR [rcx],al
   140037489:	add    BYTE PTR [rax],al
   14003748b:	add    BYTE PTR [rdx],al
   14003748d:	add    BYTE PTR [rax],al
   14003748f:	add    BYTE PTR [rcx],al
   140037491:	add    BYTE PTR [rax],al
   140037493:	add    BYTE PTR [rax+0x40000374],bl
	...
   1400374a1:	add    BYTE PTR [rax],al
   1400374a3:	add    ah,bl
   1400374a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400374a6:	add    al,BYTE PTR [rax]
   1400374a8:	cmp    BYTE PTR [rax],al
   1400374aa:	add    BYTE PTR [rax],al
   1400374ac:	add    BYTE PTR [rax],al
   1400374ae:	add    BYTE PTR [rax],al
   1400374b0:	movabs al,ds:0xc4ffffffff000011
   1400374b9:	adc    DWORD PTR [rax],eax
   1400374bb:	add    BYTE PTR [rax],al
   1400374bd:	add    BYTE PTR [rax],al
   1400374bf:	add    dl,dl
   1400374c1:	adc    DWORD PTR [rax],eax
   1400374c3:	add    BYTE PTR [rcx],al
   1400374c5:	add    BYTE PTR [rax],al
   1400374c7:	add    al,ah
   1400374c9:	adc    DWORD PTR [rax],eax
   1400374cb:	add    bh,bh
   1400374cd:	(bad)  
   1400374ce:	(bad)  
   1400374cf:	(bad)  
   1400374d0:	fsub   QWORD PTR [rdi+0x2]
   1400374d6:	add    BYTE PTR [rax],al
   1400374d8:	jmp    0x142037784
   1400374dd:	add    BYTE PTR [rax],al
   1400374df:	add    BYTE PTR [rcx],al
   1400374e1:	(bad)  
   1400374e2:	add    al,BYTE PTR [rax]
   1400374e4:	(bad)  
   1400374e5:	xor    al,BYTE PTR [rdx]
   1400374e7:	push   rax
   1400374e8:	sbb    DWORD PTR [rdx],ecx
   1400374ea:	add    al,BYTE PTR [rax]
   1400374ec:	or     dh,BYTE PTR [rdx]
   1400374ee:	(bad)  
   1400374ef:	push   rax
   1400374f0:	nop
   1400374f1:	ins    DWORD PTR es:[rdi],dx
   1400374f2:	add    BYTE PTR [rax],al
   1400374f4:	jo     0x1400374bc
   1400374f6:	add    al,BYTE PTR [rax]
   1400374f8:	adc    DWORD PTR [rdx],edx
   1400374fa:	add    DWORD PTR [rax],eax
   1400374fc:	or     DWORD PTR [rdx+0x0],esp
   1400374ff:	add    BYTE PTR [rax-0x67ffff93],dl
   140037505:	mov    BYTE PTR [rdx],0x0
   140037508:	(bad)  
   140037509:	(bad)  
   14003750a:	(bad)  
   14003750b:	push   QWORD PTR [rax-0x58]
   14003750e:	add    al,BYTE PTR [rax]
   140037510:	rcl    BYTE PTR [rdi],0x0
   140037513:	add    bh,bh
   140037515:	(bad)  
   140037516:	(bad)  
   140037517:	(bad)  
   140037518:	ficom  DWORD PTR [rdi]
   14003751a:	add    BYTE PTR [rax],al
   14003751c:	add    BYTE PTR [rax],al
   14003751e:	add    BYTE PTR [rax],al
   140037520:	jmp    0x140037539
   140037522:	add    BYTE PTR [rax],al
   140037524:	(bad)  
   140037525:	(bad)  
   140037526:	(bad)  
   140037527:	inc    DWORD PTR [rcx]
   140037529:	(bad)  
   14003752a:	add    al,BYTE PTR [rax]
   14003752c:	(bad)  
   14003752d:	xor    al,BYTE PTR [rdx]
   14003752f:	push   rax
   140037530:	adc    DWORD PTR [rdx],edx
   140037532:	add    DWORD PTR [rax],eax
   140037534:	or     DWORD PTR [rdx+0x0],esp
   140037537:	add    BYTE PTR [rax-0x3fffff93],dl
   14003753d:	mov    BYTE PTR [rdx],0x0
   140037540:	(bad)  
   140037541:	(bad)  
   140037542:	(bad)  
   140037543:	push   QWORD PTR [rax+0x200002a8]
   140037549:	sbb    BYTE PTR [rax],al
   14003754b:	add    bh,bh
   14003754d:	(bad)  
   14003754e:	(bad)  
   14003754f:	(bad)  
   140037550:	cmp    bl,BYTE PTR [rax]
   140037552:	add    BYTE PTR [rax],al
   140037554:	add    BYTE PTR [rax],al
   140037556:	add    BYTE PTR [rax],al
   140037558:	rex.WXB sbb BYTE PTR [r8],al
   14003755b:	add    bh,bh
   14003755d:	(bad)  
   14003755e:	(bad)  
   14003755f:	inc    DWORD PTR [rcx]
   140037561:	(bad)  
   140037562:	add    al,BYTE PTR [rax]
   140037564:	(bad)  
   140037565:	xor    al,BYTE PTR [rdx]
   140037567:	push   rax
   140037568:	adc    DWORD PTR [rdx],edx
   14003756a:	add    DWORD PTR [rax],eax
   14003756c:	or     DWORD PTR [rdx+0x0],esp
   14003756f:	add    BYTE PTR [rax-0x17ffff93],dl
   140037575:	mov    BYTE PTR [rdx],0x0
   140037578:	(bad)  
   140037579:	(bad)  
   14003757a:	(bad)  
   14003757b:	call   QWORD PTR [rax-0xffffd58]
   140037581:	(bad)  
   140037582:	add    BYTE PTR [rax],al
   140037584:	(bad)  
   140037585:	(bad)  
   140037586:	(bad)  
   140037587:	dec    DWORD PTR [rdx]
   140037589:	sbb    BYTE PTR [rax],al
   14003758b:	add    BYTE PTR [rax],al
   14003758d:	add    BYTE PTR [rax],al
   14003758f:	add    BYTE PTR [rbx],bl
   140037591:	sbb    BYTE PTR [rax],al
   140037593:	add    bh,bh
   140037595:	(bad)  
   140037596:	(bad)  
   140037597:	inc    DWORD PTR [rcx]
   140037599:	(bad)  
   14003759a:	add    al,BYTE PTR [rax]
   14003759c:	(bad)  
   14003759d:	xor    al,BYTE PTR [rdx]
   14003759f:	push   rax
   1400375a0:	add    DWORD PTR [rsi],eax
   1400375a2:	add    al,BYTE PTR [rax]
   1400375a4:	(bad)  
   1400375a5:	xor    al,BYTE PTR [rdx]
   1400375a7:	xor    BYTE PTR [rcx],al
   1400375a9:	(bad)  
   1400375aa:	add    al,BYTE PTR [rax]
   1400375ac:	(bad)  
   1400375ad:	xor    al,BYTE PTR [rdx]
   1400375af:	xor    BYTE PTR [rcx],al
   1400375b1:	or     al,BYTE PTR [rax+rax*1]
   1400375b4:	or     dh,BYTE PTR [rsi+rax*1]
   1400375b7:	add    BYTE PTR [rdx],cl
   1400375b9:	xor    al,BYTE PTR [rsi]
   1400375bb:	jo     0x1400375be
   1400375bd:	add    al,0x1
   1400375bf:	add    BYTE PTR [rdx+rax*4],al
   1400375c2:	add    BYTE PTR [rax],al
   1400375c4:	add    DWORD PTR [rcx+rax*1],eax
   1400375c7:	add    BYTE PTR [rdx+rax*4],al
   1400375ca:	add    BYTE PTR [rax],al
   1400375cc:	add    DWORD PTR [rcx+rax*1],eax
   1400375cf:	add    BYTE PTR [rdx+rax*4],al
   1400375d2:	add    BYTE PTR [rax],al
   1400375d4:	add    DWORD PTR [rcx+rax*1],eax
   1400375d7:	add    BYTE PTR [rdx+rax*4],al
   1400375da:	add    BYTE PTR [rax],al
   1400375dc:	add    DWORD PTR [rcx+rax*1],eax
   1400375df:	add    BYTE PTR [rdx+rax*4],al
   1400375e2:	add    BYTE PTR [rax],al
   1400375e4:	add    DWORD PTR [rcx+rax*1],eax
   1400375e7:	add    BYTE PTR [rdx+rax*4],al
   1400375ea:	add    BYTE PTR [rax],al
   1400375ec:	add    DWORD PTR [rdx],ecx
   1400375ee:	add    al,BYTE PTR [rax]
   1400375f0:	or     dh,BYTE PTR [rdx]
   1400375f2:	(bad)  
   1400375f3:	xor    BYTE PTR [rcx],al
   1400375f5:	(bad)  
   1400375f6:	add    al,BYTE PTR [rax]
   1400375f8:	(bad)  
   1400375f9:	xor    al,BYTE PTR [rdx]
   1400375fb:	xor    BYTE PTR [rcx],al
   1400375fd:	or     al,BYTE PTR [rax+rax*1]
   140037600:	or     dh,BYTE PTR [rsi+rax*1]
   140037603:	add    BYTE PTR [rdx],cl
   140037605:	xor    al,BYTE PTR [rsi]
   140037607:	jo     0x14003760a
   140037609:	(bad)  
   14003760a:	add    al,BYTE PTR [rax]
   14003760c:	(bad)  
   14003760d:	xor    al,BYTE PTR [rdx]
   14003760f:	xor    BYTE PTR [rcx],al
   140037611:	(bad)  
   140037612:	add    al,BYTE PTR [rax]
   140037614:	(bad)  
   140037615:	xor    al,BYTE PTR [rdx]
   140037617:	xor    BYTE PTR [rcx],al
   140037619:	or     al,BYTE PTR [rax+rax*1]
   14003761c:	or     dh,BYTE PTR [rsi+rax*1]
   14003761f:	add    BYTE PTR [rdx],cl
   140037621:	xor    al,BYTE PTR [rsi]
   140037623:	jo     0x140037626
   140037625:	(bad)  
   140037626:	add    al,BYTE PTR [rax]
   140037628:	(bad)  
   140037629:	xor    al,BYTE PTR [rdx]
   14003762b:	xor    BYTE PTR [rcx],al
   14003762d:	(bad)  
   14003762e:	add    al,BYTE PTR [rax]
   140037630:	(bad)  
   140037631:	xor    al,BYTE PTR [rdx]
   140037633:	xor    BYTE PTR [rcx],al
   140037635:	or     al,BYTE PTR [rax+rax*1]
   140037638:	or     dh,BYTE PTR [rsi+rax*1]
   14003763b:	add    BYTE PTR [rdx],cl
   14003763d:	xor    al,BYTE PTR [rsi]
   14003763f:	jo     0x140037642
   140037641:	(bad)  
   140037642:	add    al,BYTE PTR [rax]
   140037644:	(bad)  
   140037645:	xor    al,BYTE PTR [rdx]
   140037647:	xor    BYTE PTR [rcx],al
   140037649:	(bad)  
   14003764a:	add    al,BYTE PTR [rax]
   14003764c:	(bad)  
   14003764d:	xor    al,BYTE PTR [rdx]
   14003764f:	xor    BYTE PTR [rcx],al
   140037651:	or     al,BYTE PTR [rax+rax*1]
   140037654:	or     dh,BYTE PTR [rsi+rax*1]
   140037657:	add    BYTE PTR [rdx],cl
   140037659:	xor    al,BYTE PTR [rsi]
   14003765b:	jo     0x14003765e
   14003765d:	or     al,BYTE PTR [rdx]
   14003765f:	add    BYTE PTR [rdx],cl
   140037661:	xor    al,BYTE PTR [rsi]
   140037663:	xor    BYTE PTR [rcx],al
   140037665:	(bad)  
   140037666:	add    al,BYTE PTR [rax]
   140037668:	(bad)  
   140037669:	xor    al,BYTE PTR [rdx]
   14003766b:	xor    BYTE PTR [rcx],al
   14003766d:	or     al,BYTE PTR [rax+rax*1]
   140037670:	or     dh,BYTE PTR [rsi+rax*1]
   140037673:	add    BYTE PTR [rdx],cl
   140037675:	xor    al,BYTE PTR [rsi]
   140037677:	jo     0x14003767a
   140037679:	(bad)  
   14003767a:	add    al,BYTE PTR [rax]
   14003767c:	(bad)  
   14003767d:	xor    al,BYTE PTR [rdx]
   14003767f:	xor    BYTE PTR [rcx],al
   140037681:	(bad)  
   140037682:	add    al,BYTE PTR [rax]
   140037684:	(bad)  
   140037685:	xor    al,BYTE PTR [rdx]
   140037687:	xor    BYTE PTR [rcx],al
   140037689:	or     al,BYTE PTR [rax+rax*1]
   14003768c:	or     dh,BYTE PTR [rsi+rax*1]
   14003768f:	add    BYTE PTR [rdx],cl
   140037691:	xor    al,BYTE PTR [rsi]
   140037693:	jo     0x140037696
   140037695:	(bad)  
   140037696:	add    al,BYTE PTR [rax]
   140037698:	(bad)  
   140037699:	xor    al,BYTE PTR [rdx]
   14003769b:	xor    BYTE PTR [rcx],al
   14003769d:	(bad)  
   14003769e:	add    al,BYTE PTR [rax]
   1400376a0:	(bad)  
   1400376a1:	xor    al,BYTE PTR [rdx]
   1400376a3:	xor    BYTE PTR [rcx],al
   1400376a5:	or     al,BYTE PTR [rax+rax*1]
   1400376a8:	or     dh,BYTE PTR [rsi+rax*1]
   1400376ab:	add    BYTE PTR [rdx],cl
   1400376ad:	xor    al,BYTE PTR [rsi]
   1400376af:	jo     0x1400376b2
   1400376b1:	add    al,0x1
   1400376b3:	add    BYTE PTR [rdx+rax*4],al
   1400376b6:	add    BYTE PTR [rax],al
   1400376b8:	add    DWORD PTR [rsi],eax
   1400376ba:	add    al,BYTE PTR [rax]
   1400376bc:	(bad)  
   1400376bd:	jb     0x1400376c1
   1400376bf:	xor    BYTE PTR [rcx],al
   1400376c1:	or     al,BYTE PTR [rax+rax*1]
   1400376c4:	or     dh,BYTE PTR [rdi+rax*1]
   1400376c7:	add    BYTE PTR [rdx],cl
   1400376c9:	xor    al,BYTE PTR [rsi]
   1400376cb:	jo     0x1400376ce
   1400376cd:	or     al,BYTE PTR [rax+rax*1]
   1400376d0:	or     dh,BYTE PTR [rsi+rax*1]
   1400376d3:	add    BYTE PTR [rdx],cl
   1400376d5:	xor    al,BYTE PTR [rsi]
   1400376d7:	jo     0x1400376da
   1400376d9:	or     al,BYTE PTR [rax+rax*1]
   1400376dc:	or     dh,BYTE PTR [rsi+rax*1]
   1400376df:	add    BYTE PTR [rdx],cl
   1400376e1:	xor    al,BYTE PTR [rsi]
   1400376e3:	jo     0x1400376e6
   1400376e5:	or     al,BYTE PTR [rax+rax*1]
   1400376e8:	or     dh,BYTE PTR [rsi+rax*1]
   1400376eb:	add    BYTE PTR [rdx],cl
   1400376ed:	xor    al,BYTE PTR [rsi]
   1400376ef:	jo     0x1400376f2
   1400376f1:	add    al,0x1
   1400376f3:	add    BYTE PTR [rdx+rax*2],al
   1400376f6:	add    BYTE PTR [rax],al
   1400376f8:	add    DWORD PTR [rsi],eax
   1400376fa:	add    al,BYTE PTR [rax]
   1400376fc:	(bad)  
   1400376fd:	jb     0x140037701
   1400376ff:	xor    BYTE PTR [rcx],al
   140037701:	add    al,0x1
   140037703:	add    BYTE PTR [rdx+rax*2],al
   140037706:	add    BYTE PTR [rax],al
   140037708:	adc    DWORD PTR [rcx],ebx
   14003770a:	or     al,BYTE PTR [rax]
   14003770c:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140037710:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140037714:	sbb    DWORD PTR [rax+rcx*1],esi
   140037717:	add    BYTE PTR [rcx],bl
   140037719:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e38b0f
   14003771f:	rol    BYTE PTR [rax-0x78],0x0
   140037723:	add    BYTE PTR [rcx],al
   140037725:	add    BYTE PTR [rax],al
   140037727:	add    dh,ah
   140037729:	push   rdi
   14003772a:	add    BYTE PTR [rax],al
   14003772c:	lods   al,BYTE PTR ds:[rsi]
   14003772d:	pop    rax
   14003772e:	add    BYTE PTR [rax],al
   140037730:	jl     0x1400376dc
   140037732:	add    al,BYTE PTR [rax]
   140037734:	add    BYTE PTR [rax],al
   140037736:	add    BYTE PTR [rax],al
   140037738:	add    DWORD PTR [rsi],eax
   14003773a:	add    al,BYTE PTR [rax]
   14003773c:	(bad)  
   14003773d:	xor    al,BYTE PTR [rdx]
   14003773f:	push   rax
   140037740:	add    DWORD PTR [rsi],eax
   140037742:	add    al,BYTE PTR [rax]
   140037744:	(bad)  
   140037745:	xor    al,BYTE PTR [rdx]
   140037747:	xor    BYTE PTR [rcx],al
   140037749:	sbb    BYTE PTR [rdx],cl
   14003774b:	add    BYTE PTR [rax],bl
   14003774d:	or     al,BYTE PTR fs:[rax]
   140037750:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140037754:	sbb    BYTE PTR [rax+rcx*1],dh
   140037757:	add    BYTE PTR [rax],bl
   140037759:	xor    dl,BYTE PTR [rax+rsi*8]
   14003775c:	adc    ah,al
   14003775e:	adc    BYTE PTR [rax+0x1],dh
   140037761:	add    BYTE PTR [rax],al
   140037763:	add    BYTE PTR [rcx],al
   140037765:	clts   
   140037767:	add    BYTE PTR [rdi],cl
   140037769:	fs add eax,0x4340f00
   14003776f:	add    BYTE PTR [rdi],cl
   140037771:	adc    cl,BYTE PTR [rbx]
   140037773:	jo     0x140037776
   140037775:	add    al,0x1
   140037777:	add    BYTE PTR [rdx+riz*2],al
   14003777a:	add    BYTE PTR [rax],al
   14003777c:	add    DWORD PTR [rbx],ebx
   14003777e:	or     al,BYTE PTR [rax]
   140037780:	sbb    esp,esp
   140037782:	ltr    WORD PTR [rbx]
   140037785:	je     0x140037795
   140037787:	add    BYTE PTR [rbx],bl
   140037789:	fs or  eax,0xc341b00
   14003778f:	add    BYTE PTR [rbx],bl
   140037791:	xchg   edx,eax
   140037792:	adc    al,0x50
   140037794:	add    DWORD PTR [rsi],eax
   140037796:	add    al,BYTE PTR [rax]
   140037798:	(bad)  
   140037799:	xchg   edx,eax
   14003779a:	add    dh,BYTE PTR [rax]
   14003779c:	add    DWORD PTR [rcx+rax*1],eax
   14003779f:	add    BYTE PTR [rdx+rax*2],al
   1400377a2:	add    BYTE PTR [rax],al
   1400377a4:	add    DWORD PTR [rdx],edx
   1400377a6:	(bad)  
   1400377a7:	add    BYTE PTR [rdx],dl
   1400377a9:	je     0x1400377bb
   1400377ab:	add    BYTE PTR [rdx],dl
   1400377ad:	xor    al,0xf
   1400377af:	add    BYTE PTR [rdx],dl
   1400377b1:	mov    dl,0xb
   1400377b3:	push   rax
   1400377b4:	add    DWORD PTR [rax+rcx*1],edx
   1400377b7:	add    BYTE PTR [rsp+riz*2],dl
   1400377ba:	or     BYTE PTR [rax],al
   1400377bc:	adc    al,0x54
   1400377be:	(bad)  
   1400377bf:	add    BYTE PTR [rsp+rsi*1],dl
   1400377c2:	(bad)  
   1400377c3:	add    BYTE PTR [rdx+rsi*1],dl
   1400377c6:	adc    BYTE PTR [rax+0x1],dh
   1400377c9:	adc    cl,BYTE PTR [rax]
   1400377cb:	add    BYTE PTR [rdx],dl
   1400377cd:	push   rsp
   1400377ce:	or     DWORD PTR [rax],eax
   1400377d0:	adc    dh,BYTE PTR [rax+rcx*1]
   1400377d3:	add    BYTE PTR [rdx],dl
   1400377d5:	xor    cl,BYTE PTR [rsi]
   1400377d7:	loopne 0x1400377e5
   1400377d9:	jo     0x1400377e6
   1400377db:	(bad)  
   1400377dc:	add    DWORD PTR [rdx],ecx
   1400377de:	add    al,0x0
   1400377e0:	or     dh,BYTE PTR [rsi+rax*1]
   1400377e3:	add    BYTE PTR [rdx],cl
   1400377e5:	xor    al,BYTE PTR [rsi]
   1400377e7:	jo     0x1400377ea
   1400377e9:	(bad)  
   1400377ea:	add    al,BYTE PTR [rax]
   1400377ec:	(bad)  
   1400377ed:	xor    al,BYTE PTR [rdx]
   1400377ef:	xor    BYTE PTR [rcx],al
   1400377f1:	(bad)  
   1400377f2:	add    al,BYTE PTR [rax]
   1400377f4:	(bad)  
   1400377f5:	xor    al,BYTE PTR [rdx]
   1400377f7:	xor    BYTE PTR [rcx],bl
   1400377f9:	and    al,BYTE PTR [rbx]
   1400377fb:	add    BYTE PTR [rcx],dl
   1400377fd:	add    DWORD PTR [rsi+0x500200],esi
   140037803:	add    al,ah
   140037805:	ret    0x0
   140037808:	movabs al,ds:0x1800021809000005
   140037811:	mov    dl,0x14
   140037813:	xor    BYTE PTR [rax-0x78],al
   140037816:	add    BYTE PTR [rax],al
   140037818:	add    DWORD PTR [rax],eax
   14003781a:	add    BYTE PTR [rax],al
   14003781c:	movsxd ebp,DWORD PTR [rdx+0x0]
   14003781f:	add    BYTE PTR [rbx-0x6fffff96],al
   140037825:	stos   BYTE PTR es:[rdi],al
   140037826:	add    al,BYTE PTR [rax]
   140037828:	sub    DWORD PTR [rdx+0x0],0x0
   14003782c:	add    DWORD PTR [rsi],eax
   14003782e:	add    al,BYTE PTR [rax]
   140037830:	(bad)  
   140037831:	jb     0x140037835
   140037833:	push   rax
   140037834:	add    DWORD PTR [rcx+rax*1],eax
   140037837:	add    BYTE PTR [rdx+rax*2],al
   14003783a:	add    BYTE PTR [rax],al
   14003783c:	add    DWORD PTR [rcx+rax*1],eax
   14003783f:	add    BYTE PTR [rdx+rax*2],al
   140037842:	add    BYTE PTR [rax],al
   140037844:	add    DWORD PTR [rsi],eax
   140037846:	add    al,BYTE PTR [rax]
   140037848:	(bad)  
   140037849:	xor    al,BYTE PTR [rdx]
   14003784b:	xor    BYTE PTR [rcx],al
   14003784d:	(bad)  
   14003784e:	add    al,BYTE PTR [rax]
   140037850:	(bad)  
   140037851:	xor    al,BYTE PTR [rdx]
   140037853:	xor    BYTE PTR [rcx],al
   140037855:	sbb    eax,0x741d000c
   14003785a:	or     eax,DWORD PTR [rax]
   14003785c:	sbb    eax,0x1d000a64
   140037861:	push   rsp
   140037862:	or     DWORD PTR [rax],eax
   140037864:	sbb    eax,0x1d000834
   140037869:	xor    bl,BYTE PTR [rcx]
   14003786b:	lock (bad) 
   14003786d:	loopne 0x140037884
   14003786f:	rol    BYTE PTR [rcx],0x16
   140037872:	or     al,BYTE PTR [rax]
   140037874:	(bad)  
   140037875:	push   rsp
   140037876:	or     al,0x0
   140037878:	(bad)  
   140037879:	xor    al,0xb
   14003787b:	add    BYTE PTR [rsi],dl
   14003787d:	xor    dl,BYTE PTR [rdx]
   14003787f:	lock adc al,ah
   140037882:	(bad)  
   140037883:	ror    BYTE PTR [rax+rsi*2],0xb
   140037887:	(bad)  
   140037888:	add    DWORD PTR [rdi],ecx
   14003788a:	(bad)  
   14003788b:	add    BYTE PTR [rdi],cl
   14003788d:	fs (bad) 
   14003788f:	add    BYTE PTR [rdi],cl
   140037891:	xor    al,0x6
   140037893:	add    BYTE PTR [rdi],cl
   140037895:	xor    cl,BYTE PTR [rbx]
   140037897:	jo     0x14003789a
   140037899:	clts   
   14003789b:	add    BYTE PTR [rdi],cl
   14003789d:	fs or  al,0x0
   1400378a0:	sysenter 
   1400378a2:	or     eax,DWORD PTR [rax]
   1400378a4:	(bad)  
   1400378a6:	or     esi,DWORD PTR [rax+0x1]
   1400378a9:	clts   
   1400378ab:	add    BYTE PTR [rdi],cl
   1400378ad:	fs or  al,0x0
   1400378b0:	sysenter 
   1400378b2:	or     eax,DWORD PTR [rax]
   1400378b4:	(bad)  
   1400378b6:	or     esi,DWORD PTR [rax+0x1]
   1400378b9:	adc    al,0x8
   1400378bb:	add    BYTE PTR [rsp+riz*2],dl
   1400378be:	or     al,0x0
   1400378c0:	adc    al,0x54
   1400378c2:	or     eax,DWORD PTR [rax]
   1400378c4:	adc    al,0x34
   1400378c6:	or     al,BYTE PTR [rax]
   1400378c8:	adc    al,0x72
   1400378ca:	adc    BYTE PTR [rax+0x0],dh
   1400378cd:	add    BYTE PTR [rax],al
   1400378cf:	add    BYTE PTR [rcx],al
   1400378d1:	add    al,0x1
   1400378d3:	add    BYTE PTR [rdx+rdx*1],al
   1400378d6:	add    BYTE PTR [rax],al
   1400378d8:	add    DWORD PTR [rax],eax
   1400378da:	add    BYTE PTR [rax],al
   1400378dc:	add    BYTE PTR [rax],al
   1400378de:	add    BYTE PTR [rax],al
   1400378e0:	add    DWORD PTR [rax],eax
   1400378e2:	add    BYTE PTR [rax],al
   1400378e4:	add    DWORD PTR [rcx+rax*1],eax
   1400378e7:	add    BYTE PTR [rdx+rax*2],al
   1400378ea:	add    BYTE PTR [rax],al
   1400378ec:	add    DWORD PTR [rcx+rax*1],eax
   1400378ef:	add    BYTE PTR [rdx+rax*2],al
   1400378f2:	add    BYTE PTR [rax],al
   1400378f4:	add    DWORD PTR [rcx+rax*1],eax
   1400378f7:	add    BYTE PTR [rdx+rax*2],al
   1400378fa:	add    BYTE PTR [rax],al
   1400378fc:	add    DWORD PTR [rdx],ecx
   1400378fe:	add    al,0x0
   140037900:	or     dh,BYTE PTR [rsi+rax*1]
   140037903:	add    BYTE PTR [rdx],cl
   140037905:	xor    al,BYTE PTR [rsi]
   140037907:	jo     0x14003790a
   140037909:	(bad)  
   14003790a:	add    al,BYTE PTR [rax]
   14003790c:	(bad)  
   14003790d:	xor    al,BYTE PTR [rdx]
   14003790f:	xor    BYTE PTR [rcx],cl
   140037911:	clts   
   140037913:	add    BYTE PTR [rdi],cl
   140037915:	or     al,BYTE PTR fs:[rax]
   140037918:	sysenter 
   14003791a:	or     DWORD PTR [rax],eax
   14003791c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14003791f:	jo     0x140037961
   140037921:	mov    BYTE PTR [rax],al
   140037923:	add    BYTE PTR [rcx],al
   140037925:	add    BYTE PTR [rax],al
   140037927:	add    bl,bh
   140037929:	jae    0x14003792b
   14003792b:	add    BYTE PTR [rax-0x29ffff8c],dl
   140037931:	stos   BYTE PTR es:[rdi],al
   140037932:	add    al,BYTE PTR [rax]
   140037934:	nop
   140037935:	je     0x140037937
   140037937:	add    BYTE PTR [rcx],al
   140037939:	(bad)  
   14003793a:	add    al,BYTE PTR [rax]
   14003793c:	(bad)  
   14003793d:	xor    al,BYTE PTR [rdx]
   14003793f:	push   rax
   140037940:	add    DWORD PTR [rcx+rax*1],eax
   140037943:	add    BYTE PTR [rdx+rax*2],al
   140037946:	add    BYTE PTR [rax],al
   140037948:	add    DWORD PTR [rax],eax
   14003794a:	add    BYTE PTR [rax],al
   14003794c:	add    DWORD PTR [rsi],eax
   14003794e:	add    al,BYTE PTR [rax]
   140037950:	(bad)  
   140037951:	xor    al,BYTE PTR [rdx]
   140037953:	xor    BYTE PTR [rcx],al
   140037955:	(bad)  
   140037956:	add    al,BYTE PTR [rax]
   140037958:	(bad)  
   140037959:	xor    al,BYTE PTR [rdx]
   14003795b:	xor    BYTE PTR [rcx],al
   14003795d:	or     al,BYTE PTR [rax+rax*1]
   140037960:	or     dh,BYTE PTR [rsi+rax*1]
   140037963:	add    BYTE PTR [rdx],cl
   140037965:	xor    al,BYTE PTR [rsi]
   140037967:	jo     0x14003796a
   140037969:	adc    al,0x6
   14003796b:	add    BYTE PTR [rsp+riz*2],dl
   14003796e:	(bad)  
   14003796f:	add    BYTE PTR [rsp+rsi*1],dl
   140037972:	(bad)  
   140037973:	add    BYTE PTR [rdx+rsi*1],dl
   140037976:	adc    BYTE PTR [rax+0x1],dh
   140037979:	(bad)  
   14003797a:	add    al,BYTE PTR [rax]
   14003797c:	(bad)  
   14003797d:	xor    al,BYTE PTR [rdx]
   14003797f:	xor    BYTE PTR [rcx],al
   140037981:	or     al,BYTE PTR [rax+rax*1]
   140037984:	or     dh,BYTE PTR [rsi+rax*1]
   140037987:	add    BYTE PTR [rdx],cl
   140037989:	xor    al,BYTE PTR [rsi]
   14003798b:	jo     0x14003798e
   14003798d:	or     al,BYTE PTR [rdx]
   14003798f:	add    BYTE PTR [rdx],cl
   140037991:	xor    al,BYTE PTR [rsi]
   140037993:	xor    BYTE PTR [rcx],al
   140037995:	(bad)  
   140037996:	add    al,BYTE PTR [rax]
   140037998:	(bad)  
   140037999:	xor    al,BYTE PTR [rdx]
   14003799b:	xor    BYTE PTR [rcx],al
   14003799d:	or     al,BYTE PTR [rax+rax*1]
   1400379a0:	or     dh,BYTE PTR [rsi+rax*1]
   1400379a3:	add    BYTE PTR [rdx],cl
   1400379a5:	xor    al,BYTE PTR [rsi]
   1400379a7:	jo     0x1400379aa
   1400379a9:	or     al,BYTE PTR [rdx]
   1400379ab:	add    BYTE PTR [rdx],cl
   1400379ad:	xor    al,BYTE PTR [rsi]
   1400379af:	xor    BYTE PTR [rcx],al
   1400379b1:	(bad)  
   1400379b2:	add    al,BYTE PTR [rax]
   1400379b4:	(bad)  
   1400379b5:	xor    al,BYTE PTR [rdx]
   1400379b7:	xor    BYTE PTR [rcx],al
   1400379b9:	or     al,BYTE PTR [rax+rax*1]
   1400379bc:	or     dh,BYTE PTR [rsi+rax*1]
   1400379bf:	add    BYTE PTR [rdx],cl
   1400379c1:	xor    al,BYTE PTR [rsi]
   1400379c3:	jo     0x1400379c6
   1400379c5:	(bad)  
   1400379c6:	add    al,BYTE PTR [rax]
   1400379c8:	(bad)  
   1400379c9:	xor    al,BYTE PTR [rdx]
   1400379cb:	xor    BYTE PTR [rcx],al
   1400379cd:	(bad)  
   1400379ce:	add    al,BYTE PTR [rax]
   1400379d0:	(bad)  
   1400379d1:	xor    al,BYTE PTR [rdx]
   1400379d3:	xor    BYTE PTR [rcx],al
   1400379d5:	or     al,BYTE PTR [rax+rax*1]
   1400379d8:	or     dh,BYTE PTR [rsi+rax*1]
   1400379db:	add    BYTE PTR [rdx],cl
   1400379dd:	xor    al,BYTE PTR [rsi]
   1400379df:	jo     0x1400379e2
   1400379e1:	add    al,0x1
   1400379e3:	add    BYTE PTR [rdx+rax*2],al
   1400379e6:	add    BYTE PTR [rax],al
   1400379e8:	sbb    DWORD PTR [rcx+rcx*1],esp
   1400379eb:	add    BYTE PTR [rdx],dl
   1400379ed:	add    DWORD PTR [rdx],ebx
   1400379ef:	add    BYTE PTR [rbx],cl
   1400379f1:	lock or eax,esp
   1400379f4:	(bad)  
   1400379f5:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143637e6c
   1400379fc:	add    dh,BYTE PTR [rax]
   1400379fe:	add    BYTE PTR [rax],al
   140037a00:	loopne 0x1400379c4
   140037a02:	add    BYTE PTR [rax],al
   140037a04:	rol    BYTE PTR [rax],0x0
   140037a07:	add    BYTE PTR [rcx],al
   140037a09:	or     al,BYTE PTR [rdx]
   140037a0b:	add    BYTE PTR [rdx],cl
   140037a0d:	push   rdx
   140037a0e:	(bad)  
   140037a0f:	xor    BYTE PTR [rcx],al
   140037a11:	clts   
   140037a13:	add    BYTE PTR [rdi],cl
   140037a15:	fs (bad) 
   140037a17:	add    BYTE PTR [rdi],cl
   140037a19:	xor    al,0x6
   140037a1b:	add    BYTE PTR [rdi],cl
   140037a1d:	xor    cl,BYTE PTR [rbx]
   140037a1f:	jo     0x140037a22
   140037a21:	(bad)  
   140037a22:	add    al,BYTE PTR [rax]
   140037a24:	(bad)  
   140037a25:	xor    al,BYTE PTR [rdx]
   140037a27:	xor    BYTE PTR [rcx],al
   140037a29:	(bad)  
   140037a2a:	add    al,BYTE PTR [rax]
   140037a2c:	(bad)  
   140037a2d:	xor    al,BYTE PTR [rdx]
   140037a2f:	xor    BYTE PTR [rcx],al
   140037a31:	or     al,BYTE PTR [rax+rax*1]
   140037a34:	or     dh,BYTE PTR [rsi+rax*1]
   140037a37:	add    BYTE PTR [rdx],cl
   140037a39:	xor    al,BYTE PTR [rsi]
   140037a3b:	jo     0x140037a3e
   140037a3d:	or     al,BYTE PTR [rdx]
   140037a3f:	add    BYTE PTR [rdx],cl
   140037a41:	xor    al,BYTE PTR [rsi]
   140037a43:	xor    BYTE PTR [rcx],al
   140037a45:	(bad)  
   140037a46:	add    al,BYTE PTR [rax]
   140037a48:	(bad)  
   140037a49:	xor    al,BYTE PTR [rdx]
   140037a4b:	xor    BYTE PTR [rcx],al
   140037a4d:	(bad)  
   140037a4e:	add    al,BYTE PTR [rax]
   140037a50:	(bad)  
   140037a51:	xor    al,BYTE PTR [rdx]
   140037a53:	xor    BYTE PTR [rcx],al
   140037a55:	(bad)  
   140037a56:	add    al,BYTE PTR [rax]
   140037a58:	(bad)  
   140037a59:	xor    al,BYTE PTR [rdx]
   140037a5b:	xor    BYTE PTR [rcx],al
   140037a5d:	(bad)  
   140037a5e:	add    al,BYTE PTR [rax]
   140037a60:	(bad)  
   140037a61:	xor    al,BYTE PTR [rdx]
   140037a63:	xor    BYTE PTR [rcx],al
   140037a65:	or     al,BYTE PTR [rax+rax*1]
   140037a68:	or     dh,BYTE PTR [rsi+rax*1]
   140037a6b:	add    BYTE PTR [rdx],cl
   140037a6d:	xor    al,BYTE PTR [rsi]
   140037a6f:	jo     0x140037a72
   140037a71:	(bad)  
   140037a72:	add    al,BYTE PTR [rax]
   140037a74:	(bad)  
   140037a75:	xor    al,BYTE PTR [rdx]
   140037a77:	xor    BYTE PTR [rcx],al
   140037a79:	sbb    DWORD PTR [rdx],ecx
   140037a7b:	add    BYTE PTR [rcx],bl
   140037a7d:	je     0x140037a8a
   140037a7f:	add    BYTE PTR [rcx],bl
   140037a81:	or     al,BYTE PTR fs:[rax]
   140037a84:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140037a88:	sbb    DWORD PTR [rax+rcx*1],esi
   140037a8b:	add    BYTE PTR [rcx],bl
   140037a8d:	push   rdx
   140037a8e:	adc    eax,0xa1901f0
   140037a93:	add    BYTE PTR [rcx],bl
   140037a95:	je     0x140037aa4
   140037a97:	add    BYTE PTR [rcx],bl
   140037a99:	fs or  al,0x0
   140037a9c:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140037aa0:	sbb    DWORD PTR [rdx+rcx*1],esi
   140037aa3:	add    BYTE PTR [rcx],bl
   140037aa5:	jb     0x140037abc
   140037aa7:	lock add DWORD PTR [rcx+rax*1],eax
   140037aab:	add    BYTE PTR [rdx+rax*2],al
   140037aae:	add    BYTE PTR [rax],al
   140037ab0:	add    DWORD PTR [rcx+rax*1],eax
   140037ab3:	add    BYTE PTR [rdx+rax*2],al
   140037ab6:	add    BYTE PTR [rax],al
   140037ab8:	add    DWORD PTR [rax+rcx*1],edx
   140037abb:	add    BYTE PTR [rsp+riz*2],dl
   140037abe:	or     BYTE PTR [rax],al
   140037ac0:	adc    al,0x54
   140037ac2:	(bad)  
   140037ac3:	add    BYTE PTR [rsp+rsi*1],dl
   140037ac6:	(bad)  
   140037ac7:	add    BYTE PTR [rdx+rsi*1],dl
   140037aca:	adc    BYTE PTR [rax+0x1],dh
   140037acd:	or     al,BYTE PTR [rax+rax*1]
   140037ad0:	or     dh,BYTE PTR [rsi+rax*1]
   140037ad3:	add    BYTE PTR [rdx],cl
   140037ad5:	xor    al,BYTE PTR [rsi]
   140037ad7:	jo     0x140037aea
   140037ad9:	sbb    al,0xa
   140037adb:	add    BYTE PTR [rsp+riz*2],bl
   140037ade:	ltr    WORD PTR [rsp+rsi*1]
   140037ae2:	(bad)  
   140037ae3:	add    BYTE PTR [rdx+rsi*2],bl
   140037ae6:	sbb    al,dh
   140037ae8:	(bad)  
   140037ae9:	loopne 0x140037aff
   140037aeb:	rcl    BYTE PTR [rdx],1
   140037aed:	rcl    BYTE PTR [rax],0x70
   140037af0:	mov    BYTE PTR [rax],al
   140037af3:	add    BYTE PTR [rcx],al
   140037af5:	add    BYTE PTR [rax],al
   140037af7:	add    BYTE PTR [rbx-0x7c],dl
   140037afa:	add    BYTE PTR [rax],al
   140037afc:	test   DWORD PTR [eax],eax
   140037aff:	add    ah,dh
   140037b01:	stos   BYTE PTR es:[rdi],al
   140037b02:	add    al,BYTE PTR [rax]
   140037b04:	add    BYTE PTR [rax],al
   140037b06:	add    BYTE PTR [rax],al
   140037b08:	add    DWORD PTR [rsi],eax
   140037b0a:	add    al,BYTE PTR [rax]
   140037b0c:	(bad)  
   140037b0d:	xor    al,BYTE PTR [rdx]
   140037b0f:	push   rax
   140037b10:	add    DWORD PTR [rcx+rax*1],eax
   140037b13:	add    BYTE PTR [rdx+rax*2],al
   140037b16:	add    BYTE PTR [rax],al
   140037b18:	add    DWORD PTR [rsi],eax
   140037b1a:	add    al,BYTE PTR [rax]
   140037b1c:	(bad)  
   140037b1d:	xor    al,BYTE PTR [rdx]
   140037b1f:	xor    BYTE PTR [rcx],al
   140037b21:	sbb    DWORD PTR [rdx],ecx
   140037b23:	add    BYTE PTR [rcx],bl
   140037b25:	je     0x140037b30
   140037b27:	add    BYTE PTR [rcx],bl
   140037b29:	or     BYTE PTR fs:[rax],al
   140037b2c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140037b30:	sbb    DWORD PTR [rsi+rax*1],esi
   140037b33:	add    BYTE PTR [rcx],bl
   140037b35:	xor    dl,BYTE PTR [rip+0xa1901e0]        # 0x14a1c7d1b
   140037b3b:	add    BYTE PTR [rcx],bl
   140037b3d:	je     0x140037b48
   140037b3f:	add    BYTE PTR [rcx],bl
   140037b41:	or     BYTE PTR fs:[rax],al
   140037b44:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140037b48:	sbb    DWORD PTR [rsi+rax*1],esi
   140037b4b:	add    BYTE PTR [rcx],bl
   140037b4d:	xor    dl,BYTE PTR [rip+0xa1901e0]        # 0x14a1c7d33
   140037b53:	add    BYTE PTR [rcx],bl
   140037b55:	je     0x140037b60
   140037b57:	add    BYTE PTR [rcx],bl
   140037b59:	or     BYTE PTR fs:[rax],al
   140037b5c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140037b60:	sbb    DWORD PTR [rsi+rax*1],esi
   140037b63:	add    BYTE PTR [rcx],bl
   140037b65:	xor    dl,BYTE PTR [rip+0xa1801e0]        # 0x14a1b7d4b
   140037b6b:	add    BYTE PTR [rax],bl
   140037b6d:	or     al,BYTE PTR fs:[rax]
   140037b70:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140037b74:	sbb    BYTE PTR [rax+rcx*1],dh
   140037b77:	add    BYTE PTR [rax],bl
   140037b79:	xor    dl,BYTE PTR [rax+rsi*8]
   140037b7c:	adc    ah,al
   140037b7e:	adc    BYTE PTR [rax+0x1],dh
   140037b81:	sbb    al,0xc
   140037b83:	add    BYTE PTR [rsp+riz*2],bl
   140037b86:	adc    BYTE PTR [rax],al
   140037b88:	sbb    al,0x54
   140037b8a:	ltr    WORD PTR [rsp+rsi*1]
   140037b8e:	(bad)  
   140037b8f:	add    BYTE PTR [rdx+rsi*2],bl
   140037b92:	sbb    al,dh
   140037b94:	(bad)  
   140037b95:	loopne 0x140037bab
   140037b97:	rcl    BYTE PTR [rdx],1
   140037b99:	rcl    BYTE PTR [rax],0x70
   140037b9c:	add    DWORD PTR [rax+rcx*1],edx
   140037b9f:	add    BYTE PTR [rsp+riz*2],dl
   140037ba2:	(bad)  
   140037ba3:	add    BYTE PTR [rsp+rdx*2],dl
   140037ba6:	add    eax,0x4341400
   140037bab:	add    BYTE PTR [rdx+rdx*1],dl
   140037bae:	adc    BYTE PTR [rax+0x1],dh
   140037bb1:	add    al,0x1
   140037bb3:	add    BYTE PTR [rdx+riz*2],al
   140037bb6:	add    BYTE PTR [rax],al
   140037bb8:	add    DWORD PTR [rcx+rax*1],eax
   140037bbb:	add    BYTE PTR [rdx+riz*2],al
   140037bbe:	add    BYTE PTR [rax],al
   140037bc0:	add    DWORD PTR [rcx+rax*1],eax
   140037bc3:	add    BYTE PTR [rdx+rax*2],al
   140037bc6:	add    BYTE PTR [rax],al
   140037bc8:	sbb    DWORD PTR [rdi],ebp
   140037bca:	or     DWORD PTR [rax],eax
   140037bcc:	(bad)  
   140037bcd:	je     0x140037b8a
   140037bcf:	add    BYTE PTR [rsi],bl
   140037bd1:	fs mov edx,0xb9341e00
   140037bd7:	add    BYTE PTR [rsi],bl
   140037bd9:	add    DWORD PTR [rsi+0x501000],esi
   140037bdf:	add    al,ah
   140037be1:	ret    0x0
   140037be4:	movabs al,ds:0xa00040a01000005
   140037bed:	xor    al,0x6
   140037bef:	add    BYTE PTR [rdx],cl
   140037bf1:	xor    al,BYTE PTR [rsi]
   140037bf3:	jo     0x140037bf6
   140037bf5:	adc    al,0x8
   140037bf7:	add    BYTE PTR [rsp+riz*2],dl
   140037bfa:	or     al,BYTE PTR [rax]
   140037bfc:	adc    al,0x54
   140037bfe:	or     DWORD PTR [rax],eax
   140037c00:	adc    al,0x34
   140037c02:	or     BYTE PTR [rax],al
   140037c04:	adc    al,0x52
   140037c06:	adc    BYTE PTR [rax+0x1],dh
   140037c09:	add    al,0x1
   140037c0b:	add    BYTE PTR [rdx+riz*2],al
   140037c0e:	add    BYTE PTR [rax],al
   140037c10:	add    DWORD PTR [rdi],edx
   140037c12:	or     BYTE PTR [rax],al
   140037c14:	(bad)  
   140037c15:	or     DWORD PTR fs:[rax],eax
   140037c18:	(bad)  
   140037c19:	push   rsp
   140037c1a:	or     BYTE PTR [rax],al
   140037c1c:	(bad)  
   140037c1d:	xor    al,0x7
   140037c1f:	add    BYTE PTR [rdi],dl
   140037c21:	xor    dl,BYTE PTR [rbx]
   140037c23:	jo     0x140037c3e
   140037c25:	xor    BYTE PTR [rbx],cl
   140037c27:	add    BYTE PTR [rdi],bl
   140037c29:	xor    al,0xa6
   140037c2b:	add    BYTE PTR [rdi],bl
   140037c2d:	add    DWORD PTR [rax+rax*1-0x1ff10ff0],ebx
   140037c34:	or     al,0xd0
   140037c36:	or     al,al
   140037c38:	or     BYTE PTR [rax+0x7],dh
   140037c3b:	(bad)  
   140037c3c:	(bad)  
   140037c3d:	push   rax
   140037c3e:	add    BYTE PTR [rax],al
   140037c40:	loopne 0x140037c04
   140037c42:	add    BYTE PTR [rax],al
   140037c44:	rol    BYTE PTR [rax+rax*1],1
   140037c47:	add    BYTE PTR [rcx],al
   140037c49:	(bad)  
   140037c4a:	add    al,BYTE PTR [rax]
   140037c4c:	(bad)  
   140037c4d:	xor    al,BYTE PTR [rdx]
   140037c4f:	xor    BYTE PTR [rcx],al
   140037c51:	(bad)  
   140037c52:	add    al,BYTE PTR [rax]
   140037c54:	(bad)  
   140037c55:	xor    al,BYTE PTR [rdx]
   140037c57:	xor    BYTE PTR [rcx],al
   140037c59:	sbb    BYTE PTR [rax],cl
   140037c5b:	add    BYTE PTR [rax],bl
   140037c5d:	or     BYTE PTR fs:[rax],al
   140037c60:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140037c64:	sbb    BYTE PTR [rsi+rax*1],dh
   140037c67:	add    BYTE PTR [rax],bl
   140037c69:	xor    dl,BYTE PTR [rax+rsi*2]
   140037c6c:	add    DWORD PTR [rax],ebx
   140037c6e:	or     al,BYTE PTR [rax]
   140037c70:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140037c74:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140037c78:	sbb    BYTE PTR [rax+rcx*1],dh
   140037c7b:	add    BYTE PTR [rax],bl
   140037c7d:	xor    dl,BYTE PTR [rax+rsi*8]
   140037c80:	adc    ah,al
   140037c82:	adc    BYTE PTR [rax+0x1],dh
   140037c85:	add    al,0x1
   140037c87:	add    BYTE PTR [rdx+rax*2],al
   140037c8a:	add    BYTE PTR [rax],al
   140037c8c:	add    DWORD PTR [rsi],eax
   140037c8e:	add    al,BYTE PTR [rax]
   140037c90:	(bad)  
   140037c91:	xor    al,BYTE PTR [rdx]
   140037c93:	xor    BYTE PTR [rcx],al
   140037c95:	(bad)  
   140037c96:	add    al,BYTE PTR [rax]
   140037c98:	(bad)  
   140037c99:	xor    al,BYTE PTR [rdx]
   140037c9b:	xor    BYTE PTR [rcx],al
   140037c9d:	add    al,0x1
   140037c9f:	add    BYTE PTR [rdx+rax*2],al
   140037ca2:	add    BYTE PTR [rax],al
   140037ca4:	add    DWORD PTR [rsi],eax
   140037ca6:	add    al,BYTE PTR [rax]
   140037ca8:	(bad)  
   140037ca9:	xor    al,BYTE PTR [rdx]
   140037cab:	xor    BYTE PTR [rcx],al
   140037cad:	(bad)  
   140037cae:	add    al,BYTE PTR [rax]
   140037cb0:	(bad)  
   140037cb1:	xor    al,BYTE PTR [rdx]
   140037cb3:	xor    BYTE PTR [rcx],al
   140037cb5:	or     al,BYTE PTR [rax+rax*1]
   140037cb8:	or     dh,BYTE PTR [rsi+rax*1]
   140037cbb:	add    BYTE PTR [rdx],cl
   140037cbd:	xor    al,BYTE PTR [rsi]
   140037cbf:	jo     0x140037cc2
   140037cc1:	(bad)  
   140037cc2:	add    al,BYTE PTR [rax]
   140037cc4:	(bad)  
   140037cc5:	xor    al,BYTE PTR [rdx]
   140037cc7:	xor    BYTE PTR [rcx],cl
   140037cc9:	clts   
   140037ccb:	add    BYTE PTR [rdi],cl
   140037ccd:	or     DWORD PTR fs:[rax],eax
   140037cd0:	sysenter 
   140037cd2:	or     BYTE PTR [rax],al
   140037cd4:	rdmsr  
   140037cd6:	or     esi,DWORD PTR [rax+0x40]
   140037cd9:	mov    BYTE PTR [rax],al
   140037cdb:	add    BYTE PTR [rcx],al
   140037cdd:	add    BYTE PTR [rax],al
   140037cdf:	add    BYTE PTR [rsi-0x62],dh
   140037ce2:	add    BYTE PTR [rax],al
   140037ce4:	jge    0x140037c84
   140037ce6:	add    BYTE PTR [rax],al
   140037ce8:	sbb    BYTE PTR [rbx-0x6182fffe],ch
   140037cee:	add    BYTE PTR [rax],al
   140037cf0:	add    DWORD PTR [rsi],eax
   140037cf2:	add    al,BYTE PTR [rax]
   140037cf4:	(bad)  
   140037cf5:	xor    al,BYTE PTR [rdx]
   140037cf7:	push   rax
   140037cf8:	add    DWORD PTR [rcx+rax*1],eax
   140037cfb:	add    BYTE PTR [rdx+rax*2],al
   140037cfe:	add    BYTE PTR [rax],al
   140037d00:	add    DWORD PTR [rsi],eax
   140037d02:	add    al,BYTE PTR [rax]
   140037d04:	(bad)  
   140037d05:	xor    al,BYTE PTR [rdx]
   140037d07:	xor    BYTE PTR [rcx],al
   140037d09:	or     BYTE PTR [rdx],al
   140037d0b:	add    BYTE PTR [rax],cl
   140037d0d:	xchg   edx,eax
   140037d0e:	add    al,0x30
   140037d10:	add    DWORD PTR [rdi],ecx
   140037d12:	(bad)  
   140037d13:	add    BYTE PTR [rdi],cl
   140037d15:	fs (bad) 
   140037d17:	add    BYTE PTR [rdi],cl
   140037d19:	xor    al,0x6
   140037d1b:	add    BYTE PTR [rdi],cl
   140037d1d:	xor    cl,BYTE PTR [rbx]
   140037d1f:	jo     0x140037d3a
   140037d21:	or     DWORD PTR es:[rax],eax
   140037d24:	sbb    BYTE PTR [rax+0xe],ch
   140037d27:	add    BYTE PTR [rcx+rax*1],dl
   140037d2a:	(bad)  
   140037d2b:	add    BYTE PTR [rcx],cl
   140037d2d:	loopne 0x140037d36
   140037d2f:	jo     0x140037d37
   140037d31:	(bad)  
   140037d32:	add    eax,0x500430
   140037d37:	add    al,ah
   140037d39:	ret    0x0
   140037d3c:	rol    BYTE PTR [rax],1
   140037d3e:	add    BYTE PTR [rax],al
   140037d40:	sbb    DWORD PTR [rsi],esp
   140037d42:	or     DWORD PTR [rax],eax
   140037d44:	sbb    BYTE PTR [rax+0xe],ch
   140037d47:	add    BYTE PTR [rcx+rax*1],dl
   140037d4a:	(bad)  
   140037d4b:	add    BYTE PTR [rcx],cl
   140037d4d:	loopne 0x140037d56
   140037d4f:	jo     0x140037d57
   140037d51:	(bad)  
   140037d52:	add    eax,0x500430
   140037d57:	add    al,ah
   140037d59:	ret    0x0
   140037d5c:	rol    BYTE PTR [rax],1
   140037d5e:	add    BYTE PTR [rax],al
   140037d60:	add    DWORD PTR [rsi],eax
   140037d62:	add    al,BYTE PTR [rax]
   140037d64:	(bad)  
   140037d65:	xor    al,BYTE PTR [rdx]
   140037d67:	xor    BYTE PTR [rcx],al
   140037d69:	or     al,BYTE PTR [rax+rax*1]
   140037d6c:	or     dh,BYTE PTR [rsi+rax*1]
   140037d6f:	add    BYTE PTR [rdx],cl
   140037d71:	xor    al,BYTE PTR [rsi]
   140037d73:	jo     0x140037d86
   140037d75:	adc    eax,DWORD PTR [rax+rax*1]
   140037d78:	adc    esi,DWORD PTR [rdi+rax*1]
   140037d7b:	add    BYTE PTR [rbx],dl
   140037d7d:	xor    cl,BYTE PTR [rdi]
   140037d7f:	jo     0x140037dc1
   140037d81:	mov    BYTE PTR [rax],al
   140037d83:	add    BYTE PTR [rdx],al
   140037d85:	add    BYTE PTR [rax],al
   140037d87:	add    BYTE PTR [rbx+riz*4],bl
   140037d8a:	add    BYTE PTR [rax],al
   140037d8c:	rex.WB movabs ds:0x2ab440000,rax
   140037d96:	add    BYTE PTR [rax],al
   140037d98:	pop    rbx
   140037d99:	movabs ds:0xab5d0000a3920000,eax
   140037da2:	add    al,BYTE PTR [rax]
   140037da4:	add    BYTE PTR [rax],al
   140037da6:	add    BYTE PTR [rax],al
   140037da8:	add    DWORD PTR [rsi],eax
   140037daa:	add    al,BYTE PTR [rax]
   140037dac:	(bad)  
   140037dad:	xor    al,BYTE PTR [rdx]
   140037daf:	push   rax
   140037db0:	add    DWORD PTR [rsi],eax
   140037db2:	add    al,BYTE PTR [rax]
   140037db4:	(bad)  
   140037db5:	xor    al,BYTE PTR [rdx]
   140037db7:	push   rax
   140037db8:	add    DWORD PTR [rsi],eax
   140037dba:	add    al,BYTE PTR [rax]
   140037dbc:	(bad)  
   140037dbd:	xor    al,BYTE PTR [rdx]
   140037dbf:	xor    BYTE PTR [rcx],dl
   140037dc1:	or     al,BYTE PTR [rax+rax*1]
   140037dc4:	or     dh,BYTE PTR [rsi+rax*1]
   140037dc7:	add    BYTE PTR [rdx],cl
   140037dc9:	xor    al,BYTE PTR [rsi]
   140037dcb:	jo     0x140037e0d
   140037dcd:	mov    BYTE PTR [rax],al
   140037dcf:	add    BYTE PTR [rdx],al
   140037dd1:	add    BYTE PTR [rax],al
   140037dd3:	add    bl,bh
   140037dd5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140037dd6:	add    BYTE PTR [rax],al
   140037dd8:	add    eax,0x760000a5
   140037ddd:	stos   DWORD PTR es:[rdi],eax
   140037dde:	add    al,BYTE PTR [rax]
   140037de0:	add    BYTE PTR [rax],al
   140037de2:	add    BYTE PTR [rax],al
   140037de4:	sbb    ah,BYTE PTR [rbp-0x5abf0000]
   140037dea:	add    BYTE PTR [rax],al
   140037dec:	(bad)  
   140037ded:	stos   DWORD PTR es:[rdi],eax
   140037dee:	add    al,BYTE PTR [rax]
   140037df0:	add    BYTE PTR [rax],al
   140037df2:	add    BYTE PTR [rax],al
   140037df4:	add    DWORD PTR [rsi],eax
   140037df6:	add    al,BYTE PTR [rax]
   140037df8:	(bad)  
   140037df9:	xor    al,BYTE PTR [rdx]
   140037dfb:	push   rax
   140037dfc:	add    DWORD PTR [rsi],eax
   140037dfe:	add    al,BYTE PTR [rax]
   140037e00:	(bad)  
   140037e01:	xor    al,BYTE PTR [rdx]
   140037e03:	push   rax
   140037e04:	add    DWORD PTR [rsi],eax
   140037e06:	add    al,BYTE PTR [rax]
   140037e08:	(bad)  
   140037e09:	xor    al,BYTE PTR [rdx]
   140037e0b:	xor    BYTE PTR [rcx],al
   140037e0d:	add    al,0x1
   140037e0f:	add    BYTE PTR [rdx+rax*2],al
   140037e12:	add    BYTE PTR [rax],al
   140037e14:	adc    DWORD PTR [rcx],ebx
   140037e16:	or     al,BYTE PTR [rax]
   140037e18:	sbb    DWORD PTR [rbx+rdx*1+0x0],esi
   140037e1c:	sbb    DWORD PTR [rdx+rdx*1+0x0],esp
   140037e20:	sbb    DWORD PTR [rcx+rdx*1],esi
   140037e23:	add    BYTE PTR [rcx],bl
   140037e25:	mov    dl,0x15
   140037e27:	lock adc esp,eax
   140037e2a:	adc    eax,eax
   140037e2c:	mov    BYTE PTR [rax],al
   140037e2f:	add    BYTE PTR [rcx],al
   140037e31:	add    BYTE PTR [rax],al
   140037e33:	add    bl,bh
   140037e35:	mov    bh,0x0
   140037e37:	add    ch,cl
   140037e39:	mov    eax,0xad1a0000
   140037e3e:	add    al,BYTE PTR [rax]
   140037e40:	add    BYTE PTR [rax],al
   140037e42:	add    BYTE PTR [rax],al
   140037e44:	add    DWORD PTR [rsi],eax
   140037e46:	add    al,BYTE PTR [rax]
   140037e48:	(bad)  
   140037e49:	xor    al,BYTE PTR [rdx]
   140037e4b:	push   rax
   140037e4c:	add    DWORD PTR [rdx],ecx
   140037e4e:	add    al,0x0
   140037e50:	or     dh,BYTE PTR [rsi+rax*1]
   140037e53:	add    BYTE PTR [rdx],cl
   140037e55:	xor    al,BYTE PTR [rsi]
   140037e57:	jo     0x140037e5a
   140037e59:	add    al,0x1
   140037e5b:	add    BYTE PTR [rdx+rax*2],al
   140037e5e:	add    BYTE PTR [rax],al
   140037e60:	add    DWORD PTR [rdx],ecx
   140037e62:	add    al,0x0
   140037e64:	or     dh,BYTE PTR [rsi+rax*1]
   140037e67:	add    BYTE PTR [rdx],cl
   140037e69:	xor    al,BYTE PTR [rsi]
   140037e6b:	jo     0x140037e6e
   140037e6d:	sbb    DWORD PTR [rdx],ecx
   140037e6f:	add    BYTE PTR [rcx],bl
   140037e71:	je     0x140037e7c
   140037e73:	add    BYTE PTR [rcx],bl
   140037e75:	or     BYTE PTR fs:[rax],al
   140037e78:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140037e7c:	sbb    DWORD PTR [rsi+rax*1],esi
   140037e7f:	add    BYTE PTR [rcx],bl
   140037e81:	xor    dl,BYTE PTR [rip+0x10401e0]        # 0x141078067
   140037e87:	add    BYTE PTR [rdx+rax*2],al
   140037e8a:	add    BYTE PTR [rax],al
   140037e8c:	sbb    DWORD PTR [rbx],edx
   140037e8e:	or     DWORD PTR [rax],eax
   140037e90:	adc    eax,DWORD PTR [rcx]
   140037e92:	adc    al,BYTE PTR [rax]
   140037e94:	or     al,0xf0
   140037e96:	or     ah,al
   140037e98:	or     al,dl
   140037e9a:	(bad)  
   140037e9b:	rol    BYTE PTR [rax+rsi*2],0x3
   140037e9f:	(bad)  
   140037ea0:	add    dh,BYTE PTR [rax]
   140037ea2:	add    BYTE PTR [rax],al
   140037ea4:	mov    BYTE PTR [rax],al
   140037ea7:	add    BYTE PTR [rdx],al
   140037ea9:	add    BYTE PTR [rax],al
   140037eab:	add    dl,bl
   140037ead:	mov    ch,0x0
   140037eaf:	add    bh,bh
   140037eb1:	mov    ch,0x0
   140037eb3:	add    BYTE PTR [rax-0xfffd55],ch
   140037eb9:	mov    ch,0x0
   140037ebb:	add    dl,bl
   140037ebd:	mov    ch,0x0
   140037ebf:	add    BYTE PTR [rdx-0x4a],bh
   140037ec2:	add    BYTE PTR [rax],al
   140037ec4:	pushf  
   140037ec5:	lods   al,BYTE PTR ds:[rsi]
   140037ec6:	add    al,BYTE PTR [rax]
   140037ec8:	add    BYTE PTR [rax],al
   140037eca:	add    BYTE PTR [rax],al
   140037ecc:	add    DWORD PTR [rsi],eax
   140037ece:	add    al,BYTE PTR [rax]
   140037ed0:	(bad)  
   140037ed1:	xor    al,BYTE PTR [rdx]
   140037ed3:	push   rax
   140037ed4:	add    DWORD PTR [rdi],eax
   140037ed6:	add    eax,DWORD PTR [rax]
   140037ed8:	(bad)  
   140037ed9:	rex.X add edx,DWORD PTR [rax+0x2]
   140037edd:	xor    BYTE PTR [rax],al
   140037edf:	add    BYTE PTR [rcx],al
   140037ee1:	or     al,BYTE PTR [rdx]
   140037ee3:	add    BYTE PTR [rdx],cl
   140037ee5:	xor    al,BYTE PTR [rsi]
   140037ee7:	xor    BYTE PTR [rcx],al
   140037ee9:	(bad)  
   140037eea:	add    al,BYTE PTR [rax]
   140037eec:	(bad)  
   140037eed:	xor    al,BYTE PTR [rdx]
   140037eef:	xor    BYTE PTR [rcx],al
   140037ef1:	or     al,BYTE PTR [rax+rax*1]
   140037ef4:	or     dh,BYTE PTR [rsi+rax*1]
   140037ef7:	add    BYTE PTR [rdx],cl
   140037ef9:	xor    al,BYTE PTR [rsi]
   140037efb:	jo     0x140037f16
   140037efd:	and    cl,BYTE PTR [rax]
   140037eff:	add    BYTE PTR [rdx],ah
   140037f01:	push   rdx
   140037f02:	(bad)  
   140037f03:	lock sbb al,0xe0
   140037f06:	sbb    dl,al
   140037f08:	sbb    al,al
   140037f0a:	(bad)  
   140037f0b:	jo     0x140037f22
   140037f0d:	(bad)  
   140037f0e:	adc    al,0x30
   140037f10:	mov    BYTE PTR [rax],al
   140037f13:	add    BYTE PTR [rdx],al
   140037f15:	add    BYTE PTR [rax],al
   140037f17:	add    BYTE PTR [rdi],bh
   140037f19:	mov    esp,0xbcd60000
   140037f1e:	add    BYTE PTR [rax],al
   140037f20:	rex.WR lods rax,QWORD PTR ds:[rsi]
   140037f22:	add    al,BYTE PTR [rax]
   140037f24:	(bad)  
   140037f25:	mov    esp,0xbc070000
   140037f2a:	add    BYTE PTR [rax],al
   140037f2c:	std    
   140037f2d:	mov    esp,0xad620000
   140037f32:	add    al,BYTE PTR [rax]
   140037f34:	add    BYTE PTR [rax],al
   140037f36:	add    BYTE PTR [rax],al
   140037f38:	add    DWORD PTR [rsi],eax
   140037f3a:	add    al,BYTE PTR [rax]
   140037f3c:	(bad)  
   140037f3d:	xor    al,BYTE PTR [rdx]
   140037f3f:	push   rax
   140037f40:	add    DWORD PTR [rsi],eax
   140037f42:	add    al,BYTE PTR [rax]
   140037f44:	(bad)  
   140037f45:	xor    al,BYTE PTR [rdx]
   140037f47:	push   rax
   140037f48:	add    DWORD PTR [rcx],esp
   140037f4a:	or     eax,DWORD PTR [rax]
   140037f4c:	and    DWORD PTR [rdi+rbx*1],esi
   140037f4f:	add    BYTE PTR [rcx],ah
   140037f51:	add    DWORD PTR [rsi],edx
   140037f53:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e39349
   140037f59:	ror    BYTE PTR [rdi],1
   140037f5b:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b638bd2
   140037f62:	add    BYTE PTR [rax],al
   140037f64:	add    DWORD PTR [rdi],edx
   140037f66:	or     al,BYTE PTR [rax]
   140037f68:	(bad)  
   140037f69:	push   rsp
   140037f6a:	adc    al,BYTE PTR [rax]
   140037f6c:	(bad)  
   140037f6d:	xor    al,0x10
   140037f6f:	add    BYTE PTR [rdi],dl
   140037f71:	xchg   edx,eax
   140037f72:	adc    esi,eax
   140037f74:	adc    eax,esp
   140037f76:	xadd   BYTE PTR [rip+0x9600c70],cl        # 0x149638bed
   140037f7d:	adc    eax,0x74150008
   140037f82:	or     BYTE PTR [rax],al
   140037f84:	adc    eax,0x15000764
   140037f89:	xor    al,0x6
   140037f8b:	add    BYTE PTR [rip+0x40e01132],dl        # 0x180e390c3
   140037f91:	mov    BYTE PTR [rax],al
   140037f93:	add    BYTE PTR [rcx],al
   140037f95:	add    BYTE PTR [rax],al
   140037f97:	add    BYTE PTR [rax],ah
   140037f99:	mov    dl,0x0
   140037f9b:	add    BYTE PTR [rdx+0x10000b2],cl
   140037fa1:	add    BYTE PTR [rax],al
   140037fa3:	add    BYTE PTR [rdx+0x10000b2],cl
   140037fa9:	sbb    DWORD PTR [rdx],ecx
   140037fab:	add    BYTE PTR [rcx],bl
   140037fad:	je     0x140037fb8
   140037faf:	add    BYTE PTR [rcx],bl
   140037fb1:	or     BYTE PTR fs:[rax],al
   140037fb4:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140037fb8:	sbb    DWORD PTR [rsi+rax*1],esi
   140037fbb:	add    BYTE PTR [rcx],bl
   140037fbd:	xor    dl,BYTE PTR [rip+0x60f01e0]        # 0x1461281a3
   140037fc3:	add    BYTE PTR [rdi],cl
   140037fc5:	fs (bad) 
   140037fc7:	add    BYTE PTR [rdi],cl
   140037fc9:	xor    al,0x6
   140037fcb:	add    BYTE PTR [rdi],cl
   140037fcd:	xor    cl,BYTE PTR [rbx]
   140037fcf:	jo     0x140037fd2
   140037fd1:	sbb    DWORD PTR [rdx],ecx
   140037fd3:	add    BYTE PTR [rcx],bl
   140037fd5:	xor    al,0x17
   140037fd7:	add    BYTE PTR [rcx],bl
   140037fd9:	rcl    BYTE PTR [rip+0x11e013f0],cl        # 0x151e393cf
   140037fdf:	ror    BYTE PTR [rdi],1
   140037fe1:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b638c58
   140037fe8:	add    DWORD PTR [rcx+rax*1],eax
   140037feb:	add    BYTE PTR [rdx+rax*2],al
   140037fee:	add    BYTE PTR [rax],al
   140037ff0:	add    DWORD PTR [rdx],ecx
   140037ff2:	add    al,0x0
   140037ff4:	or     dh,BYTE PTR [rsi+rax*1]
   140037ff7:	add    BYTE PTR [rdx],cl
   140037ff9:	xor    al,BYTE PTR [rsi]
   140037ffb:	jo     0x140038006
   140037ffd:	or     eax,0x420d0001
   140038002:	add    BYTE PTR [rax],al
   140038004:	mov    BYTE PTR [rax],al
   140038007:	add    BYTE PTR [rcx],al
   140038009:	add    BYTE PTR [rax],al
   14003800b:	add    BYTE PTR [rip+0x460000a6],dh        # 0x1860380b7
   140038011:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140038012:	add    BYTE PTR [rax],al
   140038014:	xor    al,0xad
   140038016:	add    al,BYTE PTR [rax]
   140038018:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003801a:	add    BYTE PTR [rax],al
   14003801c:	add    DWORD PTR [rsi],eax
   14003801e:	add    al,BYTE PTR [rax]
   140038020:	(bad)  
   140038021:	xor    al,BYTE PTR [rdx]
   140038023:	push   rax
   140038024:	add    DWORD PTR [rsp+rcx*1],ebx
   140038027:	add    BYTE PTR [rsp+riz*2],bl
   14003802a:	or     al,0x0
   14003802c:	sbb    al,0x54
   14003802e:	or     eax,DWORD PTR [rax]
   140038030:	sbb    al,0x34
   140038032:	or     al,BYTE PTR [rax]
   140038034:	sbb    al,0x32
   140038036:	sbb    al,dh
   140038038:	(bad)  
   140038039:	loopne 0x14003804f
   14003803b:	rcl    BYTE PTR [rdx],1
   14003803d:	rcl    BYTE PTR [rax],0x70
   140038040:	add    DWORD PTR [rax+rcx*1],edx
   140038043:	add    BYTE PTR [rsp+riz*2],dl
   140038046:	or     BYTE PTR [rax],al
   140038048:	adc    al,0x54
   14003804a:	(bad)  
   14003804b:	add    BYTE PTR [rsp+rsi*1],dl
   14003804e:	(bad)  
   14003804f:	add    BYTE PTR [rdx+rsi*1],dl
   140038052:	adc    BYTE PTR [rax+0x1],dh
   140038055:	sbb    BYTE PTR [rdx],cl
   140038057:	add    BYTE PTR [rax],bl
   140038059:	fs (bad) 
   14003805b:	add    BYTE PTR [rax],bl
   14003805d:	push   rsp
   14003805e:	or     eax,0xc341800
   140038063:	add    BYTE PTR [rax],bl
   140038065:	jb     0x14003807b
   140038067:	loopne 0x14003807b
   140038069:	rcl    BYTE PTR [rax],0x70
   14003806c:	or     DWORD PTR [rcx],ebx
   14003806e:	or     al,BYTE PTR [rax]
   140038070:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   140038074:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   140038078:	sbb    DWORD PTR [rdx+rcx*1],esi
   14003807b:	add    BYTE PTR [rcx],bl
   14003807d:	push   rdx
   14003807e:	adc    eax,0x11e013f0
   140038083:	rol    BYTE PTR [rax-0x78],1
   140038086:	add    BYTE PTR [rax],al
   140038088:	add    DWORD PTR [rax],eax
   14003808a:	add    BYTE PTR [rax],al
   14003808c:	ss mov bl,0x0
   14003808f:	add    cl,dl
   140038091:	mov    ah,0x0
   140038093:	add    BYTE PTR [rcx],al
   140038095:	add    BYTE PTR [rax],al
   140038097:	add    ch,dl
   140038099:	mov    ah,0x0
   14003809b:	add    BYTE PTR [rcx],al
   14003809d:	add    al,0x1
   14003809f:	add    BYTE PTR [rdx+rax*2],al
   1400380a2:	add    BYTE PTR [rax],al
   1400380a4:	add    DWORD PTR [rdx],ecx
   1400380a6:	add    al,0x0
   1400380a8:	or     dh,BYTE PTR [rsi+rax*1]
   1400380ab:	add    BYTE PTR [rdx],cl
   1400380ad:	xor    al,BYTE PTR [rsi]
   1400380af:	jo     0x1400380b2
   1400380b1:	(bad)  
   1400380b2:	add    al,BYTE PTR [rax]
   1400380b4:	(bad)  
   1400380b5:	xor    al,BYTE PTR [rdx]
   1400380b7:	xor    BYTE PTR [rcx],al
   1400380b9:	adc    al,0x8
   1400380bb:	add    BYTE PTR [rsp+riz*2],dl
   1400380be:	or     BYTE PTR [rax],al
   1400380c0:	adc    al,0x54
   1400380c2:	(bad)  
   1400380c3:	add    BYTE PTR [rsp+rsi*1],dl
   1400380c6:	(bad)  
   1400380c7:	add    BYTE PTR [rdx+rsi*1],dl
   1400380ca:	adc    BYTE PTR [rax+0x9],dh
   1400380cd:	add    al,0x1
   1400380cf:	add    BYTE PTR [rdx+rax*2],al
   1400380d2:	add    BYTE PTR [rax],al
   1400380d4:	mov    BYTE PTR [rax],al
   1400380d7:	add    BYTE PTR [rcx],al
   1400380d9:	add    BYTE PTR [rax],al
   1400380db:	add    BYTE PTR [rbp-0x66ffff3e],dl
   1400380e1:	ret    0x0
   1400380e4:	add    DWORD PTR [rax],eax
   1400380e6:	add    BYTE PTR [rax],al
   1400380e8:	cdq    
   1400380e9:	ret    0x0
   1400380ec:	add    DWORD PTR [rcx+rax*1],eax
   1400380ef:	add    BYTE PTR [rdx+rax*2],al
   1400380f2:	add    BYTE PTR [rax],al
   1400380f4:	or     DWORD PTR [rcx+rax*1],eax
   1400380f7:	add    BYTE PTR [rdx+rax*2],al
   1400380fa:	add    BYTE PTR [rax],al
   1400380fc:	mov    BYTE PTR [rax],al
   1400380ff:	add    BYTE PTR [rcx],al
   140038101:	add    BYTE PTR [rax],al
   140038103:	add    BYTE PTR [rsi-0x3e],dh
   140038106:	add    BYTE PTR [rax],al
   140038108:	jp     0x1400380cc
   14003810a:	add    BYTE PTR [rax],al
   14003810c:	add    DWORD PTR [rax],eax
   14003810e:	add    BYTE PTR [rax],al
   140038110:	jp     0x1400380d4
   140038112:	add    BYTE PTR [rax],al
   140038114:	add    DWORD PTR [rcx+rax*1],eax
   140038117:	add    BYTE PTR [rdx+rax*2],al
   14003811a:	add    BYTE PTR [rax],al
   14003811c:	add    DWORD PTR [rsi],eax
   14003811e:	add    al,BYTE PTR [rax]
   140038120:	(bad)  
   140038121:	xor    al,BYTE PTR [rdx]
   140038123:	xor    BYTE PTR [rcx],al
   140038125:	add    al,0x1
   140038127:	add    BYTE PTR [rdx+rax*2],al
   14003812a:	add    BYTE PTR [rax],al
   14003812c:	add    BYTE PTR [rax],al
   14003812e:	add    BYTE PTR [rax],al
   140038130:	add    DWORD PTR [rax],eax
   140038132:	add    BYTE PTR [rax],al
   140038134:	add    BYTE PTR [rax],al
   140038136:	add    BYTE PTR [rax],al
   140038138:	add    DWORD PTR [rax],eax
   14003813a:	add    BYTE PTR [rax],al
   14003813c:	adc    DWORD PTR [rcx],ebx
   14003813e:	or     al,BYTE PTR [rax]
   140038140:	sbb    esp,esp
   140038142:	or     eax,DWORD PTR [rax]
   140038144:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140038148:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14003814c:	sbb    DWORD PTR [rax+rcx*1],esi
   14003814f:	add    BYTE PTR [rcx],bl
   140038151:	push   rdx
   140038152:	adc    eax,0x8840f0
   140038157:	add    BYTE PTR [rcx],al
   140038159:	add    BYTE PTR [rax],al
   14003815b:	add    BYTE PTR [rdx+0x230000c4],ch
   140038161:	(bad)
   140038164:	mov    ebp,DWORD PTR [rbp+0x2]
   14003816a:	add    BYTE PTR [rax],al
   14003816c:	add    DWORD PTR [rsi],eax
   14003816e:	add    al,BYTE PTR [rax]
   140038170:	(bad)  
   140038171:	push   rdx
   140038172:	add    dl,BYTE PTR [rax+0x11]
   140038175:	(bad)  
   140038176:	add    al,BYTE PTR [rax]
   140038178:	(bad)  
   140038179:	push   rdx
   14003817a:	add    dh,BYTE PTR [rax]
   14003817c:	mov    BYTE PTR [rax],al
   14003817f:	add    BYTE PTR [rcx],al
   140038181:	add    BYTE PTR [rax],al
   140038183:	add    BYTE PTR [rsi+rax*8-0x38fc0000],bh
   14003818a:	add    BYTE PTR [rax],al
   14003818c:	mov    edi,0x2ad
   140038191:	add    BYTE PTR [rax],al
   140038193:	add    BYTE PTR [rcx],al
   140038195:	(bad)  
   140038196:	add    al,BYTE PTR [rax]
   140038198:	(bad)  
   140038199:	xor    al,BYTE PTR [rdx]
   14003819b:	push   rax
   14003819c:	adc    DWORD PTR [rcx],ebx
   14003819e:	or     al,BYTE PTR [rax]
   1400381a0:	sbb    DWORD PTR [rsi+rcx*1+0x0],esi
   1400381a4:	sbb    DWORD PTR [rbp+rcx*1+0x0],esp
   1400381a8:	sbb    DWORD PTR [rsp+rcx*1],esi
   1400381ab:	add    BYTE PTR [rcx],bl
   1400381ad:	jb     0x1400381c4
   1400381af:	lock adc esp,eax
   1400381b2:	adc    eax,eax
   1400381b4:	mov    BYTE PTR [rax],al
   1400381b7:	add    BYTE PTR [rdx],al
   1400381b9:	add    BYTE PTR [rax],al
   1400381bb:	add    BYTE PTR [rsi-0x2bffff3b],al
   1400381c1:	(bad)
   1400381c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400381c5:	lods   eax,DWORD PTR ds:[rsi]
   1400381c6:	add    al,BYTE PTR [rax]
   1400381c8:	add    BYTE PTR [rax],al
   1400381ca:	add    BYTE PTR [rax],al
   1400381cc:	fadd   st(5),st
   1400381ce:	add    BYTE PTR [rax],al
   1400381d0:	jge    0x140038198
   1400381d2:	add    BYTE PTR [rax],al
   1400381d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400381d5:	lods   eax,DWORD PTR ds:[rsi]
   1400381d6:	add    al,BYTE PTR [rax]
   1400381d8:	add    BYTE PTR [rax],al
   1400381da:	add    BYTE PTR [rax],al
   1400381dc:	add    DWORD PTR [rsi],eax
   1400381de:	add    al,BYTE PTR [rax]
   1400381e0:	(bad)  
   1400381e1:	push   rdx
   1400381e2:	add    dl,BYTE PTR [rax+0x11]
   1400381e5:	(bad)  
   1400381e6:	add    al,BYTE PTR [rax]
   1400381e8:	(bad)  
   1400381e9:	push   rdx
   1400381ea:	add    dh,BYTE PTR [rax]
   1400381ec:	mov    BYTE PTR [rax],al
   1400381ef:	add    BYTE PTR [rcx],al
   1400381f1:	add    BYTE PTR [rax],al
   1400381f3:	add    BYTE PTR [rax],ch
   1400381f5:	mov    DWORD PTR [rax],0xc77000
   1400381fb:	add    al,bl
   1400381fd:	lods   eax,DWORD PTR ds:[rsi]
   1400381fe:	add    al,BYTE PTR [rax]
   140038200:	add    BYTE PTR [rax],al
   140038202:	add    BYTE PTR [rax],al
   140038204:	add    DWORD PTR [rsi],eax
   140038206:	add    al,BYTE PTR [rax]
   140038208:	(bad)  
   140038209:	xor    al,BYTE PTR [rdx]
   14003820b:	push   rax
   14003820c:	add    DWORD PTR [rcx+rax*1],eax
   14003820f:	add    BYTE PTR [rdx+riz*2],al
   140038212:	add    BYTE PTR [rax],al
   140038214:	adc    DWORD PTR [rdx],ecx
   140038216:	add    al,0x0
   140038218:	or     dh,BYTE PTR [rsi+rax*1]
   14003821b:	add    BYTE PTR [rdx],cl
   14003821d:	xor    al,BYTE PTR [rsi]
   14003821f:	jo     0x140038261
   140038221:	mov    BYTE PTR [rax],al
   140038223:	add    BYTE PTR [rcx],al
   140038225:	add    BYTE PTR [rax],al
   140038227:	add    BYTE PTR [rax-0x45ffff39],bl
   14003822d:	mov    DWORD PTR [rax],0x2adf100
   140038233:	add    BYTE PTR [rax],al
   140038235:	add    BYTE PTR [rax],al
   140038237:	add    BYTE PTR [rcx],al
   140038239:	(bad)  
   14003823a:	add    al,BYTE PTR [rax]
   14003823c:	(bad)  
   14003823d:	xor    al,BYTE PTR [rdx]
   14003823f:	push   rax
   140038240:	add    DWORD PTR [rcx+rax*1],eax
   140038243:	add    BYTE PTR [rdx+riz*2],al
   140038246:	add    BYTE PTR [rax],al
   140038248:	add    DWORD PTR [rcx+rax*1],eax
   14003824b:	add    BYTE PTR [rdx+riz*2],al
   14003824e:	add    BYTE PTR [rax],al
   140038250:	add    DWORD PTR [rcx+rax*1],eax
   140038253:	add    BYTE PTR [rdx+riz*2],al
   140038256:	add    BYTE PTR [rax],al
   140038258:	add    DWORD PTR [rcx+rax*1],eax
   14003825b:	add    BYTE PTR [rdx+rax*4],al
   14003825e:	add    BYTE PTR [rax],al
   140038260:	add    DWORD PTR [rcx+rax*1],eax
   140038263:	add    BYTE PTR [rdx+riz*2],al
   140038266:	add    BYTE PTR [rax],al
   140038268:	add    DWORD PTR [rsi],eax
   14003826a:	add    al,BYTE PTR [rax]
   14003826c:	(bad)  
   14003826d:	jb     0x140038271
   14003826f:	xor    BYTE PTR [rcx],al
   140038271:	(bad)  
   140038272:	add    al,BYTE PTR [rax]
   140038274:	(bad)  
   140038275:	push   rdx
   140038276:	add    dh,BYTE PTR [rax]
   140038278:	add    DWORD PTR [rsi],eax
   14003827a:	add    al,BYTE PTR [rax]
   14003827c:	(bad)  
   14003827d:	jb     0x140038281
   14003827f:	xor    BYTE PTR [rcx],al
   140038281:	(bad)  
   140038282:	add    al,0x0
   140038284:	(bad)  
   140038285:	xor    al,0x6
   140038287:	add    BYTE PTR [rsi],cl
   140038289:	xor    cl,BYTE PTR [rdx]
   14003828b:	jo     0x14003828e
   14003828d:	sbb    eax,0x741d000c
   140038292:	adc    DWORD PTR [rax],eax
   140038294:	sbb    eax,0x1d001064
   140038299:	push   rsp
   14003829a:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d0390d5
   1400382a1:	xchg   edx,eax
   1400382a2:	sbb    eax,esi
   1400382a4:	(bad)  
   1400382a5:	loopne 0x1400382bc
   1400382a7:	rcr    BYTE PTR [rcx],1
   1400382a9:	sbb    eax,DWORD PTR [rsi]
   1400382ab:	add    BYTE PTR [rcx+rax*1],cl
   1400382ae:	adc    DWORD PTR [rax],eax
   1400382b0:	add    eax,0x3600470
   1400382b5:	push   rax
   1400382b6:	add    dh,BYTE PTR [rax]
   1400382b8:	loopne 0x14003827c
   1400382ba:	add    BYTE PTR [rax],al
   1400382bc:	jo     0x1400382be
   1400382be:	add    BYTE PTR [rax],al
   1400382c0:	add    DWORD PTR [rsp+rcx*1],ebx
   1400382c3:	add    BYTE PTR [rsp+riz*2],bl
   1400382c6:	adc    al,BYTE PTR [rax]
   1400382c8:	sbb    al,0x54
   1400382ca:	adc    DWORD PTR [rax],eax
   1400382cc:	sbb    al,0x34
   1400382ce:	adc    BYTE PTR [rax],al
   1400382d0:	sbb    al,0x92
   1400382d2:	sbb    al,dh
   1400382d4:	(bad)  
   1400382d5:	loopne 0x1400382eb
   1400382d7:	rcl    BYTE PTR [rdx],1
   1400382d9:	rcl    BYTE PTR [rax],0x70
   1400382dc:	add    DWORD PTR [rcx],ebx
   1400382de:	or     al,BYTE PTR [rax]
   1400382e0:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   1400382e4:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   1400382e8:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   1400382ec:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400382ef:	add    BYTE PTR [rcx],bl
   1400382f1:	jb     0x140038308
   1400382f3:	loopne 0x14003830e
   1400382f5:	sbb    BYTE PTR [rip+0x5e20900],al        # 0x145e58bfb
   1400382fb:	jo     0x140038301
   1400382fd:	(bad)  
   1400382fe:	add    edx,DWORD PTR [rax+0x2]
   140038301:	xor    BYTE PTR [rax],al
   140038303:	add    al,ah
   140038305:	ret    0x0
   140038308:	(bad)  
   140038309:	add    BYTE PTR [rax],al
   14003830b:	add    BYTE PTR [rcx],bl
   14003830d:	sbb    eax,0xf20e0006
   140038312:	(bad)  
   140038313:	loopne 0x14003831a
   140038315:	jo     0x14003831b
   140038317:	(bad)  
   140038318:	add    edx,DWORD PTR [rax+0x2]
   14003831b:	xor    al,ah
   14003831d:	ret    0x0
   140038320:	jo     0x140038322
   140038322:	add    BYTE PTR [rax],al
   140038324:	add    DWORD PTR [rcx+rax*1],eax
   140038327:	add    BYTE PTR [rdx+riz*2],al
   14003832a:	add    BYTE PTR [rax],al
   14003832c:	add    DWORD PTR [rdx],ecx
   14003832e:	add    al,0x0
   140038330:	or     dh,BYTE PTR [rsi+rax*1]
   140038333:	add    BYTE PTR [rdx],cl
   140038335:	xor    al,BYTE PTR [rsi]
   140038337:	jo     0x14003833a
   140038339:	add    al,0x1
   14003833b:	add    BYTE PTR [rdx+rax*2],al
   14003833e:	add    BYTE PTR [rax],al
   140038340:	add    DWORD PTR [rcx+rax*1],eax
   140038343:	add    BYTE PTR [rdx+rax*2],al
   140038346:	add    BYTE PTR [rax],al
   140038348:	add    DWORD PTR [rax+rcx*1],edx
   14003834b:	add    BYTE PTR [rsp+riz*2],dl
   14003834e:	or     BYTE PTR [rax],al
   140038350:	adc    al,0x54
   140038352:	(bad)  
   140038353:	add    BYTE PTR [rsp+rsi*1],dl
   140038356:	(bad)  
   140038357:	add    BYTE PTR [rdx+rsi*1],dl
   14003835a:	adc    BYTE PTR [rax+0x1],dh
   14003835d:	add    al,0x1
   14003835f:	add    BYTE PTR [rdx+rax*2],al
   140038362:	add    BYTE PTR [rax],al
   140038364:	adc    DWORD PTR [rax],esp
   140038366:	or     eax,0x1fc42000
   14003836b:	add    BYTE PTR [rax],ah
   14003836d:	je     0x14003838d
   14003836f:	add    BYTE PTR [rax],ah
   140038371:	fs sbb eax,0x1c342000
   140038377:	add    BYTE PTR [rax],ah
   140038379:	add    DWORD PTR [rax],ebx
   14003837b:	add    BYTE PTR [rcx],bl
   14003837d:	lock (bad) 
   14003837f:	loopne 0x140038396
   140038381:	rol    BYTE PTR [rax],1
   140038383:	add    BYTE PTR [rax-0x78],al
   140038386:	add    BYTE PTR [rax],al
   140038388:	add    al,BYTE PTR [rax]
   14003838a:	add    BYTE PTR [rax],al
   14003838c:	in     al,0xd7
   14003838e:	add    BYTE PTR [rax],al
   140038390:	(bad)  
   140038391:	fadd   DWORD PTR [rax]
   140038393:	add    BYTE PTR [rdx],cl
   140038395:	scas   al,BYTE PTR es:[rdi]
   140038396:	add    al,BYTE PTR [rax]
   140038398:	add    BYTE PTR [rax],al
   14003839a:	add    BYTE PTR [rax],al
   14003839c:	and    al,bl
   14003839e:	add    BYTE PTR [rax],al
   1400383a0:	mov    bl,0xda
   1400383a2:	add    BYTE PTR [rax],al
   1400383a4:	or     ch,BYTE PTR [rsi+0x2]
   1400383aa:	add    BYTE PTR [rax],al
   1400383ac:	add    DWORD PTR [rsi],eax
   1400383ae:	add    al,BYTE PTR [rax]
   1400383b0:	(bad)  
   1400383b1:	xor    al,BYTE PTR [rdx]
   1400383b3:	push   rax
   1400383b4:	add    DWORD PTR [rdi],ecx
   1400383b6:	(bad)  
   1400383b7:	add    BYTE PTR [rdi],cl
   1400383b9:	fs (bad) 
   1400383bb:	add    BYTE PTR [rdi],cl
   1400383bd:	xor    al,0x6
   1400383bf:	add    BYTE PTR [rdi],cl
   1400383c1:	xor    cl,BYTE PTR [rbx]
   1400383c3:	jo     0x1400383c6
   1400383c5:	clts   
   1400383c7:	add    BYTE PTR [rdi],cl
   1400383c9:	or     eax,DWORD PTR fs:[rax]
   1400383cc:	sysenter 
   1400383ce:	or     al,BYTE PTR [rax]
   1400383d0:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400383d3:	jo     0x1400383d6
   1400383d5:	sbb    eax,0x741d000c
   1400383da:	or     eax,DWORD PTR [rax]
   1400383dc:	sbb    eax,0x1d000a64
   1400383e1:	push   rsp
   1400383e2:	or     DWORD PTR [rax],eax
   1400383e4:	sbb    eax,0x1d000834
   1400383e9:	xor    bl,BYTE PTR [rcx]
   1400383eb:	lock (bad) 
   1400383ed:	loopne 0x140038404
   1400383ef:	rol    BYTE PTR [rcx],0x14
   1400383f2:	or     BYTE PTR [rax],al
   1400383f4:	adc    al,0x64
   1400383f6:	or     al,BYTE PTR [rax]
   1400383f8:	adc    al,0x54
   1400383fa:	or     DWORD PTR [rax],eax
   1400383fc:	adc    al,0x34
   1400383fe:	or     BYTE PTR [rax],al
   140038400:	adc    al,0x52
   140038402:	adc    BYTE PTR [rax+0x1],dh
   140038405:	add    al,0x1
   140038407:	add    BYTE PTR [rdx+rax*2],al
   14003840a:	add    BYTE PTR [rax],al
   14003840c:	sbb    DWORD PTR [rip+0x641b000b],ebp        # 0x1a41e841d
   140038412:	push   rcx
   140038413:	add    BYTE PTR [rbx],bl
   140038415:	push   rsp
   140038416:	push   rax
   140038417:	add    BYTE PTR [rbx],bl
   140038419:	xor    al,0x4f
   14003841b:	add    BYTE PTR [rbx],bl
   14003841d:	add    DWORD PTR [rdx+0x0],ecx
   140038420:	adc    al,0xf0
   140038422:	adc    ah,al
   140038424:	adc    BYTE PTR [rax+0x0],dh
   140038427:	add    al,ah
   140038429:	ret    0x0
   14003842c:	add    al,BYTE PTR [rax]
   14003842f:	add    BYTE PTR [rcx],al
   140038431:	add    al,0x1
   140038433:	add    BYTE PTR [rdx+rax*2],al
   140038436:	add    BYTE PTR [rax],al
   140038438:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x174108442
   14003843e:	or     DWORD PTR [rax],eax
   140038440:	or     eax,0x1500632
   140038445:	or     al,BYTE PTR [rax+rax*1]
   140038448:	or     dh,BYTE PTR [rsi+rax*1]
   14003844b:	add    BYTE PTR [rdx],cl
   14003844d:	xor    al,BYTE PTR [rsi]
   14003844f:	jo     0x140038452
   140038451:	or     al,BYTE PTR [rax+rax*1]
   140038454:	or     dh,BYTE PTR [rsi+rax*1]
   140038457:	add    BYTE PTR [rdx],cl
   140038459:	xor    al,BYTE PTR [rsi]
   14003845b:	jo     0x14003845e
   14003845d:	sbb    DWORD PTR [rdx],ecx
   14003845f:	add    BYTE PTR [rcx],bl
   140038461:	je     0x140038470
   140038463:	add    BYTE PTR [rcx],bl
   140038465:	fs or  al,0x0
   140038468:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   14003846c:	sbb    DWORD PTR [rdx+rcx*1],esi
   14003846f:	add    BYTE PTR [rcx],bl
   140038471:	jb     0x140038488
   140038473:	loopne 0x140038476
   140038475:	(bad)  
   140038476:	add    al,BYTE PTR [rax]
   140038478:	(bad)  
   140038479:	xor    al,BYTE PTR [rdx]
   14003847b:	xor    BYTE PTR [rcx],al
   14003847d:	(bad)  
   14003847e:	add    al,BYTE PTR [rax]
   140038480:	(bad)  
   140038481:	add    DWORD PTR [rbx],edx
   140038483:	add    BYTE PTR [rcx],al
   140038485:	(bad)  
   140038486:	add    al,BYTE PTR [rax]
   140038488:	(bad)  
   140038489:	xor    al,BYTE PTR [rdx]
   14003848b:	xor    BYTE PTR [rcx],al
   14003848d:	(bad)  
   14003848e:	add    al,BYTE PTR [rax]
   140038490:	(bad)  
   140038491:	xor    al,BYTE PTR [rdx]
   140038493:	xor    BYTE PTR [rcx],al
   140038495:	or     al,BYTE PTR [rax+rax*1]
   140038498:	or     dh,BYTE PTR [rcx*1+0x6720a00]
   14003849f:	jo     0x1400384a2
   1400384a1:	or     BYTE PTR [rax+rax*1],al
   1400384a4:	or     BYTE PTR [rdx+0x4],dh
   1400384a7:	jo     0x1400384ac
   1400384a9:	(bad)  
   1400384aa:	add    dh,BYTE PTR [rax]
   1400384ac:	add    DWORD PTR [rcx+rax*1],eax
   1400384af:	add    BYTE PTR [rdx+rax*2],al
   1400384b2:	add    BYTE PTR [rax],al
   1400384b4:	add    DWORD PTR [rcx+rax*1],eax
   1400384b7:	add    BYTE PTR [rdx+rax*2],al
   1400384ba:	add    BYTE PTR [rax],al
   1400384bc:	add    DWORD PTR [rcx+rax*1],eax
   1400384bf:	add    BYTE PTR [rdx+rax*2],al
   1400384c2:	add    BYTE PTR [rax],al
   1400384c4:	add    DWORD PTR [rcx+rax*1],eax
   1400384c7:	add    BYTE PTR [rdx+rax*2],al
   1400384ca:	add    BYTE PTR [rax],al
   1400384cc:	add    DWORD PTR [rcx+rax*1],eax
   1400384cf:	add    BYTE PTR [rdx+rax*2],al
   1400384d2:	add    BYTE PTR [rax],al
   1400384d4:	add    DWORD PTR [rcx+rax*1],eax
   1400384d7:	add    BYTE PTR [rdx+rax*2],al
   1400384da:	add    BYTE PTR [rax],al
   1400384dc:	add    DWORD PTR [rcx+rax*1],eax
   1400384df:	add    BYTE PTR [rdx+rax*2],al
   1400384e2:	add    BYTE PTR [rax],al
   1400384e4:	add    DWORD PTR [rcx+rax*1],eax
   1400384e7:	add    BYTE PTR [rdx+rax*2],al
   1400384ea:	add    BYTE PTR [rax],al
   1400384ec:	add    DWORD PTR [rcx+rax*1],eax
   1400384ef:	add    BYTE PTR [rdx+rax*2],al
   1400384f2:	add    BYTE PTR [rax],al
   1400384f4:	add    DWORD PTR [rcx+rax*1],eax
   1400384f7:	add    BYTE PTR [rdx+rax*2],al
   1400384fa:	add    BYTE PTR [rax],al
   1400384fc:	add    DWORD PTR [rcx+rax*1],eax
   1400384ff:	add    BYTE PTR [rdx+rax*2],al
   140038502:	add    BYTE PTR [rax],al
   140038504:	add    DWORD PTR [rcx+rax*1],eax
   140038507:	add    BYTE PTR [rdx+rax*2],al
   14003850a:	add    BYTE PTR [rax],al
   14003850c:	add    DWORD PTR [rcx+rax*1],eax
   14003850f:	add    BYTE PTR [rdx+rax*2],al
   140038512:	add    BYTE PTR [rax],al
   140038514:	add    DWORD PTR [rsi],eax
   140038516:	add    al,BYTE PTR [rax]
   140038518:	(bad)  
   140038519:	xor    al,BYTE PTR [rdx]
   14003851b:	xor    BYTE PTR [rcx],al
   14003851d:	add    al,0x1
   14003851f:	add    BYTE PTR [rdx+rax*2],al
   140038522:	add    BYTE PTR [rax],al
   140038524:	add    DWORD PTR [rdx],ecx
   140038526:	add    al,0x0
   140038528:	or     dh,BYTE PTR [rsi+rax*1]
   14003852b:	add    BYTE PTR [rdx],cl
   14003852d:	xor    al,BYTE PTR [rsi]
   14003852f:	jo     0x140038532
   140038531:	(bad)  
   140038532:	add    al,BYTE PTR [rax]
   140038534:	(bad)  
   140038535:	xor    al,BYTE PTR [rdx]
   140038537:	xor    BYTE PTR [rcx],al
   140038539:	add    al,0x1
   14003853b:	add    BYTE PTR [rdx+rax*2],al
   14003853e:	add    BYTE PTR [rax],al
   140038540:	add    DWORD PTR [rcx+rax*1],eax
   140038543:	add    BYTE PTR [rdx+rax*2],al
   140038546:	add    BYTE PTR [rax],al
   140038548:	adc    DWORD PTR [rip+0x74150008],edx        # 0x1b4188556
   14003854e:	or     BYTE PTR [rax],al
   140038550:	adc    eax,0x15000764
   140038555:	xor    al,0x6
   140038557:	add    BYTE PTR [rip+0x40e01132],dl        # 0x180e3968f
   14003855d:	mov    BYTE PTR [rax],al
   14003855f:	add    BYTE PTR [rcx],al
   140038561:	add    BYTE PTR [rax],al
   140038563:	add    ah,ah
   140038565:	icebp  
   140038566:	add    BYTE PTR [rax],al
   140038568:	lock xacquire add BYTE PTR [rax],al
   14003856c:	pop    rcx
   14003856d:	scas   al,BYTE PTR es:[rdi]
   14003856e:	add    al,BYTE PTR [rax]
   140038570:	add    BYTE PTR [rax],al
   140038572:	add    BYTE PTR [rax],al
   140038574:	add    DWORD PTR [rsi],eax
   140038576:	add    al,BYTE PTR [rax]
   140038578:	(bad)  
   140038579:	xor    al,BYTE PTR [rdx]
   14003857b:	push   rax
   14003857c:	adc    DWORD PTR [rdi],edx
   14003857e:	or     al,BYTE PTR [rax]
   140038580:	(bad)  
   140038581:	lldt   WORD PTR fs:[rdi]
   140038585:	xor    al,0xe
   140038587:	add    BYTE PTR [rdi],dl
   140038589:	push   rdx
   14003858a:	adc    esi,eax
   14003858c:	adc    eax,esp
   14003858e:	(bad)  
   140038590:	or     eax,0x40700bc0
   140038595:	mov    BYTE PTR [rax],al
   140038597:	add    BYTE PTR [rcx],al
   140038599:	add    BYTE PTR [rax],al
   14003859b:	add    BYTE PTR [rax-0x10],ch
   14003859e:	add    BYTE PTR [rax],al
   1400385a0:	out    dx,eax
   1400385a1:	lock add BYTE PTR [rax],al
   1400385a4:	cmp    ebp,DWORD PTR [rsi+0x2]
   1400385aa:	add    BYTE PTR [rax],al
   1400385ac:	add    DWORD PTR [rsi],eax
   1400385ae:	add    al,BYTE PTR [rax]
   1400385b0:	(bad)  
   1400385b1:	xor    al,BYTE PTR [rdx]
   1400385b3:	push   rax
   1400385b4:	adc    DWORD PTR [rdi],ecx
   1400385b6:	(bad)  
   1400385b7:	add    BYTE PTR [rdi],cl
   1400385b9:	fs (bad) 
   1400385bb:	add    BYTE PTR [rdi],cl
   1400385bd:	xor    al,0x6
   1400385bf:	add    BYTE PTR [rdi],cl
   1400385c1:	xor    cl,BYTE PTR [rbx]
   1400385c3:	jo     0x140038605
   1400385c5:	mov    BYTE PTR [rax],al
   1400385c7:	add    BYTE PTR [rcx],al
   1400385c9:	add    BYTE PTR [rax],al
   1400385cb:	add    BYTE PTR [rbp-0x8ffff12],ch
   1400385d1:	out    dx,al
   1400385d2:	add    BYTE PTR [rax],al
   1400385d4:	and    eax,0x2ae
   1400385d9:	add    BYTE PTR [rax],al
   1400385db:	add    BYTE PTR [rcx],al
   1400385dd:	(bad)  
   1400385de:	add    al,BYTE PTR [rax]
   1400385e0:	(bad)  
   1400385e1:	xor    al,BYTE PTR [rdx]
   1400385e3:	push   rax
   1400385e4:	add    DWORD PTR [rsi],eax
   1400385e6:	add    al,BYTE PTR [rax]
   1400385e8:	(bad)  
   1400385e9:	xor    al,BYTE PTR [rdx]
   1400385eb:	xor    BYTE PTR [rcx],al
   1400385ed:	clts   
   1400385ef:	add    BYTE PTR [rdi],cl
   1400385f1:	fs or  eax,0xc340f00
   1400385f7:	add    BYTE PTR [rdi],cl
   1400385f9:	xchg   edx,eax
   1400385fa:	or     esi,DWORD PTR [rax+0x1]
   1400385fd:	add    al,0x1
   1400385ff:	add    BYTE PTR [rdx+rax*2],al
   140038602:	add    BYTE PTR [rax],al
   140038604:	sbb    DWORD PTR [rip+0x741f450d],ebp        # 0x1b422cb17
   14003860a:	adc    al,BYTE PTR [rax]
   14003860c:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   140038610:	(bad)  
   140038611:	xor    al,0x10
   140038613:	add    BYTE PTR [rbx],dl
   140038615:	rex.XB (bad) 
   140038617:	xchg   edx,eax
   140038618:	or     dh,al
   14003861a:	or     al,ah
   14003861c:	(bad)  
   14003861d:	rol    BYTE PTR [rax+rax*8],1
   140038620:	add    dl,BYTE PTR [rax+0x0]
   140038623:	add    al,ah
   140038625:	ret    0x0
   140038628:	add    BYTE PTR [rax],al
   14003862b:	add    BYTE PTR [rcx],al
   14003862d:	add    al,0x1
   14003862f:	add    BYTE PTR [rdx+rax*2],al
   140038632:	add    BYTE PTR [rax],al
   140038634:	add    DWORD PTR [rax+rcx*1],edx
   140038637:	add    BYTE PTR [rsp+riz*2],dl
   14003863a:	or     al,BYTE PTR [rax]
   14003863c:	adc    al,0x54
   14003863e:	or     DWORD PTR [rax],eax
   140038640:	adc    al,0x34
   140038642:	or     BYTE PTR [rax],al
   140038644:	adc    al,0x52
   140038646:	adc    BYTE PTR [rax+0x1],dh
   140038649:	adc    BYTE PTR [rsi],al
   14003864b:	add    BYTE PTR [rax],dl
   14003864d:	fs or  eax,0xc341000
   140038653:	add    BYTE PTR [rax],dl
   140038655:	xchg   edx,eax
   140038656:	or     al,0x70
   140038658:	add    DWORD PTR [rcx+rax*1],eax
   14003865b:	add    BYTE PTR [rdx+rax*2],al
   14003865e:	add    BYTE PTR [rax],al
   140038660:	add    DWORD PTR [rax],edx
   140038662:	(bad)  
   140038663:	add    BYTE PTR [rax],dl
   140038665:	or     eax,DWORD PTR fs:[rax]
   140038668:	adc    BYTE PTR [rdx+rcx*1],dh
   14003866b:	add    BYTE PTR [rax],dl
   14003866d:	jb     0x14003867b
   14003866f:	jo     0x140038672
   140038671:	clts   
   140038673:	add    BYTE PTR [rdi],cl
   140038675:	fs (bad) 
   140038677:	add    BYTE PTR [rdi],cl
   140038679:	xor    al,0x6
   14003867b:	add    BYTE PTR [rdi],cl
   14003867d:	xor    cl,BYTE PTR [rbx]
   14003867f:	jo     0x140038682
   140038681:	clts   
   140038683:	add    BYTE PTR [rdi],cl
   140038685:	or     DWORD PTR fs:[rax],eax
   140038688:	sysenter 
   14003868a:	or     BYTE PTR [rax],al
   14003868c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14003868f:	jo     0x140038692
   140038691:	or     al,BYTE PTR [rax+rax*1]
   140038694:	or     dh,BYTE PTR [rsi+rax*1]
   140038697:	add    BYTE PTR [rdx],cl
   140038699:	xor    al,BYTE PTR [rsi]
   14003869b:	jo     0x14003869e
   14003869d:	add    al,0x1
   14003869f:	add    BYTE PTR [rdx+rax*2],al
   1400386a2:	add    BYTE PTR [rax],al
   1400386a4:	add    DWORD PTR [rax],edx
   1400386a6:	(bad)  
   1400386a7:	add    BYTE PTR [rax],dl
   1400386a9:	fs or  eax,0xc341000
   1400386af:	add    BYTE PTR [rax],dl
   1400386b1:	xchg   edx,eax
   1400386b2:	or     al,0x70
   1400386b4:	add    DWORD PTR [rcx],ebx
   1400386b6:	or     al,BYTE PTR [rax]
   1400386b8:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   1400386bc:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   1400386c0:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400386c4:	sbb    DWORD PTR [rsi+rax*1],esi
   1400386c7:	add    BYTE PTR [rcx],bl
   1400386c9:	xor    dl,BYTE PTR [rip+0x40a01e0]        # 0x1440d88af
   1400386cf:	add    BYTE PTR [rdx],cl
   1400386d1:	xor    al,0x6
   1400386d3:	add    BYTE PTR [rdx],cl
   1400386d5:	xor    al,BYTE PTR [rsi]
   1400386d7:	jo     0x1400386ea
   1400386d9:	adc    BYTE PTR [rsi],al
   1400386db:	add    BYTE PTR [rax],dl
   1400386dd:	je     0x1400386e6
   1400386df:	add    BYTE PTR [rax],dl
   1400386e1:	xor    al,0x6
   1400386e3:	add    BYTE PTR [rax],dl
   1400386e5:	xor    cl,BYTE PTR [rax+riz*8]
   1400386e8:	mov    BYTE PTR [rax],al
   1400386eb:	add    BYTE PTR [rcx],al
   1400386ed:	add    BYTE PTR [rax],al
   1400386ef:	add    BYTE PTR [rsi-0x3effff03],bl
   1400386f5:	std    
   1400386f6:	add    BYTE PTR [rax],al
   1400386f8:	outs   dx,DWORD PTR ds:[rsi]
   1400386f9:	scas   al,BYTE PTR es:[rdi]
   1400386fa:	add    al,BYTE PTR [rax]
   1400386fc:	add    BYTE PTR [rax],al
   1400386fe:	add    BYTE PTR [rax],al
   140038700:	add    DWORD PTR [rsi],eax
   140038702:	add    al,BYTE PTR [rax]
   140038704:	(bad)  
   140038705:	xor    al,BYTE PTR [rdx]
   140038707:	push   rax
   140038708:	add    DWORD PTR [rdi],ecx
   14003870a:	(bad)  
   14003870b:	add    BYTE PTR [rdi],cl
   14003870d:	fs (bad) 
   14003870f:	add    BYTE PTR [rdi],cl
   140038711:	xor    al,0x6
   140038713:	add    BYTE PTR [rdi],cl
   140038715:	xor    cl,BYTE PTR [rbx]
   140038717:	jo     0x14003871a
   140038719:	adc    al,0x8
   14003871b:	add    BYTE PTR [rsp+riz*2],dl
   14003871e:	or     BYTE PTR [rax],al
   140038720:	adc    al,0x54
   140038722:	(bad)  
   140038723:	add    BYTE PTR [rsp+rsi*1],dl
   140038726:	(bad)  
   140038727:	add    BYTE PTR [rdx+rsi*1],dl
   14003872a:	adc    BYTE PTR [rax+0x1],dh
   14003872d:	(bad)  
   14003872e:	add    al,BYTE PTR [rax]
   140038730:	(bad)  
   140038731:	xor    al,BYTE PTR [rdx]
   140038733:	xor    BYTE PTR [rcx],cl
   140038735:	or     al,BYTE PTR [rax+rax*1]
   140038738:	or     dh,BYTE PTR [rsi+rax*1]
   14003873b:	add    BYTE PTR [rdx],cl
   14003873d:	xor    al,BYTE PTR [rsi]
   14003873f:	jo     0x140038781
   140038741:	mov    BYTE PTR [rax],al
   140038743:	add    BYTE PTR [rcx],al
   140038745:	add    BYTE PTR [rax],al
   140038747:	add    BYTE PTR [rbp-0xfffff02],bh
   14003874d:	inc    BYTE PTR [rax]
   14003874f:	add    BYTE PTR [rax-0xffffd52],dl
   140038755:	inc    BYTE PTR [rax]
   140038757:	add    BYTE PTR [rcx],al
   140038759:	(bad)  
   14003875a:	add    al,BYTE PTR [rax]
   14003875c:	(bad)  
   14003875d:	xor    al,BYTE PTR [rdx]
   14003875f:	push   rax
   140038760:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b418876e
   140038766:	or     BYTE PTR [rax],al
   140038768:	adc    eax,0x15000764
   14003876d:	xor    al,0x6
   14003876f:	add    BYTE PTR [rip+0x11e01132],dl        # 0x151e398a7
   140038775:	or     al,BYTE PTR [rax+rax*1]
   140038778:	or     dh,BYTE PTR [rdi+rax*1]
   14003877b:	add    BYTE PTR [rdx],cl
   14003877d:	xor    al,BYTE PTR [rsi]
   14003877f:	jo     0x1400387c1
   140038781:	mov    BYTE PTR [rax],al
   140038783:	add    BYTE PTR [rcx],al
   140038785:	add    BYTE PTR [rax],al
   140038787:	add    BYTE PTR [rdx],cl
   140038789:	add    al,0x1
   14003878b:	add    BYTE PTR [rcx+0x4],ah
   14003878e:	add    DWORD PTR [rax],eax
   140038790:	mov    al,0xae
   140038792:	add    al,BYTE PTR [rax]
   140038794:	add    BYTE PTR [rax],al
   140038796:	add    BYTE PTR [rax],al
   140038798:	add    DWORD PTR [rsi],eax
   14003879a:	add    al,BYTE PTR [rax]
   14003879c:	(bad)  
   14003879d:	xor    al,BYTE PTR [rdx]
   14003879f:	push   rax
   1400387a0:	adc    DWORD PTR [rcx],ebx
   1400387a2:	or     al,BYTE PTR [rax]
   1400387a4:	sbb    esp,esp
   1400387a6:	or     eax,DWORD PTR [rax]
   1400387a8:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   1400387ac:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   1400387b0:	sbb    DWORD PTR [rax+rcx*1],esi
   1400387b3:	add    BYTE PTR [rcx],bl
   1400387b5:	push   rdx
   1400387b6:	adc    eax,0x8840f0
   1400387bb:	add    BYTE PTR [rcx],al
   1400387bd:	add    BYTE PTR [rax],al
   1400387bf:	add    bh,bh
   1400387c1:	add    eax,0x6b60001
   1400387c6:	add    DWORD PTR [rax],eax
   1400387c8:	leave  
   1400387c9:	scas   al,BYTE PTR es:[rdi]
   1400387ca:	add    al,BYTE PTR [rax]
   1400387cc:	add    BYTE PTR [rax],al
   1400387ce:	add    BYTE PTR [rax],al
   1400387d0:	add    DWORD PTR [rsi],eax
   1400387d2:	add    al,BYTE PTR [rax]
   1400387d4:	(bad)  
   1400387d5:	xor    al,BYTE PTR [rdx]
   1400387d7:	push   rax
   1400387d8:	add    DWORD PTR [rcx+rax*1],eax
   1400387db:	add    BYTE PTR [rdx+rax*4],al
   1400387de:	add    BYTE PTR [rax],al
   1400387e0:	add    DWORD PTR [rcx+rax*1],eax
   1400387e3:	add    BYTE PTR [rdx+rax*2],al
   1400387e6:	add    BYTE PTR [rax],al
   1400387e8:	sbb    DWORD PTR [rip+0x5416000a],esp        # 0x1941987f8
   1400387ee:	adc    DWORD PTR [rax],eax
   1400387f0:	(bad)  
   1400387f1:	xor    al,0x10
   1400387f3:	add    BYTE PTR [rsi],dl
   1400387f5:	jb     0x140038809
   1400387f7:	lock adc al,ah
   1400387fa:	(bad)  
   1400387fb:	ror    BYTE PTR [rax+rsi*2],0xb
   1400387ff:	(bad)  
   140038800:	loopne 0x1400387c4
   140038802:	add    BYTE PTR [rax],al
   140038804:	cmp    BYTE PTR [rax],al
   140038806:	add    BYTE PTR [rax],al
   140038808:	add    DWORD PTR [rsi],eax
   14003880a:	add    al,BYTE PTR [rax]
   14003880c:	(bad)  
   14003880d:	jb     0x140038811
   14003880f:	xor    BYTE PTR [rcx],al
   140038811:	adc    al,0x8
   140038813:	add    BYTE PTR [rsp+riz*2],dl
   140038816:	or     BYTE PTR [rax],al
   140038818:	adc    al,0x54
   14003881a:	(bad)  
   14003881b:	add    BYTE PTR [rsp+rsi*1],dl
   14003881e:	(bad)  
   14003881f:	add    BYTE PTR [rdx+rsi*1],dl
   140038822:	adc    BYTE PTR [rax+0x19],dh
   140038825:	sub    eax,DWORD PTR [rdi]
   140038827:	add    BYTE PTR [rdx],bl
   140038829:	je     0x1400387df
   14003882b:	add    BYTE PTR [rdx],bl
   14003882d:	xor    al,0xb3
   14003882f:	add    BYTE PTR [rdx],bl
   140038831:	add    DWORD PTR [rax+0x500b00],esi
   140038837:	add    al,ah
   140038839:	ret    0x0
   14003883c:	jo     0x140038843
   14003883e:	add    BYTE PTR [rax],al
   140038840:	add    DWORD PTR [rax],edx
   140038842:	(bad)  
   140038843:	add    BYTE PTR [rax],dl
   140038845:	je     0x14003884e
   140038847:	add    BYTE PTR [rax],dl
   140038849:	xor    al,0x6
   14003884b:	add    BYTE PTR [rax],dl
   14003884d:	xor    cl,BYTE PTR [rax+riz*8]
   140038850:	add    DWORD PTR [rcx],ecx
   140038852:	add    al,BYTE PTR [rax]
   140038854:	or     DWORD PTR [rdx],esi
   140038856:	add    eax,0x60f0130
   14003885b:	add    BYTE PTR [rdi],cl
   14003885d:	fs (bad) 
   14003885f:	add    BYTE PTR [rdi],cl
   140038861:	xor    al,0x6
   140038863:	add    BYTE PTR [rdi],cl
   140038865:	xor    cl,BYTE PTR [rbx]
   140038867:	jo     0x14003886a
   140038869:	clts   
   14003886b:	add    BYTE PTR [rdi],cl
   14003886d:	fs (bad) 
   14003886f:	add    BYTE PTR [rdi],cl
   140038871:	xor    al,0x6
   140038873:	add    BYTE PTR [rdi],cl
   140038875:	xor    cl,BYTE PTR [rbx]
   140038877:	jo     0x14003887a
   140038879:	or     al,BYTE PTR [rax+rax*1]
   14003887c:	or     dh,BYTE PTR [rsi+rax*1]
   14003887f:	add    BYTE PTR [rdx],cl
   140038881:	xor    al,BYTE PTR [rsi]
   140038883:	jo     0x140038885
   140038885:	add    BYTE PTR [rax],al
   140038887:	add    BYTE PTR [rcx],al
   140038889:	(bad)  
   14003888a:	add    al,BYTE PTR [rax]
   14003888c:	(bad)  
   14003888d:	add    DWORD PTR [rbx+0x100],ebx
   140038893:	add    BYTE PTR [rcx],al
   140038895:	add    BYTE PTR [rax],al
   140038897:	add    BYTE PTR [rcx],al
   140038899:	add    BYTE PTR [rax],al
   14003889b:	add    BYTE PTR [rcx],al
   14003889d:	(bad)  
   14003889e:	add    al,BYTE PTR [rax]
   1400388a0:	(bad)  
   1400388a1:	xor    al,BYTE PTR [rdx]
   1400388a3:	xor    BYTE PTR [rcx],al
   1400388a5:	(bad)  
   1400388a6:	add    al,BYTE PTR [rax]
   1400388a8:	(bad)  
   1400388a9:	xor    al,BYTE PTR [rdx]
   1400388ab:	xor    BYTE PTR [rcx],al
   1400388ad:	or     al,BYTE PTR [rax+rax*1]
   1400388b0:	or     dh,BYTE PTR [rsi+rax*1]
   1400388b3:	add    BYTE PTR [rdx],cl
   1400388b5:	xor    al,BYTE PTR [rsi]
   1400388b7:	jo     0x1400388ba
   1400388b9:	add    al,0x1
   1400388bb:	add    BYTE PTR [rdx+rax*2],al
   1400388be:	add    BYTE PTR [rax],al
   1400388c0:	add    DWORD PTR [rcx+rax*1],eax
   1400388c3:	add    BYTE PTR [rdx+rax*2],al
   1400388c6:	add    BYTE PTR [rax],al
   1400388c8:	add    DWORD PTR [rcx+rax*1],eax
   1400388cb:	add    BYTE PTR [rdx+rax*2],al
   1400388ce:	add    BYTE PTR [rax],al
   1400388d0:	adc    DWORD PTR [rip+0x34150008],edx        # 0x1741888de
   1400388d6:	or     eax,DWORD PTR [rax]
   1400388d8:	adc    eax,0xff01132
   1400388dd:	loopne 0x1400388ec
   1400388df:	ror    BYTE PTR [rbx],0x70
   1400388e2:	or     ah,BYTE PTR [rax+0x40]
   1400388e5:	mov    BYTE PTR [rax],al
   1400388e7:	add    BYTE PTR [rcx],al
   1400388e9:	add    BYTE PTR [rax],al
   1400388eb:	add    BYTE PTR [rsi],dl
   1400388ed:	adc    BYTE PTR [rcx],al
   1400388ef:	add    BYTE PTR [rcx+0x10],cl
   1400388f2:	add    DWORD PTR [rax],eax
   1400388f4:	loop   0x1400388a4
   1400388f6:	add    al,BYTE PTR [rax]
   1400388f8:	add    BYTE PTR [rax],al
   1400388fa:	add    BYTE PTR [rax],al
   1400388fc:	add    DWORD PTR [rsi],eax
   1400388fe:	add    al,BYTE PTR [rax]
   140038900:	(bad)  
   140038901:	xor    al,BYTE PTR [rdx]
   140038903:	push   rax
   140038904:	sbb    DWORD PTR [rsi],esi
   140038906:	or     eax,DWORD PTR [rax]
   140038908:	and    eax,0x25037334
   14003890d:	add    DWORD PTR [rax+0x3],ebp
   140038910:	adc    al,dh
   140038912:	(bad)  
   140038913:	loopne 0x140038921
   140038915:	ror    BYTE PTR [rdx],1
   140038917:	ror    BYTE PTR [rax],0x70
   14003891a:	(bad)  
   14003891b:	(bad)  
   14003891c:	(bad)  
   14003891d:	push   rax
   14003891e:	add    BYTE PTR [rax],al
   140038920:	loopne 0x1400388e4
   140038922:	add    BYTE PTR [rax],al
   140038924:	xor    BYTE PTR [rbx],bl
   140038926:	add    BYTE PTR [rax],al
   140038928:	adc    DWORD PTR [rip+0x34150008],edx        # 0x174188936
   14003892e:	or     eax,DWORD PTR [rax]
   140038930:	adc    eax,0xff01132
   140038935:	loopne 0x140038944
   140038937:	ror    BYTE PTR [rbx],0x70
   14003893a:	or     ah,BYTE PTR [rax+0x40]
   14003893d:	mov    BYTE PTR [rax],al
   14003893f:	add    BYTE PTR [rcx],al
   140038941:	add    BYTE PTR [rax],al
   140038943:	add    dh,ch
   140038945:	sbb    BYTE PTR [rcx],al
   140038947:	add    BYTE PTR [rbx],ah
   140038949:	sbb    DWORD PTR [rcx],eax
   14003894b:	add    cl,bh
   14003894d:	scas   al,BYTE PTR es:[rdi]
   14003894e:	add    al,BYTE PTR [rax]
   140038950:	add    BYTE PTR [rax],al
   140038952:	add    BYTE PTR [rax],al
   140038954:	add    DWORD PTR [rsi],eax
   140038956:	add    al,BYTE PTR [rax]
   140038958:	(bad)  
   140038959:	xor    al,BYTE PTR [rdx]
   14003895b:	push   rax
   14003895c:	add    DWORD PTR [rdi],ecx
   14003895e:	(bad)  
   14003895f:	add    BYTE PTR [rdi],cl
   140038961:	fs (bad) 
   140038963:	add    BYTE PTR [rdi],cl
   140038965:	xor    al,0x6
   140038967:	add    BYTE PTR [rdi],cl
   140038969:	xor    cl,BYTE PTR [rbx]
   14003896b:	jo     0x14003896e
   14003896d:	(bad)  
   14003896e:	add    al,BYTE PTR [rax]
   140038970:	(bad)  
   140038971:	xor    al,BYTE PTR [rdx]
   140038973:	xor    BYTE PTR [rcx],dl
   140038975:	(bad)  
   140038976:	add    al,BYTE PTR [rax]
   140038978:	(bad)  
   140038979:	xor    al,BYTE PTR [rdx]
   14003897b:	xor    BYTE PTR [rax-0x78],al
   14003897e:	add    BYTE PTR [rax],al
   140038980:	add    DWORD PTR [rax],eax
   140038982:	add    BYTE PTR [rax],al
   140038984:	rex.WRXB sbb rax,0x1d650001
   14003898a:	add    DWORD PTR [rax],eax
   14003898c:	adc    BYTE PTR [rdi+0x2],ch
   140038992:	add    BYTE PTR [rax],al
   140038994:	add    DWORD PTR [rsi],eax
   140038996:	add    al,BYTE PTR [rax]
   140038998:	(bad)  
   140038999:	xor    al,BYTE PTR [rdx]
   14003899b:	push   rax
   14003899c:	add    DWORD PTR [rax+rcx*1],edx
   14003899f:	add    BYTE PTR [rsp+riz*2],dl
   1400389a2:	or     BYTE PTR [rax],al
   1400389a4:	adc    al,0x54
   1400389a6:	(bad)  
   1400389a7:	add    BYTE PTR [rsp+rsi*1],dl
   1400389aa:	(bad)  
   1400389ab:	add    BYTE PTR [rdx+rsi*1],dl
   1400389ae:	adc    BYTE PTR [rax+0x1],dh
   1400389b1:	or     al,BYTE PTR [rax+rax*1]
   1400389b4:	or     dh,BYTE PTR [rsi+rax*1]
   1400389b7:	add    BYTE PTR [rdx],cl
   1400389b9:	xor    al,BYTE PTR [rsi]
   1400389bb:	jo     0x1400389be
   1400389bd:	(bad)  
   1400389be:	add    al,BYTE PTR [rax]
   1400389c0:	(bad)  
   1400389c1:	xor    al,BYTE PTR [rdx]
   1400389c3:	xor    BYTE PTR [rcx],al
   1400389c5:	(bad)  
   1400389c6:	add    al,BYTE PTR [rax]
   1400389c8:	(bad)  
   1400389c9:	xor    al,BYTE PTR [rdx]
   1400389cb:	xor    BYTE PTR [rcx],al
   1400389cd:	(bad)  
   1400389ce:	add    al,BYTE PTR [rax]
   1400389d0:	(bad)  
   1400389d1:	xor    al,BYTE PTR [rdx]
   1400389d3:	xor    BYTE PTR [rcx],al
   1400389d5:	(bad)  
   1400389d6:	add    al,BYTE PTR [rax]
   1400389d8:	(bad)  
   1400389d9:	xor    al,BYTE PTR [rdx]
   1400389db:	xor    BYTE PTR [rcx],al
   1400389dd:	(bad)  
   1400389de:	add    al,BYTE PTR [rax]
   1400389e0:	(bad)  
   1400389e1:	jb     0x1400389e5
   1400389e3:	xor    BYTE PTR [rcx],al
   1400389e5:	(bad)  
   1400389e6:	add    al,BYTE PTR [rax]
   1400389e8:	(bad)  
   1400389e9:	jb     0x1400389ed
   1400389eb:	xor    BYTE PTR [rcx],dl
   1400389ed:	sbb    DWORD PTR [rbx],eax
   1400389ef:	add    BYTE PTR [rcx],bl
   1400389f1:	rex.X adc eax,0x301470
   1400389f7:	add    BYTE PTR [rax-0x78],al
   1400389fa:	add    BYTE PTR [rax],al
   1400389fc:	add    DWORD PTR [rax],eax
   1400389fe:	add    BYTE PTR [rax],al
   140038a00:	xchg   edi,eax
   140038a01:	and    DWORD PTR [rcx],eax
   140038a03:	add    bl,dl
   140038a05:	and    DWORD PTR [rcx],eax
   140038a07:	add    BYTE PTR [rcx],ch
   140038a09:	scas   eax,DWORD PTR es:[rdi]
   140038a0a:	add    al,BYTE PTR [rax]
   140038a0c:	add    BYTE PTR [rax],al
   140038a0e:	add    BYTE PTR [rax],al
   140038a10:	add    DWORD PTR [rsi],eax
   140038a12:	add    al,BYTE PTR [rax]
   140038a14:	(bad)  
   140038a15:	xor    al,BYTE PTR [rdx]
   140038a17:	push   rax
   140038a18:	add    DWORD PTR [rdi],edx
   140038a1a:	add    DWORD PTR [rax],eax
   140038a1c:	(bad)  
   140038a1d:	rex.X add BYTE PTR [rax],al
   140038a20:	add    DWORD PTR [rdi],edx
   140038a22:	add    DWORD PTR [rax],eax
   140038a24:	(bad)  
   140038a25:	rex.X add BYTE PTR [rax],al
   140038a28:	add    DWORD PTR [rbx],edx
   140038a2a:	add    DWORD PTR [rax],eax
   140038a2c:	adc    eax,DWORD PTR [rdx+0x0]
   140038a2f:	add    BYTE PTR [rcx],al
   140038a31:	adc    eax,DWORD PTR [rcx]
   140038a33:	add    BYTE PTR [rbx],dl
   140038a35:	rex.X add BYTE PTR [rax],al
   140038a38:	add    DWORD PTR [rbx],edx
   140038a3a:	add    DWORD PTR [rax],eax
   140038a3c:	adc    eax,DWORD PTR [rdx+0x0]
   140038a3f:	add    BYTE PTR [rcx],dl
   140038a41:	(bad)  
   140038a43:	add    BYTE PTR [rdi],cl
   140038a45:	xor    al,0x6
   140038a47:	add    BYTE PTR [rdi],cl
   140038a49:	xor    cl,BYTE PTR [rbx]
   140038a4b:	jo     0x140038a8d
   140038a4d:	mov    BYTE PTR [rax],al
   140038a4f:	add    BYTE PTR [rcx],al
   140038a51:	add    BYTE PTR [rax],al
   140038a53:	add    BYTE PTR [rbp+0x24],cl
   140038a56:	add    DWORD PTR [rax],eax
   140038a58:	pop    rbx
   140038a59:	and    al,0x1
   140038a5b:	add    BYTE PTR [rax-0x51],dl
   140038a5e:	add    al,BYTE PTR [rax]
   140038a60:	add    BYTE PTR [rax],al
   140038a62:	add    BYTE PTR [rax],al
   140038a64:	add    DWORD PTR [rsi],eax
   140038a66:	add    al,BYTE PTR [rax]
   140038a68:	(bad)  
   140038a69:	xor    al,BYTE PTR [rdx]
   140038a6b:	push   rax
   140038a6c:	sbb    DWORD PTR [rcx],esp
   140038a6e:	or     BYTE PTR [rax],al
   140038a70:	adc    dl,BYTE PTR [rdi+rcx*1+0x0]
   140038a74:	adc    dh,BYTE PTR [rsi+rcx*1]
   140038a77:	add    BYTE PTR [rdx],dl
   140038a79:	jb     0x140038a89
   140038a7b:	loopne 0x140038a89
   140038a7d:	jo     0x140038a8a
   140038a7f:	(bad)  
   140038a80:	loopne 0x140038a44
   140038a82:	add    BYTE PTR [rax],al
   140038a84:	xor    BYTE PTR [rax],al
   140038a86:	add    BYTE PTR [rax],al
   140038a88:	add    DWORD PTR [rcx],ebx
   140038a8a:	or     al,BYTE PTR [rax]
   140038a8c:	sbb    DWORD PTR [rdi+rcx*1+0x0],esi
   140038a90:	sbb    DWORD PTR [rsi+rcx*1+0x0],esp
   140038a94:	sbb    DWORD PTR [rbp+rcx*1+0x0],edx
   140038a98:	sbb    DWORD PTR [rsp+rcx*1],esi
   140038a9b:	add    BYTE PTR [rcx],bl
   140038a9d:	xchg   edx,eax
   140038a9e:	adc    eax,0xb3019e0
   140038aa3:	add    BYTE PTR [rdi],bl
   140038aa5:	xor    al,0x66
   140038aa7:	add    BYTE PTR [rdi],bl
   140038aa9:	add    DWORD PTR [rax+rax*1+0x10],ebx
   140038aad:	lock (bad) 
   140038aaf:	loopne 0x140038abd
   140038ab1:	ror    BYTE PTR [rdx],1
   140038ab3:	ror    BYTE PTR [rax],0x70
   140038ab6:	(bad)  
   140038ab7:	(bad)  
   140038ab8:	(bad)  
   140038ab9:	push   rax
   140038aba:	add    BYTE PTR [rax],al
   140038abc:	loopne 0x140038a80
   140038abe:	add    BYTE PTR [rax],al
   140038ac0:	fadd   DWORD PTR [rdx]
   140038ac2:	add    BYTE PTR [rax],al
   140038ac4:	add    DWORD PTR [rsi],eax
   140038ac6:	add    al,BYTE PTR [rax]
   140038ac8:	(bad)  
   140038ac9:	xor    al,BYTE PTR [rdx]
   140038acb:	xor    BYTE PTR [rcx],al
   140038acd:	sbb    BYTE PTR [rax],cl
   140038acf:	add    BYTE PTR [rax],bl
   140038ad1:	or     BYTE PTR fs:[rax],al
   140038ad4:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140038ad8:	sbb    BYTE PTR [rsi+rax*1],dh
   140038adb:	add    BYTE PTR [rax],bl
   140038add:	xor    dl,BYTE PTR [rax+rsi*2]
   140038ae0:	add    DWORD PTR [rax],ebx
   140038ae2:	or     al,BYTE PTR [rax]
   140038ae4:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140038ae8:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140038aec:	sbb    BYTE PTR [rax+rcx*1],dh
   140038aef:	add    BYTE PTR [rax],bl
   140038af1:	xor    dl,BYTE PTR [rax+rsi*8]
   140038af4:	adc    ah,al
   140038af6:	adc    BYTE PTR [rax+0x1],dh
   140038af9:	add    al,0x1
   140038afb:	add    BYTE PTR [rdx+rax*1],al
   140038afe:	add    BYTE PTR [rax],al
   140038b00:	sbb    DWORD PTR [rdi],esp
   140038b02:	or     DWORD PTR [rax],eax
   140038b04:	sbb    DWORD PTR [rax+0xd],ebp
   140038b07:	add    BYTE PTR [rip+0x15002134],dl        # 0x15503ac41
   140038b0d:	add    DWORD PTR [rax+rax*1],ebx
   140038b10:	or     dh,BYTE PTR [rax+0x9]
   140038b13:	(bad)  
   140038b14:	or     BYTE PTR [rax+0x0],dl
   140038b17:	add    al,ah
   140038b19:	ret    0x0
   140038b1c:	rol    BYTE PTR [rax],0x0
   140038b1f:	add    BYTE PTR [rcx],bl
   140038b21:	sub    ecx,DWORD PTR [rbx]
   140038b23:	add    BYTE PTR [rip+0x19000d78],bl        # 0x1590398a1
   140038b29:	push   0x3415000e
   140038b2e:	and    eax,DWORD PTR [rax]
   140038b30:	adc    eax,0xa001e01
   140038b35:	jo     0x140038b40
   140038b37:	(bad)  
   140038b38:	or     BYTE PTR [rax+0x0],dl
   140038b3b:	add    al,ah
   140038b3d:	ret    0x0
   140038b40:	rol    BYTE PTR [rax],0x0
   140038b43:	add    BYTE PTR [rcx],al
   140038b45:	adc    al,BYTE PTR [rax+rax*1]
   140038b48:	adc    ch,BYTE PTR [rax+0x3]
   140038b4b:	add    BYTE PTR [rsi],al
   140038b4d:	jb     0x140038b51
   140038b4f:	xor    BYTE PTR [rcx],al
   140038b51:	adc    al,BYTE PTR [rax+rax*1]
   140038b54:	adc    ch,BYTE PTR [rax+0x3]
   140038b57:	add    BYTE PTR [rsi],al
   140038b59:	jb     0x140038b5d
   140038b5b:	xor    BYTE PTR [rcx],al
   140038b5d:	add    al,0x1
   140038b5f:	add    BYTE PTR [rdx+rax*2],al
   140038b62:	add    BYTE PTR [rax],al
   140038b64:	add    DWORD PTR [rsi],ebx
   140038b66:	or     al,0x0
   140038b68:	(bad)  
   140038b69:	push   0x34140002
   140038b6e:	lldt   WORD PTR [rdx+rdx*2]
   140038b72:	adc    al,dh
   140038b74:	(bad)  
   140038b75:	loopne 0x140038b83
   140038b77:	ror    BYTE PTR [rdx],1
   140038b79:	ror    BYTE PTR [rax],0x70
   140038b7c:	(bad)  
   140038b7d:	(bad)  
   140038b7e:	(bad)  
   140038b7f:	push   rax
   140038b80:	add    DWORD PTR [rcx+rax*1],eax
   140038b83:	add    BYTE PTR [rdx+rax*4],al
   140038b86:	add    BYTE PTR [rax],al
   140038b88:	add    DWORD PTR [rcx+rax*1],eax
   140038b8b:	add    BYTE PTR [rdx+rax*4],al
   140038b8e:	add    BYTE PTR [rax],al
   140038b90:	add    DWORD PTR [rcx],edx
   140038b92:	add    al,BYTE PTR [rax]
   140038b94:	adc    DWORD PTR [rdx+0x1b01300d],edx
   140038b9a:	or     BYTE PTR [rax],al
   140038b9c:	sbb    esi,DWORD PTR [rcx+rcx*1+0x0]
   140038ba0:	sbb    esp,DWORD PTR [rax+rcx*1+0x0]
   140038ba4:	sbb    esi,DWORD PTR [rdi+rax*1]
   140038ba7:	add    BYTE PTR [rbx],bl
   140038ba9:	xor    dl,BYTE PTR [rax+rdx*2]
   140038bac:	add    BYTE PTR [rax],al
   140038bae:	add    BYTE PTR [rax],al
   140038bb0:	add    DWORD PTR [rcx+rax*1],eax
   140038bb3:	add    BYTE PTR [rdx+rax*2],al
   140038bb6:	add    BYTE PTR [rax],al
   140038bb8:	add    DWORD PTR [rax],ecx
   140038bba:	add    DWORD PTR [rax],eax
   140038bbc:	or     BYTE PTR [rdx+0x0],al
   140038bbf:	add    BYTE PTR [rcx],al
   140038bc1:	adc    DWORD PTR [rcx],eax
   140038bc3:	add    BYTE PTR [rcx],dl
   140038bc5:	(bad)  
   140038bc6:	add    BYTE PTR [rax],al
   140038bc8:	add    DWORD PTR [rcx+rax*1],eax
   140038bcb:	add    BYTE PTR [rdx+rax*2],al
   140038bce:	add    BYTE PTR [rax],al
   140038bd0:	add    DWORD PTR [rsi],eax
   140038bd2:	add    al,BYTE PTR [rax]
   140038bd4:	(bad)  
   140038bd5:	xor    al,BYTE PTR [rdx]
   140038bd7:	xor    BYTE PTR [rcx],al
   140038bd9:	or     DWORD PTR [rcx],eax
   140038bdb:	add    BYTE PTR [rcx],cl
   140038bdd:	(bad)  
   140038bde:	add    BYTE PTR [rax],al
   140038be0:	adc    DWORD PTR [rax],ebx
   140038be2:	or     DWORD PTR [rax],eax
   140038be4:	sbb    BYTE PTR [rax+riz*1+0x0],dh
   140038be8:	sbb    BYTE PTR [rdi+rbx*1+0x0],ah
   140038bec:	sbb    BYTE PTR [rsi+rbx*1],dh
   140038bef:	add    BYTE PTR [rax],bl
   140038bf1:	add    DWORD PTR [rax+rax*1],ebx
   140038bf4:	adc    eax,esp
   140038bf6:	add    BYTE PTR [rax],al
   140038bf8:	mov    BYTE PTR [rax],al
   140038bfb:	add    BYTE PTR [rcx],al
   140038bfd:	add    BYTE PTR [rax],al
   140038bff:	add    BYTE PTR [rcx+0x210001ab],dl
   140038c05:	lods   al,BYTE PTR ds:[rsi]
   140038c06:	add    DWORD PTR [rax],eax
   140038c08:	push   0x2af
   140038c0d:	add    BYTE PTR [rax],al
   140038c0f:	add    BYTE PTR [rcx],al
   140038c11:	(bad)  
   140038c12:	add    al,BYTE PTR [rax]
   140038c14:	(bad)  
   140038c15:	push   rdx
   140038c16:	add    dl,BYTE PTR [rax+0x11]
   140038c19:	sbb    BYTE PTR [rcx],cl
   140038c1b:	add    BYTE PTR [rax],bl
   140038c1d:	je     0x140038c3f
   140038c1f:	add    BYTE PTR [rax],bl
   140038c21:	fs (bad) 
   140038c23:	add    BYTE PTR [rax],bl
   140038c25:	xor    al,0x1e
   140038c27:	add    BYTE PTR [rax],bl
   140038c29:	add    DWORD PTR [rax+rax*1],ebx
   140038c2c:	adc    eax,esp
   140038c2e:	add    BYTE PTR [rax],al
   140038c30:	mov    BYTE PTR [rax],al
   140038c33:	add    BYTE PTR [rcx],al
   140038c35:	add    BYTE PTR [rax],al
   140038c37:	add    BYTE PTR [rcx+0x270001ac],dl
   140038c3d:	lods   eax,DWORD PTR ds:[rsi]
   140038c3e:	add    DWORD PTR [rax],eax
   140038c40:	sub    DWORD PTR [rdi+0x2],0x6010000
   140038c4a:	add    al,BYTE PTR [rax]
   140038c4c:	(bad)  
   140038c4d:	push   rdx
   140038c4e:	add    dl,BYTE PTR [rax+0x1]
   140038c51:	clts   
   140038c53:	add    BYTE PTR [rdi],cl
   140038c55:	fs (bad) 
   140038c57:	add    BYTE PTR [rdi],cl
   140038c59:	xor    al,0x6
   140038c5b:	add    BYTE PTR [rdi],cl
   140038c5d:	xor    cl,BYTE PTR [rbx]
   140038c5f:	jo     0x140038c62
   140038c61:	(bad)  
   140038c62:	add    al,BYTE PTR [rax]
   140038c64:	(bad)  
   140038c65:	xor    al,BYTE PTR [rdx]
   140038c67:	xor    BYTE PTR [rcx],al
   140038c69:	or     DWORD PTR [rdx],eax
   140038c6b:	add    BYTE PTR [rcx],cl
   140038c6d:	xor    al,BYTE PTR [rip+0x2060130]        # 0x142098da3
   140038c73:	add    BYTE PTR [rsi],al
   140038c75:	xor    al,BYTE PTR [rdx]
   140038c77:	xor    BYTE PTR [rcx],al
   140038c79:	clts   
   140038c7b:	add    BYTE PTR [rdi],cl
   140038c7d:	fs (bad) 
   140038c7f:	add    BYTE PTR [rdi],cl
   140038c81:	xor    al,0x6
   140038c83:	add    BYTE PTR [rdi],cl
   140038c85:	xor    cl,BYTE PTR [rbx]
   140038c87:	jo     0x140038c8a
   140038c89:	or     al,BYTE PTR [rax+rax*1]
   140038c8c:	or     dh,BYTE PTR [rsi+rax*1]
   140038c8f:	add    BYTE PTR [rdx],cl
   140038c91:	xor    al,BYTE PTR [rsi]
   140038c93:	jo     0x140038c96
   140038c95:	clts   
   140038c97:	add    BYTE PTR [rdi],cl
   140038c99:	fs (bad) 
   140038c9b:	add    BYTE PTR [rdi],cl
   140038c9d:	xor    al,0x6
   140038c9f:	add    BYTE PTR [rdi],cl
   140038ca1:	xor    cl,BYTE PTR [rbx]
   140038ca3:	jo     0x140038cbe
   140038ca5:	adc    eax,0x72060002
   140038caa:	add    dh,BYTE PTR [rax]
   140038cac:	loopne 0x140038c70
   140038cae:	add    BYTE PTR [rax],al
   140038cb0:	cmp    BYTE PTR [rax],al
   140038cb2:	add    BYTE PTR [rax],al
   140038cb4:	sbb    DWORD PTR [rip+0x72060002],edx        # 0x1b2098cbc
   140038cba:	add    dh,BYTE PTR [rax]
   140038cbc:	loopne 0x140038c80
   140038cbe:	add    BYTE PTR [rax],al
   140038cc0:	cmp    BYTE PTR [rax],al
   140038cc2:	add    BYTE PTR [rax],al
   140038cc4:	add    DWORD PTR [rdi],ecx
   140038cc6:	(bad)  
   140038cc7:	add    BYTE PTR [rdi],cl
   140038cc9:	fs (bad) 
   140038ccb:	add    BYTE PTR [rdi],cl
   140038ccd:	xor    al,0x6
   140038ccf:	add    BYTE PTR [rdi],cl
   140038cd1:	xor    cl,BYTE PTR [rbx]
   140038cd3:	jo     0x140038cd6
   140038cd5:	(bad)  
   140038cd6:	add    al,BYTE PTR [rax]
   140038cd8:	(bad)  
   140038cd9:	xor    al,BYTE PTR [rdx]
   140038cdb:	xor    BYTE PTR [rcx],al
   140038cdd:	(bad)  
   140038cde:	add    al,BYTE PTR [rax]
   140038ce0:	(bad)  
   140038ce1:	xor    al,BYTE PTR [rdx]
   140038ce3:	xor    BYTE PTR [rcx],al
   140038ce5:	(bad)  
   140038ce6:	add    al,BYTE PTR [rax]
   140038ce8:	(bad)  
   140038ce9:	xor    al,BYTE PTR [rdx]
   140038ceb:	xor    BYTE PTR [rcx],al
   140038ced:	(bad)  
   140038cee:	add    al,BYTE PTR [rax]
   140038cf0:	(bad)  
   140038cf1:	xor    al,BYTE PTR [rdx]
   140038cf3:	xor    BYTE PTR [rcx],al
   140038cf5:	(bad)  
   140038cf6:	add    al,BYTE PTR [rax]
   140038cf8:	(bad)  
   140038cf9:	xor    al,BYTE PTR [rdx]
   140038cfb:	xor    BYTE PTR [rcx],al
   140038cfd:	or     al,BYTE PTR [rax+rax*1]
   140038d00:	or     dh,BYTE PTR [rdi+rax*1]
   140038d03:	add    BYTE PTR [rdx],cl
   140038d05:	xor    al,BYTE PTR [rsi]
   140038d07:	jo     0x140038d0a
   140038d09:	clts   
   140038d0b:	add    BYTE PTR [rdi],cl
   140038d0d:	fs (bad) 
   140038d0f:	add    BYTE PTR [rdi],cl
   140038d11:	xor    al,0x6
   140038d13:	add    BYTE PTR [rdi],cl
   140038d15:	xor    cl,BYTE PTR [rbx]
   140038d17:	jo     0x140038d1a
   140038d19:	clts   
   140038d1b:	add    BYTE PTR [rdi],cl
   140038d1d:	fs (bad) 
   140038d1f:	add    BYTE PTR [rdi],cl
   140038d21:	xor    al,0x6
   140038d23:	add    BYTE PTR [rdi],cl
   140038d25:	xor    cl,BYTE PTR [rbx]
   140038d27:	jo     0x140038d2a
   140038d29:	(bad)  
   140038d2a:	add    al,BYTE PTR [rax]
   140038d2c:	(bad)  
   140038d2d:	xor    al,BYTE PTR [rdx]
   140038d2f:	xor    BYTE PTR [rcx],al
   140038d31:	(bad)  
   140038d32:	add    al,BYTE PTR [rax]
   140038d34:	(bad)  
   140038d35:	xor    al,BYTE PTR [rdx]
   140038d37:	xor    BYTE PTR [rcx],al
   140038d39:	(bad)  
   140038d3a:	add    al,BYTE PTR [rax]
   140038d3c:	(bad)  
   140038d3d:	xor    al,BYTE PTR [rdx]
   140038d3f:	xor    BYTE PTR [rcx],al
   140038d41:	or     DWORD PTR [rdx],eax
   140038d43:	add    BYTE PTR [rcx],cl
   140038d45:	xor    al,BYTE PTR [rip+0x60f0130]        # 0x146128e7b
   140038d4b:	add    BYTE PTR [rdi],cl
   140038d4d:	fs (bad) 
   140038d4f:	add    BYTE PTR [rdi],cl
   140038d51:	xor    al,0x6
   140038d53:	add    BYTE PTR [rdi],cl
   140038d55:	xor    cl,BYTE PTR [rbx]
   140038d57:	jo     0x140038d5a
   140038d59:	(bad)  
   140038d5a:	add    al,BYTE PTR [rax]
   140038d5c:	(bad)  
   140038d5d:	xor    al,BYTE PTR [rdx]
   140038d5f:	xor    BYTE PTR [rcx],al
   140038d61:	or     al,BYTE PTR [rax+rax*1]
   140038d64:	or     dh,BYTE PTR [rax+rcx*1]
   140038d67:	add    BYTE PTR [rdx],cl
   140038d69:	push   rdx
   140038d6a:	(bad)  
   140038d6b:	jo     0x140038d6e
   140038d6d:	or     al,BYTE PTR [rax+rax*1]
   140038d70:	or     dh,BYTE PTR [rax+rcx*1]
   140038d73:	add    BYTE PTR [rdx],cl
   140038d75:	push   rdx
   140038d76:	(bad)  
   140038d77:	jo     0x140038d7a
   140038d79:	or     al,BYTE PTR [rax+rax*1]
   140038d7c:	or     dh,BYTE PTR [rax+rcx*1]
   140038d7f:	add    BYTE PTR [rdx],cl
   140038d81:	push   rdx
   140038d82:	(bad)  
   140038d83:	jo     0x140038d86
   140038d85:	or     al,BYTE PTR [rax+rax*1]
   140038d88:	or     dh,BYTE PTR [rsi+rax*1]
   140038d8b:	add    BYTE PTR [rdx],cl
   140038d8d:	xor    al,BYTE PTR [rsi]
   140038d8f:	jo     0x140038d92
   140038d91:	clts   
   140038d93:	add    BYTE PTR [rdi],cl
   140038d95:	fs (bad) 
   140038d97:	add    BYTE PTR [rdi],cl
   140038d99:	xor    al,0x6
   140038d9b:	add    BYTE PTR [rdi],cl
   140038d9d:	xor    cl,BYTE PTR [rbx]
   140038d9f:	jo     0x140038da2
   140038da1:	or     al,BYTE PTR [rax+rax*1]
   140038da4:	or     dh,BYTE PTR [rsi+rax*1]
   140038da7:	add    BYTE PTR [rdx],cl
   140038da9:	xor    al,BYTE PTR [rsi]
   140038dab:	jo     0x140038dae
   140038dad:	(bad)  
   140038dae:	add    al,BYTE PTR [rax]
   140038db0:	(bad)  
   140038db1:	xor    al,BYTE PTR [rdx]
   140038db3:	xor    BYTE PTR [rcx],al
   140038db5:	adc    al,BYTE PTR [rsi]
   140038db7:	add    BYTE PTR [rdx],dl
   140038db9:	lldt   WORD PTR fs:[rdx]
   140038dbd:	xor    al,0xc
   140038dbf:	add    BYTE PTR [rdx],dl
   140038dc1:	xchg   edx,eax
   140038dc2:	or     edx,DWORD PTR [rax+0x1]
   140038dc5:	(bad)  
   140038dc6:	add    al,BYTE PTR [rax]
   140038dc8:	(bad)  
   140038dc9:	xor    al,BYTE PTR [rdx]
   140038dcb:	xor    BYTE PTR [rcx],bl
   140038dcd:	sub    BYTE PTR [rax],cl
   140038dcf:	add    BYTE PTR [rdx],bl
   140038dd1:	je     0x140038de8
   140038dd3:	add    BYTE PTR [rdx],bl
   140038dd5:	fs adc al,0x0
   140038dd8:	sbb    dh,BYTE PTR [rbx+rdx*1]
   140038ddb:	add    BYTE PTR [rdx],bl
   140038ddd:	repnz adc BYTE PTR [rax-0x20],dl
   140038de1:	ret    0x0
   140038de4:	js     0x140038de6
   140038de6:	add    BYTE PTR [rax],al
   140038de8:	add    DWORD PTR [rdi],ebx
   140038dea:	or     DWORD PTR [rax],eax
   140038dec:	(bad)  
   140038ded:	je     0x140038e12
   140038def:	add    BYTE PTR [rdi],bl
   140038df1:	and    DWORD PTR fs:[rax],eax
   140038df4:	(bad)  
   140038df5:	xor    al,0x20
   140038df7:	add    BYTE PTR [rdi],bl
   140038df9:	add    DWORD PTR [rsi],ebx
   140038dfb:	add    BYTE PTR [rax+rdx*2],dl
   140038dfe:	add    BYTE PTR [rax],al
   140038e00:	add    DWORD PTR [rdx],esp
   140038e02:	or     eax,DWORD PTR [rax]
   140038e04:	and    ah,ah
   140038e06:	rex.WXB add BYTE PTR [r10],spl
   140038e09:	je     0x140038e55
   140038e0b:	add    BYTE PTR [rdx],ah
   140038e0d:	rex.WB add BYTE PTR fs:[r10],spl
   140038e11:	xor    al,0x48
   140038e13:	add    BYTE PTR [rdx],ah
   140038e15:	add    DWORD PTR [rsi+0x0],eax
   140038e18:	adc    al,0x50
   140038e1a:	add    BYTE PTR [rax],al
   140038e1c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x174108e26
   140038e22:	or     al,BYTE PTR [rax]
   140038e24:	or     eax,0x1500672
   140038e29:	or     al,BYTE PTR [rax+rax*1]
   140038e2c:	or     dh,BYTE PTR [rdx+rcx*1]
   140038e2f:	add    BYTE PTR [rdx],cl
   140038e31:	jb     0x140038e39
   140038e33:	jo     0x140038e36
   140038e35:	(bad)  
   140038e36:	or     BYTE PTR [rax],al
   140038e38:	(bad)  
   140038e39:	je     0x140038e4b
   140038e3b:	add    BYTE PTR [rdi],dl
   140038e3d:	lldt   WORD PTR fs:[rdi]
   140038e41:	xor    al,0xe
   140038e43:	add    BYTE PTR [rdi],dl
   140038e45:	mov    dl,0x10
   140038e47:	push   rax
   140038e48:	add    DWORD PTR [rcx*1+0x39742400],esp
   140038e4f:	add    BYTE PTR [rsp+riz*2],ah
   140038e52:	(bad)  
   140038e53:	add    BYTE PTR [rsp+rsi*1],ah
   140038e56:	add    BYTE PTR ss:[rcx+rax*1],ah
   140038e5a:	xor    BYTE PTR [rax],al
   140038e5c:	sbb    al,dh
   140038e5e:	(bad)  
   140038e5f:	loopne 0x140038e75
   140038e61:	rcl    BYTE PTR [rdx],1
   140038e63:	rcl    BYTE PTR [rax],0x50
   140038e66:	add    BYTE PTR [rax],al
   140038e68:	sbb    DWORD PTR [rip+0x741f000b],ebp        # 0x1b4228e79
   140038e6e:	(bad)  
   140038e6f:	add    BYTE PTR [rdi],bl
   140038e71:	fs add BYTE PTR es:[rdi],bl
   140038e75:	xor    al,0x25
   140038e77:	add    BYTE PTR [rdi],bl
   140038e79:	add    DWORD PTR [rax],esp
   140038e7b:	add    BYTE PTR [rax+rsi*8],dl
   140038e7e:	adc    ah,al
   140038e80:	adc    BYTE PTR [rax+0x0],dl
   140038e83:	add    al,ah
   140038e85:	ret    0x0
   140038e88:	lock add BYTE PTR [rax],al
   140038e8b:	add    BYTE PTR [rcx],bl
   140038e8d:	sub    DWORD PTR [rcx],ecx
   140038e8f:	add    BYTE PTR [rbx],bl
   140038e91:	je     0x140038ec0
   140038e93:	add    BYTE PTR [rbx],bl
   140038e95:	fs sub al,0x0
   140038e98:	sbb    esi,DWORD PTR [rbx+rbp*1]
   140038e9b:	add    BYTE PTR [rbx],bl
   140038e9d:	add    DWORD PTR [rax],ebp
   140038e9f:	add    BYTE PTR [rax],dl
   140038ea1:	push   rax
   140038ea2:	add    BYTE PTR [rax],al
   140038ea4:	loopne 0x140038e68
   140038ea6:	add    BYTE PTR [rax],al
   140038ea8:	xor    BYTE PTR [rcx],al
   140038eaa:	add    BYTE PTR [rax],al
   140038eac:	add    DWORD PTR [rip+0x7835000f],esi        # 0x1b8388ec1
   140038eb2:	or     eax,0xe682b00
   140038eb7:	add    BYTE PTR [rip+0x1d002634],bl        # 0x15d03b4f1
   140038ebd:	add    DWORD PTR [rsi],ebx
   140038ebf:	add    BYTE PTR [rdx],dl
   140038ec1:	lock adc al,ah
   140038ec4:	(bad)  
   140038ec5:	ror    BYTE PTR [rax+rax*8],1
   140038ec8:	or     dh,BYTE PTR [rax+0x9]
   140038ecb:	(bad)  
   140038ecc:	or     BYTE PTR [rax+0x0],dl
   140038ecf:	add    BYTE PTR [rcx],al
   140038ed1:	add    al,0x1
   140038ed3:	add    BYTE PTR [rdx+rax*2],al
   140038ed6:	add    BYTE PTR [rax],al
   140038ed8:	add    DWORD PTR [rsi],eax
   140038eda:	add    al,BYTE PTR [rax]
   140038edc:	(bad)  
   140038edd:	jb     0x140038ee1
   140038edf:	xor    BYTE PTR [rcx],al
   140038ee1:	(bad)  
   140038ee2:	add    al,BYTE PTR [rax]
   140038ee4:	(bad)  
   140038ee5:	xor    al,BYTE PTR [rdx]
   140038ee7:	xor    BYTE PTR [rcx],al
   140038ee9:	or     eax,0x340d0004
   140038eee:	or     al,0x0
   140038ef0:	or     eax,0x1500692
   140038ef5:	or     al,BYTE PTR [rax+rax*1]
   140038ef8:	or     dh,BYTE PTR [rax+rcx*1]
   140038efb:	add    BYTE PTR [rdx],cl
   140038efd:	push   rdx
   140038efe:	(bad)  
   140038eff:	jo     0x140038f02
   140038f01:	(bad)  
   140038f02:	add    al,BYTE PTR [rax]
   140038f04:	(bad)  
   140038f05:	xor    al,BYTE PTR [rdx]
   140038f07:	xor    BYTE PTR [rcx],al
   140038f09:	or     eax,0x340d0004
   140038f0e:	(bad)  
   140038f0f:	add    BYTE PTR [rip+0x15006b2],cl        # 0x1415395c7
   140038f15:	adc    al,BYTE PTR [rsi]
   140038f17:	add    BYTE PTR [rdx],dl
   140038f19:	je     0x140038f2a
   140038f1b:	add    BYTE PTR [rdx],dl
   140038f1d:	xor    al,0xe
   140038f1f:	add    BYTE PTR [rdx],dl
   140038f21:	mov    dl,0xb
   140038f23:	push   rax
   140038f24:	add    DWORD PTR [rcx],ebp
   140038f26:	or     eax,0xd682900
   140038f2b:	add    BYTE PTR [rdx],ah
   140038f2d:	and    eax,DWORD PTR fs:[rax]
   140038f30:	and    dh,BYTE PTR [rdx+riz*1]
   140038f33:	add    BYTE PTR [rdx],ah
   140038f35:	add    DWORD PTR [rax+rax*1],ebx
   140038f38:	(bad)  
   140038f39:	lock adc eax,0x11c013e0
   140038f3f:	jo     0x140038f51
   140038f41:	push   rax
   140038f42:	add    BYTE PTR [rax],al
   140038f44:	add    DWORD PTR [rdi],edx
   140038f46:	or     BYTE PTR [rax],al
   140038f48:	(bad)  
   140038f49:	in     al,0x10
   140038f4b:	add    BYTE PTR [rdi],dl
   140038f4d:	lldt   WORD PTR fs:[rdi]
   140038f51:	xor    al,0xe
   140038f53:	add    BYTE PTR [rdi],dl
   140038f55:	mov    dl,0x10
   140038f57:	push   rax
   140038f58:	add    DWORD PTR [rax],ecx
   140038f5a:	add    al,BYTE PTR [rax]
   140038f5c:	or     BYTE PTR [rdx+0xf013004],dl
   140038f62:	(bad)  
   140038f63:	add    BYTE PTR [rdi],cl
   140038f65:	xor    al,0x12
   140038f67:	add    BYTE PTR [rdi],cl
   140038f69:	ror    BYTE PTR [rax],cl
   140038f6b:	jo     0x140038f74
   140038f6d:	(bad)  
   140038f6e:	(bad)  
   140038f6f:	push   rax
   140038f70:	add    DWORD PTR [rdi],edx
   140038f72:	or     BYTE PTR [rax],al
   140038f74:	(bad)  
   140038f75:	je     0x140038f87
   140038f77:	add    BYTE PTR [rdi],dl
   140038f79:	lldt   WORD PTR fs:[rdi]
   140038f7d:	xor    al,0xe
   140038f7f:	add    BYTE PTR [rdi],dl
   140038f81:	mov    dl,0x10
   140038f83:	push   rax
   140038f84:	add    DWORD PTR [rbx],ebx
   140038f86:	or     al,BYTE PTR [rax]
   140038f88:	sbb    esi,DWORD PTR [rsi+rcx*1+0x0]
   140038f8c:	sbb    esp,DWORD PTR [rbp+rcx*1+0x0]
   140038f90:	sbb    esi,DWORD PTR [rsp+rcx*1]
   140038f93:	add    BYTE PTR [rbx],bl
   140038f95:	jb     0x140038fab
   140038f97:	lock adc ah,al
   140038f9a:	adc    BYTE PTR [rax+0x1],dl
   140038f9d:	adc    al,BYTE PTR [rsi]
   140038f9f:	add    BYTE PTR [rdx],dl
   140038fa1:	je     0x140038fb0
   140038fa3:	add    BYTE PTR [rdx],dl
   140038fa5:	xor    al,0xc
   140038fa7:	add    BYTE PTR [rdx],dl
   140038fa9:	xchg   edx,eax
   140038faa:	or     edx,DWORD PTR [rax+0x1]
   140038fad:	(bad)  
   140038fae:	or     al,BYTE PTR [rax]
   140038fb0:	(bad)  
   140038fb1:	je     0x140038fc9
   140038fb3:	add    BYTE PTR [rsi],bl
   140038fb5:	fs adc eax,0x14341e00
   140038fbb:	add    BYTE PTR [rsi],bl
   140038fbd:	repnz adc al,0xf0
   140038fc0:	adc    ah,al
   140038fc2:	adc    BYTE PTR [rax+0x1],dl
   140038fc5:	and    ecx,DWORD PTR [rip+0x1a742300]        # 0x15a77b2cb
   140038fcb:	add    BYTE PTR [rbx],ah
   140038fcd:	sbb    DWORD PTR fs:[rax],eax
   140038fd0:	and    esi,DWORD PTR [rax+rbx*1]
   140038fd3:	add    BYTE PTR [rbx],ah
   140038fd5:	add    DWORD PTR [rdx],edx
   140038fd7:	add    BYTE PTR [rax],bl
   140038fd9:	lock (bad) 
   140038fdb:	loopne 0x140038ff1
   140038fdd:	rcl    BYTE PTR [rdx],1
   140038fdf:	rcl    BYTE PTR [rax],0x50
   140038fe2:	add    BYTE PTR [rax],al
   140038fe4:	add    DWORD PTR [rsi],eax
   140038fe6:	add    al,BYTE PTR [rax]
   140038fe8:	(bad)  
   140038fe9:	push   rdx
   140038fea:	add    dh,BYTE PTR [rax]
   140038fec:	add    DWORD PTR [rdi],ecx
   140038fee:	(bad)  
   140038fef:	add    BYTE PTR [rdi],cl
   140038ff1:	fs or  eax,0xc340f00
   140038ff7:	add    BYTE PTR [rdi],cl
   140038ff9:	xchg   edx,eax
   140038ffa:	or     esi,DWORD PTR [rax+0x1]
   140038ffd:	adc    al,BYTE PTR [rsi]
   140038fff:	add    BYTE PTR [rdx],dl
   140039001:	je     0x140039010
   140039003:	add    BYTE PTR [rdx],dl
   140039005:	xor    al,0xc
   140039007:	add    BYTE PTR [rdx],dl
   140039009:	xchg   edx,eax
   14003900a:	or     edx,DWORD PTR [rax+0x1]
   14003900d:	adc    BYTE PTR [rsi],al
   14003900f:	add    BYTE PTR [rax],dl
   140039011:	or     DWORD PTR fs:[rax],eax
   140039014:	adc    BYTE PTR [rax+rcx*1],dh
   140039017:	add    BYTE PTR [rax],dl
   140039019:	push   rdx
   14003901a:	or     al,0x70
   14003901c:	add    DWORD PTR [rsi],eax
   14003901e:	add    al,BYTE PTR [rax]
   140039020:	(bad)  
   140039021:	xor    al,BYTE PTR [rdx]
   140039023:	xor    BYTE PTR [rcx],al
   140039025:	or     al,BYTE PTR [rax+rax*1]
   140039028:	or     dh,BYTE PTR [rsp+rcx*1]
   14003902b:	add    BYTE PTR [rdx],cl
   14003902d:	xchg   edx,eax
   14003902e:	(bad)  
   14003902f:	jo     0x140039032
   140039031:	or     BYTE PTR [rdx],al
   140039033:	add    BYTE PTR [rax],cl
   140039035:	xchg   edx,eax
   140039036:	add    al,0x30
   140039038:	add    DWORD PTR [rax],ecx
   14003903a:	add    al,BYTE PTR [rax]
   14003903c:	or     BYTE PTR [rdx+0x6013004],dl
   140039042:	add    al,BYTE PTR [rax]
   140039044:	(bad)  
   140039045:	xor    al,BYTE PTR [rdx]
   140039047:	xor    BYTE PTR [rcx],al
   140039049:	(bad)  
   14003904a:	add    al,BYTE PTR [rax]
   14003904c:	(bad)  
   14003904d:	xor    al,BYTE PTR [rdx]
   14003904f:	xor    BYTE PTR [rcx],al
   140039051:	(bad)  
   140039052:	add    al,BYTE PTR [rax]
   140039054:	(bad)  
   140039055:	xor    al,BYTE PTR [rdx]
   140039057:	xor    BYTE PTR [rcx],al
   140039059:	(bad)  
   14003905a:	or     BYTE PTR [rax],al
   14003905c:	(bad)  
   14003905d:	je     0x14003906f
   14003905f:	add    BYTE PTR [rdi],dl
   140039061:	lldt   WORD PTR fs:[rdi]
   140039065:	xor    al,0xe
   140039067:	add    BYTE PTR [rdi],dl
   140039069:	mov    dl,0x10
   14003906b:	push   rax
   14003906c:	add    DWORD PTR [rsi],eax
   14003906e:	add    al,BYTE PTR [rax]
   140039070:	(bad)  
   140039071:	xor    al,BYTE PTR [rdx]
   140039073:	xor    BYTE PTR [rcx],al
   140039075:	(bad)  
   140039076:	add    al,BYTE PTR [rax]
   140039078:	(bad)  
   140039079:	xor    al,BYTE PTR [rdx]
   14003907b:	xor    BYTE PTR [rcx],al
   14003907d:	(bad)  
   14003907e:	add    al,BYTE PTR [rax]
   140039080:	(bad)  
   140039081:	xor    al,BYTE PTR [rdx]
   140039083:	xor    BYTE PTR [rcx],al
   140039085:	adc    al,BYTE PTR [rsi]
   140039087:	add    BYTE PTR [rdx],dl
   140039089:	je     0x14003909c
   14003908b:	add    BYTE PTR [rdx],dl
   14003908d:	xor    al,0x10
   14003908f:	add    BYTE PTR [rdx],dl
   140039091:	ror    BYTE PTR [rbx],cl
   140039093:	push   rax
   140039094:	add    DWORD PTR [rsi],eax
   140039096:	add    al,BYTE PTR [rax]
   140039098:	(bad)  
   140039099:	xor    al,BYTE PTR [rdx]
   14003909b:	xor    BYTE PTR [rcx],al
   14003909d:	(bad)  
   14003909e:	add    al,BYTE PTR [rax]
   1400390a0:	(bad)  
   1400390a1:	push   rdx
   1400390a2:	add    dh,BYTE PTR [rax]
   1400390a4:	add    DWORD PTR [rsi],eax
   1400390a6:	add    al,BYTE PTR [rax]
   1400390a8:	(bad)  
   1400390a9:	xor    al,BYTE PTR [rdx]
   1400390ab:	xor    BYTE PTR [rcx],al
   1400390ad:	(bad)  
   1400390ae:	add    al,BYTE PTR [rax]
   1400390b0:	(bad)  
   1400390b1:	jb     0x1400390b5
   1400390b3:	xor    BYTE PTR [rcx],al
   1400390b5:	or     eax,0x340d0004
   1400390ba:	adc    BYTE PTR [rax],al
   1400390bc:	or     eax,0x15006d2
   1400390c1:	clts   
   1400390c3:	add    BYTE PTR [rdi],cl
   1400390c5:	fs (bad) 
   1400390c7:	add    BYTE PTR [rdi],cl
   1400390c9:	xor    al,0x6
   1400390cb:	add    BYTE PTR [rdi],cl
   1400390cd:	xor    cl,BYTE PTR [rbx]
   1400390cf:	jo     0x1400390d2
   1400390d1:	add    al,0x1
   1400390d3:	add    BYTE PTR [rdx+rax*2],al
   1400390d6:	add    BYTE PTR [rax],al
   1400390d8:	add    DWORD PTR [rcx+rax*1],eax
   1400390db:	add    BYTE PTR [rdx+rax*2],al
   1400390de:	add    BYTE PTR [rax],al
   1400390e0:	add    DWORD PTR [rcx+rax*1],eax
   1400390e3:	add    BYTE PTR [rdx+rax*2],al
   1400390e6:	add    BYTE PTR [rax],al
   1400390e8:	add    DWORD PTR [rdi],ecx
   1400390ea:	(bad)  
   1400390eb:	add    BYTE PTR [rdi],cl
   1400390ed:	fs (bad) 
   1400390ef:	add    BYTE PTR [rdi],cl
   1400390f1:	xor    al,0x6
   1400390f3:	add    BYTE PTR [rdi],cl
   1400390f5:	xor    cl,BYTE PTR [rbx]
   1400390f7:	jo     0x1400390fa
   1400390f9:	(bad)  
   1400390fa:	add    al,BYTE PTR [rax]
   1400390fc:	(bad)  
   1400390fd:	xor    al,BYTE PTR [rdx]
   1400390ff:	xor    BYTE PTR [rcx],al
   140039101:	or     al,BYTE PTR [rax+rax*1]
   140039104:	or     dh,BYTE PTR [rsi+rax*1]
   140039107:	add    BYTE PTR [rdx],cl
   140039109:	xor    al,BYTE PTR [rsi]
   14003910b:	jo     0x14003910e
   14003910d:	(bad)  
   14003910e:	add    al,BYTE PTR [rax]
   140039110:	(bad)  
   140039111:	jb     0x140039115
   140039113:	xor    BYTE PTR [rcx],al
   140039115:	(bad)  
   140039116:	add    al,BYTE PTR [rax]
   140039118:	(bad)  
   140039119:	jb     0x14003911d
   14003911b:	xor    BYTE PTR [rcx],al
   14003911d:	(bad)  
   14003911e:	add    al,BYTE PTR [rax]
   140039120:	(bad)  
   140039121:	jb     0x140039125
   140039123:	xor    BYTE PTR [rcx],al
   140039125:	(bad)  
   140039126:	add    al,BYTE PTR [rax]
   140039128:	(bad)  
   140039129:	jb     0x14003912d
   14003912b:	xor    BYTE PTR [rcx],al
   14003912d:	(bad)  
   14003912e:	add    al,BYTE PTR [rax]
   140039130:	(bad)  
   140039131:	jb     0x140039135
   140039133:	xor    BYTE PTR [rcx],al
   140039135:	(bad)  
   140039136:	add    al,BYTE PTR [rax]
   140039138:	(bad)  
   140039139:	jb     0x14003913d
   14003913b:	xor    BYTE PTR [rcx],al
   14003913d:	(bad)  
   14003913e:	add    al,BYTE PTR [rax]
   140039140:	(bad)  
   140039141:	jb     0x140039145
   140039143:	xor    BYTE PTR [rcx],al
   140039145:	(bad)  
   140039146:	add    al,BYTE PTR [rax]
   140039148:	(bad)  
   140039149:	jb     0x14003914d
   14003914b:	xor    BYTE PTR [rcx],al
   14003914d:	(bad)  
   14003914e:	add    al,BYTE PTR [rax]
   140039150:	(bad)  
   140039151:	jb     0x140039155
   140039153:	xor    BYTE PTR [rcx],al
   140039155:	(bad)  
   140039156:	add    al,BYTE PTR [rax]
   140039158:	(bad)  
   140039159:	jb     0x14003915d
   14003915b:	xor    BYTE PTR [rcx],al
   14003915d:	(bad)  
   14003915e:	add    al,BYTE PTR [rax]
   140039160:	(bad)  
   140039161:	jb     0x140039165
   140039163:	xor    BYTE PTR [rcx],al
   140039165:	(bad)  
   140039166:	add    al,BYTE PTR [rax]
   140039168:	(bad)  
   140039169:	jb     0x14003916d
   14003916b:	xor    BYTE PTR [rcx],al
   14003916d:	(bad)  
   14003916e:	add    al,BYTE PTR [rax]
   140039170:	(bad)  
   140039171:	jb     0x140039175
   140039173:	xor    BYTE PTR [rcx],al
   140039175:	(bad)  
   140039176:	add    al,BYTE PTR [rax]
   140039178:	(bad)  
   140039179:	jb     0x14003917d
   14003917b:	xor    BYTE PTR [rcx],al
   14003917d:	(bad)  
   14003917e:	add    al,BYTE PTR [rax]
   140039180:	(bad)  
   140039181:	jb     0x140039185
   140039183:	xor    BYTE PTR [rcx],al
   140039185:	(bad)  
   140039186:	add    al,BYTE PTR [rax]
   140039188:	(bad)  
   140039189:	jb     0x14003918d
   14003918b:	xor    BYTE PTR [rcx],al
   14003918d:	(bad)  
   14003918e:	add    al,BYTE PTR [rax]
   140039190:	(bad)  
   140039191:	jb     0x140039195
   140039193:	xor    BYTE PTR [rcx],al
   140039195:	(bad)  
   140039196:	add    al,BYTE PTR [rax]
   140039198:	(bad)  
   140039199:	jb     0x14003919d
   14003919b:	xor    BYTE PTR [rcx],al
   14003919d:	(bad)  
   14003919e:	add    al,BYTE PTR [rax]
   1400391a0:	(bad)  
   1400391a1:	jb     0x1400391a5
   1400391a3:	xor    BYTE PTR [rcx],al
   1400391a5:	(bad)  
   1400391a6:	add    al,BYTE PTR [rax]
   1400391a8:	(bad)  
   1400391a9:	jb     0x1400391ad
   1400391ab:	xor    BYTE PTR [rcx],al
   1400391ad:	(bad)  
   1400391ae:	add    al,BYTE PTR [rax]
   1400391b0:	(bad)  
   1400391b1:	jb     0x1400391b5
   1400391b3:	xor    BYTE PTR [rcx],al
   1400391b5:	(bad)  
   1400391b6:	add    al,BYTE PTR [rax]
   1400391b8:	(bad)  
   1400391b9:	jb     0x1400391bd
   1400391bb:	xor    BYTE PTR [rcx],al
   1400391bd:	(bad)  
   1400391be:	add    al,BYTE PTR [rax]
   1400391c0:	(bad)  
   1400391c1:	jb     0x1400391c5
   1400391c3:	xor    BYTE PTR [rcx],al
   1400391c5:	(bad)  
   1400391c6:	add    al,BYTE PTR [rax]
   1400391c8:	(bad)  
   1400391c9:	xor    al,BYTE PTR [rdx]
   1400391cb:	xor    BYTE PTR [rcx],al
   1400391cd:	(bad)  
   1400391ce:	add    al,BYTE PTR [rax]
   1400391d0:	(bad)  
   1400391d1:	xor    al,BYTE PTR [rdx]
   1400391d3:	xor    BYTE PTR [rcx],al
   1400391d5:	(bad)  
   1400391d6:	add    al,BYTE PTR [rax]
   1400391d8:	(bad)  
   1400391d9:	jb     0x1400391dd
   1400391db:	xor    BYTE PTR [rcx],al
   1400391dd:	(bad)  
   1400391de:	add    al,BYTE PTR [rax]
   1400391e0:	(bad)  
   1400391e1:	jb     0x1400391e5
   1400391e3:	xor    BYTE PTR [rcx],al
   1400391e5:	adc    al,BYTE PTR [rsi]
   1400391e7:	add    BYTE PTR [rdx],dl
   1400391e9:	in     al,0x13
   1400391eb:	add    BYTE PTR [rdx],dl
   1400391ed:	je     0x140039200
   1400391ef:	add    BYTE PTR [rdx],dl
   1400391f1:	ror    BYTE PTR [rbx],cl
   1400391f3:	push   rax
   1400391f4:	add    DWORD PTR [rcx+rax*1],eax
   1400391f7:	add    BYTE PTR [rdx+riz*1],al
   1400391fa:	add    BYTE PTR [rax],al
   1400391fc:	add    DWORD PTR [rdx],ecx
   1400391fe:	add    al,0x0
   140039200:	or     dh,BYTE PTR [rsi+rax*1]
   140039203:	add    BYTE PTR [rdx],cl
   140039205:	xor    al,BYTE PTR [rsi]
   140039207:	jo     0x140039222
   140039209:	sbb    al,0x4
   14003920b:	add    BYTE PTR [rip+0xd001434],cl        # 0x14d03a645
   140039211:	repnz (bad) 
   140039213:	jo     0x1400391f5
   140039215:	ret    0x0
   140039218:	js     0x14003921a
   14003921a:	add    BYTE PTR [rax],al
   14003921c:	sbb    DWORD PTR [rsp+rax*1],ebx
   14003921f:	add    BYTE PTR [rip+0xd001434],cl        # 0x14d03a659
   140039225:	repnz (bad) 
   140039227:	jo     0x140039209
   140039229:	ret    0x0
   14003922c:	js     0x14003922e
   14003922e:	add    BYTE PTR [rax],al
   140039230:	sbb    DWORD PTR [rdx],ebx
   140039232:	add    al,0x0
   140039234:	or     esi,edx
   140039236:	add    al,0x70
   140039238:	add    esp,DWORD PTR [rax+0x2]
   14003923b:	xor    al,ah
   14003923d:	ret    0x0
   140039240:	js     0x140039242
   140039242:	add    BYTE PTR [rax],al
   140039244:	sbb    DWORD PTR [rdi],ebx
   140039246:	(bad)  
   140039247:	add    BYTE PTR [rcx],dl
   140039249:	add    DWORD PTR [rcx],edx
   14003924b:	add    BYTE PTR [rip+0x3600470],al        # 0x1436396c1
   140039251:	xor    BYTE PTR [rdx],al
   140039253:	push   rax
   140039254:	loopne 0x140039218
   140039256:	add    BYTE PTR [rax],al
   140039258:	jo     0x14003925a
   14003925a:	add    BYTE PTR [rax],al
   14003925c:	add    DWORD PTR [rip+0x34050002],eax        # 0x174089264
   140039262:	add    DWORD PTR [rax],eax
   140039264:	add    DWORD PTR [rsi],eax
   140039266:	add    al,BYTE PTR [rax]
   140039268:	(bad)  
   140039269:	xor    al,BYTE PTR [rdx]
   14003926b:	xor    BYTE PTR [rcx],al
   14003926d:	or     al,BYTE PTR [rax+rax*1]
   140039270:	or     dh,BYTE PTR [rdx+rcx*1]
   140039273:	add    BYTE PTR [rdx],cl
   140039275:	jb     0x14003927d
   140039277:	jo     0x14003927a
   140039279:	clts   
   14003927b:	add    BYTE PTR [rdi],cl
   14003927d:	or     eax,DWORD PTR fs:[rax]
   140039280:	sysenter 
   140039282:	or     al,BYTE PTR [rax]
   140039284:	(bad)  
   140039286:	or     esi,DWORD PTR [rax+0x1]
   140039289:	(bad)  
   14003928a:	add    al,BYTE PTR [rax]
   14003928c:	(bad)  
   14003928d:	xor    al,BYTE PTR [rdx]
   14003928f:	xor    BYTE PTR [rcx],al
   140039291:	(bad)  
   140039292:	add    al,BYTE PTR [rax]
   140039294:	(bad)  
   140039295:	xor    al,BYTE PTR [rdx]
   140039297:	xor    BYTE PTR [rcx],al
   140039299:	(bad)  
   14003929a:	add    al,BYTE PTR [rax]
   14003929c:	(bad)  
   14003929d:	xor    al,BYTE PTR [rdx]
   14003929f:	xor    BYTE PTR [rcx],bl
   1400392a1:	(bad)  
   1400392a2:	or     BYTE PTR [rax],al
   1400392a4:	setb   BYTE PTR [rbx]
   1400392a7:	lock or eax,esp
   1400392aa:	(bad)  
   1400392ab:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143639722
   1400392b2:	add    dh,BYTE PTR [rax]
   1400392b4:	loopne 0x140039278
   1400392b6:	add    BYTE PTR [rax],al
   1400392b8:	rex.W add BYTE PTR [rax],al
   1400392bb:	add    BYTE PTR [rcx],al
   1400392bd:	(bad)  
   1400392be:	add    al,BYTE PTR [rax]
   1400392c0:	(bad)  
   1400392c1:	xor    al,BYTE PTR [rdx]
   1400392c3:	xor    BYTE PTR [rcx],al
   1400392c5:	clts   
   1400392c7:	add    BYTE PTR [rdi],cl
   1400392c9:	adc    DWORD PTR fs:[rax],eax
   1400392cc:	sysenter 
   1400392ce:	adc    BYTE PTR [rax],al
   1400392d0:	psrld  mm1,QWORD PTR [rbx]
   1400392d3:	jo     0x1400392ee
   1400392d5:	sub    eax,0x741f450d
   1400392da:	adc    al,BYTE PTR [rax]
   1400392dc:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   1400392e0:	(bad)  
   1400392e1:	xor    al,0x10
   1400392e3:	add    BYTE PTR [rbx],dl
   1400392e5:	rex.XB (bad) 
   1400392e7:	xchg   edx,eax
   1400392e8:	or     dh,al
   1400392ea:	or     al,ah
   1400392ec:	(bad)  
   1400392ed:	rol    BYTE PTR [rax+rax*8],1
   1400392f0:	add    dl,BYTE PTR [rax+0x0]
   1400392f3:	add    al,ah
   1400392f5:	ret    0x0
   1400392f8:	rex.W add BYTE PTR [rax],al
   1400392fb:	add    BYTE PTR [rcx],al
   1400392fd:	clts   
   1400392ff:	add    BYTE PTR [rdi],cl
   140039301:	str    WORD PTR fs:[rdi]
   140039305:	xor    al,0xe
   140039307:	add    BYTE PTR [rdi],cl
   140039309:	mov    dl,0xb
   14003930b:	jo     0x140039326
   14003930d:	sub    eax,0x741f350d
   140039312:	adc    BYTE PTR [rax],al
   140039314:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140039318:	(bad)  
   140039319:	xor    al,0xe
   14003931b:	add    BYTE PTR [rbx],dl
   14003931d:	xor    ecx,DWORD PTR [rsi]
   14003931f:	jb     0x14003932b
   140039321:	lock or al,ah
   140039324:	(bad)  
   140039325:	rol    BYTE PTR [rax+rax*8],1
   140039328:	add    dl,BYTE PTR [rax+0x0]
   14003932b:	add    al,ah
   14003932d:	ret    0x0
   140039330:	xor    BYTE PTR [rax],al
   140039332:	add    BYTE PTR [rax],al
   140039334:	adc    DWORD PTR [rdi],ecx
   140039336:	add    al,0x0
   140039338:	sysenter 
   14003933a:	(bad)  
   14003933b:	add    BYTE PTR [rdi],cl
   14003933d:	xor    cl,BYTE PTR [rbx]
   14003933f:	jo     0x140039381
   140039341:	mov    BYTE PTR [rax],al
   140039343:	add    BYTE PTR [rcx],al
   140039345:	add    BYTE PTR [rax],al
   140039347:	add    al,bl
   140039349:	(bad)  
   14003934a:	add    DWORD PTR [rax],eax
   14003934c:	loop   0x14003931c
   14003934e:	add    DWORD PTR [rax],eax
   140039350:	(bad)  
   140039351:	scas   eax,DWORD PTR es:[rdi]
   140039352:	add    al,BYTE PTR [rax]
   140039354:	add    BYTE PTR [rax],al
   140039356:	add    BYTE PTR [rax],al
   140039358:	add    DWORD PTR [rsi],eax
   14003935a:	add    al,BYTE PTR [rax]
   14003935c:	(bad)  
   14003935d:	xor    al,BYTE PTR [rdx]
   14003935f:	push   rax
   140039360:	add    DWORD PTR [rsi],eax
   140039362:	add    al,BYTE PTR [rax]
   140039364:	(bad)  
   140039365:	xor    al,BYTE PTR [rdx]
   140039367:	xor    BYTE PTR [rcx],al
   140039369:	clts   
   14003936b:	add    BYTE PTR [rdi],cl
   14003936d:	fs (bad) 
   14003936f:	add    BYTE PTR [rdi],cl
   140039371:	xor    al,0x6
   140039373:	add    BYTE PTR [rdi],cl
   140039375:	xor    cl,BYTE PTR [rbx]
   140039377:	jo     0x14003938a
   140039379:	sbb    DWORD PTR [rdx],ecx
   14003937b:	add    BYTE PTR [rcx],bl
   14003937d:	je     0x14003938b
   14003937f:	add    BYTE PTR [rcx],bl
   140039381:	or     eax,DWORD PTR fs:[rax]
   140039384:	sbb    DWORD PTR [rdx+rcx*1],esi
   140039387:	add    BYTE PTR [rcx],bl
   140039389:	push   rdx
   14003938a:	adc    eax,0x11e013f0
   14003938f:	rol    BYTE PTR [rax-0x78],1
   140039392:	add    BYTE PTR [rax],al
   140039394:	add    al,BYTE PTR [rax]
   140039396:	add    BYTE PTR [rax],al
   140039398:	push   rsp
   140039399:	iret   
   14003939a:	add    DWORD PTR [rax],eax
   14003939c:	cwde   
   14003939d:	iret   
   14003939e:	add    DWORD PTR [rax],eax
   1400393a0:	mov    dl,0xaf
   1400393a2:	add    al,BYTE PTR [rax]
   1400393a4:	add    BYTE PTR [rax],al
   1400393a6:	add    BYTE PTR [rax],al
   1400393a8:	and    edi,ecx
   1400393aa:	add    DWORD PTR [rax],eax
   1400393ac:	mov    cl,0xcf
   1400393ae:	add    DWORD PTR [rax],eax
   1400393b0:	fisubr DWORD PTR [rdi+0x2]
   1400393b6:	add    BYTE PTR [rax],al
   1400393b8:	add    DWORD PTR [rsi],eax
   1400393ba:	add    al,BYTE PTR [rax]
   1400393bc:	(bad)  
   1400393bd:	xor    al,BYTE PTR [rdx]
   1400393bf:	push   rax
   1400393c0:	add    DWORD PTR [rsi],eax
   1400393c2:	add    al,BYTE PTR [rax]
   1400393c4:	(bad)  
   1400393c5:	xor    al,BYTE PTR [rdx]
   1400393c7:	push   rax
   1400393c8:	adc    DWORD PTR [rdi],ecx
   1400393ca:	(bad)  
   1400393cb:	add    BYTE PTR [rdi],cl
   1400393cd:	or     DWORD PTR fs:[rax],eax
   1400393d0:	sysenter 
   1400393d2:	or     BYTE PTR [rax],al
   1400393d4:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400393d7:	jo     0x140039419
   1400393d9:	mov    BYTE PTR [rax],al
   1400393db:	add    BYTE PTR [rcx],al
   1400393dd:	add    BYTE PTR [rax],al
   1400393df:	add    dl,bh
   1400393e1:	iret   
   1400393e2:	add    DWORD PTR [rax],eax
   1400393e4:	ins    BYTE PTR es:[rdi],dx
   1400393e5:	rol    BYTE PTR [rcx],1
   1400393e7:	add    bl,dh
   1400393e9:	scas   eax,DWORD PTR es:[rdi]
   1400393ea:	add    al,BYTE PTR [rax]
   1400393ec:	add    BYTE PTR [rax],al
   1400393ee:	add    BYTE PTR [rax],al
   1400393f0:	add    DWORD PTR [rsi],eax
   1400393f2:	add    al,BYTE PTR [rax]
   1400393f4:	(bad)  
   1400393f5:	xor    al,BYTE PTR [rdx]
   1400393f7:	push   rax
   1400393f8:	adc    DWORD PTR [rip+0xffffffffc41d000c],ebx        # 0x10420940a
   1400393fe:	or     eax,0xc741d00
   140039403:	add    BYTE PTR [rip+0x1d000b64],bl        # 0x15d039f6d
   140039409:	xor    al,0xa
   14003940b:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f3ad63
   140039411:	loopne 0x140039428
   140039413:	rol    BYTE PTR [rax-0x78],1
   140039416:	add    BYTE PTR [rax],al
   140039418:	add    al,BYTE PTR [rax]
   14003941a:	add    BYTE PTR [rax],al
   14003941c:	rcl    ecx,0x1
   14003941f:	add    bl,bl
   140039421:	rol    DWORD PTR [rcx],1
   140039423:	add    BYTE PTR [rip+0x2b0],ah        # 0x1400396d9
   140039429:	add    BYTE PTR [rax],al
   14003942b:	add    BYTE PTR [rsi-0x2f],ah
   14003942e:	add    DWORD PTR [rax],eax
   140039430:	in     eax,dx
   140039431:	rol    BYTE PTR [rcx],cl
   140039433:	add    BYTE PTR [rax-0x50],al
   140039436:	add    al,BYTE PTR [rax]
   140039438:	add    BYTE PTR [rax],al
   14003943a:	add    BYTE PTR [rax],al
   14003943c:	add    DWORD PTR [rsi],eax
   14003943e:	add    al,BYTE PTR [rax]
   140039440:	(bad)  
   140039441:	xor    al,BYTE PTR [rdx]
   140039443:	push   rax
   140039444:	add    DWORD PTR [rsi],eax
   140039446:	add    al,BYTE PTR [rax]
   140039448:	(bad)  
   140039449:	xor    al,BYTE PTR [rdx]
   14003944b:	push   rax
   14003944c:	add    DWORD PTR [rax],edx
   14003944e:	(bad)  
   14003944f:	add    BYTE PTR [rax],dl
   140039451:	je     0x14003945a
   140039453:	add    BYTE PTR [rax],dl
   140039455:	xor    al,0x6
   140039457:	add    BYTE PTR [rax],dl
   140039459:	xor    cl,BYTE PTR [rax+riz*8]
   14003945c:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b418946a
   140039462:	or     BYTE PTR [rax],al
   140039464:	adc    eax,0x15000764
   140039469:	xor    al,0x6
   14003946b:	add    BYTE PTR [rip+0x11e01132],dl        # 0x151e3a5a3
   140039471:	adc    eax,0x74150008
   140039476:	or     BYTE PTR [rax],al
   140039478:	adc    eax,0x15000764
   14003947d:	xor    al,0x6
   14003947f:	add    BYTE PTR [rip+0x40f01132],dl        # 0x180f3a5b7
   140039485:	mov    BYTE PTR [rax],al
   140039487:	add    BYTE PTR [rcx],al
   140039489:	add    BYTE PTR [rax],al
   14003948b:	add    bl,cl
   14003948d:	rol    BYTE PTR [rcx],1
   14003948f:	add    dl,ch
   140039491:	rol    BYTE PTR [rcx],1
   140039493:	add    BYTE PTR [rax+rsi*4],cl
   140039496:	add    al,BYTE PTR [rax]
   140039498:	add    BYTE PTR [rax],al
   14003949a:	add    BYTE PTR [rax],al
   14003949c:	add    DWORD PTR [rsi],eax
   14003949e:	add    al,BYTE PTR [rax]
   1400394a0:	(bad)  
   1400394a1:	xor    al,BYTE PTR [rdx]
   1400394a3:	push   rax
   1400394a4:	add    DWORD PTR [rcx+rax*1],eax
   1400394a7:	add    BYTE PTR [rdx+rax*2],al
   1400394aa:	add    BYTE PTR [rax],al
   1400394ac:	adc    DWORD PTR [rip+0x74150008],edx        # 0x1b41894ba
   1400394b2:	or     eax,DWORD PTR [rax]
   1400394b4:	adc    eax,0x15000a64
   1400394b9:	xor    al,0x8
   1400394bb:	add    BYTE PTR [rip+0x40e01152],dl        # 0x180e3a613
   1400394c1:	mov    BYTE PTR [rax],al
   1400394c3:	add    BYTE PTR [rcx],al
   1400394c5:	add    BYTE PTR [rax],al
   1400394c7:	add    ah,cl
   1400394c9:	(bad)  
   1400394ca:	add    DWORD PTR [rax],eax
   1400394cc:	adc    edx,ebp
   1400394ce:	add    DWORD PTR [rax],eax
   1400394d0:	pop    rcx
   1400394d1:	mov    al,0x2
   1400394d3:	add    BYTE PTR [rax],al
   1400394d5:	add    BYTE PTR [rax],al
   1400394d7:	add    BYTE PTR [rcx],al
   1400394d9:	(bad)  
   1400394da:	add    al,BYTE PTR [rax]
   1400394dc:	(bad)  
   1400394dd:	xor    al,BYTE PTR [rdx]
   1400394df:	push   rax
   1400394e0:	adc    DWORD PTR [rsi],eax
   1400394e2:	add    al,BYTE PTR [rax]
   1400394e4:	(bad)  
   1400394e5:	xor    al,BYTE PTR [rdx]
   1400394e7:	xor    BYTE PTR [rax-0x78],al
   1400394ea:	add    BYTE PTR [rax],al
   1400394ec:	add    DWORD PTR [rax],eax
   1400394ee:	add    BYTE PTR [rax],al
   1400394f0:	and    al,0xd6
   1400394f2:	add    DWORD PTR [rax],eax
   1400394f4:	(bad)  
   1400394f5:	(bad)  
   1400394f6:	add    DWORD PTR [rax],eax
   1400394f8:	(bad)  
   1400394f9:	mov    al,0x2
   1400394fb:	add    BYTE PTR [rax],al
   1400394fd:	add    BYTE PTR [rax],al
   1400394ff:	add    BYTE PTR [rcx],al
   140039501:	(bad)  
   140039502:	add    al,BYTE PTR [rax]
   140039504:	(bad)  
   140039505:	xor    al,BYTE PTR [rdx]
   140039507:	push   rax
   140039508:	add    DWORD PTR [rcx],ecx
   14003950a:	add    DWORD PTR [rax],eax
   14003950c:	or     DWORD PTR [rdx+0x0],esp
   14003950f:	add    BYTE PTR [rcx],al
   140039511:	(bad)  
   140039512:	or     al,0x0
   140039514:	(bad)  
   140039515:	je     0x140039527
   140039517:	add    BYTE PTR [rdi],bl
   140039519:	ltr    WORD PTR fs:[rdi]
   14003951d:	xor    al,0xe
   14003951f:	add    BYTE PTR [rdi],bl
   140039521:	jb     0x14003953b
   140039523:	lock (bad) 
   140039525:	loopne 0x14003953b
   140039527:	rcl    BYTE PTR [rdx],1
   140039529:	rcl    BYTE PTR [rax],0x50
   14003952c:	add    DWORD PTR [rsi],ecx
   14003952e:	add    al,BYTE PTR [rax]
   140039530:	(bad)  
   140039531:	xor    cl,BYTE PTR [rdx]
   140039533:	xor    BYTE PTR [rcx],al
   140039535:	sbb    al,0xc
   140039537:	add    BYTE PTR [rsp+riz*2],bl
   14003953a:	adc    BYTE PTR [rax],al
   14003953c:	sbb    al,0x54
   14003953e:	ltr    WORD PTR [rsp+rsi*1]
   140039542:	(bad)  
   140039543:	add    BYTE PTR [rdx+rsi*2],bl
   140039546:	sbb    al,dh
   140039548:	(bad)  
   140039549:	loopne 0x14003955f
   14003954b:	rcl    BYTE PTR [rdx],1
   14003954d:	rcl    BYTE PTR [rax],0x70
   140039550:	add    DWORD PTR [rdx],ecx
   140039552:	add    al,BYTE PTR [rax]
   140039554:	or     dh,BYTE PTR [rdx]
   140039556:	(bad)  
   140039557:	xor    BYTE PTR [rcx],al
   140039559:	clts   
   14003955b:	add    BYTE PTR [rdi],cl
   14003955d:	push   rsp
   14003955e:	(bad)  
   14003955f:	add    BYTE PTR [rdi],cl
   140039561:	xor    al,0x6
   140039563:	add    BYTE PTR [rdi],cl
   140039565:	xor    cl,BYTE PTR [rbx]
   140039567:	jo     0x14003956a
   140039569:	sbb    ecx,DWORD PTR [rdx]
   14003956b:	add    BYTE PTR [rbx],bl
   14003956d:	in     al,0xd
   14003956f:	add    BYTE PTR [rbx],bl
   140039571:	je     0x14003957f
   140039573:	add    BYTE PTR [rbx],bl
   140039575:	or     eax,DWORD PTR fs:[rax]
   140039578:	sbb    esi,DWORD PTR [rdx+rcx*1]
   14003957b:	add    BYTE PTR [rbx],bl
   14003957d:	jb     0x140039593
   14003957f:	push   rax
   140039580:	add    DWORD PTR [rsi],ecx
   140039582:	add    al,BYTE PTR [rax]
   140039584:	(bad)  
   140039585:	xor    cl,BYTE PTR [rdx]
   140039587:	xor    BYTE PTR [rcx],al
   140039589:	add    al,0x1
   14003958b:	add    BYTE PTR [rdx+rax*2],al
   14003958e:	add    BYTE PTR [rax],al
   140039590:	add    DWORD PTR [rdx],ecx
   140039592:	add    al,BYTE PTR [rax]
   140039594:	or     dh,BYTE PTR [rdx]
   140039596:	(bad)  
   140039597:	xor    BYTE PTR [rcx],dl
   140039599:	sbb    DWORD PTR [rdx],ecx
   14003959b:	add    BYTE PTR [rcx],bl
   14003959d:	je     0x1400395aa
   14003959f:	add    BYTE PTR [rcx],bl
   1400395a1:	or     al,BYTE PTR fs:[rax]
   1400395a4:	sbb    DWORD PTR [rax+rcx*1],esi
   1400395a7:	add    BYTE PTR [rcx],bl
   1400395a9:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e3a99f
   1400395af:	rol    BYTE PTR [rax-0x78],0x0
   1400395b3:	add    BYTE PTR [rcx],al
   1400395b5:	add    BYTE PTR [rax],al
   1400395b7:	add    ch,dh
   1400395b9:	icebp  
   1400395ba:	add    DWORD PTR [rax],eax
   1400395bc:	sbb    esi,edx
   1400395be:	add    DWORD PTR [rax],eax
   1400395c0:	mov    bl,0xb0
   1400395c2:	add    al,BYTE PTR [rax]
   1400395c4:	add    BYTE PTR [rax],al
   1400395c6:	add    BYTE PTR [rax],al
   1400395c8:	add    DWORD PTR [rsi],eax
   1400395ca:	add    al,BYTE PTR [rax]
   1400395cc:	(bad)  
   1400395cd:	xor    al,BYTE PTR [rdx]
   1400395cf:	push   rax
   1400395d0:	add    DWORD PTR [rdi],ecx
   1400395d2:	(bad)  
   1400395d3:	add    BYTE PTR [rdi],cl
   1400395d5:	or     DWORD PTR fs:[rax],eax
   1400395d8:	sysenter 
   1400395da:	or     BYTE PTR [rax],al
   1400395dc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400395df:	jo     0x1400395e2
   1400395e1:	adc    BYTE PTR [rsi],al
   1400395e3:	add    BYTE PTR [rax],dl
   1400395e5:	fs or  eax,0xc341000
   1400395eb:	add    BYTE PTR [rax],dl
   1400395ed:	xchg   edx,eax
   1400395ee:	or     al,0x70
   1400395f0:	add    DWORD PTR [rcx+rax*1],eax
   1400395f3:	add    BYTE PTR [rdx+riz*2],al
   1400395f6:	add    BYTE PTR [rax],al
   1400395f8:	add    DWORD PTR [rip+0x64150006],edx        # 0x1a4189604
   1400395fe:	adc    BYTE PTR [rax],al
   140039600:	adc    eax,0x15000e34
   140039605:	mov    dl,0x11
   140039607:	jo     0x14003960a
   140039609:	adc    cl,BYTE PTR [rax]
   14003960b:	add    BYTE PTR [rdx],dl
   14003960d:	push   rsp
   14003960e:	or     al,BYTE PTR [rax]
   140039610:	adc    dh,BYTE PTR [rax+rcx*1]
   140039613:	add    BYTE PTR [rdx],dl
   140039615:	xor    cl,BYTE PTR [rsi]
   140039617:	loopne 0x140039625
   140039619:	jo     0x140039626
   14003961b:	(bad)  
   14003961c:	add    DWORD PTR [rcx+rax*1],eax
   14003961f:	add    BYTE PTR [rdx+rax*2],al
   140039622:	add    BYTE PTR [rax],al
   140039624:	add    DWORD PTR [rax],edx
   140039626:	(bad)  
   140039627:	add    BYTE PTR [rax],dl
   140039629:	adc    DWORD PTR fs:[rax],eax
   14003962c:	adc    BYTE PTR [rdx+0x7007e009],dh
   140039632:	(bad)  
   140039633:	push   rax
   140039634:	add    DWORD PTR [rsi],eax
   140039636:	add    al,BYTE PTR [rax]
   140039638:	(bad)  
   140039639:	xor    al,BYTE PTR [rdx]
   14003963b:	xor    BYTE PTR [rcx],dl
   14003963d:	or     al,BYTE PTR [rax+rax*1]
   140039640:	or     dh,BYTE PTR [rsi+rax*1]
   140039643:	add    BYTE PTR [rdx],cl
   140039645:	xor    al,BYTE PTR [rsi]
   140039647:	jo     0x140039689
   140039649:	mov    BYTE PTR [rax],al
   14003964b:	add    BYTE PTR [rdx],al
   14003964d:	add    BYTE PTR [rax],al
   14003964f:	add    BYTE PTR [rax+0x4],bl
   140039652:	add    al,BYTE PTR [rax]
   140039654:	(bad)  
   140039655:	add    al,0x2
   140039657:	add    ch,bh
   140039659:	mov    al,0x2
   14003965b:	add    BYTE PTR [rax],al
   14003965d:	add    BYTE PTR [rax],al
   14003965f:	add    BYTE PTR [rax+0x4],bh
   140039662:	add    al,BYTE PTR [rax]
   140039664:	jg     0x14003966a
   140039666:	add    al,BYTE PTR [rax]
   140039668:	(bad)  
   140039669:	mov    cl,0x2
   14003966b:	add    BYTE PTR [rax],al
   14003966d:	add    BYTE PTR [rax],al
   14003966f:	add    BYTE PTR [rcx],al
   140039671:	(bad)  
   140039672:	add    al,BYTE PTR [rax]
   140039674:	(bad)  
   140039675:	xor    al,BYTE PTR [rdx]
   140039677:	push   rax
   140039678:	add    DWORD PTR [rsi],eax
   14003967a:	add    al,BYTE PTR [rax]
   14003967c:	(bad)  
   14003967d:	xor    al,BYTE PTR [rdx]
   14003967f:	push   rax
   140039680:	sbb    DWORD PTR [rbx],ebx
   140039682:	add    eax,DWORD PTR [rax]
   140039684:	or     DWORD PTR [rcx],eax
   140039686:	sub    al,BYTE PTR [rax]
   140039688:	add    dh,BYTE PTR [rax]
   14003968a:	add    BYTE PTR [rax],al
   14003968c:	loopne 0x140039650
   14003968e:	add    BYTE PTR [rax],al
   140039690:	rex add DWORD PTR [rax],eax
   140039693:	add    BYTE PTR [rcx],dl
   140039695:	(bad)  
   140039696:	add    al,BYTE PTR [rax]
   140039698:	(bad)  
   140039699:	xor    cl,BYTE PTR [rdx]
   14003969b:	xor    BYTE PTR [rax-0x78],al
   14003969e:	add    BYTE PTR [rax],al
   1400396a0:	add    al,BYTE PTR [rax]
   1400396a2:	add    BYTE PTR [rax],al
   1400396a4:	js     0x1400396a9
   1400396a6:	add    al,BYTE PTR [rax]
   1400396a8:	pushf  
   1400396a9:	add    eax,DWORD PTR [rdx]
   1400396ab:	add    bl,cl
   1400396ad:	mov    al,0x2
   1400396af:	add    BYTE PTR [rax],al
   1400396b1:	add    BYTE PTR [rax],al
   1400396b3:	add    BYTE PTR [rdi-0x21fffdfd],dh
   1400396b9:	add    eax,DWORD PTR [rdx]
   1400396bb:	add    ah,ah
   1400396bd:	mov    al,0x2
   1400396bf:	add    BYTE PTR [rax],al
   1400396c1:	add    BYTE PTR [rax],al
   1400396c3:	add    BYTE PTR [rcx],al
   1400396c5:	(bad)  
   1400396c6:	add    al,BYTE PTR [rax]
   1400396c8:	(bad)  
   1400396c9:	xor    al,BYTE PTR [rdx]
   1400396cb:	push   rax
   1400396cc:	add    DWORD PTR [rsi],eax
   1400396ce:	add    al,BYTE PTR [rax]
   1400396d0:	(bad)  
   1400396d1:	xor    al,BYTE PTR [rdx]
   1400396d3:	push   rax
   1400396d4:	adc    DWORD PTR [rcx],ebx
   1400396d6:	or     al,BYTE PTR [rax]
   1400396d8:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   1400396dc:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   1400396e0:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400396e3:	add    BYTE PTR [rcx],bl
   1400396e5:	push   rdx
   1400396e6:	adc    eax,0x11e013f0
   1400396eb:	rol    BYTE PTR [rax-0x78],0x0
   1400396ef:	add    BYTE PTR [rbx],al
   1400396f1:	add    BYTE PTR [rax],al
   1400396f3:	add    BYTE PTR [rax+0x6],bh
   1400396f6:	add    al,BYTE PTR [rax]
   1400396f8:	mov    eax,DWORD PTR [rsi]
   1400396fa:	add    al,BYTE PTR [rax]
   1400396fc:	rex.W mov cl,0x2
   1400396ff:	add    BYTE PTR [rax],al
   140039701:	add    BYTE PTR [rax],al
   140039703:	add    bl,dh
   140039705:	(bad)  
   140039706:	add    al,BYTE PTR [rax]
   140039708:	push   rsi
   140039709:	(bad)  
   14003970a:	add    al,BYTE PTR [rax]
   14003970c:	movsxd esi,DWORD PTR [rcx+0x2]
   140039712:	add    BYTE PTR [rax],al
   140039714:	push   rdx
   140039715:	(bad)  
   140039716:	add    al,BYTE PTR [rax]
   140039718:	jae    0x140039721
   14003971a:	add    al,BYTE PTR [rax]
   14003971c:	jle    0x1400396cf
   14003971e:	add    al,BYTE PTR [rax]
   140039720:	add    BYTE PTR [rax],al
   140039722:	add    BYTE PTR [rax],al
   140039724:	add    DWORD PTR [rsi],eax
   140039726:	add    al,BYTE PTR [rax]
   140039728:	(bad)  
   140039729:	xor    al,BYTE PTR [rdx]
   14003972b:	push   rax
   14003972c:	add    DWORD PTR [rsi],eax
   14003972e:	add    al,BYTE PTR [rax]
   140039730:	(bad)  
   140039731:	xor    al,BYTE PTR [rdx]
   140039733:	push   rax
   140039734:	add    DWORD PTR [rsi],eax
   140039736:	add    al,BYTE PTR [rax]
   140039738:	(bad)  
   140039739:	xor    al,BYTE PTR [rdx]
   14003973b:	push   rax
   14003973c:	add    DWORD PTR [rax+rcx*1],edx
   14003973f:	add    BYTE PTR [rsp+riz*2],dl
   140039742:	or     BYTE PTR [rax],al
   140039744:	adc    al,0x54
   140039746:	(bad)  
   140039747:	add    BYTE PTR [rsp+rsi*1],dl
   14003974a:	(bad)  
   14003974b:	add    BYTE PTR [rdx+rsi*1],dl
   14003974e:	adc    BYTE PTR [rax+0x1],dh
   140039751:	clts   
   140039753:	add    BYTE PTR [rdi],cl
   140039755:	or     DWORD PTR fs:[rax],eax
   140039758:	sysenter 
   14003975a:	or     BYTE PTR [rax],al
   14003975c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14003975f:	jo     0x140039772
   140039761:	(bad)  
   140039762:	add    al,BYTE PTR [rax]
   140039764:	(bad)  
   140039765:	xor    al,BYTE PTR [rdx]
   140039767:	jo     0x1400397a9
   140039769:	mov    BYTE PTR [rax],al
   14003976b:	add    BYTE PTR [rcx],al
   14003976d:	add    BYTE PTR [rax],al
   14003976f:	add    BYTE PTR [rcx-0x30fffe06],bh
   140039775:	cli    
   140039776:	add    DWORD PTR [rax],eax
   140039778:	(bad)  
   140039779:	mov    cl,0x2
   14003977b:	add    BYTE PTR [rax],al
   14003977d:	add    BYTE PTR [rax],al
   14003977f:	add    BYTE PTR [rcx],al
   140039781:	(bad)  
   140039782:	add    al,BYTE PTR [rax]
   140039784:	(bad)  
   140039785:	xor    al,BYTE PTR [rdx]
   140039787:	push   rax
   140039788:	sbb    DWORD PTR [rip+0x11c000a],ebp        # 0x1411f9798
   14003978e:	rex.WB add BYTE PTR [rip+0x9e00bf0],cl        # 0x149e3a385
   140039795:	rol    BYTE PTR [rdi],1
   140039797:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143639c0e
   14003979e:	add    dl,BYTE PTR [rax-0x20]
   1400397a1:	ret    0x0
   1400397a4:	xor    BYTE PTR [rdx],al
   1400397a6:	add    BYTE PTR [rax],al
   1400397a8:	add    DWORD PTR [rdi],edx
   1400397aa:	add    eax,0x13621700
   1400397af:	jo     0x1400397c3
   1400397b1:	(bad)  
   1400397b2:	adc    DWORD PTR [rax+0x10],edx
   1400397b5:	xor    BYTE PTR [rax],al
   1400397b7:	add    BYTE PTR [rcx],al
   1400397b9:	adc    al,0x8
   1400397bb:	add    BYTE PTR [rsp+riz*2],dl
   1400397be:	or     al,BYTE PTR [rax]
   1400397c0:	adc    al,0x54
   1400397c2:	or     DWORD PTR [rax],eax
   1400397c4:	adc    al,0x34
   1400397c6:	or     BYTE PTR [rax],al
   1400397c8:	adc    al,0x52
   1400397ca:	adc    BYTE PTR [rax+0x1],dh
   1400397cd:	sbb    BYTE PTR [rdx],cl
   1400397cf:	add    BYTE PTR [rax],bl
   1400397d1:	fs or  al,0x0
   1400397d4:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   1400397d8:	sbb    BYTE PTR [rdx+rcx*1],dh
   1400397db:	add    BYTE PTR [rax],bl
   1400397dd:	push   rdx
   1400397de:	adc    al,0xf0
   1400397e0:	adc    ah,al
   1400397e2:	adc    BYTE PTR [rax+0x19],dh
   1400397e5:	xor    BYTE PTR [rbx],cl
   1400397e7:	add    BYTE PTR [rdi],bl
   1400397e9:	xor    al,0x71
   1400397eb:	add    BYTE PTR [rdi],bl
   1400397ed:	add    DWORD PTR [rsi+0x0],esp
   1400397f0:	adc    al,dh
   1400397f2:	(bad)  
   1400397f3:	loopne 0x140039801
   1400397f5:	ror    BYTE PTR [rdx],1
   1400397f7:	ror    BYTE PTR [rax],0x70
   1400397fa:	(bad)  
   1400397fb:	(bad)  
   1400397fc:	(bad)  
   1400397fd:	push   rax
   1400397fe:	add    BYTE PTR [rax],al
   140039800:	loopne 0x1400397c4
   140039802:	add    BYTE PTR [rax],al
   140039804:	and    BYTE PTR [rbx],al
   140039806:	add    BYTE PTR [rax],al
   140039808:	add    DWORD PTR [rsp+rcx*1],ebx
   14003980b:	add    BYTE PTR [rsp+riz*2],bl
   14003980e:	(bad)  
   14003980f:	add    BYTE PTR [rsp+rdx*2],bl
   140039812:	or     eax,0xc341c00
   140039817:	add    BYTE PTR [rdx+rdx*2],bl
   14003981a:	sbb    al,dh
   14003981c:	(bad)  
   14003981d:	loopne 0x140039833
   14003981f:	rcl    BYTE PTR [rdx],1
   140039821:	rcl    BYTE PTR [rax],0x70
   140039824:	sbb    DWORD PTR [rcx],ebp
   140039826:	or     eax,DWORD PTR [rax]
   140039828:	(bad)  
   140039829:	xor    al,0x4b
   14003982b:	add    BYTE PTR [rdi],dl
   14003982d:	add    DWORD PTR [rax+0x0],eax
   140039830:	adc    al,dh
   140039832:	(bad)  
   140039833:	loopne 0x140039841
   140039835:	ror    BYTE PTR [rdx],1
   140039837:	ror    BYTE PTR [rax],0x70
   14003983a:	(bad)  
   14003983b:	(bad)  
   14003983c:	(bad)  
   14003983d:	push   rax
   14003983e:	add    BYTE PTR [rax],al
   140039840:	loopne 0x140039804
   140039842:	add    BYTE PTR [rax],al
   140039844:	lock add DWORD PTR [rax],eax
   140039847:	add    BYTE PTR [rcx],al
   140039849:	add    al,0x1
   14003984b:	add    BYTE PTR [rdx+rax*2],al
   14003984e:	add    BYTE PTR [rax],al
   140039850:	sbb    DWORD PTR [rip+0x741f000c],ebp        # 0x1b4229862
   140039856:	adc    eax,0x14641f00
   14003985b:	add    BYTE PTR [rdi],bl
   14003985d:	xor    al,0x12
   14003985f:	add    BYTE PTR [rdi],bl
   140039861:	mov    dl,0x18
   140039863:	lock (bad) 
   140039865:	loopne 0x14003987b
   140039867:	rcl    BYTE PTR [rdx],1
   140039869:	rcl    BYTE PTR [rax],0x50
   14003986c:	loopne 0x140039830
   14003986e:	add    BYTE PTR [rax],al
   140039870:	pop    rax
   140039871:	add    BYTE PTR [rax],al
   140039873:	add    BYTE PTR [rcx],bl
   140039875:	sub    eax,0x741f000c
   14003987a:	adc    eax,0x14641f00
   14003987f:	add    BYTE PTR [rdi],bl
   140039881:	xor    al,0x12
   140039883:	add    BYTE PTR [rdi],bl
   140039885:	mov    dl,0x18
   140039887:	lock (bad) 
   140039889:	loopne 0x14003989f
   14003988b:	rcl    BYTE PTR [rdx],1
   14003988d:	rcl    BYTE PTR [rax],0x50
   140039890:	loopne 0x140039854
   140039892:	add    BYTE PTR [rax],al
   140039894:	pop    rax
   140039895:	add    BYTE PTR [rax],al
   140039897:	add    BYTE PTR [rcx],bl
   140039899:	(bad)  
   14003989a:	(bad)  
   14003989b:	add    BYTE PTR [rdi],cl
   14003989d:	push   rsp
   14003989e:	or     BYTE PTR [rax],al
   1400398a0:	sysenter 
   1400398a2:	(bad)  
   1400398a3:	add    BYTE PTR [rdi],cl
   1400398a5:	xor    cl,BYTE PTR [rbx]
   1400398a7:	jo     0x140039889
   1400398a9:	ret    0x0
   1400398ac:	adc    BYTE PTR [rax],al
   1400398ae:	add    BYTE PTR [rax],al
   1400398b0:	add    DWORD PTR [rax],ebx
   1400398b2:	or     al,BYTE PTR [rax]
   1400398b4:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   1400398b8:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400398bc:	sbb    BYTE PTR [rax+rcx*1],dh
   1400398bf:	add    BYTE PTR [rax],bl
   1400398c1:	xor    dl,BYTE PTR [rax+rsi*8]
   1400398c4:	adc    ah,al
   1400398c6:	adc    BYTE PTR [rax+0x1],dh
   1400398c9:	adc    ecx,DWORD PTR [rax]
   1400398cb:	add    BYTE PTR [rbx],dl
   1400398cd:	je     0x1400398d3
   1400398cf:	add    BYTE PTR [rdi],cl
   1400398d1:	add    eax,DWORD PTR fs:[rax]
   1400398d4:	or     edx,DWORD PTR [rdx+rax*1+0x0]
   1400398d8:	(bad)  
   1400398d9:	xor    al,0x1
   1400398db:	add    BYTE PTR [rcx],bl
   1400398dd:	and    eax,0x3417000a
   1400398e2:	(bad)  
   1400398e3:	add    BYTE PTR [rdi],dl
   1400398e5:	rcl    BYTE PTR [rax],cl
   1400398e7:	lock (bad) 
   1400398e9:	loopne 0x1400398f7
   1400398eb:	ror    BYTE PTR [rdx],1
   1400398ed:	ror    BYTE PTR [rax],0x70
   1400398f0:	(bad)  
   1400398f1:	(bad)  
   1400398f2:	(bad)  
   1400398f3:	push   rax
   1400398f4:	loopne 0x1400398b8
   1400398f6:	add    BYTE PTR [rax],al
   1400398f8:	(bad)  
   1400398f9:	add    BYTE PTR [rax],al
   1400398fb:	add    BYTE PTR [rcx],bl
   1400398fd:	sub    cl,BYTE PTR [rbx]
   1400398ff:	add    BYTE PTR [rsp+rsi*1],bl
   140039902:	(bad)  
   140039903:	add    BYTE PTR [rcx+rax*1],bl
   140039906:	adc    al,0x0
   140039908:	adc    al,dh
   14003990a:	(bad)  
   14003990b:	loopne 0x140039919
   14003990d:	ror    BYTE PTR [rdx],1
   14003990f:	ror    BYTE PTR [rax],0x70
   140039912:	(bad)  
   140039913:	(bad)  
   140039914:	(bad)  
   140039915:	push   rax
   140039916:	add    BYTE PTR [rax],al
   140039918:	loopne 0x1400398dc
   14003991a:	add    BYTE PTR [rax],al
   14003991c:	cwde   
   14003991d:	add    BYTE PTR [rax],al
   14003991f:	add    BYTE PTR [rcx],bl
   140039921:	sbb    DWORD PTR [rax+rax*1],eax
   140039924:	or     dh,BYTE PTR [rcx+rdx*1]
   140039927:	add    BYTE PTR [rdx],cl
   140039929:	mov    dl,0x6
   14003992b:	jo     0x14003990d
   14003992d:	ret    0x0
   140039930:	push   rax
   140039931:	add    BYTE PTR [rax],al
   140039933:	add    BYTE PTR [rcx],bl
   140039935:	xor    eax,0x7427000c
   14003993a:	adc    eax,DWORD PTR [rax]
   14003993c:	(bad)  
   14003993d:	adc    al,BYTE PTR fs:[rax]
   140039940:	(bad)  
   140039941:	xor    al,0x11
   140039943:	add    BYTE PTR [rdi],ah
   140039945:	xchg   edx,eax
   140039946:	and    al,dh
   140039948:	(bad)  
   140039949:	loopne 0x140039967
   14003994b:	rcr    BYTE PTR [rdx],1
   14003994d:	rcr    BYTE PTR [rax],0x50
   140039950:	loopne 0x140039914
   140039952:	add    BYTE PTR [rax],al
   140039954:	rex.W add BYTE PTR [rax],al
   140039957:	add    BYTE PTR [rcx],bl
   140039959:	sub    eax,0x741f000c
   14003995e:	ltr    WORD PTR [rdi]
   140039961:	fs (bad) 
   140039963:	add    BYTE PTR [rdi],bl
   140039965:	xor    al,0xd
   140039967:	add    BYTE PTR [rdi],bl
   140039969:	push   rdx
   14003996a:	sbb    al,dh
   14003996c:	(bad)  
   14003996d:	loopne 0x140039983
   14003996f:	rcl    BYTE PTR [rdx],1
   140039971:	rcl    BYTE PTR [rax],0x50
   140039974:	loopne 0x140039938
   140039976:	add    BYTE PTR [rax],al
   140039978:	and    BYTE PTR [rax],al
   14003997a:	add    BYTE PTR [rax],al
   14003997c:	sbb    DWORD PTR [rdx],ebp
   14003997e:	or     eax,DWORD PTR [rax]
   140039980:	sbb    al,0x34
   140039982:	and    DWORD PTR [rax],eax
   140039984:	sbb    al,0x1
   140039986:	sbb    BYTE PTR [rax],al
   140039988:	adc    al,dh
   14003998a:	(bad)  
   14003998b:	loopne 0x140039999
   14003998d:	ror    BYTE PTR [rdx],1
   14003998f:	ror    BYTE PTR [rax],0x70
   140039992:	(bad)  
   140039993:	(bad)  
   140039994:	(bad)  
   140039995:	push   rax
   140039996:	add    BYTE PTR [rax],al
   140039998:	loopne 0x14003995c
   14003999a:	add    BYTE PTR [rax],al
   14003999c:	mov    al,0x0
   14003999e:	add    BYTE PTR [rax],al
   1400399a0:	adc    DWORD PTR [rcx],edx
   1400399a2:	(bad)  
   1400399a3:	add    BYTE PTR [rcx],dl
   1400399a5:	xor    al,0xa
   1400399a7:	add    BYTE PTR [rcx],dl
   1400399a9:	xor    cl,BYTE PTR [rip+0xa700be0]        # 0x14a73a58f
   1400399af:	(bad)  
   1400399b0:	mov    BYTE PTR [rax],al
   1400399b3:	add    BYTE PTR [rcx],al
   1400399b5:	add    BYTE PTR [rax],al
   1400399b7:	add    bh,dh
   1400399b9:	(bad)  
   1400399ba:	add    al,BYTE PTR [rax]
   1400399bc:	cmp    eax,DWORD PTR [rax+0x2]
   1400399bf:	add    BYTE PTR [rcx+0x2b1],bl
   1400399c5:	add    BYTE PTR [rax],al
   1400399c7:	add    BYTE PTR [rcx],al
   1400399c9:	(bad)  
   1400399ca:	add    al,BYTE PTR [rax]
   1400399cc:	(bad)  
   1400399cd:	xor    al,BYTE PTR [rdx]
   1400399cf:	push   rax
   1400399d0:	adc    DWORD PTR [rdi],ecx
   1400399d2:	add    al,0x0
   1400399d4:	sysenter 
   1400399d6:	(bad)  
   1400399d7:	add    BYTE PTR [rdi],cl
   1400399d9:	xor    cl,BYTE PTR [rbx]
   1400399db:	jo     0x140039a1d
   1400399dd:	mov    BYTE PTR [rax],al
   1400399df:	add    BYTE PTR [rcx],al
   1400399e1:	add    BYTE PTR [rax],al
   1400399e3:	add    BYTE PTR [rbx],ch
   1400399e5:	add    al,BYTE PTR [r8]
   1400399e8:	xor    eax,0xb0000241
   1400399ed:	mov    cl,0x2
   1400399ef:	add    BYTE PTR [rax],al
   1400399f1:	add    BYTE PTR [rax],al
   1400399f3:	add    BYTE PTR [rcx],al
   1400399f5:	(bad)  
   1400399f6:	add    al,BYTE PTR [rax]
   1400399f8:	(bad)  
   1400399f9:	xor    al,BYTE PTR [rdx]
   1400399fb:	push   rax
   1400399fc:	add    DWORD PTR [rdx],ecx
   1400399fe:	add    al,0x0
   140039a00:	or     dh,BYTE PTR [rsi+rax*1]
   140039a03:	add    BYTE PTR [rdx],cl
   140039a05:	xor    al,BYTE PTR [rsi]
   140039a07:	jo     0x140039a0a
   140039a09:	add    al,0x1
   140039a0b:	add    BYTE PTR [rdx+rax*4],al
   140039a0e:	add    BYTE PTR [rax],al
   140039a10:	add    DWORD PTR [rcx+rax*1],eax
   140039a13:	add    BYTE PTR [rdx+rax*2],al
   140039a16:	add    BYTE PTR [rax],al
   140039a18:	sbb    DWORD PTR [rax],esi
   140039a1a:	or     eax,DWORD PTR [rax]
   140039a1c:	(bad)  
   140039a1d:	xor    al,0x66
   140039a1f:	add    BYTE PTR [rdi],bl
   140039a21:	add    DWORD PTR [rax+rax*1+0x10],ebx
   140039a25:	lock (bad) 
   140039a27:	loopne 0x140039a35
   140039a29:	ror    BYTE PTR [rdx],1
   140039a2b:	ror    BYTE PTR [rax],0x70
   140039a2e:	(bad)  
   140039a2f:	(bad)  
   140039a30:	(bad)  
   140039a31:	push   rax
   140039a32:	add    BYTE PTR [rax],al
   140039a34:	loopne 0x1400399f8
   140039a36:	add    BYTE PTR [rax],al
   140039a38:	fadd   DWORD PTR [rdx]
   140039a3a:	add    BYTE PTR [rax],al
   140039a3c:	add    DWORD PTR [rsi],eax
   140039a3e:	add    al,BYTE PTR [rax]
   140039a40:	(bad)  
   140039a41:	xor    al,BYTE PTR [rdx]
   140039a43:	xor    BYTE PTR [rcx],al
   140039a45:	sbb    BYTE PTR [rax],cl
   140039a47:	add    BYTE PTR [rax],bl
   140039a49:	or     BYTE PTR fs:[rax],al
   140039a4c:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140039a50:	sbb    BYTE PTR [rsi+rax*1],dh
   140039a53:	add    BYTE PTR [rax],bl
   140039a55:	xor    dl,BYTE PTR [rax+rsi*2]
   140039a58:	add    DWORD PTR [rax],ebx
   140039a5a:	or     al,BYTE PTR [rax]
   140039a5c:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140039a60:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140039a64:	sbb    BYTE PTR [rax+rcx*1],dh
   140039a67:	add    BYTE PTR [rax],bl
   140039a69:	xor    dl,BYTE PTR [rax+rsi*8]
   140039a6c:	adc    ah,al
   140039a6e:	adc    BYTE PTR [rax+0x19],dh
   140039a71:	xor    BYTE PTR [rbx],cl
   140039a73:	add    BYTE PTR [rdi],bl
   140039a75:	xor    al,0x96
   140039a77:	add    DWORD PTR [rdi],ebx
   140039a79:	add    DWORD PTR [rcx+rax*1-0x1ff10ff0],ecx
   140039a80:	or     al,0xd0
   140039a82:	or     al,al
   140039a84:	or     BYTE PTR [rax+0x7],dh
   140039a87:	(bad)  
   140039a88:	(bad)  
   140039a89:	push   rax
   140039a8a:	add    BYTE PTR [rax],al
   140039a8c:	loopne 0x140039a50
   140039a8e:	add    BYTE PTR [rax],al
   140039a90:	pop    rax
   140039a91:	or     al,0x0
   140039a93:	add    BYTE PTR [rcx],al
   140039a95:	clts   
   140039a97:	add    BYTE PTR [rdi],cl
   140039a99:	in     al,0x3
   140039a9b:	add    BYTE PTR [rdx],cl
   140039a9d:	je     0x140039aa1
   140039a9f:	add    BYTE PTR [rip+0x1000134],al        # 0x141039bd9
   140039aa5:	(bad)  
   140039aa6:	add    al,BYTE PTR [rax]
   140039aa8:	(bad)  
   140039aa9:	xor    al,BYTE PTR [rdx]
   140039aab:	xor    BYTE PTR [rcx],al
   140039aad:	sbb    BYTE PTR [rax],cl
   140039aaf:	add    BYTE PTR [rax],bl
   140039ab1:	or     BYTE PTR fs:[rax],al
   140039ab4:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140039ab8:	sbb    BYTE PTR [rsi+rax*1],dh
   140039abb:	add    BYTE PTR [rax],bl
   140039abd:	xor    dl,BYTE PTR [rax+rsi*2]
   140039ac0:	add    DWORD PTR [rax],ebx
   140039ac2:	or     al,BYTE PTR [rax]
   140039ac4:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140039ac8:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140039acc:	sbb    BYTE PTR [rax+rcx*1],dh
   140039acf:	add    BYTE PTR [rax],bl
   140039ad1:	xor    dl,BYTE PTR [rax+rsi*8]
   140039ad4:	adc    ah,al
   140039ad6:	adc    BYTE PTR [rax+0x1],dh
   140039ad9:	add    al,0x1
   140039adb:	add    BYTE PTR [rdx+rax*2],al
   140039ade:	add    BYTE PTR [rax],al
   140039ae0:	add    DWORD PTR [rcx+rax*1],eax
   140039ae3:	add    BYTE PTR [rdx+rax*2],al
   140039ae6:	add    BYTE PTR [rax],al
   140039ae8:	add    DWORD PTR [rcx+rax*1],eax
   140039aeb:	add    BYTE PTR [rdx+rax*2],al
   140039aee:	add    BYTE PTR [rax],al
   140039af0:	add    DWORD PTR [rcx+rax*1],eax
   140039af3:	add    BYTE PTR [rdx+rax*2],al
   140039af6:	add    BYTE PTR [rax],al
   140039af8:	sbb    DWORD PTR [rcx],esi
   140039afa:	or     eax,0x1b641f00
   140039aff:	add    BYTE PTR [rdi],bl
   140039b01:	push   rsp
   140039b02:	sbb    al,BYTE PTR [rax]
   140039b04:	(bad)  
   140039b05:	xor    al,0x19
   140039b07:	add    BYTE PTR [rdi],bl
   140039b09:	add    DWORD PTR [rdx],edx
   140039b0b:	add    BYTE PTR [rax],bl
   140039b0d:	lock (bad) 
   140039b0f:	loopne 0x140039b25
   140039b11:	rcl    BYTE PTR [rdx],1
   140039b13:	rcl    BYTE PTR [rax],0x70
   140039b16:	add    BYTE PTR [rax],al
   140039b18:	loopne 0x140039adc
   140039b1a:	add    BYTE PTR [rax],al
   140039b1c:	mov    BYTE PTR [rax],al
   140039b1e:	add    BYTE PTR [rax],al
   140039b20:	add    DWORD PTR [rcx+rax*1],eax
   140039b23:	add    BYTE PTR [rdx+riz*2],al
   140039b26:	add    BYTE PTR [rax],al
   140039b28:	add    DWORD PTR [rcx+rax*1],eax
   140039b2b:	add    BYTE PTR [rdx+riz*2],al
   140039b2e:	add    BYTE PTR [rax],al
   140039b30:	add    DWORD PTR [rcx+rax*1],eax
   140039b33:	add    BYTE PTR [rdx+riz*2],al
   140039b36:	add    BYTE PTR [rax],al
   140039b38:	add    DWORD PTR [rcx+rax*1],eax
   140039b3b:	add    BYTE PTR [rdx+riz*2],al
   140039b3e:	add    BYTE PTR [rax],al
   140039b40:	add    DWORD PTR [rcx+rax*1],eax
   140039b43:	add    BYTE PTR [rdx+riz*2],al
   140039b46:	add    BYTE PTR [rax],al
   140039b48:	add    DWORD PTR [rcx+rax*1],eax
   140039b4b:	add    BYTE PTR [rdx+riz*2],al
   140039b4e:	add    BYTE PTR [rax],al
   140039b50:	add    DWORD PTR [rcx+rax*1],eax
   140039b53:	add    BYTE PTR [rdx+rax*2],al
   140039b56:	add    BYTE PTR [rax],al
   140039b58:	add    DWORD PTR [rcx+rax*1],eax
   140039b5b:	add    BYTE PTR [rdx+rax*2],al
   140039b5e:	add    BYTE PTR [rax],al
   140039b60:	add    DWORD PTR [rsp+rcx*1],ebx
   140039b63:	add    BYTE PTR [rsp+riz*2],bl
   140039b66:	adc    DWORD PTR [rax],eax
   140039b68:	sbb    al,0x54
   140039b6a:	adc    BYTE PTR [rax],al
   140039b6c:	sbb    al,0x34
   140039b6e:	(bad)  
   140039b6f:	add    BYTE PTR [rdx+rsi*2],bl
   140039b72:	sbb    al,dh
   140039b74:	(bad)  
   140039b75:	loopne 0x140039b8b
   140039b77:	rcl    BYTE PTR [rdx],1
   140039b79:	rcl    BYTE PTR [rax],0x70
   140039b7c:	add    DWORD PTR [rcx+rax*1],eax
   140039b7f:	add    BYTE PTR [rdx+riz*2],al
   140039b82:	add    BYTE PTR [rax],al
   140039b84:	add    DWORD PTR [rcx+rax*1],eax
   140039b87:	add    BYTE PTR [rdx+riz*2],al
   140039b8a:	add    BYTE PTR [rax],al
   140039b8c:	add    DWORD PTR [rcx+rax*1],eax
   140039b8f:	add    BYTE PTR [rdx+riz*2],al
   140039b92:	add    BYTE PTR [rax],al
   140039b94:	add    DWORD PTR [rcx+rax*1],eax
   140039b97:	add    BYTE PTR [rdx+riz*2],al
   140039b9a:	add    BYTE PTR [rax],al
   140039b9c:	add    DWORD PTR [rcx+rax*1],eax
   140039b9f:	add    BYTE PTR [rdx+riz*2],al
   140039ba2:	add    BYTE PTR [rax],al
   140039ba4:	add    DWORD PTR [rcx+rax*1],eax
   140039ba7:	add    BYTE PTR [rdx+riz*2],al
   140039baa:	add    BYTE PTR [rax],al
   140039bac:	add    DWORD PTR [rsi],edx
   140039bae:	or     al,BYTE PTR [rax]
   140039bb0:	(bad)  
   140039bb1:	push   rsp
   140039bb2:	adc    BYTE PTR [rax],al
   140039bb4:	(bad)  
   140039bb5:	xor    al,0xe
   140039bb7:	add    BYTE PTR [rsi],dl
   140039bb9:	jb     0x140039bcd
   140039bbb:	lock adc al,ah
   140039bbe:	(bad)  
   140039bbf:	ror    BYTE PTR [rax+rsi*2],0xb
   140039bc3:	(bad)  
   140039bc4:	sbb    DWORD PTR [rcx+rcx*1],esp
   140039bc7:	add    BYTE PTR [rdx],dl
   140039bc9:	add    DWORD PTR [rsi],ebx
   140039bcb:	add    BYTE PTR [rbx],cl
   140039bcd:	lock or eax,esp
   140039bd0:	(bad)  
   140039bd1:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14363a048
   140039bd8:	add    dh,BYTE PTR [rax]
   140039bda:	add    BYTE PTR [rax],al
   140039bdc:	loopne 0x140039ba0
   140039bde:	add    BYTE PTR [rax],al
   140039be0:	loopne 0x140039be2
   140039be2:	add    BYTE PTR [rax],al
   140039be4:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b4209bf6
   140039bea:	or     eax,DWORD PTR [rax]
   140039bec:	sbb    eax,0x1d000a64
   140039bf1:	push   rsp
   140039bf2:	or     DWORD PTR [rax],eax
   140039bf4:	sbb    eax,0x1d000834
   140039bf9:	xor    bl,BYTE PTR [rcx]
   140039bfb:	lock (bad) 
   140039bfd:	loopne 0x140039c14
   140039bff:	rol    BYTE PTR [rcx],0x6
   140039c02:	add    al,BYTE PTR [rax]
   140039c04:	(bad)  
   140039c05:	xor    al,BYTE PTR [rdx]
   140039c07:	xor    BYTE PTR [rcx],bl
   140039c09:	(bad)  
   140039c0a:	or     DWORD PTR [rax],eax
   140039c0c:	adc    eax,0x15001e54
   140039c11:	xor    al,0x1d
   140039c13:	add    BYTE PTR [rip+0xe001801],dl        # 0x14e03b41a
   140039c19:	loopne 0x140039c27
   140039c1b:	jo     0x140039c28
   140039c1d:	(bad)  
   140039c1e:	add    BYTE PTR [rax],al
   140039c20:	loopne 0x140039be4
   140039c22:	add    BYTE PTR [rax],al
   140039c24:	mov    al,0x0
   140039c26:	add    BYTE PTR [rax],al
   140039c28:	add    DWORD PTR [rsi],eax
   140039c2a:	add    al,BYTE PTR [rax]
   140039c2c:	(bad)  
   140039c2d:	xor    al,BYTE PTR [rdx]
   140039c2f:	xor    BYTE PTR [rcx],bl
   140039c31:	(bad)  
   140039c32:	add    eax,0x29340d00
   140039c37:	add    BYTE PTR [rip+0x6002601],cl        # 0x14603c23e
   140039c3d:	jo     0x140039c3f
   140039c3f:	add    al,ah
   140039c41:	ret    0x0
   140039c44:	and    BYTE PTR [rcx],al
   140039c46:	add    BYTE PTR [rax],al
   140039c48:	sbb    DWORD PTR [rbx],ebx
   140039c4a:	add    eax,DWORD PTR [rax]
   140039c4c:	or     DWORD PTR [rcx],eax
   140039c4e:	(bad)  
   140039c4f:	add    BYTE PTR [rdx],al
   140039c51:	xor    BYTE PTR [rax],al
   140039c53:	add    al,ah
   140039c55:	ret    0x0
   140039c58:	loopne 0x140039c5a
   140039c5a:	add    BYTE PTR [rax],al
   140039c5c:	add    DWORD PTR [rdi],ecx
   140039c5e:	(bad)  
   140039c5f:	add    BYTE PTR [rdi],cl
   140039c61:	or     BYTE PTR fs:[rax],al
   140039c64:	sysenter 
   140039c66:	(bad)  
   140039c67:	add    BYTE PTR [rdi],cl
   140039c69:	xor    cl,BYTE PTR [rbx]
   140039c6b:	jo     0x140039c86
   140039c6d:	sbb    DWORD PTR [rax+rax*1],eax
   140039c70:	or     dh,BYTE PTR [rbx+rcx*1]
   140039c73:	add    BYTE PTR [rdx],cl
   140039c75:	jb     0x140039c7d
   140039c77:	jo     0x140039c59
   140039c79:	ret    0x0
   140039c7c:	cmp    BYTE PTR [rax],al
   140039c7e:	add    BYTE PTR [rax],al
   140039c80:	add    DWORD PTR [rdi],ecx
   140039c82:	(bad)  
   140039c83:	add    BYTE PTR [rdi],cl
   140039c85:	fs (bad) 
   140039c87:	add    BYTE PTR [rdi],cl
   140039c89:	xor    al,0x6
   140039c8b:	add    BYTE PTR [rdi],cl
   140039c8d:	xor    cl,BYTE PTR [rbx]
   140039c8f:	jo     0x140039caa
   140039c91:	and    BYTE PTR [rax],cl
   140039c93:	add    BYTE PTR [rdx],dl
   140039c95:	jb     0x140039ca2
   140039c97:	lock or eax,esp
   140039c9a:	(bad)  
   140039c9b:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14363a112
   140039ca2:	add    dl,BYTE PTR [rax-0x20]
   140039ca5:	ret    0x0
   140039ca8:	xor    BYTE PTR [rax],al
   140039caa:	add    BYTE PTR [rax],al
   140039cac:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b4209cbe
   140039cb2:	or     eax,DWORD PTR [rax]
   140039cb4:	sbb    eax,0x1d000a64
   140039cb9:	push   rsp
   140039cba:	or     DWORD PTR [rax],eax
   140039cbc:	sbb    eax,0x1d000834
   140039cc1:	xor    bl,BYTE PTR [rcx]
   140039cc3:	lock (bad) 
   140039cc5:	loopne 0x140039cdc
   140039cc7:	rol    BYTE PTR [rcx],0xa
   140039cca:	add    al,0x0
   140039ccc:	or     dh,BYTE PTR [rsi+rax*1]
   140039ccf:	add    BYTE PTR [rdx],cl
   140039cd1:	xor    al,BYTE PTR [rsi]
   140039cd3:	jo     0x140039cee
   140039cd5:	sub    cl,BYTE PTR [rcx]
   140039cd7:	add    BYTE PTR [rax],bl
   140039cd9:	je     0x140039d04
   140039cdb:	add    BYTE PTR [rax],bl
   140039cdd:	sub    BYTE PTR fs:[rax],al
   140039ce0:	sbb    BYTE PTR [rdi+riz*1],dh
   140039ce3:	add    BYTE PTR [rax],bl
   140039ce5:	add    DWORD PTR [rax+rax*1],esp
   140039ce8:	adc    eax,esp
   140039cea:	add    BYTE PTR [rax],al
   140039cec:	loopne 0x140039cb0
   140039cee:	add    BYTE PTR [rax],al
   140039cf0:	adc    BYTE PTR [rcx],al
   140039cf2:	add    BYTE PTR [rax],al
   140039cf4:	add    DWORD PTR [rdx],ecx
   140039cf6:	add    al,0x0
   140039cf8:	or     dh,BYTE PTR [rsi+rax*1]
   140039cfb:	add    BYTE PTR [rdx],cl
   140039cfd:	xor    al,BYTE PTR [rsi]
   140039cff:	jo     0x140039d1a
   140039d01:	and    al,0x7
   140039d03:	add    BYTE PTR [rdx],dl
   140039d05:	sub    BYTE PTR fs:[rax],al
   140039d08:	adc    dh,BYTE PTR [rdi+riz*1]
   140039d0b:	add    BYTE PTR [rdx],dl
   140039d0d:	add    DWORD PTR [rax+rax*1],esp
   140039d10:	or     esi,DWORD PTR [rax+0x0]
   140039d13:	add    al,ah
   140039d15:	ret    0x0
   140039d18:	adc    BYTE PTR [rcx],al
   140039d1a:	add    BYTE PTR [rax],al
   140039d1c:	add    DWORD PTR [rdx],ecx
   140039d1e:	add    al,0x0
   140039d20:	or     dh,BYTE PTR [rsi+rax*1]
   140039d23:	add    BYTE PTR [rdx],cl
   140039d25:	xor    al,BYTE PTR [rsi]
   140039d27:	jo     0x140039d42
   140039d29:	sub    DWORD PTR [rcx],ecx
   140039d2b:	add    BYTE PTR [rdi],dl
   140039d2d:	sub    DWORD PTR fs:[rax],eax
   140039d30:	(bad)  
   140039d31:	push   rsp
   140039d32:	sub    BYTE PTR [rax],al
   140039d34:	(bad)  
   140039d35:	xor    al,0x27
   140039d37:	add    BYTE PTR [rdi],dl
   140039d39:	add    DWORD PTR [rax+rax*1],esp
   140039d3c:	adc    BYTE PTR [rax+0x0],dh
   140039d3f:	add    al,ah
   140039d41:	ret    0x0
   140039d44:	adc    BYTE PTR [rcx],al
   140039d46:	add    BYTE PTR [rax],al
   140039d48:	add    DWORD PTR [rsi],eax
   140039d4a:	add    al,BYTE PTR [rax]
   140039d4c:	(bad)  
   140039d4d:	xor    al,BYTE PTR [rdx]
   140039d4f:	xor    BYTE PTR [rcx],al
   140039d51:	clts   
   140039d53:	add    BYTE PTR [rdi],cl
   140039d55:	or     BYTE PTR fs:[rax],al
   140039d58:	sysenter 
   140039d5a:	(bad)  
   140039d5b:	add    BYTE PTR [rdi],cl
   140039d5d:	xor    cl,BYTE PTR [rbx]
   140039d5f:	jo     0x140039d62
   140039d61:	adc    al,0x8
   140039d63:	add    BYTE PTR [rsp+riz*2],dl
   140039d66:	or     DWORD PTR [rax],eax
   140039d68:	adc    al,0x54
   140039d6a:	or     BYTE PTR [rax],al
   140039d6c:	adc    al,0x34
   140039d6e:	(bad)  
   140039d6f:	add    BYTE PTR [rdx+rsi*1],dl
   140039d72:	adc    BYTE PTR [rax+0x1],dh
   140039d75:	sbb    BYTE PTR [rdx],cl
   140039d77:	add    BYTE PTR [rax],bl
   140039d79:	or     BYTE PTR fs:[rax],al
   140039d7c:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140039d80:	sbb    BYTE PTR [rsi+rax*1],dh
   140039d83:	add    BYTE PTR [rax],bl
   140039d85:	adc    dl,BYTE PTR [rax+riz*8]
   140039d88:	adc    al,al
   140039d8a:	adc    BYTE PTR [rax+0x11],dh
   140039d8d:	adc    DWORD PTR [rsi],eax
   140039d8f:	add    BYTE PTR [rcx],dl
   140039d91:	xor    al,0xa
   140039d93:	add    BYTE PTR [rcx],dl
   140039d95:	xor    cl,BYTE PTR [rip+0xa700be0]        # 0x14a73a97b
   140039d9b:	(bad)  
   140039d9c:	mov    BYTE PTR [rax],al
   140039d9f:	add    BYTE PTR [rcx],al
   140039da1:	add    BYTE PTR [rax],al
   140039da3:	add    bh,bl
   140039da5:	test   DWORD PTR [rdx],eax
   140039da7:	add    BYTE PTR [rbx],al
   140039da9:	xchg   BYTE PTR [rdx],al
   140039dab:	add    al,cl
   140039dad:	mov    cl,0x2
   140039daf:	add    BYTE PTR [rax],al
   140039db1:	add    BYTE PTR [rax],al
   140039db3:	add    BYTE PTR [rcx],al
   140039db5:	(bad)  
   140039db6:	add    al,BYTE PTR [rax]
   140039db8:	(bad)  
   140039db9:	xor    al,BYTE PTR [rdx]
   140039dbb:	push   rax
   140039dbc:	add    DWORD PTR [rdx],ecx
   140039dbe:	add    al,0x0
   140039dc0:	or     dh,BYTE PTR [rsi+rax*1]
   140039dc3:	add    BYTE PTR [rdx],cl
   140039dc5:	xor    al,BYTE PTR [rsi]
   140039dc7:	jo     0x140039dca
   140039dc9:	(bad)  
   140039dca:	add    al,BYTE PTR [rax]
   140039dcc:	(bad)  
   140039dcd:	xor    al,BYTE PTR [rdx]
   140039dcf:	xor    BYTE PTR [rcx],bl
   140039dd1:	and    ecx,DWORD PTR [rax]
   140039dd3:	add    BYTE PTR [rax+rbp*2],dl
   140039dd6:	(bad)  
   140039dd7:	add    BYTE PTR [rdi],cl
   140039dd9:	adc    eax,DWORD PTR fs:[rax]
   140039ddc:	sysenter 
   140039dde:	adc    al,BYTE PTR [rax]
   140039de0:	psrld  mm1,QWORD PTR [rbx]
   140039de3:	jo     0x140039dc5
   140039de5:	ret    0x0
   140039de8:	pop    rax
   140039de9:	add    BYTE PTR [rax],al
   140039deb:	add    BYTE PTR [rcx],al
   140039ded:	add    al,0x1
   140039def:	add    BYTE PTR [rdx+riz*2],al
   140039df2:	add    BYTE PTR [rax],al
   140039df4:	add    DWORD PTR [rcx+rax*1],eax
   140039df7:	add    BYTE PTR [rdx+riz*2],al
   140039dfa:	add    BYTE PTR [rax],al
   140039dfc:	add    DWORD PTR [rcx+rax*1],eax
   140039dff:	add    BYTE PTR [rdx+riz*2],al
   140039e02:	add    BYTE PTR [rax],al
   140039e04:	add    DWORD PTR [rcx+rax*1],eax
   140039e07:	add    BYTE PTR [rdx+riz*2],al
   140039e0a:	add    BYTE PTR [rax],al
   140039e0c:	add    DWORD PTR [rcx+rax*1],eax
   140039e0f:	add    BYTE PTR [rdx+riz*2],al
   140039e12:	add    BYTE PTR [rax],al
   140039e14:	add    DWORD PTR [rax+rcx*1],edx
   140039e17:	add    BYTE PTR [rsp+riz*2],dl
   140039e1a:	or     BYTE PTR [rax],al
   140039e1c:	adc    al,0x54
   140039e1e:	(bad)  
   140039e1f:	add    BYTE PTR [rsp+rsi*1],dl
   140039e22:	(bad)  
   140039e23:	add    BYTE PTR [rdx+rsi*1],dl
   140039e26:	adc    BYTE PTR [rax+0x1],dh
   140039e29:	adc    al,0x8
   140039e2b:	add    BYTE PTR [rsp+riz*2],dl
   140039e2e:	or     BYTE PTR [rax],al
   140039e30:	adc    al,0x54
   140039e32:	(bad)  
   140039e33:	add    BYTE PTR [rsp+rsi*1],dl
   140039e36:	(bad)  
   140039e37:	add    BYTE PTR [rdx+rsi*1],dl
   140039e3a:	adc    BYTE PTR [rax+0x1],dh
   140039e3d:	add    al,0x1
   140039e3f:	add    BYTE PTR [rdx+riz*1],al
   140039e42:	add    BYTE PTR [rax],al
   140039e44:	add    DWORD PTR [rcx+rax*1],eax
   140039e47:	add    BYTE PTR [rdx+rax*2],al
   140039e4a:	add    BYTE PTR [rax],al
   140039e4c:	add    DWORD PTR [rax+rcx*1],edx
   140039e4f:	add    BYTE PTR [rsp+riz*2],dl
   140039e52:	or     al,0x0
   140039e54:	adc    al,0x54
   140039e56:	or     eax,DWORD PTR [rax]
   140039e58:	adc    al,0x34
   140039e5a:	or     al,BYTE PTR [rax]
   140039e5c:	adc    al,0x72
   140039e5e:	adc    BYTE PTR [rax+0x1],dh
   140039e61:	add    al,0x1
   140039e63:	add    BYTE PTR [rdx+rax*2],al
   140039e66:	add    BYTE PTR [rax],al
   140039e68:	add    DWORD PTR [rcx],ebx
   140039e6a:	or     al,BYTE PTR [rax]
   140039e6c:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   140039e70:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   140039e74:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140039e78:	sbb    DWORD PTR [rdx+rcx*1],esi
   140039e7b:	add    BYTE PTR [rcx],bl
   140039e7d:	jb     0x140039e94
   140039e7f:	loopne 0x140039e9a
   140039e81:	sbb    eax,0x340e0006
   140039e86:	adc    eax,0xad20e00
   140039e8b:	jo     0x140039e96
   140039e8d:	(bad)  
   140039e8e:	or     BYTE PTR [rax-0x20],dl
   140039e91:	ret    0x0
   140039e94:	(bad)  
   140039e95:	add    BYTE PTR [rax],al
   140039e97:	add    BYTE PTR [rcx],al
   140039e99:	sbb    DWORD PTR [rdx],ecx
   140039e9b:	add    BYTE PTR [rcx],bl
   140039e9d:	xor    al,0xe
   140039e9f:	add    BYTE PTR [rcx],bl
   140039ea1:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e3b297
   140039ea7:	ror    BYTE PTR [rdi],1
   140039ea9:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b63ab20
   140039eb0:	add    DWORD PTR [rcx+rax*1],eax
   140039eb3:	add    BYTE PTR [rdx+riz*2],al
   140039eb6:	add    BYTE PTR [rax],al
   140039eb8:	add    DWORD PTR [rcx+rax*1],eax
   140039ebb:	add    BYTE PTR [rdx+riz*2],al
   140039ebe:	add    BYTE PTR [rax],al
   140039ec0:	add    DWORD PTR [rbx],edx
   140039ec2:	or     BYTE PTR [rax],al
   140039ec4:	adc    edx,DWORD PTR [rdi+rcx*1+0x0]
   140039ec8:	adc    esi,DWORD PTR [rsi+rcx*1]
   140039ecb:	add    BYTE PTR [rbx],dl
   140039ecd:	xchg   edx,eax
   140039ece:	pavgb  mm1,QWORD PTR [rip+0x1600c70]        # 0x14163ab45
   140039ed5:	add    al,0x1
   140039ed7:	add    BYTE PTR [rdx+riz*2],al
   140039eda:	add    BYTE PTR [rax],al
   140039edc:	add    DWORD PTR [rcx+rax*1],eax
   140039edf:	add    BYTE PTR [rdx+riz*2],al
   140039ee2:	add    BYTE PTR [rax],al
   140039ee4:	add    DWORD PTR [rcx+rax*1],eax
   140039ee7:	add    BYTE PTR [rdx+riz*2],al
   140039eea:	add    BYTE PTR [rax],al
   140039eec:	add    DWORD PTR [rcx+rax*1],eax
   140039eef:	add    BYTE PTR [rdx+riz*2],al
   140039ef2:	add    BYTE PTR [rax],al
   140039ef4:	add    DWORD PTR [rcx],ebx
   140039ef6:	or     al,BYTE PTR [rax]
   140039ef8:	sbb    DWORD PTR [rax+rdx*1],esi
   140039efb:	add    BYTE PTR [rcx],bl
   140039efd:	jb     0x140039f14
   140039eff:	lock adc esp,eax
   140039f02:	adc    eax,edx
   140039f04:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b63ab7b
   140039f0b:	push   rax
   140039f0c:	add    DWORD PTR [rcx+rax*1],eax
   140039f0f:	add    BYTE PTR [rdx+riz*2],al
   140039f12:	add    BYTE PTR [rax],al
   140039f14:	add    DWORD PTR [rcx+rax*1],eax
   140039f17:	add    BYTE PTR [rdx+riz*2],al
   140039f1a:	add    BYTE PTR [rax],al
   140039f1c:	add    DWORD PTR [rdx],edx
   140039f1e:	add    al,0x0
   140039f20:	adc    dh,BYTE PTR [rcx*1+0xb921200]
   140039f27:	push   rax
   140039f28:	sbb    DWORD PTR [rbx],esp
   140039f2a:	or     BYTE PTR [rax],al
   140039f2c:	adc    al,0x68
   140039f2e:	(bad)  
   140039f2f:	add    BYTE PTR [rdi],cl
   140039f31:	adc    eax,DWORD PTR fs:[rax]
   140039f34:	sysenter 
   140039f36:	adc    al,BYTE PTR [rax]
   140039f38:	psrld  mm1,QWORD PTR [rbx]
   140039f3b:	jo     0x140039f1d
   140039f3d:	ret    0x0
   140039f40:	pop    rax
   140039f41:	add    BYTE PTR [rax],al
   140039f43:	add    BYTE PTR [rcx],al
   140039f45:	clts   
   140039f47:	add    BYTE PTR [rdi],cl
   140039f49:	or     DWORD PTR fs:[rax],eax
   140039f4c:	sysenter 
   140039f4e:	or     BYTE PTR [rax],al
   140039f50:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140039f53:	jo     0x140039f6e
   140039f55:	sbb    eax,0x340e0006
   140039f5a:	adc    eax,0xad20e00
   140039f5f:	jo     0x140039f6a
   140039f61:	(bad)  
   140039f62:	or     BYTE PTR [rax-0x20],dl
   140039f65:	ret    0x0
   140039f68:	(bad)  
   140039f69:	add    BYTE PTR [rax],al
   140039f6b:	add    BYTE PTR [rcx],bl
   140039f6d:	sub    cl,BYTE PTR [rbx]
   140039f6f:	add    BYTE PTR [rsp+rsi*1],bl
   140039f72:	(bad)  
   140039f73:	add    BYTE PTR [rcx+rax*1],bl
   140039f76:	adc    al,0x0
   140039f78:	adc    al,dh
   140039f7a:	(bad)  
   140039f7b:	loopne 0x140039f89
   140039f7d:	ror    BYTE PTR [rdx],1
   140039f7f:	ror    BYTE PTR [rax],0x70
   140039f82:	(bad)  
   140039f83:	(bad)  
   140039f84:	(bad)  
   140039f85:	push   rax
   140039f86:	add    BYTE PTR [rax],al
   140039f88:	loopne 0x140039f4c
   140039f8a:	add    BYTE PTR [rax],al
   140039f8c:	cwde   
   140039f8d:	add    BYTE PTR [rax],al
   140039f8f:	add    BYTE PTR [rcx],bl
   140039f91:	sbb    DWORD PTR [rax+rax*1],eax
   140039f94:	or     dh,BYTE PTR [rcx+rdx*1]
   140039f97:	add    BYTE PTR [rdx],cl
   140039f99:	mov    dl,0x6
   140039f9b:	jo     0x140039f7d
   140039f9d:	ret    0x0
   140039fa0:	push   rax
	...
   140039fa9:	add    BYTE PTR [rax],al
   140039fab:	add    BYTE PTR [rcx+rdx*2+0x0],ah
   140039fb2:	add    BYTE PTR [rax],al
   140039fb4:	enter  0x39f,0x0
	...
   140039fc8:	add    al,BYTE PTR [rax]
   140039fca:	add    BYTE PTR [rax],al
   140039fcc:	loopne 0x140039f6d
   140039fce:	add    eax,DWORD PTR [rax]
   140039fd0:	or     BYTE PTR [rax+0x3],ah
	...
   140039fde:	add    BYTE PTR [rax],al
   140039fe0:	adc    BYTE PTR [rax],al
   140039fe2:	add    BYTE PTR [rax],al
   140039fe4:	rcr    al,1
   140039fe6:	add    eax,DWORD PTR [rax]
   140039fe8:	add    BYTE PTR [rax],al
   140039fea:	add    BYTE PTR [rax],al
   140039fec:	(bad)  
   140039fed:	(bad)  
   140039fee:	(bad)  
   140039fef:	inc    DWORD PTR [rax]
   140039ff1:	add    BYTE PTR [rax],al
   140039ff3:	add    BYTE PTR [rax],bl
   140039ff5:	add    BYTE PTR [rax],al
   140039ff7:	add    BYTE PTR [rax+0x4e],ch
	...
   14003a009:	add    BYTE PTR [rax],al
   14003a00b:	add    al,bh
   14003a00d:	fadd   DWORD PTR [rbx]
   14003a00f:	add    BYTE PTR [rax],al
   14003a011:	add    BYTE PTR [rax],al
   14003a013:	add    bh,bh
   14003a015:	(bad)  
   14003a016:	(bad)  
   14003a017:	inc    DWORD PTR [rax]
   14003a019:	add    BYTE PTR [rax],al
   14003a01b:	add    BYTE PTR [rax],bl
   14003a01d:	add    BYTE PTR [rax],al
   14003a01f:	add    BYTE PTR [rdi+rsi*2],ch
	...
   14003a032:	add    BYTE PTR [rax],al
   14003a034:	mov    esp,0x51
   14003a039:	add    BYTE PTR [rax],al
   14003a03b:	add    BYTE PTR [rax-0x60],dl
   14003a03e:	add    eax,DWORD PTR [rax]
	...
   14003a050:	add    eax,DWORD PTR [rax]
   14003a052:	add    BYTE PTR [rax],al
   14003a054:	jo     0x140039ff6
   14003a056:	add    eax,DWORD PTR [rax]
   14003a058:	cwde   
   14003a059:	movabs al,ds:0x3a0080003
	...
   14003a072:	add    BYTE PTR [rax],al
   14003a074:	and    cl,bl
   14003a076:	add    eax,DWORD PTR [rax]
   14003a078:	add    BYTE PTR [rax],al
   14003a07a:	add    BYTE PTR [rax],al
   14003a07c:	(bad)  
   14003a07d:	(bad)  
   14003a07e:	(bad)  
   14003a07f:	inc    DWORD PTR [rax]
   14003a081:	add    BYTE PTR [rax],al
   14003a083:	add    BYTE PTR [rax],bl
   14003a085:	add    BYTE PTR [rax],al
   14003a087:	add    BYTE PTR [rdi+rcx*2+0x0],cl
	...
   14003a09b:	add    BYTE PTR [rax-0x27],dl
   14003a09e:	add    eax,DWORD PTR [rax]
   14003a0a0:	add    BYTE PTR [rax],al
   14003a0a2:	add    BYTE PTR [rax],al
   14003a0a4:	(bad)  
   14003a0a5:	(bad)  
   14003a0a6:	(bad)  
   14003a0a7:	inc    DWORD PTR [rax]
   14003a0a9:	add    BYTE PTR [rax],al
   14003a0ab:	add    BYTE PTR [rax],bl
   14003a0ad:	add    BYTE PTR [rax],al
   14003a0af:	add    ah,ch
   14003a0b1:	rex.WRXB add BYTE PTR [r8],r8b
	...
   14003a0c4:	(bad)  
   14003a0c5:	push   rcx
   14003a0c6:	add    BYTE PTR [rax],al
   14003a0c8:	add    BYTE PTR [rax],al
   14003a0ca:	add    BYTE PTR [rax],al
   14003a0cc:	loopne 0x14003a06e
   14003a0ce:	add    eax,DWORD PTR [rax]
	...
   14003a0e0:	add    eax,DWORD PTR [rax]
   14003a0e2:	add    BYTE PTR [rax],al
   14003a0e4:	add    BYTE PTR [rcx-0x5f67fffd],ah
   14003a0ea:	add    eax,DWORD PTR [rax]
   14003a0ec:	or     BYTE PTR [rax+0x3],ah
	...
   14003a102:	add    BYTE PTR [rax],al
   14003a104:	js     0x14003a0df
   14003a106:	add    eax,DWORD PTR [rax]
   14003a108:	add    BYTE PTR [rax],al
   14003a10a:	add    BYTE PTR [rax],al
   14003a10c:	(bad)  
   14003a10d:	(bad)  
   14003a10e:	(bad)  
   14003a10f:	inc    DWORD PTR [rax]
   14003a111:	add    BYTE PTR [rax],al
   14003a113:	add    BYTE PTR [rax],bl
   14003a115:	add    BYTE PTR [rax],al
   14003a117:	add    BYTE PTR [rdi+rcx*2+0x0],bl
	...
   14003a12a:	add    BYTE PTR [rax],al
   14003a12c:	(bad)  
   14003a12d:	push   rcx
   14003a12e:	add    BYTE PTR [rax],al
   14003a130:	add    BYTE PTR [rax],al
   14003a132:	add    BYTE PTR [rax],al
   14003a134:	movabs rax,ds:0x3
	...
   14003a146:	add    BYTE PTR [rax],al
   14003a148:	add    eax,DWORD PTR [rax]
   14003a14a:	add    BYTE PTR [rax],al
   14003a14c:	push   0xffffffff980003a1
   14003a151:	movabs al,ds:0x3a0080003
	...
   14003a16a:	add    BYTE PTR [rax],al
   14003a16c:	movabs al,ds:0xff000000000003d9
   14003a175:	(bad)  
   14003a176:	(bad)  
   14003a177:	inc    DWORD PTR [rax]
   14003a179:	add    BYTE PTR [rax],al
   14003a17b:	add    BYTE PTR [rax],bl
   14003a17d:	add    BYTE PTR [rax],al
   14003a17f:	add    BYTE PTR [rax+rdx*2],bh
	...
   14003a192:	add    BYTE PTR [rax],al
   14003a194:	fcom   QWORD PTR [rcx+0x0]
   14003a197:	add    BYTE PTR [rax],al
   14003a199:	add    BYTE PTR [rax],al
   14003a19b:	add    BYTE PTR [rax+0x3a1],dh
	...
   14003a1ad:	add    BYTE PTR [rax],al
   14003a1af:	add    BYTE PTR [rbx],al
   14003a1b1:	add    BYTE PTR [rax],al
   14003a1b3:	add    al,dl
   14003a1b5:	movabs eax,ds:0xa0080003a1f80003
   14003a1be:	add    eax,DWORD PTR [rax]
	...
   14003a1d4:	enter  0x3d9,0x0
   14003a1d8:	add    BYTE PTR [rax],al
   14003a1da:	add    BYTE PTR [rax],al
   14003a1dc:	(bad)  
   14003a1dd:	(bad)  
   14003a1de:	(bad)  
   14003a1df:	inc    DWORD PTR [rax]
   14003a1e1:	add    BYTE PTR [rax],al
   14003a1e3:	add    BYTE PTR [rax],bl
   14003a1e5:	add    BYTE PTR [rax],al
   14003a1e7:	add    BYTE PTR [rax+rdx*2+0x0],cl
	...
   14003a1fa:	add    BYTE PTR [rax],al
   14003a1fc:	clc    
   14003a1fd:	fld    DWORD PTR [rbx]
   14003a1ff:	add    BYTE PTR [rax],al
   14003a201:	add    BYTE PTR [rax],al
   14003a203:	add    bh,bh
   14003a205:	(bad)  
   14003a206:	(bad)  
   14003a207:	inc    DWORD PTR [rax]
   14003a209:	add    BYTE PTR [rax],al
   14003a20b:	add    BYTE PTR [rax],bl
   14003a20d:	add    BYTE PTR [rax],al
   14003a20f:	add    BYTE PTR [rcx+rdx*2+0x0],dl
	...
   14003a223:	add    ah,ch
   14003a225:	push   rcx
   14003a226:	add    BYTE PTR [rax],al
   14003a228:	add    BYTE PTR [rax],al
   14003a22a:	add    BYTE PTR [rax],al
   14003a22c:	movabs ds:0x3,al
	...
   14003a23e:	add    BYTE PTR [rax],al
   14003a240:	add    al,BYTE PTR [rax]
   14003a242:	add    BYTE PTR [rax],al
   14003a244:	clc    
   14003a245:	movabs eax,ds:0x3a0080003
	...
   14003a25a:	add    BYTE PTR [rax],al
   14003a25c:	mov    ah,0x51
   14003a25e:	add    BYTE PTR [rax],al
   14003a260:	add    BYTE PTR [rax],al
   14003a262:	add    BYTE PTR [rax],al
   14003a264:	js     0x14003a208
   14003a266:	add    eax,DWORD PTR [rax]
	...
   14003a278:	add    al,BYTE PTR [rax]
   14003a27a:	add    BYTE PTR [rax],al
   14003a27c:	nop
   14003a27d:	movabs ds:0x3a0080003,al
	...
   14003a292:	add    BYTE PTR [rax],al
   14003a294:	and    dl,bl
   14003a296:	add    eax,DWORD PTR [rax]
   14003a298:	add    BYTE PTR [rax],al
   14003a29a:	add    BYTE PTR [rax],al
   14003a29c:	(bad)  
   14003a29d:	(bad)  
   14003a29e:	(bad)  
   14003a29f:	inc    DWORD PTR [rax]
   14003a2a1:	add    BYTE PTR [rax],al
   14003a2a3:	add    BYTE PTR [rax],bl
   14003a2a5:	add    BYTE PTR [rax],al
   14003a2a7:	add    BYTE PTR [rdi+rcx*2],al
	...
   14003a2ba:	add    BYTE PTR [rax],al
   14003a2bc:	in     al,0x51
   14003a2be:	add    BYTE PTR [rax],al
   14003a2c0:	add    BYTE PTR [rax],al
   14003a2c2:	add    BYTE PTR [rax],al
   14003a2c4:	fsub   DWORD PTR [rdx+0x3]
	...
   14003a2d6:	add    BYTE PTR [rax],al
   14003a2d8:	add    eax,DWORD PTR [rax]
   14003a2da:	add    BYTE PTR [rax],al
   14003a2dc:	clc    
   14003a2dd:	movabs ds:0xa0080003a1f80003,al
   14003a2e6:	add    eax,DWORD PTR [rax]
	...
   14003a2fc:	push   rax
   14003a2fd:	fiadd  DWORD PTR [rbx]
   14003a2ff:	add    BYTE PTR [rax],al
   14003a301:	add    BYTE PTR [rax],al
   14003a303:	add    bh,bh
   14003a305:	(bad)  
   14003a306:	(bad)  
   14003a307:	inc    DWORD PTR [rax]
   14003a309:	add    BYTE PTR [rax],al
   14003a30b:	add    BYTE PTR [rax],ah
   14003a30d:	add    BYTE PTR [rax],al
   14003a30f:	add    ah,bl
   14003a311:	push   rax
	...
   14003a322:	add    BYTE PTR [rax],al
   14003a324:	mov    esp,0xa6
   14003a329:	add    BYTE PTR [rax],al
   14003a32b:	add    BYTE PTR [rax-0x5d],al
   14003a32e:	add    eax,DWORD PTR [rax]
	...
   14003a340:	add    al,BYTE PTR [rax]
   14003a342:	add    BYTE PTR [rax],al
   14003a344:	pop    rax
   14003a345:	movabs ds:0x3a0080003,eax
	...
   14003a35a:	add    BYTE PTR [rax],al
   14003a35c:	sbb    bl,bl
   14003a35e:	add    eax,DWORD PTR [rax]
   14003a360:	add    BYTE PTR [rax],al
   14003a362:	add    BYTE PTR [rax],al
   14003a364:	(bad)  
   14003a365:	(bad)  
   14003a366:	(bad)  
   14003a367:	inc    DWORD PTR [rax]
   14003a369:	add    BYTE PTR [rax],al
   14003a36b:	add    BYTE PTR [rax],bl
   14003a36d:	add    BYTE PTR [rax],al
   14003a36f:	add    BYTE PTR [rsi+riz*4+0x0],ch
	...
   14003a383:	add    BYTE PTR [rsi+0x10],ch
   14003a386:	sbb    DWORD PTR [rax+0x0],0xda000000
   14003a38d:	movabs ds:0x5000000010003,eax
   14003a396:	add    BYTE PTR [rax],al
   14003a398:	add    eax,0xa8000000
   14003a39d:	movabs ds:0xa3d00003a3bc0003,eax
   14003a3a6:	add    eax,DWORD PTR [rax]
   14003a3a8:	movabs al,ds:0x20000024c0000021
   14003a3b1:	rol    BYTE PTR [rbx],0x0
   14003a3b4:	sub    al,al
   14003a3b6:	add    eax,DWORD PTR [rax]
   14003a3b8:	sbb    al,al
   14003a3ba:	add    eax,DWORD PTR [rax]
   14003a3bc:	in     al,0xa3
   14003a3be:	add    eax,DWORD PTR [rax]
   14003a3c0:	or     DWORD PTR [rbx+rax*1+0x3a43300],esp
   14003a3c7:	add    BYTE PTR [rsp+riz*4+0x3],al
   14003a3cb:	add    BYTE PTR [rax-0x5c],bl
   14003a3ce:	add    eax,DWORD PTR [rax]
   14003a3d0:	add    BYTE PTR [rax],al
   14003a3d2:	add    DWORD PTR [rax],eax
   14003a3d4:	add    al,BYTE PTR [rax]
   14003a3d6:	add    eax,DWORD PTR [rax]
   14003a3d8:	add    al,0x0
   14003a3da:	jae    0x14003a441
   14003a3dc:	je     0x14003a453
   14003a3de:	jo     0x14003a40e
   14003a3e0:	gs js  0x14003a448
   14003a3e3:	add    BYTE PTR [rdi],bh
   14003a3e5:	(bad)  
   14003a3e6:	xor    BYTE PTR [rdx+0x61],cl
   14003a3e9:	jbe    0x14003a44c
   14003a3eb:	rex.WR (bad) 
   14003a3ed:	jne    0x14003a45d
   14003a3ef:	movsxd ebp,DWORD PTR [rax+0x65]
   14003a3f2:	jb     0x14003a437
   14003a3f4:	outs   dx,DWORD PTR ds:[rsi]
   14003a3f5:	outs   dx,BYTE PTR ds:[rsi]
   14003a3f6:	imul   sp,WORD PTR [rdi+0x40],0x5140
   14003a3fc:	rex.RB
   14003a3fd:	rex.B
   14003a3fe:	rex.B
   14003a3ff:	rex
   14003a400:	rex.B
   14003a401:	rex.RB
   14003a402:	rex.X push rsi
   14003a404:	xor    BYTE PTR [rax+0x40],al
   14003a407:	pop    rdx
   14003a408:	add    BYTE PTR [rdi],bh
   14003a40a:	(bad)  
   14003a40b:	xor    al,0x4a
   14003a40d:	(bad)  
   14003a40e:	jbe    0x14003a471
   14003a410:	rex.WR (bad) 
   14003a412:	jne    0x14003a482
   14003a414:	movsxd ebp,DWORD PTR [rax+0x65]
   14003a417:	jb     0x14003a45c
   14003a419:	outs   dx,DWORD PTR ds:[rsi]
   14003a41a:	outs   dx,BYTE PTR ds:[rsi]
   14003a41b:	imul   sp,WORD PTR [rdi+0x40],0x5140
   14003a421:	rex.RB
   14003a422:	rex.B
   14003a423:	rex.B
   14003a424:	rex.B
   14003a425:	rex.RB
   14003a426:	push   r14
   14003a428:	xor    BYTE PTR [rax+0x41],al
   14003a42b:	rex.RB
   14003a42c:	rex.X push rsi
   14003a42e:	xor    BYTE PTR [rax+0x40],al
   14003a431:	pop    rdx
   14003a432:	add    BYTE PTR [rbx+0x65],dh
   14003a435:	je     0x14003a4ac
   14003a437:	jo     0x14003a498
   14003a439:	(bad)  
   14003a43a:	jne    0x14003a4a5
   14003a43c:	ins    BYTE PTR es:[rdi],dx
   14003a43d:	fs pop rdi
   14003a43f:	fs (bad) 
   14003a441:	je     0x14003a4a8
   14003a443:	add    BYTE PTR [rbx+0x65],dh
   14003a446:	je     0x14003a4bd
   14003a448:	jo     0x14003a4a9
   14003a44a:	jb     0x14003a4b1
   14003a44c:	ins    BYTE PTR es:[rdi],dx
   14003a44d:	(bad)  
   14003a44e:	je     0x14003a4b9
   14003a450:	jbe    0x14003a4b7
   14003a452:	pop    rdi
   14003a453:	jo     0x14003a4b6
   14003a455:	je     0x14003a4bf
   14003a457:	add    BYTE PTR [rbx+0x65],dh
   14003a45a:	je     0x14003a4d1
   14003a45c:	jo     0x14003a4bd
   14003a45e:	jbe    0x14003a4c5
   14003a460:	jb     0x14003a4d5
   14003a462:	imul   ebp,DWORD PTR [rdi+0x6e],0x98000000
   14003a469:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003a46a:	add    eax,DWORD PTR [rax]
	...
   14003a474:	cwde   
   14003a475:	stos   DWORD PTR es:[rdi],eax
   14003a476:	add    eax,DWORD PTR [rax]
   14003a478:	loopne 0x14003a43c
   14003a47a:	add    al,BYTE PTR [rax]
   14003a47c:	mov    eax,0x3a4
   14003a481:	add    BYTE PTR [rax],al
   14003a483:	add    BYTE PTR [rax],al
   14003a485:	add    BYTE PTR [rax],al
   14003a487:	add    BYTE PTR [rsi],dl
   14003a489:	lods   al,BYTE PTR ds:[rsi]
   14003a48a:	add    eax,DWORD PTR [rax]
   14003a48c:	add    al,al
   14003a48e:	add    al,BYTE PTR [rax]
   14003a490:	(bad)  
   14003a491:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003a492:	add    eax,DWORD PTR [rax]
	...
   14003a49c:	xchg   BYTE PTR [rbx+rax*1+0x2c2a800],ch
	...
   14003a4b7:	add    BYTE PTR [rsi+rbp*4],ah
   14003a4ba:	add    eax,DWORD PTR [rax]
   14003a4bc:	add    BYTE PTR [rax],al
   14003a4be:	add    BYTE PTR [rax],al
   14003a4c0:	xor    al,0xb2
   14003a4c2:	add    eax,DWORD PTR [rax]
   14003a4c4:	add    BYTE PTR [rax],al
   14003a4c6:	add    BYTE PTR [rax],al
   14003a4c8:	and    BYTE PTR [rdx+0x3],dh
   14003a4ce:	add    BYTE PTR [rax],al
   14003a4d0:	adc    BYTE PTR [rdx+0x3],dh
   14003a4d6:	add    BYTE PTR [rax],al
   14003a4d8:	add    BYTE PTR [rdx+0x3],dh
   14003a4de:	add    BYTE PTR [rax],al
   14003a4e0:	out    dx,al
   14003a4e1:	mov    cl,0x3
   14003a4e3:	add    BYTE PTR [rax],al
   14003a4e5:	add    BYTE PTR [rax],al
   14003a4e7:	add    al,bl
   14003a4e9:	mov    cl,0x3
   14003a4eb:	add    BYTE PTR [rax],al
   14003a4ed:	add    BYTE PTR [rax],al
   14003a4ef:	add    ah,al
   14003a4f1:	mov    cl,0x3
   14003a4f3:	add    BYTE PTR [rax],al
   14003a4f5:	add    BYTE PTR [rax],al
   14003a4f7:	add    BYTE PTR [rdx+0x3b1],dh
   14003a4fd:	add    BYTE PTR [rax],al
   14003a4ff:	add    BYTE PTR [rdx+0x3b1],ah
   14003a505:	add    BYTE PTR [rax],al
   14003a507:	add    BYTE PTR [rcx+rsi*4+0x3],dl
   14003a50e:	add    BYTE PTR [rax],al
   14003a510:	mov    BYTE PTR [rcx+0x3],dh
   14003a516:	add    BYTE PTR [rax],al
   14003a518:	jl     0x14003a4cb
   14003a51a:	add    eax,DWORD PTR [rax]
   14003a51c:	add    BYTE PTR [rax],al
   14003a51e:	add    BYTE PTR [rax],al
   14003a520:	jb     0x14003a4d3
   14003a522:	add    eax,DWORD PTR [rax]
   14003a524:	add    BYTE PTR [rax],al
   14003a526:	add    BYTE PTR [rax],al
   14003a528:	(bad)  
   14003a529:	mov    cl,0x3
   14003a52b:	add    BYTE PTR [rax],al
   14003a52d:	add    BYTE PTR [rax],al
   14003a52f:	add    BYTE PTR [rsi-0x4f],cl
   14003a532:	add    eax,DWORD PTR [rax]
   14003a534:	add    BYTE PTR [rax],al
   14003a536:	add    BYTE PTR [rax],al
   14003a538:	mov    cl,0x3
   14003a53b:	add    BYTE PTR [rax],al
   14003a53d:	add    BYTE PTR [rax],al
   14003a53f:	add    BYTE PTR [rax],dh
   14003a541:	mov    cl,0x3
   14003a543:	add    BYTE PTR [rax],al
   14003a545:	add    BYTE PTR [rax],al
   14003a547:	add    BYTE PTR [rax],bl
   14003a549:	mov    cl,0x3
   14003a54b:	add    BYTE PTR [rax],al
   14003a54d:	add    BYTE PTR [rax],al
   14003a54f:	add    BYTE PTR [rax],al
   14003a551:	mov    cl,0x3
   14003a553:	add    BYTE PTR [rax],al
   14003a555:	add    BYTE PTR [rax],al
   14003a557:	add    dl,ch
   14003a559:	mov    al,0x3
   14003a55b:	add    BYTE PTR [rax],al
   14003a55d:	add    BYTE PTR [rax],al
   14003a55f:	add    ah,dl
   14003a561:	mov    al,0x3
   14003a563:	add    BYTE PTR [rax],al
   14003a565:	add    BYTE PTR [rax],al
   14003a567:	add    BYTE PTR [rdx+0x3ab],ch
   14003a56d:	add    BYTE PTR [rax],al
   14003a56f:	add    BYTE PTR [rbx+rbp*4+0x3],bh
   14003a576:	add    BYTE PTR [rax],al
   14003a578:	(bad)  
   14003a579:	stos   DWORD PTR es:[rdi],eax
   14003a57a:	add    eax,DWORD PTR [rax]
   14003a57c:	add    BYTE PTR [rax],al
   14003a57e:	add    BYTE PTR [rax],al
   14003a580:	lock stos DWORD PTR es:[rdi],eax
   14003a582:	add    eax,DWORD PTR [rax]
   14003a584:	add    BYTE PTR [rax],al
   14003a586:	add    BYTE PTR [rax],al
   14003a588:	add    ch,BYTE PTR [rbx+rax*1+0x0]
   14003a58f:	add    ah,al
   14003a591:	mov    al,0x3
   14003a593:	add    BYTE PTR [rax],al
   14003a595:	add    BYTE PTR [rax],al
   14003a597:	add    BYTE PTR [rdx+0x3b0],dh
   14003a59d:	add    BYTE PTR [rax],al
   14003a59f:	add    BYTE PTR [rdx+0x3b0],ah
   14003a5a5:	add    BYTE PTR [rax],al
   14003a5a7:	add    BYTE PTR [rax+0x3b0],dl
   14003a5ad:	add    BYTE PTR [rax],al
   14003a5af:	add    BYTE PTR [rsi-0x50],bh
   14003a5b2:	add    eax,DWORD PTR [rax]
   14003a5b4:	add    BYTE PTR [rax],al
   14003a5b6:	add    BYTE PTR [rax],al
   14003a5b8:	ins    BYTE PTR es:[rdi],dx
   14003a5b9:	mov    al,0x3
   14003a5bb:	add    BYTE PTR [rax],al
   14003a5bd:	add    BYTE PTR [rax],al
   14003a5bf:	add    BYTE PTR [rax+rsi*4+0x3],dl
   14003a5c3:	add    BYTE PTR [rax],al
   14003a5c5:	add    BYTE PTR [rax],al
   14003a5c7:	add    BYTE PTR [rdx+0x3ac],dl
   14003a5cd:	add    BYTE PTR [rax],al
   14003a5cf:	add    BYTE PTR [rdx+0x3ac],ah
   14003a5d5:	add    BYTE PTR [rax],al
   14003a5d7:	add    BYTE PTR [rdx+0x3ac],dh
   14003a5dd:	add    BYTE PTR [rax],al
   14003a5df:	add    dh,al
   14003a5e1:	lods   al,BYTE PTR ds:[rsi]
   14003a5e2:	add    eax,DWORD PTR [rax]
   14003a5e4:	add    BYTE PTR [rax],al
   14003a5e6:	add    BYTE PTR [rax],al
   14003a5e8:	fsubr  DWORD PTR [rbx+rax*1+0x0]
   14003a5ef:	add    dl,dh
   14003a5f1:	lods   al,BYTE PTR ds:[rsi]
   14003a5f2:	add    eax,DWORD PTR [rax]
   14003a5f4:	add    BYTE PTR [rax],al
   14003a5f6:	add    BYTE PTR [rax],al
   14003a5f8:	add    BYTE PTR [rbp+0x3],ch
   14003a5fe:	add    BYTE PTR [rax],al
   14003a600:	adc    ch,BYTE PTR [rbp+0x3]
   14003a606:	add    BYTE PTR [rax],al
   14003a608:	lods   eax,DWORD PTR cs:[rsi]
   14003a60a:	add    eax,DWORD PTR [rax]
   14003a60c:	add    BYTE PTR [rax],al
   14003a60e:	add    BYTE PTR [rax],al
   14003a610:	lods   eax,DWORD PTR ds:[rsi]
   14003a612:	add    eax,DWORD PTR [rax]
   14003a614:	add    BYTE PTR [rax],al
   14003a616:	add    BYTE PTR [rax],al
   14003a618:	rex.WX lods rax,QWORD PTR ds:[rsi]
   14003a61a:	add    eax,DWORD PTR [rax]
   14003a61c:	add    BYTE PTR [rax],al
   14003a61e:	add    BYTE PTR [rax],al
   14003a620:	push   rsi
   14003a621:	lods   eax,DWORD PTR ds:[rsi]
   14003a622:	add    eax,DWORD PTR [rax]
   14003a624:	add    BYTE PTR [rax],al
   14003a626:	add    BYTE PTR [rax],al
   14003a628:	lods   eax,DWORD PTR fs:[rsi]
   14003a62a:	add    eax,DWORD PTR [rax]
   14003a62c:	add    BYTE PTR [rax],al
   14003a62e:	add    BYTE PTR [rax],al
   14003a630:	jp     0x14003a5df
   14003a632:	add    eax,DWORD PTR [rax]
   14003a634:	add    BYTE PTR [rax],al
   14003a636:	add    BYTE PTR [rax],al
   14003a638:	mov    WORD PTR [rbp+0x3],gs
   14003a63e:	add    BYTE PTR [rax],al
   14003a640:	sahf   
   14003a641:	lods   eax,DWORD PTR ds:[rsi]
   14003a642:	add    eax,DWORD PTR [rax]
   14003a644:	add    BYTE PTR [rax],al
   14003a646:	add    BYTE PTR [rax],al
   14003a648:	mov    ah,0xad
   14003a64a:	add    eax,DWORD PTR [rax]
   14003a64c:	add    BYTE PTR [rax],al
   14003a64e:	add    BYTE PTR [rax],al
   14003a650:	retf   0x3ad
   14003a653:	add    BYTE PTR [rax],al
   14003a655:	add    BYTE PTR [rax],al
   14003a657:	add    dh,dl
   14003a659:	lods   eax,DWORD PTR ds:[rsi]
   14003a65a:	add    eax,DWORD PTR [rax]
   14003a65c:	add    BYTE PTR [rax],al
   14003a65e:	add    BYTE PTR [rax],al
   14003a660:	(bad)  
   14003a661:	lods   eax,DWORD PTR ds:[rsi]
   14003a662:	add    eax,DWORD PTR [rax]
   14003a664:	add    BYTE PTR [rax],al
   14003a666:	add    BYTE PTR [rax],al
   14003a668:	cli    
   14003a669:	lods   eax,DWORD PTR ds:[rsi]
   14003a66a:	add    eax,DWORD PTR [rax]
   14003a66c:	add    BYTE PTR [rax],al
   14003a66e:	add    BYTE PTR [rax],al
   14003a670:	(bad)  
   14003a671:	scas   al,BYTE PTR es:[rdi]
   14003a672:	add    eax,DWORD PTR [rax]
   14003a674:	add    BYTE PTR [rax],al
   14003a676:	add    BYTE PTR [rax],al
   14003a678:	rex.X mov dl,0x3
   14003a67b:	add    BYTE PTR [rax],al
   14003a67d:	add    BYTE PTR [rax],al
   14003a67f:	add    BYTE PTR [rsi],dh
   14003a681:	scas   al,BYTE PTR es:[rdi]
   14003a682:	add    eax,DWORD PTR [rax]
   14003a684:	add    BYTE PTR [rax],al
   14003a686:	add    BYTE PTR [rax],al
   14003a688:	rex.RX scas al,BYTE PTR es:[rdi]
   14003a68a:	add    eax,DWORD PTR [rax]
   14003a68c:	add    BYTE PTR [rax],al
   14003a68e:	add    BYTE PTR [rax],al
   14003a690:	push   rsp
   14003a691:	scas   al,BYTE PTR es:[rdi]
   14003a692:	add    eax,DWORD PTR [rax]
   14003a694:	add    BYTE PTR [rax],al
   14003a696:	add    BYTE PTR [rax],al
   14003a698:	ins    BYTE PTR es:[rdi],dx
   14003a699:	scas   al,BYTE PTR es:[rdi]
   14003a69a:	add    eax,DWORD PTR [rax]
   14003a69c:	add    BYTE PTR [rax],al
   14003a69e:	add    BYTE PTR [rax],al
   14003a6a0:	jle    0x14003a650
   14003a6a2:	add    eax,DWORD PTR [rax]
   14003a6a4:	add    BYTE PTR [rax],al
   14003a6a6:	add    BYTE PTR [rax],al
   14003a6a8:	xchg   esp,eax
   14003a6a9:	scas   al,BYTE PTR es:[rdi]
   14003a6aa:	add    eax,DWORD PTR [rax]
   14003a6ac:	add    BYTE PTR [rax],al
   14003a6ae:	add    BYTE PTR [rax],al
   14003a6b0:	movabs al,ds:0xb6000000000003ae
   14003a6b9:	scas   al,BYTE PTR es:[rdi]
   14003a6ba:	add    eax,DWORD PTR [rax]
   14003a6bc:	add    BYTE PTR [rax],al
   14003a6be:	add    BYTE PTR [rax],al
   14003a6c0:	shr    BYTE PTR [rsi+0x3],1
   14003a6c6:	add    BYTE PTR [rax],al
   14003a6c8:	out    0xae,al
   14003a6ca:	add    eax,DWORD PTR [rax]
   14003a6cc:	add    BYTE PTR [rax],al
   14003a6ce:	add    BYTE PTR [rax],al
   14003a6d0:	add    BYTE PTR [rdi+0x3],ch
   14003a6d6:	add    BYTE PTR [rax],al
   14003a6d8:	sbb    ch,BYTE PTR [rdi+0x3]
   14003a6de:	add    BYTE PTR [rax],al
   14003a6e0:	xor    al,0xaf
   14003a6e2:	add    eax,DWORD PTR [rax]
   14003a6e4:	add    BYTE PTR [rax],al
   14003a6e6:	add    BYTE PTR [rax],al
   14003a6e8:	scas   rax,QWORD PTR es:[rdi]
   14003a6ea:	add    eax,DWORD PTR [rax]
   14003a6ec:	add    BYTE PTR [rax],al
   14003a6ee:	add    BYTE PTR [rax],al
   14003a6f0:	pop    rsp
   14003a6f1:	scas   eax,DWORD PTR es:[rdi]
   14003a6f2:	add    eax,DWORD PTR [rax]
   14003a6f4:	add    BYTE PTR [rax],al
   14003a6f6:	add    BYTE PTR [rax],al
   14003a6f8:	js     0x14003a6a9
   14003a6fa:	add    eax,DWORD PTR [rax]
   14003a6fc:	add    BYTE PTR [rax],al
   14003a6fe:	add    BYTE PTR [rax],al
   14003a700:	xchg   esi,eax
   14003a701:	scas   eax,DWORD PTR es:[rdi]
   14003a702:	add    eax,DWORD PTR [rax]
   14003a704:	add    BYTE PTR [rax],al
   14003a706:	add    BYTE PTR [rax],al
   14003a708:	mov    esi,0x3af
   14003a70d:	add    BYTE PTR [rax],al
   14003a70f:	add    dh,cl
   14003a711:	scas   eax,DWORD PTR es:[rdi]
   14003a712:	add    eax,DWORD PTR [rax]
   14003a714:	add    BYTE PTR [rax],al
   14003a716:	add    BYTE PTR [rax],al
   14003a718:	(bad)  
   14003a719:	scas   eax,DWORD PTR es:[rdi]
   14003a71a:	add    eax,DWORD PTR [rax]
   14003a71c:	add    BYTE PTR [rax],al
   14003a71e:	add    BYTE PTR [rax],al
   14003a720:	(bad)  
   14003a721:	scas   eax,DWORD PTR es:[rdi]
   14003a722:	add    eax,DWORD PTR [rax]
   14003a724:	add    BYTE PTR [rax],al
   14003a726:	add    BYTE PTR [rax],al
   14003a728:	(bad)  
   14003a729:	scas   eax,DWORD PTR es:[rdi]
   14003a72a:	add    eax,DWORD PTR [rax]
   14003a72c:	add    BYTE PTR [rax],al
   14003a72e:	add    BYTE PTR [rax],al
   14003a730:	or     dh,BYTE PTR [rax+0x3]
   14003a736:	add    BYTE PTR [rax],al
   14003a738:	sbb    BYTE PTR [rax+0x3],dh
   14003a73e:	add    BYTE PTR [rax],al
   14003a740:	es mov al,0x3
   14003a743:	add    BYTE PTR [rax],al
   14003a745:	add    BYTE PTR [rax],al
   14003a747:	add    BYTE PTR [rax],dh
   14003a749:	mov    al,0x3
   14003a74b:	add    BYTE PTR [rax],al
   14003a74d:	add    BYTE PTR [rax],al
   14003a74f:	add    BYTE PTR [rax-0x50],al
   14003a752:	add    eax,DWORD PTR [rax]
	...
   14003a760:	js     0x14003a70e
   14003a762:	add    eax,DWORD PTR [rax]
   14003a764:	add    BYTE PTR [rax],al
   14003a766:	add    BYTE PTR [rax],al
   14003a768:	push   0xffffffffffffffac
   14003a76a:	add    eax,DWORD PTR [rax]
   14003a76c:	add    BYTE PTR [rax],al
   14003a76e:	add    BYTE PTR [rax],al
   14003a770:	pop    rax
   14003a771:	lods   al,BYTE PTR ds:[rsi]
   14003a772:	add    eax,DWORD PTR [rax]
   14003a774:	add    BYTE PTR [rax],al
   14003a776:	add    BYTE PTR [rax],al
   14003a778:	rex.R lods al,BYTE PTR ds:[rsi]
   14003a77a:	add    eax,DWORD PTR [rax]
   14003a77c:	add    BYTE PTR [rax],al
   14003a77e:	add    BYTE PTR [rax],al
   14003a780:	xor    ch,BYTE PTR [rbx+rax*1+0x0]
   14003a787:	add    BYTE PTR [rsp+rbp*4],ah
   14003a78a:	add    eax,DWORD PTR [rax]
	...
   14003a798:	(bad)  
   14003a799:	stos   DWORD PTR es:[rdi],eax
   14003a79a:	add    eax,DWORD PTR [rax]
   14003a79c:	add    BYTE PTR [rax],al
   14003a79e:	add    BYTE PTR [rax],al
   14003a7a0:	rex.WR stos QWORD PTR es:[rdi],rax
   14003a7a2:	add    eax,DWORD PTR [rax]
   14003a7a4:	add    BYTE PTR [rax],al
   14003a7a6:	add    BYTE PTR [rax],al
   14003a7a8:	sbb    ch,BYTE PTR [rbx+0x3]
   14003a7ae:	add    BYTE PTR [rax],al
   14003a7b0:	test   al,0xaa
   14003a7b2:	add    eax,DWORD PTR [rax]
   14003a7b4:	add    BYTE PTR [rax],al
   14003a7b6:	add    BYTE PTR [rax],al
   14003a7b8:	cmp    al,0xaa
   14003a7ba:	add    eax,DWORD PTR [rax]
   14003a7bc:	add    BYTE PTR [rax],al
   14003a7be:	add    BYTE PTR [rax],al
   14003a7c0:	sbb    ch,BYTE PTR [rdx+0x3]
   14003a7c6:	add    BYTE PTR [rax],al
   14003a7c8:	hlt    
   14003a7c9:	test   eax,0x3
   14003a7ce:	add    BYTE PTR [rax],al
   14003a7d0:	pushf  
   14003a7d1:	test   eax,0x3
   14003a7d6:	add    BYTE PTR [rax],al
   14003a7d8:	jle    0x14003a783
   14003a7da:	add    eax,DWORD PTR [rax]
   14003a7dc:	add    BYTE PTR [rax],al
   14003a7de:	add    BYTE PTR [rax],al
   14003a7e0:	fs test eax,0x3
   14003a7e6:	add    BYTE PTR [rax],al
   14003a7e8:	test   rax,0x3
   14003a7ee:	add    BYTE PTR [rax],al
   14003a7f0:	sub    al,0xa9
   14003a7f2:	add    eax,DWORD PTR [rax]
   14003a7f4:	add    BYTE PTR [rax],al
   14003a7f6:	add    BYTE PTR [rax],al
   14003a7f8:	add    al,0xa9
   14003a7fa:	add    eax,DWORD PTR [rax]
   14003a7fc:	add    BYTE PTR [rax],al
   14003a7fe:	add    BYTE PTR [rax],al
   14003a800:	out    dx,al
   14003a801:	test   al,0x3
   14003a803:	add    BYTE PTR [rax],al
   14003a805:	add    BYTE PTR [rax],al
   14003a807:	add    dh,dl
   14003a809:	test   al,0x3
   14003a80b:	add    BYTE PTR [rax],al
   14003a80d:	add    BYTE PTR [rax],al
   14003a80f:	add    BYTE PTR [rsi+0x3a8],dh
   14003a815:	add    BYTE PTR [rax],al
   14003a817:	add    BYTE PTR [rax+0x3a8],ah
   14003a81d:	add    BYTE PTR [rax],al
   14003a81f:	add    BYTE PTR [rdx+0x3a8],cl
   14003a825:	add    BYTE PTR [rax],al
   14003a827:	add    BYTE PTR [rax-0x58],bh
   14003a82a:	add    eax,DWORD PTR [rax]
   14003a82c:	add    BYTE PTR [rax],al
   14003a82e:	add    BYTE PTR [rax],al
   14003a830:	pop    rsi
   14003a831:	test   al,0x3
   14003a833:	add    BYTE PTR [rax],al
   14003a835:	add    BYTE PTR [rax],al
   14003a837:	add    BYTE PTR [rax-0x58],cl
   14003a83a:	add    eax,DWORD PTR [rax]
	...
   14003a848:	or     DWORD PTR [rax],eax
   14003a84a:	(bad)  
   14003a84b:	addr32 gs je 0x14003a890
   14003a84f:	jb     0x14003a8b4
   14003a851:	push   0x41594040
   14003a856:	push   rax
   14003a857:	rex.RB
   14003a858:	pop    r15
   14003a85a:	push   rdi
   14003a85b:	pop    rax
   14003a85c:	pop    rdx
   14003a85d:	add    BYTE PTR [rbx],cl
   14003a85f:	add    BYTE PTR [rdi],bh
   14003a861:	addr32 gs je 0x14003a8a8
   14003a865:	ins    DWORD PTR es:[rdi],dx
   14003a866:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73677241
   14003a86f:	rex
   14003a870:	rex pop rcx
   14003a872:	pop    r8
   14003a874:	pop    rax
   14003a875:	pop    rdx
   14003a876:	add    BYTE PTR [rax],al
   14003a878:	adc    eax,DWORD PTR [rax]
   14003a87a:	(bad)  
   14003a87b:	addr32 gs je 0x14003a8cc
   14003a87f:	outs   dx,DWORD PTR ds:[rsi]
   14003a880:	fs gs rex
   14003a883:	rex pop rcx
   14003a885:	rex.B
   14003a886:	rex.W pop rax
   14003a888:	pop    rdx
   14003a889:	add    BYTE PTR [rax],ah
   14003a88b:	add    BYTE PTR [rdi],bh
   14003a88d:	jae    0x14003a8f4
   14003a88f:	je     0x14003a8f4
   14003a891:	outs   dx,DWORD PTR ds:[rsi]
   14003a892:	jo     0x14003a90d
   14003a894:	rex.WX push rdx
   14003a896:	rex.RB
   14003a897:	rex
   14003a898:	rex pop rcx
   14003a89a:	pop    r8
   14003a89c:	rex.W
   14003a89d:	rex pop rdx
   14003a89f:	add    BYTE PTR [rdi],dl
   14003a8a1:	add    BYTE PTR [rdi],bh
   14003a8a3:	addr32 gs je 0x14003a90a
   14003a8a7:	outs   dx,DWORD PTR ds:[rsi]
   14003a8a8:	jo     0x14003a923
   14003a8aa:	rex.WX push rdx
   14003a8ac:	rex.RB
   14003a8ad:	rex
   14003a8ae:	rex pop rcx
   14003a8b0:	rex.B
   14003a8b1:	rex.W pop rax
   14003a8b3:	pop    rdx
   14003a8b4:	add    BYTE PTR [rax],al
   14003a8b6:	(bad)  
   14003a8b7:	add    BYTE PTR [rdi],bh
   14003a8b9:	(bad)  
   14003a8ba:	fs fs push rsp
   14003a8bd:	outs   dx,DWORD PTR ds:[rsi]
   14003a8be:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a8c0:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73677241
   14003a8c9:	rex
   14003a8ca:	rex pop rcx
   14003a8cc:	pop    r8
   14003a8ce:	push   rax
   14003a8cf:	rex.RB
   14003a8d0:	rex.X pop rdi
   14003a8d2:	push   rdi
   14003a8d3:	rex pop rdx
   14003a8d5:	add    BYTE PTR [rbx],bl
   14003a8d7:	add    BYTE PTR [rdi],bh
   14003a8d9:	jae    0x14003a940
   14003a8db:	je     0x14003a922
   14003a8dd:	js     0x14003a948
   14003a8df:	je     0x14003a934
   14003a8e1:	je     0x14003a944
   14003a8e3:	je     0x14003a925
   14003a8e5:	rex pop rcx
   14003a8e7:	pop    r8
   14003a8e9:	rex.W
   14003a8ea:	rex pop rdx
   14003a8ec:	add    BYTE PTR [rax],al
   14003a8ee:	(bad)  
   14003a8ef:	add    BYTE PTR [rdi],bh
   14003a8f1:	addr32 gs je 0x14003a93a
   14003a8f5:	js     0x14003a960
   14003a8f7:	je     0x14003a94c
   14003a8f9:	je     0x14003a95c
   14003a8fb:	je     0x14003a93d
   14003a8fd:	rex pop rcx
   14003a8ff:	rex.B
   14003a900:	rex.W pop rax
   14003a902:	pop    rdx
   14003a903:	add    BYTE PTR [rdx],ah
   14003a905:	add    BYTE PTR [rdi],bh
   14003a907:	jae    0x14003a971
   14003a909:	outs   dx,DWORD PTR ds:[rsi]
   14003a90a:	jne    0x14003a978
   14003a90c:	fs rex.XB jb 0x14003a975
   14003a910:	(bad)  
   14003a911:	je     0x14003a978
   14003a913:	rex.WRX
   14003a914:	gs ja  0x14003a967
   14003a917:	jb     0x14003a988
   14003a919:	movsxd esp,DWORD PTR [rbp+0x73]
   14003a91c:	jae    0x14003a967
   14003a91e:	push   sp
   14003a920:	gs ins DWORD PTR es:[rdi],dx
   14003a922:	jo     0x14003a964
   14003a924:	rex pop rcx
   14003a926:	rex.B
   14003a927:	rex.W pop rax
   14003a929:	pop    rdx
   14003a92a:	add    BYTE PTR [rax],al
   14003a92c:	and    DWORD PTR [rax],eax
   14003a92e:	(bad)  
   14003a92f:	jae    0x14003a996
   14003a931:	je     0x14003a9a8
   14003a933:	jo     0x14003a981
   14003a935:	outs   dx,DWORD PTR ds:[rsi]
   14003a936:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003a939:	push   rdx
   14003a93a:	jne    0x14003a9aa
   14003a93c:	imul   r14d,DWORD PTR [rdx+0x40],0x48415940
   14003a944:	pop    rax
   14003a945:	pop    rdx
   14003a946:	add    BYTE PTR [rax],al
   14003a948:	or     BYTE PTR [rax],al
   14003a94a:	(bad)  
   14003a94b:	fs gs ins BYTE PTR es:[rdi],dx
   14003a94e:	gs je  0x14003a9b6
   14003a951:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003a953:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003a956:	push   rdx
   14003a957:	jne    0x14003a9c7
   14003a959:	imul   r14d,DWORD PTR [rdx+0x40],0x58415940
   14003a961:	pop    rax
   14003a962:	pop    rdx
   14003a963:	add    BYTE PTR [rip+0x65673f00],dl        # 0x1a56ae869
   14003a969:	je     0x14003a9be
   14003a96b:	gs je  0x14003a9e3
   14003a96e:	jo     0x14003a9b4
   14003a970:	imul   esi,DWORD PTR [rdx+0x40],0x50415940
   14003a977:	rex.RB
   14003a978:	rex.X pop rdi
   14003a97a:	push   rdi
   14003a97b:	pop    rax
   14003a97c:	pop    rdx
   14003a97d:	add    BYTE PTR [rcx],dl
   14003a97f:	add    BYTE PTR [rdi],bh
   14003a981:	addr32 gs je 0x14003a9d1
   14003a985:	outs   dx,DWORD PTR ds:[rsi]
   14003a986:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003a989:	push   rdx
   14003a98a:	jne    0x14003a9fa
   14003a98c:	imul   r14d,DWORD PTR [rdx+0x40],0x50415940
   14003a994:	rex.RB
   14003a995:	rex.X pop rdi
   14003a997:	push   rdi
   14003a998:	pop    rax
   14003a999:	pop    rdx
   14003a99a:	add    BYTE PTR [rax],al
   14003a99c:	sbb    al,BYTE PTR [rax]
   14003a99e:	(bad)  
   14003a99f:	jb     0x14003aa16
   14003a9a1:	outs   dx,BYTE PTR ds:[rsi]
   14003a9a2:	rex.WX (bad) 
   14003a9a4:	jbe    0x14003aa07
   14003a9a6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003a9a8:	fs gs rex
   14003a9ab:	rex pop rcx
   14003a9ad:	rex.B
   14003a9ae:	rex.W push rax
   14003a9b0:	rex.RB
   14003a9b1:	rex.X
   14003a9b2:	rex.R push rsi
   14003a9b4:	(bad)  
   14003a9b5:	and    al,0x62
   14003a9b7:	(bad)  
   14003a9b8:	jae    0x14003aa23
   14003a9ba:	movsxd ebx,DWORD PTR [rdi+0x73]
   14003a9bd:	je     0x14003aa31
   14003a9bf:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14003a9c6:	and    al,0x63
   14003a9c8:	push   0x745f7261
   14003a9cd:	jb     0x14003aa30
   14003a9cf:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14003a9d7:	fs rex
   14003a9d9:	rex push rsi
   14003a9db:	(bad)  
   14003a9dc:	and    al,0x61
   14003a9de:	ins    BYTE PTR es:[rdi],dx
   14003a9df:	ins    BYTE PTR es:[rdi],dx
   14003a9e0:	outs   dx,DWORD PTR ds:[rsi]
   14003a9e1:	movsxd esp,DWORD PTR [rcx+0x74]
   14003a9e4:	outs   dx,DWORD PTR ds:[rsi]
   14003a9e5:	jb     0x14003aa27
   14003a9e7:	rex.R
   14003a9e8:	xor    al,BYTE PTR [rax+0x40]
   14003a9ec:	jae    0x14003aa62
   14003a9ee:	fs rex
   14003a9f0:	rex
   14003a9f1:	rex pop rdx
   14003a9f3:	add    BYTE PTR [rcx],al
   14003a9f5:	add    BYTE PTR [rdi],bh
   14003a9f7:	(bad)  
   14003a9f8:	xor    BYTE PTR [rdx+0x61],cl
   14003a9fb:	jbe    0x14003aa5e
   14003a9fd:	rex.WR (bad) 
   14003a9ff:	jne    0x14003aa6f
   14003aa01:	movsxd ebp,DWORD PTR [rax+0x65]
   14003aa04:	jb     0x14003aa49
   14003aa06:	outs   dx,DWORD PTR ds:[rsi]
   14003aa07:	outs   dx,BYTE PTR ds:[rsi]
   14003aa08:	imul   sp,WORD PTR [rdi+0x40],0x5140
   14003aa0e:	rex.RB
   14003aa0f:	rex.B
   14003aa10:	rex.B
   14003aa11:	rex push rax
   14003aa13:	rex.RB
   14003aa14:	rex.X pop rdi
   14003aa16:	push   rdi
   14003aa17:	rex pop rdx
   14003aa19:	add    BYTE PTR [rdx],al
   14003aa1b:	add    BYTE PTR [rdi],bh
   14003aa1d:	(bad)  
   14003aa1e:	xor    DWORD PTR [rdx+0x61],ecx
   14003aa21:	jbe    0x14003aa84
   14003aa23:	rex.WR (bad) 
   14003aa25:	jne    0x14003aa95
   14003aa27:	movsxd ebp,DWORD PTR [rax+0x65]
   14003aa2a:	jb     0x14003aa6f
   14003aa2c:	outs   dx,DWORD PTR ds:[rsi]
   14003aa2d:	outs   dx,BYTE PTR ds:[rsi]
   14003aa2e:	imul   sp,WORD PTR [rdi+0x40],0x5140
   14003aa34:	rex.RB
   14003aa35:	rex.B
   14003aa36:	rex.B
   14003aa37:	rex pop rax
   14003aa39:	pop    rdx
   14003aa3a:	add    BYTE PTR [rax],al
   14003aa3c:	adc    al,BYTE PTR [rax]
   14003aa3e:	(bad)  
   14003aa3f:	addr32 gs je 0x14003aa90
   14003aa43:	(bad)  
   14003aa44:	imul   ebp,DWORD PTR [rsi+0x43],0x7373616c
   14003aa4b:	rex
   14003aa4c:	rex.WX (bad) 
   14003aa4e:	jbe    0x14003aab1
   14003aa50:	rex.WR (bad) 
   14003aa52:	jne    0x14003aac2
   14003aa54:	movsxd ebp,DWORD PTR [rax+0x65]
   14003aa57:	jb     0x14003aa9c
   14003aa59:	outs   dx,DWORD PTR ds:[rsi]
   14003aa5a:	outs   dx,BYTE PTR ds:[rsi]
   14003aa5b:	imul   sp,WORD PTR [rdi+0x40],0x5140
   14003aa61:	rex.RB
   14003aa62:	rex.B
   14003aa63:	rex.B (bad) 
   14003aa65:	push   r14
   14003aa67:	(bad)  
   14003aa68:	and    al,0x62
   14003aa6a:	(bad)  
   14003aa6b:	jae    0x14003aad6
   14003aa6d:	movsxd ebx,DWORD PTR [rdi+0x73]
   14003aa70:	je     0x14003aae4
   14003aa72:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14003aa79:	and    al,0x63
   14003aa7b:	push   0x745f7261
   14003aa80:	jb     0x14003aae3
   14003aa82:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14003aa8a:	fs rex
   14003aa8c:	rex push rsi
   14003aa8e:	(bad)  
   14003aa8f:	and    al,0x61
   14003aa91:	ins    BYTE PTR es:[rdi],dx
   14003aa92:	ins    BYTE PTR es:[rdi],dx
   14003aa93:	outs   dx,DWORD PTR ds:[rsi]
   14003aa94:	movsxd esp,DWORD PTR [rcx+0x74]
   14003aa97:	outs   dx,DWORD PTR ds:[rsi]
   14003aa98:	jb     0x14003aada
   14003aa9a:	rex.R
   14003aa9b:	xor    al,BYTE PTR [rax+0x40]
   14003aa9f:	jae    0x14003ab15
   14003aaa1:	fs rex
   14003aaa3:	rex pop rax
   14003aaa5:	pop    rdx
   14003aaa6:	add    BYTE PTR [rax],al
   14003aaa8:	adc    al,0x0
   14003aaaa:	(bad)  
   14003aaab:	addr32 gs je 0x14003aaff
   14003aaaf:	(bad)  
   14003aab0:	je     0x14003ab1a
   14003aab2:	ins    BYTE PTR es:[rdi],dx
   14003aab3:	imul   esi,DWORD PTR [rbx+0x74],0x4072614a
   14003aaba:	rex.WX (bad) 
   14003aabc:	jbe    0x14003ab1f
   14003aabe:	rex.WR (bad) 
   14003aac0:	jne    0x14003ab30
   14003aac2:	movsxd ebp,DWORD PTR [rax+0x65]
   14003aac5:	jb     0x14003ab0a
   14003aac7:	outs   dx,DWORD PTR ds:[rsi]
   14003aac8:	outs   dx,BYTE PTR ds:[rsi]
   14003aac9:	imul   sp,WORD PTR [rdi+0x40],0x5140
   14003aacf:	rex.RB
   14003aad0:	rex.B
   14003aad1:	rex.B (bad) 
   14003aad3:	push   r14
   14003aad5:	(bad)  
   14003aad6:	and    al,0x62
   14003aad8:	(bad)  
   14003aad9:	jae    0x14003ab44
   14003aadb:	movsxd ebx,DWORD PTR [rdi+0x73]
   14003aade:	je     0x14003ab52
   14003aae0:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14003aae7:	and    al,0x63
   14003aae9:	push   0x745f7261
   14003aaee:	jb     0x14003ab51
   14003aaf0:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14003aaf8:	fs rex
   14003aafa:	rex push rsi
   14003aafc:	(bad)  
   14003aafd:	and    al,0x61
   14003aaff:	ins    BYTE PTR es:[rdi],dx
   14003ab00:	ins    BYTE PTR es:[rdi],dx
   14003ab01:	outs   dx,DWORD PTR ds:[rsi]
   14003ab02:	movsxd esp,DWORD PTR [rcx+0x74]
   14003ab05:	outs   dx,DWORD PTR ds:[rsi]
   14003ab06:	jb     0x14003ab48
   14003ab08:	rex.R
   14003ab09:	xor    al,BYTE PTR [rax+0x40]
   14003ab0d:	jae    0x14003ab83
   14003ab0f:	fs rex
   14003ab11:	rex push rax
   14003ab13:	rex.RB
   14003ab14:	rex.X pop rdi
   14003ab16:	push   rdi
   14003ab17:	rex pop rdx
   14003ab19:	add    BYTE PTR [rip+0x65673f00],cl        # 0x1a56aea1f
   14003ab1f:	je     0x14003ab64
   14003ab21:	outs   dx,DWORD PTR ds:[rsi]
   14003ab22:	jo     0x14003ab9d
   14003ab24:	push   rsp
   14003ab25:	outs   dx,DWORD PTR ds:[rsi]
   14003ab26:	push   rsp
   14003ab27:	gs ins DWORD PTR es:[rdi],dx
   14003ab29:	jo     0x14003ab71
   14003ab2b:	ins    BYTE PTR es:[rdi],dx
   14003ab2c:	(bad)  
   14003ab2d:	addr32 rex
   14003ab2f:	rex.WX (bad) 
   14003ab31:	jbe    0x14003ab94
   14003ab33:	rex.WR (bad) 
   14003ab35:	jne    0x14003aba5
   14003ab37:	movsxd ebp,DWORD PTR [rax+0x65]
   14003ab3a:	jb     0x14003ab7f
   14003ab3c:	outs   dx,DWORD PTR ds:[rsi]
   14003ab3d:	outs   dx,BYTE PTR ds:[rsi]
   14003ab3e:	imul   sp,WORD PTR [rdi+0x40],0x5140
   14003ab44:	rex.RB
   14003ab45:	rex.B
   14003ab46:	rex.B
   14003ab47:	rex.W pop rax
   14003ab49:	pop    rdx
   14003ab4a:	add    BYTE PTR [rax],al
   14003ab4c:	(bad)  
   14003ab4d:	add    BYTE PTR [rdi],bh
   14003ab4f:	rex.WRXB jo 0x14003abb7
   14003ab52:	outs   dx,BYTE PTR ds:[rsi]
   14003ab53:	push   rbx
   14003ab54:	jo     0x14003abc2
   14003ab56:	(bad)  
   14003ab57:	jae    0x14003abc1
   14003ab59:	rex
   14003ab5a:	rex pop rcx
   14003ab5c:	pop    r8
   14003ab5e:	push   rax
   14003ab5f:	rex.RB
   14003ab60:	push   r13
   14003ab62:	rex.W
   14003ab63:	rex.WB
   14003ab64:	rex.WRX push rbx
   14003ab66:	push   rsp
   14003ab67:	rex.B
   14003ab68:	rex.WRX
   14003ab69:	rex.XB
   14003ab6a:	rex.RB pop r15
   14003ab6c:	pop    rdi
   14003ab6d:	rex
   14003ab6e:	rex push rax
   14003ab70:	rex.RB
   14003ab71:	push   r13
   14003ab73:	rex.W
   14003ab74:	rex.X
   14003ab75:	rex.WB push r12
   14003ab77:	rex.WRB
   14003ab78:	push   r8
   14003ab7a:	pop    rdi
   14003ab7b:	pop    rdi
   14003ab7c:	rex
   14003ab7d:	rex
   14003ab7e:	rex pop rdx
   14003ab80:	add    BYTE PTR [rax],al
   14003ab82:	add    al,0x0
   14003ab84:	(bad)  
   14003ab85:	rex.XB ins BYTE PTR es:[rdi],dx
   14003ab87:	outs   dx,DWORD PTR ds:[rsi]
   14003ab88:	jae    0x14003abef
   14003ab8a:	push   rbx
   14003ab8b:	jo     0x14003abf9
   14003ab8d:	(bad)  
   14003ab8e:	jae    0x14003abf8
   14003ab90:	rex
   14003ab91:	rex pop rcx
   14003ab93:	pop    r8
   14003ab95:	pop    rax
   14003ab96:	pop    rdx
   14003ab97:	add    BYTE PTR [rdx+0x61],ch
   14003ab9a:	jbe    0x14003abfd
   14003ab9c:	pop    rdi
   14003ab9d:	ins    BYTE PTR es:[rdi],dx
   14003ab9e:	(bad)  
   14003ab9f:	jne    0x14003ac0f
   14003aba1:	movsxd ebp,DWORD PTR [rax+0x65]
   14003aba4:	jb     0x14003abd4
   14003aba6:	fs ins BYTE PTR es:[rdi],dx
   14003aba8:	ins    BYTE PTR es:[rdi],dx
   14003aba9:	add    bh,cl
   14003abab:	add    DWORD PTR [rdi+0x65],eax
   14003abae:	je     0x14003abf3
   14003abb0:	outs   dx,DWORD PTR ds:[rsi]
   14003abb1:	ins    DWORD PTR es:[rdi],dx
   14003abb2:	ins    DWORD PTR es:[rdi],dx
   14003abb3:	(bad)  
   14003abb4:	outs   dx,BYTE PTR ds:[rsi]
   14003abb5:	imul   r13,QWORD PTR fs:[rsi+0x65],0x2300057
   14003abbe:	rex.RXB
   14003abbf:	gs je  0x14003ac07
   14003abc2:	outs   dx,BYTE PTR ds:[rsi]
   14003abc3:	jbe    0x14003ac2e
   14003abc5:	jb     0x14003ac36
   14003abc7:	outs   dx,BYTE PTR ds:[rsi]
   14003abc8:	ins    DWORD PTR es:[rdi],dx
   14003abc9:	outs   dx,BYTE PTR gs:[rsi]
   14003abcb:	je     0x14003ac23
   14003abcd:	(bad)  
   14003abce:	jb     0x14003ac39
   14003abd0:	(bad)  
   14003abd1:	(bad)  
   14003abd2:	ins    BYTE PTR es:[rdi],dx
   14003abd3:	gs push rdi
   14003abd5:	add    ch,bh
   14003abd7:	add    al,0x53
   14003abd9:	gs je  0x14003ac21
   14003abdc:	outs   dx,BYTE PTR ds:[rsi]
   14003abdd:	jbe    0x14003ac48
   14003abdf:	jb     0x14003ac50
   14003abe1:	outs   dx,BYTE PTR ds:[rsi]
   14003abe2:	ins    DWORD PTR es:[rdi],dx
   14003abe3:	outs   dx,BYTE PTR gs:[rsi]
   14003abe5:	je     0x14003ac3d
   14003abe7:	(bad)  
   14003abe8:	jb     0x14003ac53
   14003abea:	(bad)  
   14003abeb:	(bad)  
   14003abec:	ins    BYTE PTR es:[rdi],dx
   14003abed:	gs push rdi
   14003abef:	add    bl,bl
   14003abf1:	add    BYTE PTR [rbx+0x72],al
   14003abf4:	gs (bad) 
   14003abf6:	je     0x14003ac5d
   14003abf8:	push   rax
   14003abf9:	jb     0x14003ac6a
   14003abfb:	movsxd esp,DWORD PTR [rbp+0x73]
   14003abfe:	jae    0x14003ac57
   14003ac00:	add    BYTE PTR [rax],al
   14003ac02:	ins    DWORD PTR es:[rdi],dx
   14003ac03:	add    al,BYTE PTR [rdi+0x65]
   14003ac06:	je     0x14003ac55
   14003ac08:	outs   dx,DWORD PTR ds:[rsi]
   14003ac09:	fs jne 0x14003ac78
   14003ac0c:	gs rex.W (bad) 
   14003ac0f:	outs   dx,BYTE PTR ds:[rsi]
   14003ac10:	fs ins BYTE PTR es:[rdi],dx
   14003ac12:	gs push rdi
   14003ac14:	add    BYTE PTR [rax],al
   14003ac16:	rex.WXB
   14003ac17:	rex.RB push r10
   14003ac19:	rex.WRX
   14003ac1a:	rex.RB
   14003ac1b:	xor    r14,QWORD PTR [rdx]
   14003ac1e:	cs fs ins BYTE PTR es:[rdi],dx
   14003ac21:	ins    BYTE PTR es:[rdi],dx
   14003ac22:	add    BYTE PTR [rax],al
   14003ac24:	xor    al,0x2
   14003ac26:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003ac28:	(bad)  
   14003ac29:	fs push rbx
   14003ac2b:	je     0x14003ac9f
   14003ac2d:	imul   ebp,DWORD PTR [rsi+0x67],0xa10057
   14003ac34:	rex.R
   14003ac35:	gs push di
   14003ac38:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   14003ac3f:	outs   dx,DWORD PTR ds:[rsi]
   14003ac40:	movsxd edx,DWORD PTR [rdi+0x0]
   14003ac43:	add    BYTE PTR [rbp+0x67655202],cl
   14003ac49:	imul   esi,DWORD PTR [rbx+0x74],0x6c437265
   14003ac50:	(bad)  
   14003ac51:	jae    0x14003acc6
   14003ac53:	rex.RB js 0x14003acad
   14003ac56:	add    BYTE PTR [rax],al
   14003ac58:	jno    0x14003ac5a
   14003ac5a:	rex.XB jb 0x14003acc2
   14003ac5d:	(bad)  
   14003ac5e:	je     0x14003acc5
   14003ac60:	push   rdi
   14003ac61:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   14003ac68:	push   rdi
   14003ac69:	add    BYTE PTR [rcx+0x2],dl
   14003ac6c:	rex.WRB
   14003ac6d:	gs jae 0x14003ace3
   14003ac70:	(bad)  
   14003ac71:	rex.X outs dx,DWORD PTR gs:[esi]
   14003ac75:	js     0x14003acce
   14003ac77:	add    BYTE PTR [rcx],cl
   14003ac79:	add    DWORD PTR [rsi+0x69],eax
   14003ac7c:	outs   dx,BYTE PTR ds:[rsi]
   14003ac7d:	fs push rdi
   14003ac7f:	imul   ebp,DWORD PTR [rsi+0x64],0x57776f
   14003ac86:	push   rbp
   14003ac87:	push   rbx
   14003ac88:	rex.RB push r10
   14003ac8a:	xor    esi,DWORD PTR [rdx]
   14003ac8c:	cs fs ins BYTE PTR es:[rdi],dx
   14003ac8f:	ins    BYTE PTR es:[rdi],dx
   14003ac90:	add    BYTE PTR [rax],al
   14003ac92:	and    eax,0x636e4501
   14003ac97:	outs   dx,DWORD PTR ds:[rsi]
   14003ac98:	fs gs push rax
   14003ac9b:	outs   dx,DWORD PTR ds:[rsi]
   14003ac9c:	imul   ebp,DWORD PTR [rsi+0x74],0xff007265
   14003aca3:	add    BYTE PTR [rbp+riz*2+0x63],al
   14003aca7:	outs   dx,DWORD PTR ds:[rsi]
   14003aca8:	fs gs push rax
   14003acab:	outs   dx,DWORD PTR ds:[rsi]
   14003acac:	imul   ebp,DWORD PTR [rsi+0x74],0xb7007265
   14003acb3:	add    al,0x52
   14003acb5:	je     0x14003ad23
   14003acb7:	push   rax
   14003acb8:	movsxd edx,DWORD PTR [rdi+rbp*2+0x46]
   14003acbc:	imul   ebp,DWORD PTR [rbp+riz*2+0x48],0x65646165
   14003acc4:	jb     0x14003acc6
   14003acc6:	rex.R add al,0x52
   14003acc9:	(bad)  
   14003acca:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14003acd1:	jo     0x14003ad47
   14003acd3:	imul   ebp,DWORD PTR [rdi+0x6e],0x4b50000
   14003acda:	push   rdx
   14003acdb:	je     0x14003ad49
   14003acdd:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003acdf:	outs   dx,DWORD PTR ds:[rsi]
   14003ace0:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14003ace4:	jne    0x14003ad54
   14003ace6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14003acea:	outs   dx,BYTE PTR ds:[rsi]
   14003aceb:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14003aced:	je     0x14003ad61
   14003acef:	jns    0x14003acf1
   14003acf1:	add    BYTE PTR [rbx+0x6c745204],bh
   14003acf7:	push   rbp
   14003acf8:	outs   dx,BYTE PTR ds:[rsi]
   14003acf9:	ja     0x14003ad64
   14003acfb:	outs   dx,BYTE PTR ds:[rsi]
   14003acfc:	fs rex.RB js 0x14003ad00
   14003ad00:	(bad)  
   14003ad01:	add    DWORD PTR [rdi+0x65],eax
   14003ad04:	je     0x14003ad49
   14003ad06:	outs   dx,DWORD PTR ds:[rsi]
   14003ad07:	ins    DWORD PTR es:[rdi],dx
   14003ad08:	ins    DWORD PTR es:[rdi],dx
   14003ad09:	(bad)  
   14003ad0a:	outs   dx,BYTE PTR ds:[rsi]
   14003ad0b:	imul   r13,QWORD PTR fs:[rsi+0x65],0x3700041
   14003ad14:	rex.WB jae 0x14003ad67
   14003ad17:	jb     0x14003ad88
   14003ad19:	movsxd esp,DWORD PTR [rbp+0x73]
   14003ad1c:	jae    0x14003ad8d
   14003ad1e:	jb     0x14003ad66
   14003ad20:	gs (bad) 
   14003ad22:	je     0x14003ad99
   14003ad24:	jb     0x14003ad8b
   14003ad26:	push   rax
   14003ad27:	jb     0x14003ad8e
   14003ad29:	jae    0x14003ad90
   14003ad2b:	outs   dx,BYTE PTR ds:[rsi]
   14003ad2c:	je     0x14003ad2e
   14003ad2e:	push   rsi
   14003ad2f:	add    al,BYTE PTR [rdi+0x65]
   14003ad32:	je     0x14003ad80
   14003ad34:	(bad)  
   14003ad35:	jae    0x14003adab
   14003ad37:	rex.RB jb 0x14003adac
   14003ad3a:	outs   dx,DWORD PTR ds:[rsi]
   14003ad3b:	jb     0x14003ad3d
   14003ad3d:	add    BYTE PTR [rax],bh
   14003ad3f:	add    ecx,DWORD PTR [rax+0x65]
   14003ad42:	(bad)  
   14003ad43:	jo     0x14003ad86
   14003ad45:	ins    BYTE PTR es:[rdi],dx
   14003ad46:	ins    BYTE PTR es:[rdi],dx
   14003ad47:	outs   dx,DWORD PTR ds:[rsi]
   14003ad48:	movsxd eax,DWORD PTR [rax]
   14003ad4a:	cmp    al,0x3
   14003ad4c:	rex.W
   14003ad4d:	gs (bad) 
   14003ad4f:	jo     0x14003ad97
   14003ad51:	jb     0x14003adb8
   14003ad53:	add    BYTE PTR gs:[rax],al
   14003ad56:	push   rdi
   14003ad57:	add    DWORD PTR [rbp+0x78],eax
   14003ad5a:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   14003ad62:	jae    0x14003ad64
   14003ad64:	ins    BYTE PTR es:[rdi],dx
   14003ad65:	add    al,BYTE PTR [rdi+0x65]
   14003ad68:	je     0x14003adb7
   14003ad6a:	outs   dx,DWORD PTR ds:[rsi]
   14003ad6b:	fs jne 0x14003adda
   14003ad6e:	gs rex.W (bad) 
   14003ad71:	outs   dx,BYTE PTR ds:[rsi]
   14003ad72:	fs ins BYTE PTR es:[rdi],dx
   14003ad74:	gs rex.RB js 0x14003adcf
   14003ad78:	add    BYTE PTR [rax],al
   14003ad7a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003ad7b:	add    al,BYTE PTR [rdi+0x65]
   14003ad7e:	je     0x14003add0
   14003ad80:	jb     0x14003adf1
   14003ad82:	movsxd eax,DWORD PTR [rcx+0x64]
   14003ad85:	fs jb  0x14003aded
   14003ad88:	jae    0x14003adfd
   14003ad8a:	add    BYTE PTR [rax],al
   14003ad8c:	sbb    eax,DWORD PTR [rax]
   14003ad8e:	rex.B jb 0x14003adf6
   14003ad91:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x41736970
   14003ad9a:	rex.WRX push rbx
   14003ad9c:	rex.WB add r12b,dl
   14003ad9f:	add    ecx,DWORD PTR [rbp+0x75]
   14003ada2:	ins    BYTE PTR es:[rdi],dx
   14003ada3:	je     0x14003ae0e
   14003ada5:	rex.X jns 0x14003ae1c
   14003ada8:	gs push rsp
   14003adaa:	outs   dx,DWORD PTR ds:[rsi]
   14003adab:	push   rdi
   14003adac:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14003adb4:	fld    QWORD PTR [rip+0x65646957]        # 0x1a5681711
   14003adba:	rex.XB push 0x6f547261
   14003adc0:	rex.WRB jne 0x14003ae2f
   14003adc3:	je     0x14003ae2e
   14003adc5:	rex.X jns 0x14003ae3c
   14003adc8:	add    BYTE PTR gs:[rcx+0x3],al
   14003adcc:	rex.W
   14003adcd:	gs (bad) 
   14003adcf:	jo     0x14003ae24
   14003add1:	imul   edi,DWORD PTR [rdx+0x65],0x36a0000
   14003add8:	rex.WB jae 0x14003ae1f
   14003addb:	gs (bad) 
   14003addd:	jne    0x14003ae46
   14003addf:	addr32 gs jb 0x14003ae33
   14003ade3:	jb     0x14003ae4a
   14003ade5:	jae    0x14003ae4c
   14003ade7:	outs   dx,BYTE PTR ds:[rsi]
   14003ade8:	je     0x14003adea
   14003adea:	sbb    DWORD PTR [rip+0x4c746553],eax        # 0x18c781343
   14003adf0:	(bad)  
   14003adf1:	jae    0x14003ae67
   14003adf3:	rex.RB jb 0x14003ae68
   14003adf6:	outs   dx,DWORD PTR ds:[rsi]
   14003adf7:	jb     0x14003adf9
   14003adf9:	add    BYTE PTR [rbx],dl
   14003adfb:	add    al,BYTE PTR [rdi+0x65]
   14003adfe:	je     0x14003ae43
   14003ae00:	jne    0x14003ae74
   14003ae02:	jb     0x14003ae69
   14003ae04:	outs   dx,BYTE PTR ds:[rsi]
   14003ae05:	je     0x14003ae5b
   14003ae07:	push   0x64616572
   14003ae0c:	add    BYTE PTR [rax],al
   14003ae0e:	adc    al,0x2
   14003ae10:	rex.RXB
   14003ae11:	gs je  0x14003ae57
   14003ae14:	jne    0x14003ae88
   14003ae16:	jb     0x14003ae7d
   14003ae18:	outs   dx,BYTE PTR ds:[rsi]
   14003ae19:	je     0x14003ae6f
   14003ae1b:	push   0x64616572
   14003ae20:	rex.WB
   14003ae21:	add    BYTE PTR fs:[rax],al
   14003ae24:	test   eax,0x74654702
   14003ae29:	push   rax
   14003ae2a:	jb     0x14003ae9b
   14003ae2c:	movsxd esp,DWORD PTR [rbp+0x73]
   14003ae2f:	jae    0x14003ae79
   14003ae31:	gs (bad) 
   14003ae33:	jo     0x14003ae35
   14003ae35:	add    bh,al
   14003ae37:	add    al,BYTE PTR [rdi+0x65]
   14003ae3a:	je     0x14003ae8f
   14003ae3c:	je     0x14003aea2
   14003ae3e:	rex.W (bad) 
   14003ae40:	outs   dx,BYTE PTR ds:[rsi]
   14003ae41:	fs ins BYTE PTR es:[rdi],dx
   14003ae43:	add    BYTE PTR gs:[rax],al
   14003ae46:	add    r8b,BYTE PTR [r15+0x65]
   14003ae4a:	je     0x14003ae92
   14003ae4c:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   14003ae54:	(bad)  
   14003ae55:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14003ae59:	gs je  0x14003aec1
   14003ae5c:	rex.XB jb 0x14003aec8
   14003ae5f:	je     0x14003aeca
   14003ae61:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003ae64:	push   rbx
   14003ae65:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003ae6a:	outs   dx,BYTE PTR ds:[rsi]
   14003ae6b:	add    ch,al
   14003ae6d:	add    al,BYTE PTR [rdi+0x65]
   14003ae70:	je     0x14003aec5
   14003ae72:	je     0x14003aed5
   14003ae74:	jb     0x14003aeea
   14003ae76:	jne    0x14003aee8
   14003ae78:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003ae7a:	outs   dx,WORD PTR ds:[rsi]
   14003ae7c:	push   rdi
   14003ae7d:	add    BYTE PTR [rax+0x2],ch
   14003ae80:	rex.RXB
   14003ae81:	gs je  0x14003aed1
   14003ae84:	outs   dx,DWORD PTR ds:[rsi]
   14003ae85:	fs jne 0x14003aef4
   14003ae88:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14003ae92:	add    BYTE PTR [rax],al
   14003ae94:	icebp  
   14003ae95:	add    eax,0x74697257
   14003ae9a:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x0],0x65470269
   14003aea4:	je     0x14003aef3
   14003aea6:	outs   dx,DWORD PTR ds:[rsi]
   14003aea7:	fs jne 0x14003af16
   14003aeaa:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14003aeb4:	add    BYTE PTR [rax],al
   14003aeb6:	xor    BYTE PTR [rcx+rdx*2],al
   14003aeb9:	jne    0x14003af20
   14003aebb:	jb     0x14003af36
   14003aebd:	push   rax
   14003aebe:	gs jb  0x14003af27
   14003aec1:	outs   dx,DWORD PTR ds:[rsi]
   14003aec2:	jb     0x14003af31
   14003aec4:	(bad)  
   14003aec5:	outs   dx,BYTE PTR ds:[rsi]
   14003aec6:	movsxd esp,DWORD PTR [rbp+0x43]
   14003aec9:	outs   dx,DWORD PTR ds:[rsi]
   14003aeca:	jne    0x14003af3a
   14003aecc:	je     0x14003af33
   14003aece:	jb     0x14003aed0
   14003aed0:	adc    BYTE PTR [rdx],al
   14003aed2:	rex.RXB
   14003aed3:	gs je  0x14003af19
   14003aed6:	jne    0x14003af4a
   14003aed8:	jb     0x14003af3f
   14003aeda:	outs   dx,BYTE PTR ds:[rsi]
   14003aedb:	je     0x14003af2d
   14003aedd:	jb     0x14003af4e
   14003aedf:	movsxd esp,DWORD PTR [rbp+0x73]
   14003aee2:	jae    0x14003af2d
   14003aee4:	fs add ch,bl
   14003aee7:	add    al,BYTE PTR [rdi+0x65]
   14003aeea:	je     0x14003af3f
   14003aeec:	jns    0x14003af61
   14003aeee:	je     0x14003af55
   14003aef0:	ins    DWORD PTR es:[rdi],dx
   14003aef1:	push   rsp
   14003aef2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14003aef9:	ins    BYTE PTR es:[rdi],dx
   14003aefa:	gs push rsp
   14003aefc:	imul   ebp,DWORD PTR [rbp+0x65],0x47022e00
   14003af03:	gs je  0x14003af4b
   14003af06:	outs   dx,BYTE PTR ds:[rsi]
   14003af07:	jbe    0x14003af72
   14003af09:	jb     0x14003af7a
   14003af0b:	outs   dx,BYTE PTR ds:[rsi]
   14003af0c:	ins    DWORD PTR es:[rdi],dx
   14003af0d:	outs   dx,BYTE PTR gs:[rsi]
   14003af0f:	je     0x14003af64
   14003af11:	je     0x14003af85
   14003af13:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   14003af1a:	movabs ds:0x766e456565724601,eax
   14003af23:	imul   esi,DWORD PTR [rdx+0x6f],0x6e656d6e
   14003af2a:	je     0x14003af7f
   14003af2c:	je     0x14003afa0
   14003af2e:	imul   ebp,DWORD PTR [rsi+0x67],0xae005773
   14003af35:	add    al,0x52
   14003af37:	je     0x14003afa5
   14003af39:	rex.XB (bad) 
   14003af3b:	jo     0x14003afb1
   14003af3d:	jne    0x14003afb1
   14003af3f:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14003af42:	outs   dx,BYTE PTR ds:[rsi]
   14003af43:	je     0x14003afaa
   14003af45:	js     0x14003afbb
   14003af47:	add    BYTE PTR [rsp+rax*1+0x566c7452],bh
   14003af4e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14003af55:	outs   dx,BYTE PTR ds:[rsi]
   14003af56:	ja     0x14003afc1
   14003af58:	outs   dx,BYTE PTR ds:[rsi]
   14003af59:	add    BYTE PTR fs:[rax],al
   14003af5c:	xchg   edx,eax
   14003af5d:	add    eax,0x61686e55
   14003af62:	outs   dx,BYTE PTR ds:[rsi]
   14003af63:	fs ins BYTE PTR es:[rdi],dx
   14003af65:	gs fs rex.RB js 0x14003afcd
   14003af6a:	gs jo  0x14003afe1
   14003af6d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14003af74:	gs jb  0x14003af77
   14003af77:	add    BYTE PTR [rdx+0x5],dl
   14003af7a:	push   rbx
   14003af7b:	gs je  0x14003afd3
   14003af7e:	outs   dx,BYTE PTR ds:[rsi]
   14003af7f:	push   0x6c646e61
   14003af84:	gs fs rex.RB js 0x14003afec
   14003af89:	gs jo  0x14003b000
   14003af8c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14003af93:	gs jb  0x14003af96
   14003af96:	push   rcx
   14003af97:	add    ecx,DWORD PTR [rcx+0x6e]
   14003af9a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14003afa2:	rex.XB jb 0x14003b00e
   14003afa5:	je     0x14003b010
   14003afa7:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003afaa:	push   rbx
   14003afab:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003afb0:	outs   dx,BYTE PTR ds:[rsi]
   14003afb1:	rex.B outs dx,BYTE PTR ds:[rsi]
   14003afb3:	fs push rbx
   14003afb5:	jo     0x14003b020
   14003afb7:	outs   dx,BYTE PTR ds:[rsi]
   14003afb8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003afba:	jne    0x14003b02a
   14003afbc:	je     0x14003afbe
   14003afbe:	mov    dh,0x0
   14003afc0:	rex.XB jb 0x14003b028
   14003afc3:	(bad)  
   14003afc4:	je     0x14003b02b
   14003afc6:	rex.RB jbe 0x14003b02e
   14003afc9:	outs   dx,BYTE PTR ds:[rsi]
   14003afca:	je     0x14003b023
   14003afcc:	add    BYTE PTR [rax],al
   14003afce:	(bad)  
   14003afcf:	add    eax,0x65656c53
   14003afd4:	jo     0x14003afd6
   14003afd6:	lar    eax,WORD PTR [rdi+0x65]
   14003afda:	je     0x14003b01f
   14003afdc:	jne    0x14003b050
   14003afde:	jb     0x14003b045
   14003afe0:	outs   dx,BYTE PTR ds:[rsi]
   14003afe1:	je     0x14003b033
   14003afe3:	jb     0x14003b054
   14003afe5:	movsxd esp,DWORD PTR [rbp+0x73]
   14003afe8:	jae    0x14003afea
   14003afea:	jo     0x14003aff1
   14003afec:	push   rsp
   14003afed:	gs jb  0x14003b05d
   14003aff0:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14003aff7:	outs   dx,DWORD PTR ds:[rsi]
   14003aff8:	movsxd esp,DWORD PTR [rbp+0x73]
   14003affb:	jae    0x14003affd
   14003affd:	add    BYTE PTR [rdx+0x736c5405],al
   14003b003:	rex.B ins BYTE PTR es:[rdi],dx
   14003b005:	ins    BYTE PTR es:[rdi],dx
   14003b006:	outs   dx,DWORD PTR ds:[rsi]
   14003b007:	movsxd eax,DWORD PTR [rax]
   14003b009:	add    BYTE PTR [rbp+rax*1+0x47736c54],al
   14003b010:	gs je  0x14003b069
   14003b013:	(bad)  
   14003b014:	ins    BYTE PTR es:[rdi],dx
   14003b015:	jne    0x14003b07c
   14003b017:	add    BYTE PTR [rbp+0x736c5405],al
   14003b01d:	push   rbx
   14003b01e:	gs je  0x14003b077
   14003b021:	(bad)  
   14003b022:	ins    BYTE PTR es:[rdi],dx
   14003b023:	jne    0x14003b08a
   14003b025:	add    BYTE PTR [rbx+0x736c5405],al
   14003b02b:	rex.RX jb 0x14003b093
   14003b02e:	gs add cl,bh
   14003b031:	add    al,BYTE PTR [rdi+0x65]
   14003b034:	je     0x14003b08a
   14003b036:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14003b03d:	je     0x14003b03f
   14003b03f:	add    cl,ah
   14003b041:	add    BYTE PTR [rbx+0x72],al
   14003b044:	gs (bad) 
   14003b046:	je     0x14003b0ad
   14003b048:	push   rbx
   14003b049:	gs ins DWORD PTR es:[rdi],dx
   14003b04b:	(bad)  
   14003b04c:	jo     0x14003b0b6
   14003b04e:	outs   dx,DWORD PTR ds:[rsi]
   14003b04f:	jb     0x14003b0b6
   14003b051:	push   rdi
   14003b052:	add    BYTE PTR [rax],al
   14003b054:	rol    BYTE PTR [rbx+rdx*2],cl
   14003b057:	gs je  0x14003b09d
   14003b05a:	outs   dx,DWORD PTR ds:[rsi]
   14003b05b:	outs   dx,BYTE PTR ds:[rsi]
   14003b05c:	jae    0x14003b0cd
   14003b05e:	ins    BYTE PTR es:[rdi],dx
   14003b05f:	gs rex.XB je 0x14003b0d5
   14003b063:	ins    BYTE PTR es:[rdi],dx
   14003b064:	rex.W (bad) 
   14003b066:	outs   dx,BYTE PTR ds:[rsi]
   14003b067:	fs ins BYTE PTR es:[rdi],dx
   14003b069:	gs jb  0x14003b06c
   14003b06c:	sbb    al,BYTE PTR [rdx]
   14003b06e:	rex.RXB
   14003b06f:	gs je  0x14003b0b6
   14003b072:	(bad)  
   14003b073:	je     0x14003b0da
   14003b075:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14003b077:	jb     0x14003b0e6
   14003b079:	(bad)  
   14003b07a:	je     0x14003b0d3
   14003b07c:	add    BYTE PTR [rax],al
   14003b07e:	inc    BYTE PTR [rdx]
   14003b080:	rex.RXB
   14003b081:	gs je  0x14003b0d8
   14003b084:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
   14003b08b:	(bad)  
   14003b08c:	je     0x14003b0e5
   14003b08e:	add    BYTE PTR [rax],al
   14003b090:	xchg   ebx,eax
   14003b091:	add    BYTE PTR [rbx+0x6f],al
   14003b094:	ins    DWORD PTR es:[rdi],dx
   14003b095:	jo     0x14003b0f8
   14003b097:	jb     0x14003b0fe
   14003b099:	push   rbx
   14003b09a:	je     0x14003b10e
   14003b09c:	imul   ebp,DWORD PTR [rsi+0x67],0x99000057
   14003b0a3:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   14003b0a7:	(bad)  
   14003b0a8:	jo     0x14003b0fd
   14003b0aa:	je     0x14003b11e
   14003b0ac:	imul   ebp,DWORD PTR [rsi+0x67],0x5a000057
   14003b0b3:	add    al,BYTE PTR [rdi+0x65]
   14003b0b6:	je     0x14003b104
   14003b0b8:	outs   dx,DWORD PTR ds:[rsi]
   14003b0b9:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003b0bc:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14003b0bf:	outs   dx,WORD PTR ds:[rsi]
   14003b0c1:	push   rdi
   14003b0c2:	add    BYTE PTR [rax],al
   14003b0c4:	ja     0x14003b0c9
   14003b0c6:	rex.WB jae 0x14003b11f
   14003b0c9:	(bad)  
   14003b0ca:	ins    BYTE PTR es:[rdi],dx
   14003b0cb:	imul   esp,DWORD PTR [rsp+rcx*2+0x6f],0x656c6163
   14003b0d3:	add    BYTE PTR [rip+0x74654703],al        # 0x1b468f7dc
   14003b0d9:	push   rbp
   14003b0da:	jae    0x14003b141
   14003b0dc:	jb     0x14003b122
   14003b0de:	gs data16 (bad) 
   14003b0e1:	jne    0x14003b14f
   14003b0e3:	je     0x14003b131
   14003b0e5:	rex.XB
   14003b0e6:	rex.WB
   14003b0e7:	add    BYTE PTR [rax],r8b
   14003b0ea:	add    QWORD PTR [rbp+0x6e],r8
   14003b0ee:	jne    0x14003b15d
   14003b0f0:	push   rbx
   14003b0f1:	jns    0x14003b166
   14003b0f3:	je     0x14003b15a
   14003b0f5:	ins    DWORD PTR es:[rdi],dx
   14003b0f6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003b0f8:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003b0fb:	gs jae 0x14003b155
   14003b0fe:	add    BYTE PTR [rax],al
   14003b100:	sub    DWORD PTR [rcx],eax
   14003b102:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14003b104:	je     0x14003b16b
   14003b106:	jb     0x14003b14b
   14003b108:	jb     0x14003b173
   14003b10a:	je     0x14003b175
   14003b10c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003b10f:	push   rbx
   14003b110:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003b115:	outs   dx,BYTE PTR ds:[rsi]
   14003b116:	add    BYTE PTR [rax],al
   14003b118:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003b119:	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   14003b11d:	jbe    0x14003b184
   14003b11f:	rex.XB jb 0x14003b18b
   14003b122:	je     0x14003b18d
   14003b124:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003b127:	push   rbx
   14003b128:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003b12d:	outs   dx,BYTE PTR ds:[rsi]
   14003b12e:	add    BYTE PTR [rax],al
   14003b130:	pop    rsi
   14003b131:	add    DWORD PTR [rsi+0x61],eax
   14003b134:	je     0x14003b197
   14003b136:	ins    BYTE PTR es:[rdi],dx
   14003b137:	rex.B jo 0x14003b1aa
   14003b13a:	rex.RB js 0x14003b1a6
   14003b13d:	je     0x14003b180
   14003b13f:	add    BYTE PTR [rcx+rax*1+0x65657246],ah
   14003b146:	imul   r12,QWORD PTR [rdx+0x72],0x797261
   14003b14e:	stos   BYTE PTR es:[rdi],al
   14003b14f:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14003b153:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14003b15c:	js     0x14003b1b5
   14003b15e:	add    BYTE PTR [rax],al
   14003b160:	jne    0x14003b165
   14003b162:	rex.WB jae 0x14003b1bb
   14003b165:	(bad)  
   14003b166:	ins    BYTE PTR es:[rdi],dx
   14003b167:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   14003b16f:	add    BYTE PTR gs:[edx+0x74654701],ch
   14003b177:	rex.B
   14003b178:	rex.XB push r8
   14003b17a:	add    BYTE PTR [rax],al
   14003b17c:	lea    eax,[rdx]
   14003b17e:	rex.RXB
   14003b17f:	gs je  0x14003b1d1
   14003b182:	rex.RB
   14003b183:	rex.WRB
   14003b184:	rex.XB push r8
   14003b186:	add    BYTE PTR [rax],al
   14003b188:	mov    ecx,0x74654701
   14003b18d:	rex.XB push r8
   14003b18f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003b191:	outs   dx,WORD PTR ds:[rsi]
   14003b193:	add    BYTE PTR [rdi],bh
   14003b195:	add    ecx,DWORD PTR [rax+0x65]
   14003b198:	(bad)  
   14003b199:	jo     0x14003b1ed
   14003b19b:	gs rex.B ins BYTE PTR es:[rdi],dx
   14003b19e:	ins    BYTE PTR es:[rdi],dx
   14003b19f:	outs   dx,DWORD PTR ds:[rsi]
   14003b1a0:	movsxd eax,DWORD PTR [rax]
   14003b1a2:	loop   0x14003b1a5
   14003b1a4:	rex.RXB
   14003b1a5:	gs je  0x14003b1eb
   14003b1a8:	outs   dx,DWORD PTR ds:[rsi]
   14003b1a9:	outs   dx,BYTE PTR ds:[rsi]
   14003b1aa:	jae    0x14003b21b
   14003b1ac:	ins    BYTE PTR es:[rdi],dx
   14003b1ad:	gs rex.XB push r8
   14003b1b0:	add    BYTE PTR [rax],al
   14003b1b2:	hlt    
   14003b1b3:	add    DWORD PTR [rdi+0x65],eax
   14003b1b6:	je     0x14003b1fb
   14003b1b8:	outs   dx,DWORD PTR ds:[rsi]
   14003b1b9:	outs   dx,BYTE PTR ds:[rsi]
   14003b1ba:	jae    0x14003b22b
   14003b1bc:	ins    BYTE PTR es:[rdi],dx
   14003b1bd:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14003b1c0:	fs add BYTE PTR gs:[rax],al
   14003b1c4:	or     al,0x5
   14003b1c6:	push   rbx
   14003b1c7:	gs je  0x14003b210
   14003b1ca:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   14003b1d2:	gs jb  0x14003b21a
   14003b1d5:	js     0x14003b1d7
   14003b1d7:	add    ch,bh
   14003b1d9:	add    ecx,DWORD PTR [rdi+0x75]
   14003b1dc:	je     0x14003b24e
   14003b1de:	jne    0x14003b254
   14003b1e0:	rex.R
   14003b1e1:	gs (bad) 
   14003b1e3:	jne    0x14003b24c
   14003b1e5:	push   rbx
   14003b1e6:	je     0x14003b25a
   14003b1e8:	imul   ebp,DWORD PTR [rsi+0x67],0xcc000057
   14003b1ef:	add    al,BYTE PTR [rdi+0x65]
   14003b1f2:	je     0x14003b247
   14003b1f4:	je     0x14003b268
   14003b1f6:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   14003b1fd:	push   rdi
   14003b1fe:	add    BYTE PTR [rax],al
   14003b200:	xor    BYTE PTR [rip+0x53746553],al        # 0x193781759
   14003b206:	je     0x14003b26c
   14003b208:	rex.W (bad) 
   14003b20a:	outs   dx,BYTE PTR ds:[rsi]
   14003b20b:	fs ins BYTE PTR es:[rdi],dx
   14003b20d:	add    BYTE PTR gs:[rax],al
   14003b210:	lock add eax,0x74697257
   14003b216:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14003b219:	outs   dx,BYTE PTR ds:[rsi]
   14003b21a:	jae    0x14003b28b
   14003b21c:	ins    BYTE PTR es:[rdi],dx
   14003b21d:	gs push rdi
   14003b21f:	add    BYTE PTR [rax+0x756c4601],bl
   14003b225:	jae    0x14003b28f
   14003b227:	imul   r13d,DWORD PTR [rbp+r12*2+0x42],0x65666675
   14003b230:	jb     0x14003b2a5
   14003b232:	add    BYTE PTR [rax],al
   14003b234:	ret    0x4300
   14003b237:	jb     0x14003b29e
   14003b239:	(bad)  
   14003b23a:	je     0x14003b2a1
   14003b23c:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x43007f00
   14003b245:	ins    BYTE PTR es:[rdi],dx
   14003b246:	outs   dx,DWORD PTR ds:[rsi]
   14003b247:	jae    0x14003b2ae
   14003b249:	rex.W (bad) 
   14003b24b:	outs   dx,BYTE PTR ds:[rsi]
   14003b24c:	fs ins BYTE PTR es:[rdi],dx
   14003b24e:	gs
	...

Disassembly of section .data:

000000014003c000 <.data>:
   14003c000:	push   rax
   14003c001:	mov    DWORD PTR [rdx],0x140
   14003c007:	add    BYTE PTR [rax+0x14002c7],ah
   14003c00d:	add    BYTE PTR [rax],al
   14003c00f:	add    BYTE PTR [rax],al
   14003c011:	enter  0x4002,0x1
   14003c015:	add    BYTE PTR [rax],al
   14003c017:	add    BYTE PTR [rax+0x14002c9],bh
   14003c01d:	add    BYTE PTR [rax],al
   14003c01f:	add    al,cl
   14003c021:	leave  
   14003c022:	add    al,BYTE PTR [rax+0x1]
   14003c025:	add    BYTE PTR [rax],al
   14003c027:	add    al,bl
   14003c029:	leave  
   14003c02a:	add    al,BYTE PTR [rax+0x1]
   14003c02d:	add    BYTE PTR [rax],al
   14003c02f:	add    BYTE PTR [rbp-0x68],dh
   14003c032:	add    BYTE PTR [rax],al
   14003c034:	jae    0x14003bfce
	...
   14003c03e:	add    BYTE PTR [rax],al
   14003c040:	add    al,BYTE PTR [rax]
   14003c042:	add    BYTE PTR [rax],al
   14003c044:	add    DWORD PTR [rax],eax
   14003c046:	add    BYTE PTR [rax],al
   14003c048:	add    al,BYTE PTR [rax]
   14003c04a:	add    BYTE PTR [rax],al
   14003c04c:	add    BYTE PTR [rax],al
   14003c04e:	add    BYTE PTR [rax],al
   14003c050:	add    DWORD PTR [rax],eax
   14003c052:	add    BYTE PTR [rax],al
   14003c054:	(bad)  
   14003c055:	add    BYTE PTR [rax],al
   14003c057:	add    BYTE PTR [rdx],al
   14003c059:	add    BYTE PTR [rax],al
   14003c05b:	add    BYTE PTR [rdx],al
   14003c05d:	add    BYTE PTR [rax],al
   14003c05f:	add    BYTE PTR [rbx],al
   14003c061:	add    BYTE PTR [rax],al
   14003c063:	add    BYTE PTR [rdx],al
   14003c065:	add    BYTE PTR [rax],al
   14003c067:	add    BYTE PTR [rax+rax*1],al
   14003c06a:	add    BYTE PTR [rax],al
   14003c06c:	sbb    BYTE PTR [rax],al
   14003c06e:	add    BYTE PTR [rax],al
   14003c070:	add    eax,0xd000000
   14003c075:	add    BYTE PTR [rax],al
   14003c077:	add    BYTE PTR [rsi],al
   14003c079:	add    BYTE PTR [rax],al
   14003c07b:	add    BYTE PTR [rcx],cl
   14003c07d:	add    BYTE PTR [rax],al
   14003c07f:	add    BYTE PTR [rdi],al
   14003c081:	add    BYTE PTR [rax],al
   14003c083:	add    BYTE PTR [rax+rax*1],cl
   14003c086:	add    BYTE PTR [rax],al
   14003c088:	or     BYTE PTR [rax],al
   14003c08a:	add    BYTE PTR [rax],al
   14003c08c:	or     al,0x0
   14003c08e:	add    BYTE PTR [rax],al
   14003c090:	or     DWORD PTR [rax],eax
   14003c092:	add    BYTE PTR [rax],al
   14003c094:	or     al,0x0
   14003c096:	add    BYTE PTR [rax],al
   14003c098:	or     al,BYTE PTR [rax]
   14003c09a:	add    BYTE PTR [rax],al
   14003c09c:	(bad)  
   14003c09d:	add    BYTE PTR [rax],al
   14003c09f:	add    BYTE PTR [rbx],cl
   14003c0a1:	add    BYTE PTR [rax],al
   14003c0a3:	add    BYTE PTR [rax],cl
   14003c0a5:	add    BYTE PTR [rax],al
   14003c0a7:	add    BYTE PTR [rax+rax*1],cl
   14003c0aa:	add    BYTE PTR [rax],al
   14003c0ac:	(bad)  
   14003c0ad:	add    BYTE PTR [rax],al
   14003c0af:	add    BYTE PTR [rip+0x16000000],cl        # 0x15603c0b5
   14003c0b5:	add    BYTE PTR [rax],al
   14003c0b7:	add    BYTE PTR [rdi],cl
   14003c0b9:	add    BYTE PTR [rax],al
   14003c0bb:	add    BYTE PTR [rdx],al
   14003c0bd:	add    BYTE PTR [rax],al
   14003c0bf:	add    BYTE PTR [rax],dl
   14003c0c1:	add    BYTE PTR [rax],al
   14003c0c3:	add    BYTE PTR [rip+0x11000000],cl        # 0x15103c0c9
   14003c0c9:	add    BYTE PTR [rax],al
   14003c0cb:	add    BYTE PTR [rdx],dl
   14003c0cd:	add    BYTE PTR [rax],al
   14003c0cf:	add    BYTE PTR [rdx],dl
   14003c0d1:	add    BYTE PTR [rax],al
   14003c0d3:	add    BYTE PTR [rdx],al
   14003c0d5:	add    BYTE PTR [rax],al
   14003c0d7:	add    BYTE PTR [rcx],ah
   14003c0d9:	add    BYTE PTR [rax],al
   14003c0db:	add    BYTE PTR [rip+0x35000000],cl        # 0x17503c0e1
   14003c0e1:	add    BYTE PTR [rax],al
   14003c0e3:	add    BYTE PTR [rdx],al
   14003c0e5:	add    BYTE PTR [rax],al
   14003c0e7:	add    BYTE PTR [rcx+0x0],al
   14003c0ea:	add    BYTE PTR [rax],al
   14003c0ec:	or     eax,0x43000000
   14003c0f1:	add    BYTE PTR [rax],al
   14003c0f3:	add    BYTE PTR [rdx],al
   14003c0f5:	add    BYTE PTR [rax],al
   14003c0f7:	add    BYTE PTR [rax+0x0],dl
   14003c0fa:	add    BYTE PTR [rax],al
   14003c0fc:	adc    DWORD PTR [rax],eax
   14003c0fe:	add    BYTE PTR [rax],al
   14003c100:	push   rdx
   14003c101:	add    BYTE PTR [rax],al
   14003c103:	add    BYTE PTR [rip+0x53000000],cl        # 0x19303c109
   14003c109:	add    BYTE PTR [rax],al
   14003c10b:	add    BYTE PTR [rip+0x57000000],cl        # 0x19703c111
   14003c111:	add    BYTE PTR [rax],al
   14003c113:	add    BYTE PTR [rsi],dl
   14003c115:	add    BYTE PTR [rax],al
   14003c117:	add    BYTE PTR [rcx+0x0],bl
   14003c11a:	add    BYTE PTR [rax],al
   14003c11c:	or     eax,DWORD PTR [rax]
   14003c11e:	add    BYTE PTR [rax],al
   14003c120:	ins    BYTE PTR es:[rdi],dx
   14003c121:	add    BYTE PTR [rax],al
   14003c123:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad03c129
   14003c129:	add    BYTE PTR [rax],al
   14003c12b:	add    BYTE PTR [rax],ah
   14003c12d:	add    BYTE PTR [rax],al
   14003c12f:	add    BYTE PTR [rax+0x0],dh
   14003c132:	add    BYTE PTR [rax],al
   14003c134:	sbb    al,0x0
   14003c136:	add    BYTE PTR [rax],al
   14003c138:	jb     0x14003c13a
   14003c13a:	add    BYTE PTR [rax],al
   14003c13c:	or     DWORD PTR [rax],eax
   14003c13e:	add    BYTE PTR [rax],al
   14003c140:	(bad)  
   14003c141:	add    BYTE PTR [rax],al
   14003c143:	add    BYTE PTR [rsi],dl
   14003c145:	add    BYTE PTR [rax],al
   14003c147:	add    BYTE PTR [rax+0xa000000],al
   14003c14d:	add    BYTE PTR [rax],al
   14003c14f:	add    BYTE PTR [rcx+0xa000000],al
   14003c155:	add    BYTE PTR [rax],al
   14003c157:	add    BYTE PTR [rdx+0x9000000],al
   14003c15d:	add    BYTE PTR [rax],al
   14003c15f:	add    BYTE PTR [rbx+0x16000000],al
   14003c165:	add    BYTE PTR [rax],al
   14003c167:	add    BYTE PTR [rax+rax*1+0xd0000],al
   14003c16e:	add    BYTE PTR [rax],al
   14003c170:	xchg   ecx,eax
   14003c171:	add    BYTE PTR [rax],al
   14003c173:	add    BYTE PTR [rcx],ch
   14003c175:	add    BYTE PTR [rax],al
   14003c177:	add    BYTE PTR [rsi+0xd000000],bl
   14003c17d:	add    BYTE PTR [rax],al
   14003c17f:	add    BYTE PTR [rcx+0x2000000],ah
   14003c185:	add    BYTE PTR [rax],al
   14003c187:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   14003c18e:	add    BYTE PTR [rax],al
   14003c190:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c191:	add    BYTE PTR [rax],al
   14003c193:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf703c199
   14003c199:	add    BYTE PTR [rax],al
   14003c19b:	add    BYTE PTR [rcx],dl
   14003c19d:	add    BYTE PTR [rax],al
   14003c19f:	add    dh,cl
   14003c1a1:	add    BYTE PTR [rax],al
   14003c1a3:	add    BYTE PTR [rdx],al
   14003c1a5:	add    BYTE PTR [rax],al
   14003c1a7:	add    bh,dl
   14003c1a9:	add    BYTE PTR [rax],al
   14003c1ab:	add    BYTE PTR [rbx],cl
   14003c1ad:	add    BYTE PTR [rax],al
   14003c1af:	add    BYTE PTR [rax],bl
   14003c1b1:	(bad)  
   14003c1b2:	add    BYTE PTR [rax],al
   14003c1b4:	or     al,0x0
   14003c1b6:	add    BYTE PTR [rax],al
   14003c1b8:	or     al,0x0
   14003c1ba:	add    BYTE PTR [rax],al
   14003c1bc:	or     BYTE PTR [rax],al
   14003c1be:	add    BYTE PTR [rax],al
   14003c1c0:	add    DWORD PTR [rax],eax
   14003c1c2:	add    BYTE PTR [rax],al
   14003c1c4:	(bad)  
   14003c1c5:	(bad)  
   14003c1c6:	(bad)  
   14003c1c7:	inc    DWORD PTR [rax]
   14003c1c9:	add    BYTE PTR [rax],al
   14003c1cb:	add    BYTE PTR [rax],al
   14003c1cd:	add    BYTE PTR [rax],al
   14003c1cf:	add    BYTE PTR [rdx],dh
   14003c1d1:	movabs ds:0x5dcd00002b992ddf,al
   14003c1da:	and    dl,dl
   14003c1dc:	data16 (bad) 
   14003c1de:	(bad)  
   14003c1df:	jmp    FWORD PTR [rax+rax*8+0x14001]
   14003c1e6:	add    BYTE PTR [rax],al
   14003c1e8:	lods   al,BYTE PTR ds:[rsi]
   14003c1e9:	rol    BYTE PTR [rcx],0x40
   14003c1ec:	add    DWORD PTR [rax],eax
   14003c1ee:	add    BYTE PTR [rax],al
   14003c1f0:	lods   al,BYTE PTR ds:[rsi]
   14003c1f1:	rol    BYTE PTR [rcx],0x40
   14003c1f4:	add    DWORD PTR [rax],eax
   14003c1f6:	add    BYTE PTR [rax],al
   14003c1f8:	lods   al,BYTE PTR ds:[rsi]
   14003c1f9:	rol    BYTE PTR [rcx],0x40
   14003c1fc:	add    DWORD PTR [rax],eax
   14003c1fe:	add    BYTE PTR [rax],al
   14003c200:	lods   al,BYTE PTR ds:[rsi]
   14003c201:	rol    BYTE PTR [rcx],0x40
   14003c204:	add    DWORD PTR [rax],eax
   14003c206:	add    BYTE PTR [rax],al
   14003c208:	lods   al,BYTE PTR ds:[rsi]
   14003c209:	rol    BYTE PTR [rcx],0x40
   14003c20c:	add    DWORD PTR [rax],eax
   14003c20e:	add    BYTE PTR [rax],al
   14003c210:	lods   al,BYTE PTR ds:[rsi]
   14003c211:	rol    BYTE PTR [rcx],0x40
   14003c214:	add    DWORD PTR [rax],eax
   14003c216:	add    BYTE PTR [rax],al
   14003c218:	lods   al,BYTE PTR ds:[rsi]
   14003c219:	rol    BYTE PTR [rcx],0x40
   14003c21c:	add    DWORD PTR [rax],eax
   14003c21e:	add    BYTE PTR [rax],al
   14003c220:	lods   al,BYTE PTR ds:[rsi]
   14003c221:	rol    BYTE PTR [rcx],0x40
   14003c224:	add    DWORD PTR [rax],eax
   14003c226:	add    BYTE PTR [rax],al
   14003c228:	lods   al,BYTE PTR ds:[rsi]
   14003c229:	rol    BYTE PTR [rcx],0x40
   14003c22c:	add    DWORD PTR [rax],eax
   14003c22e:	add    BYTE PTR [rax],al
   14003c230:	(bad)  
   14003c231:	(bad)  
   14003c232:	(bad)  
   14003c233:	(bad)  
   14003c234:	(bad)  
   14003c235:	(bad)  
   14003c236:	(bad)  
   14003c237:	inc    DWORD PTR [rax+0xa]
	...
   14003c285:	add    BYTE PTR [rax],al
   14003c287:	add    bh,bh
   14003c289:	(bad)  
   14003c28a:	(bad)  
   14003c28b:	inc    DWORD PTR [rax]
	...
   14003c295:	add    BYTE PTR [rax],al
   14003c297:	add    BYTE PTR [rcx],al
	...
   14003c2a5:	add    BYTE PTR [rax],al
   14003c2a7:	add    BYTE PTR [rcx],al
	...
   14003c2c5:	add    BYTE PTR [rax],al
   14003c2c7:	add    BYTE PTR [rcx],al
	...
   14003c2d5:	add    BYTE PTR [rax],al
   14003c2d7:	add    BYTE PTR [rcx],al
	...
   14003c2f5:	add    BYTE PTR [rax],al
   14003c2f7:	add    BYTE PTR [rcx],al
	...
   14003c305:	add    BYTE PTR [rax],al
   14003c307:	add    BYTE PTR [rcx],al
	...
   14003c315:	add    BYTE PTR [rax],al
   14003c317:	add    BYTE PTR [rcx],al
	...
   14003c335:	add    BYTE PTR [rax],al
   14003c337:	add    BYTE PTR [rcx],al
	...
   14003c355:	add    BYTE PTR [rax],al
   14003c357:	add    BYTE PTR [rcx],al
	...
   14003c365:	add    BYTE PTR [rax],al
   14003c367:	add    BYTE PTR [rcx],al
	...
   14003c375:	add    BYTE PTR [rax],al
   14003c377:	add    BYTE PTR [rcx],al
	...
   14003c395:	add    BYTE PTR [rax],al
   14003c397:	add    BYTE PTR [rcx],al
	...
   14003c3a5:	add    BYTE PTR [rax],al
   14003c3a7:	add    BYTE PTR [rcx],al
	...
   14003c3b5:	add    BYTE PTR [rax],al
   14003c3b7:	add    BYTE PTR [rcx],al
	...
   14003c511:	add    BYTE PTR [rax],dl
   14003c513:	adc    BYTE PTR [rax],dl
   14003c515:	adc    BYTE PTR [rax],dl
   14003c517:	adc    BYTE PTR [rax],dl
   14003c519:	adc    BYTE PTR [rax],dl
   14003c51b:	adc    BYTE PTR [rax],dl
   14003c51d:	adc    BYTE PTR [rax],dl
   14003c51f:	adc    BYTE PTR [rax],dl
   14003c521:	adc    BYTE PTR [rax],dl
   14003c523:	adc    BYTE PTR [rax],dl
   14003c525:	adc    BYTE PTR [rax],dl
   14003c527:	adc    BYTE PTR [rax],dl
   14003c529:	adc    BYTE PTR [rax],dl
   14003c52b:	adc    BYTE PTR [rax],al
   14003c52d:	add    BYTE PTR [rax],al
   14003c52f:	add    BYTE PTR [rax],al
   14003c531:	add    BYTE PTR [rax],ah
   14003c533:	and    BYTE PTR [rax],ah
   14003c535:	and    BYTE PTR [rax],ah
   14003c537:	and    BYTE PTR [rax],ah
   14003c539:	and    BYTE PTR [rax],ah
   14003c53b:	and    BYTE PTR [rax],ah
   14003c53d:	and    BYTE PTR [rax],ah
   14003c53f:	and    BYTE PTR [rax],ah
   14003c541:	and    BYTE PTR [rax],ah
   14003c543:	and    BYTE PTR [rax],ah
   14003c545:	and    BYTE PTR [rax],ah
   14003c547:	and    BYTE PTR [rax],ah
   14003c549:	and    BYTE PTR [rax],ah
   14003c54b:	and    BYTE PTR [rax],al
	...
   14003c621:	(bad)  
   14003c622:	(bad)
   14003c627:	addr32 push 0x6c6b6a69
   14003c62d:	ins    DWORD PTR es:[rdi],dx
   14003c62e:	outs   dx,BYTE PTR ds:[rsi]
   14003c62f:	outs   dx,DWORD PTR ds:[rsi]
   14003c630:	jo     0x14003c6a3
   14003c632:	jb     0x14003c6a7
   14003c634:	je     0x14003c6ab
   14003c636:	jbe    0x14003c6af
   14003c638:	js     0x14003c6b3
   14003c63a:	jp     0x14003c63c
   14003c63c:	add    BYTE PTR [rax],al
   14003c63e:	add    BYTE PTR [rax],al
   14003c640:	add    BYTE PTR [rcx+0x42],al
   14003c643:	rex.XB
   14003c644:	rex.R
   14003c645:	rex.RB
   14003c646:	rex.RX
   14003c647:	rex.RXB
   14003c648:	rex.W
   14003c649:	rex.WB
   14003c64a:	rex.WX
   14003c64b:	rex.WXB
   14003c64c:	rex.WR
   14003c64d:	rex.WRB
   14003c64e:	rex.WRX
   14003c64f:	rex.WRXB push r8
   14003c651:	push   rcx
   14003c652:	push   rdx
   14003c653:	push   rbx
   14003c654:	push   rsp
   14003c655:	push   rbp
   14003c656:	push   rsi
   14003c657:	push   rdi
   14003c658:	pop    rax
   14003c659:	pop    rcx
   14003c65a:	pop    rdx
	...
   14003c737:	add    BYTE PTR [rax],al
   14003c739:	add    BYTE PTR [rax],dl
   14003c73b:	adc    BYTE PTR [rax],dl
   14003c73d:	adc    BYTE PTR [rax],dl
   14003c73f:	adc    BYTE PTR [rax],dl
   14003c741:	adc    BYTE PTR [rax],dl
   14003c743:	adc    BYTE PTR [rax],dl
   14003c745:	adc    BYTE PTR [rax],dl
   14003c747:	adc    BYTE PTR [rax],dl
   14003c749:	adc    BYTE PTR [rax],dl
   14003c74b:	adc    BYTE PTR [rax],dl
   14003c74d:	adc    BYTE PTR [rax],dl
   14003c74f:	adc    BYTE PTR [rax],dl
   14003c751:	adc    BYTE PTR [rax],dl
   14003c753:	adc    BYTE PTR [rax],al
   14003c755:	add    BYTE PTR [rax],al
   14003c757:	add    BYTE PTR [rax],al
   14003c759:	add    BYTE PTR [rax],ah
   14003c75b:	and    BYTE PTR [rax],ah
   14003c75d:	and    BYTE PTR [rax],ah
   14003c75f:	and    BYTE PTR [rax],ah
   14003c761:	and    BYTE PTR [rax],ah
   14003c763:	and    BYTE PTR [rax],ah
   14003c765:	and    BYTE PTR [rax],ah
   14003c767:	and    BYTE PTR [rax],ah
   14003c769:	and    BYTE PTR [rax],ah
   14003c76b:	and    BYTE PTR [rax],ah
   14003c76d:	and    BYTE PTR [rax],ah
   14003c76f:	and    BYTE PTR [rax],ah
   14003c771:	and    BYTE PTR [rax],ah
   14003c773:	and    BYTE PTR [rax],al
	...
   14003c839:	add    BYTE PTR [rcx+0x62],ah
   14003c83c:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   14003c840:	addr32 push 0x6c6b6a69
   14003c846:	ins    DWORD PTR es:[rdi],dx
   14003c847:	outs   dx,BYTE PTR ds:[rsi]
   14003c848:	outs   dx,DWORD PTR ds:[rsi]
   14003c849:	jo     0x14003c8bc
   14003c84b:	jb     0x14003c8c0
   14003c84d:	je     0x14003c8c4
   14003c84f:	jbe    0x14003c8c8
   14003c851:	js     0x14003c8cc
   14003c853:	jp     0x14003c855
   14003c855:	add    BYTE PTR [rax],al
   14003c857:	add    BYTE PTR [rax],al
   14003c859:	add    BYTE PTR [rcx+0x42],al
   14003c85c:	rex.XB
   14003c85d:	rex.R
   14003c85e:	rex.RB
   14003c85f:	rex.RX
   14003c860:	rex.RXB
   14003c861:	rex.W
   14003c862:	rex.WB
   14003c863:	rex.WX
   14003c864:	rex.WXB
   14003c865:	rex.WR
   14003c866:	rex.WRB
   14003c867:	rex.WRX
   14003c868:	rex.WRXB push r8
   14003c86a:	push   rcx
   14003c86b:	push   rdx
   14003c86c:	push   rbx
   14003c86d:	push   rsp
   14003c86e:	push   rbp
   14003c86f:	push   rsi
   14003c870:	push   rdi
   14003c871:	pop    rax
   14003c872:	pop    rcx
   14003c873:	pop    rdx
	...
   14003c908:	add    DWORD PTR [rdx],eax
   14003c90a:	add    al,0x8
   14003c90c:	add    BYTE PTR [rax],al
   14003c90e:	add    BYTE PTR [rax],al
   14003c910:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003c911:	add    eax,DWORD PTR [rax]
   14003c913:	add    BYTE PTR [rax-0x7e],ah
   14003c916:	jns    0x14003c89a
   14003c918:	and    DWORD PTR [rax],eax
   14003c91a:	add    BYTE PTR [rax],al
   14003c91c:	add    BYTE PTR [rax],al
   14003c91e:	add    BYTE PTR [rax],al
   14003c920:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003c921:	fild   WORD PTR [rax]
   14003c923:	add    BYTE PTR [rax],al
   14003c925:	add    BYTE PTR [rax],al
   14003c927:	add    BYTE PTR [rcx+0xa5],ah
   14003c92d:	add    BYTE PTR [rax],al
   14003c92f:	add    BYTE PTR [rcx+0xfce09f],al
   14003c935:	add    BYTE PTR [rax],al
   14003c937:	add    BYTE PTR [rax+0x7e],al
   14003c93a:	cmp    ah,0x0
   14003c93d:	add    BYTE PTR [rax],al
   14003c93f:	add    BYTE PTR [rax-0x3efffffd],ch
   14003c945:	movabs ds:0x20a3da,eax
	...
   14003c95e:	add    BYTE PTR [rax],al
   14003c960:	cmp    esi,0x0
   14003c966:	add    BYTE PTR [rax],al
   14003c968:	rex inc BYTE PTR [rax]
   14003c96b:	add    BYTE PTR [rax],al
   14003c96d:	add    BYTE PTR [rax],al
   14003c96f:	add    BYTE PTR [rbp-0x3efffffd],dh
   14003c975:	movabs ds:0x20a3da,eax
	...
   14003c98e:	add    BYTE PTR [rax],al
   14003c990:	cmp    esi,0x0
   14003c996:	add    BYTE PTR [rax],al
   14003c998:	inc    BYTE PTR [r8]
   14003c99b:	add    BYTE PTR [rax],al
   14003c99d:	add    BYTE PTR [rax],al
   14003c99f:	add    BYTE PTR [rsi-0x30fffffd],dh
   14003c9a5:	movabs ds:0xa2e8a2e5001aa2e4,al
   14003c9ae:	pop    rbx
	...
   14003c9bf:	add    BYTE PTR [rcx+0xfe],al
   14003c9c5:	add    BYTE PTR [rax],al
   14003c9c7:	add    BYTE PTR [rax+0x7e],al
   14003c9ca:	movabs eax,ds:0x55100000000fe
   14003c9d3:	add    BYTE PTR [rcx-0x26],dl
   14003c9d6:	pop    rsi
   14003c9d7:	fisub  DWORD PTR [rax]
   14003c9d9:	add    BYTE PTR [rdi-0x26],bl
   14003c9dc:	push   0xffffffffffffffda
   14003c9de:	xor    al,BYTE PTR [rax]
	...
   14003c9f0:	adc    ebx,0xf9e0ded8
   14003c9f6:	add    BYTE PTR [rax],al
   14003c9f8:	xor    DWORD PTR [rsi-0x7f],edi
   14003c9fb:	inc    BYTE PTR [rax]
   14003c9fd:	add    BYTE PTR [rax],al
   14003c9ff:	add    al,ah
   14003ca01:	mov    BYTE PTR [rbx],0x40
   14003ca04:	add    DWORD PTR [rax],eax
	...
   14003ca0e:	add    BYTE PTR [rax],al
   14003ca10:	shr    bh,0x3
   14003ca13:	rex add DWORD PTR [rax],eax
	...
   14003ca1e:	add    BYTE PTR [rax],al
   14003ca20:	shr    bh,0x3
   14003ca23:	rex add DWORD PTR [rax],eax
   14003ca26:	add    BYTE PTR [rax],al
   14003ca28:	add    DWORD PTR [rcx],eax
	...
   14003ca32:	add    BYTE PTR [rax],al
   14003ca34:	add    BYTE PTR [rax],dl
	...
   14003ca56:	add    BYTE PTR [rax],al
   14003ca58:	add    al,BYTE PTR [rax]
   14003ca5a:	add    BYTE PTR [rax],al
   14003ca5c:	add    DWORD PTR [rax],eax
	...
   14003ca86:	add    BYTE PTR [rax],al
   14003ca88:	add    al,BYTE PTR [rax]
   14003ca8a:	add    BYTE PTR [rax],al
   14003ca8c:	add    al,BYTE PTR [rax]
	...
   14003cdce:	add    BYTE PTR [rax],al
   14003cdd0:	add    DWORD PTR [rax],eax
   14003cdd2:	add    BYTE PTR [rax],al
   14003cdd4:	rex.XB add BYTE PTR [r8],al
	...
   14003cddf:	add    BYTE PTR [rax],ch
   14003cde1:	add    eax,DWORD PTR cs:[rax+0x1]
   14003cde5:	add    BYTE PTR [rax],al
   14003cde7:	add    BYTE PTR [rsi+rbp*1],ch
   14003cdea:	add    eax,DWORD PTR [rax+0x1]
   14003cded:	add    BYTE PTR [rax],al
   14003cdef:	add    BYTE PTR [rax],dh
   14003cdf1:	add    eax,DWORD PTR cs:[rax+0x1]
   14003cdf5:	add    BYTE PTR [rax],al
   14003cdf7:	add    BYTE PTR [rsi+rbp*1],dh
   14003cdfa:	add    eax,DWORD PTR [rax+0x1]
   14003cdfd:	add    BYTE PTR [rax],al
   14003cdff:	add    BYTE PTR [rax],bh
   14003ce01:	add    eax,DWORD PTR cs:[rax+0x1]
   14003ce05:	add    BYTE PTR [rax],al
   14003ce07:	add    BYTE PTR [rsi+rbp*1],bh
   14003ce0a:	add    eax,DWORD PTR [rax+0x1]
   14003ce0d:	add    BYTE PTR [rax],al
   14003ce0f:	add    BYTE PTR [rax+0x2e],al
   14003ce12:	add    eax,DWORD PTR [rax+0x1]
   14003ce15:	add    BYTE PTR [rax],al
   14003ce17:	add    BYTE PTR [rsi+rbp*1+0x3],al
   14003ce1b:	rex add DWORD PTR [rax],eax
   14003ce1e:	add    BYTE PTR [rax],al
   14003ce20:	rex.WR
   14003ce21:	add    eax,DWORD PTR cs:[rax+0x1]
   14003ce25:	add    BYTE PTR [rax],al
   14003ce27:	add    BYTE PTR [rax+0x2e],bl
   14003ce2a:	add    eax,DWORD PTR [rax+0x1]
   14003ce2d:	add    BYTE PTR [rax],al
   14003ce2f:	add    BYTE PTR [rax+0x2e],ah
   14003ce32:	add    eax,DWORD PTR [rax+0x1]
   14003ce35:	add    BYTE PTR [rax],al
   14003ce37:	add    BYTE PTR [rax+0x2e],dh
   14003ce3a:	add    eax,DWORD PTR [rax+0x1]
   14003ce3d:	add    BYTE PTR [rax],al
   14003ce3f:	add    BYTE PTR [rsi+rbp*1+0x3],bh
   14003ce43:	rex add DWORD PTR [rax],eax
   14003ce46:	add    BYTE PTR [rax],al
   14003ce48:	mov    BYTE PTR [rsi],ch
   14003ce4a:	add    eax,DWORD PTR [rax+0x1]
   14003ce4d:	add    BYTE PTR [rax],al
   14003ce4f:	add    BYTE PTR [rsi+rbp*1+0x14003],dl
   14003ce56:	add    BYTE PTR [rax],al
   14003ce58:	cwde   
   14003ce59:	add    eax,DWORD PTR cs:[rax+0x1]
   14003ce5d:	add    BYTE PTR [rax],al
   14003ce5f:	add    BYTE PTR [rsi+rbp*1+0x14003],bl
   14003ce66:	add    BYTE PTR [rax],al
   14003ce68:	movabs al,ds:0xa40000000140032e
   14003ce71:	add    eax,DWORD PTR cs:[rax+0x1]
   14003ce75:	add    BYTE PTR [rax],al
   14003ce77:	add    BYTE PTR [rax+0x140032e],ch
   14003ce7d:	add    BYTE PTR [rax],al
   14003ce7f:	add    BYTE PTR [rsi+rbp*1+0x14003],ch
   14003ce86:	add    BYTE PTR [rax],al
   14003ce88:	mov    al,0x2e
   14003ce8a:	add    eax,DWORD PTR [rax+0x1]
   14003ce8d:	add    BYTE PTR [rax],al
   14003ce8f:	add    BYTE PTR [rsi+rbp*1+0x14003],dh
   14003ce96:	add    BYTE PTR [rax],al
   14003ce98:	mov    eax,0x140032e
   14003ce9d:	add    BYTE PTR [rax],al
   14003ce9f:	add    BYTE PTR [rsi+rbp*1+0x14003],bh
   14003cea6:	add    BYTE PTR [rax],al
   14003cea8:	shr    BYTE PTR [rsi],0x3
   14003ceab:	rex add DWORD PTR [rax],eax
   14003ceae:	add    BYTE PTR [rax],al
   14003ceb0:	enter  0x32e,0x40
   14003ceb4:	add    DWORD PTR [rax],eax
   14003ceb6:	add    BYTE PTR [rax],al
   14003ceb8:	shr    BYTE PTR [rsi],1
   14003ceba:	add    eax,DWORD PTR [rax+0x1]
   14003cebd:	add    BYTE PTR [rax],al
   14003cebf:	add    ah,bl
   14003cec1:	add    eax,DWORD PTR cs:[rax+0x1]
   14003cec5:	add    BYTE PTR [rax],al
   14003cec7:	add    ah,ah
   14003cec9:	add    eax,DWORD PTR cs:[rax+0x1]
   14003cecd:	add    BYTE PTR [rax],al
   14003cecf:	add    BYTE PTR [rsi+rbp*1+0x14003],ah
   14003ced6:	add    BYTE PTR [rax],al
   14003ced8:	in     al,dx
   14003ced9:	add    eax,DWORD PTR cs:[rax+0x1]
   14003cedd:	add    BYTE PTR [rax],al
   14003cedf:	add    ah,dh
   14003cee1:	add    eax,DWORD PTR cs:[rax+0x1]
   14003cee5:	add    BYTE PTR [rax],al
   14003cee7:	add    ah,bh
   14003cee9:	add    eax,DWORD PTR cs:[rax+0x1]
   14003ceed:	add    BYTE PTR [rax],al
   14003ceef:	add    BYTE PTR [rax],cl
   14003cef1:	(bad)  
   14003cef2:	add    eax,DWORD PTR [rax+0x1]
   14003cef5:	add    BYTE PTR [rax],al
   14003cef7:	add    BYTE PTR [rax],bl
   14003cef9:	(bad)  
   14003cefa:	add    eax,DWORD PTR [rax+0x1]
   14003cefd:	add    BYTE PTR [rax],al
   14003ceff:	add    BYTE PTR [rax],ah
   14003cf01:	(bad)  
   14003cf02:	add    eax,DWORD PTR [rax+0x1]
   14003cf05:	add    BYTE PTR [rax],al
   14003cf07:	add    BYTE PTR [rax],dh
   14003cf09:	(bad)  
   14003cf0a:	add    eax,DWORD PTR [rax+0x1]
   14003cf0d:	add    BYTE PTR [rax],al
   14003cf0f:	add    BYTE PTR [rdi+rbp*1],bh
   14003cf12:	add    eax,DWORD PTR [rax+0x1]
   14003cf15:	add    BYTE PTR [rax],al
   14003cf17:	add    BYTE PTR [rax+0x2f],al
   14003cf1a:	add    eax,DWORD PTR [rax+0x1]
   14003cf1d:	add    BYTE PTR [rax],al
   14003cf1f:	add    BYTE PTR [rax+0x2f],cl
   14003cf22:	add    eax,DWORD PTR [rax+0x1]
   14003cf25:	add    BYTE PTR [rax],al
   14003cf27:	add    BYTE PTR [rax+0x2f],bl
   14003cf2a:	add    eax,DWORD PTR [rax+0x1]
   14003cf2d:	add    BYTE PTR [rax],al
   14003cf2f:	add    BYTE PTR [rax+0x2f],dh
   14003cf32:	add    eax,DWORD PTR [rax+0x1]
   14003cf35:	add    BYTE PTR [rax],al
   14003cf37:	add    BYTE PTR [rcx],al
   14003cf39:	add    BYTE PTR [rax],al
   14003cf3b:	add    BYTE PTR [rax],al
   14003cf3d:	add    BYTE PTR [rax],al
   14003cf3f:	add    BYTE PTR [rax+0x140032f],al
   14003cf45:	add    BYTE PTR [rax],al
   14003cf47:	add    BYTE PTR [rax+0x140032f],cl
   14003cf4d:	add    BYTE PTR [rax],al
   14003cf4f:	add    BYTE PTR [rax+0x140032f],dl
   14003cf55:	add    BYTE PTR [rax],al
   14003cf57:	add    BYTE PTR [rax+0x140032f],bl
   14003cf5d:	add    BYTE PTR [rax],al
   14003cf5f:	add    BYTE PTR [rax+0x140032f],ah
   14003cf65:	add    BYTE PTR [rax],al
   14003cf67:	add    BYTE PTR [rax+0x140032f],ch
   14003cf6d:	add    BYTE PTR [rax],al
   14003cf6f:	add    BYTE PTR [rax+0x140032f],dh
   14003cf75:	add    BYTE PTR [rax],al
   14003cf77:	add    BYTE PTR [rax+0x140032f],bh
   14003cf7d:	add    BYTE PTR [rax],al
   14003cf7f:	add    al,cl
   14003cf81:	(bad)  
   14003cf82:	add    eax,DWORD PTR [rax+0x1]
   14003cf85:	add    BYTE PTR [rax],al
   14003cf87:	add    al,bl
   14003cf89:	(bad)  
   14003cf8a:	add    eax,DWORD PTR [rax+0x1]
   14003cf8d:	add    BYTE PTR [rax],al
   14003cf8f:	add    al,ch
   14003cf91:	(bad)  
   14003cf92:	add    eax,DWORD PTR [rax+0x1]
   14003cf95:	add    BYTE PTR [rax],al
   14003cf97:	add    BYTE PTR [rax],al
   14003cf99:	xor    BYTE PTR [rbx],al
   14003cf9b:	rex add DWORD PTR [rax],eax
   14003cf9e:	add    BYTE PTR [rax],al
   14003cfa0:	sbb    BYTE PTR [rax],dh
   14003cfa2:	add    eax,DWORD PTR [rax+0x1]
   14003cfa5:	add    BYTE PTR [rax],al
   14003cfa7:	add    BYTE PTR [rax],ch
   14003cfa9:	xor    BYTE PTR [rbx],al
   14003cfab:	rex add DWORD PTR [rax],eax
   14003cfae:	add    BYTE PTR [rax],al
   14003cfb0:	xor    BYTE PTR [rbx],al
   14003cfb3:	rex add DWORD PTR [rax],eax
   14003cfb6:	add    BYTE PTR [rax],al
   14003cfb8:	rex.W xor BYTE PTR [rbx],al
   14003cfbb:	rex add DWORD PTR [rax],eax
   14003cfbe:	add    BYTE PTR [rax],al
   14003cfc0:	push   rax
   14003cfc1:	xor    BYTE PTR [rbx],al
   14003cfc3:	rex add DWORD PTR [rax],eax
   14003cfc6:	add    BYTE PTR [rax],al
   14003cfc8:	pop    rax
   14003cfc9:	xor    BYTE PTR [rbx],al
   14003cfcb:	rex add DWORD PTR [rax],eax
   14003cfce:	add    BYTE PTR [rax],al
   14003cfd0:	(bad)  
   14003cfd1:	xor    BYTE PTR [rbx],al
   14003cfd3:	rex add DWORD PTR [rax],eax
   14003cfd6:	add    BYTE PTR [rax],al
   14003cfd8:	push   0x1400330
   14003cfdd:	add    BYTE PTR [rax],al
   14003cfdf:	add    BYTE PTR [rax+0x30],dh
   14003cfe2:	add    eax,DWORD PTR [rax+0x1]
   14003cfe5:	add    BYTE PTR [rax],al
   14003cfe7:	add    BYTE PTR [rax+0x30],bh
   14003cfea:	add    eax,DWORD PTR [rax+0x1]
   14003cfed:	add    BYTE PTR [rax],al
   14003cfef:	add    BYTE PTR [rax+0x1400330],al
   14003cff5:	add    BYTE PTR [rax],al
   14003cff7:	add    BYTE PTR [rax+0x1400330],cl
   14003cffd:	add    BYTE PTR [rax],al
   14003cfff:	add    BYTE PTR [rax+0x1400330],dl
   14003d005:	add    BYTE PTR [rax],al
   14003d007:	add    BYTE PTR [rax+0x1400330],bl
   14003d00d:	add    BYTE PTR [rax],al
   14003d00f:	add    BYTE PTR [rax+0x1400330],ah
   14003d015:	add    BYTE PTR [rax],al
   14003d017:	add    BYTE PTR [rax+0x1400330],dh
   14003d01d:	add    BYTE PTR [rax],al
   14003d01f:	add    al,cl
   14003d021:	xor    BYTE PTR [rbx],al
   14003d023:	rex add DWORD PTR [rax],eax
   14003d026:	add    BYTE PTR [rax],al
   14003d028:	fdiv   DWORD PTR [rax]
   14003d02a:	add    eax,DWORD PTR [rax+0x1]
   14003d02d:	add    BYTE PTR [rax],al
   14003d02f:	add    BYTE PTR [rax+0x30],ah
   14003d032:	add    eax,DWORD PTR [rax+0x1]
   14003d035:	add    BYTE PTR [rax],al
   14003d037:	add    al,ch
   14003d039:	xor    BYTE PTR [rbx],al
   14003d03b:	rex add DWORD PTR [rax],eax
   14003d03e:	add    BYTE PTR [rax],al
   14003d040:	clc    
   14003d041:	xor    BYTE PTR [rbx],al
   14003d043:	rex add DWORD PTR [rax],eax
   14003d046:	add    BYTE PTR [rax],al
   14003d048:	or     BYTE PTR [rcx],dh
   14003d04a:	add    eax,DWORD PTR [rax+0x1]
   14003d04d:	add    BYTE PTR [rax],al
   14003d04f:	add    BYTE PTR [rax],bl
   14003d051:	xor    DWORD PTR [rbx],eax
   14003d053:	rex add DWORD PTR [rax],eax
   14003d056:	add    BYTE PTR [rax],al
   14003d058:	xor    BYTE PTR [rcx],dh
   14003d05a:	add    eax,DWORD PTR [rax+0x1]
   14003d05d:	add    BYTE PTR [rax],al
   14003d05f:	add    BYTE PTR [rax+0x31],al
   14003d062:	add    eax,DWORD PTR [rax+0x1]
   14003d065:	add    BYTE PTR [rax],al
   14003d067:	add    BYTE PTR [rax+0x31],bl
   14003d06a:	add    eax,DWORD PTR [rax+0x1]
   14003d06d:	add    BYTE PTR [rax],al
   14003d06f:	add    BYTE PTR [rcx+rsi*1+0x3],ch
   14003d073:	rex add DWORD PTR [rax],eax
   14003d076:	add    BYTE PTR [rax],al
   14003d078:	je     0x14003d0ab
   14003d07a:	add    eax,DWORD PTR [rax+0x1]
   14003d07d:	add    BYTE PTR [rax],al
   14003d07f:	add    BYTE PTR [rax+0x1400331],al
   14003d085:	add    BYTE PTR [rax],al
   14003d087:	add    BYTE PTR [rax+0x1400331],bl
   14003d08d:	add    BYTE PTR [rax],al
   14003d08f:	add    al,al
   14003d091:	xor    DWORD PTR [rbx],eax
   14003d093:	rex add DWORD PTR [rax],eax
   14003d096:	add    BYTE PTR [rax],al
   14003d098:	test   al,0x19
   14003d09a:	add    eax,DWORD PTR [rax+0x1]
   14003d09d:	add    BYTE PTR [rax],al
   14003d09f:	add    BYTE PTR [rax+0x14003d0],dh
	...
   14003d0ad:	add    BYTE PTR [rax],al
   14003d0af:	add    BYTE PTR [rcx],al
	...
   14003d0e5:	add    BYTE PTR [rax],al
   14003d0e7:	add    ah,dl
   14003d0e9:	int    0x3
   14003d0eb:	rex add DWORD PTR [rax],eax
	...
   14003d106:	add    BYTE PTR [rax],al
   14003d108:	(bad)  
   14003d109:	int    0x3
   14003d10b:	rex add DWORD PTR [rax],eax
	...
   14003d126:	add    BYTE PTR [rax],al
   14003d128:	(bad)  
   14003d129:	int    0x3
   14003d12b:	rex add DWORD PTR [rax],eax
	...
   14003d146:	add    BYTE PTR [rax],al
   14003d148:	(bad)  
   14003d149:	int    0x3
   14003d14b:	rex add DWORD PTR [rax],eax
	...
   14003d166:	add    BYTE PTR [rax],al
   14003d168:	(bad)  
   14003d169:	int    0x3
   14003d16b:	rex add DWORD PTR [rax],eax
	...
   14003d17e:	add    BYTE PTR [rax],al
   14003d180:	add    DWORD PTR [rax],eax
   14003d182:	add    BYTE PTR [rax],al
   14003d184:	add    DWORD PTR [rax],eax
	...
   14003d19e:	add    BYTE PTR [rax],al
   14003d1a0:	adc    ah,dl
   14003d1a2:	add    eax,DWORD PTR [rax+0x1]
	...
   14003d1b5:	add    BYTE PTR [rax],al
   14003d1b7:	add    al,al
   14003d1b9:	rex.X add eax,DWORD PTR [rax+0x1]
   14003d1bd:	add    BYTE PTR [rax],al
   14003d1bf:	add    BYTE PTR [rax+0x47],dl
   14003d1c2:	add    eax,DWORD PTR [rax+0x1]
   14003d1c5:	add    BYTE PTR [rax],al
   14003d1c7:	add    al,dl
   14003d1c9:	add    rax,QWORD PTR [rax+0x1]
   14003d1cd:	add    BYTE PTR [rax],al
   14003d1cf:	add    al,ah
   14003d1d1:	int    0x3
   14003d1d3:	rex add DWORD PTR [rax],eax
	...
   14003d206:	add    BYTE PTR [rax],al
   14003d208:	mov    al,0xd0
   14003d20a:	add    eax,DWORD PTR [rax+0x1]
   14003d20d:	add    BYTE PTR [rax],al
   14003d20f:	add    al,ah
   14003d211:	mov    BYTE PTR [rbx],0x40
   14003d214:	add    DWORD PTR [rax],eax
   14003d216:	add    BYTE PTR [rax],al
   14003d218:	(bad)  
   14003d219:	(bad)  
   14003d21a:	(bad)  
   14003d21b:	inc    DWORD PTR [rax]
   14003d21d:	add    BYTE PTR [rax],al
   14003d21f:	add    ah,dl
   14003d221:	xor    DWORD PTR [rbx],eax
   14003d223:	rex add DWORD PTR [rax],eax
   14003d226:	add    BYTE PTR [rax],al
   14003d228:	loopne 0x14003d25b
   14003d22a:	add    eax,DWORD PTR [rax+0x1]
   14003d22d:	add    BYTE PTR [rax],al
   14003d22f:	add    BYTE PTR [rax+rax*1],dl
   14003d232:	add    BYTE PTR [rax],al
   14003d234:	add    BYTE PTR [rax],al
   14003d236:	add    BYTE PTR [rax],al
   14003d238:	(bad)  
   14003d239:	xor    al,BYTE PTR [rbx]
   14003d23b:	rex add DWORD PTR [rax],eax
   14003d23e:	add    BYTE PTR [rax],al
   14003d240:	sbb    eax,0x0
   14003d245:	add    BYTE PTR [rax],al
   14003d247:	add    BYTE PTR [rdx+rsi*1+0x3],ah
   14003d24b:	rex add DWORD PTR [rax],eax
   14003d24e:	add    BYTE PTR [rax],al
   14003d250:	sbb    al,BYTE PTR [rax]
   14003d252:	add    BYTE PTR [rax],al
   14003d254:	add    BYTE PTR [rax],al
   14003d256:	add    BYTE PTR [rax],al
   14003d258:	push   0x1400332
   14003d25d:	add    BYTE PTR [rax],al
   14003d25f:	add    BYTE PTR [rbx],bl
   14003d261:	add    BYTE PTR [rax],al
   14003d263:	add    BYTE PTR [rax],al
   14003d265:	add    BYTE PTR [rax],al
   14003d267:	add    BYTE PTR [rdx+rsi*1+0x3],ch
   14003d26b:	rex add DWORD PTR [rax],eax
   14003d26e:	add    BYTE PTR [rax],al
   14003d270:	(bad)  
   14003d271:	add    BYTE PTR [rax],al
   14003d273:	add    BYTE PTR [rax],al
   14003d275:	add    BYTE PTR [rax],al
   14003d277:	add    BYTE PTR [rdx+rsi*1+0x3],dh
   14003d27b:	rex add DWORD PTR [rax],eax
   14003d27e:	add    BYTE PTR [rax],al
   14003d280:	adc    eax,DWORD PTR [rax]
   14003d282:	add    BYTE PTR [rax],al
   14003d284:	add    BYTE PTR [rax],al
   14003d286:	add    BYTE PTR [rax],al
   14003d288:	jl     0x14003d2bc
   14003d28a:	add    eax,DWORD PTR [rax+0x1]
   14003d28d:	add    BYTE PTR [rax],al
   14003d28f:	add    BYTE PTR [rcx],ah
   14003d291:	add    BYTE PTR [rax],al
   14003d293:	add    BYTE PTR [rax],al
   14003d295:	add    BYTE PTR [rax],al
   14003d297:	add    BYTE PTR [rdx+rsi*1+0x14003],al
   14003d29e:	add    BYTE PTR [rax],al
   14003d2a0:	(bad)  
   14003d2a1:	add    BYTE PTR [rax],al
   14003d2a3:	add    BYTE PTR [rax],al
   14003d2a5:	add    BYTE PTR [rax],al
   14003d2a7:	add    BYTE PTR [rdx+rsi*1+0x14003],cl
   14003d2ae:	add    BYTE PTR [rax],al
   14003d2b0:	or     eax,0x0
   14003d2b5:	add    BYTE PTR [rax],al
   14003d2b7:	add    BYTE PTR [rdx+rsi*1+0x14003],dl
   14003d2be:	add    BYTE PTR [rax],al
   14003d2c0:	sldt   WORD PTR [rax]
   14003d2c3:	add    BYTE PTR [rax],al
   14003d2c5:	add    BYTE PTR [rax],al
   14003d2c7:	add    BYTE PTR [rdx+rsi*1+0x14003],bl
   14003d2ce:	add    BYTE PTR [rax],al
   14003d2d0:	adc    BYTE PTR [rax],al
   14003d2d2:	add    BYTE PTR [rax],al
   14003d2d4:	add    BYTE PTR [rax],al
   14003d2d6:	add    BYTE PTR [rax],al
   14003d2d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003d2d9:	xor    al,BYTE PTR [rbx]
   14003d2db:	rex add DWORD PTR [rax],eax
   14003d2de:	add    BYTE PTR [rax],al
   14003d2e0:	add    eax,0x0
   14003d2e5:	add    BYTE PTR [rax],al
   14003d2e7:	add    BYTE PTR [rdx+rsi*1+0x14003],ch
   14003d2ee:	add    BYTE PTR [rax],al
   14003d2f0:	(bad)  
   14003d2f1:	add    BYTE PTR [rax],al
   14003d2f3:	add    BYTE PTR [rax],al
   14003d2f5:	add    BYTE PTR [rax],al
   14003d2f7:	add    BYTE PTR [rdx+rsi*1+0x14003],dh
   14003d2fe:	add    BYTE PTR [rax],al
   14003d300:	adc    al,BYTE PTR [rax]
   14003d302:	add    BYTE PTR [rax],al
   14003d304:	add    BYTE PTR [rax],al
   14003d306:	add    BYTE PTR [rax],al
   14003d308:	mov    eax,0x1400332
   14003d30d:	add    BYTE PTR [rax],al
   14003d30f:	add    BYTE PTR [rax],ah
   14003d311:	add    BYTE PTR [rax],al
   14003d313:	add    BYTE PTR [rax],al
   14003d315:	add    BYTE PTR [rax],al
   14003d317:	add    BYTE PTR [rdx+rsi*1+0x14003],bh
   14003d31e:	add    BYTE PTR [rax],al
   14003d320:	or     al,0x0
   14003d322:	add    BYTE PTR [rax],al
   14003d324:	add    BYTE PTR [rax],al
   14003d326:	add    BYTE PTR [rax],al
   14003d328:	shl    BYTE PTR [rdx],0x3
   14003d32b:	rex add DWORD PTR [rax],eax
   14003d32e:	add    BYTE PTR [rax],al
   14003d330:	or     eax,DWORD PTR [rax]
   14003d332:	add    BYTE PTR [rax],al
   14003d334:	add    BYTE PTR [rax],al
   14003d336:	add    BYTE PTR [rax],al
   14003d338:	enter  0x332,0x40
   14003d33c:	add    DWORD PTR [rax],eax
   14003d33e:	add    BYTE PTR [rax],al
   14003d340:	adc    eax,0x0
   14003d345:	add    BYTE PTR [rax],al
   14003d347:	add    al,dl
   14003d349:	xor    al,BYTE PTR [rbx]
   14003d34b:	rex add DWORD PTR [rax],eax
   14003d34e:	add    BYTE PTR [rax],al
   14003d350:	sbb    al,0x0
   14003d352:	add    BYTE PTR [rax],al
   14003d354:	add    BYTE PTR [rax],al
   14003d356:	add    BYTE PTR [rax],al
   14003d358:	fdiv   DWORD PTR [rdx]
   14003d35a:	add    eax,DWORD PTR [rax+0x1]
   14003d35d:	add    BYTE PTR [rax],al
   14003d35f:	add    BYTE PTR [rcx],bl
   14003d361:	add    BYTE PTR [rax],al
   14003d363:	add    BYTE PTR [rax],al
   14003d365:	add    BYTE PTR [rax],al
   14003d367:	add    al,ah
   14003d369:	xor    al,BYTE PTR [rbx]
   14003d36b:	rex add DWORD PTR [rax],eax
   14003d36e:	add    BYTE PTR [rax],al
   14003d370:	adc    DWORD PTR [rax],eax
   14003d372:	add    BYTE PTR [rax],al
   14003d374:	add    BYTE PTR [rax],al
   14003d376:	add    BYTE PTR [rax],al
   14003d378:	call   0x14143d6af
   14003d37d:	add    BYTE PTR [rax],al
   14003d37f:	add    BYTE PTR [rax],bl
   14003d381:	add    BYTE PTR [rax],al
   14003d383:	add    BYTE PTR [rax],al
   14003d385:	add    BYTE PTR [rax],al
   14003d387:	add    BYTE PTR [rcx+rbp*8],cl
   14003d38a:	add    al,BYTE PTR [rax+0x1]
   14003d38d:	add    BYTE PTR [rax],al
   14003d38f:	add    BYTE PTR [rsi],dl
   14003d391:	add    BYTE PTR [rax],al
   14003d393:	add    BYTE PTR [rax],al
   14003d395:	add    BYTE PTR [rax],al
   14003d397:	add    al,dh
   14003d399:	xor    al,BYTE PTR [rbx]
   14003d39b:	rex add DWORD PTR [rax],eax
   14003d39e:	add    BYTE PTR [rax],al
   14003d3a0:	(bad)  
   14003d3a1:	add    BYTE PTR [rax],al
   14003d3a3:	add    BYTE PTR [rax],al
   14003d3a5:	add    BYTE PTR [rax],al
   14003d3a7:	add    al,bh
   14003d3a9:	xor    al,BYTE PTR [rbx]
   14003d3ab:	rex add DWORD PTR [rax],eax
   14003d3ae:	add    BYTE PTR [rax],al
   14003d3b0:	and    al,BYTE PTR [rax]
   14003d3b2:	add    BYTE PTR [rax],al
   14003d3b4:	add    BYTE PTR [rax],al
   14003d3b6:	add    BYTE PTR [rax],al
   14003d3b8:	add    BYTE PTR [rbx],dh
   14003d3ba:	add    eax,DWORD PTR [rax+0x1]
   14003d3bd:	add    BYTE PTR [rax],al
   14003d3bf:	add    BYTE PTR [rbx],ah
   14003d3c1:	add    BYTE PTR [rax],al
   14003d3c3:	add    BYTE PTR [rax],al
   14003d3c5:	add    BYTE PTR [rax],al
   14003d3c7:	add    BYTE PTR [rbx+rsi*1],al
   14003d3ca:	add    eax,DWORD PTR [rax+0x1]
   14003d3cd:	add    BYTE PTR [rax],al
   14003d3cf:	add    BYTE PTR [rax+rax*1],ah
   14003d3d2:	add    BYTE PTR [rax],al
   14003d3d4:	add    BYTE PTR [rax],al
   14003d3d6:	add    BYTE PTR [rax],al
   14003d3d8:	or     BYTE PTR [rbx],dh
   14003d3da:	add    eax,DWORD PTR [rax+0x1]
   14003d3dd:	add    BYTE PTR [rax],al
   14003d3df:	add    BYTE PTR [rip+0x0],ah        # 0x14003d3e5
   14003d3e5:	add    BYTE PTR [rax],al
   14003d3e7:	add    BYTE PTR [rbx+rsi*1],cl
   14003d3ea:	add    eax,DWORD PTR [rax+0x1]
   14003d3ed:	add    BYTE PTR [rax],al
   14003d3ef:	add    BYTE PTR [rsi],ah
   14003d3f1:	add    BYTE PTR [rax],al
   14003d3f3:	add    BYTE PTR [rax],al
   14003d3f5:	add    BYTE PTR [rax],al
   14003d3f7:	add    BYTE PTR [rax],bl
   14003d3f9:	xor    eax,DWORD PTR [rbx]
   14003d3fb:	rex add DWORD PTR [rax],eax
   14003d3fe:	add    BYTE PTR [rax],al
   14003d400:	xchg   esp,eax
   14003d401:	add    BYTE PTR es:[rax],al
	...
   14003d410:	test   al,0xd4
   14003d412:	add    eax,DWORD PTR [rax+0x1]
   14003d415:	add    BYTE PTR [rax],al
   14003d417:	add    BYTE PTR [rax+0x14003ef],al
   14003d41d:	add    BYTE PTR [rax],al
   14003d41f:	add    BYTE PTR [rax+0x14003ef],al
   14003d425:	add    BYTE PTR [rax],al
   14003d427:	add    BYTE PTR [rax+0x14003ef],al
   14003d42d:	add    BYTE PTR [rax],al
   14003d42f:	add    BYTE PTR [rax+0x14003ef],al
   14003d435:	add    BYTE PTR [rax],al
   14003d437:	add    BYTE PTR [rax+0x14003ef],al
   14003d43d:	add    BYTE PTR [rax],al
   14003d43f:	add    BYTE PTR [rax+0x14003ef],al
   14003d445:	add    BYTE PTR [rax],al
   14003d447:	add    BYTE PTR [rax+0x14003ef],al
   14003d44d:	add    BYTE PTR [rax],al
   14003d44f:	add    BYTE PTR [rax+0x14003ef],al
   14003d455:	add    BYTE PTR [rax],al
   14003d457:	add    BYTE PTR [rax+0x14003ef],al
   14003d45d:	add    BYTE PTR [rax],al
   14003d45f:	add    BYTE PTR [rdi+0x7f],bh
   14003d462:	jg     0x14003d4e3
   14003d464:	jg     0x14003d4e5
   14003d466:	jg     0x14003d4e7
   14003d468:	lods   al,BYTE PTR ds:[rsi]
   14003d469:	(bad)  
   14003d46a:	add    eax,DWORD PTR [rax+0x1]
   14003d46d:	add    BYTE PTR [rax],al
   14003d46f:	add    BYTE PTR [rdi+rbp*8+0x14003],al
   14003d476:	add    BYTE PTR [rax],al
   14003d478:	test   bh,ch
   14003d47a:	add    eax,DWORD PTR [rax+0x1]
   14003d47d:	add    BYTE PTR [rax],al
   14003d47f:	add    BYTE PTR [rdi+rbp*8+0x14003],al
   14003d486:	add    BYTE PTR [rax],al
   14003d488:	test   bh,ch
   14003d48a:	add    eax,DWORD PTR [rax+0x1]
   14003d48d:	add    BYTE PTR [rax],al
   14003d48f:	add    BYTE PTR [rdi+rbp*8+0x14003],al
   14003d496:	add    BYTE PTR [rax],al
   14003d498:	test   bh,ch
   14003d49a:	add    eax,DWORD PTR [rax+0x1]
   14003d49d:	add    BYTE PTR [rax],al
   14003d49f:	add    BYTE PTR [rdi+rbp*8+0x14003],al
   14003d4a6:	add    BYTE PTR [rax],al
   14003d4a8:	add    BYTE PTR cs:[rax],al
   14003d4ab:	add    BYTE PTR [rsi],ch
   14003d4ad:	add    BYTE PTR [rax],al
   14003d4af:	add    BYTE PTR [rax],dl
   14003d4b1:	(bad)  
   14003d4b2:	add    eax,DWORD PTR [rax+0x1]
   14003d4b5:	add    BYTE PTR [rax],al
   14003d4b7:	add    al,al
   14003d4b9:	rex.X add eax,DWORD PTR [rax+0x1]
   14003d4bd:	add    BYTE PTR [rax],al
   14003d4bf:	add    dl,al
   14003d4c1:	add    r8d,DWORD PTR [rax+0x1]
	...
   14003d4cd:	add    al,dh
   14003d4cf:	jg     0x14003d4d1
   14003d4d1:	add    BYTE PTR [rax],al
   14003d4d3:	add    BYTE PTR [rax],al
   14003d4d5:	add    al,bh
   14003d4d7:	(bad)  
   14003d4d8:	(bad)  
   14003d4d9:	(bad)  
   14003d4da:	(bad)  
   14003d4db:	(bad)  
   14003d4dc:	(bad)  
   14003d4dd:	(bad)  
   14003d4de:	out    dx,eax
   14003d4df:	jg     0x14003d4e1
   14003d4e1:	add    BYTE PTR [rax],al
   14003d4e3:	add    BYTE PTR [rax],al
   14003d4e5:	add    BYTE PTR [rax],dl
	...
   14003d4ef:	add    ah,0x44
   14003d4f2:	add    eax,DWORD PTR [rax+0x1]
   14003d4f5:	add    BYTE PTR [rax],al
   14003d4f7:	add    BYTE PTR [rax],al
   14003d4f9:	add    al,0x0
   14003d4fb:	add    BYTE PTR [rcx],al
   14003d4fd:	cld    
   14003d4fe:	(bad)  
   14003d4ff:	push   QWORD PTR [rip+0xb000000]        # 0x14b03d505
   14003d505:	add    BYTE PTR [rax],al
   14003d507:	add    BYTE PTR [rax+0x0],al
   14003d50a:	add    BYTE PTR [rax],al
   14003d50c:	inc    DWORD PTR [rbx]
   14003d50e:	add    BYTE PTR [rax],al
   14003d510:	add    BYTE PTR [rax],0x0
   14003d513:	add    BYTE PTR [rcx+0x18ffffff],al
   14003d519:	add    BYTE PTR [rax],al
   14003d51b:	add    BYTE PTR [rax],cl
   14003d51d:	add    BYTE PTR [rax],al
   14003d51f:	add    BYTE PTR [rax],ah
   14003d521:	add    BYTE PTR [rax],al
   14003d523:	add    BYTE PTR [rdi+0x0],bh
   14003d526:	add    BYTE PTR [rax],al
   14003d528:	(bad)  
   14003d529:	(bad)  
   14003d52a:	(bad)  
   14003d52b:	(bad)  
   14003d52c:	(bad)  
   14003d52d:	(bad)  
   14003d52e:	(bad)  
   14003d52f:	inc    DWORD PTR [rax]
	...
   14003d539:	movabs al,ds:0x4002
   14003d542:	add    BYTE PTR [rax],al
   14003d544:	add    al,cl
   14003d546:	add    eax,0x40
   14003d54b:	add    BYTE PTR [rax],al
   14003d54d:	add    BYTE PTR [rax],al
   14003d54f:	add    BYTE PTR [rax],al
   14003d551:	cli    
   14003d552:	or     BYTE PTR [rax+0x0],al
   14003d555:	add    BYTE PTR [rax],al
   14003d557:	add    BYTE PTR [rax],al
   14003d559:	add    BYTE PTR [rax],al
   14003d55b:	add    BYTE PTR [rax-0x64],al
   14003d55e:	or     al,0x40
	...
   14003d568:	push   rax
   14003d569:	ret    
   14003d56a:	cmovo  eax,DWORD PTR [rax]
   14003d56d:	add    BYTE PTR [rax],al
   14003d56f:	add    BYTE PTR [rax],al
   14003d571:	add    BYTE PTR [rax],al
   14003d573:	add    BYTE PTR [rsp+rsi*8],ah
   14003d576:	adc    al,BYTE PTR [rax+0x0]
   14003d579:	add    BYTE PTR [rax],al
   14003d57b:	add    BYTE PTR [rax],al
   14003d57d:	add    BYTE PTR [rax],al
   14003d57f:	adc    BYTE PTR [rsi+0x401698],0x0
   14003d586:	add    BYTE PTR [rax],al
   14003d588:	add    BYTE PTR [rax],al
   14003d58a:	add    BYTE PTR [rax],ah
   14003d58c:	mov    esp,0x4019be
   14003d591:	add    BYTE PTR [rax],al
   14003d593:	add    BYTE PTR [rax],al
   14003d595:	add    al,0xbf
   14003d597:	leave  
   14003d598:	sbb    ecx,DWORD PTR [rsi+0x4034]
   14003d59e:	add    BYTE PTR [rcx+0x1bcecced],ah
   14003d5a4:	ret    0x4ed3
   14003d5a7:	and    al,sil
   14003d5aa:	sahf   
   14003d5ab:	mov    ch,0x70
   14003d5ad:	sub    ebp,DWORD PTR [rax+0x699dc5ad]
   14003d5b3:	rex rcr BYTE PTR [rbp-0x3],1
   14003d5b7:	and    eax,0x4f8e1ae5
   14003d5bc:	sbb    ebx,ebp
   14003d5be:	add    DWORD PTR [rax+0x71],0xffffff96
   14003d5c2:	xlat   BYTE PTR ds:[rbx]
   14003d5c3:	xchg   ebp,eax
   14003d5c4:	rex.XB (bad) 
   14003d5c6:	add    eax,0x9eaf298d
   14003d5cb:	rex stc 
   14003d5cd:	mov    edi,0x81ed44a0
   14003d5d2:	adc    cl,BYTE PTR [rdi+0x40b98281]
   14003d5d8:	mov    edi,0xcfa6d53c
   14003d5dd:	dec    DWORD PTR [rcx+0x1f]
   14003d5e0:	js     0x14003d5a4
   14003d5e2:	rol    DWORD PTR [rax+0x6f],cl
   14003d5e5:	(bad)  
   14003d5e6:	loopne 0x14003d574
   14003d5e8:	jmp    0xfa4b9f6d
   14003d5ed:	xchg   ebx,eax
   14003d5ee:	test   al,0x41
   14003d5f0:	mov    esp,0x27556b85
   14003d5f5:	cmp    DWORD PTR [rbp+0x7ce070f7],ecx
   14003d5fb:	rex.X mov esp,0xf9de8edd
   14003d601:	popf   
   14003d602:	sti    
   14003d603:	jmp    0x14003d683
   14003d605:	stos   BYTE PTR es:[rdi],al
   14003d606:	push   rcx
   14003d607:	rex.XB movabs eax,ds:0x842f29f2cce376e6
   14003d611:	and    DWORD PTR [rsi],0x17102844
   14003d617:	stos   BYTE PTR es:[rdi],al
   14003d618:	clc    
   14003d619:	scas   al,BYTE PTR es:[rdi]
   14003d61a:	adc    bl,ah
   14003d61c:	(bad)
   14003d61f:	rex.R jmp 0x14003d5c9
   14003d622:	(bad)  
   14003d623:	repz imul ebx
   14003d626:	loope  0x14003d672
   14003d628:	jp     0x14003d5bf
   14003d62a:	iret   
   14003d62b:	rex.RB
   14003d62c:	gs int3 
   14003d62e:	(bad)  
   14003d62f:	xchg   ecx,eax
   14003d630:	(bad)  
   14003d631:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003d632:	scas   al,BYTE PTR es:[rdi]
   14003d633:	movabs al,ds:0xc17650d46a3e319
   14003d63c:	jne    0x14003d5bf
   14003d63e:	xchg   BYTE PTR [rbp+0x76],dh
   14003d641:	leave  
   14003d642:	rex.W
   14003d643:	rex.WRB pop r8
   14003d645:	rex.X in al,0xa7
   14003d648:	xchg   ebx,eax
   14003d649:	cmp    DWORD PTR [rbx],edi
   14003d64b:	xor    eax,0x53edb2b8
   14003d650:	rex.WRB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14003d652:	in     eax,0x5d
   14003d654:	cmp    eax,0x8b3b5dc5
   14003d659:	sahf   
   14003d65a:	xchg   edx,eax
   14003d65b:	pop    rdx
   14003d65c:	call   FWORD PTR [rbp-0x5a]
   14003d65f:	lock movabs eax,ds:0xd161378ca554c020
   14003d669:	std    
   14003d66a:	mov    ebx,DWORD PTR [rdx-0x75]
   14003d66d:	fsub   DWORD PTR [rip+0xffffffffdbf9895d]        # 0x11bfd5fd0
   14003d673:	stos   BYTE PTR es:[edi],al
   14003d675:	xchg   ebp,eax
   14003d676:	clc    
   14003d677:	repz (bad) 
   14003d679:	mov    edi,0xdd5dc8a2
   14003d67e:	sub    BYTE PTR [rsi+0x4c],0xc9
   14003d682:	fwait
   14003d683:	xchg   edi,eax
   14003d684:	and    BYTE PTR [rdx-0x3b9fadfe],cl
   14003d68a:	and    eax,0x75
   14003d68f:	add    ch,cl
   14003d691:	int3   
   14003d692:	int    0xcc
   14003d694:	int3   
   14003d695:	int3   
   14003d696:	int3   
   14003d697:	int3   
   14003d698:	int3   
   14003d699:	int3   
   14003d69a:	sti    
   14003d69b:	(bad)  
   14003d69c:	jno    0x14003d6db
   14003d69e:	or     dl,bh
   14003d6a0:	movabs ds:0x5a3ff8a3d70a3d70,eax
   14003d6a9:	fs cmp ebx,edi
   14003d6ac:	rex.WRXB lea r10,[r15-0xa7ced92]
   14003d6b3:	(bad)  
   14003d6b4:	ret    
   14003d6b5:	shr    DWORD PTR [riz*2+0x1758e219],cl
   14003d6bc:	mov    bh,0xd1
   14003d6be:	icebp  
   14003d6bf:	(bad)  
   14003d6c0:	ror    BYTE PTR [rdi],1
   14003d6c2:	and    eax,DWORD PTR [rdi+rax*2-0x3a53b8e5]
   14003d6c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003d6ca:	out    dx,al
   14003d6cb:	(bad)  
   14003d6cc:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003d6ce:	mov    dh,0x69
   14003d6d0:	ins    BYTE PTR es:[rdi],dx
   14003d6d1:	scas   eax,DWORD PTR es:[rdi]
   14003d6d2:	add    eax,0xeb8637bd
   14003d6d7:	(bad)  
   14003d6d8:	xor    edi,DWORD PTR [rip+0xffffffffe57a42bc]        # 0x1257e199a
   14003d6de:	(bad)  
   14003d6df:	xchg   esp,eax
   14003d6e0:	mov    edi,0xc23fe7d6
   14003d6e5:	std    
   14003d6e6:	std    
   14003d6e7:	(bad)  
   14003d6e8:	(bad)  
   14003d6e9:	test   BYTE PTR [rcx],dl
   14003d6eb:	ja     0x14003d6b9
   14003d6ed:	stos   DWORD PTR es:[rdi],eax
   14003d6ee:	in     al,0x3f
   14003d6f0:	(bad)  
   14003d6f1:	rex.WR pop rbx
   14003d6f3:	loope  0x14003d742
   14003d6f5:	(bad)  
   14003d6f6:	mov    esi,0xc9e69594
   14003d6fb:	(bad)  
   14003d6fc:	xchg   edx,eax
   14003d6fd:	(bad)  
   14003d6fe:	push   rbx
   14003d6ff:	cmp    esi,DWORD PTR [rbp+0x44]
   14003d702:	int    0x14
   14003d704:	mov    esi,0xde3faf9a
   14003d709:	addr32 mov edx,0xad453994
   14003d70f:	(bad)  
   14003d710:	mov    cl,0xcf
   14003d712:	xchg   esp,eax
   14003d713:	(bad)  
   14003d714:	and    al,0x23
   14003d716:	(bad)  
   14003d717:	loop   0x14003d6d5
   14003d719:	mov    edx,0x8b61313b
   14003d71e:	jp     0x14003d75f
   14003d720:	(bad)  
   14003d721:	push   rbp
   14003d722:	pop    rcx
   14003d723:	sar    DWORD PTR [rsi-0x4f],0x53
   14003d727:	jl     0x14003d73b
   14003d729:	mov    ebx,0xeed73f5f
   14003d72e:	(bad)  
   14003d72f:	lea    eax,[rsi]
   14003d731:	mov    esi,0xfb158592
   14003d736:	rex.R (bad) 
   14003d738:	and    al,0x3f
   14003d73a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003d73b:	jmp    0x12a2b7c79
   14003d740:	jg     0x14003d6ea
   14003d742:	sub    bh,BYTE PTR [rdi]
   14003d744:	jge    0x14003d6f2
   14003d746:	movabs eax,ds:0x55ddd0467c64bce4
   14003d74f:	movsxd edi,DWORD PTR ds:[rbx+0x6]
   14003d753:	int3   
   14003d754:	and    edx,DWORD PTR [rdi+rsi*2-0x7d]
   14003d758:	call   QWORD PTR [rcx-0x56ec27f]
   14003d75e:	cmp    bl,BYTE PTR [rcx]
   14003d760:	jp     0x14003d7c5
   14003d762:	and    eax,0xacc03143
   14003d767:	cmp    al,0x21
   14003d769:	mov    ecx,edx
   14003d76b:	cmp    BYTE PTR [rdx+0xb89747],al
   14003d771:	std    
   14003d772:	xlat   BYTE PTR ds:[rbx]
   14003d773:	cmp    ebx,esp
   14003d775:	mov    BYTE PTR [rax+0x8],bl
   14003d778:	sbb    esi,DWORD PTR [rcx-0x59791c18]
   14003d77e:	add    edi,DWORD PTR [rbx]
   14003d780:	mov    BYTE PTR [rbp+rax*2-0x6649f8be],0x75
   14003d788:	(bad)  
   14003d789:	fld    TBYTE PTR [rsi]
   14003d78b:	cmp    dh,BYTE PTR [rbx]
   14003d78d:	jno    0x14003d7ab
   14003d78f:	shl    BYTE PTR [rbx],cl
   14003d791:	(bad)  [rdx]
   14003d793:	out    dx,al
   14003d794:	xchg   r8,rax
   14003d796:	pop    rdx
   14003d797:	cmp    DWORD PTR [rsi+0x57c0be87],esp
   14003d79d:	fisub  DWORD PTR [rbp-0x4a5d597e]
   14003d7a3:	xor    ah,dl
   14003d7a5:	push   0x52a711b2
   14003d7aa:	lahf   
   14003d7ab:	rex.R pop rcx
   14003d7ad:	mov    bh,0x10
   14003d7af:	sub    al,0x25
   14003d7b1:	rex.WB in al,0x2d
   14003d7b4:	ss xor al,0x4f
   14003d7b7:	push   rbx
   14003d7b8:	scas   al,BYTE PTR es:[rdi]
   14003d7b9:	(bad)  
   14003d7ba:	imul   esp,DWORD PTR [rip+0xffffffffa404598f],0xffffffc0        # 0xe4083150
   14003d7c1:	faddp  st(2),st
   14003d7c3:	jge    0x14003d7c0
   14003d7c5:	call   0x127a1f690
   14003d7ca:	mov    BYTE PTR [rdx+0x57],bl
   14003d7cd:	xchg   ecx,eax
   14003d7ce:	cmp    al,0xbf
   14003d7d0:	push   rax
   14003d7d1:	and    DWORD PTR [rdx],0x18
   14003d7d4:	rex.WRX
   14003d7d5:	rex.WXB
   14003d7d6:	gs (bad) 
   14003d7d8:	std    
   14003d7d9:	or     DWORD PTR [rdi+0x7d9406af],0x11
   14003d7e0:	in     al,0x2d
   14003d7e2:	ficomp WORD PTR [rdi+0x4c8d2ce]
   14003d7e8:	frstor [rsi+0xad8]
	...
   14003d7f6:	lock jg 0x14003d829
   14003d7f9:	(bad)  
   14003d7fa:	add    al,BYTE PTR [rax+0x1]
	...
   14003d805:	add    BYTE PTR [rax],al
   14003d807:	add    BYTE PTR [rsi],ch
   14003d809:	(bad)  
   14003d80a:	push   r14
   14003d80c:	gs jb  0x14003d881
   14003d80f:	outs   dx,DWORD PTR ds:[rsi]
   14003d810:	jb     0x14003d871
   14003d812:	movsxd esp,DWORD PTR [rcx+0x74]
   14003d815:	outs   dx,DWORD PTR gs:[esi]
   14003d818:	jb     0x14003d893
   14003d81a:	rex jae 0x14003d891
   14003d81d:	fs rex
   14003d81f:	add    BYTE PTR [rax],al
   14003d822:	add    BYTE PTR [rax],al
   14003d824:	add    BYTE PTR [rax],al
   14003d826:	add    BYTE PTR [rax],al
   14003d828:	xor    dl,ch
   14003d82a:	add    al,BYTE PTR [rax+0x1]
	...
   14003d835:	add    BYTE PTR [rax],al
   14003d837:	add    BYTE PTR [rsi],ch
   14003d839:	(bad)  
   14003d83a:	push   r14
   14003d83c:	pop    rdi
   14003d83d:	rex.RXB
   14003d83e:	outs   dx,BYTE PTR gs:[rsi]
   14003d840:	gs jb  0x14003d8ac
   14003d843:	movsxd ebx,DWORD PTR [rdi+0x65]
   14003d846:	jb     0x14003d8ba
   14003d848:	outs   dx,DWORD PTR ds:[rsi]
   14003d849:	jb     0x14003d8aa
   14003d84b:	movsxd esp,DWORD PTR [rcx+0x74]
   14003d84e:	outs   dx,DWORD PTR gs:[esi]
   14003d851:	jb     0x14003d8cc
   14003d853:	rex jae 0x14003d8ca
   14003d856:	fs rex
   14003d858:	add    BYTE PTR [rax],al
   14003d85b:	add    BYTE PTR [rax],al
   14003d85d:	add    BYTE PTR [rax],al
   14003d85f:	add    BYTE PTR [rax],dh
   14003d861:	(bad)  
   14003d862:	add    al,BYTE PTR [rax+0x1]
	...
   14003d86d:	add    BYTE PTR [rax],al
   14003d86f:	add    BYTE PTR [rsi],ch
   14003d871:	(bad)  
   14003d872:	push   r14
   14003d874:	pop    rdi
   14003d875:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14003d877:	jae    0x14003d8ed
   14003d879:	jb     0x14003d8e0
   14003d87b:	(bad)  
   14003d87c:	ins    DWORD PTR es:[rdi],dx
   14003d87d:	pop    rdi
   14003d87e:	gs jb  0x14003d8f3
   14003d881:	outs   dx,DWORD PTR ds:[rsi]
   14003d882:	jb     0x14003d8e3
   14003d884:	movsxd esp,DWORD PTR [rcx+0x74]
   14003d887:	outs   dx,DWORD PTR gs:[esi]
   14003d88a:	jb     0x14003d905
   14003d88c:	rex jae 0x14003d903
   14003d88f:	fs rex
   14003d891:	add    BYTE PTR [rax],al
   14003d894:	add    BYTE PTR [rax],al
   14003d896:	add    BYTE PTR [rax],al
   14003d898:	xor    dl,ch
   14003d89a:	add    al,BYTE PTR [rax+0x1]
	...
   14003d8a5:	add    BYTE PTR [rax],al
   14003d8a7:	add    BYTE PTR [rsi],ch
   14003d8a9:	(bad)  
   14003d8aa:	push   r14
   14003d8ac:	pop    rdi
   14003d8ad:	push   rbx
   14003d8ae:	jns    0x14003d923
   14003d8b0:	je     0x14003d917
   14003d8b2:	ins    DWORD PTR es:[rdi],dx
   14003d8b3:	pop    rdi
   14003d8b4:	gs jb  0x14003d929
   14003d8b7:	outs   dx,DWORD PTR ds:[rsi]
   14003d8b8:	jb     0x14003d919
   14003d8ba:	movsxd esp,DWORD PTR [rcx+0x74]
   14003d8bd:	outs   dx,DWORD PTR gs:[esi]
   14003d8c0:	jb     0x14003d93b
   14003d8c2:	rex jae 0x14003d939
   14003d8c5:	fs rex
   14003d8c7:	add    BYTE PTR [rax],al
   14003d8ca:	add    BYTE PTR [rax],al
   14003d8cc:	add    BYTE PTR [rax],al
   14003d8ce:	add    BYTE PTR [rax],al
   14003d8d0:	xor    dl,ch
   14003d8d2:	add    al,BYTE PTR [rax+0x1]
	...
   14003d8dd:	add    BYTE PTR [rax],al
   14003d8df:	add    BYTE PTR [rsi],ch
   14003d8e1:	(bad)  
   14003d8e2:	push   r14
   14003d8e4:	(bad)
   14003d8e9:	ins    BYTE PTR es:[rdi],dx
   14003d8ea:	ins    BYTE PTR es:[rdi],dx
   14003d8eb:	outs   dx,DWORD PTR ds:[rsi]
   14003d8ec:	movsxd eax,DWORD PTR [rax+0x73]
   14003d8ef:	je     0x14003d955
   14003d8f1:	rex
   14003d8f2:	add    BYTE PTR [rax],al
   14003d8f5:	add    BYTE PTR [rax],al
   14003d8f7:	add    BYTE PTR [rax],dh
   14003d8f9:	(bad)  
   14003d8fa:	add    al,BYTE PTR [rax+0x1]
	...
   14003d905:	add    BYTE PTR [rax],al
   14003d907:	add    BYTE PTR [rsi],ch
   14003d909:	(bad)  
   14003d90a:	push   r14
   14003d90c:	gs js  0x14003d972
   14003d90f:	gs jo  0x14003d986
   14003d912:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14003d919:	rex
   14003d91a:	add    BYTE PTR [rax],al
   14003d91d:	add    BYTE PTR [rax],al
   14003d91f:	add    BYTE PTR [rax],dh
   14003d921:	(bad)  
   14003d922:	add    al,BYTE PTR [rax+0x1]
	...
   14003d92d:	add    BYTE PTR [rax],al
   14003d92f:	add    BYTE PTR [rsi],ch
   14003d931:	(bad)  
   14003d932:	push   r14
   14003d934:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14003d93b:	pop    rdi
   14003d93c:	(bad)  
   14003d93d:	jb     0x14003d9a6
   14003d93f:	jne    0x14003d9ae
   14003d941:	outs   dx,BYTE PTR gs:[rsi]
   14003d943:	je     0x14003d985
   14003d945:	jae    0x14003d9bb
   14003d947:	fs rex
   14003d949:	add    BYTE PTR [rax],al
   14003d94c:	add    BYTE PTR [rax],al
   14003d94e:	add    BYTE PTR [rax],al
   14003d950:	xor    dl,ch
   14003d952:	add    al,BYTE PTR [rax+0x1]
	...
   14003d95d:	add    BYTE PTR [rax],al
   14003d95f:	add    BYTE PTR [rsi],ch
   14003d961:	(bad)  
   14003d962:	push   r14
   14003d964:	ins    BYTE PTR es:[rdi],dx
   14003d965:	outs   dx,DWORD PTR ds:[rsi]
   14003d966:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14003d96e:	jb     0x14003d9b0
   14003d970:	jae    0x14003d9e6
   14003d972:	fs rex
   14003d974:	add    BYTE PTR [rax],al
   14003d977:	add    BYTE PTR [rax],dh
   14003d979:	(bad)  
   14003d97a:	add    al,BYTE PTR [rax+0x1]
	...
   14003d985:	add    BYTE PTR [rax],al
   14003d987:	add    BYTE PTR [rsi],ch
   14003d989:	(bad)  
   14003d98a:	push   r14
   14003d98c:	ins    BYTE PTR es:[rdi],dx
   14003d98d:	outs   dx,BYTE PTR gs:[rsi]
   14003d98f:	addr32 je 0x14003d9fa
   14003d992:	pop    rdi
   14003d993:	gs jb  0x14003da08
   14003d996:	outs   dx,DWORD PTR ds:[rsi]
   14003d997:	jb     0x14003d9d9
   14003d999:	jae    0x14003da0f
   14003d99b:	fs rex
   14003d99d:	add    BYTE PTR [rax],al
   14003d9a0:	xor    dl,ch
   14003d9a2:	add    al,BYTE PTR [rax+0x1]
	...
   14003d9ad:	add    BYTE PTR [rax],al
   14003d9af:	add    BYTE PTR [rsi],ch
   14003d9b1:	(bad)  
   14003d9b2:	push   r14
   14003d9b4:	outs   dx,DWORD PTR ds:[rsi]
   14003d9b5:	jne    0x14003da2b
   14003d9b7:	pop    rdi
   14003d9b8:	outs   dx,DWORD PTR ds:[rsi]
   14003d9b9:	pop    di
   14003d9bb:	jb     0x14003da1e
   14003d9bd:	outs   dx,BYTE PTR ds:[rsi]
   14003d9be:	addr32 gs rex jae 0x14003da37
   14003d9c3:	fs rex
   14003d9c5:	add    BYTE PTR [rax],al
   14003d9c8:	xor    dl,ch
   14003d9ca:	add    al,BYTE PTR [rax+0x1]
	...
   14003d9d5:	add    BYTE PTR [rax],al
   14003d9d7:	add    BYTE PTR [rsi],ch
   14003d9d9:	(bad)  
   14003d9da:	push   r14
   14003d9dc:	outs   dx,DWORD PTR ds:[rsi]
   14003d9dd:	jbe    0x14003da44
   14003d9df:	jb     0x14003da47
   14003d9e1:	ins    BYTE PTR es:[rdi],dx
   14003d9e2:	outs   dx,DWORD PTR ds:[rsi]
   14003d9e3:	ja     0x14003da44
   14003d9e5:	gs jb  0x14003da5a
   14003d9e8:	outs   dx,DWORD PTR ds:[rsi]
   14003d9e9:	jb     0x14003da2b
   14003d9eb:	jae    0x14003da61
   14003d9ed:	fs rex
   14003d9ef:	add    BYTE PTR [rax],al
   14003d9f2:	add    BYTE PTR [rax],al
   14003d9f4:	add    BYTE PTR [rax],al
   14003d9f6:	add    BYTE PTR [rax],al
   14003d9f8:	xor    dl,ch
   14003d9fa:	add    al,BYTE PTR [rax+0x1]
	...
   14003da05:	add    BYTE PTR [rax],al
   14003da07:	add    BYTE PTR [rsi],ch
   14003da09:	(bad)  
   14003da0a:	push   r14
   14003da0c:	jb     0x14003da83
   14003da0e:	outs   dx,BYTE PTR ds:[rsi]
   14003da0f:	je     0x14003da7a
   14003da11:	ins    DWORD PTR es:[rdi],dx
   14003da12:	gs pop rdi
   14003da14:	gs jb  0x14003da89
   14003da17:	outs   dx,DWORD PTR ds:[rsi]
   14003da18:	jb     0x14003da5a
   14003da1a:	jae    0x14003da90
   14003da1c:	fs rex
   14003da1e:	add    BYTE PTR [rax],sil
   14003da21:	(bad)  
   14003da22:	add    al,BYTE PTR [rax+0x1]
	...
   14003da2d:	add    BYTE PTR [rax],al
   14003da2f:	add    BYTE PTR [rsi],ch
   14003da31:	(bad)  
   14003da32:	push   r14
   14003da34:	(bad)
   14003da39:	jne    0x14003daa9
   14003da3b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14003da3f:	outs   dx,BYTE PTR ds:[rsi]
   14003da40:	pop    rdi
   14003da41:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003da44:	ins    BYTE PTR es:[rdi],dx
   14003da45:	rex jae 0x14003dabc
   14003da48:	fs rex
   14003da4a:	add    BYTE PTR [rax],al
   14003da4d:	add    BYTE PTR [rax],al
   14003da4f:	add    BYTE PTR [rax],dh
   14003da51:	(bad)  
   14003da52:	add    al,BYTE PTR [rax+0x1]
	...
   14003da5d:	add    BYTE PTR [rax],al
   14003da5f:	add    BYTE PTR [rsi],ch
   14003da61:	(bad)  
   14003da62:	push   r14
   14003da64:	jb     0x14003dacb
   14003da66:	addr32 gs js 0x14003dac9
   14003da6a:	gs jb  0x14003dadf
   14003da6d:	outs   dx,DWORD PTR ds:[rsi]
   14003da6e:	jb     0x14003dab0
   14003da70:	jae    0x14003dae6
   14003da72:	fs rex
   14003da74:	add    BYTE PTR [rax],al
   14003da77:	add    BYTE PTR [rax],dh
   14003da79:	(bad)  
   14003da7a:	add    al,BYTE PTR [rax+0x1]
	...
   14003da85:	add    BYTE PTR [rax],al
   14003da87:	add    BYTE PTR [rsi],ch
   14003da89:	(bad)  
   14003da8a:	push   r14
   14003da8c:	je     0x14003db07
   14003da8e:	jo     0x14003daf5
   14003da90:	pop    rdi
   14003da91:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   14003da98:	xor    dl,ch
   14003da9a:	add    al,BYTE PTR [rax+0x1]
	...
   14003daa5:	add    BYTE PTR [rax],al
   14003daa7:	add    BYTE PTR [rsi],ch
   14003daa9:	(bad)  
   14003daaa:	push   r14
   14003daac:	(bad)
   14003dab1:	(bad)  
   14003dab2:	jae    0x14003db28
   14003dab4:	rex jae 0x14003db2b
   14003dab7:	fs rex
   14003dab9:	add    BYTE PTR [rax],al
   14003dabc:	add    BYTE PTR [rax],al
   14003dabe:	add    BYTE PTR [rax],al
   14003dac0:	xor    dl,ch
   14003dac2:	add    al,BYTE PTR [rax+0x1]
	...
   14003dacd:	add    BYTE PTR [rax],al
   14003dacf:	add    BYTE PTR [rsi],ch
   14003dad1:	(bad)  
   14003dad2:	push   r14
   14003dad4:	(bad)
   14003dad9:	jns    0x14003db4b
   14003dadb:	imul   esp,DWORD PTR gs:[rax+rax*2+0x73],0x40406474
   14003dae4:	add    BYTE PTR [rax],al
   14003dae6:	add    BYTE PTR [rax],al
   14003dae8:	xor    dl,ch
   14003daea:	add    al,BYTE PTR [rax+0x1]
	...
   14003daf5:	add    BYTE PTR [rax],al
   14003daf7:	add    BYTE PTR [rsi],ch
   14003daf9:	(bad)  
   14003dafa:	push   r14
   14003dafc:	pop    rdi
   14003dafd:	pop    rdi
   14003dafe:	outs   dx,BYTE PTR ds:[rsi]
   14003daff:	outs   dx,DWORD PTR ds:[rsi]
   14003db00:	outs   dx,BYTE PTR ds:[rsi]
   14003db01:	pop    rdi
   14003db02:	jb     0x14003db78
   14003db04:	je     0x14003db6f
   14003db06:	pop    rdi
   14003db07:	outs   dx,DWORD PTR ds:[rsi]
   14003db08:	(bad)  
   14003db09:	push   0x65
   14003db0b:	movsxd esi,DWORD PTR [rax+rax*2+0x73]
   14003db0f:	je     0x14003db75
   14003db11:	rex
   14003db12:	add    BYTE PTR [rax],al
   14003db15:	add    BYTE PTR [rax],al
   14003db17:	add    BYTE PTR [rax],dh
   14003db19:	(bad)  
   14003db1a:	add    al,BYTE PTR [rax+0x1]
	...
   14003db25:	add    BYTE PTR [rax],al
   14003db27:	add    BYTE PTR [rsi],ch
   14003db29:	(bad)  
   14003db2a:	push   r14
   14003db2c:	(bad)
   14003db31:	js     0x14003db96
   14003db33:	gs jo  0x14003dbaa
   14003db36:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14003db3d:	rex
   14003db3e:	add    BYTE PTR [rax],sil
   14003db41:	(bad)  
   14003db42:	add    al,BYTE PTR [rax+0x1]
	...
   14003db4d:	add    BYTE PTR [rax],al
   14003db4f:	add    BYTE PTR [rsi],ch
   14003db51:	(bad)  
   14003db52:	push   r14
   14003db54:	rex.R
   14003db55:	rex.WRX (bad) 
   14003db57:	ins    DWORD PTR es:[rdi],dx
   14003db58:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   14003db5b:	fs gs rex
   14003db5e:	add    BYTE PTR [rax],sil
   14003db61:	(bad)  
   14003db62:	add    al,BYTE PTR [rax+0x1]
	...
   14003db6d:	add    BYTE PTR [rax],al
   14003db6f:	add    BYTE PTR [rsi],ch
   14003db71:	(bad)  
   14003db72:	push   r14
   14003db74:	movsxd ebp,DWORD PTR [rax+0x61]
   14003db77:	jb     0x14003dbc7
   14003db79:	outs   dx,DWORD PTR ds:[rsi]
   14003db7a:	fs gs rex
   14003db7d:	add    BYTE PTR [rax],al
   14003db80:	xor    dl,ch
   14003db82:	add    al,BYTE PTR [rax+0x1]
	...
   14003db8d:	add    BYTE PTR [rax],al
   14003db8f:	add    BYTE PTR [rsi],ch
   14003db91:	(bad)  
   14003db92:	push   r14
   14003db94:	jo     0x14003dbf9
   14003db96:	push   0x6f4e7261
   14003db9b:	fs gs rex
   14003db9e:	add    BYTE PTR [rax],sil
   14003dba1:	(bad)  
   14003dba2:	add    al,BYTE PTR [rax+0x1]
	...
   14003dbad:	add    BYTE PTR [rax],al
   14003dbaf:	add    BYTE PTR [rsi],ch
   14003dbb1:	(bad)  
   14003dbb2:	push   r14
   14003dbb4:	jo     0x14003dbfa
   14003dbb6:	rex.WRX (bad) 
   14003dbb8:	ins    DWORD PTR es:[rdi],dx
   14003dbb9:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   14003dbbc:	fs gs rex
   14003dbbf:	add    BYTE PTR [rax],al
   14003dbc2:	add    BYTE PTR [rax],al
   14003dbc4:	add    BYTE PTR [rax],al
   14003dbc6:	add    BYTE PTR [rax],al
   14003dbc8:	xor    dl,ch
   14003dbca:	add    al,BYTE PTR [rax+0x1]
	...
   14003dbd5:	add    BYTE PTR [rax],al
   14003dbd7:	add    BYTE PTR [rsi],ch
   14003dbd9:	(bad)  
   14003dbda:	push   r14
   14003dbdc:	rex.R
   14003dbdd:	rex.WRX (bad) 
   14003dbdf:	ins    DWORD PTR es:[rdi],dx
   14003dbe0:	gs push rbx
   14003dbe2:	je     0x14003dc45
   14003dbe4:	je     0x14003dc5b
   14003dbe6:	jae    0x14003dc36
   14003dbe8:	outs   dx,DWORD PTR ds:[rsi]
   14003dbe9:	fs gs rex
   14003dbec:	add    BYTE PTR [rax],al
   14003dbef:	add    BYTE PTR [rax],dh
   14003dbf1:	(bad)  
   14003dbf2:	add    al,BYTE PTR [rax+0x1]
	...
   14003dbfd:	add    BYTE PTR [rax],al
   14003dbff:	add    BYTE PTR [rsi],ch
   14003dc01:	(bad)  
   14003dc02:	push   r14
   14003dc04:	jo     0x14003dc67
   14003dc06:	imul   esi,DWORD PTR [rdx+0x4e],0x4065646f
   14003dc0d:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140041000 <.pdata>:
   140041000:	rcl    BYTE PTR [rax],1
   140041002:	add    BYTE PTR [rax],al
   140041004:	jrcxz  0x140041016
   140041006:	add    BYTE PTR [rax],al
   140041008:	push   rax
   140041009:	je     0x14004100e
   14004100b:	add    al,dh
   14004100d:	adc    BYTE PTR [rax],al
   14004100f:	add    BYTE PTR [rsi],dl
   140041011:	adc    DWORD PTR [rax],eax
   140041013:	add    BYTE PTR [rdx+rsi*2+0x3],cl
   140041017:	add    BYTE PTR [rax],ah
   140041019:	adc    DWORD PTR [rax],eax
   14004101b:	add    BYTE PTR [rdi+0x11],dl
   14004101e:	add    BYTE PTR [rax],al
   140041020:	fs jb  0x140041026
   140041023:	add    BYTE PTR [rax+0x11],ah
   140041026:	add    BYTE PTR [rax],al
   140041028:	xchg   edi,eax
   140041029:	adc    DWORD PTR [rax],eax
   14004102b:	add    BYTE PTR [rdx+rsi*2+0x3],ch
   14004102f:	add    BYTE PTR [rax-0x11ffffef],ah
   140041035:	adc    DWORD PTR [rax],eax
   140041037:	add    BYTE PTR [rax+0x74],bl
   14004103a:	add    eax,DWORD PTR [rax]
   14004103c:	add    BYTE PTR [rbx],dl
   14004103e:	add    BYTE PTR [rax],al
   140041040:	cmp    DWORD PTR [rip+0x73240000],edx        # 0x1b3281046
   140041046:	add    eax,DWORD PTR [rax]
   140041048:	rex adc eax,0x15a00000
   14004104e:	add    BYTE PTR [rax],al
   140041050:	shl    BYTE PTR [rbx+0x3],0x0
   140041054:	rcl    BYTE PTR [rip+0x16070000],1        # 0x1560b105a
   14004105a:	add    BYTE PTR [rax],al
   14004105c:	push   rsp
   14004105d:	jb     0x140041062
   14004105f:	add    BYTE PTR [rax],ah
   140041061:	(bad)  
   140041062:	add    BYTE PTR [rax],al
   140041064:	rex.WXB (bad) 
   140041066:	add    BYTE PTR [rax],al
   140041068:	xchg   esp,eax
   140041069:	jb     0x14004106e
   14004106b:	add    BYTE PTR [rax+0x16],dl
   14004106e:	add    BYTE PTR [rax],al
   140041070:	jo     0x140041088
   140041072:	add    BYTE PTR [rax],al
   140041074:	mov    eax,0x70000373
   140041079:	(bad)  
   14004107a:	add    BYTE PTR [rax],al
   14004107c:	rcl    BYTE PTR [rsi],0x0
   14004107f:	add    ah,cl
   140041081:	jae    0x140041086
   140041083:	add    al,al
   140041085:	(bad)  
   140041086:	add    BYTE PTR [rax],al
   140041088:	loopne 0x1400410a0
   14004108a:	add    BYTE PTR [rax],al
   14004108c:	pop    rsp
   14004108d:	jb     0x140041092
   14004108f:	add    al,ah
   140041091:	(bad)  
   140041092:	add    BYTE PTR [rax],al
   140041094:	add    BYTE PTR [rdi],dl
   140041096:	add    BYTE PTR [rax],al
   140041098:	mov    WORD PTR [rdx+0x3],?
   14004109b:	add    al,al
   14004109d:	(bad)  
   14004109e:	add    BYTE PTR [rax],al
   1400410a0:	lock (bad) 
   1400410a2:	add    BYTE PTR [rax],al
   1400410a4:	clc    
   1400410a5:	je     0x1400410aa
   1400410a7:	add    al,dh
   1400410a9:	(bad)  
   1400410aa:	add    BYTE PTR [rax],al
   1400410ac:	and    BYTE PTR [rax],bl
   1400410ae:	add    BYTE PTR [rax],al
   1400410b0:	push   0x20000375
   1400410b5:	sbb    BYTE PTR [rax],al
   1400410b7:	add    BYTE PTR [rax+0x18],dl
   1400410ba:	add    BYTE PTR [rax],al
   1400410bc:	xor    BYTE PTR [rbp+0x3],dh
   1400410bf:	add    BYTE PTR [rax+0x19],al
   1400410c2:	add    BYTE PTR [rax],al
   1400410c4:	xchg   ebp,eax
   1400410c5:	sbb    DWORD PTR [rax],eax
   1400410c7:	add    BYTE PTR [rdx+rsi*2+0x3],al
   1400410cb:	add    BYTE PTR [rax-0xaffffe7],ah
   1400410d1:	sbb    DWORD PTR [rax],eax
   1400410d3:	add    BYTE PTR [rax+0x373],dh
   1400410d9:	sbb    al,BYTE PTR [rax]
   1400410db:	add    BYTE PTR [rbp+0x1a],dl
   1400410de:	add    BYTE PTR [rax],al
   1400410e0:	test   BYTE PTR [rdx+0x3],dh
   1400410e3:	add    BYTE PTR [rax+0x3b00001a],dh
   1400410e9:	sbb    eax,DWORD PTR [rax]
   1400410eb:	add    BYTE PTR [rdx+rsi*2+0x3],dh
   1400410ef:	add    BYTE PTR [rax+0x1b],al
   1400410f2:	add    BYTE PTR [rax],al
   1400410f4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400410f5:	sbb    eax,DWORD PTR [rax]
   1400410f7:	add    BYTE PTR [rax],bl
   1400410f9:	jae    0x1400410fe
   1400410fb:	add    BYTE PTR [rax+0x1c],dh
   1400410fe:	add    BYTE PTR [rax],al
   140041100:	mov    BYTE PTR [rax+rax*1],bl
   140041103:	add    BYTE PTR [rax-0x77fffc8f],dh
   140041109:	sbb    al,0x0
   14004110b:	add    BYTE PTR [rsi],dl
   14004110d:	sbb    eax,0x71b80000
   140041112:	add    eax,DWORD PTR [rax]
   140041114:	(bad)  
   140041115:	sbb    eax,0x1d170000
   14004111a:	add    BYTE PTR [rax],al
   14004111c:	shl    BYTE PTR [rcx+0x3],1
   14004111f:	add    BYTE PTR [rdi],dl
   140041121:	sbb    eax,0x1d240000
   140041126:	add    BYTE PTR [rax],al
   140041128:	loopne 0x14004119b
   14004112a:	add    eax,DWORD PTR [rax]
   14004112c:	xor    BYTE PTR [rip+0x1d9b0000],bl        # 0x15d9f1132
   140041132:	add    BYTE PTR [rax],al
   140041134:	shr    BYTE PTR [rbp+0x3],1
   140041137:	add    al,al
   140041139:	sbb    eax,0x1de80000
   14004113e:	add    BYTE PTR [rax],al
   140041140:	fsubr  DWORD PTR [rbx+rax*1+0x0]
   140041144:	lock sbb eax,0x1e180000
   14004114a:	add    BYTE PTR [rax],al
   14004114c:	push   0xffffffffe000036d
   140041151:	(bad)  
   140041152:	add    BYTE PTR [rax],al
   140041154:	adc    DWORD PTR [rax],esp
   140041156:	add    BYTE PTR [rax],al
   140041158:	shr    BYTE PTR [rcx+0x3],0x0
   14004115c:	and    BYTE PTR [rax],ah
   14004115e:	add    BYTE PTR [rax],al
   140041160:	pop    rsp
   140041161:	and    BYTE PTR [rax],al
   140041163:	add    al,cl
   140041165:	imul   eax,DWORD PTR [rbx],0x206000
   14004116b:	add    BYTE PTR [rax+0x78000020],cl
   140041171:	ins    DWORD PTR es:[rdi],dx
   140041172:	add    eax,DWORD PTR [rax]
   140041174:	nop
   140041175:	and    BYTE PTR [rax],al
   140041177:	add    BYTE PTR [rcx+riz*1],al
   14004117a:	add    BYTE PTR [rax],al
   14004117c:	add    BYTE PTR [rdx+0x3],dh
   14004117f:	add    BYTE PTR [rax],dl
   140041181:	and    DWORD PTR [rax],eax
   140041183:	add    BYTE PTR [rbx+0x21],bh
   140041186:	add    BYTE PTR [rax],al
   140041188:	ins    BYTE PTR es:[rdi],dx
   140041189:	jo     0x14004118e
   14004118b:	add    BYTE PTR [rax+0x14000021],ah
   140041191:	and    al,BYTE PTR [rax]
   140041193:	add    al,cl
   140041195:	jo     0x14004119a
   140041197:	add    BYTE PTR [rax-0x35ffffde],dl
   14004119d:	and    al,BYTE PTR [rax]
   14004119f:	add    BYTE PTR [rax],bl
   1400411a1:	outs   dx,BYTE PTR ds:[rsi]
   1400411a2:	add    eax,DWORD PTR [rax]
   1400411a4:	lock and al,BYTE PTR [rax]
   1400411a7:	add    BYTE PTR [rcx],ah
   1400411a9:	and    eax,DWORD PTR [rax]
   1400411ab:	add    al,dl
   1400411ad:	imul   eax,DWORD PTR [rbx],0x233000
   1400411b3:	add    BYTE PTR [rbx+0x23],cl
   1400411b6:	add    BYTE PTR [rax],al
   1400411b8:	sub    BYTE PTR [rbp+0x3],0x0
   1400411bc:	push   rax
   1400411bd:	and    eax,DWORD PTR [rax]
   1400411bf:	add    BYTE PTR [rbp-0x7ffffdd],ah
   1400411c5:	jno    0x1400411ca
   1400411c7:	add    BYTE PTR [rax-0x15ffffdd],dh
   1400411cd:	and    eax,DWORD PTR [rax]
   1400411cf:	add    al,al
   1400411d1:	jo     0x1400411d6
   1400411d3:	add    al,dh
   1400411d5:	and    eax,DWORD PTR [rax]
   1400411d7:	add    BYTE PTR [rcx],bl
   1400411d9:	and    al,0x0
   1400411db:	add    BYTE PTR [rdi+rbp*2+0x3],al
   1400411df:	add    BYTE PTR [rax-0x63ffffdc],al
   1400411e5:	and    al,0x0
   1400411e7:	add    BYTE PTR [rax],ah
   1400411e9:	outs   dx,BYTE PTR ds:[rsi]
   1400411ea:	add    eax,DWORD PTR [rax]
   1400411ec:	movabs al,ds:0xb8000024bc000024
   1400411f5:	jo     0x1400411fa
   1400411f7:	add    al,al
   1400411f9:	and    al,0x0
   1400411fb:	add    al,dh
   1400411fd:	and    al,0x0
   1400411ff:	add    BYTE PTR [rax],dl
   140041201:	jno    0x140041206
   140041203:	add    BYTE PTR [rax+0x26],dh
   140041206:	add    BYTE PTR [rax],al
   140041208:	mov    DWORD PTR [rsi],esp
   14004120a:	add    BYTE PTR [rax],al
   14004120c:	shr    BYTE PTR [rbx+rax*1+0x0],0x90
   140041211:	add    BYTE PTR es:[rax],al
   140041214:	test   eax,0xb8000026
   140041219:	ins    BYTE PTR es:[rdi],dx
   14004121a:	add    eax,DWORD PTR [rax]
   14004121c:	and    BYTE PTR [rdi],ah
   14004121e:	add    BYTE PTR [rax],al
   140041220:	xchg   ecx,eax
   140041221:	(bad)  
   140041222:	add    BYTE PTR [rax],al
   140041224:	cmp    BYTE PTR [rdx+0x3],dh
   140041227:	add    BYTE PTR [rax-0x39ffffd9],ah
   14004122d:	(bad)  
   14004122e:	add    BYTE PTR [rax],al
   140041230:	sub    BYTE PTR [rbx+rax*1+0x0],ch
   140041234:	shl    BYTE PTR [rdi],1
   140041236:	add    BYTE PTR [rax],al
   140041238:	mul    BYTE PTR [rdi]
   14004123a:	add    BYTE PTR [rax],al
   14004123c:	cmp    BYTE PTR [rbx+rax*1+0x0],ch
   140041240:	add    BYTE PTR [rax],ch
   140041242:	add    BYTE PTR [rax],al
   140041244:	sub    BYTE PTR es:[rax],al
   140041247:	add    BYTE PTR [rax+0x6c],bl
   14004124a:	add    eax,DWORD PTR [rax]
   14004124c:	xor    BYTE PTR [rax],ch
   14004124e:	add    BYTE PTR [rax],al
   140041250:	push   rsi
   140041251:	sub    BYTE PTR [rax],al
   140041253:	add    BYTE PTR [rsp+rbp*2],dl
   140041256:	add    eax,DWORD PTR [rax]
   140041258:	(bad)  
   140041259:	sub    BYTE PTR [rax],al
   14004125b:	add    BYTE PTR [rax+0x74000028],dl
   140041261:	ins    BYTE PTR es:[rdi],dx
   140041262:	add    eax,DWORD PTR [rax]
   140041264:	nop
   140041265:	sub    BYTE PTR [rax],al
   140041267:	add    al,cl
   140041269:	sub    BYTE PTR [rax],al
   14004126b:	add    BYTE PTR [rax-0x37fffc94],al
   140041271:	sub    BYTE PTR [rax],al
   140041273:	add    bh,bl
   140041275:	sub    BYTE PTR [rax],al
   140041277:	add    BYTE PTR [rsp+rbp*2+0x28df0003],dl
   14004127e:	add    BYTE PTR [rax],al
   140041280:	icebp  
   140041281:	sub    BYTE PTR [rax],al
   140041283:	add    BYTE PTR [rax+0x36c],ch
   140041289:	sub    DWORD PTR [rax],eax
   14004128b:	add    BYTE PTR [rdi+0x29],dh
   14004128e:	add    BYTE PTR [rax],al
   140041290:	(bad)  
   140041291:	ins    BYTE PTR es:[rdi],dx
   140041292:	add    eax,DWORD PTR [rax]
   140041294:	loopne 0x1400412bf
   140041296:	add    BYTE PTR [rax],al
   140041298:	cmp    DWORD PTR [rdx],ebp
   14004129a:	add    BYTE PTR [rax],al
   14004129c:	loopne 0x14004130a
   14004129e:	add    eax,DWORD PTR [rax]
   1400412a0:	sub    al,BYTE PTR [rax]
   1400412a3:	add    BYTE PTR [rbp-0x33ffffd6],cl
   1400412a9:	outs   dx,BYTE PTR ds:[rsi]
   1400412aa:	add    eax,DWORD PTR [rax]
   1400412ac:	lea    ebp,[rdx]
   1400412ae:	add    BYTE PTR [rax],al
   1400412b0:	and    al,0x2b
   1400412b2:	add    BYTE PTR [rax],al
   1400412b4:	fsubr  DWORD PTR [rsi+0x3]
   1400412b7:	add    BYTE PTR [rbx+rbp*1],ah
   1400412ba:	add    BYTE PTR [rax],al
   1400412bc:	(bad)  
   1400412bd:	sub    eax,DWORD PTR [rax]
   1400412bf:	add    ah,ch
   1400412c1:	outs   dx,BYTE PTR ds:[rsi]
   1400412c2:	add    eax,DWORD PTR [rax]
   1400412c4:	xor    BYTE PTR [rbx],ch
   1400412c6:	add    BYTE PTR [rax],al
   1400412c8:	mov    edx,0x3800002b
   1400412cd:	outs   dx,BYTE PTR ds:[rsi]
   1400412ce:	add    eax,DWORD PTR [rax]
   1400412d0:	shr    BYTE PTR [rbx],0x0
   1400412d3:	add    cl,al
   1400412d5:	sub    al,0x0
   1400412d7:	add    BYTE PTR [rax+0x6a],ch
   1400412da:	add    eax,DWORD PTR [rax]
   1400412dc:	loopne 0x14004130a
   1400412de:	add    BYTE PTR [rax],al
   1400412e0:	pop    rax
   1400412e1:	sub    eax,0x6e300000
   1400412e6:	add    eax,DWORD PTR [rax]
   1400412e8:	shr    BYTE PTR [rip+0x2e1e0000],0x0        # 0x16e2212ef
   1400412ef:	add    BYTE PTR [rax+0x6d],dh
   1400412f2:	add    eax,DWORD PTR [rax]
   1400412f4:	jo     0x140041324
   1400412f6:	add    BYTE PTR [rax],al
   1400412f8:	mov    gs,WORD PTR [rsi]
   1400412fa:	add    BYTE PTR [rax],al
   1400412fc:	push   rsp
   1400412fd:	imul   eax,DWORD PTR [rbx],0x0
   140041300:	mov    gs,WORD PTR [rsi]
   140041302:	add    BYTE PTR [rax],al
   140041304:	mov    al,0x2e
   140041306:	add    BYTE PTR [rax],al
   140041308:	(bad)  
   140041309:	imul   eax,DWORD PTR [rbx],0x0
   14004130c:	mov    al,0x2e
   14004130e:	add    BYTE PTR [rax],al
   140041310:	(bad)  
   140041311:	add    BYTE PTR cs:[rax],al
   140041314:	je     0x140041381
   140041316:	add    eax,DWORD PTR [rax]
   140041318:	(bad)  
   140041319:	add    BYTE PTR cs:[rax],al
   14004131c:	jmp    0x14004134c
   14004131e:	add    BYTE PTR [rax],al
   140041320:	mov    BYTE PTR [rbx+0x3],ch
   140041323:	add    bl,ch
   140041325:	add    BYTE PTR cs:[rax],al
   140041328:	add    ch,BYTE PTR [rdi]
   14004132a:	add    BYTE PTR [rax],al
   14004132c:	pushf  
   14004132d:	imul   eax,DWORD PTR [rbx],0x0
   140041330:	add    ch,BYTE PTR [rdi]
   140041332:	add    BYTE PTR [rax],al
   140041334:	sub    eax,0xac00002f
   140041339:	imul   eax,DWORD PTR [rbx],0x0
   14004133c:	sub    eax,0x3a00002f
   140041341:	(bad)  
   140041342:	add    BYTE PTR [rax],al
   140041344:	mov    esp,0x3000036b
   140041349:	xor    BYTE PTR [rax],al
   14004134b:	add    BYTE PTR [rax+rsi*1+0x0],ah
   14004134f:	add    al,cl
   140041351:	ins    DWORD PTR es:[rdi],dx
   140041352:	add    eax,DWORD PTR [rax]
   140041354:	jo     0x140041386
   140041356:	add    BYTE PTR [rax],al
   140041358:	ret    
   140041359:	xor    BYTE PTR [rax],al
   14004135b:	add    al,al
   14004135d:	outs   dx,BYTE PTR ds:[rsi]
   14004135e:	add    eax,DWORD PTR [rax]
   140041360:	xor    BYTE PTR [rcx],dh
   140041362:	add    BYTE PTR [rax],al
   140041364:	jp     0x14004139a
   140041366:	add    BYTE PTR [rax],al
   140041368:	outs   dx,DWORD PTR fs:[rsi]
   14004136a:	add    eax,DWORD PTR [rax]
   14004136c:	jo     0x1400413a3
   14004136e:	add    BYTE PTR [rax],al
   140041370:	xor    DWORD PTR [rip+0x6efc0000],0x35810003        # 0x1af00137a
   14004137a:	add    BYTE PTR [rax],al
   14004137c:	mov    ecx,0x4000035
   140041381:	outs   dx,DWORD PTR ds:[rsi]
   140041382:	add    eax,DWORD PTR [rax]
   140041384:	mov    ecx,0xbf000035
   140041389:	xor    eax,0x6f1c0000
   14004138e:	add    eax,DWORD PTR [rax]
   140041390:	shl    BYTE PTR [rip+0x35db0000],0x0        # 0x175df1397
   140041397:	add    ah,cl
   140041399:	imul   eax,DWORD PTR [rbx],0x0
   14004139c:	(bad)  [rip+0x35fd0000]        # 0x1760113a2
   1400413a2:	add    BYTE PTR [rax],al
   1400413a4:	fsubr  DWORD PTR [rbx+0x3]
   1400413a7:	add    ch,bh
   1400413a9:	xor    eax,0x36180000
   1400413ae:	add    BYTE PTR [rax],al
   1400413b0:	in     al,dx
   1400413b1:	imul   eax,DWORD PTR [rbx],0x0
   1400413b4:	xor    BYTE PTR [rsi],dh
   1400413b6:	add    BYTE PTR [rax],al
   1400413b8:	pop    rcx
   1400413b9:	add    BYTE PTR ss:[rax],al
   1400413bc:	pop    rsp
   1400413bd:	outs   dx,DWORD PTR ds:[rsi]
   1400413be:	add    eax,DWORD PTR [rax]
   1400413c0:	(bad)  
   1400413c1:	add    BYTE PTR ss:[rax],al
   1400413c4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400413c5:	add    BYTE PTR ss:[rax],al
   1400413c8:	pop    rax
   1400413c9:	jo     0x1400413ce
   1400413cb:	add    BYTE PTR [rax-0x3effffc9],dh
   1400413d1:	(bad)  
   1400413d2:	add    BYTE PTR [rax],al
   1400413d4:	cld    
   1400413d5:	imul   eax,DWORD PTR [rbx],0x0
   1400413d8:	shl    BYTE PTR [rdi],1
   1400413da:	add    BYTE PTR [rax],al
   1400413dc:	loope  0x140041415
   1400413de:	add    BYTE PTR [rax],al
   1400413e0:	fs jo  0x1400413e6
   1400413e3:	add    al,dh
   1400413e5:	(bad)  
   1400413e6:	add    BYTE PTR [rax],al
   1400413e8:	add    DWORD PTR [rax],edi
   1400413ea:	add    BYTE PTR [rax],al
   1400413ec:	add    al,0x6c
   1400413ee:	add    eax,DWORD PTR [rax]
   1400413f0:	adc    BYTE PTR [rax],bh
   1400413f2:	add    BYTE PTR [rax],al
   1400413f4:	rex.RXB cmp BYTE PTR [r8],r8b
   1400413f7:	add    BYTE PTR [rdi+rbp*2],bh
   1400413fa:	add    eax,DWORD PTR [rax]
   1400413fc:	push   rax
   1400413fd:	cmp    BYTE PTR [rax],al
   1400413ff:	add    BYTE PTR [rcx+0x38],bh
   140041402:	add    BYTE PTR [rax],al
   140041404:	mov    eax,0x80000369
   140041409:	cmp    BYTE PTR [rax],al
   14004140b:	add    BYTE PTR [rdi-0x2fffffc8],dh
   140041411:	ins    BYTE PTR es:[rdi],dx
   140041412:	add    eax,DWORD PTR [rax]
   140041414:	sar    BYTE PTR [rax],0x0
   140041417:	add    bh,dh
   140041419:	cmp    BYTE PTR [rax],al
   14004141b:	add    BYTE PTR [rdi+rbp*2],dh
   14004141e:	add    eax,DWORD PTR [rax]
   140041420:	add    BYTE PTR [rcx],bh
   140041422:	add    BYTE PTR [rax],al
   140041424:	sub    DWORD PTR [rcx],edi
   140041426:	add    BYTE PTR [rax],al
   140041428:	mov    al,0x69
   14004142a:	add    eax,DWORD PTR [rax]
   14004142c:	xor    BYTE PTR [rcx],bh
   14004142e:	add    BYTE PTR [rax],al
   140041430:	cmp    DWORD PTR [eax],eax
   140041433:	add    al,cl
   140041435:	ins    BYTE PTR es:[rdi],dx
   140041436:	add    eax,DWORD PTR [rax]
   140041438:	jo     0x140041473
   14004143a:	add    BYTE PTR [rax],al
   14004143c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004143d:	cmp    DWORD PTR [rax],eax
   14004143f:	add    BYTE PTR [rdi+rbp*2],ch
   140041442:	add    eax,DWORD PTR [rax]
   140041444:	mov    al,0x39
   140041446:	add    BYTE PTR [rax],al
   140041448:	fstp   TBYTE PTR [rdx]
   14004144a:	add    BYTE PTR [rax],al
   14004144c:	fsubr  DWORD PTR [rcx+0x3]
   14004144f:	add    BYTE PTR [rax],al
   140041451:	cmp    eax,DWORD PTR [rax]
   140041453:	add    BYTE PTR [rdx],dh
   140041455:	cmp    al,0x0
   140041457:	add    ah,ch
   140041459:	imul   eax,DWORD PTR [rbx],0x3c5000
   14004145f:	add    BYTE PTR [rbp+0x3c],dh
   140041462:	add    BYTE PTR [rax],al
   140041464:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140041466:	add    eax,DWORD PTR [rax]
   140041468:	adc    BYTE PTR [rip+0x3d620000],bh        # 0x17d66146e
   14004146e:	add    BYTE PTR [rax],al
   140041470:	sub    BYTE PTR [rsi+0x3],ch
   140041473:	add    BYTE PTR [rax+0x3d],dh
   140041476:	add    BYTE PTR [rax],al
   140041478:	popf   
   140041479:	cmp    eax,0x6d940000
   14004147e:	add    eax,DWORD PTR [rax]
   140041480:	popf   
   140041481:	cmp    eax,0x3dfa0000
   140041486:	add    BYTE PTR [rax],al
   140041488:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041489:	ins    DWORD PTR es:[rdi],dx
   14004148a:	add    eax,DWORD PTR [rax]
   14004148c:	cli    
   14004148d:	cmp    eax,0x3e0a0000
   140041492:	add    BYTE PTR [rax],al
   140041494:	mov    eax,0x2000036d
   140041499:	add    BYTE PTR ds:[rax],al
   14004149c:	(bad)  
   14004149d:	add    BYTE PTR ds:[rax],al
   1400414a0:	adc    BYTE PTR [rdx+0x3],ch
   1400414a3:	add    BYTE PTR [rax-0x4affffc2],ah
   1400414a9:	add    BYTE PTR ds:[rax],al
   1400414ac:	and    BYTE PTR [rdx+0x3],ch
   1400414af:	add    BYTE PTR [rbp+0x1400003e],dh
   1400414b5:	(bad)  
   1400414b6:	add    BYTE PTR [rax],al
   1400414b8:	sub    BYTE PTR [rdx+0x3],ch
   1400414bb:	add    BYTE PTR [rdi+rdi*1],dl
   1400414be:	add    BYTE PTR [rax],al
   1400414c0:	sub    bh,BYTE PTR [rdi]
   1400414c2:	add    BYTE PTR [rax],al
   1400414c4:	rex push 0x3
   1400414c7:	add    BYTE PTR [rdx],ch
   1400414c9:	(bad)  
   1400414ca:	add    BYTE PTR [rax],al
   1400414cc:	(bad)  
   1400414cd:	(bad)  
   1400414ce:	add    BYTE PTR [rax],al
   1400414d0:	pop    rax
   1400414d1:	push   0x3
   1400414d3:	add    BYTE PTR [rax+0x3f],ah
   1400414d6:	add    BYTE PTR [rax],al
   1400414d8:	jl     0x140041519
   1400414da:	add    BYTE PTR [rax],al
   1400414dc:	test   al,0x69
   1400414de:	add    eax,DWORD PTR [rax]
   1400414e0:	lock (bad) 
   1400414e2:	add    BYTE PTR [rax],al
   1400414e4:	(bad)  
   1400414e5:	add    BYTE PTR [rax],al
   1400414e8:	rex.WR ins BYTE PTR es:[rdi],dx
   1400414ea:	add    eax,DWORD PTR [rax]
   1400414ec:	add    BYTE PTR [rax+0x0],0x0
   1400414f0:	mov    bh,0x40
   1400414f2:	add    BYTE PTR [rax],al
   1400414f4:	or     al,0x6c
   1400414f6:	add    eax,DWORD PTR [rax]
   1400414f8:	rol    BYTE PTR [rax+0x0],0x0
   1400414fc:	mov    eax,DWORD PTR [rcx+0x0]
   1400414ff:	add    BYTE PTR [rdx+rbp*2],al
   140041502:	add    eax,DWORD PTR [rax]
   140041504:	nop
   140041505:	add    BYTE PTR [r8],al
   140041508:	int    0x41
   14004150a:	add    BYTE PTR [rax],al
   14004150c:	cld    
   14004150d:	imul   eax,DWORD PTR [rbx],0x41d000
   140041513:	add    BYTE PTR [rdx+rax*2+0x0],ch
   140041517:	add    BYTE PTR [rax+0x7000036d],cl
   14004151d:	rex.X add BYTE PTR [rax],al
   140041520:	push   rsp
   140041521:	rex.XB add BYTE PTR [r8],al
   140041524:	cmp    al,0x71
   140041526:	add    eax,DWORD PTR [rax]
   140041528:	add    BYTE PTR [rbx+0x0],0x0
   14004152c:	movabs eax,ds:0xb000037198000044
   140041535:	add    BYTE PTR [rax],r8b
   140041538:	rol    DWORD PTR [rax+rax*1+0x0],1
   14004153c:	push   rsp
   14004153d:	outs   dx,DWORD PTR ds:[rsi]
   14004153e:	add    eax,DWORD PTR [rax]
   140041540:	xor    BYTE PTR [rsi+0x0],al
   140041543:	add    BYTE PTR [rdx+0x1c000046],dl
   140041549:	ins    BYTE PTR es:[rdi],dx
   14004154a:	add    eax,DWORD PTR [rax]
   14004154c:	movabs al,ds:0x30000046ed000046
   140041555:	ins    BYTE PTR es:[rdi],dx
   140041556:	add    eax,DWORD PTR [rax]
   140041558:	lock rex.RX add BYTE PTR [rax],r8b
   14004155c:	push   rdx
   14004155d:	rex.RXB add BYTE PTR [r8],r8b
   140041560:	rex ins BYTE PTR es:[rdi],dx
   140041562:	add    eax,DWORD PTR [rax]
   140041564:	rex
   140041565:	rex.W add BYTE PTR [rax],al
   140041568:	add    ecx,DWORD PTR [rdx+0x0]
   14004156b:	add    BYTE PTR [rcx+rsi*2],ch
   14004156e:	add    eax,DWORD PTR [rax]
   140041570:	adc    BYTE PTR [rdx+0x0],cl
   140041573:	add    BYTE PTR [rbx+rcx*2],bl
   140041576:	add    BYTE PTR [rax],al
   140041578:	sbb    al,0x71
   14004157a:	add    eax,DWORD PTR [rax]
   14004157c:	and    BYTE PTR [rbx+0x0],cl
   14004157f:	add    BYTE PTR [rcx+0x4c],bl
   140041582:	add    BYTE PTR [rax],al
   140041584:	rex.W jno 0x14004158a
   140041587:	add    BYTE PTR [rax-0x28ffffb4],ah
   14004158d:	rex.WRB add BYTE PTR [r8],r8b
   140041590:	jo     0x1400415fb
   140041592:	add    eax,DWORD PTR [rax]
   140041594:	test   al,0x4e
   140041596:	add    BYTE PTR [rax],al
   140041598:	leave  
   140041599:	rex.WRX add BYTE PTR [rax],r8b
   14004159c:	test   al,0x75
   14004159e:	add    eax,DWORD PTR [rax]
   1400415a0:	int3   
   1400415a1:	rex.WRX add BYTE PTR [rax],r8b
   1400415a4:	add    al,0x4f
   1400415a6:	add    BYTE PTR [rax],al
   1400415a8:	movabs al,ds:0x2500004f04000375
   1400415b1:	rex.WRXB add BYTE PTR [r8],r8b
   1400415b4:	pushf  
   1400415b5:	jbe    0x1400415ba
   1400415b7:	add    BYTE PTR [rax],ch
   1400415b9:	rex.WRXB add BYTE PTR [r8],r8b
   1400415bc:	rex.WB
   1400415bd:	rex.WRXB add BYTE PTR [r8],r8b
   1400415c0:	xchg   esp,eax
   1400415c1:	jbe    0x1400415c6
   1400415c3:	add    BYTE PTR [rdi+rcx*2+0x0],cl
   1400415c7:	add    BYTE PTR [rbp+0x4f],ch
   1400415ca:	add    BYTE PTR [rax],al
   1400415cc:	adc    BYTE PTR [rsi+0x3],dh
   1400415cf:	add    BYTE PTR [rax+0x4f],dh
   1400415d2:	add    BYTE PTR [rax],al
   1400415d4:	fwait
   1400415d5:	rex.WRXB add BYTE PTR [r8],r8b
   1400415d8:	or     BYTE PTR [rsi+0x3],dh
   1400415db:	add    BYTE PTR [rdi+rcx*2+0x4fbd0000],bl
   1400415e2:	add    BYTE PTR [rax],al
   1400415e4:	sub    al,0x76
   1400415e6:	add    eax,DWORD PTR [rax]
   1400415e8:	ror    BYTE PTR [rdi+0x0],0x0
   1400415ec:	jmp    0x14004163d
   1400415ee:	add    BYTE PTR [rax],al
   1400415f0:	and    al,0x76
   1400415f2:	add    eax,DWORD PTR [rax]
   1400415f4:	in     al,dx
   1400415f5:	rex.WRXB add BYTE PTR [r8],r8b
   1400415f8:	or     eax,0xf4000050
   1400415fd:	jne    0x140041602
   1400415ff:	add    BYTE PTR [rax],dl
   140041601:	push   rax
   140041602:	add    BYTE PTR [rax],al
   140041604:	cmp    dl,BYTE PTR [rax+0x0]
   140041607:	add    ah,ch
   140041609:	jne    0x14004160e
   14004160b:	add    BYTE PTR [rax+rdx*2],bh
   14004160e:	add    BYTE PTR [rax],al
   140041610:	pop    rbp
   140041611:	push   rax
   140041612:	add    BYTE PTR [rax],al
   140041614:	rex.W jbe 0x14004161a
   140041617:	add    BYTE PTR [rax+0x50],ah
   14004161a:	add    BYTE PTR [rax],al
   14004161c:	mov    edx,DWORD PTR [rax+0x0]
   14004161f:	add    BYTE PTR [rax+0x76],al
   140041622:	add    eax,DWORD PTR [rax]
   140041624:	mov    WORD PTR [rax+0x0],ss
   140041627:	add    BYTE PTR [rbp-0x7fffffb0],ch
   14004162d:	jbe    0x140041632
   14004162f:	add    BYTE PTR [rax-0x24ffffb0],dh
   140041635:	push   rax
   140041636:	add    BYTE PTR [rax],al
   140041638:	js     0x1400416b0
   14004163a:	add    eax,DWORD PTR [rax]
   14004163c:	fcom   QWORD PTR [rax+0x0]
   14004163f:	add    BYTE PTR [rdi],cl
   140041641:	push   rcx
   140041642:	add    BYTE PTR [rax],al
   140041644:	int3   
   140041645:	jbe    0x14004164a
   140041647:	add    BYTE PTR [rax],dl
   140041649:	push   rcx
   14004164a:	add    BYTE PTR [rax],al
   14004164c:	push   rbx
   14004164d:	push   rcx
   14004164e:	add    BYTE PTR [rax],al
   140041650:	shl    BYTE PTR [rsi+0x3],0x0
   140041654:	push   rsp
   140041655:	push   rcx
   140041656:	add    BYTE PTR [rax],al
   140041658:	jne    0x1400416ab
   14004165a:	add    BYTE PTR [rax],al
   14004165c:	fs jbe 0x140041662
   14004165f:	add    BYTE PTR [rax+0x51],bh
   140041662:	add    BYTE PTR [rax],al
   140041664:	movabs ds:0xf40003765c000051,al
   14004166d:	push   rcx
   14004166e:	add    BYTE PTR [rax],al
   140041670:	sub    eax,0xb0000052
   140041675:	jne    0x14004167a
   140041677:	add    BYTE PTR [rax],dh
   140041679:	push   rdx
   14004167a:	add    BYTE PTR [rax],al
   14004167c:	pop    rdi
   14004167d:	push   rdx
   14004167e:	add    BYTE PTR [rax],al
   140041680:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041681:	jbe    0x140041686
   140041683:	add    BYTE PTR [rax+0x52],ah
   140041686:	add    BYTE PTR [rax],al
   140041688:	(bad)  
   140041689:	push   rdx
   14004168a:	add    BYTE PTR [rax],al
   14004168c:	sbb    BYTE PTR [rsi+0x3],dh
   14004168f:	add    BYTE PTR [rax-0x40ffffae],dl
   140041695:	push   rdx
   140041696:	add    BYTE PTR [rax],al
   140041698:	xor    al,0x76
   14004169a:	add    eax,DWORD PTR [rax]
   14004169c:	rcl    BYTE PTR [rdx+0x0],0x0
   1400416a0:	out    dx,eax
   1400416a1:	push   rdx
   1400416a2:	add    BYTE PTR [rax],al
   1400416a4:	cld    
   1400416a5:	jne    0x1400416aa
   1400416a7:	add    al,dh
   1400416a9:	push   rdx
   1400416aa:	add    BYTE PTR [rax],al
   1400416ac:	(bad)  
   1400416ad:	push   rbx
   1400416ae:	add    BYTE PTR [rax],al
   1400416b0:	push   rax
   1400416b1:	jbe    0x1400416b6
   1400416b3:	add    BYTE PTR [rax],ah
   1400416b5:	push   rbx
   1400416b6:	add    BYTE PTR [rax],al
   1400416b8:	rex.WRXB push r11
   1400416ba:	add    BYTE PTR [rax],al
   1400416bc:	mov    BYTE PTR [rsi+0x3],dh
   1400416bf:	add    BYTE PTR [rax+0x53],dl
   1400416c2:	add    BYTE PTR [rax],al
   1400416c4:	jg     0x140041719
   1400416c6:	add    BYTE PTR [rax],al
   1400416c8:	fdiv   DWORD PTR [rsi+0x3]
   1400416cb:	add    BYTE PTR [rax-0x50ffffad],al
   1400416d1:	push   rbx
   1400416d2:	add    BYTE PTR [rax],al
   1400416d4:	ins    BYTE PTR es:[rdi],dx
   1400416d5:	jbe    0x1400416da
   1400416d7:	add    BYTE PTR [rax+0x54],dh
   1400416da:	add    BYTE PTR [rax],al
   1400416dc:	mov    bl,0x54
   1400416de:	add    BYTE PTR [rax],al
   1400416e0:	mov    esp,0xb4000375
   1400416e5:	push   rsp
   1400416e6:	add    BYTE PTR [rax],al
   1400416e8:	loopne 0x14004173e
   1400416ea:	add    BYTE PTR [rax],al
   1400416ec:	mov    al,0x76
   1400416ee:	add    eax,DWORD PTR [rax]
   1400416f0:	loopne 0x140041746
   1400416f2:	add    BYTE PTR [rax],al
   1400416f4:	(bad)  
   1400416f5:	push   rbp
   1400416f6:	add    BYTE PTR [rax],al
   1400416f8:	(bad)  
   1400416f9:	jne    0x1400416fe
   1400416fb:	add    BYTE PTR [rax],bl
   1400416fd:	push   rbp
   1400416fe:	add    BYTE PTR [rax],al
   140041700:	rex.WRX push rbp
   140041702:	add    BYTE PTR [rax],al
   140041704:	int3   
   140041705:	jne    0x14004170a
   140041707:	add    BYTE PTR [rax+0x55],dl
   14004170a:	add    BYTE PTR [rax],al
   14004170c:	xchg   BYTE PTR [rbp+0x0],dl
   14004170f:	add    ah,dl
   140041711:	jne    0x140041716
   140041713:	add    BYTE PTR [rax-0x41ffffab],cl
   140041719:	push   rbp
   14004171a:	add    BYTE PTR [rax],al
   14004171c:	fdiv   QWORD PTR [rbp+0x3]
   14004171f:	add    al,al
   140041721:	push   rbp
   140041722:	add    BYTE PTR [rax],al
   140041724:	add    edx,DWORD PTR [rsi+0x0]
   140041727:	add    BYTE PTR [rax+0x4000376],bh
   14004172d:	push   rsi
   14004172e:	add    BYTE PTR [rax],al
   140041730:	cmp    dl,BYTE PTR [rsi+0x0]
   140041733:	add    ah,ah
   140041735:	jne    0x14004173a
   140041737:	add    BYTE PTR [rsi+rdx*2+0x56ce0000],ah
   14004173e:	add    BYTE PTR [rax],al
   140041740:	lock jbe 0x140041746
   140041743:	add    al,dl
   140041745:	push   rsi
   140041746:	add    BYTE PTR [rax],al
   140041748:	or     edx,DWORD PTR [rdi+0x0]
   14004174b:	add    ah,ah
   14004174d:	jbe    0x140041752
   14004174f:	add    BYTE PTR [rdi+rdx*2],cl
   140041752:	add    BYTE PTR [rax],al
   140041754:	jne    0x1400417ad
   140041756:	add    BYTE PTR [rax],al
   140041758:	clc    
   140041759:	jbe    0x14004175e
   14004175b:	add    BYTE PTR [rax-0x3cffffa9],al
   140041761:	push   rdi
   140041762:	add    BYTE PTR [rax],al
   140041764:	rex ja 0x14004176a
   140041767:	add    ah,al
   140041769:	push   rdi
   14004176a:	add    BYTE PTR [rax],al
   14004176c:	(bad)  
   14004176d:	pop    rax
   14004176e:	add    BYTE PTR [rax],al
   140041770:	or     BYTE PTR [rdi+0x3],dh
   140041773:	add    al,dl
   140041775:	pop    rax
   140041776:	add    BYTE PTR [rax],al
   140041778:	(bad)  
   140041779:	pop    rcx
   14004177a:	add    BYTE PTR [rax],al
   14004177c:	rex.W ja 0x140041782
   14004177f:	add    ah,al
   140041781:	pop    rcx
   140041782:	add    BYTE PTR [rax],al
   140041784:	fistp  DWORD PTR [rcx+0x0]
   140041787:	add    BYTE PTR [rax],al
   140041789:	ja     0x14004178e
   14004178b:	add    al,dh
   14004178d:	pop    rcx
   14004178e:	add    BYTE PTR [rax],al
   140041790:	push   rbp
   140041791:	pop    rdi
   140041792:	add    BYTE PTR [rax],al
   140041794:	(bad)  
   140041795:	ja     0x14004179a
   140041797:	add    BYTE PTR [rax+0x5f],bl
   14004179a:	add    BYTE PTR [rax],al
   14004179c:	push   rsp
   14004179d:	(bad)  
   14004179e:	add    BYTE PTR [rax],al
   1400417a0:	fs ja  0x1400417a6
   1400417a3:	add    BYTE PTR [rcx+riz*2+0x0],dl
   1400417a7:	add    BYTE PTR [rdx+0x61],ch
   1400417aa:	add    BYTE PTR [rax],al
   1400417ac:	je     0x140041825
   1400417ae:	add    eax,DWORD PTR [rax]
   1400417b0:	ins    BYTE PTR es:[rdi],dx
   1400417b1:	(bad)  
   1400417b2:	add    BYTE PTR [rax],al
   1400417b4:	push   0x7c000062
   1400417b9:	ja     0x1400417be
   1400417bb:	add    BYTE PTR [rax+0x62],ch
   1400417be:	add    BYTE PTR [rax],al
   1400417c0:	retf   0x64
   1400417c3:	add    BYTE PTR [rdi+rsi*2+0x64cc0003],dl
   1400417ca:	add    BYTE PTR [rax],al
   1400417cc:	sbb    esp,DWORD PTR [rbp+0x0]
   1400417cf:	add    BYTE PTR [rdi+rsi*2+0x65700003],bl
   1400417d6:	add    BYTE PTR [rax],al
   1400417d8:	xor    eax,0xa4000066
   1400417dd:	ja     0x1400417e2
   1400417df:	add    BYTE PTR [rax],bh
   1400417e1:	data16 add BYTE PTR [rax],al
   1400417e4:	xchg   ecx,eax
   1400417e5:	data16 add BYTE PTR [rax],al
   1400417e8:	mov    BYTE PTR [rax+0x3],bh
   1400417eb:	add    BYTE PTR [rsi+riz*2+0x670a0000],dl
   1400417f2:	add    BYTE PTR [rax],al
   1400417f4:	mov    ah,0x77
   1400417f6:	add    eax,DWORD PTR [rax]
   1400417f8:	or     al,0x67
   1400417fa:	add    BYTE PTR [rax],al
   1400417fc:	(bad)  
   1400417fd:	add    BYTE PTR [eax],al
   140041800:	jo     0x14004187a
   140041802:	add    eax,DWORD PTR [rax]
   140041804:	fsub   DWORD PTR [rdi+0x0]
   140041807:	add    BYTE PTR [rcx+rbp*2],al
   14004180a:	add    BYTE PTR [rax],al
   14004180c:	push   rsp
   14004180d:	js     0x140041812
   14004180f:	add    BYTE PTR [rcx+rbp*2],al
   140041812:	add    BYTE PTR [rax],al
   140041814:	cwde   
   140041815:	imul   eax,DWORD PTR [rax],0x377c800
   14004181b:	add    BYTE PTR [rax+0x39000069],bl
   140041821:	push   0x0
   140041823:	add    BYTE PTR [rax+0x3c000378],bh
   140041829:	push   0x0
   14004182b:	add    BYTE PTR [rbp+0xc00006a],cl
   140041831:	js     0x140041836
   140041833:	add    BYTE PTR [rax-0x2cffff96],dl
   140041839:	push   0x0
   14004183b:	add    al,ch
   14004183d:	ja     0x140041842
   14004183f:	add    ah,dl
   140041841:	push   0x0
   140041843:	add    BYTE PTR [rdx],dh
   140041845:	imul   eax,DWORD PTR [rax],0x0
   140041848:	fdiv   QWORD PTR [rdi+0x3]
   14004184b:	add    BYTE PTR [rbx+rbp*2],dh
   14004184e:	add    BYTE PTR [rax],al
   140041850:	imul   rax,QWORD PTR [r8],0x0
   140041854:	xor    al,0x78
   140041856:	add    eax,DWORD PTR [rax]
   140041858:	imul   r8,QWORD PTR [rax],0x0
   14004185c:	(bad)  
   14004185d:	imul   eax,DWORD PTR [rax],0x0
   140041860:	cmp    al,0x78
   140041862:	add    eax,DWORD PTR [rax]
   140041864:	imul   eax,DWORD PTR fs:[rax],0x0
   140041868:	xchg   esi,eax
   140041869:	imul   eax,DWORD PTR [rax],0x0
   14004186c:	lock ja 0x140041872
   14004186f:	add    BYTE PTR [rbx+rbp*2+0x6bbf0000],ah
   140041876:	add    BYTE PTR [rax],al
   140041878:	rex.R js 0x14004187e
   14004187b:	add    al,al
   14004187d:	imul   eax,DWORD PTR [rax],0x0
   140041880:	fld    TBYTE PTR [rbx+0x0]
   140041883:	add    BYTE PTR [rax+rdi*2+0x3],cl
   140041887:	add    ah,bl
   140041889:	imul   eax,DWORD PTR [rax],0x0
   14004188c:	std    
   14004188d:	ins    BYTE PTR es:[rdi],dx
   14004188e:	add    BYTE PTR [rax],al
   140041890:	clc    
   140041891:	ja     0x140041896
   140041893:	add    BYTE PTR [rax],al
   140041895:	ins    DWORD PTR es:[rdi],dx
   140041896:	add    BYTE PTR [rax],al
   140041898:	xchg   DWORD PTR [rbp+0x0],ebp
   14004189b:	add    BYTE PTR [rax-0x6ffffc88],ch
   1400418a1:	ins    DWORD PTR es:[rdi],dx
   1400418a2:	add    BYTE PTR [rax],al
   1400418a4:	(bad)  
   1400418a5:	outs   dx,BYTE PTR ds:[rsi]
   1400418a6:	add    BYTE PTR [rax],al
   1400418a8:	cwde   
   1400418a9:	js     0x1400418ae
   1400418ab:	add    BYTE PTR [rax],dh
   1400418ad:	outs   dx,BYTE PTR ds:[rsi]
   1400418ae:	add    BYTE PTR [rax],al
   1400418b0:	jle    0x140041920
   1400418b2:	add    BYTE PTR [rax],al
   1400418b4:	sar    BYTE PTR [rax+0x3],1
   1400418b7:	add    BYTE PTR [rax+0x5700006e],dl
   1400418bd:	outs   dx,DWORD PTR ds:[rsi]
   1400418be:	add    BYTE PTR [rax],al
   1400418c0:	fdivr  DWORD PTR [rax+0x3]
   1400418c3:	add    BYTE PTR [rax+0x6f],dh
   1400418c6:	add    BYTE PTR [rax],al
   1400418c8:	(bad)  
   1400418c9:	jno    0x1400418cb
   1400418cb:	add    al,ah
   1400418cd:	js     0x1400418d2
   1400418cf:	add    al,al
   1400418d1:	jno    0x1400418d3
   1400418d3:	add    dh,bl
   1400418d5:	jno    0x1400418d7
   1400418d7:	add    ah,ah
   1400418d9:	js     0x1400418de
   1400418db:	add    al,ah
   1400418dd:	jno    0x1400418df
   1400418df:	add    dh,bh
   1400418e1:	jno    0x1400418e3
   1400418e3:	add    ah,ch
   1400418e5:	js     0x1400418ea
   1400418e7:	add    BYTE PTR [rax],al
   1400418e9:	jb     0x1400418eb
   1400418eb:	add    BYTE PTR [rcx],bh
   1400418ed:	jb     0x1400418ef
   1400418ef:	add    ah,bh
   1400418f1:	js     0x1400418f6
   1400418f3:	add    BYTE PTR [rdx+rsi*2+0x0],cl
   1400418f7:	add    BYTE PTR [rdx+0x72],ch
   1400418fa:	add    BYTE PTR [rax],al
   1400418fc:	hlt    
   1400418fd:	js     0x140041902
   1400418ff:	add    BYTE PTR [rbx+rsi*2],bl
   140041902:	add    BYTE PTR [rax],al
   140041904:	cs jae 0x140041907
   140041907:	add    BYTE PTR [rax+0x79],al
   14004190a:	add    eax,DWORD PTR [rax]
   14004190c:	xor    BYTE PTR [rbx+0x0],dh
   14004190f:	add    BYTE PTR [rcx+0x10000074],bh
   140041915:	jns    0x14004191a
   140041917:	add    BYTE PTR [rax],cl
   140041919:	jne    0x14004191b
   14004191b:	add    BYTE PTR [rsi*2+0x79080000],dh
   140041922:	add    eax,DWORD PTR [rax]
   140041924:	push   rax
   140041925:	jne    0x140041927
   140041927:	add    al,bh
   140041929:	jne    0x14004192b
   14004192b:	add    BYTE PTR [rax+0x79],cl
   14004192e:	add    eax,DWORD PTR [rax]
   140041930:	clc    
   140041931:	jne    0x140041933
   140041933:	add    BYTE PTR [rcx],bl
   140041935:	jbe    0x140041937
   140041937:	add    ah,cl
   140041939:	jns    0x14004193e
   14004193b:	add    BYTE PTR [rsi+rsi*2],bl
   14004193e:	add    BYTE PTR [rax],al
   140041940:	cmp    eax,0xc4000076
   140041945:	jns    0x14004194a
   140041947:	add    BYTE PTR [rax+0x76],al
   14004194a:	add    BYTE PTR [rax],al
   14004194c:	(bad)  
   14004194d:	jbe    0x14004194f
   14004194f:	add    BYTE PTR [rcx+rdi*2+0x76640003],dl
   140041956:	add    BYTE PTR [rax],al
   140041958:	mov    ?,WORD PTR [rsi+0x0]
   14004195b:	add    BYTE PTR [rcx+rdi*2+0x76900003],cl
   140041962:	add    BYTE PTR [rax],al
   140041964:	mov    cl,0x76
   140041966:	add    BYTE PTR [rax],al
   140041968:	mov    al,0x79
   14004196a:	add    eax,DWORD PTR [rax]
   14004196c:	mov    ah,0x76
   14004196e:	add    BYTE PTR [rax],al
   140041970:	fidiv  WORD PTR [rsi+0x0]
   140041973:	add    BYTE PTR [rax-0x1ffffc87],ch
   140041979:	jbe    0x14004197b
   14004197b:	add    BYTE PTR [rip+0x4c000077],cl        # 0x18c0419f8
   140041981:	jns    0x140041986
   140041983:	add    BYTE PTR [rdi+rsi*2],ch
   140041986:	add    BYTE PTR [rax],al
   140041988:	push   rsi
   140041989:	ja     0x14004198b
   14004198b:	add    BYTE PTR [rcx+rdi*2+0x3],dl
   14004198f:	add    BYTE PTR [rax-0xbffff89],dh
   140041995:	ja     0x140041997
   140041997:	add    BYTE PTR [rcx+rdi*2+0x3],bl
   14004199b:	add    ah,dh
   14004199d:	ja     0x14004199f
   14004199f:	add    BYTE PTR [rip+0xffffffffd4000078],ch        # 0x114041a1d
   1400419a5:	jns    0x1400419aa
   1400419a7:	add    BYTE PTR [rax],dh
   1400419a9:	js     0x1400419ab
   1400419ab:	add    BYTE PTR [rcx+0x78],ch
   1400419ae:	add    BYTE PTR [rax],al
   1400419b0:	pushf  
   1400419b1:	jns    0x1400419b6
   1400419b3:	add    BYTE PTR [rax+rdi*2+0x0],ch
   1400419b7:	add    BYTE PTR [rbp-0x47ffff88],ah
   1400419bd:	jns    0x1400419c2
   1400419bf:	add    BYTE PTR [rax-0x1effff88],ch
   1400419c5:	js     0x1400419c7
   1400419c7:	add    BYTE PTR [rax-0x1bfffc87],al
   1400419cd:	js     0x1400419cf
   1400419cf:	add    BYTE PTR [rsi],bh
   1400419d1:	jns    0x1400419d3
   1400419d3:	add    BYTE PTR [rax+0x79],ch
   1400419d6:	add    eax,DWORD PTR [rax]
   1400419d8:	rex jns 0x1400419db
   1400419db:	add    BYTE PTR [rdi+0x79],ah
   1400419de:	add    BYTE PTR [rax],al
   1400419e0:	js     0x140041a5b
   1400419e2:	add    eax,DWORD PTR [rax]
   1400419e4:	cwde   
   1400419e5:	jns    0x1400419e7
   1400419e7:	add    ch,ch
   1400419e9:	jns    0x1400419eb
   1400419eb:	add    al,ah
   1400419ed:	jns    0x1400419f2
   1400419ef:	add    al,dh
   1400419f1:	jns    0x1400419f3
   1400419f3:	add    ch,dl
   1400419f5:	jnp    0x1400419f7
   1400419f7:	add    al,ch
   1400419f9:	jns    0x1400419fe
   1400419fb:	add    al,ah
   1400419fd:	jnp    0x1400419ff
   1400419ff:	add    BYTE PTR [rcx],dl
   140041a01:	jl     0x140041a03
   140041a03:	add    BYTE PTR [rax],cl
   140041a05:	jp     0x140041a0a
   140041a07:	add    BYTE PTR [rsp+rdi*2],dl
   140041a0a:	add    BYTE PTR [rax],al
   140041a0c:	fs jl  0x140041a0f
   140041a0f:	add    BYTE PTR [rax],ah
   140041a11:	jp     0x140041a16
   140041a13:	add    BYTE PTR [rsp+rdi*2+0x0],ah
   140041a17:	add    BYTE PTR [rdx],bl
   140041a19:	jge    0x140041a1b
   140041a1b:	add    BYTE PTR [rax],dl
   140041a1d:	jp     0x140041a22
   140041a1f:	add    BYTE PTR [rdi*2+0x7d830000],dh
   140041a26:	add    BYTE PTR [rax],al
   140041a28:	xor    BYTE PTR [rdx+0x3],bh
   140041a2b:	add    BYTE PTR [rbp+rdi*2+0x7db70000],al
   140041a32:	add    BYTE PTR [rax],al
   140041a34:	sub    BYTE PTR [rdx+0x3],bh
   140041a37:	add    al,al
   140041a39:	jge    0x140041a3b
   140041a3b:	add    ch,bh
   140041a3d:	jge    0x140041a3f
   140041a3f:	add    BYTE PTR [rdx+rdi*2],bh
   140041a42:	add    eax,DWORD PTR [rax]
   140041a44:	add    BYTE PTR [rsi+0x0],bh
   140041a47:	add    BYTE PTR [rax],al
   140041a49:	jg     0x140041a4b
   140041a4b:	add    BYTE PTR [rax+0x7a],bh
   140041a4e:	add    eax,DWORD PTR [rax]
   140041a50:	add    BYTE PTR [rdi+0x0],bh
   140041a53:	add    BYTE PTR [rip+0xffffffff90000080],dl        # 0xd0041ad9
   140041a59:	jp     0x140041a5e
   140041a5b:	add    BYTE PTR [rax],bl
   140041a5d:	add    BYTE PTR [rax],0x0
   140041a60:	pop    rcx
   140041a61:	add    BYTE PTR [rax],0x0
   140041a64:	push   rsp
   140041a65:	jp     0x140041a6a
   140041a67:	add    BYTE PTR [rax+rax*4+0x0],bl
   140041a6b:	add    BYTE PTR [rdx-0x80],dh
   140041a6e:	add    BYTE PTR [rax],al
   140041a70:	rex.WR jp 0x140041a76
   140041a73:	add    BYTE PTR [rax+rax*4+0x0],dh
   140041a77:	add    BYTE PTR [rdx+0x64000081],bh
   140041a7d:	jp     0x140041a82
   140041a7f:	add    BYTE PTR [rcx+rax*4-0x7e1e0000],bh
   140041a86:	add    BYTE PTR [rax],al
   140041a88:	rex.R jp 0x140041a8e
   140041a8b:	add    BYTE PTR [rdx+rax*4],al
   140041a8e:	add    BYTE PTR [rax],al
   140041a90:	(bad)  
   140041a91:	(bad)  
   140041a92:	add    BYTE PTR [rax],al
   140041a94:	pop    rsp
   140041a95:	jp     0x140041a9a
   140041a97:	add    BYTE PTR [rdx+rax*4-0x7d160000],dh
   140041a9e:	add    BYTE PTR [rax],al
   140041aa0:	test   al,0x7a
   140041aa2:	add    eax,DWORD PTR [rax]
   140041aa4:	in     al,dx
   140041aa5:	(bad)  
   140041aa6:	add    BYTE PTR [rax],al
   140041aa8:	and    al,BYTE PTR [rbx+0x7ab00000]
   140041aae:	add    eax,DWORD PTR [rax]
   140041ab0:	and    al,0x83
   140041ab2:	add    BYTE PTR [rax],al
   140041ab4:	outs   dx,DWORD PTR ds:[rsi]
   140041ab5:	add    DWORD PTR [rax],0x0
   140041ab8:	jo     0x140041b34
   140041aba:	add    eax,DWORD PTR [rax]
   140041abc:	jo     0x140041a41
   140041abe:	add    BYTE PTR [rax],al
   140041ac0:	rol    BYTE PTR [rbx+0x7ab80000],1
   140041ac6:	add    eax,DWORD PTR [rax]
   140041ac8:	rol    BYTE PTR [rbx-0x7bf70000],1
   140041ace:	add    BYTE PTR [rax],al
   140041ad0:	int3   
   140041ad1:	jp     0x140041ad6
   140041ad3:	add    BYTE PTR [rsp+rax*4],ah
   140041ad6:	add    BYTE PTR [rax],al
   140041ad8:	mov    ecx,0xd8000085
   140041add:	jp     0x140041ae2
   140041adf:	add    al,cl
   140041ae1:	test   DWORD PTR [rax],eax
   140041ae3:	add    BYTE PTR [rcx],al
   140041ae5:	xchg   BYTE PTR [rax],al
   140041ae7:	add    BYTE PTR [rax],dl
   140041ae9:	jnp    0x140041aee
   140041aeb:	add    BYTE PTR [rsi+rax*4],al
   140041aee:	add    BYTE PTR [rax],al
   140041af0:	add    DWORD PTR [rsi+0x7b380000],0x3
   140041af7:	add    BYTE PTR [rsi+rax*4-0x79020000],al
   140041afe:	add    BYTE PTR [rax],al
   140041b00:	and    BYTE PTR [rbx+0x3],bh
   140041b03:	add    BYTE PTR [rax],al
   140041b05:	xchg   DWORD PTR [rax],eax
   140041b07:	add    BYTE PTR [rcx+0x50000087],al
   140041b0d:	jnp    0x140041b12
   140041b0f:	add    BYTE PTR [rdi+rax*4-0x77f80000],al
   140041b16:	add    BYTE PTR [rax],al
   140041b18:	push   0x1800037b
   140041b1d:	mov    BYTE PTR [rax],al
   140041b1f:	add    BYTE PTR [rdi],bh
   140041b21:	mov    BYTE PTR [rax],al
   140041b23:	add    BYTE PTR [rax],bl
   140041b25:	jnp    0x140041b2a
   140041b27:	add    BYTE PTR [rax-0x78],al
   140041b2a:	add    BYTE PTR [rax],al
   140041b2c:	and    DWORD PTR [rdx+0x7b800000],ecx
   140041b32:	add    eax,DWORD PTR [rax]
   140041b34:	and    al,0x8a
   140041b36:	add    BYTE PTR [rax],al
   140041b38:	enter  0x8b,0x0
   140041b3c:	pushf  
   140041b3d:	jnp    0x140041b42
   140041b3f:	add    al,dl
   140041b41:	mov    eax,DWORD PTR [rax]
   140041b43:	add    ah,ah
   140041b45:	mov    eax,DWORD PTR [rax]
   140041b47:	add    BYTE PTR [rax],cl
   140041b49:	jl     0x140041b4e
   140041b4b:	add    ah,ah
   140041b4d:	mov    eax,DWORD PTR [rax]
   140041b4f:	add    dh,dl
   140041b51:	mov    WORD PTR [rax],es
   140041b53:	add    al,cl
   140041b55:	jnp    0x140041b5a
   140041b57:	add    al,dh
   140041b59:	mov    WORD PTR [rax],es
   140041b5b:	add    BYTE PTR [rbp-0x73],dl
   140041b5e:	add    BYTE PTR [rax],al
   140041b60:	hlt    
   140041b61:	jnp    0x140041b66
   140041b63:	add    BYTE PTR [rax-0x73],bl
   140041b66:	add    BYTE PTR [rax],al
   140041b68:	jbe    0x140041af7
   140041b6a:	add    BYTE PTR [rax],al
   140041b6c:	mov    al,0x7b
   140041b6e:	add    eax,DWORD PTR [rax]
   140041b70:	js     0x140041aff
   140041b72:	add    BYTE PTR [rax],al
   140041b74:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140041b75:	lea    eax,[rax]
   140041b77:	add    BYTE PTR [rax-0x57fffc85],bh
   140041b7d:	lea    eax,[rax]
   140041b7f:	add    bl,ah
   140041b81:	lea    eax,[rax]
   140041b83:	add    al,al
   140041b85:	jnp    0x140041b8a
   140041b87:	add    ah,ah
   140041b89:	lea    eax,[rax]
   140041b8b:	add    BYTE PTR [rdi],bl
   140041b8d:	mov    es,WORD PTR [rax]
   140041b8f:	add    al,ch
   140041b91:	jnp    0x140041b96
   140041b93:	add    BYTE PTR [rax],ah
   140041b95:	mov    es,WORD PTR [rax]
   140041b97:	add    BYTE PTR [rbx+0x1000008f],ch
   140041b9d:	jl     0x140041ba2
   140041b9f:	add    BYTE PTR [rdi+rcx*4-0x6fac0000],ch
   140041ba6:	add    BYTE PTR [rax],al
   140041ba8:	rex.W jl 0x140041bae
   140041bab:	add    BYTE PTR [rax+rdx*4+0x0],ch
   140041baf:	add    BYTE PTR [rdx],al
   140041bb1:	fwait
   140041bb2:	add    BYTE PTR [rax],al
   140041bb4:	and    al,0x7c
   140041bb6:	add    eax,DWORD PTR [rax]
   140041bb8:	sbb    al,0x9b
   140041bba:	add    BYTE PTR [rax],al
   140041bbc:	push   rbx
   140041bbd:	fwait
   140041bbe:	add    BYTE PTR [rax],al
   140041bc0:	push   rax
   140041bc1:	jl     0x140041bc6
   140041bc3:	add    BYTE PTR [rbx+rbx*4+0x0],dl
   140041bc7:	add    BYTE PTR [rbp+0x5800009b],ah
   140041bcd:	jl     0x140041bd2
   140041bcf:	add    BYTE PTR [rax+0x4100009b],ch
   140041bd5:	pushf  
   140041bd6:	add    BYTE PTR [rax],al
   140041bd8:	ins    BYTE PTR es:[rdi],dx
   140041bd9:	jl     0x140041bde
   140041bdb:	add    BYTE PTR [rsp+rbx*4+0x0],al
   140041bdf:	add    BYTE PTR [rsp+rbx*4+0x0],ah
   140041be3:	add    BYTE PTR [rsp+rdi*2-0x639bfffd],bl
   140041bea:	add    BYTE PTR [rax],al
   140041bec:	mov    dl,0x9c
   140041bee:	add    BYTE PTR [rax],al
   140041bf0:	mov    ah,0x7c
   140041bf2:	add    eax,DWORD PTR [rax]
   140041bf4:	mov    ah,0x9c
   140041bf6:	add    BYTE PTR [rax],al
   140041bf8:	(bad)  
   140041bf9:	pushf  
   140041bfa:	add    BYTE PTR [rax],al
   140041bfc:	test   BYTE PTR [rbx+rax*1+0x0],bh
   140041c00:	(bad)  
   140041c01:	pushf  
   140041c02:	add    BYTE PTR [rax],al
   140041c04:	setge  BYTE PTR [rax]
   140041c07:	add    BYTE PTR [rsp+rdi*2-0x62effffd],ch
   140041c0e:	add    BYTE PTR [rax],al
   140041c10:	rex.WXB popf 
   140041c12:	add    BYTE PTR [rax],al
   140041c14:	xchg   esp,eax
   140041c15:	jl     0x140041c1a
   140041c17:	add    BYTE PTR [rbp+rbx*4-0x622a0000],bl
   140041c1e:	add    BYTE PTR [rax],al
   140041c20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041c21:	jl     0x140041c26
   140041c23:	add    al,bl
   140041c25:	popf   
   140041c26:	add    BYTE PTR [rax],al
   140041c28:	adc    bl,BYTE PTR [rsi+0x7c8c0000]
   140041c2e:	add    eax,DWORD PTR [rax]
   140041c30:	adc    al,0x9e
   140041c32:	add    BYTE PTR [rax],al
   140041c34:	xor    DWORD PTR [rsi+0x7cc00000],ebx
   140041c3a:	add    eax,DWORD PTR [rax]
   140041c3c:	xor    al,0x9e
   140041c3e:	add    BYTE PTR [rax],al
   140041c40:	mov    al,0x9e
   140041c42:	add    BYTE PTR [rax],al
   140041c44:	enter  0x37c,0x0
   140041c48:	mov    al,0x9e
   140041c4a:	add    BYTE PTR [rax],al
   140041c4c:	iret   
   140041c4d:	sahf   
   140041c4e:	add    BYTE PTR [rax],al
   140041c50:	add    BYTE PTR [rbp+0x3],bh
   140041c53:	add    al,dl
   140041c55:	sahf   
   140041c56:	add    BYTE PTR [rax],al
   140041c58:	loope  0x140041bf8
   140041c5a:	add    BYTE PTR [rax],al
   140041c5c:	clc    
   140041c5d:	jl     0x140041c62
   140041c5f:	add    ah,ah
   140041c61:	sahf   
   140041c62:	add    BYTE PTR [rax],al
   140041c64:	rex.WB lahf 
   140041c66:	add    BYTE PTR [rax],al
   140041c68:	or     BYTE PTR [rbp+0x3],bh
   140041c6b:	add    BYTE PTR [rdi+rbx*4+0x0],cl
   140041c6f:	add    BYTE PTR [rip+0x100000a0],al        # 0x150041d15
   140041c75:	jge    0x140041c7a
   140041c77:	add    BYTE PTR [rax],cl
   140041c79:	movabs al,ds:0x7d400000a12f0000
   140041c82:	add    eax,DWORD PTR [rax]
   140041c84:	xor    BYTE PTR [rcx-0x5d9d0000],ah
   140041c8a:	add    BYTE PTR [rax],al
   140041c8c:	and    BYTE PTR [rbp+0x3],bh
   140041c8f:	add    BYTE PTR [rdx+riz*4+0x0],bh
   140041c93:	add    BYTE PTR [rdi+0x740000a3],ch
   140041c99:	jge    0x140041c9e
   140041c9b:	add    BYTE PTR [rax-0x13ffff5d],dh
   140041ca1:	movabs ds:0xa3ec00037db80000,eax
   140041caa:	add    BYTE PTR [rax],al
   140041cac:	adc    BYTE PTR [rax+rax*1+0x37d6000],ah
   140041cb3:	add    BYTE PTR [rax],dl
   140041cb5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041cb6:	add    BYTE PTR [rax],al
   140041cb8:	xchg   edx,eax
   140041cb9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041cba:	add    BYTE PTR [rax],al
   140041cbc:	push   0xffffffff9400037d
   140041cc1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041cc2:	add    BYTE PTR [rax],al
   140041cc4:	push   rsi
   140041cc5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140041cc6:	add    BYTE PTR [rax],al
   140041cc8:	sar    BYTE PTR [rbp+0x3],0x0
   140041ccc:	pop    rax
   140041ccd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140041cce:	add    BYTE PTR [rax],al
   140041cd0:	xlat   BYTE PTR ds:[rbx]
   140041cd1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140041cd2:	add    BYTE PTR [rax],al
   140041cd4:	add    al,0x7e
   140041cd6:	add    eax,DWORD PTR [rax]
   140041cd8:	fsub   DWORD PTR [rbp-0x5a040000]
   140041cde:	add    BYTE PTR [rax],al
   140041ce0:	or     al,0x7e
   140041ce2:	add    eax,DWORD PTR [rax]
   140041ce4:	cld    
   140041ce5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140041ce6:	add    BYTE PTR [rax],al
   140041ce8:	push   0xffffffffffffffa6
   140041cea:	add    BYTE PTR [rax],al
   140041cec:	cld    
   140041ced:	jg     0x140041cf2
   140041cef:	add    BYTE PTR [rsi+riz*4+0x0],ch
   140041cf3:	add    BYTE PTR [rbp-0x17ffff5a],cl
   140041cf9:	jle    0x140041cfe
   140041cfb:	add    BYTE PTR [rax-0x45ffff5a],dl
   140041d01:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140041d02:	add    BYTE PTR [rax],al
   140041d04:	loopne 0x140041d84
   140041d06:	add    eax,DWORD PTR [rax]
   140041d08:	int3   
   140041d09:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140041d0a:	add    BYTE PTR [rax],al
   140041d0c:	add    eax,0xf00000a7
   140041d11:	jle    0x140041d16
   140041d13:	add    BYTE PTR [rax],cl
   140041d15:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140041d16:	add    BYTE PTR [rax],al
   140041d18:	leave  
   140041d19:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140041d1a:	add    BYTE PTR [rax],al
   140041d1c:	fs jg  0x140041d22
   140041d1f:	add    ah,cl
   140041d21:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140041d22:	add    BYTE PTR [rax],al
   140041d24:	push   rbp
   140041d25:	test   al,0x0
   140041d27:	add    al,dh
   140041d29:	jg     0x140041d2e
   140041d2b:	add    BYTE PTR [rax-0x58],bl
   140041d2e:	add    BYTE PTR [rax],al
   140041d30:	or     al,0xad
   140041d32:	add    BYTE PTR [rax],al
   140041d34:	rex.W jg 0x140041d3a
   140041d37:	add    BYTE PTR [rbp*4-0x508f0000],cl
   140041d3e:	add    BYTE PTR [rax],al
   140041d40:	sar    BYTE PTR [rdi+0x3],1
   140041d43:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   140041d47:	add    BYTE PTR [rbx-0x50],cl
   140041d4a:	add    BYTE PTR [rax],al
   140041d4c:	and    al,0x80
   140041d4e:	add    eax,DWORD PTR [rax]
   140041d50:	rex.WR mov al,0x0
   140041d53:	add    bl,dl
   140041d55:	mov    al,0x0
   140041d57:	add    BYTE PTR [rax-0x80],al
   140041d5a:	add    eax,DWORD PTR [rax]
   140041d5c:	call   0x141041e11
   140041d61:	mov    cl,0x0
   140041d63:	add    BYTE PTR [rsi+rdi*2-0x4efbfffd],al
   140041d6a:	add    BYTE PTR [rax],al
   140041d6c:	ret    
   140041d6d:	mov    cl,0x0
   140041d6f:	add    BYTE PTR [rsi+rdi*2+0x3],ch
   140041d73:	add    al,dh
   140041d75:	mov    cl,0x0
   140041d77:	add    BYTE PTR [rsi+0x7c0000b2],ah
   140041d7d:	jg     0x140041d82
   140041d7f:	add    BYTE PTR [rax-0x8ffff4e],ch
   140041d85:	mov    ah,0x0
   140041d87:	add    BYTE PTR [rax+rax*4+0x3],ch
   140041d8b:	add    al,bh
   140041d8d:	mov    ah,0x0
   140041d8f:	add    bl,bh
   140041d91:	mov    dh,0x0
   140041d93:	add    BYTE PTR [rsi+rdi*2-0x4903fffd],cl
   140041d9a:	add    BYTE PTR [rax],al
   140041d9c:	rex.XB mov r15b,0x0
   140041d9f:	add    BYTE PTR [rax+0x7e],bl
   140041da2:	add    eax,DWORD PTR [rax]
   140041da4:	rex.R mov dil,0x0
   140041da7:	add    BYTE PTR [rdx],bh
   140041da9:	mov    ecx,0x7e140000
   140041dae:	add    eax,DWORD PTR [rax]
   140041db0:	rex.R mov ecx,0xba050000
   140041db6:	add    BYTE PTR [rax],al
   140041db8:	rex.WR jle 0x140041dbe
   140041dbb:	add    BYTE PTR [rax],cl
   140041dbd:	mov    edx,0xbb5f0000
   140041dc2:	add    BYTE PTR [rax],al
   140041dc4:	(bad)  
   140041dc5:	jle    0x140041dca
   140041dc7:	add    BYTE PTR [rax-0x45],ah
   140041dca:	add    BYTE PTR [rax],al
   140041dcc:	mov    bl,0xbb
   140041dce:	add    BYTE PTR [rax],al
   140041dd0:	call   0xf4042154
   140041dd5:	mov    ebx,0xbd460000
   140041dda:	add    BYTE PTR [rax],al
   140041ddc:	cld    
   140041ddd:	jle    0x140041de2
   140041ddf:	add    BYTE PTR [rax-0x43],cl
   140041de2:	add    BYTE PTR [rax],al
   140041de4:	fnstcw WORD PTR [rbp+0x7fc00000]
   140041dea:	add    eax,DWORD PTR [rax]
   140041dec:	fdivr  QWORD PTR [rbp-0x40000000]
   140041df2:	add    BYTE PTR [rax],al
   140041df4:	push   rsp
   140041df5:	add    BYTE PTR [rbx],0x0
   140041df8:	add    al,al
   140041dfa:	add    BYTE PTR [rax],al
   140041dfc:	sub    eax,0xa80000c1
   140041e01:	jg     0x140041e06
   140041e03:	add    BYTE PTR [rax],dh
   140041e05:	rol    DWORD PTR [rax],0x0
   140041e08:	push   rdi
   140041e09:	rol    DWORD PTR [rax],0x0
   140041e0c:	pushf  
   140041e0d:	add    BYTE PTR [rbx],0x0
   140041e10:	pop    rax
   140041e11:	rol    DWORD PTR [rax],0x0
   140041e14:	add    ecx,0x80b00000
   140041e1a:	add    eax,DWORD PTR [rax]
   140041e1c:	nop
   140041e1d:	rol    DWORD PTR [rax],0x0
   140041e20:	retf   
   140041e21:	rol    DWORD PTR [rax],0x0
   140041e24:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041e25:	add    BYTE PTR [rbx],0x0
   140041e28:	(bad)  
   140041e29:	rol    DWORD PTR [rax],0x0
   140041e2c:	(bad)  
   140041e2d:	ret    0x0
   140041e30:	mov    eax,0x60000380
   140041e35:	ret    0x0
   140041e38:	add    dl,0x0
   140041e3b:	add    ah,dh
   140041e3d:	add    BYTE PTR [rbx],0x0
   140041e40:	add    dl,0x0
   140041e43:	add    BYTE PTR [rdi-0x33ffff3e],bl
   140041e49:	add    BYTE PTR [rbx],0x0
   140041e4c:	movabs al,ds:0xec0000c2bd0000c2
   140041e55:	add    BYTE PTR [rbx],0x0
   140041e58:	rol    dl,0x0
   140041e5b:	add    ch,bl
   140041e5d:	ret    0x0
   140041e60:	adc    al,0x81
   140041e62:	add    eax,DWORD PTR [rax]
   140041e64:	loopne 0x140041e28
   140041e66:	add    BYTE PTR [rax],al
   140041e68:	std    
   140041e69:	ret    0x0
   140041e6c:	and    al,0x81
   140041e6e:	add    eax,DWORD PTR [rax]
   140041e70:	add    bl,al
   140041e72:	add    BYTE PTR [rax],al
   140041e74:	movsxd eax,ebx
   140041e76:	add    BYTE PTR [rax],al
   140041e78:	sbb    al,0x81
   140041e7a:	add    eax,DWORD PTR [rax]
   140041e7c:	add    bl,0x0
   140041e7f:	add    BYTE PTR [rdi+0x300000c3],bl
   140041e85:	add    DWORD PTR [rbx],0xc3b000
   140041e8b:	add    BYTE PTR [rdi],dl
   140041e8d:	(bad)  
   140041e8e:	add    BYTE PTR [rax],al
   140041e90:	cmp    BYTE PTR [rcx-0x3be7fffd],al
   140041e96:	add    BYTE PTR [rax],al
   140041e98:	(bad)
   140041e9c:	cmp    al,0x81
   140041e9e:	add    eax,DWORD PTR [rax]
   140041ea0:	(bad)
   140041ea4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140041ea5:	mov    BYTE PTR [rax],0x0
   140041ea8:	pushf  
   140041ea9:	add    DWORD PTR [rbx],0xc6a800
   140041eaf:	add    BYTE PTR [rdi+rax*8],dl
   140041eb2:	add    BYTE PTR [rax],al
   140041eb4:	je     0x140041e37
   140041eb6:	add    eax,DWORD PTR [rax]
   140041eb8:	adc    al,0xc7
   140041eba:	add    BYTE PTR [rax],al
   140041ebc:	add    bh,0x0
   140041ebf:	add    ah,ah
   140041ec1:	add    DWORD PTR [rbx],0xc78000
   140041ec7:	add    bh,cl
   140041ec9:	mov    DWORD PTR [rax],0x3821400
   140041ecf:	add    al,dl
   140041ed1:	mov    DWORD PTR [rax],0xc80500
   140041ed7:	add    BYTE PTR [rdx+rax*4],cl
   140041eda:	add    eax,DWORD PTR [rax]
   140041edc:	adc    al,cl
   140041ede:	add    BYTE PTR [rax],al
   140041ee0:	xor    al,0xc8
   140041ee2:	add    BYTE PTR [rax],al
   140041ee4:	pop    rax
   140041ee5:	(bad)  
   140041ee6:	add    eax,DWORD PTR [rax]
   140041ee8:	xor    al,0xc8
   140041eea:	add    BYTE PTR [rax],al
   140041eec:	mov    dl,0xc8
   140041eee:	add    BYTE PTR [rax],al
   140041ef0:	(bad)  
   140041ef1:	(bad)  
   140041ef2:	add    eax,DWORD PTR [rax]
   140041ef4:	mov    ah,0xc8
   140041ef6:	add    BYTE PTR [rax],al
   140041ef8:	ror    al,1
   140041efa:	add    BYTE PTR [rax],al
   140041efc:	rex.W (bad) 
   140041efe:	add    eax,DWORD PTR [rax]
   140041f00:	ror    al,1
   140041f02:	add    BYTE PTR [rax],al
   140041f04:	or     ah,0x0
   140041f07:	add    al,al
   140041f09:	(bad)  
   140041f0a:	add    eax,DWORD PTR [rax]
   140041f0c:	or     ah,0x0
   140041f0f:	add    BYTE PTR [rsp+rcx*8-0x7dc00000],bl
   140041f16:	add    eax,DWORD PTR [rax]
   140041f18:	pushf  
   140041f19:	int3   
   140041f1a:	add    BYTE PTR [rax],al
   140041f1c:	xchg   ebp,eax
   140041f1d:	(bad)  
   140041f1e:	add    BYTE PTR [rax],al
   140041f20:	mov    WORD PTR [rdx-0x3167fffd],es
   140041f26:	add    BYTE PTR [rax],al
   140041f28:	(bad)  
   140041f29:	iret   
   140041f2a:	add    BYTE PTR [rax],al
   140041f2c:	test   al,0x82
   140041f2e:	add    eax,DWORD PTR [rax]
   140041f30:	nop
   140041f31:	iret   
   140041f32:	add    BYTE PTR [rax],al
   140041f34:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041f35:	iret   
   140041f36:	add    BYTE PTR [rax],al
   140041f38:	push   rax
   140041f39:	(bad)  
   140041f3a:	add    eax,DWORD PTR [rax]
   140041f3c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041f3d:	iret   
   140041f3e:	add    BYTE PTR [rax],al
   140041f40:	add    eax,0xdc0000d1
   140041f45:	(bad)  
   140041f46:	add    eax,DWORD PTR [rax]
   140041f48:	or     cl,dl
   140041f4a:	add    BYTE PTR [rax],al
   140041f4c:	(bad)  
   140041f4e:	add    BYTE PTR [rax],al
   140041f50:	hlt    
   140041f51:	(bad)  
   140041f52:	add    eax,DWORD PTR [rax]
   140041f54:	(bad)  
   140041f56:	add    BYTE PTR [rax],al
   140041f58:	clc    
   140041f59:	rol    DWORD PTR [rax],1
   140041f5b:	add    BYTE PTR [rbx+rax*4],ah
   140041f5e:	add    eax,DWORD PTR [rax]
   140041f60:	clc    
   140041f61:	rol    DWORD PTR [rax],1
   140041f63:	add    BYTE PTR [rbx+rdx*8],ch
   140041f66:	add    BYTE PTR [rax],al
   140041f68:	or     al,0x83
   140041f6a:	add    eax,DWORD PTR [rax]
   140041f6c:	xor    al,0xd3
   140041f6e:	add    BYTE PTR [rax],al
   140041f70:	retf   0xd3
   140041f73:	add    BYTE PTR [rax-0x7e],ch
   140041f76:	add    eax,DWORD PTR [rax]
   140041f78:	(bad)  
   140041f79:	rol    DWORD PTR [rax],cl
   140041f7b:	add    BYTE PTR [rsp+rdx*8],dl
   140041f7e:	add    BYTE PTR [rax],al
   140041f80:	jo     0x140041f04
   140041f82:	add    eax,DWORD PTR [rax]
   140041f84:	sbb    al,0xd4
   140041f86:	add    BYTE PTR [rax],al
   140041f88:	fwait
   140041f89:	(bad)  
   140041f8a:	add    BYTE PTR [rax],al
   140041f8c:	js     0x140041f10
   140041f8e:	add    eax,DWORD PTR [rax]
   140041f90:	mov    al,0xd4
   140041f92:	add    BYTE PTR [rax],al
   140041f94:	in     al,0xd4
   140041f96:	add    BYTE PTR [rax],al
   140041f98:	add    BYTE PTR [rdx-0x2b1bfffd],0x0
   140041f9f:	add    BYTE PTR [rip+0x2c0000d5],bl        # 0x16c04207a
   140041fa5:	add    DWORD PTR [rbx],0x0
   140041fa8:	and    ch,dl
   140041faa:	add    BYTE PTR [rax],al
   140041fac:	pop    rax
   140041fad:	(bad)  
   140041fae:	add    BYTE PTR [rax],al
   140041fb0:	cmp    BYTE PTR [rbx-0x2aa7fffd],al
   140041fb6:	add    BYTE PTR [rax],al
   140041fb8:	outs   dx,DWORD PTR ds:[rsi]
   140041fb9:	(bad)  
   140041fba:	add    BYTE PTR [rax],al
   140041fbc:	rex add DWORD PTR [rbx],0x0
   140041fc0:	jo     0x140041f97
   140041fc2:	add    BYTE PTR [rax],al
   140041fc4:	cmp    al,0xd7
   140041fc6:	add    BYTE PTR [rax],al
   140041fc8:	add    QWORD PTR [rbx],0x0
   140041fcc:	mov    bh,dl
   140041fce:	add    BYTE PTR [rax],al
   140041fd0:	test   al,0xd7
   140041fd2:	add    BYTE PTR [rax],al
   140041fd4:	pop    rsp
   140041fd5:	add    DWORD PTR [rbx],0x0
   140041fd8:	mov    ah,0xd7
   140041fda:	add    BYTE PTR [rax],al
   140041fdc:	loope  0x140041fb8
   140041fde:	add    BYTE PTR [rax],al
   140041fe0:	add    DWORD PTR fs:[rbx],0x0
   140041fe4:	in     al,0xda
   140041fe6:	add    BYTE PTR [rax],al
   140041fe8:	push   rdi
   140041fe9:	fild   DWORD PTR [rax]
   140041feb:	add    BYTE PTR [rbx+rax*4-0x249ffffd],dh
   140041ff2:	add    BYTE PTR [rax],al
   140041ff4:	push   rbx
   140041ff5:	fadd   QWORD PTR [rax]
   140041ff7:	add    ah,al
   140041ff9:	add    DWORD PTR [rbx],0x0
   140041ffc:	push   rsp
   140041ffd:	fadd   QWORD PTR [rax]
   140041fff:	add    BYTE PTR [rbx],bl
   140042001:	fiadd  WORD PTR [rax]
   140042003:	add    ah,dl
   140042005:	add    DWORD PTR [rbx],0x0
   140042008:	sbb    al,0xde
   14004200a:	add    BYTE PTR [rax],al
   14004200c:	rex.WRB fild WORD PTR [r8]
   14004200f:	add    al,dh
   140042011:	add    DWORD PTR [rbx],0x0
   140042014:	push   rax
   140042015:	fild   WORD PTR [rax]
   140042017:	add    BYTE PTR [rbx+0x40000df],dl
   14004201d:	test   BYTE PTR [rbx],al
   14004201f:	add    ah,al
   140042021:	fild   WORD PTR [rax]
   140042023:	add    BYTE PTR [rbx],dh
   140042025:	loop   0x140042027
   140042027:	add    BYTE PTR [rsp+rax*4],cl
   14004202a:	add    eax,DWORD PTR [rax]
   14004202c:	cmp    al,0xe2
   14004202e:	add    BYTE PTR [rax],al
   140042030:	jl     0x140042014
   140042032:	add    BYTE PTR [rax],al
   140042034:	xor    BYTE PTR [rbx+rax*1+0xe27c00],al
   14004203b:	add    BYTE PTR [rax],ch
   14004203d:	jrcxz  0x14004203f
   14004203f:	add    BYTE PTR [rax],bh
   140042041:	test   BYTE PTR [rbx],al
   140042043:	add    BYTE PTR [rax],ch
   140042045:	jrcxz  0x140042047
   140042047:	add    BYTE PTR [rax-0x1d],ah
   14004204a:	add    BYTE PTR [rax],al
   14004204c:	test   BYTE PTR [rbx],r8b
   14004204f:	add    BYTE PTR [rax-0x1d],ah
   140042052:	add    BYTE PTR [rax],al
   140042054:	cwde   
   140042055:	jrcxz  0x140042057
   140042057:	add    BYTE PTR [rax-0x7c],dl
   14004205a:	add    eax,DWORD PTR [rax]
   14004205c:	cwde   
   14004205d:	jrcxz  0x14004205f
   14004205f:	add    BYTE PTR [rsp+riz*8-0x7ba40000],cl
   140042066:	add    eax,DWORD PTR [rax]
   140042068:	mov    esp,fs
   14004206a:	add    BYTE PTR [rax],al
   14004206c:	shl    esp,0x0
   14004206f:	add    BYTE PTR [rax*4-0x1b3bfffd],bl
   140042076:	add    BYTE PTR [rax],al
   140042078:	xor    ebp,esp
   14004207a:	add    BYTE PTR [rax],al
   14004207c:	xchg   esp,eax
   14004207d:	test   BYTE PTR [rbx],al
   14004207f:	add    BYTE PTR [riz*8-0x1a5b0000],dh
   140042086:	add    BYTE PTR [rax],al
   140042088:	movabs al,ds:0xc30000e5a8000384
   140042091:	in     eax,0x0
   140042093:	add    ah,al
   140042095:	test   BYTE PTR [rbx],al
   140042097:	add    ah,al
   140042099:	in     eax,0x0
   14004209b:	add    bh,bl
   14004209d:	in     eax,0x0
   14004209f:	add    ah,dl
   1400420a1:	test   BYTE PTR [rbx],al
   1400420a3:	add    BYTE PTR [rax],ch
   1400420a5:	out    0x0,al
   1400420a7:	add    BYTE PTR [rbp-0x1a],dl
   1400420aa:	add    BYTE PTR [rax],al
   1400420ac:	hlt    
   1400420ad:	test   BYTE PTR [rbx],al
   1400420af:	add    al,bh
   1400420b1:	out    0x0,al
   1400420b3:	add    BYTE PTR [rbx],dl
   1400420b5:	out    0x0,eax
   1400420b7:	add    ah,bl
   1400420b9:	test   BYTE PTR [rbx],al
   1400420bb:	add    BYTE PTR [rdi+riz*8],dl
   1400420be:	add    BYTE PTR [rax],al
   1400420c0:	(bad)  
   1400420c1:	out    0x0,eax
   1400420c3:	add    ah,ah
   1400420c5:	test   BYTE PTR [rbx],al
   1400420c7:	add    BYTE PTR [rax-0x19],cl
   1400420ca:	add    BYTE PTR [rax],al
   1400420cc:	jne    0x1400420b5
   1400420ce:	add    BYTE PTR [rax],al
   1400420d0:	cld    
   1400420d1:	test   BYTE PTR [rbx],al
   1400420d3:	add    BYTE PTR [rax-0x19],bh
   1400420d6:	add    BYTE PTR [rax],al
   1400420d8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400420d9:	out    0x0,eax
   1400420db:	add    ah,ch
   1400420dd:	test   BYTE PTR [rbx],al
   1400420df:	add    BYTE PTR [rax-0x2bffff19],ch
   1400420e5:	out    0x0,eax
   1400420e7:	add    BYTE PTR [rsp+rax*4+0x3],bh
   1400420eb:	add    ah,dl
   1400420ed:	out    0x0,eax
   1400420ef:	add    ah,bh
   1400420f1:	out    0x0,eax
   1400420f3:	add    BYTE PTR [rax*4-0x1803fffd],cl
   1400420fa:	add    BYTE PTR [rax],al
   1400420fc:	(bad)  
   1400420fd:	call   0xc4b02102
   140042102:	add    eax,DWORD PTR [rax]
   140042104:	sub    al,ch
   140042106:	add    BYTE PTR [rax],al
   140042108:	je     0x1400420f2
   14004210a:	add    BYTE PTR [rax],al
   14004210c:	je     0x140042092
   14004210e:	add    eax,DWORD PTR [rax]
   140042110:	je     0x1400420fa
   140042112:	add    BYTE PTR [rax],al
   140042114:	outs   dx,BYTE PTR ds:[rsi]
   140042115:	in     al,dx
   140042116:	add    BYTE PTR [rax],al
   140042118:	adc    al,0x85
   14004211a:	add    eax,DWORD PTR [rax]
   14004211c:	jo     0x14004210a
   14004211e:	add    BYTE PTR [rax],al
   140042120:	popf   
   140042121:	in     al,dx
   140042122:	add    BYTE PTR [rax],al
   140042124:	add    al,0x85
   140042126:	add    eax,DWORD PTR [rax]
   140042128:	mov    eax,0xd30000ec
   14004212d:	in     al,dx
   14004212e:	add    BYTE PTR [rax],al
   140042130:	mov    ah,0x84
   140042132:	add    eax,DWORD PTR [rax]
   140042134:	(bad)  
   140042135:	in     al,dx
   140042136:	add    BYTE PTR [rax],al
   140042138:	out    dx,eax
   140042139:	in     al,dx
   14004213a:	add    BYTE PTR [rax],al
   14004213c:	int3   
   14004213d:	test   BYTE PTR [rbx],al
   14004213f:	add    BYTE PTR [rax],al
   140042141:	in     eax,dx
   140042142:	add    BYTE PTR [rax],al
   140042144:	(bad)  
   140042145:	in     eax,dx
   140042146:	add    BYTE PTR [rax],al
   140042148:	mov    WORD PTR [rbx+rax*1+0xed2000],es
   14004214f:	add    BYTE PTR [rax-0x13],al
   140042152:	add    BYTE PTR [rax],al
   140042154:	test   BYTE PTR [rbx+rax*1+0xed4000],al
   14004215b:	add    BYTE PTR [rbx-0x13],bl
   14004215e:	add    BYTE PTR [rax],al
   140042160:	mov    esp,0x5c000384
   140042165:	in     eax,dx
   140042166:	add    BYTE PTR [rax],al
   140042168:	(bad)  
   140042169:	in     eax,dx
   14004216a:	add    BYTE PTR [rax],al
   14004216c:	and    al,0x85
   14004216e:	add    eax,DWORD PTR [rax]
   140042170:	fsubr  st,st(5)
   140042172:	add    BYTE PTR [rax],al
   140042174:	cmp    esi,ebp
   140042176:	add    BYTE PTR [rax],al
   140042178:	xor    BYTE PTR [rbp-0x11c3fffd],al
   14004217e:	add    BYTE PTR [rax],al
   140042180:	push   rax
   140042181:	out    dx,al
   140042182:	add    BYTE PTR [rax],al
   140042184:	cmp    BYTE PTR [rbp-0x119ffffd],al
   14004218a:	add    BYTE PTR [rax],al
   14004218c:	je     0x14004217c
   14004218e:	add    BYTE PTR [rax],al
   140042190:	rex test DWORD PTR [rbx],eax
   140042193:	add    BYTE PTR [rsi+rbp*8-0x10da0000],dl
   14004219a:	add    BYTE PTR [rax],al
   14004219c:	mov    ah,0x85
   14004219e:	add    eax,DWORD PTR [rax]
   1400421a0:	sub    bh,ch
   1400421a2:	add    BYTE PTR [rax],al
   1400421a4:	pop    rbx
   1400421a5:	icebp  
   1400421a6:	add    BYTE PTR [rax],al
   1400421a8:	jl     0x14004212f
   1400421aa:	add    eax,DWORD PTR [rax]
   1400421ac:	cwde   
   1400421ad:	icebp  
   1400421ae:	add    BYTE PTR [rax],al
   1400421b0:	and    esi,esp
   1400421b2:	add    BYTE PTR [rax],al
   1400421b4:	test   QWORD PTR [rbx],rax
   1400421b7:	add    BYTE PTR [rsp+rsi*8],ah
   1400421ba:	add    BYTE PTR [rax],al
   1400421bc:	loopne 0x1400421b2
   1400421be:	add    BYTE PTR [rax],al
   1400421c0:	in     al,0x85
   1400421c2:	add    eax,DWORD PTR [rax]
   1400421c4:	loopne 0x1400421ba
   1400421c6:	add    BYTE PTR [rax],al
   1400421c8:	rex.WX test BYTE PTR [rax],0x0
   1400421cc:	add    al,0x86
   1400421ce:	add    eax,DWORD PTR [rax]
   1400421d0:	ins    BYTE PTR es:[rdi],dx
   1400421d1:	test   BYTE PTR [rax],0x0
   1400421d4:	shl    dh,cl
   1400421d6:	add    BYTE PTR [rax],al
   1400421d8:	in     al,dx
   1400421d9:	test   DWORD PTR [rbx],eax
   1400421db:	add    ah,dl
   1400421dd:	test   BYTE PTR [rax],0x0
   1400421e0:	repz test BYTE PTR [rax],0x0
   1400421e4:	cld    
   1400421e5:	test   DWORD PTR [rbx],eax
   1400421e7:	add    BYTE PTR [rax],bh
   1400421e9:	test   DWORD PTR [rax],0xf7c200
   1400421ef:	add    BYTE PTR [rsi+rax*4-0x83bfffd],dh
   1400421f6:	add    BYTE PTR [rax],al
   1400421f8:	push   rbx
   1400421f9:	clc    
   1400421fa:	add    BYTE PTR [rax],al
   1400421fc:	rex.W xchg BYTE PTR [rbx],al
   1400421ff:	add    BYTE PTR [rax+rdi*8+0x0],dl
   140042203:	add    BYTE PTR [rbx],al
   140042205:	stc    
   140042206:	add    BYTE PTR [rax],al
   140042208:	xor    al,0x86
   14004220a:	add    eax,DWORD PTR [rax]
   14004220c:	add    al,0xf9
   14004220e:	add    BYTE PTR [rax],al
   140042210:	ss stc 
   140042212:	add    BYTE PTR [rax],al
   140042214:	sub    al,0x86
   140042216:	add    eax,DWORD PTR [rax]
   140042218:	rex.R stc 
   14004221a:	add    BYTE PTR [rax],al
   14004221c:	mov    cl,bh
   14004221e:	add    BYTE PTR [rax],al
   140042220:	pop    rax
   140042221:	xchg   BYTE PTR [rbx],al
   140042223:	add    BYTE PTR [rax+0x20000f9],cl
   140042229:	cli    
   14004222a:	add    BYTE PTR [rax],al
   14004222c:	(bad)  
   14004222d:	xchg   BYTE PTR [rbx],al
   14004222f:	add    BYTE PTR [rdx+rdi*8],al
   140042232:	add    BYTE PTR [rax],al
   140042234:	push   rsp
   140042235:	cli    
   140042236:	add    BYTE PTR [rax],al
   140042238:	jo     0x1400421c0
   14004223a:	add    eax,DWORD PTR [rax]
   14004223c:	push   rsp
   14004223d:	cli    
   14004223e:	add    BYTE PTR [rax],al
   140042240:	leave  
   140042241:	cli    
   140042242:	add    BYTE PTR [rax],al
   140042244:	add    BYTE PTR [rsi-0x533fffd],0x0
   14004224b:	add    BYTE PTR [rip+0xffffffff900000fb],cl        # 0xd004234c
   140042251:	xchg   BYTE PTR [rbx],al
   140042253:	add    BYTE PTR [rax],dl
   140042255:	sti    
   140042256:	add    BYTE PTR [rax],al
   140042258:	rex.X sti 
   14004225a:	add    BYTE PTR [rax],al
   14004225c:	pushf  
   14004225d:	xchg   BYTE PTR [rbx],al
   14004225f:	add    BYTE PTR [rbx+rdi*8+0x0],al
   140042263:	add    bl,dl
   140042265:	sti    
   140042266:	add    BYTE PTR [rax],al
   140042268:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042269:	xchg   BYTE PTR [rbx],al
   14004226b:	add    BYTE PTR [rsp+rdi*8],ch
   14004226e:	add    BYTE PTR [rax],al
   140042270:	jo     0x14004226e
   140042272:	add    BYTE PTR [rax],al
   140042274:	int3   
   140042275:	xchg   BYTE PTR [rbx],al
   140042277:	add    BYTE PTR [rax-0x4],dh
   14004227a:	add    BYTE PTR [rax],al
   14004227c:	pushf  
   14004227d:	cld    
   14004227e:	add    BYTE PTR [rax],al
   140042280:	sub    al,0x87
   140042282:	add    eax,DWORD PTR [rax]
   140042284:	pushf  
   140042285:	cld    
   140042286:	add    BYTE PTR [rax],al
   140042288:	and    edi,ebp
   14004228a:	add    BYTE PTR [rax],al
   14004228c:	sbb    BYTE PTR [rdi-0x2dbfffd],al
   140042292:	add    BYTE PTR [rax],al
   140042294:	loope  0x140042293
   140042296:	add    BYTE PTR [rax],al
   140042298:	fadd   DWORD PTR [rsi-0x21bfffd]
   14004229e:	add    BYTE PTR [rax],al
   1400422a0:	rex.RB inc BYTE PTR [r8]
   1400422a3:	add    BYTE PTR [rax],cl
   1400422a5:	xchg   DWORD PTR [rbx],eax
   1400422a7:	add    BYTE PTR [rax-0x2ffff02],dh
   1400422ad:	inc    BYTE PTR [rax]
   1400422af:	add    BYTE PTR [rdi+rax*4],dh
   1400422b2:	add    eax,DWORD PTR [rax]
   1400422b4:	cmp    bh,bh
   1400422b6:	add    BYTE PTR [rax],al
   1400422b8:	jb     0x1400422ba
   1400422ba:	add    DWORD PTR [rax],eax
   1400422bc:	(bad)  
   1400422bd:	xchg   DWORD PTR [rbx],eax
   1400422bf:	add    BYTE PTR [rax+rax*1+0x1],dh
   1400422c3:	add    BYTE PTR [rax+rax*1-0x781fffff],bl
   1400422ca:	add    eax,DWORD PTR [rax]
   1400422cc:	fadd   DWORD PTR [rax]
   1400422ce:	add    DWORD PTR [rax],eax
   1400422d0:	push   rbp
   1400422d1:	add    DWORD PTR [rcx],eax
   1400422d3:	add    BYTE PTR [rax],cl
   1400422d5:	mov    BYTE PTR [rbx],al
   1400422d7:	add    BYTE PTR [rax+0x1],bl
   1400422da:	add    DWORD PTR [rax],eax
   1400422dc:	out    0x1,al
   1400422de:	add    DWORD PTR [rax],eax
   1400422e0:	adc    BYTE PTR [rax+0x1e80003],cl
   1400422e6:	add    DWORD PTR [rax],eax
   1400422e8:	leave  
   1400422e9:	add    eax,DWORD PTR [rcx]
   1400422eb:	add    BYTE PTR [rax+rcx*4],ah
   1400422ee:	add    eax,DWORD PTR [rax]
   1400422f0:	int3   
   1400422f1:	add    eax,DWORD PTR [rcx]
   1400422f3:	add    BYTE PTR [rsi+0x74000104],al
   1400422f9:	xchg   DWORD PTR [rbx],eax
   1400422fb:	add    BYTE PTR [rax-0x3dfffefc],cl
   140042301:	add    al,0x1
   140042303:	add    al,bl
   140042305:	xchg   DWORD PTR [rbx],eax
   140042307:	add    ah,al
   140042309:	add    al,0x1
   14004230b:	add    BYTE PTR [rax],cl
   14004230d:	(bad)  
   14004230e:	add    DWORD PTR [rax],eax
   140042310:	movabs al,ds:0xb600010708000387
   140042319:	or     DWORD PTR [rcx],eax
   14004231b:	add    al,ch
   14004231d:	xchg   DWORD PTR [rbx],eax
   14004231f:	add    BYTE PTR [rax-0x10fffef7],bh
   140042325:	or     DWORD PTR [rcx],eax
   140042327:	add    BYTE PTR [rax-0x78],dl
   14004232a:	add    eax,DWORD PTR [rax]
   14004232c:	lock or DWORD PTR [rcx],eax
   14004232f:	add    BYTE PTR [rdi+0x4000010a],bh
   140042335:	mov    BYTE PTR [rbx],al
   140042337:	add    al,al
   140042339:	or     al,BYTE PTR [rcx]
   14004233b:	add    BYTE PTR [rbx+0x5800010b],dl
   140042341:	mov    BYTE PTR [rbx],al
   140042343:	add    BYTE PTR [rbx+rcx*1+0xc1a0001],dl
   14004234a:	add    DWORD PTR [rax],eax
   14004234c:	push   0x1c000388
   140042351:	or     al,0x1
   140042353:	add    BYTE PTR [rsi+0x7800010c],dh
   140042359:	mov    BYTE PTR [rbx],al
   14004235b:	add    al,dl
   14004235d:	or     al,0x1
   14004235f:	add    ah,dh
   140042361:	or     al,0x1
   140042363:	add    BYTE PTR [rax+0x388],cl
   140042369:	or     eax,0xd180001
   14004236e:	add    DWORD PTR [rax],eax
   140042370:	nop
   140042371:	mov    BYTE PTR [rbx],al
   140042373:	add    BYTE PTR [rax],ah
   140042375:	or     eax,0xd210001
   14004237a:	add    DWORD PTR [rax],eax
   14004237c:	xchg   esp,eax
   14004237d:	mov    BYTE PTR [rbx],al
   14004237f:	add    BYTE PTR [rax],dh
   140042381:	or     eax,0xd310001
   140042386:	add    DWORD PTR [rax],eax
   140042388:	cwde   
   140042389:	mov    BYTE PTR [rbx],al
   14004238b:	add    BYTE PTR [rcx*1+0xdd40001],bh
   140042392:	add    DWORD PTR [rax],eax
   140042394:	lods   al,BYTE PTR ds:[rsi]
   140042395:	mov    BYTE PTR [rbx],al
   140042397:	add    ah,dl
   140042399:	or     eax,0xe040001
   14004239e:	add    DWORD PTR [rax],eax
   1400423a0:	mov    eax,0xc000388
   1400423a5:	(bad)  
   1400423a6:	add    DWORD PTR [rax],eax
   1400423a8:	jno    0x1400423b8
   1400423aa:	add    DWORD PTR [rax],eax
   1400423ac:	pushf  
   1400423ad:	mov    BYTE PTR [rbx],al
   1400423af:	add    BYTE PTR [rsi+rcx*1+0x1],dh
   1400423b3:	add    BYTE PTR [rbp-0x5bfffef2],ah
   1400423b9:	mov    BYTE PTR [rbx],al
   1400423bb:	add    BYTE PTR [rax],bl
   1400423bd:	sgdt   [rax]
   1400423c0:	sgdt   ds:[rax]
   1400423c4:	ror    BYTE PTR [rax+0xf400003],0x1
   1400423cb:	add    BYTE PTR [rdi-0x37fffef1],bl
   1400423d1:	mov    BYTE PTR [rbx],al
   1400423d3:	add    BYTE PTR [rax-0x7efffef1],ah
   1400423d9:	adc    BYTE PTR [rcx],al
   1400423db:	add    al,dl
   1400423dd:	mov    BYTE PTR [rbx],al
   1400423df:	add    BYTE PTR [rax+rdx*1+0x18750001],al
   1400423e6:	add    DWORD PTR [rax],eax
   1400423e8:	add    al,0x89
   1400423ea:	add    eax,DWORD PTR [rax]
   1400423ec:	js     0x140042406
   1400423ee:	add    DWORD PTR [rax],eax
   1400423f0:	pop    rbp
   1400423f1:	sbb    DWORD PTR [rcx],eax
   1400423f3:	add    BYTE PTR [rax],ch
   1400423f5:	mov    DWORD PTR [rbx],eax
   1400423f7:	add    BYTE PTR [rax+0x19],ah
   1400423fa:	add    DWORD PTR [rax],eax
   1400423fc:	repz sbb DWORD PTR [rcx],eax
   1400423ff:	add    BYTE PTR [rcx+rcx*4+0x3],bl
   140042403:	add    ah,dh
   140042405:	sbb    DWORD PTR [rcx],eax
   140042407:	add    BYTE PTR [rdi+0x1a],al
   14004240a:	add    DWORD PTR [rax],eax
   14004240c:	ins    BYTE PTR es:[rdi],dx
   14004240d:	mov    DWORD PTR [rbx],eax
   14004240f:	add    ah,dl
   140042411:	sbb    al,BYTE PTR [rcx]
   140042413:	add    BYTE PTR [rdx+0x1c],ch
   140042416:	add    DWORD PTR [rax],eax
   140042418:	pushf  
   140042419:	mov    DWORD PTR [rbx],eax
   14004241b:	add    BYTE PTR [rax],dl
   14004241d:	sbb    eax,0x1d850001
   140042422:	add    DWORD PTR [rax],eax
   140042424:	je     0x1400423af
   140042426:	add    eax,DWORD PTR [rax]
   140042428:	mov    BYTE PTR [rip+0x1dea0001],bl        # 0x15dee242f
   14004242e:	add    DWORD PTR [rax],eax
   140042430:	mov    al,0x89
   140042432:	add    eax,DWORD PTR [rax]
   140042434:	in     al,dx
   140042435:	sbb    eax,0x1e180001
   14004243a:	add    DWORD PTR [rax],eax
   14004243c:	int3   
   14004243d:	mov    DWORD PTR [rbx],eax
   14004243f:	add    BYTE PTR [rax],bl
   140042441:	(bad)  
   140042442:	add    DWORD PTR [rax],eax
   140042444:	rex.R (bad) 
   140042446:	add    DWORD PTR [rax],eax
   140042448:	mov    esp,0x44000389
   14004244d:	(bad)  
   14004244e:	add    DWORD PTR [rax],eax
   140042450:	xchg   DWORD PTR [rsi],ebx
   140042452:	add    DWORD PTR [rax],eax
   140042454:	in     al,0x89
   140042456:	add    eax,DWORD PTR [rax]
   140042458:	(bad)  
   140042459:	(bad)  
   14004245a:	add    DWORD PTR [rax],eax
   14004245c:	lock (bad) 
   14004245e:	add    DWORD PTR [rax],eax
   140042460:	(bad)  
   140042461:	mov    DWORD PTR [rbx],eax
   140042463:	add    al,dh
   140042465:	(bad)  
   140042466:	add    DWORD PTR [rax],eax
   140042468:	sbb    al,0x1f
   14004246a:	add    DWORD PTR [rax],eax
   14004246c:	(bad)  
   14004246d:	mov    DWORD PTR [rbx],eax
   14004246f:	add    BYTE PTR [rdi+rbx*1+0x1],bh
   140042473:	add    cl,al
   140042475:	(bad)  
   140042476:	add    DWORD PTR [rax],eax
   140042478:	fmul   QWORD PTR [rcx+0x20880003]
   14004247e:	add    DWORD PTR [rax],eax
   140042480:	test   eax,0x28000120
   140042485:	mov    al,BYTE PTR [rbx]
   140042487:	add    BYTE PTR [rax+riz*1+0x20d30001],ch
   14004248e:	add    DWORD PTR [rax],eax
   140042490:	and    BYTE PTR [rdx+0x20d40003],cl
   140042496:	add    DWORD PTR [rax],eax
   140042498:	cmc    
   140042499:	and    BYTE PTR [rcx],al
   14004249b:	add    BYTE PTR [rax],dh
   14004249d:	mov    al,BYTE PTR [rbx]
   14004249f:	add    al,bh
   1400424a1:	and    BYTE PTR [rcx],al
   1400424a3:	add    BYTE PTR [rcx],bl
   1400424a5:	and    DWORD PTR [rcx],eax
   1400424a7:	add    BYTE PTR [rax],bh
   1400424a9:	mov    al,BYTE PTR [rbx]
   1400424ab:	add    BYTE PTR [rcx+riz*1+0x1],al
   1400424af:	add    bh,ch
   1400424b1:	and    DWORD PTR [rcx],eax
   1400424b3:	add    ah,ch
   1400424b5:	mov    DWORD PTR [rbx],eax
   1400424b7:	add    al,dh
   1400424b9:	and    DWORD PTR [rcx],eax
   1400424bb:	add    BYTE PTR [rdi],dl
   1400424bd:	and    al,BYTE PTR [rcx]
   1400424bf:	add    BYTE PTR [rax],bl
   1400424c1:	mov    al,BYTE PTR [rbx]
   1400424c3:	add    BYTE PTR [rax],bl
   1400424c5:	and    al,BYTE PTR [rcx]
   1400424c7:	add    BYTE PTR [rbx],cl
   1400424c9:	and    al,0x1
   1400424cb:	add    BYTE PTR [rdx+rcx*4+0x3],ch
   1400424cf:	add    BYTE PTR [rsp],cl
   1400424d2:	add    DWORD PTR [rax],eax
   1400424d4:	jno    0x1400424fa
   1400424d6:	add    DWORD PTR [rax],eax
   1400424d8:	mov    al,BYTE PTR [rbx]
   1400424db:	add    BYTE PTR [rsp+0x1],bh
   1400424df:	add    ch,cl
   1400424e1:	and    eax,0x8a880001
   1400424e6:	add    eax,DWORD PTR [rax]
   1400424e8:	fsub   DWORD PTR [rip+0x2fe80001]        # 0x16fec24ef
   1400424ee:	add    DWORD PTR [rax],eax
   1400424f0:	movabs al,ds:0x3a00012ff400038a
   1400424f9:	xor    BYTE PTR [rcx],al
   1400424fb:	add    ah,al
   1400424fd:	mov    al,BYTE PTR [rbx]
   1400424ff:	add    BYTE PTR [rax+rsi*1],bh
   140042502:	add    DWORD PTR [rax],eax
   140042504:	lea    esi,[rax]
   140042506:	add    DWORD PTR [rax],eax
   140042508:	int3   
   140042509:	mov    al,BYTE PTR [rbx]
   14004250b:	add    BYTE PTR [rax+0x24000130],dl
   140042511:	xor    DWORD PTR [rcx],eax
   140042513:	add    al,ah
   140042515:	mov    al,BYTE PTR [rbx]
   140042517:	add    BYTE PTR [rax+0x31],al
   14004251a:	add    DWORD PTR [rax],eax
   14004251c:	push   rax
   14004251d:	xor    DWORD PTR [rcx],eax
   14004251f:	add    al,bh
   140042521:	mov    al,BYTE PTR [rbx]
   140042523:	add    ah,dl
   140042525:	xor    DWORD PTR [rcx],eax
   140042527:	add    bl,al
   140042529:	xor    al,BYTE PTR [rcx]
   14004252b:	add    BYTE PTR [rax],al
   14004252d:	mov    eax,DWORD PTR [rbx]
   14004252f:	add    ah,al
   140042531:	xor    al,BYTE PTR [rcx]
   140042533:	add    al,cl
   140042535:	xor    eax,DWORD PTR [rcx]
   140042537:	add    BYTE PTR [rax],ah
   140042539:	mov    eax,DWORD PTR [rbx]
   14004253b:	add    ah,bh
   14004253d:	xor    eax,DWORD PTR [rcx]
   14004253f:	add    BYTE PTR [rsi+0x36],bl
   140042542:	add    DWORD PTR [rax],eax
   140042544:	mov    eax,DWORD PTR fs:[rbx]
   140042547:	add    BYTE PTR [rax+0x36],ah
   14004254a:	add    DWORD PTR [rax],eax
   14004254c:	mov    edi,0x44000136
   140042551:	mov    eax,DWORD PTR [rbx]
   140042553:	add    al,al
   140042555:	add    DWORD PTR ss:[rax],eax
   140042558:	and    esi,DWORD PTR [rdi]
   14004255a:	add    DWORD PTR [rax],eax
   14004255c:	push   rax
   14004255d:	mov    eax,DWORD PTR [rbx]
   14004255f:	add    BYTE PTR [rdi+rsi*1],ah
   140042562:	add    DWORD PTR [rax],eax
   140042564:	rex.WXB (bad) 
   140042566:	add    DWORD PTR [rax],eax
   140042568:	mov    BYTE PTR [rbx+0x374c0003],cl
   14004256e:	add    DWORD PTR [rax],eax
   140042570:	rex.WRXB cmp r8b,BYTE PTR [r9]
   140042573:	add    BYTE PTR [rax+0x5000038b],bl
   140042579:	cmp    al,BYTE PTR [rcx]
   14004257b:	add    BYTE PTR [rdx+0x3a],bh
   14004257e:	add    DWORD PTR [rax],eax
   140042580:	or     BYTE PTR [rbx+0x3a7c0003],0x1
   140042587:	add    BYTE PTR [rdx+0x5c00013a],ch
   14004258d:	mov    eax,DWORD PTR [rbx]
   14004258f:	add    BYTE PTR [rdx+rdi*1+0x3b800001],ch
   140042596:	add    DWORD PTR [rax],eax
   140042598:	nop
   140042599:	mov    eax,DWORD PTR [rbx]
   14004259b:	add    al,al
   14004259d:	cmp    eax,DWORD PTR [rcx]
   14004259f:	add    BYTE PTR [rax],al
   1400425a1:	cmp    al,0x1
   1400425a3:	add    BYTE PTR [rax+0x800038b],dh
   1400425a9:	cmp    al,0x1
   1400425ab:	add    BYTE PTR [rcx+0x3c],dl
   1400425ae:	add    DWORD PTR [rax],eax
   1400425b0:	ror    BYTE PTR [rbx+0x3c540003],1
   1400425b6:	add    DWORD PTR [rax],eax
   1400425b8:	and    eax,0xd800013d
   1400425bd:	mov    eax,DWORD PTR [rbx]
   1400425bf:	add    BYTE PTR [rax],ch
   1400425c1:	cmp    eax,0x3d3b0001
   1400425c6:	add    DWORD PTR [rax],eax
   1400425c8:	enter  0x38b,0x0
   1400425cc:	cmp    al,0x3d
   1400425ce:	add    DWORD PTR [rax],eax
   1400425d0:	xlat   BYTE PTR ds:[rbx]
   1400425d1:	cmp    eax,0x8bb80001
   1400425d6:	add    eax,DWORD PTR [rax]
   1400425d8:	fdivr  DWORD PTR [rip+0x3ee60001]        # 0x17eea25df
   1400425de:	add    DWORD PTR [rax],eax
   1400425e0:	ror    BYTE PTR [rbx+0x3ef00003],0x1
   1400425e7:	add    al,dl
   1400425e9:	(bad)  
   1400425ea:	add    DWORD PTR [rax],eax
   1400425ec:	js     0x14004257a
   1400425ee:	add    eax,DWORD PTR [rax]
   1400425f0:	fdivr  QWORD PTR [rdi]
   1400425f2:	add    DWORD PTR [rax],eax
   1400425f4:	adc    al,0x40
   1400425f6:	add    DWORD PTR [rax],eax
   1400425f8:	push   0x1400038c
   1400425fd:	rex add DWORD PTR [rax],eax
   140042600:	cdq    
   140042601:	rex add DWORD PTR [rax],eax
   140042604:	xchg   esp,eax
   140042605:	mov    WORD PTR [rbx],es
   140042607:	add    BYTE PTR [rax+rax*2+0x40e30001],bl
   14004260e:	add    DWORD PTR [rax],eax
   140042610:	jo     0x14004259e
   140042612:	add    eax,DWORD PTR [rax]
   140042614:	in     al,0x40
   140042616:	add    DWORD PTR [rax],eax
   140042618:	xor    eax,DWORD PTR [rcx+0x1]
   14004261b:	add    BYTE PTR [rax+0x4800038c],cl
   140042621:	add    DWORD PTR [r8],eax
   140042624:	icebp  
   140042625:	add    DWORD PTR [r8],eax
   140042628:	mov    ah,0x8c
   14004262a:	add    eax,DWORD PTR [rax]
   14004262c:	hlt    
   14004262d:	add    DWORD PTR [r8],eax
   140042630:	add    DWORD PTR [rdx+0x1],0x0
   140042634:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042635:	mov    WORD PTR [rbx],es
   140042637:	add    BYTE PTR [rbx+rax*2+0x44130001],cl
   14004263e:	add    DWORD PTR [rax],eax
   140042640:	rcl    BYTE PTR [rax+0x44300003],0x1
   140042647:	add    BYTE PTR [rax+0x44],ch
   14004264a:	add    DWORD PTR [rax],eax
   14004264c:	rex lea eax,[rbx]
   14004264f:	add    BYTE PTR [rax+0x44],ch
   140042652:	add    DWORD PTR [rax],eax
   140042654:	out    dx,al
   140042655:	add    DWORD PTR [rax],r8d
   140042658:	lea    rax,[rbx]
   14004265b:	add    al,dh
   14004265d:	add    DWORD PTR [rax],r8d
   140042660:	sub    eax,0x38000145
   140042665:	lea    eax,[rbx]
   140042667:	add    BYTE PTR [rax],dh
   140042669:	add    DWORD PTR [r8],r8d
   14004266c:	ins    BYTE PTR es:[rdi],dx
   14004266d:	add    DWORD PTR [r8],r8d
   140042670:	pop    rax
   140042671:	lea    eax,[rbx]
   140042673:	add    BYTE PTR [rbp+rax*2+0x1],ch
   140042677:	add    BYTE PTR [rbx-0x53fffebb],dh
   14004267d:	lea    eax,[rbx]
   14004267f:	add    BYTE PTR [rbp+rax*2+0x47a80001],dh
   140042686:	add    DWORD PTR [rax],eax
   140042688:	mov    ah,0x90
   14004268a:	add    eax,DWORD PTR [rax]
   14004268c:	test   al,0x47
   14004268e:	add    DWORD PTR [rax],eax
   140042690:	loop   0x1400426d9
   140042692:	add    DWORD PTR [rax],eax
   140042694:	(bad)  
   140042695:	lea    eax,[rbx]
   140042697:	add    ah,ah
   140042699:	rex.RXB add DWORD PTR [r8],r8d
   14004269c:	(bad)  
   14004269d:	add    QWORD PTR [rax],rax
   1400426a0:	ins    BYTE PTR es:[rdi],dx
   1400426a1:	lea    eax,[rbx]
   1400426a3:	add    BYTE PTR [rax],ah
   1400426a5:	add    QWORD PTR [rax],rax
   1400426a8:	pop    rdx
   1400426a9:	add    QWORD PTR [rax],rax
   1400426ac:	js     0x14004263b
   1400426ae:	add    eax,DWORD PTR [rax]
   1400426b0:	pop    rsp
   1400426b1:	add    QWORD PTR [rax],rax
   1400426b4:	or     BYTE PTR [rax+0x1],0x0
   1400426b8:	fmul   QWORD PTR [rbx+rax*1+0x1488000]
   1400426bf:	add    BYTE PTR [rax+rcx*2-0x731bffff],ah
   1400426c6:	add    eax,DWORD PTR [rax]
   1400426c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400426c9:	add    QWORD PTR [rax],rax
   1400426cc:	enter  0x148,0x0
   1400426d0:	in     al,dx
   1400426d1:	mov    WORD PTR [rbx],es
   1400426d3:	add    al,cl
   1400426d5:	add    QWORD PTR [rax],rax
   1400426d8:	in     al,dx
   1400426d9:	add    QWORD PTR [rax],rax
   1400426dc:	(bad)  
   1400426dd:	mov    WORD PTR [rbx],es
   1400426df:	add    ah,ch
   1400426e1:	add    QWORD PTR [rax],rax
   1400426e4:	adc    BYTE PTR [rcx+0x1],cl
   1400426e7:	add    ah,dh
   1400426e9:	mov    WORD PTR [rbx],es
   1400426eb:	add    BYTE PTR [rax],dl
   1400426ed:	add    QWORD PTR [r8],rax
   1400426f0:	push   rax
   1400426f1:	add    QWORD PTR [r8],rax
   1400426f4:	xor    BYTE PTR [rbp+0x49500003],cl
   1400426fa:	add    DWORD PTR [rax],eax
   1400426fc:	(bad)  
   1400426fd:	add    QWORD PTR [r8],rax
   140042700:	cld    
   140042701:	mov    WORD PTR [rbx],es
   140042703:	add    ah,dl
   140042705:	add    QWORD PTR [r8],rax
   140042708:	imul   ecx,DWORD PTR [rdx+0x1],0x38d1800
   14004270f:	add    BYTE PTR [rdx+rcx*2+0x1],ch
   140042713:	add    dh,dh
   140042715:	rex.WX add QWORD PTR [rax],rax
   140042718:	or     BYTE PTR [rbp+0x4af80003],cl
   14004271e:	add    DWORD PTR [rax],eax
   140042720:	cmp    ecx,DWORD PTR [rbx+0x1]
   140042723:	add    BYTE PTR [rax],ch
   140042725:	lea    eax,[rbx]
   140042727:	add    BYTE PTR [rbx+rcx*2],bh
   14004272a:	add    DWORD PTR [rax],eax
   14004272c:	(bad)  
   14004272d:	rex.WXB add QWORD PTR [r8],rax
   140042730:	movabs al,ds:0x600014bc800038d
   140042739:	add    QWORD PTR [rax],r8
   14004273c:	(bad)  
   14004273d:	mov    WORD PTR [rbx],es
   14004273f:	add    BYTE PTR [rax],ch
   140042741:	add    QWORD PTR [rax],r8
   140042744:	mov    ecx,DWORD PTR [rcx+rax*1+0x0]
   140042748:	test   BYTE PTR [rbp+0x4c8c0003],cl
   14004274e:	add    DWORD PTR [rax],eax
   140042750:	adc    BYTE PTR [rdx+0x1],bl
   140042753:	add    BYTE PTR [rsi+rcx*4+0x5aa80003],ch
   14004275a:	add    DWORD PTR [rax],eax
   14004275c:	push   rsp
   14004275d:	pop    rbx
   14004275e:	add    DWORD PTR [rax],eax
   140042760:	nop
   140042761:	lea    eax,[rbx]
   140042763:	add    BYTE PTR [rax-0xdfffea5],dh
   140042769:	pop    rsp
   14004276a:	add    DWORD PTR [rax],eax
   14004276c:	in     al,dx
   14004276d:	pop    QWORD PTR [rbx]
   14004276f:	add    ah,dh
   140042771:	pop    rsp
   140042772:	add    DWORD PTR [rax],eax
   140042774:	out    dx,al
   140042775:	pop    rbp
   140042776:	add    DWORD PTR [rax],eax
   140042778:	in     al,0x8f
   14004277a:	add    eax,DWORD PTR [rax]
   14004277c:	lock pop rbp
   14004277e:	add    DWORD PTR [rax],eax
   140042780:	xor    DWORD PTR [rax+0x1],esp
   140042783:	add    BYTE PTR [rdi+rcx*4+0x60340003],ch
   14004278a:	add    DWORD PTR [rax],eax
   14004278c:	icebp  
   14004278d:	(bad)  
   14004278e:	add    DWORD PTR [rax],eax
   140042790:	fmul   DWORD PTR [rsi+0x60f40003]
   140042796:	add    DWORD PTR [rax],eax
   140042798:	add    al,0x65
   14004279a:	add    DWORD PTR [rax],eax
   14004279c:	(bad)  
   14004279d:	pop    QWORD PTR [rbx]
   14004279f:	add    BYTE PTR [riz*2+0x651d0001],al
   1400427a6:	add    DWORD PTR [rax],eax
   1400427a8:	je     0x14004273a
   1400427aa:	add    eax,DWORD PTR [rax]
   1400427ac:	and    BYTE PTR [rbp+0x1],ah
   1400427af:	add    BYTE PTR [rdi],bl
   1400427b1:	add    WORD PTR [rax],ax
   1400427b4:	hlt    
   1400427b5:	mov    es,WORD PTR [rbx]
   1400427b7:	add    BYTE PTR [rax],ah
   1400427b9:	add    WORD PTR [rax],ax
   1400427bc:	adc    al,0x6d
   1400427be:	add    DWORD PTR [rax],eax
   1400427c0:	and    al,0x8f
   1400427c2:	add    eax,DWORD PTR [rax]
   1400427c4:	adc    al,0x6d
   1400427c6:	add    DWORD PTR [rax],eax
   1400427c8:	pop    rdx
   1400427c9:	ins    DWORD PTR es:[rdi],dx
   1400427ca:	add    DWORD PTR [rax],eax
   1400427cc:	pop    rax
   1400427cd:	pop    QWORD PTR [rbx]
   1400427cf:	add    BYTE PTR [rbp+rbp*2+0x1],bl
   1400427d3:	add    BYTE PTR [rsi],bh
   1400427d5:	outs   dx,BYTE PTR ds:[rsi]
   1400427d6:	add    DWORD PTR [rax],eax
   1400427d8:	or     BYTE PTR [rdi+0x6e400003],cl
   1400427de:	add    DWORD PTR [rax],eax
   1400427e0:	mov    dl,0x70
   1400427e2:	add    DWORD PTR [rax],eax
   1400427e4:	mov    ah,0x8d
   1400427e6:	add    eax,DWORD PTR [rax]
   1400427e8:	mov    ah,0x70
   1400427ea:	add    DWORD PTR [rax],eax
   1400427ec:	adc    BYTE PTR [rdx+0x1],dh
   1400427ef:	add    BYTE PTR [rsi+rcx*4],dh
   1400427f2:	add    eax,DWORD PTR [rax]
   1400427f4:	adc    BYTE PTR [rdx+0x1],dh
   1400427f7:	add    BYTE PTR [rdx+0x72],dh
   1400427fa:	add    DWORD PTR [rax],eax
   1400427fc:	sbb    al,0x90
   1400427fe:	add    eax,DWORD PTR [rax]
   140042800:	je     0x140042874
   140042802:	add    DWORD PTR [rax],eax
   140042804:	lea    esi,[rdx+0x1]
   140042807:	add    BYTE PTR [rax+rdx*4+0x3],ch
   14004280b:	add    BYTE PTR [rax-0x12fffe8e],dl
   140042811:	jae    0x140042814
   140042813:	add    BYTE PTR [rax-0x71],dh
   140042816:	add    eax,DWORD PTR [rax]
   140042818:	lock jae 0x14004281c
   14004281b:	add    BYTE PTR [rdi],al
   14004281d:	je     0x140042820
   14004281f:	add    al,ah
   140042821:	mov    es,WORD PTR [rbx]
   140042823:	add    BYTE PTR [rax],cl
   140042825:	je     0x140042828
   140042827:	add    dh,ch
   140042829:	je     0x14004282c
   14004282b:	add    al,ch
   14004282d:	mov    es,WORD PTR [rbx]
   14004282f:	add    al,dh
   140042831:	je     0x140042834
   140042833:	add    BYTE PTR [rbx],bh
   140042835:	ja     0x140042838
   140042837:	add    BYTE PTR [rdi+rcx*4+0x3],al
   14004283b:	add    BYTE PTR [rdi+rsi*2],bh
   14004283e:	add    DWORD PTR [rax],eax
   140042840:	(bad)  
   140042841:	js     0x140042844
   140042843:	add    BYTE PTR [rax-0x70],bl
   140042846:	add    eax,DWORD PTR [rax]
   140042848:	adc    BYTE PTR [rax+0x1],bh
   14004284b:	add    BYTE PTR [rsi],dl
   14004284d:	jge    0x140042850
   14004284f:	add    ah,al
   140042851:	pop    QWORD PTR [rbx]
   140042853:	add    BYTE PTR [rax],bl
   140042855:	jge    0x140042858
   140042857:	add    BYTE PTR [rcx],dh
   140042859:	jge    0x14004285c
   14004285b:	add    BYTE PTR [rax+rdx*4+0x3],bh
   14004285f:	add    BYTE PTR [rax+0x7d],bl
   140042862:	add    DWORD PTR [rax],eax
   140042864:	jp     0x1400428e3
   140042866:	add    DWORD PTR [rax],eax
   140042868:	fcom   DWORD PTR [rax+0x7d7c0003]
   14004286e:	add    DWORD PTR [rax],eax
   140042870:	movabs ds:0xb8000390f800017d,eax
   140042879:	jge    0x14004287c
   14004287b:	add    BYTE PTR [rdi],dl
   14004287d:	jle    0x140042880
   14004287f:	add    BYTE PTR [rax+rdx*4],ah
   140042882:	add    eax,DWORD PTR [rax]
   140042884:	sbb    BYTE PTR [rsi+0x1],bh
   140042887:	add    al,cl
   140042889:	jle    0x14004288c
   14004288b:	add    BYTE PTR [rax-0x74],dl
   14004288e:	add    eax,DWORD PTR [rax]
   140042890:	cmp    al,0x7f
   140042892:	add    DWORD PTR [rax],eax
   140042894:	(bad)  
   140042895:	xchg   BYTE PTR [rcx],al
   140042897:	add    al,ch
   140042899:	lea    eax,[rbx]
   14004289b:	add    BYTE PTR [rax],bl
   14004289d:	xchg   BYTE PTR [rcx],al
   14004289f:	add    BYTE PTR [rsi],dh
   1400428a1:	xchg   BYTE PTR [rcx],al
   1400428a3:	add    BYTE PTR [rax-0x70],al
   1400428a6:	add    eax,DWORD PTR [rax]
   1400428a8:	cmp    BYTE PTR [rsi-0x79a9ffff],al
   1400428ae:	add    DWORD PTR [rax],eax
   1400428b0:	rex.W nop
   1400428b2:	add    eax,DWORD PTR [rax]
   1400428b4:	pop    rax
   1400428b5:	xchg   BYTE PTR [rcx],al
   1400428b7:	add    BYTE PTR [rbp-0x78],ch
   1400428ba:	add    DWORD PTR [rax],eax
   1400428bc:	adc    al,0x8f
   1400428be:	add    eax,DWORD PTR [rax]
   1400428c0:	jo     0x14004284a
   1400428c2:	add    DWORD PTR [rax],eax
   1400428c4:	ja     0x14004284f
   1400428c6:	add    DWORD PTR [rax],eax
   1400428c8:	pushf  
   1400428c9:	pop    QWORD PTR [rbx]
   1400428cb:	add    BYTE PTR [rax-0x77],bh
   1400428ce:	add    DWORD PTR [rax],eax
   1400428d0:	test   eax,0x8400018a
   1400428d5:	pop    QWORD PTR [rbx]
   1400428d7:	add    BYTE PTR [rdx+rcx*4-0x753cffff],ch
   1400428de:	add    DWORD PTR [rax],eax
   1400428e0:	push   rax
   1400428e1:	nop
   1400428e2:	add    eax,DWORD PTR [rax]
   1400428e4:	(bad)  
   1400428e5:	mov    al,BYTE PTR [rcx]
   1400428e7:	add    bl,ch
   1400428e9:	mov    eax,DWORD PTR [rcx]
   1400428eb:	add    BYTE PTR [rax+rdx*4],cl
   1400428ee:	add    eax,DWORD PTR [rax]
   1400428f0:	in     al,dx
   1400428f1:	mov    eax,DWORD PTR [rcx]
   1400428f3:	add    BYTE PTR [rax],ah
   1400428f5:	mov    WORD PTR [rcx],es
   1400428f7:	add    BYTE PTR [rax],al
   1400428f9:	pop    QWORD PTR [rbx]
   1400428fb:	add    BYTE PTR [rax],ah
   1400428fd:	mov    WORD PTR [rcx],es
   1400428ff:	add    BYTE PTR [rdx],dl
   140042901:	xchg   ecx,eax
   140042902:	add    DWORD PTR [rax],eax
   140042904:	add    BYTE PTR [rsi-0x6eebfffd],cl
   14004290a:	add    DWORD PTR [rax],eax
   14004290c:	sub    al,0x92
   14004290e:	add    DWORD PTR [rax],eax
   140042910:	sbb    al,0x8e
   140042912:	add    eax,DWORD PTR [rax]
   140042914:	sub    al,0x92
   140042916:	add    DWORD PTR [rax],eax
   140042918:	test   al,0x92
   14004291a:	add    DWORD PTR [rax],eax
   14004291c:	sub    BYTE PTR [rsi-0x6d57fffd],cl
   140042922:	add    DWORD PTR [rax],eax
   140042924:	out    dx,al
   140042925:	xchg   edx,eax
   140042926:	add    DWORD PTR [rax],eax
   140042928:	xor    BYTE PTR [rax-0x6cfbfffd],dl
   14004292e:	add    DWORD PTR [rax],eax
   140042930:	mov    edx,DWORD PTR [rbx-0x733bffff]
   140042936:	add    eax,DWORD PTR [rax]
   140042938:	in     al,0x93
   14004293a:	add    DWORD PTR [rax],eax
   14004293c:	or     dl,BYTE PTR [rcx+rax*1+0x390e000]
   140042943:	add    BYTE PTR [rsp+rdx*4],cl
   140042946:	add    DWORD PTR [rax],eax
   140042948:	rex.RXB xchg r12d,eax
   14004294a:	add    DWORD PTR [rax],eax
   14004294c:	add    BYTE PTR [rcx-0x6b7ffffd],dl
   140042952:	add    DWORD PTR [rax],eax
   140042954:	(bad)  
   140042955:	xchg   ebp,eax
   140042956:	add    DWORD PTR [rax],eax
   140042958:	lods   al,BYTE PTR ds:[rsi]
   140042959:	nop
   14004295a:	add    eax,DWORD PTR [rax]
   14004295c:	ins    BYTE PTR es:[rdi],dx
   14004295d:	xchg   ebp,eax
   14004295e:	add    DWORD PTR [rax],eax
   140042960:	mov    eax,0xc4000195
   140042965:	lea    eax,[rbx]
   140042967:	add    BYTE PTR [rax-0x5dfffe6b],bh
   14004296d:	cwde   
   14004296e:	add    DWORD PTR [rax],eax
   140042970:	push   0xffffffffa400038e
   140042975:	cwde   
   140042976:	add    DWORD PTR [rax],eax
   140042978:	sbb    eax,0x8c00019c
   14004297d:	mov    es,WORD PTR [rbx]
   14004297f:	add    BYTE PTR [rax],ah
   140042981:	pushf  
   140042982:	add    DWORD PTR [rax],eax
   140042984:	out    dx,al
   140042985:	popf   
   140042986:	add    DWORD PTR [rax],eax
   140042988:	rex.W mov es,WORD PTR [rbx]
   14004298b:	add    al,dh
   14004298d:	popf   
   14004298e:	add    DWORD PTR [rax],eax
   140042990:	(bad)  
   140042991:	sahf   
   140042992:	add    DWORD PTR [rax],eax
   140042994:	cmp    BYTE PTR [rax-0x61c7fffd],dl
   14004299a:	add    DWORD PTR [rax],eax
   14004299c:	sti    
   14004299d:	sahf   
   14004299e:	add    DWORD PTR [rax],eax
   1400429a0:	cld    
   1400429a1:	pop    QWORD PTR [rbx]
   1400429a3:	add    ah,bh
   1400429a5:	sahf   
   1400429a6:	add    DWORD PTR [rax],eax
   1400429a8:	(bad)  [rbx-0x712fffff]
   1400429ae:	add    eax,DWORD PTR [rax]
   1400429b0:	fsub   QWORD PTR [rbx-0x5bd7ffff]
   1400429b6:	add    DWORD PTR [rax],eax
   1400429b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400429b9:	nop
   1400429ba:	add    eax,DWORD PTR [rax]
   1400429bc:	sub    BYTE PTR [rcx+rax*1+0x1a43f00],ah
   1400429c3:	add    BYTE PTR [rax+rdx*4-0x5bbffffd],dl
   1400429ca:	add    DWORD PTR [rax],eax
   1400429cc:	(bad)  
   1400429cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400429ce:	add    DWORD PTR [rax],eax
   1400429d0:	pushf  
   1400429d1:	nop
   1400429d2:	add    eax,DWORD PTR [rax]
   1400429d4:	pushf  
   1400429d5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400429d6:	add    DWORD PTR [rax],eax
   1400429d8:	imul   esp,DWORD PTR [rsi-0x6f7bffff],0x3
   1400429df:	add    BYTE PTR [rsi+riz*4+0x1],ch
   1400429e3:	add    ah,ah
   1400429e5:	test   al,0x1
   1400429e7:	add    ah,cl
   1400429e9:	lea    eax,[rbx]
   1400429eb:	add    BYTE PTR [rcx+rbp*4-0x5632ffff],ch
   1400429f2:	add    DWORD PTR [rax],eax
   1400429f4:	rcl    BYTE PTR [rax-0x562ffffd],1
   1400429fa:	add    DWORD PTR [rax],eax
   1400429fc:	(bad)  
   1400429fd:	stos   BYTE PTR es:[rdi],al
   1400429fe:	add    DWORD PTR [rax],eax
   140042a00:	call   0x188042d95
   140042a05:	stos   DWORD PTR es:[rdi],eax
   140042a06:	add    DWORD PTR [rax],eax
   140042a08:	rex.W lods al,BYTE PTR ds:[rsi]
   140042a0a:	add    DWORD PTR [rax],eax
   140042a0c:	loopne 0x140042999
   140042a0e:	add    eax,DWORD PTR [rax]
   140042a10:	rex.W lods al,BYTE PTR ds:[rsi]
   140042a12:	add    DWORD PTR [rax],eax
   140042a14:	rex.WRX lods rax,QWORD PTR ds:[rsi]
   140042a16:	add    DWORD PTR [rax],eax
   140042a18:	sbb    BYTE PTR [rbx+rax*1+0x1ad5c00],cl
   140042a1f:	add    BYTE PTR [rbp+rbp*4-0x6e33ffff],al
   140042a26:	add    eax,DWORD PTR [rax]
   140042a28:	test   BYTE PTR [rbp-0x5256ffff],ch
   140042a2e:	add    DWORD PTR [rax],eax
   140042a30:	(bad)  
   140042a31:	xchg   ecx,eax
   140042a32:	add    eax,DWORD PTR [rax]
   140042a34:	mov    ah,0xad
   140042a36:	add    DWORD PTR [rax],eax
   140042a38:	(bad)  
   140042a39:	scas   al,BYTE PTR es:[rdi]
   140042a3a:	add    DWORD PTR [rax],eax
   140042a3c:	mov    WORD PTR [rcx-0x51e7fffd],ss
   140042a42:	add    DWORD PTR [rax],eax
   140042a44:	jp     0x1400429f4
   140042a46:	add    DWORD PTR [rax],eax
   140042a48:	adc    al,0x91
   140042a4a:	add    eax,DWORD PTR [rax]
   140042a4c:	jl     0x1400429fc
   140042a4e:	add    DWORD PTR [rax],eax
   140042a50:	jmp    0x1bc042c03
   140042a55:	xchg   ecx,eax
   140042a56:	add    eax,DWORD PTR [rax]
   140042a58:	in     al,dx
   140042a59:	scas   al,BYTE PTR es:[rdi]
   140042a5a:	add    DWORD PTR [rax],eax
   140042a5c:	rex.WXB scas rax,QWORD PTR es:[rdi]
   140042a5e:	add    DWORD PTR [rax],eax
   140042a60:	mov    esp,0x4c000391
   140042a65:	scas   eax,DWORD PTR es:[rdi]
   140042a66:	add    DWORD PTR [rax],eax
   140042a68:	mov    ebp,0xdc0001af
   140042a6d:	xchg   ecx,eax
   140042a6e:	add    eax,DWORD PTR [rax]
   140042a70:	shr    BYTE PTR [rdi-0x4fceffff],0x1
   140042a77:	add    ah,dl
   140042a79:	xchg   ecx,eax
   140042a7a:	add    eax,DWORD PTR [rax]
   140042a7c:	xor    al,0xb0
   140042a7e:	add    DWORD PTR [rax],eax
   140042a80:	xchg   ebx,eax
   140042a81:	mov    al,0x1
   140042a83:	add    BYTE PTR [rcx+rdx*4+0x3],al
   140042a87:	add    BYTE PTR [rax+rsi*4-0x4f09ffff],dl
   140042a8e:	add    DWORD PTR [rax],eax
   140042a90:	lods   al,BYTE PTR ds:[rsi]
   140042a91:	xchg   ecx,eax
   140042a92:	add    eax,DWORD PTR [rax]
   140042a94:	clc    
   140042a95:	mov    al,0x1
   140042a97:	add    BYTE PTR [rdi-0x4f],dl
   140042a9a:	add    DWORD PTR [rax],eax
   140042a9c:	xor    al,0x91
   140042a9e:	add    eax,DWORD PTR [rax]
   140042aa0:	pop    rax
   140042aa1:	mov    cl,0x1
   140042aa3:	add    BYTE PTR [rdx-0x63fffe4f],bh
   140042aa9:	xchg   ecx,eax
   140042aaa:	add    eax,DWORD PTR [rax]
   140042aac:	mov    esp,0x1b0001b1
   140042ab1:	mov    dl,0x1
   140042ab3:	add    BYTE PTR [rcx+rdx*4+0x3],dh
   140042ab7:	add    BYTE PTR [rdx+rsi*4],bl
   140042aba:	add    DWORD PTR [rax],eax
   140042abc:	jnp    0x140042a70
   140042abe:	add    DWORD PTR [rax],eax
   140042ac0:	fs xchg ecx,eax
   140042ac2:	add    eax,DWORD PTR [rax]
   140042ac4:	jl     0x140042a78
   140042ac6:	add    DWORD PTR [rax],eax
   140042ac8:	(bad)  [rdx-0x6edbffff]
   140042ace:	add    eax,DWORD PTR [rax]
   140042ad0:	fdiv   QWORD PTR [rdx-0x4cc1ffff]
   140042ad6:	add    DWORD PTR [rax],eax
   140042ad8:	push   rsp
   140042ad9:	xchg   ecx,eax
   140042ada:	add    eax,DWORD PTR [rax]
   140042adc:	mov    bl,0x1
   140042adf:	add    BYTE PTR [rdi-0x7bfffe4d],bh
   140042ae5:	xchg   ecx,eax
   140042ae6:	add    eax,DWORD PTR [rax]
   140042ae8:	shl    BYTE PTR [rbx-0x4bc0ffff],0x1
   140042aef:	add    BYTE PTR [rcx+rdx*4],cl
   140042af2:	add    eax,DWORD PTR [rax]
   140042af4:	jo     0x140042aaa
   140042af6:	add    DWORD PTR [rax],eax
   140042af8:	(bad)  
   140042af9:	mov    ah,0x1
   140042afb:	add    BYTE PTR [rcx+rdx*4-0x4b13fffd],dh
   140042b02:	add    DWORD PTR [rax],eax
   140042b04:	data16 mov ch,0x1
   140042b07:	add    BYTE PTR [rcx+rdx*4],bh
   140042b0a:	add    eax,DWORD PTR [rax]
   140042b0c:	push   0xffffffffe70001b5
   140042b11:	mov    ch,0x1
   140042b13:	add    BYTE PTR [rcx+rdx*4-0x4a17fffd],ah
   140042b1a:	add    DWORD PTR [rax],eax
   140042b1c:	(bad)  
   140042b1d:	mov    dh,0x1
   140042b1f:	add    BYTE PTR [rcx+rdx*4],ch
   140042b22:	add    eax,DWORD PTR [rax]
   140042b24:	fs mov dh,0x1
   140042b27:	add    bl,ah
   140042b29:	mov    dh,0x1
   140042b2b:	add    BYTE PTR [rcx+rdx*4-0x491bfffd],dl
   140042b32:	add    DWORD PTR [rax],eax
   140042b34:	pop    rsi
   140042b35:	mov    bh,0x1
   140042b37:	add    BYTE PTR [rcx+rdx*4+0x3],ch
   140042b3b:	add    BYTE PTR [rax-0x49],ah
   140042b3e:	add    DWORD PTR [rax],eax
   140042b40:	fidiv  DWORD PTR [rdi-0x6ea3ffff]
   140042b46:	add    eax,DWORD PTR [rax]
   140042b48:	fdiv   QWORD PTR [rdi-0x47a9ffff]
   140042b4e:	add    DWORD PTR [rax],eax
   140042b50:	sbb    al,0x91
   140042b52:	add    eax,DWORD PTR [rax]
   140042b54:	pop    rax
   140042b55:	mov    eax,0xb8d70001
   140042b5a:	add    DWORD PTR [rax],eax
   140042b5c:	rex.WR xchg rcx,rax
   140042b5e:	add    eax,DWORD PTR [rax]
   140042b60:	fdivr  QWORD PTR [rax-0x45d1ffff]
   140042b66:	add    DWORD PTR [rax],eax
   140042b68:	in     al,0x91
   140042b6a:	add    eax,DWORD PTR [rax]
   140042b6c:	push   rax
   140042b6d:	mov    edx,0xbb940001
   140042b72:	add    DWORD PTR [rax],eax
   140042b74:	hlt    
   140042b75:	xchg   ecx,eax
   140042b76:	add    eax,DWORD PTR [rax]
   140042b78:	xchg   esp,eax
   140042b79:	mov    ebx,0xbc5f0001
   140042b7e:	add    DWORD PTR [rax],eax
   140042b80:	cld    
   140042b81:	xchg   ecx,eax
   140042b82:	add    eax,DWORD PTR [rax]
   140042b84:	(bad)  
   140042b85:	mov    esp,0xbd2f0001
   140042b8a:	add    DWORD PTR [rax],eax
   140042b8c:	xor    BYTE PTR [rdx-0x42c7fffd],dl
   140042b92:	add    DWORD PTR [rax],eax
   140042b94:	(bad)  
   140042b95:	mov    ebp,0x92080001
   140042b9a:	add    eax,DWORD PTR [rax]
   140042b9c:	sbb    al,0xbe
   140042b9e:	add    DWORD PTR [rax],eax
   140042ba0:	out    0xbe,al
   140042ba2:	add    DWORD PTR [rax],eax
   140042ba4:	sbb    al,0x92
   140042ba6:	add    eax,DWORD PTR [rax]
   140042ba8:	call   0xf5042d6b
   140042bad:	mov    edi,0x925c0001
   140042bb2:	add    eax,DWORD PTR [rax]
   140042bb4:	mov    eax,0x6f0001bf
   140042bb9:	rol    BYTE PTR [rcx],0x0
   140042bbc:	rex.R xchg edx,eax
   140042bbe:	add    eax,DWORD PTR [rax]
   140042bc0:	js     0x140042b82
   140042bc2:	add    DWORD PTR [rax],eax
   140042bc4:	lods   al,BYTE PTR ds:[rsi]
   140042bc5:	rol    BYTE PTR [rcx],0x0
   140042bc8:	fs xchg edx,eax
   140042bca:	add    eax,DWORD PTR [rax]
   140042bcc:	mov    eax,0x310001c0
   140042bd1:	rol    DWORD PTR [rcx],0x0
   140042bd4:	js     0x140042b68
   140042bd6:	add    eax,DWORD PTR [rax]
   140042bd8:	rex ret 0x1
   140042bdc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042bdd:	ret    0x1
   140042be0:	ins    BYTE PTR es:[rdi],dx
   140042be1:	xchg   edx,eax
   140042be2:	add    eax,DWORD PTR [rax]
   140042be4:	mov    eax,0x3d0001c3
   140042be9:	(bad)
   140042bed:	xchg   edx,eax
   140042bee:	add    eax,DWORD PTR [rax]
   140042bf0:	(bad)
   140042bf5:	(bad)
   140042bf9:	xchg   edx,eax
   140042bfa:	add    eax,DWORD PTR [rax]
   140042bfc:	enter  0x1c4,0x0
   140042c00:	xchg   esp,eax
   140042c01:	(bad)
   140042c04:	cwde   
   140042c05:	xchg   edx,eax
   140042c06:	add    eax,DWORD PTR [rax]
   140042c08:	xchg   esp,eax
   140042c09:	(bad)
   140042c0c:	(bad)  
   140042c0d:	enter  0x1,0xa0
   140042c11:	xchg   edx,eax
   140042c12:	add    eax,DWORD PTR [rax]
   140042c14:	or     al,cl
   140042c16:	add    DWORD PTR [rax],eax
   140042c18:	sub    al,0xc8
   140042c1a:	add    DWORD PTR [rax],eax
   140042c1c:	mov    esp,0x4c000392
   140042c21:	enter  0x1,0x38
   140042c25:	retf   
   140042c26:	add    DWORD PTR [rax],eax
   140042c28:	(bad)  
   140042c29:	xchg   edx,eax
   140042c2a:	add    eax,DWORD PTR [rax]
   140042c2c:	push   rsp
   140042c2d:	retf   
   140042c2e:	add    DWORD PTR [rax],eax
   140042c30:	(bad)  
   140042c31:	retf   
   140042c32:	add    DWORD PTR [rax],eax
   140042c34:	(bad)  
   140042c35:	xchg   edx,eax
   140042c36:	add    eax,DWORD PTR [rax]
   140042c38:	in     al,dx
   140042c39:	retf   
   140042c3a:	add    DWORD PTR [rax],eax
   140042c3c:	(bad)  
   140042c3d:	int    0x1
   140042c3f:	add    BYTE PTR [rbx+rdx*4],cl
   140042c42:	add    eax,DWORD PTR [rax]
   140042c44:	fs int 0x1
   140042c47:	add    al,ah
   140042c49:	int    0x1
   140042c4b:	add    ah,bh
   140042c4d:	xchg   edx,eax
   140042c4e:	add    eax,DWORD PTR [rax]
   140042c50:	loopne 0x140042c1f
   140042c52:	add    DWORD PTR [rax],eax
   140042c54:	sub    al,0xce
   140042c56:	add    DWORD PTR [rax],eax
   140042c58:	(bad)  
   140042c59:	xchg   ebx,eax
   140042c5a:	add    eax,DWORD PTR [rax]
   140042c5c:	sub    al,0xce
   140042c5e:	add    DWORD PTR [rax],eax
   140042c60:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042c61:	(bad)  
   140042c62:	add    DWORD PTR [rax],eax
   140042c64:	push   0xffffffffb4000393
   140042c69:	(bad)  
   140042c6a:	add    DWORD PTR [rax],eax
   140042c6c:	test   esi,0x93340001
   140042c72:	add    eax,DWORD PTR [rax]
   140042c74:	clc    
   140042c75:	(bad)  
   140042c76:	add    DWORD PTR [rax],eax
   140042c78:	fmulp  st(7),st
   140042c7a:	add    DWORD PTR [rax],eax
   140042c7c:	js     0x140042c11
   140042c7e:	add    eax,DWORD PTR [rax]
   140042c80:	loopne 0x140042c51
   140042c82:	add    DWORD PTR [rax],eax
   140042c84:	mov    al,dl
   140042c86:	add    DWORD PTR [rax],eax
   140042c88:	enter  0x393,0x0
   140042c8c:	mov    al,dl
   140042c8e:	add    DWORD PTR [rax],eax
   140042c90:	and    cl,dl
   140042c92:	add    DWORD PTR [rax],eax
   140042c94:	jo     0x140042c2a
   140042c96:	add    eax,DWORD PTR [rax]
   140042c98:	and    cl,dl
   140042c9a:	add    DWORD PTR [rax],eax
   140042c9c:	sbb    bl,dl
   140042c9e:	add    DWORD PTR [rax],eax
   140042ca0:	clc    
   140042ca1:	xchg   ebx,eax
   140042ca2:	add    eax,DWORD PTR [rax]
   140042ca4:	sbb    bl,dl
   140042ca6:	add    DWORD PTR [rax],eax
   140042ca8:	ret    0x1d3
   140042cab:	add    BYTE PTR [rsp+rdx*4+0x3],cl
   140042caf:	add    ah,al
   140042cb1:	rol    DWORD PTR [rcx],cl
   140042cb3:	add    BYTE PTR [rax],bh
   140042cb5:	(bad)  
   140042cb6:	add    DWORD PTR [rax],eax
   140042cb8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042cb9:	xchg   esp,eax
   140042cba:	add    eax,DWORD PTR [rax]
   140042cbc:	cmp    ah,dl
   140042cbe:	add    DWORD PTR [rax],eax
   140042cc0:	xor    dl,ch
   140042cc2:	add    DWORD PTR [rax],eax
   140042cc4:	lods   al,BYTE PTR ds:[rsi]
   140042cc5:	xchg   esp,eax
   140042cc6:	add    eax,DWORD PTR [rax]
   140042cc8:	xor    al,0xd5
   140042cca:	add    DWORD PTR [rax],eax
   140042ccc:	loope  0x140042ca3
   140042cce:	add    DWORD PTR [rax],eax
   140042cd0:	pop    rsp
   140042cd1:	xchg   esp,eax
   140042cd2:	add    eax,DWORD PTR [rax]
   140042cd4:	adc    dh,dl
   140042cd6:	add    DWORD PTR [rax],eax
   140042cd8:	rex.X (bad) 
   140042cda:	add    DWORD PTR [rax],eax
   140042cdc:	loopne 0x140042c72
   140042cde:	add    eax,DWORD PTR [rax]
   140042ce0:	rex.R (bad) 
   140042ce2:	add    DWORD PTR [rax],eax
   140042ce4:	popf   
   140042ce5:	(bad)  
   140042ce6:	add    DWORD PTR [rax],eax
   140042ce8:	or     BYTE PTR [rbp-0x295ffffd],dl
   140042cee:	add    DWORD PTR [rax],eax
   140042cf0:	stos   BYTE PTR es:[rdi],al
   140042cf1:	xlat   BYTE PTR ds:[rbx]
   140042cf2:	add    DWORD PTR [rax],eax
   140042cf4:	sub    al,0x95
   140042cf6:	add    eax,DWORD PTR [rax]
   140042cf8:	lods   al,BYTE PTR ds:[rsi]
   140042cf9:	xlat   BYTE PTR ds:[rbx]
   140042cfa:	add    DWORD PTR [rax],eax
   140042cfc:	lods   al,BYTE PTR ds:[rsi]
   140042cfd:	fadd   QWORD PTR [rcx]
   140042cff:	add    BYTE PTR [rax],dl
   140042d01:	xchg   ebp,eax
   140042d02:	add    eax,DWORD PTR [rax]
   140042d04:	call   0x194042ee5
   140042d09:	fld    QWORD PTR [rcx]
   140042d0b:	add    BYTE PTR [rax-0x6b],dl
   140042d0e:	add    eax,DWORD PTR [rax]
   140042d10:	push   rsp
   140042d11:	fld    QWORD PTR [rcx]
   140042d13:	add    BYTE PTR [rdx],bl
   140042d15:	loopne 0x140042d18
   140042d17:	add    BYTE PTR [rdx*4-0x1fa7fffd],dh
   140042d1e:	add    DWORD PTR [rax],eax
   140042d20:	push   rdx
   140042d21:	in     al,0x1
   140042d23:	add    BYTE PTR [rax+0x54000395],al
   140042d29:	in     al,0x1
   140042d2b:	add    cl,dh
   140042d2d:	in     al,0x1
   140042d2f:	add    BYTE PTR [rax-0x6b],bl
   140042d32:	add    eax,DWORD PTR [rax]
   140042d34:	hlt    
   140042d35:	in     al,0x1
   140042d37:	add    BYTE PTR [rbp-0x10],ch
   140042d3a:	add    DWORD PTR [rax],eax
   140042d3c:	push   0x70000395
   140042d41:	lock add DWORD PTR [rax],eax
   140042d44:	test   al,0xf0
   140042d46:	add    DWORD PTR [rax],eax
   140042d48:	mov    BYTE PTR [rbp-0xf47fffd],dl
   140042d4e:	add    DWORD PTR [rax],eax
   140042d50:	(bad)  
   140042d51:	icebp  
   140042d52:	add    DWORD PTR [rax],eax
   140042d54:	nop
   140042d55:	xchg   ebp,eax
   140042d56:	add    eax,DWORD PTR [rax]
   140042d58:	cwde   
   140042d59:	icebp  
   140042d5a:	add    DWORD PTR [rax],eax
   140042d5c:	(bad)  
   140042d5d:	repnz add DWORD PTR [rax],eax
   140042d60:	cwde   
   140042d61:	xchg   ebp,eax
   140042d62:	add    eax,DWORD PTR [rax]
   140042d64:	pop    rax
   140042d65:	repnz add DWORD PTR [rax],eax
   140042d68:	shl    edx,cl
   140042d6a:	add    DWORD PTR [rax],eax
   140042d6c:	loopne 0x140042d03
   140042d6e:	add    eax,DWORD PTR [rax]
   140042d70:	(bad)  
   140042d71:	repnz add DWORD PTR [rax],eax
   140042d74:	pop    rsi
   140042d75:	hlt    
   140042d76:	add    DWORD PTR [rax],eax
   140042d78:	clc    
   140042d79:	xchg   ebp,eax
   140042d7a:	add    eax,DWORD PTR [rax]
   140042d7c:	(bad)  
   140042d7d:	hlt    
   140042d7e:	add    DWORD PTR [rax],eax
   140042d80:	mov    ah,0xf4
   140042d82:	add    DWORD PTR [rax],eax
   140042d84:	rcl    BYTE PTR [rbp-0xb4bfffd],1
   140042d8a:	add    DWORD PTR [rax],eax
   140042d8c:	enter  0x1f4,0x0
   140042d90:	lock xchg ebp,eax
   140042d92:	add    eax,DWORD PTR [rax]
   140042d94:	enter  0x1f4,0x0
   140042d98:	push   rbp
   140042d99:	test   BYTE PTR [rcx],0x0
   140042d9c:	or     BYTE PTR [rsi-0x9a7fffd],dl
   140042da2:	add    DWORD PTR [rax],eax
   140042da4:	xchg   ebx,eax
   140042da5:	test   BYTE PTR [rcx],0x0
   140042da8:	sbb    al,0x96
   140042daa:	add    eax,DWORD PTR [rax]
   140042dac:	mov    eax,0x930001f9
   140042db1:	cli    
   140042db2:	add    DWORD PTR [rax],eax
   140042db4:	and    al,0x96
   140042db6:	add    eax,DWORD PTR [rax]
   140042db8:	cwde   
   140042db9:	cli    
   140042dba:	add    DWORD PTR [rax],eax
   140042dbc:	(bad)  
   140042dbe:	add    DWORD PTR [rax],eax
   140042dc0:	(bad)  
   140042dc1:	xchg   edi,eax
   140042dc2:	add    eax,DWORD PTR [rax]
   140042dc4:	lock cli 
   140042dc6:	add    DWORD PTR [rax],eax
   140042dc8:	jb     0x140042dc5
   140042dca:	add    DWORD PTR [rax],eax
   140042dcc:	push   rax
   140042dcd:	xchg   edi,eax
   140042dce:	add    eax,DWORD PTR [rax]
   140042dd0:	mov    ebx,?
   140042dd2:	add    DWORD PTR [rax],eax
   140042dd4:	cs cld 
   140042dd6:	add    DWORD PTR [rax],eax
   140042dd8:	mov    eax,0x30000397
   140042ddd:	cld    
   140042dde:	add    DWORD PTR [rax],eax
   140042de0:	in     eax,0xfd
   140042de2:	add    DWORD PTR [rax],eax
   140042de4:	int3   
   140042de5:	xchg   edi,eax
   140042de6:	add    eax,DWORD PTR [rax]
   140042de8:	call   0x191042fea
   140042ded:	inc    BYTE PTR [rcx]
   140042def:	add    BYTE PTR [rsi+rdx*4],dh
   140042df2:	add    eax,DWORD PTR [rax]
   140042df4:	push   rsp
   140042df5:	inc    BYTE PTR [rcx]
   140042df7:	add    BYTE PTR [rax],dl
   140042df9:	inc    DWORD PTR [rcx]
   140042dfb:	add    BYTE PTR [rax-0x68],cl
   140042dfe:	add    eax,DWORD PTR [rax]
   140042e00:	adc    bh,bh
   140042e02:	add    DWORD PTR [rax],eax
   140042e04:	xchg   edi,edi
   140042e06:	add    DWORD PTR [rax],eax
   140042e08:	adc    BYTE PTR [rsi-0x77fffd],0x1
   140042e0f:	add    BYTE PTR [rdx+0x3],bl
   140042e12:	add    al,BYTE PTR [rax]
   140042e14:	mov    BYTE PTR [rdi+0x35c0003],dl
   140042e1a:	add    al,BYTE PTR [rax]
   140042e1c:	test   BYTE PTR [rbx],0x2
   140042e1f:	add    BYTE PTR [rsi+rdx*4+0x3f80003],dl
   140042e26:	add    al,BYTE PTR [rax]
   140042e28:	xchg   esp,eax
   140042e29:	add    al,0x2
   140042e2b:	add    BYTE PTR [rsi+rdx*4],bh
   140042e2e:	add    eax,DWORD PTR [rax]
   140042e30:	xchg   esp,eax
   140042e31:	add    al,0x2
   140042e33:	add    BYTE PTR [rbx+0x3c000205],dl
   140042e39:	xchg   edi,eax
   140042e3a:	add    eax,DWORD PTR [rax]
   140042e3c:	xchg   esp,eax
   140042e3d:	add    eax,0x5f90002
   140042e42:	add    al,BYTE PTR [rax]
   140042e44:	test   al,0x97
   140042e46:	add    eax,DWORD PTR [rax]
   140042e48:	cld    
   140042e49:	add    eax,0x7970002
   140042e4e:	add    al,BYTE PTR [rax]
   140042e50:	(bad)  
   140042e51:	xchg   esi,eax
   140042e52:	add    eax,DWORD PTR [rax]
   140042e54:	cwde   
   140042e55:	(bad)  
   140042e56:	add    al,BYTE PTR [rax]
   140042e58:	ins    BYTE PTR es:[rdi],dx
   140042e59:	or     DWORD PTR [rdx],eax
   140042e5b:	add    BYTE PTR [rax],cl
   140042e5d:	cwde   
   140042e5e:	add    eax,DWORD PTR [rax]
   140042e60:	ins    BYTE PTR es:[rdi],dx
   140042e61:	or     DWORD PTR [rdx],eax
   140042e63:	add    dh,dl
   140042e65:	or     eax,DWORD PTR [rdx]
   140042e67:	add    BYTE PTR [rax+rbx*4],ah
   140042e6a:	add    eax,DWORD PTR [rax]
   140042e6c:	fmul   DWORD PTR [rbx]
   140042e6e:	add    al,BYTE PTR [rax]
   140042e70:	out    0xe,al
   140042e72:	add    al,BYTE PTR [rax]
   140042e74:	in     al,0x97
   140042e76:	add    eax,DWORD PTR [rax]
   140042e78:	(bad)  
   140042e79:	lar    eax,WORD PTR [rax]
   140042e7c:	or     dl,BYTE PTR [rcx]
   140042e7e:	add    al,BYTE PTR [rax]
   140042e80:	mov    al,0x98
   140042e82:	add    eax,DWORD PTR [rax]
   140042e84:	or     al,0x11
   140042e86:	add    al,BYTE PTR [rax]
   140042e88:	mov    ch,0x11
   140042e8a:	add    al,BYTE PTR [rax]
   140042e8c:	enter  0x398,0x0
   140042e90:	and    al,0x12
   140042e92:	add    al,BYTE PTR [rax]
   140042e94:	enter  0x217,0x0
   140042e98:	fcomp  QWORD PTR [rax+0x17c80003]
   140042e9e:	add    al,BYTE PTR [rax]
   140042ea0:	jle    0x140042ebf
   140042ea2:	add    al,BYTE PTR [rax]
   140042ea4:	push   rax
   140042ea5:	cwde   
   140042ea6:	add    eax,DWORD PTR [rax]
   140042ea8:	sbb    BYTE PTR [rip+0x23360002],0x2        # 0x1633a2eb1
   140042eaf:	add    BYTE PTR [rax+rbx*4+0x3],dh
   140042eb3:	add    BYTE PTR [rax],bh
   140042eb5:	and    eax,DWORD PTR [rdx]
   140042eb7:	add    BYTE PTR [rbx],ah
   140042eb9:	and    al,0x2
   140042ebb:	add    BYTE PTR [rax+0x24000398],bl
   140042ec1:	and    al,0x2
   140042ec3:	add    BYTE PTR [rcx+0x20000224],bl
   140042ec9:	cdq    
   140042eca:	add    eax,DWORD PTR [rax]
   140042ecc:	pushf  
   140042ecd:	and    al,0x2
   140042ecf:	add    cl,cl
   140042ed1:	(bad)  
   140042ed2:	add    al,BYTE PTR [rax]
   140042ed4:	pop    rax
   140042ed5:	cdq    
   140042ed6:	add    eax,DWORD PTR [rax]
   140042ed8:	int3   
   140042ed9:	(bad)  
   140042eda:	add    al,BYTE PTR [rax]
   140042edc:	sub    BYTE PTR [rbx],0x2
   140042edf:	add    BYTE PTR [rcx+rbx*4],dh
   140042ee2:	add    eax,DWORD PTR [rax]
   140042ee4:	fsubr  DWORD PTR [rbx]
   140042ee6:	add    al,BYTE PTR [rax]
   140042ee8:	cmp    DWORD PTR [rdx+rax*1],esi
   140042eeb:	add    ah,bh
   140042eed:	cwde   
   140042eee:	add    eax,DWORD PTR [rax]
   140042ef0:	cmp    al,0x34
   140042ef2:	add    al,BYTE PTR [rax]
   140042ef4:	adc    al,0x3f
   140042ef6:	add    al,BYTE PTR [rax]
   140042ef8:	jl     0x140042e93
   140042efa:	add    eax,DWORD PTR [rax]
   140042efc:	nop
   140042efd:	(bad)  
   140042efe:	add    al,BYTE PTR [rax]
   140042f00:	add    al,BYTE PTR [eax]
   140042f04:	movabs al,ds:0xe200024068000399
   140042f0d:	add    al,BYTE PTR [rax]
   140042f10:	cld    
   140042f11:	cdq    
   140042f12:	add    eax,DWORD PTR [rax]
   140042f14:	in     al,0x40
   140042f16:	add    al,BYTE PTR [rax]
   140042f18:	rex.WX
   140042f19:	add    al,BYTE PTR [r8]
   140042f1c:	rcr    BYTE PTR [rcx+0x414c0003],1
   140042f22:	add    al,BYTE PTR [rax]
   140042f24:	ins    BYTE PTR es:[rdi],dx
   140042f25:	add    al,BYTE PTR [r8]
   140042f28:	adc    BYTE PTR [rdx+0x416c0003],bl
   140042f2e:	add    al,BYTE PTR [rax]
   140042f30:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042f31:	add    al,BYTE PTR [r8]
   140042f34:	or     BYTE PTR [rdx+0x41a80003],bl
   140042f3a:	add    al,BYTE PTR [rax]
   140042f3c:	int    0x4b
   140042f3e:	add    al,BYTE PTR [rax]
   140042f40:	sbb    BYTE PTR [rdx+0x4bd00003],bl
   140042f46:	add    al,BYTE PTR [rax]
   140042f48:	(bad)  
   140042f49:	rex.WR add r8b,BYTE PTR [rax]
   140042f4c:	cmp    al,0x9a
   140042f4e:	add    eax,DWORD PTR [rax]
   140042f50:	sbb    BYTE PTR [rdx+rax*1+0x0],cl
   140042f54:	imul   ecx,DWORD PTR [rdx+rax*1+0x0],0x39a44
   140042f5c:	ins    BYTE PTR es:[rdi],dx
   140042f5d:	rex.WR add r8b,BYTE PTR [rax]
   140042f60:	add    BYTE PTR [rbp+0x2],cl
   140042f63:	add    BYTE PTR [rax-0x66],bl
   140042f66:	add    eax,DWORD PTR [rax]
   140042f68:	add    BYTE PTR [rbp+0x2],cl
   140042f6b:	add    bl,dl
   140042f6d:	pop    rbp
   140042f6e:	add    al,BYTE PTR [rax]
   140042f70:	jo     0x140042f0c
   140042f72:	add    eax,DWORD PTR [rax]
   140042f74:	(bad)  
   140042f75:	pop    rbp
   140042f76:	add    al,BYTE PTR [rax]
   140042f78:	neg    BYTE PTR [rsi+0x2]
   140042f7b:	add    BYTE PTR [rdx+rbx*4+0x5f040003],dl
   140042f82:	add    al,BYTE PTR [rax]
   140042f84:	rex.WX pop rdi
   140042f86:	add    al,BYTE PTR [rax]
   140042f88:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042f89:	(bad)  
   140042f8a:	add    eax,DWORD PTR [rax]
   140042f8c:	rex.WR pop rdi
   140042f8e:	add    al,BYTE PTR [rax]
   140042f90:	popf   
   140042f91:	pop    rdi
   140042f92:	add    al,BYTE PTR [rax]
   140042f94:	lods   al,BYTE PTR ds:[rsi]
   140042f95:	(bad)  
   140042f96:	add    eax,DWORD PTR [rax]
   140042f98:	movabs al,ds:0xc00002603400025f
   140042fa1:	(bad)  
   140042fa2:	add    eax,DWORD PTR [rax]
   140042fa4:	xor    al,0x60
   140042fa6:	add    al,BYTE PTR [rax]
   140042fa8:	imul   esp,DWORD PTR [rax+0x2],0x0
   140042fac:	call   0x1ac04334b
   140042fb1:	(bad)  
   140042fb2:	add    al,BYTE PTR [rax]
   140042fb4:	movabs ds:0xa400039af0000260,eax
   140042fbd:	(bad)  
   140042fbe:	add    al,BYTE PTR [rax]
   140042fc0:	fbld   TBYTE PTR [rax+0x2]
   140042fc3:	add    al,ah
   140042fc5:	(bad)  
   140042fc6:	add    eax,DWORD PTR [rax]
   140042fc8:	loopne 0x14004302a
   140042fca:	add    al,BYTE PTR [rax]
   140042fcc:	sbb    ah,BYTE PTR [rcx+0x2]
   140042fcf:	add    al,bl
   140042fd1:	(bad)  
   140042fd2:	add    eax,DWORD PTR [rax]
   140042fd4:	xor    BYTE PTR [rcx+0x2],ah
   140042fd7:	add    BYTE PTR [rbx+0x65],dl
   140042fda:	add    al,BYTE PTR [rax]
   140042fdc:	clc    
   140042fdd:	(bad)  
   140042fde:	add    eax,DWORD PTR [rax]
   140042fe0:	push   rsp
   140042fe1:	add    al,BYTE PTR gs:[rax]
   140042fe4:	movabs eax,ds:0xa400039b60000267
   140042fed:	add    al,BYTE PTR [eax]
   140042ff0:	ret    
   140042ff1:	add    al,BYTE PTR [eax]
   140042ff4:	pop    rax
   140042ff5:	fwait
   140042ff6:	add    eax,DWORD PTR [rax]
   140042ff8:	(bad)  
   140042ff9:	add    al,BYTE PTR [eax]
   140042ffc:	hlt    
   140042ffd:	add    al,BYTE PTR [eax]
   140043000:	and    BYTE PTR [rbx+0x67f40003],bl
   140043006:	add    al,BYTE PTR [rax]
   140043008:	(bad)  
   140043009:	push   0xffffffff9b280002
   14004300e:	add    eax,DWORD PTR [rax]
   140043010:	sbb    BYTE PTR [rax+0x2],ch
   140043013:	add    BYTE PTR [rdx],bh
   140043015:	push   0xffffffff9b7c0002
   14004301a:	add    eax,DWORD PTR [rax]
   14004301c:	rex.R push 0x68660002
   140043022:	add    al,BYTE PTR [rax]
   140043024:	rex
   140043025:	fwait
   140043026:	add    eax,DWORD PTR [rax]
   140043028:	push   0xffffffff9b000268
   14004302d:	push   0xffffffff9b300002
   140043032:	add    eax,DWORD PTR [rax]
   140043034:	pushf  
   140043035:	push   0x68c10002
   14004303a:	add    al,BYTE PTR [rax]
   14004303c:	cmp    BYTE PTR [rbx+0x68c40003],bl
   140043042:	add    al,BYTE PTR [rax]
   140043044:	jmp    0x1880432b1
   140043049:	fwait
   14004304a:	add    eax,DWORD PTR [rax]
   14004304c:	in     al,dx
   14004304d:	push   0x69110002
   140043052:	add    al,BYTE PTR [rax]
   140043054:	test   BYTE PTR [rbx+0x69140003],bl
   14004305a:	add    al,BYTE PTR [rax]
   14004305c:	imul   eax,DWORD PTR ss:[rdx],0x39b5000
   140043063:	add    BYTE PTR [rax+0x69],ah
   140043066:	add    al,BYTE PTR [rax]
   140043068:	pushf  
   140043069:	imul   eax,DWORD PTR [rdx],0x0
   14004306c:	lods   al,BYTE PTR ds:[rsi]
   14004306d:	fwait
   14004306e:	add    eax,DWORD PTR [rax]
   140043070:	pushf  
   140043071:	imul   eax,DWORD PTR [rdx],0x0
   140043074:	mov    esi,0x9400026b
   140043079:	fwait
   14004307a:	add    eax,DWORD PTR [rax]
   14004307c:	shr    BYTE PTR [rbx+0x2],0x0
   140043080:	in     eax,0x6b
   140043082:	add    al,BYTE PTR [rax]
   140043084:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043085:	fwait
   140043086:	add    eax,DWORD PTR [rax]
   140043088:	call   0x1580432f8
   14004308d:	ins    BYTE PTR es:[rdi],dx
   14004308e:	add    al,BYTE PTR [rax]
   140043090:	mov    WORD PTR [rbx+0x6c180003],ds
   140043096:	add    al,BYTE PTR [rax]
   140043098:	rex.WXB ins BYTE PTR es:[rdi],dx
   14004309a:	add    al,BYTE PTR [rax]
   14004309c:	pushf  
   14004309d:	fwait
   14004309e:	add    eax,DWORD PTR [rax]
   1400430a0:	xor    BYTE PTR [rbp+0x2],ch
   1400430a3:	add    al,al
   1400430a5:	ins    DWORD PTR es:[rdi],dx
   1400430a6:	add    al,BYTE PTR [rax]
   1400430a8:	rex.W pushf 
   1400430aa:	add    eax,DWORD PTR [rax]
   1400430ac:	shr    BYTE PTR [rbp+0x2],0x0
   1400430b0:	jo     0x140043120
   1400430b2:	add    al,BYTE PTR [rax]
   1400430b4:	add    BYTE PTR [rbx+rax*1+0x26e7000],bl
   1400430bb:	add    bh,dh
   1400430bd:	outs   dx,BYTE PTR ds:[rsi]
   1400430be:	add    al,BYTE PTR [rax]
   1400430c0:	sub    BYTE PTR [rbx+rax*1+0x26f2800],bl
   1400430c7:	add    BYTE PTR [rbx+0x8000272],dh
   1400430cd:	pushf  
   1400430ce:	add    eax,DWORD PTR [rax]
   1400430d0:	mov    ah,0x72
   1400430d2:	add    al,BYTE PTR [rax]
   1400430d4:	xchg   ecx,eax
   1400430d5:	jae    0x1400430d9
   1400430d7:	add    BYTE PTR [rax],dh
   1400430d9:	pushf  
   1400430da:	add    eax,DWORD PTR [rax]
   1400430dc:	xchg   esp,eax
   1400430dd:	jae    0x1400430e1
   1400430df:	add    BYTE PTR [rax+0x74],cl
   1400430e2:	add    al,BYTE PTR [rax]
   1400430e4:	pop    rsp
   1400430e5:	pushf  
   1400430e6:	add    eax,DWORD PTR [rax]
   1400430e8:	rex.W je 0x1400430ed
   1400430eb:	add    BYTE PTR [rax+0x6c000274],dh
   1400430f1:	pushf  
   1400430f2:	add    eax,DWORD PTR [rax]
   1400430f4:	mov    al,0x74
   1400430f6:	add    al,BYTE PTR [rax]
   1400430f8:	(bad)  
   1400430f9:	jne    0x1400430fd
   1400430fb:	add    BYTE PTR [rax+0x2000039c],al
   140043101:	jne    0x140043105
   140043103:	add    BYTE PTR [rcx-0x1bfffd8b],bh
   140043109:	fwait
   14004310a:	add    eax,DWORD PTR [rax]
   14004310c:	mov    esp,0x48000275
   140043111:	js     0x140043115
   140043113:	add    ah,al
   140043115:	fwait
   140043116:	add    eax,DWORD PTR [rax]
   140043118:	rex.W js 0x14004311d
   14004311b:	add    BYTE PTR [rcx+rdi*2],dh
   14004311e:	add    al,BYTE PTR [rax]
   140043120:	sub    BYTE PTR [rbp+0x79340003],bl
   140043126:	add    al,BYTE PTR [rax]
   140043128:	mov    DWORD PTR [rcx+0x2],edi
   14004312b:	add    BYTE PTR [rbx*4+0x798c0003],bl
   140043132:	add    al,BYTE PTR [rax]
   140043134:	lods   eax,DWORD PTR ds:[rsi]
   140043135:	jns    0x140043139
   140043137:	add    BYTE PTR [rax-0x63],cl
   14004313a:	add    eax,DWORD PTR [rax]
   14004313c:	mov    al,0x79
   14004313e:	add    al,BYTE PTR [rax]
   140043140:	fs jp  0x140043145
   140043143:	add    al,cl
   140043145:	pushf  
   140043146:	add    eax,DWORD PTR [rax]
   140043148:	fs jp  0x14004314d
   14004314b:	add    bh,dh
   14004314d:	jp     0x140043151
   14004314f:	add    ah,dh
   140043151:	pushf  
   140043152:	add    eax,DWORD PTR [rax]
   140043154:	and    BYTE PTR [rbx+0x2],bh
   140043157:	add    BYTE PTR [rbp+0x7d],cl
   14004315a:	add    al,BYTE PTR [rax]
   14004315c:	(bad)  
   14004315d:	pushf  
   14004315e:	add    eax,DWORD PTR [rax]
   140043160:	push   rax
   140043161:	jge    0x140043165
   140043163:	add    BYTE PTR [rsi+rdi*2+0x2],cl
   140043167:	add    BYTE PTR [rax],al
   140043169:	popf   
   14004316a:	add    eax,DWORD PTR [rax]
   14004316c:	pushf  
   14004316d:	jle    0x140043171
   14004316f:	add    BYTE PTR [rdx+0x7f],cl
   140043172:	add    al,BYTE PTR [rax]
   140043174:	push   rax
   140043175:	popf   
   140043176:	add    eax,DWORD PTR [rax]
   140043178:	je     0x1400431f9
   14004317a:	add    al,BYTE PTR [rax]
   14004317c:	sbb    DWORD PTR [rax-0x629ffffe],eax
   140043182:	add    eax,DWORD PTR [rax]
   140043184:	sbb    al,0x80
   140043186:	add    al,BYTE PTR [rax]
   140043188:	mov    ch,0x80
   14004318a:	add    al,BYTE PTR [rax]
   14004318c:	lods   al,BYTE PTR ds:[rsi]
   14004318d:	pushf  
   14004318e:	add    eax,DWORD PTR [rax]
   140043190:	mov    eax,0x4e000280
   140043195:	add    DWORD PTR [rdx],0x0
   140043198:	nop
   140043199:	pushf  
   14004319a:	add    eax,DWORD PTR [rax]
   14004319c:	push   rax
   14004319d:	add    DWORD PTR [rdx],0x0
   1400431a0:	jb     0x140043127
   1400431a2:	add    al,BYTE PTR [rax]
   1400431a4:	je     0x140043143
   1400431a6:	add    eax,DWORD PTR [rax]
   1400431a8:	je     0x14004312f
   1400431aa:	add    al,BYTE PTR [rax]
   1400431ac:	(bad)  
   1400431ad:	xchg   BYTE PTR [rdx],al
   1400431af:	add    BYTE PTR [rbp+rbx*4-0x79c7fffd],cl
   1400431b6:	add    al,BYTE PTR [rax]
   1400431b8:	xacquire xchg BYTE PTR [rdx],al
   1400431bb:	add    BYTE PTR [rbp+rbx*4-0x790bfffd],bh
   1400431c2:	add    al,BYTE PTR [rax]
   1400431c4:	sub    eax,DWORD PTR [rdi-0x6237fffe]
   1400431ca:	add    eax,DWORD PTR [rax]
   1400431cc:	sub    al,0x87
   1400431ce:	add    al,BYTE PTR [rax]
   1400431d0:	or     BYTE PTR [rax-0x622ffffe],0x3
   1400431d7:	add    BYTE PTR [rax-0x54fffd78],cl
   1400431dd:	mov    BYTE PTR [rdx],al
   1400431df:	add    BYTE PTR [rsi+rbx*4],al
   1400431e2:	add    eax,DWORD PTR [rax]
   1400431e4:	lods   al,BYTE PTR ds:[rsi]
   1400431e5:	mov    BYTE PTR [rdx],al
   1400431e7:	add    bl,dl
   1400431e9:	mov    BYTE PTR [rdx],al
   1400431eb:	add    ah,ch
   1400431ed:	popf   
   1400431ee:	add    eax,DWORD PTR [rax]
   1400431f0:	(bad)  
   1400431f1:	mov    BYTE PTR [rdx],al
   1400431f3:	add    dh,dh
   1400431f5:	mov    BYTE PTR [rdx],al
   1400431f7:	add    ah,dh
   1400431f9:	popf   
   1400431fa:	add    eax,DWORD PTR [rax]
   1400431fc:	clc    
   1400431fd:	mov    BYTE PTR [rdx],al
   1400431ff:	add    BYTE PTR [rbx],cl
   140043201:	mov    DWORD PTR [rdx],eax
   140043203:	add    BYTE PTR [rsi+rbx*4],cl
   140043206:	add    eax,DWORD PTR [rax]
   140043208:	or     al,0x89
   14004320a:	add    al,BYTE PTR [rax]
   14004320c:	(bad)  
   14004320d:	mov    DWORD PTR [rdx],eax
   14004320f:	add    ah,bh
   140043211:	popf   
   140043212:	add    eax,DWORD PTR [rax]
   140043214:	and    BYTE PTR [rcx-0x75cefffe],cl
   14004321a:	add    al,BYTE PTR [rax]
   14004321c:	sub    BYTE PTR [rsi-0x75cbfffd],bl
   140043222:	add    al,BYTE PTR [rax]
   140043224:	mov    r8d,DWORD PTR [rdx]
   140043227:	add    BYTE PTR [rsi+rbx*4],dl
   14004322a:	add    eax,DWORD PTR [rax]
   14004322c:	mov    ah,0x8b
   14004322e:	add    al,BYTE PTR [rax]
   140043230:	rex mov WORD PTR [rdx],es
   140043233:	add    BYTE PTR [rsi+rbx*4],bh
   140043236:	add    eax,DWORD PTR [rax]
   140043238:	rex mov WORD PTR [rdx],es
   14004323b:	add    ah,al
   14004323d:	mov    WORD PTR [rdx],es
   14004323f:	add    BYTE PTR [rsi+rbx*4+0x3],al
   140043243:	add    ah,al
   140043245:	mov    WORD PTR [rdx],es
   140043247:	add    BYTE PTR [rcx+0x4c00028d],dh
   14004324d:	sahf   
   14004324e:	add    eax,DWORD PTR [rax]
   140043250:	mov    ah,0x8d
   140043252:	add    al,BYTE PTR [rax]
   140043254:	rex.WXB mov es,WORD PTR [r10]
   140043257:	add    BYTE PTR [rax-0x62],ah
   14004325a:	add    eax,DWORD PTR [rax]
   14004325c:	rex.WR mov es,WORD PTR [rdx]
   14004325f:	add    BYTE PTR [rdx-0x71],ah
   140043262:	add    al,BYTE PTR [rax]
   140043264:	push   0x6400039e
   140043269:	pop    QWORD PTR [rdx]
   14004326b:	add    BYTE PTR [rip+0xffffffff80000290],ah        # 0xc0043501
   140043271:	sahf   
   140043272:	add    eax,DWORD PTR [rax]
   140043274:	xor    BYTE PTR [rax-0x6de7fffe],dl
   14004327a:	add    al,BYTE PTR [rax]
   14004327c:	cwde   
   14004327d:	sahf   
   14004327e:	add    eax,DWORD PTR [rax]
   140043280:	rex xchg edx,eax
   140043282:	add    al,BYTE PTR [rax]
   140043284:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140043285:	xchg   esp,eax
   140043286:	add    al,BYTE PTR [rax]
   140043288:	hlt    
   140043289:	sahf   
   14004328a:	add    eax,DWORD PTR [rax]
   14004328c:	test   al,0x94
   14004328e:	add    al,BYTE PTR [rax]
   140043290:	mov    dh,0x95
   140043292:	add    al,BYTE PTR [rax]
   140043294:	rcr    BYTE PTR [rsi-0x6a47fffd],0x2
   14004329b:	add    al,ch
   14004329d:	xchg   ebp,eax
   14004329e:	add    al,BYTE PTR [rax]
   1400432a0:	(bad)  
   1400432a1:	sahf   
   1400432a2:	add    eax,DWORD PTR [rax]
   1400432a4:	call   0x14a04353e
   1400432a9:	xchg   esi,eax
   1400432aa:	add    al,BYTE PTR [rax]
   1400432ac:	fcomp  QWORD PTR [rsi-0x69f3fffd]
   1400432b2:	add    al,BYTE PTR [rax]
   1400432b4:	cs xchg esi,eax
   1400432b6:	add    al,BYTE PTR [rax]
   1400432b8:	or     al,0x9f
   1400432ba:	add    eax,DWORD PTR [rax]
   1400432bc:	cmp    BYTE PTR [rsi-0x69a5fffe],dl
   1400432c2:	add    al,BYTE PTR [rax]
   1400432c4:	mov    al,0x9e
   1400432c6:	add    eax,DWORD PTR [rax]
   1400432c8:	pop    rsp
   1400432c9:	xchg   esi,eax
   1400432ca:	add    al,BYTE PTR [rax]
   1400432cc:	(bad)  
   1400432cd:	xchg   esi,eax
   1400432ce:	add    al,BYTE PTR [rax]
   1400432d0:	in     al,0x9e
   1400432d2:	add    eax,DWORD PTR [rax]
   1400432d4:	nop
   1400432d5:	xchg   esi,eax
   1400432d6:	add    al,BYTE PTR [rax]
   1400432d8:	mov    ch,0x96
   1400432da:	add    al,BYTE PTR [rax]
   1400432dc:	in     al,dx
   1400432dd:	sahf   
   1400432de:	add    eax,DWORD PTR [rax]
   1400432e0:	mov    eax,0xdd000296
   1400432e5:	xchg   esi,eax
   1400432e6:	add    al,BYTE PTR [rax]
   1400432e8:	mov    eax,0xe000039e
   1400432ed:	xchg   esi,eax
   1400432ee:	add    al,BYTE PTR [rax]
   1400432f0:	add    eax,0x14000297
   1400432f5:	lahf   
   1400432f6:	add    eax,DWORD PTR [rax]
   1400432f8:	cmp    BYTE PTR [rdi-0x67fdfffe],dl
   1400432fe:	add    al,BYTE PTR [rax]
   140043300:	sbb    al,0x9f
   140043302:	add    eax,DWORD PTR [rax]
   140043304:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043305:	cdq    
   140043306:	add    al,BYTE PTR [rax]
   140043308:	rcr    DWORD PTR [rdx-0x60d7fffe],cl
   14004330e:	add    eax,DWORD PTR [rax]
   140043310:	fcomp  QWORD PTR [rdx-0x64dafffe]
   140043316:	add    al,BYTE PTR [rax]
   140043318:	rex.R lahf 
   14004331a:	add    eax,DWORD PTR [rax]
   14004331c:	sub    BYTE PTR [rbx-0x6411fffe],bl
   140043322:	add    al,BYTE PTR [rax]
   140043324:	push   rsp
   140043325:	lahf   
   140043326:	add    eax,DWORD PTR [rax]
   140043328:	lock fwait
   14004332a:	add    al,BYTE PTR [rax]
   14004332c:	gs pushf 
   14004332e:	add    al,BYTE PTR [rax]
   140043330:	nop
   140043331:	lahf   
   140043332:	add    eax,DWORD PTR [rax]
   140043334:	push   0xffffffffe100029c
   140043339:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004333a:	add    al,BYTE PTR [rax]
   14004333c:	ins    BYTE PTR es:[rdi],dx
   14004333d:	lahf   
   14004333e:	add    eax,DWORD PTR [rax]
   140043340:	shl    BYTE PTR [rdi-0x5823fffe],0x2
   140043347:	add    al,ah
   140043349:	je     0x14004334e
   14004334b:	add    ah,bl
   14004334d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004334e:	add    al,BYTE PTR [rax]
   140043350:	cld    
   140043351:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140043352:	add    al,BYTE PTR [rax]
   140043354:	call   0x1400436cd
   140043359:	test   al,0x2
   14004335b:	add    BYTE PTR [rdi],ah
   14004335d:	test   al,0x2
   14004335f:	add    BYTE PTR [rax+0x30000373],ah
   140043365:	test   al,0x2
   140043367:	add    BYTE PTR [rdi-0x58],al
   14004336a:	add    al,BYTE PTR [rax]
   14004336c:	or     BYTE PTR [rbx+0x3],dh
   14004336f:	add    BYTE PTR [rax-0x58],dl
   140043372:	add    al,BYTE PTR [rax]
   140043374:	addr32 test al,0x2
   140043377:	add    BYTE PTR [rax+0x74],al
   14004337a:	add    eax,DWORD PTR [rax]
   14004337c:	jo     0x140043326
   14004337e:	add    al,BYTE PTR [rax]
   140043380:	mov    WORD PTR [rax+0x75280002],gs
   140043386:	add    eax,DWORD PTR [rax]
   140043388:	nop
   140043389:	test   al,0x2
   14004338b:	add    BYTE PTR [rax+rbp*4+0x75980002],ch
   140043392:	add    eax,DWORD PTR [rax]
   140043394:	mov    al,0xa8
   140043396:	add    al,BYTE PTR [rax]
   140043398:	int3   
   140043399:	test   al,0x2
   14004339b:	add    BYTE PTR [rax+0x75],ah
   14004339e:	add    eax,DWORD PTR [rax]
   1400433a0:	rex test eax,0xa9600002
   1400433a6:	add    al,BYTE PTR [rax]
   1400433a8:	pop    rax
   1400433a9:	ins    DWORD PTR es:[rdi],dx
   1400433aa:	add    eax,DWORD PTR [rax]
   1400433ac:	(bad)  
   1400433ad:	test   eax,0xa9800002
   1400433b2:	add    al,BYTE PTR [rax]
   1400433b4:	mov    al,0x6e
   1400433b6:	add    eax,DWORD PTR [rax]
   1400433b8:	sub    BYTE PTR [rcx-0x563cfffe],0x2
   1400433bf:	add    BYTE PTR [rax],dh
   1400433c1:	imul   eax,DWORD PTR [rbx],0x0
   1400433c4:	ret    
   1400433c5:	test   eax,0xaa010002
   1400433ca:	add    al,BYTE PTR [rax]
   1400433cc:	rex imul eax,DWORD PTR [rbx],0x0
   1400433d0:	adc    BYTE PTR [rdx-0x55ccfffe],ch
   1400433d6:	add    al,BYTE PTR [rax]
   1400433d8:	cmp    BYTE PTR [rax+0x3],dh
   1400433db:	add    BYTE PTR [rbx],dh
   1400433dd:	stos   BYTE PTR es:[rdi],al
   1400433de:	add    al,BYTE PTR [rax]
   1400433e0:	rex.WX stos BYTE PTR es:[rdi],al
   1400433e2:	add    al,BYTE PTR [rax]
   1400433e4:	rex.W jo 0x1400433ea
   1400433e7:	add    BYTE PTR [rdx+rbp*4+0x2],bh
   1400433eb:	add    BYTE PTR [rax+0x380002aa],dl
   1400433f1:	ja     0x1400433f6
   1400433f3:	add    BYTE PTR [rax-0x29fffd56],dl
   1400433f9:	stos   BYTE PTR es:[rdi],al
   1400433fa:	add    al,BYTE PTR [rax]
   1400433fc:	sub    al,0x78
   1400433fe:	add    eax,DWORD PTR [rax]
   140043400:	(bad)  
   140043401:	stos   BYTE PTR es:[rdi],al
   140043402:	add    al,BYTE PTR [rax]
   140043404:	hlt    
   140043405:	stos   BYTE PTR es:[rdi],al
   140043406:	add    al,BYTE PTR [rax]
   140043408:	cmp    BYTE PTR [rcx+0x3],bh
   14004340b:	add    ah,dh
   14004340d:	stos   BYTE PTR es:[rdi],al
   14004340e:	add    al,BYTE PTR [rax]
   140043410:	sbb    BYTE PTR [rbx+0x7b080002],ch
   140043416:	add    eax,DWORD PTR [rax]
   140043418:	sbb    BYTE PTR [rbx-0x54bbfffe],ch
   14004341e:	add    al,BYTE PTR [rax]
   140043420:	lock jl 0x140043426
   140043423:	add    BYTE PTR [rbx+rbp*4+0x2],al
   140043427:	add    BYTE PTR [rbp-0x55],bl
   14004342a:	add    al,BYTE PTR [rax]
   14004342c:	test   al,0x7d
   14004342e:	add    eax,DWORD PTR [rax]
   140043430:	pop    rbp
   140043431:	stos   DWORD PTR es:[rdi],eax
   140043432:	add    al,BYTE PTR [rax]
   140043434:	jbe    0x1400433e1
   140043436:	add    al,BYTE PTR [rax]
   140043438:	mov    al,0x7d
   14004343a:	add    eax,DWORD PTR [rax]
   14004343c:	jbe    0x1400433e9
   14004343e:	add    al,BYTE PTR [rax]
   140043440:	(bad)  
   140043441:	stos   DWORD PTR es:[rdi],eax
   140043442:	add    al,BYTE PTR [rax]
   140043444:	hlt    
   140043445:	jge    0x14004344a
   140043447:	add    BYTE PTR [rdi-0x57fffd55],cl
   14004344d:	stos   DWORD PTR es:[rdi],eax
   14004344e:	add    al,BYTE PTR [rax]
   140043450:	cld    
   140043451:	jge    0x140043456
   140043453:	add    BYTE PTR [rax-0x63fffd55],ch
   140043459:	lods   al,BYTE PTR ds:[rsi]
   14004345a:	add    al,BYTE PTR [rax]
   14004345c:	int3   
   14004345d:	jle    0x140043462
   14004345f:	add    BYTE PTR [rsp+rbp*4-0x52e5fffe],bl
   140043466:	add    al,BYTE PTR [rax]
   140043468:	(bad)  
   140043469:	jle    0x14004346e
   14004346b:	add    BYTE PTR [rdx],bl
   14004346d:	lods   eax,DWORD PTR ds:[rsi]
   14004346e:	add    al,BYTE PTR [rax]
   140043470:	xor    al,0xad
   140043472:	add    al,BYTE PTR [rax]
   140043474:	rex.R jle 0x14004347a
   140043477:	add    BYTE PTR [rbp*4-0x52b3fffe],dh
   14004347e:	add    al,BYTE PTR [rax]
   140043480:	sbb    al,0x80
   140043482:	add    eax,DWORD PTR [rax]
   140043484:	rex.WR lods rax,QWORD PTR ds:[rsi]
   140043486:	add    al,BYTE PTR [rax]
   140043488:	(bad)  
   140043489:	lods   eax,DWORD PTR ds:[rsi]
   14004348a:	add    al,BYTE PTR [rax]
   14004348c:	cmp    BYTE PTR [rdi+0x3],bh
   14004348f:	add    BYTE PTR [rdx-0x53],ah
   140043492:	add    al,BYTE PTR [rax]
   140043494:	mov    ebp,DWORD PTR [rbp+0x7f400002]
   14004349a:	add    eax,DWORD PTR [rax]
   14004349c:	mov    ebp,DWORD PTR [rbp-0x525bfffe]
   1400434a2:	add    al,BYTE PTR [rax]
   1400434a4:	ins    BYTE PTR es:[rdi],dx
   1400434a5:	add    DWORD PTR [rbx],0x2ada400
   1400434ab:	add    BYTE PTR [rdi-0x23fffd53],bh
   1400434b1:	add    DWORD PTR [rbx],0x2adbf00
   1400434b7:	add    al,bl
   1400434b9:	lods   eax,DWORD PTR ds:[rsi]
   1400434ba:	add    al,BYTE PTR [rax]
   1400434bc:	xchg   esp,eax
   1400434bd:	add    DWORD PTR [rbx],0x2add800
   1400434c3:	add    cl,dh
   1400434c5:	lods   eax,DWORD PTR ds:[rsi]
   1400434c6:	add    al,BYTE PTR [rax]
   1400434c8:	add    al,0x82
   1400434ca:	add    eax,DWORD PTR [rax]
   1400434cc:	icebp  
   1400434cd:	lods   eax,DWORD PTR ds:[rsi]
   1400434ce:	add    al,BYTE PTR [rax]
   1400434d0:	or     ch,BYTE PTR [rsi-0x7dc7fffe]
   1400434d6:	add    eax,DWORD PTR [rax]
   1400434d8:	or     ch,BYTE PTR [rsi-0x51dafffe]
   1400434de:	add    al,BYTE PTR [rax]
   1400434e0:	lods   al,BYTE PTR ds:[rsi]
   1400434e1:	add    DWORD PTR [rbx],0x0
   1400434e4:	and    eax,0x3b0002ae
   1400434e9:	scas   al,BYTE PTR es:[rdi]
   1400434ea:	add    al,BYTE PTR [rax]
   1400434ec:	fadd   QWORD PTR [rbp-0x51c4fffd]
   1400434f2:	add    al,BYTE PTR [rax]
   1400434f4:	pop    rcx
   1400434f5:	scas   al,BYTE PTR es:[rdi]
   1400434f6:	add    al,BYTE PTR [rax]
   1400434f8:	lods   al,BYTE PTR ds:[rsi]
   1400434f9:	test   DWORD PTR [rbx],eax
   1400434fb:	add    BYTE PTR [rcx-0x52],bl
   1400434fe:	add    al,BYTE PTR [rax]
   140043500:	outs   dx,DWORD PTR ds:[rsi]
   140043501:	scas   al,BYTE PTR es:[rdi]
   140043502:	add    al,BYTE PTR [rax]
   140043504:	je     0x14004348b
   140043506:	add    eax,DWORD PTR [rax]
   140043508:	outs   dx,DWORD PTR ds:[rsi]
   140043509:	scas   al,BYTE PTR es:[rdi]
   14004350a:	add    al,BYTE PTR [rax]
   14004350c:	mov    WORD PTR [rsi-0x78fffffe],gs
   140043512:	add    eax,DWORD PTR [rax]
   140043514:	nop
   140043515:	scas   al,BYTE PTR es:[rdi]
   140043516:	add    al,BYTE PTR [rax]
   140043518:	mov    al,0xae
   14004351a:	add    al,BYTE PTR [rax]
   14004351c:	pop    rax
   14004351d:	xchg   DWORD PTR [rbx],eax
   14004351f:	add    BYTE PTR [rax-0x36fffd52],dh
   140043525:	scas   al,BYTE PTR es:[rdi]
   140043526:	add    al,BYTE PTR [rax]
   140043528:	cwde   
   140043529:	xchg   DWORD PTR [rbx],eax
   14004352b:	add    cl,cl
   14004352d:	scas   al,BYTE PTR es:[rdi]
   14004352e:	add    al,BYTE PTR [rax]
   140043530:	loop   0x1400434e0
   140043532:	add    al,BYTE PTR [rax]
   140043534:	rol    BYTE PTR [rdi-0x511dfffd],1
   14004353a:	add    al,BYTE PTR [rax]
   14004353c:	stc    
   14004353d:	scas   al,BYTE PTR es:[rdi]
   14004353e:	add    al,BYTE PTR [rax]
   140043540:	cld    
   140043541:	mov    BYTE PTR [rbx],al
   140043543:	add    cl,bh
   140043545:	scas   al,BYTE PTR es:[rdi]
   140043546:	add    al,BYTE PTR [rax]
   140043548:	adc    BYTE PTR [rdi-0x76abfffe],ch
   14004354e:	add    eax,DWORD PTR [rax]
   140043550:	adc    BYTE PTR [rdi-0x50d6fffe],ch
   140043556:	add    al,BYTE PTR [rax]
   140043558:	xchg   esp,eax
   140043559:	mov    DWORD PTR [rbx],eax
   14004355b:	add    BYTE PTR [rcx],ch
   14004355d:	scas   eax,DWORD PTR es:[rdi]
   14004355e:	add    al,BYTE PTR [rax]
   140043560:	push   rax
   140043561:	scas   eax,DWORD PTR es:[rdi]
   140043562:	add    al,BYTE PTR [rax]
   140043564:	adc    BYTE PTR [rdx-0x50affffd],cl
   14004356a:	add    al,BYTE PTR [rax]
   14004356c:	push   0x640002af
   140043571:	mov    al,BYTE PTR [rbx]
   140043573:	add    BYTE PTR [rax-0x51],ch
   140043576:	add    al,BYTE PTR [rax]
   140043578:	sub    DWORD PTR [rdi-0x73effffe],0xaf810003
   140043582:	add    al,BYTE PTR [rax]
   140043584:	(bad)  
   140043585:	scas   eax,DWORD PTR es:[rdi]
   140043586:	add    al,BYTE PTR [rax]
   140043588:	rex.W mov WORD PTR [rbx],es
   14004358b:	add    BYTE PTR [rdx-0x4dfffd51],bl
   140043591:	scas   eax,DWORD PTR es:[rdi]
   140043592:	add    al,BYTE PTR [rax]
   140043594:	pop    rax
   140043595:	xchg   ebx,eax
   140043596:	add    eax,DWORD PTR [rax]
   140043598:	mov    dl,0xaf
   14004359a:	add    al,BYTE PTR [rax]
   14004359c:	fisubr DWORD PTR [rdi-0x6c47fffe]
   1400435a2:	add    eax,DWORD PTR [rax]
   1400435a4:	fisubr DWORD PTR [rdi-0x500cfffe]
   1400435aa:	add    al,BYTE PTR [rax]
   1400435ac:	rcl    BYTE PTR [rbx-0x500cfffd],0x2
   1400435b3:	add    BYTE PTR [rax+rsi*4],cl
   1400435b6:	add    al,BYTE PTR [rax]
   1400435b8:	lock xchg ebx,eax
   1400435ba:	add    eax,DWORD PTR [rax]
   1400435bc:	or     al,0xb0
   1400435be:	add    al,BYTE PTR [rax]
   1400435c0:	and    eax,0x9c0002b0
   1400435c5:	xchg   esp,eax
   1400435c6:	add    eax,DWORD PTR [rax]
   1400435c8:	and    eax,0x400002b0
   1400435cd:	mov    al,0x2
   1400435cf:	add    BYTE PTR [rsp+rdx*4],bh
   1400435d2:	add    eax,DWORD PTR [rax]
   1400435d4:	mov    al,0x2
   1400435d7:	add    BYTE PTR [rcx-0x50],bl
   1400435da:	add    al,BYTE PTR [rax]
   1400435dc:	rex.R xchg esp,eax
   1400435de:	add    eax,DWORD PTR [rax]
   1400435e0:	pop    rcx
   1400435e1:	mov    al,0x2
   1400435e3:	add    BYTE PTR [rdx-0x27fffd50],bl
   1400435e9:	xchg   esp,eax
   1400435ea:	add    eax,DWORD PTR [rax]
   1400435ec:	(bad)  
   1400435ed:	mov    al,0x2
   1400435ef:	add    BYTE PTR [rbx+0x2b0],dh
   1400435f5:	xchg   ebp,eax
   1400435f6:	add    eax,DWORD PTR [rax]
   1400435f8:	mov    bl,0xb0
   1400435fa:	add    al,BYTE PTR [rax]
   1400435fc:	retf   
   1400435fd:	mov    al,0x2
   1400435ff:	add    al,cl
   140043601:	xchg   ebp,eax
   140043602:	add    eax,DWORD PTR [rax]
   140043604:	retf   
   140043605:	mov    al,0x2
   140043607:	add    ah,ah
   140043609:	mov    al,0x2
   14004360b:	add    ah,al
   14004360d:	xchg   esi,eax
   14004360e:	add    eax,DWORD PTR [rax]
   140043610:	in     al,0xb0
   140043612:	add    al,BYTE PTR [rax]
   140043614:	std    
   140043615:	mov    al,0x2
   140043617:	add    ah,cl
   140043619:	xchg   esi,eax
   14004361a:	add    eax,DWORD PTR [rax]
   14004361c:	std    
   14004361d:	mov    al,0x2
   14004361f:	add    BYTE PTR [rsi],dl
   140043621:	mov    cl,0x2
   140043623:	add    BYTE PTR [rax-0x6a],dh
   140043626:	add    eax,DWORD PTR [rax]
   140043628:	(bad)  
   140043629:	mov    cl,0x2
   14004362b:	add    BYTE PTR [rdi],ch
   14004362d:	mov    cl,0x2
   14004362f:	add    BYTE PTR [rax-0x6a],bh
   140043632:	add    eax,DWORD PTR [rax]
   140043634:	(bad)  
   140043635:	mov    cl,0x2
   140043637:	add    BYTE PTR [rax-0x4f],cl
   14004363a:	add    al,BYTE PTR [rax]
   14004363c:	adc    BYTE PTR [rdi-0x4eb7fffd],0x2
   140043643:	add    BYTE PTR [rbx-0x4f],ah
   140043646:	add    al,BYTE PTR [rax]
   140043648:	and    al,0x97
   14004364a:	add    eax,DWORD PTR [rax]
   14004364c:	movsxd esi,DWORD PTR [rcx-0x4e81fffe]
   140043652:	add    al,BYTE PTR [rax]
   140043654:	sub    al,0x97
   140043656:	add    eax,DWORD PTR [rax]
   140043658:	jle    0x14004360b
   14004365a:	add    al,BYTE PTR [rax]
   14004365c:	cdq    
   14004365d:	mov    cl,0x2
   14004365f:	add    BYTE PTR [rdi+rdx*4],dh
   140043662:	add    eax,DWORD PTR [rax]
   140043664:	cdq    
   140043665:	mov    cl,0x2
   140043667:	add    BYTE PTR [rax-0x37fffd4f],dh
   14004366d:	cdq    
   14004366e:	add    eax,DWORD PTR [rax]
   140043670:	mov    al,0xb1
   140043672:	add    al,BYTE PTR [rax]
   140043674:	enter  0x2b1,0x0
   140043678:	hlt    
   140043679:	cdq    
   14004367a:	add    eax,DWORD PTR [rax]
   14004367c:	enter  0x2b1,0x0
   140043680:	fbstp  TBYTE PTR [rcx-0x624bfffe]
   140043686:	add    eax,DWORD PTR [rax]

Disassembly of section .rsrc:

0000000140044000 <.rsrc>:
	...
   14004400c:	add    BYTE PTR [rax],al
   14004400e:	add    eax,0x300
   140044013:	add    BYTE PTR [rax],bh
   140044015:	add    BYTE PTR [rax],al
   140044017:	add    BYTE PTR [rsi],0x0
   14004401a:	add    BYTE PTR [rax],al
   14004401c:	cwde   
   14004401d:	add    BYTE PTR [rax],al
   14004401f:	or     BYTE PTR [rsi],0x0
   140044022:	add    BYTE PTR [rax],al
   140044024:	mov    al,0x0
   140044026:	add    BYTE PTR [rax+0x10],al
   14004402c:	enter  0x0,0x80
   140044030:	sbb    BYTE PTR [rax],al
   140044032:	add    BYTE PTR [rax],al
   140044034:	loopne 0x140044036
   140044036:	add    BYTE PTR [rax+0x0],al
	...
   140044044:	add    BYTE PTR [rax],al
   140044046:	or     al,BYTE PTR [rax]
   140044048:	add    DWORD PTR [rax],eax
   14004404a:	add    BYTE PTR [rax],al
   14004404c:	clc    
   14004404d:	add    BYTE PTR [rax],al
   14004404f:	add    BYTE PTR [rdx],0x0
   140044052:	add    BYTE PTR [rax],al
   140044054:	adc    BYTE PTR [rcx],al
   140044056:	add    BYTE PTR [rax+0x3],al
   14004405c:	sub    BYTE PTR [rcx],al
   14004405e:	add    BYTE PTR [rax+0x4],al
   140044064:	rex add DWORD PTR [rax],eax
   140044067:	add    BYTE PTR [rip+0x58000000],0x1        # 0x19804406e
   14004406e:	add    BYTE PTR [rax+0x6],al
   140044074:	jo     0x140044077
   140044076:	add    BYTE PTR [rax+0x7],al
   14004407c:	mov    BYTE PTR [rcx],al
   14004407e:	add    BYTE PTR [rax+0x8],al
   140044084:	movabs al,ds:0xb800000009800001
   14004408d:	add    DWORD PTR [rax],eax
   14004408f:	or     BYTE PTR [rdx],0x0
   140044092:	add    BYTE PTR [rax],al
   140044094:	rol    BYTE PTR [rcx],1
   140044096:	add    BYTE PTR [rax+0x0],al
	...
   1400440a4:	add    BYTE PTR [rax],al
   1400440a6:	add    DWORD PTR [rax],eax
   1400440a8:	(bad)  
   1400440a9:	add    BYTE PTR [rax],al
   1400440ab:	add    al,ch
   1400440ad:	add    DWORD PTR [rax],eax
   1400440af:	add    BYTE PTR [rax],0x0
	...
   1400440ba:	add    BYTE PTR [rax],al
   1400440bc:	add    DWORD PTR [rax],eax
   1400440be:	add    BYTE PTR [rax],al
   1400440c0:	rex add eax,DWORD PTR [rax]
   1400440c3:	or     BYTE PTR [rax],0x2
   1400440c6:	add    BYTE PTR [rax+0x0],al
	...
   1400440d4:	add    BYTE PTR [rax],al
   1400440d6:	add    DWORD PTR [rax],eax
   1400440d8:	add    DWORD PTR [rax],eax
   1400440da:	add    BYTE PTR [rax],al
   1400440dc:	and    BYTE PTR [rdx],al
   1400440de:	add    BYTE PTR [rax+0x0],al
	...
   1400440ec:	add    BYTE PTR [rax],al
   1400440ee:	add    DWORD PTR [rax],eax
   1400440f0:	add    DWORD PTR [rax],eax
   1400440f2:	add    BYTE PTR [rax],al
   1400440f4:	cmp    BYTE PTR [rdx],al
   1400440f6:	add    BYTE PTR [rax+0x0],al
	...
   140044104:	add    BYTE PTR [rax],al
   140044106:	add    DWORD PTR [rax],eax
   140044108:	or     DWORD PTR [rax+rax*1],eax
   14004410b:	add    BYTE PTR [rax+0x2],dl
	...
   14004411e:	add    DWORD PTR [rax],eax
   140044120:	or     DWORD PTR [rax+rax*1],eax
   140044123:	add    BYTE PTR [rax+0x2],ah
	...
   140044136:	add    DWORD PTR [rax],eax
   140044138:	or     DWORD PTR [rax+rax*1],eax
   14004413b:	add    BYTE PTR [rax+0x2],dh
	...
   14004414e:	add    DWORD PTR [rax],eax
   140044150:	or     DWORD PTR [rax+rax*1],eax
   140044153:	add    BYTE PTR [rax+0x2],al
	...
   140044165:	add    BYTE PTR [rcx],al
   140044167:	add    BYTE PTR [rcx],cl
   140044169:	add    al,0x0
   14004416b:	add    BYTE PTR [rax+0x2],dl
	...
   14004417d:	add    BYTE PTR [rcx],al
   14004417f:	add    BYTE PTR [rcx],cl
   140044181:	add    al,0x0
   140044183:	add    BYTE PTR [rax+0x2],ah
	...
   140044195:	add    BYTE PTR [rcx],al
   140044197:	add    BYTE PTR [rcx],cl
   140044199:	add    al,0x0
   14004419b:	add    BYTE PTR [rax+0x2],dh
	...
   1400441ad:	add    BYTE PTR [rcx],al
   1400441af:	add    BYTE PTR [rcx],cl
   1400441b1:	add    al,0x0
   1400441b3:	add    al,al
   1400441b5:	add    al,BYTE PTR [rax]
	...
   1400441c3:	add    BYTE PTR [rax],al
   1400441c5:	add    BYTE PTR [rcx],al
   1400441c7:	add    BYTE PTR [rcx],cl
   1400441c9:	add    al,0x0
   1400441cb:	add    al,dl
   1400441cd:	add    al,BYTE PTR [rax]
	...
   1400441db:	add    BYTE PTR [rax],al
   1400441dd:	add    BYTE PTR [rcx],al
   1400441df:	add    BYTE PTR [rcx],cl
   1400441e1:	add    al,0x0
   1400441e3:	add    al,ah
   1400441e5:	add    al,BYTE PTR [rax]
	...
   1400441f3:	add    BYTE PTR [rax],al
   1400441f5:	add    BYTE PTR [rdx],al
   1400441f7:	add    BYTE PTR [rcx],cl
   1400441f9:	add    al,0x0
   1400441fb:	add    al,dh
   1400441fd:	add    al,BYTE PTR [rax]
   1400441ff:	add    BYTE PTR [rcx],dl
   140044201:	add    al,0x0
   140044203:	add    BYTE PTR [rax],al
   140044205:	add    eax,DWORD PTR [rax]
	...
   140044213:	add    BYTE PTR [rax],al
   140044215:	add    BYTE PTR [rcx],al
   140044217:	add    BYTE PTR [rcx],cl
   140044219:	add    al,0x0
   14004421b:	add    BYTE PTR [rax],dl
   14004421d:	add    eax,DWORD PTR [rax]
	...
   14004422b:	add    BYTE PTR [rax],al
   14004422d:	add    BYTE PTR [rcx],al
   14004422f:	add    BYTE PTR [rcx],cl
   140044231:	add    al,0x0
   140044233:	add    BYTE PTR [rax],ah
   140044235:	add    eax,DWORD PTR [rax]
	...
   140044243:	add    BYTE PTR [rax],al
   140044245:	add    BYTE PTR [rcx],al
   140044247:	add    BYTE PTR [rcx],cl
   140044249:	add    al,0x0
   14004424b:	add    BYTE PTR [rax],dh
   14004424d:	add    eax,DWORD PTR [rax]
   14004424f:	add    BYTE PTR [rax+0x4c],dl
   140044252:	add    al,0x0
   140044254:	push   0x6
   140044259:	add    BYTE PTR [rax],al
   14004425b:	add    BYTE PTR [rax],al
   14004425d:	add    BYTE PTR [rax],al
   14004425f:	add    BYTE PTR [rax-0x17fffbae],bh
   140044265:	add    al,BYTE PTR [rax]
	...
   14004426f:	add    BYTE PTR [rax+0x28000455],ah
   140044275:	add    DWORD PTR [rax],eax
	...
   14004427f:	add    al,cl
   140044281:	push   rsi
   140044282:	add    al,0x0
   140044284:	test   al,0xe
	...
   14004428e:	add    BYTE PTR [rax],al
   140044290:	jo     0x1400442f7
   140044292:	add    al,0x0
   140044294:	test   al,0x8
	...
   14004429e:	add    BYTE PTR [rax],al
   1400442a0:	sbb    BYTE PTR [rsi+0x4],ch
   1400442a3:	add    BYTE PTR [rax+0x5],ch
	...
   1400442ae:	add    BYTE PTR [rax],al
   1400442b0:	xor    BYTE PTR [rbx+0x4],0x0
   1400442b4:	int3   
   1400442b5:	test   al,0x0
	...
   1400442bf:	add    BYTE PTR [rax+0x1c],dl
   1400442c2:	add    eax,0x25a800
	...
   1400442cf:	add    al,bh
   1400442d1:	rex.B add eax,0x10a800
	...
   1400442df:	add    BYTE PTR [rax+0x68000552],ah
   1400442e5:	add    al,0x0
	...
   1400442ef:	add    BYTE PTR [rax+0x7c000557],ah
	...
   1400442fd:	add    BYTE PTR [rax],al
   1400442ff:	add    BYTE PTR [rax],ah
   140044301:	pop    rax
   140044302:	add    eax,0x6400
	...
   14004430f:	add    BYTE PTR [rax],cl
   140044311:	push   rdi
   140044312:	add    eax,0x9200
	...
   14004431f:	add    BYTE PTR [rax-0x57fffbb7],ch
   140044325:	add    al,BYTE PTR [rax]
	...
   14004432f:	add    BYTE PTR [rax+0x43],ah
   140044332:	add    al,0x0
   140044334:	rex.B (bad) 
	...
   14004433e:	add    BYTE PTR [rax],al
   140044340:	or     DWORD PTR [rax],eax
   140044342:	rex.WB add BYTE PTR [r8+rax*1+0x49],al
   140044347:	add    BYTE PTR [rdi+0x0],bl
   14004434a:	rex.WB add BYTE PTR [r11+0x0],al
   14004434e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140044352:	xor    DWORD PTR [rax],eax
	...
   140044360:	cmp    al,0x3f
   140044362:	js     0x1400443d1
   140044364:	ins    BYTE PTR es:[rdi],dx
   140044365:	and    BYTE PTR [rsi+0x65],dh
   140044368:	jb     0x1400443dd
   14004436a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140044371:	xor    BYTE PTR [rdx],ah
   140044373:	and    BYTE PTR [rbp+0x6e],ah
   140044376:	movsxd ebp,DWORD PTR [rdi+0x64]
   140044379:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140044380:	rex.RX sub eax,0x73202238
   140044386:	je     0x1400443e9
   140044388:	outs   dx,BYTE PTR ds:[rsi]
   140044389:	fs (bad) 
   14004438b:	ins    BYTE PTR es:[rdi],dx
   14004438c:	outs   dx,DWORD PTR ds:[rsi]
   14004438d:	outs   dx,BYTE PTR ds:[rsi]
   14004438e:	gs cmp eax,0x73657922
   140044394:	and    bh,BYTE PTR [rdi]
   140044396:	or     bh,BYTE PTR ds:[rcx+riz*2]
   14004439a:	jae    0x14004440f
   14004439c:	gs ins DWORD PTR es:[rdi],dx
   14004439e:	(bad)  
   14004439f:	ins    BYTE PTR es:[rdi],dx
   1400443a0:	jns    0x1400443c2
   1400443a2:	js     0x140044411
   1400443a4:	ins    BYTE PTR es:[rdi],dx
   1400443a5:	outs   dx,BYTE PTR ds:[rsi]
   1400443a6:	jae    0x1400443e5
   1400443a8:	and    dh,BYTE PTR [rbp+0x72]
   1400443ab:	outs   dx,BYTE PTR ds:[rsi]
   1400443ac:	cmp    dh,BYTE PTR [rbx+0x63]
   1400443af:	push   0x73616d65
   1400443b4:	sub    eax,0x7263696d
   1400443b9:	outs   dx,DWORD PTR ds:[rsi]
   1400443ba:	jae    0x14004442b
   1400443bc:	data16 je 0x1400443ec
   1400443bf:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400443c2:	cmp    ah,BYTE PTR [rcx+0x73]
   1400443c5:	ins    DWORD PTR es:[rdi],dx
   1400443c6:	cs jbe 0x1400443fa
   1400443c9:	and    ah,BYTE PTR [rax]
   1400443cb:	ins    DWORD PTR es:[rdi],dx
   1400443cc:	(bad)  
   1400443cd:	outs   dx,BYTE PTR ds:[rsi]
   1400443ce:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400443d5:	jb     0x14004444a
   1400443d7:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400443de:	xor    BYTE PTR [rdx],ah
   1400443e0:	and    BYTE PTR ds:[rdx],cl
   1400443e3:	and    BYTE PTR [rax],ah
   1400443e5:	cmp    al,0x61
   1400443e7:	jae    0x14004445c
   1400443e9:	gs ins DWORD PTR es:[rdi],dx
   1400443eb:	(bad)  
   1400443ec:	ins    BYTE PTR es:[rdi],dx
   1400443ed:	jns    0x140044438
   1400443ef:	fs outs dx,BYTE PTR gs:[rsi]
   1400443f2:	je     0x14004445d
   1400443f4:	je     0x14004446f
   1400443f6:	and    BYTE PTR [rsi+0x65],dh
   1400443f9:	jb     0x14004446e
   1400443fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e37223d
   140044402:	xor    al,0x2e
   140044404:	xor    BYTE PTR [rsi],ch
   140044406:	xor    BYTE PTR [rdx],ah
   140044408:	or     ah,BYTE PTR [rax]
   14004440a:	and    BYTE PTR [rax],ah
   14004440c:	and    BYTE PTR [rax],ah
   14004440e:	jo     0x140044482
   140044410:	outs   dx,DWORD PTR ds:[rsi]
   140044411:	movsxd esp,DWORD PTR [rbp+0x73]
   140044414:	jae    0x140044485
   140044416:	jb     0x140044459
   140044418:	jb     0x14004447d
   14004441a:	push   0x63657469
   14004441f:	je     0x140044496
   140044421:	jb     0x140044488
   140044423:	cmp    eax,0xa222a22
   140044428:	and    BYTE PTR [rax],ah
   14004442a:	and    BYTE PTR [rax],ah
   14004442c:	and    BYTE PTR [rsi+0x61],ch
   14004442f:	ins    DWORD PTR es:[rdi],dx
   140044430:	gs cmp eax,0x74657322
   140044436:	jne    0x1400444a8
   140044438:	and    cl,BYTE PTR [rdx]
   14004443a:	and    BYTE PTR [rax],ah
   14004443c:	and    BYTE PTR [rax],ah
   14004443e:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140044442:	gs cmp eax,0x6e697722
   140044448:	xor    esi,DWORD PTR [rdx]
   14004444a:	and    ch,BYTE PTR [rdi]
   14004444c:	and    BYTE PTR ds:[rdx],cl
   14004444f:	or     ah,BYTE PTR [rax]
   140044451:	and    BYTE PTR [rsp+riz*2],bh
   140044454:	gs jae 0x1400444ba
   140044457:	jb     0x1400444c2
   140044459:	jo     0x1400444cf
   14004445b:	imul   ebp,DWORD PTR [rdi+0x6e],0x74614d3e
   140044462:	push   0x6b726f57
   140044467:	jae    0x140044489
   140044469:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004446b:	jae    0x1400444e1
   14004446d:	(bad)  
   14004446e:	ins    BYTE PTR es:[rdi],dx
   14004446f:	ins    BYTE PTR es:[rdi],dx
   140044470:	gs jb  0x1400444af
   140044473:	(bad)  
   140044474:	fs gs jae 0x1400444db
   140044478:	jb     0x1400444e3
   14004447a:	jo     0x1400444f0
   14004447c:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a203e
   140044483:	and    BYTE PTR [rcx+riz*1],bh
   140044486:	sub    eax,0x6449202d
   14004448b:	outs   dx,BYTE PTR gs:[rsi]
   14004448d:	je     0x1400444f8
   14004448f:	data16 jns 0x1400444b2
   140044492:	je     0x1400444fc
   140044494:	and    BYTE PTR gs:[rcx+0x70],ah
   140044498:	jo     0x140044506
   14004449a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400444a1:	and    BYTE PTR [rbx+0x65],dh
   1400444a4:	movsxd esi,DWORD PTR [rbp+0x72]
   1400444a7:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
   1400444af:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
   1400444b6:	jae    0x1400444e6
   1400444b8:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600e82eb
   1400444be:	and    BYTE PTR [rbp*2+0x73615f73],bh
   1400444c5:	ins    DWORD PTR es:[rdi],dx
   1400444c6:	jbe    0x1400444fa
   1400444c8:	cmp    dh,BYTE PTR [rdx+rsi*2+0x75]
   1400444cc:	jae    0x140044542
   1400444ce:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400444d0:	outs   dx,WORD PTR ds:[rsi]
   1400444d2:	and    BYTE PTR [rax+0x6d],bh
   1400444d5:	ins    BYTE PTR es:[rdi],dx
   1400444d6:	outs   dx,BYTE PTR ds:[rsi]
   1400444d7:	jae    0x140044513
   1400444d9:	ins    DWORD PTR es:[rdi],dx
   1400444da:	jae    0x14004453b
   1400444dc:	(bad)  
   1400444dd:	jae    0x14004454c
   1400444df:	jbe    0x140044513
   1400444e1:	cmp    eax,0x6e727522
   1400444e6:	cmp    dh,BYTE PTR [rbx+0x63]
   1400444e9:	push   0x73616d65
   1400444ee:	sub    eax,0x7263696d
   1400444f3:	outs   dx,DWORD PTR ds:[rsi]
   1400444f4:	jae    0x140044565
   1400444f6:	data16 je 0x140044526
   1400444f9:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400444fc:	cmp    ah,BYTE PTR [rcx+0x73]
   1400444ff:	ins    DWORD PTR es:[rdi],dx
   140044500:	cs jbe 0x140044535
   140044503:	and    bh,BYTE PTR [rsi]
   140044505:	or     ah,BYTE PTR [rax]
   140044507:	and    BYTE PTR [rax],ah
   140044509:	and    BYTE PTR [rbp*2+0x73615f73],bh
   140044510:	ins    DWORD PTR es:[rdi],dx
   140044511:	jbe    0x140044545
   140044513:	cmp    dh,BYTE PTR [rbx+0x65]
   140044516:	movsxd esi,DWORD PTR [rbp+0x72]
   140044519:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2020200a
   140044521:	and    BYTE PTR [rax],ah
   140044523:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14004452a:	ins    DWORD PTR es:[rdi],dx
   14004452b:	jbe    0x14004455f
   14004452d:	cmp    dh,BYTE PTR [rdx+0x65]
   140044530:	jno    0x1400445a7
   140044532:	gs jae 0x1400445a9
   140044535:	gs fs push rax
   140044538:	jb     0x1400445a3
   14004453a:	jbe    0x1400445a5
   14004453c:	ins    BYTE PTR es:[rdi],dx
   14004453d:	gs addr32 gs jae 0x140044580
   140044542:	or     ah,BYTE PTR [rax]
   140044544:	and    BYTE PTR [rax],ah
   140044546:	and    BYTE PTR [rax],ah
   140044548:	and    BYTE PTR [rax],ah
   14004454a:	and    BYTE PTR [rbp*2+0x73615f73],bh
   140044551:	ins    DWORD PTR es:[rdi],dx
   140044552:	jbe    0x140044586
   140044554:	cmp    dh,BYTE PTR [rdx+0x65]
   140044557:	jno    0x1400445ce
   140044559:	gs jae 0x1400445d0
   14004455c:	gs fs rex.RB js 0x1400445c6
   140044561:	movsxd esi,DWORD PTR [rbp+0x74]
   140044564:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14004456b:	ins    BYTE PTR es:[rdi],dx
   14004456c:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140044570:	gs ins BYTE PTR es:[rdi],dx
   140044572:	cmp    eax,0x71657222
   140044577:	jne    0x1400445e2
   140044579:	jb     0x1400445e0
   14004457b:	rex.B
   14004457c:	fs ins DWORD PTR es:[rdi],dx
   14004457e:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   140044585:	je     0x1400445f6
   140044587:	jb     0x1400445ab
   140044589:	or     ah,BYTE PTR [rax]
   14004458b:	and    BYTE PTR [rax],ah
   14004458d:	and    BYTE PTR [rax],ah
   14004458f:	and    BYTE PTR [rax],ah
   140044591:	and    BYTE PTR [rax],ah
   140044593:	and    BYTE PTR [rbp+0x69],dh
   140044596:	movsxd esp,DWORD PTR [r11+0x65]
   14004459a:	jae    0x14004460f
   14004459c:	cmp    eax,0x6c616622
   1400445a1:	jae    0x140044608
   1400445a3:	and    bh,BYTE PTR [rsi]
   1400445a5:	or     ah,BYTE PTR [rax]
   1400445a7:	and    BYTE PTR [rax],ah
   1400445a9:	and    BYTE PTR [rax],ah
   1400445ab:	and    BYTE PTR [rax],ah
   1400445ad:	and    BYTE PTR [rdi+rbp*1],bh
   1400445b0:	ins    DWORD PTR es:[rdi],dx
   1400445b1:	jae    0x140044612
   1400445b3:	(bad)  
   1400445b4:	jae    0x140044623
   1400445b6:	jbe    0x1400445ea
   1400445b8:	cmp    dh,BYTE PTR [rdx+0x65]
   1400445bb:	jno    0x140044632
   1400445bd:	gs jae 0x140044634
   1400445c0:	gs fs rex.RB js 0x14004462a
   1400445c5:	movsxd esi,DWORD PTR [rbp+0x74]
   1400445c8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400445cf:	ins    BYTE PTR es:[rdi],dx
   1400445d0:	or     ah,BYTE PTR ds:[rax]
   1400445d3:	and    BYTE PTR [rax],ah
   1400445d5:	and    BYTE PTR [rax],ah
   1400445d7:	and    BYTE PTR [rdi+rbp*1],bh
   1400445da:	ins    DWORD PTR es:[rdi],dx
   1400445db:	jae    0x14004463c
   1400445dd:	(bad)  
   1400445de:	jae    0x14004464d
   1400445e0:	jbe    0x140044614
   1400445e2:	cmp    dh,BYTE PTR [rdx+0x65]
   1400445e5:	jno    0x14004465c
   1400445e7:	gs jae 0x14004465e
   1400445ea:	gs fs push rax
   1400445ed:	jb     0x140044658
   1400445ef:	jbe    0x14004465a
   1400445f1:	ins    BYTE PTR es:[rdi],dx
   1400445f2:	gs addr32 gs jae 0x140044635
   1400445f7:	or     ah,BYTE PTR [rax]
   1400445f9:	and    BYTE PTR [rax],ah
   1400445fb:	and    BYTE PTR [rdi+rbp*1],bh
   1400445fe:	ins    DWORD PTR es:[rdi],dx
   1400445ff:	jae    0x140044660
   140044601:	(bad)  
   140044602:	jae    0x140044671
   140044604:	jbe    0x140044638
   140044606:	cmp    dh,BYTE PTR [rbx+0x65]
   140044609:	movsxd esi,DWORD PTR [rbp+0x72]
   14004460c:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x3c20200a
   140044614:	(bad)  
   140044615:	ins    DWORD PTR es:[rdi],dx
   140044616:	jae    0x140044677
   140044618:	(bad)  
   140044619:	jae    0x140044688
   14004461b:	jbe    0x14004464f
   14004461d:	cmp    dh,BYTE PTR [rdx+rsi*2+0x75]
   140044621:	jae    0x140044697
   140044623:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140044625:	outs   dx,WORD PTR ds:[rsi]
   140044627:	or     cl,BYTE PTR ds:[rdx]
   14004462a:	and    BYTE PTR [rbx+riz*2],bh
   14004462d:	outs   dx,DWORD PTR ds:[rsi]
   14004462e:	ins    DWORD PTR es:[rdi],dx
   14004462f:	jo     0x140044692
   140044631:	je     0x14004469c
   140044633:	(bad)  
   140044634:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   14004463c:	ins    BYTE PTR es:[rdi],dx
   14004463d:	outs   dx,BYTE PTR ds:[rsi]
   14004463e:	jae    0x14004467d
   140044640:	and    dh,BYTE PTR [rbp+0x72]
   140044643:	outs   dx,BYTE PTR ds:[rsi]
   140044644:	cmp    dh,BYTE PTR [rbx+0x63]
   140044647:	push   0x73616d65
   14004464c:	sub    eax,0x7263696d
   140044651:	outs   dx,DWORD PTR ds:[rsi]
   140044652:	jae    0x1400446c3
   140044654:	data16 je 0x140044684
   140044657:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14004465a:	cmp    ah,BYTE PTR [rbx+0x6f]
   14004465d:	ins    DWORD PTR es:[rdi],dx
   14004465e:	jo     0x1400446c1
   140044660:	je     0x1400446cb
   140044662:	(bad)  
   140044663:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   14004466b:	and    bh,BYTE PTR [rsi]
   14004466d:	or     ah,BYTE PTR [rax]
   14004466f:	and    BYTE PTR [rax],ah
   140044671:	and    BYTE PTR [rcx+riz*2],bh
   140044674:	jo     0x1400446e6
   140044676:	ins    BYTE PTR es:[rdi],dx
   140044677:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004467e:	or     ah,BYTE PTR ds:[rax]
   140044681:	and    BYTE PTR [rax],ah
   140044683:	and    BYTE PTR [rax],ah
   140044685:	and    BYTE PTR [rcx+riz*1],bh
   140044688:	sub    eax,0x6957202d
   14004468d:	outs   dx,BYTE PTR ds:[rsi]
   14004468e:	outs   dx,DWORD PTR fs:[rsi]
   140044690:	ja     0x140044705
   140044692:	and    BYTE PTR [rsi+0x69],dl
   140044695:	jae    0x14004470b
   140044697:	(bad)  
   140044698:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600e84cb
   14004469e:	and    BYTE PTR [rax],ah
   1400446a0:	and    BYTE PTR [rax],ah
   1400446a2:	and    BYTE PTR [rbx+rsi*2],bh
   1400446a5:	jne    0x140044717
   1400446a7:	jo     0x140044718
   1400446a9:	jb     0x14004471f
   1400446ab:	gs fs rex.WRXB push r11
   1400446af:	and    BYTE PTR [rcx+0x64],cl
   1400446b2:	cmp    eax,0x32657b22
   1400446b7:	xor    BYTE PTR [rcx],dh
   1400446b9:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   1400446c0:	xor    al,0x36
   1400446c2:	sub    eax,0x35633334
   1400446c7:	sub    eax,0x65663561
   1400446cc:	sub    eax,0x64383030
   1400446d1:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   1400446d8:	xor    BYTE PTR [rbp+0x22],bh
   1400446db:	(bad)  
   1400446dc:	or     ah,BYTE PTR ds:[rax]
   1400446df:	and    BYTE PTR [rax],ah
   1400446e1:	and    BYTE PTR [rax],ah
   1400446e3:	and    BYTE PTR [rcx+riz*1],bh
   1400446e6:	sub    eax,0x6957202d
   1400446eb:	outs   dx,BYTE PTR ds:[rsi]
   1400446ec:	outs   dx,DWORD PTR fs:[rsi]
   1400446ee:	ja     0x140044763
   1400446f0:	and    BYTE PTR [rdi],dh
   1400446f2:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600e8525
   1400446f8:	and    BYTE PTR [rax],ah
   1400446fa:	and    BYTE PTR [rax],ah
   1400446fc:	and    BYTE PTR [rbx+rsi*2],bh
   1400446ff:	jne    0x140044771
   140044701:	jo     0x140044772
   140044703:	jb     0x140044779
   140044705:	gs fs rex.WRXB push r11
   140044709:	and    BYTE PTR [rcx+0x64],cl
   14004470c:	cmp    eax,0x35337b22
   140044711:	xor    DWORD PTR [rbx],esi
   140044713:	cmp    BYTE PTR [rdx+0x39],ah
   140044716:	(bad)  
   140044717:	sub    eax,0x36396435
   14004471c:	sub    eax,0x64626634
   140044721:	sub    eax,0x64326538
   140044726:	sub    eax,0x34343261
   14004472b:	xor    BYTE PTR [rdx],dh
   14004472d:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a1378099
   140044733:	jge    0x140044757
   140044735:	(bad)  
   140044736:	or     ah,BYTE PTR ds:[rax]
   140044739:	and    BYTE PTR [rax],ah
   14004473b:	and    BYTE PTR [rax],ah
   14004473d:	and    BYTE PTR [rcx+riz*1],bh
   140044740:	sub    eax,0x6957202d
   140044745:	outs   dx,BYTE PTR ds:[rsi]
   140044746:	outs   dx,DWORD PTR fs:[rsi]
   140044748:	ja     0x1400447bd
   14004474a:	and    BYTE PTR [rax],bh
   14004474c:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600e857f
   140044752:	and    BYTE PTR [rax],ah
   140044754:	and    BYTE PTR [rax],ah
   140044756:	and    BYTE PTR [rbx+rsi*2],bh
   140044759:	jne    0x1400447cb
   14004475b:	jo     0x1400447cc
   14004475d:	jb     0x1400447d3
   14004475f:	gs fs rex.WRXB push r11
   140044763:	and    BYTE PTR [rcx+0x64],cl
   140044766:	cmp    eax,0x61347b22
   14004476b:	xor    ah,BYTE PTR [rsi+0x32]
   14004476e:	cmp    BYTE PTR [rbp+0x33],ah
   140044771:	sub    eax,0x39623335
   140044776:	sub    eax,0x31343434
   14004477b:	sub    eax,0x63396162
   140044780:	sub    eax,0x64393664
   140044785:	xor    al,0x61
   140044787:	xor    al,0x61
   140044789:	ss xor edi,DWORD PTR gs:[rax]
   14004478d:	jge    0x1400447b1
   14004478f:	(bad)  
   140044790:	or     ah,BYTE PTR ds:[rax]
   140044793:	and    BYTE PTR [rax],ah
   140044795:	and    BYTE PTR [rax],ah
   140044797:	and    BYTE PTR [rcx+riz*1],bh
   14004479a:	sub    eax,0x6957202d
   14004479f:	outs   dx,BYTE PTR ds:[rsi]
   1400447a0:	outs   dx,DWORD PTR fs:[rsi]
   1400447a2:	ja     0x140044817
   1400447a4:	and    BYTE PTR [rax],bh
   1400447a6:	xor    DWORD PTR cs:[rax],esp
   1400447a9:	sub    eax,0x200a3e2d
   1400447ae:	and    BYTE PTR [rax],ah
   1400447b0:	and    BYTE PTR [rax],ah
   1400447b2:	and    BYTE PTR [rbx+rsi*2],bh
   1400447b5:	jne    0x140044827
   1400447b7:	jo     0x140044828
   1400447b9:	jb     0x14004482f
   1400447bb:	gs fs rex.WRXB push r11
   1400447bf:	and    BYTE PTR [rcx+0x64],cl
   1400447c2:	cmp    eax,0x66317b22
   1400447c7:	ss (bad) 
   1400447c9:	movsxd esi,DWORD PTR ss:[rdi]
   1400447cc:	ss sub eax,0x31653038
   1400447d2:	sub    eax,0x39333234
   1400447d7:	sub    eax,0x62623539
   1400447dc:	sub    eax,0x30643338
   1400447e1:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
   1400447e8:	cmp    BYTE PTR [rbp+0x22],bh
   1400447eb:	(bad)  
   1400447ec:	or     ah,BYTE PTR ds:[rax]
   1400447ef:	and    BYTE PTR [rax],ah
   1400447f1:	and    BYTE PTR [rax],ah
   1400447f3:	and    BYTE PTR [rcx+riz*1],bh
   1400447f6:	sub    eax,0x6957202d
   1400447fb:	outs   dx,BYTE PTR ds:[rsi]
   1400447fc:	outs   dx,DWORD PTR fs:[rsi]
   1400447fe:	ja     0x140044873
   140044800:	and    BYTE PTR [rcx],dh
   140044802:	xor    BYTE PTR [rax],ah
   140044804:	sub    eax,0xa203e2d
   140044809:	and    BYTE PTR [rax],ah
   14004480b:	and    BYTE PTR [rax],ah
   14004480d:	and    BYTE PTR [rax],ah
   14004480f:	cmp    al,0x73
   140044811:	jne    0x140044883
   140044813:	jo     0x140044884
   140044815:	jb     0x14004488b
   140044817:	gs fs rex.WRXB push r11
   14004481b:	and    BYTE PTR [rcx+0x64],cl
   14004481e:	cmp    eax,0x65387b22
   140044823:	xor    BYTE PTR [rsi+0x37],ah
   140044826:	(bad)  
   140044827:	xor    DWORD PTR [rdx],esi
   140044829:	sub    eax,0x33626662
   14004482e:	sub    eax,0x38656634
   140044833:	sub    eax,0x35613962
   140044838:	sub    eax,0x64663834
   14004483d:	xor    eax,0x35316130
   140044842:	(bad)  
   140044843:	cmp    DWORD PTR [rcx+0x7d],esp
   140044846:	and    ch,BYTE PTR [rdi]
   140044848:	and    BYTE PTR ds:[rax],ah
   14004484b:	and    BYTE PTR [rdx],cl
   14004484d:	and    BYTE PTR [rax],ah
   14004484f:	and    BYTE PTR [rax],ah
   140044851:	cmp    al,0x2f
   140044853:	(bad)  
   140044854:	jo     0x1400448c6
   140044856:	ins    BYTE PTR es:[rdi],dx
   140044857:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004485e:	or     ah,BYTE PTR ds:[rax]
   140044861:	and    BYTE PTR [rdi+rbp*1],bh
   140044864:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140044867:	jo     0x1400448ca
   140044869:	je     0x1400448d4
   14004486b:	(bad)  
   14004486c:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x20203e79
   140044874:	or     cl,BYTE PTR [rdx]
   140044876:	and    BYTE PTR [rax],ah
   140044878:	cmp    al,0x21
   14004487a:	sub    eax,0x614d202d
   14004487f:	imul   esp,DWORD PTR [rbp+0x20],0x74
   140044883:	push   0x70612065
   140044888:	jo     0x1400448f6
   14004488a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140044891:	and    BYTE PTR [rax+rdx*2+0x49],al
   140044895:	and    BYTE PTR [rcx+0x77],ah
   140044898:	(bad)  
   140044899:	jb     0x140044900
   14004489b:	and    BYTE PTR cs:[rip+0x200a3e2d],ch        # 0x1600e86cf
   1400448a2:	and    BYTE PTR [rcx+riz*2],bh
   1400448a5:	jae    0x140044914
   1400448a7:	jbe    0x1400448dc
   1400448a9:	cmp    ah,BYTE PTR [rcx+0x70]
   1400448ac:	jo     0x14004491a
   1400448ae:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400448b5:	and    BYTE PTR [rax+0x6d],bh
   1400448b8:	ins    BYTE PTR es:[rdi],dx
   1400448b9:	outs   dx,BYTE PTR ds:[rsi]
   1400448ba:	jae    0x1400448f6
   1400448bc:	(bad)  
   1400448bd:	jae    0x14004492c
   1400448bf:	jbe    0x1400448f4
   1400448c1:	cmp    eax,0x6e727522
   1400448c6:	cmp    dh,BYTE PTR [rbx+0x63]
   1400448c9:	push   0x73616d65
   1400448ce:	sub    eax,0x7263696d
   1400448d3:	outs   dx,DWORD PTR ds:[rsi]
   1400448d4:	jae    0x140044945
   1400448d6:	data16 je 0x140044906
   1400448d9:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400448dc:	cmp    ah,BYTE PTR [rcx+0x73]
   1400448df:	ins    DWORD PTR es:[rdi],dx
   1400448e0:	cs jbe 0x140044916
   1400448e3:	and    bh,BYTE PTR [rsi]
   1400448e5:	or     ah,BYTE PTR [rax]
   1400448e7:	and    BYTE PTR [rax],ah
   1400448e9:	and    BYTE PTR [rcx+riz*2],bh
   1400448ec:	jae    0x14004495b
   1400448ee:	jbe    0x140044923
   1400448f0:	cmp    dh,BYTE PTR [rdi+0x69]
   1400448f3:	outs   dx,BYTE PTR ds:[rsi]
   1400448f4:	outs   dx,DWORD PTR fs:[rsi]
   1400448f6:	ja     0x14004496b
   1400448f8:	push   rbx
   1400448f9:	gs je  0x140044970
   1400448fc:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   140044903:	ins    BYTE PTR es:[rdi],dx
   140044904:	outs   dx,BYTE PTR ds:[rsi]
   140044905:	jae    0x140044944
   140044907:	and    ch,BYTE PTR [rax+0x74]
   14004490a:	je     0x14004497c
   14004490c:	cmp    ch,BYTE PTR [rdi]
   14004490e:	(bad)  
   14004490f:	jae    0x140044974
   140044911:	push   0x73616d65
   140044916:	cs ins DWORD PTR es:[rdi],dx
   140044918:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14004491f:	je     0x14004494f
   140044921:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140044924:	(bad)  
   140044925:	push   rbx
   140044926:	rex.WRB
   140044927:	rex.WB (bad) 
   140044929:	xor    dh,BYTE PTR [rax]
   14004492b:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6da060
   140044931:	outs   dx,DWORD PTR fs:[rsi]
   140044933:	ja     0x1400449a8
   140044935:	push   rbx
   140044936:	gs je  0x1400449ad
   140044939:	imul   ebp,DWORD PTR [rsi+0x67],0xa3e2273
   140044940:	and    BYTE PTR [rax],ah
   140044942:	and    BYTE PTR [rax],ah
   140044944:	and    BYTE PTR [rax],ah
   140044946:	cmp    al,0x64
   140044948:	jo     0x1400449b3
   14004494a:	rex.B ja 0x1400449ae
   14004494d:	jb     0x1400449b4
   14004494f:	ds je  0x1400449c4
   140044952:	jne    0x1400449b9
   140044954:	cmp    al,0x2f
   140044956:	fs jo  0x1400449c2
   140044959:	rex.B ja 0x1400449bd
   14004495c:	jb     0x1400449c3
   14004495e:	or     ah,BYTE PTR ds:[rax]
   140044961:	and    BYTE PTR [rax],ah
   140044963:	and    BYTE PTR [rdi+rbp*1],bh
   140044966:	(bad)  
   140044967:	jae    0x1400449d6
   140044969:	jbe    0x14004499e
   14004496b:	cmp    dh,BYTE PTR [rdi+0x69]
   14004496e:	outs   dx,BYTE PTR ds:[rsi]
   14004496f:	outs   dx,DWORD PTR fs:[rsi]
   140044971:	ja     0x1400449e6
   140044973:	push   rbx
   140044974:	gs je  0x1400449eb
   140044977:	imul   ebp,DWORD PTR [rsi+0x67],0x200a3e73
   14004497e:	and    BYTE PTR [rdi+rbp*1],bh
   140044981:	(bad)  
   140044982:	jae    0x1400449f1
   140044984:	jbe    0x1400449b9
   140044986:	cmp    ah,BYTE PTR [rcx+0x70]
   140044989:	jo     0x1400449f7
   14004498b:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140044992:	or     bh,BYTE PTR ds:[rdi+rbp*1]
   140044996:	(bad)  
   140044997:	jae    0x140044a0c
   140044999:	gs ins DWORD PTR es:[rdi],dx
   14004499b:	(bad)  
   14004499c:	ins    BYTE PTR es:[rdi],dx
   14004499d:	jns    0x1400449dd
   14004499f:	or     cl,BYTE PTR [rdx]
   1400449a1:	add    BYTE PTR [rax],al
   1400449a3:	add    BYTE PTR [rax],al
   1400449a5:	add    BYTE PTR [rax],al
   1400449a7:	add    BYTE PTR [rax+0x3402],ch
   1400449ad:	add    BYTE PTR [rsi+0x0],dl
   1400449b0:	push   rbx
   1400449b1:	add    BYTE PTR [rdi+0x0],bl
   1400449b4:	push   rsi
   1400449b5:	add    BYTE PTR [rbp+0x0],al
   1400449b8:	push   rdx
   1400449b9:	add    BYTE PTR [rbx+0x0],dl
   1400449bc:	rex.WB add BYTE PTR [r15+0x0],cl
   1400449c0:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   1400449c4:	rex.WB add BYTE PTR [r14+0x0],cl
   1400449c8:	rex.RX add BYTE PTR [rdi+0x0],r9b
   1400449cc:	add    BYTE PTR [rax],al
   1400449ce:	add    BYTE PTR [rax],al
   1400449d0:	mov    ebp,0xfeef04
   1400449d5:	add    BYTE PTR [rcx],al
   1400449d7:	add    BYTE PTR [rax],al
   1400449d9:	add    BYTE PTR [rcx],dl
   1400449db:	add    BYTE PTR [rax],al
   1400449dd:	add    BYTE PTR [rax],al
   1400449df:	add    BYTE PTR [rax],al
   1400449e1:	add    BYTE PTR [rcx],dl
   1400449e3:	add    BYTE PTR [rax],al
   1400449e5:	add    BYTE PTR [rax],al
   1400449e7:	add    BYTE PTR [rdi],bh
   1400449e9:	add    BYTE PTR [rax],al
   1400449eb:	add    BYTE PTR [rax],al
   1400449ed:	add    BYTE PTR [rax],al
   1400449ef:	add    BYTE PTR [rax+rax*1],al
   1400449f2:	add    al,0x0
   1400449f4:	add    DWORD PTR [rax],eax
	...
   140044a02:	add    BYTE PTR [rax],al
   140044a04:	or     BYTE PTR [rdx],al
   140044a06:	add    BYTE PTR [rax],al
   140044a08:	add    DWORD PTR [rax],eax
   140044a0a:	push   rbx
   140044a0b:	add    BYTE PTR [rax+rax*1+0x72],dh
   140044a0f:	add    BYTE PTR [rcx+0x0],ch
   140044a12:	outs   dx,BYTE PTR ds:[rsi]
   140044a13:	add    BYTE PTR [rdi+0x0],ah
   140044a16:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140044a1a:	ins    BYTE PTR es:[rdi],dx
   140044a1b:	add    BYTE PTR [rbp+0x0],ah
   140044a1e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140044a22:	data16 add BYTE PTR [rdi+0x0],ch
   140044a26:	add    BYTE PTR [rax],al
   140044a28:	in     al,0x1
   140044a2a:	add    BYTE PTR [rax],al
   140044a2c:	add    DWORD PTR [rax],eax
   140044a2e:	xor    BYTE PTR [rax],al
   140044a30:	xor    al,0x0
   140044a32:	xor    BYTE PTR [rax],al
   140044a34:	cmp    DWORD PTR [rax],eax
   140044a36:	xor    BYTE PTR [rax],al
   140044a38:	xor    al,0x0
   140044a3a:	(bad)  
   140044a3b:	add    BYTE PTR [rax],dh
   140044a3d:	add    BYTE PTR [rax],al
   140044a3f:	add    BYTE PTR [rsi+0x0],al
   140044a42:	adc    eax,DWORD PTR [rax]
   140044a44:	add    DWORD PTR [rax],eax
   140044a46:	rex.XB add BYTE PTR [r15+0x0],bpl
   140044a4a:	ins    DWORD PTR es:[rdi],dx
   140044a4b:	add    BYTE PTR [rax+0x0],dh
   140044a4e:	(bad)  
   140044a4f:	add    BYTE PTR [rsi+0x0],ch
   140044a52:	jns    0x140044a54
   140044a54:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140044a58:	ins    DWORD PTR es:[rdi],dx
   140044a59:	add    BYTE PTR [rbp+0x0],ah
   140044a5c:	add    BYTE PTR [rax],al
   140044a5e:	add    BYTE PTR [rax],al
   140044a60:	push   rsp
   140044a61:	add    BYTE PTR [rax+0x0],ch
   140044a64:	add    BYTE PTR gs:[rax],ah
   140044a67:	add    BYTE PTR [rbp+0x0],cl
   140044a6a:	(bad)  
   140044a6b:	add    BYTE PTR [rax+rax*1+0x68],dh
   140044a6f:	add    BYTE PTR [rdi+0x0],dl
   140044a72:	outs   dx,DWORD PTR ds:[rsi]
   140044a73:	add    BYTE PTR [rdx+0x0],dh
   140044a76:	imul   eax,DWORD PTR [rax],0x73
   140044a79:	add    BYTE PTR [rax+rax*1],ch
   140044a7c:	and    BYTE PTR [rax],al
   140044a7e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140044a82:	movsxd eax,DWORD PTR [rax]
   140044a84:	add    BYTE PTR [rax],al
   140044a86:	add    BYTE PTR [rax],al
   140044a88:	xor    al,0x0
   140044a8a:	(bad)  
   140044a8b:	add    BYTE PTR [rcx],al
   140044a8d:	add    BYTE PTR [rsi+0x0],al
   140044a90:	imul   eax,DWORD PTR [rax],0x65006c
   140044a96:	add    BYTE PTR [rbp+0x0],r12b
   140044a9a:	jae    0x140044a9c
   140044a9c:	movsxd eax,DWORD PTR [rax]
   140044a9e:	jb     0x140044aa0
   140044aa0:	imul   eax,DWORD PTR [rax],0x740070
   140044aa6:	imul   eax,DWORD PTR [rax],0x6e006f
   140044aac:	add    BYTE PTR [rax],al
   140044aae:	add    BYTE PTR [rax],al
   140044ab0:	jae    0x140044ab2
   140044ab2:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140044ab7:	add    BYTE PTR [rax+0x0],dh
   140044aba:	add    BYTE PTR [rax],al
   140044abc:	cmp    BYTE PTR [rax],al
   140044abe:	or     al,0x0
   140044ac0:	add    DWORD PTR [rax],eax
   140044ac2:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140044ac6:	ins    BYTE PTR es:[rdi],dx
   140044ac7:	add    BYTE PTR [rbp+0x0],ah
   140044aca:	push   rsi
   140044acb:	add    BYTE PTR [rbp+0x0],ah
   140044ace:	jb     0x140044ad0
   140044ad0:	jae    0x140044ad2
   140044ad2:	imul   eax,DWORD PTR [rax],0x6e006f
   140044ad8:	add    BYTE PTR [rax],al
   140044ada:	add    BYTE PTR [rax],al
   140044adc:	xor    DWORD PTR [rax],eax
   140044ade:	(bad)  
   140044adf:	add    BYTE PTR [rax+rax*1],ch
   140044ae2:	and    BYTE PTR [rax],al
   140044ae4:	xor    BYTE PTR [rax],al
   140044ae6:	sub    al,0x0
   140044ae8:	and    BYTE PTR [rax],al
   140044aea:	xor    BYTE PTR [rax],al
   140044aec:	sub    al,0x0
   140044aee:	and    BYTE PTR [rax],al
   140044af0:	xor    BYTE PTR [rax],al
   140044af2:	add    BYTE PTR [rax],al
   140044af4:	sub    al,0x0
   140044af6:	(bad)  
   140044af7:	add    BYTE PTR [rcx],al
   140044af9:	add    BYTE PTR [rcx+0x0],cl
   140044afc:	outs   dx,BYTE PTR ds:[rsi]
   140044afd:	add    BYTE PTR [rax+rax*1+0x65],dh
   140044b01:	add    BYTE PTR [rdx+0x0],dh
   140044b04:	outs   dx,BYTE PTR ds:[rsi]
   140044b05:	add    BYTE PTR [rcx+0x0],ah
   140044b08:	ins    BYTE PTR es:[rdi],dx
   140044b09:	add    BYTE PTR [rsi+0x0],cl
   140044b0c:	(bad)  
   140044b0d:	add    BYTE PTR [rbp+0x0],ch
   140044b10:	add    BYTE PTR gs:[rax],al
   140044b13:	add    BYTE PTR [rbx+0x0],dh
   140044b16:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140044b1b:	add    BYTE PTR [rax+0x0],dh
   140044b1e:	add    BYTE PTR [rax],al
   140044b20:	push   rax
   140044b21:	add    BYTE PTR [rsi],dl
   140044b23:	add    BYTE PTR [rcx],al
   140044b25:	add    BYTE PTR [rax+rax*1+0x65],cl
   140044b29:	add    BYTE PTR [rdi+0x0],ah
   140044b2c:	(bad)  
   140044b2d:	add    BYTE PTR [rax+rax*1+0x43],ch
   140044b31:	add    BYTE PTR [rdi+0x0],ch
   140044b34:	jo     0x140044b36
   140044b36:	jns    0x140044b38
   140044b38:	jb     0x140044b3a
   140044b3a:	imul   eax,DWORD PTR [rax],0x680067
   140044b40:	je     0x140044b42
   140044b42:	add    BYTE PTR [rax],al
   140044b44:	rex.XB add BYTE PTR [r15+0x0],bpl
   140044b48:	jo     0x140044b4a
   140044b4a:	jns    0x140044b4c
   140044b4c:	jb     0x140044b4e
   140044b4e:	imul   eax,DWORD PTR [rax],0x680067
   140044b54:	je     0x140044b56
   140044b56:	and    BYTE PTR [rax],al
   140044b58:	test   eax,0x32002000
   140044b5d:	add    BYTE PTR [rax],dh
   140044b5f:	add    BYTE PTR [rax],dh
   140044b61:	add    BYTE PTR [rcx],dh
   140044b63:	add    BYTE PTR [rip+0x30003200],ch        # 0x170047d69
   140044b69:	add    BYTE PTR [rcx],dh
   140044b6b:	add    BYTE PTR [rdi],dh
   140044b6d:	add    BYTE PTR [rax],al
   140044b6f:	add    BYTE PTR [rax+rax*1],dh
   140044b72:	(bad)  
   140044b73:	add    BYTE PTR [rcx],al
   140044b75:	add    BYTE PTR [rdi+0x0],cl
   140044b78:	jb     0x140044b7a
   140044b7a:	imul   eax,DWORD PTR [rax],0x690067
   140044b80:	outs   dx,BYTE PTR ds:[rsi]
   140044b81:	add    BYTE PTR [rcx+0x0],ah
   140044b84:	ins    BYTE PTR es:[rdi],dx
   140044b85:	add    BYTE PTR [rsi+0x0],al
   140044b88:	imul   eax,DWORD PTR [rax],0x65006c
   140044b8e:	outs   dx,BYTE PTR ds:[rsi]
   140044b8f:	add    BYTE PTR [rcx+0x0],ah
   140044b92:	ins    DWORD PTR es:[rdi],dx
   140044b93:	add    BYTE PTR [rbp+0x0],ah
   140044b96:	add    BYTE PTR [rax],al
   140044b98:	jae    0x140044b9a
   140044b9a:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140044b9f:	add    BYTE PTR [rax+0x0],dh
   140044ba2:	add    BYTE PTR [rax],al
   140044ba4:	sub    al,0x0
   140044ba6:	(bad)  
   140044ba7:	add    BYTE PTR [rcx],al
   140044ba9:	add    BYTE PTR [rax+0x0],dl
   140044bac:	jb     0x140044bae
   140044bae:	outs   dx,DWORD PTR ds:[rsi]
   140044baf:	add    BYTE PTR [rax+rax*1+0x75],ah
   140044bb3:	add    BYTE PTR [rbx+0x0],ah
   140044bb6:	je     0x140044bb8
   140044bb8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140044bbc:	ins    DWORD PTR es:[rdi],dx
   140044bbd:	add    BYTE PTR [rbp+0x0],ah
   140044bc0:	add    BYTE PTR [rax],al
   140044bc2:	add    BYTE PTR [rax],al
   140044bc4:	jae    0x140044bc6
   140044bc6:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140044bcb:	add    BYTE PTR [rax+0x0],dh
   140044bce:	add    BYTE PTR [rax],al
   140044bd0:	cmp    al,0x0
   140044bd2:	or     al,0x0
   140044bd4:	add    DWORD PTR [rax],eax
   140044bd6:	push   rax
   140044bd7:	add    BYTE PTR [rdx+0x0],dh
   140044bda:	outs   dx,DWORD PTR ds:[rsi]
   140044bdb:	add    BYTE PTR [rax+rax*1+0x75],ah
   140044bdf:	add    BYTE PTR [rbx+0x0],ah
   140044be2:	je     0x140044be4
   140044be4:	push   rsi
   140044be5:	add    BYTE PTR [rbp+0x0],ah
   140044be8:	jb     0x140044bea
   140044bea:	jae    0x140044bec
   140044bec:	imul   eax,DWORD PTR [rax],0x6e006f
   140044bf2:	add    BYTE PTR [rax],al
   140044bf4:	xor    DWORD PTR [rax],eax
   140044bf6:	(bad)  
   140044bf7:	add    BYTE PTR [rax+rax*1],ch
   140044bfa:	and    BYTE PTR [rax],al
   140044bfc:	xor    BYTE PTR [rax],al
   140044bfe:	sub    al,0x0
   140044c00:	and    BYTE PTR [rax],al
   140044c02:	xor    BYTE PTR [rax],al
   140044c04:	sub    al,0x0
   140044c06:	and    BYTE PTR [rax],al
   140044c08:	xor    BYTE PTR [rax],al
   140044c0a:	add    BYTE PTR [rax],al
   140044c0c:	add    BYTE PTR [rax],r8b
   140044c0f:	add    BYTE PTR [rcx],al
   140044c11:	add    BYTE PTR [rsi+0x0],dl
   140044c14:	(bad)  
   140044c15:	add    BYTE PTR [rdx+0x0],dh
   140044c18:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140044c1c:	ins    BYTE PTR es:[rdi],dx
   140044c1d:	add    BYTE PTR [rbp+0x0],ah
   140044c20:	rex.WB add BYTE PTR [r14+0x0],bpl
   140044c24:	data16 add BYTE PTR [rdi+0x0],ch
   140044c28:	add    BYTE PTR [rax],al
   140044c2a:	add    BYTE PTR [rax],al
   140044c2c:	and    al,0x0
   140044c2e:	add    al,0x0
   140044c30:	add    BYTE PTR [rax],al
   140044c32:	push   rsp
   140044c33:	add    BYTE PTR [rdx+0x0],dh
   140044c36:	(bad)  
   140044c37:	add    BYTE PTR [rsi+0x0],ch
   140044c3a:	jae    0x140044c3c
   140044c3c:	ins    BYTE PTR es:[rdi],dx
   140044c3d:	add    BYTE PTR [rcx+0x0],ah
   140044c40:	je     0x140044c42
   140044c42:	imul   eax,DWORD PTR [rax],0x6e006f
   140044c48:	add    BYTE PTR [rax],al
   140044c4a:	add    BYTE PTR [rax],al
   140044c4c:	or     DWORD PTR [rax+rsi*4],eax
   140044c4f:	add    al,0x28
   140044c51:	add    BYTE PTR [rax],al
   140044c53:	add    BYTE PTR [rax],dh
   140044c55:	add    BYTE PTR [rax],al
   140044c57:	add    BYTE PTR [rax+0x0],ah
   140044c5a:	add    BYTE PTR [rax],al
   140044c5c:	add    DWORD PTR [rax],eax
   140044c5e:	add    al,0x0
   140044c60:	add    BYTE PTR [rax],al
   140044c62:	add    BYTE PTR [rax],al
   140044c64:	add    BYTE PTR [rax+rax*1],0x0
	...
   140044c7c:	add    BYTE PTR [rax],al
   140044c7e:	add    BYTE PTR [rax],0x0
   140044c81:	add    BYTE PTR [rax],0x0
   140044c84:	add    BYTE PTR [rax+0x800080],al
   140044c8a:	add    BYTE PTR [rax],al
   140044c8c:	add    BYTE PTR [rax],0x80
   140044c8f:	add    BYTE PTR [rax-0x7fffff80],al
   140044c95:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140044c9c:	add    BYTE PTR [rax],al
   140044c9e:	inc    DWORD PTR [rax]
   140044ca0:	add    bh,bh
   140044ca2:	add    BYTE PTR [rax],al
   140044ca4:	add    bh,bh
   140044ca6:	inc    DWORD PTR [rax]
   140044ca8:	inc    DWORD PTR [rax]
   140044caa:	add    BYTE PTR [rax],al
   140044cac:	inc    DWORD PTR [rax]
   140044cae:	inc    DWORD PTR [rax]
   140044cb0:	(bad)  
   140044cb1:	inc    DWORD PTR [rax]
   140044cb3:	add    bh,bh
   140044cb5:	(bad)  
   140044cb6:	inc    DWORD PTR [rax]
	...
   140044cf0:	add    BYTE PTR [rax],al
   140044cf2:	or     BYTE PTR [rax],al
	...
   140044d08:	add    BYTE PTR [rax],al
   140044d0a:	mov    edi,DWORD PTR [rax+0x0]
	...
   140044d20:	add    BYTE PTR [rax],al
   140044d22:	mov    bh,0xb9
   140044d24:	mov    al,0x0
	...
   140044d36:	add    BYTE PTR [rax],al
   140044d38:	add    BYTE PTR [rax],cl
   140044d3a:	mov    ecx,0x808b8b
	...
   140044d4f:	add    BYTE PTR [rax],al
   140044d51:	(bad)  
   140044d52:	mov    eax,0x7889b9
	...
   140044d67:	add    BYTE PTR [rax],al
   140044d69:	or     ebx,DWORD PTR [rbx-0x7f466485]
	...
   140044d7f:	add    BYTE PTR [rax],al
   140044d81:	jns    0x140044d0c
   140044d83:	mov    DWORD PTR [rcx+0xb089],ecx
	...
   140044d99:	cwde   
   140044d9a:	fwait
   140044d9b:	fwait
   140044d9c:	jnp    0x140044d36
   140044d9e:	cwde   
	...
   140044daf:	add    BYTE PTR [rdi],al
   140044db1:	cmp    DWORD PTR [rcx-0x77],edi
   140044db4:	cwde   
   140044db5:	fwait
   140044db6:	jns    0x140044d38
   140044db8:	add    BYTE PTR [rax],al
   140044dba:	add    BYTE PTR [rax],al
   140044dbc:	add    BYTE PTR [rax],al
   140044dbe:	add    BYTE PTR [rdi],al
	...
   140044dc8:	add    DWORD PTR [rbx+0x79b99797],edx
   140044dce:	mov    bh,0x98
   140044dd0:	add    BYTE PTR [rax],al
   140044dd2:	add    BYTE PTR [rax],al
   140044dd4:	add    BYTE PTR [rax],al
   140044dd6:	add    BYTE PTR [rax+0x0],dl
   140044ddc:	add    BYTE PTR [rax],al
   140044dde:	add    BYTE PTR [rax],al
   140044de0:	(bad)  
   140044de1:	(bad)  
   140044de2:	adc    edi,DWORD PTR [rcx]
   140044de4:	jns    0x140044d9d
   140044de6:	fwait
   140044de7:	fwait
   140044de8:	jo     0x140044dea
   140044dea:	add    BYTE PTR [rax],al
   140044dec:	add    BYTE PTR [rax],al
   140044dee:	add    esi,DWORD PTR [rax+0x0]
   140044df1:	add    BYTE PTR [rax],al
   140044df3:	add    BYTE PTR [rax],al
   140044df5:	add    BYTE PTR [rax],al
   140044df7:	(bad)  
   140044df8:	adc    DWORD PTR [rcx],edx
   140044dfa:	xchg   ebp,eax
   140044dfb:	xchg   edi,eax
   140044dfc:	xchg   edi,eax
   140044dfd:	xchg   edi,eax
   140044dfe:	cwde   
   140044dff:	jns    0x140044d88
   140044e01:	add    BYTE PTR [rax],al
   140044e03:	add    BYTE PTR [rax],al
   140044e05:	add    BYTE PTR [rbp+0x0],dl
   140044e0b:	add    BYTE PTR [rax],al
   140044e0d:	jo     0x140044e0f
   140044e0f:	jno    0x140044e22
   140044e11:	jno    0x140044e44
   140044e13:	cmp    DWORD PTR [rcx],edi
   140044e15:	jns    0x140044dd0
   140044e17:	mov    bh,0x9b
   140044e19:	jo     0x140044e1b
   140044e1b:	add    BYTE PTR [rax],al
   140044e1d:	jns    0x140044e98
   140044e1f:	add    BYTE PTR [rax],al
   140044e21:	add    BYTE PTR [rax],al
   140044e23:	add    BYTE PTR [rsi+0x116467e7],al
   140044e29:	adc    DWORD PTR [rcx+0x71],edx
   140044e2c:	jns    0x140044e65
   140044e2e:	cwde   
   140044e2f:	fwait
   140044e30:	jns    0x140044de9
   140044e32:	add    BYTE PTR [rax],0x7
   140044e35:	xchg   edi,eax
   140044e36:	cwde   
   140044e37:	add    BYTE PTR [rax],al
   140044e39:	add    BYTE PTR [rax],al
   140044e3b:	(bad)  
   140044e3c:	out    0xc8,eax
   140044e3e:	enter  0x1466,0x13
   140044e42:	adc    DWORD PTR [rcx],ebx
   140044e44:	(bad)  
   140044e45:	cdq    
   140044e46:	jns    0x140044ec1
   140044e48:	mov    eax,0x9997989b
   140044e4d:	jns    0x140044e7f
   140044e4f:	add    BYTE PTR [rax],al
   140044e51:	add    BYTE PTR [rax],al
   140044e53:	out    0xc8,eax
   140044e55:	out    0xe7,eax
   140044e57:	(bad)  
   140044e58:	(bad)  
   140044e59:	adc    DWORD PTR [rdi],edx
   140044e5b:	(bad)  
   140044e5c:	sbb    DWORD PTR [rbx-0x68],esi
   140044e5f:	mov    bh,0x98
   140044e61:	mov    bh,0x7b
   140044e63:	fwait
   140044e64:	xchg   edi,eax
   140044e65:	xchg   ebx,eax
   140044e66:	push   rax
   140044e67:	add    BYTE PTR [rax],al
   140044e69:	add    BYTE PTR [rsi+0x7e],bh
   140044e6c:	jle    0x140044e36
   140044e6e:	enter  0x6668,0x5
   140044e72:	adc    DWORD PTR [rcx],edx
   140044e74:	xor    DWORD PTR [rdi+0x79b99793],edx
   140044e7a:	mov    ecx,0x797989
   140044e7f:	add    BYTE PTR [rax],al
   140044e81:	(bad)  
   140044e82:	out    0xc8,eax
   140044e84:	enter  0x7e6e,0x7c
   140044e88:	jbe    0x140044eda
   140044e8a:	xor    DWORD PTR [rcx],edx
   140044e8c:	push   rbx
   140044e8d:	push   rbx
   140044e8e:	xchg   edi,eax
   140044e8f:	cwde   
   140044e90:	fwait
   140044e91:	jnp    0x140044f0c
   140044e93:	jns    0x140044e2c
   140044e95:	xchg   edi,eax
   140044e96:	add    BYTE PTR [rax],al
   140044e98:	or     bh,ah
   140044e9a:	jle    0x140044f1a
   140044e9c:	jle    0x140044f1a
   140044e9e:	mov    WORD PTR [rsi+0x71016586],es
   140044ea4:	adc    DWORD PTR [rdi-0x46764669],edx
   140044eaa:	mov    DWORD PTR [rdi+0x9793],esi
   140044eb0:	xchg   BYTE PTR [rdi+riz*8+0x6ee87c7e],cl
   140044eb7:	jl     0x140044f30
   140044eb9:	jbe    0x140044ecb
   140044ebb:	adc    DWORD PTR [rip+0xffffffffb8793931],esi        # 0xf87d87f2
   140044ec1:	cwde   
   140044ec2:	mov    ecx,0x707979
   140044ec7:	add    BYTE PTR [rax],al
   140044ec9:	mov    bh,ah
   140044ecb:	jl     0x140044eb5
   140044ecd:	addr32 out 0x7e,eax
   140044ed0:	jl     0x140044f48
   140044ed2:	push   rcx
   140044ed3:	adc    eax,0x98971711
   140044ed8:	fwait
   140044ed9:	mov    DWORD PTR [rbx-0x69],edi
   140044edc:	cdq    
   140044edd:	jo     0x140044edf
   140044edf:	add    BYTE PTR [rax],al
   140044ee1:	add    BYTE PTR [rax],cl
   140044ee3:	call   0xcc90cb66
   140044ee8:	xchg   BYTE PTR [rax+riz*2+0x30],dh
   140044eec:	xor    DWORD PTR [rcx],edi
   140044eee:	jns    0x140044ea9
   140044ef0:	mov    ebx,DWORD PTR [rbx+0x70799997]
   140044ef6:	add    BYTE PTR [rax],al
   140044ef8:	add    BYTE PTR [rax],al
   140044efa:	add    BYTE PTR [rax],cl
   140044efc:	in     al,dx
   140044efd:	mov    gs,WORD PTR [rsi+0x76]
   140044f00:	je     0x140044f13
   140044f02:	rex.RXB add eax,0x7b395111
   140044f08:	cwde   
   140044f09:	mov    bh,0x79
   140044f0b:	mov    DWORD PTR [rcx+0x0],edi
   140044f0e:	add    BYTE PTR [rax],al
   140044f10:	add    BYTE PTR [rax],al
   140044f12:	add    BYTE PTR [rax],al
   140044f14:	add    BYTE PTR [rdi+rax*4+0x70141c7],cl
   140044f1b:	add    DWORD PTR [rcx],edx
   140044f1d:	xor    DWORD PTR [rbx-0x68],edx
   140044f20:	fwait
   140044f21:	cwde   
   140044f22:	fwait
   140044f23:	xchg   edi,eax
   140044f24:	xchg   edi,eax
	...
   140044f2d:	add    BYTE PTR [rsi+0x14163474],cl
   140044f33:	jo     0x140044f86
   140044f35:	(bad)  
   140044f36:	xchg   edi,eax
   140044f37:	fwait
   140044f38:	js     0x140044ef3
   140044f3a:	mov    DWORD PTR [rcx+0x38],edi
	...
   140044f45:	add    BYTE PTR [rax],al
   140044f47:	je     0x140044f60
   140044f49:	add    DWORD PTR [rcx+0x61],eax
   140044f4c:	add    edx,DWORD PTR [rcx]
   140044f4e:	sbb    DWORD PTR [rcx-0x47],edi
   140044f51:	mov    edx,DWORD PTR [rbx+0x9097]
	...
   140044f5f:	(bad)  
   140044f60:	gs gs and eax,0x17175106
   140044f67:	cwde   
   140044f68:	fwait
   140044f69:	jns    0x140044ef4
   140044f6b:	jns    0x140044fdd
	...
   140044f75:	add    BYTE PTR [rax],al
   140044f77:	add    BYTE PTR [rsi+0x67],ah
   140044f7a:	rex.RXB push r14
   140044f7c:	adc    BYTE PTR [rcx],dl
   140044f7e:	adc    ebx,DWORD PTR [rbx-0x66688475]
	...
   140044f90:	(bad)  
   140044f91:	(bad)  
   140044f92:	data16 rex.RXB (bad) 
   140044f95:	push   rbx
   140044f96:	(bad)  
   140044f97:	xchg   edi,eax
   140044f98:	fwait
   140044f99:	jns    0x140044f54
   140044f9b:	jns    0x140044f9d
	...
   140044fa9:	out    0x67,eax
   140044fab:	fs je  0x140044fbf
   140044fae:	adc    DWORD PTR [rbx-0x75],edi
   140044fb1:	jnp    0x14004500c
   140044fb3:	ja     0x140044fb5
	...
   140044fc1:	add    BYTE PTR [rsi+riz*2+0x66],bh
   140044fc5:	adc    DWORD PTR [rcx-0x67],esi
   140044fc8:	mov    bh,0xb9
   140044fca:	jns    0x140044f5c
	...
   140044fd8:	add    BYTE PTR [rax],al
   140044fda:	add    BYTE PTR [rsi+0x76],dh
   140044fdd:	adc    esi,DWORD PTR [r15-0x45]
   140044fe1:	jns    0x14004505c
   140044fe3:	jo     0x140044fe5
	...
   140044ff1:	add    BYTE PTR [rax],al
   140044ff3:	(bad)  
   140044ff4:	(bad)  
   140044ff5:	jo     0x14004500c
   140044ff7:	fwait
   140044ff8:	jnp    0x140045075
   140044ffa:	xchg   edi,eax
   140044ffb:	nop
	...
   14004500c:	xchg   BYTE PTR [rbp+0x13],ah
   14004500f:	sbb    DWORD PTR [rbx+0x7979],ecx
	...
   140045021:	add    BYTE PTR [rax],al
   140045023:	add    BYTE PTR [riz*8-0x464784ff],cl
   14004502a:	xchg   edi,eax
	...
   14004503b:	add    BYTE PTR [rax],al
   14004503d:	adc    WORD PTR [rdi],dx
   140045040:	mov    ebx,0x9797
	...
   140045055:	xchg   BYTE PTR [rbp+0x19],dh
   140045058:	mov    ecx,DWORD PTR [rcx+0x70]
	...
   14004506a:	add    BYTE PTR [rax],al
   14004506c:	add    BYTE PTR [rsi],al
   14004506e:	(bad)  
   14004506f:	(bad)  
   140045070:	mov    eax,0x9093
	...
   140045085:	add    BYTE PTR [rcx+rbx*1-0x45],dh
   140045089:	xchg   edi,eax
	...
   14004509e:	jbe    0x1400450b7
   1400450a0:	mov    ebx,DWORD PTR [rcx+0x0]
	...
   1400450b3:	add    BYTE PTR [rax],al
   1400450b5:	add    BYTE PTR [rsi],cl
   1400450b7:	adc    DWORD PTR [rcx+0x70],edi
	...
   1400450cd:	add    BYTE PTR [rax],al
   1400450cf:	jno    0x14004514a
   1400450d1:	jo     0x1400450d3
	...
   1400450e7:	jne    0x140045100
	...
   1400450fd:	add    BYTE PTR [rax],al
   1400450ff:	or     BYTE PTR [rax+0x0],dh
	...
   140045136:	add    BYTE PTR [rax],al
   140045138:	(bad)  
   140045139:	(bad)  
   14004513a:	(bad)  
   14004513b:	(bad)  
   14004513c:	(bad)  
   14004513d:	inc    DWORD PTR [rax]
   14004513f:	add    bh,bh
   140045141:	(bad)  
   140045142:	(bad)  
   140045143:	(bad)  
   140045144:	(bad)  
   140045145:	inc    DWORD PTR [rax]
   140045147:	add    bh,bh
   140045149:	(bad)  
   14004514a:	sti    
   14004514b:	(bad)  
   14004514c:	(bad)  
   14004514d:	inc    DWORD PTR [rax]
   14004514f:	add    bh,bh
   140045151:	push   rax
   140045153:	(bad)  
   140045154:	(bad)  
   140045155:	inc    DWORD PTR [rax]
   140045157:	add    bh,bh
   140045159:	push   rax
   14004515b:	jg     0x14004515c
   14004515d:	inc    DWORD PTR [rax]
   14004515f:	add    bh,bh
   140045161:	jmp    rax
   140045163:	(bad)  
   140045164:	(bad)  
   140045165:	inc    DWORD PTR [rax]
   140045167:	add    bh,bh
   140045169:	jmp    rax
   14004516b:	ud0    edi,edi
   14004516e:	add    BYTE PTR [rax],al
   140045170:	(bad)  
   140045171:	jmp    rax
   140045173:	(bad)  
   140045174:	(bad)  
   140045175:	inc    DWORD PTR [rax]
   140045177:	add    bh,bh
   140045179:	inc    eax
   14004517b:	(bad)  
   14004517c:	(bad)  
   14004517d:	inc    DWORD PTR [rax]
   14004517f:	add    bh,bh
   140045181:	inc    eax
   140045183:	add    edi,edi
   140045185:	inc    DWORD PTR [rax]
   140045187:	add    bh,bh
   140045189:	inc    DWORD PTR [rax+0xfeff01]
   14004518f:	add    bh,bh
   140045191:	inc    DWORD PTR [rax+0xfdff00]
   140045197:	add    bh,bh
   140045199:	inc    DWORD PTR [rax]
   14004519b:	add    BYTE PTR [rdi-0x7],bh
   14004519e:	add    BYTE PTR [rax],al
   1400451a0:	(bad)  
   1400451a1:	inc    BYTE PTR [rax]
   1400451a3:	add    BYTE PTR [rdi],bh
   1400451a5:	repz add BYTE PTR [rax],al
   1400451a8:	(bad)  
   1400451a9:	fadd   QWORD PTR [rax]
   1400451ab:	add    BYTE PTR [rdi],bl
   1400451ad:	ret    
   1400451ae:	add    BYTE PTR [rax],al
   1400451b0:	inc    DWORD PTR [rax]
   1400451b2:	add    BYTE PTR [rax],al
   1400451b4:	(bad)  
   1400451b5:	add    DWORD PTR [rax],0x0
   1400451b8:	inc    BYTE PTR [rax]
   1400451ba:	add    BYTE PTR [rax],al
   1400451bc:	add    BYTE PTR [rdi],al
   1400451be:	add    BYTE PTR [rax],al
   1400451c0:	cld    
   1400451c1:	add    BYTE PTR [rax],al
   1400451c3:	add    BYTE PTR [rax],al
   1400451c5:	(bad)  
   1400451c6:	add    BYTE PTR [rax],al
   1400451c8:	lock add BYTE PTR [rax],al
   1400451cb:	add    BYTE PTR [rax],al
   1400451cd:	sldt   WORD PTR [rax]
   1400451d0:	loopne 0x1400451d2
   1400451d2:	add    BYTE PTR [rax],al
   1400451d4:	add    BYTE PTR [rdi],cl
   1400451d6:	add    BYTE PTR [rax],al
   1400451d8:	add    BYTE PTR [rax],0x0
   1400451db:	add    BYTE PTR [rax],al
   1400451dd:	sldt   WORD PTR [rax]
   1400451e0:	add    BYTE PTR [rax],al
   1400451e2:	add    BYTE PTR [rax],al
   1400451e4:	add    BYTE PTR [rdi],bl
   1400451e6:	add    BYTE PTR [rax],al
   1400451e8:	rol    BYTE PTR [rax],0x0
   1400451eb:	add    BYTE PTR [rax],al
   1400451ed:	(bad)  
   1400451ee:	add    BYTE PTR [rax],al
   1400451f0:	clc    
   1400451f1:	add    BYTE PTR [rax],al
   1400451f3:	add    BYTE PTR [rax],al
   1400451f5:	(bad)  
   1400451f6:	add    BYTE PTR [rax],al
   1400451f8:	inc    BYTE PTR [rax]
   1400451fa:	add    BYTE PTR [rax],al
   1400451fc:	add    BYTE PTR [rdi],bh
   1400451fe:	add    BYTE PTR [rax],al
   140045200:	inc    eax
   140045202:	add    BYTE PTR [rax],al
   140045204:	add    BYTE PTR [rdi],bh
   140045206:	add    BYTE PTR [rax],al
   140045208:	push   rax
   14004520a:	add    BYTE PTR [rax],al
   14004520c:	add    BYTE PTR [rdi],bh
   14004520e:	add    BYTE PTR [rax],al
   140045210:	(bad)  
   140045211:	cld    
   140045212:	add    BYTE PTR [rax],al
   140045214:	add    BYTE PTR [rdi+0x0],bh
   140045217:	add    bh,bh
   140045219:	inc    BYTE PTR [rax]
   14004521b:	add    BYTE PTR [rax],al
   14004521d:	jg     0x14004521f
   14004521f:	add    bh,bh
   140045221:	inc    DWORD PTR [rax]
   140045223:	add    BYTE PTR [rax],al
   140045225:	inc    DWORD PTR [rax]
   140045227:	add    bh,bh
   140045229:	inc    DWORD PTR [rax+0xff0000]
   14004522f:	add    bh,bh
   140045231:	inc    eax
   140045233:	add    BYTE PTR [rax],al
   140045235:	inc    DWORD PTR [rax]
   140045237:	add    bh,bh
   140045239:	push   rax
   14004523b:	add    BYTE PTR [rcx],al
   14004523d:	inc    DWORD PTR [rax]
   14004523f:	add    bh,bh
   140045241:	(bad)  
   140045242:	cld    
   140045243:	add    BYTE PTR [rcx],al
   140045245:	inc    DWORD PTR [rax]
   140045247:	add    bh,bh
   140045249:	(bad)  
   14004524a:	inc    BYTE PTR [rax]
   14004524c:	add    edi,edi
   14004524e:	add    BYTE PTR [rax],al
   140045250:	(bad)  
   140045251:	(bad)  
   140045252:	inc    DWORD PTR [rax]
   140045254:	add    edi,edi
   140045256:	add    BYTE PTR [rax],al
   140045258:	(bad)  
   140045259:	(bad)  
   14004525a:	inc    DWORD PTR [rax+0xff03]
   140045260:	(bad)  
   140045261:	(bad)  
   140045262:	inc    eax
   140045264:	add    edi,edi
   140045266:	add    BYTE PTR [rax],al
   140045268:	(bad)  
   140045269:	(bad)  
   14004526a:	inc    eax
   14004526c:	(bad)  
   14004526d:	inc    DWORD PTR [rax]
   14004526f:	add    bh,bh
   140045271:	(bad)  
   140045272:	jmp    rax
   140045274:	(bad)  
   140045275:	inc    DWORD PTR [rax]
   140045277:	add    bh,bh
   140045279:	(bad)  
   14004527a:	push   rax
   14004527c:	ud0    eax,DWORD PTR [rax]
   14004527f:	add    bh,bh
   140045281:	(bad)  
   140045282:	push   rax
   140045284:	ud0    eax,DWORD PTR [rax]
   140045287:	add    bh,bh
   140045289:	(bad)  
   14004528a:	(bad)  
   14004528b:	clc    
   14004528c:	(bad)  
   14004528d:	inc    DWORD PTR [rax]
   14004528f:	add    bh,bh
   140045291:	(bad)  
   140045292:	(bad)  
   140045293:	cld    
   140045294:	(bad)  
   140045295:	inc    DWORD PTR [rax]
   140045297:	add    bh,bh
   140045299:	(bad)  
   14004529a:	(bad)  
   14004529b:	cld    
   14004529c:	(bad)  
   14004529d:	inc    DWORD PTR [rax]
   14004529f:	add    bh,bh
   1400452a1:	(bad)  
   1400452a2:	(bad)  
   1400452a3:	(bad)  
   1400452a4:	jg     0x1400452a5
   1400452a6:	add    BYTE PTR [rax],al
   1400452a8:	(bad)  
   1400452a9:	(bad)  
   1400452aa:	(bad)  
   1400452ab:	(bad)  
   1400452ac:	(bad)  
   1400452ad:	inc    DWORD PTR [rax]
   1400452af:	add    bh,bh
   1400452b1:	(bad)  
   1400452b2:	(bad)  
   1400452b3:	(bad)  
   1400452b4:	(bad)  
   1400452b5:	inc    DWORD PTR [rax]
   1400452b7:	add    BYTE PTR [rax],ch
   1400452b9:	add    BYTE PTR [rax],al
   1400452bb:	add    BYTE PTR [rax],ah
   1400452bd:	add    BYTE PTR [rax],al
   1400452bf:	add    BYTE PTR [rax+0x0],al
   1400452c2:	add    BYTE PTR [rax],al
   1400452c4:	add    DWORD PTR [rax],eax
   1400452c6:	add    al,0x0
   1400452c8:	add    BYTE PTR [rax],al
   1400452ca:	add    BYTE PTR [rax],al
   1400452cc:	add    BYTE PTR [rdx],al
	...
   1400452e6:	add    BYTE PTR [rax],0x0
   1400452e9:	add    BYTE PTR [rax],0x0
   1400452ec:	add    BYTE PTR [rax+0x800080],al
   1400452f2:	add    BYTE PTR [rax],al
   1400452f4:	add    BYTE PTR [rax],0x80
   1400452f7:	add    BYTE PTR [rax-0x7fffff80],al
   1400452fd:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140045304:	add    BYTE PTR [rax],al
   140045306:	inc    DWORD PTR [rax]
   140045308:	add    bh,bh
   14004530a:	add    BYTE PTR [rax],al
   14004530c:	add    bh,bh
   14004530e:	inc    DWORD PTR [rax]
   140045310:	inc    DWORD PTR [rax]
   140045312:	add    BYTE PTR [rax],al
   140045314:	inc    DWORD PTR [rax]
   140045316:	inc    DWORD PTR [rax]
   140045318:	(bad)  
   140045319:	inc    DWORD PTR [rax]
   14004531b:	add    bh,bh
   14004531d:	(bad)  
   14004531e:	inc    DWORD PTR [rax]
	...
   140045344:	add    BYTE PTR [rax],al
   140045346:	or     BYTE PTR [rdi+0x0],dh
	...
   140045354:	add    BYTE PTR [rax],al
   140045356:	or     edi,DWORD PTR [rbx-0x48]
	...
   140045365:	add    BYTE PTR [rax],cl
   140045367:	mov    ecx,0x8089
	...
   140045374:	add    BYTE PTR [rax],al
   140045376:	jns    0x14004532f
   140045378:	mov    bh,0xb0
	...
   140045386:	xchg   edi,eax
   140045387:	xchg   edi,eax
   140045388:	cdq    
   140045389:	jns    0x14004538b
	...
   140045393:	add    BYTE PTR [rax],al
   140045395:	(bad)  
   140045396:	cmp    DWORD PTR [rcx-0x75],edi
   140045399:	cwde   
   14004539a:	mov    al,0x0
   14004539c:	add    BYTE PTR [rax],al
   14004539e:	add    BYTE PTR [rax],cl
   1400453a0:	add    BYTE PTR [rax],al
   1400453a2:	add    BYTE PTR [rax],al
   1400453a4:	add    BYTE PTR [rcx],al
   1400453a6:	adc    edx,DWORD PTR [rbx+0x589b97]
   1400453ac:	add    BYTE PTR [rax],al
   1400453ae:	add    BYTE PTR [rax],dl
   1400453b0:	add    BYTE PTR [rax],al
   1400453b2:	add    BYTE PTR [rax],al
   1400453b4:	add    BYTE PTR [rcx],dl
   1400453b6:	push   rcx
   1400453b7:	jns    0x140045432
   1400453b9:	jns    0x140045374
   1400453bb:	add    BYTE PTR [rax],0x0
   1400453be:	jns    0x140045340
   1400453c0:	add    BYTE PTR [rax],al
   1400453c2:	or     BYTE PTR [rdi+0x66],ah
   1400453c5:	push   rbx
   1400453c6:	adc    DWORD PTR [rbx],edx
   1400453c8:	adc    ebx,DWORD PTR [rax+0x7809b9b]
   1400453ce:	xchg   edi,eax
   1400453cf:	add    BYTE PTR [rax],al
   1400453d1:	add    BYTE PTR [rsi-0x38],bh
   1400453d4:	out    0x65,eax
   1400453d6:	adc    edx,DWORD PTR [rcx-0x69]
   1400453d9:	xchg   edi,eax
   1400453da:	mov    bh,0x89
   1400453dc:	jns    0x140045417
   1400453de:	jns    0x1400453e0
   1400453e0:	add    BYTE PTR [rsi],cl
   1400453e2:	ja     0x1400453cb
   1400453e4:	enter  0x166,0x13
   1400453e8:	push   rbx
   1400453e9:	xchg   edi,eax
   1400453ea:	cdq    
   1400453eb:	mov    bh,0xb7
   1400453ed:	xchg   edi,eax
   1400453ee:	cwde   
   1400453ef:	add    BYTE PTR [rdi],al
   1400453f1:	out    0xce,eax
   1400453f3:	jle    0x140045471
   1400453f5:	xchg   DWORD PTR [rbp+0x11],eax
   1400453f8:	adc    eax,0x97988b39
   1400453fd:	xchg   ebx,eax
   1400453fe:	nop
   1400453ff:	add    BYTE PTR [rax],cl
   140045401:	enter  0x7ce7,0x8e
   140045405:	jl     0x140045479
   140045407:	adc    DWORD PTR [rcx],esi
   140045409:	xchg   edi,eax
   14004540a:	cwde   
   14004540b:	mov    ecx,0x7079b9
   140045410:	add    BYTE PTR [rax],cl
   140045412:	out    0xe7,eax
   140045414:	in     eax,0xe7
   140045416:	gs add eax,0x779b1317
   14004541c:	jns    0x140045497
   14004541e:	add    BYTE PTR [rax],al
   140045420:	add    BYTE PTR [rax],al
   140045422:	or     BYTE PTR [rsi-0x39],bh
   140045425:	je     0x140045437
   140045427:	jo     0x14004543a
   140045429:	xchg   edi,eax
   14004542a:	cwde   
   14004542b:	fwait
   14004542c:	xchg   edi,eax
   14004542d:	xchg   edi,eax
   14004542e:	add    BYTE PTR [rax],al
   140045430:	add    BYTE PTR [rax],al
   140045432:	add    BYTE PTR [rax],al
   140045434:	xchg   BYTE PTR [rax+0x14],dl
   140045437:	jno    0x14004544c
   140045439:	push   rbx
   14004543a:	fwait
   14004543b:	jnp    0x1400454b6
   14004543d:	(bad)  
   14004543e:	add    BYTE PTR [rax],al
   140045440:	add    BYTE PTR [rax],al
   140045442:	add    BYTE PTR [rax],al
   140045444:	add    BYTE PTR [rbp+0x61],ah
   140045447:	(bad)  
   140045448:	adc    DWORD PTR [rdi],edx
   14004544a:	cwde   
   14004544b:	cwde   
   14004544c:	xchg   edi,eax
   14004544d:	nop
   14004544e:	add    BYTE PTR [rax],al
   140045450:	add    BYTE PTR [rax],al
   140045452:	add    BYTE PTR [rax],al
   140045454:	add    BYTE PTR [rsi+0x74],dh
   140045457:	je     0x14004546e
   140045459:	xor    DWORD PTR [rbx-0x47],edi
   14004545c:	mov    ecx,0x70
   140045461:	add    BYTE PTR [rax],al
   140045463:	add    BYTE PTR [rax],al
   140045465:	or     BYTE PTR [rsi+0x67],ah
   140045468:	(bad)  
   140045469:	adc    DWORD PTR [rax+0x9097b7],ebx
   14004546f:	add    BYTE PTR [rax],al
   140045471:	add    BYTE PTR [rax],al
   140045473:	add    BYTE PTR [rax],al
   140045475:	add    BYTE PTR [rdi],al
   140045477:	(bad)  
   140045478:	(bad)  
   140045479:	(bad)  
   14004547a:	cmp    DWORD PTR [rdi+0x97],esi
   140045480:	add    BYTE PTR [rax],al
   140045482:	add    BYTE PTR [rax],al
   140045484:	add    BYTE PTR [rax],al
   140045486:	add    BYTE PTR [rdi],al
   140045488:	adc    DWORD PTR fs:[rbx-0x77],edi
   14004548c:	jns    0x14004548e
	...
   140045496:	add    BYTE PTR [rax],al
   140045498:	push   cx
   14004549a:	fwait
   14004549b:	mov    bh,0x98
	...
   1400454a5:	add    BYTE PTR [rax],al
   1400454a7:	add    BYTE PTR [rsi],al
   1400454a9:	jno    0x140045523
   1400454ab:	mov    ecx,0x70
	...
   1400454b8:	or     BYTE PTR [rcx+0x1b],ah
   1400454bb:	mov    DWORD PTR [rax],esi
	...
   1400454c9:	sbb    edi,DWORD PTR gs:[rcx+0x80]
	...
   1400454d8:	add    BYTE PTR [rsi],al
   1400454da:	push   rdi
   1400454db:	jns    0x1400454dd
	...
   1400454e9:	or     BYTE PTR [rbx],bl
   1400454eb:	nop
	...
   1400454f8:	add    BYTE PTR [rax],al
   1400454fa:	gs jo  0x1400454fd
	...
   14004551d:	add    BYTE PTR [rax],al
   14004551f:	add    bh,bh
   140045521:	(bad)  
   140045522:	(bad)  
   140045523:	(bad)  
   140045524:	(bad)  
   140045525:	(bad)  
   140045526:	(bad)  
   140045527:	(bad)  
   140045528:	(bad)  
   140045529:	clc    
   14004552a:	(bad)  
   14004552b:	(bad)  
   14004552c:	(bad)  
   14004552d:	clc    
   14004552e:	(bad)  
   14004552f:	(bad)  
   140045530:	(bad)  
   140045531:	clc    
   140045532:	(bad)  
   140045533:	(bad)  
   140045534:	push   rax
   140045536:	(bad)  
   140045537:	(bad)  
   140045538:	push   rax
   14004553a:	ud0    edi,edi
   14004553d:	loopne 0x140045546
   14004553f:	(bad)  
   140045540:	jmp    rax
   140045542:	add    edi,ebp
   140045544:	inc    eax
   140045546:	add    ecx,esi
   140045548:	clc    
   140045549:	add    BYTE PTR [rax],al
   14004554b:	movsxd esi,eax
   14004554d:	add    BYTE PTR [rax],al
   14004554f:	add    esp,eax
   140045551:	add    BYTE PTR [rax],al
   140045553:	add    eax,DWORD PTR [rax-0x7ff90000]
   140045559:	add    BYTE PTR [rax],al
   14004555b:	(bad)  
   14004555c:	loopne 0x14004555e
   14004555e:	add    BYTE PTR [rdi],cl
   140045560:	clc    
   140045561:	add    BYTE PTR [rax],al
   140045563:	ud0    eax,DWORD PTR [rax]
   140045566:	add    BYTE PTR [rdi],cl
   140045568:	inc    eax
   14004556a:	add    BYTE PTR [rdi],bl
   14004556c:	inc    eax
   14004556e:	add    BYTE PTR [rdi],bl
   140045570:	jmp    rax
   140045572:	add    BYTE PTR [rdi],bl
   140045574:	(bad)  
   140045575:	clc    
   140045576:	add    BYTE PTR [rdi],bh
   140045578:	(bad)  
   140045579:	inc    BYTE PTR [rax]
   14004557b:	(bad)  
   14004557c:	(bad)  
   14004557d:	inc    DWORD PTR [rax]
   14004557f:	(bad)  
   140045580:	(bad)  
   140045581:	inc    DWORD PTR [rax-0x7f000081]
   140045587:	jg     0x140045588
   140045589:	inc    eax
   14004558b:	jg     0x14004558c
   14004558d:	jmp    rax
   14004558f:	(bad)  
   140045590:	(bad)  
   140045591:	jmp    rcx
   140045593:	(bad)  
   140045594:	(bad)  
   140045595:	push   rcx
   140045597:	(bad)  
   140045598:	(bad)  
   140045599:	(bad)  
   14004559a:	(bad)  
   14004559b:	(bad)  
   14004559c:	(bad)  
   14004559d:	(bad)  
   14004559e:	(bad)  
   14004559f:	jmp    FWORD PTR [rax]
   1400455a1:	add    BYTE PTR [rax],al
   1400455a3:	add    BYTE PTR [rax],dl
   1400455a5:	add    BYTE PTR [rax],al
   1400455a7:	add    BYTE PTR [rax],ah
   1400455a9:	add    BYTE PTR [rax],al
   1400455ab:	add    BYTE PTR [rcx],al
   1400455ad:	add    BYTE PTR [rax+rax*1],al
   1400455b0:	add    BYTE PTR [rax],al
   1400455b2:	add    BYTE PTR [rax],al
   1400455b4:	add    BYTE PTR [rax],0x0
	...
   1400455cb:	add    BYTE PTR [rax],al
   1400455cd:	add    BYTE PTR [rax+0x800000],al
   1400455d3:	add    BYTE PTR [rax],al
   1400455d5:	add    BYTE PTR [rax+0x8000],0x0
   1400455dc:	add    BYTE PTR [rax],0x80
   1400455df:	add    BYTE PTR [rax-0x7fffff80],al
   1400455e5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400455ec:	add    BYTE PTR [rax],al
   1400455ee:	inc    DWORD PTR [rax]
   1400455f0:	add    bh,bh
   1400455f2:	add    BYTE PTR [rax],al
   1400455f4:	add    bh,bh
   1400455f6:	inc    DWORD PTR [rax]
   1400455f8:	inc    DWORD PTR [rax]
   1400455fa:	add    BYTE PTR [rax],al
   1400455fc:	inc    DWORD PTR [rax]
   1400455fe:	inc    DWORD PTR [rax]
   140045600:	(bad)  
   140045601:	inc    DWORD PTR [rax]
   140045603:	add    bh,bh
   140045605:	(bad)  
   140045606:	inc    DWORD PTR [rax]
	...
   140045610:	add    BYTE PTR [rax],al
   140045612:	add    BYTE PTR [rbx],cl
   140045614:	add    BYTE PTR [rax],al
   140045616:	add    BYTE PTR [rax],al
   140045618:	add    BYTE PTR [rax],al
   14004561a:	add    BYTE PTR [rdi-0x48],dh
   14004561d:	add    BYTE PTR [rax],al
   14004561f:	add    BYTE PTR [rax],al
   140045621:	add    BYTE PTR [rax],al
   140045623:	cdq    
   140045624:	jns    0x140045626
   140045626:	add    BYTE PTR [rax],al
   140045628:	add    BYTE PTR [rax],al
   14004562a:	(bad)  
   14004562b:	adc    ebx,DWORD PTR [rax+0x8000b0]
   140045631:	xchg   BYTE PTR [rdi+rdx*1-0x6d],dh
   140045635:	cwde   
   140045636:	ja     0x1400455c8
   140045638:	(bad)  
   140045639:	out    0xe7,eax
   14004563b:	adc    DWORD PTR [rdi],edx
   14004563d:	fwait
   14004563e:	cdq    
   14004563f:	or     BYTE PTR [rax],0xce
   140045642:	push   rdi
   140045643:	adc    ecx,DWORD PTR gs:[rcx+0x8000083]
   14004564a:	in     eax,0x5
   14004564c:	cmp    DWORD PTR [rbx-0x69],edi
   14004564f:	add    BYTE PTR [rax],al
   140045651:	add    BYTE PTR [rdi],al
   140045653:	rex.XB add DWORD PTR [r8+0x98],ebx
   14004565a:	add    BYTE PTR [rsi+0x57],dh
   14004565d:	mov    ebx,0x90
   140045662:	add    BYTE PTR [rax],al
   140045664:	(bad)  
   140045665:	jns    0x1400456d7
   140045667:	add    BYTE PTR [rax],al
   140045669:	add    BYTE PTR [rax],al
   14004566b:	add    BYTE PTR [rip+0x803b],al        # 0x14004d6ac
   140045671:	add    BYTE PTR [rax],al
   140045673:	add    BYTE PTR [rdi],al
   140045675:	jns    0x140045677
   140045677:	add    BYTE PTR [rax],al
   140045679:	add    BYTE PTR [rax],al
   14004567b:	add    BYTE PTR [rax],al
   14004567d:	js     0x14004567f
	...
   140045687:	add    bh,bh
   140045689:	inc    DWORD PTR [rax]
   14004568b:	add    dh,bh
   14004568d:	inc    DWORD PTR [rax]
   14004568f:	add    ah,bh
   140045691:	(bad)  
   140045692:	add    BYTE PTR [rax],al
   140045694:	cld    
   140045695:	(bad)  
   140045696:	add    BYTE PTR [rax],al
   140045698:	clc    
   140045699:	sbb    eax,0x1c00000
   14004569e:	add    BYTE PTR [rax],al
   1400456a0:	add    BYTE PTR [rcx],0x0
   1400456a3:	add    BYTE PTR [rax-0x1ffffffd],al
   1400456a9:	add    eax,DWORD PTR [rax]
   1400456ab:	add    al,bh
   1400456ad:	add    eax,DWORD PTR [rax]
   1400456af:	add    ah,bh
   1400456b1:	(bad)  
   1400456b2:	add    BYTE PTR [rax],al
   1400456b4:	inc    DWORD PTR [rdi]
   1400456b6:	add    BYTE PTR [rax],al
   1400456b8:	inc    DWORD PTR [rdi-0x70010000]
   1400456be:	add    BYTE PTR [rax],al
   1400456c0:	dec    edi
   1400456c2:	add    BYTE PTR [rax],al
   1400456c4:	(bad)  
   1400456c5:	inc    DWORD PTR [rax]
   1400456c7:	add    BYTE PTR [rax],ch
   1400456c9:	add    BYTE PTR [rax],al
   1400456cb:	add    BYTE PTR [rax],dh
   1400456cd:	add    BYTE PTR [rax],al
   1400456cf:	add    BYTE PTR [rax+0x0],ah
   1400456d2:	add    BYTE PTR [rax],al
   1400456d4:	add    DWORD PTR [rax],eax
   1400456d6:	or     BYTE PTR [rax],al
   1400456d8:	add    BYTE PTR [rax],al
   1400456da:	add    BYTE PTR [rax],al
   1400456dc:	add    BYTE PTR [rcx],cl
	...
   1400456e6:	add    BYTE PTR [rax],al
   1400456e8:	add    BYTE PTR [rcx],al
   1400456ea:	add    BYTE PTR [rax],al
   1400456ec:	add    BYTE PTR [rcx],al
   1400456ee:	add    BYTE PTR [rax],al
   1400456f0:	add    BYTE PTR [rax],al
   1400456f2:	add    BYTE PTR [rax],al
   1400456f4:	cmp    eax,0x43003f27
   1400456f9:	sub    edi,DWORD PTR [rax+rax*1]
   1400456fc:	rex.WB (bad) 
   1400456fe:	cmp    al,0x0
   140045700:	rex.WRXB xor r15,QWORD PTR [r15]
   140045703:	add    BYTE PTR [rbx+0x36],dl
   140045706:	cmp    eax,0x3b3d5d00
   14004570b:	add    BYTE PTR [rcx+0x3f],ah
   14004570e:	xor    eax,0x2e4e7600
   140045713:	add    BYTE PTR [rcx+0x51],bh
   140045716:	sub    al,0x0
   140045718:	imul   eax,DWORD PTR [rbp+0x34],0x38436400
   14004571f:	add    BYTE PTR [rcx+0x47],ch
   140045722:	cmp    DWORD PTR [rax],eax
   140045724:	je     0x140045774
   140045726:	xor    BYTE PTR [rax],al
   140045728:	ja     0x14004577a
   14004572a:	xor    BYTE PTR [rax],al
   14004572c:	jp     0x140045780
   14004572e:	xor    eax,0x39517800
   140045733:	add    BYTE PTR [rbx],bl
   140045735:	adc    DWORD PTR [rsi+0x0],eax
   140045738:	(bad)  
   140045739:	adc    BYTE PTR [rsi+0x0],cl
   14004573c:	sbb    BYTE PTR [rax],dl
   14004573e:	rex.WX add BYTE PTR [rsi],dl
   140045741:	adc    DWORD PTR [rax+rax*1+0x18],edx
   140045745:	adc    DWORD PTR [rbx+0x0],edx
   140045748:	(bad)  
   140045749:	adc    DWORD PTR [rax+rax*1+0x24],ebx
   14004574d:	adc    eax,0x17290045
   140045752:	rex.RX add BYTE PTR [rsi],r12b
   140045755:	sbb    BYTE PTR [rsi+0x0],al
   140045758:	sub    ebx,DWORD PTR [rdx]
   14004575a:	add    BYTE PTR [r8],r12b
   14004575d:	adc    al,0x4a
   14004575f:	add    BYTE PTR [rbx],ch
   140045761:	sbb    al,0x4b
   140045763:	add    BYTE PTR [rcx],dh
   140045765:	sbb    eax,0x21340044
   14004576a:	rex.XB add BYTE PTR [r11],dil
   14004576d:	and    eax,0x283f0041
   140045772:	add    BYTE PTR [r15+riz*1],r14b
   140045776:	pop    rbx
   140045777:	add    BYTE PTR [rip+0x13006313],dl        # 0x15304ba90
   14004577d:	adc    al,0x6b
   14004577f:	add    BYTE PTR [rbx],dl
   140045781:	(bad)  
   140045782:	jae    0x140045784
   140045784:	adc    al,0x18
   140045786:	ja     0x140045788
   140045788:	adc    eax,0x18007b1a
   14004578d:	sbb    edi,DWORD PTR [rdx+0x0]
   140045790:	rex (bad) 
   140045792:	add    BYTE PTR [rbx+r13*1+0x41],al
   140045797:	add    BYTE PTR [rbp+0x32],cl
   14004579a:	add    BYTE PTR [rcx+0x56],r14b
   14004579e:	push   rdi
   14004579f:	add    BYTE PTR [rsi+0x53],ah
   1400457a2:	add    BYTE PTR gs:[rbp-0x58ffe497],bl
   1400457a9:	outs   dx,DWORD PTR ds:[rsi]
   1400457aa:	sbb    BYTE PTR [rax],al
   1400457ac:	lods   al,BYTE PTR ds:[rsi]
   1400457ad:	jae    0x1400457c6
   1400457af:	add    BYTE PTR [rbx-0x4dffe58e],ch
   1400457b5:	jbe    0x1400457ce
   1400457b7:	add    BYTE PTR [rbp-0x46ffe587],dh
   1400457bd:	jnp    0x1400457db
   1400457bf:	add    BYTE PTR [rbp-0x76ffd8a8],al
   1400457c5:	pop    rbp
   1400457c6:	(bad)  
   1400457c7:	add    BYTE PTR [rax-0x7affd0ab],al
   1400457cd:	pop    rcx
   1400457ce:	sub    DWORD PTR [rax],eax
   1400457d0:	lea    ebx,[rsi+0x2a]
   1400457d3:	add    BYTE PTR [rax-0x7bffccab],al
   1400457d9:	pop    rdx
   1400457da:	xor    eax,DWORD PTR [rax]
   1400457dc:	mov    BYTE PTR [rax+rsi*1+0x0],bl
   1400457e0:	xchg   ecx,eax
   1400457e1:	(bad)  
   1400457e2:	and    DWORD PTR [rax],eax
   1400457e4:	xchg   esp,eax
   1400457e5:	sub    al,BYTE PTR fs:[rax]
   1400457e8:	mov    WORD PTR [rcx+0x3d],fs
   1400457eb:	add    BYTE PTR [rbx-0x5bffcc96],bl
   1400457f1:	outs   dx,DWORD PTR ds:[rsi]
   1400457f2:	sub    DWORD PTR [rax],eax
   1400457f4:	lods   al,BYTE PTR ds:[rsi]
   1400457f5:	jne    0x14004581d
   1400457f7:	add    BYTE PTR [rbp-0x57ffd18f],ah
   1400457fd:	ja     0x14004582e
   1400457ff:	add    BYTE PTR [rcx-0x4bffdb81],bh
   140045805:	jnp    0x140045833
   140045807:	add    BYTE PTR [rsi+rsi*2+0x79a80031],ch
   14004580e:	xor    al,0x0
   140045810:	lea    esp,[rdx+0x44]
   140045813:	add    BYTE PTR [rdi-0x62ffb495],dl
   140045819:	jno    0x140045862
   14004581b:	add    BYTE PTR [rsi-0x63ffab8c],bl
   140045821:	js     0x140045875
   140045823:	add    BYTE PTR [rdi-0x54ffae86],ah
   140045829:	jge    0x14004587f
   14004582b:	add    BYTE PTR [rax+rax*4-0x7f48ffdb],bh
   140045832:	(bad)  
   140045833:	add    BYTE PTR [rcx+rax*4-0x7939ffcb],dh
   14004583a:	es add bl,al
   14004583d:	mov    DWORD PTR [rip+0x3692ce00],esi        # 0x176972643
   140045843:	add    BYTE PTR [rbx-0x46ffbd7e],dh
   140045849:	test   BYTE PTR [rax+rax*1-0x42],cl
   14004584d:	mov    BYTE PTR [rsi+0x0],cl
   140045850:	mov    bl,0x81
   140045852:	push   rdx
   140045853:	add    BYTE PTR [rax-0x45ffaf7c],bh
   140045859:	xchg   esp,eax
   14004585a:	pop    rsi
   14004585b:	add    ah,al
   14004585d:	mov    WORD PTR [rax+rax*1-0x38],cs
   140045861:	mov    cs,WORD PTR [rbx+0x0]
   140045864:	iret   
   140045865:	xchg   edx,eax
   140045866:	rex.RXB add r15b,r8b
   140045869:	xchg   ecx,eax
   14004586a:	rex.WRXB add r12b,r9b
   14004586d:	nop
   14004586e:	rex.WB add r9b,dl
   140045871:	xchg   esp,eax
   140045872:	rex.X add bpl,dl
   140045875:	(bad)  
   140045876:	add    sil,r10b
   140045879:	popf   
   14004587a:	rex.W add al,bl
   14004587d:	sahf   
   14004587e:	rex.WB add r13b,cl
   140045881:	pushf  
   140045882:	pop    rcx
   140045883:	add    cl,bl
   140045885:	movabs eax,ds:0xa1d90056a0d4004e
   14004588e:	push   rdx
   14004588f:	add    dh,dl
   140045891:	movabs ds:0x9cc800669bc1005b,eax
   14004589a:	push   0x0
   14004589c:	(bad)  
   14004589d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004589e:	imul   eax,DWORD PTR [rax],0xffffffd6
   1400458a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400458a2:	movsxd eax,DWORD PTR [rax]
   1400458a4:	(bad)  
   1400458a5:	stos   BYTE PTR es:[rdi],al
   1400458a6:	outs   dx,BYTE PTR ds:[rsi]
   1400458a7:	add    dl,cl
   1400458a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400458aa:	jnp    0x1400458ac
   1400458ac:	(bad)  
   1400458ad:	scas   al,BYTE PTR es:[rdi]
   1400458ae:	jns    0x1400458b0
   1400458b0:	(bad)  
   1400458b1:	sbb    eax,DWORD PTR [rax-0x7be3e800]
   1400458b7:	add    BYTE PTR [rdx],bl
   1400458b9:	(bad)  
   1400458ba:	mov    DWORD PTR [rax],eax
   1400458bc:	sbb    esp,DWORD PTR [rcx]
   1400458be:	mov    WORD PTR [rax],es
   1400458c0:	sbb    eax,0x37009225
   1400458c5:	(bad)  
   1400458c6:	test   DWORD PTR [rax],eax
   1400458c8:	and    BYTE PTR [rax],ch
   1400458ca:	xchg   esi,eax
   1400458cb:	add    BYTE PTR [rbx],ah
   1400458cd:	sub    eax,0x2923009c
   1400458d2:	movabs al,ds:0xa8352600a3312400
   1400458db:	add    BYTE PTR [rsi],ah
   1400458dd:	cmp    BYTE PTR [rdx-0x51c6d800],ch
   1400458e3:	add    BYTE PTR [rcx],ch
   1400458e5:	cmp    eax,0x332c00b2
   1400458ea:	mov    esi,0xbe373100
   1400458ef:	add    BYTE PTR [rbx],dh
   1400458f1:	cmp    bh,BYTE PTR [rbp-0x49bed600]
   1400458f7:	add    BYTE PTR [rbx],ch
   1400458f9:	rex.R mov ebx,0xbe4b2c00
   1400458ff:	add    BYTE PTR [rax+rax*2],bh
   140045902:	mov    ecx,0x83596000
   140045907:	add    BYTE PTR [rcx+0x5c],bl
   14004590a:	movabs eax,ds:0xb9484500b34b4900
   140045913:	add    BYTE PTR [rsi+0x50],cl
   140045916:	mov    dh,0x0
   140045918:	rex.WRXB push r14
   14004591a:	mov    edi,0xb5575700
   14004591f:	add    BYTE PTR [rbp+0x5c],bl
   140045922:	mov    bl,0x0
   140045924:	(bad)  
   140045925:	pop    rdi
   140045926:	mov    ah,0x0
   140045928:	imul   esp,DWORD PTR [rsi-0x4f],0xb26f7400
   14004592f:	add    BYTE PTR [rbp+0x70],dh
   140045932:	mov    cl,0x0
   140045934:	sub    eax,0x2e00c234
   140045939:	(bad)  
   14004593a:	enter  0x2e00,0x3a
   14004593e:	retf   
   14004593f:	add    BYTE PTR [rax],dh
   140045941:	cmp    cl,al
   140045943:	add    BYTE PTR [rdi],ch
   140045945:	rol    BYTE PTR ds:[rax],1
   140045948:	xor    BYTE PTR [rdi],bh
   14004594a:	rol    BYTE PTR [rax],1
   14004594c:	sub    eax,0x2f00c34a
   140045951:	rex.X retf 0x2f00
   140045955:	rex.WRX enter 0x2f00,0x50
   14004595a:	leave  
   14004595b:	add    BYTE PTR [rax],dh
   14004595d:	push   rdx
   14004595e:	int3   
   14004595f:	add    BYTE PTR [rax],dh
   140045961:	rex.XB (bad) 
   140045963:	add    BYTE PTR [rdx],dh
   140045965:	rex.RXB fadd DWORD PTR [r8]
   140045968:	xor    cl,BYTE PTR [rbx-0x25]
   14004596b:	add    BYTE PTR [rdx],dh
   14004596d:	push   rsi
   14004596e:	rol    BYTE PTR [rax],cl
   140045970:	xor    bl,BYTE PTR [rax-0x2e]
   140045973:	add    BYTE PTR [rax+rbx*2],dh
   140045976:	rol    DWORD PTR [rax],cl
   140045978:	xor    ebx,DWORD PTR [rax-0x2b]
   14004597b:	add    BYTE PTR [rcx+rbx*2],dh
   14004597e:	(bad)  
   14004597f:	add    BYTE PTR [rsp+rbx*2],dh
   140045982:	xlat   BYTE PTR ds:[rbx]
   140045983:	add    BYTE PTR [rip+0x3a00db5c],dh        # 0x17a0534e5
   140045989:	pop    rbp
   14004598a:	fild   WORD PTR [rax]
   14004598c:	xor    DWORD PTR [rcx-0x33],esp
   14004598f:	add    BYTE PTR [rsi],dh
   140045991:	(bad)  
   140045992:	fld    QWORD PTR [rax]
   140045994:	data16 fild WORD PTR ss:[rax]
   140045998:	xor    al,0x6e
   14004599a:	fadd   DWORD PTR [rax]
   14004599c:	xor    al,0x54
   14004599e:	loope  0x1400459a0
   1400459a0:	ss pop rsp
   1400459a2:	in     al,0x0
   1400459a4:	ss movsxd esp,ebx
   1400459a7:	add    BYTE PTR [rax],bh
   1400459a9:	fs out 0x0,eax
   1400459ac:	(bad)  
   1400459ad:	push   0xffffffffffffffe6
   1400459af:	add    BYTE PTR [rax],bh
   1400459b1:	outs   dx,DWORD PTR ds:[rsi]
   1400459b2:	out    0x0,al
   1400459b4:	(bad)  
   1400459b5:	ins    DWORD PTR es:[rdi],dx
   1400459b6:	call   0x1287091bb
   1400459bb:	add    BYTE PTR [rsi],dh
   1400459bd:	jbe    0x14004599f
   1400459bf:	add    BYTE PTR [rdi],dh
   1400459c1:	jns    0x1400459a9
   1400459c3:	add    BYTE PTR [rax],bh
   1400459c5:	jl     0x1400459ac
   1400459c7:	add    BYTE PTR [rax],bh
   1400459c9:	jno    0x1400459b4
   1400459cb:	add    BYTE PTR [rcx],bh
   1400459cd:	jne    0x1400459b9
   1400459cf:	add    BYTE PTR [rdx],bh
   1400459d1:	jns    0x1400459bd
   1400459d3:	add    BYTE PTR [rip+0x3900ea79],bh        # 0x179054452
   1400459d9:	jge    0x1400459c5
   1400459db:	add    BYTE PTR [rdi*2+0x754400ea],bh
   1400459e2:	fld    QWORD PTR [rax]
   1400459e4:	rex.XB jnp 0x1400459cf
   1400459e7:	add    BYTE PTR [rdx],bh
   1400459e9:	sub    bl,0x0
   1400459ec:	cmp    al,BYTE PTR [rdx-0x7dc3ff14]
   1400459f2:	in     al,dx
   1400459f3:	add    BYTE PTR [rdx],bh
   1400459f5:	test   esp,ebp
   1400459f7:	add    BYTE PTR [rax*4-0x76c4ff14],bh
   1400459fe:	in     al,dx
   1400459ff:	add    BYTE PTR [rdx+rcx*4],bh
   140045a02:	in     eax,dx
   140045a03:	add    BYTE PTR [rbx],bh
   140045a05:	mov    gs,ebp
   140045a07:	add    BYTE PTR [rcx*4-0x6ec4ff12],bh
   140045a0e:	out    dx,al
   140045a0f:	add    BYTE PTR [rcx+rdx*4],bh
   140045a12:	out    dx,al
   140045a13:	add    BYTE PTR [rdx],bh
   140045a15:	xchg   ebp,eax
   140045a16:	out    dx,al
   140045a17:	add    BYTE PTR [rdx],bh
   140045a19:	cdq    
   140045a1a:	out    dx,al
   140045a1b:	add    BYTE PTR [rdx],bh
   140045a1d:	sahf   
   140045a1e:	out    dx,eax
   140045a1f:	add    BYTE PTR [rdx],bh
   140045a21:	fwait
   140045a22:	lock add BYTE PTR [rbx],bh
   140045a25:	movabs al,ds:0xa83a00efa13d00ef
   140045a2e:	(bad)  
   140045a2f:	add    BYTE PTR [rbx],bh
   140045a31:	mov    cl,0xec
   140045a33:	add    BYTE PTR [rdx],bh
   140045a35:	movabs ds:0xa73c00f0a53a00f1,al
   140045a3e:	lock add BYTE PTR [rdx],bh
   140045a41:	test   eax,0xad3900f1
   140045a46:	repnz add BYTE PTR [rbp*4-0x4fc6ff0f],bh
   140045a4e:	repnz add BYTE PTR [rax+rsi*4],bh
   140045a52:	repnz add BYTE PTR [rbx],bh
   140045a55:	mov    ah,0xf3
   140045a57:	add    BYTE PTR [rbx],bh
   140045a59:	mov    bh,0xf4
   140045a5b:	add    BYTE PTR [rax],bh
   140045a5d:	mov    eax,0xba3e00f2
   140045a62:	repnz add BYTE PTR [rbx],bh
   140045a65:	mov    ecx,0x825600f4
   140045a6a:	fld    DWORD PTR [rax]
   140045a6c:	push   rcx
   140045a6d:	sbb    esi,0x0
   140045a70:	push   0xffffffffffffff96
   140045a72:	(bad)  
   140045a73:	add    BYTE PTR [rax-0x67],bh
   140045a76:	mov    DWORD PTR [rax],0xc89472
   140045a7c:	movsxd ecx,DWORD PTR [rbx+rdx*8-0x304a8d00]
   140045a83:	add    BYTE PTR [rsi-0x4a],dh
   140045a86:	(bad)  
   140045a87:	add    BYTE PTR [rdi-0x72],al
   140045a8a:	in     eax,0x0
   140045a8c:	rex.RXB lods eax,DWORD PTR ds:[rsi]
   140045a8e:	jmp    0x140045a90
   140045a90:	rex.RB mov r12b,0xec
   140045a93:	add    BYTE PTR [rip+0x3c00eccc],bh        # 0x17c054765
   140045a99:	shr    ch,cl
   140045a9b:	add    BYTE PTR [rip+0x3800ebdc],bh        # 0x17805467d
   140045aa1:	(bad)  
   140045aa2:	repnz add BYTE PTR [rsi],dh
   140045aa5:	int    0xf1
   140045aa7:	add    BYTE PTR [rdx-0x77ff665a],bh
   140045aad:	(bad)  
   140045aae:	lods   al,BYTE PTR ds:[rsi]
   140045aaf:	add    BYTE PTR [rsi-0x76ff4d80],al
   140045ab5:	xor    DWORD PTR [rdx-0x47716c00],0x0
   140045abc:	cwde   
   140045abd:	nop
   140045abe:	mov    bh,0x0
   140045ac0:	(bad)  
   140045ac1:	lods   eax,DWORD PTR ds:[rsi]
   140045ac2:	mov    esi,0xb5a7a000
   140045ac7:	add    BYTE PTR [rcx-0x31ff4258],ah
   140045acd:	lods   al,BYTE PTR ds:[rsi]
   140045ace:	add    BYTE PTR [rax],0xd4
   140045ad1:	mov    ah,0x8c
   140045ad3:	add    dl,bl
   140045ad5:	mov    esp,0xbfdc0095
   140045ada:	fwait
   140045adb:	add    BYTE PTR [rsi+riz*4-0x4970ff40],dl
   140045ae2:	(bad)  
   140045ae3:	add    BYTE PTR [rdi+rax*8+0xdb],dl
   140045aea:	add    BYTE PTR [rax],al
   140045aec:	(bad)  
   140045aed:	(bad)  
   140045aee:	inc    DWORD PTR [rax]
	...
   140045b64:	add    ch,bh
	...
   140045b92:	add    BYTE PTR [rax],al
   140045b94:	in     eax,0xdd
   140045b96:	fucom  st(5)
	...
   140045bc4:	fstp   st(5)
   140045bc6:	fstp   st(5)
   140045bc8:	call   0x140045bcd
	...
   140045bf1:	add    BYTE PTR [rax],al
   140045bf3:	cld    
   140045bf4:	fstp   st(5)
   140045bf6:	fcmovu st,st(2)
   140045bf8:	(bad)  
   140045bf9:	(bad)  
   140045bfa:	hlt    
	...
   140045c23:	out    0xda,eax
   140045c25:	(bad)  
   140045c26:	(bad)  
   140045c27:	ror    dh,cl
   140045c29:	retf   0xfbc7
	...
   140045c50:	add    BYTE PTR [rax],al
   140045c52:	add    dl,cl
   140045c54:	retf   0xcaca
   140045c57:	retf   0xc7c7
   140045c5a:	ret    
   140045c5b:	shl    dh,0x0
	...
   140045c82:	faddp  st(0),st
   140045c84:	ret    
   140045c85:	ret    
   140045c86:	ret    
   140045c87:	ret    
   140045c88:	rol    al,0xc0
   140045c8b:	mov    ebx,0xbb
	...
   140045cb0:	add    BYTE PTR [rax],al
   140045cb2:	movabs al,ds:0xbbb7bbb7bbb7b0a9
   140045cbb:	mov    bh,0xb7
   140045cbd:	mov    ebp,0x0
	...
   140045cde:	add    BYTE PTR [rax],al
   140045ce0:	add    BYTE PTR [rsi-0x5b647c83],al
   140045ce6:	test   eax,0xb2b2afad
   140045ceb:	mov    bh,0xbb
   140045ced:	mov    ebx,0xde
	...
   140045cfe:	add    dl,dh
	...
   140045d10:	add    BYTE PTR [rdi+rsi*2+0x7b],dh
   140045d14:	add    DWORD PTR [rbx-0x525b5f67],0xb7b7b2af
   140045d1e:	mov    ebx,0xe3
	...
   140045d2b:	add    BYTE PTR [rax],al
   140045d2d:	add    BYTE PTR [rax+rax*1+0x0],al
	...
   140045d40:	jne    0x140045db4
   140045d42:	je     0x140045dba
   140045d44:	jns    0x140045dc1
   140045d46:	add    DWORD PTR [rbx-0x52565f65],0xbbbbb7b1
   140045d50:	loop   0x140045d52
	...
   140045d5a:	add    BYTE PTR [rax],al
   140045d5c:	add    BYTE PTR [rax+0x8c],al
	...
   140045d6e:	add    BYTE PTR [rbp+0x73717025],al
   140045d74:	je     0x140045ded
   140045d76:	jnp    0x140045df5
   140045d78:	add    DWORD PTR [rbx-0x4e505b5e],0xffffffb7
   140045d7f:	mov    ebx,0xe1c0
	...
   140045d8c:	xchg   esp,eax
   140045d8d:	jle    0x140045d8f
	...
   140045d97:	add    BYTE PTR [rax],al
   140045d99:	add    BYTE PTR [rdx+0x0],ch
   140045d9c:	add    BYTE PTR [rax],al
   140045d9e:	sub    al,0x16
   140045da0:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b477cfcb
   140045da6:	ja     0x140045e22
   140045da8:	jge    0x140045d2c
   140045daa:	cdq    
   140045dab:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045dac:	lods   eax,DWORD PTR ds:[rsi]
   140045dad:	mov    cl,0xb7
   140045daf:	mov    ebx,0xe0c3c0
   140045db4:	add    BYTE PTR [rax],al
   140045db6:	add    BYTE PTR [rax],al
   140045db8:	add    BYTE PTR [rax],al
   140045dba:	icebp  
   140045dbb:	jle    0x140045e3b
   140045dbd:	test   BYTE PTR [rax],al
	...
   140045dc7:	add    BYTE PTR [rsi+0x5d],ch
   140045dca:	pop    rdi
   140045dcb:	pop    rsp
   140045dcc:	push   rbp
   140045dcd:	cmp    BYTE PTR [r14+rdx*1],r11b
   140045dd1:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b477cffc
   140045dd7:	ja     0x140045e54
   140045dd9:	jge    0x140045d5d
   140045ddb:	fwait
   140045ddc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045ddd:	lods   eax,DWORD PTR ds:[rsi]
   140045dde:	mov    bh,0xbb
   140045de0:	rol    bl,0xc3
   140045de3:	out    0xf5,al
   140045de5:	add    BYTE PTR [rax],al
   140045de7:	add    BYTE PTR [rax],al
   140045de9:	mov    dl,BYTE PTR [rbx+0xf17e7e]
	...
   140045df7:	fs (bad) 
   140045df9:	(bad)  
   140045dfa:	pop    rdi
   140045dfb:	pop    rdi
   140045dfc:	pop    rbx
   140045dfd:	push   rsi
   140045dfe:	rex.RB (bad) 
   140045e00:	sbb    BYTE PTR [rbx+riz*1],dl
   140045e03:	and    eax,0x74737225
   140045e08:	jns    0x140045e85
   140045e0a:	add    DWORD PTR [rdx-0x444e525d],0xffffffc0
   140045e11:	rol    bl,0xc3
   140045e14:	ret    
   140045e15:	mov    ebx,0x939ea6bc
   140045e1a:	xchg   ebx,eax
   140045e1b:	jle    0x140045e9b
	...
   140045e25:	add    BYTE PTR [rdx+0x61],ah
   140045e28:	(bad)  
   140045e29:	(bad)  
   140045e2a:	(bad)  
   140045e2b:	pop    rdi
   140045e2c:	pop    rsp
   140045e2d:	pop    rbx
   140045e2e:	pop    rcx
   140045e2f:	rex.RX or eax,0x2523141b
   140045e35:	and    eax,0x79767472
   140045e3a:	jl     0x140045dbe
   140045e3c:	movabs ds:0xc0c3c3c3c0b7b2a4,al
   140045e45:	mov    ebx,0x939dabb2
   140045e4a:	jle    0x140045eca
   140045e4c:	mov    eax,DWORD PTR [rax]
   140045e4e:	add    BYTE PTR [rax],al
   140045e50:	add    BYTE PTR [rax],al
   140045e52:	add    BYTE PTR [rax],al
   140045e54:	imul   esp,DWORD PTR [rbx+0x61],0x61
   140045e58:	(bad)  
   140045e59:	(bad)  
   140045e5a:	(bad)  
   140045e5b:	pop    rdi
   140045e5c:	pop    rsp
   140045e5d:	pop    rbx
   140045e5e:	pop    rcx
   140045e5f:	pop    rcx
   140045e60:	rex.X (bad) 
   140045e62:	adc    edx,DWORD PTR [rsi]
   140045e64:	and    al,0x25
   140045e66:	jo     0x140045eda
   140045e68:	je     0x140045ee1
   140045e6a:	jnp    0x140045dee
   140045e6c:	cdq    
   140045e6d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045e6e:	mov    dl,0xb7
   140045e70:	rol    dh,0xc6
   140045e73:	ret    
   140045e74:	ret    
   140045e75:	mov    ebx,0x9296abb1
   140045e7a:	jle    0x140045efa
   140045e7c:	add    BYTE PTR [rax],al
   140045e7e:	add    BYTE PTR [rax],al
   140045e80:	add    BYTE PTR [rax],al
   140045e82:	add    BYTE PTR [rsi+0x63],ah
   140045e85:	movsxd esp,DWORD PTR [rbx+0x61]
   140045e88:	(bad)  
   140045e89:	(bad)  
   140045e8a:	(bad)  
   140045e8b:	(bad)  
   140045e8c:	pop    rdi
   140045e8d:	pop    rbx
   140045e8e:	push   rdi
   140045e8f:	pop    rcx
   140045e90:	pop    rax
   140045e91:	add    dl,BYTE PTR [rbx]
   140045e94:	and    ah,BYTE PTR ds:0x79767371
   140045e9b:	jge    0x140045e1f
   140045e9d:	movabs ds:0xb7c0c3c6c3c0b7ae,eax
   140045ea6:	lods   eax,DWORD PTR ds:[rsi]
   140045ea7:	sahf   
   140045ea8:	xchg   ebp,eax
   140045ea9:	xchg   edx,eax
   140045eaa:	jle    0x140045e40
   140045eac:	add    BYTE PTR [rax],al
   140045eae:	add    BYTE PTR [rax],al
   140045eb0:	add    bh,dh
   140045eb2:	gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   140045eb8:	(bad)  
   140045eb9:	(bad)  
   140045eba:	(bad)  
   140045ebb:	(bad)  
   140045ebc:	pop    rdi
   140045ebd:	pop    rbx
   140045ebe:	push   rdi
   140045ebf:	pop    rcx
   140045ec0:	pop    rax
   140045ec1:	rex.WRB cmp rax,0x2523131a
   140045ec7:	and    eax,0x7b777473
   140045ecc:	(bad)  
   140045ecd:	movabs ds:0xb7c0c3c6c6c0b7ad,eax
   140045ed6:	lods   al,BYTE PTR ds:[rsi]
   140045ed7:	popf   
   140045ed8:	xchg   ebx,eax
   140045ed9:	jle    0x140045f59
   140045edb:	pop    QWORD PTR [rax]
   140045edd:	add    BYTE PTR [rax],al
   140045edf:	add    cl,bh
   140045ee1:	gs gs gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   140045ee9:	(bad)  
   140045eea:	(bad)  
   140045eeb:	(bad)  
   140045eec:	pop    rdi
   140045eed:	pop    rsp
   140045eee:	push   rdi
   140045eef:	pop    rcx
   140045ef0:	pop    rax
   140045ef1:	rex.WRX
   140045ef2:	rex.WX or rax,0x25241511
   140045ef8:	jno    0x140045f6c
   140045efa:	jbe    0x140045f77
   140045efc:	(bad)  
   140045efd:	fwait
   140045efe:	lods   eax,DWORD PTR ds:[rsi]
   140045eff:	mov    bh,0xc0
   140045f01:	mov    dh,0xc3
   140045f04:	shl    BYTE PTR [rcx+0x7e9396ab],0x7e
   140045f0b:	add    BYTE PTR [rax],al
   140045f0d:	add    BYTE PTR [rax],al
   140045f0f:	add    BYTE PTR [rax],al
   140045f11:	add    dl,bh
   140045f13:	ins    DWORD PTR es:[rdi],dx
   140045f14:	gs movsxd esp,DWORD PTR gs:[ebx+0x63]
   140045f1a:	(bad)  
   140045f1b:	(bad)  
   140045f1c:	(bad)  
   140045f1d:	pop    rbx
   140045f1e:	pop    rbx
   140045f1f:	pop    rcx
   140045f20:	rex.WRX
   140045f21:	rex.WRX
   140045f22:	rex.WXB cmp rax,QWORD PTR [r11]
   140045f25:	adc    edx,DWORD PTR [rsi]
   140045f27:	and    al,0x25
   140045f29:	jb     0x140045fa1
   140045f2b:	jns    0x140045faa
   140045f2d:	cdq    
   140045f2e:	lods   eax,DWORD PTR ds:[rsi]
   140045f2f:	mov    bh,0xc0
   140045f31:	mov    bh,0xc3
   140045f34:	mov    ebx,0x9295abb1
   140045f39:	jle    0x140045ec3
	...
   140045f43:	add    BYTE PTR [rax],al
   140045f45:	outs   dx,DWORD PTR ds:[rsi]
   140045f46:	gs movsxd esp,DWORD PTR gs:[rdx+0x61]
   140045f4b:	(bad)  
   140045f4c:	pop    rbp
   140045f4d:	pop    rsp
   140045f4e:	push   rdi
   140045f4f:	pop    rcx
   140045f50:	rex.WRX
   140045f51:	rex.WXB sub bl,BYTE PTR [r9]
   140045f54:	(bad)  
   140045f55:	sbb    edx,DWORD PTR [rip+0x73722523]        # 0x1b376847e
   140045f5b:	ja     0x140045fd9
   140045f5d:	cdq    
   140045f5e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045f5f:	mov    bh,0xc0
   140045f61:	mov    edi,0x9eaebac6
   140045f67:	xchg   ebx,eax
   140045f68:	jle    0x140045efc
   140045f6a:	lock add BYTE PTR [rax],al
	...
   140045f75:	add    BYTE PTR [rax],al
   140045f77:	cli    
   140045f78:	push   0x60616163
   140045f7d:	pop    rsp
   140045f7e:	push   rdi
   140045f7f:	pop    rcx
   140045f80:	rex.WB and BYTE PTR [r9],bl
   140045f83:	adc    al,BYTE PTR [rdx]
   140045f85:	or     dl,BYTE PTR [rcx]
   140045f87:	(bad)  
   140045f88:	and    al,0x70
   140045f8a:	jb     0x140046002
   140045f8c:	jnp    0x140045f10
   140045f8e:	lods   al,BYTE PTR ds:[rsi]
   140045f8f:	mov    bh,0xc6
   140045f91:	mov    edi,0x9daeb7c6
   140045f97:	xchg   ebx,eax
   140045f98:	jle    0x140046018
	...
   140045faa:	ins    DWORD PTR es:[rdi],dx
   140045fab:	(bad)  
   140045fac:	pop    rbp
   140045fad:	pop    rsp
   140045fae:	push   rdi
   140045faf:	rex.W and BYTE PTR [rcx],bl
   140045fb2:	adc    edx,DWORD PTR [rcx]
   140045fb4:	adc    DWORD PTR [rcx],ecx
   140045fb6:	sbb    eax,0x72252313
   140045fbb:	je     0x140046038
   140045fbd:	and    DWORD PTR [rdi+rsi*4-0x3938383a],0xffffffb7
   140045fc5:	lods   al,BYTE PTR ds:[rsi]
   140045fc6:	pushf  
   140045fc7:	xchg   edx,eax
   140045fc8:	jle    0x140045f52
	...
   140045fda:	add    BYTE PTR [rax],al
   140045fdc:	clc    
   140045fdd:	pop    rsi
   140045fde:	sub    DWORD PTR ds:[rax+rbx*1],ebx
   140045fe2:	sbb    BYTE PTR [rbx],bl
   140045fe4:	sbb    BYTE PTR [rsi],bl
   140045fe6:	or     DWORD PTR [rbx],edx
   140045fe8:	(bad)  
   140045fe9:	and    al,0x70
   140045feb:	jae    0x140046064
   140045fed:	(bad)  
   140045fee:	movabs ds:0x95abb7c0ccccc6b7,eax
   140045ff7:	jle    0x140046077
   140045ff9:	repz add BYTE PTR [rax],al
	...
   14004600c:	add    BYTE PTR [rax],al
   14004600e:	sub    ebp,DWORD PTR [rcx]
   140046010:	sub    DWORD PTR [rax],ebp
   140046012:	and    BYTE PTR [rip+0x1f0d1d1e],bl        # 0x15f117d36
   140046018:	adc    esp,DWORD PTR [rbx]
   14004601a:	and    eax,0xa37d7772
   14004601f:	mov    bh,0xc6
   140046021:	int3   
   140046022:	int3   
   140046023:	(bad)  
   140046024:	mov    cl,0x9e
   140046026:	xchg   ebx,eax
   140046027:	xchg   edx,eax
   140046028:	xchg   esp,eax
	...
   14004603d:	add    BYTE PTR [rax],al
   14004603f:	cmp    cl,BYTE PTR [rip+0x2904060a]        # 0x16908664f
   140046045:	sub    BYTE PTR [rcx],ch
   140046047:	(bad)  
   140046048:	adc    esp,DWORD PTR [rdx]
   14004604a:	and    eax,0xa27c7472
   14004604f:	mov    bh,0xc7
   140046051:	ror    ah,cl
   140046053:	shl    BYTE PTR [rcx-0x74816d62],0x0
	...
   14004606e:	add    BYTE PTR [rax],al
   140046070:	rex.WRXB xor BYTE PTR [r9+r9*1],r15b
   140046074:	or     eax,DWORD PTR [rip+0x131f3904]        # 0x15323997e
   14004607a:	and    al,0x70
   14004607c:	je     0x1400460f9
   14004607e:	fwait
   14004607f:	mov    ebx,0xc0ccd6c7
   140046084:	scas   al,BYTE PTR es:[rdi]
   140046085:	pushf  
   140046086:	xchg   edx,eax
   140046087:	jle    0x140046089
	...
   1400460a1:	push   rsp
   1400460a2:	push   rdx
   1400460a3:	xor    DWORD PTR [rsi+rcx*1],edi
   1400460a6:	or     eax,DWORD PTR [rsi]
   1400460a8:	cmp    edx,DWORD PTR [rbx]
   1400460aa:	and    ah,BYTE PTR [rip+0xffffffffb79b7972]        # 0xf79fda22
   1400460b0:	int3   
   1400460b1:	fcmovbe st,st(2)
   1400460b3:	shr    BYTE PTR [rbp+rdx*4+0x947e],0x0
	...
   1400460cf:	add    BYTE PTR [rax],al
   1400460d1:	add    BYTE PTR [rbp+0x33],al
   1400460d4:	xor    DWORD PTR [rip+0x203d0d37],ebp        # 0x160416e11
   1400460da:	adc    al,0x24
   1400460dc:	jb     0x140046155
   1400460de:	cmp    DWORD PTR [rsi-0x442e252e],0xffffffab
   1400460e5:	xchg   ebx,eax
   1400460e6:	jle    0x140046075
	...
   140046104:	rex.WR xor BYTE PTR [rsi],r13b
   140046107:	cmp    al,0x38
   140046109:	cmp    dl,BYTE PTR [rbx]
   14004610b:	and    esi,DWORD PTR [rax+0x76]
   14004610e:	cmp    DWORD PTR [rsi-0x452e132a],0xffffff9e
   140046115:	xchg   ebx,eax
   140046116:	jle    0x140046118
	...
   140046134:	add    BYTE PTR [rax],al
   140046136:	rex.X xor BYTE PTR [rip+0x25161d41],bpl        # 0x1651a7e7e
   14004613d:	je     0x1400460c2
   14004613f:	mov    bh,0xda
   140046141:	in     eax,dx
   140046142:	(bad)  
   140046143:	mov    bh,0x9d
   140046145:	xchg   edx,eax
   140046146:	jle    0x140046148
	...
   140046164:	add    BYTE PTR [rax],al
   140046166:	add    BYTE PTR [rbp+0x31],dl
   140046169:	xor    BYTE PTR [rcx],bh
   14004616b:	adc    esp,DWORD PTR [rdx+rsi*2]
   14004616e:	jge    0x14004612b
   140046170:	in     al,dx
   140046171:	(bad)  
   140046172:	(bad)  
   140046173:	mov    cl,0x95
   140046175:	jle    0x140046104
	...
   140046197:	add    BYTE PTR [rcx+0x31],dl
   14004619a:	rex.X sbb spl,BYTE PTR [rdx]
   14004619d:	jno    0x14004621a
   14004619f:	mov    edx,0xaed1ebea
   1400461a4:	xchg   edx,eax
   1400461a5:	jle    0x1400461a7
	...
   1400461c7:	add    BYTE PTR [rax],al
   1400461c9:	xor    r9,QWORD PTR [r14+r10*1]
   1400461cd:	and    eax,0xebebb37a
   1400461d2:	shr    DWORD PTR [rbx+0x9492],1
	...
   1400461f8:	add    BYTE PTR [rax],al
   1400461fa:	xor    eax,DWORD PTR [rax+0x13]
   1400461fd:	and    al,0x76
   1400461ff:	mov    bl,0xeb
   140046201:	jmp    0x1400461ca
   140046203:	sahf   
   140046204:	jle    0x140046196
	...
   14004622a:	imul   eax,DWORD PTR [rdx+0x6],0xebaa7322
   140046231:	jmp    0x1400461f6
   140046233:	xchg   ebp,eax
   140046234:	jle    0x140046236
	...
   14004625a:	add    BYTE PTR [rdi+0x3f],al
   14004625d:	adc    eax,0xebeba771
   140046262:	scas   eax,DWORD PTR es:[rdi]
   140046263:	xchg   ebx,eax
   140046264:	mov    al,BYTE PTR [rax]
	...
   14004628a:	add    BYTE PTR [rax],al
   14004628c:	push   rax
   14004628d:	and    BYTE PTR [rip+0xffffffffa4e9eb83],ah        # 0xe4ee4e16
   140046293:	jle    0x140046295
	...
   1400462b9:	add    BYTE PTR [rax],al
   1400462bb:	add    BYTE PTR [rdx+0x3a],bl
   1400462be:	(bad)  
   1400462bf:	jnp    0x1400462ab
   1400462c1:	rcl    BYTE PTR [rsi+0x88],1
	...
   1400462eb:	add    BYTE PTR [rax],al
   1400462ed:	push   rbx
   1400462ee:	sbb    al,0x74
   1400462f0:	iret   
   1400462f1:	mov    bl,0x92
	...
   14004631b:	add    BYTE PTR [rax],al
   14004631d:	add    BYTE PTR [rax],dl
   14004631f:	(bad)  
   140046320:	fwait
   140046321:	cwde   
   140046322:	mov    es,WORD PTR [rax]
	...
   14004634c:	add    BYTE PTR [rax],al
   14004634e:	imul   esp,DWORD PTR [rcx],0x8779
	...
   14004637c:	add    BYTE PTR [rax],al
   14004637e:	add    dh,ch
   140046380:	out    dx,eax
	...
   1400463ed:	add    BYTE PTR [rax],al
   1400463ef:	add    bh,bh
   1400463f1:	(bad)  
   1400463f2:	(bad)  
   1400463f3:	(bad)  
   1400463f4:	(bad)  
   1400463f5:	inc    DWORD PTR [rax]
   1400463f7:	add    bh,bh
   1400463f9:	(bad)  
   1400463fa:	(bad)  
   1400463fb:	(bad)  
   1400463fc:	(bad)  
   1400463fd:	inc    DWORD PTR [rax]
   1400463ff:	add    bh,bh
   140046401:	(bad)  
   140046402:	sti    
   140046403:	(bad)  
   140046404:	(bad)  
   140046405:	inc    DWORD PTR [rax]
   140046407:	add    bh,bh
   140046409:	push   rax
   14004640b:	(bad)  
   14004640c:	(bad)  
   14004640d:	inc    DWORD PTR [rax]
   14004640f:	add    bh,bh
   140046411:	push   rax
   140046413:	jg     0x140046414
   140046415:	inc    DWORD PTR [rax]
   140046417:	add    bh,bh
   140046419:	jmp    rax
   14004641b:	(bad)  
   14004641c:	(bad)  
   14004641d:	inc    DWORD PTR [rax]
   14004641f:	add    bh,bh
   140046421:	jmp    rax
   140046423:	ud0    edi,edi
   140046426:	add    BYTE PTR [rax],al
   140046428:	(bad)  
   140046429:	jmp    rax
   14004642b:	(bad)  
   14004642c:	(bad)  
   14004642d:	inc    DWORD PTR [rax]
   14004642f:	add    bh,bh
   140046431:	inc    eax
   140046433:	(bad)  
   140046434:	(bad)  
   140046435:	inc    DWORD PTR [rax]
   140046437:	add    bh,bh
   140046439:	inc    eax
   14004643b:	add    edi,edi
   14004643d:	inc    DWORD PTR [rax]
   14004643f:	add    bh,bh
   140046441:	inc    DWORD PTR [rax+0xfeff01]
   140046447:	add    bh,bh
   140046449:	inc    DWORD PTR [rax+0xfdff00]
   14004644f:	add    bh,bh
   140046451:	inc    DWORD PTR [rax]
   140046453:	add    BYTE PTR [rdi-0x7],bh
   140046456:	add    BYTE PTR [rax],al
   140046458:	(bad)  
   140046459:	inc    BYTE PTR [rax]
   14004645b:	add    BYTE PTR [rdi],bh
   14004645d:	repz add BYTE PTR [rax],al
   140046460:	(bad)  
   140046461:	fadd   QWORD PTR [rax]
   140046463:	add    BYTE PTR [rdi],bl
   140046465:	ret    
   140046466:	add    BYTE PTR [rax],al
   140046468:	inc    DWORD PTR [rax]
   14004646a:	add    BYTE PTR [rax],al
   14004646c:	(bad)  
   14004646d:	add    DWORD PTR [rax],0x0
   140046470:	inc    BYTE PTR [rax]
   140046472:	add    BYTE PTR [rax],al
   140046474:	add    BYTE PTR [rdi],al
   140046476:	add    BYTE PTR [rax],al
   140046478:	cld    
   140046479:	add    BYTE PTR [rax],al
   14004647b:	add    BYTE PTR [rax],al
   14004647d:	(bad)  
   14004647e:	add    BYTE PTR [rax],al
   140046480:	lock add BYTE PTR [rax],al
   140046483:	add    BYTE PTR [rax],al
   140046485:	sldt   WORD PTR [rax]
   140046488:	loopne 0x14004648a
   14004648a:	add    BYTE PTR [rax],al
   14004648c:	add    BYTE PTR [rdi],cl
   14004648e:	add    BYTE PTR [rax],al
   140046490:	add    BYTE PTR [rax],0x0
   140046493:	add    BYTE PTR [rax],al
   140046495:	sldt   WORD PTR [rax]
   140046498:	add    BYTE PTR [rax],al
   14004649a:	add    BYTE PTR [rax],al
   14004649c:	add    BYTE PTR [rdi],bl
   14004649e:	add    BYTE PTR [rax],al
   1400464a0:	rol    BYTE PTR [rax],0x0
   1400464a3:	add    BYTE PTR [rax],al
   1400464a5:	(bad)  
   1400464a6:	add    BYTE PTR [rax],al
   1400464a8:	clc    
   1400464a9:	add    BYTE PTR [rax],al
   1400464ab:	add    BYTE PTR [rax],al
   1400464ad:	(bad)  
   1400464ae:	add    BYTE PTR [rax],al
   1400464b0:	inc    BYTE PTR [rax]
   1400464b2:	add    BYTE PTR [rax],al
   1400464b4:	add    BYTE PTR [rdi],bh
   1400464b6:	add    BYTE PTR [rax],al
   1400464b8:	inc    eax
   1400464ba:	add    BYTE PTR [rax],al
   1400464bc:	add    BYTE PTR [rdi],bh
   1400464be:	add    BYTE PTR [rax],al
   1400464c0:	push   rax
   1400464c2:	add    BYTE PTR [rax],al
   1400464c4:	add    BYTE PTR [rdi],bh
   1400464c6:	add    BYTE PTR [rax],al
   1400464c8:	(bad)  
   1400464c9:	cld    
   1400464ca:	add    BYTE PTR [rax],al
   1400464cc:	add    BYTE PTR [rdi+0x0],bh
   1400464cf:	add    bh,bh
   1400464d1:	inc    BYTE PTR [rax]
   1400464d3:	add    BYTE PTR [rax],al
   1400464d5:	jg     0x1400464d7
   1400464d7:	add    bh,bh
   1400464d9:	inc    DWORD PTR [rax]
   1400464db:	add    BYTE PTR [rax],al
   1400464dd:	inc    DWORD PTR [rax]
   1400464df:	add    bh,bh
   1400464e1:	inc    DWORD PTR [rax+0xff0000]
   1400464e7:	add    bh,bh
   1400464e9:	inc    eax
   1400464eb:	add    BYTE PTR [rax],al
   1400464ed:	inc    DWORD PTR [rax]
   1400464ef:	add    bh,bh
   1400464f1:	push   rax
   1400464f3:	add    BYTE PTR [rcx],al
   1400464f5:	inc    DWORD PTR [rax]
   1400464f7:	add    bh,bh
   1400464f9:	(bad)  
   1400464fa:	cld    
   1400464fb:	add    BYTE PTR [rcx],al
   1400464fd:	inc    DWORD PTR [rax]
   1400464ff:	add    bh,bh
   140046501:	(bad)  
   140046502:	inc    BYTE PTR [rax]
   140046504:	add    edi,edi
   140046506:	add    BYTE PTR [rax],al
   140046508:	(bad)  
   140046509:	(bad)  
   14004650a:	inc    DWORD PTR [rax]
   14004650c:	add    edi,edi
   14004650e:	add    BYTE PTR [rax],al
   140046510:	(bad)  
   140046511:	(bad)  
   140046512:	inc    DWORD PTR [rax+0xff03]
   140046518:	(bad)  
   140046519:	(bad)  
   14004651a:	inc    eax
   14004651c:	add    edi,edi
   14004651e:	add    BYTE PTR [rax],al
   140046520:	(bad)  
   140046521:	(bad)  
   140046522:	inc    eax
   140046524:	(bad)  
   140046525:	inc    DWORD PTR [rax]
   140046527:	add    bh,bh
   140046529:	(bad)  
   14004652a:	jmp    rax
   14004652c:	(bad)  
   14004652d:	inc    DWORD PTR [rax]
   14004652f:	add    bh,bh
   140046531:	(bad)  
   140046532:	push   rax
   140046534:	ud0    eax,DWORD PTR [rax]
   140046537:	add    bh,bh
   140046539:	(bad)  
   14004653a:	push   rax
   14004653c:	ud0    eax,DWORD PTR [rax]
   14004653f:	add    bh,bh
   140046541:	(bad)  
   140046542:	(bad)  
   140046543:	clc    
   140046544:	(bad)  
   140046545:	inc    DWORD PTR [rax]
   140046547:	add    bh,bh
   140046549:	(bad)  
   14004654a:	(bad)  
   14004654b:	cld    
   14004654c:	(bad)  
   14004654d:	inc    DWORD PTR [rax]
   14004654f:	add    bh,bh
   140046551:	(bad)  
   140046552:	(bad)  
   140046553:	cld    
   140046554:	(bad)  
   140046555:	inc    DWORD PTR [rax]
   140046557:	add    bh,bh
   140046559:	(bad)  
   14004655a:	(bad)  
   14004655b:	(bad)  
   14004655c:	jg     0x14004655d
   14004655e:	add    BYTE PTR [rax],al
   140046560:	(bad)  
   140046561:	(bad)  
   140046562:	(bad)  
   140046563:	(bad)  
   140046564:	(bad)  
   140046565:	inc    DWORD PTR [rax]
   140046567:	add    bh,bh
   140046569:	(bad)  
   14004656a:	(bad)  
   14004656b:	(bad)  
   14004656c:	(bad)  
   14004656d:	inc    DWORD PTR [rax]
   14004656f:	add    BYTE PTR [rax],ch
   140046571:	add    BYTE PTR [rax],al
   140046573:	add    BYTE PTR [rax],ah
   140046575:	add    BYTE PTR [rax],al
   140046577:	add    BYTE PTR [rax+0x0],al
   14004657a:	add    BYTE PTR [rax],al
   14004657c:	add    DWORD PTR [rax],eax
   14004657e:	or     BYTE PTR [rax],al
   140046580:	add    BYTE PTR [rax],al
   140046582:	add    BYTE PTR [rax],al
   140046584:	add    BYTE PTR [rax+rax*1],al
	...
   14004658f:	add    BYTE PTR [rax],al
   140046591:	add    DWORD PTR [rax],eax
   140046593:	add    BYTE PTR [rax],al
   140046595:	add    DWORD PTR [rax],eax
   140046597:	add    BYTE PTR [rax],al
   140046599:	add    BYTE PTR [rax],al
   14004659b:	add    BYTE PTR [rdi+riz*1],bh
   14004659e:	add    BYTE PTR ds:[rdi+0x39],dl
   1400465a2:	(bad)  
   1400465a3:	add    BYTE PTR [rdi+0x3d],bl
   1400465a6:	xor    eax,0x3e355200
   1400465ab:	add    BYTE PTR [rdx+0x3d],bl
   1400465ae:	cmp    eax,0x2b547e00
   1400465b3:	add    BYTE PTR [rbx+rdx*2+0x2d],bh
   1400465b7:	add    BYTE PTR [rdx+0x40],ah
   1400465ba:	add    BYTE PTR ss:[rbp+0x42],ah
   1400465be:	xor    eax,0x30456900
   1400465c3:	add    BYTE PTR [rcx+0x47],ch
   1400465c6:	add    BYTE PTR ss:[rcx+0x40],ah
   1400465ca:	cmp    DWORD PTR [rax],eax
   1400465cc:	cmp    BYTE PTR gs:[rax],r8b
   1400465d0:	jo     0x14004661c
   1400465d2:	add    BYTE PTR ss:[rip+0x1e004611],bl        # 0x15e04abea
   1400465d9:	adc    ecx,DWORD PTR [rcx+0x0]
   1400465dc:	sbb    DWORD PTR [rcx],edx
   1400465de:	rex.WRXB add BYTE PTR [r14],r11b
   1400465e1:	adc    eax,0x1117004f
   1400465e6:	push   rbx
   1400465e7:	add    BYTE PTR [rsi],dl
   1400465e9:	adc    DWORD PTR [rdi+0x0],edx
   1400465ec:	(bad)  
   1400465ed:	adc    DWORD PTR [rax+0x0],ebx
   1400465f0:	sbb    BYTE PTR [rbx],dl
   1400465f2:	pop    rbp
   1400465f3:	add    BYTE PTR [rbx],ah
   1400465f5:	adc    al,0x46
   1400465f7:	add    BYTE PTR [rsp+rdx*1],ah
   1400465fa:	rex.RX add BYTE PTR [rax],r13b
   1400465fd:	(bad)  
   1400465fe:	rex.RX add BYTE PTR [rip+0x2c004618],r12b        # 0x16c04ac1d
   140046605:	sbb    eax,0x1a290042
   14004660a:	rex.RX add BYTE PTR [rip+0x34004819],r12b        # 0x17404ae2a
   140046611:	and    DWORD PTR [rsi+0x0],eax
   140046614:	cmp    BYTE PTR [rdx],ah
   140046616:	rex.XB add BYTE PTR [r15],bpl
   140046619:	and    al,0x58
   14004661b:	add    BYTE PTR [rip+0x15006012],dl        # 0x15504c633
   140046621:	adc    esp,DWORD PTR [rbp+0x0]
   140046624:	sbb    bl,BYTE PTR [rax]
   140046626:	add    BYTE PTR [esp+edx*1],dl
   14004662a:	push   0x0
   14004662c:	adc    al,0x15
   14004662e:	ins    DWORD PTR es:[rdi],dx
   14004662f:	add    BYTE PTR [rip+0x14007116],dl        # 0x15404d74b
   140046635:	(bad)  
   140046636:	je     0x140046638
   140046638:	adc    al,0x18
   14004663a:	jbe    0x14004663c
   14004663c:	sbb    BYTE PTR [rdx],bl
   14004663e:	je     0x140046640
   140046640:	adc    al,0x19
   140046642:	jns    0x140046644
   140046644:	(bad)  
   140046645:	sbb    bh,BYTE PTR [rbp+0x0]
   140046648:	sub    BYTE PTR [r10+0x0],al
   14004664c:	rex.XB sub eax,0x2f490046
   140046652:	rex.X add BYTE PTR [rax+0x2f],cl
   140046656:	add    BYTE PTR [r10+0x30],r9b
   14004665a:	add    BYTE PTR [rbp+0x32],cl
   14004665e:	add    BYTE PTR [rsi+0x3b],dl
   140046662:	rex.WX add BYTE PTR [rcx-0x5cffe495],spl
   140046669:	ins    DWORD PTR es:[rdi],dx
   14004666a:	sbb    eax,0x1970a800
   14004666f:	add    BYTE PTR [rbp-0x71ffe386],dh
   140046675:	pop    rdi
   140046676:	and    eax,DWORD PTR [rax]
   140046678:	xchg   BYTE PTR [rdx+0x2e],bl
   14004667b:	add    BYTE PTR [rdi-0x6bffdc96],bl
   140046681:	sub    al,BYTE PTR fs:[rax]
   140046684:	xchg   esi,eax
   140046685:	data16 add BYTE PTR cs:[rdx-0x72ffd398],bl
   14004668d:	(bad)  
   14004668e:	xor    eax,0x2b6fa400
   140046693:	add    BYTE PTR [rax-0x53ffda8f],ch
   140046699:	jbe    0x1400466c0
   14004669b:	add    BYTE PTR [rsp+rdi*2+0x6f9c0025],dh
   1400466a2:	add    BYTE PTR [r9-0x55ffaf94],dl
   1400466a9:	ja     0x1400466ed
   1400466ab:	add    BYTE PTR [rdi-0x5bffb389],ah
   1400466b1:	jl     0x1400466fe
   1400466b3:	add    BYTE PTR [rdx-0x4dffb486],ch
   1400466b9:	jg     0x140046708
   1400466bb:	add    BYTE PTR [rbp-0x54ffab87],ah
   1400466c1:	jge    0x140046718
   1400466c3:	add    bl,al
   1400466c5:	and    DWORD PTR [rbx],0x0
   1400466c8:	mov    ah,0x86
   1400466ca:	add    BYTE PTR [rcx-0x48ffbb7d],r15b
   1400466d1:	or     DWORD PTR [rbx+0x0],0xffffffbe
   1400466d5:	mov    BYTE PTR [rdi+0x0],cl
   1400466d8:	mov    dh,0x83
   1400466da:	push   rcx
   1400466db:	add    BYTE PTR [rdx-0x3fff986a],bh
   1400466e1:	mov    DWORD PTR [rsi+0x0],ecx
   1400466e4:	(bad)
   1400466e7:	add    al,cl
   1400466e9:	(bad)  
   1400466ea:	rex.WXB add r14b,cl
   1400466ed:	xchg   edx,eax
   1400466ee:	rex.RX add dl,r9b
   1400466f1:	nop
   1400466f2:	rex.WX add bpl,cl
   1400466f5:	xchg   ecx,eax
   1400466f6:	rex.W add dl,dl
   1400466f9:	xchg   ebp,eax
   1400466fa:	rex.X add al,dl
   1400466fd:	xchg   ebx,eax
   1400466fe:	add    r12b,r10b
   140046701:	cdq    
   140046702:	rex.XB add r14b,dl
   140046705:	fwait
   140046706:	add    r15b,r10b
   140046709:	popf   
   14004670a:	rex.RX add sil,r10b
   14004670d:	lahf   
   14004670e:	rex.WXB add r8b,bl
   140046711:	sahf   
   140046712:	rex.WB add r14b,cl
   140046715:	pushf  
   140046716:	push   rdi
   140046717:	add    cl,bl
   140046719:	movabs al,ds:0xa1d90052a1d5004e
   140046722:	push   rax
   140046723:	add    dh,dl
   140046725:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046726:	pop    rsi
   140046727:	add    dh,cl
   140046729:	movabs ds:0xa3c80069a1ce0065,eax
   140046732:	outs   dx,DWORD PTR ds:[rsi]
   140046733:	add    bh,cl
   140046735:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140046736:	ins    BYTE PTR es:[rdi],dx
   140046737:	add    bl,cl
   140046739:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004673a:	js     0x14004673c
   14004673c:	enter  0x7ca9,0x0
   140046740:	xlat   BYTE PTR ds:[rbx]
   140046741:	lods   eax,DWORD PTR ds:[rsi]
   140046742:	jne    0x140046744
   140046744:	(bad)  
   140046745:	sbb    al,0x80
   140046747:	add    BYTE PTR [rax],bl
   140046749:	sbb    al,0x82
   14004674b:	add    BYTE PTR [rax],bl
   14004674d:	sbb    eax,0x201b0085
   140046752:	mov    al,BYTE PTR [rax]
   140046754:	sbb    esp,DWORD PTR [rcx]
   140046756:	mov    WORD PTR [rax],es
   140046758:	sbb    al,0x21
   14004675a:	lea    eax,[rax]
   14004675c:	sbb    eax,0x1e008e25
   140046761:	and    eax,0x261f0092
   140046766:	xchg   esp,eax
   140046767:	add    BYTE PTR [rcx],ah
   140046769:	sub    bl,BYTE PTR [rcx-0x64d3df00]
   14004676f:	add    BYTE PTR [rbx],ah
   140046771:	sub    al,0x9c
   140046773:	add    BYTE PTR [rbx],ah
   140046775:	xor    ah,BYTE PTR [rcx-0x5dcedc00]
   14004677b:	add    BYTE PTR [rip+0x2600a432],ah        # 0x166050bb3
   140046781:	xor    al,0xa7
   140046783:	add    BYTE PTR [rsi],ah
   140046785:	ss test eax,0xab382700
   14004678b:	add    BYTE PTR [rax],ch
   14004678d:	cmp    ch,BYTE PTR [rdi-0x4dc2d800]
   140046793:	add    BYTE PTR [rip+0x3200be34],ch        # 0x1720525cd
   140046799:	cmp    DWORD PTR [rsi-0x40c4cc00],edi
   14004679f:	add    BYTE PTR [rdx],ch
   1400467a1:	mov    r15b,0x0
   1400467a4:	sub    eax,DWORD PTR [rbx-0x46]
   1400467a7:	add    BYTE PTR [rbx],ch
   1400467a9:	rex.R mov edx,0xbe492c00
   1400467af:	add    BYTE PTR [rsi+0x53],dl
   1400467b2:	xchg   ebp,eax
   1400467b3:	add    BYTE PTR [rax+0x43],al
   1400467b6:	mov    ecx,0xba464300
   1400467bb:	add    BYTE PTR [rsi+0x55],dl
   1400467be:	mov    dl,0x0
   1400467c0:	pop    rcx
   1400467c1:	pop    rbp
   1400467c2:	mov    edx,0xb7626100
   1400467c7:	add    BYTE PTR [rcx+0x66],ch
   1400467ca:	mov    dl,0x0
   1400467cc:	imul   ebp,DWORD PTR [rcx-0x4c],0x0
   1400467d0:	je     0x140046842
   1400467d2:	mov    dl,0x0
   1400467d4:	jbe    0x140046849
   1400467d6:	mov    ch,0x0
   1400467d8:	sub    eax,0x2d00c134
   1400467dd:	(bad)
   1400467e1:	cmp    ecx,ecx
   1400467e3:	add    BYTE PTR [rdi],ch
   1400467e5:	cmp    eax,0x3e3700ce
   1400467ea:	rol    BYTE PTR [rax],0x2f
   1400467ed:	(bad)  
   1400467ee:	rol    BYTE PTR [rax],1
   1400467f0:	xor    BYTE PTR [rdi],bh
   1400467f2:	rol    BYTE PTR [rax],1
   1400467f4:	sub    eax,0x2d00c048
   1400467f9:	rex.WX (bad) 
   1400467fb:	add    BYTE PTR [rdi],ch
   1400467fd:	rex.WRB mov QWORD PTR [r8],0xc84e2f
   140046804:	xor    BYTE PTR [rax-0x32],al
   140046807:	add    BYTE PTR [rdi],ch
   140046809:	push   rax
   14004680a:	mov    DWORD PTR [rax],0xc9502f
   140046810:	xor    DWORD PTR [rdx-0x33],edx
   140046813:	add    BYTE PTR [rcx],dh
   140046815:	push   rbp
   140046816:	(bad)  
   140046817:	add    BYTE PTR [rcx],dh
   140046819:	rex.R (bad) 
   14004681b:	add    BYTE PTR [rdx],dh
   14004681d:	rex.WX fld DWORD PTR [rax]
   140046820:	xor    ecx,DWORD PTR [rbp+rbx*8+0x0]
   140046824:	xor    edx,DWORD PTR [rdi-0x2c]
   140046827:	add    BYTE PTR [rdx],dh
   140046829:	pop    rdx
   14004682a:	rol    DWORD PTR [rax],cl
   14004682c:	xor    ebx,DWORD PTR [rcx-0x2b]
   14004682f:	add    BYTE PTR [rbx+rbx*2],dh
   140046832:	xlat   BYTE PTR ds:[rbx]
   140046833:	add    BYTE PTR [rbx],dh
   140046835:	pop    rbp
   140046836:	xlat   BYTE PTR ds:[rbx]
   140046837:	add    BYTE PTR [rbx],dh
   140046839:	push   rcx
   14004683a:	fiadd  DWORD PTR [rax]
   14004683c:	xor    al,0x53
   14004683e:	fiadd  WORD PTR [rax]
   140046840:	xor    eax,0x3100d95c
   140046845:	jno    0x140046815
   140046847:	add    BYTE PTR [rax+riz*2],dh
   14004684a:	fild   DWORD PTR [rax]
   14004684c:	xor    eax,0x3600de62
   140046851:	data16 fiadd WORD PTR [rax]
   140046854:	xor    al,0x53
   140046856:	loopne 0x140046858
   140046858:	xor    al,0x54
   14004685a:	loope  0x14004685c
   14004685c:	ss pop rsp
   14004685e:	jrcxz  0x140046860
   140046860:	ss pop rbx
   140046862:	in     al,0x0
   140046864:	ss movsxd esp,ebx
   140046867:	add    BYTE PTR [rsi],dh
   140046869:	fs loope 0x14004686c
   14004686c:	(bad)  
   14004686d:	gs in  eax,0x0
   140046870:	(bad)  
   140046871:	imul   esp,ebp,0xe76d3700
   140046877:	add    BYTE PTR [rax],bh
   140046879:	outs   dx,DWORD PTR ds:[rsi]
   14004687a:	out    0x0,al
   14004687c:	cmp    BYTE PTR [rax+rbp*8+0x0],ch
   140046880:	cmp    BYTE PTR [rdx-0x17],dh
   140046883:	add    BYTE PTR [rdx],bh
   140046885:	jne    0x140046871
   140046887:	add    BYTE PTR [rcx],bh
   140046889:	jns    0x140046875
   14004688b:	add    BYTE PTR [rdi],bh
   14004688d:	jns    0x140046878
   14004688f:	add    BYTE PTR [rcx],bh
   140046891:	jle    0x14004687e
   140046893:	add    BYTE PTR [rsi+rdi*2],bh
   140046896:	jmp    0x140046898
   140046898:	cmp    edi,DWORD PTR [rdi-0x14]
   14004689b:	add    BYTE PTR [rdi+rdi*2],bh
   14004689e:	in     al,dx
   14004689f:	add    BYTE PTR [rdx],bh
   1400468a1:	sub    ebx,0xec813b00
   1400468a7:	add    BYTE PTR [rcx+rax*4],bh
   1400468aa:	in     al,dx
   1400468ab:	add    BYTE PTR [rdx],bh
   1400468ad:	test   esp,ebp
   1400468af:	add    BYTE PTR [rdx],bh
   1400468b1:	mov    ebp,ebp
   1400468b3:	add    BYTE PTR [rdx+rcx*4],bh
   1400468b6:	in     eax,dx
   1400468b7:	add    BYTE PTR [rbx],bh
   1400468b9:	(bad)  
   1400468ba:	in     eax,dx
   1400468bb:	add    BYTE PTR [rbx],bh
   1400468bd:	xchg   edx,eax
   1400468be:	out    dx,al
   1400468bf:	add    BYTE PTR [rax+rdx*4],bh
   1400468c2:	out    dx,al
   1400468c3:	add    BYTE PTR [rbx],bh
   1400468c5:	xchg   esi,eax
   1400468c6:	out    dx,eax
   1400468c7:	add    BYTE PTR [rcx],bh
   1400468c9:	cwde   
   1400468ca:	call   0x12f9fa3cf
   1400468cf:	add    BYTE PTR [rdx],bh
   1400468d1:	cwde   
   1400468d2:	lock add BYTE PTR [rdx],bh
   1400468d5:	popf   
   1400468d6:	lock add BYTE PTR [rcx],bh
   1400468d9:	stos   BYTE PTR es:[rdi],al
   1400468da:	loope  0x1400468dc
   1400468dc:	cmp    al,0xbe
   1400468de:	(bad)  
   1400468df:	add    BYTE PTR [rbx],bh
   1400468e1:	mov    edx,0xba3c00ef
   1400468e6:	in     al,dx
   1400468e7:	add    BYTE PTR [rdx],bh
   1400468e9:	movabs al,ds:0xa43c00f2a63b00f0
   1400468f2:	lock add BYTE PTR [rdx+rbp*4],bh
   1400468f6:	icebp  
   1400468f7:	add    BYTE PTR [rcx],bh
   1400468f9:	lods   al,BYTE PTR ds:[rsi]
   1400468fa:	lock add BYTE PTR [rip+0x3900f1ac],bh        # 0x179055aad
   140046901:	mov    al,0xf2
   140046903:	add    BYTE PTR [rbx],bh
   140046905:	mov    dh,0xf3
   140046907:	add    BYTE PTR [rcx],bh
   140046909:	mov    ebx,0xb93b00f3
   14004690e:	hlt    
   14004690f:	add    BYTE PTR [rbx-0x75],bl
   140046912:	(bad)  
   140046913:	add    BYTE PTR [rax+rcx*4-0x28],dl
   140046917:	add    BYTE PTR [rsi+rcx*4-0x28],dl
   14004691b:	add    BYTE PTR [rcx-0x7f],cl
   14004691e:	loop   0x140046920
   140046920:	rex.B (bad) 
   140046922:	jmp    0x12abbb227
   140046927:	add    BYTE PTR [rbp-0x4b],dl
   14004692a:	loopne 0x14004692c
   14004692c:	cmp    al,0xc2
   14004692e:	in     eax,dx
   14004692f:	add    BYTE PTR [rip+0x3d00ecc4],bh        # 0x17d0555f9
   140046935:	retf   
   140046936:	in     al,dx
   140046937:	add    BYTE PTR [rbx],bh
   140046939:	shr    edi,1
   14004693b:	add    BYTE PTR [rdx+rdx*8],bh
   14004693e:	in     eax,dx
   14004693f:	add    BYTE PTR [rax],bh
   140046941:	enter  0xf1,0x8e
   140046945:	mov    DWORD PTR [rdx-0x4b716a00],edi
   14004694b:	add    BYTE PTR [rsi-0x67ff4562],cl
   140046951:	xchg   edx,eax
   140046952:	mov    esp,0xbf949a00
   140046957:	add    ch,bl
   140046959:	mov    esi,0xa99a0093
   14004695e:	ret    
   14004695f:	add    BYTE PTR [rdi-0x5fff3845],dl
   140046965:	mov    bl,0xc2
	...
   140046993:	add    bh,bh
   140046995:	(bad)  
   140046996:	inc    DWORD PTR [rax]
	...
   1400469e4:	add    dl,dh
   1400469e6:	fucom  st(4)
	...
   140046a04:	add    bl,ah
   140046a06:	fstp   st(3)
   140046a08:	fpatan 
	...
   140046a22:	add    BYTE PTR [rax],al
   140046a24:	add    cl,bl
   140046a26:	(bad)  
   140046a28:	int    0xc9
   140046a2a:	icebp  
	...
   140046a43:	add    dh,bl
   140046a45:	enter  0xc8c8,0xc8
   140046a49:	ret    
   140046a4a:	mov    edi,0x0
	...
   140046a63:	add    BYTE PTR [rdi-0x45454752],bl
   140046a69:	mov    edx,0xbabf
	...
   140046a82:	add    BYTE PTR [rsi-0x5b637d87],al
   140046a88:	mov    ah,0xb8
   140046a8a:	mov    ecx,0xe1bf
	...
   140046a97:	out    dx,al
	...
   140046aa0:	add    BYTE PTR [rax],al
   140046aa2:	add    BYTE PTR [rbp+0x71],ch
   140046aa5:	jne    0x140046b23
   140046aa7:	test   BYTE PTR [rdx-0x4046495c],bl
   140046aad:	fild   WORD PTR [rax]
   140046aaf:	add    BYTE PTR [rax],al
   140046ab1:	add    BYTE PTR [rax],al
   140046ab3:	add    BYTE PTR [rax],al
   140046ab5:	add    BYTE PTR [rax+0x0],al
   140046abb:	add    BYTE PTR [rax],al
   140046abd:	add    BYTE PTR [rax],al
   140046abf:	add    BYTE PTR [rax],al
   140046ac1:	add    BYTE PTR [rbx],ah
   140046ac3:	sub    BYTE PTR [rbx+0x71],ch
   140046ac6:	je     0x140046b41
   140046ac8:	test   BYTE PTR [rdx-0x3c454956],bl
   140046ace:	loopne 0x140046ad0
   140046ad0:	add    BYTE PTR [rax],al
   140046ad2:	add    BYTE PTR [rax],al
   140046ad4:	in     al,dx
   140046ad5:	nop
   140046ad6:	lea    eax,[rax]
   140046ad8:	add    BYTE PTR [rax],al
   140046ada:	add    BYTE PTR [rax],al
   140046adc:	add    BYTE PTR [rax+0x55],ch
   140046adf:	push   rsp
   140046ae0:	rex.WRB
   140046ae1:	ds (bad) 
   140046ae3:	and    DWORD PTR [rdi],esp
   140046ae5:	imul   esi,DWORD PTR [rcx+0x74],0x7a
   140046ae9:	test   BYTE PTR [rdi-0x373c454c],bl
   140046aef:	loop   0x140046ade
   140046af1:	add    BYTE PTR [rax],al
   140046af3:	mov    dl,BYTE PTR [rax+0x90]
   140046af9:	add    BYTE PTR [rax],al
   140046afb:	add    BYTE PTR [rdi+0x58],bl
   140046afe:	pop    rax
   140046aff:	push   rdi
   140046b00:	push   rbx
   140046b01:	rex.WRX cmp al,0x1c
   140046b04:	and    DWORD PTR [rdi],esp
   140046b06:	imul   esi,DWORD PTR [rcx+0x75],0x7d
   140046b0a:	pushf  
   140046b0b:	stos   BYTE PTR es:[rdi],al
   140046b0c:	mov    edx,0xc3c8c8bf
   140046b11:	mov    edx,0x879095b0
   140046b16:	add    BYTE PTR [rax],al
   140046b18:	add    BYTE PTR [rax],al
   140046b1a:	add    BYTE PTR [rbp+0x5c],bl
   140046b1d:	pop    rsp
   140046b1e:	pop    rax
   140046b1f:	pop    rax
   140046b20:	push   rbx
   140046b21:	rex.WRXB
   140046b22:	rex.W cmp BYTE PTR [rax],dl
   140046b25:	and    DWORD PTR [rdx],ebp
   140046b27:	ins    DWORD PTR es:[rdi],dx
   140046b28:	jae    0x140046ba2
   140046b2a:	(bad)  
   140046b2b:	movabs ds:0x95a2b9c3c8c3bfb6,eax
   140046b34:	nop
   140046b35:	jmp    0x140046b37
   140046b37:	add    BYTE PTR [rax],al
   140046b39:	addr32 (bad) 
   140046b3b:	pop    rbp
   140046b3c:	pop    rsi
   140046b3d:	pop    rsp
   140046b3e:	pop    rsp
   140046b3f:	push   rbp
   140046b40:	push   rdi
   140046b41:	rex.WRXB push r8
   140046b43:	rex.RXB or DWORD PTR [r9],r10d
   140046b46:	and    eax,0x7e756e6b
   140046b4b:	(bad)  
   140046b4c:	mov    ecx,0xbfc8c8c3
   140046b51:	mov    ah,0xa0
   140046b53:	nop
   140046b54:	nop
   140046b55:	add    BYTE PTR [rax],al
   140046b57:	add    BYTE PTR [rax],al
   140046b59:	movsxd esp,DWORD PTR [rdx+0x60]
   140046b5c:	pop    rbp
   140046b5d:	pop    rsi
   140046b5e:	pop    rsp
   140046b5f:	pop    rax
   140046b60:	push   rbp
   140046b61:	push   rbx
   140046b62:	push   rax
   140046b63:	rex.WX
   140046b64:	rex.X add DWORD PTR [rip+0x7a736d27],edx        # 0x1ba77d892
   140046b6b:	(bad)  
   140046b6c:	mov    ah,0xc3
   140046b6e:	enter  0xbfc8,0xb2
   140046b72:	xchg   ebp,eax
   140046b73:	nop
   140046b74:	mov    DWORD PTR [rax],eax
   140046b76:	add    BYTE PTR [rax],al
   140046b78:	add    BYTE PTR [rax],al
   140046b7a:	add    BYTE PTR [rdx+0x60],ch
   140046b7d:	pop    rbp
   140046b7e:	pop    rsp
   140046b7f:	pop    rax
   140046b80:	push   rbp
   140046b81:	rex.WRXB push r8
   140046b83:	rex.WB xor cl,BYTE PTR [r10]
   140046b86:	adc    BYTE PTR [rcx],ah
   140046b88:	imul   ebp,DWORD PTR [rsi+0x78],0xffffff98
   140046b8c:	mov    ah,0xc3
   140046b8e:	retf   0xbac8
   140046b91:	mov    al,0x95
   140046b93:	nop
	...
   140046b9c:	add    al,dh
   140046b9e:	(bad)  
   140046b9f:	pop    rsp
   140046ba0:	push   rbp
   140046ba1:	push   rbx
   140046ba2:	rex.RB (bad) 
   140046ba4:	cldemote BYTE PTR [rdx]
   140046ba7:	adc    esp,DWORD PTR [rdi]
   140046ba9:	outs   dx,BYTE PTR ds:[rsi]
   140046baa:	jne    0x140046b30
   140046bac:	mov    ah,0xc3
   140046bae:	retf   0xbac8
   140046bb1:	movabs ds:0x9090,al
   140046bba:	add    BYTE PTR [rax],al
   140046bbc:	add    BYTE PTR [rax],al
   140046bbe:	add    BYTE PTR [rax],al
   140046bc0:	addr32 rex.R (bad) 
   140046bc3:	sbb    DWORD PTR [rax],ebx
   140046bc5:	sbb    BYTE PTR [rdx],al
   140046bc7:	sbb    al,0x21
   140046bc9:	imul   esi,DWORD PTR [rbx+0x7e],0xffffffae
   140046bcd:	ret    
   140046bce:	iret   
   140046bcf:	enter  0xa0b9,0x90
   140046bd3:	mov    WORD PTR [rax],es
	...
   140046be1:	add    BYTE PTR [rax+rsi*1],al
   140046be4:	(bad)  
   140046be5:	(bad)  
   140046be6:	(bad)  
   140046be7:	or     DWORD PTR [rbx],edx
   140046be9:	sub    ch,BYTE PTR [rsi+0x7a]
   140046bec:	stos   BYTE PTR es:[rdi],al
   140046bed:	enter  0xc8cf,0xb4
   140046bf1:	xchg   ebp,eax
   140046bf2:	nop
	...
   140046bff:	add    BYTE PTR [rax],al
   140046c01:	add    BYTE PTR [rcx+0x39],dl
   140046c04:	(bad)  
   140046c05:	or     BYTE PTR [rax],dh
   140046c07:	(bad)  
   140046c08:	sbb    al,0x25
   140046c0a:	ins    DWORD PTR es:[rdi],dx
   140046c0b:	jns    0x140046bb7
   140046c0d:	leave  
   140046c0e:	(bad)  
   140046c0f:	enter  0x95b2,0x80
	...
   140046c23:	fs rex.WXB xor al,0x6
   140046c27:	or     eax,0x756b150a
   140046c2c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046c2d:	leave  
   140046c2e:	fcmovne st,st(0)
   140046c30:	test   eax,0x8e90
	...
   140046c45:	rex.RX xor eax,0x271d3a37
   140046c4b:	jae    0x140046bec
   140046c4d:	(bad)  
   140046c4e:	fcmovnb st,st(5)
   140046c50:	movabs al,ds:0x90
	...
   140046c65:	add    BYTE PTR [rax],al
   140046c67:	xor    al,0xa
   140046c6a:	and    DWORD PTR [rcx-0x64],esi
   140046c6d:	fsubr  st,st(2)
   140046c6f:	mov    esi,0x8195
	...
   140046c88:	rex.B
   140046c89:	rex adc DWORD PTR [rbx-0x7c],ebp
   140046c8d:	fucomp st(0)
   140046c8f:	mov    edx,0x8e95
	...
   140046ca8:	add    BYTE PTR [rsi],dh
   140046caa:	add    eax,0xe8e57e25
   140046caf:	mov    ah,0x90
	...
   140046cc9:	imul   edi,DWORD PTR [rdx],0xe7e57916
   140046ccf:	test   eax,0x87
	...
   140046ce8:	add    BYTE PTR [rax],al
   140046cea:	rex.WR sub rax,0xffffffff93d1d171
   140046cf0:	out    dx,al
	...
   140046d09:	add    BYTE PTR [rax],al
   140046d0b:	cmp    eax,0x94c9d029
	...
   140046d28:	add    BYTE PTR [rax],al
   140046d2a:	add    BYTE PTR [rdi+0x20],ah
   140046d2d:	stos   DWORD PTR es:[rdi],eax
   140046d2e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   140046d4b:	add    BYTE PTR [rbx+0x75],al
   140046d4e:	mov    eax,DWORD PTR [rax]
	...
   140046d98:	(bad)  
   140046d99:	(bad)  
   140046d9a:	(bad)  
   140046d9b:	(bad)  
   140046d9c:	(bad)  
   140046d9d:	(bad)  
   140046d9e:	(bad)  
   140046d9f:	(bad)  
   140046da0:	(bad)  
   140046da1:	clc    
   140046da2:	(bad)  
   140046da3:	(bad)  
   140046da4:	(bad)  
   140046da5:	clc    
   140046da6:	(bad)  
   140046da7:	(bad)  
   140046da8:	(bad)  
   140046da9:	clc    
   140046daa:	(bad)  
   140046dab:	(bad)  
   140046dac:	push   rax
   140046dae:	(bad)  
   140046daf:	(bad)  
   140046db0:	push   rax
   140046db2:	ud0    edi,edi
   140046db5:	loopne 0x140046dbe
   140046db7:	(bad)  
   140046db8:	jmp    rax
   140046dba:	add    edi,ebp
   140046dbc:	inc    eax
   140046dbe:	add    ecx,esi
   140046dc0:	clc    
   140046dc1:	add    BYTE PTR [rax],al
   140046dc3:	movsxd esi,eax
   140046dc5:	add    BYTE PTR [rax],al
   140046dc7:	add    esp,eax
   140046dc9:	add    BYTE PTR [rax],al
   140046dcb:	add    eax,DWORD PTR [rax-0x7ff90000]
   140046dd1:	add    BYTE PTR [rax],al
   140046dd3:	(bad)  
   140046dd4:	loopne 0x140046dd6
   140046dd6:	add    BYTE PTR [rdi],cl
   140046dd8:	clc    
   140046dd9:	add    BYTE PTR [rax],al
   140046ddb:	ud0    eax,DWORD PTR [rax]
   140046dde:	add    BYTE PTR [rdi],cl
   140046de0:	inc    eax
   140046de2:	add    BYTE PTR [rdi],bl
   140046de4:	inc    eax
   140046de6:	add    BYTE PTR [rdi],bl
   140046de8:	jmp    rax
   140046dea:	add    BYTE PTR [rdi],bl
   140046dec:	(bad)  
   140046ded:	clc    
   140046dee:	add    BYTE PTR [rdi],bh
   140046df0:	(bad)  
   140046df1:	inc    BYTE PTR [rax]
   140046df3:	(bad)  
   140046df4:	(bad)  
   140046df5:	inc    DWORD PTR [rax]
   140046df7:	(bad)  
   140046df8:	(bad)  
   140046df9:	inc    DWORD PTR [rax-0x7f000081]
   140046dff:	jg     0x140046e00
   140046e01:	inc    eax
   140046e03:	jg     0x140046e04
   140046e05:	jmp    rax
   140046e07:	(bad)  
   140046e08:	(bad)  
   140046e09:	jmp    rcx
   140046e0b:	(bad)  
   140046e0c:	(bad)  
   140046e0d:	push   rcx
   140046e0f:	(bad)  
   140046e10:	(bad)  
   140046e11:	(bad)  
   140046e12:	(bad)  
   140046e13:	(bad)  
   140046e14:	(bad)  
   140046e15:	(bad)  
   140046e16:	(bad)  
   140046e17:	jmp    FWORD PTR [rax]
   140046e19:	add    BYTE PTR [rax],al
   140046e1b:	add    BYTE PTR [rax],dl
   140046e1d:	add    BYTE PTR [rax],al
   140046e1f:	add    BYTE PTR [rax],ah
   140046e21:	add    BYTE PTR [rax],al
   140046e23:	add    BYTE PTR [rcx],al
   140046e25:	add    BYTE PTR [rax],cl
   140046e27:	add    BYTE PTR [rax],al
   140046e29:	add    BYTE PTR [rax],al
   140046e2b:	add    BYTE PTR [rax],al
   140046e2d:	add    DWORD PTR [rax],eax
	...
   140046e37:	add    BYTE PTR [rax],al
   140046e39:	add    DWORD PTR [rax],eax
   140046e3b:	add    BYTE PTR [rax],al
   140046e3d:	add    DWORD PTR [rax],eax
   140046e3f:	add    BYTE PTR [rax],al
   140046e41:	add    BYTE PTR [rax],al
   140046e43:	add    BYTE PTR [rsi+0x37],dl
   140046e46:	cmp    al,0x0
   140046e48:	push   rsi
   140046e49:	cmp    BYTE PTR [rbx],bh
   140046e4b:	add    BYTE PTR [rsi+0x45],ah
   140046e4e:	add    BYTE PTR ds:[rdi],dl
   140046e51:	adc    al,0x5f
   140046e53:	add    BYTE PTR [rdx],bl
   140046e55:	(bad)  
   140046e56:	pop    rsi
   140046e57:	add    BYTE PTR [rdx*1+0x1e2c0045],ah
   140046e5e:	rex.WRB add BYTE PTR [rip+0x19004128],r15b        # 0x15904af8d
   140046e65:	sbb    DWORD PTR [rsi+0x0],ebp
   140046e68:	adc    eax,0x16007317
   140046e6d:	sbb    DWORD PTR [rcx+0x0],edi
   140046e70:	cmp    edi,DWORD PTR ds:[rbp+0x0]
   140046e74:	rex.XB sub eax,0x354e0046
   140046e7a:	add    BYTE PTR [rdi+0x33],al
   140046e7e:	rex.WRX add BYTE PTR [rax+0x3b],r11b
   140046e82:	rex.RX add BYTE PTR [rsi-0x65ffd7a6],r8b
   140046e89:	push   0x5b800027
   140046e8e:	add    BYTE PTR [rbp-0x59ffa385],bl
   140046e95:	jbe    0x140046edd
   140046e97:	add    BYTE PTR [rdi-0x49ffac81],ch
   140046e9d:	add    BYTE PTR [rcx+0x0],0xb2
   140046ea1:	test   DWORD PTR [rdx+0x0],ecx
   140046ea4:	(bad)  
   140046ea5:	mov    cs,WORD PTR [rbx+0x0]
   140046ea8:	ror    DWORD PTR [rbp-0x733bffb1],0x4d
   140046eaf:	add    ch,cl
   140046eb1:	xchg   ecx,eax
   140046eb2:	rex.RXB add r10b,r10b
   140046eb5:	xchg   ebp,eax
   140046eb6:	rex.XB add r13b,dl
   140046eb9:	cdq    
   140046eba:	add    dil,r10b
   140046ebd:	pushf  
   140046ebe:	rex.RX add al,r11b
   140046ec1:	lahf   
   140046ec2:	rex.WXB add r9b,dl
   140046ec5:	movabs al,ds:0xaed8007aa9ce005b
   140046ece:	jb     0x140046ed0
   140046ed0:	sbb    ah,BYTE PTR [rax]
   140046ed2:	xchg   DWORD PTR [rax],eax
   140046ed4:	sbb    ah,BYTE PTR [rax]
   140046ed6:	mov    BYTE PTR [rax],al
   140046ed8:	sbb    al,0x22
   140046eda:	lea    eax,[rax]
   140046edc:	and    BYTE PTR [rcx],ch
   140046ede:	xchg   edi,eax
   140046edf:	add    BYTE PTR [rax],ah
   140046ee1:	sub    bl,BYTE PTR [rax-0x59cbdb00]
   140046ee7:	add    BYTE PTR [rsi],ah
   140046ee9:	ss test eax,0xab382700
   140046eef:	add    BYTE PTR [rdx],ch
   140046ef1:	(bad)  
   140046ef2:	mov    ch,0x0
   140046ef4:	cmp    al,0x42
   140046ef6:	mov    esp,0xb36a2b00
   140046efb:	add    BYTE PTR [rdi+0x4b],al
   140046efe:	(bad)  
   140046eff:	add    BYTE PTR [rbp+riz*2-0x41],bl
   140046f03:	add    BYTE PTR [rbx+0x72],dh
   140046f06:	mov    esp,0xc7382e00
   140046f0b:	add    BYTE PTR [rdx],dh
   140046f0d:	cmp    eax,eax
   140046f0f:	add    BYTE PTR [rsi],ch
   140046f11:	rex.WX ret 
   140046f13:	add    BYTE PTR [rsi],ch
   140046f15:	rex.WR ret 0x2f00
   140046f19:	rex.WRXB enter 0x3000,0x42
   140046f1e:	iret   
   140046f1f:	add    BYTE PTR [rax],dh
   140046f21:	rex rol BYTE PTR [rax],1
   140046f24:	xor    ecx,DWORD PTR [rsi-0x28]
   140046f27:	add    BYTE PTR [rdx],dh
   140046f29:	push   rdi
   140046f2a:	rol    DWORD PTR [rax],cl
   140046f2c:	xor    DWORD PTR [rsi-0x35],edi
   140046f2f:	add    BYTE PTR [rip+0x3700da62],dh        # 0x177054997
   140046f35:	jae    0x140046f0f
   140046f37:	add    BYTE PTR [rip+0x3700e05b],dh        # 0x177054f98
   140046f3d:	push   0x683700e3
   140046f42:	out    0x0,al
   140046f44:	cmp    BYTE PTR [rbp-0x1a],ch
   140046f47:	add    BYTE PTR [rdi],dh
   140046f49:	jne    0x140046f2e
   140046f4b:	add    BYTE PTR [rax],bh
   140046f4d:	je     0x140046f35
   140046f4f:	add    BYTE PTR [rsi],dh
   140046f51:	jp     0x140046f33
   140046f53:	add    BYTE PTR [rcx],bh
   140046f55:	jne    0x140046f40
   140046f57:	add    BYTE PTR [rdx],bh
   140046f59:	jns    0x140046f45
   140046f5b:	add    BYTE PTR [rbx+0x49],al
   140046f5e:	rol    DWORD PTR [rax],0x41
   140046f61:	jle    0x140046f48
   140046f63:	add    BYTE PTR [rax+rax*4],dh
   140046f66:	fld    DWORD PTR [rax]
   140046f68:	cmp    al,0x8a
   140046f6a:	in     al,dx
   140046f6b:	add    BYTE PTR [rbx],bh
   140046f6d:	(bad)  
   140046f6e:	in     eax,dx
   140046f6f:	add    BYTE PTR [rax],bh
   140046f71:	xchg   esp,eax
   140046f72:	in     eax,0x0
   140046f74:	cmp    edx,DWORD PTR [rcx-0x68c4ff12]
   140046f7a:	out    dx,eax
   140046f7b:	add    BYTE PTR [rbx],bh
   140046f7d:	fwait
   140046f7e:	out    dx,eax
   140046f7f:	add    BYTE PTR [rcx],bh
   140046f81:	lahf   
   140046f82:	lock add BYTE PTR [rcx],bh
   140046f85:	movabs ds:0x9d6200c68f7200ed,eax
   140046f8e:	(bad)  
   140046f8f:	add    BYTE PTR [rdx-0x49],al
   140046f92:	out    dx,al
   140046f93:	add    BYTE PTR [rax-0x23ff4567],ah
   140046f99:	mov    ebx,0x8385008c
   140046f9e:	rol    BYTE PTR [rax],0x8e
   140046fa1:	mov    eax,ebx
   140046fa3:	add    BYTE PTR [rbp-0x5cff3971],cl
   140046fa9:	scas   eax,DWORD PTR es:[rdi]
   140046faa:	enter  0x0,0x0
	...
   14004723a:	add    BYTE PTR [rax],al
   14004723c:	(bad)  
   14004723d:	(bad)  
   14004723e:	inc    DWORD PTR [rax]
	...
   140047254:	add    BYTE PTR [rax],al
   140047256:	add    BYTE PTR [rax+rax*1+0x0],dl
	...
   140047266:	push   rbx
   140047267:	rex.WRXB
   140047268:	rex.WXB pop r10
	...
   140047276:	xor    eax,0x45413c
	...
   140047283:	add    BYTE PTR [rax],al
   140047285:	or     al,0x26
   140047287:	sub    dh,BYTE PTR [rsi]
   140047289:	(bad)  
   14004728a:	rex.W add BYTE PTR [rax],al
   14004728d:	add    BYTE PTR [rbp+0x0],dl
   140047290:	add    BYTE PTR [rax],al
   140047292:	and    bl,BYTE PTR [rdi+rdx*1]
   140047295:	or     eax,0x3a2b260a
   14004729a:	rex.RX
   14004729b:	rex.WXB push r10
   14004729d:	xor    BYTE PTR [rbx],dh
   14004729f:	add    BYTE PTR [rax],al
   1400472a1:	and    DWORD PTR [rdi],ebx
   1400472a3:	sbb    eax,0xb07151b
   1400472a8:	(bad)  
   1400472a9:	xor    eax,0x38454b45
   1400472ae:	xor    DWORD PTR [rax],eax
   1400472b0:	add    BYTE PTR [rbx],ah
   1400472b2:	and    BYTE PTR [rdi],bl
   1400472b4:	sbb    edx,DWORD PTR [rsi]
   1400472b6:	add    eax,DWORD PTR [rsi+riz*1]
   1400472b9:	sub    al,0x43
   1400472bb:	rex.WXB
   1400472bc:	xor    al,BYTE PTR [rax]
   1400472bf:	add    BYTE PTR [rax],al
   1400472c1:	add    BYTE PTR [rax],al
   1400472c3:	push   rsi
   1400472c4:	sbb    edx,DWORD PTR [rax]
   1400472c6:	(bad)  
   1400472c7:	or     BYTE PTR [rdx],cl
   1400472c9:	sub    DWORD PTR [rbx+0x4b],eax
   1400472cc:	ds sub eax,0x0
   1400472d2:	add    BYTE PTR [rax],al
   1400472d4:	add    BYTE PTR [rbx],dl
   1400472d6:	add    al,BYTE PTR [rcx]
   1400472d8:	add    eax,0x394f4227
   1400472dd:	push   rdi
	...
   1400472e6:	sbb    BYTE PTR [rcx],dl
   1400472e8:	(bad)  
   1400472e9:	and    al,0x44
   1400472eb:	push   rax
   1400472ec:	(bad)  
	...
   1400472f5:	add    BYTE PTR [rax],al
   1400472f7:	add    BYTE PTR [rdx],dl
   1400472f9:	or     DWORD PTR [rcx+0x51],ecx
   1400472fc:	rex.RXB add BYTE PTR [r8],r8b
	...
   140047307:	add    BYTE PTR [rax],al
   140047309:	(bad)  
   14004730b:	rex.WR pop rax
	...
   140047319:	adc    al,0x2e
   14004731b:	cmp    eax,0x0
	...
   140047328:	add    BYTE PTR [rax],al
   14004732a:	(bad)  
   14004732b:	pop    rax
	...
   140047340:	(bad)  
   140047341:	inc    DWORD PTR [rax]
   140047343:	add    dh,bh
   140047345:	inc    DWORD PTR [rax]
   140047347:	add    ah,bh
   140047349:	(bad)  
   14004734a:	add    BYTE PTR [rax],al
   14004734c:	cld    
   14004734d:	(bad)  
   14004734e:	add    BYTE PTR [rax],al
   140047350:	clc    
   140047351:	sbb    eax,0x1c00000
   140047356:	add    BYTE PTR [rax],al
   140047358:	add    BYTE PTR [rcx],0x0
   14004735b:	add    BYTE PTR [rax-0x1ffffffd],al
   140047361:	add    eax,DWORD PTR [rax]
   140047363:	add    al,bh
   140047365:	add    eax,DWORD PTR [rax]
   140047367:	add    ah,bh
   140047369:	(bad)  
   14004736a:	add    BYTE PTR [rax],al
   14004736c:	inc    DWORD PTR [rdi]
   14004736e:	add    BYTE PTR [rax],al
   140047370:	inc    DWORD PTR [rdi-0x70010000]
   140047376:	add    BYTE PTR [rax],al
   140047378:	dec    edi
   14004737a:	add    BYTE PTR [rax],al
   14004737c:	(bad)  
   14004737d:	inc    DWORD PTR [rax]
   14004737f:	add    BYTE PTR [rcx+0xd474e50],cl
   140047385:	or     bl,BYTE PTR [rdx]
   140047387:	or     al,BYTE PTR [rax]
   140047389:	add    BYTE PTR [rax],al
   14004738b:	or     eax,0x52444849
   140047390:	add    BYTE PTR [rax],al
   140047392:	add    DWORD PTR [rax],eax
   140047394:	add    BYTE PTR [rax],al
   140047396:	add    DWORD PTR [rax],eax
   140047398:	or     BYTE PTR [rsi],al
   14004739a:	add    BYTE PTR [rax],al
   14004739c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   1400473a0:	data16 add BYTE PTR [rax],al
   1400473a3:	and    BYTE PTR [rax],al
   1400473a5:	rex.WB
   1400473a6:	rex.R
   1400473a7:	push   r12
   1400473a9:	js     0x140047347
   1400473ab:	in     al,dx
   1400473ac:	mov    ebp,0xd765b069
   1400473b1:	jne    0x140047392
   1400473b3:	neg    DWORD PTR [rbx+0x7b]
   1400473b6:	lahf   
   1400473b7:	jae    0x1400473a7
   1400473b9:	lock out 0xa1,al
   1400473bc:	(bad)  
   1400473bd:	movabs al,ds:0x24ce06201001031b
   1400473c6:	sub    dh,cl
   1400473c8:	and    al,0x38
   1400473ca:	push   rbx
   1400473cb:	and    al,BYTE PTR [rbp-0x6f]
   1400473ce:	adc    ch,BYTE PTR [rcx-0x75b4d25e]
   1400473d4:	and    al,0x47
   1400473d6:	mov    dl,0x2d
   1400473d8:	cmp    esi,DWORD PTR [rdx+0x6cb24b2d]
   1400473de:	retf   
   1400473df:	rex.WX cmp al,0xa5
   1400473e2:	(bad)  
   1400473e3:	pop    rbx
   1400473e4:	mov    dl,BYTE PTR [rbx+rbx*8]
   1400473e7:	sub    ecx,ebx
   1400473e9:	sub    al,bh
   1400473eb:	pop    rdi
   1400473ec:	pushf  
   1400473ed:	mov    ah,BYTE PTR [rbp-0x69]
   1400473f0:	push   rbx
   1400473f1:	scas   al,BYTE PTR es:[rdi]
   1400473f2:	jl     0x14004737c
   1400473f4:	stos   DWORD PTR es:[rdi],eax
   1400473f5:	xchg   edx,eax
   1400473f6:	stos   BYTE PTR es:[rdi],al
   1400473f7:	cmp    BYTE PTR [rcx-0x368e3aac],ch
   1400473fd:	mov    gs,WORD PTR [rip+0xffffffffd822e595]        # 0x118275998
   140047403:	call   0xfc41774e
   140047408:	jle    0x140047447
   14004740a:	mov    edi,0x7bddef7e
   14004740f:	iret   
   140047410:	fldcw  WORD PTR [rbx]
   140047412:	(bad)  
   140047413:	neg    dl
   140047415:	sti    
   140047416:	pushf  
   140047417:	sti    
   140047418:	rcl    BYTE PTR [rcx+rbp*1],1
   14004741b:	or     DWORD PTR [rax-0x5d],esp
   14004741e:	mov    ebx,0xbf5e02cf
   140047423:	sti    
   140047424:	out    dx,al
   140047425:	jo     0x1400473cd
   140047427:	jnp    0x1400473ff
   140047429:	hlt    
   14004742a:	pop    rdi
   14004742b:	push   QWORD PTR [rbp+0x4bd2f436]
   140047431:	(bad)  
   140047432:	mov    ebp,0x2f4bd2f4
   140047437:	mov    ebp,0x2f4bd2f4
   14004743c:	mov    ebp,0x2f4bd2f4
   140047441:	mov    ebp,0x2f4bd2f4
   140047446:	mov    ebp,0x2f4bd2f4
   14004744b:	mov    ebp,0x2f4bd2f4
   140047450:	mov    ebp,0x2f4bd2f4
   140047455:	mov    ebp,0x2f4bd2f4
   14004745a:	mov    ebp,0x2f4bd2f4
   14004745f:	mov    ebp,0x2f4bd2f4
   140047464:	mov    ebp,0x2f4bd2f4
   140047469:	ja     0x1400473fd
   14004746b:	enter  0x3eed,0x80
   14004746f:	pop    rsi
   140047470:	jp     0x140047473
   140047472:	loopne 0x140047461
   140047474:	(bad)  
   140047475:	sub    al,ah
   140047477:	sti    
   140047478:	push   rcx
   140047479:	add    BYTE PTR [rdi],al
   14004747b:	clc    
   14004747c:	in     eax,0xa7
   14004747e:	fidivr WORD PTR [rdx+0x78]
   140047481:	cmp    BYTE PTR [rax],ch
   140047483:	ds jns 0x14004747e
   140047486:	out    0xa5,al
   140047488:	(bad)  
   140047489:	mov    esp,0x7a9cae1
   14004748e:	(bad)  
   14004748f:	ja     0x140047447
   140047491:	retf   0xfdc5
   140047494:	sbb    esp,edi
   140047496:	stos   DWORD PTR es:[rdi],eax
   140047497:	jmp    0x187e3349a
   14004749c:	(bad)  
   14004749d:	in     eax,0xaf
   14004749f:	(bad)  
   1400474a0:	outs   dx,DWORD PTR ds:[rsi]
   1400474a1:	cli    
   1400474a2:	sub    eax,0x9fb1a0
   1400474a7:	sub    BYTE PTR [rdi-0x4859407],bh
   1400474ad:	rex.WRX loop 0x14004747e
   1400474b0:	adc    edi,DWORD PTR [rdi-0x45]
   1400474b3:	push   fs
   1400474b5:	xchg   edi,eax
   1400474b6:	pop    rsi
   1400474b7:	cmp    cl,dl
   1400474b9:	out    dx,eax
   1400474ba:	add    BYTE PTR [rdx],0x28
   1400474bd:	sub    DWORD PTR [rdx-0xf],0xe33ea7f1
   1400474c4:	mov    ch,0xfe
   1400474c6:	retf   0xdefa
   1400474c9:	in     eax,0xf7
   1400474cb:	sbb    al,0xba
   1400474cd:	jno    0x1400474b0
   1400474cf:	rex.WRB retf 
   1400474d1:	mov    ebx,0xcd1feed7
   1400474d6:	outs   dx,BYTE PTR ds:[rsi]
   1400474d7:	(bad)  
   1400474d8:	sbb    esi,DWORD PTR [rbx+rdx*8]
   1400474db:	int    0x31
   1400474dd:	mov    bl,0xea
   1400474df:	shl    DWORD PTR [rax-0x420198d],0x8d
   1400474e6:	sbb    esi,DWORD PTR [rbx-0x25]
   1400474e9:	cmp    dh,dh
   1400474eb:	(bad)  
   1400474ec:	cmp    dh,dh
   1400474ee:	(bad)  
   1400474ef:	loope  0x1400474cd
   1400474f1:	outs   dx,DWORD PTR ds:[rsi]
   1400474f2:	jle    0x1400474ef
   1400474f4:	iret   
   1400474f5:	jrcxz  0x140047505
   1400474f7:	xchg   esp,eax
   1400474f8:	ds add ch,al
   1400474fb:	in     eax,0xf6
   1400474fd:	rex.WX stos QWORD PTR es:[rdi],rax
   1400474ff:	cld    
   140047500:	fidivr WORD PTR [rsi-0x36]
   140047503:	rex.RXB (bad) 
   140047505:	(bad)  
   140047506:	mov    ecx,0x5616cfb7
   14004750b:	jg     0x14004758b
   14004750d:	test   esi,0x5f36e7e5
   140047513:	(bad)  
   140047514:	sub    eax,0x7fe9e379
   140047519:	(bad)  
   14004751a:	mov    cl,0xed
   14004751c:	(bad)  
   14004751d:	pop    rax
   14004751e:	fnstsw WORD PTR [rdi-0x7398a73e]
   140047524:	mov    esp,0xf38f7a50
   140047529:	(bad)  
   14004752a:	fldcw  WORD PTR [rcx+0x51]
   14004752d:	dec    dl
   14004752f:	call   QWORD PTR [rax+0x3e]
   140047532:	dec    BYTE PTR [rdi]
   140047534:	inc    BYTE PTR [rbx-0x2bf644a5]
   14004753a:	(bad)  
   14004753b:	push   0xffffffff81a3e940
   140047540:	outs   dx,DWORD PTR ds:[rsi]
   140047541:	rex.WB cli 
   140047543:	or     BYTE PTR [rax+0x5127db97],ah
   140047549:	stc    
   14004754a:	sbb    eax,0x802c3ef1
   14004754f:	(bad)  
   140047550:	test   eax,0x3fc3f9ef
   140047555:	mov    ah,0xb0
   140047557:	mov    esi,0xa676f7f9
   14004755c:	mov    bl,0xa7
   14004755e:	xchg   BYTE PTR [rdi-0x1],ah
   140047561:	movabs ds:0xdfd9f0e6bffcfc3c,eax
   14004756a:	(bad)  
   14004756b:	jne    0x140047554
   14004756d:	cmp    al,0x23
   14004756f:	popf   
   140047570:	xor    dh,dh
   140047572:	ret    0xbd8
   140047575:	rex.XB out dx,eax
   140047577:	sbb    BYTE PTR [rbx-0x6a],bh
   14004757a:	(bad)  
   14004757b:	fidivr DWORD PTR [rsp+rbp*8-0x63]
   14004757f:	int    0xe5
   140047581:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140047582:	(bad)  
   140047583:	fs neg edi
   140047586:	cld    
   140047587:	imul   edi,DWORD PTR [rdi-0x4918287],0xffffffc7
   14004758e:	fiadd  WORD PTR [rcx+0x1f]
   140047591:	or     esp,edi
   140047593:	out    dx,al
   140047594:	rcr    BYTE PTR [rbx],cl
   140047596:	sbb    BYTE PTR [rsi+0x6e],0x8f
   14004759a:	int3   
   14004759b:	jnp    0x14004759b
   14004759d:	add    ch,BYTE PTR [rax+0x3f7df2de]
   1400475a3:	clc    
   1400475a4:	xor    esp,ebx
   1400475a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400475a7:	in     eax,0xbf
   1400475a9:	mov    dl,0xdf
   1400475ab:	call   0x189e16518
   1400475b0:	mov    ?,edi
   1400475b2:	(bad)  
   1400475b3:	dec    ebp
   1400475b5:	movabs eax,ds:0xfb1817bbeb23fe97
   1400475be:	sbb    ebx,eax
   1400475c0:	movabs ds:0x5161828a0c145c60,al
   1400475c9:	xor    BYTE PTR [rax],ch
   1400475cb:	test   BYTE PTR [rdx+0x60],dl
   1400475ce:	and    dl,bh
   1400475d0:	fdiv   DWORD PTR [rcx]
   1400475d2:	(bad)  
   1400475d4:	enter  0xdc53,0xf8
   1400475d8:	(bad)  
   1400475d9:	dec    edx
   1400475db:	sbb    eax,0x8c48be
   1400475e0:	movabs ds:0xf400de9577e046f4,al
   1400475e9:	repnz in eax,dx
   1400475eb:	xchg   edi,eax
   1400475ec:	pop    rbx
   1400475ed:	sub    bh,bh
   1400475ef:	fstp   TBYTE PTR [rsi+0x7a7f07ef]
   1400475f5:	mov    eax,0x4173f8b0
   1400475fa:	sbb    al,0x17
   1400475fc:	(bad)  
   1400475fd:	pop    rsi
   1400475fe:	(bad)  
   1400475ff:	jrcxz  0x140047640
   140047601:	(bad)  
   140047602:	lahf   
   140047603:	sbb    al,0x3e
   140047605:	stc    
   140047606:	out    dx,eax
   140047607:	pop    rax
   140047608:	mov    ebx,0xd9158171
   14004760d:	addr32 pop rax
   14004760f:	jp     0x1400475d7
   140047611:	mov    esi,0xa0066460
   140047616:	je     0x14004765a
   140047618:	sub    DWORD PTR [rsi+0x9c28452],ecx
   14004761e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004761f:	or     eax,DWORD PTR [rdi-0x38167af2]
   140047625:	fisubr WORD PTR [rdx-0x3200a9]
   14004762b:	out    dx,al
   14004762c:	mov    ds,WORD PTR [rax+riz*4+0x37]
   140047630:	add    bl,bh
   140047632:	xchg   edx,eax
   140047633:	mov    eax,0xbd007ddb
   140047638:	fsub   QWORD PTR [rbx-0xe]
   14004763b:	rex.WX shr BYTE PTR [rdi+0x7e97cb7a],0xe0
   140047643:	xchg   DWORD PTR [rdi],eax
   140047645:	jrcxz  0x14004760c
   140047647:	lahf   
   140047648:	jae    0x14004766c
   14004764a:	pop    rsp
   14004764b:	(bad)  
   14004764d:	movabs ds:0x862dfe9e6cdbf33a,eax
   140047656:	xlat   BYTE PTR ds:[rbx]
   140047657:	mov    dh,0x18
   140047659:	test   DWORD PTR [rbp+0x53],ebx
   14004765c:	jbe    0x1400476ad
   14004765e:	jmp    0x14a3e547f
   140047663:	out    0x28,eax
   140047665:	popf   
   140047666:	push   rax
   140047667:	mov    al,ah
   140047669:	popf   
   14004766a:	pop    rax
   14004766b:	(bad)  
   14004766c:	and    DWORD PTR [rsi+rdi*1+0x3c],edx
   140047670:	lock add al,0x37
   140047673:	jle    0x140047672
   140047675:	(bad)  
   140047676:	(bad)  
   140047677:	mov    edi,0x481114fd
   14004767c:	hlt    
   14004767d:	and    al,0x9c
   14004767f:	sub    ebp,esi
   140047681:	mov    bh,0x97
   140047683:	add    edx,edx
   140047685:	sbb    eax,DWORD PTR [rax+0x727dbe5e]
   14004768b:	or     esi,DWORD PTR [rdi+rdi*8-0x16813077]
   140047692:	mov    ecx,0x7fd2e2d1
   140047697:	in     eax,0x4
   140047699:	neg    BYTE PTR [rbx+0x53f9fec0]
   14004769f:	sbb    al,0x3e
   1400476a1:	cmc    
   1400476a2:	push   QWORD PTR [rcx]
   1400476a4:	fdivr  DWORD PTR [rsi]
   1400476a6:	retf   
   1400476a7:	mov    eax,0x4a2465d9
   1400476ac:	loope  0x1400476cb
   1400476ae:	test   DWORD PTR [rax-0x5c421618],edi
   1400476b4:	adc    al,dh
   1400476b6:	and    bh,BYTE PTR [rax]
   1400476b8:	(bad)  
   1400476b9:	jg     0x140047736
   1400476bb:	mov    cl,0xd7
   1400476bd:	jno    0x140047653
   1400476bf:	call   0x12ae7e647
   1400476c4:	scas   eax,DWORD PTR es:[rdi]
   1400476c5:	std    
   1400476c6:	js     0x140047740
   1400476c8:	inc    BYTE PTR [rcx]
   1400476ca:	pop    rdx
   1400476cb:	and    edx,eax
   1400476cd:	(bad)  
   1400476cf:	fild   WORD PTR [rax-0x6]
   1400476d2:	or     edx,ebx
   1400476d4:	retf   
   1400476d5:	mov    bh,0x5b
   1400476d7:	jb     0x1400476c1
   1400476d9:	inc    eax
   1400476db:	sti    
   1400476dc:	ds cli 
   1400476de:	enter  0xc6e2,0xa1
   1400476e2:	call   QWORD PTR [rsi+0x44]
   1400476e5:	(bad)  
   1400476e6:	(bad)  
   1400476e7:	cmp    al,0x57
   1400476e9:	scas   eax,DWORD PTR es:[rdi]
   1400476ea:	pop    rbp
   1400476eb:	movsxd esi,ebp
   1400476ed:	test   DWORD PTR [rdi-0x39],edi
   1400476f0:	ror    bl,cl
   1400476f2:	iret   
   1400476f3:	xor    ebx,DWORD PTR [rax+0x3524635c]
   1400476f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400476fa:	(bad)  
   1400476fb:	lahf   
   1400476fc:	cmp    al,0xbe
   1400476fe:	not    DWORD PTR [rsi+rbx*8-0x3ce353cf]
   140047705:	rex.B
   140047706:	push   r13
   140047708:	jp     0x140047694
   14004770a:	ret    0x7851
   14004770d:	lock sahf 
   14004770f:	sbb    BYTE PTR [rcx],ch
   140047711:	cmp    BYTE PTR [rdi+0x25],al
   140047714:	cli    
   140047715:	hlt    
   140047716:	rex.RXB jne 0x140047714
   140047719:	xchg   edi,eax
   14004771a:	sahf   
   14004771b:	shr    DWORD PTR [rbx-0x75],1
   14004771e:	je     0x1400476ad
   140047720:	rex (bad) 
   140047722:	add    eax,0x37a42bc
   140047727:	ror    bl,1
   140047729:	mov    bh,0x47
   14004772b:	(bad)  
   14004772c:	in     al,0xfd
   14004772e:	rex.WXB
   14004772f:	rex.RXB out dx,al
   140047731:	pop    rbx
   140047732:	pop    rsp
   140047733:	jg     0x140047725
   140047735:	xchg   ecx,eax
   140047736:	mov    edi,0x5fbfbde5
   14004773b:	rex.R fsubr DWORD PTR [rbp-0x18463de5]
   140047742:	fnstcw WORD PTR [rax-0xf]
   140047745:	mov    bh,0x29
   140047747:	scas   eax,DWORD PTR es:[rdi]
   140047748:	pop    rsi
   140047749:	(bad)  
   14004774a:	movabs al,ds:0xe894284ef0120633
   140047753:	std    
   140047754:	or     ecx,edi
   140047756:	movabs al,ds:0x2b8c2878cf438612
   14004775f:	rex.RXB push r13
   140047761:	cmp    BYTE PTR [rdi+rsi*2+0x4e07178],bh
   140047768:	jno    0x14004773b
   14004776a:	(bad)  
   14004776b:	sub    al,0xba
   14004776d:	out    0xe3,al
   14004776f:	(bad)  
   140047770:	(bad)  
   140047771:	jg     0x14004776d
   140047773:	sbb    esi,esp
   140047775:	movabs ds:0xa006f4bcc08de900,eax
   14004777e:	xchg   edi,eax
   14004777f:	xlat   BYTE PTR ds:[rbx]
   140047780:	pop    rsi
   140047781:	out    0x43,al
   140047783:	jg     0x140047794
   140047785:	xchg   esp,eax
   140047786:	movd   eax,mm6
   140047789:	adc    edi,DWORD PTR [rdi-0x4e]
   14004778c:	stos   BYTE PTR es:[rdi],al
   14004778d:	stos   BYTE PTR es:[rdi],al
   14004778e:	(bad)  
   140047790:	adc    al,0x45
   140047792:	mov    eax,0x2b32ed7a
   140047797:	(bad)  
   140047798:	(bad)  
   140047799:	(bad)  
   14004779a:	ret    
   14004779b:	in     eax,dx
   14004779c:	xchg   edi,eax
   14004779d:	sub    BYTE PTR [rdx-0x57ed79c3],bl
   1400477a3:	add    al,0xcb
   1400477a5:	mul    DWORD PTR [rbx-0x22]
   1400477a8:	pop    rdi
   1400477a9:	jns    0x14004780c
   1400477ab:	xor    al,0xf0
   1400477ad:	sub    al,0x8d
   1400477af:	sbb    al,0x6b
   1400477b1:	mov    eax,DWORD PTR [rip+0xffffffffa59e8bab]        # 0xe5a30362
   1400477b7:	and    DWORD PTR [rbx+0x5e7042a],0x3881a96f
   1400477c1:	rex.B
   1400477c2:	rex.R pop rax
   1400477c4:	xchg   ebp,eax
   1400477c5:	(bad)  [rdi-0x4]
   1400477c8:	div    edx
   1400477ca:	outs   dx,DWORD PTR ds:[rsi]
   1400477cb:	mov    edi,0xf8153e8b
   1400477d0:	xchg   dl,dl
   1400477d2:	pop    rdi
   1400477d3:	nop
   1400477d4:	pop    rsi
   1400477d5:	mov    esi,0x7fbc925d
   1400477da:	jns    0x1400477bb
   1400477dc:	rex.RXB mov r14d,0x68d503eb
   1400477e2:	cld    
   1400477e3:	(bad)  
   1400477e4:	mov    ebp,0x9d8e2208
   1400477e9:	mov    edx,0x1afe5e46
   1400477ee:	jmp    0x14004781f
   1400477f0:	std    
   1400477f1:	(bad)  
   1400477f2:	jb     0x1400477d7
   1400477f4:	xor    ah,BYTE PTR [rbp+0x28120606]
   1400477fa:	push   rdx
   1400477fb:	mov    gs,edi
   1400477fd:	sbb    al,0x85
   1400477ff:	test   esi,edi
   140047801:	mov    esp,DWORD PTR [rbx-0x31]
   140047804:	(bad)  
   140047805:	(bad)
   140047809:	(bad)
   14004780c:	leave  
   14004780d:	(bad)  
   14004780e:	rex.WX adc QWORD PTR [rbp-0x7fa77080],rcx
   140047815:	add    ecx,DWORD PTR [rdx]
   140047817:	adc    DWORD PTR [rax+rcx*1+0x74fbca0e],ebx
   14004781e:	jmp    FWORD PTR [rdi+0x3e4e31fc]
   140047824:	rex (bad) 
   140047826:	sbb    al,0x1c
   140047828:	jge    0x140047854
   14004782a:	xor    BYTE PTR [rdi],ah
   14004782c:	mov    ebp,0xb5e5e801
   140047831:	xchg   ebp,eax
   140047832:	add    esp,DWORD PTR [rdi+rbx*4-0x5b]
   140047836:	(bad)  
   140047837:	sahf   
   140047838:	fstp   DWORD PTR [rbp*2+0xb2ffa1c]
   14004783f:	(bad)  
   140047840:	and    edx,DWORD PTR [rcx+rcx*1+0x22]
   140047844:	pop    rsp
   140047845:	mov    ebx,0x17b5897a
   14004784a:	jg     0x1400477d7
   14004784c:	(bad)  
   14004784d:	rcr    BYTE PTR [rcx-0x5c],cl
   140047850:	cdq    
   140047851:	xor    BYTE PTR [rax-0x7f],dh
   140047854:	or     ah,BYTE PTR [rbp-0x4256ae90]
   14004785a:	or     BYTE PTR [rbp-0x1f],ah
   14004785d:	sbb    BYTE PTR [rip+0x54bab1c],cl        # 0x14550237f
   140047863:	sub    eax,DWORD PTR [rdi+0xa47862b]
   140047869:	(bad)  
   14004786a:	xchg   DWORD PTR [rbx+0x16],ecx
   14004786d:	or     dl,BYTE PTR ss:[rsi-0x6a39f569]
   140047874:	push   rax
   140047875:	jp     0x1400478e7
   140047877:	rex.WRX
   140047878:	rex adc eax,0x51c4e02f
   14004787e:	movabs eax,ds:0x146245fc5c63e27
   140047887:	leave  
   140047888:	or     ah,dh
   14004788a:	test   eax,0x6f4980
   14004788f:	jp     0x14004790a
   140047891:	in     eax,dx
   140047892:	fs mov esi,0xe503c7c1
   140047898:	clc    
   140047899:	xchg   ecx,eax
   14004789a:	(bad)  
   14004789b:	jg     0x14004790f
   14004789d:	imul   edi,DWORD PTR [rax],0xa1614b78
   1400478a3:	cli    
   1400478a4:	int    0x59
   1400478a6:	lea    ebx,[rbx+rdi*2+0x5fb3d59e]
   1400478ad:	rex.XB jbe 0x14004785f
   1400478b0:	push   rcx
   1400478b1:	rex.W (bad) 
   1400478b3:	sub    dl,cl
   1400478b5:	rcl    BYTE PTR [rbx],0xf3
   1400478b8:	jg     0x14004785a
   1400478ba:	lock rex.X push rbp
   1400478bd:	cmp    dl,BYTE PTR [rsi]
   1400478bf:	mov    DWORD PTR [rip+0xffffffffd525ebab],0x39afc3a6        # 0x1152a6474
   1400478c9:	fmul   QWORD PTR [rdx+0x1828dca3]
   1400478cf:	scas   eax,DWORD PTR es:[rdi]
   1400478d0:	adc    eax,0x833c8c2c
   1400478d5:	rex.X (bad) 
   1400478d7:	jne    0x140047919
   1400478d9:	movabs ds:0xbe6923089c03b6e,al
   1400478e2:	jg     0x140047883
   1400478e4:	jg     0x1400478e1
   1400478e6:	rex.RB cli 
   1400478e8:	push   rsp
   1400478e9:	loopne 0x140047900
   1400478eb:	rcr    BYTE PTR [rdi-0x78],cl
   1400478ee:	pop    rsi
   1400478ef:	pop    rsi
   1400478f0:	imul   ecx,ecx,0xffffffca
   1400478f3:	mov    edi,0xbe0feef1
   1400478f8:	addr32 cmp al,0x1a
   1400478fb:	(bad)  
   1400478fc:	call   0x16aace9a1
   140047901:	rex.B cmp al,0x3b
   140047904:	xlat   BYTE PTR ds:[rbx]
   140047905:	scas   eax,DWORD PTR es:[rdi]
   140047906:	mov    cl,0x72
   140047908:	imul   BYTE PTR [rbx+0x54]
   14004790b:	push   rdi
   14004790c:	mov    dh,0xa0
   14004790e:	cdq    
   14004790f:	xor    dl,BYTE PTR [rax]
   140047911:	sbb    BYTE PTR [rax],dl
   140047913:	jo     0x1400478fb
   140047915:	sar    DWORD PTR [rbp+0xcf7bc38],0x2a
   14004791c:	iret   
   14004791d:	retf   0xc152
   140047920:	jo     0x1400478cf
   140047922:	shr    BYTE PTR [rip+0xfffffffffc575f83],0xaa        # 0x13c5bd8ac
   140047929:	ret    0xe0a2
   14004792c:	xlat   BYTE PTR ds:[rbx]
   14004792d:	sbb    al,0xb
   14004792f:	rex.WXB sahf 
   140047931:	(bad)  
   140047932:	in     eax,0xa8
   140047934:	or     ch,BYTE PTR [rbx]
   140047936:	adc    DWORD PTR [rdx+0x152c103],ecx
   14004793c:	loope  0x14004797c
   14004793e:	es (bad) 
   140047940:	mul    DWORD PTR [rbx-0x64]
   140047943:	ds rex.RX lahf 
   140047946:	or     cl,ah
   140047948:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14004794a:	add    BYTE PTR [rdx+0x79],bh
   14004794d:	ins    DWORD PTR es:[rdi],dx
   14004794e:	in     al,0x0
   140047950:	(bad)  
   140047951:	pop    rdi
   140047952:	lods   eax,DWORD PTR ds:[rsi]
   140047953:	scas   al,BYTE PTR es:[rdi]
   140047954:	sub    eax,0x5fa5a5f8
   140047959:	pop    rax
   14004795a:	sbb    BYTE PTR [rsi],cl
   14004795c:	(bad)  
   14004795d:	pop    rsi
   14004795e:	add    al,0x9c
   140047960:	xor    BYTE PTR [rcx-0x741d1efd],ch
   140047966:	lods   al,BYTE PTR ds:[rsi]
   140047967:	pop    rsp
   140047968:	cmp    BYTE PTR [rbp+0x13c35eec],al
   14004796e:	cmp    DWORD PTR [rdi-0x4ed5cbae],0x7a507782
   140047978:	(bad)  
   140047979:	js     0x140047963
   14004797b:	pop    rax
   14004797c:	pop    rsp
   14004797d:	sub    al,0x29
   14004797f:	xchg   edi,eax
   140047980:	add    eax,0x91c501b7
   140047985:	rex jno 0x14004799c
   140047988:	cld    
   140047989:	or     bh,BYTE PTR [rax-0x1d46b0fb]
   14004798f:	sbb    BYTE PTR [rbp-0x6217dfdd],cl
   140047995:	and    BYTE PTR [rdx],cl
   140047997:	(bad)  
   140047998:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047999:	add    ecx,DWORD PTR [rax]
   14004799b:	xchg   ebp,eax
   14004799c:	call   0x12b679964
   1400479a1:	rex.WRXB rcl QWORD PTR [r15+0x5],1
   1400479a5:	out    0xa4,al
   1400479a7:	(bad)  
   1400479a8:	add    BYTE PTR [rbp+0x519296bc],bh
   1400479ae:	jmp    QWORD PTR [rbp-0x5e0161d9]
   1400479b4:	jb     0x14004796a
   1400479b6:	hlt    
   1400479b7:	in     al,dx
   1400479b8:	test   al,0x2a
   1400479ba:	jrcxz  0x1400479e7
   1400479bc:	loop   0x140047976
   1400479be:	jle    0x1400479b3
   1400479c0:	(bad)  
   1400479c1:	mov    esp,edi
   1400479c3:	sahf   
   1400479c4:	addr32 je 0x1400479b0
   1400479c7:	sbb    al,0xd4
   1400479c9:	jnp    0x140047a43
   1400479cb:	(bad)  
   1400479cc:	adc    eax,0x2e624281
   1400479d1:	out    dx,eax
   1400479d2:	adc    esi,ebx
   1400479d4:	scas   eax,DWORD PTR es:[rdi]
   1400479d5:	adc    cl,0xc0
   1400479d8:	xor    DWORD PTR [rax+0x70],ebx
   1400479db:	mov    eax,0x521fc165
   1400479e0:	cmp    BYTE PTR [rsi],dl
   1400479e2:	jo     0x1400479db
   1400479e4:	add    eax,0x164521fc
   1400479e9:	adc    eax,0x2d19ecbf
   1400479ee:	jp     0x14004799a
   1400479f0:	rcl    BYTE PTR [rcx+0x16],cl
   1400479f3:	loopne 0x1400479fa
   1400479f5:	(bad)
   1400479f9:	or     bl,BYTE PTR [rsi-0x5a]
   1400479fc:	(bad)  
   1400479fd:	and    edi,edi
   1400479ff:	xor    eax,0x445de1ff
   140047a04:	and    edx,DWORD PTR [rax]
   140047a06:	or     eax,0xbd2e3dc0
   140047a0b:	add    eax,ebp
   140047a0d:	in     eax,0xd5
   140047a0f:	xchg   edi,eax
   140047a10:	add    eax,eax
   140047a12:	(bad)  
   140047a14:	and    ebp,DWORD PTR [rdi+0x7c]
   140047a17:	ror    BYTE PTR [rdi],1
   140047a19:	rex.RX (bad) 
   140047a1b:	mov    ecx,0xf0a05e34
   140047a20:	add    al,BYTE PTR [rdx]
   140047a22:	xchg   ebx,eax
   140047a23:	(bad)  
   140047a24:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140047a25:	(bad)  
   140047a26:	pop    rdi
   140047a27:	(bad)  
   140047a28:	cmc    
   140047a29:	in     al,dx
   140047a2a:	xlat   BYTE PTR ds:[rbx]
   140047a2b:	jo     0x140047a64
   140047a2d:	movabs eax,cs:0xa27fd175508a535a
   140047a37:	adc    DWORD PTR [rax],ebp
   140047a39:	or     eax,edi
   140047a3b:	ret    0x53d0
   140047a3e:	sub    eax,0x1ff618b9
   140047a43:	or     eax,0xea0a47d4
   140047a48:	movsxd ecx,DWORD PTR [rsi]
   140047a4a:	ja     0x140047a80
   140047a4c:	push   rax
   140047a4d:	lods   al,BYTE PTR ds:[rsi]
   140047a4e:	sub    DWORD PTR [rax+rcx*1],0xa46397e
   140047a55:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047a56:	(bad)  
   140047a57:	or     bl,BYTE PTR [rdi]
   140047a59:	(bad)  
   140047a5a:	(bad)  
   140047a5b:	xchg   esi,eax
   140047a5c:	add    cl,BYTE PTR [rax]
   140047a5e:	loopne 0x1400479e5
   140047a60:	loope  0x140047a7d
   140047a62:	fscale 
   140047a64:	fst    DWORD PTR [rcx]
   140047a66:	rex.WRB
   140047a67:	rex.RB invd 
   140047a6a:	add    bh,BYTE PTR [rbp-0x2a1a17ff]
   140047a70:	xchg   esi,eax
   140047a71:	push   rdi
   140047a72:	(bad)  
   140047a73:	cld    
   140047a74:	mov    esi,DWORD PTR [rdx-0xd]
   140047a77:	rcr    BYTE PTR [rdi+0x2385c3f1],1
   140047a7d:	jrcxz  0x140047a60
   140047a7f:	sub    al,0x8f
   140047a82:	sbb    eax,0x326ef7d7
   140047a87:	idiv   DWORD PTR ds:[rbx+riz*8]
   140047a8b:	in     eax,dx
   140047a8c:	xchg   edi,eax
   140047a8d:	(bad)  
   140047a8e:	mov    dh,0x8b
   140047a90:	(bad)  
   140047a91:	sbb    BYTE PTR [rax+0x6f31a252],ch
   140047a97:	mov    bh,0x26
   140047a99:	(bad)  
   140047a9a:	out    0x84,eax
   140047a9c:	rex.B jmp 0x1052086ba
   140047aa2:	rex.W nop
   140047aa4:	cmc    
   140047aa5:	rex mov ebp,0x2a0d99ee
   140047aab:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140047aac:	or     esp,DWORD PTR [rip+0xffffffffd6e0b0e1]        # 0x116e52b93
   140047ab2:	adc    al,0x46
   140047ab4:	and    BYTE PTR [rbx-0x5f],ah
   140047ab7:	pop    rdx
   140047ab8:	jo     0x140047b0e
   140047aba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047abb:	push   rax
   140047abc:	js     0x140047b2e
   140047abe:	add    ch,BYTE PTR [rax+0x34488082]
   140047ac4:	add    ah,BYTE PTR [rbx+0x9]
   140047ac7:	(bad)  
   140047ac8:	cli    
   140047ac9:	gs inc bl
   140047acc:	out    0x88,eax
   140047ace:	(bad)  
   140047acf:	loopne 0x140047a6f
   140047ad1:	(bad)  
   140047ad2:	add    al,0xef
   140047ad4:	jmp    0x175ea6a6c
   140047ad9:	xchg   ebx,eax
   140047ada:	int3   
   140047adb:	neg    edi
   140047add:	jl     0x140047ac1
   140047adf:	mov    edi,esi
   140047ae1:	mov    edx,0x78f2fcb2
   140047ae6:	mov    esp,0x54385544
   140047aeb:	(bad)  
   140047aec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140047aed:	mov    al,0x7f
   140047aef:	jmp    0xdfebe610
   140047af4:	(bad)  
   140047af5:	pop    rbp
   140047af6:	mov    edi,0x6c598684
   140047afb:	or     al,0x10
   140047afd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047afe:	int3   
   140047aff:	cld    
   140047b00:	jle    0x140047b35
   140047b02:	add    al,BYTE PTR [rbp-0x39c5af9d]
   140047b08:	jrcxz  0x140047b0c
   140047b0a:	mov    edi,0x3d43ac04
   140047b0f:	sub    BYTE PTR [rcx+0x14],dl
   140047b12:	push   rbp
   140047b13:	test   al,0x97
   140047b15:	or     esp,DWORD PTR [rbx+rsi*1-0x20]
   140047b19:	(bad)  
   140047b1a:	ror    DWORD PTR [rip+0xffffffffa8e0bf05],0x2a        # 0xe8e53a26
   140047b21:	xchg   edi,esi
   140047b23:	data16 rex
   140047b25:	rex.WR icebp 
   140047b27:	rex.RB jae 0x140047af6
   140047b2a:	(bad)  
   140047b2b:	div    DWORD PTR [rcx+0x641f53ff]
   140047b31:	jnp    0x140047acc
   140047b33:	ds or  ch,al
   140047b36:	or     eax,0xa2af2f40
   140047b3b:	sbb    al,0x68
   140047b3d:	neg    BYTE PTR [rcx]
   140047b3f:	sub    al,0x2e
   140047b41:	cs push rsp
   140047b43:	ret    
   140047b44:	loope  0x140047b95
   140047b46:	cmp    edx,DWORD PTR [rdi-0x6a]
   140047b49:	jrcxz  0x140047b1c
   140047b4b:	sub    BYTE PTR [rsi],al
   140047b4d:	loop   0x140047b71
   140047b4f:	in     al,dx
   140047b50:	in     al,dx
   140047b51:	rex.WRXB sbb BYTE PTR [r14+0x5b8b3aff],r11b
   140047b58:	(bad)  
   140047b59:	and    dl,bl
   140047b5b:	sbb    eax,0x27550244
   140047b60:	cld    
   140047b61:	(bad)  
   140047b62:	(bad)  
   140047b63:	cmp    BYTE PTR [rbp+0x335f36],dh
   140047b69:	adc    DWORD PTR [rcx+0x58412fc7],0x76
   140047b70:	test   al,0x18
   140047b72:	enter  0x50a7,0x17
   140047b76:	(bad)  
   140047b77:	pop    rbp
   140047b78:	(bad)  
   140047b79:	cld    
   140047b7a:	xor    dh,BYTE PTR [rax]
   140047b7c:	adc    al,0xdc
   140047b7e:	pop    rax
   140047b7f:	test   al,0x86
   140047b81:	rex.X jmp 0xf739628c
   140047b87:	add    ecx,DWORD PTR [rdx-0x5fc4823c]
   140047b8d:	and    bh,BYTE PTR [rsi*8-0x3c0163dd]
   140047b94:	hlt    
   140047b95:	push   rcx
   140047b96:	sar    BYTE PTR [rbp-0x43421d85],0x66
   140047b9d:	xchg   edx,eax
   140047b9e:	rex.XB push QWORD PTR [r13+0x2ef81f07]
   140047ba5:	sub    eax,0x8b15f7ca
   140047baa:	retf   
   140047bab:	or     al,0xaa
   140047bad:	or     dl,BYTE PTR [rcx+0x45]
   140047bb0:	cmp    DWORD PTR [rbp+0x3958172b],0xd5c53cf7
   140047bba:	pop    rax
   140047bbb:	cli    
   140047bbc:	repz loop 0x140047be1
   140047bbf:	cli    
   140047bc0:	rex.WRXB push 0xfffffffff4897f73
   140047bc6:	faddp  st(2),st
   140047bc8:	or     esp,DWORD PTR [rbx+0x3918a7a1]
   140047bce:	sbb    BYTE PTR [rcx+0x18],al
   140047bd1:	or     BYTE PTR [rdx-0x57612f3a],cl
   140047bd7:	fdivr  st(5),st
   140047bd9:	movabs ds:0xca38190237145647,al
   140047be2:	mov    cl,0xa3
   140047be4:	sub    ah,BYTE PTR [rbx]
   140047be6:	jnp    0x140047bb8
   140047be8:	sbb    ebp,DWORD PTR [rip+0xffffffff88255938]        # 0xc829d526
   140047bee:	push   rcx
   140047bef:	shl    DWORD PTR [rsi+0x3fe47ecc],0x93
   140047bf6:	rol    edi,cl
   140047bf8:	mov    eax,0xbd022bc7
   140047bfd:	add    eax,ebp
   140047bff:	in     eax,0xd5
   140047c01:	xchg   ecx,eax
   140047c02:	add    ebx,esi
   140047c04:	jg     0x140047c77
   140047c06:	movsxd esp,DWORD PTR [rbx-0x4b]
   140047c09:	lods   al,BYTE PTR ds:[rsi]
   140047c0a:	stos   BYTE PTR es:[rdi],al
   140047c0b:	lahf   
   140047c0c:	or     al,BYTE PTR [rbp-0x17]
   140047c0f:	(bad)  
   140047c10:	jrcxz  0x140047bb7
   140047c12:	call   0x179bcc1f0
   140047c17:	lods   eax,DWORD PTR ds:[rsi]
   140047c18:	jno    0x140047c31
   140047c1a:	rex.WRX mov dl,0x7c
   140047c1d:	loope  0x140047c53
   140047c1f:	in     al,dx
   140047c20:	fild   WORD PTR [rax+0x9]
   140047c23:	xchg   esp,eax
   140047c24:	or     BYTE PTR [rbx],al
   140047c26:	xchg   esp,eax
   140047c27:	xor    dl,BYTE PTR [rsi+0x7]
   140047c2a:	jno    0x140047c5a
   140047c2c:	(bad)  
   140047c2d:	js     0x140047c56
   140047c2f:	push   rsp
   140047c30:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047c31:	xor    BYTE PTR [rdx+0x6040c51c],ch
   140047c37:	or     al,0xa1
   140047c39:	mov    edx,cs
   140047c3b:	ins    BYTE PTR es:[rdi],dx
   140047c3c:	cli    
   140047c3d:	(bad)
   140047c41:	adc    DWORD PTR [rip+0x6058dc5],0xffffffe0        # 0x1460a0a0d
   140047c48:	rex.RX
   140047c49:	rex.X push rbp
   140047c4b:	or     esi,ebx
   140047c4d:	fdecstp 
   140047c4f:	sub    al,0x7
   140047c51:	adc    BYTE PTR [rcx+rdx*4],al
   140047c54:	clc    
   140047c55:	rcl    DWORD PTR [rdx],0x7d
   140047c58:	clc    
   140047c59:	movabs ds:0x4f701478f72afc5c,eax
   140047c62:	sahf   
   140047c63:	je     0x140047c94
   140047c65:	scas   eax,DWORD PTR es:[rdi]
   140047c66:	mov    esp,ecx
   140047c68:	add    DWORD PTR [rdi-0x75],edi
   140047c6b:	neg    edi
   140047c6d:	jmp    QWORD PTR [rbx-0x76]
   140047c70:	cmp    al,0x2e
   140047c72:	ret    
   140047c73:	rex.RB (bad) 
   140047c75:	movabs ds:0x97eb9d8e234aa231,eax
   140047c7e:	pop    rcx
   140047c7f:	cmp    edi,esi
   140047c81:	cmp    al,0x83
   140047c83:	stos   DWORD PTR es:[rdi],eax
   140047c84:	pop    rbx
   140047c85:	push   0xffffffff8939c133
   140047c8a:	sbb    al,0x5d
   140047c8c:	imul   ebp,DWORD PTR [rax],0x38ff245c
   140047c92:	pop    rsp
   140047c93:	retf   
   140047c94:	jmp    FWORD PTR [rdi]
   140047c96:	cmp    eax,0x18a7a183
   140047c9b:	or     BYTE PTR [rdx],dh
   140047c9d:	push   rsp
   140047c9e:	(bad)  
   140047c9f:	or     ebp,DWORD PTR [rdx+0x29eeae4a]
   140047ca5:	xor    al,0xde
   140047ca7:	adc    DWORD PTR [rsi+0x4],edx
   140047caa:	mov    bh,0x18
   140047cac:	jo     0x140047cb1
   140047cae:	ror    DWORD PTR [rbp+0x16586022],0x82
   140047cb5:	div    DWORD PTR [rcx+0x58]
   140047cb8:	mov    BYTE PTR [rbx],al
   140047cba:	push   rsp
   140047cbb:	pop    rdx
   140047cbc:	adc    BYTE PTR [rcx-0x80],0xd
   140047cc0:	(bad)  
   140047cc1:	(bad)  
   140047cc2:	(bad)  
   140047cc3:	push   rcx
   140047cc4:	rex.WRX ffree st(7)
   140047cc7:	cmp    eax,0xdea0e4c
   140047ccc:	rex (bad) 
   140047cce:	jg     0x140047d40
   140047cd0:	cmp    DWORD PTR [rax-0x6],eax
   140047cd3:	fnstcw WORD PTR [rax-0x1c]
   140047cd6:	xchg   ecx,eax
   140047cd7:	(bad)  
   140047cd8:	retf   
   140047cd9:	ret    0x38ff
   140047cdc:	movabs ds:0x7b008f4aa996160c,al
   140047ce5:	rex.WRB and BYTE PTR [r8+rdi*1-0x33],r11b
   140047cea:	retf   0x17f9
   140047ced:	nop
   140047cee:	fwait
   140047cef:	push   rdi
   140047cf0:	add    DWORD PTR [rax+0x57fe18d3],0xe3ee9c68
   140047cfa:	and    al,0x8e
   140047cfc:	(bad)  
   140047cfd:	jbe    0x140047c81
   140047cff:	test   DWORD PTR [rsi-0x3555ef4e],0x14602ae1
   140047d09:	or     eax,0x7e456a00
   140047d0e:	enter  0x40a1,0x58
   140047d12:	adc    ah,bl
   140047d14:	add    dl,BYTE PTR [rax+0x9]
   140047d17:	pop    rdx
   140047d18:	or     al,ch
   140047d1a:	xor    BYTE PTR [rsi+0x7383ce01],ah
   140047d20:	mov    dh,BYTE PTR [rbx]
   140047d22:	push   rdx
   140047d23:	nop
   140047d24:	test   al,0xb4
   140047d26:	mov    ecx,DWORD PTR [rdi]
   140047d28:	test   al,0x1e
   140047d2a:	jnp    0x140047d7a
   140047d2c:	mov    bh,0x7f
   140047d2e:	mov    BYTE PTR [rsi],dh
   140047d30:	or     bh,BYTE PTR [rax+0x7a1f94a7]
   140047d36:	add    edx,eax
   140047d38:	retf   
   140047d39:	(bad)  
   140047d3a:	push   rsp
   140047d3b:	outs   dx,BYTE PTR ds:[rsi]
   140047d3c:	shr    edx,1
   140047d3e:	cmp    ebx,DWORD PTR [rax+0x59]
   140047d41:	stc    
   140047d42:	imul   esp,DWORD PTR [rdi+0x218b4d61],0xa15c5a3
   140047d4c:	and    BYTE PTR [rax-0x628c4c50],cl
   140047d52:	xchg   ebp,eax
   140047d53:	repz iret 
   140047d55:	xor    edi,DWORD PTR [rsp+rdi*2+0x11f66d16]
   140047d5c:	rcl    DWORD PTR [rdi+rdi*4-0x49c0d64f],0x21
   140047d64:	sbb    esi,ebp
   140047d66:	push   rbp
   140047d67:	clc    
   140047d68:	test   al,0xc4
   140047d6a:	gs and eax,0xd06148c8
   140047d70:	sbb    eax,0x3097f4
   140047d75:	add    DWORD PTR [rbp+0x41643950],eax
   140047d7b:	jno    0x140047d80
   140047d7d:	jo     0x140047d94
   140047d7f:	add    rax,0xffffffffa5ef04be
   140047d85:	sub    r13,QWORD PTR [r12+rbp*2]
   140047d89:	nop
   140047d8a:	(bad)  
   140047d8b:	movups xmm3,XMMWORD PTR [rax-0x6b]
   140047d8f:	cli    
   140047d90:	sub    edi,DWORD PTR [rdi-0x64]
   140047d93:	xchg   ebx,eax
   140047d94:	(bad)  
   140047d95:	mov    eax,0xbd022b47
   140047d9a:	add    eax,ebp
   140047d9c:	in     eax,0xd5
   140047d9e:	nop
   140047d9f:	lods   al,BYTE PTR ds:[rsi]
   140047da0:	cld    
   140047da1:	xchg   DWORD PTR [rsi-0x3a580c87],ebx
   140047da7:	stc    
   140047da8:	iret   
   140047da9:	rex.WXB push r11
   140047dab:	ret    
   140047dac:	js     0x140047d47
   140047dae:	shl    DWORD PTR [rax+0x8],1
   140047db1:	add    dh,BYTE PTR [rbp-0x18b42cf6]
   140047db7:	pop    rax
   140047db8:	cmp    bh,bh
   140047dba:	jne    0x140047e20
   140047dbc:	out    0x1a,eax
   140047dbe:	stos   BYTE PTR es:[rdi],al
   140047dbf:	or     eax,0x7fe148e
   140047dc4:	mov    esp,0xd4ecca8b
   140047dc9:	add    BYTE PTR [rax+0x17],al
   140047dcc:	add    eax,eax
   140047dce:	mov    dl,0x70
   140047dd0:	xchg   esp,eax
   140047dd1:	xchg   ebp,eax
   140047dd2:	mov    ebx,DWORD PTR [rsi+0xa8207d]
   140047dd8:	push   0x45812c7
   140047ddd:	push   rax
   140047dde:	or     BYTE PTR [rcx+0x1],ah
   140047de1:	fcom   QWORD PTR [rax]
   140047de3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140047de4:	adc    BYTE PTR [rax+riz*1-0x6c],ah
   140047de8:	add    eax,DWORD PTR [rdi-0x17]
   140047deb:	pop    rbp
   140047dec:	imul   eax,DWORD PTR [rdx+rdx*8],0xfffffffb
   140047df0:	push   rbp
   140047df1:	movsxd ebx,DWORD PTR [rcx+0x50]
   140047df4:	test   BYTE PTR [rdx-0xc],al
   140047df7:	clc    
   140047df8:	jnp    0x140047db3
   140047dfa:	bnd jge 0x140047dd9
   140047dfd:	movabs ds:0xcabcbdb2753dc058,eax
   140047e06:	shl    BYTE PTR [rdx],cl
   140047e08:	(bad)  
   140047e09:	and    dh,al
   140047e0b:	ja     0x140047dec
   140047e0d:	std    
   140047e0e:	sbb    eax,ebp
   140047e10:	ret    0x9fe2
   140047e13:	ja     0x140047def
   140047e15:	clc    
   140047e16:	adc    BYTE PTR [rax+0x2d],0xaf
   140047e1a:	xor    ebp,DWORD PTR [rax]
   140047e1c:	(bad)  
   140047e1d:	fs mov ebp,0xf0c7b7b3
   140047e23:	(bad)  
   140047e25:	sbb    BYTE PTR [rdi-0x61],ch
   140047e28:	rex.RB (bad) 
   140047e2a:	jge    0x140047e3c
   140047e2c:	sub    ah,al
   140047e2e:	push   rcx
   140047e2f:	rex.WB and al,0xff
   140047e32:	and    al,0xfa
   140047e34:	outs   dx,DWORD PTR ds:[rsi]
   140047e35:	(bad)  
   140047e36:	movabs al,ds:0xa2852837d191779d
   140047e3f:	adc    ah,BYTE PTR [rax+riz*4-0x7c]
   140047e43:	or     sil,BYTE PTR [r14]
   140047e46:	mov    BYTE PTR [rcx],ch
   140047e48:	sub    BYTE PTR [rax-0x4],0xad
   140047e4c:	mov    bh,BYTE PTR [rdx]
   140047e4e:	mov    r12d,0x2904a148
   140047e55:	add    eax,0x1b0a1037
   140047e5a:	(bad)  
   140047e5b:	and    ah,BYTE PTR [rdx]
   140047e5d:	js     0x140047ebb
   140047e5f:	int3   
   140047e60:	inc    DWORD PTR [rbp+0x72]
   140047e63:	(bad)  
   140047e64:	and    eax,eax
   140047e66:	sub    dh,BYTE PTR [rbx+0x2f32f81f]
   140047e6c:	sbb    eax,0x8ac1ee2
   140047e71:	hlt    
   140047e72:	(bad)  
   140047e73:	movabs al,ds:0x1f1ff422dc9fdf97
   140047e7c:	jg     0x140047e5e
   140047e7e:	rex.WRXB mov BYTE PTR [r8-0x7b0aeac9],r15b
   140047e85:	xor    BYTE PTR [rax],bl
   140047e87:	xor    ebx,DWORD PTR [rdx+0x58]
   140047e8a:	(bad)  
   140047e8b:	mov    DWORD PTR [rdx+0x2b],edx
   140047e8e:	fdivr  QWORD PTR [rdx+rsi*2-0x308c4a7f]
   140047e95:	jrcxz  0x140047f0e
   140047e97:	movabs cs:0x71a57f4ac28046a1,eax
   140047ea1:	div    BYTE PTR [rbx+0x68]
   140047ea4:	out    dx,al
   140047ea5:	movabs ds:0x812bec06d88b2ed7,al
   140047eae:	sar    QWORD PTR [rsp+r8*8],1
   140047eb2:	pop    rsi
   140047eb3:	or     al,0x0
   140047eb5:	rex.WR and BYTE PTR [rax+0x7050ca1d],0x23
   140047ebd:	sub    r12b,BYTE PTR [r8+0x68aa414]
   140047ec4:	sar    BYTE PTR [rbx-0x6ab7eea8],0x80
   140047ecb:	outs   dx,BYTE PTR ds:[rsi]
   140047ecc:	and    al,BYTE PTR [rcx-0x1d85faf8]
   140047ed2:	mov    bl,0x6c
   140047ed4:	fst    QWORD PTR [rbx+0x733dc051]
   140047eda:	movabs ds:0xf1b9400c9226bcbd,al
   140047ee3:	hlt    
   140047ee4:	pop    rbx
   140047ee5:	fsubrp st(5),st
   140047ee7:	stos   DWORD PTR es:[rdi],eax
   140047ee8:	(bad)  
   140047ee9:	rex.RXB or BYTE PTR [rip+0xffffffff97e29eae],r14b        # 0xd7e71d9e
   140047ef0:	(bad)  
   140047ef1:	rex.WB (bad) 
   140047ef3:	fistp  WORD PTR [rbp-0x3157317]
   140047ef9:	xchg   r14,rax
   140047efb:	cs mov esp,0x209bd308
   140047f01:	add    DWORD PTR [rdi],ebp
   140047f03:	(bad)  
   140047f04:	cmp    al,0x7f
   140047f06:	sbb    bl,dh
   140047f08:	xchg   ecx,eax
   140047f09:	ret    0xa8f4
   140047f0c:	lods   al,BYTE PTR ds:[rsi]
   140047f0d:	fiadd  WORD PTR [rbp+0x3]
   140047f10:	push   rax
   140047f11:	push   rsi
   140047f12:	(bad)  
   140047f13:	push   rdi
   140047f14:	or     dl,BYTE PTR [rdx-0x76]
   140047f17:	lods   eax,DWORD PTR ds:[rsi]
   140047f18:	(bad)  
   140047f1a:	xor    DWORD PTR [rsi],eax
   140047f1c:	nop
   140047f1d:	hlt    
   140047f1e:	fsub   DWORD PTR [rdx]
   140047f20:	add    BYTE PTR [rbx*1+0x11890c08],dl
   140047f27:	rex movabs eax,ds:0xc31413ce2af82548
   140047f31:	add    DWORD PTR [rdx+0x40cd0a9],esp
   140047f37:	mov    dl,BYTE PTR [rbp+0x14]
   140047f3a:	(bad)  
   140047f3b:	jne    0x140047f2f
   140047f3d:	(bad)  
   140047f3e:	rex.WRXB mov r11b,0xb5
   140047f41:	(bad)  
   140047f42:	cmp    eax,0x6f40516
   140047f47:	movabs al,ds:0x6b87fd401cbbdf97
   140047f50:	jmp    0x140047edd
   140047f52:	jle    0x140047fc9
   140047f54:	std    
   140047f55:	(bad)  
   140047f56:	xor    eax,0xd3962c52
   140047f5b:	cmp    eax,0xb2b54710
   140047f60:	rex.B jmp 0xfd89c5ea
   140047f66:	stos   DWORD PTR es:[rdi],eax
   140047f67:	xchg   edi,eax
   140047f68:	pop    rax
   140047f69:	cmp    ebx,edi
   140047f6b:	xor    eax,0xa117ebca
   140047f70:	cdq    
   140047f71:	cdq    
   140047f72:	xlat   BYTE PTR ds:[rbx]
   140047f73:	(bad)  
   140047f74:	enter  0x497f,0xb0
   140047f78:	jp     0x140047ff7
   140047f7a:	push   0xfffffffffffffffe
   140047f7c:	mov    DWORD PTR [rcx],edx
   140047f7e:	rex loope 0x140047f05
   140047f81:	stos   BYTE PTR es:[rdi],al
   140047f82:	mov    WORD PTR [rip+0x7c00aefe],?        # 0x1bc052e86
   140047f88:	in     al,0xf4
   140047f8a:	rex.RXB adc r8b,r12b
   140047f8d:	loopne 0x140047f21
   140047f8f:	jg     0x140047f42
   140047f91:	xor    dl,BYTE PTR [rax]
   140047f93:	mov    esp,0x29630c0
   140047f98:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047f99:	jo     0x140047fe3
   140047f9b:	or     DWORD PTR [rsi-0xebf5a76],edi
   140047fa1:	pop    rax
   140047fa2:	je     0x140047fc5
   140047fa4:	(bad)  
   140047fa5:	or     dh,BYTE PTR [rsi+rdi*8+0x560b2b00]
   140047fac:	ret    0xdf13
   140047faf:	retf   
   140047fb0:	(bad)  [rdi-0x2f]
   140047fb3:	sub    eax,0x7203de09
   140047fb8:	rex.WRXB pushf 
   140047fba:	fs (bad) 
   140047fbc:	scas   eax,DWORD PTR es:[rdi]
   140047fbd:	movabs ds:0x1fd1e47e5ff422dc,al
   140047fc6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047fc7:	lods   al,BYTE PTR ds:[rsi]
   140047fc8:	fimul  WORD PTR [rbx+0x68]
   140047fcb:	test   al,0x26
   140047fcd:	(bad)  
   140047fce:	or     ebx,eax
   140047fd0:	and    eax,0x8cb8bc6
   140047fd5:	retf   0xa36e
   140047fd8:	mov    cl,0xe7
   140047fda:	jg     0x140047fc7
   140047fdc:	adc    al,0xb2
   140047fde:	mov    bh,0x43
   140047fe0:	pop    rsp
   140047fe1:	mov    ebx,0xd2e7cd33
   140047fe6:	pushf  
   140047fe7:	repz and edx,DWORD PTR [rcx]
   140047fea:	add    al,0xcc
   140047fec:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047fed:	rex add ebp,edi
   140047ff0:	(bad)
   140047ff4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140047ff5:	test   al,0x74
   140047ff7:	sbb    al,0xb2
   140047ff9:	ret    0xaac1
   140047ffc:	pop    rbp
   140047ffd:	lock (bad) 
   140047fff:	xchg   al,ah
   140048001:	rex.WX test QWORD PTR [rdx-0x70],rax
   140048005:	shl    cl,cl
   140048007:	sub    ah,BYTE PTR [rcx+0x40af232c]
   14004800d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004800e:	cmc    
   14004800f:	cld    
   140048010:	in     eax,dx
   140048011:	movabs ss:0x4c23a1ffdd4d8138,al
   14004801b:	(bad)  
   14004801c:	mov    ah,0x25
   14004801e:	sar    DWORD PTR [rsi],0x2
   140048021:	call   0x1886017cb
   140048026:	pop    rbx
   140048027:	repz jg 0x140047ffd
   14004802a:	push   rbx
   14004802b:	outs   dx,DWORD PTR ds:[rsi]
   14004802c:	xchg   ebx,eax
   14004802d:	test   ebp,esp
   14004802f:	lahf   
   140048030:	push   rsp
   140048031:	test   BYTE PTR [rdx+0x13d5c7de],dh
   140048037:	fmul   st(2),st
   140048039:	and    DWORD PTR [rsi-0x4f5576ab],eax
   14004803f:	jae    0x140048034
   140048041:	cmp    cl,BYTE PTR [rbx-0x19]
   140048044:	mov    esi,0x22ed7546
   140048049:	fimul  DWORD PTR [rax+rdx*2-0x40]
   14004804d:	jrcxz  0x140048077
   14004804f:	push   rax
   140048050:	rex.WX jrcxz 0x140048051
   140048053:	(bad)  
   140048054:	jb     0x1400480a4
   140048056:	(bad)  
   140048057:	loope  0x140048050
   140048059:	cs jb  0x140048055
   14004805c:	push   rbx
   14004805d:	or     ah,BYTE PTR [rax]
   14004805f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140048060:	rex.R mov edi,0x2bfb16c
   140048066:	push   0x5d
   140048068:	jle    0x1400480bb
   14004806a:	movabs ds:0xf9882180a813ab26,al
   140048073:	jno    0x14004801e
   140048075:	add    al,0x5f
   140048077:	(bad)  
   140048078:	fld    QWORD PTR [rcx+0x361b3882]
   14004807e:	(bad)  
   14004807f:	pop    rbx
   140048080:	jb     0x14004800a
   140048082:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140048083:	add    DWORD PTR [rdx+0x25],eax
   140048086:	loope  0x1400480f5
   140048088:	jg     0x14004800b
   14004808a:	push   rsp
   14004808c:	(bad)  
   14004808d:	mov    edx,0x3cbb80bc
   140048092:	or     eax,0x2f400de8
   140048097:	fistp  QWORD PTR [rdx-0x3402f7e4]
   14004809d:	icebp  
   14004809e:	js     0x1400480fc
   1400480a0:	lods   al,BYTE PTR ds:[rsi]
   1400480a1:	outs   dx,BYTE PTR ds:[rsi]
   1400480a2:	cld    
   1400480a3:	(bad)  
   1400480a4:	(bad)  
   1400480a5:	ret    
   1400480a6:	jne    0x140048079
   1400480a8:	rex mov ecx,0x33ce03bf
   1400480ae:	pop    rax
   1400480af:	cmp    eax,DWORD PTR [rdi+rdx*1-0x196be59f]
   1400480b6:	ret    0xd619
   1400480b9:	(bad)  
   1400480ba:	cmp    eax,0x1bddb8f
   1400480bf:	xor    al,0x20
   1400480c1:	mov    ss,WORD PTR [rdx]
   1400480c3:	movabs ds:0xfd0c474ef0f213f2,al
   1400480cc:	popf   
   1400480cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400480ce:	and    DWORD PTR [rax],esp
   1400480d0:	adc    cl,bl
   1400480d2:	ja     0x1400480fd
   1400480d4:	or     ch,al
   1400480d6:	mov    edi,gs
   1400480d8:	rex.W (bad) 
   1400480da:	and    DWORD PTR [rax+0x36],ebp
   1400480dd:	or     ch,BYTE PTR [rax-0x4]
   1400480e0:	adc    eax,0x252a412a
   1400480e5:	cs adc BYTE PTR es:[rbx-0x7e],cl
   1400480ea:	scas   al,BYTE PTR es:[rdi]
   1400480eb:	adc    BYTE PTR [rdx],cl
   1400480ed:	add    edx,DWORD PTR [rsi]
   1400480ef:	mov    ebp,0x38731145
   1400480f4:	(bad)  
   1400480f5:	and    r12d,eax
   1400480f8:	mov    r12b,r11b
   1400480fb:	in     al,dx
   1400480fc:	jge    0x1400480fd
   1400480fe:	cwde   
   1400480ff:	data16 jle 0x14004816c
   140048102:	rcr    BYTE PTR [rbp+0x2c],1
   140048105:	mov    ebp,0x5be5e801
   14004810a:	xchg   ebx,eax
   14004810b:	pop    rbx
   14004810c:	test   dh,bh
   14004810e:	imul   ecx,DWORD PTR [rdi+0x3e],0xfffffffd
   140048112:	rex.RXB jne 0x1400480d1
   140048115:	hlt    
   140048116:	rex.B adc eax,0xc194f570
   14004811c:	dec    BYTE PTR [rip+0xffffffff8306e2c2]        # 0xc30b63e4
   140048122:	test   DWORD PTR [rbp+0x44],esp
   140048125:	loope  0x140048121
   140048127:	ficomp WORD PTR [rsi]
   140048129:	movabs ds:0x37a6017cba33cff3,eax
   140048132:	push   rcx
   140048133:	add    al,BYTE PTR [rdx+0x5c]
   140048136:	shl    DWORD PTR [rdi-0x3801eb70],1
   14004813c:	jl     0x14004817a
   14004813e:	jmp    0x130066bbb
   140048143:	(bad)  
   140048144:	sbb    eax,0x2e589e7d
   140048149:	adc    rax,0x3fd7ae80
   14004814f:	rol    BYTE PTR [rip+0xffffffff904a8050],0x2a        # 0xd04f01a6
   140048156:	xchg   esi,eax
   140048157:	add    ebp,eax
   140048159:	ds (bad) 
   14004815b:	gs (bad) 
   14004815d:	(bad)  
   14004815e:	xor    ch,ah
   140048160:	rex.WRXB stc 
   140048162:	(bad)  
   140048163:	sub    r14b,BYTE PTR [rbp+r9*1-0x1eee7ec5]
   14004816b:	jrcxz  0x1400481ec
   14004816d:	push   rsi
   14004816e:	sahf   
   14004816f:	jg     0x14004810d
   140048171:	jnp    0x140048177
   140048173:	or     al,0xec
   140048175:	or     eax,0x17bf2f40
   14004817a:	leave  
   14004817b:	fidivr WORD PTR [rdi-0x3]
   14004817e:	mov    DWORD PTR [rdi],esp
   140048180:	fmulp  st(4),st
   140048182:	ret    0x9fea
   140048185:	(bad)
   140048188:	jnp    0x1400481d8
   14004818a:	imul   DWORD PTR [rax]
   14004818c:	addr32 adc ebx,esp
   14004818f:	(bad)  
   140048190:	jge    0x14004819e
   140048192:	retf   0xa982
   140048195:	sub    dl,bl
   140048197:	retf   
   140048198:	out    0x58,eax
   14004819a:	cmp    eax,0xcefc75ff
   14004819f:	adc    eax,0x17105308
   1400481a4:	sbb    eax,0x1b4a06b3
   1400481a9:	std    
   1400481aa:	xchg   ebp,eax
   1400481ab:	cmp    BYTE PTR [rcx+0x5ce73d2e],sil
   1400481b2:	(bad)  
   1400481b3:	add    BYTE PTR [rdx-0x68c7fd68],cl
   1400481b9:	(bad)  
   1400481ba:	cli    
   1400481bb:	mov    al,0x23
   1400481bd:	push   rax
   1400481be:	imul   eax,DWORD PTR [rax],0x48
   1400481c1:	xchg   esi,eax
   1400481c2:	rex cmp ecx,DWORD PTR [rdi+0x58582245]
   1400481c9:	sub    DWORD PTR [rdx+rbx*1-0x31f42b71],edx
   1400481d0:	retf   0xce81
   1400481d3:	mov    ch,0x63
   1400481d5:	ret    0x66a2
   1400481d8:	mov    bh,0xd1
   1400481da:	or     BYTE PTR [rax-0x1c5ebfa8],0xa7
   1400481e1:	mov    eax,0x9e76fdf1
   1400481e6:	ja     0x140048225
   1400481e8:	cmp    eax,0xbd0037b8
   1400481ed:	jl     0x140048262
   1400481ef:	cmp    DWORD PTR [rax+0x2eacaffa],ecx
   1400481f5:	xchg   esi,eax
   1400481f6:	sbb    eax,DWORD PTR [rdi-0x2]
   1400481f9:	(bad)  
   1400481fa:	(bad)  
   1400481fb:	or     al,0x17
   1400481fd:	popf   
   1400481fe:	add    BYTE PTR [rcx-0x6a844f9a],ah
   140048204:	push   rax
   140048205:	lea    ebp,[rax]
   140048207:	(bad)  
   140048208:	(bad)  
   140048209:	push   rdx
   14004820a:	movabs al,ds:0xe1649fcf28cc9cdc
   140048213:	ror    bl,cl
   140048215:	xor    cl,bl
   140048217:	mov    cl,0x16
   140048219:	fsubp  st(0),st
   14004821b:	stc    
   14004821c:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14004821e:	adc    al,0xe8
   140048220:	pop    rsp
   140048221:	mov    bh,0x5e
   140048223:	add    edi,DWORD PTR cs:[rdx]
   140048226:	movabs eax,ds:0xa002b177b8147170
   14004822f:	pop    rsi
   140048230:	push   rcx
   140048231:	xlat   BYTE PTR ds:[rbx]
   140048232:	mov    dh,0x0
   140048234:	imul   edx,DWORD PTR [rdi-0x1f],0x53
   140048238:	clc    
   140048239:	(bad)  
   14004823a:	test   DWORD PTR [rax-0x10],0x5577fd11
   140048241:	mov    WORD PTR [rax],es
   140048243:	ror    BYTE PTR [rdi-0x32bd3cb5],cl
   140048249:	or     ah,al
   14004824b:	push   rax
   14004824c:	rex.RX mov bl,0x9
   14004824f:	nop
   140048250:	mov    ?,WORD PTR [rcx]
   140048252:	pop    rdx
   140048253:	rcr    cl,1
   140048255:	ja     0x1400482d5
   140048257:	(bad)  
   140048258:	(bad)  
   140048259:	fist   WORD PTR [rbx]
   14004825b:	(bad)  
   14004825c:	movabs al,ds:0xf2bccbbbf2f400de
   140048265:	rex.RXB (bad) 
   140048267:	push   QWORD PTR [rcx-0x1cdb0139]
   14004826d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004826e:	test   DWORD PTR [rdx-0x523b1d55],0xdee194d9
   140048278:	jne    0x140048214
   14004827a:	mov    ch,0xa3
   14004827c:	mov    WORD PTR [rsi+0x23],es
   14004827f:	push   0x55
   140048281:	jbe    0x140048232
   140048283:	ins    DWORD PTR es:[rdi],dx
   140048284:	mov    bl,0x72
   140048286:	(bad)  
   140048287:	and    al,0xc5
   140048289:	mov    ch,0xcb
   14004828b:	push   0x1ac4a298
   140048290:	jg     0x1400482b7
   140048292:	push   rax
   140048293:	stos   BYTE PTR es:[rdi],al
   140048294:	out    0xf6,al
   140048296:	(bad)  
   140048297:	xor    edi,ebp
   140048299:	out    dx,eax
   14004829a:	rex.WRB stc 
   14004829c:	popf   
   14004829d:	(bad)  
   14004829e:	or     al,BYTE PTR [rax-0x1f]
   1400482a1:	push   rdx
   1400482a2:	stc    
   1400482a3:	scas   al,BYTE PTR es:[rdi]
   1400482a4:	push   rbp
   1400482a5:	rex.WRX rcr BYTE PTR [rdi+r15*2-0x1ec7e859],0x0
   1400482ae:	jmp    0x1685e8a28
   1400482b3:	push   rdx
   1400482b4:	push   0xffffffffffffffac
   1400482b6:	(bad)  
   1400482b7:	fcom   DWORD PTR [rcx-0x45]
   1400482ba:	retf   0x530
   1400482bd:	addr32 sub eax,0x523c66c1
   1400482c3:	xchg   edi,eax
   1400482c4:	(bad)  
   1400482c5:	out    0x5,al
   1400482c7:	add    BYTE PTR [rbp+0x6527c0f0],dl
   1400482cd:	jmp    0x1400482a2
   1400482cf:	popf   
   1400482d0:	jae    0x140048290
   1400482d2:	imul   esi,ebp,0xffffffe4
   1400482d5:	scas   al,BYTE PTR es:[rdi]
   1400482d6:	cmp    eax,0x555e5eb1
   1400482db:	imul   edi,DWORD PTR [rcx-0xac2b002],0xfb5c597e
   1400482e5:	adc    edx,DWORD PTR [rdx+0xc]
   1400482e8:	movsxd edi,esi
   1400482ea:	lods   al,BYTE PTR ds:[rsi]
   1400482eb:	or     eax,0x6526e4e5
   1400482f0:	push   rbx
   1400482f1:	jrcxz  0x140048302
   1400482f3:	popf   
   1400482f4:	(bad)  
   1400482f5:	loopne 0x140048334
   1400482f7:	jnp    0x14004836e
   1400482f9:	sub    DWORD PTR [rbp+rdi*4-0x38],0xffffffe2
   1400482fe:	neg    BYTE PTR [rcx]
   140048300:	fs (bad) 
   140048302:	cmp    ch,BYTE PTR [rax+0x3]
   140048305:	cmp    edi,esi
   140048307:	(bad)  
   140048308:	out    dx,al
   140048309:	(bad)  
   14004830a:	lods   eax,DWORD PTR ds:[rsi]
   14004830b:	(bad)  
   14004830c:	jbe    0x140048378
   14004830e:	cmp    DWORD PTR [rbx],0x2d
   140048311:	sbb    dh,al
   140048313:	adc    bl,BYTE PTR [rbx+0x59c28a78]
   140048319:	mov    edi,ebx
   14004831b:	sbb    bh,BYTE PTR [rdi-0x6e]
   14004831e:	xchg   BYTE PTR [rsi+0x5573dc4],ah
   140048324:	(bad)  
   140048325:	push   0x3
   140048327:	movabs al,ds:0x850018c9c785b0e
   140048330:	scas   al,BYTE PTR es:[rdi]
   140048331:	rex.W retf 
   140048333:	mov    ebp,es
   140048335:	push   rdx
   140048336:	rex.XB mov WORD PTR [r10],?
   140048339:	mov    ah,0x45
   14004833b:	stc    
   14004833c:	push   rsp
   14004833d:	in     eax,dx
   14004833e:	stc    
   14004833f:	mov    eax,0xf9308dd1
   140048344:	rcr    BYTE PTR [rdx],cl
   140048346:	mov    bl,0x8a
   140048348:	(bad)  
   140048349:	or     ah,ch
   14004834b:	and    eax,DWORD PTR [rax+0x3931ee5e]
   140048351:	enter  0x3ff5,0x72
   140048355:	je     0x14004832a
   140048357:	lods   eax,DWORD PTR ds:[rsi]
   140048358:	outs   dx,BYTE PTR ds:[rsi]
   140048359:	(bad)  
   14004835a:	push   rbp
   14004835b:	sbb    DWORD PTR [rsi],ebp
   14004835d:	lea    eax,[rbp+0x7c]
   140048360:	sbb    al,0xc6
   140048362:	push   rcx
   140048363:	(bad)  
   140048364:	lock mov edi,0xb8675a5e
   14004836a:	mov    edx,0x77372809
   14004836f:	outs   dx,BYTE PTR ds:[rsi]
   140048370:	mov    al,0x78
   140048372:	out    dx,al
   140048373:	imul   ecx,DWORD PTR [rsi+rbp*1],0x5f
   140048377:	rex
   140048378:	mov    bx,0x8471
   14004837c:	xchg   edi,eax
   14004837d:	xchg   ecx,eax
   14004837e:	jg     0x14004830a
   140048380:	adc    al,dh
   140048382:	test   al,0x95
   140048384:	cld    
   140048385:	rex.WR jmp 0x122f472bc
   14004838b:	rex.WX movabs rdi,0x3c1e897bdade8f85
   140048395:	(bad)
   140048398:	std    
   140048399:	rex.WRXB sete BYTE PTR [r10+r11*2-0x26e96f98]
   1400483a2:	not    DWORD PTR [rcx+0x16171809]
   1400483a8:	mov    BYTE PTR [rcx+0x4],dl
   1400483ab:	add    eax,0x8f808d1
   1400483b0:	or     dh,ah
   1400483b2:	test   al,0xa1
   1400483b4:	add    eax,DWORD PTR [rsi]
   1400483b6:	(bad)  
   1400483b7:	sub    al,0x23
   1400483b9:	sbb    al,BYTE PTR [rbp-0x7107b7f]
   1400483bf:	pop    rcx
   1400483c0:	mov    esi,0xf2ee0ef6
   1400483c5:	xor    al,0xa0
   1400483c7:	(bad)  
   1400483c8:	add    BYTE PTR [rbp+0x4c0e5adc],bh
   1400483ce:	clc    
   1400483cf:	add    edx,ecx
   1400483d1:	icebp  
   1400483d2:	add    ecx,DWORD PTR [rdi]
   1400483d4:	std    
   1400483d5:	jns    0x14004839d
   1400483d7:	sub    ecx,edi
   1400483d9:	test   al,0x2f
   1400483db:	int3   
   1400483dc:	(bad)  
   1400483dd:	(bad)  
   1400483de:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400483df:	sahf   
   1400483e0:	xor    BYTE PTR [rax+0x3f0e44dc],bl
   1400483e6:	rex xor eax,0x94693018
   1400483ec:	out    0xe2,al
   1400483ee:	rex.WXB lods al,BYTE PTR ds:[rsi]
   1400483f0:	ins    BYTE PTR es:[rdi],dx
   1400483f1:	popf   
   1400483f2:	ret    0xbcdd
   1400483f5:	mov    ch,BYTE PTR [rdx-0x7d]
   1400483f8:	mov    al,bl
   1400483fa:	test   eax,0x434fd0da
   1400483ff:	jmp    QWORD PTR [rcx+0x746cfe05]
   140048405:	ja     0x140048453
   140048407:	add    DWORD PTR [rax+0x37afd2b],ecx
   14004840d:	in     eax,dx
   14004840e:	adc    cl,BYTE PTR [rdi+riz*4]
   140048411:	rex.R (bad) 
   140048413:	xchg   ecx,eax
   140048414:	sub    DWORD PTR [rsi-0x3c],ebp
   140048417:	(bad)  
   140048418:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140048419:	jrcxz  0x1400483b1
   14004841b:	jrcxz  0x1400483ad
   14004841d:	shl    al,1
   14004841f:	add    al,0xf5
   140048421:	test   eax,0x89780804
   140048426:	imul   eax,DWORD PTR [rcx+rdx*1-0x7f],0xc87554c5
   14004842e:	imul   eax,DWORD PTR [rbp-0x16b2f4f3],0x4354a44
   140048438:	icebp  
   140048439:	cmpxchg ebx,esi
   14004843c:	mov    ebp,0x2b3e5dc
   140048441:	jp     0x140048446
   140048443:	ror    bl,1
   140048445:	sub    esp,ebp
   140048447:	(bad)  
   140048448:	and    eax,0x7e6fa3bf
   14004844d:	out    0x7b,al
   14004844f:	gs imul esi,ebp,0x221ca507
   140048456:	(bad)  
   140048457:	jmp    0x12d5ca61a
   14004845c:	mov    edi,0x1e87f0a8
   140048461:	rcl    BYTE PTR [rbx],0xb8
   140048464:	jle    0x140048459
   140048466:	es ret 
   140048468:	repz iret 
   14004846a:	xor    edi,DWORD PTR [rsp+rdi*2+0x4b5dea0e]
   140048471:	adc    ebp,DWORD PTR [rsp+rsi*8]
   140048474:	push   rdi
   140048475:	(bad)
   140048478:	mov    edi,0x1a27f18c
   14004847d:	xchg   ebp,eax
   14004847e:	pop    rsi
   14004847f:	pushf  
   140048480:	out    0x39,al
   140048482:	add    dh,bl
   140048484:	sbb    DWORD PTR [rcx-0x39],esi
   140048487:	addr32 call 0xcaf53acc
   14004848d:	rol    DWORD PTR [rax-0x1392a4ac],1
   140048493:	xor    al,0x11
   140048495:	(bad)  
   140048496:	mov    edi,0x14b67cc5
   14004849b:	xchg   esi,eax
   14004849c:	ss pop rax
   14004849e:	or     al,0xe3
   1400484a0:	retf   0x17d8
   1400484a3:	push   rax
   1400484a4:	cwde   
   1400484a5:	movabs eax,ds:0xa536884593829349
   1400484ae:	popf   
   1400484af:	adc    eax,0xd8f848b0
   1400484b4:	(bad)
   1400484b8:	mov    eax,0xde80a38b
   1400484bd:	add    ah,dh
   1400484bf:	repnz lea esp,[rcx+rax*1]
   1400484c3:	jg     0x1400484aa
   1400484c5:	(bad)  
   1400484c6:	sbb    ebx,esi
   1400484c8:	lock rex.RX pop rbp
   1400484cb:	fprem  
   1400484cd:	sbb    DWORD PTR [r10+rdi*1],r13d
   1400484d1:	out    0xbc,eax
   1400484d3:	xchg   ebp,eax
   1400484d4:	in     eax,dx
   1400484d5:	add    dl,dl
   1400484d7:	int3   
   1400484d8:	test   al,0x76
   1400484da:	scas   eax,DWORD PTR es:[rdi]
   1400484db:	and    ch,BYTE PTR [rbx]
   1400484dd:	fwait
   1400484de:	or     al,0x17
   1400484e0:	xchg   esi,eax
   1400484e1:	cwde   
   1400484e2:	xor    al,0xca
   1400484e4:	(bad)  
   1400484e5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400484e6:	mov    bl,0xac
   1400484e8:	pushf  
   1400484e9:	(bad)  
   1400484ea:	mov    DWORD PTR [rdi+0xcc2197e],edi
   1400484f0:	(bad)
   1400484f4:	add    DWORD PTR [rdi],ebp
   1400484f6:	sbb    al,bl
   1400484f8:	jg     0x1400484d1
   1400484fa:	jp     0x1400484dc
   1400484fc:	xor    al,0xfe
   1400484fe:	cmp    ebp,DWORD PTR [rcx]
   140048500:	pop    rsi
   140048501:	(bad)  
   140048502:	add    eax,0x81512ef0
   140048507:	jrcxz  0x140048518
   140048509:	shl    DWORD PTR [rcx],0x8d
   14004850c:	(bad)  
   14004850d:	and    al,0xdf
   14004850f:	rex.X idiv DWORD PTR [rcx]
   140048512:	adc    BYTE PTR [rax],dl
   140048514:	(bad)  
   140048516:	nop
   140048517:	in     eax,0x14
   140048519:	loop   0x140048576
   14004851b:	or     al,0x40
   14004851d:	mov    WORD PTR [rax],ss
   14004851f:	and    al,0x45
   140048521:	fcom   QWORD PTR [rsi-0x5bfae98d]
   140048527:	cmp    ecx,esp
   140048529:	(bad)  
   14004852a:	jmp    0x188561df0
   14004852f:	fwait
   140048530:	stos   DWORD PTR es:[rdi],eax
   140048531:	test   BYTE PTR [rbx],dl
   140048533:	iret   
   140048534:	retf   0xf95
   140048537:	jae    0x140048550
   140048539:	add    DWORD PTR [rcx-0xaf62289],0xfffffff2
   140048540:	(bad)  
   140048541:	xchg   esp,eax
   140048542:	add    ebp,DWORD PTR [rbx-0x68697306]
   140048548:	(bad)  
   140048549:	stos   DWORD PTR es:[rdi],eax
   14004854a:	int    0xc3
   14004854c:	jg     0x1400485a1
   14004854e:	rex.RXB stos DWORD PTR es:[rdi],eax
   140048550:	rex.RXB (bad) 
   140048552:	(bad)  
   140048553:	gs mov ebp,0x40434514
   140048559:	addr32 jnp 0x1400485b0
   14004855c:	cmc    
   14004855d:	adc    al,0x39
   14004855f:	jl     0x140048563
   140048561:	out    dx,eax
   140048562:	sbb    eax,0x94fb7bbb
   140048567:	out    0xbf,eax
   140048569:	(bad)  
   14004856a:	ret    0x97a5
   14004856d:	jno    0x140048542
   14004856f:	fwait
   140048570:	and    al,0x82
   140048572:	mov    ss,WORD PTR [rdi-0x332c33bc]
   140048578:	jmp    0x161ff7946
   14004857d:	(bad)  
   14004857e:	jmp    0x19f0c6ac7
   140048583:	pop    rax
   140048584:	jg     0x140048586
   140048586:	mov    ah,0xda
   140048588:	cwde   
   140048589:	retf   0xd280
   14004858c:	cmc    
   14004858d:	(bad)  
   14004858e:	je     0x14004852a
   140048590:	and    esi,0xffffff89
   140048593:	std    
   140048594:	xchg   edx,eax
   140048595:	(bad)  
   140048596:	and    BYTE PTR [rcx-0x7afbba53],ch
   14004859c:	sub    eax,0x886d1e21
   1400485a1:	mov    dh,0xfc
   1400485a3:	(bad)  
   1400485a4:	pop    rbx
   1400485a5:	mov    BYTE PTR [rax-0x681629e4],ah
   1400485ab:	call   0x10bbe90fe
   1400485b0:	push   rdx
   1400485b1:	sbb    esi,0xcad2f400
   1400485b7:	sub    eax,0x37f5fef2
   1400485bc:	cmp    al,0xf2
   1400485be:	out    0x74,eax
   1400485c0:	jno    0x1400485bf
   1400485c2:	add    ebp,DWORD PTR [rsi+0x4108801c]
   1400485c8:	add    al,0xd1
   1400485ca:	sub    BYTE PTR [rdx+0x43],0xb1
   1400485ce:	ja     0x1400485d3
   1400485d0:	sbb    DWORD PTR [rip+0x423b5c32],ebp        # 0x1823fe208
   1400485d6:	or     dl,cl
   1400485d8:	(bad)  
   1400485da:	sub    eax,0x40bc2f56
   1400485df:	jno    0x1400485de
   1400485e1:	push   rdx
   1400485e2:	out    0xfd,al
   1400485e4:	mov    ebp,DWORD PTR [rdx+0x56]
   1400485e7:	cld    
   1400485e8:	rex.X
   1400485e9:	rex.X outs dx,BYTE PTR ds:[rsi]
   1400485eb:	std    
   1400485ec:	adc    eax,0x6338e323
   1400485f1:	loopne 0x140048598
   1400485f3:	push   0x246970a0
   1400485f8:	js     0x140048596
   1400485fa:	out    0x97,eax
   1400485fc:	(bad)  
   1400485fd:	scas   al,BYTE PTR es:[rdi]
   1400485fe:	add    DWORD PTR [rcx+0x14],ebp
   140048601:	or     DWORD PTR [rcx-0xd525ff2],ecx
   140048607:	(bad)  
   140048608:	fisttp QWORD PTR [rdi+0x55]
   14004860b:	add    DWORD PTR [rsp+rax*1],0x340654ba
   140048612:	rex.WX mov cl,0xfd
   140048615:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140048616:	adc    DWORD PTR [rcx-0x37],esp
   140048619:	clc    
   14004861a:	rex.R xor al,0x22
   14004861d:	scas   al,BYTE PTR es:[rdi]
   14004861e:	xor    eax,0x6132a9a0
   140048623:	(bad)  
   140048624:	(bad)  
   140048625:	xchg   ecx,eax
   140048626:	test   BYTE PTR [rdi-0x1],dh
   140048629:	add    bh,BYTE PTR [rdi+0x69770cf3]
   14004862f:	sbb    dl,al
   140048631:	sbb    eax,DWORD PTR [rax+0x22dca25e]
   140048637:	out    dx,eax
   140048638:	mov    edi,0x3e27c9ff
   14004863d:	xlat   BYTE PTR ds:[rbx]
   14004863e:	sub    al,0xad
   140048640:	inc    DWORD PTR [rbx+rax*4]
   140048643:	add    eax,0xd547c44
   140048648:	test   DWORD PTR [rax-0x1ae615ff],esp
   14004864e:	(bad)  
   14004864f:	cs mov dl,0x79
   140048652:	(bad)  
   140048653:	(bad)
   140048656:	out    dx,al
   140048657:	mov    bh,BYTE PTR fs:[rbx-0x745a7590]
   14004865e:	addr32 mov edi,?
   140048661:	(bad)  
   140048662:	shl    BYTE PTR [rsi],0xf0
   140048665:	in     al,0xce
   140048667:	mov    edi,0xac5bfe84
   14004866c:	popf   
   14004866d:	jbe    0x140048695
   14004866f:	sbb    eax,0xffa1204c
   140048674:	jle    0x1400486c4
   140048676:	(bad)
   140048679:	in     eax,dx
   14004867a:	iret   
   14004867b:	xor    eax,DWORD PTR [rcx]
   14004867d:	xor    eax,0x144523bf
   140048682:	(bad)  
   140048683:	jnp    0x14004868c
   140048685:	and    dl,BYTE PTR [rsi]
   140048687:	ror    BYTE PTR [rcx-0xa],1
   14004868a:	pop    rbp
   14004868b:	lods   al,BYTE PTR ds:[rsi]
   14004868c:	(bad)  
   14004868d:	and    al,0xce
   14004868f:	add    DWORD PTR [rcx-0x7f969ef6],ebp
   140048695:	imul   eax,DWORD PTR [rcx],0x40
   140048698:	or     ebp,DWORD PTR [rdx]
   14004869a:	adc    al,0x27
   14004869c:	mov    WORD PTR [rsi],ds
   14004869e:	xlat   BYTE PTR ds:[rbx]
   14004869f:	sbb    ebx,DWORD PTR [rdi-0x20]
   1400486a2:	cs add eax,0xd0037b03
   1400486a8:	rex.WXB push r15
   1400486aa:	jb     0x14004868a
   1400486ac:	jg     0x1400486a2
   1400486ae:	movabs eax,ds:0x78e86ffd79649e07
   1400486b7:	mov    ecx,0xd8185f14
   1400486bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400486bd:	cmp    BYTE PTR [rdx],al
   1400486bf:	test   BYTE PTR [rsi],al
   1400486c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400486c2:	jnp    0x1400486fc
   1400486c4:	out    dx,eax
   1400486c5:	sbb    BYTE PTR [rdx+rdi*4],bl
   1400486c8:	(bad)  
   1400486c9:	push   rcx
   1400486ca:	in     eax,0xc6
   1400486cc:	mov    ch,0x6d
   1400486ce:	xchg   esi,eax
   1400486cf:	(bad)  
   1400486d0:	jg     0x14004870f
   1400486d2:	mov    ?,ebx
   1400486d4:	scas   al,BYTE PTR es:[rdi]
   1400486d5:	test   esp,0x81052a8f
   1400486db:	rex.X add al,0x2f
   1400486de:	and    DWORD PTR [rdi-0x48b2ce01],eax
   1400486e4:	(bad)  
   1400486e5:	movabs al,ds:0x419aeaa5d700554
   1400486ee:	rex.WRXB int3 
   1400486f0:	dec    DWORD PTR [rbp-0x1b]
   1400486f3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400486f4:	sar    DWORD PTR [rdx],0xf7
   1400486f7:	shl    BYTE PTR [rdi+rdi*4+0x16],cl
   1400486fb:	mov    ch,0xcf
   1400486fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400486fe:	rex fcmove st,st(6)
   140048701:	sbb    BYTE PTR [rax],0x9
   140048704:	push   0x19105c87
   140048709:	or     DWORD PTR [rcx+0x80ed470],0x3e6fb649
   140048713:	and    eax,0x2d09ab48
   140048718:	mov    ebx,0x71cfb1f0
   14004871d:	outs   dx,BYTE PTR ds:[rsi]
   14004871e:	lea    esi,[rsi+0x18d77a24]
   140048724:	sbb    esi,0x3072f400
   14004872a:	out    dx,eax
   14004872b:	(bad)  
   14004872c:	push   rdi
   14004872d:	(bad)  
   14004872e:	push   rdi
   14004872f:	xlat   BYTE PTR ds:[rbx]
   140048730:	mov    dh,ch
   140048732:	int    0x5f
   140048734:	push   0x16
   140048736:	xlat   BYTE PTR ds:[rbx]
   140048737:	(bad)  
   140048738:	mov    edx,0xf6938062
   14004873d:	ss push rcx
   14004873f:	or     eax,0x727e0210
   140048744:	xchg   ebx,eax
   140048745:	(bad)  
   140048746:	imul   ecx,DWORD PTR [rbp-0x26e873f],0xf1734d59
   140048750:	or     al,0x4b
   140048752:	(bad)  
   140048753:	pop    rdi
   140048754:	rex.R outs dx,BYTE PTR ds:[rsi]
   140048756:	pop    rsi
   140048757:	rex.RB
   140048758:	rex.XB or eax,0x105aaf44
   14004875e:	repz jg 0x140048700
   140048761:	xchg   esi,eax
   140048762:	std    
   140048763:	(bad)  
   140048764:	and    eax,0x6b9ed4b8
   140048769:	(bad)  
   14004876a:	pop    rax
   14004876b:	clc    
   14004876c:	xchg   ecx,eax
   14004876d:	call   0x1662db633
   140048772:	popf   
   140048773:	jge    0x1400487bc
   140048775:	scas   al,BYTE PTR es:[edi]
   140048777:	out    0x9d,al
   140048779:	(bad)
   14004877c:	push   rsi
   14004877d:	jmp    0x14004875a
   14004877f:	add    eax,0xc46cec43
   140048784:	pop    rcx
   140048785:	sub    ah,al
   140048787:	or     al,0xf4
   140048789:	sub    ebp,DWORD PTR [rsp+rcx*8+0x6a0729d8]
   140048790:	xor    dh,BYTE PTR [rax]
   140048792:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140048793:	std    
   140048794:	fcmovb st,st(1)
   140048796:	sbb    DWORD PTR [rbp+rdx*4+0xa],eax
   14004879a:	jge    0x14004877e
   14004879c:	movsxd edi,DWORD PTR [rdx-0x3d11b10b]
   1400487a2:	xor    al,0xa0
   1400487a4:	(bad)  
   1400487a5:	add    bh,dh
   1400487a7:	mov    edx,0x9dfbc81c
   1400487ac:	jae    0x140048783
   1400487ae:	repnz icebp 
   1400487b0:	adc    edi,DWORD PTR [rdi-0x5b]
   1400487b3:	pop    rsi
   1400487b4:	fidivr WORD PTR [rdi+rsi*4+0x54]
   1400487b8:	movsxd eax,DWORD PTR [rsp+rbx*4+0x71]
   1400487bc:	outs   dx,DWORD PTR ds:[rsi]
   1400487bd:	rex.WR
   1400487be:	repz and BYTE PTR [rbx+r10*2],sil
   1400487c3:	mov    bh,BYTE PTR [rdx-0x36]
   1400487c6:	jo     0x1400487ab
   1400487c8:	sbb    dh,cl
   1400487ca:	jns    0x14004883a
   1400487cc:	fdivr  QWORD PTR [rsi+rcx*8+0x181785e2]
   1400487d3:	pop    rsi
   1400487d4:	mov    ecx,0x125dd300
   1400487d9:	push   rbp
   1400487da:	xlat   BYTE PTR ds:[rbx]
   1400487db:	or     ebx,DWORD PTR [rip+0xffffffffd739afef]        # 0x1173e37d0
   1400487e1:	(bad)  
   1400487e2:	in     eax,dx
   1400487e3:	mov    bh,0x96
   1400487e5:	call   rbx
   1400487e7:	jmp    0x13a1cf7f1
   1400487ec:	(bad)  
   1400487ed:	jg     0x14004879b
   1400487ef:	rex outs dx,DWORD PTR ds:[rsi]
   1400487f1:	sbb    al,0x0
   1400487f3:	rex.B push 0x45
   1400487f6:	rex.X push 0x9c63f09
   1400487fc:	mov    al,0x5f
   1400487fe:	push   rcx
   1400487ff:	adc    dl,BYTE PTR [rbp-0x28]
   140048802:	rex.RB xchg r8d,eax
   140048804:	(bad)  
   140048806:	test   al,0x48
   140048808:	in     al,dx
   140048809:	and    eax,0x6675f530
   14004880e:	or     al,0x52
   140048810:	ja     0x1400487b2
   140048812:	rex.WXB
   140048813:	rex.WR
   140048814:	rex.XB pop r10
   140048816:	and    eax,DWORD PTR [rax+0xe]
   140048819:	cmp    al,0x4
   14004881b:	rex.B in eax,0x7e
   14004881e:	cdq    
   14004881f:	jl     0x140048830
   140048821:	ja     0x140048804
   140048823:	mov    ah,0xa0
   140048825:	mov    ebx,0xf97a44e6
   14004882a:	jge    0x1400487f4
   14004882c:	and    DWORD PTR [rsi],0xfe3aa01f
   140048832:	clc    
   140048833:	movabs ds:0x2e1887f1bcb66c7f,eax
   14004883c:	and    esi,ecx
   14004883e:	rex.RXB in eax,0x81
   140048841:	sbb    al,0xfa
   140048843:	mov    eax,DWORD PTR [rbp+0x643555ff]
   140048849:	mov    esp,0x9b4c9ba
   14004884e:	rex.WR
   14004884f:	cs mov esi,0x1785cacc
   140048855:	lock (bad) 
   140048857:	scas   al,BYTE PTR es:[rdi]
   140048858:	movabs al,ds:0x4cffb5cd7efc6a61
   140048861:	std    
   140048862:	rex.WRB (bad) 
   140048864:	add    BYTE PTR [rdx+rdi*8+0xc739a9b],cl
   14004886b:	hlt    
   14004886c:	jae    0x1400488db
   14004886e:	cmp    dl,BYTE PTR [rax-0x54a37e90]
   140048874:	add    esi,DWORD PTR [rsi+rax*1+0x17e22e9a]
   14004887b:	ret    
   14004887c:	jbe    0x1400488cb
   14004887e:	cwde   
   14004887f:	movabs ds:0x1abc417a0f75abf8,al
   140048889:	movabs eax,ds:0x8036720a44c000c8
   140048892:	and    al,0xf
   140048894:	and    al,0xc1
   140048896:	mov    BYTE PTR [rbp-0x692fce65],0xf
   14004889d:	and    BYTE PTR [rdx],ah
   14004889f:	sub    al,0x48
   1400488a1:	clc    
   1400488a2:	ror    BYTE PTR [rdi],1
   1400488a4:	leave  
   1400488a5:	mov    eax,DWORD PTR [rdi-0x48]
   1400488a8:	retf   
   1400488a9:	movabs ds:0xd00b72abdc00de80,al
   1400488b2:	out    dx,eax
   1400488b3:	movabs eax,ds:0x2ff3657acefc1f47
   1400488bc:	call   0x18beb8e39
   1400488c1:	sbb    eax,ecx
   1400488c3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400488c4:	mov    BYTE PTR [rsi],al
   1400488c6:	(bad)  
   1400488c7:	sub    ch,BYTE PTR [rax-0x60]
   1400488ca:	(bad)  
   1400488cb:	mov    cl,0xbf
   1400488ce:	retf   
   1400488cf:	(bad)  
   1400488d0:	jns    0x1400488ef
   1400488d2:	(bad)  
   1400488d3:	sbb    BYTE PTR [rax-0x1d],dh
   1400488d6:	out    0xe,al
   1400488d8:	movabs ds:0x7e07173e5f19270b,eax
   1400488e1:	adc    al,BYTE PTR [rbx]
   1400488e3:	add    eax,0x17f81a87
   1400488e8:	ret    
   1400488e9:	push   QWORD PTR [rax+rbp*8+0x69fd0e47]
   1400488f0:	cmp    eax,0x7808aa77
   1400488f5:	xlat   BYTE PTR ds:[rbx]
   1400488f6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400488f7:	add    BYTE PTR [rsi],bh
   1400488f9:	(bad)  
   1400488fa:	fstp   QWORD PTR [rdx-0x26]
   1400488fd:	scas   eax,DWORD PTR es:[rdi]
   1400488fe:	test   al,0x20
   140048900:	xor    ebx,DWORD PTR [r9]
   140048903:	sub    dh,ch
   140048905:	in     al,dx
   140048906:	or     BYTE PTR [rsi],0x6a
   140048909:	and    BYTE PTR [rdi-0x2af312fb],dl
   14004890f:	out    0x1,al
   140048911:	(bad)  
   140048912:	or     eax,0xf39af383
   140048917:	sti    
   140048918:	rex.W (bad) 
   14004891a:	in     al,dx
   14004891b:	xor    BYTE PTR [rax],al
   14004891d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004891e:	push   rbp
   14004891f:	mov    ch,BYTE PTR [rax+0x13]
   140048922:	sub    al,0x9a
   140048924:	rex.B (bad) 
   140048926:	jl     0x140048978
   140048928:	(bad)  
   140048929:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004892a:	(bad)  
   14004892b:	movabs eax,ds:0x97a24e2bb80a26bb
   140048934:	fbld   TBYTE PTR [rbx+0x2b2b9eb4]
   14004893a:	push   rcx
   14004893c:	(bad)  
   14004893d:	mov    ?,WORD PTR [rbp-0x726a653]
   140048943:	fcmovne st,st(5)
   140048945:	loop   0x1400489c1
   140048947:	jmp    0x14e58ead6
   14004894c:	xrelease mov BYTE PTR [rdx+0x84feeb1],ch
   140048953:	call   0xc69553c4
   140048958:	rol    esi,0x11
   14004895b:	(bad)  
   14004895c:	es mov al,0x7b
   14004895f:	stc    
   140048960:	add    ch,BYTE PTR [rbx]
   140048962:	(bad)  
   140048963:	pop    rdi
   140048964:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140048965:	mov    eax,0xd4c2097e
   14004896a:	rex mov ebx,0xda17a888
   140048970:	add    edi,edi
   140048972:	cmp    ah,ch
   140048974:	mov    edi,0xc1d7fddc
   140048979:	add    edx,ebx
   14004897b:	xor    al,0xa0
   14004897d:	pop    rbp
   14004897e:	mov    ebx,0x1028b2f
   140048983:	and    al,0x58
   140048985:	sub    DWORD PTR [rax-0x25],edx
   140048988:	imul   eax,eax,0x9ec78f29
   14004898e:	xchg   ebx,eax
   14004898f:	rex.WRX adc BYTE PTR [rax+0x24e280ca],0xf2
   140048997:	xchg   DWORD PTR [rax+rcx*4],ebx
   14004899a:	jae    0x140048924
   14004899c:	ja     0x1400489d4
   14004899e:	jns    0x140048938
   1400489a0:	fcomp  QWORD PTR [rsi]
   1400489a2:	pushf  
   1400489a3:	pop    rbp
   1400489a5:	sub    dh,al
   1400489a7:	sub    ah,BYTE PTR [rsi+0x74]
   1400489aa:	sub    al,0x9a
   1400489ac:	adc    DWORD PTR [rax+0x5d],esp
   1400489af:	data16 lahf 
   1400489b1:	mov    al,0x99
   1400489b3:	xor    DWORD PTR [rdi+0xd],0x37a027
   1400489ba:	imul   DWORD PTR [rsi+0x1e562f24]
   1400489c0:	ds mov edx,0xdb5bbf79
   1400489c6:	cld    
   1400489c7:	cmp    edx,DWORD PTR [rbx-0x5164bc5b]
   1400489cd:	sbb    al,0x76
   1400489cf:	pop    rax
   1400489d0:	cmp    BYTE PTR [rcx-0x5ce5581c],dh
   1400489d6:	sbb    BYTE PTR [rdx+0x1b],0xfc
   1400489da:	in     al,0x26
   1400489dc:	add    DWORD PTR [rbp+0x4b0b8615],0xffffffdc
   1400489e3:	fcomp  st(3)
   1400489e5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400489e6:	mov    eax,0x178b02f0
   1400489eb:	iret   
   1400489ec:	and    BYTE PTR [rbx-0x4f],bh
   1400489ef:	jmp    0x140048a40
   1400489f1:	int    0x68
   1400489f3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400489f4:	(bad)  
   1400489f5:	pop    rcx
   1400489f6:	cmp    edi,ecx
   1400489f8:	xchg   DWORD PTR [rdi+rdx*2-0x7113d6f5],ebx
   1400489ff:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140048a01:	cs mov ebp,0xa9700954
   140048a07:	fs xchg edi,eax
   140048a09:	fstp   TBYTE PTR [rsi-0x13]
   140048a0c:	push   rdi
   140048a0d:	add    BYTE PTR [rsi+0x1],ah
   140048a10:	(bad)  
   140048a11:	out    0xdb,al
   140048a13:	and    ebx,0xffa724db
   140048a19:	fstp   QWORD PTR [rcx]
   140048a1b:	and    DWORD PTR [rax+0x4f],esp
   140048a1e:	rex.WX add al,0x2
   140048a21:	(bad)  
   140048a22:	adc    DWORD PTR [rdx+rbx*8-0x76a9017a],0x9a871d48
   140048a2d:	mov    bh,0xd4
   140048a2f:	out    dx,al
   140048a30:	cmp    BYTE PTR [rbp-0x295e3e1],cl
   140048a36:	(bad)  
   140048a37:	(bad)  
   140048a38:	sub    ah,BYTE PTR [rdi+0x4a2ee11f]
   140048a3e:	add    edi,DWORD PTR [rdx+0x3]
   140048a41:	jo     0x1400489f2
   140048a43:	leave  
   140048a44:	add    esp,eax
   140048a46:	mov    edi,0x78d1caac
   140048a4b:	jae    0x140048a40
   140048a4d:	outs   dx,DWORD PTR ds:[rsi]
   140048a4e:	rex.WRX xchg rdi,rax
   140048a50:	(bad)  
   140048a52:	jmp    0xcae495dd
   140048a57:	in     al,dx
   140048a58:	pop    rbp
   140048a59:	movabs ds:0x434206877c9887f2,eax
   140048a62:	push   rbp
   140048a63:	sbb    QWORD PTR [r12+r11*1+0x21],r13
   140048a68:	mov    BYTE PTR [rbx-0x19],ah
   140048a6b:	rol    BYTE PTR [rip+0xffffffff9d7fced6],cl        # 0xdd845947
   140048a71:	(bad)  
   140048a72:	(bad)  
   140048a73:	(bad)  
   140048a74:	ror    BYTE PTR [rsi+riz*8-0x16],cl
   140048a78:	(bad)  
   140048a79:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140048a7a:	rex.W pushf 
   140048a7c:	stc    
   140048a7d:	lahf   
   140048a7e:	out    0xfe,eax
   140048a80:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140048a81:	mov    dl,0x5a
   140048a83:	rex.RXB (bad) 
   140048a85:	mov    ebx,0xfd2a4151
   140048a8a:	fsincos 
   140048a8c:	mov    esp,0xd7ba3693
   140048a91:	fcom   DWORD PTR [rcx+0x2c]
   140048a94:	add    DWORD PTR [rsp+rax*8],esp
   140048a97:	xor    al,0x20
   140048a99:	(bad)  
   140048a9a:	jae    0x140048aca
   140048a9c:	sbb    al,BYTE PTR [rbx]
   140048a9e:	lea    esp,[rax+riz*4+0x7692b8a4]
   140048aa5:	xchg   edx,eax
   140048aa6:	sub    eax,DWORD PTR [rcx]
   140048aa8:	leave  
   140048aa9:	(bad)
   140048aac:	(bad)  
   140048aad:	movabs ds:0xc8931171080f2c6,eax
   140048ab6:	sub    BYTE PTR [rdx+0x5a],ch
   140048ab9:	xor    r13d,DWORD PTR ds:[rax+0x69]
   140048abe:	lods   eax,DWORD PTR ds:[rsi]
   140048abf:	ret    0xc7e3
   140048ac2:	fyl2xp1 
   140048ac4:	and    al,0x77
   140048ac6:	sar    DWORD PTR [rax+rax*8+0x4bdc00de],1
   140048acd:	jb     0x140048ada
   140048acf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140048ad0:	(bad)  
   140048ad2:	outs   dx,DWORD PTR ds:[rsi]
   140048ad3:	js     0x140048ac5
   140048ad5:	not    DWORD PTR [edi-0xe7982f1]
   140048adc:	or     ch,dl
   140048ade:	push   rdx
   140048adf:	test   DWORD PTR [rsp+rsi*8-0x4],0x343e034e
   140048ae7:	mov    eax,0xdc5010d0
   140048aec:	je     0x140048a7d
   140048aee:	push   rcx
   140048aef:	pop    rcx
   140048af0:	xor    BYTE PTR [rax-0x27],bl
   140048af3:	loopne 0x140048adb
   140048af5:	fs add bl,bl
   140048af8:	(bad)  
   140048af9:	mov    dl,0xbc
   140048afb:	jge    0x140048b03
   140048afd:	mov    bh,0x7b
   140048aff:	lea    esp,[rax+0x6e154c75]
   140048b05:	push   rcx
   140048b06:	cli    
   140048b07:	mov    esp,ebp
   140048b09:	mov    edx,0xfbd660a4
   140048b0e:	rex.WRXB and r12b,r8b
   140048b11:	je     0x140048afa
   140048b13:	add    BYTE PTR [rbx+rbp*8-0x164bdfe],dh
   140048b1a:	addr32 cmp eax,0xaa4d020b
   140048b20:	add    al,0xa4
   140048b22:	jbe    0x140048b84
   140048b24:	add    ecx,DWORD PTR [rax]
   140048b26:	xchg   ebp,eax
   140048b27:	mov    BYTE PTR [rdi],cl
   140048b29:	pop    rax
   140048b2a:	retf   0xfe42
   140048b2d:	cwde   
   140048b2e:	in     al,0xc5
   140048b30:	test   ch,al
   140048b32:	rex.WB
   140048b33:	rex.WRX or rax,r14
   140048b36:	or     DWORD PTR [rdi+0x48],ebp
   140048b39:	mov    ecx,0x63e05abf
   140048b3e:	mov    eax,0xd7127c47
   140048b43:	imul   edi,DWORD PTR [rdx+rdx*1],0x7d985611
   140048b4a:	out    0x1,al
   140048b4c:	test   BYTE PTR [rsi-0x5fb9da24],0x37
   140048b53:	add    bh,dh
   140048b55:	mov    bh,BYTE PTR [rdx+rdx*1+0x7c1f2ff1]
   140048b5c:	jrcxz  0x140048b21
   140048b5e:	(bad)  
   140048b5f:	xor    BYTE PTR [rbx+0x39],bl
   140048b62:	hlt    
   140048b63:	xchg   ebx,eax
   140048b64:	mov    edx,0xe8f88ab0
   140048b69:	stc    
   140048b6a:	push   rbp
   140048b6b:	xchg   ebp,eax
   140048b6c:	es xor al,0x88
   140048b6f:	(bad)  
   140048b70:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140048b71:	imul   edx,eax,0x8109a1a6
   140048b77:	adc    BYTE PTR [rdx],al
   140048b79:	(bad)  
   140048b7a:	dec    BYTE PTR [rsi]
   140048b7c:	ret    
   140048b7d:	mov    ch,0x43
   140048b7f:	cmp    BYTE PTR [rdi+0x72],bl
   140048b82:	jrcxz  0x140048b4e
   140048b84:	and    eax,0xa49c2e56
   140048b89:	mov    edx,0xfb660172
   140048b8e:	and    ch,0xd2
   140048b91:	or     al,BYTE PTR [rip+0xffffffffd37fa162]        # 0x113842cf9
   140048b97:	xchg   esi,eax
   140048b98:	stc    
   140048b99:	ins    BYTE PTR es:[rdi],dx
   140048b9a:	fldcw  WORD PTR [rdi-0x59]
   140048b9d:	ins    DWORD PTR es:[rdi],dx
   140048b9e:	clc    
   140048b9f:	(bad)  
   140048ba0:	cmp    esi,edi
   140048ba2:	movabs ds:0xe5da42a5cce567d2,al
   140048bab:	(bad)  
   140048bac:	push   rcx
   140048bad:	push   rbx
   140048bae:	(bad)  
   140048baf:	sbb    BYTE PTR [rip+0xffffffff83440750],al        # 0xc3489305
   140048bb5:	jmp    0x122eeac64
   140048bba:	jo     0x140048bcb
   140048bbc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140048bbd:	adc    DWORD PTR [rbx],ebp
   140048bbf:	push   rax
   140048bc0:	repnz rcl BYTE PTR [rax+0x658801c8],1
   140048bc7:	mov    r13b,0x4e
   140048bca:	(bad)  
   140048bcb:	jno    0x140048bad
   140048bcd:	mov    al,BYTE PTR [rdx+rsi*8-0x353c4b39]
   140048bd4:	jge    0x140048c03
   140048bd6:	rex.WRXB add QWORD PTR [r11+0x27],r9
   140048bda:	push   0x1500cb69
   140048bdf:	loope  0x140048b8a
   140048be1:	lahf   
   140048be2:	in     al,0x85
   140048be4:	mov    bh,0xd1
   140048be6:	pop    rbp
   140048be7:	cmp    esp,eax
   140048be9:	(bad)  
   140048bea:	rex.WRX add r15,QWORD PTR [rdx+0x3]
   140048bee:	jo     0x140048c1f
   140048bf0:	enter  0xca2d,0x7d
   140048bf4:	(bad)  
   140048bf6:	jl     0x140048bd7
   140048bf8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140048bf9:	jmp    0x140048b90
   140048bfb:	int    0xbf
   140048bfd:	pop    rdx
   140048bfe:	(bad)  
   140048bff:	lods   al,BYTE PTR ds:[rsi]
   140048c00:	jns    0x140048c59
   140048c02:	or     al,0x50
   140048c04:	jno    0x140048c3c
   140048c06:	adc    al,0xc3
   140048c08:	cmp    al,0x7e
   140048c0a:	push   rbx
   140048c0b:	xor    ecx,DWORD PTR [rbx]
   140048c0d:	xor    eax,0xd406960d
   140048c12:	adc    eax,esi
   140048c14:	add    ah,ch
   140048c16:	ficom  DWORD PTR [rcx]
   140048c18:	mul    BYTE PTR [rsi+0x33]
   140048c1b:	(bad)  
   140048c1c:	mov    ebp,DWORD PTR [rdi]
   140048c1e:	mov    dl,0xb6
   140048c20:	jne    0x140048c3c
   140048c22:	mov    edi,0x66108573
   140048c27:	sbb    DWORD PTR [rcx],esi
   140048c29:	ja     0x140048bb3
   140048c2b:	sbb    DWORD PTR [rax+0x2e812310],eax
   140048c31:	out    0x3e,eax
   140048c33:	push   rdi
   140048c34:	add    al,cl
   140048c36:	or     eax,0x814ace40
   140048c3b:	fidiv  WORD PTR [rdi-0x2ad14353]
   140048c41:	repz add dl,BYTE PTR [rcx+0x1512a3e8]
   140048c48:	cmp    al,BYTE PTR [rax]
   140048c4a:	test   eax,0x21141814
   140048c4f:	add    BYTE PTR [rcx],ch
   140048c51:	push   rbx
   140048c52:	(bad)  
   140048c53:	pop    rax
   140048c54:	add    eax,0x7021
   140048c59:	enter  0x8d51,0x66
   140048c5d:	rex.WX mov al,0xe4
   140048c60:	push   rcx
   140048c61:	movsxd edx,DWORD PTR [rcx-0x7]
   140048c64:	xor    esp,DWORD PTR [rip+0x16c1b490]        # 0x156c640fa
   140048c6a:	(bad)  
   140048c6b:	mov    bl,bh
   140048c6d:	add    ah,BYTE PTR [rdx+0x34]
   140048c70:	and    BYTE PTR [rdx],dh
   140048c72:	cmp    al,cl
   140048c74:	fidiv  WORD PTR [rbx-0x24]
   140048c77:	and    eax,0x37b4343
   140048c7c:	jo     0x140048c35
   140048c7e:	retf   
   140048c7f:	sub    eax,0xf23ff3c
   140048c84:	(bad)  
   140048c85:	stc    
   140048c86:	push   0xffffffffabfc3b58
   140048c8b:	mov    bl,0x85
   140048c8d:	cmc    
   140048c8e:	add    eax,0x63510d57
   140048c93:	cli    
   140048c94:	mov    DWORD PTR [rsi],eax
   140048c96:	mov    ah,0x89
   140048c98:	mov    ch,0x7e
   140048c9a:	(bad)  
   140048c9b:	call   0xff8cea05
   140048ca0:	stos   DWORD PTR es:[rdi],eax
   140048ca1:	mov    ebp,0x1b2b061d
   140048ca6:	adc    al,0xc3
   140048ca8:	adc    edi,edx
   140048caa:	scas   eax,DWORD PTR es:[rdi]
   140048cab:	pop    rdi
   140048cac:	(bad)  
   140048cad:	icebp  
   140048cae:	loop   0x140048cd9
   140048cb0:	(bad)  
   140048cb1:	xchg   edi,eax
   140048cb2:	iret   
   140048cb3:	rex.RB out dx,eax
   140048cb5:	(bad)  
   140048cb6:	push   0xfffffffffffffff9
   140048cb8:	jb     0x140048cd4
   140048cba:	stc    
   140048cbb:	add    eax,0xba53793e
   140048cc0:	rex.W jp 0x140048c7a
   140048cc3:	cld    
   140048cc4:	xchg   edi,eax
   140048cc5:	adc    BYTE PTR [rcx+rcx*8-0x7c],bh
   140048cc9:	and    BYTE PTR [rdi],ch
   140048ccb:	(bad)  
   140048ccc:	mov    BYTE PTR [rbx-0x21bdbf2f],cl
   140048cd2:	(bad)  
   140048cd3:	sar    dh,1
   140048cd5:	(bad)  
   140048cd6:	int    0x3f
   140048cd8:	and    DWORD PTR [rdx],edx
   140048cda:	(bad)  
   140048cdb:	pushf  
   140048cdc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140048cdd:	push   0xffffffffe4fe7a21
   140048ce2:	mov    cl,0x45
   140048ce4:	xor    DWORD PTR [rbp+0xebbcfb5],eax
   140048cea:	clc    
   140048ceb:	mov    bl,BYTE PTR [edi+0x1a5c04fa]
   140048cf2:	cmp    ah,dl
   140048cf4:	pop    rsi
   140048cf5:	fst    DWORD PTR [rip+0xffffffffa6998c98]        # 0xe69e1993
   140048cfb:	mov    es,ecx
   140048cfd:	xchg   esp,eax
   140048cfe:	sub    ch,BYTE PTR [rax-0x580ad74e]
   140048d04:	(bad)  
   140048d05:	retf   0x12f6
   140048d08:	ja     0x140048d0b
   140048d0a:	xor    eax,0x770037b8
   140048d0f:	mov    bl,0x1c
   140048d11:	push   0x37aa05ed
   140048d16:	sahf   
   140048d17:	cmp    ah,dh
   140048d19:	fldenv [rsi-0x3]
   140048d1c:	call   0x15f337ad0
   140048d21:	fidiv  WORD PTR [rax-0x2b]
   140048d24:	or     BYTE PTR [rcx],dl
   140048d26:	(bad)  
   140048d27:	adc    eax,0x535c0427
   140048d2c:	adc    eax,DWORD PTR [rdx+0x43]
   140048d2f:	rex.W test BYTE PTR [rdi],bl
   140048d32:	sti    
   140048d33:	or     DWORD PTR [rbp-0x33],esi
   140048d36:	cmp    BYTE PTR [rcx+rbp*1+0x37],cl
   140048d3a:	mov    ?,WORD PTR [rcx]
   140048d3c:	popf   
   140048d3d:	(bad)  
   140048d3e:	rex.WR mov dil,0x5e
   140048d41:	(bad)  
   140048d42:	cmc    
   140048d43:	ret    0x8a69
   140048d46:	popf   
   140048d47:	sub    ebp,DWORD PTR [rax-0x68]
   140048d4a:	mov    ch,0xb5
   140048d4c:	cld    
   140048d4d:	adc    al,0xfe
   140048d4f:	movsxd edi,DWORD PTR [rbp-0x1]
   140048d52:	je     0x140048d1e
   140048d54:	imul   ecx,ecx,0xfffffff3
   140048d57:	shl    DWORD PTR [rsi-0x7dec5200],cl
   140048d5d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140048d5e:	mov    al,0x3f
   140048d60:	std    
   140048d61:	(bad)  
   140048d62:	iret   
   140048d63:	gs and al,0xde
   140048d66:	retf   0x91fb
   140048d69:	or     eax,DWORD PTR [rax]
   140048d6b:	(bad)  
   140048d6c:	rex.WRB xor al,0x6
   140048d6f:	movabs ds:0x6400386a0806f5a4,al
   140048d78:	sub    al,0x5f
   140048d7a:	and    al,0x56
   140048d7c:	add    BYTE PTR [rdi+riz*8-0x16],ch
   140048d80:	(bad)  
   140048d81:	pop    QWORD PTR [rax-0x345f48a8]
   140048d87:	and    eax,0x951c949
   140048d8c:	leave  
   140048d8d:	and    BYTE PTR [rdx-0x5a],al
   140048d90:	adc    al,0x58
   140048d92:	xchg   esi,eax
   140048d93:	add    BYTE PTR [rax],0x15
   140048d96:	int    0x9b
   140048d98:	mov    esi,0x34a42e4b
   140048d9d:	loopne 0x140048d2d
   140048d9f:	scas   al,BYTE PTR es:[rdi]
   140048da0:	(bad)  
   140048da1:	adc    al,0xb7
   140048da3:	sti    
   140048da4:	add    BYTE PTR [rdx+0x79],bh
   140048da7:	or     eax,0xfe7595e4
   140048dac:	add    ch,BYTE PTR [rax]
   140048dae:	fcomip st,st(4)
   140048db0:	loopne 0x140048d53
   140048db2:	(bad)  
   140048db3:	ficomp DWORD PTR [rdi+0x39]
   140048db6:	cld    
   140048db7:	push   rdi
   140048db8:	ja     0x140048d51
   140048dba:	jg     0x1b9c6c33c
   140048dc0:	outs   dx,DWORD PTR ds:[rsi]
   140048dc1:	xor    al,0xdf
   140048dc3:	add    BYTE PTR [rsi+rax*4-0x247bb260],0x43
   140048dcb:	rex
   140048dcc:	rex.X
   140048dcd:	rex push rcx
   140048dcf:	data16 or ch,dl
   140048dd2:	fs xchg ecx,esp
   140048dd5:	js     0x140048d60
   140048dd7:	jb     0x140048e4a
   140048dd9:	cdq    
   140048dda:	in     eax,dx
   140048ddb:	sub    edx,DWORD PTR [rdi+0x18]
   140048dde:	outs   dx,DWORD PTR ds:[rsi]
   140048ddf:	mov    ebp,0x97a5c2c0
   140048de4:	(bad)  
   140048de5:	(bad)  
   140048de6:	lods   eax,DWORD PTR ds:[rsi]
   140048de7:	cmc    
   140048de8:	xlat   BYTE PTR ds:[rbx]
   140048de9:	push   rdx
   140048dea:	jg     0x140048dcf
   140048dec:	loopne 0x140048d7d
   140048dee:	and    BYTE PTR [rbx],0x32
   140048df1:	lock push rdx
   140048df3:	mov    bh,0x5f
   140048df5:	and    bl,al
   140048df7:	mov    ah,0xbd
   140048df9:	add    BYTE PTR [rdx-0x618b7e73],dl
   140048dff:	(bad)  
   140048e00:	pop    rsp
   140048e01:	cmp    ebx,DWORD PTR [rsp+rax*1]
   140048e04:	jrcxz  0x140048e26
   140048e06:	rex.RX xchg esp,eax
   140048e08:	(bad)  
   140048e09:	(bad)  
   140048e0a:	and    esp,DWORD PTR [rcx+rdx*2+0x1d5c1a8]
   140048e11:	sub    eax,0x15107a63
   140048e16:	(bad)  
   140048e17:	pop    rax
   140048e18:	jl     0x140048da7
   140048e1a:	push   rbp
   140048e1b:	or     BYTE PTR [rdx-0x49dd7cb3],bh
   140048e21:	mov    dh,0xa0
   140048e23:	in     eax,dx
   140048e24:	fild   DWORD PTR [rbx-0x563fcb5a]
   140048e2a:	lods   eax,DWORD PTR ds:[rsi]
   140048e2b:	cmp    edx,DWORD PTR [rax]
   140048e2d:	adc    bl,BYTE PTR [rax+rcx*4-0x56f1bddd]
   140048e34:	fnstsw WORD PTR [rax]
   140048e36:	test   DWORD PTR [rdx],0x78508064
   140048e3c:	sbb    ch,0xcf
   140048e3f:	add    edi,edi
   140048e41:	mov    bh,BYTE PTR [rsi]
   140048e43:	add    ch,al
   140048e45:	in     eax,0x75
   140048e47:	and    eax,0x1f860b7
   140048e4c:	(bad)  
   140048e4d:	xor    eax,edi
   140048e4f:	push   rdi
   140048e50:	jmp    rdx
   140048e52:	(bad)  
   140048e53:	(bad)  
   140048e54:	loope  0x140048e15
   140048e56:	jns    0x140048ecb
   140048e58:	cmc    
   140048e59:	enter  0x648,0x63
   140048e5d:	pushf  
   140048e5e:	repz add al,0x8d
   140048e61:	(bad)  
   140048e62:	jg     0x140048e6c
   140048e64:	or     eax,0xafcf468d
   140048e69:	rex.WRB
   140048e6a:	shl    DWORD PTR [r12+r14*1],cl
   140048e6e:	movabs eax,ds:0x7dd30b0d340d3421
   140048e77:	retf   0x63cd
   140048e7a:	(bad)  
   140048e7b:	rex.B cdq 
   140048e7d:	pop    rsp
   140048e7e:	ds (bad) 
   140048e80:	(bad)  
   140048e81:	(bad)  
   140048e82:	sub    esp,edi
   140048e84:	mov    ch,0xd8
   140048e86:	repz (bad) 
   140048e88:	mov    ah,0x4a
   140048e8a:	cmp    bh,ah
   140048e8c:	std    
   140048e8d:	and    eax,0xea4b7f29
   140048e92:	leave  
   140048e93:	sub    DWORD PTR [rax+0x17],eax
   140048e96:	xchg   ebp,eax
   140048e97:	mov    bh,0xa
   140048e99:	and    al,BYTE PTR [rbx]
   140048e9c:	test   eax,0xb6e7afb6
   140048ea1:	call   QWORD PTR [rdi+rdi*8-0x7d7ff5a5]
   140048ea8:	(bad)  
   140048ea9:	add    DWORD PTR [rcx-0x7d2f0ce5],ebp
   140048eaf:	rol    DWORD PTR [rax+0x451b406b],cl
   140048eb5:	rex.XB lods al,BYTE PTR ds:[rsi]
   140048eb7:	add    al,0x24
   140048eb9:	test   DWORD PTR [rsi],esi
   140048ebb:	jbe    0x140048f0c
   140048ebd:	mov    dh,0x42
   140048ebf:	cmp    edx,eax
   140048ec1:	lock imul edi,DWORD PTR [rdi+0x730ebb92],0xcf3b6292
   140048ecc:	xor    eax,DWORD PTR [rcx*4+0x44649420]
   140048ed3:	std    
   140048ed4:	sub    DWORD PTR [rdi],0x3b836e70
   140048eda:	mov    esp,0x801bd01a
   140048edf:	mov    ebx,0xe6595e49
   140048ee4:	stos   DWORD PTR es:[rdi],eax
   140048ee5:	mov    cs,WORD PTR [rdi+0x1cb7d1dd]
   140048eeb:	pop    rdi
   140048eec:	(bad)  
   140048eed:	cmc    
   140048eee:	popf   
   140048eef:	cmc    
   140048ef0:	sti    
   140048ef1:	jle    0x140048f5d
   140048ef3:	outs   dx,DWORD PTR ds:[rsi]
   140048ef4:	stc    
   140048ef5:	mov    BYTE PTR [rbx-0x50],ah
   140048ef8:	add    dl,ah
   140048efa:	or     BYTE PTR [rdx],dl
   140048efc:	xchg   ebp,eax
   140048efd:	test   BYTE PTR es:[rdx],bl
   140048f00:	rex.X or eax,0x8ccd0d4d
   140048f06:	rcl    ah,1
   140048f08:	mov    eax,0x8d43e350
   140048f0d:	xlat   BYTE PTR ds:[rbx]
   140048f0e:	xchg   cl,dl
   140048f10:	xchg   DWORD PTR fs:[rdx+0x38],esi
   140048f14:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140048f15:	pop    rax
   140048f16:	fucom  st(4)
   140048f18:	(bad)  
   140048f19:	out    dx,al
   140048f1a:	cs (bad) 
   140048f1c:	(bad)  
   140048f1d:	imul   edx,DWORD PTR [rsi],0xf6465fb7
   140048f23:	ja     0x140048f0d
   140048f25:	mov    dh,0xe0
   140048f27:	(bad)  
   140048f28:	lock lahf 
   140048f2a:	pop    rax
   140048f2b:	cmp    cl,ah
   140048f2d:	rex.WXB jle 0x140048ee7
   140048f30:	cmp    dl,BYTE PTR [rbx+0x22b1ffb8]
   140048f36:	loopne 0x140048f1e
   140048f38:	sub    al,al
   140048f3a:	repz cmc 
   140048f3c:	jmp    FWORD PTR [rsi+0x69]
   140048f3f:	mov    cs,WORD PTR [rsi+0x62]
   140048f42:	bndldx (bad),[rbp+rax*1-0x6ff5d2fe]
   140048f4a:	mov    edx,0x30182681
   140048f4f:	sbb    BYTE PTR [rdx-0x69],dh
   140048f52:	(bad)  
   140048f53:	add    bl,BYTE PTR [rip+0xffffffffb6c3bcdb]        # 0xf6c84c34
   140048f59:	xchg   ebx,eax
   140048f5a:	rex.X adc DWORD PTR [rcx],esp
   140048f5d:	iret   
   140048f5e:	or     al,0xec
   140048f60:	jb     0x140048f73
   140048f62:	cmp    r8b,BYTE PTR [rsi]
   140048f65:	and    esp,0xfffffff5
   140048f68:	movabs eax,ds:0x98fe1e10a0141a5b
   140048f71:	ins    BYTE PTR es:[rdi],dx
   140048f72:	mov    edi,0x700e2e93
   140048f77:	(bad)  
   140048f78:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140048f79:	add    DWORD PTR [rbp+0xa],edi
   140048f7c:	jo     0x140048fb5
   140048f7e:	enter  0xc87c,0x9f
   140048f82:	cmp    eax,0xc5abe3ff
   140048f87:	xchg   ebx,eax
   140048f88:	ret    
   140048f89:	vmaxpd ymm7,ymm15,YMMWORD PTR [rcx+0x5dfc71be]
   140048f91:	(bad)  
   140048f92:	xchg   edi,eax
   140048f93:	mov    rbx,db0
   140048f96:	xor    DWORD PTR [rbp+0x774c7114],eax
   140048f9c:	or     ah,dl
   140048f9e:	and    DWORD PTR [rax],esp
   140048fa0:	movabs eax,ds:0x2c750ca6a6bf416e
   140048fa9:	add    DWORD PTR [rdx],ebp
   140048fab:	xor    al,0x4e
   140048fad:	sbb    ah,cl
   140048faf:	neg    BYTE PTR [rax]
   140048fb1:	sbb    al,0x7b
   140048fb3:	and    eax,DWORD PTR [rcx]
   140048fb5:	(bad)  
   140048fb6:	out    dx,al
   140048fb7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140048fb8:	repz sbb al,0xde
   140048fbb:	cmp    cl,BYTE PTR [rcx+0x79]
   140048fbe:	in     eax,dx
   140048fbf:	and    dh,BYTE PTR [rbx+rdx*1]
   140048fc2:	xor    BYTE PTR [rsi+rbx*2],dl
   140048fc5:	push   rsp
   140048fc6:	sub    DWORD PTR [rsi+rcx*1],esp
   140048fc9:	(bad)  
   140048fca:	lock movabs ds:0x8c4476af275ccb6d,al
   140048fd4:	and    BYTE PTR [rcx+0x5824bcf6],bh
   140048fda:	mov    dl,BYTE PTR [rax]
   140048fdc:	and    r11b,BYTE PTR [rax+0x1401c1d7]
   140048fe3:	(bad)  
   140048fe4:	sahf   
   140048fe5:	scas   eax,DWORD PTR es:[rdi]
   140048fe6:	push   rcx
   140048fe7:	stc    
   140048fe8:	and    eax,0x2140a560
   140048fed:	add    al,0x45
   140048fef:	(bad)  
   140048ff0:	push   0xffffffff93319268
   140048ff5:	rex.RX rcl DWORD PTR [rax],1
   140048ff8:	movabs ds:0x8f62f2e5b07ab884,eax
   140049001:	push   rbx
   140049002:	xchg   edi,eax
   140049003:	movabs al,ds:0x52da02fac5070317
   14004900c:	gs and cl,BYTE PTR cs:[rax-0x3e]
   140049011:	adc    cl,al
   140049013:	(bad)  
   140049014:	ret    0x8d48
   140049017:	(bad)  
   140049018:	or     eax,0xfb28fe87
   14004901d:	lahf   
   14004901e:	add    al,0xfe
   140049020:	and    eax,0xe53b330
   140049025:	scas   eax,DWORD PTR es:[rdi]
   140049026:	jmp    0x1881f8d22
   14004902b:	(bad)  
   14004902c:	add    esp,ebx
   14004902e:	jmp    0xff955b25
   140049033:	add    BYTE PTR [rsi],al
   140049035:	outs   dx,DWORD PTR ds:[rsi]
   140049036:	pop    rsi
   140049037:	jne    0x140048fd8
   140049039:	(bad)  
   14004903a:	lods   al,BYTE PTR ds:[rsi]
   14004903b:	lods   al,BYTE PTR ds:[rsi]
   14004903c:	std    
   14004903d:	xchg   ebx,eax
   14004903e:	stos   DWORD PTR es:[rdi],eax
   14004903f:	fwait
   140049040:	(bad)  
   140049041:	fidiv  WORD PTR [rbp+0x6047cb7]
   140049047:	mov    edi,DWORD PTR [rax]
   140049049:	jecxz  0x140049008
   14004904c:	rex.XB mov BYTE PTR [r13-0x2cbcaf02],sil
   140049053:	(bad)  
   140049054:	sub    BYTE PTR [rax+0x3334529e],ah
   14004905a:	jl     0x14004908f
   14004905c:	rex.XB (bad) 
   14004905e:	sbb    dl,ch
   140049060:	sbb    BYTE PTR [rdi+0x354184e],0x8a
   140049067:	cmc    
   140049068:	movabs ds:0x89b69e2fe2eeecec,eax
   140049071:	(bad)  
   140049072:	xlat   BYTE PTR ds:[rbx]
   140049073:	push   rcx
   140049074:	lods   eax,DWORD PTR ds:[rsi]
   140049075:	xchg   r9,rax
   140049077:	mov    dl,0x23
   140049079:	mov    dh,0xfd
   14004907b:	(bad)  
   14004907c:	movabs ds:0xee5b3cb5c4d42378,al
   140049085:	jg     0x140049021
   140049087:	(bad)  
   140049088:	fwait
   140049089:	xor    BYTE PTR [rsi+0x3675c7ae],dh
   14004908f:	or     DWORD PTR [rax-0x32],edi
   140049092:	imul   ecx,DWORD PTR [rbx-0x59],0x18672a
   140049099:	sub    ch,BYTE PTR [rax+0x50]
   14004909c:	pop    rsp
   14004909d:	nop
   14004909e:	clc    
   14004909f:	mov    eax,0xf809a451
   1400490a4:	push   rax
   1400490a5:	jrcxz  0x140049111
   1400490a7:	sbb    r12d,DWORD PTR [r9]
   1400490aa:	test   DWORD PTR [rcx],0xe483ed29
   1400490b0:	fldcw  WORD PTR [rcx-0x73]
   1400490b3:	(bad)  
   1400490b4:	cmp    BYTE PTR [rdi],dl
   1400490b6:	lea    eax,[rax-0x3bd81d7]
   1400490bc:	mov    edx,0x1ded8578
   1400490c1:	adc    DWORD PTR [rbx],esp
   1400490c3:	adc    esp,DWORD PTR [rcx+0x29]
   1400490c6:	test   ch,al
   1400490c8:	add    eax,0xf73cda0b
   1400490cd:	sub    ecx,ebx
   1400490cf:	pop    rdx
   1400490d0:	movabs eax,ds:0x770037a4c3b809cb
   1400490d9:	stos   BYTE PTR es:[rdi],al
   1400490da:	mov    esp,0x56e547fd
   1400490df:	int3   
   1400490e0:	mov    esi,0xbd2c22b5
   1400490e5:	movsxd ebx,ebp
   1400490e7:	(bad)  
   1400490e8:	mov    ecx,0x1ff471b0
   1400490ed:	pop    rbp
   1400490ee:	fnstcw WORD PTR [rsi+rdi*2]
   1400490f1:	(bad)
   1400490f6:	pop    rax
   1400490f7:	sar    BYTE PTR [rcx+0x5410a702],0xd1
   1400490fe:	rol    BYTE PTR [rax+0x33],1
   140049101:	rex.XB
   140049102:	fwait
   140049103:	sbb    DWORD PTR [rcx+0x5367e199],esp
   140049109:	jl     0x140049148
   14004910b:	test   ecx,ebx
   14004910d:	adc    al,0x69
   14004910f:	push   0x5c
   140049111:	push   0x4e19a9a0
   140049116:	outs   dx,BYTE PTR ds:[rsi]
   140049117:	push   rdx
   140049118:	ins    BYTE PTR es:[rdi],dx
   140049119:	sbb    al,0x45
   14004911b:	jl     0x1400490de
   14004911d:	(bad)  
   14004911e:	(bad)  
   14004911f:	ins    DWORD PTR es:[rdi],dx
   140049120:	xchg   esi,eax
   140049121:	(bad)  
   140049122:	pushf  
   140049123:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049124:	mov    esp,0x7d9a117a
   140049129:	and    BYTE PTR [rax-0x7ba146f8],dl
   14004912f:	rex.X ret 
   140049131:	add    esp,esp
   140049133:	lahf   
   140049134:	mov    ecx,0x3b95eb1
   140049139:	rcl    dl,1
   14004913b:	xor    ah,0x38
   14004913e:	or     eax,0x20e4c904
   140049143:	sti    
   140049144:	cmp    edx,DWORD PTR [rcx+0x20563b7a]
   14004914a:	cli    
   14004914b:	xlat   BYTE PTR ds:[rbx]
   14004914c:	sub    bh,BYTE PTR es:[rsi+0x5834820b]
   140049153:	cmp    ah,al
   140049155:	push   rax
   140049156:	jne    0x140049128
   140049158:	test   BYTE PTR [rax],bh
   14004915a:	pop    sp
   14004915c:	and    eax,0xb3a40bd9
   140049161:	sbb    BYTE PTR [rax+0x22],ah
   140049164:	add    al,0x25
   140049166:	cmp    BYTE PTR [rax],ah
   140049168:	xor    DWORD PTR [rdx],eax
   14004916a:	movabs ds:0xd4c922390b114a11,eax
   140049173:	loopne 0x140049129
   140049175:	jg     0x140049151
   140049177:	sub    al,0x42
   140049179:	add    BYTE PTR [rdi],ch
   14004917b:	jp     0x140049179
   14004917d:	mov    ebx,0xee41ff39
   140049182:	loopne 0x1400491ee
   140049184:	rex lahf 
   140049186:	add    bl,ah
   140049188:	mov    edx,edx
   14004918a:	sub    bh,BYTE PTR [rsi-0x75aded30]
   140049190:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140049191:	stos   DWORD PTR es:[rdi],eax
   140049192:	mov    ebp,0x4bcbc727
   140049197:	mov    edi,0xfee36378
   14004919c:	rex.WRXB pop r12
   14004919e:	pop    rdi
   14004919f:	ds int3 
   1400491a1:	ins    BYTE PTR es:[rdi],dx
   1400491a2:	mov    esp,0x7110e502
   1400491a7:	rcr    DWORD PTR [rdi],1
   1400491a9:	xlat   BYTE PTR ds:[rbx]
   1400491aa:	or     BYTE PTR [rbp+0xc],sil
   1400491ae:	sti    
   1400491af:	fwait
   1400491b0:	(bad)  
   1400491b1:	imul   ebp,DWORD PTR [rdx-0x76],0x7e4b9a66
   1400491b8:	adc    dl,BYTE PTR [rdx+0x6f]
   1400491bb:	cmp    eax,0x65940848
   1400491c0:	rex.RB mov r9d,0x937b1f71
   1400491c6:	or     DWORD PTR [rsi-0x15],ebp
   1400491c9:	je     0x1400491cf
   1400491cb:	push   QWORD PTR [rsi-0x1e]
   1400491ce:	(bad)  
   1400491cf:	lahf   
   1400491d0:	cwde   
   1400491d1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400491d2:	rex.RXB iret 
   1400491d4:	fdivrp st(5),st
   1400491d6:	(bad)  
   1400491d7:	icebp  
   1400491d8:	(bad)  
   1400491d9:	jb     0x1400491cb
   1400491db:	(bad)  
   1400491dc:	mov    r14b,0x21
   1400491df:	mov    edi,0xeb6f63d
   1400491e4:	movabs al,ds:0x77b1b49af3a4e195
   1400491ed:	add    al,0x5
   1400491ef:	or     eax,0x7058bf8
   1400491f4:	mov    DWORD PTR [rbp-0x2],esi
   1400491f7:	(bad)  
   1400491f8:	call   0x130457d8a
   1400491fd:	cs push rsi
   1400491ff:	xor    dh,BYTE PTR [rdx]
   140049201:	imul   ecx,DWORD PTR [rax-0x4f6ffbb2],0xe1784e84
   14004920b:	mov    WORD PTR [rbp-0x18],es
   14004920e:	shl    BYTE PTR [rcx-0x5c],cl
   140049211:	pop    rsi
   140049212:	or     BYTE PTR [rsi+0x4],0x20
   140049216:	(bad)  
   140049217:	sub    DWORD PTR [rdx],esp
   140049219:	mov    esi,0x5212a8de
   14004921e:	xor    al,0xa0
   140049220:	(bad)  
   140049221:	and    esp,DWORD PTR [rax-0x60d99e36]
   140049227:	add    bh,dh
   140049229:	test   DWORD PTR [rbp+0x7],edi
   14004922c:	or     eax,0xd01a5877
   140049231:	sbb    eax,DWORD PTR [rax-0x30a5bac5]
   140049237:	jb     0x140049269
   140049239:	in     al,0xf7
   14004923b:	mov    edx,edx
   14004923d:	mov    WORD PTR [rsi+0x1abe4c1c],ds
   140049243:	(bad)  
   140049244:	ss jg  0x14004922d
   140049247:	(bad)  
   140049248:	cli    
   140049249:	std    
   14004924a:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   14004924c:	sub    al,0x1e
   14004924e:	and    cl,BYTE PTR [rdi+rdx*4+0x738857c0]
   140049255:	xor    DWORD PTR [rcx],edi
   140049257:	(bad)  
   140049258:	fcom   DWORD PTR [rcx-0x1d]
   14004925b:	(bad)  
   14004925c:	sbb    ch,BYTE PTR [rbp+0x66]
   14004925f:	cdqe   
   140049261:	loope  0x1400492c9
   140049263:	xor    esp,DWORD PTR [rsp+rdx*8]
   140049266:	xor    DWORD PTR [rdi+0x56],edi
   140049269:	(bad)
   14004926c:	rcl    DWORD PTR [rsp+rax*4+0x62],1
   140049270:	mov    dh,0x4f
   140049272:	jns    0x140049260
   140049274:	and    esp,ebx
   140049276:	jo     0x140049244
   140049278:	lea    esi,[rbx+0x2f]
   14004927b:	mov    cl,0x7a
   14004927d:	icebp  
   14004927e:	add    eax,0x43cf9786
   140049283:	mov    ebp,0x45dd644b
   140049288:	rex.RB mov r9b,0xa5
   14004928b:	imul   DWORD PTR [rdi+rbp*8]
   14004928e:	xlat   BYTE PTR ds:[rbx]
   14004928f:	pop    rsp
   140049290:	(bad)  
   140049291:	rex.WXB
   140049292:	rex.RXB sbb r9b,BYTE PTR [r15]
   140049295:	mov    ah,0x83
   140049297:	(bad)  
   140049298:	shl    esi,cl
   14004929a:	clc    
   14004929b:	in     eax,dx
   14004929c:	jrcxz  0x1400492b4
   14004929e:	add    al,0x9c
   1400492a0:	(bad)  
   1400492a1:	sbb    esi,ebx
   1400492a3:	movabs ds:0x49964b175007007a,al
   1400492ac:	out    0x54,eax
   1400492ae:	and    cl,BYTE PTR [rdi-0x40]
   1400492b1:	sub    al,BYTE PTR [rdi]
   1400492b3:	xchg   ecx,eax
   1400492b4:	jle    0x14004931a
   1400492b6:	mov    ebp,0x40067301
   1400492bb:	or     al,0x14
   1400492bd:	(bad)  
   1400492be:	sub    al,BYTE PTR [rcx]
   1400492c0:	sbb    eax,0x6bbb4403
   1400492c5:	(bad)  
   1400492c6:	push   rsi
   1400492c7:	jl     0x140049279
   1400492c9:	mov    ebx,DWORD PTR [rbp+0x307612aa]
   1400492cf:	or     BYTE PTR [rax],dh
   1400492d1:	(bad)  
   1400492d2:	cli    
   1400492d3:	cmp    eax,0x1e2f2c3f
   1400492d8:	stc    
   1400492d9:	jne    0x140049358
   1400492db:	loopne 0x140049329
   1400492dd:	out    0xc0,eax
   1400492df:	sar    DWORD PTR [rbx+0x1bd2f75e],cl
   1400492e5:	adc    bh,0xab
   1400492e8:	int3   
   1400492e9:	xchg   DWORD PTR [rdx+0x5df8f5d],edx
   1400492ef:	cli    
   1400492f0:	mov    dh,BYTE PTR [rdi+0x1def3b96]
   1400492f6:	mov    es,WORD PTR [rsi-0x2908581]
   1400492fc:	(bad)  
   1400492fd:	jae    0x1400492d6
   1400492ff:	push   rsi
   140049300:	mov    ?,WORD PTR [rcx+0x3346b0bf]
   140049306:	pop    rsp
   140049307:	(bad)  
   140049308:	stc    
   140049309:	xchg   edx,eax
   14004930a:	rex.X sbb al,0x41
   14004930d:	xchg   ebp,eax
   14004930e:	xchg   BYTE PTR [rax-0x2a63b2f5],al
   140049314:	push   rdi
   140049315:	iret   
   140049316:	sub    BYTE PTR [rdx+0x70ccd219],bl
   14004931c:	int    0x2c
   14004931e:	ss (bad) 
   140049320:	push   0xffffffffe389ae6c
   140049325:	mov    esi,0xe72b0ee3
   14004932a:	sub    BYTE PTR [rsi],dh
   14004932c:	(bad)  
   14004932d:	mov    bl,0x3f
   14004932f:	cdq    
   140049330:	rcr    BYTE PTR [rsp+rdi*1-0x3d],1
   140049334:	retf   0x69d6
   140049337:	fmul   st(5),st
   140049339:	imul   esi,DWORD PTR [rcx-0x19996f9e],0x29
   140049340:	(bad)  
   140049341:	(bad)  
   140049342:	test   eax,0xf92d901d
   140049347:	sbb    r9,QWORD PTR [r14+0x3b]
   14004934b:	rex.WB sub al,0xbf
   14004934e:	adc    al,BYTE PTR ss:[rax+0x665ce156]
   140049355:	add    al,0xd2
   140049357:	mov    DWORD PTR [rax],eax
   140049359:	in     al,dx
   14004935a:	jge    0x140049325
   14004935c:	and    BYTE PTR [rdi+rbp*4],ah
   14004935f:	outs   dx,DWORD PTR ds:[rsi]
   140049360:	mov    edi,0x23338035
   140049365:	movabs al,ds:0x73400c268ae7d922
   14004936e:	adc    al,0xa0
   140049370:	enter  0xd5fc,0x4b
   140049374:	rol    DWORD PTR [rbp-0x5659fe8b],1
   14004937a:	ror    esi,0xb0
   14004937d:	mov    BYTE PTR [rsi+0x22],al
   140049380:	retf   
   140049381:	push   rax
   140049382:	push   rbx
   140049383:	lods   al,BYTE PTR ds:[rsi]
   140049384:	(bad)  
   140049385:	rex.X mov ds,WORD PTR [rsi+0x1a]
   140049389:	cmp    esp,DWORD PTR [rdi+0x11]
   14004938c:	leave  
   14004938d:	movsxd edx,edx
   14004938f:	rex.WX loope 0x140049353
   140049392:	ja     0x140049407
   140049394:	cmc    
   140049395:	fnstsw WORD PTR [rdi-0x1698fc32]
   14004939b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004939c:	add    DWORD PTR [rdi-0x7b889407],edi
   1400493a2:	adc    eax,ebp
   1400493a4:	or     eax,0x6e4debc0
   1400493a9:	stos   DWORD PTR es:[rdi],eax
   1400493aa:	mov    ?,WORD PTR [rbx+0x9]
   1400493ad:	add    BYTE PTR [rax],al
   1400493af:	and    BYTE PTR [rax],al
   1400493b1:	rex.WB
   1400493b2:	rex.R
   1400493b3:	push   r12
   1400493b5:	in     eax,dx
   1400493b6:	jmp    0x140f41e76
   1400493bb:	push   QWORD PTR [rsi+0x47bbc6e2]
   1400493c1:	push   rbp
   1400493c2:	icebp  
   1400493c3:	xor    DWORD PTR [rbx-0x45a03c1b],0xffffffbe
   1400493ca:	jp     0x140049374
   1400493cc:	mov    edx,0x64c9b8b1
   1400493d1:	mov    ah,0x82
   1400493d3:	push   rsp
   1400493d4:	and    ebx,DWORD PTR [rdi+rbp*1+0x8bd44f0]
   1400493db:	sbb    al,BYTE PTR [rax+0x1b]
   1400493de:	rex.X cmp eax,0xaf834243
   1400493e4:	(bad)  
   1400493e5:	cmp    BYTE PTR [rbx-0x14],bh
   1400493e8:	rex.X or DWORD PTR [rbx],0xffffffb5
   1400493ec:	xchg   ecx,eax
   1400493ed:	push   0xffffffffca13af92
   1400493f2:	fld    DWORD PTR [rdi+rsi*2]
   1400493f5:	in     al,0x41
   1400493f7:	cld    
   1400493f8:	loop   0x14004940c
   1400493fa:	push   rdi
   1400493fb:	mov    dh,0x2e
   1400493fd:	mov    al,0x7c
   1400493ff:	icebp  
   140049400:	add    eax,0x22ce9786
   140049405:	rcr    DWORD PTR [rbx+0x26dec128],cl
   14004940b:	cmp    BYTE PTR [rdx+rax*1-0x4940454f],dl
   140049412:	mov    eax,esi
   140049414:	pushf  
   140049415:	(bad)  
   140049416:	outs   dx,DWORD PTR ds:[rsi]
   140049417:	jge    0x140049412
   140049419:	pushf  
   14004941a:	xchg   edx,eax
   14004941b:	(bad)  
   14004941c:	cmp    al,0xc0
   14004941e:	cmp    ebx,eax
   140049420:	(bad)  
   140049421:	fiadd  DWORD PTR [rsi+0x1c]
   140049424:	sar    BYTE PTR [rdx+0x0],0x4c
   140049428:	jmp    0xf99e8b02
   14004942d:	add    BYTE PTR [rcx+0x681ae02a],dh
   140049433:	(bad)  
   140049434:	sar    BYTE PTR [rbx+rcx*2],0x17
   140049438:	jl     0x14004944a
   14004943a:	rex.WXB add rax,0xffffffff972406c8
   140049440:	lock jae 0x14004940b
   140049443:	adc    DWORD PTR [rbx+0x7d],eax
   140049446:	adc    eax,0xe5c05c41
   14004944b:	(bad)
   14004944e:	loopne 0x140049467
   140049450:	xor    dl,BYTE PTR [rbx-0x13405f28]
   140049456:	shl    BYTE PTR [rip+0xffffffff9e421f21],cl        # 0xde46b37d
   14004945c:	adc    esi,DWORD PTR [rax-0x68]
   14004945f:	leave  
   140049460:	(bad)  
   140049461:	mov    eax,0xde80d343
   140049466:	add    BYTE PTR [rsi+rbx*1-0xb56a1c],bh
   14004946d:	or     al,BYTE PTR [rbp-0x41464781]
   140049473:	mov    dl,0xc9
   140049475:	in     al,0xd1
   140049477:	retf   0x77eb
   14004947a:	xor    BYTE PTR [rsi-0x8],bl
   14004947d:	js     0x140049432
   14004947f:	mov    eax,0xd2ceecf1
   140049484:	(bad)  
   140049485:	js     0x1400494ee
   140049487:	(bad)  
   140049488:	(bad)  
   140049489:	std    
   14004948a:	ror    DWORD PTR [rdx],1
   14004948c:	mov    bl,0xd1
   14004948e:	adc    dl,BYTE PTR [rdx+0x54]
   140049491:	loopne 0x14004949d
   140049493:	or     edi,ecx
   140049495:	movabs ds:0x299a46a6d0684be2,eax
   14004949e:	mov    esi,0x37df9e8e
   1400494a3:	or     eax,0x7116612
   1400494a8:	mov    al,0xf0
   1400494aa:	pop    rdi
   1400494ab:	mov    ah,ch
   1400494ad:	mov    ebp,0x4f3bc146
   1400494b2:	jne    0x140049498
   1400494b4:	add    DWORD PTR [rsi-0x3a26654d],esp
   1400494ba:	xor    ebp,DWORD PTR [rsi+rbx*2-0x1c80fe88]
   1400494c1:	xor    bl,dl
   1400494c3:	int3   
   1400494c4:	mov    ch,ch
   1400494c6:	jbe    0x1400494b9
   1400494c8:	jo     0x140049547
   1400494ca:	retf   0x21fd
   1400494cd:	xlat   BYTE PTR ds:[rbx]
   1400494ce:	(bad)  
   1400494cf:	rcr    esp,cl
   1400494d1:	jg     0x140049484
   1400494d3:	jl     0x1400494ae
   1400494d5:	rol    DWORD PTR [rdx+0x7e79f37c],1
   1400494db:	rol    BYTE PTR [rdi-0x13],cl
   1400494de:	nop
   1400494df:	(bad)  
   1400494e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400494e1:	xor    eax,0xd2c6d200
   1400494e6:	shl    DWORD PTR [rbx-0x32cfefb9],1
   1400494ec:	add    eax,0x609489a0
   1400494f1:	xlat   BYTE PTR ds:[rbx]
   1400494f2:	(bad)  
   1400494f3:	movabs ds:0xf8d1a8380d224cb,eax
   1400494fc:	mov    eax,DWORD PTR [rax]
   1400494fe:	sub    BYTE PTR [rdi+0x70],0x75
   140049502:	and    esp,DWORD PTR [rip+0xffffffff81533a58]        # 0xc157cf60
   140049508:	shl    BYTE PTR [rcx+0x77],cl
   14004950b:	and    edx,DWORD PTR [rax+rcx*1+0x58fa677]
   140049512:	retf   
   140049513:	(bad)  
   140049514:	nop
   140049515:	fs add al,0x94
   140049518:	xchg   ecx,eax
   140049519:	(bad)  
   14004951a:	(bad)  
   14004951b:	cli    
   14004951c:	xchg   edx,eax
   14004951d:	pushf  
   14004951e:	(bad)  
   140049520:	or     eax,0xb3ae763d
   140049525:	xchg   DWORD PTR [rsi],edi
   140049527:	add    ch,al
   140049529:	in     eax,0x5b
   14004952b:	nop
   14004952c:	jns    0x14004956e
   14004952e:	scas   eax,DWORD PTR es:[rdi]
   14004952f:	sbb    ebx,esi
   140049531:	sti    
   140049532:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140049533:	addr32 (bad) 
   140049535:	rex.WRXB lods al,BYTE PTR ds:[rsi]
   140049537:	xor    DWORD PTR [rbp-0x32],edi
   14004953a:	movabs ds:0x785e337b78a295ef,eax
   140049543:	je     0x1400494f7
   140049545:	mov    eax,0xd69776ee
   14004954a:	fstp   DWORD PTR [rdi+0x58]
   14004954d:	gs jg  0x140049508
   140049550:	(bad)  
   140049551:	ins    BYTE PTR es:[rdi],dx
   140049552:	mov    eax,0x78472844
   140049557:	pop    rdi
   140049558:	loop   0x14004957f
   14004955a:	mov    dh,0xdc
   14004955c:	add    al,0x2
   14004955e:	(bad)  
   140049560:	hlt    
   140049561:	sti    
   140049562:	jp     0x1400494e6
   140049564:	fwait
   140049565:	rex.WRB movabs ds:0xfaf626d39f32b7c7,al
   14004956f:	xchg   ebx,eax
   140049570:	cli    
   140049571:	jmp    0x1400495d6
   140049573:	add    esp,ebx
   140049575:	(bad)  
   140049576:	xor    eax,0xf8c3f0e1
   14004957b:	in     eax,0x35
   14004957d:	outs   dx,DWORD PTR cs:[rsi]
   14004957f:	outs   dx,DWORD PTR ds:[rsi]
   140049580:	mov    bl,0x70
   140049582:	icebp  
   140049583:	adc    al,0xe3
   140049585:	rex.WXB out 0x90,eax
   140049588:	leave  
   140049589:	pop    rsi
   14004958a:	hlt    
   14004958b:	(bad)  
   14004958c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004958d:	rex.WR movabs ds:0x30b7c618d0afd3b1,al
   140049597:	js     0x1400495e4
   140049599:	in     eax,0xcd
   14004959b:	jp     0x140049574
   14004959d:	repnz test DWORD PTR [rdx],edi
   1400495a0:	retf   0xc9df
   1400495a3:	sti    
   1400495a4:	push   rbx
   1400495a5:	test   eax,0xbd77c4d0
   1400495aa:	mov    ch,0x49
   1400495ac:	retf   0x63bf
   1400495af:	mov    bl,0x8f
   1400495b1:	fs push rax
   1400495b3:	push   rax
   1400495b4:	test   BYTE PTR [rax+0x18],ch
   1400495b7:	push   rax
   1400495b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400495b9:	push   rbx
   1400495ba:	(bad)  
   1400495bb:	mov    esi,ds
   1400495bd:	mov    ecx,0xad2ae1f5
   1400495c2:	sbb    eax,0x29d2bb50
   1400495c7:	or     al,al
   1400495c9:	xchg   DWORD PTR [rsp+rax*1-0x3c],ebp
   1400495cd:	(bad)
   1400495d0:	out    dx,al
   1400495d1:	rex.WRX movabs ds:0xb52517749296092d,rax
   1400495db:	ja     0x1400495e5
   1400495dd:	push   rax
   1400495de:	movabs al,ds:0x1c1bf83e17ae3f47
   1400495e7:	sti    
   1400495e8:	or     eax,0xa034b0ee
   1400495ed:	(bad)  
   1400495ee:	add    BYTE PTR [rdi-0x75291b5],dh
   1400495f4:	(bad)
   1400495f7:	xchg   BYTE PTR [rdi+0x18efddf8],cl
   1400495fd:	int    0xf6
   1400495ff:	mov    esi,0x61fa57df
   140049604:	lods   eax,DWORD PTR ds:[rsi]
   140049605:	(bad)  
   140049606:	out    dx,eax
   140049607:	fwait
   140049608:	(bad)  
   140049609:	(bad)  
   14004960a:	cwde   
   14004960b:	lea    edx,[rdi-0x4f50e027]
   140049611:	cmp    ebx,DWORD PTR [rdx+0x66]
   140049614:	xor    bl,BYTE PTR [rdx-0x5a]
   140049617:	(bad)  
   140049618:	mov    WORD PTR [rcx],cs
   14004961a:	in     eax,0x10
   14004961c:	out    0x7,eax
   14004961e:	js     0x14004960f
   140049620:	jrcxz  0x14004966f
   140049622:	scas   al,BYTE PTR es:[rdi]
   140049623:	add    DWORD PTR [rsi+0x2d],0x5c1a6fd7
   14004962a:	cwde   
   14004962b:	loope  0x140049618
   14004962d:	sub    DWORD PTR [rdx],esi
   14004962f:	fwait
   140049630:	(bad)  
   140049631:	pop    rdx
   140049632:	jns    0x1400495dc
   140049634:	jae    0x14004962e
   140049636:	pop    rdi
   140049637:	pop    rax
   140049638:	fld    TBYTE PTR [rdi+0x439ecb68]
   14004963e:	add    eax,ecx
   140049640:	adc    eax,0x601e4794
   140049645:	push   rsi
   140049646:	(bad)  
   140049647:	(bad)  
   140049648:	xchg   edi,eax
   140049649:	(bad)  
   14004964a:	jb     0x140049638
   14004964c:	ret    0x8a49
   14004964f:	jmp    0x14004962c
   140049651:	movabs al,ds:0x4a042b739b1a18d3
   14004965a:	adc    eax,0xfd4b470a
   14004965f:	adc    eax,0x451d1872
   140049664:	out    0xf0,al
   140049666:	xor    ah,0x74
   140049669:	(bad)  
   14004966a:	add    BYTE PTR [rsi-0x74],ah
   14004966d:	out    0x1f,al
   140049670:	ja     0x140049607
   140049672:	push   rbp
   140049673:	xor    BYTE PTR [rbp-0x4a],ah
   140049676:	sar    BYTE PTR [rsi],1
   140049678:	xchg   edx,eax
   140049679:	jl     0x140049643
   14004967b:	mov    bl,0x1
   14004967d:	and    bh,bh
   14004967f:	fild   WORD PTR [rsi-0x74]
   140049682:	sbb    BYTE PTR [rbx+0x30],dl
   140049685:	xchg   edx,eax
   140049686:	adc    DWORD PTR [rdx],0x81022021
   14004968c:	jmp    0x190058891
   140049691:	(bad)  
   140049692:	cdq    
   140049693:	sbb    BYTE PTR [rcx+riz*8-0x41],ah
   140049697:	retf   
   140049698:	out    0x80,eax
   14004969a:	sbb    eax,0x581de447
   14004969f:	push   rdi
   1400496a0:	xor    cl,BYTE PTR [rsi]
   1400496a2:	and    DWORD PTR [rax-0x63],ebx
   1400496a5:	rex.R rcr spl,cl
   1400496a8:	mov    cl,0xf8
   1400496aa:	mov    edi,0xb9ecc43b
   1400496af:	mov    cl,0x36
   1400496b1:	(bad)  
   1400496b2:	jl     0x1400496cb
   1400496b4:	jg     0x1400496fd
   1400496b6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400496b7:	add    DWORD PTR [rbp-0x348907ff],edi
   1400496bd:	jl     0x140049677
   1400496bf:	lahf   
   1400496c0:	mov    ebp,0x79bc503d
   1400496c5:	mov    ebp,0x3d42f4fc
   1400496ca:	sti    
   1400496cb:	xor    DWORD PTR [rdi],esp
   1400496cd:	movabs ds:0xccc60fec8ac5348f,eax
   1400496d6:	(bad)  
   1400496d7:	movsxd esp,DWORD PTR [rsi+0x60c998d5]
   1400496dd:	int3   
   1400496de:	je     0x140049690
   1400496e0:	cmp    rax,0x729a45c
   1400496e6:	js     0x14004973f
   1400496e8:	loopne 0x140049766
   1400496ea:	add    edx,esp
   1400496ec:	(bad)  
   1400496ed:	fldcw  WORD PTR [rax+rbp*1]
   1400496f0:	mov    ch,0x2a
   1400496f2:	test   BYTE PTR [rdx],bh
   1400496f4:	adc    bh,BYTE PTR [rcx-0x16]
   1400496f7:	test   al,0xfc
   1400496f9:	scas   al,BYTE PTR es:[rdi]
   1400496fa:	sahf   
   1400496fb:	loop   0x14004973f
   1400496fd:	add    al,0xfc
   1400496ff:	jl     0x140049714
   140049701:	jae    0x140049701
   140049703:	and    dl,ah
   140049705:	(bad)  
   140049706:	neg    DWORD PTR [rdi-0x47c9c06c]
   14004970c:	push   0xffffffffc7eb09a8
   140049711:	sbb    DWORD PTR [rsi],ebp
   140049713:	scas   eax,DWORD PTR es:[rdi]
   140049714:	mov    bl,0x7d
   140049716:	in     eax,dx
   140049717:	sub    cl,BYTE PTR [rbx]
   140049719:	pop    rbx
   14004971a:	pop    rdi
   14004971b:	addr32 icebp 
   14004971d:	loop   0x14004976a
   14004971f:	enter  0x4ede,0x5e
   140049723:	in     al,dx
   140049724:	and    esi,DWORD PTR [rcx]
   140049726:	in     al,0xd2
   140049728:	pop    rdx
   140049729:	jg     0x140049744
   14004972b:	cld    
   14004972c:	retf   
   14004972d:	retf   0xce3
   140049730:	rex.WB (bad) 
   140049732:	and    eax,0xefabc4be
   140049737:	and    ch,ch
   140049739:	faddp  st(5),st
   14004973b:	xchg   esi,eax
   14004973c:	fild   WORD PTR [rdx+rax*2-0x77]
   140049740:	sahf   
   140049741:	push   rdi
   140049742:	repz (bad) 
   140049744:	rex.WB jmp 0xc834401d
   14004974a:	(bad)  
   14004974b:	xor    eax,0x22443428
   140049750:	push   rax
   140049751:	push   rax
   140049752:	rex.X movsxd eax,esi
   140049755:	ret    
   140049756:	(bad)  
   140049757:	jno    0x140049760
   140049759:	push   0x64
   14004975b:	movabs al,ds:0xd68deb4b45113a10
   140049764:	test   al,0x6d
   140049766:	out    dx,al
   140049767:	leave  
   140049768:	add    BYTE PTR [rax-0x4763fdab],ah
   14004976e:	js     0x14004978c
   140049770:	(bad)  
   140049771:	jne    0x14004978b
   140049773:	fcmovb st,st(1)
   140049775:	pop    rcx
   140049776:	clc    
   140049777:	adc    DWORD PTR [rbp+0x5f],ecx
   14004977a:	data16 sub BYTE PTR [rax+riz*1+0x10],ah
   14004977f:	(bad)  
   140049780:	rex.W
   140049781:	repz mov esi,0x87cbc8af
   140049787:	out    dx,eax
   140049788:	mov    ah,0x6a
   14004978a:	rex outs dx,DWORD PTR ds:[rsi]
   14004978c:	add    BYTE PTR [rsi-0x50b50d63],bh
   140049792:	pop    rdi
   140049793:	add    ch,al
   140049795:	icebp  
   140049796:	xchg   DWORD PTR [rdi-0x44],ecx
   140049799:	jge    0x1400497f0
   14004979b:	data16 jg 0x1400497e4
   14004979e:	xor    al,0x7c
   1400497a0:	(bad)  
   1400497a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400497a2:	fld    TBYTE PTR [rax]
   1400497a4:	push   0x5f
   1400497a6:	push   rcx
   1400497a7:	(bad)  
   1400497a8:	add    esp,DWORD PTR [rsi+0x55]
   1400497ab:	rex.RB jrcxz 0x1400497b5
   1400497ae:	int3   
   1400497af:	stos   BYTE PTR es:[rdi],al
   1400497b0:	adc    DWORD PTR [rcx+0x4031411a],esp
   1400497b6:	mov    dl,BYTE PTR [rdx]
   1400497b8:	(bad)  
   1400497b9:	jno    0x140049744
   1400497bb:	out    dx,al
   1400497bc:	mov    eax,0x4da28e22
   1400497c1:	mov    bpl,0xb6
   1400497c4:	or     DWORD PTR [rsi],edi
   1400497c6:	rcr    DWORD PTR [rax-0x7d93019],cl
   1400497cc:	mov    edx,0xae1987c6
   1400497d1:	mov    fs,ecx
   1400497d3:	mov    edi,0xad0a6a6f
   1400497d8:	jno    0x1400497fb
   1400497da:	cwde   
   1400497db:	repnz rex.RXB (bad) 
   1400497de:	in     eax,0x0
   1400497e0:	(bad)  
   1400497e1:	shr    BYTE PTR [rax+rbx*1+0x423ff720],0xd
   1400497e9:	int3   
   1400497ea:	cs popf 
   1400497ec:	in     eax,0xc8
   1400497ee:	test   DWORD PTR [rdi],edx
   1400497f0:	lock xlat BYTE PTR ds:[rbx]
   1400497f2:	(bad)  
   1400497f3:	movabs eax,ds:0xdcdfe04b06174261
   1400497fc:	enter  0x316f,0x87
   140049800:	(bad)  
   140049801:	ret    0x7b7b
   140049804:	ja     0x1400497bd
   140049806:	in     eax,dx
   140049807:	(bad)  
   140049808:	jns    0x140049803
   14004980a:	clc    
   14004980b:	cmp    al,0xb1
   14004980d:	(bad)  
   14004980e:	out    dx,eax
   14004980f:	and    eax,0x865ce33b
   140049814:	movabs ds:0x773e64b5b7b2168d,eax
   14004981d:	stc    
   14004981e:	sub    DWORD PTR [rcx+0x22e22022],edi
   140049824:	push   0x1f
   140049826:	mov    al,0xf4
   140049828:	loopne 0x14004986a
   14004982a:	repnz (bad) 
   14004982c:	(bad)  
   14004982d:	mov    bh,0xdb
   14004982f:	jae    0x140049867
   140049831:	(bad)  
   140049832:	rcl    BYTE PTR [rdx-0x73],0x8
   140049836:	and    eax,DWORD PTR [rsp+rbx*1+0x30d91805]
   14004983d:	rdpmc  
   14004983f:	lea    eax,[rbp+0x8]
   140049842:	sub    esi,DWORD PTR [rcx]
   140049844:	or     ch,cl
   140049846:	lahf   
   140049847:	int3   
   140049848:	(bad)  
   140049849:	sub    cl,ah
   14004984b:	(bad)  
   14004984c:	mov    ebx,0x3bcefab8
   140049851:	lods   eax,DWORD PTR ds:[rsi]
   140049852:	sbb    dl,al
   140049854:	sbb    eax,DWORD PTR [rax-0x7d236891]
   14004985a:	mov    dl,0x5b
   14004985c:	cs scas eax,DWORD PTR es:[rdi]
   14004985e:	(bad)  
   14004985f:	xlat   BYTE PTR ds:[rbx]
   140049860:	(bad)  
   140049861:	jnp    0x140049857
   140049863:	mov    edi,0xe3fea170
   140049868:	xlat   BYTE PTR ds:[rbx]
   140049869:	rcl    DWORD PTR [rip+0xffffffff97da9e71],1        # 0xd7df36e0
   14004986f:	add    al,0x5f
   140049871:	adc    cl,BYTE PTR [rdx+0x704a2d12]
   140049877:	and    eax,0x57389452
   14004987c:	and    BYTE PTR [rsi],ch
   14004987e:	ss icebp 
   140049880:	sub    BYTE PTR [rsi-0x489a4e60],cl
   140049886:	ins    DWORD PTR es:[rdi],dx
   140049887:	out    0x89,al
   140049889:	retf   0x67ef
   14004988c:	adc    edi,DWORD PTR [rbp+rdx*4-0x3ccca308]
   140049893:	(bad)  
   140049894:	push   rbx
   140049895:	or     dh,bl
   140049897:	cli    
   140049898:	mov    esi,0x87f9ab1
   14004989d:	(bad)  
   14004989e:	rex.WRX
   14004989f:	rex.RXB in al,0x5f
   1400498a2:	nop
   1400498a3:	sbb    BYTE PTR [rip+0xffffffffb4609c6c],dh        # 0xf4653515
   1400498a9:	jp     0x140049833
   1400498ab:	imul   edx,DWORD PTR [rdi-0x51],0x30
   1400498af:	fidivr WORD PTR [rdx]
   1400498b1:	leave  
   1400498b2:	ret    0x4bf6
   1400498b5:	enter  0xdde,0xa0
   1400498b9:	mov    cl,0xe5
   1400498bb:	mov    dl,0xec
   1400498bd:	data16 (bad) 
   1400498bf:	movabs eax,ds:0x464ff79b3618d14
   1400498c8:	push   rdx
   1400498c9:	sar    DWORD PTR [rbx*4-0x6c02f198],1
   1400498d0:	xchg   ecx,eax
   1400498d1:	jo     0x1400498dc
   1400498d3:	add    edx,eax
   1400498d5:	mov    WORD PTR [rbx],ss
   1400498d7:	je     0x1400498b2
   1400498d9:	sbb    BYTE PTR [rip+0xffffffffa3a75ee2],0x4f        # 0xe3abf7c2
   1400498e0:	out    0x15,al
   1400498e2:	add    BYTE PTR ds:[rax],r14b
   1400498e6:	test   BYTE PTR [rax],al
   1400498e8:	rex.WRB fdivr QWORD PTR [r8-0x7d3a76c8]
   1400498ef:	pop    rsp
   1400498f0:	cmp    DWORD PTR [rax-0x22],esp
   1400498f3:	(bad)  
   1400498f4:	fidiv  DWORD PTR [rsi]
   1400498f6:	popf   
   1400498f7:	rex.W int3 
   1400498f9:	jmp    0x140049918
   1400498fb:	and    al,0x7a
   1400498fd:	mov    al,0x78
   1400498ff:	loop   0x1400498a3
   140049901:	movabs eax,ds:0x8b089e3e426ea3b5
   14004990a:	push   0xffffffffaa53ffce
   14004990f:	adc    al,0x37
   140049911:	sbb    edi,DWORD PTR [rbx]
   140049913:	add    eax,0x423e6a43
   140049918:	cmp    DWORD PTR [rdx-0xfd306d],esp
   14004991e:	or     esi,DWORD PTR [rdi+0x50]
   140049921:	xor    eax,0xdf0037a0
   140049926:	(bad)  
   140049927:	jns    0x14004994e
   140049929:	gs mov bh,0xd8
   14004992c:	jl     0x140049924
   14004992e:	and    ecx,DWORD PTR [rdi-0x407a7a45]
   140049934:	mov    gs,eax
   140049936:	(bad)  
   140049937:	ins    BYTE PTR es:[rdi],dx
   140049938:	movabs ds:0xf2c69585a8f911e,al
   140049941:	enter  0xc443,0xb5
   140049945:	popf   
   140049946:	mov    DWORD PTR es:[rbx+rdx*1+0x13509a1a],esi
   14004994e:	(bad)  
   14004994f:	sbb    ch,BYTE PTR [rcx+0x66]
   140049952:	cmp    rax,0xfffffffff827a8a5
   140049958:	jp     0x1400498e0
   14004995a:	imul   esp,DWORD PTR [rsi-0x85d948],0xffffffa2
   140049961:	mov    DWORD PTR [rdi],edi
   140049963:	mov    cl,0xe4
   140049965:	(bad)  
   140049966:	sti    
   140049967:	(bad)  
   140049968:	jae    0x140049957
   14004996a:	fbld   TBYTE PTR [rdx]
   14004996c:	add    BYTE PTR [rbp+0x45],dl
   14004996f:	(bad)
   140049972:	cmp    eax,0x7f60134c
   140049977:	sti    
   140049978:	sub    al,0xc7
   14004997a:	(bad)  
   14004997b:	pushf  
   14004997c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004997d:	mov    esp,0x3f4d6dba
   140049982:	xchg   esi,eax
   140049983:	and    bl,BYTE PTR [rax-0x27]
   140049986:	stos   DWORD PTR es:[rdi],eax
   140049987:	add    BYTE PTR [rdx+rbp*4-0x759701cb],bh
   14004998e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004998f:	pop    rbx
   140049990:	rex (bad) 
   140049992:	(bad)  
   140049993:	fld    QWORD PTR [rsi-0xc5959c5]
   140049999:	mov    WORD PTR [rax-0x2e],es
   14004999c:	or     ebx,DWORD PTR [rip+0x2fd340dc]        # 0x16fd7da7e
   1400499a2:	int    0xf4
   1400499a4:	(bad)  
   1400499a5:	lods   al,BYTE PTR ds:[rsi]
   1400499a6:	lods   al,BYTE PTR ds:[rsi]
   1400499a7:	xchg   edi,eax
   1400499a8:	xlat   BYTE PTR ds:[rbx]
   1400499a9:	or     BYTE PTR [rcx-0x1b7cb20b],cl
   1400499af:	jrcxz  0x140049994
   1400499b1:	(bad)  
   1400499b2:	rcr    BYTE PTR [rbp+0xc],0x4
   1400499b6:	sar    BYTE PTR [rdx-0x618d1bff],cl
   1400499bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400499bd:	sub    eax,0xffffff8a
   1400499c0:	rex.WRB add rax,0x54f21756
   1400499c6:	movabs al,ds:0xf2dcd0cf0c08bd34
   1400499cf:	xchg   esp,eax
   1400499d0:	lea    edx,[rsi-0x42]
   1400499d3:	adc    cl,dh
   1400499d5:	rex.WRB shl QWORD PTR [r8],1
   1400499d8:	mov    BYTE PTR [rax],dh
   1400499da:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400499db:	jns    0x1400499cc
   1400499dd:	(bad)  
   1400499de:	cmc    
   1400499df:	fadd   st(6),st
   1400499e1:	(bad)  
   1400499e2:	in     eax,0xce
   1400499e4:	test   eax,0xe006f406
   1400499e9:	mov    ch,0x96
   1400499eb:	stc    
   1400499ec:	xchg   ecx,eax
   1400499ed:	pop    rsp
   1400499ee:	(bad)  
   1400499ef:	sub    BYTE PTR [rdi],bl
   1400499f1:	std    
   1400499f2:	hlt    
   1400499f3:	(bad)  
   1400499f4:	(bad)  
   1400499f5:	fimul  DWORD PTR [rdi+rdx*4]
   1400499f8:	jle    0x140049a1f
   1400499fa:	test   al,0x9e
   1400499fc:	push   rax
   1400499fd:	mov    ebx,0x896f9281
   140049a02:	xchg   ebx,eax
   140049a03:	addr32 pop rdx
   140049a05:	gs xor bh,al
   140049a08:	(bad)  
   140049a09:	sub    BYTE PTR [rdx],bl
   140049a0b:	data16 icebp 
   140049a0d:	or     si,WORD PTR [rbp-0xc]
   140049a11:	cld    
   140049a12:	int    0x14
   140049a14:	test   eax,0xa13d4867
   140049a19:	cwde   
   140049a1a:	vmovq  xmm2,QWORD PTR [rcx]
   140049a1e:	(bad)  
   140049a1f:	leave  
   140049a20:	scas   eax,DWORD PTR es:[rdi]
   140049a21:	push   0xffffffffc3308a6a
   140049a26:	xlat   BYTE PTR ds:[rbx]
   140049a27:	xor    edi,DWORD PTR [rbp+rcx*1+0x6b14f8]
   140049a2e:	adc    cl,BYTE PTR [rip+0x6edb5a36]        # 0x1aedff46a
   140049a34:	hlt    
   140049a35:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140049a36:	out    0xfe,ax
   140049a39:	(bad)  
   140049a3a:	sbb    BYTE PTR [rdi+rbx*1+0x35cefae3],ch
   140049a41:	rex.RX (bad) [rdi+0x197ed859]
   140049a48:	mov    bh,0x77
   140049a4a:	add    edx,ebp
   140049a4c:	es sbb eax,0xf6da220a
   140049a52:	cld    
   140049a53:	rex.WXB and dil,r12b
   140049a56:	mov    ah,0x9e
   140049a58:	ficom  WORD PTR [rax-0x7998fbbc]
   140049a5e:	sar    BYTE PTR [rax],0x80
   140049a61:	popf   
   140049a62:	and    DWORD PTR [rdi],ebx
   140049a64:	pop    rbp
   140049a65:	and    edx,DWORD PTR [rcx-0x6288fb6a]
   140049a6b:	out    0x5d,eax
   140049a6d:	retf   0x7007
   140049a70:	xchg   esi,eax
   140049a71:	pop    rsi
   140049a72:	mov    edx,DWORD PTR [eax]
   140049a75:	jg     0x140049a50
   140049a77:	add    ah,BYTE PTR [rcx]
   140049a79:	fsubr  DWORD PTR [rdx]
   140049a7b:	sbb    dl,BYTE PTR [r10-0x5]
   140049a7f:	scas   eax,DWORD PTR es:[rdi]
   140049a80:	mov    ebp,0x54067a9e
   140049a85:	fcmovb st,st(5)
   140049a87:	and    edx,0xb
   140049a8a:	icebp  
   140049a8b:	add    BYTE PTR [rip+0xffffffff98451d32],ah        # 0xd849b7c3
   140049a91:	outs   dx,DWORD PTR ds:[rsi]
   140049a92:	adc    DWORD PTR [rsi-0x2f],ecx
   140049a95:	mov    BYTE PTR [rax+rax*2],ah
   140049a98:	mov    al,0x33
   140049a9a:	rex.WRB movabs r8,0xd9b38a0a0c92c3a3
   140049aa4:	add    eax,0x3d502239
   140049aa9:	test   BYTE PTR [rcx],0xb9
   140049aac:	clc    
   140049aad:	(bad)  
   140049aae:	jg     0x140049a5a
   140049ab0:	(bad)  
   140049ab1:	(bad)  
   140049ab2:	sbb    DWORD PTR [rdi+0x48],esi
   140049ab5:	sbb    dl,al
   140049ab7:	sbb    eax,DWORD PTR [rax-0x6e25ad29]
   140049abd:	pop    rsp
   140049abe:	mov    ecx,0x2f99e759
   140049ac3:	jl     0x140049aba
   140049ac5:	retf   
   140049ac6:	jle    0x140049a84
   140049ac8:	hlt    
   140049ac9:	fild   QWORD PTR [rax+0x3910b2c8]
   140049acf:	out    0x9a,al
   140049ad1:	adc    eax,0x6bb1d63d
   140049ad6:	or     esi,DWORD PTR [rdi]
   140049ad8:	fwait
   140049ad9:	movabs al,ds:0x3423ac38d501a1d4
   140049ae2:	xor    rax,QWORD PTR [rbx+0x13]
   140049ae6:	popf   
   140049ae7:	mov    bh,0x9e
   140049ae9:	loope  0x140049b51
   140049aeb:	sti    
   140049aec:	(bad)  
   140049aed:	neg    BYTE PTR [rbx-0x12]
   140049af0:	lahf   
   140049af1:	cmp    eax,0x8d614d7f
   140049af6:	cmp    eax,0xf2add4d2
   140049afb:	xchg   DWORD PTR [rsi],esp
   140049afd:	scas   eax,DWORD PTR es:[rdi]
   140049afe:	clc    
   140049aff:	xchg   ebx,eax
   140049b00:	push   0x66
   140049b02:	lea    ebp,[rbx]
   140049b04:	xchg   ecx,eax
   140049b05:	sti    
   140049b06:	(bad)  
   140049b07:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140049b08:	adc    edi,eax
   140049b0a:	fisub  WORD PTR [rbp+0x3adf1c73]
   140049b10:	rex.WB jns 0x140049b78
   140049b13:	or     ebp,edx
   140049b15:	jge    0x140049aa9
   140049b17:	or     ecx,DWORD PTR [rbp+0x40]
   140049b1a:	(bad)  
   140049b1b:	sub    DWORD PTR [rsi-0x5],eax
   140049b1e:	adc    eax,0x7fccd228
   140049b23:	ficomp DWORD PTR [rdi+rdi*1-0x32]
   140049b27:	repz imul edx,DWORD PTR [rip+0x24028da7],0xffffff87        # 0x1640728d6
   140049b2f:	loope  0x140049b9a
   140049b31:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140049b32:	sbb    eax,0x4ce617b3
   140049b37:	push   rbx
   140049b38:	adc    al,0x60
   140049b3a:	(bad)  
   140049b3b:	sbb    cl,BYTE PTR [rip+0xfffffffff6fcf649]        # 0x13701918a
   140049b41:	fimul  WORD PTR [rax]
   140049b43:	(bad)  
   140049b44:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140049b45:	inc    BYTE PTR [rax+0x37c7ee14]
   140049b4b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140049b4c:	or     BYTE PTR ds:[rax+0x7],0x4e
   140049b51:	stos   DWORD PTR es:[rdi],eax
   140049b52:	(bad)  
   140049b53:	sub    ebp,ebp
   140049b55:	pop    rsi
   140049b56:	sub    eax,0x7c354f8f
   140049b5b:	mov    edi,DWORD PTR [rsi]
   140049b5d:	and    dh,BYTE PTR [rdx]
   140049b5f:	or     DWORD PTR [rax],edi
   140049b61:	int    0x95
   140049b63:	mov    BYTE PTR [rsi-0x14],dl
   140049b66:	add    BYTE PTR [rbx+0x318efe7],dl
   140049b6c:	and    eax,0xeada5fee
   140049b71:	(bad)  
   140049b72:	(bad)  
   140049b73:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049b74:	xchg   ebx,eax
   140049b75:	out    0x80,eax
   140049b77:	call   FWORD PTR [rcx-0x17f2dbc5]
   140049b7d:	mov    ebx,0x792b5f01
   140049b82:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140049b83:	repnz push rdi
   140049b85:	outs   dx,DWORD PTR ds:[rsi]
   140049b86:	stc    
   140049b87:	ficomp WORD PTR [rdi]
   140049b89:	clc    
   140049b8a:	icebp  
   140049b8b:	ror    edx,0xea
   140049b8e:	scas   eax,DWORD PTR es:[rdi]
   140049b8f:	adc    al,0xa5
   140049b91:	pop    rdi
   140049b92:	scas   al,BYTE PTR es:[rdi]
   140049b93:	or     al,BYTE PTR [rdi-0x17]
   140049b96:	test   DWORD PTR [rcx-0x57a1ab89],eax
   140049b9c:	pushf  
   140049b9d:	push   rax
   140049b9e:	jns    0x140049b61
   140049ba0:	adc    eax,0x8fc5cf2e
   140049ba5:	mov    esi,DWORD PTR [rbx+0x28]
   140049ba8:	sbb    ch,BYTE PTR [rdx-0x4c]
   140049bab:	cdq    
   140049bac:	movabs ds:0x3209ea109b3094f5,al
   140049bb5:	fisttp QWORD PTR [rbx-0x8b08bb5]
   140049bbb:	sub    dl,ch
   140049bbd:	push   0x3ed9ca04
   140049bc2:	cmp    DWORD PTR [rdx-0x61],0xffffffaa
   140049bc6:	sahf   
   140049bc7:	push   rax
   140049bc8:	(bad)  
   140049bc9:	push   rbx
   140049bca:	pop    rsp
   140049bcb:	cmp    eax,0x7afff58b
   140049bd0:	(bad)  
   140049bd1:	scas   eax,DWORD PTR es:[rdi]
   140049bd2:	and    edx,DWORD PTR [rcx]
   140049bd4:	enter  0x11d5,0x17
   140049bd8:	rex.W jl 0x140049bdb
   140049bdb:	(bad)  
   140049bdc:	frstor [rdi-0x4a]
   140049bdf:	jbe    0x140049b75
   140049be1:	(bad)  
   140049be2:	std    
   140049be3:	outs   dx,BYTE PTR ds:[rsi]
   140049be5:	fidivr WORD PTR [rax+0x5eb70ca]
   140049beb:	(bad)  
   140049bec:	mov    bh,0xce
   140049bee:	and    BYTE PTR [rbx+0x531a5037],bh
   140049bf4:	lods   al,BYTE PTR ds:[rsi]
   140049bf5:	test   al,0x44
   140049bf7:	test   eax,0xe6d3d8d7
   140049bfc:	dec    BYTE PTR [rcx]
   140049bfe:	xor    al,0xcb
   140049c00:	retf   0x21dd
   140049c03:	sti    
   140049c04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049c05:	(bad)  
   140049c06:	add    BYTE PTR [rdx+0x1ceef77],dh
   140049c0c:	mov    edi,cs
   140049c0e:	jns    0x140049ba7
   140049c10:	sub    al,BYTE PTR [rbx]
   140049c12:	or     DWORD PTR [rax-0x6b2f5fcd],ecx
   140049c18:	sub    cl,BYTE PTR [rbx-0x61a10d3a]
   140049c1e:	or     DWORD PTR [rax-0x27cafb5a],ebx
   140049c24:	(bad)  
   140049c25:	and    BYTE PTR [rbx-0x6],dl
   140049c28:	xor    al,0xf
   140049c2a:	add    BYTE PTR [rdx+rcx*4],cl
   140049c2d:	xchg   esp,eax
   140049c2e:	rex.WRX stos BYTE PTR es:[rdi],al
   140049c30:	shr    DWORD PTR [rsi+0x4c],1
   140049c33:	jmp    0x16bd21bb2
   140049c38:	(bad)  
   140049c39:	addr32 mov esp,0xd20f1d22
   140049c3f:	sahf   
   140049c40:	movsxd ebp,DWORD PTR [rdx-0x63358a07]
   140049c46:	stc    
   140049c47:	imul   esi,DWORD PTR [rbx+0xfea4313],0x3697957c
   140049c51:	imul   ebx,DWORD PTR [rcx],0x8f13079c
   140049c57:	xlat   BYTE PTR ds:[rbx]
   140049c58:	xchg   ebp,eax
   140049c59:	hlt    
   140049c5a:	(bad)  
   140049c5b:	loopne 0x140049c12
   140049c5d:	nop
   140049c5e:	jns    0x140049c45
   140049c60:	(bad)  
   140049c61:	sub    edx,0xc1fe5fad
   140049c67:	(bad)  
   140049c68:	pop    rbp
   140049c69:	cs cs std 
   140049c6c:	jne    0x140049c7f
   140049c6e:	sbb    DWORD PTR [rdx+rdi*4-0x17],eax
   140049c72:	jl     0x140049c4c
   140049c74:	or     DWORD PTR [rax+0x684a0842],eax
   140049c7a:	xchg   esp,eax
   140049c7b:	mov    edx,0x9a9a4c09
   140049c80:	mov    edx,0x299a69a9
   140049c85:	pop    rdx
   140049c86:	rex.WRXB rcr r9b,1
   140049c89:	(bad)  
   140049c8a:	cwde   
   140049c8b:	loop   0x140049c88
   140049c8d:	jmp    0x18fbb1ac0
   140049c92:	xor    ebx,ebx
   140049c94:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140049c95:	cwde   
   140049c96:	rex.WRB test al,0xea
   140049c99:	jge    0x140049ca1
   140049c9b:	cmc    
   140049c9c:	test   BYTE PTR [rdx+0x62cc529e],dh
   140049ca2:	or     eax,edx
   140049ca4:	iret   
   140049ca5:	div    BYTE PTR [rcx-0x4d]
   140049ca8:	mov    BYTE PTR [rbx],cl
   140049caa:	enter  0x826c,0x9f
   140049cae:	(bad)
   140049cb1:	xor    eax,0x2869ae0d
   140049cb6:	(bad)  
   140049cb7:	sbb    ecx,eax
   140049cb9:	(bad)  
   140049cba:	in     al,dx
   140049cbb:	(bad)  
   140049cbc:	hlt    
   140049cbd:	xor    al,0x52
   140049cbf:	adc    al,0xec
   140049cc1:	pop    rdi
   140049cc2:	fldenv [rdx-0x1d]
   140049cc5:	ret    0x940b
   140049cc8:	xlat   BYTE PTR ds:[rbx]
   140049cc9:	mov    dh,0xa1
   140049ccb:	fxch   st(7)
   140049ccd:	loope  0x140049d4e
   140049ccf:	bnd jle 0x140049cd7
   140049cd2:	in     eax,dx
   140049cd3:	cli    
   140049cd4:	fsubr  DWORD PTR [rcx-0x16]
   140049cd7:	out    dx,eax
   140049cd8:	pop    rsp
   140049cd9:	(bad)  
   140049cda:	pop    rdi
   140049cdb:	sub    bh,cl
   140049cdd:	jne    0x140049cf4
   140049cdf:	ret    
   140049ce0:	pop    rsi
   140049ce1:	rex.WRXB (bad) 
   140049ce3:	xchg   ebx,eax
   140049ce4:	ds and al,0xa7
   140049ce7:	cmp    al,bh
   140049ce9:	(bad)  
   140049cea:	and    al,0x7a
   140049cec:	outs   dx,DWORD PTR ds:[rsi]
   140049ced:	in     eax,dx
   140049cee:	hlt    
   140049cef:	icebp  
   140049cf0:	(bad)  
   140049cf1:	and    BYTE PTR [rbp+0x4f62f605],ah
   140049cf7:	xchg   ebx,eax
   140049cf8:	add    DWORD PTR [r11+riz*2-0x60],r8d
   140049cfd:	rex.B ins BYTE PTR es:[rdi],dx
   140049cff:	sbb    BYTE PTR [rax+0x5c4a3cb],dl
   140049d05:	mov    dl,0xef
   140049d07:	push   rbp
   140049d08:	xor    al,0x2b
   140049d0a:	test   al,0x38
   140049d0c:	leave  
   140049d0d:	fisttp DWORD PTR [rsi-0x3c]
   140049d10:	(bad)  
   140049d11:	rex.XB (bad) 
   140049d13:	int    0x0
   140049d15:	push   0x458056bb
   140049d1a:	xor    al,0xa4
   140049d1c:	mov    ecx,0x5d1b483
   140049d21:	je     0x140049ce9
   140049d23:	xchg   BYTE PTR [rdi+0x3a50260a],ah
   140049d29:	cmp    eax,0xfcb97ef1
   140049d2e:	sub    al,0x77
   140049d30:	mov    rsi,QWORD PTR [rax-0x61]
   140049d34:	add    bh,BYTE PTR [rdx+rbx*8+0x7fe50b72]
   140049d3b:	fcomi  st,st(7)
   140049d3d:	std    
   140049d3e:	lock rex.WRXB (bad) 
   140049d41:	movabs ds:0xa218029489a0cfd1,eax
   140049d4a:	(bad)  
   140049d4b:	add    BYTE PTR [rip+0xffffffffe951a34a],cl        # 0x12956409b
   140049d51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140049d52:	rex.WRB movabs al,ds:0x506669a1a6ea6bae
   140049d5c:	rex.WRXB movabs ds:0x7c13d712a24d9ff7,rax
   140049d66:	push   0xfffffffff0f44df0
   140049d6b:	rex.RB cmp eax,0xcfb030a5
   140049d71:	xlat   BYTE PTR ds:[rbx]
   140049d72:	xchg   ecx,eax
   140049d73:	loop   0x140049d60
   140049d75:	push   rdx
   140049d76:	rex.WRXB jg 0x140049d96
   140049d79:	leave  
   140049d7a:	(bad)  
   140049d7b:	imul   edi,DWORD PTR [rdi+rsi*1+0x533fc09a],0xeec67a80
   140049d86:	movabs eax,ds:0x75cee6e09d0f2827
   140049d8f:	rex.RX pop rbx
   140049d91:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140049d92:	pop    rax
   140049d93:	mov    esp,0x77b70678
   140049d98:	sbb    eax,0x929f2cc2
   140049d9d:	movabs al,ds:0x514b9c06bcfebb9
   140049da6:	nop
   140049da7:	(bad)  
   140049da8:	je     0x140049d7b
   140049daa:	fstp   TBYTE PTR [rdx+0x4d4d9344]
   140049db0:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140049db2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049db3:	popf   
   140049db4:	lock mov esi,0x8b24db25
   140049dba:	rol    BYTE PTR [rcx],1
   140049dbc:	add    ch,cl
   140049dbe:	sbb    esi,DWORD PTR [rdi+0x635b8413]
   140049dc4:	xchg   ecx,eax
   140049dc5:	xchg   esp,eax
   140049dc6:	mov    eax,0x44297cd
   140049dcb:	add    DWORD PTR [rbp-0x7dbfb63a],edi
   140049dd1:	xchg   ebp,eax
   140049dd2:	add    ch,ch
   140049dd4:	(bad)  [rcx+0x2a]
   140049dd7:	push   rax
   140049dd8:	rcl    cl,cl
   140049dda:	(bad)  
   140049ddb:	repz out dx,eax
   140049ddd:	add    BYTE PTR [rax-0x6f],bh
   140049de0:	adc    BYTE PTR [rsi+riz*4-0x3cda3b18],ah
   140049de7:	pop    rsp
   140049de8:	pop    rsp
   140049de9:	xor    al,0xb4
   140049deb:	scas   al,BYTE PTR es:[rdi]
   140049dec:	sbb    DWORD PTR [rcx],0xffffffac
   140049def:	pop    rax
   140049df0:	in     eax,dx
   140049df1:	xor    BYTE PTR [rax],dl
   140049df3:	fs scas al,BYTE PTR es:[rdi]
   140049df5:	je     0x140049e31
   140049df7:	(bad)  
   140049df8:	fistp  DWORD PTR [rbx+0x39]
   140049dfb:	adc    BYTE PTR [rip+0x3be4e88e],dl        # 0x17be9868f
   140049e01:	mov    ecx,0xbd01aa43
   140049e06:	add    DWORD PTR [rax+0x35],edi
   140049e09:	gs (bad) 
   140049e0b:	in     eax,dx
   140049e0c:	iret   
   140049e0d:	sahf   
   140049e0e:	mov    edi,0x367f8d18
   140049e13:	mov    dh,0xd9
   140049e15:	(bad)  
   140049e16:	(bad)  
   140049e17:	or     dl,BYTE PTR [rsi]
   140049e19:	fisub  WORD PTR [rbx+0x79]
   140049e1c:	mov    esi,0xa61a6d32
   140049e21:	mov    bl,0xc0
   140049e23:	lods   al,BYTE PTR ds:[rsi]
   140049e24:	cdq    
   140049e25:	push   rdx
   140049e26:	(bad)  
   140049e27:	adc    eax,esp
   140049e29:	sar    DWORD PTR [rdx-0x7a],cl
   140049e2c:	(bad)  
   140049e2d:	push   rsi
   140049e2e:	(bad)  
   140049e2f:	lahf   
   140049e30:	in     eax,dx
   140049e31:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140049e33:	outs   dx,BYTE PTR ds:[rsi]
   140049e34:	mov    BYTE PTR [rsi-0x3cd60851],bh
   140049e3a:	mov    WORD PTR [rdx+0x1f3eec8e],fs
   140049e40:	(bad)  
   140049e41:	enter  0x6bf2,0x6a
   140049e45:	pushf  
   140049e46:	(bad)  
   140049e47:	jo     0x140049e96
   140049e49:	movsxd ebx,DWORD PTR [rdi+rdi*2-0x65]
   140049e4d:	repnz imul esp,ebp,0xffffffbf
   140049e51:	(bad)  
   140049e52:	pop    rax
   140049e53:	and    eax,DWORD PTR [rsi+0x75]
   140049e56:	or     DWORD PTR [rdi],ecx
   140049e58:	or     DWORD PTR ds:[rsi-0xc1d109c],edi
   140049e5f:	sbb    al,0xbb
   140049e61:	jo     0x140049df5
   140049e63:	(bad)  
   140049e64:	(bad)  
   140049e65:	add    eax,0xb4a2ee98
   140049e6a:	adc    eax,0xc4294102
   140049e6f:	(bad)
   140049e72:	pushf  
   140049e73:	in     al,0xda
   140049e75:	jg     0x140049e12
   140049e77:	add    bh,BYTE PTR [rax+0xa2d19e8]
   140049e7d:	lock and al,0x5
   140049e80:	add    edi,DWORD PTR es:[rsi+rcx*2+0x12]
   140049e85:	xor    al,bl
   140049e87:	add    al,BYTE PTR [rax-0x19f9187]
   140049e8d:	iret   
   140049e8e:	and    al,0x67
   140049e90:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140049e92:	hlt    
   140049e93:	imul   esi,DWORD PTR [rbp-0x318dbe1],0x97385a76
   140049e9d:	imul   edx,DWORD PTR [rcx+rbx*1],0x23
   140049ea1:	mov    BYTE PTR [rcx-0x2a1f9586],bh
   140049ea7:	pushf  
   140049ea8:	(bad)  
   140049ea9:	and    al,0x2d
   140049eab:	adc    r15,QWORD PTR [rsi+0x54]
   140049eaf:	rex.X
   140049eb0:	cs push rbx
   140049eb2:	es cmp al,0x20
   140049eb5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140049eb6:	(bad)  
   140049eb7:	pop    rsi
   140049eb8:	jo     0x140049edb
   140049eba:	(bad)  
   140049ebb:	add    BYTE PTR [rax+0x3],dl
   140049ebe:	(bad)  
   140049ebf:	pop    rbx
   140049ec0:	xor    eax,0x8d1a474e
   140049ec5:	mov    ebx,edx
   140049ec7:	(bad)  
   140049ec8:	adc    BYTE PTR [rdi+rax*8-0x26196dcf],cl
   140049ecf:	out    dx,eax
   140049ed0:	xlat   BYTE PTR ds:[rbx]
   140049ed1:	xchg   edi,eax
   140049ed2:	(bad)  
   140049ed3:	(bad)  
   140049ed4:	xor    edi,esi
   140049ed6:	mov    edi,0x7d01abee
   140049edb:	or     dh,al
   140049edd:	push   0xffffffffffffffc9
   140049edf:	sub    eax,0xcb78e016
   140049ee4:	idiv   ebp
   140049ee6:	xchg   ecx,eax
   140049ee7:	lahf   
   140049ee8:	sub    BYTE PTR [rdi+0xb],al
   140049eeb:	(bad)  
   140049eec:	(bad)
   140049ef0:	rex.X enter 0xf7f5,0x18
   140049ef5:	loop   0x140049efe
   140049ef7:	es jne 0x140049ebd
   140049efa:	out    dx,al
   140049efb:	mov    ah,0x66
   140049efd:	outs   dx,DWORD PTR ds:[rsi]
   140049efe:	xor    ah,BYTE PTR [rbx+0x7f]
   140049f01:	mov    dh,0x4f
   140049f03:	cwde   
   140049f04:	out    dx,al
   140049f05:	movabs ds:0xf8bb260f74c25d93,eax
   140049f0e:	leave  
   140049f0f:	(bad)  
   140049f10:	(bad)  
   140049f13:	in     eax,0x74
   140049f15:	(bad)  
   140049f16:	mov    dl,0xde
   140049f18:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140049f19:	pushf  
   140049f1a:	in     eax,dx
   140049f1b:	push   rbx
   140049f1c:	rex.WRB outs dx,BYTE PTR ds:[rsi]
   140049f1e:	xor    bl,BYTE PTR [rsi+rbp*8+0x29f74e53]
   140049f25:	addr32 push rsi
   140049f27:	add    DWORD PTR [rax-0x676e6612],ebx
   140049f2d:	loopne 0x140049ed6
   140049f2f:	push   rbx
   140049f30:	fsubr  QWORD PTR [rdx+rcx*4-0x2c]
   140049f34:	push   rbx
   140049f35:	fs (bad) 
   140049f37:	rex.WXB test r9b,sil
   140049f3a:	out    dx,eax
   140049f3b:	cmp    dl,BYTE PTR [rdi-0x3d8b2300]
   140049f41:	(bad)  
   140049f42:	loope  0x140049ecb
   140049f44:	or     bh,dh
   140049f46:	cmp    eax,0xab8dceca
   140049f4b:	or     al,0xb6
   140049f4d:	pop    rdi
   140049f4e:	fs jmp 0x11dbceb26
   140049f54:	sbb    esp,DWORD PTR [rax-0x6b52c18b]
   140049f5a:	retf   
   140049f5b:	(bad)  
   140049f5c:	(bad)  
   140049f5d:	jns    0x140049fde
   140049f5f:	(bad)
   140049f64:	mov    ah,0x52
   140049f66:	sbb    ah,BYTE PTR [rbx+0x79]
   140049f69:	jo     0x140049ef5
   140049f6b:	cs xor r11b,bpl
   140049f6f:	push   rsi
   140049f70:	xchg   edx,eax
   140049f71:	jb     0x140049f18
   140049f73:	not    DWORD PTR [rcx-0xc0c928e]
   140049f79:	popf   
   140049f7a:	rex.B sbb al,0x92
   140049f7d:	ret    0x6efe
   140049f80:	cli    
   140049f81:	fadd   QWORD PTR [rdx-0x4]
   140049f84:	push   rcx
   140049f85:	xchg   ebx,eax
   140049f86:	push   rdx
   140049f87:	imul   esp,DWORD PTR [rcx+rsi*4],0xff0ed075
   140049f8e:	(bad)  
   140049f90:	(bad)  
   140049f91:	(bad)  
   140049f92:	sbb    edx,DWORD PTR [rbx+0x7513a051]
   140049f98:	in     al,0x78
   140049f9a:	mov    esi,0x122e3073
   140049f9f:	xchg   ebx,eax
   140049fa0:	repnz (bad) 
   140049fa2:	loopne 0x140049f72
   140049fa4:	stc    
   140049fa5:	(bad)  
   140049fa6:	fnsave [rbp-0x5a]
   140049fa9:	sub    eax,0x45b4c8f9
   140049fae:	sub    DWORD PTR [rdx-0xb],edx
   140049fb1:	and    BYTE PTR [rdx],bl
   140049fb3:	rex cmp eax,0xfed911f1
   140049fb9:	add    BYTE PTR [rdi+0x40],dh
   140049fbc:	sbb    dl,al
   140049fbe:	rex.RXB add BYTE PTR [r15-0x169d237a],r13b
   140049fc5:	lods   eax,DWORD PTR ds:[rsi]
   140049fc6:	(bad)  
   140049fc7:	jg     0x140049fba
   140049fc9:	ud0    edx,DWORD PTR [rcx+0x2fe96172]
   140049fd0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140049fd1:	enter  0xb631,0xa8
   140049fd5:	(bad)  
   140049fd6:	(bad)  
   140049fd7:	jns    0x140049fd5
   140049fd9:	pop    rcx
   140049fda:	adc    ebx,DWORD PTR [rax-0x56457e2b]
   140049fe0:	cdq    
   140049fe1:	(bad)  
   140049fe2:	or     eax,0x334299a1
   140049fe7:	and    eax,ebx
   140049fe9:	push   0x734cd72e
   140049fee:	jmp    0x140049f9e
   140049ff0:	imul   edx,DWORD PTR [rdx-0x58],0x5f
   140049ff4:	push   rbx
   140049ff5:	sbb    al,BYTE PTR [rax-0x54ecbc19]
   140049ffb:	add    BYTE PTR [rbp+0xc],dh
   140049ffe:	stc    
   140049fff:	jge    0x14004a034
   14004a001:	add    ebp,DWORD PTR [rbx-0xe]
   14004a004:	rex.WB mov r13b,0xfe
   14004a007:	xor    al,0xe5
   14004a009:	(bad)  
   14004a00a:	sub    cl,BYTE PTR [rbp-0x38]
   14004a00d:	retf   0x2123
   14004a010:	jb     0x14004a010
   14004a012:	outs   dx,DWORD PTR ds:[rsi]
   14004a013:	ds repnz (bad) 
   14004a016:	pushf  
   14004a017:	(bad)  
   14004a018:	cdq    
   14004a019:	pop    rsi
   14004a01a:	mov    ecx,0x53adb1c0
   14004a01f:	xchg   esp,eax
   14004a020:	xchg   edi,eax
   14004a021:	mov    bh,0xa0
   14004a023:	fimul  WORD PTR [rbx+0x3d59814b]
   14004a029:	cmp    al,0x87
   14004a02b:	push   rsi
   14004a02d:	xchg   ebx,eax
   14004a02e:	push   rax
   14004a02f:	jg     0x140049fd0
   14004a031:	movabs ds:0xf792f2b3b42ba367,al
   14004a03a:	(bad)  
   14004a03b:	loop   0x14004a08d
   14004a03d:	(bad)  
   14004a03e:	cmp    DWORD PTR [rdx],esp
   14004a040:	mov    eax,0x537edb19
   14004a045:	xor    al,0xd0
   14004a047:	rol    DWORD PTR [rcx],0xba
   14004a04a:	xlat   BYTE PTR ds:[rbx]
   14004a04b:	xor    ebp,ecx
   14004a04d:	sub    dh,BYTE PTR gs:[rax+0x54ef8565]
   14004a054:	add    eax,0x70607752
   14004a059:	and    BYTE PTR [rbp+0x6b],cl
   14004a05c:	cmp    BYTE PTR [rsp+rax*2],al
   14004a05f:	sbb    eax,0xf3c5c1a
   14004a064:	loop   0x14004a0e4
   14004a066:	adc    al,BYTE PTR [rdi-0x1cc8cb21]
   14004a06c:	sbb    bh,BYTE PTR [rax]
   14004a06e:	leave  
   14004a06f:	ror    DWORD PTR [rsi+0x349838b8],1
   14004a075:	sub    eax,0x8c7ce266
   14004a07a:	shl    BYTE PTR [rdx],1
   14004a07c:	jns    0x14004a0c6
   14004a07e:	(bad)  
   14004a07f:	jmp    0xfaa111ac
   14004a084:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a085:	fldcw  WORD PTR cs:[rbp+0x4d23c6db]
   14004a08c:	or     ebx,ecx
   14004a08e:	fs repnz sbb al,0xf0
   14004a092:	iret   
   14004a093:	jns    0x14004a032
   14004a095:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a096:	add    DWORD PTR [rbp-0x357c07ff],edi
   14004a09c:	sub    eax,0xf93ff0e6
   14004a0a1:	mov    ecx,0xb86e7f2f
   14004a0a6:	mov    eax,0x683437fc
   14004a0ab:	add    DWORD PTR [rcx],ebp
   14004a0ad:	(bad)  
   14004a0ae:	sqrtps xmm6,xmm1
   14004a0b1:	jmp    0x14004a073
   14004a0b3:	lods   al,BYTE PTR ds:[rsi]
   14004a0b4:	mov    DWORD PTR [rdx-0x596565e1],ecx
   14004a0ba:	cdq    
   14004a0bb:	rex.RB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a0bd:	mov    bh,0x3c
   14004a0bf:	(bad)  
   14004a0c1:	xor    edi,DWORD PTR [rbx+rsi*1-0x67]
   14004a0c5:	push   rbx
   14004a0c6:	in     al,dx
   14004a0c7:	movabs ds:0xbce9137c53365299,al
   14004a0d0:	scas   al,BYTE PTR es:[rdi]
   14004a0d1:	mov    dh,0xd9
   14004a0d3:	jge    0x14004a0cb
   14004a0d5:	fsub   DWORD PTR [rbp-0x6f97a10e]
   14004a0db:	cmp    dh,ch
   14004a0dd:	imul   DWORD PTR [rbx-0x34]
   14004a0e0:	stc    
   14004a0e1:	sub    eax,0x3fa54e34
   14004a0e6:	adc    ecx,eax
   14004a0e8:	int    0xf6
   14004a0ea:	mov    ecx,0x70d3c0fe
   14004a0ef:	jmp    QWORD PTR [rbx+0x635cedec]
   14004a0f5:	mov    eax,0xada59a75
   14004a0fa:	(bad)  
   14004a0fb:	jno    0x14004a0b8
   14004a0fd:	push   rdi
   14004a0fe:	sub    eax,0x4cacd7f7
   14004a103:	rex.WRX movabs rax,ds:0xfcceec93b1a78714
   14004a10d:	out    dx,eax
   14004a10e:	cmp    BYTE PTR [rbx-0x26],dl
   14004a111:	(bad)  
   14004a112:	sub    DWORD PTR [rdi-0x61],edi
   14004a115:	rex.WXB in eax,dx
   14004a117:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a118:	repz pop rsp
   14004a11a:	jle    0x14004a0ab
   14004a11c:	xor    eax,0x5cff30dd
   14004a121:	sbb    esp,DWORD PTR [rax+0x77]
   14004a124:	jrcxz  0x14004a0a6
   14004a126:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a127:	loope  0x14004a0d2
   14004a129:	sbb    DWORD PTR [rdi],eax
   14004a12b:	fwait
   14004a12c:	adc    al,0xec
   14004a12e:	ins    BYTE PTR es:[rdi],dx
   14004a12f:	xchg   BYTE PTR [rax+0x76bcdae6],ah
   14004a135:	sti    
   14004a136:	(bad)  
   14004a137:	adc    ch,BYTE PTR [rbx]
   14004a139:	lock push rsi
   14004a13b:	loop   0x14004a1a1
   14004a13d:	jle    0x14004a0c6
   14004a13f:	jmp    0x182e4137c
   14004a144:	push   rsp
   14004a145:	inc    dh
   14004a147:	(bad)  
   14004a148:	or     eax,0xf32efb51
   14004a14d:	push   0x9392ce0
   14004a152:	leave  
   14004a153:	(bad)
   14004a158:	(bad)  
   14004a159:	mov    ah,0x8
   14004a15b:	test   DWORD PTR [rsi],0xb7220fe0
   14004a161:	cwde   
   14004a162:	ret    
   14004a163:	jg     0x14004a147
   14004a165:	mov    ecx,0x2fd07fcf
   14004a16a:	scas   al,BYTE PTR es:[rdi]
   14004a16b:	(bad)  
   14004a16c:	shl    BYTE PTR [rsp+rax*4],cl
   14004a16f:	(bad)  
   14004a170:	rex.W loopne 0x14004a1d1
   14004a173:	rex.RXB jmp 0x16380fce4
   14004a179:	or     eax,0xe299a4e4
   14004a17e:	xchg   bx,ax
   14004a180:	cmp    BYTE PTR [rbp-0x4ec2ff29],dl
   14004a186:	jmp    0x1bb162747
   14004a18b:	jl     0x14004a1aa
   14004a18d:	jmp    0x14004a18a
   14004a18f:	adc    dl,BYTE PTR [rdx+0x19]
   14004a192:	iret   
   14004a193:	cmp    bh,bl
   14004a195:	jb     0x14004a212
   14004a197:	outs   dx,DWORD PTR ds:[rsi]
   14004a198:	mov    ebx,0x22689794
   14004a19d:	(bad)  
   14004a19e:	sub    BYTE PTR [rcx-0x30],bh
   14004a1a1:	xchg   DWORD PTR [rdx-0x3a],esp
   14004a1a4:	and    dh,bh
   14004a1a6:	push   rsi
   14004a1a7:	push   rdi
   14004a1a8:	jo     0x14004a19d
   14004a1aa:	mov    cl,0x77
   14004a1ac:	sub    BYTE PTR [rdi],0xd8
   14004a1af:	fstp   TBYTE PTR [rsi]
   14004a1b1:	retf   
   14004a1b2:	jge    0x14004a1cb
   14004a1b4:	pop    rdi
   14004a1b5:	movabs al,ds:0x20a463f6cc85baba
   14004a1be:	test   eax,0x3d951eb4
   14004a1c3:	scas   al,BYTE PTR es:[rdi]
   14004a1c4:	cmc    
   14004a1c5:	(bad)  
   14004a1c6:	js     0x14004a1d1
   14004a1c8:	xchg   ecx,eax
   14004a1c9:	add    al,0xe4
   14004a1cb:	push   rdx
   14004a1cc:	in     al,0xdc
   14004a1ce:	push   0x78
   14004a1d0:	pop    rsp
   14004a1d1:	sbb    ch,BYTE PTR [rbp+rbp*1+0x5da7c5f3]
   14004a1d8:	(bad)  
   14004a1d9:	cmc    
   14004a1da:	pop    rbx
   14004a1db:	movabs ds:0x16cf7d0dfffb070,eax
   14004a1e4:	shl    BYTE PTR [rsi],cl
   14004a1e6:	in     eax,dx
   14004a1e7:	lahf   
   14004a1e8:	sbb    al,0xc6
   14004a1ea:	rex.XB pushf 
   14004a1ec:	or     cl,BYTE PTR [rsi+rcx*2]
   14004a1ef:	ins    DWORD PTR es:[rdi],dx
   14004a1f0:	sub    dl,BYTE PTR [rax-0x80]
   14004a1f3:	rol    BYTE PTR [rax+rdi*4+0x604b80ce],1
   14004a1fa:	popf   
   14004a1fb:	cmp    BYTE PTR [rdx],0x3b
   14004a1fe:	test   DWORD PTR [rsi+0x29],0xdbb65351
   14004a205:	rex.WRX stc 
   14004a207:	add    eax,0x4e60f2e2
   14004a20c:	loop   0x14004a1d9
   14004a20e:	imul   edx,DWORD PTR [rip+0x4dc63a61],0xff10fa52        # 0x18dcadc79
   14004a218:	rex.WB
   14004a219:	repz add DWORD PTR [rax-0x364319c8],edx
   14004a220:	(bad)  
   14004a221:	mov    ch,BYTE PTR [rax+0x14]
   14004a224:	sbb    al,0x31
   14004a226:	pop    rdx
   14004a227:	lock call 0x116ed71fe
   14004a22d:	xchg   DWORD PTR [rsi-0x7d],edi
   14004a230:	movsxd edi,edi
   14004a232:	test   bh,dl
   14004a234:	xor    DWORD PTR [rcx],ebp
   14004a236:	test   al,0x37
   14004a238:	add    BYTE PTR [rdi-0x151066a1],bh
   14004a23e:	repz rex mov ecx,0xbd0faef1
   14004a245:	leave  
   14004a246:	sub    eax,0xbd9dfead
   14004a24b:	imul   esi,DWORD PTR [rbx-0x65ef2f22],0xb60fd5c8
   14004a255:	fisubr DWORD PTR [rsi-0x55138aca]
   14004a25b:	xor    esp,DWORD PTR [rip+0xffffffff9f56b977]        # 0xdf5b5bd8
   14004a261:	cmp    dh,dh
   14004a263:	and    bh,BYTE PTR [rbx-0x51]
   14004a266:	ins    BYTE PTR es:[rdi],dx
   14004a267:	pop    rdx
   14004a268:	out    dx,eax
   14004a269:	out    dx,eax
   14004a26a:	fwait
   14004a26b:	adc    BYTE PTR [rip+0xffffffffedf7427e],bh        # 0x12dfbe4ef
   14004a271:	rex.RXB mov r8d,fs
   14004a274:	jrcxz  0x14004a210
   14004a276:	mov    dl,dh
   14004a278:	out    0xf6,eax
   14004a27a:	push   rdi
   14004a27b:	ins    DWORD PTR es:[rdi],dx
   14004a27c:	mov    DWORD PTR [rsi],edi
   14004a27e:	cmp    DWORD PTR [rdx],ecx
   14004a280:	cmp    QWORD PTR [rax],rsi
   14004a283:	mov    dl,ah
   14004a285:	push   rbx
   14004a286:	scas   al,BYTE PTR es:[rdi]
   14004a287:	cmp    eax,0xfb9a16fc
   14004a28c:	(bad)  
   14004a28d:	movsxd esi,DWORD PTR [rsi-0x3]
   14004a290:	sub    ah,BYTE PTR [rbx-0x45a75875]
   14004a296:	js     0x14004a29e
   14004a298:	jg     0x14004a28d
   14004a29a:	sbb    bl,dl
   14004a29c:	int3   
   14004a29d:	push   rdx
   14004a29e:	rex.WX sbb rax,0xffffffffe4711fbd
   14004a2a4:	xchg   edi,eax
   14004a2a5:	push   rdi
   14004a2a6:	sbb    ebx,DWORD PTR [rcx-0x732c433b]
   14004a2ac:	xchg   esi,eax
   14004a2ad:	rex.WRXB out 0x74,al
   14004a2b0:	movs   DWORD PTR es:[rdi],DWORD PTR ss:[rsi]
   14004a2b2:	add    BYTE PTR [rsi],ch
   14004a2b4:	jae    0x14004a2b4
   14004a2b6:	out    0xd9,eax
   14004a2b8:	jg     0x14004a23c
   14004a2ba:	mov    ah,0xe3
   14004a2bc:	rcr    DWORD PTR [rdx-0x78],0xfe
   14004a2c0:	xchg   ebp,eax
   14004a2c1:	out    dx,al
   14004a2c2:	fistp  QWORD PTR [rdx+rbp*2-0x635bfc1e]
   14004a2c9:	cmp    edx,DWORD PTR [rbp+0x319db05]
   14004a2cf:	rcl    dh,cl
   14004a2d1:	std    
   14004a2d2:	and    eax,0xf2434a7e
   14004a2d7:	rcr    BYTE PTR [rdx+0x3b2561de],1
   14004a2dd:	and    DWORD PTR [rdi],edi
   14004a2df:	fwait
   14004a2e0:	loopne 0x14004a2e5
   14004a2e2:	jb     0x14004a269
   14004a2e4:	rcl    DWORD PTR [rsp+rdi*1],1
   14004a2e7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a2e8:	add    DWORD PTR [rdx],esi
   14004a2ea:	(bad)  
   14004a2eb:	mov    ch,0xa4
   14004a2ed:	push   0x44f989a5
   14004a2f2:	ds mov esi,0x62d3d6e4
   14004a2f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a2f9:	jns    0x14004a28a
   14004a2fb:	stos   BYTE PTR es:[rdi],al
   14004a2fc:	lods   al,BYTE PTR ds:[rsi]
   14004a2fd:	xor    edi,ebp
   14004a2ff:	adc    al,0xf0
   14004a301:	iret   
   14004a302:	js     0x14004a321
   14004a304:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a305:	add    DWORD PTR [rbp+0x4983f801],edi
   14004a30b:	(bad)  
   14004a30c:	sti    
   14004a30d:	(bad)  
   14004a30e:	(bad)  
   14004a30f:	jns    0x14004a2f3
   14004a311:	pop    rax
   14004a312:	mov    ecx,0x26f7f1be
   14004a317:	mov    bl,0xc9
   14004a319:	mov    ecx,ebp
   14004a31b:	ins    BYTE PTR es:[rdi],dx
   14004a31c:	adc    ah,BYTE PTR [rdi]
   14004a31e:	repnz and al,0xf6
   14004a321:	sahf   
   14004a322:	xor    eax,edi
   14004a324:	(bad)  
   14004a325:	(bad)  
   14004a326:	nop
   14004a327:	movsxd ebx,DWORD PTR [rsi]
   14004a329:	ficomp WORD PTR [rcx]
   14004a32b:	(bad)  
   14004a32c:	fbld   TBYTE PTR [rdi]
   14004a32e:	(bad)  
   14004a32f:	ffreep st(4)
   14004a331:	xlat   BYTE PTR ds:[rbx]
   14004a332:	or     ebx,DWORD PTR [rbx]
   14004a334:	(bad)  
   14004a335:	and    eax,0xfcf31d4d
   14004a33a:	(bad)  
   14004a33b:	in     eax,0x6f
   14004a33d:	rol    BYTE PTR [rdi+rbx*8-0x3c],cl
   14004a341:	lock imul esp,edx,0x32
   14004a345:	pop    rax
   14004a346:	push   0x2937c55e
   14004a34b:	jl     0x14004a37b
   14004a34d:	mul    DWORD PTR [rip+0xffffffffd0905045]        # 0x11094f398
   14004a353:	rcl    BYTE PTR [rbx+riz*1-0x52],1
   14004a357:	cmp    al,0xf1
   14004a359:	ds mov esp,0x5fb6ccf3
   14004a35f:	loop   0x14004a349
   14004a361:	(bad)
   14004a364:	jmp    0x14004a3d5
   14004a366:	mov    dh,0x47
   14004a368:	pushf  
   14004a369:	mov    bl,0x6d
   14004a36b:	movabs ds:0xb682dfc4f253f6c6,al
   14004a374:	pop    rbx
   14004a375:	cmp    ebp,DWORD PTR cs:[rbx+0x53]
   14004a379:	xchg   edx,eax
   14004a37a:	fadd   DWORD PTR [rbp-0x25]
   14004a37d:	movabs eax,ds:0x458fdebe67bed2d3
   14004a386:	or     al,0xed
   14004a388:	jae    0x14004a3b7
   14004a38a:	movabs al,ds:0x78032186ec8c5318
   14004a393:	mov    ecx,0x15c60a7a
   14004a398:	mov    al,0xc3
   14004a39a:	xchg   ebp,eax
   14004a39b:	xor    al,0xc9
   14004a39d:	pop    rax
   14004a39e:	push   rdx
   14004a39f:	(bad)  
   14004a3a0:	xor    al,BYTE PTR [rdi+0x3c]
   14004a3a3:	(bad)  
   14004a3a4:	(bad)  
   14004a3a5:	test   BYTE PTR [rsi+0x4d],dh
   14004a3a8:	mov    ch,0xa1
   14004a3aa:	xchg   ebp,eax
   14004a3ab:	push   0xffffffffffffffc7
   14004a3ad:	test   eax,0x671f38a2
   14004a3b2:	add    edx,esp
   14004a3b4:	rex lods eax,DWORD PTR ds:[rsi]
   14004a3b6:	sbb    eax,0xec38af38
   14004a3bb:	and    al,0xae
   14004a3bd:	rex.RXB sub BYTE PTR [r14+0x78],r12b
   14004a3c1:	shl    cl,cl
   14004a3c3:	addr32 mov esp,0x21d776c1
   14004a3c9:	outs   dx,DWORD PTR ds:[rsi]
   14004a3ca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a3cb:	test   eax,0xde6d43c1
   14004a3d0:	repz (bad) 
   14004a3d2:	in     al,0xf4
   14004a3d4:	mov    edi,edi
   14004a3d6:	rex.WRX (bad) 
   14004a3d8:	cld    
   14004a3d9:	cmp    ch,BYTE PTR [rbp+0x14]
   14004a3dc:	shr    bl,0x29
   14004a3df:	or     ch,al
   14004a3e1:	or     eax,0xe647efc0
   14004a3e6:	push   rdi
   14004a3e7:	(bad)  [rip+0xffffffff8bab2b07]        # 0xcbafcef4
   14004a3ed:	movabs ds:0xab7ddd30edfdf763,eax
   14004a3f6:	(bad)  
   14004a3f7:	sti    
   14004a3f8:	test   BYTE PTR [rsp+rcx*4+0x4f372c29],ah
   14004a3ff:	cmp    eax,0xef7b26d0
   14004a404:	rex.X jmp 0x14004a455
   14004a407:	mov    ds,WORD PTR [rdi]
   14004a409:	xchg   edi,eax
   14004a40a:	loop   0x14004a396
   14004a40c:	add    al,0x1d
   14004a40e:	push   rbx
   14004a40f:	lock data16 (bad) 
   14004a412:	ret    
   14004a413:	cld    
   14004a414:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a415:	std    
   14004a416:	rex.WR sbb r12b,dil
   14004a419:	rex.WRB shl QWORD PTR [r14+rbx*8-0x56055ec3],cl
   14004a421:	(bad)  
   14004a422:	lahf   
   14004a423:	cmp    dh,bh
   14004a425:	mov    dh,0xa6
   14004a427:	jge    0x14004a3ed
   14004a429:	retf   
   14004a42a:	and    ch,BYTE PTR [rax-0x51ec5819]
   14004a430:	(bad)  
   14004a431:	repnz ss hlt 
   14004a434:	fadd   st,st(3)
   14004a436:	rex.WR scas al,BYTE PTR es:[rdi]
   14004a438:	pop    rdi
   14004a439:	(bad)  
   14004a43a:	mov    eax,0x8ba59a7d
   14004a43f:	(bad)  
   14004a440:	fwait
   14004a441:	neg    DWORD PTR [rdi-0x3b55a64a]
   14004a447:	call   0x10e71880d
   14004a44c:	jg     0x14004a489
   14004a44e:	icebp  
   14004a44f:	(bad)  
   14004a450:	paddq  mm1,QWORD PTR [rbp+0x21]
   14004a454:	mov    esp,0x1495eb2d
   14004a459:	xor    al,0xf7
   14004a45b:	(bad)  
   14004a45c:	shl    BYTE PTR [rcx],1
   14004a45e:	add    esp,DWORD PTR [rcx]
   14004a460:	cmp    DWORD PTR [rdx+0x48],edx
   14004a463:	rex.W jns 0x14004a401
   14004a466:	cmp    eax,0x6da0ca58
   14004a46b:	rex.WRXB add BYTE PTR [r9+0x25],r13b
   14004a46f:	(bad)  
   14004a470:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a471:	movabs ds:0x2831126868d04af8,eax
   14004a47a:	sub    eax,0x8ce2615
   14004a47f:	rex.B
   14004a480:	rex.X
   14004a481:	div    DWORD PTR ds:[rdi+rcx*2]
   14004a485:	rex adc DWORD PTR [rbx+0x46800716],edi
   14004a48c:	or     al,0x1f
   14004a48e:	call   0xdd38b403
   14004a493:	sbb    BYTE PTR [rip+0xffffffff82674c63],0x35        # 0xc26bf0fd
   14004a49a:	sbb    al,0x6a
   14004a49c:	(bad)  
   14004a49d:	add    bl,ah
   14004a49f:	adc    ecx,ebx
   14004a4a1:	jo     0x14004a437
   14004a4a3:	xchg   esp,eax
   14004a4a4:	(bad)  
   14004a4a5:	xchg   ecx,eax
   14004a4a6:	push   rdx
   14004a4a7:	mov    es,esp
   14004a4a9:	adc    DWORD PTR [rax],edx
   14004a4ab:	cmp    al,0x7a
   14004a4ad:	fistp  QWORD PTR [rbx]
   14004a4af:	mov    ecx,0x783c2cfa
   14004a4b4:	sub    bl,BYTE PTR [rbp+0x3e]
   14004a4b7:	(bad)  
   14004a4b8:	and    al,0xf0
   14004a4ba:	mov    edx,0xfc00de91
   14004a4bf:	pop    rsi
   14004a4c0:	in     eax,0x16
   14004a4c2:	mov    esi,DWORD PTR [rcx+0x6c]
   14004a4c5:	cmp    al,0xfc
   14004a4c7:	rcr    BYTE PTR [rdi-0x70],1
   14004a4ca:	(bad)  
   14004a4cc:	addr32 rex.X mov ebp,0x5f360b8f
   14004a4d3:	sbb    r14,QWORD PTR [r9+r9*4+0x68369dbf]
   14004a4db:	or     BYTE PTR [rax+0x1b],bh
   14004a4de:	ret    0xcde1
   14004a4e1:	ret    
   14004a4e2:	jnp    0x14004a4cf
   14004a4e4:	rcl    DWORD PTR [rdi+0x411f584e],1
   14004a4ea:	mov    ebp,0xdbaeeca8
   14004a4ef:	rcl    bl,0x18
   14004a4f2:	stos   BYTE PTR es:[rdi],al
   14004a4f3:	movzx  eax,BYTE PTR [rax]
   14004a4f6:	xchg   BYTE PTR [rbp-0xa],dh
   14004a4f9:	jne    0x14004a4c3
   14004a4fb:	cmp    eax,0xcc971aaa
   14004a500:	and    dl,cl
   14004a502:	ja     0x14004a535
   14004a504:	rex.WRXB or BYTE PTR [r10],r10b
   14004a507:	add    cl,ch
   14004a509:	jo     0x14004a4d7
   14004a50b:	xchg   ebp,eax
   14004a50c:	(bad)  
   14004a50d:	fiadd  WORD PTR [rbx-0x6804e39]
   14004a513:	sub    al,0x87
   14004a515:	mov    dh,0x5f
   14004a517:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a518:	mov    esp,0xf6cc8db6
   14004a51d:	or     BYTE PTR [rsi],dh
   14004a51f:	or     BYTE PTR [rbx],dh
   14004a521:	jle    0x14004a549
   14004a523:	int    0xfb
   14004a525:	mov    ecx,DWORD PTR [rbp+0x138aa23f]
   14004a52b:	stos   DWORD PTR es:[rdi],eax
   14004a52c:	std    
   14004a52d:	shl    ebp,cl
   14004a52f:	lock sub eax,0xfef12f7b
   14004a535:	jae    0x14004a553
   14004a537:	outs   dx,DWORD PTR ds:[rsi]
   14004a538:	xor    al,0xdb
   14004a53a:	mov    esp,0x8f9887f8
   14004a53f:	rex.WRX cmp QWORD PTR [rdi-0x3aece86b],r15
   14004a546:	jbe    0x14004a566
   14004a548:	push   rax
   14004a549:	xchg   esp,eax
   14004a54a:	or     al,0xe0
   14004a54c:	rex.WB
   14004a54d:	rex.WX adc QWORD PTR [rsi],rcx
   14004a550:	(bad)  
   14004a551:	add    ecx,ebp
   14004a553:	popf   
   14004a554:	push   0x335ff488
   14004a559:	cs (bad) 
   14004a55b:	rex.B iret 
   14004a55d:	test   BYTE PTR [rbx-0x5c],ah
   14004a560:	shr    DWORD PTR [rdx+0x17],cl
   14004a563:	or     ebp,DWORD PTR [rcx+0x23]
   14004a566:	add    DWORD PTR [rbx],edi
   14004a568:	pop    rcx
   14004a569:	add    edi,esp
   14004a56b:	xchg   esp,eax
   14004a56c:	outs   dx,BYTE PTR ds:[rsi]
   14004a56d:	cmp    DWORD PTR [rdx+0x72],edx
   14004a570:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a571:	xchg   ebx,eax
   14004a572:	xor    BYTE PTR [rsp+rsi*8+0x45366759],cl
   14004a579:	mov    ah,0xb
   14004a57b:	push   rdx
   14004a57c:	(bad)  
   14004a57d:	ins    DWORD PTR es:[rdi],dx
   14004a57e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a57f:	retf   0x7a40
   14004a582:	ins    DWORD PTR es:[rdi],dx
   14004a583:	popf   
   14004a584:	leave  
   14004a585:	xor    DWORD PTR [esi+0x54],0x5f666b58
   14004a58d:	(bad)  
   14004a58e:	rcr    BYTE PTR [rbx],cl
   14004a590:	sbb    bh,0x8b
   14004a593:	fadd   QWORD PTR [rdx-0x7]
   14004a596:	(bad)  
   14004a597:	jp     0x14004a57c
   14004a599:	rex.XB (bad) 
   14004a59b:	loop   0x14004a55f
   14004a59d:	hlt    
   14004a59e:	(bad)  
   14004a59f:	(bad)  
   14004a5a1:	jmp    0x14004a550
   14004a5a3:	out    dx,eax
   14004a5a4:	sub    BYTE PTR [rbp-0x64],ah
   14004a5a7:	mov    ecx,0xfb4bd17
   14004a5ac:	add    ecx,edx
   14004a5ae:	(bad)  
   14004a5af:	xchg   edx,eax
   14004a5b0:	sbb    esi,DWORD PTR [rdx+0xe]
   14004a5b3:	out    dx,eax
   14004a5b4:	je     0x17638e4af
   14004a5ba:	(bad)  
   14004a5bb:	(bad)  
   14004a5bc:	xchg   al,bh
   14004a5be:	cdq    
   14004a5bf:	mov    eax,0xd763e213
   14004a5c4:	icebp  
   14004a5c5:	clc    
   14004a5c6:	xor    edi,ebp
   14004a5c8:	(bad)  
   14004a5ca:	mov    dh,0x4a
   14004a5cc:	repz (bad) 
   14004a5cf:	(bad)  
   14004a5d0:	test   esp,ebx
   14004a5d2:	rex.WRXB (bad) 
   14004a5d4:	sub    BYTE PTR [rdi-0x1c093d9],0x6e
   14004a5db:	hlt    
   14004a5dc:	enter  0xecc3,0xdf
   14004a5e0:	mov    eax,0x2f7f1d62
   14004a5e5:	loope  0x14004a65d
   14004a5e7:	scas   al,BYTE PTR es:[rdi]
   14004a5e8:	movabs ds:0xff799c04c626da61,al
   14004a5f1:	xor    al,0xef
   14004a5f3:	scas   eax,DWORD PTR es:[rdi]
   14004a5f4:	xor    ch,al
   14004a5f6:	rex.WRXB loope 0x14004a678
   14004a5f9:	pop    rdx
   14004a5fa:	int    0x37
   14004a5fc:	xchg   edi,eax
   14004a5fd:	rol    DWORD PTR [rdx+0x2d2ff066],cl
   14004a603:	std    
   14004a604:	xor    eax,0xc9140437
   14004a609:	iret   
   14004a60a:	mov    ch,0x5e
   14004a60c:	(bad)  
   14004a60d:	movabs ds:0x21cf5e64e2046ae1,eax
   14004a616:	(bad)  
   14004a617:	mov    eax,0x44c08076
   14004a61c:	or     cl,BYTE PTR [rdx-0x593ebf33]
   14004a622:	cli    
   14004a623:	rex.WX sti 
   14004a625:	jl     0x14004a63e
   14004a627:	cmc    
   14004a628:	rex.WRXB loopne 0x14004a5d2
   14004a62b:	jmp    0x10d68f88b
   14004a630:	call   FWORD PTR [rcx+0x8]
   14004a633:	outs   dx,DWORD PTR ds:[rsi]
   14004a634:	sbb    al,0x0
   14004a636:	mov    ch,0xf0
   14004a638:	(bad)  
   14004a639:	cmp    DWORD PTR [rcx],esp
   14004a63b:	cmp    BYTE PTR [rdx],bh
   14004a63d:	retf   
   14004a63e:	xchg   BYTE PTR [rdi+0x4c],al
   14004a641:	and    BYTE PTR [rdi-0x6cfc58e0],dh
   14004a647:	jbe    0x14004a5ca
   14004a649:	nop
   14004a64a:	sbb    BYTE PTR [rcx+0x28],ch
   14004a64d:	scas   al,BYTE PTR es:[rdi]
   14004a64e:	xor    DWORD PTR [rcx],0xffffffc4
   14004a651:	hlt    
   14004a652:	sbb    BYTE PTR [rdx-0x3],bpl
   14004a656:	sbb    DWORD PTR [rdi],0xffc7d397
   14004a65c:	scas   al,BYTE PTR es:[rdi]
   14004a65d:	ds clc 
   14004a65f:	add    ch,BYTE PTR [rcx]
   14004a661:	add    bh,BYTE PTR [rax+0x1d]
   14004a664:	add    DWORD PTR [rcx+0x56f801bd],0xffca16e5
   14004a66e:	fdivr  DWORD PTR [rbp-0x15]
   14004a671:	(bad)  
   14004a672:	sbb    eax,edx
   14004a674:	cld    
   14004a675:	rex.X xor ebx,ebp
   14004a678:	jne    0x14004a6e7
   14004a67a:	mov    ecx,0x76a8292d
   14004a67f:	mov    esp,0xc7dfec74
   14004a684:	(bad)  
   14004a685:	repz jmp 0x11dcfc4fc
   14004a68b:	(bad)  
   14004a68c:	out    0xbd,eax
   14004a68e:	mov    bh,0x98
   14004a691:	xchg   ecx,eax
   14004a692:	push   rax
   14004a693:	mov    ch,0xc5
   14004a695:	cmp    ah,dh
   14004a697:	ret    0x9b7c
   14004a69a:	add    BYTE PTR [rsp+rdi*4+0x102326bc],dl
   14004a6a1:	xor    ch,BYTE PTR [rax+0x1fd45d26]
   14004a6a7:	nop
   14004a6a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a6a9:	data16 cmp bl,BYTE PTR [rsi-0x1a]
   14004a6ad:	(bad)  
   14004a6ae:	xchg   ebx,eax
   14004a6af:	out    dx,eax
   14004a6b0:	mov    ecx,eax
   14004a6b2:	cmc    
   14004a6b3:	test   BYTE PTR [rbx-0x54],0x5f
   14004a6b7:	cmp    al,0x4d
   14004a6b9:	jne    0x14004a734
   14004a6bb:	or     ebx,DWORD PTR [rcx+0x3fe71aed]
   14004a6c1:	sub    DWORD PTR [rdx+0x494fe266],ecx
   14004a6c7:	(bad)  
   14004a6c9:	adc    esi,ebx
   14004a6cb:	loope  0x14004a681
   14004a6cd:	shr    eax,0xe1
   14004a6d0:	jo     0x14004a704
   14004a6d2:	pslld  mm4,QWORD PTR [rip+0xffffffff81ef4d65]        # 0xc1f3f43e
   14004a6d9:	cmp    DWORD PTR [rbx],esp
   14004a6db:	(bad)  
   14004a6dc:	rex.WRXB rol QWORD PTR [rip+0xffffffffd273e2d0],cl        # 0x1127889b3
   14004a6e3:	(bad)  
   14004a6e4:	sub    ecx,ecx
   14004a6e6:	push   rdi
   14004a6e7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a6e8:	push   rdi
   14004a6e9:	xor    eax,0x37fce07b
   14004a6ee:	mov    ah,0xcf
   14004a6f0:	pop    rcx
   14004a6f1:	sub    dl,BYTE PTR [rax]
   14004a6f3:	(bad)  
   14004a6f4:	(bad)  
   14004a6f5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a6f6:	rex.W add spl,0xd8
   14004a6fa:	and    eax,0xfbc8110f
   14004a6ff:	in     eax,dx
   14004a700:	sbb    al,0x85
   14004a702:	jbe    0x14004a6ba
   14004a704:	xchg   edi,eax
   14004a705:	ficom  WORD PTR [rcx+0x8da0423]
   14004a70b:	(bad)  
   14004a70c:	and    al,BYTE PTR [rip+0x7bbfdcb1]        # 0x1bbc483c3
   14004a712:	fsub   st(1),st
   14004a714:	movabs rbx,0xdf57037183da4b70
   14004a71e:	retf   
   14004a71f:	in     eax,0x4f
   14004a721:	cld    
   14004a722:	pop    rbp
   14004a723:	(bad)  
   14004a724:	cld    
   14004a725:	sti    
   14004a726:	mov    esp,0xde80d30e
   14004a72b:	add    ah,bh
   14004a72d:	fiadd  WORD PTR [rax+rsi*1-0x4e]
   14004a731:	iret   
   14004a732:	sbb    edx,DWORD PTR [rsi+0x7]
   14004a735:	(bad)  
   14004a736:	sub    al,0x51
   14004a738:	call   QWORD PTR [rdx]
   14004a73a:	sti    
   14004a73b:	mov    ebx,0x40776a0b
   14004a740:	or     al,0x87
   14004a742:	int    0x63
   14004a744:	imul   esi,DWORD PTR [rdi],0x4f
   14004a747:	rex.WRXB mov r12b,0xdc
   14004a74a:	shl    cl,1
   14004a74c:	in     eax,0x37
   14004a74e:	mov    dh,0x6
   14004a750:	pop    rdi
   14004a751:	rex.WXB (bad) 
   14004a753:	and    eax,0x4581c344
   14004a758:	or     esp,DWORD PTR [rdx-0x71220b96]
   14004a75e:	movabs ds:0x4f50f27252706b5b,al
   14004a767:	popf   
   14004a768:	cmp    ecx,eax
   14004a76a:	fcom   QWORD PTR [rax]
   14004a76c:	add    edi,DWORD PTR [rax-0x4e049946]
   14004a772:	ja     0x14004a7c6
   14004a774:	(bad)  
   14004a775:	jle    0x14004a77f
   14004a777:	mov    ecx,0xd6e2c5b6
   14004a77c:	sub    DWORD PTR [rsi],edx
   14004a77e:	mov    edx,0x73e77fb9
   14004a783:	xchg   edx,eax
   14004a784:	ret    0x247f
   14004a787:	and    bh,bh
   14004a789:	mov    cl,0xa4
   14004a78b:	adc    eax,0x86dabb69
   14004a790:	(bad)  
   14004a791:	imul   eax,DWORD PTR [rax],0x39666188
   14004a797:	ins    BYTE PTR es:[rdi],dx
   14004a798:	rex.WRXB pop r13
   14004a79a:	jle    0x14004a749
   14004a79c:	repnz (bad) 
   14004a79e:	in     eax,0xd5
   14004a7a0:	cld    
   14004a7a1:	ja     0x14004a77e
   14004a7a3:	cmp    cl,BYTE PTR [rbx+rbx*1+0x21]
   14004a7a7:	rex.WR movabs al,fs:0x92c3474adeb3b573
   14004a7b2:	(bad)  
   14004a7b3:	xlat   BYTE PTR ds:[rbx]
   14004a7b4:	or     al,0xc2
   14004a7b6:	movabs eax,ds:0x4526c099bc404da0
   14004a7bf:	rex.XB
   14004a7c0:	cs ja  0x14004a7f5
   14004a7c3:	mov    dh,0x58
   14004a7c5:	movabs ds:0x4d39a0940c361285,al
   14004a7ce:	rex.WB
   14004a7cf:	shl    BYTE PTR gs:[rdi+rsi*1],0xb0
   14004a7d4:	in     eax,0x2f
   14004a7d6:	je     0x14004a7f6
   14004a7d8:	sbb    ebx,DWORD PTR [rsi+0x10]
   14004a7db:	jmp    0x18b629e9f
   14004a7e0:	xor    ch,BYTE PTR [rax]
   14004a7e2:	(bad)  
   14004a7e3:	add    eax,0x52d09024
   14004a7e8:	mov    dl,BYTE PTR [rip+0xffffffffca3c9f66]        # 0x10a414754
   14004a7ee:	in     al,0x1f
   14004a7f0:	popf   
   14004a7f1:	xor    BYTE PTR [ebp-0x69],cl
   14004a7f5:	cdq    
   14004a7f6:	adc    DWORD PTR [rsi+0x6f4936e7],0x0
   14004a7fd:	mov    esi,0xfd079915
   14004a802:	mov    cl,ch
   14004a804:	movabs ds:0xf359965f93243e59,al
   14004a80d:	movabs al,ds:0x5ccdf25dd5232ed6
   14004a816:	std    
   14004a817:	cmp    eax,0xe0640247
   14004a81c:	mov    gs,esp
   14004a81e:	fxch   st(1)
   14004a820:	cmc    
   14004a821:	jnp    0x14004a88a
   14004a823:	mov    ebp,0x9fb789ff
   14004a828:	cmp    al,0xbc
   14004a82a:	in     ax,0x4f
   14004a82d:	movabs rdi,0xfef26c95c41f6666
   14004a837:	movabs eax,ds:0xf56119ea4057f0d
   14004a840:	jno    0x14004a83b
   14004a842:	mov    edi,esi
   14004a844:	push   rdx
   14004a845:	test   al,al
   14004a847:	je     0x14004a844
   14004a849:	and    eax,0x514fb6d6
   14004a84e:	pop    rbp
   14004a84f:	mov    ebp,0xd471d488
   14004a854:	ja     0x14004a82c
   14004a856:	xor    ebp,ebp
   14004a858:	mov    al,0xfe
   14004a85a:	(bad)  
   14004a85b:	rex.W (bad) 
   14004a85d:	fmul   st,st(0)
   14004a85f:	(bad)  
   14004a860:	rex.RXB push r14
   14004a862:	cli    
   14004a863:	sbb    BYTE PTR [rip+0x1cb025b4],cl        # 0x15cb4ce1d
   14004a869:	sbb    ah,ch
   14004a86b:	xchg   ebp,eax
   14004a86c:	cmp    eax,0xcacc5fb2
   14004a871:	fst    QWORD PTR [rsi+0x8]
   14004a874:	fcmove st,st(3)
   14004a876:	fisub  DWORD PTR [rip+0xfffffffff904a506]        # 0x139094d82
   14004a87c:	movabs al,ds:0xa3d88e7bf61fd664
   14004a885:	sbb    ecx,ebp
   14004a887:	rex.RXB (bad) 
   14004a889:	mov    BYTE PTR [rbx-0x2ea558cf],0x4b
   14004a890:	(bad)  
   14004a891:	xor    al,0x6d
   14004a894:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a895:	shr    DWORD PTR [rax],cl
   14004a897:	(bad)  
   14004a898:	shr    DWORD PTR [rbx],0x12
   14004a89b:	push   rsi
   14004a89c:	adc    bl,dh
   14004a89e:	jl     0x14004a84b
   14004a8a0:	adc    BYTE PTR [rax],bl
   14004a8a2:	ds nop
   14004a8a4:	shl    BYTE PTR [rbx],cl
   14004a8a6:	repnz div BYTE PTR [rdx]
   14004a8a9:	rex xchg eax,eax
   14004a8ab:	repz std 
   14004a8ad:	or     BYTE PTR [rcx+0x68],cl
   14004a8b0:	mov    ebx,0x7af1108a
   14004a8b5:	or     eax,0xc7f679b4
   14004a8ba:	in     al,0xc5
   14004a8bc:	(bad)  
   14004a8bd:	jle    0x14004a910
   14004a8bf:	(bad)  
   14004a8c0:	sti    
   14004a8c1:	mul    DWORD PTR [rsp+rcx*4]
   14004a8c4:	lock jne 0x14004a859
   14004a8c7:	(bad)  
   14004a8c8:	hlt    
   14004a8c9:	(bad)  
   14004a8ca:	loopne 0x14004a867
   14004a8cc:	leave  
   14004a8cd:	sub    eax,0x2c6f3ec8
   14004a8d2:	idiv   bh
   14004a8d4:	xchg   edx,eax
   14004a8d5:	fwait
   14004a8d6:	retf   0xa807
   14004a8d9:	mov    esi,DWORD PTR [rsi]
   14004a8db:	inc    BYTE PTR [rbx+0x2ae9b156]
   14004a8e1:	movabs ds:0x634bae16dfee8519,eax
   14004a8ea:	mov    eax,0x3a168a41
   14004a8ef:	int    0x3a
   14004a8f1:	shl    esi,0xf5
   14004a8f4:	in     eax,0xd0
   14004a8f6:	ds (bad) 
   14004a8f8:	loopne 0x14004a95b
   14004a8fa:	and    DWORD PTR [rdx+0x48],esi
   14004a8fd:	and    eax,0x58ab4d33
   14004a902:	mov    dh,0xd4
   14004a904:	push   rdi
   14004a905:	enter  0xb52d,0xae
   14004a909:	sahf   
   14004a90a:	jno    0x14004a90a
   14004a90c:	mov    cl,0x77
   14004a90e:	movabs ds:0xede5817cbd33f71b,eax
   14004a917:	push   rbx
   14004a918:	mov    WORD PTR [rdi-0x50c8dd31],?
   14004a91e:	rex.RB cli 
   14004a920:	mov    cl,0xe1
   14004a922:	(bad)  
   14004a923:	(bad)  
   14004a924:	cmp    al,0xff
   14004a926:	ret    0xbfbc
   14004a929:	(bad)  
   14004a92a:	mov    esp,0x9bf6dc84
   14004a92f:	sbb    BYTE PTR cs:[rax+0x6e],0x8b
   14004a934:	sub    DWORD PTR [rbp+0x7c],esi
   14004a937:	scas   al,BYTE PTR es:[rdi]
   14004a938:	sub    eax,0x89e525fb
   14004a93d:	jns    0x14004a8fe
   14004a93f:	mov    bl,0x32
   14004a941:	lahf   
   14004a942:	int3   
   14004a943:	(bad)  
   14004a944:	(bad)  
   14004a945:	mov    DWORD PTR [rbx],esp
   14004a947:	nop
   14004a948:	cmp    edi,edi
   14004a94a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a94b:	adc    edi,DWORD PTR [rdx-0x19]
   14004a94e:	mov    esp,0x96aac81d
   14004a953:	xchg   esp,eax
   14004a954:	xor    r8,r15
   14004a957:	jg     0x14004a9c7
   14004a959:	cmp    BYTE PTR [rax-0x701bf25a],ch
   14004a95f:	in     eax,0xe7
   14004a961:	jb     0x14004a98e
   14004a963:	xor    DWORD PTR [rbp+0x2134a6ed],ebx
   14004a969:	mov    ebx,0xc088b76
   14004a96e:	pshufw mm3,QWORD PTR [rsi-0x58],0x25
   14004a973:	lods   al,BYTE PTR fs:[rsi]
   14004a975:	ret    0xf8b9
   14004a978:	adc    ebx,DWORD PTR [rdx+0x21501236]
   14004a97e:	(bad)  
   14004a97f:	and    BYTE PTR [rax-0x39],cl
   14004a982:	test   al,0xb1
   14004a984:	xor    eax,0xcbfd921
   14004a989:	mov    dh,al
   14004a98b:	test   al,0x60
   14004a98d:	icebp  
   14004a98e:	rex.WRB fdivr QWORD PTR [r8+0xe]
   14004a992:	clc    
   14004a993:	ins    DWORD PTR es:[rdi],dx
   14004a994:	mov    esi,0x2dbbadb1
   14004a999:	rcr    BYTE PTR [rbx],cl
   14004a99b:	sbb    bh,0x4d
   14004a99e:	outs   dx,BYTE PTR ds:[rsi]
   14004a99f:	xchg   ecx,eax
   14004a9a0:	idiv   DWORD PTR [rdi+0x7f7f2e47]
   14004a9a6:	cmp    ebx,esp
   14004a9a8:	(bad)  
   14004a9a9:	or     BYTE PTR [rsi],cl
   14004a9ab:	(bad)
   14004a9ae:	adc    BYTE PTR [rdi+0x2b],bh
   14004a9b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a9b2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a9b3:	mov    dh,0x4b
   14004a9b6:	stc    
   14004a9b7:	in     al,dx
   14004a9b8:	sbb    al,0x1f
   14004a9ba:	fisttp WORD PTR [rax+0x3a]
   14004a9bd:	and    DWORD PTR [rsi],edi
   14004a9bf:	(bad)  
   14004a9c0:	xchg   edi,eax
   14004a9c1:	fidiv  DWORD PTR [rdx]
   14004a9c3:	pop    rax
   14004a9c4:	sub    al,ah
   14004a9c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a9c7:	mov    ebx,0xe52f8b13
   14004a9cc:	repz rex.X push 0x6bd26d1b
   14004a9d3:	sub    DWORD PTR [rdx],ebp
   14004a9d5:	movabs ds:0xcff7e7696905c801,al
   14004a9df:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a9e0:	rex.WR
   14004a9e1:	ss out dx,eax
   14004a9e3:	out    0xca,eax
   14004a9e5:	xchg   ebx,eax
   14004a9e6:	out    dx,eax
   14004a9e7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a9e8:	cwde   
   14004a9e9:	int    0x68
   14004a9eb:	cs popf 
   14004a9ed:	(bad)  
   14004a9ee:	in     eax,dx
   14004a9ef:	loop   0x14004a97c
   14004a9f1:	adc    al,0x9
   14004a9f3:	stc    
   14004a9f4:	rex.WRXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14004a9f6:	sub    al,0x92
   14004a9f8:	not    DWORD PTR [rdi+0x3809fe08]
   14004a9fe:	rex.X
   14004a9ff:	rex.WRX pop rax
   14004aa01:	xor    ecx,DWORD PTR [rcx+0x2e]
   14004aa04:	sub    DWORD PTR [rcx],ecx
   14004aa06:	popf   
   14004aa07:	rcr    BYTE PTR [rax-0x1097900a],1
   14004aa0d:	in     al,dx
   14004aa0e:	ss je  0x14004a9af
   14004aa11:	rex.WRXB add r10,r10
   14004aa14:	fwait
   14004aa15:	push   rdx
   14004aa16:	imul   edx,DWORD PTR [rax-0x4f8be47c],0x39d17983
   14004aa20:	and    ebx,DWORD PTR [rbx+0x71c734df]
   14004aa26:	nop
   14004aa27:	or     BYTE PTR [rdx],al
   14004aa29:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004aa2a:	push   rax
   14004aa2b:	sub    BYTE PTR [rbp-0x79],bl
   14004aa2e:	pushf  
   14004aa2f:	nop
   14004aa30:	ja     0x14004aa62
   14004aa32:	test   DWORD PTR [rsp+riz*4-0x5b87795e],esp
   14004aa39:	imul   ebp,DWORD PTR [rbp+rbp*1-0x3b],0x66
   14004aa3e:	ins    BYTE PTR es:[rdi],dx
   14004aa3f:	(bad)  
   14004aa40:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004aa41:	pushf  
   14004aa42:	mov    eax,0x2337ed0e
   14004aa47:	cld    
   14004aa48:	jns    0x14004aa71
   14004aa4a:	popf   
   14004aa4b:	and    esi,DWORD PTR [rdx-0x4b05db83]
   14004aa51:	pop    rbp
   14004aa52:	(bad)  
   14004aa53:	jl     0x14004aa9f
   14004aa55:	rex.WXB int3 
   14004aa57:	ds mov edi,0x5defecc6
   14004aa5d:	movabs eax,ds:0xd0047b6e8292d19c
   14004aa66:	ja     0x14004aa6b
   14004aa68:	jle    0x14004aa8d
   14004aa6a:	imul   ebx,DWORD PTR [rcx+0x7ff4397e],0x1de37173
   14004aa74:	rex.XB popf 
   14004aa76:	std    
   14004aa77:	(bad)
   14004aa7c:	or     DWORD PTR [rsi-0x46],edi
   14004aa7f:	xchg   DWORD PTR [rdi+0x7de3dbee],ebx
   14004aa85:	mov    ch,BYTE PTR [rcx-0x64]
   14004aa88:	int3   
   14004aa89:	jrcxz  0x14004aa31
   14004aa8b:	jno    0x14004aaaf
   14004aa8d:	(bad)  
   14004aa8e:	lahf   
   14004aa8f:	rex.WRX jo 0x14004aaa5
   14004aa92:	pop    rbx
   14004aa93:	xchg   ebp,eax
   14004aa94:	cmp    cl,BYTE PTR [ecx+0x29d3791d]
   14004aa9b:	cmp    bl,BYTE PTR [rbp+0x42536612]
   14004aaa1:	cmp    eax,0xe938eb41
   14004aaa6:	(bad)  
   14004aaa7:	jmp    0x14004aa87
   14004aaa9:	jae    0x14004aa6c
   14004aaab:	pop    rdx
   14004aaac:	jp     0x14004aaf1
   14004aaae:	sbb    eax,0x1ca9ffb9
   14004aab3:	cwde   
   14004aab4:	cwde   
   14004aab5:	test   BYTE PTR [rbp+0x1a],dh
   14004aab8:	or     DWORD PTR [rsi-0x39],edx
   14004aabb:	rex.W and al,BYTE PTR [rbx-0x3b572e7a]
   14004aac2:	hlt    
   14004aac3:	add    DWORD PTR [rax+0x2],ebp
   14004aac6:	test   DWORD PTR [rdx],ebp
   14004aac8:	pop    rbx
   14004aac9:	iret   
   14004aaca:	jl     0x14004aad4
   14004aacc:	push   rsi
   14004aacd:	(bad)  
   14004aace:	push   rdx
   14004aacf:	pop    rdi
   14004aad0:	(bad)  [rdx+0x75]
   14004aad3:	sti    
   14004aad4:	adc    al,0xc3
   14004aad6:	rex.WXB out 0x71,eax
   14004aad9:	mov    ebx,0x9ff223d7
   14004aade:	rex.XB pop r9
   14004aae0:	imul   edi,edx,0x11
   14004aae3:	leave  
   14004aae4:	movabs eax,ds:0x2de671fc473093bf
   14004aaed:	fisttp DWORD PTR [rcx-0x41]
   14004aaf0:	xchg   edx,eax
   14004aaf1:	ret    
   14004aaf2:	jp     0x14004ab3b
   14004aaf4:	(bad)  
   14004aaf5:	std    
   14004aaf6:	outs   dx,DWORD PTR ds:[rsi]
   14004aaf7:	cmp    eax,0xa7a10924
   14004aafc:	push   rbx
   14004aafd:	or     eax,0xe77fb948
   14004ab02:	jge    0x14004ab2d
   14004ab04:	jne    0x14004aaf6
   14004ab06:	imul   esi,DWORD PTR [rsi],0xc80f0760
   14004ab0c:	(bad)  
   14004ab0d:	and    eax,ebx
   14004ab0f:	jrcxz  0x14004aaa5
   14004ab11:	retf   
   14004ab12:	(bad)  
   14004ab13:	in     eax,0xcf
   14004ab15:	xchg   BYTE PTR [rbx],ah
   14004ab17:	test   esi,edi
   14004ab19:	sar    dh,cl
   14004ab1b:	popf   
   14004ab1c:	pop    rdi
   14004ab1d:	imul   edx,ebx,0xffffff86
   14004ab20:	mov    ecx,0xba292320
   14004ab25:	in     eax,0x1f
   14004ab27:	jns    0x14004ab59
   14004ab29:	rex.W (bad) 
   14004ab2b:	sub    dl,BYTE PTR [rcx]
   14004ab2d:	addr32 mov esi,es
   14004ab30:	(bad)  
   14004ab31:	jne    0x14004ab7b
   14004ab33:	movs   BYTE PTR es:[rdi],BYTE PTR ss:[rsi]
   14004ab35:	and    DWORD PTR [rbx+0x70],0xffffffe0
   14004ab39:	pop    rdx
   14004ab3a:	mov    ah,0x47
   14004ab3c:	fiadd  WORD PTR [rip+0xfffffffff0929547]        # 0x130974089
   14004ab42:	(bad)  
   14004ab43:	iret   
   14004ab44:	retf   
   14004ab45:	xlat   BYTE PTR ds:[rbx]
   14004ab46:	fmulp  st(6),st
   14004ab48:	jmp    0x14004aaf6
   14004ab4a:	rex.XB mov r8b,0x8f
   14004ab4d:	add    BYTE PTR [rsi+0x25],ch
   14004ab50:	mov    bh,0x68
   14004ab52:	lock cmp DWORD PTR [rsi-0x1ed17020],edi
   14004ab59:	jg     0x14004ab94
   14004ab5b:	mov    eax,0xd8d306c1
   14004ab60:	(bad)  
   14004ab61:	sbb    esi,DWORD PTR [rbx-0xf]
   14004ab64:	js     0x14004ab89
   14004ab66:	rex.RXB jbe 0x14004abd1
   14004ab69:	repnz shl dh,1
   14004ab6c:	jge    0x14004abe0
   14004ab6e:	and    DWORD PTR [rdx-0x10b068a5],edi
   14004ab74:	mov    cl,0xe8
   14004ab76:	sar    BYTE PTR [rsp+rdi*2],0xfa
   14004ab7a:	pop    rbx
   14004ab7b:	rex.X stos BYTE PTR es:[rdi],al
   14004ab7d:	cmps   DWORD PTR gs:[rsi],DWORD PTR es:[rdi]
   14004ab7f:	xchg   ebp,eax
   14004ab80:	jp     0x14004ab17
   14004ab82:	outs   dx,BYTE PTR ds:[rsi]
   14004ab83:	(bad)  
   14004ab84:	sub    al,0xe9
   14004ab86:	mov    ecx,0x597bc924
   14004ab8b:	(bad)  
   14004ab8c:	xchg   ecx,eax
   14004ab8d:	(bad)  
   14004ab8e:	enter  0x274d,0xec
   14004ab92:	sbb    eax,0xdf97237f
   14004ab97:	clc    
   14004ab98:	sub    al,0xd5
   14004ab9a:	fs (bad) 
   14004ab9c:	mov    dh,0x5f
   14004ab9e:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   14004aba0:	jrcxz  0x14004ab9f
   14004aba2:	movsxd eax,DWORD PTR [rdi]
   14004aba4:	pop    rsp
   14004aba5:	(bad)  
   14004aba6:	jge    0x14004abb5
   14004aba8:	(bad)  
   14004aba9:	stc    
   14004abaa:	ja     0x14004abc0
   14004abac:	stos   BYTE PTR es:[rdi],al
   14004abad:	adc    al,0x4e
   14004abaf:	jae    0x14004ab8a
   14004abb1:	(bad)  
   14004abb2:	scas   eax,DWORD PTR es:[rdi]
   14004abb3:	not    DWORD PTR [rdi+0x18a8f751]
   14004abb9:	sbb    DWORD PTR [rsp+rsi*4],eax
   14004abbc:	test   DWORD PTR [rcx],0x4c6f68ed
   14004abc2:	jno    0x14004abfc
   14004abc4:	mov    al,0xea
   14004abc6:	(bad)  
   14004abc7:	mov    ebp,0x292835b1
   14004abcc:	(bad)  
   14004abcd:	outs   dx,BYTE PTR ds:[rsi]
   14004abce:	and    DWORD PTR [rcx+rcx*8+0x3a],ecx
   14004abd2:	sub    al,0x59
   14004abd4:	loope  0x14004ab8a
   14004abd6:	jae    0x14004abc6
   14004abd8:	xchg   edx,eax
   14004abd9:	rex.XB sti 
   14004abdb:	xchg   esp,eax
   14004abdc:	adc    eax,0x1c7cb9b4
   14004abe1:	mul    cl
   14004abe3:	sub    al,0x5d
   14004abe5:	mov    bh,bl
   14004abe7:	iret   
   14004abe8:	xchg   ebp,eax
   14004abe9:	xchg   edx,eax
   14004abea:	mov    eax,0x3fe103f5
   14004abef:	pop    rcx
   14004abf0:	xor    DWORD PTR [rip+0xffffffffef35230d],0x1d88e2f        # 0x12f39cf07
   14004abfa:	enter  0xe37c,0x53
   14004abfe:	fwait
   14004abff:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ac00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ac01:	(bad)  
   14004ac02:	mov    esi,0xc250f2b3
   14004ac07:	ins    BYTE PTR es:[rdi],dx
   14004ac08:	movabs al,ds:0x9b909d19094e41dd
   14004ac11:	lahf   
   14004ac12:	add    esi,edi
   14004ac14:	(bad)  
   14004ac15:	pop    rsi
   14004ac16:	rex.RXB imul r8d,DWORD PTR [r8+0x6f],0x7adc9200
   14004ac1e:	push   rbp
   14004ac1f:	pop    rsi
   14004ac20:	sete   bl
   14004ac23:	stos   BYTE PTR es:[rdi],al
   14004ac24:	sbb    al,0xdd
   14004ac26:	mov    edi,0xdcd7f4b9
   14004ac2b:	cs rex.WRXB jmp 0x14004ac2d
   14004ac2f:	scas   al,BYTE PTR es:[rdi]
   14004ac30:	rex.WRB popf 
   14004ac32:	or     ch,al
   14004ac34:	fs (bad) 
   14004ac36:	(bad)  
   14004ac37:	out    0xec,eax
   14004ac39:	sbb    BYTE PTR [rsi+0x39],0xff
   14004ac3d:	jmp    0x14004ac2f
   14004ac3f:	out    dx,eax
   14004ac40:	adc    esi,DWORD PTR [rdi-0x23]
   14004ac43:	(bad)  
   14004ac44:	xor    r8b,BYTE PTR [rdx+0x6f]
   14004ac48:	(bad)  
   14004ac49:	and    BYTE PTR [rbx+0x2a52d6],dh
   14004ac4f:	sbb    eax,0x64ff8fa5
   14004ac54:	or     al,0x21
   14004ac56:	add    eax,0xdb6fe9ae
   14004ac5b:	xchg   edi,eax
   14004ac5c:	rex retf 
   14004ac5e:	xchg   BYTE PTR [rbx+0x2],ch
   14004ac61:	(bad)  
   14004ac62:	jnp    0x14004ac32
   14004ac64:	mov    esp,0xc2dc39f5
   14004ac69:	sbb    dh,ch
   14004ac6b:	(bad)
   14004ac6e:	fidivr DWORD PTR [rsi]
   14004ac70:	int    0xf0
   14004ac72:	mov    dl,0x79
   14004ac74:	jmp    QWORD PTR [rsi-0x26]
   14004ac77:	cs jg  0x14004ace7
   14004ac7a:	cmp    al,0x7f
   14004ac7c:	(bad)  
   14004ac7d:	mov    dh,0xca
   14004ac7f:	(bad)  
   14004ac80:	loopne 0x14004acb6
   14004ac82:	loopne 0x14004acf1
   14004ac84:	xchg   ecx,eax
   14004ac85:	mov    WORD PTR [rsp+rsi*8+0xf936dc9],gs
   14004ac8c:	and    esp,DWORD PTR [rdx+0x10]
   14004ac8f:	or     ebp,eax
   14004ac91:	cmp    esi,DWORD PTR [rax]
   14004ac93:	leave  
   14004ac94:	(bad)  
   14004ac95:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ac96:	rcr    BYTE PTR [rcx-0x2e],0xb6
   14004ac9a:	adc    cl,bl
   14004ac9c:	(bad)  
   14004ac9d:	xchg   esp,eax
   14004ac9e:	rex.WRX
   14004ac9f:	imul   rdx,QWORD PTR [rbx+rdx*8],0xffffffffffffffce
   14004aca4:	push   rdx
   14004aca5:	pop    rdx
   14004aca6:	sar    DWORD PTR [rcx],1
   14004aca8:	(bad)
   14004acab:	push   rsi
   14004acac:	icebp  
   14004acad:	and    eax,0xa3353d1b
   14004acb2:	(bad)  
   14004acb3:	adc    cl,bl
   14004acb5:	sbb    DWORD PTR [rcx-0x35],0x8d12b7d3
   14004acbc:	rex.WR movabs rbx,0xb8b812779a1b6866
   14004acc6:	or     eax,0xd90daec1
   14004accb:	sbb    BYTE PTR [rax],bh
   14004accd:	(bad)  
   14004acce:	rex.W mov bpl,bpl
   14004acd1:	shr    DWORD PTR [rdx+0x4c],0xcb
   14004acd5:	rex.WRX
   14004acd6:	rex xchg eax,eax
   14004acd8:	jne    0x14004ac99
   14004acda:	or     edi,DWORD PTR [rax]
   14004acdc:	cmp    ah,BYTE PTR [rdx]
   14004acde:	es cdq 
   14004ace0:	rex.WX test QWORD PTR [rsi],rcx
   14004ace3:	gs rex.B
   14004ace5:	fwait
   14004ace6:	(bad)  
   14004ace7:	jge    0x14004ac80
   14004ace9:	pop    rsp
   14004acea:	clc    
   14004aceb:	(bad)  
   14004aced:	rex.X (bad) 
   14004acef:	ins    BYTE PTR es:[rdi],dx
   14004acf0:	xchg   ecx,eax
   14004acf1:	rol    al,0xdb
   14004acf4:	pushf  
   14004acf5:	(bad)  
   14004acf6:	hlt    
   14004acf7:	(bad)  
   14004acf8:	loopne 0x14004acd0
   14004acfa:	mov    bl,BYTE PTR [rdi-0x4841006b]
   14004ad00:	mov    esi,0xcba3fefb
   14004ad05:	ret    
   14004ad06:	(bad)  
   14004ad07:	push   rbp
   14004ad08:	pop    rsp
   14004ad09:	jp     0x14004acf4
   14004ad0b:	mov    esp,DWORD PTR [rdx+0xa9c4db5]
   14004ad11:	xor    al,0xa1
   14004ad13:	shl    DWORD PTR [rdi-0x2139a4cf],0xcb
   14004ad1a:	(bad)  
   14004ad1b:	(bad)  
   14004ad1c:	in     al,dx
   14004ad1d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ad1e:	mov    ds,esi
   14004ad20:	(bad)  
   14004ad21:	xchg   ecx,eax
   14004ad22:	sbb    eax,0x65ec6673
   14004ad27:	jnp    0x14004acfa
   14004ad29:	xor    DWORD PTR [rsi],eax
   14004ad2b:	cdq    
   14004ad2c:	(bad)
   14004ad2f:	shl    dl,1
   14004ad31:	add    dh,dh
   14004ad33:	neg    DWORD PTR [esi-0x77]
   14004ad37:	pop    rax
   14004ad38:	rex.XB mov r12d,0x314e64f3
   14004ad3e:	adc    eax,0xf6b94e99
   14004ad43:	clc    
   14004ad44:	cmp    edi,DWORD PTR [rcx+0x307786fe]
   14004ad4a:	fidivr WORD PTR [rdi-0x7e812077]
   14004ad50:	in     eax,0xed
   14004ad52:	xor    edx,DWORD PTR [rdi+rdx*2]
   14004ad55:	mov    bh,0xa1
   14004ad57:	fimul  WORD PTR [rbx+0x76112296]
   14004ad5d:	and    eax,0xa6c47f11
   14004ad62:	std    
   14004ad63:	mov    dh,0xd3
   14004ad65:	jle    0x14004ad21
   14004ad67:	fimul  WORD PTR [rdi]
   14004ad69:	imul   ebp,DWORD PTR [rcx],0x50036dc0
   14004ad6f:	jmp    0x14004ad56
   14004ad71:	repz movabs al,ds:0x4459f7a40466c14c
   14004ad7b:	ror    BYTE PTR [rcx+0x1],1
   14004ad7e:	pop    rdx
   14004ad7f:	loopne 0x14004adb1
   14004ad81:	sbb    bl,BYTE PTR [rdi-0x6d8f4712]
   14004ad87:	icebp  
   14004ad88:	xor    BYTE PTR [rdx],bl
   14004ad8a:	scas   eax,DWORD PTR es:[rdi]
   14004ad8b:	fs fcmovnbe st,st(0)
   14004ad8e:	push   rcx
   14004ad8f:	xlat   BYTE PTR ds:[rbx]
   14004ad90:	pop    rsp
   14004ad91:	jne    0x14004ad7c
   14004ad93:	pop    rsp
   14004ad94:	imul   esi,DWORD PTR [rbx],0x7e
   14004ad97:	jmp    0xff9907cc
   14004ad9c:	jnp    0x14004adc7
   14004ad9e:	(bad)  [rbp-0x1cbaaff]
   14004ada4:	in     al,0xa8
   14004ada6:	and    BYTE PTR [rdx+0x9],dh
   14004ada9:	xchg   edx,eax
   14004adaa:	xchg   ecx,eax
   14004adab:	adc    bh,ah
   14004adad:	adc    BYTE PTR [rdi+0x6b6808a6],dl
   14004adb3:	out    0x92,eax
   14004adb5:	xchg   ecx,eax
   14004adb6:	mov    al,0xe8
   14004adb8:	(bad)  
   14004adb9:	mov    ecx,0xf60838b8
   14004adbe:	fucom  st(6)
   14004adc0:	push   0x1fb7d346
   14004adc5:	lahf   
   14004adc6:	rex.RXB movabs al,ds:0x2ff9deb629fe3c20
   14004add0:	cmp    dl,dh
   14004add2:	mov    edi,0x6e034dd2
   14004add7:	movsxd esi,DWORD PTR [rip+0x35dee0]        # 0x1403a8cbd
   14004addd:	repz retf 
   14004addf:	je     0x14004adfe
   14004ade1:	push   rsp
   14004ade2:	jl     0x14004ade3
   14004ade4:	in     al,dx
   14004ade5:	addr32 mov esi,0x6d64ecf0
   14004adeb:	repz mov esi,DWORD PTR [rbp-0x2a348836]
   14004adf2:	or     eax,DWORD PTR [rdi+0x74]
   14004adf5:	imul   DWORD PTR [rdx]
   14004adf7:	pop    rdx
   14004adf8:	out    dx,eax
   14004adf9:	(bad)  
   14004adfa:	fwait
   14004adfb:	mov    bl,0x69
   14004adfd:	push   0xffffffffe282069a
   14004ae02:	lods   eax,DWORD PTR ds:[rsi]
   14004ae03:	pushf  
   14004ae04:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004ae05:	sbb    ah,BYTE PTR [rdi-0x10]
   14004ae08:	int    0x95
   14004ae0a:	lods   al,BYTE PTR ds:[rsi]
   14004ae0b:	mov    edx,0xb4002c92
   14004ae10:	ficomp WORD PTR [rax+rsi*1-0x12]
   14004ae14:	jle    0x14004ae51
   14004ae16:	test   DWORD PTR cs:[ecx+ebx*2+0x3f8853a7],esi
   14004ae1f:	out    0xf0,eax
   14004ae21:	xchg   ebx,eax
   14004ae22:	(bad)  
   14004ae23:	or     edx,DWORD PTR [rsi]
   14004ae25:	jne    0x14004addd
   14004ae27:	(bad)  
   14004ae28:	test   DWORD PTR [rsi-0x7a],esp
   14004ae2b:	or     al,0xc7
   14004ae2d:	pushf  
   14004ae2e:	jns    0x14004ae1b
   14004ae30:	(bad)  
   14004ae31:	sbb    DWORD PTR [rbx+rcx*1+0x34],edx
   14004ae35:	(bad)  
   14004ae36:	sahf   
   14004ae37:	addr32 jae 0x14004ae25
   14004ae3a:	xor    al,0xd5
   14004ae3c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ae3d:	repz enter 0xdfe,0xd0
   14004ae42:	pop    rcx
   14004ae43:	sbb    esp,DWORD PTR [rdx+0x63]
   14004ae46:	adc    edi,DWORD PTR [rsi+0x24]
   14004ae49:	sar    DWORD PTR [rsi-0x2d],1
   14004ae4c:	ror    BYTE PTR [rdi+0x5dcc6258],0x7b
   14004ae53:	popf   
   14004ae54:	mov    esp,0x4723593d
   14004ae59:	rex.X clc 
   14004ae5b:	fninit 
   14004ae5d:	rex.WX cmp BYTE PTR [rdx+0x76],0xf7
   14004ae62:	xchg   edx,eax
   14004ae63:	push   rdx
   14004ae64:	add    BYTE PTR [rip+0xffffffff8ab706b5],ah        # 0xcabbb51f
   14004ae6a:	adc    al,0x7f
   14004ae6c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004ae6d:	push   rsp
   14004ae6e:	cmp    eax,0x3af9bd1b
   14004ae73:	movabs eax,ds:0xc591ae90231dab3d
   14004ae7c:	icebp  
   14004ae7d:	sub    ebp,ecx
   14004ae7f:	rex.WX (bad) 
   14004ae81:	rcl    BYTE PTR [rsi+rcx*2+0x7778db4],1
   14004ae88:	ror    DWORD PTR [rbx],cl
   14004ae8a:	xor    eax,0x6307c23
   14004ae8f:	iret   
   14004ae90:	jg     0x14004aecd
   14004ae92:	jmp    0x16add0443
   14004ae97:	jge    0x14004ae4d
   14004ae99:	jns    0x14004af04
   14004ae9b:	mov    WORD PTR [rax-0x56],ds
   14004ae9e:	cmc    
   14004ae9f:	mov    bh,0xc7
   14004aea1:	and    al,0x29
   14004aea3:	in     al,0xcf
   14004aea5:	push   rsi
   14004aea6:	test   al,0xb3
   14004aea8:	in     eax,0xf8
   14004aeaa:	mov    edx,0xbbff631c
   14004aeaf:	cmp    edi,0x46d1980d
   14004aeb5:	add    DWORD PTR [rdi+0x32dee4d],esi
   14004aebb:	lock lea edi,[rbp+0x23fc03bd]
   14004aec2:	iret   
   14004aec3:	mov    esp,0x47c1ed7d
   14004aec8:	(bad)  
   14004aec9:	sti    
   14004aeca:	push   rsp
   14004aecb:	xor    eax,0xfbd97d1e
   14004aed0:	(bad)  
   14004aed1:	cmp    eax,0xb858ae7b
   14004aed6:	mov    fs,WORD PTR [rbx+0x5612af19]
   14004aedc:	(bad)  
   14004aedd:	jrcxz  0x14004ae7a
   14004aedf:	cdq    
   14004aee0:	and    eax,edi
   14004aee2:	mov    cl,0xcb
   14004aee4:	(bad)  
   14004aee5:	adc    BYTE PTR [rbx+rbp*2+0x259e89af],ch
   14004aeec:	sub    BYTE PTR [rdx-0x39],dl
   14004aeef:	leave  
   14004aef0:	cmp    al,0xa2
   14004aef2:	test   eax,0x98f6cce3
   14004aef7:	jb     0x14004af77
   14004aef9:	xchg   edx,eax
   14004aefa:	(bad)  
   14004aefb:	vhsubps xmm5,xmm12,XMMWORD PTR [rsi]
   14004aeff:	xchg   edi,eax
   14004af00:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004af01:	movabs ds:0xf9496b18e687ede0,eax
   14004af0a:	movabs ds:0xb099ae2884d3744e,eax
   14004af13:	std    
   14004af14:	clc    
   14004af15:	(bad)  
   14004af16:	fnstcw WORD PTR [rdi]
   14004af18:	icebp  
   14004af19:	or     al,0xc3
   14004af1b:	pop    rbp
   14004af1c:	sbb    esi,ebx
   14004af1e:	mov    ebp,0xc6fe32fd
   14004af23:	adc    eax,0xc89d27a8
   14004af28:	and    al,0xba
   14004af2a:	(bad)
   14004af2d:	ja     0x14004afa7
   14004af2f:	xor    eax,0x7fd09fef
   14004af34:	imul   ebp,DWORD PTR [rdi],0x62e0f44c
   14004af3a:	rex.RX mov DWORD PTR [rdx],0xce3f217c
   14004af41:	movabs al,ds:0x4a7cc0191c9e7e5f
   14004af4a:	sar    BYTE PTR [rdx-0x5],1
   14004af4d:	jns    0x14004afb1
   14004af4f:	push   rax
   14004af50:	mov    dl,0x8
   14004af52:	jae    0x14004af9e
   14004af54:	sbb    DWORD PTR [rcx+rbp*1],edx
   14004af57:	adc    cl,BYTE PTR [rcx-0x33a8d5d9]
   14004af5d:	jmp    0x14004af9a
   14004af5f:	sbb    al,0x4
   14004af61:	mov    ch,0x9c
   14004af63:	lahf   
   14004af64:	js     0x14004afa3
   14004af66:	push   rdx
   14004af67:	addr32 jno 0x14004afb5
   14004af6a:	and    DWORD PTR [rsi-0x2d],ebp
   14004af6d:	scas   eax,DWORD PTR es:[rdi]
   14004af6e:	xchg   esp,eax
   14004af6f:	sub    bl,BYTE PTR [rcx+0x7f5f5aaa]
   14004af75:	mov    edx,0x9fe86d70
   14004af7a:	xor    DWORD PTR [rdx],eax
   14004af7c:	or     DWORD PTR [rax+0x62],0xffffffd4
   14004af80:	(bad)
   14004af85:	add    BYTE PTR [rax+0x4750230],dl
   14004af8b:	or     DWORD PTR [rcx+0x88e4474],ebx
   14004af91:	or     al,0xdf
   14004af93:	rex.W cmp BYTE PTR [rax],al
   14004af96:	xor    BYTE PTR [rdx+0x720fc0fe],ah
   14004af9c:	out    0xf0,al
   14004af9e:	(bad)  
   14004af9f:	in     al,0xc4
   14004afa1:	rex.WXB
   14004afa2:	rex
   14004afa3:	rex.WRB mov WORD PTR [r10],es
   14004afa6:	outs   dx,BYTE PTR ds:[rsi]
   14004afa7:	pop    rbx
   14004afa8:	xchg   eax,esp
   14004afaa:	mov    ebp,0x89be0061
   14004afaf:	mov    bh,0x7f
   14004afb1:	mul    DWORD PTR [rdi+0x78d4ff3f]
   14004afb7:	gs in  eax,dx
   14004afb9:	jae    0x14004b010
   14004afbb:	xor    eax,0xbbd29efc
   14004afc0:	(bad)  
   14004afc1:	and    DWORD PTR ss:[rax],esp
   14004afc4:	movabs eax,ds:0xe2cec15de09eb166
   14004afcd:	and    dl,bl
   14004afcf:	loop   0x14004b012
   14004afd1:	mov    ah,0xa8
   14004afd3:	sub    BYTE PTR [rdi],ch
   14004afd5:	popf   
   14004afd6:	mov    ebx,esp
   14004afd8:	mov    eax,0x666f850c
   14004afdd:	or     eax,0xbbfad53e
   14004afe2:	lods   al,BYTE PTR ds:[rsi]
   14004afe3:	mov    ebp,0x460f8666
   14004afe8:	fdiv   DWORD PTR [rcx]
   14004afea:	sub    edx,DWORD PTR [rax-0xd671c47]
   14004aff0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004aff1:	in     eax,0xad
   14004aff3:	repz pop rbp
   14004aff5:	scas   eax,DWORD PTR es:[rdi]
   14004aff6:	jmp    0xe6e3d599
   14004affb:	fnsave [rdx+0x17]
   14004affe:	popf   
   14004afff:	sbb    ecx,DWORD PTR [rsi+rsi*8-0x2dcc13b1]
   14004b006:	(bad)  
   14004b007:	test   ch,ah
   14004b009:	rex.WRB (bad) 
   14004b00b:	mov    esp,0x9c0c13e5
   14004b010:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14004b012:	pushf  
   14004b013:	gs jne 0x14004b011
   14004b016:	rex.RB stos BYTE PTR es:[rdi],al
   14004b018:	sub    edx,DWORD PTR [rdi]
   14004b01a:	ficomp DWORD PTR [rcx+0x7f]
   14004b01d:	adc    dh,BYTE PTR [rbx]
   14004b01f:	rcl    BYTE PTR [rbx+rax*8-0x85d1de9],cl
   14004b026:	push   rdi
   14004b027:	lods   al,BYTE PTR ds:[rsi]
   14004b028:	out    0xbf,eax
   14004b02a:	mov    bl,0xd2
   14004b02c:	(bad)  
   14004b02d:	mov    ah,0xde
   14004b02f:	(bad)  
   14004b031:	pop    rbx
   14004b032:	pop    rcx
   14004b033:	mov    ecx,0x2ec6b2b3
   14004b038:	cmp    cl,cl
   14004b03a:	rex.XB
   14004b03b:	rex.X cmp al,bl
   14004b03e:	(bad)  
   14004b03f:	movabs eax,ds:0xefa48028da45fb45
   14004b048:	lods   eax,DWORD PTR ds:[rsi]
   14004b049:	(bad)  
   14004b04a:	outs   dx,BYTE PTR ds:[rsi]
   14004b04b:	fwait
   14004b04c:	mov    edx,edx
   14004b04e:	adc    edx,edx
   14004b050:	(bad)  
   14004b051:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b052:	push   rsi
   14004b053:	loope  0x14004b042
   14004b055:	fstp   QWORD PTR [rbp-0x6692eaf5]
   14004b05b:	sbb    eax,0x6fab58a3
   14004b060:	(bad)  
   14004b061:	(bad)  
   14004b062:	ins    BYTE PTR es:[rdi],dx
   14004b063:	pop    rbx
   14004b064:	outs   dx,BYTE PTR ds:[rsi]
   14004b065:	or     eax,0x79213a44
   14004b06a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b06b:	mov    esi,0xace35e49
   14004b070:	cmp    eax,0x889756f
   14004b075:	imul   r15d,DWORD PTR [rax+0x3592373a],0x24
   14004b07d:	and    bx,WORD PTR [rbp*2+0x395a3473]
   14004b085:	movabs ds:0x41fe3c25e2409033,al
   14004b08e:	mov    ecx,0xa87fe1f4
   14004b093:	(bad)  
   14004b094:	(bad)  
   14004b095:	xor    DWORD PTR [rbp-0x7fac1283],ebp
   14004b09b:	push   rdi
   14004b09c:	pop    rbp
   14004b09d:	mov    esi,0xe87fb789
   14004b0a2:	lods   eax,DWORD PTR ds:[rsi]
   14004b0a3:	out    dx,eax
   14004b0a4:	pop    rsp
   14004b0a5:	cmp    edx,esi
   14004b0a7:	enter  0xef63,0x1b
   14004b0ab:	(bad)  
   14004b0ac:	sub    al,0x7f
   14004b0ae:	(bad)  
   14004b0af:	(bad)  
   14004b0b0:	in     eax,0xfb
   14004b0b2:	(bad)  
   14004b0b3:	mov    al,0x11
   14004b0b5:	or     eax,0x570e475
   14004b0ba:	(bad)  
   14004b0bb:	jle    0x14004b0f9
   14004b0bd:	push   0x26
   14004b0bf:	push   rsp
   14004b0c0:	movabs eax,ds:0xba9c79b7b25546e6
   14004b0c9:	sub    BYTE PTR [rcx],dl
   14004b0cb:	out    0x23,eax
   14004b0cd:	gs mov bh,0xa9
   14004b0d0:	movabs eax,ds:0xec17134d140869a9
   14004b0d9:	int3   
   14004b0da:	imul   ebp,esi,0x29
   14004b0dd:	rex.WX sbb rax,0x6d08ae17
   14004b0e3:	push   0x30
   14004b0e5:	test   DWORD PTR [rbp-0x59],0x1d8bbeaf
   14004b0ec:	nop
   14004b0ed:	adc    al,0xbe
   14004b0ef:	cmp    eax,DWORD PTR [rdx+0x3c]
   14004b0f2:	jns    0x14004b0f3
   14004b0f4:	or     DWORD PTR [rdx+0x2a88f9d0],0x5e
   14004b0fb:	imul   ecx,esi,0xffffffbc
   14004b0fe:	in     eax,0xa3
   14004b100:	xor    al,0x87
   14004b102:	fild   WORD PTR [rax-0x5a7a8645]
   14004b108:	mov    esp,DWORD PTR [rdi+0x167cb858]
   14004b10e:	mov    bh,0x73
   14004b110:	add    eax,0xb42404c2
   14004b115:	sahf   
   14004b116:	xchg   ecx,eax
   14004b117:	fsub   st,st(3)
   14004b119:	out    dx,eax
   14004b11a:	and    eax,0x304fd35
   14004b11f:	add    DWORD PTR [rbp-0x2c4a01bb],esi
   14004b125:	(bad)  
   14004b126:	rex.XB push r12
   14004b128:	add    BYTE PTR [rdi+0x7d7915ee],ah
   14004b12e:	or     DWORD PTR cs:[rcx-0x2069317b],0xffffffa7
   14004b136:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b137:	ret    0x5245
   14004b13a:	push   rbp
   14004b13b:	movabs al,ds:0x2d9fde5a19e232fd
   14004b144:	rex.X (bad) 
   14004b146:	xchg   esp,eax
   14004b147:	rex.WRXB (bad) 
   14004b149:	jg     0x14004b1c6
   14004b14b:	mov    ?,ecx
   14004b14d:	push   rdx
   14004b14e:	in     al,0x32
   14004b150:	movabs al,ds:0x84185b75f93e8101
   14004b159:	ss fcmovbe st,st(2)
   14004b15c:	(bad)  
   14004b15d:	push   rdi
   14004b15e:	jb     0x14004b18e
   14004b160:	pop    rsp
   14004b161:	out    dx,eax
   14004b162:	pop    rsi
   14004b163:	mov    edx,0xfbaf8b0e
   14004b168:	(bad)  
   14004b169:	mov    BYTE PTR [rbp-0x6e7d92cf],dl
   14004b16f:	adc    eax,ecx
   14004b171:	mov    eax,esi
   14004b173:	mov    ebx,0x25f9b323
   14004b178:	(bad)  
   14004b179:	add    al,0xf6
   14004b17b:	and    DWORD PTR [rbx],ecx
   14004b17d:	or     al,0xda
   14004b17f:	enter  0x25ad,0x31
   14004b183:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b184:	jae    0x14004b1d6
   14004b186:	(bad)  
   14004b187:	jne    0x14004b17b
   14004b189:	rex.WB loopne 0x14004b20b
   14004b18c:	movabs ds:0xee5db7fbac92141d,al
   14004b195:	add    esi,DWORD PTR ds:[rax]
   14004b198:	scas   eax,DWORD PTR es:[rdi]
   14004b199:	clc    
   14004b19a:	out    dx,al
   14004b19b:	ror    BYTE PTR [rdi-0x601c1981],0x7d
   14004b1a2:	ret    
   14004b1a3:	repnz loope 0x14004b149
   14004b1a6:	lahf   
   14004b1a7:	scas   eax,DWORD PTR es:[rdi]
   14004b1a8:	(bad)  
   14004b1a9:	or     edi,0xffffffab
   14004b1ac:	(bad)  
   14004b1ad:	ficomp WORD PTR [rsi-0x6c5989c4]
   14004b1b3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b1b4:	cmp    al,0xdd
   14004b1b6:	(bad)  
   14004b1b7:	push   rbp
   14004b1b8:	sbb    al,0x45
   14004b1ba:	test   al,0x59
   14004b1bc:	ins    DWORD PTR es:[rdi],dx
   14004b1bd:	data16 mov WORD PTR [rbp+rax*8-0x73],ds
   14004b1c2:	(bad)  
   14004b1c3:	movabs ds:0x1d291497c2928acc,eax
   14004b1cc:	rol    BYTE PTR [rax+0x30],1
   14004b1cf:	(bad)  
   14004b1d0:	mov    edi,0xaa1fa75a
   14004b1d5:	add    al,0xd
   14004b1d7:	mov    cl,0x3d
   14004b1d9:	pop    rax
   14004b1da:	adc    eax,0x93409ad5
   14004b1df:	xchg   ebp,eax
   14004b1e0:	mov    ebx,0xeb7aa7d3
   14004b1e5:	out    0x52,eax
   14004b1e7:	sub    BYTE PTR [rbx+0x20],bh
   14004b1ea:	rex.XB pushf 
   14004b1ec:	sti    
   14004b1ed:	rex.W jbe 0x14004b26d
   14004b1f0:	loopne 0x14004b258
   14004b1f2:	sti    
   14004b1f3:	in     al,dx
   14004b1f4:	sahf   
   14004b1f5:	js     0x14004b179
   14004b1f7:	jae    0x14004b248
   14004b1f9:	(bad)  
   14004b1fa:	(bad)  
   14004b1fb:	push   rax
   14004b1fc:	add    ebx,DWORD PTR [rdx+rdi*2-0x77]
   14004b200:	(bad)  
   14004b201:	mov    esp,DWORD PTR [rdi-0x3ba351d7]
   14004b207:	in     eax,dx
   14004b208:	out    dx,eax
   14004b209:	and    dl,bl
   14004b20b:	sbb    cl,ch
   14004b20d:	xlat   BYTE PTR ds:[rbx]
   14004b20e:	fldcw  WORD PTR [rsi-0x3b1cb1fe]
   14004b214:	lahf   
   14004b215:	fsubr  st,st(5)
   14004b217:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004b218:	cdq    
   14004b219:	cmc    
   14004b21a:	xchg   edi,eax
   14004b21b:	sub    ah,BYTE PTR [rdx+0xe]
   14004b21e:	jb     0x14004b1d7
   14004b220:	popf   
   14004b221:	jp     0x14004b209
   14004b223:	mov    esp,0x45d70a7e
   14004b228:	call   0xd51854d9
   14004b22d:	ds (bad) 
   14004b22f:	std    
   14004b230:	je     0x14004b1cf
   14004b232:	xor    BYTE PTR [rdi],bh
   14004b234:	jns    0x14004b232
   14004b236:	rex cmp esp,DWORD PTR [rsi]
   14004b239:	sub    al,0x1a
   14004b23b:	sbb    DWORD PTR [rsp+rbp*4+0x64],eax
   14004b23f:	rex.RXB stos DWORD PTR es:[rdi],eax
   14004b241:	sub    cl,ch
   14004b243:	jno    0x14004b24c
   14004b245:	sub    BYTE PTR [rax-0x35],dl
   14004b248:	mov    cl,0xb3
   14004b24a:	icebp  
   14004b24b:	retf   
   14004b24c:	cmp    BYTE PTR [rax+0x1b],al
   14004b24f:	shr    BYTE PTR [rbx],cl
   14004b251:	sub    DWORD PTR [rip+0xffffffff88a68368],edx        # 0xc8ab35bf
   14004b257:	(bad)  
   14004b258:	mov    eax,0x2818edbc
   14004b25d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004b25e:	hlt    
   14004b25f:	rex.WR ins DWORD PTR es:[rdi],dx
   14004b261:	adc    DWORD PTR [rsi],0x9e3edebb
   14004b267:	rex.WXB movabs r11,0xfc431e5a6afa5864
   14004b271:	ins    DWORD PTR es:[rdi],dx
   14004b272:	and    al,0x2f
   14004b274:	rex.RXB pop r11
   14004b276:	jne    0x14004b2c0
   14004b278:	xchg   DWORD PTR [rbp-0x39],ebp
   14004b27b:	sbb    esp,ebp
   14004b27d:	sub    dl,dh
   14004b27f:	xor    DWORD PTR [rdi+0x52],esi
   14004b282:	ret    0x36a1
   14004b285:	(bad)  
   14004b286:	std    
   14004b287:	sub    ecx,edi
   14004b289:	cli    
   14004b28a:	rex.XB jg 0x14004b2d8
   14004b28d:	(bad)  
   14004b28e:	stc    
   14004b28f:	sbb    dh,BYTE PTR [rdi+0x777c1a99]
   14004b295:	sbb    BYTE PTR [rax-0x70121d91],al
   14004b29b:	cmp    al,0xfa
   14004b29d:	clc    
   14004b29e:	ret    0x6f43
   14004b2a1:	jns    0x14004b26a
   14004b2a3:	jnp    0x14004b22b
   14004b2a5:	retf   
   14004b2a6:	sub    ebx,DWORD PTR [rdi-0xe]
   14004b2a9:	gs cmc 
   14004b2ab:	rex.WB push r9
   14004b2ad:	cmp    eax,0x7ea4d004
   14004b2b2:	repz and al,0xb9
   14004b2b5:	sahf   
   14004b2b6:	xor    edi,edi
   14004b2b8:	cmp    eax,0x95441104
   14004b2bd:	(bad)  
   14004b2be:	mov    bl,0x47
   14004b2c0:	loope  0x14004b2cc
   14004b2c2:	outs   dx,BYTE PTR ds:[rsi]
   14004b2c3:	sub    al,0xae
   14004b2c5:	xor    DWORD PTR [rbx+0x5],esi
   14004b2c8:	clc    
   14004b2c9:	(bad)  
   14004b2ca:	ret    0x9c79
   14004b2cd:	sahf   
   14004b2ce:	rex.RXB
   14004b2cf:	fwait
   14004b2d0:	xchg   BYTE PTR [rax+0x13ff7b1a],ah
   14004b2d6:	rcl    BYTE PTR [rdx+rax*1],0xea
   14004b2da:	shr    ebp,cl
   14004b2dc:	call   0x177767e1b
   14004b2e1:	jae    0x14004b283
   14004b2e3:	(bad)  
   14004b2e4:	test   BYTE PTR [rsi],0xe9
   14004b2e7:	sub    bh,BYTE PTR [rbx+0x7e]
   14004b2ea:	(bad)  [rsi+0x30]
   14004b2ed:	movabs eax,ds:0x8342d7b157b3790d
   14004b2f6:	(bad)  
   14004b2f7:	sub    ebx,DWORD PTR [rsi+0x7a]
   14004b2fa:	(bad)  [rdi+0x130f9628]
   14004b300:	scas   al,BYTE PTR es:[rdi]
   14004b301:	sahf   
   14004b302:	gs ins DWORD PTR es:[rdi],dx
   14004b304:	sti    
   14004b305:	and    al,0xe3
   14004b307:	retf   
   14004b308:	out    0x71,eax
   14004b30a:	cmp    edx,DWORD PTR [rdi-0x70]
   14004b30d:	data16 rex.WX pop rsp
   14004b310:	out    0x2b,al
   14004b312:	rex.RB pushf 
   14004b314:	rol    DWORD PTR [rax],0x3f
   14004b317:	mov    DWORD PTR [rbx],ecx
   14004b319:	xchg   DWORD PTR [rdx+0x1c],ecx
   14004b31c:	stc    
   14004b31d:	cmp    eax,0x62920067
   14004b322:	ja     0x14004b353
   14004b324:	lods   al,BYTE PTR ds:[rsi]
   14004b325:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b326:	mov    ebx,ebx
   14004b328:	imul   ebp,ebx,0x464ae94d
   14004b32e:	icebp  
   14004b32f:	shl    DWORD PTR [rbp-0x12610864],cl
   14004b335:	jae    0x14004b39d
   14004b337:	mov    al,0x3a
   14004b339:	cmp    DWORD PTR [rdi+0x5b],edi
   14004b33c:	rex push 0x758a490d
   14004b342:	xor    al,0x3d
   14004b344:	addr32 mov ecx,0x7e86c3b4
   14004b34a:	jbe    0x14004b38c
   14004b34c:	mov    esp,0x70e2dd74
   14004b351:	shr    dh,1
   14004b353:	add    eax,0xc7402e34
   14004b358:	push   rax
   14004b359:	out    0xe3,al
   14004b35b:	and    ebx,ecx
   14004b35d:	jnp    0x14004b3cc
   14004b35f:	mov    edi,0x24e77487
   14004b364:	ret    
   14004b365:	xchg   esp,eax
   14004b366:	rol    BYTE PTR [rax+0x69],0xd3
   14004b36a:	adc    esp,DWORD PTR [rdi]
   14004b36c:	jbe    0x14004b3ad
   14004b36e:	rex.W loop 0x14004b3d5
   14004b371:	(bad)  
   14004b372:	adc    DWORD PTR [rdi+0xd],esp
   14004b375:	icebp  
   14004b376:	(bad)  
   14004b377:	rcl    DWORD PTR [rdi+0x0],1
   14004b37a:	and    BYTE PTR [rsi-0x2c],0xed
   14004b37e:	(bad)  
   14004b37f:	mov    dl,0x6b
   14004b381:	mov    eax,0x7fae56f4
   14004b386:	add    bh,BYTE PTR [rax]
   14004b388:	(bad)  
   14004b38a:	jrcxz  0x14004b3f9
   14004b38c:	xchg   ecx,eax
   14004b38d:	cmp    ebx,ebx
   14004b38f:	add    BYTE PTR [rdx+rdx*8-0x2cd2f425],bh
   14004b396:	retf   0xe9bf
   14004b399:	and    ebx,DWORD PTR [rdi]
   14004b39b:	mov    edi,0x8781f36f
   14004b3a0:	mov    edi,0x9f060d50
   14004b3a5:	ja     0x14004b355
   14004b3a7:	js     0x14004b3ff
   14004b3a9:	add    eax,0x1e766909
   14004b3ae:	ror    BYTE PTR [rcx],1
   14004b3b0:	add    BYTE PTR [rcx+0x2b],ch
   14004b3b3:	lock adc cl,BYTE PTR [rcx+0x636e1f]
   14004b3ba:	add    BYTE PTR [rax],ah
   14004b3bc:	add    BYTE PTR [rcx+0x44],cl
   14004b3bf:	push   r12
   14004b3c1:	rex.XB
   14004b3c2:	rex.WXB
   14004b3c3:	xrelease rex.WR mov BYTE PTR [rsi+0x67],r12b
   14004b3c8:	or     DWORD PTR [rdx],0x65
   14004b3cb:	xor    esp,DWORD PTR [rbp-0x73]
   14004b3ce:	(bad)  
   14004b3cf:	fst    st(1)
   14004b3d1:	cwde   
   14004b3d2:	frstor [rbx+0x4397508f]
   14004b3d8:	retf   0xc0a2
   14004b3db:	jmp    0xe80cf5f9
   14004b3e0:	rex.WRB jmp 0x14004b3ec
   14004b3e3:	sbb    dl,BYTE PTR [rcx]
   14004b3e5:	jbe    0x14004b394
   14004b3e7:	(bad)  
   14004b3e8:	pop    rdx
   14004b3e9:	cmp    DWORD PTR [rbp+0xa316cdd],0x70
   14004b3f0:	popf   
   14004b3f1:	xchg   BYTE PTR [rbp+0x693f6fb6],bl
   14004b3f7:	(bad)  
   14004b3f8:	(bad)  
   14004b3f9:	test   ebx,edi
   14004b3fb:	not    BYTE PTR [rdi+rsi*1+0x38]
   14004b3ff:	push   0xffffffffdc049f3d
   14004b404:	je     0x14004b3a5
   14004b406:	sub    ecx,DWORD PTR [rdi+0x7f]
   14004b409:	nop
   14004b40a:	sub    ecx,DWORD PTR [rdi+0x74c19bbe]
   14004b410:	xchg   edi,eax
   14004b411:	shl    DWORD PTR [rbp-0x4291532d],0x48
   14004b418:	jno    0x14004b40f
   14004b41a:	and    ch,BYTE PTR [rsi-0x4e]
   14004b41d:	mov    ebp,DWORD PTR [rdx+0x6d]
   14004b420:	xor    esi,ecx
   14004b422:	(bad)  
   14004b424:	xchg   edx,eax
   14004b425:	and    esp,eax
   14004b427:	or     al,0xf9
   14004b429:	test   DWORD PTR [rdx],0x7fd8c69e
   14004b42f:	sub    DWORD PTR [rdi+rbp*8-0x2f92017c],ebp
   14004b436:	nop
   14004b437:	ret    
   14004b438:	fldcw  WORD PTR [rsi]
   14004b43a:	idiv   DWORD PTR [rdi]
   14004b43c:	mov    bl,0xf7
   14004b43e:	movabs al,ds:0xdbd9e4ae1a374d33
   14004b447:	vpsrad xmm12,xmm7,XMMWORD PTR [rdi+0x5cbeb49c]
   14004b44f:	rex.W (bad) 
   14004b451:	mov    bh,0xf5
   14004b453:	mov    dl,0x73
   14004b455:	(bad)  
   14004b456:	(bad)  
   14004b457:	(bad)  
   14004b459:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004b45a:	push   rcx
   14004b45b:	(bad)  
   14004b45c:	pop    rbp
   14004b45d:	add    edx,DWORD PTR [rcx]
   14004b45f:	rex.WB
   14004b460:	push   r14
   14004b462:	add    ecx,DWORD PTR [rdx+rbx*4]
   14004b465:	(bad)  
   14004b466:	or     DWORD PTR [rbp+0x370700bd],esi
   14004b46c:	(bad)  
   14004b46d:	adc    DWORD PTR [rbx],edi
   14004b46f:	cmovge eax,DWORD PTR [rbx+0x1e8cc44]
   14004b476:	sbb    DWORD PTR [rax],eax
   14004b478:	xchg   esp,eax
   14004b479:	js     0x14004b47d
   14004b47b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004b47c:	or     ecx,eax
   14004b47e:	and    dl,BYTE PTR [rsi-0x33849622]
   14004b484:	jmp    0x16fa8fd67
   14004b489:	rex.RXB (bad) 
   14004b48b:	push   rax
   14004b48c:	in     al,dx
   14004b48d:	mov    eax,0x4c28b3b5
   14004b492:	fmul   st(6),st
   14004b494:	stos   BYTE PTR es:[rdi],al
   14004b495:	rex.WRX
   14004b496:	ds mov ebx,0x5c1fecc6
   14004b49c:	movabs eax,ds:0x78019e77821dadbc
   14004b4a5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b4a6:	mov    bh,0x4f
   14004b4a8:	retf   0x1ef
   14004b4ab:	mov    bh,0xb8
   14004b4ad:	mov    esi,0x63fa7831
   14004b4b2:	lahf   
   14004b4b3:	jl     0x14004b52b
   14004b4b5:	mov    esp,0x5f45f6b2
   14004b4ba:	push   rsi
   14004b4bb:	fisttp WORD PTR [rcx+0x4a1891c8]
   14004b4c1:	jmp    0x14004b4ee
   14004b4c3:	(bad)  
   14004b4c4:	scas   eax,DWORD PTR es:[rdi]
   14004b4c5:	mov    ah,0xce
   14004b4c7:	ds fwait
   14004b4c9:	add    ebx,edx
   14004b4cb:	mov    ah,0x2e
   14004b4cd:	repnz fidivr WORD PTR [rbp-0x41]
   14004b4d1:	loop   0x14004b463
   14004b4d3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b4d4:	xor    sp,dx
   14004b4d7:	push   rsp
   14004b4d8:	(bad)
   14004b4dc:	jrcxz  0x14004b4aa
   14004b4de:	mov    al,BYTE PTR [rdx-0x31d7575e]
   14004b4e4:	popf   
   14004b4e5:	mov    WORD PTR [rbx-0x599ab700],?
   14004b4eb:	nop
   14004b4ec:	(bad)  
   14004b4ed:	push   rbp
   14004b4ee:	mov    BYTE PTR [rdx],ch
   14004b4f0:	rex.WRX cmp rax,0xffffffffee9a0341
   14004b4f6:	scas   al,BYTE PTR es:[rdi]
   14004b4f7:	(bad)  
   14004b4f8:	add    al,0xd4
   14004b4fa:	cmps   WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14004b4fc:	stc    
   14004b4fd:	ss call 0x1828119a1
   14004b503:	enter  0xd26b,0x75
   14004b507:	xchg   esp,eax
   14004b508:	rex.RXB
   14004b509:	addr32 xor eax,edx
   14004b50c:	repnz (bad) 
   14004b50e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004b50f:	fdivp  st(6),st
   14004b511:	sbb    DWORD PTR [rdx+0x1cbd116a],ecx
   14004b517:	sbb    DWORD PTR [rdi-0x3d],edi
   14004b51a:	retf   
   14004b51b:	out    0x71,eax
   14004b51d:	(bad)  
   14004b51e:	scas   eax,DWORD PTR es:[rdi]
   14004b51f:	rex.X cwde 
   14004b521:	(bad)  
   14004b522:	mov    BYTE PTR [rsi+0x3e],al
   14004b525:	(bad)  
   14004b526:	(bad)  
   14004b527:	(bad)  
   14004b528:	icebp  
   14004b529:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004b52a:	int3   
   14004b52b:	mov    ch,0xfc
   14004b52d:	mov    dh,0xe3
   14004b52f:	mov    esp,0x14d8173a
   14004b534:	xor    bl,BYTE PTR [rcx]
   14004b536:	(bad)  
   14004b537:	xor    cl,BYTE PTR [r11]
   14004b53a:	xor    BYTE PTR [rdi+0x14],ah
   14004b53d:	rex.WB jno 0x14004b513
   14004b540:	out    0xc4,eax
   14004b542:	enter  0xee33,0x95
   14004b546:	out    0x91,eax
   14004b548:	test   eax,0xb01a2932
   14004b54d:	in     eax,dx
   14004b54e:	rex.W fiadd DWORD PTR [rdi+0xa]
   14004b552:	cwde   
   14004b553:	(bad)  
   14004b554:	cli    
   14004b555:	rex.R in eax,dx
   14004b557:	cmp    al,0xdd
   14004b559:	or     edi,edi
   14004b55b:	out    0x70,eax
   14004b55d:	add    al,BYTE PTR [rax+rdx*8+0x32237984]
   14004b564:	addr32 rex.W mov bpl,0x7b
   14004b568:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b569:	in     eax,dx
   14004b56a:	sti    
   14004b56b:	mov    dh,0x5b
   14004b56d:	sub    ch,bh
   14004b56f:	adc    dl,BYTE PTR [rax+0x27]
   14004b572:	push   0x212fa6d3
   14004b577:	test   esp,edi
   14004b579:	(bad)  
   14004b57a:	rex.WRB and BYTE PTR [r14+0x27],r13b
   14004b57e:	(bad)  
   14004b57f:	(bad)  
   14004b580:	addr32 loop 0x14004b547
   14004b583:	adc    DWORD PTR [rdx+rbx*8-0x19],edx
   14004b587:	cmp    ecx,ecx
   14004b589:	(bad)  
   14004b58a:	(bad)  
   14004b58b:	imul   eax,DWORD PTR [rbp-0x39],0xb78457aa
   14004b592:	(bad)  
   14004b593:	imul   edi,DWORD PTR [rcx],0xebcfccf9
   14004b599:	jrcxz  0x14004b59a
   14004b59b:	(bad)  
   14004b59c:	mov    bh,0x31
   14004b59e:	or     eax,0xc00c73b8
   14004b5a3:	lods   eax,DWORD PTR ds:[rsi]
   14004b5a4:	mov    ebp,0x9ff2467d
   14004b5a9:	cli    
   14004b5aa:	lock jae 0x14004b5f4
   14004b5ad:	(bad)  
   14004b5ae:	(bad)  
   14004b5af:	jp     0x14004b595
   14004b5b1:	cmp    eax,DWORD PTR [rdi]
   14004b5b3:	ret    
   14004b5b4:	loope  0x14004b5ad
   14004b5b6:	mov    eax,0x44567ca2
   14004b5bb:	retf   0x9aa0
   14004b5be:	sub    DWORD PTR [rdx+0x725889a],edi
   14004b5c4:	ss fwait
   14004b5c6:	sub    BYTE PTR [rbx-0x4316840f],bh
   14004b5cc:	push   0x37
   14004b5ce:	rex.RX sub r9b,cl
   14004b5d1:	or     DWORD PTR [rdx-0x7],esp
   14004b5d4:	js     0x14004b592
   14004b5d6:	jmp    0x14004b55d
   14004b5d8:	xchg   BYTE PTR [rcx-0x43],ah
   14004b5db:	rex.WRXB loope 0x14004b5e8
   14004b5de:	jbe    0x14004b636
   14004b5e0:	(bad)  
   14004b5e1:	xor    BYTE PTR [rip+0xfffffffff10e5087],ch        # 0x13113066e
   14004b5e7:	addr32 mov edi,0x42de5e86
   14004b5ed:	(bad)  
   14004b5ee:	add    DWORD PTR [rdx+0x7a634141],0xa1155e0
   14004b5f8:	or     ch,dh
   14004b5fa:	pop    rsp
   14004b5fb:	jne    0x14004b63d
   14004b5fd:	mov    edx,0xdb439347
   14004b602:	xor    ch,BYTE PTR ss:[rcx-0x3d]
   14004b606:	push   rbp
   14004b607:	fisub  DWORD PTR [rbx-0x286f1dcc]
   14004b60d:	xchg   BYTE PTR [rbx],cl
   14004b60f:	rex.WRXB jg 0x14004b5aa
   14004b612:	fucom  st(3)
   14004b614:	rex.WRXB xor r14,r11
   14004b617:	mov    edi,0x69d2f8c1
   14004b61c:	xchg   esi,eax
   14004b61d:	(bad)  
   14004b61e:	mov    ebp,0xafd714c
   14004b623:	outs   dx,BYTE PTR ds:[rsi]
   14004b624:	mov    edx,0xa209f917
   14004b629:	test   al,0x7a
   14004b62b:	nop
   14004b62c:	(bad)  
   14004b62d:	repnz adc ecx,DWORD PTR [rdx]
   14004b630:	lea    esp,[rax+0x27f4b756]
   14004b636:	sub    DWORD PTR [rdx],eax
   14004b638:	push   rax
   14004b639:	fimul  DWORD PTR [rcx+0x3b]
   14004b63c:	scas   al,BYTE PTR es:[rdi]
   14004b63d:	mov    ebp,0xe927f9d0
   14004b642:	rex.WXB mov dl,BYTE PTR [r12+r13*8]
   14004b646:	stos   BYTE PTR es:[rdi],al
   14004b647:	js     0x14004b630
   14004b649:	xor    bl,al
   14004b64b:	xchg   edi,eax
   14004b64c:	(bad)  
   14004b64d:	loop   0x14004b5d8
   14004b64f:	rex.WXB (bad) 
   14004b651:	(bad)  
   14004b652:	and    eax,0x7479d9c8
   14004b657:	and    al,BYTE PTR [rbx]
   14004b659:	rex.WB fild WORD PTR [r13+0x5e86fc1c]
   14004b660:	imul   ecx,DWORD PTR [rdi],0xdae1b2e2
   14004b666:	pushw  0x36
   14004b669:	cs cmp al,0x62
   14004b66c:	adc    esi,esp
   14004b66e:	jg     0x14004b69d
   14004b670:	add    bl,BYTE PTR [rax-0x76f2fffd]
   14004b676:	iret   
   14004b677:	sbb    ah,BYTE PTR [rsi-0x40]
   14004b67a:	movsxd edx,esp
   14004b67c:	rex.WXB sub rcx,r9
   14004b67f:	rex.WXB
   14004b680:	fwait
   14004b681:	stos   DWORD PTR es:[rdi],eax
   14004b682:	mov    bh,0xa5
   14004b684:	mov    cl,0xb1
   14004b687:	jrcxz  0x14004b6cb
   14004b689:	and    dh,BYTE PTR [rsi+0x5]
   14004b68c:	(bad)  
   14004b68d:	cdq    
   14004b68e:	clc    
   14004b68f:	xchg   ebx,eax
   14004b690:	adc    ecx,DWORD PTR [rdi-0x498e4340]
   14004b696:	push   rdi
   14004b697:	mov    edx,0xd55c9515
   14004b69c:	adc    BYTE PTR [rsi],dl
   14004b69e:	faddp  st(0),st
   14004b6a0:	(bad)  
   14004b6a1:	jae    0x14004b663
   14004b6a3:	outs   dx,DWORD PTR ds:[rsi]
   14004b6a4:	ret    0x4bed
   14004b6a7:	add    ebx,DWORD PTR [rsi-0x21]
   14004b6aa:	(bad)  
   14004b6ab:	loopne 0x14004b648
   14004b6ad:	js     0x14004b72a
   14004b6af:	sar    BYTE PTR [rdi-0x1780d409],0x3b
   14004b6b6:	(bad)  
   14004b6b7:	retf   
   14004b6b8:	sub    ebx,edi
   14004b6ba:	pop    rbp
   14004b6bb:	push   rsi
   14004b6bc:	or     edi,0xffffff8b
   14004b6bf:	enter  0xecb1,0x4f
   14004b6c3:	push   rbx
   14004b6c4:	cmp    DWORD PTR [rsi-0x12],ebp
   14004b6c7:	sbb    edx,edi
   14004b6c9:	mov    ecx,0x6a97299b
   14004b6ce:	mov    dl,0xd7
   14004b6d0:	in     eax,dx
   14004b6d1:	mov    edx,0x9b6e968c
   14004b6d6:	outs   dx,BYTE PTR ds:[rsi]
   14004b6d7:	mov    ah,dh
   14004b6d9:	sub    eax,0x8a76858a
   14004b6de:	loop   0x14004b67b
   14004b6e0:	sbb    DWORD PTR [rbx],ebp
   14004b6e2:	push   rdx
   14004b6e3:	mov    bl,0xb7
   14004b6e5:	mov    eax,0x2789eecc
   14004b6ea:	cdq    
   14004b6eb:	or     eax,0xff072817
   14004b6f0:	or     esi,ecx
   14004b6f2:	mov    edi,0x8a013b08
   14004b6f7:	cmp    ah,bh
   14004b6f9:	add    esi,DWORD PTR [rax+0x2b2b00b4]
   14004b6ff:	sub    DWORD PTR [rdi+rax*1],eax
   14004b702:	fidiv  DWORD PTR [rdx+rcx*8-0x2bbf2e93]
   14004b709:	add    esp,0xffffffd6
   14004b70c:	imul   ecx,DWORD PTR [rdi+0x7cc1793d],0x41
   14004b713:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b714:	adc    esp,DWORD PTR [rsi-0x39]
   14004b717:	(bad)  
   14004b718:	loope  0x14004b6df
   14004b71a:	(bad)  
   14004b71b:	jg     0x14004b69f
   14004b71d:	adc    DWORD PTR [rsi],ecx
   14004b71f:	mov    ecx,0xbd58e76
   14004b724:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004b725:	test   al,0xae
   14004b727:	ins    BYTE PTR es:[rdi],dx
   14004b728:	and    DWORD PTR [rdi],esi
   14004b72a:	scas   eax,DWORD PTR es:[rdi]
   14004b72b:	adc    al,dl
   14004b72d:	or     al,0x91
   14004b72f:	rex ja 0x14004b6d3
   14004b732:	mov    WORD PTR [rax-0xa63b03e],?
   14004b738:	out    0x84,eax
   14004b73a:	xchg   esi,eax
   14004b73b:	(bad)  
   14004b73c:	fwait
   14004b73d:	(bad)  
   14004b73e:	jle    0x14004b710
   14004b740:	or     DWORD PTR [rbp-0x13],edi
   14004b743:	ss (bad) 
   14004b745:	pop    rbp
   14004b746:	jnp    0x14004b7a0
   14004b748:	add    al,0x80
   14004b74a:	fs out dx,eax
   14004b74c:	cwde   
   14004b74d:	mov    esp,0x52f9eb66
   14004b752:	rex.X rcr sil,1
   14004b755:	hlt    
   14004b756:	pop    rbp
   14004b757:	nop    DWORD PTR [rdi]
   14004b75a:	fwait
   14004b75b:	cmp    ah,BYTE PTR [rip+0x5cddbfe7]        # 0x19ce27748
   14004b761:	test   BYTE PTR [rcx+rdx*2-0x3f],0x1
   14004b766:	popf   
   14004b767:	push   0x6dfb7fbd
   14004b76c:	mov    ah,BYTE PTR [rsi-0x3f1c4a83]
   14004b772:	push   rdx
   14004b773:	(bad)  
   14004b774:	pop    rdi
   14004b775:	jmp    0x14004b6ff
   14004b777:	pop    rbx
   14004b778:	test   esp,ecx
   14004b77a:	pop    rdi
   14004b77b:	outs   dx,DWORD PTR ds:[rsi]
   14004b77c:	push   rdx
   14004b77d:	jle    0x14004b79f
   14004b77f:	push   rbp
   14004b780:	sub    eax,0x7077c2b2
   14004b785:	add    BYTE PTR [rdx-0x687ccd3f],dh
   14004b78b:	mov    ds,edi
   14004b78d:	xor    DWORD PTR [rdi],edi
   14004b78f:	rex.R pop rcx
   14004b791:	(bad)  
   14004b792:	xchg   BYTE PTR [rbx-0x2a38b2f6],ah
   14004b798:	in     al,0xe2
   14004b79a:	rex.RX jb 0x14004b7c1
   14004b79d:	sbb    DWORD PTR [rdi],ecx
   14004b79f:	and    BYTE PTR [rip+0x28f5df66],0x37        # 0x168fa970c
   14004b7a6:	jg     0x14004b79d
   14004b7a8:	jns    0x14004b7c0
   14004b7aa:	outs   dx,BYTE PTR ds:[rsi]
   14004b7ab:	pop    rbx
   14004b7ac:	xchg   eax,esp
   14004b7ae:	jmp    0x14004b783
   14004b7b0:	add    BYTE PTR [rbx+rsi*2+0x6f],bh
   14004b7b4:	jg     0x14004b79a
   14004b7b6:	enter  0x8f43,0x7c
   14004b7ba:	jp     0x14004b7ec
   14004b7bc:	(bad)  
   14004b7bd:	jg     0x14004b808
   14004b7bf:	mov    esp,0xe322277f
   14004b7c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004b7c5:	pop    rsp
   14004b7c6:	mov    DWORD PTR [rdx+rdx*1],ecx
   14004b7c9:	(bad)  
   14004b7ca:	fnstsw WORD PTR [rdx-0x5d]
   14004b7cd:	mov    ah,0xb9
   14004b7cf:	mov    ecx,0x86c73020
   14004b7d4:	(bad)  
   14004b7d5:	pop    rsi
   14004b7d6:	ror    dl,cl
   14004b7d8:	push   rdi
   14004b7d9:	shl    dh,1
   14004b7db:	fdivr  st,st(1)
   14004b7dd:	outs   dx,BYTE PTR ds:[rsi]
   14004b7de:	rex.WXB (bad) 
   14004b7e0:	mov    dh,0x85
   14004b7e2:	mov    cl,0x96
   14004b7e4:	sti    
   14004b7e5:	stos   BYTE PTR es:[rdi],al
   14004b7e6:	(bad)  
   14004b7e7:	test   al,al
   14004b7e9:	sub    ah,ch
   14004b7eb:	push   rdx
   14004b7ec:	xchg   esp,eax
   14004b7ed:	add    eax,0xa61f47bb
   14004b7f2:	sbb    DWORD PTR [rsi],ebp
   14004b7f4:	loopne 0x14004b7a0
   14004b7f6:	and    esi,ebp
   14004b7f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b7f9:	scas   eax,DWORD PTR es:[rdi]
   14004b7fa:	adc    ebp,DWORD PTR [rsi+0x7f3eb65d]
   14004b800:	rcl    BYTE PTR [rax],1
   14004b802:	(bad)  
   14004b803:	scas   al,BYTE PTR es:[rdi]
   14004b804:	lea    eax,[rbx-0x1d777220]
   14004b80a:	adc    BYTE PTR [rbx+0x9],ch
   14004b80d:	mov    ?,WORD PTR [rdi-0x7c78b7a9]
   14004b813:	pop    rdx
   14004b814:	scas   al,BYTE PTR es:[rdi]
   14004b815:	mov    ds,WORD PTR [rbp-0x1d3bfdbd]
   14004b81b:	(bad)  
   14004b81c:	fsubrp st(0),st
   14004b81e:	retf   
   14004b81f:	xchg   edx,eax
   14004b820:	xchg   ebx,eax
   14004b821:	outs   dx,DWORD PTR ds:[rsi]
   14004b822:	dec    DWORD PTR [rcx+riz*2]
   14004b825:	in     eax,dx
   14004b826:	cmp    BYTE PTR [rdx-0x748134e5],bh
   14004b82c:	xchg   edi,eax
   14004b82d:	pop    rdi
   14004b82e:	(bad)  
   14004b82f:	fistp  QWORD PTR [rax+0x4e2ef50c]
   14004b835:	sbb    dh,BYTE PTR [rbx]
   14004b837:	pop    rsi
   14004b838:	ss ins BYTE PTR es:[rdi],dx
   14004b83a:	pop    rbx
   14004b83b:	jrcxz  0x14004b833
   14004b83d:	mov    esp,0x42793dc6
   14004b842:	ss add ch,ch
   14004b845:	ror    BYTE PTR [rdi+0x62],0xce
   14004b849:	stos   DWORD PTR es:[rdi],eax
   14004b84a:	shl    dl,1
   14004b84c:	sti    
   14004b84d:	adc    ebx,DWORD PTR [rax-0x69]
   14004b850:	pop    rsp
   14004b851:	jg     0x14004b85d
   14004b853:	mov    DWORD PTR [rbx],edx
   14004b855:	push   0x7e53b47
   14004b85a:	mov    cl,0xfe
   14004b85c:	jns    0x14004b851
   14004b85e:	out    dx,al
   14004b85f:	add    WORD PTR [rbx+rsi*8+0x6831cf33],sp
   14004b867:	(bad)  
   14004b868:	and    esi,0x66
   14004b86b:	sbb    al,0xd2
   14004b86d:	sub    DWORD PTR [rdi+0x1afa4238],esi
   14004b873:	xor    DWORD PTR [r14+riz*1+0x19],r15d
   14004b878:	rex.R
   14004b879:	repz not BYTE PTR [rsi-0x67bb7f1a]
   14004b880:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b881:	imul   edx,DWORD PTR [rax-0x2d],0xfffffff7
   14004b885:	rex.R stos BYTE PTR es:[rdi],al
   14004b887:	adc    edx,DWORD PTR [rax-0x4f290742]
   14004b88d:	sbb    eax,DWORD PTR [rbx-0x33d632d0]
   14004b893:	add    eax,DWORD PTR [rax+0x5d]
   14004b896:	pop    rsp
   14004b897:	cld    
   14004b898:	and    ecx,ebp
   14004b89a:	(bad)  
   14004b89b:	cmp    al,0x38
   14004b89d:	sti    
   14004b89e:	and    BYTE PTR [rsi+0x5699209f],ch
   14004b8a4:	sbb    al,0x3a
   14004b8a6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004b8a7:	lahf   
   14004b8a8:	div    dh
   14004b8aa:	shr    BYTE PTR [rax+rdi*8+0x501cbce9],cl
   14004b8b1:	push   0xffffffffe09fa6f3
   14004b8b6:	(bad)  
   14004b8b7:	cmp    edi,DWORD PTR [rdi-0x76]
   14004b8ba:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004b8bb:	dec    BYTE PTR [rdi-0x64806084]
   14004b8c1:	rol    DWORD PTR [rax-0x7fe7029],cl
   14004b8c7:	(bad)  
   14004b8c8:	mov    esp,0xf2bffbfd
   14004b8cd:	xchg   DWORD PTR [rsi-0x6a1a7a3],ebx
   14004b8d3:	sahf   
   14004b8d4:	jb     0x14004b906
   14004b8d6:	cld    
   14004b8d7:	mov    ah,0x8
   14004b8d9:	clts   
   14004b8db:	lea    edi,[rsp+rbp*8]
   14004b8de:	mov    ah,0x88
   14004b8e0:	(bad)
   14004b8e3:	xchg   esi,eax
   14004b8e4:	xchg   BYTE PTR [rbx+0x76],ah
   14004b8e7:	jae    0x14004b93c
   14004b8e9:	and    dl,cl
   14004b8eb:	and    eax,0x68dd33be
   14004b8f0:	jbe    0x14004b915
   14004b8f2:	jne    0x14004b8b6
   14004b8f4:	rex.B (bad) 
   14004b8f6:	test   BYTE PTR [rbx-0x9338c92],0x3b
   14004b8fd:	leave  
   14004b8fe:	sahf   
   14004b8ff:	and    eax,0x3cf32b39
   14004b904:	push   rbp
   14004b905:	cwde   
   14004b906:	push   rdx
   14004b907:	cmp    edi,ecx
   14004b909:	(bad)  
   14004b90b:	adc    DWORD PTR [rsi-0x55],esi
   14004b90e:	and    DWORD PTR [rbx+riz*1-0x24],edx
   14004b912:	mov    edi,DWORD PTR [rdi+0x1f3ed843]
   14004b918:	adc    esp,ebp
   14004b91a:	(bad)  
   14004b91b:	mov    bl,0xfc
   14004b91d:	lods   al,BYTE PTR ds:[rsi]
   14004b91e:	jg     0x14004b97f
   14004b920:	(bad)  
   14004b921:	in     eax,0x1b
   14004b923:	xor    ebp,ebp
   14004b925:	enter  0x7a66,0xa4
   14004b929:	rcr    BYTE PTR [rdi-0x53ec2334],0x9c
   14004b930:	push   0xffffffffe5366617
   14004b935:	out    0x13,al
   14004b937:	ffreep st(1)
   14004b939:	test   edi,eax
   14004b93b:	(bad)  
   14004b93d:	rex.X cwde 
   14004b93f:	push   rdx
   14004b940:	pop    rsp
   14004b941:	ds ret 
   14004b943:	(bad)  
   14004b945:	imul   ecx,edx,0xddb8dbab
   14004b94b:	sbb    esi,DWORD PTR [rcx-0x10a26c4]
   14004b951:	xchg   edx,eax
   14004b952:	adc    al,0xdd
   14004b954:	(bad)  
   14004b955:	jge    0x14004b968
   14004b957:	sub    al,0x1d
   14004b959:	mov    BYTE PTR [rdi+0x1d8dceb9],ch
   14004b95f:	ret    
   14004b960:	jl     0x14004b94d
   14004b962:	ins    DWORD PTR es:[rdi],dx
   14004b963:	xchg   edi,eax
   14004b964:	mov    dh,0x4c
   14004b966:	(bad)  
   14004b967:	(bad)  
   14004b969:	rex.X (bad) 
   14004b96b:	(bad)  
   14004b96c:	and    eax,0x9be90ba7
   14004b971:	jae    0x14004b93c
   14004b973:	xchg   ebx,eax
   14004b974:	(bad)  [rsi+0x53]
   14004b977:	scas   al,BYTE PTR es:[rdi]
   14004b978:	ffreep st(6)
   14004b97a:	add    al,0x49
   14004b97c:	icebp  
   14004b97d:	out    0xbd,al
   14004b97f:	jnp    0x14004b953
   14004b981:	retf   
   14004b982:	ins    BYTE PTR es:[rdi],dx
   14004b983:	stos   DWORD PTR es:[rdi],eax
   14004b984:	repz fimul DWORD PTR ss:[rax+0x2d]
   14004b989:	icebp  
   14004b98a:	mul    bh
   14004b98c:	retf   0xab5
   14004b98f:	pop    rcx
   14004b990:	pop    rbx
   14004b991:	and    eax,0x80c903dd
   14004b996:	jne    0x14004ba04
   14004b998:	rex
   14004b999:	addr32 xchg ebx,eax
   14004b99b:	or     eax,esi
   14004b99d:	ins    DWORD PTR es:[rdi],dx
   14004b99e:	mov    bl,0x74
   14004b9a0:	push   0xffffffffb63c7b0d
   14004b9a5:	int3   
   14004b9a6:	rcl    DWORD PTR [rax],0xc9
   14004b9a9:	imul   eax,DWORD PTR [rip+0x4c486de4],0x17        # 0x18c4d2794
   14004b9b0:	fcmovb st,st(0)
   14004b9b2:	mov    dl,0x75
   14004b9b4:	adc    ch,ch
   14004b9b6:	mov    ecx,0x9148bb98
   14004b9bb:	sub    BYTE PTR [rcx+0x3c],ch
   14004b9be:	sbb    ecx,edi
   14004b9c0:	cld    
   14004b9c1:	popf   
   14004b9c2:	mov    bh,BYTE PTR [rdi]
   14004b9c4:	shr    esi,0x77
   14004b9c7:	add    edi,edi
   14004b9c9:	(bad)  
   14004b9ca:	mov    bh,0x29
   14004b9cc:	or     eax,0xe006fdb8
   14004b9d1:	fwait
   14004b9d2:	js     0x14004b9cf
   14004b9d4:	mov    bh,0x7e
   14004b9d6:	loop   0x14004b9ab
   14004b9d8:	(bad)  
   14004b9d9:	ss out dx,al
   14004b9db:	cmp    esi,ecx
   14004b9dd:	fdiv   QWORD PTR [rax+0x71]
   14004b9e0:	cld    
   14004b9e1:	gs out dx,eax
   14004b9e3:	retf   
   14004b9e4:	ja     0x14004b986
   14004b9e6:	(bad)  
   14004b9e7:	adc    edx,edx
   14004b9e9:	jb     0x14004b9b7
   14004b9eb:	icebp  
   14004b9ec:	mov    ecx,DWORD PTR [rcx]
   14004b9ee:	sbb    eax,0x44cb10cf
   14004b9f3:	cmp    dh,BYTE PTR [rdi-0x3d]
   14004b9f6:	test   BYTE PTR gs:[rdi+0xe],bl
   14004b9fa:	mov    esi,0x4dba6906
   14004b9ff:	int3   
   14004ba00:	pop    rcx
   14004ba01:	jrcxz  0x14004ba1a
   14004ba03:	in     al,0x88
   14004ba05:	loope  0x14004ba01
   14004ba07:	pop    rsp
   14004ba08:	out    dx,al
   14004ba09:	fnstcw WORD PTR [rcx-0x70]
   14004ba0c:	lahf   
   14004ba0d:	(bad)  
   14004ba0e:	mov    es,edi
   14004ba10:	sahf   
   14004ba11:	mov    ch,BYTE PTR ss:[rdx+0x68]
   14004ba15:	sbb    cl,dl
   14004ba17:	push   rax
   14004ba18:	sub    al,0x2c
   14004ba1a:	jb     0x14004ba0f
   14004ba1c:	loope  0x14004ba55
   14004ba1e:	adc    eax,DWORD PTR [rsi-0x2406a39d]
   14004ba24:	test   bl,dh
   14004ba26:	addr32 (bad) 
   14004ba28:	pop    rcx
   14004ba29:	nop
   14004ba2a:	xchg   esp,eax
   14004ba2b:	out    0x9b,eax
   14004ba2d:	push   rdx
   14004ba2e:	test   BYTE PTR [rcx],bl
   14004ba30:	push   0xffffffffffffffcc
   14004ba32:	cmp    al,0xba
   14004ba34:	lods   al,BYTE PTR ds:[rsi]
   14004ba35:	rex.B jmp 0xde925389
   14004ba3b:	xor    BYTE PTR [rip+0x60cf50b2],dh        # 0x1a0d40af3
   14004ba41:	imul   ecx,DWORD PTR [rbp+0x3cfaef93],0x708568d5
   14004ba4b:	in     eax,0xc
   14004ba4d:	stos   DWORD PTR es:[rdi],eax
   14004ba4e:	pop    rbx
   14004ba4f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004ba50:	sbb    BYTE PTR [rbp+0x3a],bl
   14004ba53:	(bad)  
   14004ba54:	fistp  QWORD PTR [rcx-0x1b842976]
   14004ba5a:	mov    ecx,0x7bd776f5
   14004ba5f:	push   rbx
   14004ba60:	not    BYTE PTR [rdx+0x13]
   14004ba63:	ficomp DWORD PTR [rdi]
   14004ba65:	repnz ror BYTE PTR [rdi-0x11],0xa4
   14004ba6a:	mov    ebp,0x3a5b5cfb
   14004ba6f:	imul   eax,DWORD PTR [rdi-0x70add9a0],0xffffffb4
   14004ba76:	push   rcx
   14004ba77:	xchg   ebp,eax
   14004ba78:	xchg   ebx,eax
   14004ba79:	cmp    DWORD PTR [rdi-0x72],ecx
   14004ba7c:	sub    DWORD PTR [rsi+0x2a],edi
   14004ba7f:	in     eax,0xb5
   14004ba81:	adc    al,0x62
   14004ba83:	sti    
   14004ba84:	cmp    al,0x2e
   14004ba86:	push   rdi
   14004ba87:	sbb    BYTE PTR [rdx],dl
   14004ba89:	jbe    0x14004ba6b
   14004ba8b:	shl    dh,cl
   14004ba8d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ba8e:	cmc    
   14004ba8f:	repnz lods eax,DWORD PTR ds:[rsi]
   14004ba91:	(bad)  
   14004ba92:	rcl    BYTE PTR [rsi-0x5f],1
   14004ba95:	push   0x1239e773
   14004ba9a:	nop
   14004ba9b:	test   esi,edx
   14004ba9d:	xor    DWORD PTR [rdi],edx
   14004ba9f:	(bad)  
   14004baa0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004baa1:	(bad)  
   14004baa2:	je     0x14004ba69
   14004baa4:	(bad)  
   14004baa5:	js     0x14004bb08
   14004baa7:	xchg   edx,eax
   14004baa8:	mov    al,bh
   14004baaa:	add    edx,DWORD PTR [rsi]
   14004baac:	xor    edx,DWORD PTR [rax+0x73]
   14004baaf:	mov    eax,0x73e7ca43
   14004bab4:	sbb    eax,0x3edeb434
   14004bab9:	rex.WRXB or QWORD PTR [r14],r14
   14004babc:	xchg   DWORD PTR [rbx],esp
   14004babe:	test   eax,0x9116824
   14004bac3:	jbe    0x14004bad8
   14004bac5:	pop    rdx
   14004bac6:	adc    al,0x17
   14004bac8:	add    ebp,DWORD PTR [rax-0x32e4c52]
   14004bace:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004bad0:	(bad)  
   14004bad1:	(bad)  
   14004bad2:	jae    0x14004baf1
   14004bad4:	jmp    0x12163bec5
   14004bad9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004bada:	int    0xff
   14004badc:	xchg   ecx,eax
   14004badd:	jrcxz  0x14004bac6
   14004badf:	shr    BYTE PTR [rbp-0x281bc629],cl
   14004bae5:	pop    rsp
   14004bae6:	outs   dx,BYTE PTR ds:[rsi]
   14004bae7:	pop    QWORD PTR [rcx]
   14004bae9:	clc    
   14004baea:	(bad)  
   14004baeb:	mov    esp,0xf2be87fd
   14004baf0:	(bad)  
   14004baf1:	ja     0x14004bb20
   14004baf3:	lods   al,BYTE PTR ds:[rsi]
   14004baf4:	lods   eax,DWORD PTR ds:[rsi]
   14004baf5:	jg     0x14004bab8
   14004baf7:	xchg   edi,eax
   14004baf8:	(bad)  
   14004baf9:	addr32 mov esp,0xefc70f73
   14004baff:	cmp    bl,BYTE PTR [rbp-0x36]
   14004bb02:	(bad)  
   14004bb03:	call   0x112616bee
   14004bb08:	jge    0x14004badb
   14004bb0a:	icebp  
   14004bb0b:	call   0x105e087d9
   14004bb10:	rex.WRX imul r12,QWORD PTR [rsi+0x44],0xffffffffffffffd1
   14004bb15:	jl     0x14004bb17
   14004bb17:	(bad)  
   14004bb18:	sub    eax,0x9b919a73
   14004bb1d:	pop    rsp
   14004bb1e:	mov    esp,0xd3d5cc6a
   14004bb23:	or     al,ch
   14004bb25:	je     0x14004bafa
   14004bb27:	imul   ebp,eax,0x60
   14004bb2a:	or     BYTE PTR [rsi+0x8408a68],ah
   14004bb30:	or     al,0xeb
   14004bb32:	cmp    eax,0xc6e4b28a
   14004bb37:	icebp  
   14004bb38:	(bad)  
   14004bb39:	test   al,0xab
   14004bb3b:	xor    DWORD PTR [rsi-0x6c263fe6],edi
   14004bb41:	call   0x1423626d3
   14004bb46:	rex adc DWORD PTR [rbp-0x78],esi
   14004bb4a:	sub    edi,eax
   14004bb4c:	(bad)  
   14004bb4d:	fnstcw WORD PTR [rbx-0xd]
   14004bb50:	and    ch,cl
   14004bb52:	scas   al,BYTE PTR es:[rdi]
   14004bb53:	stos   DWORD PTR es:[rdi],eax
   14004bb54:	rex.WRX
   14004bb55:	lock ja 0x14004bb46
   14004bb58:	jge    0x14004bb49
   14004bb5a:	retf   
   14004bb5b:	lods   eax,DWORD PTR ds:[rsi]
   14004bb5c:	mov    dl,0x32
   14004bb5e:	mov    bl,0xf6
   14004bb60:	push   rdx
   14004bb61:	xchg   ebp,eax
   14004bb62:	test   ch,0xb6
   14004bb65:	ins    BYTE PTR es:[rdi],dx
   14004bb66:	ins    DWORD PTR es:[rdi],dx
   14004bb67:	xchg   esi,eax
   14004bb68:	fldcw  WORD PTR gs:[rbp-0x4b]
   14004bb6c:	in     eax,0xf1
   14004bb6e:	and    bh,BYTE PTR [rbx-0x79c89c93]
   14004bb74:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004bb75:	jnp    0x14004bb99
   14004bb77:	push   0x1a66809a
   14004bb7c:	call   0xf721
   14004bb80:	push   0x681e987a
   14004bb85:	and    BYTE PTR [rsi],al
   14004bb87:	(bad)  
   14004bb88:	es jp  0x14004bbed
   14004bb8b:	(bad)
   14004bb90:	adc    BYTE PTR [rsp+rax*2],dh
   14004bb93:	sbb    BYTE PTR [rsi],al
   14004bb95:	rex.RX mov dl,0xc1
   14004bb98:	xor    al,0xb4
   14004bb9a:	in     eax,0x7d
   14004bb9c:	(bad)  
   14004bb9d:	mov    dh,0x6c
   14004bb9f:	pop    rcx
   14004bba0:	xchg   esi,eax
   14004bba1:	sub    al,0x9
   14004bba3:	in     eax,dx
   14004bba4:	stos   BYTE PTR es:[rdi],al
   14004bba5:	stos   BYTE PTR es:[rdi],al
   14004bba6:	int3   
   14004bba7:	stos   BYTE PTR es:[rdi],al
   14004bba8:	retf   0xdcaa
   14004bbab:	div    ebp
   14004bbad:	jnp    0x14004bba6
   14004bbaf:	int3   
   14004bbb0:	(bad)  
   14004bbb1:	addr32 mov ecx,0x22d665f7
   14004bbb7:	pop    rcx
   14004bbb8:	and    eax,0x117a9961
   14004bbbd:	pop    rcx
   14004bbbe:	cmc    
   14004bbbf:	sub    eax,0xbddb7bef
   14004bbc4:	out    0x9c,eax
   14004bbc6:	(bad)  
   14004bbc8:	popf   
   14004bbc9:	in     eax,0x72
   14004bbcb:	(bad)  
   14004bbcc:	(bad)  
   14004bbcd:	add    esp,DWORD PTR [rcx+rdx*4]
   14004bbd0:	rex.W (bad) 
   14004bbd2:	mov    al,0xe8
   14004bbd4:	(bad)  
   14004bbd5:	xchg   edx,eax
   14004bbd6:	int3   
   14004bbd7:	rex.X and BYTE PTR [rbx],cl
   14004bbda:	(bad)  
   14004bbdb:	add    esi,DWORD PTR [rcx+0x4de4e2e9]
   14004bbe1:	out    dx,eax
   14004bbe2:	(bad)
   14004bbe6:	sar    DWORD PTR [rdi-0x26617742],1
   14004bbec:	xchg   ebx,eax
   14004bbed:	fdivr  DWORD PTR [rcx]
   14004bbef:	jae    0x14004bbf3
   14004bbf1:	(bad)  
   14004bbf2:	ret    0x680c
   14004bbf5:	ins    DWORD PTR es:[rdi],dx
   14004bbf6:	sbb    eax,esp
   14004bbf8:	(bad)  
   14004bbf9:	pop    rsp
   14004bbfa:	sub    al,0x5c
   14004bbfc:	push   rcx
   14004bbfd:	(bad)  
   14004bbfe:	cld    
   14004bbff:	enter  0x2e03,0xa0
   14004bc03:	jg     0x14004bc05
   14004bc05:	mov    esp,0xb6877c3
   14004bc0a:	adc    BYTE PTR gs:[rcx],bl
   14004bc0d:	jo     0x14004bc10
   14004bc0f:	or     eax,0x1303512c
   14004bc14:	jb     0x14004bc91
   14004bc16:	xor    BYTE PTR [rdx-0x429d791],0xcb
   14004bc1d:	rex.X outs dx,BYTE PTR ds:[rsi]
   14004bc1f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004bc20:	lahf   
   14004bc21:	adc    ebx,DWORD PTR [rax-0x137f30bb]
   14004bc27:	out    dx,al
   14004bc28:	mov    bl,0x1f
   14004bc2a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004bc2b:	mov    ebp,0xfa5ebab1
   14004bc30:	xchg   edx,eax
   14004bc31:	sub    eax,0x286b9f1e
   14004bc36:	enter  0xf97d,0xe0
   14004bc3a:	popf   
   14004bc3b:	xchg   edi,eax
   14004bc3c:	rex cdq 
   14004bc3e:	jne    0x14004bc37
   14004bc40:	(bad)
   14004bc43:	out    dx,al
   14004bc44:	jle    0x14004bcaa
   14004bc46:	mov    ?,WORD PTR [rcx-0x3304d0d5]
   14004bc4c:	ror    BYTE PTR [rax-0x71d041bd],cl
   14004bc52:	loop   0x14004bc22
   14004bc54:	xor    al,0x64
   14004bc56:	mov    cl,0xee
   14004bc59:	xchg   ecx,eax
   14004bc5a:	popf   
   14004bc5b:	sub    BYTE PTR [rbp+0x3efca9f],dl
   14004bc61:	adc    edx,DWORD PTR [rdx-0x40c5ed0d]
   14004bc67:	pushf  
   14004bc68:	rol    DWORD PTR [rax-0x42],cl
   14004bc6b:	(bad)  
   14004bc6c:	xchg   edx,eax
   14004bc6d:	out    0x59,eax
   14004bc6f:	add    DWORD PTR [rdi-0x41],edx
   14004bc72:	test   DWORD PTR [rsi+0x6f],esp
   14004bc75:	call   QWORD PTR [rbx+0x3e]
   14004bc78:	cld    
   14004bc79:	push   rdi
   14004bc7a:	jle    0x14004bc62
   14004bc7c:	xchg   edi,eax
   14004bc7d:	ror    DWORD PTR [rip+0xffffffffc0157978],1        # 0x1001a35fb
   14004bc83:	jns    0x14004bc31
   14004bc85:	std    
   14004bc86:	lods   eax,DWORD PTR ds:[rsi]
   14004bc87:	ja     0x14004bc48
   14004bc89:	out    0xe0,eax
   14004bc8b:	scas   al,BYTE PTR es:[rdi]
   14004bc8c:	adc    DWORD PTR [rdi-0x5f885242],0xffffffff
   14004bc93:	rex.RXB jmp 0x14004bce4
   14004bc96:	out    0x4d,eax
   14004bc98:	mov    DWORD PTR [rcx+0x333834df],edi
   14004bc9e:	jb     0x14004bc73
   14004bca0:	or     edx,DWORD PTR [rax]
   14004bca2:	mov    esp,0xd24e9dfb
   14004bca7:	fcom   QWORD PTR [rcx+rax*1-0xf17e7d0]
   14004bcae:	(bad)  
   14004bcaf:	enter  0x1a50,0x68
   14004bcb3:	sbb    DWORD PTR [rdi-0x64e9e2fe],edx
   14004bcb9:	cmp    DWORD PTR [rdx],edx
   14004bcbb:	(bad)  
   14004bcbc:	imul   edx,DWORD PTR [rsi-0x6ff9975],0x3c
   14004bcc3:	xor    DWORD PTR [rsp+rdi*4],0xec91ae48
   14004bcca:	jp     0x14004bcdf
   14004bccc:	or     BYTE PTR [rbp-0x4d],dl
   14004bccf:	mov    fs,WORD PTR [rcx-0x454ef0]
   14004bcd5:	xor    ch,BYTE PTR [rbp+rsi*8-0x4857c0a]
   14004bcdc:	rex.B (bad) 
   14004bcde:	sahf   
   14004bcdf:	rex.X (bad) 
   14004bce1:	rex.R fmul DWORD PTR [rax+0x40]
   14004bce6:	mov    BYTE PTR [rdx],dl
   14004bce8:	and    eax,0xbb35e0d0
   14004bced:	repnz iret 
   14004bcef:	xchg   esi,eax
   14004bcf0:	mov    edi,0x6c00c36d
   14004bcf5:	scas   al,BYTE PTR es:[rdi]
   14004bcf6:	movsxd edi,ebp
   14004bcf8:	shl    BYTE PTR [rbp+0x38],1
   14004bcfb:	jb     0x14004bcd0
   14004bcfd:	mov    ebx,0x2d200bd1
   14004bd02:	rex.WR (bad) 
   14004bd04:	js     0x14004bd70
   14004bd06:	adc    al,0x3d
   14004bd08:	mov    bl,0x13
   14004bd0a:	movabs al,ds:0x38c8a80359a079e5
   14004bd13:	mov    ah,0x7
   14004bd15:	rex.WR xor r11b,al
   14004bd18:	es (bad) 
   14004bd1a:	push   rcx
   14004bd1b:	in     eax,dx
   14004bd1c:	movabs eax,ds:0xf6ae7e73fdfb609
   14004bd25:	imul   ebp,DWORD PTR [rbx+0x69],0xb2085c2f
   14004bd2c:	mov    al,0x43
   14004bd2e:	lods   eax,DWORD PTR ds:[rsi]
   14004bd2f:	jle    0x14004bd59
   14004bd31:	sub    BYTE PTR [rdi+rax*8+0x51a09fa],0x28
   14004bd39:	cmp    esp,edi
   14004bd3b:	out    0x3e,eax
   14004bd3d:	and    DWORD PTR [rcx+0x15bdbbd8],0x5ad2977b
   14004bd47:	(bad)  
   14004bd48:	jbe    0x14004bd80
   14004bd4a:	test   BYTE PTR [rcx+rdi*1],al
   14004bd4d:	mov    esi,eax
   14004bd4f:	jmp    0x160b07647
   14004bd54:	jmp    0x14004bce7
   14004bd56:	or     BYTE PTR [rax+rbp*1+0x7c],dl
   14004bd5a:	adc    r12d,r8d
   14004bd5d:	stc    
   14004bd5e:	sub    DWORD PTR [rbx+0x622532a2],ebx
   14004bd64:	retf   0xaec9
   14004bd67:	mov    al,0x28
   14004bd69:	(bad)  
   14004bd6b:	xor    BYTE PTR [rcx+rbp*8],al
   14004bd6e:	ds jbe 0x14004bd49
   14004bd71:	rex
   14004bd72:	rex ret 
   14004bd74:	pop    rbx
   14004bd75:	out    dx,al
   14004bd76:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004bd77:	cwde   
   14004bd78:	enter  0xb5b9,0x18
   14004bd7c:	or     DWORD PTR [rax+0x7d5a60e8],0x3f
   14004bd83:	or     bh,dh
   14004bd85:	loope  0x14004bdf6
   14004bd87:	(bad)  
   14004bd88:	or     eax,0x15e97c1
   14004bd8d:	pushf  
   14004bd8e:	fstp   st(2)
   14004bd90:	(bad)  
   14004bd91:	add    BYTE PTR [rcx-0x21521612],dh
   14004bd97:	cld    
   14004bd98:	ror    DWORD PTR [rdi],0xdd
   14004bd9b:	xor    bh,BYTE PTR [rax]
   14004bd9d:	cmp    al,0xf2
   14004bd9f:	(bad)  
   14004bda0:	(bad)  
   14004bda1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004bda2:	repz scas al,BYTE PTR es:[rdi]
   14004bda4:	adc    bl,ah
   14004bda6:	(bad)  
   14004bda7:	(bad)  
   14004bda8:	lods   eax,DWORD PTR ds:[rsi]
   14004bda9:	xor    edi,DWORD PTR [rdx+rsi*1+0x1]
   14004bdad:	es test eax,esi
   14004bdb0:	leave  
   14004bdb1:	rex.RX (bad) 
   14004bdb3:	test   al,0xf5
   14004bdb5:	cs rex.RXB (bad) 
   14004bdb8:	xor    ecx,ebp
   14004bdba:	rex.RXB
   14004bdbb:	rex.R loopne 0x14004be12
   14004bdbe:	je     0x14004bd7d
   14004bdc0:	test   DWORD PTR [rax+0x59],ebx
   14004bdc3:	lahf   
   14004bdc4:	(bad)
   14004bdc8:	fdiv   DWORD PTR [rcx-0x62]
   14004bdcb:	cmp    DWORD PTR [rsi],esi
   14004bdcd:	rex.W sub bpl,bl
   14004bdd0:	mov    edx,0x234eaeea
   14004bdd5:	rex.WRX scas al,BYTE PTR es:[rdi]
   14004bdd7:	es pop rsp
   14004bdd9:	mov    ebp,0xb202c2b3
   14004bdde:	mov    DWORD PTR [rip+0x3b175210],edx        # 0x17b1c0ff4
   14004bde4:	nop
   14004bde5:	push   rax
   14004bde6:	paddsw mm0,mm6
   14004bde9:	repnz cmc 
   14004bdeb:	mov    bh,0x83
   14004bded:	jnp    0x14004be66
   14004bdef:	or     BYTE PTR [rsi+0x71348a3c],0x12
   14004bdf6:	(bad)  
   14004bdf7:	movsxd edx,DWORD PTR [rbp-0x1f]
   14004bdfa:	sub    eax,DWORD PTR [rax]
   14004bdfc:	adc    dl,BYTE PTR [rdi+0x40]
   14004bdff:	and    ah,BYTE PTR [rcx+rcx*2+0x2d]
   14004be03:	ja     0x14004be06
   14004be05:	rex.WRXB rol QWORD PTR [r8-0x2d],0x45
   14004be0a:	test   al,0x3b
   14004be0c:	cmp    BYTE PTR [rdx-0x5],bh
   14004be0f:	(bad)  
   14004be10:	and    DWORD PTR [rcx+0x6995804b],0x8e3d98ec
   14004be1a:	shr    DWORD PTR [rcx+0x6716a8e3],0x11
   14004be21:	(bad)  
   14004be22:	xchg   edi,eax
   14004be23:	fsubr  QWORD PTR [r8-0x6bb6ebce]
   14004be2a:	adc    eax,0x7235197e
   14004be2f:	(bad)  
   14004be30:	jg     0x14004be7f
   14004be32:	mov    ecx,0xfd57afdb
   14004be37:	sub    DWORD PTR [rcx+0x17],esi
   14004be3a:	cwde   
   14004be3b:	cmp    al,0xb6
   14004be3d:	out    dx,eax
   14004be3e:	(bad)  
   14004be3f:	ds (bad) 
   14004be41:	retf   0x5b9
   14004be44:	mov    bh,0xe7
   14004be46:	(bad)  
   14004be47:	xlat   BYTE PTR ds:[rbx]
   14004be48:	addr32 out dx,al
   14004be4a:	sub    DWORD PTR [rbx+0x5e3b607],0xbecf635d
   14004be54:	push   rcx
   14004be55:	adc    al,0x43
   14004be57:	add    al,0xa
   14004be59:	add    DWORD PTR [rcx+rbx*1-0x6e],ecx
   14004be5d:	out    0xd0,eax
   14004be5f:	movabs ds:0x9026791a4fe0d53e,al
   14004be68:	cli    
   14004be69:	jnp    0x14004bed5
   14004be6b:	cmc    
   14004be6c:	sbb    eax,0xaac241dd
   14004be71:	add    eax,0x5399cfc4
   14004be76:	shl    edi,0x8
   14004be79:	and    eax,0x90c5ddca
   14004be7e:	std    
   14004be7f:	std    
   14004be80:	add    al,0x14
   14004be82:	mov    BYTE PTR [rdx],al
   14004be84:	mov    edx,0x88dd8848
   14004be89:	cmp    al,0x24
   14004be8b:	jbe    0x14004bea4
   14004be8d:	add    al,cl
   14004be8f:	sbb    DWORD PTR [rsi+0x17507bd0],ecx
   14004be95:	mov    DWORD PTR [rdx],ebx
   14004be97:	mov    al,0x22
   14004be99:	rex.WRB mov r11b,0xfc
   14004be9c:	(bad)  
   14004be9d:	out    0x82,al
   14004be9f:	sbb    al,cl
   14004bea1:	lods   al,BYTE PTR ds:[rsi]
   14004bea2:	sti    
   14004bea3:	(bad)  
   14004bea4:	cs data16 (bad) 
   14004bea7:	xor    eax,0x1a71fb6f
   14004beac:	(bad)  
   14004beae:	adc    DWORD PTR [rsi-0x331338c],edi
   14004beb4:	jb     0x14004bf0b
   14004beb6:	or     BYTE PTR [rsi+0x3ce00a74],bh
   14004bebc:	(bad)  
   14004bebd:	(bad)  
   14004bebe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004bebf:	mov    bh,0xbd
   14004bec1:	movsxd edi,edi
   14004bec3:	shr    DWORD PTR [rbx],0xae
   14004bec6:	jp     0x14004bf0f
   14004bec8:	fild   WORD PTR [rax-0x1]
   14004becb:	xchg   DWORD PTR [rdx-0x54],eax
   14004bece:	out    dx,al
   14004becf:	rex.WR
   14004bed0:	(bad)
   14004bed5:	(bad)  
   14004bed6:	rex.WRB in al,0xb6
   14004bed9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004beda:	jo     0x14004be64
   14004bedc:	lods   al,BYTE PTR ds:[rsi]
   14004bedd:	jae    0x14004bf48
   14004bedf:	xor    BYTE PTR [rbx-0x7a620a43],cl
   14004bee5:	fstp   QWORD PTR [rax]
   14004bee7:	mov    dl,0x78
   14004bee9:	movsxd ecx,edx
   14004beeb:	rex.RXB sub eax,0xb3c2b2b7
   14004bef1:	add    BYTE PTR [rsi],cl
   14004bef3:	or     r15b,r8b
   14004bef6:	add    BYTE PTR [rcx+rbp*4+0x5ce38379],al
   14004befd:	or     al,0x26
   14004beff:	cmp    esp,eax
   14004bf01:	and    ecx,esi
   14004bf03:	out    0xb1,eax
   14004bf05:	mov    esp,0x566deb0
   14004bf0a:	push   rbp
   14004bf0b:	rex.WRXB lea r10,[r13+0x46c46eab]
   14004bf12:	call   QWORD PTR [rax]
   14004bf14:	test   al,0xef
   14004bf16:	(bad)  
   14004bf17:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004bf18:	xchg   ebx,eax
   14004bf19:	rex.RXB ror DWORD PTR [r11+0x73],0x92
   14004bf1e:	(bad)  
   14004bf1f:	adc    BYTE PTR [rdx],ch
   14004bf21:	ins    DWORD PTR es:[rdi],dx
   14004bf22:	adc    ch,BYTE PTR [rdx-0x49]
   14004bf25:	rcl    DWORD PTR [rdi+rax*8],cl
   14004bf28:	adc    BYTE PTR [rdi],bl
   14004bf2a:	cmp    eax,0xe6626e6e
   14004bf2f:	(bad)  
   14004bf30:	mov    bh,0xe0
   14004bf32:	hlt    
   14004bf33:	(bad)  
   14004bf34:	outs   dx,DWORD PTR ds:[rsi]
   14004bf35:	rex.X out dx,eax
   14004bf37:	out    0x2a,al
   14004bf39:	ret    0x29dc
   14004bf3c:	mov    WORD PTR [rsi+rcx*4-0x5e],cs
   14004bf40:	sahf   
   14004bf41:	lahf   
   14004bf42:	add    al,0xad
   14004bf44:	sub    al,0x0
   14004bf46:	imul   esp,DWORD PTR [rbx],0xeb750437
   14004bf4c:	scas   eax,DWORD PTR es:[rdi]
   14004bf4d:	int    0x3e
   14004bf4f:	cmc    
   14004bf50:	dec    ah
   14004bf52:	repnz pop rbx
   14004bf54:	cmp    al,0xdf
   14004bf56:	fcomp  QWORD PTR [rbp-0x25]
   14004bf59:	fild   QWORD PTR [rcx+rdi*4+0x2147ac89]
   14004bf60:	(bad)  
   14004bf61:	lahf   
   14004bf62:	adc    eax,0x212cc048
   14004bf67:	retf   0x74d5
   14004bf6a:	repz movabs al,ds:0x4dccc59e3d23e3db
   14004bf74:	sar    DWORD PTR [rdx+0x73194eef],1
   14004bf7a:	jns    0x14004bf64
   14004bf7c:	xchg   ebp,eax
   14004bf7d:	repz pop rax
   14004bf7f:	(bad)  
   14004bf80:	and    esi,ecx
   14004bf82:	ret    
   14004bf83:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004bf84:	lahf   
   14004bf85:	cli    
   14004bf86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   14004bf88:	xchg   ecx,eax
   14004bf89:	je     0x14004bf15
   14004bf8b:	jno    0x14004bf2e
   14004bf8d:	(bad)  
   14004bf8e:	or     edi,ebp
   14004bf90:	cdq    
   14004bf91:	(bad)
   14004bf94:	retf   
   14004bf95:	ret    0x592c
   14004bf98:	jge    0x14004bf59
   14004bf9a:	xchg   DWORD PTR [rcx+0x4d],ebp
   14004bf9d:	push   0xfffffffff024e515
   14004bfa2:	xchg   esi,eax
   14004bfa3:	out    0xc3,eax
   14004bfa5:	jle    0x14004bf5a
   14004bfa7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004bfa8:	leave  
   14004bfa9:	rex.WB xchg BYTE PTR [r8+0x220e9cec],dl
   14004bfb0:	sub    bh,bl
   14004bfb2:	rex.WXB
   14004bfb3:	cmp    ebp,DWORD PTR [r9-0x2084b3db]
   14004bfba:	(bad)  
   14004bfbb:	xchg   ebx,eax
   14004bfbc:	ja     0x14004c03d
   14004bfbe:	add    al,0x97
   14004bfc0:	inc    BYTE PTR [rcx]
   14004bfc2:	mov    dl,0x71
   14004bfc4:	jl     0x14004c01f
   14004bfc6:	(bad)  
   14004bfc7:	ud1    esi,DWORD PTR [rax-0x29c31ff6]
   14004bfce:	jle    0x14004c038
   14004bfd0:	iret   
   14004bfd1:	sahf   
   14004bfd2:	(bad)  
   14004bfd3:	int    0x6f
   14004bfd5:	jnp    0x14004bf9e
   14004bfd7:	lea    edi,[rbx]
   14004bfd9:	ja     0x14004bfca
   14004bfdb:	stc    
   14004bfdc:	xchg   ecx,eax
   14004bfdd:	mov    edx,0xa44f79d3
   14004bfe2:	jo     0x14004c059
   14004bfe4:	add    dh,BYTE PTR [rdx]
   14004bfe6:	pushf  
   14004bfe7:	cpuid  
   14004bfe9:	sbb    eax,0x265dfc73
   14004bfee:	test   BYTE PTR [rcx+0x77],ch
   14004bff1:	rex (bad) 
   14004bff3:	pop    rsi
   14004bff4:	rex.WX
   14004bff5:	rex.X ret 0x4e18
   14004bff9:	xor    ch,BYTE PTR [rbx+0xb]
   14004bffc:	(bad)  
   14004bffd:	stos   BYTE PTR es:[rdi],al
   14004bffe:	(bad)  
   14004bfff:	or     edx,ebx
   14004c001:	jmp    0xd7e4e922
   14004c006:	or     eax,0xacfc3c9a
   14004c00b:	push   rsp
   14004c00c:	rex.WX loopne 0x14004c07c
   14004c00f:	(bad)  
   14004c010:	loopne 0x14004c072
   14004c012:	sbb    edx,0x92f64168
   14004c018:	cmovb  esp,DWORD PTR [rcx-0x6c6b9b5a]
   14004c01f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c020:	jge    0x14004bfdc
   14004c022:	push   rdx
   14004c023:	add    eax,eax
   14004c025:	or     BYTE PTR [rax+0x8ec0d9a],ch
   14004c02b:	add    ebx,ebp
   14004c02d:	xchg   edi,eax
   14004c02e:	pop    rsp
   14004c02f:	mov    ?,WORD PTR [rbp+0x3b344181]
   14004c035:	xchg   BYTE PTR [rcx-0x665fb09d],al
   14004c03b:	cdq    
   14004c03c:	rex fcomp QWORD PTR [rdi+rax*1+0x51]
   14004c041:	test   DWORD PTR [rsi+rbp*4-0x1d7ad0e4],eax
   14004c048:	sub    al,0x8c
   14004c04a:	(bad)  
   14004c04b:	fld    QWORD PTR [rbp*8-0x209877c2]
   14004c052:	lock add esp,edx
   14004c055:	popf   
   14004c056:	test   BYTE PTR ds:[rcx-0x70b373cf],bl
   14004c05d:	(bad)  
   14004c05e:	(bad)  
   14004c05f:	cli    
   14004c060:	cmp    dl,ah
   14004c062:	loop   0x14004c080
   14004c064:	push   0xffffffffaee00563
   14004c069:	(bad)  
   14004c06a:	es cli 
   14004c06c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c06d:	lods   al,BYTE PTR ds:[rsi]
   14004c06e:	or     BYTE PTR [rcx],bh
   14004c070:	in     eax,0x37
   14004c072:	jo     0x14004c02f
   14004c074:	call   0x104336e40
   14004c079:	mov    dl,0x33
   14004c07b:	sar    BYTE PTR [rdx-0x95249cc],0xb
   14004c082:	rex.RX retf 
   14004c084:	cmp    bh,BYTE PTR [rbx-0x4d73aa25]
   14004c08a:	xchg   ebx,eax
   14004c08b:	add    esi,0x15
   14004c08e:	adc    BYTE PTR [rdx+0x2],dh
   14004c091:	adc    BYTE PTR [rbp-0x5cb36981],dl
   14004c097:	enter  0x2ac2,0x4
   14004c09b:	jne    0x14004c11c
   14004c09d:	jrcxz  0x14004c0d8
   14004c09f:	fisubr DWORD PTR [rcx]
   14004c0a1:	pop    rbx
   14004c0a2:	in     eax,0x3b
   14004c0a4:	sub    al,BYTE PTR [rdi+rsi*1]
   14004c0a7:	movabs ds:0xb74d03cea0098200,eax
   14004c0b0:	(bad)  
   14004c0b1:	add    BYTE PTR [rbp-0x22],bl
   14004c0b4:	fsub   st,st(2)
   14004c0b6:	popf   
   14004c0b7:	xor    BYTE PTR [rbx],dh
   14004c0b9:	push   rbx
   14004c0ba:	cld    
   14004c0bb:	out    0x56,eax
   14004c0bd:	cmp    ah,BYTE PTR [rax-0x5a73cda8]
   14004c0c3:	sbb    al,0x58
   14004c0c5:	(bad)  
   14004c0c6:	add    BYTE PTR [rbp+0x41],al
   14004c0c9:	adc    DWORD PTR [rcx],esi
   14004c0cb:	adc    eax,0x8f5181d9
   14004c0d0:	stos   DWORD PTR es:[rdi],eax
   14004c0d1:	pop    rsp
   14004c0d2:	mov    DWORD PTR [rcx+0x323ce51d],edi
   14004c0d8:	in     al,0x4a
   14004c0da:	push   0x1c
   14004c0dc:	retf   0x2246
   14004c0df:	add    al,0x46
   14004c0e1:	movabs al,ds:0x7f9b047bbcde2180
   14004c0ea:	lods   al,BYTE PTR ds:[rsi]
   14004c0eb:	pop    rbp
   14004c0ec:	or     DWORD PTR [rbx-0x3],0xfffffff9
   14004c0f0:	xchg   edx,eax
   14004c0f1:	outs   dx,BYTE PTR ds:[rsi]
   14004c0f2:	(bad)  
   14004c0f3:	add    DWORD PTR [rbx+r15*4-0x2283a953],r11d
   14004c0fb:	popf   
   14004c0fc:	outs   dx,DWORD PTR ds:[rsi]
   14004c0fd:	fnsave [rbx-0x8]
   14004c100:	(bad)  
   14004c102:	(bad)  
   14004c104:	(bad)  
   14004c105:	sar    bh,1
   14004c107:	movabs eax,ds:0x698430e808bbeb18
   14004c110:	(bad)  
   14004c111:	(bad)  
   14004c112:	fcmove st,st(0)
   14004c114:	and    BYTE PTR [rdi+0x554004f],al
   14004c11a:	movabs al,ds:0xb6edca27c599f130
   14004c123:	jno    0x14004c18b
   14004c125:	(bad)  
   14004c126:	mov    bh,0xc4
   14004c128:	mov    BYTE PTR [rbp+0x7],ah
   14004c12b:	sbb    BYTE PTR [rdi],dh
   14004c12d:	sbb    bl,ah
   14004c12f:	sbb    ch,BYTE PTR [rbx]
   14004c131:	std    
   14004c132:	xchg   edx,eax
   14004c133:	mov    esp,0xe7379c
   14004c138:	ins    BYTE PTR es:[rdi],dx
   14004c139:	push   rbp
   14004c13a:	enter  0xad84,0x1b
   14004c13e:	(bad)  
   14004c13f:	fistp  WORD PTR [rax]
   14004c141:	cli    
   14004c142:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c143:	(bad)  
   14004c144:	sahf   
   14004c145:	add    al,0x26
   14004c147:	sub    DWORD PTR [rax],ecx
   14004c149:	(bad)  
   14004c14a:	out    0xd,eax
   14004c14c:	je     0x14004c0d4
   14004c14e:	rex.RX mov al,0xf4
   14004c151:	(bad)  
   14004c152:	fcmovnbe st,st(1)
   14004c154:	sbb    eax,0xfa7e09d8
   14004c159:	(bad)  
   14004c15a:	xor    al,0x93
   14004c15c:	(bad)  
   14004c15d:	adc    bh,dl
   14004c15f:	push   rsi
   14004c160:	je     0x14004c127
   14004c162:	cdq    
   14004c163:	add    BYTE PTR [rcx-0x282b14e3],cl
   14004c169:	jle    0x14004c168
   14004c16b:	(bad)  
   14004c16c:	outs   dx,BYTE PTR ds:[rsi]
   14004c16d:	jnp    0x14004c18e
   14004c16f:	neg    BYTE PTR ss:[rdi-0x79]
   14004c173:	(bad)  
   14004c174:	(bad)  
   14004c175:	cmp    al,0x7a
   14004c177:	out    0xc6,eax
   14004c179:	xor    DWORD PTR [rsi*2+0x34dcf51c],edi
   14004c180:	ret    0x82ca
   14004c183:	xor    al,0xfb
   14004c185:	movabs al,ds:0x6fda7215004fc994
   14004c18e:	and    ch,0x1
   14004c191:	jo     0x14004c119
   14004c193:	cld    
   14004c194:	stos   BYTE PTR es:[rdi],al
   14004c195:	fdiv   DWORD PTR [rdx-0x5710d0bb]
   14004c19b:	cmp    dh,0xe6
   14004c19e:	(bad)  
   14004c19f:	test   al,0x7b
   14004c1a1:	and    BYTE PTR [rdi-0x582ecd61],cl
   14004c1a7:	push   rcx
   14004c1a8:	add    al,0x7b
   14004c1aa:	add    BYTE PTR [rbp-0x54],ah
   14004c1ad:	mov    esp,0x4419ebc5
   14004c1b2:	lock out dx,eax
   14004c1b4:	mov    bh,0xa0
   14004c1b6:	xchg   BYTE PTR [rdx+0x39],al
   14004c1b9:	in     al,0x6b
   14004c1bb:	enter  0xc038,0x90
   14004c1bf:	sub    DWORD PTR [rax-0x1d],0xffffffb2
   14004c1c3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004c1c4:	mov    ecx,0x2b9e7248
   14004c1c9:	add    dl,BYTE PTR gs:[rbp+0x1e]
   14004c1cd:	sbb    eax,0xa66016f
   14004c1d2:	add    DWORD PTR [rbp-0x75ff3c7a],ebp
   14004c1d8:	pop    rsi
   14004c1d9:	(bad)  
   14004c1da:	repz rcl BYTE PTR fs:[rbx+rax*2],cl
   14004c1df:	pop    rcx
   14004c1e0:	loope  0x14004c209
   14004c1e2:	fild   WORD PTR [rdi+0x22]
   14004c1e5:	clts   
   14004c1e7:	data16 rex.WX
   14004c1e9:	add    al,0x5a
   14004c1ec:	mov    ss,WORD PTR [rbp+0x3ab24ef3]
   14004c1f2:	shr    bl,1
   14004c1f4:	movabs eax,ds:0xfe6fbb97a0004f3c
   14004c1fd:	mov    ecx,0xdf9af470
   14004c202:	in     al,0x6b
   14004c204:	(bad)  
   14004c205:	test   DWORD PTR [rbp+0x3],eax
   14004c208:	pop    rsi
   14004c209:	(bad)  
   14004c20a:	xor    dh,al
   14004c20c:	jnp    0x14004c265
   14004c20e:	add    bh,ah
   14004c210:	mov    cl,0xf6
   14004c212:	add    edi,DWORD PTR [rbx]
   14004c214:	ja     0x14004c1ec
   14004c216:	mov    bh,0xbd
   14004c218:	jmp    0x14004c257
   14004c21a:	(bad)  
   14004c21b:	mov    gs,esp
   14004c21d:	fsincos 
   14004c21f:	and    esi,DWORD PTR [rbp-0x23]
   14004c222:	repz mov esi,0xce4ae910
   14004c228:	iret   
   14004c229:	pop    rsi
   14004c22a:	ret    0x9c6c
   14004c22d:	(bad)  
   14004c22e:	sbb    BYTE PTR [rcx+rsi*4-0x25],dl
   14004c232:	(bad)  
   14004c233:	or     ah,bh
   14004c235:	call   0x1839ed8b1
   14004c23a:	rol    DWORD PTR [rdi-0x19826a53],1
   14004c240:	test   DWORD PTR [rbx],edi
   14004c242:	cli    
   14004c243:	add    eax,0x1f22c617
   14004c248:	(bad)  
   14004c249:	(bad)  
   14004c24a:	sbb    eax,DWORD PTR [rax]
   14004c24c:	fwait
   14004c24d:	cs sahf 
   14004c24f:	rex.WXB and r10b,cl
   14004c252:	mov    edi,0xa7f936b0
   14004c257:	(bad)  
   14004c258:	mov    bl,0x37
   14004c25a:	frstor [rax-0x6a]
   14004c25d:	ror    BYTE PTR [rdi],0x6d
   14004c260:	or     al,0x74
   14004c262:	data16 stos BYTE PTR es:[rdi],al
   14004c264:	in     eax,dx
   14004c265:	sub    DWORD PTR [rcx],edx
   14004c267:	rex.W jge 0x14004c2ae
   14004c26a:	rex.X ins BYTE PTR es:[rdi],dx
   14004c26c:	(bad)  
   14004c26d:	mov    al,0xa3
   14004c26f:	mov    ds,WORD PTR [rax-0x45]
   14004c272:	repnz (bad) 
   14004c274:	lods   al,BYTE PTR ds:[rsi]
   14004c275:	imul   ebp
   14004c277:	rex jp 0x14004c264
   14004c27a:	cmp    ebp,eax
   14004c27c:	sahf   
   14004c27d:	cmp    al,0x82
   14004c27f:	push   0x65
   14004c281:	add    DWORD PTR [rcx-0xbbdbf27],esp
   14004c287:	repz test DWORD PTR [rbp-0x543d3f3],ecx
   14004c28e:	rex.WRB sbb BYTE PTR [r13+0x6be8ede1],r15b
   14004c295:	ss adc esi,esp
   14004c298:	movsxd r12,DWORD PTR [r10+r13*2+0x14]
   14004c29d:	mov    ebp,0xcb08e333
   14004c2a2:	jae    0x14004c244
   14004c2a4:	out    dx,al
   14004c2a5:	sbb    cl,BYTE PTR [rax-0x3ceb2eae]
   14004c2ab:	cwde   
   14004c2ac:	jg     0x14004c24e
   14004c2ae:	(bad)  
   14004c2af:	ins    DWORD PTR es:[rdi],dx
   14004c2b0:	cmc    
   14004c2b1:	adc    eax,0x2b7e524
   14004c2b6:	cmp    esi,ebx
   14004c2b8:	outs   dx,DWORD PTR ds:[rsi]
   14004c2b9:	cs scas al,BYTE PTR es:[rdi]
   14004c2bb:	cmp    al,0x8b
   14004c2bd:	or     al,0xc7
   14004c2bf:	add    edx,DWORD PTR [rdi-0x6752603e]
   14004c2c5:	out    0xf8,eax
   14004c2c7:	fwait
   14004c2c8:	cmp    bpl,spl
   14004c2cb:	xchg   edi,eax
   14004c2cc:	loope  0x14004c2dd
   14004c2ce:	sahf   
   14004c2cf:	rex.WRXB movabs al,ds:0xc86ee27dc3940e39
   14004c2d9:	add    ecx,DWORD PTR [rcx+0x79731f20]
   14004c2df:	loop   0x14004c2db
   14004c2e1:	cld    
   14004c2e2:	rex.RB ret 0xeb0b
   14004c2e6:	outs   dx,DWORD PTR ds:[rsi]
   14004c2e7:	cmp    bh,BYTE PTR [rax+rdx*2+0x6feb4503]
   14004c2ee:	call   QWORD PTR [rbp+rax*8-0x550f48c1]
   14004c2f5:	rex.XB adc al,0x46
   14004c2f8:	adc    DWORD PTR [rcx],edi
   14004c2fa:	enter  0x2263,0x37
   14004c2fe:	rex.WR sub rax,0x711f6140
   14004c304:	add    DWORD PTR [rcx-0x24],edi
   14004c307:	hlt    
   14004c308:	adc    al,0xb5
   14004c30a:	add    BYTE PTR [rsi+0x432f9072],bl
   14004c310:	xlat   BYTE PTR ds:[rbx]
   14004c311:	and    eax,0x5cb4e2e4
   14004c316:	ror    dh,0xac
   14004c319:	pop    rsp
   14004c31a:	or     eax,0xbf3151cf
   14004c31f:	ins    DWORD PTR es:[rdi],dx
   14004c320:	fisub  WORD PTR [rbp+0x4aaf8340]
   14004c326:	or     ebp,DWORD PTR [rdi+0x7]
   14004c329:	loope  0x14004c39c
   14004c32b:	mov    esp,0x2f01398c
   14004c330:	pop    rsp
   14004c331:	add    DWORD PTR [rdi+rax*8-0x504a026],ebx
   14004c338:	(bad)  
   14004c339:	or     al,0x5d
   14004c33b:	ja     0x14004c310
   14004c33d:	sub    eax,0xefebedef
   14004c342:	sti    
   14004c343:	xchg   DWORD PTR [rbp+0x55],esi
   14004c346:	ffreep st(5)
   14004c348:	rex
   14004c349:	rex.WRXB and r15b,BYTE PTR [r8-0x4e]
   14004c34d:	or     al,0x3
   14004c34f:	push   0x4b33ca52
   14004c354:	out    dx,eax
   14004c355:	xor    esi,DWORD PTR [rcx+0x3e]
   14004c358:	test   al,0x59
   14004c35a:	(bad)  
   14004c35b:	cld    
   14004c35c:	nop
   14004c35d:	int3   
   14004c35e:	adc    eax,0x600c0f80
   14004c363:	add    ch,BYTE PTR [rdx+rbx*2+0x44]
   14004c367:	(bad)  
   14004c368:	out    dx,al
   14004c369:	rex.WRB (bad) 
   14004c36b:	jne    0x14004c38c
   14004c36d:	(bad)  
   14004c36e:	or     DWORD PTR [rbx-0x52],ebx
   14004c371:	xchg   esp,eax
   14004c372:	fwait
   14004c373:	mov    dh,BYTE PTR [rbx-0x4d60264]
   14004c379:	push   rax
   14004c37a:	retf   0x823b
   14004c37d:	mov    ebx,0x1790626
   14004c382:	js     0x14004c304
   14004c384:	shl    BYTE PTR [rdx-0x45],0x72
   14004c388:	cmp    ecx,ebx
   14004c38a:	(bad)  
   14004c38b:	adc    esp,DWORD PTR [rax-0x77ef3536]
   14004c391:	repnz add bl,ah
   14004c394:	and    BYTE PTR [rax+0x17],dh
   14004c397:	cmp    eax,DWORD PTR [rax]
   14004c399:	push   rsp
   14004c39a:	xchg   edi,eax
   14004c39b:	pop    rsp
   14004c39c:	adc    ebp,0xfd3441be
   14004c3a2:	cmp    edx,eax
   14004c3a4:	sbb    al,0x7d
   14004c3a6:	add    dh,BYTE PTR [rax+rsi*1-0x745115f3]
   14004c3ad:	and    bl,BYTE PTR [rbx+0x5f]
   14004c3b0:	(bad)  
   14004c3b1:	jbe    0x14004c3a1
   14004c3b3:	(bad)
   14004c3b6:	mov    ebp,0x30df751f
   14004c3bb:	mov    al,0x70
   14004c3bd:	or     bh,BYTE PTR [rbx]
   14004c3bf:	addr32 (bad) 
   14004c3c1:	movsxd esi,DWORD PTR [rax+0x7a]
   14004c3c4:	or     al,0x71
   14004c3c6:	(bad)  
   14004c3c7:	(bad)  
   14004c3c8:	mov    ah,0xba
   14004c3ca:	and    al,0xb9
   14004c3cc:	add    al,0x94
   14004c3ce:	pushf  
   14004c3cf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c3d0:	(bad)  
   14004c3d1:	push   sp
   14004c3d3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c3d4:	jge    0x14004c3d4
   14004c3d6:	cmc    
   14004c3d7:	(bad)  
   14004c3d8:	rex.WR clc 
   14004c3da:	or     eax,0x7e1347fa
   14004c3df:	adc    ebp,DWORD PTR [rsi+riz*1+0x70]
   14004c3e3:	adc    BYTE PTR [rdi-0x3f],dh
   14004c3e6:	imul   eax,DWORD PTR [rax+rbx*2],0xf61c9fe7
   14004c3ed:	movsxd edx,DWORD PTR [rsi+0x36]
   14004c3f0:	mov    edi,0x2882f825
   14004c3f5:	xor    ch,BYTE PTR [rdi-0x70]
   14004c3f8:	fld    QWORD PTR [rsi]
   14004c3fa:	fsubr  DWORD PTR [rbx+0x12]
   14004c3fd:	js     0x14004c46c
   14004c3ff:	rex.WX
   14004c400:	rex
   14004c401:	rex.RXB push r13
   14004c403:	lods   al,BYTE PTR ds:[rsi]
   14004c404:	and    eax,0x3866dfe5
   14004c409:	nop
   14004c40a:	(bad)  
   14004c40b:	fisub  WORD PTR [rcx+0x796713be]
   14004c411:	(bad)  
   14004c412:	push   rdx
   14004c413:	(bad)  
   14004c414:	ins    DWORD PTR es:[rdi],dx
   14004c415:	(bad)  
   14004c416:	cs xchg edx,eax
   14004c418:	in     al,dx
   14004c419:	lock fnsave [rax+0x61]
   14004c41d:	stos   DWORD PTR es:[rdi],eax
   14004c41e:	mov    WORD PTR [rdx-0x1c659c76],ss
   14004c424:	sub    DWORD PTR [rdi+0x2bb9ad59],ebp
   14004c42a:	xchg   ebp,eax
   14004c42b:	adc    ah,al
   14004c42d:	fwait
   14004c42e:	nop
   14004c42f:	mov    al,0x89
   14004c431:	scas   eax,DWORD PTR es:[rdi]
   14004c432:	sbb    eax,0x8104a28
   14004c437:	rex.WB pop r12
   14004c439:	sbb    ah,bl
   14004c43b:	(bad)  
   14004c43c:	ins    BYTE PTR es:[rdi],dx
   14004c43d:	(bad)  
   14004c43e:	pop    rdx
   14004c43f:	faddp  st(4),st
   14004c441:	push   rsi
   14004c442:	mov    ebx,0x1281e79f
   14004c447:	lods   eax,DWORD PTR ds:[rsi]
   14004c448:	push   rsp
   14004c449:	adc    BYTE PTR [rdx+0x276b9710],al
   14004c44f:	fistp  QWORD PTR ss:[rdi]
   14004c452:	(bad)  
   14004c453:	int    0xdf
   14004c455:	jns    0x14004c490
   14004c457:	(bad)  
   14004c458:	vmwrite rdi,QWORD PTR [rsi+0xa]
   14004c45c:	loopne 0x14004c49a
   14004c45e:	(bad)  
   14004c45f:	(bad)  
   14004c460:	rex jl 0x14004c43e
   14004c463:	(bad)  
   14004c464:	cld    
   14004c465:	fmul   DWORD PTR [rbp+0x3b]
   14004c468:	ja     0x14004c459
   14004c46a:	std    
   14004c46b:	(bad)  
   14004c46c:	rex.WRXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14004c46e:	repz rcr DWORD PTR [rax],0xc2
   14004c472:	push   rbp
   14004c473:	and    cl,cl
   14004c475:	mov    DWORD PTR [rsi],edx
   14004c477:	(bad)
   14004c47a:	js     0x14004c409
   14004c47c:	sti    
   14004c47d:	out    0xe4,eax
   14004c47f:	mov    esi,0x68217332
   14004c484:	push   0xffffffffef7b72c3
   14004c489:	mov    al,0xbd
   14004c48b:	mov    al,0xee
   14004c48d:	mov    dl,0x43
   14004c48f:	(bad)  
   14004c490:	rex.RX pushf 
   14004c492:	ror    cl,cl
   14004c495:	ret    0x73e6
   14004c498:	push   rdx
   14004c499:	sti    
   14004c49a:	movabs al,ds:0xe94b2c53252c356a
   14004c4a3:	(bad)  
   14004c4a4:	retf   
   14004c4a5:	and    BYTE PTR [rdx],dl
   14004c4a7:	mov    dh,0x3c
   14004c4a9:	jge    0x14004c468
   14004c4ab:	mov    BYTE PTR [rbp+rbp*8+0x71],cl
   14004c4af:	jno    0x14004c4ee
   14004c4b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c4b2:	jns    0x14004c47c
   14004c4b4:	lods   eax,DWORD PTR ds:[rsi]
   14004c4b5:	(bad)  
   14004c4b6:	push   rbx
   14004c4b7:	sbb    DWORD PTR [rdx+0x2a],esi
   14004c4ba:	(bad)  
   14004c4bb:	(bad)  
   14004c4bc:	mov    cl,0xcf
   14004c4be:	retf   
   14004c4bf:	(bad)  
   14004c4c0:	rex.WB cli 
   14004c4c2:	or     al,0x8c
   14004c4c4:	mov    WORD PTR [rax-0x1b],fs
   14004c4c7:	xchg   BYTE PTR [rdi],dh
   14004c4c9:	(bad)  
   14004c4ca:	mov    bl,0x7f
   14004c4cc:	adc    cl,ch
   14004c4ce:	cdq    
   14004c4cf:	rex.RXB sbb BYTE PTR [r9+0xac6d071],0x62
   14004c4d7:	push   rbp
   14004c4d8:	(bad)  
   14004c4d9:	hlt    
   14004c4da:	cmc    
   14004c4db:	inc    DWORD PTR [rax]
   14004c4dd:	retf   
   14004c4de:	sti    
   14004c4df:	scas   eax,DWORD PTR es:[rdi]
   14004c4e0:	rex.RXB (bad) 
   14004c4e3:	xor    bh,BYTE PTR [rdx-0x1a]
   14004c4e6:	rex.WRX (bad) 
   14004c4e8:	js     0x14004c55c
   14004c4ea:	adc    al,0xf5
   14004c4ec:	in     al,dx
   14004c4ed:	and    al,0xc2
   14004c4ef:	repnz add dl,al
   14004c4f2:	test   al,0xf5
   14004c4f4:	(bad)  
   14004c4f5:	(bad)  
   14004c4f6:	rex.WB jmp 0x14004c50f
   14004c4f9:	jrcxz  0x14004c532
   14004c4fb:	call   0x1255d6e1f
   14004c500:	xchg   DWORD PTR [rdx-0x80],ecx
   14004c503:	lods   al,BYTE PTR ds:[rsi]
   14004c504:	(bad)  
   14004c505:	mov    ebp,0xed6e9a50
   14004c50a:	xchg   ecx,eax
   14004c50b:	int    0x90
   14004c50d:	xchg   ebx,eax
   14004c50e:	js     0x14004c4d1
   14004c510:	(bad)  
   14004c511:	or     al,dl
   14004c513:	leave  
   14004c514:	out    dx,al
   14004c515:	ret    0xfe46
   14004c518:	cmp    eax,0xc09865d9
   14004c51d:	xchg   edi,eax
   14004c51e:	xchg   esi,eax
   14004c51f:	sar    bh,cl
   14004c521:	enter  0x8295,0x23
   14004c525:	xor    BYTE PTR [rdi],ah
   14004c527:	fst    QWORD PTR [rcx+rsi*4+0x16]
   14004c52b:	xchg   esi,eax
   14004c52c:	rcr    esi,cl
   14004c52e:	fwait
   14004c52f:	nop
   14004c530:	mov    ebx,0x686bd125
   14004c535:	mov    ebx,0xc1435270
   14004c53a:	(bad)  
   14004c53b:	push   rdx
   14004c53d:	mov    ebp,0x373ffce6
   14004c542:	shrd   DWORD PTR [rcx-0x73c973d7],edx,cl
   14004c549:	jmp    0x141886605
   14004c54e:	rex.X add al,0x96
   14004c551:	and    eax,0x5d488c1
   14004c556:	sub    BYTE PTR [rdi+rbp*2],0xce
   14004c55a:	fs sbb edi,ebx
   14004c55d:	jp     0x14004c59f
   14004c55f:	rcl    BYTE PTR [rdx-0x53482cf],cl
   14004c565:	lods   al,BYTE PTR ds:[rsi]
   14004c566:	in     al,dx
   14004c567:	rol    BYTE PTR [rcx-0x50],cl
   14004c56a:	cmc    
   14004c56b:	sbb    eax,0x50ec148d
   14004c570:	jp     0x14004c55f
   14004c572:	(bad)  
   14004c573:	rcl    ebx,cl
   14004c575:	mov    bh,0xfe
   14004c577:	adc    bh,BYTE PTR [rdi+0x593eebe6]
   14004c57d:	pop    rsi
   14004c57e:	(bad)  
   14004c57f:	(bad)  
   14004c580:	loopne 0x14004c55e
   14004c582:	or     ah,al
   14004c584:	(bad)  
   14004c586:	ds pop rsp
   14004c588:	jnp    0x14004c555
   14004c58a:	jmp    0x14004c513
   14004c58c:	scas   al,BYTE PTR es:[rdi]
   14004c58d:	mov    ebp,0xe9eff5e5
   14004c592:	out    dx,eax
   14004c593:	out    dx,eax
   14004c594:	sti    
   14004c595:	xchg   ecx,eax
   14004c596:	rex.WRX push rbp
   14004c598:	mov    edi,0x4300c005
   14004c59d:	(bad)  
   14004c59e:	xchg   esi,eax
   14004c59f:	test   ecx,esi
   14004c5a1:	xor    rax,0x423df5b9
   14004c5a7:	rcr    BYTE PTR [rax+0x76fec3b7],1
   14004c5ad:	mov    ah,0x3b
   14004c5af:	add    DWORD PTR [rdx+0x5f619731],ebx
   14004c5b5:	sub    al,BYTE PTR [rdx+0x7b]
   14004c5b8:	(bad)  
   14004c5b9:	dec    DWORD PTR [rax-0x76be1d23]
   14004c5bf:	xchg   ebp,eax
   14004c5c0:	(bad)  
   14004c5c1:	in     al,0xf
   14004c5c3:	push   rbx
   14004c5c4:	cmp    dh,ch
   14004c5c6:	mov    edx,0x161fb01d
   14004c5cb:	push   rbx
   14004c5cc:	and    BYTE PTR [rdi-0x2e2f5f4d],al
   14004c5d2:	fdivr  DWORD PTR [rbp+rbp*8+0x23]
   14004c5d6:	add    eax,0x6bc9fa4f
   14004c5db:	rex.WRB mov r15b,0x8e
   14004c5de:	push   rbx
   14004c5df:	sbb    dl,BYTE PTR [rdi+0x7b05423c]
   14004c5e5:	lods   eax,DWORD PTR ds:[rsi]
   14004c5e6:	jle    0x14004c624
   14004c5e8:	mov    BYTE PTR [rdx+rdi*8-0x1b],bh
   14004c5ec:	jrcxz  0x14004c586
   14004c5ee:	add    BYTE PTR [rax],cl
   14004c5f0:	adc    DWORD PTR [rbp+rbp*2-0x52],0xc2b7b061
   14004c5f8:	fisubr DWORD PTR [rbx-0x71153a92]
   14004c5fe:	(bad)  
   14004c5ff:	xor    al,0x4f
   14004c601:	or     BYTE PTR ds:[rdx],bh
   14004c604:	(bad)  
   14004c605:	sub    al,0x96
   14004c607:	scas   eax,DWORD PTR es:[rdi]
   14004c608:	mov    eax,0xfeafe30a
   14004c60d:	sti    
   14004c60e:	call   0x1bf40c71e
   14004c613:	or     al,BYTE PTR [rbx-0x2d]
   14004c616:	movabs ds:0x35363e8d213e9fe8,eax
   14004c61f:	jmp    0x16b2958ab
   14004c624:	adc    DWORD PTR [rax],0xa8f61658
   14004c62a:	and    DWORD PTR [rcx+0x7f],ebx
   14004c62d:	mov    dl,0xe0
   14004c62f:	xchg   DWORD PTR [rsi-0x4],edx
   14004c632:	push   rcx
   14004c633:	adc    esi,esi
   14004c635:	push   rbx
   14004c636:	stos   DWORD PTR es:[rdi],eax
   14004c637:	or     eax,0x5d97340
   14004c63c:	(bad)  
   14004c63d:	and    eax,DWORD PTR [rcx+0x2d]
   14004c640:	mov    ch,0x31
   14004c642:	cld    
   14004c643:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c644:	add    al,ah
   14004c646:	mov    al,0x9d
   14004c648:	add    BYTE PTR [rip+0xdc2d8b],ch        # 0x140e0f3d9
   14004c64e:	shr    BYTE PTR [rdi+rdi*1-0x35],cl
   14004c652:	xchg   edi,eax
   14004c653:	(bad)  
   14004c654:	clc    
   14004c655:	sbb    al,BYTE PTR [rax+0x5811cc84]
   14004c65b:	push   rax
   14004c65c:	xor    BYTE PTR [rdi-0x68ea26e9],al
   14004c662:	int    0x15
   14004c664:	imul   edi,eax,0xffffff91
   14004c667:	(bad)  
   14004c668:	pop    rsi
   14004c669:	mov    dh,0xf8
   14004c66b:	in     eax,0x66
   14004c66d:	out    dx,al
   14004c66e:	(bad)  
   14004c66f:	and    eax,0x331fd348
   14004c674:	es (bad) 
   14004c676:	xlat   BYTE PTR ds:[rbx]
   14004c677:	(bad)  
   14004c678:	adc    al,0xe1
   14004c67a:	rcl    BYTE PTR [rcx+0xa1b4ad4],1
   14004c680:	push   rcx
   14004c681:	xchg   DWORD PTR [rsi-0x4ff65634],ecx
   14004c687:	sahf   
   14004c688:	(bad)  
   14004c689:	pushfw 
   14004c68b:	or     al,0x5d
   14004c68d:	pop    rdx
   14004c68e:	clc    
   14004c68f:	mov    bl,0x71
   14004c691:	rex.RX adc al,0xaa
   14004c694:	xor    BYTE PTR [rdx-0x3477de6e],0x63
   14004c69b:	retf   0x1a47
   14004c69e:	(bad)  
   14004c69f:	in     al,0xb9
   14004c6a1:	ins    BYTE PTR es:[rdi],dx
   14004c6a2:	cmp    esp,ebp
   14004c6a4:	pop    rdx
   14004c6a5:	mov    al,0xe0
   14004c6a7:	repz push rsp
   14004c6a9:	jle    0x14004c636
   14004c6ab:	mov    esi,0x6ee578cb
   14004c6b0:	add    bh,bl
   14004c6b2:	rex.R (bad) 
   14004c6b4:	or     DWORD PTR [rax+0x49],edi
   14004c6b7:	mov    bh,0x33
   14004c6b9:	sub    eax,DWORD PTR [rax-0x432ecb0d]
   14004c6bf:	jmp    0x14004c708
   14004c6c1:	push   rcx
   14004c6c3:	jmp    0x14004c64b
   14004c6c5:	rex.RX jbe 0x14004c747
   14004c6c8:	movabs al,ds:0x1aba04387f7b7b7
   14004c6d1:	adc    eax,0x6ce69b7a
   14004c6d6:	xchg   ebx,eax
   14004c6d7:	pop    rbx
   14004c6d8:	(bad)  
   14004c6d9:	shl    DWORD PTR [rbx],cl
   14004c6db:	icebp  
   14004c6dc:	(bad)  
   14004c6dd:	xchg   edx,eax
   14004c6de:	mov    edx,0x9d212f32
   14004c6e3:	or     cl,BYTE PTR [rax+0x6a]
   14004c6e6:	cmp    DWORD PTR [rsi+rbp*1],0x45
   14004c6ea:	rex.RXB jg 0x14004c750
   14004c6ed:	outs   dx,DWORD PTR ds:[rsi]
   14004c6ee:	retf   
   14004c6ef:	ins    BYTE PTR es:[rdi],dx
   14004c6f0:	mov    edi,0xeecea5b6
   14004c6f5:	rex.X stc 
   14004c6f7:	cdq    
   14004c6f8:	in     eax,0x8
   14004c6fa:	mov    BYTE PTR [rdx-0x79e25970],dl
   14004c700:	add    BYTE PTR [rax+0x26d81ccd],ah
   14004c706:	je     0x14004c6a1
   14004c708:	mov    dl,BYTE PTR [rcx+0x58]
   14004c70b:	(bad)  
   14004c70c:	rex.RXB adc r12b,BYTE PTR [r13-0x6aae2e0e]
   14004c713:	push   rbx
   14004c714:	nop
   14004c715:	sub    ecx,DWORD PTR [rdi]
   14004c717:	imul   ebp,DWORD PTR [rdx+riz*2],0xffffffee
   14004c71b:	mov    esp,DWORD PTR [rbp+0x4d6e6c2]
   14004c721:	jns    0x14004c709
   14004c723:	xor    BYTE PTR [rax],cl
   14004c725:	sbb    DWORD PTR [rbx],0xea8340ec
   14004c72b:	shr    BYTE PTR [rbx+0x2763bab0],cl
   14004c731:	mov    edx,0x7a303b03
   14004c736:	(bad)
   14004c739:	cmp    esi,DWORD PTR [rsi-0x7d]
   14004c73c:	push   rdi
   14004c73d:	(bad)  
   14004c73e:	xor    BYTE PTR [rax],bh
   14004c740:	jnp    0x14004c754
   14004c742:	rex.XB xchg r11d,eax
   14004c744:	movsxd ebp,DWORD PTR [rax+0x561067e6]
   14004c74a:	xchg   edi,eax
   14004c74b:	shr    BYTE PTR [rcx+0x3],0x64
   14004c74f:	js     0x14004c7ae
   14004c751:	lahf   
   14004c752:	or     BYTE PTR [r10],r9b
   14004c755:	std    
   14004c756:	and    esi,eax
   14004c758:	sub    ah,BYTE PTR [rdx+0x15516bc9]
   14004c75e:	(bad)  
   14004c75f:	fild   QWORD PTR [rip+0xbc59ad]        # 0x140c12112
   14004c765:	stos   DWORD PTR es:[rdi],eax
   14004c766:	(bad)
   14004c769:	add    BYTE PTR [rbx-0x3a],bh
   14004c76c:	rex.RX (bad) 
   14004c76e:	xor    DWORD PTR [rax-0x57],esp
   14004c771:	sbb    DWORD PTR [rcx-0x8],0xffffffc9
   14004c775:	test   DWORD PTR [rdi],esi
   14004c777:	or     ebp,DWORD PTR [rsi+rsi*1-0x3]
   14004c77b:	outs   dx,BYTE PTR ds:[rsi]
   14004c77c:	sub    BYTE PTR [r15-0x7c58af5],r8b
   14004c783:	std    
   14004c784:	(bad)  [rbx]
   14004c786:	(bad)  [rsi+0x3c8d29b1]
   14004c78c:	adc    al,0xf6
   14004c78e:	mov    ecx,0xeb16e8c1
   14004c793:	push   0xffffffffffffffe3
   14004c795:	mov    edi,0xd316531d
   14004c79a:	xor    edx,0x8a44a9ef
   14004c7a0:	pushf  
   14004c7a1:	out    0x9b,eax
   14004c7a3:	and    bl,BYTE PTR [rax+0x7587e132]
   14004c7a9:	(bad)  
   14004c7aa:	cdq    
   14004c7ab:	icebp  
   14004c7ac:	mov    al,0xbc
   14004c7ae:	and    ecx,edi
   14004c7b0:	(bad)  
   14004c7b1:	xor    BYTE PTR [rbx-0x33c5da3c],ah
   14004c7b7:	push   rdi
   14004c7b8:	(bad)  
   14004c7b9:	jns    0x14004c779
   14004c7bb:	in     eax,0x2d
   14004c7bd:	fs (bad) 
   14004c7bf:	sub    DWORD PTR [rdi+0x6a],ecx
   14004c7c2:	(bad)  
   14004c7c3:	ja     0x14004c7a4
   14004c7c5:	std    
   14004c7c6:	(bad)  
   14004c7c7:	(bad)  
   14004c7c8:	clc    
   14004c7c9:	(bad)  
   14004c7ca:	mul    DWORD PTR [rcx-0x21]
   14004c7cd:	rex.RX icebp 
   14004c7cf:	xchg   ebx,eax
   14004c7d0:	xchg   edi,eax
   14004c7d1:	add    DWORD PTR [rcx],eax
   14004c7d3:	pushf  
   14004c7d4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c7d5:	lods   eax,DWORD PTR ds:[rsi]
   14004c7d6:	(bad)  
   14004c7d7:	xor    eax,0xe3bcde37
   14004c7dc:	mov    edx,0x577b6f5b
   14004c7e1:	inc    eax
   14004c7e3:	ror    BYTE PTR [rdi+0x27755556],0x11
   14004c7ea:	or     eax,0xbd21c831
   14004c7ef:	cmp    eax,0xd68aa0f4
   14004c7f4:	imul   esi,ecx,0xffffffd1
   14004c7f7:	pop    si
   14004c7f9:	gs (bad) 
   14004c7fb:	in     eax,dx
   14004c7fc:	cwde   
   14004c7fd:	add    ebx,DWORD PTR [rbx]
   14004c7ff:	(bad)  
   14004c800:	jbe    0x14004c81a
   14004c802:	(bad)  
   14004c803:	in     eax,0xfe
   14004c805:	sub    BYTE PTR [rsi],ah
   14004c807:	rex.RB
   14004c808:	or     ah,BYTE PTR ss:[rax]
   14004c80b:	xchg   esp,eax
   14004c80c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004c80d:	sbb    BYTE PTR [rsi+0x6e],dh
   14004c810:	js     0x14004c860
   14004c812:	ss mov cl,0xe5
   14004c815:	(bad)  
   14004c816:	ins    DWORD PTR es:[rdi],dx
   14004c817:	icebp  
   14004c818:	call   rbp
   14004c81a:	loop   0x14004c836
   14004c81c:	(bad)  
   14004c81d:	enter  0xc956,0x5c
   14004c821:	cmp    eax,0x409f1fbd
   14004c826:	addr32 retf 0xd34e
   14004c82a:	jae    0x14004c896
   14004c82c:	sbb    ebp,eax
   14004c82e:	lods   eax,DWORD PTR ds:[rsi]
   14004c82f:	jl     0x14004c7e4
   14004c831:	pop    rcx
   14004c832:	sbb    al,0x2
   14004c834:	rex.R loope 0x14004c85c
   14004c837:	rex.XB
   14004c838:	rex.X stc 
   14004c83a:	icebp  
   14004c83b:	(bad)  
   14004c83c:	(bad)  
   14004c83d:	and    ecx,DWORD PTR [rsi-0x66]
   14004c840:	out    dx,al
   14004c841:	sub    edi,ebx
   14004c843:	and    al,0x10
   14004c845:	nop
   14004c846:	sbb    dh,ah
   14004c848:	vpmuludq ymm14,ymm6,ymm4
   14004c84c:	jbe    0x14004c83e
   14004c84e:	(bad)  
   14004c84f:	(bad)  
   14004c850:	stos   DWORD PTR es:[rdi],eax
   14004c851:	mov    cl,0x74
   14004c853:	call   0x166d8712d
   14004c858:	push   0xffffffffa64614fe
   14004c85d:	mov    fs,WORD PTR [rdx+0x6814f667]
   14004c863:	jne    0x14004c876
   14004c865:	fcomp  QWORD PTR [rbp+0x43]
   14004c868:	mov    al,0x5a
   14004c86a:	jg     0x14004c821
   14004c86c:	outs   dx,BYTE PTR ds:[rsi]
   14004c86d:	push   rcx
   14004c86e:	pop    rbx
   14004c86f:	jge    0x14004c8c6
   14004c871:	int3   
   14004c872:	rex.WX mov spl,0x49
   14004c875:	mov    ebp,0x47edd97f
   14004c87a:	lods   al,BYTE PTR ds:[rsi]
   14004c87b:	mov    edi,0x5af273c1
   14004c880:	or     bl,cl
   14004c882:	jnp    0x14004c805
   14004c884:	jle    0x14004c82c
   14004c886:	(bad)  
   14004c887:	rex.WB lods rax,QWORD PTR ds:[rsi]
   14004c889:	jne    0x14004c8d9
   14004c88b:	(bad)  
   14004c88c:	add    eax,ecx
   14004c88e:	sub    eax,0xb575167f
   14004c893:	lahf   
   14004c894:	rol    DWORD PTR fs:[rip+0xffffffffbdf30c23],1        # 0xfdf7d4be
   14004c89b:	push   rbx
   14004c89c:	enter  0x977b,0x4d
   14004c8a0:	rex.RX sub al,0x2d
   14004c8a3:	mov    eax,0x28a619d4
   14004c8a8:	cmc    
   14004c8a9:	(bad)  
   14004c8aa:	xor    BYTE PTR [rbx-0x12],al
   14004c8ad:	repz rex.B
   14004c8af:	gs stos DWORD PTR es:[rdi],eax
   14004c8b1:	(bad)
   14004c8b4:	lahf   
   14004c8b5:	fistp  DWORD PTR [rsp-0xdf9c098]
   14004c8bc:	(bad)  
   14004c8bd:	(bad)  
   14004c8be:	sahf   
   14004c8bf:	cmp    BYTE PTR [rsi+0x45b79527],ah
   14004c8c5:	(bad)  
   14004c8c6:	lahf   
   14004c8c7:	pop    rdi
   14004c8c8:	(bad)  
   14004c8c9:	and    edi,DWORD PTR [rcx]
   14004c8cb:	rex.WRXB and rax,0x421517
   14004c8d1:	xchg   DWORD PTR [rsp+riz*4-0x494debf],eax
   14004c8d8:	in     eax,dx
   14004c8d9:	pop    rbp
   14004c8da:	sub    DWORD PTR [rbp+0x6a],0xffffff98
   14004c8de:	movabs ds:0x42082b1b381a6365,al
   14004c8e7:	sub    DWORD PTR [rdx],0x627bf28e
   14004c8ed:	rex.RX test esi,r12d
   14004c8f0:	push   rbp
   14004c8f1:	ja     0x14004c956
   14004c8f3:	loop   0x14004c8ab
   14004c8f5:	sti    
   14004c8f6:	mov    al,0xef
   14004c8f8:	ror    eax,cl
   14004c8fa:	rex.WB
   14004c8fb:	rex.B (bad) 
   14004c8fd:	cdq    
   14004c8fe:	sbb    edx,DWORD PTR [rax-0x63]
   14004c901:	xlat   BYTE PTR ds:[rbx]
   14004c902:	fidivr DWORD PTR [rdi-0x18]
   14004c905:	rex.RXB pop r15
   14004c907:	mov    ch,0x6b
   14004c909:	iret   
   14004c90a:	mov    esi,0xce9d57f7
   14004c90f:	ja     0x10f28282d
   14004c915:	fnstcw WORD PTR [rbx+rbx*4+0x2]
   14004c919:	(bad)  
   14004c91a:	sbb    ah,cl
   14004c91c:	sub    DWORD PTR gs:[rax+0x955a648],edx
   14004c923:	xchg   edx,eax
   14004c924:	rex.B cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c926:	adc    ebp,DWORD PTR [rax-0x37092cfc]
   14004c92c:	(bad)  [rax-0x466125ea]
   14004c932:	cmp    BYTE PTR [rdi],al
   14004c934:	mov    dl,0xa2
   14004c936:	xor    BYTE PTR [rbx-0x1f],cl
   14004c939:	xor    eax,0x17f7e6df
   14004c93e:	jae    0x14004c901
   14004c940:	mov    es,WORD PTR [rbp-0x3c]
   14004c943:	lods   eax,DWORD PTR ds:[rsi]
   14004c944:	cld    
   14004c945:	jg     0x14004c98d
   14004c947:	push   rsi
   14004c948:	sbb    al,0x66
   14004c94a:	stc    
   14004c94b:	ins    DWORD PTR es:[rdi],dx
   14004c94c:	loop   0x14004c8e9
   14004c94e:	rex.WRXB jbe 0x14004c937
   14004c951:	stos   DWORD PTR es:[rdi],eax
   14004c952:	or     esi,DWORD PTR [rax-0x68f144e8]
   14004c958:	pop    rbx
   14004c959:	rex.WRX
   14004c95a:	rex.RXB (bad) 
   14004c95c:	fdiv   QWORD PTR [rdx+0x76a4f975]
   14004c962:	xor    al,0xf
   14004c964:	rex.RXB xchg r8d,eax
   14004c966:	(bad)  
   14004c967:	push   rbx
   14004c968:	call   rsi
   14004c96a:	mov    edx,0x585c949
   14004c96f:	add    al,0x6e
   14004c971:	xor    BYTE PTR [rbp-0x1e],dh
   14004c974:	or     dh,al
   14004c976:	neg    bh
   14004c978:	or     dl,ch
   14004c97a:	fld    DWORD PTR [rcx-0x2271c0cc]
   14004c980:	xor    esp,DWORD PTR [rbx+0x18]
   14004c983:	cwde   
   14004c984:	cmp    cl,BYTE PTR [rsi-0x4f78c750]
   14004c98a:	mov    esi,0x3f03d7ac
   14004c98f:	(bad)  
   14004c990:	rex.B loop 0x14004c98e
   14004c993:	adc    eax,0xf1856a11
   14004c998:	add    bh,ch
   14004c99a:	loope  0x14004c9d5
   14004c99c:	call   QWORD PTR [rip+0xffffffffd5aa7274]        # 0x115af3c16
   14004c9a2:	ss stos DWORD PTR es:[rdi],eax
   14004c9a4:	cdq    
   14004c9a5:	test   ebx,edx
   14004c9a7:	add    al,0xbe
   14004c9a9:	mov    BYTE PTR [rsi],cl
   14004c9ab:	and    BYTE PTR [rbx],ch
   14004c9ad:	push   0xffffffffffffffcb
   14004c9af:	adc    ch,BYTE PTR [rdi+rbp*8]
   14004c9b2:	stos   DWORD PTR es:[rdi],eax
   14004c9b3:	push   rbp
   14004c9b4:	(bad)  
   14004c9b5:	stos   DWORD PTR es:[rdi],eax
   14004c9b6:	out    dx,eax
   14004c9b7:	and    eax,0x1e0e5093
   14004c9bc:	rex.WRB cdqe 
   14004c9be:	push   rbp
   14004c9bf:	rex.W (bad) 
   14004c9c1:	test   al,0x30
   14004c9c3:	int    0xd5
   14004c9c5:	shl    bl,1
   14004c9c7:	mov    bh,0xc1
   14004c9c9:	fwait
   14004c9ca:	pop    rbp
   14004c9cb:	and    al,0x5a
   14004c9cd:	outs   dx,BYTE PTR ds:[rsi]
   14004c9ce:	cmp    DWORD PTR [rbx],0x77962cff
   14004c9d4:	imul   ebx,DWORD PTR [rsi+0x33792986],0xe
   14004c9db:	rex.WRX movabs rax,0x1914f943a3c8f589
   14004c9e5:	call   0x1028c219a
   14004c9ea:	(bad)  
   14004c9eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004c9ec:	xlat   BYTE PTR ds:[rbx]
   14004c9ed:	outs   dx,DWORD PTR ds:[rsi]
   14004c9ee:	xlat   BYTE PTR ds:[rbx]
   14004c9ef:	out    0xde,al
   14004c9f1:	cmp    DWORD PTR [rdi-0x7f99e899],0xa0e5e57c
   14004c9fb:	cmp    al,0x1
   14004c9fd:	mov    eax,0x3725e730
   14004ca02:	mov    ch,0x65
   14004ca04:	sahf   
   14004ca05:	adc    BYTE PTR [rcx],al
   14004ca07:	xchg   edi,eax
   14004ca08:	repnz retf 0x4107
   14004ca0c:	clc    
   14004ca0d:	cmp    al,0x5e
   14004ca0f:	xchg   ch,al
   14004ca11:	rex.XB mov WORD PTR [r15],fs
   14004ca14:	and    dl,BYTE PTR [rax*4-0x14228c8]
   14004ca1b:	or     eax,0xcd7caf3b
   14004ca20:	or     eax,0x1c1fe96f
   14004ca25:	cli    
   14004ca26:	mov    cl,0xaa
   14004ca28:	stos   BYTE PTR es:[rdi],al
   14004ca29:	out    dx,al
   14004ca2a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ca2b:	rol    BYTE PTR [rbx+rdx*8+0x2f],cl
   14004ca30:	xor    ebx,edi
   14004ca32:	test   al,0x11
   14004ca34:	sub    eax,DWORD PTR [rdx]
   14004ca36:	cmc    
   14004ca37:	jae    0x14004c9c8
   14004ca39:	hlt    
   14004ca3a:	pushf  
   14004ca3b:	jg     0x14004ca8a
   14004ca3d:	movabs al,ds:0x260c473bfac7c2a8
   14004ca46:	cmp    al,0xec
   14004ca48:	mov    al,0x49
   14004ca4a:	(bad)  
   14004ca4b:	mov    DWORD PTR [rip+0x4211e8fc],edx        # 0x18216b34d
   14004ca51:	enter  0x4984,0x31
   14004ca55:	pop    rax
   14004ca56:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ca57:	cmp    BYTE PTR [rsp+rdx*1],0xa8
   14004ca5b:	sbb    DWORD PTR [rbx+0x4ec0b0a],0x5d
   14004ca62:	add    DWORD PTR [rax],ebx
   14004ca64:	add    cl,dl
   14004ca66:	and    edi,DWORD PTR fs:[rcx]
   14004ca69:	scas   eax,DWORD PTR es:[rdi]
   14004ca6a:	rex
   14004ca6b:	fs (bad) 
   14004ca6e:	adc    al,BYTE PTR [rdx+rsi*8+0x248514f0]
   14004ca75:	cmp    dl,BYTE PTR [rsi]
   14004ca77:	out    0x6f,al
   14004ca79:	mov    edx,0xac52688f
   14004ca7e:	popf   
   14004ca7f:	(bad)  
   14004ca81:	sbb    DWORD PTR [rsi],ebp
   14004ca83:	mov    ecx,0xd35097f0
   14004ca88:	add    eax,0xde919edf
   14004ca8d:	pop    rbx
   14004ca8e:	mov    WORD PTR [rcx],ss
   14004ca90:	retf   
   14004ca91:	movsxd eax,DWORD PTR [rdi-0xf]
   14004ca94:	fs out dx,eax
   14004ca96:	jle    0x14004ca3c
   14004ca98:	mov    ebp,0xceac2057
   14004ca9d:	movabs ds:0x5bf894a68638e67f,eax
   14004caa6:	pop    rbp
   14004caa7:	add    al,0x37
   14004caa9:	imul   ecx,DWORD PTR [rax],0x56
   14004caac:	leave  
   14004caad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004caae:	ret    
   14004caaf:	(bad)  
   14004cab0:	shr    DWORD PTR [rax-0x75064b7e],0x44
   14004cab7:	or     dl,bl
   14004cab9:	out    0xcf,eax
   14004cabb:	cdq    
   14004cabc:	jg     0x14004ca72
   14004cabe:	or     al,0x1f
   14004cac0:	add    ch,dh
   14004cac2:	push   rdi
   14004cac3:	(bad)  
   14004cac4:	ja     0x14004ca7d
   14004cac6:	xor    DWORD PTR [rbx],ebp
   14004cac8:	(bad)  
   14004cac9:	jbe    0x14004cad3
   14004cacb:	push   0x21
   14004cacd:	fisttp QWORD PTR [rdx+0x1b]
   14004cad0:	cld    
   14004cad1:	xor    eax,0x7257cb
   14004cad6:	xchg   BYTE PTR [rax],bh
   14004cad8:	xor    ah,BYTE PTR [rcx]
   14004cada:	push   0xc1389cb
   14004cadf:	adc    eax,0x760770b0
   14004cae4:	(bad)  
   14004cae5:	xchg   esp,eax
   14004cae6:	mov    edi,0xcd00ab2f
   14004caeb:	add    BYTE PTR [rax-0x3048cdae],bl
   14004caf1:	fimul  DWORD PTR [rdi+riz*2-0xd26be95]
   14004caf8:	cli    
   14004caf9:	data16 loope 0x14004cb3c
   14004cafc:	sbb    ebx,DWORD PTR [rbx-0x553f7cca]
   14004cb02:	adc    al,0xc
   14004cb04:	and    eax,0x439273e6
   14004cb09:	jl     0x14004cb5e
   14004cb0b:	movs   BYTE PTR es:[rdi],BYTE PTR cs:[rsi]
   14004cb0d:	sub    eax,eax
   14004cb0f:	rex.RX or DWORD PTR [rcx+0x1a122108],r8d
   14004cb16:	or     eax,0x8068e5f9
   14004cb1b:	and    bl,BYTE PTR [rax+rax*1+0x40686370]
   14004cb22:	(bad)  
   14004cb23:	jp     0x14004caf8
   14004cb25:	adc    BYTE PTR [rdx-0x4d],cl
   14004cb28:	addr32 mov ds:0x2725d32f,eax
   14004cb2e:	rex.RX xchg ebp,eax
   14004cb30:	push   rax
   14004cb31:	mov    bh,0x17
   14004cb33:	int    0xdf
   14004cb35:	jmp    FWORD PTR [rcx]
   14004cb37:	mov    WORD PTR [rsi],ds
   14004cb39:	clc    
   14004cb3a:	jge    0x14004cb98
   14004cb3c:	mov    dl,BYTE PTR ss:[rdi+0xa90f178]
   14004cb43:	enter  0xe246,0x4d
   14004cb47:	out    dx,eax
   14004cb48:	sti    
   14004cb49:	movabs eax,ds:0xa7bac1fc3c1cf62b
   14004cb52:	out    0x83,eax
   14004cb54:	and    esi,eax
   14004cb56:	xlat   BYTE PTR ds:[rbx]
   14004cb57:	sti    
   14004cb58:	fs push rcx
   14004cb5a:	stc    
   14004cb5b:	icebp  
   14004cb5c:	push   rdx
   14004cb5d:	(bad)  
   14004cb5e:	add    dh,dh
   14004cb60:	(bad)  
   14004cb61:	mov    al,0x5f
   14004cb63:	jnp    0x14004cb3e
   14004cb65:	mov    BYTE PTR [rbx+0xa5f098b],al
   14004cb6b:	mov    bl,0xdd
   14004cb6d:	sub    al,0x97
   14004cb6f:	scas   eax,DWORD PTR es:[rdi]
   14004cb70:	rex.WRB shl QWORD PTR [r10],1
   14004cb73:	xchg   eax,ebp
   14004cb75:	jl     0x14004cbe7
   14004cb77:	add    ch,BYTE PTR [rcx-0xb]
   14004cb7a:	sbb    al,0x9c
   14004cb7c:	clc    
   14004cb7d:	movabs ds:0xa42f1f985dbb9ee0,eax
   14004cb86:	in     al,0x7
   14004cb88:	xor    ebp,DWORD PTR [rax]
   14004cb8a:	(bad)  
   14004cb8b:	pop    rdx
   14004cb8c:	test   BYTE PTR [rax+0x5e4202da],al
   14004cb92:	(bad)  
   14004cb93:	sbb    eax,0x93e6552d
   14004cb98:	fucom  st(0)
   14004cb9a:	data16 mov cl,0x93
   14004cb9d:	adc    esi,DWORD PTR [rsi]
   14004cb9f:	and    eax,0xc0b3712e
   14004cba4:	rex.RB
   14004cba5:	data16 sbb cl,cl
   14004cba8:	and    al,0x66
   14004cbaa:	mov    dh,0x23
   14004cbac:	xchg   ebx,eax
   14004cbad:	rex.RX not BYTE PTR [rbx-0x5cbeb16d]
   14004cbb4:	movabs eax,ds:0x6e7742b14194a7d2
   14004cbbd:	add    cl,bh
   14004cbbf:	sub    eax,0xfafe626f
   14004cbc4:	xlat   BYTE PTR ds:[rbx]
   14004cbc5:	and    DWORD PTR [rsi+rax*1-0x138e0663],esp
   14004cbcc:	sahf   
   14004cbcd:	cmp    al,0x86
   14004cbcf:	dec    cl
   14004cbd1:	xchg   ebx,eax
   14004cbd2:	mov    BYTE PTR [rbx],ch
   14004cbd4:	or     esi,DWORD PTR [rdx-0x26c8e04a]
   14004cbda:	fist   WORD PTR [rcx+rsi*8]
   14004cbdd:	(bad)  
   14004cbde:	rex.WX (bad) 
   14004cbe0:	push   rsi
   14004cbe1:	sub    ebx,DWORD PTR [rdi+0x26c8fe33]
   14004cbe7:	stos   BYTE PTR es:[rdi],al
   14004cbe8:	pop    rsi
   14004cbe9:	(bad)  
   14004cbea:	stos   DWORD PTR es:[rdi],eax
   14004cbeb:	fldenv [rdi]
   14004cbed:	xchg   r8d,eax
   14004cbef:	adc    al,0x23
   14004cbf1:	push   rdi
   14004cbf2:	mov    ch,0x6d
   14004cbf4:	adc    DWORD PTR [rax],ebx
   14004cbf6:	jae    0x14004cc0f
   14004cbf8:	cld    
   14004cbf9:	adc    DWORD PTR [rax-0x30cdcca2],edi
   14004cbff:	jle    0x14004cc28
   14004cc01:	(bad)
   14004cc05:	jb     0x14004cc11
   14004cc07:	jno    0x14004cbff
   14004cc09:	stc    
   14004cc0a:	mov    bl,0x12
   14004cc0c:	(bad)  
   14004cc0d:	mov    al,BYTE PTR [rbx-0x15ce13]
   14004cc13:	(bad)  
   14004cc14:	mov    edi,0xcfb1bf5b
   14004cc19:	ins    DWORD PTR es:[rdi],dx
   14004cc1a:	enter  0x7af5,0x51
   14004cc1e:	(bad)  
   14004cc1f:	cmp    eax,DWORD PTR [rcx-0x5ed14189]
   14004cc25:	outs   dx,DWORD PTR ds:[rsi]
   14004cc26:	xor    ah,BYTE PTR [rcx+0x7c]
   14004cc29:	test   BYTE PTR [rcx],cl
   14004cc2b:	enter  0x9fa4,0x22
   14004cc2f:	adc    eax,DWORD PTR [rsi-0x39490fe9]
   14004cc35:	sbb    bh,BYTE PTR [rsi-0x73]
   14004cc38:	ss test al,0x68
   14004cc3b:	mov    ch,0x33
   14004cc3d:	xor    eax,DWORD PTR [rbx]
   14004cc3f:	fs stos BYTE PTR es:[rdi],al
   14004cc41:	retf   0x86d2
   14004cc44:	cdq    
   14004cc45:	push   rax
   14004cc46:	(bad)  
   14004cc47:	movsxd ecx,ecx
   14004cc49:	jne    0x14004cc92
   14004cc4b:	shr    BYTE PTR [rdx],cl
   14004cc4d:	push   rbx
   14004cc4e:	fidiv  WORD PTR [rsi]
   14004cc50:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004cc51:	pop    rdx
   14004cc52:	fs mov dh,0x34
   14004cc55:	ins    BYTE PTR es:[rdi],dx
   14004cc56:	loope  0x14004cc1b
   14004cc58:	ja     0x14004ccba
   14004cc5a:	out    0x2d,al
   14004cc5c:	mov    edi,0x3ffecb8f
   14004cc61:	mov    ah,0xd7
   14004cc63:	(bad)  
   14004cc64:	mov    eax,0xc7755be0
   14004cc69:	jnp    0x14004ccea
   14004cc6b:	push   0x7d9ed0f7
   14004cc70:	(bad)  
   14004cc71:	div    dh
   14004cc73:	idiv   edi
   14004cc75:	xchg   ebx,eax
   14004cc76:	mov    edx,0x844ddfae
   14004cc7b:	std    
   14004cc7c:	jo     0x14004cccb
   14004cc7e:	imul   esi,DWORD PTR [rdi],0x4f
   14004cc81:	cli    
   14004cc82:	rex.WX and QWORD PTR [rsi+0x6c405e61],rdi
   14004cc89:	(bad)  
   14004cc8a:	in     eax,0x7
   14004cc8c:	add    eax,eax
   14004cc8e:	loope  0x14004cc23
   14004cc90:	rex.WR outs dx,BYTE PTR ds:[rsi]
   14004cc92:	cs (bad) 
   14004cc94:	xlat   BYTE PTR ds:[rbx]
   14004cc95:	out    dx,eax
   14004cc96:	ret    0x3f2c
   14004cc99:	sbb    ebp,DWORD PTR [rdx]
   14004cc9b:	sub    cl,0xfe
   14004cc9e:	jb     0x14004cc41
   14004cca0:	add    eax,0x7c3a3a7b
   14004cca5:	or     al,0x58
   14004cca7:	mov    edx,0xd9c57cb0
   14004ccac:	ins    DWORD PTR es:[rdi],dx
   14004ccad:	push   rax
   14004ccae:	(bad)  
   14004ccaf:	fisub  DWORD PTR [rax]
   14004ccb1:	movabs ds:0xed71a2666013eb6d,eax
   14004ccba:	(bad)  
   14004ccbb:	(bad)  
   14004ccbc:	jrcxz  0x14004ccd2
   14004ccbe:	xchg   esi,eax
   14004ccbf:	pop    rdx
   14004ccc0:	(bad)
   14004ccc4:	(bad)  
   14004ccc5:	xchg   ebx,eax
   14004ccc6:	retf   
   14004ccc7:	(bad)  
   14004ccc8:	sub    eax,0x5abf03cf
   14004cccd:	mov    bh,0x36
   14004cccf:	vhaddpd xmm8,xmm0,XMMWORD PTR [rdx+0x45b0309a]
   14004ccd7:	xor    dh,BYTE PTR [rsi-0x14fb9f6e]
   14004ccdd:	add    DWORD PTR [rax+0x21],eax
   14004cce0:	and    ch,BYTE PTR [rsi+rbp*4-0x1f]
   14004cce4:	(bad)  
   14004cce5:	leave  
   14004cce6:	jrcxz  0x14004cd00
   14004cce8:	mov    ebp,0xdec436ec
   14004cced:	add    eax,edx
   14004ccef:	in     al,dx
   14004ccf0:	rex.WB in al,dx
   14004ccf2:	pushf  
   14004ccf3:	cmp    DWORD PTR [rsi+0x58067fd0],ebp
   14004ccf9:	pop    rbx
   14004ccfa:	xchg   edx,eax
   14004ccfb:	mov    ch,0xff
   14004ccfd:	(bad)  
   14004ccfe:	xor    DWORD PTR [rsi+0x19],ebp
   14004cd01:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004cd02:	sbb    dl,dl
   14004cd04:	(bad)  
   14004cd05:	mov    ebx,0x23c3f166
   14004cd0a:	sbb    dl,BYTE PTR [rsp+rdx*4-0x6d]
   14004cd0e:	jle    0x14004cd7c
   14004cd10:	test   eax,0xe6e8536f
   14004cd15:	repnz mov BYTE PTR [rcx+0x24eb162a],dl
   14004cd1c:	push   0x2b
   14004cd1e:	or     bl,ch
   14004cd20:	pop    rdi
   14004cd21:	xchg   esi,eax
   14004cd22:	(bad)  
   14004cd23:	shl    BYTE PTR [rdi+0x6c],cl
   14004cd26:	in     al,dx
   14004cd27:	jg     0x14004cce7
   14004cd29:	cmp    eax,0xd87188b4
   14004cd2e:	pop    rsp
   14004cd2f:	scas   ax,WORD PTR es:[rdi]
   14004cd31:	(bad)  
   14004cd32:	and    esi,DWORD PTR [rbp+0x9]
   14004cd35:	jb     0x14004cd0b
   14004cd37:	rex xchg ebx,eax
   14004cd39:	mov    ?,WORD PTR [rdi+rdi*8+0x4c]
   14004cd3d:	and    dh,BYTE PTR [rdx]
   14004cd3f:	loopne 0x14004cd10
   14004cd41:	faddp  st(5),st
   14004cd43:	ror    DWORD PTR [rsi-0x628c0d79],1
   14004cd49:	movsxd esp,DWORD PTR [rax-0x4b261cd4]
   14004cd4f:	retf   0x1908
   14004cd52:	imul   esi,DWORD PTR [r11],0xffffffae
   14004cd56:	and    eax,0xc51b367c
   14004cd5b:	repnz (bad) 
   14004cd5d:	call   0x1a3fe6e24
   14004cd62:	cmp    BYTE PTR [rcx+0x64],dl
   14004cd65:	rex.WRX movabs rbp,0x8ac8ca224204371e
   14004cd6f:	sbb    BYTE PTR [rcx],ah
   14004cd71:	xor    BYTE PTR [rdx-0x2318fa5a],dl
   14004cd77:	adc    bl,cl
   14004cd79:	adc    esp,DWORD PTR [rax]
   14004cd7b:	(bad)  
   14004cd7c:	(bad)  
   14004cd7d:	mov    bl,0xe7
   14004cd7f:	out    dx,al
   14004cd80:	fist   DWORD PTR [rsi]
   14004cd82:	mov    ebp,0xd8c1d723
   14004cd87:	ret    
   14004cd88:	jmp    0x14004cd79
   14004cd8a:	add    esp,ecx
   14004cd8c:	movabs ds:0xb641747356f92ec8,eax
   14004cd95:	mov    al,0xef
   14004cd97:	mov    dl,0x2b
   14004cd99:	jle    0x14004ce11
   14004cd9b:	(bad)  
   14004cd9c:	js     0x14004cd96
   14004cd9e:	xchg   ebx,eax
   14004cd9f:	mov    cl,0xee
   14004cda1:	cld    
   14004cda2:	add    al,0x13
   14004cda4:	in     eax,dx
   14004cda5:	outs   dx,DWORD PTR ds:[rsi]
   14004cda6:	pop    rax
   14004cda7:	xchg   edx,eax
   14004cda8:	sub    ebx,DWORD PTR [rdx]
   14004cdaa:	mov    dh,0x3f
   14004cdac:	movabs al,ds:0x6442a4dd01268ccb
   14004cdb5:	movabs ds:0xadfcb663d4d2cfec,eax
   14004cdbe:	out    dx,al
   14004cdbf:	(bad)  [rsi-0x51]
   14004cdc2:	fs scas al,BYTE PTR es:[rdi]
   14004cdc4:	sub    BYTE PTR [rbx+0x11],0xbf
   14004cdc8:	mul    DWORD PTR [rdx+rax*2-0xbdcdb2e]
   14004cdcf:	add    al,0x88
   14004cdd1:	or     edx,ecx
   14004cdd3:	(bad)
   14004cdd8:	call   0x1373681a0
   14004cddd:	add    eax,0xffffff95
   14004cde0:	scas   al,BYTE PTR es:[rdi]
   14004cde1:	sahf   
   14004cde2:	(bad)  
   14004cde3:	xchg   esp,eax
   14004cde4:	adc    esi,DWORD PTR [rdx+0x16]
   14004cde7:	push   rdi
   14004cde8:	or     DWORD PTR [rdx+rbx*2+0x64],0x629943a4
   14004cdf0:	push   rsp
   14004cdf1:	or     ah,BYTE PTR [rcx+0x150dd6a7]
   14004cdf7:	jns    0x14004cdde
   14004cdf9:	jbe    0x14004cdda
   14004cdfb:	jo     0x14004ce5a
   14004cdfd:	call   0xe8339b2c
   14004ce02:	xchg   ebp,eax
   14004ce03:	in     eax,dx
   14004ce04:	pop    rax
   14004ce05:	adc    BYTE PTR [rdi],0xfb
   14004ce08:	(bad)  
   14004ce09:	push   rax
   14004ce0a:	(bad)
   14004ce0e:	js     0x14004ce7e
   14004ce10:	clc    
   14004ce11:	jb     0x14004cde3
   14004ce13:	out    dx,al
   14004ce14:	rex.WXB
   14004ce15:	sub    esi,r11d
   14004ce18:	fdiv   DWORD PTR [rcx]
   14004ce1a:	ja     0x14004ce78
   14004ce1c:	(bad)  
   14004ce1d:	(bad)  
   14004ce1e:	jae    0x14004cdb3
   14004ce20:	or     BYTE PTR [rbx+0xeb3404b],ch
   14004ce26:	imul   ebx,DWORD PTR [rcx+rbp*1+0x7],0xffffffb3
   14004ce2b:	adc    eax,0x47ea057d
   14004ce30:	xchg   BYTE PTR [rsi-0x7],dh
   14004ce33:	loope  0x14004ce81
   14004ce35:	cld    
   14004ce36:	movabs eax,ds:0xb8dbaadd9017e78c
   14004ce3f:	mov    ah,0x60
   14004ce41:	pop    rcx
   14004ce42:	test   al,0x49
   14004ce44:	adc    eax,0x7f5ba
   14004ce49:	push   rax
   14004ce4a:	sub    al,0xff
   14004ce4c:	rex.RB scas al,BYTE PTR es:[rdi]
   14004ce4e:	enter  0xc3ac,0x52
   14004ce52:	(bad)  
   14004ce53:	add    dh,BYTE PTR [rsi+rcx*1]
   14004ce56:	rol    esi,0x8b
   14004ce59:	xchg   ecx,eax
   14004ce5a:	jnp    0x14004ce5c
   14004ce5c:	data16 mov bh,0xc1
   14004ce5f:	(bad)  
   14004ce60:	fimul  WORD PTR [rdi-0x15eff0f7]
   14004ce66:	leave  
   14004ce67:	fadd   DWORD PTR [rbx+0x71]
   14004ce6a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ce6b:	rex.WR mov dil,0x96
   14004ce6e:	jo     0x14004ce0f
   14004ce70:	jmp    0x1011ebda8
   14004ce75:	test   ah,0xb
   14004ce78:	repz ret 
   14004ce7a:	pop    rcx
   14004ce7b:	cmp    DWORD PTR [rbp+0x64f90155],esi
   14004ce81:	jne    0x14004ce92
   14004ce83:	movabs al,ds:0x4e0de441d5662e40
   14004ce8c:	fucomp st(0)
   14004ce8e:	xchg   ebp,eax
   14004ce8f:	mul    DWORD PTR [rsi-0x31]
   14004ce92:	(bad)  
   14004ce93:	loopne 0x14004ced3
   14004ce95:	ds stc 
   14004ce97:	add    esp,esi
   14004ce99:	not    DWORD PTR [rax+0x45]
   14004ce9c:	push   ax
   14004ce9e:	mov    cl,0x78
   14004cea0:	out    0xa6,al
   14004cea2:	popf   
   14004cea3:	or     DWORD PTR [rsi+rbx*2+0x5faef74],eax
   14004ceaa:	jp     0x14004ce9a
   14004ceac:	jb     0x14004cf12
   14004ceae:	xlat   BYTE PTR ds:[rbx]
   14004ceaf:	pushf  
   14004ceb0:	or     ah,BYTE PTR [rdx-0x1e927d02]
   14004ceb6:	fsub   st,st(3)
   14004ceb8:	(bad)  
   14004ceb9:	(bad)  
   14004ceba:	inc    dh
   14004cebc:	(bad)  
   14004cebe:	outs   dx,DWORD PTR ds:[rsi]
   14004cebf:	xor    DWORD PTR [rax-0x2ecdded4],0x4aa88a84
   14004cec9:	(bad)  
   14004ceca:	es (bad) 
   14004cecd:	add    DWORD PTR fs:[rbx+rbx*1+0x0],esp
   14004ced2:	mov    ebp,0x74e70673
   14004ced7:	pop    rbp
   14004ced8:	jg     0x14004ce92
   14004ceda:	pop    rcx
   14004cedb:	jne    0x14004ce76
   14004cedd:	jmp    rbp
   14004cedf:	(bad)  
   14004cee0:	retf   
   14004cee1:	(bad)
   14004cee5:	mov    ecx,DWORD PTR [rcx-0x56]
   14004cee8:	mov    esi,0xcd1585bb
   14004ceed:	(bad)  
   14004ceee:	xchg   esp,eax
   14004ceef:	lock iret 
   14004cef1:	and    BYTE PTR [rsi],dl
   14004cef3:	rex.B jle 0x14004ce92
   14004cef6:	or     al,BYTE PTR [rcx]
   14004cef8:	mov    ch,0x56
   14004cefa:	fdiv   QWORD PTR [rsi+0x79]
   14004cefd:	out    0x52,al
   14004ceff:	add    al,0x3f
   14004cf01:	mov    bh,0x41
   14004cf03:	jge    0x14004cebd
   14004cf05:	cmc    
   14004cf06:	ja     0x14004cf24
   14004cf08:	(bad)  
   14004cf0a:	xchg   edx,eax
   14004cf0b:	mov    ch,0x48
   14004cf0d:	jno    0x14004cf5e
   14004cf0f:	(bad)
   14004cf12:	jne    0x14004ceb4
   14004cf14:	std    
   14004cf15:	push   rbx
   14004cf16:	rex.WR outs dx,BYTE PTR ds:[rsi]
   14004cf18:	lock (bad) 
   14004cf1a:	test   DWORD PTR [rdi+0x1ad9f7f3],0x63554211
   14004cf24:	jae    0x14004cf8c
   14004cf26:	sbb    al,0xcf
   14004cf28:	ss sbb eax,0xd7e1f2c
   14004cf2e:	(bad)  
   14004cf2f:	ja     0x14004cf4e
   14004cf31:	cmp    eax,0x32312773
   14004cf36:	xor    eax,0x71e9de86
   14004cf3b:	test   ch,ah
   14004cf3d:	jns    0x14004cf0f
   14004cf3f:	out    0xa,al
   14004cf41:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004cf42:	mov    ecx,0x15606ba8
   14004cf47:	outs   dx,BYTE PTR ds:[rsi]
   14004cf48:	not    BYTE PTR [rsi]
   14004cf4a:	fist   WORD PTR [rsp]
   14004cf4d:	in     eax,0x57
   14004cf4f:	sub    al,BYTE PTR [rax]
   14004cf51:	movabs eax,ds:0x73dbfa02bebb7cf1
   14004cf5a:	jrcxz  0x14004cfd8
   14004cf5c:	leave  
   14004cf5d:	in     ax,0x3
   14004cf60:	(bad)  
   14004cf61:	add    ch,BYTE PTR [rdx-0x42]
   14004cf64:	lods   eax,DWORD PTR ds:[rsi]
   14004cf65:	retf   
   14004cf66:	push   rcx
   14004cf67:	add    edi,esp
   14004cf69:	(bad)  
   14004cf6a:	mov    ecx,0x5de56602
   14004cf6f:	xchg   edx,eax
   14004cf70:	rep outs dx,DWORD PTR ds:[rsi]
   14004cf72:	in     eax,dx
   14004cf73:	ja     0x14004cf6f
   14004cf75:	cdq    
   14004cf76:	out    0x5d,eax
   14004cf78:	sbb    BYTE PTR [rdx+0x32860f28],bl
   14004cf7e:	fdivr  QWORD PTR [rbx+0x75db6ac5]
   14004cf84:	sbb    ecx,edx
   14004cf86:	mov    dl,0x11
   14004cf88:	jno    0x14004cf33
   14004cf8a:	(bad)  
   14004cf8b:	xchg   esp,eax
   14004cf8c:	outs   dx,BYTE PTR ds:[rsi]
   14004cf8d:	gs jle 0x14004cf5c
   14004cf90:	(bad)
   14004cf93:	xchg   ecx,eax
   14004cf94:	test   al,0xbf
   14004cf96:	movabs al,ds:0x554e2a0d257007f2
   14004cf9f:	nop
   14004cfa0:	(bad)  
   14004cfa1:	in     eax,0xfd
   14004cfa3:	mov    eax,0x43fad4bb
   14004cfa8:	movabs al,ds:0x5b3f3efec25321cd
   14004cfb2:	jae    0x14004cfee
   14004cfb4:	fcmovnb st,st(4)
   14004cfb6:	(bad)  
   14004cfb7:	frndint 
   14004cfb9:	(bad)  [rcx+0x1b]
   14004cfbc:	iret   
   14004cfbd:	mov    ebp,0x7802a51f
   14004cfc2:	or     DWORD PTR [rsi+0x577d7a78],esi
   14004cfc8:	jp     0x14004cfb4
   14004cfca:	fcmovnu st,st(7)
   14004cfcc:	cli    
   14004cfcd:	(bad)  
   14004cfce:	sahf   
   14004cfcf:	ret    
   14004cfd0:	xchg   DWORD PTR [rdi-0xfcfcc2d],edi
   14004cfd6:	(bad)  
   14004cfd7:	adc    bl,ah
   14004cfd9:	jle    0x14004cf98
   14004cfdb:	rex.X xlat BYTE PTR ds:[rbx]
   14004cfdd:	movabs al,ds:0xf9159b069b45b4c
   14004cfe6:	fs jrcxz 0x14004d03c
   14004cfe9:	ds fcmovnbe st,st(2)
   14004cfec:	push   rdx
   14004cfed:	xchg   edi,eax
   14004cfee:	adc    BYTE PTR [rsi+rdi*2-0x36],cl
   14004cff2:	rex.WRX xor BYTE PTR [rcx-0x30],r15b
   14004cff6:	int    0x14
   14004cff8:	mov    DWORD PTR [rcx+0x65e1303e],edx
   14004cffe:	and    eax,0x45619102
   14004d003:	and    dl,BYTE PTR [r10-0xf]
   14004d007:	fimul  WORD PTR [rdi+0x7]
   14004d00a:	jb     0x14004d011
   14004d00c:	(bad)  
   14004d00d:	sub    eax,0x484041c1
   14004d012:	(bad)  
   14004d013:	(bad)  
   14004d014:	sti    
   14004d015:	rex.RB push 0xffffffffffffff87
   14004d018:	pop    rsp
   14004d019:	mov    edi,0xe5ab24cc
   14004d01e:	mov    al,0xc5
   14004d020:	mov    BYTE PTR [rbx-0x13ca74a1],dl
   14004d026:	xor    ecx,DWORD PTR [rbx+0x76ff8505]
   14004d02c:	jle    0x14004d067
   14004d02e:	xchg   edi,eax
   14004d02f:	xor    al,0xf8
   14004d031:	int3   
   14004d032:	rex.WX and al,0x65
   14004d035:	rex.RX popf 
   14004d037:	int3   
   14004d038:	jo     0x14004d01e
   14004d03a:	(bad)  
   14004d03b:	(bad)  
   14004d03c:	mov    BYTE PTR [rax],dl
   14004d03e:	xlat   BYTE PTR ds:[rbx]
   14004d03f:	push   rdi
   14004d040:	xor    BYTE PTR [rdx-0x1e],bh
   14004d043:	cmp    BYTE PTR [rsi+0x2f],al
   14004d046:	mov    ebx,0x4eff5505
   14004d04b:	rcr    ah,1
   14004d04d:	cmp    BYTE PTR [rsi-0x63],dh
   14004d050:	jle    0x14004d068
   14004d052:	ret    
   14004d053:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d054:	mov    fs,WORD PTR [rax-0x4f7ac662]
   14004d05a:	mov    dl,0x0
   14004d05c:	rex.WRX imul r14,QWORD PTR [rax],0xffffffffffffffe5
   14004d060:	fs add al,0x59
   14004d063:	rex.WRB loop 0x14004d061
   14004d066:	ja     0x14004d000
   14004d068:	xchg   ebp,eax
   14004d069:	add    ecx,DWORD PTR [rax+0xe]
   14004d06c:	std    
   14004d06d:	sub    ecx,ebp
   14004d06f:	(bad)  
   14004d071:	(bad)  
   14004d072:	jg     0x14004d029
   14004d074:	pop    rsi
   14004d075:	add    eax,edx
   14004d077:	nop
   14004d078:	xchg   esi,eax
   14004d079:	out    0xe4,al
   14004d07b:	and    esp,DWORD PTR [rdi-0x1b]
   14004d07e:	rex.RB mov r13b,0xf8
   14004d081:	xchg   edx,eax
   14004d082:	out    dx,eax
   14004d083:	outs   dx,DWORD PTR ds:[rsi]
   14004d084:	ret    0x6e4f
   14004d087:	icebp  
   14004d088:	lods   eax,DWORD PTR ds:[rsi]
   14004d089:	ret    0x862f
   14004d08c:	sub    BYTE PTR [rax+0x11d6c1ca],0x8c
   14004d093:	xchg   ecx,eax
   14004d094:	adc    BYTE PTR [rdx+0x40],ah
   14004d097:	mov    BYTE PTR [rdx+rbp*1-0x571b3f8],al
   14004d09e:	fwait
   14004d09f:	adc    BYTE PTR [rcx-0x7b2c4098],al
   14004d0a5:	(bad)  
   14004d0a6:	sub    al,BYTE PTR [rsp+rax*4]
   14004d0a9:	or     BYTE PTR [rax+rbp*1-0x6573a53c],al
   14004d0b0:	(bad)  
   14004d0b1:	or     eax,DWORD PTR [rdx]
   14004d0b3:	je     0x14004d03e
   14004d0b5:	cs adc ah,dl
   14004d0b8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d0b9:	rex.RXB mov cs,WORD PTR [rip+0xffffffffdd16e712]        # 0x11d1bb7d2
   14004d0c0:	pop    rcx
   14004d0c1:	fwait
   14004d0c2:	mov    ch,0xe6
   14004d0c4:	(bad)  
   14004d0c5:	lock rol DWORD PTR [rbp-0x4fa39081],0xa1
   14004d0cd:	sub    BYTE PTR [rcx+rdx*4-0x58],0xd
   14004d0d2:	retf   
   14004d0d3:	ins    BYTE PTR es:[rdi],dx
   14004d0d4:	ins    DWORD PTR es:[rdi],dx
   14004d0d5:	rex.B lahf 
   14004d0d7:	sar    DWORD PTR [eip+0xffffffff9ef96670],0x13        # 0xdefe374f
   14004d0df:	sti    
   14004d0e0:	imul   eax,DWORD PTR [rax+0x7b],0xffffffbe
   14004d0e4:	(bad)  
   14004d0e5:	rex.RX lods eax,DWORD PTR ds:[rsi]
   14004d0e7:	and    eax,0x74ef8214
   14004d0ec:	out    dx,al
   14004d0ed:	out    0x2f,eax
   14004d0ef:	repz rex.WR retf 0x9893
   14004d0f4:	or     BYTE PTR [rbp+0x3715004c],al
   14004d0fa:	jge    0x14004d10b
   14004d0fc:	shr    BYTE PTR [rsi+0x63a0cd8f],1
   14004d102:	test   eax,0x7f18cc1
   14004d107:	retf   
   14004d108:	xor    edi,DWORD PTR [rax+rbp*8+0x689a234d]
   14004d10f:	mov    esi,0xfe7bb1f2
   14004d114:	cli    
   14004d115:	ror    edi,0x7e
   14004d118:	cli    
   14004d119:	(bad)  
   14004d11a:	xlat   BYTE PTR ds:[rbx]
   14004d11b:	push   rsi
   14004d11c:	push   rsi
   14004d11d:	inc    BYTE PTR [rdx+rax*2-0x2a54e1b8]
   14004d124:	shl    DWORD PTR [rdi+0x42],0xfe
   14004d128:	movsxd esi,esi
   14004d12a:	(bad)  
   14004d12b:	sahf   
   14004d12c:	adc    cl,BYTE PTR [rbp+rdx*4-0x71]
   14004d130:	mov    esp,0x91f37e14
   14004d135:	pop    rbp
   14004d136:	enter  0x7add,0xcb
   14004d13a:	sub    DWORD PTR [rax-0x48],0xfffffffc
   14004d13e:	pop    rbp
   14004d13f:	or     ebp,ecx
   14004d141:	mov    dl,0x30
   14004d143:	outs   dx,DWORD PTR ds:[rsi]
   14004d144:	test   DWORD PTR [rbp-0x22],ebp
   14004d147:	rex.WR
   14004d148:	rex.X lahf 
   14004d14a:	pop    rdx
   14004d14b:	cmp    esp,ebp
   14004d14d:	(bad)  
   14004d14e:	sbb    edx,edx
   14004d150:	jmp    0x140823f44
   14004d155:	leave  
   14004d156:	adc    ecx,eax
   14004d158:	mov    ebx,0x90320a10
   14004d15d:	jae    0x14004d145
   14004d15f:	sahf   
   14004d160:	pop    rcx
   14004d161:	and    DWORD PTR [rdx-0x40475232],0x3ba4337c
   14004d16b:	cli    
   14004d16c:	(bad)  [rbp+0x59]
   14004d16f:	(bad)  
   14004d170:	or     ch,al
   14004d172:	push   rbx
   14004d173:	popf   
   14004d174:	repz (bad) 
   14004d176:	sub    bh,ah
   14004d178:	add    DWORD PTR [rip+0xffffffffc7e3b301],edx        # 0x107e8847f
   14004d17e:	jno    0x14004d1e4
   14004d180:	iret   
   14004d181:	(bad)  
   14004d182:	shl    al,0x1e
   14004d185:	(bad)  
   14004d186:	imul   eax,DWORD PTR [rsi],0xb147a73b
   14004d18c:	jae    0x14004d200
   14004d18e:	adc    al,0xd5
   14004d190:	mov    WORD PTR [rsi+0x54d69bea],gs
   14004d196:	and    DWORD PTR [rbp-0x22],esp
   14004d199:	mov    edx,0x50115002
   14004d19e:	rex.XB movsxd edi,r14d
   14004d1a1:	sub    bh,ah
   14004d1a3:	in     eax,0xea
   14004d1a5:	mov    esi,0xf84d548e
   14004d1aa:	in     eax,dx
   14004d1ab:	(bad)  
   14004d1ac:	adc    QWORD PTR [r9-0x441d1ec1],rax
   14004d1b3:	and    BYTE PTR [rbx+0x60],ah
   14004d1b6:	cli    
   14004d1b7:	fcompp 
   14004d1b9:	movabs al,ds:0x2db606052b23b2d2
   14004d1c2:	and    DWORD PTR [rsi+0x3e],edx
   14004d1c5:	sub    DWORD PTR [rdx],ebp
   14004d1c7:	xchg   esp,eax
   14004d1c8:	lods   eax,DWORD PTR ds:[rsi]
   14004d1c9:	popf   
   14004d1ca:	shr    DWORD PTR [rip+0xffffffffcc40816d],cl        # 0x10c45533d
   14004d1d0:	pop    rsp
   14004d1d1:	jb     0x14004d20c
   14004d1d3:	cmp    DWORD PTR [rax],eax
   14004d1d5:	adc    bh,ah
   14004d1d7:	movsxd ebp,DWORD PTR [rbp+0x19]
   14004d1da:	loopne 0x14004d249
   14004d1dc:	adc    ebp,DWORD PTR [rdi+0xbf90e04]
   14004d1e2:	cmp    DWORD PTR [rcx-0x4101ac73],edx
   14004d1e8:	push   rax
   14004d1e9:	sbb    ah,BYTE PTR [rip+0x4491436a]        # 0x184961559
   14004d1ef:	push   rsi
   14004d1f0:	(bad)  
   14004d1f1:	jmp    0xd7f62dab
   14004d1f6:	movabs ds:0xf5858159e0646403,eax
   14004d1ff:	xchg   edi,eax
   14004d200:	shl    DWORD PTR [rdx+0x2b],cl
   14004d203:	mov    ss,WORD PTR [rdi+0x3e]
   14004d206:	jns    0x14004d19b
   14004d208:	mov    cl,0x32
   14004d20a:	or     ah,BYTE PTR [rdx+0x4a]
   14004d20d:	stos   BYTE PTR es:[rdi],al
   14004d20e:	rex.RX mov edx,0xd8e9a7f1
   14004d214:	rex.WRB js 0x14004d220
   14004d217:	fld    QWORD PTR [rax]
   14004d219:	push   rbx
   14004d21a:	add    BYTE PTR [rbx+0x3f8e3600],bl
   14004d220:	icebp  
   14004d221:	(bad)  
   14004d222:	adc    esi,edi
   14004d224:	std    
   14004d225:	out    dx,al
   14004d226:	xchg   edi,edi
   14004d228:	out    0xc9,eax
   14004d22a:	jrcxz  0x14004d1cf
   14004d22c:	mov    edi,0xc776edd8
   14004d231:	int    0x2f
   14004d233:	mov    bh,0xb2
   14004d235:	pop    rbp
   14004d236:	loope  0x14004d1ff
   14004d238:	fidiv  DWORD PTR [rcx+0x5a]
   14004d23b:	sbb    eax,eax
   14004d23d:	cmp    al,0x1
   14004d23f:	pop    rdx
   14004d240:	outs   dx,BYTE PTR ds:[rsi]
   14004d241:	sub    DWORD PTR [rdx-0x3c17a323],0xffffffa2
   14004d248:	cmp    eax,0x6f90cc81
   14004d24d:	adc    DWORD PTR [rbx+rcx*1-0x3b],ebx
   14004d251:	xchg   ebx,eax
   14004d252:	ds mov eax,0x98fa7f02
   14004d258:	pop    rbx
   14004d259:	stos   BYTE PTR es:[rdi],al
   14004d25a:	mov    cl,0xbb
   14004d25c:	or     ch,BYTE PTR [rcx]
   14004d25e:	movabs ds:0x6c9ba0eca3363901,eax
   14004d267:	shl    BYTE PTR [rbx+0x5c3b054e],cl
   14004d26d:	(bad)  
   14004d26e:	ror    DWORD PTR [rbp+0x5d],0x98
   14004d272:	and    DWORD PTR [rbx],0xffffffd6
   14004d275:	pop    rsp
   14004d276:	out    dx,al
   14004d277:	test   al,0x38
   14004d279:	jge    0x14004d239
   14004d27b:	(bad)  
   14004d27c:	rex.WRB
   14004d27d:	repz xor eax,0x4527d886
   14004d283:	movabs eax,ds:0x4159f5d64ee7c78
   14004d28c:	or     BYTE PTR [rcx],ah
   14004d28e:	push   rsi
   14004d28f:	pop    rax
   14004d290:	popf   
   14004d291:	cmp    BYTE PTR [rcx+0x6c21eaa7],cl
   14004d297:	in     al,dx
   14004d298:	mov    edi,0x57d7116
   14004d29d:	mov    ebp,0x3c31c733
   14004d2a2:	jge    0x14004d2a6
   14004d2a4:	cmp    eax,0x9710a733
   14004d2a9:	out    0x81,eax
   14004d2ab:	int    0x15
   14004d2ad:	pop    rcx
   14004d2ae:	pop    rbp
   14004d2af:	cwde   
   14004d2b0:	sub    al,0xad
   14004d2b2:	rex.WX sub al,0xb5
   14004d2b5:	nop
   14004d2b6:	jnp    0x14004d2a4
   14004d2b8:	stos   DWORD PTR es:[rdi],eax
   14004d2b9:	sti    
   14004d2ba:	or     BYTE PTR [rdx+0x48fffa91],cl
   14004d2c0:	fsub   st,st(2)
   14004d2c2:	neg    ebx
   14004d2c4:	mov    ch,0xa8
   14004d2c6:	add    eax,0x46781525
   14004d2cb:	cs in  al,dx
   14004d2cd:	mov    cl,0x31
   14004d2cf:	fs fcmovne st,st(7)
   14004d2d2:	rex.RXB (bad) 
   14004d2d4:	pop    rbp
   14004d2d5:	add    al,0xa
   14004d2d7:	and    eax,0x64679062
   14004d2dc:	loope  0x14004d29b
   14004d2de:	push   rsi
   14004d2df:	or     BYTE PTR [rcx-0x747f2c70],dl
   14004d2e5:	and    al,0x99
   14004d2e7:	ss jl  0x14004d350
   14004d2ea:	mov    cl,0xd4
   14004d2ec:	es rex.R not spl
   14004d2f0:	pop    rsp
   14004d2f1:	stc    
   14004d2f2:	sub    cl,BYTE PTR [rdi+0x53]
   14004d2f5:	rex.RX movsxd r9d,DWORD PTR [rdx]
   14004d2f8:	out    dx,al
   14004d2f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d2fa:	ins    DWORD PTR es:[rdi],dx
   14004d2fb:	outs   dx,BYTE PTR ds:[rsi]
   14004d2fc:	repnz fadd QWORD PTR [rax]
   14004d2ff:	int3   
   14004d300:	sbb    dl,BYTE PTR [rdi-0xc37a2f7]
   14004d306:	mov    edx,?
   14004d308:	pop    rax
   14004d309:	out    0xdf,eax
   14004d30b:	push   0x4a
   14004d30d:	mov    dh,0x9
   14004d30f:	jp     0x14004d2fc
   14004d311:	(bad)  
   14004d312:	pop    rcx
   14004d313:	or     eax,0x37e6b38
   14004d318:	stc    
   14004d319:	xor    eax,0x64885202
   14004d31e:	sub    eax,0x99b945d0
   14004d323:	jne    0x14004d2ee
   14004d325:	mul    ebp
   14004d327:	and    DWORD PTR [rcx+0x1d],ecx
   14004d32a:	jmp    FWORD PTR [rip+0x5db2580]        # 0x145dff8b0
   14004d330:	mov    dl,0xe3
   14004d332:	ret    
   14004d333:	stos   BYTE PTR es:[rdi],al
   14004d334:	sub    bl,bh
   14004d336:	cs jrcxz 0x14004d30e
   14004d339:	mov    ebx,0x17752391
   14004d33e:	push   rsp
   14004d33f:	clc    
   14004d340:	sub    DWORD PTR [rip+0x1ac0000a],0xdcafd580        # 0x15ac4d354
   14004d34a:	sti    
   14004d34b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d34c:	(bad)  
   14004d34d:	jnp    0x14004d349
   14004d34f:	fcmovnu st,st(7)
   14004d351:	cli    
   14004d352:	icebp  
   14004d353:	cmc    
   14004d354:	mov    ch,0xd5
   14004d356:	iret   
   14004d357:	(bad)  [rbx-0x4f466c31]
   14004d35d:	ret    0xa7f6
   14004d360:	(bad)  
   14004d361:	(bad)  
   14004d362:	mov    ch,0x5c
   14004d364:	(bad)  
   14004d365:	imul   eax,ebp,0xc2853765
   14004d36b:	mov    dl,0x93
   14004d36d:	in     eax,0xb
   14004d36f:	fs lahf 
   14004d371:	fstp   st(3)
   14004d373:	rex.XB stc 
   14004d375:	jae    0x14004d341
   14004d377:	in     al,dx
   14004d378:	ds (bad) 
   14004d37a:	mov    edi,0x3790d7cd
   14004d37f:	loop   0x14004d3e5
   14004d381:	rex.W int3 
   14004d383:	add    eax,0x99ee0dc
   14004d388:	mov    dh,0xfd
   14004d38a:	ds (bad) 
   14004d38c:	mov    ebx,eax
   14004d38e:	mov    ebx,0x5e873383
   14004d393:	jbe    0x14004d3a3
   14004d395:	cmp    DWORD PTR [rbx+0x6d],0xd27da32e
   14004d39c:	push   rdx
   14004d39d:	mov    ah,0xd1
   14004d39f:	push   rdx
   14004d3a0:	(bad)  
   14004d3a1:	and    eax,0x9a5805c1
   14004d3a6:	imul   ecx,DWORD PTR [rbx],0x420000e2
   14004d3ac:	mov    WORD PTR [rax+0xb],cs
   14004d3af:	xor    edi,DWORD PTR [rax+0x66]
   14004d3b2:	imul   ebx,DWORD PTR [rip+0x5abc97f3],0x29c2fb60        # 0x19ac16baf
   14004d3bc:	or     al,0xcf
   14004d3be:	sahf   
   14004d3bf:	rex fild WORD PTR [rsi+0x663b3b]
   14004d3c6:	add    BYTE PTR [rax],ah
   14004d3c8:	add    BYTE PTR [rcx+0x44],cl
   14004d3cb:	push   r12
   14004d3cd:	hlt    
   14004d3ce:	rex.WB jmp 0x142b693c1
   14004d3d4:	out    0x4d,al
   14004d3d6:	stc    
   14004d3d7:	cdq    
   14004d3d8:	ds int3 
   14004d3da:	nop
   14004d3db:	enter  0xf87b,0x57
   14004d3df:	sub    DWORD PTR [rdi],ebp
   14004d3e1:	out    dx,al
   14004d3e2:	rcr    DWORD PTR [rdx-0x22],1
   14004d3e5:	mov    esi,DWORD PTR [rdx-0x2523d57f]
   14004d3eb:	ins    BYTE PTR es:[rdi],dx
   14004d3ec:	ins    DWORD PTR es:[rdi],dx
   14004d3ed:	hlt    
   14004d3ee:	cmp    cl,BYTE PTR [rcx*4-0x4efbe94b]
   14004d3f5:	out    0x4c,eax
   14004d3f7:	fcmovbe st,st(3)
   14004d3f9:	mov    edi,0xfa809850
   14004d3fe:	icebp  
   14004d3ff:	xchg   esp,eax
   14004d400:	xchg   ebp,eax
   14004d401:	test   BYTE PTR [rcx],dh
   14004d403:	(bad)  
   14004d405:	rex.WR cld 
   14004d407:	pop    rsp
   14004d408:	scas   al,BYTE PTR es:[rdi]
   14004d409:	sub    eax,0x9c50ada9
   14004d40e:	cdq    
   14004d40f:	iret   
   14004d410:	xchg   ah,al
   14004d412:	(bad)  
   14004d413:	out    dx,eax
   14004d414:	(bad)  
   14004d415:	sub    al,0x23
   14004d417:	rex.RXB jns 0x14004d3f0
   14004d41a:	stc    
   14004d41b:	push   rbx
   14004d41c:	mov    ah,0xac
   14004d41e:	(bad)  
   14004d41f:	push   0xffffffffffffff9f
   14004d421:	retf   
   14004d422:	movabs eax,ds:0x18c56fb6986eda7d
   14004d42b:	xchg   edx,eax
   14004d42c:	pop    rbp
   14004d42d:	or     eax,0x1181fad0
   14004d432:	jl     0x14004d455
   14004d434:	xchg   ebx,eax
   14004d435:	iret   
   14004d436:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d437:	ror    ah,0xb
   14004d43a:	mov    dh,0x67
   14004d43c:	loopne 0x14004d40d
   14004d43e:	scas   al,BYTE PTR es:[rdi]
   14004d43f:	push   rbp
   14004d440:	(bad)  
   14004d441:	and    edi,edx
   14004d443:	rex.WRXB and QWORD PTR [r15+0x78],r14
   14004d447:	idiv   bl
   14004d449:	xor    ah,ah
   14004d44b:	mov    edx,0x4fcbd6ed
   14004d450:	or     BYTE PTR [rbx-0x64210e44],al
   14004d456:	xor    edi,ebx
   14004d458:	xchg   DWORD PTR [rsi],esi
   14004d45a:	lahf   
   14004d45b:	jnp    0x14004d41e
   14004d45d:	mov    dh,0x88
   14004d45f:	sub    DWORD PTR [rdi-0x43992849],0x19
   14004d466:	add    BYTE PTR [rdi-0x73],cl
   14004d469:	(bad)  
   14004d46a:	(bad)  
   14004d46b:	mov    ?,WORD PTR [rdi]
   14004d46d:	std    
   14004d46e:	in     al,0xa7
   14004d470:	neg    DWORD PTR [rsi+0x76]
   14004d473:	fnstenv [rdx-0x59]
   14004d476:	scas   eax,DWORD PTR es:[rdi]
   14004d477:	call   QWORD PTR [rsi]
   14004d479:	and    ch,dl
   14004d47b:	fadd   DWORD PTR [rbp+0x2e0307b5]
   14004d481:	imul   edx,esi,0xcc8dab82
   14004d487:	fiadd  DWORD PTR [rbx]
   14004d489:	pop    rax
   14004d48a:	rex.RX (bad) 
   14004d48c:	pop    rdx
   14004d48d:	ds mov edi,0x9d24eaee
   14004d493:	fwait
   14004d494:	push   rbp
   14004d495:	jge    0x14004d4ab
   14004d497:	ins    BYTE PTR es:[rdi],dx
   14004d498:	pop    rcx
   14004d499:	xchg   BYTE PTR [rsi],dl
   14004d49b:	ret    
   14004d49c:	and    eax,0xfa28a429
   14004d4a1:	xchg   ecx,ebx
   14004d4a3:	mov    esp,0xdf2fd6c8
   14004d4a8:	push   rsp
   14004d4a9:	rex.W
   14004d4aa:	or     BYTE PTR ss:[rsp+rcx*2+0x18],bl
   14004d4af:	icebp  
   14004d4b0:	dec    DWORD PTR [rbp+0x41]
   14004d4b3:	or     DWORD PTR [rdi+0x20],esp
   14004d4b6:	sbb    eax,0x97681973
   14004d4bb:	jbe    0x14004d4a7
   14004d4bd:	ja     0x14004d4af
   14004d4bf:	imul   edx,DWORD PTR [rcx-0x5b],0xffffffe4
   14004d4c3:	(bad)  
   14004d4c4:	fist   DWORD PTR [rcx+rax*2-0x1fde7a2]
   14004d4cb:	mov    ebx,0x49010042
   14004d4d0:	(bad)  
   14004d4d1:	ficomp DWORD PTR [rdi+rax*8-0x4f]
   14004d4d5:	icebp  
   14004d4d6:	adc    edi,DWORD PTR [rax]
   14004d4d8:	mov    dh,0xff
   14004d4da:	xor    eax,0xa043fd88
   14004d4df:	test   DWORD PTR [rcx],ecx
   14004d4e1:	or     al,0x4f
   14004d4e3:	cmp    al,0x87
   14004d4e5:	xchg   ecx,eax
   14004d4e6:	mov    DWORD PTR [rbx+0x409f4ce8],esp
   14004d4ec:	pop    rsp
   14004d4ed:	(bad)  
   14004d4ee:	add    edi,DWORD PTR [rdx-0x366c0767]
   14004d4f4:	sbb    eax,0x7508150
   14004d4f9:	movabs al,ds:0x4242b6dd249a84e6
   14004d502:	rex.RB lods al,BYTE PTR ds:[rsi]
   14004d504:	jne    0x14004d505
   14004d506:	sbb    DWORD PTR [rdi],ebp
   14004d508:	(bad)  
   14004d509:	and    dl,BYTE PTR [rax-0x34]
   14004d50c:	or     esi,DWORD PTR [rsi+0x20]
   14004d50f:	rex.W cmp al,0x5a
   14004d512:	repnz xchg ebp,eax
   14004d514:	jb     0x14004d57e
   14004d516:	(bad)  
   14004d517:	stos   BYTE PTR es:[rdi],al
   14004d518:	movabs al,ds:0x25927bfca46f0a78
   14004d521:	mov    edi,0x52f9bbc
   14004d526:	rex.WRB not QWORD PTR [rip+0xffffffffcb123e7f]        # 0x10b1713ac
   14004d52d:	xchg   edx,eax
   14004d52e:	(bad)  
   14004d52f:	rex.R loop 0x14004d511
   14004d532:	xchg   DWORD PTR [rsp+rax*2-0x144b53a8],edi
   14004d539:	jo     0x14004d53b
   14004d53b:	push   0xffffffffffffff8a
   14004d53d:	stc    
   14004d53e:	repz pop rax
   14004d540:	in     al,dx
   14004d541:	imul   ebp,DWORD PTR [rdi+0x200df5a3],0x29
   14004d548:	loope  0x14004d4d8
   14004d54a:	add    BYTE PTR [rbp+0x55],al
   14004d54d:	xor    al,BYTE PTR [rbp+0x77]
   14004d550:	and    DWORD PTR [rcx+0x45ac54aa],edx
   14004d556:	and    bh,dl
   14004d558:	in     al,0xbc
   14004d55a:	mov    ebp,DWORD PTR [rcx]
   14004d55c:	repz cmp al,0x7d
   14004d55f:	jl     0x14004d5d7
   14004d561:	outs   dx,DWORD PTR ds:[rsi]
   14004d562:	push   rbx
   14004d563:	rex.WRX
   14004d564:	test   DWORD PTR ss:[rcx+0x294d961],ebx
   14004d56b:	out    dx,al
   14004d56c:	hlt    
   14004d56d:	xchg   DWORD PTR [rsi],ebx
   14004d56f:	mov    dh,0x82
   14004d571:	iret   
   14004d572:	xor    ebp,DWORD PTR [rdx]
   14004d574:	and    al,0x85
   14004d576:	adc    esi,DWORD PTR [rdi+rax*1+0x6c04ee69]
   14004d57d:	cwde   
   14004d57e:	ret    
   14004d57f:	retf   
   14004d580:	xlat   BYTE PTR ds:[rbx]
   14004d581:	mov    bl,0x6a
   14004d583:	shl    edi,1
   14004d585:	pop    rcx
   14004d586:	mov    ecx,0x84c24af9
   14004d58b:	pushf  
   14004d58c:	pop    rcx
   14004d58d:	rex.WX cmp rbx,rdx
   14004d590:	push   rsp
   14004d591:	and    bl,BYTE PTR [rdx+0x5a4ae469]
   14004d597:	stc    
   14004d598:	(bad)  
   14004d599:	(bad)  
   14004d59a:	jo     0x14004d57c
   14004d59c:	sbb    DWORD PTR [rax-0x37],ebx
   14004d59f:	int    0xc1
   14004d5a1:	xlat   BYTE PTR ds:[rbx]
   14004d5a2:	add    esp,ebx
   14004d5a4:	psrad  mm0,QWORD PTR [rdx+0x6c]
   14004d5a8:	(bad)  
   14004d5a9:	jge    0x14004d5e0
   14004d5ab:	enter  0x6048,0x1d
   14004d5af:	mov    al,BYTE PTR [rsi+rdx*4]
   14004d5b2:	out    0xe7,eax
   14004d5b4:	(bad)  
   14004d5b5:	notrack call QWORD PTR [rcx+0x4e7ffc3f]
   14004d5bc:	cmp    al,0xf9
   14004d5be:	clc    
   14004d5bf:	rex.WRXB ins BYTE PTR es:[rdi],dx
   14004d5c1:	outs   dx,BYTE PTR ds:[rsi]
   14004d5c2:	outs   dx,BYTE PTR ds:[rsi]
   14004d5c3:	ds xchg esp,eax
   14004d5c5:	pop    rax
   14004d5c6:	push   rbx
   14004d5c7:	imul   ebx,DWORD PTR [rcx-0x5f],0x25d7e73c
   14004d5ce:	sti    
   14004d5cf:	xchg   ecx,eax
   14004d5d0:	ins    DWORD PTR es:[rdi],dx
   14004d5d1:	cmp    DWORD PTR [rax+rcx*1],0xbe68ba6b
   14004d5d8:	mov    esi,0x7e13364d
   14004d5dd:	fistp  WORD PTR [rdi+0x6185cb5]
   14004d5e3:	xchg   ebx,eax
   14004d5e4:	jae    0x14004d572
   14004d5e6:	pop    rbp
   14004d5e7:	(bad)  
   14004d5e8:	sub    BYTE PTR [rbx],ch
   14004d5ea:	pmaddwd mm1,QWORD PTR [rcx+0x58]
   14004d5ee:	sahf   
   14004d5ef:	mov    edi,0xa8c87c3e
   14004d5f4:	test   al,0x75
   14004d5f6:	xor    BYTE PTR [rbp+0x75c38603],al
   14004d5fc:	jae    0x14004d5d1
   14004d5fe:	xchg   edx,eax
   14004d5ff:	mov    edx,0xaeb54109
   14004d604:	sub    DWORD PTR [esi],edx
   14004d607:	sbb    edx,DWORD PTR [rbx+0x53b41455]
   14004d60d:	pop    rax
   14004d60e:	imul   ecx,ebx,0x1570c28b
   14004d614:	(bad)  
   14004d615:	xchg   edx,eax
   14004d616:	mul    DWORD PTR [rcx-0x214a8c0e]
   14004d61c:	xchg   ebx,eax
   14004d61d:	(bad)  
   14004d61e:	(bad)  
   14004d61f:	jo     0x14004d685
   14004d621:	call   0xfda65a58
   14004d626:	shr    dl,0x3c
   14004d629:	cli    
   14004d62a:	addr32 (bad) 
   14004d62c:	xor    BYTE PTR [rbx+rsi*2],dh
   14004d62f:	sbb    al,0x9d
   14004d631:	jmp    0x14b505f09
   14004d636:	and    BYTE PTR [rbp-0x8],cl
   14004d639:	jno    0x14004d653
   14004d63b:	int    0x1
   14004d63d:	adc    DWORD PTR [rdx+rbp*1+0xa9fa74a],eax
   14004d644:	nop
   14004d645:	je     0x14004d6a6
   14004d647:	or     eax,0x63b445fb
   14004d64c:	inc    BYTE PTR [rcx+0x33]
   14004d64f:	rol    DWORD PTR [rdx+0x52b35b3d],cl
   14004d655:	mov    WORD PTR [rsi-0x2e],ss
   14004d658:	(bad)  
   14004d65c:	sub    bl,al
   14004d65e:	(bad)  
   14004d65f:	cmp    BYTE PTR [rsi+0x6e],0x96
   14004d663:	(bad)  
   14004d664:	test   al,0xf0
   14004d666:	stos   DWORD PTR es:[rdi],eax
   14004d667:	(bad)  
   14004d668:	sub    al,0xcf
   14004d66a:	rex.RX add eax,0x2d63c2d0
   14004d670:	or     BYTE PTR [rbx-0x71aea60b],bh
   14004d676:	sub    cl,al
   14004d678:	jae    0x14004d60f
   14004d67a:	rex.B
   14004d67b:	repnz sbb BYTE PTR [rsi-0x5f0367b5],bh
   14004d682:	gs (bad) 
   14004d684:	in     eax,dx
   14004d685:	and    ch,ah
   14004d687:	mov    bl,0xec
   14004d689:	(bad)  
   14004d68a:	shl    al,0x8c
   14004d68d:	or     DWORD PTR [rax-0x7664fcb3],ebx
   14004d693:	pushf  
   14004d694:	sub    BYTE PTR [rbx],bl
   14004d696:	or     ah,BYTE PTR [rax]
   14004d698:	push   rdi
   14004d699:	cli    
   14004d69a:	stc    
   14004d69b:	test   eax,0x3f2cf9c8
   14004d6a0:	xchg   ebp,eax
   14004d6a1:	pop    rsi
   14004d6a2:	mov    edx,DWORD PTR [rsi]
   14004d6a4:	pop    rcx
   14004d6a5:	(bad)  
   14004d6a6:	cmc    
   14004d6a7:	pslld  mm6,QWORD PTR [rax+0x58]
   14004d6ab:	xchg   ebx,eax
   14004d6ac:	in     eax,0xed
   14004d6ae:	jnp    0x14004d659
   14004d6b0:	(bad)  
   14004d6b1:	sub    al,0xc6
   14004d6b3:	(bad)  
   14004d6b4:	(bad)  
   14004d6b5:	mov    ebx,0x6e5ef27a
   14004d6ba:	xor    al,0x14
   14004d6bc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d6bd:	cmc    
   14004d6be:	cmp    ebp,eax
   14004d6c0:	in     al,dx
   14004d6c1:	retf   
   14004d6c2:	xchg   ecx,eax
   14004d6c3:	or     DWORD PTR [rdx],ebp
   14004d6c5:	int    0xc8
   14004d6c7:	add    al,0x81
   14004d6c9:	ret    0x5e01
   14004d6cc:	jg     0x14004d6ed
   14004d6ce:	mov    al,dh
   14004d6d0:	rex.WRX movabs rax,0x44da283f8c45b80
   14004d6da:	or     eax,esi
   14004d6dc:	cdq    
   14004d6dd:	inc    dh
   14004d6df:	lahf   
   14004d6e0:	jns    0x14004d6dc
   14004d6e2:	(bad)  
   14004d6e3:	in     al,dx
   14004d6e4:	jmp    0x17ef326da
   14004d6e9:	je     0x14004d754
   14004d6eb:	outs   dx,DWORD PTR ds:[rsi]
   14004d6ec:	(bad)  
   14004d6ed:	jmp    0x168e517ce
   14004d6f2:	(bad)  
   14004d6f3:	sbb    dl,cl
   14004d6f5:	and    DWORD PTR [rdx+0x5b],esi
   14004d6f8:	lahf   
   14004d6f9:	push   rbx
   14004d6fa:	jns    0x14004d6af
   14004d6fc:	ins    DWORD PTR es:[rdi],dx
   14004d6fd:	xor    al,0x8b
   14004d6ff:	retf   0x89a4
   14004d702:	adc    al,0x66
   14004d704:	gs ins DWORD PTR es:[rdi],dx
   14004d706:	adc    dl,BYTE PTR [rax+0x12b2e26a]
   14004d70c:	test   ch,bh
   14004d70e:	movabs al,ds:0xb132975830ab6eb0
   14004d717:	(bad)  
   14004d719:	(bad)  
   14004d71a:	cmp    DWORD PTR [rbx],edx
   14004d71c:	jp     0x14004d722
   14004d71e:	push   rbp
   14004d71f:	(bad)  
   14004d720:	(bad)  
   14004d721:	clc    
   14004d722:	xor    al,0xb
   14004d724:	(bad)  
   14004d725:	pop    rbx
   14004d726:	(bad)  
   14004d727:	rex.RX jle 0x14004d6cc
   14004d72a:	or     DWORD PTR [rdx+0x3ca70288],esp
   14004d730:	imul   ebx,DWORD PTR [rip+0x1655ead2],0x8bc3c833        # 0x1565ac20c
   14004d73a:	es xor ah,ch
   14004d73d:	ja     0x14004d791
   14004d73f:	or     BYTE PTR [rsi-0x757ce7a3],al
   14004d745:	mov    edx,0x160218ef
   14004d74a:	rex.WRXB (bad) 
   14004d74c:	(bad)
   14004d74f:	(bad)  
   14004d750:	out    0xc1,al
   14004d752:	jmp    0x14004d6d4
   14004d754:	int    0x35
   14004d756:	je     0x14004d6fe
   14004d758:	rex.RXB mov r9b,0xe7
   14004d75b:	hlt    
   14004d75c:	jae    0x14004d776
   14004d75e:	cwde   
   14004d75f:	sbb    BYTE PTR [rbp+0x35],al
   14004d762:	(bad)  
   14004d763:	xor    DWORD PTR [rax-0x532b774e],0xc4cb3241
   14004d76d:	xchg   edx,eax
   14004d76e:	rex.R enter 0x3e8a,0x15
   14004d773:	pop    rcx
   14004d774:	cdq    
   14004d775:	(bad)  
   14004d776:	movabs eax,ds:0x81dd403a8cfcb326
   14004d77f:	ret    0x7fa
   14004d782:	imul   ebp,eax,0x1
   14004d785:	(bad)  
   14004d786:	addr32 or eax,0x823a05b0
   14004d78c:	and    eax,DWORD PTR [rbx]
   14004d78e:	(bad)
   14004d792:	pop    rsi
   14004d793:	rex.XB add spl,BYTE PTR [r8]
   14004d796:	gs not ebp
   14004d799:	ret    0x4507
   14004d79c:	add    esi,edx
   14004d79e:	push   rcx
   14004d79f:	sub    BYTE PTR [rdx-0x194ad8fb],ch
   14004d7a5:	mov    ecx,0x9448ffb
   14004d7aa:	test   ch,bh
   14004d7ac:	xlat   BYTE PTR ds:[rbx]
   14004d7ad:	mov    BYTE PTR [rax-0x78],al
   14004d7b0:	scas   al,BYTE PTR es:[rdi]
   14004d7b1:	jo     0x14004d815
   14004d7b3:	push   rsp
   14004d7b4:	hlt    
   14004d7b5:	movabs al,ds:0x92a86ae619410011
   14004d7be:	lock js 0x14004d77c
   14004d7c1:	movabs ds:0xa3c8e113f6dffb00,al
   14004d7ca:	stos   BYTE PTR es:[rdi],al
   14004d7cb:	test   eax,0x2b8e1ed1
   14004d7d0:	xchg   esp,eax
   14004d7d1:	xor    BYTE PTR [rdi+0x6f8d9c0c],dl
   14004d7d7:	rcr    DWORD PTR [rsi+0x26b5fc8a],1
   14004d7dd:	sub    BYTE PTR [rcx-0x16],bl
   14004d7e0:	(bad)  
   14004d7e1:	xor    al,0x92
   14004d7e3:	(bad)  
   14004d7e4:	and    al,0x40
   14004d7e6:	rex.WR
   14004d7e7:	repz fsubr QWORD PTR [rcx]
   14004d7ea:	or     DWORD PTR [rdx+0x62b386e2],ecx
   14004d7f0:	sar    DWORD PTR [rsi+0x15ef3e80],1
   14004d7f6:	adc    ebx,ebp
   14004d7f8:	in     al,0x75
   14004d7fa:	push   rsp
   14004d7fb:	jmp    0x14004d7c2
   14004d7fd:	rex.W sub BYTE PTR [rcx-0x60fe6ac0],cl
   14004d804:	in     al,dx
   14004d805:	pop    rsp
   14004d806:	sub    BYTE PTR [rbx],ah
   14004d808:	rex.X in al,0xb4
   14004d80b:	addr32 (bad) 
   14004d80d:	jne    0x14004d80e
   14004d80f:	repnz fwait
   14004d811:	sbb    BYTE PTR [rcx+0x14605c3],bl
   14004d817:	pop    rcx
   14004d818:	fwait
   14004d819:	rex.W sahf 
   14004d81b:	mov    cl,0x2
   14004d81d:	(bad)  
   14004d81e:	je     0x14004d841
   14004d820:	pushf  
   14004d821:	and    BYTE PTR [rbx+0x63d1a981],0xd3
   14004d828:	lahf   
   14004d829:	std    
   14004d82a:	sbb    edi,0xfffffff9
   14004d82d:	lea    ebp,[rcx+0x32ffa3b1]
   14004d833:	xor    eax,0x285da8cd
   14004d838:	ror    eax,0x30
   14004d83b:	mov    bl,0xb8
   14004d83d:	in     al,0x37
   14004d83f:	outs   dx,DWORD PTR ds:[rsi]
   14004d840:	not    bl
   14004d842:	push   rdi
   14004d843:	(bad)  
   14004d845:	mov    DWORD PTR [rbp-0x7cdbe9ae],edx
   14004d84b:	enter  0x7129,0xe1
   14004d84f:	pop    rax
   14004d850:	rcr    DWORD PTR [rsi],0x8d
   14004d853:	and    ecx,DWORD PTR [rip+0x50000be7]        # 0x19004e440
   14004d859:	xchg   ebx,eax
   14004d85a:	cld    
   14004d85b:	jl     0x14004d813
   14004d85d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d85e:	mov    dil,0x4
   14004d861:	scas   eax,DWORD PTR es:[rdi]
   14004d862:	sbb    DWORD PTR [rax-0x32],eax
   14004d865:	sub    BYTE PTR [rsp+rbx*4],cl
   14004d868:	and    DWORD PTR [rip+0x621b6120],edi        # 0x1a220398e
   14004d86e:	rex.WB int 0x15
   14004d871:	xchg   esp,eax
   14004d872:	(bad)  
   14004d873:	lods   eax,DWORD PTR ds:[rsi]
   14004d874:	loop   0x14004d88d
   14004d876:	sbb    eax,DWORD PTR [rcx-0x2e]
   14004d879:	adc    DWORD PTR [rip+0x190adfcf],ebp        # 0x1590fb84e
   14004d87f:	sbb    DWORD PTR [rdx],edi
   14004d881:	sbb    DWORD PTR [rax+0x69],0x9b42344f
   14004d888:	xchg   DWORD PTR [rax-0x3d4ef042],eax
   14004d88e:	fcmovbe st,st(4)
   14004d890:	rex.WB cmp al,0xb1
   14004d893:	(bad)  
   14004d894:	(bad)  
   14004d895:	jmp    0x10507ce7a
   14004d89a:	(bad)  
   14004d89b:	es mov al,0x6b
   14004d89e:	cli    
   14004d89f:	cmp    BYTE PTR [rsi],al
   14004d8a1:	data16 (bad) 
   14004d8a3:	push   rcx
   14004d8a4:	int    0x4f
   14004d8a6:	and    ebp,DWORD PTR [rsi+0x893812e]
   14004d8ac:	mov    edi,0x8b16a4c
   14004d8b1:	adc    eax,0x12f8b691
   14004d8b6:	loope  0x14004d847
   14004d8b8:	pop    rdx
   14004d8b9:	jrcxz  0x14004d8ea
   14004d8bb:	add    eax,0x9cd8f240
   14004d8c0:	and    eax,0xe7b3c0d2
   14004d8c5:	rex.WXB test al,0xd5
   14004d8c8:	(bad)  
   14004d8c9:	or     dh,BYTE PTR [rbx-0x53]
   14004d8cc:	lea    esi,[rdi-0x20]
   14004d8cf:	(bad)  
   14004d8d0:	(bad)  
   14004d8d1:	loopne 0x14004d8ff
   14004d8d3:	pop    rsp
   14004d8d4:	shr    DWORD PTR [rax+rdi*2-0x130a934],0xf7
   14004d8dc:	lods   al,BYTE PTR ds:[rsi]
   14004d8dd:	(bad)  
   14004d8de:	sub    al,dl
   14004d8e0:	mov    ebp,DWORD PTR [rdx+0x42160850]
   14004d8e6:	test   bl,bh
   14004d8e8:	(bad)
   14004d8eb:	rcr    DWORD PTR [rax],0x32
   14004d8ee:	shr    ebx,1
   14004d8f0:	(bad)  
   14004d8f1:	bnd jl 0x14004d8f8
   14004d8f4:	sub    bh,BYTE PTR [rsi]
   14004d8f6:	hlt    
   14004d8f7:	rol    BYTE PTR [rbp-0x52],1
   14004d8fa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d8fb:	xor    bl,al
   14004d8fd:	(bad)  
   14004d8fe:	iret   
   14004d8ff:	sar    DWORD PTR [rdi],1
   14004d901:	hlt    
   14004d902:	xlat   BYTE PTR ds:[rbx]
   14004d903:	pop    rcx
   14004d904:	lock rex.WXB not QWORD PTR [r10-0x41b23fed]
   14004d90c:	pop    rsi
   14004d90d:	sti    
   14004d90e:	rex.XB jno 0x14004d919
   14004d911:	cmp    DWORD PTR [rdx-0x57c69ac3],esi
   14004d917:	sub    DWORD PTR [rdx],esp
   14004d919:	mov    bh,0x4c
   14004d91b:	sahf   
   14004d91c:	adc    DWORD PTR [rax],ecx
   14004d91e:	pop    QWORD PTR [rcx+rbx*8-0xd4d46f3]
   14004d925:	mov    cl,0x2f
   14004d927:	iret   
   14004d928:	xchg   edi,eax
   14004d929:	out    dx,eax
   14004d92a:	fwait
   14004d92b:	or     BYTE PTR [rdx-0x79a5ea64],bl
   14004d931:	int    0xef
   14004d933:	(bad)  
   14004d934:	lahf   
   14004d935:	sub    edi,DWORD PTR [rcx+0x11c7b391]
   14004d93b:	add    BYTE PTR [rbx],0x37
   14004d93e:	icebp  
   14004d93f:	fcomp  QWORD PTR [rbp+0x2e3bf428]
   14004d945:	rcl    dh,1
   14004d947:	ds push rax
   14004d949:	pop    rbx
   14004d94a:	or     DWORD PTR [rsi+rbp*1+0x55803ac1],edx
   14004d951:	add    BYTE PTR [rbx-0x700c00a1],ch
   14004d957:	fdivrp st(7),st
   14004d959:	(bad)  
   14004d95a:	std    
   14004d95b:	pop    rdi
   14004d95c:	sti    
   14004d95d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d95e:	sbb    ebp,DWORD PTR [rbx-0xe9a8055]
   14004d964:	cmc    
   14004d965:	(bad)  
   14004d966:	pop    rsp
   14004d967:	and    BYTE PTR [rax+0x479f7775],bh
   14004d96d:	movabs eax,ds:0x1b50fdc00b331a1
   14004d976:	or     BYTE PTR [rsi],ah
   14004d978:	cmp    edx,0x466f16c3
   14004d97e:	cdq    
   14004d97f:	gs rex.RB
   14004d981:	rex.WX movabs rcx,0x4daae02e8b21609f
   14004d98b:	sub    eax,0x42f94fee
   14004d990:	repnz icebp 
   14004d992:	pop    rdx
   14004d993:	push   rdi
   14004d994:	lods   eax,DWORD PTR ds:[rsi]
   14004d995:	xchg   esi,eax
   14004d996:	sahf   
   14004d997:	xchg   ebx,eax
   14004d998:	or     al,BYTE PTR [rdi-0x6e067ff4]
   14004d99e:	ins    BYTE PTR es:[rdi],dx
   14004d99f:	push   rsi
   14004d9a0:	pop    rsp
   14004d9a1:	scas   al,BYTE PTR es:[rdi]
   14004d9a2:	mov    edx,0xa3ec4098
   14004d9a7:	rex.RX cli 
   14004d9a9:	jbe    0x14004d976
   14004d9ab:	cwde   
   14004d9ac:	mov    dh,0x14
   14004d9ae:	push   rsp
   14004d9af:	test   al,0x6a
   14004d9b1:	xor    al,0xb3
   14004d9b3:	adc    edi,DWORD PTR [rax+0x66]
   14004d9b6:	jp     0x14004d9c6
   14004d9b8:	mov    bl,0x87
   14004d9ba:	outs   dx,BYTE PTR ds:[rsi]
   14004d9bb:	rex push rbp
   14004d9bd:	jne    0x14004d94f
   14004d9bf:	xchg   esi,eax
   14004d9c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d9c1:	xor    BYTE PTR [rbx+rsi*2],dh
   14004d9c4:	or     al,0x3b
   14004d9c6:	addr32 rex.WRX mov al,ds:0x5c449b9e
   14004d9cd:	xchg   ecx,eax
   14004d9ce:	rex.X (bad) 
   14004d9d0:	movabs al,ds:0xfee24047fad43d70
   14004d9d9:	(bad)  
   14004d9da:	(bad)  
   14004d9db:	repnz icebp 
   14004d9dd:	(bad)  
   14004d9de:	mov    edi,0x9bf0b21
   14004d9e3:	jo     0x14004da50
   14004d9e5:	and    ah,BYTE PTR [rdx+0x2ca46b8]
   14004d9eb:	pop    rdx
   14004d9ec:	pop    rsp
   14004d9ed:	stos   BYTE PTR es:[rdi],al
   14004d9ee:	out    dx,eax
   14004d9ef:	push   0x6ce19fc2
   14004d9f4:	test   ch,0x43
   14004d9f7:	enter  0x6ff7,0x28
   14004d9fb:	rex.XB jle 0x14004da28
   14004d9fe:	mov    al,ch
   14004da00:	pop    rdx
   14004da01:	jae    0x14004da70
   14004da03:	sub    eax,0x5732ca2a
   14004da08:	mov    WORD PTR [rbx+0x21],es
   14004da0b:	mov    ch,ah
   14004da0d:	and    BYTE PTR [rdx+0x2fa18b5d],dl
   14004da13:	jmp    FWORD PTR [rdx]
   14004da15:	mov    ebx,0x10edbc04
   14004da1a:	rex.RB pushf 
   14004da1c:	(bad)  
   14004da1d:	in     eax,dx
   14004da1e:	loope  0x14004d9d6
   14004da20:	sti    
   14004da21:	outs   dx,BYTE PTR ds:[rsi]
   14004da22:	rex.WRXB add r14,QWORD PTR [r14-0x10281e79]
   14004da29:	cmp    ebx,ebx
   14004da2b:	cwde   
   14004da2c:	sti    
   14004da2d:	adc    eax,0x6ad52170
   14004da32:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004da33:	int    0x2d
   14004da35:	sub    bl,dl
   14004da37:	ds leave 
   14004da39:	mov    edx,0xc7615125
   14004da3e:	mov    dl,0xea
   14004da40:	shr    BYTE PTR [rbx-0x3956182c],cl
   14004da46:	je     0xd418189c
   14004da4c:	neg    DWORD PTR [rdi-0x13fbfe51]
   14004da52:	rol    esi,0xf
   14004da55:	movabs ds:0x16ebdf827ad7bc5d,eax
   14004da5e:	mov    bh,0x7d
   14004da60:	shl    BYTE PTR [rsi+0x9],cl
   14004da63:	in     al,dx
   14004da64:	cli    
   14004da65:	(bad)
   14004da69:	rex.WRX sahf 
   14004da6b:	pop    rax
   14004da6c:	cmp    dl,dh
   14004da6e:	lock sbb DWORD PTR [rdi+0x55e57fdd],0xfffffff3
   14004da76:	popf   
   14004da77:	fidivr WORD PTR [rsi-0x48576665]
   14004da7d:	mov    ah,0x8b
   14004da7f:	jle    0x14004da72
   14004da81:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004da82:	rex.WB
   14004da83:	rex.R shl spl,1
   14004da86:	pop    rdi
   14004da87:	adc    eax,0xfe189b4c
   14004da8c:	sbb    esi,edx
   14004da8e:	je     0x14004da2a
   14004da90:	(bad)  
   14004da91:	sub    BYTE PTR [rdx],dh
   14004da93:	in     eax,0xd4
   14004da95:	(bad)  
   14004da96:	rex or edx,eax
   14004da99:	push   rsp
   14004da9a:	movabs ds:0x900dd07580184309,al
   14004daa3:	cld    
   14004daa4:	mov    WORD PTR [rsi+0x33],es
   14004daa7:	fisub  DWORD PTR [rdx-0x77a3e97b]
   14004daad:	in     eax,0xb7
   14004daaf:	xor    eax,0x2162d7d4
   14004dab4:	adc    cl,BYTE PTR [rcx+0x57]
   14004dab7:	(bad)  
   14004dab8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004dab9:	jb     0x14004dae1
   14004dabb:	mov    ecx,0x6301b779
   14004dac0:	test   BYTE PTR [rdi+rbx*8+0x18],ah
   14004dac4:	(bad)  
   14004dac5:	loope  0x14004dad7
   14004dac7:	add    BYTE PTR [rsi-0x52efbfb9],dl
   14004dacd:	(bad)  
   14004dace:	test   DWORD PTR [rax+0x9],ecx
   14004dad1:	movabs eax,ds:0x86313d1c19c581aa
   14004dada:	mov    cl,0x4b
   14004dadc:	pop    rsi
   14004dadd:	mov    edi,DWORD PTR [rdx+0x60]
   14004dae0:	(bad)  
   14004dae1:	shr    dl,cl
   14004dae3:	sbb    al,0x6
   14004dae5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004dae6:	mov    fs,WORD PTR [rdx-0x31]
   14004dae9:	test   eax,0x753bd0e7
   14004daee:	adc    dl,ch
   14004daf0:	fcom   QWORD PTR [rdx+rax*8]
   14004daf3:	fisub  DWORD PTR [rdx-0xd2f06cc]
   14004daf9:	xor    ebx,DWORD PTR [rcx-0x2c]
   14004dafc:	and    esp,DWORD PTR [rax+0x45fc4ca6]
   14004db02:	add    ch,BYTE PTR [rdx+0x6a]
   14004db05:	xchg   esp,eax
   14004db06:	(bad)  
   14004db07:	shr    BYTE PTR [rax],1
   14004db09:	add    ch,ah
   14004db0b:	xchg   ebp,eax
   14004db0c:	jge    0x14004dab1
   14004db0e:	rex.B jg 0x14004da94
   14004db11:	xchg   esp,eax
   14004db12:	shr    DWORD PTR [rsi+rsi*4+0x73b57842],1
   14004db19:	xchg   ecx,eax
   14004db1a:	mov    dl,0x60
   14004db1c:	mov    ebx,0xfdac8ee5
   14004db21:	(bad)  
   14004db22:	test   al,0x15
   14004db24:	fisubr WORD PTR [rdx+0x35]
   14004db27:	not    ah
   14004db29:	or     DWORD PTR [rsi],ebp
   14004db2b:	mov    al,0x3e
   14004db2d:	out    dx,eax
   14004db2e:	(bad)  
   14004db2f:	(bad)  
   14004db30:	test   esp,eax
   14004db32:	(bad)  
   14004db33:	pop    rax
   14004db34:	mov    edx,0x3ff05a8a
   14004db39:	test   al,ah
   14004db3b:	test   BYTE PTR [rdx+0x55],ah
   14004db3e:	or     DWORD PTR [rcx],edi
   14004db40:	sbb    DWORD PTR [rbx-0x69977360],eax
   14004db46:	shl    dl,cl
   14004db48:	or     DWORD PTR [rdx],eax
   14004db4a:	test   BYTE PTR [rsp+rcx*1],al
   14004db4d:	stos   BYTE PTR es:[rdi],al
   14004db4e:	test   DWORD PTR [rax-0xa],ecx
   14004db51:	(bad)  
   14004db52:	(bad)  
   14004db53:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004db54:	test   eax,esi
   14004db56:	adc    eax,0x6d19396
   14004db5b:	xchg   ecx,eax
   14004db5c:	push   0xb
   14004db5e:	in     al,0x35
   14004db60:	ins    BYTE PTR es:[rdi],dx
   14004db61:	pop    rdi
   14004db62:	fwait
   14004db63:	addr32 jns 0x14004db8d
   14004db66:	and    eax,DWORD PTR [rcx]
   14004db68:	int    0x1c
   14004db6a:	xor    BYTE PTR [rbx-0x5aa8f1e5],dl
   14004db70:	or     esi,ecx
   14004db72:	and    eax,0x2c001af8
   14004db77:	enter  0x55,0xb
   14004db7b:	cmp    ecx,eax
   14004db7d:	int    0xc5
   14004db7f:	mov    ah,0xf0
   14004db81:	jg     0x14004db3f
   14004db83:	sub    BYTE PTR [rsp+rsi*4],ch
   14004db86:	scas   al,BYTE PTR es:[rdi]
   14004db87:	int    0x39
   14004db89:	(bad)  
   14004db8a:	(bad)  
   14004db8b:	cmp    ah,al
   14004db8d:	jnp    0x14004db59
   14004db8f:	fs rex.B
   14004db91:	rex.X loopne 0x14004db48
   14004db94:	out    0x1a,eax
   14004db96:	pop    rdx
   14004db97:	stc    
   14004db98:	int3   
   14004db99:	xchg   edi,eax
   14004db9a:	mov    al,0x67
   14004db9c:	add    ah,BYTE PTR [rsi+0x21]
   14004db9f:	sbb    BYTE PTR cs:[rbx],0x70
   14004dba3:	jbe    0x14004dbcd
   14004dba5:	jno    0x14004dc0d
   14004dba7:	xor    al,0xe0
   14004dba9:	movabs eax,ds:0x8f93fe5fcb34d4c2
   14004dbb2:	cld    
   14004dbb3:	(bad)  
   14004dbb4:	fcom   DWORD PTR [rbx-0x391b0271]
   14004dbba:	cli    
   14004dbbb:	(bad)  
   14004dbbc:	mov    bh,0x45
   14004dbbe:	jne    0x14004dba6
   14004dbc0:	or     eax,DWORD PTR [rsi]
   14004dbc2:	or     dh,BYTE PTR [rsi]
   14004dbc4:	shl    DWORD PTR [rsi],cl
   14004dbc6:	and    eax,DWORD PTR [rip+0xffffffff876554b7]        # 0xc76a3083
   14004dbcc:	pop    rdi
   14004dbcd:	push   rbx
   14004dbce:	es fs sub ax,0xa144
   14004dbd4:	add    cl,BYTE PTR [rax+rax*4-0x7c]
   14004dbd8:	(bad)  
   14004dbd9:	sub    DWORD PTR [rdi+0x11e7ad7],esp
   14004dbdf:	mov    bl,0xc2
   14004dbe1:	jl     0x14004dc5c
   14004dbe3:	sub    eax,0xc63b4ffc
   14004dbe8:	outs   dx,DWORD PTR ds:[rsi]
   14004dbe9:	ret    0x96f
   14004dbec:	push   r9
   14004dbee:	iret   
   14004dbef:	push   rsp
   14004dbf0:	ss and ecx,ebp
   14004dbf3:	leave  
   14004dbf4:	shr    ch,0xdf
   14004dbf7:	ins    BYTE PTR es:[rdi],dx
   14004dbf8:	push   rbx
   14004dbf9:	mov    ch,0xbc
   14004dbfb:	rex.RB or eax,0x835a49eb
   14004dc01:	(bad)  
   14004dc02:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004dc03:	retf   0xd62
   14004dc06:	pop    rdx
   14004dc07:	pop    rbp
   14004dc08:	sar    al,0xd8
   14004dc0b:	mov    bl,0x38
   14004dc0d:	mov    edx,0xa1c43af7
   14004dc12:	add    esp,eax
   14004dc14:	lea    eax,[rbp-0xc]
   14004dc17:	int3   
   14004dc18:	sahf   
   14004dc19:	ror    al,0xd4
   14004dc1c:	xor    esp,esi
   14004dc1e:	int    0x9e
   14004dc20:	rex.RX pop rsp
   14004dc22:	pushf  
   14004dc23:	pop    r8
   14004dc25:	pop    rbx
   14004dc26:	add    ah,BYTE PTR [rdi+0x1de69075]
   14004dc2c:	adc    bl,ch
   14004dc2e:	adc    dl,dl
   14004dc30:	nop
   14004dc31:	test   BYTE PTR [rdi-0x552dad6],bl
   14004dc37:	mov    bl,0x1a
   14004dc39:	jg     0x14004dc09
   14004dc3b:	jle    0x14004dbf5
   14004dc3d:	repnz movabs al,ds:0x2753612d85686a23
   14004dc48:	sub    esp,DWORD PTR [rcx-0x227ff74]
   14004dc4e:	mov    dl,0x36
   14004dc50:	mov    esp,0xd903842c
   14004dc55:	sub    dl,BYTE PTR [rdx+0x24b9f4fa]
   14004dc5b:	mov    eax,0x62841640
   14004dc60:	mov    ch,0x9c
   14004dc62:	nop
   14004dc63:	(bad)  
   14004dc64:	sbb    ecx,DWORD PTR [rax]
   14004dc66:	gs call 0x1253ad33f
   14004dc6c:	(bad)  
   14004dc6d:	call   0x19be0011f
   14004dc72:	(bad)  
   14004dc74:	stos   DWORD PTR es:[rdi],eax
   14004dc75:	xor    eax,0xb6168ad9
   14004dc7a:	pop    rdx
   14004dc7b:	(bad)  
   14004dc7c:	(bad)  
   14004dc7d:	imul   DWORD PTR [rbp+0x9]
   14004dc80:	(bad)  
   14004dc81:	outs   dx,BYTE PTR ds:[rsi]
   14004dc82:	mov    ebp,0xf927bdb9
   14004dc87:	(bad)  
   14004dc89:	add    ebx,edi
   14004dc8b:	(bad)  
   14004dc8c:	rex.WXB icebp 
   14004dc8e:	cli    
   14004dc8f:	or     eax,0xfd4b05c8
   14004dc94:	test   dh,bl
   14004dc96:	adc    BYTE PTR [rbx+rsi*2-0x77370810],dl
   14004dc9d:	xchg   DWORD PTR [rsp+rax*1-0x4],ebx
   14004dca1:	add    esp,DWORD PTR [rdx]
   14004dca3:	fwait
   14004dca4:	adc    ebp,esp
   14004dca6:	rex.RB fldenv [r13-0x54c70070]
   14004dcad:	or     BYTE PTR [rcx+rbp*4-0x2d],ch
   14004dcb1:	loopne 0x14004dcd0
   14004dcb3:	xlat   BYTE PTR ds:[rbx]
   14004dcb4:	icebp  
   14004dcb5:	loop   0x14004dd32
   14004dcb7:	jno    0x14004dc3a
   14004dcb9:	push   rbx
   14004dcba:	xor    DWORD PTR [rdi+0x3b728023],0x3b
   14004dcc1:	rex.B push 0xfffffffffa7cffa5
   14004dcc7:	mov    ecx,0x4c2f4f67
   14004dccc:	rex.WRB jl 0x14004dd49
   14004dccf:	in     al,0xe0
   14004dcd1:	and    eax,0x77dbdd55
   14004dcd6:	and    ecx,DWORD PTR [rax-0x56]
   14004dcd9:	call   FWORD PTR [rbx-0x66]
   14004dcdc:	push   rdi
   14004dcdd:	xor    eax,0xa5fb4e69
   14004dce2:	pushf  
   14004dce3:	cmp    edi,DWORD PTR [rsi-0x594a9c9b]
   14004dce9:	rex.WRX
   14004dcea:	lock cdq 
   14004dcec:	push   rbp
   14004dced:	rex.WRX pop rsi
   14004dcef:	add    ebp,eax
   14004dcf1:	sbb    bl,dh
   14004dcf3:	mov    edx,0x84306b1
   14004dcf8:	add    BYTE PTR [rdx],dl
   14004dcfa:	add    eax,0xb68829af
   14004dcff:	pop    rax
   14004dd00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004dd01:	(bad)  
   14004dd02:	mov    dl,0xa1
   14004dd04:	mov    DWORD PTR [rdx+0x18831fc5],ebx
   14004dd0a:	ins    DWORD PTR es:[rdi],dx
   14004dd0b:	add    al,0x24
   14004dd0d:	adc    DWORD PTR [rax+rax*8],edi
   14004dd10:	sub    eax,0x33835b8
   14004dd15:	mov    dl,0x62
   14004dd17:	xchg   edx,eax
   14004dd18:	loope  0x14004dd62
   14004dd1a:	(bad)  
   14004dd1b:	mov    ecx,0xe797f7c8
   14004dd20:	sub    eax,0x38003239
   14004dd25:	add    al,0x54
   14004dd27:	fnsave [rip+0x18fb3f4c]        # 0x159001c79
   14004dd2d:	sahf   
   14004dd2e:	sbb    BYTE PTR [rcx+0x3affb402],bh
   14004dd34:	test   ch,cl
   14004dd36:	adc    eax,0x7638ecd0
   14004dd3b:	rex.WRXB
   14004dd3c:	xchg   DWORD PTR ds:[rbp+0x67a8a313],ebx
   14004dd43:	rex.WRXB and r13,QWORD PTR [r14]
   14004dd46:	(bad)  
   14004dd47:	add    ebx,ebp
   14004dd49:	gs cmp eax,0xfd25267
   14004dd4f:	test   al,0x10
   14004dd51:	push   rax
   14004dd52:	(bad)  
   14004dd53:	rex.X lods eax,DWORD PTR ds:[rsi]
   14004dd55:	popf   
   14004dd56:	jle    0x14004dcfc
   14004dd58:	(bad)  
   14004dd59:	jg     0x14004ddcd
   14004dd5b:	and    eax,0x53b6c550
   14004dd60:	push   0x39023be1
   14004dd65:	mov    DWORD PTR [rsi],edx
   14004dd67:	cwde   
   14004dd68:	jl     0x14004dcf3
   14004dd6a:	scas   eax,DWORD PTR es:[rdi]
   14004dd6b:	movabs al,ds:0x288ad0c028163656
   14004dd74:	adc    BYTE PTR [rbp-0xa57ce3c],dh
   14004dd7a:	cmovp  ecx,esi
   14004dd7d:	sbb    ecx,edi
   14004dd7f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004dd80:	movabs eax,ds:0xd4e53aadced2523b
   14004dd89:	pop    rdi
   14004dd8a:	xor    dh,BYTE PTR [rax+riz*1]
   14004dd8d:	(bad)  
   14004dd8e:	mov    eax,0xdefc410a
   14004dd93:	add    dh,BYTE PTR [rcx]
   14004dd95:	rex.R mov ebp,0x9d032336
   14004dd9b:	sbb    esi,DWORD PTR [rax]
   14004dd9d:	retf   
   14004dd9e:	(bad)  
   14004dd9f:	int3   
   14004dda0:	loop   0x14004dd6d
   14004dda2:	vpmulhw xmm2,xmm8,xmm7
   14004dda6:	es xchg ah,ah
   14004dda9:	mov    DWORD PTR [rbx],ecx
   14004ddab:	push   rax
   14004ddac:	xor    al,0x20
   14004ddae:	xlat   BYTE PTR ds:[rbx]
   14004ddaf:	ficom  DWORD PTR [rsi-0x25]
   14004ddb2:	ss jg  0x14004ddbf
   14004ddb5:	stos   DWORD PTR es:[rdi],eax
   14004ddb6:	out    dx,al
   14004ddb7:	pop    rdi
   14004ddb8:	adc    eax,0x3146c7da
   14004ddbd:	xor    edx,esi
   14004ddbf:	cmp    ah,BYTE PTR [rsi-0x66df1b1c]
   14004ddc5:	(bad)  
   14004ddc6:	(bad)  
   14004ddc7:	xor    dl,al
   14004ddc9:	and    eax,0xce4190c1
   14004ddce:	out    0x6f,eax
   14004ddd0:	adc    DWORD PTR [rax-0x1b8943ac],eax
   14004ddd6:	(bad)  
   14004ddd7:	xchg   ecx,eax
   14004ddd8:	cs jne 0x14004de12
   14004dddb:	or     eax,esp
   14004dddd:	fwait
   14004ddde:	movabs ds:0x50061d22b2e51906,eax
   14004dde7:	xor    DWORD PTR [rdi+0x4e],0x51
   14004ddeb:	iret   
   14004ddec:	lahf   
   14004dded:	(bad)  
   14004ddee:	mov    eax,DWORD PTR [rcx-0x3741d814]
   14004ddf4:	(bad)  
   14004ddf5:	loopne 0x14004de6a
   14004ddf7:	sub    eax,DWORD PTR [rax]
   14004ddf9:	fcmovne st,st(6)
   14004ddfb:	(bad)  
   14004ddfc:	and    eax,0x65780048
   14004de01:	jle    0x14004de71
   14004de03:	std    
   14004de04:	call   0x1bd82edcc
   14004de09:	clc    
   14004de0a:	loopne 0x14004ddcd
   14004de0c:	(bad)  
   14004de0d:	jnp    0x14004de15
   14004de0f:	jbe    0x14004ddcd
   14004de11:	mov    es,WORD PTR [rdx+0x18]
   14004de14:	icebp  
   14004de15:	(bad)  
   14004de16:	or     ebp,edx
   14004de18:	lods   al,BYTE PTR ds:[rsi]
   14004de19:	lock mov edi,?
   14004de1c:	or     al,0x7b
   14004de1e:	mov    al,cl
   14004de20:	(bad)  
   14004de21:	xchg   bl,bh
   14004de23:	or     DWORD PTR [r14],r14d
   14004de26:	test   al,0x7a
   14004de28:	out    0x29,eax
   14004de2a:	jns    0x14004de42
   14004de2c:	movabs ds:0x685f79c4c9172659,al
   14004de35:	rcl    DWORD PTR [rdx],cl
   14004de37:	add    al,BYTE PTR [rdx+0x12]
   14004de3a:	repnz (bad) 
   14004de3c:	cdq    
   14004de3d:	push   rbp
   14004de3e:	movabs ds:0x6397a9cb61d46c5c,al
   14004de47:	rex.R xor al,0x6a
   14004de4a:	fnstenv [rbp+riz*4-0x6fe5cde7]
   14004de51:	leave  
   14004de52:	xchg   ebx,eax
   14004de53:	repnz mov ebp,0xa181ee14
   14004de59:	push   rax
   14004de5a:	jo     0x14004ddfa
   14004de5c:	push   0xffffffffa021657e
   14004de61:	(bad)  
   14004de62:	(bad)  
   14004de63:	rcl    BYTE PTR [rbx-0x14e1df1],cl
   14004de69:	std    
   14004de6a:	call   0x182325c8d
   14004de6f:	fiadd  DWORD PTR [rdi+rbp*1]
   14004de72:	rex.WR (bad) 
   14004de74:	push   0x4d7608ea
   14004de79:	sbb    al,0x45
   14004de7b:	addr32 jp 0x14004de9a
   14004de7e:	jno    0x14004dee1
   14004de80:	(bad)  
   14004de81:	(bad)  
   14004de82:	jae    0x14004de8d
   14004de84:	pushf  
   14004de85:	mov    edx,0xdf54b0
   14004de8a:	movabs al,ds:0x84fdb960af9dc926
   14004de93:	or     cl,BYTE PTR [rbp+0x5d81fa64]
   14004de99:	clc    
   14004de9a:	fstp   QWORD PTR [rsp+rax*1]
   14004de9d:	push   0xffffffffef9c8db3
   14004dea2:	rex.WRXB xchg r8,rax
   14004dea4:	adc    eax,0xe58d0081
   14004dea9:	xor    esi,DWORD PTR [rsp+rax*2-0x582ecd69]
   14004deb0:	in     eax,dx
   14004deb1:	scas   eax,DWORD PTR es:[rdi]
   14004deb2:	add    ecx,eax
   14004deb4:	rcr    DWORD PTR [rax+0x850ff43],0x3e
   14004debb:	xchg   ecx,eax
   14004debc:	xchg   eax,esi
   14004debe:	(bad)  
   14004debf:	test   BYTE PTR [rax+0x54cc26fa],dh
   14004dec5:	(bad)  
   14004dec6:	dec    DWORD PTR [rbx]
   14004dec8:	(bad)  
   14004dec9:	rcr    DWORD PTR [rdi+rax*1-0x71],0xff
   14004dece:	(bad)  
   14004decf:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ded1:	rex.WX and rax,rsp
   14004ded4:	ror    ch,cl
   14004ded6:	adc    BYTE PTR [rax-0x1b],cl
   14004ded9:	xchg   esi,eax
   14004deda:	rcl    DWORD PTR [rax+0x45],cl
   14004dedd:	sar    DWORD PTR [rax],0xa
   14004dee0:	ja     0x14004de88
   14004dee2:	or     dl,al
   14004dee4:	sub    eax,0xa172616c
   14004dee9:	ret    0x6e2
   14004deec:	movabs ds:0xe62e5f1a56fa0a4d,al
   14004def5:	movabs al,ds:0x43970dc104571c59
   14004defe:	stc    
   14004deff:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004df00:	and    DWORD PTR [rbp-0x32],eax
   14004df03:	enter  0x5596,0x1
   14004df07:	pop    rax
   14004df08:	xor    al,0x80
   14004df0a:	xchg   ebx,eax
   14004df0b:	sub    al,BYTE PTR [rdx]
   14004df0d:	lea    edx,[rdx-0x7]
   14004df10:	out    0x7a,eax
   14004df12:	cmp    al,0x99
   14004df14:	pop    rbx
   14004df15:	out    0xf9,al
   14004df17:	(bad)  
   14004df18:	push   rdx
   14004df19:	loopne 0x14004df4d
   14004df1b:	movabs eax,ds:0xfb84277e860b806e
   14004df24:	mov    esi,0xcafdd091
   14004df29:	(bad)  
   14004df2a:	mov    cl,0xef
   14004df2c:	sub    BYTE PTR [rsi],ch
   14004df2e:	push   rax
   14004df2f:	xor    al,0xe0
   14004df31:	stc    
   14004df32:	sub    DWORD PTR [rax],eax
   14004df34:	loopne 0x14004dfb2
   14004df36:	push   0xffffffffc9f00180
   14004df3b:	(bad)  
   14004df3c:	(bad)  
   14004df3d:	(bad)  
   14004df3e:	fidiv  DWORD PTR [rbx+rdi*4-0x61]
   14004df42:	fstp   TBYTE PTR [rcx-0x45612099]
   14004df48:	sar    DWORD PTR [rcx-0x6b],cl
   14004df4b:	sub    esi,DWORD PTR [rdi]
   14004df4d:	mov    ebp,0x63a5f241
   14004df52:	mov    ecx,0x1284d650
   14004df57:	xchg   DWORD PTR [rdi-0x695e06a],edx
   14004df5d:	sub    eax,0x58c540b2
   14004df62:	cdq    
   14004df63:	ret    0x8130
   14004df66:	and    al,0x48
   14004df68:	call   0xf4b0d62f
   14004df6d:	fistp  WORD PTR [rsi+0x50]
   14004df70:	jmp    0xf5d434d9
   14004df75:	repnz add ch,BYTE PTR [rdi+riz*4+0x10379a0d]
   14004df7d:	xchg   ecx,eax
   14004df7e:	test   DWORD PTR [rbx-0x6c],ebx
   14004df81:	mov    bh,0x76
   14004df83:	add    DWORD PTR [rdx+0x23],esp
   14004df86:	or     al,0x49
   14004df88:	movabs eax,ds:0xb3b9ca6e6c2044bf
   14004df91:	out    0x36,al
   14004df93:	and    dh,BYTE PTR [rcx]
   14004df95:	add    bl,BYTE PTR [rax+0x7e]
   14004df98:	out    0x61,al
   14004df9a:	cmp    al,0x19
   14004df9c:	cli    
   14004df9d:	mov    cl,0x76
   14004df9f:	vpsubsb ymm14,ymm10,YMMWORD PTR [rax]
   14004dfa3:	movabs ds:0x73d863d31d8d34bb,eax
   14004dfac:	cli    
   14004dfad:	pop    rcx
   14004dfae:	hlt    
   14004dfaf:	rex.WRX lahf 
   14004dfb1:	rex.X pushf 
   14004dfb3:	lahf   
   14004dfb4:	rex.X pop rsp
   14004dfb6:	(bad)  
   14004dfb7:	mov    edi,0xe58e525f
   14004dfbc:	jle    0x14004dfe8
   14004dfbe:	adc    BYTE PTR [rdx-0x5843daf0],ch
   14004dfc4:	lods   al,BYTE PTR ds:[rsi]
   14004dfc5:	jg     0x14004df54
   14004dfc7:	(bad)  
   14004dfc8:	ror    edx,1
   14004dfca:	jle    0x14004dfcf
   14004dfcc:	push   rsp
   14004dfcd:	adc    DWORD PTR [rax+rbp*2+0x6d],esp
   14004dfd1:	and    DWORD PTR [rdi-0x5a017f00],edi
   14004dfd7:	mov    edi,0x2103afef
   14004dfdc:	jb     0x14004dfa7
   14004dfde:	(bad)  
   14004dfdf:	(bad)  
   14004dfe0:	ds mov esp,0xd108520a
   14004dfe6:	adc    ecx,DWORD PTR [rax+0x430a85a2]
   14004dfec:	data16 cld 
   14004dfee:	movsxd ecx,eax
   14004dff0:	(bad)  
   14004dff1:	lahf   
   14004dff2:	rex.X pop rcx
   14004dff4:	call   0x163fd393c
   14004dff9:	and    DWORD PTR [rax-0x73aafd90],edx
   14004dfff:	sahf   
   14004e000:	rex.R push rsp
   14004e002:	test   eax,0x27df022
   14004e007:	and    DWORD PTR [rsi+0x78],eax
   14004e00a:	jg     0x14004dfce
   14004e00c:	(bad)  
   14004e00d:	(bad)  
   14004e00e:	mov    ebp,0x84168022
   14004e013:	(bad)  
   14004e014:	movabs eax,ds:0xe52c9d50f16d1a85
   14004e01d:	jg     0x14004dfb8
   14004e01f:	push   rax
   14004e020:	cs ds retf 
   14004e023:	(bad)  
   14004e024:	fbld   TBYTE PTR [rsi+0xb]
   14004e027:	gs rex.W scas al,BYTE PTR es:[rdi]
   14004e02a:	rex.X
   14004e02b:	rex.WRXB
   14004e02c:	pushw  0x21
   14004e02f:	add    eax,0x9bdec13f
   14004e034:	sti    
   14004e035:	ret    
   14004e036:	and    al,0xab
   14004e038:	mov    gs,ecx
   14004e03a:	fdiv   QWORD PTR [rbx+0x57]
   14004e03d:	(bad)  
   14004e03e:	pop    rdi
   14004e03f:	sub    ebp,DWORD PTR [edi]
   14004e042:	shr    DWORD PTR [rbp+0x38c05a88],cl
   14004e048:	add    dh,dl
   14004e04a:	jrcxz  0x14004e061
   14004e04c:	jns    0x14004e05c
   14004e04e:	in     eax,0xc5
   14004e050:	cdq    
   14004e051:	rex.WR clc 
   14004e053:	test   ebx,ebx
   14004e055:	jg     0x14004e089
   14004e057:	xchg   ebx,eax
   14004e058:	jnp    0x14004e013
   14004e05a:	imul   ebp,esi,0x429f43a1
   14004e060:	outs   dx,BYTE PTR ds:[rsi]
   14004e061:	adc    dl,BYTE PTR [rdx+0x60051e5e]
   14004e067:	fstp   TBYTE PTR [rcx+0x3b9e4209]
   14004e06d:	xor    eax,0x3be474be
   14004e072:	(bad)  
   14004e074:	outs   dx,BYTE PTR ds:[rsi]
   14004e075:	fist   WORD PTR [rbp+0x57]
   14004e078:	iret   
   14004e079:	push   rsi
   14004e07a:	cmp    eax,0x310baf7d
   14004e07f:	hlt    
   14004e080:	rex.WXB ror QWORD PTR [r8-0xfebfd1b],1
   14004e087:	lea    esi,[rbx+0x54]
   14004e08a:	rcr    BYTE PTR [rdx+0x5735ba36],0x46
   14004e091:	and    eax,0x96ab0ba7
   14004e096:	rex.RXB (bad) 
   14004e098:	and    di,ax
   14004e09b:	or     BYTE PTR [rcx+0xb],bl
   14004e09e:	add    DWORD PTR [rax-0x12bec93b],edx
   14004e0a4:	rex.B xlat BYTE PTR ds:[rbx]
   14004e0a6:	add    DWORD PTR [rsi+0x4ed5b929],ebp
   14004e0ac:	add    BYTE PTR [rdx],ah
   14004e0ae:	(bad)  
   14004e0af:	(bad)  
   14004e0b0:	stc    
   14004e0b1:	add    DWORD PTR [rdi],esp
   14004e0b3:	adc    eax,0xf6538a05
   14004e0b8:	(bad)  
   14004e0b9:	push   rsp
   14004e0ba:	jae    0x14004e103
   14004e0bc:	mov    edi,0x8052380b
   14004e0c1:	jle    0x14004e062
   14004e0c3:	sbb    DWORD PTR [rbx+0x23f5e840],0x95c9e18f
   14004e0cd:	or     eax,0x3b7d5c2c
   14004e0d2:	(bad)  
   14004e0d3:	mov    edx,0xd3cb9b0f
   14004e0d8:	call   0xfd931a78
   14004e0dd:	adc    ecx,edi
   14004e0df:	movabs ds:0xeae224dce238e27f,al
   14004e0e8:	add    dl,al
   14004e0ea:	lods   al,BYTE PTR ds:[rsi]
   14004e0eb:	xor    DWORD PTR [rcx+rdi*4+0x75fe31a7],0xffffff88
   14004e0f3:	test   al,0xc1
   14004e0f5:	test   al,0x74
   14004e0f7:	rex.WB mov r8b,0x8a
   14004e0fa:	adc    esp,DWORD PTR [rdx-0x20]
   14004e0fd:	push   rsi
   14004e0fe:	xchg   ebp,eax
   14004e0ff:	pop    rdi
   14004e100:	add    eax,0x2ef3fb8
   14004e105:	add    al,0x12
   14004e107:	rex.WXB sbb al,BYTE PTR [r10]
   14004e10a:	movabs ds:0xc877f7cd4404fdf9,al
   14004e113:	scas   eax,DWORD PTR es:[rdi]
   14004e114:	add    dl,BYTE PTR [rdx]
   14004e116:	rex.XB add BYTE PTR [r13-0x6a],al
   14004e11a:	jge    0x14004e111
   14004e11c:	cmp    BYTE PTR [rbp+0xa441216],dl
   14004e122:	movabs ds:0xfe0dfdc5bef88a00,al
   14004e12b:	(bad)  
   14004e12c:	cwde   
   14004e12d:	mov    DWORD PTR [rsi],edi
   14004e12f:	rex.WB adc cl,r10b
   14004e132:	or     ah,BYTE PTR [rcx]
   14004e134:	add    al,0x53
   14004e136:	or     al,0xd1
   14004e138:	xchg   ebp,eax
   14004e139:	mov    WORD PTR [rax],fs
   14004e13b:	add    al,0x6d
   14004e13d:	or     edx,DWORD PTR [rsi]
   14004e13f:	sub    eax,0x35f640c7
   14004e144:	in     al,0xc1
   14004e146:	rex.RX
   14004e147:	data16 rex.R
   14004e149:	repnz adc BYTE PTR [rbx-0x6f79d607],bl
   14004e150:	vpavgb ymm11,ymm11,YMMWORD PTR [rdi+rax*1+0xbb13590]
   14004e159:	mov    ch,0xa1
   14004e15b:	mov    DWORD PTR [rdx+0x485d9603],eax
   14004e161:	(bad)  
   14004e162:	pushf  
   14004e163:	mov    edi,0x2d9dcacf
   14004e168:	(bad)  
   14004e169:	and    ch,ah
   14004e16b:	iret   
   14004e16c:	fs (bad) 
   14004e16e:	jmp    0xdacd091b
   14004e173:	lea    ecx,[rsi-0x133497ea]
   14004e179:	(bad)  
   14004e17a:	ins    DWORD PTR es:[rdi],dx
   14004e17b:	xchg   QWORD PTR [r10+0x36b9653],rsp
   14004e182:	push   rdi
   14004e183:	xor    ah,ch
   14004e185:	push   QWORD PTR [rdi-0x4a9261ad]
   14004e18b:	sub    eax,DWORD PTR [rdx+0x67258191]
   14004e191:	and    ch,bl
   14004e193:	mov    bh,0x2
   14004e195:	shr    dh,cl
   14004e197:	rex.WRX rol dil,0x1e
   14004e19b:	ret    0x12d0
   14004e19e:	or     QWORD PTR [rax+rcx*1-0x3a420fec],r15
   14004e1a6:	adc    ecx,edi
   14004e1a8:	rex.XB adc BYTE PTR [r10],al
   14004e1ab:	pop    rax
   14004e1ac:	stc    
   14004e1ad:	jmp    0x14004e1ee
   14004e1af:	std    
   14004e1b0:	enter  0x9e1f,0x78
   14004e1b4:	cld    
   14004e1b5:	xchg   ecx,eax
   14004e1b6:	lahf   
   14004e1b7:	in     al,dx
   14004e1b8:	outs   dx,BYTE PTR ds:[rsi]
   14004e1b9:	ins    BYTE PTR es:[rdi],dx
   14004e1ba:	jl     0x14004e167
   14004e1bc:	shl    DWORD PTR [rdi+0x59837e44],1
   14004e1c2:	rcr    DWORD PTR [rdx+0x3285cfbf],cl
   14004e1c8:	adc    bl,cl
   14004e1ca:	lahf   
   14004e1cb:	jb     0x14004e1e3
   14004e1cd:	lahf   
   14004e1ce:	jle    0x14004e196
   14004e1d0:	mov    edx,0xe4fd265f
   14004e1d5:	jnp    0x14004e230
   14004e1d7:	(bad)  
   14004e1d8:	test   esp,edi
   14004e1da:	mov    bh,0xd1
   14004e1dc:	mov    BYTE PTR [rax-0x7d],al
   14004e1df:	cli    
   14004e1e0:	and    al,0xf
   14004e1e2:	cmp    eax,DWORD PTR [rax-0x4bb9594b]
   14004e1e8:	outs   dx,DWORD PTR ds:[rsi]
   14004e1e9:	sub    r14b,BYTE PTR [rdi+rbp*2+0x28711e2e]
   14004e1f1:	pop    rdi
   14004e1f2:	pop    rsp
   14004e1f3:	adc    edi,ecx
   14004e1f5:	scas   eax,DWORD PTR es:[rdi]
   14004e1f6:	rex.WR (bad) 
   14004e1f8:	repz mul DWORD PTR [rbp-0x72aaf662]
   14004e1ff:	int    0x63
   14004e201:	(bad)  
   14004e202:	jrcxz  0x14004e19d
   14004e204:	test   DWORD PTR [rip+0x3b735ecc],esp        # 0x17b7840d6
   14004e20a:	cmp    bl,BYTE PTR [rbp+0x332b3401]
   14004e210:	call   0xdecc01b2
   14004e215:	jmp    0xcf54d66b
   14004e21a:	movabs ds:0xd77707995846985a,eax
   14004e223:	movabs al,ds:0x28215ad5b27d65ed
   14004e22c:	sbb    DWORD PTR [rsi-0x5c],edi
   14004e22f:	sbb    DWORD PTR [rsi-0x64],edi
   14004e232:	loope  0x14004e2b2
   14004e234:	sbb    edx,esi
   14004e236:	repz jo 0x14004e24d
   14004e239:	cmp    al,0x95
   14004e23b:	(bad)  
   14004e23c:	pop    rbx
   14004e23d:	popf   
   14004e23e:	xor    DWORD PTR [rdx+0x6e],ebx
   14004e241:	adc    al,0xe9
   14004e243:	xchg   edi,eax
   14004e244:	xchg   esi,eax
   14004e245:	rex.X jmp 0x14004e1d8
   14004e248:	pop    rsi
   14004e249:	punpcklbw mm5,DWORD PTR [rax-0x71a1f3bf]
   14004e250:	fucom  st(7)
   14004e252:	jb     0x14004e2b4
   14004e254:	rex.XB sbb eax,DWORD PTR [r8+0x26]
   14004e258:	mov    ch,0xe4
   14004e25a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e25b:	(bad)  
   14004e25c:	pop    rdx
   14004e25d:	hlt    
   14004e25e:	shl    DWORD PTR [rdx],0x3e
   14004e261:	and    eax,ebp
   14004e263:	js     0x14004e2c0
   14004e265:	sahf   
   14004e266:	rex.RB push r14
   14004e268:	(bad)  
   14004e269:	in     eax,dx
   14004e26a:	(bad)  
   14004e26b:	or     DWORD PTR [rbp-0x66fdd33a],esi
   14004e271:	leave  
   14004e272:	mov    dl,0x62
   14004e274:	jae    0x14004e277
   14004e276:	sub    eax,0xf7016f14
   14004e27b:	loope  0x14004e220
   14004e27d:	xchg   esi,eax
   14004e27e:	rex.WB
   14004e27f:	fs loopne 0x14004e28e
   14004e282:	(bad)  
   14004e283:	adc    eax,0x7a0a0ca6
   14004e288:	(bad)  
   14004e289:	(bad)  [rip+0xffffffffbef6a022]        # 0xfefb82b1
   14004e28f:	sub    eax,0xbe582b46
   14004e294:	(bad)  
   14004e295:	in     eax,0x67
   14004e297:	out    dx,eax
   14004e298:	test   esp,0x5f65b4ad
   14004e29e:	or     al,0x95
   14004e2a0:	bnd jns 0x14004e287
   14004e2a3:	jns    0x14004e27e
   14004e2a5:	jae    0x14004e30f
   14004e2a7:	fbld   TBYTE PTR [rbp-0x1cacae49]
   14004e2ad:	call   0x1578429ca
   14004e2b2:	mov    BYTE PTR [rax+0x1],dl
   14004e2b5:	xchg   edi,eax
   14004e2b6:	fadd   st(5),st
   14004e2b8:	push   rbx
   14004e2b9:	gs adc eax,0x7809ca8b
   14004e2c0:	loope  0x14004e2ca
   14004e2c2:	shl    BYTE PTR [rsi-0x56fb44cd],0xfc
   14004e2c9:	fwait
   14004e2ca:	cmp    al,0xfa
   14004e2cc:	fsubr  st(4),st
   14004e2ce:	cld    
   14004e2cf:	(bad)  
   14004e2d0:	test   eax,0x3c1c8f4f
   14004e2d5:	sbb    al,0xea
   14004e2d7:	sahf   
   14004e2d8:	sahf   
   14004e2d9:	fwait
   14004e2da:	add    al,0x7d
   14004e2dc:	out    0xc7,eax
   14004e2de:	jmp    0x183fce5ce
   14004e2e3:	(bad)  
   14004e2e4:	adc    edi,DWORD PTR [rsi-0x2a]
   14004e2e7:	pop    rsp
   14004e2e8:	xor    al,0x6b
   14004e2ea:	stc    
   14004e2eb:	int3   
   14004e2ec:	and    eax,DWORD PTR [rdi+rdx*2]
   14004e2ef:	jmp    0x14004e361
   14004e2f1:	fistp  WORD PTR [rsi]
   14004e2f3:	stos   BYTE PTR es:[rdi],al
   14004e2f4:	in     eax,0x2b
   14004e2f6:	outs   dx,WORD PTR ds:[rsi]
   14004e2f8:	mov    cl,0x4c
   14004e2fa:	(bad)
   14004e2fd:	jl     0x14004e37e
   14004e2ff:	mov    al,0x56
   14004e301:	adc    ecx,DWORD PTR [rdx]
   14004e303:	cld    
   14004e304:	(bad)  
   14004e305:	mov    dh,0x3d
   14004e307:	(bad)  
   14004e308:	xor    eax,DWORD PTR [rcx+0x3f]
   14004e30b:	ja     0x14004e31c
   14004e30d:	(bad)
   14004e310:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e311:	sbb    al,0x22
   14004e313:	and    al,0x81
   14004e315:	jnp    0x14004e35c
   14004e317:	lock push rdx
   14004e319:	mov    edx,DWORD PTR ds:[rcx]
   14004e31c:	int    0xf8
   14004e31e:	jae    0x14004e398
   14004e320:	jbe    0x14004e39c
   14004e322:	or     dl,BYTE PTR [rbx]
   14004e324:	push   rdi
   14004e325:	mov    edi,0x2303fd11
   14004e32a:	call   0x10e2710dd
   14004e32f:	popf   
   14004e330:	ret    0xa9ee
   14004e333:	movabs ds:0xc204ecce86389c18,eax
   14004e33c:	movabs ds:0x3c4b13fab641ea2c,al
   14004e345:	mov    edi,0x515010e
   14004e34a:	(bad)  
   14004e34b:	(bad)  
   14004e34c:	sbb    ch,BYTE PTR [rsp+rax*4+0x28ff429f]
   14004e353:	in     eax,dx
   14004e354:	mov    edi,0x416620d4
   14004e359:	test   eax,edi
   14004e35b:	std    
   14004e35c:	sbb    al,0x2d
   14004e35e:	fld    TBYTE PTR [rdi-0x1bd624f8]
   14004e364:	(bad)  
   14004e366:	mov    esi,0x988722bd
   14004e36b:	(bad)  
   14004e36c:	ja     0x14004e330
   14004e36e:	nop
   14004e36f:	(bad)  
   14004e370:	xor    dl,BYTE PTR [rbx-0x6b6efe48]
   14004e376:	adc    ah,dl
   14004e378:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e379:	sahf   
   14004e37a:	test   al,0x3c
   14004e37c:	cmp    esp,0xffffff95
   14004e37f:	xchg   esi,eax
   14004e380:	pop    rsi
   14004e381:	jge    0x14004e382
   14004e383:	pop    rax
   14004e384:	fs (bad) 
   14004e386:	adc    ah,BYTE PTR [rcx+0x8511252]
   14004e38c:	ret    0x8990
   14004e38f:	rex.X cmp esi,DWORD PTR [rdi-0x4c]
   14004e393:	imul   esi,DWORD PTR [rdx+0x79940ca],0x65
   14004e39a:	jb     0x14004e3a9
   14004e39c:	or     esp,DWORD PTR [rcx+rcx*8-0x37]
   14004e3a0:	ss test edx,edx
   14004e3a3:	sub    ebp,DWORD PTR [rip+0xffffffffce14dbbf]        # 0x10e19bf68
   14004e3a9:	or     BYTE PTR [rdi-0x1b],al
   14004e3ac:	enter  0x8fa6,0xcf
   14004e3b0:	adc    DWORD PTR [rdx-0x37],esi
   14004e3b3:	sub    cl,BYTE PTR [rsi]
   14004e3b5:	(bad)  
   14004e3b6:	test   BYTE PTR [rdi],bl
   14004e3b8:	sub    al,0x5f
   14004e3ba:	and    eax,0x631f4e2b
   14004e3bf:	xchg   ah,al
   14004e3c1:	cwde   
   14004e3c2:	lods   eax,DWORD PTR ds:[rsi]
   14004e3c3:	(bad)  
   14004e3c4:	xchg   ebp,eax
   14004e3c5:	loope  0x14004e3ef
   14004e3c7:	rol    BYTE PTR [rdx-0x77],0x26
   14004e3cb:	add    eax,0xbefe32d
   14004e3d0:	rex.B adc al,0x2
   14004e3d3:	scas   eax,DWORD PTR es:[rdi]
   14004e3d4:	cmp    eax,0x52fc881d
   14004e3d9:	loopne 0x14004e425
   14004e3db:	ret    0xb0d0
   14004e3de:	sub    DWORD PTR [rbx+rax*2+0x26],ecx
   14004e3e2:	and    al,0x19
   14004e3e4:	mov    ah,0x15
   14004e3e6:	jae    0x14004e3cf
   14004e3e8:	push   rbx
   14004e3e9:	mov    ah,0xff
   14004e3eb:	jrcxz  0x14004e458
   14004e3ed:	mov    BYTE PTR [rbp-0x44],bl
   14004e3f0:	rex.W xor sil,al
   14004e3f3:	jnp    0x14004e44c
   14004e3f5:	add    BYTE PTR [rsi-0x27f6a4b],dh
   14004e3fb:	out    dx,eax
   14004e3fc:	movabs al,ds:0xfc3d8fd7e617568
   14004e405:	jle    0x14004e46a
   14004e407:	clc    
   14004e408:	rol    cl,0x27
   14004e40b:	jp     0x14004e483
   14004e40d:	in     al,dx
   14004e40e:	mov    eax,0x30c2891
   14004e413:	(bad)  
   14004e414:	stc    
   14004e415:	or     ecx,DWORD PTR [rbx-0x60]
   14004e418:	push   rsi
   14004e419:	pop    rbp
   14004e41a:	test   bh,bl
   14004e41c:	mov    esi,0x8cc9a7cb
   14004e421:	jg     0x14004e421
   14004e423:	mov    WORD PTR [rax+0x31],cs
   14004e426:	nop
   14004e427:	pop    rdx
   14004e428:	or     eax,0xc5cf0b52
   14004e42e:	movabs al,ds:0xc5673192cd485e91
   14004e437:	and    r13b,al
   14004e43a:	push   rsi
   14004e43b:	(bad)
   14004e43e:	sub    DWORD PTR [rcx+0x4429f60c],ecx
   14004e444:	jae    0x14004e42e
   14004e446:	xchg   esi,eax
   14004e447:	pop    rsp
   14004e448:	jns    0x14004e462
   14004e44a:	sub    al,0x2c
   14004e44c:	imul   eax,DWORD PTR [rdi],0xffffffa8
   14004e44f:	(bad)  
   14004e450:	and    BYTE PTR [rbp-0x61],cl
   14004e453:	shl    BYTE PTR [rbx+0x7e314627],0xf9
   14004e45a:	lods   eax,DWORD PTR ds:[rsi]
   14004e45b:	call   0x11d149e3f
   14004e460:	cmc    
   14004e461:	and    eax,0xc31c6e60
   14004e466:	shl    DWORD PTR [rbx+0x147d3e18],cl
   14004e46c:	popf   
   14004e46d:	(bad)  [rcx]
   14004e46f:	(bad)  
   14004e470:	vaddsubpd xmm11,xmm12,xmm2
   14004e474:	add    al,al
   14004e476:	fwait
   14004e477:	scas   al,BYTE PTR es:[rdi]
   14004e478:	pop    rsp
   14004e479:	add    bl,BYTE PTR [rbx+0x39a80fe5]
   14004e47f:	stc    
   14004e480:	stos   BYTE PTR es:[rdi],al
   14004e481:	mov    esi,0xefcb5235
   14004e486:	(bad)  
   14004e487:	and    edi,eax
   14004e489:	jg     0x14004e437
   14004e48b:	jrcxz  0x14004e43b
   14004e48d:	test   esi,ebx
   14004e48f:	or     al,0x22
   14004e491:	jnp    0x14004e501
   14004e493:	(bad)  
   14004e494:	mov    dl,0xe5
   14004e496:	jbe    0x14004e4fd
   14004e498:	adc    BYTE PTR [rcx+rbx*8-0x60a2008a],al
   14004e49f:	and    ebp,eax
   14004e4a1:	loopne 0x14004e4bf
   14004e4a3:	mov    ?,r9d
   14004e4a6:	sbb    edx,DWORD PTR [rdi-0x60]
   14004e4a9:	pushf  
   14004e4aa:	xchg   bl,al
   14004e4ac:	jmp    QWORD PTR [rax-0x2355b611]
   14004e4b2:	xchg   esp,eax
   14004e4b3:	in     eax,0xaf
   14004e4b5:	xchg   esp,eax
   14004e4b6:	cmc    
   14004e4b7:	(bad)  
   14004e4b8:	(bad)  
   14004e4b9:	ja     0x14004e49b
   14004e4bb:	cmp    al,0x1
   14004e4bd:	gs out 0xdf,al
   14004e4c0:	loopne 0x14004e500
   14004e4c2:	vmulps ymm3,ymm0,ymm1
   14004e4c6:	jno    0x14004e490
   14004e4c8:	sar    DWORD PTR [rbp+0x2d],cl
   14004e4cb:	add    ah,BYTE PTR [rax+0x68]
   14004e4ce:	add    esp,esp
   14004e4d0:	push   rcx
   14004e4d1:	adc    dl,0xe2
   14004e4d4:	xchg   esi,eax
   14004e4d5:	push   0x4e1e4082
   14004e4da:	xor    al,0xa3
   14004e4dc:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e4de:	lock movabs ds:0x55f5e4a6199b3414,eax
   14004e4e8:	pop    rcx
   14004e4e9:	(bad)  
   14004e4ea:	outs   dx,BYTE PTR ds:[rsi]
   14004e4eb:	ret    0xdfaf
   14004e4ee:	mov    ecx,0x7cf625
   14004e4f3:	sbb    eax,0x9ad804ff
   14004e4f8:	(bad)  
   14004e4f9:	mov    rax,QWORD PTR [r14+0x46002472]
   14004e500:	movsxd esp,DWORD PTR [rcx]
   14004e502:	scas   eax,DWORD PTR es:[rdi]
   14004e503:	lea    ebx,[rcx-0x369a59af]
   14004e509:	adc    ch,ah
   14004e50b:	ds cmp ebx,ecx
   14004e50e:	test   DWORD PTR [rcx+0x18434293],esp
   14004e514:	fimul  DWORD PTR [rcx]
   14004e516:	fcomp  QWORD PTR [rsp+rdi*1]
   14004e519:	sbb    BYTE PTR [rsi],dh
   14004e51b:	out    dx,al
   14004e51c:	sti    
   14004e51d:	xor    dh,BYTE PTR [rsi-0x41]
   14004e520:	call   0xef1c65c1
   14004e525:	add    BYTE PTR [rax+0x3c2e15e7],al
   14004e52b:	stc    
   14004e52c:	in     al,0xe3
   14004e52e:	rex.RXB (bad) 
   14004e530:	int    0xcd
   14004e532:	iret   
   14004e533:	or     al,0xee
   14004e535:	fnstenv [rdi-0x14158bc9]
   14004e53b:	jne    0x14004e4d1
   14004e53d:	hlt    
   14004e53e:	(bad)  
   14004e53f:	xor    ebp,DWORD PTR [rax+0x13041a49]
   14004e545:	gs push rax
   14004e547:	(bad)  
   14004e548:	movabs eax,ds:0xf9c0c10ce71fc178
   14004e551:	loopne 0x14004e50d
   14004e553:	fwait
   14004e554:	rex jg 0x14004e579
   14004e557:	(bad)  
   14004e558:	ins    BYTE PTR es:[rdi],dx
   14004e559:	sar    BYTE PTR [rdx],0xaf
   14004e55c:	rex.W jrcxz 0x14004e56b
   14004e55f:	jae    0x14004e56a
   14004e561:	push   rdx
   14004e562:	rcl    al,cl
   14004e564:	lahf   
   14004e565:	(bad)  
   14004e566:	ror    DWORD PTR [rax+0x2a124899],1
   14004e56c:	rex.X
   14004e56d:	repnz or ch,BYTE PTR [rcx+0x5a40979c]
   14004e574:	or     edx,DWORD PTR [rax+0x22366fa1]
   14004e57a:	add    al,0x8a
   14004e57c:	adc    eax,0x47147278
   14004e581:	rex.WRX lahf 
   14004e583:	(bad)  
   14004e584:	leave  
   14004e585:	rex.WXB outs dx,DWORD PTR ds:[rsi]
   14004e587:	(bad)  
   14004e588:	mov    fs,ecx
   14004e58a:	add    ecx,DWORD PTR [rax-0x65]
   14004e58d:	imul   ebp,DWORD PTR [rax-0x1a],0x4e
   14004e591:	(bad)  
   14004e592:	push   0x27bb0c7a
   14004e597:	mov    cs,WORD PTR [rax]
   14004e599:	jmp    0xf8881655
   14004e59e:	mov    dl,0x20
   14004e5a0:	icebp  
   14004e5a1:	jle    0x14004e5f9
   14004e5a3:	ror    BYTE PTR [rdi+0x54050e80],cl
   14004e5a9:	and    DWORD PTR [rax-0x6cbf83b],ecx
   14004e5af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e5b0:	xchg   ecx,eax
   14004e5b1:	add    eax,0x7f7e213e
   14004e5b6:	and    BYTE PTR [rcx],ah
   14004e5b8:	inc    ah
   14004e5ba:	cli    
   14004e5bb:	(bad)  
   14004e5bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e5bd:	lahf   
   14004e5be:	loope  0x14004e632
   14004e5c0:	movsxd esi,edx
   14004e5c2:	fst    DWORD PTR [rsp+rax*4]
   14004e5c5:	jo     0x14004e590
   14004e5c7:	xchg   ecx,eax
   14004e5c8:	test   ch,bh
   14004e5ca:	(bad)  
   14004e5cb:	movabs ds:0x2c82b00c0b52d519,al
   14004e5d4:	rex.WRXB (bad) 
   14004e5d6:	and    cl,dl
   14004e5d8:	jns    0x14004e5d9
   14004e5da:	sub    bl,BYTE PTR [rax+0x39]
   14004e5dd:	out    dx,eax
   14004e5de:	(bad)  
   14004e5e0:	add    dh,BYTE PTR [rdx-0x21]
   14004e5e3:	lahf   
   14004e5e4:	(bad)  
   14004e5e5:	in     al,0xf5
   14004e5e7:	imul   ebx,DWORD PTR [rbp-0x681a575],0x5d
   14004e5ee:	adc    eax,0x48832082
   14004e5f3:	test   al,0x5c
   14004e5f5:	sbb    eax,ebp
   14004e5f7:	jno    0x14004e65b
   14004e5f9:	rex.RX adc BYTE PTR [rsi-0x7],r15b
   14004e5fd:	rex.B
   14004e5fe:	repz (bad) 
   14004e600:	(bad)  
   14004e601:	rex.RX and al,0xe
   14004e604:	xchg   ebx,eax
   14004e605:	or     eax,0x68429819
   14004e60a:	push   rbp
   14004e60b:	xor    al,0xe9
   14004e60d:	jle    0x14004e675
   14004e60f:	cmp    BYTE PTR [rcx+0x28],dl
   14004e612:	xchg   edx,eax
   14004e613:	or     al,0x2c
   14004e615:	xor    ecx,DWORD PTR gs:[rax]
   14004e618:	fidiv  WORD PTR [rdx]
   14004e61a:	cvtdq2ps xmm4,XMMWORD PTR [rsi-0x54]
   14004e61e:	out    dx,eax
   14004e61f:	stos   BYTE PTR es:[rdi],al
   14004e620:	push   rsi
   14004e621:	cmp    ebx,DWORD PTR [rcx-0x48]
   14004e624:	rex.WRX test QWORD PTR [rdx],r14
   14004e627:	add    esi,edx
   14004e629:	xor    ecx,edi
   14004e62b:	fcom   QWORD PTR [rcx+0x2]
   14004e62e:	mov    esp,0xcd2ec02e
   14004e633:	jb     0x14004e689
   14004e635:	mov    edi,?
   14004e637:	iret   
   14004e638:	enter  0xe097,0xfe
   14004e63c:	xchg   BYTE PTR [rdx+0x6b8a8184],dl
   14004e642:	sub    esi,esp
   14004e644:	mov    ebp,0x54df0629
   14004e649:	pop    rsi
   14004e64a:	sbb    BYTE PTR [rbp+rcx*1-0x5e],bl
   14004e64e:	pop    rcx
   14004e64f:	clc    
   14004e650:	sbb    BYTE PTR [rsi],ch
   14004e652:	stc    
   14004e653:	rex.WX sub QWORD PTR [rbx+0x7f],rsp
   14004e657:	jnp    0x14004e663
   14004e659:	shl    BYTE PTR [rsi+0x7e841333],0x81
   14004e660:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e662:	(bad)  
   14004e663:	xchg   edi,eax
   14004e664:	(bad)  
   14004e665:	ds hlt 
   14004e667:	shl    BYTE PTR [rdi-0x9],0x5d
   14004e66b:	jns    0x14004e662
   14004e66d:	push   rsp
   14004e66e:	rex.WRXB pop r15
   14004e670:	dec    DWORD PTR [rbp+0x20]
   14004e673:	hlt    
   14004e674:	(bad)  
   14004e675:	int    0xac
   14004e677:	xor    bl,BYTE PTR [rax+0x4e]
   14004e67a:	data16 ficom WORD PTR [rbp+rdx*1-0x49]
   14004e67f:	sbb    BYTE PTR [rdi-0x6b],bh
   14004e682:	data16 jns 0x14004e6fb
   14004e685:	(bad)
   14004e688:	and    al,0x16
   14004e68a:	fidivr WORD PTR [rbx-0x6b68e8ef]
   14004e690:	cwde   
   14004e691:	push   rcx
   14004e692:	rex.XB loopne 0x14004e709
   14004e695:	pop    rsi
   14004e696:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e697:	mov    edx,DWORD PTR [rax]
   14004e699:	push   rsp
   14004e69a:	jne    0x14004e700
   14004e69c:	gs pop r10
   14004e69f:	cmp    BYTE PTR [rcx+rbp*4+0x7e],ah
   14004e6a3:	ds pop rsp
   14004e6a5:	and    dl,BYTE PTR [rax+0x60]
   14004e6a8:	out    0x8e,eax
   14004e6aa:	lods   al,BYTE PTR ds:[rsi]
   14004e6ab:	inc    BYTE PTR [rcx+0xd550840]
   14004e6b1:	ds stc 
   14004e6b3:	xor    al,0x9e
   14004e6b5:	cmp    eax,0x97e30c71
   14004e6ba:	fld    QWORD PTR [rdx+0x4803e181]
   14004e6c0:	fisttp QWORD PTR [rip+0x604c2e6c]        # 0x1a0511532
   14004e6c6:	jo     0x14004e72e
   14004e6c8:	or     al,0xbb
   14004e6ca:	es (bad) 
   14004e6cc:	movabs al,ds:0xe5aa34c2e224ea6f
   14004e6d5:	add    eax,0xd7a2b370
   14004e6da:	sub    dl,ch
   14004e6dc:	scas   al,BYTE PTR es:[rdi]
   14004e6dd:	xchg   BYTE PTR [rax+0x3a31157e],dl
   14004e6e3:	sub    al,0x42
   14004e6e5:	pop    rcx
   14004e6e6:	push   rcx
   14004e6e7:	and    ecx,DWORD PTR [rcx]
   14004e6e9:	rex test ebp,esp
   14004e6ec:	outs   dx,DWORD PTR ds:[rsi]
   14004e6ed:	sub    eax,0x159665ef
   14004e6f2:	sbb    DWORD PTR [rsi],edx
   14004e6f4:	(bad)  
   14004e6f5:	rex sti 
   14004e6f7:	stc    
   14004e6f8:	jmp    0x12500aff4
   14004e6fd:	xor    eax,0xc95880fa
   14004e702:	cli    
   14004e703:	ja     0x14004e6a6
   14004e705:	and    dh,bh
   14004e707:	movabs ds:0x84662220314ebb2,al
   14004e710:	sub    al,BYTE PTR [rax+0x31]
   14004e713:	adc    BYTE PTR [rdx-0x3bf80498],ch
   14004e719:	sub    ch,dh
   14004e71b:	add    al,0x16
   14004e71d:	add    cl,BYTE PTR [rsi+rax*2-0x54a36e02]
   14004e724:	jl     0x14004e73c
   14004e726:	rex push rcx
   14004e728:	sub    al,0x76
   14004e72a:	in     eax,0xd6
   14004e72c:	lahf   
   14004e72d:	push   rsp
   14004e72e:	imul   edx,DWORD PTR [rax+rcx*4],0x9605a344
   14004e735:	(bad)  
   14004e736:	in     al,0x55
   14004e738:	mov    eax,DWORD PTR [rbp+0x8]
   14004e73b:	shr    BYTE PTR [rdi],1
   14004e73d:	(bad)  
   14004e73e:	jb     0x14004e75e
   14004e740:	mul    DWORD PTR [rbx-0x4]
   14004e743:	jae    0x14004e6ed
   14004e745:	(bad)  
   14004e746:	enter  0xd2c,0xb5
   14004e74a:	and    al,0x1f
   14004e74c:	jns    0x14004e77a
   14004e74e:	cmc    
   14004e74f:	(bad)  
   14004e750:	int3   
   14004e751:	sbb    ebp,esi
   14004e753:	xchg   ebp,eax
   14004e754:	fcom   st(5)
   14004e756:	jg     0x14004e7bf
   14004e758:	enter  0x540f,0x44
   14004e75c:	xchg   DWORD PTR [rax],ebx
   14004e75e:	(bad)
   14004e762:	ss bswap eax
   14004e765:	and    eax,DWORD PTR [rbx]
   14004e767:	sub    BYTE PTR [rbp-0x3aa579e1],al
   14004e76d:	test   BYTE PTR [rax-0x47],bh
   14004e770:	xor    bl,bh
   14004e772:	(bad)  
   14004e773:	xchg   edx,eax
   14004e774:	in     al,dx
   14004e775:	sar    DWORD PTR [rdx*8-0x24248d84],0xa0
   14004e77d:	repz sbb al,0xea
   14004e780:	shl    BYTE PTR [rdx+0x1006572a],cl
   14004e786:	cmp    DWORD PTR [rip+0x7bbea29f],ecx        # 0x1bbc38a2b
   14004e78c:	(bad)  
   14004e78d:	movabs ds:0x5585c04e545ff,al
   14004e796:	pushf  
   14004e797:	xlat   BYTE PTR ds:[rbx]
   14004e798:	and    eax,0x3f8e9000
   14004e79d:	neg    ch
   14004e79f:	(bad)  
   14004e7a0:	jp     0x14004e7a8
   14004e7a2:	jbe    0x14004e820
   14004e7a4:	jge    0x14004e806
   14004e7a6:	out    0xf0,eax
   14004e7a8:	mov    ch,0x44
   14004e7aa:	loope  0x14004e73c
   14004e7ac:	pop    rcx
   14004e7ad:	jno    0x14004e812
   14004e7af:	(bad)  
   14004e7b0:	in     eax,0xc6
   14004e7b2:	fcmovnb st,st(5)
   14004e7b4:	cmp    al,0x79
   14004e7b6:	xchg   ecx,eax
   14004e7b7:	rex.WRB fldenv [r15+0x511b9e41]
   14004e7be:	and    DWORD PTR [rax],ebx
   14004e7c0:	xchg   ebx,eax
   14004e7c1:	and    eax,0x1aefc8bd
   14004e7c6:	or     eax,0x6fc555ef
   14004e7cb:	sbb    edx,DWORD PTR [rsi-0x15]
   14004e7ce:	scas   eax,DWORD PTR es:[rdi]
   14004e7cf:	mov    esi,0x9fcb0bf
   14004e7d4:	or     ecx,eax
   14004e7d6:	add    eax,0x77bfcd9d
   14004e7db:	and    eax,0x83023990
   14004e7e0:	(bad)
   14004e7e4:	ror    BYTE PTR [rcx-0x2b330f59],cl
   14004e7ea:	adc    al,0x4e
   14004e7ec:	pop    rsi
   14004e7ed:	jno    0x14004e80a
   14004e7ef:	(bad)  
   14004e7f0:	rex.RXB test BYTE PTR [r9+0x16d62e9b],0x26
   14004e7f8:	shl    DWORD PTR [rdi],1
   14004e7fa:	jnp    0x14004e7fe
   14004e7fc:	jnp    0x14004e824
   14004e7fe:	(bad)  
   14004e7ff:	movabs al,ds:0xaee8fcb52a04f27f
   14004e808:	rcl    BYTE PTR [rdx+0x6149087d],0x7f
   14004e80f:	rex.R
   14004e810:	rex.WRB mov WORD PTR [r10+0x53],ds
   14004e814:	xchg   ecx,eax
   14004e815:	and    eax,0xdc3dbfd6
   14004e81a:	out    0xd0,eax
   14004e81c:	pop    rdi
   14004e81d:	add    eax,0xcc7b92d1
   14004e822:	repnz fwait
   14004e824:	pop    rbp
   14004e825:	repz hlt 
   14004e827:	pop    rsi
   14004e828:	push   rdx
   14004e829:	call   FWORD PTR [rdi-0x55c029f6]
   14004e82f:	lock xor DWORD PTR [rdx],0xffffff8a
   14004e833:	push   rax
   14004e834:	movabs eax,ds:0xb00a2a32845f96ce
   14004e83d:	adc    BYTE PTR [rdi],bl
   14004e83f:	cmp    DWORD PTR [rbx-0xf419391],edx
   14004e845:	add    edx,DWORD PTR [rcx]
   14004e847:	xchg   edx,eax
   14004e848:	clc    
   14004e849:	and    ebp,DWORD PTR [rcx-0x43]
   14004e84c:	(bad)  
   14004e84d:	add    al,0x2a
   14004e84f:	mov    ch,BYTE PTR [rip+0xfffffffff62d1124]        # 0x13631f979
   14004e855:	rex.WRXB
   14004e856:	lods   al,BYTE PTR ds:[rsi]
   14004e858:	or     dl,BYTE PTR [rdi-0x40]
   14004e85b:	and    al,BYTE PTR [rax]
   14004e85d:	(bad)  
   14004e85e:	lock pop rbx
   14004e860:	push   rsi
   14004e861:	(bad)  
   14004e862:	push   rsi
   14004e863:	ins    BYTE PTR es:[rdi],dx
   14004e864:	movabs ds:0xea0c048c9f2b8208,al
   14004e86d:	rcl    BYTE PTR [rbp+0x3dd86943],0x5f
   14004e874:	test   bl,dh
   14004e876:	addr32 ds jg 0x14004e846
   14004e87a:	(bad)  
   14004e87b:	fwait
   14004e87c:	outs   dx,DWORD PTR ds:[rsi]
   14004e87d:	or     eax,0xbb291f98
   14004e882:	(bad)  
   14004e883:	(bad)  
   14004e884:	cmp    DWORD PTR [rax+0x65],esp
   14004e887:	loope  0x14004e8c5
   14004e889:	retf   0x7e3e
   14004e88c:	push   rbx
   14004e88d:	jl     0x14004e83d
   14004e88f:	ror    dh,cl
   14004e891:	sbb    cl,BYTE PTR [rcx]
   14004e893:	jo     0x14004e8d7
   14004e895:	pop    rbx
   14004e896:	jge    0x14004e8e5
   14004e898:	scas   eax,DWORD PTR es:[rdi]
   14004e899:	cmp    al,0x49
   14004e89b:	vpunpcklqdq xmm15,xmm14,XMMWORD PTR [rsi]
   14004e89f:	mov    cl,0xe4
   14004e8a1:	(bad)  
   14004e8a2:	xchg   esp,eax
   14004e8a3:	imul   ecx,DWORD PTR [rdx+rbp*4+0x6e],0xc54b2bb2
   14004e8ab:	mov    ecx,0x391b91b3
   14004e8b0:	mov    ch,dh
   14004e8b2:	out    dx,eax
   14004e8b3:	jl     0x14004e8b7
   14004e8b5:	sti    
   14004e8b6:	lahf   
   14004e8b7:	(bad)  
   14004e8b8:	mov    ecx,eax
   14004e8ba:	or     DWORD PTR [rax+0x78000af0],edi
   14004e8c0:	pop    rsi
   14004e8c1:	add    al,0xe1
   14004e8c3:	(bad)  
   14004e8c4:	shl    edi,1
   14004e8c6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e8c7:	out    0x4f,al
   14004e8c9:	(bad)  
   14004e8ca:	jg     0x14004e936
   14004e8cc:	call   0x12ea60eb1
   14004e8d1:	jmp    0x1af74fe93
   14004e8d6:	iret   
   14004e8d7:	mov    ch,0x27
   14004e8d9:	add    BYTE PTR [rsp+rsi*4+0x4270925],al
   14004e8e0:	xor    al,0x9c
   14004e8e2:	lahf   
   14004e8e3:	rex.RB
   14004e8e4:	rex.W and spl,spl
   14004e8e7:	sub    DWORD PTR [rax-0x4b7dfb99],edx
   14004e8ed:	ficomp WORD PTR [rdi]
   14004e8ef:	xchg   esi,eax
   14004e8f0:	repz (bad) 
   14004e8f2:	cmp    ebx,ebx
   14004e8f4:	(bad)  
   14004e8f5:	and    DWORD PTR [rcx+0x73],eax
   14004e8f8:	in     eax,dx
   14004e8f9:	movabs ds:0xd07c6e04330d7206,eax
   14004e902:	mov    WORD PTR [rax],ds
   14004e904:	xor    al,0xed
   14004e906:	stos   DWORD PTR es:[rdi],eax
   14004e907:	or     ecx,DWORD PTR [rsi-0x5]
   14004e90a:	mov    cl,0x62
   14004e90c:	or     al,bl
   14004e90e:	cmp    al,0xf2
   14004e910:	or     BYTE PTR [rsi-0x3b3b6366],bl
   14004e916:	xchg   ebp,eax
   14004e917:	mov    bh,0x63
   14004e919:	js     0x14004e97f
   14004e91b:	(bad)  
   14004e91c:	push   rdx
   14004e91d:	rex.WX pop rax
   14004e91f:	pop    rbx
   14004e920:	pushf  
   14004e921:	rex.RX out dx,eax
   14004e923:	int3   
   14004e924:	sbb    dh,dh
   14004e926:	rex.WR (bad) 
   14004e928:	ret    
   14004e929:	loopne 0x14004e8ef
   14004e92b:	sbb    dl,ah
   14004e92d:	ret    0xaa14
   14004e930:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e931:	cmp    DWORD PTR [rbp-0x37],ebx
   14004e934:	ja     0x14004e949
   14004e936:	(bad)  
   14004e937:	je     0x14004e8dd
   14004e939:	rex.XB test BYTE PTR [r10+0xb826a02],bl
   14004e940:	jg     0x14004e99b
   14004e942:	ficomp WORD PTR [rbx+0x2e]
   14004e945:	out    0x25,eax
   14004e947:	xor    dl,BYTE PTR [rdx-0x8]
   14004e94a:	out    dx,al
   14004e94b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e94c:	lock xchg ebx,eax
   14004e94e:	rex.WRB out 0x42,al
   14004e951:	clc    
   14004e952:	and    ebp,ecx
   14004e954:	rex.X pop rbp
   14004e956:	clc    
   14004e957:	mov    ecx,0x553011a8
   14004e95c:	(bad)  
   14004e95d:	xor    BYTE PTR [rsi-0x71],bl
   14004e960:	jrcxz  0x14004e8ef
   14004e962:	sub    DWORD PTR ds:[rbx+0x9],esi
   14004e966:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e967:	add    BYTE PTR [rdx-0x3e8b38d8],ch
   14004e96d:	pshufw mm3,mm6,0x20
   14004e971:	add    al,0x11
   14004e973:	push   0x51
   14004e975:	or     al,0x19
   14004e977:	dec    BYTE PTR [rbx-0x7e]
   14004e97a:	adc    DWORD PTR [rbx+0x4fd23032],ebp
   14004e980:	sbb    al,BYTE PTR [rcx+0x6590e25a]
   14004e986:	dec    DWORD PTR [rcx+0x22]
   14004e989:	xchg   ebx,eax
   14004e98a:	pop    rdx
   14004e98b:	cmp    cl,BYTE PTR [rip+0xffffffffa3b09871]        # 0xe3b58202
   14004e991:	clc    
   14004e992:	mov    gs,ebp
   14004e994:	mov    ch,0x8d
   14004e996:	cwde   
   14004e997:	xchg   BYTE PTR [rsi+0x360b349d],al
   14004e99d:	rex.WX cmp cl,BYTE PTR [rcx]
   14004e9a0:	loopne 0x14004ea01
   14004e9a2:	cmp    DWORD PTR [rdx+0x6bdaafb3],edx
   14004e9a8:	(bad)  
   14004e9a9:	and    bl,ch
   14004e9ab:	add    DWORD PTR [rsi+riz*1-0x61],0xc8a1fb0a
   14004e9b3:	xchg   ebx,eax
   14004e9b4:	fisttp QWORD PTR [rip+0x17432ab0]        # 0x15748146a
   14004e9ba:	jl     0x14004e9e2
   14004e9bc:	push   rax
   14004e9bd:	xchg   ebx,eax
   14004e9be:	pop    rbx
   14004e9bf:	loope  0x14004e954
   14004e9c1:	sub    DWORD PTR [rcx],eax
   14004e9c3:	jrcxz  0x14004e9c9
   14004e9c5:	(bad)  
   14004e9c6:	call   0xd63a326c
   14004e9cb:	outs   dx,BYTE PTR ds:[rsi]
   14004e9cc:	(bad)  
   14004e9cd:	xor    dl,bl
   14004e9cf:	jl     0x14004ea0f
   14004e9d1:	push   rbx
   14004e9d2:	rex.RX xor r11b,BYTE PTR [rsi]
   14004e9d5:	xor    ebx,ecx
   14004e9d7:	pop    rcx
   14004e9d8:	mov    edi,0x18103959
   14004e9dd:	or     BYTE PTR [rip+0x1c1ee6a4],bl        # 0x15c23d087
   14004e9e3:	mov    edx,0xe0376d0f
   14004e9e8:	add    eax,0x469780a1
   14004e9ed:	add    eax,ebx
   14004e9ef:	jbe    0x14004ea2f
   14004e9f1:	(bad)  
   14004e9f2:	jo     0x14004ea65
   14004e9f4:	(bad)  
   14004e9f5:	movsxd ebp,esp
   14004e9f7:	xchg   ecx,eax
   14004e9f8:	xchg   DWORD PTR [rsi-0x5e3683cf],edi
   14004e9fe:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e9ff:	cmp    edi,ebp
   14004ea01:	cmp    ebp,DWORD PTR [rsi-0x60]
   14004ea04:	adc    BYTE PTR [rsi+0x508a99e5],al
   14004ea0a:	rex.RX sbb DWORD PTR [rsi-0x38],0xffffff82
   14004ea0f:	xlat   BYTE PTR ds:[rbx]
   14004ea10:	push   rbp
   14004ea11:	xor    eax,0x31200449
   14004ea16:	sub    ah,BYTE PTR [rsi+0x34]
   14004ea19:	rex.R in eax,dx
   14004ea1b:	add    DWORD PTR [rsi+0x2c0ad9d8],eax
   14004ea21:	mov    esi,0x64fdaabf
   14004ea26:	(bad)  
   14004ea27:	(bad)  
   14004ea28:	or     al,0xeb
   14004ea2a:	imul   edx,DWORD PTR [rdi-0x2],0x72f524a6
   14004ea31:	push   0xffffffffffffffa6
   14004ea33:	jge    0x14004e9e3
   14004ea35:	(bad)  
   14004ea36:	pop    rsi
   14004ea37:	loope  0x14004ea23
   14004ea39:	cli    
   14004ea3a:	push   rbx
   14004ea3b:	pavgb  mm5,QWORD PTR [rcx+0x5d4c55a5]
   14004ea42:	jnp    0x14004ea4b
   14004ea44:	xchg   BYTE PTR [rsi-0x12],dh
   14004ea47:	rex.RX xchg ebx,eax
   14004ea49:	sbb    ch,BYTE PTR [rsi+rbp*1+0x6667a34c]
   14004ea50:	adc    al,0xbb
   14004ea52:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ea53:	rex.RX xor DWORD PTR [rax],r15d
   14004ea56:	cmp    DWORD PTR [rsi+0x71126e6a],eax
   14004ea5c:	jns    0x14004ea7c
   14004ea5e:	mov    ah,0x2e
   14004ea60:	sub    edi,ecx
   14004ea62:	(bad)  
   14004ea63:	mov    ebp,0x24221af5
   14004ea68:	adc    eax,0x284f8159
   14004ea6d:	add    al,0x5f
   14004ea6f:	js     0x14004e9f1
   14004ea71:	adc    bl,dh
   14004ea73:	mov    dl,0x4d
   14004ea75:	add    al,0x78
   14004ea77:	xchg   edx,eax
   14004ea78:	rex.WR push rsp
   14004ea7a:	push   0xffffffffc96f176f
   14004ea7f:	sub    al,BYTE PTR [rcx]
   14004ea81:	enter  0x3705,0xaa
   14004ea85:	rex.WX jae 0x14004ea77
   14004ea88:	jle    0x14004eac2
   14004ea8a:	mov    cl,0x16
   14004ea8c:	mov    ah,0x4b
   14004ea8e:	mov    BYTE PTR [rbp+0xe],ah
   14004ea91:	rex.X fnstcw WORD PTR [rdi-0x75]
   14004ea95:	jrcxz  0x14004ea32
   14004ea97:	or     esp,DWORD PTR [rcx+0x2]
   14004ea9a:	sub    dh,ch
   14004ea9c:	inc    BYTE PTR [rbp+0x2]
   14004ea9f:	rex.WRXB and BYTE PTR [r15+0x12],r9b
   14004eaa3:	mov    ch,BYTE PTR [rdx+0x4b30b20c]
   14004eaa9:	fnstenv [rdx]
   14004eaab:	test   DWORD PTR [rdi+rdi*1+0x337edd60],ebx
   14004eab2:	mov    ch,BYTE PTR [rax+0x27]
   14004eab5:	(bad)  
   14004eab6:	in     eax,0xb0
   14004eab8:	sbb    eax,eax
   14004eaba:	and    DWORD PTR [rip+0x4189c801],0x9acf5582        # 0x1818eb2c5
   14004eac4:	add    eax,0x80c5510f
   14004eac9:	mov    dl,0x32
   14004eacb:	push   0xffffffffa094c207
   14004ead0:	xor    eax,0xfe1f0114
   14004ead5:	ret    0x229a
   14004ead8:	push   rdi
   14004ead9:	mov    ds,edx
   14004eadb:	rex.RXB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004eadd:	test   DWORD PTR [rdi],eax
   14004eadf:	leave  
   14004eae0:	or     al,0x4a
   14004eae2:	add    eax,0x738a67f9
   14004eae7:	mov    edi,DWORD PTR [rcx]
   14004eae9:	movabs ds:0xca9ec0028173eb02,eax
   14004eaf2:	push   rdx
   14004eaf3:	fs sti 
   14004eaf5:	sbb    al,BYTE PTR [rsi+0x1b8bffcc]
   14004eafb:	and    bh,dh
   14004eafd:	adc    esp,ebx
   14004eaff:	test   ecx,esi
   14004eb01:	add    BYTE PTR [rbx-0x6ad1d6d5],ch
   14004eb07:	(bad)  
   14004eb08:	out    dx,al
   14004eb09:	push   rdi
   14004eb0a:	jno    0x14004eb46
   14004eb0c:	mov    ah,0x9b
   14004eb0e:	ss (bad) 
   14004eb10:	jle    0x14004eb51
   14004eb12:	rex.RX
   14004eb13:	data16 rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004eb16:	pop    rsi
   14004eb17:	sub    BYTE PTR [rdx],cl
   14004eb19:	js     0x14004eb84
   14004eb1b:	adc    eax,0x32bcf000
   14004eb20:	or     bh,al
   14004eb22:	lahf   
   14004eb23:	jl     0x14004eb21
   14004eb25:	cmp    DWORD PTR [rsi-0x33],ecx
   14004eb28:	out    0x6,eax
   14004eb2a:	jbe    0x14004eb1b
   14004eb2c:	fst    QWORD PTR [rdi]
   14004eb2e:	(bad)  
   14004eb2f:	cli    
   14004eb30:	cmp    dh,BYTE PTR [rax+0x16c8f325]
   14004eb36:	sbb    BYTE PTR [rsi+0x5f96e163],dl
   14004eb3c:	jb     0x14004eb38
   14004eb3e:	(bad)  [rcx]
   14004eb40:	(bad)  
   14004eb41:	fist   DWORD PTR [rdx]
   14004eb43:	fs rex.WRX je 0x14004eb23
   14004eb47:	mov    al,BYTE PTR [rdi]
   14004eb49:	pop    rdi
   14004eb4a:	int    0x28
   14004eb4c:	sub    BYTE PTR [rbx+0x4509911f],bl
   14004eb52:	push   rsi
   14004eb53:	jl     0x14004eb9b
   14004eb55:	jo     0x14004eb1c
   14004eb57:	pop    rsp
   14004eb58:	pop    rsp
   14004eb59:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004eb5a:	mov    ecx,0x85620005
   14004eb5f:	fsubr  DWORD PTR [rax+riz*2-0xb]
   14004eb63:	outs   dx,DWORD PTR ds:[rsi]
   14004eb64:	mov    esi,0x337c781
   14004eb69:	(bad)  
   14004eb6a:	scas   al,BYTE PTR es:[rdi]
   14004eb6b:	jns    0x14004eb90
   14004eb6d:	xchg   BYTE PTR [rdi],al
   14004eb6f:	ja     0x14004eb72
   14004eb71:	sub    DWORD PTR [rcx+0x79],esp
   14004eb74:	imul   ecx,DWORD PTR [rsi],0xec71ecd5
   14004eb7a:	(bad)  
   14004eb7b:	(bad)  
   14004eb7c:	ret    
   14004eb7d:	shl    ah,1
   14004eb7f:	test   al,0x32
   14004eb81:	(bad)  
   14004eb82:	mov    bl,0xa0
   14004eb84:	mov    ch,0x25
   14004eb86:	and    BYTE PTR [rbp-0x17b775d5],ch
   14004eb8c:	adc    BYTE PTR [rbx+0x7235110a],ah
   14004eb92:	movsxd ecx,DWORD PTR [rdi-0x3ca57b78]
   14004eb98:	jge    0x14004eb38
   14004eb9a:	jrcxz  0x14004ebcb
   14004eb9c:	rex.RX sbb r9b,BYTE PTR [rdx+0x6d8b9180]
   14004eba3:	rex.WR
   14004eba4:	sbb    BYTE PTR [rcx],dl
   14004eba7:	push   rcx
   14004eba8:	sub    al,0x33
   14004ebaa:	sbb    DWORD PTR [rcx-0x79],edi
   14004ebad:	sub    eax,0x1ac5bead
   14004ebb2:	mov    ch,0xd3
   14004ebb4:	outs   dx,BYTE PTR ds:[rsi]
   14004ebb5:	rex.WRB enter 0x5a83,0xe2
   14004ebba:	push   rax
   14004ebbb:	in     al,0xf0
   14004ebbd:	and    ebx,DWORD PTR [rbx-0x1]
   14004ebc0:	mov    al,0x1d
   14004ebc2:	(bad)  
   14004ebc3:	rex
   14004ebc4:	rex
   14004ebc5:	rex.RXB
   14004ebc6:	adc    r8b,BYTE PTR [r14]
   14004ebc9:	sti    
   14004ebca:	and    eax,0xfdf5079c
   14004ebcf:	movabs ds:0x9efb8707fcc28193,eax
   14004ebd8:	neg    DWORD PTR [rdi]
   14004ebda:	or     eax,0x14f2b0cd
   14004ebdf:	jb     0x14004eb70
   14004ebe1:	jo     0x14004ebd5
   14004ebe3:	iret   
   14004ebe4:	cs (bad) 
   14004ebe6:	(bad)  
   14004ebe7:	adc    DWORD PTR [rbx+rbp*8+0x16bc110],edi
   14004ebee:	jb     0x14004eb7b
   14004ebf0:	xor    BYTE PTR [rbx+0x348d85f6],dh
   14004ebf6:	pop    rcx
   14004ebf7:	cs pop rsp
   14004ebf9:	rex.X sti 
   14004ebfb:	fadd   st(4),st
   14004ebfd:	fmulp  st(5),st
   14004ebff:	xchg   BYTE PTR [rdi+0x4],cl
   14004ec02:	jb     0x14004ebaf
   14004ec04:	lahf   
   14004ec05:	mov    ch,0x2
   14004ec07:	imul   ecx,eax,0x4048cb7
   14004ec0d:	(bad)  
   14004ec0e:	cld    
   14004ec0f:	mov    ah,0xf2
   14004ec11:	rex.WR pop rbp
   14004ec13:	add    dh,cl
   14004ec15:	xor    bh,bl
   14004ec17:	addr32 mov edx,0x25bc935c
   14004ec1d:	in     al,0x35
   14004ec1f:	or     al,0xf4
   14004ec21:	xor    eax,0xe741c012
   14004ec26:	mov    ch,0xb9
   14004ec28:	or     eax,0xcad3c470
   14004ec2d:	rex.WRXB
   14004ec2e:	lock rex.WX sub dil,BYTE PTR [rbx-0x3de211e2]
   14004ec36:	out    0x89,al
   14004ec38:	(bad)  
   14004ec39:	(bad)  
   14004ec3a:	and    eax,0x5316000f
   14004ec3f:	(bad)  
   14004ec40:	or     esp,DWORD PTR [rdx]
   14004ec42:	add    ebx,DWORD PTR [rdi+0x7a]
   14004ec45:	add    eax,0x4a79db60
   14004ec4a:	mov    edi,fs
   14004ec4c:	rex.WRXB lea r13,[r15]
   14004ec4f:	lea    edi,[rsi]
   14004ec51:	cld    
   14004ec52:	in     eax,dx
   14004ec53:	iret   
   14004ec54:	in     al,dx
   14004ec55:	mov    ebp,0x9ed9cafc
   14004ec5a:	rex.WRX iretq 
   14004ec5c:	int    0x8
   14004ec5e:	movabs eax,ds:0x3833f0991f928017
   14004ec67:	push   rdi
   14004ec68:	sti    
   14004ec69:	cwde   
   14004ec6a:	push   rcx
   14004ec6b:	retf   
   14004ec6c:	add    BYTE PTR [rax],bl
   14004ec6e:	fsub   st(2),st
   14004ec70:	movabs al,ds:0x6e8ea22a8205120
   14004ec79:	rex.WRB
   14004ec7a:	add    DWORD PTR ss:[rbp-0x40],esp
   14004ec7e:	sbb    BYTE PTR [rax],ch
   14004ec80:	adc    eax,0x4d2ec173
   14004ec85:	ret    0x8140
   14004ec88:	sbb    DWORD PTR [rbx+rbp*1],ebx
   14004ec8b:	(bad)  
   14004ec8c:	int    0x55
   14004ec8e:	sub    al,0x3e
   14004ec90:	(bad)  
   14004ec91:	sub    eax,0xac5e813c
   14004ec96:	pop    rbp
   14004ec97:	sti    
   14004ec98:	rex.RX or al,0xed
   14004ec9b:	sbb    BYTE PTR [rdx+0x4a],al
   14004ec9e:	or     DWORD PTR [rbx],ebp
   14004eca0:	retf   
   14004eca1:	repz or BYTE PTR [rbx],dh
   14004eca4:	(bad)  
   14004eca5:	xor    DWORD PTR [rdx],esi
   14004eca7:	imul   ebp,DWORD PTR [rbx],0xfffffff9
   14004ecaa:	rex.WR and BYTE PTR [rsi],r13b
   14004ecad:	iret   
   14004ecae:	and    DWORD PTR [rsi+rbp*1+0x2baacd02],ebp
   14004ecb5:	pushf  
   14004ecb6:	(bad)  
   14004ecb7:	or     BYTE PTR [rax],0xb1
   14004ecba:	mul    BYTE PTR [rdx]
   14004ecbc:	cld    
   14004ecbd:	add    DWORD PTR [rip+0x2e24d425],edx        # 0x16e29c0e8
   14004ecc3:	rex.RX
   14004ecc4:	rex.WRB and r9b,BYTE PTR [r9+rdx*1+0x5a]
   14004ecc9:	pop    rbx
   14004ecca:	(bad)  
   14004eccb:	sub    BYTE PTR [rax],cl
   14004eccd:	cmp    DWORD PTR [rdx+0x50],eax
   14004ecd0:	jg     0x14004ec63
   14004ecd2:	movabs ds:0x1081ee5f7c787941,al
   14004ecdb:	cmp    BYTE PTR [rax],bh
   14004ecdd:	mov    cl,0x46
   14004ecdf:	enter  0x8311,0x12
   14004ece3:	push   0x1b
   14004ece5:	fld    TBYTE PTR [rdi]
   14004ece7:	rex.X (bad) 
   14004ece9:	jge    0x14004ed6a
   14004eceb:	retf   
   14004ecec:	sti    
   14004eced:	xchg   edi,eax
   14004ecee:	iret   
   14004ecef:	(bad)
   14004ecf2:	(bad)  
   14004ecf3:	or     BYTE PTR [rsi],0xff
   14004ecf6:	jae    0x14004ec9c
   14004ecf8:	rcl    BYTE PTR [rsi],0x0
   14004ecfb:	mov    ch,0x72
   14004ecfd:	pop    rsi
   14004ecfe:	rex.WXB cmc 
   14004ed00:	xor    eax,0x93dfd102
   14004ed05:	and    DWORD PTR [rdi-0x1b3db7d3],eax
   14004ed0b:	push   rdi
   14004ed0c:	scas   eax,DWORD PTR es:[rdi]
   14004ed0d:	fist   WORD PTR [rax+0x6009af89]
   14004ed13:	or     al,al
   14004ed15:	div    BYTE PTR [rcx]
   14004ed17:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ed18:	in     al,dx
   14004ed1a:	repz (bad) 
   14004ed1c:	sub    edx,DWORD PTR [rcx]
   14004ed1e:	pop    rax
   14004ed1f:	rex.W push rax
   14004ed21:	(bad)  
   14004ed22:	push   0xbceffcb
   14004ed27:	cmp    al,ah
   14004ed29:	sub    ebp,DWORD PTR [rbx+rdi*1]
   14004ed2c:	or     al,0x76
   14004ed2e:	sub    esp,esp
   14004ed30:	mov    bh,0x34
   14004ed32:	je     0x14004ed2f
   14004ed34:	pop    rdx
   14004ed35:	xchg   ebp,eax
   14004ed36:	and    DWORD PTR [r14-0x3b],ebp
   14004ed3a:	call   FWORD PTR [rax+rbp*1+0x4]
   14004ed3e:	stc    
   14004ed3f:	(bad)  
   14004ed40:	and    eax,0x476d5778
   14004ed45:	add    esi,DWORD PTR [rsi]
   14004ed47:	(bad)  
   14004ed48:	cwde   
   14004ed49:	mov    dh,BYTE PTR [rsi+0x76]
   14004ed4c:	in     al,0xd8
   14004ed4e:	shr    BYTE PTR [rsi],0xb4
   14004ed51:	mov    esp,0x13bf3b13
   14004ed56:	popf   
   14004ed57:	jp     0x14004ed78
   14004ed59:	xor    eax,0x18c3c778
   14004ed5e:	cli    
   14004ed5f:	fsub   DWORD PTR [rdx+rdi*2]
   14004ed62:	ss icebp 
   14004ed64:	cmp    eax,0x9f2f01b8
   14004ed69:	add    al,BYTE PTR [rax]
   14004ed6b:	sahf   
   14004ed6c:	(bad)  
   14004ed6d:	rex.B js 0x14004ed62
   14004ed70:	icebp  
   14004ed71:	rex.RXB (bad) 
   14004ed73:	in     eax,dx
   14004ed74:	sbb    eax,0xff7f79dc
   14004ed79:	(bad)  
   14004ed7a:	loope  0x14004ed67
   14004ed7c:	(bad)  
   14004ed7d:	mov    WORD PTR [rdi],es
   14004ed7f:	adc    edx,DWORD PTR [rcx]
   14004ed81:	sbb    dh,BYTE PTR [rsi]
   14004ed83:	lea    ebp,[rsi]
   14004ed85:	add    edx,DWORD PTR [rbp-0x55]
   14004ed88:	movsxd esp,DWORD PTR [rbp+0x21]
   14004ed8b:	(bad)  
   14004ed8c:	adc    al,0x7
   14004ed8e:	rex.WXB ins BYTE PTR es:[rdi],dx
   14004ed90:	sub    esp,ebp
   14004ed92:	clc    
   14004ed93:	push   0xffffffffce22076a
   14004ed98:	mov    esi,0xaededbf
   14004ed9d:	xlat   BYTE PTR ds:[rbx]
   14004ed9e:	rex.X jg 0x14004ed85
   14004eda1:	movabs ds:0x9841dd50008bd064,eax
   14004edaa:	lahf   
   14004edab:	shl    ah,0x13
   14004edae:	pavgb  mm1,QWORD PTR [rcx+0x5748bdbe]
   14004edb5:	fisttp WORD PTR [rdx+0x481dfee1]
   14004edbb:	sub    DWORD PTR [rcx+0x69],esp
   14004edbe:	jns    0x14004edc1
   14004edc0:	xor    al,0x3b
   14004edc2:	xchg   BYTE PTR [rcx-0x66e71c67],dl
   14004edc8:	sbb    al,BYTE PTR [rbp-0x31]
   14004edcb:	int3   
   14004edcc:	imul   eax,esp,0x558459a5
   14004edd2:	jmp    0xdd3135c2
   14004edd7:	jnp    0x14004ed83
   14004edd9:	add    BYTE PTR [rcx-0xe],cl
   14004eddc:	and    DWORD PTR [rax-0x76],ebp
   14004eddf:	outs   dx,DWORD PTR ds:[rsi]
   14004ede0:	lock data16 sahf 
   14004ede3:	push   rcx
   14004ede4:	stos   DWORD PTR es:[rdi],eax
   14004ede5:	std    
   14004ede6:	retf   0x1f02
   14004ede9:	add    cl,BYTE PTR [rdx]
   14004edeb:	mov    ebp,DWORD PTR [rip+0xffffffff92467c15]        # 0xd24b6a06
   14004edf1:	cdq    
   14004edf2:	(bad)  
   14004edf3:	out    dx,eax
   14004edf4:	rex.WB cmp al,0x1a
   14004edf7:	fisttp DWORD PTR [rdi-0x40b24dd0]
   14004edfd:	(bad)  
   14004edff:	stos   BYTE PTR es:[rdi],al
   14004ee00:	rex.WR clc 
   14004ee02:	rex.RB push r8
   14004ee04:	lods   al,BYTE PTR ds:[rsi]
   14004ee05:	ror    BYTE PTR [rdi],cl
   14004ee07:	and    al,0x9
   14004ee09:	(bad)  
   14004ee0a:	xor    eax,ebx
   14004ee0c:	mov    esi,0x5070a3b9
   14004ee11:	mov    edi,0x92042f3f
   14004ee16:	adc    DWORD PTR [rbp+rdx*8-0x26f2bbeb],eax
   14004ee1d:	add    eax,0xad5b0143
   14004ee22:	(bad)  
   14004ee23:	add    eax,0xf5ad1d27
   14004ee28:	push   rdi
   14004ee29:	pop    rcx
   14004ee2a:	sub    BYTE PTR [rdx+rcx*1+0x3f],dl
   14004ee2e:	adc    eax,eax
   14004ee30:	xchg   ecx,eax
   14004ee31:	std    
   14004ee32:	jl     0x14004ee62
   14004ee34:	cld    
   14004ee35:	(bad)  
   14004ee36:	movsxd esp,DWORD PTR [rax+0xff91b0a]
   14004ee3c:	sub    cl,BYTE PTR [rsi+riz*8]
   14004ee3f:	retf   0x5ae9
   14004ee42:	sub    DWORD PTR [rsi+rdx*8+0x11835cbc],0xffffffc8
   14004ee4a:	rex.X (bad) 
   14004ee4c:	out    0x2d,eax
   14004ee4e:	cld    
   14004ee4f:	jg     0x14004eea4
   14004ee51:	sbb    ah,BYTE PTR [rsi+0x6e]
   14004ee54:	cdq    
   14004ee55:	xchg   ecx,eax
   14004ee56:	rex.WRB or r13b,BYTE PTR [r11+0x563397c0]
   14004ee5d:	pop    rdi
   14004ee5e:	xchg   esp,eax
   14004ee5f:	jge    0x14004ee67
   14004ee61:	sbb    DWORD PTR [rsi+0xac9c624],ebx
   14004ee67:	test   esp,esp
   14004ee69:	jnp    0x14004eece
   14004ee6b:	stc    
   14004ee6c:	jae    0x14004eea9
   14004ee6e:	jl     0x14004eea1
   14004ee70:	push   rax
   14004ee71:	rex.R sub eax,0x88d01387
   14004ee77:	adc    BYTE PTR [rbx-0x790e857f],0x78
   14004ee7e:	mov    bh,0x39
   14004ee80:	mov    ecx,0xf78105fa
   14004ee85:	pop    rdi
   14004ee86:	rex.WRX imul r11,QWORD PTR [rdi-0x3],0x14
   14004ee8b:	test   BYTE PTR [rbp+0x3207be2],0x5f
   14004ee92:	pop    rsi
   14004ee93:	add    eax,0x9c9f3c00
   14004ee98:	xor    DWORD PTR [rsi*2-0x1d3b3714],0xd4fe9d4
   14004eea3:	sbb    eax,0x3d0aa4b8
   14004eea8:	mov    ebp,0x62390337
   14004eead:	push   rbx
   14004eeae:	sub    ebx,esp
   14004eeb0:	rex.WRXB (bad) 
   14004eeb2:	std    
   14004eeb3:	or     ebp,ebp
   14004eeb5:	lahf   
   14004eeb6:	cmp    bh,dl
   14004eeb8:	ror    BYTE PTR [rbx-0x17],1
   14004eebb:	test   BYTE PTR [rax],bh
   14004eebd:	nop
   14004eebe:	or     DWORD PTR [rdx-0x4],ecx
   14004eec1:	add    DWORD PTR [rax+0x3065d9c4],ecx
   14004eec7:	(bad)  
   14004eec8:	leave  
   14004eec9:	(bad)  
   14004eeca:	and    edx,DWORD PTR [rbx-0x2cacfc60]
   14004eed0:	and    DWORD PTR [rdx-0x2b],ecx
   14004eed3:	fucomi st,st(0)
   14004eed5:	movsxd edi,DWORD PTR [rax]
   14004eed7:	stc    
   14004eed8:	hlt    
   14004eed9:	and    edi,DWORD PTR [rax+0x7a]
   14004eedc:	fcomip st,st(5)
   14004eede:	call   0x14c3fed3f
   14004eee3:	div    edi
   14004eee5:	movabs eax,ds:0x27b3401797161269
   14004eeee:	xor    BYTE PTR [rdx],dh
   14004eef0:	xor    eax,DWORD PTR [rsi-0x76ce361f]
   14004eef6:	cmc    
   14004eef7:	(bad)  
   14004eef8:	int    0xc8
   14004eefa:	(bad)  
   14004eefb:	(bad)  
   14004eefc:	fwait
   14004eefd:	sub    ecx,DWORD PTR [rax]
   14004eeff:	sbb    rsi,QWORD PTR [r15+0x10]
   14004ef03:	stos   DWORD PTR es:[rdi],eax
   14004ef04:	lock or ebx,ebx
   14004ef07:	pop    rdi
   14004ef08:	or     bh,BYTE PTR [rdi-0x398b07cb]
   14004ef0e:	pop    rdi
   14004ef0f:	out    0x7c,eax
   14004ef11:	scas   al,BYTE PTR es:[rdi]
   14004ef12:	mov    esi,0x51788d23
   14004ef17:	fwait
   14004ef18:	icebp  
   14004ef19:	xlat   BYTE PTR ds:[rbx]
   14004ef1a:	iret   
   14004ef1b:	retf   0x1d46
   14004ef1e:	outs   dx,BYTE PTR ds:[rsi]
   14004ef1f:	icebp  
   14004ef20:	cmc    
   14004ef21:	jmp    QWORD PTR [rax-0x557dcafb]
   14004ef27:	(bad)
   14004ef2a:	xor    dh,BYTE PTR [rax]
   14004ef2c:	push   rdi
   14004ef2d:	out    dx,al
   14004ef2e:	add    eax,0xdf647e11
   14004ef33:	pop    rdi
   14004ef34:	movabs al,ds:0xbdacf040dd92f07a
   14004ef3d:	mov    BYTE PTR [rdx],ah
   14004ef3f:	jmp    0x14004ef90
   14004ef41:	xchg   ebx,eax
   14004ef42:	jle    0x14004eee8
   14004ef44:	rol    bh,1
   14004ef46:	pop    rsp
   14004ef47:	or     eax,0xbd2a23f1
   14004ef4c:	jle    0x14004ef19
   14004ef4e:	(bad)  
   14004ef4f:	jo     0x14004ef88
   14004ef51:	and    ah,BYTE PTR [rcx+riz*8+0x34]
   14004ef55:	(bad)  
   14004ef56:	(bad)  
   14004ef57:	clc    
   14004ef58:	or     edx,DWORD PTR [rsi+rdx*8]
   14004ef5b:	(bad)  
   14004ef5c:	(bad)  
   14004ef5d:	repz sbb eax,0x5067f809
   14004ef63:	or     eax,0x5126bc59
   14004ef68:	add    cl,BYTE PTR [rsi-0x17]
   14004ef6b:	mov    edx,0xd9a8e05b
   14004ef70:	out    0x8a,eax
   14004ef72:	xor    edi,edx
   14004ef74:	xor    cl,al
   14004ef76:	xor    bh,BYTE PTR [rax]
   14004ef78:	test   eax,0x8ddc339f
   14004ef7d:	xchg   edx,eax
   14004ef7e:	push   rsi
   14004ef7f:	ins    BYTE PTR es:[rdi],dx
   14004ef80:	test   BYTE PTR [rdx-0x4a6ec2e8],bl
   14004ef86:	cmp    DWORD PTR [rbx],ecx
   14004ef88:	or     DWORD PTR [rdi+0xd5ad0c3],ecx
   14004ef8e:	adc    edx,edi
   14004ef90:	call   0x149e8f18e
   14004ef95:	rex.B leave 
   14004ef97:	cvtps2pi mm2,QWORD PTR [rdi]
   14004ef9a:	xchg   ecx,eax
   14004ef9b:	xor    eax,DWORD PTR [rsi]
   14004ef9d:	ins    DWORD PTR es:[rdi],dx
   14004ef9e:	out    0xb9,al
   14004efa0:	ins    DWORD PTR es:[rdi],dx
   14004efa1:	xchg   edi,eax
   14004efa2:	jns    0x14004f001
   14004efa4:	pop    rsp
   14004efa5:	push   rbx
   14004efa6:	jle    0x14004ef47
   14004efa8:	scas   eax,DWORD PTR es:[rdi]
   14004efa9:	(bad)  
   14004efaa:	neg    dl
   14004efac:	fist   WORD PTR [rdx-0x18]
   14004efaf:	rex.RB fidivr DWORD PTR [r8-0x7cc178f9]
   14004efb6:	out    dx,eax
   14004efb7:	movabs eax,ds:0xe5b84bcbbfce8840
   14004efc0:	push   rbp
   14004efc1:	rex.WRX (bad) 
   14004efc3:	(bad)  
   14004efc4:	push   rbp
   14004efc5:	cli    
   14004efc6:	xlat   BYTE PTR ds:[rbx]
   14004efc7:	sar    DWORD PTR [rdi-0x4216462],1
   14004efcd:	ret    
   14004efce:	out    dx,eax
   14004efcf:	sbb    ebx,edx
   14004efd1:	jg     0x14004ef9c
   14004efd3:	mov    edi,0xab2e10a1
   14004efd8:	cmp    BYTE PTR [rcx],ah
   14004efda:	xor    al,dl
   14004efdc:	and    eax,0x240f29d9
   14004efe1:	(bad)  
   14004efe2:	lods   al,BYTE PTR ds:[rsi]
   14004efe3:	(bad)  
   14004efe4:	and    esi,DWORD PTR [rdx-0xe]
   14004efe7:	or     al,0x2a
   14004efe9:	or     DWORD PTR [rip+0x40236826],eax        # 0x180285815
   14004efef:	and    DWORD PTR [rsi],edx
   14004eff1:	cmp    DWORD PTR [rdi],edi
   14004eff3:	jbe    0x14004ef7b
   14004eff5:	mov    al,0xff
   14004eff7:	data16 std 
   14004eff9:	sub    DWORD PTR [rcx-0x1dca75e2],ebp
   14004efff:	(bad)  
   14004f000:	sbb    bh,BYTE PTR [rdx-0x38fc8071]
   14004f006:	(bad)  
   14004f007:	(bad)  
   14004f008:	xor    BYTE PTR [rsi-0x1b],bh
   14004f00b:	ins    DWORD PTR es:[rdi],dx
   14004f00c:	fdiv   DWORD PTR [rcx-0x20]
   14004f00f:	rex.WX or al,0x56
   14004f012:	add    ebx,ebp
   14004f014:	fld    QWORD PTR [rbp+rax*4-0x165bba1b]
   14004f01b:	xor    DWORD PTR [rsp+rcx*8-0x3b3738e3],ecx
   14004f022:	sub    BYTE PTR [rdx-0x59],bh
   14004f025:	rex.WRX and BYTE PTR [rsi],r13b
   14004f028:	(bad)  
   14004f029:	and    BYTE PTR [rsi],ch
   14004f02b:	iret   
   14004f02c:	add    DWORD PTR [rbx],ebx
   14004f02e:	sub    esp,DWORD PTR [rax-0x4025e4c]
   14004f034:	lods   al,BYTE PTR ds:[rsi]
   14004f035:	js     0x14004effe
   14004f037:	rex.X jge 0x14004f07b
   14004f03a:	jrcxz  0x14004f038
   14004f03c:	lods   al,BYTE PTR ds:[rsi]
   14004f03d:	cmp    eax,0xf58ad0fd
   14004f042:	cmp    ebp,esp
   14004f044:	(bad)  
   14004f045:	in     eax,dx
   14004f046:	scas   al,BYTE PTR es:[rdi]
   14004f047:	xchg   esi,eax
   14004f048:	pop    rbx
   14004f049:	es mov edi,0xce6f4b7
   14004f04f:	in     eax,0x9
   14004f051:	enter  0xfff1,0x42
   14004f055:	clc    
   14004f056:	movabs ds:0x908c89904209bf09,eax
   14004f05f:	jge    0x14004f0d9
   14004f061:	rex.WXB (bad) 
   14004f063:	or     dl,BYTE PTR [rcx+0x3d84dd5a]
   14004f069:	(bad)  
   14004f06a:	mov    bh,0xa5
   14004f06c:	(bad)  
   14004f06d:	addr32 in eax,0xcc
   14004f070:	(bad)  
   14004f071:	and    edx,DWORD PTR [rbp+rbp*2+0x65]
   14004f075:	push   rbp
   14004f076:	(bad)  
   14004f077:	mov    ch,0xf8
   14004f079:	jp     0x14004f018
   14004f07b:	push   rbp
   14004f07c:	mov    WORD PTR [rdx],ds
   14004f07e:	(bad)  
   14004f07f:	push   rsp
   14004f080:	push   rdi
   14004f081:	and    DWORD PTR [rsi],eax
   14004f083:	sub    DWORD PTR [rbx],esp
   14004f085:	ss (bad) 
   14004f087:	movabs al,ds:0xfa419fe6504008a
   14004f090:	adc    DWORD PTR [rax+rdi*4-0x5f],0x12098aca
   14004f098:	adc    eax,0xa1de3a88
   14004f09d:	sub    DWORD PTR [rax],edx
   14004f09f:	(bad)  
   14004f0a0:	call   0xece8441e
   14004f0a5:	and    eax,0x47b5bd5
   14004f0aa:	xchg   esi,eax
   14004f0ab:	fwait
   14004f0ac:	adc    eax,0xc2a4a500
   14004f0b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f0b2:	xchg   edx,eax
   14004f0b3:	stos   BYTE PTR es:[rdi],al
   14004f0b4:	stc    
   14004f0b5:	(bad)  
   14004f0b6:	call   0x1431a32e0
   14004f0bb:	push   si
   14004f0bd:	(bad)  
   14004f0be:	xor    BYTE PTR [rbx-0x52b09968],bh
   14004f0c4:	ror    cl,1
   14004f0c6:	mov    cl,0x45
   14004f0c8:	cmp    bh,dl
   14004f0ca:	in     al,dx
   14004f0cb:	pop    rsp
   14004f0cc:	ja     0x14004f13a
   14004f0ce:	jl     0x14004f109
   14004f0d0:	rex.WRB lods al,BYTE PTR ds:[rsi]
   14004f0d2:	xor    eax,0x1a36561
   14004f0d7:	div    DWORD PTR [rdx]
   14004f0d9:	ja     0x14004f121
   14004f0db:	push   0xc
   14004f0dd:	pop    rbp
   14004f0de:	fisttp QWORD PTR [rdi-0x69]
   14004f0e1:	sbb    al,0xee
   14004f0e3:	rcl    BYTE PTR [rbp-0xd08bc05],1
   14004f0e9:	fst    QWORD PTR [rcx-0x2759130a]
   14004f0ef:	loope  0x14004f0f7
   14004f0f1:	pop    rax
   14004f0f2:	fldenv [rsp+rbp*2+0x36]
   14004f0f6:	mov    WORD PTR [rsi+0x17705d61],fs
   14004f0fc:	mov    dl,0xf8
   14004f0fe:	lods   eax,DWORD PTR ds:[rsi]
   14004f0ff:	es or  eax,0xf968625
   14004f105:	rex.WXB adc bl,BYTE PTR [r10+0x62]
   14004f109:	rex.X
   14004f10a:	rex.WX push rdx
   14004f10c:	(bad)  
   14004f10d:	outs   dx,BYTE PTR ds:[rsi]
   14004f10e:	xlat   BYTE PTR ds:[rbx]
   14004f10f:	popf   
   14004f110:	push   rdi
   14004f111:	adc    DWORD PTR [rcx+rsi*4+0x1834f5b7],0xffffff82
   14004f119:	jle    0x14004f12d
   14004f11b:	add    ecx,DWORD PTR [rbp-0x3e]
   14004f11e:	jmp    0x13fe6b49e
   14004f123:	out    0x3f,al
   14004f125:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f127:	movsxd edx,DWORD PTR [rax+0x5d7df6]
   14004f12d:	lods   al,BYTE PTR ds:[rsi]
   14004f12e:	xor    eax,0xfedce73b
   14004f133:	jbe    0x14004f14a
   14004f135:	sub    BYTE PTR [rbp-0x5e],0x8
   14004f139:	ins    BYTE PTR es:[rdi],dx
   14004f13a:	fsub   DWORD PTR [rbp+0x4a14617]
   14004f140:	cs mov ebx,0xaf2bb6f9
   14004f146:	mov    eax,0xd77fe6e1
   14004f14b:	rcr    ebx,cl
   14004f14d:	sti    
   14004f14e:	(bad)  
   14004f14f:	adc    DWORD PTR cs:[rdx+0x1c00fa35],eax
   14004f156:	loop   0x14004f18b
   14004f158:	and    al,0x4f
   14004f15a:	mov    esi,0x8daeeb72
   14004f15f:	(bad)  
   14004f160:	adc    dl,BYTE PTR [rax-0x5f]
   14004f163:	add    DWORD PTR [rbx],edi
   14004f165:	icebp  
   14004f166:	xchg   edi,eax
   14004f167:	or     edi,DWORD PTR [rax+0x24]
   14004f16a:	icebp  
   14004f16b:	test   al,0x91
   14004f16d:	mov    esi,0x98f50a01
   14004f172:	adc    ebp,DWORD PTR [rax-0x6233df16]
   14004f178:	(bad)  
   14004f179:	retf   0x5fc3
   14004f17c:	(bad)  
   14004f17d:	mov    bl,0xf5
   14004f17f:	and    dh,ah
   14004f181:	scas   eax,DWORD PTR es:[rdi]
   14004f182:	jge    0x14004f1a7
   14004f184:	jbe    0x14004f115
   14004f186:	in     al,dx
   14004f187:	rex.XB pop r15
   14004f189:	adc    eax,0xc5d1bab0
   14004f18e:	cld    
   14004f18f:	retf   0x3022
   14004f192:	xor    ecx,DWORD PTR [rsi+0x3147d39d]
   14004f198:	xor    dh,BYTE PTR [rbx+0x2]
   14004f19b:	jge    0x14004f130
   14004f19d:	(bad)  
   14004f19e:	push   rax
   14004f19f:	(bad)  
   14004f1a0:	rex.WR retf 
   14004f1a2:	and    bl,BYTE PTR [rsi-0x4b5f3415]
   14004f1a8:	add    eax,0xf920aa0d
   14004f1ae:	hlt    
   14004f1af:	xor    eax,0x26534d27
   14004f1b4:	pop    rcx
   14004f1b5:	mov    ebx,0x543df48f
   14004f1ba:	lock test eax,0x4ffafd80
   14004f1c0:	push   rsp
   14004f1c1:	add    eax,0xa5f27d26
   14004f1c6:	cdq    
   14004f1c7:	fs (bad) 
   14004f1c9:	in     al,0xa
   14004f1cb:	mov    bpl,0xfc
   14004f1ce:	xchg   ecx,eax
   14004f1cf:	add    dl,BYTE PTR [rax-0x3f429e28]
   14004f1d5:	jae    0x14004f21c
   14004f1d7:	pcmpgtd mm7,mm1
   14004f1da:	mov    esp,cs
   14004f1dc:	and    esi,ebx
   14004f1de:	iret   
   14004f1df:	retf   
   14004f1e0:	ins    BYTE PTR es:[rdi],dx
   14004f1e1:	(bad)  
   14004f1e2:	sub    edi,0xffffff9a
   14004f1e5:	test   BYTE PTR [rbx+rsi*4],dl
   14004f1e8:	movabs ds:0xad004f72f284a2a8,al
   14004f1f1:	out    0x8b,al
   14004f1f3:	mov    edx,0xc2b68016
   14004f1f8:	scas   al,BYTE PTR es:[rdi]
   14004f1f9:	(bad)  
   14004f1fa:	push   rsi
   14004f1fb:	(bad)  
   14004f1fc:	stos   BYTE PTR es:[rdi],al
   14004f1fd:	ret    0x43a8
   14004f200:	test   al,0x82
   14004f203:	scas   al,BYTE PTR es:[rdi]
   14004f204:	sbb    DWORD PTR [rax-0x16],eax
   14004f207:	sub    dl,BYTE PTR [rax+0x60c5ff57]
   14004f20d:	jo     0x14004f1ee
   14004f20f:	test   BYTE PTR [rdi+0x43f045],dl
   14004f215:	and    bh,BYTE PTR [rbx+0x31]
   14004f218:	or     eax,0x982cb413
   14004f21d:	or     al,0x6a
   14004f21f:	enter  0xab98,0x2
   14004f223:	loopne 0x14004f247
   14004f225:	mov    WORD PTR [rcx+0x73],gs
   14004f228:	ror    DWORD PTR [rax],0x37
   14004f22b:	jns    0x14004f29b
   14004f22d:	lock mov edx,0xb03296fd
   14004f233:	leave  
   14004f234:	xchg   ebx,eax
   14004f235:	pop    rax
   14004f236:	(bad)  
   14004f237:	add    cl,BYTE PTR [rcx+0x31]
   14004f23a:	out    dx,eax
   14004f23b:	nop
   14004f23c:	int3   
   14004f23d:	xchg   edi,eax
   14004f23e:	xchg   DWORD PTR [rsi-0x59],ecx
   14004f241:	jrcxz  0x14004f2a2
   14004f243:	cmp    edi,DWORD PTR [rsi-0x646c7207]
   14004f249:	std    
   14004f24a:	idiv   edi
   14004f24c:	xchg   edi,eax
   14004f24d:	movabs ds:0x8650c7abc5cf83d5,eax
   14004f256:	fidiv  DWORD PTR [rsi-0x3f95f2ee]
   14004f25c:	jbe    0x14004f2cd
   14004f25e:	pushf  
   14004f25f:	sbb    bh,BYTE PTR [rsi-0x5]
   14004f262:	shr    ah,0x6b
   14004f265:	scas   eax,DWORD PTR es:[rdi]
   14004f266:	movabs ds:0xeddeff103f5e3bc5,al
   14004f26f:	std    
   14004f270:	loope  0x14004f227
   14004f272:	jne    0x14004f276
   14004f274:	push   rsi
   14004f275:	(bad)  
   14004f276:	test   BYTE PTR [rbp+0x4e0028ae],cl
   14004f27c:	mov    WORD PTR [rsi+0x57],gs
   14004f27f:	sbb    eax,0x813994cf
   14004f284:	test   BYTE PTR [rsp+rdx*8-0x1a69dbbc],al
   14004f28b:	fstp   QWORD PTR [rdx]
   14004f28d:	mov    ebp,0x93904960
   14004f292:	sbb    ecx,DWORD PTR [rax]
   14004f294:	or     eax,esp
   14004f296:	and    BYTE PTR [rax-0x29],cl
   14004f299:	mov    bl,ch
   14004f29b:	adc    al,BYTE PTR [rcx]
   14004f29d:	rex.WRB ret 
   14004f29f:	cmp    BYTE PTR [rbp-0x43],cl
   14004f2a2:	push   rsi
   14004f2a4:	(bad)  
   14004f2a5:	jo     0x14004f292
   14004f2a7:	out    dx,eax
   14004f2a8:	rex.X adc al,0x80
   14004f2ab:	lods   al,BYTE PTR ds:[rsi]
   14004f2ac:	and    eax,0x518af8
   14004f2b1:	rex test eax,0x9590804
   14004f2b7:	cwde   
   14004f2b8:	and    ch,al
   14004f2ba:	jmp    0x1bfd6cad8
   14004f2bf:	retf   
   14004f2c0:	fucomp st(7)
   14004f2c2:	dec    ecx
   14004f2c4:	(bad)  
   14004f2c5:	movabs eax,ds:0x599dd876891f3f5d
   14004f2ce:	and    eax,0xa3a02461
   14004f2d3:	mov    esi,0x3774ab18
   14004f2d8:	add    BYTE PTR [rdx],ch
   14004f2da:	outs   dx,BYTE PTR ds:[rsi]
   14004f2db:	(bad)  
   14004f2dc:	stos   DWORD PTR es:[rdi],eax
   14004f2dd:	repz cwde 
   14004f2df:	cmc    
   14004f2e0:	iret   
   14004f2e1:	scas   al,BYTE PTR es:[rdi]
   14004f2e2:	jle    0x14004f2b6
   14004f2e4:	rcr    BYTE PTR [rcx+rdi*4],1
   14004f2e7:	push   rdx
   14004f2e8:	movabs al,ds:0x8fb3d4c1bfb18110
   14004f2f1:	(bad)  
   14004f2f2:	je     0x14004f2d8
   14004f2f4:	jb     0x14004f36a
   14004f2f6:	scas   eax,DWORD PTR es:[rdi]
   14004f2f7:	mov    esp,0x7707bb05
   14004f2fc:	movabs ds:0x5a5c58366f2c626,al
   14004f305:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f306:	mov    ecx,0x1e9e1813
   14004f30b:	ret    
   14004f30c:	lock hlt 
   14004f30e:	or     esp,esi
   14004f310:	int    0x8c
   14004f312:	and    ecx,esi
   14004f314:	rex.WRXB movabs rax,ds:0x3ad2065b58479e5a
   14004f31e:	sub    cl,bl
   14004f320:	loope  0x14004f349
   14004f322:	in     eax,dx
   14004f323:	loop   0x14004f2f0
   14004f325:	sbb    cl,BYTE PTR [rdi-0x19]
   14004f328:	rex.RX jnp 0x14004f323
   14004f32b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f32c:	mov    bl,0x8
   14004f32e:	mov    edi,0x4607612
   14004f333:	rex.WRB
   14004f334:	rex.WR loop 0x14004f2ff
   14004f337:	pop    rsi
   14004f338:	out    0xef,eax
   14004f33a:	mov    ecx,0x19c8462f
   14004f33f:	(bad)  
   14004f340:	sub    BYTE PTR [rax+rcx*8],0xa2
   14004f344:	or     BYTE PTR [rcx+rbx*8+0x0],al
   14004f348:	rex.RX (bad) 
   14004f34a:	mov    eax,esi
   14004f34c:	(bad)  
   14004f34d:	xor    al,0xde
   14004f34f:	(bad)  
   14004f350:	je     0x14004f31f
   14004f352:	(bad)  
   14004f353:	xchg   ebp,eax
   14004f354:	sub    DWORD PTR [rdi],edx
   14004f356:	(bad)  
   14004f357:	and    BYTE PTR [rcx-0x1bea3d43],ch
   14004f35d:	cmp    al,0x0
   14004f35f:	imul   ecx
   14004f361:	mov    DWORD PTR [rsp+rdi*2-0x1a021428],esp
   14004f368:	pop    rdx
   14004f369:	push   0x47
   14004f36b:	or     esp,DWORD PTR [rdx-0x27ad5c4]
   14004f371:	xchg   ebp,eax
   14004f372:	xchg   BYTE PTR [rbp*1+0x1cc6384d],cl
   14004f379:	(bad)  
   14004f37a:	sbb    BYTE PTR [rsi+0x29b47493],0x0
   14004f381:	mov    dh,0xa6
   14004f383:	pop    rcx
   14004f384:	mov    ecx,0x32ab00be
   14004f389:	add    BYTE PTR [rsi+0x2df0452c],0xe7
   14004f390:	(bad)  
   14004f391:	sbb    DWORD PTR [rcx],ecx
   14004f393:	push   0xffffffffca76488e
   14004f398:	xor    eax,DWORD PTR [rdi]
   14004f39a:	(bad)  
   14004f39b:	or     al,al
   14004f39d:	ss xchg edi,eax
   14004f39f:	mov    ah,BYTE PTR [rsi+rdi*8]
   14004f3a2:	jle    0x14004f3cb
   14004f3a4:	xor    dh,dl
   14004f3a6:	mov    edx,0xd1e5f9bc
   14004f3ab:	hlt    
   14004f3ac:	rol    bh,0x9f
   14004f3af:	movabs eax,ds:0x5edfabefb6b63f8f
   14004f3b8:	fidivr DWORD PTR [rbx+0xa]
   14004f3bb:	jns    0x14004f37a
   14004f3bd:	or     al,0xa3
   14004f3bf:	cld    
   14004f3c0:	push   rdx
   14004f3c1:	stc    
   14004f3c2:	jae    0x14004f3a1
   14004f3c4:	mov    dh,0x1a
   14004f3c6:	scas   eax,DWORD PTR es:[rdi]
   14004f3c7:	or     BYTE PTR [rax],ah
   14004f3c9:	(bad)  
   14004f3ca:	(bad)  
   14004f3cb:	in     al,dx
   14004f3cc:	shr    BYTE PTR [rbx+0x4e60d2],1
   14004f3d2:	add    BYTE PTR [rax],ah
   14004f3d4:	add    BYTE PTR [rcx+0x44],cl
   14004f3d7:	push   r12
   14004f3d9:	or     eax,0x7fb6ec69
   14004f3de:	xor    BYTE PTR [rax-0xa485e07],bh
   14004f3e4:	loope  0x14004f3b4
   14004f3e6:	and    DWORD PTR [rax+0x60],esp
   14004f3e9:	cmp    DWORD PTR [rip+0x6a40366c],esp        # 0x1aa452a5b
   14004f3ef:	cmp    bh,dl
   14004f3f1:	or     ah,BYTE PTR [rbx+riz*8]
   14004f3f4:	scas   al,BYTE PTR es:[rdi]
   14004f3f5:	adc    bl,BYTE PTR [rax-0x6fb65fd]
   14004f3fb:	rcr    ah,1
   14004f3fd:	add    eax,0x2de7b93d
   14004f402:	mov    al,0xe4
   14004f404:	mov    esp,0x111b278
   14004f409:	ffree  st(4)
   14004f40b:	fadd   DWORD PTR [rax-0x8]
   14004f40e:	(bad)  
   14004f40f:	inc    DWORD PTR [rbx+rbx*1+0xc31ec7e]
   14004f416:	(bad)  
   14004f417:	rex.XB sub sil,BYTE PTR [r11+0x1b]
   14004f41b:	cmp    al,0xf8
   14004f41d:	jnp    0x14004f428
   14004f41f:	out    0xd9,eax
   14004f421:	mov    esi,0x7000147f
   14004f426:	es xchg edi,eax
   14004f428:	(bad)  
   14004f429:	sbb    ebx,DWORD PTR [rdx]
   14004f42b:	mov    eax,0xb8efade1
   14004f430:	ins    DWORD PTR es:[rdi],dx
   14004f431:	fbld   TBYTE PTR [rbp+0x57]
   14004f434:	jmp    FWORD PTR [rdx-0x54]
   14004f437:	jmp    0x14004f454
   14004f439:	cdq    
   14004f43a:	and    eax,0x486a3ff7
   14004f43f:	xor    BYTE PTR [rax+0x26e81b9d],al
   14004f445:	or     DWORD PTR [rdi+0xe8a3711],ebp
   14004f44b:	hlt    
   14004f44c:	mov    DWORD PTR [rbx+0x45f2581],esp
   14004f452:	xor    al,0xa
   14004f454:	stos   DWORD PTR es:[rdi],eax
   14004f455:	add    BYTE PTR [rdx-0x7e4447cb],cl
   14004f45b:	out    0xc9,al
   14004f45d:	sti    
   14004f45e:	jno    0x14004f4dc
   14004f460:	jb     0x14004f464
   14004f462:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f463:	(bad)  
   14004f464:	mov    edi,0xae073d19
   14004f469:	ret    0xbeae
   14004f46c:	pop    rsi
   14004f46d:	add    al,0x30
   14004f46f:	xchg   esi,eax
   14004f470:	ss mov edx,0x45e5c58
   14004f476:	data16 rex.WRXB (bad) 
   14004f479:	jo     0x14004f471
   14004f47b:	cmp    BYTE PTR [rsi-0x5a],al
   14004f47e:	(bad)  
   14004f47f:	movabs ds:0xac21cdf966a4f26f,eax
   14004f488:	sub    eax,0x8eb3423
   14004f48d:	fidivr WORD PTR [rax-0x37c0d2bd]
   14004f493:	pop    rbx
   14004f494:	jns    0x14004f4db
   14004f496:	pop    rbp
   14004f497:	mov    esp,0x185402b3
   14004f49c:	push   rax
   14004f49d:	mov    ah,0xe6
   14004f49f:	(bad)  
   14004f4a0:	in     al,dx
   14004f4a1:	jns    0x14004f499
   14004f4a3:	stc    
   14004f4a4:	and    eax,0x3f2c56e5
   14004f4a9:	jns    0x14004f479
   14004f4ab:	mov    eax,0xbfca7e58
   14004f4b0:	and    eax,DWORD PTR [rcx+0x43a05688]
   14004f4b6:	(bad)  
   14004f4b7:	jmp    FWORD PTR [rdi+0x9]
   14004f4ba:	xchg   BYTE PTR ds:[rdx],ah
   14004f4bd:	and    ah,BYTE PTR [rdx-0x59bb1d79]
   14004f4c3:	xor    dh,ah
   14004f4c5:	mov    bh,0x42
   14004f4c7:	(bad)  
   14004f4c8:	sbb    BYTE PTR [rbx+0x7601f96f],dh
   14004f4ce:	or     al,0xd6
   14004f4d0:	or     BYTE PTR [rbp-0xbd940f7],al
   14004f4d6:	pop    rax
   14004f4d7:	(bad)
   14004f4da:	adc    edi,esi
   14004f4dc:	sbb    al,0xfa
   14004f4de:	adc    esp,DWORD PTR [rdx+0x54549490]
   14004f4e4:	rex.RB adc al,0x5
   14004f4e7:	(bad)  
   14004f4e8:	(bad)  
   14004f4ea:	movabs eax,ds:0xf1fa801d68443c96
   14004f4f3:	push   0xfffffffffffffff1
   14004f4f5:	lods   eax,DWORD PTR ds:[rsi]
   14004f4f6:	hlt    
   14004f4f7:	(bad)  
   14004f4f8:	js     0x14004f4fe
   14004f4fa:	(bad)  
   14004f4fb:	rex.XB fidivr DWORD PTR [rip+0x39805c95]        # 0x179855197
   14004f502:	je     0x14004f486
   14004f504:	pop    rax
   14004f505:	mov    esp,0xadb5248f
   14004f50a:	(bad)  
   14004f50b:	ins    DWORD PTR es:[rdi],dx
   14004f50c:	fwait
   14004f50d:	in     eax,dx
   14004f50e:	mov    esp,ss
   14004f510:	adc    BYTE PTR [rsi-0x460fd82],bh
   14004f516:	stos   DWORD PTR es:[rdi],eax
   14004f517:	rcr    DWORD PTR [rsi-0x2e6201c1],1
   14004f51d:	stos   DWORD PTR es:[rdi],eax
   14004f51e:	mov    esi,0x5d9eb102
   14004f523:	std    
   14004f524:	cmp    ebx,DWORD PTR [rbx-0x5fb56810]
   14004f52a:	xor    al,0x5c
   14004f52c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f52d:	adc    dh,BYTE PTR [rax]
   14004f52f:	add    edx,DWORD PTR [rsi-0x41]
   14004f532:	xor    eax,0xf86f13d
   14004f537:	or     eax,0xbbc4fd2c
   14004f53c:	cli    
   14004f53d:	jo     0x14004f576
   14004f53f:	adc    dl,bl
   14004f541:	push   0xffffffffffffffc3
   14004f543:	mov    al,0x9c
   14004f545:	xor    esp,DWORD PTR [rsi-0x55]
   14004f548:	and    eax,0x62607092
   14004f54d:	rex.X push rdx
   14004f54f:	add    al,cl
   14004f551:	rex.WRXB
   14004f552:	rex.RX test BYTE PTR [rsi+0x14254f33],r8b
   14004f559:	rex.X adc sil,BYTE PTR [rdi]
   14004f55c:	rex rol DWORD PTR [rax-0x69],1
   14004f560:	mov    cl,0xf1
   14004f562:	or     BYTE PTR [rip+0xfffffffff897e07d],cl        # 0x1389cd5e5
   14004f568:	xor    eax,0xe594875f
   14004f56d:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14004f56f:	loopne 0x14004f5ea
   14004f571:	push   rax
   14004f572:	ror    bl,0x4f
   14004f575:	add    bl,BYTE PTR [rsi-0x74e18495]
   14004f57b:	xchg   esp,eax
   14004f57c:	rex.WR (bad) 
   14004f57e:	jnp    0x14004f56e
   14004f580:	(bad)  
   14004f581:	shr    ah,cl
   14004f583:	hlt    
   14004f584:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f585:	xchg   dh,dh
   14004f587:	(bad)  
   14004f588:	call   0x117a3931c
   14004f58d:	push   rbp
   14004f58e:	add    al,0xaa
   14004f590:	pop    rax
   14004f591:	enter  0x1334,0x7e
   14004f595:	stos   DWORD PTR es:[rdi],eax
   14004f596:	sub    DWORD PTR [rax-0x34db3f98],ecx
   14004f59c:	push   rdi
   14004f59d:	pop    rcx
   14004f59e:	imul   esp,DWORD PTR [rbp-0x2ebd8569],0xadd0a842
   14004f5a8:	sti    
   14004f5a9:	ror    bl,0xd3
   14004f5ac:	pop    rax
   14004f5ad:	jl     0x14004f5ab
   14004f5af:	fwait
   14004f5b0:	cmp    BYTE PTR [rdx-0x4a233a2a],dh
   14004f5b6:	ja     0x14004f618
   14004f5b8:	clc    
   14004f5b9:	shl    ch,0x18
   14004f5bc:	jmp    0xf18d76ae
   14004f5c1:	mov    ah,0xb1
   14004f5c3:	mov    DWORD PTR [rbp-0x19ffa3b],eax
   14004f5c9:	and    al,0x86
   14004f5cb:	mov    fs,WORD PTR [ebx+0x68]
   14004f5cf:	mul    BYTE PTR [rdx+rdi*8]
   14004f5d2:	data16 rex.WRX movabs rax,ds:0xbeb5405e5c419c5a
   14004f5dd:	mov    eax,cs
   14004f5df:	fwait
   14004f5e0:	mov    dl,bl
   14004f5e2:	mov    dl,0xab
   14004f5e4:	push   rsi
   14004f5e5:	jg     0x14004f626
   14004f5e7:	and    ah,ah
   14004f5e9:	cs mov esi,0x2a43d856
   14004f5ef:	cld    
   14004f5f0:	jo     0x14004f640
   14004f5f2:	or     ebx,DWORD PTR [rsi+0x21]
   14004f5f5:	push   rdi
   14004f5f6:	adc    BYTE PTR [rsi-0x54],bh
   14004f5f9:	test   BYTE PTR [rdi+0x2241ec2f],bl
   14004f5ff:	nop
   14004f600:	xchg   ecx,eax
   14004f601:	sub    al,0xd1
   14004f603:	rex.RXB adc DWORD PTR [r8-0x1d14a03e],r8d
   14004f60a:	jrcxz  0x14004f5a5
   14004f60c:	jle    0x14004f672
   14004f60e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f60f:	pop    rsi
   14004f610:	(bad)  
   14004f611:	rol    DWORD PTR [rbx-0x72],0x12
   14004f615:	pop    rax
   14004f616:	(bad)  
   14004f617:	jge    0x14004f639
   14004f619:	(bad)  
   14004f61a:	rex.WXB jne 0x14004f5f8
   14004f61d:	out    0x4a,eax
   14004f61f:	(bad)  
   14004f620:	rex.RX cmc 
   14004f622:	shr    DWORD PTR [rip+0x28542fe3],cl        # 0x16859260b
   14004f628:	repnz adc dl,BYTE PTR [rdx+rdi*8]
   14004f62c:	xchg   DWORD PTR [rdx+rdx*2],ebx
   14004f62f:	or     al,0xda
   14004f631:	and    al,0xc4
   14004f633:	test   bl,bl
   14004f635:	xchg   edx,eax
   14004f636:	lea    eax,[rdx+0x2c]
   14004f639:	and    BYTE PTR [rdi],bh
   14004f63b:	cdq    
   14004f63c:	pop    rbx
   14004f63d:	xchg   edx,eax
   14004f63e:	loope  0x14004f5fb
   14004f640:	scas   eax,DWORD PTR es:[rdi]
   14004f641:	(bad)  
   14004f642:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f643:	or     al,cl
   14004f645:	rex.XB jnp 0x14004f60e
   14004f648:	adc    DWORD PTR [rax],ebx
   14004f64a:	push   rsp
   14004f64b:	jno    0x14004f68f
   14004f64d:	shr    dl,1
   14004f64f:	in     al,dx
   14004f650:	loope  0x14004f678
   14004f652:	mov    WORD PTR [rcx+rdi*1-0x26],ss
   14004f656:	cs rex.R mov cx,0xea91
   14004f65c:	or     DWORD PTR [rsi-0xa067060],eax
   14004f662:	clc    
   14004f663:	sar    BYTE PTR [rdi+0x7c],1
   14004f666:	mov    eax,0xfaff6bf3
   14004f66b:	loope  0x14004f618
   14004f66d:	jg     0x14004f66a
   14004f66f:	(bad)  
   14004f670:	mov    ecx,0x4434fdd
   14004f675:	addr32 or eax,0xcfed4162
   14004f67b:	adc    al,0x82
   14004f67d:	sub    DWORD PTR [rbx-0x40290a0e],eax
   14004f683:	je     0x14004f62b
   14004f685:	out    dx,eax
   14004f686:	(bad)  
   14004f687:	rcr    DWORD PTR [rsi+0x2f75f713],1
   14004f68d:	stc    
   14004f68e:	(bad)  
   14004f68f:	(bad)  
   14004f690:	out    0xdc,al
   14004f692:	and    eax,DWORD PTR [rdi+0x2ee97363]
   14004f698:	ret    0xd641
   14004f69b:	add    BYTE PTR [rdi+0xe],bh
   14004f69e:	or     ecx,edx
   14004f6a0:	(bad)  
   14004f6a1:	test   al,0xa2
   14004f6a3:	iret   
   14004f6a4:	jge    0x14004f6cc
   14004f6a6:	in     al,0xdf
   14004f6a8:	fcomp  QWORD PTR [rdi+rsi*4]
   14004f6ab:	movabs al,ds:0xdcfd8ebcc8294d2d
   14004f6b4:	lods   al,BYTE PTR ds:[rsi]
   14004f6b5:	fisttp WORD PTR [rbx+0xbc39f43]
   14004f6bb:	sub    BYTE PTR [rax],dl
   14004f6bd:	cli    
   14004f6be:	(bad)  
   14004f6bf:	push   rdx
   14004f6c0:	add    BYTE PTR [rsi+0x2819cf6d],dh
   14004f6c6:	jge    0x14004f677
   14004f6c8:	mov    ah,0xb2
   14004f6ca:	xor    BYTE PTR [rdi-0x3c2709c2],dh
   14004f6d0:	pop    rdi
   14004f6d1:	fnstsw WORD PTR [rbp-0x37]
   14004f6d4:	loope  0x14004f6a7
   14004f6d6:	sbb    eax,0x8baf7dbd
   14004f6db:	rex.R or esi,0xfffffff8
   14004f6df:	mov    bl,0x64
   14004f6e1:	add    DWORD PTR [rsi+0x6e],eax
   14004f6e4:	(bad)  
   14004f6e5:	retf   0xe08b
   14004f6e8:	fld    DWORD PTR [rbx]
   14004f6ea:	repz (bad) 
   14004f6ec:	mov    cr6,rsp
   14004f6ef:	popf   
   14004f6f0:	pop    rsi
   14004f6f1:	je     0x14004f746
   14004f6f3:	(bad)  
   14004f6f4:	int    0x73
   14004f6f6:	ffreep st(1)
   14004f6f8:	hlt    
   14004f6f9:	jae    0x14004f68a
   14004f6fb:	loop   0x14004f6e5
   14004f6fd:	(bad)  
   14004f6fe:	ret    
   14004f6ff:	rex.W push rdi
   14004f701:	fiadd  WORD PTR [rdx+0x6376bbbd]
   14004f707:	movabs al,ds:0xd2c4db5c58c4e00e
   14004f710:	sar    BYTE PTR [rax+rdi*2],cl
   14004f713:	out    dx,al
   14004f714:	and    al,0x46
   14004f716:	data16 mov fs,WORD PTR [rbx+0x68]
   14004f71a:	data16 sbb al,0x7d
   14004f71d:	mov    bl,0xe3
   14004f71f:	test   al,0x17
   14004f721:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f722:	push   rcx
   14004f723:	lods   eax,DWORD PTR ds:[rsi]
   14004f724:	sub    al,0x20
   14004f726:	scas   al,BYTE PTR es:[rdi]
   14004f727:	(bad)  
   14004f728:	and    esp,DWORD PTR [rsi-0x6e1af68b]
   14004f72e:	and    al,0x1f
   14004f730:	(bad)  
   14004f731:	lods   al,BYTE PTR ds:[rsi]
   14004f732:	sbb    BYTE PTR [rcx-0x6f],r14b
   14004f736:	loopne 0x14004f6db
   14004f738:	or     ah,BYTE PTR [rax-0x57ad76de]
   14004f73e:	jmp    0x14004f79a
   14004f740:	(bad)  
   14004f741:	neg    BYTE PTR [rax+0x57e17745]
   14004f747:	pop    rsi
   14004f748:	ret    0xe9eb
   14004f74b:	xchg   ecx,eax
   14004f74c:	test   DWORD PTR [rdi+0x38],ebx
   14004f74f:	add    BYTE PTR [rcx+0x5b7fe614],bl
   14004f755:	clc    
   14004f756:	iret   
   14004f757:	and    DWORD PTR [rbx+rsi*4-0x2207a611],edi
   14004f75e:	out    0x77,eax
   14004f760:	clc    
   14004f761:	scas   eax,DWORD PTR es:[rdi]
   14004f762:	adc    eax,0x39fe647d
   14004f767:	adc    eax,0xc756fa79
   14004f76c:	(bad)  
   14004f76d:	fsub   st(1),st
   14004f76f:	(bad)  
   14004f770:	sar    BYTE PTR [rax],1
   14004f772:	movabs gs:0x899801968aa1eed0,al
   14004f77c:	rex.W mov dl,sil
   14004f77f:	adc    edx,DWORD PTR [rax]
   14004f781:	scas   al,BYTE PTR es:[rdi]
   14004f782:	mov    WORD PTR [rsp+riz*8-0x3a3f46f4],ds
   14004f789:	jnp    0x14004f78e
   14004f78b:	and    bh,BYTE PTR [rax+0x32769360]
   14004f791:	push   0xfffffffffffffff9
   14004f793:	inc    esp
   14004f795:	fst    DWORD PTR [rip+0xe64220]        # 0x140eb39bb
   14004f79b:	in     al,dx
   14004f79c:	rex.RXB
   14004f79d:	rex.WRXB cmps BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   14004f7a0:	cmp    al,0x4a
   14004f7a2:	retf   
   14004f7a3:	(bad)  
   14004f7a4:	out    dx,al
   14004f7a5:	pop    rsi
   14004f7a6:	xor    DWORD PTR [rax],0xfffffff3
   14004f7a9:	int3   
   14004f7aa:	(bad)  
   14004f7ab:	iret   
   14004f7ac:	xchg   edi,edi
   14004f7ae:	jmp    0x11b04070a
   14004f7b3:	rex.RXB (bad) 
   14004f7b5:	out    dx,eax
   14004f7b6:	jnp    0x14004f76c
   14004f7b8:	loope  0x14004f76a
   14004f7ba:	xchg   BYTE PTR [rsi+rdi*8-0x7331d93b],bh
   14004f7c1:	add    cl,BYTE PTR [rdx+0x24]
   14004f7c4:	push   rax
   14004f7c5:	(bad)  
   14004f7c6:	xchg   ebp,eax
   14004f7c7:	repz mov bl,0x29
   14004f7ca:	(bad)  
   14004f7cb:	(bad)  
   14004f7cc:	jg     0x14004f7a1
   14004f7ce:	add    BYTE PTR [rax+0x1e],ch
   14004f7d1:	rex.WXB jnp 0x14004f763
   14004f7d4:	jge    0x14004f77b
   14004f7d6:	cmp    esi,esp
   14004f7d8:	mov    DWORD PTR [rbx+0x8dcf2e3],ebx
   14004f7de:	jne    0x14004f83f
   14004f7e0:	rex.WRB loopne 0x14004f7e1
   14004f7e3:	lods   al,BYTE PTR ds:[rsi]
   14004f7e4:	add    BYTE PTR [rsp+rbp*4+0x9],al
   14004f7e8:	cmp    DWORD PTR [rdx-0x7ec9d9ab],ebx
   14004f7ee:	(bad)  
   14004f7ef:	mov    edx,0xdb2fb2b2
   14004f7f4:	div    DWORD PTR [rsi+0x6f]
   14004f7f7:	mov    BYTE PTR [rsi+rsi*8-0x705c17cd],r11b
   14004f7ff:	(bad)  
   14004f800:	out    0xb2,eax
   14004f802:	pop    rdi
   14004f803:	sar    DWORD PTR [rcx+0x42],cl
   14004f806:	(bad)  
   14004f807:	fistp  WORD PTR [rdi+0x2e]
   14004f80a:	rcr    BYTE PTR [rcx+0x6104edb6],0xad
   14004f811:	jg     0x14004f830
   14004f813:	add    BYTE PTR [rip+0xffffffffc6faddd7],bh        # 0x106ffd5f0
   14004f819:	imul   ebp,DWORD PTR [rdi],0x7f
   14004f81c:	(bad)  
   14004f81d:	imul   edi,edi,0x7d
   14004f820:	fucomp st(1)
   14004f822:	mov    ecx,0x1268c193
   14004f827:	push   rax
   14004f828:	xchg   ecx,eax
   14004f829:	mov    al,0xf9
   14004f82b:	fiadd  WORD PTR [rip+0x62003948]        # 0x1a2053179
   14004f831:	imul   ebp,DWORD PTR [rdx+0x6c2a19b4],0xd4f11ac4
   14004f83b:	rcr    DWORD PTR [rax+0x7d],cl
   14004f83e:	repnz (bad) [rdi]
   14004f841:	(bad)  
   14004f842:	rcr    DWORD PTR [rcx],1
   14004f844:	lahf   
   14004f845:	(bad)  
   14004f847:	stos   BYTE PTR es:[rdi],al
   14004f848:	mov    DWORD PTR [rsi+0x430b7d91],ebx
   14004f84e:	mov    ebp,0x71d6f41d
   14004f853:	push   rdi
   14004f854:	rex.XB cmc 
   14004f856:	adc    ebp,0xb0b15d26
   14004f85c:	mov    esp,0x8fcc33b4
   14004f861:	movsxd esi,DWORD PTR [rax-0x12]
   14004f864:	and    al,0x86
   14004f866:	addr32 fs in eax,0xde
   14004f86a:	push   0x7e
   14004f86c:	(bad)  
   14004f86d:	(bad)  
   14004f86e:	repnz cmp al,0xe2
   14004f871:	ficom  DWORD PTR [rdx]
   14004f873:	(bad)
   14004f878:	mov    WORD PTR cs:[rbx-0x56953378],?
   14004f87f:	xchg   ebx,eax
   14004f880:	ss hlt 
   14004f882:	(bad)  
   14004f883:	jbe    0x14004f863
   14004f885:	(bad)  
   14004f886:	lods   eax,DWORD PTR ds:[rsi]
   14004f887:	cmp    edi,ebx
   14004f889:	rex.WR scas al,BYTE PTR es:[rdi]
   14004f88b:	mov    eax,0x3b7e5893
   14004f890:	(bad)  
   14004f891:	(bad)  
   14004f892:	jo     0x14004f863
   14004f894:	lea    ebx,[rdi]
   14004f896:	sub    BYTE PTR [rdi+0x1],al
   14004f899:	(bad)  
   14004f89a:	rex.WX
   14004f89b:	rex.XB fstp QWORD PTR [r14-0x4d]
   14004f89f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f8a0:	es (bad) 
   14004f8a2:	out    0xf3,al
   14004f8a4:	sbb    ebp,DWORD PTR [rdx+0x4b5fc670]
   14004f8aa:	or     BYTE PTR [rbx-0x1f],0xf
   14004f8ae:	outs   dx,BYTE PTR ds:[rsi]
   14004f8af:	lods   eax,DWORD PTR ds:[rsi]
   14004f8b0:	fcmovnb st,st(2)
   14004f8b2:	pop    rdi
   14004f8b3:	data16 sti 
   14004f8b5:	push   rcx
   14004f8b6:	fs neg ebp
   14004f8b9:	sub    eax,0xc72d17b4
   14004f8be:	fist   WORD PTR [rcx-0x55e9d27a]
   14004f8c4:	rex.WX sub cl,BYTE PTR [rdx-0x675975ee]
   14004f8cb:	add    ch,BYTE PTR [rbx]
   14004f8cd:	cmp    dl,BYTE PTR [rax-0x6e]
   14004f8d0:	(bad)  
   14004f8d2:	in     eax,dx
   14004f8d3:	sbb    al,0x58
   14004f8d5:	enter  0x233f,0x4
   14004f8d9:	rex.WXB neg r15b
   14004f8dc:	xchg   esp,eax
   14004f8dd:	(bad)  
   14004f8de:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f8df:	(bad)  
   14004f8e0:	retf   
   14004f8e1:	ret    
   14004f8e2:	nop
   14004f8e3:	jns    0x14004f932
   14004f8e5:	add    DWORD PTR [rsi-0x26ba83c4],ebp
   14004f8eb:	adc    BYTE PTR [rax+0xb],ah
   14004f8ee:	(bad)  
   14004f8ef:	popf   
   14004f8f0:	sub    eax,0x11b0b00a
   14004f8f5:	mov    edi,0x9dd1d1f6
   14004f8fa:	mov    edi,0x75be6ff5
   14004f8ff:	loopne 0x14004f932
   14004f901:	pushf  
   14004f902:	fxch   st(2)
   14004f904:	xchg   edi,eax
   14004f905:	ret    0x980d
   14004f908:	add    al,0x3e
   14004f90a:	cmovb  ebp,DWORD PTR [rbp-0x19309e90]
   14004f911:	adc    bl,al
   14004f913:	fsub   st(5),st
   14004f915:	stc    
   14004f916:	push   rdi
   14004f917:	cmp    eax,0x7f7aafa3
   14004f91c:	cwde   
   14004f91d:	cld    
   14004f91e:	vpaddq ymm7,ymm12,YMMWORD PTR [rbp+rdi*1+0x1e5010f7]
   14004f927:	rex or eax,0xc2f86257
   14004f92d:	xor    al,0xc
   14004f92f:	rex.X movabs ds:0x4b959922a4981297,eax
   14004f939:	sub    BYTE PTR [rax],0xd2
   14004f93c:	es xor esi,eax
   14004f93f:	mov    ecx,0x33fd5ff7
   14004f944:	mov    edx,0x3cf10ff5
   14004f949:	leave  
   14004f94a:	shr    bh,0x7f
   14004f94d:	add    eax,0x208d9c00
   14004f952:	xor    al,0x25
   14004f954:	rcr    BYTE PTR [rcx],1
   14004f956:	sbb    al,0xd9
   14004f958:	cmp    eax,0xef5dcb78
   14004f95d:	cld    
   14004f95e:	cdq    
   14004f95f:	mov    esi,0x117fa1c1
   14004f964:	cmp    DWORD PTR [rsi],0xaa8d0cb
   14004f96a:	ins    BYTE PTR es:[rdi],dx
   14004f96b:	xchg   ebp,eax
   14004f96c:	add    BYTE PTR [rax+rdx*2+0x44],ch
   14004f970:	xor    DWORD PTR [rax-0x6b87394e],0x1f
   14004f977:	cli    
   14004f978:	fdiv   QWORD PTR [rdi]
   14004f97a:	data16 lahf 
   14004f97c:	jp     0x14004f972
   14004f97e:	fist   DWORD PTR [rbx-0x662e712b]
   14004f984:	rex.WRB cmp r10b,BYTE PTR [r13-0x74c9c9ca]
   14004f98b:	xor    edx,DWORD PTR [rdx-0x21]
   14004f98e:	scas   al,BYTE PTR es:[rdi]
   14004f98f:	mov    ebp,0xae87bdfd
   14004f994:	mov    eax,0xede27434
   14004f999:	rex.XB retf 
   14004f99b:	push   rbx
   14004f99c:	out    dx,eax
   14004f99d:	fnstsw WORD PTR [rip+0xffffffffbe96ea7f]        # 0xfe9be422
   14004f9a3:	mov    ecx,0x4fcf50f1
   14004f9a8:	and    DWORD PTR [rsi],ebp
   14004f9aa:	movabs al,cs:0x5742a2aeec445b5e
   14004f9b4:	mov    dl,0xf8
   14004f9b6:	xor    al,0xdc
   14004f9b8:	sub    BYTE PTR [rsi+rbx*2+0x18f24042],ah
   14004f9bf:	mov    edi,0x5f94b045
   14004f9c4:	sub    edi,DWORD PTR [rdx-0xacc6f10]
   14004f9ca:	xor    ch,cl
   14004f9cc:	and    eax,0xf6c61795
   14004f9d1:	(bad)  
   14004f9d2:	jb     0x14004f9b3
   14004f9d4:	fild   WORD PTR [rip+0xffffffff8e5d0dd9]        # 0xce6207b3
   14004f9da:	stos   DWORD PTR es:[rdi],eax
   14004f9db:	sbb    esp,DWORD PTR [rdx]
   14004f9dd:	add    BYTE PTR [rsp+rax*8],ch
   14004f9e0:	xchg   esi,eax
   14004f9e1:	sub    eax,0xcab6407a
   14004f9e6:	xchg   edx,eax
   14004f9e7:	push   rax
   14004f9e8:	(bad)  
   14004f9e9:	cmp    esi,edx
   14004f9eb:	(bad)  
   14004f9ec:	in     eax,0x7b
   14004f9ee:	mov    dl,0xf7
   14004f9f0:	data16 stc 
   14004f9f2:	leave  
   14004f9f3:	mov    al,BYTE PTR [rbx-0x75947de0]
   14004f9f9:	rex.WX fld QWORD PTR [rdx+r9*2-0x6375fe6f]
   14004fa01:	add    DWORD PTR [rbx-0x4e952bc4],ecx
   14004fa07:	mov    bh,0x36
   14004fa09:	std    
   14004fa0a:	hlt    
   14004fa0b:	movsxd ebx,DWORD PTR [rax+0x6f]
   14004fa0e:	jge    0x14004f9f8
   14004fa10:	jge    0x14004fa3a
   14004fa12:	rex.WB or BYTE PTR [r15+0x2],bpl
   14004fa16:	(bad)  
   14004fa17:	(bad)  
   14004fa18:	movabs al,ds:0xcfec1a2817f5735a
   14004fa21:	add    al,0xa0
   14004fa23:	(bad)  
   14004fa24:	jp     0x14004f9b0
   14004fa26:	retf   0x780d
   14004fa29:	imul   esi,eax,0x36
   14004fa2c:	or     DWORD PTR [rax],ecx
   14004fa2e:	stc    
   14004fa2f:	fs jrcxz 0x14004fa0b
   14004fa32:	test   esi,ecx
   14004fa34:	jg     0x14004fa30
   14004fa36:	test   eax,0xbbf43ebf
   14004fa3b:	(bad)  
   14004fa3c:	int3   
   14004fa3d:	imul   BYTE PTR [rsi]
   14004fa3f:	and    BYTE PTR [rbx],cl
   14004fa41:	(bad)  
   14004fa42:	push   rsi
   14004fa43:	loope  0x14004fa14
   14004fa45:	movabs al,ds:0xb02be7d9fd08f9fc
   14004fa4e:	pop    rbp
   14004fa4f:	adc    DWORD PTR [rdx+rax*8-0x122b3c24],esi
   14004fa56:	push   QWORD PTR [rax-0x19]
   14004fa59:	icebp  
   14004fa5a:	(bad)  
   14004fa5b:	mov    edi,0x3e7ed686
   14004fa60:	xor    BYTE PTR [rdi],cl
   14004fa62:	and    eax,0xd272070d
   14004fa67:	inc    BYTE PTR [rax+0x1176197a]
   14004fa6d:	(bad)  
   14004fa6e:	adc    dl,BYTE PTR [rsp+rax*8-0x70]
   14004fa72:	cld    
   14004fa73:	jnp    0x14004faca
   14004fa75:	adc    ah,cl
   14004fa77:	pop    rax
   14004fa78:	rex.RB clc 
   14004fa7a:	loop   0x14004faab
   14004fa7c:	repnz imul edi,edi,0xffffffdb
   14004fa80:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004fa81:	xor    DWORD PTR [rax-0x9],esp
   14004fa84:	js     0x14004fad4
   14004fa86:	xor    dh,al
   14004fa88:	xchg   ebp,eax
   14004fa89:	movabs eax,ds:0x151ae8411b38000
   14004fa92:	hlt    
   14004fa93:	fdiv   st(2),st
   14004fa95:	mov    dh,0x77
   14004fa97:	mov    esi,0x43c1ef65
   14004fa9c:	mov    edi,0x1d7d6212
   14004faa1:	adc    eax,edx
   14004faa3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004faa4:	mov    BYTE PTR [rdx-0x5aa3f77b],bl
   14004faaa:	cmp    BYTE PTR [rbx-0x20894544],bh
   14004fab0:	int3   
   14004fab1:	leave  
   14004fab2:	mov    cl,0x3f
   14004fab4:	jnp    0x14004faa0
   14004fab6:	scas   eax,DWORD PTR es:[rdi]
   14004fab7:	mov    edi,0xcce30f0
   14004fabc:	in     eax,dx
   14004fabd:	ins    BYTE PTR es:[rdi],dx
   14004fabe:	fld    TBYTE PTR [rdx-0x9281443]
   14004fac4:	ja     0x14004faa5
   14004fac6:	mov    ecx,0x3fe4ee7b
   14004facb:	out    dx,eax
   14004facc:	lods   al,BYTE PTR ds:[rsi]
   14004facd:	int3   
   14004face:	(bad)  
   14004fad0:	pop    rcx
   14004fad1:	pop    rbp
   14004fad2:	rex fcomp QWORD PTR [rbp+rax*2-0x3b]
   14004fad7:	pop    rbp
   14004fad8:	push   rsp
   14004fad9:	(bad)  
   14004fada:	or     cl,cl
   14004fadc:	mov    edx,0xfd8d24f8
   14004fae1:	addr32 mov dl,0xcf
   14004fae4:	or     DWORD PTR [rip+0x2a116a15],esi        # 0x16a1664ff
   14004faea:	sub    DWORD PTR [rbp-0x3ecf13da],0xe03c05f3
   14004faf4:	jno    0x14004faf1
   14004faf6:	sbb    al,0xf6
   14004faf8:	retf   
   14004faf9:	movabs eax,fs:0x5df8633ea169e22d
   14004fb03:	clc    
   14004fb04:	xor    ecx,0x5
   14004fb07:	(bad)  
   14004fb08:	xor    ebx,edx
   14004fb0a:	ja     0x14004fa8c
   14004fb0c:	sti    
   14004fb0d:	cmc    
   14004fb0e:	fnstenv [rdx]
   14004fb10:	(bad)  
   14004fb11:	push   rcx
   14004fb12:	add    eax,0xc960d815
   14004fb17:	sbb    DWORD PTR ds:[rip+0xffffffff96e58bfa],0xefcf466c        # 0xd6ea871c
   14004fb22:	push   rdi
   14004fb23:	mul    DWORD PTR [rbx]
   14004fb25:	sbb    bh,BYTE PTR [rdi-0x60]
   14004fb28:	test   al,0x82
   14004fb2a:	stos   BYTE PTR es:[rdi],al
   14004fb2b:	cld    
   14004fb2c:	cmp    dl,BYTE PTR [rsi-0x38]
   14004fb2f:	mov    al,0x1f
   14004fb31:	stos   BYTE PTR es:[rdi],al
   14004fb32:	add    BYTE PTR [rsi+rdx*4],dl
   14004fb35:	mov    bl,0xde
   14004fb37:	(bad)  
   14004fb38:	sub    DWORD PTR [rbx],ebx
   14004fb3a:	push   0xffffffffffffffbe
   14004fb3c:	(bad)  
   14004fb3d:	ss rex sub ecx,DWORD PTR ds:[rbx]
   14004fb42:	add    eax,0x30029bf2
   14004fb47:	clc    
   14004fb48:	retf   
   14004fb49:	test   DWORD PTR [rbx],esp
   14004fb4b:	sbb    esi,edx
   14004fb4d:	addr32 mov dh,0xf
   14004fb50:	add    ebx,DWORD PTR [rbx]
   14004fb52:	movsxd r11,DWORD PTR [rdi+0x3a]
   14004fb56:	xor    eax,0xf8ff6bf0
   14004fb5b:	mov    edx,DWORD PTR [rdi+0x19621e7e]
   14004fb61:	rex.WXB loope 0x14004fb43
   14004fb64:	rex.WRX
   14004fb65:	bnd jge 0x14004fb17
   14004fb68:	(bad)  
   14004fb69:	jg     0x14004fb11
   14004fb6b:	lods   eax,DWORD PTR ds:[rsi]
   14004fb6c:	lea    esp,[rax-0x31]
   14004fb6f:	rex.R ins BYTE PTR es:[rdi],dx
   14004fb71:	ja     0x14004fbf1
   14004fb73:	mov    ebp,0xbbb6f67e
   14004fb78:	ret    0x6fdc
   14004fb7b:	hlt    
   14004fb7c:	jb     0x14004fb75
   14004fb7e:	xor    eax,0x1baac6e2
   14004fb83:	rex
   14004fb84:	lock jo 0x14004fb26
   14004fb87:	test   eax,0x2f6f4683
   14004fb8c:	rex push rax
   14004fb8e:	and    ah,0xbf
   14004fb91:	mov    al,0x67
   14004fb93:	and    DWORD PTR [rdi-0x67],esi
   14004fb96:	mov    ebx,0x7bc8d10f
   14004fb9b:	jle    0x14004fb36
   14004fb9d:	pop    rdi
   14004fb9e:	std    
   14004fb9f:	rex.WRB in al,0x9c
   14004fba2:	xor    BYTE PTR [rbx-0x60207e6e],0x1c
   14004fba9:	rcr    BYTE PTR [rcx-0x7bec8c4a],0x9
   14004fbb0:	sbb    dil,BYTE PTR [rdi]
   14004fbb3:	cli    
   14004fbb4:	fdivr  st(1),st
   14004fbb6:	xchg   ebp,eax
   14004fbb7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004fbb8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004fbb9:	rex.WRXB out dx,al
   14004fbbb:	cmp    BYTE PTR [rax+0x68],dh
   14004fbbe:	cwde   
   14004fbbf:	cmp    edi,DWORD PTR [rbp-0x7f791551]
   14004fbc5:	outs   dx,BYTE PTR ds:[rsi]
   14004fbc6:	ret    
   14004fbc7:	(bad)  
   14004fbc8:	(bad)  
   14004fbc9:	push   rdi
   14004fbca:	(bad)  
   14004fbcb:	jmp    FWORD PTR [rax-0x14]
   14004fbce:	test   eax,0xd1f37e27
   14004fbd3:	iret   
   14004fbd4:	jge    0x14004fbb8
   14004fbd6:	movabs ds:0x4afec2592d4763d3,eax
   14004fbdf:	sbb    BYTE PTR [rax+0x1f73ffd5],bh
   14004fbe5:	jo     0x14004fc49
   14004fbe7:	xor    edi,DWORD PTR [rbx+rdi*4]
   14004fbea:	rex popf 
   14004fbec:	rex.WRXB out dx,al
   14004fbee:	pop    rdx
   14004fbef:	popf   
   14004fbf0:	pop    rcx
   14004fbf1:	out    dx,eax
   14004fbf2:	pop    rbp
   14004fbf3:	pop    rdi
   14004fbf4:	mov    esp,0x4b5346a9
   14004fbf9:	cmp    al,0x5f
   14004fbfb:	jb     0x14004fbf6
   14004fbfd:	sub    ebp,DWORD PTR [rdx+0x64]
   14004fc00:	add    DWORD PTR [rdi],ecx
   14004fc02:	retf   
   14004fc03:	out    dx,al
   14004fc04:	and    esp,DWORD PTR [rcx]
   14004fc06:	sti    
   14004fc07:	lods   al,BYTE PTR ds:[rsi]
   14004fc08:	movabs ds:0xc27ad1d9b32f844f,al
   14004fc11:	xchg   ebp,eax
   14004fc12:	ret    0x640f
   14004fc15:	rex.W int 0x4a
   14004fc18:	rol    cl,cl
   14004fc1a:	rex.W cmp al,0x72
   14004fc1d:	loope  0x14004fbd6
   14004fc1f:	js     0x14004fbdc
   14004fc21:	or     BYTE PTR [rbp-0x10],bl
   14004fc24:	push   rax
   14004fc25:	lahf   
   14004fc26:	cmc    
   14004fc27:	(bad)  
   14004fc28:	unpcklps xmm6,XMMWORD PTR [rbp+0x30e7013]
   14004fc2f:	rex.RX sub r10b,BYTE PTR [rsi]
   14004fc32:	out    0xf0,al
   14004fc34:	adc    eax,0x9f63337d
   14004fc39:	xchg   ebx,eax
   14004fc3a:	jle    0x14004fc60
   14004fc3c:	sbb    BYTE PTR [rbx],r13b
   14004fc3f:	rex.WRB adc BYTE PTR [r10-0x1f],r10b
   14004fc43:	mov    tr7,esp
   14004fc46:	or     sil,r8b
   14004fc49:	sbb    DWORD PTR [rax-0x16acf35a],edx
   14004fc4f:	rex.WX
   14004fc50:	repnz xor DWORD PTR fs:[rax],ebx
   14004fc54:	imul   ecx,DWORD PTR [r10],0x9bcd1484
   14004fc5b:	lock (bad) 
   14004fc5d:	or     al,BYTE PTR [rax+0x7b00cf8a]
   14004fc63:	scas   eax,DWORD PTR es:[rdi]
   14004fc64:	popf   
   14004fc65:	jno    0x14004fcb4
   14004fc67:	sbb    DWORD PTR [rax+0x15],eax
   14004fc6a:	or     BYTE PTR [rsi],0xba
   14004fc6d:	pop    rbx
   14004fc6e:	js     0x14004fce3
   14004fc70:	add    eax,0x33e9b2c8
   14004fc75:	xlat   BYTE PTR ds:[rbx]
   14004fc76:	xor    edi,DWORD PTR [rdi+0x3bf6bf19]
   14004fc7c:	rex.WRXB out dx,al
   14004fc7e:	cli    
   14004fc7f:	test   edi,edi
   14004fc81:	icebp  
   14004fc82:	inc    BYTE PTR [rbx-0x41f7bff1]
   14004fc88:	rcl    bh,cl
   14004fc8a:	(bad)  
   14004fc8b:	sub    eax,0x5fe08bf
   14004fc90:	pop    rax
   14004fc91:	jno    0x14004fc4a
   14004fc93:	mov    ch,0x9d
   14004fc95:	addr32 (bad) 
   14004fc97:	add    ah,al
   14004fc99:	(bad)  
   14004fc9a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004fc9b:	pop    rbp
   14004fc9c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004fc9d:	(bad)  
   14004fc9e:	jb     0x14004fc7f
   14004fca0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004fca1:	outs   dx,BYTE PTR ds:[rsi]
   14004fca2:	or     DWORD PTR [rbx+0x79a9fafb],ecx
   14004fca8:	xor    eax,0x156fd33b
   14004fcad:	(bad)  
   14004fcae:	jp     0x14004fc4b
   14004fcb0:	neg    dl
   14004fcb2:	call   0xd4054947
   14004fcb7:	or     edx,ebx
   14004fcb9:	xchg   BYTE PTR [rsi-0x12],bh
   14004fcbc:	scas   al,BYTE PTR es:[rdi]
   14004fcbd:	fisttp QWORD PTR [rbx-0x30d7a0bd]
   14004fcc3:	jno    0x14004fc7b
   14004fcc5:	sti    
   14004fcc6:	jp     0x14004fcad
   14004fcc8:	and    BYTE PTR [rax+0x12eedb72],al
   14004fcce:	ins    BYTE PTR es:[rdi],dx
   14004fccf:	in     eax,0x6
   14004fcd1:	(bad)  
   14004fcd2:	pop    rbx
   14004fcd3:	fdivrp st(3),st
   14004fcd5:	pandn  mm1,mm6
   14004fcd8:	int3   
   14004fcd9:	jno    0x14004fcc7
   14004fcdb:	mov    cl,0x87
   14004fcdd:	out    dx,eax
   14004fcde:	lahf   
   14004fcdf:	(bad)  
   14004fce0:	cmp    esi,DWORD PTR [rdx+0x5b50b680]
   14004fce6:	xor    eax,ebp
   14004fce8:	(bad)  
   14004fce9:	cmp    ch,BYTE PTR [rdi]
   14004fceb:	xor    BYTE PTR [rsi+0x286db648],dl
   14004fcf1:	rex (bad) 
   14004fcf3:	fnstsw WORD PTR [rcx+0x6fbbea7d]
   14004fcf9:	ds mov esp,0xf6bffe32
   14004fcff:	jo     0x14004fcf8
   14004fd01:	or     cl,BYTE PTR [rcx-0x4e1cbc0]
   14004fd07:	pop    QWORD PTR [rax+0x4cadca5a]
   14004fd0d:	(bad)  
   14004fd0e:	gs call 0x15bfa8622
   14004fd14:	in     al,dx
   14004fd15:	and    eax,0x4f935d26
   14004fd1a:	or     al,BYTE PTR [rax+rax*1+0x4264008b]
   14004fd21:	rex.WRB out 0x7f,al
   14004fd24:	adc    edx,ebp
   14004fd26:	push   rbx
   14004fd27:	ja     0x14004fca9
   14004fd29:	or     eax,0xb30a93ea
   14004fd2e:	mov    edx,0x59b0a50a
   14004fd33:	(bad)  
   14004fd34:	(bad)  
   14004fd35:	sub    edi,ebp
   14004fd37:	adc    eax,0xd0b50064
   14004fd3c:	rex.X sbb BYTE PTR [rdx-0x6c],bl
   14004fd40:	rex iret 
   14004fd42:	imul   ebx,ecx,0x87bbea7a
   14004fd48:	and    BYTE PTR [rbx+0x41a45914],ch
   14004fd4e:	sar    BYTE PTR [rdi-0x70],1
   14004fd51:	sahf   
   14004fd52:	add    eax,DWORD PTR [rbp+0x3c9227b5]
   14004fd58:	add    DWORD PTR [rdi-0x6],ecx
   14004fd5b:	add    DWORD PTR [rbp+rcx*1-0x40],edi
   14004fd5f:	xor    dh,ah
   14004fd61:	rex.RXB add BYTE PTR [r10-0x7b09e88f],r10b
   14004fd68:	lods   eax,DWORD PTR ds:[rsi]
   14004fd69:	rex.WR pop rcx
   14004fd6b:	mov    DWORD PTR [rax+0x43],eax
   14004fd6e:	add    eax,0x3ffe140
   14004fd73:	movabs al,ds:0xac2b0b14816165a0
   14004fd7c:	xor    cl,BYTE PTR [rbp-0x2fd446c0]
   14004fd82:	in     al,0x66
   14004fd84:	cmc    
   14004fd85:	(bad)  
   14004fd86:	(bad)  
   14004fd87:	div    DWORD PTR [rbp-0x605407d]
   14004fd8d:	icebp  
   14004fd8e:	sbb    eax,0x5f82c833
   14004fd93:	sub    dh,BYTE PTR [rsi+0x39]
   14004fd96:	rol    BYTE PTR [rbp-0x2518074c],0xce
   14004fd9d:	outs   dx,DWORD PTR ds:[rsi]
   14004fd9f:	or     eax,0xdbdef40d
   14004fda4:	jns    0x14004fd8e
   14004fda6:	pop    rdi
   14004fda7:	(bad)  
   14004fda8:	out    0x8d,al
   14004fdaa:	lahf   
   14004fdab:	(bad)  
   14004fdac:	push   rbx
   14004fdad:	rex.W in al,dx
   14004fdaf:	and    eax,0x6ad99e70
   14004fdb4:	cdq    
   14004fdb5:	add    BYTE PTR [rax-0x46f1e434],0xdd
   14004fdbc:	cwde   
   14004fdbd:	std    
   14004fdbe:	ins    DWORD PTR es:[rdi],dx
   14004fdbf:	xor    BYTE PTR [rdi+0x7b2f847e],cl
   14004fdc5:	out    0x9f,eax
   14004fdc7:	loopne 0x14004fd99
   14004fdc9:	cmp    dh,cl
   14004fdcb:	xchg   ebx,eax
   14004fdcc:	sbb    eax,edi
   14004fdce:	retf   0x41
   14004fdd1:	in     eax,0xb6
   14004fdd3:	pop    rbp
   14004fdd4:	stos   DWORD PTR es:[rdi],eax
   14004fdd5:	fisubr DWORD PTR [rbx-0x2d]
   14004fdd8:	js     0x14004fdb7
   14004fdda:	push   rbx
   14004fddb:	iret   
   14004fddc:	cmp    al,0xf1
   14004fdde:	int3   
   14004fddf:	test   eax,0x6a789e67
   14004fde4:	jne    0x14004fe47
   14004fde6:	outs   dx,BYTE PTR ds:[rsi]
   14004fde7:	or     ecx,ebx
   14004fde9:	retf   0xc59b
   14004fdec:	(bad)  
   14004fded:	(bad)  
   14004fdee:	rex.B test eax,0xf2c4ce0c
   14004fdf4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004fdf5:	lods   eax,DWORD PTR ds:[rsi]
   14004fdf6:	fistp  WORD PTR [rdi+0x227fdfe8]
   14004fdfc:	jb     0x14004fdf8
   14004fdfe:	fidivr DWORD PTR [rsi+0x7b9bf9f5]
   14004fe04:	rcr    ch,1
   14004fe06:	(bad)  
   14004fe07:	mov    ecx,0x2fd585fe
   14004fe0c:	test   bh,bl
   14004fe0e:	jb     0x14004fe02
   14004fe10:	mov    ebp,0x71320f0a
   14004fe15:	leave  
   14004fe16:	(bad)  
   14004fe17:	ins    BYTE PTR es:[rdi],dx
   14004fe18:	js     0x14004fdfa
   14004fe1a:	mov    ?,WORD PTR [rbx+0xf7125f5]
   14004fe20:	rex.WR clc 
   14004fe22:	add    DWORD PTR [rcx+0x8],edx
   14004fe25:	mov    cl,0x52
   14004fe27:	add    DWORD PTR [rcx+rsi*4+0x7abaede8],0xb901489
   14004fe32:	push   rsi
   14004fe33:	xor    al,0xc2
   14004fe35:	rex.WRXB std 
   14004fe37:	clc    
   14004fe38:	sub    bl,BYTE PTR [rax+0x53]
   14004fe3b:	rex.WRXB movabs r8,0x130a21a27ad5b685
   14004fe45:	(bad)  
   14004fe46:	adc    eax,0xb04e3b7e
   14004fe4b:	fs lahf 
   14004fe4d:	(bad)  
   14004fe4e:	retf   0x9a02
   14004fe51:	in     eax,dx
   14004fe52:	(bad)  
   14004fe53:	ja     0x14004fe5c
   14004fe55:	mov    esp,0x15c02076
   14004fe5a:	push   rbp
   14004fe5b:	fdecstp 
   14004fe5d:	retf   
   14004fe5e:	jae    0x14004fe76
   14004fe60:	fdiv   st(2),st
   14004fe62:	(bad)  
   14004fe64:	stc    
   14004fe65:	cmp    esp,ebx
   14004fe67:	rex.X cwde 
   14004fe69:	sub    al,0xa2
   14004fe6b:	push   rcx
   14004fe6c:	mov    eax,0x3b3c8002
   14004fe71:	rex rol DWORD PTR [rcx-0x1de08f],1
   14004fe78:	(bad)  
   14004fe79:	add    eax,0x5cba3c36
   14004fe7e:	std    
   14004fe7f:	ficomp WORD PTR [rbp-0x9]
   14004fe82:	pop    rbp
   14004fe83:	cmc    
   14004fe84:	jmp    0x14004ff05
   14004fe86:	xor    edx,edi
   14004fe88:	cmp    ecx,DWORD PTR [rdi-0x15320694]
   14004fe8e:	addr32 xchg edi,eax
   14004fe90:	out    dx,eax
   14004fe91:	in     eax,0x12
   14004fe93:	jle    0x14004fe75
   14004fe95:	mov    esp,0xe0016c2b
   14004fe9a:	jnp    0x14004fe37
   14004fe9c:	add    ecx,DWORD PTR [rdi]
   14004fe9e:	mov    esp,0x1a9dce39
   14004fea3:	movabs eax,ds:0x839a6ab5149337cd
   14004feac:	repnz sbb eax,0x430fd1c8
   14004feb2:	add    dh,cl
   14004feb4:	adc    al,0x68
   14004feb6:	or     BYTE PTR [rcx+0x697b4318],bl
   14004febc:	jrcxz  0x14004fe67
   14004febe:	mov    edi,0xcb4781c0
   14004fec3:	movsxd ebx,DWORD PTR [rdi+0x32bc0509]
   14004fec9:	adc    DWORD PTR [rax-0x47],eax
   14004fecc:	popf   
   14004fecd:	fld    st(7)
   14004fecf:	mov    dl,0xd7
   14004fed1:	mov    dh,0x9d
   14004fed3:	sub    eax,0x9f76737c
   14004fed8:	scas   eax,DWORD PTR es:[rdi]
   14004fed9:	rex.WRB in al,0xd8
   14004fedc:	icebp  
   14004fedd:	rex.WX
   14004fede:	repnz mov cl,0xe7
   14004fee1:	mov    edx,0xef87a385
   14004fee6:	cwde   
   14004fee7:	jnp    0x14004fedd
   14004fee9:	ret    
   14004feea:	std    
   14004feeb:	mov    esp,0xf0456b71
   14004fef0:	(bad)  
   14004fef1:	ds rex.RX
   14004fef3:	sbb    r10,QWORD PTR [rcx]
   14004fef6:	(bad)  
   14004fef7:	(bad)  
   14004fef8:	scas   eax,DWORD PTR es:[rdi]
   14004fef9:	sub    DWORD PTR [rdi-0x55],esi
   14004fefc:	(bad)  
   14004fefd:	cdq    
   14004fefe:	add    esi,eax
   14004ff00:	lods   al,BYTE PTR ds:[rsi]
   14004ff01:	cmp    eax,0xadff4213
   14004ff06:	push   0xffffffffa4d58379
   14004ff0b:	adc    edi,DWORD PTR [rsi]
   14004ff0d:	scas   al,BYTE PTR es:[rdi]
   14004ff0f:	(bad)  
   14004ff10:	loop   0x14004ff01
   14004ff12:	out    0x8b,al
   14004ff14:	xchg   edi,eax
   14004ff15:	xor    eax,0x3f09c1fd
   14004ff1a:	retf   0x3921
   14004ff1d:	fist   DWORD PTR [rdi-0x75]
   14004ff20:	js     0x14004fece
   14004ff22:	rol    DWORD PTR [rdi+0x7ef1ff75],1
   14004ff28:	add    BYTE PTR [rdx+0x3f3ee3ec],bl
   14004ff2e:	cdq    
   14004ff2f:	jmp    0x14004fec3
   14004ff31:	mov    ecx,0x62006f05
   14004ff36:	(bad)  
   14004ff37:	or     eax,0x8b14309a
   14004ff3c:	jrcxz  0x14004ff42
   14004ff3e:	and    ebp,DWORD PTR [rip+0x3fbc0d59]        # 0x17fc10c9d
   14004ff44:	sbb    BYTE PTR [rax-0x23],bh
   14004ff47:	jg     0x14004ff9e
   14004ff49:	(bad)  
   14004ff4a:	hlt    
   14004ff4b:	adc    eax,0xeced4525
   14004ff50:	rex.XB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff52:	adc    DWORD PTR [rdx],eax
   14004ff54:	mul    bh
   14004ff56:	add    edx,DWORD PTR [rdx+0x1bee4ee8]
   14004ff5c:	rol    BYTE PTR [rip+0xffffffff88802366],0x9f        # 0xc88522c9
   14004ff63:	pop    rax
   14004ff64:	call   0x12f841f65
   14004ff69:	adc    edx,DWORD PTR [rdi-0x3]
   14004ff6c:	(bad)  
   14004ff6d:	shl    DWORD PTR fs:[rdi],0x17
   14004ff71:	(bad)  
   14004ff72:	adc    edi,DWORD PTR [rbp+0x2f]
   14004ff75:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004ff76:	loopne 0x14004ff17
   14004ff78:	imul   ebx,ebx,0x3e4b6f3e
   14004ff7e:	stos   DWORD PTR es:[rdi],eax
   14004ff7f:	idiv   DWORD PTR [rdi]
   14004ff81:	(bad)  
   14004ff82:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004ff83:	(bad)  
   14004ff85:	(bad)  
   14004ff86:	(bad)  
   14004ff87:	std    
   14004ff88:	fild   QWORD PTR [rdx-0x1a]
   14004ff8b:	and    DWORD PTR [rdx],0xfffffff5
   14004ff8e:	cmp    DWORD PTR [rcx],esi
   14004ff90:	enter  0xb026,0xd1
   14004ff94:	sbb    eax,0xb645b56
   14004ff99:	mov    esp,DWORD PTR [rsi+rax*1]
   14004ff9c:	push   rsi
   14004ff9d:	cmp    BYTE PTR [rcx+rsi*8-0x61],bh
   14004ffa1:	loope  0x14004ff79
   14004ffa3:	(bad)  
   14004ffa4:	fwait
   14004ffa5:	rex.RB mov r13d,0x8190738c
   14004ffab:	scas   eax,DWORD PTR es:[rdi]
   14004ffac:	rex.WR add al,0x50
   14004ffaf:	outs   dx,BYTE PTR ds:[rsi]
   14004ffb0:	scas   eax,DWORD PTR es:[edi]
   14004ffb2:	sub    al,0x3c
   14004ffb4:	push   rbx
   14004ffb5:	(bad)  
   14004ffb6:	rex.RX (bad) 
   14004ffb8:	jle    0x14004ffad
   14004ffba:	test   esi,0xe76df3e6
   14004ffc0:	sbb    al,0xec
   14004ffc2:	jg     0x14004ffeb
   14004ffc4:	mov    esp,DWORD PTR [rsi+0x1a57867b]
   14004ffca:	or     bh,BYTE PTR [rdi+0x7d]
   14004ffcd:	js     0x140050032
   14004ffcf:	(bad)  
   14004ffd0:	or     eax,0xcb7ef135
   14004ffd5:	stos   BYTE PTR es:[rdi],al
   14004ffd6:	adc    ebx,DWORD PTR [rdi+0x3e]
   14004ffd9:	or     ecx,DWORD PTR [rbx+rsi*1+0x5bdacefd]
   14004ffe0:	fdivr  QWORD PTR [rdi]
   14004ffe2:	(bad)  
   14004ffe3:	rol    BYTE PTR [rbx-0x6aae0606],1
   14004ffe9:	rex.R
   14004ffea:	rex.WRX xlat BYTE PTR ds:[rbx]
   14004ffec:	xor    eax,0xba773f9f
   14004fff1:	adc    DWORD PTR [rcx],eax
   14004fff3:	mov    ch,0xda
   14004fff5:	cli    
   14004fff6:	nop
   14004fff7:	jge    0x14005006c
   14004fff9:	gs sti 
   14004fffb:	int    0xf2
   14004fffd:	fwait
   14004fffe:	xor    bh,al
   140050000:	push   0x4534061
   140050005:	rex.RB fmul DWORD PTR [r14]
   140050008:	(bad)  
   140050009:	movabs ds:0xb4918fe1104dcc1b,al
   140050012:	lods   eax,DWORD PTR ds:[rsi]
   140050013:	cwde   
   140050014:	jno    0x140050022
   140050016:	sub    al,BYTE PTR [r9]
   140050019:	add    edi,DWORD PTR [rdi+riz*4]
   14005001c:	fist   WORD PTR [rdx+0x7e]
   14005001f:	in     eax,dx
   140050020:	ja     0x14005005b
   140050022:	xchg   edx,eax
   140050023:	add    BYTE PTR [rdi+0x34],cl
   140050026:	repnz mov al,0x9f
   140050029:	sbb    DWORD PTR [rax-0x7d],esi
   14005002c:	cmp    BYTE PTR [rax+0x20aa40ba],al
   140050032:	add    DWORD PTR [rcx+0x3],0x14
   140050036:	sti    
   140050037:	(bad)  
   140050038:	rex.WR movabs rsi,0x14c7d9092d72892b
   140050042:	add    BYTE PTR [rbx],dl
   140050044:	lods   eax,DWORD PTR ds:[rsi]
   140050045:	jg     0x1400500be
   140050047:	scas   al,BYTE PTR es:[rdi]
   140050048:	out    dx,eax
   140050049:	(bad)  
   14005004a:	fdivp  st(2),st
   14005004c:	leave  
   14005004d:	sub    edi,DWORD PTR [rdi+0x1f]
   140050050:	addr32 (bad) 
   140050052:	(bad)  
   140050053:	xchg   edi,eax
   140050054:	(bad)  
   140050055:	repnz lahf 
   140050057:	imul   edi,DWORD PTR [rbx],0x7b
   14005005a:	imul   edi,DWORD PTR [rbx+rax*1],0xeef0cfe0
   140050061:	mov    cl,0x4b
   140050063:	mov    al,0xfe
   140050065:	popf   
   140050066:	sub    eax,edx
   140050068:	(bad)  
   140050069:	in     eax,dx
   14005006a:	xor    eax,0xbfa0a230
   14005006f:	and    BYTE PTR [rsi],bh
   140050071:	mov    WORD PTR [rdi],?
   140050073:	es out 0x4a,eax
   140050076:	sub    al,0x8f
   140050078:	add    BYTE PTR [rax],al
   14005007a:	and    dl,dl
   14005007c:	movabs eax,ds:0x71dec39f33f568ab
   140050085:	pushf  
   140050086:	and    esp,DWORD PTR [rdi]
   140050088:	loopne 0x14005001f
   14005008a:	scas   eax,DWORD PTR es:[rdi]
   14005008b:	add    BYTE PTR [rax+0x3083d3e7],al
   140050091:	or     ebp,esi
   140050093:	or     esp,DWORD PTR [rip+0x3e4ece7a]        # 0x17e53cf13
   140050099:	add    al,BYTE PTR [rax]
   14005009b:	rex.WRXB hlt 
   14005009d:	in     al,dx
   14005009e:	pop    rdx
   14005009f:	scas   al,BYTE PTR es:[rdi]
   1400500a0:	sar    DWORD PTR [rbx+rsi*8-0x6e],1
   1400500a4:	int    0xd9
   1400500a6:	mov    ebx,0x15b0f06a
   1400500ab:	jrcxz  0x1400500b1
   1400500ad:	retf   
   1400500ae:	retf   0xd833
   1400500b1:	stos   DWORD PTR es:[rdi],eax
   1400500b2:	(bad)  
   1400500b3:	xor    al,0x32
   1400500b5:	jmp    0x1415e5764
   1400500ba:	add    al,0x85
   1400500bc:	cld    
   1400500bd:	rex.RX idiv BYTE PTR [rcx+0x3d]
   1400500c1:	mov    edi,0x9944d8fa
   1400500c6:	or     al,0xc
   1400500c8:	pop    rsi
   1400500c9:	jne    0x1400500f2
   1400500cb:	retf   0x72a0
   1400500ce:	rex.RB xchg r8d,eax
   1400500d0:	test   DWORD PTR [rdi+0x5c],ebx
   1400500d3:	(bad)  
   1400500d4:	rex.RX push rbp
   1400500d6:	add    eax,0x3657cfef
   1400500db:	loop   0x140050091
   1400500dd:	push   rbp
   1400500de:	jns    0x1400500bd
   1400500e0:	out    dx,eax
   1400500e1:	xlat   BYTE PTR ds:[rbx]
   1400500e2:	add    bl,BYTE PTR [rax+riz*4-0x38617c51]
   1400500e9:	or     DWORD PTR [rdx+0x2f],eax
   1400500ec:	sbb    eax,0x6c1e5ca6
   1400500f1:	xlat   BYTE PTR ds:[rbx]
   1400500f2:	rex.WB enter 0xbf21,0xa0
   1400500f7:	xchg   ebx,eax
   1400500f8:	iret   
   1400500f9:	jl     0x1400500f8
   1400500fb:	adc    ch,dh
   1400500fd:	jmp    0x1400500bc
   1400500ff:	jb     0x140050142
   140050101:	test   BYTE PTR [rdx+0x3655ef2e],dl
   140050107:	sti    
   140050108:	hlt    
   140050109:	adc    al,0x60
   14005010b:	mov    bh,0xf8
   14005010d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005010e:	fadd   QWORD PTR [rax+0x78263998]
   140050114:	sub    BYTE PTR [rbp+rdi*8-0x31f0e4b9],dh
   14005011b:	hlt    
   14005011c:	std    
   14005011d:	sti    
   14005011e:	ja     0x14005019c
   140050120:	cli    
   140050121:	mov    bh,BYTE PTR [rdi]
   140050123:	rex.RX pop rbx
   140050125:	clc    
   140050126:	mov    bh,0x13
   140050128:	jge    0x140050109
   14005012a:	(bad)  
   14005012b:	pop    rbx
   14005012c:	jnp    0x14005019c
   14005012e:	add    DWORD PTR [rbx-0x1a],ebx
   140050131:	xlat   BYTE PTR ds:[rbx]
   140050132:	push   rdi
   140050133:	js     0x140050199
   140050135:	movabs ds:0x6b5be58f5cafa46,al
   14005013e:	out    dx,eax
   14005013f:	(bad)  
   140050140:	push   rbp
   140050141:	jbe    0x1400500ed
   140050143:	es or  edx,edx
   140050146:	sub    dh,bl
   140050148:	(bad)  
   140050149:	mov    esi,0x747ec511
   14005014e:	xlat   BYTE PTR ds:[rbx]
   14005014f:	out    dx,eax
   140050150:	(bad)
   140050153:	jrcxz  0x140050171
   140050155:	fs loopne 0x140050183
   140050158:	fild   WORD PTR [rip+0xffffffffedb73978]        # 0x12dbc3ad6
   14005015e:	rex.WB
   14005015f:	rex.WB sbb rax,0xffffffffef7b6428
   140050165:	in     al,dx
   140050166:	mov    bh,0x6e
   140050168:	jg     0x14005015f
   14005016a:	repnz icebp 
   14005016c:	(bad)  
   14005016d:	mov    WORD PTR [rcx],es
   14005016f:	sbb    esi,0xffffffe6
   140050172:	sbb    dh,BYTE PTR [rdx+0x58f727b7]
   140050178:	jl     0x140050159
   14005017a:	jge    0x140050134
   14005017c:	adc    dh,dl
   14005017e:	ret    
   14005017f:	std    
   140050180:	cmp    ah,BYTE PTR [rbx-0x2c]
   140050183:	lods   eax,DWORD PTR ds:[rsi]
   140050184:	ja     0x140050145
   140050186:	or     DWORD PTR [rdx+0x62f4f637],eax
   14005018c:	movabs al,ds:0x8f42dfd064f6e390
   140050195:	mov    ah,0x9b
   140050198:	(bad)
   14005019b:	rex.WB retf 0x6016
   14005019f:	sar    DWORD PTR [rdx],0xc
   1400501a2:	adc    DWORD PTR [rcx+rcx*4+0x58],ebx
   1400501a6:	retf   
   1400501a7:	outs   dx,DWORD PTR ds:[rsi]
   1400501a8:	(bad)  
   1400501a9:	(bad)  
   1400501aa:	movabs eax,ds:0x6d9ebcedfc60bd16
   1400501b3:	push   0x228a01bd
   1400501b8:	(bad)  
   1400501b9:	jrcxz  0x1400501c0
   1400501bb:	or     dl,ch
   1400501bd:	neg    BYTE PTR [rax+0x47722032]
   1400501c3:	rex.WRB movabs r14,0x7e4b0924c19f5f33
   1400501cd:	xor    edi,edx
   1400501cf:	(bad)  
   1400501d0:	lods   eax,DWORD PTR ds:[rsi]
   1400501d1:	adc    ecx,DWORD PTR [rsi]
   1400501d3:	test   al,0x68
   1400501d5:	frstor [rsi-0x50eed8f6]
   1400501db:	(bad)  
   1400501dc:	cmp    bl,bl
   1400501de:	imul   edi
   1400501e0:	out    dx,al
   1400501e1:	(bad)  
   1400501e2:	in     al,dx
   1400501e3:	xchg   ebp,eax
   1400501e4:	(bad)  
   1400501e5:	rex.RB
   1400501e6:	rex.WRX out 0xb5,eax
   1400501e9:	mov    BYTE PTR [rsi+0x27effe4c],cl
   1400501ef:	sar    DWORD PTR [rdi],0xd3
   1400501f2:	xchg   esi,eax
   1400501f3:	out    0x56,eax
   1400501f5:	rex.WB (bad) 
   1400501f7:	test   BYTE PTR [rax],0xe8
   1400501fa:	stc    
   1400501fb:	rex.RXB xor al,0x7e
   1400501fe:	(bad)  [rdi-0x79]
   140050201:	adc    edi,edi
   140050203:	out    0x20,eax
   140050205:	xor    eax,0x50184877
   14005020a:	sahf   
   14005020b:	rex.WRXB push r15
   14005020d:	mov    dl,0x80
   14005020f:	(bad)  
   140050210:	stos   DWORD PTR es:[rdi],eax
   140050211:	or     DWORD PTR [rdi],esp
   140050213:	fdiv   DWORD PTR [rdx+0x6cbb223]
   140050219:	push   0x7a1c1ef4
   14005021e:	neg    DWORD PTR [rdi]
   140050220:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050222:	(bad)  
   140050223:	jno    0x14005023b
   140050225:	xor    dh,al
   140050227:	(bad)  
   140050228:	add    eax,DWORD PTR [rcx]
   14005022a:	mov    esp,0x5b5b5b5c
   14005022f:	add    ebx,DWORD PTR [rcx]
   140050231:	or     eax,esp
   140050233:	jmp    0x1171845f6
   140050238:	ins    BYTE PTR es:[rdi],dx
   140050239:	pushf  
   14005023a:	sahf   
   14005023b:	sbb    esp,edx
   14005023d:	cmc    
   14005023e:	mov    bh,0xb
   140050240:	movabs ds:0xd9181660545fc4cd,al
   140050249:	push   rdi
   14005024a:	xchg   DWORD PTR [rax+0x6f],ebx
   14005024d:	idiv   ebx
   14005024f:	ins    DWORD PTR es:[rdi],dx
   140050250:	fild   WORD PTR [rax+0x2d]
   140050253:	mov    dl,0xcd
   140050255:	fidiv  DWORD PTR [rsi+0x67]
   140050258:	or     DWORD PTR [rsi],0x72d7c1de
   14005025e:	or     al,0x3c
   140050260:	mov    dh,0x4f
   140050262:	ficom  DWORD PTR [rbp+0x28]
   140050265:	pop    rdx
   140050266:	push   rdi
   140050267:	pop    rsi
   140050268:	(bad)  
   140050269:	lods   eax,DWORD PTR ds:[rsi]
   14005026a:	out    0x1b,al
   14005026c:	rex.XB
   14005026d:	lock (bad) 
   14005026f:	lahf   
   140050270:	push   0xffffffff9e11fe79
   140050275:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050276:	sbb    ebx,DWORD PTR [rbp-0x5a7a73cc]
   14005027c:	iret   
   14005027d:	(bad)  
   14005027e:	(bad)  
   14005027f:	pop    rcx
   140050280:	and    cl,ah
   140050282:	test   dh,bl
   140050284:	ds (bad) 
   140050286:	retf   
   140050287:	iret   
   140050288:	add    eax,0x352ed8a9
   14005028d:	jbe    0x140050217
   14005028f:	rex.WRXB (bad) 
   140050291:	loop   0x14005027f
   140050293:	(bad)  
   140050294:	shl    eax,cl
   140050296:	mov    esi,0xf3ec9c28
   14005029b:	sub    esp,DWORD PTR [rbp+rax*1-0xefd7c00]
   1400502a2:	(bad)  
   1400502a3:	jl     0x140050255
   1400502a5:	sub    edx,DWORD PTR [rbp+0x51]
   1400502a8:	sbb    ah,dl
   1400502aa:	jge    0x140050314
   1400502ac:	mov    dh,0xef
   1400502ae:	push   rdi
   1400502af:	fdivrp st(5),st
   1400502b1:	fldcw  WORD PTR [rbx]
   1400502b3:	out    dx,eax
   1400502b4:	test   DWORD PTR [rbx+rcx*2+0x57fe5a59],ebp
   1400502bb:	xchg   al,dh
   1400502bd:	add    esp,edi
   1400502bf:	and    dh,BYTE PTR [rsi+0x2e0c31f9]
   1400502c5:	(bad)  
   1400502c6:	movabs ds:0xb87b2b8585b78bf7,al
   1400502cf:	mov    ecx,0xf697c51a
   1400502d4:	scas   eax,DWORD PTR es:[rdi]
   1400502d5:	(bad)  
   1400502d6:	xchg   ebp,eax
   1400502d7:	cmp    al,0x8e
   1400502d9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400502da:	test   al,0x71
   1400502dc:	push   0xfffffffffa9e3798
   1400502e1:	(bad)  
   1400502e2:	cmp    al,bh
   1400502e4:	or     dh,cl
   1400502e6:	rex.X (bad) 
   1400502e8:	pop    rsi
   1400502e9:	push   rsp
   1400502ea:	add    BYTE PTR [rdi],ch
   1400502ec:	je     0x1400502c9
   1400502ee:	scas   al,BYTE PTR es:[rdi]
   1400502ef:	add    al,0x6c
   1400502f1:	movabs ds:0xa395d6f278affb87,eax
   1400502fa:	sti    
   1400502fb:	jp     0x1400502cd
   1400502fd:	mov    ebp,0x9b242dd1
   140050302:	(bad)  
   140050303:	sub    al,0x13
   140050305:	pop    rbp
   140050306:	test   eax,0x3beb8f00
   14005030b:	sti    
   14005030c:	mov    fs,WORD PTR [rdx]
   14005030e:	(bad)  
   14005030f:	push   rax
   140050310:	rcr    BYTE PTR [rbx+rsi*8-0x2b],0x4d
   140050315:	add    BYTE PTR [rbx-0x78],ah
   140050318:	vpminub xmm7,xmm1,xmm1
   14005031c:	stc    
   14005031d:	push   rbp
   14005031e:	adc    eax,0x72b3f854
   140050323:	jo     0x14005030a
   140050325:	adc    dl,BYTE PTR [rdi+rsi*1-0x2ce5dfe0]
   14005032c:	scas   eax,DWORD PTR es:[rdi]
   14005032d:	nop
   14005032e:	(bad)  
   14005032f:	stos   BYTE PTR es:[rdi],al
   140050330:	movabs al,ds:0xf280a97d55b1f29a
   140050339:	xchg   ebp,eax
   14005033a:	(bad)  
   14005033b:	adc    eax,DWORD PTR [rsi-0x53650be4]
   140050341:	(bad)  
   140050342:	xchg   edi,eax
   140050343:	rex.W jnp 0x14005034a
   140050346:	test   al,0x9f
   140050348:	outs   dx,BYTE PTR ds:[rsi]
   140050349:	stc    
   14005034a:	or     eax,0xef56b026
   14005034f:	rex.WRXB add al,0xb0
   140050352:	push   rsi
   140050353:	adc    dl,BYTE PTR [rdx+0xdf9775b]
   140050359:	sub    al,0x1e
   14005035b:	loop   0x1400503d9
   14005035d:	(bad)  
   14005035e:	fiadd  DWORD PTR [rdi+rbx*1]
   140050361:	loopne 0x1400503d4
   140050363:	push   rbp
   140050364:	and    al,BYTE PTR [rax-0xc4416f7]
   14005036a:	mov    ebp,0xcf8ef6bf
   14005036f:	pop    rsi
   140050370:	cmc    
   140050371:	jmp    QWORD PTR [rdx-0x45]
   140050374:	lock mov ecx,edi
   140050377:	dec    DWORD PTR [rdx+0x10]
   14005037a:	jle    0x140050357
   14005037c:	(bad)  
   14005037d:	out    dx,al
   14005037e:	(bad)  
   14005037f:	lock xor esp,esi
   140050382:	lods   eax,DWORD PTR ds:[rsi]
   140050383:	jg     0x140050310
   140050385:	xchg   DWORD PTR [rsi-0x1232d888],edi
   14005038b:	out    dx,eax
   14005038c:	rex.XB jp 0x14005039c
   14005038f:	(bad)  
   140050390:	test   al,0x64
   140050392:	icebp  
   140050393:	xchg   DWORD PTR [rbx+0x22],esi
   140050396:	movabs ds:0x827f9da50edfe40c,al
   14005039f:	ret    
   1400503a0:	mul    DWORD PTR [rax+0x22f434dd]
   1400503a6:	add    bh,BYTE PTR [rax+0x51]
   1400503a9:	fcomi  st,st(6)
   1400503ab:	xor    DWORD PTR [rdx+0x1dab668d],0xf37eb9df
   1400503b5:	(bad)  
   1400503b6:	pop    rbx
   1400503b7:	sub    esi,eax
   1400503b9:	pop    rsi
   1400503ba:	pop    rdi
   1400503bb:	add    BYTE PTR [rbx+0x7c2fa58c],0x7c
   1400503c2:	xor    al,ch
   1400503c4:	movabs al,ds:0x54245000068163af
   1400503cd:	and    esi,esp
   1400503cf:	jne    0x1400503c5
   1400503d1:	sub    BYTE PTR [rax-0x2a],bh
   1400503d4:	popf   
   1400503d5:	test   esi,edi
   1400503d7:	rex.WR sub BYTE PTR [rbx+0x6f82e48],r13b
   1400503de:	(bad)  
   1400503df:	fcmovnbe st,st(6)
   1400503e1:	ds out dx,eax
   1400503e3:	sub    ebp,DWORD PTR [rcx+0x790be4b9]
   1400503e9:	out    0x4e,al
   1400503eb:	mov    edi,0xf0b35f79
   1400503f0:	rcl    DWORD PTR [rbp+0x112b981],1
   1400503f6:	jne    0x14005041d
   1400503f8:	xlat   BYTE PTR ds:[rbx]
   1400503f9:	(bad)  
   1400503fa:	jmp    0x1400503fc
   1400503fc:	push   0xffffffffad6a3eec
   140050401:	add    DWORD PTR [rcx-0x878dd1e],edi
   140050407:	inc    BYTE PTR [rdi]
   140050409:	xor    BYTE PTR [rbp+0x59f32840],0xc1
   140050410:	xchg   ebx,eax
   140050411:	jg     0x1400503df
   140050413:	pop    rdi
   140050414:	and    BYTE PTR [rdi-0x2b4e9b33],bl
   14005041a:	cld    
   14005041b:	test   al,0xbd
   14005041d:	verr   WORD PTR [rbp-0x184e8d9]
   140050424:	div    DWORD PTR [rdi-0x151982]
   14005042a:	mov    WORD PTR [rbx],?
   14005042c:	sti    
   14005042d:	cld    
   14005042e:	scas   eax,DWORD PTR es:[rdi]
   14005042f:	sub    al,0xe1
   140050431:	mov    bh,0xed
   140050433:	int3   
   140050434:	sub    BYTE PTR [rbx+0x48],dl
   140050437:	addr32 je 0x1400503f4
   14005043a:	div    ecx
   14005043c:	sahf   
   14005043d:	(bad)  
   14005043e:	mov    edi,0xef4cc2d
   140050443:	movabs ds:0x96851c9c94010b7b,al
   14005044c:	or     dl,BYTE PTR [rbx]
   14005044e:	sbb    al,0xa
   140050450:	adc    BYTE PTR [rcx],ah
   140050452:	or     BYTE PTR [rdi],0xdc
   140050455:	mov    ch,al
   140050457:	scas   eax,DWORD PTR es:[rdi]
   140050458:	jle    0x140050460
   14005045a:	jnp    0x1400504ab
   14005045c:	loopne 0x14005046a
   14005045e:	retf   
   14005045f:	mov    DWORD PTR [rdi+0x54],ebx
   140050462:	add    bh,bl
   140050464:	jmp    0x1400504dc
   140050466:	(bad)  
   140050467:	and    al,0x30
   140050469:	pop    rbp
   14005046a:	in     eax,dx
   14005046b:	fdivr  DWORD PTR [rax+rbx*8]
   14005046e:	int3   
   14005046f:	sbb    eax,0xf2b9bfdd
   140050474:	fiadd  WORD PTR [rax]
   140050476:	stos   BYTE PTR es:[rdi],al
   140050477:	retf   
   140050478:	clc    
   140050479:	mov    edi,0xe5af7a41
   14005047e:	(bad)  
   14005047f:	push   rsi
   140050480:	(bad)  
   140050481:	in     al,0x10
   140050483:	movabs al,ds:0xa29f9067bd5a6a90
   14005048c:	cld    
   14005048d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005048e:	(bad)  
   14005048f:	sub    DWORD PTR [rdi],0x33
   140050492:	cld    
   140050493:	xchg   ebp,eax
   140050494:	rex.X (bad) 
   140050496:	loopne 0x140050422
   140050498:	movabs al,ds:0x5b59d5023f49a578
   1400504a2:	js     0x1400504ff
   1400504a4:	movsxd ecx,DWORD PTR [rsi+0x5e8fb992]
   1400504aa:	adc    eax,0x9881d1e8
   1400504af:	mov    edi,0xcadcf4b7
   1400504b4:	lods   eax,DWORD PTR ds:[rsi]
   1400504b5:	cmp    bl,al
   1400504b7:	jp     0x1400504b6
   1400504b9:	rex.WB mov es,WORD PTR [r9+0x41]
   1400504bd:	or     al,0xaa
   1400504bf:	mov    al,0x3
   1400504c1:	sub    BYTE PTR [rip+0xffffffff89c6cd83],0x54        # 0xc9cbd24b
   1400504c8:	xchg   edx,eax
   1400504c9:	sub    BYTE PTR [rdx*2-0x2069d286],al
   1400504d0:	rex.XB (bad) 
   1400504d2:	sub    dh,BYTE PTR [rbx-0x1d73dca2]
   1400504d8:	jg     0x140050492
   1400504da:	(bad)  
   1400504db:	cmp    DWORD PTR [rdx+0x1df0f9dc],edi
   1400504e1:	lahf   
   1400504e2:	mov    esi,0x2ed1b7e6
   1400504e7:	loope  0x140050566
   1400504e9:	or     edi,DWORD PTR gs:[rdi+0x240e76d]
   1400504f0:	imul   ecx,DWORD PTR [rax-0xfc1a117],0xffffff8d
   1400504f7:	mov    edi,0x4717661f
   1400504fc:	mov    al,0x79
   1400504fe:	(bad)  
   1400504ff:	sub    DWORD PTR [rdx],0xc9a0d1bb
   140050505:	push   rax
   140050506:	xchg   esi,eax
   140050507:	adc    esp,DWORD PTR [rbp+0x347ec7ff]
   14005050d:	int    0x3d
   14005050f:	cmp    ah,dh
   140050511:	imul   edx,DWORD PTR [rsp+rax*4+0x700545f8],0x4aedb601
   14005051c:	add    BYTE PTR [rax],0xd0
   14005051f:	fcomip st,st(4)
   140050521:	sbb    al,0x3a
   140050523:	jne    0x140050510
   140050525:	(bad)  
   140050527:	popf   
   140050528:	std    
   140050529:	(bad)  
   14005052a:	mov    ebp,0x2c2d84d
   14005052f:	(bad)  
   140050530:	fwait
   140050531:	ret    0xb326
   140050534:	ret    0x59f6
   140050537:	shl    DWORD PTR [rdx+0x10b7259b],0x9f
   14005053e:	pop    rcx
   14005053f:	outs   dx,DWORD PTR ds:[rsi]
   140050540:	adc    r14b,r12b
   140050543:	not    DWORD PTR [rdi+0x2d]
   140050546:	stos   DWORD PTR es:[rdi],eax
   140050547:	rex.WRXB mov es,WORD PTR [r12+r15*1]
   14005054b:	jmp    0x183e7d1d7
   140050550:	xchg   esi,eax
   140050551:	in     al,0x32
   140050553:	(bad)
   140050556:	icebp  
   140050557:	add    al,0xc4
   140050559:	push   0x4e4f72b
   14005055e:	(bad)  
   14005055f:	out    dx,eax
   140050560:	or     DWORD PTR [rax+0x51],ebp
   140050563:	add    edi,ebx
   140050565:	mov    ebp,0x833c0046
   14005056a:	push   rax
   14005056b:	or     DWORD PTR [rbp+0x73],eax
   14005056e:	rex.RXB lods al,BYTE PTR ds:[rsi]
   140050570:	sub    dl,cl
   140050572:	fnsave [rsi+0x53]
   140050575:	(bad)  
   140050576:	and    BYTE PTR [rdi-0x4],0x51
   14005057a:	shr    esi,0xbb
   14005057d:	mov    cl,0x72
   14005057f:	lahf   
   140050580:	rex.RXB push r9
   140050582:	lods   al,BYTE PTR ds:[rsi]
   140050583:	adc    ecx,DWORD PTR [rax]
   140050585:	test   BYTE PTR [rcx],0xf9
   140050588:	pop    rbx
   140050589:	es (bad) 
   14005058b:	mov    ebp,edx
   14005058d:	cli    
   14005058e:	(bad)  
   14005058f:	outs   dx,BYTE PTR ds:[rsi]
   140050590:	std    
   140050591:	(bad)  
   140050592:	mov    ch,0xbf
   140050594:	mov    DWORD PTR [rdi],ebx
   140050596:	add    al,0xd8
   140050598:	jg     0x140050550
   14005059a:	in     eax,dx
   14005059b:	cmp    al,0x61
   14005059d:	ret    0xf38f
   1400505a0:	inc    BYTE PTR [rdi+0x6e]
   1400505a3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400505a4:	test   DWORD PTR [rbx-0x321c9785],esp
   1400505aa:	add    al,0xf4
   1400505ac:	rex.WX or BYTE PTR [rax],sil
   1400505af:	fs xchg edi,eax
   1400505b1:	mov    DWORD PTR [rbx+0x72],esi
   1400505b4:	fs add eax,0x9b423fde
   1400505ba:	jg     0x1400505b1
   1400505bc:	rex.WRB mov r12,cs
   1400505bf:	sar    DWORD PTR [rax+0x11],0x45
   1400505c3:	add    DWORD PTR [rdi],edx
   1400505c5:	adc    eax,0xf2dd8bc0
   1400505ca:	rex push rcx
   1400505cc:	icebp  
   1400505cd:	imul   ebx,DWORD PTR [rax+0x7d1f06ac],0xb7a9c6ed
   1400505d7:	ja     0x1400505e1
   1400505d9:	jnp    0x140050597
   1400505db:	out    dx,eax
   1400505dc:	ds int3 
   1400505de:	rex.WX xchg BYTE PTR [rsi],sil
   1400505e1:	movabs ds:0xbf882be49d20594e,eax
   1400505ea:	sbb    dl,dh
   1400505ec:	add    bl,BYTE PTR [rbx+0x43ef0155]
   1400505f2:	sub    eax,edi
   1400505f4:	and    DWORD PTR [rdi-0xc],esp
   1400505f7:	sub    r12b,BYTE PTR [r10-0x5]
   1400505fb:	ror    DWORD PTR [rax],1
   1400505fd:	mov    esi,0x38e404ac
   140050602:	xor    DWORD PTR [rdi],ebx
   140050604:	and    edx,DWORD PTR [rsi+rbp*2+0x39909180]
   14005060b:	scas   al,BYTE PTR es:[rdi]
   14005060c:	(bad)  
   14005060d:	movabs ds:0xa9611a2809da9191,eax
   140050616:	mov    dl,0x1b
   140050618:	or     al,dl
   14005061a:	paddsb mm4,QWORD PTR [rcx]
   14005061d:	rex.WRXB or r15b,BYTE PTR [r9]
   140050620:	sub    ah,cl
   140050622:	xor    eax,0x3e8c64c8
   140050627:	adc    r12,rsi
   14005062a:	rex.WR
   14005062b:	rex jrcxz 0x140050639
   14005062e:	loopne 0x14005068f
   140050630:	(bad)  
   140050631:	retf   
   140050632:	mov    WORD PTR [rax],es
   140050634:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050635:	(bad)  
   140050636:	ret    0x7e5f
   140050639:	loopne 0x1400505e6
   14005063b:	xchg   edi,eax
   14005063c:	jmp    FWORD PTR [rdi]
   14005063e:	xor    ebx,DWORD PTR [rbx]
   140050640:	(bad)  
   140050641:	xor    dh,BYTE PTR [rsi+0x183f7e13]
   140050647:	ret    0x9b6f
   14005064a:	int3   
   14005064b:	lods   eax,DWORD PTR ds:[rsi]
   14005064c:	in     al,dx
   14005064d:	(bad)  
   14005064e:	retf   
   14005064f:	out    0x4a,al
   140050651:	loopne 0x140050691
   140050653:	fdivp  st(3),st
   140050655:	fsub   QWORD PTR [rbp-0x4c]
   140050658:	neg    BYTE PTR [rbp-0x79094b3d]
   14005065e:	or     BYTE PTR [rbx+rsi*4],cl
   140050661:	jb     0x1400506b1
   140050663:	in     eax,0xf3
   140050665:	(bad)  
   140050666:	rex.R pop rdx
   140050668:	ja     0x140050656
   14005066a:	rex.R ja 0x140050661
   14005066d:	iret   
   14005066e:	jno    0x140050660
   140050670:	xchg   r12d,eax
   140050672:	stc    
   140050673:	adc    BYTE PTR [rdi],dl
   140050675:	adc    eax,0x64da05c0
   14005067a:	nop
   14005067b:	ins    BYTE PTR es:[rdi],dx
   14005067c:	and    eax,DWORD PTR [rax]
   14005067e:	xor    al,0x1b
   140050680:	(bad)  
   140050681:	mov    edx,0x4cce6dd7
   140050686:	mov    fs,WORD PTR [rbp+rdx*4-0x6baffb09]
   14005068d:	cmp    al,0xfa
   14005068f:	fdiv   QWORD PTR [rip+0x546b42d7]        # 0x19470496c
   140050695:	or     BYTE PTR [rdx+0x68],dh
   140050698:	stc    
   140050699:	loop   0x1400506fd
   14005069b:	ins    DWORD PTR es:[rdi],dx
   14005069c:	fst    QWORD PTR [rdx-0x84141e9]
   1400506a2:	(bad)  [rdi-0x405a820e]
   1400506a8:	stos   DWORD PTR es:[rdi],eax
   1400506a9:	in     al,dx
   1400506aa:	sbb    BYTE PTR [rcx],dl
   1400506ac:	lods   eax,DWORD PTR ds:[rsi]
   1400506ad:	mov    dh,0xdd
   1400506af:	icebp  
   1400506b0:	or     al,0x9c
   1400506b2:	rex
   1400506b3:	rex.WXB rol r12,0xac
   1400506b7:	or     BYTE PTR [rdx-0x4524111a],al
   1400506bd:	add    dl,ah
   1400506bf:	rcr    BYTE PTR ds:[rbp-0x7e],0x56
   1400506c4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400506c5:	movabs eax,ds:0xd23e216f4837dc1
   1400506ce:	rcl    DWORD PTR [rcx+0x4fc2fe59],cl
   1400506d4:	push   rbp
   1400506d5:	and    eax,0xd0083c61
   1400506da:	push   rsi
   1400506db:	or     BYTE PTR [rsi],dh
   1400506dd:	(bad)  [rbx+0x68]
   1400506e0:	xor    BYTE PTR [rdi],bh
   1400506e2:	fdivr  st,st(1)
   1400506e4:	outs   dx,BYTE PTR ds:[rsi]
   1400506e5:	clc    
   1400506e6:	fcmove st,st(7)
   1400506e8:	ds js  0x1400506d3
   1400506eb:	pop    rdi
   1400506ec:	(bad)  
   1400506ed:	xor    bl,dl
   1400506ef:	(bad)  
   1400506f0:	xchg   DWORD PTR [rdi+0x2a],edx
   1400506f3:	(bad)  
   1400506f5:	rex.X mov dil,0x73
   1400506f8:	out    0xa,eax
   1400506fa:	lock xchg edi,eax
   1400506fc:	jns    0x1400506d5
   1400506fe:	test   eax,0xfd7ee81d
   140050703:	sbb    bl,BYTE PTR [rdx-0x47]
   140050706:	test   eax,0x7277ef02
   14005070b:	sar    BYTE PTR [rbp+0x0],1
   14005070e:	fnstenv [rbx+0x1fb9ef06]
   140050714:	ret    
   140050715:	test   esp,0x405ad3a2
   14005071b:	in     al,0xa2
   14005071d:	add    bh,BYTE PTR [rax+0x5c59db10]
   140050723:	add    edi,0xbf1ff67b
   140050729:	movsxd esp,ebx
   14005072b:	clc    
   14005072c:	jne    0x14005076b
   14005072e:	rex.W xlat BYTE PTR ds:[rbx]
   140050730:	jns    0x14005079e
   140050732:	pop    rsi
   140050733:	rex.XB jg 0x14005074a
   140050736:	rex.WX add QWORD PTR [rbx],rcx
   140050739:	or     bl,ch
   14005073b:	movabs ds:0xc5b10d6c5a9d756,eax
   140050744:	and    al,0x9d
   140050746:	test   BYTE PTR [rbx+rbx*1+0x311b46b0],dl
   14005074d:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14005074f:	in     al,0xe9
   140050751:	(bad)  
   140050752:	fisubr WORD PTR [rsi+rdi*4]
   140050755:	sti    
   140050756:	sti    
   140050757:	xchg   edx,eax
   140050758:	or     al,0x54
   14005075a:	rex.RB jno 0x140050784
   14005075d:	rex.WX (bad) 
   14005075f:	(bad)  
   140050760:	lahf   
   140050761:	fild   WORD PTR [rdx-0x70]
   140050764:	cdq    
   140050765:	push   rdi
   140050766:	xor    dh,bh
   140050768:	add    DWORD PTR [rax+0x76500f5a],ecx
   14005076e:	or     al,0x8a
   140050770:	fcmove st,st(0)
   140050772:	shr    dh,1
   140050774:	ret    
   140050775:	jmp    0x140050772
   140050777:	add    esp,DWORD PTR [rax+0x2b9a4e59]
   14005077d:	add    BYTE PTR [rax-0x6b],dh
   140050780:	mov    DWORD PTR [rsi+0x72],ecx
   140050783:	mov    dl,0xcf
   140050785:	std    
   140050786:	and    BYTE PTR [rax-0x61],cl
   140050789:	(bad)  
   14005078a:	in     eax,0xf6
   14005078c:	rex.WX (bad) 
   14005078e:	add    BYTE PTR [rbp-0x294ffe9e],al
   140050794:	rcl    BYTE PTR [rbx],1
   140050796:	mov    edi,0x9fbef8f1
   14005079b:	std    
   14005079c:	fcomp  st(0)
   14005079e:	shr    BYTE PTR [rcx],1
   1400507a0:	ins    BYTE PTR es:[rdi],dx
   1400507a1:	idiv   ecx
   1400507a3:	jg     0x1400507d5
   1400507a5:	test   DWORD PTR [rdi+0x12eccedc],edi
   1400507ab:	add    BYTE PTR [rax],al
   1400507ad:	(bad)  
   1400507ae:	and    cl,0xb9
   1400507b1:	sub    DWORD PTR [rsi+rdi*4+0x70],esi
   1400507b5:	xor    ebp,DWORD PTR [rip+0xffffffffbe0bdf5e]        # 0xfe10e719
   1400507bb:	pop    rsp
   1400507bc:	mov    esp,0x117bce26
   1400507c1:	and    DWORD PTR [rdx-0x26],edx
   1400507c4:	ja     0x140050803
   1400507c6:	xchg   esi,eax
   1400507c7:	(bad)  
   1400507c8:	(bad)  
   1400507c9:	scas   eax,DWORD PTR es:[rdi]
   1400507ca:	pop    rbx
   1400507cb:	push   rsi
   1400507cc:	adc    edi,DWORD PTR [rsi-0x2bd1ff58]
   1400507d2:	mov    dh,0xdd
   1400507d4:	adc    eax,0x1a452ea0
   1400507d9:	rex.WRX imul r8,QWORD PTR [rdi+0x2e],0x4d
   1400507de:	or     edi,DWORD PTR [rdi]
   1400507e0:	sbb    al,0x3
   1400507e2:	jne    0x1400507e6
   1400507e4:	mov    WORD PTR [rcx-0x5e9054c9],es
   1400507ea:	mov    ebp,0xcc6c0b90
   1400507ef:	(bad)  
   1400507f0:	sbb    esi,esp
   1400507f2:	(bad)  
   1400507f3:	and    bh,BYTE PTR [rsi+rsi*4-0x7bf3914e]
   1400507fa:	push   rax
   1400507fb:	test   eax,0xd7b90fc5
   140050800:	jle    0x14005078e
   140050802:	rex adc eax,0x5e508b9
   140050808:	(bad)  
   140050809:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005080a:	xor    BYTE PTR [rdx-0x2a],bl
   14005080d:	ds repz add al,0x16
   140050811:	rex.RX mov WORD PTR [rip+0xffffffffc2307a39],ss        # 0x102358251
   140050818:	rcr    BYTE PTR [rcx],1
   14005081a:	jle    0x140050863
   14005081c:	adc    DWORD PTR [rcx],esp
   14005081e:	movabs ds:0xaad69a84a806e578,eax
   140050827:	rex.WXB and rcx,QWORD PTR [r11]
   14005082a:	mov    BYTE PTR [rax],al
   14005082c:	push   rdi
   14005082d:	adc    dl,BYTE PTR [rdx-0x50d034ce]
   140050833:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050834:	imul   ebp,DWORD PTR [rcx+0x14d27b99],0x74ae6ce5
   14005083e:	xchg   ebx,eax
   14005083f:	rex.X or BYTE PTR [rax+0x4c299b08],al
   140050846:	(bad)  
   140050847:	shr    eax,1
   140050849:	lock mov edi,0xec4f0ff8
   14005084f:	jns    0x140050857
   140050851:	pop    rcx
   140050852:	clc    
   140050853:	jae    0x1400508c3
   140050855:	dec    DWORD PTR [rdi]
   140050857:	mov    edx,0x8e76dbf0
   14005085c:	jle    0x1400507f7
   14005085e:	iret   
   14005085f:	(bad)  
   140050860:	(bad)  
   140050861:	cmc    
   140050862:	or     dl,bh
   140050864:	mov    esi,0x7f3086f4
   140050869:	rex.RB (bad) 
   14005086b:	shl    BYTE PTR [rip+0x68241e1e],cl        # 0x1a829268f
   140050871:	xchg   esi,eax
   140050872:	and    BYTE PTR [rcx+0x2f],dl
   140050875:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050876:	(bad)  
   140050877:	sar    DWORD PTR [rdi+rbp*8+0x7a22aebf],cl
   14005087e:	rex.W
   14005087f:	lock movabs ds:0x27815c19db90b802,al
   140050889:	cmp    bh,BYTE PTR [rbx-0x19]
   14005088c:	(bad)  
   14005088e:	cmp    eax,0xcd03bc3e
   140050893:	ins    DWORD PTR es:[rdi],dx
   140050894:	sar    ebp,0x7c
   140050897:	push   0xfffffffffffffff9
   140050899:	cli    
   14005089a:	xchg   esi,eax
   14005089b:	add    BYTE PTR [rax+rsi*2-0x21],ah
   14005089f:	jge    0x14005089b
   1400508a1:	rex.WX test QWORD PTR [rdi-0x4ac236d6],rsi
   1400508a8:	call   0x14c87d4d7
   1400508ad:	adc    al,0x31
   1400508af:	test   al,0xa2
   1400508b1:	test   al,0x82
   1400508b3:	mov    dh,0xea
   1400508b5:	(bad)  
   1400508b6:	rol    DWORD PTR [rbx+0x76],0x21
   1400508ba:	rex.RX push rdi
   1400508bc:	and    BYTE PTR [rbp-0x5f],dl
   1400508bf:	or     al,0xc
   1400508c1:	(bad)  
   1400508c2:	jnp    0x140050893
   1400508c4:	jle    0x1400508d1
   1400508c6:	adc    ebx,DWORD PTR [rdx]
   1400508c8:	(bad)  
   1400508c9:	(bad)  [rip+0xffffffff842ef270]        # 0xc433fb40
   1400508d0:	jl     0x140050859
   1400508d2:	add    DWORD PTR [rdx],ebp
   1400508d4:	cld    
   1400508d5:	in     al,0x96
   1400508d7:	(bad)  
   1400508d8:	sbb    ch,dl
   1400508da:	retf   
   1400508db:	add    bl,BYTE PTR [rdi-0x4e]
   1400508de:	clc    
   1400508df:	mov    ecx,0x90429fc6
   1400508e4:	hlt    
   1400508e5:	pop    rsi
   1400508e6:	mov    dh,0x5a
   1400508e8:	and    BYTE PTR [rdx],0xcf
   1400508eb:	pop    rdi
   1400508ec:	rol    DWORD PTR [rax+0x2],1
   1400508ef:	push   rsi
   1400508f0:	mov    esi,0xbf03534
   1400508f5:	(bad)  
   1400508f6:	fnsave [rdi+0x7f1fb92f]
   1400508fc:	(bad)  
   1400508fd:	sub    eax,0x1cedd6ff
   140050902:	out    dx,al
   140050903:	shl    BYTE PTR [rcx-0xc],0x6d
   140050907:	cmp    al,0xc0
   140050909:	rex.XB pop r15
   14005090b:	mov    edx,0xf7f76693
   140050910:	jno    0x140050905
   140050912:	sbb    bl,BYTE PTR [rbx+0x17]
   140050915:	sar    esp,cl
   140050917:	or     BYTE PTR [rdx+0x6887a5d3],0xed
   14005091e:	xchg   ebx,eax
   14005091f:	pop    rdi
   140050920:	(bad)  
   140050921:	sahf   
   140050922:	or     DWORD PTR [rsp+rdx*2+0x0],ebx
   140050926:	(bad)  
   140050927:	shl    DWORD PTR [rsi-0xeefea23],0x20
   14005092e:	jp     0x140050926
   140050930:	cli    
   140050931:	data16 cli 
   140050933:	jge    0x140050966
   140050935:	(bad)  
   140050936:	xor    BYTE PTR [rdx+0x7d94ae55],ch
   14005093c:	(bad)  
   14005093d:	xchg   bp,ax
   14005093f:	and    DWORD PTR [rcx-0x4a],esp
   140050942:	rex.WX jge 0x1400509c1
   140050945:	icebp  
   140050946:	cmc    
   140050947:	rex.XB add r11d,esp
   14005094a:	xchg   ebp,eax
   14005094b:	in     al,0x53
   14005094d:	movabs eax,ds:0x91835ed2b10158f
   140050956:	movabs eax,ds:0x826e60c41443a80a
   14005095f:	sub    dl,BYTE PTR [rax+0x3a8a288c]
   140050965:	sub    BYTE PTR [rax-0x2f9c4553],0xc4
   14005096c:	and    BYTE PTR [rbx-0x12],cl
   14005096f:	push   rcx
   140050970:	xchg   esp,eax
   140050971:	adc    DWORD PTR [rip+0x1a16d8bd],ebp        # 0x15a1be234
   140050977:	push   rbp
   140050978:	call   0x199b84deb
   14005097d:	jge    0x140050917
   14005097f:	ret    0x2780
   140050982:	or     rdi,QWORD PTR [rdx]
   140050985:	(bad)  
   140050986:	fist   WORD PTR [rcx+0x7c]
   140050989:	push   rdx
   14005098a:	fs lahf 
   14005098c:	(bad)  
   14005098d:	add    al,0xf7
   14005098f:	rex.WRB
   140050990:	movabs eax,gs:0xca2880512bda5ccb
   14005099a:	adc    BYTE PTR [rax-0x41061e2],0x95
   1400509a1:	(bad)  
   1400509a2:	cli    
   1400509a3:	(bad)  
   1400509a4:	gs jg  0x140050930
   1400509a7:	jbe    0x1400509cc
   1400509a9:	mov    db6,rdx
   1400509ac:	pop    rsi
   1400509ad:	rcl    BYTE PTR [rdx-0x28],1
   1400509b0:	(bad)  
   1400509b1:	xor    bl,bl
   1400509b3:	cmp    DWORD PTR [rdx+0x5],esi
   1400509b6:	data16 shr cl,1
   1400509b9:	jle    0x14005094d
   1400509bb:	idiv   DWORD PTR [rcx+rdi*8-0x63]
   1400509bf:	(bad)  
   1400509c0:	data16 ja 0x1400509e2
   1400509c3:	mov    edx,0xeed00237
   1400509c8:	xlat   BYTE PTR ds:[rbx]
   1400509c9:	add    al,0x2
   1400509cb:	(bad)  
   1400509cc:	rex.B (bad) 
   1400509ce:	scas   al,BYTE PTR es:[rdi]
   1400509cf:	faddp  st(3),st
   1400509d1:	xchg   edi,eax
   1400509d2:	jl     0x1400509dd
   1400509d4:	(bad)  
   1400509d5:	(bad)  
   1400509d6:	pop    rsp
   1400509d7:	push   rsp
   1400509d8:	add    BYTE PTR [rdi],dl
   1400509da:	jp     0x1400509a7
   1400509dc:	int3   
   1400509dd:	sub    eax,0x2c7262a0
   1400509e2:	(bad)  
   1400509e3:	scas   eax,DWORD PTR es:[rdi]
   1400509e4:	fist   WORD PTR [rcx-0x5e7cc43a]
   1400509ea:	mov    ecx,0x15445233
   1400509ef:	(bad)  
   1400509f1:	jb     0x140050976
   1400509f3:	cli    
   1400509f4:	fiadd  WORD PTR [rax+0x1d]
   1400509f7:	jne    0x140050a3e
   1400509f9:	sbb    eax,0xf18d7213
   1400509fe:	push   rdi
   1400509ff:	fs rex.X
   140050a01:	rex.WRXB mov BYTE PTR [r13-0x194a823f],r14b
   140050a08:	xor    DWORD PTR [rdx+0x49a10576],esp
   140050a0e:	cmp    ah,BYTE PTR [rsi-0xb]
   140050a11:	popf   
   140050a12:	lock rcl DWORD PTR [rax-0x62],cl
   140050a16:	adc    bh,BYTE PTR [rsi+rax*2+0x1e]
   140050a1a:	retf   0x9c3e
   140050a1d:	xchg   ebx,eax
   140050a1e:	jg     0x140050a62
   140050a20:	rcl    edi,0xb9
   140050a23:	pop    rdi
   140050a24:	(bad)  
   140050a25:	cmp    al,0x5f
   140050a27:	add    DWORD PTR [rdx+0x2780a410],ebp
   140050a2d:	scas   eax,DWORD PTR es:[rdi]
   140050a2e:	loopne 0x140050a13
   140050a30:	sub    esi,edi
   140050a32:	(bad)  
   140050a33:	in     al,dx
   140050a34:	jmp    0x140050a41
   140050a36:	call   0x1579fccdf
   140050a3b:	(bad)
   140050a3e:	push   0x41
   140050a40:	push   rdx
   140050a41:	fcmovu st,st(3)
   140050a43:	add    al,0x60
   140050a45:	sbb    esi,edi
   140050a47:	cmp    esi,DWORD PTR [rsi-0x310780ae]
   140050a4d:	(bad)  
   140050a4e:	pop    rsp
   140050a4f:	stc    
   140050a50:	jnp    0x140050aba
   140050a52:	xlat   BYTE PTR ds:[rbx]
   140050a53:	repz jg 0x140050a55
   140050a56:	xchg   esp,eax
   140050a57:	hlt    
   140050a58:	(bad)  
   140050a59:	ins    DWORD PTR es:[rdi],dx
   140050a5a:	outs   dx,BYTE PTR ds:[rsi]
   140050a5b:	out    0xce,eax
   140050a5d:	adc    eax,0xfef38fe0
   140050a62:	scas   eax,DWORD PTR es:[rdi]
   140050a63:	ficomp WORD PTR [rip+0xffffffffa80607a6]        # 0xe80b120f
   140050a69:	mov    ecx,0x4790f655
   140050a6e:	push   rbp
   140050a6f:	adc    ebx,DWORD PTR [rdi]
   140050a71:	sbb    al,BYTE PTR [rax-0xd]
   140050a74:	out    0xdf,eax
   140050a76:	(bad)  
   140050a77:	lock and ch,BYTE PTR [rsi]
   140050a7a:	sub    al,BYTE PTR [rax+0x736b6897]
   140050a80:	add    DWORD PTR [rcx],eax
   140050a82:	add    BYTE PTR [rip+0x5bb1ce87],ch        # 0x19bb6d90f
   140050a88:	xor    bl,bh
   140050a8a:	out    dx,al
   140050a8b:	rex.WRX ror BYTE PTR [rax-0x7f7501a7],0x5a
   140050a93:	add    eax,0x157eaddf
   140050a98:	or     dl,BYTE PTR [rsi+0x5f]
   140050a9b:	pop    rsi
   140050a9c:	push   rdi
   140050a9d:	xor    eax,0xa57d0b9
   140050aa2:	fld    TBYTE PTR [rbx-0x65a8aee8]
   140050aa8:	rcl    BYTE PTR [rbx+0x45],0xc4
   140050aac:	sub    bh,BYTE PTR [rax-0x42]
   140050aaf:	mov    edi,0xa0440644
   140050ab4:	imul   eax,DWORD PTR [rbp+0x2],0x75
   140050ab8:	gs or  al,al
   140050abb:	rex.WX jg 0x140050a53
   140050abe:	ins    BYTE PTR es:[rdi],dx
   140050abf:	mov    WORD PTR [rsi+0x3f10abda],ss
   140050ac5:	rex.RXB fistp QWORD PTR fs:[r11+0x12]
   140050aca:	nop
   140050acb:	(bad)  
   140050acc:	fild   QWORD PTR [rip+0xffffffffa19c17d4]        # 0xe1a122a6
   140050ad2:	iret   
   140050ad3:	mov    al,BYTE PTR [rcx+0x21b4108b]
   140050ad9:	test   dl,dl
   140050adb:	push   rdi
   140050add:	pop    rax
   140050ade:	mov    edi,0x99940379
   140050ae3:	jle    0x140050a97
   140050ae5:	jge    0x140050ae8
   140050ae7:	push   rdi
   140050ae8:	(bad)  
   140050ae9:	push   rbx
   140050aea:	fwait
   140050aeb:	icebp  
   140050aec:	(bad)  
   140050aed:	fdivrp st(2),st
   140050aef:	test   DWORD PTR [rbx-0x6ec28282],ebp
   140050af5:	(bad)  
   140050af8:	or     bh,bh
   140050afa:	(bad)  
   140050afb:	in     eax,dx
   140050afc:	sbb    al,0xc4
   140050afe:	(bad)  
   140050aff:	add    esp,edx
   140050b01:	(bad)  
   140050b02:	repnz sub DWORD PTR [rdi-0x2cb3d441],0x9877ba20
   140050b0d:	jmp    0x140050b24
   140050b0f:	cwde   
   140050b10:	(bad)  
   140050b11:	ja     0x140050ae6
   140050b13:	(bad)  
   140050b14:	mov    DWORD PTR [rdi],edi
   140050b16:	jrcxz  0x140050a9b
   140050b18:	ffreep st(6)
   140050b1a:	rex.RB add eax,0x6d6d12f0
   140050b20:	rex.X xchg eax,eax
   140050b22:	add    BYTE PTR [rbx+rdx*4+0x1be6c761],al
   140050b29:	stc    
   140050b2a:	je     0x140050b48
   140050b2c:	or     ebp,ebx
   140050b2e:	mov    ebx,0xea0062
   140050b33:	(bad)  
   140050b34:	xchg   ebp,eax
   140050b35:	cli    
   140050b36:	stc    
   140050b37:	(bad)  
   140050b38:	(bad)  
   140050b39:	adc    ebp,edx
   140050b3b:	retf   0x7b58
   140050b3e:	sub    eax,0x4470575
   140050b44:	jne    0x140050b5b
   140050b46:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050b47:	(bad)  
   140050b48:	(bad)  
   140050b49:	rex.RX jne 0x140050b61
   140050b4c:	push   rsp
   140050b4d:	pop    rcx
   140050b4e:	rex.R pop rbx
   140050b50:	pushf  
   140050b51:	push   rbx
   140050b52:	jns    0x140050ad8
   140050b54:	rex.WX adc rax,0x41c96545
   140050b5a:	lock push rax
   140050b5c:	pop    rsi
   140050b5d:	or     al,0xe6
   140050b5f:	test   ebx,0x4852be89
   140050b65:	or     eax,DWORD PTR [rdx+0x10eeb3de]
   140050b6b:	lods   al,BYTE PTR ds:[rsi]
   140050b6c:	es and ah,ah
   140050b6f:	pop    rax
   140050b70:	mov    esi,0x45bb00a6
   140050b75:	iret   
   140050b76:	mov    esp,0x4b79c39e
   140050b7b:	repnz and DWORD PTR [rip+0xffffffffc9c88346],ecx        # 0x109cd8ec8
   140050b82:	imul   eax,DWORD PTR [rdx],0xe672cdb2
   140050b88:	rex.R neg BYTE PTR [rcx-0x16]
   140050b8c:	xchg   BYTE PTR [rdi-0x3],ch
   140050b8f:	(bad)          # 0x156cc918c
   140050b90:	nop    esp
   140050b93:	test   edi,eax
   140050b95:	(bad)  
   140050b96:	jp     0x140050b7e
   140050b98:	mov    cl,0xbd
   140050b9a:	jg     0x140050b7b
   140050b9c:	rex.RB loope 0x140050bce
   140050b9f:	mov    bh,0xed
   140050ba1:	mov    ecx,0xf0342d02
   140050ba6:	addr32 jl 0x140050b89
   140050ba9:	xor    DWORD PTR [rdi+0x10dcccd2],0x4441dc6f
   140050bb3:	adc    eax,0xda52f400
   140050bb8:	(bad)  
   140050bb9:	mov    bh,BYTE PTR [rsi+0x7fa18e7b]
   140050bbf:	std    
   140050bc0:	movabs ds:0x80006e2db6a97802,al
   140050bc9:	mov    al,0x48
   140050bcb:	cmp    eax,0xa9a36ec7
   140050bd0:	ja     0x140050bc9
   140050bd2:	rex.R mov WORD PTR [rax+0xb2ac730],ds
   140050bd9:	jb     0x140050bf0
   140050bdb:	test   DWORD PTR [rcx-0x3eed551],edi
   140050be1:	stos   BYTE PTR es:[rdi],al
   140050be2:	xchg   edx,eax
   140050be3:	in     al,0x9d
   140050be5:	rex.WRX or al,0xa8
   140050be8:	stos   DWORD PTR es:[rdi],eax
   140050be9:	test   al,0x82
   140050beb:	(bad)  
   140050bec:	push   rcx
   140050bed:	fwait
   140050bee:	fwait
   140050bef:	(bad)  
   140050bf0:	cld    
   140050bf1:	or     BYTE PTR [rbx],0xbb
   140050bf4:	cld    
   140050bf5:	ss (bad) 
   140050bf7:	rex.WX movabs rsp,0x7413ca824d6c1ca6
   140050c01:	rex.W (bad) 
   140050c03:	mov    ebp,0x5e6b6d98
   140050c08:	rex.X
   140050c09:	rex.WX fcomp DWORD PTR [rcx+0x43]
   140050c0d:	(bad)  
   140050c0e:	push   rsi
   140050c0f:	mov    eax,0xa5ef84ae
   140050c14:	rol    BYTE PTR [rsi-0x44984393],0xbe
   140050c1b:	mov    edi,0x3fad0ed4
   140050c20:	fstp   st(7)
   140050c22:	js     0x140050c25
   140050c24:	rex.W in al,dx
   140050c26:	jp     0x140050bab
   140050c28:	ret    
   140050c29:	rcr    edi,1
   140050c2b:	jns    0x140050c9b
   140050c2d:	in     al,0xbf
   140050c2f:	inc    DWORD PTR [rbx-0x2e38dc5d]
   140050c35:	es std 
   140050c37:	cs pop rdx
   140050c39:	(bad)  
   140050c3a:	mov    bl,0x6d
   140050c3c:	(bad)  [rbx+0x5]
   140050c3f:	and    BYTE PTR [rdx],0x79
   140050c42:	call   0x1b8048476
   140050c47:	fistp  WORD PTR [rax]
   140050c49:	out    0x8f,al
   140050c4b:	in     al,dx
   140050c4c:	(bad)  
   140050c4d:	out    0x1b,al
   140050c4f:	mov    DWORD PTR [rax+0x5ff6303f],edi
   140050c55:	rex.XB sub ecx,DWORD PTR [r15]
   140050c58:	jg     0x140050bf6
   140050c5a:	(bad)  
   140050c5c:	jns    0x140050caf
   140050c5e:	add    DWORD PTR [rsp+rdx*2+0x401476db],edi
   140050c65:	(bad)  
   140050c66:	imul   esp,DWORD PTR [rax-0x53654c47],0x5dcd5776
   140050c70:	jne    0x140050c07
   140050c72:	ret    
   140050c73:	outs   dx,DWORD PTR ds:[rsi]
   140050c74:	sbb    eax,0x22bad815
   140050c79:	push   rsp
   140050c7a:	mov    ch,0x95
   140050c7c:	hlt    
   140050c7d:	adc    ch,dl
   140050c7f:	sbb    BYTE PTR [rcx+0x55],dl
   140050c82:	push   rcx
   140050c83:	lods   eax,DWORD PTR ds:[rsi]
   140050c84:	mov    esi,0x5dda8c28
   140050c89:	add    dl,dl
   140050c8b:	iret   
   140050c8c:	or     eax,0x8278401d
   140050c91:	movabs al,ds:0x71e5ed6b092a9ee4
   140050c9a:	js     0x140050c66
   140050c9c:	mov    esi,0xb760539
   140050ca1:	outs   dx,DWORD PTR ds:[rsi]
   140050ca2:	mov    esi,0x56e6b7bc
   140050ca7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050ca8:	loope  0x140050c2c
   140050caa:	pop    rsp
   140050cab:	or     bh,BYTE PTR [rdi+0x9]
   140050cae:	adc    eax,DWORD PTR [rax]
   140050cb0:	rex.WRB mul QWORD PTR [rip+0x5dfd88ff]        # 0x19e0295b6
   140050cb7:	mov    cl,0xaf
   140050cb9:	rex.WRXB
   140050cba:	rex.RXB retf 
   140050cbc:	call   rdi
   140050cbe:	jrcxz  0x140050c99
   140050cc0:	retf   0x441d
   140050cc3:	rex.W
   140050cc4:	or     r15d,DWORD PTR [rdi+0x79]
   140050cc8:	push   0xfffffffffffffff0
   140050cca:	out    0x7e,eax
   140050ccc:	jmp    0xe0941062
   140050cd1:	ffree  st(4)
   140050cd3:	repz out dx,eax
   140050cd5:	es jrcxz 0x140050cd7
   140050cd8:	rex.X mov dil,0x73
   140050cdb:	lock add bl,BYTE PTR [rdi+0x5ccf7de0]
   140050ce2:	lea    edx,[rbp-0x53be391]
   140050ce8:	int    0x11
   140050cea:	mov    esp,0xf77897b7
   140050cef:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050cf0:	jns    0x140050cc1
   140050cf2:	cmp    eax,0x4bc01517
   140050cf7:	mov    ecx,0x5405019d
   140050cfc:	add    ebx,esp
   140050cfe:	(bad)  
   140050cff:	ja     0x140050d17
   140050d01:	out    dx,eax
   140050d02:	out    dx,al
   140050d03:	push   rsp
   140050d04:	xor    al,0xdc
   140050d06:	mov    DWORD PTR [rcx-0x23],edx
   140050d09:	add    BYTE PTR [rax+0x2f6b6710],ch
   140050d0f:	jg     0x140050d52
   140050d11:	xchg   ebp,eax
   140050d12:	add    al,0xff
   140050d15:	mov    edx,0x22a01756
   140050d1a:	(bad)  
   140050d1b:	xor    eax,0x168fe165
   140050d20:	adc    eax,0xeca262b0
   140050d25:	mov    ebx,0xd22f343b
   140050d2a:	jo     0x140050d29
   140050d2c:	repz push rax
   140050d2e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050d2f:	loope  0x140050cc7
   140050d31:	(bad)  
   140050d32:	ds mov bl,0xf8
   140050d35:	rex retf 
   140050d37:	(bad)  
   140050d38:	or     eax,DWORD PTR [rbx+0x5f]
   140050d3b:	movabs ds:0x2b210217363bfc82,al
   140050d44:	mov    esp,DWORD PTR [rax+0x30764f25]
   140050d4a:	es mov ah,0x1e
   140050d4d:	or     BYTE PTR [rbx+0x1b],al
   140050d50:	pop    rsp
   140050d51:	rex.RX xor BYTE PTR [rcx+0x7a],r10b
   140050d55:	(bad)  
   140050d56:	scas   al,BYTE PTR es:[rdi]
   140050d57:	out    dx,eax
   140050d58:	xchg   edi,eax
   140050d59:	dec    ecx
   140050d5b:	(bad)  
   140050d5c:	(bad)  
   140050d5d:	std    
   140050d5e:	sub    al,0x32
   140050d60:	jmp    0x19ffd5edc
   140050d65:	call   0x1302a1be0
   140050d6a:	rex.RB in al,dx
   140050d6c:	ds add eax,0xc7aefba2
   140050d72:	shr    BYTE PTR [rsi-0x2088cba2],cl
   140050d78:	sbb    DWORD PTR [rsi-0x42],esp
   140050d7b:	jne    0x140050dce
   140050d7d:	add    DWORD PTR [rsp+rdx*4-0x3fafe625],edi
   140050d84:	sar    DWORD PTR [rbx+rsi*2+0x133d9de3],cl
   140050d8b:	ret    
   140050d8c:	mov    ebx,0xbae6f4ab
   140050d91:	ss cwde 
   140050d93:	pcmpeqb mm1,mm4
   140050d96:	mov    bh,0x37
   140050d98:	mov    ebp,DWORD PTR [rdi+0x1575f02]
   140050d9e:	push   rbp
   140050d9f:	sub    eax,0x9353a00a
   140050da4:	mov    ebx,0x50026507
   140050da9:	test   al,0xe0
   140050dab:	rex.WR jl 0x140050e19
   140050dae:	adc    DWORD PTR [rsi-0x51],ecx
   140050db1:	fmul   DWORD PTR [rbx]
   140050db3:	fldcw  WORD PTR [rdx+0x4a1fcd2b]
   140050db9:	call   FWORD PTR [rdi+0x9]
   140050dbc:	cmp    al,0xb
   140050dbe:	fistp  QWORD PTR [rcx+0x1f]
   140050dc1:	jle    0x140050daa
   140050dc3:	cli    
   140050dc4:	sub    BYTE PTR [rbx+0x24409a83],dl
   140050dca:	sar    BYTE PTR [rdi],1
   140050dcc:	pop    rbx
   140050dcd:	outs   dx,DWORD PTR ds:[rsi]
   140050dce:	xor    al,BYTE PTR [rcx+0x77]
   140050dd1:	fs push rax
   140050dd3:	and    BYTE PTR [rax],al
   140050dd5:	fcomi  st,st(4)
   140050dd7:	(bad)  
   140050dd8:	retf   0x140a
   140050ddb:	(bad)  
   140050ddc:	or     DWORD PTR [rbx*2-0x48500053],ebx
   140050de3:	jge    0x140050dca
   140050de5:	retf   0xc03f
   140050de8:	test   BYTE PTR [rdi+rbx*4-0x41],0xbb
   140050ded:	loope  0x140050dad
   140050def:	out    dx,eax
   140050df0:	jne    0x140050e2d
   140050df2:	rex.RXB and r9d,r10d
   140050df5:	ja     0x140050da8
   140050df7:	jae    0x140050de2
   140050df9:	rex.WRXB jo 0x140050de4
   140050dfc:	adc    ebx,DWORD PTR [rdi]
   140050dfe:	movabs al,ds:0x2a2e9bdd403d3d3
   140050e07:	js     0x140050db2
   140050e09:	mov    bh,0x36
   140050e0b:	or     cl,BYTE PTR [rax]
   140050e0d:	add    BYTE PTR [rdx+0x27],al
   140050e10:	loopne 0x140050dd6
   140050e12:	sbb    edi,edx
   140050e14:	(bad)  
   140050e15:	ds push rax
   140050e17:	push   rdi
   140050e18:	sbb    al,ch
   140050e1a:	test   eax,0xed663a03
   140050e1f:	jmp    0x140050e09
   140050e21:	(bad)  
   140050e22:	fisttp WORD PTR [rcx-0x17b28aff]
   140050e28:	je     0x140050dee
   140050e2a:	fcmovbe st,st(7)
   140050e2c:	adc    eax,0xb910686b
   140050e31:	and    bh,al
   140050e33:	adc    ch,BYTE PTR [rsi+0x34]
   140050e36:	cld    
   140050e37:	rex.RXB cli 
   140050e39:	ds imul edi
   140050e3c:	outs   dx,DWORD PTR ds:[rsi]
   140050e3d:	jmp    FWORD PTR [rdi]
   140050e3f:	movabs eax,ds:0x307ec5cdc76b00ba
   140050e48:	movabs eax,ds:0x37e99c7513c05e56
   140050e51:	in     al,0xa0
   140050e53:	jle    0x140050e13
   140050e55:	and    eax,DWORD PTR [rbp-0x66bbae70]
   140050e5b:	sbb    eax,ebx
   140050e5d:	(bad)  
   140050e5e:	clc    
   140050e5f:	mov    dl,0x12
   140050e61:	enter  0x824a,0x61
   140050e65:	mov    cl,0xc6
   140050e67:	mov    DWORD PTR [rbp-0x40a41088],ecx
   140050e6d:	jb     0x140050e54
   140050e6f:	outs   dx,DWORD PTR ds:[rsi]
   140050e70:	ins    DWORD PTR es:[rdi],dx
   140050e71:	(bad)  
   140050e72:	cld    
   140050e73:	(bad)  
   140050e74:	cli    
   140050e75:	std    
   140050e76:	(bad)  
   140050e77:	cmp    cx,di
   140050e7a:	(bad)  
   140050e7b:	and    al,0xf7
   140050e7d:	loopne 0x140050e11
   140050e7f:	(bad)  
   140050e80:	pop    rsi
   140050e81:	and    DWORD PTR [rbp-0x78e31779],0xffffffb8
   140050e88:	mov    eax,0xfa4da85d
   140050e8d:	mov    ebp,0x5eb79f59
   140050e92:	add    ch,bh
   140050e94:	(bad)  
   140050e95:	fcomi  st,st(7)
   140050e97:	loopne 0x140050e48
   140050e99:	(bad)  
   140050e9a:	(bad)  
   140050e9b:	jmp    0x185625b9e
   140050ea0:	neg    ebp
   140050ea2:	rex.XB enter 0x3eb0,0x4
   140050ea7:	jbe    0x140050e7f
   140050ea9:	fidivr WORD PTR [rdx-0x19]
   140050eac:	mov    bh,0x2d
   140050eae:	mov    dl,0x1e
   140050eb0:	jnp    0x140050e5d
   140050eb2:	pop    rdi
   140050eb3:	mov    ?,esp
   140050eb5:	cmp    esp,ecx
   140050eb7:	adc    ecx,edi
   140050eb9:	js     0x140050ed6
   140050ebb:	pop    rbx
   140050ebc:	sbb    al,0x72
   140050ebe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050ebf:	in     al,dx
   140050ec0:	iret   
   140050ec1:	jl     0x140050e9c
   140050ec3:	mov    dl,0xb8
   140050ec5:	stos   BYTE PTR es:[rdi],al
   140050ec6:	in     al,dx
   140050ec7:	(bad)  
   140050ec8:	ins    DWORD PTR es:[rdi],dx
   140050ec9:	jmp    0x1add9c3fb
   140050ece:	mov    eax,0xd2ff27ee
   140050ed3:	mov    dh,0xf7
   140050ed5:	xchg   r14d,eax
   140050ed7:	(bad)  
   140050ed8:	(bad)  
   140050ed9:	(bad)
   140050edc:	loopne 0x140050ec2
   140050ede:	jns    0x140050edf
   140050ee0:	or     ecx,DWORD PTR [rip+0x1ea7fd7d]        # 0x15ead0c63
   140050ee6:	ds cld 
   140050ee8:	iret   
   140050ee9:	mov    edi,0x8d303930
   140050eee:	in     eax,dx
   140050eef:	sar    bh,1
   140050ef1:	movabs ds:0xaa8918bdadd8bff0,al
   140050efa:	(bad)  
   140050efb:	cmp    al,0x54
   140050efd:	loope  0x140050f6b
   140050eff:	mov    edi,0xf05db8bb
   140050f04:	int    0xb4
   140050f06:	outs   dx,DWORD PTR ds:[rsi]
   140050f07:	(bad)  
   140050f08:	shl    dh,0xfd
   140050f0b:	fstp   st(5)
   140050f0d:	not    DWORD PTR [rsi-0x63]
   140050f10:	push   0xffffffffffffffa1
   140050f12:	push   rbx
   140050f13:	(bad)  
   140050f14:	je     0x140050f00
   140050f16:	sbb    BYTE PTR [rsi-0x21217f62],0x80
   140050f1d:	ficomp WORD PTR [rsi+0x42]
   140050f20:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050f21:	add    edx,esp
   140050f23:	sbb    eax,0x50075542
   140050f28:	rex.WRB or BYTE PTR [r13-0x2f7e5600],r11b
   140050f2f:	and    DWORD PTR [rsi+rcx*1-0x55fbc57f],eax
   140050f36:	and    bh,bh
   140050f38:	xlat   BYTE PTR ds:[rbx]
   140050f39:	add    DWORD PTR [rcx+rdx*1+0x48],edx
   140050f3d:	push   rdi
   140050f3e:	and    esp,DWORD PTR [rcx-0x1bfa95b6]
   140050f44:	xor    eax,DWORD PTR [rax+0x511ff96a]
   140050f4a:	mov    es,WORD PTR [rbp+0x5503d04a]
   140050f50:	mov    cl,BYTE PTR [rdx]
   140050f52:	mov    dl,BYTE PTR [rbp+0x14]
   140050f55:	and    al,0xb9
   140050f57:	(bad)  
   140050f58:	fidivr DWORD PTR [rcx-0x1b]
   140050f5b:	out    dx,al
   140050f5c:	fidiv  WORD PTR ds:[rcx+0x24381747]
   140050f63:	enter  0x7cfa,0xae
   140050f67:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140050f69:	and    ebp,DWORD PTR [rbx+0x4f]
   140050f6c:	sub    eax,0x356f33fb
   140050f71:	neg    BYTE PTR ds:[rax]
   140050f74:	and    al,0x9
   140050f76:	push   0x6fe8e12d
   140050f7b:	(bad)  
   140050f7c:	fscale 
   140050f7e:	outs   dx,DWORD PTR ds:[rsi]
   140050f7f:	mov    edi,0x8b303930
   140050f84:	(bad)  
   140050f85:	(bad)  
   140050f86:	mov    edx,0x4dedbffe
   140050f8b:	sahf   
   140050f8c:	movabs eax,ds:0xb9c617c7085b3dcd
   140050f95:	mov    BYTE PTR [rax],al
   140050f97:	pop    rsi
   140050f98:	scas   al,BYTE PTR es:[rdi]
   140050f99:	sub    eax,0x140e80a3
   140050f9e:	add    eax,0x479ae57c
   140050fa3:	(bad)  
   140050fa4:	out    dx,eax
   140050fa5:	jge    0x140050fe4
   140050fa7:	fisttp QWORD PTR [rdi]
   140050fa9:	or     al,ah
   140050fab:	(bad)  
   140050fac:	pop    rdi
   140050fad:	push   rdx
   140050fae:	cmp    eax,DWORD PTR [rcx+rdx*1]
   140050fb1:	push   rdx
   140050fb2:	es adc eax,0xbe6fb2d6
   140050fb8:	stc    
   140050fb9:	out    0xc8,al
   140050fbb:	scas   eax,DWORD PTR es:[rdi]
   140050fbc:	gs jrcxz 0x140050fd5
   140050fbf:	xor    ebp,edi
   140050fc1:	pop    rbp
   140050fc2:	je     0x140050fb1
   140050fc4:	cmp    ecx,DWORD PTR [rdi]
   140050fc6:	shl    BYTE PTR [rbx-0x4704fe80],cl
   140050fcc:	sub    BYTE PTR [rcx],bl
   140050fce:	mov    ch,0xaa
   140050fd0:	cmp    al,0xf9
   140050fd2:	push   0x6c909c1b
   140050fd7:	xor    al,BYTE PTR [rbx-0x4a4505ec]
   140050fdd:	cld    
   140050fde:	mov    dh,0xa6
   140050fe0:	add    eax,0x9e8b0
   140050fe5:	xchg   edx,eax
   140050fe6:	out    0x2f,eax
   140050fe8:	pop    rcx
   140050fe9:	rex.X and al,0x29
   140050fec:	test   eax,0x36028800
   140050ff1:	sbb    DWORD PTR [rbx-0x7cec681],esi
   140050ff7:	sar    DWORD PTR [rdi],cl
   140050ff9:	repz lock and eax,0xf63723f7
   140051000:	clc    
   140051001:	mov    ebx,0x72f3e057
   140051006:	outs   dx,BYTE PTR ds:[rsi]
   140051007:	in     eax,dx
   140051008:	(bad)
   14005100b:	enter  0x3642,0x17
   14005100f:	mov    bh,0x97
   140051011:	outs   dx,DWORD PTR ds:[rsi]
   140051012:	movsxd edi,esp
   140051014:	(bad)  
   140051015:	in     eax,dx
   140051016:	pop    rbp
   140051017:	ins    DWORD PTR es:[rdi],dx
   140051018:	mov    WORD PTR [rbp+riz*2+0x15],ds
   14005101c:	jle    0x140050ffc
   14005101e:	neg    esi
   140051020:	mov    ebx,0xf6ecbbb3
   140051025:	mov    eax,DWORD PTR [rax+0x6b]
   140051028:	sub    DWORD PTR [rax+0x29],ecx
   14005102b:	push   0xffffffffffffff82
   14005102d:	(bad)  
   14005102e:	sub    BYTE PTR [rcx-0x7b],cl
   140051031:	rex.RX and r9d,DWORD PTR [rcx+0x21]
   140051035:	(bad)  
   140051036:	test   al,0x1
   140051038:	jg     0x140051052
   14005103a:	adc    esp,DWORD PTR [rcx]
   14005103c:	rex.RX
   14005103d:	rex.X test al,0x44
   140051040:	movsxd eax,DWORD PTR [rax+0x4]
   140051043:	stc    
   140051044:	(bad)  
   140051045:	xor    al,0x84
   140051047:	add    al,0x49
   140051049:	add    al,0x7f
   14005104b:	sub    DWORD PTR [rax+0x3],esp
   14005104e:	(bad)  
   14005104f:	sbb    BYTE PTR [rdx+rdi*8-0x4f],cl
   140051053:	repnz movabs eax,ds:0x5a856bf42a54d42d
   14005105d:	sti    
   14005105e:	xchg   r9d,eax
   140051060:	(bad)  
   140051061:	rex.X sub eax,0xb6eedafd
   140051067:	fcmovnu st,st(5)
   140051069:	ins    DWORD PTR es:[rdi],dx
   14005106a:	mov    ebx,0xceeeedd3
   14005106f:	int3   
   140051070:	cmp    eax,0x79cf78fe
   140051075:	fcomip st,st(7)
   140051077:	outs   dx,BYTE PTR ds:[rsi]
   140051078:	(bad)  
   140051079:	lahf   
   14005107a:	jbe    0x14005106b
   14005107c:	outs   dx,BYTE PTR ds:[rsi]
   14005107d:	iret   
   14005107e:	xchg   ebx,eax
   14005107f:	int3   
   140051080:	(bad)  
   140051081:	popf   
   140051082:	mov    ecx,0xb6676677
   140051087:	cmp    eax,0x3be73ce7
   14005108c:	push   0xfffffffff57bdae1
   140051091:	retf   
   140051092:	push   rsi
   140051093:	pop    rsp
   140051094:	cmp    eax,0x9a7b7aa3
   140051099:	ret    0x14da
   14005109c:	outs   dx,BYTE PTR ds:[rsi]
   14005109d:	jrcxz  0x1400510ce
   14005109f:	sti    
   1400510a0:	div    DWORD PTR [rdx-0x230bdce4]
   1400510a6:	ret    
   1400510a7:	or     DWORD PTR [rax+rdi*4-0x4a088000],ebx
   1400510ae:	lea    esi,[rbp+0x16]
   1400510b1:	xchg   ebp,eax
   1400510b2:	mov    WORD PTR [rdx+riz*8-0x21e49b64],fs
   1400510b9:	(bad)  
   1400510ba:	or     BYTE PTR [rax-0x1ff8ce53],al
   1400510c0:	cld    
   1400510c1:	mov    cl,0xdb
   1400510c3:	and    ah,BYTE PTR [rbx-0x37]
   1400510c6:	rex.R cmc 
   1400510c8:	cmp    ah,ah
   1400510ca:	test   DWORD PTR [rdi],esi
   1400510cc:	(bad)  
   1400510cd:	mov    al,BYTE PTR [rip+0xffffffffb31fe145]        # 0xf324f218
   1400510d3:	(bad)  
   1400510d4:	retf   
   1400510d5:	mov    edx,0xef53d96a
   1400510da:	mov    edi,0x1794ee6c
   1400510df:	icebp  
   1400510e0:	clc    
   1400510e1:	push   0xffffffffffffff82
   1400510e3:	jae    0x1400510ec
   1400510e5:	jb     0x140051137
   1400510e7:	ins    DWORD PTR es:[rdi],dx
   1400510e8:	sti    
   1400510e9:	jmp    0x13bc458e4
   1400510ee:	(bad)  
   1400510ef:	cld    
   1400510f0:	in     eax,dx
   1400510f1:	push   0xffffffff855fbf36
   1400510f6:	(bad)  
   1400510f7:	inc    DWORD PTR [rbx]
   1400510f9:	stc    
   1400510fa:	mov    ebx,0x3fccb8de
   1400510ff:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051100:	or     al,0xe0
   140051102:	(bad)
   140051107:	or     DWORD PTR cs:[rax+rax*2],0x5b
   14005110c:	stos   DWORD PTR es:[rdi],eax
   14005110d:	int    0x2f
   14005110f:	(bad)  
   140051111:	fnstcw WORD PTR [rbp-0x55]
   140051114:	addr32 push rsi
   140051116:	call   0xe797a481
   14005111b:	in     eax,0x7e
   14005111d:	mov    eax,0x21a61f86
   140051122:	adc    eax,0x7dfc1477
   140051127:	xor    DWORD PTR [rdi-0x1110edc2],esi
   14005112d:	mov    esp,0x5a162f4b
   140051132:	ins    BYTE PTR es:[rdi],dx
   140051133:	cmp    ecx,edi
   140051135:	sub    eax,DWORD PTR [rbx-0x55]
   140051138:	cmp    cl,al
   14005113a:	sub    DWORD PTR [rcx],ecx
   14005113c:	add    al,0x1
   14005113e:	cmc    
   14005113f:	and    cl,bh
   140051141:	in     al,dx
   140051142:	and    al,cl
   140051144:	mov    esp,0xa7c31a09
   140051149:	cmc    
   14005114a:	fdiv   QWORD PTR [rcx]
   14005114c:	in     eax,0x91
   14005114e:	jb     0x140051119
   140051150:	popf   
   140051151:	loop   0x1400510e4
   140051153:	rex.RB adc eax,0x467c2394
   140051159:	(bad)  
   14005115a:	(bad)  
   14005115b:	(bad)  
   14005115c:	rex.RX pop rdx
   14005115e:	lahf   
   14005115f:	pop    rsp
   140051160:	sar    BYTE PTR [rbp-0x34c7e610],cl
   140051166:	(bad)  
   140051167:	xor    edi,esp
   140051169:	xor    eax,0xd00937e8
   14005116e:	sbb    al,al
   140051170:	(bad)
   140051173:	ret    0xa802
   140051176:	(bad)  
   140051177:	out    0x76,al
   140051179:	cld    
   14005117a:	(bad)  
   14005117b:	lods   eax,DWORD PTR ds:[rsi]
   14005117c:	jne    0x140051113
   14005117e:	int    0x0
   140051180:	fwait
   140051181:	mov    DWORD PTR [rdi],ebx
   140051183:	outs   dx,DWORD PTR ds:[rsi]
   140051184:	fsubr  st,st(7)
   140051186:	(bad)  
   140051187:	fisub  WORD PTR [rdi+0x47]
   14005118a:	push   0x60
   14005118c:	xor    ah,dl
   14005118e:	movsxd eax,DWORD PTR [rax]
   140051190:	test   eax,0xf3a9363b
   140051195:	stc    
   140051196:	in     eax,0x79
   140051198:	xchg   edx,eax
   140051199:	lods   eax,DWORD PTR ds:[rsi]
   14005119a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005119b:	mov    ecx,esp
   14005119d:	(bad)  
   14005119e:	and    esi,ecx
   1400511a0:	jmp    rcx
   1400511a2:	cli    
   1400511a3:	adc    esp,DWORD PTR ds:[rdi+0xde12858]
   1400511aa:	cmp    eax,0xf8848009
   1400511af:	xor    eax,0x45c71ee4
   1400511b4:	jnp    0x140051207
   1400511b6:	enter  0xc5c8,0x4
   1400511ba:	clc    
   1400511bb:	pop    rdx
   1400511bc:	rex.WXB sbb al,0xf
   1400511bf:	cmp    bl,0x2a
   1400511c2:	shl    DWORD PTR [rax+riz*1],1
   1400511c5:	mov    edi,0x6ebe53f0
   1400511ca:	fs (bad) 
   1400511cc:	or     al,0x8
   1400511ce:	jge    0x140051233
   1400511d0:	jmp    0x14be237bf
   1400511d5:	lahf   
   1400511d6:	xor    r13d,r11d
   1400511d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400511da:	ret    0x493f
   1400511dd:	shl    BYTE PTR [rax+riz*8],1
   1400511e0:	(bad)
   1400511e3:	popf   
   1400511e4:	(bad)  
   1400511e5:	rex.WB fstp st(2)
   1400511e8:	push   rbx
   1400511e9:	mov    bh,0xce
   1400511eb:	lods   eax,DWORD PTR ds:[rsi]
   1400511ec:	jle    0x140051217
   1400511ee:	retf   
   1400511ef:	int3   
   1400511f0:	sbb    al,0x9b
   1400511f2:	pop    rcx
   1400511f3:	(bad)  
   1400511f4:	ror    bl,0x8c
   1400511f7:	adc    esi,edx
   1400511f9:	test   BYTE PTR [rbp-0x10f8fec4],al
   1400511ff:	loopne 0x14005119f
   140051201:	rex.WXB ret 0xa231
   140051205:	sbb    BYTE PTR [rsi+0x1f1e6449],0x79
   14005120c:	xlat   BYTE PTR ds:[rbx]
   14005120d:	rex.B (bad) 
   14005120f:	(bad)  
   140051210:	shr    BYTE PTR [rsi-0x1c836cd5],cl
   140051216:	(bad)  
   140051217:	pop    rsp
   140051218:	mov    edi,0xfb7b8765
   14005121d:	rex.WB scas al,BYTE PTR es:[rdi]
   14005121f:	xor    eax,0xa1fc2e0
   140051224:	mov    WORD PTR [rax+rbx*2+0x5],es
   140051228:	mov    ebx,0x911dde22
   14005122d:	scas   eax,DWORD PTR es:[rdi]
   14005122e:	in     al,0x9c
   140051230:	jl     0x1400512b1
   140051232:	popf   
   140051233:	jnp    0x14005120b
   140051235:	xor    DWORD PTR [rbx-0x348b722d],ecx
   14005123b:	mov    ebp,0x723c167b
   140051240:	hlt    
   140051241:	jl     0x140051279
   140051243:	mov    WORD PTR [rax-0x3],es
   140051246:	mov    ch,0xc1
   140051248:	adc    ah,BYTE PTR [ecx+0x43e2e00c]
   14005124f:	rex.X outs dx,DWORD PTR ds:[rsi]
   140051251:	or     eax,0xbdd5f500
   140051256:	mov    bl,0x6
   140051258:	rex.WRX out 0x2d,al
   14005125b:	imul   ecx,DWORD PTR [rbp-0x75],0x9
   14005125f:	jnp    0x1400511e8
   140051261:	mov    bl,0xbc
   140051263:	mov    eax,0x9802be35
   140051268:	or     al,0x30
   14005126a:	sub    eax,0x716ff91c
   14005126f:	sar    DWORD PTR [rbp-0x41],1
   140051272:	rex.WRXB xchg r14,rax
   140051274:	fld    DWORD PTR [rax-0x71bc3d65]
   14005127a:	or     DWORD PTR [rax+rax*1+0x7c303331],esp
   140051281:	popf   
   140051282:	jae    0x1400512b7
   140051284:	mov    BYTE PTR [rdi-0x2b87f79],ah
   14005128a:	cmp    BYTE PTR [rbp-0x7dc7b7d],ah
   140051290:	pop    rsp
   140051291:	rex.WRXB (bad) 
   140051293:	xchg   ebx,eax
   140051294:	sub    BYTE PTR [rbx-0x76fd4ae0],dh
   14005129a:	add    al,0x2a
   14005129c:	popf   
   14005129d:	add    ah,BYTE PTR [rcx]
   14005129f:	ret    
   1400512a0:	adc    eax,0x85371080
   1400512a5:	clc    
   1400512a6:	jg     0x1400512bc
   1400512a8:	rex.RB ret 0x7eef
   1400512ac:	mov    WORD PTR [rdx+rdx*4],?
   1400512af:	jge    0x140051270
   1400512b1:	clc    
   1400512b2:	iret   
   1400512b3:	adc    eax,0x6c1eee3f
   1400512b8:	(bad)  
   1400512b9:	test   BYTE PTR [rsi-0x4],al
   1400512bc:	rex.WXB add rdx,QWORD PTR [r13+0x0]
   1400512c0:	xchg   ebx,eax
   1400512c1:	add    ebp,edi
   1400512c3:	(bad)  
   1400512c4:	add    BYTE PTR [rax-0x6202543],ch
   1400512ca:	rex.WX and rsp,QWORD PTR [rbp-0x59f73656]
   1400512d1:	and    al,BYTE PTR [rdx-0x12]
   1400512d4:	cwde   
   1400512d5:	or     cl,0xc
   1400512d8:	ins    BYTE PTR es:[rdi],dx
   1400512d9:	pushfw 
   1400512db:	sbb    eax,eax
   1400512dd:	add    cl,BYTE PTR [rcx-0x34]
   1400512e0:	or     ah,bh
   1400512e2:	add    BYTE PTR [rsi-0x545211ac],cl
   1400512e8:	or     ah,BYTE PTR [rsi+rsi*4+0x60]
   1400512ec:	xchg   ebx,eax
   1400512ed:	jo     0x14005127c
   1400512ef:	adc    ebx,DWORD PTR [rsi-0x15]
   1400512f2:	push   rbx
   1400512f3:	jg     0x1400512bb
   1400512f5:	mov    bl,0x8b
   1400512f7:	loopne 0x1400512fb
   1400512f9:	clc    
   1400512fa:	jmp    0x140051295
   1400512fc:	fimul  WORD PTR [rbx]
   1400512fe:	adc    ecx,DWORD PTR [rax+0xa87ad97]
   140051304:	add    ch,BYTE PTR ds:[rsi+rcx*1-0x68]
   140051309:	cmp    al,0xb0
   14005130b:	add    eax,0x21288739
   140051310:	(bad)  
   140051311:	or     al,0xc6
   140051313:	leave  
   140051314:	hlt    
   140051315:	lods   eax,DWORD PTR ds:[rsi]
   140051316:	in     al,dx
   140051317:	popf   
   140051318:	icebp  
   140051319:	shl    bl,1
   14005131b:	xchg   DWORD PTR [rdi-0x35],esp
   14005131e:	mov    ?,WORD PTR [rdx]
   140051320:	ins    DWORD PTR es:[rdi],dx
   140051321:	lock sub DWORD PTR [rcx],ecx
   140051324:	(bad)  
   140051325:	add    eax,0xd268d8b8
   14005132a:	sub    bh,BYTE PTR [rcx+rsi*8-0x268ab89c]
   140051331:	(bad)  
   140051332:	(bad)  
   140051333:	(bad)  
   140051334:	jbe    0x14005138f
   140051336:	cmp    ebx,ebp
   140051338:	rex test eax,0x7de14d81
   14005133e:	jb     0x1400513a3
   140051340:	popf   
   140051341:	rcr    BYTE PTR [rbx],0x4e
   140051344:	or     eax,0x76c106c2
   140051349:	xchg   esi,eax
   14005134a:	cdq    
   14005134b:	and    bh,BYTE PTR [rdi-0x63]
   14005134e:	movabs ds:0xc12c12526f3386f2,eax
   140051357:	rex.XB movabs eax,ds:0xf4081edf605d92f3
   140051361:	ds out dx,al
   140051363:	(bad)  
   140051364:	lock mov ebp,0x1a043603
   14005136a:	jge    0x140051368
   14005136c:	iret   
   14005136d:	mov    ebx,0x21c84001
   140051372:	test   BYTE PTR [rax+0x63f49ba4],ah
   140051378:	ror    eax,1
   14005137a:	test   eax,0xf3bfa1ba
   14005137f:	sub    edi,0x1feab9ef
   140051385:	rcl    BYTE PTR [rcx+0x3283a55e],1
   14005138b:	or     cl,0x43
   14005138e:	movabs eax,ds:0x514a65edb54f6338
   140051397:	(bad)  
   140051398:	ins    BYTE PTR es:[rdi],dx
   140051399:	loope  0x140051408
   14005139b:	rex.R fbld TBYTE PTR [rbp+0x38]
   14005139f:	(bad)  
   1400513a0:	and    eax,0xeb9b16c4
   1400513a5:	std    
   1400513a6:	rex.RB
   1400513a7:	rex.WB clc 
   1400513a9:	fadd   DWORD PTR [rax-0x3e76ad77]
   1400513af:	mov    dl,0x3b
   1400513b1:	(bad)  
   1400513b2:	(bad)  
   1400513b3:	and    ah,BYTE PTR [rsi]
   1400513b5:	(bad)  
   1400513b6:	add    BYTE PTR [rax+rax*2-0x7709acf7],0x4d
   1400513be:	rex.W (bad) 
   1400513c0:	adc    cl,cl
   1400513c2:	movsxd ebp,DWORD PTR [rsi]
   1400513c4:	or     BYTE PTR [rdx-0x741b0127],dl
   1400513ca:	xchg   BYTE PTR [rdx+0x471f1ed2],ah
   1400513d0:	or     BYTE PTR [rbp+0x1018c608],dh
   1400513d6:	push   rcx
   1400513d7:	ins    DWORD PTR es:[rdi],dx
   1400513d8:	out    0x60,eax
   1400513da:	(bad)  
   1400513db:	sbb    BYTE PTR [rcx+0x0],dh
   1400513de:	add    BYTE PTR [rax],cl
   1400513e0:	push   rdi
   1400513e1:	rex.WB
   1400513e2:	rex.R
   1400513e3:	push   r12
   1400513e5:	fdecstp 
   1400513e7:	rex.RXB mov r15d,0x26c173bd
   1400513ed:	cld    
   1400513ee:	scas   eax,DWORD PTR es:[rdi]
   1400513ef:	sbb    bh,BYTE PTR [rdi-0x3b]
   1400513f2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400513f3:	rex.X sbb eax,eax
   1400513f6:	and    BYTE PTR fs:[rbx+rax*1],al
   1400513fa:	in     eax,0x96
   1400513fc:	mov    esp,0xffbdb275
   140051401:	out    dx,al
   140051402:	sbb    ecx,DWORD PTR [rsi+0x7f]
   140051405:	xor    DWORD PTR [rbx-0x37],ebp
   140051408:	out    0x8b,eax
   14005140a:	ror    BYTE PTR [rbx+0x6ffced9f],0x8e
   140051411:	mov    ah,0x33
   140051413:	or     ecx,DWORD PTR [rax+0x5d20739b]
   140051419:	jns    0x1400513f1
   14005141b:	js     0x140051417
   14005141d:	(bad)  
   14005141e:	cli    
   14005141f:	ins    BYTE PTR es:[rdi],dx
   140051420:	rex.WR mov al,0xdc
   140051423:	rex.X jmp 0x140051473
   140051426:	xchg   ecx,eax
   140051427:	movabs ds:0xb7a53c0302cc201b,al
   140051430:	shl    ebp,1
   140051432:	repnz sbb bl,BYTE PTR [rdi-0x7c]
   140051436:	and    al,0xaf
   140051438:	test   ebp,0xb80d42bf
   14005143e:	pop    rcx
   14005143f:	mov    BYTE PTR [rsi+rsi*8],cl
   140051442:	push   rdi
   140051443:	pop    rbx
   140051444:	lahf   
   140051445:	mov    edx,0x2fb5eb75
   14005144a:	movabs al,ds:0x3280a5fea55f24d9
   140051453:	or     cl,0x43
   140051456:	and    DWORD PTR [rip+0xffffffff9d9aac78],esp        # 0xdd9fc0d4
   14005145c:	(bad)  
   14005145d:	js     0x14005148d
   14005145f:	jnp    0x1400514b2
   140051461:	lods   al,BYTE PTR ds:[rsi]
   140051462:	cmp    BYTE PTR [rcx+0x3e69f615],dh
   140051468:	cmovle r9,QWORD PTR [rbp+r15*8+0x49]
   14005146e:	leave  
   14005146f:	(bad)  
   140051470:	xor    ah,bl
   140051472:	outs   dx,BYTE PTR ds:[rsi]
   140051473:	or     edi,ebx
   140051475:	push   rdx
   140051476:	mov    ecx,0xc09604c7
   14005147b:	sub    al,0x22
   14005147d:	and    eax,0x13320d4e
   140051482:	lock mov al,dh
   140051485:	clc    
   140051486:	imul   esi,DWORD PTR [rbx+0x5f],0xffffff8b
   14005148a:	add    BYTE PTR [rsi+0x1e],ch
   14005148d:	sub    dl,BYTE PTR [rsi+0x83dc707]
   140051493:	mov    dl,0x97
   140051495:	pop    rsi
   140051496:	mov    dl,BYTE PTR [rax-0x409b7372]
   14005149c:	stc    
   14005149d:	ret    0x85a6
   1400514a0:	retf   
   1400514a1:	movabs eax,ds:0xa164c0194352bee9
   1400514aa:	cwde   
   1400514ab:	adc    dh,BYTE PTR [rax+rax*1+0x53a3256c]
   1400514b2:	mov    bh,0x5c
   1400514b4:	cmp    eax,0xc12495f2
   1400514b9:	int3   
   1400514ba:	and    BYTE PTR [rcx+riz*1+0x7c9647cd],cl
   1400514c1:	rex.R pop rsi
   1400514c3:	retf   0x3d84
   1400514c6:	pop    rbp
   1400514c7:	xchg   edi,eax
   1400514c8:	xor    al,0x5e
   1400514ca:	and    al,0xb0
   1400514cc:	and    DWORD PTR [rip+0xffffffffc3b43088],edx        # 0x103b9455a
   1400514d2:	mov    al,BYTE PTR [rbx+rsi*1]
   1400514d5:	lods   eax,DWORD PTR ds:[rsi]
   1400514d6:	(bad)  
   1400514d7:	stc    
   1400514d8:	cmp    BYTE PTR [rcx],al
   1400514da:	jno    0x140051478
   1400514dc:	movabs al,ds:0xfdb3f2286a3bbab0
   1400514e5:	rex.X
   1400514e6:	adc    QWORD PTR [r13+rdx*1+0x31a57d8],rsp
   1400514ee:	call   0xf15e820e
   1400514f3:	je     0x1400514c0
   1400514f5:	ret    0xce27
   1400514f8:	(bad)  
   1400514f9:	in     al,dx
   1400514fa:	or     BYTE PTR [rax+rbp*8],dh
   1400514fd:	push   rdi
   1400514fe:	push   0x28
   140051500:	add    ebx,DWORD PTR [rax-0x7dadeba4]
   140051506:	retf   
   140051507:	fistp  QWORD PTR [rcx+0x68c4efbc]
   14005150d:	mov    dh,0x8e
   14005150f:	adc    bl,BYTE PTR [rbx]
   140051511:	sub    al,0xbc
   140051513:	pop    rax
   140051514:	out    dx,al
   140051515:	xor    al,0xb4
   140051517:	(bad)  
   140051518:	mov    edx,0x850214c7
   14005151d:	imul   edx,DWORD PTR [rdi+rcx*1],0x6a4c0d48
   140051524:	cdq    
   140051525:	and    eax,0x4840a898
   14005152a:	cwde   
   14005152b:	add    al,0x22
   14005152d:	and    eax,0xc38a8a62
   140051532:	adc    cl,BYTE PTR [rax]
   140051534:	cmp    DWORD PTR [rax],ebp
   140051536:	lods   al,BYTE PTR ds:[rsi]
   140051537:	loopne 0x14005152f
   140051539:	rex.RB (bad) 
   14005153b:	movabs ds:0xcf7cc4632feb6244,al
   140051544:	xor    DWORD PTR [rip+0xffffffffafa7a818],0x9afbbd7e        # 0xefacbd66
   14005154e:	mov    DWORD PTR [rsi],0xddd912c6
   140051554:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051555:	repz cld 
   140051557:	rex.WX or al,0x55
   14005155a:	add    BYTE PTR [rbx+0x3604090f],dl
   140051560:	add    ah,dl
   140051562:	(bad)  
   140051563:	jp     0x140051519
   140051565:	movabs ds:0xe3eae9336c314f2b,eax
   14005156e:	xor    al,0x9f
   140051570:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051571:	sub    BYTE PTR [rax-0x69],cl
   140051574:	xchg   DWORD PTR [rsi-0x4c1111ff],ebx
   14005157a:	loop   0x14005159a
   14005157c:	rex.W add al,dl
   14005157f:	or     bh,BYTE PTR [rbx]
   140051581:	(bad)  
   140051582:	(bad)  
   140051583:	loopne 0x14005159a
   140051585:	(bad)  
   140051586:	add    DWORD PTR [rdx+0x72],edx
   140051589:	out    dx,al
   14005158a:	test   BYTE PTR [rax],ch
   14005158c:	adc    al,0x9e
   14005158e:	adc    BYTE PTR [rdx+0x2c],ch
   140051591:	dec    esi
   140051593:	add    al,0x8e
   140051595:	(bad)  
   140051596:	rex.RXB adc eax,0xf1f7147f
   14005159c:	sti    
   14005159d:	jmp    0x14fe8fa60
   1400515a2:	xor    al,al
   1400515a4:	loopne 0x14005161e
   1400515a6:	mov    dl,0xe1
   1400515a8:	(bad)  
   1400515a9:	mov    edi,0x81c8fd5f
   1400515ae:	push   0x4b
   1400515b0:	pop    rsp
   1400515b1:	call   0x104c4ac59
   1400515b6:	push   rax
   1400515b7:	add    eax,0xb0b89930
   1400515bc:	push   rbp
   1400515bd:	mov    bl,0xf6
   1400515bf:	rol    BYTE PTR [rsi-0xc780487],1
   1400515c5:	and    edx,DWORD PTR fs:[rdx-0x7e]
   1400515c9:	rex.WRB popf 
   1400515cb:	scas   eax,DWORD PTR es:[rdi]
   1400515cc:	outs   dx,BYTE PTR ds:[rsi]
   1400515cd:	adc    dh,dl
   1400515cf:	rex.RB cmp al,0xee
   1400515d2:	pop    rax
   1400515d3:	test   BYTE PTR [rdi+0x5bdcb3ad],bl
   1400515d9:	repnz push rcx
   1400515db:	jg     0x1400515a8
   1400515dd:	xlat   BYTE PTR ds:[rbx]
   1400515de:	pop    rdx
   1400515df:	out    dx,eax
   1400515e0:	call   QWORD PTR [rbx+0x18]
   1400515e3:	or     al,0x22
   1400515e5:	ins    BYTE PTR es:[rdi],dx
   1400515e6:	and    BYTE PTR [rip+0x18905f57],ah        # 0x158957543
   1400515ec:	(bad)  
   1400515ed:	and    eax,0x1e86fd66
   1400515f2:	clc    
   1400515f3:	(bad)  
   1400515f4:	(bad)  
   1400515f5:	add    edx,DWORD PTR [rdx-0x7b727c54]
   1400515fb:	(bad)  
   1400515fc:	adc    ecx,eax
   1400515fe:	ja     0x14005160a
   140051600:	loop   0x14005166e
   140051602:	cmp    eax,0x8ec0f2dd
   140051607:	jns    0x140051618
   140051609:	out    dx,eax
   14005160a:	sbb    BYTE PTR [rbx+rdi*1+0xd],ch
   14005160e:	rex.WRB test QWORD PTR [r13+0x19],0x72802a8
   140051616:	(bad)  
   140051617:	or     eax,0xefa80068
   14005161c:	cmp    BYTE PTR [rcx+0x59],dl
   14005161f:	sub    QWORD PTR [rip+0x6e08129c],rsi        # 0x1ae0d28c2
   140051626:	sub    BYTE PTR [rdi+0x1e56f7c3],0xde
   14005162d:	fild   WORD PTR [rdi]
   14005162f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051630:	jmp    0x105c54cd9
   140051635:	or     ebx,DWORD PTR [rax+0x21]
   140051638:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051639:	movabs ds:0x20b72074f0515808,al
   140051642:	add    BYTE PTR [rsi+0x19],cl
   140051645:	fs or  bl,dl
   140051648:	and    DWORD PTR [rsi+rdi*4+0x5f],esp
   14005164c:	xchg   esp,eax
   14005164d:	test   DWORD PTR [rdi+0x4d90bc9],0x382b3c80
   140051657:	push   rbx
   140051658:	rex.WXB movabs r11,0x667aeb03de63b47f
   140051662:	hlt    
   140051663:	and    ebx,DWORD PTR [rax+0x7e]
   140051666:	ins    DWORD PTR es:[rdi],dx
   140051667:	in     eax,dx
   140051668:	popf   
   140051669:	add    dl,BYTE PTR [rax+0x5]
   14005166c:	xor    cl,bl
   14005166e:	sub    BYTE PTR [rdx-0x57fc580],dh
   140051674:	iret   
   140051675:	ss pop rsp
   140051677:	mov    ecx,0xeedd5ced
   14005167c:	and    sil,BYTE PTR [rsp+r11*1]
   140051680:	jle    0x14005169a
   140051682:	(bad)  
   140051683:	adc    al,BYTE PTR [rbx+rcx*8]
   140051686:	retf   
   140051687:	adc    al,0x9d
   140051689:	(bad)  
   14005168a:	cmp    eax,0x49bbb9b0
   14005168f:	movsxd ecx,DWORD PTR [rdi]
   140051691:	rex.RXB cld 
   140051693:	(bad)  
   140051694:	int    0x59
   140051696:	lock and eax,0xb7b904e
   14005169c:	outs   dx,DWORD PTR ds:[rsi]
   14005169d:	mov    esp,0x80dae775
   1400516a2:	xor    al,0x76
   1400516a4:	or     eax,0x4fc1ce4
   1400516a9:	(bad)  
   1400516aa:	pop    rdi
   1400516ab:	out    dx,al
   1400516ac:	retf   
   1400516ad:	(bad)  
   1400516ae:	and    BYTE PTR [rdi+0x23f7496b],0x3b
   1400516b5:	out    0xde,al
   1400516b7:	dec    edx
   1400516b9:	xchg   ecx,eax
   1400516ba:	sbb    DWORD PTR [rdi],esp
   1400516bc:	sar    BYTE PTR [rbx+rax*4-0x71],1
   1400516c0:	movabs ds:0x8252140e500550c4,al
   1400516c9:	jnp    0x14005171a
   1400516cb:	mov    ah,0x8e
   1400516cd:	sbb    al,0x3c
   1400516cf:	fnsave [rdx+0x1ec2081a]
   1400516d5:	test   BYTE PTR es:[rsi-0x2fd6c036],0xf1
   1400516dd:	mov    bl,0x42
   1400516df:	or     bl,cl
   1400516e1:	add    BYTE PTR [rdi-0x29],al
   1400516e4:	mov    ebp,0x4f8c4902
   1400516e9:	sti    
   1400516ea:	jns    0x1400516ab
   1400516ec:	popf   
   1400516ed:	sbb    DWORD PTR [rdx],eax
   1400516ef:	rex.WB ins DWORD PTR es:[rdi],dx
   1400516f1:	or     DWORD PTR [rdi+0x1],0x679ebf06
   1400516f8:	jns    0x14005167e
   1400516fa:	mov    dl,0x60
   1400516fc:	add    edi,DWORD PTR [rdi]
   1400516fe:	icebp  
   1400516ff:	movsxd ebp,DWORD PTR [rax+0x3c]
   140051702:	jns    0x1400516e7
   140051704:	xchg   ebx,ebx
   140051706:	repnz cmp DWORD PTR ds:[rdi],0x1e
   14005170b:	repnz sub edi,DWORD PTR [rbx-0x4a81ebd1]
   140051712:	(bad)  
   140051713:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051714:	xchg   BYTE PTR [rsi+0x2680cb01],ah
   14005171a:	pop    rbp
   14005171b:	(bad)  
   14005171c:	cmp    eax,0x3b9eb367
   140051721:	ds jne 0x14005171a
   140051724:	stos   DWORD PTR es:[rdi],eax
   140051725:	imul   eax,DWORD PTR [rdx+0x2f473e59],0x4478b9eb
   14005172f:	xchg   edi,eax
   140051730:	lahf   
   140051731:	adc    ecx,DWORD PTR [rax]
   140051733:	add    al,0xa1
   140051735:	(bad)  
   140051736:	fcom   QWORD PTR [rax+0x50]
   140051739:	xor    eax,ebx
   14005173b:	movabs ds:0x4fce42ca2760241d,al
   140051744:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051745:	cli    
   140051746:	push   rdx
   140051747:	(bad)  
   140051748:	jmp    0x140051789
   14005174a:	mov    WORD PTR [rax+rdi*8],ss
   14005174d:	nop
   14005174e:	lahf   
   14005174f:	(bad)  
   140051750:	(bad)  
   140051751:	add    BYTE PTR [rsp+rcx*4],cl
   140051754:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051755:	scas   eax,DWORD PTR es:[rdi]
   140051756:	fnstsw WORD PTR [rbx-0x28785517]
   14005175c:	(bad)  
   14005175d:	jmp    0x14005179b
   14005175f:	test   DWORD PTR [rsi+0x63],esp
   140051762:	mov    esp,0x29fe1501
   140051767:	add    BYTE PTR [rbp+0x0],ah
   14005176a:	in     eax,0x41
   14005176c:	and    DWORD PTR [rip+0xffffffffc77f7eb8],esp        # 0x10784962a
   140051772:	cdq    
   140051773:	fsubrp st(1),st
   140051775:	lods   al,BYTE PTR ds:[rsi]
   140051776:	retf   
   140051777:	lahf   
   140051778:	xchg   ebp,eax
   140051779:	mov    cl,0x60
   14005177b:	pop    rsp
   14005177c:	(bad)  
   14005177d:	jmp    0x140051756
   14005177f:	imul   ecx,DWORD PTR [rbx-0x42],0x7979679e
   140051786:	(bad)  
   140051787:	cmp    eax,0x1cb0ec12
   14005178c:	add    al,0xbe
   14005178e:	xchg   eax,eax
   140051790:	(bad)
   140051793:	sub    eax,0x130630bd
   140051798:	pop    rcx
   140051799:	(bad)  
   14005179a:	fcom   st(7)
   14005179c:	(bad)  
   14005179d:	lods   al,BYTE PTR ds:[rsi]
   14005179e:	rex.R pop rsp
   1400517a0:	sahf   
   1400517a1:	(bad)  
   1400517a2:	pop    rbp
   1400517a3:	jne    0x140051780
   1400517a5:	(bad)  
   1400517a6:	test   DWORD PTR [rdi],ecx
   1400517a8:	outs   dx,BYTE PTR ds:[rsi]
   1400517a9:	cmp    al,0xde
   1400517ab:	xor    DWORD PTR [rcx-0x70],esi
   1400517ae:	addr32 sbb eax,0xc2a02452
   1400517b4:	(bad)  
   1400517b5:	and    eax,0x5ca00aa0
   1400517ba:	sub    BYTE PTR [rcx+rcx*1-0x52],dh
   1400517be:	(bad)  
   1400517c0:	stc    
   1400517c1:	pop    rdx
   1400517c2:	lea    ecx,[rdi+rdi*2+0x68]
   1400517c6:	mov    ecx,0x35bb8ce7
   1400517cb:	and    BYTE PTR [rbx+0x7e],al
   1400517ce:	add    al,0x18
   1400517d0:	jno    0x140051833
   1400517d2:	adc    BYTE PTR [rcx],bl
   1400517d4:	(bad)  
   1400517d5:	(bad)  
   1400517d6:	std    
   1400517d7:	xor    BYTE PTR [rsi-0x67],cl
   1400517da:	or     ebp,eax
   1400517dc:	lods   eax,DWORD PTR ds:[rsi]
   1400517dd:	mov    ebp,0x7213e48b
   1400517e2:	jbe    0x1400517fb
   1400517e4:	movabs ds:0x4bfa8e84821b7f3e,al
   1400517ed:	lea    eax,[rax+0x637e91f1]
   1400517f3:	rex.WR jle 0x14005185e
   1400517f6:	mov    eax,0xba9b99e5
   1400517fb:	(bad)  
   1400517fc:	std    
   1400517fd:	hlt    
   1400517fe:	lock jo 0x140051857
   140051801:	rex.RB xchg r9d,eax
   140051803:	imul   BYTE PTR [rbx-0x46]
   140051806:	outs   dx,DWORD PTR ds:[rsi]
   140051807:	or     al,BYTE PTR [rdx+0x5d]
   14005180a:	xor    BYTE PTR [rdx-0x1f68b660],0x1b
   140051811:	(bad)  
   140051812:	je     0x140051868
   140051814:	xchg   edi,eax
   140051815:	sub    eax,0xa3beba19
   14005181a:	rex.X lahf 
   14005181c:	mov    gs,WORD PTR [rdi]
   14005181e:	or     eax,0x649178c5
   140051823:	add    edi,DWORD PTR [rsi+0x4664047]
   140051829:	rex.WX stos BYTE PTR es:[rdi],al
   14005182b:	pop    rsi
   14005182c:	fadd   QWORD PTR [rip+0xffffffff8ac0b3c3]        # 0xcac5cbf5
   140051832:	jmp    0x140051830
   140051834:	pop    rax
   140051835:	mov    eax,0x3cb09ebd
   14005183a:	es or  al,0xc8
   14005183d:	frstor [rax+0x76049941]
   140051843:	out    dx,al
   140051844:	fst    QWORD PTR [rbx-0x53]
   140051847:	(bad)  
   140051848:	(bad)  
   140051849:	pop    rcx
   14005184a:	mov    ebp,0xc358f968
   14005184f:	retf   0xcf10
   140051852:	mov    ebp,esi
   140051854:	std    
   140051855:	push   0xfffffffffffffff9
   140051857:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051858:	sbb    BYTE PTR [rcx+rax*1+0x46710f94],dl
   14005185f:	movabs al,ds:0xdcd50095f6c3f9b6
   140051868:	sub    ebx,eax
   14005186a:	push   rsi
   14005186b:	pop    rbp
   14005186c:	sbb    al,0x79
   14005186e:	(bad)  
   14005186f:	push   rdx
   140051870:	cs setl ch
   140051874:	mov    bh,0x91
   140051876:	push   rdx
   140051877:	mov    BYTE PTR [rdx+0x7f5cdcf5],ch
   14005187d:	js     0x140051896
   14005187f:	mov    dil,BYTE PTR [r11+0x5c]
   140051883:	icebp  
   140051884:	btc    DWORD PTR [rip+0xffffffffc0380cc2],edx        # 0x1003d254d
   14005188b:	xor    BYTE PTR [rsi-0x71e41c25],dl
   140051891:	jbe    0x14005186f
   140051893:	jg     0x1400518e0
   140051895:	xlat   BYTE PTR ds:[rbx]
   140051896:	jne    0x1400518c7
   140051898:	and    ah,cl
   14005189a:	icebp  
   14005189b:	rol    DWORD PTR [rax+0x2a8034df],cl
   1400518a1:	xor    BYTE PTR [rdx],0xa1
   1400518a4:	leave  
   1400518a5:	or     al,0xf7
   1400518a7:	jnp    0x1400518ff
   1400518a9:	sub    al,0xd8
   1400518ab:	xor    eax,0xfa376234
   1400518b0:	mov    esi,0x8064117e
   1400518b5:	(bad)  
   1400518b6:	xchg   ebp,eax
   1400518b7:	rex.RX jle 0x140051933
   1400518ba:	adc    ecx,DWORD PTR [rcx-0xe5c6e1e]
   1400518c0:	es pushf 
   1400518c2:	es (bad) 
   1400518c4:	add    eax,DWORD PTR [rbp-0x2e0e5fa0]
   1400518ca:	(bad)  
   1400518cb:	push   rax
   1400518cc:	imul   BYTE PTR [rbx]
   1400518ce:	repz add ecx,DWORD PTR [rax]
   1400518d1:	(bad)  
   1400518d2:	mov    edx,0xaeecf9dd
   1400518d7:	fnstenv [rdi+0x7f]
   1400518da:	jae    0x1400518a9
   1400518dc:	xor    eax,0xbe09c3af
   1400518e1:	or     bh,bh
   1400518e3:	xor    al,0x82
   1400518e5:	mov    es,WORD PTR [rip+0xa0a1f2f]        # 0x14a0f381a
   1400518eb:	add    BYTE PTR [rax-0x13],al
   1400518ee:	mov    ebp,0x3fabad93
   1400518f3:	call   rcx
   1400518f5:	xchg   ecx,eax
   1400518f6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400518f7:	(bad)  
   1400518f8:	and    BYTE PTR [rcx-0x3e],dh
   1400518fb:	rex.WR xchg rcx,rax
   1400518fd:	xor    BYTE PTR [rbx+0x50],dl
   140051900:	or     DWORD PTR [rcx+rdx*2],esp
   140051903:	rex jle 0x14005191d
   140051906:	mov    edi,0x7ada4000
   14005190b:	movabs ds:0xfab054f77af47e88,eax
   140051914:	(bad)  
   140051915:	lahf   
   140051916:	movabs al,ds:0xfee7eb43d2f67cff
   14005191f:	jl     0x14005190e
   140051921:	(bad)  
   140051922:	popf   
   140051923:	(bad)  
   140051924:	push   rcx
   140051925:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051926:	cld    
   140051927:	loop   0x140051918
   140051929:	imul   edx,DWORD PTR [rcx-0x3978eb31],0x0
   140051930:	retf   0xe286
   140051933:	lods   al,BYTE PTR ds:[rsi]
   140051934:	add    BYTE PTR [rbx],cl
   140051936:	sar    dh,0xab
   140051939:	mov    bh,0xd2
   14005193b:	imul   DWORD PTR [rbp-0x25a26331]
   140051941:	xchg   edx,eax
   140051942:	rcr    BYTE PTR [rax+riz*1-0x5a],cl
   140051946:	lock adc al,0x7c
   140051949:	jge    0x1400519bc
   14005194b:	or     esp,DWORD PTR [rdx+0x4ddefff9]
   140051951:	(bad)  
   140051952:	stos   DWORD PTR es:[rdi],eax
   140051953:	out    dx,eax
   140051954:	out    0x81,al
   140051956:	(bad)  
   140051957:	xchg   ebx,eax
   140051958:	jl     0x140051912
   14005195a:	loop   0x1400518eb
   14005195c:	sar    DWORD PTR [rbx-0x72],cl
   14005195f:	jle    0x140051979
   140051961:	adc    BYTE PTR [rax+0x6e],dh
   140051964:	pop    rdi
   140051965:	jg     0x14005194c
   140051967:	leave  
   140051968:	fwait
   140051969:	sahf   
   14005196a:	mov    ebx,0xa7bda9ee
   14005196f:	sub    ah,BYTE PTR [rdi-0x30]
   140051972:	pop    rsp
   140051973:	clc    
   140051974:	xor    eax,0xa00d37d8
   140051979:	rex cmp DWORD PTR cs:[rcx+0x60],edx
   14005197e:	add    DWORD PTR [rbx+0x3e46da7b],edi
   140051984:	sbb    al,0xc
   140051986:	sub    ecx,eax
   140051988:	xor    BYTE PTR [rsi+0x3a8df00b],al
   14005198e:	adc    ebx,edi
   140051990:	and    BYTE PTR [rip+0xffffffffe01dc49a],0x8d        # 0x12022de31
   140051997:	rex pop rsi
   140051999:	ror    cl,1
   14005199b:	out    0x14,eax
   14005199d:	cld    
   14005199e:	sti    
   14005199f:	add    al,al
   1400519a1:	stc    
   1400519a2:	xchg   BYTE PTR [rcx],bh
   1400519a4:	lock (bad) 
   1400519a6:	dec    dh
   1400519a8:	sti    
   1400519a9:	outs   dx,BYTE PTR ds:[rsi]
   1400519aa:	pop    rsi
   1400519ab:	jle    0x14005198a
   1400519ad:	outs   dx,DWORD PTR ds:[rsi]
   1400519ae:	rex.RXB jmp 0x140051a17
   1400519b1:	add    al,0xc1
   1400519b3:	out    0xd7,eax
   1400519b5:	(bad)  
   1400519b6:	sahf   
   1400519b7:	imul   ecx,DWORD PTR [rax],0x45e50055
   1400519bd:	movabs eax,ds:0x6b1baf67b7b9e849
   1400519c6:	cwde   
   1400519c7:	movsxd edi,esi
   1400519c9:	or     al,0xc1
   1400519cb:	(bad)  
   1400519cc:	out    dx,eax
   1400519cd:	lock xor al,0x80
   1400519d0:	xor    BYTE PTR [rcx+0x3e8d87ca],ah
   1400519d6:	lods   al,BYTE PTR ds:[rsi]
   1400519d7:	(bad)  
   1400519d8:	call   0x1620777fe
   1400519dd:	adc    al,0x83
   1400519df:	sbb    eax,DWORD PTR [rax+0x37de4041]
   1400519e5:	pushf  
   1400519e6:	jbe    0x140051a25
   1400519e8:	mov    eax,0x779dde76
   1400519ed:	lods   eax,DWORD PTR ds:[rsi]
   1400519ee:	pop    rsp
   1400519ef:	mov    al,0x19
   1400519f1:	rex.WRX
   1400519f2:	lock jne 0x140051a50
   1400519f5:	out    dx,eax
   1400519f6:	xor    al,0x87
   1400519f8:	mov    edx,0x93446500
   1400519fd:	xchg   esp,eax
   1400519fe:	loopne 0x1400519ae
   140051a00:	sahf   
   140051a01:	mov    dh,0xf1
   140051a03:	out    dx,eax
   140051a04:	sub    al,0x1e
   140051a06:	(bad)  
   140051a07:	cmp    ebp,DWORD PTR [rbx-0x13e3a0d3]
   140051a0d:	jg     0x140051a1f
   140051a0f:	je     0x140051a88
   140051a11:	(bad)  
   140051a12:	pop    rsp
   140051a13:	adc    BYTE PTR [rax],0x17
   140051a16:	xchg   esp,eax
   140051a17:	lahf   
   140051a18:	xchg   ecx,eax
   140051a19:	xchg   edx,eax
   140051a1a:	adc    BYTE PTR [rsp+rcx*1],0xb9
   140051a1e:	jae    0x140051a03
   140051a20:	or     eax,0x91db7473
   140051a25:	test   bh,0x3e
   140051a28:	imul   DWORD PTR [rbx-0x244330bb]
   140051a2e:	fstp   TBYTE PTR [rdx]
   140051a30:	test   dh,ah
   140051a32:	push   rbx
   140051a33:	jl     0x140051a69
   140051a35:	fdiv   DWORD PTR [rdi]
   140051a37:	or     eax,0xdca00ca1
   140051a3c:	sub    ah,cl
   140051a3e:	or     bl,BYTE PTR [rax-0x1]
   140051a41:	jle    0x140051a2a
   140051a43:	rex.WXB or rax,0xfffffffff6ec8ce0
   140051a49:	xchg   edx,eax
   140051a4a:	add    BYTE PTR [rsi-0x2f],bl
   140051a4d:	mov    esp,edi
   140051a4f:	repnz pop rsi
   140051a51:	loop   0x140051ab3
   140051a53:	(bad)  
   140051a54:	movabs ds:0x50af4ebfa5246275,al
   140051a5d:	rex.WRX jrcxz 0x140051a27
   140051a60:	iret   
   140051a61:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051a62:	pop    rbp
   140051a63:	rex.WRXB cld 
   140051a65:	in     eax,dx
   140051a66:	mov    bh,BYTE PTR [rbx-0x4a230342]
   140051a6c:	(bad)  
   140051a6d:	add    edx,DWORD PTR [rax]
   140051a6f:	retf   0x863f
   140051a72:	retfw  
   140051a74:	cmp    dl,BYTE PTR [rbp-0x8]
   140051a77:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051a78:	sbb    eax,0x151e742e
   140051a7d:	in     eax,0x41
   140051a7f:	jno    0x140051a24
   140051a81:	jo     0x140051a88
   140051a83:	rex sti 
   140051a85:	xchg   ecx,eax
   140051a86:	rex.RXB (bad) 
   140051a88:	std    
   140051a89:	in     al,dx
   140051a8a:	pushf  
   140051a8b:	idiv   ah
   140051a8d:	jbe    0x140051a2e
   140051a8f:	(bad)  
   140051a90:	idiv   DWORD PTR [rsi-0x591c782]
   140051a96:	(bad)
   140051a9a:	adc    al,BYTE PTR [rip+0xffffffffe77663c3]        # 0x1277b7e63
   140051aa0:	(bad)  
   140051aa1:	pand   mm3,QWORD PTR [rdi-0x50103902]
   140051aa8:	(bad)  [rax-0x5d906f9e]
   140051aae:	(bad)  
   140051aaf:	push   rdi
   140051ab0:	rcr    DWORD PTR [rdi+0x6034d0c6],0xf9
   140051ab7:	push   rcx
   140051ab8:	pushf  
   140051ab9:	adc    eax,0xd57db470
   140051abe:	ins    DWORD PTR es:[rdi],dx
   140051abf:	xlat   BYTE PTR ds:[rbx]
   140051ac0:	movq   mm5,mm1
   140051ac3:	pop    rax
   140051ac4:	outs   dx,BYTE PTR ds:[rsi]
   140051ac5:	std    
   140051ac6:	adc    DWORD PTR [rcx+0xc530326],ecx
   140051acc:	jmp    0x140051b3f
   140051ace:	rex.W
   140051acf:	add    al,0xdf
   140051ad2:	or     edi,edi
   140051ad4:	js     0x140051a99
   140051ad6:	sbb    al,0x7c
   140051ad8:	jmp    QWORD PTR [rbp+riz*8+0xf]
   140051adc:	idiv   DWORD PTR [rbp-0x309440c8]
   140051ae2:	icebp  
   140051ae3:	(bad)  
   140051ae4:	(bad)  
   140051ae5:	cmp    cl,al
   140051ae7:	(bad)
   140051aeb:	not    BYTE PTR [rbp+0x50025ff2]
   140051af1:	(bad)  
   140051af2:	push   rax
   140051af3:	jbe    0x140051a79
   140051af5:	(bad)  
   140051af6:	ret    0x2d
   140051af9:	pop    rdx
   140051afa:	outs   dx,DWORD PTR ds:[rsi]
   140051afb:	cwde   
   140051afc:	(bad)  
   140051afd:	cmp    dh,bl
   140051aff:	int    0xef
   140051b01:	sbb    eax,0x6951d55a
   140051b06:	sub    al,0x96
   140051b08:	or     BYTE PTR [rdi-0x6e85bc77],bh
   140051b0e:	(bad)  
   140051b0f:	out    dx,eax
   140051b10:	sbb    edi,ebx
   140051b12:	or     al,0x30
   140051b14:	pop    rdx
   140051b15:	xor    eax,DWORD PTR [rdi+0x56540e0e]
   140051b1b:	std    
   140051b1c:	jp     0x140051b09
   140051b1e:	pushf  
   140051b1f:	push   rdi
   140051b20:	pop    rsi
   140051b21:	fdivr  DWORD PTR [rsi]
   140051b23:	stos   DWORD PTR es:[rdi],eax
   140051b24:	cmovle esp,eax
   140051b27:	movsxd eax,ecx
   140051b29:	push   rdi
   140051b2a:	stos   DWORD PTR es:[rdi],eax
   140051b2b:	jg     0x140051b36
   140051b2d:	rex.X sbb DWORD PTR [rax-0x7],eax
   140051b31:	push   rcx
   140051b32:	or     rsi,rbp
   140051b35:	in     eax,dx
   140051b36:	imul   ebx,DWORD PTR [rip+0x7b267c39],0xfffffff9        # 0x1bb2b9776
   140051b3d:	xchg   ebx,eax
   140051b3e:	jae    0x140051b5b
   140051b40:	mov    edi,ebp
   140051b42:	pop    rcx
   140051b43:	add    BYTE PTR [rax],dh
   140051b45:	cmp    DWORD PTR [rbp+rdi*8-0x4a],esp
   140051b49:	(bad)  
   140051b4a:	test   DWORD PTR [rip+0xffffffffef331d50],0xf968181c        # 0x12f3838a4
   140051b54:	shl    ebx,cl
   140051b56:	scas   eax,DWORD PTR es:[rdi]
   140051b57:	pop    rdi
   140051b58:	stc    
   140051b59:	out    0xbf,eax
   140051b5b:	in     al,dx
   140051b5c:	jmp    0x140051b7a
   140051b5e:	(bad)  
   140051b5f:	test   DWORD PTR [rdx-0x52bd13d1],eax
   140051b65:	(bad)  
   140051b66:	and    eax,0x53006508
   140051b6b:	add    DWORD PTR [rbp+0x16],eax
   140051b6e:	shl    BYTE PTR [rsi-0x31],1
   140051b71:	int    0x43
   140051b73:	push   rdi
   140051b74:	std    
   140051b75:	repnz mov ds,esi
   140051b78:	jne    0x140051b0f
   140051b7a:	test   dh,ah
   140051b7c:	add    eax,DWORD PTR [rax]
   140051b7e:	in     eax,0x70
   140051b80:	in     eax,dx
   140051b81:	ror    DWORD PTR [rbx+rsi*8+0x6b],0xd
   140051b86:	sar    DWORD PTR [rdi],cl
   140051b88:	jo     0x140051bc8
   140051b8a:	(bad)  [rdx-0x250d5845]
   140051b90:	adc    ebp,DWORD PTR [rdi-0x18924ea1]
   140051b96:	mov    cl,0xb6
   140051b98:	(bad)  
   140051b99:	add    al,0x81
   140051b9b:	lahf   
   140051b9c:	push   0xffffffff8f4b65f1
   140051ba1:	pop    rdx
   140051ba2:	std    
   140051ba3:	rex.WXB adc r10b,cl
   140051ba6:	add    BYTE PTR [rsi+0x159e206],ah
   140051bac:	mov    ch,0xdf
   140051bae:	mov    ebp,0x4fc4fb3d
   140051bb3:	outs   dx,BYTE PTR ds:[rsi]
   140051bb4:	jmp    0x140051c15
   140051bb6:	cmp    ebp,DWORD PTR [rdi+0x66]
   140051bb9:	std    
   140051bba:	ds add edx,edi
   140051bbd:	jmp    0x140051bfe
   140051bbf:	push   rsi
   140051bc0:	rex.RXB iret 
   140051bc2:	cdq    
   140051bc3:	mov    cl,0x74
   140051bc5:	mul    DWORD PTR [rcx-0x3a844b3f]
   140051bcb:	(bad)  
   140051bcc:	outs   dx,DWORD PTR ds:[esi]
   140051bce:	jp     0x140051bce
   140051bd0:	lods   eax,DWORD PTR ds:[rsi]
   140051bd1:	cmp    DWORD PTR [rbp-0x641faf48],edi
   140051bd7:	pop    rcx
   140051bd8:	jl     0x140051bc7
   140051bda:	fistp  QWORD PTR [rdi+0x600aa184]
   140051be0:	(bad)  
   140051be1:	and    BYTE PTR [rsi-0x1241cfeb],bl
   140051be7:	jo     0x140051c44
   140051be9:	xlat   BYTE PTR ds:[rbx]
   140051bea:	ror    BYTE PTR [rdi-0x72f2e8a9],cl
   140051bf0:	data16 sti 
   140051bf2:	neg    DWORD PTR [rbp-0x19012698]
   140051bf8:	sti    
   140051bf9:	sbb    eax,0xf9bd3c1f
   140051bfe:	repnz pop rsi
   140051c00:	test   BYTE PTR [rsi],bl
   140051c02:	(bad)  
   140051c03:	pop    rax
   140051c04:	loopne 0x140051c2d
   140051c06:	(bad)  
   140051c07:	not    DWORD PTR [rax+rsi*8+0x15]
   140051c0b:	or     al,BYTE PTR [rbp+0x2850a142]
   140051c11:	adc    al,0xa
   140051c13:	test   DWORD PTR [rdx-0x5f],eax
   140051c16:	push   rax
   140051c17:	sub    BYTE PTR [rdx+rcx*1],dl
   140051c1a:	test   DWORD PTR [rdx-0x5f],eax
   140051c1d:	push   rax
   140051c1e:	sub    BYTE PTR [rdx+rcx*1],dl
   140051c21:	test   DWORD PTR [rdx-0x5f],eax
   140051c24:	push   rax
   140051c25:	sub    BYTE PTR [rdx+rcx*1],dl
   140051c28:	test   DWORD PTR [rdx-0x5f],eax
   140051c2b:	push   rax
   140051c2c:	sub    BYTE PTR [rdx+rcx*1],dl
   140051c2f:	test   DWORD PTR [rdx-0x5f],eax
   140051c32:	push   rax
   140051c33:	sub    BYTE PTR [rsi-0x66f401e0],ah
   140051c39:	and    esi,DWORD PTR [rax+0x0]
   140051c3c:	xlat   BYTE PTR ds:[rbx]
   140051c3d:	lahf   
   140051c3e:	(bad)  
   140051c3f:	ret    0x0
   140051c42:	add    BYTE PTR [rax],al
   140051c44:	rex.WB
   140051c45:	rex.RB
   140051c46:	rex.WRX
   140051c47:	rex.R scas al,BYTE PTR es:[rdi]
   140051c49:	rex.X (bad) 
   140051c4b:	(bad)  
   140051c4c:	add    BYTE PTR [rax],al
   140051c4e:	add    BYTE PTR [rax],al
   140051c50:	sub    BYTE PTR [rax],al
   140051c52:	add    BYTE PTR [rax],al
   140051c54:	xor    BYTE PTR [rax],al
   140051c56:	add    BYTE PTR [rax],al
   140051c58:	(bad)  
   140051c59:	add    BYTE PTR [rax],al
   140051c5b:	add    BYTE PTR [rcx],al
   140051c5d:	add    BYTE PTR [rax],ah
   140051c5f:	add    BYTE PTR [rax],al
   140051c61:	add    BYTE PTR [rax],al
   140051c63:	add    BYTE PTR [rax+0x25],al
	...
   140051e45:	add    BYTE PTR [rax],al
   140051e47:	add    BYTE PTR [rsi+0x79],cl
   140051e4a:	jg     0x140051e91
   140051e4c:	rex.XB sahf 
   140051e4e:	rcl    BYTE PTR [rcx+0x3f666b53],0x59
   140051e55:	push   rsi
   140051e56:	rex.X or BYTE PTR [rax],al
	...
   140051f01:	add    BYTE PTR [rax],al
   140051f03:	add    BYTE PTR [rbx+riz*2+0x59],dl
   140051f07:	add    eax,0xbabc9b44
   140051f0c:	cmp    edi,DWORD PTR [rdx-0x45c4000c]
   140051f12:	hlt    
   140051f13:	inc    BYTE PTR [rsp+rbx*4-0x41]
   140051f17:	mov    esi,0x34455858
   140051f1c:	push   rsp
   140051f1d:	(bad)  
   140051f1e:	pop    rsp
   140051f1f:	add    eax,DWORD PTR [rax]
	...
   140051fc1:	add    BYTE PTR [rax],al
   140051fc3:	add    BYTE PTR [rbp+0x64],dl
   140051fc6:	pop    rdx
   140051fc7:	xor    al,0x3b
   140051fc9:	mov    ecx,0xba3bfaf2
   140051fce:	hlt    
   140051fcf:	(bad)  
   140051fd0:	cmp    edi,DWORD PTR [rdx-0x46c4010c]
   140051fd6:	hlt    
   140051fd7:	(bad)  
   140051fd8:	cmp    al,0xb1
   140051fda:	in     al,dx
   140051fdb:	repz push rcx
   140051fdd:	push   0x71
   140051fdf:	imul   edx,DWORD PTR [rdi+0x56],0x4d
   140051fe3:	(bad)  
	...
   140052080:	push   rbp
   140052081:	(bad)  
   140052082:	pop    rcx
   140052083:	add    ecx,DWORD PTR [rcx-0x77]
   140052086:	lahf   
   140052087:	pushf  
   140052088:	cmp    edi,DWORD PTR [rcx-0x46c4010c]
   14005208e:	hlt    
   14005208f:	(bad)  
   140052090:	cmp    esi,DWORD PTR [rdi-0x4bc4010c]
   140052096:	repz (bad) 
   140052098:	cmp    al,0xad
   14005209a:	icebp  
   14005209b:	(bad)  
   14005209c:	cmp    al,0xa1
   14005209e:	out    dx,eax
   14005209f:	std    
   1400520a0:	rex.WR outs dx,BYTE PTR ds:[rsi]
   1400520a2:	mov    WORD PTR [rdi+0x8515256],cs
	...
   140052140:	push   rdi
   140052141:	pop    rax
   140052142:	rex.WRXB (bad) 
   140052144:	cmp    eax,0x3cf1eaa9
   140052149:	mov    al,0xf2
   14005214b:	(bad)  
   14005214c:	cmp    al,0xaf
   14005214e:	repnz (bad) 
   140052150:	cmp    al,0xac
   140052152:	icebp  
   140052153:	(bad)  
   140052154:	cmp    al,0xa7
   140052156:	lock (bad) 
   140052158:	cmp    esp,DWORD PTR [rax-0x66c40011]
   14005215e:	out    dx,al
   14005215f:	(bad)  
   140052160:	cmp    edx,DWORD PTR [rcx+0x684affee]
   140052166:	xchg   ebp,eax
   140052167:	xchg   esi,eax
   140052168:	push   rsi
   140052169:	rex.WRB push r8
   14005216b:	or     DWORD PTR [rax],eax
	...
   1400521f9:	add    BYTE PTR [rax],al
   1400521fb:	add    BYTE PTR [rbx+0x51],dl
   1400521fe:	pop    rsi
   1400521ff:	add    DWORD PTR [rsi+0x65],ecx
   140052202:	jge    0x14005227f
   140052204:	cmp    ebx,DWORD PTR [rdx-0x61c40111]
   14005220a:	out    dx,eax
   14005220b:	(bad)  
   14005220c:	cmp    ebx,DWORD PTR [rsi-0x64c40011]
   140052212:	out    dx,eax
   140052213:	(bad)  
   140052214:	cmp    ebx,DWORD PTR [rax-0x6bc40112]
   14005221a:	out    dx,al
   14005221b:	(bad)  
   14005221c:	cmp    ecx,DWORD PTR [rdi-0x76c40113]
   140052222:	in     eax,dx
   140052223:	(bad)  
   140052224:	cmp    eax,DWORD PTR [rdx+0x5b4efeec]
   14005222a:	add    DWORD PTR [rsi+0x6574c55],0x0
	...
   1400522b9:	add    BYTE PTR [rax],al
   1400522bb:	add    BYTE PTR [rsi+0x41],dl
   1400522be:	rex or edi,DWORD PTR [rip+0x3bded470]        # 0x17be3f735
   1400522c5:	sub    esp,0xfffffffe
   1400522c8:	cmp    ecx,DWORD PTR [rax-0x75c40113]
   1400522ce:	in     eax,dx
   1400522cf:	(bad)  
   1400522d0:	cmp    ecx,DWORD PTR [rbx-0x77c40113]
   1400522d6:	in     al,dx
   1400522d7:	(bad)  
   1400522d8:	cmp    eax,DWORD PTR [rbp-0x7cc40014]
   1400522de:	in     al,dx
   1400522df:	(bad)  
   1400522e0:	cmp    eax,DWORD PTR [rcx+0x7e3cfeec]
   1400522e6:	jmp    0x1400522e7
   1400522e8:	cmp    al,0x79
   1400522ea:	(bad)  
   1400522eb:	cld    
   1400522ec:	push   rdx
   1400522ed:	push   rcx
   1400522ee:	imul   esp,DWORD PTR [rsi+0x54],0x35c4d
	...
   140052375:	add    BYTE PTR [rax],al
   140052377:	add    BYTE PTR [rbp+0x35],cl
   14005237a:	add    DWORD PTR [r12+r15*1+0x56],ecx
   14005237f:	pop    rbx
   140052380:	xor    bl,BYTE PTR [rax-0x2e]
   140052383:	push   QWORD PTR [rsi]
   140052385:	data16 (bad) 
   140052388:	cmp    BYTE PTR [rdi-0x1a],ch
   14005238b:	(bad)  
   14005238c:	cmp    DWORD PTR [rbx-0x17],esi
   14005238f:	(bad)  
   140052390:	cmp    dh,BYTE PTR [rsi-0x16]
   140052393:	(bad)  
   140052394:	cmp    dh,BYTE PTR [rdi-0x16]
   140052397:	(bad)  
   140052398:	cmp    dh,BYTE PTR [rsi-0x16]
   14005239b:	(bad)  
   14005239c:	cmp    dh,BYTE PTR [rdi-0x16]
   14005239f:	(bad)  
   1400523a0:	cmp    edi,DWORD PTR [rax-0x15]
   1400523a3:	(bad)  
   1400523a4:	cmp    edi,DWORD PTR [rax-0x15]
   1400523a7:	(bad)  
   1400523a8:	cmp    al,0x78
   1400523aa:	jmp    0x1400523ab
   1400523ac:	cmp    eax,0x56f7e877
   1400523b1:	rex.WXB push r10
   1400523b3:	rex.RB push r12
   1400523b5:	rex.WRXB pop r15
   1400523b7:	add    al,BYTE PTR [rax]
	...
   1400523ed:	add    BYTE PTR [rax],al
   1400523ef:	add    BYTE PTR [rcx+0x32],dl
   1400523f2:	(bad)  
   1400523f3:	add    dl,BYTE PTR [rbx+0x32]
   1400523f6:	cmp    dl,BYTE PTR [rsi]
	...
   140052438:	rex.WRXB (bad) 
   14005243a:	xor    BYTE PTR [rdx],cl
   14005243c:	(bad)  
   14005243d:	xor    ecx,DWORD PTR [rdx-0x4cc1d635]
   140052443:	jmp    FWORD PTR [rip+0x31fec04a]        # 0x17203e493
   140052449:	push   rsp
   14005244a:	int    0xfe
   14005244c:	xor    al,0x5c
   14005244e:	xlat   BYTE PTR ds:[rbx]
   14005244f:	push   QWORD PTR [rsi]
   140052451:	movsxd ebx,esi
   140052453:	(bad)  
   140052454:	(bad)  
   140052455:	jecxz  0x140052456
   140052458:	(bad)  
   140052459:	push   0xffffffffffffffe6
   14005245b:	(bad)  
   14005245c:	cmp    BYTE PTR [rbp-0x18],ch
   14005245f:	(bad)  
   140052460:	cmp    BYTE PTR [rax-0x17],dh
   140052463:	(bad)  
   140052464:	cmp    DWORD PTR [rdx+rbp*8-0x1],esi
   140052468:	cmp    dh,BYTE PTR [rdi-0x16]
   14005246b:	(bad)  
   14005246c:	cmp    edi,DWORD PTR [rdx-0x15]
   14005246f:	(bad)  
   140052470:	(bad)  
   140052471:	ja     0x14005244e
   140052473:	out    0x58,eax
   140052475:	rex.WB
   140052476:	rex.RXB sub al,0x54
   140052479:	push   rcx
   14005247a:	(bad)  
   14005247b:	add    DWORD PTR [rax],eax
	...
   1400524a9:	add    BYTE PTR [rax],al
   1400524ab:	add    BYTE PTR [rdi+0x32],cl
   1400524ae:	rex.RX add r10b,BYTE PTR [rbx+0x32]
   1400524b2:	cmp    eax,DWORD PTR [rax+0x3e]
   1400524b5:	xor    edi,DWORD PTR [rdi-0x73]
	...
   1400524f4:	rex.RXB sub DWORD PTR [r9],r14d
   1400524f7:	add    DWORD PTR [rdx+rbp*1+0x3e],eax
   1400524fb:	pop    rsi
   1400524fc:	(bad)  
   1400524fd:	es xchg esp,eax
   1400524ff:	(bad)  
   140052500:	and    ebp,DWORD PTR [rsi]
   140052502:	popf   
   140052503:	jmp    QWORD PTR [rsi]
   140052505:	ss test al,0xff
   140052508:	sub    bh,BYTE PTR [rdi]
   14005250a:	mov    ah,0xff
   14005250c:	sub    al,0x48
   14005250e:	mov    edi,0xc9502fff
   140052513:	push   QWORD PTR [rbx]
   140052515:	push   rdi
   140052516:	sar    edi,1
   140052518:	xor    eax,0x36ffda5e
   14005251d:	fs loope 0x14005251f
   140052520:	(bad)  
   140052521:	push   0xffffffffffffffe6
   140052523:	push   QWORD PTR [rdi]
   140052525:	outs   dx,BYTE PTR ds:[rsi]
   140052526:	call   0x12a795e2a
   14005252b:	(bad)  
   14005252c:	cmp    bh,BYTE PTR [rcx-0x15]
   14005252f:	(bad)  
   140052530:	cmp    edi,DWORD PTR [rbx+rbp*8-0x1]
   140052534:	rex.X je 0x140052501
   140052537:	rcr    BYTE PTR [rax+0x49],cl
   14005253a:	rex.RX sbb r8b,BYTE PTR [rax]
	...
   140052565:	add    BYTE PTR [rax],al
   140052567:	add    BYTE PTR [rcx+0x32],dl
   14005256a:	add    edx,DWORD PTR [r8+0x32]
   14005256e:	rex.RXB
   14005256f:	rex.WR (bad) 
   140052571:	xor    esi,DWORD PTR [rbp+0x633247ee]
   140052577:	add    BYTE PTR ds:[rax],al
	...
   1400525b2:	add    BYTE PTR [rax],al
   1400525b4:	push   rax
   1400525b5:	sub    ebx,DWORD PTR [rsi]
   1400525b7:	sbb    eax,0xe2761e1e
   1400525bc:	sbb    bl,BYTE PTR [rsi]
   1400525be:	mov    esi,edi
   1400525c0:	sbb    eax,0x21ff9023
   1400525c5:	sub    dl,BYTE PTR [rdi-0x5ecfdb02]
   1400525cb:	(bad)  
   1400525cc:	(bad)  
   1400525cd:	cmp    DWORD PTR [rdi+rdi*8-0x149bed6],ebp
   1400525d4:	sub    al,0x49
   1400525d6:	sar    dh,0x30
   1400525d9:	push   rcx
   1400525da:	retf   0x34ff
   1400525dd:	pop    rax
   1400525de:	sar    esi,cl
   1400525e0:	ss (bad) 
   1400525e2:	fdiv   st(6),st
   1400525e4:	(bad)  
   1400525e5:	addr32 in al,0xff
   1400525e8:	(bad)  
   1400525e9:	ins    DWORD PTR es:[rdi],dx
   1400525ea:	call   0x12a7a5eed
   1400525ef:	(bad)  
   1400525f0:	cmp    bh,BYTE PTR [rdx-0x15]
   1400525f3:	(bad)  
   1400525f4:	cmp    eax,0x45feeb7f
   1400525f9:	jno    0x1400525b2
   1400525fb:	rcr    BYTE PTR [rdx+0x47],0x3c
   1400525ff:	adc    al,BYTE PTR [rax]
	...
   140052621:	add    BYTE PTR [rax],al
   140052623:	add    BYTE PTR [rcx+0x32],dl
   140052626:	rex.XB add eax,0x6453334d
   14005262c:	sub    eax,0x34f7bd34
   140052631:	xor    esp,DWORD PTR [rax+0x6b3244ca]
   140052637:	add    eax,0x0
	...
   14005265c:	test   DWORD PTR [rdi+0x15],ecx
   14005265f:	add    bh,BYTE PTR [rbx+0x46]
   140052662:	clts   
   140052664:	or     DWORD PTR [rsi+0x15],0x2
   140052668:	add    BYTE PTR [rax],al
   14005266a:	add    BYTE PTR [rax],al
   14005266c:	(bad)  
   14005266d:	xor    eax,0x2b530113
   140052672:	(bad)  
   140052673:	adc    ah,BYTE PTR [rsi]
   140052675:	sbb    al,0x55
   140052677:	mov    edx,0xfe791914
   14005267c:	(bad)  
   14005267d:	sbb    edi,DWORD PTR [rdi-0x2]
   140052680:	sbb    DWORD PTR [rip+0x211cff86],ebx        # 0x16122260c
   140052686:	(bad)  
   140052687:	(bad)  
   140052688:	(bad)  
   140052689:	(bad)  
   14005268a:	xchg   ebp,eax
   14005268b:	(bad)  
   14005268c:	and    ebp,DWORD PTR [rsi]
   14005268e:	sahf   
   14005268f:	jmp    QWORD PTR [rsi]
   140052691:	xor    eax,0x3e29fea8
   140052696:	mov    dl,0xfe
   140052698:	sub    al,0x46
   14005269a:	mov    ebp,0xc74e2eff
   14005269f:	(bad)  
   1400526a0:	xor    edx,DWORD PTR [rsi-0x2e]
   1400526a3:	(bad)  
   1400526a4:	ss (bad) 
   1400526a6:	fdiv   st(7),st
   1400526a8:	(bad)  
   1400526a9:	push   0x6f38fee5
   1400526ae:	jmp    0x12b7d60b1
   1400526b3:	(bad)  
   1400526b4:	cmp    al,0x7e
   1400526b6:	jmp    0x1400526b6
   1400526b8:	cmp    eax,DWORD PTR [rbx+0x7245ffec]
   1400526be:	mov    dl,0xb8
   1400526c0:	pop    rcx
   1400526c1:	rex.W
   1400526c2:	ds (bad) 
   1400526c4:	push   rbp
   1400526c5:	push   rdx
   1400526c6:	push   rdi
   1400526c7:	add    DWORD PTR [rax],eax
	...
   1400526dd:	add    BYTE PTR [rax],al
   1400526df:	add    BYTE PTR [rbp+0x32],dl
   1400526e2:	or     BYTE PTR ss:[rax+0x33],cl
   1400526e6:	gs jns 0x140052716
   1400526e9:	xor    eax,0x332cfbc1
   1400526ee:	mov    edi,0x743241fe
   1400526f3:	push   0x0
	...
   140052718:	test   BYTE PTR [rdi+0x14],cl
   14005271b:	(bad)  
   14005271c:	(bad)  
   14005271d:	pop    rax
   14005271e:	sbb    eax,0x397cb65d
   140052723:	mov    edi,0x6b1e578c
   140052728:	js     0x14005276f
   14005272a:	or     eax,0xd477c33
   14005272f:	push   rax
   140052730:	cmp    eax,0x17c83b24
   140052735:	adc    bl,BYTE PTR [rbp-0x1]
   140052738:	adc    edx,DWORD PTR [rbp*2+0x771814fe]
   14005273f:	(bad)  
   140052740:	(bad)  
   140052741:	sbb    edi,DWORD PTR [rbp-0x1]
   140052744:	sbb    DWORD PTR [rip+0x201bfe84],ebx        # 0x1602125ce
   14005274a:	mov    esi,?
   14005274c:	(bad)  
   14005274d:	es xchg ebx,eax
   14005274f:	jmp    QWORD PTR [rbx]
   140052751:	sub    eax,0x3425fe9c
   140052756:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052757:	(bad)  
   140052758:	sub    DWORD PTR [rip+0x462bffb2],edi        # 0x186312710
   14005275e:	mov    ebp,0xc84e2ffe
   140052763:	(bad)  
   140052764:	xor    edx,DWORD PTR [rdi-0x2c]
   140052767:	push   QWORD PTR [rsi]
   140052769:	(bad)  
   14005276a:	(bad)  
   14005276c:	(bad)  
   14005276d:	imul   esp,edi,0xfffffffe
   140052770:	cmp    BYTE PTR [rdx+rbp*8-0x1],dh
   140052774:	cmp    al,0x7c
   140052776:	jmp    0x140052776
   140052778:	cmp    eax,DWORD PTR [rbx-0x77c40014]
   14005277e:	in     al,dx
   14005277f:	inc    BYTE PTR [rbx+0x7b]
   140052782:	ret    0x59c9
   140052785:	rex.WB (bad) 
   140052787:	sub    al,0x56
   140052789:	rex.WR
   14005278a:	rex.WX add rax,QWORD PTR [rax]
	...
   140052795:	add    BYTE PTR [rax],al
   140052797:	add    BYTE PTR [rsi+rsi*1+0x3b],dl
   14005279b:	add    bl,BYTE PTR [rax+0x33]
   14005279e:	sub    al,0x15
   1400527a0:	rex.X
   1400527a1:	sbb    DWORD PTR ss:[rbp-0x23bcad3],0xffc1342d
   1400527ac:	xor    esi,DWORD PTR cs:[rsi+0x653246ee]
   1400527b3:	adc    al,0x0
	...
   1400527cd:	add    BYTE PTR [rax],al
   1400527cf:	add    BYTE PTR [rbp+rdx*2+0x4a7f0117],cl
   1400527d6:	movhps QWORD PTR [rbx-0x3061d48f],xmm5
   1400527dd:	xchg   edx,eax
   1400527de:	rex.RXB dec r11b
   1400527e1:	nop
   1400527e2:	inc    r15
   1400527e5:	mov    cs,WORD PTR [rbp-0x1]
   1400527e8:	mov    bh,0x81
   1400527ea:	rex.R push QWORD PTR [rsi-0x7200d384]
   1400527f1:	pop    rsi
   1400527f2:	sub    bh,bh
   1400527f4:	sub    al,0x1c
   1400527f6:	rex.W call QWORD PTR [rdi]
   1400527f9:	adc    DWORD PTR [rax-0x1],ebx
   1400527fc:	adc    edx,DWORD PTR [rdx+rbp*2]
   1400527ff:	call   QWORD PTR [rbx]
   140052801:	(bad)  
   140052802:	jbe    0x140052803
   140052804:	(bad)  
   140052805:	sbb    edi,DWORD PTR [rdi+rdi*8+0x18]
   140052809:	sbb    eax,0x201bff84
   14005280e:	mov    edi,?
   140052810:	(bad)  
   140052811:	es xchg ebx,eax
   140052813:	jmp    QWORD PTR [rbx]
   140052815:	sub    eax,0x3526ff9c
   14005281a:	test   al,0xff
   14005281c:	sub    bh,BYTE PTR [rsi]
   14005281e:	mov    bl,0xff
   140052820:	sub    al,0x47
   140052822:	mov    edi,0xcc5131ff
   140052827:	push   QWORD PTR [rip+0x37ffd95c]        # 0x178050189
   14005282d:	push   0x7138ffe5
   140052832:	jmp    0x12b806436
   140052837:	(bad)  
   140052838:	cmp    al,0x83
   14005283a:	in     al,dx
   14005283b:	(bad)  
   14005283c:	cmp    ecx,DWORD PTR [rax-0x74c40013]
   140052842:	in     eax,dx
   140052843:	(bad)  
   140052844:	cmp    eax,0x4df1e488
   140052849:	pop    rdx
   14005284a:	jne    0x1400527d3
   14005284c:	push   rdi
   14005284d:	xor    ebp,DWORD PTR [r15]
   140052850:	pop    rax
   140052851:	cmp    eax,0x39571530
   140052856:	xor    BYTE PTR [rax],ah
   140052858:	rex.WRX cmp QWORD PTR [rcx+0x68],r10
   14005285c:	xor    eax,0x2eddb63d
   140052861:	cmp    cl,cl
   140052863:	jmp    FWORD PTR [rip+0x2dffc335]        # 0x16e04eb9e
   140052869:	xor    al,0xbf
   14005286b:	(bad)  
   14005286c:	cmp    al,0x32
   14005286e:	test   BYTE PTR [rdx+0x178323f],bl
	...
   14005288c:	mov    dl,BYTE PTR [rsi+rdx*1+0x4]
   140052890:	xchg   DWORD PTR [rcx+0x14],edx
   140052893:	ds (bad) 
   140052895:	mov    DWORD PTR [rcx],edi
   140052897:	(bad)  
   140052898:	rcl    BYTE PTR [rbp-0x6c2f01bf],cl
   14005289e:	rex.XB dec r14d
   1400528a1:	xchg   edx,eax
   1400528a2:	rex.W dec cl
   1400528a5:	(bad)  
   1400528a6:	rex.WXB inc r12
   1400528a9:	mov    WORD PTR [rbp-0x2],cs
   1400528ac:	mov    ecx,0xb0fe4c84
   1400528b1:	js     0x1400528e2
   1400528b3:	inc    BYTE PTR [rsi+0x27ff2b58]
   1400528b9:	sbb    BYTE PTR [rdi-0x2],al
   1400528bc:	(bad)  
   1400528bd:	adc    DWORD PTR [rsi-0x2],edx
   1400528c0:	adc    edx,DWORD PTR [rcx+rbp*2]
   1400528c3:	call   QWORD PTR [rbx]
   1400528c5:	(bad)  
   1400528c6:	jbe    0x1400528c6
   1400528c8:	(bad)  
   1400528c9:	sbb    edi,DWORD PTR [rbp-0x2]
   1400528cc:	sbb    DWORD PTR [rip+0x211cff85],ebx        # 0x161222857
   1400528d2:	(bad)  
   1400528d3:	(bad)  
   1400528d4:	(bad)  
   1400528d5:	(bad)  
   1400528d6:	xchg   ebp,eax
   1400528d7:	(bad)  
   1400528d8:	and    al,0x2e
   1400528da:	lahf   
   1400528db:	jmp    QWORD PTR [rdi]
   1400528dd:	(bad)  
   1400528de:	stos   DWORD PTR es:[rdi],eax
   1400528df:	(bad)  
   1400528e0:	sub    eax,DWORD PTR [rcx-0x49]
   1400528e3:	(bad)  
   1400528e4:	sub    eax,0x33ffc54c
   1400528e9:	push   rsi
   1400528ea:	sar    esi,cl
   1400528ec:	(bad)  
   1400528ed:	fs loope 0x1400528ee
   1400528f0:	(bad)  
   1400528f1:	outs   dx,BYTE PTR ds:[rsi]
   1400528f2:	jmp    0x12b7e63f6
   1400528f7:	(bad)  
   1400528f8:	cmp    al,0x82
   1400528fa:	in     al,dx
   1400528fb:	(bad)  
   1400528fc:	cmp    ecx,DWORD PTR [rax-0x74c40114]
   140052902:	in     eax,dx
   140052903:	(bad)  
   140052904:	cmp    ecx,DWORD PTR [rbx-0x79c40013]
   14005290a:	in     al,dx
   14005290b:	(bad)  
   14005290c:	cmp    bh,BYTE PTR [rbp-0x17]
   14005290f:	cld    
   140052910:	cmp    BYTE PTR [rbx+rbx*8-0x11],ch
   140052914:	xor    eax,0x32f8df59
   140052919:	rex.WB (bad) 
   14005291c:	(bad)  
   14005291d:	cmp    eax,0x362effce
   140052922:	(bad)  
   140052923:	(bad)  
   140052924:	sub    eax,0x2cfec134
   140052929:	xor    edi,DWORD PTR [rbp+0x663245fe]
   14005292f:	cmp    BYTE PTR [rax],al
	...
   140052945:	add    BYTE PTR [rax],al
   140052947:	add    BYTE PTR [rdx-0x60f4edb3],al
   14005294d:	push   0xffffffff98d37923
   140052952:	rex.XB not r12b
   140052955:	cdq    
   140052956:	rex.X (bad) 
   140052958:	rcl    DWORD PTR [rsi-0x6a2e01be],cl
   14005295e:	rex.X call rax
   140052961:	xchg   ebx,eax
   140052962:	rex.R dec spl
   140052965:	nop
   140052966:	inc    r14
   140052969:	lea    ecx,[rbp-0x2]
   14005296c:	ror    DWORD PTR [rdx-0x7a4601b2],0x50
   140052973:	(bad)  
   140052974:	lods   al,BYTE PTR ds:[rsi]
   140052975:	jbe    0x1400529a8
   140052977:	push   QWORD PTR [rsi+0x4e]
   14005297a:	(bad)  
   14005297b:	(bad)  
   14005297c:	(bad)  
   14005297d:	adc    al,0x47
   14005297f:	(bad)  
   140052980:	(bad)  
   140052981:	adc    DWORD PTR [rdi-0x1],edx
   140052984:	adc    edx,DWORD PTR [rbx+rbp*2]
   140052987:	(bad)  
   140052988:	adc    al,0x18
   14005298a:	ja     0x14005298a
   14005298c:	(bad)  
   14005298d:	sbb    edi,DWORD PTR [rsi-0x1]
   140052990:	sbb    DWORD PTR [rip+0x221cfe87],ebx        # 0x16222281d
   140052996:	(bad)  
   140052997:	(bad)  
   140052998:	and    DWORD PTR [rcx],ebp
   14005299a:	xchg   edi,eax
   14005299b:	jmp    QWORD PTR [rcx+rsi*1]
   14005299e:	movabs ds:0xbe462cfeb03b28fe,eax
   1400529a7:	push   QWORD PTR [rcx]
   1400529a9:	push   rdx
   1400529aa:	(bad)  
   1400529ab:	(bad)  
   1400529ac:	ss pop rdi
   1400529ae:	(bad)  
   1400529b0:	(bad)  
   1400529b1:	ins    BYTE PTR es:[rdi],dx
   1400529b2:	call   0x12b7d64b6
   1400529b7:	(bad)  
   1400529b8:	cmp    al,0x82
   1400529ba:	in     al,dx
   1400529bb:	(bad)  
   1400529bc:	cmp    ecx,DWORD PTR [rcx-0x74c40114]
   1400529c2:	in     eax,dx
   1400529c3:	(bad)  
   1400529c4:	cmp    ecx,DWORD PTR [rdx-0x7ac40013]
   1400529ca:	in     al,dx
   1400529cb:	(bad)  
   1400529cc:	cmp    DWORD PTR [rbx+rbp*8-0x2],edi
   1400529d0:	cmp    DWORD PTR [rbp-0x17],ebp
   1400529d3:	push   QWORD PTR [rip+0x31fee357]        # 0x172040d30
   1400529d9:	rex.RX xlat BYTE PTR ds:[rbx]
   1400529db:	(bad)  
   1400529dc:	cs cmp cl,bl
   1400529df:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e03ee1a
   1400529e5:	xor    al,0xc0
   1400529e7:	(bad)  
   1400529e8:	xor    dh,BYTE PTR [rdx]
   1400529ea:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400529eb:	rol    BYTE PTR [rbp+0x31],1
   1400529ee:	data16 add al,0x0
	...
   1400529fd:	add    BYTE PTR [rax],al
   1400529ff:	add    BYTE PTR [rbp-0x7dfde5a8],cl
   140052a05:	rex.WRB adc r12b,BYTE PTR [r15]
   140052a08:	mov    ebp,0xd8bc3785
   140052a0d:	sahf   
   140052a0e:	rex.W (bad) 
   140052a10:	xlat   BYTE PTR ds:[rbx]
   140052a11:	popf   
   140052a12:	rex.RX call rsi
   140052a15:	fwait
   140052a16:	rex.RB call r12
   140052a19:	cwde   
   140052a1a:	rex.X call rbx
   140052a1d:	xchg   esi,eax
   140052a1e:	call   r9
   140052a21:	xchg   esp,eax
   140052a22:	rex.XB dec r15d
   140052a25:	xchg   edx,eax
   140052a26:	rex.RXB dec r8d
   140052a29:	mov    cs,WORD PTR [rdi+rdi*8-0x3d]
   140052a2d:	mov    ecx,DWORD PTR [rbp-0x1]
   140052a30:	mov    esp,0xb6ff5087
   140052a35:	(bad)  
   140052a36:	push   rcx
   140052a37:	jmp    QWORD PTR [rdi+0x61ff2e72]
   140052a3d:	(bad)  
   140052a3e:	xor    eax,0x49111aff
   140052a43:	call   QWORD PTR [rdi]
   140052a45:	adc    DWORD PTR [rdx-0x1],ebx
   140052a48:	adc    edx,DWORD PTR [rsi+rbp*2]
   140052a4b:	call   QWORD PTR [rcx+rbx*1]
   140052a4e:	jns    0x140052a4f
   140052a50:	(bad)  
   140052a51:	sbb    al,0x80
   140052a53:	call   FWORD PTR [rdx]
   140052a55:	(bad)  
   140052a56:	mov    edi,edi
   140052a58:	sbb    eax,0x23ff9225
   140052a5d:	sub    eax,0x3626ff9c
   140052a62:	test   eax,0xb8412bff
   140052a67:	jmp    FWORD PTR [rdi]
   140052a69:	rex.WRX enter 0x35ff,0x5b
   140052a6e:	fcos   
   140052a70:	(bad)  
   140052a71:	push   0xffffffffffffffe7
   140052a73:	(bad)  
   140052a74:	cmp    DWORD PTR [rdi-0x16],esi
   140052a77:	(bad)  
   140052a78:	cmp    al,0x82
   140052a7a:	in     al,dx
   140052a7b:	(bad)  
   140052a7c:	cmp    ecx,DWORD PTR [rcx-0x74c40014]
   140052a82:	in     eax,dx
   140052a83:	(bad)  
   140052a84:	cmp    al,0x8a
   140052a86:	in     eax,dx
   140052a87:	(bad)  
   140052a88:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1585c601]
   140052a8f:	(bad)  
   140052a90:	cmp    DWORD PTR [rcx-0x18],ebp
   140052a93:	push   QWORD PTR [rdx+rdx*2]
   140052a96:	loope  0x140052a97
   140052a98:	xor    BYTE PTR [rcx-0x2e],al
   140052a9b:	jmp    FWORD PTR [rsi]
   140052a9d:	(bad)  
   140052a9e:	enter  0x2dff,0x34
   140052aa2:	ret    0x2cff
   140052aa5:	xor    edi,DWORD PTR [rsi+0x703242ff]
   140052aab:	jae    0x140052aad
	...
   140052ab9:	add    BYTE PTR [rax],al
   140052abb:	add    BYTE PTR [rax-0x6df8e7ac],cl
   140052ac1:	pop    rbp
   140052ac2:	(bad)  
   140052ac3:	pop    rbx
   140052ac4:	rcr    DWORD PTR [rax-0x602716b9],1
   140052aca:	rex.WB (bad) 
   140052acc:	fcomp  DWORD PTR [rsi-0x612701b7]
   140052ad2:	rex.W call rdi
   140052ad5:	popf   
   140052ad6:	rex.RX (bad) 
   140052ad8:	(bad)  
   140052ad9:	fwait
   140052ada:	rex.R (bad) 
   140052adc:	rcr    DWORD PTR [rax-0x6a2d00be],cl
   140052ae2:	rex.B (bad) 
   140052ae4:	rcl    BYTE PTR [rbx-0x6f3400bb],1
   140052aea:	rex.WX inc spl
   140052aed:	mov    WORD PTR [rbp-0x2],cs
   140052af0:	mov    ebp,0xb8fe4f88
   140052af5:	test   BYTE PTR [rcx-0x1],dl
   140052af8:	scas   eax,DWORD PTR es:[rdi]
   140052af9:	jle    0x140052b4c
   140052afb:	(bad)  
   140052afc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052afd:	outs   dx,DWORD PTR ds:[rsi]
   140052afe:	sub    esi,edi
   140052b00:	rex.XB sub edi,DWORD PTR [r14]
   140052b03:	call   FWORD PTR [rax]
   140052b05:	adc    BYTE PTR [rbx-0x2],cl
   140052b08:	(bad)  
   140052b09:	adc    bl,BYTE PTR [rdi-0x2]
   140052b0c:	adc    edx,DWORD PTR [rsi]
   140052b0e:	jb     0x140052b0f
   140052b10:	adc    eax,0x18fe7b1a
   140052b15:	sbb    eax,0x211cfe84
   140052b1a:	(bad)  
   140052b1b:	jmp    QWORD PTR [rax]
   140052b1d:	sub    BYTE PTR [rsi-0x5cceda02],dl
   140052b23:	(bad)  
   140052b24:	sub    DWORD PTR [rip+0x492dffb2],edi        # 0x189332adc
   140052b2a:	ret    
   140052b2b:	(bad)  
   140052b2c:	xor    al,0x58
   140052b2e:	(bad)  
   140052b2f:	(bad)  
   140052b30:	(bad)  
   140052b31:	push   0x7639ffe5
   140052b36:	(bad)  
   140052b37:	(bad)  
   140052b38:	cmp    al,0x82
   140052b3a:	in     al,dx
   140052b3b:	(bad)  
   140052b3c:	cmp    ecx,DWORD PTR [rcx-0x74c40113]
   140052b42:	in     eax,dx
   140052b43:	(bad)  
   140052b44:	cmp    al,0x8a
   140052b46:	in     eax,dx
   140052b47:	(bad)  
   140052b48:	cmp    al,BYTE PTR [rdx+0x7739feec]
   140052b4e:	(bad)  
   140052b4f:	(bad)  
   140052b50:	cmp    BYTE PTR [rbx-0x19],ah
   140052b53:	push   QWORD PTR [rbx]
   140052b55:	rex.WR (bad) 
   140052b58:	(bad)  
   140052b59:	cmp    eax,0x362efece
   140052b5e:	(bad)  
   140052b5f:	jmp    FWORD PTR [rip+0x2cfec134]        # 0x16d03ec99
   140052b65:	xor    edi,DWORD PTR [rdx+0x633146f5]
   140052b6b:	sbb    eax,0x0
	...
   140052b78:	xchg   DWORD PTR [rbx+0x18],edx
   140052b7b:	adc    eax,0x9f347bb1
   140052b80:	fldenv [rcx-0x5e2603b2]
   140052b86:	rex.WRX (bad) 
   140052b88:	fsub   DWORD PTR [rax-0x602701b3]
   140052b8e:	rex.WXB (bad) 
   140052b90:	fcomp  DWORD PTR [rsi-0x612700b7]
   140052b96:	rex.W (bad) 
   140052b98:	xlat   BYTE PTR ds:[rbx]
   140052b99:	popf   
   140052b9a:	rex.RX (bad) 
   140052b9c:	(bad)  
   140052b9d:	(bad)  
   140052b9e:	rex.XB call r11
   140052ba1:	xchg   esi,eax
   140052ba2:	rex.B (bad) 
   140052ba4:	rcl    DWORD PTR [rbx+rax*2+0x4991cdff],1
   140052bab:	inc    ch
   140052bad:	lea    ecx,[rbp-0x2]
   140052bb0:	mov    esi,0xb8fe4f88
   140052bb5:	test   BYTE PTR [rcx-0x1],dl
   140052bb8:	mov    cl,0x80
   140052bba:	push   rbx
   140052bbb:	(bad)  
   140052bbc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052bbd:	jp     0x140052c10
   140052bbf:	(bad)  
   140052bc0:	xchg   esp,eax
   140052bc1:	movsxd ebp,DWORD PTR [rax]
   140052bc3:	jmp    FWORD PTR [rcx]
   140052bc5:	sbb    al,BYTE PTR [rbp-0x2]
   140052bc8:	sbb    DWORD PTR [rax],edx
   140052bca:	rex.WRXB (bad) 
   140052bcc:	adc    eax,0x13ff6513
   140052bd1:	(bad)  
   140052bd2:	jbe    0x140052bd2
   140052bd4:	(bad)  
   140052bd5:	sbb    edi,DWORD PTR [rsi-0x2]
   140052bd8:	sbb    bl,BYTE PTR [rsi]
   140052bda:	mov    bh,bh
   140052bdc:	sbb    eax,0x23fe9124
   140052be1:	sub    eax,0x3827fe9c
   140052be6:	lods   al,BYTE PTR ds:[rsi]
   140052be7:	jmp    FWORD PTR [rsi+rax*2]
   140052bea:	mov    ebp,0xd15432fe
   140052bef:	(bad)  
   140052bf0:	(bad)  
   140052bf1:	data16 jrcxz 0x140052bf3
   140052bf4:	cmp    DWORD PTR [rbp-0x16],esi
   140052bf7:	(bad)  
   140052bf8:	cmp    al,0x82
   140052bfa:	in     al,dx
   140052bfb:	(bad)  
   140052bfc:	cmp    al,0x8a
   140052bfe:	in     eax,dx
   140052bff:	(bad)  
   140052c00:	cmp    al,0x8e
   140052c02:	out    dx,al
   140052c03:	(bad)  
   140052c04:	cmp    al,0x8a
   140052c06:	in     eax,dx
   140052c07:	(bad)  
   140052c08:	cmp    al,BYTE PTR [rax+0x7439feeb]
   140052c0e:	(bad)  
   140052c0f:	(bad)  
   140052c10:	ss pop rbp
   140052c12:	in     eax,0xff
   140052c14:	xor    al,BYTE PTR [rdi-0x27]
   140052c17:	(bad)  
   140052c18:	cs cmp cl,bl
   140052c1b:	(bad)  
   140052c1c:	sub    eax,0x2dffc335
   140052c21:	xor    al,0xbf
   140052c23:	(bad)  
   140052c24:	cmp    BYTE PTR [rdx],dh
   140052c26:	xchg   ecx,eax
   140052c27:	mov    dl,0x42
   140052c29:	xor    ch,BYTE PTR [rdi+0x2]
	...
   140052c38:	mov    ebx,0xd88c3d84
   140052c3d:	movabs al,ds:0xa1d9ff52a1d9f852
   140052c46:	push   rcx
   140052c47:	(bad)  
   140052c48:	fisub  DWORD PTR [rdx-0x5e2600b1]
   140052c4e:	rex.WRX (bad) 
   140052c50:	fcomp  DWORD PTR [rdi-0x612700b4]
   140052c56:	rex.WB call r15
   140052c59:	sahf   
   140052c5a:	rex.W call rsi
   140052c5d:	pushf  
   140052c5e:	rex.RB call r11
   140052c61:	cwde   
   140052c62:	rex.X call rdx
   140052c65:	xchg   ebp,eax
   140052c66:	rex.X dec edi
   140052c69:	xchg   edx,eax
   140052c6a:	rex.RXB inc r14d
   140052c6d:	lea    ecx,[rdi+rdi*8-0x41]
   140052c71:	mov    DWORD PTR [rsi-0x1],ecx
   140052c74:	mov    eax,0xb1ff5184
   140052c79:	adc    BYTE PTR [rbx-0x1],0xa9
   140052c7d:	jl     0x140052cd5
   140052c7f:	call   FWORD PTR [rbp+0x76ff4771]
   140052c85:	rex.WRX
   140052c86:	call   FWORD PTR cs:[rdx+rdx*1]
   140052c8a:	rex.RXB call FWORD PTR [r8]
   140052c8d:	adc    DWORD PTR [rsi-0x1],edx
   140052c90:	adc    edx,DWORD PTR [rbp*2+0x791915ff]
   140052c97:	call   FWORD PTR [rax]
   140052c99:	sbb    al,0x82
   140052c9b:	call   FWORD PTR [rcx+riz*1]
   140052c9e:	(bad)  
   140052c9f:	jmp    QWORD PTR [rcx]
   140052ca1:	sub    DWORD PTR [rdi-0x58cbd901],edx
   140052ca7:	jmp    FWORD PTR [rbx]
   140052ca9:	rex.X mov ecx,0xcd5131ff
   140052caf:	push   QWORD PTR [rdi]
   140052cb1:	fs loop 0x140052cb3
   140052cb4:	cmp    DWORD PTR [rbp-0x16],esi
   140052cb7:	(bad)  
   140052cb8:	cmp    al,0x83
   140052cba:	in     al,dx
   140052cbb:	(bad)  
   140052cbc:	cmp    al,0x8b
   140052cbe:	in     eax,dx
   140052cbf:	(bad)  
   140052cc0:	cmp    ecx,DWORD PTR [rdi-0x75c30012]
   140052cc6:	in     eax,dx
   140052cc7:	(bad)  
   140052cc8:	cmp    DWORD PTR [rdi-0x15],edi
   140052ccb:	(bad)  
   140052ccc:	cmp    DWORD PTR [rdi-0x17],ebp
   140052ccf:	push   QWORD PTR [rip+0x31ffe357]        # 0x17205102c
   140052cd5:	rex.X (bad) 
   140052cd7:	jmp    FWORD PTR [rsi]
   140052cd9:	cmp    al,cl
   140052cdb:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d04ef16
   140052ce1:	xor    edi,DWORD PTR [rsi+0x6c3143fe]
   140052ce7:	push   rdi
	...
   140052cf8:	mov    dh,0x80
   140052cfa:	cmp    al,BYTE PTR [rcx]
   140052cfc:	mov    cl,0x7b
   140052cfe:	(bad)  
   140052cff:	and    eax,0x854085bc
   140052d04:	rcr    BYTE PTR [rdx-0x5e261cb0],cl
   140052d0a:	push   rbx
   140052d0b:	(bad)  
   140052d0c:	fisub  DWORD PTR [rcx-0x5e2601b0]
   140052d12:	rex.WRX (bad) 
   140052d14:	fcomp  DWORD PTR [rdi-0x612701b5]
   140052d1a:	rex.WB (bad) 
   140052d1c:	xlat   BYTE PTR ds:[rbx]
   140052d1d:	popf   
   140052d1e:	rex.RXB call r12
   140052d21:	cdq    
   140052d22:	rex.XB (bad) 
   140052d24:	rcl    BYTE PTR [rsi-0x6d2f00bf],cl
   140052d2a:	rex.RX inc dil
   140052d2d:	mov    cs,WORD PTR [rsi+rdi*8-0x41]
   140052d31:	mov    DWORD PTR [rsi-0x2],ecx
   140052d34:	mov    eax,0xb0ff5184
   140052d39:	adc    BYTE PTR [rsi+rdi*8-0x58],0x7b
   140052d3e:	push   rsi
   140052d3f:	(bad)  
   140052d40:	sahf   
   140052d41:	jne    0x140052d99
   140052d43:	dec    DWORD PTR [rax+0x49fe305c]
   140052d49:	(bad)  
   140052d4a:	cmp    al,0xfe
   140052d4c:	sbb    BYTE PTR [rax],dl
   140052d4e:	rex.WX call QWORD PTR [rsi]
   140052d51:	adc    bl,BYTE PTR [rdi-0x2]
   140052d54:	adc    edx,DWORD PTR [rsi]
   140052d56:	jae    0x140052d56
   140052d58:	(bad)  
   140052d59:	sbb    edi,DWORD PTR [rbp-0x1]
   140052d5c:	sbb    bl,BYTE PTR [rsi]
   140052d5e:	mov    dh,bh
   140052d60:	(bad)  
   140052d61:	es xchg ebx,eax
   140052d63:	(bad)  
   140052d64:	and    al,0x30
   140052d66:	movabs eax,ds:0xc94e2ffeb43e2aff
   140052d6f:	(bad)  
   140052d70:	ss (bad) 
   140052d72:	loopne 0x140052d73
   140052d74:	cmp    DWORD PTR [rbp-0x16],esi
   140052d77:	(bad)  
   140052d78:	cmp    al,0x84
   140052d7a:	in     al,dx
   140052d7b:	(bad)  
   140052d7c:	cmp    ecx,DWORD PTR [rbp-0x6fc40112]
   140052d82:	out    dx,al
   140052d83:	(bad)  
   140052d84:	cmp    ecx,DWORD PTR [rdx+0x7d39ffed]
   140052d8a:	jmp    0x140052d8a
   140052d8c:	cmp    DWORD PTR [rbx-0x18],ebp
   140052d8f:	(bad)  
   140052d90:	xor    al,0x51
   140052d92:	loopne 0x140052d93
   140052d94:	(bad)  
   140052d95:	ds iret 
   140052d97:	(bad)  
   140052d98:	cs ss (bad) 
   140052d9b:	(bad)  
   140052d9c:	sub    eax,0x2effc134
   140052da1:	xor    dh,BYTE PTR [rdx+rbp*8+0x10623146]
	...
   140052dc4:	mov    bl,0x7d
   140052dc6:	cmp    DWORD PTR [rbx],ecx
   140052dc8:	mov    eax,0xc7553d82
   140052dcd:	nop
   140052dce:	rex.RXB mov r9d,0xfc50a1d9
   140052dd4:	fldenv [rcx-0x602701b2]
   140052dda:	rex.WX (bad) 
   140052ddc:	xlat   BYTE PTR ds:[rbx]
   140052ddd:	sahf   
   140052dde:	rex.W call rsi
   140052de1:	fwait
   140052de2:	rex.R (bad) 
   140052de4:	rcl    DWORD PTR [rdi-0x6c2f00be],cl
   140052dea:	rex.RB dec r8b
   140052ded:	mov    cs,WORD PTR [rbx-0x2]
   140052df0:	mov    edi,0xb7fe4e89
   140052df5:	test   BYTE PTR [rcx-0x1],dl
   140052df8:	scas   eax,DWORD PTR es:[rdi]
   140052df9:	jg     0x140052e4f
   140052dfb:	(bad)  
   140052dfc:	sahf   
   140052dfd:	jae    0x140052e51
   140052dff:	dec    BYTE PTR [rbp+0x33]
   140052e02:	rex.RXB jmp QWORD PTR [r14+r10*1]
   140052e06:	rex.R inc BYTE PTR [rbp+0x25fe2758]
   140052e0d:	(bad)  
   140052e0e:	rex.RX call FWORD PTR [rax]
   140052e11:	adc    DWORD PTR [rax-0x2],edx
   140052e14:	adc    al,0x14
   140052e16:	push   0xfffffffffffffffe
   140052e18:	adc    al,0x19
   140052e1a:	jns    0x140052e1b
   140052e1c:	sbb    BYTE PTR [rip+0x221cfe83],bl        # 0x162222ca5
   140052e22:	(bad)  
   140052e23:	(bad)  
   140052e24:	and    ebp,DWORD PTR [rsp+rbx*4]
   140052e27:	jmp    FWORD PTR [rax]
   140052e29:	cmp    ch,BYTE PTR [rdi-0x3ab4d102]
   140052e2f:	(bad)  
   140052e30:	ss (bad) 
   140052e32:	fdivp  st(7),st
   140052e34:	cmp    DWORD PTR [rbp-0x16],esi
   140052e37:	(bad)  
   140052e38:	cmp    al,0x85
   140052e3a:	in     al,dx
   140052e3b:	(bad)  
   140052e3c:	cmp    al,0x8f
   140052e3e:	out    dx,al
   140052e3f:	(bad)  
   140052e40:	cmp    al,0x91
   140052e42:	out    dx,al
   140052e43:	(bad)  
   140052e44:	cmp    ecx,DWORD PTR [rdx+0x7c39ffed]
   140052e4a:	(bad)  
   140052e4b:	(bad)  
   140052e4c:	cmp    BYTE PTR [rsi-0x19],ah
   140052e4f:	(bad)  
   140052e50:	xor    ecx,DWORD PTR [rbx-0x24]
   140052e53:	jmp    FWORD PTR [rdi]
   140052e55:	cmp    ecx,esp
   140052e57:	(bad)  
   140052e58:	sub    eax,0x2cfec435
   140052e5d:	xor    al,0xbf
   140052e5f:	(bad)  
   140052e60:	cmp    al,0x32
   140052e62:	(bad)  
   140052e63:	popf   
   140052e64:	rex xor DWORD PTR [rbp+0x1],esi
	...
   140052e8c:	mov    eax,0xb4013b82
   140052e91:	jge    0x140052ec9
   140052e93:	es mov ebp,0xd2883b86
   140052e99:	cdq    
   140052e9a:	rex.W in al,0xd8
   140052e9d:	sahf   
   140052e9e:	rex.W (bad) 
   140052ea0:	(bad)  
   140052ea1:	pushf  
   140052ea2:	rex.RB call r11
   140052ea5:	cwde   
   140052ea6:	rex.X call rax
   140052ea9:	xchg   ebx,eax
   140052eaa:	rex.RB dec r8d
   140052ead:	mov    cs,WORD PTR [rbx-0x1]
   140052eb0:	mov    edi,0xb7ff4f88
   140052eb5:	adc    DWORD PTR [rcx-0x1],0xffffff97
   140052eb9:	imul   ecx,DWORD PTR [rbx-0x1],0x3f
   140052ebd:	sub    BYTE PTR [rbp-0x1],al
   140052ec0:	and    BYTE PTR [rdx],dl
   140052ec2:	rex.RX call FWORD PTR [rdx]
   140052ec5:	adc    BYTE PTR [rdi-0x1],al
   140052ec8:	rex.XB sub al,0x3b
   140052ecb:	jmp    FWORD PTR [rax+0x44]
   140052ece:	xor    edi,edi
   140052ed0:	sbb    DWORD PTR [rax],edx
   140052ed2:	rex.W call QWORD PTR [rsi]
   140052ed5:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   140052ed9:	(bad)  
   140052eda:	jae    0x140052edb
   140052edc:	(bad)  
   140052edd:	sbb    edi,DWORD PTR [rsi-0x1]
   140052ee0:	sbb    ebx,DWORD PTR [rdi]
   140052ee2:	mov    edi,edi
   140052ee4:	and    BYTE PTR [rcx],ch
   140052ee6:	xchg   edi,eax
   140052ee7:	jmp    QWORD PTR [rsi]
   140052ee9:	ss test eax,0xc1482dff
   140052eef:	push   QWORD PTR [rip+0x39ffdc5e]        # 0x17a050b53
   140052ef5:	jne    0x140052ee1
   140052ef7:	(bad)  
   140052ef8:	cmp    al,0x87
   140052efa:	in     eax,dx
   140052efb:	(bad)  
   140052efc:	cmp    edx,DWORD PTR [rdx-0x6cc40011]
   140052f02:	out    dx,eax
   140052f03:	(bad)  
   140052f04:	cmp    ecx,DWORD PTR [rcx+0x7a39ffed]
   140052f0a:	(bad)  
   140052f0b:	push   QWORD PTR [rdi]
   140052f0d:	(bad)  
   140052f0e:	out    0xff,al
   140052f10:	xor    al,BYTE PTR [rdi-0x28]
   140052f13:	jmp    FWORD PTR [rsi]
   140052f15:	cmp    cl,cl
   140052f17:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d04f152
   140052f1d:	xor    edi,DWORD PTR [rsi+0x683244ff]
   140052f23:	rex.X add BYTE PTR [rax],al
	...
   140052f56:	add    BYTE PTR [rax],al
   140052f58:	mov    dl,0x7c
   140052f5a:	xor    cl,BYTE PTR [rbx]
   140052f5c:	mov    ah,0x7d
   140052f5e:	xor    dl,BYTE PTR [rdi-0x3b]
   140052f61:	mov    WORD PTR [rbx],?
   140052f63:	mov    esp,0xfa4297d3
   140052f68:	rcl    BYTE PTR [rbx-0x713701bc],1
   140052f6e:	rex.WXB (bad) 
   140052f70:	mov    esi,0x8dfe4c88
   140052f75:	(bad)  
   140052f76:	rex.R (bad) 
   140052f78:	(bad)  
   140052f79:	(bad)  
   140052f7a:	rex.XB (bad) 
   140052f7c:	and    al,0x14
   140052f7e:	rex.RX (bad) 
   140052f80:	sbb    eax,0x1cff4611
   140052f85:	adc    DWORD PTR [rsi-0x2],eax
   140052f88:	sbb    edx,DWORD PTR [rax]
   140052f8a:	rex.RX (bad) 
   140052f8c:	jns    0x140052fde
   140052f8e:	sub    edi,edi
   140052f90:	xor    BYTE PTR [rsi],bl
   140052f92:	rex.XB (bad) 
   140052f94:	sbb    BYTE PTR [rax],dl
   140052f96:	rex.WRX (bad) 
   140052f98:	adc    al,0x14
   140052f9a:	push   0xffffffffffffffff
   140052f9c:	adc    eax,0x19fe7a19
   140052fa1:	sbb    eax,0x251efe86
   140052fa6:	xchg   ebx,eax
   140052fa7:	jmp    QWORD PTR [rip+0x2cfea432]        # 0x16d03d3df
   140052fad:	rex.RB mov r12d,0xda5d35fe
   140052fb3:	(bad)  
   140052fb4:	cmp    DWORD PTR [rbp-0x16],esi
   140052fb7:	(bad)  
   140052fb8:	cmp    ecx,DWORD PTR [rcx-0x6ac40013]
   140052fbe:	out    dx,eax
   140052fbf:	(bad)  
   140052fc0:	cmp    edx,DWORD PTR [rbp-0x76c40111]
   140052fc6:	in     eax,dx
   140052fc7:	(bad)  
   140052fc8:	cmp    DWORD PTR [rdi-0x16],esi
   140052fcb:	(bad)  
   140052fcc:	ss pop rdx
   140052fce:	in     al,0xfe
   140052fd0:	xor    BYTE PTR [rdx-0x2d],al
   140052fd3:	jmp    FWORD PTR [rsi]
   140052fd5:	(bad)  
   140052fd6:	(bad)  
   140052fd7:	(bad)  
   140052fd8:	sub    eax,0x30fec134
   140052fdd:	xor    ebp,DWORD PTR [rbp+0x613247df]
   140052fe3:	(bad)  
	...
   140053020:	mov    dl,0x7a
   140053022:	(bad)  
   140053023:	add    ch,BYTE PTR [rsi-0x4bd4d38b]
   140053029:	jnp    0x14005305f
   14005302b:	nop
   14005302c:	ret    
   14005302d:	mov    DWORD PTR [rcx-0x14],eax
   140053030:	mov    WORD PTR [rcx+0x3d],fs
   140053033:	inc    BYTE PTR [rbp+0x2c]
   140053036:	rex.X jmp FWORD PTR [rsi]
   140053039:	sbb    al,BYTE PTR [rbp-0x2]
   14005303c:	sub    DWORD PTR [rdi],edx
   14005303e:	rex.RX (bad) 
   140053040:	(bad)  
   140053041:	(bad)  
   140053042:	rex.RX jmp QWORD PTR [rsi]
   140053045:	adc    eax,0x1525fe46
   14005304a:	rex.RX (bad) 
   14005304c:	cmp    BYTE PTR [rdx],ah
   14005304e:	rex push QWORD PTR [rdi+0x4e]
   140053052:	(bad)  
   140053053:	(bad)  
   140053054:	sbb    dl,BYTE PTR [rcx]
   140053056:	rex.RXB (bad) 
   140053058:	(bad)  
   140053059:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   14005305d:	(bad)  
   14005305e:	je     0x14005305e
   140053060:	(bad)  
   140053061:	sbb    al,0x80
   140053063:	(bad)  
   140053064:	sbb    al,0x22
   140053066:	mov    ?,edi
   140053068:	and    al,0x2e
   14005306a:	lahf   
   14005306b:	(bad)  
   14005306c:	sub    al,BYTE PTR [rdx-0x48]
   14005306f:	(bad)  
   140053070:	xor    al,0x5b
   140053072:	xlat   BYTE PTR ds:[rbx]
   140053073:	(bad)  
   140053074:	cmp    DWORD PTR [rsi-0x16],esi
   140053077:	(bad)  
   140053078:	cmp    al,0x8c
   14005307a:	out    dx,al
   14005307b:	(bad)  
   14005307c:	cmp    bl,BYTE PTR [rcx-0x67c50110]
   140053082:	out    dx,eax
   140053083:	(bad)  
   140053084:	cmp    ecx,DWORD PTR [rax+0x7239ffed]
   14005308a:	jmp    0x12159658d
   14005308f:	(bad)  
   140053090:	(bad)  
   140053091:	ds iret 
   140053093:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e03f4ce
   140053099:	xor    al,0xbf
   14005309b:	inc    BYTE PTR [rax+0x32]
   14005309e:	jns    0x140053029
   1400530a0:	xor    sil,BYTE PTR [rdi+0x1]
	...
   1400530ec:	test   DWORD PTR [rbx+riz*1+0x16],edx
   1400530f0:	push   rdi
   1400530f1:	(bad)  
   1400530f2:	cmp    bh,dl
   1400530f4:	rex.RXB sub eax,0x2b44ff41
   1400530fa:	rex.X inc DWORD PTR [rax+0x28]
   1400530fe:	rex.XB (bad) 
   140053100:	cmp    esp,DWORD PTR [rbx+rax*2]
   140053103:	push   QWORD PTR [rsi]
   140053105:	and    DWORD PTR [rdi+rdi*8+0x33],eax
   140053109:	(bad)  
   14005310a:	rex.R push QWORD PTR [rax]
   14005310d:	sbb    al,0x45
   14005310f:	push   QWORD PTR [rsp+rcx*2+0x30]
   140053113:	(bad)  
   140053114:	cmp    ah,BYTE PTR [rip+0x1018ff40]        # 0x1501e305a
   14005311a:	rex.WRX call QWORD PTR [rsp+r10*1]
   14005311e:	imul   edi,edi,0x15
   140053121:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1a]
   140053125:	(bad)  
   140053126:	mov    bh,bh
   140053128:	and    ch,BYTE PTR [rbx]
   14005312a:	(bad)  
   14005312b:	jmp    FWORD PTR [rcx]
   14005312d:	cmp    eax,0x5833ffb3
   140053132:	(bad)  
   140053133:	(bad)  
   140053134:	cmp    DWORD PTR [rdi-0x16],esi
   140053137:	(bad)  
   140053138:	cmp    ecx,DWORD PTR [rdi-0x63c50012]
   14005313e:	lock (bad) 
   140053140:	cmp    bl,BYTE PTR [rdx-0x77c40010]
   140053146:	in     eax,dx
   140053147:	(bad)  
   140053148:	cmp    DWORD PTR [rdi-0x17],ebp
   14005314b:	push   QWORD PTR [rbx]
   14005314d:	rex.WRX fdivp st(7),st
   140053150:	cs cmp cl,bl
   140053153:	jmp    FWORD PTR [rip+0x2dffc235]        # 0x16e04f38e
   140053159:	xor    edi,DWORD PTR [rsi+0x613247fc]
   14005315f:	xor    BYTE PTR [rax],al
	...
   1400531ad:	add    BYTE PTR [rax],al
   1400531af:	add    BYTE PTR [rsi+0x3c],ah
   1400531b2:	(bad)  
   1400531b3:	xor    DWORD PTR [rbx+0x52],edi
   1400531b6:	sub    al,0xf1
   1400531b8:	jne    0x140053209
   1400531ba:	xor    dh,bh
   1400531bc:	push   0x47
   1400531be:	ss (bad) 
   1400531c0:	pop    rbx
   1400531c1:	cmp    al,0x3c
   1400531c3:	dec    DWORD PTR [rdi+0x33]
   1400531c6:	(bad)  
   1400531c7:	inc    BYTE PTR [rsi+0x2c]
   1400531ca:	inc    BYTE PTR [r8+0x27]
   1400531ce:	rex.X inc DWORD PTR [rbp+0x2b]
   1400531d2:	rex inc BYTE PTR [rax+0x1afe2f55]
   1400531d9:	adc    DWORD PTR [rax-0x1],ecx
   1400531dc:	(bad)  
   1400531dd:	adc    bl,BYTE PTR [rsi-0x2]
   1400531e0:	adc    al,0x18
   1400531e2:	ja     0x1400531e2
   1400531e4:	sbb    DWORD PTR [rip+0x271fff85],ebx        # 0x16725316f
   1400531ea:	xchg   ebp,eax
   1400531eb:	(bad)  
   1400531ec:	sub    BYTE PTR [rcx],bh
   1400531ee:	scas   al,BYTE PTR es:[rdi]
   1400531ef:	(bad)  
   1400531f0:	xor    dl,BYTE PTR [rsi-0x2e]
   1400531f3:	(bad)  
   1400531f4:	cmp    DWORD PTR [rdi-0x16],esi
   1400531f7:	(bad)  
   1400531f8:	cmp    edx,DWORD PTR [rdx-0x5dc50011]
   1400531fe:	icebp  
   1400531ff:	(bad)  
   140053200:	cmp    bl,BYTE PTR [rax+rsi*8-0x1379c402]
   140053207:	(bad)  
   140053208:	cmp    BYTE PTR [rdx-0x18],ch
   14005320b:	(bad)  
   14005320c:	xor    cl,BYTE PTR [rax-0x27]
   14005320f:	(bad)  
   140053210:	cs cmp al,cl
   140053213:	jmp    FWORD PTR [rip+0x34fec134]        # 0x17503f34d
   140053219:	xor    esp,DWORD PTR [rdx+0x6b3244cd]
   14005321f:	add    eax,0x0
	...
   140053274:	(bad)  
   140053275:	pop    rax
   140053276:	adc    edx,DWORD PTR [rbx-0x45]
   140053279:	jle    0x14005329c
   14005327b:	cli    
   14005327c:	stos   DWORD PTR es:[rdi],eax
   14005327d:	jb     0x14005329b
   14005327f:	(bad)  
   140053280:	xchg   edx,eax
   140053281:	(bad)  {k2}
   140053286:	cs (bad) 
   140053288:	fs rex.XB cmp r14b,dil
   14005328c:	push   rbp
   14005328d:	(bad)  
   14005328e:	dec    DWORD PTR ds:[rbp+0x32]
   140053292:	inc    BYTE PTR [r8+0x3dfe3355]
   140053299:	(bad)  
   14005329a:	(bad)  
   14005329b:	call   QWORD PTR [rdi]
   14005329d:	adc    DWORD PTR [rax-0x2],edx
   1400532a0:	adc    edx,DWORD PTR [rip+0x1b17fe6f]        # 0x15b1d3115
   1400532a6:	cmp    bh,0x1d
   1400532a9:	and    al,0x90
   1400532ab:	(bad)  
   1400532ac:	es xor eax,0x5331fea8
   1400532b2:	(bad)  
   1400532b3:	(bad)  
   1400532b4:	cmp    bh,BYTE PTR [rcx-0x16]
   1400532b7:	(bad)  
   1400532b8:	cmp    edx,DWORD PTR [rdi-0x55c40011]
   1400532be:	repnz (bad) 
   1400532c0:	cmp    ebx,DWORD PTR [rdi-0x7bc40110]
   1400532c6:	in     al,dx
   1400532c7:	push   QWORD PTR [rdi]
   1400532c9:	fs out 0xfe,eax
   1400532cc:	xor    BYTE PTR [rbx-0x2c],al
   1400532cf:	(bad)  
   1400532d0:	cs ss (bad) 
   1400532d3:	jmp    FWORD PTR [rip+0x41fec034]        # 0x18203f30d
   1400532d9:	xor    dh,BYTE PTR [rsi+0x79]
	...
   140053334:	pushf  
   140053335:	movsxd edx,DWORD PTR [rdi]
   140053337:	add    DWORD PTR [rbp-0x3199e195],esp
   14005333d:	nop
   14005333e:	xor    bh,dl
   140053340:	mov    BYTE PTR [rsi+0x75afff26],0x1a
   140053347:	call   QWORD PTR [rdx+0x77ff2162]
   14005334d:	push   rax
   14005334e:	xor    bh,bh
   140053350:	fs rex.XB cmp r15b,dil
   140053354:	pop    rdi
   140053355:	(bad)  
   140053356:	cmp    edi,edi
   140053358:	xchg   BYTE PTR [rdx+0x30],bl
   14005335b:	call   FWORD PTR [rdx]
   14005335d:	adc    DWORD PTR [rax-0x1],ecx
   140053360:	adc    eax,0x15ff6313
   140053365:	sbb    DWORD PTR [rbx-0x1],edi
   140053368:	sbb    esp,DWORD PTR [rax]
   14005336a:	mov    edi,edi
   14005336c:	and    al,0x31
   14005336e:	movabs ds:0xea7a39ffca5130ff,eax
   140053377:	(bad)  
   140053378:	cmp    ebx,DWORD PTR [rbp-0x4fc60010]
   14005337e:	repnz (bad) 
   140053380:	cmp    ah,BYTE PTR [rbx-0x7dc5000f]
   140053386:	in     al,dx
   140053387:	push   QWORD PTR [rsi]
   140053389:	pop    rbp
   14005338a:	in     al,0xff
   14005338c:	(bad)  
   14005338d:	ds sar bh,1
   140053390:	sub    eax,0x2dffc335
   140053395:	xor    edi,DWORD PTR [rbp+0x613247fa]
   14005339b:	(bad)  
	...
   1400533f8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400533f9:	ins    DWORD PTR es:[rdi],dx
   1400533fa:	(bad)  
   1400533fb:	add    DWORD PTR [rdx-0x4da7e498],esp
   140053401:	ja     0x140053424
   140053403:	out    dx,al
   140053404:	mov    ecx,0xb6fe1c7b
   140053409:	jns    0x140053423
   14005340b:	(bad)  
   14005340c:	lahf   
   14005340d:	push   0x1b
   14005340f:	inc    DWORD PTR [rbp+0x74fe285a]
   140053415:	rex.WRXB xor r15b,r14b
   140053418:	xchg   ebp,eax
   140053419:	gs sub eax,0x40263bff
   14005341f:	(bad)  
   140053420:	(bad)  
   140053421:	adc    DWORD PTR [rsi+rdi*8+0x14],edx
   140053425:	(bad)  
   140053426:	je     0x140053427
   140053428:	sbb    DWORD PTR [rip+0x2d22fe86],ebx        # 0x16d2832b4
   14005342e:	popf   
   14005342f:	(bad)  
   140053430:	(bad)  
   140053431:	rex.WRB (bad) 
   140053433:	(bad)  
   140053434:	cmp    bh,BYTE PTR [rbx-0x16]
   140053437:	(bad)  
   140053438:	cmp    ah,BYTE PTR [rbp-0x47c7000f]
   14005343e:	repz (bad) 
   140053440:	cmp    ah,BYTE PTR [rbp+0x7f3afef1]
   140053446:	jmp    0x140053447
   140053448:	xor    eax,0x2efee155
   14005344d:	cmp    cl,bl
   14005344f:	(bad)  
   140053450:	sub    eax,0x35ffc234
   140053455:	xor    ebx,DWORD PTR [rdi+0x673245c9]
   14005345b:	add    al,0x0
	...
   1400534bd:	add    BYTE PTR [rax],al
   1400534bf:	add    BYTE PTR [rax+0x6f1b1b56],cl
   1400534c5:	rex.RB and al,0x7b
   1400534c8:	adc    DWORD PTR [rbx+0x22],0x1a71abc7
   1400534cf:	(bad)  
   1400534d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400534d1:	outs   dx,DWORD PTR ds:[rsi]
   1400534d2:	sbb    bh,bh
   1400534d4:	nop
   1400534d5:	(bad)  
   1400534d6:	and    edi,edi
   1400534d8:	mov    DWORD PTR [rbp+0x27],ebx
   1400534db:	inc    DWORD PTR [rcx+rbx*2+0x1118ff32]
   1400534e2:	rex.WX call QWORD PTR [rsp+r10*1]
   1400534e6:	push   0xffffffffffffffff
   1400534e8:	(bad)  
   1400534e9:	sbb    al,0x80
   1400534eb:	jmp    QWORD PTR [rax]
   1400534ed:	sub    BYTE PTR [rsi-0x3eb6d201],dl
   1400534f3:	(bad)  
   1400534f4:	cmp    bh,BYTE PTR [rdx+rbp*8-0x1]
   1400534f8:	cmp    DWORD PTR [rbp-0x3cc7000e],ebp
   1400534fe:	repz (bad) 
   140053500:	cmp    ah,BYTE PTR [rdi+0x7a3afff1]
   140053506:	(bad)  
   140053507:	push   QWORD PTR [rbx]
   140053509:	rex.WRB fdiv st(7),st
   14005350c:	cs (bad) 
   14005350e:	enter  0x2dff,0x34
   140053512:	sar    bh,0x41
   140053515:	xor    dh,BYTE PTR [rbp+0x78]
	...
   140053588:	jl     0x1400535d7
   14005358a:	sbb    DWORD PTR [rdx],eax
   14005358c:	js     0x1400535d8
   14005358e:	sbb    edx,DWORD PTR [rax-0x61]
   140053591:	imul   ebx,DWORD PTR [rdx],0x1773ace7
   140053597:	(bad)  
   140053598:	pushf  
   140053599:	push   0x72a9ff1b
   14005359e:	es (bad) 
   1400535a0:	xor    esp,DWORD PTR [rcx]
   1400535a2:	rex.X (bad) 
   1400535a4:	adc    eax,0x15ff5b12
   1400535a9:	sbb    DWORD PTR [rdx-0x2],edi
   1400535ac:	sbb    eax,0x2bfe9024
   1400535b1:	rex.R mov edx,0xe97d3aff
   1400535b7:	(bad)  
   1400535b8:	cmp    BYTE PTR [rax-0x32c9000e],bh
   1400535be:	icebp  
   1400535bf:	(bad)  
   1400535c0:	cmp    DWORD PTR [rax+0x7439fef1],ebp
   1400535c6:	(bad)  
   1400535c7:	push   QWORD PTR [rcx]
   1400535c9:	rex.RB xlat BYTE PTR ds:[rbx]
   1400535cb:	(bad)  
   1400535cc:	sub    eax,0x2cfec536
   1400535d1:	xor    edi,DWORD PTR [rsi+0x623247fc]
   1400535d7:	and    eax,0x0
	...
   140053650:	or     DWORD PTR [rdi+0x14],0x18689f24
   140053657:	shl    DWORD PTR [rdx-0x5500e88a],1
   14005365d:	jno    0x14005367a
   14005365f:	(bad)  
   140053660:	jp     0x1400536b4
   140053662:	xor    eax,0x4e1017fe
   140053667:	call   QWORD PTR [rsi+rdx*1]
   14005366a:	jb     0x14005366a
   14005366c:	sbb    esp,DWORD PTR [rax]
   14005366e:	mov    bh,dh
   140053670:	sub    DWORD PTR [rsi],edi
   140053672:	mov    bl,0xff
   140053674:	cmp    DWORD PTR [rbp-0x18],edi
   140053677:	(bad)  
   140053678:	cmp    ebp,eax
   14005367a:	icebp  
   14005367b:	(bad)  
   14005367c:	cmp    ebx,ecx
   14005367e:	out    dx,eax
   14005367f:	(bad)  
   140053680:	cmp    ah,BYTE PTR [rdi+0x6c38fef1]
   140053686:	call   0x11144678a
   14005368b:	(bad)  
   14005368c:	sub    eax,0x34fec234
   140053691:	xor    esp,DWORD PTR [rax+0x653246c7]
   140053697:	add    eax,DWORD PTR [rax]
	...
   140053711:	add    BYTE PTR [rax],al
   140053713:	add    BYTE PTR [rsi-0x56e5f0ae],al
   140053719:	outs   dx,DWORD PTR ds:[rsi]
   14005371a:	(bad)  
   14005371b:	fidiv  WORD PTR [rdi-0x5000e787]
   140053721:	ja     0x14005374a
   140053723:	jmp    QWORD PTR [rsi]
   140053725:	sbb    DWORD PTR [rbp-0x1],eax
   140053728:	adc    eax,0x18ff6613
   14005372d:	sbb    eax,0x3826ff83
   140053732:	stos   BYTE PTR es:[rdi],al
   140053733:	(bad)  
   140053734:	cmp    DWORD PTR [rbp-0x19],edi
   140053737:	(bad)  
   140053738:	cmp    edx,eax
   14005373a:	out    dx,eax
   14005373b:	(bad)  
   14005373c:	cmp    eax,0x3affecdd
   140053741:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140053742:	lock push QWORD PTR [rsi]
   140053745:	(bad)  
   140053746:	in     eax,0xff
   140053748:	cs cmp cl,bl
   14005374b:	jmp    FWORD PTR [rip+0x40ffc034]        # 0x18104f785
   140053751:	xor    dh,BYTE PTR [rdi+0x71]
	...
   1400537d8:	mov    dl,BYTE PTR [rdi+rcx*1+0x34]
   1400537dc:	mov    ch,0x78
   1400537de:	sbb    cl,dh
   1400537e0:	mov    ah,0x79
   1400537e2:	(bad)  
   1400537e3:	(bad)  
   1400537e4:	imul   eax,DWORD PTR [rdi+0x39],0x561117ff
   1400537eb:	(bad)  
   1400537ec:	(bad)  
   1400537ed:	sbb    bh,BYTE PTR [rsi+rdi*8+0x23]
   1400537f1:	xor    BYTE PTR [rcx-0x1b84c701],ah
   1400537f7:	(bad)  
   1400537f8:	cmp    eax,0x3effedd7
   1400537fd:	fucomip st,st(2)
   1400537ff:	(bad)  
   140053800:	cmp    DWORD PTR [rdi+0x5534feef],ebx
   140053806:	loopne 0x140053807
   140053808:	cs (bad) 
   14005380a:	(bad)  
   14005380b:	(bad)  
   14005380c:	sub    eax,0x47f6bc33
   140053811:	xor    ah,BYTE PTR [rcx+0x1d]
	...
   14005389c:	nop
   14005389d:	pop    rcx
   14005389e:	punpcklbw mm6,DWORD PTR [rbp-0x5b02e788]
   1400538a5:	jo     0x1400538d6
   1400538a7:	jmp    QWORD PTR [rax]
   1400538a9:	adc    al,0x4a
   1400538ab:	(bad)  
   1400538ac:	adc    eax,0x20fe7216
   1400538b1:	sub    DWORD PTR [rdi-0x1f89c901],edx
   1400538b7:	(bad)  
   1400538b8:	cmp    eax,0x3effecdc
   1400538bd:	fucomip st,st(2)
   1400538bf:	(bad)  
   1400538c0:	cmp    dl,BYTE PTR [rbp+0x4a32feee]
   1400538c6:	fcos   
   1400538c8:	sub    eax,0x39fec335
   1400538cd:	xor    dl,BYTE PTR [rax+0x733241b1]
   1400538d3:	add    al,BYTE PTR [rax]
	...
   140053959:	add    BYTE PTR [rax],al
   14005395b:	add    BYTE PTR [rcx-0x62fcf1a7],dl
   140053961:	adc    ah,BYTE PTR fs:[rbx-0xd88953]
   140053968:	push   rdx
   140053969:	ss cmp al,0xff
   14005396c:	adc    eax,0x1cff6313
   140053971:	and    cl,BYTE PTR [rdi+rdi*8-0x2791cc]
   140053978:	ds fucomp st(3)
   14005397b:	(bad)  
   14005397c:	ds fsubp st(2),st
   14005397f:	(bad)  
   140053980:	cmp    DWORD PTR [rbp+0x3f30ffec],eax
   140053986:	sar    bh,1
   140053988:	sub    eax,0x42fec034
   14005398d:	xor    ch,BYTE PTR [rdi+0x50]
	...
   140053a20:	mov    DWORD PTR [rdi+rcx*1+0x14],edx
   140053a24:	popf   
   140053a25:	push   0x6a9be21b
   140053a2a:	xor    edi,esi
   140053a2c:	sbb    DWORD PTR [rdx],edx
   140053a2e:	push   rbx
   140053a2f:	(bad)  
   140053a30:	sbb    BYTE PTR [rip+0x6131ff82],bl        # 0x1a13739b8
   140053a36:	int    0xfe
   140053a38:	ds fucomp st(3)
   140053a3b:	(bad)  
   140053a3c:	cmp    eax,0x37feebd9
   140053a41:	outs   dx,DWORD PTR ds:[rsi]
   140053a42:	out    0xfe,eax
   140053a44:	cs cmp al,cl
   140053a47:	push   QWORD PTR [rcx]
   140053a49:	xor    ebp,DWORD PTR [rdx+0x653246da]
   140053a4f:	or     DWORD PTR [rax],eax
	...
   140053ae1:	add    BYTE PTR [rax],al
   140053ae3:	add    BYTE PTR [rcx-0x48adefac],cl
   140053ae9:	jle    0x140053b15
   140053aeb:	std    
   140053aec:	cmp    esp,DWORD PTR [rdi]
   140053aee:	rex.X (bad) 
   140053af0:	(bad)  
   140053af1:	(bad)  
   140053af2:	je     0x140053af3
   140053af4:	sub    al,0x4e
   140053af6:	mov    ebp,0xebda3efe
   140053afb:	(bad)  
   140053afc:	cmp    eax,0x34feeccc
   140053b01:	pop    rax
   140053b02:	fdivp  st(6),st
   140053b04:	sub    eax,0x41ffc234
   140053b09:	xor    dh,BYTE PTR [rsi+0x6f]
	...
   140053ba4:	lea    ebx,[rax+0x13]
   140053ba7:	add    al,0x9e
   140053ba9:	sbb    esi,DWORD PTR [ebx-0xc9a379]
   140053bb0:	(bad)  
   140053bb1:	adc    al,0x62
   140053bb3:	jmp    QWORD PTR [rip+0x3dffa939]        # 0x17e04e4f2
   140053bb9:	shr    ah,1
   140053bbb:	(bad)  
   140053bbc:	cmp    esi,DWORD PTR [rcx+0x4330ffec]
   140053bc2:	sar    edi,1
   140053bc4:	(bad)  
   140053bc5:	xor    esi,DWORD PTR [rcx+0x653246e4]
   140053bcb:	or     eax,0x0
	...
   140053c68:	nop
   140053c69:	pop    rcx
   140053c6a:	adc    ebp,DWORD PTR [rcx+rax*8]
   140053c6d:	test   DWORD PTR [rip+0x4e1d2bf5],ebp        # 0x18e226868
   140053c73:	call   FWORD PTR [rip+0x3afe9126]        # 0x17b03cd9f
   140053c79:	test   al,0xea
   140053c7b:	push   QWORD PTR [rdi]
   140053c7d:	jns    0x140053c65
   140053c7f:	(bad)  
   140053c80:	sub    eax,0x42fec236
   140053c85:	xor    dh,BYTE PTR [rdx+0x64]
	...
   140053d28:	sahf   
   140053d29:	sbb    eax,DWORD PTR gs:[rcx]
   140053d2c:	test   al,0x6d
   140053d2e:	and    BYTE PTR [rsi+0x78],bh
   140053d31:	push   rcx
   140053d32:	cmp    edi,edi
   140053d34:	sbb    BYTE PTR [rbx],bl
   140053d36:	jp     0x140053d36
   140053d38:	xor    BYTE PTR [rbx-0x33],dl
   140053d3b:	jmp    FWORD PTR [rdi]
   140053d3d:	rex.X retf 0x36fe
   140053d41:	xor    dl,BYTE PTR [rdi+0x733242be]
   140053d47:	(bad)  
	...
   140053dec:	xchg   edx,eax
   140053ded:	pop    rbp
   140053dee:	(bad)  
   140053def:	(bad)  
   140053df0:	lods   al,BYTE PTR ds:[rsi]
   140053df1:	jae    0x140053e1b
   140053df3:	mov    dh,0x34
   140053df5:	(bad)  
   140053df6:	pop    rbx
   140053df7:	jmp    QWORD PTR [rbx]
   140053df9:	sub    DWORD PTR [rax-0x5bd0d201],esp
   140053dff:	fdivr  QWORD PTR [rsi]
   140053e01:	xor    bh,BYTE PTR [rcx+0x1f]
	...
   140053eb0:	jl     0x140053f01
   140053eb2:	(bad)  
   140053eb3:	or     dh,BYTE PTR [rsi+0x4e]
   140053eb6:	xor    al,0x80
   140053eb8:	ss sub al,0x73
   140053ebb:	xchg   esi,eax
   140053ebc:	cmp    DWORD PTR [rip+0x186f],ebp        # 0x140055731
	...
   140054076:	add    BYTE PTR [rax],al
   140054078:	(bad)  
   140054079:	(bad)  
   14005407a:	(bad)  
   14005407b:	(bad)  
   14005407c:	(bad)  
   14005407d:	inc    DWORD PTR [rax]
   14005407f:	add    bh,bh
   140054081:	(bad)  
   140054082:	(bad)  
   140054083:	(bad)  
   140054084:	(bad)  
   140054085:	inc    DWORD PTR [rax]
   140054087:	add    bh,bh
   140054089:	push   rax
   14005408b:	(bad)  
   14005408c:	(bad)  
   14005408d:	inc    DWORD PTR [rax]
   14005408f:	add    bh,bh
   140054091:	jmp    rax
   140054093:	(bad)  
   140054094:	(bad)  
   140054095:	inc    DWORD PTR [rax]
   140054097:	add    bh,bh
   140054099:	jmp    rax
   14005409b:	(bad)  
   14005409c:	(bad)  
   14005409d:	inc    DWORD PTR [rax]
   14005409f:	add    bh,bh
   1400540a1:	inc    eax
   1400540a3:	ud0    edi,edi
   1400540a6:	add    BYTE PTR [rax],al
   1400540a8:	(bad)  
   1400540a9:	inc    eax
   1400540ab:	(bad)  
   1400540ac:	(bad)  
   1400540ad:	inc    DWORD PTR [rax]
   1400540af:	add    bh,bh
   1400540b1:	inc    DWORD PTR [rax+0xffff03]
   1400540b7:	add    bh,bh
   1400540b9:	inc    DWORD PTR [rax+0xffff01]
   1400540bf:	add    bh,bh
   1400540c1:	inc    DWORD PTR [rax]
   1400540c3:	add    bh,bh
   1400540c5:	cld    
   1400540c6:	add    BYTE PTR [rax],al
   1400540c8:	(bad)  
   1400540c9:	inc    DWORD PTR [rax]
   1400540cb:	add    BYTE PTR [rdi-0x8],bh
   1400540ce:	add    BYTE PTR [rax],al
   1400540d0:	(bad)  
   1400540d1:	inc    BYTE PTR [rax]
   1400540d3:	add    BYTE PTR [rdi-0x10],bh
   1400540d6:	add    BYTE PTR [rax],al
   1400540d8:	(bad)  
   1400540d9:	inc    BYTE PTR [rax]
   1400540db:	add    BYTE PTR [rdi],bh
   1400540dd:	loopne 0x1400540df
   1400540df:	add    bh,bh
   1400540e1:	mov    BYTE PTR [rax],al
   1400540e3:	add    BYTE PTR [rdi],cl
   1400540e5:	rol    DWORD PTR [rax],0x0
   1400540e8:	inc    DWORD PTR [rax]
   1400540ea:	add    BYTE PTR [rax],al
   1400540ec:	(bad)  
   1400540ed:	add    DWORD PTR [rax],eax
   1400540ef:	add    ah,bh
   1400540f1:	add    BYTE PTR [rax],al
   1400540f3:	add    BYTE PTR [rax],al
   1400540f5:	add    DWORD PTR [rax],eax
   1400540f7:	add    al,bh
   1400540f9:	add    BYTE PTR [rax],al
   1400540fb:	add    BYTE PTR [rax],al
   1400540fd:	add    eax,DWORD PTR [rax]
   1400540ff:	add    al,dh
   140054101:	add    BYTE PTR [rax],al
   140054103:	add    BYTE PTR [rax],al
   140054105:	add    eax,DWORD PTR [rax]
   140054107:	add    al,al
   140054109:	add    BYTE PTR [rax],al
   14005410b:	add    BYTE PTR [rax],al
   14005410d:	(bad)  
   14005410e:	add    BYTE PTR [rax],al
   140054110:	add    BYTE PTR [rax],0x0
   140054113:	add    BYTE PTR [rax],al
   140054115:	(bad)  
   140054116:	add    BYTE PTR [rax],al
   140054118:	add    BYTE PTR [rax],al
   14005411a:	add    BYTE PTR [rax],al
   14005411c:	add    BYTE PTR [rdi],al
   14005411e:	add    BYTE PTR [rax],al
   140054120:	add    BYTE PTR [rax],al
   140054122:	add    BYTE PTR [rax],al
   140054124:	add    BYTE PTR [rdi],cl
   140054126:	add    BYTE PTR [rax],al
   140054128:	add    BYTE PTR [rax],al
   14005412a:	add    BYTE PTR [rax],al
   14005412c:	add    BYTE PTR [rdi],cl
   14005412e:	add    BYTE PTR [rax],al
   140054130:	loopne 0x140054132
   140054132:	add    BYTE PTR [rax],al
   140054134:	add    BYTE PTR [rdi],cl
   140054136:	add    BYTE PTR [rax],al
   140054138:	clc    
   140054139:	add    BYTE PTR [rax],al
   14005413b:	add    BYTE PTR [rax],al
   14005413d:	(bad)  
   14005413e:	add    BYTE PTR [rax],al
   140054140:	inc    DWORD PTR [rax]
   140054142:	add    BYTE PTR [rax],al
   140054144:	add    BYTE PTR [rdi],bl
   140054146:	add    BYTE PTR [rax],al
   140054148:	inc    eax
   14005414a:	add    BYTE PTR [rax],al
   14005414c:	add    BYTE PTR [rdi],bl
   14005414e:	add    BYTE PTR [rax],al
   140054150:	(bad)  
   140054151:	clc    
   140054152:	add    BYTE PTR [rax],al
   140054154:	add    BYTE PTR [rdi],bh
   140054156:	add    BYTE PTR [rax],al
   140054158:	(bad)  
   140054159:	cld    
   14005415a:	add    BYTE PTR [rax],al
   14005415c:	add    BYTE PTR [rdi],bh
   14005415e:	add    BYTE PTR [rax],al
   140054160:	(bad)  
   140054161:	inc    BYTE PTR [rax]
   140054163:	add    BYTE PTR [rax],al
   140054165:	jg     0x140054167
   140054167:	add    bh,bh
   140054169:	inc    BYTE PTR [rax]
   14005416b:	add    BYTE PTR [rax],al
   14005416d:	jg     0x14005416f
   14005416f:	add    bh,bh
   140054171:	inc    DWORD PTR [rax]
   140054173:	add    BYTE PTR [rax],al
   140054175:	jg     0x140054177
   140054177:	add    bh,bh
   140054179:	inc    eax
   14005417b:	add    BYTE PTR [rax],al
   14005417d:	inc    DWORD PTR [rax]
   14005417f:	add    bh,bh
   140054181:	push   rax
   140054183:	add    BYTE PTR [rax],al
   140054185:	inc    DWORD PTR [rax]
   140054187:	add    bh,bh
   140054189:	(bad)  
   14005418a:	cld    
   14005418b:	add    BYTE PTR [rax],al
   14005418d:	inc    DWORD PTR [rax]
   14005418f:	add    bh,bh
   140054191:	(bad)  
   140054192:	inc    BYTE PTR [rax]
   140054194:	add    edi,edi
   140054196:	add    BYTE PTR [rax],al
   140054198:	(bad)  
   140054199:	(bad)  
   14005419a:	inc    DWORD PTR [rax]
   14005419c:	add    edi,edi
   14005419e:	add    BYTE PTR [rax],al
   1400541a0:	(bad)  
   1400541a1:	(bad)  
   1400541a2:	inc    DWORD PTR [rax+0xff01]
   1400541a8:	(bad)  
   1400541a9:	(bad)  
   1400541aa:	inc    DWORD PTR [rax+0xff03]
   1400541b0:	(bad)  
   1400541b1:	(bad)  
   1400541b2:	inc    eax
   1400541b4:	add    edi,edi
   1400541b6:	add    BYTE PTR [rax],al
   1400541b8:	(bad)  
   1400541b9:	(bad)  
   1400541ba:	jmp    rax
   1400541bc:	(bad)  
   1400541bd:	inc    DWORD PTR [rax]
   1400541bf:	add    bh,bh
   1400541c1:	(bad)  
   1400541c2:	jmp    rax
   1400541c4:	(bad)  
   1400541c5:	inc    DWORD PTR [rax]
   1400541c7:	add    bh,bh
   1400541c9:	(bad)  
   1400541ca:	push   rax
   1400541cc:	ud0    eax,DWORD PTR [rax]
   1400541cf:	add    bh,bh
   1400541d1:	(bad)  
   1400541d2:	push   rax
   1400541d4:	ud0    eax,DWORD PTR [rax]
   1400541d7:	add    bh,bh
   1400541d9:	(bad)  
   1400541da:	(bad)  
   1400541db:	clc    
   1400541dc:	(bad)  
   1400541dd:	inc    DWORD PTR [rax]
   1400541df:	add    bh,bh
   1400541e1:	(bad)  
   1400541e2:	(bad)  
   1400541e3:	cld    
   1400541e4:	(bad)  
   1400541e5:	inc    DWORD PTR [rax]
   1400541e7:	add    bh,bh
   1400541e9:	(bad)  
   1400541ea:	(bad)  
   1400541eb:	(bad)  
   1400541ec:	(bad)  
   1400541ed:	inc    DWORD PTR [rax]
   1400541ef:	add    bh,bh
   1400541f1:	(bad)  
   1400541f2:	(bad)  
   1400541f3:	(bad)  
   1400541f4:	(bad)  
   1400541f5:	inc    DWORD PTR [rax]
   1400541f7:	add    BYTE PTR [rax],ch
   1400541f9:	add    BYTE PTR [rax],al
   1400541fb:	add    BYTE PTR [rax],ah
   1400541fd:	add    BYTE PTR [rax],al
   1400541ff:	add    BYTE PTR [rax+0x0],al
   140054202:	add    BYTE PTR [rax],al
   140054204:	add    DWORD PTR [rax],eax
   140054206:	and    BYTE PTR [rax],al
   140054208:	add    BYTE PTR [rax],al
   14005420a:	add    BYTE PTR [rax],al
   14005420c:	adc    BYTE PTR [rax],0x0
	...
   1400542d3:	add    BYTE PTR [rsi+rdi*2-0x79],cl
   1400542d7:	(bad)  
   1400542d8:	lea    rsp,[rbx+0x4b5b5754]
   1400542df:	or     al,0x0
	...
   140054351:	add    BYTE PTR [rax],al
   140054353:	add    BYTE PTR [rcx-0x77],cl
   140054356:	popf   
   140054357:	xchg   ecx,eax
   140054358:	cmp    edi,DWORD PTR [rdx-0x53c0000c]
   14005435e:	fsubr  st(1),st
   140054360:	push   rdx
   140054361:	ins    BYTE PTR es:[rdi],dx
   140054362:	imul   edx,DWORD PTR [rbx+0x57],0x59
   140054366:	rex.WRX add r8b,BYTE PTR [rax]
	...
   1400543cd:	add    BYTE PTR [rax],al
   1400543cf:	add    BYTE PTR [rsi+0x5e],dl
   1400543d2:	push   rbx
   1400543d3:	adc    bh,BYTE PTR [rip+0x3befe9b3]        # 0x17bf52d8c
   1400543d9:	mov    ecx,0xb63bfff4
   1400543de:	repz (bad) 
   1400543e0:	cmp    al,0xac
   1400543e2:	icebp  
   1400543e3:	std    
   1400543e4:	rex.WR jo 0x140054373
   1400543e7:	xchg   BYTE PTR [rbp+0x54],dl
   1400543ea:	push   rsi
   1400543eb:	add    al,0x0
	...
   14005444d:	add    BYTE PTR [rax],al
   14005444f:	add    BYTE PTR [rbp+0x72],cl
   140054452:	xchg   DWORD PTR [rdx+0x3c],esi
   140054455:	stos   DWORD PTR es:[rdi],eax
   140054456:	icebp  
   140054457:	(bad)  
   140054458:	cmp    al,0xaa
   14005445a:	icebp  
   14005445b:	(bad)  
   14005445c:	cmp    al,0xa4
   14005445e:	lock (bad) 
   140054460:	cmp    ebx,DWORD PTR [rbx-0x6ec40011]
   140054466:	out    dx,al
   140054467:	dec    DWORD PTR [rbx+0x66]
   14005446a:	xchg   esp,eax
   14005446b:	mov    ss,WORD PTR [rsi+0x4c]
   14005446e:	push   rcx
   14005446f:	add    eax,DWORD PTR [rax]
	...
   1400544c9:	add    BYTE PTR [rax],al
   1400544cb:	add    BYTE PTR [rbp+0x42],dl
   1400544ce:	rex.R add eax,0xd9ce773f
   1400544d4:	cmp    ecx,DWORD PTR [rbp-0x70c40013]
   1400544da:	in     eax,dx
   1400544db:	(bad)  
   1400544dc:	cmp    ecx,DWORD PTR [rbp-0x77c40013]
   1400544e2:	in     eax,dx
   1400544e3:	(bad)  
   1400544e4:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1481c301]
   1400544eb:	dec    BYTE PTR [rsi+0x59]
   1400544ee:	(bad)  
   1400544ef:	jne    0x140054547
   1400544f1:	rex.WB
   1400544f2:	rex.WRXB add QWORD PTR [r8],r8
	...
   140054549:	add    BYTE PTR [rax],al
   14005454b:	add    BYTE PTR [rdi+0x39],al
   14005454e:	pop    rcx
   14005454f:	push   rcx
   140054550:	xor    DWORD PTR [rbp-0x32],edx
   140054553:	push   QWORD PTR [rsi]
   140054555:	data16 fdivp st(7),st
   140054558:	cmp    BYTE PTR [rdi-0x1a],ch
   14005455b:	(bad)  
   14005455c:	cmp    DWORD PTR [rbx-0x17],esi
   14005455f:	(bad)  
   140054560:	cmp    dh,BYTE PTR [rcx+rbp*8-0x1]
   140054564:	cmp    dh,BYTE PTR [rbp-0x16]
   140054567:	(bad)  
   140054568:	cmp    esi,DWORD PTR [rdi-0x15]
   14005456b:	(bad)  
   14005456c:	cmp    al,0x77
   14005456e:	jmp    0x1a957986e
   140054573:	push   rax
	...
   140054598:	push   rbp
   140054599:	xor    dh,BYTE PTR [rbx]
   14005459b:	add    DWORD PTR [rdi+0x32],ecx
   14005459e:	rex.RX sub eax,0x0
	...
   1400545c8:	sub    r13,QWORD PTR [r11]
   1400545cb:	add    eax,0xcc7b292c
   1400545d0:	and    eax,0x2affa533
   1400545d5:	rex.X mov dil,0xff
   1400545d8:	(bad)  
   1400545d9:	rex.WRXB (bad) 
   1400545db:	push   QWORD PTR [rbx]
   1400545dd:	pop    rdx
   1400545de:	(bad)  
   1400545df:	push   QWORD PTR [rsi]
   1400545e1:	movsxd ebx,edi
   1400545e3:	push   QWORD PTR [rdi]
   1400545e5:	push   0xffffffffffffffe6
   1400545e7:	(bad)  
   1400545e8:	cmp    BYTE PTR [rcx-0x17],dh
   1400545eb:	(bad)  
   1400545ec:	cmp    bh,BYTE PTR [rcx-0x15]
   1400545ef:	(bad)  
   1400545f0:	ds jp  0x1400545d4
   1400545f3:	lock push rbp
   1400545f5:	push   rax
   1400545f6:	pop    rsp
   1400545f7:	xor    eax,DWORD PTR [rax]
	...
   140054611:	add    BYTE PTR [rax],al
   140054613:	add    BYTE PTR [rdx+rsi*1+0x36],dl
   140054617:	add    DWORD PTR [rbx+0x32],ecx
   14005461a:	push   rdi
   14005461b:	pop    rax
   14005461c:	xor    eax,DWORD PTR ds:[rdx+0x88]
	...
   140054643:	add    BYTE PTR [rdi+0x29],cl
   140054646:	sbb    al,0x1
   140054648:	cmp    ah,BYTE PTR [rip+0x1d197441]        # 0x15d1eba8f
   14005464e:	test   bh,bh
   140054650:	sbb    eax,0x22ff8f23
   140054655:	sub    al,0x9b
   140054657:	jmp    QWORD PTR [rdi]
   140054659:	cmp    BYTE PTR [rbx-0x45bbd401],ch
   14005465f:	jmp    FWORD PTR [rdi]
   140054661:	push   rax
   140054662:	leave  
   140054663:	push   QWORD PTR [rbx+rbx*2]
   140054666:	xlat   BYTE PTR ds:[rbx]
   140054667:	push   QWORD PTR [rdi]
   140054669:	addr32 in al,0xff
   14005466c:	cmp    BYTE PTR [rcx-0x17],dh
   14005466f:	(bad)  
   140054670:	cmp    edi,DWORD PTR [rbx-0x15]
   140054673:	inc    DWORD PTR [rax+0x7a]
   140054676:	(bad)  
   140054677:	jrcxz  0x1400546cf
   140054679:	rex.WRXB push r10
   14005467b:	(bad)  
	...
   140054690:	push   rsp
   140054691:	xor    bh,BYTE PTR [rax]
   140054693:	add    al,BYTE PTR [rdi+0x33]
   140054696:	data16 jo 0x1400546c6
   140054699:	xor    al,0xbd
   14005469b:	stc    
   14005469c:	rex.XB xor bpl,BYTE PTR [r13+0x26]
	...
   1400546b4:	or     DWORD PTR [rbp+0x13],0x3
   1400546b8:	xchg   esp,eax
   1400546b9:	pop    rbp
   1400546ba:	and    DWORD PTR [rcx-0x6f],ebx
   1400546bd:	pop    rbx
   1400546be:	and    BYTE PTR [rdx+0x7c],bl
   1400546c1:	rex.W adc BYTE PTR [rdx*2+0x16762330],spl
   1400546c9:	adc    al,0x64
   1400546cb:	cli    
   1400546cc:	adc    al,0x18
   1400546ce:	ja     0x1400546cf
   1400546d0:	(bad)  
   1400546d1:	sbb    al,0x81
   1400546d3:	call   FWORD PTR [rbx]
   1400546d5:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   1400546dc:	es xor al,0xa7
   1400546df:	jmp    FWORD PTR [rdx]
   1400546e1:	mov    r15b,0xff
   1400546e4:	(bad)  
   1400546e5:	rex.WRX enter 0x35ff,0x5c
   1400546ea:	fcos   
   1400546ec:	(bad)  
   1400546ed:	push   0xffffffffffffffe6
   1400546ef:	(bad)  
   1400546f0:	cmp    DWORD PTR [rdi-0x16],esi
   1400546f3:	(bad)  
   1400546f4:	cmp    al,0x82
   1400546f6:	in     al,dx
   1400546f7:	(bad)  
   1400546f8:	(bad)  
   1400546f9:	adc    ah,0xe2
   1400546fc:	push   rbp
   1400546fd:	push   rbx
   1400546fe:	pop    rcx
   1400546ff:	cmp    DWORD PTR [rax+0x48],ebx
   140054702:	cmp    eax,0x1
   140054707:	add    BYTE PTR [rax],al
   140054709:	add    BYTE PTR [rax],al
   14005470b:	add    BYTE PTR [rsi+0x34],dl
   14005470e:	xor    ecx,DWORD PTR [rdx]
   140054710:	rex.XB xor eax,0x342d8e79
   140054716:	ret    0x36fe
   140054719:	xor    ebx,DWORD PTR [rcx+0x683244bb]
   14005471f:	add    DWORD PTR [rax],eax
	...
   14005472d:	add    BYTE PTR [rax],al
   14005472f:	add    BYTE PTR [rbp-0x51edecb0],al
   140054735:	je     0x140054763
   140054737:	movabs ds:0xff4b8fc8fe4792cf,al
   140054740:	mov    ecx,0xa4ff4483
   140054745:	outs   dx,DWORD PTR ds:[rsi]
   140054746:	sub    edi,edi
   140054748:	xor    al,0x21
   14005474a:	rex.RX call QWORD PTR [rip+0x14ff6112]        # 0x15504a863
   140054751:	(bad)  
   140054752:	jne    0x140054753
   140054754:	(bad)  
   140054755:	sbb    al,0x80
   140054757:	call   FWORD PTR [rbx]
   140054759:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   140054760:	es xor eax,0x432bffa8
   140054766:	mov    edx,0xce5231ff
   14005476b:	push   QWORD PTR [rsi]
   14005476d:	fs loope 0x14005476f
   140054770:	cmp    BYTE PTR [rbx-0x16],dh
   140054773:	(bad)  
   140054774:	cmp    al,0x80
   140054776:	in     al,dx
   140054777:	(bad)  
   140054778:	cmp    ecx,DWORD PTR [rcx-0x75c30013]
   14005477e:	jmp    0xd069917b
   140054783:	sahf   
   140054784:	rex.WRX
   140054785:	rex.WRB
   140054786:	gs pop rbp
   140054788:	rex.WX
   140054789:	rex.X ins BYTE PTR es:[rdi],dx
   14005478b:	jno    0x1400547c5
   14005478d:	cmp    eax,0x372ed4ad
   140054792:	(bad)  
   140054793:	jmp    FWORD PTR [rip+0x3effc034]        # 0x17f0507cd
   140054799:	xor    bh,BYTE PTR [rdi+rdx*2+0x0]
	...
   1400547a5:	add    BYTE PTR [rax],al
   1400547a7:	add    BYTE PTR [rbx-0x70feecb2],al
   1400547ad:	pop    rcx
   1400547ae:	sbb    bh,BYTE PTR [rbx]
   1400547b0:	(bad)  
   1400547b1:	mov    WORD PTR [rbx],?
   1400547b3:	fcmovbe st,st(3)
   1400547b5:	xchg   edi,eax
   1400547b6:	rex.X call rcx
   1400547b9:	xchg   esp,eax
   1400547ba:	rex.XB dec r13d
   1400547bd:	xchg   ecx,eax
   1400547be:	inc    r12
   1400547c1:	mov    WORD PTR [rbp-0x1],cs
   1400547c4:	mov    bh,0x83
   1400547c6:	rex.WXB call FWORD PTR [r10+0x29ff2c68]
   1400547cd:	sbb    al,BYTE PTR [rdi-0x1]
   1400547d0:	adc    eax,0x14ff6012
   1400547d5:	sbb    BYTE PTR [rsi-0x1],dh
   1400547d8:	sbb    BYTE PTR [rdx+rax*4],bl
   1400547db:	call   FWORD PTR [rdx+riz*1]
   1400547de:	mov    ?,edi
   1400547e0:	and    ebp,DWORD PTR [rsp+rbx*4]
   1400547e3:	jmp    FWORD PTR [rax]
   1400547e5:	cmp    ch,BYTE PTR [rdi-0x3bb5d201]
   1400547eb:	push   QWORD PTR [rip+0x38ffda5d]        # 0x17905224e
   1400547f1:	jo     0x1400547dc
   1400547f3:	(bad)  
   1400547f4:	cmp    al,0x7f
   1400547f6:	in     al,dx
   1400547f7:	(bad)  
   1400547f8:	cmp    ecx,DWORD PTR [rcx-0x74c30013]
   1400547fe:	in     eax,dx
   1400547ff:	(bad)  
   140054800:	cmp    eax,DWORD PTR [rbx+0x7239ffec]
   140054806:	jmp    0x121597d0a
   14005480b:	jmp    FWORD PTR [rdi]
   14005480d:	cmp    eax,0x352dffce
   140054812:	ret    
   140054813:	jmp    FWORD PTR [rdi]
   140054815:	xor    esi,DWORD PTR [rbx+0x643245ea]
   14005481b:	or     DWORD PTR [rax],eax
   14005481d:	add    BYTE PTR [rax],al
   14005481f:	add    BYTE PTR [rax],al
   140054821:	add    BYTE PTR [rax],al
   140054823:	add    BYTE PTR [rsi-0x5bf8eaaf],al
   140054829:	outs   dx,BYTE PTR ds:[rsi]
   14005482a:	sub    BYTE PTR [rsi-0x2a],bh
   14005482d:	popf   
   14005482e:	rex.RXB stc 
   140054830:	xlat   BYTE PTR ds:[rbx]
   140054831:	popf   
   140054832:	rex.RX call rbp
   140054835:	(bad)  
   140054836:	rex.XB call r10
   140054839:	xchg   esi,eax
   14005483a:	call   r8
   14005483d:	xchg   ebx,eax
   14005483e:	rex.RB inc r15d
   140054841:	mov    cs,WORD PTR [rdi+rdi*8-0x42]
   140054845:	mov    BYTE PTR [rdi-0x1],cl
   140054848:	mov    dl,0x7f
   14005484a:	rex.WRB inc QWORD PTR [r14+0x1eff2e5a]
   140054851:	adc    ecx,DWORD PTR [rdx-0x1]
   140054854:	adc    eax,0x14ff6513
   140054859:	sbb    DWORD PTR [rcx-0x1],edi
   14005485c:	sbb    DWORD PTR [rip+0x261eff86],ebx        # 0x1662447e8
   140054862:	xchg   ebx,eax
   140054863:	jmp    QWORD PTR [rip+0x2bffa432]        # 0x16c04ec9b
   140054869:	rex.XB mov r10d,0xd45733ff
   14005486f:	push   QWORD PTR [rdi]
   140054871:	ins    DWORD PTR es:[rdi],dx
   140054872:	out    0xff,eax
   140054874:	cmp    edi,DWORD PTR [rdi-0x14]
   140054877:	(bad)  
   140054878:	cmp    ecx,DWORD PTR [rdx-0x75c30013]
   14005487e:	in     eax,dx
   14005487f:	(bad)  
   140054880:	cmp    al,BYTE PTR [rcx+0x6c39ffeb]
   140054886:	jmp    0x11d517c8a
   14005488b:	jmp    FWORD PTR [rsi]
   14005488d:	cmp    ecx,ecx
   14005488f:	jmp    FWORD PTR [rip+0x3bffc134]        # 0x17c0509c9
   140054895:	xor    cl,BYTE PTR [rax+0x92]
   14005489b:	add    BYTE PTR [rax],al
   14005489d:	add    BYTE PTR [rax],al
   14005489f:	add    BYTE PTR [rax-0x3fdbe2a5],dl
   1400548a5:	mov    DWORD PTR [rip+0x4da0d9c1],edi        # 0x18da6226c
   1400548ab:	(bad)  
   1400548ac:	fcomp  DWORD PTR [rdi-0x612700b5]
   1400548b2:	rex.W call rdi
   1400548b5:	popf   
   1400548b6:	rex.RX call rsp
   1400548b9:	cwde   
   1400548ba:	rex.XB call r9
   1400548bd:	xchg   esp,eax
   1400548be:	rex.X dec edx
   1400548c1:	nop
   1400548c2:	rex.WX inc rax
   1400548c5:	mov    DWORD PTR [rsi-0x1],ecx
   1400548c8:	mov    bh,0x83
   1400548ca:	push   rdx
   1400548cb:	jmp    FWORD PTR [rdx+0x65ff4b7a]
   1400548d1:	rex.X xor eax,0x4f1119ff
   1400548d7:	call   QWORD PTR [rdx*1+0x1b16ff6d]
   1400548de:	jge    0x1400548df
   1400548e0:	sbb    esp,DWORD PTR [rax]
   1400548e2:	mov    edi,edi
   1400548e4:	and    ch,BYTE PTR [rbx+rbx*4]
   1400548e7:	jmp    FWORD PTR [rcx]
   1400548e9:	cmp    al,0xb2
   1400548eb:	push   QWORD PTR [rcx]
   1400548ed:	push   rdx
   1400548ee:	int    0xff
   1400548f0:	(bad)  
   1400548f1:	imul   esp,esi,0xffffffff
   1400548f4:	cmp    edi,DWORD PTR [rdi-0x14]
   1400548f7:	(bad)  
   1400548f8:	cmp    al,0x8b
   1400548fa:	in     eax,dx
   1400548fb:	(bad)  
   1400548fc:	cmp    al,0x8b
   1400548fe:	in     eax,dx
   1400548ff:	(bad)  
   140054900:	cmp    bh,BYTE PTR [rsi-0x15]
   140054903:	push   QWORD PTR [rdi]
   140054905:	fs out 0xff,eax
   140054908:	xor    DWORD PTR [rbp-0x2a],eax
   14005490b:	jmp    FWORD PTR [rip+0x2cffc636]        # 0x16d050f47
   140054911:	xor    al,0xbe
   140054913:	inc    BYTE PTR [rdx+0x31]
   140054916:	jo     0x14005494b
	...
   140054920:	mov    ebx,0xd3793d85
   140054925:	pushf  
   140054926:	rex.WRXB jmp 0x13f56eb05
   14005492c:	fldenv [rcx-0x602700b1]
   140054932:	rex.WXB (bad) 
   140054934:	fcomp  DWORD PTR [rsi-0x642900b8]
   14005493a:	rex.RB call r10
   14005493d:	xchg   esi,eax
   14005493e:	rex.X dec ebp
   140054941:	xchg   ecx,eax
   140054942:	inc    rcx
   140054945:	mov    cl,BYTE PTR [rsi-0x1]
   140054948:	mov    bh,0x83
   14005494a:	push   rcx
   14005494b:	jmp    FWORD PTR [rbx-0x6300aa83]
   140054951:	outs   dx,DWORD PTR ds:[rsi]
   140054952:	rex.B (bad) 
   140054954:	cmp    al,0x27
   140054956:	notrack call QWORD PTR [rdi]
   140054959:	adc    DWORD PTR [rax-0x1],ebx
   14005495c:	adc    al,0x17
   14005495e:	jne    0x14005495f
   140054960:	sbb    BYTE PTR [rip+0x261fff84],bl        # 0x1662548ea
   140054966:	xchg   esp,eax
   140054967:	jmp    QWORD PTR [rdi]
   140054969:	ss stos BYTE PTR es:[rdi],al
   14005496b:	jmp    FWORD PTR [rdi]
   14005496d:	rex.WR (bad) 
   14005496f:	push   QWORD PTR [rdi]
   140054971:	push   0xffffffff803bffe4
   140054976:	in     al,dx
   140054977:	(bad)  
   140054978:	cmp    ecx,DWORD PTR [rbp-0x73c40012]
   14005497e:	in     eax,dx
   14005497f:	(bad)  
   140054980:	cmp    DWORD PTR [rbx-0x15],edi
   140054983:	push   QWORD PTR [rsi]
   140054985:	pop    rbx
   140054986:	in     al,0xff
   140054988:	(bad)  
   140054989:	(bad)  
   14005498a:	sar    bh,1
   14005498c:	sub    eax,0x33ffc335
   140054991:	xor    ah,BYTE PTR [rbx+0x643145d3]
   140054997:	add    al,BYTE PTR [rax]
	...
   1400549a1:	add    BYTE PTR [rax],al
   1400549a3:	add    BYTE PTR [rcx-0x42f7c785],dh
   1400549a9:	xchg   DWORD PTR [rcx+0x5a],eax
   1400549ac:	retf   0x4893
   1400549af:	rcr    cl,0xa1
   1400549b2:	rex.WRXB std 
   1400549b4:	fcomp  DWORD PTR [rdi-0x622800b5]
   1400549ba:	rex.RXB call r11
   1400549bd:	xchg   edi,eax
   1400549be:	rex.X dec esi
   1400549c1:	xchg   edx,eax
   1400549c2:	rex.RXB inc r9d
   1400549c5:	mov    cl,BYTE PTR [rsi-0x1]
   1400549c8:	mov    dh,0x83
   1400549ca:	push   rdx
   1400549cb:	jmp    QWORD PTR [rbp+0x56ff5479]
   1400549d1:	cmp    ecx,DWORD PTR [rdx-0x1]
   1400549d4:	imul   eax,DWORD PTR [rbp+0x30],0x49131eff
   1400549db:	call   QWORD PTR [rip+0x16ff6613]        # 0x15704aff4
   1400549e1:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1c]
   1400549e5:	and    DWORD PTR [rbp-0x5dcfdb01],ecx
   1400549eb:	jmp    FWORD PTR [rip+0x37ffc048]        # 0x178050a39
   1400549f1:	data16 loop 0x1400549f3
   1400549f4:	cmp    eax,DWORD PTR [rcx-0x6fc30014]
   1400549fa:	out    dx,al
   1400549fb:	(bad)  
   1400549fc:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x1587c601]
   140054a03:	push   QWORD PTR [rbx+rdx*2]
   140054a06:	loopne 0x140054a07
   140054a08:	cs cmp cl,dl
   140054a0b:	jmp    FWORD PTR [rip+0x3cffc134]        # 0x17d050b45
   140054a11:	xor    al,BYTE PTR [rax+rdi*2+0x0]
	...
   140054a30:	mov    bh,0x81
   140054a32:	cmp    BYTE PTR [rcx],ch
   140054a34:	ret    0x3e8b
   140054a37:	mov    ss,edx
   140054a39:	cdq    
   140054a3a:	rex.R jmp 0x140054a11
   140054a3d:	cdq    
   140054a3e:	rex.XB dec r14d
   140054a41:	xchg   edx,eax
   140054a42:	rex.RX inc ecx
   140054a45:	mov    cl,BYTE PTR [rsi-0x1]
   140054a48:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140054a49:	ja     0x140054a97
   140054a4b:	dec    DWORD PTR [rax+0x2f]
   140054a4e:	rex.RB call FWORD PTR [rip+0x2cff4611]        # 0x16d049066
   140054a55:	sbb    eax,0x3957ff42
   140054a5a:	(bad)  
   140054a5b:	call   QWORD PTR [rdi]
   140054a5d:	adc    DWORD PTR [rbx-0x1],edx
   140054a60:	adc    al,0x17
   140054a62:	je     0x140054a63
   140054a64:	sbb    DWORD PTR [rsi],ebx
   140054a66:	xchg   bh,bh
   140054a68:	and    DWORD PTR [rbx],ebp
   140054a6a:	(bad)  
   140054a6b:	jmp    FWORD PTR [rbx]
   140054a6d:	rex.XB mov r10d,0xe06436ff
   140054a73:	(bad)  
   140054a74:	cmp    eax,DWORD PTR [rbx-0x6cc40014]
   140054a7a:	out    dx,eax
   140054a7b:	(bad)  
   140054a7c:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x168cc601]
   140054a83:	push   QWORD PTR [rdx]
   140054a85:	rex.WXB (bad) 
   140054a88:	cs (bad) 
   140054a8a:	(bad)  
   140054a8b:	jmp    FWORD PTR [rbx+rsi*1]
   140054a8e:	mov    esi,0x683244fc
   140054a93:	(bad)  
	...
   140054ab8:	scas   eax,DWORD PTR es:[rdi]
   140054ab9:	ja     0x140054ae9
   140054abb:	or     DWORD PTR [rax-0x3fa1cd81],edi
   140054ac1:	xchg   BYTE PTR [rsi],bh
   140054ac3:	(bad)
   140054ac6:	rex.X dec BYTE PTR [rcx+0x2f]
   140054aca:	rex.X jmp FWORD PTR [rax]
   140054acd:	(bad)  
   140054ace:	rex.RX jmp QWORD PTR [rsp+r10*1]
   140054ad2:	rex.RX jmp QWORD PTR [rbx]
   140054ad5:	adc    al,0x46
   140054ad7:	call   FWORD PTR [rdi+0x3d]
   140054ada:	xor    eax,0x461825ff
   140054adf:	call   QWORD PTR [rip+0x17ff6613]        # 0x15804b0f8
   140054ae5:	sbb    edi,DWORD PTR [rdi-0x1]
   140054ae8:	(bad)  
   140054ae9:	es xchg ebx,eax
   140054aeb:	jmp    FWORD PTR [rcx]
   140054aed:	cmp    eax,0x6235ffb3
   140054af2:	(bad)  
   140054af4:	cmp    eax,DWORD PTR [rsi-0x67c50013]
   140054afa:	lock (bad) 
   140054afc:	cmp    ecx,DWORD PTR [rbp+0x6c38ffed]
   140054b02:	call   0x115497d06
   140054b07:	jmp    FWORD PTR [rip+0x37ffc335]        # 0x178050e42
   140054b0d:	xor    ebx,DWORD PTR [rcx+0x643245bf]
   140054b13:	add    DWORD PTR [rax],eax
	...
   140054b3d:	add    BYTE PTR [rax],al
   140054b3f:	add    BYTE PTR [rdi+0x65012863],dl
   140054b45:	(bad)  
   140054b46:	sub    eax,0x3e35527c
   140054b4b:	dec    DWORD PTR [rdx+0x30]
   140054b4e:	rex inc DWORD PTR [rcx+0x28]
   140054b52:	rex.X (bad) 
   140054b54:	cmp    BYTE PTR [rdx],ah
   140054b56:	rex.XB (bad) 
   140054b58:	cmp    BYTE PTR [rdx],ah
   140054b5a:	rex.XB jmp QWORD PTR [r10+0x40]
   140054b5e:	call   QWORD PTR ss:[rdi]
   140054b61:	adc    DWORD PTR [rbx-0x1],edx
   140054b64:	adc    al,0x18
   140054b66:	ja     0x140054b67
   140054b68:	sbb    al,0x21
   140054b6a:	mov    edi,?
   140054b6c:	(bad)  
   140054b6d:	(bad)  
   140054b6e:	stos   DWORD PTR es:[rdi],eax
   140054b6f:	push   QWORD PTR [rax+riz*2]
   140054b72:	(bad)  
   140054b74:	cmp    ecx,DWORD PTR [rdx-0x62c50013]
   140054b7a:	lock (bad) 
   140054b7c:	cmp    ecx,DWORD PTR [rbp+0x6537ffee]
   140054b82:	out    0xff,al
   140054b84:	(bad)  
   140054b85:	ds iret 
   140054b87:	jmp    FWORD PTR [rip+0x3effc134]        # 0x17f050cc1
   140054b8d:	xor    bh,BYTE PTR [rsi+0x64]
	...
   140054bc4:	ins    DWORD PTR es:[rdi],dx
   140054bc5:	rex.B sbb al,0x2
   140054bc8:	cwde   
   140054bc9:	(bad)  
   140054bca:	sbb    ebp,DWORD PTR [rdx-0xdc9561]
   140054bd0:	jle    0x140054c26
   140054bd2:	sub    edi,edi
   140054bd4:	(bad)  
   140054bd5:	rex cmp edi,edi
   140054bd8:	rex.WRB xor r8b,BYTE PTR [r8-0x1]
   140054bdc:	jo     0x140054c28
   140054bde:	jmp    FWORD PTR ss:[rcx]
   140054be1:	sbb    eax,DWORD PTR [rbp-0x1]
   140054be4:	adc    al,0x14
   140054be6:	push   0xffffffffffffffff
   140054be8:	sbb    DWORD PTR [rsi],ebx
   140054bea:	test   edi,edi
   140054bec:	and    al,0x32
   140054bee:	movabs ds:0xee8f3bffd75d33ff,eax
   140054bf7:	(bad)  
   140054bf8:	cmp    esp,DWORD PTR [rsi-0x73c4000e]
   140054bfe:	in     eax,dx
   140054bff:	push   QWORD PTR [rsi]
   140054c01:	pop    rsp
   140054c02:	jrcxz  0x140054c03
   140054c04:	cs cmp ecx,ecx
   140054c07:	jmp    FWORD PTR [rip+0x46f7bc34]        # 0x186fd0841
   140054c0d:	xor    ah,BYTE PTR [rbp+0x13]
	...
   140054c48:	popf   
   140054c49:	sbb    DWORD PTR fs:[rcx],ecx
   140054c4c:	mov    esp,0xc3b7297f
   140054c51:	and    DWORD PTR [rbx],0xffffffff
   140054c54:	movabs ds:0x65ff2d537cff1d6d,eax
   140054c5d:	cmp    dil,r15b
   140054c60:	push   0x47
   140054c62:	call   QWORD PTR ss:[rsi]
   140054c65:	adc    DWORD PTR [rdi-0x1],edx
   140054c68:	(bad)  
   140054c69:	sbb    bh,BYTE PTR [rbp-0x1]
   140054c6c:	and    DWORD PTR [rbx+rbx*4],ebp
   140054c6f:	push   QWORD PTR [rdx]
   140054c71:	pop    rdx
   140054c72:	sar    edi,cl
   140054c74:	cmp    edx,DWORD PTR [rsi-0x4fc60011]
   140054c7a:	repnz (bad) 
   140054c7c:	cmp    cl,BYTE PTR [rdx+0x5334ffed]
   140054c82:	fdivp  st(7),st
   140054c84:	sub    eax,0x39ffc536
   140054c89:	xor    edx,DWORD PTR [rdx+0xb2]
	...
   140054ccb:	add    BYTE PTR [rbp-0x75fae69c],bl
   140054cd1:	pop    rax
   140054cd2:	sbb    eax,0x205d8f70
   140054cd7:	int    0xa8
   140054cd9:	jo     0x140054cf4
   140054cdb:	dec    BYTE PTR [rsi-0x6b00dca1]
   140054ce1:	fs sub bh,bh
   140054ce4:	and    eax,0x14ff4819
   140054ce9:	(bad)  
   140054cea:	jb     0x140054ceb
   140054cec:	(bad)  
   140054ced:	and    eax,0x5631ff92
   140054cf2:	(bad)  
   140054cf3:	(bad)  
   140054cf4:	cmp    ah,BYTE PTR [rax-0x44c60010]
   140054cfa:	repz (bad) 
   140054cfc:	cmp    al,BYTE PTR [rsi+0x4932ffec]
   140054d02:	fdivr  st,st(7)
   140054d04:	sub    eax,0x3fffc235
   140054d09:	xor    bh,BYTE PTR [rbp+0x5e]
	...
   140054d54:	jbe    0x140054d9e
   140054d56:	sbb    al,BYTE PTR [rcx]
   140054d58:	adc    DWORD PTR [rcx+0x1a],0x186ea753
   140054d5f:	lock movabs eax,ds:0x15ff374769ff1b6b
   140054d69:	adc    esp,DWORD PTR [rcx-0x1]
   140054d6c:	sbb    esp,DWORD PTR [rax]
   140054d6e:	mov    edi,edi
   140054d70:	(bad)  
   140054d71:	push   rax
   140054d72:	(bad)  
   140054d73:	(bad)  
   140054d74:	cmp    DWORD PTR [rax+rsi*8-0xe37c701],ebp
   140054d7b:	(bad)  
   140054d7c:	cmp    DWORD PTR [rdi-0x15],edi
   140054d7f:	push   QWORD PTR [rax]
   140054d81:	(bad)  
   140054d82:	sar    bh,1
   140054d84:	sub    eax,0x46f6bd34
   140054d89:	xor    ah,BYTE PTR [rbx+0x11]
	...
   140054ddc:	mov    dl,BYTE PTR [rbp+0x12]
   140054ddf:	xor    DWORD PTR [rax-0x570fe78c],esi
   140054de5:	jno    0x140054e0c
   140054de7:	call   FWORD PTR [rsi]
   140054de9:	adc    eax,0x1b17ff4f
   140054dee:	jg     0x140054def
   140054df0:	sub    al,0x49
   140054df2:	mov    esi,0xefba3bff
   140054df7:	(bad)  
   140054df8:	cmp    edx,ecx
   140054dfa:	out    dx,eax
   140054dfb:	(bad)  
   140054dfc:	cmp    BYTE PTR [rbx-0x17],dh
   140054dff:	jmp    FWORD PTR [rsi]
   140054e01:	cmp    ecx,ecx
   140054e03:	(bad)  
   140054e04:	cmp    BYTE PTR [rbx],dh
   140054e06:	xchg   esp,eax
   140054e07:	scas   eax,DWORD PTR es:[rdi]
	...
   140054e60:	xchg   edx,eax
   140054e61:	pop    rbx
   140054e62:	adc    DWORD PTR [rdi-0x4b],ecx
   140054e65:	jns    0x140054e82
   140054e67:	std    
   140054e68:	pop    rdx
   140054e69:	cmp    eax,0x1616ff3d
   140054e6e:	jo     0x140054e6f
   140054e70:	sub    BYTE PTR [rsi],bh
   140054e72:	mov    cl,0xff
   140054e74:	cmp    al,0xc2
   140054e76:	in     eax,dx
   140054e77:	(bad)  
   140054e78:	cmp    al,0xd2
   140054e7a:	in     eax,dx
   140054e7b:	push   QWORD PTR [rsi]
   140054e7d:	movsxd esp,ebx
   140054e7f:	jmp    FWORD PTR [rip+0x3fffc435]        # 0x1800512ba
   140054e85:	xor    bh,BYTE PTR [rbx+0x53]
	...
   140054ee4:	pushf  
   140054ee5:	movsxd edx,DWORD PTR [rcx]
   140054ee7:	mov    WORD PTR [rsi+0x18ff2e66],ss
   140054eed:	adc    ebx,DWORD PTR [rbp-0x1]
   140054ef0:	and    esi,DWORD PTR [rdx]
   140054ef2:	movabs eax,ds:0xeccb3dffecc43dff
   140054efb:	push   QWORD PTR [rbx]
   140054efd:	push   rcx
   140054efe:	(bad)  
   140054f00:	xor    BYTE PTR [rbx],dh
   140054f02:	mov    bl,0xe7
   140054f04:	xor    r12b,BYTE PTR [r15+0x8]
	...
   140054f64:	mov    WORD PTR [rsi+0xf],ss
   140054f67:	or     DWORD PTR [rbp+0x43d41f6e],esp
   140054f6d:	sub    eax,0x251dff46
   140054f72:	mov    ?,edi
   140054f74:	cmp    al,0xbe
   140054f76:	(bad)  
   140054f77:	(bad)  
   140054f78:	cmp    al,0xba
   140054f7a:	in     al,dx
   140054f7b:	push   QWORD PTR [rax]
   140054f7d:	rex (bad) 
   140054f7f:	(bad)  
   140054f80:	cmp    al,0x32
   140054f82:	test   DWORD PTR [rax+rax*1+0x0],eax
	...
   140054fe5:	add    BYTE PTR [rax],al
   140054fe7:	add    BYTE PTR [rbx-0x72c0ecaa],cl
   140054fed:	(bad)  
   140054fee:	xor    al,0xfd
   140054ff0:	sbb    BYTE PTR [rdx],bl
   140054ff2:	je     0x140054ff3
   140054ff4:	cmp    DWORD PTR [rdx-0x67c6001f],ebp
   140054ffa:	call   0xfd3a7efe
   140054fff:	repz rex.XB xor bpl,BYTE PTR [r13+0x18]
	...
   140055068:	lea    edx,[rdi+0x12]
   14005506b:	add    DWORD PTR [rdx+rsi*2+0x242fa622],ebp
   140055072:	pop    rax
   140055073:	push   QWORD PTR [rcx]
   140055075:	jno    0x140055045
   140055077:	push   QWORD PTR [rbx]
   140055079:	pop    rcx
   14005507a:	xlat   BYTE PTR ds:[rbx]
   14005507b:	(bad)  
   14005507c:	cmp    al,0x32
   14005507e:	test   DWORD PTR [rsi+0x0],edi
	...
   1400550e9:	add    BYTE PTR [rax],al
   1400550eb:	add    BYTE PTR [rdx-0x7eeae29d],bl
   1400550f1:	push   rdi
   1400550f2:	(bad)  
   1400550f3:	fisub  WORD PTR [rcx]
   1400550f5:	sub    DWORD PTR [rdx-0x5dcdce01],ebx
   1400550fb:	ret    
   1400550fc:	(bad)  
   1400550fd:	xor    dh,BYTE PTR [rdi+0x7]
	...
   140055170:	jge    0x1400551c3
   140055172:	sub    DWORD PTR [rcx],ebx
   140055174:	rex.WB
   140055175:	ss (bad) 
   140055177:	cmp    BYTE PTR [esi*2+0xb],ch
	...
   14005521f:	add    bh,bh
   140055221:	(bad)  
   140055222:	(bad)  
   140055223:	(bad)  
   140055224:	(bad)  
   140055225:	clc    
   140055226:	(bad)  
   140055227:	(bad)  
   140055228:	(bad)  
   140055229:	clc    
   14005522a:	(bad)  
   14005522b:	(bad)  
   14005522c:	push   rax
   14005522e:	(bad)  
   14005522f:	(bad)  
   140055230:	push   rax
   140055232:	ud0    edi,edi
   140055235:	loopne 0x14005523e
   140055237:	(bad)  
   140055238:	jmp    rax
   14005523a:	(bad)  
   14005523b:	cld    
   14005523c:	inc    eax
   14005523e:	add    edi,eax
   140055240:	inc    DWORD PTR [rax+0xf8f001]
   140055246:	add    BYTE PTR [rax-0x10],ah
   140055249:	add    BYTE PTR [rax],al
   14005524b:	add    eax,eax
   14005524d:	add    BYTE PTR [rax],al
   14005524f:	add    DWORD PTR [rax+0x30000],eax
   140055255:	add    BYTE PTR [rax],al
   140055257:	add    eax,DWORD PTR [rax]
   140055259:	add    BYTE PTR [rax],al
   14005525b:	add    eax,DWORD PTR [rax-0xff90000]
   140055261:	add    BYTE PTR [rax],al
   140055263:	(bad)  
   140055264:	cld    
   140055265:	add    BYTE PTR [rax],al
   140055267:	(bad)  
   140055268:	inc    DWORD PTR [rax]
   14005526a:	add    BYTE PTR [rdi],cl
   14005526c:	inc    DWORD PTR [rax-0x3f00f100]
   140055272:	add    BYTE PTR [rdi],bl
   140055274:	jmp    rax
   140055276:	add    BYTE PTR [rdi],bl
   140055278:	(bad)  
   140055279:	clc    
   14005527a:	add    BYTE PTR [rdi],bl
   14005527c:	(bad)  
   14005527d:	inc    BYTE PTR [rax]
   14005527f:	(bad)  
   140055280:	(bad)  
   140055281:	inc    DWORD PTR [rax]
   140055283:	(bad)  
   140055284:	(bad)  
   140055285:	inc    DWORD PTR [rax-0x7f0000c1]
   14005528b:	jg     0x14005528c
   14005528d:	inc    eax
   14005528f:	jg     0x140055290
   140055291:	inc    eax
   140055293:	(bad)  
   140055294:	(bad)  
   140055295:	jmp    rax
   140055297:	(bad)  
   140055298:	(bad)  
   140055299:	push   rcx
   14005529b:	(bad)  
   14005529c:	(bad)  
   14005529d:	(bad)  
   14005529e:	(bad)  
   14005529f:	jmp    FWORD PTR [rax]
   1400552a1:	add    BYTE PTR [rax],al
   1400552a3:	add    BYTE PTR [rax],dl
   1400552a5:	add    BYTE PTR [rax],al
   1400552a7:	add    BYTE PTR [rax],ah
   1400552a9:	add    BYTE PTR [rax],al
   1400552ab:	add    BYTE PTR [rcx],al
   1400552ad:	add    BYTE PTR [rax],ah
   1400552af:	add    BYTE PTR [rax],al
   1400552b1:	add    BYTE PTR [rax],al
   1400552b3:	add    BYTE PTR [rax+0x4],al
	...
   1400552de:	add    BYTE PTR [rax],al
   1400552e0:	xor    BYTE PTR [rdx],bh
   1400552e2:	xor    al,0x7
   1400552e4:	cmp    BYTE PTR [rdx+0x46],cl
   1400552e7:	sbb    BYTE PTR [rax],al
	...
   14005531d:	add    BYTE PTR [rax],al
   14005531f:	add    BYTE PTR [rbp+0x7c],cl
   140055322:	xchg   DWORD PTR [rbp+0x3c],esp
   140055325:	mov    ch,0xee
   140055327:	test   DWORD PTR [rax+rdi*2-0x73],0x202f4076
   14005532f:	add    DWORD PTR [rax],eax
	...
   140055359:	add    BYTE PTR [rax],al
   14005535b:	add    BYTE PTR [rdx],bh
   14005535d:	sub    DWORD PTR [rsi],ebx
   14005535f:	add    DWORD PTR [rcx-0x78],eax
   140055362:	int    0xd2
   140055364:	cmp    ebx,DWORD PTR [rbx-0x71c40011]
   14005536a:	in     eax,dx
   14005536b:	dec    DWORD PTR [rdx+0x62]
   14005536e:	xchg   esp,eax
   14005536f:	add    DWORD PTR [rax],0x0
	...
   140055399:	add    BYTE PTR [rax],al
   14005539b:	add    BYTE PTR [rdi+rbp*1+0x47],al
   14005539f:	rex.W
   1400553a0:	cs rex.WR ret 0x35ff
   1400553a5:	(bad)  
   1400553a6:	(bad)  
   1400553a8:	cmp    BYTE PTR [rbp-0x1a],ch
   1400553ab:	(bad)  
   1400553ac:	cmp    dh,BYTE PTR [rsi-0x16]
   1400553af:	dec    BYTE PTR [rdi+0x59]
   1400553b2:	jl     0x140055411
	...
   1400553c4:	rex.WXB xor dl,BYTE PTR [r11+r8*2+0x0]
	...
   1400553d1:	add    BYTE PTR [rax],al
   1400553d3:	add    BYTE PTR [rbp+rax*2+0x14],dh
   1400553d7:	sub    al,0x5c
   1400553d9:	xor    edx,DWORD PTR [rdi+riz*1]
   1400553dc:	(bad)  
   1400553dd:	sbb    ebp,DWORD PTR [rax-0x25]
   1400553e0:	sbb    al,0x23
   1400553e2:	mov    ?,edi
   1400553e4:	es ss test eax,0xc84f2fff
   1400553eb:	push   QWORD PTR [rdi]
   1400553ed:	push   0x7b3cffe3
   1400553f2:	in     eax,0xf8
   1400553f4:	push   rcx
   1400553f5:	pop    rdx
   1400553f6:	outs   dx,BYTE PTR ds:[rsi]
   1400553f7:	push   rax
   1400553f8:	add    BYTE PTR [rax],al
   1400553fa:	add    BYTE PTR [rax],al
   1400553fc:	rex.XB and eax,0x34430217
   140055402:	jbe    0x140055384
   140055404:	cmp    esi,DWORD PTR [rbx]
   140055406:	mov    esi,DWORD PTR [rdi+0x0]
   140055409:	add    BYTE PTR [rax],al
   14005540b:	add    BYTE PTR [rsi+0x41],ch
   14005540e:	(bad)  
   14005540f:	btr    DWORD PTR [rdx+0x2f],edi
   140055413:	movabs ds:0xff4180b6fe4791cd,eax
   14005541c:	rex.XB sub eax,0x1715ff46
   140055422:	jae    0x140055423
   140055424:	sbb    al,0x22
   140055426:	(bad)  
   140055427:	jmp    QWORD PTR [rdi]
   140055429:	cmp    BYTE PTR [rbx-0x2ca8cd01],ch
   14005542f:	(bad)  
   140055430:	cmp    bh,BYTE PTR [rcx-0x16]
   140055433:	(bad)  
   140055434:	cmp    al,0x8a
   140055436:	in     al,dx
   140055437:	std    
   140055438:	rex.X imul esi,DWORD PTR [rbx-0x4dbbc642],0xbf352ed1
   140055443:	stc    
   140055444:	rex.B sub al,0x4d
   140055447:	sbb    BYTE PTR [rax-0x34c4e1a4],dl
   14005544d:	xchg   edx,eax
   14005544e:	rex.X fst st(7)
   140055451:	pushf  
   140055452:	rex.RX call rdx
   140055455:	xchg   ebp,eax
   140055456:	rex.XB inc r12d
   140055459:	mov    WORD PTR [rbp-0x1],cs
   14005545c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005545d:	jbe    0x1400554a5
   14005545f:	jmp    FWORD PTR [rsi+rbx*1]
   140055462:	rex.WRB call QWORD PTR [r14]
   140055465:	sbb    DWORD PTR [rdx-0x1],edi
   140055468:	and    BYTE PTR [rcx],ch
   14005546a:	xchg   edi,eax
   14005546b:	jmp    FWORD PTR [rsi]
   14005546d:	rex.WX ret 
   14005546f:	(bad)  
   140055470:	cmp    DWORD PTR [rbp-0x17],esi
   140055473:	(bad)  
   140055474:	cmp    al,0x8b
   140055476:	in     eax,dx
   140055477:	(bad)  
   140055478:	cmp    DWORD PTR [rcx+rbp*8-0x1],esi
   14005547c:	xor    BYTE PTR [rax-0x30],al
   14005547f:	push   QWORD PTR [rip+0xb09e33]        # 0x140b5f2b8
   140055485:	add    BYTE PTR [rax],al
   140055487:	add    BYTE PTR [rcx-0x31a5c27d],bh
   14005548d:	xchg   edi,eax
   14005548e:	rex.WX (bad) 
   140055490:	fcomp  DWORD PTR [rdi-0x662a01b5]
   140055496:	rex.R inc edi
   140055499:	mov    cs,WORD PTR [rbx-0x1]
   14005549c:	scas   eax,DWORD PTR es:[rdi]
   14005549d:	jg     0x1400554f2
   14005549f:	jmp    QWORD PTR [rsi+0x45]
   1400554a2:	notrack call QWORD PTR [rdi]
   1400554a5:	adc    al,0x5f
   1400554a7:	call   FWORD PTR [rdx]
   1400554a9:	and    BYTE PTR [rax-0x4ac0d501],cl
   1400554af:	(bad)  
   1400554b0:	cmp    DWORD PTR [rdi+riz*8-0x1],esi
   1400554b4:	cmp    ecx,DWORD PTR [rbp+0x6837ffee]
   1400554ba:	out    0xff,al
   1400554bc:	cs cmp bh,al
   1400554bf:	inc    DWORD PTR [rax+0x32]
   1400554c2:	jne    0x140055517
	...
   1400554d0:	movabs eax,ds:0xbe943a8ac32e2d6e
   1400554d9:	xchg   BYTE PTR [rbp-0x10],al
   1400554dc:	pop    rax
   1400554dd:	cmp    eax,DWORD PTR [rsi-0x1]
   1400554e0:	and    al,0x15
   1400554e2:	rex.RB (bad) 
   1400554e4:	cmp    eax,0x16ff4128
   1400554e9:	sbb    DWORD PTR [rax-0x1],edi
   1400554ec:	and    eax,0x38ffa634
   1400554f1:	je     0x1400554d8
   1400554f3:	(bad)  
   1400554f4:	cmp    edx,DWORD PTR [rcx+0x5b35ffee]
   1400554fa:	loopne 0x1400554fb
   1400554fc:	(bad)  
   1400554fd:	xor    eax,0x273ceeb8
   140055502:	cmp    al,0x8
	...
   140055518:	push   0x41
   14005551a:	(bad)  
   14005551b:	and    BYTE PTR [rbp+0x4c],dh
   14005551e:	(bad)  
   14005551f:	jmp    0x13f408d7a
   140055524:	push   rsi
   140055525:	(bad)  
   140055526:	cmp    al,0xff
   140055528:	sbb    dl,BYTE PTR [rsi]
   14005552a:	pop    rsi
   14005552b:	jmp    QWORD PTR [rax]
   14005552d:	sub    bl,BYTE PTR [rax-0x1c8ac801]
   140055533:	(bad)  
   140055534:	cmp    edx,DWORD PTR [rdi+0x4e33ffef]
   14005553a:	fdivr  st,st(7)
   14005553c:	(bad)  
   14005553d:	xor    ebx,DWORD PTR [rax+0x9b]
	...
   14005555b:	add    BYTE PTR [rdx-0x5fcee59d],bl
   140055561:	imul   ebx,DWORD PTR [rdi],0x285a86ce
   140055567:	dec    BYTE PTR [rsi+0x35]
   14005556a:	rex call FWORD PTR [rdx]
   14005556d:	and    BYTE PTR [rdi-0x1f85c901],al
   140055573:	(bad)  
   140055574:	cmp    DWORD PTR [rdi+0x4230fff0],ebx
   14005557a:	iret   
   14005557b:	inc    DWORD PTR [rbx+0x31]
   14005557e:	push   0x44
	...
   1400555a4:	mov    dl,BYTE PTR [rdi+0x15]
   1400555a7:	pop    rbp
   1400555a8:	cdq    
   1400555a9:	data16 and al,0xfb
   1400555ac:	sbb    DWORD PTR [rcx],ebx
   1400555ae:	outs   dx,BYTE PTR ds:[rsi]
   1400555af:	push   QWORD PTR [rax+rax*4]
   1400555b2:	fcos   
   1400555b4:	cmp    DWORD PTR [rbx+0x3831ffed],esp
   1400555ba:	mov    ebx,0x372539e8
   1400555bf:	add    al,0x0
	...
   1400555e5:	add    BYTE PTR [rax],al
   1400555e7:	add    BYTE PTR [rbx+riz*2+0x33477613],bl
   1400555ee:	rex.WRX push QWORD PTR [rcx]
   1400555f1:	jle    0x1400555be
   1400555f3:	(bad)  
   1400555f4:	cmp    BYTE PTR [rbp+riz*8-0x69ccc701],dl
   1400555fb:	nop
	...
   140055628:	push   rsi
   140055629:	xor    al,BYTE PTR [rdi]
   14005562b:	add    al,BYTE PTR [rax+0x2bc42b54]
   140055631:	push   0xffffffffffffffb3
   140055633:	push   QWORD PTR [rip+0x43fcd872]        # 0x184022eab
   140055639:	(bad)  
   14005563a:	pop    rsp
   14005563b:	(bad)  
	...
   14005566c:	mov    ds,WORD PTR [rcx+0x16]
   14005566f:	(bad)  
   140055670:	rex.B
   140055671:	rex.RB jle 0x14005566a
   140055674:	cmp    BYTE PTR [rbx*4+0x92],bh
	...
   1400556af:	add    BYTE PTR [rbx+rsi*1+0x2f],cl
   1400556b3:	and    BYTE PTR [rdx],ch
   1400556b5:	sbb    eax,0x23b
	...
   1400556c6:	add    BYTE PTR [rax],al
   1400556c8:	cld    
   1400556c9:	inc    DWORD PTR [rax]
   1400556cb:	add    ah,bh
   1400556cd:	(bad)  
   1400556ce:	add    BYTE PTR [rax],al
   1400556d0:	clc    
   1400556d1:	(bad)  
   1400556d2:	add    BYTE PTR [rax],al
   1400556d4:	clc    
   1400556d5:	(bad)  
   1400556d6:	add    BYTE PTR [rax],al
   1400556d8:	loopne 0x1400556e2
   1400556da:	add    BYTE PTR [rax],al
   1400556dc:	add    BYTE PTR [rax],0x0
   1400556df:	add    BYTE PTR [rax],al
   1400556e1:	add    DWORD PTR [rax],eax
   1400556e3:	add    BYTE PTR [rax],al
   1400556e5:	add    DWORD PTR [rax],eax
   1400556e7:	add    al,al
   1400556e9:	add    DWORD PTR [rax],eax
   1400556eb:	add    al,dh
   1400556ed:	add    eax,DWORD PTR [rax]
   1400556ef:	add    al,bh
   1400556f1:	add    eax,DWORD PTR [rax]
   1400556f3:	add    dh,bh
   1400556f5:	add    eax,DWORD PTR [rax]
   1400556f7:	add    bh,bh
   1400556f9:	(bad)  
   1400556fa:	add    BYTE PTR [rax],al
   1400556fc:	inc    DWORD PTR [rdi]
   1400556fe:	add    BYTE PTR [rax],al
   140055700:	dec    DWORD PTR [rdi-0x30010000]
   140055706:	add    BYTE PTR [rax],al
   140055708:	add    BYTE PTR [rax],al
   14005570a:	add    DWORD PTR [rax],eax
   14005570c:	or     al,BYTE PTR [rax]
   14005570e:	xor    BYTE PTR [rax],dh
   140055710:	adc    BYTE PTR [rax],al
   140055712:	add    DWORD PTR [rax],eax
   140055714:	add    al,0x0
   140055716:	push   0x1000006
   14005571b:	add    BYTE PTR [rax],ah
   14005571d:	and    BYTE PTR [rax],dl
   14005571f:	add    BYTE PTR [rcx],al
   140055721:	add    BYTE PTR [rax+rax*1],al
   140055724:	call   0x14205572b
   140055729:	add    BYTE PTR [rax],dl
   14005572b:	adc    BYTE PTR [rax],dl
   14005572d:	add    BYTE PTR [rcx],al
   14005572f:	add    BYTE PTR [rax+rax*1],al
   140055732:	sub    BYTE PTR [rcx],al
   140055734:	add    BYTE PTR [rax],al
   140055736:	add    eax,DWORD PTR [rax]
   140055738:	xor    BYTE PTR [rax],dh
   14005573a:	add    BYTE PTR [rax],al
   14005573c:	add    DWORD PTR [rax],eax
   14005573e:	or     BYTE PTR [rax],al
   140055740:	test   al,0xe
   140055742:	add    BYTE PTR [rax],al
   140055744:	add    al,0x0
   140055746:	and    BYTE PTR [rax],ah
   140055748:	add    BYTE PTR [rax],al
   14005574a:	add    DWORD PTR [rax],eax
   14005574c:	or     BYTE PTR [rax],al
   14005574e:	test   al,0x8
   140055750:	add    BYTE PTR [rax],al
   140055752:	add    eax,0x101000
   140055757:	add    BYTE PTR [rcx],al
   140055759:	add    BYTE PTR [rax],cl
   14005575b:	add    BYTE PTR [rax+0x5],ch
   14005575e:	add    BYTE PTR [rax],al
   140055760:	(bad)  
   140055761:	add    BYTE PTR [rax],al
   140055763:	add    BYTE PTR [rax],al
   140055765:	add    BYTE PTR [rcx],al
   140055767:	add    BYTE PTR [rax],ah
   140055769:	add    ah,cl
   14005576b:	test   al,0x0
   14005576d:	add    BYTE PTR [rdi],al
   14005576f:	add    BYTE PTR [rax],dh
   140055771:	xor    BYTE PTR [rax],al
   140055773:	add    BYTE PTR [rcx],al
   140055775:	add    BYTE PTR [rax],ah
   140055777:	add    BYTE PTR [rax+0x8000025],ch
   14005577d:	add    BYTE PTR [rax],ah
   14005577f:	and    BYTE PTR [rax],al
   140055781:	add    BYTE PTR [rcx],al
   140055783:	add    BYTE PTR [rax],ah
   140055785:	add    BYTE PTR [rax+0x9000010],ch
   14005578b:	add    BYTE PTR [rax],dl
   14005578d:	adc    BYTE PTR [rax],al
   14005578f:	add    BYTE PTR [rcx],al
   140055791:	add    BYTE PTR [rax],ah
   140055793:	add    BYTE PTR [rax+0x4],ch
   140055796:	add    BYTE PTR [rax],al
   140055798:	or     al,BYTE PTR [rax]
	...
   1400557ba:	(bad)  
   1400557bb:	add    BYTE PTR [rbp+0x0],al
   1400557be:	jb     0x1400557c0
   1400557c0:	jb     0x1400557c2
   1400557c2:	outs   dx,DWORD PTR ds:[rsi]
   1400557c3:	add    BYTE PTR [rdx+0x0],dh
   1400557c6:	and    BYTE PTR [rax],al
   1400557c8:	imul   eax,DWORD PTR [rax],0x69006e
   1400557ce:	je     0x1400557d0
   1400557d0:	imul   eax,DWORD PTR [rax],0x6c0061
   1400557d6:	imul   eax,DWORD PTR [rax],0x69007a
   1400557dc:	outs   dx,BYTE PTR ds:[rsi]
   1400557dd:	add    BYTE PTR [rdi+0x0],ah
   1400557e0:	and    BYTE PTR [rax],al
   1400557e2:	(bad)  
   1400557e3:	add    BYTE PTR [rax+0x0],dh
   1400557e6:	jo     0x1400557e8
   1400557e8:	ins    BYTE PTR es:[rdi],dx
   1400557e9:	add    BYTE PTR [rcx+0x0],ch
   1400557ec:	movsxd eax,DWORD PTR [rax]
   1400557ee:	(bad)  
   1400557ef:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400557f3:	add    BYTE PTR [rdi+0x0],ch
   1400557f6:	outs   dx,BYTE PTR ds:[rsi]
   1400557f7:	add    BYTE PTR [rsi],ch
   1400557f9:	add    BYTE PTR [rdi],cl
   1400557fb:	add    BYTE PTR [rcx+0x0],cl
   1400557fe:	outs   dx,BYTE PTR ds:[rsi]
   1400557ff:	add    BYTE PTR [rbx+0x0],dh
   140055802:	je     0x140055804
   140055804:	(bad)  
   140055805:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140055809:	add    BYTE PTR [rbp+0x0],ah
   14005580c:	jb     0x14005580e
   14005580e:	and    BYTE PTR [rax],al
   140055810:	add    BYTE PTR [r10+0x0],r14b
   140055814:	jb     0x140055816
   140055816:	outs   dx,DWORD PTR ds:[rsi]
   140055817:	add    BYTE PTR [rdx+0x0],dh
	...
   14005583a:	sbb    DWORD PTR [rax],eax
   14005583c:	movabs ds:0xfc30b130ea30d730,al
   140055845:	xor    BYTE PTR [rdi-0xccf18d0],dh
   14005584b:	xor    BYTE PTR [rsi+0x30],ch
   14005584e:	sbb    eax,0x16671f52
   140055853:	push   rbx
   140055854:	sub    eax,0xa8306b4e
   140055859:	xor    cl,ch
   14005585b:	xor    ah,bh
   14005585d:	xor    BYTE PTR [rax+rsi*1+0x7a],cl
   140055861:	jbe    0x140055882
   140055863:	jne    0x1400558bc
   140055865:	xor    BYTE PTR [rsi+0x30],bh
   140055868:	push   rdi
   140055869:	xor    BYTE PTR [rdi+0x30],bl
   14005586c:	add    dh,BYTE PTR [rax]
   14005586e:	or     DWORD PTR [rax],eax
   140055870:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055871:	xor    bl,dh
   140055873:	xor    BYTE PTR [rcx-0x3cf37d0],bh
   140055879:	xor    cl,ch
   14005587b:	xor    BYTE PTR [rax-0x3cf16d0],ch
   140055881:	xor    BYTE PTR [rax],al
   140055883:	add    BYTE PTR [rax],al
   140055885:	add    BYTE PTR [rax],al
	...
