
62f1ad51806af5c9031851373f8c404e371514d3b0c8e236d6ea0cb488c4a56b.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x2a1d9]        # 0x14002b1e0
   140001007:	jmp    0x1400059c4
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x2a1d9]        # 0x14002b1f0
   140001017:	jmp    0x1400059c4
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x2a1d9]        # 0x14002b200
   140001027:	jmp    0x1400059c4
   14000102c:	lea    rcx,[rip+0x2a1dd]        # 0x14002b210
   140001033:	jmp    0x1400059c4
   140001038:	lea    rcx,[rip+0x2a1e1]        # 0x14002b220
   14000103f:	jmp    0x1400059c4
   140001044:	lea    rcx,[rip+0x2a1e5]        # 0x14002b230
   14000104b:	jmp    0x1400059c4
   140001050:	lea    rcx,[rip+0x2a1e9]        # 0x14002b240
   140001057:	jmp    0x1400059c4
   14000105c:	lea    rcx,[rip+0x2a1ed]        # 0x14002b250
   140001063:	jmp    0x1400059c4
   140001068:	lea    rcx,[rip+0x2a1f1]        # 0x14002b260
   14000106f:	jmp    0x1400059c4
   140001074:	int3   
   140001075:	int3   
   140001076:	int3   
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	mov    rax,rcx
   140001083:	ret    
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	mov    rax,rcx
   140001093:	ret    
   140001094:	int3   
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	mov    rax,QWORD PTR [rdx]
   1400010a3:	mov    QWORD PTR [rcx],rax
   1400010a6:	movzx  eax,BYTE PTR [r8]
   1400010aa:	mov    BYTE PTR [rcx+0x8],al
   1400010ad:	mov    rax,rcx
   1400010b0:	ret    
   1400010b1:	int3   
   1400010b2:	int3   
   1400010b3:	int3   
   1400010b4:	int3   
   1400010b5:	int3   
   1400010b6:	int3   
   1400010b7:	int3   
   1400010b8:	int3   
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	mov    rax,rcx
   1400010c3:	ret    
   1400010c4:	int3   
   1400010c5:	int3   
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	sub    rsp,0x28
   1400010d4:	call   0x140003e20
   1400010d9:	test   eax,eax
   1400010db:	sete   al
   1400010de:	add    rsp,0x28
   1400010e2:	ret    
   1400010e3:	int3   
   1400010e4:	int3   
   1400010e5:	int3   
   1400010e6:	int3   
   1400010e7:	int3   
   1400010e8:	int3   
   1400010e9:	int3   
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	sub    rsp,0x28
   1400010f4:	xor    eax,eax
   1400010f6:	test   rcx,rcx
   1400010f9:	je     0x14000110b
   1400010fb:	cmp    rcx,0xffffffffffffffff
   1400010ff:	ja     0x140001110
   140001101:	call   0x14000570c
   140001106:	test   rax,rax
   140001109:	je     0x140001110
   14000110b:	add    rsp,0x28
   14000110f:	ret    
   140001110:	call   0x140005470
   140001115:	int3   
   140001116:	int3   
   140001117:	int3   
   140001118:	int3   
   140001119:	int3   
   14000111a:	int3   
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	sub    rsp,0x28
   140001124:	xor    eax,eax
   140001126:	test   rcx,rcx
   140001129:	je     0x14000114c
   14000112b:	movabs rax,0x333333333333333
   140001135:	cmp    rcx,rax
   140001138:	ja     0x140001151
   14000113a:	lea    rcx,[rcx+rcx*4]
   14000113e:	shl    rcx,0x4
   140001142:	call   0x14000570c
   140001147:	test   rax,rax
   14000114a:	je     0x140001151
   14000114c:	add    rsp,0x28
   140001150:	ret    
   140001151:	call   0x140005470
   140001156:	int3   
   140001157:	int3   
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	sub    rsp,0x28
   140001164:	xor    eax,eax
   140001166:	test   rcx,rcx
   140001169:	je     0x14000118c
   14000116b:	movabs rax,0x1fffffffffffffff
   140001175:	cmp    rcx,rax
   140001178:	ja     0x140001191
   14000117a:	lea    rcx,[rcx*8+0x0]
   140001182:	call   0x14000570c
   140001187:	test   rax,rax
   14000118a:	je     0x140001191
   14000118c:	add    rsp,0x28
   140001190:	ret    
   140001191:	call   0x140005470
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	rex push rdi
   1400011a2:	sub    rsp,0x40
   1400011a6:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400011af:	mov    QWORD PTR [rsp+0x50],rbx
   1400011b4:	mov    rdi,r9
   1400011b7:	call   0x1400029e0
   1400011bc:	mov    rbx,rax
   1400011bf:	mov    QWORD PTR [rsp+0x20],rax
   1400011c4:	lea    rcx,[rax+0x10]
   1400011c8:	mov    QWORD PTR [rsp+0x30],rcx
   1400011cd:	mov    QWORD PTR [rsp+0x38],rcx
   1400011d2:	test   rcx,rcx
   1400011d5:	je     0x1400011e0
   1400011d7:	mov    rdx,rdi
   1400011da:	call   0x140002090
   1400011df:	nop
   1400011e0:	mov    rax,rbx
   1400011e3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400011e8:	add    rsp,0x40
   1400011ec:	pop    rdi
   1400011ed:	ret    
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	mov    QWORD PTR [rdx],r9
   1400011f3:	mov    rax,rdx
   1400011f6:	ret    
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	mov    rax,r8
   140001203:	cmp    rcx,rdx
   140001206:	je     0x140001224
   140001208:	nop    DWORD PTR [rax+rax*1+0x0]
   140001210:	mov    r8,QWORD PTR [rdx-0x8]
   140001214:	sub    rdx,0x8
   140001218:	sub    rax,0x8
   14000121c:	mov    QWORD PTR [rax],r8
   14000121f:	cmp    rdx,rcx
   140001222:	jne    0x140001210
   140001224:	ret    
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	cmp    rcx,rdx
   140001233:	je     0x140001254
   140001235:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001240:	mov    rax,QWORD PTR [rdx-0x8]
   140001244:	sub    rdx,0x8
   140001248:	sub    r8,0x8
   14000124c:	mov    QWORD PTR [r8],rax
   14000124f:	cmp    rdx,rcx
   140001252:	jne    0x140001240
   140001254:	mov    rax,r8
   140001257:	ret    
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	ret    0x0
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	ret    0x0
   140001273:	int3   
   140001274:	int3   
   140001275:	int3   
   140001276:	int3   
   140001277:	int3   
   140001278:	int3   
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	xor    r9d,r9d
   140001283:	mov    r10,rdx
   140001286:	sub    r10,rcx
   140001289:	add    r10,0x7
   14000128d:	shr    r10,0x3
   140001291:	cmp    rcx,rdx
   140001294:	cmova  r10,r9
   140001298:	test   r10,r10
   14000129b:	je     0x1400012b3
   14000129d:	nop    DWORD PTR [rax]
   1400012a0:	mov    rax,QWORD PTR [r8]
   1400012a3:	inc    r9
   1400012a6:	lea    rcx,[rcx+0x8]
   1400012aa:	mov    QWORD PTR [rcx-0x8],rax
   1400012ae:	cmp    r9,r10
   1400012b1:	jne    0x1400012a0
   1400012b3:	ret    
   1400012b4:	int3   
   1400012b5:	int3   
   1400012b6:	int3   
   1400012b7:	int3   
   1400012b8:	int3   
   1400012b9:	int3   
   1400012ba:	int3   
   1400012bb:	int3   
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	movabs rax,0x1fffffffffffffff
   1400012ca:	ret    
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	ret    0x0
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	test   r8,r8
   1400012e3:	je     0x1400012eb
   1400012e5:	mov    rax,QWORD PTR [r9]
   1400012e8:	mov    QWORD PTR [r8],rax
   1400012eb:	ret    
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	test   r8,r8
   1400012f3:	je     0x1400012fb
   1400012f5:	mov    rax,QWORD PTR [r9]
   1400012f8:	mov    QWORD PTR [r8],rax
   1400012fb:	ret    
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	mov    QWORD PTR [rsp+0x20],r9
   140001305:	mov    QWORD PTR [rsp+0x10],rdx
   14000130a:	mov    QWORD PTR [rsp+0x8],rcx
   14000130f:	push   rbx
   140001310:	push   rsi
   140001311:	push   rdi
   140001312:	push   r12
   140001314:	push   r13
   140001316:	push   r14
   140001318:	push   r15
   14000131a:	sub    rsp,0x30
   14000131e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001327:	mov    rdi,r9
   14000132a:	mov    r15,r8
   14000132d:	mov    rsi,rdx
   140001330:	mov    r13,rcx
   140001333:	mov    r14,QWORD PTR [r8+0x10]
   140001337:	mov    r10,QWORD PTR [r8+0x18]
   14000133b:	cmp    r10,0x10
   14000133f:	jb     0x140001346
   140001341:	mov    r9,QWORD PTR [r8]
   140001344:	jmp    0x140001349
   140001346:	mov    r9,r8
   140001349:	movabs rcx,0xcbf29ce484222325
   140001353:	xor    edx,edx
   140001355:	test   r14,r14
   140001358:	je     0x140001384
   14000135a:	movabs r8,0x100000001b3
   140001364:	nop    DWORD PTR [rax+0x0]
   140001368:	nop    DWORD PTR [rax+rax*1+0x0]
   140001370:	movzx  eax,BYTE PTR [rdx+r9*1]
   140001375:	xor    rcx,rax
   140001378:	imul   rcx,r8
   14000137c:	inc    rdx
   14000137f:	cmp    rdx,r14
   140001382:	jb     0x140001370
   140001384:	mov    rax,rcx
   140001387:	shr    rax,0x20
   14000138b:	xor    rcx,rax
   14000138e:	mov    rdx,QWORD PTR [r13+0x28]
   140001392:	mov    r12,rdx
   140001395:	and    r12,rcx
   140001398:	cmp    QWORD PTR [r13+0x30],r12
   14000139c:	ja     0x1400013ab
   14000139e:	shr    rdx,1
   1400013a1:	or     rax,0xffffffffffffffff
   1400013a5:	sub    rax,rdx
   1400013a8:	add    r12,rax
   1400013ab:	mov    rbx,QWORD PTR [r13+0x0]
   1400013af:	mov    r9,QWORD PTR [r13+0x10]
   1400013b3:	mov    r8,r12
   1400013b6:	shl    r8,0x4
   1400013ba:	mov    QWORD PTR [rsp+0x80],r8
   1400013c2:	mov    rax,QWORD PTR [r9+r8*1]
   1400013c6:	cmp    rbx,rax
   1400013c9:	je     0x140001497
   1400013cf:	mov    rbx,QWORD PTR [r9+r8*1+0x8]
   1400013d4:	mov    rbx,QWORD PTR [rbx]
   1400013d7:	cmp    rbx,rax
   1400013da:	je     0x140001497
   1400013e0:	add    r12,r12
   1400013e3:	mov    rbx,QWORD PTR [rbx+0x8]
   1400013e7:	lea    rdx,[rbx+0x10]
   1400013eb:	mov    rsi,QWORD PTR [rdx+0x10]
   1400013ef:	cmp    QWORD PTR [rdx+0x18],0x10
   1400013f4:	jb     0x1400013f9
   1400013f6:	mov    rdx,QWORD PTR [rdx]
   1400013f9:	cmp    r10,0x10
   1400013fd:	jb     0x140001404
   1400013ff:	mov    rcx,QWORD PTR [r15]
   140001402:	jmp    0x140001407
   140001404:	mov    rcx,r15
   140001407:	mov    r8,rsi
   14000140a:	cmp    r14,rsi
   14000140d:	cmovb  r8,r14
   140001411:	test   r8,r8
   140001414:	jne    0x14000141a
   140001416:	xor    eax,eax
   140001418:	jmp    0x140001427
   14000141a:	call   0x140006e90
   14000141f:	mov    r9,QWORD PTR [r13+0x10]
   140001423:	mov    r10,QWORD PTR [r15+0x18]
   140001427:	cdqe   
   140001429:	test   rax,rax
   14000142c:	jne    0x140001440
   14000142e:	cmp    r14,rsi
   140001431:	jae    0x140001438
   140001433:	or     eax,0xffffffff
   140001436:	jmp    0x140001440
   140001438:	xor    eax,eax
   14000143a:	cmp    r14,rsi
   14000143d:	setne  al
   140001440:	test   eax,eax
   140001442:	je     0x14000144c
   140001444:	cmp    rbx,QWORD PTR [r9+r12*8]
   140001448:	jne    0x1400013e3
   14000144a:	jmp    0x14000148a
   14000144c:	lea    rcx,[rbx+0x10]
   140001450:	mov    rdx,r15
   140001453:	call   0x140003e20
   140001458:	test   eax,eax
   14000145a:	je     0x140001469
   14000145c:	mov    rbx,QWORD PTR [rbx]
   14000145f:	mov    rdi,QWORD PTR [rsp+0x88]
   140001467:	jmp    0x14000148a
   140001469:	mov    rdx,QWORD PTR [rsp+0x88]
   140001471:	mov    rcx,r13
   140001474:	call   0x140002ce0
   140001479:	mov    rax,QWORD PTR [rsp+0x78]
   14000147e:	mov    QWORD PTR [rax],rbx
   140001481:	mov    BYTE PTR [rax+0x8],0x0
   140001485:	jmp    0x140001528
   14000148a:	mov    rsi,QWORD PTR [rsp+0x78]
   14000148f:	mov    r8,QWORD PTR [rsp+0x80]
   140001497:	mov    rax,QWORD PTR [rdi]
   14000149a:	cmp    rbx,rax
   14000149d:	je     0x1400014cc
   14000149f:	mov    rcx,QWORD PTR [rdi+0x8]
   1400014a3:	mov    QWORD PTR [rcx],rax
   1400014a6:	mov    rcx,QWORD PTR [rax+0x8]
   1400014aa:	mov    QWORD PTR [rcx],rbx
   1400014ad:	mov    rcx,QWORD PTR [rbx+0x8]
   1400014b1:	mov    QWORD PTR [rcx],rdi
   1400014b4:	mov    rdx,QWORD PTR [rbx+0x8]
   1400014b8:	mov    rcx,QWORD PTR [rax+0x8]
   1400014bc:	mov    QWORD PTR [rbx+0x8],rcx
   1400014c0:	mov    rcx,QWORD PTR [rdi+0x8]
   1400014c4:	mov    QWORD PTR [rax+0x8],rcx
   1400014c8:	mov    QWORD PTR [rdi+0x8],rdx
   1400014cc:	mov    rdx,QWORD PTR [r13+0x10]
   1400014d0:	add    rdx,r8
   1400014d3:	mov    rax,QWORD PTR [rdx]
   1400014d6:	cmp    rax,QWORD PTR [r13+0x0]
   1400014da:	jne    0x1400014ea
   1400014dc:	mov    QWORD PTR [rdx],rdi
   1400014df:	mov    rax,QWORD PTR [r13+0x10]
   1400014e3:	mov    QWORD PTR [rax+r8*1+0x8],rdi
   1400014e8:	jmp    0x140001516
   1400014ea:	cmp    rax,rbx
   1400014ed:	jne    0x1400014f4
   1400014ef:	mov    QWORD PTR [rdx],rdi
   1400014f2:	jmp    0x140001516
   1400014f4:	mov    rax,QWORD PTR [rdx+0x8]
   1400014f8:	mov    rcx,QWORD PTR [rax]
   1400014fb:	mov    QWORD PTR [rdx+0x8],rcx
   1400014ff:	cmp    rcx,rdi
   140001502:	je     0x140001516
   140001504:	mov    rdx,QWORD PTR [r13+0x10]
   140001508:	mov    rax,QWORD PTR [rdx+r8*1+0x8]
   14000150d:	mov    rcx,QWORD PTR [rax+0x8]
   140001511:	mov    QWORD PTR [rdx+r8*1+0x8],rcx
   140001516:	mov    rcx,r13
   140001519:	call   0x140002a40
   14000151e:	mov    QWORD PTR [rsi],rdi
   140001521:	mov    BYTE PTR [rsi+0x8],0x1
   140001525:	mov    rax,rsi
   140001528:	add    rsp,0x30
   14000152c:	pop    r15
   14000152e:	pop    r14
   140001530:	pop    r13
   140001532:	pop    r12
   140001534:	pop    rdi
   140001535:	pop    rsi
   140001536:	pop    rbx
   140001537:	ret    
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	mov    QWORD PTR [rsp+0x8],rbx
   140001545:	push   rdi
   140001546:	sub    rsp,0x20
   14000154a:	mov    r9,r8
   14000154d:	mov    r8,QWORD PTR [rdx+0x8]
   140001551:	mov    rbx,rdx
   140001554:	mov    rdi,rcx
   140001557:	call   0x1400011a0
   14000155c:	movabs rdx,0x333333333333332
   140001566:	mov    r8,rax
   140001569:	mov    rax,QWORD PTR [rdi+0x8]
   14000156d:	sub    rdx,rax
   140001570:	cmp    rdx,0x1
   140001574:	jb     0x140001593
   140001576:	inc    rax
   140001579:	mov    QWORD PTR [rdi+0x8],rax
   14000157d:	mov    QWORD PTR [rbx+0x8],r8
   140001581:	mov    rax,QWORD PTR [r8+0x8]
   140001585:	mov    rbx,QWORD PTR [rsp+0x30]
   14000158a:	mov    QWORD PTR [rax],r8
   14000158d:	add    rsp,0x20
   140001591:	pop    rdi
   140001592:	ret    
   140001593:	lea    rcx,[rip+0x2b406]        # 0x14002c9a0
   14000159a:	call   0x140005518
   14000159f:	int3   
   1400015a0:	mov    rax,rcx
   1400015a3:	ret    
   1400015a4:	int3   
   1400015a5:	int3   
   1400015a6:	int3   
   1400015a7:	int3   
   1400015a8:	int3   
   1400015a9:	int3   
   1400015aa:	int3   
   1400015ab:	int3   
   1400015ac:	int3   
   1400015ad:	int3   
   1400015ae:	int3   
   1400015af:	int3   
   1400015b0:	movzx  eax,BYTE PTR [rsp+0x18]
   1400015b5:	ret    
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	mov    QWORD PTR [rcx],rdx
   1400015c3:	mov    rax,rcx
   1400015c6:	ret    
   1400015c7:	int3   
   1400015c8:	int3   
   1400015c9:	int3   
   1400015ca:	int3   
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	rex push rbx
   1400015d2:	sub    rsp,0x30
   1400015d6:	movzx  eax,BYTE PTR [rsp+0x58]
   1400015db:	mov    r10,r9
   1400015de:	mov    r11,r8
   1400015e1:	mov    rcx,rdx
   1400015e4:	mov    BYTE PTR [rsp+0x28],al
   1400015e8:	lea    r9,[rsp+0x58]
   1400015ed:	mov    r8,r10
   1400015f0:	mov    rdx,r11
   1400015f3:	mov    QWORD PTR [rsp+0x20],0x0
   1400015fc:	call   0x140001670
   140001601:	add    rsp,0x30
   140001605:	pop    rbx
   140001606:	ret    
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    rax,rcx
   140001613:	ret    
   140001614:	int3   
   140001615:	int3   
   140001616:	int3   
   140001617:	int3   
   140001618:	int3   
   140001619:	int3   
   14000161a:	int3   
   14000161b:	int3   
   14000161c:	int3   
   14000161d:	int3   
   14000161e:	int3   
   14000161f:	int3   
   140001620:	sub    rsp,0x38
   140001624:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000162d:	test   rdx,rdx
   140001630:	je     0x140001646
   140001632:	test   rcx,rcx
   140001635:	je     0x14000163d
   140001637:	mov    rax,QWORD PTR [r8]
   14000163a:	mov    QWORD PTR [rcx],rax
   14000163d:	add    rcx,0x8
   140001641:	dec    rdx
   140001644:	jne    0x140001632
   140001646:	add    rsp,0x38
   14000164a:	ret    
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	sub    rsp,0x48
   140001654:	movzx  eax,BYTE PTR [rsp+0x30]
   140001659:	mov    BYTE PTR [rsp+0x28],al
   14000165d:	mov    QWORD PTR [rsp+0x20],0x0
   140001666:	call   0x140001670
   14000166b:	add    rsp,0x48
   14000166f:	ret    
   140001670:	sub    rsp,0x38
   140001674:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000167d:	xor    r9d,r9d
   140001680:	mov    r10,rdx
   140001683:	sub    r10,rcx
   140001686:	add    r10,0x7
   14000168a:	shr    r10,0x3
   14000168e:	cmp    rcx,rdx
   140001691:	cmova  r10,r9
   140001695:	test   r10,r10
   140001698:	je     0x1400016b8
   14000169a:	sub    rcx,r8
   14000169d:	nop    DWORD PTR [rax]
   1400016a0:	test   r8,r8
   1400016a3:	je     0x1400016ac
   1400016a5:	mov    rax,QWORD PTR [rcx+r8*1]
   1400016a9:	mov    QWORD PTR [r8],rax
   1400016ac:	add    r8,0x8
   1400016b0:	inc    r9
   1400016b3:	cmp    r9,r10
   1400016b6:	jne    0x1400016a0
   1400016b8:	mov    rax,r8
   1400016bb:	add    rsp,0x38
   1400016bf:	ret    
   1400016c0:	sub    rsp,0x48
   1400016c4:	movzx  eax,BYTE PTR [rsp+0x30]
   1400016c9:	mov    BYTE PTR [rsp+0x28],al
   1400016cd:	mov    QWORD PTR [rsp+0x20],0x0
   1400016d6:	call   0x140001620
   1400016db:	add    rsp,0x48
   1400016df:	ret    
   1400016e0:	sub    rsp,0x38
   1400016e4:	movzx  eax,BYTE PTR [rsp+0x50]
   1400016e9:	mov    BYTE PTR [rsp+0x28],al
   1400016ed:	mov    QWORD PTR [rsp+0x20],0x0
   1400016f6:	call   0x140001670
   1400016fb:	add    rsp,0x38
   1400016ff:	ret    
   140001700:	xor    eax,eax
   140001702:	ret    
   140001703:	int3   
   140001704:	int3   
   140001705:	int3   
   140001706:	int3   
   140001707:	int3   
   140001708:	int3   
   140001709:	int3   
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	mov    rax,rcx
   140001713:	ret    
   140001714:	int3   
   140001715:	int3   
   140001716:	int3   
   140001717:	int3   
   140001718:	int3   
   140001719:	int3   
   14000171a:	int3   
   14000171b:	int3   
   14000171c:	int3   
   14000171d:	int3   
   14000171e:	int3   
   14000171f:	int3   
   140001720:	mov    rax,rcx
   140001723:	ret    
   140001724:	int3   
   140001725:	int3   
   140001726:	int3   
   140001727:	int3   
   140001728:	int3   
   140001729:	int3   
   14000172a:	int3   
   14000172b:	int3   
   14000172c:	int3   
   14000172d:	int3   
   14000172e:	int3   
   14000172f:	int3   
   140001730:	mov    rax,rcx
   140001733:	ret    
   140001734:	int3   
   140001735:	int3   
   140001736:	int3   
   140001737:	int3   
   140001738:	int3   
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	mov    rax,rcx
   140001743:	ret    
   140001744:	int3   
   140001745:	int3   
   140001746:	int3   
   140001747:	int3   
   140001748:	int3   
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	mov    rax,rcx
   140001753:	ret    
   140001754:	int3   
   140001755:	int3   
   140001756:	int3   
   140001757:	int3   
   140001758:	int3   
   140001759:	int3   
   14000175a:	int3   
   14000175b:	int3   
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	test   rdx,rdx
   140001763:	je     0x14000176b
   140001765:	mov    rax,QWORD PTR [r8]
   140001768:	mov    QWORD PTR [rdx],rax
   14000176b:	ret    
   14000176c:	int3   
   14000176d:	int3   
   14000176e:	int3   
   14000176f:	int3   
   140001770:	test   rdx,rdx
   140001773:	je     0x14000177b
   140001775:	mov    rax,QWORD PTR [r8]
   140001778:	mov    QWORD PTR [rdx],rax
   14000177b:	ret    
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	test   rdx,rdx
   140001783:	je     0x14000178b
   140001785:	mov    rax,QWORD PTR [r8]
   140001788:	mov    QWORD PTR [rdx],rax
   14000178b:	ret    
   14000178c:	int3   
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	test   rdx,rdx
   140001793:	je     0x14000179b
   140001795:	mov    rax,QWORD PTR [r8]
   140001798:	mov    QWORD PTR [rdx],rax
   14000179b:	ret    
   14000179c:	int3   
   14000179d:	int3   
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	test   rdx,rdx
   1400017a3:	je     0x1400017ab
   1400017a5:	mov    rax,QWORD PTR [r8]
   1400017a8:	mov    QWORD PTR [rdx],rax
   1400017ab:	ret    
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	test   rdx,rdx
   1400017b3:	je     0x1400017bb
   1400017b5:	mov    rax,QWORD PTR [r8]
   1400017b8:	mov    QWORD PTR [rdx],rax
   1400017bb:	ret    
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400017c5:	sub    rsp,0x38
   1400017c9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400017d2:	mov    rax,rdx
   1400017d5:	mov    QWORD PTR [rsp+0x58],rdx
   1400017da:	test   rdx,rdx
   1400017dd:	je     0x1400017eb
   1400017df:	mov    rdx,r8
   1400017e2:	mov    rcx,rax
   1400017e5:	call   0x140002090
   1400017ea:	nop
   1400017eb:	add    rsp,0x38
   1400017ef:	ret    
   1400017f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400017f5:	sub    rsp,0x38
   1400017f9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001802:	mov    rax,rdx
   140001805:	mov    QWORD PTR [rsp+0x58],rdx
   14000180a:	test   rdx,rdx
   14000180d:	je     0x14000181b
   14000180f:	mov    rdx,r8
   140001812:	mov    rcx,rax
   140001815:	call   0x140002090
   14000181a:	nop
   14000181b:	add    rsp,0x38
   14000181f:	ret    
   140001820:	mov    QWORD PTR [rsp+0x10],rdx
   140001825:	sub    rsp,0x38
   140001829:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001832:	mov    rax,rdx
   140001835:	mov    QWORD PTR [rsp+0x58],rdx
   14000183a:	test   rdx,rdx
   14000183d:	je     0x14000184b
   14000183f:	mov    rdx,r8
   140001842:	mov    rcx,rax
   140001845:	call   0x140002090
   14000184a:	nop
   14000184b:	add    rsp,0x38
   14000184f:	ret    
   140001850:	test   rdx,rdx
   140001853:	je     0x14000185b
   140001855:	mov    rax,QWORD PTR [r8]
   140001858:	mov    QWORD PTR [rdx],rax
   14000185b:	ret    
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	test   rdx,rdx
   140001863:	je     0x14000186b
   140001865:	mov    rax,QWORD PTR [r8]
   140001868:	mov    QWORD PTR [rdx],rax
   14000186b:	ret    
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	test   rdx,rdx
   140001873:	je     0x14000187b
   140001875:	mov    rax,QWORD PTR [r8]
   140001878:	mov    QWORD PTR [rdx],rax
   14000187b:	ret    
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	test   rdx,rdx
   140001883:	je     0x14000188b
   140001885:	mov    rax,QWORD PTR [r8]
   140001888:	mov    QWORD PTR [rdx],rax
   14000188b:	ret    
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	test   rdx,rdx
   140001893:	je     0x14000189b
   140001895:	mov    rax,QWORD PTR [r8]
   140001898:	mov    QWORD PTR [rdx],rax
   14000189b:	ret    
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	test   rdx,rdx
   1400018a3:	je     0x1400018ab
   1400018a5:	mov    rax,QWORD PTR [r8]
   1400018a8:	mov    QWORD PTR [rdx],rax
   1400018ab:	ret    
   1400018ac:	int3   
   1400018ad:	int3   
   1400018ae:	int3   
   1400018af:	int3   
   1400018b0:	test   rdx,rdx
   1400018b3:	je     0x1400018bb
   1400018b5:	mov    rax,QWORD PTR [r8]
   1400018b8:	mov    QWORD PTR [rdx],rax
   1400018bb:	ret    
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	test   rdx,rdx
   1400018c3:	je     0x1400018cb
   1400018c5:	mov    rax,QWORD PTR [r8]
   1400018c8:	mov    QWORD PTR [rdx],rax
   1400018cb:	ret    
   1400018cc:	int3   
   1400018cd:	int3   
   1400018ce:	int3   
   1400018cf:	int3   
   1400018d0:	test   rdx,rdx
   1400018d3:	je     0x1400018db
   1400018d5:	mov    rax,QWORD PTR [r8]
   1400018d8:	mov    QWORD PTR [rdx],rax
   1400018db:	ret    
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	ret    0x0
   1400018e3:	int3   
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	ret    0x0
   1400018f3:	int3   
   1400018f4:	int3   
   1400018f5:	int3   
   1400018f6:	int3   
   1400018f7:	int3   
   1400018f8:	int3   
   1400018f9:	int3   
   1400018fa:	int3   
   1400018fb:	int3   
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	ret    0x0
   140001903:	int3   
   140001904:	int3   
   140001905:	int3   
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	ret    0x0
   140001913:	int3   
   140001914:	int3   
   140001915:	int3   
   140001916:	int3   
   140001917:	int3   
   140001918:	int3   
   140001919:	int3   
   14000191a:	int3   
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	ret    0x0
   140001923:	int3   
   140001924:	int3   
   140001925:	int3   
   140001926:	int3   
   140001927:	int3   
   140001928:	int3   
   140001929:	int3   
   14000192a:	int3   
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	ret    0x0
   140001933:	int3   
   140001934:	int3   
   140001935:	int3   
   140001936:	int3   
   140001937:	int3   
   140001938:	int3   
   140001939:	int3   
   14000193a:	int3   
   14000193b:	int3   
   14000193c:	int3   
   14000193d:	int3   
   14000193e:	int3   
   14000193f:	int3   
   140001940:	rex push rbx
   140001942:	sub    rsp,0x20
   140001946:	cmp    QWORD PTR [rdx+0x38],0x10
   14000194b:	mov    rbx,rdx
   14000194e:	jb     0x140001959
   140001950:	mov    rcx,QWORD PTR [rdx+0x20]
   140001954:	call   0x140005778
   140001959:	mov    QWORD PTR [rbx+0x38],0xf
   140001961:	mov    QWORD PTR [rbx+0x30],0x0
   140001969:	mov    BYTE PTR [rbx+0x20],0x0
   14000196d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001972:	jb     0x14000197c
   140001974:	mov    rcx,QWORD PTR [rbx]
   140001977:	call   0x140005778
   14000197c:	mov    QWORD PTR [rbx+0x18],0xf
   140001984:	mov    QWORD PTR [rbx+0x10],0x0
   14000198c:	mov    BYTE PTR [rbx],0x0
   14000198f:	add    rsp,0x20
   140001993:	pop    rbx
   140001994:	ret    
   140001995:	int3   
   140001996:	int3   
   140001997:	int3   
   140001998:	int3   
   140001999:	int3   
   14000199a:	int3   
   14000199b:	int3   
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	rex push rbx
   1400019a2:	sub    rsp,0x20
   1400019a6:	cmp    QWORD PTR [rdx+0x38],0x10
   1400019ab:	mov    rbx,rdx
   1400019ae:	jb     0x1400019b9
   1400019b0:	mov    rcx,QWORD PTR [rdx+0x20]
   1400019b4:	call   0x140005778
   1400019b9:	mov    QWORD PTR [rbx+0x38],0xf
   1400019c1:	mov    QWORD PTR [rbx+0x30],0x0
   1400019c9:	mov    BYTE PTR [rbx+0x20],0x0
   1400019cd:	cmp    QWORD PTR [rbx+0x18],0x10
   1400019d2:	jb     0x1400019dc
   1400019d4:	mov    rcx,QWORD PTR [rbx]
   1400019d7:	call   0x140005778
   1400019dc:	mov    QWORD PTR [rbx+0x18],0xf
   1400019e4:	mov    QWORD PTR [rbx+0x10],0x0
   1400019ec:	mov    BYTE PTR [rbx],0x0
   1400019ef:	add    rsp,0x20
   1400019f3:	pop    rbx
   1400019f4:	ret    
   1400019f5:	int3   
   1400019f6:	int3   
   1400019f7:	int3   
   1400019f8:	int3   
   1400019f9:	int3   
   1400019fa:	int3   
   1400019fb:	int3   
   1400019fc:	int3   
   1400019fd:	int3   
   1400019fe:	int3   
   1400019ff:	int3   
   140001a00:	rex push rbx
   140001a02:	sub    rsp,0x20
   140001a06:	cmp    QWORD PTR [rdx+0x38],0x10
   140001a0b:	mov    rbx,rdx
   140001a0e:	jb     0x140001a19
   140001a10:	mov    rcx,QWORD PTR [rdx+0x20]
   140001a14:	call   0x140005778
   140001a19:	mov    QWORD PTR [rbx+0x38],0xf
   140001a21:	mov    QWORD PTR [rbx+0x30],0x0
   140001a29:	mov    BYTE PTR [rbx+0x20],0x0
   140001a2d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001a32:	jb     0x140001a3c
   140001a34:	mov    rcx,QWORD PTR [rbx]
   140001a37:	call   0x140005778
   140001a3c:	mov    QWORD PTR [rbx+0x18],0xf
   140001a44:	mov    QWORD PTR [rbx+0x10],0x0
   140001a4c:	mov    BYTE PTR [rbx],0x0
   140001a4f:	add    rsp,0x20
   140001a53:	pop    rbx
   140001a54:	ret    
   140001a55:	int3   
   140001a56:	int3   
   140001a57:	int3   
   140001a58:	int3   
   140001a59:	int3   
   140001a5a:	int3   
   140001a5b:	int3   
   140001a5c:	int3   
   140001a5d:	int3   
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	ret    0x0
   140001a63:	int3   
   140001a64:	int3   
   140001a65:	int3   
   140001a66:	int3   
   140001a67:	int3   
   140001a68:	int3   
   140001a69:	int3   
   140001a6a:	int3   
   140001a6b:	int3   
   140001a6c:	int3   
   140001a6d:	int3   
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	ret    0x0
   140001a73:	int3   
   140001a74:	int3   
   140001a75:	int3   
   140001a76:	int3   
   140001a77:	int3   
   140001a78:	int3   
   140001a79:	int3   
   140001a7a:	int3   
   140001a7b:	int3   
   140001a7c:	int3   
   140001a7d:	int3   
   140001a7e:	int3   
   140001a7f:	int3   
   140001a80:	ret    0x0
   140001a83:	int3   
   140001a84:	int3   
   140001a85:	int3   
   140001a86:	int3   
   140001a87:	int3   
   140001a88:	int3   
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	int3   
   140001a8d:	int3   
   140001a8e:	int3   
   140001a8f:	int3   
   140001a90:	ret    0x0
   140001a93:	int3   
   140001a94:	int3   
   140001a95:	int3   
   140001a96:	int3   
   140001a97:	int3   
   140001a98:	int3   
   140001a99:	int3   
   140001a9a:	int3   
   140001a9b:	int3   
   140001a9c:	int3   
   140001a9d:	int3   
   140001a9e:	int3   
   140001a9f:	int3   
   140001aa0:	ret    0x0
   140001aa3:	int3   
   140001aa4:	int3   
   140001aa5:	int3   
   140001aa6:	int3   
   140001aa7:	int3   
   140001aa8:	int3   
   140001aa9:	int3   
   140001aaa:	int3   
   140001aab:	int3   
   140001aac:	int3   
   140001aad:	int3   
   140001aae:	int3   
   140001aaf:	int3   
   140001ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ab5:	mov    QWORD PTR [rsp+0x10],rsi
   140001aba:	push   rdi
   140001abb:	sub    rsp,0x20
   140001abf:	mov    rax,QWORD PTR [rcx]
   140001ac2:	mov    r9,r8
   140001ac5:	mov    rsi,rdx
   140001ac8:	mov    rdi,QWORD PTR [rax]
   140001acb:	mov    rbx,rcx
   140001ace:	mov    r8,QWORD PTR [rdi+0x8]
   140001ad2:	mov    rdx,rdi
   140001ad5:	call   0x1400011a0
   140001ada:	movabs r8,0x333333333333332
   140001ae4:	mov    rcx,rax
   140001ae7:	mov    rax,QWORD PTR [rbx+0x8]
   140001aeb:	sub    r8,rax
   140001aee:	cmp    r8,0x1
   140001af2:	jb     0x140001b2e
   140001af4:	inc    rax
   140001af7:	mov    rdx,rsi
   140001afa:	mov    QWORD PTR [rbx+0x8],rax
   140001afe:	mov    QWORD PTR [rdi+0x8],rcx
   140001b02:	mov    rax,QWORD PTR [rcx+0x8]
   140001b06:	mov    QWORD PTR [rax],rcx
   140001b09:	mov    r9,QWORD PTR [rbx]
   140001b0c:	mov    rcx,rbx
   140001b0f:	mov    r9,QWORD PTR [r9]
   140001b12:	lea    r8,[r9+0x10]
   140001b16:	call   0x140001300
   140001b1b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b20:	mov    rax,rsi
   140001b23:	mov    rsi,QWORD PTR [rsp+0x38]
   140001b28:	add    rsp,0x20
   140001b2c:	pop    rdi
   140001b2d:	ret    
   140001b2e:	lea    rcx,[rip+0x2ae6b]        # 0x14002c9a0
   140001b35:	call   0x140005518
   140001b3a:	int3   
   140001b3b:	int3   
   140001b3c:	int3   
   140001b3d:	int3   
   140001b3e:	int3   
   140001b3f:	int3   
   140001b40:	mov    QWORD PTR [rsp+0x8],rbx
   140001b45:	push   rdi
   140001b46:	sub    rsp,0x20
   140001b4a:	mov    rax,QWORD PTR [rcx]
   140001b4d:	mov    r9,rdx
   140001b50:	mov    rbx,rcx
   140001b53:	mov    rdi,QWORD PTR [rax]
   140001b56:	mov    rdx,rdi
   140001b59:	mov    r8,QWORD PTR [rdi+0x8]
   140001b5d:	call   0x1400011a0
   140001b62:	movabs rdx,0x333333333333332
   140001b6c:	mov    r8,rax
   140001b6f:	mov    rax,QWORD PTR [rbx+0x8]
   140001b73:	sub    rdx,rax
   140001b76:	cmp    rdx,0x1
   140001b7a:	jb     0x140001b99
   140001b7c:	inc    rax
   140001b7f:	mov    QWORD PTR [rbx+0x8],rax
   140001b83:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b88:	mov    QWORD PTR [rdi+0x8],r8
   140001b8c:	mov    rax,QWORD PTR [r8+0x8]
   140001b90:	mov    QWORD PTR [rax],r8
   140001b93:	add    rsp,0x20
   140001b97:	pop    rdi
   140001b98:	ret    
   140001b99:	lea    rcx,[rip+0x2ae00]        # 0x14002c9a0
   140001ba0:	call   0x140005518
   140001ba5:	int3   
   140001ba6:	int3   
   140001ba7:	int3   
   140001ba8:	int3   
   140001ba9:	int3   
   140001baa:	int3   
   140001bab:	int3   
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	xor    r9d,r9d
   140001bb3:	mov    r10,rdx
   140001bb6:	sub    r10,rcx
   140001bb9:	add    r10,0x7
   140001bbd:	shr    r10,0x3
   140001bc1:	cmp    rcx,rdx
   140001bc4:	cmova  r10,r9
   140001bc8:	test   r10,r10
   140001bcb:	je     0x140001be3
   140001bcd:	nop    DWORD PTR [rax]
   140001bd0:	mov    rax,QWORD PTR [r8]
   140001bd3:	inc    r9
   140001bd6:	lea    rcx,[rcx+0x8]
   140001bda:	mov    QWORD PTR [rcx-0x8],rax
   140001bde:	cmp    r9,r10
   140001be1:	jne    0x140001bd0
   140001be3:	ret    
   140001be4:	int3   
   140001be5:	int3   
   140001be6:	int3   
   140001be7:	int3   
   140001be8:	int3   
   140001be9:	int3   
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	mov    rax,rcx
   140001bf3:	ret    
   140001bf4:	int3   
   140001bf5:	int3   
   140001bf6:	int3   
   140001bf7:	int3   
   140001bf8:	int3   
   140001bf9:	int3   
   140001bfa:	int3   
   140001bfb:	int3   
   140001bfc:	int3   
   140001bfd:	int3   
   140001bfe:	int3   
   140001bff:	int3   
   140001c00:	mov    rax,rcx
   140001c03:	ret    
   140001c04:	int3   
   140001c05:	int3   
   140001c06:	int3   
   140001c07:	int3   
   140001c08:	int3   
   140001c09:	int3   
   140001c0a:	int3   
   140001c0b:	int3   
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	mov    rax,rcx
   140001c13:	ret    
   140001c14:	int3   
   140001c15:	int3   
   140001c16:	int3   
   140001c17:	int3   
   140001c18:	int3   
   140001c19:	int3   
   140001c1a:	int3   
   140001c1b:	int3   
   140001c1c:	int3   
   140001c1d:	int3   
   140001c1e:	int3   
   140001c1f:	int3   
   140001c20:	mov    rax,rcx
   140001c23:	ret    
   140001c24:	int3   
   140001c25:	int3   
   140001c26:	int3   
   140001c27:	int3   
   140001c28:	int3   
   140001c29:	int3   
   140001c2a:	int3   
   140001c2b:	int3   
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	mov    rax,rcx
   140001c33:	ret    
   140001c34:	int3   
   140001c35:	int3   
   140001c36:	int3   
   140001c37:	int3   
   140001c38:	int3   
   140001c39:	int3   
   140001c3a:	int3   
   140001c3b:	int3   
   140001c3c:	int3   
   140001c3d:	int3   
   140001c3e:	int3   
   140001c3f:	int3   
   140001c40:	mov    rax,rcx
   140001c43:	ret    
   140001c44:	int3   
   140001c45:	int3   
   140001c46:	int3   
   140001c47:	int3   
   140001c48:	int3   
   140001c49:	int3   
   140001c4a:	int3   
   140001c4b:	int3   
   140001c4c:	int3   
   140001c4d:	int3   
   140001c4e:	int3   
   140001c4f:	int3   
   140001c50:	mov    rax,rcx
   140001c53:	ret    
   140001c54:	int3   
   140001c55:	int3   
   140001c56:	int3   
   140001c57:	int3   
   140001c58:	int3   
   140001c59:	int3   
   140001c5a:	int3   
   140001c5b:	int3   
   140001c5c:	int3   
   140001c5d:	int3   
   140001c5e:	int3   
   140001c5f:	int3   
   140001c60:	mov    rax,rcx
   140001c63:	ret    
   140001c64:	int3   
   140001c65:	int3   
   140001c66:	int3   
   140001c67:	int3   
   140001c68:	int3   
   140001c69:	int3   
   140001c6a:	int3   
   140001c6b:	int3   
   140001c6c:	int3   
   140001c6d:	int3   
   140001c6e:	int3   
   140001c6f:	int3   
   140001c70:	cmp    rdx,r8
   140001c73:	je     0x140001d16
   140001c79:	mov    QWORD PTR [rsp+0x18],r8
   140001c7e:	mov    QWORD PTR [rsp+0x10],rdx
   140001c83:	push   rbx
   140001c84:	sub    rsp,0x30
   140001c88:	mov    QWORD PTR [rsp+0x40],rsi
   140001c8d:	mov    rbx,rcx
   140001c90:	mov    QWORD PTR [rsp+0x58],rdi
   140001c95:	movabs rsi,0x333333333333332
   140001c9f:	nop
   140001ca0:	mov    rax,QWORD PTR [rbx]
   140001ca3:	lea    r9,[rdx+0x10]
   140001ca7:	mov    rcx,rbx
   140001caa:	mov    rdi,QWORD PTR [rax]
   140001cad:	mov    rdx,rdi
   140001cb0:	mov    r8,QWORD PTR [rdi+0x8]
   140001cb4:	call   0x1400011a0
   140001cb9:	mov    rdx,QWORD PTR [rbx+0x8]
   140001cbd:	mov    rcx,rsi
   140001cc0:	sub    rcx,rdx
   140001cc3:	cmp    rcx,0x1
   140001cc7:	jb     0x140001d17
   140001cc9:	lea    rcx,[rdx+0x1]
   140001ccd:	lea    rdx,[rsp+0x20]
   140001cd2:	mov    QWORD PTR [rbx+0x8],rcx
   140001cd6:	mov    QWORD PTR [rdi+0x8],rax
   140001cda:	mov    rcx,QWORD PTR [rax+0x8]
   140001cde:	mov    QWORD PTR [rcx],rax
   140001ce1:	mov    r9,QWORD PTR [rbx]
   140001ce4:	mov    rcx,rbx
   140001ce7:	mov    r9,QWORD PTR [r9]
   140001cea:	lea    r8,[r9+0x10]
   140001cee:	call   0x140001300
   140001cf3:	mov    rdx,QWORD PTR [rsp+0x48]
   140001cf8:	mov    rdx,QWORD PTR [rdx]
   140001cfb:	mov    QWORD PTR [rsp+0x48],rdx
   140001d00:	cmp    rdx,QWORD PTR [rsp+0x50]
   140001d05:	jne    0x140001ca0
   140001d07:	mov    rsi,QWORD PTR [rsp+0x40]
   140001d0c:	mov    rdi,QWORD PTR [rsp+0x58]
   140001d11:	add    rsp,0x30
   140001d15:	pop    rbx
   140001d16:	ret    
   140001d17:	lea    rcx,[rip+0x2ac82]        # 0x14002c9a0
   140001d1e:	call   0x140005518
   140001d23:	int3   
   140001d24:	int3   
   140001d25:	int3   
   140001d26:	int3   
   140001d27:	int3   
   140001d28:	int3   
   140001d29:	int3   
   140001d2a:	int3   
   140001d2b:	int3   
   140001d2c:	int3   
   140001d2d:	int3   
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	mov    QWORD PTR [rsp+0x8],rcx
   140001d35:	push   rdi
   140001d36:	sub    rsp,0x30
   140001d3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001d43:	mov    QWORD PTR [rsp+0x48],rbx
   140001d48:	mov    QWORD PTR [rsp+0x50],rsi
   140001d4d:	mov    rbx,rdx
   140001d50:	mov    rdi,rcx
   140001d53:	xor    esi,esi
   140001d55:	mov    QWORD PTR [rcx],rsi
   140001d58:	mov    QWORD PTR [rcx+0x8],rsi
   140001d5c:	xor    r8d,r8d
   140001d5f:	xor    edx,edx
   140001d61:	call   0x1400029e0
   140001d66:	mov    QWORD PTR [rdi],rax
   140001d69:	mov    QWORD PTR [rdi+0x10],rsi
   140001d6d:	mov    QWORD PTR [rdi+0x18],rsi
   140001d71:	mov    QWORD PTR [rdi+0x20],rsi
   140001d75:	mov    DWORD PTR [rdi+0x38],0x3f800000
   140001d7c:	mov    rdx,rbx
   140001d7f:	mov    rcx,rdi
   140001d82:	call   0x140002b30
   140001d87:	nop
   140001d88:	mov    rax,rdi
   140001d8b:	mov    rbx,QWORD PTR [rsp+0x48]
   140001d90:	mov    rsi,QWORD PTR [rsp+0x50]
   140001d95:	add    rsp,0x30
   140001d99:	pop    rdi
   140001d9a:	ret    
   140001d9b:	int3   
   140001d9c:	int3   
   140001d9d:	int3   
   140001d9e:	int3   
   140001d9f:	int3   
   140001da0:	mov    rax,rcx
   140001da3:	ret    
   140001da4:	int3   
   140001da5:	int3   
   140001da6:	int3   
   140001da7:	int3   
   140001da8:	int3   
   140001da9:	int3   
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	mov    rax,rcx
   140001db3:	ret    
   140001db4:	int3   
   140001db5:	int3   
   140001db6:	int3   
   140001db7:	int3   
   140001db8:	int3   
   140001db9:	int3   
   140001dba:	int3   
   140001dbb:	int3   
   140001dbc:	int3   
   140001dbd:	int3   
   140001dbe:	int3   
   140001dbf:	int3   
   140001dc0:	rex push rbx
   140001dc2:	sub    rsp,0x20
   140001dc6:	xor    eax,eax
   140001dc8:	xor    r8d,r8d
   140001dcb:	xor    edx,edx
   140001dcd:	mov    QWORD PTR [rcx],rax
   140001dd0:	mov    QWORD PTR [rcx+0x8],rax
   140001dd4:	mov    rbx,rcx
   140001dd7:	call   0x1400029e0
   140001ddc:	mov    QWORD PTR [rbx],rax
   140001ddf:	mov    rax,rbx
   140001de2:	add    rsp,0x20
   140001de6:	pop    rbx
   140001de7:	ret    
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	int3   
   140001ded:	int3   
   140001dee:	int3   
   140001def:	int3   
   140001df0:	rex push rbx
   140001df2:	sub    rsp,0x20
   140001df6:	xor    eax,eax
   140001df8:	xor    r8d,r8d
   140001dfb:	xor    edx,edx
   140001dfd:	mov    QWORD PTR [rcx],rax
   140001e00:	mov    QWORD PTR [rcx+0x8],rax
   140001e04:	mov    rbx,rcx
   140001e07:	call   0x1400029e0
   140001e0c:	mov    QWORD PTR [rbx],rax
   140001e0f:	mov    rax,rbx
   140001e12:	add    rsp,0x20
   140001e16:	pop    rbx
   140001e17:	ret    
   140001e18:	int3   
   140001e19:	int3   
   140001e1a:	int3   
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rcx],rdx
   140001e23:	mov    rax,rcx
   140001e26:	ret    
   140001e27:	int3   
   140001e28:	int3   
   140001e29:	int3   
   140001e2a:	int3   
   140001e2b:	int3   
   140001e2c:	int3   
   140001e2d:	int3   
   140001e2e:	int3   
   140001e2f:	int3   
   140001e30:	mov    QWORD PTR [rcx],rdx
   140001e33:	mov    rax,rcx
   140001e36:	ret    
   140001e37:	int3   
   140001e38:	int3   
   140001e39:	int3   
   140001e3a:	int3   
   140001e3b:	int3   
   140001e3c:	int3   
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	mov    QWORD PTR [rcx],rdx
   140001e43:	mov    rax,rcx
   140001e46:	ret    
   140001e47:	int3   
   140001e48:	int3   
   140001e49:	int3   
   140001e4a:	int3   
   140001e4b:	int3   
   140001e4c:	int3   
   140001e4d:	int3   
   140001e4e:	int3   
   140001e4f:	int3   
   140001e50:	mov    QWORD PTR [rcx],0x0
   140001e57:	mov    rax,rcx
   140001e5a:	ret    
   140001e5b:	int3   
   140001e5c:	int3   
   140001e5d:	int3   
   140001e5e:	int3   
   140001e5f:	int3   
   140001e60:	mov    QWORD PTR [rcx],rdx
   140001e63:	mov    rax,rcx
   140001e66:	ret    
   140001e67:	int3   
   140001e68:	int3   
   140001e69:	int3   
   140001e6a:	int3   
   140001e6b:	int3   
   140001e6c:	int3   
   140001e6d:	int3   
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	mov    QWORD PTR [rcx],0x0
   140001e77:	mov    rax,rcx
   140001e7a:	ret    
   140001e7b:	int3   
   140001e7c:	int3   
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	xor    eax,eax
   140001e82:	mov    QWORD PTR [rcx],rax
   140001e85:	mov    QWORD PTR [rcx+0x8],rax
   140001e89:	mov    rax,rcx
   140001e8c:	ret    
   140001e8d:	int3   
   140001e8e:	int3   
   140001e8f:	int3   
   140001e90:	xor    eax,eax
   140001e92:	mov    QWORD PTR [rcx+0x10],rax
   140001e96:	mov    QWORD PTR [rcx+0x18],rax
   140001e9a:	mov    rax,rcx
   140001e9d:	ret    
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	xor    eax,eax
   140001ea2:	mov    QWORD PTR [rcx+0x10],rax
   140001ea6:	mov    QWORD PTR [rcx+0x18],rax
   140001eaa:	mov    rax,rcx
   140001ead:	ret    
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	mov    rax,rcx
   140001eb3:	ret    
   140001eb4:	int3   
   140001eb5:	int3   
   140001eb6:	int3   
   140001eb7:	int3   
   140001eb8:	int3   
   140001eb9:	int3   
   140001eba:	int3   
   140001ebb:	int3   
   140001ebc:	int3   
   140001ebd:	int3   
   140001ebe:	int3   
   140001ebf:	int3   
   140001ec0:	mov    rax,rcx
   140001ec3:	ret    
   140001ec4:	int3   
   140001ec5:	int3   
   140001ec6:	int3   
   140001ec7:	int3   
   140001ec8:	int3   
   140001ec9:	int3   
   140001eca:	int3   
   140001ecb:	int3   
   140001ecc:	int3   
   140001ecd:	int3   
   140001ece:	int3   
   140001ecf:	int3   
   140001ed0:	xor    eax,eax
   140001ed2:	mov    QWORD PTR [rcx],rax
   140001ed5:	mov    QWORD PTR [rcx+0x8],rax
   140001ed9:	mov    QWORD PTR [rcx+0x10],rax
   140001edd:	mov    rax,rcx
   140001ee0:	ret    
   140001ee1:	int3   
   140001ee2:	int3   
   140001ee3:	int3   
   140001ee4:	int3   
   140001ee5:	int3   
   140001ee6:	int3   
   140001ee7:	int3   
   140001ee8:	int3   
   140001ee9:	int3   
   140001eea:	int3   
   140001eeb:	int3   
   140001eec:	int3   
   140001eed:	int3   
   140001eee:	int3   
   140001eef:	int3   
   140001ef0:	mov    QWORD PTR [rcx],rdx
   140001ef3:	mov    rax,rcx
   140001ef6:	ret    
   140001ef7:	int3   
   140001ef8:	int3   
   140001ef9:	int3   
   140001efa:	int3   
   140001efb:	int3   
   140001efc:	int3   
   140001efd:	int3   
   140001efe:	int3   
   140001eff:	int3   
   140001f00:	mov    QWORD PTR [rcx],rdx
   140001f03:	mov    rax,rcx
   140001f06:	ret    
   140001f07:	int3   
   140001f08:	int3   
   140001f09:	int3   
   140001f0a:	int3   
   140001f0b:	int3   
   140001f0c:	int3   
   140001f0d:	int3   
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	xor    eax,eax
   140001f12:	mov    QWORD PTR [rcx],rax
   140001f15:	mov    QWORD PTR [rcx+0x8],rax
   140001f19:	mov    QWORD PTR [rcx+0x10],rax
   140001f1d:	mov    rax,rcx
   140001f20:	ret    
   140001f21:	int3   
   140001f22:	int3   
   140001f23:	int3   
   140001f24:	int3   
   140001f25:	int3   
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	mov    rax,rcx
   140001f33:	ret    
   140001f34:	int3   
   140001f35:	int3   
   140001f36:	int3   
   140001f37:	int3   
   140001f38:	int3   
   140001f39:	int3   
   140001f3a:	int3   
   140001f3b:	int3   
   140001f3c:	int3   
   140001f3d:	int3   
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	mov    rax,rcx
   140001f43:	ret    
   140001f44:	int3   
   140001f45:	int3   
   140001f46:	int3   
   140001f47:	int3   
   140001f48:	int3   
   140001f49:	int3   
   140001f4a:	int3   
   140001f4b:	int3   
   140001f4c:	int3   
   140001f4d:	int3   
   140001f4e:	int3   
   140001f4f:	int3   
   140001f50:	mov    rax,rcx
   140001f53:	ret    
   140001f54:	int3   
   140001f55:	int3   
   140001f56:	int3   
   140001f57:	int3   
   140001f58:	int3   
   140001f59:	int3   
   140001f5a:	int3   
   140001f5b:	int3   
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	mov    rax,rcx
   140001f63:	ret    
   140001f64:	int3   
   140001f65:	int3   
   140001f66:	int3   
   140001f67:	int3   
   140001f68:	int3   
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	mov    rax,rcx
   140001f73:	ret    
   140001f74:	int3   
   140001f75:	int3   
   140001f76:	int3   
   140001f77:	int3   
   140001f78:	int3   
   140001f79:	int3   
   140001f7a:	int3   
   140001f7b:	int3   
   140001f7c:	int3   
   140001f7d:	int3   
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	mov    rax,rcx
   140001f83:	ret    
   140001f84:	int3   
   140001f85:	int3   
   140001f86:	int3   
   140001f87:	int3   
   140001f88:	int3   
   140001f89:	int3   
   140001f8a:	int3   
   140001f8b:	int3   
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	mov    rax,rcx
   140001f93:	ret    
   140001f94:	int3   
   140001f95:	int3   
   140001f96:	int3   
   140001f97:	int3   
   140001f98:	int3   
   140001f99:	int3   
   140001f9a:	int3   
   140001f9b:	int3   
   140001f9c:	int3   
   140001f9d:	int3   
   140001f9e:	int3   
   140001f9f:	int3   
   140001fa0:	mov    rax,rcx
   140001fa3:	ret    
   140001fa4:	int3   
   140001fa5:	int3   
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	mov    rax,rcx
   140001fb3:	ret    
   140001fb4:	int3   
   140001fb5:	int3   
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	int3   
   140001fb9:	int3   
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	mov    rax,rcx
   140001fc3:	ret    
   140001fc4:	int3   
   140001fc5:	int3   
   140001fc6:	int3   
   140001fc7:	int3   
   140001fc8:	int3   
   140001fc9:	int3   
   140001fca:	int3   
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	mov    rax,rcx
   140001fd3:	ret    
   140001fd4:	int3   
   140001fd5:	int3   
   140001fd6:	int3   
   140001fd7:	int3   
   140001fd8:	int3   
   140001fd9:	int3   
   140001fda:	int3   
   140001fdb:	int3   
   140001fdc:	int3   
   140001fdd:	int3   
   140001fde:	int3   
   140001fdf:	int3   
   140001fe0:	rex push rbx
   140001fe2:	sub    rsp,0x20
   140001fe6:	mov    QWORD PTR [rcx+0x18],0xf
   140001fee:	mov    QWORD PTR [rcx+0x10],0x0
   140001ff6:	or     r9,0xffffffffffffffff
   140001ffa:	xor    r8d,r8d
   140001ffd:	mov    rbx,rcx
   140002000:	mov    BYTE PTR [rcx],0x0
   140002003:	call   0x1400039b0
   140002008:	mov    rax,rbx
   14000200b:	add    rsp,0x20
   14000200f:	pop    rbx
   140002010:	ret    
   140002011:	int3   
   140002012:	int3   
   140002013:	int3   
   140002014:	int3   
   140002015:	int3   
   140002016:	int3   
   140002017:	int3   
   140002018:	int3   
   140002019:	int3   
   14000201a:	int3   
   14000201b:	int3   
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	rex push rbx
   140002022:	sub    rsp,0x20
   140002026:	xor    r8d,r8d
   140002029:	mov    QWORD PTR [rcx+0x18],0xf
   140002031:	mov    rbx,rcx
   140002034:	mov    QWORD PTR [rcx+0x10],r8
   140002038:	mov    BYTE PTR [rcx],r8b
   14000203b:	cmp    BYTE PTR [rdx],r8b
   14000203e:	je     0x14000204e
   140002040:	or     r8,0xffffffffffffffff
   140002044:	inc    r8
   140002047:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000204c:	jne    0x140002044
   14000204e:	call   0x140003b00
   140002053:	mov    rax,rbx
   140002056:	add    rsp,0x20
   14000205a:	pop    rbx
   14000205b:	ret    
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	rex push rbx
   140002062:	sub    rsp,0x20
   140002066:	xor    eax,eax
   140002068:	xor    r8d,r8d
   14000206b:	xor    edx,edx
   14000206d:	mov    QWORD PTR [rcx],rax
   140002070:	mov    QWORD PTR [rcx+0x8],rax
   140002074:	mov    rbx,rcx
   140002077:	call   0x1400029e0
   14000207c:	mov    QWORD PTR [rbx],rax
   14000207f:	mov    rax,rbx
   140002082:	add    rsp,0x20
   140002086:	pop    rbx
   140002087:	ret    
   140002088:	int3   
   140002089:	int3   
   14000208a:	int3   
   14000208b:	int3   
   14000208c:	int3   
   14000208d:	int3   
   14000208e:	int3   
   14000208f:	int3   
   140002090:	mov    QWORD PTR [rsp+0x8],rcx
   140002095:	push   rdi
   140002096:	sub    rsp,0x30
   14000209a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400020a3:	mov    QWORD PTR [rsp+0x48],rbx
   1400020a8:	mov    rbx,rdx
   1400020ab:	mov    rdi,rcx
   1400020ae:	mov    QWORD PTR [rcx+0x18],0xf
   1400020b6:	mov    QWORD PTR [rcx+0x10],0x0
   1400020be:	mov    BYTE PTR [rcx],0x0
   1400020c1:	or     r9,0xffffffffffffffff
   1400020c5:	xor    r8d,r8d
   1400020c8:	call   0x1400039b0
   1400020cd:	nop
   1400020ce:	lea    rcx,[rdi+0x20]
   1400020d2:	mov    QWORD PTR [rcx+0x18],0xf
   1400020da:	mov    QWORD PTR [rcx+0x10],0x0
   1400020e2:	mov    BYTE PTR [rcx],0x0
   1400020e5:	lea    rdx,[rbx+0x20]
   1400020e9:	or     r9,0xffffffffffffffff
   1400020ed:	xor    r8d,r8d
   1400020f0:	call   0x1400039b0
   1400020f5:	nop
   1400020f6:	mov    rax,rdi
   1400020f9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400020fe:	add    rsp,0x30
   140002102:	pop    rdi
   140002103:	ret    
   140002104:	int3   
   140002105:	int3   
   140002106:	int3   
   140002107:	int3   
   140002108:	int3   
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	int3   
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	mov    QWORD PTR [rsp+0x8],rcx
   140002115:	push   rdi
   140002116:	sub    rsp,0x30
   14000211a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002123:	mov    QWORD PTR [rsp+0x48],rbx
   140002128:	mov    QWORD PTR [rsp+0x50],rsi
   14000212d:	mov    rbx,rdx
   140002130:	mov    rdi,rcx
   140002133:	xor    esi,esi
   140002135:	mov    QWORD PTR [rcx],rsi
   140002138:	mov    QWORD PTR [rcx+0x8],rsi
   14000213c:	xor    r8d,r8d
   14000213f:	xor    edx,edx
   140002141:	call   0x1400029e0
   140002146:	mov    QWORD PTR [rdi],rax
   140002149:	mov    QWORD PTR [rdi+0x10],rsi
   14000214d:	mov    QWORD PTR [rdi+0x18],rsi
   140002151:	mov    QWORD PTR [rdi+0x20],rsi
   140002155:	mov    DWORD PTR [rdi+0x38],0x3f800000
   14000215c:	mov    rdx,rbx
   14000215f:	mov    rcx,rdi
   140002162:	call   0x140002b30
   140002167:	nop
   140002168:	mov    rax,rdi
   14000216b:	mov    rbx,QWORD PTR [rsp+0x48]
   140002170:	mov    rsi,QWORD PTR [rsp+0x50]
   140002175:	add    rsp,0x30
   140002179:	pop    rdi
   14000217a:	ret    
   14000217b:	int3   
   14000217c:	int3   
   14000217d:	int3   
   14000217e:	int3   
   14000217f:	int3   
   140002180:	xor    eax,eax
   140002182:	mov    QWORD PTR [rcx],rax
   140002185:	mov    QWORD PTR [rcx+0x8],rax
   140002189:	mov    QWORD PTR [rcx+0x10],rax
   14000218d:	mov    rax,rcx
   140002190:	ret    
   140002191:	int3   
   140002192:	int3   
   140002193:	int3   
   140002194:	int3   
   140002195:	int3   
   140002196:	int3   
   140002197:	int3   
   140002198:	int3   
   140002199:	int3   
   14000219a:	int3   
   14000219b:	int3   
   14000219c:	int3   
   14000219d:	int3   
   14000219e:	int3   
   14000219f:	int3   
   1400021a0:	rex push rdi
   1400021a2:	sub    rsp,0x30
   1400021a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400021af:	mov    QWORD PTR [rsp+0x48],rbx
   1400021b4:	mov    QWORD PTR [rsp+0x50],rsi
   1400021b9:	mov    rbx,rdx
   1400021bc:	mov    rdi,rcx
   1400021bf:	mov    QWORD PTR [rsp+0x40],rcx
   1400021c4:	xor    esi,esi
   1400021c6:	mov    QWORD PTR [rcx],rsi
   1400021c9:	mov    QWORD PTR [rcx+0x8],rsi
   1400021cd:	xor    r8d,r8d
   1400021d0:	xor    edx,edx
   1400021d2:	call   0x1400029e0
   1400021d7:	mov    QWORD PTR [rdi],rax
   1400021da:	mov    QWORD PTR [rdi+0x10],rsi
   1400021de:	mov    QWORD PTR [rdi+0x18],rsi
   1400021e2:	mov    QWORD PTR [rdi+0x20],rsi
   1400021e6:	mov    DWORD PTR [rdi+0x38],0x3f800000
   1400021ed:	mov    rdx,rbx
   1400021f0:	mov    rcx,rdi
   1400021f3:	call   0x140002b30
   1400021f8:	nop
   1400021f9:	mov    rax,QWORD PTR [rbx+0x40]
   1400021fd:	mov    QWORD PTR [rdi+0x40],rax
   140002201:	mov    rax,rdi
   140002204:	mov    rbx,QWORD PTR [rsp+0x48]
   140002209:	mov    rsi,QWORD PTR [rsp+0x50]
   14000220e:	add    rsp,0x30
   140002212:	pop    rdi
   140002213:	ret    
   140002214:	int3   
   140002215:	int3   
   140002216:	int3   
   140002217:	int3   
   140002218:	int3   
   140002219:	int3   
   14000221a:	int3   
   14000221b:	int3   
   14000221c:	int3   
   14000221d:	int3   
   14000221e:	int3   
   14000221f:	int3   
   140002220:	lea    rax,[rip+0x2a529]        # 0x14002c750
   140002227:	mov    QWORD PTR [rcx],rax
   14000222a:	mov    rax,rcx
   14000222d:	ret    
   14000222e:	int3   
   14000222f:	int3   
   140002230:	mov    rax,rcx
   140002233:	ret    
   140002234:	int3   
   140002235:	int3   
   140002236:	int3   
   140002237:	int3   
   140002238:	int3   
   140002239:	int3   
   14000223a:	int3   
   14000223b:	int3   
   14000223c:	int3   
   14000223d:	int3   
   14000223e:	int3   
   14000223f:	int3   
   140002240:	lea    rax,[rip+0x2a559]        # 0x14002c7a0
   140002247:	mov    QWORD PTR [rcx],rax
   14000224a:	mov    rax,rcx
   14000224d:	ret    
   14000224e:	int3   
   14000224f:	int3   
   140002250:	lea    rax,[rip+0x2a5a9]        # 0x14002c800
   140002257:	mov    QWORD PTR [rcx],rax
   14000225a:	mov    rax,rcx
   14000225d:	ret    
   14000225e:	int3   
   14000225f:	int3   
   140002260:	lea    rax,[rip+0x2a4b1]        # 0x14002c718
   140002267:	mov    QWORD PTR [rcx],rax
   14000226a:	mov    rax,rcx
   14000226d:	ret    
   14000226e:	int3   
   14000226f:	int3   
   140002270:	mov    DWORD PTR [rcx],edx
   140002272:	mov    QWORD PTR [rcx+0x8],r8
   140002276:	mov    rax,rcx
   140002279:	ret    
   14000227a:	int3   
   14000227b:	int3   
   14000227c:	int3   
   14000227d:	int3   
   14000227e:	int3   
   14000227f:	int3   
   140002280:	mov    QWORD PTR [rcx],rdx
   140002283:	mov    rax,rcx
   140002286:	ret    
   140002287:	int3   
   140002288:	int3   
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	rex push rbx
   140002292:	sub    rsp,0x20
   140002296:	mov    rbx,rcx
   140002299:	mov    rcx,QWORD PTR [rcx+0x10]
   14000229d:	test   rcx,rcx
   1400022a0:	je     0x1400022b5
   1400022a2:	call   0x140005778
   1400022a7:	xor    eax,eax
   1400022a9:	mov    QWORD PTR [rbx+0x10],rax
   1400022ad:	mov    QWORD PTR [rbx+0x18],rax
   1400022b1:	mov    QWORD PTR [rbx+0x20],rax
   1400022b5:	mov    rcx,rbx
   1400022b8:	call   0x140003d70
   1400022bd:	mov    rcx,QWORD PTR [rbx]
   1400022c0:	add    rsp,0x20
   1400022c4:	pop    rbx
   1400022c5:	jmp    0x140005778
   1400022ca:	int3   
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	mov    rcx,QWORD PTR [rcx]
   1400022d3:	jmp    0x140005778
   1400022d8:	int3   
   1400022d9:	int3   
   1400022da:	int3   
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	mov    rcx,QWORD PTR [rcx]
   1400022e3:	jmp    0x140005778
   1400022e8:	int3   
   1400022e9:	int3   
   1400022ea:	int3   
   1400022eb:	int3   
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	rex push rbx
   1400022f2:	sub    rsp,0x20
   1400022f6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400022fb:	mov    rbx,rcx
   1400022fe:	jb     0x140002308
   140002300:	mov    rcx,QWORD PTR [rcx]
   140002303:	call   0x140005778
   140002308:	mov    QWORD PTR [rbx+0x18],0xf
   140002310:	mov    QWORD PTR [rbx+0x10],0x0
   140002318:	mov    BYTE PTR [rbx],0x0
   14000231b:	add    rsp,0x20
   14000231f:	pop    rbx
   140002320:	ret    
   140002321:	int3   
   140002322:	int3   
   140002323:	int3   
   140002324:	int3   
   140002325:	int3   
   140002326:	int3   
   140002327:	int3   
   140002328:	int3   
   140002329:	int3   
   14000232a:	int3   
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	rex push rbx
   140002332:	sub    rsp,0x20
   140002336:	mov    rbx,rcx
   140002339:	call   0x140003d70
   14000233e:	mov    rcx,QWORD PTR [rbx]
   140002341:	add    rsp,0x20
   140002345:	pop    rbx
   140002346:	jmp    0x140005778
   14000234b:	int3   
   14000234c:	int3   
   14000234d:	int3   
   14000234e:	int3   
   14000234f:	int3   
   140002350:	rex push rbx
   140002352:	sub    rsp,0x20
   140002356:	cmp    QWORD PTR [rcx+0x38],0x10
   14000235b:	mov    rbx,rcx
   14000235e:	jb     0x140002369
   140002360:	mov    rcx,QWORD PTR [rcx+0x20]
   140002364:	call   0x140005778
   140002369:	mov    QWORD PTR [rbx+0x38],0xf
   140002371:	mov    QWORD PTR [rbx+0x30],0x0
   140002379:	mov    BYTE PTR [rbx+0x20],0x0
   14000237d:	cmp    QWORD PTR [rbx+0x18],0x10
   140002382:	jb     0x14000238c
   140002384:	mov    rcx,QWORD PTR [rbx]
   140002387:	call   0x140005778
   14000238c:	mov    QWORD PTR [rbx+0x18],0xf
   140002394:	mov    QWORD PTR [rbx+0x10],0x0
   14000239c:	mov    BYTE PTR [rbx],0x0
   14000239f:	add    rsp,0x20
   1400023a3:	pop    rbx
   1400023a4:	ret    
   1400023a5:	int3   
   1400023a6:	int3   
   1400023a7:	int3   
   1400023a8:	int3   
   1400023a9:	int3   
   1400023aa:	int3   
   1400023ab:	int3   
   1400023ac:	int3   
   1400023ad:	int3   
   1400023ae:	int3   
   1400023af:	int3   
   1400023b0:	rex push rbx
   1400023b2:	sub    rsp,0x20
   1400023b6:	mov    rbx,rcx
   1400023b9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400023bd:	test   rcx,rcx
   1400023c0:	je     0x1400023d5
   1400023c2:	call   0x140005778
   1400023c7:	xor    eax,eax
   1400023c9:	mov    QWORD PTR [rbx+0x10],rax
   1400023cd:	mov    QWORD PTR [rbx+0x18],rax
   1400023d1:	mov    QWORD PTR [rbx+0x20],rax
   1400023d5:	mov    rcx,rbx
   1400023d8:	call   0x140003d70
   1400023dd:	mov    rcx,QWORD PTR [rbx]
   1400023e0:	add    rsp,0x20
   1400023e4:	pop    rbx
   1400023e5:	jmp    0x140005778
   1400023ea:	int3   
   1400023eb:	int3   
   1400023ec:	int3   
   1400023ed:	int3   
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	rex push rbx
   1400023f2:	sub    rsp,0x20
   1400023f6:	mov    rbx,rcx
   1400023f9:	mov    rcx,QWORD PTR [rcx]
   1400023fc:	test   rcx,rcx
   1400023ff:	je     0x140002413
   140002401:	call   0x140005778
   140002406:	xor    eax,eax
   140002408:	mov    QWORD PTR [rbx],rax
   14000240b:	mov    QWORD PTR [rbx+0x8],rax
   14000240f:	mov    QWORD PTR [rbx+0x10],rax
   140002413:	add    rsp,0x20
   140002417:	pop    rbx
   140002418:	ret    
   140002419:	int3   
   14000241a:	int3   
   14000241b:	int3   
   14000241c:	int3   
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	lea    rax,[rip+0x2a2f1]        # 0x14002c718
   140002427:	mov    QWORD PTR [rcx],rax
   14000242a:	ret    
   14000242b:	int3   
   14000242c:	int3   
   14000242d:	int3   
   14000242e:	int3   
   14000242f:	int3   
   140002430:	lea    rax,[rip+0x2a2e1]        # 0x14002c718
   140002437:	mov    QWORD PTR [rcx],rax
   14000243a:	ret    
   14000243b:	int3   
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	lea    rax,[rip+0x2a2d1]        # 0x14002c718
   140002447:	mov    QWORD PTR [rcx],rax
   14000244a:	ret    
   14000244b:	int3   
   14000244c:	int3   
   14000244d:	int3   
   14000244e:	int3   
   14000244f:	int3   
   140002450:	lea    rax,[rip+0x2a2c1]        # 0x14002c718
   140002457:	mov    QWORD PTR [rcx],rax
   14000245a:	ret    
   14000245b:	int3   
   14000245c:	int3   
   14000245d:	int3   
   14000245e:	int3   
   14000245f:	int3   
   140002460:	mov    rax,rdx
   140002463:	ret    
   140002464:	int3   
   140002465:	int3   
   140002466:	int3   
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	ret    0x0
   140002473:	int3   
   140002474:	int3   
   140002475:	int3   
   140002476:	int3   
   140002477:	int3   
   140002478:	int3   
   140002479:	int3   
   14000247a:	int3   
   14000247b:	int3   
   14000247c:	int3   
   14000247d:	int3   
   14000247e:	int3   
   14000247f:	int3   
   140002480:	rex push rbx
   140002482:	sub    rsp,0x20
   140002486:	mov    rbx,rcx
   140002489:	cmp    rcx,rdx
   14000248c:	je     0x140002493
   14000248e:	call   0x140002b30
   140002493:	mov    rax,rbx
   140002496:	add    rsp,0x20
   14000249a:	pop    rbx
   14000249b:	ret    
   14000249c:	int3   
   14000249d:	int3   
   14000249e:	int3   
   14000249f:	int3   
   1400024a0:	rex push rbx
   1400024a2:	sub    rsp,0x20
   1400024a6:	mov    rbx,rcx
   1400024a9:	cmp    rcx,rdx
   1400024ac:	je     0x1400024b3
   1400024ae:	call   0x140002b30
   1400024b3:	mov    rax,rbx
   1400024b6:	add    rsp,0x20
   1400024ba:	pop    rbx
   1400024bb:	ret    
   1400024bc:	int3   
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024c5:	push   rdi
   1400024c6:	sub    rsp,0x20
   1400024ca:	mov    rdi,rdx
   1400024cd:	mov    rbx,rcx
   1400024d0:	cmp    rcx,rdx
   1400024d3:	je     0x1400024da
   1400024d5:	call   0x140002b30
   1400024da:	mov    rax,QWORD PTR [rdi+0x40]
   1400024de:	mov    QWORD PTR [rbx+0x40],rax
   1400024e2:	mov    rax,rbx
   1400024e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024ea:	add    rsp,0x20
   1400024ee:	pop    rdi
   1400024ef:	ret    
   1400024f0:	mov    rdx,QWORD PTR [rdx]
   1400024f3:	cmp    QWORD PTR [rcx],rdx
   1400024f6:	sete   al
   1400024f9:	ret    
   1400024fa:	int3   
   1400024fb:	int3   
   1400024fc:	int3   
   1400024fd:	int3   
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	mov    rdx,QWORD PTR [rdx]
   140002503:	cmp    QWORD PTR [rcx],rdx
   140002506:	sete   al
   140002509:	ret    
   14000250a:	int3   
   14000250b:	int3   
   14000250c:	int3   
   14000250d:	int3   
   14000250e:	int3   
   14000250f:	int3   
   140002510:	cmp    rcx,rdx
   140002513:	sete   al
   140002516:	ret    
   140002517:	int3   
   140002518:	int3   
   140002519:	int3   
   14000251a:	int3   
   14000251b:	int3   
   14000251c:	int3   
   14000251d:	int3   
   14000251e:	int3   
   14000251f:	int3   
   140002520:	mov    rax,QWORD PTR [rdx+0x8]
   140002524:	cmp    QWORD PTR [rcx+0x8],rax
   140002528:	jne    0x140002533
   14000252a:	mov    eax,DWORD PTR [rdx]
   14000252c:	cmp    DWORD PTR [rcx],eax
   14000252e:	jne    0x140002533
   140002530:	mov    al,0x1
   140002532:	ret    
   140002533:	xor    al,al
   140002535:	ret    
   140002536:	int3   
   140002537:	int3   
   140002538:	int3   
   140002539:	int3   
   14000253a:	int3   
   14000253b:	int3   
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	mov    rdx,QWORD PTR [rdx]
   140002543:	cmp    QWORD PTR [rcx],rdx
   140002546:	setne  al
   140002549:	ret    
   14000254a:	int3   
   14000254b:	int3   
   14000254c:	int3   
   14000254d:	int3   
   14000254e:	int3   
   14000254f:	int3   
   140002550:	mov    rdx,QWORD PTR [rdx]
   140002553:	cmp    QWORD PTR [rcx],rdx
   140002556:	setne  al
   140002559:	ret    
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	mov    rax,QWORD PTR [rcx]
   140002563:	lea    rax,[rax+rdx*8]
   140002567:	ret    
   140002568:	int3   
   140002569:	int3   
   14000256a:	int3   
   14000256b:	int3   
   14000256c:	int3   
   14000256d:	int3   
   14000256e:	int3   
   14000256f:	int3   
   140002570:	mov    rax,QWORD PTR [rcx]
   140002573:	add    rax,0x10
   140002577:	ret    
   140002578:	int3   
   140002579:	int3   
   14000257a:	int3   
   14000257b:	int3   
   14000257c:	int3   
   14000257d:	int3   
   14000257e:	int3   
   14000257f:	int3   
   140002580:	mov    rax,QWORD PTR [rcx]
   140002583:	add    rax,0x10
   140002587:	ret    
   140002588:	int3   
   140002589:	int3   
   14000258a:	int3   
   14000258b:	int3   
   14000258c:	int3   
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	mov    rax,QWORD PTR [rcx]
   140002593:	add    rax,0x10
   140002597:	ret    
   140002598:	int3   
   140002599:	int3   
   14000259a:	int3   
   14000259b:	int3   
   14000259c:	int3   
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	mov    rax,QWORD PTR [rcx]
   1400025a3:	add    rax,0x10
   1400025a7:	ret    
   1400025a8:	int3   
   1400025a9:	int3   
   1400025aa:	int3   
   1400025ab:	int3   
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    rax,QWORD PTR [rcx]
   1400025b3:	mov    QWORD PTR [rdx],rax
   1400025b6:	mov    rax,QWORD PTR [rax]
   1400025b9:	mov    QWORD PTR [rcx],rax
   1400025bc:	mov    rax,rdx
   1400025bf:	ret    
   1400025c0:	mov    rax,QWORD PTR [rcx]
   1400025c3:	mov    rdx,QWORD PTR [rax]
   1400025c6:	mov    rax,rcx
   1400025c9:	mov    QWORD PTR [rcx],rdx
   1400025cc:	ret    
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	mov    rax,QWORD PTR [rcx]
   1400025d3:	mov    rdx,QWORD PTR [rax]
   1400025d6:	mov    rax,rcx
   1400025d9:	mov    QWORD PTR [rcx],rdx
   1400025dc:	ret    
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	mov    rax,QWORD PTR [rcx]
   1400025e3:	mov    rdx,QWORD PTR [rax]
   1400025e6:	mov    rax,rcx
   1400025e9:	mov    QWORD PTR [rcx],rdx
   1400025ec:	ret    
   1400025ed:	int3   
   1400025ee:	int3   
   1400025ef:	int3   
   1400025f0:	mov    rax,QWORD PTR [rcx]
   1400025f3:	mov    rdx,QWORD PTR [rax+0x8]
   1400025f7:	mov    rax,rcx
   1400025fa:	mov    QWORD PTR [rcx],rdx
   1400025fd:	ret    
   1400025fe:	int3   
   1400025ff:	int3   
   140002600:	mov    rax,QWORD PTR [rcx]
   140002603:	mov    rdx,QWORD PTR [rax+0x8]
   140002607:	mov    rax,rcx
   14000260a:	mov    QWORD PTR [rcx],rdx
   14000260d:	ret    
   14000260e:	int3   
   14000260f:	int3   
   140002610:	mov    rax,QWORD PTR [rcx]
   140002613:	lea    rcx,[rax+r8*8]
   140002617:	mov    rax,rdx
   14000261a:	mov    QWORD PTR [rdx],rcx
   14000261d:	ret    
   14000261e:	int3   
   14000261f:	int3   
   140002620:	cmp    QWORD PTR [rdx+0x18],0x10
   140002625:	mov    r9,QWORD PTR [rdx+0x10]
   140002629:	mov    r8,rdx
   14000262c:	jb     0x140002631
   14000262e:	mov    r8,QWORD PTR [rdx]
   140002631:	xor    edx,edx
   140002633:	movabs rcx,0xcbf29ce484222325
   14000263d:	test   r9,r9
   140002640:	je     0x140002664
   140002642:	movabs r10,0x100000001b3
   14000264c:	nop    DWORD PTR [rax+0x0]
   140002650:	movzx  eax,BYTE PTR [r8+rdx*1]
   140002655:	inc    rdx
   140002658:	xor    rcx,rax
   14000265b:	imul   rcx,r10
   14000265f:	cmp    rdx,r9
   140002662:	jb     0x140002650
   140002664:	mov    rax,rcx
   140002667:	shr    rax,0x20
   14000266b:	xor    rax,rcx
   14000266e:	ret    
   14000266f:	int3   
   140002670:	sub    rsp,0x28
   140002674:	mov    rcx,rdx
   140002677:	mov    rdx,r8
   14000267a:	call   0x140003e20
   14000267f:	test   eax,eax
   140002681:	setne  al
   140002684:	add    rsp,0x28
   140002688:	ret    
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	sub    rsp,0x28
   140002694:	mov    rcx,rdx
   140002697:	mov    rdx,r8
   14000269a:	call   0x140003e20
   14000269f:	test   eax,eax
   1400026a1:	sete   al
   1400026a4:	add    rsp,0x28
   1400026a8:	ret    
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	cmp    QWORD PTR [rdx+0x18],0x10
   1400026b5:	mov    r9,QWORD PTR [rdx+0x10]
   1400026b9:	mov    r8,rdx
   1400026bc:	jb     0x1400026c1
   1400026be:	mov    r8,QWORD PTR [rdx]
   1400026c1:	xor    edx,edx
   1400026c3:	movabs rcx,0xcbf29ce484222325
   1400026cd:	test   r9,r9
   1400026d0:	je     0x1400026f4
   1400026d2:	movabs r10,0x100000001b3
   1400026dc:	nop    DWORD PTR [rax+0x0]
   1400026e0:	movzx  eax,BYTE PTR [r8+rdx*1]
   1400026e5:	inc    rdx
   1400026e8:	xor    rcx,rax
   1400026eb:	imul   rcx,r10
   1400026ef:	cmp    rdx,r9
   1400026f2:	jb     0x1400026e0
   1400026f4:	mov    rax,rcx
   1400026f7:	shr    rax,0x20
   1400026fb:	xor    rax,rcx
   1400026fe:	ret    
   1400026ff:	int3   
   140002700:	lea    rax,[rdx*8+0x0]
   140002708:	add    QWORD PTR [rcx],rax
   14000270b:	mov    rax,rcx
   14000270e:	ret    
   14000270f:	int3   
   140002710:	lea    rax,[rdx*8+0x0]
   140002718:	add    QWORD PTR [rcx],rax
   14000271b:	mov    rax,rcx
   14000271e:	ret    
   14000271f:	int3   
   140002720:	mov    QWORD PTR [rsp+0x8],rbx
   140002725:	push   rdi
   140002726:	sub    rsp,0x20
   14000272a:	cmp    QWORD PTR [rcx+0x38],0x10
   14000272f:	mov    edi,edx
   140002731:	mov    rbx,rcx
   140002734:	jb     0x14000273f
   140002736:	mov    rcx,QWORD PTR [rcx+0x20]
   14000273a:	call   0x140005778
   14000273f:	mov    QWORD PTR [rbx+0x38],0xf
   140002747:	mov    QWORD PTR [rbx+0x30],0x0
   14000274f:	mov    BYTE PTR [rbx+0x20],0x0
   140002753:	cmp    QWORD PTR [rbx+0x18],0x10
   140002758:	jb     0x140002762
   14000275a:	mov    rcx,QWORD PTR [rbx]
   14000275d:	call   0x140005778
   140002762:	mov    QWORD PTR [rbx+0x18],0xf
   14000276a:	mov    QWORD PTR [rbx+0x10],0x0
   140002772:	mov    BYTE PTR [rbx],0x0
   140002775:	test   dil,0x1
   140002779:	je     0x140002783
   14000277b:	mov    rcx,rbx
   14000277e:	call   0x140005778
   140002783:	mov    rax,rbx
   140002786:	mov    rbx,QWORD PTR [rsp+0x30]
   14000278b:	add    rsp,0x20
   14000278f:	pop    rdi
   140002790:	ret    
   140002791:	int3   
   140002792:	int3   
   140002793:	int3   
   140002794:	int3   
   140002795:	int3   
   140002796:	int3   
   140002797:	int3   
   140002798:	int3   
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	rex push rbx
   1400027a2:	sub    rsp,0x20
   1400027a6:	lea    rax,[rip+0x29f6b]        # 0x14002c718
   1400027ad:	mov    rbx,rcx
   1400027b0:	mov    QWORD PTR [rcx],rax
   1400027b3:	test   dl,0x1
   1400027b6:	je     0x1400027bd
   1400027b8:	call   0x140005778
   1400027bd:	mov    rax,rbx
   1400027c0:	add    rsp,0x20
   1400027c4:	pop    rbx
   1400027c5:	ret    
   1400027c6:	int3   
   1400027c7:	int3   
   1400027c8:	int3   
   1400027c9:	int3   
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	rex push rbx
   1400027d2:	sub    rsp,0x20
   1400027d6:	lea    rax,[rip+0x29f3b]        # 0x14002c718
   1400027dd:	mov    rbx,rcx
   1400027e0:	mov    QWORD PTR [rcx],rax
   1400027e3:	test   dl,0x1
   1400027e6:	je     0x1400027ed
   1400027e8:	call   0x140005778
   1400027ed:	mov    rax,rbx
   1400027f0:	add    rsp,0x20
   1400027f4:	pop    rbx
   1400027f5:	ret    
   1400027f6:	int3   
   1400027f7:	int3   
   1400027f8:	int3   
   1400027f9:	int3   
   1400027fa:	int3   
   1400027fb:	int3   
   1400027fc:	int3   
   1400027fd:	int3   
   1400027fe:	int3   
   1400027ff:	int3   
   140002800:	rex push rbx
   140002802:	sub    rsp,0x20
   140002806:	lea    rax,[rip+0x29f0b]        # 0x14002c718
   14000280d:	mov    rbx,rcx
   140002810:	mov    QWORD PTR [rcx],rax
   140002813:	test   dl,0x1
   140002816:	je     0x14000281d
   140002818:	call   0x140005778
   14000281d:	mov    rax,rbx
   140002820:	add    rsp,0x20
   140002824:	pop    rbx
   140002825:	ret    
   140002826:	int3   
   140002827:	int3   
   140002828:	int3   
   140002829:	int3   
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	int3   
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	rex push rbx
   140002832:	sub    rsp,0x20
   140002836:	lea    rax,[rip+0x29edb]        # 0x14002c718
   14000283d:	mov    rbx,rcx
   140002840:	mov    QWORD PTR [rcx],rax
   140002843:	test   dl,0x1
   140002846:	je     0x14000284d
   140002848:	call   0x140005778
   14000284d:	mov    rax,rbx
   140002850:	add    rsp,0x20
   140002854:	pop    rbx
   140002855:	ret    
   140002856:	int3   
   140002857:	int3   
   140002858:	int3   
   140002859:	int3   
   14000285a:	int3   
   14000285b:	int3   
   14000285c:	int3   
   14000285d:	int3   
   14000285e:	int3   
   14000285f:	int3   
   140002860:	mov    QWORD PTR [rsp+0x18],r8
   140002865:	mov    QWORD PTR [rsp+0x20],r9
   14000286a:	push   rbx
   14000286b:	push   rsi
   14000286c:	sub    rsp,0x28
   140002870:	xor    ebx,ebx
   140002872:	lea    rax,[rdx-0x1]
   140002876:	mov    rsi,rcx
   140002879:	cmp    rax,0x7ffffffe
   14000287f:	mov    r9d,ebx
   140002882:	mov    ecx,0x80070057
   140002887:	cmova  r9d,ecx
   14000288b:	test   r9d,r9d
   14000288e:	js     0x1400028df
   140002890:	mov    QWORD PTR [rsp+0x20],rdi
   140002895:	lea    rdi,[rdx-0x1]
   140002899:	lea    r9,[rsp+0x58]
   14000289e:	mov    rdx,rdi
   1400028a1:	mov    rcx,rsi
   1400028a4:	call   0x140006154
   1400028a9:	test   eax,eax
   1400028ab:	js     0x1400028c8
   1400028ad:	cdqe   
   1400028af:	cmp    rax,rdi
   1400028b2:	ja     0x1400028c8
   1400028b4:	jne    0x1400028d1
   1400028b6:	mov    WORD PTR [rsi+rdi*2],bx
   1400028ba:	mov    rdi,QWORD PTR [rsp+0x20]
   1400028bf:	mov    eax,ebx
   1400028c1:	add    rsp,0x28
   1400028c5:	pop    rsi
   1400028c6:	pop    rbx
   1400028c7:	ret    
   1400028c8:	mov    WORD PTR [rsi+rdi*2],bx
   1400028cc:	mov    ebx,0x8007007a
   1400028d1:	mov    eax,ebx
   1400028d3:	mov    rdi,QWORD PTR [rsp+0x20]
   1400028d8:	add    rsp,0x28
   1400028dc:	pop    rsi
   1400028dd:	pop    rbx
   1400028de:	ret    
   1400028df:	mov    eax,r9d
   1400028e2:	test   rdx,rdx
   1400028e5:	je     0x1400028ea
   1400028e7:	mov    WORD PTR [rsi],bx
   1400028ea:	add    rsp,0x28
   1400028ee:	pop    rsi
   1400028ef:	pop    rbx
   1400028f0:	ret    
   1400028f1:	int3   
   1400028f2:	int3   
   1400028f3:	int3   
   1400028f4:	int3   
   1400028f5:	int3   
   1400028f6:	int3   
   1400028f7:	int3   
   1400028f8:	int3   
   1400028f9:	int3   
   1400028fa:	int3   
   1400028fb:	int3   
   1400028fc:	int3   
   1400028fd:	int3   
   1400028fe:	int3   
   1400028ff:	int3   
   140002900:	mov    QWORD PTR [rsp+0x8],rbx
   140002905:	mov    QWORD PTR [rsp+0x10],rsi
   14000290a:	mov    QWORD PTR [rsp+0x18],rdi
   14000290f:	push   r14
   140002911:	sub    rsp,0x20
   140002915:	mov    rax,r9
   140002918:	mov    r9,QWORD PTR [rsp+0x50]
   14000291d:	lea    rbx,[rdx-0x1]
   140002921:	mov    rsi,r8
   140002924:	mov    rdx,rbx
   140002927:	mov    r8,rax
   14000292a:	mov    r14,rcx
   14000292d:	xor    edi,edi
   14000292f:	call   0x140006154
   140002934:	test   eax,eax
   140002936:	js     0x14000294d
   140002938:	cdqe   
   14000293a:	cmp    rax,rbx
   14000293d:	ja     0x14000294d
   14000293f:	jne    0x140002948
   140002941:	mov    WORD PTR [r14+rbx*2],di
   140002946:	jmp    0x140002957
   140002948:	mov    rbx,rax
   14000294b:	jmp    0x140002957
   14000294d:	mov    WORD PTR [r14+rbx*2],di
   140002952:	mov    edi,0x8007007a
   140002957:	mov    eax,edi
   140002959:	test   rsi,rsi
   14000295c:	je     0x140002961
   14000295e:	mov    QWORD PTR [rsi],rbx
   140002961:	mov    rbx,QWORD PTR [rsp+0x30]
   140002966:	mov    rsi,QWORD PTR [rsp+0x38]
   14000296b:	mov    rdi,QWORD PTR [rsp+0x40]
   140002970:	add    rsp,0x20
   140002974:	pop    r14
   140002976:	ret    
   140002977:	int3   
   140002978:	int3   
   140002979:	int3   
   14000297a:	int3   
   14000297b:	int3   
   14000297c:	int3   
   14000297d:	int3   
   14000297e:	int3   
   14000297f:	int3   
   140002980:	test   rdx,rdx
   140002983:	je     0x14000298d
   140002985:	cmp    rdx,r8
   140002988:	ja     0x14000298d
   14000298a:	xor    eax,eax
   14000298c:	ret    
   14000298d:	mov    eax,0x80070057
   140002992:	ret    
   140002993:	int3   
   140002994:	int3   
   140002995:	int3   
   140002996:	int3   
   140002997:	int3   
   140002998:	int3   
   140002999:	int3   
   14000299a:	int3   
   14000299b:	int3   
   14000299c:	int3   
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	ret    0x0
   1400029a3:	int3   
   1400029a4:	int3   
   1400029a5:	int3   
   1400029a6:	int3   
   1400029a7:	int3   
   1400029a8:	int3   
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	mov    rax,QWORD PTR [rcx+0x10]
   1400029b4:	add    r8,r8
   1400029b7:	mov    rcx,QWORD PTR [rax+r8*8]
   1400029bb:	mov    rax,rdx
   1400029be:	mov    QWORD PTR [rdx],rcx
   1400029c1:	ret    
   1400029c2:	int3   
   1400029c3:	int3   
   1400029c4:	int3   
   1400029c5:	int3   
   1400029c6:	int3   
   1400029c7:	int3   
   1400029c8:	int3   
   1400029c9:	int3   
   1400029ca:	int3   
   1400029cb:	int3   
   1400029cc:	int3   
   1400029cd:	int3   
   1400029ce:	int3   
   1400029cf:	int3   
   1400029d0:	xor    r8d,r8d
   1400029d3:	xor    edx,edx
   1400029d5:	jmp    0x1400029e0
   1400029da:	int3   
   1400029db:	int3   
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	rex push rdi
   1400029e2:	sub    rsp,0x30
   1400029e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400029ef:	mov    QWORD PTR [rsp+0x40],rbx
   1400029f4:	mov    rdi,r8
   1400029f7:	mov    rbx,rdx
   1400029fa:	mov    ecx,0x50
   1400029ff:	call   0x14000570c
   140002a04:	mov    QWORD PTR [rsp+0x58],rax
   140002a09:	test   rax,rax
   140002a0c:	jne    0x140002a14
   140002a0e:	call   0x140005470
   140002a13:	int3   
   140002a14:	test   rbx,rbx
   140002a17:	jne    0x140002a1f
   140002a19:	mov    rbx,rax
   140002a1c:	mov    rdi,rax
   140002a1f:	mov    QWORD PTR [rax],rbx
   140002a22:	lea    rcx,[rax+0x8]
   140002a26:	test   rcx,rcx
   140002a29:	je     0x140002a2e
   140002a2b:	mov    QWORD PTR [rcx],rdi
   140002a2e:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a33:	add    rsp,0x30
   140002a37:	pop    rdi
   140002a38:	ret    
   140002a39:	int3   
   140002a3a:	int3   
   140002a3b:	int3   
   140002a3c:	int3   
   140002a3d:	int3   
   140002a3e:	int3   
   140002a3f:	int3   
   140002a40:	mov    QWORD PTR [rsp+0x20],rbx
   140002a45:	push   rsi
   140002a46:	sub    rsp,0x40
   140002a4a:	mov    rax,QWORD PTR [rcx+0x8]
   140002a4e:	mov    rbx,QWORD PTR [rcx+0x30]
   140002a52:	movss  xmm2,DWORD PTR [rip+0x29f5a]        # 0x14002c9b4
   140002a5a:	xorps  xmm0,xmm0
   140002a5d:	mov    rsi,rcx
   140002a60:	cvtsi2ss xmm0,rax
   140002a65:	test   rax,rax
   140002a68:	jns    0x140002a6e
   140002a6a:	addss  xmm0,xmm2
   140002a6e:	xorps  xmm1,xmm1
   140002a71:	cvtsi2ss xmm1,rbx
   140002a76:	test   rbx,rbx
   140002a79:	jns    0x140002a7f
   140002a7b:	addss  xmm1,xmm2
   140002a7f:	divss  xmm0,xmm1
   140002a83:	comiss xmm0,DWORD PTR [rcx+0x38]
   140002a87:	jbe    0x140002b24
   140002a8d:	mov    QWORD PTR [rsp+0x60],rdi
   140002a92:	cmp    rbx,0x200
   140002a99:	jae    0x140002aa5
   140002a9b:	lea    rbx,[rbx*8+0x0]
   140002aa3:	jmp    0x140002ab7
   140002aa5:	movabs rax,0xfffffffffffffff
   140002aaf:	cmp    rbx,rax
   140002ab2:	jae    0x140002ab7
   140002ab4:	add    rbx,rbx
   140002ab7:	mov    rax,QWORD PTR [rcx]
   140002aba:	mov    r8,QWORD PTR [rcx+0x10]
   140002abe:	add    rcx,0x10
   140002ac2:	mov    QWORD PTR [rsp+0x50],rax
   140002ac7:	lea    rax,[rsp+0x50]
   140002acc:	lea    r9,[rbx+rbx*1]
   140002ad0:	lea    rdx,[rsp+0x58]
   140002ad5:	mov    QWORD PTR [rcx+0x8],r8
   140002ad9:	mov    QWORD PTR [rsp+0x20],rax
   140002ade:	call   0x140003130
   140002ae3:	mov    rdi,QWORD PTR [rsi]
   140002ae6:	lea    rax,[rbx-0x1]
   140002aea:	mov    QWORD PTR [rsi+0x28],rax
   140002aee:	mov    QWORD PTR [rsi+0x30],rbx
   140002af2:	cmp    QWORD PTR [rdi],rdi
   140002af5:	je     0x140002b1f
   140002af7:	mov    rdi,QWORD PTR [rdi+0x8]
   140002afb:	nop    DWORD PTR [rax+rax*1+0x0]
   140002b00:	mov    rbx,QWORD PTR [rsi]
   140002b03:	lea    rdx,[rsp+0x30]
   140002b08:	mov    rcx,rsi
   140002b0b:	mov    rbx,QWORD PTR [rbx]
   140002b0e:	mov    r9,rbx
   140002b11:	lea    r8,[rbx+0x10]
   140002b15:	call   0x140001300
   140002b1a:	cmp    rbx,rdi
   140002b1d:	jne    0x140002b00
   140002b1f:	mov    rdi,QWORD PTR [rsp+0x60]
   140002b24:	mov    rbx,QWORD PTR [rsp+0x68]
   140002b29:	add    rsp,0x40
   140002b2d:	pop    rsi
   140002b2e:	ret    
   140002b2f:	int3   
   140002b30:	mov    QWORD PTR [rsp+0x8],rcx
   140002b35:	push   rdi
   140002b36:	sub    rsp,0x40
   140002b3a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002b43:	mov    QWORD PTR [rsp+0x68],rbx
   140002b48:	mov    rdi,rdx
   140002b4b:	mov    rbx,rcx
   140002b4e:	mov    rax,QWORD PTR [rdx+0x28]
   140002b52:	mov    QWORD PTR [rcx+0x28],rax
   140002b56:	mov    rax,QWORD PTR [rdx+0x30]
   140002b5a:	mov    QWORD PTR [rcx+0x30],rax
   140002b5e:	mov    eax,DWORD PTR [rdx+0x38]
   140002b61:	mov    DWORD PTR [rcx+0x38],eax
   140002b64:	call   0x140003d70
   140002b69:	nop
   140002b6a:	mov    rax,QWORD PTR [rbx]
   140002b6d:	mov    QWORD PTR [rsp+0x58],rax
   140002b72:	mov    r9,QWORD PTR [rdi+0x18]
   140002b76:	sub    r9,QWORD PTR [rdi+0x10]
   140002b7a:	sar    r9,0x3
   140002b7e:	lea    rcx,[rbx+0x10]
   140002b82:	mov    r8,QWORD PTR [rcx]
   140002b85:	mov    QWORD PTR [rcx+0x8],r8
   140002b89:	lea    rax,[rsp+0x58]
   140002b8e:	mov    QWORD PTR [rsp+0x20],rax
   140002b93:	lea    rdx,[rsp+0x60]
   140002b98:	call   0x140003130
   140002b9d:	mov    rdx,QWORD PTR [rdi]
   140002ba0:	mov    r8,rdx
   140002ba3:	mov    rdx,QWORD PTR [rdx]
   140002ba6:	mov    rcx,rbx
   140002ba9:	call   0x140001c70
   140002bae:	nop
   140002baf:	mov    rbx,QWORD PTR [rsp+0x68]
   140002bb4:	add    rsp,0x40
   140002bb8:	pop    rdi
   140002bb9:	ret    
   140002bba:	int3   
   140002bbb:	int3   
   140002bbc:	int3   
   140002bbd:	int3   
   140002bbe:	int3   
   140002bbf:	int3   
   140002bc0:	mov    QWORD PTR [rsp+0x18],r8
   140002bc5:	mov    QWORD PTR [rsp+0x10],rdx
   140002bca:	mov    QWORD PTR [rsp+0x8],rcx
   140002bcf:	push   rbx
   140002bd0:	push   rsi
   140002bd1:	push   rdi
   140002bd2:	push   r14
   140002bd4:	sub    rsp,0x38
   140002bd8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002be1:	mov    rsi,r8
   140002be4:	mov    rbx,rcx
   140002be7:	mov    rdi,rdx
   140002bea:	or     rdi,0xf
   140002bee:	cmp    rdi,0xfffffffffffffffe
   140002bf2:	jbe    0x140002bf9
   140002bf4:	mov    rdi,rdx
   140002bf7:	jmp    0x140002c2e
   140002bf9:	mov    r8,QWORD PTR [rcx+0x18]
   140002bfd:	mov    rcx,r8
   140002c00:	shr    rcx,1
   140002c03:	movabs rax,0xaaaaaaaaaaaaaaab
   140002c0d:	mul    rdi
   140002c10:	shr    rdx,1
   140002c13:	cmp    rcx,rdx
   140002c16:	jbe    0x140002c2e
   140002c18:	mov    rdi,0xfffffffffffffffe
   140002c1f:	mov    rax,rdi
   140002c22:	sub    rax,rcx
   140002c25:	cmp    r8,rax
   140002c28:	ja     0x140002c2e
   140002c2a:	lea    rdi,[rcx+r8*1]
   140002c2e:	lea    rcx,[rdi+0x1]
   140002c32:	xor    r14d,r14d
   140002c35:	test   rcx,rcx
   140002c38:	je     0x140002c53
   140002c3a:	cmp    rcx,0xffffffffffffffff
   140002c3e:	ja     0x140002c4d
   140002c40:	call   0x14000570c
   140002c45:	mov    r14,rax
   140002c48:	test   rax,rax
   140002c4b:	jne    0x140002c53
   140002c4d:	call   0x140005470
   140002c52:	nop
   140002c53:	jmp    0x140002c69
   140002c55:	mov    rbx,QWORD PTR [rsp+0x60]
   140002c5a:	mov    rsi,QWORD PTR [rsp+0x70]
   140002c5f:	mov    rdi,QWORD PTR [rsp+0x68]
   140002c64:	mov    r14,QWORD PTR [rsp+0x78]
   140002c69:	test   rsi,rsi
   140002c6c:	je     0x140002c8d
   140002c6e:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c73:	jb     0x140002c7a
   140002c75:	mov    rdx,QWORD PTR [rbx]
   140002c78:	jmp    0x140002c7d
   140002c7a:	mov    rdx,rbx
   140002c7d:	test   rsi,rsi
   140002c80:	je     0x140002c8d
   140002c82:	mov    r8,rsi
   140002c85:	mov    rcx,r14
   140002c88:	call   0x1400059f0
   140002c8d:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c92:	jb     0x140002c9c
   140002c94:	mov    rcx,QWORD PTR [rbx]
   140002c97:	call   0x140005778
   140002c9c:	mov    BYTE PTR [rbx],0x0
   140002c9f:	mov    QWORD PTR [rbx],r14
   140002ca2:	mov    QWORD PTR [rbx+0x18],rdi
   140002ca6:	mov    QWORD PTR [rbx+0x10],rsi
   140002caa:	cmp    rdi,0x10
   140002cae:	jb     0x140002cb3
   140002cb0:	mov    rbx,r14
   140002cb3:	mov    BYTE PTR [rbx+rsi*1],0x0
   140002cb7:	add    rsp,0x38
   140002cbb:	pop    r14
   140002cbd:	pop    rdi
   140002cbe:	pop    rsi
   140002cbf:	pop    rbx
   140002cc0:	ret    
   140002cc1:	int3   
   140002cc2:	int3   
   140002cc3:	int3   
   140002cc4:	int3   
   140002cc5:	int3   
   140002cc6:	int3   
   140002cc7:	int3   
   140002cc8:	int3   
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	ret    0x0
   140002cd3:	int3   
   140002cd4:	int3   
   140002cd5:	int3   
   140002cd6:	int3   
   140002cd7:	int3   
   140002cd8:	int3   
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	rex push rbx
   140002ce2:	sub    rsp,0x20
   140002ce6:	mov    rbx,rdx
   140002ce9:	mov    rdx,QWORD PTR [rdx+0x8]
   140002ced:	mov    rax,QWORD PTR [rbx]
   140002cf0:	mov    QWORD PTR [rdx],rax
   140002cf3:	mov    rdx,QWORD PTR [rbx]
   140002cf6:	mov    rax,QWORD PTR [rbx+0x8]
   140002cfa:	mov    QWORD PTR [rdx+0x8],rax
   140002cfe:	dec    QWORD PTR [rcx+0x8]
   140002d02:	cmp    QWORD PTR [rbx+0x48],0x10
   140002d07:	jb     0x140002d12
   140002d09:	mov    rcx,QWORD PTR [rbx+0x30]
   140002d0d:	call   0x140005778
   140002d12:	mov    QWORD PTR [rbx+0x48],0xf
   140002d1a:	mov    QWORD PTR [rbx+0x40],0x0
   140002d22:	mov    BYTE PTR [rbx+0x30],0x0
   140002d26:	cmp    QWORD PTR [rbx+0x28],0x10
   140002d2b:	jb     0x140002d36
   140002d2d:	mov    rcx,QWORD PTR [rbx+0x10]
   140002d31:	call   0x140005778
   140002d36:	mov    QWORD PTR [rbx+0x28],0xf
   140002d3e:	mov    QWORD PTR [rbx+0x20],0x0
   140002d46:	mov    rcx,rbx
   140002d49:	mov    BYTE PTR [rbx+0x10],0x0
   140002d4d:	call   0x140005778
   140002d52:	add    rsp,0x20
   140002d56:	pop    rbx
   140002d57:	ret    
   140002d58:	int3   
   140002d59:	int3   
   140002d5a:	int3   
   140002d5b:	int3   
   140002d5c:	int3   
   140002d5d:	int3   
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	mov    r9,QWORD PTR [rcx+0x10]
   140002d64:	mov    rax,QWORD PTR [rcx]
   140002d67:	add    r8,r8
   140002d6a:	cmp    QWORD PTR [r9+r8*8],rax
   140002d6e:	jne    0x140002d77
   140002d70:	mov    QWORD PTR [rdx],rax
   140002d73:	mov    rax,rdx
   140002d76:	ret    
   140002d77:	mov    rax,QWORD PTR [r9+r8*8+0x8]
   140002d7c:	mov    rcx,QWORD PTR [rax]
   140002d7f:	mov    rax,rdx
   140002d82:	mov    QWORD PTR [rdx],rcx
   140002d85:	ret    
   140002d86:	int3   
   140002d87:	int3   
   140002d88:	int3   
   140002d89:	int3   
   140002d8a:	int3   
   140002d8b:	int3   
   140002d8c:	int3   
   140002d8d:	int3   
   140002d8e:	int3   
   140002d8f:	int3   
   140002d90:	cmp    QWORD PTR [rcx+0x18],0x10
   140002d95:	mov    QWORD PTR [rcx+0x10],rdx
   140002d99:	jb     0x140002da3
   140002d9b:	mov    rax,QWORD PTR [rcx]
   140002d9e:	mov    BYTE PTR [rax+rdx*1],0x0
   140002da2:	ret    
   140002da3:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002da7:	ret    
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	mov    rcx,rdx
   140002db3:	jmp    0x140005778
   140002db8:	int3   
   140002db9:	int3   
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	rex push rbx
   140002dc2:	sub    rsp,0x20
   140002dc6:	cmp    QWORD PTR [rdx+0x48],0x10
   140002dcb:	mov    rbx,rdx
   140002dce:	jb     0x140002dd9
   140002dd0:	mov    rcx,QWORD PTR [rdx+0x30]
   140002dd4:	call   0x140005778
   140002dd9:	mov    QWORD PTR [rbx+0x48],0xf
   140002de1:	mov    QWORD PTR [rbx+0x40],0x0
   140002de9:	mov    BYTE PTR [rbx+0x30],0x0
   140002ded:	cmp    QWORD PTR [rbx+0x28],0x10
   140002df2:	jb     0x140002dfd
   140002df4:	mov    rcx,QWORD PTR [rbx+0x10]
   140002df8:	call   0x140005778
   140002dfd:	mov    QWORD PTR [rbx+0x28],0xf
   140002e05:	mov    QWORD PTR [rbx+0x20],0x0
   140002e0d:	mov    rcx,rbx
   140002e10:	mov    BYTE PTR [rbx+0x10],0x0
   140002e14:	add    rsp,0x20
   140002e18:	pop    rbx
   140002e19:	jmp    0x140005778
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	mov    rax,rdx
   140002e23:	ret    
   140002e24:	int3   
   140002e25:	int3   
   140002e26:	int3   
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	mov    rax,rdx
   140002e33:	ret    
   140002e34:	int3   
   140002e35:	int3   
   140002e36:	int3   
   140002e37:	int3   
   140002e38:	int3   
   140002e39:	int3   
   140002e3a:	int3   
   140002e3b:	int3   
   140002e3c:	int3   
   140002e3d:	int3   
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	mov    rax,rdx
   140002e43:	ret    
   140002e44:	int3   
   140002e45:	int3   
   140002e46:	int3   
   140002e47:	int3   
   140002e48:	int3   
   140002e49:	int3   
   140002e4a:	int3   
   140002e4b:	int3   
   140002e4c:	int3   
   140002e4d:	int3   
   140002e4e:	int3   
   140002e4f:	int3   
   140002e50:	mov    rax,rdx
   140002e53:	ret    
   140002e54:	int3   
   140002e55:	int3   
   140002e56:	int3   
   140002e57:	int3   
   140002e58:	int3   
   140002e59:	int3   
   140002e5a:	int3   
   140002e5b:	int3   
   140002e5c:	int3   
   140002e5d:	int3   
   140002e5e:	int3   
   140002e5f:	int3   
   140002e60:	mov    rax,rdx
   140002e63:	ret    
   140002e64:	int3   
   140002e65:	int3   
   140002e66:	int3   
   140002e67:	int3   
   140002e68:	int3   
   140002e69:	int3   
   140002e6a:	int3   
   140002e6b:	int3   
   140002e6c:	int3   
   140002e6d:	int3   
   140002e6e:	int3   
   140002e6f:	int3   
   140002e70:	mov    QWORD PTR [rsp+0x20],rbx
   140002e75:	push   rdi
   140002e76:	sub    rsp,0x20
   140002e7a:	mov    rdi,rdx
   140002e7d:	mov    rbx,rcx
   140002e80:	cmp    rdx,0xfffffffffffffffe
   140002e84:	ja     0x140002f2d
   140002e8a:	mov    rax,QWORD PTR [rcx+0x18]
   140002e8e:	mov    QWORD PTR [rsp+0x30],rbp
   140002e93:	xor    ebp,ebp
   140002e95:	cmp    rax,rdx
   140002e98:	jae    0x140002ea5
   140002e9a:	mov    r8,QWORD PTR [rcx+0x10]
   140002e9e:	call   0x140002bc0
   140002ea3:	jmp    0x140002f17
   140002ea5:	test   r8b,r8b
   140002ea8:	je     0x140002f02
   140002eaa:	cmp    rdx,0x10
   140002eae:	jae    0x140002f02
   140002eb0:	mov    QWORD PTR [rsp+0x38],rsi
   140002eb5:	mov    rsi,QWORD PTR [rcx+0x10]
   140002eb9:	cmp    rdx,rsi
   140002ebc:	cmovb  rsi,rdx
   140002ec0:	cmp    rax,0x10
   140002ec4:	jb     0x140002eeb
   140002ec6:	mov    QWORD PTR [rsp+0x40],r14
   140002ecb:	mov    r14,QWORD PTR [rcx]
   140002ece:	test   rsi,rsi
   140002ed1:	je     0x140002ede
   140002ed3:	mov    r8,rsi
   140002ed6:	mov    rdx,r14
   140002ed9:	call   0x1400059f0
   140002ede:	mov    rcx,r14
   140002ee1:	call   0x140005778
   140002ee6:	mov    r14,QWORD PTR [rsp+0x40]
   140002eeb:	mov    QWORD PTR [rbx+0x10],rsi
   140002eef:	mov    QWORD PTR [rbx+0x18],0xf
   140002ef7:	mov    BYTE PTR [rsi+rbx*1],bpl
   140002efb:	mov    rsi,QWORD PTR [rsp+0x38]
   140002f00:	jmp    0x140002f17
   140002f02:	test   rdx,rdx
   140002f05:	jne    0x140002f17
   140002f07:	mov    QWORD PTR [rcx+0x10],rbp
   140002f0b:	cmp    rax,0x10
   140002f0f:	jb     0x140002f14
   140002f11:	mov    rbx,QWORD PTR [rcx]
   140002f14:	mov    BYTE PTR [rbx],bpl
   140002f17:	mov    rbp,QWORD PTR [rsp+0x30]
   140002f1c:	mov    rbx,QWORD PTR [rsp+0x48]
   140002f21:	test   rdi,rdi
   140002f24:	setne  al
   140002f27:	add    rsp,0x20
   140002f2b:	pop    rdi
   140002f2c:	ret    
   140002f2d:	lea    rcx,[rip+0x29a2c]        # 0x14002c960
   140002f34:	call   0x140005518
   140002f39:	int3   
   140002f3a:	int3   
   140002f3b:	int3   
   140002f3c:	int3   
   140002f3d:	int3   
   140002f3e:	int3   
   140002f3f:	int3   
   140002f40:	mov    r8,QWORD PTR [rcx+0x10]
   140002f44:	movabs rax,0x1fffffffffffffff
   140002f4e:	sub    r8,QWORD PTR [rcx]
   140002f51:	sar    r8,0x3
   140002f55:	mov    rcx,r8
   140002f58:	shr    rcx,1
   140002f5b:	sub    rax,rcx
   140002f5e:	cmp    rax,r8
   140002f61:	jae    0x140002f71
   140002f63:	xor    r8d,r8d
   140002f66:	cmp    r8,rdx
   140002f69:	cmovb  r8,rdx
   140002f6d:	mov    rax,r8
   140002f70:	ret    
   140002f71:	add    r8,rcx
   140002f74:	cmp    r8,rdx
   140002f77:	cmovb  r8,rdx
   140002f7b:	mov    rax,r8
   140002f7e:	ret    
   140002f7f:	int3   
   140002f80:	xor    r9d,r9d
   140002f83:	movabs rax,0xcbf29ce484222325
   140002f8d:	test   rdx,rdx
   140002f90:	je     0x140002fb4
   140002f92:	movabs r10,0x100000001b3
   140002f9c:	nop    DWORD PTR [rax+0x0]
   140002fa0:	movzx  r8d,BYTE PTR [r9+rcx*1]
   140002fa5:	inc    r9
   140002fa8:	xor    rax,r8
   140002fab:	imul   rax,r10
   140002faf:	cmp    r9,rdx
   140002fb2:	jb     0x140002fa0
   140002fb4:	mov    rcx,rax
   140002fb7:	shr    rcx,0x20
   140002fbb:	xor    rax,rcx
   140002fbe:	ret    
   140002fbf:	int3   
   140002fc0:	cmp    QWORD PTR [rdx+0x18],0x10
   140002fc5:	mov    r9,QWORD PTR [rdx+0x10]
   140002fc9:	mov    r8,rdx
   140002fcc:	mov    r10,rcx
   140002fcf:	jb     0x140002fd4
   140002fd1:	mov    r8,QWORD PTR [rdx]
   140002fd4:	xor    edx,edx
   140002fd6:	movabs rcx,0xcbf29ce484222325
   140002fe0:	test   r9,r9
   140002fe3:	je     0x140003004
   140002fe5:	movabs r11,0x100000001b3
   140002fef:	nop
   140002ff0:	movzx  eax,BYTE PTR [r8+rdx*1]
   140002ff5:	inc    rdx
   140002ff8:	xor    rcx,rax
   140002ffb:	imul   rcx,r11
   140002fff:	cmp    rdx,r9
   140003002:	jb     0x140002ff0
   140003004:	mov    rdx,QWORD PTR [r10+0x28]
   140003008:	mov    rax,rcx
   14000300b:	shr    rax,0x20
   14000300f:	xor    rax,rcx
   140003012:	and    rax,rdx
   140003015:	cmp    QWORD PTR [r10+0x30],rax
   140003019:	ja     0x140003028
   14000301b:	shr    rdx,1
   14000301e:	or     rcx,0xffffffffffffffff
   140003022:	sub    rcx,rdx
   140003025:	add    rax,rcx
   140003028:	ret    
   140003029:	int3   
   14000302a:	int3   
   14000302b:	int3   
   14000302c:	int3   
   14000302d:	int3   
   14000302e:	int3   
   14000302f:	int3   
   140003030:	sub    rsp,0x28
   140003034:	mov    r8,QWORD PTR [rcx+0x8]
   140003038:	movabs rax,0x333333333333332
   140003042:	sub    rax,r8
   140003045:	cmp    rax,rdx
   140003048:	jb     0x140003057
   14000304a:	lea    rax,[r8+rdx*1]
   14000304e:	mov    QWORD PTR [rcx+0x8],rax
   140003052:	add    rsp,0x28
   140003056:	ret    
   140003057:	lea    rcx,[rip+0x29942]        # 0x14002c9a0
   14000305e:	call   0x140005518
   140003063:	int3   
   140003064:	int3   
   140003065:	int3   
   140003066:	int3   
   140003067:	int3   
   140003068:	int3   
   140003069:	int3   
   14000306a:	int3   
   14000306b:	int3   
   14000306c:	int3   
   14000306d:	int3   
   14000306e:	int3   
   14000306f:	int3   
   140003070:	mov    QWORD PTR [rsp+0x18],rbx
   140003075:	push   rdi
   140003076:	sub    rsp,0x30
   14000307a:	mov    rax,QWORD PTR [rcx]
   14000307d:	mov    r8,QWORD PTR [rcx+0x10]
   140003081:	mov    rbx,rcx
   140003084:	add    rcx,0x10
   140003088:	mov    QWORD PTR [rsp+0x40],rax
   14000308d:	mov    rdi,rdx
   140003090:	lea    rax,[rsp+0x40]
   140003095:	lea    r9,[rdx+rdx*1]
   140003099:	lea    rdx,[rsp+0x48]
   14000309e:	mov    QWORD PTR [rsp+0x20],rax
   1400030a3:	mov    QWORD PTR [rcx+0x8],r8
   1400030a7:	call   0x140003130
   1400030ac:	lea    rax,[rdi-0x1]
   1400030b0:	mov    QWORD PTR [rbx+0x30],rdi
   1400030b4:	mov    QWORD PTR [rbx+0x28],rax
   1400030b8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400030bd:	add    rsp,0x30
   1400030c1:	pop    rdi
   1400030c2:	ret    
   1400030c3:	int3   
   1400030c4:	int3   
   1400030c5:	int3   
   1400030c6:	int3   
   1400030c7:	int3   
   1400030c8:	int3   
   1400030c9:	int3   
   1400030ca:	int3   
   1400030cb:	int3   
   1400030cc:	int3   
   1400030cd:	int3   
   1400030ce:	int3   
   1400030cf:	int3   
   1400030d0:	mov    r10,QWORD PTR [rcx+0x10]
   1400030d4:	shl    r9,0x4
   1400030d8:	mov    QWORD PTR [rsp+0x10],rdx
   1400030dd:	add    r10,r9
   1400030e0:	mov    r11,rcx
   1400030e3:	mov    rax,QWORD PTR [r10]
   1400030e6:	cmp    rax,QWORD PTR [rcx]
   1400030e9:	jne    0x1400030fd
   1400030eb:	mov    QWORD PTR [r10],rdx
   1400030ee:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030f2:	mov    rax,QWORD PTR [rsp+0x10]
   1400030f7:	mov    QWORD PTR [r9+rcx*1+0x8],rax
   1400030fc:	ret    
   1400030fd:	cmp    rax,r8
   140003100:	jne    0x140003106
   140003102:	mov    QWORD PTR [r10],rdx
   140003105:	ret    
   140003106:	mov    rax,QWORD PTR [r10+0x8]
   14000310a:	mov    rcx,QWORD PTR [rax]
   14000310d:	mov    QWORD PTR [r10+0x8],rcx
   140003111:	cmp    rcx,QWORD PTR [rsp+0x10]
   140003116:	je     0x14000312a
   140003118:	mov    rdx,QWORD PTR [r11+0x10]
   14000311c:	mov    rax,QWORD PTR [rdx+r9*1+0x8]
   140003121:	mov    rcx,QWORD PTR [rax+0x8]
   140003125:	mov    QWORD PTR [rdx+r9*1+0x8],rcx
   14000312a:	ret    
   14000312b:	int3   
   14000312c:	int3   
   14000312d:	int3   
   14000312e:	int3   
   14000312f:	int3   
   140003130:	mov    QWORD PTR [rsp+0x18],r8
   140003135:	mov    QWORD PTR [rsp+0x10],rdx
   14000313a:	push   rbx
   14000313b:	push   rsi
   14000313c:	push   rdi
   14000313d:	push   r12
   14000313f:	push   r13
   140003141:	push   r14
   140003143:	push   r15
   140003145:	sub    rsp,0x40
   140003149:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140003152:	mov    rdi,r9
   140003155:	mov    r12,r8
   140003158:	mov    r15,rcx
   14000315b:	mov    rcx,QWORD PTR [rcx]
   14000315e:	mov    r13,r8
   140003161:	sub    r13,rcx
   140003164:	sar    r13,0x3
   140003168:	test   r9,r9
   14000316b:	je     0x140003458
   140003171:	mov    rbx,QWORD PTR [r15+0x10]
   140003175:	mov    r14,QWORD PTR [r15+0x8]
   140003179:	mov    rax,rbx
   14000317c:	sub    rax,r14
   14000317f:	sar    rax,0x3
   140003183:	cmp    rax,r9
   140003186:	jae    0x1400032eb
   14000318c:	sub    r14,rcx
   14000318f:	sar    r14,0x3
   140003193:	movabs r8,0x1fffffffffffffff
   14000319d:	mov    rax,r8
   1400031a0:	sub    rax,r14
   1400031a3:	cmp    rax,r9
   1400031a6:	jae    0x1400031b5
   1400031a8:	lea    rcx,[rip+0x297d9]        # 0x14002c988
   1400031af:	call   0x140005518
   1400031b4:	int3   
   1400031b5:	lea    rdx,[r14+r9*1]
   1400031b9:	sub    rbx,rcx
   1400031bc:	sar    rbx,0x3
   1400031c0:	mov    rcx,rbx
   1400031c3:	shr    rcx,1
   1400031c6:	mov    rax,r8
   1400031c9:	sub    rax,rcx
   1400031cc:	cmp    rax,rbx
   1400031cf:	jae    0x1400031d7
   1400031d1:	xor    esi,esi
   1400031d3:	mov    ebx,esi
   1400031d5:	jmp    0x1400031dc
   1400031d7:	add    rbx,rcx
   1400031da:	xor    esi,esi
   1400031dc:	cmp    rbx,rdx
   1400031df:	cmovb  rbx,rdx
   1400031e3:	mov    r14,rsi
   1400031e6:	mov    QWORD PTR [rsp+0x98],rsi
   1400031ee:	test   rbx,rbx
   1400031f1:	je     0x140003225
   1400031f3:	cmp    rbx,r8
   1400031f6:	ja     0x14000321f
   1400031f8:	lea    rcx,[rbx*8+0x0]
   140003200:	call   0x14000570c
   140003205:	mov    r14,rax
   140003208:	mov    QWORD PTR [rsp+0x98],rax
   140003210:	test   rax,rax
   140003213:	je     0x14000321f
   140003215:	mov    r12,QWORD PTR [rsp+0x90]
   14000321d:	jmp    0x140003225
   14000321f:	call   0x140005470
   140003224:	int3   
   140003225:	sub    r12,QWORD PTR [r15]
   140003228:	sar    r12,0x3
   14000322c:	lea    rcx,[r14+r12*8]
   140003230:	movzx  eax,BYTE PTR [rsp+0x90]
   140003238:	mov    BYTE PTR [rsp+0x28],al
   14000323c:	mov    QWORD PTR [rsp+0x20],rsi
   140003241:	lea    r9,[rsp+0x80]
   140003249:	mov    r8,QWORD PTR [rsp+0xa0]
   140003251:	mov    rdx,rdi
   140003254:	call   0x140001620
   140003259:	movzx  eax,BYTE PTR [rsp+0x90]
   140003261:	mov    BYTE PTR [rsp+0x28],al
   140003265:	mov    QWORD PTR [rsp+0x20],rsi
   14000326a:	lea    r9,[rsp+0x80]
   140003272:	mov    r8,r14
   140003275:	mov    rdx,QWORD PTR [rsp+0x90]
   14000327d:	mov    rcx,QWORD PTR [r15]
   140003280:	call   0x140001670
   140003285:	lea    rax,[r12+rdi*1]
   140003289:	lea    r8,[r14+rax*8]
   14000328d:	movzx  eax,BYTE PTR [rsp+0x90]
   140003295:	mov    BYTE PTR [rsp+0x28],al
   140003299:	mov    QWORD PTR [rsp+0x20],rsi
   14000329e:	lea    r9,[rsp+0x80]
   1400032a6:	mov    rdx,QWORD PTR [r15+0x8]
   1400032aa:	mov    rcx,QWORD PTR [rsp+0x90]
   1400032b2:	call   0x140001670
   1400032b7:	nop
   1400032b8:	mov    rcx,QWORD PTR [r15]
   1400032bb:	mov    rax,QWORD PTR [r15+0x8]
   1400032bf:	sub    rax,rcx
   1400032c2:	sar    rax,0x3
   1400032c6:	add    rdi,rax
   1400032c9:	test   rcx,rcx
   1400032cc:	je     0x1400032d3
   1400032ce:	call   0x140005778
   1400032d3:	lea    rax,[r14+rbx*8]
   1400032d7:	mov    QWORD PTR [r15+0x10],rax
   1400032db:	lea    rax,[r14+rdi*8]
   1400032df:	mov    QWORD PTR [r15+0x8],rax
   1400032e3:	mov    QWORD PTR [r15],r14
   1400032e6:	jmp    0x140003458
   1400032eb:	mov    rax,r14
   1400032ee:	sub    rax,r8
   1400032f1:	sar    rax,0x3
   1400032f5:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400032fd:	xor    esi,esi
   1400032ff:	mov    rdx,r14
   140003302:	mov    rbx,QWORD PTR [rbx]
   140003305:	cmp    rax,r9
   140003308:	jae    0x1400033d4
   14000330e:	mov    QWORD PTR [rsp+0x98],rbx
   140003316:	lea    rax,[r9*8+0x0]
   14000331e:	mov    QWORD PTR [rsp+0x30],rax
   140003323:	add    r8,rax
   140003326:	movzx  eax,BYTE PTR [rsp+0x90]
   14000332e:	mov    BYTE PTR [rsp+0x28],al
   140003332:	mov    QWORD PTR [rsp+0x20],rsi
   140003337:	lea    r9,[rsp+0x80]
   14000333f:	mov    rcx,r12
   140003342:	call   0x140001670
   140003347:	nop
   140003348:	mov    rcx,QWORD PTR [r15+0x8]
   14000334c:	mov    rax,rcx
   14000334f:	sub    rax,QWORD PTR [rsp+0x90]
   140003357:	sar    rax,0x3
   14000335b:	sub    rdi,rax
   14000335e:	movzx  eax,BYTE PTR [rsp+0x90]
   140003366:	mov    BYTE PTR [rsp+0x28],al
   14000336a:	mov    QWORD PTR [rsp+0x20],rsi
   14000336f:	lea    r9,[rsp+0x80]
   140003377:	lea    r8,[rsp+0x98]
   14000337f:	mov    rdx,rdi
   140003382:	call   0x140001620
   140003387:	nop
   140003388:	mov    rcx,QWORD PTR [rsp+0x30]
   14000338d:	add    QWORD PTR [r15+0x8],rcx
   140003391:	mov    rax,QWORD PTR [r15+0x8]
   140003395:	sub    rax,rcx
   140003398:	mov    rcx,QWORD PTR [rsp+0x90]
   1400033a0:	mov    rdx,rax
   1400033a3:	sub    rdx,rcx
   1400033a6:	add    rdx,0x7
   1400033aa:	shr    rdx,0x3
   1400033ae:	cmp    rcx,rax
   1400033b1:	cmova  rdx,rsi
   1400033b5:	test   rdx,rdx
   1400033b8:	je     0x140003458
   1400033be:	xchg   ax,ax
   1400033c0:	mov    QWORD PTR [rcx],rbx
   1400033c3:	lea    rcx,[rcx+0x8]
   1400033c7:	inc    rsi
   1400033ca:	cmp    rsi,rdx
   1400033cd:	jne    0x1400033c0
   1400033cf:	jmp    0x140003458
   1400033d4:	lea    r12,[r9*8+0x0]
   1400033dc:	mov    rdi,r14
   1400033df:	sub    rdi,r12
   1400033e2:	movzx  eax,BYTE PTR [rsp+0x90]
   1400033ea:	mov    BYTE PTR [rsp+0x28],al
   1400033ee:	mov    QWORD PTR [rsp+0x20],rsi
   1400033f3:	lea    r9,[rsp+0x80]
   1400033fb:	mov    r8,r14
   1400033fe:	mov    rcx,rdi
   140003401:	call   0x140001670
   140003406:	mov    QWORD PTR [r15+0x8],rax
   14000340a:	mov    rdx,QWORD PTR [rsp+0x90]
   140003412:	cmp    rdx,rdi
   140003415:	je     0x140003438
   140003417:	sub    r14,rdi
   14000341a:	nop    WORD PTR [rax+rax*1+0x0]
   140003420:	sub    rdi,0x8
   140003424:	mov    rax,QWORD PTR [rdi]
   140003427:	mov    QWORD PTR [rdi+r14*1],rax
   14000342b:	mov    rdx,QWORD PTR [rsp+0x90]
   140003433:	cmp    rdx,rdi
   140003436:	jne    0x140003420
   140003438:	lea    rax,[r12+rdx*1]
   14000343c:	cmp    rdx,rax
   14000343f:	je     0x140003458
   140003441:	mov    QWORD PTR [rdx],rbx
   140003444:	add    rdx,0x8
   140003448:	mov    rcx,QWORD PTR [rsp+0x90]
   140003450:	add    rcx,r12
   140003453:	cmp    rdx,rcx
   140003456:	jne    0x140003441
   140003458:	mov    rax,QWORD PTR [r15]
   14000345b:	lea    rcx,[rax+r13*8]
   14000345f:	mov    rax,QWORD PTR [rsp+0x88]
   140003467:	mov    QWORD PTR [rax],rcx
   14000346a:	add    rsp,0x40
   14000346e:	pop    r15
   140003470:	pop    r14
   140003472:	pop    r13
   140003474:	pop    r12
   140003476:	pop    rdi
   140003477:	pop    rsi
   140003478:	pop    rbx
   140003479:	ret    
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	int3   
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	test   rdx,rdx
   140003483:	je     0x1400034ba
   140003485:	mov    rax,QWORD PTR [rcx+0x18]
   140003489:	cmp    rax,0x10
   14000348d:	jb     0x140003494
   14000348f:	mov    r8,QWORD PTR [rcx]
   140003492:	jmp    0x140003497
   140003494:	mov    r8,rcx
   140003497:	cmp    rdx,r8
   14000349a:	jb     0x1400034ba
   14000349c:	cmp    rax,0x10
   1400034a0:	jb     0x1400034a7
   1400034a2:	mov    r8,QWORD PTR [rcx]
   1400034a5:	jmp    0x1400034aa
   1400034a7:	mov    r8,rcx
   1400034aa:	mov    rax,QWORD PTR [rcx+0x10]
   1400034ae:	lea    rcx,[r8+rax*1]
   1400034b2:	cmp    rcx,rdx
   1400034b5:	jbe    0x1400034ba
   1400034b7:	mov    al,0x1
   1400034b9:	ret    
   1400034ba:	xor    al,al
   1400034bc:	ret    
   1400034bd:	int3   
   1400034be:	int3   
   1400034bf:	int3   
   1400034c0:	mov    QWORD PTR [rdx],r8
   1400034c3:	mov    rax,rdx
   1400034c6:	ret    
   1400034c7:	int3   
   1400034c8:	int3   
   1400034c9:	int3   
   1400034ca:	int3   
   1400034cb:	int3   
   1400034cc:	int3   
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	mov    QWORD PTR [rdx],r8
   1400034d3:	mov    rax,rdx
   1400034d6:	ret    
   1400034d7:	int3   
   1400034d8:	int3   
   1400034d9:	int3   
   1400034da:	int3   
   1400034db:	int3   
   1400034dc:	int3   
   1400034dd:	int3   
   1400034de:	int3   
   1400034df:	int3   
   1400034e0:	mov    QWORD PTR [rdx],r8
   1400034e3:	mov    rax,rdx
   1400034e6:	ret    
   1400034e7:	int3   
   1400034e8:	int3   
   1400034e9:	int3   
   1400034ea:	int3   
   1400034eb:	int3   
   1400034ec:	int3   
   1400034ed:	int3   
   1400034ee:	int3   
   1400034ef:	int3   
   1400034f0:	mov    rax,QWORD PTR [rcx]
   1400034f3:	ret    
   1400034f4:	int3   
   1400034f5:	int3   
   1400034f6:	int3   
   1400034f7:	int3   
   1400034f8:	int3   
   1400034f9:	int3   
   1400034fa:	int3   
   1400034fb:	int3   
   1400034fc:	int3   
   1400034fd:	int3   
   1400034fe:	int3   
   1400034ff:	int3   
   140003500:	cmp    QWORD PTR [rcx+0x18],0x10
   140003505:	jb     0x14000350b
   140003507:	mov    rax,QWORD PTR [rcx]
   14000350a:	ret    
   14000350b:	mov    rax,rcx
   14000350e:	ret    
   14000350f:	int3   
   140003510:	cmp    QWORD PTR [rcx+0x18],0x10
   140003515:	jb     0x14000351b
   140003517:	mov    rax,QWORD PTR [rcx]
   14000351a:	ret    
   14000351b:	mov    rax,rcx
   14000351e:	ret    
   14000351f:	int3   
   140003520:	lea    rax,[rcx+0x10]
   140003524:	ret    
   140003525:	int3   
   140003526:	int3   
   140003527:	int3   
   140003528:	int3   
   140003529:	int3   
   14000352a:	int3   
   14000352b:	int3   
   14000352c:	int3   
   14000352d:	int3   
   14000352e:	int3   
   14000352f:	int3   
   140003530:	mov    rax,rcx
   140003533:	ret    
   140003534:	int3   
   140003535:	int3   
   140003536:	int3   
   140003537:	int3   
   140003538:	int3   
   140003539:	int3   
   14000353a:	int3   
   14000353b:	int3   
   14000353c:	int3   
   14000353d:	int3   
   14000353e:	int3   
   14000353f:	int3   
   140003540:	ret    0x0
   140003543:	int3   
   140003544:	int3   
   140003545:	int3   
   140003546:	int3   
   140003547:	int3   
   140003548:	int3   
   140003549:	int3   
   14000354a:	int3   
   14000354b:	int3   
   14000354c:	int3   
   14000354d:	int3   
   14000354e:	int3   
   14000354f:	int3   
   140003550:	ret    0x0
   140003553:	int3   
   140003554:	int3   
   140003555:	int3   
   140003556:	int3   
   140003557:	int3   
   140003558:	int3   
   140003559:	int3   
   14000355a:	int3   
   14000355b:	int3   
   14000355c:	int3   
   14000355d:	int3   
   14000355e:	int3   
   14000355f:	int3   
   140003560:	lea    rax,[rcx+0x8]
   140003564:	ret    
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	int3   
   140003569:	int3   
   14000356a:	int3   
   14000356b:	int3   
   14000356c:	int3   
   14000356d:	int3   
   14000356e:	int3   
   14000356f:	int3   
   140003570:	rex push rsi
   140003572:	sub    rsp,0x30
   140003576:	mov    rax,QWORD PTR [rcx]
   140003579:	mov    rsi,rcx
   14000357c:	cmp    QWORD PTR [rax],rax
   14000357f:	je     0x1400035b9
   140003581:	mov    QWORD PTR [rsp+0x40],rbx
   140003586:	mov    QWORD PTR [rsp+0x48],rdi
   14000358b:	mov    rdi,QWORD PTR [rax+0x8]
   14000358f:	nop
   140003590:	mov    rbx,QWORD PTR [rsi]
   140003593:	lea    rdx,[rsp+0x20]
   140003598:	mov    rcx,rsi
   14000359b:	mov    rbx,QWORD PTR [rbx]
   14000359e:	mov    r9,rbx
   1400035a1:	lea    r8,[rbx+0x10]
   1400035a5:	call   0x140001300
   1400035aa:	cmp    rbx,rdi
   1400035ad:	jne    0x140003590
   1400035af:	mov    rdi,QWORD PTR [rsp+0x48]
   1400035b4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400035b9:	add    rsp,0x30
   1400035bd:	pop    rsi
   1400035be:	ret    
   1400035bf:	int3   
   1400035c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400035c5:	push   rdi
   1400035c6:	sub    rsp,0x20
   1400035ca:	mov    rdi,r8
   1400035cd:	mov    rbx,rcx
   1400035d0:	test   dl,dl
   1400035d2:	je     0x1400035fd
   1400035d4:	cmp    QWORD PTR [rcx+0x18],0x10
   1400035d9:	jb     0x1400035fd
   1400035db:	mov    QWORD PTR [rsp+0x30],rsi
   1400035e0:	mov    rsi,QWORD PTR [rcx]
   1400035e3:	test   r8,r8
   1400035e6:	je     0x1400035f0
   1400035e8:	mov    rdx,rsi
   1400035eb:	call   0x1400059f0
   1400035f0:	mov    rcx,rsi
   1400035f3:	call   0x140005778
   1400035f8:	mov    rsi,QWORD PTR [rsp+0x30]
   1400035fd:	mov    QWORD PTR [rbx+0x18],0xf
   140003605:	mov    QWORD PTR [rbx+0x10],rdi
   140003609:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000360d:	mov    rbx,QWORD PTR [rsp+0x38]
   140003612:	add    rsp,0x20
   140003616:	pop    rdi
   140003617:	ret    
   140003618:	int3   
   140003619:	int3   
   14000361a:	int3   
   14000361b:	int3   
   14000361c:	int3   
   14000361d:	int3   
   14000361e:	int3   
   14000361f:	int3   
   140003620:	jmp    0x140003d70
   140003625:	int3   
   140003626:	int3   
   140003627:	int3   
   140003628:	int3   
   140003629:	int3   
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	rex push rbx
   140003632:	sub    rsp,0x20
   140003636:	mov    rbx,rcx
   140003639:	mov    rcx,QWORD PTR [rcx]
   14000363c:	test   rcx,rcx
   14000363f:	je     0x140003653
   140003641:	call   0x140005778
   140003646:	xor    eax,eax
   140003648:	mov    QWORD PTR [rbx],rax
   14000364b:	mov    QWORD PTR [rbx+0x8],rax
   14000364f:	mov    QWORD PTR [rbx+0x10],rax
   140003653:	add    rsp,0x20
   140003657:	pop    rbx
   140003658:	ret    
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	mov    QWORD PTR [rsp+0x8],rbx
   140003665:	push   rdi
   140003666:	sub    rsp,0x30
   14000366a:	movzx  eax,BYTE PTR [rsp+0x48]
   14000366f:	mov    r10,r9
   140003672:	mov    rdi,r8
   140003675:	mov    rbx,rdx
   140003678:	mov    BYTE PTR [rsp+0x28],al
   14000367c:	lea    r9,[rsp+0x48]
   140003681:	mov    r8,r10
   140003684:	mov    rdx,rdi
   140003687:	mov    rcx,rbx
   14000368a:	mov    QWORD PTR [rsp+0x20],0x0
   140003693:	call   0x140001620
   140003698:	lea    rax,[rbx+rdi*8]
   14000369c:	mov    rbx,QWORD PTR [rsp+0x40]
   1400036a1:	add    rsp,0x30
   1400036a5:	pop    rdi
   1400036a6:	ret    
   1400036a7:	int3   
   1400036a8:	int3   
   1400036a9:	int3   
   1400036aa:	int3   
   1400036ab:	int3   
   1400036ac:	int3   
   1400036ad:	int3   
   1400036ae:	int3   
   1400036af:	int3   
   1400036b0:	mov    rax,QWORD PTR [rcx]
   1400036b3:	mov    rcx,QWORD PTR [rax]
   1400036b6:	mov    rax,rdx
   1400036b9:	mov    QWORD PTR [rdx],rcx
   1400036bc:	ret    
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	mov    rax,QWORD PTR [rcx]
   1400036c3:	mov    rcx,QWORD PTR [rax]
   1400036c6:	mov    rax,rdx
   1400036c9:	mov    QWORD PTR [rdx],rcx
   1400036cc:	ret    
   1400036cd:	int3   
   1400036ce:	int3   
   1400036cf:	int3   
   1400036d0:	mov    rax,QWORD PTR [rcx]
   1400036d3:	mov    QWORD PTR [rdx],rax
   1400036d6:	mov    rax,rdx
   1400036d9:	ret    
   1400036da:	int3   
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	mov    rax,QWORD PTR [rcx]
   1400036e3:	mov    QWORD PTR [rdx],rax
   1400036e6:	mov    rax,rdx
   1400036e9:	ret    
   1400036ea:	int3   
   1400036eb:	int3   
   1400036ec:	int3   
   1400036ed:	int3   
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400036f5:	mov    r11,rsp
   1400036f8:	mov    QWORD PTR [r11+0x20],r9
   1400036fc:	mov    QWORD PTR [r11+0x18],r8
   140003700:	mov    rax,QWORD PTR [r8+0x8]
   140003704:	mov    QWORD PTR [rax],r9
   140003707:	mov    rax,QWORD PTR [r11+0x20]
   14000370b:	mov    rcx,QWORD PTR [rax+0x8]
   14000370f:	mov    rax,QWORD PTR [r11+0x10]
   140003713:	mov    QWORD PTR [rcx],rax
   140003716:	mov    rax,QWORD PTR [r11+0x10]
   14000371a:	mov    rcx,QWORD PTR [rax+0x8]
   14000371e:	mov    rax,QWORD PTR [r11+0x18]
   140003722:	mov    QWORD PTR [rcx],rax
   140003725:	mov    rax,QWORD PTR [r11+0x20]
   140003729:	mov    rdx,QWORD PTR [r11+0x10]
   14000372d:	mov    rcx,QWORD PTR [rax+0x8]
   140003731:	mov    r8,QWORD PTR [rdx+0x8]
   140003735:	mov    QWORD PTR [rdx+0x8],rcx
   140003739:	mov    rax,QWORD PTR [r11+0x18]
   14000373d:	mov    rcx,QWORD PTR [rax+0x8]
   140003741:	mov    rax,QWORD PTR [r11+0x20]
   140003745:	mov    QWORD PTR [rax+0x8],rcx
   140003749:	mov    rax,QWORD PTR [r11+0x18]
   14000374d:	mov    QWORD PTR [rax+0x8],r8
   140003751:	ret    
   140003752:	int3   
   140003753:	int3   
   140003754:	int3   
   140003755:	int3   
   140003756:	int3   
   140003757:	int3   
   140003758:	int3   
   140003759:	int3   
   14000375a:	int3   
   14000375b:	int3   
   14000375c:	int3   
   14000375d:	int3   
   14000375e:	int3   
   14000375f:	int3   
   140003760:	mov    r8,QWORD PTR [rdx+0x8]
   140003764:	mov    rax,rdx
   140003767:	mov    rdx,QWORD PTR [rdx]
   14000376a:	mov    QWORD PTR [r8],rdx
   14000376d:	mov    r8,QWORD PTR [rax]
   140003770:	mov    rdx,QWORD PTR [rax+0x8]
   140003774:	mov    QWORD PTR [r8+0x8],rdx
   140003778:	dec    QWORD PTR [rcx+0x8]
   14000377c:	ret    
   14000377d:	int3   
   14000377e:	int3   
   14000377f:	int3   
   140003780:	mov    rax,QWORD PTR [rcx+0x10]
   140003784:	sub    rax,QWORD PTR [rcx+0x8]
   140003788:	sar    rax,0x3
   14000378c:	ret    
   14000378d:	int3   
   14000378e:	int3   
   14000378f:	int3   
   140003790:	mov    rax,QWORD PTR [rcx+0x10]
   140003794:	shl    rdx,0x4
   140003798:	add    rax,0x8
   14000379c:	add    rax,rdx
   14000379f:	ret    
   1400037a0:	shl    rdx,0x4
   1400037a4:	add    rdx,QWORD PTR [rcx+0x10]
   1400037a8:	mov    rax,rdx
   1400037ab:	ret    
   1400037ac:	int3   
   1400037ad:	int3   
   1400037ae:	int3   
   1400037af:	int3   
   1400037b0:	sub    rsp,0x28
   1400037b4:	lea    rcx,[rip+0x291a5]        # 0x14002c960
   1400037bb:	call   0x140005518
   1400037c0:	int3   
   1400037c1:	int3   
   1400037c2:	int3   
   1400037c3:	int3   
   1400037c4:	int3   
   1400037c5:	int3   
   1400037c6:	int3   
   1400037c7:	int3   
   1400037c8:	int3   
   1400037c9:	int3   
   1400037ca:	int3   
   1400037cb:	int3   
   1400037cc:	int3   
   1400037cd:	int3   
   1400037ce:	int3   
   1400037cf:	int3   
   1400037d0:	sub    rsp,0x28
   1400037d4:	lea    rcx,[rip+0x291ad]        # 0x14002c988
   1400037db:	call   0x140005518
   1400037e0:	int3   
   1400037e1:	int3   
   1400037e2:	int3   
   1400037e3:	int3   
   1400037e4:	int3   
   1400037e5:	int3   
   1400037e6:	int3   
   1400037e7:	int3   
   1400037e8:	int3   
   1400037e9:	int3   
   1400037ea:	int3   
   1400037eb:	int3   
   1400037ec:	int3   
   1400037ed:	int3   
   1400037ee:	int3   
   1400037ef:	int3   
   1400037f0:	sub    rsp,0x28
   1400037f4:	lea    rcx,[rip+0x29175]        # 0x14002c970
   1400037fb:	call   0x140005550
   140003800:	int3   
   140003801:	int3   
   140003802:	int3   
   140003803:	int3   
   140003804:	int3   
   140003805:	int3   
   140003806:	int3   
   140003807:	int3   
   140003808:	int3   
   140003809:	int3   
   14000380a:	int3   
   14000380b:	int3   
   14000380c:	int3   
   14000380d:	int3   
   14000380e:	int3   
   14000380f:	int3   
   140003810:	sub    rsp,0x28
   140003814:	xor    eax,eax
   140003816:	test   rdx,rdx
   140003819:	je     0x14000383c
   14000381b:	movabs rax,0x1fffffffffffffff
   140003825:	cmp    rdx,rax
   140003828:	ja     0x140003841
   14000382a:	lea    rcx,[rdx*8+0x0]
   140003832:	call   0x14000570c
   140003837:	test   rax,rax
   14000383a:	je     0x140003841
   14000383c:	add    rsp,0x28
   140003840:	ret    
   140003841:	call   0x140005470
   140003846:	int3   
   140003847:	int3   
   140003848:	int3   
   140003849:	int3   
   14000384a:	int3   
   14000384b:	int3   
   14000384c:	int3   
   14000384d:	int3   
   14000384e:	int3   
   14000384f:	int3   
   140003850:	sub    rsp,0x28
   140003854:	xor    eax,eax
   140003856:	test   rdx,rdx
   140003859:	je     0x14000386e
   14000385b:	cmp    rdx,0xffffffffffffffff
   14000385f:	ja     0x140003873
   140003861:	mov    rcx,rdx
   140003864:	call   0x14000570c
   140003869:	test   rax,rax
   14000386c:	je     0x140003873
   14000386e:	add    rsp,0x28
   140003872:	ret    
   140003873:	call   0x140005470
   140003878:	int3   
   140003879:	int3   
   14000387a:	int3   
   14000387b:	int3   
   14000387c:	int3   
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	sub    rsp,0x28
   140003884:	xor    eax,eax
   140003886:	test   rdx,rdx
   140003889:	je     0x1400038ac
   14000388b:	movabs rax,0x333333333333333
   140003895:	cmp    rdx,rax
   140003898:	ja     0x1400038b1
   14000389a:	lea    rcx,[rdx+rdx*4]
   14000389e:	shl    rcx,0x4
   1400038a2:	call   0x14000570c
   1400038a7:	test   rax,rax
   1400038aa:	je     0x1400038b1
   1400038ac:	add    rsp,0x28
   1400038b0:	ret    
   1400038b1:	call   0x140005470
   1400038b6:	int3   
   1400038b7:	int3   
   1400038b8:	int3   
   1400038b9:	int3   
   1400038ba:	int3   
   1400038bb:	int3   
   1400038bc:	int3   
   1400038bd:	int3   
   1400038be:	int3   
   1400038bf:	int3   
   1400038c0:	sub    rsp,0x28
   1400038c4:	xor    eax,eax
   1400038c6:	test   rdx,rdx
   1400038c9:	je     0x1400038ec
   1400038cb:	movabs rax,0x1fffffffffffffff
   1400038d5:	cmp    rdx,rax
   1400038d8:	ja     0x1400038f1
   1400038da:	lea    rcx,[rdx*8+0x0]
   1400038e2:	call   0x14000570c
   1400038e7:	test   rax,rax
   1400038ea:	je     0x1400038f1
   1400038ec:	add    rsp,0x28
   1400038f0:	ret    
   1400038f1:	call   0x140005470
   1400038f6:	int3   
   1400038f7:	int3   
   1400038f8:	int3   
   1400038f9:	int3   
   1400038fa:	int3   
   1400038fb:	int3   
   1400038fc:	int3   
   1400038fd:	int3   
   1400038fe:	int3   
   1400038ff:	int3   
   140003900:	sub    rsp,0x28
   140003904:	xor    eax,eax
   140003906:	test   rdx,rdx
   140003909:	je     0x14000391e
   14000390b:	cmp    rdx,0xffffffffffffffff
   14000390f:	ja     0x140003923
   140003911:	mov    rcx,rdx
   140003914:	call   0x14000570c
   140003919:	test   rax,rax
   14000391c:	je     0x140003923
   14000391e:	add    rsp,0x28
   140003922:	ret    
   140003923:	call   0x140005470
   140003928:	int3   
   140003929:	int3   
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	int3   
   14000392d:	int3   
   14000392e:	int3   
   14000392f:	int3   
   140003930:	sub    rsp,0x28
   140003934:	xor    eax,eax
   140003936:	test   rdx,rdx
   140003939:	je     0x14000395c
   14000393b:	movabs rax,0x333333333333333
   140003945:	cmp    rdx,rax
   140003948:	ja     0x140003961
   14000394a:	lea    rcx,[rdx+rdx*4]
   14000394e:	shl    rcx,0x4
   140003952:	call   0x14000570c
   140003957:	test   rax,rax
   14000395a:	je     0x140003961
   14000395c:	add    rsp,0x28
   140003960:	ret    
   140003961:	call   0x140005470
   140003966:	int3   
   140003967:	int3   
   140003968:	int3   
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	sub    rsp,0x28
   140003974:	xor    eax,eax
   140003976:	test   rdx,rdx
   140003979:	je     0x14000399c
   14000397b:	movabs rax,0x1fffffffffffffff
   140003985:	cmp    rdx,rax
   140003988:	ja     0x1400039a1
   14000398a:	lea    rcx,[rdx*8+0x0]
   140003992:	call   0x14000570c
   140003997:	test   rax,rax
   14000399a:	je     0x1400039a1
   14000399c:	add    rsp,0x28
   1400039a0:	ret    
   1400039a1:	call   0x140005470
   1400039a6:	int3   
   1400039a7:	int3   
   1400039a8:	int3   
   1400039a9:	int3   
   1400039aa:	int3   
   1400039ab:	int3   
   1400039ac:	int3   
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400039b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400039ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400039bf:	push   rdi
   1400039c0:	sub    rsp,0x20
   1400039c4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400039c8:	mov    rbp,r8
   1400039cb:	mov    rsi,rdx
   1400039ce:	mov    rbx,rcx
   1400039d1:	cmp    rdi,r8
   1400039d4:	jb     0x140003ab4
   1400039da:	sub    rdi,r8
   1400039dd:	cmp    r9,rdi
   1400039e0:	cmovb  rdi,r9
   1400039e4:	cmp    rcx,rdx
   1400039e7:	jne    0x140003a18
   1400039e9:	lea    rax,[rdi+r8*1]
   1400039ed:	cmp    QWORD PTR [rcx+0x10],rax
   1400039f1:	jb     0x140003ac1
   1400039f7:	cmp    QWORD PTR [rcx+0x18],0x10
   1400039fc:	mov    QWORD PTR [rcx+0x10],rax
   140003a00:	jb     0x140003a05
   140003a02:	mov    rcx,QWORD PTR [rcx]
   140003a05:	mov    BYTE PTR [rcx+rax*1],0x0
   140003a09:	xor    edx,edx
   140003a0b:	mov    rcx,rbx
   140003a0e:	call   0x1400040c0
   140003a13:	jmp    0x140003a9c
   140003a18:	cmp    rdi,0xfffffffffffffffe
   140003a1c:	ja     0x140003ace
   140003a22:	mov    rax,QWORD PTR [rcx+0x18]
   140003a26:	cmp    rax,rdi
   140003a29:	jae    0x140003a52
   140003a2b:	mov    r8,QWORD PTR [rcx+0x10]
   140003a2f:	mov    rdx,rdi
   140003a32:	call   0x140002bc0
   140003a37:	test   rdi,rdi
   140003a3a:	je     0x140003a9c
   140003a3c:	cmp    QWORD PTR [rsi+0x18],0x10
   140003a41:	jb     0x140003a46
   140003a43:	mov    rsi,QWORD PTR [rsi]
   140003a46:	cmp    QWORD PTR [rbx+0x18],0x10
   140003a4b:	jb     0x140003a71
   140003a4d:	mov    rcx,QWORD PTR [rbx]
   140003a50:	jmp    0x140003a74
   140003a52:	test   rdi,rdi
   140003a55:	jne    0x140003a3c
   140003a57:	mov    QWORD PTR [rcx+0x10],rdi
   140003a5b:	cmp    rax,0x10
   140003a5f:	jb     0x140003a69
   140003a61:	mov    rax,QWORD PTR [rcx]
   140003a64:	mov    BYTE PTR [rax],dil
   140003a67:	jmp    0x140003a9c
   140003a69:	mov    rax,rcx
   140003a6c:	mov    BYTE PTR [rcx],0x0
   140003a6f:	jmp    0x140003a9c
   140003a71:	mov    rcx,rbx
   140003a74:	test   rdi,rdi
   140003a77:	je     0x140003a85
   140003a79:	lea    rdx,[rsi+rbp*1]
   140003a7d:	mov    r8,rdi
   140003a80:	call   0x1400059f0
   140003a85:	cmp    QWORD PTR [rbx+0x18],0x10
   140003a8a:	mov    QWORD PTR [rbx+0x10],rdi
   140003a8e:	jb     0x140003a95
   140003a90:	mov    rax,QWORD PTR [rbx]
   140003a93:	jmp    0x140003a98
   140003a95:	mov    rax,rbx
   140003a98:	mov    BYTE PTR [rax+rdi*1],0x0
   140003a9c:	mov    rbp,QWORD PTR [rsp+0x38]
   140003aa1:	mov    rsi,QWORD PTR [rsp+0x40]
   140003aa6:	mov    rax,rbx
   140003aa9:	mov    rbx,QWORD PTR [rsp+0x30]
   140003aae:	add    rsp,0x20
   140003ab2:	pop    rdi
   140003ab3:	ret    
   140003ab4:	lea    rcx,[rip+0x28eb5]        # 0x14002c970
   140003abb:	call   0x140005550
   140003ac0:	int3   
   140003ac1:	lea    rcx,[rip+0x28ea8]        # 0x14002c970
   140003ac8:	call   0x140005550
   140003acd:	int3   
   140003ace:	lea    rcx,[rip+0x28e8b]        # 0x14002c960
   140003ad5:	call   0x140005518
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	int3   
   140003add:	int3   
   140003ade:	int3   
   140003adf:	int3   
   140003ae0:	cmp    BYTE PTR [rdx],0x0
   140003ae3:	jne    0x140003aed
   140003ae5:	xor    r8d,r8d
   140003ae8:	jmp    0x140003b00
   140003aed:	or     r8,0xffffffffffffffff
   140003af1:	inc    r8
   140003af4:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003af9:	jne    0x140003af1
   140003afb:	jmp    0x140003b00
   140003b00:	mov    QWORD PTR [rsp+0x8],rbx
   140003b05:	mov    QWORD PTR [rsp+0x10],rsi
   140003b0a:	push   rdi
   140003b0b:	sub    rsp,0x20
   140003b0f:	mov    rdi,r8
   140003b12:	mov    rsi,rdx
   140003b15:	mov    rbx,rcx
   140003b18:	test   rdx,rdx
   140003b1b:	je     0x140003b77
   140003b1d:	mov    rdx,QWORD PTR [rcx+0x18]
   140003b21:	cmp    rdx,0x10
   140003b25:	jb     0x140003b2c
   140003b27:	mov    rax,QWORD PTR [rcx]
   140003b2a:	jmp    0x140003b2f
   140003b2c:	mov    rax,rcx
   140003b2f:	cmp    rsi,rax
   140003b32:	jb     0x140003b77
   140003b34:	cmp    rdx,0x10
   140003b38:	jb     0x140003b3d
   140003b3a:	mov    rcx,QWORD PTR [rcx]
   140003b3d:	add    rcx,QWORD PTR [rbx+0x10]
   140003b41:	cmp    rcx,rsi
   140003b44:	jbe    0x140003b77
   140003b46:	cmp    rdx,0x10
   140003b4a:	jb     0x140003b51
   140003b4c:	mov    rax,QWORD PTR [rbx]
   140003b4f:	jmp    0x140003b54
   140003b51:	mov    rax,rbx
   140003b54:	sub    rsi,rax
   140003b57:	mov    r9,r8
   140003b5a:	mov    rdx,rbx
   140003b5d:	mov    r8,rsi
   140003b60:	mov    rcx,rbx
   140003b63:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b68:	mov    rsi,QWORD PTR [rsp+0x38]
   140003b6d:	add    rsp,0x20
   140003b71:	pop    rdi
   140003b72:	jmp    0x1400039b0
   140003b77:	cmp    r8,0xfffffffffffffffe
   140003b7b:	ja     0x140003c25
   140003b81:	mov    rax,QWORD PTR [rbx+0x18]
   140003b85:	cmp    rax,r8
   140003b88:	jae    0x140003baa
   140003b8a:	mov    r8,QWORD PTR [rbx+0x10]
   140003b8e:	mov    rdx,rdi
   140003b91:	mov    rcx,rbx
   140003b94:	call   0x140002bc0
   140003b99:	test   rdi,rdi
   140003b9c:	je     0x140003c12
   140003b9e:	cmp    QWORD PTR [rbx+0x18],0x10
   140003ba3:	jb     0x140003be8
   140003ba5:	mov    rcx,QWORD PTR [rbx]
   140003ba8:	jmp    0x140003beb
   140003baa:	test   r8,r8
   140003bad:	jne    0x140003b99
   140003baf:	mov    QWORD PTR [rbx+0x10],r8
   140003bb3:	cmp    rax,0x10
   140003bb7:	jb     0x140003bd2
   140003bb9:	mov    rax,QWORD PTR [rbx]
   140003bbc:	mov    BYTE PTR [rax],r8b
   140003bbf:	mov    rax,rbx
   140003bc2:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bc7:	mov    rsi,QWORD PTR [rsp+0x38]
   140003bcc:	add    rsp,0x20
   140003bd0:	pop    rdi
   140003bd1:	ret    
   140003bd2:	mov    rax,rbx
   140003bd5:	mov    BYTE PTR [rbx],0x0
   140003bd8:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bdd:	mov    rsi,QWORD PTR [rsp+0x38]
   140003be2:	add    rsp,0x20
   140003be6:	pop    rdi
   140003be7:	ret    
   140003be8:	mov    rcx,rbx
   140003beb:	test   rdi,rdi
   140003bee:	je     0x140003bfb
   140003bf0:	mov    r8,rdi
   140003bf3:	mov    rdx,rsi
   140003bf6:	call   0x1400059f0
   140003bfb:	cmp    QWORD PTR [rbx+0x18],0x10
   140003c00:	mov    QWORD PTR [rbx+0x10],rdi
   140003c04:	jb     0x140003c0b
   140003c06:	mov    rax,QWORD PTR [rbx]
   140003c09:	jmp    0x140003c0e
   140003c0b:	mov    rax,rbx
   140003c0e:	mov    BYTE PTR [rax+rdi*1],0x0
   140003c12:	mov    rsi,QWORD PTR [rsp+0x38]
   140003c17:	mov    rax,rbx
   140003c1a:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c1f:	add    rsp,0x20
   140003c23:	pop    rdi
   140003c24:	ret    
   140003c25:	lea    rcx,[rip+0x28d34]        # 0x14002c960
   140003c2c:	call   0x140005518
   140003c31:	int3   
   140003c32:	int3   
   140003c33:	int3   
   140003c34:	int3   
   140003c35:	int3   
   140003c36:	int3   
   140003c37:	int3   
   140003c38:	int3   
   140003c39:	int3   
   140003c3a:	int3   
   140003c3b:	int3   
   140003c3c:	int3   
   140003c3d:	int3   
   140003c3e:	int3   
   140003c3f:	int3   
   140003c40:	movzx  eax,BYTE PTR [rdx]
   140003c43:	mov    BYTE PTR [rcx],al
   140003c45:	ret    
   140003c46:	int3   
   140003c47:	int3   
   140003c48:	int3   
   140003c49:	int3   
   140003c4a:	int3   
   140003c4b:	int3   
   140003c4c:	int3   
   140003c4d:	int3   
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	sub    rsp,0x38
   140003c54:	mov    rax,r8
   140003c57:	mov    r8,QWORD PTR [rcx]
   140003c5a:	mov    r9,rdx
   140003c5d:	lea    rdx,[rsp+0x40]
   140003c62:	mov    QWORD PTR [rcx+0x8],r8
   140003c66:	mov    QWORD PTR [rsp+0x20],rax
   140003c6b:	call   0x140003130
   140003c70:	add    rsp,0x38
   140003c74:	ret    
   140003c75:	int3   
   140003c76:	int3   
   140003c77:	int3   
   140003c78:	int3   
   140003c79:	int3   
   140003c7a:	int3   
   140003c7b:	int3   
   140003c7c:	int3   
   140003c7d:	int3   
   140003c7e:	int3   
   140003c7f:	int3   
   140003c80:	mov    rax,QWORD PTR [rcx]
   140003c83:	mov    rcx,QWORD PTR [rax]
   140003c86:	mov    rax,rdx
   140003c89:	mov    QWORD PTR [rdx],rcx
   140003c8c:	ret    
   140003c8d:	int3   
   140003c8e:	int3   
   140003c8f:	int3   
   140003c90:	mov    rax,QWORD PTR [rcx]
   140003c93:	mov    rcx,QWORD PTR [rax]
   140003c96:	mov    rax,rdx
   140003c99:	mov    QWORD PTR [rdx],rcx
   140003c9c:	ret    
   140003c9d:	int3   
   140003c9e:	int3   
   140003c9f:	int3   
   140003ca0:	mov    rax,QWORD PTR [rcx]
   140003ca3:	mov    rcx,QWORD PTR [rax]
   140003ca6:	mov    rax,rdx
   140003ca9:	mov    QWORD PTR [rdx],rcx
   140003cac:	ret    
   140003cad:	int3   
   140003cae:	int3   
   140003caf:	int3   
   140003cb0:	mov    rax,QWORD PTR [rcx]
   140003cb3:	mov    QWORD PTR [rdx],rax
   140003cb6:	mov    rax,rdx
   140003cb9:	ret    
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	int3   
   140003cbd:	int3   
   140003cbe:	int3   
   140003cbf:	int3   
   140003cc0:	mov    rax,QWORD PTR [rcx+0x30]
   140003cc4:	ret    
   140003cc5:	int3   
   140003cc6:	int3   
   140003cc7:	int3   
   140003cc8:	int3   
   140003cc9:	int3   
   140003cca:	int3   
   140003ccb:	int3   
   140003ccc:	int3   
   140003ccd:	int3   
   140003cce:	int3   
   140003ccf:	int3   
   140003cd0:	cmp    QWORD PTR [rcx+0x18],0x10
   140003cd5:	jb     0x140003cdb
   140003cd7:	mov    rax,QWORD PTR [rcx]
   140003cda:	ret    
   140003cdb:	mov    rax,rcx
   140003cde:	ret    
   140003cdf:	int3   
   140003ce0:	mov    rax,QWORD PTR [rcx+0x10]
   140003ce4:	sub    rax,QWORD PTR [rcx]
   140003ce7:	sar    rax,0x3
   140003ceb:	ret    
   140003cec:	int3   
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	mov    rax,QWORD PTR [rcx+0x8]
   140003cf4:	ret    
   140003cf5:	int3   
   140003cf6:	int3   
   140003cf7:	int3   
   140003cf8:	int3   
   140003cf9:	int3   
   140003cfa:	int3   
   140003cfb:	int3   
   140003cfc:	int3   
   140003cfd:	int3   
   140003cfe:	int3   
   140003cff:	int3   
   140003d00:	mov    rax,QWORD PTR [rcx+0x8]
   140003d04:	ret    
   140003d05:	int3   
   140003d06:	int3   
   140003d07:	int3   
   140003d08:	int3   
   140003d09:	int3   
   140003d0a:	int3   
   140003d0b:	int3   
   140003d0c:	int3   
   140003d0d:	int3   
   140003d0e:	int3   
   140003d0f:	int3   
   140003d10:	rex push rbx
   140003d12:	sub    rsp,0x30
   140003d16:	mov    rbx,rcx
   140003d19:	call   0x140003d70
   140003d1e:	mov    rax,QWORD PTR [rbx]
   140003d21:	mov    r8,QWORD PTR [rbx+0x10]
   140003d25:	lea    rcx,[rbx+0x10]
   140003d29:	mov    QWORD PTR [rsp+0x40],rax
   140003d2e:	lea    rax,[rsp+0x40]
   140003d33:	lea    rdx,[rsp+0x48]
   140003d38:	mov    r9d,0x10
   140003d3e:	mov    QWORD PTR [rcx+0x8],r8
   140003d42:	mov    QWORD PTR [rsp+0x20],rax
   140003d47:	call   0x140003130
   140003d4c:	mov    QWORD PTR [rbx+0x28],0x7
   140003d54:	mov    QWORD PTR [rbx+0x30],0x8
   140003d5c:	add    rsp,0x30
   140003d60:	pop    rbx
   140003d61:	ret    
   140003d62:	int3   
   140003d63:	int3   
   140003d64:	int3   
   140003d65:	int3   
   140003d66:	int3   
   140003d67:	int3   
   140003d68:	int3   
   140003d69:	int3   
   140003d6a:	int3   
   140003d6b:	int3   
   140003d6c:	int3   
   140003d6d:	int3   
   140003d6e:	int3   
   140003d6f:	int3   
   140003d70:	mov    QWORD PTR [rsp+0x10],rbx
   140003d75:	mov    QWORD PTR [rsp+0x18],rbp
   140003d7a:	push   rsi
   140003d7b:	sub    rsp,0x20
   140003d7f:	mov    rax,QWORD PTR [rcx]
   140003d82:	xor    ebp,ebp
   140003d84:	mov    rsi,rcx
   140003d87:	mov    rbx,QWORD PTR [rax]
   140003d8a:	mov    QWORD PTR [rax],rax
   140003d8d:	mov    rax,QWORD PTR [rcx]
   140003d90:	mov    QWORD PTR [rax+0x8],rax
   140003d94:	mov    QWORD PTR [rcx+0x8],rbp
   140003d98:	cmp    rbx,QWORD PTR [rcx]
   140003d9b:	je     0x140003dfa
   140003d9d:	mov    QWORD PTR [rsp+0x30],rdi
   140003da2:	cmp    QWORD PTR [rbx+0x48],0x10
   140003da7:	mov    rdi,QWORD PTR [rbx]
   140003daa:	jb     0x140003db5
   140003dac:	mov    rcx,QWORD PTR [rbx+0x30]
   140003db0:	call   0x140005778
   140003db5:	mov    QWORD PTR [rbx+0x48],0xf
   140003dbd:	mov    QWORD PTR [rbx+0x40],rbp
   140003dc1:	mov    BYTE PTR [rbx+0x30],bpl
   140003dc5:	cmp    QWORD PTR [rbx+0x28],0x10
   140003dca:	jb     0x140003dd5
   140003dcc:	mov    rcx,QWORD PTR [rbx+0x10]
   140003dd0:	call   0x140005778
   140003dd5:	mov    QWORD PTR [rbx+0x28],0xf
   140003ddd:	mov    QWORD PTR [rbx+0x20],rbp
   140003de1:	mov    rcx,rbx
   140003de4:	mov    BYTE PTR [rbx+0x10],bpl
   140003de8:	call   0x140005778
   140003ded:	mov    rbx,rdi
   140003df0:	cmp    rdi,QWORD PTR [rsi]
   140003df3:	jne    0x140003da2
   140003df5:	mov    rdi,QWORD PTR [rsp+0x30]
   140003dfa:	mov    rbx,QWORD PTR [rsp+0x38]
   140003dff:	mov    rbp,QWORD PTR [rsp+0x40]
   140003e04:	add    rsp,0x20
   140003e08:	pop    rsi
   140003e09:	ret    
   140003e0a:	int3   
   140003e0b:	int3   
   140003e0c:	int3   
   140003e0d:	int3   
   140003e0e:	int3   
   140003e0f:	int3   
   140003e10:	mov    rax,QWORD PTR [rcx]
   140003e13:	mov    QWORD PTR [rcx+0x8],rax
   140003e17:	ret    
   140003e18:	int3   
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	int3   
   140003e1d:	int3   
   140003e1e:	int3   
   140003e1f:	int3   
   140003e20:	mov    QWORD PTR [rsp+0x8],rbx
   140003e25:	mov    QWORD PTR [rsp+0x10],rsi
   140003e2a:	push   rdi
   140003e2b:	sub    rsp,0x20
   140003e2f:	cmp    QWORD PTR [rdx+0x18],0x10
   140003e34:	mov    rdi,QWORD PTR [rdx+0x10]
   140003e38:	jb     0x140003e3d
   140003e3a:	mov    rdx,QWORD PTR [rdx]
   140003e3d:	cmp    QWORD PTR [rcx+0x18],0x10
   140003e42:	mov    rbx,QWORD PTR [rcx+0x10]
   140003e46:	jb     0x140003e4b
   140003e48:	mov    rcx,QWORD PTR [rcx]
   140003e4b:	cmp    rbx,rdi
   140003e4e:	mov    r8,rdi
   140003e51:	cmovb  r8,rbx
   140003e55:	xor    esi,esi
   140003e57:	test   r8,r8
   140003e5a:	jne    0x140003e60
   140003e5c:	mov    eax,esi
   140003e5e:	jmp    0x140003e65
   140003e60:	call   0x140006e90
   140003e65:	cdqe   
   140003e67:	test   rax,rax
   140003e6a:	jne    0x140003e8a
   140003e6c:	cmp    rbx,rdi
   140003e6f:	jae    0x140003e84
   140003e71:	or     eax,0xffffffff
   140003e74:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e79:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e7e:	add    rsp,0x20
   140003e82:	pop    rdi
   140003e83:	ret    
   140003e84:	setne  sil
   140003e88:	mov    eax,esi
   140003e8a:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e8f:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e94:	add    rsp,0x20
   140003e98:	pop    rdi
   140003e99:	ret    
   140003e9a:	int3   
   140003e9b:	int3   
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	rex push rbx
   140003ea2:	sub    rsp,0x20
   140003ea6:	mov    rax,QWORD PTR [rcx+0x10]
   140003eaa:	mov    rbx,r8
   140003ead:	cmp    rax,rdx
   140003eb0:	jb     0x140003f2a
   140003eb2:	sub    rax,rdx
   140003eb5:	mov    QWORD PTR [rsp+0x30],rsi
   140003eba:	mov    QWORD PTR [rsp+0x38],rdi
   140003ebf:	cmp    rax,rbx
   140003ec2:	cmovb  rbx,rax
   140003ec6:	cmp    QWORD PTR [rcx+0x18],0x10
   140003ecb:	jb     0x140003ed0
   140003ecd:	mov    rcx,QWORD PTR [rcx]
   140003ed0:	mov    rdi,QWORD PTR [rsp+0x50]
   140003ed5:	cmp    rbx,rdi
   140003ed8:	mov    r8,rdi
   140003edb:	cmovb  r8,rbx
   140003edf:	xor    esi,esi
   140003ee1:	test   r8,r8
   140003ee4:	jne    0x140003eea
   140003ee6:	mov    eax,esi
   140003ee8:	jmp    0x140003ef5
   140003eea:	add    rcx,rdx
   140003eed:	mov    rdx,r9
   140003ef0:	call   0x140006e90
   140003ef5:	cdqe   
   140003ef7:	test   rax,rax
   140003efa:	jne    0x140003f1a
   140003efc:	cmp    rbx,rdi
   140003eff:	jae    0x140003f14
   140003f01:	mov    rdi,QWORD PTR [rsp+0x38]
   140003f06:	mov    rsi,QWORD PTR [rsp+0x30]
   140003f0b:	or     eax,0xffffffff
   140003f0e:	add    rsp,0x20
   140003f12:	pop    rbx
   140003f13:	ret    
   140003f14:	setne  sil
   140003f18:	mov    eax,esi
   140003f1a:	mov    rdi,QWORD PTR [rsp+0x38]
   140003f1f:	mov    rsi,QWORD PTR [rsp+0x30]
   140003f24:	add    rsp,0x20
   140003f28:	pop    rbx
   140003f29:	ret    
   140003f2a:	lea    rcx,[rip+0x28a3f]        # 0x14002c970
   140003f31:	call   0x140005550
   140003f36:	int3   
   140003f37:	int3   
   140003f38:	int3   
   140003f39:	int3   
   140003f3a:	int3   
   140003f3b:	int3   
   140003f3c:	int3   
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	test   r8,r8
   140003f43:	jne    0x140003f48
   140003f45:	xor    eax,eax
   140003f47:	ret    
   140003f48:	jmp    0x140006e90
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	test   rdx,rdx
   140003f53:	je     0x140003f5b
   140003f55:	mov    rax,QWORD PTR [r8]
   140003f58:	mov    QWORD PTR [rdx],rax
   140003f5b:	ret    
   140003f5c:	int3   
   140003f5d:	int3   
   140003f5e:	int3   
   140003f5f:	int3   
   140003f60:	rex push rbx
   140003f62:	sub    rsp,0x20
   140003f66:	mov    rbx,rcx
   140003f69:	test   r8,r8
   140003f6c:	je     0x140003f73
   140003f6e:	call   0x1400059f0
   140003f73:	mov    rax,rbx
   140003f76:	add    rsp,0x20
   140003f7a:	pop    rbx
   140003f7b:	ret    
   140003f7c:	int3   
   140003f7d:	int3   
   140003f7e:	int3   
   140003f7f:	int3   
   140003f80:	mov    rcx,rdx
   140003f83:	jmp    0x140005778
   140003f88:	int3   
   140003f89:	int3   
   140003f8a:	int3   
   140003f8b:	int3   
   140003f8c:	int3   
   140003f8d:	int3   
   140003f8e:	int3   
   140003f8f:	int3   
   140003f90:	mov    rcx,rdx
   140003f93:	jmp    0x140005778
   140003f98:	int3   
   140003f99:	int3   
   140003f9a:	int3   
   140003f9b:	int3   
   140003f9c:	int3   
   140003f9d:	int3   
   140003f9e:	int3   
   140003f9f:	int3   
   140003fa0:	mov    rcx,rdx
   140003fa3:	jmp    0x140005778
   140003fa8:	int3   
   140003fa9:	int3   
   140003faa:	int3   
   140003fab:	int3   
   140003fac:	int3   
   140003fad:	int3   
   140003fae:	int3   
   140003faf:	int3   
   140003fb0:	mov    rcx,rdx
   140003fb3:	jmp    0x140005778
   140003fb8:	int3   
   140003fb9:	int3   
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	mov    rcx,rdx
   140003fc3:	jmp    0x140005778
   140003fc8:	int3   
   140003fc9:	int3   
   140003fca:	int3   
   140003fcb:	int3   
   140003fcc:	int3   
   140003fcd:	int3   
   140003fce:	int3   
   140003fcf:	int3   
   140003fd0:	mov    rcx,rdx
   140003fd3:	jmp    0x140005778
   140003fd8:	int3   
   140003fd9:	int3   
   140003fda:	int3   
   140003fdb:	int3   
   140003fdc:	int3   
   140003fdd:	int3   
   140003fde:	int3   
   140003fdf:	int3   
   140003fe0:	mov    rcx,rdx
   140003fe3:	jmp    0x140005778
   140003fe8:	int3   
   140003fe9:	int3   
   140003fea:	int3   
   140003feb:	int3   
   140003fec:	int3   
   140003fed:	int3   
   140003fee:	int3   
   140003fef:	int3   
   140003ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ff5:	push   rdi
   140003ff6:	sub    rsp,0x20
   140003ffa:	mov    ecx,r8d
   140003ffd:	mov    edi,r8d
   140004000:	mov    rbx,rdx
   140004003:	call   0x140005644
   140004008:	mov    DWORD PTR [rbx],edi
   14000400a:	test   rax,rax
   14000400d:	lea    rax,[rip+0x37fec]        # 0x14003c000
   140004014:	jne    0x14000401d
   140004016:	lea    rax,[rip+0x37ff3]        # 0x14003c010
   14000401d:	mov    QWORD PTR [rbx+0x8],rax
   140004021:	mov    rax,rbx
   140004024:	mov    rbx,QWORD PTR [rsp+0x30]
   140004029:	add    rsp,0x20
   14000402d:	pop    rdi
   14000402e:	ret    
   14000402f:	int3   
   140004030:	mov    DWORD PTR [rdx],r8d
   140004033:	mov    QWORD PTR [rdx+0x8],rcx
   140004037:	mov    rax,rdx
   14000403a:	ret    
   14000403b:	int3   
   14000403c:	int3   
   14000403d:	int3   
   14000403e:	int3   
   14000403f:	int3   
   140004040:	mov    rax,QWORD PTR [rcx]
   140004043:	mov    QWORD PTR [rdx],rax
   140004046:	mov    rax,rdx
   140004049:	ret    
   14000404a:	int3   
   14000404b:	int3   
   14000404c:	int3   
   14000404d:	int3   
   14000404e:	int3   
   14000404f:	int3   
   140004050:	mov    rax,QWORD PTR [rcx]
   140004053:	mov    QWORD PTR [rdx],rax
   140004056:	mov    rax,rdx
   140004059:	ret    
   14000405a:	int3   
   14000405b:	int3   
   14000405c:	int3   
   14000405d:	int3   
   14000405e:	int3   
   14000405f:	int3   
   140004060:	cmp    rcx,QWORD PTR [rdx+0x8]
   140004064:	jne    0x14000406e
   140004066:	cmp    DWORD PTR [rdx],r8d
   140004069:	jne    0x14000406e
   14000406b:	mov    al,0x1
   14000406d:	ret    
   14000406e:	xor    al,al
   140004070:	ret    
   140004071:	int3   
   140004072:	int3   
   140004073:	int3   
   140004074:	int3   
   140004075:	int3   
   140004076:	int3   
   140004077:	int3   
   140004078:	int3   
   140004079:	int3   
   14000407a:	int3   
   14000407b:	int3   
   14000407c:	int3   
   14000407d:	int3   
   14000407e:	int3   
   14000407f:	int3   
   140004080:	rex push rbx
   140004082:	sub    rsp,0x30
   140004086:	mov    rax,QWORD PTR [rcx]
   140004089:	mov    rbx,r8
   14000408c:	mov    r8d,edx
   14000408f:	lea    rdx,[rsp+0x20]
   140004094:	call   QWORD PTR [rax+0x18]
   140004097:	mov    rcx,QWORD PTR [rbx+0x8]
   14000409b:	cmp    QWORD PTR [rax+0x8],rcx
   14000409f:	jne    0x1400040af
   1400040a1:	mov    ecx,DWORD PTR [rbx]
   1400040a3:	cmp    DWORD PTR [rax],ecx
   1400040a5:	jne    0x1400040af
   1400040a7:	mov    al,0x1
   1400040a9:	add    rsp,0x30
   1400040ad:	pop    rbx
   1400040ae:	ret    
   1400040af:	xor    al,al
   1400040b1:	add    rsp,0x30
   1400040b5:	pop    rbx
   1400040b6:	ret    
   1400040b7:	int3   
   1400040b8:	int3   
   1400040b9:	int3   
   1400040ba:	int3   
   1400040bb:	int3   
   1400040bc:	int3   
   1400040bd:	int3   
   1400040be:	int3   
   1400040bf:	int3   
   1400040c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400040c5:	push   rdi
   1400040c6:	sub    rsp,0x20
   1400040ca:	mov    rdi,QWORD PTR [rcx+0x10]
   1400040ce:	mov    rbx,rcx
   1400040d1:	cmp    rdi,rdx
   1400040d4:	jb     0x14000417e
   1400040da:	mov    rax,rdi
   1400040dd:	sub    rax,rdx
   1400040e0:	cmp    rax,r8
   1400040e3:	ja     0x14000411a
   1400040e5:	cmp    QWORD PTR [rcx+0x18],0x10
   1400040ea:	mov    QWORD PTR [rcx+0x10],rdx
   1400040ee:	jb     0x140004105
   1400040f0:	mov    rax,QWORD PTR [rcx]
   1400040f3:	mov    BYTE PTR [rax+rdx*1],0x0
   1400040f7:	mov    rax,rcx
   1400040fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040ff:	add    rsp,0x20
   140004103:	pop    rdi
   140004104:	ret    
   140004105:	mov    rax,rcx
   140004108:	mov    BYTE PTR [rcx+rdx*1],0x0
   14000410c:	mov    rax,rbx
   14000410f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004114:	add    rsp,0x20
   140004118:	pop    rdi
   140004119:	ret    
   14000411a:	test   r8,r8
   14000411d:	je     0x140004170
   14000411f:	cmp    QWORD PTR [rcx+0x18],0x10
   140004124:	jb     0x14000412b
   140004126:	mov    rax,QWORD PTR [rcx]
   140004129:	jmp    0x14000412e
   14000412b:	mov    rax,rcx
   14000412e:	sub    rdi,r8
   140004131:	lea    rcx,[rax+rdx*1]
   140004135:	mov    rax,rdi
   140004138:	sub    rax,rdx
   14000413b:	je     0x140004149
   14000413d:	lea    rdx,[rcx+r8*1]
   140004141:	mov    r8,rax
   140004144:	call   0x1400059f0
   140004149:	cmp    QWORD PTR [rbx+0x18],0x10
   14000414e:	mov    QWORD PTR [rbx+0x10],rdi
   140004152:	jb     0x140004169
   140004154:	mov    rax,QWORD PTR [rbx]
   140004157:	mov    BYTE PTR [rax+rdi*1],0x0
   14000415b:	mov    rax,rbx
   14000415e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004163:	add    rsp,0x20
   140004167:	pop    rdi
   140004168:	ret    
   140004169:	mov    rax,rbx
   14000416c:	mov    BYTE PTR [rbx+rdi*1],0x0
   140004170:	mov    rax,rbx
   140004173:	mov    rbx,QWORD PTR [rsp+0x30]
   140004178:	add    rsp,0x20
   14000417c:	pop    rdi
   14000417d:	ret    
   14000417e:	lea    rcx,[rip+0x287eb]        # 0x14002c970
   140004185:	call   0x140005550
   14000418a:	int3   
   14000418b:	int3   
   14000418c:	int3   
   14000418d:	int3   
   14000418e:	int3   
   14000418f:	int3   
   140004190:	sub    rsp,0x28
   140004194:	cmp    QWORD PTR [rcx+0x10],rdx
   140004198:	jb     0x1400041c0
   14000419a:	cmp    QWORD PTR [rcx+0x18],0x10
   14000419f:	mov    QWORD PTR [rcx+0x10],rdx
   1400041a3:	jb     0x1400041b4
   1400041a5:	mov    rax,QWORD PTR [rcx]
   1400041a8:	mov    BYTE PTR [rax+rdx*1],0x0
   1400041ac:	mov    rax,rcx
   1400041af:	add    rsp,0x28
   1400041b3:	ret    
   1400041b4:	mov    rax,rcx
   1400041b7:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400041bb:	add    rsp,0x28
   1400041bf:	ret    
   1400041c0:	lea    rcx,[rip+0x287a9]        # 0x14002c970
   1400041c7:	call   0x140005550
   1400041cc:	int3   
   1400041cd:	int3   
   1400041ce:	int3   
   1400041cf:	int3   
   1400041d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041d5:	mov    QWORD PTR [rsp+0x18],r8
   1400041da:	push   rdi
   1400041db:	sub    rsp,0x20
   1400041df:	mov    rax,QWORD PTR [r8]
   1400041e2:	mov    rbx,r8
   1400041e5:	mov    rdi,rdx
   1400041e8:	mov    QWORD PTR [rsp+0x40],rax
   1400041ed:	mov    r8,QWORD PTR [r8+0x8]
   1400041f1:	mov    rax,QWORD PTR [rbx]
   1400041f4:	mov    QWORD PTR [r8],rax
   1400041f7:	mov    r8,QWORD PTR [rbx]
   1400041fa:	mov    rax,QWORD PTR [rbx+0x8]
   1400041fe:	mov    QWORD PTR [r8+0x8],rax
   140004202:	dec    QWORD PTR [rcx+0x8]
   140004206:	cmp    QWORD PTR [rbx+0x48],0x10
   14000420b:	jb     0x140004216
   14000420d:	mov    rcx,QWORD PTR [rbx+0x30]
   140004211:	call   0x140005778
   140004216:	mov    QWORD PTR [rbx+0x48],0xf
   14000421e:	mov    QWORD PTR [rbx+0x40],0x0
   140004226:	mov    BYTE PTR [rbx+0x30],0x0
   14000422a:	cmp    QWORD PTR [rbx+0x28],0x10
   14000422f:	jb     0x14000423a
   140004231:	mov    rcx,QWORD PTR [rbx+0x10]
   140004235:	call   0x140005778
   14000423a:	mov    QWORD PTR [rbx+0x28],0xf
   140004242:	mov    QWORD PTR [rbx+0x20],0x0
   14000424a:	mov    rcx,rbx
   14000424d:	mov    BYTE PTR [rbx+0x10],0x0
   140004251:	call   0x140005778
   140004256:	mov    rax,QWORD PTR [rsp+0x40]
   14000425b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004260:	mov    QWORD PTR [rdi],rax
   140004263:	mov    rax,rdi
   140004266:	add    rsp,0x20
   14000426a:	pop    rdi
   14000426b:	ret    
   14000426c:	int3   
   14000426d:	int3   
   14000426e:	int3   
   14000426f:	int3   
   140004270:	rex push rbx
   140004272:	mov    eax,0x20030
   140004277:	call   0x140006e30
   14000427c:	sub    rsp,rax
   14000427f:	lea    rcx,[rsp+0x10032]
   140004287:	xor    ebx,ebx
   140004289:	xor    edx,edx
   14000428b:	mov    r8d,0xfffc
   140004291:	mov    WORD PTR [rsp+0x10030],bx
   140004299:	call   0x140006f70
   14000429e:	lea    rcx,[rsp+0x32]
   1400042a3:	xor    edx,edx
   1400042a5:	mov    r8d,0xfffc
   1400042ab:	mov    WORD PTR [rsp+0x30],bx
   1400042b0:	call   0x140006f70
   1400042b5:	lea    rdx,[rsp+0x10030]
   1400042bd:	lea    rcx,[rip+0x2860c]        # 0x14002c8d0
   1400042c4:	mov    r8d,0x7fff
   1400042ca:	call   QWORD PTR [rip+0x27de8]        # 0x14002c0b8
   1400042d0:	test   eax,eax
   1400042d2:	jle    0x14000430e
   1400042d4:	call   0x140004de6
   1400042d9:	mov    rbx,rax
   1400042dc:	call   0x140004e28
   1400042e1:	lea    r8,[rip+0x285f8]        # 0x14002c8e0
   1400042e8:	mov    r9,rax
   1400042eb:	lea    rax,[rsp+0x10030]
   1400042f3:	lea    rcx,[rsp+0x30]
   1400042f8:	mov    QWORD PTR [rsp+0x28],rax
   1400042fd:	mov    edx,0x7fff
   140004302:	mov    QWORD PTR [rsp+0x20],rbx
   140004307:	call   0x140002860
   14000430c:	jmp    0x140004339
   14000430e:	call   0x140004de6
   140004313:	mov    rbx,rax
   140004316:	call   0x140004e28
   14000431b:	lea    r8,[rip+0x285de]        # 0x14002c900
   140004322:	lea    rcx,[rsp+0x30]
   140004327:	mov    edx,0x7fff
   14000432c:	mov    r9,rax
   14000432f:	mov    QWORD PTR [rsp+0x20],rbx
   140004334:	call   0x140002860
   140004339:	lea    rdx,[rsp+0x30]
   14000433e:	lea    rcx,[rip+0x2858b]        # 0x14002c8d0
   140004345:	call   QWORD PTR [rip+0x27d75]        # 0x14002c0c0
   14000434b:	add    rsp,0x20030
   140004352:	pop    rbx
   140004353:	ret    
   140004354:	int3   
   140004355:	int3   
   140004356:	int3   
   140004357:	int3   
   140004358:	int3   
   140004359:	int3   
   14000435a:	int3   
   14000435b:	int3   
   14000435c:	int3   
   14000435d:	int3   
   14000435e:	int3   
   14000435f:	int3   
   140004360:	mov    rax,QWORD PTR [rcx]
   140004363:	mov    rax,QWORD PTR [rax]
   140004366:	add    rax,0x10
   14000436a:	ret    
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	lea    rax,[rip+0x37c89]        # 0x14003c000
   140004377:	ret    
   140004378:	int3   
   140004379:	int3   
   14000437a:	int3   
   14000437b:	int3   
   14000437c:	int3   
   14000437d:	int3   
   14000437e:	int3   
   14000437f:	int3   
   140004380:	mov    QWORD PTR [rsp+0x8],rbx
   140004385:	mov    QWORD PTR [rsp+0x10],rbp
   14000438a:	mov    QWORD PTR [rsp+0x18],rsi
   14000438f:	push   rdi
   140004390:	sub    rsp,0xb0
   140004397:	mov    rdi,rdx
   14000439a:	mov    rsi,rcx
   14000439d:	lea    rbp,[rip+0x285a4]        # 0x14002c948
   1400043a4:	xor    edx,edx
   1400043a6:	mov    rcx,rbp
   1400043a9:	xor    ebx,ebx
   1400043ab:	call   QWORD PTR [rip+0x27ef7]        # 0x14002c2a8
   1400043b1:	test   rax,rax
   1400043b4:	jne    0x140004483
   1400043ba:	mov    rax,QWORD PTR [rip+0x27f07]        # 0x14002c2c8
   1400043c1:	lea    rcx,[rsp+0x60]
   1400043c6:	mov    DWORD PTR [rsp+0x60],0x50
   1400043ce:	mov    QWORD PTR [rsp+0xa0],rbp
   1400043d6:	mov    QWORD PTR [rsp+0x78],rsi
   1400043db:	mov    DWORD PTR [rsp+0x64],0x2
   1400043e3:	mov    QWORD PTR [rsp+0x68],rax
   1400043e8:	mov    DWORD PTR [rsp+0x70],ebx
   1400043ec:	mov    DWORD PTR [rsp+0x74],0x8
   1400043f4:	mov    QWORD PTR [rsp+0x90],rbx
   1400043fc:	mov    QWORD PTR [rsp+0x88],rbx
   140004404:	mov    QWORD PTR [rsp+0x80],rbx
   14000440c:	mov    QWORD PTR [rsp+0xa8],rbx
   140004414:	mov    QWORD PTR [rsp+0x98],rbx
   14000441c:	call   QWORD PTR [rip+0x27e9e]        # 0x14002c2c0
   140004422:	test   ax,ax
   140004425:	jne    0x140004434
   140004427:	xor    edx,edx
   140004429:	mov    rcx,rbp
   14000442c:	call   QWORD PTR [rip+0x27e76]        # 0x14002c2a8
   140004432:	jmp    0x140004483
   140004434:	mov    QWORD PTR [rsp+0x58],rbx
   140004439:	mov    QWORD PTR [rsp+0x50],rsi
   14000443e:	mov    QWORD PTR [rsp+0x48],rbx
   140004443:	mov    QWORD PTR [rsp+0x40],rbx
   140004448:	mov    DWORD PTR [rsp+0x38],ebx
   14000444c:	mov    DWORD PTR [rsp+0x30],0x80000000
   140004454:	lea    r8,[rip+0x283dd]        # 0x14002c838
   14000445b:	mov    r9d,0xcf0000
   140004461:	mov    rdx,rbp
   140004464:	xor    ecx,ecx
   140004466:	mov    DWORD PTR [rsp+0x28],ebx
   14000446a:	mov    DWORD PTR [rsp+0x20],0x80000000
   140004472:	call   QWORD PTR [rip+0x27e40]        # 0x14002c2b8
   140004478:	mov    ecx,0x1
   14000447d:	test   rax,rax
   140004480:	cmovne ebx,ecx
   140004483:	lea    r11,[rsp+0xb0]
   14000448b:	mov    QWORD PTR [rdi],rax
   14000448e:	mov    eax,ebx
   140004490:	mov    rbx,QWORD PTR [r11+0x10]
   140004494:	mov    rbp,QWORD PTR [r11+0x18]
   140004498:	mov    rsi,QWORD PTR [r11+0x20]
   14000449c:	mov    rsp,r11
   14000449f:	pop    rdi
   1400044a0:	ret    
   1400044a1:	int3   
   1400044a2:	int3   
   1400044a3:	int3   
   1400044a4:	int3   
   1400044a5:	int3   
   1400044a6:	int3   
   1400044a7:	int3   
   1400044a8:	int3   
   1400044a9:	int3   
   1400044aa:	int3   
   1400044ab:	int3   
   1400044ac:	int3   
   1400044ad:	int3   
   1400044ae:	int3   
   1400044af:	int3   
   1400044b0:	rex push rbx
   1400044b2:	sub    rsp,0x30
   1400044b6:	mov    rax,QWORD PTR [rsp+0x60]
   1400044bb:	mov    rbx,rdx
   1400044be:	mov    QWORD PTR [rsp+0x20],rax
   1400044c3:	call   0x140003130
   1400044c8:	mov    rax,rbx
   1400044cb:	add    rsp,0x30
   1400044cf:	pop    rbx
   1400044d0:	ret    
   1400044d1:	int3   
   1400044d2:	int3   
   1400044d3:	int3   
   1400044d4:	int3   
   1400044d5:	int3   
   1400044d6:	int3   
   1400044d7:	int3   
   1400044d8:	int3   
   1400044d9:	int3   
   1400044da:	int3   
   1400044db:	int3   
   1400044dc:	int3   
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	cmp    BYTE PTR [rcx],0x0
   1400044e3:	jne    0x1400044e8
   1400044e5:	xor    eax,eax
   1400044e7:	ret    
   1400044e8:	or     rax,0xffffffffffffffff
   1400044ec:	nop    DWORD PTR [rax+0x0]
   1400044f0:	inc    rax
   1400044f3:	cmp    BYTE PTR [rcx+rax*1],0x0
   1400044f7:	jne    0x1400044f0
   1400044f9:	ret    
   1400044fa:	int3   
   1400044fb:	int3   
   1400044fc:	int3   
   1400044fd:	int3   
   1400044fe:	int3   
   1400044ff:	int3   
   140004500:	mov    rax,QWORD PTR [rcx+0x8]
   140004504:	movss  xmm2,DWORD PTR [rip+0x284a8]        # 0x14002c9b4
   14000450c:	xorps  xmm0,xmm0
   14000450f:	cvtsi2ss xmm0,rax
   140004514:	test   rax,rax
   140004517:	jns    0x14000451d
   140004519:	addss  xmm0,xmm2
   14000451d:	mov    rax,QWORD PTR [rcx+0x30]
   140004521:	xorps  xmm1,xmm1
   140004524:	cvtsi2ss xmm1,rax
   140004529:	test   rax,rax
   14000452c:	jns    0x140004532
   14000452e:	addss  xmm1,xmm2
   140004532:	divss  xmm0,xmm1
   140004536:	ret    
   140004537:	int3   
   140004538:	int3   
   140004539:	int3   
   14000453a:	int3   
   14000453b:	int3   
   14000453c:	int3   
   14000453d:	int3   
   14000453e:	int3   
   14000453f:	int3   
   140004540:	movss  xmm0,DWORD PTR [rcx+0x38]
   140004545:	ret    
   140004546:	int3   
   140004547:	int3   
   140004548:	int3   
   140004549:	int3   
   14000454a:	int3   
   14000454b:	int3   
   14000454c:	int3   
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	movabs rax,0x1fffffffffffffff
   14000455a:	ret    
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	or     rax,0xffffffffffffffff
   140004564:	ret    
   140004565:	int3   
   140004566:	int3   
   140004567:	int3   
   140004568:	int3   
   140004569:	int3   
   14000456a:	int3   
   14000456b:	int3   
   14000456c:	int3   
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	movabs rax,0x333333333333333
   14000457a:	ret    
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	movabs rax,0x1fffffffffffffff
   14000458a:	ret    
   14000458b:	int3   
   14000458c:	int3   
   14000458d:	int3   
   14000458e:	int3   
   14000458f:	int3   
   140004590:	or     rax,0xffffffffffffffff
   140004594:	ret    
   140004595:	int3   
   140004596:	int3   
   140004597:	int3   
   140004598:	int3   
   140004599:	int3   
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	int3   
   14000459d:	int3   
   14000459e:	int3   
   14000459f:	int3   
   1400045a0:	movabs rax,0x333333333333333
   1400045aa:	ret    
   1400045ab:	int3   
   1400045ac:	int3   
   1400045ad:	int3   
   1400045ae:	int3   
   1400045af:	int3   
   1400045b0:	movabs rax,0x1fffffffffffffff
   1400045ba:	ret    
   1400045bb:	int3   
   1400045bc:	int3   
   1400045bd:	int3   
   1400045be:	int3   
   1400045bf:	int3   
   1400045c0:	movabs rax,0x1fffffffffffffff
   1400045ca:	ret    
   1400045cb:	int3   
   1400045cc:	int3   
   1400045cd:	int3   
   1400045ce:	int3   
   1400045cf:	int3   
   1400045d0:	or     rax,0xffffffffffffffff
   1400045d4:	ret    
   1400045d5:	int3   
   1400045d6:	int3   
   1400045d7:	int3   
   1400045d8:	int3   
   1400045d9:	int3   
   1400045da:	int3   
   1400045db:	int3   
   1400045dc:	int3   
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	movabs rax,0x333333333333333
   1400045ea:	ret    
   1400045eb:	int3   
   1400045ec:	int3   
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	movabs rax,0x1fffffffffffffff
   1400045fa:	ret    
   1400045fb:	int3   
   1400045fc:	int3   
   1400045fd:	int3   
   1400045fe:	int3   
   1400045ff:	int3   
   140004600:	mov    rax,0xfffffffffffffffe
   140004607:	ret    
   140004608:	int3   
   140004609:	int3   
   14000460a:	int3   
   14000460b:	int3   
   14000460c:	int3   
   14000460d:	int3   
   14000460e:	int3   
   14000460f:	int3   
   140004610:	movabs rax,0x333333333333333
   14000461a:	ret    
   14000461b:	int3   
   14000461c:	int3   
   14000461d:	int3   
   14000461e:	int3   
   14000461f:	int3   
   140004620:	movabs rax,0x1fffffffffffffff
   14000462a:	ret    
   14000462b:	int3   
   14000462c:	int3   
   14000462d:	int3   
   14000462e:	int3   
   14000462f:	int3   
   140004630:	mov    QWORD PTR [rsp+0x8],rbx
   140004635:	push   rdi
   140004636:	sub    rsp,0x30
   14000463a:	xor    ebx,ebx
   14000463c:	mov    ecx,r8d
   14000463f:	mov    rdi,rdx
   140004642:	mov    DWORD PTR [rsp+0x20],ebx
   140004646:	call   0x140005644
   14000464b:	mov    QWORD PTR [rdi+0x18],0xf
   140004653:	test   rax,rax
   140004656:	mov    QWORD PTR [rdi+0x10],rbx
   14000465a:	lea    rdx,[rip+0x28127]        # 0x14002c788
   140004661:	cmovne rdx,rax
   140004665:	mov    BYTE PTR [rdi],bl
   140004667:	cmp    BYTE PTR [rdx],bl
   140004669:	je     0x140004679
   14000466b:	or     rbx,0xffffffffffffffff
   14000466f:	nop
   140004670:	inc    rbx
   140004673:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004677:	jne    0x140004670
   140004679:	mov    r8,rbx
   14000467c:	mov    rcx,rdi
   14000467f:	call   0x140003b00
   140004684:	mov    rbx,QWORD PTR [rsp+0x40]
   140004689:	mov    rax,rdi
   14000468c:	add    rsp,0x30
   140004690:	pop    rdi
   140004691:	ret    
   140004692:	int3   
   140004693:	int3   
   140004694:	int3   
   140004695:	int3   
   140004696:	int3   
   140004697:	int3   
   140004698:	int3   
   140004699:	int3   
   14000469a:	int3   
   14000469b:	int3   
   14000469c:	int3   
   14000469d:	int3   
   14000469e:	int3   
   14000469f:	int3   
   1400046a0:	rex push rbx
   1400046a2:	sub    rsp,0x30
   1400046a6:	xor    eax,eax
   1400046a8:	mov    rbx,rdx
   1400046ab:	mov    DWORD PTR [rsp+0x20],eax
   1400046af:	cmp    r8d,0x1
   1400046b3:	jne    0x1400046df
   1400046b5:	mov    QWORD PTR [rdx+0x18],0xf
   1400046bd:	mov    QWORD PTR [rdx+0x10],rax
   1400046c1:	mov    BYTE PTR [rdx],al
   1400046c3:	lea    rdx,[rip+0x28116]        # 0x14002c7e0
   1400046ca:	lea    r8d,[rax+0x15]
   1400046ce:	mov    rcx,rbx
   1400046d1:	call   0x140003b00
   1400046d6:	mov    rax,rbx
   1400046d9:	add    rsp,0x30
   1400046dd:	pop    rbx
   1400046de:	ret    
   1400046df:	call   0x140004630
   1400046e4:	mov    rax,rbx
   1400046e7:	add    rsp,0x30
   1400046eb:	pop    rbx
   1400046ec:	ret    
   1400046ed:	int3   
   1400046ee:	int3   
   1400046ef:	int3   
   1400046f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400046f5:	push   rdi
   1400046f6:	sub    rsp,0x30
   1400046fa:	xor    ebx,ebx
   1400046fc:	mov    ecx,r8d
   1400046ff:	mov    rdi,rdx
   140004702:	mov    DWORD PTR [rsp+0x20],ebx
   140004706:	call   0x14000566c
   14000470b:	mov    QWORD PTR [rdi+0x18],0xf
   140004713:	test   rax,rax
   140004716:	mov    QWORD PTR [rdi+0x10],rbx
   14000471a:	lea    rdx,[rip+0x28067]        # 0x14002c788
   140004721:	cmovne rdx,rax
   140004725:	mov    BYTE PTR [rdi],bl
   140004727:	cmp    BYTE PTR [rdx],bl
   140004729:	je     0x140004739
   14000472b:	or     rbx,0xffffffffffffffff
   14000472f:	nop
   140004730:	inc    rbx
   140004733:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004737:	jne    0x140004730
   140004739:	mov    r8,rbx
   14000473c:	mov    rcx,rdi
   14000473f:	call   0x140003b00
   140004744:	mov    rbx,QWORD PTR [rsp+0x40]
   140004749:	mov    rax,rdi
   14000474c:	add    rsp,0x30
   140004750:	pop    rdi
   140004751:	ret    
   140004752:	int3   
   140004753:	int3   
   140004754:	int3   
   140004755:	int3   
   140004756:	int3   
   140004757:	int3   
   140004758:	int3   
   140004759:	int3   
   14000475a:	int3   
   14000475b:	int3   
   14000475c:	int3   
   14000475d:	int3   
   14000475e:	int3   
   14000475f:	int3   
   140004760:	test   r8,r8
   140004763:	jne    0x140004769
   140004765:	mov    rax,rcx
   140004768:	ret    
   140004769:	jmp    0x1400059f0
   14000476e:	int3   
   14000476f:	int3   
   140004770:	lea    rax,[rip+0x28009]        # 0x14002c780
   140004777:	ret    
   140004778:	int3   
   140004779:	int3   
   14000477a:	int3   
   14000477b:	int3   
   14000477c:	int3   
   14000477d:	int3   
   14000477e:	int3   
   14000477f:	int3   
   140004780:	lea    rax,[rip+0x28049]        # 0x14002c7d0
   140004787:	ret    
   140004788:	int3   
   140004789:	int3   
   14000478a:	int3   
   14000478b:	int3   
   14000478c:	int3   
   14000478d:	int3   
   14000478e:	int3   
   14000478f:	int3   
   140004790:	lea    rax,[rip+0x28099]        # 0x14002c830
   140004797:	ret    
   140004798:	int3   
   140004799:	int3   
   14000479a:	int3   
   14000479b:	int3   
   14000479c:	int3   
   14000479d:	int3   
   14000479e:	int3   
   14000479f:	int3   
   1400047a0:	mov    rax,rdx
   1400047a3:	ret    
   1400047a4:	int3   
   1400047a5:	int3   
   1400047a6:	int3   
   1400047a7:	int3   
   1400047a8:	int3   
   1400047a9:	int3   
   1400047aa:	int3   
   1400047ab:	int3   
   1400047ac:	int3   
   1400047ad:	int3   
   1400047ae:	int3   
   1400047af:	int3   
   1400047b0:	mov    rax,rdx
   1400047b3:	ret    
   1400047b4:	int3   
   1400047b5:	int3   
   1400047b6:	int3   
   1400047b7:	int3   
   1400047b8:	int3   
   1400047b9:	int3   
   1400047ba:	int3   
   1400047bb:	int3   
   1400047bc:	int3   
   1400047bd:	int3   
   1400047be:	int3   
   1400047bf:	int3   
   1400047c0:	mov    rax,rdx
   1400047c3:	ret    
   1400047c4:	int3   
   1400047c5:	int3   
   1400047c6:	int3   
   1400047c7:	int3   
   1400047c8:	int3   
   1400047c9:	int3   
   1400047ca:	int3   
   1400047cb:	int3   
   1400047cc:	int3   
   1400047cd:	int3   
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	mov    rax,rdx
   1400047d3:	ret    
   1400047d4:	int3   
   1400047d5:	int3   
   1400047d6:	int3   
   1400047d7:	int3   
   1400047d8:	int3   
   1400047d9:	int3   
   1400047da:	int3   
   1400047db:	int3   
   1400047dc:	int3   
   1400047dd:	int3   
   1400047de:	int3   
   1400047df:	int3   
   1400047e0:	mov    rax,rcx
   1400047e3:	ret    
   1400047e4:	int3   
   1400047e5:	int3   
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	int3   
   1400047e9:	int3   
   1400047ea:	int3   
   1400047eb:	int3   
   1400047ec:	int3   
   1400047ed:	int3   
   1400047ee:	int3   
   1400047ef:	int3   
   1400047f0:	mov    rax,rcx
   1400047f3:	ret    
   1400047f4:	int3   
   1400047f5:	int3   
   1400047f6:	int3   
   1400047f7:	int3   
   1400047f8:	int3   
   1400047f9:	int3   
   1400047fa:	int3   
   1400047fb:	int3   
   1400047fc:	int3   
   1400047fd:	int3   
   1400047fe:	int3   
   1400047ff:	int3   
   140004800:	mov    rax,QWORD PTR [rcx+0x8]
   140004804:	ret    
   140004805:	int3   
   140004806:	int3   
   140004807:	int3   
   140004808:	int3   
   140004809:	int3   
   14000480a:	int3   
   14000480b:	int3   
   14000480c:	int3   
   14000480d:	int3   
   14000480e:	int3   
   14000480f:	int3   
   140004810:	mov    rax,QWORD PTR [rcx+0x10]
   140004814:	ret    
   140004815:	int3   
   140004816:	int3   
   140004817:	int3   
   140004818:	int3   
   140004819:	int3   
   14000481a:	int3   
   14000481b:	int3   
   14000481c:	int3   
   14000481d:	int3   
   14000481e:	int3   
   14000481f:	int3   
   140004820:	mov    rax,QWORD PTR [rcx+0x8]
   140004824:	ret    
   140004825:	int3   
   140004826:	int3   
   140004827:	int3   
   140004828:	int3   
   140004829:	int3   
   14000482a:	int3   
   14000482b:	int3   
   14000482c:	int3   
   14000482d:	int3   
   14000482e:	int3   
   14000482f:	int3   
   140004830:	mov    rax,QWORD PTR [rcx+0x8]
   140004834:	sub    rax,QWORD PTR [rcx]
   140004837:	sar    rax,0x3
   14000483b:	ret    
   14000483c:	int3   
   14000483d:	int3   
   14000483e:	int3   
   14000483f:	int3   
   140004840:	mov    QWORD PTR [rsp+0x8],rbx
   140004845:	push   rdi
   140004846:	mov    eax,0x102f0
   14000484b:	call   0x140006e30
   140004850:	sub    rsp,rax
   140004853:	lea    rcx,[rsp+0xe2]
   14000485b:	xor    edi,edi
   14000485d:	xor    edx,edx
   14000485f:	mov    r8d,0x206
   140004865:	mov    WORD PTR [rsp+0xe0],di
   14000486d:	call   0x140006f70
   140004872:	call   0x140004de6
   140004877:	mov    rbx,rax
   14000487a:	call   0x140004e2e
   14000487f:	lea    r8,[rip+0x27fba]        # 0x14002c840
   140004886:	lea    rcx,[rsp+0xe0]
   14000488e:	mov    edx,0x104
   140004893:	mov    r9,rax
   140004896:	mov    QWORD PTR [rsp+0x20],rbx
   14000489b:	call   0x140002860
   1400048a0:	lea    r8d,[rdi+0x68]
   1400048a4:	lea    rcx,[rsp+0x70]
   1400048a9:	xor    edx,edx
   1400048ab:	call   0x140006f70
   1400048b0:	xor    eax,eax
   1400048b2:	mov    DWORD PTR [rsp+0x70],0x68
   1400048ba:	mov    QWORD PTR [rsp+0x50],rax
   1400048bf:	mov    QWORD PTR [rsp+0x58],rax
   1400048c4:	mov    QWORD PTR [rsp+0x60],rax
   1400048c9:	call   QWORD PTR [rip+0x277e1]        # 0x14002c0b0
   1400048cf:	mov    ecx,0x22
   1400048d4:	mov    rbx,rax
   1400048d7:	movzx  eax,WORD PTR [rax]
   1400048da:	cmp    cx,ax
   1400048dd:	jne    0x1400048f8
   1400048df:	nop
   1400048e0:	movzx  eax,WORD PTR [rbx+0x2]
   1400048e4:	add    rbx,0x2
   1400048e8:	test   ax,ax
   1400048eb:	je     0x140004914
   1400048ed:	cmp    cx,ax
   1400048f0:	jne    0x1400048e0
   1400048f2:	add    rbx,0x2
   1400048f6:	jmp    0x140004942
   1400048f8:	mov    ecx,0x27
   1400048fd:	cmp    cx,ax
   140004900:	jne    0x14000491a
   140004902:	movzx  eax,WORD PTR [rbx+0x2]
   140004906:	add    rbx,0x2
   14000490a:	test   ax,ax
   14000490d:	je     0x140004914
   14000490f:	cmp    cx,ax
   140004912:	jne    0x140004902
   140004914:	add    rbx,0x2
   140004918:	jmp    0x140004942
   14000491a:	mov    edx,0xffdf
   14000491f:	mov    ecx,0x9
   140004924:	nop    DWORD PTR [rax+0x0]
   140004928:	nop    DWORD PTR [rax+rax*1+0x0]
   140004930:	movzx  eax,WORD PTR [rbx+0x2]
   140004934:	add    rbx,0x2
   140004938:	test   dx,ax
   14000493b:	je     0x140004942
   14000493d:	cmp    cx,ax
   140004940:	jne    0x140004930
   140004942:	lea    rcx,[rsp+0x2f2]
   14000494a:	xor    edx,edx
   14000494c:	mov    r8d,0xfffe
   140004952:	mov    WORD PTR [rsp+0x2f0],di
   14000495a:	call   0x140006f70
   14000495f:	cmp    WORD PTR [rbx],di
   140004962:	je     0x140004980
   140004964:	lea    r8,[rip+0x27f39]        # 0x14002c8a4
   14000496b:	lea    rcx,[rsp+0x2f0]
   140004973:	mov    r9,rbx
   140004976:	mov    edx,0x8000
   14000497b:	call   0x140002860
   140004980:	call   0x140004e28
   140004985:	lea    r9,[rsp+0x2f0]
   14000498d:	lea    r8,[rip+0x27f1c]        # 0x14002c8b0
   140004994:	lea    rcx,[rsp+0x2f0]
   14000499c:	mov    edx,0x8000
   1400049a1:	mov    QWORD PTR [rsp+0x20],rax
   1400049a6:	call   0x140002860
   1400049ab:	call   0x140004e2e
   1400049b0:	lea    rcx,[rsp+0x50]
   1400049b5:	mov    QWORD PTR [rsp+0x48],rcx
   1400049ba:	lea    rcx,[rsp+0x70]
   1400049bf:	lea    rdx,[rsp+0x2f0]
   1400049c7:	mov    QWORD PTR [rsp+0x40],rcx
   1400049cc:	mov    QWORD PTR [rsp+0x38],rax
   1400049d1:	mov    QWORD PTR [rsp+0x30],rdi
   1400049d6:	lea    rcx,[rsp+0xe0]
   1400049de:	xor    r9d,r9d
   1400049e1:	xor    r8d,r8d
   1400049e4:	mov    DWORD PTR [rsp+0x28],edi
   1400049e8:	mov    DWORD PTR [rsp+0x20],edi
   1400049ec:	call   QWORD PTR [rip+0x276d6]        # 0x14002c0c8
   1400049f2:	mov    rbx,QWORD PTR [rsp+0x10300]
   1400049fa:	add    rsp,0x102f0
   140004a01:	pop    rdi
   140004a02:	ret    
   140004a03:	int3   
   140004a04:	int3   
   140004a05:	int3   
   140004a06:	int3   
   140004a07:	int3   
   140004a08:	int3   
   140004a09:	int3   
   140004a0a:	int3   
   140004a0b:	int3   
   140004a0c:	int3   
   140004a0d:	int3   
   140004a0e:	int3   
   140004a0f:	int3   
   140004a10:	mov    QWORD PTR [rsp+0x8],rbx
   140004a15:	push   rdi
   140004a16:	mov    eax,0x102f0
   140004a1b:	call   0x140006e30
   140004a20:	sub    rsp,rax
   140004a23:	lea    rcx,[rsp+0xe2]
   140004a2b:	xor    edi,edi
   140004a2d:	xor    edx,edx
   140004a2f:	mov    r8d,0x206
   140004a35:	mov    WORD PTR [rsp+0xe0],di
   140004a3d:	call   0x140006f70
   140004a42:	call   0x140004de6
   140004a47:	mov    rbx,rax
   140004a4a:	call   0x140004e28
   140004a4f:	lea    r8,[rip+0x27dea]        # 0x14002c840
   140004a56:	lea    rcx,[rsp+0xe0]
   140004a5e:	mov    edx,0x104
   140004a63:	mov    r9,rax
   140004a66:	mov    QWORD PTR [rsp+0x20],rbx
   140004a6b:	call   0x140002860
   140004a70:	lea    r8d,[rdi+0x68]
   140004a74:	lea    rcx,[rsp+0x70]
   140004a79:	xor    edx,edx
   140004a7b:	call   0x140006f70
   140004a80:	xor    eax,eax
   140004a82:	mov    DWORD PTR [rsp+0x70],0x68
   140004a8a:	mov    QWORD PTR [rsp+0x50],rax
   140004a8f:	mov    QWORD PTR [rsp+0x58],rax
   140004a94:	mov    QWORD PTR [rsp+0x60],rax
   140004a99:	call   0x140004e2e
   140004a9e:	lea    r9,[rsp+0xe0]
   140004aa6:	lea    r8,[rip+0x27dbb]        # 0x14002c868
   140004aad:	lea    rcx,[rsp+0x2f0]
   140004ab5:	mov    edx,0x8000
   140004aba:	mov    QWORD PTR [rsp+0x20],rax
   140004abf:	call   0x140002860
   140004ac4:	call   0x140004e2e
   140004ac9:	lea    rcx,[rsp+0x50]
   140004ace:	mov    QWORD PTR [rsp+0x48],rcx
   140004ad3:	lea    rcx,[rsp+0x70]
   140004ad8:	lea    rdx,[rsp+0x2f0]
   140004ae0:	mov    QWORD PTR [rsp+0x40],rcx
   140004ae5:	mov    QWORD PTR [rsp+0x38],rax
   140004aea:	mov    QWORD PTR [rsp+0x30],rdi
   140004aef:	lea    rcx,[rsp+0xe0]
   140004af7:	xor    r9d,r9d
   140004afa:	xor    r8d,r8d
   140004afd:	mov    DWORD PTR [rsp+0x28],edi
   140004b01:	mov    DWORD PTR [rsp+0x20],edi
   140004b05:	call   QWORD PTR [rip+0x275bd]        # 0x14002c0c8
   140004b0b:	mov    rbx,QWORD PTR [rsp+0x10300]
   140004b13:	add    rsp,0x102f0
   140004b1a:	pop    rdi
   140004b1b:	ret    
   140004b1c:	int3   
   140004b1d:	int3   
   140004b1e:	int3   
   140004b1f:	int3   
   140004b20:	rex push rbx
   140004b22:	sub    rsp,0x90
   140004b29:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004b32:	mov    rbx,rdx
   140004b35:	xor    edx,edx
   140004b37:	call   0x140004e58
   140004b3c:	call   0x140004270
   140004b41:	call   QWORD PTR [rip+0x27569]        # 0x14002c0b0
   140004b47:	lea    rdx,[rip+0x27dca]        # 0x14002c918
   140004b4e:	mov    rcx,rax
   140004b51:	call   0x140005f58
   140004b56:	test   rax,rax
   140004b59:	jne    0x140004b74
   140004b5b:	lea    rcx,[rip+0x27dc6]        # 0x14002c928
   140004b62:	call   0x140004e04
   140004b67:	call   0x140004e28
   140004b6c:	mov    rcx,rax
   140004b6f:	call   0x140004e04
   140004b74:	lea    rcx,[rip+0x27dbd]        # 0x14002c938
   140004b7b:	call   0x140004e04
   140004b80:	call   0x140004e2e
   140004b85:	mov    rcx,rax
   140004b88:	call   0x140004e04
   140004b8d:	lea    rdx,[rsp+0x48]
   140004b92:	mov    rcx,rbx
   140004b95:	call   0x140004e46
   140004b9a:	nop
   140004b9b:	call   0x140004e2e
   140004ba0:	mov    r8,rax
   140004ba3:	lea    rdx,[rsp+0x28]
   140004ba8:	mov    rcx,rbx
   140004bab:	call   0x140004e4c
   140004bb0:	nop
   140004bb1:	mov    QWORD PTR [rsp+0x80],0xf
   140004bbd:	xor    ebx,ebx
   140004bbf:	mov    QWORD PTR [rsp+0x78],rbx
   140004bc4:	mov    BYTE PTR [rsp+0x68],bl
   140004bc8:	or     r9,0xffffffffffffffff
   140004bcc:	xor    r8d,r8d
   140004bcf:	lea    rdx,[rsp+0x28]
   140004bd4:	lea    rcx,[rsp+0x68]
   140004bd9:	call   0x1400039b0
   140004bde:	lea    rcx,[rsp+0x48]
   140004be3:	cmp    QWORD PTR [rsp+0x60],0x10
   140004be9:	cmovae rcx,QWORD PTR [rsp+0x48]
   140004bef:	lea    rdx,[rsp+0x68]
   140004bf4:	call   0x140004e34
   140004bf9:	call   0x140004e5e
   140004bfe:	call   0x140004df2
   140004c03:	test   eax,eax
   140004c05:	jne    0x140004c17
   140004c07:	call   0x140004dfe
   140004c0c:	cmp    eax,0x1
   140004c0f:	jne    0x140004c17
   140004c11:	call   0x140004a10
   140004c16:	nop
   140004c17:	cmp    QWORD PTR [rsp+0x40],0x10
   140004c1d:	jb     0x140004c29
   140004c1f:	mov    rcx,QWORD PTR [rsp+0x28]
   140004c24:	call   0x140005778
   140004c29:	mov    QWORD PTR [rsp+0x40],0xf
   140004c32:	mov    QWORD PTR [rsp+0x38],rbx
   140004c37:	mov    BYTE PTR [rsp+0x28],0x0
   140004c3c:	cmp    QWORD PTR [rsp+0x60],0x10
   140004c42:	jb     0x140004c4e
   140004c44:	mov    rcx,QWORD PTR [rsp+0x48]
   140004c49:	call   0x140005778
   140004c4e:	xor    eax,eax
   140004c50:	add    rsp,0x90
   140004c57:	pop    rbx
   140004c58:	ret    
   140004c59:	int3   
   140004c5a:	int3   
   140004c5b:	int3   
   140004c5c:	int3   
   140004c5d:	int3   
   140004c5e:	int3   
   140004c5f:	int3   
   140004c60:	lea    rax,[rip+0x373a9]        # 0x14003c010
   140004c67:	ret    
   140004c68:	int3   
   140004c69:	int3   
   140004c6a:	int3   
   140004c6b:	int3   
   140004c6c:	int3   
   140004c6d:	int3   
   140004c6e:	int3   
   140004c6f:	int3   
   140004c70:	mov    eax,DWORD PTR [rcx]
   140004c72:	ret    
   140004c73:	int3   
   140004c74:	int3   
   140004c75:	int3   
   140004c76:	int3   
   140004c77:	int3   
   140004c78:	int3   
   140004c79:	int3   
   140004c7a:	int3   
   140004c7b:	int3   
   140004c7c:	int3   
   140004c7d:	int3   
   140004c7e:	int3   
   140004c7f:	int3   
   140004c80:	mov    eax,DWORD PTR [rcx]
   140004c82:	ret    
   140004c83:	int3   
   140004c84:	int3   
   140004c85:	int3   
   140004c86:	int3   
   140004c87:	int3   
   140004c88:	int3   
   140004c89:	int3   
   140004c8a:	int3   
   140004c8b:	int3   
   140004c8c:	int3   
   140004c8d:	int3   
   140004c8e:	int3   
   140004c8f:	int3   
   140004c90:	jmp    0x140005f58
   140004c95:	int3   
   140004c96:	int3   
   140004c97:	int3   
   140004c98:	int3   
   140004c99:	int3   
   140004c9a:	int3   
   140004c9b:	int3   
   140004c9c:	int3   
   140004c9d:	int3   
   140004c9e:	int3   
   140004c9f:	int3   
   140004ca0:	rex push rbx
   140004ca2:	sub    rsp,0x480
   140004ca9:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140004cb2:	mov    rbx,rcx
   140004cb5:	lea    rdx,[rsp+0x20]
   140004cba:	call   0x140004380
   140004cbf:	cmp    QWORD PTR [rsp+0x20],0x0
   140004cc5:	jne    0x140004d39
   140004cc7:	xor    ecx,ecx
   140004cc9:	call   QWORD PTR [rip+0x27401]        # 0x14002c0d0
   140004ccf:	mov    rbx,rax
   140004cd2:	mov    r9d,0x100
   140004cd8:	lea    r8,[rsp+0x280]
   140004ce0:	mov    edx,0x6d
   140004ce5:	mov    rcx,rax
   140004ce8:	call   QWORD PTR [rip+0x275e2]        # 0x14002c2d0
   140004cee:	mov    r9d,0x100
   140004cf4:	lea    r8,[rsp+0x80]
   140004cfc:	mov    edx,0x6e
   140004d01:	mov    rcx,rbx
   140004d04:	call   QWORD PTR [rip+0x275c6]        # 0x14002c2d0
   140004d0a:	xor    r9d,r9d
   140004d0d:	lea    r8,[rsp+0x80]
   140004d15:	lea    rdx,[rsp+0x280]
   140004d1d:	xor    ecx,ecx
   140004d1f:	call   QWORD PTR [rip+0x2758b]        # 0x14002c2b0
   140004d25:	mov    ecx,0x1
   140004d2a:	call   0x140004e0a
   140004d2f:	call   0x140004e10
   140004d34:	jmp    0x140004dce
   140004d39:	call   0x140004dec
   140004d3e:	call   0x140004e28
   140004d43:	mov    rdx,rax
   140004d46:	lea    rcx,[rsp+0x30]
   140004d4b:	call   0x140004e3a
   140004d50:	nop
   140004d51:	call   0x140004df2
   140004d56:	test   eax,eax
   140004d58:	jne    0x140004db6
   140004d5a:	call   0x140004dfe
   140004d5f:	test   eax,eax
   140004d61:	je     0x140004d74
   140004d63:	lea    rcx,[rsp+0x30]
   140004d68:	call   0x140004e52
   140004d6d:	mov    ecx,eax
   140004d6f:	call   0x140004df8
   140004d74:	call   0x140004e1c
   140004d79:	test   eax,eax
   140004d7b:	je     0x140004d8e
   140004d7d:	call   0x140004e22
   140004d82:	mov    ecx,0x1
   140004d87:	call   0x140004e0a
   140004d8c:	jmp    0x140004dbb
   140004d8e:	call   0x140004dfe
   140004d93:	test   eax,eax
   140004d95:	je     0x140004da7
   140004d97:	call   0x140004e16
   140004d9c:	test   eax,eax
   140004d9e:	je     0x140004da7
   140004da0:	call   0x140004840
   140004da5:	jmp    0x140004dbb
   140004da7:	lea    rdx,[rsp+0x30]
   140004dac:	mov    rcx,rbx
   140004daf:	call   0x140004b20
   140004db4:	jmp    0x140004dbb
   140004db6:	call   0x140004e22
   140004dbb:	call   0x140004e10
   140004dc0:	mov    ebx,eax
   140004dc2:	lea    rcx,[rsp+0x30]
   140004dc7:	call   0x140004e40
   140004dcc:	mov    eax,ebx
   140004dce:	add    rsp,0x480
   140004dd5:	pop    rbx
   140004dd6:	ret    
   140004dd7:	int3   
   140004dd8:	int3   
   140004dd9:	int3   
   140004dda:	int3   
   140004ddb:	int3   
   140004ddc:	int3   
   140004ddd:	int3   
   140004dde:	int3   
   140004ddf:	int3   
   140004de0:	jmp    0x140006268
   140004de5:	int3   
   140004de6:	jmp    QWORD PTR [rip+0x27594]        # 0x14002c380
   140004dec:	jmp    QWORD PTR [rip+0x27586]        # 0x14002c378
   140004df2:	jmp    QWORD PTR [rip+0x27578]        # 0x14002c370
   140004df8:	jmp    QWORD PTR [rip+0x2756a]        # 0x14002c368
   140004dfe:	jmp    QWORD PTR [rip+0x2755c]        # 0x14002c360
   140004e04:	jmp    QWORD PTR [rip+0x2754e]        # 0x14002c358
   140004e0a:	jmp    QWORD PTR [rip+0x27540]        # 0x14002c350
   140004e10:	jmp    QWORD PTR [rip+0x27532]        # 0x14002c348
   140004e16:	jmp    QWORD PTR [rip+0x27524]        # 0x14002c340
   140004e1c:	jmp    QWORD PTR [rip+0x27516]        # 0x14002c338
   140004e22:	jmp    QWORD PTR [rip+0x27508]        # 0x14002c330
   140004e28:	jmp    QWORD PTR [rip+0x274fa]        # 0x14002c328
   140004e2e:	jmp    QWORD PTR [rip+0x274ec]        # 0x14002c320
   140004e34:	jmp    QWORD PTR [rip+0x274de]        # 0x14002c318
   140004e3a:	jmp    QWORD PTR [rip+0x274d0]        # 0x14002c310
   140004e40:	jmp    QWORD PTR [rip+0x274c2]        # 0x14002c308
   140004e46:	jmp    QWORD PTR [rip+0x274b4]        # 0x14002c300
   140004e4c:	jmp    QWORD PTR [rip+0x274a6]        # 0x14002c2f8
   140004e52:	jmp    QWORD PTR [rip+0x27498]        # 0x14002c2f0
   140004e58:	jmp    QWORD PTR [rip+0x2748a]        # 0x14002c2e8
   140004e5e:	jmp    QWORD PTR [rip+0x2747c]        # 0x14002c2e0
   140004e64:	jmp    QWORD PTR [rip+0x27246]        # 0x14002c0b0
   140004e6a:	jmp    QWORD PTR [rip+0x27248]        # 0x14002c0b8
   140004e70:	jmp    QWORD PTR [rip+0x2724a]        # 0x14002c0c0
   140004e76:	jmp    QWORD PTR [rip+0x2724c]        # 0x14002c0c8
   140004e7c:	jmp    QWORD PTR [rip+0x2724e]        # 0x14002c0d0
   140004e82:	jmp    QWORD PTR [rip+0x27448]        # 0x14002c2d0
   140004e88:	jmp    QWORD PTR [rip+0x2743a]        # 0x14002c2c8
   140004e8e:	jmp    QWORD PTR [rip+0x2742c]        # 0x14002c2c0
   140004e94:	jmp    QWORD PTR [rip+0x2741e]        # 0x14002c2b8
   140004e9a:	jmp    QWORD PTR [rip+0x27410]        # 0x14002c2b0
   140004ea0:	jmp    QWORD PTR [rip+0x27402]        # 0x14002c2a8
   140004ea6:	int3   
   140004ea7:	int3   
   140004ea8:	rex push rbx
   140004eaa:	sub    rsp,0x20
   140004eae:	mov    rbx,rcx
   140004eb1:	call   0x14000772c
   140004eb6:	lea    rax,[rip+0x280eb]        # 0x14002cfa8
   140004ebd:	mov    QWORD PTR [rbx],rax
   140004ec0:	mov    rax,rbx
   140004ec3:	add    rsp,0x20
   140004ec7:	pop    rbx
   140004ec8:	ret    
   140004ec9:	int3   
   140004eca:	int3   
   140004ecb:	int3   
   140004ecc:	rex push rbx
   140004ece:	sub    rsp,0x20
   140004ed2:	lea    rax,[rip+0x280df]        # 0x14002cfb8
   140004ed9:	lea    rdx,[rsp+0x30]
   140004ede:	mov    r8d,0x1
   140004ee4:	mov    QWORD PTR [rsp+0x30],rax
   140004ee9:	mov    rbx,rcx
   140004eec:	call   0x140007710
   140004ef1:	lea    rax,[rip+0x280b0]        # 0x14002cfa8
   140004ef8:	mov    QWORD PTR [rbx],rax
   140004efb:	mov    rax,rbx
   140004efe:	add    rsp,0x20
   140004f02:	pop    rbx
   140004f03:	ret    
   140004f04:	rex push rbx
   140004f06:	sub    rsp,0x20
   140004f0a:	mov    rbx,rcx
   140004f0d:	call   0x14000772c
   140004f12:	lea    rax,[rip+0x28147]        # 0x14002d060
   140004f19:	mov    QWORD PTR [rbx],rax
   140004f1c:	mov    rax,rbx
   140004f1f:	add    rsp,0x20
   140004f23:	pop    rbx
   140004f24:	ret    
   140004f25:	int3   
   140004f26:	int3   
   140004f27:	int3   
   140004f28:	rex push rbx
   140004f2a:	sub    rsp,0x20
   140004f2e:	mov    rbx,rcx
   140004f31:	call   0x140007758
   140004f36:	lea    rax,[rip+0x28123]        # 0x14002d060
   140004f3d:	mov    QWORD PTR [rbx],rax
   140004f40:	mov    rax,rbx
   140004f43:	add    rsp,0x20
   140004f47:	pop    rbx
   140004f48:	ret    
   140004f49:	int3   
   140004f4a:	int3   
   140004f4b:	int3   
   140004f4c:	rex push rbx
   140004f4e:	sub    rsp,0x20
   140004f52:	mov    rbx,rcx
   140004f55:	call   0x14000772c
   140004f5a:	lea    rax,[rip+0x28087]        # 0x14002cfe8
   140004f61:	mov    QWORD PTR [rbx],rax
   140004f64:	mov    rax,rbx
   140004f67:	add    rsp,0x20
   140004f6b:	pop    rbx
   140004f6c:	ret    
   140004f6d:	int3   
   140004f6e:	int3   
   140004f6f:	int3   
   140004f70:	rex push rbx
   140004f72:	sub    rsp,0x20
   140004f76:	mov    QWORD PTR [rsp+0x30],rdx
   140004f7b:	lea    rdx,[rsp+0x30]
   140004f80:	mov    rbx,rcx
   140004f83:	call   0x1400076e0
   140004f88:	lea    rax,[rip+0x28059]        # 0x14002cfe8
   140004f8f:	mov    QWORD PTR [rbx],rax
   140004f92:	mov    rax,rbx
   140004f95:	add    rsp,0x20
   140004f99:	pop    rbx
   140004f9a:	ret    
   140004f9b:	int3   
   140004f9c:	rex push rbx
   140004f9e:	sub    rsp,0x20
   140004fa2:	mov    rbx,rcx
   140004fa5:	call   0x14000772c
   140004faa:	lea    rax,[rip+0x2804f]        # 0x14002d000
   140004fb1:	mov    QWORD PTR [rbx],rax
   140004fb4:	mov    rax,rbx
   140004fb7:	add    rsp,0x20
   140004fbb:	pop    rbx
   140004fbc:	ret    
   140004fbd:	int3   
   140004fbe:	int3   
   140004fbf:	int3   
   140004fc0:	rex push rbx
   140004fc2:	sub    rsp,0x20
   140004fc6:	mov    QWORD PTR [rsp+0x30],rdx
   140004fcb:	lea    rdx,[rsp+0x30]
   140004fd0:	mov    rbx,rcx
   140004fd3:	call   0x1400076e0
   140004fd8:	lea    rax,[rip+0x28021]        # 0x14002d000
   140004fdf:	mov    QWORD PTR [rbx],rax
   140004fe2:	mov    rax,rbx
   140004fe5:	add    rsp,0x20
   140004fe9:	pop    rbx
   140004fea:	ret    
   140004feb:	int3   
   140004fec:	rex push rbx
   140004fee:	sub    rsp,0x20
   140004ff2:	mov    rbx,rcx
   140004ff5:	call   0x14000772c
   140004ffa:	lea    rax,[rip+0x27fcf]        # 0x14002cfd0
   140005001:	mov    QWORD PTR [rbx],rax
   140005004:	mov    rax,rbx
   140005007:	add    rsp,0x20
   14000500b:	pop    rbx
   14000500c:	ret    
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	mov    QWORD PTR [rsp+0x10],rdx
   140005015:	push   rbx
   140005016:	sub    rsp,0x20
   14000501a:	lea    rdx,[rsp+0x38]
   14000501f:	mov    rbx,rcx
   140005022:	call   0x1400076e0
   140005027:	lea    rax,[rip+0x27fa2]        # 0x14002cfd0
   14000502e:	mov    QWORD PTR [rbx],rax
   140005031:	mov    rax,rbx
   140005034:	add    rsp,0x20
   140005038:	pop    rbx
   140005039:	ret    
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	rex push rbx
   14000503e:	sub    rsp,0x20
   140005042:	mov    rbx,rcx
   140005045:	call   0x14000772c
   14000504a:	lea    rax,[rip+0x27fc7]        # 0x14002d018
   140005051:	mov    QWORD PTR [rbx],rax
   140005054:	mov    rax,rbx
   140005057:	add    rsp,0x20
   14000505b:	pop    rbx
   14000505c:	ret    
   14000505d:	int3   
   14000505e:	int3   
   14000505f:	int3   
   140005060:	rex push rbx
   140005062:	sub    rsp,0x20
   140005066:	mov    QWORD PTR [rsp+0x30],rdx
   14000506b:	lea    rdx,[rsp+0x30]
   140005070:	mov    rbx,rcx
   140005073:	call   0x1400076e0
   140005078:	lea    rax,[rip+0x27f99]        # 0x14002d018
   14000507f:	mov    QWORD PTR [rbx],rax
   140005082:	mov    rax,rbx
   140005085:	add    rsp,0x20
   140005089:	pop    rbx
   14000508a:	ret    
   14000508b:	int3   
   14000508c:	rex push rbx
   14000508e:	sub    rsp,0x20
   140005092:	mov    rbx,rcx
   140005095:	call   0x14000772c
   14000509a:	lea    rax,[rip+0x27fa7]        # 0x14002d048
   1400050a1:	mov    QWORD PTR [rbx],rax
   1400050a4:	mov    rax,rbx
   1400050a7:	add    rsp,0x20
   1400050ab:	pop    rbx
   1400050ac:	ret    
   1400050ad:	int3   
   1400050ae:	int3   
   1400050af:	int3   
   1400050b0:	rex push rbx
   1400050b2:	sub    rsp,0x20
   1400050b6:	mov    QWORD PTR [rsp+0x30],rdx
   1400050bb:	lea    rdx,[rsp+0x30]
   1400050c0:	mov    rbx,rcx
   1400050c3:	call   0x1400076e0
   1400050c8:	lea    rax,[rip+0x27f79]        # 0x14002d048
   1400050cf:	mov    QWORD PTR [rbx],rax
   1400050d2:	mov    rax,rbx
   1400050d5:	add    rsp,0x20
   1400050d9:	pop    rbx
   1400050da:	ret    
   1400050db:	int3   
   1400050dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400050e1:	push   rdi
   1400050e2:	sub    rsp,0x20
   1400050e6:	mov    rbx,rdx
   1400050e9:	mov    rdi,rcx
   1400050ec:	call   0x14000772c
   1400050f1:	lea    rax,[rip+0x27f98]        # 0x14002d090
   1400050f8:	mov    QWORD PTR [rdi],rax
   1400050fb:	mov    eax,DWORD PTR [rbx+0x18]
   1400050fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140005103:	mov    DWORD PTR [rdi+0x18],eax
   140005106:	mov    rax,rdi
   140005109:	add    rsp,0x20
   14000510d:	pop    rdi
   14000510e:	ret    
   14000510f:	int3   
   140005110:	mov    QWORD PTR [rsp+0x10],rbx
   140005115:	push   rdi
   140005116:	sub    rsp,0x20
   14000511a:	mov    rdi,rcx
   14000511d:	mov    ecx,edx
   14000511f:	mov    ebx,edx
   140005121:	call   0x1400053b0
   140005126:	lea    rdx,[rsp+0x30]
   14000512b:	mov    rcx,rdi
   14000512e:	mov    QWORD PTR [rsp+0x30],rax
   140005133:	call   0x1400076e0
   140005138:	lea    rax,[rip+0x27f51]        # 0x14002d090
   14000513f:	mov    QWORD PTR [rdi],rax
   140005142:	mov    DWORD PTR [rdi+0x18],ebx
   140005145:	mov    rbx,QWORD PTR [rsp+0x38]
   14000514a:	mov    rax,rdi
   14000514d:	add    rsp,0x20
   140005151:	pop    rdi
   140005152:	ret    
   140005153:	int3   
   140005154:	rex push rbx
   140005156:	sub    rsp,0x20
   14000515a:	mov    rbx,rcx
   14000515d:	call   0x14000772c
   140005162:	lea    rax,[rip+0x27ec7]        # 0x14002d030
   140005169:	mov    QWORD PTR [rbx],rax
   14000516c:	mov    rax,rbx
   14000516f:	add    rsp,0x20
   140005173:	pop    rbx
   140005174:	ret    
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	mov    QWORD PTR [rsp+0x10],rdx
   14000517d:	push   rbx
   14000517e:	sub    rsp,0x20
   140005182:	lea    rdx,[rsp+0x38]
   140005187:	mov    rbx,rcx
   14000518a:	call   0x1400076e0
   14000518f:	lea    rax,[rip+0x27e9a]        # 0x14002d030
   140005196:	mov    QWORD PTR [rbx],rax
   140005199:	mov    rax,rbx
   14000519c:	add    rsp,0x20
   1400051a0:	pop    rbx
   1400051a1:	ret    
   1400051a2:	int3   
   1400051a3:	int3   
   1400051a4:	lea    rax,[rip+0x27dfd]        # 0x14002cfa8
   1400051ab:	mov    QWORD PTR [rcx],rax
   1400051ae:	jmp    0x1400077a0
   1400051b3:	int3   
   1400051b4:	jmp    0x1400077a0
   1400051b9:	int3   
   1400051ba:	int3   
   1400051bb:	int3   
   1400051bc:	jmp    0x1400077a0
   1400051c1:	int3   
   1400051c2:	int3   
   1400051c3:	int3   
   1400051c4:	jmp    0x1400077a0
   1400051c9:	int3   
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	jmp    0x1400077a0
   1400051d1:	int3   
   1400051d2:	int3   
   1400051d3:	int3   
   1400051d4:	jmp    0x1400077a0
   1400051d9:	int3   
   1400051da:	int3   
   1400051db:	int3   
   1400051dc:	jmp    0x1400077a0
   1400051e1:	int3   
   1400051e2:	int3   
   1400051e3:	int3   
   1400051e4:	jmp    0x1400077a0
   1400051e9:	int3   
   1400051ea:	int3   
   1400051eb:	int3   
   1400051ec:	jmp    0x1400077a0
   1400051f1:	int3   
   1400051f2:	int3   
   1400051f3:	int3   
   1400051f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400051f9:	push   rdi
   1400051fa:	sub    rsp,0x20
   1400051fe:	lea    rax,[rip+0x27da3]        # 0x14002cfa8
   140005205:	mov    ebx,edx
   140005207:	mov    rdi,rcx
   14000520a:	mov    QWORD PTR [rcx],rax
   14000520d:	call   0x1400077a0
   140005212:	test   bl,0x1
   140005215:	je     0x14000521f
   140005217:	mov    rcx,rdi
   14000521a:	call   0x140005778
   14000521f:	mov    rax,rdi
   140005222:	mov    rbx,QWORD PTR [rsp+0x30]
   140005227:	add    rsp,0x20
   14000522b:	pop    rdi
   14000522c:	ret    
   14000522d:	int3   
   14000522e:	int3   
   14000522f:	int3   
   140005230:	mov    QWORD PTR [rsp+0x8],rbx
   140005235:	push   rdi
   140005236:	sub    rsp,0x20
   14000523a:	mov    ebx,edx
   14000523c:	mov    rdi,rcx
   14000523f:	call   0x1400077a0
   140005244:	test   bl,0x1
   140005247:	je     0x140005251
   140005249:	mov    rcx,rdi
   14000524c:	call   0x140005778
   140005251:	mov    rax,rdi
   140005254:	mov    rbx,QWORD PTR [rsp+0x30]
   140005259:	add    rsp,0x20
   14000525d:	pop    rdi
   14000525e:	ret    
   14000525f:	int3   
   140005260:	mov    QWORD PTR [rsp+0x8],rbx
   140005265:	push   rdi
   140005266:	sub    rsp,0x20
   14000526a:	mov    ebx,edx
   14000526c:	mov    rdi,rcx
   14000526f:	call   0x1400077a0
   140005274:	test   bl,0x1
   140005277:	je     0x140005281
   140005279:	mov    rcx,rdi
   14000527c:	call   0x140005778
   140005281:	mov    rax,rdi
   140005284:	mov    rbx,QWORD PTR [rsp+0x30]
   140005289:	add    rsp,0x20
   14000528d:	pop    rdi
   14000528e:	ret    
   14000528f:	int3   
   140005290:	mov    QWORD PTR [rsp+0x8],rbx
   140005295:	push   rdi
   140005296:	sub    rsp,0x20
   14000529a:	mov    ebx,edx
   14000529c:	mov    rdi,rcx
   14000529f:	call   0x1400077a0
   1400052a4:	test   bl,0x1
   1400052a7:	je     0x1400052b1
   1400052a9:	mov    rcx,rdi
   1400052ac:	call   0x140005778
   1400052b1:	mov    rax,rdi
   1400052b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400052b9:	add    rsp,0x20
   1400052bd:	pop    rdi
   1400052be:	ret    
   1400052bf:	int3   
   1400052c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400052c5:	push   rdi
   1400052c6:	sub    rsp,0x20
   1400052ca:	mov    ebx,edx
   1400052cc:	mov    rdi,rcx
   1400052cf:	call   0x1400077a0
   1400052d4:	test   bl,0x1
   1400052d7:	je     0x1400052e1
   1400052d9:	mov    rcx,rdi
   1400052dc:	call   0x140005778
   1400052e1:	mov    rax,rdi
   1400052e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400052e9:	add    rsp,0x20
   1400052ed:	pop    rdi
   1400052ee:	ret    
   1400052ef:	int3   
   1400052f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400052f5:	push   rdi
   1400052f6:	sub    rsp,0x20
   1400052fa:	mov    ebx,edx
   1400052fc:	mov    rdi,rcx
   1400052ff:	call   0x1400077a0
   140005304:	test   bl,0x1
   140005307:	je     0x140005311
   140005309:	mov    rcx,rdi
   14000530c:	call   0x140005778
   140005311:	mov    rax,rdi
   140005314:	mov    rbx,QWORD PTR [rsp+0x30]
   140005319:	add    rsp,0x20
   14000531d:	pop    rdi
   14000531e:	ret    
   14000531f:	int3   
   140005320:	mov    QWORD PTR [rsp+0x8],rbx
   140005325:	push   rdi
   140005326:	sub    rsp,0x20
   14000532a:	mov    ebx,edx
   14000532c:	mov    rdi,rcx
   14000532f:	call   0x1400077a0
   140005334:	test   bl,0x1
   140005337:	je     0x140005341
   140005339:	mov    rcx,rdi
   14000533c:	call   0x140005778
   140005341:	mov    rax,rdi
   140005344:	mov    rbx,QWORD PTR [rsp+0x30]
   140005349:	add    rsp,0x20
   14000534d:	pop    rdi
   14000534e:	ret    
   14000534f:	int3   
   140005350:	mov    QWORD PTR [rsp+0x8],rbx
   140005355:	push   rdi
   140005356:	sub    rsp,0x20
   14000535a:	mov    ebx,edx
   14000535c:	mov    rdi,rcx
   14000535f:	call   0x1400077a0
   140005364:	test   bl,0x1
   140005367:	je     0x140005371
   140005369:	mov    rcx,rdi
   14000536c:	call   0x140005778
   140005371:	mov    rax,rdi
   140005374:	mov    rbx,QWORD PTR [rsp+0x30]
   140005379:	add    rsp,0x20
   14000537d:	pop    rdi
   14000537e:	ret    
   14000537f:	int3   
   140005380:	mov    QWORD PTR [rsp+0x8],rbx
   140005385:	push   rdi
   140005386:	sub    rsp,0x20
   14000538a:	mov    ebx,edx
   14000538c:	mov    rdi,rcx
   14000538f:	call   0x1400077a0
   140005394:	test   bl,0x1
   140005397:	je     0x1400053a1
   140005399:	mov    rcx,rdi
   14000539c:	call   0x140005778
   1400053a1:	mov    rax,rdi
   1400053a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053a9:	add    rsp,0x20
   1400053ad:	pop    rdi
   1400053ae:	ret    
   1400053af:	int3   
   1400053b0:	cmp    ecx,0x7
   1400053b3:	jg     0x140005413
   1400053b5:	je     0x14000540b
   1400053b7:	test   ecx,ecx
   1400053b9:	je     0x140005403
   1400053bb:	dec    ecx
   1400053bd:	je     0x1400053fb
   1400053bf:	dec    ecx
   1400053c1:	je     0x1400053f3
   1400053c3:	dec    ecx
   1400053c5:	je     0x1400053eb
   1400053c7:	dec    ecx
   1400053c9:	je     0x1400053e3
   1400053cb:	dec    ecx
   1400053cd:	je     0x1400053db
   1400053cf:	dec    ecx
   1400053d1:	jne    0x140005430
   1400053d3:	lea    rax,[rip+0x27ee6]        # 0x14002d2c0
   1400053da:	ret    
   1400053db:	lea    rax,[rip+0x27e8e]        # 0x14002d270
   1400053e2:	ret    
   1400053e3:	lea    rax,[rip+0x27e36]        # 0x14002d220
   1400053ea:	ret    
   1400053eb:	lea    rax,[rip+0x27dde]        # 0x14002d1d0
   1400053f2:	ret    
   1400053f3:	lea    rax,[rip+0x27d66]        # 0x14002d160
   1400053fa:	ret    
   1400053fb:	lea    rax,[rip+0x27cfe]        # 0x14002d100
   140005402:	ret    
   140005403:	lea    rax,[rip+0x27c96]        # 0x14002d0a0
   14000540a:	ret    
   14000540b:	lea    rax,[rip+0x27efe]        # 0x14002d310
   140005412:	ret    
   140005413:	sub    ecx,0x8
   140005416:	je     0x140005468
   140005418:	dec    ecx
   14000541a:	je     0x140005460
   14000541c:	dec    ecx
   14000541e:	je     0x140005458
   140005420:	dec    ecx
   140005422:	je     0x140005450
   140005424:	dec    ecx
   140005426:	je     0x140005448
   140005428:	dec    ecx
   14000542a:	je     0x140005440
   14000542c:	dec    ecx
   14000542e:	je     0x140005438
   140005430:	lea    rax,[rip+0x281d1]        # 0x14002d608
   140005437:	ret    
   140005438:	lea    rax,[rip+0x281a9]        # 0x14002d5e8
   14000543f:	ret    
   140005440:	lea    rax,[rip+0x28181]        # 0x14002d5c8
   140005447:	ret    
   140005448:	lea    rax,[rip+0x280e1]        # 0x14002d530
   14000544f:	ret    
   140005450:	lea    rax,[rip+0x28059]        # 0x14002d4b0
   140005457:	ret    
   140005458:	lea    rax,[rip+0x27ff1]        # 0x14002d450
   14000545f:	ret    
   140005460:	lea    rax,[rip+0x27f79]        # 0x14002d3e0
   140005467:	ret    
   140005468:	lea    rax,[rip+0x27f01]        # 0x14002d370
   14000546f:	ret    
   140005470:	sub    rsp,0x48
   140005474:	lea    rax,[rip+0x27b3d]        # 0x14002cfb8
   14000547b:	lea    rdx,[rsp+0x50]
   140005480:	lea    rcx,[rsp+0x20]
   140005485:	mov    r8d,0x1
   14000548b:	mov    QWORD PTR [rsp+0x50],rax
   140005490:	call   0x140007710
   140005495:	lea    rax,[rip+0x27b0c]        # 0x14002cfa8
   14000549c:	lea    rdx,[rip+0x34b05]        # 0x140039fa8
   1400054a3:	lea    rcx,[rsp+0x20]
   1400054a8:	mov    QWORD PTR [rsp+0x20],rax
   1400054ad:	call   0x140006570
   1400054b2:	int3   
   1400054b3:	int3   
   1400054b4:	sub    rsp,0x48
   1400054b8:	lea    rcx,[rsp+0x20]
   1400054bd:	call   0x140007758
   1400054c2:	lea    rax,[rip+0x27b97]        # 0x14002d060
   1400054c9:	lea    rdx,[rip+0x34d88]        # 0x14003a258
   1400054d0:	lea    rcx,[rsp+0x20]
   1400054d5:	mov    QWORD PTR [rsp+0x20],rax
   1400054da:	call   0x140006570
   1400054df:	int3   
   1400054e0:	sub    rsp,0x48
   1400054e4:	mov    QWORD PTR [rsp+0x50],rcx
   1400054e9:	lea    rdx,[rsp+0x50]
   1400054ee:	lea    rcx,[rsp+0x20]
   1400054f3:	call   0x1400076e0
   1400054f8:	lea    rax,[rip+0x27ae9]        # 0x14002cfe8
   1400054ff:	lea    rdx,[rip+0x34b2a]        # 0x14003a030
   140005506:	lea    rcx,[rsp+0x20]
   14000550b:	mov    QWORD PTR [rsp+0x20],rax
   140005510:	call   0x140006570
   140005515:	int3   
   140005516:	int3   
   140005517:	int3   
   140005518:	sub    rsp,0x48
   14000551c:	mov    QWORD PTR [rsp+0x50],rcx
   140005521:	lea    rdx,[rsp+0x50]
   140005526:	lea    rcx,[rsp+0x20]
   14000552b:	call   0x1400076e0
   140005530:	lea    rax,[rip+0x27ac9]        # 0x14002d000
   140005537:	lea    rdx,[rip+0x34b82]        # 0x14003a0c0
   14000553e:	lea    rcx,[rsp+0x20]
   140005543:	mov    QWORD PTR [rsp+0x20],rax
   140005548:	call   0x140006570
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	sub    rsp,0x48
   140005554:	mov    QWORD PTR [rsp+0x50],rcx
   140005559:	lea    rdx,[rsp+0x50]
   14000555e:	lea    rcx,[rsp+0x20]
   140005563:	call   0x1400076e0
   140005568:	lea    rax,[rip+0x27aa9]        # 0x14002d018
   14000556f:	lea    rdx,[rip+0x34bb2]        # 0x14003a128
   140005576:	lea    rcx,[rsp+0x20]
   14000557b:	mov    QWORD PTR [rsp+0x20],rax
   140005580:	call   0x140006570
   140005585:	int3   
   140005586:	int3   
   140005587:	int3   
   140005588:	sub    rsp,0x48
   14000558c:	mov    QWORD PTR [rsp+0x50],rcx
   140005591:	lea    rdx,[rsp+0x50]
   140005596:	lea    rcx,[rsp+0x20]
   14000559b:	call   0x1400076e0
   1400055a0:	lea    rax,[rip+0x27aa1]        # 0x14002d048
   1400055a7:	lea    rdx,[rip+0x34be2]        # 0x14003a190
   1400055ae:	lea    rcx,[rsp+0x20]
   1400055b3:	mov    QWORD PTR [rsp+0x20],rax
   1400055b8:	call   0x140006570
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	rex push rbx
   1400055c2:	sub    rsp,0x40
   1400055c6:	mov    ebx,ecx
   1400055c8:	call   0x1400053b0
   1400055cd:	lea    rdx,[rsp+0x58]
   1400055d2:	lea    rcx,[rsp+0x20]
   1400055d7:	mov    QWORD PTR [rsp+0x58],rax
   1400055dc:	call   0x1400076e0
   1400055e1:	lea    rax,[rip+0x27aa8]        # 0x14002d090
   1400055e8:	lea    rdx,[rip+0x34cc9]        # 0x14003a2b8
   1400055ef:	lea    rcx,[rsp+0x20]
   1400055f4:	mov    QWORD PTR [rsp+0x20],rax
   1400055f9:	mov    DWORD PTR [rsp+0x38],ebx
   1400055fd:	call   0x140006570
   140005602:	int3   
   140005603:	int3   
   140005604:	sub    rsp,0x48
   140005608:	mov    QWORD PTR [rsp+0x50],rcx
   14000560d:	lea    rdx,[rsp+0x50]
   140005612:	lea    rcx,[rsp+0x20]
   140005617:	call   0x1400076e0
   14000561c:	lea    rax,[rip+0x27a0d]        # 0x14002d030
   140005623:	lea    rdx,[rip+0x34bf6]        # 0x14003a220
   14000562a:	lea    rcx,[rsp+0x20]
   14000562f:	mov    QWORD PTR [rsp+0x20],rax
   140005634:	call   0x140006570
   140005639:	int3   
   14000563a:	int3   
   14000563b:	int3   
   14000563c:	lea    rax,[rip+0x27a2d]        # 0x14002d070
   140005643:	ret    
   140005644:	cmp    QWORD PTR [rip+0x2848c],0x0        # 0x14002dad8
   14000564c:	lea    rax,[rip+0x2847d]        # 0x14002dad0
   140005653:	je     0x140005664
   140005655:	cmp    DWORD PTR [rax],ecx
   140005657:	je     0x140005667
   140005659:	add    rax,0x10
   14000565d:	cmp    QWORD PTR [rax+0x8],0x0
   140005662:	jne    0x140005655
   140005664:	xor    eax,eax
   140005666:	ret    
   140005667:	mov    rax,QWORD PTR [rax+0x8]
   14000566b:	ret    
   14000566c:	cmp    QWORD PTR [rip+0x27fb4],0x0        # 0x14002d628
   140005674:	lea    rax,[rip+0x27fa5]        # 0x14002d620
   14000567b:	je     0x14000568c
   14000567d:	cmp    DWORD PTR [rax],ecx
   14000567f:	je     0x14000568f
   140005681:	add    rax,0x10
   140005685:	cmp    QWORD PTR [rax+0x8],0x0
   14000568a:	jne    0x14000567d
   14000568c:	xor    eax,eax
   14000568e:	ret    
   14000568f:	mov    rax,QWORD PTR [rax+0x8]
   140005693:	ret    
   140005694:	mov    rcx,QWORD PTR [rip+0x385cd]        # 0x14003dc68
   14000569b:	rex.W jmp QWORD PTR [rip+0x26a76]        # 0x14002c118
   1400056a2:	int3   
   1400056a3:	int3   
   1400056a4:	sub    rsp,0x28
   1400056a8:	mov    rcx,QWORD PTR [rip+0x385b9]        # 0x14003dc68
   1400056af:	call   QWORD PTR [rip+0x26a63]        # 0x14002c118
   1400056b5:	test   rax,rax
   1400056b8:	je     0x1400056bc
   1400056ba:	call   rax
   1400056bc:	mov    edx,0x1
   1400056c1:	xor    ecx,ecx
   1400056c3:	call   0x14000797c
   1400056c8:	call   0x140007998
   1400056cd:	int3   
   1400056ce:	int3   
   1400056cf:	int3   
   1400056d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400056d5:	push   rdi
   1400056d6:	sub    rsp,0x20
   1400056da:	mov    rdi,rcx
   1400056dd:	mov    rcx,QWORD PTR [rip+0x38584]        # 0x14003dc68
   1400056e4:	call   QWORD PTR [rip+0x26a2e]        # 0x14002c118
   1400056ea:	mov    rcx,rdi
   1400056ed:	mov    rbx,rax
   1400056f0:	call   QWORD PTR [rip+0x26a1a]        # 0x14002c110
   1400056f6:	mov    QWORD PTR [rip+0x3856b],rax        # 0x14003dc68
   1400056fd:	mov    rax,rbx
   140005700:	mov    rbx,QWORD PTR [rsp+0x30]
   140005705:	add    rsp,0x20
   140005709:	pop    rdi
   14000570a:	ret    
   14000570b:	int3   
   14000570c:	rex push rbx
   14000570e:	sub    rsp,0x40
   140005712:	mov    rbx,rcx
   140005715:	jmp    0x140005726
   140005717:	mov    rcx,rbx
   14000571a:	call   0x140007d84
   14000571f:	test   eax,eax
   140005721:	je     0x140005736
   140005723:	mov    rcx,rbx
   140005726:	call   0x140007c64
   14000572b:	test   rax,rax
   14000572e:	je     0x140005717
   140005730:	add    rsp,0x40
   140005734:	pop    rbx
   140005735:	ret    
   140005736:	lea    rax,[rip+0x2787b]        # 0x14002cfb8
   14000573d:	lea    rdx,[rsp+0x58]
   140005742:	lea    rcx,[rsp+0x20]
   140005747:	mov    r8d,0x1
   14000574d:	mov    QWORD PTR [rsp+0x58],rax
   140005752:	call   0x140007710
   140005757:	lea    rax,[rip+0x2784a]        # 0x14002cfa8
   14000575e:	lea    rdx,[rip+0x34843]        # 0x140039fa8
   140005765:	lea    rcx,[rsp+0x20]
   14000576a:	mov    QWORD PTR [rsp+0x20],rax
   14000576f:	call   0x140006570
   140005774:	int3   
   140005775:	int3   
   140005776:	int3   
   140005777:	int3   
   140005778:	jmp    0x140007dc0
   14000577d:	int3   
   14000577e:	int3   
   14000577f:	int3   
   140005780:	rex push rbx
   140005782:	sub    rsp,0x20
   140005786:	mov    edx,0x8
   14000578b:	lea    ecx,[rdx+0x18]
   14000578e:	call   0x140008604
   140005793:	mov    rcx,rax
   140005796:	mov    rbx,rax
   140005799:	call   QWORD PTR [rip+0x26971]        # 0x14002c110
   14000579f:	mov    QWORD PTR [rip+0x3a95a],rax        # 0x140040100
   1400057a6:	mov    QWORD PTR [rip+0x3a94b],rax        # 0x1400400f8
   1400057ad:	test   rbx,rbx
   1400057b0:	jne    0x1400057b7
   1400057b2:	lea    eax,[rbx+0x18]
   1400057b5:	jmp    0x1400057bd
   1400057b7:	and    QWORD PTR [rbx],0x0
   1400057bb:	xor    eax,eax
   1400057bd:	add    rsp,0x20
   1400057c1:	pop    rbx
   1400057c2:	ret    
   1400057c3:	int3   
   1400057c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400057c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400057ce:	mov    QWORD PTR [rsp+0x18],rdi
   1400057d3:	push   r12
   1400057d5:	push   r14
   1400057d7:	push   r15
   1400057d9:	sub    rsp,0x20
   1400057dd:	mov    r12,rcx
   1400057e0:	call   0x14000840c
   1400057e5:	nop
   1400057e6:	mov    rcx,QWORD PTR [rip+0x3a913]        # 0x140040100
   1400057ed:	call   QWORD PTR [rip+0x26925]        # 0x14002c118
   1400057f3:	mov    r14,rax
   1400057f6:	mov    rcx,QWORD PTR [rip+0x3a8fb]        # 0x1400400f8
   1400057fd:	call   QWORD PTR [rip+0x26915]        # 0x14002c118
   140005803:	mov    rbx,rax
   140005806:	cmp    rax,r14
   140005809:	jb     0x1400058aa
   14000580f:	mov    rdi,rax
   140005812:	sub    rdi,r14
   140005815:	lea    r15,[rdi+0x8]
   140005819:	cmp    r15,0x8
   14000581d:	jb     0x1400058aa
   140005823:	mov    rcx,r14
   140005826:	call   0x1400085c8
   14000582b:	mov    rsi,rax
   14000582e:	cmp    rax,r15
   140005831:	jae    0x140005888
   140005833:	mov    edx,0x1000
   140005838:	cmp    rax,rdx
   14000583b:	cmovb  rdx,rax
   14000583f:	add    rdx,rax
   140005842:	cmp    rdx,rax
   140005845:	jb     0x140005858
   140005847:	mov    rcx,r14
   14000584a:	call   0x140008700
   14000584f:	xor    ebx,ebx
   140005851:	test   rax,rax
   140005854:	jne    0x140005870
   140005856:	jmp    0x14000585a
   140005858:	xor    ebx,ebx
   14000585a:	lea    rdx,[rsi+0x20]
   14000585e:	cmp    rdx,rsi
   140005861:	jb     0x1400058ac
   140005863:	mov    rcx,r14
   140005866:	call   0x140008700
   14000586b:	test   rax,rax
   14000586e:	je     0x1400058ac
   140005870:	sar    rdi,0x3
   140005874:	lea    rbx,[rax+rdi*8]
   140005878:	mov    rcx,rax
   14000587b:	call   QWORD PTR [rip+0x2688f]        # 0x14002c110
   140005881:	mov    QWORD PTR [rip+0x3a878],rax        # 0x140040100
   140005888:	mov    rcx,r12
   14000588b:	call   QWORD PTR [rip+0x2687f]        # 0x14002c110
   140005891:	mov    QWORD PTR [rbx],rax
   140005894:	lea    rcx,[rbx+0x8]
   140005898:	call   QWORD PTR [rip+0x26872]        # 0x14002c110
   14000589e:	mov    QWORD PTR [rip+0x3a853],rax        # 0x1400400f8
   1400058a5:	mov    rbx,r12
   1400058a8:	jmp    0x1400058ac
   1400058aa:	xor    ebx,ebx
   1400058ac:	call   0x140008418
   1400058b1:	mov    rax,rbx
   1400058b4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400058b9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400058be:	mov    rdi,QWORD PTR [rsp+0x50]
   1400058c3:	add    rsp,0x20
   1400058c7:	pop    r15
   1400058c9:	pop    r14
   1400058cb:	pop    r12
   1400058cd:	ret    
   1400058ce:	int3   
   1400058cf:	int3   
   1400058d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400058d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400058da:	mov    QWORD PTR [rsp+0x18],rsi
   1400058df:	push   rdi
   1400058e0:	push   r14
   1400058e2:	push   r15
   1400058e4:	sub    rsp,0x20
   1400058e8:	mov    r15,rcx
   1400058eb:	mov    rcx,QWORD PTR [rip+0x3a80e]        # 0x140040100
   1400058f2:	call   QWORD PTR [rip+0x26820]        # 0x14002c118
   1400058f8:	mov    rcx,QWORD PTR [rip+0x3a7f9]        # 0x1400400f8
   1400058ff:	mov    rbp,rax
   140005902:	call   QWORD PTR [rip+0x26810]        # 0x14002c118
   140005908:	mov    rsi,rax
   14000590b:	cmp    rax,rbp
   14000590e:	jb     0x1400059a9
   140005914:	mov    rbx,rax
   140005917:	sub    rbx,rbp
   14000591a:	lea    r14,[rbx+0x8]
   14000591e:	cmp    r14,0x8
   140005922:	jb     0x1400059a9
   140005928:	mov    rcx,rbp
   14000592b:	call   0x1400085c8
   140005930:	mov    rdi,rax
   140005933:	cmp    rax,r14
   140005936:	jae    0x140005987
   140005938:	mov    edx,0x1000
   14000593d:	cmp    rax,rdx
   140005940:	cmovb  rdx,rax
   140005944:	add    rdx,rax
   140005947:	cmp    rdx,rax
   14000594a:	jb     0x140005959
   14000594c:	mov    rcx,rbp
   14000594f:	call   0x140008700
   140005954:	test   rax,rax
   140005957:	jne    0x14000596f
   140005959:	lea    rdx,[rdi+0x20]
   14000595d:	cmp    rdx,rdi
   140005960:	jb     0x1400059a9
   140005962:	mov    rcx,rbp
   140005965:	call   0x140008700
   14000596a:	test   rax,rax
   14000596d:	je     0x1400059a9
   14000596f:	sar    rbx,0x3
   140005973:	mov    rcx,rax
   140005976:	lea    rsi,[rax+rbx*8]
   14000597a:	call   QWORD PTR [rip+0x26790]        # 0x14002c110
   140005980:	mov    QWORD PTR [rip+0x3a779],rax        # 0x140040100
   140005987:	mov    rcx,r15
   14000598a:	call   QWORD PTR [rip+0x26780]        # 0x14002c110
   140005990:	lea    rcx,[rsi+0x8]
   140005994:	mov    QWORD PTR [rsi],rax
   140005997:	call   QWORD PTR [rip+0x26773]        # 0x14002c110
   14000599d:	mov    QWORD PTR [rip+0x3a754],rax        # 0x1400400f8
   1400059a4:	mov    rax,r15
   1400059a7:	jmp    0x1400059ab
   1400059a9:	xor    eax,eax
   1400059ab:	mov    rbx,QWORD PTR [rsp+0x40]
   1400059b0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400059b5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400059ba:	add    rsp,0x20
   1400059be:	pop    r15
   1400059c0:	pop    r14
   1400059c2:	pop    rdi
   1400059c3:	ret    
   1400059c4:	sub    rsp,0x28
   1400059c8:	call   0x1400057c4
   1400059cd:	neg    rax
   1400059d0:	sbb    eax,eax
   1400059d2:	neg    eax
   1400059d4:	dec    eax
   1400059d6:	add    rsp,0x28
   1400059da:	ret    
   1400059db:	int3   
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	int3   
   1400059df:	int3   
   1400059e0:	int3   
   1400059e1:	int3   
   1400059e2:	int3   
   1400059e3:	int3   
   1400059e4:	int3   
   1400059e5:	int3   
   1400059e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400059f0:	mov    r11,rcx
   1400059f3:	mov    r10,rdx
   1400059f6:	cmp    r8,0x10
   1400059fa:	jbe    0x140005ab9
   140005a00:	sub    rdx,rcx
   140005a03:	jae    0x140005a14
   140005a05:	mov    rax,r10
   140005a08:	add    rax,r8
   140005a0b:	cmp    rcx,rax
   140005a0e:	jl     0x140005daa
   140005a14:	bt     DWORD PTR [rip+0x382b8],0x1        # 0x14003dcd4
   140005a1c:	jae    0x140005a31
   140005a1e:	push   rdi
   140005a1f:	push   rsi
   140005a20:	mov    rdi,rcx
   140005a23:	mov    rsi,r10
   140005a26:	mov    rcx,r8
   140005a29:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005a2b:	pop    rsi
   140005a2c:	pop    rdi
   140005a2d:	mov    rax,r11
   140005a30:	ret    
   140005a31:	bt     DWORD PTR [rip+0x3829b],0x2        # 0x14003dcd4
   140005a39:	jb     0x140005c95
   140005a3f:	test   cl,0x7
   140005a42:	je     0x140005a7a
   140005a44:	test   cl,0x1
   140005a47:	je     0x140005a54
   140005a49:	mov    al,BYTE PTR [rdx+rcx*1]
   140005a4c:	dec    r8
   140005a4f:	mov    BYTE PTR [rcx],al
   140005a51:	inc    rcx
   140005a54:	test   cl,0x2
   140005a57:	je     0x140005a68
   140005a59:	mov    ax,WORD PTR [rdx+rcx*1]
   140005a5d:	sub    r8,0x2
   140005a61:	mov    WORD PTR [rcx],ax
   140005a64:	add    rcx,0x2
   140005a68:	test   cl,0x4
   140005a6b:	je     0x140005a7a
   140005a6d:	mov    eax,DWORD PTR [rdx+rcx*1]
   140005a70:	sub    r8,0x4
   140005a74:	mov    DWORD PTR [rcx],eax
   140005a76:	add    rcx,0x4
   140005a7a:	mov    r9,r8
   140005a7d:	shr    r9,0x5
   140005a81:	jne    0x140005c60
   140005a87:	mov    r9,r8
   140005a8a:	shr    r9,0x3
   140005a8e:	je     0x140005aa4
   140005a90:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005a94:	mov    QWORD PTR [rcx],rax
   140005a97:	add    rcx,0x8
   140005a9b:	dec    r9
   140005a9e:	jne    0x140005a90
   140005aa0:	and    r8,0x7
   140005aa4:	test   r8,r8
   140005aa7:	jne    0x140005ab0
   140005aa9:	mov    rax,r11
   140005aac:	ret    
   140005aad:	nop    DWORD PTR [rax]
   140005ab0:	lea    rdx,[rdx+rcx*1]
   140005ab4:	mov    r10,rcx
   140005ab7:	jmp    0x140005abc
   140005ab9:	mov    r10,r11
   140005abc:	lea    r9,[rip+0xffffffffffffa53d]        # 0x140000000
   140005ac3:	mov    eax,DWORD PTR [r9+r8*4+0x5ad0]
   140005acb:	add    rax,r9
   140005ace:	jmp    rax
   140005ad0:	adc    al,0x5b
   140005ad2:	add    BYTE PTR [rax],al
   140005ad4:	sbb    BYTE PTR [rbx+0x0],bl
   140005ad7:	add    BYTE PTR [rbx],ah
   140005ad9:	pop    rbx
   140005ada:	add    BYTE PTR [rax],al
   140005adc:	(bad)  
   140005add:	pop    rbx
   140005ade:	add    BYTE PTR [rax],al
   140005ae0:	rex.R pop rbx
   140005ae2:	add    BYTE PTR [rax],al
   140005ae4:	rex.WRB pop r11
   140005ae6:	add    BYTE PTR [rax],al
   140005ae8:	pop    rdi
   140005ae9:	pop    rbx
   140005aea:	add    BYTE PTR [rax],al
   140005aec:	jb     0x140005b49
   140005aee:	add    BYTE PTR [rax],al
   140005af0:	mov    ds,WORD PTR [rbx+0x0]
   140005af3:	add    BYTE PTR [rax-0x54ffffa5],bl
   140005af9:	pop    rbx
   140005afa:	add    BYTE PTR [rax],al
   140005afc:	mov    edi,0xdc00005b
   140005b01:	pop    rbx
   140005b02:	add    BYTE PTR [rax],al
   140005b04:	in     eax,dx
   140005b05:	pop    rbx
   140005b06:	add    BYTE PTR [rax],al
   140005b08:	(bad)  
   140005b09:	pop    rsp
   140005b0a:	add    BYTE PTR [rax],al
   140005b0c:	and    bl,BYTE PTR [rax+rax*1+0x0]
   140005b10:	rex.RX pop rsp
   140005b12:	add    BYTE PTR [rax],al
   140005b14:	mov    rax,r11
   140005b17:	ret    
   140005b18:	movzx  rax,BYTE PTR [rdx]
   140005b1c:	mov    BYTE PTR [r10],al
   140005b1f:	mov    rax,r11
   140005b22:	ret    
   140005b23:	movzx  rax,WORD PTR [rdx]
   140005b27:	mov    WORD PTR [r10],ax
   140005b2b:	mov    rax,r11
   140005b2e:	ret    
   140005b2f:	movzx  rax,BYTE PTR [rdx]
   140005b33:	movzx  rcx,WORD PTR [rdx+0x1]
   140005b38:	mov    BYTE PTR [r10],al
   140005b3b:	mov    WORD PTR [r10+0x1],cx
   140005b40:	mov    rax,r11
   140005b43:	ret    
   140005b44:	mov    eax,DWORD PTR [rdx]
   140005b46:	mov    DWORD PTR [r10],eax
   140005b49:	mov    rax,r11
   140005b4c:	ret    
   140005b4d:	movzx  rax,BYTE PTR [rdx]
   140005b51:	mov    ecx,DWORD PTR [rdx+0x1]
   140005b54:	mov    BYTE PTR [r10],al
   140005b57:	mov    DWORD PTR [r10+0x1],ecx
   140005b5b:	mov    rax,r11
   140005b5e:	ret    
   140005b5f:	movzx  rax,WORD PTR [rdx]
   140005b63:	mov    ecx,DWORD PTR [rdx+0x2]
   140005b66:	mov    WORD PTR [r10],ax
   140005b6a:	mov    DWORD PTR [r10+0x2],ecx
   140005b6e:	mov    rax,r11
   140005b71:	ret    
   140005b72:	movzx  rax,BYTE PTR [rdx]
   140005b76:	movzx  rcx,WORD PTR [rdx+0x1]
   140005b7b:	mov    edx,DWORD PTR [rdx+0x3]
   140005b7e:	mov    BYTE PTR [r10],al
   140005b81:	mov    WORD PTR [r10+0x1],cx
   140005b86:	mov    DWORD PTR [r10+0x3],edx
   140005b8a:	mov    rax,r11
   140005b8d:	ret    
   140005b8e:	mov    rax,QWORD PTR [rdx]
   140005b91:	mov    QWORD PTR [r10],rax
   140005b94:	mov    rax,r11
   140005b97:	ret    
   140005b98:	movzx  rax,BYTE PTR [rdx]
   140005b9c:	mov    rcx,QWORD PTR [rdx+0x1]
   140005ba0:	mov    BYTE PTR [r10],al
   140005ba3:	mov    QWORD PTR [r10+0x1],rcx
   140005ba7:	mov    rax,r11
   140005baa:	ret    
   140005bab:	movzx  rax,WORD PTR [rdx]
   140005baf:	mov    rcx,QWORD PTR [rdx+0x2]
   140005bb3:	mov    WORD PTR [r10],ax
   140005bb7:	mov    QWORD PTR [r10+0x2],rcx
   140005bbb:	mov    rax,r11
   140005bbe:	ret    
   140005bbf:	movzx  rax,BYTE PTR [rdx]
   140005bc3:	movzx  rcx,WORD PTR [rdx+0x1]
   140005bc8:	mov    rdx,QWORD PTR [rdx+0x3]
   140005bcc:	mov    BYTE PTR [r10],al
   140005bcf:	mov    WORD PTR [r10+0x1],cx
   140005bd4:	mov    QWORD PTR [r10+0x3],rdx
   140005bd8:	mov    rax,r11
   140005bdb:	ret    
   140005bdc:	mov    eax,DWORD PTR [rdx]
   140005bde:	mov    rcx,QWORD PTR [rdx+0x4]
   140005be2:	mov    DWORD PTR [r10],eax
   140005be5:	mov    QWORD PTR [r10+0x4],rcx
   140005be9:	mov    rax,r11
   140005bec:	ret    
   140005bed:	movzx  rax,BYTE PTR [rdx]
   140005bf1:	mov    ecx,DWORD PTR [rdx+0x1]
   140005bf4:	mov    rdx,QWORD PTR [rdx+0x5]
   140005bf8:	mov    BYTE PTR [r10],al
   140005bfb:	mov    DWORD PTR [r10+0x1],ecx
   140005bff:	mov    QWORD PTR [r10+0x5],rdx
   140005c03:	mov    rax,r11
   140005c06:	ret    
   140005c07:	movzx  rax,WORD PTR [rdx]
   140005c0b:	mov    ecx,DWORD PTR [rdx+0x2]
   140005c0e:	mov    rdx,QWORD PTR [rdx+0x6]
   140005c12:	mov    WORD PTR [r10],ax
   140005c16:	mov    DWORD PTR [r10+0x2],ecx
   140005c1a:	mov    QWORD PTR [r10+0x6],rdx
   140005c1e:	mov    rax,r11
   140005c21:	ret    
   140005c22:	movzx  r8,BYTE PTR [rdx]
   140005c26:	movzx  rax,WORD PTR [rdx+0x1]
   140005c2b:	mov    ecx,DWORD PTR [rdx+0x3]
   140005c2e:	mov    rdx,QWORD PTR [rdx+0x7]
   140005c32:	mov    BYTE PTR [r10],r8b
   140005c35:	mov    WORD PTR [r10+0x1],ax
   140005c3a:	mov    DWORD PTR [r10+0x3],ecx
   140005c3e:	mov    QWORD PTR [r10+0x7],rdx
   140005c42:	mov    rax,r11
   140005c45:	ret    
   140005c46:	movdqu xmm0,XMMWORD PTR [rdx]
   140005c4a:	movdqu XMMWORD PTR [r10],xmm0
   140005c4f:	mov    rax,r11
   140005c52:	ret    
   140005c53:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005c60:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005c64:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140005c69:	add    rcx,0x20
   140005c6d:	mov    QWORD PTR [rcx-0x20],rax
   140005c71:	mov    QWORD PTR [rcx-0x18],r10
   140005c75:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   140005c7a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140005c7f:	dec    r9
   140005c82:	mov    QWORD PTR [rcx-0x10],rax
   140005c86:	mov    QWORD PTR [rcx-0x8],r10
   140005c8a:	jne    0x140005c60
   140005c8c:	and    r8,0x1f
   140005c90:	jmp    0x140005a87
   140005c95:	cmp    r8,0x20
   140005c99:	jbe    0x140005d80
   140005c9f:	test   cl,0xf
   140005ca2:	jne    0x140005cb2
   140005ca4:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005ca8:	add    rcx,0x10
   140005cac:	sub    r8,0x10
   140005cb0:	jmp    0x140005ccf
   140005cb2:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005cb6:	add    rcx,0x20
   140005cba:	and    cl,0xf0
   140005cbd:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   140005cc2:	movups XMMWORD PTR [r11],xmm1
   140005cc6:	mov    rax,rcx
   140005cc9:	sub    rax,r11
   140005ccc:	sub    r8,rax
   140005ccf:	mov    r9,r8
   140005cd2:	shr    r9,0x7
   140005cd6:	je     0x140005d3e
   140005cd8:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140005cdc:	jmp    0x140005ce8
   140005cde:	xchg   ax,ax
   140005ce0:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140005ce4:	movaps XMMWORD PTR [rcx-0x10],xmm1
   140005ce8:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005cec:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   140005cf1:	add    rcx,0x80
   140005cf8:	movaps XMMWORD PTR [rcx-0x80],xmm0
   140005cfc:	movaps XMMWORD PTR [rcx-0x70],xmm1
   140005d00:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   140005d05:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   140005d0a:	dec    r9
   140005d0d:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140005d11:	movaps XMMWORD PTR [rcx-0x50],xmm1
   140005d15:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   140005d1a:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   140005d1f:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140005d23:	movaps XMMWORD PTR [rcx-0x30],xmm1
   140005d27:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   140005d2c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140005d31:	jne    0x140005ce0
   140005d33:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140005d37:	and    r8,0x7f
   140005d3b:	movaps xmm0,xmm1
   140005d3e:	mov    r9,r8
   140005d41:	shr    r9,0x4
   140005d45:	je     0x140005d61
   140005d47:	nop    WORD PTR [rax+rax*1+0x0]
   140005d50:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140005d54:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005d58:	add    rcx,0x10
   140005d5c:	dec    r9
   140005d5f:	jne    0x140005d50
   140005d61:	and    r8,0xf
   140005d65:	je     0x140005d74
   140005d67:	lea    rax,[r8+rcx*1]
   140005d6b:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   140005d70:	movups XMMWORD PTR [rax-0x10],xmm1
   140005d74:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140005d78:	mov    rax,r11
   140005d7b:	ret    
   140005d7c:	nop    DWORD PTR [rax+0x0]
   140005d80:	movups xmm0,XMMWORD PTR [r10]
   140005d84:	lea    rcx,[r8+rcx*1-0x10]
   140005d89:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005d8d:	movups XMMWORD PTR [r11],xmm0
   140005d91:	movups XMMWORD PTR [rcx],xmm1
   140005d94:	mov    rax,r11
   140005d97:	ret    
   140005d98:	nop    DWORD PTR [rax+rax*1+0x0]
   140005da0:	data16 data16 xchg ax,ax
   140005da4:	data16 data16 xchg ax,ax
   140005da8:	xchg   ax,ax
   140005daa:	bt     DWORD PTR [rip+0x37f22],0x2        # 0x14003dcd4
   140005db2:	jb     0x140005e71
   140005db8:	add    rcx,r8
   140005dbb:	test   cl,0x7
   140005dbe:	je     0x140005df6
   140005dc0:	test   cl,0x1
   140005dc3:	je     0x140005dd0
   140005dc5:	dec    rcx
   140005dc8:	mov    al,BYTE PTR [rdx+rcx*1]
   140005dcb:	dec    r8
   140005dce:	mov    BYTE PTR [rcx],al
   140005dd0:	test   cl,0x2
   140005dd3:	je     0x140005de4
   140005dd5:	sub    rcx,0x2
   140005dd9:	mov    ax,WORD PTR [rdx+rcx*1]
   140005ddd:	sub    r8,0x2
   140005de1:	mov    WORD PTR [rcx],ax
   140005de4:	test   cl,0x4
   140005de7:	je     0x140005df6
   140005de9:	sub    rcx,0x4
   140005ded:	mov    eax,DWORD PTR [rdx+rcx*1]
   140005df0:	sub    r8,0x4
   140005df4:	mov    DWORD PTR [rcx],eax
   140005df6:	mov    r9,r8
   140005df9:	shr    r9,0x5
   140005dfd:	jne    0x140005e40
   140005dff:	mov    r9,r8
   140005e02:	shr    r9,0x3
   140005e06:	je     0x140005e1c
   140005e08:	sub    rcx,0x8
   140005e0c:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005e10:	dec    r9
   140005e13:	mov    QWORD PTR [rcx],rax
   140005e16:	jne    0x140005e08
   140005e18:	and    r8,0x7
   140005e1c:	test   r8,r8
   140005e1f:	jne    0x140005e30
   140005e21:	mov    rax,r11
   140005e24:	ret    
   140005e25:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005e30:	sub    rcx,r8
   140005e33:	mov    r10,rcx
   140005e36:	lea    rdx,[rdx+rcx*1]
   140005e3a:	jmp    0x140005abc
   140005e3f:	nop
   140005e40:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140005e45:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140005e4a:	sub    rcx,0x20
   140005e4e:	mov    QWORD PTR [rcx+0x18],rax
   140005e52:	mov    QWORD PTR [rcx+0x10],r10
   140005e56:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   140005e5b:	mov    r10,QWORD PTR [rdx+rcx*1]
   140005e5f:	dec    r9
   140005e62:	mov    QWORD PTR [rcx+0x8],rax
   140005e66:	mov    QWORD PTR [rcx],r10
   140005e69:	jne    0x140005e40
   140005e6b:	and    r8,0x1f
   140005e6f:	jmp    0x140005dff
   140005e71:	cmp    r8,0x20
   140005e75:	jbe    0x140005d80
   140005e7b:	add    rcx,r8
   140005e7e:	test   cl,0xf
   140005e81:	jne    0x140005e91
   140005e83:	sub    rcx,0x10
   140005e87:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005e8b:	sub    r8,0x10
   140005e8f:	jmp    0x140005eac
   140005e91:	sub    rcx,0x10
   140005e95:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005e99:	mov    rax,rcx
   140005e9c:	and    cl,0xf0
   140005e9f:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005ea3:	movups XMMWORD PTR [rax],xmm1
   140005ea6:	mov    r8,rcx
   140005ea9:	sub    r8,r11
   140005eac:	mov    r9,r8
   140005eaf:	shr    r9,0x7
   140005eb3:	je     0x140005f1d
   140005eb5:	movaps XMMWORD PTR [rcx],xmm0
   140005eb8:	jmp    0x140005ec7
   140005eba:	nop    WORD PTR [rax+rax*1+0x0]
   140005ec0:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140005ec4:	movaps XMMWORD PTR [rcx],xmm1
   140005ec7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   140005ecc:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   140005ed1:	sub    rcx,0x80
   140005ed8:	movaps XMMWORD PTR [rcx+0x70],xmm0
   140005edc:	movaps XMMWORD PTR [rcx+0x60],xmm1
   140005ee0:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   140005ee5:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   140005eea:	dec    r9
   140005eed:	movaps XMMWORD PTR [rcx+0x50],xmm0
   140005ef1:	movaps XMMWORD PTR [rcx+0x40],xmm1
   140005ef5:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   140005efa:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   140005eff:	movaps XMMWORD PTR [rcx+0x30],xmm0
   140005f03:	movaps XMMWORD PTR [rcx+0x20],xmm1
   140005f07:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   140005f0c:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005f10:	jne    0x140005ec0
   140005f12:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140005f16:	and    r8,0x7f
   140005f1a:	movaps xmm0,xmm1
   140005f1d:	mov    r9,r8
   140005f20:	shr    r9,0x4
   140005f24:	je     0x140005f40
   140005f26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005f30:	movaps XMMWORD PTR [rcx],xmm0
   140005f33:	sub    rcx,0x10
   140005f37:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005f3b:	dec    r9
   140005f3e:	jne    0x140005f30
   140005f40:	and    r8,0xf
   140005f44:	je     0x140005f4e
   140005f46:	movups xmm1,XMMWORD PTR [r10]
   140005f4a:	movups XMMWORD PTR [r11],xmm1
   140005f4e:	movaps XMMWORD PTR [rcx],xmm0
   140005f51:	mov    rax,r11
   140005f54:	ret    
   140005f55:	int3   
   140005f56:	int3   
   140005f57:	int3   
   140005f58:	mov    QWORD PTR [rsp+0x8],rbx
   140005f5d:	mov    QWORD PTR [rsp+0x10],rsi
   140005f62:	push   rdi
   140005f63:	sub    rsp,0x10
   140005f67:	movzx  edi,WORD PTR [rdx]
   140005f6a:	xor    esi,esi
   140005f6c:	mov    rbx,rdx
   140005f6f:	mov    r8,rcx
   140005f72:	cmp    si,di
   140005f75:	jne    0x140005f7f
   140005f77:	mov    rax,rcx
   140005f7a:	jmp    0x140006144
   140005f7f:	cmp    DWORD PTR [rip+0x360be],0x2        # 0x14003c044
   140005f86:	mov    r10d,0xfff
   140005f8c:	lea    r11d,[r10-0xf]
   140005f90:	jge    0x14000606f
   140005f96:	movzx  eax,di
   140005f99:	xorps  xmm2,xmm2
   140005f9c:	movd   xmm0,eax
   140005fa0:	pshuflw xmm1,xmm0,0x0
   140005fa5:	pshufd xmm3,xmm1,0x0
   140005faa:	mov    rax,r8
   140005fad:	and    rax,r10
   140005fb0:	cmp    rax,r11
   140005fb3:	ja     0x140005fe2
   140005fb5:	movdqu xmm0,XMMWORD PTR [r8]
   140005fba:	movdqa xmm1,xmm0
   140005fbe:	pcmpeqw xmm0,xmm3
   140005fc2:	pcmpeqw xmm1,xmm2
   140005fc6:	por    xmm1,xmm0
   140005fca:	pmovmskb eax,xmm1
   140005fce:	test   eax,eax
   140005fd0:	jne    0x140005fd8
   140005fd2:	add    r8,0x10
   140005fd6:	jmp    0x140005faa
   140005fd8:	bsf    ecx,eax
   140005fdb:	shr    rcx,1
   140005fde:	lea    r8,[r8+rcx*2]
   140005fe2:	cmp    si,WORD PTR [r8]
   140005fe6:	je     0x140006142
   140005fec:	cmp    di,WORD PTR [r8]
   140005ff0:	jne    0x140006066
   140005ff2:	mov    rdx,r8
   140005ff5:	mov    r9,rbx
   140005ff8:	mov    rax,r9
   140005ffb:	and    rax,r10
   140005ffe:	cmp    rax,r11
   140006001:	ja     0x14000604a
   140006003:	mov    rax,rdx
   140006006:	and    rax,r10
   140006009:	cmp    rax,r11
   14000600c:	ja     0x14000604a
   14000600e:	movdqu xmm1,XMMWORD PTR [r9]
   140006013:	movdqu xmm0,XMMWORD PTR [rdx]
   140006017:	pcmpeqw xmm0,xmm1
   14000601b:	pcmpeqw xmm1,xmm2
   14000601f:	pcmpeqw xmm0,xmm2
   140006023:	por    xmm0,xmm1
   140006027:	pmovmskb eax,xmm0
   14000602b:	test   eax,eax
   14000602d:	jne    0x140006039
   14000602f:	add    rdx,0x10
   140006033:	add    r9,0x10
   140006037:	jmp    0x140005ff8
   140006039:	bsf    eax,eax
   14000603c:	mov    ecx,eax
   14000603e:	shr    rcx,1
   140006041:	add    rcx,rcx
   140006044:	add    rdx,rcx
   140006047:	add    r9,rcx
   14000604a:	movzx  eax,WORD PTR [r9]
   14000604e:	cmp    si,ax
   140006051:	je     0x14000613d
   140006057:	cmp    WORD PTR [rdx],ax
   14000605a:	jne    0x140006066
   14000605c:	add    rdx,0x2
   140006060:	add    r9,0x2
   140006064:	jmp    0x140005ff8
   140006066:	add    r8,0x2
   14000606a:	jmp    0x140005faa
   14000606f:	mov    rax,rdx
   140006072:	and    rax,r10
   140006075:	cmp    rax,r11
   140006078:	ja     0x140006080
   14000607a:	movdqu xmm0,XMMWORD PTR [rdx]
   14000607e:	jmp    0x1400060ad
   140006080:	mov    rcx,rdx
   140006083:	xorps  xmm0,xmm0
   140006086:	mov    r9d,0x8
   14000608c:	movzx  edx,di
   14000608f:	psrldq xmm0,0x2
   140006094:	movzx  eax,dx
   140006097:	pinsrw xmm0,eax,0x7
   14000609c:	cmp    si,dx
   14000609f:	je     0x1400060a8
   1400060a1:	add    rcx,0x2
   1400060a5:	movzx  edx,WORD PTR [rcx]
   1400060a8:	dec    r9
   1400060ab:	jne    0x14000608f
   1400060ad:	mov    rax,r8
   1400060b0:	and    rax,r10
   1400060b3:	cmp    rax,r11
   1400060b6:	ja     0x140006113
   1400060b8:	movdqu xmm1,XMMWORD PTR [r8]
   1400060bd:	pcmpistri xmm0,xmm1,0xd
   1400060c3:	jbe    0x1400060cb
   1400060c5:	add    r8,0x10
   1400060c9:	jmp    0x1400060ad
   1400060cb:	jae    0x140006142
   1400060cd:	pcmpistri xmm0,xmm1,0xd
   1400060d3:	movsxd rax,ecx
   1400060d6:	lea    r8,[r8+rax*2]
   1400060da:	mov    rdx,r8
   1400060dd:	mov    r9,rbx
   1400060e0:	mov    rax,rdx
   1400060e3:	and    rax,r10
   1400060e6:	cmp    rax,r11
   1400060e9:	ja     0x140006125
   1400060eb:	mov    rax,r9
   1400060ee:	and    rax,r10
   1400060f1:	cmp    rax,r11
   1400060f4:	ja     0x140006125
   1400060f6:	movdqu xmm1,XMMWORD PTR [rdx]
   1400060fa:	movdqu xmm2,XMMWORD PTR [r9]
   1400060ff:	pcmpistri xmm2,xmm1,0xd
   140006105:	jno    0x14000611f
   140006107:	js     0x14000613d
   140006109:	add    rdx,0x10
   14000610d:	add    r9,0x10
   140006111:	jmp    0x1400060e0
   140006113:	cmp    si,WORD PTR [r8]
   140006117:	je     0x140006142
   140006119:	cmp    WORD PTR [r8],di
   14000611d:	je     0x1400060da
   14000611f:	add    r8,0x2
   140006123:	jmp    0x1400060ad
   140006125:	movzx  eax,WORD PTR [r9]
   140006129:	cmp    si,ax
   14000612c:	je     0x14000613d
   14000612e:	cmp    WORD PTR [rdx],ax
   140006131:	jne    0x14000611f
   140006133:	add    rdx,0x2
   140006137:	add    r9,0x2
   14000613b:	jmp    0x1400060e0
   14000613d:	mov    rax,r8
   140006140:	jmp    0x140006144
   140006142:	xor    eax,eax
   140006144:	mov    rbx,QWORD PTR [rsp+0x20]
   140006149:	mov    rsi,QWORD PTR [rsp+0x28]
   14000614e:	add    rsp,0x10
   140006152:	pop    rdi
   140006153:	ret    
   140006154:	sub    rsp,0x38
   140006158:	mov    QWORD PTR [rsp+0x20],r9
   14000615d:	xor    r9d,r9d
   140006160:	call   0x14000616c
   140006165:	add    rsp,0x38
   140006169:	ret    
   14000616a:	int3   
   14000616b:	int3   
   14000616c:	mov    rax,rsp
   14000616f:	mov    QWORD PTR [rax+0x8],rbx
   140006173:	mov    QWORD PTR [rax+0x10],rsi
   140006177:	mov    QWORD PTR [rax+0x18],rdi
   14000617b:	mov    QWORD PTR [rax+0x20],r14
   14000617f:	push   rbp
   140006180:	mov    rbp,rsp
   140006183:	sub    rsp,0x50
   140006187:	and    QWORD PTR [rbp-0x30],0x0
   14000618c:	mov    rdi,rdx
   14000618f:	xor    edx,edx
   140006191:	mov    rsi,r8
   140006194:	mov    rbx,rcx
   140006197:	lea    r8d,[rdx+0x28]
   14000619b:	lea    rcx,[rbp-0x28]
   14000619f:	mov    r14,r9
   1400061a2:	call   0x140006f70
   1400061a7:	test   rsi,rsi
   1400061aa:	jne    0x1400061c4
   1400061ac:	call   0x140009cb4
   1400061b1:	mov    DWORD PTR [rax],0x16
   1400061b7:	call   0x140008d58
   1400061bc:	or     eax,0xffffffff
   1400061bf:	jmp    0x14000624e
   1400061c4:	test   rdi,rdi
   1400061c7:	je     0x1400061ce
   1400061c9:	test   rbx,rbx
   1400061cc:	je     0x1400061ac
   1400061ce:	mov    DWORD PTR [rbp-0x18],0x42
   1400061d5:	mov    QWORD PTR [rbp-0x20],rbx
   1400061d9:	mov    QWORD PTR [rbp-0x30],rbx
   1400061dd:	cmp    rdi,0x3fffffff
   1400061e4:	jbe    0x1400061ef
   1400061e6:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   1400061ed:	jmp    0x1400061f5
   1400061ef:	lea    eax,[rdi+rdi*1]
   1400061f2:	mov    DWORD PTR [rbp-0x28],eax
   1400061f5:	mov    r9,QWORD PTR [rbp+0x30]
   1400061f9:	lea    rcx,[rbp-0x30]
   1400061fd:	mov    r8,r14
   140006200:	mov    rdx,rsi
   140006203:	call   0x14000906c
   140006208:	mov    edi,eax
   14000620a:	test   rbx,rbx
   14000620d:	je     0x14000624e
   14000620f:	dec    DWORD PTR [rbp-0x28]
   140006212:	js     0x140006228
   140006214:	mov    rax,QWORD PTR [rbp-0x30]
   140006218:	mov    BYTE PTR [rax],0x0
   14000621b:	mov    rax,QWORD PTR [rbp-0x30]
   14000621f:	inc    rax
   140006222:	mov    QWORD PTR [rbp-0x30],rax
   140006226:	jmp    0x140006237
   140006228:	lea    rdx,[rbp-0x30]
   14000622c:	xor    ecx,ecx
   14000622e:	call   0x140008e20
   140006233:	mov    rax,QWORD PTR [rbp-0x30]
   140006237:	dec    DWORD PTR [rbp-0x28]
   14000623a:	js     0x140006241
   14000623c:	mov    BYTE PTR [rax],0x0
   14000623f:	jmp    0x14000624c
   140006241:	lea    rdx,[rbp-0x30]
   140006245:	xor    ecx,ecx
   140006247:	call   0x140008e20
   14000624c:	mov    eax,edi
   14000624e:	mov    rbx,QWORD PTR [rsp+0x60]
   140006253:	mov    rsi,QWORD PTR [rsp+0x68]
   140006258:	mov    rdi,QWORD PTR [rsp+0x70]
   14000625d:	mov    r14,QWORD PTR [rsp+0x78]
   140006262:	add    rsp,0x50
   140006266:	pop    rbp
   140006267:	ret    
   140006268:	rex push rbx
   14000626a:	sub    rsp,0x50
   14000626e:	movsd  QWORD PTR [rsp+0x68],xmm0
   140006274:	movabs rax,0x7fffffffffffffff
   14000627e:	mov    rcx,QWORD PTR [rsp+0x68]
   140006283:	movsd  QWORD PTR [rsp+0x68],xmm1
   140006289:	mov    r8,QWORD PTR [rsp+0x68]
   14000628e:	and    rcx,rax
   140006291:	and    r8,rax
   140006294:	mov    r9,rcx
   140006297:	mov    eax,0x7ff
   14000629c:	mov    rdx,r8
   14000629f:	shr    r9,0x34
   1400062a3:	shr    rdx,0x34
   1400062a7:	cmp    r9,rax
   1400062aa:	je     0x140006478
   1400062b0:	cmp    rdx,rax
   1400062b3:	je     0x140006478
   1400062b9:	mov    QWORD PTR [rsp+0x68],rcx
   1400062be:	mov    eax,r9d
   1400062c1:	xor    r10d,r10d
   1400062c4:	movsd  xmm2,QWORD PTR [rsp+0x68]
   1400062ca:	mov    QWORD PTR [rsp+0x68],r8
   1400062cf:	sub    eax,edx
   1400062d1:	movsd  xmm3,QWORD PTR [rsp+0x68]
   1400062d7:	test   rcx,rcx
   1400062da:	jne    0x1400062e4
   1400062dc:	movaps xmm0,xmm3
   1400062df:	jmp    0x1400064c4
   1400062e4:	test   r8,r8
   1400062e7:	jne    0x1400062f1
   1400062e9:	movaps xmm0,xmm2
   1400062ec:	jmp    0x1400064c4
   1400062f1:	add    eax,0x36
   1400062f4:	cmp    eax,0x6c
   1400062f7:	ja     0x14000646f
   1400062fd:	mov    eax,0x5f3
   140006302:	cmp    r9,rax
   140006305:	ja     0x1400063a7
   14000630b:	cmp    rdx,rax
   14000630e:	ja     0x1400063a7
   140006314:	mov    eax,0x20b
   140006319:	cmp    r9,rax
   14000631c:	jb     0x140006327
   14000631e:	cmp    rdx,rax
   140006321:	jae    0x1400063d5
   140006327:	movsd  xmm0,QWORD PTR [rip+0x285f1]        # 0x14002e920
   14000632f:	movabs rbx,0x2590000000000000
   140006339:	mov    r10d,0xfffffda8
   14000633f:	movabs r11,0x2580000000000000
   140006349:	test   r9,r9
   14000634c:	jne    0x14000636e
   14000634e:	lea    rax,[rcx+rbx*1]
   140006352:	mov    QWORD PTR [rsp+0x68],rax
   140006357:	movsd  xmm2,QWORD PTR [rsp+0x68]
   14000635d:	addsd  xmm2,xmm0
   140006361:	movsd  QWORD PTR [rsp+0x68],xmm2
   140006367:	mov    rax,QWORD PTR [rsp+0x68]
   14000636c:	jmp    0x14000637c
   14000636e:	add    rcx,r11
   140006371:	mov    QWORD PTR [rsp+0x68],rcx
   140006376:	movsd  xmm2,QWORD PTR [rsp+0x68]
   14000637c:	test   rdx,rdx
   14000637f:	jne    0x1400063a1
   140006381:	lea    rax,[r8+rbx*1]
   140006385:	mov    QWORD PTR [rsp+0x68],rax
   14000638a:	movsd  xmm3,QWORD PTR [rsp+0x68]
   140006390:	addsd  xmm3,xmm0
   140006394:	movsd  QWORD PTR [rsp+0x68],xmm3
   14000639a:	mov    rax,QWORD PTR [rsp+0x68]
   14000639f:	jmp    0x1400063d5
   1400063a1:	lea    rax,[r8+r11*1]
   1400063a5:	jmp    0x1400063ca
   1400063a7:	movabs rdx,0xda80000000000000
   1400063b1:	mov    r10d,0x258
   1400063b7:	lea    rax,[rcx+rdx*1]
   1400063bb:	mov    QWORD PTR [rsp+0x68],rax
   1400063c0:	lea    rax,[r8+rdx*1]
   1400063c4:	movsd  xmm2,QWORD PTR [rsp+0x68]
   1400063ca:	mov    QWORD PTR [rsp+0x68],rax
   1400063cf:	movsd  xmm3,QWORD PTR [rsp+0x68]
   1400063d5:	movaps xmm1,xmm2
   1400063d8:	movaps xmm0,xmm3
   1400063db:	movsxd rax,r10d
   1400063de:	add    rax,0x3ff
   1400063e4:	shl    rax,0x34
   1400063e8:	mulsd  xmm1,xmm2
   1400063ec:	mulsd  xmm0,xmm3
   1400063f0:	addsd  xmm1,xmm0
   1400063f4:	movsd  QWORD PTR [rsp+0x70],xmm1
   1400063fa:	sqrtsd xmm1,QWORD PTR [rsp+0x70]
   140006400:	movsd  QWORD PTR [rsp+0x60],xmm1
   140006406:	mov    QWORD PTR [rsp+0x68],rax
   14000640b:	movsd  xmm0,QWORD PTR [rsp+0x68]
   140006411:	movsd  xmm1,QWORD PTR [rsp+0x60]
   140006417:	mulsd  xmm1,xmm0
   14000641b:	comisd xmm1,QWORD PTR [rip+0x284f5]        # 0x14002e918
   140006423:	jbe    0x14000646a
   140006425:	mov    DWORD PTR [rsp+0x40],0x2
   14000642d:	movsd  QWORD PTR [rsp+0x38],xmm3
   140006433:	movsd  QWORD PTR [rsp+0x30],xmm2
   140006439:	mov    edx,0x18
   14000643e:	lea    rcx,[rip+0x284c7]        # 0x14002e90c
   140006445:	movabs r8,0x7ff0000000000000
   14000644f:	lea    r9d,[rdx-0x15]
   140006453:	mov    DWORD PTR [rsp+0x28],0x22
   14000645b:	mov    DWORD PTR [rsp+0x20],0x11
   140006463:	call   0x14000a008
   140006468:	jmp    0x1400064c4
   14000646a:	movaps xmm0,xmm1
   14000646d:	jmp    0x1400064c4
   14000646f:	addsd  xmm2,xmm3
   140006473:	jmp    0x1400062e9
   140006478:	mulsd  xmm0,xmm0
   14000647c:	mulsd  xmm1,xmm1
   140006480:	movabs r10,0xfffffffffffff
   14000648a:	addsd  xmm0,xmm1
   14000648e:	movsd  QWORD PTR [rsp+0x60],xmm0
   140006494:	cmp    r9,rax
   140006497:	jne    0x14000649e
   140006499:	test   r10,rcx
   14000649c:	je     0x1400064a8
   14000649e:	cmp    rdx,rax
   1400064a1:	jne    0x1400064c4
   1400064a3:	test   r10,r8
   1400064a6:	jne    0x1400064c4
   1400064a8:	xor    ecx,ecx
   1400064aa:	call   0x140009eb0
   1400064af:	movabs rax,0x7ff0000000000000
   1400064b9:	mov    QWORD PTR [rsp+0x68],rax
   1400064be:	movsd  xmm0,QWORD PTR [rsp+0x68]
   1400064c4:	add    rsp,0x50
   1400064c8:	pop    rbx
   1400064c9:	ret    
   1400064ca:	int3   
   1400064cb:	int3   
   1400064cc:	sub    rsp,0x28
   1400064d0:	xor    eax,eax
   1400064d2:	test   cl,0x1
   1400064d5:	lea    edx,[rax+0x8]
   1400064d8:	cmovne eax,edx
   1400064db:	test   cl,0x2
   1400064de:	je     0x1400064e3
   1400064e0:	or     eax,0x10
   1400064e3:	test   cl,0x4
   1400064e6:	je     0x1400064eb
   1400064e8:	or     eax,0x4
   1400064eb:	test   dl,cl
   1400064ed:	je     0x1400064f2
   1400064ef:	or     eax,0x1
   1400064f2:	test   cl,0x10
   1400064f5:	je     0x1400064fa
   1400064f7:	or     eax,0x20
   1400064fa:	mov    ecx,eax
   1400064fc:	call   0x140009eb0
   140006501:	movabs rax,0x7ff0000000000000
   14000650b:	mov    QWORD PTR [rsp+0x38],rax
   140006510:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140006516:	add    rsp,0x28
   14000651a:	ret    
   14000651b:	int3   
   14000651c:	xor    eax,eax
   14000651e:	test   cl,0x1
   140006521:	lea    edx,[rax+0x8]
   140006524:	cmovne eax,edx
   140006527:	test   cl,0x2
   14000652a:	je     0x14000652f
   14000652c:	or     eax,0x10
   14000652f:	test   cl,0x4
   140006532:	je     0x140006537
   140006534:	or     eax,0x4
   140006537:	test   dl,cl
   140006539:	je     0x14000653e
   14000653b:	or     eax,0x1
   14000653e:	test   cl,0x10
   140006541:	je     0x140006546
   140006543:	or     eax,0x20
   140006546:	mov    ecx,eax
   140006548:	jmp    0x140009eb0
   14000654d:	int3   
   14000654e:	int3   
   14000654f:	int3   
   140006550:	movaps xmm1,xmm0
   140006553:	movsxd rax,edx
   140006556:	add    rax,0x3ff
   14000655c:	shl    rax,0x34
   140006560:	mov    QWORD PTR [rsp+0x8],rax
   140006565:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14000656b:	mulsd  xmm0,xmm1
   14000656f:	ret    
   140006570:	mov    QWORD PTR [rsp+0x10],rbx
   140006575:	mov    QWORD PTR [rsp+0x18],rdi
   14000657a:	push   rbp
   14000657b:	mov    rbp,rsp
   14000657e:	sub    rsp,0x60
   140006582:	movaps xmm0,XMMWORD PTR [rip+0x283a7]        # 0x14002e930
   140006589:	movaps xmm1,XMMWORD PTR [rip+0x283b0]        # 0x14002e940
   140006590:	mov    rbx,rdx
   140006593:	mov    rdi,rcx
   140006596:	movaps XMMWORD PTR [rbp-0x40],xmm0
   14000659a:	movaps xmm0,XMMWORD PTR [rip+0x283af]        # 0x14002e950
   1400065a1:	movaps XMMWORD PTR [rbp-0x30],xmm1
   1400065a5:	movaps xmm1,XMMWORD PTR [rip+0x283b4]        # 0x14002e960
   1400065ac:	movaps XMMWORD PTR [rbp-0x20],xmm0
   1400065b0:	movaps XMMWORD PTR [rbp-0x10],xmm1
   1400065b4:	test   rdx,rdx
   1400065b7:	je     0x1400065cf
   1400065b9:	test   BYTE PTR [rdx],0x10
   1400065bc:	je     0x1400065cf
   1400065be:	mov    rcx,QWORD PTR [rcx]
   1400065c1:	sub    rcx,0x8
   1400065c5:	mov    rax,QWORD PTR [rcx]
   1400065c8:	mov    rbx,QWORD PTR [rax+0x30]
   1400065cc:	call   QWORD PTR [rax+0x40]
   1400065cf:	lea    rdx,[rbp+0x10]
   1400065d3:	mov    rcx,rbx
   1400065d6:	mov    QWORD PTR [rbp-0x18],rdi
   1400065da:	mov    QWORD PTR [rbp-0x10],rbx
   1400065de:	call   QWORD PTR [rip+0x25b3c]        # 0x14002c120
   1400065e4:	mov    rdx,rax
   1400065e7:	mov    QWORD PTR [rbp+0x10],rax
   1400065eb:	mov    QWORD PTR [rbp-0x8],rax
   1400065ef:	test   rbx,rbx
   1400065f2:	je     0x14000660f
   1400065f4:	test   BYTE PTR [rbx],0x8
   1400065f7:	mov    ecx,0x1994000
   1400065fc:	je     0x140006603
   1400065fe:	mov    DWORD PTR [rbp-0x20],ecx
   140006601:	jmp    0x14000660f
   140006603:	mov    eax,DWORD PTR [rbp-0x20]
   140006606:	test   rdx,rdx
   140006609:	cmove  eax,ecx
   14000660c:	mov    DWORD PTR [rbp-0x20],eax
   14000660f:	mov    r8d,DWORD PTR [rbp-0x28]
   140006613:	mov    edx,DWORD PTR [rbp-0x3c]
   140006616:	mov    ecx,DWORD PTR [rbp-0x40]
   140006619:	lea    r9,[rbp-0x20]
   14000661d:	call   QWORD PTR [rip+0x25b05]        # 0x14002c128
   140006623:	lea    r11,[rsp+0x60]
   140006628:	mov    rbx,QWORD PTR [r11+0x18]
   14000662c:	mov    rdi,QWORD PTR [r11+0x20]
   140006630:	mov    rsp,r11
   140006633:	pop    rbp
   140006634:	ret    
   140006635:	int3   
   140006636:	int3   
   140006637:	int3   
   140006638:	mov    QWORD PTR [rsp+0x8],rbx
   14000663d:	mov    QWORD PTR [rsp+0x10],rsi
   140006642:	push   rdi
   140006643:	sub    rsp,0x20
   140006647:	mov    ebx,DWORD PTR [rcx+0xc]
   14000664a:	mov    edi,edx
   14000664c:	mov    rsi,rcx
   14000664f:	test   ebx,ebx
   140006651:	je     0x14000667f
   140006653:	dec    ebx
   140006655:	call   0x14000a3ec
   14000665a:	lea    rcx,[rbx+rbx*4]
   14000665e:	mov    rax,QWORD PTR [rax+0x128]
   140006665:	lea    rdx,[rax+rcx*4]
   140006669:	movsxd rax,DWORD PTR [rsi+0x10]
   14000666d:	add    rdx,rax
   140006670:	cmp    edi,DWORD PTR [rdx+0x4]
   140006673:	jle    0x14000664f
   140006675:	cmp    edi,DWORD PTR [rdx+0x8]
   140006678:	jg     0x14000664f
   14000667a:	mov    rax,rdx
   14000667d:	jmp    0x140006681
   14000667f:	xor    eax,eax
   140006681:	mov    rbx,QWORD PTR [rsp+0x30]
   140006686:	mov    rsi,QWORD PTR [rsp+0x38]
   14000668b:	add    rsp,0x20
   14000668f:	pop    rdi
   140006690:	ret    
   140006691:	int3   
   140006692:	int3   
   140006693:	int3   
   140006694:	mov    QWORD PTR [rsp+0x8],rbx
   140006699:	mov    QWORD PTR [rsp+0x10],rbp
   14000669e:	mov    QWORD PTR [rsp+0x18],rsi
   1400066a3:	push   rdi
   1400066a4:	sub    rsp,0x20
   1400066a8:	mov    rsi,rdx
   1400066ab:	mov    rdx,rcx
   1400066ae:	mov    rcx,rsi
   1400066b1:	call   0x14000c1cc
   1400066b6:	mov    edi,DWORD PTR [rsi+0xc]
   1400066b9:	xor    ebx,ebx
   1400066bb:	mov    ebp,eax
   1400066bd:	jmp    0x1400066e6
   1400066bf:	dec    edi
   1400066c1:	call   0x14000a3ec
   1400066c6:	lea    rdx,[rdi+rdi*4]
   1400066ca:	mov    rax,QWORD PTR [rax+0x128]
   1400066d1:	lea    rcx,[rax+rdx*4]
   1400066d5:	movsxd rax,DWORD PTR [rsi+0x10]
   1400066d9:	add    rcx,rax
   1400066dc:	cmp    ebp,DWORD PTR [rcx+0x4]
   1400066df:	jle    0x1400066e6
   1400066e1:	cmp    ebp,DWORD PTR [rcx+0x8]
   1400066e4:	jle    0x1400066ed
   1400066e6:	test   edi,edi
   1400066e8:	jne    0x1400066bf
   1400066ea:	mov    rcx,rbx
   1400066ed:	mov    rbp,QWORD PTR [rsp+0x38]
   1400066f2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400066f7:	test   rcx,rcx
   1400066fa:	setne  bl
   1400066fd:	mov    eax,ebx
   1400066ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140006704:	add    rsp,0x20
   140006708:	pop    rdi
   140006709:	ret    
   14000670a:	int3   
   14000670b:	int3   
   14000670c:	mov    QWORD PTR [rsp+0x10],rbx
   140006711:	mov    QWORD PTR [rsp+0x18],rbp
   140006716:	push   rsi
   140006717:	push   rdi
   140006718:	push   r12
   14000671a:	push   r14
   14000671c:	push   r15
   14000671e:	sub    rsp,0x20
   140006722:	mov    edi,DWORD PTR [r8+0xc]
   140006726:	mov    r12,rcx
   140006729:	mov    rcx,r8
   14000672c:	mov    rsi,r9
   14000672f:	mov    r14,r8
   140006732:	mov    r15,rdx
   140006735:	call   0x14000c1cc
   14000673a:	mov    r10,QWORD PTR [r12]
   14000673e:	mov    QWORD PTR [rsi],r10
   140006741:	mov    ebp,eax
   140006743:	test   edi,edi
   140006745:	je     0x1400067bb
   140006747:	movsxd rax,DWORD PTR [r14+0x10]
   14000674b:	dec    edi
   14000674d:	lea    rdx,[rdi+rdi*4]
   140006751:	lea    rbx,[rax+rdx*4]
   140006755:	add    rbx,QWORD PTR [r15+0x8]
   140006759:	cmp    ebp,DWORD PTR [rbx+0x4]
   14000675c:	jle    0x140006743
   14000675e:	cmp    ebp,DWORD PTR [rbx+0x8]
   140006761:	jg     0x140006743
   140006763:	mov    rcx,QWORD PTR [r15]
   140006766:	lea    rdx,[rsp+0x50]
   14000676b:	xor    r8d,r8d
   14000676e:	call   QWORD PTR [rip+0x259bc]        # 0x14002c130
   140006774:	movsxd r8,DWORD PTR [rbx+0x10]
   140006778:	mov    r9d,DWORD PTR [rbx+0xc]
   14000677c:	add    r8,QWORD PTR [rsp+0x50]
   140006781:	mov    r10d,DWORD PTR [rax]
   140006784:	xor    ecx,ecx
   140006786:	test   r9d,r9d
   140006789:	je     0x1400067a2
   14000678b:	lea    rdx,[r8+0xc]
   14000678f:	movsxd rax,DWORD PTR [rdx]
   140006792:	cmp    rax,r10
   140006795:	je     0x1400067a2
   140006797:	inc    ecx
   140006799:	add    rdx,0x14
   14000679d:	cmp    ecx,r9d
   1400067a0:	jb     0x14000678f
   1400067a2:	cmp    ecx,r9d
   1400067a5:	jae    0x140006743
   1400067a7:	mov    rax,QWORD PTR [r12]
   1400067ab:	lea    rcx,[rcx+rcx*4]
   1400067af:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   1400067b4:	mov    rcx,QWORD PTR [rcx+rax*1]
   1400067b8:	mov    QWORD PTR [rsi],rcx
   1400067bb:	mov    rbx,QWORD PTR [rsp+0x58]
   1400067c0:	mov    rbp,QWORD PTR [rsp+0x60]
   1400067c5:	mov    rax,rsi
   1400067c8:	add    rsp,0x20
   1400067cc:	pop    r15
   1400067ce:	pop    r14
   1400067d0:	pop    r12
   1400067d2:	pop    rdi
   1400067d3:	pop    rsi
   1400067d4:	ret    
   1400067d5:	int3   
   1400067d6:	int3   
   1400067d7:	int3   
   1400067d8:	mov    rax,rsp
   1400067db:	mov    QWORD PTR [rax+0x8],rbx
   1400067df:	mov    QWORD PTR [rax+0x10],rbp
   1400067e3:	mov    QWORD PTR [rax+0x18],rsi
   1400067e7:	mov    QWORD PTR [rax+0x20],rdi
   1400067eb:	push   r12
   1400067ed:	push   r14
   1400067ef:	push   r15
   1400067f1:	sub    rsp,0x20
   1400067f5:	mov    edi,DWORD PTR [rdx+0xc]
   1400067f8:	mov    rbp,QWORD PTR [rsp+0x70]
   1400067fd:	mov    rbx,rdx
   140006800:	mov    rcx,rbx
   140006803:	mov    rdx,rbp
   140006806:	mov    r12d,r9d
   140006809:	xor    esi,esi
   14000680b:	call   0x14000c1cc
   140006810:	mov    r14d,eax
   140006813:	test   edi,edi
   140006815:	jne    0x14000681c
   140006817:	call   0x14000c260
   14000681c:	mov    r10,QWORD PTR [rsp+0x68]
   140006821:	mov    r8,QWORD PTR [rsp+0x60]
   140006826:	mov    edx,edi
   140006828:	or     DWORD PTR [r10],0xffffffff
   14000682c:	or     DWORD PTR [r8],0xffffffff
   140006830:	test   edi,edi
   140006832:	je     0x14000685e
   140006834:	mov    r11,QWORD PTR [rbp+0x8]
   140006838:	movsxd r15,DWORD PTR [rbx+0x10]
   14000683c:	lea    r9d,[rdx-0x1]
   140006840:	lea    rcx,[r9+r9*4]
   140006844:	lea    rax,[r11+rcx*4]
   140006848:	cmp    r14d,DWORD PTR [rax+r15*1+0x4]
   14000684d:	jle    0x140006856
   14000684f:	cmp    r14d,DWORD PTR [rax+r15*1+0x8]
   140006854:	jle    0x14000685e
   140006856:	mov    edx,r9d
   140006859:	test   r9d,r9d
   14000685c:	jne    0x14000683c
   14000685e:	test   edx,edx
   140006860:	je     0x140006875
   140006862:	lea    eax,[rdx-0x1]
   140006865:	lea    rdx,[rax+rax*4]
   140006869:	movsxd rax,DWORD PTR [rbx+0x10]
   14000686d:	lea    rsi,[rax+rdx*4]
   140006871:	add    rsi,QWORD PTR [rbp+0x8]
   140006875:	xor    edx,edx
   140006877:	test   edi,edi
   140006879:	je     0x1400068db
   14000687b:	xor    r9d,r9d
   14000687e:	movsxd rcx,DWORD PTR [rbx+0x10]
   140006882:	add    rcx,r9
   140006885:	add    rcx,QWORD PTR [rbp+0x8]
   140006889:	test   rsi,rsi
   14000688c:	je     0x14000689d
   14000688e:	mov    eax,DWORD PTR [rsi+0x4]
   140006891:	cmp    DWORD PTR [rcx],eax
   140006893:	jle    0x1400068b7
   140006895:	mov    eax,DWORD PTR [rsi+0x8]
   140006898:	cmp    DWORD PTR [rcx+0x4],eax
   14000689b:	jg     0x1400068b7
   14000689d:	cmp    r12d,DWORD PTR [rcx]
   1400068a0:	jl     0x1400068b7
   1400068a2:	cmp    r12d,DWORD PTR [rcx+0x4]
   1400068a6:	jg     0x1400068b7
   1400068a8:	cmp    DWORD PTR [r8],0xffffffff
   1400068ac:	jne    0x1400068b1
   1400068ae:	mov    DWORD PTR [r8],edx
   1400068b1:	lea    eax,[rdx+0x1]
   1400068b4:	mov    DWORD PTR [r10],eax
   1400068b7:	inc    edx
   1400068b9:	add    r9,0x14
   1400068bd:	cmp    edx,edi
   1400068bf:	jb     0x14000687e
   1400068c1:	mov    eax,DWORD PTR [r8]
   1400068c4:	cmp    eax,0xffffffff
   1400068c7:	je     0x1400068db
   1400068c9:	lea    rcx,[rax+rax*4]
   1400068cd:	movsxd rax,DWORD PTR [rbx+0x10]
   1400068d1:	lea    rax,[rax+rcx*4]
   1400068d5:	add    rax,QWORD PTR [rbp+0x8]
   1400068d9:	jmp    0x1400068e5
   1400068db:	and    DWORD PTR [r8],0x0
   1400068df:	and    DWORD PTR [r10],0x0
   1400068e3:	xor    eax,eax
   1400068e5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400068ea:	mov    rbp,QWORD PTR [rsp+0x48]
   1400068ef:	mov    rsi,QWORD PTR [rsp+0x50]
   1400068f4:	mov    rdi,QWORD PTR [rsp+0x58]
   1400068f9:	add    rsp,0x20
   1400068fd:	pop    r15
   1400068ff:	pop    r14
   140006901:	pop    r12
   140006903:	ret    
   140006904:	mov    QWORD PTR [rsp+0x8],rbx
   140006909:	mov    QWORD PTR [rsp+0x10],rbp
   14000690e:	push   rsi
   14000690f:	push   rdi
   140006910:	push   r14
   140006912:	sub    rsp,0x20
   140006916:	lea    r9,[rsp+0x50]
   14000691b:	mov    rdi,r8
   14000691e:	mov    rbp,rdx
   140006921:	call   0x14000670c
   140006926:	mov    rdx,rbp
   140006929:	mov    rcx,rdi
   14000692c:	mov    r14,rax
   14000692f:	call   0x14000c1cc
   140006934:	mov    ebx,DWORD PTR [rdi+0xc]
   140006937:	mov    esi,eax
   140006939:	jmp    0x140006962
   14000693b:	dec    ebx
   14000693d:	call   0x14000a3ec
   140006942:	lea    rdx,[rbx+rbx*4]
   140006946:	mov    rax,QWORD PTR [rax+0x128]
   14000694d:	lea    rcx,[rax+rdx*4]
   140006951:	movsxd rax,DWORD PTR [rdi+0x10]
   140006955:	add    rcx,rax
   140006958:	cmp    esi,DWORD PTR [rcx+0x4]
   14000695b:	jle    0x140006962
   14000695d:	cmp    esi,DWORD PTR [rcx+0x8]
   140006960:	jle    0x140006968
   140006962:	test   ebx,ebx
   140006964:	jne    0x14000693b
   140006966:	xor    ecx,ecx
   140006968:	test   rcx,rcx
   14000696b:	jne    0x140006973
   14000696d:	or     r9d,0xffffffff
   140006971:	jmp    0x140006977
   140006973:	mov    r9d,DWORD PTR [rcx+0x4]
   140006977:	mov    r8,rdi
   14000697a:	mov    rdx,rbp
   14000697d:	mov    rcx,r14
   140006980:	call   0x14000bbb4
   140006985:	mov    rbx,QWORD PTR [rsp+0x40]
   14000698a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000698f:	add    rsp,0x20
   140006993:	pop    r14
   140006995:	pop    rdi
   140006996:	pop    rsi
   140006997:	ret    
   140006998:	mov    QWORD PTR [rsp+0x8],rbx
   14000699d:	mov    QWORD PTR [rsp+0x10],rbp
   1400069a2:	mov    QWORD PTR [rsp+0x18],rsi
   1400069a7:	push   rdi
   1400069a8:	sub    rsp,0x40
   1400069ac:	mov    rsi,r9
   1400069af:	mov    rbp,r8
   1400069b2:	mov    rbx,rdx
   1400069b5:	mov    rdi,rcx
   1400069b8:	call   0x14000a3ec
   1400069bd:	mov    QWORD PTR [rax+0x138],rbx
   1400069c4:	mov    rbx,QWORD PTR [rdi]
   1400069c7:	call   0x14000a3ec
   1400069cc:	mov    rdx,QWORD PTR [rbx+0x38]
   1400069d0:	mov    rcx,QWORD PTR [rsp+0x78]
   1400069d5:	mov    r9,QWORD PTR [rsp+0x70]
   1400069da:	mov    DWORD PTR [rsp+0x38],0x1
   1400069e2:	mov    QWORD PTR [rax+0x130],rdx
   1400069e9:	xor    ebx,ebx
   1400069eb:	mov    QWORD PTR [rsp+0x30],rbx
   1400069f0:	mov    DWORD PTR [rsp+0x28],ebx
   1400069f4:	mov    QWORD PTR [rsp+0x20],rcx
   1400069f9:	mov    rcx,QWORD PTR [rdi]
   1400069fc:	mov    r8,rsi
   1400069ff:	mov    rdx,rbp
   140006a02:	call   0x14000bddc
   140006a07:	call   0x14000a3ec
   140006a0c:	mov    rcx,QWORD PTR [rsp+0x80]
   140006a14:	mov    rbp,QWORD PTR [rsp+0x58]
   140006a19:	mov    rsi,QWORD PTR [rsp+0x60]
   140006a1e:	mov    QWORD PTR [rax+0x138],rbx
   140006a25:	lea    eax,[rbx+0x1]
   140006a28:	mov    rbx,QWORD PTR [rsp+0x50]
   140006a2d:	mov    DWORD PTR [rcx],0x1
   140006a33:	add    rsp,0x40
   140006a37:	pop    rdi
   140006a38:	ret    
   140006a39:	int3   
   140006a3a:	int3   
   140006a3b:	int3   
   140006a3c:	mov    rax,rsp
   140006a3f:	mov    QWORD PTR [rax+0x20],r9
   140006a43:	mov    QWORD PTR [rax+0x18],r8
   140006a47:	mov    QWORD PTR [rax+0x10],rdx
   140006a4b:	mov    QWORD PTR [rax+0x8],rcx
   140006a4f:	push   rbx
   140006a50:	sub    rsp,0x60
   140006a54:	mov    rbx,rcx
   140006a57:	and    DWORD PTR [rax-0x28],0x0
   140006a5b:	mov    QWORD PTR [rax-0x20],rcx
   140006a5f:	mov    QWORD PTR [rax-0x18],r8
   140006a63:	call   0x14000a3ec
   140006a68:	mov    r8,QWORD PTR [rax+0xe0]
   140006a6f:	lea    rdx,[rsp+0x48]
   140006a74:	mov    ecx,DWORD PTR [rbx]
   140006a76:	call   r8
   140006a79:	mov    DWORD PTR [rsp+0x40],0x0
   140006a81:	jmp    0x140006a83
   140006a83:	mov    eax,DWORD PTR [rsp+0x40]
   140006a87:	add    rsp,0x60
   140006a8b:	pop    rbx
   140006a8c:	ret    
   140006a8d:	int3   
   140006a8e:	int3   
   140006a8f:	int3   
   140006a90:	rex push rbx
   140006a92:	sub    rsp,0x20
   140006a96:	mov    rbx,rcx
   140006a99:	mov    QWORD PTR [rcx],rdx
   140006a9c:	call   0x14000a3ec
   140006aa1:	cmp    rbx,QWORD PTR [rax+0x120]
   140006aa8:	jae    0x140006ab8
   140006aaa:	call   0x14000a3ec
   140006aaf:	mov    rcx,QWORD PTR [rax+0x120]
   140006ab6:	jmp    0x140006aba
   140006ab8:	xor    ecx,ecx
   140006aba:	mov    QWORD PTR [rbx+0x8],rcx
   140006abe:	call   0x14000a3ec
   140006ac3:	mov    QWORD PTR [rax+0x120],rbx
   140006aca:	mov    rax,rbx
   140006acd:	add    rsp,0x20
   140006ad1:	pop    rbx
   140006ad2:	ret    
   140006ad3:	int3   
   140006ad4:	mov    QWORD PTR [rsp+0x8],rbx
   140006ad9:	push   rdi
   140006ada:	sub    rsp,0x20
   140006ade:	mov    rdi,rcx
   140006ae1:	call   0x14000a3ec
   140006ae6:	cmp    rdi,QWORD PTR [rax+0x120]
   140006aed:	je     0x140006af4
   140006aef:	call   0x14000c260
   140006af4:	call   0x14000a3ec
   140006af9:	mov    rbx,QWORD PTR [rax+0x120]
   140006b00:	jmp    0x140006b0b
   140006b02:	cmp    rdi,rbx
   140006b05:	je     0x140006b20
   140006b07:	mov    rbx,QWORD PTR [rbx+0x8]
   140006b0b:	test   rbx,rbx
   140006b0e:	jne    0x140006b02
   140006b10:	call   0x14000c260
   140006b15:	mov    rbx,QWORD PTR [rsp+0x30]
   140006b1a:	add    rsp,0x20
   140006b1e:	pop    rdi
   140006b1f:	ret    
   140006b20:	call   0x14000a3ec
   140006b25:	mov    rcx,QWORD PTR [rbx+0x8]
   140006b29:	mov    QWORD PTR [rax+0x120],rcx
   140006b30:	jmp    0x140006b15
   140006b32:	int3   
   140006b33:	int3   
   140006b34:	sub    rsp,0x28
   140006b38:	call   0x14000a3ec
   140006b3d:	mov    rax,QWORD PTR [rax+0x128]
   140006b44:	add    rsp,0x28
   140006b48:	ret    
   140006b49:	int3   
   140006b4a:	int3   
   140006b4b:	int3   
   140006b4c:	sub    rsp,0x28
   140006b50:	call   0x14000a3ec
   140006b55:	mov    rax,QWORD PTR [rax+0x130]
   140006b5c:	add    rsp,0x28
   140006b60:	ret    
   140006b61:	int3   
   140006b62:	int3   
   140006b63:	int3   
   140006b64:	rex push rbx
   140006b66:	sub    rsp,0x20
   140006b6a:	mov    rbx,rcx
   140006b6d:	call   0x14000a3ec
   140006b72:	mov    rdx,QWORD PTR [rax+0x120]
   140006b79:	jmp    0x140006b84
   140006b7b:	cmp    QWORD PTR [rdx],rbx
   140006b7e:	je     0x140006b92
   140006b80:	mov    rdx,QWORD PTR [rdx+0x8]
   140006b84:	test   rdx,rdx
   140006b87:	jne    0x140006b7b
   140006b89:	lea    eax,[rdx+0x1]
   140006b8c:	add    rsp,0x20
   140006b90:	pop    rbx
   140006b91:	ret    
   140006b92:	xor    eax,eax
   140006b94:	jmp    0x140006b8c
   140006b96:	int3   
   140006b97:	int3   
   140006b98:	mov    r8d,0x4d0
   140006b9e:	jmp    0x1400059f0
   140006ba3:	int3   
   140006ba4:	rex push rbx
   140006ba6:	sub    rsp,0x20
   140006baa:	mov    rbx,rcx
   140006bad:	call   0x14000a3ec
   140006bb2:	mov    QWORD PTR [rax+0x128],rbx
   140006bb9:	add    rsp,0x20
   140006bbd:	pop    rbx
   140006bbe:	ret    
   140006bbf:	int3   
   140006bc0:	rex push rbx
   140006bc2:	sub    rsp,0x20
   140006bc6:	mov    rbx,rcx
   140006bc9:	call   0x14000a3ec
   140006bce:	mov    QWORD PTR [rax+0x130],rbx
   140006bd5:	add    rsp,0x20
   140006bd9:	pop    rbx
   140006bda:	ret    
   140006bdb:	int3   
   140006bdc:	rex push rbp
   140006bde:	lea    rbp,[rsp-0x4b0]
   140006be6:	sub    rsp,0x5b0
   140006bed:	mov    rax,QWORD PTR [rip+0x355dc]        # 0x14003c1d0
   140006bf4:	xor    rax,rsp
   140006bf7:	mov    QWORD PTR [rbp+0x4a0],rax
   140006bfe:	mov    r10,QWORD PTR [rbp+0x4f8]
   140006c05:	lea    rax,[rip+0x27d84]        # 0x14002e990
   140006c0c:	mov    r11,rcx
   140006c0f:	lea    rcx,[rsp+0x30]
   140006c14:	movups xmm0,XMMWORD PTR [rax]
   140006c17:	movups xmm1,XMMWORD PTR [rax+0x10]
   140006c1b:	movups XMMWORD PTR [rcx],xmm0
   140006c1e:	movups xmm0,XMMWORD PTR [rax+0x20]
   140006c22:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006c26:	movups xmm1,XMMWORD PTR [rax+0x30]
   140006c2a:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006c2e:	movups xmm0,XMMWORD PTR [rax+0x40]
   140006c32:	movups XMMWORD PTR [rcx+0x30],xmm1
   140006c36:	movups xmm1,XMMWORD PTR [rax+0x50]
   140006c3a:	movups XMMWORD PTR [rcx+0x40],xmm0
   140006c3e:	movups xmm0,XMMWORD PTR [rax+0x60]
   140006c42:	movups XMMWORD PTR [rcx+0x50],xmm1
   140006c46:	movups xmm1,XMMWORD PTR [rax+0x80]
   140006c4d:	movups XMMWORD PTR [rcx+0x60],xmm0
   140006c51:	movups xmm0,XMMWORD PTR [rax+0x70]
   140006c55:	mov    rax,QWORD PTR [rax+0x90]
   140006c5c:	movups XMMWORD PTR [rcx+0x70],xmm0
   140006c60:	movups XMMWORD PTR [rcx+0x80],xmm1
   140006c67:	mov    QWORD PTR [rcx+0x90],rax
   140006c6e:	mov    rcx,QWORD PTR [r11]
   140006c71:	lea    rax,[rip+0x4880]        # 0x14000b4f8
   140006c78:	mov    QWORD PTR [rsp+0x50],rax
   140006c7d:	mov    rax,QWORD PTR [rbp+0x4e0]
   140006c84:	mov    QWORD PTR [rbp-0x80],rdx
   140006c88:	mov    rdx,QWORD PTR [r10]
   140006c8b:	mov    QWORD PTR [rsp+0x60],rax
   140006c90:	movsxd rax,DWORD PTR [rbp+0x4e8]
   140006c97:	mov    QWORD PTR [rsp+0x68],rax
   140006c9c:	mov    rax,QWORD PTR [rbp+0x4f0]
   140006ca3:	mov    QWORD PTR [rsp+0x70],r8
   140006ca8:	mov    QWORD PTR [rsp+0x78],rax
   140006cad:	movzx  eax,BYTE PTR [rbp+0x500]
   140006cb4:	mov    QWORD PTR [rsp+0x58],r9
   140006cb9:	mov    QWORD PTR [rbp-0x78],rax
   140006cbd:	mov    rax,QWORD PTR [r10+0x40]
   140006cc1:	lea    r8,[rsp+0x30]
   140006cc6:	mov    QWORD PTR [rsp+0x28],rax
   140006ccb:	lea    rax,[rbp-0x30]
   140006ccf:	xor    r9d,r9d
   140006cd2:	mov    QWORD PTR [rsp+0x20],rax
   140006cd7:	mov    QWORD PTR [rbp-0x70],0x19930520
   140006cdf:	call   QWORD PTR [rip+0x25453]        # 0x14002c138
   140006ce5:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140006cec:	xor    rcx,rsp
   140006cef:	call   0x14000c380
   140006cf4:	add    rsp,0x5b0
   140006cfb:	pop    rbp
   140006cfc:	ret    
   140006cfd:	int3   
   140006cfe:	int3   
   140006cff:	int3   
   140006d00:	mov    QWORD PTR [rsp+0x10],rbx
   140006d05:	mov    QWORD PTR [rsp+0x18],rsi
   140006d0a:	push   rdi
   140006d0b:	sub    rsp,0x40
   140006d0f:	mov    rbx,r9
   140006d12:	mov    rdi,r8
   140006d15:	mov    rsi,rcx
   140006d18:	mov    QWORD PTR [rsp+0x50],rdx
   140006d1d:	call   0x14000a3ec
   140006d22:	mov    rdx,QWORD PTR [rbx+0x8]
   140006d26:	mov    QWORD PTR [rax+0x128],rdx
   140006d2d:	call   0x14000a3ec
   140006d32:	mov    rdx,QWORD PTR [rsi+0x38]
   140006d36:	mov    QWORD PTR [rax+0x130],rdx
   140006d3d:	call   0x14000a3ec
   140006d42:	mov    rdx,QWORD PTR [rbx+0x38]
   140006d46:	mov    r8d,DWORD PTR [rdx]
   140006d49:	lea    rdx,[rsp+0x50]
   140006d4e:	mov    r9,rbx
   140006d51:	add    r8,QWORD PTR [rax+0x128]
   140006d58:	xor    eax,eax
   140006d5a:	mov    rcx,rsi
   140006d5d:	mov    DWORD PTR [rsp+0x38],eax
   140006d61:	mov    QWORD PTR [rsp+0x30],rax
   140006d66:	mov    DWORD PTR [rsp+0x28],eax
   140006d6a:	mov    QWORD PTR [rsp+0x20],r8
   140006d6f:	mov    r8,rdi
   140006d72:	call   0x14000bddc
   140006d77:	mov    rbx,QWORD PTR [rsp+0x58]
   140006d7c:	mov    rsi,QWORD PTR [rsp+0x60]
   140006d81:	add    rsp,0x40
   140006d85:	pop    rdi
   140006d86:	ret    
   140006d87:	int3   
   140006d88:	jmp    0x140006d90
   140006d8d:	int3   
   140006d8e:	int3   
   140006d8f:	int3   
   140006d90:	mov    QWORD PTR [rsp+0x10],rbx
   140006d95:	mov    QWORD PTR [rsp+0x18],rsi
   140006d9a:	push   rdi
   140006d9b:	sub    rsp,0x40
   140006d9f:	mov    rbx,r9
   140006da2:	mov    rdi,r8
   140006da5:	mov    rsi,rcx
   140006da8:	mov    QWORD PTR [rsp+0x50],rdx
   140006dad:	call   0x14000a3ec
   140006db2:	mov    rdx,QWORD PTR [rbx+0x8]
   140006db6:	mov    QWORD PTR [rax+0x128],rdx
   140006dbd:	call   0x14000a3ec
   140006dc2:	mov    rdx,QWORD PTR [rsi+0x38]
   140006dc6:	mov    QWORD PTR [rax+0x130],rdx
   140006dcd:	call   0x14000a3ec
   140006dd2:	mov    rdx,QWORD PTR [rbx+0x38]
   140006dd6:	mov    r8d,DWORD PTR [rdx]
   140006dd9:	lea    rdx,[rsp+0x50]
   140006dde:	mov    r9,rbx
   140006de1:	add    r8,QWORD PTR [rax+0x128]
   140006de8:	xor    eax,eax
   140006dea:	mov    rcx,rsi
   140006ded:	mov    DWORD PTR [rsp+0x38],eax
   140006df1:	mov    QWORD PTR [rsp+0x30],rax
   140006df6:	mov    DWORD PTR [rsp+0x28],eax
   140006dfa:	mov    QWORD PTR [rsp+0x20],r8
   140006dff:	mov    r8,rdi
   140006e02:	call   0x14000bddc
   140006e07:	mov    rbx,QWORD PTR [rsp+0x58]
   140006e0c:	mov    rsi,QWORD PTR [rsp+0x60]
   140006e11:	add    rsp,0x40
   140006e15:	pop    rdi
   140006e16:	ret    
   140006e17:	int3   
   140006e18:	int3   
   140006e19:	int3   
   140006e1a:	int3   
   140006e1b:	int3   
   140006e1c:	int3   
   140006e1d:	int3   
   140006e1e:	int3   
   140006e1f:	int3   
   140006e20:	int3   
   140006e21:	int3   
   140006e22:	int3   
   140006e23:	int3   
   140006e24:	int3   
   140006e25:	int3   
   140006e26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006e30:	sub    rsp,0x10
   140006e34:	mov    QWORD PTR [rsp],r10
   140006e38:	mov    QWORD PTR [rsp+0x8],r11
   140006e3d:	xor    r11,r11
   140006e40:	lea    r10,[rsp+0x18]
   140006e45:	sub    r10,rax
   140006e48:	cmovb  r10,r11
   140006e4c:	mov    r11,QWORD PTR gs:0x10
   140006e55:	cmp    r10,r11
   140006e58:	jae    0x140006e70
   140006e5a:	and    r10w,0xf000
   140006e60:	lea    r11,[r11-0x1000]
   140006e67:	mov    BYTE PTR [r11],0x0
   140006e6b:	cmp    r10,r11
   140006e6e:	jne    0x140006e60
   140006e70:	mov    r10,QWORD PTR [rsp]
   140006e74:	mov    r11,QWORD PTR [rsp+0x8]
   140006e79:	add    rsp,0x10
   140006e7d:	ret    
   140006e7e:	int3   
   140006e7f:	int3   
   140006e80:	int3   
   140006e81:	int3   
   140006e82:	int3   
   140006e83:	int3   
   140006e84:	int3   
   140006e85:	int3   
   140006e86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006e90:	sub    rdx,rcx
   140006e93:	cmp    r8,0x8
   140006e97:	jb     0x140006ebb
   140006e99:	test   cl,0x7
   140006e9c:	je     0x140006eb2
   140006e9e:	xchg   ax,ax
   140006ea0:	mov    al,BYTE PTR [rcx]
   140006ea2:	cmp    al,BYTE PTR [rdx+rcx*1]
   140006ea5:	jne    0x140006ed3
   140006ea7:	inc    rcx
   140006eaa:	dec    r8
   140006ead:	test   cl,0x7
   140006eb0:	jne    0x140006ea0
   140006eb2:	mov    r9,r8
   140006eb5:	shr    r9,0x3
   140006eb9:	jne    0x140006eda
   140006ebb:	test   r8,r8
   140006ebe:	je     0x140006ecf
   140006ec0:	mov    al,BYTE PTR [rcx]
   140006ec2:	cmp    al,BYTE PTR [rdx+rcx*1]
   140006ec5:	jne    0x140006ed3
   140006ec7:	inc    rcx
   140006eca:	dec    r8
   140006ecd:	jne    0x140006ec0
   140006ecf:	xor    rax,rax
   140006ed2:	ret    
   140006ed3:	sbb    eax,eax
   140006ed5:	sbb    eax,0xffffffff
   140006ed8:	ret    
   140006ed9:	nop
   140006eda:	shr    r9,0x2
   140006ede:	je     0x140006f17
   140006ee0:	mov    rax,QWORD PTR [rcx]
   140006ee3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140006ee7:	jne    0x140006f44
   140006ee9:	mov    rax,QWORD PTR [rcx+0x8]
   140006eed:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140006ef2:	jne    0x140006f40
   140006ef4:	mov    rax,QWORD PTR [rcx+0x10]
   140006ef8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   140006efd:	jne    0x140006f3c
   140006eff:	mov    rax,QWORD PTR [rcx+0x18]
   140006f03:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140006f08:	jne    0x140006f38
   140006f0a:	add    rcx,0x20
   140006f0e:	dec    r9
   140006f11:	jne    0x140006ee0
   140006f13:	and    r8,0x1f
   140006f17:	mov    r9,r8
   140006f1a:	shr    r9,0x3
   140006f1e:	je     0x140006ebb
   140006f20:	mov    rax,QWORD PTR [rcx]
   140006f23:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140006f27:	jne    0x140006f44
   140006f29:	add    rcx,0x8
   140006f2d:	dec    r9
   140006f30:	jne    0x140006f20
   140006f32:	and    r8,0x7
   140006f36:	jmp    0x140006ebb
   140006f38:	add    rcx,0x8
   140006f3c:	add    rcx,0x8
   140006f40:	add    rcx,0x8
   140006f44:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140006f48:	bswap  rax
   140006f4b:	bswap  rcx
   140006f4e:	cmp    rax,rcx
   140006f51:	sbb    eax,eax
   140006f53:	sbb    eax,0xffffffff
   140006f56:	ret    
   140006f57:	int3   
   140006f58:	int3   
   140006f59:	int3   
   140006f5a:	int3   
   140006f5b:	int3   
   140006f5c:	int3   
   140006f5d:	int3   
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	int3   
   140006f61:	int3   
   140006f62:	int3   
   140006f63:	int3   
   140006f64:	int3   
   140006f65:	int3   
   140006f66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006f70:	mov    r11,rcx
   140006f73:	movzx  edx,dl
   140006f76:	cmp    r8,0x10
   140006f7a:	jb     0x1400070dc
   140006f80:	bt     DWORD PTR [rip+0x36d4c],0x1        # 0x14003dcd4
   140006f88:	jae    0x140006f98
   140006f8a:	push   rdi
   140006f8b:	mov    rdi,rcx
   140006f8e:	mov    eax,edx
   140006f90:	mov    rcx,r8
   140006f93:	rep stos BYTE PTR es:[rdi],al
   140006f95:	pop    rdi
   140006f96:	jmp    0x140007005
   140006f98:	movabs r9,0x101010101010101
   140006fa2:	imul   rdx,r9
   140006fa6:	bt     DWORD PTR [rip+0x36d26],0x2        # 0x14003dcd4
   140006fae:	jb     0x140007050
   140006fb4:	cmp    r8,0x40
   140006fb8:	jb     0x140006fd8
   140006fba:	neg    rcx
   140006fbd:	and    ecx,0x7
   140006fc0:	je     0x140006fc8
   140006fc2:	sub    r8,rcx
   140006fc5:	mov    QWORD PTR [r11],rdx
   140006fc8:	add    rcx,r11
   140006fcb:	mov    r9,r8
   140006fce:	and    r8,0x3f
   140006fd2:	shr    r9,0x6
   140006fd6:	jne    0x140007017
   140006fd8:	mov    r9,r8
   140006fdb:	and    r8,0x7
   140006fdf:	shr    r9,0x3
   140006fe3:	je     0x140006ff6
   140006fe5:	data16 data16 xchg ax,ax
   140006fe9:	nop
   140006fea:	mov    QWORD PTR [rcx],rdx
   140006fed:	add    rcx,0x8
   140006ff1:	dec    r9
   140006ff4:	jne    0x140006fea
   140006ff6:	test   r8,r8
   140006ff9:	je     0x140007005
   140006ffb:	mov    BYTE PTR [rcx],dl
   140006ffd:	inc    rcx
   140007000:	dec    r8
   140007003:	jne    0x140006ffb
   140007005:	mov    rax,r11
   140007008:	ret    
   140007009:	nop    DWORD PTR [rax+0x0]
   140007010:	data16 data16 xchg ax,ax
   140007014:	data16 xchg ax,ax
   140007017:	mov    QWORD PTR [rcx],rdx
   14000701a:	mov    QWORD PTR [rcx+0x8],rdx
   14000701e:	mov    QWORD PTR [rcx+0x10],rdx
   140007022:	add    rcx,0x40
   140007026:	mov    QWORD PTR [rcx-0x28],rdx
   14000702a:	mov    QWORD PTR [rcx-0x20],rdx
   14000702e:	dec    r9
   140007031:	mov    QWORD PTR [rcx-0x18],rdx
   140007035:	mov    QWORD PTR [rcx-0x10],rdx
   140007039:	mov    QWORD PTR [rcx-0x8],rdx
   14000703d:	jne    0x140007017
   14000703f:	jmp    0x140006fd8
   140007041:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007050:	movq   xmm0,rdx
   140007055:	punpcklbw xmm0,xmm0
   140007059:	test   cl,0xf
   14000705c:	je     0x140007074
   14000705e:	movups XMMWORD PTR [rcx],xmm0
   140007061:	mov    rax,rcx
   140007064:	and    rax,0xf
   140007068:	add    rcx,0x10
   14000706c:	sub    rcx,rax
   14000706f:	lea    r8,[rax+r8*1-0x10]
   140007074:	mov    r9,r8
   140007077:	shr    r9,0x7
   14000707b:	je     0x1400070af
   14000707d:	jmp    0x140007080
   14000707f:	nop
   140007080:	movaps XMMWORD PTR [rcx],xmm0
   140007083:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140007087:	add    rcx,0x80
   14000708e:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140007092:	movaps XMMWORD PTR [rcx-0x50],xmm0
   140007096:	dec    r9
   140007099:	movaps XMMWORD PTR [rcx-0x40],xmm0
   14000709d:	movaps XMMWORD PTR [rcx-0x30],xmm0
   1400070a1:	movaps XMMWORD PTR [rcx-0x20],xmm0
   1400070a5:	movaps XMMWORD PTR [rcx-0x10],xmm0
   1400070a9:	jne    0x140007080
   1400070ab:	and    r8,0x7f
   1400070af:	mov    r9,r8
   1400070b2:	shr    r9,0x4
   1400070b6:	je     0x1400070cc
   1400070b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400070c0:	movaps XMMWORD PTR [rcx],xmm0
   1400070c3:	add    rcx,0x10
   1400070c7:	dec    r9
   1400070ca:	jne    0x1400070c0
   1400070cc:	and    r8,0xf
   1400070d0:	je     0x1400070d8
   1400070d2:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   1400070d8:	mov    rax,r11
   1400070db:	ret    
   1400070dc:	movabs r9,0x101010101010101
   1400070e6:	imul   rdx,r9
   1400070ea:	lea    r9,[rip+0xffffffffffff8f0f]        # 0x140000000
   1400070f1:	mov    eax,DWORD PTR [r9+r8*4+0x7105]
   1400070f9:	add    r9,rax
   1400070fc:	add    rcx,r8
   1400070ff:	mov    rax,r11
   140007102:	jmp    r9
   140007105:	pop    rsi
   140007106:	jno    0x140007108
   140007108:	add    BYTE PTR [rbx+0x71],bl
   14000710b:	add    BYTE PTR [rax],al
   14000710d:	ins    BYTE PTR es:[rdi],dx
   14000710e:	jno    0x140007110
   140007110:	add    BYTE PTR [rdi+0x71],dl
   140007113:	add    BYTE PTR [rax],al
   140007115:	xor    BYTE PTR [rcx+0x0],0x0
   140007119:	jne    0x14000718c
   14000711b:	add    BYTE PTR [rax],al
   14000711d:	imul   esi,DWORD PTR [rcx+0x0],0x715400
   140007124:	add    BYTE PTR [rbp-0x72ffff8f],dl
   14000712a:	jno    0x14000712c
   14000712c:	add    BYTE PTR [rcx+rsi*2+0x715f0000],al
   140007133:	add    BYTE PTR [rax],al
   140007135:	jl     0x1400071a8
   140007137:	add    BYTE PTR [rax],al
   140007139:	jno    0x1400071ac
   14000713b:	add    BYTE PTR [rax],al
   14000713d:	gs jno 0x140007140
   140007140:	add    BYTE PTR [rax+0x71],dl
   140007143:	add    BYTE PTR [rax],al
   140007145:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007150:	mov    QWORD PTR [rcx-0xf],rdx
   140007154:	mov    DWORD PTR [rcx-0x7],edx
   140007157:	mov    WORD PTR [rcx-0x3],dx
   14000715b:	mov    BYTE PTR [rcx-0x1],dl
   14000715e:	ret    
   14000715f:	mov    QWORD PTR [rcx-0xb],rdx
   140007163:	jmp    0x140007157
   140007165:	mov    QWORD PTR [rcx-0xe],rdx
   140007169:	mov    DWORD PTR [rcx-0x6],edx
   14000716c:	mov    WORD PTR [rcx-0x2],dx
   140007170:	ret    
   140007171:	mov    QWORD PTR [rcx-0xd],rdx
   140007175:	mov    DWORD PTR [rcx-0x5],edx
   140007178:	mov    BYTE PTR [rcx-0x1],dl
   14000717b:	ret    
   14000717c:	mov    QWORD PTR [rcx-0xc],rdx
   140007180:	mov    DWORD PTR [rcx-0x4],edx
   140007183:	ret    
   140007184:	mov    QWORD PTR [rcx-0xa],rdx
   140007188:	mov    WORD PTR [rcx-0x2],dx
   14000718c:	ret    
   14000718d:	mov    QWORD PTR [rcx-0x9],rdx
   140007191:	mov    BYTE PTR [rcx-0x1],dl
   140007194:	ret    
   140007195:	mov    QWORD PTR [rcx-0x8],rdx
   140007199:	ret    
   14000719a:	int3   
   14000719b:	int3   
   14000719c:	lea    rax,[rip+0x2788d]        # 0x14002ea30
   1400071a3:	mov    QWORD PTR [rcx],rax
   1400071a6:	mov    rax,rcx
   1400071a9:	ret    
   1400071aa:	int3   
   1400071ab:	int3   
   1400071ac:	lea    rax,[rip+0x2787d]        # 0x14002ea30
   1400071b3:	mov    QWORD PTR [rcx],rax
   1400071b6:	jmp    0x14000c6a8
   1400071bb:	int3   
   1400071bc:	mov    rax,rcx
   1400071bf:	ret    
   1400071c0:	sub    rsp,0x28
   1400071c4:	mov    rax,rdx
   1400071c7:	lea    rdx,[rcx+0x11]
   1400071cb:	lea    rcx,[rax+0x11]
   1400071cf:	call   0x14000c3b0
   1400071d4:	test   eax,eax
   1400071d6:	sete   al
   1400071d9:	add    rsp,0x28
   1400071dd:	ret    
   1400071de:	int3   
   1400071df:	int3   
   1400071e0:	sub    rsp,0x28
   1400071e4:	mov    rax,rdx
   1400071e7:	lea    rdx,[rcx+0x11]
   1400071eb:	lea    rcx,[rax+0x11]
   1400071ef:	call   0x14000c3b0
   1400071f4:	test   eax,eax
   1400071f6:	setne  al
   1400071f9:	add    rsp,0x28
   1400071fd:	ret    
   1400071fe:	int3   
   1400071ff:	int3   
   140007200:	mov    QWORD PTR [rsp+0x8],rbx
   140007205:	push   rdi
   140007206:	sub    rsp,0x20
   14000720a:	lea    rax,[rip+0x2781f]        # 0x14002ea30
   140007211:	mov    ebx,edx
   140007213:	mov    rdi,rcx
   140007216:	mov    QWORD PTR [rcx],rax
   140007219:	call   0x14000c6a8
   14000721e:	test   bl,0x1
   140007221:	je     0x14000722b
   140007223:	mov    rcx,rdi
   140007226:	call   0x140005778
   14000722b:	mov    rax,rdi
   14000722e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007233:	add    rsp,0x20
   140007237:	pop    rdi
   140007238:	ret    
   140007239:	int3   
   14000723a:	int3   
   14000723b:	int3   
   14000723c:	jmp    0x14000c54c
   140007241:	int3   
   140007242:	int3   
   140007243:	int3   
   140007244:	jmp    0x14000c714
   140007249:	int3   
   14000724a:	int3   
   14000724b:	int3   
   14000724c:	sub    rsp,0x28
   140007250:	mov    rax,rdx
   140007253:	lea    rdx,[rcx+0x11]
   140007257:	lea    rcx,[rax+0x11]
   14000725b:	call   0x14000c3b0
   140007260:	test   eax,eax
   140007262:	setg   al
   140007265:	add    rsp,0x28
   140007269:	ret    
   14000726a:	int3   
   14000726b:	int3   
   14000726c:	jmp    0x14000c418
   140007271:	int3   
   140007272:	int3   
   140007273:	int3   
   140007274:	lea    rax,[rcx+0x10]
   140007278:	ret    
   140007279:	int3   
   14000727a:	int3   
   14000727b:	int3   
   14000727c:	jmp    0x140007294
   140007281:	int3   
   140007282:	int3   
   140007283:	int3   
   140007284:	mov    eax,DWORD PTR [rip+0x369c6]        # 0x14003dc50
   14000728a:	mov    DWORD PTR [rip+0x369c0],ecx        # 0x14003dc50
   140007290:	ret    
   140007291:	int3   
   140007292:	int3   
   140007293:	int3   
   140007294:	lea    rax,[rip+0x6091]        # 0x14000d32c
   14000729b:	lea    rcx,[rip+0x556e]        # 0x14000c810
   1400072a2:	mov    QWORD PTR [rip+0x34f3f],rax        # 0x14003c1e8
   1400072a9:	lea    rax,[rip+0x611c]        # 0x14000d3cc
   1400072b0:	mov    QWORD PTR [rip+0x34f29],rcx        # 0x14003c1e0
   1400072b7:	mov    QWORD PTR [rip+0x34f32],rax        # 0x14003c1f0
   1400072be:	lea    rax,[rip+0x614f]        # 0x14000d414
   1400072c5:	mov    QWORD PTR [rip+0x34f3c],rcx        # 0x14003c208
   1400072cc:	mov    QWORD PTR [rip+0x34f25],rax        # 0x14003c1f8
   1400072d3:	lea    rax,[rip+0x61c2]        # 0x14000d49c
   1400072da:	mov    QWORD PTR [rip+0x34f1f],rax        # 0x14003c200
   1400072e1:	lea    rax,[rip+0x554c]        # 0x14000c834
   1400072e8:	mov    QWORD PTR [rip+0x34f21],rax        # 0x14003c210
   1400072ef:	lea    rax,[rip+0x60de]        # 0x14000d3d4
   1400072f6:	mov    QWORD PTR [rip+0x34f1b],rax        # 0x14003c218
   1400072fd:	lea    rax,[rip+0x6030]        # 0x14000d334
   140007304:	mov    QWORD PTR [rip+0x34f15],rax        # 0x14003c220
   14000730b:	lea    rax,[rip+0x610a]        # 0x14000d41c
   140007312:	mov    QWORD PTR [rip+0x34f0f],rax        # 0x14003c228
   140007319:	ret    
   14000731a:	int3   
   14000731b:	int3   
   14000731c:	sub    rsp,0x28
   140007320:	call   0x14000e27c
   140007325:	add    rsp,0x28
   140007329:	jmp    0x140007330
   14000732e:	int3   
   14000732f:	int3   
   140007330:	mov    QWORD PTR [rsp+0x10],rbx
   140007335:	mov    QWORD PTR [rsp+0x18],rsi
   14000733a:	push   rdi
   14000733b:	sub    rsp,0x30
   14000733f:	call   0x14000e7a8
   140007344:	movzx  esi,ax
   140007347:	mov    ecx,0x2
   14000734c:	call   0x14000e234
   140007351:	mov    eax,0x5a4d
   140007356:	lea    rdi,[rip+0xffffffffffff8ca3]        # 0x140000000
   14000735d:	cmp    WORD PTR [rip+0xffffffffffff8c9c],ax        # 0x140000000
   140007364:	je     0x14000736a
   140007366:	xor    ebx,ebx
   140007368:	jmp    0x14000739b
   14000736a:	movsxd rax,DWORD PTR [rip+0xffffffffffff8ccb]        # 0x14000003c
   140007371:	add    rax,rdi
   140007374:	cmp    DWORD PTR [rax],0x4550
   14000737a:	jne    0x140007366
   14000737c:	mov    ecx,0x20b
   140007381:	cmp    WORD PTR [rax+0x18],cx
   140007385:	jne    0x140007366
   140007387:	xor    ebx,ebx
   140007389:	cmp    DWORD PTR [rax+0x84],0xe
   140007390:	jbe    0x14000739b
   140007392:	cmp    DWORD PTR [rax+0xf8],ebx
   140007398:	setne  bl
   14000739b:	mov    DWORD PTR [rsp+0x40],ebx
   14000739f:	call   0x14000d788
   1400073a4:	test   eax,eax
   1400073a6:	jne    0x1400073ca
   1400073a8:	cmp    DWORD PTR [rip+0x372a9],0x1        # 0x14003e658
   1400073af:	jne    0x1400073b6
   1400073b1:	call   0x14000df50
   1400073b6:	mov    ecx,0x1c
   1400073bb:	call   0x14000dfc4
   1400073c0:	mov    ecx,0xff
   1400073c5:	call   0x14000805c
   1400073ca:	call   0x14000a558
   1400073cf:	test   eax,eax
   1400073d1:	jne    0x1400073f5
   1400073d3:	cmp    DWORD PTR [rip+0x3727e],0x1        # 0x14003e658
   1400073da:	jne    0x1400073e1
   1400073dc:	call   0x14000df50
   1400073e1:	mov    ecx,0x10
   1400073e6:	call   0x14000dfc4
   1400073eb:	mov    ecx,0xff
   1400073f0:	call   0x14000805c
   1400073f5:	call   0x14000e328
   1400073fa:	nop
   1400073fb:	call   0x14000d7b4
   140007400:	test   eax,eax
   140007402:	jns    0x14000740e
   140007404:	mov    ecx,0x1b
   140007409:	call   0x140007508
   14000740e:	call   QWORD PTR [rip+0x24d2c]        # 0x14002c140
   140007414:	mov    QWORD PTR [rip+0x38cf5],rax        # 0x140040110
   14000741b:	call   0x14000e398
   140007420:	mov    QWORD PTR [rip+0x36831],rax        # 0x14003dc58
   140007427:	call   0x14000db60
   14000742c:	test   eax,eax
   14000742e:	jns    0x14000743a
   140007430:	mov    ecx,0x8
   140007435:	call   0x1400081bc
   14000743a:	call   0x14000de1c
   14000743f:	test   eax,eax
   140007441:	jns    0x14000744d
   140007443:	mov    ecx,0x9
   140007448:	call   0x1400081bc
   14000744d:	mov    ecx,0x1
   140007452:	call   0x140008204
   140007457:	test   eax,eax
   140007459:	je     0x140007462
   14000745b:	mov    ecx,eax
   14000745d:	call   0x1400081bc
   140007462:	call   0x14000ed5c
   140007467:	movzx  r9d,si
   14000746b:	mov    r8,rax
   14000746e:	xor    edx,edx
   140007470:	mov    rcx,rdi
   140007473:	call   0x140004ca0
   140007478:	mov    edi,eax
   14000747a:	mov    DWORD PTR [rsp+0x20],eax
   14000747e:	test   ebx,ebx
   140007480:	jne    0x140007489
   140007482:	mov    ecx,eax
   140007484:	call   0x1400085bc
   140007489:	call   0x1400081f4
   14000748e:	jmp    0x1400074a7
   140007490:	mov    edi,eax
   140007492:	cmp    DWORD PTR [rsp+0x40],0x0
   140007497:	jne    0x1400074a1
   140007499:	mov    ecx,eax
   14000749b:	call   0x14000829c
   1400074a0:	int3   
   1400074a1:	call   0x1400081e4
   1400074a6:	nop
   1400074a7:	mov    eax,edi
   1400074a9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400074ae:	mov    rsi,QWORD PTR [rsp+0x50]
   1400074b3:	add    rsp,0x30
   1400074b7:	pop    rdi
   1400074b8:	ret    
   1400074b9:	int3   
   1400074ba:	int3   
   1400074bb:	int3   
   1400074bc:	mov    eax,0x5a4d
   1400074c1:	cmp    WORD PTR [rip+0xffffffffffff8b38],ax        # 0x140000000
   1400074c8:	je     0x1400074cd
   1400074ca:	xor    eax,eax
   1400074cc:	ret    
   1400074cd:	movsxd rcx,DWORD PTR [rip+0xffffffffffff8b68]        # 0x14000003c
   1400074d4:	lea    rax,[rip+0xffffffffffff8b25]        # 0x140000000
   1400074db:	add    rcx,rax
   1400074de:	cmp    DWORD PTR [rcx],0x4550
   1400074e4:	jne    0x1400074ca
   1400074e6:	mov    eax,0x20b
   1400074eb:	cmp    WORD PTR [rcx+0x18],ax
   1400074ef:	jne    0x1400074ca
   1400074f1:	xor    eax,eax
   1400074f3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400074fa:	jbe    0x140007505
   1400074fc:	cmp    DWORD PTR [rcx+0xf8],eax
   140007502:	setne  al
   140007505:	ret    
   140007506:	int3   
   140007507:	int3   
   140007508:	rex push rbx
   14000750a:	sub    rsp,0x20
   14000750e:	cmp    DWORD PTR [rip+0x37143],0x1        # 0x14003e658
   140007515:	mov    ebx,ecx
   140007517:	jne    0x14000751e
   140007519:	call   0x14000df50
   14000751e:	mov    ecx,ebx
   140007520:	call   0x14000dfc4
   140007525:	mov    ecx,0xff
   14000752a:	add    rsp,0x20
   14000752e:	pop    rbx
   14000752f:	jmp    0x14000805c
   140007534:	int3   
   140007535:	int3   
   140007536:	int3   
   140007537:	int3   
   140007538:	int3   
   140007539:	int3   
   14000753a:	int3   
   14000753b:	int3   
   14000753c:	int3   
   14000753d:	int3   
   14000753e:	int3   
   14000753f:	int3   
   140007540:	int3   
   140007541:	int3   
   140007542:	int3   
   140007543:	int3   
   140007544:	int3   
   140007545:	int3   
   140007546:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007550:	mov    rax,rcx
   140007553:	neg    rcx
   140007556:	test   rax,0x7
   14000755c:	je     0x14000756d
   14000755e:	xchg   ax,ax
   140007560:	mov    dl,BYTE PTR [rax]
   140007562:	inc    rax
   140007565:	test   dl,dl
   140007567:	je     0x1400075c8
   140007569:	test   al,0x7
   14000756b:	jne    0x140007560
   14000756d:	movabs r8,0x7efefefefefefeff
   140007577:	movabs r11,0x8101010101010100
   140007581:	mov    rdx,QWORD PTR [rax]
   140007584:	mov    r9,r8
   140007587:	add    rax,0x8
   14000758b:	add    r9,rdx
   14000758e:	not    rdx
   140007591:	xor    rdx,r9
   140007594:	and    rdx,r11
   140007597:	je     0x140007581
   140007599:	mov    rdx,QWORD PTR [rax-0x8]
   14000759d:	test   dl,dl
   14000759f:	je     0x1400075f2
   1400075a1:	test   dh,dh
   1400075a3:	je     0x1400075ec
   1400075a5:	shr    rdx,0x10
   1400075a9:	test   dl,dl
   1400075ab:	je     0x1400075e6
   1400075ad:	test   dh,dh
   1400075af:	je     0x1400075e0
   1400075b1:	shr    rdx,0x10
   1400075b5:	test   dl,dl
   1400075b7:	je     0x1400075da
   1400075b9:	test   dh,dh
   1400075bb:	je     0x1400075d4
   1400075bd:	shr    edx,0x10
   1400075c0:	test   dl,dl
   1400075c2:	je     0x1400075ce
   1400075c4:	test   dh,dh
   1400075c6:	jne    0x140007581
   1400075c8:	lea    rax,[rcx+rax*1-0x1]
   1400075cd:	ret    
   1400075ce:	lea    rax,[rcx+rax*1-0x2]
   1400075d3:	ret    
   1400075d4:	lea    rax,[rcx+rax*1-0x3]
   1400075d9:	ret    
   1400075da:	lea    rax,[rcx+rax*1-0x4]
   1400075df:	ret    
   1400075e0:	lea    rax,[rcx+rax*1-0x5]
   1400075e5:	ret    
   1400075e6:	lea    rax,[rcx+rax*1-0x6]
   1400075eb:	ret    
   1400075ec:	lea    rax,[rcx+rax*1-0x7]
   1400075f1:	ret    
   1400075f2:	lea    rax,[rcx+rax*1-0x8]
   1400075f7:	ret    
   1400075f8:	rex push rbx
   1400075fa:	sub    rsp,0x20
   1400075fe:	mov    rbx,rcx
   140007601:	call   0x14000772c
   140007606:	lea    rax,[rip+0x2749b]        # 0x14002eaa8
   14000760d:	mov    QWORD PTR [rbx],rax
   140007610:	mov    rax,rbx
   140007613:	add    rsp,0x20
   140007617:	pop    rbx
   140007618:	ret    
   140007619:	int3   
   14000761a:	int3   
   14000761b:	int3   
   14000761c:	rex push rbx
   14000761e:	sub    rsp,0x20
   140007622:	mov    rbx,rcx
   140007625:	call   0x1400076b4
   14000762a:	lea    rax,[rip+0x27477]        # 0x14002eaa8
   140007631:	mov    QWORD PTR [rbx],rax
   140007634:	mov    rax,rbx
   140007637:	add    rsp,0x20
   14000763b:	pop    rbx
   14000763c:	ret    
   14000763d:	int3   
   14000763e:	int3   
   14000763f:	int3   
   140007640:	rex push rbx
   140007642:	sub    rsp,0x20
   140007646:	mov    rbx,rcx
   140007649:	call   0x14000772c
   14000764e:	lea    rax,[rip+0x27423]        # 0x14002ea78
   140007655:	mov    QWORD PTR [rbx],rax
   140007658:	mov    rax,rbx
   14000765b:	add    rsp,0x20
   14000765f:	pop    rbx
   140007660:	ret    
   140007661:	int3   
   140007662:	int3   
   140007663:	int3   
   140007664:	mov    QWORD PTR [rsp+0x10],rdx
   140007669:	push   rbx
   14000766a:	sub    rsp,0x20
   14000766e:	lea    rdx,[rsp+0x38]
   140007673:	mov    rbx,rcx
   140007676:	call   0x1400076e0
   14000767b:	lea    rax,[rip+0x273f6]        # 0x14002ea78
   140007682:	mov    QWORD PTR [rbx],rax
   140007685:	mov    rax,rbx
   140007688:	add    rsp,0x20
   14000768c:	pop    rbx
   14000768d:	ret    
   14000768e:	int3   
   14000768f:	int3   
   140007690:	rex push rbx
   140007692:	sub    rsp,0x20
   140007696:	mov    rbx,rcx
   140007699:	call   0x14000772c
   14000769e:	lea    rax,[rip+0x273eb]        # 0x14002ea90
   1400076a5:	mov    QWORD PTR [rbx],rax
   1400076a8:	mov    rax,rbx
   1400076ab:	add    rsp,0x20
   1400076af:	pop    rbx
   1400076b0:	ret    
   1400076b1:	int3   
   1400076b2:	int3   
   1400076b3:	int3   
   1400076b4:	mov    QWORD PTR [rsp+0x10],rdx
   1400076b9:	push   rbx
   1400076ba:	sub    rsp,0x20
   1400076be:	lea    rdx,[rsp+0x38]
   1400076c3:	mov    rbx,rcx
   1400076c6:	call   0x1400076e0
   1400076cb:	lea    rax,[rip+0x273be]        # 0x14002ea90
   1400076d2:	mov    QWORD PTR [rbx],rax
   1400076d5:	mov    rax,rbx
   1400076d8:	add    rsp,0x20
   1400076dc:	pop    rbx
   1400076dd:	ret    
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	rex push rbx
   1400076e2:	sub    rsp,0x20
   1400076e6:	and    QWORD PTR [rcx+0x8],0x0
   1400076eb:	lea    rax,[rip+0x27356]        # 0x14002ea48
   1400076f2:	mov    BYTE PTR [rcx+0x10],0x0
   1400076f6:	mov    QWORD PTR [rcx],rax
   1400076f9:	mov    rdx,QWORD PTR [rdx]
   1400076fc:	mov    rbx,rcx
   1400076ff:	call   0x1400078e4
   140007704:	mov    rax,rbx
   140007707:	add    rsp,0x20
   14000770b:	pop    rbx
   14000770c:	ret    
   14000770d:	int3   
   14000770e:	int3   
   14000770f:	int3   
   140007710:	lea    rax,[rip+0x27331]        # 0x14002ea48
   140007717:	mov    QWORD PTR [rcx],rax
   14000771a:	mov    rax,QWORD PTR [rdx]
   14000771d:	mov    BYTE PTR [rcx+0x10],0x0
   140007721:	mov    QWORD PTR [rcx+0x8],rax
   140007725:	mov    rax,rcx
   140007728:	ret    
   140007729:	int3   
   14000772a:	int3   
   14000772b:	int3   
   14000772c:	rex push rbx
   14000772e:	sub    rsp,0x20
   140007732:	and    QWORD PTR [rcx+0x8],0x0
   140007737:	lea    rax,[rip+0x2730a]        # 0x14002ea48
   14000773e:	mov    rbx,rcx
   140007741:	mov    QWORD PTR [rcx],rax
   140007744:	mov    BYTE PTR [rcx+0x10],0x0
   140007748:	call   0x1400077b0
   14000774d:	mov    rax,rbx
   140007750:	add    rsp,0x20
   140007754:	pop    rbx
   140007755:	ret    
   140007756:	int3   
   140007757:	int3   
   140007758:	and    QWORD PTR [rcx+0x8],0x0
   14000775d:	lea    rax,[rip+0x272e4]        # 0x14002ea48
   140007764:	mov    BYTE PTR [rcx+0x10],0x0
   140007768:	mov    QWORD PTR [rcx],rax
   14000776b:	mov    rax,rcx
   14000776e:	ret    
   14000776f:	int3   
   140007770:	lea    rax,[rip+0x272d1]        # 0x14002ea48
   140007777:	mov    QWORD PTR [rcx],rax
   14000777a:	jmp    0x140007940
   14000777f:	int3   
   140007780:	lea    rax,[rip+0x272c1]        # 0x14002ea48
   140007787:	mov    QWORD PTR [rcx],rax
   14000778a:	jmp    0x140007940
   14000778f:	int3   
   140007790:	lea    rax,[rip+0x272b1]        # 0x14002ea48
   140007797:	mov    QWORD PTR [rcx],rax
   14000779a:	jmp    0x140007940
   14000779f:	int3   
   1400077a0:	lea    rax,[rip+0x272a1]        # 0x14002ea48
   1400077a7:	mov    QWORD PTR [rcx],rax
   1400077aa:	jmp    0x140007940
   1400077af:	int3   
   1400077b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400077b5:	push   rdi
   1400077b6:	sub    rsp,0x20
   1400077ba:	mov    rdi,rdx
   1400077bd:	mov    rbx,rcx
   1400077c0:	cmp    rcx,rdx
   1400077c3:	je     0x1400077e6
   1400077c5:	call   0x140007940
   1400077ca:	cmp    BYTE PTR [rdi+0x10],0x0
   1400077ce:	je     0x1400077de
   1400077d0:	mov    rdx,QWORD PTR [rdi+0x8]
   1400077d4:	mov    rcx,rbx
   1400077d7:	call   0x1400078e4
   1400077dc:	jmp    0x1400077e6
   1400077de:	mov    rax,QWORD PTR [rdi+0x8]
   1400077e2:	mov    QWORD PTR [rbx+0x8],rax
   1400077e6:	mov    rax,rbx
   1400077e9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400077ee:	add    rsp,0x20
   1400077f2:	pop    rdi
   1400077f3:	ret    
   1400077f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400077f9:	push   rdi
   1400077fa:	sub    rsp,0x20
   1400077fe:	lea    rax,[rip+0x27243]        # 0x14002ea48
   140007805:	mov    ebx,edx
   140007807:	mov    rdi,rcx
   14000780a:	mov    QWORD PTR [rcx],rax
   14000780d:	call   0x140007940
   140007812:	test   bl,0x1
   140007815:	je     0x14000781f
   140007817:	mov    rcx,rdi
   14000781a:	call   0x140005778
   14000781f:	mov    rax,rdi
   140007822:	mov    rbx,QWORD PTR [rsp+0x30]
   140007827:	add    rsp,0x20
   14000782b:	pop    rdi
   14000782c:	ret    
   14000782d:	int3   
   14000782e:	int3   
   14000782f:	int3   
   140007830:	mov    QWORD PTR [rsp+0x8],rbx
   140007835:	push   rdi
   140007836:	sub    rsp,0x20
   14000783a:	lea    rax,[rip+0x27207]        # 0x14002ea48
   140007841:	mov    ebx,edx
   140007843:	mov    rdi,rcx
   140007846:	mov    QWORD PTR [rcx],rax
   140007849:	call   0x140007940
   14000784e:	test   bl,0x1
   140007851:	je     0x14000785b
   140007853:	mov    rcx,rdi
   140007856:	call   0x140005778
   14000785b:	mov    rax,rdi
   14000785e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007863:	add    rsp,0x20
   140007867:	pop    rdi
   140007868:	ret    
   140007869:	int3   
   14000786a:	int3   
   14000786b:	int3   
   14000786c:	mov    QWORD PTR [rsp+0x8],rbx
   140007871:	push   rdi
   140007872:	sub    rsp,0x20
   140007876:	lea    rax,[rip+0x271cb]        # 0x14002ea48
   14000787d:	mov    ebx,edx
   14000787f:	mov    rdi,rcx
   140007882:	mov    QWORD PTR [rcx],rax
   140007885:	call   0x140007940
   14000788a:	test   bl,0x1
   14000788d:	je     0x140007897
   14000788f:	mov    rcx,rdi
   140007892:	call   0x140005778
   140007897:	mov    rax,rdi
   14000789a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000789f:	add    rsp,0x20
   1400078a3:	pop    rdi
   1400078a4:	ret    
   1400078a5:	int3   
   1400078a6:	int3   
   1400078a7:	int3   
   1400078a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400078ad:	push   rdi
   1400078ae:	sub    rsp,0x20
   1400078b2:	lea    rax,[rip+0x2718f]        # 0x14002ea48
   1400078b9:	mov    ebx,edx
   1400078bb:	mov    rdi,rcx
   1400078be:	mov    QWORD PTR [rcx],rax
   1400078c1:	call   0x140007940
   1400078c6:	test   bl,0x1
   1400078c9:	je     0x1400078d3
   1400078cb:	mov    rcx,rdi
   1400078ce:	call   0x140005778
   1400078d3:	mov    rax,rdi
   1400078d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400078db:	add    rsp,0x20
   1400078df:	pop    rdi
   1400078e0:	ret    
   1400078e1:	int3   
   1400078e2:	int3   
   1400078e3:	int3   
   1400078e4:	test   rdx,rdx
   1400078e7:	je     0x14000793d
   1400078e9:	mov    QWORD PTR [rsp+0x8],rbx
   1400078ee:	mov    QWORD PTR [rsp+0x10],rsi
   1400078f3:	push   rdi
   1400078f4:	sub    rsp,0x20
   1400078f8:	mov    rsi,rcx
   1400078fb:	mov    rcx,rdx
   1400078fe:	mov    rbx,rdx
   140007901:	call   0x140007550
   140007906:	mov    rdi,rax
   140007909:	lea    rcx,[rax+0x1]
   14000790d:	call   0x140007c64
   140007912:	mov    QWORD PTR [rsi+0x8],rax
   140007916:	test   rax,rax
   140007919:	je     0x14000792e
   14000791b:	lea    rdx,[rdi+0x1]
   14000791f:	mov    r8,rbx
   140007922:	mov    rcx,rax
   140007925:	call   0x14000edd8
   14000792a:	mov    BYTE PTR [rsi+0x10],0x1
   14000792e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007933:	mov    rsi,QWORD PTR [rsp+0x38]
   140007938:	add    rsp,0x20
   14000793c:	pop    rdi
   14000793d:	ret    
   14000793e:	int3   
   14000793f:	int3   
   140007940:	rex push rbx
   140007942:	sub    rsp,0x20
   140007946:	cmp    BYTE PTR [rcx+0x10],0x0
   14000794a:	mov    rbx,rcx
   14000794d:	je     0x140007958
   14000794f:	mov    rcx,QWORD PTR [rcx+0x8]
   140007953:	call   0x140007dc0
   140007958:	and    QWORD PTR [rbx+0x8],0x0
   14000795d:	mov    BYTE PTR [rbx+0x10],0x0
   140007961:	add    rsp,0x20
   140007965:	pop    rbx
   140007966:	ret    
   140007967:	int3   
   140007968:	cmp    QWORD PTR [rcx+0x8],0x0
   14000796d:	lea    rax,[rip+0x270e4]        # 0x14002ea58
   140007974:	cmovne rax,QWORD PTR [rcx+0x8]
   140007979:	ret    
   14000797a:	int3   
   14000797b:	int3   
   14000797c:	mov    eax,DWORD PTR [rip+0x346be]        # 0x14003c040
   140007982:	mov    r8d,edx
   140007985:	and    ecx,edx
   140007987:	not    r8d
   14000798a:	and    r8d,eax
   14000798d:	or     r8d,ecx
   140007990:	mov    DWORD PTR [rip+0x346a9],r8d        # 0x14003c040
   140007997:	ret    
   140007998:	sub    rsp,0x28
   14000799c:	call   0x14000ee50
   1400079a1:	test   rax,rax
   1400079a4:	je     0x1400079b0
   1400079a6:	mov    ecx,0x16
   1400079ab:	call   0x14000ef28
   1400079b0:	test   BYTE PTR [rip+0x34689],0x2        # 0x14003c040
   1400079b7:	je     0x1400079e2
   1400079b9:	mov    ecx,0x17
   1400079be:	call   0x14002a60c
   1400079c3:	test   eax,eax
   1400079c5:	je     0x1400079ce
   1400079c7:	mov    ecx,0x7
   1400079cc:	int    0x29
   1400079ce:	mov    r8d,0x1
   1400079d4:	mov    edx,0x40000015
   1400079d9:	lea    ecx,[r8+0x2]
   1400079dd:	call   0x140008be4
   1400079e2:	mov    ecx,0x3
   1400079e7:	call   0x14000829c
   1400079ec:	int3   
   1400079ed:	int3   
   1400079ee:	int3   
   1400079ef:	int3   
   1400079f0:	rex push rbx
   1400079f2:	push   rbp
   1400079f3:	push   rsi
   1400079f4:	push   rdi
   1400079f5:	push   r12
   1400079f7:	push   r14
   1400079f9:	push   r15
   1400079fb:	sub    rsp,0xd0
   140007a02:	mov    rax,QWORD PTR [rip+0x347c7]        # 0x14003c1d0
   140007a09:	xor    rax,rsp
   140007a0c:	mov    QWORD PTR [rsp+0xc0],rax
   140007a14:	mov    rbx,QWORD PTR [rsp+0x130]
   140007a1c:	mov    esi,r9d
   140007a1f:	mov    rbp,r8
   140007a22:	mov    r12,rcx
   140007a25:	cmp    edx,0x1
   140007a28:	jne    0x140007b2c
   140007a2e:	lea    r9,[rsp+0x40]
   140007a33:	mov    r8d,esi
   140007a36:	mov    rdx,rbp
   140007a39:	lea    rdi,[rsp+0x40]
   140007a3e:	xor    r14d,r14d
   140007a41:	mov    DWORD PTR [rsp+0x20],0x80
   140007a49:	call   0x14000f66c
   140007a4e:	mov    r15d,eax
   140007a51:	test   eax,eax
   140007a53:	jne    0x140007ab4
   140007a55:	call   QWORD PTR [rip+0x246f5]        # 0x14002c150
   140007a5b:	cmp    eax,0x7a
   140007a5e:	jne    0x140007adc
   140007a60:	and    DWORD PTR [rsp+0x20],r14d
   140007a65:	xor    r9d,r9d
   140007a68:	mov    r8d,esi
   140007a6b:	mov    rdx,rbp
   140007a6e:	mov    rcx,r12
   140007a71:	call   0x14000f66c
   140007a76:	movsxd r15,eax
   140007a79:	test   eax,eax
   140007a7b:	je     0x140007adc
   140007a7d:	lea    edx,[r14+0x1]
   140007a81:	mov    rcx,r15
   140007a84:	call   0x140008604
   140007a89:	mov    rdi,rax
   140007a8c:	test   rax,rax
   140007a8f:	je     0x140007adc
   140007a91:	mov    r9,rax
   140007a94:	mov    r8d,esi
   140007a97:	mov    rdx,rbp
   140007a9a:	mov    rcx,r12
   140007a9d:	mov    r14d,0x1
   140007aa3:	mov    DWORD PTR [rsp+0x20],r15d
   140007aa8:	call   0x14000f66c
   140007aad:	mov    r15d,eax
   140007ab0:	test   eax,eax
   140007ab2:	je     0x140007ad4
   140007ab4:	movsxd rsi,r15d
   140007ab7:	mov    edx,0x1
   140007abc:	mov    rcx,rsi
   140007abf:	call   0x140008604
   140007ac4:	mov    rcx,rax
   140007ac7:	mov    QWORD PTR [rbx],rax
   140007aca:	test   rax,rax
   140007acd:	jne    0x140007b01
   140007acf:	test   r14d,r14d
   140007ad2:	je     0x140007adc
   140007ad4:	mov    rcx,rdi
   140007ad7:	call   0x140007dc0
   140007adc:	or     eax,0xffffffff
   140007adf:	mov    rcx,QWORD PTR [rsp+0xc0]
   140007ae7:	xor    rcx,rsp
   140007aea:	call   0x14000c380
   140007aef:	add    rsp,0xd0
   140007af6:	pop    r15
   140007af8:	pop    r14
   140007afa:	pop    r12
   140007afc:	pop    rdi
   140007afd:	pop    rsi
   140007afe:	pop    rbp
   140007aff:	pop    rbx
   140007b00:	ret    
   140007b01:	lea    eax,[r15-0x1]
   140007b05:	mov    r8,rdi
   140007b08:	mov    rdx,rsi
   140007b0b:	movsxd r9,eax
   140007b0e:	call   0x14000f424
   140007b13:	test   eax,eax
   140007b15:	jne    0x140007bbf
   140007b1b:	test   r14d,r14d
   140007b1e:	je     0x140007b28
   140007b20:	mov    rcx,rdi
   140007b23:	call   0x140007dc0
   140007b28:	xor    eax,eax
   140007b2a:	jmp    0x140007adf
   140007b2c:	mov    r14d,0x2
   140007b32:	cmp    edx,r14d
   140007b35:	jne    0x140007b8a
   140007b37:	and    QWORD PTR [rbx],0x0
   140007b3b:	xor    r9d,r9d
   140007b3e:	xor    r8d,r8d
   140007b41:	mov    edx,esi
   140007b43:	mov    rcx,rbp
   140007b46:	call   0x14000fa04
   140007b4b:	movsxd rdi,eax
   140007b4e:	test   eax,eax
   140007b50:	je     0x140007b79
   140007b52:	mov    rcx,rdi
   140007b55:	mov    edx,r14d
   140007b58:	call   0x140008604
   140007b5d:	mov    QWORD PTR [rbx],rax
   140007b60:	test   rax,rax
   140007b63:	je     0x140007b79
   140007b65:	mov    r9d,edi
   140007b68:	mov    r8,rax
   140007b6b:	mov    edx,esi
   140007b6d:	mov    rcx,rbp
   140007b70:	call   0x14000fa04
   140007b75:	test   eax,eax
   140007b77:	jne    0x140007b28
   140007b79:	mov    rcx,QWORD PTR [rbx]
   140007b7c:	call   0x140007dc0
   140007b81:	and    QWORD PTR [rbx],0x0
   140007b85:	jmp    0x140007adc
   140007b8a:	test   edx,edx
   140007b8c:	jne    0x140007adc
   140007b92:	and    DWORD PTR [rsp+0x30],edx
   140007b96:	bts    esi,0x1d
   140007b9a:	lea    r8,[rsp+0x30]
   140007b9f:	mov    edx,esi
   140007ba1:	mov    r9d,r14d
   140007ba4:	mov    rcx,rbp
   140007ba7:	call   0x14000fa04
   140007bac:	test   eax,eax
   140007bae:	je     0x140007adc
   140007bb4:	mov    al,BYTE PTR [rsp+0x30]
   140007bb8:	mov    BYTE PTR [rbx],al
   140007bba:	jmp    0x140007b28
   140007bbf:	and    QWORD PTR [rsp+0x20],0x0
   140007bc5:	xor    r9d,r9d
   140007bc8:	xor    r8d,r8d
   140007bcb:	xor    edx,edx
   140007bcd:	xor    ecx,ecx
   140007bcf:	call   0x140008da8
   140007bd4:	int3   
   140007bd5:	int3   
   140007bd6:	int3   
   140007bd7:	int3   
   140007bd8:	mov    QWORD PTR [rip+0x36089],rcx        # 0x14003dc68
   140007bdf:	ret    
   140007be0:	test   ecx,ecx
   140007be2:	jne    0x140007be5
   140007be4:	ret    
   140007be5:	push   rbx
   140007be6:	sub    rsp,0x30
   140007bea:	mov    rax,QWORD PTR [rsp+0x68]
   140007bef:	mov    r10,r9
   140007bf2:	mov    r9d,DWORD PTR [rsp+0x60]
   140007bf7:	mov    r11,r8
   140007bfa:	mov    rbx,rdx
   140007bfd:	mov    r8,r10
   140007c00:	mov    rdx,r11
   140007c03:	mov    rcx,rbx
   140007c06:	mov    QWORD PTR [rsp+0x20],rax
   140007c0b:	call   0x140008da8
   140007c10:	int3   
   140007c11:	int3   
   140007c12:	int3   
   140007c13:	int3   
   140007c14:	rex push rbx
   140007c16:	sub    rsp,0x20
   140007c1a:	mov    rbx,rcx
   140007c1d:	mov    rcx,QWORD PTR [rip+0x360dc]        # 0x14003dd00
   140007c24:	test   rcx,rcx
   140007c27:	jne    0x140007c49
   140007c29:	call   0x14000df50
   140007c2e:	mov    ecx,0x1e
   140007c33:	call   0x14000dfc4
   140007c38:	mov    ecx,0xff
   140007c3d:	call   0x14000805c
   140007c42:	mov    rcx,QWORD PTR [rip+0x360b7]        # 0x14003dd00
   140007c49:	test   rbx,rbx
   140007c4c:	mov    r8d,0x1
   140007c52:	cmovne r8,rbx
   140007c56:	xor    edx,edx
   140007c58:	add    rsp,0x20
   140007c5c:	pop    rbx
   140007c5d:	rex.W jmp QWORD PTR [rip+0x244f4]        # 0x14002c158
   140007c64:	mov    QWORD PTR [rsp+0x8],rbx
   140007c69:	mov    QWORD PTR [rsp+0x10],rsi
   140007c6e:	push   rdi
   140007c6f:	sub    rsp,0x20
   140007c73:	mov    rbx,rcx
   140007c76:	cmp    rcx,0xffffffffffffffe0
   140007c7a:	ja     0x140007cf8
   140007c7c:	mov    edi,0x1
   140007c81:	test   rcx,rcx
   140007c84:	cmovne rdi,rcx
   140007c88:	mov    rcx,QWORD PTR [rip+0x36071]        # 0x14003dd00
   140007c8f:	test   rcx,rcx
   140007c92:	jne    0x140007cb4
   140007c94:	call   0x14000df50
   140007c99:	mov    ecx,0x1e
   140007c9e:	call   0x14000dfc4
   140007ca3:	mov    ecx,0xff
   140007ca8:	call   0x14000805c
   140007cad:	mov    rcx,QWORD PTR [rip+0x3604c]        # 0x14003dd00
   140007cb4:	mov    r8,rdi
   140007cb7:	xor    edx,edx
   140007cb9:	call   QWORD PTR [rip+0x24499]        # 0x14002c158
   140007cbf:	mov    rsi,rax
   140007cc2:	test   rax,rax
   140007cc5:	jne    0x140007cf3
   140007cc7:	cmp    DWORD PTR [rip+0x369c3],eax        # 0x14003e690
   140007ccd:	je     0x140007cdd
   140007ccf:	mov    rcx,rbx
   140007cd2:	call   0x140007d84
   140007cd7:	test   eax,eax
   140007cd9:	je     0x140007ce8
   140007cdb:	jmp    0x140007c88
   140007cdd:	call   0x140009cb4
   140007ce2:	mov    DWORD PTR [rax],0xc
   140007ce8:	call   0x140009cb4
   140007ced:	mov    DWORD PTR [rax],0xc
   140007cf3:	mov    rax,rsi
   140007cf6:	jmp    0x140007d0a
   140007cf8:	call   0x140007d84
   140007cfd:	call   0x140009cb4
   140007d02:	mov    DWORD PTR [rax],0xc
   140007d08:	xor    eax,eax
   140007d0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140007d0f:	mov    rsi,QWORD PTR [rsp+0x38]
   140007d14:	add    rsp,0x20
   140007d18:	pop    rdi
   140007d19:	ret    
   140007d1a:	int3   
   140007d1b:	int3   
   140007d1c:	mov    rcx,QWORD PTR [rip+0x35f4d]        # 0x14003dc70
   140007d23:	rex.W jmp QWORD PTR [rip+0x243ee]        # 0x14002c118
   140007d2a:	int3   
   140007d2b:	int3   
   140007d2c:	xor    ecx,ecx
   140007d2e:	jmp    0x140007d34
   140007d33:	int3   
   140007d34:	mov    QWORD PTR [rsp+0x8],rbx
   140007d39:	push   rdi
   140007d3a:	sub    rsp,0x20
   140007d3e:	mov    rdi,rcx
   140007d41:	mov    ecx,0x4
   140007d46:	call   0x14000fc2c
   140007d4b:	mov    rcx,QWORD PTR [rip+0x35f1e]        # 0x14003dc70
   140007d52:	call   QWORD PTR [rip+0x243c0]        # 0x14002c118
   140007d58:	mov    rcx,rdi
   140007d5b:	mov    rbx,rax
   140007d5e:	call   QWORD PTR [rip+0x243ac]        # 0x14002c110
   140007d64:	mov    ecx,0x4
   140007d69:	mov    QWORD PTR [rip+0x35f00],rax        # 0x14003dc70
   140007d70:	call   0x14000fe48
   140007d75:	mov    rax,rbx
   140007d78:	mov    rbx,QWORD PTR [rsp+0x30]
   140007d7d:	add    rsp,0x20
   140007d81:	pop    rdi
   140007d82:	ret    
   140007d83:	int3   
   140007d84:	rex push rbx
   140007d86:	sub    rsp,0x20
   140007d8a:	mov    rbx,rcx
   140007d8d:	mov    rcx,QWORD PTR [rip+0x35edc]        # 0x14003dc70
   140007d94:	call   QWORD PTR [rip+0x2437e]        # 0x14002c118
   140007d9a:	test   rax,rax
   140007d9d:	je     0x140007daf
   140007d9f:	mov    rcx,rbx
   140007da2:	call   rax
   140007da4:	test   eax,eax
   140007da6:	je     0x140007daf
   140007da8:	mov    eax,0x1
   140007dad:	jmp    0x140007db1
   140007daf:	xor    eax,eax
   140007db1:	add    rsp,0x20
   140007db5:	pop    rbx
   140007db6:	ret    
   140007db7:	int3   
   140007db8:	mov    QWORD PTR [rip+0x35eb1],rcx        # 0x14003dc70
   140007dbf:	ret    
   140007dc0:	test   rcx,rcx
   140007dc3:	je     0x140007dfc
   140007dc5:	push   rbx
   140007dc6:	sub    rsp,0x20
   140007dca:	mov    r8,rcx
   140007dcd:	mov    rcx,QWORD PTR [rip+0x35f2c]        # 0x14003dd00
   140007dd4:	xor    edx,edx
   140007dd6:	call   QWORD PTR [rip+0x24384]        # 0x14002c160
   140007ddc:	test   eax,eax
   140007dde:	jne    0x140007df7
   140007de0:	call   0x140009cb4
   140007de5:	mov    rbx,rax
   140007de8:	call   QWORD PTR [rip+0x24362]        # 0x14002c150
   140007dee:	mov    ecx,eax
   140007df0:	call   0x140009d4c
   140007df5:	mov    DWORD PTR [rbx],eax
   140007df7:	add    rsp,0x20
   140007dfb:	pop    rbx
   140007dfc:	ret    
   140007dfd:	int3   
   140007dfe:	int3   
   140007dff:	int3   
   140007e00:	mov    rax,rsp
   140007e03:	mov    QWORD PTR [rax+0x8],rbx
   140007e07:	mov    QWORD PTR [rax+0x10],rbp
   140007e0b:	mov    QWORD PTR [rax+0x18],rsi
   140007e0f:	mov    QWORD PTR [rax+0x20],rdi
   140007e13:	push   r15
   140007e15:	sub    rsp,0x30
   140007e19:	xor    edi,edi
   140007e1b:	mov    rbx,rdx
   140007e1e:	mov    rsi,rcx
   140007e21:	test   rcx,rcx
   140007e24:	jne    0x140007e3e
   140007e26:	call   0x140009cb4
   140007e2b:	mov    ebx,0x16
   140007e30:	mov    DWORD PTR [rax],ebx
   140007e32:	call   0x140008d58
   140007e37:	mov    eax,ebx
   140007e39:	jmp    0x140007ee5
   140007e3e:	test   rdx,rdx
   140007e41:	je     0x140007e26
   140007e43:	call   0x14000e828
   140007e48:	mov    r15d,0x1
   140007e4e:	test   eax,eax
   140007e50:	jne    0x140007e5e
   140007e52:	call   QWORD PTR [rip+0x24328]        # 0x14002c180
   140007e58:	test   eax,eax
   140007e5a:	cmove  edi,r15d
   140007e5e:	and    DWORD PTR [rsp+0x28],0x0
   140007e63:	and    QWORD PTR [rbx],0x0
   140007e67:	and    QWORD PTR [rsp+0x20],0x0
   140007e6d:	or     r9d,0xffffffff
   140007e71:	mov    r8,rsi
   140007e74:	xor    edx,edx
   140007e76:	mov    ecx,edi
   140007e78:	call   QWORD PTR [rip+0x2430a]        # 0x14002c188
   140007e7e:	movsxd rbp,eax
   140007e81:	test   eax,eax
   140007e83:	jne    0x140007e96
   140007e85:	call   QWORD PTR [rip+0x242c5]        # 0x14002c150
   140007e8b:	mov    ecx,eax
   140007e8d:	call   0x140009c64
   140007e92:	xor    eax,eax
   140007e94:	jmp    0x140007ee5
   140007e96:	mov    rcx,rbp
   140007e99:	add    rcx,rcx
   140007e9c:	call   0x140008684
   140007ea1:	mov    QWORD PTR [rbx],rax
   140007ea4:	test   rax,rax
   140007ea7:	je     0x140007e92
   140007ea9:	or     r9d,0xffffffff
   140007ead:	mov    r8,rsi
   140007eb0:	xor    edx,edx
   140007eb2:	mov    ecx,edi
   140007eb4:	mov    DWORD PTR [rsp+0x28],ebp
   140007eb8:	mov    QWORD PTR [rsp+0x20],rax
   140007ebd:	call   QWORD PTR [rip+0x242c5]        # 0x14002c188
   140007ec3:	test   eax,eax
   140007ec5:	jne    0x140007ee2
   140007ec7:	call   QWORD PTR [rip+0x24283]        # 0x14002c150
   140007ecd:	mov    ecx,eax
   140007ecf:	call   0x140009c64
   140007ed4:	mov    rcx,QWORD PTR [rbx]
   140007ed7:	call   0x140007dc0
   140007edc:	and    QWORD PTR [rbx],0x0
   140007ee0:	jmp    0x140007e92
   140007ee2:	mov    eax,r15d
   140007ee5:	mov    rbx,QWORD PTR [rsp+0x40]
   140007eea:	mov    rbp,QWORD PTR [rsp+0x48]
   140007eef:	mov    rsi,QWORD PTR [rsp+0x50]
   140007ef4:	mov    rdi,QWORD PTR [rsp+0x58]
   140007ef9:	add    rsp,0x30
   140007efd:	pop    r15
   140007eff:	ret    
   140007f00:	mov    rax,rsp
   140007f03:	mov    QWORD PTR [rax+0x8],rbx
   140007f07:	mov    QWORD PTR [rax+0x10],rbp
   140007f0b:	mov    QWORD PTR [rax+0x18],rsi
   140007f0f:	mov    QWORD PTR [rax+0x20],rdi
   140007f13:	push   r15
   140007f15:	sub    rsp,0x40
   140007f19:	xor    edi,edi
   140007f1b:	mov    rbx,rdx
   140007f1e:	mov    rsi,rcx
   140007f21:	test   rcx,rcx
   140007f24:	jne    0x140007f3e
   140007f26:	call   0x140009cb4
   140007f2b:	mov    ebx,0x16
   140007f30:	mov    DWORD PTR [rax],ebx
   140007f32:	call   0x140008d58
   140007f37:	mov    eax,ebx
   140007f39:	jmp    0x140007ffa
   140007f3e:	test   rdx,rdx
   140007f41:	je     0x140007f26
   140007f43:	call   0x14000e828
   140007f48:	mov    r15d,0x1
   140007f4e:	test   eax,eax
   140007f50:	jne    0x140007f5e
   140007f52:	call   QWORD PTR [rip+0x24228]        # 0x14002c180
   140007f58:	test   eax,eax
   140007f5a:	cmove  edi,r15d
   140007f5e:	and    QWORD PTR [rsp+0x38],0x0
   140007f64:	and    QWORD PTR [rsp+0x30],0x0
   140007f6a:	and    DWORD PTR [rsp+0x28],0x0
   140007f6f:	and    QWORD PTR [rsp+0x20],0x0
   140007f75:	and    QWORD PTR [rbx],0x0
   140007f79:	or     r9d,0xffffffff
   140007f7d:	mov    r8,rsi
   140007f80:	xor    edx,edx
   140007f82:	mov    ecx,edi
   140007f84:	call   QWORD PTR [rip+0x24206]        # 0x14002c190
   140007f8a:	movsxd rbp,eax
   140007f8d:	test   eax,eax
   140007f8f:	jne    0x140007fa2
   140007f91:	call   QWORD PTR [rip+0x241b9]        # 0x14002c150
   140007f97:	mov    ecx,eax
   140007f99:	call   0x140009c64
   140007f9e:	xor    eax,eax
   140007fa0:	jmp    0x140007ffa
   140007fa2:	mov    rcx,rbp
   140007fa5:	call   0x140008684
   140007faa:	mov    QWORD PTR [rbx],rax
   140007fad:	test   rax,rax
   140007fb0:	je     0x140007f9e
   140007fb2:	and    QWORD PTR [rsp+0x38],0x0
   140007fb8:	and    QWORD PTR [rsp+0x30],0x0
   140007fbe:	or     r9d,0xffffffff
   140007fc2:	mov    r8,rsi
   140007fc5:	xor    edx,edx
   140007fc7:	mov    ecx,edi
   140007fc9:	mov    DWORD PTR [rsp+0x28],ebp
   140007fcd:	mov    QWORD PTR [rsp+0x20],rax
   140007fd2:	call   QWORD PTR [rip+0x241b8]        # 0x14002c190
   140007fd8:	test   eax,eax
   140007fda:	jne    0x140007ff7
   140007fdc:	call   QWORD PTR [rip+0x2416e]        # 0x14002c150
   140007fe2:	mov    ecx,eax
   140007fe4:	call   0x140009c64
   140007fe9:	mov    rcx,QWORD PTR [rbx]
   140007fec:	call   0x140007dc0
   140007ff1:	and    QWORD PTR [rbx],0x0
   140007ff5:	jmp    0x140007f9e
   140007ff7:	mov    eax,r15d
   140007ffa:	mov    rbx,QWORD PTR [rsp+0x50]
   140007fff:	mov    rbp,QWORD PTR [rsp+0x58]
   140008004:	mov    rsi,QWORD PTR [rsp+0x60]
   140008009:	mov    rdi,QWORD PTR [rsp+0x68]
   14000800e:	add    rsp,0x40
   140008012:	pop    r15
   140008014:	ret    
   140008015:	int3   
   140008016:	int3   
   140008017:	int3   
   140008018:	rex push rbx
   14000801a:	sub    rsp,0x20
   14000801e:	mov    ebx,ecx
   140008020:	lea    r8,[rsp+0x38]
   140008025:	lea    rdx,[rip+0x26a8c]        # 0x14002eab8
   14000802c:	xor    ecx,ecx
   14000802e:	call   QWORD PTR [rip+0x2413c]        # 0x14002c170
   140008034:	test   eax,eax
   140008036:	je     0x140008053
   140008038:	mov    rcx,QWORD PTR [rsp+0x38]
   14000803d:	lea    rdx,[rip+0x26a8c]        # 0x14002ead0
   140008044:	call   QWORD PTR [rip+0x2412e]        # 0x14002c178
   14000804a:	test   rax,rax
   14000804d:	je     0x140008053
   14000804f:	mov    ecx,ebx
   140008051:	call   rax
   140008053:	add    rsp,0x20
   140008057:	pop    rbx
   140008058:	ret    
   140008059:	int3   
   14000805a:	int3   
   14000805b:	int3   
   14000805c:	rex push rbx
   14000805e:	sub    rsp,0x20
   140008062:	mov    ebx,ecx
   140008064:	call   0x140008018
   140008069:	mov    ecx,ebx
   14000806b:	call   QWORD PTR [rip+0x240f7]        # 0x14002c168
   140008071:	int3   
   140008072:	int3   
   140008073:	int3   
   140008074:	mov    QWORD PTR [rsp+0x8],rbx
   140008079:	push   rdi
   14000807a:	sub    rsp,0x20
   14000807e:	mov    rcx,QWORD PTR [rip+0x3807b]        # 0x140040100
   140008085:	call   QWORD PTR [rip+0x2408d]        # 0x14002c118
   14000808b:	mov    rbx,QWORD PTR [rip+0x35c06]        # 0x14003dc98
   140008092:	mov    rdi,rax
   140008095:	test   rbx,rbx
   140008098:	je     0x1400080b4
   14000809a:	mov    rcx,QWORD PTR [rbx]
   14000809d:	test   rcx,rcx
   1400080a0:	je     0x1400080ad
   1400080a2:	call   0x140007dc0
   1400080a7:	add    rbx,0x8
   1400080ab:	jne    0x14000809a
   1400080ad:	mov    rbx,QWORD PTR [rip+0x35be4]        # 0x14003dc98
   1400080b4:	mov    rcx,rbx
   1400080b7:	call   0x140007dc0
   1400080bc:	mov    rbx,QWORD PTR [rip+0x35bcd]        # 0x14003dc90
   1400080c3:	and    QWORD PTR [rip+0x35bcd],0x0        # 0x14003dc98
   1400080cb:	test   rbx,rbx
   1400080ce:	je     0x1400080ea
   1400080d0:	mov    rcx,QWORD PTR [rbx]
   1400080d3:	test   rcx,rcx
   1400080d6:	je     0x1400080e3
   1400080d8:	call   0x140007dc0
   1400080dd:	add    rbx,0x8
   1400080e1:	jne    0x1400080d0
   1400080e3:	mov    rbx,QWORD PTR [rip+0x35ba6]        # 0x14003dc90
   1400080ea:	mov    rcx,rbx
   1400080ed:	call   0x140007dc0
   1400080f2:	mov    rcx,QWORD PTR [rip+0x35b8f]        # 0x14003dc88
   1400080f9:	and    QWORD PTR [rip+0x35b8f],0x0        # 0x14003dc90
   140008101:	call   0x140007dc0
   140008106:	mov    rcx,QWORD PTR [rip+0x35b73]        # 0x14003dc80
   14000810d:	call   0x140007dc0
   140008112:	and    QWORD PTR [rip+0x35b6e],0x0        # 0x14003dc88
   14000811a:	and    QWORD PTR [rip+0x35b5e],0x0        # 0x14003dc80
   140008122:	or     rbx,0xffffffffffffffff
   140008126:	cmp    rdi,rbx
   140008129:	je     0x14000813d
   14000812b:	cmp    QWORD PTR [rip+0x37fcd],0x0        # 0x140040100
   140008133:	je     0x14000813d
   140008135:	mov    rcx,rdi
   140008138:	call   0x140007dc0
   14000813d:	mov    rcx,rbx
   140008140:	call   QWORD PTR [rip+0x23fca]        # 0x14002c110
   140008146:	mov    rcx,QWORD PTR [rip+0x367b3]        # 0x14003e900
   14000814d:	mov    QWORD PTR [rip+0x37fac],rax        # 0x140040100
   140008154:	test   rcx,rcx
   140008157:	je     0x140008166
   140008159:	call   0x140007dc0
   14000815e:	and    QWORD PTR [rip+0x3679a],0x0        # 0x14003e900
   140008166:	mov    rcx,QWORD PTR [rip+0x3679b]        # 0x14003e908
   14000816d:	test   rcx,rcx
   140008170:	je     0x14000817f
   140008172:	call   0x140007dc0
   140008177:	and    QWORD PTR [rip+0x36789],0x0        # 0x14003e908
   14000817f:	mov    rax,QWORD PTR [rip+0x3487a]        # 0x14003ca00
   140008186:	mov    ecx,ebx
   140008188:	lock xadd DWORD PTR [rax],ecx
   14000818c:	add    ecx,ebx
   14000818e:	jne    0x1400081af
   140008190:	mov    rcx,QWORD PTR [rip+0x34869]        # 0x14003ca00
   140008197:	lea    rbx,[rip+0x34542]        # 0x14003c6e0
   14000819e:	cmp    rcx,rbx
   1400081a1:	je     0x1400081af
   1400081a3:	call   0x140007dc0
   1400081a8:	mov    QWORD PTR [rip+0x34851],rbx        # 0x14003ca00
   1400081af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400081b4:	add    rsp,0x20
   1400081b8:	pop    rdi
   1400081b9:	ret    
   1400081ba:	int3   
   1400081bb:	int3   
   1400081bc:	rex push rbx
   1400081be:	sub    rsp,0x20
   1400081c2:	mov    ebx,ecx
   1400081c4:	call   0x14000df50
   1400081c9:	mov    ecx,ebx
   1400081cb:	call   0x14000dfc4
   1400081d0:	xor    r8d,r8d
   1400081d3:	mov    ecx,0xff
   1400081d8:	lea    edx,[r8+0x1]
   1400081dc:	call   0x140008424
   1400081e1:	int3   
   1400081e2:	int3   
   1400081e3:	int3   
   1400081e4:	mov    edx,0x1
   1400081e9:	xor    ecx,ecx
   1400081eb:	mov    r8d,edx
   1400081ee:	jmp    0x140008424
   1400081f3:	int3   
   1400081f4:	xor    edx,edx
   1400081f6:	xor    ecx,ecx
   1400081f8:	lea    r8d,[rdx+0x1]
   1400081fc:	jmp    0x140008424
   140008201:	int3   
   140008202:	int3   
   140008203:	int3   
   140008204:	rex push rbx
   140008206:	sub    rsp,0x20
   14000820a:	cmp    QWORD PTR [rip+0x26826],0x0        # 0x14002ea38
   140008212:	mov    ebx,ecx
   140008214:	je     0x14000822e
   140008216:	lea    rcx,[rip+0x2681b]        # 0x14002ea38
   14000821d:	call   0x14000feb0
   140008222:	test   eax,eax
   140008224:	je     0x14000822e
   140008226:	mov    ecx,ebx
   140008228:	call   QWORD PTR [rip+0x2680a]        # 0x14002ea38
   14000822e:	call   0x14000d4e4
   140008233:	lea    rdx,[rip+0x241ae]        # 0x14002c3e8
   14000823a:	lea    rcx,[rip+0x24177]        # 0x14002c3b8
   140008241:	call   0x1400083d0
   140008246:	test   eax,eax
   140008248:	jne    0x140008294
   14000824a:	lea    rcx,[rip+0x610f]        # 0x14000e360
   140008251:	call   0x1400059c4
   140008256:	lea    rdx,[rip+0x24153]        # 0x14002c3b0
   14000825d:	lea    rcx,[rip+0x2412c]        # 0x14002c390
   140008264:	call   0x140008370
   140008269:	cmp    QWORD PTR [rip+0x37e7f],0x0        # 0x1400400f0
   140008271:	je     0x140008292
   140008273:	lea    rcx,[rip+0x37e76]        # 0x1400400f0
   14000827a:	call   0x14000feb0
   14000827f:	test   eax,eax
   140008281:	je     0x140008292
   140008283:	xor    r8d,r8d
   140008286:	xor    ecx,ecx
   140008288:	lea    edx,[r8+0x2]
   14000828c:	call   QWORD PTR [rip+0x37e5e]        # 0x1400400f0
   140008292:	xor    eax,eax
   140008294:	add    rsp,0x20
   140008298:	pop    rbx
   140008299:	ret    
   14000829a:	int3   
   14000829b:	int3   
   14000829c:	xor    r8d,r8d
   14000829f:	lea    edx,[r8+0x1]
   1400082a3:	jmp    0x140008424
   1400082a8:	xor    r8d,r8d
   1400082ab:	xor    edx,edx
   1400082ad:	xor    ecx,ecx
   1400082af:	jmp    0x140008424
   1400082b4:	sub    rsp,0x28
   1400082b8:	test   rcx,rcx
   1400082bb:	jne    0x1400082d4
   1400082bd:	call   0x140009cb4
   1400082c2:	mov    DWORD PTR [rax],0x16
   1400082c8:	call   0x140008d58
   1400082cd:	mov    eax,0x16
   1400082d2:	jmp    0x1400082e5
   1400082d4:	mov    rax,QWORD PTR [rip+0x359c5]        # 0x14003dca0
   1400082db:	test   rax,rax
   1400082de:	je     0x1400082bd
   1400082e0:	mov    QWORD PTR [rcx],rax
   1400082e3:	xor    eax,eax
   1400082e5:	add    rsp,0x28
   1400082e9:	ret    
   1400082ea:	int3   
   1400082eb:	int3   
   1400082ec:	sub    rsp,0x28
   1400082f0:	test   rcx,rcx
   1400082f3:	jne    0x14000830c
   1400082f5:	call   0x140009cb4
   1400082fa:	mov    DWORD PTR [rax],0x16
   140008300:	call   0x140008d58
   140008305:	mov    eax,0x16
   14000830a:	jmp    0x14000831d
   14000830c:	mov    rax,QWORD PTR [rip+0x35995]        # 0x14003dca8
   140008313:	test   rax,rax
   140008316:	je     0x1400082f5
   140008318:	mov    QWORD PTR [rcx],rax
   14000831b:	xor    eax,eax
   14000831d:	add    rsp,0x28
   140008321:	ret    
   140008322:	int3   
   140008323:	int3   
   140008324:	rex push rbx
   140008326:	sub    rsp,0x20
   14000832a:	xor    ecx,ecx
   14000832c:	call   QWORD PTR [rip+0x23dde]        # 0x14002c110
   140008332:	mov    rcx,rax
   140008335:	mov    rbx,rax
   140008338:	call   0x140007db8
   14000833d:	mov    rcx,rbx
   140008340:	call   0x140008ce8
   140008345:	mov    rcx,rbx
   140008348:	call   0x140007bd8
   14000834d:	mov    rcx,rbx
   140008350:	call   0x14000ee74
   140008355:	mov    rcx,rbx
   140008358:	call   0x14000c2c0
   14000835d:	mov    rcx,rbx
   140008360:	call   0x14000ff30
   140008365:	add    rsp,0x20
   140008369:	pop    rbx
   14000836a:	jmp    0x14000e874
   14000836f:	int3   
   140008370:	mov    QWORD PTR [rsp+0x8],rbx
   140008375:	mov    QWORD PTR [rsp+0x10],rbp
   14000837a:	mov    QWORD PTR [rsp+0x18],rsi
   14000837f:	push   rdi
   140008380:	sub    rsp,0x20
   140008384:	xor    ebp,ebp
   140008386:	mov    rbx,rdx
   140008389:	mov    rdi,rcx
   14000838c:	sub    rbx,rcx
   14000838f:	mov    esi,ebp
   140008391:	add    rbx,0x7
   140008395:	shr    rbx,0x3
   140008399:	cmp    rcx,rdx
   14000839c:	cmova  rbx,rbp
   1400083a0:	test   rbx,rbx
   1400083a3:	je     0x1400083bb
   1400083a5:	mov    rax,QWORD PTR [rdi]
   1400083a8:	test   rax,rax
   1400083ab:	je     0x1400083af
   1400083ad:	call   rax
   1400083af:	inc    rsi
   1400083b2:	add    rdi,0x8
   1400083b6:	cmp    rsi,rbx
   1400083b9:	jb     0x1400083a5
   1400083bb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400083c0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400083c5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400083ca:	add    rsp,0x20
   1400083ce:	pop    rdi
   1400083cf:	ret    
   1400083d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400083d5:	push   rdi
   1400083d6:	sub    rsp,0x20
   1400083da:	xor    eax,eax
   1400083dc:	mov    rdi,rdx
   1400083df:	mov    rbx,rcx
   1400083e2:	cmp    rcx,rdx
   1400083e5:	jae    0x1400083fe
   1400083e7:	test   eax,eax
   1400083e9:	jne    0x1400083fe
   1400083eb:	mov    rcx,QWORD PTR [rbx]
   1400083ee:	test   rcx,rcx
   1400083f1:	je     0x1400083f5
   1400083f3:	call   rcx
   1400083f5:	add    rbx,0x8
   1400083f9:	cmp    rbx,rdi
   1400083fc:	jb     0x1400083e7
   1400083fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140008403:	add    rsp,0x20
   140008407:	pop    rdi
   140008408:	ret    
   140008409:	int3   
   14000840a:	int3   
   14000840b:	int3   
   14000840c:	mov    ecx,0x8
   140008411:	jmp    0x14000fc2c
   140008416:	int3   
   140008417:	int3   
   140008418:	mov    ecx,0x8
   14000841d:	jmp    0x14000fe48
   140008422:	int3   
   140008423:	int3   
   140008424:	mov    QWORD PTR [rsp+0x8],rbx
   140008429:	mov    QWORD PTR [rsp+0x10],rsi
   14000842e:	mov    DWORD PTR [rsp+0x18],r8d
   140008433:	push   rdi
   140008434:	push   r12
   140008436:	push   r13
   140008438:	push   r14
   14000843a:	push   r15
   14000843c:	sub    rsp,0x40
   140008440:	mov    r14d,r8d
   140008443:	mov    ebx,edx
   140008445:	mov    r13d,ecx
   140008448:	mov    ecx,0x8
   14000844d:	call   0x14000fc2c
   140008452:	nop
   140008453:	cmp    DWORD PTR [rip+0x3581e],0x1        # 0x14003dc78
   14000845a:	je     0x140008567
   140008460:	mov    DWORD PTR [rip+0x3584e],0x1        # 0x14003dcb8
   14000846a:	mov    BYTE PTR [rip+0x35843],r14b        # 0x14003dcb4
   140008471:	test   ebx,ebx
   140008473:	jne    0x140008553
   140008479:	mov    rcx,QWORD PTR [rip+0x37c80]        # 0x140040100
   140008480:	call   QWORD PTR [rip+0x23c92]        # 0x14002c118
   140008486:	mov    rsi,rax
   140008489:	mov    QWORD PTR [rsp+0x30],rax
   14000848e:	test   rax,rax
   140008491:	je     0x140008540
   140008497:	mov    rcx,QWORD PTR [rip+0x37c5a]        # 0x1400400f8
   14000849e:	call   QWORD PTR [rip+0x23c74]        # 0x14002c118
   1400084a4:	mov    rdi,rax
   1400084a7:	mov    QWORD PTR [rsp+0x20],rax
   1400084ac:	mov    r12,rsi
   1400084af:	mov    QWORD PTR [rsp+0x28],rsi
   1400084b4:	mov    r15,rax
   1400084b7:	mov    QWORD PTR [rsp+0x38],rax
   1400084bc:	sub    rdi,0x8
   1400084c0:	mov    QWORD PTR [rsp+0x20],rdi
   1400084c5:	cmp    rdi,rsi
   1400084c8:	jb     0x140008540
   1400084ca:	xor    ecx,ecx
   1400084cc:	call   QWORD PTR [rip+0x23c3e]        # 0x14002c110
   1400084d2:	cmp    QWORD PTR [rdi],rax
   1400084d5:	jne    0x1400084d9
   1400084d7:	jmp    0x1400084bc
   1400084d9:	cmp    rdi,rsi
   1400084dc:	jb     0x140008540
   1400084de:	mov    rcx,QWORD PTR [rdi]
   1400084e1:	call   QWORD PTR [rip+0x23c31]        # 0x14002c118
   1400084e7:	mov    rbx,rax
   1400084ea:	xor    ecx,ecx
   1400084ec:	call   QWORD PTR [rip+0x23c1e]        # 0x14002c110
   1400084f2:	mov    QWORD PTR [rdi],rax
   1400084f5:	call   rbx
   1400084f7:	mov    rcx,QWORD PTR [rip+0x37c02]        # 0x140040100
   1400084fe:	call   QWORD PTR [rip+0x23c14]        # 0x14002c118
   140008504:	mov    rbx,rax
   140008507:	mov    rcx,QWORD PTR [rip+0x37bea]        # 0x1400400f8
   14000850e:	call   QWORD PTR [rip+0x23c04]        # 0x14002c118
   140008514:	cmp    r12,rbx
   140008517:	jne    0x14000851e
   140008519:	cmp    r15,rax
   14000851c:	je     0x1400084d7
   14000851e:	mov    r12,rbx
   140008521:	mov    QWORD PTR [rsp+0x28],rbx
   140008526:	mov    rsi,rbx
   140008529:	mov    QWORD PTR [rsp+0x30],rbx
   14000852e:	mov    r15,rax
   140008531:	mov    QWORD PTR [rsp+0x38],rax
   140008536:	mov    rdi,rax
   140008539:	mov    QWORD PTR [rsp+0x20],rax
   14000853e:	jmp    0x1400084d7
   140008540:	lea    rdx,[rip+0x23ec9]        # 0x14002c410
   140008547:	lea    rcx,[rip+0x23ea2]        # 0x14002c3f0
   14000854e:	call   0x140008370
   140008553:	lea    rdx,[rip+0x23ec6]        # 0x14002c420
   14000855a:	lea    rcx,[rip+0x23eb7]        # 0x14002c418
   140008561:	call   0x140008370
   140008566:	nop
   140008567:	test   r14d,r14d
   14000856a:	je     0x14000857b
   14000856c:	mov    ecx,0x8
   140008571:	call   0x14000fe48
   140008576:	test   r14d,r14d
   140008579:	jne    0x1400085a1
   14000857b:	mov    DWORD PTR [rip+0x356f3],0x1        # 0x14003dc78
   140008585:	mov    ecx,0x8
   14000858a:	call   0x14000fe48
   14000858f:	mov    ecx,r13d
   140008592:	call   0x140008018
   140008597:	mov    ecx,r13d
   14000859a:	call   QWORD PTR [rip+0x23bc8]        # 0x14002c168
   1400085a0:	int3   
   1400085a1:	mov    rbx,QWORD PTR [rsp+0x70]
   1400085a6:	mov    rsi,QWORD PTR [rsp+0x78]
   1400085ab:	add    rsp,0x40
   1400085af:	pop    r15
   1400085b1:	pop    r14
   1400085b3:	pop    r13
   1400085b5:	pop    r12
   1400085b7:	pop    rdi
   1400085b8:	ret    
   1400085b9:	int3   
   1400085ba:	int3   
   1400085bb:	int3   
   1400085bc:	xor    r8d,r8d
   1400085bf:	xor    edx,edx
   1400085c1:	jmp    0x140008424
   1400085c6:	int3   
   1400085c7:	int3   
   1400085c8:	sub    rsp,0x28
   1400085cc:	test   rcx,rcx
   1400085cf:	jne    0x1400085ea
   1400085d1:	call   0x140009cb4
   1400085d6:	mov    DWORD PTR [rax],0x16
   1400085dc:	call   0x140008d58
   1400085e1:	or     rax,0xffffffffffffffff
   1400085e5:	add    rsp,0x28
   1400085e9:	ret    
   1400085ea:	mov    r8,rcx
   1400085ed:	mov    rcx,QWORD PTR [rip+0x3570c]        # 0x14003dd00
   1400085f4:	xor    edx,edx
   1400085f6:	add    rsp,0x28
   1400085fa:	rex.W jmp QWORD PTR [rip+0x23b97]        # 0x14002c198
   140008601:	int3   
   140008602:	int3   
   140008603:	int3   
   140008604:	mov    rax,rsp
   140008607:	mov    QWORD PTR [rax+0x8],rbx
   14000860b:	mov    QWORD PTR [rax+0x10],rbp
   14000860f:	mov    QWORD PTR [rax+0x18],rsi
   140008613:	mov    QWORD PTR [rax+0x20],rdi
   140008617:	push   r14
   140008619:	sub    rsp,0x20
   14000861d:	xor    ebx,ebx
   14000861f:	mov    rsi,rdx
   140008622:	mov    rbp,rcx
   140008625:	or     r14d,0xffffffff
   140008629:	xor    r8d,r8d
   14000862c:	mov    rdx,rsi
   14000862f:	mov    rcx,rbp
   140008632:	call   0x140010c1c
   140008637:	mov    rdi,rax
   14000863a:	test   rax,rax
   14000863d:	jne    0x140008665
   14000863f:	cmp    DWORD PTR [rip+0x3568b],eax        # 0x14003dcd0
   140008645:	jbe    0x140008665
   140008647:	mov    ecx,ebx
   140008649:	call   0x14000ecf8
   14000864e:	lea    ecx,[rbx+0x3e8]
   140008654:	cmp    ecx,DWORD PTR [rip+0x35676]        # 0x14003dcd0
   14000865a:	mov    ebx,ecx
   14000865c:	cmova  ebx,r14d
   140008660:	cmp    ebx,r14d
   140008663:	jne    0x140008629
   140008665:	mov    rbx,QWORD PTR [rsp+0x30]
   14000866a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000866f:	mov    rsi,QWORD PTR [rsp+0x40]
   140008674:	mov    rax,rdi
   140008677:	mov    rdi,QWORD PTR [rsp+0x48]
   14000867c:	add    rsp,0x20
   140008680:	pop    r14
   140008682:	ret    
   140008683:	int3   
   140008684:	mov    rax,rsp
   140008687:	mov    QWORD PTR [rax+0x8],rbx
   14000868b:	mov    QWORD PTR [rax+0x10],rbp
   14000868f:	mov    QWORD PTR [rax+0x18],rsi
   140008693:	mov    QWORD PTR [rax+0x20],rdi
   140008697:	push   r14
   140008699:	sub    rsp,0x20
   14000869d:	mov    esi,DWORD PTR [rip+0x3562d]        # 0x14003dcd0
   1400086a3:	xor    ebx,ebx
   1400086a5:	mov    rbp,rcx
   1400086a8:	or     r14d,0xffffffff
   1400086ac:	mov    rcx,rbp
   1400086af:	call   0x140007c64
   1400086b4:	mov    rdi,rax
   1400086b7:	test   rax,rax
   1400086ba:	jne    0x1400086e0
   1400086bc:	test   esi,esi
   1400086be:	je     0x1400086e0
   1400086c0:	mov    ecx,ebx
   1400086c2:	call   0x14000ecf8
   1400086c7:	mov    esi,DWORD PTR [rip+0x35603]        # 0x14003dcd0
   1400086cd:	lea    ecx,[rbx+0x3e8]
   1400086d3:	cmp    ecx,esi
   1400086d5:	mov    ebx,ecx
   1400086d7:	cmova  ebx,r14d
   1400086db:	cmp    ebx,r14d
   1400086de:	jne    0x1400086ac
   1400086e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086e5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400086ea:	mov    rsi,QWORD PTR [rsp+0x40]
   1400086ef:	mov    rax,rdi
   1400086f2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400086f7:	add    rsp,0x20
   1400086fb:	pop    r14
   1400086fd:	ret    
   1400086fe:	int3   
   1400086ff:	int3   
   140008700:	mov    rax,rsp
   140008703:	mov    QWORD PTR [rax+0x8],rbx
   140008707:	mov    QWORD PTR [rax+0x10],rbp
   14000870b:	mov    QWORD PTR [rax+0x18],rsi
   14000870f:	mov    QWORD PTR [rax+0x20],rdi
   140008713:	push   r14
   140008715:	sub    rsp,0x20
   140008719:	xor    ebx,ebx
   14000871b:	mov    rsi,rdx
   14000871e:	mov    rbp,rcx
   140008721:	or     r14d,0xffffffff
   140008725:	mov    rdx,rsi
   140008728:	mov    rcx,rbp
   14000872b:	call   0x140010ac0
   140008730:	mov    rdi,rax
   140008733:	test   rax,rax
   140008736:	jne    0x140008763
   140008738:	test   rsi,rsi
   14000873b:	je     0x140008763
   14000873d:	cmp    DWORD PTR [rip+0x3558d],eax        # 0x14003dcd0
   140008743:	jbe    0x140008763
   140008745:	mov    ecx,ebx
   140008747:	call   0x14000ecf8
   14000874c:	lea    ecx,[rbx+0x3e8]
   140008752:	cmp    ecx,DWORD PTR [rip+0x35578]        # 0x14003dcd0
   140008758:	mov    ebx,ecx
   14000875a:	cmova  ebx,r14d
   14000875e:	cmp    ebx,r14d
   140008761:	jne    0x140008725
   140008763:	mov    rbx,QWORD PTR [rsp+0x30]
   140008768:	mov    rbp,QWORD PTR [rsp+0x38]
   14000876d:	mov    rsi,QWORD PTR [rsp+0x40]
   140008772:	mov    rax,rdi
   140008775:	mov    rdi,QWORD PTR [rsp+0x48]
   14000877a:	add    rsp,0x20
   14000877e:	pop    r14
   140008780:	ret    
   140008781:	int3   
   140008782:	int3   
   140008783:	int3   
   140008784:	mov    QWORD PTR [rsp+0x8],rbx
   140008789:	mov    QWORD PTR [rsp+0x10],rbp
   14000878e:	mov    QWORD PTR [rsp+0x18],rsi
   140008793:	push   rdi
   140008794:	push   r14
   140008796:	push   r15
   140008798:	sub    rsp,0x20
   14000879c:	xor    ebx,ebx
   14000879e:	mov    rsi,r8
   1400087a1:	mov    rbp,rdx
   1400087a4:	or     r15d,0xffffffff
   1400087a8:	mov    r14,rcx
   1400087ab:	mov    r8,rsi
   1400087ae:	mov    rdx,rbp
   1400087b1:	mov    rcx,r14
   1400087b4:	call   0x140010b94
   1400087b9:	mov    rdi,rax
   1400087bc:	test   rax,rax
   1400087bf:	jne    0x1400087ec
   1400087c1:	test   rsi,rsi
   1400087c4:	je     0x1400087ec
   1400087c6:	cmp    DWORD PTR [rip+0x35504],eax        # 0x14003dcd0
   1400087cc:	jbe    0x1400087ec
   1400087ce:	mov    ecx,ebx
   1400087d0:	call   0x14000ecf8
   1400087d5:	lea    ecx,[rbx+0x3e8]
   1400087db:	cmp    ecx,DWORD PTR [rip+0x354ef]        # 0x14003dcd0
   1400087e1:	mov    ebx,ecx
   1400087e3:	cmova  ebx,r15d
   1400087e7:	cmp    ebx,r15d
   1400087ea:	jne    0x1400087ab
   1400087ec:	mov    rbx,QWORD PTR [rsp+0x40]
   1400087f1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400087f6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400087fb:	mov    rax,rdi
   1400087fe:	add    rsp,0x20
   140008802:	pop    r15
   140008804:	pop    r14
   140008806:	pop    rdi
   140008807:	ret    
   140008808:	mov    eax,DWORD PTR [rip+0x354c2]        # 0x14003dcd0
   14000880e:	mov    DWORD PTR [rip+0x354bc],ecx        # 0x14003dcd0
   140008814:	ret    
   140008815:	int3   
   140008816:	int3   
   140008817:	int3   
   140008818:	rex push rbx
   14000881a:	sub    rsp,0x20
   14000881e:	mov    ebx,ecx
   140008820:	call   0x14000ecf8
   140008825:	or     eax,0xffffffff
   140008828:	add    ebx,0x3e8
   14000882e:	cmp    ebx,DWORD PTR [rip+0x3549c]        # 0x14003dcd0
   140008834:	cmova  ebx,eax
   140008837:	mov    eax,ebx
   140008839:	add    rsp,0x20
   14000883d:	pop    rbx
   14000883e:	ret    
   14000883f:	int3   
   140008840:	mov    rax,rsp
   140008843:	mov    QWORD PTR [rax+0x8],rbx
   140008847:	mov    QWORD PTR [rax+0x10],rbp
   14000884b:	mov    QWORD PTR [rax+0x18],rsi
   14000884f:	push   rdi
   140008850:	push   r12
   140008852:	push   r13
   140008854:	push   r14
   140008856:	push   r15
   140008858:	sub    rsp,0x40
   14000885c:	mov    r12,QWORD PTR [r9+0x8]
   140008860:	mov    r15,QWORD PTR [r9]
   140008863:	mov    rbx,QWORD PTR [r9+0x38]
   140008867:	sub    r15,r12
   14000886a:	test   BYTE PTR [rcx+0x4],0x66
   14000886e:	mov    r14,r9
   140008871:	mov    r13,rdx
   140008874:	mov    rbp,rcx
   140008877:	jne    0x14000895b
   14000887d:	mov    esi,DWORD PTR [r9+0x48]
   140008881:	mov    QWORD PTR [rax-0x38],rcx
   140008885:	mov    QWORD PTR [rax-0x30],r8
   140008889:	cmp    esi,DWORD PTR [rbx]
   14000888b:	jae    0x1400089fe
   140008891:	mov    edi,esi
   140008893:	add    rdi,rdi
   140008896:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   14000889a:	cmp    r15,rax
   14000889d:	jb     0x14000894d
   1400088a3:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   1400088a7:	cmp    r15,rax
   1400088aa:	jae    0x14000894d
   1400088b0:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   1400088b5:	je     0x14000894d
   1400088bb:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   1400088c0:	je     0x1400088d9
   1400088c2:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   1400088c6:	lea    rcx,[rsp+0x30]
   1400088cb:	mov    rdx,r13
   1400088ce:	add    rax,r12
   1400088d1:	call   rax
   1400088d3:	test   eax,eax
   1400088d5:	js     0x140008954
   1400088d7:	jle    0x14000894d
   1400088d9:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   1400088e0:	jne    0x14000890a
   1400088e2:	cmp    QWORD PTR [rip+0x261f6],0x0        # 0x14002eae0
   1400088ea:	je     0x14000890a
   1400088ec:	lea    rcx,[rip+0x261ed]        # 0x14002eae0
   1400088f3:	call   0x14000feb0
   1400088f8:	test   eax,eax
   1400088fa:	je     0x14000890a
   1400088fc:	mov    edx,0x1
   140008901:	mov    rcx,rbp
   140008904:	call   QWORD PTR [rip+0x261d6]        # 0x14002eae0
   14000890a:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   14000890e:	mov    r8d,0x1
   140008914:	mov    rdx,r13
   140008917:	add    rcx,r12
   14000891a:	call   0x140010d00
   14000891f:	mov    rax,QWORD PTR [r14+0x40]
   140008923:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   140008927:	mov    r9d,DWORD PTR [rbp+0x0]
   14000892b:	mov    QWORD PTR [rsp+0x28],rax
   140008930:	mov    rax,QWORD PTR [r14+0x28]
   140008934:	add    rdx,r12
   140008937:	mov    r8,rbp
   14000893a:	mov    rcx,r13
   14000893d:	mov    QWORD PTR [rsp+0x20],rax
   140008942:	call   QWORD PTR [rip+0x237f0]        # 0x14002c138
   140008948:	call   0x140010d30
   14000894d:	inc    esi
   14000894f:	jmp    0x140008889
   140008954:	xor    eax,eax
   140008956:	jmp    0x140008a03
   14000895b:	mov    rsi,QWORD PTR [r9+0x20]
   14000895f:	mov    edi,DWORD PTR [r9+0x48]
   140008963:	sub    rsi,r12
   140008966:	jmp    0x1400089f4
   14000896b:	mov    ecx,edi
   14000896d:	add    rcx,rcx
   140008970:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   140008974:	cmp    r15,rax
   140008977:	jb     0x1400089f2
   140008979:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   14000897d:	cmp    r15,rax
   140008980:	jae    0x1400089f2
   140008982:	test   BYTE PTR [rbp+0x4],0x20
   140008986:	je     0x1400089cc
   140008988:	xor    r9d,r9d
   14000898b:	test   edx,edx
   14000898d:	je     0x1400089c7
   14000898f:	mov    r8d,r9d
   140008992:	add    r8,r8
   140008995:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   14000899a:	cmp    rsi,rax
   14000899d:	jb     0x1400089bf
   14000899f:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   1400089a4:	cmp    rsi,rax
   1400089a7:	jae    0x1400089bf
   1400089a9:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   1400089ad:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   1400089b2:	jne    0x1400089bf
   1400089b4:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   1400089b8:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   1400089bd:	je     0x1400089c7
   1400089bf:	inc    r9d
   1400089c2:	cmp    r9d,edx
   1400089c5:	jb     0x14000898f
   1400089c7:	cmp    r9d,edx
   1400089ca:	jne    0x1400089fe
   1400089cc:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   1400089d0:	test   eax,eax
   1400089d2:	je     0x1400089db
   1400089d4:	cmp    rsi,rax
   1400089d7:	je     0x1400089fe
   1400089d9:	jmp    0x1400089f2
   1400089db:	lea    eax,[rdi+0x1]
   1400089de:	mov    rdx,r13
   1400089e1:	mov    DWORD PTR [r14+0x48],eax
   1400089e5:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   1400089ea:	mov    cl,0x1
   1400089ec:	add    r8,r12
   1400089ef:	call   r8
   1400089f2:	inc    edi
   1400089f4:	mov    edx,DWORD PTR [rbx]
   1400089f6:	cmp    edi,edx
   1400089f8:	jb     0x14000896b
   1400089fe:	mov    eax,0x1
   140008a03:	lea    r11,[rsp+0x40]
   140008a08:	mov    rbx,QWORD PTR [r11+0x30]
   140008a0c:	mov    rbp,QWORD PTR [r11+0x38]
   140008a10:	mov    rsi,QWORD PTR [r11+0x40]
   140008a14:	mov    rsp,r11
   140008a17:	pop    r15
   140008a19:	pop    r14
   140008a1b:	pop    r13
   140008a1d:	pop    r12
   140008a1f:	pop    rdi
   140008a20:	ret    
   140008a21:	int3   
   140008a22:	int3   
   140008a23:	int3   
   140008a24:	mov    QWORD PTR [rsp+0x8],rbx
   140008a29:	mov    QWORD PTR [rsp+0x10],rbp
   140008a2e:	mov    QWORD PTR [rsp+0x18],rsi
   140008a33:	push   rdi
   140008a34:	sub    rsp,0x10
   140008a38:	xor    ecx,ecx
   140008a3a:	xor    eax,eax
   140008a3c:	xor    edi,edi
   140008a3e:	cpuid  
   140008a40:	mov    DWORD PTR [rip+0x335fe],0x2        # 0x14003c048
   140008a4a:	mov    DWORD PTR [rip+0x335f0],0x1        # 0x14003c044
   140008a54:	mov    r11d,ebx
   140008a57:	mov    ebx,ecx
   140008a59:	mov    r8d,edx
   140008a5c:	xor    ebx,0x6c65746e
   140008a62:	mov    r9d,edx
   140008a65:	mov    edx,r11d
   140008a68:	xor    r8d,0x49656e69
   140008a6f:	xor    edx,0x756e6547
   140008a75:	mov    ebp,eax
   140008a77:	or     r8d,ebx
   140008a7a:	lea    eax,[rdi+0x1]
   140008a7d:	or     r8d,edx
   140008a80:	sete   r10b
   140008a84:	xor    r11d,0x68747541
   140008a8b:	xor    r9d,0x69746e65
   140008a92:	or     r11d,r9d
   140008a95:	xor    ecx,0x444d4163
   140008a9b:	or     r11d,ecx
   140008a9e:	sete   sil
   140008aa2:	xor    ecx,ecx
   140008aa4:	cpuid  
   140008aa6:	mov    r11d,ecx
   140008aa9:	mov    r9d,eax
   140008aac:	mov    DWORD PTR [rsp+0x4],ebx
   140008ab0:	mov    DWORD PTR [rsp+0xc],edx
   140008ab4:	test   r10b,r10b
   140008ab7:	je     0x140008b08
   140008ab9:	mov    edx,eax
   140008abb:	and    edx,0xfff3ff0
   140008ac1:	cmp    edx,0x106c0
   140008ac7:	je     0x140008af4
   140008ac9:	cmp    edx,0x20660
   140008acf:	je     0x140008af4
   140008ad1:	cmp    edx,0x20670
   140008ad7:	je     0x140008af4
   140008ad9:	add    edx,0xfffcf9b0
   140008adf:	cmp    edx,0x20
   140008ae2:	ja     0x140008b08
   140008ae4:	movabs rcx,0x100010001
   140008aee:	bt     rcx,rdx
   140008af2:	jae    0x140008b08
   140008af4:	mov    r8d,DWORD PTR [rip+0x351d9]        # 0x14003dcd4
   140008afb:	or     r8d,0x1
   140008aff:	mov    DWORD PTR [rip+0x351ce],r8d        # 0x14003dcd4
   140008b06:	jmp    0x140008b0f
   140008b08:	mov    r8d,DWORD PTR [rip+0x351c5]        # 0x14003dcd4
   140008b0f:	test   sil,sil
   140008b12:	je     0x140008b2f
   140008b14:	and    r9d,0xff00f00
   140008b1b:	cmp    r9d,0x600f00
   140008b22:	jl     0x140008b2f
   140008b24:	or     r8d,0x4
   140008b28:	mov    DWORD PTR [rip+0x351a5],r8d        # 0x14003dcd4
   140008b2f:	mov    eax,0x7
   140008b34:	cmp    ebp,eax
   140008b36:	jl     0x140008b5a
   140008b38:	xor    ecx,ecx
   140008b3a:	cpuid  
   140008b3c:	mov    edi,ebx
   140008b3e:	mov    DWORD PTR [rsp],eax
   140008b41:	mov    DWORD PTR [rsp+0x8],ecx
   140008b45:	mov    DWORD PTR [rsp+0xc],edx
   140008b49:	bt     ebx,0x9
   140008b4d:	jae    0x140008b5a
   140008b4f:	or     r8d,0x2
   140008b53:	mov    DWORD PTR [rip+0x3517a],r8d        # 0x14003dcd4
   140008b5a:	bt     r11d,0x14
   140008b5f:	jae    0x140008bb1
   140008b61:	mov    DWORD PTR [rip+0x334d9],0x2        # 0x14003c044
   140008b6b:	mov    DWORD PTR [rip+0x334d3],0x6        # 0x14003c048
   140008b75:	bt     r11d,0x1b
   140008b7a:	jae    0x140008bb1
   140008b7c:	bt     r11d,0x1c
   140008b81:	jae    0x140008bb1
   140008b83:	mov    DWORD PTR [rip+0x334b7],0x3        # 0x14003c044
   140008b8d:	mov    DWORD PTR [rip+0x334b1],0xe        # 0x14003c048
   140008b97:	test   dil,0x20
   140008b9b:	je     0x140008bb1
   140008b9d:	mov    DWORD PTR [rip+0x3349d],0x5        # 0x14003c044
   140008ba7:	mov    DWORD PTR [rip+0x33497],0x2e        # 0x14003c048
   140008bb1:	mov    rbx,QWORD PTR [rsp+0x20]
   140008bb6:	mov    rbp,QWORD PTR [rsp+0x28]
   140008bbb:	mov    rsi,QWORD PTR [rsp+0x30]
   140008bc0:	xor    eax,eax
   140008bc2:	add    rsp,0x10
   140008bc6:	pop    rdi
   140008bc7:	ret    
   140008bc8:	jmp    0x140008cf0
   140008bcd:	int3   
   140008bce:	int3   
   140008bcf:	int3   
   140008bd0:	sub    rsp,0x38
   140008bd4:	mov    rax,QWORD PTR [rsp+0x60]
   140008bd9:	mov    QWORD PTR [rsp+0x20],rax
   140008bde:	call   0x140008da8
   140008be3:	int3   
   140008be4:	mov    rax,rsp
   140008be7:	mov    QWORD PTR [rax+0x10],rbx
   140008beb:	mov    QWORD PTR [rax+0x18],rsi
   140008bef:	mov    QWORD PTR [rax+0x20],rdi
   140008bf3:	push   rbp
   140008bf4:	lea    rbp,[rax-0x4b8]
   140008bfb:	sub    rsp,0x5b0
   140008c02:	mov    rax,QWORD PTR [rip+0x335c7]        # 0x14003c1d0
   140008c09:	xor    rax,rsp
   140008c0c:	mov    QWORD PTR [rbp+0x4a0],rax
   140008c13:	mov    edi,r8d
   140008c16:	mov    esi,edx
   140008c18:	mov    ebx,ecx
   140008c1a:	cmp    ecx,0xffffffff
   140008c1d:	je     0x140008c24
   140008c1f:	call   0x140010d34
   140008c24:	and    DWORD PTR [rsp+0x30],0x0
   140008c29:	lea    rcx,[rsp+0x34]
   140008c2e:	xor    edx,edx
   140008c30:	mov    r8d,0x94
   140008c36:	call   0x140006f70
   140008c3b:	lea    rax,[rsp+0x30]
   140008c40:	lea    rcx,[rbp-0x30]
   140008c44:	mov    QWORD PTR [rsp+0x20],rax
   140008c49:	lea    rax,[rbp-0x30]
   140008c4d:	mov    QWORD PTR [rsp+0x28],rax
   140008c52:	call   0x14000e4c4
   140008c57:	mov    rax,QWORD PTR [rbp+0x4b8]
   140008c5e:	mov    QWORD PTR [rbp+0xc8],rax
   140008c65:	lea    rax,[rbp+0x4b8]
   140008c6c:	mov    DWORD PTR [rsp+0x30],esi
   140008c70:	add    rax,0x8
   140008c74:	mov    DWORD PTR [rsp+0x34],edi
   140008c78:	mov    QWORD PTR [rbp+0x68],rax
   140008c7c:	mov    rax,QWORD PTR [rbp+0x4b8]
   140008c83:	mov    QWORD PTR [rsp+0x40],rax
   140008c88:	call   QWORD PTR [rip+0x23512]        # 0x14002c1a0
   140008c8e:	lea    rcx,[rsp+0x20]
   140008c93:	mov    edi,eax
   140008c95:	call   0x14000ed20
   140008c9a:	test   eax,eax
   140008c9c:	jne    0x140008cae
   140008c9e:	test   edi,edi
   140008ca0:	jne    0x140008cae
   140008ca2:	cmp    ebx,0xffffffff
   140008ca5:	je     0x140008cae
   140008ca7:	mov    ecx,ebx
   140008ca9:	call   0x140010d34
   140008cae:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140008cb5:	xor    rcx,rsp
   140008cb8:	call   0x14000c380
   140008cbd:	lea    r11,[rsp+0x5b0]
   140008cc5:	mov    rbx,QWORD PTR [r11+0x18]
   140008cc9:	mov    rsi,QWORD PTR [r11+0x20]
   140008ccd:	mov    rdi,QWORD PTR [r11+0x28]
   140008cd1:	mov    rsp,r11
   140008cd4:	pop    rbp
   140008cd5:	ret    
   140008cd6:	int3   
   140008cd7:	int3   
   140008cd8:	mov    rcx,QWORD PTR [rip+0x34ff9]        # 0x14003dcd8
   140008cdf:	rex.W jmp QWORD PTR [rip+0x23432]        # 0x14002c118
   140008ce6:	int3   
   140008ce7:	int3   
   140008ce8:	mov    QWORD PTR [rip+0x34fe9],rcx        # 0x14003dcd8
   140008cef:	ret    
   140008cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140008cf5:	mov    QWORD PTR [rsp+0x10],rbp
   140008cfa:	mov    QWORD PTR [rsp+0x18],rsi
   140008cff:	push   rdi
   140008d00:	sub    rsp,0x30
   140008d04:	mov    rbp,rcx
   140008d07:	mov    rcx,QWORD PTR [rip+0x34fca]        # 0x14003dcd8
   140008d0e:	mov    ebx,r9d
   140008d11:	mov    rdi,r8
   140008d14:	mov    rsi,rdx
   140008d17:	call   QWORD PTR [rip+0x233fb]        # 0x14002c118
   140008d1d:	mov    r9d,ebx
   140008d20:	mov    r8,rdi
   140008d23:	mov    rdx,rsi
   140008d26:	mov    rcx,rbp
   140008d29:	test   rax,rax
   140008d2c:	je     0x140008d45
   140008d2e:	mov    rbx,QWORD PTR [rsp+0x40]
   140008d33:	mov    rbp,QWORD PTR [rsp+0x48]
   140008d38:	mov    rsi,QWORD PTR [rsp+0x50]
   140008d3d:	add    rsp,0x30
   140008d41:	pop    rdi
   140008d42:	rex.W jmp rax
   140008d45:	mov    rax,QWORD PTR [rsp+0x60]
   140008d4a:	mov    QWORD PTR [rsp+0x20],rax
   140008d4f:	call   0x140008da8
   140008d54:	int3   
   140008d55:	int3   
   140008d56:	int3   
   140008d57:	int3   
   140008d58:	sub    rsp,0x38
   140008d5c:	and    QWORD PTR [rsp+0x20],0x0
   140008d62:	xor    r9d,r9d
   140008d65:	xor    r8d,r8d
   140008d68:	xor    edx,edx
   140008d6a:	xor    ecx,ecx
   140008d6c:	call   0x140008cf0
   140008d71:	add    rsp,0x38
   140008d75:	ret    
   140008d76:	int3   
   140008d77:	int3   
   140008d78:	sub    rsp,0x38
   140008d7c:	and    QWORD PTR [rsp+0x20],0x0
   140008d82:	xor    r9d,r9d
   140008d85:	xor    r8d,r8d
   140008d88:	xor    edx,edx
   140008d8a:	xor    ecx,ecx
   140008d8c:	call   0x140008cf0
   140008d91:	and    QWORD PTR [rsp+0x20],0x0
   140008d97:	xor    r9d,r9d
   140008d9a:	xor    r8d,r8d
   140008d9d:	xor    edx,edx
   140008d9f:	xor    ecx,ecx
   140008da1:	call   0x140008da8
   140008da6:	int3   
   140008da7:	int3   
   140008da8:	sub    rsp,0x28
   140008dac:	mov    ecx,0x17
   140008db1:	call   0x14002a60c
   140008db6:	test   eax,eax
   140008db8:	je     0x140008dc1
   140008dba:	mov    ecx,0x5
   140008dbf:	int    0x29
   140008dc1:	mov    r8d,0x1
   140008dc7:	mov    edx,0xc0000417
   140008dcc:	lea    ecx,[r8+0x1]
   140008dd0:	call   0x140008be4
   140008dd5:	mov    ecx,0xc0000417
   140008dda:	add    rsp,0x28
   140008dde:	jmp    0x14000ed00
   140008de3:	int3   
   140008de4:	mov    QWORD PTR [rsp+0x8],rbx
   140008de9:	push   rdi
   140008dea:	sub    rsp,0x20
   140008dee:	mov    rdi,rcx
   140008df1:	mov    rcx,QWORD PTR [rip+0x34ee0]        # 0x14003dcd8
   140008df8:	call   QWORD PTR [rip+0x2331a]        # 0x14002c118
   140008dfe:	mov    rcx,rdi
   140008e01:	mov    rbx,rax
   140008e04:	call   QWORD PTR [rip+0x23306]        # 0x14002c110
   140008e0a:	mov    QWORD PTR [rip+0x34ec7],rax        # 0x14003dcd8
   140008e11:	mov    rax,rbx
   140008e14:	mov    rbx,QWORD PTR [rsp+0x30]
   140008e19:	add    rsp,0x20
   140008e1d:	pop    rdi
   140008e1e:	ret    
   140008e1f:	int3   
   140008e20:	mov    rax,rsp
   140008e23:	mov    QWORD PTR [rax+0x10],rbx
   140008e27:	mov    QWORD PTR [rax+0x18],rbp
   140008e2b:	mov    QWORD PTR [rax+0x20],rsi
   140008e2f:	mov    DWORD PTR [rax+0x8],ecx
   140008e32:	push   rdi
   140008e33:	sub    rsp,0x20
   140008e37:	mov    rcx,rdx
   140008e3a:	mov    rbx,rdx
   140008e3d:	call   0x140010f18
   140008e42:	mov    ecx,DWORD PTR [rbx+0x18]
   140008e45:	movsxd rsi,eax
   140008e48:	test   cl,0x82
   140008e4b:	jne    0x140008e64
   140008e4d:	call   0x140009cb4
   140008e52:	mov    DWORD PTR [rax],0x9
   140008e58:	or     DWORD PTR [rbx+0x18],0x20
   140008e5c:	or     eax,0xffffffff
   140008e5f:	jmp    0x140008f96
   140008e64:	test   cl,0x40
   140008e67:	je     0x140008e76
   140008e69:	call   0x140009cb4
   140008e6e:	mov    DWORD PTR [rax],0x22
   140008e74:	jmp    0x140008e58
   140008e76:	xor    edi,edi
   140008e78:	test   cl,0x1
   140008e7b:	je     0x140008e96
   140008e7d:	mov    DWORD PTR [rbx+0x8],edi
   140008e80:	test   cl,0x10
   140008e83:	je     0x140008f12
   140008e89:	mov    rax,QWORD PTR [rbx+0x10]
   140008e8d:	and    ecx,0xfffffffe
   140008e90:	mov    QWORD PTR [rbx],rax
   140008e93:	mov    DWORD PTR [rbx+0x18],ecx
   140008e96:	mov    eax,DWORD PTR [rbx+0x18]
   140008e99:	mov    DWORD PTR [rbx+0x8],edi
   140008e9c:	and    eax,0xffffffef
   140008e9f:	or     eax,0x2
   140008ea2:	mov    DWORD PTR [rbx+0x18],eax
   140008ea5:	test   eax,0x10c
   140008eaa:	jne    0x140008edb
   140008eac:	call   0x140010e04
   140008eb1:	add    rax,0x30
   140008eb5:	cmp    rbx,rax
   140008eb8:	je     0x140008ec8
   140008eba:	call   0x140010e04
   140008ebf:	add    rax,0x60
   140008ec3:	cmp    rbx,rax
   140008ec6:	jne    0x140008ed3
   140008ec8:	mov    ecx,esi
   140008eca:	call   0x140010f40
   140008ecf:	test   eax,eax
   140008ed1:	jne    0x140008edb
   140008ed3:	mov    rcx,rbx
   140008ed6:	call   0x1400119f4
   140008edb:	test   DWORD PTR [rbx+0x18],0x108
   140008ee2:	je     0x140008f73
   140008ee8:	mov    ebp,DWORD PTR [rbx]
   140008eea:	mov    rdx,QWORD PTR [rbx+0x10]
   140008eee:	sub    ebp,DWORD PTR [rbx+0x10]
   140008ef1:	lea    rax,[rdx+0x1]
   140008ef5:	mov    QWORD PTR [rbx],rax
   140008ef8:	mov    eax,DWORD PTR [rbx+0x24]
   140008efb:	dec    eax
   140008efd:	mov    DWORD PTR [rbx+0x8],eax
   140008f00:	test   ebp,ebp
   140008f02:	jle    0x140008f1d
   140008f04:	mov    r8d,ebp
   140008f07:	mov    ecx,esi
   140008f09:	call   0x140010fa0
   140008f0e:	mov    edi,eax
   140008f10:	jmp    0x140008f67
   140008f12:	or     ecx,0x20
   140008f15:	mov    DWORD PTR [rbx+0x18],ecx
   140008f18:	jmp    0x140008e5c
   140008f1d:	lea    eax,[rsi+0x2]
   140008f20:	cmp    eax,0x1
   140008f23:	jbe    0x140008f43
   140008f25:	mov    rcx,rsi
   140008f28:	mov    rax,rsi
   140008f2b:	lea    r8,[rip+0x34dde]        # 0x14003dd10
   140008f32:	and    ecx,0x1f
   140008f35:	sar    rax,0x5
   140008f39:	imul   rdx,rcx,0x58
   140008f3d:	add    rdx,QWORD PTR [r8+rax*8]
   140008f41:	jmp    0x140008f4a
   140008f43:	lea    rdx,[rip+0x332e6]        # 0x14003c230
   140008f4a:	test   BYTE PTR [rdx+0x8],0x20
   140008f4e:	je     0x140008f67
   140008f50:	xor    edx,edx
   140008f52:	mov    ecx,esi
   140008f54:	lea    r8d,[rdx+0x2]
   140008f58:	call   0x140011878
   140008f5d:	cmp    rax,0xffffffffffffffff
   140008f61:	je     0x140008e58
   140008f67:	mov    rcx,QWORD PTR [rbx+0x10]
   140008f6b:	mov    al,BYTE PTR [rsp+0x30]
   140008f6f:	mov    BYTE PTR [rcx],al
   140008f71:	jmp    0x140008f89
   140008f73:	mov    ebp,0x1
   140008f78:	lea    rdx,[rsp+0x30]
   140008f7d:	mov    ecx,esi
   140008f7f:	mov    r8d,ebp
   140008f82:	call   0x140010fa0
   140008f87:	mov    edi,eax
   140008f89:	cmp    edi,ebp
   140008f8b:	jne    0x140008e58
   140008f91:	movzx  eax,BYTE PTR [rsp+0x30]
   140008f96:	mov    rbx,QWORD PTR [rsp+0x38]
   140008f9b:	mov    rbp,QWORD PTR [rsp+0x40]
   140008fa0:	mov    rsi,QWORD PTR [rsp+0x48]
   140008fa5:	add    rsp,0x20
   140008fa9:	pop    rdi
   140008faa:	ret    
   140008fab:	int3   
   140008fac:	rex push rbx
   140008fae:	sub    rsp,0x20
   140008fb2:	mov    rbx,rcx
   140008fb5:	mov    BYTE PTR [rcx+0x18],0x0
   140008fb9:	test   rdx,rdx
   140008fbc:	jne    0x140009044
   140008fc2:	call   0x14000a3ec
   140008fc7:	mov    QWORD PTR [rbx+0x10],rax
   140008fcb:	mov    rdx,QWORD PTR [rax+0xc0]
   140008fd2:	mov    QWORD PTR [rbx],rdx
   140008fd5:	mov    rcx,QWORD PTR [rax+0xb8]
   140008fdc:	mov    QWORD PTR [rbx+0x8],rcx
   140008fe0:	cmp    rdx,QWORD PTR [rip+0x340b9]        # 0x14003d0a0
   140008fe7:	je     0x140008fff
   140008fe9:	mov    eax,DWORD PTR [rax+0xc8]
   140008fef:	test   DWORD PTR [rip+0x34223],eax        # 0x14003d218
   140008ff5:	jne    0x140008fff
   140008ff7:	call   0x140011d10
   140008ffc:	mov    QWORD PTR [rbx],rax
   140008fff:	mov    rax,QWORD PTR [rip+0x339fa]        # 0x14003ca00
   140009006:	cmp    QWORD PTR [rbx+0x8],rax
   14000900a:	je     0x140009027
   14000900c:	mov    rax,QWORD PTR [rbx+0x10]
   140009010:	mov    ecx,DWORD PTR [rax+0xc8]
   140009016:	test   DWORD PTR [rip+0x341fc],ecx        # 0x14003d218
   14000901c:	jne    0x140009027
   14000901e:	call   0x1400103cc
   140009023:	mov    QWORD PTR [rbx+0x8],rax
   140009027:	mov    rcx,QWORD PTR [rbx+0x10]
   14000902b:	mov    eax,DWORD PTR [rcx+0xc8]
   140009031:	test   al,0x2
   140009033:	jne    0x14000904b
   140009035:	or     eax,0x2
   140009038:	mov    DWORD PTR [rcx+0xc8],eax
   14000903e:	mov    BYTE PTR [rbx+0x18],0x1
   140009042:	jmp    0x14000904b
   140009044:	movups xmm0,XMMWORD PTR [rdx]
   140009047:	movdqu XMMWORD PTR [rcx],xmm0
   14000904b:	mov    rax,rbx
   14000904e:	add    rsp,0x20
   140009052:	pop    rbx
   140009053:	ret    
   140009054:	cmp    BYTE PTR [rcx+0x18],0x0
   140009058:	je     0x140009065
   14000905a:	mov    rax,QWORD PTR [rcx+0x10]
   14000905e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140009065:	ret    
   140009066:	int3   
   140009067:	int3   
   140009068:	mov    rax,rcx
   14000906b:	ret    
   14000906c:	mov    QWORD PTR [rsp+0x18],rbx
   140009071:	push   rbp
   140009072:	push   rsi
   140009073:	push   rdi
   140009074:	push   r12
   140009076:	push   r13
   140009078:	push   r14
   14000907a:	push   r15
   14000907c:	lea    rbp,[rsp-0x3e0]
   140009084:	sub    rsp,0x4e0
   14000908b:	mov    rax,QWORD PTR [rip+0x3313e]        # 0x14003c1d0
   140009092:	xor    rax,rsp
   140009095:	mov    QWORD PTR [rbp+0x3d0],rax
   14000909c:	xor    eax,eax
   14000909e:	mov    rsi,rcx
   1400090a1:	mov    QWORD PTR [rsp+0x70],rcx
   1400090a6:	mov    QWORD PTR [rbp-0x78],rdx
   1400090aa:	lea    rcx,[rbp-0x70]
   1400090ae:	mov    rdx,r8
   1400090b1:	mov    r12,r9
   1400090b4:	mov    QWORD PTR [rsp+0x50],r9
   1400090b9:	mov    DWORD PTR [rbp-0x80],eax
   1400090bc:	mov    r14d,eax
   1400090bf:	mov    DWORD PTR [rsp+0x58],eax
   1400090c3:	mov    edi,eax
   1400090c5:	mov    DWORD PTR [rsp+0x44],eax
   1400090c9:	mov    DWORD PTR [rsp+0x48],eax
   1400090cd:	mov    DWORD PTR [rsp+0x7c],eax
   1400090d1:	mov    DWORD PTR [rsp+0x78],eax
   1400090d5:	mov    ebx,eax
   1400090d7:	mov    DWORD PTR [rsp+0x4c],eax
   1400090db:	call   0x140008fac
   1400090e0:	call   0x140009cb4
   1400090e5:	xor    r10d,r10d
   1400090e8:	mov    QWORD PTR [rbp-0x48],rax
   1400090ec:	test   rsi,rsi
   1400090ef:	jne    0x14000911b
   1400090f1:	call   0x140009cb4
   1400090f6:	mov    DWORD PTR [rax],0x16
   1400090fc:	call   0x140008d58
   140009101:	xor    ecx,ecx
   140009103:	cmp    BYTE PTR [rbp-0x58],cl
   140009106:	je     0x140009113
   140009108:	mov    rax,QWORD PTR [rbp-0x60]
   14000910c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140009113:	or     eax,0xffffffff
   140009116:	jmp    0x1400098f7
   14000911b:	mov    r8,QWORD PTR [rbp-0x78]
   14000911f:	test   r8,r8
   140009122:	je     0x1400090f1
   140009124:	movzx  r15d,WORD PTR [r8]
   140009128:	mov    esi,r10d
   14000912b:	mov    DWORD PTR [rsp+0x40],r10d
   140009130:	mov    r13d,r10d
   140009133:	mov    edx,r10d
   140009136:	mov    QWORD PTR [rbp-0x50],r10
   14000913a:	test   r15w,r15w
   14000913e:	je     0x1400098e4
   140009144:	mov    r11d,0x20
   14000914a:	mov    r9d,0x200
   140009150:	add    r8,0x2
   140009154:	mov    QWORD PTR [rbp-0x78],r8
   140009158:	test   esi,esi
   14000915a:	js     0x1400098e4
   140009160:	movzx  eax,r15w
   140009164:	mov    ecx,0x58
   140009169:	sub    ax,r11w
   14000916d:	cmp    ax,cx
   140009170:	ja     0x140009187
   140009172:	lea    rcx,[rip+0x2a077]        # 0x1400331f0
   140009179:	movzx  eax,r15w
   14000917d:	movsx  ecx,BYTE PTR [rax+rcx*1-0x20]
   140009182:	and    ecx,0xf
   140009185:	jmp    0x14000918a
   140009187:	mov    ecx,r10d
   14000918a:	movsxd rax,edx
   14000918d:	movsxd rcx,ecx
   140009190:	lea    rdx,[rax+rcx*8]
   140009194:	lea    rax,[rip+0x2a055]        # 0x1400331f0
   14000919b:	movsx  edx,BYTE PTR [rdx+rax*1]
   14000919f:	sar    edx,0x4
   1400091a2:	mov    DWORD PTR [rsp+0x68],edx
   1400091a6:	mov    ecx,edx
   1400091a8:	test   edx,edx
   1400091aa:	je     0x1400099ca
   1400091b0:	dec    ecx
   1400091b2:	je     0x140009ada
   1400091b8:	dec    ecx
   1400091ba:	je     0x140009a7f
   1400091c0:	dec    ecx
   1400091c2:	je     0x140009a3d
   1400091c8:	dec    ecx
   1400091ca:	je     0x140009a30
   1400091d0:	dec    ecx
   1400091d2:	je     0x1400099f5
   1400091d8:	dec    ecx
   1400091da:	je     0x140009921
   1400091e0:	dec    ecx
   1400091e2:	jne    0x1400098d6
   1400091e8:	movzx  ecx,r15w
   1400091ec:	cmp    ecx,0x64
   1400091ef:	jg     0x140009401
   1400091f5:	je     0x14000950a
   1400091fb:	cmp    ecx,0x41
   1400091fe:	je     0x1400093cd
   140009204:	cmp    ecx,0x43
   140009207:	je     0x140009357
   14000920d:	lea    eax,[rcx-0x45]
   140009210:	test   eax,0xfffffffd
   140009215:	je     0x1400093cd
   14000921b:	cmp    ecx,0x53
   14000921e:	je     0x1400092b1
   140009224:	mov    eax,0x58
   140009229:	cmp    ecx,eax
   14000922b:	je     0x14000948a
   140009231:	cmp    ecx,0x5a
   140009234:	je     0x14000924d
   140009236:	cmp    ecx,0x61
   140009239:	je     0x1400093d9
   14000923f:	cmp    ecx,0x63
   140009242:	je     0x140009363
   140009248:	jmp    0x14000931f
   14000924d:	mov    rax,QWORD PTR [r12]
   140009251:	add    r12,0x8
   140009255:	mov    QWORD PTR [rsp+0x50],r12
   14000925a:	test   rax,rax
   14000925d:	je     0x14000929a
   14000925f:	mov    rbx,QWORD PTR [rax+0x8]
   140009263:	test   rbx,rbx
   140009266:	je     0x14000929a
   140009268:	mov    edi,0x2d
   14000926d:	bt     r14d,0xb
   140009272:	jae    0x14000928c
   140009274:	movsx  eax,WORD PTR [rax]
   140009277:	mov    DWORD PTR [rsp+0x4c],0x1
   14000927f:	cdq    
   140009280:	sub    eax,edx
   140009282:	sar    eax,1
   140009284:	mov    r13d,eax
   140009287:	jmp    0x140009324
   14000928c:	movsx  r13d,WORD PTR [rax]
   140009290:	mov    DWORD PTR [rsp+0x4c],r10d
   140009295:	jmp    0x140009324
   14000929a:	mov    rbx,QWORD PTR [rip+0x33f7f]        # 0x14003d220
   1400092a1:	mov    rcx,rbx
   1400092a4:	call   0x140007550
   1400092a9:	xor    r10d,r10d
   1400092ac:	mov    r13,rax
   1400092af:	jmp    0x14000931f
   1400092b1:	test   r14d,0x830
   1400092b8:	jne    0x1400092bd
   1400092ba:	or     r14d,r11d
   1400092bd:	cmp    DWORD PTR [rsp+0x44],0xffffffff
   1400092c2:	mov    rbx,QWORD PTR [r12]
   1400092c6:	mov    eax,0x7fffffff
   1400092cb:	cmove  edi,eax
   1400092ce:	add    r12,0x8
   1400092d2:	mov    QWORD PTR [rsp+0x50],r12
   1400092d7:	test   r11b,r14b
   1400092da:	je     0x14000944a
   1400092e0:	test   rbx,rbx
   1400092e3:	mov    r13d,r10d
   1400092e6:	cmove  rbx,QWORD PTR [rip+0x33f32]        # 0x14003d220
   1400092ee:	mov    rsi,rbx
   1400092f1:	test   edi,edi
   1400092f3:	jle    0x14000931b
   1400092f5:	cmp    BYTE PTR [rsi],r10b
   1400092f8:	je     0x14000931b
   1400092fa:	movzx  ecx,BYTE PTR [rsi]
   1400092fd:	lea    rdx,[rbp-0x70]
   140009301:	call   0x140011e44
   140009306:	xor    r10d,r10d
   140009309:	test   eax,eax
   14000930b:	je     0x140009310
   14000930d:	inc    rsi
   140009310:	inc    r13d
   140009313:	inc    rsi
   140009316:	cmp    r13d,edi
   140009319:	jl     0x1400092f5
   14000931b:	mov    esi,DWORD PTR [rsp+0x40]
   14000931f:	mov    edi,0x2d
   140009324:	cmp    DWORD PTR [rsp+0x78],r10d
   140009329:	jne    0x1400098a2
   14000932f:	test   r14b,0x40
   140009333:	je     0x14000976d
   140009339:	bt     r14d,0x8
   14000933e:	jae    0x14000973f
   140009344:	mov    WORD PTR [rsp+0x5c],di
   140009349:	mov    edi,0x1
   14000934e:	mov    DWORD PTR [rsp+0x48],edi
   140009352:	jmp    0x140009771
   140009357:	test   r14d,0x830
   14000935e:	jne    0x140009363
   140009360:	or     r14d,r11d
   140009363:	movzx  eax,WORD PTR [r12]
   140009368:	add    r12,0x8
   14000936c:	mov    DWORD PTR [rsp+0x4c],0x1
   140009374:	mov    QWORD PTR [rsp+0x50],r12
   140009379:	mov    WORD PTR [rsp+0x60],ax
   14000937e:	test   r11b,r14b
   140009381:	je     0x1400093ba
   140009383:	mov    BYTE PTR [rsp+0x64],al
   140009387:	mov    rax,QWORD PTR [rbp-0x70]
   14000938b:	mov    BYTE PTR [rsp+0x65],r10b
   140009390:	movsxd r8,DWORD PTR [rax+0xd4]
   140009397:	lea    r9,[rbp-0x70]
   14000939b:	lea    rdx,[rsp+0x64]
   1400093a0:	lea    rcx,[rbp-0x30]
   1400093a4:	call   0x14001247c
   1400093a9:	xor    r10d,r10d
   1400093ac:	test   eax,eax
   1400093ae:	jns    0x1400093be
   1400093b0:	mov    DWORD PTR [rsp+0x78],0x1
   1400093b8:	jmp    0x1400093be
   1400093ba:	mov    WORD PTR [rbp-0x30],ax
   1400093be:	lea    rbx,[rbp-0x30]
   1400093c2:	mov    r13d,0x1
   1400093c8:	jmp    0x14000931f
   1400093cd:	mov    DWORD PTR [rsp+0x7c],0x1
   1400093d5:	add    r15w,r11w
   1400093d9:	mov    eax,0x67
   1400093de:	or     r14d,0x40
   1400093e2:	lea    rbx,[rbp-0x30]
   1400093e6:	mov    esi,r9d
   1400093e9:	test   edi,edi
   1400093eb:	jns    0x14000962e
   1400093f1:	mov    r13d,0x6
   1400093f7:	mov    DWORD PTR [rsp+0x44],r13d
   1400093fc:	jmp    0x140009681
   140009401:	mov    eax,0x67
   140009406:	cmp    ecx,eax
   140009408:	jle    0x1400093de
   14000940a:	cmp    ecx,0x69
   14000940d:	je     0x14000950a
   140009413:	cmp    ecx,0x6e
   140009416:	je     0x1400094d0
   14000941c:	cmp    ecx,0x6f
   14000941f:	je     0x1400094ba
   140009425:	cmp    ecx,0x70
   140009428:	je     0x140009480
   14000942a:	cmp    ecx,0x73
   14000942d:	je     0x1400092bd
   140009433:	cmp    ecx,0x75
   140009436:	je     0x14000950e
   14000943c:	cmp    ecx,0x78
   14000943f:	jne    0x14000931f
   140009445:	lea    eax,[rcx-0x51]
   140009448:	jmp    0x14000948f
   14000944a:	test   rbx,rbx
   14000944d:	mov    DWORD PTR [rsp+0x4c],0x1
   140009455:	cmove  rbx,QWORD PTR [rip+0x33dcb]        # 0x14003d228
   14000945d:	mov    rax,rbx
   140009460:	jmp    0x14000946e
   140009462:	dec    edi
   140009464:	cmp    WORD PTR [rax],r10w
   140009468:	je     0x140009472
   14000946a:	add    rax,0x2
   14000946e:	test   edi,edi
   140009470:	jne    0x140009462
   140009472:	sub    rax,rbx
   140009475:	sar    rax,1
   140009478:	mov    r13d,eax
   14000947b:	jmp    0x14000931f
   140009480:	mov    edi,0x10
   140009485:	bts    r14d,0xf
   14000948a:	mov    eax,0x7
   14000948f:	mov    DWORD PTR [rbp-0x80],eax
   140009492:	mov    r9d,0x10
   140009498:	mov    r15d,0x200
   14000949e:	test   r14b,r14b
   1400094a1:	jns    0x14000951a
   1400094a3:	lea    ecx,[r9+0x20]
   1400094a7:	add    ax,0x51
   1400094ab:	lea    edx,[rcx-0x2e]
   1400094ae:	mov    WORD PTR [rsp+0x5c],cx
   1400094b3:	mov    WORD PTR [rsp+0x5e],ax
   1400094b8:	jmp    0x14000951e
   1400094ba:	mov    r9d,0x8
   1400094c0:	test   r14b,r14b
   1400094c3:	jns    0x140009514
   1400094c5:	mov    r15d,0x200
   1400094cb:	or     r14d,r15d
   1400094ce:	jmp    0x14000951a
   1400094d0:	mov    rdi,QWORD PTR [r12]
   1400094d4:	add    r12,0x8
   1400094d8:	mov    QWORD PTR [rsp+0x50],r12
   1400094dd:	call   0x140012070
   1400094e2:	xor    r10d,r10d
   1400094e5:	test   eax,eax
   1400094e7:	je     0x1400090f1
   1400094ed:	lea    r11d,[r10+0x20]
   1400094f1:	test   r11b,r14b
   1400094f4:	je     0x1400094fb
   1400094f6:	mov    WORD PTR [rdi],si
   1400094f9:	jmp    0x1400094fd
   1400094fb:	mov    DWORD PTR [rdi],esi
   1400094fd:	mov    DWORD PTR [rsp+0x78],0x1
   140009505:	jmp    0x1400098a8
   14000950a:	or     r14d,0x40
   14000950e:	mov    r9d,0xa
   140009514:	mov    r15d,0x200
   14000951a:	mov    edx,DWORD PTR [rsp+0x48]
   14000951e:	mov    eax,0x8000
   140009523:	test   eax,r14d
   140009526:	je     0x140009532
   140009528:	mov    r8,QWORD PTR [r12]
   14000952c:	add    r12,0x8
   140009530:	jmp    0x14000956f
   140009532:	bt     r14d,0xc
   140009537:	jb     0x140009528
   140009539:	add    r12,0x8
   14000953d:	test   r11b,r14b
   140009540:	je     0x14000955d
   140009542:	mov    QWORD PTR [rsp+0x50],r12
   140009547:	test   r14b,0x40
   14000954b:	je     0x140009555
   14000954d:	movsx  r8,WORD PTR [r12-0x8]
   140009553:	jmp    0x140009574
   140009555:	movzx  r8d,WORD PTR [r12-0x8]
   14000955b:	jmp    0x140009574
   14000955d:	test   r14b,0x40
   140009561:	je     0x14000956a
   140009563:	movsxd r8,DWORD PTR [r12-0x8]
   140009568:	jmp    0x14000956f
   14000956a:	mov    r8d,DWORD PTR [r12-0x8]
   14000956f:	mov    QWORD PTR [rsp+0x50],r12
   140009574:	test   r14b,0x40
   140009578:	je     0x140009587
   14000957a:	test   r8,r8
   14000957d:	jns    0x140009587
   14000957f:	neg    r8
   140009582:	bts    r14d,0x8
   140009587:	test   eax,r14d
   14000958a:	jne    0x140009596
   14000958c:	bt     r14d,0xc
   140009591:	jb     0x140009596
   140009593:	mov    r8d,r8d
   140009596:	test   edi,edi
   140009598:	jns    0x1400095a1
   14000959a:	mov    edi,0x1
   14000959f:	jmp    0x1400095ac
   1400095a1:	and    r14d,0xfffffff7
   1400095a5:	cmp    edi,r15d
   1400095a8:	cmovg  edi,r15d
   1400095ac:	mov    esi,DWORD PTR [rbp-0x80]
   1400095af:	mov    rax,r8
   1400095b2:	lea    rbx,[rbp+0x1cf]
   1400095b9:	neg    rax
   1400095bc:	sbb    ecx,ecx
   1400095be:	and    ecx,edx
   1400095c0:	mov    DWORD PTR [rsp+0x48],ecx
   1400095c4:	mov    ecx,edi
   1400095c6:	dec    edi
   1400095c8:	test   ecx,ecx
   1400095ca:	jg     0x1400095d1
   1400095cc:	test   r8,r8
   1400095cf:	je     0x1400095f0
   1400095d1:	xor    edx,edx
   1400095d3:	mov    rax,r8
   1400095d6:	movsxd rcx,r9d
   1400095d9:	div    rcx
   1400095dc:	mov    r8,rax
   1400095df:	lea    eax,[rdx+0x30]
   1400095e2:	cmp    eax,0x39
   1400095e5:	jle    0x1400095e9
   1400095e7:	add    eax,esi
   1400095e9:	mov    BYTE PTR [rbx],al
   1400095eb:	dec    rbx
   1400095ee:	jmp    0x1400095c4
   1400095f0:	mov    esi,DWORD PTR [rsp+0x40]
   1400095f4:	lea    rax,[rbp+0x1cf]
   1400095fb:	mov    DWORD PTR [rsp+0x44],edi
   1400095ff:	sub    eax,ebx
   140009601:	inc    rbx
   140009604:	mov    r13d,eax
   140009607:	test   r15d,r14d
   14000960a:	je     0x14000931f
   140009610:	test   eax,eax
   140009612:	mov    eax,0x30
   140009617:	je     0x140009621
   140009619:	cmp    BYTE PTR [rbx],al
   14000961b:	je     0x14000931f
   140009621:	dec    rbx
   140009624:	inc    r13d
   140009627:	mov    BYTE PTR [rbx],al
   140009629:	jmp    0x14000931f
   14000962e:	jne    0x140009641
   140009630:	cmp    r15w,ax
   140009634:	jne    0x140009677
   140009636:	mov    r13d,0x1
   14000963c:	jmp    0x1400093f7
   140009641:	cmp    edi,r9d
   140009644:	mov    r13d,0xa3
   14000964a:	cmovg  edi,r9d
   14000964e:	mov    DWORD PTR [rsp+0x44],edi
   140009652:	cmp    edi,r13d
   140009655:	jle    0x14000967e
   140009657:	add    edi,0x15d
   14000965d:	movsxd rcx,edi
   140009660:	call   0x140008684
   140009665:	mov    QWORD PTR [rbp-0x50],rax
   140009669:	test   rax,rax
   14000966c:	je     0x1400093f7
   140009672:	mov    rbx,rax
   140009675:	mov    esi,edi
   140009677:	mov    r13d,DWORD PTR [rsp+0x44]
   14000967c:	jmp    0x140009681
   14000967e:	mov    r13d,edi
   140009681:	mov    rax,QWORD PTR [r12]
   140009685:	mov    rcx,QWORD PTR [rip+0x32b84]        # 0x14003c210
   14000968c:	add    r12,0x8
   140009690:	mov    QWORD PTR [rsp+0x50],r12
   140009695:	movsx  edi,r15b
   140009699:	movsxd rsi,esi
   14000969c:	mov    QWORD PTR [rbp-0x40],rax
   1400096a0:	call   QWORD PTR [rip+0x22a72]        # 0x14002c118
   1400096a6:	lea    rcx,[rbp-0x70]
   1400096aa:	mov    QWORD PTR [rsp+0x30],rcx
   1400096af:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400096b3:	mov    r9d,edi
   1400096b6:	mov    DWORD PTR [rsp+0x28],ecx
   1400096ba:	lea    rcx,[rbp-0x40]
   1400096be:	mov    r8,rsi
   1400096c1:	mov    rdx,rbx
   1400096c4:	mov    DWORD PTR [rsp+0x20],r13d
   1400096c9:	call   rax
   1400096cb:	mov    edi,r14d
   1400096ce:	and    edi,0x80
   1400096d4:	je     0x1400096f1
   1400096d6:	test   r13d,r13d
   1400096d9:	jne    0x1400096f1
   1400096db:	mov    rcx,QWORD PTR [rip+0x32b46]        # 0x14003c228
   1400096e2:	call   QWORD PTR [rip+0x22a30]        # 0x14002c118
   1400096e8:	lea    rdx,[rbp-0x70]
   1400096ec:	mov    rcx,rbx
   1400096ef:	call   rax
   1400096f1:	mov    ecx,0x67
   1400096f6:	cmp    r15w,cx
   1400096fa:	jne    0x140009716
   1400096fc:	test   edi,edi
   1400096fe:	jne    0x140009716
   140009700:	mov    rcx,QWORD PTR [rip+0x32b19]        # 0x14003c220
   140009707:	call   QWORD PTR [rip+0x22a0b]        # 0x14002c118
   14000970d:	lea    rdx,[rbp-0x70]
   140009711:	mov    rcx,rbx
   140009714:	call   rax
   140009716:	mov    edi,0x2d
   14000971b:	cmp    BYTE PTR [rbx],dil
   14000971e:	jne    0x140009728
   140009720:	bts    r14d,0x8
   140009725:	inc    rbx
   140009728:	mov    rcx,rbx
   14000972b:	call   0x140007550
   140009730:	mov    esi,DWORD PTR [rsp+0x40]
   140009734:	xor    r10d,r10d
   140009737:	mov    r13d,eax
   14000973a:	jmp    0x140009324
   14000973f:	test   r14b,0x1
   140009743:	je     0x140009754
   140009745:	mov    eax,0x2b
   14000974a:	mov    WORD PTR [rsp+0x5c],ax
   14000974f:	jmp    0x140009349
   140009754:	test   r14b,0x2
   140009758:	je     0x14000976d
   14000975a:	mov    eax,0x20
   14000975f:	mov    WORD PTR [rsp+0x5c],ax
   140009764:	lea    edi,[rax-0x1f]
   140009767:	mov    DWORD PTR [rsp+0x48],edi
   14000976b:	jmp    0x140009776
   14000976d:	mov    edi,DWORD PTR [rsp+0x48]
   140009771:	mov    eax,0x20
   140009776:	mov    r15d,DWORD PTR [rsp+0x58]
   14000977b:	mov    rsi,QWORD PTR [rsp+0x70]
   140009780:	sub    r15d,r13d
   140009783:	sub    r15d,edi
   140009786:	test   r14b,0xc
   14000978a:	jne    0x14000979e
   14000978c:	lea    r9,[rsp+0x40]
   140009791:	mov    ecx,eax
   140009793:	mov    r8,rsi
   140009796:	mov    edx,r15d
   140009799:	call   0x140009b54
   14000979e:	mov    rax,QWORD PTR [rbp-0x48]
   1400097a2:	lea    r9,[rsp+0x40]
   1400097a7:	lea    rcx,[rsp+0x5c]
   1400097ac:	mov    r8,rsi
   1400097af:	mov    edx,edi
   1400097b1:	mov    QWORD PTR [rsp+0x20],rax
   1400097b6:	call   0x140009ba8
   1400097bb:	mov    rdi,QWORD PTR [rsp+0x70]
   1400097c0:	test   r14b,0x8
   1400097c4:	je     0x1400097e1
   1400097c6:	test   r14b,0x4
   1400097ca:	jne    0x1400097e1
   1400097cc:	lea    r9,[rsp+0x40]
   1400097d1:	mov    ecx,0x30
   1400097d6:	mov    r8,rdi
   1400097d9:	mov    edx,r15d
   1400097dc:	call   0x140009b54
   1400097e1:	xor    eax,eax
   1400097e3:	cmp    DWORD PTR [rsp+0x4c],eax
   1400097e7:	jne    0x140009859
   1400097e9:	test   r13d,r13d
   1400097ec:	jle    0x140009859
   1400097ee:	mov    rdi,rbx
   1400097f1:	mov    esi,r13d
   1400097f4:	mov    rax,QWORD PTR [rbp-0x70]
   1400097f8:	lea    r9,[rbp-0x70]
   1400097fc:	lea    rcx,[rsp+0x60]
   140009801:	movsxd r8,DWORD PTR [rax+0xd4]
   140009808:	mov    rdx,rdi
   14000980b:	dec    esi
   14000980d:	call   0x14001247c
   140009812:	xor    r10d,r10d
   140009815:	movsxd r12,eax
   140009818:	test   eax,eax
   14000981a:	jle    0x140009846
   14000981c:	mov    rdx,QWORD PTR [rsp+0x70]
   140009821:	movzx  ecx,WORD PTR [rsp+0x60]
   140009826:	lea    r8,[rsp+0x40]
   14000982b:	call   0x140009b1c
   140009830:	add    rdi,r12
   140009833:	xor    r10d,r10d
   140009836:	test   esi,esi
   140009838:	jg     0x1400097f4
   14000983a:	mov    r12,QWORD PTR [rsp+0x50]
   14000983f:	mov    rdi,QWORD PTR [rsp+0x70]
   140009844:	jmp    0x140009878
   140009846:	mov    r12,QWORD PTR [rsp+0x50]
   14000984b:	mov    rdi,QWORD PTR [rsp+0x70]
   140009850:	or     esi,0xffffffff
   140009853:	mov    DWORD PTR [rsp+0x40],esi
   140009857:	jmp    0x14000987c
   140009859:	mov    rax,QWORD PTR [rbp-0x48]
   14000985d:	lea    r9,[rsp+0x40]
   140009862:	mov    r8,rdi
   140009865:	mov    edx,r13d
   140009868:	mov    rcx,rbx
   14000986b:	mov    QWORD PTR [rsp+0x20],rax
   140009870:	call   0x140009ba8
   140009875:	xor    r10d,r10d
   140009878:	mov    esi,DWORD PTR [rsp+0x40]
   14000987c:	test   esi,esi
   14000987e:	js     0x1400098a2
   140009880:	test   r14b,0x4
   140009884:	je     0x1400098a2
   140009886:	lea    r9,[rsp+0x40]
   14000988b:	mov    ecx,0x20
   140009890:	mov    r8,rdi
   140009893:	mov    edx,r15d
   140009896:	call   0x140009b54
   14000989b:	mov    esi,DWORD PTR [rsp+0x40]
   14000989f:	xor    r10d,r10d
   1400098a2:	mov    r11d,0x20
   1400098a8:	mov    rax,QWORD PTR [rbp-0x50]
   1400098ac:	test   rax,rax
   1400098af:	je     0x1400098c4
   1400098b1:	mov    rcx,rax
   1400098b4:	call   0x140007dc0
   1400098b9:	xor    r10d,r10d
   1400098bc:	lea    r11d,[r10+0x20]
   1400098c0:	mov    QWORD PTR [rbp-0x50],r10
   1400098c4:	mov    edi,DWORD PTR [rsp+0x44]
   1400098c8:	mov    r8,QWORD PTR [rbp-0x78]
   1400098cc:	mov    edx,DWORD PTR [rsp+0x68]
   1400098d0:	mov    r9d,0x200
   1400098d6:	movzx  r15d,WORD PTR [r8]
   1400098da:	test   r15w,r15w
   1400098de:	jne    0x140009150
   1400098e4:	cmp    BYTE PTR [rbp-0x58],r10b
   1400098e8:	je     0x1400098f5
   1400098ea:	mov    rcx,QWORD PTR [rbp-0x60]
   1400098ee:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400098f5:	mov    eax,esi
   1400098f7:	mov    rcx,QWORD PTR [rbp+0x3d0]
   1400098fe:	xor    rcx,rsp
   140009901:	call   0x14000c380
   140009906:	mov    rbx,QWORD PTR [rsp+0x530]
   14000990e:	add    rsp,0x4e0
   140009915:	pop    r15
   140009917:	pop    r14
   140009919:	pop    r13
   14000991b:	pop    r12
   14000991d:	pop    rdi
   14000991e:	pop    rsi
   14000991f:	pop    rbp
   140009920:	ret    
   140009921:	movzx  eax,r15w
   140009925:	cmp    eax,0x49
   140009928:	je     0x140009966
   14000992a:	cmp    eax,0x68
   14000992d:	je     0x14000995e
   14000992f:	mov    ecx,0x6c
   140009934:	cmp    eax,ecx
   140009936:	je     0x140009944
   140009938:	cmp    eax,0x77
   14000993b:	jne    0x1400098d6
   14000993d:	bts    r14d,0xb
   140009942:	jmp    0x1400098d6
   140009944:	cmp    WORD PTR [r8],cx
   140009948:	jne    0x140009955
   14000994a:	add    r8,0x2
   14000994e:	bts    r14d,0xc
   140009953:	jmp    0x1400098d6
   140009955:	or     r14d,0x10
   140009959:	jmp    0x1400098d6
   14000995e:	or     r14d,r11d
   140009961:	jmp    0x1400098d6
   140009966:	movzx  eax,WORD PTR [r8]
   14000996a:	bts    r14d,0xf
   14000996f:	cmp    ax,0x36
   140009973:	jne    0x14000998b
   140009975:	cmp    WORD PTR [r8+0x2],0x34
   14000997b:	jne    0x14000998b
   14000997d:	add    r8,0x4
   140009981:	bts    r14d,0xf
   140009986:	jmp    0x1400098d6
   14000998b:	cmp    ax,0x33
   14000998f:	jne    0x1400099a7
   140009991:	cmp    WORD PTR [r8+0x2],0x32
   140009997:	jne    0x1400099a7
   140009999:	add    r8,0x4
   14000999d:	btr    r14d,0xf
   1400099a2:	jmp    0x1400098d6
   1400099a7:	sub    ax,0x58
   1400099ab:	cmp    ax,r11w
   1400099af:	ja     0x1400099c5
   1400099b1:	movabs rcx,0x120821001
   1400099bb:	bt     rcx,rax
   1400099bf:	jb     0x1400098d6
   1400099c5:	mov    DWORD PTR [rsp+0x68],r10d
   1400099ca:	mov    rdx,QWORD PTR [rsp+0x70]
   1400099cf:	lea    r8,[rsp+0x40]
   1400099d4:	movzx  ecx,r15w
   1400099d8:	mov    DWORD PTR [rsp+0x4c],0x1
   1400099e0:	call   0x140009b1c
   1400099e5:	mov    esi,DWORD PTR [rsp+0x40]
   1400099e9:	xor    r10d,r10d
   1400099ec:	lea    r11d,[r10+0x20]
   1400099f0:	jmp    0x1400098c8
   1400099f5:	cmp    r15w,0x2a
   1400099fa:	jne    0x140009a1a
   1400099fc:	mov    edi,DWORD PTR [r12]
   140009a00:	add    r12,0x8
   140009a04:	mov    QWORD PTR [rsp+0x50],r12
   140009a09:	mov    DWORD PTR [rsp+0x44],edi
   140009a0d:	test   edi,edi
   140009a0f:	jns    0x1400098d6
   140009a15:	or     edi,0xffffffff
   140009a18:	jmp    0x140009a27
   140009a1a:	lea    edi,[rdi+rdi*4]
   140009a1d:	movzx  eax,r15w
   140009a21:	lea    edi,[rdi-0x18]
   140009a24:	lea    edi,[rax+rdi*2]
   140009a27:	mov    DWORD PTR [rsp+0x44],edi
   140009a2b:	jmp    0x1400098d6
   140009a30:	mov    edi,r10d
   140009a33:	mov    DWORD PTR [rsp+0x44],r10d
   140009a38:	jmp    0x1400098d6
   140009a3d:	cmp    r15w,0x2a
   140009a42:	jne    0x140009a65
   140009a44:	mov    eax,DWORD PTR [r12]
   140009a48:	add    r12,0x8
   140009a4c:	mov    QWORD PTR [rsp+0x50],r12
   140009a51:	mov    DWORD PTR [rsp+0x58],eax
   140009a55:	test   eax,eax
   140009a57:	jns    0x1400098d6
   140009a5d:	or     r14d,0x4
   140009a61:	neg    eax
   140009a63:	jmp    0x140009a76
   140009a65:	mov    eax,DWORD PTR [rsp+0x58]
   140009a69:	lea    ecx,[rax+rax*4]
   140009a6c:	movzx  eax,r15w
   140009a70:	lea    eax,[rax+rcx*2]
   140009a73:	add    eax,0xffffffd0
   140009a76:	mov    DWORD PTR [rsp+0x58],eax
   140009a7a:	jmp    0x1400098d6
   140009a7f:	movzx  eax,r15w
   140009a83:	cmp    eax,r11d
   140009a86:	je     0x140009ad1
   140009a88:	cmp    eax,0x23
   140009a8b:	je     0x140009ac7
   140009a8d:	mov    ecx,0x2b
   140009a92:	cmp    eax,ecx
   140009a94:	je     0x140009abe
   140009a96:	mov    ecx,0x2d
   140009a9b:	cmp    eax,ecx
   140009a9d:	je     0x140009ab5
   140009a9f:	mov    ecx,0x30
   140009aa4:	cmp    eax,ecx
   140009aa6:	jne    0x1400098d6
   140009aac:	or     r14d,0x8
   140009ab0:	jmp    0x1400098d6
   140009ab5:	or     r14d,0x4
   140009ab9:	jmp    0x1400098d6
   140009abe:	or     r14d,0x1
   140009ac2:	jmp    0x1400098d6
   140009ac7:	bts    r14d,0x7
   140009acc:	jmp    0x1400098d6
   140009ad1:	or     r14d,0x2
   140009ad5:	jmp    0x1400098d6
   140009ada:	or     edi,0xffffffff
   140009add:	mov    DWORD PTR [rsp+0x7c],r10d
   140009ae2:	mov    DWORD PTR [rsp+0x78],r10d
   140009ae7:	mov    DWORD PTR [rsp+0x58],r10d
   140009aec:	mov    DWORD PTR [rsp+0x48],r10d
   140009af1:	mov    r14d,r10d
   140009af4:	mov    DWORD PTR [rsp+0x44],edi
   140009af8:	mov    DWORD PTR [rsp+0x4c],r10d
   140009afd:	jmp    0x1400098d6
   140009b02:	int3   
   140009b03:	int3   
   140009b04:	add    QWORD PTR [rcx],0x8
   140009b08:	mov    rax,QWORD PTR [rcx]
   140009b0b:	mov    rax,QWORD PTR [rax-0x8]
   140009b0f:	ret    
   140009b10:	add    QWORD PTR [rcx],0x8
   140009b14:	mov    rax,QWORD PTR [rcx]
   140009b17:	mov    eax,DWORD PTR [rax-0x8]
   140009b1a:	ret    
   140009b1b:	int3   
   140009b1c:	rex push rbx
   140009b1e:	sub    rsp,0x20
   140009b22:	test   BYTE PTR [rdx+0x18],0x40
   140009b26:	mov    rbx,r8
   140009b29:	je     0x140009b37
   140009b2b:	cmp    QWORD PTR [rdx+0x10],0x0
   140009b30:	jne    0x140009b37
   140009b32:	inc    DWORD PTR [r8]
   140009b35:	jmp    0x140009b4d
   140009b37:	call   0x140012218
   140009b3c:	mov    ecx,0xffff
   140009b41:	cmp    ax,cx
   140009b44:	jne    0x140009b4b
   140009b46:	or     DWORD PTR [rbx],0xffffffff
   140009b49:	jmp    0x140009b4d
   140009b4b:	inc    DWORD PTR [rbx]
   140009b4d:	add    rsp,0x20
   140009b51:	pop    rbx
   140009b52:	ret    
   140009b53:	int3   
   140009b54:	test   edx,edx
   140009b56:	jle    0x140009ba4
   140009b58:	mov    QWORD PTR [rsp+0x8],rbx
   140009b5d:	mov    QWORD PTR [rsp+0x10],rbp
   140009b62:	mov    QWORD PTR [rsp+0x18],rsi
   140009b67:	push   rdi
   140009b68:	sub    rsp,0x20
   140009b6c:	mov    rdi,r9
   140009b6f:	mov    rsi,r8
   140009b72:	mov    ebx,edx
   140009b74:	movzx  ebp,cx
   140009b77:	mov    r8,rdi
   140009b7a:	mov    rdx,rsi
   140009b7d:	movzx  ecx,bp
   140009b80:	dec    ebx
   140009b82:	call   0x140009b1c
   140009b87:	cmp    DWORD PTR [rdi],0xffffffff
   140009b8a:	je     0x140009b90
   140009b8c:	test   ebx,ebx
   140009b8e:	jg     0x140009b77
   140009b90:	mov    rbx,QWORD PTR [rsp+0x30]
   140009b95:	mov    rbp,QWORD PTR [rsp+0x38]
   140009b9a:	mov    rsi,QWORD PTR [rsp+0x40]
   140009b9f:	add    rsp,0x20
   140009ba3:	pop    rdi
   140009ba4:	ret    
   140009ba5:	int3   
   140009ba6:	int3   
   140009ba7:	int3   
   140009ba8:	mov    QWORD PTR [rsp+0x8],rbx
   140009bad:	mov    QWORD PTR [rsp+0x10],rbp
   140009bb2:	mov    QWORD PTR [rsp+0x18],rsi
   140009bb7:	push   rdi
   140009bb8:	push   r14
   140009bba:	push   r15
   140009bbc:	sub    rsp,0x20
   140009bc0:	test   BYTE PTR [r8+0x18],0x40
   140009bc5:	mov    rbx,QWORD PTR [rsp+0x60]
   140009bca:	mov    rdi,r9
   140009bcd:	mov    r15d,DWORD PTR [rbx]
   140009bd0:	mov    rbp,r8
   140009bd3:	mov    esi,edx
   140009bd5:	mov    r14,rcx
   140009bd8:	je     0x140009be6
   140009bda:	cmp    QWORD PTR [r8+0x10],0x0
   140009bdf:	jne    0x140009be6
   140009be1:	add    DWORD PTR [r9],edx
   140009be4:	jmp    0x140009c28
   140009be6:	and    DWORD PTR [rbx],0x0
   140009be9:	test   edx,edx
   140009beb:	jle    0x140009c25
   140009bed:	movzx  ecx,WORD PTR [r14]
   140009bf1:	mov    r8,rdi
   140009bf4:	mov    rdx,rbp
   140009bf7:	dec    esi
   140009bf9:	call   0x140009b1c
   140009bfe:	cmp    DWORD PTR [rdi],0xffffffff
   140009c01:	lea    r14,[r14+0x2]
   140009c05:	jne    0x140009c1c
   140009c07:	cmp    DWORD PTR [rbx],0x2a
   140009c0a:	jne    0x140009c20
   140009c0c:	mov    ecx,0x3f
   140009c11:	mov    r8,rdi
   140009c14:	mov    rdx,rbp
   140009c17:	call   0x140009b1c
   140009c1c:	test   esi,esi
   140009c1e:	jg     0x140009bed
   140009c20:	cmp    DWORD PTR [rbx],0x0
   140009c23:	jne    0x140009c28
   140009c25:	mov    DWORD PTR [rbx],r15d
   140009c28:	mov    rbx,QWORD PTR [rsp+0x40]
   140009c2d:	mov    rbp,QWORD PTR [rsp+0x48]
   140009c32:	mov    rsi,QWORD PTR [rsp+0x50]
   140009c37:	add    rsp,0x20
   140009c3b:	pop    r15
   140009c3d:	pop    r14
   140009c3f:	pop    rdi
   140009c40:	ret    
   140009c41:	int3   
   140009c42:	int3   
   140009c43:	int3   
   140009c44:	sub    rsp,0x28
   140009c48:	call   0x14000a410
   140009c4d:	test   rax,rax
   140009c50:	jne    0x140009c5b
   140009c52:	lea    rax,[rip+0x32563]        # 0x14003c1bc
   140009c59:	jmp    0x140009c5f
   140009c5b:	add    rax,0x14
   140009c5f:	add    rsp,0x28
   140009c63:	ret    
   140009c64:	mov    QWORD PTR [rsp+0x8],rbx
   140009c69:	push   rdi
   140009c6a:	sub    rsp,0x20
   140009c6e:	mov    edi,ecx
   140009c70:	call   0x14000a410
   140009c75:	test   rax,rax
   140009c78:	jne    0x140009c83
   140009c7a:	lea    rax,[rip+0x3253b]        # 0x14003c1bc
   140009c81:	jmp    0x140009c87
   140009c83:	add    rax,0x14
   140009c87:	mov    DWORD PTR [rax],edi
   140009c89:	call   0x14000a410
   140009c8e:	lea    rbx,[rip+0x32523]        # 0x14003c1b8
   140009c95:	test   rax,rax
   140009c98:	je     0x140009c9e
   140009c9a:	lea    rbx,[rax+0x10]
   140009c9e:	mov    ecx,edi
   140009ca0:	call   0x140009d4c
   140009ca5:	mov    DWORD PTR [rbx],eax
   140009ca7:	mov    rbx,QWORD PTR [rsp+0x30]
   140009cac:	add    rsp,0x20
   140009cb0:	pop    rdi
   140009cb1:	ret    
   140009cb2:	int3   
   140009cb3:	int3   
   140009cb4:	sub    rsp,0x28
   140009cb8:	call   0x14000a410
   140009cbd:	test   rax,rax
   140009cc0:	jne    0x140009ccb
   140009cc2:	lea    rax,[rip+0x324ef]        # 0x14003c1b8
   140009cc9:	jmp    0x140009ccf
   140009ccb:	add    rax,0x10
   140009ccf:	add    rsp,0x28
   140009cd3:	ret    
   140009cd4:	rex push rbx
   140009cd6:	sub    rsp,0x20
   140009cda:	mov    rbx,rcx
   140009cdd:	test   rcx,rcx
   140009ce0:	jne    0x140009cec
   140009ce2:	call   0x140008d58
   140009ce7:	lea    eax,[rbx+0x16]
   140009cea:	jmp    0x140009d09
   140009cec:	call   0x14000a410
   140009cf1:	test   rax,rax
   140009cf4:	jne    0x140009cff
   140009cf6:	lea    rax,[rip+0x324bf]        # 0x14003c1bc
   140009cfd:	jmp    0x140009d03
   140009cff:	add    rax,0x14
   140009d03:	mov    eax,DWORD PTR [rax]
   140009d05:	mov    DWORD PTR [rbx],eax
   140009d07:	xor    eax,eax
   140009d09:	add    rsp,0x20
   140009d0d:	pop    rbx
   140009d0e:	ret    
   140009d0f:	int3   
   140009d10:	rex push rbx
   140009d12:	sub    rsp,0x20
   140009d16:	mov    rbx,rcx
   140009d19:	test   rcx,rcx
   140009d1c:	jne    0x140009d28
   140009d1e:	call   0x140008d58
   140009d23:	lea    eax,[rbx+0x16]
   140009d26:	jmp    0x140009d45
   140009d28:	call   0x14000a410
   140009d2d:	test   rax,rax
   140009d30:	jne    0x140009d3b
   140009d32:	lea    rax,[rip+0x3247f]        # 0x14003c1b8
   140009d39:	jmp    0x140009d3f
   140009d3b:	add    rax,0x10
   140009d3f:	mov    eax,DWORD PTR [rax]
   140009d41:	mov    DWORD PTR [rbx],eax
   140009d43:	xor    eax,eax
   140009d45:	add    rsp,0x20
   140009d49:	pop    rbx
   140009d4a:	ret    
   140009d4b:	int3   
   140009d4c:	lea    r10,[rip+0x322fd]        # 0x14003c050
   140009d53:	xor    edx,edx
   140009d55:	mov    r8,r10
   140009d58:	lea    r9d,[rdx+0x8]
   140009d5c:	cmp    ecx,DWORD PTR [r8]
   140009d5f:	je     0x140009d90
   140009d61:	inc    edx
   140009d63:	add    r8,r9
   140009d66:	movsxd rax,edx
   140009d69:	cmp    rax,0x2d
   140009d6d:	jb     0x140009d5c
   140009d6f:	lea    eax,[rcx-0x13]
   140009d72:	cmp    eax,0x11
   140009d75:	ja     0x140009d7d
   140009d77:	mov    eax,0xd
   140009d7c:	ret    
   140009d7d:	add    ecx,0xffffff44
   140009d83:	mov    eax,0x16
   140009d88:	cmp    ecx,0xe
   140009d8b:	cmovbe eax,r9d
   140009d8f:	ret    
   140009d90:	movsxd rax,edx
   140009d93:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   140009d98:	ret    
   140009d99:	int3   
   140009d9a:	int3   
   140009d9b:	int3   
   140009d9c:	rex push rbx
   140009d9e:	sub    rsp,0x20
   140009da2:	mov    ebx,ecx
   140009da4:	call   0x14000a410
   140009da9:	test   rax,rax
   140009dac:	jne    0x140009db5
   140009dae:	mov    eax,0xc
   140009db3:	jmp    0x140009dd0
   140009db5:	call   0x14000a410
   140009dba:	test   rax,rax
   140009dbd:	jne    0x140009dc8
   140009dbf:	lea    rax,[rip+0x323f6]        # 0x14003c1bc
   140009dc6:	jmp    0x140009dcc
   140009dc8:	add    rax,0x14
   140009dcc:	mov    DWORD PTR [rax],ebx
   140009dce:	xor    eax,eax
   140009dd0:	add    rsp,0x20
   140009dd4:	pop    rbx
   140009dd5:	ret    
   140009dd6:	int3   
   140009dd7:	int3   
   140009dd8:	rex push rbx
   140009dda:	sub    rsp,0x20
   140009dde:	mov    ebx,ecx
   140009de0:	call   0x14000a410
   140009de5:	test   rax,rax
   140009de8:	jne    0x140009df1
   140009dea:	mov    eax,0xc
   140009def:	jmp    0x140009e0c
   140009df1:	call   0x14000a410
   140009df6:	test   rax,rax
   140009df9:	jne    0x140009e04
   140009dfb:	lea    rax,[rip+0x323b6]        # 0x14003c1b8
   140009e02:	jmp    0x140009e08
   140009e04:	add    rax,0x10
   140009e08:	mov    DWORD PTR [rax],ebx
   140009e0a:	xor    eax,eax
   140009e0c:	add    rsp,0x20
   140009e10:	pop    rbx
   140009e11:	ret    
   140009e12:	int3   
   140009e13:	int3   
   140009e14:	rex push rbx
   140009e16:	sub    rsp,0x20
   140009e1a:	call   0x140013140
   140009e1f:	mov    ebx,eax
   140009e21:	and    ebx,0x3f
   140009e24:	call   0x14001315a
   140009e29:	mov    eax,ebx
   140009e2b:	add    rsp,0x20
   140009e2f:	pop    rbx
   140009e30:	ret    
   140009e31:	int3   
   140009e32:	int3   
   140009e33:	int3   
   140009e34:	mov    QWORD PTR [rsp+0x18],rbx
   140009e39:	mov    QWORD PTR [rsp+0x20],rsi
   140009e3e:	push   rdi
   140009e3f:	sub    rsp,0x20
   140009e43:	mov    rbx,rdx
   140009e46:	mov    rdi,rcx
   140009e49:	call   0x140013140
   140009e4e:	mov    esi,eax
   140009e50:	mov    DWORD PTR [rsp+0x38],eax
   140009e54:	mov    ecx,ebx
   140009e56:	not    ecx
   140009e58:	or     ecx,0xffff807f
   140009e5e:	and    ecx,eax
   140009e60:	and    edi,ebx
   140009e62:	or     ecx,edi
   140009e64:	mov    DWORD PTR [rsp+0x30],ecx
   140009e68:	cmp    BYTE PTR [rip+0x32351],0x0        # 0x14003c1c0
   140009e6f:	je     0x140009e96
   140009e71:	test   cl,0x40
   140009e74:	je     0x140009e96
   140009e76:	call   0x140013150
   140009e7b:	jmp    0x140009e94
   140009e7d:	mov    BYTE PTR [rip+0x3233c],0x0        # 0x14003c1c0
   140009e84:	mov    ecx,DWORD PTR [rsp+0x30]
   140009e88:	and    ecx,0xffffffbf
   140009e8b:	call   0x140013150
   140009e90:	mov    esi,DWORD PTR [rsp+0x38]
   140009e94:	jmp    0x140009e9e
   140009e96:	and    ecx,0xffffffbf
   140009e99:	call   0x140013150
   140009e9e:	mov    eax,esi
   140009ea0:	mov    rbx,QWORD PTR [rsp+0x40]
   140009ea5:	mov    rsi,QWORD PTR [rsp+0x48]
   140009eaa:	add    rsp,0x20
   140009eae:	pop    rdi
   140009eaf:	ret    
   140009eb0:	rex push rbx
   140009eb2:	sub    rsp,0x20
   140009eb6:	mov    rbx,rcx
   140009eb9:	call   0x140013140
   140009ebe:	and    ebx,0x3f
   140009ec1:	or     eax,ebx
   140009ec3:	mov    ecx,eax
   140009ec5:	add    rsp,0x20
   140009ec9:	pop    rbx
   140009eca:	jmp    0x140013150
   140009ecf:	int3   
   140009ed0:	sub    rsp,0x28
   140009ed4:	call   0x140013140
   140009ed9:	and    eax,0x3f
   140009edc:	add    rsp,0x28
   140009ee0:	ret    
   140009ee1:	int3   
   140009ee2:	int3   
   140009ee3:	int3   
   140009ee4:	mov    rax,rsp
   140009ee7:	push   rbx
   140009ee8:	sub    rsp,0x50
   140009eec:	movsd  xmm0,QWORD PTR [rsp+0x80]
   140009ef5:	movsd  xmm1,QWORD PTR [rsp+0x88]
   140009efe:	mov    ebx,ecx
   140009f00:	mov    DWORD PTR [rax-0x38],ecx
   140009f03:	mov    rcx,QWORD PTR [rsp+0x90]
   140009f0b:	mov    edx,0xffc0
   140009f10:	movsd  QWORD PTR [rax-0x28],xmm3
   140009f15:	movsd  QWORD PTR [rax-0x20],xmm0
   140009f1a:	movsd  QWORD PTR [rax-0x18],xmm1
   140009f1f:	mov    QWORD PTR [rax-0x30],r8
   140009f23:	call   0x140009e34
   140009f28:	lea    rcx,[rsp+0x20]
   140009f2d:	call   0x140013b80
   140009f32:	test   eax,eax
   140009f34:	jne    0x140009f3d
   140009f36:	mov    ecx,ebx
   140009f38:	call   0x140013a7c
   140009f3d:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140009f43:	add    rsp,0x50
   140009f47:	pop    rbx
   140009f48:	ret    
   140009f49:	int3   
   140009f4a:	int3   
   140009f4b:	int3   
   140009f4c:	mov    QWORD PTR [rsp+0x8],rbx
   140009f51:	mov    QWORD PTR [rsp+0x10],rsi
   140009f56:	push   rdi
   140009f57:	sub    rsp,0x20
   140009f5b:	mov    ebx,ecx
   140009f5d:	mov    rsi,rdx
   140009f60:	mov    edi,ecx
   140009f62:	and    ebx,0x1f
   140009f65:	test   cl,0x8
   140009f68:	je     0x140009f7d
   140009f6a:	test   dl,dl
   140009f6c:	jns    0x140009f7d
   140009f6e:	mov    ecx,0x1
   140009f73:	call   0x140009eb0
   140009f78:	and    ebx,0xfffffff7
   140009f7b:	jmp    0x140009fd4
   140009f7d:	mov    ecx,0x4
   140009f82:	test   cl,dil
   140009f85:	je     0x140009f98
   140009f87:	bt     rdx,0x9
   140009f8c:	jae    0x140009f98
   140009f8e:	call   0x140009eb0
   140009f93:	and    ebx,0xfffffffb
   140009f96:	jmp    0x140009fd4
   140009f98:	test   dil,0x1
   140009f9c:	je     0x140009fb4
   140009f9e:	bt     rdx,0xa
   140009fa3:	jae    0x140009fb4
   140009fa5:	mov    ecx,0x8
   140009faa:	call   0x140009eb0
   140009faf:	and    ebx,0xfffffffe
   140009fb2:	jmp    0x140009fd4
   140009fb4:	test   dil,0x2
   140009fb8:	je     0x140009fd4
   140009fba:	bt     rdx,0xb
   140009fbf:	jae    0x140009fd4
   140009fc1:	test   dil,0x10
   140009fc5:	je     0x140009fd1
   140009fc7:	mov    ecx,0x10
   140009fcc:	call   0x140009eb0
   140009fd1:	and    ebx,0xfffffffd
   140009fd4:	test   dil,0x10
   140009fd8:	je     0x140009fee
   140009fda:	bt     rsi,0xc
   140009fdf:	jae    0x140009fee
   140009fe1:	mov    ecx,0x20
   140009fe6:	call   0x140009eb0
   140009feb:	and    ebx,0xffffffef
   140009fee:	mov    rsi,QWORD PTR [rsp+0x38]
   140009ff3:	xor    eax,eax
   140009ff5:	test   ebx,ebx
   140009ff7:	mov    rbx,QWORD PTR [rsp+0x30]
   140009ffc:	sete   al
   140009fff:	add    rsp,0x20
   14000a003:	pop    rdi
   14000a004:	ret    
   14000a005:	int3   
   14000a006:	int3   
   14000a007:	int3   
   14000a008:	mov    rax,rsp
   14000a00b:	push   rbp
   14000a00c:	push   rbx
   14000a00d:	push   rsi
   14000a00e:	push   rdi
   14000a00f:	push   r14
   14000a011:	lea    rbp,[rax-0x37]
   14000a015:	sub    rsp,0xf0
   14000a01c:	movaps XMMWORD PTR [rax-0x38],xmm6
   14000a020:	mov    rax,QWORD PTR [rip+0x321a9]        # 0x14003c1d0
   14000a027:	xor    rax,rsp
   14000a02a:	mov    QWORD PTR [rbp-0x11],rax
   14000a02e:	mov    esi,edx
   14000a030:	mov    r14,rcx
   14000a033:	mov    edx,0xffc0
   14000a038:	mov    ecx,0x1f80
   14000a03d:	mov    edi,r9d
   14000a040:	mov    rbx,r8
   14000a043:	call   0x140009e34
   14000a048:	mov    ecx,DWORD PTR [rbp+0x5f]
   14000a04b:	mov    QWORD PTR [rsp+0x40],rax
   14000a050:	mov    QWORD PTR [rsp+0x50],rbx
   14000a055:	movsd  xmm0,QWORD PTR [rsp+0x50]
   14000a05b:	mov    rdx,QWORD PTR [rsp+0x40]
   14000a060:	movsd  QWORD PTR [rsp+0x48],xmm0
   14000a066:	call   0x140009f4c
   14000a06b:	movsd  xmm6,QWORD PTR [rbp+0x77]
   14000a070:	test   eax,eax
   14000a072:	jne    0x14000a0b4
   14000a074:	cmp    DWORD PTR [rbp+0x7f],0x2
   14000a078:	jne    0x14000a08b
   14000a07a:	mov    eax,DWORD PTR [rbp-0x41]
   14000a07d:	movsd  QWORD PTR [rbp-0x51],xmm6
   14000a082:	and    eax,0xffffffe3
   14000a085:	or     eax,0x3
   14000a088:	mov    DWORD PTR [rbp-0x41],eax
   14000a08b:	mov    r8d,DWORD PTR [rbp+0x5f]
   14000a08f:	lea    rax,[rsp+0x48]
   14000a094:	lea    rdx,[rsp+0x40]
   14000a099:	mov    QWORD PTR [rsp+0x28],rax
   14000a09e:	lea    rax,[rbp+0x6f]
   14000a0a2:	lea    rcx,[rsp+0x60]
   14000a0a7:	mov    r9d,esi
   14000a0aa:	mov    QWORD PTR [rsp+0x20],rax
   14000a0af:	call   0x140013724
   14000a0b4:	cmp    DWORD PTR [rip+0x33345],0x0        # 0x14003d400
   14000a0bb:	jne    0x14000a0f1
   14000a0bd:	test   edi,edi
   14000a0bf:	je     0x14000a0f1
   14000a0c1:	mov    rax,QWORD PTR [rsp+0x40]
   14000a0c6:	movsd  xmm0,QWORD PTR [rsp+0x48]
   14000a0cc:	mov    edx,DWORD PTR [rbp+0x67]
   14000a0cf:	movsd  xmm3,QWORD PTR [rbp+0x6f]
   14000a0d4:	mov    QWORD PTR [rsp+0x30],rax
   14000a0d9:	mov    r8,r14
   14000a0dc:	mov    ecx,edi
   14000a0de:	movsd  QWORD PTR [rsp+0x28],xmm0
   14000a0e4:	movsd  QWORD PTR [rsp+0x20],xmm6
   14000a0ea:	call   0x140009ee4
   14000a0ef:	jmp    0x14000a10d
   14000a0f1:	mov    ecx,edi
   14000a0f3:	call   0x140013a7c
   14000a0f8:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a0fd:	mov    edx,0xffc0
   14000a102:	call   0x140009e34
   14000a107:	movsd  xmm0,QWORD PTR [rsp+0x48]
   14000a10d:	mov    rcx,QWORD PTR [rbp-0x11]
   14000a111:	xor    rcx,rsp
   14000a114:	call   0x14000c380
   14000a119:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14000a121:	add    rsp,0xf0
   14000a128:	pop    r14
   14000a12a:	pop    rdi
   14000a12b:	pop    rsi
   14000a12c:	pop    rbx
   14000a12d:	pop    rbp
   14000a12e:	ret    
   14000a12f:	int3   
   14000a130:	mov    rax,rsp
   14000a133:	push   rbp
   14000a134:	push   rbx
   14000a135:	push   rsi
   14000a136:	push   rdi
   14000a137:	push   r14
   14000a139:	lea    rbp,[rax-0x37]
   14000a13d:	sub    rsp,0xf0
   14000a144:	movaps XMMWORD PTR [rax-0x38],xmm6
   14000a148:	mov    rax,QWORD PTR [rip+0x32081]        # 0x14003c1d0
   14000a14f:	xor    rax,rsp
   14000a152:	mov    QWORD PTR [rbp-0x11],rax
   14000a156:	mov    esi,edx
   14000a158:	mov    r14,rcx
   14000a15b:	mov    edx,0xffc0
   14000a160:	mov    ecx,0x1f80
   14000a165:	mov    edi,r9d
   14000a168:	mov    rbx,r8
   14000a16b:	call   0x140009e34
   14000a170:	mov    ecx,DWORD PTR [rbp+0x5f]
   14000a173:	mov    QWORD PTR [rsp+0x48],rax
   14000a178:	mov    DWORD PTR [rsp+0x50],ebx
   14000a17c:	movss  xmm0,DWORD PTR [rsp+0x50]
   14000a182:	mov    rdx,QWORD PTR [rsp+0x48]
   14000a187:	movss  DWORD PTR [rsp+0x40],xmm0
   14000a18d:	call   0x140009f4c
   14000a192:	movss  xmm6,DWORD PTR [rbp+0x77]
   14000a197:	test   eax,eax
   14000a199:	jne    0x14000a1db
   14000a19b:	cmp    DWORD PTR [rbp+0x7f],0x2
   14000a19f:	jne    0x14000a1b2
   14000a1a1:	mov    eax,DWORD PTR [rbp-0x41]
   14000a1a4:	movss  DWORD PTR [rbp-0x51],xmm6
   14000a1a9:	and    eax,0xffffffe1
   14000a1ac:	or     eax,0x1
   14000a1af:	mov    DWORD PTR [rbp-0x41],eax
   14000a1b2:	mov    r8d,DWORD PTR [rbp+0x5f]
   14000a1b6:	lea    rax,[rsp+0x40]
   14000a1bb:	lea    rdx,[rsp+0x48]
   14000a1c0:	mov    QWORD PTR [rsp+0x28],rax
   14000a1c5:	lea    rax,[rbp+0x6f]
   14000a1c9:	lea    rcx,[rsp+0x60]
   14000a1ce:	mov    r9d,esi
   14000a1d1:	mov    QWORD PTR [rsp+0x20],rax
   14000a1d6:	call   0x140013a50
   14000a1db:	cmp    DWORD PTR [rip+0x3321e],0x0        # 0x14003d400
   14000a1e2:	jne    0x14000a225
   14000a1e4:	test   edi,edi
   14000a1e6:	je     0x14000a225
   14000a1e8:	movss  xmm0,DWORD PTR [rsp+0x40]
   14000a1ee:	movss  xmm3,DWORD PTR [rbp+0x6f]
   14000a1f3:	mov    rax,QWORD PTR [rsp+0x48]
   14000a1f8:	mov    edx,DWORD PTR [rbp+0x67]
   14000a1fb:	mov    QWORD PTR [rsp+0x30],rax
   14000a200:	mov    r8,r14
   14000a203:	cvtps2pd xmm0,xmm0
   14000a206:	cvtps2pd xmm1,xmm6
   14000a209:	cvtps2pd xmm3,xmm3
   14000a20c:	mov    ecx,edi
   14000a20e:	movsd  QWORD PTR [rsp+0x28],xmm0
   14000a214:	movsd  QWORD PTR [rsp+0x20],xmm1
   14000a21a:	call   0x140009ee4
   14000a21f:	cvtsd2ss xmm0,xmm0
   14000a223:	jmp    0x14000a241
   14000a225:	mov    ecx,edi
   14000a227:	call   0x140013a7c
   14000a22c:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a231:	mov    edx,0xffc0
   14000a236:	call   0x140009e34
   14000a23b:	movss  xmm0,DWORD PTR [rsp+0x40]
   14000a241:	mov    rcx,QWORD PTR [rbp-0x11]
   14000a245:	xor    rcx,rsp
   14000a248:	call   0x14000c380
   14000a24d:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14000a255:	add    rsp,0xf0
   14000a25c:	pop    r14
   14000a25e:	pop    rdi
   14000a25f:	pop    rsi
   14000a260:	pop    rbx
   14000a261:	pop    rbp
   14000a262:	ret    
   14000a263:	int3   
   14000a264:	mov    eax,DWORD PTR [rip+0x31f5a]        # 0x14003c1c4
   14000a26a:	ret    
   14000a26b:	int3   
   14000a26c:	rex.W jmp QWORD PTR [rip+0x21f3d]        # 0x14002c1b0
   14000a273:	int3   
   14000a274:	rex.W jmp QWORD PTR [rip+0x21f3d]        # 0x14002c1b8
   14000a27b:	int3   
   14000a27c:	test   rcx,rcx
   14000a27f:	je     0x14000a3ae
   14000a285:	mov    QWORD PTR [rsp+0x10],rbx
   14000a28a:	push   rdi
   14000a28b:	sub    rsp,0x20
   14000a28f:	mov    rbx,rcx
   14000a292:	mov    rcx,QWORD PTR [rcx+0x38]
   14000a296:	test   rcx,rcx
   14000a299:	je     0x14000a2a0
   14000a29b:	call   0x140007dc0
   14000a2a0:	mov    rcx,QWORD PTR [rbx+0x48]
   14000a2a4:	test   rcx,rcx
   14000a2a7:	je     0x14000a2ae
   14000a2a9:	call   0x140007dc0
   14000a2ae:	mov    rcx,QWORD PTR [rbx+0x58]
   14000a2b2:	test   rcx,rcx
   14000a2b5:	je     0x14000a2bc
   14000a2b7:	call   0x140007dc0
   14000a2bc:	mov    rcx,QWORD PTR [rbx+0x68]
   14000a2c0:	test   rcx,rcx
   14000a2c3:	je     0x14000a2ca
   14000a2c5:	call   0x140007dc0
   14000a2ca:	mov    rcx,QWORD PTR [rbx+0x70]
   14000a2ce:	test   rcx,rcx
   14000a2d1:	je     0x14000a2d8
   14000a2d3:	call   0x140007dc0
   14000a2d8:	mov    rcx,QWORD PTR [rbx+0x78]
   14000a2dc:	test   rcx,rcx
   14000a2df:	je     0x14000a2e6
   14000a2e1:	call   0x140007dc0
   14000a2e6:	mov    rcx,QWORD PTR [rbx+0x80]
   14000a2ed:	test   rcx,rcx
   14000a2f0:	je     0x14000a2f7
   14000a2f2:	call   0x140007dc0
   14000a2f7:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000a2fe:	lea    rax,[rip+0x2481b]        # 0x14002eb20
   14000a305:	cmp    rcx,rax
   14000a308:	je     0x14000a30f
   14000a30a:	call   0x140007dc0
   14000a30f:	mov    edi,0xd
   14000a314:	mov    ecx,edi
   14000a316:	call   0x14000fc2c
   14000a31b:	nop
   14000a31c:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000a323:	mov    QWORD PTR [rsp+0x30],rcx
   14000a328:	test   rcx,rcx
   14000a32b:	je     0x14000a349
   14000a32d:	lock dec DWORD PTR [rcx]
   14000a330:	jne    0x14000a349
   14000a332:	lea    rax,[rip+0x323a7]        # 0x14003c6e0
   14000a339:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a33e:	cmp    rcx,rax
   14000a341:	je     0x14000a349
   14000a343:	call   0x140007dc0
   14000a348:	nop
   14000a349:	mov    ecx,edi
   14000a34b:	call   0x14000fe48
   14000a350:	mov    ecx,0xc
   14000a355:	call   0x14000fc2c
   14000a35a:	nop
   14000a35b:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000a362:	test   rdi,rdi
   14000a365:	je     0x14000a392
   14000a367:	mov    rcx,rdi
   14000a36a:	call   0x140011c6c
   14000a36f:	cmp    rdi,QWORD PTR [rip+0x32d2a]        # 0x14003d0a0
   14000a376:	je     0x14000a392
   14000a378:	lea    rax,[rip+0x32d31]        # 0x14003d0b0
   14000a37f:	cmp    rdi,rax
   14000a382:	je     0x14000a392
   14000a384:	cmp    DWORD PTR [rdi],0x0
   14000a387:	jne    0x14000a392
   14000a389:	mov    rcx,rdi
   14000a38c:	call   0x140011ad4
   14000a391:	nop
   14000a392:	mov    ecx,0xc
   14000a397:	call   0x14000fe48
   14000a39c:	mov    rcx,rbx
   14000a39f:	call   0x140007dc0
   14000a3a4:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a3a9:	add    rsp,0x20
   14000a3ad:	pop    rdi
   14000a3ae:	ret    
   14000a3af:	int3   
   14000a3b0:	rex push rbx
   14000a3b2:	sub    rsp,0x20
   14000a3b6:	mov    rbx,rcx
   14000a3b9:	mov    ecx,DWORD PTR [rip+0x31e05]        # 0x14003c1c4
   14000a3bf:	cmp    ecx,0xffffffff
   14000a3c2:	je     0x14000a3e6
   14000a3c4:	test   rbx,rbx
   14000a3c7:	jne    0x14000a3d7
   14000a3c9:	call   0x14000e6c0
   14000a3ce:	mov    ecx,DWORD PTR [rip+0x31df0]        # 0x14003c1c4
   14000a3d4:	mov    rbx,rax
   14000a3d7:	xor    edx,edx
   14000a3d9:	call   0x14000e6dc
   14000a3de:	mov    rcx,rbx
   14000a3e1:	call   0x14000a27c
   14000a3e6:	add    rsp,0x20
   14000a3ea:	pop    rbx
   14000a3eb:	ret    
   14000a3ec:	rex push rbx
   14000a3ee:	sub    rsp,0x20
   14000a3f2:	call   0x14000a410
   14000a3f7:	mov    rbx,rax
   14000a3fa:	test   rax,rax
   14000a3fd:	jne    0x14000a407
   14000a3ff:	lea    ecx,[rax+0x10]
   14000a402:	call   0x1400081bc
   14000a407:	mov    rax,rbx
   14000a40a:	add    rsp,0x20
   14000a40e:	pop    rbx
   14000a40f:	ret    
   14000a410:	mov    QWORD PTR [rsp+0x8],rbx
   14000a415:	push   rdi
   14000a416:	sub    rsp,0x20
   14000a41a:	call   QWORD PTR [rip+0x21d30]        # 0x14002c150
   14000a420:	mov    ecx,DWORD PTR [rip+0x31d9e]        # 0x14003c1c4
   14000a426:	mov    edi,eax
   14000a428:	call   0x14000e6c0
   14000a42d:	mov    rbx,rax
   14000a430:	test   rax,rax
   14000a433:	jne    0x14000a47c
   14000a435:	lea    ecx,[rax+0x1]
   14000a438:	mov    edx,0x478
   14000a43d:	call   0x140008604
   14000a442:	mov    rbx,rax
   14000a445:	test   rax,rax
   14000a448:	je     0x14000a47c
   14000a44a:	mov    ecx,DWORD PTR [rip+0x31d74]        # 0x14003c1c4
   14000a450:	mov    rdx,rax
   14000a453:	call   0x14000e6dc
   14000a458:	mov    rcx,rbx
   14000a45b:	test   eax,eax
   14000a45d:	je     0x14000a475
   14000a45f:	xor    edx,edx
   14000a461:	call   0x14000a494
   14000a466:	call   QWORD PTR [rip+0x21d4c]        # 0x14002c1b8
   14000a46c:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000a471:	mov    DWORD PTR [rbx],eax
   14000a473:	jmp    0x14000a47c
   14000a475:	call   0x140007dc0
   14000a47a:	xor    ebx,ebx
   14000a47c:	mov    ecx,edi
   14000a47e:	call   QWORD PTR [rip+0x21d24]        # 0x14002c1a8
   14000a484:	mov    rax,rbx
   14000a487:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a48c:	add    rsp,0x20
   14000a490:	pop    rdi
   14000a491:	ret    
   14000a492:	int3   
   14000a493:	int3   
   14000a494:	mov    QWORD PTR [rsp+0x8],rbx
   14000a499:	push   rdi
   14000a49a:	sub    rsp,0x20
   14000a49e:	mov    rdi,rdx
   14000a4a1:	mov    rbx,rcx
   14000a4a4:	lea    rax,[rip+0x24675]        # 0x14002eb20
   14000a4ab:	mov    QWORD PTR [rcx+0xa0],rax
   14000a4b2:	and    DWORD PTR [rcx+0x10],0x0
   14000a4b6:	mov    DWORD PTR [rcx+0x1c],0x1
   14000a4bd:	mov    DWORD PTR [rcx+0xc8],0x1
   14000a4c7:	mov    eax,0x43
   14000a4cc:	mov    WORD PTR [rcx+0x164],ax
   14000a4d3:	mov    WORD PTR [rcx+0x26a],ax
   14000a4da:	lea    rax,[rip+0x321ff]        # 0x14003c6e0
   14000a4e1:	mov    QWORD PTR [rcx+0xb8],rax
   14000a4e8:	and    QWORD PTR [rcx+0x470],0x0
   14000a4f0:	mov    ecx,0xd
   14000a4f5:	call   0x14000fc2c
   14000a4fa:	nop
   14000a4fb:	mov    rax,QWORD PTR [rbx+0xb8]
   14000a502:	lock inc DWORD PTR [rax]
   14000a505:	mov    ecx,0xd
   14000a50a:	call   0x14000fe48
   14000a50f:	mov    ecx,0xc
   14000a514:	call   0x14000fc2c
   14000a519:	nop
   14000a51a:	mov    QWORD PTR [rbx+0xc0],rdi
   14000a521:	test   rdi,rdi
   14000a524:	jne    0x14000a534
   14000a526:	mov    rax,QWORD PTR [rip+0x32b73]        # 0x14003d0a0
   14000a52d:	mov    QWORD PTR [rbx+0xc0],rax
   14000a534:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000a53b:	call   0x140011a48
   14000a540:	nop
   14000a541:	mov    ecx,0xc
   14000a546:	call   0x14000fe48
   14000a54b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a550:	add    rsp,0x20
   14000a554:	pop    rdi
   14000a555:	ret    
   14000a556:	int3   
   14000a557:	int3   
   14000a558:	rex push rbx
   14000a55a:	sub    rsp,0x20
   14000a55e:	call   0x140008324
   14000a563:	call   0x14000fde4
   14000a568:	test   eax,eax
   14000a56a:	je     0x14000a5ca
   14000a56c:	lea    rcx,[rip+0xfffffffffffffd09]        # 0x14000a27c
   14000a573:	call   0x14000e688
   14000a578:	mov    DWORD PTR [rip+0x31c46],eax        # 0x14003c1c4
   14000a57e:	cmp    eax,0xffffffff
   14000a581:	je     0x14000a5ca
   14000a583:	mov    edx,0x478
   14000a588:	mov    ecx,0x1
   14000a58d:	call   0x140008604
   14000a592:	mov    rbx,rax
   14000a595:	test   rax,rax
   14000a598:	je     0x14000a5ca
   14000a59a:	mov    ecx,DWORD PTR [rip+0x31c24]        # 0x14003c1c4
   14000a5a0:	mov    rdx,rax
   14000a5a3:	call   0x14000e6dc
   14000a5a8:	test   eax,eax
   14000a5aa:	je     0x14000a5ca
   14000a5ac:	xor    edx,edx
   14000a5ae:	mov    rcx,rbx
   14000a5b1:	call   0x14000a494
   14000a5b6:	call   QWORD PTR [rip+0x21bfc]        # 0x14002c1b8
   14000a5bc:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000a5c1:	mov    DWORD PTR [rbx],eax
   14000a5c3:	mov    eax,0x1
   14000a5c8:	jmp    0x14000a5d1
   14000a5ca:	call   0x14000a5d8
   14000a5cf:	xor    eax,eax
   14000a5d1:	add    rsp,0x20
   14000a5d5:	pop    rbx
   14000a5d6:	ret    
   14000a5d7:	int3   
   14000a5d8:	sub    rsp,0x28
   14000a5dc:	mov    ecx,DWORD PTR [rip+0x31be2]        # 0x14003c1c4
   14000a5e2:	cmp    ecx,0xffffffff
   14000a5e5:	je     0x14000a5f3
   14000a5e7:	call   0x14000e6a4
   14000a5ec:	or     DWORD PTR [rip+0x31bd1],0xffffffff        # 0x14003c1c4
   14000a5f3:	add    rsp,0x28
   14000a5f7:	jmp    0x14000fc9c
   14000a5fc:	test   rcx,rcx
   14000a5ff:	je     0x14000a669
   14000a601:	mov    BYTE PTR [rsp+0x10],dl
   14000a605:	sub    rsp,0x28
   14000a609:	cmp    DWORD PTR [rcx],0xe06d7363
   14000a60f:	jne    0x14000a665
   14000a611:	cmp    DWORD PTR [rcx+0x18],0x4
   14000a615:	jne    0x14000a665
   14000a617:	mov    eax,DWORD PTR [rcx+0x20]
   14000a61a:	sub    eax,0x19930520
   14000a61f:	cmp    eax,0x2
   14000a622:	ja     0x14000a665
   14000a624:	mov    rax,QWORD PTR [rcx+0x30]
   14000a628:	test   rax,rax
   14000a62b:	je     0x14000a665
   14000a62d:	movsxd rdx,DWORD PTR [rax+0x4]
   14000a631:	test   edx,edx
   14000a633:	je     0x14000a64e
   14000a635:	mov    rax,rdx
   14000a638:	mov    rdx,QWORD PTR [rcx+0x38]
   14000a63c:	add    rdx,rax
   14000a63f:	mov    rcx,QWORD PTR [rcx+0x28]
   14000a643:	call   rdx
   14000a645:	nop
   14000a646:	jmp    0x14000a665
   14000a648:	call   0x14000c280
   14000a64d:	nop
   14000a64e:	test   BYTE PTR [rax],0x10
   14000a651:	je     0x14000a665
   14000a653:	mov    rax,QWORD PTR [rcx+0x28]
   14000a657:	mov    rcx,QWORD PTR [rax]
   14000a65a:	test   rcx,rcx
   14000a65d:	je     0x14000a665
   14000a65f:	mov    rax,QWORD PTR [rcx]
   14000a662:	call   QWORD PTR [rax+0x10]
   14000a665:	add    rsp,0x28
   14000a669:	ret    
   14000a66a:	int3   
   14000a66b:	int3   
   14000a66c:	rex push rbx
   14000a66e:	sub    rsp,0x20
   14000a672:	mov    rbx,rcx
   14000a675:	call   0x14000772c
   14000a67a:	lea    rax,[rip+0x2446f]        # 0x14002eaf0
   14000a681:	mov    QWORD PTR [rbx],rax
   14000a684:	mov    rax,rbx
   14000a687:	add    rsp,0x20
   14000a68b:	pop    rbx
   14000a68c:	ret    
   14000a68d:	int3   
   14000a68e:	int3   
   14000a68f:	int3   
   14000a690:	mov    QWORD PTR [rsp+0x10],rdx
   14000a695:	push   rbx
   14000a696:	sub    rsp,0x20
   14000a69a:	lea    rdx,[rsp+0x38]
   14000a69f:	mov    rbx,rcx
   14000a6a2:	call   0x1400076e0
   14000a6a7:	lea    rax,[rip+0x24442]        # 0x14002eaf0
   14000a6ae:	mov    QWORD PTR [rbx],rax
   14000a6b1:	mov    rax,rbx
   14000a6b4:	add    rsp,0x20
   14000a6b8:	pop    rbx
   14000a6b9:	ret    
   14000a6ba:	int3   
   14000a6bb:	int3   
   14000a6bc:	lea    rax,[rip+0x2442d]        # 0x14002eaf0
   14000a6c3:	mov    QWORD PTR [rcx],rax
   14000a6c6:	jmp    0x1400077a0
   14000a6cb:	int3   
   14000a6cc:	mov    QWORD PTR [rsp+0x8],rbx
   14000a6d1:	push   rdi
   14000a6d2:	sub    rsp,0x20
   14000a6d6:	lea    rax,[rip+0x24413]        # 0x14002eaf0
   14000a6dd:	mov    ebx,edx
   14000a6df:	mov    rdi,rcx
   14000a6e2:	mov    QWORD PTR [rcx],rax
   14000a6e5:	call   0x1400077a0
   14000a6ea:	test   bl,0x1
   14000a6ed:	je     0x14000a6f7
   14000a6ef:	mov    rcx,rdi
   14000a6f2:	call   0x140005778
   14000a6f7:	mov    rax,rdi
   14000a6fa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a6ff:	add    rsp,0x20
   14000a703:	pop    rdi
   14000a704:	ret    
   14000a705:	int3   
   14000a706:	int3   
   14000a707:	int3   
   14000a708:	mov    rax,rsp
   14000a70b:	mov    QWORD PTR [rax+0x8],rbx
   14000a70f:	mov    QWORD PTR [rax+0x18],rbp
   14000a713:	push   rsi
   14000a714:	push   rdi
   14000a715:	push   r12
   14000a717:	push   r14
   14000a719:	push   r15
   14000a71b:	sub    rsp,0x50
   14000a71f:	mov    r15,QWORD PTR [rsp+0xa0]
   14000a727:	mov    rbp,r9
   14000a72a:	mov    r14,rdx
   14000a72d:	mov    r12,r8
   14000a730:	mov    rbx,rcx
   14000a733:	lea    r9,[rax+0x10]
   14000a737:	mov    r8,r15
   14000a73a:	mov    rdx,rbp
   14000a73d:	mov    rcx,r14
   14000a740:	call   0x14000670c
   14000a745:	mov    r9,QWORD PTR [rsp+0xb0]
   14000a74d:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000a755:	mov    rdi,rax
   14000a758:	test   r9,r9
   14000a75b:	je     0x14000a76b
   14000a75d:	mov    r8,rsi
   14000a760:	mov    rdx,rax
   14000a763:	mov    rcx,rbx
   14000a766:	call   0x14000b1f0
   14000a76b:	call   0x140006b34
   14000a770:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000a774:	mov    r9,rdi
   14000a777:	add    rax,rcx
   14000a77a:	mov    cl,BYTE PTR [rsp+0xd8]
   14000a781:	mov    r8,r12
   14000a784:	mov    BYTE PTR [rsp+0x40],cl
   14000a788:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000a790:	mov    QWORD PTR [rsp+0x38],rbp
   14000a795:	mov    edx,DWORD PTR [rcx]
   14000a797:	mov    QWORD PTR [rsp+0x30],r15
   14000a79c:	mov    rcx,r14
   14000a79f:	mov    DWORD PTR [rsp+0x28],edx
   14000a7a3:	mov    rdx,rbx
   14000a7a6:	mov    QWORD PTR [rsp+0x20],rax
   14000a7ab:	call   0x140006bdc
   14000a7b0:	lea    r11,[rsp+0x50]
   14000a7b5:	mov    rbx,QWORD PTR [r11+0x30]
   14000a7b9:	mov    rbp,QWORD PTR [r11+0x40]
   14000a7bd:	mov    rsp,r11
   14000a7c0:	pop    r15
   14000a7c2:	pop    r14
   14000a7c4:	pop    r12
   14000a7c6:	pop    rdi
   14000a7c7:	pop    rsi
   14000a7c8:	ret    
   14000a7c9:	int3   
   14000a7ca:	int3   
   14000a7cb:	int3   
   14000a7cc:	mov    QWORD PTR [rsp+0x8],rbx
   14000a7d1:	push   rdi
   14000a7d2:	sub    rsp,0x20
   14000a7d6:	mov    r9,QWORD PTR [rcx]
   14000a7d9:	and    DWORD PTR [r8],0x0
   14000a7dd:	mov    rbx,r8
   14000a7e0:	mov    r8d,0xe06d7363
   14000a7e6:	cmp    DWORD PTR [r9],r8d
   14000a7e9:	jne    0x14000a848
   14000a7eb:	cmp    DWORD PTR [r9+0x18],0x4
   14000a7f0:	mov    edi,0x1
   14000a7f5:	mov    r10d,0x19930520
   14000a7fb:	jne    0x14000a818
   14000a7fd:	mov    eax,DWORD PTR [r9+0x20]
   14000a801:	sub    eax,r10d
   14000a804:	cmp    eax,0x2
   14000a807:	ja     0x14000a818
   14000a809:	mov    rax,QWORD PTR [rdx+0x28]
   14000a80d:	mov    ecx,DWORD PTR [rbx]
   14000a80f:	cmp    QWORD PTR [r9+0x28],rax
   14000a813:	cmove  ecx,edi
   14000a816:	mov    DWORD PTR [rbx],ecx
   14000a818:	cmp    DWORD PTR [r9],r8d
   14000a81b:	jne    0x14000a848
   14000a81d:	cmp    DWORD PTR [r9+0x18],0x4
   14000a822:	jne    0x14000a848
   14000a824:	mov    ecx,DWORD PTR [r9+0x20]
   14000a828:	sub    ecx,r10d
   14000a82b:	cmp    ecx,0x2
   14000a82e:	ja     0x14000a848
   14000a830:	cmp    QWORD PTR [r9+0x30],0x0
   14000a835:	jne    0x14000a848
   14000a837:	call   0x14000a3ec
   14000a83c:	mov    DWORD PTR [rax+0x460],edi
   14000a842:	mov    DWORD PTR [rbx],edi
   14000a844:	mov    eax,edi
   14000a846:	jmp    0x14000a84a
   14000a848:	xor    eax,eax
   14000a84a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a84f:	add    rsp,0x20
   14000a853:	pop    rdi
   14000a854:	ret    
   14000a855:	int3   
   14000a856:	int3   
   14000a857:	int3   
   14000a858:	mov    QWORD PTR [rsp+0x10],rbx
   14000a85d:	mov    QWORD PTR [rsp+0x18],r8
   14000a862:	push   rbp
   14000a863:	push   rsi
   14000a864:	push   rdi
   14000a865:	push   r12
   14000a867:	push   r13
   14000a869:	push   r14
   14000a86b:	push   r15
   14000a86d:	lea    rbp,[rsp-0x7]
   14000a872:	sub    rsp,0xb0
   14000a879:	mov    rbx,QWORD PTR [rbp+0x67]
   14000a87d:	mov    r13,rdx
   14000a880:	mov    rdi,rcx
   14000a883:	xor    r12d,r12d
   14000a886:	mov    rdx,r9
   14000a889:	mov    rcx,rbx
   14000a88c:	mov    r15,r9
   14000a88f:	mov    r14,r8
   14000a892:	mov    BYTE PTR [rbp+0x47],r12b
   14000a896:	mov    BYTE PTR [rbp-0x49],r12b
   14000a89a:	call   0x14000c1cc
   14000a89f:	lea    r9,[rbp-0x21]
   14000a8a3:	mov    r8,rbx
   14000a8a6:	mov    rdx,r15
   14000a8a9:	mov    rcx,r13
   14000a8ac:	mov    esi,eax
   14000a8ae:	call   0x14000670c
   14000a8b3:	mov    r8,rbx
   14000a8b6:	mov    rdx,r15
   14000a8b9:	mov    rcx,r13
   14000a8bc:	call   0x14000c158
   14000a8c1:	mov    r8,rbx
   14000a8c4:	mov    rdx,r15
   14000a8c7:	cmp    esi,eax
   14000a8c9:	jle    0x14000a8ea
   14000a8cb:	lea    rcx,[rbp-0x21]
   14000a8cf:	mov    r9d,esi
   14000a8d2:	call   0x14000c184
   14000a8d7:	mov    r9d,esi
   14000a8da:	mov    r8,rbx
   14000a8dd:	mov    rdx,r15
   14000a8e0:	mov    rcx,r13
   14000a8e3:	call   0x14000c190
   14000a8e8:	jmp    0x14000a8f4
   14000a8ea:	mov    rcx,r13
   14000a8ed:	call   0x14000c158
   14000a8f2:	mov    esi,eax
   14000a8f4:	cmp    esi,0xffffffff
   14000a8f7:	jl     0x14000a8fe
   14000a8f9:	cmp    esi,DWORD PTR [rbx+0x4]
   14000a8fc:	jl     0x14000a903
   14000a8fe:	call   0x14000c260
   14000a903:	cmp    DWORD PTR [rdi],0xe06d7363
   14000a909:	jne    0x14000ac8a
   14000a90f:	cmp    DWORD PTR [rdi+0x18],0x4
   14000a913:	jne    0x14000aa50
   14000a919:	mov    eax,DWORD PTR [rdi+0x20]
   14000a91c:	sub    eax,0x19930520
   14000a921:	cmp    eax,0x2
   14000a924:	ja     0x14000aa50
   14000a92a:	cmp    QWORD PTR [rdi+0x30],r12
   14000a92e:	jne    0x14000aa50
   14000a934:	call   0x14000a3ec
   14000a939:	cmp    QWORD PTR [rax+0xf0],r12
   14000a940:	je     0x14000ac6f
   14000a946:	call   0x14000a3ec
   14000a94b:	mov    rdi,QWORD PTR [rax+0xf0]
   14000a952:	call   0x14000a3ec
   14000a957:	mov    rcx,QWORD PTR [rdi+0x38]
   14000a95b:	mov    r14,QWORD PTR [rax+0xf8]
   14000a962:	mov    BYTE PTR [rbp+0x47],0x1
   14000a966:	mov    QWORD PTR [rbp+0x57],r14
   14000a96a:	call   0x140006bc0
   14000a96f:	mov    edx,0x1
   14000a974:	mov    rcx,rdi
   14000a977:	call   0x140013b90
   14000a97c:	test   eax,eax
   14000a97e:	jne    0x14000a985
   14000a980:	call   0x14000c260
   14000a985:	cmp    DWORD PTR [rdi],0xe06d7363
   14000a98b:	jne    0x14000a9ab
   14000a98d:	cmp    DWORD PTR [rdi+0x18],0x4
   14000a991:	jne    0x14000a9ab
   14000a993:	mov    eax,DWORD PTR [rdi+0x20]
   14000a996:	sub    eax,0x19930520
   14000a99b:	cmp    eax,0x2
   14000a99e:	ja     0x14000a9ab
   14000a9a0:	cmp    QWORD PTR [rdi+0x30],r12
   14000a9a4:	jne    0x14000a9ab
   14000a9a6:	call   0x14000c260
   14000a9ab:	call   0x14000a3ec
   14000a9b0:	cmp    QWORD PTR [rax+0x108],r12
   14000a9b7:	je     0x14000aa50
   14000a9bd:	call   0x14000a3ec
   14000a9c2:	mov    r14,QWORD PTR [rax+0x108]
   14000a9c9:	call   0x14000a3ec
   14000a9ce:	mov    rdx,r14
   14000a9d1:	mov    rcx,rdi
   14000a9d4:	mov    QWORD PTR [rax+0x108],r12
   14000a9db:	call   0x14000af74
   14000a9e0:	test   al,al
   14000a9e2:	jne    0x14000aa4c
   14000a9e4:	mov    r15d,r12d
   14000a9e7:	cmp    DWORD PTR [r14],r12d
   14000a9ea:	jle    0x14000acc2
   14000a9f0:	mov    rsi,r12
   14000a9f3:	call   0x140006b34
   14000a9f8:	movsxd rcx,DWORD PTR [r14+0x4]
   14000a9fc:	add    rax,rsi
   14000a9ff:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   14000aa04:	je     0x14000aa21
   14000aa06:	call   0x140006b34
   14000aa0b:	movsxd rcx,DWORD PTR [r14+0x4]
   14000aa0f:	add    rax,rsi
   14000aa12:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000aa17:	call   0x140006b34
   14000aa1c:	add    rax,rbx
   14000aa1f:	jmp    0x14000aa24
   14000aa21:	mov    rax,r12
   14000aa24:	lea    rdx,[rip+0x330ed]        # 0x14003db18
   14000aa2b:	mov    rcx,rax
   14000aa2e:	call   0x1400071c0
   14000aa33:	test   al,al
   14000aa35:	jne    0x14000acc8
   14000aa3b:	inc    r15d
   14000aa3e:	add    rsi,0x14
   14000aa42:	cmp    r15d,DWORD PTR [r14]
   14000aa45:	jl     0x14000a9f3
   14000aa47:	jmp    0x14000acc2
   14000aa4c:	mov    r14,QWORD PTR [rbp+0x57]
   14000aa50:	cmp    DWORD PTR [rdi],0xe06d7363
   14000aa56:	jne    0x14000ac8a
   14000aa5c:	cmp    DWORD PTR [rdi+0x18],0x4
   14000aa60:	jne    0x14000ac8a
   14000aa66:	mov    eax,DWORD PTR [rdi+0x20]
   14000aa69:	sub    eax,0x19930520
   14000aa6e:	cmp    eax,0x2
   14000aa71:	ja     0x14000ac8a
   14000aa77:	cmp    DWORD PTR [rbx+0xc],r12d
   14000aa7b:	jbe    0x14000abcf
   14000aa81:	mov    r8d,DWORD PTR [rbp+0x77]
   14000aa85:	lea    rax,[rbp-0x41]
   14000aa89:	mov    QWORD PTR [rsp+0x30],r15
   14000aa8e:	mov    QWORD PTR [rsp+0x28],rax
   14000aa93:	lea    rax,[rbp-0x45]
   14000aa97:	mov    r9d,esi
   14000aa9a:	mov    rdx,rbx
   14000aa9d:	mov    rcx,r13
   14000aaa0:	mov    QWORD PTR [rsp+0x20],rax
   14000aaa5:	call   0x1400067d8
   14000aaaa:	mov    ecx,DWORD PTR [rbp-0x45]
   14000aaad:	mov    edx,DWORD PTR [rbp-0x41]
   14000aab0:	cmp    ecx,edx
   14000aab2:	jae    0x14000abcf
   14000aab8:	lea    r14,[rax+0x10]
   14000aabc:	cmp    DWORD PTR [r14-0x10],esi
   14000aac0:	jg     0x14000abb1
   14000aac6:	cmp    esi,DWORD PTR [r14-0xc]
   14000aaca:	jg     0x14000abb1
   14000aad0:	call   0x140006b34
   14000aad5:	movsxd r12,DWORD PTR [r14]
   14000aad8:	add    r12,rax
   14000aadb:	mov    eax,DWORD PTR [r14-0x4]
   14000aadf:	mov    DWORD PTR [rbp-0x3d],eax
   14000aae2:	test   eax,eax
   14000aae4:	jle    0x14000abab
   14000aaea:	call   0x140006b4c
   14000aaef:	mov    rcx,QWORD PTR [rdi+0x30]
   14000aaf3:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000aaf7:	add    rax,0x4
   14000aafb:	add    rax,rdx
   14000aafe:	mov    QWORD PTR [rbp-0x31],rax
   14000ab02:	call   0x140006b4c
   14000ab07:	mov    rcx,QWORD PTR [rdi+0x30]
   14000ab0b:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000ab0f:	mov    ecx,DWORD PTR [rax+rdx*1]
   14000ab12:	mov    DWORD PTR [rbp-0x39],ecx
   14000ab15:	test   ecx,ecx
   14000ab17:	jle    0x14000ab50
   14000ab19:	call   0x140006b4c
   14000ab1e:	mov    rcx,QWORD PTR [rbp-0x31]
   14000ab22:	mov    r8,QWORD PTR [rdi+0x30]
   14000ab26:	movsxd rcx,DWORD PTR [rcx]
   14000ab29:	add    rax,rcx
   14000ab2c:	mov    rcx,r12
   14000ab2f:	mov    rdx,rax
   14000ab32:	mov    QWORD PTR [rbp-0x29],rax
   14000ab36:	call   0x14000c000
   14000ab3b:	test   eax,eax
   14000ab3d:	jne    0x14000ab5b
   14000ab3f:	mov    eax,DWORD PTR [rbp-0x39]
   14000ab42:	add    QWORD PTR [rbp-0x31],0x4
   14000ab47:	dec    eax
   14000ab49:	mov    DWORD PTR [rbp-0x39],eax
   14000ab4c:	test   eax,eax
   14000ab4e:	jg     0x14000ab19
   14000ab50:	mov    eax,DWORD PTR [rbp-0x3d]
   14000ab53:	dec    eax
   14000ab55:	add    r12,0x14
   14000ab59:	jmp    0x14000aadf
   14000ab5b:	mov    al,BYTE PTR [rbp+0x6f]
   14000ab5e:	mov    r8,QWORD PTR [rbp+0x57]
   14000ab62:	mov    r9,r15
   14000ab65:	mov    BYTE PTR [rsp+0x58],al
   14000ab69:	mov    al,BYTE PTR [rbp+0x47]
   14000ab6c:	mov    rdx,r13
   14000ab6f:	mov    BYTE PTR [rsp+0x50],al
   14000ab73:	mov    rax,QWORD PTR [rbp+0x7f]
   14000ab77:	mov    rcx,rdi
   14000ab7a:	mov    QWORD PTR [rsp+0x48],rax
   14000ab7f:	mov    eax,DWORD PTR [rbp+0x77]
   14000ab82:	mov    BYTE PTR [rbp-0x49],0x1
   14000ab86:	mov    DWORD PTR [rsp+0x40],eax
   14000ab8a:	lea    rax,[r14-0x10]
   14000ab8e:	mov    QWORD PTR [rsp+0x38],rax
   14000ab93:	mov    rax,QWORD PTR [rbp-0x29]
   14000ab97:	mov    QWORD PTR [rsp+0x30],rax
   14000ab9c:	mov    QWORD PTR [rsp+0x28],r12
   14000aba1:	mov    QWORD PTR [rsp+0x20],rbx
   14000aba6:	call   0x14000a708
   14000abab:	mov    edx,DWORD PTR [rbp-0x41]
   14000abae:	mov    ecx,DWORD PTR [rbp-0x45]
   14000abb1:	inc    ecx
   14000abb3:	add    r14,0x14
   14000abb7:	mov    DWORD PTR [rbp-0x45],ecx
   14000abba:	cmp    ecx,edx
   14000abbc:	jb     0x14000aabc
   14000abc2:	xor    r12d,r12d
   14000abc5:	cmp    BYTE PTR [rbp-0x49],r12b
   14000abc9:	jne    0x14000ac5c
   14000abcf:	mov    eax,DWORD PTR [rbx]
   14000abd1:	and    eax,0x1fffffff
   14000abd6:	cmp    eax,0x19930521
   14000abdb:	jb     0x14000ac5c
   14000abdd:	mov    esi,DWORD PTR [rbx+0x20]
   14000abe0:	test   esi,esi
   14000abe2:	je     0x14000abf1
   14000abe4:	movsxd rsi,esi
   14000abe7:	call   0x140006b34
   14000abec:	add    rax,rsi
   14000abef:	jmp    0x14000abf4
   14000abf1:	mov    rax,r12
   14000abf4:	test   rax,rax
   14000abf7:	je     0x14000ac5c
   14000abf9:	test   esi,esi
   14000abfb:	je     0x14000ac0e
   14000abfd:	call   0x140006b34
   14000ac02:	mov    rdx,rax
   14000ac05:	movsxd rax,DWORD PTR [rbx+0x20]
   14000ac09:	add    rdx,rax
   14000ac0c:	jmp    0x14000ac11
   14000ac0e:	mov    rdx,r12
   14000ac11:	mov    rcx,rdi
   14000ac14:	call   0x14000af74
   14000ac19:	test   al,al
   14000ac1b:	jne    0x14000ac5c
   14000ac1d:	lea    r9,[rbp+0x47]
   14000ac21:	mov    r8,rbx
   14000ac24:	mov    rdx,r15
   14000ac27:	mov    rcx,r13
   14000ac2a:	call   0x14000670c
   14000ac2f:	mov    cl,BYTE PTR [rbp+0x6f]
   14000ac32:	mov    r8,QWORD PTR [rbp+0x57]
   14000ac36:	mov    BYTE PTR [rsp+0x40],cl
   14000ac3a:	mov    QWORD PTR [rsp+0x38],r15
   14000ac3f:	mov    QWORD PTR [rsp+0x30],rbx
   14000ac44:	or     DWORD PTR [rsp+0x28],0xffffffff
   14000ac49:	mov    r9,rax
   14000ac4c:	mov    rdx,rdi
   14000ac4f:	mov    rcx,r13
   14000ac52:	mov    QWORD PTR [rsp+0x20],r12
   14000ac57:	call   0x140006bdc
   14000ac5c:	call   0x14000a3ec
   14000ac61:	cmp    QWORD PTR [rax+0x108],r12
   14000ac68:	je     0x14000ac6f
   14000ac6a:	call   0x14000c260
   14000ac6f:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000ac77:	add    rsp,0xb0
   14000ac7e:	pop    r15
   14000ac80:	pop    r14
   14000ac82:	pop    r13
   14000ac84:	pop    r12
   14000ac86:	pop    rdi
   14000ac87:	pop    rsi
   14000ac88:	pop    rbp
   14000ac89:	ret    
   14000ac8a:	cmp    DWORD PTR [rbx+0xc],r12d
   14000ac8e:	jbe    0x14000ac5c
   14000ac90:	cmp    BYTE PTR [rbp+0x6f],r12b
   14000ac94:	jne    0x14000ad06
   14000ac96:	mov    rax,QWORD PTR [rbp+0x7f]
   14000ac9a:	mov    r9,r15
   14000ac9d:	mov    r8,r14
   14000aca0:	mov    QWORD PTR [rsp+0x38],rax
   14000aca5:	mov    eax,DWORD PTR [rbp+0x77]
   14000aca8:	mov    rdx,r13
   14000acab:	mov    DWORD PTR [rsp+0x30],eax
   14000acaf:	mov    rcx,rdi
   14000acb2:	mov    DWORD PTR [rsp+0x28],esi
   14000acb6:	mov    QWORD PTR [rsp+0x20],rbx
   14000acbb:	call   0x14000ad0c
   14000acc0:	jmp    0x14000ac5c
   14000acc2:	call   0x14000c280
   14000acc7:	int3   
   14000acc8:	mov    dl,0x1
   14000acca:	mov    rcx,rdi
   14000accd:	call   0x14000a5fc
   14000acd2:	lea    rax,[rip+0x23e27]        # 0x14002eb00
   14000acd9:	lea    rdx,[rbp+0x47]
   14000acdd:	lea    rcx,[rbp-0x19]
   14000ace1:	mov    QWORD PTR [rbp+0x47],rax
   14000ace5:	call   0x1400076e0
   14000acea:	lea    rax,[rip+0x23dff]        # 0x14002eaf0
   14000acf1:	lea    rdx,[rip+0x2f628]        # 0x14003a320
   14000acf8:	lea    rcx,[rbp-0x19]
   14000acfc:	mov    QWORD PTR [rbp-0x19],rax
   14000ad00:	call   0x140006570
   14000ad05:	int3   
   14000ad06:	call   0x14000c280
   14000ad0b:	int3   
   14000ad0c:	mov    QWORD PTR [rsp+0x10],rbx
   14000ad11:	mov    QWORD PTR [rsp+0x18],r8
   14000ad16:	push   rbp
   14000ad17:	push   rsi
   14000ad18:	push   rdi
   14000ad19:	push   r12
   14000ad1b:	push   r13
   14000ad1d:	push   r14
   14000ad1f:	push   r15
   14000ad21:	sub    rsp,0x70
   14000ad25:	cmp    DWORD PTR [rcx],0x80000003
   14000ad2b:	mov    r15,r9
   14000ad2e:	mov    rdi,r8
   14000ad31:	mov    r12,rdx
   14000ad34:	mov    rsi,rcx
   14000ad37:	je     0x14000af59
   14000ad3d:	call   0x14000a3ec
   14000ad42:	mov    rbp,QWORD PTR [rsp+0xd0]
   14000ad4a:	cmp    QWORD PTR [rax+0xe0],0x0
   14000ad52:	je     0x14000adb5
   14000ad54:	xor    ecx,ecx
   14000ad56:	call   QWORD PTR [rip+0x213b4]        # 0x14002c110
   14000ad5c:	mov    rbx,rax
   14000ad5f:	call   0x14000a3ec
   14000ad64:	cmp    QWORD PTR [rax+0xe0],rbx
   14000ad6b:	je     0x14000adb5
   14000ad6d:	cmp    DWORD PTR [rsi],0xe0434f4d
   14000ad73:	je     0x14000adb5
   14000ad75:	cmp    DWORD PTR [rsi],0xe0434352
   14000ad7b:	mov    ebx,DWORD PTR [rsp+0xe0]
   14000ad82:	je     0x14000adbc
   14000ad84:	mov    rax,QWORD PTR [rsp+0xe8]
   14000ad8c:	mov    r9,r15
   14000ad8f:	mov    r8,rdi
   14000ad92:	mov    QWORD PTR [rsp+0x30],rax
   14000ad97:	mov    rdx,r12
   14000ad9a:	mov    rcx,rsi
   14000ad9d:	mov    DWORD PTR [rsp+0x28],ebx
   14000ada1:	mov    QWORD PTR [rsp+0x20],rbp
   14000ada6:	call   0x140006a3c
   14000adab:	test   eax,eax
   14000adad:	jne    0x14000af59
   14000adb3:	jmp    0x14000adbc
   14000adb5:	mov    ebx,DWORD PTR [rsp+0xe0]
   14000adbc:	cmp    DWORD PTR [rbp+0xc],0x0
   14000adc0:	jne    0x14000adc7
   14000adc2:	call   0x14000c260
   14000adc7:	mov    r14d,DWORD PTR [rsp+0xd8]
   14000adcf:	lea    rax,[rsp+0x60]
   14000add4:	mov    QWORD PTR [rsp+0x30],r15
   14000add9:	mov    QWORD PTR [rsp+0x28],rax
   14000adde:	lea    rax,[rsp+0xb0]
   14000ade6:	mov    r8d,ebx
   14000ade9:	mov    r9d,r14d
   14000adec:	mov    rdx,rbp
   14000adef:	mov    rcx,r12
   14000adf2:	mov    QWORD PTR [rsp+0x20],rax
   14000adf7:	call   0x1400067d8
   14000adfc:	mov    ecx,DWORD PTR [rsp+0xb0]
   14000ae03:	cmp    ecx,DWORD PTR [rsp+0x60]
   14000ae07:	jae    0x14000af59
   14000ae0d:	lea    rdi,[rax+0xc]
   14000ae11:	lea    r13,[rdi-0xc]
   14000ae15:	cmp    r14d,DWORD PTR [r13+0x0]
   14000ae19:	jl     0x14000af42
   14000ae1f:	cmp    r14d,DWORD PTR [rdi-0x8]
   14000ae23:	jg     0x14000af42
   14000ae29:	call   0x140006b34
   14000ae2e:	movsxd rcx,DWORD PTR [rdi]
   14000ae31:	lea    rdx,[rcx+rcx*4]
   14000ae35:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000ae39:	lea    rdx,[rcx+rdx*4]
   14000ae3d:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000ae42:	je     0x14000ae67
   14000ae44:	call   0x140006b34
   14000ae49:	movsxd rcx,DWORD PTR [rdi]
   14000ae4c:	lea    rdx,[rcx+rcx*4]
   14000ae50:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000ae54:	lea    rdx,[rcx+rdx*4]
   14000ae58:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000ae5d:	call   0x140006b34
   14000ae62:	add    rax,rbx
   14000ae65:	jmp    0x14000ae69
   14000ae67:	xor    eax,eax
   14000ae69:	test   rax,rax
   14000ae6c:	je     0x14000aeb8
   14000ae6e:	call   0x140006b34
   14000ae73:	movsxd rcx,DWORD PTR [rdi]
   14000ae76:	lea    rdx,[rcx+rcx*4]
   14000ae7a:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000ae7e:	lea    rdx,[rcx+rdx*4]
   14000ae82:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000ae87:	je     0x14000aeac
   14000ae89:	call   0x140006b34
   14000ae8e:	movsxd rcx,DWORD PTR [rdi]
   14000ae91:	lea    rdx,[rcx+rcx*4]
   14000ae95:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000ae99:	lea    rdx,[rcx+rdx*4]
   14000ae9d:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000aea2:	call   0x140006b34
   14000aea7:	add    rax,rbx
   14000aeaa:	jmp    0x14000aeae
   14000aeac:	xor    eax,eax
   14000aeae:	cmp    BYTE PTR [rax+0x10],0x0
   14000aeb2:	jne    0x14000af3b
   14000aeb8:	call   0x140006b34
   14000aebd:	movsxd rcx,DWORD PTR [rdi]
   14000aec0:	lea    rdx,[rcx+rcx*4]
   14000aec4:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000aec8:	lea    rdx,[rcx+rdx*4]
   14000aecc:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14000aed1:	jne    0x14000af3b
   14000aed3:	call   0x140006b34
   14000aed8:	mov    ecx,DWORD PTR [rdi]
   14000aeda:	mov    r8,QWORD PTR [rsp+0xc0]
   14000aee2:	mov    BYTE PTR [rsp+0x58],0x0
   14000aee7:	mov    BYTE PTR [rsp+0x50],0x1
   14000aeec:	dec    ecx
   14000aeee:	movsxd rcx,ecx
   14000aef1:	mov    r9,r15
   14000aef4:	lea    rdx,[rcx+rcx*4]
   14000aef8:	lea    rcx,[rax+rdx*4]
   14000aefc:	movsxd rax,DWORD PTR [rdi+0x4]
   14000af00:	mov    rdx,r12
   14000af03:	add    rcx,rax
   14000af06:	mov    rax,QWORD PTR [rsp+0xe8]
   14000af0e:	mov    QWORD PTR [rsp+0x48],rax
   14000af13:	mov    eax,DWORD PTR [rsp+0xe0]
   14000af1a:	mov    DWORD PTR [rsp+0x40],eax
   14000af1e:	mov    QWORD PTR [rsp+0x38],r13
   14000af23:	and    QWORD PTR [rsp+0x30],0x0
   14000af29:	mov    QWORD PTR [rsp+0x28],rcx
   14000af2e:	mov    rcx,rsi
   14000af31:	mov    QWORD PTR [rsp+0x20],rbp
   14000af36:	call   0x14000a708
   14000af3b:	mov    ecx,DWORD PTR [rsp+0xb0]
   14000af42:	inc    ecx
   14000af44:	add    rdi,0x14
   14000af48:	mov    DWORD PTR [rsp+0xb0],ecx
   14000af4f:	cmp    ecx,DWORD PTR [rsp+0x60]
   14000af53:	jb     0x14000ae11
   14000af59:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000af61:	add    rsp,0x70
   14000af65:	pop    r15
   14000af67:	pop    r14
   14000af69:	pop    r13
   14000af6b:	pop    r12
   14000af6d:	pop    rdi
   14000af6e:	pop    rsi
   14000af6f:	pop    rbp
   14000af70:	ret    
   14000af71:	int3   
   14000af72:	int3   
   14000af73:	int3   
   14000af74:	mov    QWORD PTR [rsp+0x8],rbx
   14000af79:	mov    QWORD PTR [rsp+0x10],rbp
   14000af7e:	mov    QWORD PTR [rsp+0x18],rsi
   14000af83:	push   rdi
   14000af84:	push   r12
   14000af86:	push   r13
   14000af88:	push   r14
   14000af8a:	push   r15
   14000af8c:	sub    rsp,0x20
   14000af90:	mov    rsi,rdx
   14000af93:	mov    r13,rcx
   14000af96:	test   rdx,rdx
   14000af99:	je     0x14000b040
   14000af9f:	xor    edi,edi
   14000afa1:	xor    r14b,r14b
   14000afa4:	cmp    DWORD PTR [rdx],edi
   14000afa6:	jle    0x14000b020
   14000afa8:	call   0x140006b4c
   14000afad:	mov    rdx,rax
   14000afb0:	mov    rax,QWORD PTR [r13+0x30]
   14000afb4:	movsxd r15,DWORD PTR [rax+0xc]
   14000afb8:	add    r15,0x4
   14000afbc:	add    r15,rdx
   14000afbf:	call   0x140006b4c
   14000afc4:	mov    rdx,rax
   14000afc7:	mov    rax,QWORD PTR [r13+0x30]
   14000afcb:	movsxd rcx,DWORD PTR [rax+0xc]
   14000afcf:	mov    ebp,DWORD PTR [rdx+rcx*1]
   14000afd2:	test   ebp,ebp
   14000afd4:	jle    0x14000b01a
   14000afd6:	movsxd rax,edi
   14000afd9:	lea    r12,[rax+rax*4]
   14000afdd:	call   0x140006b4c
   14000afe2:	mov    rbx,rax
   14000afe5:	movsxd rax,DWORD PTR [r15]
   14000afe8:	add    rbx,rax
   14000afeb:	call   0x140006b34
   14000aff0:	movsxd rcx,DWORD PTR [rsi+0x4]
   14000aff4:	mov    r8,QWORD PTR [r13+0x30]
   14000aff8:	lea    rax,[rax+r12*4]
   14000affc:	mov    rdx,rbx
   14000afff:	add    rcx,rax
   14000b002:	call   0x14000c000
   14000b007:	test   eax,eax
   14000b009:	jne    0x14000b017
   14000b00b:	dec    ebp
   14000b00d:	add    r15,0x4
   14000b011:	test   ebp,ebp
   14000b013:	jg     0x14000afdd
   14000b015:	jmp    0x14000b01a
   14000b017:	mov    r14b,0x1
   14000b01a:	inc    edi
   14000b01c:	cmp    edi,DWORD PTR [rsi]
   14000b01e:	jl     0x14000afa8
   14000b020:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b025:	mov    rbp,QWORD PTR [rsp+0x58]
   14000b02a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b02f:	mov    al,r14b
   14000b032:	add    rsp,0x20
   14000b036:	pop    r15
   14000b038:	pop    r14
   14000b03a:	pop    r13
   14000b03c:	pop    r12
   14000b03e:	pop    rdi
   14000b03f:	ret    
   14000b040:	call   0x14000c260
   14000b045:	call   0x14000c280
   14000b04a:	int3   
   14000b04b:	int3   
   14000b04c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b051:	mov    QWORD PTR [rsp+0x10],rbp
   14000b056:	mov    QWORD PTR [rsp+0x18],rsi
   14000b05b:	push   rdi
   14000b05c:	sub    rsp,0x20
   14000b060:	xor    ebp,ebp
   14000b062:	mov    rdi,rcx
   14000b065:	cmp    DWORD PTR [rcx],ebp
   14000b067:	jle    0x14000b0b8
   14000b069:	xor    esi,esi
   14000b06b:	call   0x140006b34
   14000b070:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b074:	add    rax,rsi
   14000b077:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000b07c:	je     0x14000b099
   14000b07e:	call   0x140006b34
   14000b083:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b087:	add    rax,rsi
   14000b08a:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000b08f:	call   0x140006b34
   14000b094:	add    rax,rbx
   14000b097:	jmp    0x14000b09b
   14000b099:	xor    eax,eax
   14000b09b:	lea    rdx,[rip+0x32a76]        # 0x14003db18
   14000b0a2:	mov    rcx,rax
   14000b0a5:	call   0x1400071c0
   14000b0aa:	test   al,al
   14000b0ac:	jne    0x14000b0cf
   14000b0ae:	inc    ebp
   14000b0b0:	add    rsi,0x14
   14000b0b4:	cmp    ebp,DWORD PTR [rdi]
   14000b0b6:	jl     0x14000b06b
   14000b0b8:	xor    al,al
   14000b0ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b0bf:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b0c4:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b0c9:	add    rsp,0x20
   14000b0cd:	pop    rdi
   14000b0ce:	ret    
   14000b0cf:	mov    al,0x1
   14000b0d1:	jmp    0x14000b0ba
   14000b0d3:	int3   
   14000b0d4:	mov    r8d,DWORD PTR [rcx+0x18]
   14000b0d8:	mov    edx,DWORD PTR [rcx+0x4]
   14000b0db:	lea    r9,[rcx+0x20]
   14000b0df:	mov    ecx,DWORD PTR [rcx]
   14000b0e1:	rex.W jmp QWORD PTR [rip+0x21040]        # 0x14002c128
   14000b0e8:	sub    rsp,0x28
   14000b0ec:	call   0x14000a3ec
   14000b0f1:	xor    ecx,ecx
   14000b0f3:	cmp    DWORD PTR [rax+0x100],ecx
   14000b0f9:	setne  al
   14000b0fc:	add    rsp,0x28
   14000b100:	ret    
   14000b101:	int3   
   14000b102:	int3   
   14000b103:	int3   
   14000b104:	mov    rax,rsp
   14000b107:	mov    QWORD PTR [rax+0x8],rbx
   14000b10b:	mov    QWORD PTR [rax+0x10],rbp
   14000b10f:	mov    QWORD PTR [rax+0x18],rsi
   14000b113:	mov    QWORD PTR [rax+0x20],rdi
   14000b117:	push   r14
   14000b119:	sub    rsp,0x20
   14000b11d:	mov    rbx,rdx
   14000b120:	mov    r14,rcx
   14000b123:	test   rdx,rdx
   14000b126:	jne    0x14000b12d
   14000b128:	call   0x14000c260
   14000b12d:	mov    rbx,QWORD PTR [rbx]
   14000b130:	test   rbx,rbx
   14000b133:	jne    0x14000b13a
   14000b135:	call   0x14000c260
   14000b13a:	cmp    DWORD PTR [rbx],0xe06d7363
   14000b140:	jne    0x14000b155
   14000b142:	cmp    DWORD PTR [rbx+0x18],0x4
   14000b146:	jne    0x14000b155
   14000b148:	mov    eax,DWORD PTR [rbx+0x20]
   14000b14b:	sub    eax,0x19930520
   14000b150:	cmp    eax,0x2
   14000b153:	jbe    0x14000b15a
   14000b155:	call   0x14000c260
   14000b15a:	mov    rbp,QWORD PTR [rbx+0x38]
   14000b15e:	mov    rax,QWORD PTR [rbx+0x30]
   14000b162:	movsxd rcx,DWORD PTR [rax+0xc]
   14000b166:	lea    rsi,[rbp+0x4]
   14000b16a:	mov    edi,DWORD PTR [rcx+rbp*1]
   14000b16d:	add    rsi,rcx
   14000b170:	jmp    0x14000b19b
   14000b172:	movsxd rax,DWORD PTR [rsi]
   14000b175:	mov    rcx,r14
   14000b178:	movsxd rbx,DWORD PTR [rax+rbp*1+0x4]
   14000b17d:	call   0x140007274
   14000b182:	lea    rdx,[rbp+0x10]
   14000b186:	mov    rcx,rax
   14000b189:	add    rdx,rbx
   14000b18c:	call   0x14000c3b0
   14000b191:	test   eax,eax
   14000b193:	je     0x14000b1bc
   14000b195:	dec    edi
   14000b197:	add    rsi,0x4
   14000b19b:	test   edi,edi
   14000b19d:	jg     0x14000b172
   14000b19f:	xor    eax,eax
   14000b1a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b1a6:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b1ab:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b1b0:	mov    rdi,QWORD PTR [rsp+0x48]
   14000b1b5:	add    rsp,0x20
   14000b1b9:	pop    r14
   14000b1bb:	ret    
   14000b1bc:	mov    eax,0x1
   14000b1c1:	jmp    0x14000b1a1
   14000b1c3:	int3   
   14000b1c4:	mov    QWORD PTR [rip+0x32b15],rcx        # 0x14003dce0
   14000b1cb:	ret    
   14000b1cc:	movsxd rax,DWORD PTR [rdx]
   14000b1cf:	add    rax,rcx
   14000b1d2:	cmp    DWORD PTR [rdx+0x4],0x0
   14000b1d6:	jl     0x14000b1ee
   14000b1d8:	movsxd r9,DWORD PTR [rdx+0x4]
   14000b1dc:	movsxd rdx,DWORD PTR [rdx+0x8]
   14000b1e0:	mov    rcx,QWORD PTR [r9+rcx*1]
   14000b1e4:	movsxd r8,DWORD PTR [rdx+rcx*1]
   14000b1e8:	add    r8,r9
   14000b1eb:	add    rax,r8
   14000b1ee:	ret    
   14000b1ef:	int3   
   14000b1f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b1f5:	mov    QWORD PTR [rsp+0x10],rsi
   14000b1fa:	mov    QWORD PTR [rsp+0x18],rdi
   14000b1ff:	push   r14
   14000b201:	sub    rsp,0x20
   14000b205:	mov    rdi,r9
   14000b208:	mov    r14,rcx
   14000b20b:	test   DWORD PTR [r8],0x80000000
   14000b212:	je     0x14000b219
   14000b214:	mov    rsi,rdx
   14000b217:	jmp    0x14000b220
   14000b219:	movsxd rsi,DWORD PTR [r8+0x8]
   14000b21d:	add    rsi,QWORD PTR [rdx]
   14000b220:	call   0x14000b2a8
   14000b225:	dec    eax
   14000b227:	je     0x14000b260
   14000b229:	dec    eax
   14000b22b:	jne    0x14000b288
   14000b22d:	xor    ebx,ebx
   14000b22f:	cmp    DWORD PTR [rdi+0x18],ebx
   14000b232:	je     0x14000b243
   14000b234:	call   0x140006b4c
   14000b239:	mov    rbx,rax
   14000b23c:	movsxd rax,DWORD PTR [rdi+0x18]
   14000b240:	add    rbx,rax
   14000b243:	lea    rdx,[rdi+0x8]
   14000b247:	mov    rcx,QWORD PTR [r14+0x28]
   14000b24b:	call   0x14000b1cc
   14000b250:	mov    rdx,rax
   14000b253:	mov    r8d,0x1
   14000b259:	mov    rcx,rsi
   14000b25c:	call   rbx
   14000b25e:	jmp    0x14000b288
   14000b260:	xor    ebx,ebx
   14000b262:	cmp    DWORD PTR [rdi+0x18],ebx
   14000b265:	je     0x14000b273
   14000b267:	call   0x140006b4c
   14000b26c:	movsxd rbx,DWORD PTR [rdi+0x18]
   14000b270:	add    rbx,rax
   14000b273:	lea    rdx,[rdi+0x8]
   14000b277:	mov    rcx,QWORD PTR [r14+0x28]
   14000b27b:	call   0x14000b1cc
   14000b280:	mov    rdx,rax
   14000b283:	mov    rcx,rsi
   14000b286:	call   rbx
   14000b288:	jmp    0x14000b290
   14000b28a:	call   0x14000c280
   14000b28f:	nop
   14000b290:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b295:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b29a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000b29f:	add    rsp,0x20
   14000b2a3:	pop    r14
   14000b2a5:	ret    
   14000b2a6:	int3   
   14000b2a7:	int3   
   14000b2a8:	mov    QWORD PTR [rsp+0x8],rbx
   14000b2ad:	mov    QWORD PTR [rsp+0x10],rsi
   14000b2b2:	mov    QWORD PTR [rsp+0x18],rdi
   14000b2b7:	push   r13
   14000b2b9:	push   r14
   14000b2bb:	push   r15
   14000b2bd:	sub    rsp,0x30
   14000b2c1:	mov    r14,r9
   14000b2c4:	mov    rbx,r8
   14000b2c7:	mov    rsi,rdx
   14000b2ca:	mov    r13,rcx
   14000b2cd:	xor    edi,edi
   14000b2cf:	mov    r15d,DWORD PTR [r8+0x4]
   14000b2d3:	test   r15d,r15d
   14000b2d6:	je     0x14000b2e6
   14000b2d8:	movsxd r15,r15d
   14000b2db:	call   0x140006b34
   14000b2e0:	lea    rdx,[r15+rax*1]
   14000b2e4:	jmp    0x14000b2e9
   14000b2e6:	mov    rdx,rdi
   14000b2e9:	test   rdx,rdx
   14000b2ec:	je     0x14000b4db
   14000b2f2:	test   r15d,r15d
   14000b2f5:	je     0x14000b308
   14000b2f7:	call   0x140006b34
   14000b2fc:	mov    rcx,rax
   14000b2ff:	movsxd rax,DWORD PTR [rbx+0x4]
   14000b303:	add    rcx,rax
   14000b306:	jmp    0x14000b30b
   14000b308:	mov    rcx,rdi
   14000b30b:	cmp    BYTE PTR [rcx+0x10],dil
   14000b30f:	je     0x14000b4db
   14000b315:	cmp    DWORD PTR [rbx+0x8],edi
   14000b318:	jne    0x14000b326
   14000b31a:	test   DWORD PTR [rbx],0x80000000
   14000b320:	je     0x14000b4db
   14000b326:	mov    ecx,DWORD PTR [rbx]
   14000b328:	test   ecx,ecx
   14000b32a:	js     0x14000b336
   14000b32c:	movsxd rax,DWORD PTR [rbx+0x8]
   14000b330:	add    rax,QWORD PTR [rsi]
   14000b333:	mov    rsi,rax
   14000b336:	test   cl,cl
   14000b338:	jns    0x14000b391
   14000b33a:	test   BYTE PTR [r14],0x10
   14000b33e:	je     0x14000b391
   14000b340:	mov    rax,QWORD PTR [rip+0x32999]        # 0x14003dce0
   14000b347:	test   rax,rax
   14000b34a:	je     0x14000b391
   14000b34c:	call   rax
   14000b34e:	mov    r15,rax
   14000b351:	mov    ebx,0x1
   14000b356:	mov    edx,ebx
   14000b358:	mov    rcx,rax
   14000b35b:	call   0x140013b90
   14000b360:	test   eax,eax
   14000b362:	je     0x14000b4cb
   14000b368:	mov    edx,ebx
   14000b36a:	mov    rcx,rsi
   14000b36d:	call   0x140013b9c
   14000b372:	test   eax,eax
   14000b374:	je     0x14000b4cb
   14000b37a:	mov    QWORD PTR [rsi],r15
   14000b37d:	mov    rcx,r15
   14000b380:	lea    rdx,[r14+0x8]
   14000b384:	call   0x14000b1cc
   14000b389:	mov    QWORD PTR [rsi],rax
   14000b38c:	jmp    0x14000b4d1
   14000b391:	mov    ebx,0x1
   14000b396:	test   cl,0x8
   14000b399:	je     0x14000b3c9
   14000b39b:	mov    edx,ebx
   14000b39d:	mov    rcx,QWORD PTR [r13+0x28]
   14000b3a1:	call   0x140013b90
   14000b3a6:	test   eax,eax
   14000b3a8:	je     0x14000b4cb
   14000b3ae:	mov    edx,ebx
   14000b3b0:	mov    rcx,rsi
   14000b3b3:	call   0x140013b9c
   14000b3b8:	test   eax,eax
   14000b3ba:	je     0x14000b4cb
   14000b3c0:	mov    rcx,QWORD PTR [r13+0x28]
   14000b3c4:	mov    QWORD PTR [rsi],rcx
   14000b3c7:	jmp    0x14000b380
   14000b3c9:	test   BYTE PTR [r14],bl
   14000b3cc:	je     0x14000b41f
   14000b3ce:	mov    edx,ebx
   14000b3d0:	mov    rcx,QWORD PTR [r13+0x28]
   14000b3d4:	call   0x140013b90
   14000b3d9:	test   eax,eax
   14000b3db:	je     0x14000b4cb
   14000b3e1:	mov    edx,ebx
   14000b3e3:	mov    rcx,rsi
   14000b3e6:	call   0x140013b9c
   14000b3eb:	test   eax,eax
   14000b3ed:	je     0x14000b4cb
   14000b3f3:	movsxd r8,DWORD PTR [r14+0x14]
   14000b3f7:	mov    rdx,QWORD PTR [r13+0x28]
   14000b3fb:	mov    rcx,rsi
   14000b3fe:	call   0x1400059f0
   14000b403:	cmp    DWORD PTR [r14+0x14],0x8
   14000b408:	jne    0x14000b4d1
   14000b40e:	cmp    QWORD PTR [rsi],rdi
   14000b411:	je     0x14000b4d1
   14000b417:	mov    rcx,QWORD PTR [rsi]
   14000b41a:	jmp    0x14000b380
   14000b41f:	cmp    DWORD PTR [r14+0x18],edi
   14000b423:	je     0x14000b436
   14000b425:	call   0x140006b4c
   14000b42a:	mov    rcx,rax
   14000b42d:	movsxd rax,DWORD PTR [r14+0x18]
   14000b431:	add    rcx,rax
   14000b434:	jmp    0x14000b439
   14000b436:	mov    rcx,rdi
   14000b439:	mov    edx,ebx
   14000b43b:	test   rcx,rcx
   14000b43e:	mov    rcx,QWORD PTR [r13+0x28]
   14000b442:	jne    0x14000b47c
   14000b444:	call   0x140013b90
   14000b449:	test   eax,eax
   14000b44b:	je     0x14000b4cb
   14000b44d:	mov    edx,ebx
   14000b44f:	mov    rcx,rsi
   14000b452:	call   0x140013b9c
   14000b457:	test   eax,eax
   14000b459:	je     0x14000b4cb
   14000b45b:	movsxd rbx,DWORD PTR [r14+0x14]
   14000b45f:	lea    rdx,[r14+0x8]
   14000b463:	mov    rcx,QWORD PTR [r13+0x28]
   14000b467:	call   0x14000b1cc
   14000b46c:	mov    rdx,rax
   14000b46f:	mov    r8,rbx
   14000b472:	mov    rcx,rsi
   14000b475:	call   0x1400059f0
   14000b47a:	jmp    0x14000b4d1
   14000b47c:	call   0x140013b90
   14000b481:	test   eax,eax
   14000b483:	je     0x14000b4cb
   14000b485:	mov    edx,ebx
   14000b487:	mov    rcx,rsi
   14000b48a:	call   0x140013b9c
   14000b48f:	test   eax,eax
   14000b491:	je     0x14000b4cb
   14000b493:	cmp    DWORD PTR [r14+0x18],edi
   14000b497:	je     0x14000b4aa
   14000b499:	call   0x140006b4c
   14000b49e:	mov    rcx,rax
   14000b4a1:	movsxd rax,DWORD PTR [r14+0x18]
   14000b4a5:	add    rcx,rax
   14000b4a8:	jmp    0x14000b4ad
   14000b4aa:	mov    rcx,rdi
   14000b4ad:	call   0x140013b84
   14000b4b2:	test   eax,eax
   14000b4b4:	je     0x14000b4cb
   14000b4b6:	mov    al,BYTE PTR [r14]
   14000b4b9:	and    al,0x4
   14000b4bb:	neg    al
   14000b4bd:	sbb    ecx,ecx
   14000b4bf:	neg    ecx
   14000b4c1:	add    ecx,ebx
   14000b4c3:	mov    edi,ecx
   14000b4c5:	mov    DWORD PTR [rsp+0x20],ecx
   14000b4c9:	jmp    0x14000b4d1
   14000b4cb:	call   0x14000c260
   14000b4d0:	nop
   14000b4d1:	mov    eax,edi
   14000b4d3:	jmp    0x14000b4dd
   14000b4d5:	call   0x14000c280
   14000b4da:	nop
   14000b4db:	xor    eax,eax
   14000b4dd:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b4e2:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b4e7:	mov    rdi,QWORD PTR [rsp+0x60]
   14000b4ec:	add    rsp,0x30
   14000b4f0:	pop    r15
   14000b4f2:	pop    r14
   14000b4f4:	pop    r13
   14000b4f6:	ret    
   14000b4f7:	int3   
   14000b4f8:	rex push rbx
   14000b4fa:	push   rsi
   14000b4fb:	push   rdi
   14000b4fc:	push   r12
   14000b4fe:	push   r13
   14000b500:	push   r14
   14000b502:	push   r15
   14000b504:	sub    rsp,0x90
   14000b50b:	mov    rdi,rcx
   14000b50e:	xor    r15d,r15d
   14000b511:	mov    DWORD PTR [rsp+0x20],r15d
   14000b516:	and    DWORD PTR [rsp+0xd0],r15d
   14000b51e:	and    QWORD PTR [rsp+0x40],r15
   14000b523:	and    QWORD PTR [rsp+0xe8],r15
   14000b52b:	call   0x14000a3ec
   14000b530:	mov    r13,QWORD PTR [rax+0xf8]
   14000b537:	mov    QWORD PTR [rsp+0x50],r13
   14000b53c:	call   0x14000a3ec
   14000b541:	mov    rax,QWORD PTR [rax+0xf0]
   14000b548:	mov    QWORD PTR [rsp+0xe0],rax
   14000b550:	mov    rsi,QWORD PTR [rdi+0x50]
   14000b554:	mov    QWORD PTR [rsp+0xd8],rsi
   14000b55c:	mov    rax,QWORD PTR [rdi+0x48]
   14000b560:	mov    QWORD PTR [rsp+0x48],rax
   14000b565:	mov    rbx,QWORD PTR [rdi+0x40]
   14000b569:	mov    rax,QWORD PTR [rdi+0x30]
   14000b56d:	mov    QWORD PTR [rsp+0x58],rax
   14000b572:	mov    r14,QWORD PTR [rdi+0x28]
   14000b576:	mov    QWORD PTR [rsp+0x60],r14
   14000b57b:	call   0x14000a3ec
   14000b580:	mov    QWORD PTR [rax+0xf0],rsi
   14000b587:	call   0x14000a3ec
   14000b58c:	mov    QWORD PTR [rax+0xf8],rbx
   14000b593:	call   0x14000a3ec
   14000b598:	mov    rdx,QWORD PTR [rax+0xf0]
   14000b59f:	mov    rdx,QWORD PTR [rdx+0x28]
   14000b5a3:	lea    rcx,[rsp+0x78]
   14000b5a8:	call   0x140006a90
   14000b5ad:	mov    r12,rax
   14000b5b0:	mov    QWORD PTR [rsp+0x38],rax
   14000b5b5:	cmp    QWORD PTR [rdi+0x58],r15
   14000b5b9:	je     0x14000b5da
   14000b5bb:	mov    DWORD PTR [rsp+0xd0],0x1
   14000b5c6:	call   0x14000a3ec
   14000b5cb:	mov    rcx,QWORD PTR [rax+0x138]
   14000b5d2:	mov    QWORD PTR [rsp+0xe8],rcx
   14000b5da:	mov    r8d,0x100
   14000b5e0:	mov    rdx,r14
   14000b5e3:	mov    rcx,QWORD PTR [rsp+0x58]
   14000b5e8:	call   0x140013bc0
   14000b5ed:	mov    rbx,rax
   14000b5f0:	mov    QWORD PTR [rsp+0x40],rax
   14000b5f5:	mov    rdi,QWORD PTR [rsp+0xe0]
   14000b5fd:	jmp    0x14000b67a
   14000b5ff:	mov    DWORD PTR [rsp+0x20],0x1
   14000b607:	call   0x14000a3ec
   14000b60c:	and    DWORD PTR [rax+0x460],0x0
   14000b613:	mov    rsi,QWORD PTR [rsp+0xd8]
   14000b61b:	cmp    DWORD PTR [rsp+0xd0],0x0
   14000b623:	je     0x14000b646
   14000b625:	mov    dl,0x1
   14000b627:	mov    rcx,rsi
   14000b62a:	call   0x14000a5fc
   14000b62f:	mov    rax,QWORD PTR [rsp+0xe8]
   14000b637:	lea    r9,[rax+0x20]
   14000b63b:	mov    r8d,DWORD PTR [rax+0x18]
   14000b63f:	mov    edx,DWORD PTR [rax+0x4]
   14000b642:	mov    ecx,DWORD PTR [rax]
   14000b644:	jmp    0x14000b653
   14000b646:	lea    r9,[rsi+0x20]
   14000b64a:	mov    r8d,DWORD PTR [rsi+0x18]
   14000b64e:	mov    edx,DWORD PTR [rsi+0x4]
   14000b651:	mov    ecx,DWORD PTR [rsi]
   14000b653:	call   QWORD PTR [rip+0x20acf]        # 0x14002c128
   14000b659:	mov    r15d,DWORD PTR [rsp+0x20]
   14000b65e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b663:	mov    r13,QWORD PTR [rsp+0x50]
   14000b668:	mov    rdi,QWORD PTR [rsp+0xe0]
   14000b670:	mov    r14,QWORD PTR [rsp+0x60]
   14000b675:	mov    r12,QWORD PTR [rsp+0x38]
   14000b67a:	mov    rcx,r12
   14000b67d:	call   0x140006ad4
   14000b682:	test   r15d,r15d
   14000b685:	jne    0x14000b6b9
   14000b687:	cmp    DWORD PTR [rsi],0xe06d7363
   14000b68d:	jne    0x14000b6b9
   14000b68f:	cmp    DWORD PTR [rsi+0x18],0x4
   14000b693:	jne    0x14000b6b9
   14000b695:	mov    eax,DWORD PTR [rsi+0x20]
   14000b698:	sub    eax,0x19930520
   14000b69d:	cmp    eax,0x2
   14000b6a0:	ja     0x14000b6b9
   14000b6a2:	mov    rcx,QWORD PTR [rsi+0x28]
   14000b6a6:	call   0x140006b64
   14000b6ab:	test   eax,eax
   14000b6ad:	je     0x14000b6b9
   14000b6af:	mov    dl,0x1
   14000b6b1:	mov    rcx,rsi
   14000b6b4:	call   0x14000a5fc
   14000b6b9:	call   0x14000a3ec
   14000b6be:	mov    QWORD PTR [rax+0xf0],rdi
   14000b6c5:	call   0x14000a3ec
   14000b6ca:	mov    QWORD PTR [rax+0xf8],r13
   14000b6d1:	mov    rax,QWORD PTR [rsp+0x48]
   14000b6d6:	movsxd rcx,DWORD PTR [rax+0x1c]
   14000b6da:	mov    rax,QWORD PTR [r14]
   14000b6dd:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14000b6e5:	mov    rax,rbx
   14000b6e8:	add    rsp,0x90
   14000b6ef:	pop    r15
   14000b6f1:	pop    r14
   14000b6f3:	pop    r13
   14000b6f5:	pop    r12
   14000b6f7:	pop    rdi
   14000b6f8:	pop    rsi
   14000b6f9:	pop    rbx
   14000b6fa:	ret    
   14000b6fb:	int3   
   14000b6fc:	sub    rsp,0x28
   14000b700:	test   rcx,rcx
   14000b703:	je     0x14000b73c
   14000b705:	mov    rcx,QWORD PTR [rcx]
   14000b708:	cmp    DWORD PTR [rcx],0xe06d7363
   14000b70e:	jne    0x14000b73c
   14000b710:	cmp    DWORD PTR [rcx+0x18],0x4
   14000b714:	jne    0x14000b73c
   14000b716:	mov    eax,DWORD PTR [rcx+0x20]
   14000b719:	sub    eax,0x19930520
   14000b71e:	cmp    eax,0x2
   14000b721:	ja     0x14000b73c
   14000b723:	cmp    QWORD PTR [rcx+0x30],0x0
   14000b728:	jne    0x14000b73c
   14000b72a:	call   0x14000a3ec
   14000b72f:	inc    DWORD PTR [rax+0x100]
   14000b735:	mov    eax,0x1
   14000b73a:	jmp    0x14000b73e
   14000b73c:	xor    eax,eax
   14000b73e:	add    rsp,0x28
   14000b742:	ret    
   14000b743:	int3   
   14000b744:	mov    QWORD PTR [rsp+0x10],rbx
   14000b749:	mov    QWORD PTR [rsp+0x18],rsi
   14000b74e:	mov    QWORD PTR [rsp+0x20],rdi
   14000b753:	push   r12
   14000b755:	push   r14
   14000b757:	push   r15
   14000b759:	sub    rsp,0x60
   14000b75d:	mov    QWORD PTR [rsp+0x38],rsp
   14000b762:	mov    r12,r9
   14000b765:	mov    esi,r8d
   14000b768:	mov    rdi,rdx
   14000b76b:	test   rcx,rcx
   14000b76e:	jne    0x14000b777
   14000b770:	xor    eax,eax
   14000b772:	jmp    0x14000b91f
   14000b777:	mov    rbx,QWORD PTR [rcx]
   14000b77a:	test   rdx,rdx
   14000b77d:	je     0x14000b785
   14000b77f:	cmp    BYTE PTR [rdx+0x10],0x0
   14000b783:	jne    0x14000b7a7
   14000b785:	cmp    DWORD PTR [rbx],0xe0434f4d
   14000b78b:	je     0x14000b8da
   14000b791:	cmp    DWORD PTR [rbx],0xe0434352
   14000b797:	je     0x14000b8da
   14000b79d:	test   sil,0x40
   14000b7a1:	je     0x14000b8da
   14000b7a7:	cmp    DWORD PTR [rbx],0xe06d7363
   14000b7ad:	jne    0x14000b770
   14000b7af:	cmp    DWORD PTR [rbx+0x18],0x4
   14000b7b3:	jne    0x14000b770
   14000b7b5:	mov    eax,DWORD PTR [rbx+0x20]
   14000b7b8:	sub    eax,0x19930520
   14000b7bd:	cmp    eax,0x2
   14000b7c0:	ja     0x14000b770
   14000b7c2:	cmp    QWORD PTR [rbx+0x30],0x0
   14000b7c7:	jne    0x14000b7e4
   14000b7c9:	call   0x14000a3ec
   14000b7ce:	cmp    QWORD PTR [rax+0xf0],0x0
   14000b7d6:	je     0x14000b770
   14000b7d8:	call   0x14000a3ec
   14000b7dd:	mov    rbx,QWORD PTR [rax+0xf0]
   14000b7e4:	call   0x140006b34
   14000b7e9:	mov    r15,rax
   14000b7ec:	mov    QWORD PTR [rsp+0x30],rax
   14000b7f1:	mov    rcx,QWORD PTR [rbx+0x38]
   14000b7f5:	call   0x140006bc0
   14000b7fa:	nop
   14000b7fb:	lea    rdx,[rsp+0x80]
   14000b803:	mov    rcx,rdi
   14000b806:	call   QWORD PTR [rip+0x20914]        # 0x14002c120
   14000b80c:	mov    QWORD PTR [rsp+0x80],rax
   14000b814:	mov    rcx,rax
   14000b817:	call   0x140006ba4
   14000b81c:	sub    rdi,QWORD PTR [rsp+0x80]
   14000b824:	mov    DWORD PTR [rsp+0x44],edi
   14000b828:	mov    DWORD PTR [rsp+0x40],esi
   14000b82c:	bts    esi,0x1f
   14000b830:	mov    DWORD PTR [rsp+0x40],esi
   14000b834:	call   0x140006b4c
   14000b839:	mov    rcx,QWORD PTR [rbx+0x30]
   14000b83d:	movsxd rsi,DWORD PTR [rcx+0xc]
   14000b841:	add    rax,0x4
   14000b845:	add    rsi,rax
   14000b848:	mov    QWORD PTR [rsp+0x28],rsi
   14000b84d:	call   0x140006b4c
   14000b852:	mov    rcx,QWORD PTR [rbx+0x30]
   14000b856:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000b85a:	mov    edi,DWORD PTR [rax+rdx*1]
   14000b85d:	mov    DWORD PTR [rsp+0x20],edi
   14000b861:	test   edi,edi
   14000b863:	jle    0x14000b8cd
   14000b865:	call   0x140006b4c
   14000b86a:	mov    r14,rax
   14000b86d:	movsxd rax,DWORD PTR [rsi]
   14000b870:	add    r14,rax
   14000b873:	mov    r8,QWORD PTR [rbx+0x30]
   14000b877:	mov    rdx,r14
   14000b87a:	lea    rcx,[rsp+0x40]
   14000b87f:	call   0x14000c000
   14000b884:	test   eax,eax
   14000b886:	je     0x14000b8bc
   14000b888:	call   0x14000a3ec
   14000b88d:	inc    DWORD PTR [rax+0x100]
   14000b893:	test   r12,r12
   14000b896:	je     0x14000b8ab
   14000b898:	mov    r9,r14
   14000b89b:	lea    r8,[rsp+0x40]
   14000b8a0:	mov    rdx,r12
   14000b8a3:	mov    rcx,rbx
   14000b8a6:	call   0x14000b1f0
   14000b8ab:	lea    rdx,[rip+0x68]        # 0x14000b91a
   14000b8b2:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b8b7:	call   0x140010cd0
   14000b8bc:	dec    edi
   14000b8be:	mov    DWORD PTR [rsp+0x20],edi
   14000b8c2:	add    rsi,0x4
   14000b8c6:	mov    QWORD PTR [rsp+0x28],rsi
   14000b8cb:	jmp    0x14000b861
   14000b8cd:	mov    rcx,r15
   14000b8d0:	call   0x140006ba4
   14000b8d5:	jmp    0x14000b770
   14000b8da:	cmp    DWORD PTR [rbx],0xe06d7363
   14000b8e0:	jne    0x14000b90f
   14000b8e2:	cmp    DWORD PTR [rbx+0x18],0x4
   14000b8e6:	jne    0x14000b90f
   14000b8e8:	mov    eax,DWORD PTR [rbx+0x20]
   14000b8eb:	sub    eax,0x19930520
   14000b8f0:	cmp    eax,0x2
   14000b8f3:	ja     0x14000b90f
   14000b8f5:	cmp    QWORD PTR [rbx+0x30],0x0
   14000b8fa:	jne    0x14000b90f
   14000b8fc:	call   0x14000a3ec
   14000b901:	cmp    QWORD PTR [rax+0xf0],0x0
   14000b909:	je     0x14000b770
   14000b90f:	call   0x14000a3ec
   14000b914:	inc    DWORD PTR [rax+0x100]
   14000b91a:	mov    eax,0x1
   14000b91f:	lea    r11,[rsp+0x60]
   14000b924:	mov    rbx,QWORD PTR [r11+0x28]
   14000b928:	mov    rsi,QWORD PTR [r11+0x30]
   14000b92c:	mov    rdi,QWORD PTR [r11+0x38]
   14000b930:	mov    rsp,r11
   14000b933:	pop    r15
   14000b935:	pop    r14
   14000b937:	pop    r12
   14000b939:	ret    
   14000b93a:	int3   
   14000b93b:	int3   
   14000b93c:	mov    eax,0x20
   14000b941:	ret    
   14000b942:	int3   
   14000b943:	int3   
   14000b944:	mov    QWORD PTR [rsp+0x8],rbx
   14000b949:	push   rdi
   14000b94a:	sub    rsp,0x20
   14000b94e:	mov    rdi,rdx
   14000b951:	test   rcx,rcx
   14000b954:	je     0x14000b9c6
   14000b956:	mov    rbx,QWORD PTR [rcx]
   14000b959:	test   rbx,rbx
   14000b95c:	je     0x14000b9c6
   14000b95e:	cmp    DWORD PTR [rbx],0xe06d7363
   14000b964:	jne    0x14000b98c
   14000b966:	cmp    DWORD PTR [rbx+0x18],0x4
   14000b96a:	jne    0x14000b98c
   14000b96c:	mov    eax,DWORD PTR [rbx+0x20]
   14000b96f:	sub    eax,0x19930520
   14000b974:	cmp    eax,0x2
   14000b977:	ja     0x14000b98c
   14000b979:	cmp    QWORD PTR [rbx+0x30],0x0
   14000b97e:	jne    0x14000b98c
   14000b980:	call   0x14000a3ec
   14000b985:	mov    rbx,QWORD PTR [rax+0xf0]
   14000b98c:	mov    rdx,QWORD PTR [rbx+0x28]
   14000b990:	mov    rcx,rdi
   14000b993:	call   0x140006a90
   14000b998:	call   0x14000a3ec
   14000b99d:	mov    rcx,QWORD PTR [rax+0xf0]
   14000b9a4:	mov    QWORD PTR [rdi+0x10],rcx
   14000b9a8:	call   0x14000a3ec
   14000b9ad:	mov    rcx,QWORD PTR [rax+0xf8]
   14000b9b4:	mov    QWORD PTR [rdi+0x18],rcx
   14000b9b8:	call   0x14000a3ec
   14000b9bd:	mov    QWORD PTR [rax+0xf0],rbx
   14000b9c4:	jmp    0x14000b9d0
   14000b9c6:	or     QWORD PTR [rdx+0x10],0xffffffffffffffff
   14000b9cb:	or     QWORD PTR [rdx+0x18],0xffffffffffffffff
   14000b9d0:	call   0x14000a3ec
   14000b9d5:	dec    DWORD PTR [rax+0x100]
   14000b9db:	call   0x14000a3ec
   14000b9e0:	cmp    DWORD PTR [rax+0x100],0x0
   14000b9e7:	jge    0x14000b9f5
   14000b9e9:	call   0x14000a3ec
   14000b9ee:	and    DWORD PTR [rax+0x100],0x0
   14000b9f5:	mov    eax,0x1
   14000b9fa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b9ff:	add    rsp,0x20
   14000ba03:	pop    rdi
   14000ba04:	ret    
   14000ba05:	int3   
   14000ba06:	int3   
   14000ba07:	int3   
   14000ba08:	mov    QWORD PTR [rsp+0x8],rbx
   14000ba0d:	push   rdi
   14000ba0e:	sub    rsp,0x20
   14000ba12:	cmp    QWORD PTR [rcx+0x10],0xffffffffffffffff
   14000ba17:	mov    edi,edx
   14000ba19:	mov    rbx,rcx
   14000ba1c:	je     0x14000bb54
   14000ba22:	call   0x140006ad4
   14000ba27:	test   edi,edi
   14000ba29:	jne    0x14000bac0
   14000ba2f:	call   0x14000a3ec
   14000ba34:	mov    rcx,QWORD PTR [rax+0xf0]
   14000ba3b:	cmp    DWORD PTR [rcx],0xe06d7363
   14000ba41:	jne    0x14000bac0
   14000ba43:	call   0x14000a3ec
   14000ba48:	mov    rcx,QWORD PTR [rax+0xf0]
   14000ba4f:	cmp    DWORD PTR [rcx+0x18],0x4
   14000ba53:	jne    0x14000bac0
   14000ba55:	call   0x14000a3ec
   14000ba5a:	mov    rcx,QWORD PTR [rax+0xf0]
   14000ba61:	cmp    DWORD PTR [rcx+0x20],0x19930520
   14000ba68:	je     0x14000ba94
   14000ba6a:	call   0x14000a3ec
   14000ba6f:	mov    rcx,QWORD PTR [rax+0xf0]
   14000ba76:	cmp    DWORD PTR [rcx+0x20],0x19930521
   14000ba7d:	je     0x14000ba94
   14000ba7f:	call   0x14000a3ec
   14000ba84:	mov    rcx,QWORD PTR [rax+0xf0]
   14000ba8b:	cmp    DWORD PTR [rcx+0x20],0x19930522
   14000ba92:	jne    0x14000bac0
   14000ba94:	call   0x14000a3ec
   14000ba99:	mov    rcx,QWORD PTR [rax+0xf0]
   14000baa0:	mov    rcx,QWORD PTR [rcx+0x28]
   14000baa4:	call   0x140006b64
   14000baa9:	test   eax,eax
   14000baab:	je     0x14000bac0
   14000baad:	call   0x14000a3ec
   14000bab2:	mov    dl,0x1
   14000bab4:	mov    rcx,QWORD PTR [rax+0xf0]
   14000babb:	call   0x14000a5fc
   14000bac0:	call   0x14000a3ec
   14000bac5:	mov    rcx,QWORD PTR [rax+0xf0]
   14000bacc:	cmp    DWORD PTR [rcx],0xe06d7363
   14000bad2:	jne    0x14000bb34
   14000bad4:	call   0x14000a3ec
   14000bad9:	mov    rcx,QWORD PTR [rax+0xf0]
   14000bae0:	cmp    DWORD PTR [rcx+0x18],0x4
   14000bae4:	jne    0x14000bb34
   14000bae6:	call   0x14000a3ec
   14000baeb:	mov    rcx,QWORD PTR [rax+0xf0]
   14000baf2:	cmp    DWORD PTR [rcx+0x20],0x19930520
   14000baf9:	je     0x14000bb25
   14000bafb:	call   0x14000a3ec
   14000bb00:	mov    rcx,QWORD PTR [rax+0xf0]
   14000bb07:	cmp    DWORD PTR [rcx+0x20],0x19930521
   14000bb0e:	je     0x14000bb25
   14000bb10:	call   0x14000a3ec
   14000bb15:	mov    rcx,QWORD PTR [rax+0xf0]
   14000bb1c:	cmp    DWORD PTR [rcx+0x20],0x19930522
   14000bb23:	jne    0x14000bb34
   14000bb25:	test   edi,edi
   14000bb27:	je     0x14000bb34
   14000bb29:	call   0x14000a3ec
   14000bb2e:	dec    DWORD PTR [rax+0x100]
   14000bb34:	call   0x14000a3ec
   14000bb39:	mov    rcx,QWORD PTR [rbx+0x10]
   14000bb3d:	mov    QWORD PTR [rax+0xf0],rcx
   14000bb44:	call   0x14000a3ec
   14000bb49:	mov    rcx,QWORD PTR [rbx+0x18]
   14000bb4d:	mov    QWORD PTR [rax+0xf8],rcx
   14000bb54:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bb59:	add    rsp,0x20
   14000bb5d:	pop    rdi
   14000bb5e:	ret    
   14000bb5f:	int3   
   14000bb60:	sub    rsp,0x28
   14000bb64:	mov    rax,QWORD PTR [rcx]
   14000bb67:	cmp    DWORD PTR [rax],0xe0434352
   14000bb6d:	je     0x14000bb81
   14000bb6f:	cmp    DWORD PTR [rax],0xe0434f4d
   14000bb75:	je     0x14000bb81
   14000bb77:	cmp    DWORD PTR [rax],0xe06d7363
   14000bb7d:	jne    0x14000bb9a
   14000bb7f:	jmp    0x14000bba1
   14000bb81:	call   0x14000a3ec
   14000bb86:	cmp    DWORD PTR [rax+0x100],0x0
   14000bb8d:	jle    0x14000bb9a
   14000bb8f:	call   0x14000a3ec
   14000bb94:	dec    DWORD PTR [rax+0x100]
   14000bb9a:	xor    eax,eax
   14000bb9c:	add    rsp,0x28
   14000bba0:	ret    
   14000bba1:	call   0x14000a3ec
   14000bba6:	and    DWORD PTR [rax+0x100],0x0
   14000bbad:	call   0x14000c280
   14000bbb2:	int3   
   14000bbb3:	int3   
   14000bbb4:	mov    rax,rsp
   14000bbb7:	mov    DWORD PTR [rax+0x20],r9d
   14000bbbb:	mov    QWORD PTR [rax+0x18],r8
   14000bbbf:	mov    QWORD PTR [rax+0x10],rdx
   14000bbc3:	mov    QWORD PTR [rax+0x8],rcx
   14000bbc7:	push   rbx
   14000bbc8:	push   rsi
   14000bbc9:	push   rdi
   14000bbca:	push   r12
   14000bbcc:	push   r13
   14000bbce:	push   r14
   14000bbd0:	push   r15
   14000bbd2:	sub    rsp,0x30
   14000bbd6:	mov    r12d,r9d
   14000bbd9:	mov    rsi,r8
   14000bbdc:	mov    r13,rdx
   14000bbdf:	mov    r15,rcx
   14000bbe2:	call   0x140006b34
   14000bbe7:	mov    QWORD PTR [rsp+0x28],rax
   14000bbec:	mov    r8,rsi
   14000bbef:	mov    rdx,r13
   14000bbf2:	mov    rcx,r15
   14000bbf5:	call   0x14000c130
   14000bbfa:	mov    edi,eax
   14000bbfc:	call   0x14000a3ec
   14000bc01:	inc    DWORD PTR [rax+0x100]
   14000bc07:	cmp    edi,0xffffffff
   14000bc0a:	je     0x14000bcfd
   14000bc10:	cmp    edi,r12d
   14000bc13:	jle    0x14000bcfd
   14000bc19:	cmp    edi,0xffffffff
   14000bc1c:	jle    0x14000bc23
   14000bc1e:	cmp    edi,DWORD PTR [rsi+0x4]
   14000bc21:	jl     0x14000bc28
   14000bc23:	call   0x14000c260
   14000bc28:	movsxd r14,edi
   14000bc2b:	call   0x140006b34
   14000bc30:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000bc34:	lea    rax,[rax+r14*8]
   14000bc38:	mov    edi,DWORD PTR [rcx+rax*1]
   14000bc3b:	mov    DWORD PTR [rsp+0x20],edi
   14000bc3f:	call   0x140006b34
   14000bc44:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000bc48:	lea    rax,[rax+r14*8]
   14000bc4c:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000bc51:	je     0x14000bc6f
   14000bc53:	call   0x140006b34
   14000bc58:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000bc5c:	lea    rax,[rax+r14*8]
   14000bc60:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000bc65:	call   0x140006b34
   14000bc6a:	add    rax,rbx
   14000bc6d:	jmp    0x14000bc71
   14000bc6f:	xor    eax,eax
   14000bc71:	test   rax,rax
   14000bc74:	je     0x14000bcd4
   14000bc76:	mov    r9d,edi
   14000bc79:	mov    r8,rsi
   14000bc7c:	mov    rdx,r13
   14000bc7f:	mov    rcx,r15
   14000bc82:	call   0x14000c184
   14000bc87:	call   0x140006b34
   14000bc8c:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000bc90:	lea    rax,[rax+r14*8]
   14000bc94:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000bc99:	je     0x14000bcb7
   14000bc9b:	call   0x140006b34
   14000bca0:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000bca4:	lea    rax,[rax+r14*8]
   14000bca8:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000bcad:	call   0x140006b34
   14000bcb2:	add    rax,rbx
   14000bcb5:	jmp    0x14000bcb9
   14000bcb7:	xor    eax,eax
   14000bcb9:	mov    r8d,0x103
   14000bcbf:	mov    rdx,r15
   14000bcc2:	mov    rcx,rax
   14000bcc5:	call   0x140013bc0
   14000bcca:	mov    rcx,QWORD PTR [rsp+0x28]
   14000bccf:	call   0x140006ba4
   14000bcd4:	jmp    0x14000bcf4
   14000bcd6:	mov    r12d,DWORD PTR [rsp+0x88]
   14000bcde:	mov    rsi,QWORD PTR [rsp+0x80]
   14000bce6:	mov    r13,QWORD PTR [rsp+0x78]
   14000bceb:	mov    r15,QWORD PTR [rsp+0x70]
   14000bcf0:	mov    edi,DWORD PTR [rsp+0x20]
   14000bcf4:	mov    DWORD PTR [rsp+0x24],edi
   14000bcf8:	jmp    0x14000bc07
   14000bcfd:	call   0x14000a3ec
   14000bd02:	cmp    DWORD PTR [rax+0x100],0x0
   14000bd09:	jle    0x14000bd16
   14000bd0b:	call   0x14000a3ec
   14000bd10:	dec    DWORD PTR [rax+0x100]
   14000bd16:	cmp    edi,0xffffffff
   14000bd19:	je     0x14000bd25
   14000bd1b:	cmp    edi,r12d
   14000bd1e:	jle    0x14000bd25
   14000bd20:	call   0x14000c260
   14000bd25:	mov    r9d,edi
   14000bd28:	mov    r8,rsi
   14000bd2b:	mov    rdx,r13
   14000bd2e:	mov    rcx,r15
   14000bd31:	call   0x14000c184
   14000bd36:	add    rsp,0x30
   14000bd3a:	pop    r15
   14000bd3c:	pop    r14
   14000bd3e:	pop    r13
   14000bd40:	pop    r12
   14000bd42:	pop    rdi
   14000bd43:	pop    rsi
   14000bd44:	pop    rbx
   14000bd45:	ret    
   14000bd46:	int3   
   14000bd47:	int3   
   14000bd48:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd4d:	mov    QWORD PTR [rsp+0x10],rsi
   14000bd52:	push   rdi
   14000bd53:	sub    rsp,0x20
   14000bd57:	and    DWORD PTR [rcx],0x0
   14000bd5a:	mov    rsi,rcx
   14000bd5d:	call   0x14000a3ec
   14000bd62:	mov    rax,QWORD PTR [rax+0xf0]
   14000bd69:	test   rax,rax
   14000bd6c:	je     0x14000bdc7
   14000bd6e:	mov    rbx,QWORD PTR [rax+0x30]
   14000bd72:	test   rbx,rbx
   14000bd75:	je     0x14000bd89
   14000bd77:	test   BYTE PTR [rbx],0x10
   14000bd7a:	je     0x14000bd89
   14000bd7c:	mov    rax,QWORD PTR [rax+0x28]
   14000bd80:	mov    rax,QWORD PTR [rax]
   14000bd83:	mov    rax,QWORD PTR [rax-0x8]
   14000bd87:	jmp    0x14000bdc9
   14000bd89:	call   0x140006b4c
   14000bd8e:	movsxd rdi,DWORD PTR [rbx+0xc]
   14000bd92:	add    rax,0x4
   14000bd96:	add    rdi,rax
   14000bd99:	call   0x140006b4c
   14000bd9e:	movsxd rcx,DWORD PTR [rbx+0xc]
   14000bda2:	mov    ebx,DWORD PTR [rax+rcx*1]
   14000bda5:	jmp    0x14000bdbb
   14000bda7:	call   0x140006b4c
   14000bdac:	movsxd rcx,DWORD PTR [rdi]
   14000bdaf:	test   BYTE PTR [rax+rcx*1],0x10
   14000bdb3:	jne    0x14000bdc1
   14000bdb5:	dec    ebx
   14000bdb7:	add    rdi,0x4
   14000bdbb:	test   ebx,ebx
   14000bdbd:	jg     0x14000bda7
   14000bdbf:	jmp    0x14000bdc7
   14000bdc1:	mov    DWORD PTR [rsi],0x1
   14000bdc7:	xor    eax,eax
   14000bdc9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bdce:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bdd3:	add    rsp,0x20
   14000bdd7:	pop    rdi
   14000bdd8:	ret    
   14000bdd9:	int3   
   14000bdda:	int3   
   14000bddb:	int3   
   14000bddc:	mov    QWORD PTR [rsp+0x8],rbx
   14000bde1:	mov    QWORD PTR [rsp+0x10],rbp
   14000bde6:	mov    QWORD PTR [rsp+0x18],rsi
   14000bdeb:	push   rdi
   14000bdec:	push   r12
   14000bdee:	push   r14
   14000bdf0:	sub    rsp,0x40
   14000bdf4:	mov    rbp,r9
   14000bdf7:	mov    r14,r8
   14000bdfa:	mov    rsi,rdx
   14000bdfd:	mov    rbx,rcx
   14000be00:	call   0x14000a3ec
   14000be05:	mov    rdi,QWORD PTR [rsp+0x80]
   14000be0d:	cmp    DWORD PTR [rax+0x460],0x0
   14000be14:	mov    edx,0x1fffffff
   14000be19:	mov    r8d,0x80000029
   14000be1f:	mov    r9d,0x80000026
   14000be25:	mov    r12d,0x1
   14000be2b:	jne    0x14000be65
   14000be2d:	cmp    DWORD PTR [rbx],0xe06d7363
   14000be33:	je     0x14000be65
   14000be35:	cmp    DWORD PTR [rbx],r8d
   14000be38:	jne    0x14000be4a
   14000be3a:	cmp    DWORD PTR [rbx+0x18],0xf
   14000be3e:	jne    0x14000be4a
   14000be40:	cmp    QWORD PTR [rbx+0x60],0x19930520
   14000be48:	je     0x14000be65
   14000be4a:	cmp    DWORD PTR [rbx],r9d
   14000be4d:	je     0x14000be65
   14000be4f:	mov    ecx,DWORD PTR [rdi]
   14000be51:	and    ecx,edx
   14000be53:	cmp    ecx,0x19930522
   14000be59:	jb     0x14000be65
   14000be5b:	test   BYTE PTR [rdi+0x24],r12b
   14000be5f:	jne    0x14000bfe4
   14000be65:	mov    eax,DWORD PTR [rbx+0x4]
   14000be68:	test   al,0x66
   14000be6a:	je     0x14000bf02
   14000be70:	cmp    DWORD PTR [rdi+0x4],0x0
   14000be74:	je     0x14000bfe4
   14000be7a:	cmp    DWORD PTR [rsp+0x88],0x0
   14000be82:	jne    0x14000bfe4
   14000be88:	and    eax,0x20
   14000be8b:	je     0x14000becb
   14000be8d:	cmp    DWORD PTR [rbx],r9d
   14000be90:	jne    0x14000becb
   14000be92:	mov    r8,QWORD PTR [r14+0xf8]
   14000be99:	mov    rdx,rbp
   14000be9c:	mov    rcx,rdi
   14000be9f:	call   0x14000c1d4
   14000bea4:	mov    ebx,eax
   14000bea6:	cmp    eax,0xffffffff
   14000bea9:	jl     0x14000beb0
   14000beab:	cmp    eax,DWORD PTR [rdi+0x4]
   14000beae:	jl     0x14000beb5
   14000beb0:	call   0x14000c260
   14000beb5:	mov    r9d,ebx
   14000beb8:	mov    rcx,rsi
   14000bebb:	mov    rdx,rbp
   14000bebe:	mov    r8,rdi
   14000bec1:	call   0x14000bbb4
   14000bec6:	jmp    0x14000bfe4
   14000becb:	test   eax,eax
   14000becd:	je     0x14000beef
   14000becf:	cmp    DWORD PTR [rbx],r8d
   14000bed2:	jne    0x14000beef
   14000bed4:	mov    esi,DWORD PTR [rbx+0x38]
   14000bed7:	cmp    esi,0xffffffff
   14000beda:	jl     0x14000bee1
   14000bedc:	cmp    esi,DWORD PTR [rdi+0x4]
   14000bedf:	jl     0x14000bee6
   14000bee1:	call   0x14000c260
   14000bee6:	mov    rcx,QWORD PTR [rbx+0x28]
   14000beea:	mov    r9d,esi
   14000beed:	jmp    0x14000bebb
   14000beef:	mov    r8,rdi
   14000bef2:	mov    rdx,rbp
   14000bef5:	mov    rcx,rsi
   14000bef8:	call   0x140006904
   14000befd:	jmp    0x14000bfe4
   14000bf02:	cmp    DWORD PTR [rdi+0xc],0x0
   14000bf06:	jne    0x14000bf36
   14000bf08:	mov    eax,DWORD PTR [rdi]
   14000bf0a:	and    eax,edx
   14000bf0c:	cmp    eax,0x19930521
   14000bf11:	jb     0x14000bfe4
   14000bf17:	cmp    DWORD PTR [rdi+0x20],0x0
   14000bf1b:	je     0x14000bf2b
   14000bf1d:	call   0x140006b34
   14000bf22:	movsxd rcx,DWORD PTR [rdi+0x20]
   14000bf26:	add    rax,rcx
   14000bf29:	jmp    0x14000bf2d
   14000bf2b:	xor    eax,eax
   14000bf2d:	test   rax,rax
   14000bf30:	je     0x14000bfe4
   14000bf36:	cmp    DWORD PTR [rbx],0xe06d7363
   14000bf3c:	jne    0x14000bfab
   14000bf3e:	cmp    DWORD PTR [rbx+0x18],0x3
   14000bf42:	jb     0x14000bfab
   14000bf44:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14000bf4b:	jbe    0x14000bfab
   14000bf4d:	mov    rax,QWORD PTR [rbx+0x30]
   14000bf51:	cmp    DWORD PTR [rax+0x8],0x0
   14000bf55:	je     0x14000bf69
   14000bf57:	call   0x140006b4c
   14000bf5c:	mov    rcx,QWORD PTR [rbx+0x30]
   14000bf60:	movsxd r10,DWORD PTR [rcx+0x8]
   14000bf64:	add    r10,rax
   14000bf67:	jmp    0x14000bf6c
   14000bf69:	xor    r10d,r10d
   14000bf6c:	test   r10,r10
   14000bf6f:	je     0x14000bfab
   14000bf71:	movzx  eax,BYTE PTR [rsp+0x98]
   14000bf79:	mov    r9,rbp
   14000bf7c:	mov    r8,r14
   14000bf7f:	mov    DWORD PTR [rsp+0x38],eax
   14000bf83:	mov    rax,QWORD PTR [rsp+0x90]
   14000bf8b:	mov    rdx,rsi
   14000bf8e:	mov    QWORD PTR [rsp+0x30],rax
   14000bf93:	mov    eax,DWORD PTR [rsp+0x88]
   14000bf9a:	mov    rcx,rbx
   14000bf9d:	mov    DWORD PTR [rsp+0x28],eax
   14000bfa1:	mov    QWORD PTR [rsp+0x20],rdi
   14000bfa6:	call   r10
   14000bfa9:	jmp    0x14000bfe7
   14000bfab:	mov    rax,QWORD PTR [rsp+0x90]
   14000bfb3:	mov    r9,rbp
   14000bfb6:	mov    r8,r14
   14000bfb9:	mov    QWORD PTR [rsp+0x38],rax
   14000bfbe:	mov    eax,DWORD PTR [rsp+0x88]
   14000bfc5:	mov    rdx,rsi
   14000bfc8:	mov    DWORD PTR [rsp+0x30],eax
   14000bfcc:	mov    al,BYTE PTR [rsp+0x98]
   14000bfd3:	mov    rcx,rbx
   14000bfd6:	mov    BYTE PTR [rsp+0x28],al
   14000bfda:	mov    QWORD PTR [rsp+0x20],rdi
   14000bfdf:	call   0x14000a858
   14000bfe4:	mov    eax,r12d
   14000bfe7:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bfec:	mov    rbp,QWORD PTR [rsp+0x68]
   14000bff1:	mov    rsi,QWORD PTR [rsp+0x70]
   14000bff6:	add    rsp,0x40
   14000bffa:	pop    r14
   14000bffc:	pop    r12
   14000bffe:	pop    rdi
   14000bfff:	ret    
   14000c000:	mov    rax,rsp
   14000c003:	mov    QWORD PTR [rax+0x8],rbx
   14000c007:	mov    QWORD PTR [rax+0x10],rbp
   14000c00b:	mov    QWORD PTR [rax+0x18],rsi
   14000c00f:	mov    QWORD PTR [rax+0x20],rdi
   14000c013:	push   r14
   14000c015:	sub    rsp,0x20
   14000c019:	mov    esi,DWORD PTR [rcx+0x4]
   14000c01c:	xor    ebx,ebx
   14000c01e:	mov    r14,r8
   14000c021:	mov    rbp,rdx
   14000c024:	mov    rdi,rcx
   14000c027:	test   esi,esi
   14000c029:	je     0x14000c039
   14000c02b:	movsxd rsi,esi
   14000c02e:	call   0x140006b34
   14000c033:	lea    rcx,[rsi+rax*1]
   14000c037:	jmp    0x14000c03c
   14000c039:	mov    rcx,rbx
   14000c03c:	test   rcx,rcx
   14000c03f:	je     0x14000c10d
   14000c045:	test   esi,esi
   14000c047:	je     0x14000c058
   14000c049:	movsxd rsi,DWORD PTR [rdi+0x4]
   14000c04d:	call   0x140006b34
   14000c052:	lea    rcx,[rsi+rax*1]
   14000c056:	jmp    0x14000c05b
   14000c058:	mov    rcx,rbx
   14000c05b:	cmp    BYTE PTR [rcx+0x10],bl
   14000c05e:	je     0x14000c10d
   14000c064:	test   BYTE PTR [rdi],0x80
   14000c067:	je     0x14000c073
   14000c069:	test   BYTE PTR [rbp+0x0],0x10
   14000c06d:	jne    0x14000c10d
   14000c073:	test   esi,esi
   14000c075:	je     0x14000c088
   14000c077:	call   0x140006b34
   14000c07c:	mov    rsi,rax
   14000c07f:	movsxd rax,DWORD PTR [rdi+0x4]
   14000c083:	add    rsi,rax
   14000c086:	jmp    0x14000c08b
   14000c088:	mov    rsi,rbx
   14000c08b:	call   0x140006b4c
   14000c090:	mov    rcx,rax
   14000c093:	movsxd rax,DWORD PTR [rbp+0x4]
   14000c097:	add    rcx,rax
   14000c09a:	cmp    rsi,rcx
   14000c09d:	je     0x14000c0d9
   14000c09f:	cmp    DWORD PTR [rdi+0x4],ebx
   14000c0a2:	je     0x14000c0b5
   14000c0a4:	call   0x140006b34
   14000c0a9:	mov    rsi,rax
   14000c0ac:	movsxd rax,DWORD PTR [rdi+0x4]
   14000c0b0:	add    rsi,rax
   14000c0b3:	jmp    0x14000c0b8
   14000c0b5:	mov    rsi,rbx
   14000c0b8:	call   0x140006b4c
   14000c0bd:	movsxd rdx,DWORD PTR [rbp+0x4]
   14000c0c1:	lea    rcx,[rsi+0x10]
   14000c0c5:	add    rdx,0x10
   14000c0c9:	add    rdx,rax
   14000c0cc:	call   0x14000c3b0
   14000c0d1:	test   eax,eax
   14000c0d3:	je     0x14000c0d9
   14000c0d5:	xor    eax,eax
   14000c0d7:	jmp    0x14000c112
   14000c0d9:	mov    al,0x2
   14000c0db:	test   BYTE PTR [rbp+0x0],al
   14000c0de:	je     0x14000c0e5
   14000c0e0:	test   BYTE PTR [rdi],0x8
   14000c0e3:	je     0x14000c109
   14000c0e5:	test   BYTE PTR [r14],0x1
   14000c0e9:	je     0x14000c0f0
   14000c0eb:	test   BYTE PTR [rdi],0x1
   14000c0ee:	je     0x14000c109
   14000c0f0:	test   BYTE PTR [r14],0x4
   14000c0f4:	je     0x14000c0fb
   14000c0f6:	test   BYTE PTR [rdi],0x4
   14000c0f9:	je     0x14000c109
   14000c0fb:	test   BYTE PTR [r14],al
   14000c0fe:	je     0x14000c104
   14000c100:	test   BYTE PTR [rdi],al
   14000c102:	je     0x14000c109
   14000c104:	mov    ebx,0x1
   14000c109:	mov    eax,ebx
   14000c10b:	jmp    0x14000c112
   14000c10d:	mov    eax,0x1
   14000c112:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c117:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c11c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c121:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c126:	add    rsp,0x20
   14000c12a:	pop    r14
   14000c12c:	ret    
   14000c12d:	int3   
   14000c12e:	int3   
   14000c12f:	int3   
   14000c130:	sub    rsp,0x28
   14000c134:	movsxd r9,DWORD PTR [r8+0x1c]
   14000c138:	mov    rax,QWORD PTR [rcx]
   14000c13b:	mov    r10,r8
   14000c13e:	mov    eax,DWORD PTR [r9+rax*1]
   14000c142:	cmp    eax,0xfffffffe
   14000c145:	jne    0x14000c152
   14000c147:	mov    r8,QWORD PTR [rdx]
   14000c14a:	mov    rcx,r10
   14000c14d:	call   0x14000c1d4
   14000c152:	add    rsp,0x28
   14000c156:	ret    
   14000c157:	int3   
   14000c158:	rex push rbx
   14000c15a:	sub    rsp,0x20
   14000c15e:	lea    r9,[rsp+0x40]
   14000c163:	mov    rbx,r8
   14000c166:	call   0x14000670c
   14000c16b:	mov    rcx,QWORD PTR [rax]
   14000c16e:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000c172:	mov    QWORD PTR [rsp+0x40],rcx
   14000c177:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14000c17b:	add    rsp,0x20
   14000c17f:	pop    rbx
   14000c180:	ret    
   14000c181:	int3   
   14000c182:	int3   
   14000c183:	int3   
   14000c184:	movsxd rdx,DWORD PTR [r8+0x1c]
   14000c188:	mov    rax,QWORD PTR [rcx]
   14000c18b:	mov    DWORD PTR [rdx+rax*1],r9d
   14000c18f:	ret    
   14000c190:	mov    QWORD PTR [rsp+0x8],rbx
   14000c195:	push   rdi
   14000c196:	sub    rsp,0x20
   14000c19a:	mov    edi,r9d
   14000c19d:	lea    r9,[rsp+0x40]
   14000c1a2:	mov    rbx,r8
   14000c1a5:	call   0x14000670c
   14000c1aa:	mov    rcx,QWORD PTR [rax]
   14000c1ad:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000c1b1:	mov    QWORD PTR [rsp+0x40],rcx
   14000c1b6:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14000c1ba:	jle    0x14000c1c0
   14000c1bc:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14000c1c0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c1c5:	add    rsp,0x20
   14000c1c9:	pop    rdi
   14000c1ca:	ret    
   14000c1cb:	int3   
   14000c1cc:	mov    r8,QWORD PTR [rdx]
   14000c1cf:	jmp    0x14000c1d4
   14000c1d4:	mov    QWORD PTR [rsp+0x8],rbx
   14000c1d9:	mov    QWORD PTR [rsp+0x10],rbp
   14000c1de:	mov    QWORD PTR [rsp+0x18],rsi
   14000c1e3:	push   rdi
   14000c1e4:	sub    rsp,0x20
   14000c1e8:	mov    rbp,r8
   14000c1eb:	mov    rsi,rdx
   14000c1ee:	mov    rbx,rcx
   14000c1f1:	test   rcx,rcx
   14000c1f4:	jne    0x14000c1fb
   14000c1f6:	call   0x14000c260
   14000c1fb:	movsxd rax,DWORD PTR [rbx+0x18]
   14000c1ff:	mov    edi,DWORD PTR [rbx+0x14]
   14000c202:	add    rax,QWORD PTR [rsi+0x8]
   14000c206:	jne    0x14000c20d
   14000c208:	call   0x14000c260
   14000c20d:	xor    r8d,r8d
   14000c210:	test   edi,edi
   14000c212:	je     0x14000c248
   14000c214:	mov    r9,QWORD PTR [rsi+0x8]
   14000c218:	movsxd r10,DWORD PTR [rbx+0x18]
   14000c21c:	lea    rcx,[r9+r8*8]
   14000c220:	movsxd rdx,DWORD PTR [rcx+r10*1]
   14000c224:	add    rdx,r9
   14000c227:	cmp    rbp,rdx
   14000c22a:	jl     0x14000c234
   14000c22c:	inc    r8d
   14000c22f:	cmp    r8d,edi
   14000c232:	jb     0x14000c21c
   14000c234:	test   r8d,r8d
   14000c237:	je     0x14000c248
   14000c239:	lea    ecx,[r8-0x1]
   14000c23d:	lea    rax,[r9+rcx*8]
   14000c241:	mov    eax,DWORD PTR [rax+r10*1+0x4]
   14000c246:	jmp    0x14000c24b
   14000c248:	or     eax,0xffffffff
   14000c24b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c250:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c255:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c25a:	add    rsp,0x20
   14000c25e:	pop    rdi
   14000c25f:	ret    
   14000c260:	sub    rsp,0x28
   14000c264:	mov    rcx,QWORD PTR [rip+0x31a7d]        # 0x14003dce8
   14000c26b:	call   QWORD PTR [rip+0x1fea7]        # 0x14002c118
   14000c271:	test   rax,rax
   14000c274:	je     0x14000c27a
   14000c276:	call   rax
   14000c278:	jmp    0x14000c27a
   14000c27a:	call   0x14000c280
   14000c27f:	nop
   14000c280:	sub    rsp,0x28
   14000c284:	call   0x14000a3ec
   14000c289:	mov    rcx,QWORD PTR [rax+0xd0]
   14000c290:	test   rcx,rcx
   14000c293:	je     0x14000c299
   14000c295:	call   rcx
   14000c297:	jmp    0x14000c299
   14000c299:	call   0x140007998
   14000c29e:	nop
   14000c29f:	int3   
   14000c2a0:	sub    rsp,0x28
   14000c2a4:	call   0x14000a3ec
   14000c2a9:	mov    rcx,QWORD PTR [rax+0xd8]
   14000c2b0:	test   rcx,rcx
   14000c2b3:	je     0x14000c2b7
   14000c2b5:	call   rcx
   14000c2b7:	call   0x14000c280
   14000c2bc:	int3   
   14000c2bd:	int3   
   14000c2be:	int3   
   14000c2bf:	int3   
   14000c2c0:	sub    rsp,0x28
   14000c2c4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000c280
   14000c2cb:	call   QWORD PTR [rip+0x1fe3f]        # 0x14002c110
   14000c2d1:	mov    QWORD PTR [rip+0x31a10],rax        # 0x14003dce8
   14000c2d8:	add    rsp,0x28
   14000c2dc:	ret    
   14000c2dd:	int3   
   14000c2de:	int3   
   14000c2df:	int3   
   14000c2e0:	sub    rsp,0x28
   14000c2e4:	mov    r8,QWORD PTR [r9+0x38]
   14000c2e8:	mov    rcx,rdx
   14000c2eb:	mov    rdx,r9
   14000c2ee:	call   0x14000c300
   14000c2f3:	mov    eax,0x1
   14000c2f8:	add    rsp,0x28
   14000c2fc:	ret    
   14000c2fd:	int3   
   14000c2fe:	int3   
   14000c2ff:	int3   
   14000c300:	rex push rbx
   14000c302:	sub    rsp,0x20
   14000c306:	mov    r11d,DWORD PTR [r8]
   14000c309:	mov    rbx,rdx
   14000c30c:	mov    r9,rcx
   14000c30f:	and    r11d,0xfffffff8
   14000c313:	test   BYTE PTR [r8],0x4
   14000c317:	mov    r10,rcx
   14000c31a:	je     0x14000c32f
   14000c31c:	mov    eax,DWORD PTR [r8+0x8]
   14000c320:	movsxd r10,DWORD PTR [r8+0x4]
   14000c324:	neg    eax
   14000c326:	add    r10,rcx
   14000c329:	movsxd rcx,eax
   14000c32c:	and    r10,rcx
   14000c32f:	movsxd rax,r11d
   14000c332:	mov    rdx,QWORD PTR [rax+r10*1]
   14000c336:	mov    rax,QWORD PTR [rbx+0x10]
   14000c33a:	mov    ecx,DWORD PTR [rax+0x8]
   14000c33d:	add    rcx,QWORD PTR [rbx+0x8]
   14000c341:	test   BYTE PTR [rcx+0x3],0xf
   14000c345:	je     0x14000c353
   14000c347:	movzx  eax,BYTE PTR [rcx+0x3]
   14000c34b:	and    eax,0xfffffff0
   14000c34e:	cdqe   
   14000c350:	add    r9,rax
   14000c353:	xor    r9,rdx
   14000c356:	mov    rcx,r9
   14000c359:	add    rsp,0x20
   14000c35d:	pop    rbx
   14000c35e:	jmp    0x14000c380
   14000c363:	int3   
   14000c364:	int3   
   14000c365:	int3   
   14000c366:	int3   
   14000c367:	int3   
   14000c368:	int3   
   14000c369:	int3   
   14000c36a:	int3   
   14000c36b:	int3   
   14000c36c:	int3   
   14000c36d:	int3   
   14000c36e:	int3   
   14000c36f:	int3   
   14000c370:	int3   
   14000c371:	int3   
   14000c372:	int3   
   14000c373:	int3   
   14000c374:	int3   
   14000c375:	int3   
   14000c376:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c380:	cmp    rcx,QWORD PTR [rip+0x2fe49]        # 0x14003c1d0
   14000c387:	jne    0x14000c39a
   14000c389:	rol    rcx,0x10
   14000c38d:	test   cx,0xffff
   14000c392:	jne    0x14000c396
   14000c394:	repz ret 
   14000c396:	ror    rcx,0x10
   14000c39a:	jmp    0x140013c54
   14000c39f:	int3   
   14000c3a0:	int3   
   14000c3a1:	int3   
   14000c3a2:	int3   
   14000c3a3:	int3   
   14000c3a4:	int3   
   14000c3a5:	int3   
   14000c3a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c3b0:	sub    rdx,rcx
   14000c3b3:	test   cl,0x7
   14000c3b6:	je     0x14000c3cc
   14000c3b8:	movzx  eax,BYTE PTR [rcx]
   14000c3bb:	cmp    al,BYTE PTR [rcx+rdx*1]
   14000c3be:	jne    0x14000c40f
   14000c3c0:	inc    rcx
   14000c3c3:	test   al,al
   14000c3c5:	je     0x14000c40c
   14000c3c7:	test   cl,0x7
   14000c3ca:	jne    0x14000c3b8
   14000c3cc:	movabs r11,0x8080808080808080
   14000c3d6:	movabs r10,0xfefefefefefefeff
   14000c3e0:	lea    eax,[ecx+edx*1]
   14000c3e4:	and    eax,0xfff
   14000c3e9:	cmp    eax,0xff8
   14000c3ee:	ja     0x14000c3b8
   14000c3f0:	mov    rax,QWORD PTR [rcx]
   14000c3f3:	cmp    rax,QWORD PTR [rcx+rdx*1]
   14000c3f7:	jne    0x14000c3b8
   14000c3f9:	lea    r9,[r10+rax*1]
   14000c3fd:	not    rax
   14000c400:	add    rcx,0x8
   14000c404:	and    rax,r9
   14000c407:	test   r11,rax
   14000c40a:	je     0x14000c3e0
   14000c40c:	xor    eax,eax
   14000c40e:	ret    
   14000c40f:	sbb    rax,rax
   14000c412:	or     rax,0x1
   14000c416:	ret    
   14000c417:	int3   
   14000c418:	mov    r11,rsp
   14000c41b:	mov    QWORD PTR [r11+0x8],rbx
   14000c41f:	mov    QWORD PTR [r11+0x10],rsi
   14000c423:	mov    QWORD PTR [r11+0x18],rdi
   14000c427:	mov    QWORD PTR [r11+0x20],r14
   14000c42b:	push   r15
   14000c42d:	sub    rsp,0x30
   14000c431:	mov    r15,rdx
   14000c434:	mov    rdi,rcx
   14000c437:	cmp    QWORD PTR [rcx+0x8],0x0
   14000c43c:	jne    0x14000c52d
   14000c442:	mov    eax,0x2800
   14000c447:	lea    rdx,[rcx+0x11]
   14000c44b:	mov    WORD PTR [rsp+0x28],ax
   14000c450:	lea    rax,[rip+0xffffffffffffb969]        # 0x140007dc0
   14000c457:	mov    QWORD PTR [r11-0x18],rax
   14000c45b:	lea    r9,[rip+0xffffffffffffb802]        # 0x140007c64
   14000c462:	xor    r8d,r8d
   14000c465:	xor    ecx,ecx
   14000c467:	call   0x14001ab48
   14000c46c:	mov    r14,rax
   14000c46f:	test   rax,rax
   14000c472:	je     0x14000c531
   14000c478:	mov    rcx,rax
   14000c47b:	call   0x140007550
   14000c480:	mov    rbx,rax
   14000c483:	test   rax,rax
   14000c486:	je     0x14000c49c
   14000c488:	dec    rbx
   14000c48b:	cmp    BYTE PTR [rbx+r14*1],0x20
   14000c490:	jne    0x14000c49f
   14000c492:	mov    BYTE PTR [rbx+r14*1],0x0
   14000c497:	test   rbx,rbx
   14000c49a:	jne    0x14000c488
   14000c49c:	dec    rbx
   14000c49f:	mov    ecx,0xe
   14000c4a4:	call   0x14000fc2c
   14000c4a9:	nop
   14000c4aa:	cmp    QWORD PTR [rdi+0x8],0x0
   14000c4af:	jne    0x14000c51a
   14000c4b1:	mov    ecx,0x10
   14000c4b6:	call   0x140007c64
   14000c4bb:	mov    rsi,rax
   14000c4be:	test   rax,rax
   14000c4c1:	je     0x14000c51a
   14000c4c3:	lea    rcx,[rbx+0x2]
   14000c4c7:	call   0x140007c64
   14000c4cc:	mov    QWORD PTR [rdi+0x8],rax
   14000c4d0:	test   rax,rax
   14000c4d3:	je     0x14000c512
   14000c4d5:	mov    r8,r14
   14000c4d8:	lea    rdx,[rbx+0x2]
   14000c4dc:	mov    rcx,rax
   14000c4df:	call   0x14000edd8
   14000c4e4:	test   eax,eax
   14000c4e6:	jne    0x14000c4fd
   14000c4e8:	mov    rax,QWORD PTR [rdi+0x8]
   14000c4ec:	mov    QWORD PTR [rsi],rax
   14000c4ef:	mov    rax,QWORD PTR [r15+0x8]
   14000c4f3:	mov    QWORD PTR [rsi+0x8],rax
   14000c4f7:	mov    QWORD PTR [r15+0x8],rsi
   14000c4fb:	jmp    0x14000c51a
   14000c4fd:	and    QWORD PTR [rsp+0x20],0x0
   14000c503:	xor    r9d,r9d
   14000c506:	xor    r8d,r8d
   14000c509:	xor    edx,edx
   14000c50b:	xor    ecx,ecx
   14000c50d:	call   0x140008da8
   14000c512:	mov    rcx,rsi
   14000c515:	call   0x140007dc0
   14000c51a:	mov    rcx,r14
   14000c51d:	call   0x140007dc0
   14000c522:	nop
   14000c523:	mov    ecx,0xe
   14000c528:	call   0x14000fe48
   14000c52d:	mov    rax,QWORD PTR [rdi+0x8]
   14000c531:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c536:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c53b:	mov    rdi,QWORD PTR [rsp+0x50]
   14000c540:	mov    r14,QWORD PTR [rsp+0x58]
   14000c545:	add    rsp,0x30
   14000c549:	pop    r15
   14000c54b:	ret    
   14000c54c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c551:	mov    QWORD PTR [rsp+0x10],rsi
   14000c556:	mov    QWORD PTR [rsp+0x18],rdi
   14000c55b:	push   r12
   14000c55d:	push   r14
   14000c55f:	push   r15
   14000c561:	sub    rsp,0x40
   14000c565:	mov    QWORD PTR [rsp+0x38],rsp
   14000c56a:	mov    r15,rdx
   14000c56d:	mov    rsi,rcx
   14000c570:	cmp    QWORD PTR [rcx+0x8],0x0
   14000c575:	jne    0x14000c687
   14000c57b:	mov    ecx,0xe
   14000c580:	call   0x14000fc2c
   14000c585:	nop
   14000c586:	cmp    QWORD PTR [rsi+0x8],0x0
   14000c58b:	jne    0x14000c67d
   14000c591:	mov    eax,0x2800
   14000c596:	lea    rdx,[rsi+0x11]
   14000c59a:	mov    WORD PTR [rsp+0x28],ax
   14000c59f:	lea    rax,[rip+0xffffffffffffb81a]        # 0x140007dc0
   14000c5a6:	mov    QWORD PTR [rsp+0x20],rax
   14000c5ab:	lea    r9,[rip+0xffffffffffffb6b2]        # 0x140007c64
   14000c5b2:	xor    r8d,r8d
   14000c5b5:	xor    ecx,ecx
   14000c5b7:	call   0x14001ab48
   14000c5bc:	mov    r14,rax
   14000c5bf:	test   rax,rax
   14000c5c2:	jne    0x14000c5dc
   14000c5c4:	lea    rdx,[rip+0xa]        # 0x14000c5d5
   14000c5cb:	mov    rcx,rsp
   14000c5ce:	call   0x140010cd0
   14000c5d3:	nop
   14000c5d4:	nop
   14000c5d5:	xor    eax,eax
   14000c5d7:	jmp    0x14000c68b
   14000c5dc:	mov    rcx,rax
   14000c5df:	call   0x140007550
   14000c5e4:	mov    rbx,rax
   14000c5e7:	mov    QWORD PTR [rsp+0x30],rax
   14000c5ec:	mov    rcx,rbx
   14000c5ef:	dec    rbx
   14000c5f2:	mov    QWORD PTR [rsp+0x30],rbx
   14000c5f7:	test   rcx,rcx
   14000c5fa:	je     0x14000c60a
   14000c5fc:	cmp    BYTE PTR [rbx+r14*1],0x20
   14000c601:	jne    0x14000c60a
   14000c603:	mov    BYTE PTR [rbx+r14*1],0x0
   14000c608:	jmp    0x14000c5ec
   14000c60a:	mov    ecx,0x10
   14000c60f:	call   0x140007c64
   14000c614:	mov    rdi,rax
   14000c617:	test   rax,rax
   14000c61a:	je     0x14000c674
   14000c61c:	lea    r12,[rbx+0x2]
   14000c620:	mov    rcx,r12
   14000c623:	call   0x140007c64
   14000c628:	mov    rbx,rax
   14000c62b:	test   rax,rax
   14000c62e:	je     0x14000c66c
   14000c630:	mov    r8,r14
   14000c633:	mov    rdx,r12
   14000c636:	mov    rcx,rax
   14000c639:	call   0x14000edd8
   14000c63e:	test   eax,eax
   14000c640:	jne    0x14000c657
   14000c642:	mov    QWORD PTR [rsi+0x8],rbx
   14000c646:	mov    QWORD PTR [rdi],rbx
   14000c649:	mov    rax,QWORD PTR [r15+0x8]
   14000c64d:	mov    QWORD PTR [rdi+0x8],rax
   14000c651:	mov    QWORD PTR [r15+0x8],rdi
   14000c655:	jmp    0x14000c674
   14000c657:	and    QWORD PTR [rsp+0x20],0x0
   14000c65d:	xor    r9d,r9d
   14000c660:	xor    r8d,r8d
   14000c663:	xor    edx,edx
   14000c665:	xor    ecx,ecx
   14000c667:	call   0x140008da8
   14000c66c:	mov    rcx,rdi
   14000c66f:	call   0x140007dc0
   14000c674:	mov    rcx,r14
   14000c677:	call   0x140007dc0
   14000c67c:	nop
   14000c67d:	mov    ecx,0xe
   14000c682:	call   0x14000fe48
   14000c687:	mov    rax,QWORD PTR [rsi+0x8]
   14000c68b:	mov    rbx,QWORD PTR [rsp+0x60]
   14000c690:	mov    rsi,QWORD PTR [rsp+0x68]
   14000c695:	mov    rdi,QWORD PTR [rsp+0x70]
   14000c69a:	add    rsp,0x40
   14000c69e:	pop    r15
   14000c6a0:	pop    r14
   14000c6a2:	pop    r12
   14000c6a4:	ret    
   14000c6a5:	int3   
   14000c6a6:	int3   
   14000c6a7:	int3   
   14000c6a8:	rex push rbx
   14000c6aa:	sub    rsp,0x30
   14000c6ae:	mov    rbx,rcx
   14000c6b1:	mov    ecx,0xe
   14000c6b6:	call   0x14000fc2c
   14000c6bb:	nop
   14000c6bc:	mov    rax,QWORD PTR [rbx+0x8]
   14000c6c0:	test   rax,rax
   14000c6c3:	je     0x14000c704
   14000c6c5:	mov    rcx,QWORD PTR [rip+0x3162c]        # 0x14003dcf8
   14000c6cc:	lea    rdx,[rip+0x3161d]        # 0x14003dcf0
   14000c6d3:	mov    QWORD PTR [rsp+0x20],rcx
   14000c6d8:	test   rcx,rcx
   14000c6db:	je     0x14000c6f6
   14000c6dd:	cmp    QWORD PTR [rcx],rax
   14000c6e0:	jne    0x14000c6f1
   14000c6e2:	mov    rax,QWORD PTR [rcx+0x8]
   14000c6e6:	mov    QWORD PTR [rdx+0x8],rax
   14000c6ea:	call   0x140007dc0
   14000c6ef:	jmp    0x14000c6f6
   14000c6f1:	mov    rdx,rcx
   14000c6f4:	jmp    0x14000c6d3
   14000c6f6:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c6fa:	call   0x140007dc0
   14000c6ff:	and    QWORD PTR [rbx+0x8],0x0
   14000c704:	mov    ecx,0xe
   14000c709:	call   0x14000fe48
   14000c70e:	add    rsp,0x30
   14000c712:	pop    rbx
   14000c713:	ret    
   14000c714:	rex push rbx
   14000c716:	sub    rsp,0x30
   14000c71a:	mov    rbx,rcx
   14000c71d:	mov    ecx,0xe
   14000c722:	call   0x14000fc2c
   14000c727:	nop
   14000c728:	mov    rax,QWORD PTR [rbx+0x8]
   14000c72c:	test   rax,rax
   14000c72f:	je     0x14000c770
   14000c731:	mov    rcx,QWORD PTR [rip+0x315c0]        # 0x14003dcf8
   14000c738:	lea    rdx,[rip+0x315b1]        # 0x14003dcf0
   14000c73f:	mov    QWORD PTR [rsp+0x20],rcx
   14000c744:	test   rcx,rcx
   14000c747:	je     0x14000c762
   14000c749:	cmp    QWORD PTR [rcx],rax
   14000c74c:	jne    0x14000c75d
   14000c74e:	mov    rax,QWORD PTR [rcx+0x8]
   14000c752:	mov    QWORD PTR [rdx+0x8],rax
   14000c756:	call   0x140007dc0
   14000c75b:	jmp    0x14000c762
   14000c75d:	mov    rdx,rcx
   14000c760:	jmp    0x14000c73f
   14000c762:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c766:	call   0x140007dc0
   14000c76b:	and    QWORD PTR [rbx+0x8],0x0
   14000c770:	mov    ecx,0xe
   14000c775:	call   0x14000fe48
   14000c77a:	add    rsp,0x30
   14000c77e:	pop    rbx
   14000c77f:	ret    
   14000c780:	mov    QWORD PTR [rsp+0x8],rbx
   14000c785:	push   rdi
   14000c786:	sub    rsp,0x20
   14000c78a:	mov    rbx,rcx
   14000c78d:	mov    ecx,0xe
   14000c792:	call   0x14000fc2c
   14000c797:	nop
   14000c798:	mov    rbx,QWORD PTR [rbx+0x8]
   14000c79c:	test   rbx,rbx
   14000c79f:	je     0x14000c7ba
   14000c7a1:	mov    rdi,QWORD PTR [rbx+0x8]
   14000c7a5:	mov    rcx,QWORD PTR [rbx]
   14000c7a8:	call   0x140007dc0
   14000c7ad:	mov    rcx,rbx
   14000c7b0:	call   0x140007dc0
   14000c7b5:	mov    rbx,rdi
   14000c7b8:	jmp    0x14000c79c
   14000c7ba:	mov    ecx,0xe
   14000c7bf:	call   0x14000fe48
   14000c7c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7c9:	add    rsp,0x20
   14000c7cd:	pop    rdi
   14000c7ce:	ret    
   14000c7cf:	int3   
   14000c7d0:	sub    rsp,0x38
   14000c7d4:	movzx  eax,r9w
   14000c7d8:	test   r9w,r9w
   14000c7dc:	jne    0x14000c7e3
   14000c7de:	mov    eax,0x2800
   14000c7e3:	mov    WORD PTR [rsp+0x28],ax
   14000c7e8:	lea    rax,[rip+0xffffffffffffb5d1]        # 0x140007dc0
   14000c7ef:	lea    r9,[rip+0xffffffffffffb46e]        # 0x140007c64
   14000c7f6:	mov    QWORD PTR [rsp+0x20],rax
   14000c7fb:	call   0x14001ab48
   14000c800:	add    rsp,0x38
   14000c804:	ret    
   14000c805:	int3   
   14000c806:	int3   
   14000c807:	int3   
   14000c808:	jmp    0x14001ba50
   14000c80d:	int3   
   14000c80e:	int3   
   14000c80f:	int3   
   14000c810:	sub    rsp,0x48
   14000c814:	mov    eax,DWORD PTR [rsp+0x78]
   14000c818:	and    QWORD PTR [rsp+0x30],0x0
   14000c81e:	mov    DWORD PTR [rsp+0x28],eax
   14000c822:	mov    eax,DWORD PTR [rsp+0x70]
   14000c826:	mov    DWORD PTR [rsp+0x20],eax
   14000c82a:	call   0x14000c834
   14000c82f:	add    rsp,0x48
   14000c833:	ret    
   14000c834:	sub    rsp,0x38
   14000c838:	lea    eax,[r9-0x45]
   14000c83c:	mov    r10d,0xffffffdf
   14000c842:	test   r10d,eax
   14000c845:	je     0x14000c891
   14000c847:	cmp    r9d,0x66
   14000c84b:	jne    0x14000c863
   14000c84d:	mov    rax,QWORD PTR [rsp+0x70]
   14000c852:	mov    r9d,DWORD PTR [rsp+0x60]
   14000c857:	mov    QWORD PTR [rsp+0x20],rax
   14000c85c:	call   0x14000d108
   14000c861:	jmp    0x14000c8ad
   14000c863:	lea    eax,[r9-0x41]
   14000c867:	mov    r9d,DWORD PTR [rsp+0x60]
   14000c86c:	test   r10d,eax
   14000c86f:	mov    rax,QWORD PTR [rsp+0x70]
   14000c874:	mov    QWORD PTR [rsp+0x28],rax
   14000c879:	mov    eax,DWORD PTR [rsp+0x68]
   14000c87d:	mov    DWORD PTR [rsp+0x20],eax
   14000c881:	je     0x14000c88a
   14000c883:	call   0x14000d1f8
   14000c888:	jmp    0x14000c8ad
   14000c88a:	call   0x14000c8d0
   14000c88f:	jmp    0x14000c8ad
   14000c891:	mov    rax,QWORD PTR [rsp+0x70]
   14000c896:	mov    r9d,DWORD PTR [rsp+0x60]
   14000c89b:	mov    QWORD PTR [rsp+0x28],rax
   14000c8a0:	mov    eax,DWORD PTR [rsp+0x68]
   14000c8a4:	mov    DWORD PTR [rsp+0x20],eax
   14000c8a8:	call   0x14000ce98
   14000c8ad:	add    rsp,0x38
   14000c8b1:	ret    
   14000c8b2:	int3   
   14000c8b3:	int3   
   14000c8b4:	sub    rsp,0x38
   14000c8b8:	mov    eax,DWORD PTR [rsp+0x60]
   14000c8bc:	and    QWORD PTR [rsp+0x28],0x0
   14000c8c2:	mov    DWORD PTR [rsp+0x20],eax
   14000c8c6:	call   0x14000c8d0
   14000c8cb:	add    rsp,0x38
   14000c8cf:	ret    
   14000c8d0:	mov    rax,rsp
   14000c8d3:	mov    QWORD PTR [rax+0x8],rbx
   14000c8d7:	mov    QWORD PTR [rax+0x10],rbp
   14000c8db:	mov    QWORD PTR [rax+0x18],rsi
   14000c8df:	push   rdi
   14000c8e0:	push   r12
   14000c8e2:	push   r13
   14000c8e4:	push   r14
   14000c8e6:	push   r15
   14000c8e8:	sub    rsp,0x50
   14000c8ec:	mov    rdi,rdx
   14000c8ef:	mov    rdx,QWORD PTR [rsp+0xa8]
   14000c8f7:	mov    r14,rcx
   14000c8fa:	lea    rcx,[rax-0x48]
   14000c8fe:	mov    r15d,0x30
   14000c904:	mov    ebx,r9d
   14000c907:	mov    rsi,r8
   14000c90a:	mov    r12d,0x3ff
   14000c910:	movzx  ebp,r15w
   14000c914:	call   0x140008fac
   14000c919:	xor    r9d,r9d
   14000c91c:	test   ebx,ebx
   14000c91e:	cmovs  ebx,r9d
   14000c922:	test   rdi,rdi
   14000c925:	jne    0x14000c933
   14000c927:	call   0x140009cb4
   14000c92c:	mov    ebx,0x16
   14000c931:	jmp    0x14000c950
   14000c933:	test   rsi,rsi
   14000c936:	je     0x14000c927
   14000c938:	lea    eax,[rbx+0xb]
   14000c93b:	mov    BYTE PTR [rdi],r9b
   14000c93e:	movsxd rcx,eax
   14000c941:	cmp    rsi,rcx
   14000c944:	ja     0x14000c95f
   14000c946:	call   0x140009cb4
   14000c94b:	mov    ebx,0x22
   14000c950:	mov    DWORD PTR [rax],ebx
   14000c952:	call   0x140008d58
   14000c957:	xor    r9d,r9d
   14000c95a:	jmp    0x14000cc4d
   14000c95f:	mov    rax,QWORD PTR [r14]
   14000c962:	mov    ecx,0x7ff
   14000c967:	shr    rax,0x34
   14000c96b:	and    rax,rcx
   14000c96e:	cmp    rax,rcx
   14000c971:	jne    0x14000ca09
   14000c977:	mov    QWORD PTR [rsp+0x28],r9
   14000c97c:	mov    DWORD PTR [rsp+0x20],r9d
   14000c981:	lea    r8,[rsi-0x2]
   14000c985:	cmp    rsi,0xffffffffffffffff
   14000c989:	lea    rdx,[rdi+0x2]
   14000c98d:	mov    r9d,ebx
   14000c990:	cmove  r8,rsi
   14000c994:	mov    rcx,r14
   14000c997:	call   0x14000ce98
   14000c99c:	xor    r9d,r9d
   14000c99f:	mov    ebx,eax
   14000c9a1:	test   eax,eax
   14000c9a3:	je     0x14000c9ad
   14000c9a5:	mov    BYTE PTR [rdi],r9b
   14000c9a8:	jmp    0x14000cc4d
   14000c9ad:	cmp    BYTE PTR [rdi+0x2],0x2d
   14000c9b1:	mov    esi,0x1
   14000c9b6:	jne    0x14000c9be
   14000c9b8:	mov    BYTE PTR [rdi],0x2d
   14000c9bb:	add    rdi,rsi
   14000c9be:	mov    ebx,DWORD PTR [rsp+0xa0]
   14000c9c5:	mov    BYTE PTR [rdi],r15b
   14000c9c8:	mov    edx,0x65
   14000c9cd:	mov    eax,ebx
   14000c9cf:	neg    eax
   14000c9d1:	sbb    cl,cl
   14000c9d3:	and    cl,0xe0
   14000c9d6:	add    cl,0x78
   14000c9d9:	mov    BYTE PTR [rdi+rsi*1],cl
   14000c9dc:	lea    rcx,[rsi+0x1]
   14000c9e0:	add    rcx,rdi
   14000c9e3:	call   0x14001ba50
   14000c9e8:	xor    r9d,r9d
   14000c9eb:	test   rax,rax
   14000c9ee:	je     0x14000cc4a
   14000c9f4:	neg    ebx
   14000c9f6:	sbb    cl,cl
   14000c9f8:	and    cl,0xe0
   14000c9fb:	add    cl,0x70
   14000c9fe:	mov    BYTE PTR [rax],cl
   14000ca00:	mov    BYTE PTR [rax+0x3],r9b
   14000ca04:	jmp    0x14000cc4a
   14000ca09:	movabs rax,0x8000000000000000
   14000ca13:	mov    esi,0x1
   14000ca18:	test   QWORD PTR [r14],rax
   14000ca1b:	je     0x14000ca23
   14000ca1d:	mov    BYTE PTR [rdi],0x2d
   14000ca20:	add    rdi,rsi
   14000ca23:	mov    r13d,DWORD PTR [rsp+0xa0]
   14000ca2b:	mov    r10d,r15d
   14000ca2e:	movabs r11,0xfffffffffffff
   14000ca38:	mov    BYTE PTR [rdi],r10b
   14000ca3b:	add    rdi,rsi
   14000ca3e:	mov    eax,r13d
   14000ca41:	neg    eax
   14000ca43:	mov    eax,r13d
   14000ca46:	sbb    cl,cl
   14000ca48:	and    cl,0xe0
   14000ca4b:	add    cl,0x78
   14000ca4e:	mov    BYTE PTR [rdi],cl
   14000ca50:	add    rdi,rsi
   14000ca53:	neg    eax
   14000ca55:	sbb    edx,edx
   14000ca57:	movabs rax,0x7ff0000000000000
   14000ca61:	and    edx,0xffffffe0
   14000ca64:	sub    edx,0xffffffd9
   14000ca67:	test   QWORD PTR [r14],rax
   14000ca6a:	jne    0x14000ca87
   14000ca6c:	mov    BYTE PTR [rdi],r10b
   14000ca6f:	mov    rax,QWORD PTR [r14]
   14000ca72:	add    rdi,rsi
   14000ca75:	and    rax,r11
   14000ca78:	neg    rax
   14000ca7b:	sbb    r12,r12
   14000ca7e:	and    r12d,0x3fe
   14000ca85:	jmp    0x14000ca8d
   14000ca87:	mov    BYTE PTR [rdi],0x31
   14000ca8a:	add    rdi,rsi
   14000ca8d:	mov    r15,rdi
   14000ca90:	add    rdi,rsi
   14000ca93:	test   ebx,ebx
   14000ca95:	jne    0x14000ca9c
   14000ca97:	mov    BYTE PTR [r15],r9b
   14000ca9a:	jmp    0x14000cab0
   14000ca9c:	mov    rax,QWORD PTR [rsp+0x30]
   14000caa1:	mov    rcx,QWORD PTR [rax+0xf0]
   14000caa8:	mov    rax,QWORD PTR [rcx]
   14000caab:	mov    cl,BYTE PTR [rax]
   14000caad:	mov    BYTE PTR [r15],cl
   14000cab0:	test   QWORD PTR [r14],r11
   14000cab3:	jbe    0x14000cb41
   14000cab9:	movabs r8,0xf000000000000
   14000cac3:	test   ebx,ebx
   14000cac5:	jle    0x14000caf4
   14000cac7:	mov    rax,QWORD PTR [r14]
   14000caca:	mov    cl,bpl
   14000cacd:	and    rax,r8
   14000cad0:	and    rax,r11
   14000cad3:	shr    rax,cl
   14000cad6:	add    ax,r10w
   14000cada:	cmp    ax,0x39
   14000cade:	jbe    0x14000cae3
   14000cae0:	add    ax,dx
   14000cae3:	mov    BYTE PTR [rdi],al
   14000cae5:	shr    r8,0x4
   14000cae9:	sub    ebx,esi
   14000caeb:	add    rdi,rsi
   14000caee:	add    bp,0xfffc
   14000caf2:	jns    0x14000cac3
   14000caf4:	test   bp,bp
   14000caf7:	js     0x14000cb41
   14000caf9:	mov    rax,QWORD PTR [r14]
   14000cafc:	mov    cl,bpl
   14000caff:	and    rax,r8
   14000cb02:	and    rax,r11
   14000cb05:	shr    rax,cl
   14000cb08:	cmp    ax,0x8
   14000cb0c:	jbe    0x14000cb41
   14000cb0e:	lea    rcx,[rdi-0x1]
   14000cb12:	mov    al,BYTE PTR [rcx]
   14000cb14:	sub    al,0x46
   14000cb16:	test   al,0xdf
   14000cb18:	jne    0x14000cb22
   14000cb1a:	mov    BYTE PTR [rcx],r10b
   14000cb1d:	sub    rcx,rsi
   14000cb20:	jmp    0x14000cb12
   14000cb22:	cmp    rcx,r15
   14000cb25:	je     0x14000cb3b
   14000cb27:	mov    al,BYTE PTR [rcx]
   14000cb29:	cmp    al,0x39
   14000cb2b:	jne    0x14000cb34
   14000cb2d:	add    dl,0x3a
   14000cb30:	mov    BYTE PTR [rcx],dl
   14000cb32:	jmp    0x14000cb41
   14000cb34:	add    al,sil
   14000cb37:	mov    BYTE PTR [rcx],al
   14000cb39:	jmp    0x14000cb41
   14000cb3b:	sub    rcx,rsi
   14000cb3e:	add    BYTE PTR [rcx],sil
   14000cb41:	test   ebx,ebx
   14000cb43:	jle    0x14000cb5d
   14000cb45:	mov    r8,rbx
   14000cb48:	mov    dl,r10b
   14000cb4b:	mov    rcx,rdi
   14000cb4e:	call   0x140006f70
   14000cb53:	add    rdi,rbx
   14000cb56:	xor    r9d,r9d
   14000cb59:	lea    r10d,[r9+0x30]
   14000cb5d:	cmp    BYTE PTR [r15],r9b
   14000cb60:	cmove  rdi,r15
   14000cb64:	neg    r13d
   14000cb67:	sbb    al,al
   14000cb69:	and    al,0xe0
   14000cb6b:	add    al,0x70
   14000cb6d:	mov    BYTE PTR [rdi],al
   14000cb6f:	mov    rcx,QWORD PTR [r14]
   14000cb72:	add    rdi,rsi
   14000cb75:	shr    rcx,0x34
   14000cb79:	and    ecx,0x7ff
   14000cb7f:	sub    rcx,r12
   14000cb82:	js     0x14000cb8c
   14000cb84:	mov    BYTE PTR [rdi],0x2b
   14000cb87:	add    rdi,rsi
   14000cb8a:	jmp    0x14000cb95
   14000cb8c:	mov    BYTE PTR [rdi],0x2d
   14000cb8f:	add    rdi,rsi
   14000cb92:	neg    rcx
   14000cb95:	mov    r8,rdi
   14000cb98:	mov    BYTE PTR [rdi],r10b
   14000cb9b:	cmp    rcx,0x3e8
   14000cba2:	jl     0x14000cbd7
   14000cba4:	movabs rax,0x20c49ba5e353f7cf
   14000cbae:	imul   rcx
   14000cbb1:	sar    rdx,0x7
   14000cbb5:	mov    rax,rdx
   14000cbb8:	shr    rax,0x3f
   14000cbbc:	add    rdx,rax
   14000cbbf:	lea    eax,[r10+rdx*1]
   14000cbc3:	mov    BYTE PTR [rdi],al
   14000cbc5:	add    rdi,rsi
   14000cbc8:	imul   rax,rdx,0xfffffffffffffc18
   14000cbcf:	add    rcx,rax
   14000cbd2:	cmp    rdi,r8
   14000cbd5:	jne    0x14000cbdd
   14000cbd7:	cmp    rcx,0x64
   14000cbdb:	jl     0x14000cc0b
   14000cbdd:	movabs rax,0xa3d70a3d70a3d70b
   14000cbe7:	imul   rcx
   14000cbea:	add    rdx,rcx
   14000cbed:	sar    rdx,0x6
   14000cbf1:	mov    rax,rdx
   14000cbf4:	shr    rax,0x3f
   14000cbf8:	add    rdx,rax
   14000cbfb:	lea    eax,[r10+rdx*1]
   14000cbff:	mov    BYTE PTR [rdi],al
   14000cc01:	add    rdi,rsi
   14000cc04:	imul   rax,rdx,0xffffffffffffff9c
   14000cc08:	add    rcx,rax
   14000cc0b:	cmp    rdi,r8
   14000cc0e:	jne    0x14000cc16
   14000cc10:	cmp    rcx,0xa
   14000cc14:	jl     0x14000cc41
   14000cc16:	movabs rax,0x6666666666666667
   14000cc20:	imul   rcx
   14000cc23:	sar    rdx,0x2
   14000cc27:	mov    rax,rdx
   14000cc2a:	shr    rax,0x3f
   14000cc2e:	add    rdx,rax
   14000cc31:	lea    eax,[r10+rdx*1]
   14000cc35:	mov    BYTE PTR [rdi],al
   14000cc37:	add    rdi,rsi
   14000cc3a:	imul   rax,rdx,0xfffffffffffffff6
   14000cc3e:	add    rcx,rax
   14000cc41:	add    cl,r10b
   14000cc44:	mov    BYTE PTR [rdi],cl
   14000cc46:	mov    BYTE PTR [rdi+0x1],r9b
   14000cc4a:	mov    ebx,r9d
   14000cc4d:	cmp    BYTE PTR [rsp+0x48],r9b
   14000cc52:	je     0x14000cc60
   14000cc54:	mov    rcx,QWORD PTR [rsp+0x40]
   14000cc59:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000cc60:	lea    r11,[rsp+0x50]
   14000cc65:	mov    eax,ebx
   14000cc67:	mov    rbx,QWORD PTR [r11+0x30]
   14000cc6b:	mov    rbp,QWORD PTR [r11+0x38]
   14000cc6f:	mov    rsi,QWORD PTR [r11+0x40]
   14000cc73:	mov    rsp,r11
   14000cc76:	pop    r15
   14000cc78:	pop    r14
   14000cc7a:	pop    r13
   14000cc7c:	pop    r12
   14000cc7e:	pop    rdi
   14000cc7f:	ret    
   14000cc80:	sub    rsp,0x38
   14000cc84:	mov    eax,DWORD PTR [rsp+0x60]
   14000cc88:	and    QWORD PTR [rsp+0x28],0x0
   14000cc8e:	mov    DWORD PTR [rsp+0x20],eax
   14000cc92:	call   0x14000ce98
   14000cc97:	add    rsp,0x38
   14000cc9b:	ret    
   14000cc9c:	mov    rax,rsp
   14000cc9f:	mov    QWORD PTR [rax+0x8],rbx
   14000cca3:	mov    QWORD PTR [rax+0x10],rbp
   14000cca7:	mov    QWORD PTR [rax+0x18],rsi
   14000ccab:	mov    QWORD PTR [rax+0x20],rdi
   14000ccaf:	push   r13
   14000ccb1:	push   r14
   14000ccb3:	push   r15
   14000ccb5:	sub    rsp,0x50
   14000ccb9:	mov    r14,rdx
   14000ccbc:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000ccc4:	mov    rdi,rcx
   14000ccc7:	lea    rcx,[rax-0x38]
   14000cccb:	mov    r13d,r9d
   14000ccce:	movsxd rsi,r8d
   14000ccd1:	call   0x140008fac
   14000ccd6:	test   rdi,rdi
   14000ccd9:	je     0x14000cce0
   14000ccdb:	test   r14,r14
   14000ccde:	jne    0x14000ccec
   14000cce0:	call   0x140009cb4
   14000cce5:	mov    ebx,0x16
   14000ccea:	jmp    0x14000cd07
   14000ccec:	xor    eax,eax
   14000ccee:	test   esi,esi
   14000ccf0:	cmovg  eax,esi
   14000ccf3:	add    eax,0x9
   14000ccf6:	cdqe   
   14000ccf8:	cmp    r14,rax
   14000ccfb:	ja     0x14000cd13
   14000ccfd:	call   0x140009cb4
   14000cd02:	mov    ebx,0x22
   14000cd07:	mov    DWORD PTR [rax],ebx
   14000cd09:	call   0x140008d58
   14000cd0e:	jmp    0x14000ce4b
   14000cd13:	cmp    BYTE PTR [rsp+0x98],0x0
   14000cd1b:	mov    rbp,QWORD PTR [rsp+0x90]
   14000cd23:	je     0x14000cd59
   14000cd25:	xor    ebx,ebx
   14000cd27:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000cd2b:	sete   bl
   14000cd2e:	xor    r15d,r15d
   14000cd31:	add    rbx,rdi
   14000cd34:	test   esi,esi
   14000cd36:	setg   r15b
   14000cd3a:	test   r15d,r15d
   14000cd3d:	je     0x14000cd59
   14000cd3f:	mov    rcx,rbx
   14000cd42:	call   0x140007550
   14000cd47:	movsxd rcx,r15d
   14000cd4a:	mov    rdx,rbx
   14000cd4d:	lea    r8,[rax+0x1]
   14000cd51:	add    rcx,rbx
   14000cd54:	call   0x1400059f0
   14000cd59:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000cd5d:	mov    rdx,rdi
   14000cd60:	jne    0x14000cd69
   14000cd62:	mov    BYTE PTR [rdi],0x2d
   14000cd65:	lea    rdx,[rdi+0x1]
   14000cd69:	test   esi,esi
   14000cd6b:	jle    0x14000cd88
   14000cd6d:	mov    al,BYTE PTR [rdx+0x1]
   14000cd70:	mov    BYTE PTR [rdx],al
   14000cd72:	mov    rax,QWORD PTR [rsp+0x30]
   14000cd77:	inc    rdx
   14000cd7a:	mov    rcx,QWORD PTR [rax+0xf0]
   14000cd81:	mov    rax,QWORD PTR [rcx]
   14000cd84:	mov    cl,BYTE PTR [rax]
   14000cd86:	mov    BYTE PTR [rdx],cl
   14000cd88:	xor    ecx,ecx
   14000cd8a:	lea    rbx,[rdx+rsi*1]
   14000cd8e:	lea    r8,[rip+0x21d7b]        # 0x14002eb10
   14000cd95:	cmp    BYTE PTR [rsp+0x98],cl
   14000cd9c:	sete   cl
   14000cd9f:	add    rbx,rcx
   14000cda2:	sub    rdi,rbx
   14000cda5:	cmp    r14,0xffffffffffffffff
   14000cda9:	mov    rcx,rbx
   14000cdac:	lea    rdx,[r14+rdi*1]
   14000cdb0:	cmove  rdx,r14
   14000cdb4:	call   0x14000edd8
   14000cdb9:	test   eax,eax
   14000cdbb:	jne    0x14000ce7f
   14000cdc1:	lea    rcx,[rbx+0x2]
   14000cdc5:	test   r13d,r13d
   14000cdc8:	je     0x14000cdcd
   14000cdca:	mov    BYTE PTR [rbx],0x45
   14000cdcd:	mov    rax,QWORD PTR [rbp+0x10]
   14000cdd1:	cmp    BYTE PTR [rax],0x30
   14000cdd4:	je     0x14000ce2c
   14000cdd6:	mov    r8d,DWORD PTR [rbp+0x4]
   14000cdda:	dec    r8d
   14000cddd:	jns    0x14000cde6
   14000cddf:	neg    r8d
   14000cde2:	mov    BYTE PTR [rbx+0x1],0x2d
   14000cde6:	cmp    r8d,0x64
   14000cdea:	jl     0x14000ce07
   14000cdec:	mov    eax,0x51eb851f
   14000cdf1:	imul   r8d
   14000cdf4:	sar    edx,0x5
   14000cdf7:	mov    eax,edx
   14000cdf9:	shr    eax,0x1f
   14000cdfc:	add    edx,eax
   14000cdfe:	add    BYTE PTR [rbx+0x2],dl
   14000ce01:	imul   eax,edx,0xffffff9c
   14000ce04:	add    r8d,eax
   14000ce07:	cmp    r8d,0xa
   14000ce0b:	jl     0x14000ce28
   14000ce0d:	mov    eax,0x66666667
   14000ce12:	imul   r8d
   14000ce15:	sar    edx,0x2
   14000ce18:	mov    eax,edx
   14000ce1a:	shr    eax,0x1f
   14000ce1d:	add    edx,eax
   14000ce1f:	add    BYTE PTR [rbx+0x3],dl
   14000ce22:	imul   eax,edx,0xfffffff6
   14000ce25:	add    r8d,eax
   14000ce28:	add    BYTE PTR [rbx+0x4],r8b
   14000ce2c:	test   BYTE PTR [rip+0x32121],0x1        # 0x14003ef54
   14000ce33:	je     0x14000ce49
   14000ce35:	cmp    BYTE PTR [rcx],0x30
   14000ce38:	jne    0x14000ce49
   14000ce3a:	lea    rdx,[rcx+0x1]
   14000ce3e:	mov    r8d,0x3
   14000ce44:	call   0x1400059f0
   14000ce49:	xor    ebx,ebx
   14000ce4b:	cmp    BYTE PTR [rsp+0x48],0x0
   14000ce50:	je     0x14000ce5e
   14000ce52:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ce57:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ce5e:	lea    r11,[rsp+0x50]
   14000ce63:	mov    eax,ebx
   14000ce65:	mov    rbx,QWORD PTR [r11+0x20]
   14000ce69:	mov    rbp,QWORD PTR [r11+0x28]
   14000ce6d:	mov    rsi,QWORD PTR [r11+0x30]
   14000ce71:	mov    rdi,QWORD PTR [r11+0x38]
   14000ce75:	mov    rsp,r11
   14000ce78:	pop    r15
   14000ce7a:	pop    r14
   14000ce7c:	pop    r13
   14000ce7e:	ret    
   14000ce7f:	and    QWORD PTR [rsp+0x20],0x0
   14000ce85:	xor    r9d,r9d
   14000ce88:	xor    r8d,r8d
   14000ce8b:	xor    edx,edx
   14000ce8d:	xor    ecx,ecx
   14000ce8f:	call   0x140008da8
   14000ce94:	int3   
   14000ce95:	int3   
   14000ce96:	int3   
   14000ce97:	int3   
   14000ce98:	rex push rbx
   14000ce9a:	push   rbp
   14000ce9b:	push   rsi
   14000ce9c:	push   rdi
   14000ce9d:	sub    rsp,0x88
   14000cea4:	mov    rax,QWORD PTR [rip+0x2f325]        # 0x14003c1d0
   14000ceab:	xor    rax,rsp
   14000ceae:	mov    QWORD PTR [rsp+0x70],rax
   14000ceb3:	mov    rcx,QWORD PTR [rcx]
   14000ceb6:	mov    rbx,r8
   14000ceb9:	mov    rdi,rdx
   14000cebc:	mov    esi,r9d
   14000cebf:	mov    ebp,0x16
   14000cec4:	lea    r8,[rsp+0x58]
   14000cec9:	lea    rdx,[rsp+0x40]
   14000cece:	mov    r9d,ebp
   14000ced1:	call   0x14001bfb8
   14000ced6:	test   rdi,rdi
   14000ced9:	jne    0x14000ceee
   14000cedb:	call   0x140009cb4
   14000cee0:	mov    DWORD PTR [rax],ebp
   14000cee2:	call   0x140008d58
   14000cee7:	mov    eax,ebp
   14000cee9:	jmp    0x14000cf76
   14000ceee:	test   rbx,rbx
   14000cef1:	je     0x14000cedb
   14000cef3:	or     rdx,0xffffffffffffffff
   14000cef7:	cmp    rbx,rdx
   14000cefa:	je     0x14000cf16
   14000cefc:	xor    eax,eax
   14000cefe:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000cf03:	mov    rdx,rbx
   14000cf06:	sete   al
   14000cf09:	sub    rdx,rax
   14000cf0c:	xor    eax,eax
   14000cf0e:	test   esi,esi
   14000cf10:	setg   al
   14000cf13:	sub    rdx,rax
   14000cf16:	xor    eax,eax
   14000cf18:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000cf1d:	lea    r8d,[rsi+0x1]
   14000cf21:	sete   al
   14000cf24:	xor    ecx,ecx
   14000cf26:	test   esi,esi
   14000cf28:	setg   cl
   14000cf2b:	add    rax,rdi
   14000cf2e:	lea    r9,[rsp+0x40]
   14000cf33:	add    rcx,rax
   14000cf36:	call   0x14001bb94
   14000cf3b:	test   eax,eax
   14000cf3d:	je     0x14000cf44
   14000cf3f:	mov    BYTE PTR [rdi],0x0
   14000cf42:	jmp    0x14000cf76
   14000cf44:	mov    rax,QWORD PTR [rsp+0xd8]
   14000cf4c:	mov    r9d,DWORD PTR [rsp+0xd0]
   14000cf54:	mov    r8d,esi
   14000cf57:	mov    QWORD PTR [rsp+0x30],rax
   14000cf5c:	lea    rax,[rsp+0x40]
   14000cf61:	mov    rdx,rbx
   14000cf64:	mov    rcx,rdi
   14000cf67:	mov    BYTE PTR [rsp+0x28],0x0
   14000cf6c:	mov    QWORD PTR [rsp+0x20],rax
   14000cf71:	call   0x14000cc9c
   14000cf76:	mov    rcx,QWORD PTR [rsp+0x70]
   14000cf7b:	xor    rcx,rsp
   14000cf7e:	call   0x14000c380
   14000cf83:	add    rsp,0x88
   14000cf8a:	pop    rdi
   14000cf8b:	pop    rsi
   14000cf8c:	pop    rbp
   14000cf8d:	pop    rbx
   14000cf8e:	ret    
   14000cf8f:	int3   
   14000cf90:	sub    rsp,0x38
   14000cf94:	and    QWORD PTR [rsp+0x20],0x0
   14000cf9a:	call   0x14000d108
   14000cf9f:	add    rsp,0x38
   14000cfa3:	ret    
   14000cfa4:	mov    rax,rsp
   14000cfa7:	mov    QWORD PTR [rax+0x8],rbx
   14000cfab:	mov    QWORD PTR [rax+0x10],rbp
   14000cfaf:	mov    QWORD PTR [rax+0x18],rsi
   14000cfb3:	mov    QWORD PTR [rax+0x20],rdi
   14000cfb7:	push   r14
   14000cfb9:	sub    rsp,0x40
   14000cfbd:	mov    ebx,DWORD PTR [r9+0x4]
   14000cfc1:	mov    rsi,rdx
   14000cfc4:	mov    rdx,QWORD PTR [rsp+0x78]
   14000cfc9:	mov    rdi,rcx
   14000cfcc:	lea    rcx,[rax-0x28]
   14000cfd0:	mov    rbp,r9
   14000cfd3:	dec    ebx
   14000cfd5:	mov    r14d,r8d
   14000cfd8:	call   0x140008fac
   14000cfdd:	test   rdi,rdi
   14000cfe0:	je     0x14000cfe7
   14000cfe2:	test   rsi,rsi
   14000cfe5:	jne    0x14000cffd
   14000cfe7:	call   0x140009cb4
   14000cfec:	mov    ebx,0x16
   14000cff1:	mov    DWORD PTR [rax],ebx
   14000cff3:	call   0x140008d58
   14000cff8:	jmp    0x14000d0d5
   14000cffd:	cmp    BYTE PTR [rsp+0x70],0x0
   14000d002:	je     0x14000d01e
   14000d004:	cmp    ebx,r14d
   14000d007:	jne    0x14000d01e
   14000d009:	xor    eax,eax
   14000d00b:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000d00f:	movsxd rcx,ebx
   14000d012:	sete   al
   14000d015:	add    rax,rdi
   14000d018:	mov    WORD PTR [rcx+rax*1],0x30
   14000d01e:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000d022:	jne    0x14000d02a
   14000d024:	mov    BYTE PTR [rdi],0x2d
   14000d027:	inc    rdi
   14000d02a:	cmp    DWORD PTR [rbp+0x4],0x0
   14000d02e:	jg     0x14000d050
   14000d030:	mov    rcx,rdi
   14000d033:	call   0x140007550
   14000d038:	lea    rcx,[rdi+0x1]
   14000d03c:	mov    rdx,rdi
   14000d03f:	lea    r8,[rax+0x1]
   14000d043:	call   0x1400059f0
   14000d048:	mov    BYTE PTR [rdi],0x30
   14000d04b:	inc    rdi
   14000d04e:	jmp    0x14000d057
   14000d050:	movsxd rax,DWORD PTR [rbp+0x4]
   14000d054:	add    rdi,rax
   14000d057:	test   r14d,r14d
   14000d05a:	jle    0x14000d0d3
   14000d05c:	mov    rcx,rdi
   14000d05f:	lea    rsi,[rdi+0x1]
   14000d063:	call   0x140007550
   14000d068:	mov    rdx,rdi
   14000d06b:	mov    rcx,rsi
   14000d06e:	lea    r8,[rax+0x1]
   14000d072:	call   0x1400059f0
   14000d077:	mov    rax,QWORD PTR [rsp+0x20]
   14000d07c:	mov    rcx,QWORD PTR [rax+0xf0]
   14000d083:	mov    rax,QWORD PTR [rcx]
   14000d086:	mov    cl,BYTE PTR [rax]
   14000d088:	mov    BYTE PTR [rdi],cl
   14000d08a:	mov    ebx,DWORD PTR [rbp+0x4]
   14000d08d:	test   ebx,ebx
   14000d08f:	jns    0x14000d0d3
   14000d091:	neg    ebx
   14000d093:	cmp    BYTE PTR [rsp+0x70],0x0
   14000d098:	jne    0x14000d0a5
   14000d09a:	mov    eax,ebx
   14000d09c:	mov    ebx,r14d
   14000d09f:	cmp    r14d,eax
   14000d0a2:	cmovge ebx,eax
   14000d0a5:	test   ebx,ebx
   14000d0a7:	je     0x14000d0c3
   14000d0a9:	mov    rcx,rsi
   14000d0ac:	call   0x140007550
   14000d0b1:	movsxd rcx,ebx
   14000d0b4:	mov    rdx,rsi
   14000d0b7:	lea    r8,[rax+0x1]
   14000d0bb:	add    rcx,rsi
   14000d0be:	call   0x1400059f0
   14000d0c3:	movsxd r8,ebx
   14000d0c6:	mov    edx,0x30
   14000d0cb:	mov    rcx,rsi
   14000d0ce:	call   0x140006f70
   14000d0d3:	xor    ebx,ebx
   14000d0d5:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d0da:	je     0x14000d0e8
   14000d0dc:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d0e1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d0e8:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d0ed:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d0f2:	mov    rdi,QWORD PTR [rsp+0x68]
   14000d0f7:	mov    eax,ebx
   14000d0f9:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d0fe:	add    rsp,0x40
   14000d102:	pop    r14
   14000d104:	ret    
   14000d105:	int3   
   14000d106:	int3   
   14000d107:	int3   
   14000d108:	rex push rbx
   14000d10a:	push   rbp
   14000d10b:	push   rsi
   14000d10c:	push   rdi
   14000d10d:	sub    rsp,0x78
   14000d111:	mov    rax,QWORD PTR [rip+0x2f0b8]        # 0x14003c1d0
   14000d118:	xor    rax,rsp
   14000d11b:	mov    QWORD PTR [rsp+0x60],rax
   14000d120:	mov    rcx,QWORD PTR [rcx]
   14000d123:	mov    rbx,r8
   14000d126:	mov    rdi,rdx
   14000d129:	mov    esi,r9d
   14000d12c:	mov    ebp,0x16
   14000d131:	lea    r8,[rsp+0x48]
   14000d136:	lea    rdx,[rsp+0x30]
   14000d13b:	mov    r9d,ebp
   14000d13e:	call   0x14001bfb8
   14000d143:	test   rdi,rdi
   14000d146:	jne    0x14000d158
   14000d148:	call   0x140009cb4
   14000d14d:	mov    DWORD PTR [rax],ebp
   14000d14f:	call   0x140008d58
   14000d154:	mov    eax,ebp
   14000d156:	jmp    0x14000d1c3
   14000d158:	test   rbx,rbx
   14000d15b:	je     0x14000d148
   14000d15d:	or     rdx,0xffffffffffffffff
   14000d161:	cmp    rbx,rdx
   14000d164:	je     0x14000d176
   14000d166:	xor    eax,eax
   14000d168:	cmp    DWORD PTR [rsp+0x30],0x2d
   14000d16d:	mov    rdx,rbx
   14000d170:	sete   al
   14000d173:	sub    rdx,rax
   14000d176:	mov    r8d,DWORD PTR [rsp+0x34]
   14000d17b:	xor    ecx,ecx
   14000d17d:	lea    r9,[rsp+0x30]
   14000d182:	add    r8d,esi
   14000d185:	cmp    DWORD PTR [rsp+0x30],0x2d
   14000d18a:	sete   cl
   14000d18d:	add    rcx,rdi
   14000d190:	call   0x14001bb94
   14000d195:	test   eax,eax
   14000d197:	je     0x14000d19e
   14000d199:	mov    BYTE PTR [rdi],0x0
   14000d19c:	jmp    0x14000d1c3
   14000d19e:	mov    rax,QWORD PTR [rsp+0xc0]
   14000d1a6:	lea    r9,[rsp+0x30]
   14000d1ab:	mov    r8d,esi
   14000d1ae:	mov    QWORD PTR [rsp+0x28],rax
   14000d1b3:	mov    rdx,rbx
   14000d1b6:	mov    rcx,rdi
   14000d1b9:	mov    BYTE PTR [rsp+0x20],0x0
   14000d1be:	call   0x14000cfa4
   14000d1c3:	mov    rcx,QWORD PTR [rsp+0x60]
   14000d1c8:	xor    rcx,rsp
   14000d1cb:	call   0x14000c380
   14000d1d0:	add    rsp,0x78
   14000d1d4:	pop    rdi
   14000d1d5:	pop    rsi
   14000d1d6:	pop    rbp
   14000d1d7:	pop    rbx
   14000d1d8:	ret    
   14000d1d9:	int3   
   14000d1da:	int3   
   14000d1db:	int3   
   14000d1dc:	sub    rsp,0x38
   14000d1e0:	mov    eax,DWORD PTR [rsp+0x60]
   14000d1e4:	and    QWORD PTR [rsp+0x28],0x0
   14000d1ea:	mov    DWORD PTR [rsp+0x20],eax
   14000d1ee:	call   0x14000d1f8
   14000d1f3:	add    rsp,0x38
   14000d1f7:	ret    
   14000d1f8:	rex push rbx
   14000d1fa:	push   rbp
   14000d1fb:	push   rsi
   14000d1fc:	push   rdi
   14000d1fd:	push   r14
   14000d1ff:	sub    rsp,0x80
   14000d206:	mov    rax,QWORD PTR [rip+0x2efc3]        # 0x14003c1d0
   14000d20d:	xor    rax,rsp
   14000d210:	mov    QWORD PTR [rsp+0x70],rax
   14000d215:	mov    rcx,QWORD PTR [rcx]
   14000d218:	mov    rdi,r8
   14000d21b:	mov    rsi,rdx
   14000d21e:	mov    ebp,r9d
   14000d221:	mov    ebx,0x16
   14000d226:	lea    r8,[rsp+0x58]
   14000d22b:	lea    rdx,[rsp+0x40]
   14000d230:	mov    r9d,ebx
   14000d233:	call   0x14001bfb8
   14000d238:	test   rsi,rsi
   14000d23b:	jne    0x14000d250
   14000d23d:	call   0x140009cb4
   14000d242:	mov    DWORD PTR [rax],ebx
   14000d244:	call   0x140008d58
   14000d249:	mov    eax,ebx
   14000d24b:	jmp    0x14000d311
   14000d250:	test   rdi,rdi
   14000d253:	je     0x14000d23d
   14000d255:	mov    r14d,DWORD PTR [rsp+0x44]
   14000d25a:	xor    eax,eax
   14000d25c:	dec    r14d
   14000d25f:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000d264:	sete   al
   14000d267:	or     rdx,0xffffffffffffffff
   14000d26b:	lea    rbx,[rax+rsi*1]
   14000d26f:	cmp    rdi,rdx
   14000d272:	je     0x14000d27a
   14000d274:	mov    rdx,rdi
   14000d277:	sub    rdx,rax
   14000d27a:	lea    r9,[rsp+0x40]
   14000d27f:	mov    r8d,ebp
   14000d282:	mov    rcx,rbx
   14000d285:	call   0x14001bb94
   14000d28a:	test   eax,eax
   14000d28c:	je     0x14000d293
   14000d28e:	mov    BYTE PTR [rsi],0x0
   14000d291:	jmp    0x14000d311
   14000d293:	mov    eax,DWORD PTR [rsp+0x44]
   14000d297:	dec    eax
   14000d299:	cmp    r14d,eax
   14000d29c:	setl   cl
   14000d29f:	cmp    eax,0xfffffffc
   14000d2a2:	jl     0x14000d2df
   14000d2a4:	cmp    eax,ebp
   14000d2a6:	jge    0x14000d2df
   14000d2a8:	test   cl,cl
   14000d2aa:	je     0x14000d2b8
   14000d2ac:	mov    al,BYTE PTR [rbx]
   14000d2ae:	inc    rbx
   14000d2b1:	test   al,al
   14000d2b3:	jne    0x14000d2ac
   14000d2b5:	mov    BYTE PTR [rbx-0x2],al
   14000d2b8:	mov    rax,QWORD PTR [rsp+0xd8]
   14000d2c0:	lea    r9,[rsp+0x40]
   14000d2c5:	mov    r8d,ebp
   14000d2c8:	mov    QWORD PTR [rsp+0x28],rax
   14000d2cd:	mov    rdx,rdi
   14000d2d0:	mov    rcx,rsi
   14000d2d3:	mov    BYTE PTR [rsp+0x20],0x1
   14000d2d8:	call   0x14000cfa4
   14000d2dd:	jmp    0x14000d311
   14000d2df:	mov    rax,QWORD PTR [rsp+0xd8]
   14000d2e7:	mov    r9d,DWORD PTR [rsp+0xd0]
   14000d2ef:	mov    r8d,ebp
   14000d2f2:	mov    QWORD PTR [rsp+0x30],rax
   14000d2f7:	lea    rax,[rsp+0x40]
   14000d2fc:	mov    rdx,rdi
   14000d2ff:	mov    rcx,rsi
   14000d302:	mov    BYTE PTR [rsp+0x28],0x1
   14000d307:	mov    QWORD PTR [rsp+0x20],rax
   14000d30c:	call   0x14000cc9c
   14000d311:	mov    rcx,QWORD PTR [rsp+0x70]
   14000d316:	xor    rcx,rsp
   14000d319:	call   0x14000c380
   14000d31e:	add    rsp,0x80
   14000d325:	pop    r14
   14000d327:	pop    rdi
   14000d328:	pop    rsi
   14000d329:	pop    rbp
   14000d32a:	pop    rbx
   14000d32b:	ret    
   14000d32c:	xor    edx,edx
   14000d32e:	jmp    0x14000d334
   14000d333:	int3   
   14000d334:	rex push rbx
   14000d336:	sub    rsp,0x40
   14000d33a:	mov    rbx,rcx
   14000d33d:	lea    rcx,[rsp+0x20]
   14000d342:	call   0x140008fac
   14000d347:	mov    cl,BYTE PTR [rbx]
   14000d349:	mov    r8,QWORD PTR [rsp+0x20]
   14000d34e:	test   cl,cl
   14000d350:	je     0x14000d36b
   14000d352:	mov    rax,QWORD PTR [r8+0xf0]
   14000d359:	mov    rdx,QWORD PTR [rax]
   14000d35c:	mov    al,BYTE PTR [rdx]
   14000d35e:	cmp    cl,al
   14000d360:	je     0x14000d36b
   14000d362:	inc    rbx
   14000d365:	mov    cl,BYTE PTR [rbx]
   14000d367:	test   cl,cl
   14000d369:	jne    0x14000d35e
   14000d36b:	mov    al,BYTE PTR [rbx]
   14000d36d:	inc    rbx
   14000d370:	test   al,al
   14000d372:	je     0x14000d3b1
   14000d374:	jmp    0x14000d37f
   14000d376:	sub    al,0x45
   14000d378:	test   al,0xdf
   14000d37a:	je     0x14000d385
   14000d37c:	inc    rbx
   14000d37f:	mov    al,BYTE PTR [rbx]
   14000d381:	test   al,al
   14000d383:	jne    0x14000d376
   14000d385:	mov    rdx,rbx
   14000d388:	dec    rbx
   14000d38b:	cmp    BYTE PTR [rbx],0x30
   14000d38e:	je     0x14000d388
   14000d390:	mov    rax,QWORD PTR [r8+0xf0]
   14000d397:	mov    rcx,QWORD PTR [rax]
   14000d39a:	mov    al,BYTE PTR [rcx]
   14000d39c:	cmp    BYTE PTR [rbx],al
   14000d39e:	jne    0x14000d3a3
   14000d3a0:	dec    rbx
   14000d3a3:	mov    al,BYTE PTR [rdx]
   14000d3a5:	inc    rbx
   14000d3a8:	inc    rdx
   14000d3ab:	mov    BYTE PTR [rbx],al
   14000d3ad:	test   al,al
   14000d3af:	jne    0x14000d3a3
   14000d3b1:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d3b6:	je     0x14000d3c4
   14000d3b8:	mov    rax,QWORD PTR [rsp+0x30]
   14000d3bd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d3c4:	add    rsp,0x40
   14000d3c8:	pop    rbx
   14000d3c9:	ret    
   14000d3ca:	int3   
   14000d3cb:	int3   
   14000d3cc:	xor    r9d,r9d
   14000d3cf:	jmp    0x14000d3d4
   14000d3d4:	rex push rbx
   14000d3d6:	sub    rsp,0x30
   14000d3da:	mov    rax,r8
   14000d3dd:	mov    rbx,rdx
   14000d3e0:	mov    r8,r9
   14000d3e3:	mov    rdx,rax
   14000d3e6:	test   ecx,ecx
   14000d3e8:	je     0x14000d3fe
   14000d3ea:	lea    rcx,[rsp+0x20]
   14000d3ef:	call   0x14001bd38
   14000d3f4:	mov    rax,QWORD PTR [rsp+0x20]
   14000d3f9:	mov    QWORD PTR [rbx],rax
   14000d3fc:	jmp    0x14000d40e
   14000d3fe:	lea    rcx,[rsp+0x40]
   14000d403:	call   0x14001be0c
   14000d408:	mov    eax,DWORD PTR [rsp+0x40]
   14000d40c:	mov    DWORD PTR [rbx],eax
   14000d40e:	add    rsp,0x30
   14000d412:	pop    rbx
   14000d413:	ret    
   14000d414:	xor    edx,edx
   14000d416:	jmp    0x14000d41c
   14000d41b:	int3   
   14000d41c:	rex push rbx
   14000d41e:	sub    rsp,0x40
   14000d422:	mov    rbx,rcx
   14000d425:	lea    rcx,[rsp+0x20]
   14000d42a:	call   0x140008fac
   14000d42f:	movsx  ecx,BYTE PTR [rbx]
   14000d432:	call   0x14001ba30
   14000d437:	cmp    eax,0x65
   14000d43a:	je     0x14000d44b
   14000d43c:	inc    rbx
   14000d43f:	movzx  ecx,BYTE PTR [rbx]
   14000d442:	call   0x14001b4ec
   14000d447:	test   eax,eax
   14000d449:	jne    0x14000d43c
   14000d44b:	movsx  ecx,BYTE PTR [rbx]
   14000d44e:	call   0x14001ba30
   14000d453:	cmp    eax,0x78
   14000d456:	jne    0x14000d45c
   14000d458:	add    rbx,0x2
   14000d45c:	mov    rax,QWORD PTR [rsp+0x20]
   14000d461:	mov    dl,BYTE PTR [rbx]
   14000d463:	mov    rcx,QWORD PTR [rax+0xf0]
   14000d46a:	mov    rax,QWORD PTR [rcx]
   14000d46d:	mov    cl,BYTE PTR [rax]
   14000d46f:	mov    BYTE PTR [rbx],cl
   14000d471:	inc    rbx
   14000d474:	mov    al,BYTE PTR [rbx]
   14000d476:	mov    BYTE PTR [rbx],dl
   14000d478:	mov    dl,al
   14000d47a:	mov    al,BYTE PTR [rbx]
   14000d47c:	inc    rbx
   14000d47f:	test   al,al
   14000d481:	jne    0x14000d474
   14000d483:	cmp    BYTE PTR [rsp+0x38],al
   14000d487:	je     0x14000d495
   14000d489:	mov    rax,QWORD PTR [rsp+0x30]
   14000d48e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d495:	add    rsp,0x40
   14000d499:	pop    rbx
   14000d49a:	ret    
   14000d49b:	int3   
   14000d49c:	movsd  xmm0,QWORD PTR [rcx]
   14000d4a0:	xor    eax,eax
   14000d4a2:	comisd xmm0,QWORD PTR [rip+0x2166e]        # 0x14002eb18
   14000d4aa:	setae  al
   14000d4ad:	ret    
   14000d4ae:	int3   
   14000d4af:	int3   
   14000d4b0:	test   edx,edx
   14000d4b2:	je     0x14000d4e3
   14000d4b4:	mov    QWORD PTR [rsp+0x8],rbx
   14000d4b9:	push   rdi
   14000d4ba:	sub    rsp,0x20
   14000d4be:	movsxd rbx,edx
   14000d4c1:	mov    rdi,rcx
   14000d4c4:	call   0x140007550
   14000d4c9:	lea    rcx,[rdi+rbx*1]
   14000d4cd:	lea    r8,[rax+0x1]
   14000d4d1:	mov    rdx,rdi
   14000d4d4:	call   0x1400059f0
   14000d4d9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d4de:	add    rsp,0x20
   14000d4e2:	pop    rdi
   14000d4e3:	ret    
   14000d4e4:	mov    QWORD PTR [rsp+0x8],rbx
   14000d4e9:	push   rdi
   14000d4ea:	sub    rsp,0x20
   14000d4ee:	xor    edi,edi
   14000d4f0:	lea    rbx,[rip+0x2ece9]        # 0x14003c1e0
   14000d4f7:	mov    rcx,QWORD PTR [rbx]
   14000d4fa:	call   QWORD PTR [rip+0x1ec10]        # 0x14002c110
   14000d500:	inc    edi
   14000d502:	mov    QWORD PTR [rbx],rax
   14000d505:	movsxd rax,edi
   14000d508:	lea    rbx,[rbx+0x8]
   14000d50c:	cmp    rax,0xa
   14000d510:	jb     0x14000d4f7
   14000d512:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d517:	add    rsp,0x20
   14000d51b:	pop    rdi
   14000d51c:	ret    
   14000d51d:	int3   
   14000d51e:	int3   
   14000d51f:	int3   
   14000d520:	sub    rsp,0x28
   14000d524:	mov    rax,QWORD PTR [rcx]
   14000d527:	cmp    DWORD PTR [rax],0xe06d7363
   14000d52d:	jne    0x14000d54b
   14000d52f:	cmp    DWORD PTR [rax+0x18],0x4
   14000d533:	jne    0x14000d54b
   14000d535:	mov    ecx,DWORD PTR [rax+0x20]
   14000d538:	lea    eax,[rcx-0x19930520]
   14000d53e:	cmp    eax,0x2
   14000d541:	jbe    0x14000d552
   14000d543:	cmp    ecx,0x1994000
   14000d549:	je     0x14000d552
   14000d54b:	xor    eax,eax
   14000d54d:	add    rsp,0x28
   14000d551:	ret    
   14000d552:	call   0x14000c280
   14000d557:	int3   
   14000d558:	sub    rsp,0x28
   14000d55c:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14000d520
   14000d563:	call   0x14000ecf0
   14000d568:	xor    eax,eax
   14000d56a:	add    rsp,0x28
   14000d56e:	ret    
   14000d56f:	int3   
   14000d570:	mov    QWORD PTR [rsp+0x8],rbx
   14000d575:	mov    QWORD PTR [rsp+0x10],rbp
   14000d57a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d57f:	push   rdi
   14000d580:	sub    rsp,0x20
   14000d584:	mov    rsi,rdx
   14000d587:	mov    edi,ecx
   14000d589:	call   0x14000a410
   14000d58e:	xor    r9d,r9d
   14000d591:	mov    rbx,rax
   14000d594:	test   rax,rax
   14000d597:	je     0x14000d725
   14000d59d:	mov    rdx,QWORD PTR [rax+0xa0]
   14000d5a4:	mov    rcx,rdx
   14000d5a7:	cmp    DWORD PTR [rcx],edi
   14000d5a9:	je     0x14000d5bb
   14000d5ab:	lea    rax,[rdx+0xc0]
   14000d5b2:	add    rcx,0x10
   14000d5b6:	cmp    rcx,rax
   14000d5b9:	jb     0x14000d5a7
   14000d5bb:	lea    rax,[rdx+0xc0]
   14000d5c2:	cmp    rcx,rax
   14000d5c5:	jae    0x14000d5cb
   14000d5c7:	cmp    DWORD PTR [rcx],edi
   14000d5c9:	je     0x14000d5ce
   14000d5cb:	mov    rcx,r9
   14000d5ce:	test   rcx,rcx
   14000d5d1:	je     0x14000d725
   14000d5d7:	mov    r8,QWORD PTR [rcx+0x8]
   14000d5db:	test   r8,r8
   14000d5de:	je     0x14000d725
   14000d5e4:	cmp    r8,0x5
   14000d5e8:	jne    0x14000d5f7
   14000d5ea:	mov    QWORD PTR [rcx+0x8],r9
   14000d5ee:	lea    eax,[r8-0x4]
   14000d5f2:	jmp    0x14000d727
   14000d5f7:	cmp    r8,0x1
   14000d5fb:	jne    0x14000d605
   14000d5fd:	or     eax,0xffffffff
   14000d600:	jmp    0x14000d727
   14000d605:	mov    rbp,QWORD PTR [rbx+0xa8]
   14000d60c:	mov    QWORD PTR [rbx+0xa8],rsi
   14000d613:	cmp    DWORD PTR [rcx+0x4],0x8
   14000d617:	jne    0x14000d70f
   14000d61d:	mov    edx,0x30
   14000d622:	mov    rax,QWORD PTR [rbx+0xa0]
   14000d629:	add    rdx,0x10
   14000d62d:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14000d632:	cmp    rdx,0xc0
   14000d639:	jl     0x14000d622
   14000d63b:	cmp    DWORD PTR [rcx],0xc000008e
   14000d641:	mov    edi,DWORD PTR [rbx+0xb0]
   14000d647:	jne    0x14000d658
   14000d649:	mov    DWORD PTR [rbx+0xb0],0x83
   14000d653:	jmp    0x14000d6f9
   14000d658:	cmp    DWORD PTR [rcx],0xc0000090
   14000d65e:	jne    0x14000d66f
   14000d660:	mov    DWORD PTR [rbx+0xb0],0x81
   14000d66a:	jmp    0x14000d6f9
   14000d66f:	cmp    DWORD PTR [rcx],0xc0000091
   14000d675:	jne    0x14000d683
   14000d677:	mov    DWORD PTR [rbx+0xb0],0x84
   14000d681:	jmp    0x14000d6f9
   14000d683:	cmp    DWORD PTR [rcx],0xc0000093
   14000d689:	jne    0x14000d697
   14000d68b:	mov    DWORD PTR [rbx+0xb0],0x85
   14000d695:	jmp    0x14000d6f9
   14000d697:	cmp    DWORD PTR [rcx],0xc000008d
   14000d69d:	jne    0x14000d6ab
   14000d69f:	mov    DWORD PTR [rbx+0xb0],0x82
   14000d6a9:	jmp    0x14000d6f9
   14000d6ab:	cmp    DWORD PTR [rcx],0xc000008f
   14000d6b1:	jne    0x14000d6bf
   14000d6b3:	mov    DWORD PTR [rbx+0xb0],0x86
   14000d6bd:	jmp    0x14000d6f9
   14000d6bf:	cmp    DWORD PTR [rcx],0xc0000092
   14000d6c5:	jne    0x14000d6d3
   14000d6c7:	mov    DWORD PTR [rbx+0xb0],0x8a
   14000d6d1:	jmp    0x14000d6f9
   14000d6d3:	cmp    DWORD PTR [rcx],0xc00002b5
   14000d6d9:	jne    0x14000d6e7
   14000d6db:	mov    DWORD PTR [rbx+0xb0],0x8d
   14000d6e5:	jmp    0x14000d6f9
   14000d6e7:	cmp    DWORD PTR [rcx],0xc00002b4
   14000d6ed:	jne    0x14000d6f9
   14000d6ef:	mov    DWORD PTR [rbx+0xb0],0x8e
   14000d6f9:	mov    edx,DWORD PTR [rbx+0xb0]
   14000d6ff:	mov    ecx,0x8
   14000d704:	call   r8
   14000d707:	mov    DWORD PTR [rbx+0xb0],edi
   14000d70d:	jmp    0x14000d719
   14000d70f:	mov    QWORD PTR [rcx+0x8],r9
   14000d713:	mov    ecx,DWORD PTR [rcx+0x4]
   14000d716:	call   r8
   14000d719:	mov    QWORD PTR [rbx+0xa8],rbp
   14000d720:	jmp    0x14000d5fd
   14000d725:	xor    eax,eax
   14000d727:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d72c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d731:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d736:	add    rsp,0x20
   14000d73a:	pop    rdi
   14000d73b:	ret    
   14000d73c:	mov    eax,0xe06d7363
   14000d741:	cmp    ecx,eax
   14000d743:	jne    0x14000d74c
   14000d745:	mov    ecx,eax
   14000d747:	jmp    0x14000d570
   14000d74c:	xor    eax,eax
   14000d74e:	ret    
   14000d74f:	int3   
   14000d750:	mov    r9d,ecx
   14000d753:	mov    rax,rdx
   14000d756:	cmp    DWORD PTR [rax],ecx
   14000d758:	je     0x14000d76a
   14000d75a:	lea    r8,[rdx+0xc0]
   14000d761:	add    rax,0x10
   14000d765:	cmp    rax,r8
   14000d768:	jb     0x14000d756
   14000d76a:	lea    rcx,[rdx+0xc0]
   14000d771:	cmp    rax,rcx
   14000d774:	jae    0x14000d77b
   14000d776:	cmp    DWORD PTR [rax],r9d
   14000d779:	je     0x14000d77d
   14000d77b:	xor    eax,eax
   14000d77d:	ret    
   14000d77e:	int3   
   14000d77f:	int3   
   14000d780:	mov    rax,QWORD PTR [rip+0x30579]        # 0x14003dd00
   14000d787:	ret    
   14000d788:	sub    rsp,0x28
   14000d78c:	call   QWORD PTR [rip+0x1e86e]        # 0x14002c000
   14000d792:	xor    ecx,ecx
   14000d794:	test   rax,rax
   14000d797:	mov    QWORD PTR [rip+0x30562],rax        # 0x14003dd00
   14000d79e:	setne  cl
   14000d7a1:	mov    eax,ecx
   14000d7a3:	add    rsp,0x28
   14000d7a7:	ret    
   14000d7a8:	and    QWORD PTR [rip+0x30550],0x0        # 0x14003dd00
   14000d7b0:	ret    
   14000d7b1:	int3   
   14000d7b2:	int3   
   14000d7b3:	int3   
   14000d7b4:	mov    rax,rsp
   14000d7b7:	mov    QWORD PTR [rax+0x8],rbx
   14000d7bb:	mov    QWORD PTR [rax+0x10],rsi
   14000d7bf:	mov    QWORD PTR [rax+0x18],rdi
   14000d7c3:	mov    QWORD PTR [rax+0x20],r12
   14000d7c7:	push   r13
   14000d7c9:	push   r14
   14000d7cb:	push   r15
   14000d7cd:	sub    rsp,0xc0
   14000d7d4:	mov    QWORD PTR [rsp+0x48],rsp
   14000d7d9:	mov    ecx,0xb
   14000d7de:	call   0x14000fc2c
   14000d7e3:	nop
   14000d7e4:	mov    edi,0x58
   14000d7e9:	mov    edx,edi
   14000d7eb:	lea    r13d,[rdi-0x38]
   14000d7ef:	mov    ecx,r13d
   14000d7f2:	call   0x140008604
   14000d7f7:	mov    rcx,rax
   14000d7fa:	mov    QWORD PTR [rsp+0x28],rax
   14000d7ff:	xor    r12d,r12d
   14000d802:	test   rax,rax
   14000d805:	jne    0x14000d820
   14000d807:	lea    rdx,[rip+0xa]        # 0x14000d818
   14000d80e:	mov    rcx,rsp
   14000d811:	call   0x140010cd0
   14000d816:	nop
   14000d817:	nop
   14000d818:	or     eax,0xffffffff
   14000d81b:	jmp    0x14000dabf
   14000d820:	mov    QWORD PTR [rip+0x304e9],rax        # 0x14003dd10
   14000d827:	mov    DWORD PTR [rip+0x328ba],r13d        # 0x1400400e8
   14000d82e:	add    rax,0xb00
   14000d834:	cmp    rcx,rax
   14000d837:	jae    0x14000d872
   14000d839:	mov    WORD PTR [rcx+0x8],0xa00
   14000d83f:	or     QWORD PTR [rcx],0xffffffffffffffff
   14000d843:	mov    DWORD PTR [rcx+0xc],r12d
   14000d847:	and    BYTE PTR [rcx+0x38],0x80
   14000d84b:	mov    al,BYTE PTR [rcx+0x38]
   14000d84e:	and    al,0x7f
   14000d850:	mov    BYTE PTR [rcx+0x38],al
   14000d853:	mov    WORD PTR [rcx+0x39],0xa0a
   14000d859:	mov    DWORD PTR [rcx+0x50],r12d
   14000d85d:	mov    BYTE PTR [rcx+0x4c],r12b
   14000d861:	add    rcx,rdi
   14000d864:	mov    QWORD PTR [rsp+0x28],rcx
   14000d869:	mov    rax,QWORD PTR [rip+0x304a0]        # 0x14003dd10
   14000d870:	jmp    0x14000d82e
   14000d872:	lea    rcx,[rsp+0x50]
   14000d877:	call   QWORD PTR [rip+0x1e963]        # 0x14002c1e0
   14000d87d:	cmp    WORD PTR [rsp+0x92],r12w
   14000d886:	je     0x14000d9ce
   14000d88c:	mov    rax,QWORD PTR [rsp+0x98]
   14000d894:	test   rax,rax
   14000d897:	je     0x14000d9ce
   14000d89d:	lea    r14,[rax+0x4]
   14000d8a1:	mov    QWORD PTR [rsp+0x38],r14
   14000d8a6:	movsxd rsi,DWORD PTR [rax]
   14000d8a9:	add    rsi,r14
   14000d8ac:	mov    QWORD PTR [rsp+0x40],rsi
   14000d8b1:	mov    r15d,0x800
   14000d8b7:	cmp    DWORD PTR [rax],r15d
   14000d8ba:	cmovl  r15d,DWORD PTR [rax]
   14000d8be:	mov    ebx,0x1
   14000d8c3:	mov    DWORD PTR [rsp+0x30],ebx
   14000d8c7:	cmp    DWORD PTR [rip+0x3281a],r15d        # 0x1400400e8
   14000d8ce:	jge    0x14000d943
   14000d8d0:	mov    rdx,rdi
   14000d8d3:	mov    rcx,r13
   14000d8d6:	call   0x140008604
   14000d8db:	mov    rcx,rax
   14000d8de:	mov    QWORD PTR [rsp+0x28],rax
   14000d8e3:	test   rax,rax
   14000d8e6:	jne    0x14000d8f1
   14000d8e8:	mov    r15d,DWORD PTR [rip+0x327f9]        # 0x1400400e8
   14000d8ef:	jmp    0x14000d943
   14000d8f1:	movsxd rdx,ebx
   14000d8f4:	lea    r8,[rip+0x30415]        # 0x14003dd10
   14000d8fb:	mov    QWORD PTR [r8+rdx*8],rax
   14000d8ff:	add    DWORD PTR [rip+0x327e2],r13d        # 0x1400400e8
   14000d906:	mov    rax,QWORD PTR [r8+rdx*8]
   14000d90a:	add    rax,0xb00
   14000d910:	cmp    rcx,rax
   14000d913:	jae    0x14000d93f
   14000d915:	mov    WORD PTR [rcx+0x8],0xa00
   14000d91b:	or     QWORD PTR [rcx],0xffffffffffffffff
   14000d91f:	mov    DWORD PTR [rcx+0xc],r12d
   14000d923:	and    BYTE PTR [rcx+0x38],0x80
   14000d927:	mov    WORD PTR [rcx+0x39],0xa0a
   14000d92d:	mov    DWORD PTR [rcx+0x50],r12d
   14000d931:	mov    BYTE PTR [rcx+0x4c],r12b
   14000d935:	add    rcx,rdi
   14000d938:	mov    QWORD PTR [rsp+0x28],rcx
   14000d93d:	jmp    0x14000d906
   14000d93f:	inc    ebx
   14000d941:	jmp    0x14000d8c3
   14000d943:	mov    edi,r12d
   14000d946:	mov    DWORD PTR [rsp+0x20],r12d
   14000d94b:	lea    r13,[rip+0x303be]        # 0x14003dd10
   14000d952:	cmp    edi,r15d
   14000d955:	jge    0x14000d9ce
   14000d957:	mov    rcx,QWORD PTR [rsi]
   14000d95a:	lea    rax,[rcx+0x2]
   14000d95e:	cmp    rax,0x1
   14000d962:	jbe    0x14000d9b5
   14000d964:	test   BYTE PTR [r14],0x1
   14000d968:	je     0x14000d9b5
   14000d96a:	test   BYTE PTR [r14],0x8
   14000d96e:	jne    0x14000d97a
   14000d970:	call   QWORD PTR [rip+0x1e85a]        # 0x14002c1d0
   14000d976:	test   eax,eax
   14000d978:	je     0x14000d9b5
   14000d97a:	movsxd rcx,edi
   14000d97d:	mov    rax,rcx
   14000d980:	sar    rax,0x5
   14000d984:	and    ecx,0x1f
   14000d987:	imul   rbx,rcx,0x58
   14000d98b:	add    rbx,QWORD PTR [r13+rax*8+0x0]
   14000d990:	mov    QWORD PTR [rsp+0x28],rbx
   14000d995:	mov    rax,QWORD PTR [rsi]
   14000d998:	mov    QWORD PTR [rbx],rax
   14000d99b:	mov    al,BYTE PTR [r14]
   14000d99e:	mov    BYTE PTR [rbx+0x8],al
   14000d9a1:	lea    rcx,[rbx+0x10]
   14000d9a5:	xor    r8d,r8d
   14000d9a8:	mov    edx,0xfa0
   14000d9ad:	call   0x14000e7fc
   14000d9b2:	inc    DWORD PTR [rbx+0xc]
   14000d9b5:	inc    edi
   14000d9b7:	mov    DWORD PTR [rsp+0x20],edi
   14000d9bb:	inc    r14
   14000d9be:	mov    QWORD PTR [rsp+0x38],r14
   14000d9c3:	add    rsi,0x8
   14000d9c7:	mov    QWORD PTR [rsp+0x40],rsi
   14000d9cc:	jmp    0x14000d952
   14000d9ce:	mov    edi,r12d
   14000d9d1:	mov    DWORD PTR [rsp+0x20],r12d
   14000d9d6:	mov    r15,0xfffffffffffffffe
   14000d9dd:	cmp    edi,0x3
   14000d9e0:	jge    0x14000dab3
   14000d9e6:	movsxd rsi,edi
   14000d9e9:	imul   rbx,rsi,0x58
   14000d9ed:	add    rbx,QWORD PTR [rip+0x3031c]        # 0x14003dd10
   14000d9f4:	mov    QWORD PTR [rsp+0x28],rbx
   14000d9f9:	mov    rax,QWORD PTR [rbx]
   14000d9fc:	add    rax,0x2
   14000da00:	cmp    rax,0x1
   14000da04:	jbe    0x14000da16
   14000da06:	movsx  eax,BYTE PTR [rbx+0x8]
   14000da0a:	bts    eax,0x7
   14000da0e:	mov    BYTE PTR [rbx+0x8],al
   14000da11:	jmp    0x14000daa8
   14000da16:	mov    BYTE PTR [rbx+0x8],0x81
   14000da1a:	lea    eax,[rdi-0x1]
   14000da1d:	neg    eax
   14000da1f:	sbb    ecx,ecx
   14000da21:	add    ecx,0xfffffff5
   14000da24:	mov    eax,0xfffffff6
   14000da29:	test   edi,edi
   14000da2b:	cmove  ecx,eax
   14000da2e:	call   QWORD PTR [rip+0x1e794]        # 0x14002c1c8
   14000da34:	mov    r14,rax
   14000da37:	lea    rcx,[rax+0x1]
   14000da3b:	cmp    rcx,0x1
   14000da3f:	jbe    0x14000da87
   14000da41:	mov    rcx,rax
   14000da44:	call   QWORD PTR [rip+0x1e786]        # 0x14002c1d0
   14000da4a:	test   eax,eax
   14000da4c:	je     0x14000da87
   14000da4e:	mov    QWORD PTR [rbx],r14
   14000da51:	movzx  eax,al
   14000da54:	cmp    eax,0x2
   14000da57:	jne    0x14000da62
   14000da59:	movsx  eax,BYTE PTR [rbx+0x8]
   14000da5d:	or     eax,0x40
   14000da60:	jmp    0x14000da6e
   14000da62:	cmp    eax,0x3
   14000da65:	jne    0x14000da71
   14000da67:	movsx  eax,BYTE PTR [rbx+0x8]
   14000da6b:	or     eax,0x8
   14000da6e:	mov    BYTE PTR [rbx+0x8],al
   14000da71:	lea    rcx,[rbx+0x10]
   14000da75:	xor    r8d,r8d
   14000da78:	mov    edx,0xfa0
   14000da7d:	call   0x14000e7fc
   14000da82:	inc    DWORD PTR [rbx+0xc]
   14000da85:	jmp    0x14000daa8
   14000da87:	movsx  eax,BYTE PTR [rbx+0x8]
   14000da8b:	or     eax,0x40
   14000da8e:	mov    BYTE PTR [rbx+0x8],al
   14000da91:	mov    QWORD PTR [rbx],r15
   14000da94:	mov    rax,QWORD PTR [rip+0x314fd]        # 0x14003ef98
   14000da9b:	test   rax,rax
   14000da9e:	je     0x14000daa8
   14000daa0:	mov    rax,QWORD PTR [rax+rsi*8]
   14000daa4:	mov    DWORD PTR [rax+0x1c],r15d
   14000daa8:	inc    edi
   14000daaa:	mov    DWORD PTR [rsp+0x20],edi
   14000daae:	jmp    0x14000d9dd
   14000dab3:	mov    ecx,0xb
   14000dab8:	call   0x14000fe48
   14000dabd:	xor    eax,eax
   14000dabf:	lea    r11,[rsp+0xc0]
   14000dac7:	mov    rbx,QWORD PTR [r11+0x20]
   14000dacb:	mov    rsi,QWORD PTR [r11+0x28]
   14000dacf:	mov    rdi,QWORD PTR [r11+0x30]
   14000dad3:	mov    r12,QWORD PTR [r11+0x38]
   14000dad7:	mov    rsp,r11
   14000dada:	pop    r15
   14000dadc:	pop    r14
   14000dade:	pop    r13
   14000dae0:	ret    
   14000dae1:	int3   
   14000dae2:	int3   
   14000dae3:	int3   
   14000dae4:	mov    QWORD PTR [rsp+0x8],rbx
   14000dae9:	mov    QWORD PTR [rsp+0x10],rsi
   14000daee:	push   rdi
   14000daef:	sub    rsp,0x20
   14000daf3:	lea    rdi,[rip+0x30216]        # 0x14003dd10
   14000dafa:	mov    esi,0x40
   14000daff:	mov    rbx,QWORD PTR [rdi]
   14000db02:	test   rbx,rbx
   14000db05:	je     0x14000db3e
   14000db07:	lea    rax,[rbx+0xb00]
   14000db0e:	jmp    0x14000db2d
   14000db10:	cmp    DWORD PTR [rbx+0xc],0x0
   14000db14:	je     0x14000db20
   14000db16:	lea    rcx,[rbx+0x10]
   14000db1a:	call   QWORD PTR [rip+0x1e6b8]        # 0x14002c1d8
   14000db20:	mov    rax,QWORD PTR [rdi]
   14000db23:	add    rbx,0x58
   14000db27:	add    rax,0xb00
   14000db2d:	cmp    rbx,rax
   14000db30:	jb     0x14000db10
   14000db32:	mov    rcx,QWORD PTR [rdi]
   14000db35:	call   0x140007dc0
   14000db3a:	and    QWORD PTR [rdi],0x0
   14000db3e:	add    rdi,0x8
   14000db42:	dec    rsi
   14000db45:	jne    0x14000daff
   14000db47:	mov    rbx,QWORD PTR [rsp+0x30]
   14000db4c:	mov    rsi,QWORD PTR [rsp+0x38]
   14000db51:	add    rsp,0x20
   14000db55:	pop    rdi
   14000db56:	ret    
   14000db57:	int3   
   14000db58:	mov    QWORD PTR [rip+0x30141],rcx        # 0x14003dca0
   14000db5f:	ret    
   14000db60:	mov    QWORD PTR [rsp+0x18],rbx
   14000db65:	mov    QWORD PTR [rsp+0x20],rsi
   14000db6a:	push   rdi
   14000db6b:	sub    rsp,0x30
   14000db6f:	cmp    DWORD PTR [rip+0x32592],0x0        # 0x140040108
   14000db76:	jne    0x14000db7d
   14000db78:	call   0x140010074
   14000db7d:	lea    rdi,[rip+0x3038c]        # 0x14003df10
   14000db84:	mov    r8d,0x104
   14000db8a:	xor    ecx,ecx
   14000db8c:	mov    rdx,rdi
   14000db8f:	mov    BYTE PTR [rip+0x3047e],0x0        # 0x14003e014
   14000db96:	call   QWORD PTR [rip+0x1e64c]        # 0x14002c1e8
   14000db9c:	mov    rbx,QWORD PTR [rip+0x3256d]        # 0x140040110
   14000dba3:	mov    QWORD PTR [rip+0x300f6],rdi        # 0x14003dca0
   14000dbaa:	test   rbx,rbx
   14000dbad:	je     0x14000dbb4
   14000dbaf:	cmp    BYTE PTR [rbx],0x0
   14000dbb2:	jne    0x14000dbb7
   14000dbb4:	mov    rbx,rdi
   14000dbb7:	lea    rax,[rsp+0x48]
   14000dbbc:	lea    r9,[rsp+0x40]
   14000dbc1:	xor    r8d,r8d
   14000dbc4:	xor    edx,edx
   14000dbc6:	mov    rcx,rbx
   14000dbc9:	mov    QWORD PTR [rsp+0x20],rax
   14000dbce:	call   0x14000dc54
   14000dbd3:	movsxd rsi,DWORD PTR [rsp+0x40]
   14000dbd8:	movabs rcx,0x1fffffffffffffff
   14000dbe2:	cmp    rsi,rcx
   14000dbe5:	jae    0x14000dc40
   14000dbe7:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000dbec:	cmp    rcx,0xffffffffffffffff
   14000dbf0:	jae    0x14000dc40
   14000dbf2:	lea    rdx,[rcx+rsi*8]
   14000dbf6:	cmp    rdx,rcx
   14000dbf9:	jb     0x14000dc40
   14000dbfb:	mov    rcx,rdx
   14000dbfe:	call   0x140008684
   14000dc03:	mov    rdi,rax
   14000dc06:	test   rax,rax
   14000dc09:	je     0x14000dc40
   14000dc0b:	lea    r8,[rax+rsi*8]
   14000dc0f:	lea    rax,[rsp+0x48]
   14000dc14:	lea    r9,[rsp+0x40]
   14000dc19:	mov    rdx,rdi
   14000dc1c:	mov    rcx,rbx
   14000dc1f:	mov    QWORD PTR [rsp+0x20],rax
   14000dc24:	call   0x14000dc54
   14000dc29:	mov    eax,DWORD PTR [rsp+0x40]
   14000dc2d:	mov    QWORD PTR [rip+0x3004c],rdi        # 0x14003dc80
   14000dc34:	dec    eax
   14000dc36:	mov    DWORD PTR [rip+0x30040],eax        # 0x14003dc7c
   14000dc3c:	xor    eax,eax
   14000dc3e:	jmp    0x14000dc43
   14000dc40:	or     eax,0xffffffff
   14000dc43:	mov    rbx,QWORD PTR [rsp+0x50]
   14000dc48:	mov    rsi,QWORD PTR [rsp+0x58]
   14000dc4d:	add    rsp,0x30
   14000dc51:	pop    rdi
   14000dc52:	ret    
   14000dc53:	int3   
   14000dc54:	mov    rax,rsp
   14000dc57:	mov    QWORD PTR [rax+0x8],rbx
   14000dc5b:	mov    QWORD PTR [rax+0x10],rbp
   14000dc5f:	mov    QWORD PTR [rax+0x18],rsi
   14000dc63:	mov    QWORD PTR [rax+0x20],rdi
   14000dc67:	push   r12
   14000dc69:	push   r14
   14000dc6b:	push   r15
   14000dc6d:	sub    rsp,0x20
   14000dc71:	mov    r14,QWORD PTR [rsp+0x60]
   14000dc76:	mov    r12,r9
   14000dc79:	mov    rdi,r8
   14000dc7c:	and    DWORD PTR [r14],0x0
   14000dc80:	mov    r15,rdx
   14000dc83:	mov    rbx,rcx
   14000dc86:	mov    DWORD PTR [r9],0x1
   14000dc8d:	test   rdx,rdx
   14000dc90:	je     0x14000dc99
   14000dc92:	mov    QWORD PTR [rdx],r8
   14000dc95:	add    r15,0x8
   14000dc99:	xor    ebp,ebp
   14000dc9b:	cmp    BYTE PTR [rbx],0x22
   14000dc9e:	jne    0x14000dcb1
   14000dca0:	xor    eax,eax
   14000dca2:	test   ebp,ebp
   14000dca4:	mov    sil,0x22
   14000dca7:	sete   al
   14000dcaa:	inc    rbx
   14000dcad:	mov    ebp,eax
   14000dcaf:	jmp    0x14000dce8
   14000dcb1:	inc    DWORD PTR [r14]
   14000dcb4:	test   rdi,rdi
   14000dcb7:	je     0x14000dcc0
   14000dcb9:	mov    al,BYTE PTR [rbx]
   14000dcbb:	mov    BYTE PTR [rdi],al
   14000dcbd:	inc    rdi
   14000dcc0:	movzx  esi,BYTE PTR [rbx]
   14000dcc3:	inc    rbx
   14000dcc6:	mov    ecx,esi
   14000dcc8:	call   0x14001c300
   14000dccd:	test   eax,eax
   14000dccf:	je     0x14000dce3
   14000dcd1:	inc    DWORD PTR [r14]
   14000dcd4:	test   rdi,rdi
   14000dcd7:	je     0x14000dce0
   14000dcd9:	mov    al,BYTE PTR [rbx]
   14000dcdb:	mov    BYTE PTR [rdi],al
   14000dcdd:	inc    rdi
   14000dce0:	inc    rbx
   14000dce3:	test   sil,sil
   14000dce6:	je     0x14000dd03
   14000dce8:	test   ebp,ebp
   14000dcea:	jne    0x14000dc9b
   14000dcec:	cmp    sil,0x20
   14000dcf0:	je     0x14000dcf8
   14000dcf2:	cmp    sil,0x9
   14000dcf6:	jne    0x14000dc9b
   14000dcf8:	test   rdi,rdi
   14000dcfb:	je     0x14000dd06
   14000dcfd:	mov    BYTE PTR [rdi-0x1],0x0
   14000dd01:	jmp    0x14000dd06
   14000dd03:	dec    rbx
   14000dd06:	xor    esi,esi
   14000dd08:	cmp    BYTE PTR [rbx],0x0
   14000dd0b:	je     0x14000ddef
   14000dd11:	cmp    BYTE PTR [rbx],0x20
   14000dd14:	je     0x14000dd1b
   14000dd16:	cmp    BYTE PTR [rbx],0x9
   14000dd19:	jne    0x14000dd20
   14000dd1b:	inc    rbx
   14000dd1e:	jmp    0x14000dd11
   14000dd20:	cmp    BYTE PTR [rbx],0x0
   14000dd23:	je     0x14000ddef
   14000dd29:	test   r15,r15
   14000dd2c:	je     0x14000dd35
   14000dd2e:	mov    QWORD PTR [r15],rdi
   14000dd31:	add    r15,0x8
   14000dd35:	inc    DWORD PTR [r12]
   14000dd39:	mov    edx,0x1
   14000dd3e:	xor    ecx,ecx
   14000dd40:	jmp    0x14000dd47
   14000dd42:	inc    rbx
   14000dd45:	inc    ecx
   14000dd47:	cmp    BYTE PTR [rbx],0x5c
   14000dd4a:	je     0x14000dd42
   14000dd4c:	cmp    BYTE PTR [rbx],0x22
   14000dd4f:	jne    0x14000dd86
   14000dd51:	test   dl,cl
   14000dd53:	jne    0x14000dd72
   14000dd55:	test   esi,esi
   14000dd57:	je     0x14000dd67
   14000dd59:	lea    rax,[rbx+0x1]
   14000dd5d:	cmp    BYTE PTR [rax],0x22
   14000dd60:	jne    0x14000dd67
   14000dd62:	mov    rbx,rax
   14000dd65:	jmp    0x14000dd72
   14000dd67:	xor    eax,eax
   14000dd69:	xor    edx,edx
   14000dd6b:	test   esi,esi
   14000dd6d:	sete   al
   14000dd70:	mov    esi,eax
   14000dd72:	shr    ecx,1
   14000dd74:	jmp    0x14000dd86
   14000dd76:	dec    ecx
   14000dd78:	test   rdi,rdi
   14000dd7b:	je     0x14000dd83
   14000dd7d:	mov    BYTE PTR [rdi],0x5c
   14000dd80:	inc    rdi
   14000dd83:	inc    DWORD PTR [r14]
   14000dd86:	test   ecx,ecx
   14000dd88:	jne    0x14000dd76
   14000dd8a:	mov    al,BYTE PTR [rbx]
   14000dd8c:	test   al,al
   14000dd8e:	je     0x14000dddc
   14000dd90:	test   esi,esi
   14000dd92:	jne    0x14000dd9c
   14000dd94:	cmp    al,0x20
   14000dd96:	je     0x14000dddc
   14000dd98:	cmp    al,0x9
   14000dd9a:	je     0x14000dddc
   14000dd9c:	test   edx,edx
   14000dd9e:	je     0x14000ddd4
   14000dda0:	movsx  ecx,al
   14000dda3:	call   0x14001c300
   14000dda8:	test   rdi,rdi
   14000ddab:	je     0x14000ddc7
   14000ddad:	test   eax,eax
   14000ddaf:	je     0x14000ddbe
   14000ddb1:	mov    al,BYTE PTR [rbx]
   14000ddb3:	inc    rbx
   14000ddb6:	mov    BYTE PTR [rdi],al
   14000ddb8:	inc    rdi
   14000ddbb:	inc    DWORD PTR [r14]
   14000ddbe:	mov    al,BYTE PTR [rbx]
   14000ddc0:	mov    BYTE PTR [rdi],al
   14000ddc2:	inc    rdi
   14000ddc5:	jmp    0x14000ddd1
   14000ddc7:	test   eax,eax
   14000ddc9:	je     0x14000ddd1
   14000ddcb:	inc    rbx
   14000ddce:	inc    DWORD PTR [r14]
   14000ddd1:	inc    DWORD PTR [r14]
   14000ddd4:	inc    rbx
   14000ddd7:	jmp    0x14000dd39
   14000dddc:	test   rdi,rdi
   14000dddf:	je     0x14000dde7
   14000dde1:	mov    BYTE PTR [rdi],0x0
   14000dde4:	inc    rdi
   14000dde7:	inc    DWORD PTR [r14]
   14000ddea:	jmp    0x14000dd08
   14000ddef:	test   r15,r15
   14000ddf2:	je     0x14000ddf8
   14000ddf4:	and    QWORD PTR [r15],0x0
   14000ddf8:	inc    DWORD PTR [r12]
   14000ddfc:	mov    rbx,QWORD PTR [rsp+0x40]
   14000de01:	mov    rbp,QWORD PTR [rsp+0x48]
   14000de06:	mov    rsi,QWORD PTR [rsp+0x50]
   14000de0b:	mov    rdi,QWORD PTR [rsp+0x58]
   14000de10:	add    rsp,0x20
   14000de14:	pop    r15
   14000de16:	pop    r14
   14000de18:	pop    r12
   14000de1a:	ret    
   14000de1b:	int3   
   14000de1c:	mov    QWORD PTR [rsp+0x8],rbx
   14000de21:	mov    QWORD PTR [rsp+0x10],rbp
   14000de26:	mov    QWORD PTR [rsp+0x18],rsi
   14000de2b:	push   rdi
   14000de2c:	sub    rsp,0x30
   14000de30:	cmp    DWORD PTR [rip+0x322d1],0x0        # 0x140040108
   14000de37:	jne    0x14000de3e
   14000de39:	call   0x140010074
   14000de3e:	mov    rbx,QWORD PTR [rip+0x2fe13]        # 0x14003dc58
   14000de45:	xor    edi,edi
   14000de47:	test   rbx,rbx
   14000de4a:	jne    0x14000de68
   14000de4c:	or     eax,0xffffffff
   14000de4f:	jmp    0x14000df09
   14000de54:	cmp    al,0x3d
   14000de56:	je     0x14000de5a
   14000de58:	inc    edi
   14000de5a:	mov    rcx,rbx
   14000de5d:	call   0x140007550
   14000de62:	inc    rbx
   14000de65:	add    rbx,rax
   14000de68:	mov    al,BYTE PTR [rbx]
   14000de6a:	test   al,al
   14000de6c:	jne    0x14000de54
   14000de6e:	lea    eax,[rdi+0x1]
   14000de71:	mov    edx,0x8
   14000de76:	movsxd rcx,eax
   14000de79:	call   0x140008604
   14000de7e:	mov    rdi,rax
   14000de81:	mov    QWORD PTR [rip+0x2fe08],rax        # 0x14003dc90
   14000de88:	test   rax,rax
   14000de8b:	je     0x14000de4c
   14000de8d:	mov    rbx,QWORD PTR [rip+0x2fdc4]        # 0x14003dc58
   14000de94:	cmp    BYTE PTR [rbx],0x0
   14000de97:	je     0x14000dee9
   14000de99:	mov    rcx,rbx
   14000de9c:	call   0x140007550
   14000dea1:	cmp    BYTE PTR [rbx],0x3d
   14000dea4:	lea    esi,[rax+0x1]
   14000dea7:	je     0x14000ded7
   14000dea9:	movsxd rbp,esi
   14000deac:	mov    edx,0x1
   14000deb1:	mov    rcx,rbp
   14000deb4:	call   0x140008604
   14000deb9:	mov    QWORD PTR [rdi],rax
   14000debc:	test   rax,rax
   14000debf:	je     0x14000df1e
   14000dec1:	mov    r8,rbx
   14000dec4:	mov    rdx,rbp
   14000dec7:	mov    rcx,rax
   14000deca:	call   0x14000edd8
   14000decf:	test   eax,eax
   14000ded1:	jne    0x14000df37
   14000ded3:	add    rdi,0x8
   14000ded7:	movsxd rax,esi
   14000deda:	add    rbx,rax
   14000dedd:	cmp    BYTE PTR [rbx],0x0
   14000dee0:	jne    0x14000de99
   14000dee2:	mov    rbx,QWORD PTR [rip+0x2fd6f]        # 0x14003dc58
   14000dee9:	mov    rcx,rbx
   14000deec:	call   0x140007dc0
   14000def1:	and    QWORD PTR [rip+0x2fd5f],0x0        # 0x14003dc58
   14000def9:	and    QWORD PTR [rdi],0x0
   14000defd:	mov    DWORD PTR [rip+0x32205],0x1        # 0x14004010c
   14000df07:	xor    eax,eax
   14000df09:	mov    rbx,QWORD PTR [rsp+0x40]
   14000df0e:	mov    rbp,QWORD PTR [rsp+0x48]
   14000df13:	mov    rsi,QWORD PTR [rsp+0x50]
   14000df18:	add    rsp,0x30
   14000df1c:	pop    rdi
   14000df1d:	ret    
   14000df1e:	mov    rcx,QWORD PTR [rip+0x2fd6b]        # 0x14003dc90
   14000df25:	call   0x140007dc0
   14000df2a:	and    QWORD PTR [rip+0x2fd5e],0x0        # 0x14003dc90
   14000df32:	jmp    0x14000de4c
   14000df37:	and    QWORD PTR [rsp+0x20],0x0
   14000df3d:	xor    r9d,r9d
   14000df40:	xor    r8d,r8d
   14000df43:	xor    edx,edx
   14000df45:	xor    ecx,ecx
   14000df47:	call   0x140008da8
   14000df4c:	int3   
   14000df4d:	int3   
   14000df4e:	int3   
   14000df4f:	int3   
   14000df50:	sub    rsp,0x28
   14000df54:	mov    ecx,0x3
   14000df59:	call   0x14000e23c
   14000df5e:	cmp    eax,0x1
   14000df61:	je     0x14000df7a
   14000df63:	mov    ecx,0x3
   14000df68:	call   0x14000e23c
   14000df6d:	test   eax,eax
   14000df6f:	jne    0x14000df8e
   14000df71:	cmp    DWORD PTR [rip+0x300a8],0x1        # 0x14003e020
   14000df78:	jne    0x14000df8e
   14000df7a:	mov    ecx,0xfc
   14000df7f:	call   0x14000dfc4
   14000df84:	mov    ecx,0xff
   14000df89:	call   0x14000dfc4
   14000df8e:	add    rsp,0x28
   14000df92:	ret    
   14000df93:	int3   
   14000df94:	lea    r9,[rip+0x20c55]        # 0x14002ebf0
   14000df9b:	xor    edx,edx
   14000df9d:	mov    r8,r9
   14000dfa0:	cmp    ecx,DWORD PTR [r8]
   14000dfa3:	je     0x14000dfb7
   14000dfa5:	inc    edx
   14000dfa7:	add    r8,0x10
   14000dfab:	movsxd rax,edx
   14000dfae:	cmp    rax,0x17
   14000dfb2:	jb     0x14000dfa0
   14000dfb4:	xor    eax,eax
   14000dfb6:	ret    
   14000dfb7:	movsxd rax,edx
   14000dfba:	add    rax,rax
   14000dfbd:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   14000dfc2:	ret    
   14000dfc3:	int3   
   14000dfc4:	mov    QWORD PTR [rsp+0x10],rbx
   14000dfc9:	mov    QWORD PTR [rsp+0x18],rbp
   14000dfce:	mov    QWORD PTR [rsp+0x20],rsi
   14000dfd3:	push   rdi
   14000dfd4:	push   r14
   14000dfd6:	push   r15
   14000dfd8:	sub    rsp,0x250
   14000dfdf:	mov    rax,QWORD PTR [rip+0x2e1ea]        # 0x14003c1d0
   14000dfe6:	xor    rax,rsp
   14000dfe9:	mov    QWORD PTR [rsp+0x240],rax
   14000dff1:	mov    edi,ecx
   14000dff3:	call   0x14000df94
   14000dff8:	xor    esi,esi
   14000dffa:	mov    rbx,rax
   14000dffd:	test   rax,rax
   14000e000:	je     0x14000e19f
   14000e006:	lea    ecx,[rsi+0x3]
   14000e009:	call   0x14000e23c
   14000e00e:	cmp    eax,0x1
   14000e011:	je     0x14000e134
   14000e017:	lea    ecx,[rsi+0x3]
   14000e01a:	call   0x14000e23c
   14000e01f:	test   eax,eax
   14000e021:	jne    0x14000e030
   14000e023:	cmp    DWORD PTR [rip+0x2fff6],0x1        # 0x14003e020
   14000e02a:	je     0x14000e134
   14000e030:	cmp    edi,0xfc
   14000e036:	je     0x14000e19f
   14000e03c:	lea    rbp,[rip+0x2ffed]        # 0x14003e030
   14000e043:	mov    r15d,0x314
   14000e049:	lea    r8,[rip+0x21640]        # 0x14002f690
   14000e050:	mov    rcx,rbp
   14000e053:	mov    edx,r15d
   14000e056:	call   0x14001c440
   14000e05b:	xor    ecx,ecx
   14000e05d:	test   eax,eax
   14000e05f:	jne    0x14000e220
   14000e065:	lea    r14,[rip+0x2fff6]        # 0x14003e062
   14000e06c:	mov    r8d,0x104
   14000e072:	mov    WORD PTR [rip+0x301f1],si        # 0x14003e26a
   14000e079:	mov    rdx,r14
   14000e07c:	call   QWORD PTR [rip+0x1e176]        # 0x14002c1f8
   14000e082:	lea    edi,[r15-0x19]
   14000e086:	test   eax,eax
   14000e088:	jne    0x14000e0a3
   14000e08a:	lea    r8,[rip+0x21637]        # 0x14002f6c8
   14000e091:	mov    edx,edi
   14000e093:	mov    rcx,r14
   14000e096:	call   0x14001c440
   14000e09b:	test   eax,eax
   14000e09d:	jne    0x14000e1cc
   14000e0a3:	mov    rcx,r14
   14000e0a6:	call   0x14001c4ac
   14000e0ab:	inc    rax
   14000e0ae:	cmp    rax,0x3c
   14000e0b2:	jbe    0x14000e0ed
   14000e0b4:	mov    rcx,r14
   14000e0b7:	call   0x14001c4ac
   14000e0bc:	lea    rcx,[rbp-0x44]
   14000e0c0:	lea    r8,[rip+0x21631]        # 0x14002f6f8
   14000e0c7:	lea    rcx,[rcx+rax*2]
   14000e0cb:	mov    r9d,0x3
   14000e0d1:	mov    rax,rcx
   14000e0d4:	sub    rax,r14
   14000e0d7:	sar    rax,1
   14000e0da:	sub    rdi,rax
   14000e0dd:	mov    rdx,rdi
   14000e0e0:	call   0x14001c4c8
   14000e0e5:	test   eax,eax
   14000e0e7:	jne    0x14000e1e1
   14000e0ed:	lea    r8,[rip+0x2160c]        # 0x14002f700
   14000e0f4:	mov    rdx,r15
   14000e0f7:	mov    rcx,rbp
   14000e0fa:	call   0x14001c3b8
   14000e0ff:	test   eax,eax
   14000e101:	jne    0x14000e20b
   14000e107:	mov    r8,rbx
   14000e10a:	mov    rdx,r15
   14000e10d:	mov    rcx,rbp
   14000e110:	call   0x14001c3b8
   14000e115:	test   eax,eax
   14000e117:	jne    0x14000e1f6
   14000e11d:	lea    rdx,[rip+0x215ec]        # 0x14002f710
   14000e124:	mov    r8d,0x12010
   14000e12a:	mov    rcx,rbp
   14000e12d:	call   0x14001c594
   14000e132:	jmp    0x14000e19f
   14000e134:	mov    ecx,0xfffffff4
   14000e139:	call   QWORD PTR [rip+0x1e089]        # 0x14002c1c8
   14000e13f:	mov    rdi,rax
   14000e142:	lea    rcx,[rax-0x1]
   14000e146:	cmp    rcx,0xfffffffffffffffd
   14000e14a:	ja     0x14000e19f
   14000e14c:	mov    r8d,esi
   14000e14f:	lea    rdx,[rsp+0x40]
   14000e154:	mov    cl,BYTE PTR [rbx]
   14000e156:	mov    BYTE PTR [rdx],cl
   14000e158:	cmp    WORD PTR [rbx],si
   14000e15b:	je     0x14000e172
   14000e15d:	inc    r8d
   14000e160:	inc    rdx
   14000e163:	add    rbx,0x2
   14000e167:	movsxd rax,r8d
   14000e16a:	cmp    rax,0x1f4
   14000e170:	jb     0x14000e154
   14000e172:	lea    rcx,[rsp+0x40]
   14000e177:	mov    BYTE PTR [rsp+0x233],sil
   14000e17f:	call   0x140007550
   14000e184:	lea    r9,[rsp+0x30]
   14000e189:	lea    rdx,[rsp+0x40]
   14000e18e:	mov    rcx,rdi
   14000e191:	mov    r8,rax
   14000e194:	mov    QWORD PTR [rsp+0x20],rsi
   14000e199:	call   QWORD PTR [rip+0x1e051]        # 0x14002c1f0
   14000e19f:	mov    rcx,QWORD PTR [rsp+0x240]
   14000e1a7:	xor    rcx,rsp
   14000e1aa:	call   0x14000c380
   14000e1af:	lea    r11,[rsp+0x250]
   14000e1b7:	mov    rbx,QWORD PTR [r11+0x28]
   14000e1bb:	mov    rbp,QWORD PTR [r11+0x30]
   14000e1bf:	mov    rsi,QWORD PTR [r11+0x38]
   14000e1c3:	mov    rsp,r11
   14000e1c6:	pop    r15
   14000e1c8:	pop    r14
   14000e1ca:	pop    rdi
   14000e1cb:	ret    
   14000e1cc:	xor    r9d,r9d
   14000e1cf:	xor    r8d,r8d
   14000e1d2:	xor    edx,edx
   14000e1d4:	xor    ecx,ecx
   14000e1d6:	mov    QWORD PTR [rsp+0x20],rsi
   14000e1db:	call   0x140008da8
   14000e1e0:	int3   
   14000e1e1:	xor    r9d,r9d
   14000e1e4:	xor    r8d,r8d
   14000e1e7:	xor    edx,edx
   14000e1e9:	xor    ecx,ecx
   14000e1eb:	mov    QWORD PTR [rsp+0x20],rsi
   14000e1f0:	call   0x140008da8
   14000e1f5:	int3   
   14000e1f6:	xor    r9d,r9d
   14000e1f9:	xor    r8d,r8d
   14000e1fc:	xor    edx,edx
   14000e1fe:	xor    ecx,ecx
   14000e200:	mov    QWORD PTR [rsp+0x20],rsi
   14000e205:	call   0x140008da8
   14000e20a:	int3   
   14000e20b:	xor    r9d,r9d
   14000e20e:	xor    r8d,r8d
   14000e211:	xor    edx,edx
   14000e213:	xor    ecx,ecx
   14000e215:	mov    QWORD PTR [rsp+0x20],rsi
   14000e21a:	call   0x140008da8
   14000e21f:	int3   
   14000e220:	xor    r9d,r9d
   14000e223:	xor    r8d,r8d
   14000e226:	xor    edx,edx
   14000e228:	mov    QWORD PTR [rsp+0x20],rsi
   14000e22d:	call   0x140008da8
   14000e232:	int3   
   14000e233:	int3   
   14000e234:	mov    DWORD PTR [rip+0x2fde6],ecx        # 0x14003e020
   14000e23a:	ret    
   14000e23b:	int3   
   14000e23c:	sub    rsp,0x28
   14000e240:	test   ecx,ecx
   14000e242:	js     0x14000e264
   14000e244:	cmp    ecx,0x2
   14000e247:	jle    0x14000e256
   14000e249:	cmp    ecx,0x3
   14000e24c:	jne    0x14000e264
   14000e24e:	mov    eax,DWORD PTR [rip+0x30404]        # 0x14003e658
   14000e254:	jmp    0x14000e277
   14000e256:	mov    eax,DWORD PTR [rip+0x303fc]        # 0x14003e658
   14000e25c:	mov    DWORD PTR [rip+0x303f6],ecx        # 0x14003e658
   14000e262:	jmp    0x14000e277
   14000e264:	call   0x140009cb4
   14000e269:	mov    DWORD PTR [rax],0x16
   14000e26f:	call   0x140008d58
   14000e274:	or     eax,0xffffffff
   14000e277:	add    rsp,0x28
   14000e27b:	ret    
   14000e27c:	mov    QWORD PTR [rsp+0x20],rbx
   14000e281:	push   rbp
   14000e282:	mov    rbp,rsp
   14000e285:	sub    rsp,0x20
   14000e289:	mov    rax,QWORD PTR [rip+0x2df40]        # 0x14003c1d0
   14000e290:	and    QWORD PTR [rbp+0x18],0x0
   14000e295:	movabs rbx,0x2b992ddfa232
   14000e29f:	cmp    rax,rbx
   14000e2a2:	jne    0x14000e313
   14000e2a4:	lea    rcx,[rbp+0x18]
   14000e2a8:	call   QWORD PTR [rip+0x1df62]        # 0x14002c210
   14000e2ae:	mov    rax,QWORD PTR [rbp+0x18]
   14000e2b2:	mov    QWORD PTR [rbp+0x10],rax
   14000e2b6:	call   QWORD PTR [rip+0x1defc]        # 0x14002c1b8
   14000e2bc:	mov    eax,eax
   14000e2be:	xor    QWORD PTR [rbp+0x10],rax
   14000e2c2:	call   QWORD PTR [rip+0x1df40]        # 0x14002c208
   14000e2c8:	lea    rcx,[rbp+0x20]
   14000e2cc:	mov    eax,eax
   14000e2ce:	xor    QWORD PTR [rbp+0x10],rax
   14000e2d2:	call   QWORD PTR [rip+0x1df28]        # 0x14002c200
   14000e2d8:	mov    eax,DWORD PTR [rbp+0x20]
   14000e2db:	shl    rax,0x20
   14000e2df:	lea    rcx,[rbp+0x10]
   14000e2e3:	xor    rax,QWORD PTR [rbp+0x20]
   14000e2e7:	xor    rax,QWORD PTR [rbp+0x10]
   14000e2eb:	xor    rax,rcx
   14000e2ee:	movabs rcx,0xffffffffffff
   14000e2f8:	and    rax,rcx
   14000e2fb:	movabs rcx,0x2b992ddfa233
   14000e305:	cmp    rax,rbx
   14000e308:	cmove  rax,rcx
   14000e30c:	mov    QWORD PTR [rip+0x2debd],rax        # 0x14003c1d0
   14000e313:	mov    rbx,QWORD PTR [rsp+0x48]
   14000e318:	not    rax
   14000e31b:	mov    QWORD PTR [rip+0x2deb6],rax        # 0x14003c1d8
   14000e322:	add    rsp,0x20
   14000e326:	pop    rbp
   14000e327:	ret    
   14000e328:	mov    QWORD PTR [rsp+0x8],rbx
   14000e32d:	push   rdi
   14000e32e:	sub    rsp,0x20
   14000e332:	lea    rbx,[rip+0x28617]        # 0x140036950
   14000e339:	lea    rdi,[rip+0x28610]        # 0x140036950
   14000e340:	jmp    0x14000e350
   14000e342:	mov    rax,QWORD PTR [rbx]
   14000e345:	test   rax,rax
   14000e348:	je     0x14000e34c
   14000e34a:	call   rax
   14000e34c:	add    rbx,0x8
   14000e350:	cmp    rbx,rdi
   14000e353:	jb     0x14000e342
   14000e355:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e35a:	add    rsp,0x20
   14000e35e:	pop    rdi
   14000e35f:	ret    
   14000e360:	mov    QWORD PTR [rsp+0x8],rbx
   14000e365:	push   rdi
   14000e366:	sub    rsp,0x20
   14000e36a:	lea    rbx,[rip+0x285ef]        # 0x140036960
   14000e371:	lea    rdi,[rip+0x285e8]        # 0x140036960
   14000e378:	jmp    0x14000e388
   14000e37a:	mov    rax,QWORD PTR [rbx]
   14000e37d:	test   rax,rax
   14000e380:	je     0x14000e384
   14000e382:	call   rax
   14000e384:	add    rbx,0x8
   14000e388:	cmp    rbx,rdi
   14000e38b:	jb     0x14000e37a
   14000e38d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e392:	add    rsp,0x20
   14000e396:	pop    rdi
   14000e397:	ret    
   14000e398:	mov    rax,rsp
   14000e39b:	mov    QWORD PTR [rax+0x8],rbx
   14000e39f:	mov    QWORD PTR [rax+0x10],rbp
   14000e3a3:	mov    QWORD PTR [rax+0x18],rsi
   14000e3a7:	mov    QWORD PTR [rax+0x20],rdi
   14000e3ab:	push   r14
   14000e3ad:	sub    rsp,0x40
   14000e3b1:	call   QWORD PTR [rip+0x1de61]        # 0x14002c218
   14000e3b7:	xor    r14d,r14d
   14000e3ba:	mov    rdi,rax
   14000e3bd:	test   rax,rax
   14000e3c0:	je     0x14000e46f
   14000e3c6:	mov    rbx,rax
   14000e3c9:	cmp    WORD PTR [rax],r14w
   14000e3cd:	je     0x14000e3e3
   14000e3cf:	add    rbx,0x2
   14000e3d3:	cmp    WORD PTR [rbx],r14w
   14000e3d7:	jne    0x14000e3cf
   14000e3d9:	add    rbx,0x2
   14000e3dd:	cmp    WORD PTR [rbx],r14w
   14000e3e1:	jne    0x14000e3cf
   14000e3e3:	mov    QWORD PTR [rsp+0x38],r14
   14000e3e8:	sub    rbx,rax
   14000e3eb:	mov    QWORD PTR [rsp+0x30],r14
   14000e3f0:	sar    rbx,1
   14000e3f3:	mov    r8,rax
   14000e3f6:	xor    edx,edx
   14000e3f8:	lea    r9d,[rbx+0x1]
   14000e3fc:	xor    ecx,ecx
   14000e3fe:	mov    DWORD PTR [rsp+0x28],r14d
   14000e403:	mov    QWORD PTR [rsp+0x20],r14
   14000e408:	call   QWORD PTR [rip+0x1dd82]        # 0x14002c190
   14000e40e:	movsxd rbp,eax
   14000e411:	test   eax,eax
   14000e413:	je     0x14000e466
   14000e415:	mov    rcx,rbp
   14000e418:	call   0x140008684
   14000e41d:	mov    rsi,rax
   14000e420:	test   rax,rax
   14000e423:	je     0x14000e466
   14000e425:	mov    QWORD PTR [rsp+0x38],r14
   14000e42a:	mov    QWORD PTR [rsp+0x30],r14
   14000e42f:	lea    r9d,[rbx+0x1]
   14000e433:	mov    r8,rdi
   14000e436:	xor    edx,edx
   14000e438:	xor    ecx,ecx
   14000e43a:	mov    DWORD PTR [rsp+0x28],ebp
   14000e43e:	mov    QWORD PTR [rsp+0x20],rax
   14000e443:	call   QWORD PTR [rip+0x1dd47]        # 0x14002c190
   14000e449:	test   eax,eax
   14000e44b:	jne    0x14000e458
   14000e44d:	mov    rcx,rsi
   14000e450:	call   0x140007dc0
   14000e455:	mov    rsi,r14
   14000e458:	mov    rcx,rdi
   14000e45b:	call   QWORD PTR [rip+0x1ddbf]        # 0x14002c220
   14000e461:	mov    rax,rsi
   14000e464:	jmp    0x14000e471
   14000e466:	mov    rcx,rdi
   14000e469:	call   QWORD PTR [rip+0x1ddb1]        # 0x14002c220
   14000e46f:	xor    eax,eax
   14000e471:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e476:	mov    rbp,QWORD PTR [rsp+0x58]
   14000e47b:	mov    rsi,QWORD PTR [rsp+0x60]
   14000e480:	mov    rdi,QWORD PTR [rsp+0x68]
   14000e485:	add    rsp,0x40
   14000e489:	pop    r14
   14000e48b:	ret    
   14000e48c:	sub    rsp,0x28
   14000e490:	mov    rax,QWORD PTR [rip+0x31c31]        # 0x1400400c8
   14000e497:	and    DWORD PTR [rsp+0x30],0x0
   14000e49c:	xor    rax,QWORD PTR [rip+0x2dd2d]        # 0x14003c1d0
   14000e4a3:	je     0x14000e4ba
   14000e4a5:	lea    rcx,[rsp+0x30]
   14000e4aa:	xor    edx,edx
   14000e4ac:	call   rax
   14000e4ae:	cmp    eax,0x7a
   14000e4b1:	jne    0x14000e4ba
   14000e4b3:	mov    eax,0x1
   14000e4b8:	jmp    0x14000e4bc
   14000e4ba:	xor    eax,eax
   14000e4bc:	add    rsp,0x28
   14000e4c0:	ret    
   14000e4c1:	int3   
   14000e4c2:	int3   
   14000e4c3:	int3   
   14000e4c4:	mov    QWORD PTR [rsp+0x20],rbx
   14000e4c9:	push   rdi
   14000e4ca:	sub    rsp,0x40
   14000e4ce:	mov    rbx,rcx
   14000e4d1:	call   QWORD PTR [rip+0x1dd51]        # 0x14002c228
   14000e4d7:	mov    rdi,QWORD PTR [rbx+0xf8]
   14000e4de:	lea    rdx,[rsp+0x50]
   14000e4e3:	xor    r8d,r8d
   14000e4e6:	mov    rcx,rdi
   14000e4e9:	call   QWORD PTR [rip+0x1dc41]        # 0x14002c130
   14000e4ef:	test   rax,rax
   14000e4f2:	je     0x14000e526
   14000e4f4:	and    QWORD PTR [rsp+0x38],0x0
   14000e4fa:	mov    rdx,QWORD PTR [rsp+0x50]
   14000e4ff:	lea    rcx,[rsp+0x58]
   14000e504:	mov    QWORD PTR [rsp+0x30],rcx
   14000e509:	lea    rcx,[rsp+0x60]
   14000e50e:	mov    r9,rax
   14000e511:	mov    QWORD PTR [rsp+0x28],rcx
   14000e516:	xor    ecx,ecx
   14000e518:	mov    r8,rdi
   14000e51b:	mov    QWORD PTR [rsp+0x20],rbx
   14000e520:	call   QWORD PTR [rip+0x1dd0a]        # 0x14002c230
   14000e526:	mov    rbx,QWORD PTR [rsp+0x68]
   14000e52b:	add    rsp,0x40
   14000e52f:	pop    rdi
   14000e530:	ret    
   14000e531:	int3   
   14000e532:	int3   
   14000e533:	int3   
   14000e534:	rex push rbx
   14000e536:	push   rsi
   14000e537:	push   rdi
   14000e538:	sub    rsp,0x40
   14000e53c:	mov    rbx,rcx
   14000e53f:	call   QWORD PTR [rip+0x1dce3]        # 0x14002c228
   14000e545:	mov    rsi,QWORD PTR [rbx+0xf8]
   14000e54c:	xor    edi,edi
   14000e54e:	lea    rdx,[rsp+0x60]
   14000e553:	xor    r8d,r8d
   14000e556:	mov    rcx,rsi
   14000e559:	call   QWORD PTR [rip+0x1dbd1]        # 0x14002c130
   14000e55f:	test   rax,rax
   14000e562:	je     0x14000e59d
   14000e564:	and    QWORD PTR [rsp+0x38],0x0
   14000e56a:	mov    rdx,QWORD PTR [rsp+0x60]
   14000e56f:	lea    rcx,[rsp+0x68]
   14000e574:	mov    QWORD PTR [rsp+0x30],rcx
   14000e579:	lea    rcx,[rsp+0x70]
   14000e57e:	mov    r9,rax
   14000e581:	mov    QWORD PTR [rsp+0x28],rcx
   14000e586:	xor    ecx,ecx
   14000e588:	mov    r8,rsi
   14000e58b:	mov    QWORD PTR [rsp+0x20],rbx
   14000e590:	call   QWORD PTR [rip+0x1dc9a]        # 0x14002c230
   14000e596:	inc    edi
   14000e598:	cmp    edi,0x2
   14000e59b:	jl     0x14000e54e
   14000e59d:	add    rsp,0x40
   14000e5a1:	pop    rdi
   14000e5a2:	pop    rsi
   14000e5a3:	pop    rbx
   14000e5a4:	ret    
   14000e5a5:	int3   
   14000e5a6:	int3   
   14000e5a7:	int3   
   14000e5a8:	sub    rsp,0x28
   14000e5ac:	mov    rax,QWORD PTR [rip+0x31a85]        # 0x140040038
   14000e5b3:	xor    rax,QWORD PTR [rip+0x2dc16]        # 0x14003c1d0
   14000e5ba:	je     0x14000e5be
   14000e5bc:	call   rax
   14000e5be:	add    rsp,0x28
   14000e5c2:	ret    
   14000e5c3:	int3   
   14000e5c4:	sub    rsp,0x28
   14000e5c8:	mov    rax,QWORD PTR [rip+0x31a81]        # 0x140040050
   14000e5cf:	xor    rax,QWORD PTR [rip+0x2dbfa]        # 0x14003c1d0
   14000e5d6:	je     0x14000e5da
   14000e5d8:	call   rax
   14000e5da:	add    rsp,0x28
   14000e5de:	ret    
   14000e5df:	int3   
   14000e5e0:	mov    r10,QWORD PTR [rip+0x31a21]        # 0x140040008
   14000e5e7:	mov    eax,r8d
   14000e5ea:	xor    r10,QWORD PTR [rip+0x2dbdf]        # 0x14003c1d0
   14000e5f1:	je     0x14000e5f6
   14000e5f3:	rex.WB jmp r10
   14000e5f6:	and    eax,0x1
   14000e5f9:	mov    r9,rdx
   14000e5fc:	and    r8d,0x2
   14000e600:	mov    edx,eax
   14000e602:	rex.W jmp QWORD PTR [rip+0x1dc47]        # 0x14002c250
   14000e609:	int3   
   14000e60a:	int3   
   14000e60b:	int3   
   14000e60c:	mov    r10,QWORD PTR [rip+0x319fd]        # 0x140040010
   14000e613:	xor    r10,QWORD PTR [rip+0x2dbb6]        # 0x14003c1d0
   14000e61a:	je     0x14000e61f
   14000e61c:	rex.WB jmp r10
   14000e61f:	rex.W jmp QWORD PTR [rip+0x1dc72]        # 0x14002c298
   14000e626:	int3   
   14000e627:	int3   
   14000e628:	sub    rsp,0x28
   14000e62c:	mov    rax,QWORD PTR [rip+0x31a45]        # 0x140040078
   14000e633:	xor    rax,QWORD PTR [rip+0x2db96]        # 0x14003c1d0
   14000e63a:	je     0x14000e643
   14000e63c:	add    rsp,0x28
   14000e640:	rex.W jmp rax
   14000e643:	mov    ecx,0x78
   14000e648:	call   QWORD PTR [rip+0x1db5a]        # 0x14002c1a8
   14000e64e:	xor    al,al
   14000e650:	add    rsp,0x28
   14000e654:	ret    
   14000e655:	int3   
   14000e656:	int3   
   14000e657:	int3   
   14000e658:	mov    rax,QWORD PTR [rip+0x319c1]        # 0x140040020
   14000e65f:	xor    rax,QWORD PTR [rip+0x2db6a]        # 0x14003c1d0
   14000e666:	je     0x14000e66b
   14000e668:	rex.W jmp rax
   14000e66b:	xor    eax,eax
   14000e66d:	ret    
   14000e66e:	int3   
   14000e66f:	int3   
   14000e670:	mov    rax,QWORD PTR [rip+0x319c9]        # 0x140040040
   14000e677:	xor    rax,QWORD PTR [rip+0x2db52]        # 0x14003c1d0
   14000e67e:	je     0x14000e683
   14000e680:	rex.W jmp rax
   14000e683:	xor    eax,eax
   14000e685:	ret    
   14000e686:	int3   
   14000e687:	int3   
   14000e688:	mov    rax,QWORD PTR [rip+0x31951]        # 0x14003ffe0
   14000e68f:	xor    rax,QWORD PTR [rip+0x2db3a]        # 0x14003c1d0
   14000e696:	je     0x14000e69b
   14000e698:	rex.W jmp rax
   14000e69b:	rex.W jmp QWORD PTR [rip+0x1dbce]        # 0x14002c270
   14000e6a2:	int3   
   14000e6a3:	int3   
   14000e6a4:	mov    rax,QWORD PTR [rip+0x3193d]        # 0x14003ffe8
   14000e6ab:	xor    rax,QWORD PTR [rip+0x2db1e]        # 0x14003c1d0
   14000e6b2:	je     0x14000e6b7
   14000e6b4:	rex.W jmp rax
   14000e6b7:	rex.W jmp QWORD PTR [rip+0x1dbca]        # 0x14002c288
   14000e6be:	int3   
   14000e6bf:	int3   
   14000e6c0:	mov    rax,QWORD PTR [rip+0x31929]        # 0x14003fff0
   14000e6c7:	xor    rax,QWORD PTR [rip+0x2db02]        # 0x14003c1d0
   14000e6ce:	je     0x14000e6d3
   14000e6d0:	rex.W jmp rax
   14000e6d3:	rex.W jmp QWORD PTR [rip+0x1db9e]        # 0x14002c278
   14000e6da:	int3   
   14000e6db:	int3   
   14000e6dc:	mov    rax,QWORD PTR [rip+0x31915]        # 0x14003fff8
   14000e6e3:	xor    rax,QWORD PTR [rip+0x2dae6]        # 0x14003c1d0
   14000e6ea:	je     0x14000e6ef
   14000e6ec:	rex.W jmp rax
   14000e6ef:	rex.W jmp QWORD PTR [rip+0x1db8a]        # 0x14002c280
   14000e6f6:	int3   
   14000e6f7:	int3   
   14000e6f8:	sub    rsp,0x28
   14000e6fc:	mov    rax,QWORD PTR [rip+0x31955]        # 0x140040058
   14000e703:	xor    rax,QWORD PTR [rip+0x2dac6]        # 0x14003c1d0
   14000e70a:	je     0x14000e70e
   14000e70c:	call   rax
   14000e70e:	add    rsp,0x28
   14000e712:	ret    
   14000e713:	int3   
   14000e714:	sub    rsp,0x28
   14000e718:	mov    rax,QWORD PTR [rip+0x31941]        # 0x140040060
   14000e71f:	xor    rax,QWORD PTR [rip+0x2daaa]        # 0x14003c1d0
   14000e726:	je     0x14000e72a
   14000e728:	call   rax
   14000e72a:	add    rsp,0x28
   14000e72e:	ret    
   14000e72f:	int3   
   14000e730:	mov    rax,QWORD PTR [rip+0x31931]        # 0x140040068
   14000e737:	xor    rax,QWORD PTR [rip+0x2da92]        # 0x14003c1d0
   14000e73e:	je     0x14000e743
   14000e740:	rex.W jmp rax
   14000e743:	xor    eax,eax
   14000e745:	ret    
   14000e746:	int3   
   14000e747:	int3   
   14000e748:	sub    rsp,0x28
   14000e74c:	mov    rax,QWORD PTR [rip+0x31985]        # 0x1400400d8
   14000e753:	xor    rax,QWORD PTR [rip+0x2da76]        # 0x14003c1d0
   14000e75a:	je     0x14000e763
   14000e75c:	add    rsp,0x28
   14000e760:	rex.W jmp rax
   14000e763:	mov    ecx,0x78
   14000e768:	call   QWORD PTR [rip+0x1da3a]        # 0x14002c1a8
   14000e76e:	xor    eax,eax
   14000e770:	add    rsp,0x28
   14000e774:	ret    
   14000e775:	int3   
   14000e776:	int3   
   14000e777:	int3   
   14000e778:	sub    rsp,0x28
   14000e77c:	mov    rax,QWORD PTR [rip+0x318ed]        # 0x140040070
   14000e783:	xor    rax,QWORD PTR [rip+0x2da46]        # 0x14003c1d0
   14000e78a:	je     0x14000e793
   14000e78c:	add    rsp,0x28
   14000e790:	rex.W jmp rax
   14000e793:	mov    ecx,0x78
   14000e798:	call   QWORD PTR [rip+0x1da0a]        # 0x14002c1a8
   14000e79e:	xor    eax,eax
   14000e7a0:	add    rsp,0x28
   14000e7a4:	ret    
   14000e7a5:	int3   
   14000e7a6:	int3   
   14000e7a7:	int3   
   14000e7a8:	sub    rsp,0x98
   14000e7af:	lea    rcx,[rsp+0x20]
   14000e7b4:	call   QWORD PTR [rip+0x1da26]        # 0x14002c1e0
   14000e7ba:	test   BYTE PTR [rsp+0x5c],0x1
   14000e7bf:	movzx  ecx,WORD PTR [rsp+0x60]
   14000e7c4:	mov    eax,0xa
   14000e7c9:	cmovne eax,ecx
   14000e7cc:	add    rsp,0x98
   14000e7d3:	ret    
   14000e7d4:	sub    rsp,0x28
   14000e7d8:	mov    rax,QWORD PTR [rip+0x318f1]        # 0x1400400d0
   14000e7df:	xor    rax,QWORD PTR [rip+0x2d9ea]        # 0x14003c1d0
   14000e7e6:	je     0x14000e7ef
   14000e7e8:	add    rsp,0x28
   14000e7ec:	rex.W jmp rax
   14000e7ef:	call   QWORD PTR [rip+0x1da9b]        # 0x14002c290
   14000e7f5:	mov    eax,eax
   14000e7f7:	add    rsp,0x28
   14000e7fb:	ret    
   14000e7fc:	sub    rsp,0x28
   14000e800:	mov    rax,QWORD PTR [rip+0x317f9]        # 0x140040000
   14000e807:	xor    rax,QWORD PTR [rip+0x2d9c2]        # 0x14003c1d0
   14000e80e:	je     0x14000e817
   14000e810:	add    rsp,0x28
   14000e814:	rex.W jmp rax
   14000e817:	call   QWORD PTR [rip+0x1da2b]        # 0x14002c248
   14000e81d:	mov    eax,0x1
   14000e822:	add    rsp,0x28
   14000e826:	ret    
   14000e827:	int3   
   14000e828:	rex push rbx
   14000e82a:	sub    rsp,0x20
   14000e82e:	mov    eax,DWORD PTR [rip+0x2da54]        # 0x14003c288
   14000e834:	xor    ebx,ebx
   14000e836:	test   eax,eax
   14000e838:	jns    0x14000e869
   14000e83a:	mov    rax,QWORD PTR [rip+0x31887]        # 0x1400400c8
   14000e841:	mov    DWORD PTR [rsp+0x30],ebx
   14000e845:	xor    rax,QWORD PTR [rip+0x2d984]        # 0x14003c1d0
   14000e84c:	je     0x14000e85f
   14000e84e:	lea    rcx,[rsp+0x30]
   14000e853:	xor    edx,edx
   14000e855:	call   rax
   14000e857:	cmp    eax,0x7a
   14000e85a:	lea    eax,[rbx+0x1]
   14000e85d:	je     0x14000e861
   14000e85f:	mov    eax,ebx
   14000e861:	mov    DWORD PTR [rip+0x2da21],eax        # 0x14003c288
   14000e867:	test   eax,eax
   14000e869:	setg   bl
   14000e86c:	mov    eax,ebx
   14000e86e:	add    rsp,0x20
   14000e872:	pop    rbx
   14000e873:	ret    
   14000e874:	rex push rbx
   14000e876:	sub    rsp,0x20
   14000e87a:	lea    rcx,[rip+0x20edf]        # 0x14002f760
   14000e881:	call   QWORD PTR [rip+0x1d849]        # 0x14002c0d0
   14000e887:	lea    rdx,[rip+0x20ef2]        # 0x14002f780
   14000e88e:	mov    rcx,rax
   14000e891:	mov    rbx,rax
   14000e894:	call   QWORD PTR [rip+0x1d8de]        # 0x14002c178
   14000e89a:	lea    rdx,[rip+0x20eef]        # 0x14002f790
   14000e8a1:	mov    rcx,rbx
   14000e8a4:	xor    rax,QWORD PTR [rip+0x2d925]        # 0x14003c1d0
   14000e8ab:	mov    QWORD PTR [rip+0x3172e],rax        # 0x14003ffe0
   14000e8b2:	call   QWORD PTR [rip+0x1d8c0]        # 0x14002c178
   14000e8b8:	lea    rdx,[rip+0x20ed9]        # 0x14002f798
   14000e8bf:	xor    rax,QWORD PTR [rip+0x2d90a]        # 0x14003c1d0
   14000e8c6:	mov    rcx,rbx
   14000e8c9:	mov    QWORD PTR [rip+0x31718],rax        # 0x14003ffe8
   14000e8d0:	call   QWORD PTR [rip+0x1d8a2]        # 0x14002c178
   14000e8d6:	lea    rdx,[rip+0x20ecb]        # 0x14002f7a8
   14000e8dd:	xor    rax,QWORD PTR [rip+0x2d8ec]        # 0x14003c1d0
   14000e8e4:	mov    rcx,rbx
   14000e8e7:	mov    QWORD PTR [rip+0x31702],rax        # 0x14003fff0
   14000e8ee:	call   QWORD PTR [rip+0x1d884]        # 0x14002c178
   14000e8f4:	lea    rdx,[rip+0x20ebd]        # 0x14002f7b8
   14000e8fb:	xor    rax,QWORD PTR [rip+0x2d8ce]        # 0x14003c1d0
   14000e902:	mov    rcx,rbx
   14000e905:	mov    QWORD PTR [rip+0x316ec],rax        # 0x14003fff8
   14000e90c:	call   QWORD PTR [rip+0x1d866]        # 0x14002c178
   14000e912:	lea    rdx,[rip+0x20ebf]        # 0x14002f7d8
   14000e919:	xor    rax,QWORD PTR [rip+0x2d8b0]        # 0x14003c1d0
   14000e920:	mov    rcx,rbx
   14000e923:	mov    QWORD PTR [rip+0x316d6],rax        # 0x140040000
   14000e92a:	call   QWORD PTR [rip+0x1d848]        # 0x14002c178
   14000e930:	lea    rdx,[rip+0x20eb1]        # 0x14002f7e8
   14000e937:	xor    rax,QWORD PTR [rip+0x2d892]        # 0x14003c1d0
   14000e93e:	mov    rcx,rbx
   14000e941:	mov    QWORD PTR [rip+0x316c0],rax        # 0x140040008
   14000e948:	call   QWORD PTR [rip+0x1d82a]        # 0x14002c178
   14000e94e:	lea    rdx,[rip+0x20eab]        # 0x14002f800
   14000e955:	xor    rax,QWORD PTR [rip+0x2d874]        # 0x14003c1d0
   14000e95c:	mov    rcx,rbx
   14000e95f:	mov    QWORD PTR [rip+0x316aa],rax        # 0x140040010
   14000e966:	call   QWORD PTR [rip+0x1d80c]        # 0x14002c178
   14000e96c:	lea    rdx,[rip+0x20ea5]        # 0x14002f818
   14000e973:	xor    rax,QWORD PTR [rip+0x2d856]        # 0x14003c1d0
   14000e97a:	mov    rcx,rbx
   14000e97d:	mov    QWORD PTR [rip+0x31694],rax        # 0x140040018
   14000e984:	call   QWORD PTR [rip+0x1d7ee]        # 0x14002c178
   14000e98a:	lea    rdx,[rip+0x20e9f]        # 0x14002f830
   14000e991:	xor    rax,QWORD PTR [rip+0x2d838]        # 0x14003c1d0
   14000e998:	mov    rcx,rbx
   14000e99b:	mov    QWORD PTR [rip+0x3167e],rax        # 0x140040020
   14000e9a2:	call   QWORD PTR [rip+0x1d7d0]        # 0x14002c178
   14000e9a8:	lea    rdx,[rip+0x20e99]        # 0x14002f848
   14000e9af:	xor    rax,QWORD PTR [rip+0x2d81a]        # 0x14003c1d0
   14000e9b6:	mov    rcx,rbx
   14000e9b9:	mov    QWORD PTR [rip+0x31668],rax        # 0x140040028
   14000e9c0:	call   QWORD PTR [rip+0x1d7b2]        # 0x14002c178
   14000e9c6:	lea    rdx,[rip+0x20e9b]        # 0x14002f868
   14000e9cd:	xor    rax,QWORD PTR [rip+0x2d7fc]        # 0x14003c1d0
   14000e9d4:	mov    rcx,rbx
   14000e9d7:	mov    QWORD PTR [rip+0x31652],rax        # 0x140040030
   14000e9de:	call   QWORD PTR [rip+0x1d794]        # 0x14002c178
   14000e9e4:	lea    rdx,[rip+0x20e95]        # 0x14002f880
   14000e9eb:	xor    rax,QWORD PTR [rip+0x2d7de]        # 0x14003c1d0
   14000e9f2:	mov    rcx,rbx
   14000e9f5:	mov    QWORD PTR [rip+0x3163c],rax        # 0x140040038
   14000e9fc:	call   QWORD PTR [rip+0x1d776]        # 0x14002c178
   14000ea02:	lea    rdx,[rip+0x20e8f]        # 0x14002f898
   14000ea09:	xor    rax,QWORD PTR [rip+0x2d7c0]        # 0x14003c1d0
   14000ea10:	mov    rcx,rbx
   14000ea13:	mov    QWORD PTR [rip+0x31626],rax        # 0x140040040
   14000ea1a:	call   QWORD PTR [rip+0x1d758]        # 0x14002c178
   14000ea20:	lea    rdx,[rip+0x20e89]        # 0x14002f8b0
   14000ea27:	xor    rax,QWORD PTR [rip+0x2d7a2]        # 0x14003c1d0
   14000ea2e:	mov    rcx,rbx
   14000ea31:	mov    QWORD PTR [rip+0x31610],rax        # 0x140040048
   14000ea38:	call   QWORD PTR [rip+0x1d73a]        # 0x14002c178
   14000ea3e:	lea    rdx,[rip+0x20e83]        # 0x14002f8c8
   14000ea45:	xor    rax,QWORD PTR [rip+0x2d784]        # 0x14003c1d0
   14000ea4c:	mov    rcx,rbx
   14000ea4f:	mov    QWORD PTR [rip+0x315fa],rax        # 0x140040050
   14000ea56:	call   QWORD PTR [rip+0x1d71c]        # 0x14002c178
   14000ea5c:	xor    rax,QWORD PTR [rip+0x2d76d]        # 0x14003c1d0
   14000ea63:	lea    rdx,[rip+0x20e7e]        # 0x14002f8e8
   14000ea6a:	mov    rcx,rbx
   14000ea6d:	mov    QWORD PTR [rip+0x315e4],rax        # 0x140040058
   14000ea74:	call   QWORD PTR [rip+0x1d6fe]        # 0x14002c178
   14000ea7a:	lea    rdx,[rip+0x20e87]        # 0x14002f908
   14000ea81:	xor    rax,QWORD PTR [rip+0x2d748]        # 0x14003c1d0
   14000ea88:	mov    rcx,rbx
   14000ea8b:	mov    QWORD PTR [rip+0x315ce],rax        # 0x140040060
   14000ea92:	call   QWORD PTR [rip+0x1d6e0]        # 0x14002c178
   14000ea98:	lea    rdx,[rip+0x20e89]        # 0x14002f928
   14000ea9f:	xor    rax,QWORD PTR [rip+0x2d72a]        # 0x14003c1d0
   14000eaa6:	mov    rcx,rbx
   14000eaa9:	mov    QWORD PTR [rip+0x315b8],rax        # 0x140040068
   14000eab0:	call   QWORD PTR [rip+0x1d6c2]        # 0x14002c178
   14000eab6:	lea    rdx,[rip+0x20e8b]        # 0x14002f948
   14000eabd:	xor    rax,QWORD PTR [rip+0x2d70c]        # 0x14003c1d0
   14000eac4:	mov    rcx,rbx
   14000eac7:	mov    QWORD PTR [rip+0x315a2],rax        # 0x140040070
   14000eace:	call   QWORD PTR [rip+0x1d6a4]        # 0x14002c178
   14000ead4:	lea    rdx,[rip+0x20e85]        # 0x14002f960
   14000eadb:	xor    rax,QWORD PTR [rip+0x2d6ee]        # 0x14003c1d0
   14000eae2:	mov    rcx,rbx
   14000eae5:	mov    QWORD PTR [rip+0x3158c],rax        # 0x140040078
   14000eaec:	call   QWORD PTR [rip+0x1d686]        # 0x14002c178
   14000eaf2:	lea    rdx,[rip+0x20e87]        # 0x14002f980
   14000eaf9:	xor    rax,QWORD PTR [rip+0x2d6d0]        # 0x14003c1d0
   14000eb00:	mov    rcx,rbx
   14000eb03:	mov    QWORD PTR [rip+0x31576],rax        # 0x140040080
   14000eb0a:	call   QWORD PTR [rip+0x1d668]        # 0x14002c178
   14000eb10:	lea    rdx,[rip+0x20e81]        # 0x14002f998
   14000eb17:	xor    rax,QWORD PTR [rip+0x2d6b2]        # 0x14003c1d0
   14000eb1e:	mov    rcx,rbx
   14000eb21:	mov    QWORD PTR [rip+0x31568],rax        # 0x140040090
   14000eb28:	call   QWORD PTR [rip+0x1d64a]        # 0x14002c178
   14000eb2e:	lea    rdx,[rip+0x20e73]        # 0x14002f9a8
   14000eb35:	xor    rax,QWORD PTR [rip+0x2d694]        # 0x14003c1d0
   14000eb3c:	mov    rcx,rbx
   14000eb3f:	mov    QWORD PTR [rip+0x31542],rax        # 0x140040088
   14000eb46:	call   QWORD PTR [rip+0x1d62c]        # 0x14002c178
   14000eb4c:	lea    rdx,[rip+0x20e65]        # 0x14002f9b8
   14000eb53:	xor    rax,QWORD PTR [rip+0x2d676]        # 0x14003c1d0
   14000eb5a:	mov    rcx,rbx
   14000eb5d:	mov    QWORD PTR [rip+0x31534],rax        # 0x140040098
   14000eb64:	call   QWORD PTR [rip+0x1d60e]        # 0x14002c178
   14000eb6a:	lea    rdx,[rip+0x20e57]        # 0x14002f9c8
   14000eb71:	xor    rax,QWORD PTR [rip+0x2d658]        # 0x14003c1d0
   14000eb78:	mov    rcx,rbx
   14000eb7b:	mov    QWORD PTR [rip+0x3151e],rax        # 0x1400400a0
   14000eb82:	call   QWORD PTR [rip+0x1d5f0]        # 0x14002c178
   14000eb88:	lea    rdx,[rip+0x20e49]        # 0x14002f9d8
   14000eb8f:	xor    rax,QWORD PTR [rip+0x2d63a]        # 0x14003c1d0
   14000eb96:	mov    rcx,rbx
   14000eb99:	mov    QWORD PTR [rip+0x31508],rax        # 0x1400400a8
   14000eba0:	call   QWORD PTR [rip+0x1d5d2]        # 0x14002c178
   14000eba6:	lea    rdx,[rip+0x20e4b]        # 0x14002f9f8
   14000ebad:	xor    rax,QWORD PTR [rip+0x2d61c]        # 0x14003c1d0
   14000ebb4:	mov    rcx,rbx
   14000ebb7:	mov    QWORD PTR [rip+0x314f2],rax        # 0x1400400b0
   14000ebbe:	call   QWORD PTR [rip+0x1d5b4]        # 0x14002c178
   14000ebc4:	lea    rdx,[rip+0x20e45]        # 0x14002fa10
   14000ebcb:	xor    rax,QWORD PTR [rip+0x2d5fe]        # 0x14003c1d0
   14000ebd2:	mov    rcx,rbx
   14000ebd5:	mov    QWORD PTR [rip+0x314dc],rax        # 0x1400400b8
   14000ebdc:	call   QWORD PTR [rip+0x1d596]        # 0x14002c178
   14000ebe2:	lea    rdx,[rip+0x20e37]        # 0x14002fa20
   14000ebe9:	xor    rax,QWORD PTR [rip+0x2d5e0]        # 0x14003c1d0
   14000ebf0:	mov    rcx,rbx
   14000ebf3:	mov    QWORD PTR [rip+0x314c6],rax        # 0x1400400c0
   14000ebfa:	call   QWORD PTR [rip+0x1d578]        # 0x14002c178
   14000ec00:	lea    rdx,[rip+0x20e31]        # 0x14002fa38
   14000ec07:	xor    rax,QWORD PTR [rip+0x2d5c2]        # 0x14003c1d0
   14000ec0e:	mov    rcx,rbx
   14000ec11:	mov    QWORD PTR [rip+0x314b0],rax        # 0x1400400c8
   14000ec18:	call   QWORD PTR [rip+0x1d55a]        # 0x14002c178
   14000ec1e:	lea    rdx,[rip+0x20e23]        # 0x14002fa48
   14000ec25:	xor    rax,QWORD PTR [rip+0x2d5a4]        # 0x14003c1d0
   14000ec2c:	mov    rcx,rbx
   14000ec2f:	mov    QWORD PTR [rip+0x3149a],rax        # 0x1400400d0
   14000ec36:	call   QWORD PTR [rip+0x1d53c]        # 0x14002c178
   14000ec3c:	xor    rax,QWORD PTR [rip+0x2d58d]        # 0x14003c1d0
   14000ec43:	lea    rdx,[rip+0x20e1e]        # 0x14002fa68
   14000ec4a:	mov    rcx,rbx
   14000ec4d:	mov    QWORD PTR [rip+0x31484],rax        # 0x1400400d8
   14000ec54:	call   QWORD PTR [rip+0x1d51e]        # 0x14002c178
   14000ec5a:	xor    rax,QWORD PTR [rip+0x2d56f]        # 0x14003c1d0
   14000ec61:	mov    QWORD PTR [rip+0x31478],rax        # 0x1400400e0
   14000ec68:	add    rsp,0x20
   14000ec6c:	pop    rbx
   14000ec6d:	ret    
   14000ec6e:	int3   
   14000ec6f:	int3   
   14000ec70:	sub    rsp,0x28
   14000ec74:	mov    rax,QWORD PTR [rip+0x31465]        # 0x1400400e0
   14000ec7b:	xor    rax,QWORD PTR [rip+0x2d54e]        # 0x14003c1d0
   14000ec82:	je     0x14000ec8b
   14000ec84:	add    rsp,0x28
   14000ec88:	rex.W jmp rax
   14000ec8b:	mov    ecx,0x78
   14000ec90:	call   QWORD PTR [rip+0x1d512]        # 0x14002c1a8
   14000ec96:	xor    eax,eax
   14000ec98:	add    rsp,0x28
   14000ec9c:	ret    
   14000ec9d:	int3   
   14000ec9e:	int3   
   14000ec9f:	int3   
   14000eca0:	mov    rax,QWORD PTR [rip+0x31371]        # 0x140040018
   14000eca7:	xor    rax,QWORD PTR [rip+0x2d522]        # 0x14003c1d0
   14000ecae:	je     0x14000ecb3
   14000ecb0:	rex.W jmp rax
   14000ecb3:	xor    eax,eax
   14000ecb5:	ret    
   14000ecb6:	int3   
   14000ecb7:	int3   
   14000ecb8:	sub    rsp,0x28
   14000ecbc:	mov    rax,QWORD PTR [rip+0x31365]        # 0x140040028
   14000ecc3:	xor    rax,QWORD PTR [rip+0x2d506]        # 0x14003c1d0
   14000ecca:	je     0x14000ecce
   14000eccc:	call   rax
   14000ecce:	add    rsp,0x28
   14000ecd2:	ret    
   14000ecd3:	int3   
   14000ecd4:	sub    rsp,0x28
   14000ecd8:	mov    rax,QWORD PTR [rip+0x31369]        # 0x140040048
   14000ecdf:	xor    rax,QWORD PTR [rip+0x2d4ea]        # 0x14003c1d0
   14000ece6:	je     0x14000ecea
   14000ece8:	call   rax
   14000ecea:	add    rsp,0x28
   14000ecee:	ret    
   14000ecef:	int3   
   14000ecf0:	rex.W jmp QWORD PTR [rip+0x1d549]        # 0x14002c240
   14000ecf7:	int3   
   14000ecf8:	rex.W jmp QWORD PTR [rip+0x1d559]        # 0x14002c258
   14000ecff:	int3   
   14000ed00:	rex push rbx
   14000ed02:	sub    rsp,0x20
   14000ed06:	mov    ebx,ecx
   14000ed08:	call   QWORD PTR [rip+0x1d552]        # 0x14002c260
   14000ed0e:	mov    edx,ebx
   14000ed10:	mov    rcx,rax
   14000ed13:	add    rsp,0x20
   14000ed17:	pop    rbx
   14000ed18:	rex.W jmp QWORD PTR [rip+0x1d549]        # 0x14002c268
   14000ed1f:	int3   
   14000ed20:	rex push rbx
   14000ed22:	sub    rsp,0x20
   14000ed26:	mov    rbx,rcx
   14000ed29:	xor    ecx,ecx
   14000ed2b:	call   QWORD PTR [rip+0x1d50f]        # 0x14002c240
   14000ed31:	mov    rcx,rbx
   14000ed34:	add    rsp,0x20
   14000ed38:	pop    rbx
   14000ed39:	rex.W jmp QWORD PTR [rip+0x1d4f8]        # 0x14002c238
   14000ed40:	sub    rsp,0x28
   14000ed44:	mov    rax,QWORD PTR [rip+0x312e5]        # 0x140040030
   14000ed4b:	xor    rax,QWORD PTR [rip+0x2d47e]        # 0x14003c1d0
   14000ed52:	je     0x14000ed56
   14000ed54:	call   rax
   14000ed56:	add    rsp,0x28
   14000ed5a:	ret    
   14000ed5b:	int3   
   14000ed5c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ed61:	push   rdi
   14000ed62:	sub    rsp,0x20
   14000ed66:	xor    edi,edi
   14000ed68:	cmp    DWORD PTR [rip+0x3139a],edi        # 0x140040108
   14000ed6e:	jne    0x14000ed75
   14000ed70:	call   0x140010074
   14000ed75:	mov    rbx,QWORD PTR [rip+0x31394]        # 0x140040110
   14000ed7c:	lea    rax,[rip+0x20d01]        # 0x14002fa84
   14000ed83:	test   rbx,rbx
   14000ed86:	cmove  rbx,rax
   14000ed8a:	cmp    BYTE PTR [rbx],0x20
   14000ed8d:	ja     0x14000ed98
   14000ed8f:	cmp    BYTE PTR [rbx],0x0
   14000ed92:	je     0x14000edc7
   14000ed94:	test   edi,edi
   14000ed96:	je     0x14000edc1
   14000ed98:	cmp    BYTE PTR [rbx],0x22
   14000ed9b:	jne    0x14000eda6
   14000ed9d:	xor    eax,eax
   14000ed9f:	test   edi,edi
   14000eda1:	sete   al
   14000eda4:	mov    edi,eax
   14000eda6:	movzx  ecx,BYTE PTR [rbx]
   14000eda9:	call   0x14001c300
   14000edae:	test   eax,eax
   14000edb0:	je     0x14000edb5
   14000edb2:	inc    rbx
   14000edb5:	inc    rbx
   14000edb8:	jmp    0x14000ed8a
   14000edba:	cmp    al,0x20
   14000edbc:	ja     0x14000edc7
   14000edbe:	inc    rbx
   14000edc1:	mov    al,BYTE PTR [rbx]
   14000edc3:	test   al,al
   14000edc5:	jne    0x14000edba
   14000edc7:	mov    rax,rbx
   14000edca:	mov    rbx,QWORD PTR [rsp+0x30]
   14000edcf:	add    rsp,0x20
   14000edd3:	pop    rdi
   14000edd4:	ret    
   14000edd5:	int3   
   14000edd6:	int3   
   14000edd7:	int3   
   14000edd8:	rex push rbx
   14000edda:	sub    rsp,0x20
   14000edde:	test   rcx,rcx
   14000ede1:	je     0x14000edf0
   14000ede3:	test   rdx,rdx
   14000ede6:	je     0x14000edf0
   14000ede8:	test   r8,r8
   14000edeb:	jne    0x14000ee09
   14000eded:	mov    BYTE PTR [rcx],r8b
   14000edf0:	call   0x140009cb4
   14000edf5:	mov    ebx,0x16
   14000edfa:	mov    DWORD PTR [rax],ebx
   14000edfc:	call   0x140008d58
   14000ee01:	mov    eax,ebx
   14000ee03:	add    rsp,0x20
   14000ee07:	pop    rbx
   14000ee08:	ret    
   14000ee09:	mov    r9,rcx
   14000ee0c:	sub    r9,r8
   14000ee0f:	mov    al,BYTE PTR [r8]
   14000ee12:	mov    BYTE PTR [r9+r8*1],al
   14000ee16:	inc    r8
   14000ee19:	test   al,al
   14000ee1b:	je     0x14000ee22
   14000ee1d:	dec    rdx
   14000ee20:	jne    0x14000ee0f
   14000ee22:	test   rdx,rdx
   14000ee25:	jne    0x14000ee35
   14000ee27:	mov    BYTE PTR [rcx],dl
   14000ee29:	call   0x140009cb4
   14000ee2e:	mov    ebx,0x22
   14000ee33:	jmp    0x14000edfa
   14000ee35:	xor    eax,eax
   14000ee37:	jmp    0x14000ee03
   14000ee39:	int3   
   14000ee3a:	int3   
   14000ee3b:	int3   
   14000ee3c:	sub    rsp,0x28
   14000ee40:	call   0x14000a3ec
   14000ee45:	add    rax,0xb0
   14000ee4b:	add    rsp,0x28
   14000ee4f:	ret    
   14000ee50:	mov    rcx,QWORD PTR [rip+0x2f819]        # 0x14003e670
   14000ee57:	rex.W jmp QWORD PTR [rip+0x1d2ba]        # 0x14002c118
   14000ee5e:	int3   
   14000ee5f:	int3   
   14000ee60:	sub    rsp,0x28
   14000ee64:	call   0x14000a3ec
   14000ee69:	add    rax,0xa8
   14000ee6f:	add    rsp,0x28
   14000ee73:	ret    
   14000ee74:	mov    QWORD PTR [rip+0x2f7e5],rcx        # 0x14003e660
   14000ee7b:	mov    QWORD PTR [rip+0x2f7e6],rcx        # 0x14003e668
   14000ee82:	mov    QWORD PTR [rip+0x2f7e7],rcx        # 0x14003e670
   14000ee89:	mov    QWORD PTR [rip+0x2f7e8],rcx        # 0x14003e678
   14000ee90:	ret    
   14000ee91:	int3   
   14000ee92:	int3   
   14000ee93:	int3   
   14000ee94:	mov    QWORD PTR [rsp+0x8],rbx
   14000ee99:	mov    QWORD PTR [rsp+0x10],rsi
   14000ee9e:	push   rdi
   14000ee9f:	sub    rsp,0x20
   14000eea3:	mov    ebx,ecx
   14000eea5:	xor    ecx,ecx
   14000eea7:	call   0x14000fc2c
   14000eeac:	nop
   14000eead:	test   ebx,ebx
   14000eeaf:	jne    0x14000eeca
   14000eeb1:	lea    rdi,[rip+0x2f7a8]        # 0x14003e660
   14000eeb8:	mov    rcx,QWORD PTR [rip+0x2f7a1]        # 0x14003e660
   14000eebf:	call   QWORD PTR [rip+0x1d253]        # 0x14002c118
   14000eec5:	lea    esi,[rbx+0x2]
   14000eec8:	jmp    0x14000eee3
   14000eeca:	lea    rdi,[rip+0x2f797]        # 0x14003e668
   14000eed1:	mov    rcx,QWORD PTR [rip+0x2f790]        # 0x14003e668
   14000eed8:	call   QWORD PTR [rip+0x1d23a]        # 0x14002c118
   14000eede:	mov    esi,0x15
   14000eee3:	mov    rbx,rax
   14000eee6:	cmp    rax,0x2
   14000eeea:	jb     0x14000eef7
   14000eeec:	xor    ecx,ecx
   14000eeee:	call   QWORD PTR [rip+0x1d21c]        # 0x14002c110
   14000eef4:	mov    QWORD PTR [rdi],rax
   14000eef7:	xor    ecx,ecx
   14000eef9:	call   0x14000fe48
   14000eefe:	test   rbx,rbx
   14000ef01:	jne    0x14000ef07
   14000ef03:	xor    eax,eax
   14000ef05:	jmp    0x14000ef16
   14000ef07:	cmp    rbx,0x1
   14000ef0b:	je     0x14000ef11
   14000ef0d:	mov    ecx,esi
   14000ef0f:	call   rbx
   14000ef11:	mov    eax,0x1
   14000ef16:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ef1b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ef20:	add    rsp,0x20
   14000ef24:	pop    rdi
   14000ef25:	ret    
   14000ef26:	int3   
   14000ef27:	int3   
   14000ef28:	mov    QWORD PTR [rsp+0x18],rbx
   14000ef2d:	mov    QWORD PTR [rsp+0x20],rsi
   14000ef32:	push   rdi
   14000ef33:	push   r12
   14000ef35:	push   r13
   14000ef37:	push   r14
   14000ef39:	push   r15
   14000ef3b:	sub    rsp,0x30
   14000ef3f:	mov    ebx,ecx
   14000ef41:	xor    r13d,r13d
   14000ef44:	and    DWORD PTR [rsp+0x68],r13d
   14000ef49:	xor    edi,edi
   14000ef4b:	mov    DWORD PTR [rsp+0x60],edi
   14000ef4f:	xor    esi,esi
   14000ef51:	mov    edx,ecx
   14000ef53:	sub    edx,0x2
   14000ef56:	je     0x14000f020
   14000ef5c:	sub    edx,0x2
   14000ef5f:	je     0x14000efc3
   14000ef61:	sub    edx,0x2
   14000ef64:	je     0x14000efb3
   14000ef66:	sub    edx,0x2
   14000ef69:	je     0x14000efc3
   14000ef6b:	sub    edx,0x3
   14000ef6e:	je     0x14000efc3
   14000ef70:	sub    edx,0x4
   14000ef73:	je     0x14000efa3
   14000ef75:	sub    edx,0x6
   14000ef78:	je     0x14000ef90
   14000ef7a:	dec    edx
   14000ef7c:	je     0x14000efb3
   14000ef7e:	call   0x140009cb4
   14000ef83:	mov    DWORD PTR [rax],0x16
   14000ef89:	call   0x140008d58
   14000ef8e:	jmp    0x14000efd0
   14000ef90:	lea    r14,[rip+0x2f6d1]        # 0x14003e668
   14000ef97:	mov    rcx,QWORD PTR [rip+0x2f6ca]        # 0x14003e668
   14000ef9e:	jmp    0x14000f02e
   14000efa3:	lea    r14,[rip+0x2f6ce]        # 0x14003e678
   14000efaa:	mov    rcx,QWORD PTR [rip+0x2f6c7]        # 0x14003e678
   14000efb1:	jmp    0x14000f02e
   14000efb3:	lea    r14,[rip+0x2f6b6]        # 0x14003e670
   14000efba:	mov    rcx,QWORD PTR [rip+0x2f6af]        # 0x14003e670
   14000efc1:	jmp    0x14000f02e
   14000efc3:	call   0x14000a410
   14000efc8:	mov    rsi,rax
   14000efcb:	test   rax,rax
   14000efce:	jne    0x14000efd8
   14000efd0:	or     eax,0xffffffff
   14000efd3:	jmp    0x14000f143
   14000efd8:	mov    rdx,QWORD PTR [rax+0xa0]
   14000efdf:	mov    rcx,rdx
   14000efe2:	movsxd r8,DWORD PTR [rip+0x1fbf7]        # 0x14002ebe0
   14000efe9:	cmp    DWORD PTR [rcx+0x4],ebx
   14000efec:	je     0x14000f001
   14000efee:	add    rcx,0x10
   14000eff2:	mov    rax,r8
   14000eff5:	shl    rax,0x4
   14000eff9:	add    rax,rdx
   14000effc:	cmp    rcx,rax
   14000efff:	jb     0x14000efe9
   14000f001:	mov    rax,r8
   14000f004:	shl    rax,0x4
   14000f008:	add    rax,rdx
   14000f00b:	cmp    rcx,rax
   14000f00e:	jae    0x14000f015
   14000f010:	cmp    DWORD PTR [rcx+0x4],ebx
   14000f013:	je     0x14000f017
   14000f015:	xor    ecx,ecx
   14000f017:	lea    r14,[rcx+0x8]
   14000f01b:	mov    r15,QWORD PTR [r14]
   14000f01e:	jmp    0x14000f040
   14000f020:	lea    r14,[rip+0x2f639]        # 0x14003e660
   14000f027:	mov    rcx,QWORD PTR [rip+0x2f632]        # 0x14003e660
   14000f02e:	mov    edi,0x1
   14000f033:	mov    DWORD PTR [rsp+0x60],edi
   14000f037:	call   QWORD PTR [rip+0x1d0db]        # 0x14002c118
   14000f03d:	mov    r15,rax
   14000f040:	cmp    r15,0x1
   14000f044:	jne    0x14000f04d
   14000f046:	xor    eax,eax
   14000f048:	jmp    0x14000f143
   14000f04d:	test   r15,r15
   14000f050:	jne    0x14000f05c
   14000f052:	lea    ecx,[r15+0x3]
   14000f056:	call   0x14000829c
   14000f05b:	int3   
   14000f05c:	test   edi,edi
   14000f05e:	je     0x14000f068
   14000f060:	xor    ecx,ecx
   14000f062:	call   0x14000fc2c
   14000f067:	nop
   14000f068:	mov    r12d,0x910
   14000f06e:	cmp    ebx,0xb
   14000f071:	ja     0x14000f0a6
   14000f073:	bt     r12d,ebx
   14000f077:	jae    0x14000f0a6
   14000f079:	mov    r13,QWORD PTR [rsi+0xa8]
   14000f080:	mov    QWORD PTR [rsp+0x28],r13
   14000f085:	and    QWORD PTR [rsi+0xa8],0x0
   14000f08d:	cmp    ebx,0x8
   14000f090:	jne    0x14000f0e4
   14000f092:	mov    eax,DWORD PTR [rsi+0xb0]
   14000f098:	mov    DWORD PTR [rsp+0x68],eax
   14000f09c:	mov    DWORD PTR [rsi+0xb0],0x8c
   14000f0a6:	cmp    ebx,0x8
   14000f0a9:	jne    0x14000f0e4
   14000f0ab:	mov    ecx,DWORD PTR [rip+0x1fb37]        # 0x14002ebe8
   14000f0b1:	mov    edx,ecx
   14000f0b3:	mov    DWORD PTR [rsp+0x20],ecx
   14000f0b7:	mov    eax,DWORD PTR [rip+0x1fb2f]        # 0x14002ebec
   14000f0bd:	add    ecx,eax
   14000f0bf:	cmp    edx,ecx
   14000f0c1:	jge    0x14000f0ef
   14000f0c3:	movsxd rcx,edx
   14000f0c6:	add    rcx,rcx
   14000f0c9:	mov    rax,QWORD PTR [rsi+0xa0]
   14000f0d0:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14000f0d6:	inc    edx
   14000f0d8:	mov    DWORD PTR [rsp+0x20],edx
   14000f0dc:	mov    ecx,DWORD PTR [rip+0x1fb06]        # 0x14002ebe8
   14000f0e2:	jmp    0x14000f0b7
   14000f0e4:	xor    ecx,ecx
   14000f0e6:	call   QWORD PTR [rip+0x1d024]        # 0x14002c110
   14000f0ec:	mov    QWORD PTR [r14],rax
   14000f0ef:	test   edi,edi
   14000f0f1:	je     0x14000f0fa
   14000f0f3:	xor    ecx,ecx
   14000f0f5:	call   0x14000fe48
   14000f0fa:	cmp    ebx,0x8
   14000f0fd:	jne    0x14000f10c
   14000f0ff:	mov    edx,DWORD PTR [rsi+0xb0]
   14000f105:	mov    ecx,ebx
   14000f107:	call   r15
   14000f10a:	jmp    0x14000f111
   14000f10c:	mov    ecx,ebx
   14000f10e:	call   r15
   14000f111:	cmp    ebx,0xb
   14000f114:	ja     0x14000f046
   14000f11a:	bt     r12d,ebx
   14000f11e:	jae    0x14000f046
   14000f124:	mov    QWORD PTR [rsi+0xa8],r13
   14000f12b:	cmp    ebx,0x8
   14000f12e:	jne    0x14000f046
   14000f134:	mov    eax,DWORD PTR [rsp+0x68]
   14000f138:	mov    DWORD PTR [rsi+0xb0],eax
   14000f13e:	jmp    0x14000f046
   14000f143:	mov    rbx,QWORD PTR [rsp+0x70]
   14000f148:	mov    rsi,QWORD PTR [rsp+0x78]
   14000f14d:	add    rsp,0x30
   14000f151:	pop    r15
   14000f153:	pop    r14
   14000f155:	pop    r13
   14000f157:	pop    r12
   14000f159:	pop    rdi
   14000f15a:	ret    
   14000f15b:	int3   
   14000f15c:	mov    r9d,ecx
   14000f15f:	movsxd rcx,DWORD PTR [rip+0x1fa7a]        # 0x14002ebe0
   14000f166:	mov    rax,rdx
   14000f169:	cmp    DWORD PTR [rax+0x4],r9d
   14000f16d:	je     0x14000f182
   14000f16f:	mov    r8,rcx
   14000f172:	add    rax,0x10
   14000f176:	shl    r8,0x4
   14000f17a:	add    r8,rdx
   14000f17d:	cmp    rax,r8
   14000f180:	jb     0x14000f169
   14000f182:	shl    rcx,0x4
   14000f186:	add    rcx,rdx
   14000f189:	cmp    rax,rcx
   14000f18c:	jae    0x14000f194
   14000f18e:	cmp    DWORD PTR [rax+0x4],r9d
   14000f192:	je     0x14000f196
   14000f194:	xor    eax,eax
   14000f196:	ret    
   14000f197:	int3   
   14000f198:	mov    QWORD PTR [rsp+0x8],rbx
   14000f19d:	mov    QWORD PTR [rsp+0x10],rsi
   14000f1a2:	mov    QWORD PTR [rsp+0x18],rdi
   14000f1a7:	push   r14
   14000f1a9:	sub    rsp,0x20
   14000f1ad:	mov    rsi,rdx
   14000f1b0:	mov    edi,ecx
   14000f1b2:	xor    r14d,r14d
   14000f1b5:	xor    ebx,ebx
   14000f1b7:	lea    rax,[rdx-0x3]
   14000f1bb:	cmp    rax,0x1
   14000f1bf:	jbe    0x14000f3ea
   14000f1c5:	cmp    ecx,0x16
   14000f1c8:	ja     0x14000f304
   14000f1ce:	mov    eax,0x608044
   14000f1d3:	bt     eax,ecx
   14000f1d6:	jae    0x14000f304
   14000f1dc:	xor    ecx,ecx
   14000f1de:	call   0x14000fc2c
   14000f1e3:	nop
   14000f1e4:	cmp    edi,0x2
   14000f1e7:	je     0x14000f1ee
   14000f1e9:	cmp    edi,0x15
   14000f1ec:	jne    0x14000f22b
   14000f1ee:	cmp    DWORD PTR [rip+0x2f48b],0x0        # 0x14003e680
   14000f1f5:	jne    0x14000f22b
   14000f1f7:	mov    edx,0x1
   14000f1fc:	lea    rcx,[rip+0xfffffffffffffc91]        # 0x14000ee94
   14000f203:	call   QWORD PTR [rip+0x1ceff]        # 0x14002c108
   14000f209:	cmp    eax,0x1
   14000f20c:	jne    0x14000f216
   14000f20e:	mov    DWORD PTR [rip+0x2f46c],eax        # 0x14003e680
   14000f214:	jmp    0x14000f22b
   14000f216:	call   0x140009c44
   14000f21b:	mov    rbx,rax
   14000f21e:	call   QWORD PTR [rip+0x1cf2c]        # 0x14002c150
   14000f224:	mov    DWORD PTR [rbx],eax
   14000f226:	mov    ebx,0x1
   14000f22b:	mov    ecx,edi
   14000f22d:	sub    ecx,0x2
   14000f230:	je     0x14000f2ca
   14000f236:	sub    ecx,0x4
   14000f239:	je     0x14000f2a2
   14000f23b:	sub    ecx,0x9
   14000f23e:	je     0x14000f27a
   14000f240:	sub    ecx,0x6
   14000f243:	je     0x14000f24e
   14000f245:	dec    ecx
   14000f247:	je     0x14000f2a2
   14000f249:	jmp    0x14000f2f0
   14000f24e:	mov    rcx,QWORD PTR [rip+0x2f413]        # 0x14003e668
   14000f255:	call   QWORD PTR [rip+0x1cebd]        # 0x14002c118
   14000f25b:	mov    r14,rax
   14000f25e:	cmp    rsi,0x2
   14000f262:	je     0x14000f2f0
   14000f268:	mov    rcx,rsi
   14000f26b:	call   QWORD PTR [rip+0x1ce9f]        # 0x14002c110
   14000f271:	mov    QWORD PTR [rip+0x2f3f0],rax        # 0x14003e668
   14000f278:	jmp    0x14000f2f0
   14000f27a:	mov    rcx,QWORD PTR [rip+0x2f3f7]        # 0x14003e678
   14000f281:	call   QWORD PTR [rip+0x1ce91]        # 0x14002c118
   14000f287:	mov    r14,rax
   14000f28a:	cmp    rsi,0x2
   14000f28e:	je     0x14000f2f0
   14000f290:	mov    rcx,rsi
   14000f293:	call   QWORD PTR [rip+0x1ce77]        # 0x14002c110
   14000f299:	mov    QWORD PTR [rip+0x2f3d8],rax        # 0x14003e678
   14000f2a0:	jmp    0x14000f2f0
   14000f2a2:	mov    rcx,QWORD PTR [rip+0x2f3c7]        # 0x14003e670
   14000f2a9:	call   QWORD PTR [rip+0x1ce69]        # 0x14002c118
   14000f2af:	mov    r14,rax
   14000f2b2:	cmp    rsi,0x2
   14000f2b6:	je     0x14000f2f0
   14000f2b8:	mov    rcx,rsi
   14000f2bb:	call   QWORD PTR [rip+0x1ce4f]        # 0x14002c110
   14000f2c1:	mov    QWORD PTR [rip+0x2f3a8],rax        # 0x14003e670
   14000f2c8:	jmp    0x14000f2f0
   14000f2ca:	mov    rcx,QWORD PTR [rip+0x2f38f]        # 0x14003e660
   14000f2d1:	call   QWORD PTR [rip+0x1ce41]        # 0x14002c118
   14000f2d7:	mov    r14,rax
   14000f2da:	cmp    rsi,0x2
   14000f2de:	je     0x14000f2f0
   14000f2e0:	mov    rcx,rsi
   14000f2e3:	call   QWORD PTR [rip+0x1ce27]        # 0x14002c110
   14000f2e9:	mov    QWORD PTR [rip+0x2f370],rax        # 0x14003e660
   14000f2f0:	xor    ecx,ecx
   14000f2f2:	call   0x14000fe48
   14000f2f7:	test   ebx,ebx
   14000f2f9:	jne    0x14000f3ea
   14000f2ff:	jmp    0x14000f3e5
   14000f304:	cmp    ecx,0xb
   14000f307:	ja     0x14000f3ea
   14000f30d:	mov    eax,0x910
   14000f312:	bt     eax,ecx
   14000f315:	jae    0x14000f3ea
   14000f31b:	call   0x14000a410
   14000f320:	mov    rbx,rax
   14000f323:	test   rax,rax
   14000f326:	je     0x14000f3ea
   14000f32c:	lea    r14,[rip+0x1f7ed]        # 0x14002eb20
   14000f333:	cmp    QWORD PTR [rax+0xa0],r14
   14000f33a:	jne    0x14000f36a
   14000f33c:	movsxd rcx,DWORD PTR [rip+0x1f8a1]        # 0x14002ebe4
   14000f343:	call   0x140008684
   14000f348:	mov    QWORD PTR [rbx+0xa0],rax
   14000f34f:	test   rax,rax
   14000f352:	je     0x14000f3ea
   14000f358:	movsxd r8,DWORD PTR [rip+0x1f885]        # 0x14002ebe4
   14000f35f:	mov    rdx,r14
   14000f362:	mov    rcx,rax
   14000f365:	call   0x1400059f0
   14000f36a:	mov    rdx,QWORD PTR [rbx+0xa0]
   14000f371:	mov    rcx,rdx
   14000f374:	movsxd r8,DWORD PTR [rip+0x1f865]        # 0x14002ebe0
   14000f37b:	cmp    DWORD PTR [rcx+0x4],edi
   14000f37e:	je     0x14000f393
   14000f380:	add    rcx,0x10
   14000f384:	mov    rax,r8
   14000f387:	shl    rax,0x4
   14000f38b:	add    rax,rdx
   14000f38e:	cmp    rcx,rax
   14000f391:	jb     0x14000f37b
   14000f393:	mov    rax,r8
   14000f396:	shl    rax,0x4
   14000f39a:	add    rax,rdx
   14000f39d:	cmp    rcx,rax
   14000f3a0:	jae    0x14000f3a7
   14000f3a2:	cmp    DWORD PTR [rcx+0x4],edi
   14000f3a5:	je     0x14000f3a9
   14000f3a7:	xor    ecx,ecx
   14000f3a9:	test   rcx,rcx
   14000f3ac:	je     0x14000f3ea
   14000f3ae:	mov    r14,QWORD PTR [rcx+0x8]
   14000f3b2:	cmp    rsi,0x2
   14000f3b6:	je     0x14000f3e5
   14000f3b8:	lea    rdx,[rcx+0x4]
   14000f3bc:	jmp    0x14000f3e1
   14000f3be:	mov    QWORD PTR [rdx+0x4],rsi
   14000f3c2:	lea    rdx,[rdx+0x10]
   14000f3c6:	movsxd rcx,DWORD PTR [rip+0x1f813]        # 0x14002ebe0
   14000f3cd:	shl    rcx,0x4
   14000f3d1:	add    rcx,QWORD PTR [rbx+0xa0]
   14000f3d8:	lea    rax,[rdx-0x4]
   14000f3dc:	cmp    rax,rcx
   14000f3df:	jae    0x14000f3e5
   14000f3e1:	cmp    DWORD PTR [rdx],edi
   14000f3e3:	je     0x14000f3be
   14000f3e5:	mov    rax,r14
   14000f3e8:	jmp    0x14000f40d
   14000f3ea:	cmp    edi,0x11
   14000f3ed:	ja     0x14000f3f9
   14000f3ef:	mov    eax,0x3200a
   14000f3f4:	bt     eax,edi
   14000f3f7:	jb     0x14000f409
   14000f3f9:	call   0x140009cb4
   14000f3fe:	mov    DWORD PTR [rax],0x16
   14000f404:	call   0x140008d58
   14000f409:	or     rax,0xffffffffffffffff
   14000f40d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f412:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f417:	mov    rdi,QWORD PTR [rsp+0x40]
   14000f41c:	add    rsp,0x20
   14000f420:	pop    r14
   14000f422:	ret    
   14000f423:	int3   
   14000f424:	rex push rbx
   14000f426:	sub    rsp,0x20
   14000f42a:	xor    ebx,ebx
   14000f42c:	test   r9,r9
   14000f42f:	jne    0x14000f43f
   14000f431:	test   rcx,rcx
   14000f434:	jne    0x14000f444
   14000f436:	test   rdx,rdx
   14000f439:	jne    0x14000f459
   14000f43b:	xor    eax,eax
   14000f43d:	jmp    0x14000f46c
   14000f43f:	test   rcx,rcx
   14000f442:	je     0x14000f459
   14000f444:	test   rdx,rdx
   14000f447:	je     0x14000f459
   14000f449:	test   r9,r9
   14000f44c:	jne    0x14000f452
   14000f44e:	mov    BYTE PTR [rcx],bl
   14000f450:	jmp    0x14000f43b
   14000f452:	test   r8,r8
   14000f455:	jne    0x14000f472
   14000f457:	mov    BYTE PTR [rcx],bl
   14000f459:	call   0x140009cb4
   14000f45e:	mov    ebx,0x16
   14000f463:	mov    DWORD PTR [rax],ebx
   14000f465:	call   0x140008d58
   14000f46a:	mov    eax,ebx
   14000f46c:	add    rsp,0x20
   14000f470:	pop    rbx
   14000f471:	ret    
   14000f472:	mov    r11,rcx
   14000f475:	mov    r10,rdx
   14000f478:	cmp    r9,0xffffffffffffffff
   14000f47c:	jne    0x14000f496
   14000f47e:	sub    r11,r8
   14000f481:	mov    al,BYTE PTR [r8]
   14000f484:	mov    BYTE PTR [r11+r8*1],al
   14000f488:	inc    r8
   14000f48b:	test   al,al
   14000f48d:	je     0x14000f4b9
   14000f48f:	dec    r10
   14000f492:	jne    0x14000f481
   14000f494:	jmp    0x14000f4b9
   14000f496:	sub    r8,rcx
   14000f499:	mov    al,BYTE PTR [r8+r11*1]
   14000f49d:	mov    BYTE PTR [r11],al
   14000f4a0:	inc    r11
   14000f4a3:	test   al,al
   14000f4a5:	je     0x14000f4b1
   14000f4a7:	dec    r10
   14000f4aa:	je     0x14000f4b1
   14000f4ac:	dec    r9
   14000f4af:	jne    0x14000f499
   14000f4b1:	test   r9,r9
   14000f4b4:	jne    0x14000f4b9
   14000f4b6:	mov    BYTE PTR [r11],bl
   14000f4b9:	test   r10,r10
   14000f4bc:	jne    0x14000f43b
   14000f4c2:	cmp    r9,0xffffffffffffffff
   14000f4c6:	jne    0x14000f4d2
   14000f4c8:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   14000f4cc:	lea    eax,[r10+0x50]
   14000f4d0:	jmp    0x14000f46c
   14000f4d2:	mov    BYTE PTR [rcx],bl
   14000f4d4:	call   0x140009cb4
   14000f4d9:	mov    ebx,0x22
   14000f4de:	jmp    0x14000f463
   14000f4e0:	rex push rbp
   14000f4e2:	push   r12
   14000f4e4:	push   r13
   14000f4e6:	push   r14
   14000f4e8:	push   r15
   14000f4ea:	sub    rsp,0x50
   14000f4ee:	lea    rbp,[rsp+0x40]
   14000f4f3:	mov    QWORD PTR [rbp+0x40],rbx
   14000f4f7:	mov    QWORD PTR [rbp+0x48],rsi
   14000f4fb:	mov    QWORD PTR [rbp+0x50],rdi
   14000f4ff:	mov    rax,QWORD PTR [rip+0x2ccca]        # 0x14003c1d0
   14000f506:	xor    rax,rbp
   14000f509:	mov    QWORD PTR [rbp+0x0],rax
   14000f50d:	mov    rax,QWORD PTR [rcx]
   14000f510:	mov    r15d,r8d
   14000f513:	mov    r12,rdx
   14000f516:	mov    r14d,DWORD PTR [rax+0x4]
   14000f51a:	mov    r13,r9
   14000f51d:	xor    r8d,r8d
   14000f520:	xor    r9d,r9d
   14000f523:	mov    edx,r15d
   14000f526:	mov    rcx,r12
   14000f529:	xor    edi,edi
   14000f52b:	call   0x14000fa04
   14000f530:	movsxd rsi,eax
   14000f533:	test   eax,eax
   14000f535:	jne    0x14000f53e
   14000f537:	xor    eax,eax
   14000f539:	jmp    0x14000f624
   14000f53e:	jle    0x14000f5b7
   14000f540:	xor    edx,edx
   14000f542:	lea    rax,[rdx-0x20]
   14000f546:	div    rsi
   14000f549:	cmp    rax,0x2
   14000f54d:	jb     0x14000f5b7
   14000f54f:	lea    rcx,[rsi+rsi*1]
   14000f553:	lea    rax,[rcx+0x10]
   14000f557:	cmp    rax,rcx
   14000f55a:	jbe    0x14000f5b7
   14000f55c:	lea    rcx,[rsi*2+0x10]
   14000f564:	cmp    rcx,0x400
   14000f56b:	ja     0x14000f59e
   14000f56d:	lea    rax,[rcx+0xf]
   14000f571:	cmp    rax,rcx
   14000f574:	ja     0x14000f580
   14000f576:	movabs rax,0xffffffffffffff0
   14000f580:	and    rax,0xfffffffffffffff0
   14000f584:	call   0x140006e30
   14000f589:	sub    rsp,rax
   14000f58c:	lea    rbx,[rsp+0x40]
   14000f591:	test   rbx,rbx
   14000f594:	je     0x14000f537
   14000f596:	mov    DWORD PTR [rbx],0xcccc
   14000f59c:	jmp    0x14000f5b1
   14000f59e:	call   0x140007c64
   14000f5a3:	mov    rbx,rax
   14000f5a6:	test   rax,rax
   14000f5a9:	je     0x14000f5ba
   14000f5ab:	mov    DWORD PTR [rax],0xdddd
   14000f5b1:	add    rbx,0x10
   14000f5b5:	jmp    0x14000f5ba
   14000f5b7:	mov    rbx,rdi
   14000f5ba:	test   rbx,rbx
   14000f5bd:	je     0x14000f537
   14000f5c3:	mov    r9d,esi
   14000f5c6:	mov    r8,rbx
   14000f5c9:	mov    edx,r15d
   14000f5cc:	mov    rcx,r12
   14000f5cf:	call   0x14000fa04
   14000f5d4:	test   eax,eax
   14000f5d6:	je     0x14000f611
   14000f5d8:	mov    eax,DWORD PTR [rbp+0x60]
   14000f5db:	or     r9d,0xffffffff
   14000f5df:	xor    edx,edx
   14000f5e1:	mov    QWORD PTR [rsp+0x38],rdi
   14000f5e6:	mov    r8,rbx
   14000f5e9:	mov    ecx,r14d
   14000f5ec:	mov    QWORD PTR [rsp+0x30],rdi
   14000f5f1:	test   eax,eax
   14000f5f3:	jne    0x14000f600
   14000f5f5:	mov    DWORD PTR [rsp+0x28],edi
   14000f5f9:	mov    QWORD PTR [rsp+0x20],rdi
   14000f5fe:	jmp    0x14000f609
   14000f600:	mov    DWORD PTR [rsp+0x28],eax
   14000f604:	mov    QWORD PTR [rsp+0x20],r13
   14000f609:	call   QWORD PTR [rip+0x1cb81]        # 0x14002c190
   14000f60f:	mov    edi,eax
   14000f611:	lea    rcx,[rbx-0x10]
   14000f615:	cmp    DWORD PTR [rcx],0xdddd
   14000f61b:	jne    0x14000f622
   14000f61d:	call   0x140007dc0
   14000f622:	mov    eax,edi
   14000f624:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f628:	xor    rcx,rbp
   14000f62b:	call   0x14000c380
   14000f630:	mov    rbx,QWORD PTR [rbp+0x40]
   14000f634:	mov    rsi,QWORD PTR [rbp+0x48]
   14000f638:	mov    rdi,QWORD PTR [rbp+0x50]
   14000f63c:	lea    rsp,[rbp+0x10]
   14000f640:	pop    r15
   14000f642:	pop    r14
   14000f644:	pop    r13
   14000f646:	pop    r12
   14000f648:	pop    rbp
   14000f649:	ret    
   14000f64a:	int3   
   14000f64b:	int3   
   14000f64c:	xor    eax,eax
   14000f64e:	lea    rdx,[rcx+0x10]
   14000f652:	cmp    rdx,rcx
   14000f655:	seta   al
   14000f658:	ret    
   14000f659:	int3   
   14000f65a:	int3   
   14000f65b:	int3   
   14000f65c:	test   rcx,rcx
   14000f65f:	je     0x14000f667
   14000f661:	mov    DWORD PTR [rcx],edx
   14000f663:	add    rcx,0x10
   14000f667:	mov    rax,rcx
   14000f66a:	ret    
   14000f66b:	int3   
   14000f66c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f671:	mov    QWORD PTR [rsp+0x10],rsi
   14000f676:	push   rdi
   14000f677:	sub    rsp,0x50
   14000f67b:	mov    rsi,rdx
   14000f67e:	mov    rdx,rcx
   14000f681:	lea    rcx,[rsp+0x30]
   14000f686:	mov    rbx,r9
   14000f689:	mov    edi,r8d
   14000f68c:	call   0x140008fac
   14000f691:	mov    eax,DWORD PTR [rsp+0x80]
   14000f698:	lea    rcx,[rsp+0x30]
   14000f69d:	mov    r9,rbx
   14000f6a0:	mov    r8d,edi
   14000f6a3:	mov    rdx,rsi
   14000f6a6:	mov    DWORD PTR [rsp+0x20],eax
   14000f6aa:	call   0x14000f4e0
   14000f6af:	cmp    BYTE PTR [rsp+0x48],0x0
   14000f6b4:	je     0x14000f6c2
   14000f6b6:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f6bb:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000f6c2:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f6c7:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f6cc:	add    rsp,0x50
   14000f6d0:	pop    rdi
   14000f6d1:	ret    
   14000f6d2:	int3   
   14000f6d3:	int3   
   14000f6d4:	sub    rsp,0x28
   14000f6d8:	test   rcx,rcx
   14000f6db:	je     0x14000f6ee
   14000f6dd:	sub    rcx,0x10
   14000f6e1:	cmp    DWORD PTR [rcx],0xdddd
   14000f6e7:	jne    0x14000f6ee
   14000f6e9:	call   0x140007dc0
   14000f6ee:	add    rsp,0x28
   14000f6f2:	ret    
   14000f6f3:	int3   
   14000f6f4:	mov    r10d,ecx
   14000f6f7:	xor    r8d,r8d
   14000f6fa:	mov    r9d,0xe3
   14000f700:	lea    eax,[r9+r8*1]
   14000f704:	lea    r11,[rip+0x20385]        # 0x14002fa90
   14000f70b:	mov    ecx,r10d
   14000f70e:	cdq    
   14000f70f:	sub    eax,edx
   14000f711:	sar    eax,1
   14000f713:	movsxd rdx,eax
   14000f716:	shl    rdx,0x4
   14000f71a:	sub    ecx,DWORD PTR [rdx+r11*1]
   14000f71e:	je     0x14000f736
   14000f720:	test   ecx,ecx
   14000f722:	jns    0x14000f72a
   14000f724:	lea    r9d,[rax-0x1]
   14000f728:	jmp    0x14000f72e
   14000f72a:	lea    r8d,[rax+0x1]
   14000f72e:	cmp    r8d,r9d
   14000f731:	jle    0x14000f700
   14000f733:	or     eax,0xffffffff
   14000f736:	ret    
   14000f737:	int3   
   14000f738:	mov    rax,rsp
   14000f73b:	mov    QWORD PTR [rax+0x8],rbx
   14000f73f:	mov    QWORD PTR [rax+0x10],rbp
   14000f743:	mov    QWORD PTR [rax+0x18],rsi
   14000f747:	mov    QWORD PTR [rax+0x20],rdi
   14000f74b:	push   r14
   14000f74d:	sub    rsp,0x20
   14000f751:	mov    rbp,rcx
   14000f754:	xor    edi,edi
   14000f756:	mov    esi,0xe3
   14000f75b:	lea    r14,[rip+0x2116e]        # 0x1400308d0
   14000f762:	lea    eax,[rsi+rdi*1]
   14000f765:	mov    r8d,0x55
   14000f76b:	mov    rcx,rbp
   14000f76e:	cdq    
   14000f76f:	sub    eax,edx
   14000f771:	sar    eax,1
   14000f773:	movsxd rbx,eax
   14000f776:	mov    rdx,rbx
   14000f779:	add    rdx,rdx
   14000f77c:	mov    rdx,QWORD PTR [r14+rdx*8]
   14000f780:	call   0x14000fbd4
   14000f785:	test   eax,eax
   14000f787:	je     0x14000f79c
   14000f789:	jns    0x14000f790
   14000f78b:	lea    esi,[rbx-0x1]
   14000f78e:	jmp    0x14000f793
   14000f790:	lea    edi,[rbx+0x1]
   14000f793:	cmp    edi,esi
   14000f795:	jle    0x14000f762
   14000f797:	or     eax,0xffffffff
   14000f79a:	jmp    0x14000f7a7
   14000f79c:	mov    rax,rbx
   14000f79f:	add    rax,rax
   14000f7a2:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   14000f7a7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f7ac:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f7b1:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f7b6:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f7bb:	add    rsp,0x20
   14000f7bf:	pop    r14
   14000f7c1:	ret    
   14000f7c2:	int3   
   14000f7c3:	int3   
   14000f7c4:	mov    r11,rsp
   14000f7c7:	mov    QWORD PTR [r11+0x8],rbx
   14000f7cb:	mov    QWORD PTR [r11+0x10],rsi
   14000f7cf:	push   rdi
   14000f7d0:	sub    rsp,0x50
   14000f7d4:	mov    r10,QWORD PTR [rip+0x308ad]        # 0x140040088
   14000f7db:	mov    ebx,r9d
   14000f7de:	mov    rdi,r8
   14000f7e1:	xor    r10,QWORD PTR [rip+0x2c9e8]        # 0x14003c1d0
   14000f7e8:	mov    esi,edx
   14000f7ea:	je     0x14000f816
   14000f7ec:	xor    eax,eax
   14000f7ee:	mov    QWORD PTR [r11-0x18],rax
   14000f7f2:	mov    QWORD PTR [r11-0x20],rax
   14000f7f6:	mov    QWORD PTR [r11-0x28],rax
   14000f7fa:	mov    eax,DWORD PTR [rsp+0x88]
   14000f801:	mov    DWORD PTR [rsp+0x28],eax
   14000f805:	mov    rax,QWORD PTR [rsp+0x80]
   14000f80d:	mov    QWORD PTR [r11-0x38],rax
   14000f811:	call   r10
   14000f814:	jmp    0x14000f843
   14000f816:	call   0x14000f904
   14000f81b:	mov    r9d,ebx
   14000f81e:	mov    r8,rdi
   14000f821:	mov    ecx,eax
   14000f823:	mov    eax,DWORD PTR [rsp+0x88]
   14000f82a:	mov    edx,esi
   14000f82c:	mov    DWORD PTR [rsp+0x28],eax
   14000f830:	mov    rax,QWORD PTR [rsp+0x80]
   14000f838:	mov    QWORD PTR [rsp+0x20],rax
   14000f83d:	call   QWORD PTR [rip+0x1c8ad]        # 0x14002c0f0
   14000f843:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f848:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f84d:	add    rsp,0x50
   14000f851:	pop    rdi
   14000f852:	ret    
   14000f853:	int3   
   14000f854:	mov    QWORD PTR [rsp+0x8],rbx
   14000f859:	mov    QWORD PTR [rsp+0x10],rbp
   14000f85e:	mov    QWORD PTR [rsp+0x18],rsi
   14000f863:	push   rdi
   14000f864:	sub    rsp,0x30
   14000f868:	movsxd rbx,r8d
   14000f86b:	mov    rsi,rdx
   14000f86e:	test   ecx,0xfffff3ff
   14000f874:	jne    0x14000f87e
   14000f876:	cmp    ecx,0xc00
   14000f87c:	jne    0x14000f88d
   14000f87e:	test   rdx,rdx
   14000f881:	jne    0x14000f888
   14000f883:	test   r8d,r8d
   14000f886:	jg     0x14000f88d
   14000f888:	test   r8d,r8d
   14000f88b:	jns    0x14000f891
   14000f88d:	xor    eax,eax
   14000f88f:	jmp    0x14000f8d8
   14000f891:	call   0x14000f6f4
   14000f896:	test   eax,eax
   14000f898:	js     0x14000f88d
   14000f89a:	cdqe   
   14000f89c:	lea    rbp,[rip+0x201f5]        # 0x14002fa98
   14000f8a3:	mov    edx,0x55
   14000f8a8:	add    rax,rax
   14000f8ab:	mov    rbp,QWORD PTR [rbp+rax*8+0x0]
   14000f8b0:	mov    rcx,rbp
   14000f8b3:	call   0x14001c82c
   14000f8b8:	mov    rdi,rax
   14000f8bb:	test   ebx,ebx
   14000f8bd:	jle    0x14000f8d5
   14000f8bf:	cmp    eax,ebx
   14000f8c1:	jge    0x14000f88d
   14000f8c3:	mov    rdx,rbx
   14000f8c6:	mov    r8,rbp
   14000f8c9:	mov    rcx,rsi
   14000f8cc:	call   0x14001c440
   14000f8d1:	test   eax,eax
   14000f8d3:	jne    0x14000f8ed
   14000f8d5:	lea    eax,[rdi+0x1]
   14000f8d8:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f8dd:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f8e2:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f8e7:	add    rsp,0x30
   14000f8eb:	pop    rdi
   14000f8ec:	ret    
   14000f8ed:	and    QWORD PTR [rsp+0x20],0x0
   14000f8f3:	xor    r9d,r9d
   14000f8f6:	xor    r8d,r8d
   14000f8f9:	xor    edx,edx
   14000f8fb:	xor    ecx,ecx
   14000f8fd:	call   0x140008da8
   14000f902:	int3   
   14000f903:	int3   
   14000f904:	sub    rsp,0x28
   14000f908:	test   rcx,rcx
   14000f90b:	je     0x14000f92f
   14000f90d:	call   0x14000f738
   14000f912:	test   eax,eax
   14000f914:	js     0x14000f92f
   14000f916:	cdqe   
   14000f918:	cmp    rax,0xe4
   14000f91e:	jae    0x14000f92f
   14000f920:	lea    rcx,[rip+0x20169]        # 0x14002fa90
   14000f927:	add    rax,rax
   14000f92a:	mov    eax,DWORD PTR [rcx+rax*8]
   14000f92d:	jmp    0x14000f931
   14000f92f:	xor    eax,eax
   14000f931:	add    rsp,0x28
   14000f935:	ret    
   14000f936:	int3   
   14000f937:	int3   
   14000f938:	xor    r8d,r8d
   14000f93b:	xor    edx,edx
   14000f93d:	rex.W jmp QWORD PTR [rip+0x2ed44]        # 0x14003e688
   14000f944:	sub    rsp,0x28
   14000f948:	mov    rax,QWORD PTR [rip+0x30741]        # 0x140040090
   14000f94f:	xor    rax,QWORD PTR [rip+0x2c87a]        # 0x14003c1d0
   14000f956:	je     0x14000f962
   14000f958:	xor    r9d,r9d
   14000f95b:	add    rsp,0x28
   14000f95f:	rex.W jmp rax
   14000f962:	mov    QWORD PTR [rip+0x2ed1f],rcx        # 0x14003e688
   14000f969:	lea    rcx,[rip+0xffffffffffffffc8]        # 0x14000f938
   14000f970:	mov    edx,0x1
   14000f975:	call   QWORD PTR [rip+0x1c725]        # 0x14002c0a0
   14000f97b:	and    QWORD PTR [rip+0x2ed05],0x0        # 0x14003e688
   14000f983:	add    rsp,0x28
   14000f987:	ret    
   14000f988:	mov    r11,rsp
   14000f98b:	mov    QWORD PTR [r11+0x8],rbx
   14000f98f:	mov    QWORD PTR [r11+0x10],rsi
   14000f993:	push   rdi
   14000f994:	sub    rsp,0x40
   14000f998:	mov    r10,QWORD PTR [rip+0x306f9]        # 0x140040098
   14000f99f:	mov    rbx,r9
   14000f9a2:	mov    rdi,r8
   14000f9a5:	xor    r10,QWORD PTR [rip+0x2c824]        # 0x14003c1d0
   14000f9ac:	mov    esi,edx
   14000f9ae:	je     0x14000f9cb
   14000f9b0:	and    QWORD PTR [r11-0x18],0x0
   14000f9b5:	mov    eax,DWORD PTR [rsp+0x78]
   14000f9b9:	mov    DWORD PTR [rsp+0x28],eax
   14000f9bd:	mov    rax,QWORD PTR [rsp+0x70]
   14000f9c2:	mov    QWORD PTR [r11-0x28],rax
   14000f9c6:	call   r10
   14000f9c9:	jmp    0x14000f9f2
   14000f9cb:	call   0x14000f904
   14000f9d0:	mov    r9,rbx
   14000f9d3:	mov    r8,rdi
   14000f9d6:	mov    ecx,eax
   14000f9d8:	mov    eax,DWORD PTR [rsp+0x78]
   14000f9dc:	mov    edx,esi
   14000f9de:	mov    DWORD PTR [rsp+0x28],eax
   14000f9e2:	mov    rax,QWORD PTR [rsp+0x70]
   14000f9e7:	mov    QWORD PTR [rsp+0x20],rax
   14000f9ec:	call   QWORD PTR [rip+0x1c70e]        # 0x14002c100
   14000f9f2:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f9f7:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f9fc:	add    rsp,0x40
   14000fa00:	pop    rdi
   14000fa01:	ret    
   14000fa02:	int3   
   14000fa03:	int3   
   14000fa04:	mov    QWORD PTR [rsp+0x8],rbx
   14000fa09:	mov    QWORD PTR [rsp+0x10],rsi
   14000fa0e:	push   rdi
   14000fa0f:	sub    rsp,0x20
   14000fa13:	mov    rax,QWORD PTR [rip+0x30686]        # 0x1400400a0
   14000fa1a:	mov    ebx,r9d
   14000fa1d:	mov    rdi,r8
   14000fa20:	xor    rax,QWORD PTR [rip+0x2c7a9]        # 0x14003c1d0
   14000fa27:	mov    esi,edx
   14000fa29:	je     0x14000fa2f
   14000fa2b:	call   rax
   14000fa2d:	jmp    0x14000fa44
   14000fa2f:	call   0x14000f904
   14000fa34:	mov    r9d,ebx
   14000fa37:	mov    r8,rdi
   14000fa3a:	mov    ecx,eax
   14000fa3c:	mov    edx,esi
   14000fa3e:	call   QWORD PTR [rip+0x1c69c]        # 0x14002c0e0
   14000fa44:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fa49:	mov    rsi,QWORD PTR [rsp+0x38]
   14000fa4e:	add    rsp,0x20
   14000fa52:	pop    rdi
   14000fa53:	ret    
   14000fa54:	mov    QWORD PTR [rsp+0x8],rbx
   14000fa59:	mov    QWORD PTR [rsp+0x10],rsi
   14000fa5e:	push   rdi
   14000fa5f:	sub    rsp,0x30
   14000fa63:	mov    r10,QWORD PTR [rip+0x3063e]        # 0x1400400a8
   14000fa6a:	mov    rbx,r9
   14000fa6d:	mov    rdi,r8
   14000fa70:	xor    r10,QWORD PTR [rip+0x2c759]        # 0x14003c1d0
   14000fa77:	mov    esi,edx
   14000fa79:	je     0x14000fa92
   14000fa7b:	mov    eax,DWORD PTR [rsp+0x68]
   14000fa7f:	mov    DWORD PTR [rsp+0x28],eax
   14000fa83:	mov    rax,QWORD PTR [rsp+0x60]
   14000fa88:	mov    QWORD PTR [rsp+0x20],rax
   14000fa8d:	call   r10
   14000fa90:	jmp    0x14000fab9
   14000fa92:	call   0x14000f904
   14000fa97:	mov    r9,rbx
   14000fa9a:	mov    r8,rdi
   14000fa9d:	mov    ecx,eax
   14000fa9f:	mov    eax,DWORD PTR [rsp+0x68]
   14000faa3:	mov    edx,esi
   14000faa5:	mov    DWORD PTR [rsp+0x28],eax
   14000faa9:	mov    rax,QWORD PTR [rsp+0x60]
   14000faae:	mov    QWORD PTR [rsp+0x20],rax
   14000fab3:	call   QWORD PTR [rip+0x1c63f]        # 0x14002c0f8
   14000fab9:	mov    rbx,QWORD PTR [rsp+0x40]
   14000fabe:	mov    rsi,QWORD PTR [rsp+0x48]
   14000fac3:	add    rsp,0x30
   14000fac7:	pop    rdi
   14000fac8:	ret    
   14000fac9:	int3   
   14000faca:	int3   
   14000facb:	int3   
   14000facc:	mov    QWORD PTR [rsp+0x8],rbx
   14000fad1:	push   rdi
   14000fad2:	sub    rsp,0x20
   14000fad6:	mov    rax,QWORD PTR [rip+0x305d3]        # 0x1400400b0
   14000fadd:	mov    ebx,edx
   14000fadf:	mov    rdi,rcx
   14000fae2:	xor    rax,QWORD PTR [rip+0x2c6e7]        # 0x14003c1d0
   14000fae9:	je     0x14000faef
   14000faeb:	call   rax
   14000faed:	jmp    0x14000fb02
   14000faef:	call   QWORD PTR [rip+0x1c5b3]        # 0x14002c0a8
   14000faf5:	mov    r8d,ebx
   14000faf8:	mov    rdx,rdi
   14000fafb:	mov    ecx,eax
   14000fafd:	call   0x14000f854
   14000fb02:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fb07:	add    rsp,0x20
   14000fb0b:	pop    rdi
   14000fb0c:	ret    
   14000fb0d:	int3   
   14000fb0e:	int3   
   14000fb0f:	int3   
   14000fb10:	sub    rsp,0x28
   14000fb14:	mov    rax,QWORD PTR [rip+0x3059d]        # 0x1400400b8
   14000fb1b:	xor    rax,QWORD PTR [rip+0x2c6ae]        # 0x14003c1d0
   14000fb22:	je     0x14000fb2b
   14000fb24:	add    rsp,0x28
   14000fb28:	rex.W jmp rax
   14000fb2b:	call   0x14000f904
   14000fb30:	mov    edx,0x1
   14000fb35:	mov    ecx,eax
   14000fb37:	add    rsp,0x28
   14000fb3b:	rex.W jmp QWORD PTR [rip+0x1c596]        # 0x14002c0d8
   14000fb42:	int3   
   14000fb43:	int3   
   14000fb44:	mov    r11,rsp
   14000fb47:	mov    QWORD PTR [r11+0x8],rbx
   14000fb4b:	mov    QWORD PTR [r11+0x10],rsi
   14000fb4f:	push   rdi
   14000fb50:	sub    rsp,0x50
   14000fb54:	mov    r10,QWORD PTR [rip+0x30565]        # 0x1400400c0
   14000fb5b:	mov    ebx,r9d
   14000fb5e:	mov    rdi,r8
   14000fb61:	xor    r10,QWORD PTR [rip+0x2c668]        # 0x14003c1d0
   14000fb68:	mov    esi,edx
   14000fb6a:	je     0x14000fb96
   14000fb6c:	xor    eax,eax
   14000fb6e:	mov    QWORD PTR [r11-0x18],rax
   14000fb72:	mov    QWORD PTR [r11-0x20],rax
   14000fb76:	mov    QWORD PTR [r11-0x28],rax
   14000fb7a:	mov    eax,DWORD PTR [rsp+0x88]
   14000fb81:	mov    DWORD PTR [rsp+0x28],eax
   14000fb85:	mov    rax,QWORD PTR [rsp+0x80]
   14000fb8d:	mov    QWORD PTR [r11-0x38],rax
   14000fb91:	call   r10
   14000fb94:	jmp    0x14000fbc3
   14000fb96:	call   0x14000f904
   14000fb9b:	mov    r9d,ebx
   14000fb9e:	mov    r8,rdi
   14000fba1:	mov    ecx,eax
   14000fba3:	mov    eax,DWORD PTR [rsp+0x88]
   14000fbaa:	mov    edx,esi
   14000fbac:	mov    DWORD PTR [rsp+0x28],eax
   14000fbb0:	mov    rax,QWORD PTR [rsp+0x80]
   14000fbb8:	mov    QWORD PTR [rsp+0x20],rax
   14000fbbd:	call   QWORD PTR [rip+0x1c525]        # 0x14002c0e8
   14000fbc3:	mov    rbx,QWORD PTR [rsp+0x60]
   14000fbc8:	mov    rsi,QWORD PTR [rsp+0x68]
   14000fbcd:	add    rsp,0x50
   14000fbd1:	pop    rdi
   14000fbd2:	ret    
   14000fbd3:	int3   
   14000fbd4:	xor    r9d,r9d
   14000fbd7:	mov    r10,rdx
   14000fbda:	mov    r11,rcx
   14000fbdd:	test   r8,r8
   14000fbe0:	je     0x14000fc25
   14000fbe2:	sub    r11,rdx
   14000fbe5:	movzx  ecx,WORD PTR [r11+r10*1]
   14000fbea:	lea    eax,[rcx-0x41]
   14000fbed:	cmp    ax,0x19
   14000fbf1:	ja     0x14000fbf7
   14000fbf3:	add    cx,0x20
   14000fbf7:	movzx  edx,WORD PTR [r10]
   14000fbfb:	lea    eax,[rdx-0x41]
   14000fbfe:	cmp    ax,0x19
   14000fc02:	ja     0x14000fc08
   14000fc04:	add    dx,0x20
   14000fc08:	add    r10,0x2
   14000fc0c:	dec    r8
   14000fc0f:	je     0x14000fc1b
   14000fc11:	test   cx,cx
   14000fc14:	je     0x14000fc1b
   14000fc16:	cmp    cx,dx
   14000fc19:	je     0x14000fbe5
   14000fc1b:	movzx  eax,dx
   14000fc1e:	movzx  r9d,cx
   14000fc22:	sub    r9d,eax
   14000fc25:	mov    eax,r9d
   14000fc28:	ret    
   14000fc29:	int3   
   14000fc2a:	int3   
   14000fc2b:	int3   
   14000fc2c:	mov    QWORD PTR [rsp+0x8],rbx
   14000fc31:	push   rdi
   14000fc32:	sub    rsp,0x20
   14000fc36:	movsxd rbx,ecx
   14000fc39:	lea    rdi,[rip+0x2c650]        # 0x14003c290
   14000fc40:	add    rbx,rbx
   14000fc43:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000fc48:	jne    0x14000fc5b
   14000fc4a:	call   0x14000fd24
   14000fc4f:	test   eax,eax
   14000fc51:	jne    0x14000fc5b
   14000fc53:	lea    ecx,[rax+0x11]
   14000fc56:	call   0x1400081bc
   14000fc5b:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000fc5f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fc64:	add    rsp,0x20
   14000fc68:	pop    rdi
   14000fc69:	rex.W jmp QWORD PTR [rip+0x1c428]        # 0x14002c098
   14000fc70:	rex push rbx
   14000fc72:	sub    rsp,0x20
   14000fc76:	mov    rbx,rcx
   14000fc79:	call   0x14000e828
   14000fc7e:	test   eax,eax
   14000fc80:	jne    0x14000fc8d
   14000fc82:	mov    rdx,rbx
   14000fc85:	xor    ecx,ecx
   14000fc87:	call   QWORD PTR [rip+0x1c3fb]        # 0x14002c088
   14000fc8d:	mov    ecx,0xff
   14000fc92:	add    rsp,0x20
   14000fc96:	pop    rbx
   14000fc97:	jmp    0x14000805c
   14000fc9c:	mov    QWORD PTR [rsp+0x8],rbx
   14000fca1:	mov    QWORD PTR [rsp+0x10],rbp
   14000fca6:	mov    QWORD PTR [rsp+0x18],rsi
   14000fcab:	push   rdi
   14000fcac:	sub    rsp,0x20
   14000fcb0:	mov    edi,0x24
   14000fcb5:	lea    rbx,[rip+0x2c5d4]        # 0x14003c290
   14000fcbc:	mov    ebp,edi
   14000fcbe:	mov    rsi,QWORD PTR [rbx]
   14000fcc1:	test   rsi,rsi
   14000fcc4:	je     0x14000fce1
   14000fcc6:	cmp    DWORD PTR [rbx+0x8],0x1
   14000fcca:	je     0x14000fce1
   14000fccc:	mov    rcx,rsi
   14000fccf:	call   QWORD PTR [rip+0x1c503]        # 0x14002c1d8
   14000fcd5:	mov    rcx,rsi
   14000fcd8:	call   0x140007dc0
   14000fcdd:	and    QWORD PTR [rbx],0x0
   14000fce1:	add    rbx,0x10
   14000fce5:	dec    rbp
   14000fce8:	jne    0x14000fcbe
   14000fcea:	lea    rbx,[rip+0x2c5a7]        # 0x14003c298
   14000fcf1:	mov    rcx,QWORD PTR [rbx-0x8]
   14000fcf5:	test   rcx,rcx
   14000fcf8:	je     0x14000fd05
   14000fcfa:	cmp    DWORD PTR [rbx],0x1
   14000fcfd:	jne    0x14000fd05
   14000fcff:	call   QWORD PTR [rip+0x1c4d3]        # 0x14002c1d8
   14000fd05:	add    rbx,0x10
   14000fd09:	dec    rdi
   14000fd0c:	jne    0x14000fcf1
   14000fd0e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fd13:	mov    rbp,QWORD PTR [rsp+0x38]
   14000fd18:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fd1d:	add    rsp,0x20
   14000fd21:	pop    rdi
   14000fd22:	ret    
   14000fd23:	int3   
   14000fd24:	mov    QWORD PTR [rsp+0x8],rbx
   14000fd29:	mov    QWORD PTR [rsp+0x10],rdi
   14000fd2e:	push   r14
   14000fd30:	sub    rsp,0x20
   14000fd34:	movsxd rbx,ecx
   14000fd37:	cmp    QWORD PTR [rip+0x2dfc1],0x0        # 0x14003dd00
   14000fd3f:	jne    0x14000fd5a
   14000fd41:	call   0x14000df50
   14000fd46:	mov    ecx,0x1e
   14000fd4b:	call   0x14000dfc4
   14000fd50:	mov    ecx,0xff
   14000fd55:	call   0x14000805c
   14000fd5a:	add    rbx,rbx
   14000fd5d:	lea    r14,[rip+0x2c52c]        # 0x14003c290
   14000fd64:	cmp    QWORD PTR [r14+rbx*8],0x0
   14000fd69:	je     0x14000fd72
   14000fd6b:	mov    eax,0x1
   14000fd70:	jmp    0x14000fdd0
   14000fd72:	mov    ecx,0x28
   14000fd77:	call   0x140008684
   14000fd7c:	mov    rdi,rax
   14000fd7f:	test   rax,rax
   14000fd82:	jne    0x14000fd93
   14000fd84:	call   0x140009cb4
   14000fd89:	mov    DWORD PTR [rax],0xc
   14000fd8f:	xor    eax,eax
   14000fd91:	jmp    0x14000fdd0
   14000fd93:	mov    ecx,0xa
   14000fd98:	call   0x14000fc2c
   14000fd9d:	nop
   14000fd9e:	mov    rcx,rdi
   14000fda1:	cmp    QWORD PTR [r14+rbx*8],0x0
   14000fda6:	jne    0x14000fdbb
   14000fda8:	xor    r8d,r8d
   14000fdab:	mov    edx,0xfa0
   14000fdb0:	call   0x14000e7fc
   14000fdb5:	mov    QWORD PTR [r14+rbx*8],rdi
   14000fdb9:	jmp    0x14000fdc1
   14000fdbb:	call   0x140007dc0
   14000fdc0:	nop
   14000fdc1:	mov    rcx,QWORD PTR [rip+0x2c568]        # 0x14003c330
   14000fdc8:	call   QWORD PTR [rip+0x1c2c2]        # 0x14002c090
   14000fdce:	jmp    0x14000fd6b
   14000fdd0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fdd5:	mov    rdi,QWORD PTR [rsp+0x38]
   14000fdda:	add    rsp,0x20
   14000fdde:	pop    r14
   14000fde0:	ret    
   14000fde1:	int3   
   14000fde2:	int3   
   14000fde3:	int3   
   14000fde4:	mov    QWORD PTR [rsp+0x8],rbx
   14000fde9:	mov    QWORD PTR [rsp+0x10],rsi
   14000fdee:	push   rdi
   14000fdef:	sub    rsp,0x20
   14000fdf3:	xor    esi,esi
   14000fdf5:	lea    rbx,[rip+0x2c494]        # 0x14003c290
   14000fdfc:	lea    edi,[rsi+0x24]
   14000fdff:	cmp    DWORD PTR [rbx+0x8],0x1
   14000fe03:	jne    0x14000fe29
   14000fe05:	movsxd rax,esi
   14000fe08:	lea    rdx,[rip+0x2e891]        # 0x14003e6a0
   14000fe0f:	xor    r8d,r8d
   14000fe12:	lea    rcx,[rax+rax*4]
   14000fe16:	inc    esi
   14000fe18:	lea    rcx,[rdx+rcx*8]
   14000fe1c:	mov    edx,0xfa0
   14000fe21:	mov    QWORD PTR [rbx],rcx
   14000fe24:	call   0x14000e7fc
   14000fe29:	add    rbx,0x10
   14000fe2d:	dec    rdi
   14000fe30:	jne    0x14000fdff
   14000fe32:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fe37:	mov    rsi,QWORD PTR [rsp+0x38]
   14000fe3c:	lea    eax,[rdi+0x1]
   14000fe3f:	add    rsp,0x20
   14000fe43:	pop    rdi
   14000fe44:	ret    
   14000fe45:	int3   
   14000fe46:	int3   
   14000fe47:	int3   
   14000fe48:	movsxd rcx,ecx
   14000fe4b:	lea    rax,[rip+0x2c43e]        # 0x14003c290
   14000fe52:	add    rcx,rcx
   14000fe55:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000fe59:	rex.W jmp QWORD PTR [rip+0x1c230]        # 0x14002c090
   14000fe60:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000fe64:	xor    r9d,r9d
   14000fe67:	mov    r10,rdx
   14000fe6a:	add    r8,rcx
   14000fe6d:	movzx  eax,WORD PTR [r8+0x14]
   14000fe72:	movzx  r11d,WORD PTR [r8+0x6]
   14000fe77:	add    rax,0x18
   14000fe7b:	add    rax,r8
   14000fe7e:	test   r11d,r11d
   14000fe81:	je     0x14000fea1
   14000fe83:	mov    edx,DWORD PTR [rax+0xc]
   14000fe86:	cmp    r10,rdx
   14000fe89:	jb     0x14000fe95
   14000fe8b:	mov    ecx,DWORD PTR [rax+0x8]
   14000fe8e:	add    ecx,edx
   14000fe90:	cmp    r10,rcx
   14000fe93:	jb     0x14000fea3
   14000fe95:	inc    r9d
   14000fe98:	add    rax,0x28
   14000fe9c:	cmp    r9d,r11d
   14000fe9f:	jb     0x14000fe83
   14000fea1:	xor    eax,eax
   14000fea3:	ret    
   14000fea4:	int3   
   14000fea5:	int3   
   14000fea6:	int3   
   14000fea7:	int3   
   14000fea8:	int3   
   14000fea9:	int3   
   14000feaa:	int3   
   14000feab:	int3   
   14000feac:	int3   
   14000fead:	int3   
   14000feae:	int3   
   14000feaf:	int3   
   14000feb0:	mov    QWORD PTR [rsp+0x8],rbx
   14000feb5:	push   rdi
   14000feb6:	sub    rsp,0x20
   14000feba:	mov    rbx,rcx
   14000febd:	lea    rdi,[rip+0xffffffffffff013c]        # 0x140000000
   14000fec4:	mov    rcx,rdi
   14000fec7:	call   0x14000ff00
   14000fecc:	test   eax,eax
   14000fece:	je     0x14000fef2
   14000fed0:	sub    rbx,rdi
   14000fed3:	mov    rdx,rbx
   14000fed6:	mov    rcx,rdi
   14000fed9:	call   0x14000fe60
   14000fede:	test   rax,rax
   14000fee1:	je     0x14000fef2
   14000fee3:	mov    eax,DWORD PTR [rax+0x24]
   14000fee6:	shr    eax,0x1f
   14000fee9:	not    eax
   14000feeb:	and    eax,0x1
   14000feee:	jmp    0x14000fef2
   14000fef0:	xor    eax,eax
   14000fef2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fef7:	add    rsp,0x20
   14000fefb:	pop    rdi
   14000fefc:	ret    
   14000fefd:	int3   
   14000fefe:	int3   
   14000feff:	int3   
   14000ff00:	mov    rax,rcx
   14000ff03:	mov    ecx,0x5a4d
   14000ff08:	cmp    WORD PTR [rax],cx
   14000ff0b:	je     0x14000ff10
   14000ff0d:	xor    eax,eax
   14000ff0f:	ret    
   14000ff10:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000ff14:	add    rcx,rax
   14000ff17:	xor    eax,eax
   14000ff19:	cmp    DWORD PTR [rcx],0x4550
   14000ff1f:	jne    0x14000ff2d
   14000ff21:	mov    edx,0x20b
   14000ff26:	cmp    WORD PTR [rcx+0x18],dx
   14000ff2a:	sete   al
   14000ff2d:	ret    
   14000ff2e:	int3   
   14000ff2f:	int3   
   14000ff30:	mov    QWORD PTR [rip+0x2e999],rcx        # 0x14003e8d0
   14000ff37:	ret    
   14000ff38:	mov    QWORD PTR [rsp+0x8],rbx
   14000ff3d:	mov    QWORD PTR [rsp+0x10],rsi
   14000ff42:	mov    QWORD PTR [rsp+0x18],rdi
   14000ff47:	push   r14
   14000ff49:	sub    rsp,0x20
   14000ff4d:	mov    r14,rcx
   14000ff50:	mov    rcx,QWORD PTR [rip+0x2e979]        # 0x14003e8d0
   14000ff57:	call   QWORD PTR [rip+0x1c1bb]        # 0x14002c118
   14000ff5d:	mov    rdi,rax
   14000ff60:	test   r14,r14
   14000ff63:	jne    0x14000ff7d
   14000ff65:	call   0x140009cb4
   14000ff6a:	mov    ebx,0x16
   14000ff6f:	mov    DWORD PTR [rax],ebx
   14000ff71:	call   0x140008d58
   14000ff76:	mov    eax,ebx
   14000ff78:	jmp    0x14001005c
   14000ff7d:	and    DWORD PTR [r14],0x0
   14000ff81:	test   rax,rax
   14000ff84:	jne    0x140010038
   14000ff8a:	lea    rcx,[rip+0x22e3f]        # 0x140032dd0
   14000ff91:	xor    edx,edx
   14000ff93:	mov    r8d,0x800
   14000ff99:	call   QWORD PTR [rip+0x1c0d9]        # 0x14002c078
   14000ff9f:	mov    rsi,rax
   14000ffa2:	test   rax,rax
   14000ffa5:	jne    0x14000ffcc
   14000ffa7:	call   QWORD PTR [rip+0x1c1a3]        # 0x14002c150
   14000ffad:	cmp    eax,0x57
   14000ffb0:	jne    0x14000ff65
   14000ffb2:	lea    rcx,[rip+0x22e17]        # 0x140032dd0
   14000ffb9:	xor    r8d,r8d
   14000ffbc:	xor    edx,edx
   14000ffbe:	call   QWORD PTR [rip+0x1c0b4]        # 0x14002c078
   14000ffc4:	mov    rsi,rax
   14000ffc7:	test   rax,rax
   14000ffca:	je     0x14000ff65
   14000ffcc:	lea    rdx,[rip+0x22e1d]        # 0x140032df0
   14000ffd3:	mov    rcx,rsi
   14000ffd6:	call   QWORD PTR [rip+0x1c19c]        # 0x14002c178
   14000ffdc:	mov    rdi,rax
   14000ffdf:	test   rax,rax
   14000ffe2:	jne    0x14001000f
   14000ffe4:	call   0x140009cb4
   14000ffe9:	mov    rbx,rax
   14000ffec:	call   QWORD PTR [rip+0x1c15e]        # 0x14002c150
   14000fff2:	mov    ecx,eax
   14000fff4:	call   0x140009d4c
   14000fff9:	mov    DWORD PTR [rbx],eax
   14000fffb:	call   0x140008d58
   140010000:	call   QWORD PTR [rip+0x1c14a]        # 0x14002c150
   140010006:	mov    ecx,eax
   140010008:	call   0x140009d4c
   14001000d:	jmp    0x14001005c
   14001000f:	mov    rcx,rax
   140010012:	call   QWORD PTR [rip+0x1c0f8]        # 0x14002c110
   140010018:	xor    ecx,ecx
   14001001a:	mov    rbx,rax
   14001001d:	call   QWORD PTR [rip+0x1c0ed]        # 0x14002c110
   140010023:	xchg   QWORD PTR [rip+0x2e8a6],rbx        # 0x14003e8d0
   14001002a:	cmp    rbx,rax
   14001002d:	je     0x140010038
   14001002f:	mov    rcx,rsi
   140010032:	call   QWORD PTR [rip+0x1c048]        # 0x14002c080
   140010038:	mov    edx,0x4
   14001003d:	mov    rcx,r14
   140010040:	call   rdi
   140010042:	test   eax,eax
   140010044:	jne    0x14001005a
   140010046:	call   0x140009cb4
   14001004b:	mov    DWORD PTR [rax],0xc
   140010051:	call   0x140009cb4
   140010056:	mov    eax,DWORD PTR [rax]
   140010058:	jmp    0x14001005c
   14001005a:	xor    eax,eax
   14001005c:	mov    rbx,QWORD PTR [rsp+0x30]
   140010061:	mov    rsi,QWORD PTR [rsp+0x38]
   140010066:	mov    rdi,QWORD PTR [rsp+0x40]
   14001006b:	add    rsp,0x20
   14001006f:	pop    r14
   140010071:	ret    
   140010072:	int3   
   140010073:	int3   
   140010074:	sub    rsp,0x28
   140010078:	cmp    DWORD PTR [rip+0x30089],0x0        # 0x140040108
   14001007f:	jne    0x140010095
   140010081:	mov    ecx,0xfffffffd
   140010086:	call   0x1400104c4
   14001008b:	mov    DWORD PTR [rip+0x30073],0x1        # 0x140040108
   140010095:	xor    eax,eax
   140010097:	add    rsp,0x28
   14001009b:	ret    
   14001009c:	sub    ecx,0x3a4
   1400100a2:	je     0x1400100cd
   1400100a4:	sub    ecx,0x4
   1400100a7:	je     0x1400100c5
   1400100a9:	sub    ecx,0xd
   1400100ac:	je     0x1400100bd
   1400100ae:	dec    ecx
   1400100b0:	je     0x1400100b5
   1400100b2:	xor    eax,eax
   1400100b4:	ret    
   1400100b5:	mov    rax,QWORD PTR [rip+0x22d64]        # 0x140032e20
   1400100bc:	ret    
   1400100bd:	mov    rax,QWORD PTR [rip+0x22d54]        # 0x140032e18
   1400100c4:	ret    
   1400100c5:	mov    rax,QWORD PTR [rip+0x22d44]        # 0x140032e10
   1400100cc:	ret    
   1400100cd:	mov    rax,QWORD PTR [rip+0x22d34]        # 0x140032e08
   1400100d4:	ret    
   1400100d5:	int3   
   1400100d6:	int3   
   1400100d7:	int3   
   1400100d8:	rex push rbx
   1400100da:	sub    rsp,0x40
   1400100de:	mov    ebx,ecx
   1400100e0:	lea    rcx,[rsp+0x20]
   1400100e5:	xor    edx,edx
   1400100e7:	call   0x140008fac
   1400100ec:	and    DWORD PTR [rip+0x2e805],0x0        # 0x14003e8f8
   1400100f3:	cmp    ebx,0xfffffffe
   1400100f6:	jne    0x14001010a
   1400100f8:	mov    DWORD PTR [rip+0x2e7f6],0x1        # 0x14003e8f8
   140010102:	call   QWORD PTR [rip+0x1bf58]        # 0x14002c060
   140010108:	jmp    0x14001011f
   14001010a:	cmp    ebx,0xfffffffd
   14001010d:	jne    0x140010123
   14001010f:	mov    DWORD PTR [rip+0x2e7df],0x1        # 0x14003e8f8
   140010119:	call   QWORD PTR [rip+0x1bf49]        # 0x14002c068
   14001011f:	mov    ebx,eax
   140010121:	jmp    0x14001013a
   140010123:	cmp    ebx,0xfffffffc
   140010126:	jne    0x14001013a
   140010128:	mov    rax,QWORD PTR [rsp+0x20]
   14001012d:	mov    DWORD PTR [rip+0x2e7c1],0x1        # 0x14003e8f8
   140010137:	mov    ebx,DWORD PTR [rax+0x4]
   14001013a:	cmp    BYTE PTR [rsp+0x38],0x0
   14001013f:	je     0x14001014d
   140010141:	mov    rcx,QWORD PTR [rsp+0x30]
   140010146:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001014d:	mov    eax,ebx
   14001014f:	add    rsp,0x40
   140010153:	pop    rbx
   140010154:	ret    
   140010155:	int3   
   140010156:	int3   
   140010157:	int3   
   140010158:	mov    QWORD PTR [rsp+0x8],rbx
   14001015d:	mov    QWORD PTR [rsp+0x10],rbp
   140010162:	mov    QWORD PTR [rsp+0x18],rsi
   140010167:	push   rdi
   140010168:	sub    rsp,0x20
   14001016c:	lea    rbx,[rcx+0x18]
   140010170:	mov    rsi,rcx
   140010173:	mov    ebp,0x101
   140010178:	mov    rcx,rbx
   14001017b:	mov    r8d,ebp
   14001017e:	xor    edx,edx
   140010180:	call   0x140006f70
   140010185:	xor    eax,eax
   140010187:	lea    rdi,[rsi+0xc]
   14001018b:	mov    QWORD PTR [rsi+0x4],rax
   14001018f:	mov    QWORD PTR [rsi+0x220],rax
   140010196:	mov    ecx,0x6
   14001019b:	movzx  eax,ax
   14001019e:	rep stos WORD PTR es:[rdi],ax
   1400101a1:	lea    rdi,[rip+0x2c538]        # 0x14003c6e0
   1400101a8:	sub    rdi,rsi
   1400101ab:	mov    al,BYTE PTR [rdi+rbx*1]
   1400101ae:	mov    BYTE PTR [rbx],al
   1400101b0:	inc    rbx
   1400101b3:	dec    rbp
   1400101b6:	jne    0x1400101ab
   1400101b8:	lea    rcx,[rsi+0x119]
   1400101bf:	mov    edx,0x100
   1400101c4:	mov    al,BYTE PTR [rcx+rdi*1]
   1400101c7:	mov    BYTE PTR [rcx],al
   1400101c9:	inc    rcx
   1400101cc:	dec    rdx
   1400101cf:	jne    0x1400101c4
   1400101d1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400101d6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400101db:	mov    rsi,QWORD PTR [rsp+0x40]
   1400101e0:	add    rsp,0x20
   1400101e4:	pop    rdi
   1400101e5:	ret    
   1400101e6:	int3   
   1400101e7:	int3   
   1400101e8:	mov    QWORD PTR [rsp+0x10],rbx
   1400101ed:	mov    QWORD PTR [rsp+0x18],rdi
   1400101f2:	push   rbp
   1400101f3:	lea    rbp,[rsp-0x480]
   1400101fb:	sub    rsp,0x580
   140010202:	mov    rax,QWORD PTR [rip+0x2bfc7]        # 0x14003c1d0
   140010209:	xor    rax,rsp
   14001020c:	mov    QWORD PTR [rbp+0x470],rax
   140010213:	mov    rdi,rcx
   140010216:	mov    ecx,DWORD PTR [rcx+0x4]
   140010219:	lea    rdx,[rsp+0x50]
   14001021e:	call   QWORD PTR [rip+0x1be34]        # 0x14002c058
   140010224:	mov    ebx,0x100
   140010229:	test   eax,eax
   14001022b:	je     0x140010366
   140010231:	xor    eax,eax
   140010233:	lea    rcx,[rsp+0x70]
   140010238:	mov    BYTE PTR [rcx],al
   14001023a:	inc    eax
   14001023c:	inc    rcx
   14001023f:	cmp    eax,ebx
   140010241:	jb     0x140010238
   140010243:	mov    al,BYTE PTR [rsp+0x56]
   140010247:	mov    BYTE PTR [rsp+0x70],0x20
   14001024c:	lea    rdx,[rsp+0x56]
   140010251:	jmp    0x140010275
   140010253:	movzx  r8d,BYTE PTR [rdx+0x1]
   140010258:	movzx  ecx,al
   14001025b:	jmp    0x14001026a
   14001025d:	cmp    ecx,ebx
   14001025f:	jae    0x14001026f
   140010261:	mov    eax,ecx
   140010263:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   140010268:	inc    ecx
   14001026a:	cmp    ecx,r8d
   14001026d:	jbe    0x14001025d
   14001026f:	add    rdx,0x2
   140010273:	mov    al,BYTE PTR [rdx]
   140010275:	test   al,al
   140010277:	jne    0x140010253
   140010279:	mov    eax,DWORD PTR [rdi+0x4]
   14001027c:	and    DWORD PTR [rsp+0x30],0x0
   140010281:	lea    r8,[rsp+0x70]
   140010286:	mov    DWORD PTR [rsp+0x28],eax
   14001028a:	lea    rax,[rbp+0x270]
   140010291:	mov    r9d,ebx
   140010294:	mov    edx,0x1
   140010299:	xor    ecx,ecx
   14001029b:	mov    QWORD PTR [rsp+0x20],rax
   1400102a0:	call   0x14001cd64
   1400102a5:	and    DWORD PTR [rsp+0x40],0x0
   1400102aa:	mov    eax,DWORD PTR [rdi+0x4]
   1400102ad:	mov    rdx,QWORD PTR [rdi+0x220]
   1400102b4:	mov    DWORD PTR [rsp+0x38],eax
   1400102b8:	lea    rax,[rbp+0x70]
   1400102bc:	mov    DWORD PTR [rsp+0x30],ebx
   1400102c0:	mov    QWORD PTR [rsp+0x28],rax
   1400102c5:	lea    r9,[rsp+0x70]
   1400102ca:	mov    r8d,ebx
   1400102cd:	xor    ecx,ecx
   1400102cf:	mov    DWORD PTR [rsp+0x20],ebx
   1400102d3:	call   0x14001cb54
   1400102d8:	and    DWORD PTR [rsp+0x40],0x0
   1400102dd:	mov    eax,DWORD PTR [rdi+0x4]
   1400102e0:	mov    rdx,QWORD PTR [rdi+0x220]
   1400102e7:	mov    DWORD PTR [rsp+0x38],eax
   1400102eb:	lea    rax,[rbp+0x170]
   1400102f2:	mov    DWORD PTR [rsp+0x30],ebx
   1400102f6:	mov    QWORD PTR [rsp+0x28],rax
   1400102fb:	lea    r9,[rsp+0x70]
   140010300:	mov    r8d,0x200
   140010306:	xor    ecx,ecx
   140010308:	mov    DWORD PTR [rsp+0x20],ebx
   14001030c:	call   0x14001cb54
   140010311:	lea    r8,[rbp+0x70]
   140010315:	lea    r9,[rbp+0x170]
   14001031c:	sub    r8,rdi
   14001031f:	lea    rdx,[rbp+0x270]
   140010326:	lea    rcx,[rdi+0x19]
   14001032a:	sub    r9,rdi
   14001032d:	test   BYTE PTR [rdx],0x1
   140010330:	je     0x14001033c
   140010332:	or     BYTE PTR [rcx],0x10
   140010335:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14001033a:	jmp    0x140010349
   14001033c:	test   BYTE PTR [rdx],0x2
   14001033f:	je     0x140010351
   140010341:	or     BYTE PTR [rcx],0x20
   140010344:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   140010349:	mov    BYTE PTR [rcx+0x100],al
   14001034f:	jmp    0x140010358
   140010351:	mov    BYTE PTR [rcx+0x100],0x0
   140010358:	inc    rcx
   14001035b:	add    rdx,0x2
   14001035f:	dec    rbx
   140010362:	jne    0x14001032d
   140010364:	jmp    0x1400103a5
   140010366:	xor    edx,edx
   140010368:	lea    rcx,[rdi+0x19]
   14001036c:	lea    r8d,[rdx-0x61]
   140010370:	lea    eax,[r8+0x20]
   140010374:	cmp    eax,0x19
   140010377:	ja     0x140010381
   140010379:	or     BYTE PTR [rcx],0x10
   14001037c:	lea    eax,[rdx+0x20]
   14001037f:	jmp    0x14001038d
   140010381:	cmp    r8d,0x19
   140010385:	ja     0x140010395
   140010387:	or     BYTE PTR [rcx],0x20
   14001038a:	lea    eax,[rdx-0x20]
   14001038d:	mov    BYTE PTR [rcx+0x100],al
   140010393:	jmp    0x14001039c
   140010395:	mov    BYTE PTR [rcx+0x100],0x0
   14001039c:	inc    edx
   14001039e:	inc    rcx
   1400103a1:	cmp    edx,ebx
   1400103a3:	jb     0x14001036c
   1400103a5:	mov    rcx,QWORD PTR [rbp+0x470]
   1400103ac:	xor    rcx,rsp
   1400103af:	call   0x14000c380
   1400103b4:	lea    r11,[rsp+0x580]
   1400103bc:	mov    rbx,QWORD PTR [r11+0x18]
   1400103c0:	mov    rdi,QWORD PTR [r11+0x20]
   1400103c4:	mov    rsp,r11
   1400103c7:	pop    rbp
   1400103c8:	ret    
   1400103c9:	int3   
   1400103ca:	int3   
   1400103cb:	int3   
   1400103cc:	mov    QWORD PTR [rsp+0x10],rbx
   1400103d1:	push   rdi
   1400103d2:	sub    rsp,0x20
   1400103d6:	call   0x14000a3ec
   1400103db:	mov    rdi,rax
   1400103de:	mov    ecx,DWORD PTR [rip+0x2ce34]        # 0x14003d218
   1400103e4:	test   DWORD PTR [rax+0xc8],ecx
   1400103ea:	je     0x1400103ff
   1400103ec:	cmp    QWORD PTR [rax+0xc0],0x0
   1400103f4:	je     0x1400103ff
   1400103f6:	mov    rbx,QWORD PTR [rax+0xb8]
   1400103fd:	jmp    0x14001046b
   1400103ff:	mov    ecx,0xd
   140010404:	call   0x14000fc2c
   140010409:	nop
   14001040a:	mov    rbx,QWORD PTR [rdi+0xb8]
   140010411:	mov    QWORD PTR [rsp+0x30],rbx
   140010416:	cmp    rbx,QWORD PTR [rip+0x2c5e3]        # 0x14003ca00
   14001041d:	je     0x140010461
   14001041f:	test   rbx,rbx
   140010422:	je     0x14001043f
   140010424:	lock dec DWORD PTR [rbx]
   140010427:	jne    0x14001043f
   140010429:	lea    rax,[rip+0x2c2b0]        # 0x14003c6e0
   140010430:	mov    rcx,QWORD PTR [rsp+0x30]
   140010435:	cmp    rcx,rax
   140010438:	je     0x14001043f
   14001043a:	call   0x140007dc0
   14001043f:	mov    rax,QWORD PTR [rip+0x2c5ba]        # 0x14003ca00
   140010446:	mov    QWORD PTR [rdi+0xb8],rax
   14001044d:	mov    rax,QWORD PTR [rip+0x2c5ac]        # 0x14003ca00
   140010454:	mov    QWORD PTR [rsp+0x30],rax
   140010459:	lock inc DWORD PTR [rax]
   14001045c:	mov    rbx,QWORD PTR [rsp+0x30]
   140010461:	mov    ecx,0xd
   140010466:	call   0x14000fe48
   14001046b:	test   rbx,rbx
   14001046e:	jne    0x140010478
   140010470:	lea    ecx,[rbx+0x20]
   140010473:	call   0x1400081bc
   140010478:	mov    rax,rbx
   14001047b:	mov    rbx,QWORD PTR [rsp+0x38]
   140010480:	add    rsp,0x20
   140010484:	pop    rdi
   140010485:	ret    
   140010486:	int3   
   140010487:	int3   
   140010488:	sub    rsp,0x48
   14001048c:	lea    rcx,[rsp+0x20]
   140010491:	xor    edx,edx
   140010493:	call   0x140008fac
   140010498:	mov    rax,QWORD PTR [rsp+0x28]
   14001049d:	cmp    DWORD PTR [rax+0x8],0x0
   1400104a1:	je     0x1400104a8
   1400104a3:	mov    eax,DWORD PTR [rax+0x4]
   1400104a6:	jmp    0x1400104aa
   1400104a8:	xor    eax,eax
   1400104aa:	cmp    BYTE PTR [rsp+0x38],0x0
   1400104af:	je     0x1400104bd
   1400104b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400104b6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400104bd:	add    rsp,0x48
   1400104c1:	ret    
   1400104c2:	int3   
   1400104c3:	int3   
   1400104c4:	mov    rax,rsp
   1400104c7:	mov    QWORD PTR [rax+0x8],rbx
   1400104cb:	mov    QWORD PTR [rax+0x10],rsi
   1400104cf:	mov    QWORD PTR [rax+0x18],rdi
   1400104d3:	mov    QWORD PTR [rax+0x20],r14
   1400104d7:	push   r15
   1400104d9:	sub    rsp,0x30
   1400104dd:	mov    edi,ecx
   1400104df:	or     r15d,0xffffffff
   1400104e3:	call   0x14000a3ec
   1400104e8:	mov    rsi,rax
   1400104eb:	call   0x1400103cc
   1400104f0:	mov    rbx,QWORD PTR [rsi+0xb8]
   1400104f7:	mov    ecx,edi
   1400104f9:	call   0x1400100d8
   1400104fe:	mov    r14d,eax
   140010501:	cmp    eax,DWORD PTR [rbx+0x4]
   140010504:	je     0x1400106e5
   14001050a:	mov    ecx,0x228
   14001050f:	call   0x140008684
   140010514:	mov    rbx,rax
   140010517:	xor    edi,edi
   140010519:	test   rax,rax
   14001051c:	je     0x1400106ea
   140010522:	mov    rax,QWORD PTR [rsi+0xb8]
   140010529:	mov    rcx,rbx
   14001052c:	lea    edx,[rdi+0x4]
   14001052f:	lea    r8d,[rdx+0x7c]
   140010533:	movups xmm0,XMMWORD PTR [rax]
   140010536:	movups XMMWORD PTR [rcx],xmm0
   140010539:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001053d:	movups XMMWORD PTR [rcx+0x10],xmm1
   140010541:	movups xmm0,XMMWORD PTR [rax+0x20]
   140010545:	movups XMMWORD PTR [rcx+0x20],xmm0
   140010549:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001054d:	movups XMMWORD PTR [rcx+0x30],xmm1
   140010551:	movups xmm0,XMMWORD PTR [rax+0x40]
   140010555:	movups XMMWORD PTR [rcx+0x40],xmm0
   140010559:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001055d:	movups XMMWORD PTR [rcx+0x50],xmm1
   140010561:	movups xmm0,XMMWORD PTR [rax+0x60]
   140010565:	movups XMMWORD PTR [rcx+0x60],xmm0
   140010569:	add    rcx,r8
   14001056c:	movups xmm1,XMMWORD PTR [rax+0x70]
   140010570:	movups XMMWORD PTR [rcx-0x10],xmm1
   140010574:	add    rax,r8
   140010577:	dec    rdx
   14001057a:	jne    0x140010533
   14001057c:	movups xmm0,XMMWORD PTR [rax]
   14001057f:	movups XMMWORD PTR [rcx],xmm0
   140010582:	movups xmm1,XMMWORD PTR [rax+0x10]
   140010586:	movups XMMWORD PTR [rcx+0x10],xmm1
   14001058a:	mov    rax,QWORD PTR [rax+0x20]
   14001058e:	mov    QWORD PTR [rcx+0x20],rax
   140010592:	mov    DWORD PTR [rbx],edi
   140010594:	mov    rdx,rbx
   140010597:	mov    ecx,r14d
   14001059a:	call   0x140010708
   14001059f:	mov    r15d,eax
   1400105a2:	test   eax,eax
   1400105a4:	jne    0x1400106bf
   1400105aa:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400105b1:	lea    r14,[rip+0x2c128]        # 0x14003c6e0
   1400105b8:	lock dec DWORD PTR [rcx]
   1400105bb:	jne    0x1400105ce
   1400105bd:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400105c4:	cmp    rcx,r14
   1400105c7:	je     0x1400105ce
   1400105c9:	call   0x140007dc0
   1400105ce:	mov    QWORD PTR [rsi+0xb8],rbx
   1400105d5:	lock inc DWORD PTR [rbx]
   1400105d8:	test   BYTE PTR [rsi+0xc8],0x2
   1400105df:	jne    0x1400106ea
   1400105e5:	test   BYTE PTR [rip+0x2cc2c],0x1        # 0x14003d218
   1400105ec:	jne    0x1400106ea
   1400105f2:	mov    esi,0xd
   1400105f7:	mov    ecx,esi
   1400105f9:	call   0x14000fc2c
   1400105fe:	nop
   1400105ff:	mov    eax,DWORD PTR [rbx+0x4]
   140010602:	mov    DWORD PTR [rip+0x2e2d0],eax        # 0x14003e8d8
   140010608:	mov    eax,DWORD PTR [rbx+0x8]
   14001060b:	mov    DWORD PTR [rip+0x2e2cb],eax        # 0x14003e8dc
   140010611:	mov    rax,QWORD PTR [rbx+0x220]
   140010618:	mov    QWORD PTR [rip+0x2e2d1],rax        # 0x14003e8f0
   14001061f:	mov    edx,edi
   140010621:	lea    r8,[rip+0xfffffffffffef9d8]        # 0x140000000
   140010628:	mov    DWORD PTR [rsp+0x20],edx
   14001062c:	cmp    edx,0x5
   14001062f:	jge    0x140010646
   140010631:	movsxd rcx,edx
   140010634:	movzx  eax,WORD PTR [rbx+rcx*2+0xc]
   140010639:	mov    WORD PTR [r8+rcx*2+0x3e8e0],ax
   140010642:	inc    edx
   140010644:	jmp    0x140010628
   140010646:	mov    edx,edi
   140010648:	mov    DWORD PTR [rsp+0x20],edx
   14001064c:	cmp    edx,0x101
   140010652:	jge    0x140010667
   140010654:	movsxd rcx,edx
   140010657:	mov    al,BYTE PTR [rcx+rbx*1+0x18]
   14001065b:	mov    BYTE PTR [rcx+r8*1+0x3c4d0],al
   140010663:	inc    edx
   140010665:	jmp    0x140010648
   140010667:	mov    DWORD PTR [rsp+0x20],edi
   14001066b:	cmp    edi,0x100
   140010671:	jge    0x140010689
   140010673:	movsxd rcx,edi
   140010676:	mov    al,BYTE PTR [rcx+rbx*1+0x119]
   14001067d:	mov    BYTE PTR [rcx+r8*1+0x3c5e0],al
   140010685:	inc    edi
   140010687:	jmp    0x140010667
   140010689:	mov    rcx,QWORD PTR [rip+0x2c370]        # 0x14003ca00
   140010690:	or     eax,0xffffffff
   140010693:	lock xadd DWORD PTR [rcx],eax
   140010697:	dec    eax
   140010699:	jne    0x1400106ac
   14001069b:	mov    rcx,QWORD PTR [rip+0x2c35e]        # 0x14003ca00
   1400106a2:	cmp    rcx,r14
   1400106a5:	je     0x1400106ac
   1400106a7:	call   0x140007dc0
   1400106ac:	mov    QWORD PTR [rip+0x2c34d],rbx        # 0x14003ca00
   1400106b3:	lock inc DWORD PTR [rbx]
   1400106b6:	mov    ecx,esi
   1400106b8:	call   0x14000fe48
   1400106bd:	jmp    0x1400106ea
   1400106bf:	cmp    eax,0xffffffff
   1400106c2:	jne    0x1400106ea
   1400106c4:	lea    r14,[rip+0x2c015]        # 0x14003c6e0
   1400106cb:	cmp    rbx,r14
   1400106ce:	je     0x1400106d8
   1400106d0:	mov    rcx,rbx
   1400106d3:	call   0x140007dc0
   1400106d8:	call   0x140009cb4
   1400106dd:	mov    DWORD PTR [rax],0x16
   1400106e3:	jmp    0x1400106ea
   1400106e5:	xor    edi,edi
   1400106e7:	mov    r15d,edi
   1400106ea:	mov    eax,r15d
   1400106ed:	mov    rbx,QWORD PTR [rsp+0x40]
   1400106f2:	mov    rsi,QWORD PTR [rsp+0x48]
   1400106f7:	mov    rdi,QWORD PTR [rsp+0x50]
   1400106fc:	mov    r14,QWORD PTR [rsp+0x58]
   140010701:	add    rsp,0x30
   140010705:	pop    r15
   140010707:	ret    
   140010708:	mov    QWORD PTR [rsp+0x18],rbx
   14001070d:	mov    QWORD PTR [rsp+0x20],rbp
   140010712:	push   rsi
   140010713:	push   rdi
   140010714:	push   r12
   140010716:	push   r14
   140010718:	push   r15
   14001071a:	sub    rsp,0x40
   14001071e:	mov    rax,QWORD PTR [rip+0x2baab]        # 0x14003c1d0
   140010725:	xor    rax,rsp
   140010728:	mov    QWORD PTR [rsp+0x38],rax
   14001072d:	mov    rbx,rdx
   140010730:	call   0x1400100d8
   140010735:	xor    esi,esi
   140010737:	mov    edi,eax
   140010739:	test   eax,eax
   14001073b:	jne    0x14001074a
   14001073d:	mov    rcx,rbx
   140010740:	call   0x140010158
   140010745:	jmp    0x14001098e
   14001074a:	lea    r12,[rip+0x2c1bf]        # 0x14003c910
   140010751:	mov    ebp,esi
   140010753:	mov    r15d,0x1
   140010759:	mov    rax,r12
   14001075c:	cmp    DWORD PTR [rax],edi
   14001075e:	je     0x14001089c
   140010764:	add    ebp,r15d
   140010767:	add    rax,0x30
   14001076b:	cmp    ebp,0x5
   14001076e:	jb     0x14001075c
   140010770:	lea    eax,[rdi-0xfde8]
   140010776:	cmp    eax,r15d
   140010779:	jbe    0x140010894
   14001077f:	movzx  ecx,di
   140010782:	call   QWORD PTR [rip+0x1b8e8]        # 0x14002c070
   140010788:	test   eax,eax
   14001078a:	je     0x140010894
   140010790:	lea    rdx,[rsp+0x20]
   140010795:	mov    ecx,edi
   140010797:	call   QWORD PTR [rip+0x1b8bb]        # 0x14002c058
   14001079d:	test   eax,eax
   14001079f:	je     0x140010888
   1400107a5:	lea    rcx,[rbx+0x18]
   1400107a9:	xor    edx,edx
   1400107ab:	mov    r8d,0x101
   1400107b1:	call   0x140006f70
   1400107b6:	mov    DWORD PTR [rbx+0x4],edi
   1400107b9:	mov    QWORD PTR [rbx+0x220],rsi
   1400107c0:	cmp    DWORD PTR [rsp+0x20],r15d
   1400107c5:	jbe    0x140010871
   1400107cb:	lea    rdx,[rsp+0x26]
   1400107d0:	cmp    BYTE PTR [rsp+0x26],sil
   1400107d5:	je     0x140010810
   1400107d7:	cmp    BYTE PTR [rdx+0x1],sil
   1400107db:	je     0x140010810
   1400107dd:	movzx  edi,BYTE PTR [rdx+0x1]
   1400107e1:	movzx  r8d,BYTE PTR [rdx]
   1400107e5:	cmp    r8d,edi
   1400107e8:	ja     0x140010807
   1400107ea:	lea    ecx,[r8+0x1]
   1400107ee:	lea    rax,[rbx+0x18]
   1400107f2:	add    rax,rcx
   1400107f5:	sub    edi,r8d
   1400107f8:	lea    ecx,[r15+rdi*1]
   1400107fc:	or     BYTE PTR [rax],0x4
   1400107ff:	add    rax,r15
   140010802:	sub    rcx,r15
   140010805:	jne    0x1400107fc
   140010807:	add    rdx,0x2
   14001080b:	cmp    BYTE PTR [rdx],sil
   14001080e:	jne    0x1400107d7
   140010810:	lea    rax,[rbx+0x1a]
   140010814:	mov    ecx,0xfe
   140010819:	or     BYTE PTR [rax],0x8
   14001081c:	add    rax,r15
   14001081f:	sub    rcx,r15
   140010822:	jne    0x140010819
   140010824:	mov    ecx,DWORD PTR [rbx+0x4]
   140010827:	sub    ecx,0x3a4
   14001082d:	je     0x14001085d
   14001082f:	sub    ecx,0x4
   140010832:	je     0x140010854
   140010834:	sub    ecx,0xd
   140010837:	je     0x14001084b
   140010839:	dec    ecx
   14001083b:	je     0x140010842
   14001083d:	mov    rax,rsi
   140010840:	jmp    0x140010864
   140010842:	mov    rax,QWORD PTR [rip+0x225d7]        # 0x140032e20
   140010849:	jmp    0x140010864
   14001084b:	mov    rax,QWORD PTR [rip+0x225c6]        # 0x140032e18
   140010852:	jmp    0x140010864
   140010854:	mov    rax,QWORD PTR [rip+0x225b5]        # 0x140032e10
   14001085b:	jmp    0x140010864
   14001085d:	mov    rax,QWORD PTR [rip+0x225a4]        # 0x140032e08
   140010864:	mov    QWORD PTR [rbx+0x220],rax
   14001086b:	mov    DWORD PTR [rbx+0x8],r15d
   14001086f:	jmp    0x140010874
   140010871:	mov    DWORD PTR [rbx+0x8],esi
   140010874:	lea    rdi,[rbx+0xc]
   140010878:	movzx  eax,si
   14001087b:	mov    ecx,0x6
   140010880:	rep stos WORD PTR es:[rdi],ax
   140010883:	jmp    0x140010986
   140010888:	cmp    DWORD PTR [rip+0x2e06a],esi        # 0x14003e8f8
   14001088e:	jne    0x14001073d
   140010894:	or     eax,0xffffffff
   140010897:	jmp    0x140010990
   14001089c:	lea    rcx,[rbx+0x18]
   1400108a0:	xor    edx,edx
   1400108a2:	mov    r8d,0x101
   1400108a8:	call   0x140006f70
   1400108ad:	mov    eax,ebp
   1400108af:	lea    r9,[r12+0x10]
   1400108b4:	lea    r11,[rax+rax*2]
   1400108b8:	lea    r14,[rip+0x2c049]        # 0x14003c908
   1400108bf:	mov    ebp,0x4
   1400108c4:	shl    r11,0x4
   1400108c8:	add    r9,r11
   1400108cb:	mov    rdx,r9
   1400108ce:	cmp    BYTE PTR [r9],sil
   1400108d1:	je     0x140010913
   1400108d3:	cmp    BYTE PTR [rdx+0x1],sil
   1400108d7:	je     0x140010913
   1400108d9:	movzx  r8d,BYTE PTR [rdx]
   1400108dd:	movzx  eax,BYTE PTR [rdx+0x1]
   1400108e1:	cmp    r8d,eax
   1400108e4:	ja     0x14001090a
   1400108e6:	lea    r10d,[r8+0x1]
   1400108ea:	cmp    r10d,0x101
   1400108f1:	jae    0x14001090a
   1400108f3:	mov    al,BYTE PTR [r14]
   1400108f6:	add    r8d,r15d
   1400108f9:	or     BYTE PTR [r10+rbx*1+0x18],al
   1400108fe:	movzx  eax,BYTE PTR [rdx+0x1]
   140010902:	add    r10d,r15d
   140010905:	cmp    r8d,eax
   140010908:	jbe    0x1400108ea
   14001090a:	add    rdx,0x2
   14001090e:	cmp    BYTE PTR [rdx],sil
   140010911:	jne    0x1400108d3
   140010913:	add    r9,0x8
   140010917:	add    r14,r15
   14001091a:	sub    rbp,r15
   14001091d:	jne    0x1400108cb
   14001091f:	mov    DWORD PTR [rbx+0x4],edi
   140010922:	mov    DWORD PTR [rbx+0x8],r15d
   140010926:	sub    edi,0x3a4
   14001092c:	je     0x140010957
   14001092e:	sub    edi,0x4
   140010931:	je     0x14001094e
   140010933:	sub    edi,0xd
   140010936:	je     0x140010945
   140010938:	dec    edi
   14001093a:	jne    0x14001095e
   14001093c:	mov    rsi,QWORD PTR [rip+0x224dd]        # 0x140032e20
   140010943:	jmp    0x14001095e
   140010945:	mov    rsi,QWORD PTR [rip+0x224cc]        # 0x140032e18
   14001094c:	jmp    0x14001095e
   14001094e:	mov    rsi,QWORD PTR [rip+0x224bb]        # 0x140032e10
   140010955:	jmp    0x14001095e
   140010957:	mov    rsi,QWORD PTR [rip+0x224aa]        # 0x140032e08
   14001095e:	sub    r11,rbx
   140010961:	mov    QWORD PTR [rbx+0x220],rsi
   140010968:	lea    rcx,[rbx+0xc]
   14001096c:	lea    rdi,[r11+r12*1]
   140010970:	mov    edx,0x6
   140010975:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14001097a:	mov    WORD PTR [rcx],ax
   14001097d:	lea    rcx,[rcx+0x2]
   140010981:	sub    rdx,r15
   140010984:	jne    0x140010975
   140010986:	mov    rcx,rbx
   140010989:	call   0x1400101e8
   14001098e:	xor    eax,eax
   140010990:	mov    rcx,QWORD PTR [rsp+0x38]
   140010995:	xor    rcx,rsp
   140010998:	call   0x14000c380
   14001099d:	lea    r11,[rsp+0x40]
   1400109a2:	mov    rbx,QWORD PTR [r11+0x40]
   1400109a6:	mov    rbp,QWORD PTR [r11+0x48]
   1400109aa:	mov    rsp,r11
   1400109ad:	pop    r15
   1400109af:	pop    r14
   1400109b1:	pop    r12
   1400109b3:	pop    rdi
   1400109b4:	pop    rsi
   1400109b5:	ret    
   1400109b6:	int3   
   1400109b7:	int3   
   1400109b8:	test   ecx,ecx
   1400109ba:	je     0x1400109ee
   1400109bc:	push   rbx
   1400109bd:	sub    rsp,0x20
   1400109c1:	test   DWORD PTR [rdx+0x18],0x1000
   1400109c8:	mov    rbx,rdx
   1400109cb:	je     0x1400109e9
   1400109cd:	mov    rcx,rdx
   1400109d0:	call   0x14001ce2c
   1400109d5:	and    DWORD PTR [rbx+0x18],0xffffeeff
   1400109dc:	and    DWORD PTR [rbx+0x24],0x0
   1400109e0:	and    QWORD PTR [rbx],0x0
   1400109e4:	and    QWORD PTR [rbx+0x10],0x0
   1400109e9:	add    rsp,0x20
   1400109ed:	pop    rbx
   1400109ee:	ret    
   1400109ef:	int3   
   1400109f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400109f5:	mov    QWORD PTR [rsp+0x10],rdi
   1400109fa:	push   r14
   1400109fc:	sub    rsp,0x20
   140010a00:	mov    rbx,rcx
   140010a03:	call   0x140010f18
   140010a08:	mov    ecx,eax
   140010a0a:	call   0x140010f40
   140010a0f:	test   eax,eax
   140010a11:	je     0x140010aac
   140010a17:	call   0x140010e04
   140010a1c:	add    rax,0x30
   140010a20:	cmp    rbx,rax
   140010a23:	jne    0x140010a29
   140010a25:	xor    eax,eax
   140010a27:	jmp    0x140010a3c
   140010a29:	call   0x140010e04
   140010a2e:	add    rax,0x60
   140010a32:	cmp    rbx,rax
   140010a35:	jne    0x140010aac
   140010a37:	mov    eax,0x1
   140010a3c:	inc    DWORD PTR [rip+0x2dece]        # 0x14003e910
   140010a42:	test   DWORD PTR [rbx+0x18],0x10c
   140010a49:	jne    0x140010aac
   140010a4b:	lea    r14,[rip+0x2deae]        # 0x14003e900
   140010a52:	movsxd rdi,eax
   140010a55:	mov    rax,QWORD PTR [r14+rdi*8]
   140010a59:	test   rax,rax
   140010a5c:	jne    0x140010a89
   140010a5e:	mov    ecx,0x1000
   140010a63:	call   0x140008684
   140010a68:	mov    QWORD PTR [r14+rdi*8],rax
   140010a6c:	test   rax,rax
   140010a6f:	jne    0x140010a89
   140010a71:	lea    rax,[rbx+0x20]
   140010a75:	mov    QWORD PTR [rbx+0x10],rax
   140010a79:	mov    QWORD PTR [rbx],rax
   140010a7c:	mov    eax,0x2
   140010a81:	mov    DWORD PTR [rbx+0x24],eax
   140010a84:	mov    DWORD PTR [rbx+0x8],eax
   140010a87:	jmp    0x140010a9e
   140010a89:	mov    QWORD PTR [rbx+0x10],rax
   140010a8d:	mov    QWORD PTR [rbx],rax
   140010a90:	mov    DWORD PTR [rbx+0x24],0x1000
   140010a97:	mov    DWORD PTR [rbx+0x8],0x1000
   140010a9e:	or     DWORD PTR [rbx+0x18],0x1102
   140010aa5:	mov    eax,0x1
   140010aaa:	jmp    0x140010aae
   140010aac:	xor    eax,eax
   140010aae:	mov    rbx,QWORD PTR [rsp+0x30]
   140010ab3:	mov    rdi,QWORD PTR [rsp+0x38]
   140010ab8:	add    rsp,0x20
   140010abc:	pop    r14
   140010abe:	ret    
   140010abf:	int3   
   140010ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140010ac5:	mov    QWORD PTR [rsp+0x10],rsi
   140010aca:	push   rdi
   140010acb:	sub    rsp,0x20
   140010acf:	mov    rbx,rdx
   140010ad2:	mov    rdi,rcx
   140010ad5:	test   rcx,rcx
   140010ad8:	jne    0x140010ae4
   140010ada:	mov    rcx,rdx
   140010add:	call   0x140007c64
   140010ae2:	jmp    0x140010b4e
   140010ae4:	test   rdx,rdx
   140010ae7:	jne    0x140010af0
   140010ae9:	call   0x140007dc0
   140010aee:	jmp    0x140010b4c
   140010af0:	cmp    rdx,0xffffffffffffffe0
   140010af4:	ja     0x140010b39
   140010af6:	mov    rcx,QWORD PTR [rip+0x2d203]        # 0x14003dd00
   140010afd:	mov    eax,0x1
   140010b02:	test   rbx,rbx
   140010b05:	cmove  rbx,rax
   140010b09:	mov    r8,rdi
   140010b0c:	xor    edx,edx
   140010b0e:	mov    r9,rbx
   140010b11:	call   QWORD PTR [rip+0x1b539]        # 0x14002c050
   140010b17:	mov    rsi,rax
   140010b1a:	test   rax,rax
   140010b1d:	jne    0x140010b8e
   140010b1f:	cmp    DWORD PTR [rip+0x2db6b],eax        # 0x14003e690
   140010b25:	je     0x140010b77
   140010b27:	mov    rcx,rbx
   140010b2a:	call   0x140007d84
   140010b2f:	test   eax,eax
   140010b31:	je     0x140010b5e
   140010b33:	cmp    rbx,0xffffffffffffffe0
   140010b37:	jbe    0x140010af6
   140010b39:	mov    rcx,rbx
   140010b3c:	call   0x140007d84
   140010b41:	call   0x140009cb4
   140010b46:	mov    DWORD PTR [rax],0xc
   140010b4c:	xor    eax,eax
   140010b4e:	mov    rbx,QWORD PTR [rsp+0x30]
   140010b53:	mov    rsi,QWORD PTR [rsp+0x38]
   140010b58:	add    rsp,0x20
   140010b5c:	pop    rdi
   140010b5d:	ret    
   140010b5e:	call   0x140009cb4
   140010b63:	mov    rbx,rax
   140010b66:	call   QWORD PTR [rip+0x1b5e4]        # 0x14002c150
   140010b6c:	mov    ecx,eax
   140010b6e:	call   0x140009d4c
   140010b73:	mov    DWORD PTR [rbx],eax
   140010b75:	jmp    0x140010b4c
   140010b77:	call   0x140009cb4
   140010b7c:	mov    rbx,rax
   140010b7f:	call   QWORD PTR [rip+0x1b5cb]        # 0x14002c150
   140010b85:	mov    ecx,eax
   140010b87:	call   0x140009d4c
   140010b8c:	mov    DWORD PTR [rbx],eax
   140010b8e:	mov    rax,rsi
   140010b91:	jmp    0x140010b4e
   140010b93:	int3   
   140010b94:	mov    QWORD PTR [rsp+0x8],rbx
   140010b99:	mov    QWORD PTR [rsp+0x10],rsi
   140010b9e:	push   rdi
   140010b9f:	sub    rsp,0x20
   140010ba3:	xor    edi,edi
   140010ba5:	mov    rbx,rdx
   140010ba8:	mov    rsi,rcx
   140010bab:	test   rdx,rdx
   140010bae:	je     0x140010bcd
   140010bb0:	xor    edx,edx
   140010bb2:	lea    rax,[rdi-0x20]
   140010bb6:	div    rbx
   140010bb9:	cmp    rax,r8
   140010bbc:	jae    0x140010bcd
   140010bbe:	call   0x140009cb4
   140010bc3:	mov    DWORD PTR [rax],0xc
   140010bc9:	xor    eax,eax
   140010bcb:	jmp    0x140010c0a
   140010bcd:	imul   rbx,r8
   140010bd1:	test   rcx,rcx
   140010bd4:	je     0x140010bde
   140010bd6:	call   0x1400085c8
   140010bdb:	mov    rdi,rax
   140010bde:	mov    rdx,rbx
   140010be1:	mov    rcx,rsi
   140010be4:	call   0x140010ac0
   140010be9:	mov    rsi,rax
   140010bec:	test   rax,rax
   140010bef:	je     0x140010c07
   140010bf1:	cmp    rdi,rbx
   140010bf4:	jae    0x140010c07
   140010bf6:	sub    rbx,rdi
   140010bf9:	lea    rcx,[rdi+rax*1]
   140010bfd:	xor    edx,edx
   140010bff:	mov    r8,rbx
   140010c02:	call   0x140006f70
   140010c07:	mov    rax,rsi
   140010c0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c0f:	mov    rsi,QWORD PTR [rsp+0x38]
   140010c14:	add    rsp,0x20
   140010c18:	pop    rdi
   140010c19:	ret    
   140010c1a:	int3   
   140010c1b:	int3   
   140010c1c:	mov    QWORD PTR [rsp+0x8],rbx
   140010c21:	push   rdi
   140010c22:	sub    rsp,0x20
   140010c26:	mov    rdi,r8
   140010c29:	mov    rbx,rdx
   140010c2c:	test   rcx,rcx
   140010c2f:	je     0x140010c4e
   140010c31:	xor    edx,edx
   140010c33:	lea    rax,[rdx-0x20]
   140010c37:	div    rcx
   140010c3a:	cmp    rax,rbx
   140010c3d:	jae    0x140010c4e
   140010c3f:	call   0x140009cb4
   140010c44:	mov    DWORD PTR [rax],0xc
   140010c4a:	xor    eax,eax
   140010c4c:	jmp    0x140010cab
   140010c4e:	imul   rbx,rcx
   140010c52:	mov    eax,0x1
   140010c57:	test   rbx,rbx
   140010c5a:	cmove  rbx,rax
   140010c5e:	xor    eax,eax
   140010c60:	cmp    rbx,0xffffffffffffffe0
   140010c64:	ja     0x140010c7e
   140010c66:	mov    rcx,QWORD PTR [rip+0x2d093]        # 0x14003dd00
   140010c6d:	lea    edx,[rax+0x8]
   140010c70:	mov    r8,rbx
   140010c73:	call   QWORD PTR [rip+0x1b4df]        # 0x14002c158
   140010c79:	test   rax,rax
   140010c7c:	jne    0x140010cab
   140010c7e:	cmp    DWORD PTR [rip+0x2da0b],0x0        # 0x14003e690
   140010c85:	je     0x140010ca0
   140010c87:	mov    rcx,rbx
   140010c8a:	call   0x140007d84
   140010c8f:	test   eax,eax
   140010c91:	jne    0x140010c5e
   140010c93:	test   rdi,rdi
   140010c96:	je     0x140010c4a
   140010c98:	mov    DWORD PTR [rdi],0xc
   140010c9e:	jmp    0x140010c4a
   140010ca0:	test   rdi,rdi
   140010ca3:	je     0x140010cab
   140010ca5:	mov    DWORD PTR [rdi],0xc
   140010cab:	mov    rbx,QWORD PTR [rsp+0x30]
   140010cb0:	add    rsp,0x20
   140010cb4:	pop    rdi
   140010cb5:	ret    
   140010cb6:	int3   
   140010cb7:	int3   
   140010cb8:	int3   
   140010cb9:	int3   
   140010cba:	int3   
   140010cbb:	int3   
   140010cbc:	int3   
   140010cbd:	int3   
   140010cbe:	int3   
   140010cbf:	int3   
   140010cc0:	int3   
   140010cc1:	int3   
   140010cc2:	int3   
   140010cc3:	int3   
   140010cc4:	int3   
   140010cc5:	int3   
   140010cc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140010cd0:	sub    rsp,0x4d8
   140010cd7:	xor    r8,r8
   140010cda:	xor    r9,r9
   140010cdd:	mov    QWORD PTR [rsp+0x20],rsp
   140010ce2:	mov    QWORD PTR [rsp+0x28],r8
   140010ce7:	call   0x14002a600
   140010cec:	add    rsp,0x4d8
   140010cf3:	ret    
   140010cf4:	int3   
   140010cf5:	int3   
   140010cf6:	int3   
   140010cf7:	int3   
   140010cf8:	int3   
   140010cf9:	int3   
   140010cfa:	nop    WORD PTR [rax+rax*1+0x0]
   140010d00:	mov    QWORD PTR [rsp+0x8],rcx
   140010d05:	mov    QWORD PTR [rsp+0x18],rdx
   140010d0a:	mov    DWORD PTR [rsp+0x10],r8d
   140010d0f:	mov    r9,0x19930520
   140010d16:	jmp    0x140010d20
   140010d18:	int3   
   140010d19:	int3   
   140010d1a:	int3   
   140010d1b:	int3   
   140010d1c:	int3   
   140010d1d:	int3   
   140010d1e:	xchg   ax,ax
   140010d20:	ret    
   140010d21:	int3   
   140010d22:	int3   
   140010d23:	int3   
   140010d24:	int3   
   140010d25:	int3   
   140010d26:	int3   
   140010d27:	nop    WORD PTR [rax+rax*1+0x0]
   140010d30:	ret    
   140010d31:	int3   
   140010d32:	int3   
   140010d33:	int3   
   140010d34:	and    DWORD PTR [rip+0x2f285],0x0        # 0x14003ffc0
   140010d3b:	ret    
   140010d3c:	mov    QWORD PTR [rsp+0x8],rbx
   140010d41:	push   rdi
   140010d42:	sub    rsp,0x20
   140010d46:	mov    eax,DWORD PTR [rip+0x2e254]        # 0x14003efa0
   140010d4c:	xor    ebx,ebx
   140010d4e:	mov    edi,0x14
   140010d53:	test   eax,eax
   140010d55:	jne    0x140010d5e
   140010d57:	mov    eax,0x200
   140010d5c:	jmp    0x140010d63
   140010d5e:	cmp    eax,edi
   140010d60:	cmovl  eax,edi
   140010d63:	movsxd rcx,eax
   140010d66:	mov    edx,0x8
   140010d6b:	mov    DWORD PTR [rip+0x2e22f],eax        # 0x14003efa0
   140010d71:	call   0x140008604
   140010d76:	mov    QWORD PTR [rip+0x2e21b],rax        # 0x14003ef98
   140010d7d:	test   rax,rax
   140010d80:	jne    0x140010da6
   140010d82:	lea    edx,[rax+0x8]
   140010d85:	mov    rcx,rdi
   140010d88:	mov    DWORD PTR [rip+0x2e212],edi        # 0x14003efa0
   140010d8e:	call   0x140008604
   140010d93:	mov    QWORD PTR [rip+0x2e1fe],rax        # 0x14003ef98
   140010d9a:	test   rax,rax
   140010d9d:	jne    0x140010da6
   140010d9f:	mov    eax,0x1a
   140010da4:	jmp    0x140010dc9
   140010da6:	lea    rcx,[rip+0x2bc63]        # 0x14003ca10
   140010dad:	mov    QWORD PTR [rbx+rax*1],rcx
   140010db1:	add    rcx,0x30
   140010db5:	lea    rbx,[rbx+0x8]
   140010db9:	dec    rdi
   140010dbc:	je     0x140010dc7
   140010dbe:	mov    rax,QWORD PTR [rip+0x2e1d3]        # 0x14003ef98
   140010dc5:	jmp    0x140010dad
   140010dc7:	xor    eax,eax
   140010dc9:	mov    rbx,QWORD PTR [rsp+0x30]
   140010dce:	add    rsp,0x20
   140010dd2:	pop    rdi
   140010dd3:	ret    
   140010dd4:	sub    rsp,0x28
   140010dd8:	call   0x14001cea8
   140010ddd:	cmp    BYTE PTR [rip+0x2ced0],0x0        # 0x14003dcb4
   140010de4:	je     0x140010deb
   140010de6:	call   0x14001cfe0
   140010deb:	mov    rcx,QWORD PTR [rip+0x2e1a6]        # 0x14003ef98
   140010df2:	call   0x140007dc0
   140010df7:	and    QWORD PTR [rip+0x2e199],0x0        # 0x14003ef98
   140010dff:	add    rsp,0x28
   140010e03:	ret    
   140010e04:	lea    rax,[rip+0x2bc05]        # 0x14003ca10
   140010e0b:	ret    
   140010e0c:	rex push rbx
   140010e0e:	sub    rsp,0x20
   140010e12:	mov    rbx,rcx
   140010e15:	lea    rcx,[rip+0x2bbf4]        # 0x14003ca10
   140010e1c:	cmp    rbx,rcx
   140010e1f:	jb     0x140010e61
   140010e21:	lea    rax,[rip+0x2bf78]        # 0x14003cda0
   140010e28:	cmp    rbx,rax
   140010e2b:	ja     0x140010e61
   140010e2d:	mov    rdx,rbx
   140010e30:	movabs rax,0x2aaaaaaaaaaaaaab
   140010e3a:	sub    rdx,rcx
   140010e3d:	imul   rdx
   140010e40:	sar    rdx,0x3
   140010e44:	mov    rcx,rdx
   140010e47:	shr    rcx,0x3f
   140010e4b:	add    rcx,rdx
   140010e4e:	add    ecx,0x10
   140010e51:	call   0x14000fc2c
   140010e56:	bts    DWORD PTR [rbx+0x18],0xf
   140010e5b:	add    rsp,0x20
   140010e5f:	pop    rbx
   140010e60:	ret    
   140010e61:	lea    rcx,[rbx+0x30]
   140010e65:	add    rsp,0x20
   140010e69:	pop    rbx
   140010e6a:	rex.W jmp QWORD PTR [rip+0x1b227]        # 0x14002c098
   140010e71:	int3   
   140010e72:	int3   
   140010e73:	int3   
   140010e74:	rex push rbx
   140010e76:	sub    rsp,0x20
   140010e7a:	mov    rbx,rdx
   140010e7d:	cmp    ecx,0x14
   140010e80:	jge    0x140010e95
   140010e82:	add    ecx,0x10
   140010e85:	call   0x14000fc2c
   140010e8a:	bts    DWORD PTR [rbx+0x18],0xf
   140010e8f:	add    rsp,0x20
   140010e93:	pop    rbx
   140010e94:	ret    
   140010e95:	lea    rcx,[rdx+0x30]
   140010e99:	add    rsp,0x20
   140010e9d:	pop    rbx
   140010e9e:	rex.W jmp QWORD PTR [rip+0x1b1f3]        # 0x14002c098
   140010ea5:	int3   
   140010ea6:	int3   
   140010ea7:	int3   
   140010ea8:	lea    rdx,[rip+0x2bb61]        # 0x14003ca10
   140010eaf:	cmp    rcx,rdx
   140010eb2:	jb     0x140010eeb
   140010eb4:	lea    rax,[rip+0x2bee5]        # 0x14003cda0
   140010ebb:	cmp    rcx,rax
   140010ebe:	ja     0x140010eeb
   140010ec0:	btr    DWORD PTR [rcx+0x18],0xf
   140010ec5:	sub    rcx,rdx
   140010ec8:	movabs rax,0x2aaaaaaaaaaaaaab
   140010ed2:	imul   rcx
   140010ed5:	sar    rdx,0x3
   140010ed9:	mov    rcx,rdx
   140010edc:	shr    rcx,0x3f
   140010ee0:	add    rcx,rdx
   140010ee3:	add    ecx,0x10
   140010ee6:	jmp    0x14000fe48
   140010eeb:	add    rcx,0x30
   140010eef:	rex.W jmp QWORD PTR [rip+0x1b19a]        # 0x14002c090
   140010ef6:	int3   
   140010ef7:	int3   
   140010ef8:	cmp    ecx,0x14
   140010efb:	jge    0x140010f0a
   140010efd:	btr    DWORD PTR [rdx+0x18],0xf
   140010f02:	add    ecx,0x10
   140010f05:	jmp    0x14000fe48
   140010f0a:	lea    rcx,[rdx+0x30]
   140010f0e:	rex.W jmp QWORD PTR [rip+0x1b17b]        # 0x14002c090
   140010f15:	int3   
   140010f16:	int3   
   140010f17:	int3   
   140010f18:	sub    rsp,0x28
   140010f1c:	test   rcx,rcx
   140010f1f:	jne    0x140010f36
   140010f21:	call   0x140009cb4
   140010f26:	mov    DWORD PTR [rax],0x16
   140010f2c:	call   0x140008d58
   140010f31:	or     eax,0xffffffff
   140010f34:	jmp    0x140010f39
   140010f36:	mov    eax,DWORD PTR [rcx+0x1c]
   140010f39:	add    rsp,0x28
   140010f3d:	ret    
   140010f3e:	int3   
   140010f3f:	int3   
   140010f40:	sub    rsp,0x28
   140010f44:	cmp    ecx,0xfffffffe
   140010f47:	jne    0x140010f56
   140010f49:	call   0x140009cb4
   140010f4e:	mov    DWORD PTR [rax],0x9
   140010f54:	jmp    0x140010f98
   140010f56:	test   ecx,ecx
   140010f58:	js     0x140010f88
   140010f5a:	cmp    ecx,DWORD PTR [rip+0x2f188]        # 0x1400400e8
   140010f60:	jae    0x140010f88
   140010f62:	movsxd rcx,ecx
   140010f65:	lea    rdx,[rip+0x2cda4]        # 0x14003dd10
   140010f6c:	mov    rax,rcx
   140010f6f:	and    ecx,0x1f
   140010f72:	sar    rax,0x5
   140010f76:	imul   rcx,rcx,0x58
   140010f7a:	mov    rax,QWORD PTR [rdx+rax*8]
   140010f7e:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   140010f83:	and    eax,0x40
   140010f86:	jmp    0x140010f9a
   140010f88:	call   0x140009cb4
   140010f8d:	mov    DWORD PTR [rax],0x9
   140010f93:	call   0x140008d58
   140010f98:	xor    eax,eax
   140010f9a:	add    rsp,0x28
   140010f9e:	ret    
   140010f9f:	int3   
   140010fa0:	mov    QWORD PTR [rsp+0x10],rbx
   140010fa5:	mov    DWORD PTR [rsp+0x8],ecx
   140010fa9:	push   rsi
   140010faa:	push   rdi
   140010fab:	push   r12
   140010fad:	push   r14
   140010faf:	push   r15
   140010fb1:	sub    rsp,0x20
   140010fb5:	mov    esi,r8d
   140010fb8:	mov    r14,rdx
   140010fbb:	movsxd rbx,ecx
   140010fbe:	cmp    ebx,0xfffffffe
   140010fc1:	jne    0x140010fdb
   140010fc3:	call   0x140009c44
   140010fc8:	and    DWORD PTR [rax],0x0
   140010fcb:	call   0x140009cb4
   140010fd0:	mov    DWORD PTR [rax],0x9
   140010fd6:	jmp    0x14001106c
   140010fdb:	test   ecx,ecx
   140010fdd:	js     0x140011054
   140010fdf:	cmp    ebx,DWORD PTR [rip+0x2f103]        # 0x1400400e8
   140010fe5:	jae    0x140011054
   140010fe7:	mov    rax,rbx
   140010fea:	mov    rdi,rbx
   140010fed:	sar    rdi,0x5
   140010ff1:	lea    r12,[rip+0x2cd18]        # 0x14003dd10
   140010ff8:	and    eax,0x1f
   140010ffb:	imul   r15,rax,0x58
   140010fff:	mov    rax,QWORD PTR [r12+rdi*8]
   140011003:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   140011009:	and    ecx,0x1
   14001100c:	je     0x140011054
   14001100e:	mov    ecx,ebx
   140011010:	call   0x14001d088
   140011015:	nop
   140011016:	mov    rax,QWORD PTR [r12+rdi*8]
   14001101a:	test   BYTE PTR [rax+r15*1+0x8],0x1
   140011020:	je     0x140011033
   140011022:	mov    r8d,esi
   140011025:	mov    rdx,r14
   140011028:	mov    ecx,ebx
   14001102a:	call   0x140011084
   14001102f:	mov    edi,eax
   140011031:	jmp    0x140011049
   140011033:	call   0x140009cb4
   140011038:	mov    DWORD PTR [rax],0x9
   14001103e:	call   0x140009c44
   140011043:	and    DWORD PTR [rax],0x0
   140011046:	or     edi,0xffffffff
   140011049:	mov    ecx,ebx
   14001104b:	call   0x14001d5e4
   140011050:	mov    eax,edi
   140011052:	jmp    0x14001106f
   140011054:	call   0x140009c44
   140011059:	and    DWORD PTR [rax],0x0
   14001105c:	call   0x140009cb4
   140011061:	mov    DWORD PTR [rax],0x9
   140011067:	call   0x140008d58
   14001106c:	or     eax,0xffffffff
   14001106f:	mov    rbx,QWORD PTR [rsp+0x58]
   140011074:	add    rsp,0x20
   140011078:	pop    r15
   14001107a:	pop    r14
   14001107c:	pop    r12
   14001107e:	pop    rdi
   14001107f:	pop    rsi
   140011080:	ret    
   140011081:	int3   
   140011082:	int3   
   140011083:	int3   
   140011084:	mov    QWORD PTR [rsp+0x20],rbx
   140011089:	push   rbp
   14001108a:	push   rsi
   14001108b:	push   rdi
   14001108c:	push   r12
   14001108e:	push   r13
   140011090:	push   r14
   140011092:	push   r15
   140011094:	lea    rbp,[rsp-0x1a40]
   14001109c:	mov    eax,0x1b40
   1400110a1:	call   0x140006e30
   1400110a6:	sub    rsp,rax
   1400110a9:	mov    rax,QWORD PTR [rip+0x2b120]        # 0x14003c1d0
   1400110b0:	xor    rax,rsp
   1400110b3:	mov    QWORD PTR [rbp+0x1a30],rax
   1400110ba:	xor    r12d,r12d
   1400110bd:	mov    r15d,r8d
   1400110c0:	mov    r14,rdx
   1400110c3:	movsxd rdi,ecx
   1400110c6:	mov    DWORD PTR [rsp+0x40],r12d
   1400110cb:	mov    ebx,r12d
   1400110ce:	mov    esi,r12d
   1400110d1:	test   r8d,r8d
   1400110d4:	jne    0x1400110dd
   1400110d6:	xor    eax,eax
   1400110d8:	jmp    0x14001184b
   1400110dd:	test   rdx,rdx
   1400110e0:	jne    0x140011102
   1400110e2:	call   0x140009c44
   1400110e7:	mov    DWORD PTR [rax],r12d
   1400110ea:	call   0x140009cb4
   1400110ef:	mov    DWORD PTR [rax],0x16
   1400110f5:	call   0x140008d58
   1400110fa:	or     eax,0xffffffff
   1400110fd:	jmp    0x14001184b
   140011102:	mov    rax,rdi
   140011105:	mov    rcx,rdi
   140011108:	lea    rdx,[rip+0x2cc01]        # 0x14003dd10
   14001110f:	sar    rcx,0x5
   140011113:	and    eax,0x1f
   140011116:	mov    QWORD PTR [rsp+0x48],rcx
   14001111b:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14001111f:	imul   r13,rax,0x58
   140011123:	mov    r12b,BYTE PTR [r13+rcx*1+0x38]
   140011128:	mov    QWORD PTR [rsp+0x58],r13
   14001112d:	add    r12b,r12b
   140011130:	sar    r12b,1
   140011133:	lea    eax,[r12-0x1]
   140011138:	cmp    al,0x1
   14001113a:	ja     0x140011150
   14001113c:	mov    eax,r15d
   14001113f:	not    eax
   140011141:	test   al,0x1
   140011143:	jne    0x140011150
   140011145:	call   0x140009c44
   14001114a:	xor    ecx,ecx
   14001114c:	mov    DWORD PTR [rax],ecx
   14001114e:	jmp    0x1400110ea
   140011150:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   140011156:	je     0x140011165
   140011158:	xor    edx,edx
   14001115a:	mov    ecx,edi
   14001115c:	lea    r8d,[rdx+0x2]
   140011160:	call   0x140011960
   140011165:	mov    ecx,edi
   140011167:	call   0x140010f40
   14001116c:	mov    rdi,QWORD PTR [rsp+0x48]
   140011171:	test   eax,eax
   140011173:	je     0x1400114b9
   140011179:	lea    rax,[rip+0x2cb90]        # 0x14003dd10
   140011180:	mov    rax,QWORD PTR [rax+rdi*8]
   140011184:	test   BYTE PTR [r13+rax*1+0x8],0x80
   14001118a:	je     0x1400114b9
   140011190:	call   0x14000a3ec
   140011195:	lea    rdx,[rsp+0x64]
   14001119a:	mov    rcx,QWORD PTR [rax+0xc0]
   1400111a1:	xor    eax,eax
   1400111a3:	cmp    QWORD PTR [rcx+0x138],rax
   1400111aa:	mov    edi,eax
   1400111ac:	mov    rax,QWORD PTR [rsp+0x48]
   1400111b1:	lea    rcx,[rip+0x2cb58]        # 0x14003dd10
   1400111b8:	sete   dil
   1400111bc:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400111c0:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   1400111c5:	call   QWORD PTR [rip+0x1ae75]        # 0x14002c040
   1400111cb:	xor    ecx,ecx
   1400111cd:	test   eax,eax
   1400111cf:	je     0x1400114b4
   1400111d5:	xor    eax,eax
   1400111d7:	test   edi,edi
   1400111d9:	je     0x1400111e4
   1400111db:	test   r12b,r12b
   1400111de:	je     0x1400114ad
   1400111e4:	call   QWORD PTR [rip+0x1ae5e]        # 0x14002c048
   1400111ea:	mov    rdi,r14
   1400111ed:	mov    DWORD PTR [rsp+0x68],eax
   1400111f1:	xor    eax,eax
   1400111f3:	movzx  ecx,ax
   1400111f6:	mov    WORD PTR [rsp+0x44],ax
   1400111fb:	mov    DWORD PTR [rsp+0x60],eax
   1400111ff:	test   r15d,r15d
   140011202:	je     0x14001180e
   140011208:	mov    r13d,eax
   14001120b:	test   r12b,r12b
   14001120e:	jne    0x1400113b7
   140011214:	mov    cl,BYTE PTR [rdi]
   140011216:	mov    r13,QWORD PTR [rsp+0x58]
   14001121b:	lea    rdx,[rip+0x2caee]        # 0x14003dd10
   140011222:	cmp    cl,0xa
   140011225:	sete   al
   140011228:	xor    r8d,r8d
   14001122b:	mov    DWORD PTR [rsp+0x64],eax
   14001122f:	mov    rax,QWORD PTR [rsp+0x48]
   140011234:	mov    rdx,QWORD PTR [rdx+rax*8]
   140011238:	cmp    DWORD PTR [r13+rdx*1+0x50],r8d
   14001123d:	je     0x14001125e
   14001123f:	mov    al,BYTE PTR [r13+rdx*1+0x4c]
   140011244:	mov    BYTE PTR [rsp+0x6d],cl
   140011248:	mov    BYTE PTR [rsp+0x6c],al
   14001124c:	mov    DWORD PTR [r13+rdx*1+0x50],r8d
   140011251:	mov    r8d,0x2
   140011257:	lea    rdx,[rsp+0x6c]
   14001125c:	jmp    0x1400112a7
   14001125e:	movsx  ecx,cl
   140011261:	call   0x140011f7c
   140011266:	test   eax,eax
   140011268:	je     0x14001129e
   14001126a:	mov    rax,r15
   14001126d:	sub    rax,rdi
   140011270:	add    rax,r14
   140011273:	cmp    rax,0x1
   140011277:	jle    0x140011430
   14001127d:	lea    rcx,[rsp+0x44]
   140011282:	mov    r8d,0x2
   140011288:	mov    rdx,rdi
   14001128b:	call   0x1400125d0
   140011290:	cmp    eax,0xffffffff
   140011293:	je     0x140011472
   140011299:	inc    rdi
   14001129c:	jmp    0x1400112ba
   14001129e:	mov    r8d,0x1
   1400112a4:	mov    rdx,rdi
   1400112a7:	lea    rcx,[rsp+0x44]
   1400112ac:	call   0x1400125d0
   1400112b1:	cmp    eax,0xffffffff
   1400112b4:	je     0x140011472
   1400112ba:	mov    ecx,DWORD PTR [rsp+0x68]
   1400112be:	xor    eax,eax
   1400112c0:	lea    r8,[rsp+0x44]
   1400112c5:	mov    QWORD PTR [rsp+0x38],rax
   1400112ca:	mov    QWORD PTR [rsp+0x30],rax
   1400112cf:	lea    rax,[rsp+0x6c]
   1400112d4:	mov    r9d,0x1
   1400112da:	xor    edx,edx
   1400112dc:	mov    DWORD PTR [rsp+0x28],0x5
   1400112e4:	mov    QWORD PTR [rsp+0x20],rax
   1400112e9:	inc    rdi
   1400112ec:	call   QWORD PTR [rip+0x1ae9e]        # 0x14002c190
   1400112f2:	mov    r13d,eax
   1400112f5:	test   eax,eax
   1400112f7:	je     0x14001146d
   1400112fd:	mov    rax,QWORD PTR [rsp+0x48]
   140011302:	lea    rcx,[rip+0x2ca07]        # 0x14003dd10
   140011309:	lea    r9,[rsp+0x60]
   14001130e:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011312:	xor    eax,eax
   140011314:	lea    rdx,[rsp+0x6c]
   140011319:	mov    QWORD PTR [rsp+0x20],rax
   14001131e:	mov    rax,QWORD PTR [rsp+0x58]
   140011323:	mov    r8d,r13d
   140011326:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001132a:	call   QWORD PTR [rip+0x1aec0]        # 0x14002c1f0
   140011330:	test   eax,eax
   140011332:	je     0x140011465
   140011338:	mov    eax,DWORD PTR [rsp+0x40]
   14001133c:	mov    ebx,edi
   14001133e:	sub    ebx,r14d
   140011341:	add    ebx,eax
   140011343:	cmp    DWORD PTR [rsp+0x60],r13d
   140011348:	jl     0x1400117f3
   14001134e:	xor    r13d,r13d
   140011351:	cmp    DWORD PTR [rsp+0x64],r13d
   140011356:	je     0x1400113b0
   140011358:	mov    rax,QWORD PTR [rsp+0x48]
   14001135d:	lea    r8d,[r13+0x1]
   140011361:	mov    BYTE PTR [rsp+0x6c],0xd
   140011366:	lea    rcx,[rip+0x2c9a3]        # 0x14003dd10
   14001136d:	mov    QWORD PTR [rsp+0x20],r13
   140011372:	mov    r13,QWORD PTR [rsp+0x58]
   140011377:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001137b:	lea    r9,[rsp+0x60]
   140011380:	lea    rdx,[rsp+0x6c]
   140011385:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001138a:	call   QWORD PTR [rip+0x1ae60]        # 0x14002c1f0
   140011390:	test   eax,eax
   140011392:	je     0x14001145b
   140011398:	cmp    DWORD PTR [rsp+0x60],0x1
   14001139d:	jl     0x140011472
   1400113a3:	inc    DWORD PTR [rsp+0x40]
   1400113a7:	movzx  ecx,WORD PTR [rsp+0x44]
   1400113ac:	inc    ebx
   1400113ae:	jmp    0x14001141f
   1400113b0:	movzx  ecx,WORD PTR [rsp+0x44]
   1400113b5:	jmp    0x14001141a
   1400113b7:	lea    eax,[r12-0x1]
   1400113bc:	cmp    al,0x1
   1400113be:	ja     0x1400113d9
   1400113c0:	movzx  ecx,WORD PTR [rdi]
   1400113c3:	xor    eax,eax
   1400113c5:	cmp    cx,0xa
   1400113c9:	mov    r13d,eax
   1400113cc:	mov    WORD PTR [rsp+0x44],cx
   1400113d1:	sete   r13b
   1400113d5:	add    rdi,0x2
   1400113d9:	lea    eax,[r12-0x1]
   1400113de:	cmp    al,0x1
   1400113e0:	ja     0x14001141a
   1400113e2:	call   0x14001d644
   1400113e7:	movzx  ecx,WORD PTR [rsp+0x44]
   1400113ec:	cmp    ax,cx
   1400113ef:	jne    0x140011465
   1400113f1:	add    ebx,0x2
   1400113f4:	test   r13d,r13d
   1400113f7:	je     0x14001141a
   1400113f9:	mov    eax,0xd
   1400113fe:	mov    ecx,eax
   140011400:	mov    WORD PTR [rsp+0x44],ax
   140011405:	call   0x14001d644
   14001140a:	movzx  ecx,WORD PTR [rsp+0x44]
   14001140f:	cmp    ax,cx
   140011412:	jne    0x140011465
   140011414:	inc    ebx
   140011416:	inc    DWORD PTR [rsp+0x40]
   14001141a:	mov    r13,QWORD PTR [rsp+0x58]
   14001141f:	mov    eax,edi
   140011421:	sub    eax,r14d
   140011424:	cmp    eax,r15d
   140011427:	jae    0x140011472
   140011429:	xor    eax,eax
   14001142b:	jmp    0x140011208
   140011430:	mov    al,BYTE PTR [rdi]
   140011432:	mov    r15,QWORD PTR [rsp+0x48]
   140011437:	lea    r12,[rip+0x2c8d2]        # 0x14003dd10
   14001143e:	mov    rcx,QWORD PTR [r12+r15*8]
   140011442:	inc    ebx
   140011444:	mov    rdi,r15
   140011447:	mov    BYTE PTR [r13+rcx*1+0x4c],al
   14001144c:	mov    rax,QWORD PTR [r12+r15*8]
   140011450:	mov    DWORD PTR [r13+rax*1+0x50],0x1
   140011459:	jmp    0x140011477
   14001145b:	call   QWORD PTR [rip+0x1acef]        # 0x14002c150
   140011461:	mov    esi,eax
   140011463:	jmp    0x140011472
   140011465:	call   QWORD PTR [rip+0x1ace5]        # 0x14002c150
   14001146b:	mov    esi,eax
   14001146d:	mov    r13,QWORD PTR [rsp+0x58]
   140011472:	mov    rdi,QWORD PTR [rsp+0x48]
   140011477:	mov    eax,DWORD PTR [rsp+0x40]
   14001147b:	test   ebx,ebx
   14001147d:	jne    0x140011847
   140011483:	xor    ebx,ebx
   140011485:	test   esi,esi
   140011487:	je     0x140011813
   14001148d:	cmp    esi,0x5
   140011490:	jne    0x140011802
   140011496:	call   0x140009cb4
   14001149b:	mov    DWORD PTR [rax],0x9
   1400114a1:	call   0x140009c44
   1400114a6:	mov    DWORD PTR [rax],esi
   1400114a8:	jmp    0x1400110fa
   1400114ad:	mov    rdi,QWORD PTR [rsp+0x48]
   1400114b2:	jmp    0x1400114bb
   1400114b4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400114b9:	xor    eax,eax
   1400114bb:	lea    r9,[rip+0x2c84e]        # 0x14003dd10
   1400114c2:	mov    rcx,QWORD PTR [r9+rdi*8]
   1400114c6:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   1400114cc:	je     0x1400117ba
   1400114d2:	mov    esi,eax
   1400114d4:	test   r12b,r12b
   1400114d7:	jne    0x1400115b5
   1400114dd:	mov    r12,r14
   1400114e0:	test   r15d,r15d
   1400114e3:	je     0x140011813
   1400114e9:	mov    edx,0xd
   1400114ee:	jmp    0x1400114f2
   1400114f0:	xor    eax,eax
   1400114f2:	mov    r13d,DWORD PTR [rsp+0x40]
   1400114f7:	lea    rdi,[rbp+0x630]
   1400114fe:	mov    rcx,rax
   140011501:	mov    eax,r12d
   140011504:	sub    eax,r14d
   140011507:	cmp    eax,r15d
   14001150a:	jae    0x140011533
   14001150c:	mov    al,BYTE PTR [r12]
   140011510:	inc    r12
   140011513:	cmp    al,0xa
   140011515:	jne    0x140011522
   140011517:	mov    BYTE PTR [rdi],dl
   140011519:	inc    r13d
   14001151c:	inc    rdi
   14001151f:	inc    rcx
   140011522:	inc    rcx
   140011525:	mov    BYTE PTR [rdi],al
   140011527:	inc    rdi
   14001152a:	cmp    rcx,0x13ff
   140011531:	jb     0x140011501
   140011533:	lea    rax,[rbp+0x630]
   14001153a:	mov    r8d,edi
   14001153d:	mov    DWORD PTR [rsp+0x40],r13d
   140011542:	mov    r13,QWORD PTR [rsp+0x58]
   140011547:	sub    r8d,eax
   14001154a:	mov    rax,QWORD PTR [rsp+0x48]
   14001154f:	mov    rcx,QWORD PTR [r9+rax*8]
   140011553:	xor    eax,eax
   140011555:	lea    r9,[rsp+0x50]
   14001155a:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001155f:	lea    rdx,[rbp+0x630]
   140011566:	mov    QWORD PTR [rsp+0x20],rax
   14001156b:	call   QWORD PTR [rip+0x1ac7f]        # 0x14002c1f0
   140011571:	test   eax,eax
   140011573:	je     0x14001145b
   140011579:	add    ebx,DWORD PTR [rsp+0x50]
   14001157d:	lea    rax,[rbp+0x630]
   140011584:	sub    rdi,rax
   140011587:	movsxd rax,DWORD PTR [rsp+0x50]
   14001158c:	cmp    rax,rdi
   14001158f:	jl     0x140011472
   140011595:	mov    eax,r12d
   140011598:	mov    edx,0xd
   14001159d:	lea    r9,[rip+0x2c76c]        # 0x14003dd10
   1400115a4:	sub    eax,r14d
   1400115a7:	cmp    eax,r15d
   1400115aa:	jb     0x1400114f0
   1400115b0:	jmp    0x140011472
   1400115b5:	cmp    r12b,0x2
   1400115b9:	mov    r12,r14
   1400115bc:	jne    0x1400116a2
   1400115c2:	test   r15d,r15d
   1400115c5:	je     0x140011813
   1400115cb:	mov    edx,0xd
   1400115d0:	jmp    0x1400115d4
   1400115d2:	xor    eax,eax
   1400115d4:	mov    r13d,DWORD PTR [rsp+0x40]
   1400115d9:	lea    rdi,[rbp+0x630]
   1400115e0:	mov    rcx,rax
   1400115e3:	mov    eax,r12d
   1400115e6:	sub    eax,r14d
   1400115e9:	cmp    eax,r15d
   1400115ec:	jae    0x140011620
   1400115ee:	movzx  eax,WORD PTR [r12]
   1400115f3:	add    r12,0x2
   1400115f7:	cmp    ax,0xa
   1400115fb:	jne    0x14001160c
   1400115fd:	mov    WORD PTR [rdi],dx
   140011600:	add    r13d,0x2
   140011604:	add    rdi,0x2
   140011608:	add    rcx,0x2
   14001160c:	add    rcx,0x2
   140011610:	mov    WORD PTR [rdi],ax
   140011613:	add    rdi,0x2
   140011617:	cmp    rcx,0x13fe
   14001161e:	jb     0x1400115e3
   140011620:	lea    rax,[rbp+0x630]
   140011627:	mov    r8d,edi
   14001162a:	mov    DWORD PTR [rsp+0x40],r13d
   14001162f:	mov    r13,QWORD PTR [rsp+0x58]
   140011634:	sub    r8d,eax
   140011637:	mov    rax,QWORD PTR [rsp+0x48]
   14001163c:	mov    rcx,QWORD PTR [r9+rax*8]
   140011640:	xor    eax,eax
   140011642:	lea    r9,[rsp+0x50]
   140011647:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001164c:	lea    rdx,[rbp+0x630]
   140011653:	mov    QWORD PTR [rsp+0x20],rax
   140011658:	call   QWORD PTR [rip+0x1ab92]        # 0x14002c1f0
   14001165e:	test   eax,eax
   140011660:	je     0x14001145b
   140011666:	add    ebx,DWORD PTR [rsp+0x50]
   14001166a:	lea    rax,[rbp+0x630]
   140011671:	sub    rdi,rax
   140011674:	movsxd rax,DWORD PTR [rsp+0x50]
   140011679:	cmp    rax,rdi
   14001167c:	jl     0x140011472
   140011682:	mov    eax,r12d
   140011685:	mov    edx,0xd
   14001168a:	lea    r9,[rip+0x2c67f]        # 0x14003dd10
   140011691:	sub    eax,r14d
   140011694:	cmp    eax,r15d
   140011697:	jb     0x1400115d2
   14001169d:	jmp    0x140011472
   1400116a2:	test   r15d,r15d
   1400116a5:	je     0x140011813
   1400116ab:	mov    r8d,0xd
   1400116b1:	jmp    0x1400116b5
   1400116b3:	xor    eax,eax
   1400116b5:	lea    rcx,[rbp-0x80]
   1400116b9:	mov    rdx,rax
   1400116bc:	mov    eax,r12d
   1400116bf:	sub    eax,r14d
   1400116c2:	cmp    eax,r15d
   1400116c5:	jae    0x1400116f6
   1400116c7:	movzx  eax,WORD PTR [r12]
   1400116cc:	add    r12,0x2
   1400116d0:	cmp    ax,0xa
   1400116d4:	jne    0x1400116e2
   1400116d6:	mov    WORD PTR [rcx],r8w
   1400116da:	add    rcx,0x2
   1400116de:	add    rdx,0x2
   1400116e2:	add    rdx,0x2
   1400116e6:	mov    WORD PTR [rcx],ax
   1400116e9:	add    rcx,0x2
   1400116ed:	cmp    rdx,0x6a8
   1400116f4:	jb     0x1400116bc
   1400116f6:	lea    rax,[rbp-0x80]
   1400116fa:	xor    edi,edi
   1400116fc:	lea    r8,[rbp-0x80]
   140011700:	sub    ecx,eax
   140011702:	mov    QWORD PTR [rsp+0x38],rdi
   140011707:	mov    QWORD PTR [rsp+0x30],rdi
   14001170c:	mov    eax,ecx
   14001170e:	mov    ecx,0xfde9
   140011713:	mov    DWORD PTR [rsp+0x28],0xd55
   14001171b:	cdq    
   14001171c:	sub    eax,edx
   14001171e:	xor    edx,edx
   140011720:	sar    eax,1
   140011722:	mov    r9d,eax
   140011725:	lea    rax,[rbp+0x630]
   14001172c:	mov    QWORD PTR [rsp+0x20],rax
   140011731:	call   QWORD PTR [rip+0x1aa59]        # 0x14002c190
   140011737:	mov    r13d,eax
   14001173a:	test   eax,eax
   14001173c:	je     0x140011465
   140011742:	movsxd rax,edi
   140011745:	mov    r8d,r13d
   140011748:	lea    rdx,[rbp+0x630]
   14001174f:	add    rdx,rax
   140011752:	mov    rax,QWORD PTR [rsp+0x48]
   140011757:	lea    rcx,[rip+0x2c5b2]        # 0x14003dd10
   14001175e:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011762:	xor    eax,eax
   140011764:	lea    r9,[rsp+0x50]
   140011769:	mov    QWORD PTR [rsp+0x20],rax
   14001176e:	mov    rax,QWORD PTR [rsp+0x58]
   140011773:	sub    r8d,edi
   140011776:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001177a:	call   QWORD PTR [rip+0x1aa70]        # 0x14002c1f0
   140011780:	test   eax,eax
   140011782:	je     0x14001178f
   140011784:	add    edi,DWORD PTR [rsp+0x50]
   140011788:	cmp    r13d,edi
   14001178b:	jg     0x140011742
   14001178d:	jmp    0x140011797
   14001178f:	call   QWORD PTR [rip+0x1a9bb]        # 0x14002c150
   140011795:	mov    esi,eax
   140011797:	cmp    r13d,edi
   14001179a:	jg     0x14001146d
   1400117a0:	mov    ebx,r12d
   1400117a3:	mov    r8d,0xd
   1400117a9:	sub    ebx,r14d
   1400117ac:	cmp    ebx,r15d
   1400117af:	jb     0x1400116b3
   1400117b5:	jmp    0x14001146d
   1400117ba:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   1400117bf:	lea    r9,[rsp+0x50]
   1400117c4:	mov    r8d,r15d
   1400117c7:	mov    rdx,r14
   1400117ca:	mov    QWORD PTR [rsp+0x20],rax
   1400117cf:	call   QWORD PTR [rip+0x1aa1b]        # 0x14002c1f0
   1400117d5:	test   eax,eax
   1400117d7:	je     0x1400117e4
   1400117d9:	mov    ebx,DWORD PTR [rsp+0x50]
   1400117dd:	mov    eax,esi
   1400117df:	jmp    0x14001147b
   1400117e4:	call   QWORD PTR [rip+0x1a966]        # 0x14002c150
   1400117ea:	mov    esi,eax
   1400117ec:	mov    eax,ebx
   1400117ee:	jmp    0x14001147b
   1400117f3:	mov    r13,QWORD PTR [rsp+0x58]
   1400117f8:	mov    rdi,QWORD PTR [rsp+0x48]
   1400117fd:	jmp    0x14001147b
   140011802:	mov    ecx,esi
   140011804:	call   0x140009c64
   140011809:	jmp    0x1400110fa
   14001180e:	mov    rdi,QWORD PTR [rsp+0x48]
   140011813:	lea    rax,[rip+0x2c4f6]        # 0x14003dd10
   14001181a:	mov    rax,QWORD PTR [rax+rdi*8]
   14001181e:	test   BYTE PTR [r13+rax*1+0x8],0x40
   140011824:	je     0x140011830
   140011826:	cmp    BYTE PTR [r14],0x1a
   14001182a:	je     0x1400110d6
   140011830:	call   0x140009cb4
   140011835:	mov    DWORD PTR [rax],0x1c
   14001183b:	call   0x140009c44
   140011840:	mov    DWORD PTR [rax],ebx
   140011842:	jmp    0x1400110fa
   140011847:	sub    ebx,eax
   140011849:	mov    eax,ebx
   14001184b:	mov    rcx,QWORD PTR [rbp+0x1a30]
   140011852:	xor    rcx,rsp
   140011855:	call   0x14000c380
   14001185a:	mov    rbx,QWORD PTR [rsp+0x1b98]
   140011862:	add    rsp,0x1b40
   140011869:	pop    r15
   14001186b:	pop    r14
   14001186d:	pop    r13
   14001186f:	pop    r12
   140011871:	pop    rdi
   140011872:	pop    rsi
   140011873:	pop    rbp
   140011874:	ret    
   140011875:	int3   
   140011876:	int3   
   140011877:	int3   
   140011878:	mov    QWORD PTR [rsp+0x10],rbx
   14001187d:	mov    DWORD PTR [rsp+0x8],ecx
   140011881:	push   rsi
   140011882:	push   rdi
   140011883:	push   r12
   140011885:	push   r14
   140011887:	push   r15
   140011889:	sub    rsp,0x20
   14001188d:	mov    esi,r8d
   140011890:	mov    r14,rdx
   140011893:	movsxd rbx,ecx
   140011896:	cmp    ebx,0xfffffffe
   140011899:	jne    0x1400118b3
   14001189b:	call   0x140009c44
   1400118a0:	and    DWORD PTR [rax],0x0
   1400118a3:	call   0x140009cb4
   1400118a8:	mov    DWORD PTR [rax],0x9
   1400118ae:	jmp    0x140011947
   1400118b3:	test   ecx,ecx
   1400118b5:	js     0x14001192f
   1400118b7:	cmp    ebx,DWORD PTR [rip+0x2e82b]        # 0x1400400e8
   1400118bd:	jae    0x14001192f
   1400118bf:	mov    rax,rbx
   1400118c2:	mov    rdi,rbx
   1400118c5:	sar    rdi,0x5
   1400118c9:	lea    r12,[rip+0x2c440]        # 0x14003dd10
   1400118d0:	and    eax,0x1f
   1400118d3:	imul   r15,rax,0x58
   1400118d7:	mov    rax,QWORD PTR [r12+rdi*8]
   1400118db:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   1400118e1:	and    ecx,0x1
   1400118e4:	je     0x14001192f
   1400118e6:	mov    ecx,ebx
   1400118e8:	call   0x14001d088
   1400118ed:	nop
   1400118ee:	mov    rax,QWORD PTR [r12+rdi*8]
   1400118f2:	test   BYTE PTR [rax+r15*1+0x8],0x1
   1400118f8:	je     0x14001190c
   1400118fa:	mov    r8d,esi
   1400118fd:	mov    rdx,r14
   140011900:	mov    ecx,ebx
   140011902:	call   0x140011960
   140011907:	mov    rdi,rax
   14001190a:	jmp    0x140011923
   14001190c:	call   0x140009cb4
   140011911:	mov    DWORD PTR [rax],0x9
   140011917:	call   0x140009c44
   14001191c:	and    DWORD PTR [rax],0x0
   14001191f:	or     rdi,0xffffffffffffffff
   140011923:	mov    ecx,ebx
   140011925:	call   0x14001d5e4
   14001192a:	mov    rax,rdi
   14001192d:	jmp    0x14001194b
   14001192f:	call   0x140009c44
   140011934:	and    DWORD PTR [rax],0x0
   140011937:	call   0x140009cb4
   14001193c:	mov    DWORD PTR [rax],0x9
   140011942:	call   0x140008d58
   140011947:	or     rax,0xffffffffffffffff
   14001194b:	mov    rbx,QWORD PTR [rsp+0x58]
   140011950:	add    rsp,0x20
   140011954:	pop    r15
   140011956:	pop    r14
   140011958:	pop    r12
   14001195a:	pop    rdi
   14001195b:	pop    rsi
   14001195c:	ret    
   14001195d:	int3   
   14001195e:	int3   
   14001195f:	int3   
   140011960:	mov    QWORD PTR [rsp+0x8],rbx
   140011965:	mov    QWORD PTR [rsp+0x10],rsi
   14001196a:	push   rdi
   14001196b:	sub    rsp,0x20
   14001196f:	movsxd rbx,ecx
   140011972:	mov    edi,r8d
   140011975:	mov    rsi,rdx
   140011978:	mov    ecx,ebx
   14001197a:	call   0x14001d3c4
   14001197f:	cmp    rax,0xffffffffffffffff
   140011983:	jne    0x140011996
   140011985:	call   0x140009cb4
   14001198a:	mov    DWORD PTR [rax],0x9
   140011990:	or     rax,0xffffffffffffffff
   140011994:	jmp    0x1400119e3
   140011996:	lea    r8,[rsp+0x48]
   14001199b:	mov    r9d,edi
   14001199e:	mov    rdx,rsi
   1400119a1:	mov    rcx,rax
   1400119a4:	call   QWORD PTR [rip+0x1a68e]        # 0x14002c038
   1400119aa:	test   eax,eax
   1400119ac:	jne    0x1400119bd
   1400119ae:	call   QWORD PTR [rip+0x1a79c]        # 0x14002c150
   1400119b4:	mov    ecx,eax
   1400119b6:	call   0x140009c64
   1400119bb:	jmp    0x140011990
   1400119bd:	mov    rcx,rbx
   1400119c0:	mov    rax,rbx
   1400119c3:	lea    rdx,[rip+0x2c346]        # 0x14003dd10
   1400119ca:	sar    rax,0x5
   1400119ce:	and    ecx,0x1f
   1400119d1:	mov    rax,QWORD PTR [rdx+rax*8]
   1400119d5:	imul   rcx,rcx,0x58
   1400119d9:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   1400119de:	mov    rax,QWORD PTR [rsp+0x48]
   1400119e3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400119e8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400119ed:	add    rsp,0x20
   1400119f1:	pop    rdi
   1400119f2:	ret    
   1400119f3:	int3   
   1400119f4:	rex push rbx
   1400119f6:	sub    rsp,0x20
   1400119fa:	inc    DWORD PTR [rip+0x2cf10]        # 0x14003e910
   140011a00:	mov    rbx,rcx
   140011a03:	mov    ecx,0x1000
   140011a08:	call   0x140008684
   140011a0d:	mov    QWORD PTR [rbx+0x10],rax
   140011a11:	test   rax,rax
   140011a14:	je     0x140011a23
   140011a16:	or     DWORD PTR [rbx+0x18],0x8
   140011a1a:	mov    DWORD PTR [rbx+0x24],0x1000
   140011a21:	jmp    0x140011a36
   140011a23:	or     DWORD PTR [rbx+0x18],0x4
   140011a27:	lea    rax,[rbx+0x20]
   140011a2b:	mov    DWORD PTR [rbx+0x24],0x2
   140011a32:	mov    QWORD PTR [rbx+0x10],rax
   140011a36:	mov    rax,QWORD PTR [rbx+0x10]
   140011a3a:	and    DWORD PTR [rbx+0x8],0x0
   140011a3e:	mov    QWORD PTR [rbx],rax
   140011a41:	add    rsp,0x20
   140011a45:	pop    rbx
   140011a46:	ret    
   140011a47:	int3   
   140011a48:	lock inc DWORD PTR [rcx]
   140011a4b:	mov    rax,QWORD PTR [rcx+0xd8]
   140011a52:	test   rax,rax
   140011a55:	je     0x140011a5a
   140011a57:	lock inc DWORD PTR [rax]
   140011a5a:	mov    rax,QWORD PTR [rcx+0xe8]
   140011a61:	test   rax,rax
   140011a64:	je     0x140011a69
   140011a66:	lock inc DWORD PTR [rax]
   140011a69:	mov    rax,QWORD PTR [rcx+0xe0]
   140011a70:	test   rax,rax
   140011a73:	je     0x140011a78
   140011a75:	lock inc DWORD PTR [rax]
   140011a78:	mov    rax,QWORD PTR [rcx+0xf8]
   140011a7f:	test   rax,rax
   140011a82:	je     0x140011a87
   140011a84:	lock inc DWORD PTR [rax]
   140011a87:	lea    rax,[rcx+0x28]
   140011a8b:	mov    r8d,0x6
   140011a91:	lea    rdx,[rip+0x2b33c]        # 0x14003cdd4
   140011a98:	cmp    QWORD PTR [rax-0x10],rdx
   140011a9c:	je     0x140011aa9
   140011a9e:	mov    rdx,QWORD PTR [rax]
   140011aa1:	test   rdx,rdx
   140011aa4:	je     0x140011aa9
   140011aa6:	lock inc DWORD PTR [rdx]
   140011aa9:	cmp    QWORD PTR [rax-0x18],0x0
   140011aae:	je     0x140011abc
   140011ab0:	mov    rdx,QWORD PTR [rax-0x8]
   140011ab4:	test   rdx,rdx
   140011ab7:	je     0x140011abc
   140011ab9:	lock inc DWORD PTR [rdx]
   140011abc:	add    rax,0x20
   140011ac0:	dec    r8
   140011ac3:	jne    0x140011a91
   140011ac5:	mov    rax,QWORD PTR [rcx+0x120]
   140011acc:	lock inc DWORD PTR [rax+0x15c]
   140011ad3:	ret    
   140011ad4:	mov    QWORD PTR [rsp+0x8],rbx
   140011ad9:	mov    QWORD PTR [rsp+0x10],rbp
   140011ade:	mov    QWORD PTR [rsp+0x18],rsi
   140011ae3:	push   rdi
   140011ae4:	sub    rsp,0x20
   140011ae8:	mov    rax,QWORD PTR [rcx+0xf0]
   140011aef:	mov    rbx,rcx
   140011af2:	test   rax,rax
   140011af5:	je     0x140011b70
   140011af7:	lea    rcx,[rip+0x2b912]        # 0x14003d410
   140011afe:	cmp    rax,rcx
   140011b01:	je     0x140011b70
   140011b03:	mov    rax,QWORD PTR [rbx+0xd8]
   140011b0a:	test   rax,rax
   140011b0d:	je     0x140011b70
   140011b0f:	cmp    DWORD PTR [rax],0x0
   140011b12:	jne    0x140011b70
   140011b14:	mov    rcx,QWORD PTR [rbx+0xe8]
   140011b1b:	test   rcx,rcx
   140011b1e:	je     0x140011b36
   140011b20:	cmp    DWORD PTR [rcx],0x0
   140011b23:	jne    0x140011b36
   140011b25:	call   0x140007dc0
   140011b2a:	mov    rcx,QWORD PTR [rbx+0xf0]
   140011b31:	call   0x14001d6a0
   140011b36:	mov    rcx,QWORD PTR [rbx+0xe0]
   140011b3d:	test   rcx,rcx
   140011b40:	je     0x140011b58
   140011b42:	cmp    DWORD PTR [rcx],0x0
   140011b45:	jne    0x140011b58
   140011b47:	call   0x140007dc0
   140011b4c:	mov    rcx,QWORD PTR [rbx+0xf0]
   140011b53:	call   0x14001dce8
   140011b58:	mov    rcx,QWORD PTR [rbx+0xd8]
   140011b5f:	call   0x140007dc0
   140011b64:	mov    rcx,QWORD PTR [rbx+0xf0]
   140011b6b:	call   0x140007dc0
   140011b70:	mov    rax,QWORD PTR [rbx+0xf8]
   140011b77:	test   rax,rax
   140011b7a:	je     0x140011bc3
   140011b7c:	cmp    DWORD PTR [rax],0x0
   140011b7f:	jne    0x140011bc3
   140011b81:	mov    rcx,QWORD PTR [rbx+0x100]
   140011b88:	sub    rcx,0xfe
   140011b8f:	call   0x140007dc0
   140011b94:	mov    rcx,QWORD PTR [rbx+0x110]
   140011b9b:	mov    edi,0x80
   140011ba0:	sub    rcx,rdi
   140011ba3:	call   0x140007dc0
   140011ba8:	mov    rcx,QWORD PTR [rbx+0x118]
   140011baf:	sub    rcx,rdi
   140011bb2:	call   0x140007dc0
   140011bb7:	mov    rcx,QWORD PTR [rbx+0xf8]
   140011bbe:	call   0x140007dc0
   140011bc3:	mov    rcx,QWORD PTR [rbx+0x120]
   140011bca:	lea    rax,[rip+0x2b20f]        # 0x14003cde0
   140011bd1:	cmp    rcx,rax
   140011bd4:	je     0x140011bf0
   140011bd6:	cmp    DWORD PTR [rcx+0x15c],0x0
   140011bdd:	jne    0x140011bf0
   140011bdf:	call   0x14001e058
   140011be4:	mov    rcx,QWORD PTR [rbx+0x120]
   140011beb:	call   0x140007dc0
   140011bf0:	lea    rsi,[rbx+0x128]
   140011bf7:	lea    rdi,[rbx+0x28]
   140011bfb:	mov    ebp,0x6
   140011c00:	lea    rax,[rip+0x2b1cd]        # 0x14003cdd4
   140011c07:	cmp    QWORD PTR [rdi-0x10],rax
   140011c0b:	je     0x140011c27
   140011c0d:	mov    rcx,QWORD PTR [rdi]
   140011c10:	test   rcx,rcx
   140011c13:	je     0x140011c27
   140011c15:	cmp    DWORD PTR [rcx],0x0
   140011c18:	jne    0x140011c27
   140011c1a:	call   0x140007dc0
   140011c1f:	mov    rcx,QWORD PTR [rsi]
   140011c22:	call   0x140007dc0
   140011c27:	cmp    QWORD PTR [rdi-0x18],0x0
   140011c2c:	je     0x140011c41
   140011c2e:	mov    rcx,QWORD PTR [rdi-0x8]
   140011c32:	test   rcx,rcx
   140011c35:	je     0x140011c41
   140011c37:	cmp    DWORD PTR [rcx],0x0
   140011c3a:	jne    0x140011c41
   140011c3c:	call   0x140007dc0
   140011c41:	add    rsi,0x8
   140011c45:	add    rdi,0x20
   140011c49:	dec    rbp
   140011c4c:	jne    0x140011c00
   140011c4e:	mov    rcx,rbx
   140011c51:	mov    rbx,QWORD PTR [rsp+0x30]
   140011c56:	mov    rbp,QWORD PTR [rsp+0x38]
   140011c5b:	mov    rsi,QWORD PTR [rsp+0x40]
   140011c60:	add    rsp,0x20
   140011c64:	pop    rdi
   140011c65:	jmp    0x140007dc0
   140011c6a:	int3   
   140011c6b:	int3   
   140011c6c:	test   rcx,rcx
   140011c6f:	je     0x140011d0c
   140011c75:	or     r9d,0xffffffff
   140011c79:	lock add DWORD PTR [rcx],r9d
   140011c7d:	mov    rax,QWORD PTR [rcx+0xd8]
   140011c84:	test   rax,rax
   140011c87:	je     0x140011c8d
   140011c89:	lock add DWORD PTR [rax],r9d
   140011c8d:	mov    rax,QWORD PTR [rcx+0xe8]
   140011c94:	test   rax,rax
   140011c97:	je     0x140011c9d
   140011c99:	lock add DWORD PTR [rax],r9d
   140011c9d:	mov    rax,QWORD PTR [rcx+0xe0]
   140011ca4:	test   rax,rax
   140011ca7:	je     0x140011cad
   140011ca9:	lock add DWORD PTR [rax],r9d
   140011cad:	mov    rax,QWORD PTR [rcx+0xf8]
   140011cb4:	test   rax,rax
   140011cb7:	je     0x140011cbd
   140011cb9:	lock add DWORD PTR [rax],r9d
   140011cbd:	lea    rax,[rcx+0x28]
   140011cc1:	mov    r8d,0x6
   140011cc7:	lea    rdx,[rip+0x2b106]        # 0x14003cdd4
   140011cce:	cmp    QWORD PTR [rax-0x10],rdx
   140011cd2:	je     0x140011ce0
   140011cd4:	mov    rdx,QWORD PTR [rax]
   140011cd7:	test   rdx,rdx
   140011cda:	je     0x140011ce0
   140011cdc:	lock add DWORD PTR [rdx],r9d
   140011ce0:	cmp    QWORD PTR [rax-0x18],0x0
   140011ce5:	je     0x140011cf4
   140011ce7:	mov    rdx,QWORD PTR [rax-0x8]
   140011ceb:	test   rdx,rdx
   140011cee:	je     0x140011cf4
   140011cf0:	lock add DWORD PTR [rdx],r9d
   140011cf4:	add    rax,0x20
   140011cf8:	dec    r8
   140011cfb:	jne    0x140011cc7
   140011cfd:	mov    rax,QWORD PTR [rcx+0x120]
   140011d04:	lock add DWORD PTR [rax+0x15c],r9d
   140011d0c:	mov    rax,rcx
   140011d0f:	ret    
   140011d10:	rex push rbx
   140011d12:	sub    rsp,0x20
   140011d16:	call   0x14000a3ec
   140011d1b:	mov    rbx,rax
   140011d1e:	mov    ecx,DWORD PTR [rip+0x2b4f4]        # 0x14003d218
   140011d24:	test   DWORD PTR [rax+0xc8],ecx
   140011d2a:	je     0x140011d44
   140011d2c:	cmp    QWORD PTR [rax+0xc0],0x0
   140011d34:	je     0x140011d44
   140011d36:	call   0x14000a3ec
   140011d3b:	mov    rbx,QWORD PTR [rax+0xc0]
   140011d42:	jmp    0x140011d6f
   140011d44:	mov    ecx,0xc
   140011d49:	call   0x14000fc2c
   140011d4e:	nop
   140011d4f:	lea    rcx,[rbx+0xc0]
   140011d56:	mov    rdx,QWORD PTR [rip+0x2b343]        # 0x14003d0a0
   140011d5d:	call   0x140011d88
   140011d62:	mov    rbx,rax
   140011d65:	mov    ecx,0xc
   140011d6a:	call   0x14000fe48
   140011d6f:	test   rbx,rbx
   140011d72:	jne    0x140011d7c
   140011d74:	lea    ecx,[rbx+0x20]
   140011d77:	call   0x1400081bc
   140011d7c:	mov    rax,rbx
   140011d7f:	add    rsp,0x20
   140011d83:	pop    rbx
   140011d84:	ret    
   140011d85:	int3   
   140011d86:	int3   
   140011d87:	int3   
   140011d88:	mov    QWORD PTR [rsp+0x8],rbx
   140011d8d:	push   rdi
   140011d8e:	sub    rsp,0x20
   140011d92:	mov    rdi,rdx
   140011d95:	test   rdx,rdx
   140011d98:	je     0x140011ddd
   140011d9a:	test   rcx,rcx
   140011d9d:	je     0x140011ddd
   140011d9f:	mov    rbx,QWORD PTR [rcx]
   140011da2:	cmp    rbx,rdx
   140011da5:	je     0x140011dd8
   140011da7:	mov    QWORD PTR [rcx],rdx
   140011daa:	mov    rcx,rdx
   140011dad:	call   0x140011a48
   140011db2:	test   rbx,rbx
   140011db5:	je     0x140011dd8
   140011db7:	mov    rcx,rbx
   140011dba:	call   0x140011c6c
   140011dbf:	cmp    DWORD PTR [rbx],0x0
   140011dc2:	jne    0x140011dd8
   140011dc4:	lea    rax,[rip+0x2b2e5]        # 0x14003d0b0
   140011dcb:	cmp    rbx,rax
   140011dce:	je     0x140011dd8
   140011dd0:	mov    rcx,rbx
   140011dd3:	call   0x140011ad4
   140011dd8:	mov    rax,rdi
   140011ddb:	jmp    0x140011ddf
   140011ddd:	xor    eax,eax
   140011ddf:	mov    rbx,QWORD PTR [rsp+0x30]
   140011de4:	add    rsp,0x20
   140011de8:	pop    rdi
   140011de9:	ret    
   140011dea:	int3   
   140011deb:	int3   
   140011dec:	rex push rbx
   140011dee:	sub    rsp,0x20
   140011df2:	mov    edx,0x107
   140011df7:	movzx  ebx,cx
   140011dfa:	call   0x14001f0b8
   140011dff:	xor    edx,edx
   140011e01:	test   eax,eax
   140011e03:	jne    0x140011e0b
   140011e05:	cmp    bx,0x5f
   140011e09:	jne    0x140011e10
   140011e0b:	mov    edx,0x1
   140011e10:	mov    eax,edx
   140011e12:	add    rsp,0x20
   140011e16:	pop    rbx
   140011e17:	ret    
   140011e18:	rex push rbx
   140011e1a:	sub    rsp,0x20
   140011e1e:	mov    edx,0x103
   140011e23:	movzx  ebx,cx
   140011e26:	call   0x14001f0b8
   140011e2b:	xor    edx,edx
   140011e2d:	test   eax,eax
   140011e2f:	jne    0x140011e37
   140011e31:	cmp    bx,0x5f
   140011e35:	jne    0x140011e3c
   140011e37:	mov    edx,0x1
   140011e3c:	mov    eax,edx
   140011e3e:	add    rsp,0x20
   140011e42:	pop    rbx
   140011e43:	ret    
   140011e44:	rex push rbx
   140011e46:	sub    rsp,0x40
   140011e4a:	mov    ebx,ecx
   140011e4c:	lea    rcx,[rsp+0x20]
   140011e51:	call   0x140008fac
   140011e56:	mov    rax,QWORD PTR [rsp+0x20]
   140011e5b:	movzx  edx,bl
   140011e5e:	mov    rcx,QWORD PTR [rax+0x108]
   140011e65:	movzx  eax,WORD PTR [rcx+rdx*2]
   140011e69:	and    eax,0x8000
   140011e6e:	cmp    BYTE PTR [rsp+0x38],0x0
   140011e73:	je     0x140011e81
   140011e75:	mov    rcx,QWORD PTR [rsp+0x30]
   140011e7a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140011e81:	add    rsp,0x40
   140011e85:	pop    rbx
   140011e86:	ret    
   140011e87:	int3   
   140011e88:	mov    edx,0x107
   140011e8d:	jmp    0x14001f0b8
   140011e92:	int3   
   140011e93:	int3   
   140011e94:	mov    edx,0x103
   140011e99:	jmp    0x14001f0b8
   140011e9e:	int3   
   140011e9f:	int3   
   140011ea0:	cmp    cx,0x9
   140011ea4:	jne    0x140011eac
   140011ea6:	mov    eax,0x40
   140011eab:	ret    
   140011eac:	mov    edx,0x40
   140011eb1:	jmp    0x14001f0b8
   140011eb6:	int3   
   140011eb7:	int3   
   140011eb8:	mov    edx,0x20
   140011ebd:	jmp    0x14001f0b8
   140011ec2:	int3   
   140011ec3:	int3   
   140011ec4:	rex push rbx
   140011ec6:	sub    rsp,0x20
   140011eca:	mov    edx,0x107
   140011ecf:	movzx  ebx,cx
   140011ed2:	call   0x14001f0b8
   140011ed7:	xor    edx,edx
   140011ed9:	test   eax,eax
   140011edb:	jne    0x140011ee3
   140011edd:	cmp    bx,0x5f
   140011ee1:	jne    0x140011ee8
   140011ee3:	mov    edx,0x1
   140011ee8:	mov    eax,edx
   140011eea:	add    rsp,0x20
   140011eee:	pop    rbx
   140011eef:	ret    
   140011ef0:	rex push rbx
   140011ef2:	sub    rsp,0x20
   140011ef6:	mov    edx,0x103
   140011efb:	movzx  ebx,cx
   140011efe:	call   0x14001f0b8
   140011f03:	xor    edx,edx
   140011f05:	test   eax,eax
   140011f07:	jne    0x140011f0f
   140011f09:	cmp    bx,0x5f
   140011f0d:	jne    0x140011f14
   140011f0f:	mov    edx,0x1
   140011f14:	mov    eax,edx
   140011f16:	add    rsp,0x20
   140011f1a:	pop    rbx
   140011f1b:	ret    
   140011f1c:	mov    edx,0x4
   140011f21:	jmp    0x14001f0b8
   140011f26:	int3   
   140011f27:	int3   
   140011f28:	mov    edx,0x117
   140011f2d:	jmp    0x14001f0b8
   140011f32:	int3   
   140011f33:	int3   
   140011f34:	mov    edx,0x2
   140011f39:	jmp    0x14001f0b8
   140011f3e:	int3   
   140011f3f:	int3   
   140011f40:	mov    edx,0x157
   140011f45:	jmp    0x14001f0b8
   140011f4a:	int3   
   140011f4b:	int3   
   140011f4c:	mov    edx,0x10
   140011f51:	jmp    0x14001f0b8
   140011f56:	int3   
   140011f57:	int3   
   140011f58:	mov    edx,0x8
   140011f5d:	jmp    0x14001f0b8
   140011f62:	int3   
   140011f63:	int3   
   140011f64:	mov    edx,0x1
   140011f69:	jmp    0x14001f0b8
   140011f6e:	int3   
   140011f6f:	int3   
   140011f70:	mov    edx,0x80
   140011f75:	jmp    0x14001f0b8
   140011f7a:	int3   
   140011f7b:	int3   
   140011f7c:	rex push rbx
   140011f7e:	sub    rsp,0x40
   140011f82:	mov    ebx,ecx
   140011f84:	lea    rcx,[rsp+0x20]
   140011f89:	xor    edx,edx
   140011f8b:	call   0x140008fac
   140011f90:	mov    rax,QWORD PTR [rsp+0x20]
   140011f95:	movzx  edx,bl
   140011f98:	mov    rcx,QWORD PTR [rax+0x108]
   140011f9f:	movzx  eax,WORD PTR [rcx+rdx*2]
   140011fa3:	and    eax,0x8000
   140011fa8:	cmp    BYTE PTR [rsp+0x38],0x0
   140011fad:	je     0x140011fbb
   140011faf:	mov    rcx,QWORD PTR [rsp+0x30]
   140011fb4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140011fbb:	add    rsp,0x40
   140011fbf:	pop    rbx
   140011fc0:	ret    
   140011fc1:	int3   
   140011fc2:	int3   
   140011fc3:	int3   
   140011fc4:	mov    edx,0x107
   140011fc9:	jmp    0x14001f0b8
   140011fce:	int3   
   140011fcf:	int3   
   140011fd0:	mov    edx,0x103
   140011fd5:	jmp    0x14001f0b8
   140011fda:	int3   
   140011fdb:	int3   
   140011fdc:	xor    eax,eax
   140011fde:	mov    edx,0x80
   140011fe3:	cmp    cx,dx
   140011fe6:	setb   al
   140011fe9:	ret    
   140011fea:	int3   
   140011feb:	int3   
   140011fec:	cmp    cx,0x9
   140011ff0:	jne    0x140011ff8
   140011ff2:	mov    eax,0x40
   140011ff7:	ret    
   140011ff8:	mov    edx,0x40
   140011ffd:	jmp    0x14001f0b8
   140012002:	int3   
   140012003:	int3   
   140012004:	mov    edx,0x20
   140012009:	jmp    0x14001f0b8
   14001200e:	int3   
   14001200f:	int3   
   140012010:	mov    edx,0x4
   140012015:	jmp    0x14001f0b8
   14001201a:	int3   
   14001201b:	int3   
   14001201c:	mov    edx,0x117
   140012021:	jmp    0x14001f0b8
   140012026:	int3   
   140012027:	int3   
   140012028:	mov    edx,0x2
   14001202d:	jmp    0x14001f0b8
   140012032:	int3   
   140012033:	int3   
   140012034:	mov    edx,0x157
   140012039:	jmp    0x14001f0b8
   14001203e:	int3   
   14001203f:	int3   
   140012040:	mov    edx,0x10
   140012045:	jmp    0x14001f0b8
   14001204a:	int3   
   14001204b:	int3   
   14001204c:	mov    edx,0x8
   140012051:	jmp    0x14001f0b8
   140012056:	int3   
   140012057:	int3   
   140012058:	mov    edx,0x1
   14001205d:	jmp    0x14001f0b8
   140012062:	int3   
   140012063:	int3   
   140012064:	mov    edx,0x80
   140012069:	jmp    0x14001f0b8
   14001206e:	int3   
   14001206f:	int3   
   140012070:	mov    rcx,QWORD PTR [rip+0x2a159]        # 0x14003c1d0
   140012077:	xor    eax,eax
   140012079:	or     rcx,0x1
   14001207d:	cmp    QWORD PTR [rip+0x2c894],rcx        # 0x14003e918
   140012084:	sete   al
   140012087:	ret    
   140012088:	mov    rax,rsp
   14001208b:	mov    QWORD PTR [rax+0x10],rdx
   14001208f:	mov    QWORD PTR [rax+0x18],r8
   140012093:	mov    QWORD PTR [rax+0x20],r9
   140012097:	sub    rsp,0x28
   14001209b:	lea    r8,[rax+0x18]
   14001209f:	call   0x14001f120
   1400120a4:	add    rsp,0x28
   1400120a8:	ret    
   1400120a9:	int3   
   1400120aa:	int3   
   1400120ab:	int3   
   1400120ac:	mov    rax,rsp
   1400120af:	mov    QWORD PTR [rax+0x8],rcx
   1400120b3:	mov    QWORD PTR [rax+0x10],rdx
   1400120b7:	mov    QWORD PTR [rax+0x18],r8
   1400120bb:	mov    QWORD PTR [rax+0x20],r9
   1400120bf:	sub    rsp,0x28
   1400120c3:	lea    r8,[rax+0x10]
   1400120c7:	xor    edx,edx
   1400120c9:	call   0x14001f150
   1400120ce:	add    rsp,0x28
   1400120d2:	ret    
   1400120d3:	int3   
   1400120d4:	mov    rax,rsp
   1400120d7:	mov    QWORD PTR [rax+0x10],rdx
   1400120db:	mov    QWORD PTR [rax+0x18],r8
   1400120df:	mov    QWORD PTR [rax+0x20],r9
   1400120e3:	sub    rsp,0x28
   1400120e7:	lea    r8,[rax+0x18]
   1400120eb:	call   0x14001f150
   1400120f0:	add    rsp,0x28
   1400120f4:	ret    
   1400120f5:	int3   
   1400120f6:	int3   
   1400120f7:	int3   
   1400120f8:	mov    rax,rsp
   1400120fb:	mov    QWORD PTR [rax+0x10],rdx
   1400120ff:	mov    QWORD PTR [rax+0x18],r8
   140012103:	mov    QWORD PTR [rax+0x20],r9
   140012107:	sub    rsp,0x28
   14001210b:	lea    r8,[rax+0x18]
   14001210f:	call   0x14001f168
   140012114:	add    rsp,0x28
   140012118:	ret    
   140012119:	int3   
   14001211a:	int3   
   14001211b:	int3   
   14001211c:	mov    rdx,QWORD PTR [rip+0x2a0ad]        # 0x14003c1d0
   140012123:	xor    eax,eax
   140012125:	or     rdx,0x1
   140012129:	cmp    QWORD PTR [rip+0x2c7e8],rdx        # 0x14003e918
   140012130:	sete   al
   140012133:	neg    ecx
   140012135:	sbb    rcx,rcx
   140012138:	and    rcx,rdx
   14001213b:	mov    QWORD PTR [rip+0x2c7d6],rcx        # 0x14003e918
   140012142:	ret    
   140012143:	int3   
   140012144:	mov    rax,rsp
   140012147:	mov    QWORD PTR [rax+0x8],rcx
   14001214b:	mov    QWORD PTR [rax+0x10],rdx
   14001214f:	mov    QWORD PTR [rax+0x18],r8
   140012153:	mov    QWORD PTR [rax+0x20],r9
   140012157:	push   rbx
   140012158:	push   rdi
   140012159:	sub    rsp,0x28
   14001215d:	xor    eax,eax
   14001215f:	test   rcx,rcx
   140012162:	setne  al
   140012165:	test   eax,eax
   140012167:	jne    0x14001217e
   140012169:	call   0x140009cb4
   14001216e:	mov    DWORD PTR [rax],0x16
   140012174:	call   0x140008d58
   140012179:	or     eax,0xffffffff
   14001217c:	jmp    0x1400121e8
   14001217e:	lea    rdi,[rsp+0x48]
   140012183:	call   0x140010e04
   140012188:	lea    rdx,[rax+0x30]
   14001218c:	mov    ecx,0x1
   140012191:	call   0x140010e74
   140012196:	nop
   140012197:	call   0x140010e04
   14001219c:	lea    rcx,[rax+0x30]
   1400121a0:	call   0x1400109f0
   1400121a5:	mov    ebx,eax
   1400121a7:	call   0x140010e04
   1400121ac:	lea    rcx,[rax+0x30]
   1400121b0:	mov    r9,rdi
   1400121b3:	xor    r8d,r8d
   1400121b6:	mov    rdx,QWORD PTR [rsp+0x40]
   1400121bb:	call   0x1400125d8
   1400121c0:	mov    edi,eax
   1400121c2:	call   0x140010e04
   1400121c7:	lea    rdx,[rax+0x30]
   1400121cb:	mov    ecx,ebx
   1400121cd:	call   0x1400109b8
   1400121d2:	nop
   1400121d3:	call   0x140010e04
   1400121d8:	lea    rdx,[rax+0x30]
   1400121dc:	mov    ecx,0x1
   1400121e1:	call   0x140010ef8
   1400121e6:	mov    eax,edi
   1400121e8:	add    rsp,0x28
   1400121ec:	pop    rdi
   1400121ed:	pop    rbx
   1400121ee:	ret    
   1400121ef:	int3   
   1400121f0:	mov    rax,rsp
   1400121f3:	mov    QWORD PTR [rax+0x8],rcx
   1400121f7:	mov    QWORD PTR [rax+0x10],rdx
   1400121fb:	mov    QWORD PTR [rax+0x18],r8
   1400121ff:	mov    QWORD PTR [rax+0x20],r9
   140012203:	sub    rsp,0x28
   140012207:	lea    r8,[rax+0x10]
   14001220b:	xor    edx,edx
   14001220d:	call   0x14001f168
   140012212:	add    rsp,0x28
   140012216:	ret    
   140012217:	int3   
   140012218:	mov    QWORD PTR [rsp+0x18],rbx
   14001221d:	mov    QWORD PTR [rsp+0x20],rbp
   140012222:	push   rsi
   140012223:	push   rdi
   140012224:	push   r14
   140012226:	sub    rsp,0x40
   14001222a:	mov    rax,QWORD PTR [rip+0x29f9f]        # 0x14003c1d0
   140012231:	xor    rax,rsp
   140012234:	mov    QWORD PTR [rsp+0x30],rax
   140012239:	test   BYTE PTR [rdx+0x18],0x40
   14001223d:	mov    rdi,rdx
   140012240:	movzx  esi,cx
   140012243:	jne    0x1400123c2
   140012249:	mov    rcx,rdx
   14001224c:	call   0x140010f18
   140012251:	lea    rbp,[rip+0x29fd8]        # 0x14003c230
   140012258:	lea    r14,[rip+0x2bab1]        # 0x14003dd10
   14001225f:	cmp    eax,0xffffffff
   140012262:	je     0x140012295
   140012264:	mov    rcx,rdi
   140012267:	call   0x140010f18
   14001226c:	cmp    eax,0xfffffffe
   14001226f:	je     0x140012295
   140012271:	mov    rcx,rdi
   140012274:	call   0x140010f18
   140012279:	mov    rcx,rdi
   14001227c:	movsxd rbx,eax
   14001227f:	sar    rbx,0x5
   140012283:	call   0x140010f18
   140012288:	and    eax,0x1f
   14001228b:	imul   rcx,rax,0x58
   14001228f:	add    rcx,QWORD PTR [r14+rbx*8]
   140012293:	jmp    0x140012298
   140012295:	mov    rcx,rbp
   140012298:	mov    al,BYTE PTR [rcx+0x38]
   14001229b:	and    al,0x7f
   14001229d:	cmp    al,0x2
   14001229f:	je     0x1400123ab
   1400122a5:	mov    rcx,rdi
   1400122a8:	call   0x140010f18
   1400122ad:	cmp    eax,0xffffffff
   1400122b0:	je     0x1400122e3
   1400122b2:	mov    rcx,rdi
   1400122b5:	call   0x140010f18
   1400122ba:	cmp    eax,0xfffffffe
   1400122bd:	je     0x1400122e3
   1400122bf:	mov    rcx,rdi
   1400122c2:	call   0x140010f18
   1400122c7:	mov    rcx,rdi
   1400122ca:	movsxd rbx,eax
   1400122cd:	sar    rbx,0x5
   1400122d1:	call   0x140010f18
   1400122d6:	and    eax,0x1f
   1400122d9:	imul   rcx,rax,0x58
   1400122dd:	add    rcx,QWORD PTR [r14+rbx*8]
   1400122e1:	jmp    0x1400122e6
   1400122e3:	mov    rcx,rbp
   1400122e6:	mov    al,BYTE PTR [rcx+0x38]
   1400122e9:	and    al,0x7f
   1400122eb:	cmp    al,0x1
   1400122ed:	je     0x1400123ab
   1400122f3:	mov    rcx,rdi
   1400122f6:	call   0x140010f18
   1400122fb:	cmp    eax,0xffffffff
   1400122fe:	je     0x14001232f
   140012300:	mov    rcx,rdi
   140012303:	call   0x140010f18
   140012308:	cmp    eax,0xfffffffe
   14001230b:	je     0x14001232f
   14001230d:	mov    rcx,rdi
   140012310:	call   0x140010f18
   140012315:	mov    rcx,rdi
   140012318:	movsxd rbx,eax
   14001231b:	sar    rbx,0x5
   14001231f:	call   0x140010f18
   140012324:	and    eax,0x1f
   140012327:	imul   rbp,rax,0x58
   14001232b:	add    rbp,QWORD PTR [r14+rbx*8]
   14001232f:	test   BYTE PTR [rbp+0x8],0x80
   140012333:	je     0x1400123c2
   140012339:	lea    rdx,[rsp+0x24]
   14001233e:	lea    rcx,[rsp+0x20]
   140012343:	movzx  r9d,si
   140012347:	mov    r8d,0x5
   14001234d:	call   0x14001f4b4
   140012352:	xor    ebx,ebx
   140012354:	test   eax,eax
   140012356:	je     0x140012362
   140012358:	mov    eax,0xffff
   14001235d:	jmp    0x1400123eb
   140012362:	cmp    DWORD PTR [rsp+0x20],ebx
   140012366:	jle    0x1400123a6
   140012368:	lea    r14,[rsp+0x24]
   14001236d:	dec    DWORD PTR [rdi+0x8]
   140012370:	js     0x140012388
   140012372:	mov    rcx,QWORD PTR [rdi]
   140012375:	mov    al,BYTE PTR [r14]
   140012378:	mov    BYTE PTR [rcx],al
   14001237a:	mov    rax,QWORD PTR [rdi]
   14001237d:	movzx  ecx,BYTE PTR [rax]
   140012380:	inc    rax
   140012383:	mov    QWORD PTR [rdi],rax
   140012386:	jmp    0x140012396
   140012388:	movsx  ecx,BYTE PTR [r14]
   14001238c:	mov    rdx,rdi
   14001238f:	call   0x140008e20
   140012394:	mov    ecx,eax
   140012396:	cmp    ecx,0xffffffff
   140012399:	je     0x140012358
   14001239b:	inc    ebx
   14001239d:	inc    r14
   1400123a0:	cmp    ebx,DWORD PTR [rsp+0x20]
   1400123a4:	jl     0x14001236d
   1400123a6:	movzx  eax,si
   1400123a9:	jmp    0x1400123eb
   1400123ab:	movsxd rcx,DWORD PTR [rdi+0x8]
   1400123af:	add    rcx,0xfffffffffffffffe
   1400123b3:	mov    DWORD PTR [rdi+0x8],ecx
   1400123b6:	test   ecx,ecx
   1400123b8:	js     0x1400123e0
   1400123ba:	mov    rcx,QWORD PTR [rdi]
   1400123bd:	mov    WORD PTR [rcx],si
   1400123c0:	jmp    0x1400123d7
   1400123c2:	movsxd rax,DWORD PTR [rdi+0x8]
   1400123c6:	add    rax,0xfffffffffffffffe
   1400123ca:	mov    DWORD PTR [rdi+0x8],eax
   1400123cd:	test   eax,eax
   1400123cf:	js     0x1400123e0
   1400123d1:	mov    rax,QWORD PTR [rdi]
   1400123d4:	mov    WORD PTR [rax],si
   1400123d7:	add    QWORD PTR [rdi],0x2
   1400123db:	movzx  eax,si
   1400123de:	jmp    0x1400123eb
   1400123e0:	mov    rdx,rdi
   1400123e3:	movzx  ecx,si
   1400123e6:	call   0x14001f4c8
   1400123eb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400123f0:	xor    rcx,rsp
   1400123f3:	call   0x14000c380
   1400123f8:	mov    rbx,QWORD PTR [rsp+0x70]
   1400123fd:	mov    rbp,QWORD PTR [rsp+0x78]
   140012402:	add    rsp,0x40
   140012406:	pop    r14
   140012408:	pop    rdi
   140012409:	pop    rsi
   14001240a:	ret    
   14001240b:	int3   
   14001240c:	mov    QWORD PTR [rsp+0x8],rbx
   140012411:	mov    QWORD PTR [rsp+0x10],rdx
   140012416:	push   rdi
   140012417:	sub    rsp,0x20
   14001241b:	mov    rbx,rdx
   14001241e:	movzx  edi,cx
   140012421:	xor    eax,eax
   140012423:	test   rdx,rdx
   140012426:	setne  al
   140012429:	test   eax,eax
   14001242b:	jne    0x140012444
   14001242d:	call   0x140009cb4
   140012432:	mov    DWORD PTR [rax],0x16
   140012438:	call   0x140008d58
   14001243d:	mov    eax,0xffff
   140012442:	jmp    0x140012466
   140012444:	mov    rcx,rdx
   140012447:	call   0x140010e0c
   14001244c:	nop
   14001244d:	mov    rdx,rbx
   140012450:	movzx  ecx,di
   140012453:	call   0x140012218
   140012458:	movzx  edi,ax
   14001245b:	mov    rcx,rbx
   14001245e:	call   0x140010ea8
   140012463:	movzx  eax,di
   140012466:	mov    rbx,QWORD PTR [rsp+0x30]
   14001246b:	add    rsp,0x20
   14001246f:	pop    rdi
   140012470:	ret    
   140012471:	int3   
   140012472:	int3   
   140012473:	int3   
   140012474:	jmp    0x14001240c
   140012479:	int3   
   14001247a:	int3   
   14001247b:	int3   
   14001247c:	mov    rax,rsp
   14001247f:	mov    QWORD PTR [rax+0x8],rbx
   140012483:	mov    QWORD PTR [rax+0x10],rbp
   140012487:	mov    QWORD PTR [rax+0x18],rsi
   14001248b:	mov    QWORD PTR [rax+0x20],rdi
   14001248f:	push   r14
   140012491:	sub    rsp,0x50
   140012495:	xor    r14d,r14d
   140012498:	mov    rbp,r8
   14001249b:	mov    rsi,rdx
   14001249e:	mov    rdi,rcx
   1400124a1:	test   rdx,rdx
   1400124a4:	je     0x1400124b9
   1400124a6:	test   r8,r8
   1400124a9:	je     0x1400124b9
   1400124ab:	cmp    BYTE PTR [rdx],r14b
   1400124ae:	jne    0x1400124d6
   1400124b0:	test   rcx,rcx
   1400124b3:	je     0x1400124b9
   1400124b5:	mov    WORD PTR [rcx],r14w
   1400124b9:	xor    eax,eax
   1400124bb:	mov    rbx,QWORD PTR [rsp+0x60]
   1400124c0:	mov    rbp,QWORD PTR [rsp+0x68]
   1400124c5:	mov    rsi,QWORD PTR [rsp+0x70]
   1400124ca:	mov    rdi,QWORD PTR [rsp+0x78]
   1400124cf:	add    rsp,0x50
   1400124d3:	pop    r14
   1400124d5:	ret    
   1400124d6:	lea    rcx,[rsp+0x30]
   1400124db:	mov    rdx,r9
   1400124de:	call   0x140008fac
   1400124e3:	mov    rax,QWORD PTR [rsp+0x30]
   1400124e8:	cmp    QWORD PTR [rax+0x138],r14
   1400124ef:	jne    0x140012506
   1400124f1:	test   rdi,rdi
   1400124f4:	je     0x1400124fc
   1400124f6:	movzx  eax,BYTE PTR [rsi]
   1400124f9:	mov    WORD PTR [rdi],ax
   1400124fc:	mov    ebx,0x1
   140012501:	jmp    0x1400125b3
   140012506:	movzx  ecx,BYTE PTR [rsi]
   140012509:	lea    rdx,[rsp+0x30]
   14001250e:	call   0x140011e44
   140012513:	mov    ebx,0x1
   140012518:	test   eax,eax
   14001251a:	je     0x140012576
   14001251c:	mov    rcx,QWORD PTR [rsp+0x30]
   140012521:	mov    r9d,DWORD PTR [rcx+0xd4]
   140012528:	cmp    r9d,ebx
   14001252b:	jle    0x14001255c
   14001252d:	cmp    ebp,r9d
   140012530:	jl     0x14001255c
   140012532:	mov    ecx,DWORD PTR [rcx+0x4]
   140012535:	mov    eax,r14d
   140012538:	test   rdi,rdi
   14001253b:	setne  al
   14001253e:	lea    edx,[rbx+0x8]
   140012541:	mov    r8,rsi
   140012544:	mov    DWORD PTR [rsp+0x28],eax
   140012548:	mov    QWORD PTR [rsp+0x20],rdi
   14001254d:	call   QWORD PTR [rip+0x19c35]        # 0x14002c188
   140012553:	mov    rcx,QWORD PTR [rsp+0x30]
   140012558:	test   eax,eax
   14001255a:	jne    0x14001256e
   14001255c:	movsxd rax,DWORD PTR [rcx+0xd4]
   140012563:	cmp    rbp,rax
   140012566:	jb     0x1400125a5
   140012568:	cmp    BYTE PTR [rsi+0x1],r14b
   14001256c:	je     0x1400125a5
   14001256e:	mov    ebx,DWORD PTR [rcx+0xd4]
   140012574:	jmp    0x1400125b3
   140012576:	mov    eax,r14d
   140012579:	test   rdi,rdi
   14001257c:	mov    r9d,ebx
   14001257f:	setne  al
   140012582:	mov    r8,rsi
   140012585:	mov    edx,0x9
   14001258a:	mov    DWORD PTR [rsp+0x28],eax
   14001258e:	mov    rax,QWORD PTR [rsp+0x30]
   140012593:	mov    QWORD PTR [rsp+0x20],rdi
   140012598:	mov    ecx,DWORD PTR [rax+0x4]
   14001259b:	call   QWORD PTR [rip+0x19be7]        # 0x14002c188
   1400125a1:	test   eax,eax
   1400125a3:	jne    0x1400125b3
   1400125a5:	call   0x140009cb4
   1400125aa:	or     ebx,0xffffffff
   1400125ad:	mov    DWORD PTR [rax],0x2a
   1400125b3:	cmp    BYTE PTR [rsp+0x48],r14b
   1400125b8:	je     0x1400125c6
   1400125ba:	mov    rcx,QWORD PTR [rsp+0x40]
   1400125bf:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400125c6:	mov    eax,ebx
   1400125c8:	jmp    0x1400124bb
   1400125cd:	int3   
   1400125ce:	int3   
   1400125cf:	int3   
   1400125d0:	xor    r9d,r9d
   1400125d3:	jmp    0x14001247c
   1400125d8:	mov    QWORD PTR [rsp+0x18],rbx
   1400125dd:	push   rbp
   1400125de:	push   rsi
   1400125df:	push   rdi
   1400125e0:	push   r12
   1400125e2:	push   r13
   1400125e4:	push   r14
   1400125e6:	push   r15
   1400125e8:	lea    rbp,[rsp-0x1e0]
   1400125f0:	sub    rsp,0x2e0
   1400125f7:	mov    rax,QWORD PTR [rip+0x29bd2]        # 0x14003c1d0
   1400125fe:	xor    rax,rsp
   140012601:	mov    QWORD PTR [rbp+0x1d8],rax
   140012608:	xor    eax,eax
   14001260a:	mov    rsi,rcx
   14001260d:	mov    QWORD PTR [rsp+0x68],rcx
   140012612:	mov    rdi,rdx
   140012615:	lea    rcx,[rbp-0x58]
   140012619:	mov    rdx,r8
   14001261c:	mov    r13,r9
   14001261f:	mov    DWORD PTR [rsp+0x70],eax
   140012623:	mov    r14d,eax
   140012626:	mov    DWORD PTR [rsp+0x54],eax
   14001262a:	mov    r12d,eax
   14001262d:	mov    DWORD PTR [rsp+0x48],eax
   140012631:	mov    DWORD PTR [rsp+0x60],eax
   140012635:	mov    DWORD PTR [rsp+0x58],eax
   140012639:	mov    ebx,eax
   14001263b:	mov    DWORD PTR [rsp+0x50],eax
   14001263f:	call   0x140008fac
   140012644:	call   0x140009cb4
   140012649:	or     r8d,0xffffffff
   14001264d:	xor    r10d,r10d
   140012650:	mov    QWORD PTR [rbp-0x80],rax
   140012654:	test   rsi,rsi
   140012657:	je     0x140012f93
   14001265d:	test   BYTE PTR [rsi+0x18],0x40
   140012661:	lea    r9,[rip+0xfffffffffffed998]        # 0x140000000
   140012668:	jne    0x1400126f4
   14001266e:	mov    rcx,rsi
   140012671:	call   0x140010f18
   140012676:	lea    r8,[rip+0x29bb3]        # 0x14003c230
   14001267d:	movsxd r10,eax
   140012680:	lea    ecx,[r10+0x2]
   140012684:	cmp    ecx,0x1
   140012687:	jbe    0x1400126ab
   140012689:	mov    rdx,r10
   14001268c:	mov    rcx,r10
   14001268f:	lea    rax,[rip+0xfffffffffffed96a]        # 0x140000000
   140012696:	and    edx,0x1f
   140012699:	sar    rcx,0x5
   14001269d:	imul   r9,rdx,0x58
   1400126a1:	add    r9,QWORD PTR [rax+rcx*8+0x3dd10]
   1400126a9:	jmp    0x1400126ae
   1400126ab:	mov    r9,r8
   1400126ae:	test   BYTE PTR [r9+0x38],0x7f
   1400126b3:	jne    0x140012f93
   1400126b9:	lea    eax,[r10+0x2]
   1400126bd:	lea    r9,[rip+0xfffffffffffed93c]        # 0x140000000
   1400126c4:	cmp    eax,0x1
   1400126c7:	jbe    0x1400126e2
   1400126c9:	mov    rcx,r10
   1400126cc:	mov    rax,r10
   1400126cf:	and    ecx,0x1f
   1400126d2:	sar    rax,0x5
   1400126d6:	imul   r8,rcx,0x58
   1400126da:	add    r8,QWORD PTR [r9+rax*8+0x3dd10]
   1400126e2:	test   BYTE PTR [r8+0x38],0x80
   1400126e7:	jne    0x140012f93
   1400126ed:	or     r8d,0xffffffff
   1400126f1:	xor    r10d,r10d
   1400126f4:	test   rdi,rdi
   1400126f7:	je     0x140012f93
   1400126fd:	mov    r15b,BYTE PTR [rdi]
   140012700:	mov    esi,r10d
   140012703:	mov    DWORD PTR [rsp+0x40],r10d
   140012708:	mov    DWORD PTR [rsp+0x44],r10d
   14001270d:	mov    edx,r10d
   140012710:	mov    QWORD PTR [rbp-0x78],r10
   140012714:	test   r15b,r15b
   140012717:	je     0x140012fab
   14001271d:	mov    r11d,0x200
   140012723:	inc    rdi
   140012726:	mov    QWORD PTR [rbp-0x68],rdi
   14001272a:	test   esi,esi
   14001272c:	js     0x140012fab
   140012732:	lea    eax,[r15-0x20]
   140012736:	cmp    al,0x58
   140012738:	ja     0x14001274c
   14001273a:	movsx  rax,r15b
   14001273e:	movsx  ecx,BYTE PTR [rax+r9*1+0x331d0]
   140012747:	and    ecx,0xf
   14001274a:	jmp    0x14001274f
   14001274c:	mov    ecx,r10d
   14001274f:	movsxd rax,edx
   140012752:	movsxd rcx,ecx
   140012755:	lea    rdx,[rax+rcx*8]
   140012759:	movsx  edx,BYTE PTR [rdx+r9*1+0x331f0]
   140012762:	sar    edx,0x4
   140012765:	mov    DWORD PTR [rsp+0x5c],edx
   140012769:	mov    ecx,edx
   14001276b:	test   edx,edx
   14001276d:	je     0x140012e55
   140012773:	dec    ecx
   140012775:	je     0x140012f6f
   14001277b:	dec    ecx
   14001277d:	je     0x140012f1f
   140012783:	dec    ecx
   140012785:	je     0x140012ee3
   14001278b:	dec    ecx
   14001278d:	je     0x140012edb
   140012793:	dec    ecx
   140012795:	je     0x140012ea6
   14001279b:	dec    ecx
   14001279d:	je     0x140012dcb
   1400127a3:	dec    ecx
   1400127a5:	jne    0x140012db6
   1400127ab:	movsx  ecx,r15b
   1400127af:	cmp    ecx,0x64
   1400127b2:	jg     0x140012921
   1400127b8:	je     0x140012a19
   1400127be:	cmp    ecx,0x41
   1400127c1:	je     0x1400128f6
   1400127c7:	cmp    ecx,0x43
   1400127ca:	je     0x14001289c
   1400127d0:	lea    eax,[rcx-0x45]
   1400127d3:	test   eax,0xfffffffd
   1400127d8:	je     0x1400128f6
   1400127de:	cmp    ecx,0x53
   1400127e1:	je     0x140012850
   1400127e3:	cmp    ecx,0x58
   1400127e6:	je     0x1400129b2
   1400127ec:	cmp    ecx,0x5a
   1400127ef:	je     0x140012808
   1400127f1:	cmp    ecx,0x61
   1400127f4:	je     0x140012902
   1400127fa:	cmp    ecx,0x63
   1400127fd:	je     0x1400128aa
   140012803:	jmp    0x140012c24
   140012808:	mov    rax,QWORD PTR [r13+0x0]
   14001280c:	add    r13,0x8
   140012810:	test   rax,rax
   140012813:	je     0x140012844
   140012815:	mov    rbx,QWORD PTR [rax+0x8]
   140012819:	test   rbx,rbx
   14001281c:	je     0x140012844
   14001281e:	movsx  eax,WORD PTR [rax]
   140012821:	bt     r14d,0xb
   140012826:	jae    0x14001283a
   140012828:	cdq    
   140012829:	mov    DWORD PTR [rsp+0x50],0x1
   140012831:	sub    eax,edx
   140012833:	sar    eax,1
   140012835:	jmp    0x140012c20
   14001283a:	mov    DWORD PTR [rsp+0x50],r10d
   14001283f:	jmp    0x140012c20
   140012844:	mov    rbx,QWORD PTR [rip+0x2a9d5]        # 0x14003d220
   14001284b:	jmp    0x140012c15
   140012850:	test   r14d,0x830
   140012857:	jne    0x14001285e
   140012859:	bts    r14d,0xb
   14001285e:	mov    rbx,QWORD PTR [r13+0x0]
   140012862:	cmp    r12d,r8d
   140012865:	mov    eax,r12d
   140012868:	mov    ecx,0x7fffffff
   14001286d:	cmove  eax,ecx
   140012870:	add    r13,0x8
   140012874:	test   r14d,0x810
   14001287b:	je     0x14001297e
   140012881:	test   rbx,rbx
   140012884:	mov    DWORD PTR [rsp+0x50],0x1
   14001288c:	cmove  rbx,QWORD PTR [rip+0x2a994]        # 0x14003d228
   140012894:	mov    rcx,rbx
   140012897:	jmp    0x140012972
   14001289c:	test   r14d,0x830
   1400128a3:	jne    0x1400128aa
   1400128a5:	bts    r14d,0xb
   1400128aa:	add    r13,0x8
   1400128ae:	test   r14d,0x810
   1400128b5:	je     0x1400128de
   1400128b7:	movzx  r9d,WORD PTR [r13-0x8]
   1400128bc:	lea    rdx,[rbp-0x30]
   1400128c0:	lea    rcx,[rsp+0x44]
   1400128c5:	mov    r8,r11
   1400128c8:	call   0x14001f4b4
   1400128cd:	xor    r10d,r10d
   1400128d0:	test   eax,eax
   1400128d2:	je     0x1400128ed
   1400128d4:	mov    DWORD PTR [rsp+0x58],0x1
   1400128dc:	jmp    0x1400128ed
   1400128de:	mov    al,BYTE PTR [r13-0x8]
   1400128e2:	mov    DWORD PTR [rsp+0x44],0x1
   1400128ea:	mov    BYTE PTR [rbp-0x30],al
   1400128ed:	lea    rbx,[rbp-0x30]
   1400128f1:	jmp    0x140012c24
   1400128f6:	mov    DWORD PTR [rsp+0x60],0x1
   1400128fe:	add    r15b,0x20
   140012902:	or     r14d,0x40
   140012906:	lea    rbx,[rbp-0x30]
   14001290a:	mov    esi,r11d
   14001290d:	test   r12d,r12d
   140012910:	jns    0x140012b37
   140012916:	mov    r12d,0x6
   14001291c:	jmp    0x140012b7d
   140012921:	cmp    ecx,0x67
   140012924:	jle    0x140012902
   140012926:	cmp    ecx,0x69
   140012929:	je     0x140012a19
   14001292f:	cmp    ecx,0x6e
   140012932:	je     0x1400129e7
   140012938:	cmp    ecx,0x6f
   14001293b:	je     0x1400129d7
   140012941:	cmp    ecx,0x70
   140012944:	je     0x1400129a7
   140012946:	cmp    ecx,0x73
   140012949:	je     0x14001285e
   14001294f:	cmp    ecx,0x75
   140012952:	je     0x140012a1d
   140012958:	cmp    ecx,0x78
   14001295b:	jne    0x140012c24
   140012961:	lea    eax,[rcx-0x51]
   140012964:	jmp    0x1400129b7
   140012966:	dec    eax
   140012968:	cmp    WORD PTR [rcx],r10w
   14001296c:	je     0x140012976
   14001296e:	add    rcx,0x2
   140012972:	test   eax,eax
   140012974:	jne    0x140012966
   140012976:	sub    rcx,rbx
   140012979:	sar    rcx,1
   14001297c:	jmp    0x14001299e
   14001297e:	test   rbx,rbx
   140012981:	cmove  rbx,QWORD PTR [rip+0x2a897]        # 0x14003d220
   140012989:	mov    rcx,rbx
   14001298c:	jmp    0x140012998
   14001298e:	dec    eax
   140012990:	cmp    BYTE PTR [rcx],r10b
   140012993:	je     0x14001299c
   140012995:	inc    rcx
   140012998:	test   eax,eax
   14001299a:	jne    0x14001298e
   14001299c:	sub    ecx,ebx
   14001299e:	mov    DWORD PTR [rsp+0x44],ecx
   1400129a2:	jmp    0x140012c24
   1400129a7:	mov    r12d,0x10
   1400129ad:	bts    r14d,0xf
   1400129b2:	mov    eax,0x7
   1400129b7:	mov    DWORD PTR [rsp+0x70],eax
   1400129bb:	mov    r9d,0x10
   1400129c1:	test   r14b,r14b
   1400129c4:	jns    0x140012a23
   1400129c6:	add    al,0x51
   1400129c8:	mov    BYTE PTR [rsp+0x4c],0x30
   1400129cd:	lea    edx,[r9-0xe]
   1400129d1:	mov    BYTE PTR [rsp+0x4d],al
   1400129d5:	jmp    0x140012a27
   1400129d7:	mov    r9d,0x8
   1400129dd:	test   r14b,r14b
   1400129e0:	jns    0x140012a23
   1400129e2:	or     r14d,r11d
   1400129e5:	jmp    0x140012a23
   1400129e7:	mov    rdi,QWORD PTR [r13+0x0]
   1400129eb:	add    r13,0x8
   1400129ef:	call   0x140012070
   1400129f4:	xor    r10d,r10d
   1400129f7:	test   eax,eax
   1400129f9:	je     0x140012f93
   1400129ff:	test   r14b,0x20
   140012a03:	je     0x140012a0a
   140012a05:	mov    WORD PTR [rdi],si
   140012a08:	jmp    0x140012a0c
   140012a0a:	mov    DWORD PTR [rdi],esi
   140012a0c:	mov    DWORD PTR [rsp+0x58],0x1
   140012a14:	jmp    0x140012d85
   140012a19:	or     r14d,0x40
   140012a1d:	mov    r9d,0xa
   140012a23:	mov    edx,DWORD PTR [rsp+0x48]
   140012a27:	mov    eax,0x8000
   140012a2c:	test   eax,r14d
   140012a2f:	je     0x140012a3b
   140012a31:	mov    r8,QWORD PTR [r13+0x0]
   140012a35:	add    r13,0x8
   140012a39:	jmp    0x140012a75
   140012a3b:	bt     r14d,0xc
   140012a40:	jb     0x140012a31
   140012a42:	add    r13,0x8
   140012a46:	test   r14b,0x20
   140012a4a:	je     0x140012a65
   140012a4c:	mov    QWORD PTR [rsp+0x78],r13
   140012a51:	test   r14b,0x40
   140012a55:	je     0x140012a5e
   140012a57:	movsx  r8,WORD PTR [r13-0x8]
   140012a5c:	jmp    0x140012a7a
   140012a5e:	movzx  r8d,WORD PTR [r13-0x8]
   140012a63:	jmp    0x140012a7a
   140012a65:	test   r14b,0x40
   140012a69:	je     0x140012a71
   140012a6b:	movsxd r8,DWORD PTR [r13-0x8]
   140012a6f:	jmp    0x140012a75
   140012a71:	mov    r8d,DWORD PTR [r13-0x8]
   140012a75:	mov    QWORD PTR [rsp+0x78],r13
   140012a7a:	test   r14b,0x40
   140012a7e:	je     0x140012a8d
   140012a80:	test   r8,r8
   140012a83:	jns    0x140012a8d
   140012a85:	neg    r8
   140012a88:	bts    r14d,0x8
   140012a8d:	test   eax,r14d
   140012a90:	jne    0x140012a9c
   140012a92:	bt     r14d,0xc
   140012a97:	jb     0x140012a9c
   140012a99:	mov    r8d,r8d
   140012a9c:	test   r12d,r12d
   140012a9f:	jns    0x140012aa9
   140012aa1:	mov    r12d,0x1
   140012aa7:	jmp    0x140012ab4
   140012aa9:	and    r14d,0xfffffff7
   140012aad:	cmp    r12d,r11d
   140012ab0:	cmovg  r12d,r11d
   140012ab4:	mov    r13d,DWORD PTR [rsp+0x70]
   140012ab9:	mov    rax,r8
   140012abc:	lea    rbx,[rbp+0x1cf]
   140012ac3:	neg    rax
   140012ac6:	sbb    ecx,ecx
   140012ac8:	and    ecx,edx
   140012aca:	mov    DWORD PTR [rsp+0x48],ecx
   140012ace:	mov    ecx,r12d
   140012ad1:	dec    r12d
   140012ad4:	test   ecx,ecx
   140012ad6:	jg     0x140012add
   140012ad8:	test   r8,r8
   140012adb:	je     0x140012afd
   140012add:	xor    edx,edx
   140012adf:	mov    rax,r8
   140012ae2:	movsxd rcx,r9d
   140012ae5:	div    rcx
   140012ae8:	mov    r8,rax
   140012aeb:	lea    eax,[rdx+0x30]
   140012aee:	cmp    eax,0x39
   140012af1:	jle    0x140012af6
   140012af3:	add    eax,r13d
   140012af6:	mov    BYTE PTR [rbx],al
   140012af8:	dec    rbx
   140012afb:	jmp    0x140012ace
   140012afd:	mov    r13,QWORD PTR [rsp+0x78]
   140012b02:	lea    rax,[rbp+0x1cf]
   140012b09:	sub    eax,ebx
   140012b0b:	inc    rbx
   140012b0e:	mov    DWORD PTR [rsp+0x44],eax
   140012b12:	test   r11d,r14d
   140012b15:	je     0x140012c24
   140012b1b:	test   eax,eax
   140012b1d:	je     0x140012b28
   140012b1f:	cmp    BYTE PTR [rbx],0x30
   140012b22:	je     0x140012c24
   140012b28:	dec    rbx
   140012b2b:	inc    DWORD PTR [rsp+0x44]
   140012b2f:	mov    BYTE PTR [rbx],0x30
   140012b32:	jmp    0x140012c24
   140012b37:	jne    0x140012b47
   140012b39:	cmp    r15b,0x67
   140012b3d:	jne    0x140012b7d
   140012b3f:	mov    r12d,0x1
   140012b45:	jmp    0x140012b7d
   140012b47:	cmp    r12d,r11d
   140012b4a:	cmovg  r12d,r11d
   140012b4e:	cmp    r12d,0xa3
   140012b55:	jle    0x140012b7d
   140012b57:	lea    edi,[r12+0x15d]
   140012b5f:	movsxd rcx,edi
   140012b62:	call   0x140008684
   140012b67:	mov    QWORD PTR [rbp-0x78],rax
   140012b6b:	test   rax,rax
   140012b6e:	je     0x140012b77
   140012b70:	mov    rbx,rax
   140012b73:	mov    esi,edi
   140012b75:	jmp    0x140012b7d
   140012b77:	mov    r12d,0xa3
   140012b7d:	mov    rax,QWORD PTR [r13+0x0]
   140012b81:	mov    rcx,QWORD PTR [rip+0x29688]        # 0x14003c210
   140012b88:	add    r13,0x8
   140012b8c:	movsx  edi,r15b
   140012b90:	movsxd rsi,esi
   140012b93:	mov    QWORD PTR [rbp-0x60],rax
   140012b97:	call   QWORD PTR [rip+0x1957b]        # 0x14002c118
   140012b9d:	lea    rcx,[rbp-0x58]
   140012ba1:	mov    r9d,edi
   140012ba4:	mov    QWORD PTR [rsp+0x30],rcx
   140012ba9:	mov    ecx,DWORD PTR [rsp+0x60]
   140012bad:	mov    r8,rsi
   140012bb0:	mov    DWORD PTR [rsp+0x28],ecx
   140012bb4:	lea    rcx,[rbp-0x60]
   140012bb8:	mov    rdx,rbx
   140012bbb:	mov    DWORD PTR [rsp+0x20],r12d
   140012bc0:	call   rax
   140012bc2:	mov    edi,r14d
   140012bc5:	and    edi,0x80
   140012bcb:	je     0x140012be8
   140012bcd:	test   r12d,r12d
   140012bd0:	jne    0x140012be8
   140012bd2:	mov    rcx,QWORD PTR [rip+0x2964f]        # 0x14003c228
   140012bd9:	call   QWORD PTR [rip+0x19539]        # 0x14002c118
   140012bdf:	lea    rdx,[rbp-0x58]
   140012be3:	mov    rcx,rbx
   140012be6:	call   rax
   140012be8:	cmp    r15b,0x67
   140012bec:	jne    0x140012c08
   140012bee:	test   edi,edi
   140012bf0:	jne    0x140012c08
   140012bf2:	mov    rcx,QWORD PTR [rip+0x29627]        # 0x14003c220
   140012bf9:	call   QWORD PTR [rip+0x19519]        # 0x14002c118
   140012bff:	lea    rdx,[rbp-0x58]
   140012c03:	mov    rcx,rbx
   140012c06:	call   rax
   140012c08:	cmp    BYTE PTR [rbx],0x2d
   140012c0b:	jne    0x140012c15
   140012c0d:	bts    r14d,0x8
   140012c12:	inc    rbx
   140012c15:	mov    rcx,rbx
   140012c18:	call   0x140007550
   140012c1d:	xor    r10d,r10d
   140012c20:	mov    DWORD PTR [rsp+0x44],eax
   140012c24:	cmp    DWORD PTR [rsp+0x58],r10d
   140012c29:	jne    0x140012d85
   140012c2f:	test   r14b,0x40
   140012c33:	je     0x140012c66
   140012c35:	bt     r14d,0x8
   140012c3a:	jae    0x140012c43
   140012c3c:	mov    BYTE PTR [rsp+0x4c],0x2d
   140012c41:	jmp    0x140012c4e
   140012c43:	test   r14b,0x1
   140012c47:	je     0x140012c59
   140012c49:	mov    BYTE PTR [rsp+0x4c],0x2b
   140012c4e:	mov    edi,0x1
   140012c53:	mov    DWORD PTR [rsp+0x48],edi
   140012c57:	jmp    0x140012c6a
   140012c59:	test   r14b,0x2
   140012c5d:	je     0x140012c66
   140012c5f:	mov    BYTE PTR [rsp+0x4c],0x20
   140012c64:	jmp    0x140012c4e
   140012c66:	mov    edi,DWORD PTR [rsp+0x48]
   140012c6a:	mov    esi,DWORD PTR [rsp+0x54]
   140012c6e:	mov    r15,QWORD PTR [rsp+0x68]
   140012c73:	sub    esi,DWORD PTR [rsp+0x44]
   140012c77:	sub    esi,edi
   140012c79:	test   r14b,0xc
   140012c7d:	jne    0x140012c90
   140012c7f:	lea    r9,[rsp+0x40]
   140012c84:	mov    r8,r15
   140012c87:	mov    edx,esi
   140012c89:	mov    cl,0x20
   140012c8b:	call   0x14001303c
   140012c90:	mov    rax,QWORD PTR [rbp-0x80]
   140012c94:	lea    r9,[rsp+0x40]
   140012c99:	lea    rcx,[rsp+0x4c]
   140012c9e:	mov    r8,r15
   140012ca1:	mov    edx,edi
   140012ca3:	mov    QWORD PTR [rsp+0x20],rax
   140012ca8:	call   0x140013090
   140012cad:	test   r14b,0x8
   140012cb1:	je     0x140012cca
   140012cb3:	test   r14b,0x4
   140012cb7:	jne    0x140012cca
   140012cb9:	lea    r9,[rsp+0x40]
   140012cbe:	mov    r8,r15
   140012cc1:	mov    edx,esi
   140012cc3:	mov    cl,0x30
   140012cc5:	call   0x14001303c
   140012cca:	cmp    DWORD PTR [rsp+0x50],0x0
   140012ccf:	mov    edi,DWORD PTR [rsp+0x44]
   140012cd3:	je     0x140012d45
   140012cd5:	test   edi,edi
   140012cd7:	jle    0x140012d45
   140012cd9:	mov    r15,rbx
   140012cdc:	movzx  r9d,WORD PTR [r15]
   140012ce0:	lea    rdx,[rbp+0x1d0]
   140012ce7:	lea    rcx,[rbp-0x70]
   140012ceb:	mov    r8d,0x6
   140012cf1:	dec    edi
   140012cf3:	lea    r15,[r15+0x2]
   140012cf7:	call   0x14001f4b4
   140012cfc:	xor    r10d,r10d
   140012cff:	test   eax,eax
   140012d01:	jne    0x140012d37
   140012d03:	mov    edx,DWORD PTR [rbp-0x70]
   140012d06:	test   edx,edx
   140012d08:	je     0x140012d37
   140012d0a:	mov    rax,QWORD PTR [rbp-0x80]
   140012d0e:	mov    r8,QWORD PTR [rsp+0x68]
   140012d13:	lea    r9,[rsp+0x40]
   140012d18:	lea    rcx,[rbp+0x1d0]
   140012d1f:	mov    QWORD PTR [rsp+0x20],rax
   140012d24:	call   0x140013090
   140012d29:	xor    r10d,r10d
   140012d2c:	test   edi,edi
   140012d2e:	jne    0x140012cdc
   140012d30:	mov    r15,QWORD PTR [rsp+0x68]
   140012d35:	jmp    0x140012d63
   140012d37:	mov    r15,QWORD PTR [rsp+0x68]
   140012d3c:	or     eax,0xffffffff
   140012d3f:	mov    DWORD PTR [rsp+0x40],eax
   140012d43:	jmp    0x140012d67
   140012d45:	mov    rax,QWORD PTR [rbp-0x80]
   140012d49:	lea    r9,[rsp+0x40]
   140012d4e:	mov    r8,r15
   140012d51:	mov    edx,edi
   140012d53:	mov    rcx,rbx
   140012d56:	mov    QWORD PTR [rsp+0x20],rax
   140012d5b:	call   0x140013090
   140012d60:	xor    r10d,r10d
   140012d63:	mov    eax,DWORD PTR [rsp+0x40]
   140012d67:	test   eax,eax
   140012d69:	js     0x140012d85
   140012d6b:	test   r14b,0x4
   140012d6f:	je     0x140012d85
   140012d71:	lea    r9,[rsp+0x40]
   140012d76:	mov    r8,r15
   140012d79:	mov    edx,esi
   140012d7b:	mov    cl,0x20
   140012d7d:	call   0x14001303c
   140012d82:	xor    r10d,r10d
   140012d85:	mov    rax,QWORD PTR [rbp-0x78]
   140012d89:	test   rax,rax
   140012d8c:	je     0x140012d9d
   140012d8e:	mov    rcx,rax
   140012d91:	call   0x140007dc0
   140012d96:	xor    r10d,r10d
   140012d99:	mov    QWORD PTR [rbp-0x78],r10
   140012d9d:	mov    rdi,QWORD PTR [rbp-0x68]
   140012da1:	mov    esi,DWORD PTR [rsp+0x40]
   140012da5:	mov    edx,DWORD PTR [rsp+0x5c]
   140012da9:	mov    r11d,0x200
   140012daf:	lea    r9,[rip+0xfffffffffffed24a]        # 0x140000000
   140012db6:	mov    r15b,BYTE PTR [rdi]
   140012db9:	test   r15b,r15b
   140012dbc:	je     0x140012fab
   140012dc2:	or     r8d,0xffffffff
   140012dc6:	jmp    0x140012723
   140012dcb:	cmp    r15b,0x49
   140012dcf:	je     0x140012e05
   140012dd1:	cmp    r15b,0x68
   140012dd5:	je     0x140012dff
   140012dd7:	cmp    r15b,0x6c
   140012ddb:	je     0x140012dea
   140012ddd:	cmp    r15b,0x77
   140012de1:	jne    0x140012db6
   140012de3:	bts    r14d,0xb
   140012de8:	jmp    0x140012db6
   140012dea:	cmp    BYTE PTR [rdi],0x6c
   140012ded:	jne    0x140012df9
   140012def:	inc    rdi
   140012df2:	bts    r14d,0xc
   140012df7:	jmp    0x140012db6
   140012df9:	or     r14d,0x10
   140012dfd:	jmp    0x140012db6
   140012dff:	or     r14d,0x20
   140012e03:	jmp    0x140012db6
   140012e05:	mov    al,BYTE PTR [rdi]
   140012e07:	bts    r14d,0xf
   140012e0c:	cmp    al,0x36
   140012e0e:	jne    0x140012e21
   140012e10:	cmp    BYTE PTR [rdi+0x1],0x34
   140012e14:	jne    0x140012e21
   140012e16:	add    rdi,0x2
   140012e1a:	bts    r14d,0xf
   140012e1f:	jmp    0x140012db6
   140012e21:	cmp    al,0x33
   140012e23:	jne    0x140012e36
   140012e25:	cmp    BYTE PTR [rdi+0x1],0x32
   140012e29:	jne    0x140012e36
   140012e2b:	add    rdi,0x2
   140012e2f:	btr    r14d,0xf
   140012e34:	jmp    0x140012db6
   140012e36:	sub    al,0x58
   140012e38:	cmp    al,0x20
   140012e3a:	ja     0x140012e50
   140012e3c:	movabs rcx,0x120821001
   140012e46:	bt     rcx,rax
   140012e4a:	jb     0x140012db6
   140012e50:	mov    DWORD PTR [rsp+0x5c],r10d
   140012e55:	lea    rdx,[rbp-0x58]
   140012e59:	movzx  ecx,r15b
   140012e5d:	mov    DWORD PTR [rsp+0x50],r10d
   140012e62:	call   0x140011e44
   140012e67:	test   eax,eax
   140012e69:	je     0x140012e8c
   140012e6b:	mov    rdx,QWORD PTR [rsp+0x68]
   140012e70:	lea    r8,[rsp+0x40]
   140012e75:	mov    cl,r15b
   140012e78:	call   0x140012ff4
   140012e7d:	mov    r15b,BYTE PTR [rdi]
   140012e80:	inc    rdi
   140012e83:	test   r15b,r15b
   140012e86:	je     0x140012f93
   140012e8c:	mov    rdx,QWORD PTR [rsp+0x68]
   140012e91:	lea    r8,[rsp+0x40]
   140012e96:	mov    cl,r15b
   140012e99:	call   0x140012ff4
   140012e9e:	xor    r10d,r10d
   140012ea1:	jmp    0x140012da1
   140012ea6:	cmp    r15b,0x2a
   140012eaa:	jne    0x140012ec5
   140012eac:	mov    r12d,DWORD PTR [r13+0x0]
   140012eb0:	add    r13,0x8
   140012eb4:	test   r12d,r12d
   140012eb7:	jns    0x140012db6
   140012ebd:	mov    r12d,r8d
   140012ec0:	jmp    0x140012db6
   140012ec5:	lea    r12d,[r12+r12*4]
   140012ec9:	movsx  eax,r15b
   140012ecd:	lea    r12d,[r12-0x18]
   140012ed2:	lea    r12d,[rax+r12*2]
   140012ed6:	jmp    0x140012db6
   140012edb:	mov    r12d,r10d
   140012ede:	jmp    0x140012db6
   140012ee3:	cmp    r15b,0x2a
   140012ee7:	jne    0x140012f05
   140012ee9:	mov    eax,DWORD PTR [r13+0x0]
   140012eed:	add    r13,0x8
   140012ef1:	mov    DWORD PTR [rsp+0x54],eax
   140012ef5:	test   eax,eax
   140012ef7:	jns    0x140012db6
   140012efd:	or     r14d,0x4
   140012f01:	neg    eax
   140012f03:	jmp    0x140012f16
   140012f05:	mov    eax,DWORD PTR [rsp+0x54]
   140012f09:	lea    ecx,[rax+rax*4]
   140012f0c:	movsx  eax,r15b
   140012f10:	lea    eax,[rax+rcx*2]
   140012f13:	add    eax,0xffffffd0
   140012f16:	mov    DWORD PTR [rsp+0x54],eax
   140012f1a:	jmp    0x140012db6
   140012f1f:	cmp    r15b,0x20
   140012f23:	je     0x140012f66
   140012f25:	cmp    r15b,0x23
   140012f29:	je     0x140012f5c
   140012f2b:	cmp    r15b,0x2b
   140012f2f:	je     0x140012f53
   140012f31:	cmp    r15b,0x2d
   140012f35:	je     0x140012f4a
   140012f37:	cmp    r15b,0x30
   140012f3b:	jne    0x140012db6
   140012f41:	or     r14d,0x8
   140012f45:	jmp    0x140012db6
   140012f4a:	or     r14d,0x4
   140012f4e:	jmp    0x140012db6
   140012f53:	or     r14d,0x1
   140012f57:	jmp    0x140012db6
   140012f5c:	bts    r14d,0x7
   140012f61:	jmp    0x140012db6
   140012f66:	or     r14d,0x2
   140012f6a:	jmp    0x140012db6
   140012f6f:	mov    DWORD PTR [rsp+0x60],r10d
   140012f74:	mov    DWORD PTR [rsp+0x58],r10d
   140012f79:	mov    DWORD PTR [rsp+0x54],r10d
   140012f7e:	mov    DWORD PTR [rsp+0x48],r10d
   140012f83:	mov    r14d,r10d
   140012f86:	mov    r12d,r8d
   140012f89:	mov    DWORD PTR [rsp+0x50],r10d
   140012f8e:	jmp    0x140012db6
   140012f93:	call   0x140009cb4
   140012f98:	mov    DWORD PTR [rax],0x16
   140012f9e:	call   0x140008d58
   140012fa3:	or     eax,0xffffffff
   140012fa6:	xor    r10d,r10d
   140012fa9:	jmp    0x140012fad
   140012fab:	mov    eax,esi
   140012fad:	cmp    BYTE PTR [rbp-0x40],r10b
   140012fb1:	je     0x140012fbe
   140012fb3:	mov    rcx,QWORD PTR [rbp-0x48]
   140012fb7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140012fbe:	mov    rcx,QWORD PTR [rbp+0x1d8]
   140012fc5:	xor    rcx,rsp
   140012fc8:	call   0x14000c380
   140012fcd:	mov    rbx,QWORD PTR [rsp+0x330]
   140012fd5:	add    rsp,0x2e0
   140012fdc:	pop    r15
   140012fde:	pop    r14
   140012fe0:	pop    r13
   140012fe2:	pop    r12
   140012fe4:	pop    rdi
   140012fe5:	pop    rsi
   140012fe6:	pop    rbp
   140012fe7:	ret    
   140012fe8:	add    QWORD PTR [rcx],0x8
   140012fec:	mov    rax,QWORD PTR [rcx]
   140012fef:	movzx  eax,WORD PTR [rax-0x8]
   140012ff3:	ret    
   140012ff4:	rex push rbx
   140012ff6:	sub    rsp,0x20
   140012ffa:	test   BYTE PTR [rdx+0x18],0x40
   140012ffe:	mov    rbx,r8
   140013001:	je     0x14001300f
   140013003:	cmp    QWORD PTR [rdx+0x10],0x0
   140013008:	jne    0x14001300f
   14001300a:	inc    DWORD PTR [r8]
   14001300d:	jmp    0x140013034
   14001300f:	dec    DWORD PTR [rdx+0x8]
   140013012:	js     0x140013021
   140013014:	mov    rax,QWORD PTR [rdx]
   140013017:	mov    BYTE PTR [rax],cl
   140013019:	inc    QWORD PTR [rdx]
   14001301c:	movzx  eax,cl
   14001301f:	jmp    0x140013029
   140013021:	movsx  ecx,cl
   140013024:	call   0x140008e20
   140013029:	cmp    eax,0xffffffff
   14001302c:	jne    0x140013032
   14001302e:	or     DWORD PTR [rbx],eax
   140013030:	jmp    0x140013034
   140013032:	inc    DWORD PTR [rbx]
   140013034:	add    rsp,0x20
   140013038:	pop    rbx
   140013039:	ret    
   14001303a:	int3   
   14001303b:	int3   
   14001303c:	test   edx,edx
   14001303e:	jle    0x14001308c
   140013040:	mov    QWORD PTR [rsp+0x8],rbx
   140013045:	mov    QWORD PTR [rsp+0x10],rbp
   14001304a:	mov    QWORD PTR [rsp+0x18],rsi
   14001304f:	push   rdi
   140013050:	sub    rsp,0x20
   140013054:	mov    rdi,r9
   140013057:	mov    rsi,r8
   14001305a:	mov    ebx,edx
   14001305c:	mov    bpl,cl
   14001305f:	mov    r8,rdi
   140013062:	mov    rdx,rsi
   140013065:	mov    cl,bpl
   140013068:	dec    ebx
   14001306a:	call   0x140012ff4
   14001306f:	cmp    DWORD PTR [rdi],0xffffffff
   140013072:	je     0x140013078
   140013074:	test   ebx,ebx
   140013076:	jg     0x14001305f
   140013078:	mov    rbx,QWORD PTR [rsp+0x30]
   14001307d:	mov    rbp,QWORD PTR [rsp+0x38]
   140013082:	mov    rsi,QWORD PTR [rsp+0x40]
   140013087:	add    rsp,0x20
   14001308b:	pop    rdi
   14001308c:	ret    
   14001308d:	int3   
   14001308e:	int3   
   14001308f:	int3   
   140013090:	mov    QWORD PTR [rsp+0x8],rbx
   140013095:	mov    QWORD PTR [rsp+0x10],rbp
   14001309a:	mov    QWORD PTR [rsp+0x18],rsi
   14001309f:	push   rdi
   1400130a0:	push   r14
   1400130a2:	push   r15
   1400130a4:	sub    rsp,0x20
   1400130a8:	test   BYTE PTR [r8+0x18],0x40
   1400130ad:	mov    rbx,QWORD PTR [rsp+0x60]
   1400130b2:	mov    rdi,r9
   1400130b5:	mov    r15d,DWORD PTR [rbx]
   1400130b8:	mov    rbp,r8
   1400130bb:	mov    esi,edx
   1400130bd:	mov    r14,rcx
   1400130c0:	je     0x1400130ce
   1400130c2:	cmp    QWORD PTR [r8+0x10],0x0
   1400130c7:	jne    0x1400130ce
   1400130c9:	add    DWORD PTR [r9],edx
   1400130cc:	jmp    0x14001310b
   1400130ce:	and    DWORD PTR [rbx],0x0
   1400130d1:	test   edx,edx
   1400130d3:	jle    0x140013108
   1400130d5:	mov    cl,BYTE PTR [r14]
   1400130d8:	mov    r8,rdi
   1400130db:	mov    rdx,rbp
   1400130de:	dec    esi
   1400130e0:	call   0x140012ff4
   1400130e5:	inc    r14
   1400130e8:	cmp    DWORD PTR [rdi],0xffffffff
   1400130eb:	jne    0x1400130ff
   1400130ed:	cmp    DWORD PTR [rbx],0x2a
   1400130f0:	jne    0x140013103
   1400130f2:	mov    r8,rdi
   1400130f5:	mov    rdx,rbp
   1400130f8:	mov    cl,0x3f
   1400130fa:	call   0x140012ff4
   1400130ff:	test   esi,esi
   140013101:	jg     0x1400130d5
   140013103:	cmp    DWORD PTR [rbx],0x0
   140013106:	jne    0x14001310b
   140013108:	mov    DWORD PTR [rbx],r15d
   14001310b:	mov    rbx,QWORD PTR [rsp+0x40]
   140013110:	mov    rbp,QWORD PTR [rsp+0x48]
   140013115:	mov    rsi,QWORD PTR [rsp+0x50]
   14001311a:	add    rsp,0x20
   14001311e:	pop    r15
   140013120:	pop    r14
   140013122:	pop    rdi
   140013123:	ret    
   140013124:	int3   
   140013125:	int3   
   140013126:	int3   
   140013127:	int3   
   140013128:	int3   
   140013129:	int3   
   14001312a:	int3   
   14001312b:	int3   
   14001312c:	int3   
   14001312d:	int3   
   14001312e:	int3   
   14001312f:	int3   
   140013130:	int3   
   140013131:	int3   
   140013132:	int3   
   140013133:	int3   
   140013134:	int3   
   140013135:	int3   
   140013136:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013140:	sub    rsp,0x8
   140013144:	stmxcsr DWORD PTR [rsp]
   140013148:	mov    eax,DWORD PTR [rsp]
   14001314b:	add    rsp,0x8
   14001314f:	ret    
   140013150:	mov    DWORD PTR [rsp+0x8],ecx
   140013154:	ldmxcsr DWORD PTR [rsp+0x8]
   140013159:	ret    
   14001315a:	stmxcsr DWORD PTR [rsp+0x8]
   14001315f:	mov    ecx,0xffffffc0
   140013164:	and    DWORD PTR [rsp+0x8],ecx
   140013168:	ldmxcsr DWORD PTR [rsp+0x8]
   14001316d:	ret    
   14001316e:	ucomisd xmm0,QWORD PTR [rip+0x200da]        # 0x140033250
   140013176:	jae    0x14001318c
   140013178:	ucomisd xmm0,QWORD PTR [rip+0x200d8]        # 0x140033258
   140013180:	jbe    0x14001318c
   140013182:	cvtsd2si rcx,xmm0
   140013187:	cvtsi2sd xmm0,rcx
   14001318c:	ret    
   14001318d:	int3   
   14001318e:	int3   
   14001318f:	int3   
   140013190:	mov    eax,ecx
   140013192:	test   cl,0x20
   140013195:	je     0x14001319e
   140013197:	mov    ecx,0x5
   14001319c:	jmp    0x1400131d0
   14001319e:	test   al,0x8
   1400131a0:	je     0x1400131a9
   1400131a2:	mov    ecx,0x1
   1400131a7:	jmp    0x1400131d0
   1400131a9:	test   al,0x4
   1400131ab:	je     0x1400131b4
   1400131ad:	mov    ecx,0x2
   1400131b2:	jmp    0x1400131d0
   1400131b4:	mov    ecx,0x1
   1400131b9:	test   cl,al
   1400131bb:	je     0x1400131c4
   1400131bd:	mov    ecx,0x3
   1400131c2:	jmp    0x1400131d0
   1400131c4:	movzx  eax,al
   1400131c7:	mov    ecx,0x2
   1400131cc:	and    ecx,eax
   1400131ce:	add    ecx,ecx
   1400131d0:	mov    eax,ecx
   1400131d2:	ret    
   1400131d3:	int3   
   1400131d4:	mov    rax,rsp
   1400131d7:	mov    QWORD PTR [rax+0x10],rbx
   1400131db:	push   rbp
   1400131dc:	push   rsi
   1400131dd:	push   rdi
   1400131de:	lea    rbp,[rax-0x57]
   1400131e2:	sub    rsp,0xe0
   1400131e9:	movaps XMMWORD PTR [rax-0x28],xmm6
   1400131ed:	mov    rax,QWORD PTR [rip+0x28fdc]        # 0x14003c1d0
   1400131f4:	xor    rax,rsp
   1400131f7:	mov    QWORD PTR [rbp+0x1f],rax
   1400131fb:	mov    rbx,QWORD PTR [rbp+0x7f]
   1400131ff:	mov    esi,edx
   140013201:	lea    rdx,[rbp-0x61]
   140013205:	movsd  QWORD PTR [rbp-0x59],xmm2
   14001320a:	movsd  QWORD PTR [rbp-0x61],xmm3
   14001320f:	movaps xmm6,xmm2
   140013212:	mov    r8,rbx
   140013215:	mov    edi,ecx
   140013217:	call   0x1400133fc
   14001321c:	test   eax,eax
   14001321e:	jne    0x140013251
   140013220:	and    DWORD PTR [rsp+0x30],eax
   140013224:	and    DWORD PTR [rbp-0x11],0xfffffffe
   140013228:	lea    rax,[rbp-0x61]
   14001322c:	mov    QWORD PTR [rsp+0x28],rax
   140013231:	lea    rax,[rbp-0x59]
   140013235:	lea    rdx,[rbp+0x7f]
   140013239:	lea    rcx,[rbp-0x51]
   14001323d:	mov    r9d,esi
   140013240:	mov    r8d,edi
   140013243:	mov    QWORD PTR [rsp+0x20],rax
   140013248:	call   0x14001374c
   14001324d:	mov    rbx,QWORD PTR [rbp+0x7f]
   140013251:	mov    ecx,edi
   140013253:	call   0x140013190
   140013258:	cmp    DWORD PTR [rip+0x2a1a1],0x0        # 0x14003d400
   14001325f:	jne    0x140013286
   140013261:	test   eax,eax
   140013263:	je     0x140013286
   140013265:	movsd  xmm0,QWORD PTR [rbp-0x61]
   14001326a:	xorps  xmm3,xmm3
   14001326d:	movaps xmm2,xmm6
   140013270:	mov    edx,esi
   140013272:	mov    ecx,eax
   140013274:	mov    QWORD PTR [rsp+0x28],rbx
   140013279:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001327f:	call   0x140013aac
   140013284:	jmp    0x14001329f
   140013286:	mov    ecx,eax
   140013288:	call   0x140013a7c
   14001328d:	mov    edx,0xffc0
   140013292:	mov    rcx,rbx
   140013295:	call   0x140009e34
   14001329a:	movsd  xmm0,QWORD PTR [rbp-0x61]
   14001329f:	mov    rcx,QWORD PTR [rbp+0x1f]
   1400132a3:	xor    rcx,rsp
   1400132a6:	call   0x14000c380
   1400132ab:	lea    r11,[rsp+0xe0]
   1400132b3:	mov    rbx,QWORD PTR [r11+0x28]
   1400132b7:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400132bc:	mov    rsp,r11
   1400132bf:	pop    rdi
   1400132c0:	pop    rsi
   1400132c1:	pop    rbp
   1400132c2:	ret    
   1400132c3:	int3   
   1400132c4:	mov    rax,rsp
   1400132c7:	mov    QWORD PTR [rax+0x10],rbx
   1400132cb:	push   rbp
   1400132cc:	push   rsi
   1400132cd:	push   rdi
   1400132ce:	lea    rbp,[rax-0x4f]
   1400132d2:	sub    rsp,0xf0
   1400132d9:	movaps XMMWORD PTR [rax-0x28],xmm6
   1400132dd:	movaps XMMWORD PTR [rax-0x38],xmm7
   1400132e1:	mov    rax,QWORD PTR [rip+0x28ee8]        # 0x14003c1d0
   1400132e8:	xor    rax,rsp
   1400132eb:	mov    QWORD PTR [rbp+0x7],rax
   1400132ef:	mov    rbx,QWORD PTR [rbp+0x7f]
   1400132f3:	mov    esi,edx
   1400132f5:	lea    rdx,[rbp+0x77]
   1400132f9:	movsd  QWORD PTR [rbp-0x79],xmm2
   1400132fe:	movaps xmm6,xmm3
   140013301:	movaps xmm7,xmm2
   140013304:	mov    r8,rbx
   140013307:	mov    edi,ecx
   140013309:	call   0x1400133fc
   14001330e:	test   eax,eax
   140013310:	jne    0x140013351
   140013312:	mov    eax,DWORD PTR [rbp-0x29]
   140013315:	and    DWORD PTR [rsp+0x30],0x0
   14001331a:	lea    rdx,[rbp+0x7f]
   14001331e:	movsd  QWORD PTR [rbp-0x39],xmm6
   140013323:	and    eax,0xffffffe3
   140013326:	lea    rcx,[rbp-0x69]
   14001332a:	mov    r9d,esi
   14001332d:	or     eax,0x3
   140013330:	mov    r8d,edi
   140013333:	mov    DWORD PTR [rbp-0x29],eax
   140013336:	lea    rax,[rbp+0x77]
   14001333a:	mov    QWORD PTR [rsp+0x28],rax
   14001333f:	lea    rax,[rbp-0x79]
   140013343:	mov    QWORD PTR [rsp+0x20],rax
   140013348:	call   0x14001374c
   14001334d:	mov    rbx,QWORD PTR [rbp+0x7f]
   140013351:	mov    ecx,edi
   140013353:	call   0x140013190
   140013358:	cmp    DWORD PTR [rip+0x2a0a1],0x0        # 0x14003d400
   14001335f:	jne    0x140013386
   140013361:	test   eax,eax
   140013363:	je     0x140013386
   140013365:	movsd  xmm0,QWORD PTR [rbp+0x77]
   14001336a:	movaps xmm3,xmm6
   14001336d:	movaps xmm2,xmm7
   140013370:	mov    edx,esi
   140013372:	mov    ecx,eax
   140013374:	mov    QWORD PTR [rsp+0x28],rbx
   140013379:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001337f:	call   0x140013aac
   140013384:	jmp    0x14001339f
   140013386:	mov    ecx,eax
   140013388:	call   0x140013a7c
   14001338d:	mov    edx,0xffc0
   140013392:	mov    rcx,rbx
   140013395:	call   0x140009e34
   14001339a:	movsd  xmm0,QWORD PTR [rbp+0x77]
   14001339f:	mov    rcx,QWORD PTR [rbp+0x7]
   1400133a3:	xor    rcx,rsp
   1400133a6:	call   0x14000c380
   1400133ab:	lea    r11,[rsp+0xf0]
   1400133b3:	mov    rbx,QWORD PTR [r11+0x28]
   1400133b7:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400133bc:	movaps xmm7,XMMWORD PTR [r11-0x20]
   1400133c1:	mov    rsp,r11
   1400133c4:	pop    rdi
   1400133c5:	pop    rsi
   1400133c6:	pop    rbp
   1400133c7:	ret    
   1400133c8:	lea    r9,[rip+0x29e61]        # 0x14003d230
   1400133cf:	xor    edx,edx
   1400133d1:	mov    rax,r9
   1400133d4:	cmp    DWORD PTR [rax],ecx
   1400133d6:	je     0x1400133ed
   1400133d8:	lea    r8,[rip+0x2a021]        # 0x14003d400
   1400133df:	add    rax,0x10
   1400133e3:	inc    edx
   1400133e5:	cmp    rax,r8
   1400133e8:	jl     0x1400133d4
   1400133ea:	xor    eax,eax
   1400133ec:	ret    
   1400133ed:	movsxd rax,edx
   1400133f0:	add    rax,rax
   1400133f3:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   1400133f8:	ret    
   1400133f9:	int3   
   1400133fa:	int3   
   1400133fb:	int3   
   1400133fc:	mov    QWORD PTR [rsp+0x10],rbx
   140013401:	push   rbp
   140013402:	push   rsi
   140013403:	push   rdi
   140013404:	push   r12
   140013406:	push   r13
   140013408:	push   r14
   14001340a:	push   r15
   14001340c:	sub    rsp,0x30
   140013410:	xor    r14d,r14d
   140013413:	mov    ebx,ecx
   140013415:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14001341a:	and    ebx,0x1f
   14001341d:	mov    r15,r8
   140013420:	mov    rsi,rdx
   140013423:	mov    r12d,ecx
   140013426:	lea    r13d,[r14+0x10]
   14001342a:	test   cl,0x8
   14001342d:	je     0x140013445
   14001342f:	test   r15b,r15b
   140013432:	jns    0x140013445
   140013434:	lea    ecx,[r14+0x1]
   140013438:	call   0x140009eb0
   14001343d:	and    ebx,0xfffffff7
   140013440:	jmp    0x140013622
   140013445:	mov    ecx,0x4
   14001344a:	test   cl,r12b
   14001344d:	je     0x140013463
   14001344f:	bt     r8,0x9
   140013454:	jae    0x140013463
   140013456:	call   0x140009eb0
   14001345b:	and    ebx,0xfffffffb
   14001345e:	jmp    0x140013622
   140013463:	mov    edi,0x1
   140013468:	test   dil,r12b
   14001346b:	je     0x140013521
   140013471:	bt     r8,0xa
   140013476:	jae    0x140013521
   14001347c:	lea    ecx,[rdi+0x7]
   14001347f:	call   0x140009eb0
   140013484:	mov    rax,r15
   140013487:	mov    ecx,0x6000
   14001348c:	and    rax,rcx
   14001348f:	je     0x1400134ee
   140013491:	cmp    rax,0x2000
   140013497:	je     0x1400134d6
   140013499:	cmp    rax,0x4000
   14001349f:	je     0x1400134be
   1400134a1:	cmp    rax,rcx
   1400134a4:	jne    0x140013519
   1400134a6:	movsd  xmm0,QWORD PTR [rsi]
   1400134aa:	comisd xmm0,QWORD PTR [rip+0x1b666]        # 0x14002eb18
   1400134b2:	movsd  xmm0,QWORD PTR [rip+0x2a01e]        # 0x14003d4d8
   1400134ba:	ja     0x140013515
   1400134bc:	jmp    0x14001350e
   1400134be:	movsd  xmm0,QWORD PTR [rsi]
   1400134c2:	comisd xmm0,QWORD PTR [rip+0x1b64e]        # 0x14002eb18
   1400134ca:	ja     0x1400134fc
   1400134cc:	movsd  xmm0,QWORD PTR [rip+0x2a004]        # 0x14003d4d8
   1400134d4:	jmp    0x14001350e
   1400134d6:	movsd  xmm0,QWORD PTR [rsi]
   1400134da:	comisd xmm0,QWORD PTR [rip+0x1b636]        # 0x14002eb18
   1400134e2:	jbe    0x140013506
   1400134e4:	movsd  xmm0,QWORD PTR [rip+0x29fec]        # 0x14003d4d8
   1400134ec:	jmp    0x140013515
   1400134ee:	movsd  xmm0,QWORD PTR [rsi]
   1400134f2:	comisd xmm0,QWORD PTR [rip+0x1b61e]        # 0x14002eb18
   1400134fa:	jbe    0x140013506
   1400134fc:	movsd  xmm0,QWORD PTR [rip+0x29fc4]        # 0x14003d4c8
   140013504:	jmp    0x140013515
   140013506:	movsd  xmm0,QWORD PTR [rip+0x29fba]        # 0x14003d4c8
   14001350e:	xorps  xmm0,XMMWORD PTR [rip+0x1fe1b]        # 0x140033330
   140013515:	movsd  QWORD PTR [rsi],xmm0
   140013519:	and    ebx,0xfffffffe
   14001351c:	jmp    0x140013622
   140013521:	test   r12b,0x2
   140013525:	je     0x140013622
   14001352b:	bt     r8,0xb
   140013530:	jae    0x140013622
   140013536:	movsd  xmm0,QWORD PTR [rdx]
   14001353a:	test   r13b,r12b
   14001353d:	xorps  xmm6,xmm6
   140013540:	mov    ebp,r14d
   140013543:	cmovne ebp,edi
   140013546:	ucomisd xmm0,xmm6
   14001354a:	jp     0x140013555
   14001354c:	jne    0x140013555
   14001354e:	mov    ebp,edi
   140013550:	jmp    0x140013613
   140013555:	lea    rdx,[rsp+0x70]
   14001355a:	call   0x14001f6ec
   14001355f:	mov    ecx,DWORD PTR [rsp+0x70]
   140013563:	add    ecx,0xfffffa00
   140013569:	movsd  QWORD PTR [rsp+0x88],xmm0
   140013572:	cmp    ecx,0xfffffbce
   140013578:	jge    0x140013585
   14001357a:	mulsd  xmm0,xmm6
   14001357e:	mov    ebp,edi
   140013580:	jmp    0x14001360f
   140013585:	mov    rax,QWORD PTR [rsp+0x88]
   14001358d:	comisd xmm6,xmm0
   140013591:	mov    r8d,r14d
   140013594:	seta   r8b
   140013598:	shr    rax,0x30
   14001359c:	and    ax,0xf
   1400135a0:	or     ax,r13w
   1400135a4:	mov    WORD PTR [rsp+0x8e],ax
   1400135ac:	cmp    ecx,0xfffffc03
   1400135b2:	jge    0x1400135fa
   1400135b4:	mov    eax,DWORD PTR [rsp+0x88]
   1400135bb:	mov    edx,0xfffffc03
   1400135c0:	sub    edx,ecx
   1400135c2:	mov    ecx,DWORD PTR [rsp+0x8c]
   1400135c9:	test   dil,al
   1400135cc:	je     0x1400135d3
   1400135ce:	test   ebp,ebp
   1400135d0:	cmove  ebp,edi
   1400135d3:	shr    eax,1
   1400135d5:	mov    DWORD PTR [rsp+0x88],eax
   1400135dc:	test   dil,cl
   1400135df:	je     0x1400135ec
   1400135e1:	bts    eax,0x1f
   1400135e5:	mov    DWORD PTR [rsp+0x88],eax
   1400135ec:	shr    ecx,1
   1400135ee:	sub    rdx,rdi
   1400135f1:	jne    0x1400135c9
   1400135f3:	mov    DWORD PTR [rsp+0x8c],ecx
   1400135fa:	movsd  xmm0,QWORD PTR [rsp+0x88]
   140013603:	test   r8d,r8d
   140013606:	je     0x14001360f
   140013608:	xorps  xmm0,XMMWORD PTR [rip+0x1fd21]        # 0x140033330
   14001360f:	movsd  QWORD PTR [rsi],xmm0
   140013613:	test   ebp,ebp
   140013615:	je     0x14001361f
   140013617:	mov    rcx,r13
   14001361a:	call   0x140009eb0
   14001361f:	and    ebx,0xfffffffd
   140013622:	test   r13b,r12b
   140013625:	je     0x14001363b
   140013627:	bt     r15,0xc
   14001362c:	jae    0x14001363b
   14001362e:	mov    ecx,0x20
   140013633:	call   0x140009eb0
   140013638:	and    ebx,0xffffffef
   14001363b:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140013640:	test   ebx,ebx
   140013642:	mov    rbx,QWORD PTR [rsp+0x78]
   140013647:	sete   r14b
   14001364b:	mov    eax,r14d
   14001364e:	add    rsp,0x30
   140013652:	pop    r15
   140013654:	pop    r14
   140013656:	pop    r13
   140013658:	pop    r12
   14001365a:	pop    rdi
   14001365b:	pop    rsi
   14001365c:	pop    rbp
   14001365d:	ret    
   14001365e:	int3   
   14001365f:	int3   
   140013660:	rex push rbx
   140013662:	sub    rsp,0x40
   140013666:	cmp    DWORD PTR [rip+0x29d93],0x0        # 0x14003d400
   14001366d:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140013672:	mov    rbx,r8
   140013675:	movaps xmm6,xmm1
   140013678:	jne    0x140013699
   14001367a:	mov    edx,ecx
   14001367c:	xorps  xmm3,xmm3
   14001367f:	movaps xmm2,xmm1
   140013682:	mov    ecx,0x1
   140013687:	mov    QWORD PTR [rsp+0x28],rbx
   14001368c:	movsd  QWORD PTR [rsp+0x20],xmm1
   140013692:	call   0x140013aac
   140013697:	jmp    0x1400136b4
   140013699:	call   0x140009cb4
   14001369e:	mov    edx,0xffc0
   1400136a3:	mov    rcx,rbx
   1400136a6:	mov    DWORD PTR [rax],0x21
   1400136ac:	call   0x140009e34
   1400136b1:	movaps xmm0,xmm6
   1400136b4:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400136b9:	add    rsp,0x40
   1400136bd:	pop    rbx
   1400136be:	ret    
   1400136bf:	int3   
   1400136c0:	rex push rbx
   1400136c2:	sub    rsp,0x40
   1400136c6:	cmp    DWORD PTR [rip+0x29d33],0x0        # 0x14003d400
   1400136cd:	movaps XMMWORD PTR [rsp+0x30],xmm6
   1400136d2:	movaps xmm6,xmm1
   1400136d5:	addsd  xmm6,xmm2
   1400136d9:	mov    rbx,r9
   1400136dc:	jne    0x1400136fd
   1400136de:	movaps xmm3,xmm2
   1400136e1:	mov    edx,ecx
   1400136e3:	movaps xmm2,xmm1
   1400136e6:	mov    ecx,0x1
   1400136eb:	mov    QWORD PTR [rsp+0x28],rbx
   1400136f0:	movsd  QWORD PTR [rsp+0x20],xmm6
   1400136f6:	call   0x140013aac
   1400136fb:	jmp    0x140013718
   1400136fd:	call   0x140009cb4
   140013702:	mov    edx,0xffc0
   140013707:	mov    rcx,rbx
   14001370a:	mov    DWORD PTR [rax],0x21
   140013710:	call   0x140009e34
   140013715:	movaps xmm0,xmm6
   140013718:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001371d:	add    rsp,0x40
   140013721:	pop    rbx
   140013722:	ret    
   140013723:	int3   
   140013724:	sub    rsp,0x48
   140013728:	and    DWORD PTR [rsp+0x30],0x0
   14001372d:	mov    rax,QWORD PTR [rsp+0x78]
   140013732:	mov    QWORD PTR [rsp+0x28],rax
   140013737:	mov    rax,QWORD PTR [rsp+0x70]
   14001373c:	mov    QWORD PTR [rsp+0x20],rax
   140013741:	call   0x14001374c
   140013746:	add    rsp,0x48
   14001374a:	ret    
   14001374b:	int3   
   14001374c:	mov    rax,rsp
   14001374f:	mov    QWORD PTR [rax+0x10],rbx
   140013753:	mov    QWORD PTR [rax+0x18],rsi
   140013757:	mov    QWORD PTR [rax+0x20],rdi
   14001375b:	mov    QWORD PTR [rax+0x8],rcx
   14001375f:	push   rbp
   140013760:	mov    rbp,rsp
   140013763:	sub    rsp,0x20
   140013767:	mov    rbx,rdx
   14001376a:	xor    edx,edx
   14001376c:	mov    esi,r9d
   14001376f:	mov    DWORD PTR [rcx+0x4],edx
   140013772:	mov    rax,QWORD PTR [rbp+0x10]
   140013776:	mov    edi,0xc000000d
   14001377b:	mov    DWORD PTR [rax+0x8],edx
   14001377e:	mov    rax,QWORD PTR [rbp+0x10]
   140013782:	mov    DWORD PTR [rax+0xc],edx
   140013785:	test   r8b,0x10
   140013789:	je     0x140013798
   14001378b:	mov    rax,QWORD PTR [rbp+0x10]
   14001378f:	mov    edi,0xc000008f
   140013794:	or     DWORD PTR [rax+0x4],0x1
   140013798:	test   r8b,0x2
   14001379c:	je     0x1400137ab
   14001379e:	mov    rax,QWORD PTR [rbp+0x10]
   1400137a2:	mov    edi,0xc0000093
   1400137a7:	or     DWORD PTR [rax+0x4],0x2
   1400137ab:	test   r8b,0x1
   1400137af:	je     0x1400137be
   1400137b1:	mov    rax,QWORD PTR [rbp+0x10]
   1400137b5:	mov    edi,0xc0000091
   1400137ba:	or     DWORD PTR [rax+0x4],0x4
   1400137be:	test   r8b,0x4
   1400137c2:	je     0x1400137d1
   1400137c4:	mov    rax,QWORD PTR [rbp+0x10]
   1400137c8:	mov    edi,0xc000008e
   1400137cd:	or     DWORD PTR [rax+0x4],0x8
   1400137d1:	test   r8b,0x8
   1400137d5:	je     0x1400137e4
   1400137d7:	mov    rax,QWORD PTR [rbp+0x10]
   1400137db:	mov    edi,0xc0000090
   1400137e0:	or     DWORD PTR [rax+0x4],0x10
   1400137e4:	mov    rcx,QWORD PTR [rbp+0x10]
   1400137e8:	mov    rax,QWORD PTR [rbx]
   1400137eb:	shr    rax,0x7
   1400137ef:	shl    eax,0x4
   1400137f2:	not    eax
   1400137f4:	xor    eax,DWORD PTR [rcx+0x8]
   1400137f7:	and    eax,0x10
   1400137fa:	xor    DWORD PTR [rcx+0x8],eax
   1400137fd:	mov    rcx,QWORD PTR [rbp+0x10]
   140013801:	mov    rax,QWORD PTR [rbx]
   140013804:	shr    rax,0x9
   140013808:	shl    eax,0x3
   14001380b:	not    eax
   14001380d:	xor    eax,DWORD PTR [rcx+0x8]
   140013810:	and    eax,0x8
   140013813:	xor    DWORD PTR [rcx+0x8],eax
   140013816:	mov    rcx,QWORD PTR [rbp+0x10]
   14001381a:	mov    rax,QWORD PTR [rbx]
   14001381d:	shr    rax,0xa
   140013821:	shl    eax,0x2
   140013824:	not    eax
   140013826:	xor    eax,DWORD PTR [rcx+0x8]
   140013829:	and    eax,0x4
   14001382c:	xor    DWORD PTR [rcx+0x8],eax
   14001382f:	mov    rcx,QWORD PTR [rbp+0x10]
   140013833:	mov    rax,QWORD PTR [rbx]
   140013836:	shr    rax,0xb
   14001383a:	add    eax,eax
   14001383c:	not    eax
   14001383e:	xor    eax,DWORD PTR [rcx+0x8]
   140013841:	and    eax,0x2
   140013844:	xor    DWORD PTR [rcx+0x8],eax
   140013847:	mov    eax,DWORD PTR [rbx]
   140013849:	mov    rcx,QWORD PTR [rbp+0x10]
   14001384d:	shr    rax,0xc
   140013851:	not    eax
   140013853:	xor    eax,DWORD PTR [rcx+0x8]
   140013856:	and    eax,0x1
   140013859:	xor    DWORD PTR [rcx+0x8],eax
   14001385c:	call   0x140009ed0
   140013861:	mov    rdx,rax
   140013864:	test   al,0x1
   140013866:	je     0x140013870
   140013868:	mov    rcx,QWORD PTR [rbp+0x10]
   14001386c:	or     DWORD PTR [rcx+0xc],0x10
   140013870:	test   al,0x4
   140013872:	je     0x14001387c
   140013874:	mov    rcx,QWORD PTR [rbp+0x10]
   140013878:	or     DWORD PTR [rcx+0xc],0x8
   14001387c:	test   al,0x8
   14001387e:	je     0x140013888
   140013880:	mov    rax,QWORD PTR [rbp+0x10]
   140013884:	or     DWORD PTR [rax+0xc],0x4
   140013888:	test   dl,0x10
   14001388b:	je     0x140013895
   14001388d:	mov    rax,QWORD PTR [rbp+0x10]
   140013891:	or     DWORD PTR [rax+0xc],0x2
   140013895:	test   dl,0x20
   140013898:	je     0x1400138a2
   14001389a:	mov    rax,QWORD PTR [rbp+0x10]
   14001389e:	or     DWORD PTR [rax+0xc],0x1
   1400138a2:	mov    eax,DWORD PTR [rbx]
   1400138a4:	mov    ecx,0x6000
   1400138a9:	and    rax,rcx
   1400138ac:	je     0x1400138ec
   1400138ae:	cmp    rax,0x2000
   1400138b4:	je     0x1400138dc
   1400138b6:	cmp    rax,0x4000
   1400138bc:	je     0x1400138cc
   1400138be:	cmp    rax,rcx
   1400138c1:	jne    0x1400138f3
   1400138c3:	mov    rax,QWORD PTR [rbp+0x10]
   1400138c7:	or     DWORD PTR [rax],0x3
   1400138ca:	jmp    0x1400138f3
   1400138cc:	mov    rax,QWORD PTR [rbp+0x10]
   1400138d0:	and    DWORD PTR [rax],0xfffffffe
   1400138d3:	mov    rax,QWORD PTR [rbp+0x10]
   1400138d7:	or     DWORD PTR [rax],0x2
   1400138da:	jmp    0x1400138f3
   1400138dc:	mov    rax,QWORD PTR [rbp+0x10]
   1400138e0:	and    DWORD PTR [rax],0xfffffffd
   1400138e3:	mov    rax,QWORD PTR [rbp+0x10]
   1400138e7:	or     DWORD PTR [rax],0x1
   1400138ea:	jmp    0x1400138f3
   1400138ec:	mov    rax,QWORD PTR [rbp+0x10]
   1400138f0:	and    DWORD PTR [rax],0xfffffffc
   1400138f3:	mov    rax,QWORD PTR [rbp+0x10]
   1400138f7:	and    esi,0xfff
   1400138fd:	and    DWORD PTR [rax],0xfffe001f
   140013903:	mov    rax,QWORD PTR [rbp+0x10]
   140013907:	shl    esi,0x5
   14001390a:	or     DWORD PTR [rax],esi
   14001390c:	mov    rax,QWORD PTR [rbp+0x10]
   140013910:	mov    rsi,QWORD PTR [rbp+0x38]
   140013914:	or     DWORD PTR [rax+0x20],0x1
   140013918:	cmp    DWORD PTR [rbp+0x40],0x0
   14001391c:	je     0x140013951
   14001391e:	mov    rax,QWORD PTR [rbp+0x10]
   140013922:	mov    edx,0xffffffe1
   140013927:	and    DWORD PTR [rax+0x20],edx
   14001392a:	mov    rax,QWORD PTR [rbp+0x30]
   14001392e:	mov    ecx,DWORD PTR [rax]
   140013930:	mov    rax,QWORD PTR [rbp+0x10]
   140013934:	mov    DWORD PTR [rax+0x10],ecx
   140013937:	mov    rax,QWORD PTR [rbp+0x10]
   14001393b:	or     DWORD PTR [rax+0x60],0x1
   14001393f:	mov    rax,QWORD PTR [rbp+0x10]
   140013943:	and    DWORD PTR [rax+0x60],edx
   140013946:	mov    rax,QWORD PTR [rbp+0x10]
   14001394a:	mov    ecx,DWORD PTR [rsi]
   14001394c:	mov    DWORD PTR [rax+0x50],ecx
   14001394f:	jmp    0x140013999
   140013951:	mov    rcx,QWORD PTR [rbp+0x10]
   140013955:	mov    r8d,0xffffffe3
   14001395b:	mov    eax,DWORD PTR [rcx+0x20]
   14001395e:	and    eax,r8d
   140013961:	or     eax,0x2
   140013964:	mov    DWORD PTR [rcx+0x20],eax
   140013967:	mov    rax,QWORD PTR [rbp+0x30]
   14001396b:	mov    rcx,QWORD PTR [rax]
   14001396e:	mov    rax,QWORD PTR [rbp+0x10]
   140013972:	mov    QWORD PTR [rax+0x10],rcx
   140013976:	mov    rax,QWORD PTR [rbp+0x10]
   14001397a:	or     DWORD PTR [rax+0x60],0x1
   14001397e:	mov    rdx,QWORD PTR [rbp+0x10]
   140013982:	mov    eax,DWORD PTR [rdx+0x60]
   140013985:	and    eax,r8d
   140013988:	or     eax,0x2
   14001398b:	mov    DWORD PTR [rdx+0x60],eax
   14001398e:	mov    rax,QWORD PTR [rbp+0x10]
   140013992:	mov    rdx,QWORD PTR [rsi]
   140013995:	mov    QWORD PTR [rax+0x50],rdx
   140013999:	call   0x140009e14
   14001399e:	xor    edx,edx
   1400139a0:	lea    r9,[rbp+0x10]
   1400139a4:	lea    r8d,[rdx+0x1]
   1400139a8:	mov    ecx,edi
   1400139aa:	call   QWORD PTR [rip+0x18778]        # 0x14002c128
   1400139b0:	mov    rcx,QWORD PTR [rbp+0x10]
   1400139b4:	test   BYTE PTR [rcx+0x8],0x10
   1400139b8:	je     0x1400139bf
   1400139ba:	btr    QWORD PTR [rbx],0x7
   1400139bf:	test   BYTE PTR [rcx+0x8],0x8
   1400139c3:	je     0x1400139ca
   1400139c5:	btr    QWORD PTR [rbx],0x9
   1400139ca:	test   BYTE PTR [rcx+0x8],0x4
   1400139ce:	je     0x1400139d5
   1400139d0:	btr    QWORD PTR [rbx],0xa
   1400139d5:	test   BYTE PTR [rcx+0x8],0x2
   1400139d9:	je     0x1400139e0
   1400139db:	btr    QWORD PTR [rbx],0xb
   1400139e0:	test   BYTE PTR [rcx+0x8],0x1
   1400139e4:	je     0x1400139eb
   1400139e6:	btr    QWORD PTR [rbx],0xc
   1400139eb:	mov    eax,DWORD PTR [rcx]
   1400139ed:	and    eax,0x3
   1400139f0:	je     0x140013a1f
   1400139f2:	dec    eax
   1400139f4:	je     0x140013a13
   1400139f6:	dec    eax
   1400139f8:	je     0x140013a07
   1400139fa:	dec    eax
   1400139fc:	jne    0x140013a26
   1400139fe:	or     QWORD PTR [rbx],0x6000
   140013a05:	jmp    0x140013a26
   140013a07:	btr    QWORD PTR [rbx],0xd
   140013a0c:	bts    QWORD PTR [rbx],0xe
   140013a11:	jmp    0x140013a26
   140013a13:	btr    QWORD PTR [rbx],0xe
   140013a18:	bts    QWORD PTR [rbx],0xd
   140013a1d:	jmp    0x140013a26
   140013a1f:	and    QWORD PTR [rbx],0xffffffffffff9fff
   140013a26:	cmp    DWORD PTR [rbp+0x40],0x0
   140013a2a:	je     0x140013a33
   140013a2c:	mov    eax,DWORD PTR [rcx+0x50]
   140013a2f:	mov    DWORD PTR [rsi],eax
   140013a31:	jmp    0x140013a3a
   140013a33:	mov    rax,QWORD PTR [rcx+0x50]
   140013a37:	mov    QWORD PTR [rsi],rax
   140013a3a:	mov    rbx,QWORD PTR [rsp+0x38]
   140013a3f:	mov    rsi,QWORD PTR [rsp+0x40]
   140013a44:	mov    rdi,QWORD PTR [rsp+0x48]
   140013a49:	add    rsp,0x20
   140013a4d:	pop    rbp
   140013a4e:	ret    
   140013a4f:	int3   
   140013a50:	sub    rsp,0x48
   140013a54:	mov    rax,QWORD PTR [rsp+0x78]
   140013a59:	mov    DWORD PTR [rsp+0x30],0x1
   140013a61:	mov    QWORD PTR [rsp+0x28],rax
   140013a66:	mov    rax,QWORD PTR [rsp+0x70]
   140013a6b:	mov    QWORD PTR [rsp+0x20],rax
   140013a70:	call   0x14001374c
   140013a75:	add    rsp,0x48
   140013a79:	ret    
   140013a7a:	int3   
   140013a7b:	int3   
   140013a7c:	sub    rsp,0x28
   140013a80:	cmp    ecx,0x1
   140013a83:	je     0x140013a9a
   140013a85:	lea    eax,[rcx-0x2]
   140013a88:	cmp    eax,0x1
   140013a8b:	ja     0x140013aa5
   140013a8d:	call   0x140009cb4
   140013a92:	mov    DWORD PTR [rax],0x22
   140013a98:	jmp    0x140013aa5
   140013a9a:	call   0x140009cb4
   140013a9f:	mov    DWORD PTR [rax],0x21
   140013aa5:	add    rsp,0x28
   140013aa9:	ret    
   140013aaa:	int3   
   140013aab:	int3   
   140013aac:	movsd  QWORD PTR [rsp+0x20],xmm3
   140013ab2:	movsd  QWORD PTR [rsp+0x18],xmm2
   140013ab8:	push   rbx
   140013ab9:	sub    rsp,0x50
   140013abd:	lea    r9,[rip+0x2976c]        # 0x14003d230
   140013ac4:	mov    ebx,ecx
   140013ac6:	xor    r8d,r8d
   140013ac9:	mov    rax,r9
   140013acc:	cmp    DWORD PTR [rax],edx
   140013ace:	je     0x140013ae7
   140013ad0:	lea    rcx,[rip+0x29929]        # 0x14003d400
   140013ad7:	add    rax,0x10
   140013adb:	inc    r8d
   140013ade:	cmp    rax,rcx
   140013ae1:	jl     0x140013acc
   140013ae3:	xor    eax,eax
   140013ae5:	jmp    0x140013af2
   140013ae7:	movsxd rax,r8d
   140013aea:	add    rax,rax
   140013aed:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   140013af2:	mov    rcx,QWORD PTR [rsp+0x88]
   140013afa:	mov    QWORD PTR [rsp+0x28],rax
   140013aff:	mov    edx,0xffc0
   140013b04:	test   rax,rax
   140013b07:	je     0x140013b65
   140013b09:	mov    eax,DWORD PTR [rsp+0x70]
   140013b0d:	mov    DWORD PTR [rsp+0x20],ebx
   140013b11:	mov    DWORD PTR [rsp+0x30],eax
   140013b15:	mov    eax,DWORD PTR [rsp+0x74]
   140013b19:	mov    DWORD PTR [rsp+0x34],eax
   140013b1d:	mov    eax,DWORD PTR [rsp+0x78]
   140013b21:	mov    DWORD PTR [rsp+0x38],eax
   140013b25:	mov    eax,DWORD PTR [rsp+0x7c]
   140013b29:	mov    DWORD PTR [rsp+0x3c],eax
   140013b2d:	mov    eax,DWORD PTR [rsp+0x80]
   140013b34:	mov    DWORD PTR [rsp+0x40],eax
   140013b38:	mov    eax,DWORD PTR [rsp+0x84]
   140013b3f:	mov    DWORD PTR [rsp+0x44],eax
   140013b43:	call   0x140009e34
   140013b48:	lea    rcx,[rsp+0x20]
   140013b4d:	call   0x140013b80
   140013b52:	test   eax,eax
   140013b54:	jne    0x140013b5d
   140013b56:	mov    ecx,ebx
   140013b58:	call   0x140013a7c
   140013b5d:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140013b63:	jmp    0x140013b7a
   140013b65:	call   0x140009e34
   140013b6a:	mov    ecx,ebx
   140013b6c:	call   0x140013a7c
   140013b71:	movsd  xmm0,QWORD PTR [rsp+0x80]
   140013b7a:	add    rsp,0x50
   140013b7e:	pop    rbx
   140013b7f:	ret    
   140013b80:	xor    eax,eax
   140013b82:	ret    
   140013b83:	int3   
   140013b84:	neg    rcx
   140013b87:	sbb    eax,eax
   140013b89:	and    eax,0x1
   140013b8c:	ret    
   140013b8d:	int3   
   140013b8e:	int3   
   140013b8f:	int3   
   140013b90:	neg    rcx
   140013b93:	sbb    eax,eax
   140013b95:	and    eax,0x1
   140013b98:	ret    
   140013b99:	int3   
   140013b9a:	int3   
   140013b9b:	int3   
   140013b9c:	neg    rcx
   140013b9f:	sbb    eax,eax
   140013ba1:	and    eax,0x1
   140013ba4:	ret    
   140013ba5:	int3   
   140013ba6:	int3   
   140013ba7:	int3   
   140013ba8:	int3   
   140013ba9:	int3   
   140013baa:	int3   
   140013bab:	int3   
   140013bac:	int3   
   140013bad:	int3   
   140013bae:	int3   
   140013baf:	int3   
   140013bb0:	int3   
   140013bb1:	int3   
   140013bb2:	int3   
   140013bb3:	int3   
   140013bb4:	int3   
   140013bb5:	int3   
   140013bb6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013bc0:	sub    rsp,0x28
   140013bc4:	mov    QWORD PTR [rsp+0x30],rcx
   140013bc9:	mov    QWORD PTR [rsp+0x38],rdx
   140013bce:	mov    DWORD PTR [rsp+0x40],r8d
   140013bd3:	mov    rdx,QWORD PTR [rdx]
   140013bd6:	mov    rax,rcx
   140013bd9:	call   0x140010d00
   140013bde:	call   rax
   140013be0:	call   0x140010d30
   140013be5:	mov    rcx,rax
   140013be8:	mov    rdx,QWORD PTR [rsp+0x38]
   140013bed:	mov    rdx,QWORD PTR [rdx]
   140013bf0:	mov    r8d,0x2
   140013bf6:	call   0x140010d00
   140013bfb:	add    rsp,0x28
   140013bff:	ret    
   140013c00:	mov    rax,QWORD PTR [rsp]
   140013c04:	mov    QWORD PTR [rcx],rax
   140013c07:	ret    
   140013c08:	rex push rbx
   140013c0a:	sub    rsp,0x20
   140013c0e:	mov    rbx,rcx
   140013c11:	call   QWORD PTR [rip+0x18589]        # 0x14002c1a0
   140013c17:	mov    ecx,0x1
   140013c1c:	mov    DWORD PTR [rip+0x2b26e],eax        # 0x14003ee90
   140013c22:	call   0x140010d34
   140013c27:	mov    rcx,rbx
   140013c2a:	call   0x14000ed20
   140013c2f:	cmp    DWORD PTR [rip+0x2b25a],0x0        # 0x14003ee90
   140013c36:	jne    0x140013c42
   140013c38:	mov    ecx,0x1
   140013c3d:	call   0x140010d34
   140013c42:	mov    ecx,0xc0000409
   140013c47:	add    rsp,0x20
   140013c4b:	pop    rbx
   140013c4c:	jmp    0x14000ed00
   140013c51:	int3   
   140013c52:	int3   
   140013c53:	int3   
   140013c54:	mov    QWORD PTR [rsp+0x8],rcx
   140013c59:	sub    rsp,0x38
   140013c5d:	mov    ecx,0x17
   140013c62:	call   0x14002a60c
   140013c67:	test   eax,eax
   140013c69:	je     0x140013c72
   140013c6b:	mov    ecx,0x2
   140013c70:	int    0x29
   140013c72:	lea    rcx,[rip+0x2ad47]        # 0x14003e9c0
   140013c79:	call   0x14000e534
   140013c7e:	mov    rax,QWORD PTR [rsp+0x38]
   140013c83:	mov    QWORD PTR [rip+0x2ae2e],rax        # 0x14003eab8
   140013c8a:	lea    rax,[rsp+0x38]
   140013c8f:	add    rax,0x8
   140013c93:	mov    QWORD PTR [rip+0x2adbe],rax        # 0x14003ea58
   140013c9a:	mov    rax,QWORD PTR [rip+0x2ae17]        # 0x14003eab8
   140013ca1:	mov    QWORD PTR [rip+0x2ac88],rax        # 0x14003e930
   140013ca8:	mov    rax,QWORD PTR [rsp+0x40]
   140013cad:	mov    QWORD PTR [rip+0x2ad8c],rax        # 0x14003ea40
   140013cb4:	mov    DWORD PTR [rip+0x2ac62],0xc0000409        # 0x14003e920
   140013cbe:	mov    DWORD PTR [rip+0x2ac5c],0x1        # 0x14003e924
   140013cc8:	mov    DWORD PTR [rip+0x2ac66],0x1        # 0x14003e938
   140013cd2:	mov    eax,0x8
   140013cd7:	imul   rax,rax,0x0
   140013cdb:	lea    rcx,[rip+0x2ac5e]        # 0x14003e940
   140013ce2:	mov    QWORD PTR [rcx+rax*1],0x2
   140013cea:	mov    eax,0x8
   140013cef:	imul   rax,rax,0x0
   140013cf3:	mov    rcx,QWORD PTR [rip+0x284d6]        # 0x14003c1d0
   140013cfa:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140013cff:	mov    eax,0x8
   140013d04:	imul   rax,rax,0x1
   140013d08:	mov    rcx,QWORD PTR [rip+0x284c9]        # 0x14003c1d8
   140013d0f:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140013d14:	lea    rcx,[rip+0x1f625]        # 0x140033340
   140013d1b:	call   0x140013c08
   140013d20:	add    rsp,0x38
   140013d24:	ret    
   140013d25:	int3   
   140013d26:	int3   
   140013d27:	int3   
   140013d28:	sub    rsp,0x28
   140013d2c:	mov    ecx,0x8
   140013d31:	call   0x140013d3c
   140013d36:	add    rsp,0x28
   140013d3a:	ret    
   140013d3b:	int3   
   140013d3c:	mov    DWORD PTR [rsp+0x8],ecx
   140013d40:	sub    rsp,0x28
   140013d44:	mov    ecx,0x17
   140013d49:	call   0x14002a60c
   140013d4e:	test   eax,eax
   140013d50:	je     0x140013d5a
   140013d52:	mov    eax,DWORD PTR [rsp+0x30]
   140013d56:	mov    ecx,eax
   140013d58:	int    0x29
   140013d5a:	lea    rcx,[rip+0x2ac5f]        # 0x14003e9c0
   140013d61:	call   0x14000e4c4
   140013d66:	mov    rax,QWORD PTR [rsp+0x28]
   140013d6b:	mov    QWORD PTR [rip+0x2ad46],rax        # 0x14003eab8
   140013d72:	lea    rax,[rsp+0x28]
   140013d77:	add    rax,0x8
   140013d7b:	mov    QWORD PTR [rip+0x2acd6],rax        # 0x14003ea58
   140013d82:	mov    rax,QWORD PTR [rip+0x2ad2f]        # 0x14003eab8
   140013d89:	mov    QWORD PTR [rip+0x2aba0],rax        # 0x14003e930
   140013d90:	mov    DWORD PTR [rip+0x2ab86],0xc0000409        # 0x14003e920
   140013d9a:	mov    DWORD PTR [rip+0x2ab80],0x1        # 0x14003e924
   140013da4:	mov    DWORD PTR [rip+0x2ab8a],0x1        # 0x14003e938
   140013dae:	mov    eax,0x8
   140013db3:	imul   rax,rax,0x0
   140013db7:	lea    rcx,[rip+0x2ab82]        # 0x14003e940
   140013dbe:	mov    edx,DWORD PTR [rsp+0x30]
   140013dc2:	mov    QWORD PTR [rcx+rax*1],rdx
   140013dc6:	lea    rcx,[rip+0x1f573]        # 0x140033340
   140013dcd:	call   0x140013c08
   140013dd2:	add    rsp,0x28
   140013dd6:	ret    
   140013dd7:	int3   
   140013dd8:	mov    QWORD PTR [rsp+0x18],r8
   140013ddd:	mov    DWORD PTR [rsp+0x10],edx
   140013de1:	mov    DWORD PTR [rsp+0x8],ecx
   140013de5:	sub    rsp,0x38
   140013de9:	mov    ecx,0x17
   140013dee:	call   0x14002a60c
   140013df3:	test   eax,eax
   140013df5:	je     0x140013dff
   140013df7:	mov    eax,DWORD PTR [rsp+0x40]
   140013dfb:	mov    ecx,eax
   140013dfd:	int    0x29
   140013dff:	lea    rcx,[rip+0x2abba]        # 0x14003e9c0
   140013e06:	call   0x14000e4c4
   140013e0b:	mov    rax,QWORD PTR [rsp+0x38]
   140013e10:	mov    QWORD PTR [rip+0x2aca1],rax        # 0x14003eab8
   140013e17:	lea    rax,[rsp+0x38]
   140013e1c:	add    rax,0x8
   140013e20:	mov    QWORD PTR [rip+0x2ac31],rax        # 0x14003ea58
   140013e27:	mov    rax,QWORD PTR [rip+0x2ac8a]        # 0x14003eab8
   140013e2e:	mov    QWORD PTR [rip+0x2aafb],rax        # 0x14003e930
   140013e35:	mov    DWORD PTR [rip+0x2aae1],0xc0000409        # 0x14003e920
   140013e3f:	mov    DWORD PTR [rip+0x2aadb],0x1        # 0x14003e924
   140013e49:	cmp    DWORD PTR [rsp+0x48],0x0
   140013e4e:	jbe    0x140013e60
   140013e50:	cmp    QWORD PTR [rsp+0x50],0x0
   140013e56:	jne    0x140013e60
   140013e58:	mov    DWORD PTR [rsp+0x48],0x0
   140013e60:	cmp    DWORD PTR [rsp+0x48],0xe
   140013e65:	jbe    0x140013e71
   140013e67:	mov    eax,DWORD PTR [rsp+0x48]
   140013e6b:	dec    eax
   140013e6d:	mov    DWORD PTR [rsp+0x48],eax
   140013e71:	mov    eax,DWORD PTR [rsp+0x48]
   140013e75:	inc    eax
   140013e77:	mov    DWORD PTR [rip+0x2aabb],eax        # 0x14003e938
   140013e7d:	mov    eax,0x8
   140013e82:	imul   rax,rax,0x0
   140013e86:	lea    rcx,[rip+0x2aab3]        # 0x14003e940
   140013e8d:	mov    edx,DWORD PTR [rsp+0x40]
   140013e91:	mov    QWORD PTR [rcx+rax*1],rdx
   140013e95:	mov    DWORD PTR [rsp+0x20],0x0
   140013e9d:	jmp    0x140013ea9
   140013e9f:	mov    eax,DWORD PTR [rsp+0x20]
   140013ea3:	inc    eax
   140013ea5:	mov    DWORD PTR [rsp+0x20],eax
   140013ea9:	mov    eax,DWORD PTR [rsp+0x48]
   140013ead:	cmp    DWORD PTR [rsp+0x20],eax
   140013eb1:	jae    0x140013ed5
   140013eb3:	mov    eax,DWORD PTR [rsp+0x20]
   140013eb7:	mov    ecx,DWORD PTR [rsp+0x20]
   140013ebb:	inc    ecx
   140013ebd:	mov    ecx,ecx
   140013ebf:	lea    rdx,[rip+0x2aa7a]        # 0x14003e940
   140013ec6:	mov    r8,QWORD PTR [rsp+0x50]
   140013ecb:	mov    rax,QWORD PTR [r8+rax*8]
   140013ecf:	mov    QWORD PTR [rdx+rcx*8],rax
   140013ed3:	jmp    0x140013e9f
   140013ed5:	lea    rcx,[rip+0x1f464]        # 0x140033340
   140013edc:	call   0x140013c08
   140013ee1:	add    rsp,0x38
   140013ee5:	ret    
   140013ee6:	int3   
   140013ee7:	int3   
   140013ee8:	and    QWORD PTR [rcx],0x0
   140013eec:	mov    rax,rcx
   140013eef:	ret    
   140013ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140013ef5:	mov    QWORD PTR [rsp+0x10],rsi
   140013efa:	push   rdi
   140013efb:	sub    rsp,0x20
   140013eff:	and    QWORD PTR [rcx],0x0
   140013f03:	mov    BYTE PTR [rcx+0x8],0x0
   140013f07:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140013f0e:	mov    rdi,rdx
   140013f11:	mov    rdx,QWORD PTR [rdx]
   140013f14:	mov    sil,r8b
   140013f17:	mov    rbx,rcx
   140013f1a:	test   rdx,rdx
   140013f1d:	je     0x140013fb9
   140013f23:	cmp    BYTE PTR [rdx],0x0
   140013f26:	je     0x140013fb3
   140013f2c:	xor    r8d,r8d
   140013f2f:	mov    r9,QWORD PTR [rdi]
   140013f32:	mov    cl,BYTE PTR [r9]
   140013f35:	cmp    cl,sil
   140013f38:	je     0x140013f7b
   140013f3a:	lea    eax,[rcx-0x24]
   140013f3d:	cmp    al,0x3b
   140013f3f:	ja     0x140013f51
   140013f41:	movabs r10,0x87fffffe53ff201
   140013f4b:	bt     r10,rax
   140013f4f:	jb     0x140013f6c
   140013f51:	lea    eax,[rcx-0x61]
   140013f54:	cmp    al,0x19
   140013f56:	jbe    0x140013f6c
   140013f58:	add    cl,0x80
   140013f5b:	cmp    cl,0x7e
   140013f5e:	jbe    0x140013f6c
   140013f60:	test   DWORD PTR [rip+0x2af6a],0x10000        # 0x14003eed4
   140013f6a:	je     0x140013fa1
   140013f6c:	lea    rax,[r9+0x1]
   140013f70:	inc    r8d
   140013f73:	mov    QWORD PTR [rdi],rax
   140013f76:	cmp    BYTE PTR [rax],0x0
   140013f79:	jne    0x140013f2f
   140013f7b:	mov    rcx,rbx
   140013f7e:	call   0x140015aa8
   140013f83:	mov    rax,QWORD PTR [rdi]
   140013f86:	mov    cl,BYTE PTR [rax]
   140013f88:	test   cl,cl
   140013f8a:	je     0x140013fa7
   140013f8c:	inc    rax
   140013f8f:	mov    QWORD PTR [rdi],rax
   140013f92:	cmp    cl,sil
   140013f95:	je     0x140013fbd
   140013f97:	and    QWORD PTR [rbx],0x0
   140013f9b:	mov    BYTE PTR [rbx+0x8],0x3
   140013f9f:	jmp    0x140013fbd
   140013fa1:	mov    BYTE PTR [rbx+0x8],0x2
   140013fa5:	jmp    0x140013fbd
   140013fa7:	cmp    BYTE PTR [rbx+0x8],0x0
   140013fab:	jne    0x140013fbd
   140013fad:	mov    BYTE PTR [rbx+0x8],0x1
   140013fb1:	jmp    0x140013fbd
   140013fb3:	mov    BYTE PTR [rcx+0x8],0x1
   140013fb7:	jmp    0x140013fbd
   140013fb9:	mov    BYTE PTR [rcx+0x8],0x2
   140013fbd:	mov    rsi,QWORD PTR [rsp+0x38]
   140013fc2:	mov    rax,rbx
   140013fc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140013fca:	add    rsp,0x20
   140013fce:	pop    rdi
   140013fcf:	ret    
   140013fd0:	movups xmm0,XMMWORD PTR [rdx]
   140013fd3:	mov    rax,rcx
   140013fd6:	movdqu XMMWORD PTR [rcx],xmm0
   140013fda:	ret    
   140013fdb:	int3   
   140013fdc:	mov    BYTE PTR [rsp+0x10],dl
   140013fe0:	push   rbx
   140013fe1:	sub    rsp,0x20
   140013fe5:	and    QWORD PTR [rcx],0x0
   140013fe9:	mov    BYTE PTR [rcx+0x8],0x0
   140013fed:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140013ff4:	mov    rbx,rcx
   140013ff7:	test   dl,dl
   140013ff9:	je     0x14001400b
   140013ffb:	lea    rdx,[rsp+0x38]
   140014000:	mov    r8d,0x1
   140014006:	call   0x140015aa8
   14001400b:	mov    rax,rbx
   14001400e:	add    rsp,0x20
   140014012:	pop    rbx
   140014013:	ret    
   140014014:	mov    QWORD PTR [rsp+0x8],rbx
   140014019:	mov    QWORD PTR [rsp+0x10],rsi
   14001401e:	push   rdi
   14001401f:	sub    rsp,0x20
   140014023:	xor    esi,esi
   140014025:	mov    rdi,rdx
   140014028:	mov    rbx,rcx
   14001402b:	test   rdx,rdx
   14001402e:	je     0x140014078
   140014030:	lea    edx,[rsi+0x10]
   140014033:	lea    rcx,[rip+0x2aea6]        # 0x14003eee0
   14001403a:	xor    r8d,r8d
   14001403d:	call   0x140017e18
   140014042:	test   rax,rax
   140014045:	je     0x140014064
   140014047:	lea    rcx,[rip+0x20082]        # 0x1400340d0
   14001404e:	mov    QWORD PTR [rax],rcx
   140014051:	mov    cl,BYTE PTR [rdi+0x8]
   140014054:	sub    cl,0x2
   140014057:	cmp    cl,0x1
   14001405a:	cmovbe rdi,rsi
   14001405e:	mov    QWORD PTR [rax+0x8],rdi
   140014062:	jmp    0x140014067
   140014064:	mov    rax,rsi
   140014067:	mov    QWORD PTR [rbx],rax
   14001406a:	neg    rax
   14001406d:	sbb    al,al
   14001406f:	not    al
   140014071:	and    al,0x3
   140014073:	mov    BYTE PTR [rbx+0x8],al
   140014076:	jmp    0x14001407f
   140014078:	mov    BYTE PTR [rcx+0x8],sil
   14001407c:	mov    QWORD PTR [rcx],rsi
   14001407f:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140014086:	mov    rsi,QWORD PTR [rsp+0x38]
   14001408b:	mov    rax,rbx
   14001408e:	mov    rbx,QWORD PTR [rsp+0x30]
   140014093:	add    rsp,0x20
   140014097:	pop    rdi
   140014098:	ret    
   140014099:	int3   
   14001409a:	int3   
   14001409b:	int3   
   14001409c:	rex push rbx
   14001409e:	sub    rsp,0x20
   1400140a2:	mov    rbx,rcx
   1400140a5:	xor    ecx,ecx
   1400140a7:	mov    BYTE PTR [rbx+0x8],cl
   1400140aa:	and    DWORD PTR [rbx+0x8],0xffff00ff
   1400140b1:	mov    QWORD PTR [rbx],rcx
   1400140b4:	test   rdx,rdx
   1400140b7:	je     0x1400140da
   1400140b9:	mov    rax,rdx
   1400140bc:	mov    r8d,ecx
   1400140bf:	cmp    BYTE PTR [rdx],cl
   1400140c1:	je     0x1400140da
   1400140c3:	inc    rax
   1400140c6:	inc    r8d
   1400140c9:	cmp    BYTE PTR [rax],cl
   1400140cb:	jne    0x1400140c3
   1400140cd:	test   r8d,r8d
   1400140d0:	je     0x1400140da
   1400140d2:	mov    rcx,rbx
   1400140d5:	call   0x140015aa8
   1400140da:	mov    rax,rbx
   1400140dd:	add    rsp,0x20
   1400140e1:	pop    rbx
   1400140e2:	ret    
   1400140e3:	int3   
   1400140e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400140e9:	push   rdi
   1400140ea:	sub    rsp,0x20
   1400140ee:	and    DWORD PTR [rcx+0x8],0xffff00ff
   1400140f5:	xor    edi,edi
   1400140f7:	mov    rbx,rcx
   1400140fa:	lea    ecx,[rdi+0x1]
   1400140fd:	lea    eax,[rdx-0x2]
   140014100:	mov    r8d,edx
   140014103:	cmp    eax,ecx
   140014105:	mov    QWORD PTR [rbx],rdi
   140014108:	cmova  r8d,edi
   14001410c:	mov    BYTE PTR [rbx+0x8],r8b
   140014110:	cmp    edx,ecx
   140014112:	jne    0x140014125
   140014114:	call   0x14001aa1c
   140014119:	mov    QWORD PTR [rbx],rax
   14001411c:	test   rax,rax
   14001411f:	jne    0x140014125
   140014121:	mov    BYTE PTR [rbx+0x8],0x3
   140014125:	mov    rax,rbx
   140014128:	mov    rbx,QWORD PTR [rsp+0x30]
   14001412d:	add    rsp,0x20
   140014131:	pop    rdi
   140014132:	ret    
   140014133:	int3   
   140014134:	and    QWORD PTR [rcx],0x0
   140014138:	mov    BYTE PTR [rcx+0x8],0x0
   14001413c:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140014143:	mov    rax,rcx
   140014146:	ret    
   140014147:	int3   
   140014148:	rex push rbx
   14001414a:	sub    rsp,0x40
   14001414e:	mov    rax,QWORD PTR [rip+0x2807b]        # 0x14003c1d0
   140014155:	xor    rax,rsp
   140014158:	mov    QWORD PTR [rsp+0x38],rax
   14001415d:	xor    r11d,r11d
   140014160:	mov    r8,rdx
   140014163:	mov    rbx,rcx
   140014166:	mov    BYTE PTR [rcx+0x8],r11b
   14001416a:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140014171:	lea    r9,[rsp+0x35]
   140014176:	mov    QWORD PTR [rcx],r11
   140014179:	mov    BYTE PTR [rsp+0x35],r11b
   14001417e:	mov    r10b,r11b
   140014181:	test   rdx,rdx
   140014184:	jns    0x14001418c
   140014186:	mov    r10b,0x1
   140014189:	neg    r8
   14001418c:	dec    r9
   14001418f:	movabs rax,0xcccccccccccccccd
   140014199:	mul    r8
   14001419c:	shr    rdx,0x3
   1400141a0:	mov    al,dl
   1400141a2:	shl    al,0x2
   1400141a5:	lea    ecx,[rax+rdx*1]
   1400141a8:	add    cl,cl
   1400141aa:	sub    r8b,cl
   1400141ad:	add    r8b,0x30
   1400141b1:	mov    BYTE PTR [r9],r8b
   1400141b4:	mov    r8,rdx
   1400141b7:	test   rdx,rdx
   1400141ba:	jne    0x14001418c
   1400141bc:	test   r10b,r10b
   1400141bf:	je     0x1400141c8
   1400141c1:	dec    r9
   1400141c4:	mov    BYTE PTR [r9],0x2d
   1400141c8:	lea    r8,[rsp+0x35]
   1400141cd:	mov    rdx,r9
   1400141d0:	mov    rcx,rbx
   1400141d3:	sub    r8d,r9d
   1400141d6:	call   0x140015aa8
   1400141db:	mov    rax,rbx
   1400141de:	mov    rcx,QWORD PTR [rsp+0x38]
   1400141e3:	xor    rcx,rsp
   1400141e6:	call   0x14000c380
   1400141eb:	add    rsp,0x40
   1400141ef:	pop    rbx
   1400141f0:	ret    
   1400141f1:	int3   
   1400141f2:	int3   
   1400141f3:	int3   
   1400141f4:	rex push rbx
   1400141f6:	sub    rsp,0x40
   1400141fa:	mov    rax,QWORD PTR [rip+0x27fcf]        # 0x14003c1d0
   140014201:	xor    rax,rsp
   140014204:	mov    QWORD PTR [rsp+0x38],rax
   140014209:	xor    r10d,r10d
   14001420c:	mov    r8,rdx
   14001420f:	mov    rbx,rcx
   140014212:	mov    BYTE PTR [rcx+0x8],r10b
   140014216:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14001421d:	lea    r9,[rsp+0x34]
   140014222:	mov    QWORD PTR [rcx],r10
   140014225:	mov    BYTE PTR [rsp+0x34],r10b
   14001422a:	dec    r9
   14001422d:	movabs rax,0xcccccccccccccccd
   140014237:	mul    r8
   14001423a:	shr    rdx,0x3
   14001423e:	mov    al,dl
   140014240:	shl    al,0x2
   140014243:	lea    ecx,[rax+rdx*1]
   140014246:	add    cl,cl
   140014248:	sub    r8b,cl
   14001424b:	add    r8b,0x30
   14001424f:	mov    BYTE PTR [r9],r8b
   140014252:	mov    r8,rdx
   140014255:	test   rdx,rdx
   140014258:	jne    0x14001422a
   14001425a:	lea    r8,[rsp+0x34]
   14001425f:	mov    rdx,r9
   140014262:	mov    rcx,rbx
   140014265:	sub    r8d,r9d
   140014268:	call   0x140015aa8
   14001426d:	mov    rax,rbx
   140014270:	mov    rcx,QWORD PTR [rsp+0x38]
   140014275:	xor    rcx,rsp
   140014278:	call   0x14000c380
   14001427d:	add    rsp,0x40
   140014281:	pop    rbx
   140014282:	ret    
   140014283:	int3   
   140014284:	lea    rax,[rip+0x1fde5]        # 0x140034070
   14001428b:	mov    QWORD PTR [rcx],rax
   14001428e:	mov    rax,rcx
   140014291:	ret    
   140014292:	int3   
   140014293:	int3   
   140014294:	lea    rax,[rip+0x1fe55]        # 0x1400340f0
   14001429b:	mov    DWORD PTR [rcx+0x8],edx
   14001429e:	mov    QWORD PTR [rcx],rax
   1400142a1:	xor    eax,eax
   1400142a3:	cmp    edx,0x1
   1400142a6:	lea    r8d,[rax+0x4]
   1400142aa:	cmove  eax,r8d
   1400142ae:	mov    DWORD PTR [rcx+0xc],eax
   1400142b1:	mov    rax,rcx
   1400142b4:	ret    
   1400142b5:	int3   
   1400142b6:	int3   
   1400142b7:	int3   
   1400142b8:	or     DWORD PTR [rcx],0xffffffff
   1400142bb:	mov    rax,rcx
   1400142be:	ret    
   1400142bf:	int3   
   1400142c0:	or     r10d,0xffffffff
   1400142c4:	lea    rax,[rcx+0x58]
   1400142c8:	mov    DWORD PTR [rcx],r10d
   1400142cb:	mov    DWORD PTR [rax],r10d
   1400142ce:	mov    QWORD PTR [rip+0x2abeb],r8        # 0x14003eec0
   1400142d5:	mov    QWORD PTR [rip+0x2abdc],r8        # 0x14003eeb8
   1400142dc:	xor    r8d,r8d
   1400142df:	test   rdx,rdx
   1400142e2:	je     0x1400142f4
   1400142e4:	mov    DWORD PTR [rip+0x2abe5],r9d        # 0x14003eed0
   1400142eb:	mov    QWORD PTR [rip+0x2abd6],rdx        # 0x14003eec8
   1400142f2:	jmp    0x140014302
   1400142f4:	mov    QWORD PTR [rip+0x2abcd],r8        # 0x14003eec8
   1400142fb:	mov    DWORD PTR [rip+0x2abce],r8d        # 0x14003eed0
   140014302:	mov    QWORD PTR [rip+0x2ab9f],rax        # 0x14003eea8
   140014309:	mov    eax,DWORD PTR [rsp+0x30]
   14001430d:	mov    QWORD PTR [rip+0x2ab8c],rcx        # 0x14003eea0
   140014314:	mov    DWORD PTR [rip+0x2abba],eax        # 0x14003eed4
   14001431a:	mov    rax,QWORD PTR [rsp+0x28]
   14001431f:	mov    BYTE PTR [rip+0x2abb2],r8b        # 0x14003eed8
   140014326:	mov    QWORD PTR [rip+0x2ab6b],rax        # 0x14003ee98
   14001432d:	mov    rax,rcx
   140014330:	ret    
   140014331:	int3   
   140014332:	int3   
   140014333:	int3   
   140014334:	lea    rax,[rip+0x1fd55]        # 0x140034090
   14001433b:	mov    BYTE PTR [rcx+0x8],dl
   14001433e:	mov    QWORD PTR [rcx],rax
   140014341:	mov    rax,rcx
   140014344:	ret    
   140014345:	int3   
   140014346:	int3   
   140014347:	int3   
   140014348:	lea    rax,[rip+0x1fd81]        # 0x1400340d0
   14001434f:	xor    r8d,r8d
   140014352:	mov    QWORD PTR [rcx],rax
   140014355:	test   rdx,rdx
   140014358:	je     0x140014363
   14001435a:	mov    al,BYTE PTR [rdx+0x8]
   14001435d:	sub    al,0x2
   14001435f:	cmp    al,0x1
   140014361:	jbe    0x140014366
   140014363:	mov    r8,rdx
   140014366:	mov    QWORD PTR [rcx+0x8],r8
   14001436a:	mov    rax,rcx
   14001436d:	ret    
   14001436e:	int3   
   14001436f:	int3   
   140014370:	or     DWORD PTR [rcx+0x18],0xffffffff
   140014374:	lea    rax,[rip+0x1fd95]        # 0x140034110
   14001437b:	mov    QWORD PTR [rcx+0x8],rdx
   14001437f:	mov    QWORD PTR [rcx],rax
   140014382:	mov    QWORD PTR [rcx+0x10],r8
   140014386:	mov    rax,rcx
   140014389:	ret    
   14001438a:	int3   
   14001438b:	int3   
   14001438c:	mov    QWORD PTR [rsp+0x8],rbx
   140014391:	mov    QWORD PTR [rsp+0x10],rsi
   140014396:	push   rdi
   140014397:	sub    rsp,0x20
   14001439b:	lea    rax,[rip+0x1fd0e]        # 0x1400340b0
   1400143a2:	mov    edi,r8d
   1400143a5:	mov    rsi,rdx
   1400143a8:	mov    rbx,rcx
   1400143ab:	mov    QWORD PTR [rcx],rax
   1400143ae:	test   r8d,r8d
   1400143b1:	je     0x1400143f7
   1400143b3:	test   rdx,rdx
   1400143b6:	je     0x1400143f7
   1400143b8:	lea    rcx,[rip+0x2ab21]        # 0x14003eee0
   1400143bf:	movsxd rdx,edi
   1400143c2:	xor    r8d,r8d
   1400143c5:	call   0x140017e18
   1400143ca:	mov    DWORD PTR [rbx+0x10],edi
   1400143cd:	mov    rcx,rax
   1400143d0:	mov    QWORD PTR [rbx+0x8],rax
   1400143d4:	test   rax,rax
   1400143d7:	je     0x1400143f1
   1400143d9:	test   edi,edi
   1400143db:	je     0x140014400
   1400143dd:	sub    rsi,rax
   1400143e0:	mov    edx,edi
   1400143e2:	mov    al,BYTE PTR [rsi+rcx*1]
   1400143e5:	mov    BYTE PTR [rcx],al
   1400143e7:	inc    rcx
   1400143ea:	dec    rdx
   1400143ed:	jne    0x1400143e2
   1400143ef:	jmp    0x140014400
   1400143f1:	and    DWORD PTR [rbx+0x10],0x0
   1400143f5:	jmp    0x140014400
   1400143f7:	and    QWORD PTR [rcx+0x8],0x0
   1400143fc:	and    DWORD PTR [rcx+0x10],0x0
   140014400:	mov    rsi,QWORD PTR [rsp+0x38]
   140014405:	mov    rax,rbx
   140014408:	mov    rbx,QWORD PTR [rsp+0x30]
   14001440d:	add    rsp,0x20
   140014411:	pop    rdi
   140014412:	ret    
   140014413:	int3   
   140014414:	mov    rdx,rcx
   140014417:	lea    rcx,[rip+0x2aac2]        # 0x14003eee0
   14001441e:	jmp    0x140017e18
   140014423:	int3   
   140014424:	movups xmm0,XMMWORD PTR [rdx]
   140014427:	mov    rax,rcx
   14001442a:	movdqu XMMWORD PTR [rcx],xmm0
   14001442e:	ret    
   14001442f:	int3   
   140014430:	mov    BYTE PTR [rsp+0x10],dl
   140014434:	push   rbx
   140014435:	sub    rsp,0x20
   140014439:	and    QWORD PTR [rcx],0x0
   14001443d:	mov    BYTE PTR [rcx+0x8],0x0
   140014441:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140014448:	mov    rbx,rcx
   14001444b:	test   dl,dl
   14001444d:	je     0x14001445f
   14001444f:	lea    rdx,[rsp+0x38]
   140014454:	mov    r8d,0x1
   14001445a:	call   0x140015aa8
   14001445f:	mov    rax,rbx
   140014462:	add    rsp,0x20
   140014466:	pop    rbx
   140014467:	ret    
   140014468:	mov    QWORD PTR [rsp+0x8],rbx
   14001446d:	mov    QWORD PTR [rsp+0x10],rsi
   140014472:	push   rdi
   140014473:	sub    rsp,0x20
   140014477:	xor    esi,esi
   140014479:	mov    rdi,rdx
   14001447c:	mov    rbx,rcx
   14001447f:	mov    BYTE PTR [rcx+0x8],sil
   140014483:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14001448a:	mov    QWORD PTR [rcx],rsi
   14001448d:	test   rdx,rdx
   140014490:	je     0x1400144d7
   140014492:	lea    edx,[rsi+0x10]
   140014495:	lea    rcx,[rip+0x2aa44]        # 0x14003eee0
   14001449c:	xor    r8d,r8d
   14001449f:	call   0x140017e18
   1400144a4:	test   rax,rax
   1400144a7:	je     0x1400144c6
   1400144a9:	lea    rcx,[rip+0x1fc20]        # 0x1400340d0
   1400144b0:	mov    QWORD PTR [rax],rcx
   1400144b3:	mov    cl,BYTE PTR [rdi+0x8]
   1400144b6:	sub    cl,0x2
   1400144b9:	cmp    cl,0x1
   1400144bc:	cmovbe rdi,rsi
   1400144c0:	mov    QWORD PTR [rax+0x8],rdi
   1400144c4:	jmp    0x1400144c9
   1400144c6:	mov    rax,rsi
   1400144c9:	mov    QWORD PTR [rbx],rax
   1400144cc:	test   rax,rax
   1400144cf:	jne    0x1400144db
   1400144d1:	mov    BYTE PTR [rbx+0x8],0x3
   1400144d5:	jmp    0x1400144db
   1400144d7:	mov    BYTE PTR [rcx+0x8],0x3
   1400144db:	mov    rsi,QWORD PTR [rsp+0x38]
   1400144e0:	mov    rax,rbx
   1400144e3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400144e8:	add    rsp,0x20
   1400144ec:	pop    rdi
   1400144ed:	ret    
   1400144ee:	int3   
   1400144ef:	int3   
   1400144f0:	rex push rbx
   1400144f2:	sub    rsp,0x20
   1400144f6:	mov    rbx,rcx
   1400144f9:	xor    ecx,ecx
   1400144fb:	mov    rax,rdx
   1400144fe:	mov    BYTE PTR [rbx+0x8],cl
   140014501:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140014508:	mov    QWORD PTR [rbx],rcx
   14001450b:	mov    r8d,ecx
   14001450e:	cmp    BYTE PTR [rdx],cl
   140014510:	je     0x14001451c
   140014512:	inc    rax
   140014515:	inc    r8d
   140014518:	cmp    BYTE PTR [rax],cl
   14001451a:	jne    0x140014512
   14001451c:	mov    rcx,rbx
   14001451f:	call   0x140015aa8
   140014524:	mov    rax,rbx
   140014527:	add    rsp,0x20
   14001452b:	pop    rbx
   14001452c:	ret    
   14001452d:	int3   
   14001452e:	int3   
   14001452f:	int3   
   140014530:	rex push rbx
   140014532:	sub    rsp,0x20
   140014536:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14001453d:	mov    rbx,rcx
   140014540:	mov    BYTE PTR [rcx+0x8],dl
   140014543:	mov    ecx,0x1
   140014548:	cmp    edx,ecx
   14001454a:	jne    0x14001455f
   14001454c:	call   0x14001aa1c
   140014551:	mov    QWORD PTR [rbx],rax
   140014554:	test   rax,rax
   140014557:	jne    0x140014563
   140014559:	mov    BYTE PTR [rbx+0x8],0x3
   14001455d:	jmp    0x140014563
   14001455f:	and    QWORD PTR [rbx],0x0
   140014563:	mov    rax,rbx
   140014566:	add    rsp,0x20
   14001456a:	pop    rbx
   14001456b:	ret    
   14001456c:	rex push rbx
   14001456e:	sub    rsp,0x20
   140014572:	mov    rbx,rdx
   140014575:	cmp    r8d,0x9
   140014579:	ja     0x14001459d
   14001457b:	cmp    DWORD PTR [rcx],0xffffffff
   14001457e:	je     0x140014596
   140014580:	cmp    r8d,DWORD PTR [rcx]
   140014583:	jg     0x140014596
   140014585:	movsxd rax,r8d
   140014588:	mov    rcx,QWORD PTR [rcx+rax*8+0x8]
   14001458d:	movups xmm0,XMMWORD PTR [rcx]
   140014590:	movdqu XMMWORD PTR [rdx],xmm0
   140014594:	jmp    0x1400145aa
   140014596:	mov    edx,0x2
   14001459b:	jmp    0x1400145a2
   14001459d:	mov    edx,0x3
   1400145a2:	mov    rcx,rbx
   1400145a5:	call   0x1400140e4
   1400145aa:	mov    rax,rbx
   1400145ad:	add    rsp,0x20
   1400145b1:	pop    rbx
   1400145b2:	ret    
   1400145b3:	int3   
   1400145b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400145b9:	push   rbp
   1400145ba:	mov    rbp,rsp
   1400145bd:	sub    rsp,0x70
   1400145c1:	mov    ecx,DWORD PTR [rbp-0x48]
   1400145c4:	and    QWORD PTR [rbp-0x50],0x0
   1400145c9:	and    QWORD PTR [rbp-0x40],0x0
   1400145ce:	mov    eax,0xffff0000
   1400145d3:	and    DWORD PTR [rbp-0x38],eax
   1400145d6:	and    ecx,eax
   1400145d8:	mov    rax,QWORD PTR [rip+0x2a8e1]        # 0x14003eec0
   1400145df:	mov    DWORD PTR [rbp-0x48],ecx
   1400145e2:	test   rax,rax
   1400145e5:	je     0x1400146bc
   1400145eb:	cmp    BYTE PTR [rax],0x3f
   1400145ee:	jne    0x140014687
   1400145f4:	mov    dl,BYTE PTR [rax+0x1]
   1400145f7:	cmp    dl,0x40
   1400145fa:	jne    0x14001463a
   1400145fc:	add    QWORD PTR [rip+0x2a8b4],0x2        # 0x14003eeb8
   140014604:	lea    rcx,[rbp-0x20]
   140014608:	call   0x140016e40
   14001460d:	lea    rdx,[rip+0x1f698]        # 0x140033cac
   140014614:	lea    rcx,[rbp-0x10]
   140014618:	mov    rbx,rax
   14001461b:	call   0x14001409c
   140014620:	lea    rcx,[rbp-0x30]
   140014624:	mov    rdx,rbx
   140014627:	movups xmm0,XMMWORD PTR [rax]
   14001462a:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   14001462f:	call   0x140014910
   140014634:	movaps xmm1,XMMWORD PTR [rbp-0x30]
   140014638:	jmp    0x140014693
   14001463a:	cmp    dl,0x24
   14001463d:	jne    0x140014699
   14001463f:	lea    rcx,[rbp-0x10]
   140014643:	xor    edx,edx
   140014645:	call   0x140019c20
   14001464a:	movups xmm1,XMMWORD PTR [rax]
   14001464d:	movdqa xmm0,xmm1
   140014651:	psrldq xmm0,0x8
   140014656:	movd   eax,xmm0
   14001465a:	mov    BYTE PTR [rbp-0x48],al
   14001465d:	cmp    al,0x2
   14001465f:	je     0x140014679
   140014661:	test   DWORD PTR [rip+0x2a869],0x1000        # 0x14003eed4
   14001466b:	jne    0x1400146c0
   14001466d:	mov    rax,QWORD PTR [rip+0x2a844]        # 0x14003eeb8
   140014674:	cmp    BYTE PTR [rax],0x0
   140014677:	je     0x1400146c0
   140014679:	mov    rax,QWORD PTR [rip+0x2a840]        # 0x14003eec0
   140014680:	mov    QWORD PTR [rip+0x2a831],rax        # 0x14003eeb8
   140014687:	lea    rcx,[rbp-0x10]
   14001468b:	call   0x140016e40
   140014690:	movups xmm1,XMMWORD PTR [rax]
   140014693:	movaps XMMWORD PTR [rbp-0x50],xmm1
   140014697:	jmp    0x1400146c0
   140014699:	cmp    dl,0x3f
   14001469c:	jne    0x140014687
   14001469e:	mov    rax,QWORD PTR [rip+0x2a81b]        # 0x14003eec0
   1400146a5:	cmp    BYTE PTR [rax+0x2],0x40
   1400146a9:	jne    0x140014687
   1400146ab:	and    ecx,0xffff0002
   1400146b1:	or     ecx,0x2
   1400146b4:	and    QWORD PTR [rbp-0x50],0x0
   1400146b9:	mov    DWORD PTR [rbp-0x48],ecx
   1400146bc:	movaps xmm1,XMMWORD PTR [rbp-0x50]
   1400146c0:	cmp    BYTE PTR [rbp-0x48],0x3
   1400146c4:	jne    0x1400146cd
   1400146c6:	xor    eax,eax
   1400146c8:	jmp    0x14001479a
   1400146cd:	cmp    BYTE PTR [rbp-0x48],0x2
   1400146d1:	je     0x1400146f2
   1400146d3:	test   DWORD PTR [rip+0x2a7f7],0x1000        # 0x14003eed4
   1400146dd:	jne    0x1400146eb
   1400146df:	mov    rax,QWORD PTR [rip+0x2a7d2]        # 0x14003eeb8
   1400146e6:	cmp    BYTE PTR [rax],0x0
   1400146e9:	jne    0x1400146f2
   1400146eb:	movdqa XMMWORD PTR [rbp-0x40],xmm1
   1400146f0:	jmp    0x140014702
   1400146f2:	mov    rdx,QWORD PTR [rip+0x2a7c7]        # 0x14003eec0
   1400146f9:	lea    rcx,[rbp-0x40]
   1400146fd:	call   0x1400144f0
   140014702:	mov    rax,QWORD PTR [rip+0x2a7bf]        # 0x14003eec8
   140014709:	test   rax,rax
   14001470c:	jne    0x140014741
   14001470e:	mov    rcx,QWORD PTR [rbp-0x40]
   140014712:	test   rcx,rcx
   140014715:	je     0x14001471c
   140014717:	mov    rax,QWORD PTR [rcx]
   14001471a:	call   QWORD PTR [rax]
   14001471c:	inc    eax
   14001471e:	movsxd rcx,eax
   140014721:	mov    DWORD PTR [rip+0x2a7a9],eax        # 0x14003eed0
   140014727:	add    rcx,0x7
   14001472b:	and    rcx,0xfffffffffffffff8
   14001472f:	call   QWORD PTR [rip+0x2a7ab]        # 0x14003eee0
   140014735:	mov    QWORD PTR [rip+0x2a78c],rax        # 0x14003eec8
   14001473c:	test   rax,rax
   14001473f:	je     0x14001479a
   140014741:	mov    r8d,DWORD PTR [rip+0x2a788]        # 0x14003eed0
   140014748:	lea    rcx,[rbp-0x40]
   14001474c:	mov    rdx,rax
   14001474f:	call   0x140019304
   140014754:	mov    rax,QWORD PTR [rip+0x2a76d]        # 0x14003eec8
   14001475b:	mov    dl,BYTE PTR [rax]
   14001475d:	mov    rcx,rax
   140014760:	test   dl,dl
   140014762:	je     0x14001478f
   140014764:	mov    r8b,0x20
   140014767:	cmp    dl,r8b
   14001476a:	jne    0x140014781
   14001476c:	inc    rax
   14001476f:	mov    BYTE PTR [rcx],r8b
   140014772:	inc    rcx
   140014775:	jmp    0x14001477a
   140014777:	inc    rax
   14001477a:	cmp    BYTE PTR [rax],r8b
   14001477d:	je     0x140014777
   14001477f:	jmp    0x140014789
   140014781:	mov    BYTE PTR [rcx],dl
   140014783:	inc    rcx
   140014786:	inc    rax
   140014789:	mov    dl,BYTE PTR [rax]
   14001478b:	test   dl,dl
   14001478d:	jne    0x140014767
   14001478f:	mov    al,BYTE PTR [rax]
   140014791:	mov    BYTE PTR [rcx],al
   140014793:	mov    rax,QWORD PTR [rip+0x2a72e]        # 0x14003eec8
   14001479a:	mov    rbx,QWORD PTR [rsp+0x80]
   1400147a2:	add    rsp,0x70
   1400147a6:	pop    rbp
   1400147a7:	ret    
   1400147a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400147ad:	push   rdi
   1400147ae:	sub    rsp,0x30
   1400147b2:	mov    rdi,rcx
   1400147b5:	lea    rcx,[rsp+0x20]
   1400147ba:	mov    rbx,r8
   1400147bd:	call   0x140013fdc
   1400147c2:	mov    rdx,rbx
   1400147c5:	mov    rcx,rdi
   1400147c8:	movups xmm0,XMMWORD PTR [rax]
   1400147cb:	movdqu XMMWORD PTR [rdi],xmm0
   1400147cf:	call   0x140014910
   1400147d4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400147d9:	mov    rax,rdi
   1400147dc:	add    rsp,0x30
   1400147e0:	pop    rdi
   1400147e1:	ret    
   1400147e2:	int3   
   1400147e3:	int3   
   1400147e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400147e9:	push   rdi
   1400147ea:	sub    rsp,0x30
   1400147ee:	mov    rdi,rcx
   1400147f1:	lea    rcx,[rsp+0x20]
   1400147f6:	mov    rbx,r8
   1400147f9:	call   0x14001409c
   1400147fe:	mov    rdx,rbx
   140014801:	mov    rcx,rdi
   140014804:	movups xmm0,XMMWORD PTR [rax]
   140014807:	movdqu XMMWORD PTR [rdi],xmm0
   14001480b:	call   0x140014910
   140014810:	mov    rbx,QWORD PTR [rsp+0x40]
   140014815:	mov    rax,rdi
   140014818:	add    rsp,0x30
   14001481c:	pop    rdi
   14001481d:	ret    
   14001481e:	int3   
   14001481f:	int3   
   140014820:	mov    QWORD PTR [rsp+0x8],rbx
   140014825:	push   rdi
   140014826:	sub    rsp,0x30
   14001482a:	mov    rdi,rcx
   14001482d:	lea    rcx,[rsp+0x20]
   140014832:	mov    rbx,r8
   140014835:	call   0x1400140e4
   14001483a:	mov    rdx,rbx
   14001483d:	mov    rcx,rdi
   140014840:	movups xmm0,XMMWORD PTR [rax]
   140014843:	movdqu XMMWORD PTR [rdi],xmm0
   140014847:	call   0x140014910
   14001484c:	mov    rbx,QWORD PTR [rsp+0x40]
   140014851:	mov    rax,rdi
   140014854:	add    rsp,0x30
   140014858:	pop    rdi
   140014859:	ret    
   14001485a:	int3   
   14001485b:	int3   
   14001485c:	rex push rbx
   14001485e:	sub    rsp,0x20
   140014862:	movups xmm0,XMMWORD PTR [rcx]
   140014865:	mov    rbx,rdx
   140014868:	mov    rcx,rbx
   14001486b:	movdqu XMMWORD PTR [rdx],xmm0
   14001486f:	mov    rdx,r8
   140014872:	call   0x140014910
   140014877:	mov    rax,rbx
   14001487a:	add    rsp,0x20
   14001487e:	pop    rbx
   14001487f:	ret    
   140014880:	rex push rbx
   140014882:	sub    rsp,0x20
   140014886:	movups xmm0,XMMWORD PTR [rcx]
   140014889:	mov    rbx,rdx
   14001488c:	mov    rcx,rbx
   14001488f:	movdqu XMMWORD PTR [rdx],xmm0
   140014893:	mov    dl,r8b
   140014896:	call   0x140014950
   14001489b:	mov    rax,rbx
   14001489e:	add    rsp,0x20
   1400148a2:	pop    rbx
   1400148a3:	ret    
   1400148a4:	rex push rbx
   1400148a6:	sub    rsp,0x20
   1400148aa:	movups xmm0,XMMWORD PTR [rcx]
   1400148ad:	mov    rbx,rdx
   1400148b0:	mov    rcx,rbx
   1400148b3:	movdqu XMMWORD PTR [rdx],xmm0
   1400148b7:	mov    rdx,r8
   1400148ba:	call   0x1400149d4
   1400148bf:	mov    rax,rbx
   1400148c2:	add    rsp,0x20
   1400148c6:	pop    rbx
   1400148c7:	ret    
   1400148c8:	rex push rbx
   1400148ca:	sub    rsp,0x20
   1400148ce:	movups xmm0,XMMWORD PTR [rcx]
   1400148d1:	mov    rbx,rdx
   1400148d4:	mov    rcx,rbx
   1400148d7:	movdqu XMMWORD PTR [rdx],xmm0
   1400148db:	mov    rdx,r8
   1400148de:	call   0x140014a6c
   1400148e3:	mov    rax,rbx
   1400148e6:	add    rsp,0x20
   1400148ea:	pop    rbx
   1400148eb:	ret    
   1400148ec:	rex push rbx
   1400148ee:	sub    rsp,0x20
   1400148f2:	movups xmm0,XMMWORD PTR [rcx]
   1400148f5:	mov    rbx,rdx
   1400148f8:	mov    rcx,rbx
   1400148fb:	movdqu XMMWORD PTR [rdx],xmm0
   1400148ff:	mov    edx,r8d
   140014902:	call   0x140014af8
   140014907:	mov    rax,rbx
   14001490a:	add    rsp,0x20
   14001490e:	pop    rbx
   14001490f:	ret    
   140014910:	rex push rbx
   140014912:	sub    rsp,0x20
   140014916:	cmp    BYTE PTR [rcx+0x8],0x1
   14001491a:	mov    rbx,rcx
   14001491d:	jg     0x140014947
   14001491f:	cmp    QWORD PTR [rdx],0x0
   140014923:	jne    0x140014930
   140014925:	movsx  edx,BYTE PTR [rdx+0x8]
   140014929:	call   0x140014af8
   14001492e:	jmp    0x140014947
   140014930:	cmp    QWORD PTR [rcx],0x0
   140014934:	jne    0x14001493f
   140014936:	movups xmm0,XMMWORD PTR [rdx]
   140014939:	movdqu XMMWORD PTR [rcx],xmm0
   14001493d:	jmp    0x140014947
   14001493f:	mov    rdx,QWORD PTR [rdx]
   140014942:	call   0x140014c28
   140014947:	mov    rax,rbx
   14001494a:	add    rsp,0x20
   14001494e:	pop    rbx
   14001494f:	ret    
   140014950:	mov    QWORD PTR [rsp+0x10],rbx
   140014955:	push   rdi
   140014956:	sub    rsp,0x20
   14001495a:	mov    r8d,0x1
   140014960:	mov    dil,dl
   140014963:	mov    rbx,rcx
   140014966:	cmp    BYTE PTR [rcx+0x8],r8b
   14001496a:	jg     0x1400149c6
   14001496c:	test   dl,dl
   14001496e:	je     0x1400149c6
   140014970:	cmp    QWORD PTR [rcx],0x0
   140014974:	jne    0x140014995
   140014976:	and    QWORD PTR [rcx],0x0
   14001497a:	mov    BYTE PTR [rsp+0x30],dl
   14001497e:	mov    BYTE PTR [rcx+0x8],0x0
   140014982:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140014989:	lea    rdx,[rsp+0x30]
   14001498e:	call   0x140015aa8
   140014993:	jmp    0x1400149c6
   140014995:	xor    r8d,r8d
   140014998:	lea    rcx,[rip+0x2a541]        # 0x14003eee0
   14001499f:	lea    edx,[r8+0x10]
   1400149a3:	call   0x140017e18
   1400149a8:	test   rax,rax
   1400149ab:	je     0x1400149bb
   1400149ad:	lea    rcx,[rip+0x1f6dc]        # 0x140034090
   1400149b4:	mov    BYTE PTR [rax+0x8],dil
   1400149b8:	mov    QWORD PTR [rax],rcx
   1400149bb:	mov    rdx,rax
   1400149be:	mov    rcx,rbx
   1400149c1:	call   0x140014c28
   1400149c6:	mov    rax,rbx
   1400149c9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400149ce:	add    rsp,0x20
   1400149d2:	pop    rdi
   1400149d3:	ret    
   1400149d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400149d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400149de:	push   rdi
   1400149df:	sub    rsp,0x20
   1400149e3:	cmp    BYTE PTR [rcx+0x8],0x1
   1400149e7:	mov    rdi,rdx
   1400149ea:	mov    rbx,rcx
   1400149ed:	jg     0x140014a56
   1400149ef:	xor    esi,esi
   1400149f1:	test   rdx,rdx
   1400149f4:	je     0x140014a56
   1400149f6:	cmp    QWORD PTR [rcx],rsi
   1400149f9:	jne    0x140014a02
   1400149fb:	call   0x140014468
   140014a00:	jmp    0x140014a56
   140014a02:	mov    al,BYTE PTR [rdx+0x8]
   140014a05:	cmp    al,0x1
   140014a07:	jbe    0x140014a13
   140014a09:	movsx  edx,al
   140014a0c:	call   0x140014af8
   140014a11:	jmp    0x140014a56
   140014a13:	xor    r8d,r8d
   140014a16:	lea    rcx,[rip+0x2a4c3]        # 0x14003eee0
   140014a1d:	lea    edx,[r8+0x10]
   140014a21:	call   0x140017e18
   140014a26:	test   rax,rax
   140014a29:	je     0x140014a48
   140014a2b:	lea    rcx,[rip+0x1f69e]        # 0x1400340d0
   140014a32:	mov    QWORD PTR [rax],rcx
   140014a35:	mov    cl,BYTE PTR [rdi+0x8]
   140014a38:	sub    cl,0x2
   140014a3b:	cmp    cl,0x1
   140014a3e:	cmovbe rdi,rsi
   140014a42:	mov    QWORD PTR [rax+0x8],rdi
   140014a46:	jmp    0x140014a4b
   140014a48:	mov    rax,rsi
   140014a4b:	mov    rdx,rax
   140014a4e:	mov    rcx,rbx
   140014a51:	call   0x140014c28
   140014a56:	mov    rsi,QWORD PTR [rsp+0x38]
   140014a5b:	mov    rax,rbx
   140014a5e:	mov    rbx,QWORD PTR [rsp+0x30]
   140014a63:	add    rsp,0x20
   140014a67:	pop    rdi
   140014a68:	ret    
   140014a69:	int3   
   140014a6a:	int3   
   140014a6b:	int3   
   140014a6c:	mov    QWORD PTR [rsp+0x8],rbx
   140014a71:	mov    QWORD PTR [rsp+0x10],rsi
   140014a76:	push   rdi
   140014a77:	sub    rsp,0x20
   140014a7b:	cmp    BYTE PTR [rcx+0x8],0x1
   140014a7f:	mov    rsi,rdx
   140014a82:	mov    rdi,rcx
   140014a85:	jg     0x140014ae3
   140014a87:	xor    ebx,ebx
   140014a89:	test   rdx,rdx
   140014a8c:	je     0x140014ae3
   140014a8e:	cmp    BYTE PTR [rdx],bl
   140014a90:	je     0x140014ae3
   140014a92:	cmp    QWORD PTR [rcx],rbx
   140014a95:	jne    0x140014a9e
   140014a97:	call   0x1400144f0
   140014a9c:	jmp    0x140014ae3
   140014a9e:	xor    r8d,r8d
   140014aa1:	lea    rcx,[rip+0x2a438]        # 0x14003eee0
   140014aa8:	lea    edx,[r8+0x18]
   140014aac:	call   0x140017e18
   140014ab1:	test   rax,rax
   140014ab4:	je     0x140014ad8
   140014ab6:	mov    rcx,rsi
   140014ab9:	mov    r8d,ebx
   140014abc:	cmp    BYTE PTR [rsi],bl
   140014abe:	je     0x140014aca
   140014ac0:	inc    rcx
   140014ac3:	inc    r8d
   140014ac6:	cmp    BYTE PTR [rcx],bl
   140014ac8:	jne    0x140014ac0
   140014aca:	mov    rdx,rsi
   140014acd:	mov    rcx,rax
   140014ad0:	call   0x14001438c
   140014ad5:	mov    rbx,rax
   140014ad8:	mov    rdx,rbx
   140014adb:	mov    rcx,rdi
   140014ade:	call   0x140014c28
   140014ae3:	mov    rbx,QWORD PTR [rsp+0x30]
   140014ae8:	mov    rsi,QWORD PTR [rsp+0x38]
   140014aed:	mov    rax,rdi
   140014af0:	add    rsp,0x20
   140014af4:	pop    rdi
   140014af5:	ret    
   140014af6:	int3   
   140014af7:	int3   
   140014af8:	rex push rbx
   140014afa:	sub    rsp,0x20
   140014afe:	cmp    BYTE PTR [rcx+0x8],0x1
   140014b02:	mov    rbx,rcx
   140014b05:	jg     0x140014b32
   140014b07:	cmp    QWORD PTR [rcx],0x0
   140014b0b:	je     0x140014b2d
   140014b0d:	lea    eax,[rdx-0x2]
   140014b10:	cmp    eax,0x1
   140014b13:	jbe    0x140014b2d
   140014b15:	test   edx,edx
   140014b17:	je     0x140014b32
   140014b19:	mov    ecx,edx
   140014b1b:	call   0x14001aa1c
   140014b20:	mov    rcx,rbx
   140014b23:	mov    rdx,rax
   140014b26:	call   0x140014c28
   140014b2b:	jmp    0x140014b32
   140014b2d:	call   0x140014530
   140014b32:	mov    rax,rbx
   140014b35:	add    rsp,0x20
   140014b39:	pop    rbx
   140014b3a:	ret    
   140014b3b:	int3   
   140014b3c:	mov    QWORD PTR [rsp+0x8],rbx
   140014b41:	push   rdi
   140014b42:	sub    rsp,0x20
   140014b46:	cmp    DWORD PTR [rcx],0x9
   140014b49:	mov    rdi,rdx
   140014b4c:	mov    rbx,rcx
   140014b4f:	je     0x140014b8c
   140014b51:	cmp    QWORD PTR [rdx],0x0
   140014b55:	je     0x140014b8c
   140014b57:	xor    r8d,r8d
   140014b5a:	lea    rcx,[rip+0x2a37f]        # 0x14003eee0
   140014b61:	lea    edx,[r8+0x10]
   140014b65:	call   0x140017e18
   140014b6a:	mov    rcx,rax
   140014b6d:	test   rax,rax
   140014b70:	je     0x140014b7b
   140014b72:	movups xmm0,XMMWORD PTR [rdi]
   140014b75:	movdqu XMMWORD PTR [rax],xmm0
   140014b79:	jmp    0x140014b7d
   140014b7b:	xor    ecx,ecx
   140014b7d:	test   rcx,rcx
   140014b80:	je     0x140014b8c
   140014b82:	inc    DWORD PTR [rbx]
   140014b84:	movsxd rax,DWORD PTR [rbx]
   140014b87:	mov    QWORD PTR [rbx+rax*8+0x8],rcx
   140014b8c:	mov    rax,rbx
   140014b8f:	mov    rbx,QWORD PTR [rsp+0x30]
   140014b94:	add    rsp,0x20
   140014b98:	pop    rdi
   140014b99:	ret    
   140014b9a:	int3   
   140014b9b:	int3   
   140014b9c:	cmp    BYTE PTR [rcx+0x8],0x3
   140014ba0:	je     0x140014bac
   140014ba2:	mov    al,BYTE PTR [rdx+0x8]
   140014ba5:	cmp    al,0x1
   140014ba7:	jle    0x140014bac
   140014ba9:	mov    BYTE PTR [rcx+0x8],al
   140014bac:	mov    rax,rcx
   140014baf:	ret    
   140014bb0:	xor    eax,eax
   140014bb2:	mov    QWORD PTR [rcx],rdx
   140014bb5:	mov    QWORD PTR [rcx+0x8],r8
   140014bb9:	mov    QWORD PTR [rcx+0x20],rax
   140014bbd:	mov    QWORD PTR [rcx+0x10],rax
   140014bc1:	mov    QWORD PTR [rcx+0x18],rax
   140014bc5:	ret    
   140014bc6:	int3   
   140014bc7:	int3   
   140014bc8:	rex push rbx
   140014bca:	sub    rsp,0x20
   140014bce:	cmp    QWORD PTR [rcx+0x8],0x0
   140014bd3:	mov    rbx,rcx
   140014bd6:	je     0x140014c00
   140014bd8:	mov    rax,QWORD PTR [rcx+0x10]
   140014bdc:	mov    QWORD PTR [rcx+0x18],rax
   140014be0:	jmp    0x140014bfb
   140014be2:	mov    rax,QWORD PTR [rbx+0x18]
   140014be6:	mov    rcx,QWORD PTR [rax]
   140014be9:	mov    QWORD PTR [rbx+0x10],rcx
   140014bed:	mov    rcx,rax
   140014bf0:	call   QWORD PTR [rbx+0x8]
   140014bf3:	mov    rax,QWORD PTR [rbx+0x10]
   140014bf7:	mov    QWORD PTR [rbx+0x18],rax
   140014bfb:	test   rax,rax
   140014bfe:	jne    0x140014be2
   140014c00:	add    rsp,0x20
   140014c04:	pop    rbx
   140014c05:	ret    
   140014c06:	int3   
   140014c07:	int3   
   140014c08:	mov    eax,DWORD PTR [rip+0x2a2c6]        # 0x14003eed4
   140014c0e:	not    eax
   140014c10:	test   al,0x1
   140014c12:	movsxd rax,ecx
   140014c15:	lea    rcx,[rip+0x1e734]        # 0x140033350
   140014c1c:	mov    rax,QWORD PTR [rcx+rax*8]
   140014c20:	jne    0x140014c26
   140014c22:	add    rax,0x2
   140014c26:	ret    
   140014c27:	int3   
   140014c28:	mov    QWORD PTR [rsp+0x8],rbx
   140014c2d:	push   rdi
   140014c2e:	sub    rsp,0x20
   140014c32:	mov    rdi,rdx
   140014c35:	mov    rbx,rcx
   140014c38:	test   rdx,rdx
   140014c3b:	je     0x140014c7c
   140014c3d:	xor    r8d,r8d
   140014c40:	lea    rcx,[rip+0x2a299]        # 0x14003eee0
   140014c47:	lea    edx,[r8+0x20]
   140014c4b:	call   0x140017e18
   140014c50:	test   rax,rax
   140014c53:	je     0x140014c6e
   140014c55:	mov    rdx,QWORD PTR [rbx]
   140014c58:	or     DWORD PTR [rax+0x18],0xffffffff
   140014c5c:	lea    rcx,[rip+0x1f4ad]        # 0x140034110
   140014c63:	mov    QWORD PTR [rax+0x8],rdx
   140014c67:	mov    QWORD PTR [rax],rcx
   140014c6a:	mov    QWORD PTR [rax+0x10],rdi
   140014c6e:	mov    QWORD PTR [rbx],rax
   140014c71:	test   rax,rax
   140014c74:	jne    0x140014c80
   140014c76:	mov    BYTE PTR [rbx+0x8],0x3
   140014c7a:	jmp    0x140014c80
   140014c7c:	mov    BYTE PTR [rcx+0x8],0x3
   140014c80:	mov    rbx,QWORD PTR [rsp+0x30]
   140014c85:	add    rsp,0x20
   140014c89:	pop    rdi
   140014c8a:	ret    
   140014c8b:	int3   
   140014c8c:	mov    rax,rsp
   140014c8f:	mov    QWORD PTR [rax+0x8],rbx
   140014c93:	push   rbp
   140014c94:	push   rsi
   140014c95:	push   rdi
   140014c96:	push   r12
   140014c98:	push   r13
   140014c9a:	push   r14
   140014c9c:	push   r15
   140014c9e:	lea    rbp,[rax-0x5f]
   140014ca2:	sub    rsp,0xf0
   140014ca9:	mov    ebx,DWORD PTR [rsp+0x48]
   140014cad:	and    QWORD PTR [rsp+0x40],0x0
   140014cb3:	movaps XMMWORD PTR [rax-0x48],xmm6
   140014cb7:	and    ebx,0xffff0000
   140014cbd:	movaps XMMWORD PTR [rax-0x58],xmm7
   140014cc1:	mov    r12,rdx
   140014cc4:	mov    DWORD PTR [rsp+0x48],ebx
   140014cc8:	mov    rdi,rcx
   140014ccb:	call   0x140019efc
   140014cd0:	cmp    QWORD PTR [r12],0x0
   140014cd5:	mov    esi,eax
   140014cd7:	je     0x140014ced
   140014cd9:	test   DWORD PTR [r12+0x8],0x200
   140014ce2:	je     0x140014ced
   140014ce4:	mov    DWORD PTR [rbp+0x7f],0x1
   140014ceb:	jmp    0x140014cf1
   140014ced:	and    DWORD PTR [rbp+0x7f],0x0
   140014cf1:	cmp    eax,0xffff
   140014cf6:	jne    0x140014d0a
   140014cf8:	mov    edx,0x2
   140014cfd:	mov    rcx,rdi
   140014d00:	call   0x1400140e4
   140014d05:	jmp    0x1400159e8
   140014d0a:	cmp    eax,0xfffe
   140014d0f:	jne    0x140014d37
   140014d11:	lea    rcx,[rsp+0x30]
   140014d16:	mov    edx,0x1
   140014d1b:	call   0x1400140e4
   140014d20:	mov    rdx,r12
   140014d23:	mov    rcx,rdi
   140014d26:	movups xmm0,XMMWORD PTR [rax]
   140014d29:	movdqu XMMWORD PTR [rdi],xmm0
   140014d2d:	call   0x140014910
   140014d32:	jmp    0x1400159e8
   140014d37:	cmp    eax,0xfffd
   140014d3c:	jne    0x140014d4c
   140014d3e:	movups xmm0,XMMWORD PTR [r12]
   140014d43:	movdqu XMMWORD PTR [rdi],xmm0
   140014d47:	jmp    0x1400159e8
   140014d4c:	mov    r15d,eax
   140014d4f:	mov    r9d,0x1000
   140014d55:	mov    r8d,0x1b00
   140014d5b:	and    r15d,0x8000
   140014d62:	je     0x140015587
   140014d68:	xor    r13d,r13d
   140014d6b:	mov    edx,eax
   140014d6d:	mov    r14d,esi
   140014d70:	and    edx,0x1800
   140014d76:	cmp    edx,0x800
   140014d7c:	mov    DWORD PTR [rbp+0x6f],edx
   140014d7f:	sete   r13b
   140014d83:	and    eax,0x400
   140014d88:	and    r14d,r9d
   140014d8b:	mov    DWORD PTR [rbp+0x77],eax
   140014d8e:	test   r13d,r13d
   140014d91:	mov    eax,r14d
   140014d94:	mov    ecx,DWORD PTR [rbp+0x77]
   140014d97:	mov    DWORD PTR [rbp-0x45],r13d
   140014d9b:	mov    DWORD PTR [rbp-0x49],r14d
   140014d9f:	cmovne eax,ecx
   140014da2:	test   eax,eax
   140014da4:	je     0x140014db4
   140014da6:	mov    eax,esi
   140014da8:	and    eax,r8d
   140014dab:	cmp    eax,r9d
   140014dae:	je     0x140015587
   140014db4:	test   r13d,r13d
   140014db7:	mov    eax,r14d
   140014dba:	cmovne eax,ecx
   140014dbd:	test   eax,eax
   140014dbf:	je     0x140014ddc
   140014dc1:	mov    eax,esi
   140014dc3:	and    eax,r8d
   140014dc6:	cmp    eax,0x1100
   140014dcb:	je     0x140015587
   140014dd1:	cmp    eax,0x1200
   140014dd6:	je     0x140015587
   140014ddc:	bt     esi,0xe
   140014de0:	jae    0x140014e41
   140014de2:	mov    ecx,DWORD PTR [rip+0x2a0ec]        # 0x14003eed4
   140014de8:	mov    eax,ecx
   140014dea:	shr    eax,1
   140014dec:	not    eax
   140014dee:	test   al,0x1
   140014df0:	je     0x140014ec0
   140014df6:	shr    ecx,0x3
   140014df9:	not    ecx
   140014dfb:	test   cl,0x1
   140014dfe:	je     0x140014ec0
   140014e04:	lea    rcx,[rsp+0x30]
   140014e09:	call   0x140016034
   140014e0e:	lea    rcx,[rbp-0x59]
   140014e12:	mov    dl,0x20
   140014e14:	mov    rbx,rax
   140014e17:	call   0x140013fdc
   140014e1c:	lea    rcx,[rbp-0x79]
   140014e20:	mov    rdx,rbx
   140014e23:	movups xmm0,XMMWORD PTR [rax]
   140014e26:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140014e2b:	call   0x140014910
   140014e30:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140014e34:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140014e3a:	mov    ebx,DWORD PTR [rsp+0x48]
   140014e3e:	mov    edx,DWORD PTR [rbp+0x6f]
   140014e41:	test   r13d,r13d
   140014e44:	cmovne r14d,DWORD PTR [rbp+0x77]
   140014e49:	test   r14d,r14d
   140014e4c:	je     0x14001500d
   140014e52:	cmp    edx,0x1800
   140014e58:	jne    0x14001500d
   140014e5e:	lea    rcx,[rsp+0x30]
   140014e63:	xor    edx,edx
   140014e65:	call   0x1400170b4
   140014e6a:	lea    rcx,[rbp-0x79]
   140014e6e:	mov    dl,0x7b
   140014e70:	movups xmm0,XMMWORD PTR [r12]
   140014e75:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140014e7a:	call   0x140014950
   140014e7f:	lea    rdx,[rsp+0x30]
   140014e84:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140014e88:	lea    rcx,[rbp-0x79]
   140014e8c:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140014e91:	call   0x140014910
   140014e96:	lea    rdx,[rbp-0x79]
   140014e9a:	lea    rcx,[rsp+0x40]
   140014e9f:	call   0x140014910
   140014ea4:	mov    rax,QWORD PTR [rip+0x2a00d]        # 0x14003eeb8
   140014eab:	lea    rcx,[rbp-0x39]
   140014eaf:	cmp    BYTE PTR [rax],0x0
   140014eb2:	je     0x140014f0f
   140014eb4:	cmp    BYTE PTR [rax],0x41
   140014eb7:	je     0x140014ef7
   140014eb9:	mov    edx,0x2
   140014ebe:	jmp    0x140014f14
   140014ec0:	lea    rcx,[rsp+0x30]
   140014ec5:	call   0x140016034
   140014eca:	cmp    BYTE PTR [rsp+0x48],0x3
   140014ecf:	je     0x140014e3e
   140014ed5:	cmp    BYTE PTR [rax+0x8],0x1
   140014ed9:	mov    edx,DWORD PTR [rbp+0x6f]
   140014edc:	jle    0x140014e41
   140014ee2:	movzx  eax,BYTE PTR [rax+0x8]
   140014ee6:	and    ebx,0xffffff00
   140014eec:	or     ebx,eax
   140014eee:	mov    DWORD PTR [rsp+0x48],ebx
   140014ef2:	jmp    0x140014e41
   140014ef7:	inc    rax
   140014efa:	lea    rdx,[rip+0x1f153]        # 0x140034054
   140014f01:	mov    QWORD PTR [rip+0x29fb0],rax        # 0x14003eeb8
   140014f08:	call   0x14001409c
   140014f0d:	jmp    0x140014f19
   140014f0f:	mov    edx,0x1
   140014f14:	call   0x1400140e4
   140014f19:	mov    ebx,0x1000
   140014f1e:	test   DWORD PTR [rip+0x29fb0],ebx        # 0x14003eed4
   140014f24:	jne    0x140014f6e
   140014f26:	lea    rcx,[rsp+0x30]
   140014f2b:	mov    dl,0x2c
   140014f2d:	call   0x140013fdc
   140014f32:	lea    rdx,[rbp-0x39]
   140014f36:	lea    rcx,[rbp-0x79]
   140014f3a:	movups xmm0,XMMWORD PTR [rax]
   140014f3d:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140014f42:	call   0x140014910
   140014f47:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140014f4b:	lea    rdx,[rip+0x1edfe]        # 0x140033d50
   140014f52:	lea    rcx,[rbp-0x79]
   140014f56:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140014f5b:	call   0x140014a6c
   140014f60:	lea    rdx,[rbp-0x79]
   140014f64:	lea    rcx,[rsp+0x40]
   140014f69:	call   0x140014910
   140014f6e:	lea    rdx,[rip+0x1eddf]        # 0x140033d54
   140014f75:	lea    rcx,[rsp+0x40]
   140014f7a:	call   0x140014a6c
   140014f7f:	lea    rcx,[rsp+0x30]
   140014f84:	call   0x140016520
   140014f89:	mov    ecx,DWORD PTR [rip+0x29f45]        # 0x14003eed4
   140014f8f:	mov    eax,ecx
   140014f91:	shr    eax,1
   140014f93:	not    eax
   140014f95:	test   al,0x1
   140014f97:	je     0x140015579
   140014f9d:	mov    eax,ecx
   140014f9f:	shr    eax,0x4
   140014fa2:	not    eax
   140014fa4:	test   al,0x1
   140014fa6:	je     0x140015579
   140014fac:	test   ebx,ecx
   140014fae:	jne    0x140015579
   140014fb4:	lea    rcx,[rbp-0x59]
   140014fb8:	mov    dl,0x20
   140014fba:	call   0x140013fdc
   140014fbf:	lea    rdx,[rsp+0x30]
   140014fc4:	lea    rcx,[rbp-0x79]
   140014fc8:	movups xmm0,XMMWORD PTR [rax]
   140014fcb:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140014fd0:	call   0x140014910
   140014fd5:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140014fd9:	lea    rcx,[rbp-0x79]
   140014fdd:	mov    dl,0x20
   140014fdf:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140014fe4:	call   0x140014950
   140014fe9:	lea    rdx,[rsp+0x40]
   140014fee:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140014ff2:	lea    rcx,[rbp-0x79]
   140014ff6:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140014ffb:	call   0x140014910
   140015000:	movaps xmm6,XMMWORD PTR [rbp-0x79]
   140015004:	mov    r12d,DWORD PTR [rbp+0x6f]
   140015008:	jmp    0x1400157f2
   14001500d:	mov    r14d,DWORD PTR [rbp-0x21]
   140015011:	and    QWORD PTR [rbp-0x9],0x0
   140015016:	and    QWORD PTR [rbp-0x39],0x0
   14001501b:	and    QWORD PTR [rbp-0x19],0x0
   140015020:	and    QWORD PTR [rbp-0x59],0x0
   140015025:	and    QWORD PTR [rbp-0x29],0x0
   14001502a:	mov    eax,DWORD PTR [rbp-0x49]
   14001502d:	mov    edx,0xffff0000
   140015032:	and    DWORD PTR [rbp-0x1],edx
   140015035:	and    DWORD PTR [rbp-0x31],edx
   140015038:	and    DWORD PTR [rbp-0x11],edx
   14001503b:	and    DWORD PTR [rbp-0x51],edx
   14001503e:	and    r14d,edx
   140015041:	test   r13d,r13d
   140015044:	cmovne eax,DWORD PTR [rbp+0x77]
   140015048:	mov    DWORD PTR [rbp-0x21],r14d
   14001504c:	test   eax,eax
   14001504e:	je     0x1400150d6
   140015054:	test   r13d,r13d
   140015057:	je     0x1400150be
   140015059:	mov    eax,esi
   14001505b:	and    eax,0x700
   140015060:	cmp    eax,0x600
   140015065:	jne    0x140015095
   140015067:	lea    rcx,[rsp+0x30]
   14001506c:	mov    dl,0x1
   14001506e:	call   0x1400170b4
   140015073:	lea    rcx,[rsp+0x30]
   140015078:	mov    dl,0x1
   14001507a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001507f:	movdqa XMMWORD PTR [rbp-0x9],xmm0
   140015084:	call   0x1400170b4
   140015089:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001508e:	movdqa XMMWORD PTR [rbp-0x39],xmm0
   140015093:	jmp    0x1400150a8
   140015095:	test   r13d,r13d
   140015098:	je     0x1400150be
   14001509a:	mov    eax,esi
   14001509c:	and    eax,0x700
   1400150a1:	cmp    eax,0x500
   1400150a6:	jne    0x1400150be
   1400150a8:	lea    rcx,[rsp+0x30]
   1400150ad:	mov    dl,0x1
   1400150af:	call   0x1400170b4
   1400150b4:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400150b9:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   1400150be:	lea    rcx,[rsp+0x30]
   1400150c3:	mov    dl,0x1
   1400150c5:	call   0x1400170b4
   1400150ca:	mov    edx,0xffff0000
   1400150cf:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   1400150d4:	jmp    0x1400150da
   1400150d6:	movaps xmm7,XMMWORD PTR [rbp-0x59]
   1400150da:	test   r13d,r13d
   1400150dd:	je     0x140015168
   1400150e3:	mov    eax,esi
   1400150e5:	and    eax,0x700
   1400150ea:	cmp    eax,0x200
   1400150ef:	je     0x140015168
   1400150f1:	mov    eax,DWORD PTR [rip+0x29ddd]        # 0x14003eed4
   1400150f7:	and    QWORD PTR [rbp-0x59],0x0
   1400150fc:	and    DWORD PTR [rbp-0x51],edx
   1400150ff:	and    QWORD PTR [rbp-0x79],0x0
   140015104:	and    DWORD PTR [rbp-0x71],edx
   140015107:	and    eax,0x60
   14001510a:	mov    DWORD PTR [rsp+0x20],0x1
   140015112:	lea    r8,[rip+0x1a96b]        # 0x14002fa84
   140015119:	lea    rcx,[rsp+0x30]
   14001511e:	cmp    al,0x60
   140015120:	je     0x14001513b
   140015122:	lea    r9,[rbp-0x59]
   140015126:	lea    rdx,[rbp-0x79]
   14001512a:	call   0x140016620
   14001512f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140015134:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140015139:	jmp    0x140015168
   14001513b:	lea    r9,[rbp-0x79]
   14001513f:	lea    rdx,[rbp-0x59]
   140015143:	call   0x140016620
   140015148:	cmp    BYTE PTR [rbp-0x21],0x3
   14001514c:	je     0x140015168
   14001514e:	cmp    BYTE PTR [rsp+0x38],0x1
   140015153:	jle    0x140015168
   140015155:	movzx  eax,BYTE PTR [rsp+0x38]
   14001515a:	and    r14d,0xffffff00
   140015161:	or     r14d,eax
   140015164:	mov    DWORD PTR [rbp-0x21],r14d
   140015168:	mov    ecx,DWORD PTR [rip+0x29d66]        # 0x14003eed4
   14001516e:	mov    eax,ecx
   140015170:	shr    eax,1
   140015172:	not    eax
   140015174:	test   al,0x1
   140015176:	je     0x1400151b0
   140015178:	shr    ecx,0x4
   14001517b:	not    ecx
   14001517d:	test   cl,0x1
   140015180:	je     0x1400151b0
   140015182:	lea    rcx,[rbp-0x79]
   140015186:	call   0x140016520
   14001518b:	lea    rdx,[rsp+0x40]
   140015190:	lea    rcx,[rsp+0x30]
   140015195:	movups xmm0,XMMWORD PTR [rax]
   140015198:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001519e:	call   0x140014910
   1400151a3:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400151a8:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400151ae:	jmp    0x1400151d7
   1400151b0:	lea    rcx,[rsp+0x30]
   1400151b5:	call   0x140016520
   1400151ba:	cmp    BYTE PTR [rsp+0x48],0x3
   1400151bf:	je     0x1400151d7
   1400151c1:	cmp    BYTE PTR [rax+0x8],0x1
   1400151c5:	jle    0x1400151d7
   1400151c7:	movzx  eax,BYTE PTR [rax+0x8]
   1400151cb:	and    ebx,0xffffff00
   1400151d1:	or     ebx,eax
   1400151d3:	mov    DWORD PTR [rsp+0x48],ebx
   1400151d7:	xor    ebx,ebx
   1400151d9:	cmp    QWORD PTR [r12],rbx
   1400151dd:	je     0x14001522f
   1400151df:	cmp    QWORD PTR [rsp+0x40],rbx
   1400151e4:	je     0x140015224
   1400151e6:	test   DWORD PTR [rip+0x29ce4],0x1000        # 0x14003eed4
   1400151f0:	jne    0x140015224
   1400151f2:	lea    rcx,[rbp-0x79]
   1400151f6:	mov    dl,0x20
   1400151f8:	call   0x140013fdc
   1400151fd:	lea    rcx,[rsp+0x30]
   140015202:	mov    rdx,r12
   140015205:	movups xmm0,XMMWORD PTR [rax]
   140015208:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001520e:	call   0x140014910
   140015213:	lea    rdx,[rsp+0x30]
   140015218:	lea    rcx,[rsp+0x40]
   14001521d:	call   0x140014910
   140015222:	jmp    0x14001522f
   140015224:	movups xmm0,XMMWORD PTR [r12]
   140015229:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14001522f:	and    DWORD PTR [rbp-0x71],0xffff0000
   140015236:	mov    r12,rbx
   140015239:	mov    QWORD PTR [rbp-0x79],rbx
   14001523d:	cmp    DWORD PTR [rbp+0x7f],ebx
   140015240:	je     0x1400152a1
   140015242:	lea    rcx,[rbp-0x59]
   140015246:	xor    edx,edx
   140015248:	call   0x140018bec
   14001524d:	lea    rdx,[rip+0x1eb04]        # 0x140033d58
   140015254:	lea    rcx,[rbp-0x69]
   140015258:	mov    rbx,rax
   14001525b:	call   0x14001409c
   140015260:	lea    rcx,[rsp+0x30]
   140015265:	mov    rdx,rbx
   140015268:	movups xmm0,XMMWORD PTR [rax]
   14001526b:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140015271:	call   0x140014910
   140015276:	lea    rdx,[rsp+0x30]
   14001527b:	lea    rcx,[rsp+0x40]
   140015280:	call   0x140014910
   140015285:	test   DWORD PTR [rip+0x29c45],0x1000        # 0x14003eed4
   14001528f:	je     0x14001529b
   140015291:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140015296:	jmp    0x140014d43
   14001529b:	movaps xmm6,XMMWORD PTR [rbp-0x79]
   14001529f:	jmp    0x1400152dd
   1400152a1:	xor    r8d,r8d
   1400152a4:	lea    rcx,[rip+0x29c35]        # 0x14003eee0
   1400152ab:	lea    edx,[r8+0x10]
   1400152af:	call   0x140017e18
   1400152b4:	mov    r12,rax
   1400152b7:	test   rax,rax
   1400152ba:	je     0x1400152cb
   1400152bc:	mov    BYTE PTR [rax+0x8],bl
   1400152bf:	and    DWORD PTR [rax+0x8],0xffff00ff
   1400152c6:	mov    QWORD PTR [rax],rbx
   1400152c9:	jmp    0x1400152ce
   1400152cb:	mov    r12,rbx
   1400152ce:	lea    rcx,[rbp-0x69]
   1400152d2:	mov    rdx,r12
   1400152d5:	call   0x140018bec
   1400152da:	movups xmm6,XMMWORD PTR [rax]
   1400152dd:	mov    r14d,DWORD PTR [rbp-0x49]
   1400152e1:	test   r13d,r13d
   1400152e4:	cmovne r14d,DWORD PTR [rbp+0x77]
   1400152e9:	test   r14d,r14d
   1400152ec:	je     0x14001541d
   1400152f2:	test   r13d,r13d
   1400152f5:	je     0x1400153e6
   1400152fb:	mov    eax,esi
   1400152fd:	and    eax,0x700
   140015302:	cmp    eax,0x600
   140015307:	jne    0x140015384
   140015309:	lea    rdx,[rip+0x1ea50]        # 0x140033d60
   140015310:	lea    rcx,[rbp-0x69]
   140015314:	call   0x14001409c
   140015319:	lea    rdx,[rbp-0x9]
   14001531d:	lea    rcx,[rsp+0x30]
   140015322:	movups xmm0,XMMWORD PTR [rax]
   140015325:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001532b:	call   0x140014910
   140015330:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140015335:	lea    rcx,[rsp+0x30]
   14001533a:	mov    dl,0x2c
   14001533c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140015342:	call   0x140014950
   140015347:	lea    rdx,[rbp-0x39]
   14001534b:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140015350:	lea    rcx,[rsp+0x30]
   140015355:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001535b:	call   0x140014910
   140015360:	lea    rcx,[rsp+0x30]
   140015365:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001536a:	mov    dl,0x2c
   14001536c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140015372:	call   0x140014950
   140015377:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001537c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140015382:	jmp    0x1400153b0
   140015384:	test   r13d,r13d
   140015387:	je     0x1400153e6
   140015389:	mov    eax,esi
   14001538b:	and    eax,0x700
   140015390:	cmp    eax,0x500
   140015395:	jne    0x1400153e6
   140015397:	lea    rdx,[rip+0x1e9d2]        # 0x140033d70
   14001539e:	lea    rcx,[rbp-0x69]
   1400153a2:	call   0x14001409c
   1400153a7:	movups xmm0,XMMWORD PTR [rax]
   1400153aa:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400153b0:	lea    rdx,[rbp-0x19]
   1400153b4:	lea    rcx,[rsp+0x30]
   1400153b9:	call   0x140014910
   1400153be:	lea    rcx,[rsp+0x30]
   1400153c3:	mov    dl,0x2c
   1400153c5:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400153ca:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400153d0:	call   0x140014950
   1400153d5:	lea    rdx,[rsp+0x30]
   1400153da:	lea    rcx,[rsp+0x40]
   1400153df:	call   0x140014910
   1400153e4:	jmp    0x1400153f7
   1400153e6:	lea    rdx,[rip+0x1e993]        # 0x140033d80
   1400153ed:	lea    rcx,[rsp+0x40]
   1400153f2:	call   0x140014a6c
   1400153f7:	lea    rdx,[rip+0x1e952]        # 0x140033d50
   1400153fe:	lea    rcx,[rsp+0x30]
   140015403:	movdqa XMMWORD PTR [rsp+0x30],xmm7
   140015409:	call   0x140014a6c
   14001540e:	lea    rdx,[rsp+0x30]
   140015413:	lea    rcx,[rsp+0x40]
   140015418:	call   0x140014910
   14001541d:	lea    rcx,[rbp-0x69]
   140015421:	call   0x140015cf4
   140015426:	lea    rcx,[rbp-0x79]
   14001542a:	mov    dl,0x28
   14001542c:	mov    rbx,rax
   14001542f:	call   0x140013fdc
   140015434:	lea    rcx,[rsp+0x30]
   140015439:	mov    rdx,rbx
   14001543c:	movups xmm0,XMMWORD PTR [rax]
   14001543f:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140015445:	call   0x140014910
   14001544a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001544f:	lea    rcx,[rsp+0x30]
   140015454:	mov    dl,0x29
   140015456:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001545c:	call   0x140014950
   140015461:	lea    rdx,[rsp+0x30]
   140015466:	lea    rcx,[rsp+0x40]
   14001546b:	call   0x140014910
   140015470:	test   r13d,r13d
   140015473:	je     0x140015491
   140015475:	mov    eax,esi
   140015477:	and    eax,0x700
   14001547c:	cmp    eax,0x200
   140015481:	je     0x140015491
   140015483:	lea    rdx,[rbp-0x29]
   140015487:	lea    rcx,[rsp+0x40]
   14001548c:	call   0x140014910
   140015491:	mov    eax,DWORD PTR [rip+0x29a3d]        # 0x14003eed4
   140015497:	lea    rcx,[rbp-0x69]
   14001549b:	shr    eax,0x13
   14001549e:	not    eax
   1400154a0:	test   al,0x1
   1400154a2:	je     0x1400154b8
   1400154a4:	call   0x140018ac4
   1400154a9:	lea    rcx,[rsp+0x40]
   1400154ae:	mov    rdx,rax
   1400154b1:	call   0x140014910
   1400154b6:	jmp    0x1400154de
   1400154b8:	call   0x140018ac4
   1400154bd:	cmp    BYTE PTR [rsp+0x48],0x3
   1400154c2:	je     0x1400154de
   1400154c4:	cmp    BYTE PTR [rax+0x8],0x1
   1400154c8:	jle    0x1400154de
   1400154ca:	mov    ecx,DWORD PTR [rsp+0x48]
   1400154ce:	movzx  eax,BYTE PTR [rax+0x8]
   1400154d2:	and    ecx,0xffffff00
   1400154d8:	or     ecx,eax
   1400154da:	mov    DWORD PTR [rsp+0x48],ecx
   1400154de:	mov    eax,DWORD PTR [rip+0x299f0]        # 0x14003eed4
   1400154e4:	lea    rcx,[rbp-0x69]
   1400154e8:	shr    eax,0x8
   1400154eb:	not    eax
   1400154ed:	test   al,0x1
   1400154ef:	je     0x140015505
   1400154f1:	call   0x140019e38
   1400154f6:	lea    rcx,[rsp+0x40]
   1400154fb:	mov    rdx,rax
   1400154fe:	call   0x140014910
   140015503:	jmp    0x14001552b
   140015505:	call   0x140019e38
   14001550a:	cmp    BYTE PTR [rsp+0x48],0x3
   14001550f:	je     0x14001552b
   140015511:	cmp    BYTE PTR [rax+0x8],0x1
   140015515:	jle    0x14001552b
   140015517:	mov    ecx,DWORD PTR [rsp+0x48]
   14001551b:	movzx  eax,BYTE PTR [rax+0x8]
   14001551f:	and    ecx,0xffffff00
   140015525:	or     ecx,eax
   140015527:	mov    DWORD PTR [rsp+0x48],ecx
   14001552b:	lea    rcx,[rbp-0x69]
   14001552f:	call   0x140017210
   140015534:	cmp    BYTE PTR [rsp+0x48],0x3
   140015539:	je     0x140015555
   14001553b:	cmp    BYTE PTR [rax+0x8],0x1
   14001553f:	jle    0x140015555
   140015541:	mov    ecx,DWORD PTR [rsp+0x48]
   140015545:	movzx  eax,BYTE PTR [rax+0x8]
   140015549:	and    ecx,0xffffff00
   14001554f:	or     ecx,eax
   140015551:	mov    DWORD PTR [rsp+0x48],ecx
   140015555:	mov    eax,DWORD PTR [rip+0x29979]        # 0x14003eed4
   14001555b:	shr    eax,0x2
   14001555e:	not    eax
   140015560:	test   al,0x1
   140015562:	je     0x140015579
   140015564:	test   r12,r12
   140015567:	je     0x140015579
   140015569:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001556e:	movdqu XMMWORD PTR [r12],xmm0
   140015574:	jmp    0x140015004
   140015579:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14001557e:	mov    r12d,DWORD PTR [rbp+0x6f]
   140015582:	jmp    0x1400157f7
   140015587:	lea    rcx,[rsp+0x40]
   14001558c:	mov    rdx,r12
   14001558f:	call   0x140014910
   140015594:	mov    r8d,0x7c00
   14001559a:	test   r15d,r15d
   14001559d:	jne    0x1400155ce
   14001559f:	mov    eax,esi
   1400155a1:	and    eax,r8d
   1400155a4:	cmp    eax,0x6800
   1400155a9:	jne    0x1400155bd
   1400155ab:	lea    rdx,[rsp+0x40]
   1400155b0:	mov    rcx,rdi
   1400155b3:	call   0x14001a49c
   1400155b8:	jmp    0x1400159e8
   1400155bd:	test   r15d,r15d
   1400155c0:	jne    0x1400155ce
   1400155c2:	mov    eax,esi
   1400155c4:	and    eax,r8d
   1400155c7:	cmp    eax,0x7000
   1400155cc:	je     0x1400155ab
   1400155ce:	mov    ecx,0x6000
   1400155d3:	test   r15d,r15d
   1400155d6:	jne    0x1400156a1
   1400155dc:	mov    eax,esi
   1400155de:	and    eax,r8d
   1400155e1:	cmp    eax,ecx
   1400155e3:	jne    0x14001563d
   1400155e5:	lea    rcx,[rbp-0x79]
   1400155e9:	xor    edx,edx
   1400155eb:	call   0x1400170b4
   1400155f0:	lea    rcx,[rsp+0x30]
   1400155f5:	mov    dl,0x7b
   1400155f7:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400155fc:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140015602:	call   0x140014950
   140015607:	lea    rdx,[rbp-0x79]
   14001560b:	lea    rcx,[rsp+0x30]
   140015610:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140015615:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001561b:	call   0x140014910
   140015620:	lea    rdx,[rip+0x1e72d]        # 0x140033d54
   140015627:	mov    rcx,rdi
   14001562a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001562f:	movdqu XMMWORD PTR [rdi],xmm0
   140015633:	call   0x140014a6c
   140015638:	jmp    0x1400159e8
   14001563d:	test   r15d,r15d
   140015640:	jne    0x1400156a1
   140015642:	mov    eax,esi
   140015644:	and    eax,r8d
   140015647:	cmp    eax,r8d
   14001564a:	jne    0x1400156a1
   14001564c:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140015651:	lea    rdx,[rip+0x1ea04]        # 0x14003405c
   140015658:	mov    rcx,rdi
   14001565b:	movdqu XMMWORD PTR [rdi],xmm0
   14001565f:	call   0x140014a6c
   140015664:	lea    rcx,[rbp-0x69]
   140015668:	call   0x140018c20
   14001566d:	mov    rcx,rdi
   140015670:	mov    rdx,rax
   140015673:	call   0x140014910
   140015678:	mov    dl,0x7d
   14001567a:	mov    rcx,rdi
   14001567d:	call   0x140014950
   140015682:	mov    rax,QWORD PTR [rip+0x2982f]        # 0x14003eeb8
   140015689:	cmp    BYTE PTR [rax],0x40
   14001568c:	jne    0x1400159e8
   140015692:	inc    rax
   140015695:	mov    QWORD PTR [rip+0x2981c],rax        # 0x14003eeb8
   14001569c:	jmp    0x1400159e8
   1400156a1:	xor    r13d,r13d
   1400156a4:	mov    r12d,esi
   1400156a7:	mov    eax,esi
   1400156a9:	and    r12d,0x1800
   1400156b0:	mov    r14d,esi
   1400156b3:	mov    r9d,0x1000
   1400156b9:	cmp    r12d,0x800
   1400156c0:	mov    ebx,0x1b00
   1400156c5:	sete   r13b
   1400156c9:	test   ecx,esi
   1400156cb:	mov    ecx,0x0
   1400156d0:	sete   cl
   1400156d3:	test   r15d,r15d
   1400156d6:	cmovne ecx,r13d
   1400156da:	and    eax,0x400
   1400156df:	and    r14d,r9d
   1400156e2:	test   ecx,ecx
   1400156e4:	mov    DWORD PTR [rbp-0x45],ecx
   1400156e7:	cmovne r14d,eax
   1400156eb:	test   r14d,r14d
   1400156ee:	je     0x140015768
   1400156f0:	xor    ecx,ecx
   1400156f2:	mov    eax,esi
   1400156f4:	mov    edx,r15d
   1400156f7:	and    eax,ebx
   1400156f9:	cmp    eax,r9d
   1400156fc:	sete   cl
   1400156ff:	neg    edx
   140015701:	sbb    eax,eax
   140015703:	test   ecx,eax
   140015705:	je     0x140015710
   140015707:	lea    rdx,[rip+0x1e682]        # 0x140033d90
   14001570e:	jmp    0x14001575c
   140015710:	test   r14d,r14d
   140015713:	je     0x140015768
   140015715:	xor    ecx,ecx
   140015717:	mov    eax,esi
   140015719:	mov    edx,r15d
   14001571c:	and    eax,ebx
   14001571e:	cmp    eax,0x1100
   140015723:	sete   cl
   140015726:	neg    edx
   140015728:	sbb    eax,eax
   14001572a:	test   ecx,eax
   14001572c:	je     0x140015737
   14001572e:	lea    rdx,[rip+0x1e683]        # 0x140033db8
   140015735:	jmp    0x14001575c
   140015737:	test   r14d,r14d
   14001573a:	je     0x140015768
   14001573c:	xor    ecx,ecx
   14001573e:	mov    eax,esi
   140015740:	mov    edx,r15d
   140015743:	and    eax,ebx
   140015745:	cmp    eax,0x1200
   14001574a:	sete   cl
   14001574d:	neg    edx
   14001574f:	sbb    eax,eax
   140015751:	test   ecx,eax
   140015753:	je     0x140015768
   140015755:	lea    rdx,[rip+0x1e694]        # 0x140033df0
   14001575c:	lea    rcx,[rsp+0x40]
   140015761:	call   0x140014a6c
   140015766:	jmp    0x14001577d
   140015768:	test   r15d,r15d
   14001576b:	jne    0x14001577d
   14001576d:	mov    eax,esi
   14001576f:	and    eax,r8d
   140015772:	cmp    eax,0x7800
   140015777:	je     0x140015291
   14001577d:	test   r14d,r14d
   140015780:	je     0x1400157e1
   140015782:	xor    ecx,ecx
   140015784:	mov    edx,esi
   140015786:	mov    eax,r15d
   140015789:	and    edx,ebx
   14001578b:	cmp    edx,0x1100
   140015791:	sete   cl
   140015794:	neg    eax
   140015796:	sbb    eax,eax
   140015798:	test   ecx,eax
   14001579a:	jne    0x1400157b2
   14001579c:	xor    ecx,ecx
   14001579e:	cmp    edx,0x1200
   1400157a4:	mov    eax,r15d
   1400157a7:	sete   cl
   1400157aa:	neg    eax
   1400157ac:	sbb    eax,eax
   1400157ae:	test   ecx,eax
   1400157b0:	je     0x1400157e1
   1400157b2:	lea    rdx,[rip+0x1e59f]        # 0x140033d58
   1400157b9:	lea    rcx,[rbp-0x69]
   1400157bd:	call   0x14001409c
   1400157c2:	lea    rdx,[rsp+0x40]
   1400157c7:	lea    rcx,[rsp+0x30]
   1400157cc:	movups xmm0,XMMWORD PTR [rax]
   1400157cf:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400157d5:	call   0x140014910
   1400157da:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400157df:	jmp    0x1400157f2
   1400157e1:	lea    rdx,[rsp+0x40]
   1400157e6:	lea    rcx,[rbp-0x69]
   1400157ea:	call   0x14001773c
   1400157ef:	movups xmm6,XMMWORD PTR [rax]
   1400157f2:	movaps XMMWORD PTR [rsp+0x40],xmm6
   1400157f7:	cmp    DWORD PTR [rbp-0x45],0x0
   1400157fb:	je     0x14001596e
   140015801:	mov    eax,DWORD PTR [rip+0x296cd]        # 0x14003eed4
   140015807:	shr    eax,0x9
   14001580a:	not    eax
   14001580c:	test   al,0x1
   14001580e:	je     0x1400158c1
   140015814:	xor    ecx,ecx
   140015816:	mov    ebx,esi
   140015818:	mov    eax,0x1
   14001581d:	and    ebx,0x700
   140015823:	cmp    ebx,0x200
   140015829:	sete   cl
   14001582c:	test   r15d,r15d
   14001582f:	cmovne eax,ecx
   140015832:	test   eax,eax
   140015834:	je     0x140015868
   140015836:	lea    rdx,[rip+0x1e5e3]        # 0x140033e20
   14001583d:	lea    rcx,[rbp-0x69]
   140015841:	call   0x14001409c
   140015846:	lea    rdx,[rsp+0x40]
   14001584b:	lea    rcx,[rsp+0x30]
   140015850:	movups xmm0,XMMWORD PTR [rax]
   140015853:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140015859:	call   0x140014910
   14001585e:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140015863:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140015868:	test   r15d,r15d
   14001586b:	je     0x140015875
   14001586d:	cmp    ebx,0x100
   140015873:	je     0x14001588f
   140015875:	test   r14d,r14d
   140015878:	je     0x1400158c1
   14001587a:	lea    eax,[rbx-0x400]
   140015880:	test   eax,0xfffffcff
   140015885:	jne    0x1400158c1
   140015887:	cmp    ebx,0x700
   14001588d:	je     0x1400158c1
   14001588f:	lea    rdx,[rip+0x1e592]        # 0x140033e28
   140015896:	lea    rcx,[rbp-0x69]
   14001589a:	call   0x14001409c
   14001589f:	lea    rdx,[rsp+0x40]
   1400158a4:	lea    rcx,[rsp+0x30]
   1400158a9:	movups xmm0,XMMWORD PTR [rax]
   1400158ac:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400158b2:	call   0x140014910
   1400158b7:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400158bc:	movaps XMMWORD PTR [rsp+0x40],xmm6
   1400158c1:	mov    eax,DWORD PTR [rip+0x2960d]        # 0x14003eed4
   1400158c7:	shr    eax,0x7
   1400158ca:	not    eax
   1400158cc:	test   al,0x1
   1400158ce:	je     0x14001596e
   1400158d4:	xor    eax,eax
   1400158d6:	mov    edx,esi
   1400158d8:	and    edx,0xc0
   1400158de:	cmp    edx,0x40
   1400158e1:	sete   al
   1400158e4:	test   r15d,r15d
   1400158e7:	cmovne r13d,eax
   1400158eb:	test   r13d,r13d
   1400158ee:	je     0x1400158f9
   1400158f0:	lea    rdx,[rip+0x1e541]        # 0x140033e38
   1400158f7:	jmp    0x140015943
   1400158f9:	xor    ecx,ecx
   1400158fb:	cmp    edx,0x80
   140015901:	sete   cl
   140015904:	xor    eax,eax
   140015906:	cmp    r12d,0x1000
   14001590d:	sete   al
   140015910:	test   r15d,r15d
   140015913:	cmovne eax,ecx
   140015916:	test   eax,eax
   140015918:	je     0x140015923
   14001591a:	lea    rdx,[rip+0x1e527]        # 0x140033e48
   140015921:	jmp    0x140015943
   140015923:	xor    ecx,ecx
   140015925:	test   edx,edx
   140015927:	sete   cl
   14001592a:	xor    eax,eax
   14001592c:	test   r12d,r12d
   14001592f:	sete   al
   140015932:	test   r15d,r15d
   140015935:	cmovne eax,ecx
   140015938:	test   eax,eax
   14001593a:	je     0x14001596e
   14001593c:	lea    rdx,[rip+0x1e515]        # 0x140033e58
   140015943:	lea    rcx,[rbp-0x69]
   140015947:	call   0x14001409c
   14001594c:	lea    rdx,[rsp+0x40]
   140015951:	lea    rcx,[rsp+0x30]
   140015956:	movups xmm0,XMMWORD PTR [rax]
   140015959:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001595f:	call   0x140014910
   140015964:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140015969:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14001596e:	test   r14d,r14d
   140015971:	je     0x1400159b1
   140015973:	test   DWORD PTR [rip+0x29557],0x1000        # 0x14003eed4
   14001597d:	jne    0x1400159b1
   14001597f:	lea    rdx,[rip+0x1e4e2]        # 0x140033e68
   140015986:	lea    rcx,[rbp-0x69]
   14001598a:	call   0x14001409c
   14001598f:	lea    rdx,[rsp+0x40]
   140015994:	lea    rcx,[rsp+0x30]
   140015999:	movups xmm0,XMMWORD PTR [rax]
   14001599c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400159a2:	call   0x140014910
   1400159a7:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400159ac:	movaps XMMWORD PTR [rsp+0x40],xmm6
   1400159b1:	bt     esi,0x10
   1400159b5:	jae    0x1400159e4
   1400159b7:	lea    rdx,[rip+0x1e4ba]        # 0x140033e78
   1400159be:	lea    rcx,[rbp-0x69]
   1400159c2:	call   0x14001409c
   1400159c7:	lea    rdx,[rsp+0x40]
   1400159cc:	lea    rcx,[rsp+0x30]
   1400159d1:	movups xmm0,XMMWORD PTR [rax]
   1400159d4:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400159da:	call   0x140014910
   1400159df:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400159e4:	movdqu XMMWORD PTR [rdi],xmm6
   1400159e8:	lea    r11,[rsp+0xf0]
   1400159f0:	mov    rax,rdi
   1400159f3:	mov    rbx,QWORD PTR [r11+0x40]
   1400159f7:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400159fc:	movaps xmm7,XMMWORD PTR [r11-0x20]
   140015a01:	mov    rsp,r11
   140015a04:	pop    r15
   140015a06:	pop    r14
   140015a08:	pop    r13
   140015a0a:	pop    r12
   140015a0c:	pop    rdi
   140015a0d:	pop    rsi
   140015a0e:	pop    rbp
   140015a0f:	ret    
   140015a10:	mov    eax,DWORD PTR [rip+0x294be]        # 0x14003eed4
   140015a16:	shr    eax,0x7
   140015a19:	not    eax
   140015a1b:	and    eax,0x1
   140015a1e:	ret    
   140015a1f:	int3   
   140015a20:	mov    eax,DWORD PTR [rip+0x294ae]        # 0x14003eed4
   140015a26:	shr    eax,0x4
   140015a29:	not    eax
   140015a2b:	and    eax,0x1
   140015a2e:	ret    
   140015a2f:	int3   
   140015a30:	mov    eax,DWORD PTR [rip+0x2949e]        # 0x14003eed4
   140015a36:	shr    eax,0x3
   140015a39:	not    eax
   140015a3b:	and    eax,0x1
   140015a3e:	ret    
   140015a3f:	int3   
   140015a40:	mov    eax,DWORD PTR [rip+0x2948e]        # 0x14003eed4
   140015a46:	shr    eax,0xf
   140015a49:	not    eax
   140015a4b:	and    eax,0x1
   140015a4e:	ret    
   140015a4f:	int3   
   140015a50:	mov    eax,DWORD PTR [rip+0x2947e]        # 0x14003eed4
   140015a56:	shr    eax,0x12
   140015a59:	not    eax
   140015a5b:	and    eax,0x1
   140015a5e:	ret    
   140015a5f:	int3   
   140015a60:	mov    eax,DWORD PTR [rip+0x2946e]        # 0x14003eed4
   140015a66:	shr    eax,0x2
   140015a69:	not    eax
   140015a6b:	and    eax,0x1
   140015a6e:	ret    
   140015a6f:	int3   
   140015a70:	mov    eax,DWORD PTR [rip+0x2945e]        # 0x14003eed4
   140015a76:	shr    eax,1
   140015a78:	not    eax
   140015a7a:	and    eax,0x1
   140015a7d:	ret    
   140015a7e:	int3   
   140015a7f:	int3   
   140015a80:	mov    eax,DWORD PTR [rip+0x2944e]        # 0x14003eed4
   140015a86:	shr    eax,0x9
   140015a89:	not    eax
   140015a8b:	and    eax,0x1
   140015a8e:	ret    
   140015a8f:	int3   
   140015a90:	mov    eax,DWORD PTR [rip+0x2943e]        # 0x14003eed4
   140015a96:	and    eax,0x1000
   140015a9b:	ret    
   140015a9c:	mov    eax,DWORD PTR [rip+0x29432]        # 0x14003eed4
   140015aa2:	and    eax,0x10000
   140015aa7:	ret    
   140015aa8:	mov    QWORD PTR [rsp+0x8],rbx
   140015aad:	mov    QWORD PTR [rsp+0x10],rsi
   140015ab2:	push   rdi
   140015ab3:	sub    rsp,0x20
   140015ab7:	cmp    QWORD PTR [rcx],0x0
   140015abb:	mov    edi,r8d
   140015abe:	mov    rsi,rdx
   140015ac1:	mov    rbx,rcx
   140015ac4:	je     0x140015ad7
   140015ac6:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140015acd:	and    QWORD PTR [rcx],0x0
   140015ad1:	mov    BYTE PTR [rcx+0x8],0x3
   140015ad5:	jmp    0x140015b44
   140015ad7:	test   rdx,rdx
   140015ada:	je     0x140015b40
   140015adc:	test   r8d,r8d
   140015adf:	je     0x140015b40
   140015ae1:	mov    ecx,r8d
   140015ae4:	xor    r8d,r8d
   140015ae7:	dec    ecx
   140015ae9:	lea    rcx,[rip+0x293f0]        # 0x14003eee0
   140015af0:	je     0x140015b10
   140015af2:	lea    edx,[r8+0x18]
   140015af6:	call   0x140017e18
   140015afb:	test   rax,rax
   140015afe:	je     0x140015b30
   140015b00:	mov    r8d,edi
   140015b03:	mov    rdx,rsi
   140015b06:	mov    rcx,rax
   140015b09:	call   0x14001438c
   140015b0e:	jmp    0x140015b32
   140015b10:	mov    edx,0x10
   140015b15:	call   0x140017e18
   140015b1a:	test   rax,rax
   140015b1d:	je     0x140015b30
   140015b1f:	mov    cl,BYTE PTR [rsi]
   140015b21:	lea    rdx,[rip+0x1e568]        # 0x140034090
   140015b28:	mov    BYTE PTR [rax+0x8],cl
   140015b2b:	mov    QWORD PTR [rax],rdx
   140015b2e:	jmp    0x140015b32
   140015b30:	xor    eax,eax
   140015b32:	mov    QWORD PTR [rbx],rax
   140015b35:	test   rax,rax
   140015b38:	jne    0x140015b44
   140015b3a:	mov    BYTE PTR [rbx+0x8],0x3
   140015b3e:	jmp    0x140015b44
   140015b40:	mov    BYTE PTR [rcx+0x8],0x2
   140015b44:	mov    rbx,QWORD PTR [rsp+0x30]
   140015b49:	mov    rsi,QWORD PTR [rsp+0x38]
   140015b4e:	add    rsp,0x20
   140015b52:	pop    rdi
   140015b53:	ret    
   140015b54:	mov    eax,DWORD PTR [rip+0x2937a]        # 0x14003eed4
   140015b5a:	shr    eax,0x11
   140015b5d:	not    eax
   140015b5f:	and    eax,0x1
   140015b62:	ret    
   140015b63:	int3   
   140015b64:	mov    eax,DWORD PTR [rip+0x2936a]        # 0x14003eed4
   140015b6a:	shr    eax,0x13
   140015b6d:	not    eax
   140015b6f:	and    eax,0x1
   140015b72:	ret    
   140015b73:	int3   
   140015b74:	mov    ecx,DWORD PTR [rip+0x2935a]        # 0x14003eed4
   140015b7a:	xor    eax,eax
   140015b7c:	and    ecx,0x60
   140015b7f:	cmp    cl,0x60
   140015b82:	setne  al
   140015b85:	ret    
   140015b86:	int3   
   140015b87:	int3   
   140015b88:	mov    eax,DWORD PTR [rip+0x29346]        # 0x14003eed4
   140015b8e:	shr    eax,0x8
   140015b91:	not    eax
   140015b93:	and    eax,0x1
   140015b96:	ret    
   140015b97:	int3   
   140015b98:	mov    eax,DWORD PTR [rip+0x29336]        # 0x14003eed4
   140015b9e:	and    eax,0x2000
   140015ba3:	ret    
   140015ba4:	mov    eax,DWORD PTR [rip+0x2932a]        # 0x14003eed4
   140015baa:	not    eax
   140015bac:	and    eax,0x1
   140015baf:	ret    
   140015bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140015bb5:	mov    QWORD PTR [rsp+0x10],rsi
   140015bba:	push   rdi
   140015bbb:	sub    rsp,0x50
   140015bbf:	and    QWORD PTR [rcx],0x0
   140015bc3:	mov    BYTE PTR [rcx+0x8],0x0
   140015bc7:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140015bce:	cmp    BYTE PTR [rcx+0x8],0x0
   140015bd2:	mov    rbx,rcx
   140015bd5:	mov    esi,0x1
   140015bda:	jne    0x140015cdf
   140015be0:	mov    rax,QWORD PTR [rip+0x292d1]        # 0x14003eeb8
   140015be7:	cmp    BYTE PTR [rax],0x40
   140015bea:	je     0x140015cdf
   140015bf0:	cmp    BYTE PTR [rax],0x5a
   140015bf3:	je     0x140015cdf
   140015bf9:	test   esi,esi
   140015bfb:	je     0x140015c01
   140015bfd:	xor    esi,esi
   140015bff:	jmp    0x140015c12
   140015c01:	mov    dl,0x2c
   140015c03:	mov    rcx,rbx
   140015c06:	call   0x140014950
   140015c0b:	mov    rax,QWORD PTR [rip+0x292a6]        # 0x14003eeb8
   140015c12:	cmp    BYTE PTR [rax],0x0
   140015c15:	je     0x140015cd2
   140015c1b:	movsx  r8d,BYTE PTR [rax]
   140015c1f:	sub    r8d,0x30
   140015c23:	cmp    r8d,0x9
   140015c27:	ja     0x140015c51
   140015c29:	mov    rcx,QWORD PTR [rip+0x29270]        # 0x14003eea0
   140015c30:	inc    rax
   140015c33:	lea    rdx,[rsp+0x40]
   140015c38:	mov    QWORD PTR [rip+0x29279],rax        # 0x14003eeb8
   140015c3f:	call   0x14001456c
   140015c44:	mov    rcx,rbx
   140015c47:	mov    rdx,rax
   140015c4a:	call   0x140014910
   140015c4f:	jmp    0x140015cbf
   140015c51:	and    QWORD PTR [rsp+0x20],0x0
   140015c57:	and    DWORD PTR [rsp+0x28],0xffff0000
   140015c5f:	lea    rdx,[rsp+0x20]
   140015c64:	lea    rcx,[rsp+0x30]
   140015c69:	mov    rdi,rax
   140015c6c:	call   0x140018658
   140015c71:	mov    rax,QWORD PTR [rip+0x29240]        # 0x14003eeb8
   140015c78:	sub    rax,rdi
   140015c7b:	cmp    rax,0x1
   140015c7f:	jle    0x140015c97
   140015c81:	mov    rcx,QWORD PTR [rip+0x29218]        # 0x14003eea0
   140015c88:	cmp    DWORD PTR [rcx],0x9
   140015c8b:	je     0x140015c97
   140015c8d:	lea    rdx,[rsp+0x30]
   140015c92:	call   0x140014b3c
   140015c97:	lea    rdx,[rsp+0x30]
   140015c9c:	mov    rcx,rbx
   140015c9f:	call   0x140014910
   140015ca4:	mov    rax,QWORD PTR [rip+0x2920d]        # 0x14003eeb8
   140015cab:	cmp    rax,rdi
   140015cae:	jne    0x140015cc6
   140015cb0:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140015cb7:	and    QWORD PTR [rbx],0x0
   140015cbb:	mov    BYTE PTR [rbx+0x8],0x2
   140015cbf:	mov    rax,QWORD PTR [rip+0x291f2]        # 0x14003eeb8
   140015cc6:	cmp    BYTE PTR [rbx+0x8],0x0
   140015cca:	je     0x140015be7
   140015cd0:	jmp    0x140015cdf
   140015cd2:	mov    edx,0x1
   140015cd7:	mov    rcx,rbx
   140015cda:	call   0x140014af8
   140015cdf:	mov    rsi,QWORD PTR [rsp+0x68]
   140015ce4:	mov    rax,rbx
   140015ce7:	mov    rbx,QWORD PTR [rsp+0x60]
   140015cec:	add    rsp,0x50
   140015cf0:	pop    rdi
   140015cf1:	ret    
   140015cf2:	int3   
   140015cf3:	int3   
   140015cf4:	rex push rbx
   140015cf6:	sub    rsp,0x30
   140015cfa:	mov    rax,QWORD PTR [rip+0x291b7]        # 0x14003eeb8
   140015d01:	mov    rbx,rcx
   140015d04:	cmp    BYTE PTR [rax],0x58
   140015d07:	je     0x140015dcf
   140015d0d:	cmp    BYTE PTR [rax],0x5a
   140015d10:	je     0x140015da4
   140015d16:	lea    rcx,[rsp+0x20]
   140015d1b:	call   0x140015bb0
   140015d20:	cmp    BYTE PTR [rsp+0x28],0x0
   140015d25:	jne    0x140015d8d
   140015d27:	mov    rax,QWORD PTR [rip+0x2918a]        # 0x14003eeb8
   140015d2e:	cmp    BYTE PTR [rax],0x0
   140015d31:	je     0x140015d8d
   140015d33:	cmp    BYTE PTR [rax],0x40
   140015d36:	je     0x140015d98
   140015d38:	cmp    BYTE PTR [rax],0x5a
   140015d3b:	je     0x140015d4f
   140015d3d:	mov    edx,0x2
   140015d42:	mov    rcx,rbx
   140015d45:	call   0x1400140e4
   140015d4a:	jmp    0x140015de5
   140015d4f:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140015d54:	inc    rax
   140015d57:	lea    rdx,[rip+0x1e19a]        # 0x140033ef8
   140015d5e:	mov    QWORD PTR [rip+0x29153],rax        # 0x14003eeb8
   140015d65:	mov    eax,DWORD PTR [rip+0x29169]        # 0x14003eed4
   140015d6b:	lea    rcx,[rsp+0x20]
   140015d70:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140015d76:	shr    eax,0x12
   140015d79:	not    eax
   140015d7b:	test   al,0x1
   140015d7d:	lea    rax,[rip+0x1e168]        # 0x140033eec
   140015d84:	cmovne rdx,rax
   140015d88:	call   0x140014a6c
   140015d8d:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140015d92:	movdqu XMMWORD PTR [rbx],xmm0
   140015d96:	jmp    0x140015de5
   140015d98:	inc    rax
   140015d9b:	mov    QWORD PTR [rip+0x29116],rax        # 0x14003eeb8
   140015da2:	jmp    0x140015d8d
   140015da4:	inc    rax
   140015da7:	lea    rdx,[rip+0x1e132]        # 0x140033ee0
   140015dae:	mov    QWORD PTR [rip+0x29103],rax        # 0x14003eeb8
   140015db5:	mov    eax,DWORD PTR [rip+0x29119]        # 0x14003eed4
   140015dbb:	shr    eax,0x12
   140015dbe:	not    eax
   140015dc0:	test   al,0x1
   140015dc2:	lea    rax,[rip+0x1df7b]        # 0x140033d44
   140015dc9:	cmovne rdx,rax
   140015dcd:	jmp    0x140015de0
   140015dcf:	inc    rax
   140015dd2:	lea    rdx,[rip+0x1df4f]        # 0x140033d28
   140015dd9:	mov    QWORD PTR [rip+0x290d8],rax        # 0x14003eeb8
   140015de0:	call   0x14001409c
   140015de5:	mov    rax,rbx
   140015de8:	add    rsp,0x30
   140015dec:	pop    rbx
   140015ded:	ret    
   140015dee:	int3   
   140015def:	int3   
   140015df0:	mov    QWORD PTR [rsp+0x8],rbx
   140015df5:	mov    QWORD PTR [rsp+0x10],rsi
   140015dfa:	mov    QWORD PTR [rsp+0x18],rdi
   140015dff:	push   rbp
   140015e00:	push   r14
   140015e02:	push   r15
   140015e04:	mov    rbp,rsp
   140015e07:	sub    rsp,0x80
   140015e0e:	mov    rax,QWORD PTR [rip+0x290a3]        # 0x14003eeb8
   140015e15:	xor    r15d,r15d
   140015e18:	mov    rsi,rdx
   140015e1b:	mov    r14,rcx
   140015e1e:	cmp    BYTE PTR [rax],r15b
   140015e21:	je     0x140015f8c
   140015e27:	call   0x140017ec8
   140015e2c:	test   eax,eax
   140015e2e:	mov    edi,eax
   140015e30:	cmovs  edi,r15d
   140015e34:	test   edi,edi
   140015e36:	jne    0x140015e74
   140015e38:	lea    rcx,[rbp-0x30]
   140015e3c:	mov    dl,0x5b
   140015e3e:	call   0x140013fdc
   140015e43:	lea    edx,[rdi+0x1]
   140015e46:	lea    rcx,[rbp-0x50]
   140015e4a:	movups xmm0,XMMWORD PTR [rax]
   140015e4d:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   140015e52:	call   0x140014af8
   140015e57:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   140015e5b:	lea    rcx,[rbp-0x60]
   140015e5f:	mov    dl,0x5d
   140015e61:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   140015e66:	call   0x140014950
   140015e6b:	lea    rdx,[rbp-0x60]
   140015e6f:	jmp    0x140016009
   140015e74:	and    DWORD PTR [rbp-0x58],0xffff0000
   140015e7b:	test   DWORD PTR [rsi+0x8],0x800
   140015e82:	mov    QWORD PTR [rbp-0x60],r15
   140015e86:	je     0x140015efc
   140015e88:	lea    rdx,[rip+0x1d8b9]        # 0x140033748
   140015e8f:	lea    rcx,[rbp-0x60]
   140015e93:	call   0x140014a6c
   140015e98:	jmp    0x140015efc
   140015e9a:	mov    eax,edi
   140015e9c:	dec    edi
   140015e9e:	test   eax,eax
   140015ea0:	je     0x140015f02
   140015ea2:	mov    rax,QWORD PTR [rip+0x2900f]        # 0x14003eeb8
   140015ea9:	cmp    BYTE PTR [rax],r15b
   140015eac:	je     0x140015f02
   140015eae:	lea    rcx,[rbp-0x20]
   140015eb2:	xor    edx,edx
   140015eb4:	call   0x1400170b4
   140015eb9:	lea    rcx,[rbp-0x10]
   140015ebd:	mov    dl,0x5b
   140015ebf:	mov    rbx,rax
   140015ec2:	call   0x140013fdc
   140015ec7:	lea    rcx,[rbp-0x40]
   140015ecb:	mov    rdx,rbx
   140015ece:	movups xmm0,XMMWORD PTR [rax]
   140015ed1:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140015ed6:	call   0x140014910
   140015edb:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140015edf:	lea    rcx,[rbp-0x30]
   140015ee3:	mov    dl,0x5d
   140015ee5:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140015eea:	call   0x140014950
   140015eef:	lea    rdx,[rbp-0x30]
   140015ef3:	lea    rcx,[rbp-0x60]
   140015ef7:	call   0x140014910
   140015efc:	cmp    BYTE PTR [rbp-0x58],0x1
   140015f00:	jle    0x140015e9a
   140015f02:	cmp    QWORD PTR [rsi],r15
   140015f05:	je     0x140015f6c
   140015f07:	test   DWORD PTR [rsi+0x8],0x800
   140015f0e:	je     0x140015f1a
   140015f10:	movups xmm0,XMMWORD PTR [rsi]
   140015f13:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140015f18:	jmp    0x140015f56
   140015f1a:	lea    rcx,[rbp-0x10]
   140015f1e:	mov    dl,0x28
   140015f20:	call   0x140013fdc
   140015f25:	lea    rcx,[rbp-0x30]
   140015f29:	mov    rdx,rsi
   140015f2c:	movups xmm0,XMMWORD PTR [rax]
   140015f2f:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140015f34:	call   0x140014910
   140015f39:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015f3d:	lea    rcx,[rbp-0x30]
   140015f41:	mov    dl,0x29
   140015f43:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140015f48:	call   0x140014950
   140015f4d:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015f51:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140015f56:	lea    rdx,[rbp-0x60]
   140015f5a:	lea    rcx,[rbp-0x30]
   140015f5e:	call   0x140014910
   140015f63:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015f67:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   140015f6c:	lea    rdx,[rbp-0x60]
   140015f70:	lea    rcx,[rbp-0x50]
   140015f74:	call   0x140018658
   140015f79:	bts    DWORD PTR [rbp-0x48],0xb
   140015f7e:	movups xmm0,XMMWORD PTR [rbp-0x50]
   140015f82:	movdqu XMMWORD PTR [r14],xmm0
   140015f87:	jmp    0x140016011
   140015f8c:	lea    rcx,[rbp-0x10]
   140015f90:	cmp    QWORD PTR [rdx],r15
   140015f93:	je     0x140015fd4
   140015f95:	mov    dl,0x28
   140015f97:	call   0x140013fdc
   140015f9c:	lea    rcx,[rbp-0x30]
   140015fa0:	mov    rdx,rsi
   140015fa3:	movups xmm0,XMMWORD PTR [rax]
   140015fa6:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140015fab:	call   0x140014910
   140015fb0:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015fb4:	lea    rdx,[rip+0x1e095]        # 0x140034050
   140015fbb:	lea    rcx,[rbp-0x30]
   140015fbf:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140015fc4:	call   0x140014a6c
   140015fc9:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015fcd:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140015fd2:	jmp    0x140015fe3
   140015fd4:	mov    dl,0x5b
   140015fd6:	call   0x140013fdc
   140015fdb:	movups xmm0,XMMWORD PTR [rax]
   140015fde:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140015fe3:	lea    rcx,[rbp-0x30]
   140015fe7:	mov    edx,0x1
   140015fec:	call   0x140014af8
   140015ff1:	lea    rcx,[rbp-0x40]
   140015ff5:	mov    dl,0x5d
   140015ff7:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015ffb:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   140016000:	call   0x140014950
   140016005:	lea    rdx,[rbp-0x40]
   140016009:	mov    rcx,r14
   14001600c:	call   0x1400160f4
   140016011:	lea    r11,[rsp+0x80]
   140016019:	mov    rax,r14
   14001601c:	mov    rbx,QWORD PTR [r11+0x20]
   140016020:	mov    rsi,QWORD PTR [r11+0x28]
   140016024:	mov    rdi,QWORD PTR [r11+0x30]
   140016028:	mov    rsp,r11
   14001602b:	pop    r15
   14001602d:	pop    r14
   14001602f:	pop    rbp
   140016030:	ret    
   140016031:	int3   
   140016032:	int3   
   140016033:	int3   
   140016034:	rex push rbx
   140016036:	sub    rsp,0x40
   14001603a:	mov    eax,DWORD PTR [rip+0x28e94]        # 0x14003eed4
   140016040:	mov    rdx,QWORD PTR [rip+0x1d309]        # 0x140033350
   140016047:	mov    rbx,rcx
   14001604a:	not    eax
   14001604c:	test   al,0x1
   14001604e:	jne    0x140016054
   140016050:	add    rdx,0x2
   140016054:	lea    rcx,[rsp+0x20]
   140016059:	call   0x14001409c
   14001605e:	mov    rcx,QWORD PTR [rip+0x28e53]        # 0x14003eeb8
   140016065:	cmp    BYTE PTR [rcx],0x0
   140016068:	je     0x1400160bf
   14001606a:	movsx  eax,BYTE PTR [rcx]
   14001606d:	inc    rcx
   140016070:	mov    QWORD PTR [rip+0x28e41],rcx        # 0x14003eeb8
   140016077:	cmp    eax,0x30
   14001607a:	je     0x1400160ac
   14001607c:	cmp    eax,0x32
   14001607f:	je     0x140016093
   140016081:	cmp    eax,0x35
   140016084:	jne    0x1400160ce
   140016086:	lea    edx,[rax-0x33]
   140016089:	mov    rcx,rbx
   14001608c:	call   0x1400140e4
   140016091:	jmp    0x1400160e8
   140016093:	lea    rcx,[rsp+0x30]
   140016098:	call   0x140019114
   14001609d:	lea    rcx,[rsp+0x20]
   1400160a2:	mov    rdx,rax
   1400160a5:	call   0x140014910
   1400160aa:	jmp    0x1400160ce
   1400160ac:	lea    rdx,[rip+0x1dc75]        # 0x140033d28
   1400160b3:	lea    rcx,[rsp+0x20]
   1400160b8:	call   0x140014a6c
   1400160bd:	jmp    0x1400160ce
   1400160bf:	lea    rcx,[rsp+0x20]
   1400160c4:	mov    edx,0x1
   1400160c9:	call   0x140014af8
   1400160ce:	lea    rdx,[rip+0x1ddaf]        # 0x140033e84
   1400160d5:	lea    rcx,[rsp+0x20]
   1400160da:	call   0x140014a6c
   1400160df:	movups xmm0,XMMWORD PTR [rsp+0x20]
   1400160e4:	movdqu XMMWORD PTR [rbx],xmm0
   1400160e8:	mov    rax,rbx
   1400160eb:	add    rsp,0x40
   1400160ef:	pop    rbx
   1400160f0:	ret    
   1400160f1:	int3   
   1400160f2:	int3   
   1400160f3:	int3   
   1400160f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400160f9:	push   rbp
   1400160fa:	push   rsi
   1400160fb:	push   rdi
   1400160fc:	mov    rbp,rsp
   1400160ff:	sub    rsp,0x70
   140016103:	mov    rdi,rcx
   140016106:	mov    rcx,QWORD PTR [rip+0x28dab]        # 0x14003eeb8
   14001610d:	mov    rsi,rdx
   140016110:	mov    al,BYTE PTR [rcx]
   140016112:	mov    BYTE PTR [rbp+0x38],al
   140016115:	test   al,al
   140016117:	je     0x1400164d1
   14001611d:	and    QWORD PTR [rbp-0x50],0x0
   140016122:	and    DWORD PTR [rbp-0x48],0xffff0000
   140016129:	inc    rcx
   14001612c:	movzx  eax,al
   14001612f:	or     ebx,0xffffffff
   140016132:	mov    QWORD PTR [rip+0x28d7f],rcx        # 0x14003eeb8
   140016139:	mov    BYTE PTR [rbp+0x30],0x0
   14001613d:	cmp    eax,0x4e
   140016140:	jg     0x1400161a7
   140016142:	je     0x1400163c2
   140016148:	cmp    eax,0x43
   14001614b:	jl     0x140016389
   140016151:	cmp    eax,0x45
   140016154:	jle    0x14001619e
   140016156:	cmp    eax,0x47
   140016159:	jle    0x140016195
   14001615b:	cmp    eax,0x49
   14001615e:	jle    0x14001618c
   140016160:	cmp    eax,0x4b
   140016163:	jle    0x140016183
   140016165:	cmp    eax,0x4d
   140016168:	jne    0x140016389
   14001616e:	lea    rdx,[rip+0x1ddc3]        # 0x140033f38
   140016175:	lea    rcx,[rbp-0x50]
   140016179:	call   0x1400144f0
   14001617e:	jmp    0x1400163db
   140016183:	lea    rdx,[rip+0x1dda6]        # 0x140033f30
   14001618a:	jmp    0x140016175
   14001618c:	lea    rdx,[rip+0x1dd99]        # 0x140033f2c
   140016193:	jmp    0x140016175
   140016195:	lea    rdx,[rip+0x1dd88]        # 0x140033f24
   14001619c:	jmp    0x140016175
   14001619e:	lea    rdx,[rip+0x1dd77]        # 0x140033f1c
   1400161a5:	jmp    0x140016175
   1400161a7:	cmp    eax,0x4f
   1400161aa:	je     0x1400163b2
   1400161b0:	jle    0x140016389
   1400161b6:	cmp    eax,0x53
   1400161b9:	jle    0x140016382
   1400161bf:	cmp    eax,0x58
   1400161c2:	je     0x140016376
   1400161c8:	cmp    eax,0x5f
   1400161cb:	jne    0x140016389
   1400161d1:	movzx  ebx,BYTE PTR [rcx]
   1400161d4:	inc    rcx
   1400161d7:	mov    eax,ebx
   1400161d9:	mov    QWORD PTR [rip+0x28cd8],rcx        # 0x14003eeb8
   1400161e0:	cmp    ebx,0x4d
   1400161e3:	jg     0x140016295
   1400161e9:	cmp    eax,0x4c
   1400161ec:	jge    0x14001628c
   1400161f2:	cmp    eax,0x47
   1400161f5:	jg     0x140016270
   1400161f7:	cmp    eax,0x46
   1400161fa:	jge    0x140016267
   1400161fc:	test   eax,eax
   1400161fe:	je     0x14001624a
   140016200:	cmp    eax,0x24
   140016203:	je     0x140016226
   140016205:	add    eax,0xffffffbc
   140016208:	cmp    eax,0x1
   14001620b:	ja     0x1400162e6
   140016211:	lea    rdx,[rip+0x1dd38]        # 0x140033f50
   140016218:	lea    rcx,[rbp-0x50]
   14001621c:	call   0x1400144f0
   140016221:	jmp    0x1400163de
   140016226:	lea    rcx,[rbp-0x30]
   14001622a:	call   0x1400160f4
   14001622f:	lea    rdx,[rip+0x1dd62]        # 0x140033f98
   140016236:	lea    rcx,[rbp-0x40]
   14001623a:	mov    rbx,rax
   14001623d:	call   0x14001409c
   140016242:	mov    rdx,rbx
   140016245:	jmp    0x1400164e2
   14001624a:	dec    rcx
   14001624d:	mov    edx,0x1
   140016252:	mov    QWORD PTR [rip+0x28c5f],rcx        # 0x14003eeb8
   140016259:	lea    rcx,[rbp-0x50]
   14001625d:	call   0x140014530
   140016262:	jmp    0x1400163de
   140016267:	lea    rdx,[rip+0x1dcea]        # 0x140033f58
   14001626e:	jmp    0x140016218
   140016270:	cmp    eax,0x49
   140016273:	jle    0x140016283
   140016275:	cmp    eax,0x4b
   140016278:	jg     0x1400162e6
   14001627a:	lea    rdx,[rip+0x1dce7]        # 0x140033f68
   140016281:	jmp    0x140016218
   140016283:	lea    rdx,[rip+0x1dcd6]        # 0x140033f60
   14001628a:	jmp    0x140016218
   14001628c:	lea    rdx,[rip+0x1dcdd]        # 0x140033f70
   140016293:	jmp    0x140016218
   140016295:	cmp    eax,0x4e
   140016298:	je     0x14001636a
   14001629e:	cmp    eax,0x4f
   1400162a1:	je     0x14001630a
   1400162a3:	cmp    eax,0x52
   1400162a6:	je     0x1400162fe
   1400162a8:	cmp    eax,0x57
   1400162ab:	je     0x1400162f2
   1400162ad:	add    eax,0xffffffa8
   1400162b0:	cmp    eax,0x1
   1400162b3:	ja     0x1400162e6
   1400162b5:	dec    rcx
   1400162b8:	mov    QWORD PTR [rip+0x28bf9],rcx        # 0x14003eeb8
   1400162bf:	lea    rcx,[rbp-0x20]
   1400162c3:	call   0x140017290
   1400162c8:	movups xmm0,XMMWORD PTR [rax]
   1400162cb:	movq   rax,xmm0
   1400162d0:	movaps XMMWORD PTR [rbp-0x50],xmm0
   1400162d4:	test   rax,rax
   1400162d7:	jne    0x1400163de
   1400162dd:	movdqu XMMWORD PTR [rdi],xmm0
   1400162e1:	jmp    0x1400164f1
   1400162e6:	lea    rdx,[rip+0x1dcb3]        # 0x140033fa0
   1400162ed:	jmp    0x140016218
   1400162f2:	lea    rdx,[rip+0x1dc97]        # 0x140033f90
   1400162f9:	jmp    0x140016218
   1400162fe:	lea    rdx,[rip+0x1dc7b]        # 0x140033f80
   140016305:	jmp    0x140016218
   14001630a:	mov    ebx,0xfffffffe
   14001630f:	movups xmm0,XMMWORD PTR [rsi]
   140016312:	and    QWORD PTR [rbp-0x50],0x0
   140016317:	and    DWORD PTR [rbp-0x48],0xffff0000
   14001631e:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140016323:	cmp    ebx,0xfffffffe
   140016326:	jne    0x140016471
   14001632c:	lea    r9,[rip+0x19751]        # 0x14002fa84
   140016333:	lea    r8,[rbp-0x40]
   140016337:	lea    rdx,[rbp-0x50]
   14001633b:	lea    rcx,[rbp-0x30]
   14001633f:	mov    ebx,0x800
   140016344:	or     DWORD PTR [rbp-0x38],ebx
   140016347:	call   0x140018978
   14001634c:	test   DWORD PTR [rbp-0x28],ebx
   14001634f:	jne    0x140016361
   140016351:	lea    rdx,[rip+0x1d3f0]        # 0x140033748
   140016358:	lea    rcx,[rbp-0x30]
   14001635c:	call   0x140014a6c
   140016361:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140016365:	jmp    0x1400162dd
   14001636a:	lea    rdx,[rip+0x1dbd7]        # 0x140033f48
   140016371:	jmp    0x140016218
   140016376:	lea    rdx,[rip+0x1d9ab]        # 0x140033d28
   14001637d:	jmp    0x140016175
   140016382:	mov    ebx,eax
   140016384:	and    ebx,0x3
   140016387:	jmp    0x1400163d2
   140016389:	dec    rcx
   14001638c:	mov    QWORD PTR [rip+0x28b25],rcx        # 0x14003eeb8
   140016393:	lea    rcx,[rbp-0x10]
   140016397:	call   0x140017290
   14001639c:	movups xmm0,XMMWORD PTR [rax]
   14001639f:	movq   rax,xmm0
   1400163a4:	movaps XMMWORD PTR [rbp-0x50],xmm0
   1400163a8:	test   rax,rax
   1400163ab:	jne    0x1400163db
   1400163ad:	jmp    0x1400162dd
   1400163b2:	lea    rdx,[rip+0x1dae7]        # 0x140033ea0
   1400163b9:	lea    rcx,[rbp-0x50]
   1400163bd:	call   0x1400144f0
   1400163c2:	lea    rdx,[rip+0x1db77]        # 0x140033f40
   1400163c9:	lea    rcx,[rbp-0x50]
   1400163cd:	call   0x140014a6c
   1400163d2:	cmp    ebx,0xffffffff
   1400163d5:	jne    0x14001630f
   1400163db:	mov    bl,BYTE PTR [rbp+0x30]
   1400163de:	mov    cl,BYTE PTR [rbp+0x38]
   1400163e1:	cmp    cl,0x43
   1400163e4:	je     0x140016408
   1400163e6:	lea    eax,[rcx-0x45]
   1400163e9:	test   al,0xf9
   1400163eb:	je     0x1400163ff
   1400163ed:	cmp    cl,0x5f
   1400163f0:	jne    0x140016436
   1400163f2:	sub    bl,0x45
   1400163f5:	cmp    bl,0x8
   1400163f8:	ja     0x140016436
   1400163fa:	test   bl,0x1
   1400163fd:	jne    0x140016436
   1400163ff:	lea    rdx,[rip+0x1daa2]        # 0x140033ea8
   140016406:	jmp    0x14001640f
   140016408:	lea    rdx,[rip+0x1db99]        # 0x140033fa8
   14001640f:	lea    rcx,[rbp-0x10]
   140016413:	call   0x14001409c
   140016418:	lea    rdx,[rbp-0x50]
   14001641c:	lea    rcx,[rbp-0x30]
   140016420:	movups xmm0,XMMWORD PTR [rax]
   140016423:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140016428:	call   0x140014910
   14001642d:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140016431:	movdqa XMMWORD PTR [rbp-0x50],xmm0
   140016436:	cmp    QWORD PTR [rsi],0x0
   14001643a:	je     0x140016468
   14001643c:	lea    rcx,[rbp-0x10]
   140016440:	mov    dl,0x20
   140016442:	call   0x140013fdc
   140016447:	lea    rcx,[rbp-0x30]
   14001644b:	mov    rdx,rsi
   14001644e:	movups xmm0,XMMWORD PTR [rax]
   140016451:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140016456:	call   0x140014910
   14001645b:	lea    rdx,[rbp-0x30]
   14001645f:	lea    rcx,[rbp-0x50]
   140016463:	call   0x140014910
   140016468:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   14001646c:	jmp    0x1400162dd
   140016471:	cmp    QWORD PTR [rsi],0x0
   140016475:	jne    0x1400164b8
   140016477:	test   bl,0x1
   14001647a:	je     0x1400164a3
   14001647c:	lea    rdx,[rip+0x1db2d]        # 0x140033fb0
   140016483:	lea    rcx,[rbp-0x50]
   140016487:	call   0x1400144f0
   14001648c:	test   bl,0x2
   14001648f:	je     0x1400164b8
   140016491:	lea    rdx,[rip+0x1db20]        # 0x140033fb8
   140016498:	lea    rcx,[rbp-0x50]
   14001649c:	call   0x140014a6c
   1400164a1:	jmp    0x1400164b8
   1400164a3:	test   bl,0x2
   1400164a6:	je     0x1400164b8
   1400164a8:	lea    rdx,[rip+0x1da11]        # 0x140033ec0
   1400164af:	lea    rcx,[rbp-0x50]
   1400164b3:	call   0x1400144f0
   1400164b8:	lea    r9,[rip+0x1d2a1]        # 0x140033760
   1400164bf:	lea    r8,[rbp-0x40]
   1400164c3:	lea    rdx,[rbp-0x50]
   1400164c7:	mov    rcx,rdi
   1400164ca:	call   0x140018978
   1400164cf:	jmp    0x1400164f1
   1400164d1:	lea    rcx,[rbp-0x10]
   1400164d5:	mov    edx,0x1
   1400164da:	call   0x1400140e4
   1400164df:	mov    rdx,rsi
   1400164e2:	movups xmm0,XMMWORD PTR [rax]
   1400164e5:	mov    rcx,rdi
   1400164e8:	movdqu XMMWORD PTR [rdi],xmm0
   1400164ec:	call   0x140014910
   1400164f1:	mov    rax,rdi
   1400164f4:	mov    rbx,QWORD PTR [rsp+0x90]
   1400164fc:	add    rsp,0x70
   140016500:	pop    rdi
   140016501:	pop    rsi
   140016502:	pop    rbp
   140016503:	ret    
   140016504:	rex push rbx
   140016506:	sub    rsp,0x20
   14001650a:	xor    edx,edx
   14001650c:	mov    rbx,rcx
   14001650f:	call   0x1400170b4
   140016514:	mov    rax,rbx
   140016517:	add    rsp,0x20
   14001651b:	pop    rbx
   14001651c:	ret    
   14001651d:	int3   
   14001651e:	int3   
   14001651f:	int3   
   140016520:	mov    QWORD PTR [rsp+0x8],rbx
   140016525:	push   rdi
   140016526:	sub    rsp,0x30
   14001652a:	mov    rax,QWORD PTR [rip+0x28987]        # 0x14003eeb8
   140016531:	mov    rdi,rcx
   140016534:	cmp    BYTE PTR [rax],0x0
   140016537:	je     0x140016607
   14001653d:	movsx  ebx,BYTE PTR [rax]
   140016540:	inc    rax
   140016543:	mov    edx,0x2
   140016548:	sub    ebx,0x41
   14001654b:	mov    QWORD PTR [rip+0x28966],rax        # 0x14003eeb8
   140016552:	cmp    ebx,0x10
   140016555:	ja     0x14001660c
   14001655b:	lea    rcx,[rsp+0x20]
   140016560:	call   0x1400140e4
   140016565:	mov    ecx,DWORD PTR [rip+0x28969]        # 0x14003eed4
   14001656b:	mov    eax,ecx
   14001656d:	shr    eax,1
   14001656f:	not    eax
   140016571:	test   al,0x1
   140016573:	je     0x1400165fc
   140016579:	and    ebx,0xfffffffe
   14001657c:	je     0x1400165e0
   14001657e:	cmp    ebx,0x2
   140016581:	je     0x1400165d7
   140016583:	cmp    ebx,0x4
   140016586:	je     0x1400165ce
   140016588:	cmp    ebx,0x6
   14001658b:	je     0x1400165c5
   14001658d:	cmp    ebx,0x8
   140016590:	je     0x1400165bc
   140016592:	cmp    ebx,0xc
   140016595:	je     0x1400165b3
   140016597:	cmp    ebx,0xe
   14001659a:	je     0x1400165aa
   14001659c:	cmp    ebx,0x10
   14001659f:	jne    0x1400165fc
   1400165a1:	mov    rdx,QWORD PTR [rip+0x1cdd8]        # 0x140033380
   1400165a8:	jmp    0x1400165e7
   1400165aa:	mov    rdx,QWORD PTR [rip+0x1cddf]        # 0x140033390
   1400165b1:	jmp    0x1400165e7
   1400165b3:	mov    rdx,QWORD PTR [rip+0x1cdce]        # 0x140033388
   1400165ba:	jmp    0x1400165e7
   1400165bc:	mov    rdx,QWORD PTR [rip+0x1cdb5]        # 0x140033378
   1400165c3:	jmp    0x1400165e7
   1400165c5:	mov    rdx,QWORD PTR [rip+0x1cd9c]        # 0x140033368
   1400165cc:	jmp    0x1400165e7
   1400165ce:	mov    rdx,QWORD PTR [rip+0x1cd9b]        # 0x140033370
   1400165d5:	jmp    0x1400165e7
   1400165d7:	mov    rdx,QWORD PTR [rip+0x1cd82]        # 0x140033360
   1400165de:	jmp    0x1400165e7
   1400165e0:	mov    rdx,QWORD PTR [rip+0x1cd71]        # 0x140033358
   1400165e7:	not    ecx
   1400165e9:	test   cl,0x1
   1400165ec:	jne    0x1400165f2
   1400165ee:	add    rdx,0x2
   1400165f2:	lea    rcx,[rsp+0x20]
   1400165f7:	call   0x1400144f0
   1400165fc:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140016601:	movdqu XMMWORD PTR [rdi],xmm0
   140016605:	jmp    0x140016611
   140016607:	mov    edx,0x1
   14001660c:	call   0x1400140e4
   140016611:	mov    rax,rdi
   140016614:	mov    rbx,QWORD PTR [rsp+0x40]
   140016619:	add    rsp,0x30
   14001661d:	pop    rdi
   14001661e:	ret    
   14001661f:	int3   
   140016620:	mov    rax,rsp
   140016623:	mov    QWORD PTR [rax+0x8],rbx
   140016627:	mov    QWORD PTR [rax+0x10],rsi
   14001662b:	mov    QWORD PTR [rax+0x18],r8
   14001662f:	push   rbp
   140016630:	push   rdi
   140016631:	push   r12
   140016633:	push   r14
   140016635:	push   r15
   140016637:	lea    rbp,[rax-0x57]
   14001663b:	sub    rsp,0xe0
   140016642:	xor    r14d,r14d
   140016645:	movaps XMMWORD PTR [rax-0x38],xmm6
   140016649:	mov    rax,QWORD PTR [rip+0x28868]        # 0x14003eeb8
   140016650:	mov    rsi,rdx
   140016653:	mov    edx,0xffff0000
   140016658:	mov    r15,r9
   14001665b:	and    DWORD PTR [rbp-0x39],edx
   14001665e:	mov    rbx,rcx
   140016661:	mov    QWORD PTR [rbp-0x41],r14
   140016665:	mov    BYTE PTR [rsp+0x20],r14b
   14001666a:	cmp    BYTE PTR [rax],r14b
   14001666d:	je     0x140016c4e
   140016673:	cmp    BYTE PTR [rax],0x24
   140016676:	jne    0x1400166a6
   140016678:	mov    r9d,DWORD PTR [rbp+0x7f]
   14001667c:	lea    r8,[rsp+0x20]
   140016681:	lea    rdx,[rbp+0x6f]
   140016685:	lea    rcx,[rbp-0x51]
   140016689:	call   0x1400174f0
   14001668e:	cmp    QWORD PTR [rbp-0x51],r14
   140016692:	je     0x1400166a1
   140016694:	movups xmm0,XMMWORD PTR [rbp-0x51]
   140016698:	movdqu XMMWORD PTR [rbx],xmm0
   14001669c:	jmp    0x140016cf0
   1400166a1:	mov    edx,0xffff0000
   1400166a6:	mov    rax,QWORD PTR [rip+0x2880b]        # 0x14003eeb8
   1400166ad:	mov    QWORD PTR [rbp-0x71],r14
   1400166b1:	mov    QWORD PTR [rbp-0x51],r14
   1400166b5:	movsx  ecx,BYTE PTR [rax]
   1400166b8:	mov    eax,0x16
   1400166bd:	mov    r12,r14
   1400166c0:	lea    r8d,[rax+0x2b]
   1400166c4:	mov    edi,ecx
   1400166c6:	cmp    cl,r8b
   1400166c9:	cmovge eax,r8d
   1400166cd:	and    DWORD PTR [rbp-0x49],edx
   1400166d0:	sub    edi,eax
   1400166d2:	and    DWORD PTR [rbp-0x69],edx
   1400166d5:	mov    edx,DWORD PTR [rip+0x287f9]        # 0x14003eed4
   1400166db:	movaps xmm6,XMMWORD PTR [rbp-0x71]
   1400166df:	mov    eax,edi
   1400166e1:	sub    eax,0x4
   1400166e4:	je     0x1400167e1
   1400166ea:	dec    eax
   1400166ec:	je     0x140016763
   1400166ee:	cmp    eax,0x3
   1400166f1:	jne    0x1400168c7
   1400166f7:	mov    eax,edx
   1400166f9:	shr    eax,1
   1400166fb:	not    eax
   1400166fd:	test   al,0x1
   1400166ff:	je     0x140016868
   140016705:	not    edx
   140016707:	cmp    QWORD PTR [rbp-0x51],r14
   14001670b:	je     0x140016754
   14001670d:	mov    rdi,QWORD PTR [rip+0x1cc8c]        # 0x1400333a0
   140016714:	test   dl,0x1
   140016717:	jne    0x14001671d
   140016719:	add    rdi,0x2
   14001671d:	movaps xmm0,XMMWORD PTR [rbp-0x51]
   140016721:	lea    rcx,[rbp-0x11]
   140016725:	mov    dl,0x20
   140016727:	movdqa XMMWORD PTR [rbp-0x11],xmm0
   14001672c:	call   0x140014950
   140016731:	lea    rcx,[rbp-0x31]
   140016735:	movaps xmm0,XMMWORD PTR [rbp-0x11]
   140016739:	mov    rdx,rdi
   14001673c:	movdqa XMMWORD PTR [rbp-0x31],xmm0
   140016741:	call   0x140014a6c
   140016746:	movaps xmm0,XMMWORD PTR [rbp-0x31]
   14001674a:	movdqa XMMWORD PTR [rbp-0x51],xmm0
   14001674f:	jmp    0x14001685c
   140016754:	test   dl,0x1
   140016757:	mov    rdx,QWORD PTR [rip+0x1cc42]        # 0x1400333a0
   14001675e:	jmp    0x14001684d
   140016763:	mov    eax,edx
   140016765:	shr    eax,1
   140016767:	not    eax
   140016769:	test   al,0x1
   14001676b:	je     0x140016868
   140016771:	not    edx
   140016773:	test   r12,r12
   140016776:	je     0x1400167be
   140016778:	mov    rdi,QWORD PTR [rip+0x1cc29]        # 0x1400333a8
   14001677f:	test   dl,0x1
   140016782:	jne    0x140016788
   140016784:	add    rdi,0x2
   140016788:	lea    rcx,[rbp+0xf]
   14001678c:	mov    dl,0x20
   14001678e:	movdqa XMMWORD PTR [rbp+0xf],xmm6
   140016793:	call   0x140014950
   140016798:	lea    rcx,[rbp-0x1]
   14001679c:	mov    rdx,rdi
   14001679f:	movaps xmm0,XMMWORD PTR [rbp+0xf]
   1400167a3:	movdqa XMMWORD PTR [rbp-0x1],xmm0
   1400167a8:	call   0x140014a6c
   1400167ad:	movaps xmm6,XMMWORD PTR [rbp-0x1]
   1400167b1:	movaps XMMWORD PTR [rbp-0x71],xmm6
   1400167b5:	mov    r12,QWORD PTR [rbp-0x71]
   1400167b9:	jmp    0x14001685c
   1400167be:	test   dl,0x1
   1400167c1:	mov    rdx,QWORD PTR [rip+0x1cbe0]        # 0x1400333a8
   1400167c8:	jne    0x1400167ce
   1400167ca:	add    rdx,0x2
   1400167ce:	lea    rcx,[rbp-0x71]
   1400167d2:	call   0x1400144f0
   1400167d7:	mov    r12,QWORD PTR [rbp-0x71]
   1400167db:	movaps xmm6,XMMWORD PTR [rbp-0x71]
   1400167df:	jmp    0x14001685c
   1400167e1:	mov    eax,edx
   1400167e3:	shr    eax,1
   1400167e5:	not    eax
   1400167e7:	test   al,0x1
   1400167e9:	je     0x140016868
   1400167eb:	mov    eax,edx
   1400167ed:	shr    eax,0x11
   1400167f0:	not    eax
   1400167f2:	test   al,0x1
   1400167f4:	je     0x140016868
   1400167f6:	not    edx
   1400167f8:	cmp    QWORD PTR [rbp-0x51],r14
   1400167fc:	je     0x140016843
   1400167fe:	mov    rdi,QWORD PTR [rip+0x1cb93]        # 0x140033398
   140016805:	test   dl,0x1
   140016808:	jne    0x14001680e
   14001680a:	add    rdi,0x2
   14001680e:	movaps xmm0,XMMWORD PTR [rbp-0x51]
   140016812:	lea    rcx,[rbp-0x21]
   140016816:	mov    dl,0x20
   140016818:	movdqa XMMWORD PTR [rbp-0x21],xmm0
   14001681d:	call   0x140014950
   140016822:	lea    rcx,[rsp+0x30]
   140016827:	movaps xmm0,XMMWORD PTR [rbp-0x21]
   14001682b:	mov    rdx,rdi
   14001682e:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016834:	call   0x140014a6c
   140016839:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001683e:	jmp    0x14001674a
   140016843:	test   dl,0x1
   140016846:	mov    rdx,QWORD PTR [rip+0x1cb4b]        # 0x140033398
   14001684d:	jne    0x140016853
   14001684f:	add    rdx,0x2
   140016853:	lea    rcx,[rbp-0x51]
   140016857:	call   0x1400144f0
   14001685c:	mov    edx,DWORD PTR [rip+0x28672]        # 0x14003eed4
   140016862:	mov    r8d,0x41
   140016868:	mov    rax,QWORD PTR [rip+0x28649]        # 0x14003eeb8
   14001686f:	inc    rax
   140016872:	mov    QWORD PTR [rip+0x2863f],rax        # 0x14003eeb8
   140016879:	cmp    BYTE PTR [rax],0x24
   14001687c:	jne    0x1400168aa
   14001687e:	mov    r9d,DWORD PTR [rbp+0x7f]
   140016882:	lea    r8,[rsp+0x20]
   140016887:	lea    rdx,[rbp+0x6f]
   14001688b:	lea    rcx,[rbp-0x61]
   14001688f:	call   0x1400174f0
   140016894:	cmp    QWORD PTR [rbp-0x61],r14
   140016898:	jne    0x140016c45
   14001689e:	mov    edx,DWORD PTR [rip+0x28630]        # 0x14003eed4
   1400168a4:	mov    r8d,0x41
   1400168aa:	mov    rax,QWORD PTR [rip+0x28607]        # 0x14003eeb8
   1400168b1:	mov    ecx,0x16
   1400168b6:	cmp    BYTE PTR [rax],r8b
   1400168b9:	movsx  edi,BYTE PTR [rax]
   1400168bc:	cmovge ecx,r8d
   1400168c0:	sub    edi,ecx
   1400168c2:	jmp    0x1400166df
   1400168c7:	mov    rax,QWORD PTR [rip+0x285ea]        # 0x14003eeb8
   1400168ce:	cmp    BYTE PTR [rax],r14b
   1400168d1:	je     0x1400168da
   1400168d3:	inc    QWORD PTR [rip+0x285de]        # 0x14003eeb8
   1400168da:	cmp    edi,0x1f
   1400168dd:	ja     0x14001699e
   1400168e3:	mov    r14,QWORD PTR [rbp+0x6f]
   1400168e7:	lea    rcx,[rbp-0x71]
   1400168eb:	mov    rdx,r14
   1400168ee:	call   0x14001409c
   1400168f3:	lea    rdx,[rbp-0x71]
   1400168f7:	lea    rcx,[rsp+0x30]
   1400168fc:	movaps xmm0,XMMWORD PTR [rbp-0x41]
   140016900:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016906:	call   0x140014910
   14001690b:	cmp    QWORD PTR [rbp-0x51],0x0
   140016910:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016915:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   14001691a:	je     0x140016951
   14001691c:	lea    rcx,[rsp+0x30]
   140016921:	mov    dl,0x20
   140016923:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016929:	call   0x140014950
   14001692e:	lea    rdx,[rbp-0x51]
   140016932:	lea    rcx,[rsp+0x30]
   140016937:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001693c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016942:	call   0x140014910
   140016947:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001694c:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140016951:	test   r12,r12
   140016954:	je     0x14001698b
   140016956:	lea    rcx,[rsp+0x30]
   14001695b:	mov    dl,0x20
   14001695d:	movdqa XMMWORD PTR [rsp+0x30],xmm6
   140016963:	call   0x140014950
   140016968:	lea    rdx,[rbp-0x71]
   14001696c:	lea    rcx,[rsp+0x30]
   140016971:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016976:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001697c:	call   0x140014910
   140016981:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016986:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   14001698b:	xor    r12d,r12d
   14001698e:	test   dil,0x10
   140016992:	je     0x140016a87
   140016998:	cmp    DWORD PTR [rbp+0x7f],r12d
   14001699c:	je     0x1400169ab
   14001699e:	mov    edx,0x2
   1400169a3:	mov    rcx,rbx
   1400169a6:	jmp    0x140016ceb
   1400169ab:	cmp    BYTE PTR [r14],r12b
   1400169ae:	je     0x140016a25
   1400169b0:	lea    rdx,[rip+0x1d2fd]        # 0x140033cb4
   1400169b7:	lea    rcx,[rbp-0x61]
   1400169bb:	call   0x14001409c
   1400169c0:	lea    rdx,[rbp-0x71]
   1400169c4:	lea    rcx,[rsp+0x30]
   1400169c9:	movups xmm0,XMMWORD PTR [rax]
   1400169cc:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400169d2:	call   0x140014910
   1400169d7:	mov    rax,QWORD PTR [rip+0x284da]        # 0x14003eeb8
   1400169de:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400169e3:	lea    rcx,[rbp-0x61]
   1400169e7:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400169ec:	cmp    BYTE PTR [rax],r12b
   1400169ef:	je     0x1400169f8
   1400169f1:	call   0x140018c20
   1400169f6:	jmp    0x140016a02
   1400169f8:	mov    edx,0x1
   1400169fd:	call   0x1400140e4
   140016a02:	movups xmm0,XMMWORD PTR [rax]
   140016a05:	lea    rdx,[rbp-0x71]
   140016a09:	lea    rcx,[rsp+0x30]
   140016a0e:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016a14:	call   0x140014910
   140016a19:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016a1e:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140016a23:	jmp    0x140016a58
   140016a25:	mov    rax,QWORD PTR [rip+0x2848c]        # 0x14003eeb8
   140016a2c:	cmp    BYTE PTR [rax],r12b
   140016a2f:	je     0x140016a79
   140016a31:	lea    rcx,[rbp-0x61]
   140016a35:	call   0x140018c20
   140016a3a:	cmp    BYTE PTR [rbp-0x69],0x3
   140016a3e:	je     0x140016a58
   140016a40:	cmp    BYTE PTR [rax+0x8],0x1
   140016a44:	jle    0x140016a58
   140016a46:	mov    ecx,DWORD PTR [rbp-0x69]
   140016a49:	movzx  eax,BYTE PTR [rax+0x8]
   140016a4d:	and    ecx,0xffffff00
   140016a53:	or     ecx,eax
   140016a55:	mov    DWORD PTR [rbp-0x69],ecx
   140016a58:	mov    rax,QWORD PTR [rip+0x28459]        # 0x14003eeb8
   140016a5f:	mov    cl,BYTE PTR [rax]
   140016a61:	test   cl,cl
   140016a63:	je     0x140016a79
   140016a65:	inc    rax
   140016a68:	mov    QWORD PTR [rip+0x28449],rax        # 0x14003eeb8
   140016a6f:	cmp    cl,0x40
   140016a72:	je     0x140016a87
   140016a74:	jmp    0x14001699e
   140016a79:	lea    rcx,[rbp-0x71]
   140016a7d:	mov    edx,0x1
   140016a82:	call   0x140014af8
   140016a87:	mov    eax,DWORD PTR [rip+0x28447]        # 0x14003eed4
   140016a8d:	shr    eax,1
   140016a8f:	not    eax
   140016a91:	test   al,0x1
   140016a93:	mov    eax,edi
   140016a95:	je     0x140016ad4
   140016a97:	and    eax,0xc
   140016a9a:	cmp    al,0xc
   140016a9c:	jne    0x140016b02
   140016a9e:	cmp    DWORD PTR [rbp+0x7f],r12d
   140016aa2:	jne    0x14001699e
   140016aa8:	lea    rcx,[rbp-0x61]
   140016aac:	call   0x140016034
   140016ab1:	lea    rdx,[rbp-0x71]
   140016ab5:	lea    rcx,[rsp+0x30]
   140016aba:	movups xmm0,XMMWORD PTR [rax]
   140016abd:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016ac3:	call   0x140014910
   140016ac8:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016acd:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140016ad2:	jmp    0x140016b02
   140016ad4:	and    eax,0xc
   140016ad7:	cmp    al,0xc
   140016ad9:	jne    0x140016b02
   140016adb:	lea    rcx,[rbp-0x61]
   140016adf:	call   0x140016034
   140016ae4:	cmp    BYTE PTR [rbp-0x69],0x3
   140016ae8:	je     0x140016b02
   140016aea:	cmp    BYTE PTR [rax+0x8],0x1
   140016aee:	jle    0x140016b02
   140016af0:	mov    ecx,DWORD PTR [rbp-0x69]
   140016af3:	movzx  eax,BYTE PTR [rax+0x8]
   140016af7:	and    ecx,0xffffff00
   140016afd:	or     ecx,eax
   140016aff:	mov    DWORD PTR [rbp-0x69],ecx
   140016b02:	test   dil,0x2
   140016b06:	je     0x140016b39
   140016b08:	lea    rdx,[rip+0x1d509]        # 0x140034018
   140016b0f:	lea    rcx,[rbp-0x61]
   140016b13:	call   0x14001409c
   140016b18:	lea    rdx,[rbp-0x71]
   140016b1c:	lea    rcx,[rsp+0x30]
   140016b21:	movups xmm0,XMMWORD PTR [rax]
   140016b24:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016b2a:	call   0x140014910
   140016b2f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016b34:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140016b39:	test   dil,0x1
   140016b3d:	je     0x140016b70
   140016b3f:	lea    rdx,[rip+0x1d4de]        # 0x140034024
   140016b46:	lea    rcx,[rbp-0x61]
   140016b4a:	call   0x14001409c
   140016b4f:	lea    rdx,[rbp-0x71]
   140016b53:	lea    rcx,[rsp+0x30]
   140016b58:	movups xmm0,XMMWORD PTR [rax]
   140016b5b:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016b61:	call   0x140014910
   140016b66:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016b6b:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140016b70:	mov    edi,0x100
   140016b75:	cmp    DWORD PTR [rbp+0x7f],r12d
   140016b79:	jne    0x140016c2d
   140016b7f:	cmp    QWORD PTR [rsi],r12
   140016b82:	je     0x140016bf9
   140016b84:	test   DWORD PTR [rsi+0x8],edi
   140016b87:	jne    0x140016bd6
   140016b89:	cmp    QWORD PTR [r15],r12
   140016b8c:	je     0x140016bd6
   140016b8e:	lea    rcx,[rbp-0x61]
   140016b92:	mov    dl,0x20
   140016b94:	call   0x140013fdc
   140016b99:	lea    rcx,[rsp+0x30]
   140016b9e:	mov    rdx,r15
   140016ba1:	movups xmm0,XMMWORD PTR [rax]
   140016ba4:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016baa:	call   0x140014910
   140016baf:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016bb4:	lea    rcx,[rsp+0x30]
   140016bb9:	mov    dl,0x20
   140016bbb:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016bc1:	call   0x140014950
   140016bc6:	mov    rdx,rsi
   140016bc9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016bce:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016bd4:	jmp    0x140016c15
   140016bd6:	test   DWORD PTR [rsi+0x8],0x800
   140016bdd:	je     0x140016be9
   140016bdf:	movups xmm0,XMMWORD PTR [rsi]
   140016be2:	movdqu XMMWORD PTR [rbp-0x71],xmm0
   140016be7:	jmp    0x140016c2d
   140016be9:	lea    rcx,[rbp-0x61]
   140016bed:	mov    dl,0x20
   140016bef:	call   0x140013fdc
   140016bf4:	mov    rdx,rsi
   140016bf7:	jmp    0x140016c0c
   140016bf9:	cmp    QWORD PTR [r15],r12
   140016bfc:	je     0x140016c2d
   140016bfe:	lea    rcx,[rbp-0x61]
   140016c02:	mov    dl,0x20
   140016c04:	call   0x140013fdc
   140016c09:	mov    rdx,r15
   140016c0c:	movups xmm0,XMMWORD PTR [rax]
   140016c0f:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016c15:	lea    rcx,[rsp+0x30]
   140016c1a:	call   0x140014910
   140016c1f:	lea    rdx,[rsp+0x30]
   140016c24:	lea    rcx,[rbp-0x71]
   140016c28:	call   0x140014910
   140016c2d:	or     DWORD PTR [rbp-0x69],edi
   140016c30:	cmp    BYTE PTR [rsp+0x20],r12b
   140016c35:	je     0x140016c3c
   140016c37:	bts    DWORD PTR [rbp-0x69],0xd
   140016c3c:	movaps xmm0,XMMWORD PTR [rbp-0x71]
   140016c40:	jmp    0x140016698
   140016c45:	movups xmm0,XMMWORD PTR [rbp-0x61]
   140016c49:	jmp    0x140016698
   140016c4e:	cmp    DWORD PTR [rbp+0x7f],r14d
   140016c52:	jne    0x140016ce6
   140016c58:	cmp    QWORD PTR [rsi],r14
   140016c5b:	je     0x140016ccb
   140016c5d:	mov    edi,0x100
   140016c62:	test   DWORD PTR [rsi+0x8],edi
   140016c65:	jne    0x140016cb8
   140016c67:	cmp    QWORD PTR [r9],r14
   140016c6a:	je     0x140016cb8
   140016c6c:	lea    rcx,[rsp+0x30]
   140016c71:	mov    edx,0x1
   140016c76:	call   0x1400140e4
   140016c7b:	lea    rcx,[rbp-0x61]
   140016c7f:	mov    rdx,r15
   140016c82:	movups xmm0,XMMWORD PTR [rax]
   140016c85:	movdqu XMMWORD PTR [rbp-0x61],xmm0
   140016c8a:	call   0x140014910
   140016c8f:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   140016c93:	lea    rcx,[rbp-0x61]
   140016c97:	mov    dl,0x20
   140016c99:	movdqa XMMWORD PTR [rbp-0x61],xmm0
   140016c9e:	call   0x140014950
   140016ca3:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   140016ca7:	mov    rdx,rsi
   140016caa:	mov    rcx,rbx
   140016cad:	movdqu XMMWORD PTR [rbx],xmm0
   140016cb1:	call   0x140014910
   140016cb6:	jmp    0x140016cf0
   140016cb8:	lea    rcx,[rbp-0x61]
   140016cbc:	mov    edx,0x1
   140016cc1:	call   0x1400140e4
   140016cc6:	movups xmm0,XMMWORD PTR [rax]
   140016cc9:	jmp    0x140016ca7
   140016ccb:	cmp    QWORD PTR [r9],r14
   140016cce:	je     0x140016ce6
   140016cd0:	lea    rcx,[rbp-0x61]
   140016cd4:	mov    edx,0x1
   140016cd9:	call   0x1400140e4
   140016cde:	mov    rdx,r15
   140016ce1:	movups xmm0,XMMWORD PTR [rax]
   140016ce4:	jmp    0x140016caa
   140016ce6:	mov    edx,0x1
   140016ceb:	call   0x1400140e4
   140016cf0:	lea    r11,[rsp+0xe0]
   140016cf8:	mov    rax,rbx
   140016cfb:	mov    rbx,QWORD PTR [r11+0x30]
   140016cff:	mov    rsi,QWORD PTR [r11+0x38]
   140016d03:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140016d08:	mov    rsp,r11
   140016d0b:	pop    r15
   140016d0d:	pop    r14
   140016d0f:	pop    r12
   140016d11:	pop    rdi
   140016d12:	pop    rbp
   140016d13:	ret    
   140016d14:	mov    r11,rsp
   140016d17:	push   rbx
   140016d18:	sub    rsp,0x50
   140016d1c:	mov    rbx,rcx
   140016d1f:	xor    ecx,ecx
   140016d21:	mov    eax,0xffff0000
   140016d26:	mov    QWORD PTR [r11-0x28],rcx
   140016d2a:	and    DWORD PTR [rsp+0x38],eax
   140016d2e:	mov    QWORD PTR [r11-0x18],rcx
   140016d32:	and    DWORD PTR [rsp+0x48],eax
   140016d36:	mov    DWORD PTR [rsp+0x20],ecx
   140016d3a:	lea    r9,[r11-0x28]
   140016d3e:	lea    r8,[rip+0x18d3f]        # 0x14002fa84
   140016d45:	lea    rdx,[r11-0x18]
   140016d49:	mov    rcx,rbx
   140016d4c:	call   0x140016620
   140016d51:	mov    rax,rbx
   140016d54:	add    rsp,0x50
   140016d58:	pop    rbx
   140016d59:	ret    
   140016d5a:	int3   
   140016d5b:	int3   
   140016d5c:	mov    QWORD PTR [rsp+0x8],rbx
   140016d61:	push   rbp
   140016d62:	mov    rbp,rsp
   140016d65:	sub    rsp,0x60
   140016d69:	mov    rbx,rcx
   140016d6c:	lea    rcx,[rbp-0x30]
   140016d70:	call   0x140014014
   140016d75:	mov    rax,QWORD PTR [rip+0x2813c]        # 0x14003eeb8
   140016d7c:	xor    ecx,ecx
   140016d7e:	cmp    BYTE PTR [rax],cl
   140016d80:	je     0x140016e0f
   140016d86:	cmp    BYTE PTR [rax],0x3f
   140016d89:	je     0x140016dd4
   140016d8b:	cmp    BYTE PTR [rax],0x58
   140016d8e:	je     0x140016da1
   140016d90:	lea    rdx,[rbp-0x30]
   140016d94:	mov    rcx,rbx
   140016d97:	call   0x140018658
   140016d9c:	jmp    0x140016e30
   140016da1:	inc    rax
   140016da4:	mov    QWORD PTR [rip+0x2810d],rax        # 0x14003eeb8
   140016dab:	cmp    QWORD PTR [rbp-0x30],rcx
   140016daf:	jne    0x140016dc2
   140016db1:	lea    rdx,[rip+0x1cf70]        # 0x140033d28
   140016db8:	mov    rcx,rbx
   140016dbb:	call   0x14001409c
   140016dc0:	jmp    0x140016e30
   140016dc2:	lea    rdx,[rip+0x1d0eb]        # 0x140033eb4
   140016dc9:	lea    rcx,[rbp-0x20]
   140016dcd:	call   0x14001409c
   140016dd2:	jmp    0x140016e1d
   140016dd4:	and    DWORD PTR [rbp-0x18],0xffff0000
   140016ddb:	mov    QWORD PTR [rbp-0x20],rcx
   140016ddf:	mov    DWORD PTR [rsp+0x20],ecx
   140016de3:	inc    rax
   140016de6:	lea    rcx,[rbp-0x10]
   140016dea:	lea    r9,[rbp-0x20]
   140016dee:	lea    r8,[rip+0x18c8f]        # 0x14002fa84
   140016df5:	lea    rdx,[rbp-0x30]
   140016df9:	mov    QWORD PTR [rip+0x280b8],rax        # 0x14003eeb8
   140016e00:	call   0x140016620
   140016e05:	movups xmm0,XMMWORD PTR [rax]
   140016e08:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140016e0d:	jmp    0x140016d90
   140016e0f:	lea    rcx,[rbp-0x20]
   140016e13:	mov    edx,0x1
   140016e18:	call   0x1400140e4
   140016e1d:	movups xmm0,XMMWORD PTR [rax]
   140016e20:	lea    rdx,[rbp-0x30]
   140016e24:	mov    rcx,rbx
   140016e27:	movdqu XMMWORD PTR [rbx],xmm0
   140016e2b:	call   0x140014910
   140016e30:	mov    rax,rbx
   140016e33:	mov    rbx,QWORD PTR [rsp+0x70]
   140016e38:	add    rsp,0x60
   140016e3c:	pop    rbp
   140016e3d:	ret    
   140016e3e:	int3   
   140016e3f:	int3   
   140016e40:	mov    QWORD PTR [rsp+0x8],rbx
   140016e45:	mov    QWORD PTR [rsp+0x20],rsi
   140016e4a:	push   rbp
   140016e4b:	mov    rbp,rsp
   140016e4e:	sub    rsp,0x50
   140016e52:	mov    eax,DWORD PTR [rip+0x2807c]        # 0x14003eed4
   140016e58:	mov    rbx,rcx
   140016e5b:	bt     eax,0xd
   140016e5f:	jae    0x140016e8b
   140016e61:	btr    eax,0xd
   140016e65:	lea    rcx,[rbp-0x10]
   140016e69:	xor    edx,edx
   140016e6b:	mov    DWORD PTR [rip+0x28063],eax        # 0x14003eed4
   140016e71:	call   0x140016d5c
   140016e76:	bts    DWORD PTR [rip+0x28056],0xd        # 0x14003eed4
   140016e7e:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140016e82:	movdqu XMMWORD PTR [rbx],xmm0
   140016e86:	jmp    0x14001709f
   140016e8b:	mov    rax,QWORD PTR [rip+0x28026]        # 0x14003eeb8
   140016e92:	mov    dl,0x3f
   140016e94:	mov    cl,BYTE PTR [rax]
   140016e96:	cmp    cl,dl
   140016e98:	jne    0x140017089
   140016e9e:	inc    rax
   140016ea1:	mov    QWORD PTR [rip+0x28010],rax        # 0x14003eeb8
   140016ea8:	cmp    BYTE PTR [rax],dl
   140016eaa:	jne    0x140016efb
   140016eac:	inc    rax
   140016eaf:	cmp    BYTE PTR [rax],dl
   140016eb1:	jne    0x140016ed6
   140016eb3:	lea    rcx,[rbp-0x10]
   140016eb7:	call   0x140016e40
   140016ebc:	mov    rax,QWORD PTR [rip+0x27ff5]        # 0x14003eeb8
   140016ec3:	jmp    0x140016ecf
   140016ec5:	inc    rax
   140016ec8:	mov    QWORD PTR [rip+0x27fe9],rax        # 0x14003eeb8
   140016ecf:	cmp    BYTE PTR [rax],0x0
   140016ed2:	jne    0x140016ec5
   140016ed4:	jmp    0x140016e7e
   140016ed6:	cmp    BYTE PTR [rax],0x24
   140016ed9:	lea    rcx,[rbp-0x30]
   140016edd:	jne    0x140016ee8
   140016edf:	mov    dl,0x1
   140016ee1:	call   0x140019c20
   140016ee6:	jmp    0x140016f09
   140016ee8:	xor    r8d,r8d
   140016eeb:	xor    edx,edx
   140016eed:	mov    QWORD PTR [rip+0x27fc4],rax        # 0x14003eeb8
   140016ef4:	call   0x140017f3c
   140016ef9:	jmp    0x140016f09
   140016efb:	lea    rcx,[rbp-0x30]
   140016eff:	xor    r8d,r8d
   140016f02:	mov    dl,0x1
   140016f04:	call   0x14001a66c
   140016f09:	cmp    QWORD PTR [rbp-0x30],0x0
   140016f0e:	mov    esi,DWORD PTR [rbp-0x28]
   140016f11:	je     0x140016f22
   140016f13:	bt     esi,0x9
   140016f17:	jae    0x140016f22
   140016f19:	mov    DWORD PTR [rbp+0x20],0x1
   140016f20:	jmp    0x140016f26
   140016f22:	and    DWORD PTR [rbp+0x20],0x0
   140016f26:	mov    ecx,esi
   140016f28:	shr    ecx,0xf
   140016f2b:	and    ecx,0x1
   140016f2e:	cmp    BYTE PTR [rbp-0x28],0x1
   140016f32:	mov    DWORD PTR [rbp+0x18],ecx
   140016f35:	jle    0x140016f40
   140016f37:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140016f3b:	jmp    0x140016e82
   140016f40:	mov    rax,QWORD PTR [rip+0x27f71]        # 0x14003eeb8
   140016f47:	test   BYTE PTR [rax],0xbf
   140016f4a:	je     0x140016ff0
   140016f50:	lea    rcx,[rbp-0x20]
   140016f54:	call   0x140018c20
   140016f59:	cmp    QWORD PTR [rbp-0x20],0x0
   140016f5e:	je     0x140016fed
   140016f64:	cmp    BYTE PTR [rip+0x27f6d],0x0        # 0x14003eed8
   140016f6b:	lea    rcx,[rbp-0x10]
   140016f6f:	je     0x140016fb6
   140016f71:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140016f75:	lea    rdx,[rbp-0x20]
   140016f79:	mov    BYTE PTR [rip+0x27f58],0x0        # 0x14003eed8
   140016f80:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140016f85:	call   0x140014910
   140016f8a:	mov    rax,QWORD PTR [rip+0x27f27]        # 0x14003eeb8
   140016f91:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140016f95:	cmp    BYTE PTR [rax],0x40
   140016f98:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140016f9d:	je     0x140016fea
   140016f9f:	lea    rcx,[rbp-0x10]
   140016fa3:	call   0x140018c20
   140016fa8:	lea    rcx,[rbp-0x10]
   140016fac:	movups xmm0,XMMWORD PTR [rax]
   140016faf:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140016fb4:	jmp    0x140016fbf
   140016fb6:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016fba:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140016fbf:	lea    rdx,[rip+0x1ccee]        # 0x140033cb4
   140016fc6:	call   0x140014a6c
   140016fcb:	lea    rdx,[rbp-0x30]
   140016fcf:	lea    rcx,[rbp-0x10]
   140016fd3:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140016fd7:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140016fdc:	call   0x140014910
   140016fe1:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140016fe5:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140016fea:	mov    esi,DWORD PTR [rbp-0x28]
   140016fed:	mov    ecx,DWORD PTR [rbp+0x18]
   140016ff0:	mov    edx,DWORD PTR [rbp+0x20]
   140016ff3:	test   edx,edx
   140016ff5:	je     0x140017005
   140016ff7:	cmp    QWORD PTR [rbp-0x30],0x0
   140016ffc:	je     0x140017005
   140016ffe:	bts    esi,0x9
   140017002:	mov    DWORD PTR [rbp-0x28],esi
   140017005:	mov    r8d,0x8000
   14001700b:	test   ecx,ecx
   14001700d:	je     0x140017015
   14001700f:	or     esi,r8d
   140017012:	mov    DWORD PTR [rbp-0x28],esi
   140017015:	cmp    QWORD PTR [rbp-0x30],0x0
   14001701a:	je     0x140016f37
   140017020:	mov    ecx,0x1000
   140017025:	test   ecx,esi
   140017027:	jne    0x140016f37
   14001702d:	mov    rax,QWORD PTR [rip+0x27e84]        # 0x14003eeb8
   140017034:	cmp    BYTE PTR [rax],0x0
   140017037:	je     0x14001704c
   140017039:	cmp    BYTE PTR [rax],0x40
   14001703c:	je     0x140017045
   14001703e:	mov    edx,0x2
   140017043:	jmp    0x140017097
   140017045:	inc    QWORD PTR [rip+0x27e6c]        # 0x14003eeb8
   14001704c:	test   DWORD PTR [rip+0x27e82],ecx        # 0x14003eed4
   140017052:	je     0x14001707b
   140017054:	test   edx,edx
   140017056:	jne    0x14001707b
   140017058:	test   r8d,esi
   14001705b:	jne    0x14001707b
   14001705d:	and    QWORD PTR [rbp-0x20],0x0
   140017062:	and    DWORD PTR [rbp-0x18],0xffff0000
   140017069:	lea    rdx,[rbp-0x20]
   14001706d:	lea    rcx,[rbp-0x10]
   140017071:	call   0x140014c8c
   140017076:	jmp    0x140016f37
   14001707b:	lea    rdx,[rbp-0x30]
   14001707f:	mov    rcx,rbx
   140017082:	call   0x140014c8c
   140017087:	jmp    0x14001709f
   140017089:	mov    edx,0x2
   14001708e:	test   cl,cl
   140017090:	jne    0x140017097
   140017092:	mov    edx,0x1
   140017097:	mov    rcx,rbx
   14001709a:	call   0x1400140e4
   14001709f:	mov    rsi,QWORD PTR [rsp+0x78]
   1400170a4:	mov    rax,rbx
   1400170a7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400170ac:	add    rsp,0x50
   1400170b0:	pop    rbp
   1400170b1:	ret    
   1400170b2:	int3   
   1400170b3:	int3   
   1400170b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400170b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400170be:	mov    QWORD PTR [rsp+0x18],rdi
   1400170c3:	push   rbp
   1400170c4:	mov    rbp,rsp
   1400170c7:	sub    rsp,0x60
   1400170cb:	mov    r8,QWORD PTR [rip+0x27de6]        # 0x14003eeb8
   1400170d2:	xor    esi,esi
   1400170d4:	mov    r9b,dl
   1400170d7:	cmp    BYTE PTR [r8],0x51
   1400170db:	mov    rdi,rcx
   1400170de:	lea    r10d,[rsi+0x1]
   1400170e2:	jne    0x1400170f5
   1400170e4:	add    r8,r10
   1400170e7:	lea    rsi,[rip+0x1cc1a]        # 0x140033d08
   1400170ee:	mov    QWORD PTR [rip+0x27dc3],r8        # 0x14003eeb8
   1400170f5:	mov    cl,BYTE PTR [r8]
   1400170f8:	test   cl,cl
   1400170fa:	jne    0x14001710c
   1400170fc:	mov    edx,r10d
   1400170ff:	mov    rcx,rdi
   140017102:	call   0x1400140e4
   140017107:	jmp    0x1400171f7
   14001710c:	lea    eax,[rcx-0x30]
   14001710f:	cmp    al,0x9
   140017111:	ja     0x14001713d
   140017113:	add    r8,r10
   140017116:	movsx  eax,cl
   140017119:	sub    eax,0x2f
   14001711c:	mov    QWORD PTR [rip+0x27d95],r8        # 0x14003eeb8
   140017123:	movsxd rdx,eax
   140017126:	test   rsi,rsi
   140017129:	je     0x140017134
   14001712b:	lea    rcx,[rbp-0x30]
   14001712f:	jmp    0x1400171b9
   140017134:	lea    rcx,[rbp-0x10]
   140017138:	jmp    0x1400171eb
   14001713d:	xor    edx,edx
   14001713f:	mov    r11b,0x40
   140017142:	jmp    0x14001716f
   140017144:	test   cl,cl
   140017146:	je     0x1400170fc
   140017148:	lea    eax,[rcx-0x41]
   14001714b:	cmp    al,0xf
   14001714d:	ja     0x14001719b
   14001714f:	movsx  eax,cl
   140017152:	shl    rdx,0x4
   140017156:	sub    eax,0x41
   140017159:	movsxd rcx,eax
   14001715c:	add    rcx,rdx
   14001715f:	add    r8,r10
   140017162:	mov    QWORD PTR [rip+0x27d4f],r8        # 0x14003eeb8
   140017169:	mov    rdx,rcx
   14001716c:	mov    cl,BYTE PTR [r8]
   14001716f:	cmp    cl,r11b
   140017172:	jne    0x140017144
   140017174:	mov    al,BYTE PTR [r8]
   140017177:	add    r8,r10
   14001717a:	mov    QWORD PTR [rip+0x27d37],r8        # 0x14003eeb8
   140017181:	cmp    al,r11b
   140017184:	jne    0x14001719b
   140017186:	test   r9b,r9b
   140017189:	je     0x1400171b0
   14001718b:	test   rsi,rsi
   14001718e:	je     0x1400171a5
   140017190:	lea    rcx,[rbp-0x10]
   140017194:	call   0x140014148
   140017199:	jmp    0x1400171be
   14001719b:	mov    edx,0x2
   1400171a0:	jmp    0x1400170ff
   1400171a5:	lea    rcx,[rbp-0x30]
   1400171a9:	call   0x140014148
   1400171ae:	jmp    0x1400171f0
   1400171b0:	test   rsi,rsi
   1400171b3:	je     0x1400171e7
   1400171b5:	lea    rcx,[rbp-0x10]
   1400171b9:	call   0x1400141f4
   1400171be:	lea    rcx,[rbp-0x20]
   1400171c2:	mov    rdx,rsi
   1400171c5:	mov    rbx,rax
   1400171c8:	call   0x14001409c
   1400171cd:	lea    rcx,[rbp-0x40]
   1400171d1:	mov    rdx,rbx
   1400171d4:	movups xmm0,XMMWORD PTR [rax]
   1400171d7:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   1400171dc:	call   0x140014910
   1400171e1:	lea    rax,[rbp-0x40]
   1400171e5:	jmp    0x1400171f0
   1400171e7:	lea    rcx,[rbp-0x30]
   1400171eb:	call   0x1400141f4
   1400171f0:	movups xmm0,XMMWORD PTR [rax]
   1400171f3:	movdqu XMMWORD PTR [rdi],xmm0
   1400171f7:	lea    r11,[rsp+0x60]
   1400171fc:	mov    rax,rdi
   1400171ff:	mov    rbx,QWORD PTR [r11+0x10]
   140017203:	mov    rsi,QWORD PTR [r11+0x18]
   140017207:	mov    rdi,QWORD PTR [r11+0x20]
   14001720b:	mov    rsp,r11
   14001720e:	pop    rbp
   14001720f:	ret    
   140017210:	rex push rbx
   140017212:	sub    rsp,0x20
   140017216:	mov    rbx,rcx
   140017219:	mov    rcx,QWORD PTR [rip+0x27c98]        # 0x14003eeb8
   140017220:	cmp    BYTE PTR [rcx],0x5f
   140017223:	jne    0x14001725a
   140017225:	cmp    BYTE PTR [rcx+0x1],0x5f
   140017229:	jne    0x14001725a
   14001722b:	add    rcx,0x2
   14001722f:	mov    QWORD PTR [rip+0x27c82],rcx        # 0x14003eeb8
   140017236:	movsx  eax,BYTE PTR [rcx]
   140017239:	inc    rcx
   14001723c:	sub    eax,0x41
   14001723f:	mov    QWORD PTR [rip+0x27c72],rcx        # 0x14003eeb8
   140017246:	cmp    eax,0x3
   140017249:	jbe    0x14001725a
   14001724b:	mov    edx,0x2
   140017250:	mov    rcx,rbx
   140017253:	call   0x1400140e4
   140017258:	jmp    0x140017269
   14001725a:	and    QWORD PTR [rbx],0x0
   14001725e:	mov    BYTE PTR [rbx+0x8],0x0
   140017262:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140017269:	mov    rax,rbx
   14001726c:	add    rsp,0x20
   140017270:	pop    rbx
   140017271:	ret    
   140017272:	int3   
   140017273:	int3   
   140017274:	rex push rbx
   140017276:	sub    rsp,0x20
   14001727a:	mov    dl,0x1
   14001727c:	mov    rbx,rcx
   14001727f:	call   0x1400170b4
   140017284:	mov    rax,rbx
   140017287:	add    rsp,0x20
   14001728b:	pop    rbx
   14001728c:	ret    
   14001728d:	int3   
   14001728e:	int3   
   14001728f:	int3   
   140017290:	mov    QWORD PTR [rsp+0x8],rbx
   140017295:	mov    QWORD PTR [rsp+0x10],rsi
   14001729a:	mov    QWORD PTR [rsp+0x18],rdi
   14001729f:	push   rbp
   1400172a0:	mov    rbp,rsp
   1400172a3:	sub    rsp,0x60
   1400172a7:	mov    eax,DWORD PTR [rip+0x27c27]        # 0x14003eed4
   1400172ad:	mov    rdi,rcx
   1400172b0:	mov    r8d,eax
   1400172b3:	shr    r8d,0xf
   1400172b7:	not    r8d
   1400172ba:	and    r8d,0x1
   1400172be:	je     0x1400172cd
   1400172c0:	bt     eax,0xc
   1400172c4:	jb     0x1400172cd
   1400172c6:	mov    esi,0x1
   1400172cb:	jmp    0x1400172cf
   1400172cd:	xor    esi,esi
   1400172cf:	mov    rdx,QWORD PTR [rip+0x27be2]        # 0x14003eeb8
   1400172d6:	and    QWORD PTR [rbp-0x40],0x0
   1400172db:	and    DWORD PTR [rbp-0x38],0xffff0000
   1400172e2:	movsx  ecx,BYTE PTR [rdx]
   1400172e5:	inc    rdx
   1400172e8:	mov    QWORD PTR [rip+0x27bc9],rdx        # 0x14003eeb8
   1400172ef:	test   ecx,ecx
   1400172f1:	je     0x1400173bb
   1400172f7:	sub    ecx,0x54
   1400172fa:	je     0x140017372
   1400172fc:	dec    ecx
   1400172fe:	je     0x140017369
   140017300:	dec    ecx
   140017302:	je     0x140017360
   140017304:	dec    ecx
   140017306:	je     0x140017322
   140017308:	dec    ecx
   14001730a:	je     0x140017319
   14001730c:	dec    ecx
   14001730e:	jne    0x140017382
   140017310:	lea    rdx,[rip+0x1cce9]        # 0x140034000
   140017317:	jmp    0x140017379
   140017319:	lea    rdx,[rip+0x1ccd0]        # 0x140033ff0
   140017320:	jmp    0x140017379
   140017322:	lea    rcx,[rbp-0x20]
   140017326:	mov    esi,r8d
   140017329:	call   0x140017408
   14001732e:	lea    rdx,[rip+0x1ccdb]        # 0x140034010
   140017335:	lea    rcx,[rbp-0x10]
   140017339:	mov    rbx,rax
   14001733c:	call   0x14001409c
   140017341:	lea    rcx,[rbp-0x30]
   140017345:	mov    rdx,rbx
   140017348:	movups xmm0,XMMWORD PTR [rax]
   14001734b:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140017350:	call   0x140014910
   140017355:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140017359:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   14001735e:	jmp    0x140017382
   140017360:	lea    rdx,[rip+0x1cc81]        # 0x140033fe8
   140017367:	jmp    0x140017379
   140017369:	lea    rdx,[rip+0x1cc70]        # 0x140033fe0
   140017370:	jmp    0x140017379
   140017372:	lea    rdx,[rip+0x1cc5f]        # 0x140033fd8
   140017379:	lea    rcx,[rbp-0x40]
   14001737d:	call   0x1400144f0
   140017382:	and    QWORD PTR [rbp-0x30],0x0
   140017387:	and    DWORD PTR [rbp-0x28],0xffff0000
   14001738e:	test   esi,esi
   140017390:	je     0x14001739b
   140017392:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140017396:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001739b:	lea    rcx,[rbp-0x40]
   14001739f:	call   0x140019114
   1400173a4:	lea    rdx,[rbp-0x40]
   1400173a8:	lea    rcx,[rbp-0x30]
   1400173ac:	call   0x140014910
   1400173b1:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400173b5:	movdqu XMMWORD PTR [rdi],xmm0
   1400173b9:	jmp    0x1400173d4
   1400173bb:	dec    rdx
   1400173be:	mov    rcx,rdi
   1400173c1:	mov    QWORD PTR [rip+0x27af0],rdx        # 0x14003eeb8
   1400173c8:	lea    rdx,[rip+0x1cbfa]        # 0x140033fc9
   1400173cf:	call   0x14001409c
   1400173d4:	lea    r11,[rsp+0x60]
   1400173d9:	mov    rax,rdi
   1400173dc:	mov    rbx,QWORD PTR [r11+0x10]
   1400173e0:	mov    rsi,QWORD PTR [r11+0x18]
   1400173e4:	mov    rdi,QWORD PTR [r11+0x20]
   1400173e8:	mov    rsp,r11
   1400173eb:	pop    rbp
   1400173ec:	ret    
   1400173ed:	int3   
   1400173ee:	int3   
   1400173ef:	int3   
   1400173f0:	rex push rbx
   1400173f2:	sub    rsp,0x20
   1400173f6:	mov    rbx,rcx
   1400173f9:	call   0x140019114
   1400173fe:	mov    rax,rbx
   140017401:	add    rsp,0x20
   140017405:	pop    rbx
   140017406:	ret    
   140017407:	int3   
   140017408:	mov    QWORD PTR [rsp+0x8],rbx
   14001740d:	push   rbp
   14001740e:	mov    rbp,rsp
   140017411:	sub    rsp,0x50
   140017415:	mov    rax,QWORD PTR [rip+0x27a9c]        # 0x14003eeb8
   14001741c:	and    QWORD PTR [rbp-0x30],0x0
   140017421:	and    DWORD PTR [rbp-0x28],0xffff0000
   140017428:	cmp    BYTE PTR [rax],0x0
   14001742b:	mov    rbx,rcx
   14001742e:	je     0x1400174d6
   140017434:	mov    al,BYTE PTR [rax]
   140017436:	cmp    al,0x30
   140017438:	jl     0x1400174cf
   14001743e:	cmp    al,0x31
   140017440:	jle    0x14001746f
   140017442:	cmp    al,0x33
   140017444:	jle    0x140017466
   140017446:	cmp    al,0x34
   140017448:	je     0x14001747f
   14001744a:	cmp    al,0x35
   14001744c:	je     0x14001745d
   14001744e:	sub    al,0x36
   140017450:	cmp    al,0x1
   140017452:	ja     0x1400174cf
   140017454:	lea    rdx,[rip+0x1ca45]        # 0x140033ea0
   14001745b:	jmp    0x140017476
   14001745d:	lea    rdx,[rip+0x1ca34]        # 0x140033e98
   140017464:	jmp    0x140017476
   140017466:	lea    rdx,[rip+0x1ca23]        # 0x140033e90
   14001746d:	jmp    0x140017476
   14001746f:	lea    rdx,[rip+0x1ca12]        # 0x140033e88
   140017476:	lea    rcx,[rbp-0x30]
   14001747a:	call   0x1400144f0
   14001747f:	mov    rax,QWORD PTR [rip+0x27a32]        # 0x14003eeb8
   140017486:	movsx  eax,BYTE PTR [rax]
   140017489:	inc    QWORD PTR [rip+0x27a28]        # 0x14003eeb8
   140017490:	add    eax,0xffffffcf
   140017493:	test   eax,0xfffffff9
   140017498:	jne    0x1400174c5
   14001749a:	lea    rdx,[rip+0x1ca07]        # 0x140033ea8
   1400174a1:	lea    rcx,[rbp-0x10]
   1400174a5:	call   0x14001409c
   1400174aa:	lea    rdx,[rbp-0x30]
   1400174ae:	lea    rcx,[rbp-0x20]
   1400174b2:	movups xmm0,XMMWORD PTR [rax]
   1400174b5:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   1400174ba:	call   0x140014910
   1400174bf:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400174c3:	jmp    0x1400174c9
   1400174c5:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400174c9:	movdqu XMMWORD PTR [rbx],xmm0
   1400174cd:	jmp    0x1400174e0
   1400174cf:	mov    edx,0x2
   1400174d4:	jmp    0x1400174db
   1400174d6:	mov    edx,0x1
   1400174db:	call   0x1400140e4
   1400174e0:	mov    rax,rbx
   1400174e3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400174e8:	add    rsp,0x50
   1400174ec:	pop    rbp
   1400174ed:	ret    
   1400174ee:	int3   
   1400174ef:	int3   
   1400174f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400174f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400174fa:	mov    QWORD PTR [rsp+0x18],r14
   1400174ff:	push   rbp
   140017500:	mov    rbp,rsp
   140017503:	sub    rsp,0x60
   140017507:	mov    r10d,DWORD PTR [rbp-0x28]
   14001750b:	and    QWORD PTR [rbp-0x30],0x0
   140017510:	mov    rbx,rcx
   140017513:	mov    rcx,QWORD PTR [rip+0x2799e]        # 0x14003eeb8
   14001751a:	mov    rsi,r8
   14001751d:	and    r10d,0xffff0000
   140017524:	mov    r14d,0x1
   14001752a:	mov    r11d,r9d
   14001752d:	mov    DWORD PTR [rbp-0x28],r10d
   140017531:	add    rcx,r14
   140017534:	mov    QWORD PTR [rip+0x2797d],rcx        # 0x14003eeb8
   14001753b:	movsx  r9d,BYTE PTR [rcx]
   14001753f:	mov    r8d,r9d
   140017542:	sub    r8d,0x41
   140017546:	je     0x1400176d2
   14001754c:	dec    r8d
   14001754f:	je     0x140017692
   140017555:	dec    r8d
   140017558:	je     0x140017686
   14001755e:	cmp    BYTE PTR [rcx],0x0
   140017561:	je     0x14001767e
   140017567:	mov    al,BYTE PTR [rcx+0x1]
   14001756a:	test   al,al
   14001756c:	je     0x14001767e
   140017572:	test   r11d,r11d
   140017575:	je     0x140017589
   140017577:	mov    edx,0x2
   14001757c:	mov    rcx,rbx
   14001757f:	call   0x1400140e4
   140017584:	jmp    0x140017722
   140017589:	shl    r9d,0x4
   14001758d:	add    rcx,0x2
   140017591:	movsx  esi,al
   140017594:	add    esi,0xfffffcd0
   14001759a:	mov    QWORD PTR [rip+0x27917],rcx        # 0x14003eeb8
   1400175a1:	add    esi,r9d
   1400175a4:	cmp    esi,r14d
   1400175a7:	jbe    0x1400175fa
   1400175a9:	and    QWORD PTR [rbp-0x30],0x0
   1400175ae:	and    r10d,0xffffff00
   1400175b5:	lea    rdx,[rbp-0x40]
   1400175b9:	and    r10d,0xffff00ff
   1400175c0:	lea    rcx,[rbp-0x30]
   1400175c4:	mov    r8d,r14d
   1400175c7:	mov    DWORD PTR [rbp-0x28],r10d
   1400175cb:	mov    BYTE PTR [rbp-0x40],0x2c
   1400175cf:	call   0x140015aa8
   1400175d4:	lea    rcx,[rbp-0x10]
   1400175d8:	mov    edx,esi
   1400175da:	call   0x1400141f4
   1400175df:	lea    rcx,[rbp-0x20]
   1400175e3:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400175e7:	mov    rdx,rax
   1400175ea:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   1400175ef:	call   0x140014910
   1400175f4:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400175f8:	jmp    0x1400175fe
   1400175fa:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400175fe:	lea    rcx,[rbp-0x20]
   140017602:	mov    dl,0x3e
   140017604:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140017609:	call   0x140014950
   14001760e:	mov    rax,QWORD PTR [rip+0x278a3]        # 0x14003eeb8
   140017615:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140017619:	cmp    BYTE PTR [rax],0x24
   14001761c:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140017621:	jne    0x14001762f
   140017623:	add    rax,r14
   140017626:	mov    QWORD PTR [rip+0x2788b],rax        # 0x14003eeb8
   14001762d:	jmp    0x14001764f
   14001762f:	lea    rcx,[rbp-0x20]
   140017633:	mov    dl,0x5e
   140017635:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   14001763a:	call   0x140014950
   14001763f:	mov    rax,QWORD PTR [rip+0x27872]        # 0x14003eeb8
   140017646:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14001764a:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001764f:	cmp    BYTE PTR [rax],0x0
   140017652:	je     0x140017660
   140017654:	add    rax,r14
   140017657:	mov    QWORD PTR [rip+0x2785a],rax        # 0x14003eeb8
   14001765e:	jmp    0x14001766c
   140017660:	lea    rcx,[rbp-0x30]
   140017664:	mov    edx,r14d
   140017667:	call   0x140014af8
   14001766c:	bts    DWORD PTR [rbp-0x28],0xe
   140017671:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140017675:	movdqu XMMWORD PTR [rbx],xmm0
   140017679:	jmp    0x140017722
   14001767e:	mov    edx,r14d
   140017681:	jmp    0x14001757c
   140017686:	lea    rax,[rip+0x1c0f3]        # 0x140033780
   14001768d:	mov    QWORD PTR [rdx],rax
   140017690:	jmp    0x1400176c9
   140017692:	test   r11d,r11d
   140017695:	jne    0x140017577
   14001769b:	and    QWORD PTR [rbp-0x30],0x0
   1400176a0:	and    r10d,0xffffff00
   1400176a7:	lea    rdx,[rbp-0x40]
   1400176ab:	and    r10d,0xffff00ff
   1400176b2:	lea    rcx,[rbp-0x30]
   1400176b6:	mov    r8d,r14d
   1400176b9:	mov    BYTE PTR [rsi],r14b
   1400176bc:	mov    BYTE PTR [rbp-0x40],0x3e
   1400176c0:	mov    DWORD PTR [rbp-0x28],r10d
   1400176c4:	call   0x140015aa8
   1400176c9:	add    QWORD PTR [rip+0x277e8],r14        # 0x14003eeb8
   1400176d0:	jmp    0x140017713
   1400176d2:	test   r11d,r11d
   1400176d5:	jne    0x140017709
   1400176d7:	mov    rax,QWORD PTR [rdx]
   1400176da:	cmp    BYTE PTR [rax],0x26
   1400176dd:	jne    0x1400176f0
   1400176df:	lea    rax,[rip+0x1c09a]        # 0x140033780
   1400176e6:	mov    QWORD PTR [rdx],rax
   1400176e9:	mov    rcx,QWORD PTR [rip+0x277c8]        # 0x14003eeb8
   1400176f0:	mov    rax,QWORD PTR [rdx]
   1400176f3:	cmp    BYTE PTR [rax],0x2a
   1400176f6:	jne    0x140017709
   1400176f8:	lea    rax,[rip+0x1c0a1]        # 0x1400337a0
   1400176ff:	mov    QWORD PTR [rdx],rax
   140017702:	mov    rcx,QWORD PTR [rip+0x277af]        # 0x14003eeb8
   140017709:	add    rcx,r14
   14001770c:	mov    QWORD PTR [rip+0x277a5],rcx        # 0x14003eeb8
   140017713:	and    QWORD PTR [rbx],0x0
   140017717:	mov    BYTE PTR [rbx+0x8],0x0
   14001771b:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140017722:	lea    r11,[rsp+0x60]
   140017727:	mov    rax,rbx
   14001772a:	mov    rbx,QWORD PTR [r11+0x10]
   14001772e:	mov    rsi,QWORD PTR [r11+0x18]
   140017732:	mov    r14,QWORD PTR [r11+0x20]
   140017736:	mov    rsp,r11
   140017739:	pop    rbp
   14001773a:	ret    
   14001773b:	int3   
   14001773c:	mov    QWORD PTR [rsp+0x8],rbx
   140017741:	mov    QWORD PTR [rsp+0x10],rsi
   140017746:	mov    QWORD PTR [rsp+0x18],rdi
   14001774b:	push   rbp
   14001774c:	mov    rbp,rsp
   14001774f:	sub    rsp,0x60
   140017753:	xor    r8d,r8d
   140017756:	mov    rsi,rdx
   140017759:	mov    rdi,rcx
   14001775c:	lea    edx,[r8+0x10]
   140017760:	lea    rcx,[rip+0x27779]        # 0x14003eee0
   140017767:	call   0x140017e18
   14001776c:	mov    rbx,rax
   14001776f:	test   rax,rax
   140017772:	je     0x140017785
   140017774:	and    QWORD PTR [rax],0x0
   140017778:	mov    BYTE PTR [rax+0x8],0x0
   14001777c:	and    DWORD PTR [rax+0x8],0xffff00ff
   140017783:	jmp    0x140017787
   140017785:	xor    ebx,ebx
   140017787:	mov    rdx,rbx
   14001778a:	mov    rcx,rdi
   14001778d:	call   0x140016d5c
   140017792:	and    QWORD PTR [rbp-0x30],0x0
   140017797:	and    QWORD PTR [rbp-0x20],0x0
   14001779c:	and    DWORD PTR [rsp+0x20],0x0
   1400177a1:	mov    eax,0xffff0000
   1400177a6:	lea    r9,[rbp-0x30]
   1400177aa:	and    DWORD PTR [rbp-0x28],eax
   1400177ad:	and    DWORD PTR [rbp-0x18],eax
   1400177b0:	lea    r8,[rip+0x182cd]        # 0x14002fa84
   1400177b7:	lea    rdx,[rbp-0x20]
   1400177bb:	lea    rcx,[rbp-0x10]
   1400177bf:	call   0x140016620
   1400177c4:	lea    rcx,[rbp-0x20]
   1400177c8:	mov    dl,0x20
   1400177ca:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   1400177ce:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   1400177d3:	call   0x140014950
   1400177d8:	lea    rcx,[rbp-0x20]
   1400177dc:	mov    rdx,rsi
   1400177df:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400177e3:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   1400177e8:	call   0x140014910
   1400177ed:	lea    r11,[rsp+0x60]
   1400177f2:	mov    rax,rdi
   1400177f5:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400177f9:	movdqu XMMWORD PTR [rbx],xmm0
   1400177fd:	mov    rbx,QWORD PTR [r11+0x10]
   140017801:	mov    rsi,QWORD PTR [r11+0x18]
   140017805:	mov    rdi,QWORD PTR [r11+0x20]
   140017809:	mov    rsp,r11
   14001780c:	pop    rbp
   14001780d:	ret    
   14001780e:	int3   
   14001780f:	int3   
   140017810:	mov    rax,rsp
   140017813:	mov    QWORD PTR [rax+0x8],rbx
   140017817:	mov    QWORD PTR [rax+0x10],rsi
   14001781b:	mov    QWORD PTR [rax+0x18],rdi
   14001781f:	push   rbp
   140017820:	push   r12
   140017822:	push   r13
   140017824:	push   r14
   140017826:	push   r15
   140017828:	lea    rbp,[rax-0x5f]
   14001782c:	sub    rsp,0x90
   140017833:	mov    rdi,rcx
   140017836:	mov    rcx,QWORD PTR [rip+0x2767b]        # 0x14003eeb8
   14001783d:	xor    ebx,ebx
   14001783f:	mov    r12,rdx
   140017842:	cmp    BYTE PTR [rcx],bl
   140017844:	jne    0x140017869
   140017846:	lea    edx,[rbx+0x1]
   140017849:	lea    rcx,[rbp+0x17]
   14001784d:	call   0x1400140e4
   140017852:	mov    rdx,r12
   140017855:	movups xmm0,XMMWORD PTR [rax]
   140017858:	mov    rcx,rdi
   14001785b:	movdqu XMMWORD PTR [rdi],xmm0
   14001785f:	call   0x140014910
   140017864:	jmp    0x140017cf2
   140017869:	mov    al,BYTE PTR [rcx]
   14001786b:	sub    al,0x36
   14001786d:	cmp    al,0x3
   14001786f:	jbe    0x140017880
   140017871:	cmp    BYTE PTR [rcx],0x5f
   140017874:	je     0x140017880
   140017876:	mov    edx,0x2
   14001787b:	jmp    0x140017cea
   140017880:	movsx  r14d,BYTE PTR [rcx]
   140017884:	mov    esi,0x1
   140017889:	or     edx,0xffffffff
   14001788c:	add    rcx,rsi
   14001788f:	sub    r14d,0x36
   140017893:	mov    QWORD PTR [rip+0x2761e],rcx        # 0x14003eeb8
   14001789a:	cmp    r14d,0x29
   14001789e:	jne    0x1400178c8
   1400178a0:	cmp    BYTE PTR [rcx],bl
   1400178a2:	je     0x1400178c4
   1400178a4:	movsx  r14d,BYTE PTR [rcx]
   1400178a8:	add    rcx,rsi
   1400178ab:	sub    r14d,0x3d
   1400178af:	mov    QWORD PTR [rip+0x27602],rcx        # 0x14003eeb8
   1400178b6:	lea    eax,[r14-0x4]
   1400178ba:	cmp    eax,0x3
   1400178bd:	jbe    0x1400178d0
   1400178bf:	mov    r14d,edx
   1400178c2:	jmp    0x1400178d0
   1400178c4:	mov    edx,esi
   1400178c6:	jmp    0x140017849
   1400178c8:	cmp    r14d,0x3
   1400178cc:	cmova  r14d,edx
   1400178d0:	cmp    r14d,edx
   1400178d3:	je     0x140017876
   1400178d5:	mov    r15d,DWORD PTR [rbp-0x11]
   1400178d9:	movups xmm0,XMMWORD PTR [r12]
   1400178de:	mov    r13d,r14d
   1400178e1:	and    r15d,0xffff0000
   1400178e8:	mov    QWORD PTR [rbp-0x19],rbx
   1400178ec:	mov    DWORD PTR [rbp-0x11],r15d
   1400178f0:	movdqu XMMWORD PTR [rbp-0x29],xmm0
   1400178f5:	and    r13d,0x2
   1400178f9:	je     0x140017a0d
   1400178ff:	lea    rdx,[rip+0x1c3ae]        # 0x140033cb4
   140017906:	lea    rcx,[rbp+0x17]
   14001790a:	call   0x14001409c
   14001790f:	lea    rdx,[rbp-0x29]
   140017913:	lea    rcx,[rbp+0x7]
   140017917:	movups xmm0,XMMWORD PTR [rax]
   14001791a:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   14001791f:	call   0x140014910
   140017924:	mov    rax,QWORD PTR [rip+0x2758d]        # 0x14003eeb8
   14001792b:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   14001792f:	lea    rcx,[rbp+0x17]
   140017933:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140017938:	cmp    BYTE PTR [rax],bl
   14001793a:	je     0x14001797d
   14001793c:	call   0x140018c20
   140017941:	lea    rcx,[rbp-0x9]
   140017945:	mov    dl,0x20
   140017947:	mov    rbx,rax
   14001794a:	call   0x140013fdc
   14001794f:	lea    rcx,[rbp+0x7]
   140017953:	mov    rdx,rbx
   140017956:	movups xmm0,XMMWORD PTR [rax]
   140017959:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   14001795e:	call   0x140014910
   140017963:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   140017967:	lea    rdx,[rbp-0x29]
   14001796b:	lea    rcx,[rbp+0x7]
   14001796f:	movdqa XMMWORD PTR [rbp+0x7],xmm0
   140017974:	call   0x140014910
   140017979:	xor    ebx,ebx
   14001797b:	jmp    0x140017999
   14001797d:	mov    edx,esi
   14001797f:	call   0x1400140e4
   140017984:	lea    rdx,[rbp-0x29]
   140017988:	lea    rcx,[rbp+0x7]
   14001798c:	movups xmm0,XMMWORD PTR [rax]
   14001798f:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   140017994:	call   0x140014910
   140017999:	mov    rax,QWORD PTR [rip+0x27518]        # 0x14003eeb8
   1400179a0:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   1400179a4:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   1400179a9:	cmp    BYTE PTR [rax],bl
   1400179ab:	je     0x140017ab6
   1400179b1:	cmp    BYTE PTR [rax],0x40
   1400179b4:	jne    0x140017876
   1400179ba:	add    rax,rsi
   1400179bd:	mov    QWORD PTR [rbp-0x9],rbx
   1400179c1:	mov    QWORD PTR [rbp+0x7],rbx
   1400179c5:	mov    QWORD PTR [rip+0x274ec],rax        # 0x14003eeb8
   1400179cc:	mov    eax,DWORD PTR [rip+0x27502]        # 0x14003eed4
   1400179d2:	mov    DWORD PTR [rsp+0x20],esi
   1400179d6:	and    eax,0x60
   1400179d9:	lea    r8,[rip+0x180a4]        # 0x14002fa84
   1400179e0:	lea    rcx,[rbp+0x17]
   1400179e4:	cmp    al,0x60
   1400179e6:	mov    eax,0xffff0000
   1400179eb:	je     0x140017a78
   1400179f1:	and    DWORD PTR [rbp-0x1],eax
   1400179f4:	and    DWORD PTR [rbp+0xf],eax
   1400179f7:	lea    r9,[rbp-0x9]
   1400179fb:	lea    rdx,[rbp+0x7]
   1400179ff:	call   0x140016620
   140017a04:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017a08:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   140017a0d:	test   r14b,0x4
   140017a11:	je     0x140017af1
   140017a17:	mov    eax,DWORD PTR [rip+0x274b7]        # 0x14003eed4
   140017a1d:	shr    eax,1
   140017a1f:	not    eax
   140017a21:	test   sil,al
   140017a24:	je     0x140017aca
   140017a2a:	lea    rcx,[rbp+0x7]
   140017a2e:	call   0x140016034
   140017a33:	lea    rcx,[rbp-0x9]
   140017a37:	mov    dl,0x20
   140017a39:	mov    rbx,rax
   140017a3c:	call   0x140013fdc
   140017a41:	lea    rcx,[rbp+0x17]
   140017a45:	mov    rdx,rbx
   140017a48:	movups xmm0,XMMWORD PTR [rax]
   140017a4b:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140017a50:	call   0x140014910
   140017a55:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017a59:	lea    rdx,[rbp-0x29]
   140017a5d:	lea    rcx,[rbp+0x17]
   140017a61:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140017a66:	call   0x140014910
   140017a6b:	xor    ebx,ebx
   140017a6d:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017a71:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140017a76:	jmp    0x140017af1
   140017a78:	and    DWORD PTR [rbp+0xf],eax
   140017a7b:	and    DWORD PTR [rbp-0x1],eax
   140017a7e:	lea    r9,[rbp+0x7]
   140017a82:	lea    rdx,[rbp-0x9]
   140017a86:	call   0x140016620
   140017a8b:	cmp    BYTE PTR [rbp-0x11],0x3
   140017a8f:	je     0x140017a0d
   140017a95:	cmp    BYTE PTR [rbp+0x1f],sil
   140017a99:	jle    0x140017a0d
   140017a9f:	movzx  eax,BYTE PTR [rbp+0x1f]
   140017aa3:	and    r15d,0xffffff00
   140017aaa:	or     r15d,eax
   140017aad:	mov    DWORD PTR [rbp-0x11],r15d
   140017ab1:	jmp    0x140017a0d
   140017ab6:	lea    rcx,[rbp+0x17]
   140017aba:	mov    edx,esi
   140017abc:	call   0x1400140e4
   140017ac1:	lea    rdx,[rbp-0x29]
   140017ac5:	jmp    0x140017855
   140017aca:	lea    rcx,[rbp+0x17]
   140017ace:	call   0x140016034
   140017ad3:	cmp    BYTE PTR [rbp-0x21],0x3
   140017ad7:	je     0x140017af1
   140017ad9:	cmp    BYTE PTR [rax+0x8],sil
   140017add:	jle    0x140017af1
   140017adf:	mov    ecx,DWORD PTR [rbp-0x21]
   140017ae2:	movzx  eax,BYTE PTR [rax+0x8]
   140017ae6:	and    ecx,0xffffff00
   140017aec:	or     ecx,eax
   140017aee:	mov    DWORD PTR [rbp-0x21],ecx
   140017af1:	mov    eax,DWORD PTR [rip+0x273dd]        # 0x14003eed4
   140017af7:	shr    eax,1
   140017af9:	not    eax
   140017afb:	test   sil,al
   140017afe:	je     0x140017b29
   140017b00:	lea    rcx,[rbp+0x7]
   140017b04:	call   0x140016520
   140017b09:	lea    rdx,[rbp-0x29]
   140017b0d:	lea    rcx,[rbp+0x17]
   140017b11:	movups xmm0,XMMWORD PTR [rax]
   140017b14:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140017b19:	call   0x140014910
   140017b1e:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017b22:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140017b27:	jmp    0x140017b50
   140017b29:	lea    rcx,[rbp+0x17]
   140017b2d:	call   0x140016520
   140017b32:	cmp    BYTE PTR [rbp-0x21],0x3
   140017b36:	je     0x140017b50
   140017b38:	cmp    BYTE PTR [rax+0x8],sil
   140017b3c:	jle    0x140017b50
   140017b3e:	mov    ecx,DWORD PTR [rbp-0x21]
   140017b41:	movzx  eax,BYTE PTR [rax+0x8]
   140017b45:	and    ecx,0xffffff00
   140017b4b:	or     ecx,eax
   140017b4d:	mov    DWORD PTR [rbp-0x21],ecx
   140017b50:	cmp    QWORD PTR [r12],rbx
   140017b54:	je     0x140017b93
   140017b56:	lea    rcx,[rbp+0x7]
   140017b5a:	mov    dl,0x28
   140017b5c:	call   0x140013fdc
   140017b61:	lea    rdx,[rbp-0x29]
   140017b65:	lea    rcx,[rbp+0x17]
   140017b69:	movups xmm0,XMMWORD PTR [rax]
   140017b6c:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140017b71:	call   0x140014910
   140017b76:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017b7a:	lea    rcx,[rbp+0x17]
   140017b7e:	mov    dl,0x29
   140017b80:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140017b85:	call   0x140014950
   140017b8a:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017b8e:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140017b93:	xor    r8d,r8d
   140017b96:	lea    rcx,[rip+0x27343]        # 0x14003eee0
   140017b9d:	lea    edx,[r8+0x10]
   140017ba1:	call   0x140017e18
   140017ba6:	mov    r14,rax
   140017ba9:	test   rax,rax
   140017bac:	je     0x140017bbd
   140017bae:	mov    BYTE PTR [rax+0x8],bl
   140017bb1:	and    DWORD PTR [rax+0x8],0xffff00ff
   140017bb8:	mov    QWORD PTR [rax],rbx
   140017bbb:	jmp    0x140017bc0
   140017bbd:	mov    r14,rbx
   140017bc0:	lea    rcx,[rbp+0x27]
   140017bc4:	mov    rdx,r14
   140017bc7:	call   0x140018bec
   140017bcc:	lea    rcx,[rbp+0x7]
   140017bd0:	call   0x140015cf4
   140017bd5:	lea    rcx,[rbp-0x9]
   140017bd9:	mov    dl,0x28
   140017bdb:	mov    rbx,rax
   140017bde:	call   0x140013fdc
   140017be3:	lea    rcx,[rbp+0x17]
   140017be7:	mov    rdx,rbx
   140017bea:	movups xmm0,XMMWORD PTR [rax]
   140017bed:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140017bf2:	call   0x140014910
   140017bf7:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140017bfb:	lea    rcx,[rbp+0x17]
   140017bff:	mov    dl,0x29
   140017c01:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140017c06:	call   0x140014950
   140017c0b:	lea    rdx,[rbp+0x17]
   140017c0f:	lea    rcx,[rbp-0x29]
   140017c13:	call   0x140014910
   140017c18:	mov    ecx,DWORD PTR [rip+0x272b6]        # 0x14003eed4
   140017c1e:	mov    eax,ecx
   140017c20:	and    eax,0x60
   140017c23:	cmp    al,0x60
   140017c25:	je     0x140017c3f
   140017c27:	test   r13d,r13d
   140017c2a:	je     0x140017c3f
   140017c2c:	lea    rdx,[rbp-0x19]
   140017c30:	lea    rcx,[rbp-0x29]
   140017c34:	call   0x140014910
   140017c39:	mov    ecx,DWORD PTR [rip+0x27295]        # 0x14003eed4
   140017c3f:	shr    ecx,0x13
   140017c42:	not    ecx
   140017c44:	test   sil,cl
   140017c47:	lea    rcx,[rbp+0x17]
   140017c4b:	je     0x140017c60
   140017c4d:	call   0x140018ac4
   140017c52:	lea    rcx,[rbp-0x29]
   140017c56:	mov    rdx,rax
   140017c59:	call   0x140014910
   140017c5e:	jmp    0x140017c83
   140017c60:	call   0x140018ac4
   140017c65:	cmp    BYTE PTR [rbp-0x21],0x3
   140017c69:	je     0x140017c83
   140017c6b:	cmp    BYTE PTR [rax+0x8],sil
   140017c6f:	jle    0x140017c83
   140017c71:	mov    ecx,DWORD PTR [rbp-0x21]
   140017c74:	movzx  eax,BYTE PTR [rax+0x8]
   140017c78:	and    ecx,0xffffff00
   140017c7e:	or     ecx,eax
   140017c80:	mov    DWORD PTR [rbp-0x21],ecx
   140017c83:	mov    eax,DWORD PTR [rip+0x2724b]        # 0x14003eed4
   140017c89:	lea    rcx,[rbp+0x17]
   140017c8d:	shr    eax,0x8
   140017c90:	not    eax
   140017c92:	test   sil,al
   140017c95:	je     0x140017caa
   140017c97:	call   0x140019e38
   140017c9c:	lea    rcx,[rbp-0x29]
   140017ca0:	mov    rdx,rax
   140017ca3:	call   0x140014910
   140017ca8:	jmp    0x140017ccd
   140017caa:	call   0x140019e38
   140017caf:	cmp    BYTE PTR [rbp-0x21],0x3
   140017cb3:	je     0x140017ccd
   140017cb5:	cmp    BYTE PTR [rax+0x8],sil
   140017cb9:	jle    0x140017ccd
   140017cbb:	mov    ecx,DWORD PTR [rbp-0x21]
   140017cbe:	movzx  eax,BYTE PTR [rax+0x8]
   140017cc2:	and    ecx,0xffffff00
   140017cc8:	or     ecx,eax
   140017cca:	mov    DWORD PTR [rbp-0x21],ecx
   140017ccd:	test   r14,r14
   140017cd0:	je     0x140017ce5
   140017cd2:	movaps xmm0,XMMWORD PTR [rbp-0x29]
   140017cd6:	movdqu XMMWORD PTR [r14],xmm0
   140017cdb:	movups xmm1,XMMWORD PTR [rbp+0x27]
   140017cdf:	movdqu XMMWORD PTR [rdi],xmm1
   140017ce3:	jmp    0x140017cf2
   140017ce5:	mov    edx,0x3
   140017cea:	mov    rcx,rdi
   140017ced:	call   0x1400140e4
   140017cf2:	lea    r11,[rsp+0x90]
   140017cfa:	mov    rax,rdi
   140017cfd:	mov    rbx,QWORD PTR [r11+0x30]
   140017d01:	mov    rsi,QWORD PTR [r11+0x38]
   140017d05:	mov    rdi,QWORD PTR [r11+0x40]
   140017d09:	mov    rsp,r11
   140017d0c:	pop    r15
   140017d0e:	pop    r14
   140017d10:	pop    r13
   140017d12:	pop    r12
   140017d14:	pop    rbp
   140017d15:	ret    
   140017d16:	int3   
   140017d17:	int3   
   140017d18:	rex push rbx
   140017d1a:	sub    rsp,0x20
   140017d1e:	xor    edx,edx
   140017d20:	mov    rbx,rcx
   140017d23:	call   0x1400170b4
   140017d28:	mov    rax,rbx
   140017d2b:	add    rsp,0x20
   140017d2f:	pop    rbx
   140017d30:	ret    
   140017d31:	int3   
   140017d32:	int3   
   140017d33:	int3   
   140017d34:	mov    rcx,QWORD PTR [rcx]
   140017d37:	test   rcx,rcx
   140017d3a:	jne    0x140017d3f
   140017d3c:	xor    al,al
   140017d3e:	ret    
   140017d3f:	mov    rax,QWORD PTR [rcx]
   140017d42:	rex.W jmp QWORD PTR [rax+0x8]
   140017d46:	int3   
   140017d47:	int3   
   140017d48:	cmp    DWORD PTR [rcx+0x8],0x1
   140017d4c:	setne  al
   140017d4f:	dec    al
   140017d51:	and    al,0x20
   140017d53:	ret    
   140017d54:	mov    al,BYTE PTR [rcx+0x8]
   140017d57:	ret    
   140017d58:	sub    rsp,0x28
   140017d5c:	mov    rcx,QWORD PTR [rcx+0x8]
   140017d60:	xor    eax,eax
   140017d62:	test   rcx,rcx
   140017d65:	je     0x140017d75
   140017d67:	mov    rcx,QWORD PTR [rcx]
   140017d6a:	test   rcx,rcx
   140017d6d:	je     0x140017d75
   140017d6f:	mov    rax,QWORD PTR [rcx]
   140017d72:	call   QWORD PTR [rax+0x8]
   140017d75:	add    rsp,0x28
   140017d79:	ret    
   140017d7a:	int3   
   140017d7b:	int3   
   140017d7c:	rex push rbx
   140017d7e:	sub    rsp,0x20
   140017d82:	mov    rbx,rcx
   140017d85:	mov    rcx,QWORD PTR [rcx+0x10]
   140017d89:	mov    rax,QWORD PTR [rcx]
   140017d8c:	call   QWORD PTR [rax+0x8]
   140017d8f:	test   al,al
   140017d91:	jne    0x140017d9d
   140017d93:	mov    rcx,QWORD PTR [rbx+0x8]
   140017d97:	mov    rax,QWORD PTR [rcx]
   140017d9a:	call   QWORD PTR [rax+0x8]
   140017d9d:	add    rsp,0x20
   140017da1:	pop    rbx
   140017da2:	ret    
   140017da3:	int3   
   140017da4:	xor    eax,eax
   140017da6:	cmp    DWORD PTR [rcx+0x10],eax
   140017da9:	je     0x140017db7
   140017dab:	movsxd rdx,DWORD PTR [rcx+0x10]
   140017daf:	mov    rax,QWORD PTR [rcx+0x8]
   140017db3:	mov    al,BYTE PTR [rax+rdx*1-0x1]
   140017db7:	ret    
   140017db8:	mov    QWORD PTR [rsp+0x8],rbx
   140017dbd:	push   rdi
   140017dbe:	sub    rsp,0x50
   140017dc2:	mov    rdi,rcx
   140017dc5:	lea    rcx,[rsp+0x30]
   140017dca:	xor    edx,edx
   140017dcc:	call   0x1400170b4
   140017dd1:	lea    rcx,[rsp+0x40]
   140017dd6:	mov    dl,0x60
   140017dd8:	mov    rbx,rax
   140017ddb:	call   0x140013fdc
   140017de0:	lea    rcx,[rsp+0x20]
   140017de5:	mov    rdx,rbx
   140017de8:	movups xmm0,XMMWORD PTR [rax]
   140017deb:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140017df1:	call   0x140014910
   140017df6:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140017dfb:	mov    dl,0x27
   140017dfd:	mov    rcx,rdi
   140017e00:	movdqu XMMWORD PTR [rdi],xmm0
   140017e04:	call   0x140014950
   140017e09:	mov    rbx,QWORD PTR [rsp+0x60]
   140017e0e:	mov    rax,rdi
   140017e11:	add    rsp,0x50
   140017e15:	pop    rdi
   140017e16:	ret    
   140017e17:	int3   
   140017e18:	mov    QWORD PTR [rsp+0x8],rbx
   140017e1d:	mov    QWORD PTR [rsp+0x10],rsi
   140017e22:	push   rdi
   140017e23:	sub    rsp,0x20
   140017e27:	lea    rdi,[rdx+0x7]
   140017e2b:	mov    rbx,rcx
   140017e2e:	and    rdi,0xfffffffffffffff8
   140017e32:	test   r8d,r8d
   140017e35:	je     0x140017e3e
   140017e37:	mov    rcx,rdi
   140017e3a:	call   QWORD PTR [rbx]
   140017e3c:	jmp    0x140017eb8
   140017e3e:	mov    eax,0x8
   140017e43:	test   rdi,rdi
   140017e46:	cmove  rdi,rax
   140017e4a:	mov    rax,QWORD PTR [rcx+0x20]
   140017e4e:	cmp    rax,rdi
   140017e51:	jae    0x140017ea5
   140017e53:	mov    esi,0x1000
   140017e58:	cmp    rdi,rsi
   140017e5b:	jbe    0x140017e61
   140017e5d:	xor    eax,eax
   140017e5f:	jmp    0x140017eb8
   140017e61:	lea    rcx,[rip+0x27078]        # 0x14003eee0
   140017e68:	mov    edx,0x1008
   140017e6d:	mov    r8d,0x1
   140017e73:	call   0x140017e18
   140017e78:	test   rax,rax
   140017e7b:	je     0x140017e81
   140017e7d:	and    QWORD PTR [rax],0x0
   140017e81:	test   rax,rax
   140017e84:	je     0x140017e5d
   140017e86:	mov    rcx,QWORD PTR [rbx+0x18]
   140017e8a:	test   rcx,rcx
   140017e8d:	je     0x140017e94
   140017e8f:	mov    QWORD PTR [rcx],rax
   140017e92:	jmp    0x140017e98
   140017e94:	mov    QWORD PTR [rbx+0x10],rax
   140017e98:	sub    rsi,rdi
   140017e9b:	mov    QWORD PTR [rbx+0x18],rax
   140017e9f:	mov    QWORD PTR [rbx+0x20],rsi
   140017ea3:	jmp    0x140017eac
   140017ea5:	sub    rax,rdi
   140017ea8:	mov    QWORD PTR [rcx+0x20],rax
   140017eac:	mov    rax,QWORD PTR [rbx+0x20]
   140017eb0:	add    rax,0x8
   140017eb4:	add    rax,QWORD PTR [rbx+0x18]
   140017eb8:	mov    rbx,QWORD PTR [rsp+0x30]
   140017ebd:	mov    rsi,QWORD PTR [rsp+0x38]
   140017ec2:	add    rsp,0x20
   140017ec6:	pop    rdi
   140017ec7:	ret    
   140017ec8:	mov    rcx,QWORD PTR [rip+0x26fe9]        # 0x14003eeb8
   140017ecf:	mov    dl,BYTE PTR [rcx]
   140017ed1:	test   dl,dl
   140017ed3:	jne    0x140017ed8
   140017ed5:	xor    eax,eax
   140017ed7:	ret    
   140017ed8:	lea    eax,[rdx-0x30]
   140017edb:	cmp    al,0x9
   140017edd:	ja     0x140017ef0
   140017edf:	movsx  eax,dl
   140017ee2:	sub    eax,0x2f
   140017ee5:	inc    rcx
   140017ee8:	mov    QWORD PTR [rip+0x26fc9],rcx        # 0x14003eeb8
   140017eef:	ret    
   140017ef0:	xor    r8d,r8d
   140017ef3:	mov    r9b,0x40
   140017ef6:	jmp    0x140017f1d
   140017ef8:	test   dl,dl
   140017efa:	je     0x140017ed5
   140017efc:	lea    eax,[rdx-0x41]
   140017eff:	cmp    al,0xf
   140017f01:	ja     0x140017f37
   140017f03:	shl    r8d,0x4
   140017f07:	movsx  eax,dl
   140017f0a:	add    r8d,0xffffffbf
   140017f0e:	add    r8d,eax
   140017f11:	inc    rcx
   140017f14:	mov    QWORD PTR [rip+0x26f9d],rcx        # 0x14003eeb8
   140017f1b:	mov    dl,BYTE PTR [rcx]
   140017f1d:	cmp    dl,r9b
   140017f20:	jne    0x140017ef8
   140017f22:	mov    al,BYTE PTR [rcx]
   140017f24:	inc    rcx
   140017f27:	mov    QWORD PTR [rip+0x26f8a],rcx        # 0x14003eeb8
   140017f2e:	cmp    al,r9b
   140017f31:	jne    0x140017f37
   140017f33:	mov    eax,r8d
   140017f36:	ret    
   140017f37:	or     eax,0xffffffff
   140017f3a:	ret    
   140017f3b:	int3   
   140017f3c:	mov    rax,rsp
   140017f3f:	mov    QWORD PTR [rax+0x8],rbx
   140017f43:	mov    QWORD PTR [rax+0x10],rsi
   140017f47:	mov    QWORD PTR [rax+0x20],rdi
   140017f4b:	mov    QWORD PTR [rax+0x18],r8
   140017f4f:	push   rbp
   140017f50:	lea    rbp,[rax-0x5f]
   140017f54:	sub    rsp,0xf0
   140017f5b:	mov    rbx,QWORD PTR [rip+0x26f56]        # 0x14003eeb8
   140017f62:	and    QWORD PTR [rbp-0x69],0x0
   140017f67:	and    QWORD PTR [rbp-0x79],0x0
   140017f6c:	movsx  eax,BYTE PTR [rbx]
   140017f6f:	xor    esi,esi
   140017f71:	mov    rdi,rcx
   140017f74:	mov    ecx,0xffff0000
   140017f79:	lea    r8d,[rsi+0x1]
   140017f7d:	and    DWORD PTR [rbp-0x61],ecx
   140017f80:	and    DWORD PTR [rbp-0x71],ecx
   140017f83:	add    rbx,r8
   140017f86:	mov    QWORD PTR [rip+0x26f2b],rbx        # 0x14003eeb8
   140017f8d:	cmp    eax,0x41
   140017f90:	jg     0x14001814e
   140017f96:	je     0x1400185dd
   140017f9c:	test   eax,eax
   140017f9e:	je     0x140018137
   140017fa4:	cmp    eax,0x2f
   140017fa7:	jle    0x14001825d
   140017fad:	cmp    eax,0x31
   140017fb0:	jle    0x140018011
   140017fb2:	cmp    eax,0x39
   140017fb5:	jg     0x14001825d
   140017fbb:	movsx  rdx,BYTE PTR [rbx-0x1]
   140017fc0:	lea    rbx,[rip+0xfffffffffffe8039]        # 0x140000000
   140017fc7:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33230]
   140017fcf:	lea    rcx,[rbp-0x69]
   140017fd3:	call   0x1400144f0
   140017fd8:	cmp    QWORD PTR [rbp-0x69],0x0
   140017fdd:	je     0x140018113
   140017fe3:	lea    rdx,[rip+0x1b766]        # 0x140033750
   140017fea:	lea    rcx,[rbp-0x39]
   140017fee:	call   0x14001409c
   140017ff3:	lea    rdx,[rbp-0x69]
   140017ff7:	lea    rcx,[rbp-0x59]
   140017ffb:	movups xmm0,XMMWORD PTR [rax]
   140017ffe:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140018003:	call   0x140014910
   140018008:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14001800c:	jmp    0x140018117
   140018011:	and    DWORD PTR [rbp-0x71],ecx
   140018014:	mov    QWORD PTR [rbp-0x79],rsi
   140018018:	test   dl,dl
   14001801a:	je     0x1400180ad
   140018020:	lea    rcx,[rbp-0x9]
   140018024:	call   0x1400195b8
   140018029:	lea    rcx,[rbp-0x49]
   14001802d:	mov    dl,0x3c
   14001802f:	mov    rbx,rax
   140018032:	call   0x140013fdc
   140018037:	lea    rcx,[rbp-0x59]
   14001803b:	mov    rdx,rbx
   14001803e:	movups xmm0,XMMWORD PTR [rax]
   140018041:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140018046:	call   0x140014910
   14001804b:	lea    rdx,[rbp-0x59]
   14001804f:	lea    rcx,[rbp-0x79]
   140018053:	call   0x140014910
   140018058:	mov    rcx,QWORD PTR [rbp-0x79]
   14001805c:	test   rcx,rcx
   14001805f:	je     0x140018076
   140018061:	mov    rax,QWORD PTR [rcx]
   140018064:	call   QWORD PTR [rax+0x8]
   140018067:	cmp    al,0x3e
   140018069:	jne    0x140018076
   14001806b:	lea    rcx,[rbp-0x79]
   14001806f:	mov    dl,0x20
   140018071:	call   0x140014950
   140018076:	lea    rcx,[rbp-0x79]
   14001807a:	mov    dl,0x3e
   14001807c:	call   0x140014950
   140018081:	mov    rax,QWORD PTR [rbp+0x77]
   140018085:	test   rax,rax
   140018088:	je     0x14001808d
   14001808a:	mov    BYTE PTR [rax],0x1
   14001808d:	mov    rbx,QWORD PTR [rip+0x26e24]        # 0x14003eeb8
   140018094:	cmp    BYTE PTR [rbx],sil
   140018097:	jne    0x14001809f
   140018099:	movups xmm0,XMMWORD PTR [rbp-0x79]
   14001809d:	jmp    0x140018117
   14001809f:	mov    rsi,QWORD PTR [rbp-0x79]
   1400180a3:	inc    rbx
   1400180a6:	mov    QWORD PTR [rip+0x26e0b],rbx        # 0x14003eeb8
   1400180ad:	lea    rcx,[rbp+0x47]
   1400180b1:	xor    r8d,r8d
   1400180b4:	xor    edx,edx
   1400180b6:	call   0x14001a66c
   1400180bb:	movups xmm0,XMMWORD PTR [rax]
   1400180be:	mov    QWORD PTR [rip+0x26df3],rbx        # 0x14003eeb8
   1400180c5:	movq   rax,xmm0
   1400180ca:	movaps XMMWORD PTR [rbp-0x69],xmm0
   1400180ce:	test   rax,rax
   1400180d1:	je     0x140018101
   1400180d3:	cmp    BYTE PTR [rbx-0x1],0x31
   1400180d7:	jne    0x140018101
   1400180d9:	lea    rcx,[rbp-0x49]
   1400180dd:	mov    dl,0x7e
   1400180df:	call   0x140013fdc
   1400180e4:	lea    rdx,[rbp-0x69]
   1400180e8:	lea    rcx,[rbp-0x59]
   1400180ec:	movups xmm0,XMMWORD PTR [rax]
   1400180ef:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400180f4:	call   0x140014910
   1400180f9:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   1400180fd:	movaps XMMWORD PTR [rbp-0x69],xmm0
   140018101:	test   rsi,rsi
   140018104:	je     0x140018117
   140018106:	lea    rdx,[rbp-0x79]
   14001810a:	lea    rcx,[rbp-0x69]
   14001810e:	call   0x140014910
   140018113:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140018117:	movdqu XMMWORD PTR [rdi],xmm0
   14001811b:	lea    r11,[rsp+0xf0]
   140018123:	mov    rax,rdi
   140018126:	mov    rbx,QWORD PTR [r11+0x10]
   14001812a:	mov    rsi,QWORD PTR [r11+0x18]
   14001812e:	mov    rdi,QWORD PTR [r11+0x28]
   140018132:	mov    rsp,r11
   140018135:	pop    rbp
   140018136:	ret    
   140018137:	sub    rbx,r8
   14001813a:	mov    edx,r8d
   14001813d:	mov    QWORD PTR [rip+0x26d74],rbx        # 0x14003eeb8
   140018144:	mov    rcx,rdi
   140018147:	call   0x1400140e4
   14001814c:	jmp    0x14001811b
   14001814e:	cmp    eax,0x42
   140018151:	je     0x1400185da
   140018157:	jle    0x14001825d
   14001815d:	cmp    eax,0x5a
   140018160:	jle    0x1400185dd
   140018166:	cmp    eax,0x5f
   140018169:	jne    0x14001825d
   14001816f:	movsx  ecx,BYTE PTR [rbx]
   140018172:	add    rbx,r8
   140018175:	mov    QWORD PTR [rip+0x26d3c],rbx        # 0x14003eeb8
   14001817c:	cmp    ecx,0x4f
   14001817f:	jg     0x140018273
   140018185:	cmp    ecx,0x44
   140018188:	jge    0x1400185a8
   14001818e:	cmp    ecx,0x39
   140018191:	jg     0x140018211
   140018193:	je     0x1400181ea
   140018195:	test   ecx,ecx
   140018197:	je     0x140018137
   140018199:	cmp    ecx,0x2f
   14001819c:	jle    0x14001825d
   1400181a2:	cmp    ecx,0x36
   1400181a5:	jle    0x1400181d1
   1400181a7:	cmp    ecx,0x38
   1400181aa:	jg     0x14001825d
   1400181b0:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400181b5:	lea    rbx,[rip+0xfffffffffffe7e44]        # 0x140000000
   1400181bc:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33350]
   1400181c4:	mov    rcx,rdi
   1400181c7:	call   0x14001409c
   1400181cc:	jmp    0x14001811b
   1400181d1:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400181d6:	lea    rbx,[rip+0xfffffffffffe7e23]        # 0x140000000
   1400181dd:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33350]
   1400181e5:	jmp    0x140017fcf
   1400181ea:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400181ef:	lea    rbx,[rip+0xfffffffffffe7e0a]        # 0x140000000
   1400181f6:	lea    rcx,[rbp-0x79]
   1400181fa:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33350]
   140018202:	call   0x14001409c
   140018207:	bts    DWORD PTR [rbp-0x71],0xf
   14001820c:	jmp    0x140018099
   140018211:	cmp    ecx,0x3f
   140018214:	je     0x140018243
   140018216:	cmp    ecx,0x40
   140018219:	jle    0x14001825d
   14001821b:	cmp    ecx,0x42
   14001821e:	jle    0x1400185a8
   140018224:	cmp    ecx,0x43
   140018227:	jne    0x14001825d
   140018229:	lea    rdx,[rip+0x1b5f8]        # 0x140033828
   140018230:	lea    rcx,[rbp-0x79]
   140018234:	call   0x140019480
   140018239:	bts    DWORD PTR [rbp-0x71],0xc
   14001823e:	jmp    0x140018099
   140018243:	movsx  eax,BYTE PTR [rbx]
   140018246:	add    rbx,r8
   140018249:	mov    QWORD PTR [rip+0x26c68],rbx        # 0x14003eeb8
   140018250:	test   eax,eax
   140018252:	je     0x140018137
   140018258:	cmp    eax,0x30
   14001825b:	je     0x140018267
   14001825d:	mov    edx,0x2
   140018262:	jmp    0x140018144
   140018267:	xor    r8d,r8d
   14001826a:	lea    rdx,[rip+0x1ba77]        # 0x140033ce8
   140018271:	jmp    0x140018230
   140018273:	cmp    ecx,0x54
   140018276:	jg     0x1400184c2
   14001827c:	cmp    ecx,0x53
   14001827f:	jge    0x1400185a8
   140018285:	sub    ecx,0x50
   140018288:	je     0x140018470
   14001828e:	dec    ecx
   140018290:	je     0x140018113
   140018296:	dec    ecx
   140018298:	jne    0x14001825d
   14001829a:	movsx  rdx,BYTE PTR [rbx-0x1]
   14001829f:	lea    rbx,[rip+0xfffffffffffe7d5a]        # 0x140000000
   1400182a6:	lea    rcx,[rbp-0x69]
   1400182aa:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33318]
   1400182b2:	call   0x1400144f0
   1400182b7:	mov    rax,QWORD PTR [rip+0x26bfa]        # 0x14003eeb8
   1400182be:	mov    cl,BYTE PTR [rax]
   1400182c0:	test   cl,cl
   1400182c2:	jne    0x1400182de
   1400182c4:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   1400182c8:	mov    edx,0x1
   1400182cd:	mov    rcx,rdi
   1400182d0:	movdqu XMMWORD PTR [rdi],xmm0
   1400182d4:	call   0x140014af8
   1400182d9:	jmp    0x14001811b
   1400182de:	movsx  eax,cl
   1400182e1:	sub    eax,0x30
   1400182e4:	js     0x14001825d
   1400182ea:	movsxd rdx,eax
   1400182ed:	cmp    rdx,0x5
   1400182f1:	jae    0x14001825d
   1400182f7:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33640]
   1400182ff:	lea    rcx,[rbp-0x79]
   140018303:	call   0x1400144f0
   140018308:	mov    rcx,QWORD PTR [rip+0x26ba9]        # 0x14003eeb8
   14001830f:	movsx  eax,BYTE PTR [rcx]
   140018312:	inc    rcx
   140018315:	mov    QWORD PTR [rip+0x26b9c],rcx        # 0x14003eeb8
   14001831c:	cmp    eax,0x30
   14001831f:	je     0x140018432
   140018325:	cmp    eax,0x31
   140018328:	je     0x14001835f
   14001832a:	add    eax,0xffffffce
   14001832d:	cmp    eax,0x2
   140018330:	ja     0x14001834b
   140018332:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140018336:	lea    rdx,[rbp-0x79]
   14001833a:	mov    rcx,rdi
   14001833d:	movdqu XMMWORD PTR [rdi],xmm0
   140018341:	call   0x140014910
   140018346:	jmp    0x14001811b
   14001834b:	dec    rcx
   14001834e:	mov    edx,0x1
   140018353:	mov    QWORD PTR [rip+0x26b5e],rcx        # 0x14003eeb8
   14001835a:	jmp    0x140018144
   14001835f:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140018363:	lea    rdx,[rbp-0x79]
   140018367:	lea    rcx,[rbp-0x69]
   14001836b:	movdqa XMMWORD PTR [rbp-0x69],xmm0
   140018370:	call   0x140014910
   140018375:	lea    rcx,[rbp-0x29]
   140018379:	call   0x14001922c
   14001837e:	lea    rcx,[rbp-0x59]
   140018382:	mov    dl,0x2c
   140018384:	movups xmm0,XMMWORD PTR [rax]
   140018387:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   14001838c:	call   0x140014950
   140018391:	lea    rdx,[rbp-0x59]
   140018395:	lea    rcx,[rbp-0x69]
   140018399:	call   0x140014910
   14001839e:	lea    rcx,[rbp+0x37]
   1400183a2:	call   0x14001922c
   1400183a7:	lea    rcx,[rbp-0x59]
   1400183ab:	mov    dl,0x2c
   1400183ad:	movups xmm0,XMMWORD PTR [rax]
   1400183b0:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400183b5:	call   0x140014950
   1400183ba:	lea    rdx,[rbp-0x59]
   1400183be:	lea    rcx,[rbp-0x69]
   1400183c2:	call   0x140014910
   1400183c7:	lea    rcx,[rbp+0x17]
   1400183cb:	call   0x14001922c
   1400183d0:	lea    rcx,[rbp-0x59]
   1400183d4:	mov    dl,0x2c
   1400183d6:	movups xmm0,XMMWORD PTR [rax]
   1400183d9:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400183de:	call   0x140014950
   1400183e3:	lea    rdx,[rbp-0x59]
   1400183e7:	lea    rcx,[rbp-0x69]
   1400183eb:	call   0x140014910
   1400183f0:	lea    rcx,[rbp-0x19]
   1400183f4:	xor    edx,edx
   1400183f6:	call   0x1400170b4
   1400183fb:	lea    rcx,[rbp-0x59]
   1400183ff:	mov    dl,0x29
   140018401:	movups xmm0,XMMWORD PTR [rax]
   140018404:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140018409:	call   0x140014950
   14001840e:	lea    rdx,[rbp-0x59]
   140018412:	lea    rcx,[rbp-0x69]
   140018416:	call   0x140014910
   14001841b:	mov    dl,0x27
   14001841d:	mov    rcx,rdi
   140018420:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140018424:	movdqu XMMWORD PTR [rdi],xmm0
   140018428:	call   0x140014950
   14001842d:	jmp    0x14001811b
   140018432:	lea    rcx,[rbp-0x49]
   140018436:	xor    edx,edx
   140018438:	call   0x140016d5c
   14001843d:	lea    rcx,[rbp-0x59]
   140018441:	mov    dl,0x20
   140018443:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   140018447:	movdqa XMMWORD PTR [rbp-0x59],xmm0
   14001844c:	call   0x140014950
   140018451:	lea    rdx,[rbp-0x69]
   140018455:	lea    rcx,[rbp-0x59]
   140018459:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14001845d:	movdqa XMMWORD PTR [rbp-0x59],xmm0
   140018462:	call   0x140014910
   140018467:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14001846b:	jmp    0x140018336
   140018470:	movsx  rdx,BYTE PTR [rbx-0x1]
   140018475:	lea    rbx,[rip+0xfffffffffffe7b84]        # 0x140000000
   14001847c:	lea    rcx,[rbp-0x69]
   140018480:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33318]
   140018488:	call   0x1400144f0
   14001848d:	lea    rcx,[rbp+0x7]
   140018491:	xor    r8d,r8d
   140018494:	xor    edx,edx
   140018496:	call   0x140017f3c
   14001849b:	movups xmm0,XMMWORD PTR [rax]
   14001849e:	movq   rax,xmm0
   1400184a3:	movups XMMWORD PTR [rbp-0x79],xmm0
   1400184a7:	test   rax,rax
   1400184aa:	je     0x140018332
   1400184b0:	test   DWORD PTR [rbp-0x71],0x400
   1400184b7:	je     0x140018332
   1400184bd:	jmp    0x14001825d
   1400184c2:	cmp    ecx,0x56
   1400184c5:	jle    0x1400185c1
   1400184cb:	cmp    ecx,0x57
   1400184ce:	jle    0x14001825d
   1400184d4:	cmp    ecx,0x59
   1400184d7:	jle    0x1400185a8
   1400184dd:	cmp    ecx,0x5f
   1400184e0:	jne    0x14001825d
   1400184e6:	movsx  eax,BYTE PTR [rbx]
   1400184e9:	add    rbx,r8
   1400184ec:	mov    QWORD PTR [rip+0x269c5],rbx        # 0x14003eeb8
   1400184f3:	cmp    eax,0x41
   1400184f6:	jl     0x14001825d
   1400184fc:	cmp    eax,0x44
   1400184ff:	jle    0x14001850f
   140018501:	cmp    eax,0x46
   140018504:	jle    0x140018528
   140018506:	cmp    eax,0x4a
   140018509:	jg     0x14001825d
   14001850f:	movsx  rdx,BYTE PTR [rbx-0x1]
   140018514:	lea    rbx,[rip+0xfffffffffffe7ae5]        # 0x140000000
   14001851b:	mov    rdx,QWORD PTR [rbx+rdx*8+0x333e0]
   140018523:	jmp    0x1400181c4
   140018528:	movsx  rdx,BYTE PTR [rbx-0x1]
   14001852d:	lea    rbx,[rip+0xfffffffffffe7acc]        # 0x140000000
   140018534:	lea    rcx,[rbp-0x79]
   140018538:	mov    rdx,QWORD PTR [rbx+rdx*8+0x333e0]
   140018540:	call   0x14001409c
   140018545:	mov    rax,QWORD PTR [rip+0x2696c]        # 0x14003eeb8
   14001854c:	cmp    BYTE PTR [rax],0x3f
   14001854f:	jne    0x14001857e
   140018551:	lea    rcx,[rbp+0x27]
   140018555:	call   0x140016e40
   14001855a:	lea    rcx,[rbp-0x79]
   14001855e:	mov    rdx,rax
   140018561:	call   0x140014910
   140018566:	mov    rax,QWORD PTR [rip+0x2694b]        # 0x14003eeb8
   14001856d:	cmp    BYTE PTR [rax],0x40
   140018570:	jne    0x140018593
   140018572:	inc    rax
   140018575:	mov    QWORD PTR [rip+0x2693c],rax        # 0x14003eeb8
   14001857c:	jmp    0x140018593
   14001857e:	lea    rcx,[rbp-0x39]
   140018582:	call   0x14001956c
   140018587:	lea    rcx,[rbp-0x79]
   14001858b:	mov    rdx,rax
   14001858e:	call   0x140014910
   140018593:	lea    rdx,[rip+0x1b766]        # 0x140033d00
   14001859a:	lea    rcx,[rbp-0x79]
   14001859e:	call   0x140014a6c
   1400185a3:	jmp    0x140018099
   1400185a8:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400185ad:	lea    rbx,[rip+0xfffffffffffe7a4c]        # 0x140000000
   1400185b4:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33318]
   1400185bc:	jmp    0x1400181c4
   1400185c1:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400185c6:	lea    rbx,[rip+0xfffffffffffe7a33]        # 0x140000000
   1400185cd:	mov    rdx,QWORD PTR [rbx+rdx*8+0x33318]
   1400185d5:	jmp    0x140017fcf
   1400185da:	mov    esi,r8d
   1400185dd:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400185e2:	lea    rbx,[rip+0xfffffffffffe7a17]        # 0x140000000
   1400185e9:	lea    rcx,[rbp-0x69]
   1400185ed:	mov    rdx,QWORD PTR [rbx+rdx*8+0x331f8]
   1400185f5:	call   0x1400144f0
   1400185fa:	test   esi,esi
   1400185fc:	je     0x140017fd8
   140018602:	cmp    QWORD PTR [rbp-0x69],0x0
   140018607:	je     0x140018113
   14001860d:	bts    DWORD PTR [rbp-0x61],0x9
   140018612:	jmp    0x140018113
   140018617:	int3   
   140018618:	rex push rbx
   14001861a:	sub    rsp,0x20
   14001861e:	lea    r9,[rip+0x1b13b]        # 0x140033760
   140018625:	mov    rbx,rcx
   140018628:	call   0x140018978
   14001862d:	mov    rax,rbx
   140018630:	add    rsp,0x20
   140018634:	pop    rbx
   140018635:	ret    
   140018636:	int3   
   140018637:	int3   
   140018638:	rex push rbx
   14001863a:	sub    rsp,0x20
   14001863e:	lea    r9,[rip+0x1743f]        # 0x14002fa84
   140018645:	mov    rbx,rcx
   140018648:	call   0x140018978
   14001864d:	mov    rax,rbx
   140018650:	add    rsp,0x20
   140018654:	pop    rbx
   140018655:	ret    
   140018656:	int3   
   140018657:	int3   
   140018658:	mov    QWORD PTR [rsp+0x8],rbx
   14001865d:	mov    QWORD PTR [rsp+0x10],rdi
   140018662:	push   rbp
   140018663:	mov    rbp,rsp
   140018666:	sub    rsp,0x60
   14001866a:	mov    r8,QWORD PTR [rip+0x26847]        # 0x14003eeb8
   140018671:	and    QWORD PTR [rbp-0x30],0x0
   140018676:	mov    rbx,rcx
   140018679:	movsx  ecx,BYTE PTR [r8]
   14001867d:	mov    rdi,rdx
   140018680:	mov    edx,0xffff0000
   140018685:	and    DWORD PTR [rbp-0x28],edx
   140018688:	test   ecx,ecx
   14001868a:	je     0x14001883a
   140018690:	sub    ecx,0x24
   140018693:	je     0x140018713
   140018695:	sub    ecx,0x1d
   140018698:	je     0x1400186d6
   14001869a:	dec    ecx
   14001869c:	je     0x1400186ae
   14001869e:	mov    rdx,rdi
   1400186a1:	mov    rcx,rbx
   1400186a4:	call   0x1400160f4
   1400186a9:	jmp    0x14001885a
   1400186ae:	lea    rdx,[rip+0x1b80b]        # 0x140033ec0
   1400186b5:	lea    rcx,[rbp-0x30]
   1400186b9:	call   0x1400144f0
   1400186be:	cmp    QWORD PTR [rdi],0x0
   1400186c2:	je     0x1400186cf
   1400186c4:	lea    rcx,[rbp-0x30]
   1400186c8:	mov    dl,0x20
   1400186ca:	call   0x140014950
   1400186cf:	mov    r8,QWORD PTR [rip+0x267e2]        # 0x14003eeb8
   1400186d6:	lea    r9,[rip+0x1b097]        # 0x140033774
   1400186dd:	movups xmm0,XMMWORD PTR [rdi]
   1400186e0:	inc    r8
   1400186e3:	lea    rdx,[rbp-0x30]
   1400186e7:	mov    QWORD PTR [rip+0x267ca],r8        # 0x14003eeb8
   1400186ee:	lea    r8,[rbp-0x20]
   1400186f2:	mov    rcx,rbx
   1400186f5:	movups XMMWORD PTR [rbp-0x20],xmm0
   1400186f9:	psrldq xmm0,0x8
   1400186fe:	movd   eax,xmm0
   140018702:	bts    eax,0x8
   140018706:	mov    DWORD PTR [rbp-0x18],eax
   140018709:	call   0x140018978
   14001870e:	jmp    0x14001885a
   140018713:	mov    al,BYTE PTR [r8+0x1]
   140018717:	cmp    al,0x24
   140018719:	je     0x140018735
   14001871b:	test   al,al
   14001871d:	je     0x14001883a
   140018723:	mov    rcx,rbx
   140018726:	mov    edx,0x2
   14001872b:	call   0x1400140e4
   140018730:	jmp    0x14001885a
   140018735:	add    r8,0x2
   140018739:	mov    QWORD PTR [rip+0x26778],r8        # 0x14003eeb8
   140018740:	movsx  ecx,BYTE PTR [r8]
   140018744:	test   ecx,ecx
   140018746:	je     0x14001883a
   14001874c:	sub    ecx,0x41
   14001874f:	je     0x140018823
   140018755:	dec    ecx
   140018757:	je     0x140018806
   14001875d:	dec    ecx
   14001875f:	je     0x1400187d0
   140018761:	sub    ecx,0xe
   140018764:	je     0x1400187c4
   140018766:	dec    ecx
   140018768:	je     0x14001879c
   14001876a:	dec    ecx
   14001876c:	je     0x140018790
   14001876e:	dec    ecx
   140018770:	mov    rcx,rbx
   140018773:	jne    0x140018726
   140018775:	inc    r8
   140018778:	lea    rdx,[rip+0x1b751]        # 0x140033ed0
   14001877f:	mov    QWORD PTR [rip+0x26732],r8        # 0x14003eeb8
   140018786:	call   0x14001409c
   14001878b:	jmp    0x14001885a
   140018790:	inc    r8
   140018793:	mov    QWORD PTR [rip+0x2671e],r8        # 0x14003eeb8
   14001879a:	jmp    0x140018723
   14001879c:	lea    rdx,[rip+0x1b71d]        # 0x140033ec0
   1400187a3:	lea    rcx,[rbp-0x30]
   1400187a7:	call   0x1400144f0
   1400187ac:	cmp    QWORD PTR [rdi],0x0
   1400187b0:	je     0x1400187bd
   1400187b2:	lea    rcx,[rbp-0x30]
   1400187b6:	mov    dl,0x20
   1400187b8:	call   0x140014950
   1400187bd:	mov    r8,QWORD PTR [rip+0x266f4]        # 0x14003eeb8
   1400187c4:	lea    r9,[rip+0x1afdd]        # 0x1400337a8
   1400187cb:	jmp    0x1400186dd
   1400187d0:	and    DWORD PTR [rbp-0x28],edx
   1400187d3:	and    QWORD PTR [rbp-0x30],0x0
   1400187d8:	and    DWORD PTR [rsp+0x20],0x0
   1400187dd:	inc    r8
   1400187e0:	lea    r9,[rbp-0x30]
   1400187e4:	lea    rcx,[rbp-0x10]
   1400187e8:	mov    QWORD PTR [rip+0x266c9],r8        # 0x14003eeb8
   1400187ef:	lea    r8,[rip+0x1728e]        # 0x14002fa84
   1400187f6:	mov    rdx,rdi
   1400187f9:	call   0x140016620
   1400187fe:	mov    rdx,rax
   140018801:	jmp    0x1400186a1
   140018806:	inc    r8
   140018809:	mov    rdx,rdi
   14001880c:	mov    rcx,rbx
   14001880f:	mov    QWORD PTR [rip+0x266a2],r8        # 0x14003eeb8
   140018816:	mov    r8d,0x1
   14001881c:	call   0x140018870
   140018821:	jmp    0x14001885a
   140018823:	inc    r8
   140018826:	mov    rdx,rdi
   140018829:	mov    rcx,rbx
   14001882c:	mov    QWORD PTR [rip+0x26685],r8        # 0x14003eeb8
   140018833:	call   0x140017810
   140018838:	jmp    0x14001885a
   14001883a:	lea    rcx,[rbp-0x20]
   14001883e:	mov    edx,0x1
   140018843:	call   0x1400140e4
   140018848:	mov    rdx,rdi
   14001884b:	mov    rcx,rbx
   14001884e:	movups xmm0,XMMWORD PTR [rax]
   140018851:	movdqu XMMWORD PTR [rbx],xmm0
   140018855:	call   0x140014910
   14001885a:	mov    rdi,QWORD PTR [rsp+0x78]
   14001885f:	mov    rax,rbx
   140018862:	mov    rbx,QWORD PTR [rsp+0x70]
   140018867:	add    rsp,0x60
   14001886b:	pop    rbp
   14001886c:	ret    
   14001886d:	int3   
   14001886e:	int3   
   14001886f:	int3   
   140018870:	mov    QWORD PTR [rsp+0x8],rbx
   140018875:	mov    QWORD PTR [rsp+0x10],rdi
   14001887a:	push   rbp
   14001887b:	mov    rbp,rsp
   14001887e:	sub    rsp,0x50
   140018882:	mov    rax,QWORD PTR [rip+0x2662f]        # 0x14003eeb8
   140018889:	mov    rdi,rdx
   14001888c:	mov    rbx,rcx
   14001888f:	cmp    BYTE PTR [rax],0x0
   140018892:	je     0x140018944
   140018898:	test   r8d,r8d
   14001889b:	je     0x1400188d5
   14001889d:	cmp    BYTE PTR [rax],0x58
   1400188a0:	jne    0x1400188d5
   1400188a2:	inc    rax
   1400188a5:	mov    QWORD PTR [rip+0x2660c],rax        # 0x14003eeb8
   1400188ac:	cmp    QWORD PTR [rdx],0x0
   1400188b0:	jne    0x1400188c3
   1400188b2:	lea    rdx,[rip+0x1b46f]        # 0x140033d28
   1400188b9:	call   0x14001409c
   1400188be:	jmp    0x140018964
   1400188c3:	lea    rdx,[rip+0x1b5ea]        # 0x140033eb4
   1400188ca:	lea    rcx,[rbp-0x20]
   1400188ce:	call   0x14001409c
   1400188d3:	jmp    0x140018952
   1400188d5:	cmp    BYTE PTR [rax],0x59
   1400188d8:	jne    0x1400188eb
   1400188da:	inc    rax
   1400188dd:	mov    QWORD PTR [rip+0x265d4],rax        # 0x14003eeb8
   1400188e4:	call   0x140015df0
   1400188e9:	jmp    0x140018964
   1400188eb:	lea    rcx,[rbp-0x30]
   1400188ef:	call   0x1400160f4
   1400188f4:	test   DWORD PTR [rdi+0x8],0x4000
   1400188fb:	je     0x140018928
   1400188fd:	lea    rdx,[rip+0x1b72c]        # 0x140034030
   140018904:	lea    rcx,[rbp-0x10]
   140018908:	call   0x14001409c
   14001890d:	lea    rdx,[rbp-0x30]
   140018911:	lea    rcx,[rbp-0x20]
   140018915:	movups xmm0,XMMWORD PTR [rax]
   140018918:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14001891d:	call   0x140014910
   140018922:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140018926:	jmp    0x14001893e
   140018928:	test   DWORD PTR [rdi+0x8],0x2000
   14001892f:	je     0x14001893a
   140018931:	lea    rdx,[rip+0x1b708]        # 0x140034040
   140018938:	jmp    0x140018904
   14001893a:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001893e:	movdqu XMMWORD PTR [rbx],xmm0
   140018942:	jmp    0x140018964
   140018944:	lea    rcx,[rbp-0x10]
   140018948:	mov    edx,0x1
   14001894d:	call   0x1400140e4
   140018952:	movups xmm0,XMMWORD PTR [rax]
   140018955:	mov    rdx,rdi
   140018958:	mov    rcx,rbx
   14001895b:	movdqu XMMWORD PTR [rbx],xmm0
   14001895f:	call   0x140014910
   140018964:	mov    rdi,QWORD PTR [rsp+0x68]
   140018969:	mov    rax,rbx
   14001896c:	mov    rbx,QWORD PTR [rsp+0x60]
   140018971:	add    rsp,0x50
   140018975:	pop    rbp
   140018976:	ret    
   140018977:	int3   
   140018978:	mov    QWORD PTR [rsp+0x8],rbx
   14001897d:	mov    QWORD PTR [rsp+0x10],rsi
   140018982:	mov    QWORD PTR [rsp+0x18],rdi
   140018987:	push   rbp
   140018988:	push   r14
   14001898a:	push   r15
   14001898c:	mov    rbp,rsp
   14001898f:	sub    rsp,0x40
   140018993:	mov    rax,QWORD PTR [rip+0x2651e]        # 0x14003eeb8
   14001899a:	mov    rsi,rcx
   14001899d:	xor    ebx,ebx
   14001899f:	mov    cl,BYTE PTR [rax]
   1400189a1:	mov    r15,r9
   1400189a4:	mov    rdi,r8
   1400189a7:	mov    r14,rdx
   1400189aa:	test   cl,cl
   1400189ac:	je     0x140018a39
   1400189b2:	lea    eax,[rcx-0x36]
   1400189b5:	cmp    al,0x3
   1400189b7:	jbe    0x1400189ef
   1400189b9:	cmp    cl,0x5f
   1400189bc:	je     0x1400189ef
   1400189be:	mov    r9,rdx
   1400189c1:	lea    rcx,[rbp-0x10]
   1400189c5:	mov    r8,r15
   1400189c8:	mov    rdx,rdi
   1400189cb:	mov    DWORD PTR [rsp+0x20],ebx
   1400189cf:	call   0x140016620
   1400189d4:	cmp    BYTE PTR [r15],0x2a
   1400189d8:	lea    rdx,[rbp-0x10]
   1400189dc:	sete   bl
   1400189df:	mov    rcx,rsi
   1400189e2:	mov    r8d,ebx
   1400189e5:	call   0x140018870
   1400189ea:	jmp    0x140018a8d
   1400189ef:	lea    rcx,[rbp-0x10]
   1400189f3:	mov    rdx,r9
   1400189f6:	call   0x14001409c
   1400189fb:	cmp    QWORD PTR [r14],rbx
   1400189fe:	je     0x140018a1a
   140018a00:	cmp    QWORD PTR [rdi],rbx
   140018a03:	je     0x140018a0e
   140018a05:	test   DWORD PTR [rdi+0x8],0x100
   140018a0c:	jne    0x140018a1a
   140018a0e:	lea    rcx,[rbp-0x10]
   140018a12:	mov    rdx,r14
   140018a15:	call   0x140014910
   140018a1a:	cmp    QWORD PTR [rdi],rbx
   140018a1d:	je     0x140018a2b
   140018a1f:	lea    rcx,[rbp-0x10]
   140018a23:	mov    rdx,rdi
   140018a26:	call   0x140014910
   140018a2b:	lea    rdx,[rbp-0x10]
   140018a2f:	mov    rcx,rsi
   140018a32:	call   0x140017810
   140018a37:	jmp    0x140018a8d
   140018a39:	lea    rcx,[rbp-0x10]
   140018a3d:	mov    edx,0x1
   140018a42:	call   0x1400140e4
   140018a47:	lea    rcx,[rbp-0x10]
   140018a4b:	mov    rdx,r15
   140018a4e:	call   0x140014a6c
   140018a53:	cmp    QWORD PTR [r14],rbx
   140018a56:	je     0x140018a64
   140018a58:	lea    rcx,[rbp-0x10]
   140018a5c:	mov    rdx,r14
   140018a5f:	call   0x140014910
   140018a64:	cmp    QWORD PTR [rdi],rbx
   140018a67:	je     0x140018a85
   140018a69:	cmp    QWORD PTR [r14],rbx
   140018a6c:	je     0x140018a79
   140018a6e:	lea    rcx,[rbp-0x10]
   140018a72:	mov    dl,0x20
   140018a74:	call   0x140014950
   140018a79:	lea    rcx,[rbp-0x10]
   140018a7d:	mov    rdx,rdi
   140018a80:	call   0x140014910
   140018a85:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140018a89:	movdqu XMMWORD PTR [rsi],xmm0
   140018a8d:	mov    rbx,QWORD PTR [rsp+0x60]
   140018a92:	mov    rdi,QWORD PTR [rsp+0x70]
   140018a97:	mov    rax,rsi
   140018a9a:	mov    rsi,QWORD PTR [rsp+0x68]
   140018a9f:	add    rsp,0x40
   140018aa3:	pop    r15
   140018aa5:	pop    r14
   140018aa7:	pop    rbp
   140018aa8:	ret    
   140018aa9:	int3   
   140018aaa:	int3   
   140018aab:	int3   
   140018aac:	rex push rbx
   140018aae:	sub    rsp,0x20
   140018ab2:	mov    rbx,rcx
   140018ab5:	call   0x140018978
   140018aba:	mov    rax,rbx
   140018abd:	add    rsp,0x20
   140018ac1:	pop    rbx
   140018ac2:	ret    
   140018ac3:	int3   
   140018ac4:	mov    r11,rsp
   140018ac7:	mov    QWORD PTR [r11+0x8],rbx
   140018acb:	mov    QWORD PTR [r11+0x10],rsi
   140018acf:	push   rdi
   140018ad0:	sub    rsp,0x30
   140018ad4:	mov    rax,QWORD PTR [rip+0x263dd]        # 0x14003eeb8
   140018adb:	mov    rbx,rcx
   140018ade:	cmp    BYTE PTR [rax],0x5f
   140018ae1:	jne    0x140018bc9
   140018ae7:	inc    rax
   140018aea:	mov    QWORD PTR [rip+0x263c7],rax        # 0x14003eeb8
   140018af1:	movsx  esi,BYTE PTR [rax]
   140018af4:	inc    rax
   140018af7:	sub    esi,0x41
   140018afa:	mov    QWORD PTR [rip+0x263b7],rax        # 0x14003eeb8
   140018b01:	cmp    esi,0x3
   140018b04:	ja     0x140018ba6
   140018b0a:	and    QWORD PTR [r11-0x18],0x0
   140018b0f:	mov    eax,DWORD PTR [rip+0x263bf]        # 0x14003eed4
   140018b15:	and    DWORD PTR [rsp+0x28],0xffff0000
   140018b1d:	shr    eax,1
   140018b1f:	not    eax
   140018b21:	test   al,0x1
   140018b23:	je     0x140018bbe
   140018b29:	lea    rdx,[rip+0x1b228]        # 0x140033d58
   140018b30:	lea    rcx,[r11-0x18]
   140018b34:	call   0x140014a6c
   140018b39:	mov    eax,DWORD PTR [rip+0x26395]        # 0x14003eed4
   140018b3f:	mov    rdx,QWORD PTR [rip+0x1a86a]        # 0x1400333b0
   140018b46:	not    eax
   140018b48:	test   al,0x1
   140018b4a:	jne    0x140018b50
   140018b4c:	add    rdx,0x2
   140018b50:	lea    rcx,[rsp+0x20]
   140018b55:	call   0x140014a6c
   140018b5a:	test   esi,esi
   140018b5c:	je     0x140018bb2
   140018b5e:	mov    edi,esi
   140018b60:	not    edi
   140018b62:	inc    edi
   140018b64:	and    edi,esi
   140018b66:	mov    eax,edi
   140018b68:	dec    eax
   140018b6a:	je     0x140018b79
   140018b6c:	dec    eax
   140018b6e:	jne    0x140018ba3
   140018b70:	lea    rdx,[rip+0x1b39d]        # 0x140033f14
   140018b77:	jmp    0x140018b80
   140018b79:	lea    rdx,[rip+0x1b390]        # 0x140033f10
   140018b80:	lea    rcx,[rsp+0x20]
   140018b85:	call   0x140014a6c
   140018b8a:	not    edi
   140018b8c:	and    esi,edi
   140018b8e:	je     0x140018bb2
   140018b90:	lea    rdx,[rip+0x1b381]        # 0x140033f18
   140018b97:	lea    rcx,[rsp+0x20]
   140018b9c:	call   0x140014a6c
   140018ba1:	jmp    0x140018b5e
   140018ba3:	mov    rcx,rbx
   140018ba6:	mov    edx,0x2
   140018bab:	call   0x1400140e4
   140018bb0:	jmp    0x140018bd8
   140018bb2:	lea    rcx,[rsp+0x20]
   140018bb7:	mov    dl,0x29
   140018bb9:	call   0x140014950
   140018bbe:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140018bc3:	movdqu XMMWORD PTR [rbx],xmm0
   140018bc7:	jmp    0x140018bd8
   140018bc9:	and    QWORD PTR [rcx],0x0
   140018bcd:	mov    BYTE PTR [rcx+0x8],0x0
   140018bd1:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140018bd8:	mov    rsi,QWORD PTR [rsp+0x48]
   140018bdd:	mov    rax,rbx
   140018be0:	mov    rbx,QWORD PTR [rsp+0x40]
   140018be5:	add    rsp,0x30
   140018be9:	pop    rdi
   140018bea:	ret    
   140018beb:	int3   
   140018bec:	rex push rbx
   140018bee:	sub    rsp,0x20
   140018bf2:	mov    rax,QWORD PTR [rip+0x262bf]        # 0x14003eeb8
   140018bf9:	mov    rbx,rcx
   140018bfc:	cmp    BYTE PTR [rax],0x40
   140018bff:	jne    0x140018c12
   140018c01:	inc    rax
   140018c04:	mov    QWORD PTR [rip+0x262ad],rax        # 0x14003eeb8
   140018c0b:	call   0x140014014
   140018c10:	jmp    0x140018c17
   140018c12:	call   0x140016d5c
   140018c17:	mov    rax,rbx
   140018c1a:	add    rsp,0x20
   140018c1e:	pop    rbx
   140018c1f:	ret    
   140018c20:	mov    rax,rsp
   140018c23:	mov    QWORD PTR [rax+0x8],rbx
   140018c27:	mov    QWORD PTR [rax+0x10],rsi
   140018c2b:	mov    QWORD PTR [rax+0x18],rdi
   140018c2f:	mov    QWORD PTR [rax+0x20],r14
   140018c33:	push   rbp
   140018c34:	lea    rbp,[rax-0x138]
   140018c3b:	sub    rsp,0x230
   140018c42:	xor    r14d,r14d
   140018c45:	mov    rdi,rcx
   140018c48:	mov    BYTE PTR [rcx+0x8],r14b
   140018c4c:	mov    eax,DWORD PTR [rcx+0x8]
   140018c4f:	mov    QWORD PTR [rcx],r14
   140018c52:	and    eax,0xffff00ff
   140018c57:	mov    sil,r14b
   140018c5a:	mov    DWORD PTR [rcx+0x8],eax
   140018c5d:	test   al,al
   140018c5f:	jne    0x140019079
   140018c65:	mov    rax,QWORD PTR [rip+0x2624c]        # 0x14003eeb8
   140018c6c:	test   BYTE PTR [rax],0xbf
   140018c6f:	je     0x140019079
   140018c75:	cmp    BYTE PTR [rip+0x2625c],r14b        # 0x14003eed8
   140018c7c:	je     0x140018c8b
   140018c7e:	cmp    BYTE PTR [rip+0x26254],r14b        # 0x14003eed9
   140018c85:	je     0x1400190f2
   140018c8b:	cmp    QWORD PTR [rdi],r14
   140018c8e:	je     0x140018cf1
   140018c90:	lea    rdx,[rip+0x1b01d]        # 0x140033cb4
   140018c97:	lea    rcx,[rbp+0xd0]
   140018c9e:	call   0x14001409c
   140018ca3:	lea    rcx,[rbp-0x10]
   140018ca7:	mov    rdx,rdi
   140018caa:	movups xmm0,XMMWORD PTR [rax]
   140018cad:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140018cb2:	call   0x140014910
   140018cb7:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140018cbb:	movdqu XMMWORD PTR [rdi],xmm0
   140018cbf:	test   sil,sil
   140018cc2:	je     0x140018cf1
   140018cc4:	lea    rcx,[rbp+0x120]
   140018ccb:	mov    dl,0x5b
   140018ccd:	call   0x140013fdc
   140018cd2:	lea    rcx,[rbp-0x80]
   140018cd6:	mov    rdx,rdi
   140018cd9:	movups xmm0,XMMWORD PTR [rax]
   140018cdc:	movdqu XMMWORD PTR [rbp-0x80],xmm0
   140018ce1:	call   0x140014910
   140018ce6:	movups xmm0,XMMWORD PTR [rbp-0x80]
   140018cea:	mov    sil,r14b
   140018ced:	movdqu XMMWORD PTR [rdi],xmm0
   140018cf1:	mov    rax,QWORD PTR [rip+0x261c0]        # 0x14003eeb8
   140018cf8:	cmp    BYTE PTR [rax],0x3f
   140018cfb:	jne    0x140019043
   140018d01:	inc    rax
   140018d04:	mov    QWORD PTR [rip+0x261ad],rax        # 0x14003eeb8
   140018d0b:	movsx  ecx,BYTE PTR [rax]
   140018d0e:	sub    ecx,0x24
   140018d11:	je     0x14001900e
   140018d17:	dec    ecx
   140018d19:	je     0x140018fb5
   140018d1f:	sub    ecx,0x1a
   140018d22:	je     0x140018ef0
   140018d28:	sub    ecx,0x2
   140018d2b:	je     0x140018fb5
   140018d31:	sub    ecx,0x8
   140018d34:	je     0x140018ea4
   140018d3a:	cmp    ecx,0x8
   140018d3d:	je     0x140018dab
   140018d3f:	lea    rcx,[rbp+0x110]
   140018d46:	xor    edx,edx
   140018d48:	call   0x1400170b4
   140018d4d:	lea    rcx,[rbp+0xb0]
   140018d54:	mov    dl,0x60
   140018d56:	mov    rbx,rax
   140018d59:	call   0x140013fdc
   140018d5e:	lea    rcx,[rsp+0x70]
   140018d63:	mov    rdx,rax
   140018d66:	call   0x140013fd0
   140018d6b:	lea    rcx,[rsp+0x70]
   140018d70:	mov    rdx,rbx
   140018d73:	call   0x140014910
   140018d78:	lea    rcx,[rbp+0x30]
   140018d7c:	mov    dl,0x27
   140018d7e:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140018d83:	movdqa XMMWORD PTR [rbp+0x30],xmm0
   140018d88:	call   0x140014950
   140018d8d:	lea    rcx,[rbp-0x70]
   140018d91:	mov    rdx,rdi
   140018d94:	movaps xmm0,XMMWORD PTR [rbp+0x30]
   140018d98:	movdqa XMMWORD PTR [rbp-0x70],xmm0
   140018d9d:	call   0x140014910
   140018da2:	movaps xmm0,XMMWORD PTR [rbp-0x70]
   140018da6:	jmp    0x14001906c
   140018dab:	and    DWORD PTR [rsp+0x28],0xffff0000
   140018db3:	inc    QWORD PTR [rip+0x260fe]        # 0x14003eeb8
   140018dba:	mov    QWORD PTR [rsp+0x20],r14
   140018dbf:	lea    rcx,[rsp+0x40]
   140018dc4:	xor    r8d,r8d
   140018dc7:	mov    dl,0x1
   140018dc9:	call   0x14001a66c
   140018dce:	cmp    BYTE PTR [rsp+0x48],r14b
   140018dd3:	jne    0x140018e19
   140018dd5:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140018dda:	cmp    QWORD PTR [rsp+0x20],r14
   140018ddf:	je     0x140018e11
   140018de1:	lea    rdx,[rip+0x1aecc]        # 0x140033cb4
   140018de8:	lea    rcx,[rbp+0x50]
   140018dec:	movdqa XMMWORD PTR [rbp+0x50],xmm0
   140018df1:	call   0x140014a6c
   140018df6:	lea    rdx,[rsp+0x20]
   140018dfb:	lea    rcx,[rbp+0x0]
   140018dff:	movaps xmm0,XMMWORD PTR [rbp+0x50]
   140018e03:	movdqa XMMWORD PTR [rbp+0x0],xmm0
   140018e08:	call   0x140014910
   140018e0d:	movaps xmm0,XMMWORD PTR [rbp+0x0]
   140018e11:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140018e17:	jmp    0x140018e2e
   140018e19:	mov    eax,DWORD PTR [rsp+0x28]
   140018e1d:	mov    QWORD PTR [rsp+0x20],r14
   140018e22:	and    eax,0xffff0002
   140018e27:	or     eax,0x2
   140018e2a:	mov    DWORD PTR [rsp+0x28],eax
   140018e2e:	cmp    BYTE PTR [rsp+0x28],r14b
   140018e33:	jne    0x140018e91
   140018e35:	mov    rax,QWORD PTR [rip+0x2607c]        # 0x14003eeb8
   140018e3c:	cmp    BYTE PTR [rax],0x40
   140018e3f:	jne    0x140018dbf
   140018e45:	lea    rcx,[rbp+0xf0]
   140018e4c:	mov    dl,0x5b
   140018e4e:	call   0x140013fdc
   140018e53:	lea    rdx,[rsp+0x20]
   140018e58:	lea    rcx,[rbp-0x40]
   140018e5c:	movups xmm0,XMMWORD PTR [rax]
   140018e5f:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140018e64:	call   0x140014910
   140018e69:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140018e6d:	lea    rcx,[rbp+0x40]
   140018e71:	mov    dl,0x5d
   140018e73:	movdqa XMMWORD PTR [rbp+0x40],xmm0
   140018e78:	call   0x140014950
   140018e7d:	movaps xmm0,XMMWORD PTR [rbp+0x40]
   140018e81:	movdqu XMMWORD PTR [rdi],xmm0
   140018e85:	inc    QWORD PTR [rip+0x2602c]        # 0x14003eeb8
   140018e8c:	jmp    0x140019070
   140018e91:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140018e98:	mov    QWORD PTR [rdi],r14
   140018e9b:	mov    BYTE PTR [rdi+0x8],0x2
   140018e9f:	jmp    0x140019070
   140018ea4:	inc    QWORD PTR [rip+0x2600d]        # 0x14003eeb8
   140018eab:	lea    rcx,[rbp+0x80]
   140018eb2:	xor    r8d,r8d
   140018eb5:	mov    dl,0x1
   140018eb7:	call   0x14001a66c
   140018ebc:	lea    rcx,[rbp-0x20]
   140018ec0:	mov    dl,0x5d
   140018ec2:	movups xmm0,XMMWORD PTR [rax]
   140018ec5:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140018eca:	call   0x140014950
   140018ecf:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140018ed3:	lea    rcx,[rbp+0x20]
   140018ed7:	mov    rdx,rdi
   140018eda:	movdqa XMMWORD PTR [rbp+0x20],xmm0
   140018edf:	call   0x140014910
   140018ee4:	mov    sil,0x1
   140018ee7:	movaps xmm0,XMMWORD PTR [rbp+0x20]
   140018eeb:	jmp    0x14001906c
   140018ef0:	mov    rax,QWORD PTR [rip+0x25fc1]        # 0x14003eeb8
   140018ef7:	lea    rcx,[rax+0x1]
   140018efb:	cmp    BYTE PTR [rcx],0x5f
   140018efe:	jne    0x140018f4f
   140018f00:	cmp    BYTE PTR [rax+0x2],0x3f
   140018f04:	jne    0x140018f4f
   140018f06:	mov    QWORD PTR [rip+0x25fab],rcx        # 0x14003eeb8
   140018f0d:	lea    rcx,[rbp+0x90]
   140018f14:	xor    r8d,r8d
   140018f17:	xor    edx,edx
   140018f19:	call   0x140017f3c
   140018f1e:	lea    rcx,[rbp-0x60]
   140018f22:	mov    rdx,rdi
   140018f25:	movups xmm0,XMMWORD PTR [rax]
   140018f28:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   140018f2d:	call   0x140014910
   140018f32:	movups xmm0,XMMWORD PTR [rbp-0x60]
   140018f36:	movdqu XMMWORD PTR [rdi],xmm0
   140018f3a:	mov    rax,QWORD PTR [rip+0x25f77]        # 0x14003eeb8
   140018f41:	cmp    BYTE PTR [rax],0x40
   140018f44:	jne    0x140019070
   140018f4a:	jmp    0x140018e85
   140018f4f:	lea    rcx,[rbp+0xa0]
   140018f56:	call   0x140016e40
   140018f5b:	lea    rcx,[rbp+0xc0]
   140018f62:	mov    dl,0x60
   140018f64:	mov    rbx,rax
   140018f67:	call   0x140013fdc
   140018f6c:	lea    rcx,[rbp-0x50]
   140018f70:	mov    rdx,rbx
   140018f73:	movups xmm0,XMMWORD PTR [rax]
   140018f76:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   140018f7b:	call   0x140014910
   140018f80:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   140018f84:	lea    rcx,[rbp-0x30]
   140018f88:	mov    dl,0x27
   140018f8a:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140018f8f:	call   0x140014950
   140018f94:	lea    rcx,[rsp+0x50]
   140018f99:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140018f9d:	mov    rdx,rdi
   140018fa0:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140018fa6:	call   0x140014910
   140018fab:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140018fb0:	jmp    0x14001906c
   140018fb5:	lea    rdx,[rip+0x25efc]        # 0x14003eeb8
   140018fbc:	lea    rcx,[rbp+0x60]
   140018fc0:	mov    r8b,0x40
   140018fc3:	call   0x140013ef0
   140018fc8:	lea    rdx,[rip+0x1ad19]        # 0x140033ce8
   140018fcf:	lea    rcx,[rbp+0xe0]
   140018fd6:	call   0x14001409c
   140018fdb:	lea    rcx,[rbp+0x10]
   140018fdf:	mov    rdx,rdi
   140018fe2:	movups xmm0,XMMWORD PTR [rax]
   140018fe5:	movdqu XMMWORD PTR [rbp+0x10],xmm0
   140018fea:	call   0x140014910
   140018fef:	movups xmm0,XMMWORD PTR [rbp+0x10]
   140018ff3:	movdqu XMMWORD PTR [rdi],xmm0
   140018ff7:	mov    rcx,QWORD PTR [rip+0x25eaa]        # 0x14003eea8
   140018ffe:	cmp    DWORD PTR [rcx],0x9
   140019001:	je     0x140019070
   140019003:	lea    rdx,[rbp+0x60]
   140019007:	call   0x140014b3c
   14001900c:	jmp    0x140019070
   14001900e:	dec    QWORD PTR [rip+0x25ea3]        # 0x14003eeb8
   140019015:	lea    rcx,[rbp+0x100]
   14001901c:	xor    r8d,r8d
   14001901f:	mov    dl,0x1
   140019021:	call   0x14001a66c
   140019026:	lea    rcx,[rsp+0x60]
   14001902b:	mov    rdx,rdi
   14001902e:	movups xmm0,XMMWORD PTR [rax]
   140019031:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   140019037:	call   0x140014910
   14001903c:	movups xmm0,XMMWORD PTR [rsp+0x60]
   140019041:	jmp    0x14001906c
   140019043:	lea    rcx,[rbp+0x70]
   140019047:	xor    r8d,r8d
   14001904a:	mov    dl,0x1
   14001904c:	call   0x14001a66c
   140019051:	lea    rcx,[rsp+0x30]
   140019056:	mov    rdx,rdi
   140019059:	movups xmm0,XMMWORD PTR [rax]
   14001905c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140019062:	call   0x140014910
   140019067:	movups xmm0,XMMWORD PTR [rsp+0x30]
   14001906c:	movdqu XMMWORD PTR [rdi],xmm0
   140019070:	cmp    BYTE PTR [rdi+0x8],r14b
   140019074:	jmp    0x140018c5f
   140019079:	mov    rax,QWORD PTR [rip+0x25e38]        # 0x14003eeb8
   140019080:	cmp    BYTE PTR [rax],r14b
   140019083:	je     0x14001909a
   140019085:	cmp    BYTE PTR [rax],0x40
   140019088:	je     0x1400190f2
   14001908a:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140019091:	mov    QWORD PTR [rdi],r14
   140019094:	mov    BYTE PTR [rdi+0x8],0x2
   140019098:	jmp    0x1400190f2
   14001909a:	mov    edx,0x1
   14001909f:	cmp    QWORD PTR [rdi],r14
   1400190a2:	jne    0x1400190ae
   1400190a4:	mov    rcx,rdi
   1400190a7:	call   0x140014530
   1400190ac:	jmp    0x1400190f2
   1400190ae:	lea    rcx,[rbp+0x70]
   1400190b2:	call   0x1400140e4
   1400190b7:	lea    rdx,[rip+0x1abf6]        # 0x140033cb4
   1400190be:	lea    rcx,[rsp+0x30]
   1400190c3:	movups xmm0,XMMWORD PTR [rax]
   1400190c6:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400190cc:	call   0x140014a6c
   1400190d1:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400190d6:	lea    rcx,[rsp+0x30]
   1400190db:	mov    rdx,rdi
   1400190de:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400190e4:	call   0x140014910
   1400190e9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400190ee:	movdqu XMMWORD PTR [rdi],xmm0
   1400190f2:	lea    r11,[rsp+0x230]
   1400190fa:	mov    rax,rdi
   1400190fd:	mov    rbx,QWORD PTR [r11+0x10]
   140019101:	mov    rsi,QWORD PTR [r11+0x18]
   140019105:	mov    rdi,QWORD PTR [r11+0x20]
   140019109:	mov    r14,QWORD PTR [r11+0x28]
   14001910d:	mov    rsp,r11
   140019110:	pop    rbp
   140019111:	ret    
   140019112:	int3   
   140019113:	int3   
   140019114:	mov    QWORD PTR [rsp+0x8],rbx
   140019119:	push   rbp
   14001911a:	mov    rbp,rsp
   14001911d:	sub    rsp,0x40
   140019121:	and    QWORD PTR [rcx],0x0
   140019125:	mov    BYTE PTR [rcx+0x8],0x0
   140019129:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140019130:	mov    rbx,rcx
   140019133:	lea    rcx,[rbp-0x20]
   140019137:	xor    r8d,r8d
   14001913a:	mov    dl,0x1
   14001913c:	call   0x14001a66c
   140019141:	movups xmm0,XMMWORD PTR [rax]
   140019144:	movdqu XMMWORD PTR [rbx],xmm0
   140019148:	cmp    BYTE PTR [rbx+0x8],0x0
   14001914c:	mov    rax,QWORD PTR [rip+0x25d65]        # 0x14003eeb8
   140019153:	jne    0x1400191a4
   140019155:	cmp    BYTE PTR [rax],0x0
   140019158:	je     0x1400191a4
   14001915a:	cmp    BYTE PTR [rax],0x40
   14001915d:	je     0x1400191a9
   14001915f:	lea    rcx,[rbp-0x10]
   140019163:	call   0x140018c20
   140019168:	lea    rdx,[rip+0x1ab45]        # 0x140033cb4
   14001916f:	lea    rcx,[rbp-0x20]
   140019173:	movups xmm0,XMMWORD PTR [rax]
   140019176:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14001917b:	call   0x140014a6c
   140019180:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140019184:	lea    rcx,[rbp-0x20]
   140019188:	mov    rdx,rbx
   14001918b:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140019190:	call   0x140014910
   140019195:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140019199:	movdqu XMMWORD PTR [rbx],xmm0
   14001919d:	mov    rax,QWORD PTR [rip+0x25d14]        # 0x14003eeb8
   1400191a4:	cmp    BYTE PTR [rax],0x40
   1400191a7:	jne    0x1400191b5
   1400191a9:	inc    rax
   1400191ac:	mov    QWORD PTR [rip+0x25d05],rax        # 0x14003eeb8
   1400191b3:	jmp    0x14001921e
   1400191b5:	cmp    BYTE PTR [rax],0x0
   1400191b8:	je     0x1400191cb
   1400191ba:	and    DWORD PTR [rbx+0x8],0xffff00ff
   1400191c1:	and    QWORD PTR [rbx],0x0
   1400191c5:	mov    BYTE PTR [rbx+0x8],0x2
   1400191c9:	jmp    0x14001921e
   1400191cb:	cmp    QWORD PTR [rbx],0x0
   1400191cf:	mov    edx,0x1
   1400191d4:	jne    0x1400191e0
   1400191d6:	mov    rcx,rbx
   1400191d9:	call   0x140014530
   1400191de:	jmp    0x14001921e
   1400191e0:	lea    rcx,[rbp-0x10]
   1400191e4:	call   0x1400140e4
   1400191e9:	lea    rdx,[rip+0x1aac4]        # 0x140033cb4
   1400191f0:	lea    rcx,[rbp-0x20]
   1400191f4:	movups xmm0,XMMWORD PTR [rax]
   1400191f7:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   1400191fc:	call   0x140014a6c
   140019201:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140019205:	lea    rcx,[rbp-0x20]
   140019209:	mov    rdx,rbx
   14001920c:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140019211:	call   0x140014910
   140019216:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14001921a:	movdqu XMMWORD PTR [rbx],xmm0
   14001921e:	mov    rax,rbx
   140019221:	mov    rbx,QWORD PTR [rsp+0x50]
   140019226:	add    rsp,0x40
   14001922a:	pop    rbp
   14001922b:	ret    
   14001922c:	mov    QWORD PTR [rsp+0x8],rbx
   140019231:	push   rdi
   140019232:	sub    rsp,0x40
   140019236:	mov    rdi,rcx
   140019239:	mov    rcx,QWORD PTR [rip+0x25c78]        # 0x14003eeb8
   140019240:	mov    al,BYTE PTR [rcx]
   140019242:	test   al,al
   140019244:	jne    0x140019255
   140019246:	mov    edx,0x1
   14001924b:	mov    rcx,rdi
   14001924e:	call   0x1400140e4
   140019253:	jmp    0x14001929a
   140019255:	xor    edx,edx
   140019257:	cmp    al,0x3f
   140019259:	jne    0x140019292
   14001925b:	inc    rcx
   14001925e:	mov    QWORD PTR [rip+0x25c53],rcx        # 0x14003eeb8
   140019265:	lea    rcx,[rsp+0x20]
   14001926a:	call   0x1400170b4
   14001926f:	lea    rcx,[rsp+0x30]
   140019274:	mov    dl,0x2d
   140019276:	mov    rbx,rax
   140019279:	call   0x140013fdc
   14001927e:	mov    rdx,rbx
   140019281:	mov    rcx,rdi
   140019284:	movups xmm0,XMMWORD PTR [rax]
   140019287:	movdqu XMMWORD PTR [rdi],xmm0
   14001928b:	call   0x140014910
   140019290:	jmp    0x14001929a
   140019292:	mov    rcx,rdi
   140019295:	call   0x1400170b4
   14001929a:	mov    rax,rdi
   14001929d:	mov    rbx,QWORD PTR [rsp+0x50]
   1400192a2:	add    rsp,0x40
   1400192a6:	pop    rdi
   1400192a7:	ret    
   1400192a8:	mov    r11,rsp
   1400192ab:	push   rbx
   1400192ac:	sub    rsp,0x50
   1400192b0:	mov    rbx,rcx
   1400192b3:	xor    ecx,ecx
   1400192b5:	mov    eax,0xffff0000
   1400192ba:	mov    QWORD PTR [r11-0x28],rcx
   1400192be:	and    DWORD PTR [rsp+0x38],eax
   1400192c2:	mov    QWORD PTR [r11-0x18],rcx
   1400192c6:	and    DWORD PTR [rsp+0x48],eax
   1400192ca:	mov    DWORD PTR [rsp+0x20],ecx
   1400192ce:	lea    r9,[r11-0x28]
   1400192d2:	lea    r8,[rip+0x167ab]        # 0x14002fa84
   1400192d9:	lea    rdx,[r11-0x18]
   1400192dd:	mov    rcx,rbx
   1400192e0:	call   0x140016620
   1400192e5:	mov    rax,rbx
   1400192e8:	add    rsp,0x50
   1400192ec:	pop    rbx
   1400192ed:	ret    
   1400192ee:	int3   
   1400192ef:	int3   
   1400192f0:	mov    rcx,QWORD PTR [rcx]
   1400192f3:	test   rcx,rcx
   1400192f6:	jne    0x1400192fc
   1400192f8:	mov    rax,rdx
   1400192fb:	ret    
   1400192fc:	mov    rax,QWORD PTR [rcx]
   1400192ff:	rex.W jmp QWORD PTR [rax+0x10]
   140019303:	int3   
   140019304:	mov    QWORD PTR [rsp+0x8],rbx
   140019309:	mov    QWORD PTR [rsp+0x10],rsi
   14001930e:	push   rdi
   14001930f:	sub    rsp,0x20
   140019313:	mov    rdi,rcx
   140019316:	mov    rcx,QWORD PTR [rcx]
   140019319:	mov    esi,r8d
   14001931c:	mov    rbx,rdx
   14001931f:	test   rcx,rcx
   140019322:	je     0x140019370
   140019324:	test   rdx,rdx
   140019327:	jne    0x14001934b
   140019329:	mov    rax,QWORD PTR [rcx]
   14001932c:	call   QWORD PTR [rax]
   14001932e:	lea    rcx,[rip+0x25bab]        # 0x14003eee0
   140019335:	xor    r8d,r8d
   140019338:	lea    esi,[rax+0x1]
   14001933b:	movsxd rdx,esi
   14001933e:	call   0x140017e18
   140019343:	mov    rbx,rax
   140019346:	test   rax,rax
   140019349:	je     0x140019378
   14001934b:	mov    rcx,QWORD PTR [rdi]
   14001934e:	test   rcx,rcx
   140019351:	jne    0x140019358
   140019353:	mov    rax,rbx
   140019356:	jmp    0x14001936b
   140019358:	mov    r9,QWORD PTR [rcx]
   14001935b:	movsxd r8,esi
   14001935e:	mov    rdx,rbx
   140019361:	dec    r8
   140019364:	add    r8,rbx
   140019367:	call   QWORD PTR [r9+0x10]
   14001936b:	mov    BYTE PTR [rax],0x0
   14001936e:	jmp    0x140019378
   140019370:	test   rdx,rdx
   140019373:	je     0x140019378
   140019375:	mov    BYTE PTR [rdx],0x0
   140019378:	mov    rsi,QWORD PTR [rsp+0x38]
   14001937d:	mov    rax,rbx
   140019380:	mov    rbx,QWORD PTR [rsp+0x30]
   140019385:	add    rsp,0x20
   140019389:	pop    rdi
   14001938a:	ret    
   14001938b:	int3   
   14001938c:	cmp    DWORD PTR [rcx+0x8],0x1
   140019390:	jne    0x1400193cb
   140019392:	sub    r8d,edx
   140019395:	mov    ecx,0x4
   14001939a:	cmp    r8d,ecx
   14001939d:	cmovl  ecx,r8d
   1400193a1:	test   ecx,ecx
   1400193a3:	je     0x1400193c4
   1400193a5:	lea    r9,[rip+0x1ad7c]        # 0x140034128
   1400193ac:	mov    r8,rdx
   1400193af:	mov    r10d,ecx
   1400193b2:	sub    r9,rdx
   1400193b5:	mov    al,BYTE PTR [r9+r8*1]
   1400193b9:	mov    BYTE PTR [r8],al
   1400193bc:	inc    r8
   1400193bf:	dec    r10
   1400193c2:	jne    0x1400193b5
   1400193c4:	movsxd rax,ecx
   1400193c7:	add    rax,rdx
   1400193ca:	ret    
   1400193cb:	mov    rax,rdx
   1400193ce:	ret    
   1400193cf:	int3   
   1400193d0:	cmp    rdx,r8
   1400193d3:	jae    0x1400193dd
   1400193d5:	mov    al,BYTE PTR [rcx+0x8]
   1400193d8:	mov    BYTE PTR [rdx],al
   1400193da:	inc    rdx
   1400193dd:	mov    rax,rdx
   1400193e0:	ret    
   1400193e1:	int3   
   1400193e2:	int3   
   1400193e3:	int3   
   1400193e4:	sub    rsp,0x28
   1400193e8:	mov    rcx,QWORD PTR [rcx+0x8]
   1400193ec:	test   rcx,rcx
   1400193ef:	je     0x140019402
   1400193f1:	mov    rcx,QWORD PTR [rcx]
   1400193f4:	test   rcx,rcx
   1400193f7:	je     0x140019402
   1400193f9:	mov    rax,QWORD PTR [rcx]
   1400193fc:	call   QWORD PTR [rax+0x10]
   1400193ff:	mov    rdx,rax
   140019402:	mov    rax,rdx
   140019405:	add    rsp,0x28
   140019409:	ret    
   14001940a:	int3   
   14001940b:	int3   
   14001940c:	mov    QWORD PTR [rsp+0x8],rbx
   140019411:	push   rdi
   140019412:	sub    rsp,0x20
   140019416:	mov    rdi,rcx
   140019419:	mov    rcx,QWORD PTR [rcx+0x8]
   14001941d:	mov    rbx,r8
   140019420:	mov    rax,QWORD PTR [rcx]
   140019423:	call   QWORD PTR [rax+0x10]
   140019426:	cmp    rax,rbx
   140019429:	jae    0x14001943c
   14001942b:	mov    rcx,QWORD PTR [rdi+0x10]
   14001942f:	mov    r8,rbx
   140019432:	mov    rdx,rax
   140019435:	mov    r9,QWORD PTR [rcx]
   140019438:	call   QWORD PTR [r9+0x10]
   14001943c:	mov    rbx,QWORD PTR [rsp+0x30]
   140019441:	add    rsp,0x20
   140019445:	pop    rdi
   140019446:	ret    
   140019447:	int3   
   140019448:	mov    r9d,DWORD PTR [rcx+0x10]
   14001944c:	mov    r10,QWORD PTR [rcx+0x8]
   140019450:	sub    r8d,edx
   140019453:	cmp    r9d,r8d
   140019456:	cmovg  r9d,r8d
   14001945a:	test   r9d,r9d
   14001945d:	je     0x140019476
   14001945f:	mov    rcx,rdx
   140019462:	sub    r10,rdx
   140019465:	mov    r8d,r9d
   140019468:	mov    al,BYTE PTR [r10+rcx*1]
   14001946c:	mov    BYTE PTR [rcx],al
   14001946e:	inc    rcx
   140019471:	dec    r8
   140019474:	jne    0x140019468
   140019476:	movsxd rax,r9d
   140019479:	add    rax,rdx
   14001947c:	ret    
   14001947d:	int3   
   14001947e:	int3   
   14001947f:	int3   
   140019480:	rex push rbx
   140019482:	sub    rsp,0x40
   140019486:	mov    rbx,rcx
   140019489:	lea    rcx,[rsp+0x20]
   14001948e:	call   0x14001409c
   140019493:	mov    rdx,QWORD PTR [rip+0x25a1e]        # 0x14003eeb8
   14001949a:	mov    al,BYTE PTR [rdx]
   14001949c:	inc    rdx
   14001949f:	mov    QWORD PTR [rip+0x25a12],rdx        # 0x14003eeb8
   1400194a6:	cmp    al,0x40
   1400194a8:	jne    0x140019529
   1400194aa:	mov    al,BYTE PTR [rdx]
   1400194ac:	inc    rdx
   1400194af:	mov    QWORD PTR [rip+0x25a02],rdx        # 0x14003eeb8
   1400194b6:	cmp    al,0x5f
   1400194b8:	jne    0x140019529
   1400194ba:	inc    rdx
   1400194bd:	lea    rcx,[rsp+0x30]
   1400194c2:	mov    QWORD PTR [rip+0x259ef],rdx        # 0x14003eeb8
   1400194c9:	xor    edx,edx
   1400194cb:	call   0x1400170b4
   1400194d0:	lea    rcx,[rsp+0x30]
   1400194d5:	xor    edx,edx
   1400194d7:	call   0x1400170b4
   1400194dc:	mov    rax,QWORD PTR [rip+0x259d5]        # 0x14003eeb8
   1400194e3:	mov    cl,BYTE PTR [rax]
   1400194e5:	test   cl,cl
   1400194e7:	je     0x140019518
   1400194e9:	cmp    cl,0x40
   1400194ec:	je     0x1400194fe
   1400194ee:	inc    rax
   1400194f1:	mov    QWORD PTR [rip+0x259c0],rax        # 0x14003eeb8
   1400194f8:	mov    cl,BYTE PTR [rax]
   1400194fa:	test   cl,cl
   1400194fc:	jne    0x1400194e9
   1400194fe:	cmp    BYTE PTR [rax],0x0
   140019501:	je     0x140019518
   140019503:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140019508:	inc    rax
   14001950b:	mov    QWORD PTR [rip+0x259a6],rax        # 0x14003eeb8
   140019512:	movdqu XMMWORD PTR [rbx],xmm0
   140019516:	jmp    0x140019536
   140019518:	dec    rax
   14001951b:	mov    edx,0x1
   140019520:	mov    QWORD PTR [rip+0x25991],rax        # 0x14003eeb8
   140019527:	jmp    0x14001952e
   140019529:	mov    edx,0x2
   14001952e:	mov    rcx,rbx
   140019531:	call   0x1400140e4
   140019536:	mov    rax,rbx
   140019539:	add    rsp,0x40
   14001953d:	pop    rbx
   14001953e:	ret    
   14001953f:	int3   
   140019540:	sub    edx,ecx
   140019542:	cmp    r9d,edx
   140019545:	cmovg  r9d,edx
   140019549:	test   r9d,r9d
   14001954c:	je     0x140019565
   14001954e:	mov    rdx,rcx
   140019551:	sub    r8,rcx
   140019554:	mov    r10d,r9d
   140019557:	mov    al,BYTE PTR [r8+rdx*1]
   14001955b:	mov    BYTE PTR [rdx],al
   14001955d:	inc    rdx
   140019560:	dec    r10
   140019563:	jne    0x140019557
   140019565:	movsxd rax,r9d
   140019568:	add    rax,rcx
   14001956b:	ret    
   14001956c:	rex push rbx
   14001956e:	sub    rsp,0x20
   140019572:	mov    rax,QWORD PTR [rip+0x2593f]        # 0x14003eeb8
   140019579:	mov    rbx,rcx
   14001957c:	cmp    BYTE PTR [rax],0x3f
   14001957f:	jne    0x1400195a5
   140019581:	inc    rax
   140019584:	cmp    BYTE PTR [rax],0x24
   140019587:	jne    0x140019592
   140019589:	mov    dl,0x1
   14001958b:	call   0x140019c20
   140019590:	jmp    0x1400195af
   140019592:	xor    r8d,r8d
   140019595:	xor    edx,edx
   140019597:	mov    QWORD PTR [rip+0x2591a],rax        # 0x14003eeb8
   14001959e:	call   0x140017f3c
   1400195a3:	jmp    0x1400195af
   1400195a5:	xor    r8d,r8d
   1400195a8:	mov    dl,0x1
   1400195aa:	call   0x14001a66c
   1400195af:	mov    rax,rbx
   1400195b2:	add    rsp,0x20
   1400195b6:	pop    rbx
   1400195b7:	ret    
   1400195b8:	mov    rax,rsp
   1400195bb:	mov    QWORD PTR [rax+0x10],rbx
   1400195bf:	mov    QWORD PTR [rax+0x18],rsi
   1400195c3:	mov    QWORD PTR [rax+0x20],rdi
   1400195c7:	push   rbp
   1400195c8:	push   r14
   1400195ca:	push   r15
   1400195cc:	lea    rbp,[rax-0x5f]
   1400195d0:	sub    rsp,0x100
   1400195d7:	mov    rax,QWORD PTR [rip+0x22bf2]        # 0x14003c1d0
   1400195de:	xor    rax,rsp
   1400195e1:	mov    QWORD PTR [rbp+0x37],rax
   1400195e5:	and    QWORD PTR [rcx],0x0
   1400195e9:	mov    BYTE PTR [rcx+0x8],0x0
   1400195ed:	and    DWORD PTR [rcx+0x8],0xffff00ff
   1400195f4:	mov    r15b,0x1
   1400195f7:	mov    rbx,rcx
   1400195fa:	mov    BYTE PTR [rip+0x258d8],r15b        # 0x14003eed9
   140019601:	cmp    BYTE PTR [rcx+0x8],0x0
   140019605:	jne    0x14001986f
   14001960b:	mov    rcx,QWORD PTR [rip+0x258a6]        # 0x14003eeb8
   140019612:	test   BYTE PTR [rcx],0xbf
   140019615:	je     0x14001986f
   14001961b:	xor    sil,sil
   14001961e:	test   r15b,r15b
   140019621:	je     0x140019628
   140019623:	xor    r15b,r15b
   140019626:	jmp    0x14001962b
   140019628:	mov    sil,0x1
   14001962b:	movsx  r8d,BYTE PTR [rcx]
   14001962f:	sub    r8d,0x30
   140019633:	cmp    r8d,0x9
   140019637:	ja     0x140019663
   140019639:	inc    rcx
   14001963c:	lea    rdx,[rbp-0x29]
   140019640:	mov    QWORD PTR [rip+0x25871],rcx        # 0x14003eeb8
   140019647:	mov    rcx,QWORD PTR [rip+0x25862]        # 0x14003eeb0
   14001964e:	call   0x14001456c
   140019653:	mov    rcx,rbx
   140019656:	mov    rdx,rax
   140019659:	call   0x140014910
   14001965e:	jmp    0x14001985e
   140019663:	and    QWORD PTR [rsp+0x20],0x0
   140019669:	and    DWORD PTR [rsp+0x28],0xffff0000
   140019671:	xor    dil,dil
   140019674:	cmp    BYTE PTR [rcx],0x24
   140019677:	mov    r14,rcx
   14001967a:	jne    0x140019697
   14001967c:	cmp    BYTE PTR [rcx+0x1],0x24
   140019680:	jne    0x140019697
   140019682:	mov    al,BYTE PTR [rcx+0x2]
   140019685:	cmp    al,0x57
   140019687:	jne    0x1400196bd
   140019689:	add    rcx,0x3
   14001968d:	mov    dil,0x1
   140019690:	mov    QWORD PTR [rip+0x25821],rcx        # 0x14003eeb8
   140019697:	mov    al,BYTE PTR [rcx]
   140019699:	cmp    al,0x58
   14001969b:	jne    0x1400196d1
   14001969d:	inc    rcx
   1400196a0:	lea    rdx,[rip+0x1a681]        # 0x140033d28
   1400196a7:	mov    QWORD PTR [rip+0x2580a],rcx        # 0x14003eeb8
   1400196ae:	lea    rcx,[rsp+0x20]
   1400196b3:	call   0x1400144f0
   1400196b8:	jmp    0x1400197f3
   1400196bd:	cmp    al,0x56
   1400196bf:	jne    0x140019697
   1400196c1:	add    rcx,0x3
   1400196c5:	mov    QWORD PTR [rip+0x257ec],rcx        # 0x14003eeb8
   1400196cc:	jmp    0x140019865
   1400196d1:	cmp    al,0x24
   1400196d3:	jne    0x1400196f1
   1400196d5:	inc    rcx
   1400196d8:	cmp    BYTE PTR [rcx],al
   1400196da:	je     0x1400196f1
   1400196dc:	mov    QWORD PTR [rip+0x257d5],rcx        # 0x14003eeb8
   1400196e3:	lea    rcx,[rbp-0x9]
   1400196e7:	call   0x1400198a4
   1400196ec:	jmp    0x1400197ea
   1400196f1:	cmp    al,0x3f
   1400196f3:	jne    0x1400197d1
   1400196f9:	lea    rcx,[rsp+0x30]
   1400196fe:	call   0x14001922c
   140019703:	test   DWORD PTR [rip+0x257c7],0x4000        # 0x14003eed4
   14001970d:	je     0x140019786
   14001970f:	lea    rdx,[rbp+0x27]
   140019713:	lea    rcx,[rsp+0x30]
   140019718:	mov    r8d,0x10
   14001971e:	call   0x140019304
   140019723:	lea    rcx,[rbp+0x27]
   140019727:	call   0x14001f97c
   14001972c:	mov    ecx,eax
   14001972e:	call   QWORD PTR [rip+0x25764]        # 0x14003ee98
   140019734:	test   rax,rax
   140019737:	je     0x140019741
   140019739:	mov    rdx,rax
   14001973c:	jmp    0x1400196ae
   140019741:	lea    rdx,[rip+0x1a5e8]        # 0x140033d30
   140019748:	lea    rcx,[rbp-0x19]
   14001974c:	call   0x14001409c
   140019751:	lea    rdx,[rsp+0x30]
   140019756:	lea    rcx,[rbp-0x39]
   14001975a:	movups xmm0,XMMWORD PTR [rax]
   14001975d:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   140019762:	call   0x140014910
   140019767:	movaps xmm0,XMMWORD PTR [rbp-0x39]
   14001976b:	lea    rdx,[rip+0x1a572]        # 0x140033ce4
   140019772:	lea    rcx,[rbp-0x49]
   140019776:	movdqa XMMWORD PTR [rbp-0x49],xmm0
   14001977b:	call   0x140014a6c
   140019780:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   140019784:	jmp    0x1400197c9
   140019786:	lea    rdx,[rip+0x1a5a3]        # 0x140033d30
   14001978d:	lea    rcx,[rbp+0x17]
   140019791:	call   0x14001409c
   140019796:	lea    rdx,[rsp+0x30]
   14001979b:	lea    rcx,[rbp-0x59]
   14001979f:	movups xmm0,XMMWORD PTR [rax]
   1400197a2:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400197a7:	call   0x140014910
   1400197ac:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   1400197b0:	lea    rdx,[rip+0x1a52d]        # 0x140033ce4
   1400197b7:	lea    rcx,[rbp-0x69]
   1400197bb:	movdqa XMMWORD PTR [rbp-0x69],xmm0
   1400197c0:	call   0x140014a6c
   1400197c5:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   1400197c9:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400197cf:	jmp    0x1400197f3
   1400197d1:	and    QWORD PTR [rbp-0x79],0x0
   1400197d6:	and    DWORD PTR [rbp-0x71],0xffff0000
   1400197dd:	lea    rdx,[rbp-0x79]
   1400197e1:	lea    rcx,[rbp+0x7]
   1400197e5:	call   0x140018658
   1400197ea:	movups xmm0,XMMWORD PTR [rax]
   1400197ed:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   1400197f3:	mov    rcx,QWORD PTR [rip+0x256be]        # 0x14003eeb8
   1400197fa:	mov    rax,rcx
   1400197fd:	sub    rax,r14
   140019800:	cmp    rax,0x1
   140019804:	jle    0x140019826
   140019806:	mov    rax,QWORD PTR [rip+0x256a3]        # 0x14003eeb0
   14001980d:	cmp    DWORD PTR [rax],0x9
   140019810:	je     0x140019826
   140019812:	lea    rdx,[rsp+0x20]
   140019817:	mov    rcx,rax
   14001981a:	call   0x140014b3c
   14001981f:	mov    rcx,QWORD PTR [rip+0x25692]        # 0x14003eeb8
   140019826:	cmp    QWORD PTR [rsp+0x20],0x0
   14001982c:	je     0x140019865
   14001982e:	test   sil,sil
   140019831:	je     0x14001983d
   140019833:	mov    dl,0x2c
   140019835:	mov    rcx,rbx
   140019838:	call   0x140014950
   14001983d:	lea    rdx,[rsp+0x20]
   140019842:	mov    rcx,rbx
   140019845:	call   0x140014910
   14001984a:	test   dil,dil
   14001984d:	je     0x14001985e
   14001984f:	lea    rdx,[rip+0x1a4ee]        # 0x140033d44
   140019856:	mov    rcx,rbx
   140019859:	call   0x140014a6c
   14001985e:	mov    rcx,QWORD PTR [rip+0x25653]        # 0x14003eeb8
   140019865:	cmp    BYTE PTR [rbx+0x8],0x0
   140019869:	je     0x140019612
   14001986f:	mov    BYTE PTR [rip+0x25663],0x0        # 0x14003eed9
   140019876:	mov    rax,rbx
   140019879:	mov    rcx,QWORD PTR [rbp+0x37]
   14001987d:	xor    rcx,rsp
   140019880:	call   0x14000c380
   140019885:	lea    r11,[rsp+0x100]
   14001988d:	mov    rbx,QWORD PTR [r11+0x28]
   140019891:	mov    rsi,QWORD PTR [r11+0x30]
   140019895:	mov    rdi,QWORD PTR [r11+0x38]
   140019899:	mov    rsp,r11
   14001989c:	pop    r15
   14001989e:	pop    r14
   1400198a0:	pop    rbp
   1400198a1:	ret    
   1400198a2:	int3   
   1400198a3:	int3   
   1400198a4:	mov    rax,rsp
   1400198a7:	mov    QWORD PTR [rax+0x10],rbx
   1400198ab:	mov    QWORD PTR [rax+0x18],rsi
   1400198af:	mov    QWORD PTR [rax+0x20],rdi
   1400198b3:	push   rbp
   1400198b4:	lea    rbp,[rax-0x48]
   1400198b8:	sub    rsp,0x140
   1400198bf:	mov    rax,QWORD PTR [rip+0x2290a]        # 0x14003c1d0
   1400198c6:	xor    rax,rsp
   1400198c9:	mov    QWORD PTR [rbp+0x30],rax
   1400198cd:	mov    rdi,rcx
   1400198d0:	mov    rcx,QWORD PTR [rip+0x255e1]        # 0x14003eeb8
   1400198d7:	movsx  esi,BYTE PTR [rcx]
   1400198da:	inc    rcx
   1400198dd:	mov    QWORD PTR [rip+0x255d4],rcx        # 0x14003eeb8
   1400198e4:	mov    ebx,esi
   1400198e6:	cmp    esi,0x45
   1400198e9:	jg     0x140019a8e
   1400198ef:	cmp    ebx,0x45
   1400198f2:	je     0x140019a81
   1400198f8:	test   ebx,ebx
   1400198fa:	je     0x140019a6d
   140019900:	sub    ebx,0x30
   140019903:	je     0x140019a60
   140019909:	dec    ebx
   14001990b:	je     0x140019a18
   140019911:	dec    ebx
   140019913:	je     0x14001996e
   140019915:	cmp    ebx,0x12
   140019918:	jne    0x1400199af
   14001991e:	lea    rcx,[rsp+0x20]
   140019923:	call   0x14001922c
   140019928:	test   DWORD PTR [rip+0x255a2],0x4000        # 0x14003eed4
   140019932:	je     0x140019ae7
   140019938:	lea    rdx,[rbp-0x50]
   14001993c:	lea    rcx,[rsp+0x20]
   140019941:	mov    r8d,0x10
   140019947:	call   0x140019304
   14001994c:	lea    rcx,[rbp-0x50]
   140019950:	call   0x14001f97c
   140019955:	mov    ecx,eax
   140019957:	call   QWORD PTR [rip+0x2553b]        # 0x14003ee98
   14001995d:	test   rax,rax
   140019960:	je     0x140019ae7
   140019966:	mov    rdx,rax
   140019969:	jmp    0x140019a2e
   14001996e:	lea    rcx,[rsp+0x20]
   140019973:	call   0x14001922c
   140019978:	lea    rcx,[rbp-0x50]
   14001997c:	call   0x14001922c
   140019981:	cmp    BYTE PTR [rsp+0x28],0x1
   140019986:	jg     0x140019a77
   14001998c:	cmp    BYTE PTR [rbp-0x48],0x1
   140019990:	jg     0x140019a77
   140019996:	lea    rdx,[rbp-0x3f]
   14001999a:	lea    rcx,[rsp+0x20]
   14001999f:	mov    r8d,0x64
   1400199a5:	call   0x140019304
   1400199aa:	test   rax,rax
   1400199ad:	jne    0x1400199c1
   1400199af:	mov    edx,0x2
   1400199b4:	mov    rcx,rdi
   1400199b7:	call   0x1400140e4
   1400199bc:	jmp    0x140019bf5
   1400199c1:	mov    al,BYTE PTR [rbp-0x3f]
   1400199c4:	mov    BYTE PTR [rbp-0x40],al
   1400199c7:	cmp    al,0x2d
   1400199c9:	jne    0x1400199d7
   1400199cb:	mov    al,BYTE PTR [rbp-0x3e]
   1400199ce:	mov    BYTE PTR [rbp-0x3e],0x2e
   1400199d2:	mov    BYTE PTR [rbp-0x3f],al
   1400199d5:	jmp    0x1400199db
   1400199d7:	mov    BYTE PTR [rbp-0x3f],0x2e
   1400199db:	lea    rdx,[rbp-0x40]
   1400199df:	lea    rcx,[rsp+0x50]
   1400199e4:	call   0x14001409c
   1400199e9:	lea    rcx,[rsp+0x20]
   1400199ee:	mov    dl,0x65
   1400199f0:	movups xmm0,XMMWORD PTR [rax]
   1400199f3:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   1400199f9:	call   0x140014950
   1400199fe:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140019a03:	lea    rdx,[rbp-0x50]
   140019a07:	mov    rcx,rdi
   140019a0a:	movdqu XMMWORD PTR [rdi],xmm0
   140019a0e:	call   0x140014910
   140019a13:	jmp    0x140019bf5
   140019a18:	cmp    BYTE PTR [rcx],0x40
   140019a1b:	jne    0x140019a3b
   140019a1d:	inc    rcx
   140019a20:	lea    rdx,[rip+0x1a321]        # 0x140033d48
   140019a27:	mov    QWORD PTR [rip+0x2548a],rcx        # 0x14003eeb8
   140019a2e:	mov    rcx,rdi
   140019a31:	call   0x14001409c
   140019a36:	jmp    0x140019bf5
   140019a3b:	lea    rcx,[rbp-0x70]
   140019a3f:	call   0x140016e40
   140019a44:	lea    rdx,[rip+0x19d29]        # 0x140033774
   140019a4b:	lea    rcx,[rsp+0x70]
   140019a50:	mov    rbx,rax
   140019a53:	call   0x14001409c
   140019a58:	mov    rdx,rbx
   140019a5b:	movups xmm0,XMMWORD PTR [rax]
   140019a5e:	jmp    0x140019a07
   140019a60:	mov    rcx,rdi
   140019a63:	call   0x14001922c
   140019a68:	jmp    0x140019bf5
   140019a6d:	dec    rcx
   140019a70:	mov    QWORD PTR [rip+0x25441],rcx        # 0x14003eeb8
   140019a77:	mov    edx,0x1
   140019a7c:	jmp    0x1400199b4
   140019a81:	mov    rcx,rdi
   140019a84:	call   0x140016e40
   140019a89:	jmp    0x140019bf5
   140019a8e:	cmp    ebx,0x4a
   140019a91:	jle    0x140019b39
   140019a97:	cmp    ebx,0x51
   140019a9a:	je     0x14001991e
   140019aa0:	cmp    ebx,0x52
   140019aa3:	je     0x140019ac2
   140019aa5:	cmp    ebx,0x53
   140019aa8:	jne    0x1400199af
   140019aae:	and    QWORD PTR [rdi],0x0
   140019ab2:	mov    BYTE PTR [rdi+0x8],0x0
   140019ab6:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140019abd:	jmp    0x140019bf5
   140019ac2:	lea    rcx,[rbp-0x50]
   140019ac6:	xor    r8d,r8d
   140019ac9:	xor    edx,edx
   140019acb:	call   0x14001a66c
   140019ad0:	lea    rcx,[rsp+0x20]
   140019ad5:	call   0x14001922c
   140019ada:	movups xmm0,XMMWORD PTR [rbp-0x50]
   140019ade:	movdqu XMMWORD PTR [rdi],xmm0
   140019ae2:	jmp    0x140019bf5
   140019ae7:	lea    rcx,[rsp+0x30]
   140019aec:	cmp    sil,0x44
   140019af0:	jne    0x140019b30
   140019af2:	lea    rdx,[rip+0x1a237]        # 0x140033d30
   140019af9:	call   0x14001409c
   140019afe:	lea    rdx,[rsp+0x20]
   140019b03:	lea    rcx,[rbp-0x50]
   140019b07:	movups xmm0,XMMWORD PTR [rax]
   140019b0a:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   140019b0f:	call   0x140014910
   140019b14:	movups xmm0,XMMWORD PTR [rbp-0x50]
   140019b18:	lea    rdx,[rip+0x1a1c5]        # 0x140033ce4
   140019b1f:	mov    rcx,rdi
   140019b22:	movdqu XMMWORD PTR [rdi],xmm0
   140019b26:	call   0x140014a6c
   140019b2b:	jmp    0x140019bf5
   140019b30:	lea    rdx,[rip+0x1a1d1]        # 0x140033d08
   140019b37:	jmp    0x140019af9
   140019b39:	lea    rcx,[rsp+0x20]
   140019b3e:	mov    dl,0x7b
   140019b40:	call   0x140013fdc
   140019b45:	sub    sil,0x48
   140019b49:	cmp    sil,0x2
   140019b4d:	ja     0x140019b72
   140019b4f:	lea    rcx,[rsp+0x40]
   140019b54:	call   0x140016e40
   140019b59:	lea    rcx,[rsp+0x20]
   140019b5e:	mov    rdx,rax
   140019b61:	call   0x140014910
   140019b66:	lea    rcx,[rsp+0x20]
   140019b6b:	mov    dl,0x2c
   140019b6d:	call   0x140014950
   140019b72:	sub    ebx,0x46
   140019b75:	je     0x140019baa
   140019b77:	dec    ebx
   140019b79:	je     0x140019b87
   140019b7b:	dec    ebx
   140019b7d:	je     0x140019bcc
   140019b7f:	dec    ebx
   140019b81:	je     0x140019baa
   140019b83:	dec    ebx
   140019b85:	jne    0x140019be2
   140019b87:	lea    rcx,[rsp+0x60]
   140019b8c:	call   0x14001922c
   140019b91:	lea    rcx,[rsp+0x20]
   140019b96:	mov    rdx,rax
   140019b99:	call   0x140014910
   140019b9e:	lea    rcx,[rsp+0x20]
   140019ba3:	mov    dl,0x2c
   140019ba5:	call   0x140014950
   140019baa:	lea    rcx,[rbp-0x80]
   140019bae:	call   0x14001922c
   140019bb3:	lea    rcx,[rsp+0x20]
   140019bb8:	mov    rdx,rax
   140019bbb:	call   0x140014910
   140019bc0:	lea    rcx,[rsp+0x20]
   140019bc5:	mov    dl,0x2c
   140019bc7:	call   0x140014950
   140019bcc:	lea    rcx,[rbp-0x60]
   140019bd0:	call   0x14001922c
   140019bd5:	lea    rcx,[rsp+0x20]
   140019bda:	mov    rdx,rax
   140019bdd:	call   0x140014910
   140019be2:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140019be7:	mov    dl,0x7d
   140019be9:	mov    rcx,rdi
   140019bec:	movdqu XMMWORD PTR [rdi],xmm0
   140019bf0:	call   0x140014950
   140019bf5:	mov    rax,rdi
   140019bf8:	mov    rcx,QWORD PTR [rbp+0x30]
   140019bfc:	xor    rcx,rsp
   140019bff:	call   0x14000c380
   140019c04:	lea    r11,[rsp+0x140]
   140019c0c:	mov    rbx,QWORD PTR [r11+0x18]
   140019c10:	mov    rsi,QWORD PTR [r11+0x20]
   140019c14:	mov    rdi,QWORD PTR [r11+0x28]
   140019c18:	mov    rsp,r11
   140019c1b:	pop    rbp
   140019c1c:	ret    
   140019c1d:	int3   
   140019c1e:	int3   
   140019c1f:	int3   
   140019c20:	mov    QWORD PTR [rsp+0x8],rbx
   140019c25:	mov    QWORD PTR [rsp+0x10],rsi
   140019c2a:	mov    QWORD PTR [rsp+0x20],rdi
   140019c2f:	push   rbp
   140019c30:	push   r12
   140019c32:	push   r13
   140019c34:	push   r14
   140019c36:	push   r15
   140019c38:	lea    rbp,[rsp-0x80]
   140019c3d:	sub    rsp,0x180
   140019c44:	mov    rax,QWORD PTR [rip+0x2526d]        # 0x14003eeb8
   140019c4b:	mov    r14b,dl
   140019c4e:	mov    rdi,rcx
   140019c51:	cmp    BYTE PTR [rax],0x3f
   140019c54:	jne    0x140019dc0
   140019c5a:	cmp    BYTE PTR [rax+0x1],0x24
   140019c5e:	jne    0x140019dc0
   140019c64:	mov    r15,QWORD PTR [rip+0x25235]        # 0x14003eea0
   140019c6b:	mov    r12,QWORD PTR [rip+0x25236]        # 0x14003eea8
   140019c72:	mov    r13,QWORD PTR [rip+0x25237]        # 0x14003eeb0
   140019c79:	or     ecx,0xffffffff
   140019c7c:	add    rax,0x2
   140019c80:	xor    bl,bl
   140019c82:	mov    DWORD PTR [rsp+0x60],ecx
   140019c86:	mov    DWORD PTR [rbp-0x40],ecx
   140019c89:	mov    DWORD PTR [rbp+0x20],ecx
   140019c8c:	lea    rcx,[rsp+0x60]
   140019c91:	mov    esi,0x1
   140019c96:	mov    QWORD PTR [rip+0x2521b],rax        # 0x14003eeb8
   140019c9d:	mov    QWORD PTR [rip+0x251fc],rcx        # 0x14003eea0
   140019ca4:	lea    rcx,[rbp-0x40]
   140019ca8:	mov    BYTE PTR [rbp+0xc0],bl
   140019cae:	mov    QWORD PTR [rip+0x251f3],rcx        # 0x14003eea8
   140019cb5:	lea    rcx,[rbp+0x20]
   140019cb9:	mov    dl,sil
   140019cbc:	mov    QWORD PTR [rip+0x251ed],rcx        # 0x14003eeb0
   140019cc3:	cmp    BYTE PTR [rax],0x3f
   140019cc6:	lea    rcx,[rsp+0x30]
   140019ccb:	jne    0x140019ceb
   140019ccd:	add    rax,rsi
   140019cd0:	lea    r8,[rbp+0xc0]
   140019cd7:	mov    QWORD PTR [rip+0x251da],rax        # 0x14003eeb8
   140019cde:	call   0x140017f3c
   140019ce3:	mov    bl,BYTE PTR [rbp+0xc0]
   140019ce9:	jmp    0x140019cf3
   140019ceb:	mov    r8b,sil
   140019cee:	call   0x14001a66c
   140019cf3:	movups xmm0,XMMWORD PTR [rax]
   140019cf6:	movzx  ecx,BYTE PTR [rip+0x251db]        # 0x14003eed8
   140019cfd:	movq   rax,xmm0
   140019d02:	movups XMMWORD PTR [rsp+0x20],xmm0
   140019d07:	test   rax,rax
   140019d0a:	cmove  ecx,esi
   140019d0d:	mov    BYTE PTR [rip+0x251c5],cl        # 0x14003eed8
   140019d13:	test   bl,bl
   140019d15:	jne    0x140019da5
   140019d1b:	lea    rcx,[rsp+0x50]
   140019d20:	call   0x1400195b8
   140019d25:	lea    rcx,[rsp+0x40]
   140019d2a:	mov    dl,0x3c
   140019d2c:	mov    rbx,rax
   140019d2f:	call   0x140013fdc
   140019d34:	lea    rcx,[rsp+0x30]
   140019d39:	mov    rdx,rbx
   140019d3c:	movups xmm0,XMMWORD PTR [rax]
   140019d3f:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140019d45:	call   0x140014910
   140019d4a:	lea    rdx,[rsp+0x30]
   140019d4f:	lea    rcx,[rsp+0x20]
   140019d54:	call   0x140014910
   140019d59:	mov    rcx,QWORD PTR [rsp+0x20]
   140019d5e:	test   rcx,rcx
   140019d61:	je     0x140019d79
   140019d63:	mov    rax,QWORD PTR [rcx]
   140019d66:	call   QWORD PTR [rax+0x8]
   140019d69:	cmp    al,0x3e
   140019d6b:	jne    0x140019d79
   140019d6d:	lea    rcx,[rsp+0x20]
   140019d72:	mov    dl,0x20
   140019d74:	call   0x140014950
   140019d79:	lea    rcx,[rsp+0x20]
   140019d7e:	mov    dl,0x3e
   140019d80:	call   0x140014950
   140019d85:	test   r14b,r14b
   140019d88:	je     0x140019da0
   140019d8a:	mov    rax,QWORD PTR [rip+0x25127]        # 0x14003eeb8
   140019d91:	cmp    BYTE PTR [rax],0x0
   140019d94:	je     0x140019da0
   140019d96:	add    rax,rsi
   140019d99:	mov    QWORD PTR [rip+0x25118],rax        # 0x14003eeb8
   140019da0:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140019da5:	mov    QWORD PTR [rip+0x250f4],r15        # 0x14003eea0
   140019dac:	mov    QWORD PTR [rip+0x250f5],r12        # 0x14003eea8
   140019db3:	mov    QWORD PTR [rip+0x250f6],r13        # 0x14003eeb0
   140019dba:	movdqu XMMWORD PTR [rdi],xmm0
   140019dbe:	jmp    0x140019dca
   140019dc0:	mov    edx,0x2
   140019dc5:	call   0x1400140e4
   140019dca:	lea    r11,[rsp+0x180]
   140019dd2:	mov    rax,rdi
   140019dd5:	mov    rbx,QWORD PTR [r11+0x30]
   140019dd9:	mov    rsi,QWORD PTR [r11+0x38]
   140019ddd:	mov    rdi,QWORD PTR [r11+0x48]
   140019de1:	mov    rsp,r11
   140019de4:	pop    r15
   140019de6:	pop    r14
   140019de8:	pop    r13
   140019dea:	pop    r12
   140019dec:	pop    rbp
   140019ded:	ret    
   140019dee:	int3   
   140019def:	int3   
   140019df0:	mov    r11,rsp
   140019df3:	push   rbx
   140019df4:	sub    rsp,0x50
   140019df8:	and    QWORD PTR [r11-0x28],0x0
   140019dfd:	and    QWORD PTR [r11-0x18],0x0
   140019e02:	mov    eax,0xffff0000
   140019e07:	and    DWORD PTR [rsp+0x38],eax
   140019e0b:	and    DWORD PTR [rsp+0x48],eax
   140019e0f:	lea    r9,[r11-0x28]
   140019e13:	lea    r8,[rip+0x15c6a]        # 0x14002fa84
   140019e1a:	lea    rdx,[r11-0x18]
   140019e1e:	mov    rbx,rcx
   140019e21:	mov    DWORD PTR [rsp+0x20],0x1
   140019e29:	call   0x140016620
   140019e2e:	mov    rax,rbx
   140019e31:	add    rsp,0x50
   140019e35:	pop    rbx
   140019e36:	ret    
   140019e37:	int3   
   140019e38:	mov    QWORD PTR [rsp+0x8],rbx
   140019e3d:	mov    QWORD PTR [rsp+0x10],rdi
   140019e42:	push   rbp
   140019e43:	mov    rbp,rsp
   140019e46:	sub    rsp,0x50
   140019e4a:	mov    rax,QWORD PTR [rip+0x25067]        # 0x14003eeb8
   140019e51:	mov    rdi,rcx
   140019e54:	cmp    BYTE PTR [rax],0x0
   140019e57:	je     0x140019eb0
   140019e59:	cmp    BYTE PTR [rax],0x5a
   140019e5c:	jne    0x140019e7e
   140019e5e:	and    QWORD PTR [rbp-0x30],0x0
   140019e63:	inc    rax
   140019e66:	and    DWORD PTR [rbp-0x28],0xffff0000
   140019e6d:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140019e71:	mov    QWORD PTR [rip+0x25040],rax        # 0x14003eeb8
   140019e78:	movdqu XMMWORD PTR [rcx],xmm0
   140019e7c:	jmp    0x140019ee8
   140019e7e:	lea    rcx,[rbp-0x20]
   140019e82:	call   0x140015cf4
   140019e87:	lea    rdx,[rip+0x1a07a]        # 0x140033f08
   140019e8e:	lea    rcx,[rbp-0x10]
   140019e92:	mov    rbx,rax
   140019e95:	call   0x14001409c
   140019e9a:	lea    rcx,[rbp-0x30]
   140019e9e:	mov    rdx,rbx
   140019ea1:	movups xmm0,XMMWORD PTR [rax]
   140019ea4:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140019ea9:	call   0x140014910
   140019eae:	jmp    0x140019ed6
   140019eb0:	lea    rdx,[rip+0x1a051]        # 0x140033f08
   140019eb7:	lea    rcx,[rbp-0x10]
   140019ebb:	call   0x14001409c
   140019ec0:	lea    rcx,[rbp-0x30]
   140019ec4:	mov    edx,0x1
   140019ec9:	movups xmm0,XMMWORD PTR [rax]
   140019ecc:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140019ed1:	call   0x140014af8
   140019ed6:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140019eda:	mov    dl,0x29
   140019edc:	mov    rcx,rdi
   140019edf:	movdqu XMMWORD PTR [rdi],xmm0
   140019ee3:	call   0x140014950
   140019ee8:	mov    rbx,QWORD PTR [rsp+0x60]
   140019eed:	mov    rax,rdi
   140019ef0:	mov    rdi,QWORD PTR [rsp+0x68]
   140019ef5:	add    rsp,0x50
   140019ef9:	pop    rbp
   140019efa:	ret    
   140019efb:	int3   
   140019efc:	sub    rsp,0x28
   140019f00:	mov    r8,QWORD PTR [rip+0x24fb1]        # 0x14003eeb8
   140019f07:	mov    r9d,0x4000
   140019f0d:	xor    edx,edx
   140019f0f:	cmp    BYTE PTR [r8],0x5f
   140019f13:	jne    0x140019f22
   140019f15:	inc    r8
   140019f18:	mov    edx,r9d
   140019f1b:	mov    QWORD PTR [rip+0x24f96],r8        # 0x14003eeb8
   140019f22:	mov    al,BYTE PTR [r8]
   140019f25:	sub    al,0x41
   140019f27:	cmp    al,0x19
   140019f29:	jbe    0x14001a2e4
   140019f2f:	cmp    BYTE PTR [r8],0x24
   140019f33:	jne    0x14001a16e
   140019f39:	inc    r8
   140019f3c:	xor    r10b,r10b
   140019f3f:	mov    QWORD PTR [rip+0x24f72],r8        # 0x14003eeb8
   140019f46:	movsx  ecx,BYTE PTR [r8]
   140019f4a:	cmp    ecx,0x42
   140019f4d:	jg     0x14001a04a
   140019f53:	je     0x14001a03f
   140019f59:	test   ecx,ecx
   140019f5b:	je     0x14001a032
   140019f61:	cmp    ecx,0x24
   140019f64:	jne    0x14001a00a
   140019f6a:	lea    rax,[r8+0x1]
   140019f6e:	cmp    BYTE PTR [rax],0x50
   140019f71:	cmove  r8,rax
   140019f75:	inc    r8
   140019f78:	mov    QWORD PTR [rip+0x24f39],r8        # 0x14003eeb8
   140019f7f:	cmp    BYTE PTR [r8],r10b
   140019f82:	je     0x14001a000
   140019f84:	mov    al,BYTE PTR [r8]
   140019f87:	sub    al,0x46
   140019f89:	test   al,0xfd
   140019f8b:	je     0x140019fb3
   140019f8d:	cmp    BYTE PTR [r8],0x4a
   140019f91:	je     0x140019fc2
   140019f93:	cmp    BYTE PTR [r8],0x4b
   140019f97:	jle    0x14001a345
   140019f9d:	cmp    BYTE PTR [r8],0x4d
   140019fa1:	jle    0x140019fb3
   140019fa3:	cmp    BYTE PTR [r8],0x4f
   140019fa7:	jle    0x140019fc2
   140019fa9:	cmp    BYTE PTR [r8],0x51
   140019fad:	jne    0x14001a345
   140019fb3:	inc    r8
   140019fb6:	mov    QWORD PTR [rip+0x24efb],r8        # 0x14003eeb8
   140019fbd:	jmp    0x140019f0d
   140019fc2:	inc    r8
   140019fc5:	mov    QWORD PTR [rip+0x24eec],r8        # 0x14003eeb8
   140019fcc:	mov    al,BYTE PTR [r8]
   140019fcf:	sub    al,0x30
   140019fd1:	cmp    al,0x9
   140019fd3:	ja     0x140019ff6
   140019fd5:	movsx  eax,BYTE PTR [r8]
   140019fd9:	sub    eax,0x2f
   140019fdc:	cdqe   
   140019fde:	add    r8,rax
   140019fe1:	mov    QWORD PTR [rip+0x24ed0],r8        # 0x14003eeb8
   140019fe8:	call   0x140019efc
   140019fed:	bts    eax,0x10
   140019ff1:	jmp    0x14001a3d6
   140019ff6:	mov    edx,0xffff
   140019ffb:	jmp    0x14001a15f
   14001a000:	mov    eax,0xfffe
   14001a005:	jmp    0x14001a3d6
   14001a00a:	cmp    ecx,0x2f
   14001a00d:	jle    0x14001a345
   14001a013:	cmp    ecx,0x35
   14001a016:	jle    0x14001a087
   14001a018:	cmp    ecx,0x41
   14001a01b:	jne    0x14001a345
   14001a021:	and    edx,0xfffff4ff
   14001a027:	or     edx,0x9000
   14001a02d:	jmp    0x14001a15f
   14001a032:	mov    edx,0xfffe
   14001a037:	dec    r8
   14001a03a:	jmp    0x14001a15f
   14001a03f:	or     edx,0x9800
   14001a045:	jmp    0x14001a15f
   14001a04a:	sub    ecx,0x43
   14001a04d:	je     0x14001a159
   14001a053:	dec    ecx
   14001a055:	je     0x14001a14b
   14001a05b:	dec    ecx
   14001a05d:	je     0x14001a13d
   14001a063:	sub    ecx,0xd
   14001a066:	jne    0x14001a345
   14001a06c:	inc    r8
   14001a06f:	mov    r10b,0x1
   14001a072:	mov    QWORD PTR [rip+0x24e3f],r8        # 0x14003eeb8
   14001a079:	mov    cl,BYTE PTR [r8]
   14001a07c:	lea    eax,[rcx-0x30]
   14001a07f:	cmp    al,0x5
   14001a081:	ja     0x14001a12d
   14001a087:	movsx  eax,BYTE PTR [r8]
   14001a08b:	mov    r9d,0x8000
   14001a091:	mov    r11d,0xffffefff
   14001a097:	or     edx,r9d
   14001a09a:	sub    eax,0x30
   14001a09d:	test   r9d,edx
   14001a0a0:	je     0x14001a0ab
   14001a0a2:	and    edx,r11d
   14001a0a5:	bts    edx,0xb
   14001a0a9:	jmp    0x14001a0b1
   14001a0ab:	and    edx,0xffff9fff
   14001a0b1:	test   r10b,r10b
   14001a0b4:	je     0x14001a0c2
   14001a0b6:	btr    edx,0x8
   14001a0ba:	or     edx,0x600
   14001a0c0:	jmp    0x14001a0cc
   14001a0c2:	btr    edx,0x9
   14001a0c6:	or     edx,0x500
   14001a0cc:	test   al,0x1
   14001a0ce:	je     0x14001a0d6
   14001a0d0:	bts    edx,0xd
   14001a0d4:	jmp    0x14001a0da
   14001a0d6:	btr    edx,0xd
   14001a0da:	and    eax,0x6
   14001a0dd:	je     0x14001a113
   14001a0df:	cmp    eax,0x2
   14001a0e2:	je     0x14001a0fe
   14001a0e4:	cmp    eax,0x4
   14001a0e7:	jne    0x14001a345
   14001a0ed:	mov    eax,edx
   14001a0ef:	mov    ecx,edx
   14001a0f1:	and    eax,0xffffff3f
   14001a0f6:	and    edx,0xffffe7ff
   14001a0fc:	jmp    0x14001a125
   14001a0fe:	mov    eax,edx
   14001a100:	mov    ecx,edx
   14001a102:	btr    edx,0xb
   14001a106:	and    eax,0xffffffbf
   14001a109:	bts    eax,0x7
   14001a10d:	bts    edx,0xc
   14001a111:	jmp    0x14001a125
   14001a113:	mov    eax,edx
   14001a115:	mov    ecx,edx
   14001a117:	and    edx,r11d
   14001a11a:	btr    eax,0x7
   14001a11e:	or     eax,0x40
   14001a121:	bts    edx,0xb
   14001a125:	and    ecx,r9d
   14001a128:	cmovne edx,eax
   14001a12b:	jmp    0x14001a15f
   14001a12d:	neg    cl
   14001a12f:	mov    edx,0xffff
   14001a134:	sbb    eax,eax
   14001a136:	add    eax,edx
   14001a138:	jmp    0x14001a3d6
   14001a13d:	and    edx,0xfffff6ff
   14001a143:	or     edx,0x9200
   14001a149:	jmp    0x14001a15f
   14001a14b:	and    edx,0xfffff5ff
   14001a151:	or     edx,0x9100
   14001a157:	jmp    0x14001a15f
   14001a159:	or     edx,0x7c00
   14001a15f:	inc    r8
   14001a162:	mov    QWORD PTR [rip+0x24d4f],r8        # 0x14003eeb8
   14001a169:	jmp    0x14001a3d4
   14001a16e:	mov    cl,BYTE PTR [r8]
   14001a171:	lea    eax,[rcx-0x30]
   14001a174:	cmp    al,0x8
   14001a176:	ja     0x14001a2b9
   14001a17c:	inc    r8
   14001a17f:	movsx  ecx,cl
   14001a182:	btr    edx,0xf
   14001a186:	mov    QWORD PTR [rip+0x24d2b],r8        # 0x14003eeb8
   14001a18d:	sub    ecx,0x30
   14001a190:	je     0x14001a279
   14001a196:	dec    ecx
   14001a198:	je     0x14001a247
   14001a19e:	dec    ecx
   14001a1a0:	je     0x14001a219
   14001a1a2:	dec    ecx
   14001a1a4:	je     0x14001a20d
   14001a1a6:	dec    ecx
   14001a1a8:	je     0x14001a200
   14001a1aa:	dec    ecx
   14001a1ac:	je     0x14001a1ef
   14001a1ae:	dec    ecx
   14001a1b0:	je     0x14001a1de
   14001a1b2:	dec    ecx
   14001a1b4:	je     0x14001a1cd
   14001a1b6:	dec    ecx
   14001a1b8:	jne    0x14001a345
   14001a1be:	btr    edx,0xa
   14001a1c2:	or     edx,0x7800
   14001a1c8:	jmp    0x14001a3d4
   14001a1cd:	and    edx,0xfffff3ff
   14001a1d3:	or     edx,0x7000
   14001a1d9:	jmp    0x14001a3d4
   14001a1de:	and    edx,0xffffebff
   14001a1e4:	or     edx,0x6800
   14001a1ea:	jmp    0x14001a3d4
   14001a1ef:	and    edx,0xffffe3ff
   14001a1f5:	or     edx,0x6000
   14001a1fb:	jmp    0x14001a3d4
   14001a200:	btr    edx,0xe
   14001a204:	bts    edx,0xd
   14001a208:	jmp    0x14001a3d4
   14001a20d:	btr    edx,0xd
   14001a211:	or     edx,r9d
   14001a214:	jmp    0x14001a3d4
   14001a219:	mov    r9d,0x8000
   14001a21f:	test   r9d,edx
   14001a222:	je     0x14001a230
   14001a224:	and    edx,0xfffffaff
   14001a22a:	bts    edx,0x9
   14001a22e:	jmp    0x14001a236
   14001a230:	and    edx,0xffff9fff
   14001a236:	mov    eax,edx
   14001a238:	mov    ecx,edx
   14001a23a:	and    eax,0xffffff3f
   14001a23f:	and    edx,0xffffe7ff
   14001a245:	jmp    0x14001a2ae
   14001a247:	mov    r9d,0x8000
   14001a24d:	test   r9d,edx
   14001a250:	je     0x14001a25e
   14001a252:	and    edx,0xfffffaff
   14001a258:	bts    edx,0x9
   14001a25c:	jmp    0x14001a264
   14001a25e:	and    edx,0xffff9fff
   14001a264:	mov    eax,edx
   14001a266:	mov    ecx,edx
   14001a268:	btr    edx,0xb
   14001a26c:	and    eax,0xffffffbf
   14001a26f:	bts    eax,0x7
   14001a273:	bts    edx,0xc
   14001a277:	jmp    0x14001a2ae
   14001a279:	mov    r9d,0x8000
   14001a27f:	test   r9d,edx
   14001a282:	je     0x14001a290
   14001a284:	and    edx,0xfffffaff
   14001a28a:	bts    edx,0x9
   14001a28e:	jmp    0x14001a296
   14001a290:	and    edx,0xffff9fff
   14001a296:	mov    eax,edx
   14001a298:	mov    ecx,edx
   14001a29a:	mov    r11d,0xffffefff
   14001a2a0:	btr    eax,0x7
   14001a2a4:	and    edx,r11d
   14001a2a7:	or     eax,0x40
   14001a2aa:	bts    edx,0xb
   14001a2ae:	and    ecx,r9d
   14001a2b1:	cmovne edx,eax
   14001a2b4:	jmp    0x14001a3d4
   14001a2b9:	cmp    cl,0x39
   14001a2bc:	jne    0x14001a2d2
   14001a2be:	inc    r8
   14001a2c1:	mov    edx,0xfffd
   14001a2c6:	mov    QWORD PTR [rip+0x24beb],r8        # 0x14003eeb8
   14001a2cd:	jmp    0x14001a3d4
   14001a2d2:	neg    cl
   14001a2d4:	mov    edx,0xfffe
   14001a2d9:	sbb    eax,eax
   14001a2db:	neg    eax
   14001a2dd:	add    edx,eax
   14001a2df:	jmp    0x14001a3d4
   14001a2e4:	movsx  r10d,BYTE PTR [r8]
   14001a2e8:	inc    r8
   14001a2eb:	mov    r9d,0x8000
   14001a2f1:	sub    r10d,0x41
   14001a2f5:	or     edx,r9d
   14001a2f8:	mov    QWORD PTR [rip+0x24bb9],r8        # 0x14003eeb8
   14001a2ff:	test   r10b,0x1
   14001a303:	je     0x14001a30b
   14001a305:	bts    edx,0xd
   14001a309:	jmp    0x14001a30f
   14001a30b:	btr    edx,0xd
   14001a30f:	cmp    r10d,0x18
   14001a313:	jge    0x14001a3d4
   14001a319:	mov    r11d,0xffffefff
   14001a31f:	test   r9d,edx
   14001a322:	je     0x14001a32d
   14001a324:	and    edx,r11d
   14001a327:	bts    edx,0xb
   14001a32b:	jmp    0x14001a333
   14001a32d:	and    edx,0xffff9fff
   14001a333:	mov    eax,r10d
   14001a336:	and    eax,0x18
   14001a339:	je     0x14001a375
   14001a33b:	cmp    eax,0x8
   14001a33e:	je     0x14001a360
   14001a340:	cmp    eax,0x10
   14001a343:	je     0x14001a34f
   14001a345:	mov    eax,0xffff
   14001a34a:	jmp    0x14001a3d6
   14001a34f:	mov    eax,edx
   14001a351:	mov    ecx,edx
   14001a353:	and    eax,0xffffff3f
   14001a358:	and    edx,0xffffe7ff
   14001a35e:	jmp    0x14001a387
   14001a360:	mov    eax,edx
   14001a362:	mov    ecx,edx
   14001a364:	btr    edx,0xb
   14001a368:	and    eax,0xffffffbf
   14001a36b:	bts    eax,0x7
   14001a36f:	bts    edx,0xc
   14001a373:	jmp    0x14001a387
   14001a375:	mov    eax,edx
   14001a377:	mov    ecx,edx
   14001a379:	and    edx,r11d
   14001a37c:	btr    eax,0x7
   14001a380:	or     eax,0x40
   14001a383:	bts    edx,0xb
   14001a387:	and    ecx,r9d
   14001a38a:	cmovne edx,eax
   14001a38d:	and    r10d,0x6
   14001a391:	je     0x14001a3d4
   14001a393:	cmp    r10d,0x2
   14001a397:	je     0x14001a3bd
   14001a399:	cmp    r10d,0x4
   14001a39d:	je     0x14001a3b1
   14001a39f:	cmp    r10d,0x6
   14001a3a3:	jne    0x14001a345
   14001a3a5:	and    edx,0xfffffcff
   14001a3ab:	bts    edx,0xa
   14001a3af:	jmp    0x14001a3d4
   14001a3b1:	and    edx,0xfffff9ff
   14001a3b7:	bts    edx,0x8
   14001a3bb:	jmp    0x14001a3d4
   14001a3bd:	test   r9d,edx
   14001a3c0:	je     0x14001a3ce
   14001a3c2:	and    edx,0xfffffaff
   14001a3c8:	bts    edx,0x9
   14001a3cc:	jmp    0x14001a3d4
   14001a3ce:	and    edx,0xffff9fff
   14001a3d4:	mov    eax,edx
   14001a3d6:	add    rsp,0x28
   14001a3da:	ret    
   14001a3db:	int3   
   14001a3dc:	rex push rbx
   14001a3de:	sub    rsp,0x20
   14001a3e2:	mov    rax,QWORD PTR [rip+0x24acf]        # 0x14003eeb8
   14001a3e9:	mov    rbx,rcx
   14001a3ec:	cmp    BYTE PTR [rax],0x0
   14001a3ef:	je     0x14001a415
   14001a3f1:	cmp    BYTE PTR [rax],0x41
   14001a3f4:	je     0x14001a3fd
   14001a3f6:	mov    edx,0x2
   14001a3fb:	jmp    0x14001a41a
   14001a3fd:	inc    rax
   14001a400:	lea    rdx,[rip+0x19c4d]        # 0x140034054
   14001a407:	mov    QWORD PTR [rip+0x24aaa],rax        # 0x14003eeb8
   14001a40e:	call   0x14001409c
   14001a413:	jmp    0x14001a41f
   14001a415:	mov    edx,0x1
   14001a41a:	call   0x1400140e4
   14001a41f:	mov    rax,rbx
   14001a422:	add    rsp,0x20
   14001a426:	pop    rbx
   14001a427:	ret    
   14001a428:	rex push rbx
   14001a42a:	sub    rsp,0x20
   14001a42e:	mov    rbx,rcx
   14001a431:	call   0x14001a49c
   14001a436:	mov    rax,rbx
   14001a439:	add    rsp,0x20
   14001a43d:	pop    rbx
   14001a43e:	ret    
   14001a43f:	int3   
   14001a440:	rex push rbx
   14001a442:	sub    rsp,0x30
   14001a446:	movups xmm0,XMMWORD PTR [rdx]
   14001a449:	lea    rdx,[rip+0x19c0c]        # 0x14003405c
   14001a450:	mov    rbx,rcx
   14001a453:	movdqu XMMWORD PTR [rcx],xmm0
   14001a457:	call   0x140014a6c
   14001a45c:	lea    rcx,[rsp+0x20]
   14001a461:	call   0x140018c20
   14001a466:	mov    rcx,rbx
   14001a469:	mov    rdx,rax
   14001a46c:	call   0x140014910
   14001a471:	mov    dl,0x7d
   14001a473:	mov    rcx,rbx
   14001a476:	call   0x140014950
   14001a47b:	mov    rax,QWORD PTR [rip+0x24a36]        # 0x14003eeb8
   14001a482:	cmp    BYTE PTR [rax],0x40
   14001a485:	jne    0x14001a491
   14001a487:	inc    rax
   14001a48a:	mov    QWORD PTR [rip+0x24a27],rax        # 0x14003eeb8
   14001a491:	mov    rax,rbx
   14001a494:	add    rsp,0x30
   14001a498:	pop    rbx
   14001a499:	ret    
   14001a49a:	int3   
   14001a49b:	int3   
   14001a49c:	mov    QWORD PTR [rsp+0x8],rbx
   14001a4a1:	mov    QWORD PTR [rsp+0x10],rdi
   14001a4a6:	push   rbp
   14001a4a7:	mov    rbp,rsp
   14001a4aa:	sub    rsp,0x70
   14001a4ae:	movups xmm0,XMMWORD PTR [rdx]
   14001a4b1:	mov    rdi,rcx
   14001a4b4:	movdqu XMMWORD PTR [rcx],xmm0
   14001a4b8:	cmp    BYTE PTR [rcx+0x8],0x1
   14001a4bc:	jg     0x14001a656
   14001a4c2:	mov    rax,QWORD PTR [rip+0x249ef]        # 0x14003eeb8
   14001a4c9:	cmp    BYTE PTR [rax],0x0
   14001a4cc:	je     0x14001a626
   14001a4d2:	and    QWORD PTR [rbp-0x40],0x0
   14001a4d7:	and    QWORD PTR [rbp-0x30],0x0
   14001a4dc:	and    DWORD PTR [rsp+0x20],0x0
   14001a4e1:	mov    eax,0xffff0000
   14001a4e6:	lea    r9,[rbp-0x40]
   14001a4ea:	lea    r8,[rip+0x15593]        # 0x14002fa84
   14001a4f1:	and    DWORD PTR [rbp-0x38],eax
   14001a4f4:	and    DWORD PTR [rbp-0x28],eax
   14001a4f7:	lea    rdx,[rbp-0x30]
   14001a4fb:	lea    rcx,[rbp-0x20]
   14001a4ff:	call   0x140016620
   14001a504:	lea    rcx,[rbp-0x30]
   14001a508:	mov    dl,0x20
   14001a50a:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14001a50e:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001a513:	call   0x140014950
   14001a518:	lea    rcx,[rbp-0x30]
   14001a51c:	mov    rdx,rdi
   14001a51f:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001a523:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001a528:	call   0x140014910
   14001a52d:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001a531:	movdqu XMMWORD PTR [rdi],xmm0
   14001a535:	cmp    BYTE PTR [rdi+0x8],0x1
   14001a539:	jg     0x14001a656
   14001a53f:	mov    rax,QWORD PTR [rip+0x24972]        # 0x14003eeb8
   14001a546:	cmp    BYTE PTR [rax],0x40
   14001a549:	je     0x14001a61a
   14001a54f:	lea    rdx,[rip+0x19b06]        # 0x14003405c
   14001a556:	mov    rcx,rdi
   14001a559:	call   0x140014a6c
   14001a55e:	mov    rax,QWORD PTR [rip+0x24953]        # 0x14003eeb8
   14001a565:	cmp    BYTE PTR [rdi+0x8],0x1
   14001a569:	jg     0x14001a615
   14001a56f:	test   BYTE PTR [rax],0xbf
   14001a572:	je     0x14001a5ec
   14001a574:	lea    rcx,[rbp-0x20]
   14001a578:	call   0x140018c20
   14001a57d:	lea    rcx,[rbp-0x10]
   14001a581:	mov    dl,0x60
   14001a583:	mov    rbx,rax
   14001a586:	call   0x140013fdc
   14001a58b:	lea    rcx,[rbp-0x30]
   14001a58f:	mov    rdx,rbx
   14001a592:	movups xmm0,XMMWORD PTR [rax]
   14001a595:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   14001a59a:	call   0x140014910
   14001a59f:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001a5a3:	lea    rcx,[rbp-0x40]
   14001a5a7:	mov    dl,0x27
   14001a5a9:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   14001a5ae:	call   0x140014950
   14001a5b3:	lea    rdx,[rbp-0x40]
   14001a5b7:	mov    rcx,rdi
   14001a5ba:	call   0x140014910
   14001a5bf:	mov    rax,QWORD PTR [rip+0x248f2]        # 0x14003eeb8
   14001a5c6:	cmp    BYTE PTR [rax],0x40
   14001a5c9:	jne    0x14001a5d5
   14001a5cb:	inc    rax
   14001a5ce:	mov    QWORD PTR [rip+0x248e3],rax        # 0x14003eeb8
   14001a5d5:	cmp    BYTE PTR [rdi+0x8],0x1
   14001a5d9:	jg     0x14001a615
   14001a5db:	cmp    BYTE PTR [rax],0x40
   14001a5de:	je     0x14001a565
   14001a5e0:	lea    rdx,[rip+0x19a7d]        # 0x140034064
   14001a5e7:	jmp    0x14001a556
   14001a5ec:	cmp    BYTE PTR [rdi+0x8],0x1
   14001a5f0:	jg     0x14001a615
   14001a5f2:	cmp    BYTE PTR [rax],0x0
   14001a5f5:	jne    0x14001a604
   14001a5f7:	mov    edx,0x1
   14001a5fc:	mov    rcx,rdi
   14001a5ff:	call   0x140014af8
   14001a604:	mov    dl,0x7d
   14001a606:	mov    rcx,rdi
   14001a609:	call   0x140014950
   14001a60e:	mov    rax,QWORD PTR [rip+0x248a3]        # 0x14003eeb8
   14001a615:	cmp    BYTE PTR [rax],0x40
   14001a618:	jne    0x14001a656
   14001a61a:	inc    rax
   14001a61d:	mov    QWORD PTR [rip+0x24894],rax        # 0x14003eeb8
   14001a624:	jmp    0x14001a656
   14001a626:	cmp    BYTE PTR [rcx+0x8],0x1
   14001a62a:	jg     0x14001a656
   14001a62c:	lea    rcx,[rbp-0x10]
   14001a630:	mov    edx,0x1
   14001a635:	call   0x1400140e4
   14001a63a:	lea    rcx,[rbp-0x30]
   14001a63e:	mov    rdx,rdi
   14001a641:	movups xmm0,XMMWORD PTR [rax]
   14001a644:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   14001a649:	call   0x140014910
   14001a64e:	movups xmm0,XMMWORD PTR [rbp-0x30]
   14001a652:	movdqu XMMWORD PTR [rdi],xmm0
   14001a656:	lea    r11,[rsp+0x70]
   14001a65b:	mov    rax,rdi
   14001a65e:	mov    rbx,QWORD PTR [r11+0x10]
   14001a662:	mov    rdi,QWORD PTR [r11+0x18]
   14001a666:	mov    rsp,r11
   14001a669:	pop    rbp
   14001a66a:	ret    
   14001a66b:	int3   
   14001a66c:	mov    QWORD PTR [rsp+0x10],rbx
   14001a671:	mov    QWORD PTR [rsp+0x18],rsi
   14001a676:	mov    QWORD PTR [rsp+0x20],rdi
   14001a67b:	push   rbp
   14001a67c:	mov    rbp,rsp
   14001a67f:	sub    rsp,0x80
   14001a686:	mov    rax,QWORD PTR [rip+0x21b43]        # 0x14003c1d0
   14001a68d:	xor    rax,rsp
   14001a690:	mov    QWORD PTR [rbp-0x8],rax
   14001a694:	mov    r9,QWORD PTR [rip+0x2481d]        # 0x14003eeb8
   14001a69b:	mov    r10b,r8b
   14001a69e:	mov    sil,dl
   14001a6a1:	movsx  r8d,BYTE PTR [r9]
   14001a6a5:	mov    rbx,rcx
   14001a6a8:	sub    r8d,0x30
   14001a6ac:	cmp    r8d,0x9
   14001a6b0:	ja     0x14001a6d0
   14001a6b2:	mov    rdx,rcx
   14001a6b5:	mov    rcx,QWORD PTR [rip+0x247ec]        # 0x14003eea8
   14001a6bc:	inc    r9
   14001a6bf:	mov    QWORD PTR [rip+0x247f2],r9        # 0x14003eeb8
   14001a6c6:	call   0x14001456c
   14001a6cb:	jmp    0x14001a8bc
   14001a6d0:	and    QWORD PTR [rbp-0x60],0x0
   14001a6d5:	mov    r11d,0xffff0000
   14001a6db:	and    DWORD PTR [rbp-0x58],r11d
   14001a6df:	cmp    BYTE PTR [r9],0x3f
   14001a6e3:	jne    0x14001a735
   14001a6e5:	lea    rcx,[rbp-0x18]
   14001a6e9:	xor    edx,edx
   14001a6eb:	call   0x140019c20
   14001a6f0:	mov    rcx,QWORD PTR [rip+0x247c1]        # 0x14003eeb8
   14001a6f7:	movups xmm0,XMMWORD PTR [rax]
   14001a6fa:	mov    al,BYTE PTR [rcx]
   14001a6fc:	inc    rcx
   14001a6ff:	mov    QWORD PTR [rip+0x247b2],rcx        # 0x14003eeb8
   14001a706:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   14001a70b:	cmp    al,0x40
   14001a70d:	je     0x14001a89a
   14001a713:	dec    rcx
   14001a716:	mov    QWORD PTR [rip+0x2479b],rcx        # 0x14003eeb8
   14001a71d:	mov    al,BYTE PTR [rcx]
   14001a71f:	lea    rcx,[rbp-0x60]
   14001a723:	neg    al
   14001a725:	sbb    edx,edx
   14001a727:	neg    edx
   14001a729:	inc    edx
   14001a72b:	call   0x140014530
   14001a730:	jmp    0x14001a89a
   14001a735:	lea    rdi,[rip+0x1957c]        # 0x140033cb8
   14001a73c:	mov    rcx,r9
   14001a73f:	mov    r8d,0x12
   14001a745:	mov    rax,rdi
   14001a748:	mov    dl,BYTE PTR [rcx]
   14001a74a:	test   dl,dl
   14001a74c:	je     0x14001a75d
   14001a74e:	cmp    dl,BYTE PTR [rax]
   14001a750:	jne    0x14001a75d
   14001a752:	inc    rcx
   14001a755:	inc    rax
   14001a758:	dec    r8d
   14001a75b:	jne    0x14001a748
   14001a75d:	movzx  ecx,BYTE PTR [rcx]
   14001a760:	movzx  eax,BYTE PTR [rax]
   14001a763:	cmp    ecx,eax
   14001a765:	jne    0x14001a76d
   14001a767:	add    r9,0x13
   14001a76b:	jmp    0x14001a7a7
   14001a76d:	lea    rdi,[rip+0x1955c]        # 0x140033cd0
   14001a774:	mov    rcx,r9
   14001a777:	mov    r8d,0xc
   14001a77d:	mov    rax,rdi
   14001a780:	mov    dl,BYTE PTR [rcx]
   14001a782:	test   dl,dl
   14001a784:	je     0x14001a795
   14001a786:	cmp    dl,BYTE PTR [rax]
   14001a788:	jne    0x14001a795
   14001a78a:	inc    rcx
   14001a78d:	inc    rax
   14001a790:	dec    r8d
   14001a793:	jne    0x14001a780
   14001a795:	movzx  ecx,BYTE PTR [rcx]
   14001a798:	movzx  eax,BYTE PTR [rax]
   14001a79b:	cmp    ecx,eax
   14001a79d:	jne    0x14001a856
   14001a7a3:	add    r9,0xd
   14001a7a7:	lea    rcx,[rbp-0x40]
   14001a7ab:	mov    QWORD PTR [rip+0x24706],r9        # 0x14003eeb8
   14001a7b2:	call   0x14001922c
   14001a7b7:	test   DWORD PTR [rip+0x24713],0x4000        # 0x14003eed4
   14001a7c1:	je     0x14001a7fd
   14001a7c3:	lea    rdx,[rbp-0x18]
   14001a7c7:	lea    rcx,[rbp-0x40]
   14001a7cb:	mov    r8d,0x10
   14001a7d1:	call   0x140019304
   14001a7d6:	lea    rcx,[rbp-0x18]
   14001a7da:	call   0x14001f97c
   14001a7df:	mov    ecx,eax
   14001a7e1:	call   QWORD PTR [rip+0x246b1]        # 0x14003ee98
   14001a7e7:	lea    rcx,[rbp-0x60]
   14001a7eb:	test   rax,rax
   14001a7ee:	je     0x14001a801
   14001a7f0:	mov    rdx,rax
   14001a7f3:	call   0x1400144f0
   14001a7f8:	jmp    0x14001a89a
   14001a7fd:	lea    rcx,[rbp-0x60]
   14001a801:	lea    rdx,[rip+0x194d8]        # 0x140033ce0
   14001a808:	call   0x1400144f0
   14001a80d:	lea    rcx,[rbp-0x28]
   14001a811:	mov    rdx,rdi
   14001a814:	call   0x14001409c
   14001a819:	lea    rdx,[rbp-0x40]
   14001a81d:	lea    rcx,[rbp-0x50]
   14001a821:	movups xmm0,XMMWORD PTR [rax]
   14001a824:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   14001a829:	call   0x140014910
   14001a82e:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   14001a832:	lea    rdx,[rip+0x194ab]        # 0x140033ce4
   14001a839:	lea    rcx,[rbp-0x50]
   14001a83d:	movdqa XMMWORD PTR [rbp-0x50],xmm0
   14001a842:	call   0x140014a6c
   14001a847:	lea    rdx,[rbp-0x50]
   14001a84b:	lea    rcx,[rbp-0x60]
   14001a84f:	call   0x140014910
   14001a854:	jmp    0x14001a89a
   14001a856:	test   r10b,r10b
   14001a859:	je     0x14001a87f
   14001a85b:	cmp    BYTE PTR [r9],0x40
   14001a85f:	jne    0x14001a87f
   14001a861:	and    QWORD PTR [rbp-0x40],0x0
   14001a866:	and    DWORD PTR [rbp-0x38],r11d
   14001a86a:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14001a86e:	inc    r9
   14001a871:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   14001a876:	mov    QWORD PTR [rip+0x2463b],r9        # 0x14003eeb8
   14001a87d:	jmp    0x14001a89a
   14001a87f:	lea    rdx,[rip+0x24632]        # 0x14003eeb8
   14001a886:	lea    rcx,[rbp-0x28]
   14001a88a:	mov    r8b,0x40
   14001a88d:	call   0x140013ef0
   14001a892:	movups xmm0,XMMWORD PTR [rax]
   14001a895:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   14001a89a:	test   sil,sil
   14001a89d:	je     0x14001a8b4
   14001a89f:	mov    rcx,QWORD PTR [rip+0x24602]        # 0x14003eea8
   14001a8a6:	cmp    DWORD PTR [rcx],0x9
   14001a8a9:	je     0x14001a8b4
   14001a8ab:	lea    rdx,[rbp-0x60]
   14001a8af:	call   0x140014b3c
   14001a8b4:	movaps xmm0,XMMWORD PTR [rbp-0x60]
   14001a8b8:	movdqu XMMWORD PTR [rbx],xmm0
   14001a8bc:	mov    rax,rbx
   14001a8bf:	mov    rcx,QWORD PTR [rbp-0x8]
   14001a8c3:	xor    rcx,rsp
   14001a8c6:	call   0x14000c380
   14001a8cb:	lea    r11,[rsp+0x80]
   14001a8d3:	mov    rbx,QWORD PTR [r11+0x18]
   14001a8d7:	mov    rsi,QWORD PTR [r11+0x20]
   14001a8db:	mov    rdi,QWORD PTR [r11+0x28]
   14001a8df:	mov    rsp,r11
   14001a8e2:	pop    rbp
   14001a8e3:	ret    
   14001a8e4:	mov    eax,DWORD PTR [rip+0x245ea]        # 0x14003eed4
   14001a8ea:	and    eax,0x4000
   14001a8ef:	ret    
   14001a8f0:	mov    eax,DWORD PTR [rcx+0x8]
   14001a8f3:	shr    eax,0xb
   14001a8f6:	and    eax,0x1
   14001a8f9:	ret    
   14001a8fa:	int3   
   14001a8fb:	int3   
   14001a8fc:	mov    eax,DWORD PTR [rcx+0x8]
   14001a8ff:	shr    eax,0xe
   14001a902:	and    eax,0x1
   14001a905:	ret    
   14001a906:	int3   
   14001a907:	int3   
   14001a908:	xor    eax,eax
   14001a90a:	cmp    QWORD PTR [rcx],rax
   14001a90d:	sete   al
   14001a910:	ret    
   14001a911:	int3   
   14001a912:	int3   
   14001a913:	int3   
   14001a914:	xor    eax,eax
   14001a916:	cmp    DWORD PTR [rcx],0x9
   14001a919:	sete   al
   14001a91c:	ret    
   14001a91d:	int3   
   14001a91e:	int3   
   14001a91f:	int3   
   14001a920:	mov    eax,DWORD PTR [rcx+0x8]
   14001a923:	shr    eax,0xc
   14001a926:	and    eax,0x1
   14001a929:	ret    
   14001a92a:	int3   
   14001a92b:	int3   
   14001a92c:	mov    eax,DWORD PTR [rcx+0x8]
   14001a92f:	shr    eax,0xd
   14001a932:	and    eax,0x1
   14001a935:	ret    
   14001a936:	int3   
   14001a937:	int3   
   14001a938:	mov    eax,DWORD PTR [rcx+0x8]
   14001a93b:	shr    eax,0x8
   14001a93e:	and    eax,0x1
   14001a941:	ret    
   14001a942:	int3   
   14001a943:	int3   
   14001a944:	xor    eax,eax
   14001a946:	cmp    QWORD PTR [rcx],rax
   14001a949:	je     0x14001a959
   14001a94b:	test   DWORD PTR [rcx+0x8],0x200
   14001a952:	je     0x14001a959
   14001a954:	mov    eax,0x1
   14001a959:	ret    
   14001a95a:	int3   
   14001a95b:	int3   
   14001a95c:	xor    eax,eax
   14001a95e:	cmp    QWORD PTR [rcx],rax
   14001a961:	je     0x14001a971
   14001a963:	test   DWORD PTR [rcx+0x8],0x400
   14001a96a:	je     0x14001a971
   14001a96c:	mov    eax,0x1
   14001a971:	ret    
   14001a972:	int3   
   14001a973:	int3   
   14001a974:	mov    eax,DWORD PTR [rcx+0x8]
   14001a977:	shr    eax,0xf
   14001a97a:	and    eax,0x1
   14001a97d:	ret    
   14001a97e:	int3   
   14001a97f:	int3   
   14001a980:	xor    eax,eax
   14001a982:	cmp    BYTE PTR [rcx+0x8],0x1
   14001a986:	setle  al
   14001a989:	ret    
   14001a98a:	int3   
   14001a98b:	int3   
   14001a98c:	mov    rcx,QWORD PTR [rcx]
   14001a98f:	test   rcx,rcx
   14001a992:	jne    0x14001a997
   14001a994:	xor    eax,eax
   14001a996:	ret    
   14001a997:	mov    rax,QWORD PTR [rcx]
   14001a99a:	rex.W jmp QWORD PTR [rax]
   14001a99d:	int3   
   14001a99e:	int3   
   14001a99f:	int3   
   14001a9a0:	mov    eax,DWORD PTR [rcx+0xc]
   14001a9a3:	ret    
   14001a9a4:	mov    eax,0x1
   14001a9a9:	ret    
   14001a9aa:	int3   
   14001a9ab:	int3   
   14001a9ac:	sub    rsp,0x28
   14001a9b0:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a9b4:	xor    eax,eax
   14001a9b6:	test   rcx,rcx
   14001a9b9:	je     0x14001a9c8
   14001a9bb:	mov    rcx,QWORD PTR [rcx]
   14001a9be:	test   rcx,rcx
   14001a9c1:	je     0x14001a9c8
   14001a9c3:	mov    rax,QWORD PTR [rcx]
   14001a9c6:	call   QWORD PTR [rax]
   14001a9c8:	add    rsp,0x28
   14001a9cc:	ret    
   14001a9cd:	int3   
   14001a9ce:	int3   
   14001a9cf:	int3   
   14001a9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a9d5:	mov    QWORD PTR [rsp+0x10],rsi
   14001a9da:	push   rdi
   14001a9db:	sub    rsp,0x20
   14001a9df:	cmp    DWORD PTR [rcx+0x18],0x0
   14001a9e3:	mov    rsi,rcx
   14001a9e6:	jge    0x14001aa04
   14001a9e8:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a9ec:	mov    rbx,QWORD PTR [rsi+0x8]
   14001a9f0:	mov    rax,QWORD PTR [rcx]
   14001a9f3:	call   QWORD PTR [rax]
   14001a9f5:	mov    rdx,QWORD PTR [rbx]
   14001a9f8:	mov    rcx,rbx
   14001a9fb:	mov    edi,eax
   14001a9fd:	call   QWORD PTR [rdx]
   14001a9ff:	add    edi,eax
   14001aa01:	mov    DWORD PTR [rsi+0x18],edi
   14001aa04:	mov    eax,DWORD PTR [rsi+0x18]
   14001aa07:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aa0c:	mov    rsi,QWORD PTR [rsp+0x38]
   14001aa11:	add    rsp,0x20
   14001aa15:	pop    rdi
   14001aa16:	ret    
   14001aa17:	int3   
   14001aa18:	mov    eax,DWORD PTR [rcx+0x10]
   14001aa1b:	ret    
   14001aa1c:	mov    eax,DWORD PTR [rip+0x2452e]        # 0x14003ef50
   14001aa22:	test   al,0x1
   14001aa24:	jne    0x14001aa85
   14001aa26:	or     eax,0x1
   14001aa29:	xor    edx,edx
   14001aa2b:	mov    DWORD PTR [rip+0x244f3],0x1        # 0x14003ef28
   14001aa35:	mov    DWORD PTR [rip+0x24515],eax        # 0x14003ef50
   14001aa3b:	lea    rax,[rip+0x196ae]        # 0x1400340f0
   14001aa42:	mov    DWORD PTR [rip+0x244e0],0x4        # 0x14003ef2c
   14001aa4c:	mov    QWORD PTR [rip+0x244c5],rdx        # 0x14003ef18
   14001aa53:	mov    QWORD PTR [rip+0x244da],0x2        # 0x14003ef38
   14001aa5e:	mov    QWORD PTR [rip+0x244df],0x3        # 0x14003ef48
   14001aa69:	mov    QWORD PTR [rip+0x244a0],rax        # 0x14003ef10
   14001aa70:	mov    QWORD PTR [rip+0x244a9],rax        # 0x14003ef20
   14001aa77:	mov    QWORD PTR [rip+0x244b2],rax        # 0x14003ef30
   14001aa7e:	mov    QWORD PTR [rip+0x244bb],rax        # 0x14003ef40
   14001aa85:	cmp    ecx,0x3
   14001aa88:	ja     0x14001aa9c
   14001aa8a:	movsxd rax,ecx
   14001aa8d:	lea    rcx,[rip+0x2447c]        # 0x14003ef10
   14001aa94:	shl    rax,0x4
   14001aa98:	add    rax,rcx
   14001aa9b:	ret    
   14001aa9c:	lea    rax,[rip+0x2449d]        # 0x14003ef40
   14001aaa3:	ret    
   14001aaa4:	bts    DWORD PTR [rcx+0x8],0xb
   14001aaa9:	ret    
   14001aaaa:	int3   
   14001aaab:	int3   
   14001aaac:	bts    DWORD PTR [rcx+0x8],0xe
   14001aab1:	ret    
   14001aab2:	int3   
   14001aab3:	int3   
   14001aab4:	bts    DWORD PTR [rcx+0x8],0xc
   14001aab9:	ret    
   14001aaba:	int3   
   14001aabb:	int3   
   14001aabc:	bts    DWORD PTR [rcx+0x8],0xd
   14001aac1:	ret    
   14001aac2:	int3   
   14001aac3:	int3   
   14001aac4:	cmp    QWORD PTR [rcx],0x0
   14001aac8:	je     0x14001aacf
   14001aaca:	bts    DWORD PTR [rcx+0x8],0x9
   14001aacf:	ret    
   14001aad0:	bts    DWORD PTR [rcx+0x8],0xf
   14001aad5:	ret    
   14001aad6:	int3   
   14001aad7:	int3   
   14001aad8:	bts    DWORD PTR [rcx+0x8],0x8
   14001aadd:	mov    rax,rcx
   14001aae0:	ret    
   14001aae1:	int3   
   14001aae2:	int3   
   14001aae3:	int3   
   14001aae4:	movsx  eax,BYTE PTR [rcx+0x8]
   14001aae8:	ret    
   14001aae9:	int3   
   14001aaea:	int3   
   14001aaeb:	int3   
   14001aaec:	test   r8d,r8d
   14001aaef:	je     0x14001ab04
   14001aaf1:	sub    rdx,rcx
   14001aaf4:	mov    r8d,r8d
   14001aaf7:	mov    al,BYTE PTR [rdx+rcx*1]
   14001aafa:	mov    BYTE PTR [rcx],al
   14001aafc:	inc    rcx
   14001aaff:	dec    r8
   14001ab02:	jne    0x14001aaf7
   14001ab04:	ret    
   14001ab05:	int3   
   14001ab06:	int3   
   14001ab07:	int3   
   14001ab08:	xor    eax,eax
   14001ab0a:	cmp    BYTE PTR [rcx],al
   14001ab0c:	je     0x14001ab18
   14001ab0e:	inc    rcx
   14001ab11:	inc    eax
   14001ab13:	cmp    BYTE PTR [rcx],0x0
   14001ab16:	jne    0x14001ab0e
   14001ab18:	ret    
   14001ab19:	int3   
   14001ab1a:	int3   
   14001ab1b:	int3   
   14001ab1c:	test   r8d,r8d
   14001ab1f:	jne    0x14001ab24
   14001ab21:	xor    eax,eax
   14001ab23:	ret    
   14001ab24:	or     r9d,0xffffffff
   14001ab28:	jmp    0x14001ab3a
   14001ab2a:	mov    al,BYTE PTR [rcx]
   14001ab2c:	test   al,al
   14001ab2e:	je     0x14001ab3f
   14001ab30:	cmp    al,BYTE PTR [rdx]
   14001ab32:	jne    0x14001ab3f
   14001ab34:	inc    rcx
   14001ab37:	inc    rdx
   14001ab3a:	add    r8d,r9d
   14001ab3d:	jne    0x14001ab2a
   14001ab3f:	movzx  eax,BYTE PTR [rcx]
   14001ab42:	movzx  ecx,BYTE PTR [rdx]
   14001ab45:	sub    eax,ecx
   14001ab47:	ret    
   14001ab48:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab4d:	mov    QWORD PTR [rsp+0x10],rsi
   14001ab52:	mov    QWORD PTR [rsp+0x18],rdi
   14001ab57:	push   r14
   14001ab59:	sub    rsp,0xe0
   14001ab60:	mov    rbx,r9
   14001ab63:	mov    edi,r8d
   14001ab66:	mov    rsi,rdx
   14001ab69:	mov    r14,rcx
   14001ab6c:	test   r9,r9
   14001ab6f:	jne    0x14001ab78
   14001ab71:	xor    eax,eax
   14001ab73:	jmp    0x14001ac2e
   14001ab78:	mov    ecx,0x5
   14001ab7d:	call   0x14000fd24
   14001ab82:	test   eax,eax
   14001ab84:	je     0x14001ab71
   14001ab86:	mov    ecx,0x5
   14001ab8b:	call   0x14000fc2c
   14001ab90:	nop
   14001ab91:	mov    QWORD PTR [rip+0x24348],rbx        # 0x14003eee0
   14001ab98:	mov    rax,QWORD PTR [rsp+0x110]
   14001aba0:	mov    QWORD PTR [rip+0x24341],rax        # 0x14003eee8
   14001aba7:	and    QWORD PTR [rip+0x24351],0x0        # 0x14003ef00
   14001abaf:	xorps  xmm0,xmm0
   14001abb2:	movdqu XMMWORD PTR [rip+0x24336],xmm0        # 0x14003eef0
   14001abba:	movzx  eax,WORD PTR [rsp+0x118]
   14001abc2:	mov    DWORD PTR [rsp+0x28],eax
   14001abc6:	and    QWORD PTR [rsp+0x20],0x0
   14001abcc:	mov    r9d,edi
   14001abcf:	mov    r8,rsi
   14001abd2:	mov    rdx,r14
   14001abd5:	lea    rcx,[rsp+0x30]
   14001abda:	call   0x1400142c0
   14001abdf:	lea    rcx,[rsp+0x30]
   14001abe4:	call   0x1400145b4
   14001abe9:	mov    rbx,rax
   14001abec:	mov    r8,QWORD PTR [rip+0x242f5]        # 0x14003eee8
   14001abf3:	test   r8,r8
   14001abf6:	je     0x14001ac21
   14001abf8:	mov    rcx,QWORD PTR [rip+0x242f1]        # 0x14003eef0
   14001abff:	mov    QWORD PTR [rip+0x242f2],rcx        # 0x14003eef8
   14001ac06:	test   rcx,rcx
   14001ac09:	je     0x14001ac21
   14001ac0b:	mov    rdx,QWORD PTR [rcx]
   14001ac0e:	mov    QWORD PTR [rip+0x242db],rdx        # 0x14003eef0
   14001ac15:	call   r8
   14001ac18:	mov    r8,QWORD PTR [rip+0x242c9]        # 0x14003eee8
   14001ac1f:	jmp    0x14001abf8
   14001ac21:	mov    ecx,0x5
   14001ac26:	call   0x14000fe48
   14001ac2b:	mov    rax,rbx
   14001ac2e:	lea    r11,[rsp+0xe0]
   14001ac36:	mov    rbx,QWORD PTR [r11+0x10]
   14001ac3a:	mov    rsi,QWORD PTR [r11+0x18]
   14001ac3e:	mov    rdi,QWORD PTR [r11+0x20]
   14001ac42:	mov    rsp,r11
   14001ac45:	pop    r14
   14001ac47:	ret    
   14001ac48:	mov    QWORD PTR [rsp+0x8],rbx
   14001ac4d:	mov    QWORD PTR [rsp+0x10],rsi
   14001ac52:	mov    QWORD PTR [rsp+0x18],rdi
   14001ac57:	push   r14
   14001ac59:	sub    rsp,0xe0
   14001ac60:	mov    rbx,r9
   14001ac63:	mov    edi,r8d
   14001ac66:	mov    rsi,rdx
   14001ac69:	mov    r14,rcx
   14001ac6c:	test   r9,r9
   14001ac6f:	jne    0x14001ac78
   14001ac71:	xor    eax,eax
   14001ac73:	jmp    0x14001ad34
   14001ac78:	mov    ecx,0x5
   14001ac7d:	call   0x14000fd24
   14001ac82:	test   eax,eax
   14001ac84:	je     0x14001ac71
   14001ac86:	mov    ecx,0x5
   14001ac8b:	call   0x14000fc2c
   14001ac90:	nop
   14001ac91:	mov    QWORD PTR [rip+0x24248],rbx        # 0x14003eee0
   14001ac98:	mov    rax,QWORD PTR [rsp+0x110]
   14001aca0:	mov    QWORD PTR [rip+0x24241],rax        # 0x14003eee8
   14001aca7:	and    QWORD PTR [rip+0x24251],0x0        # 0x14003ef00
   14001acaf:	xorps  xmm0,xmm0
   14001acb2:	movdqu XMMWORD PTR [rip+0x24236],xmm0        # 0x14003eef0
   14001acba:	mov    eax,DWORD PTR [rsp+0x120]
   14001acc1:	mov    DWORD PTR [rsp+0x28],eax
   14001acc5:	mov    rax,QWORD PTR [rsp+0x118]
   14001accd:	mov    QWORD PTR [rsp+0x20],rax
   14001acd2:	mov    r9d,edi
   14001acd5:	mov    r8,rsi
   14001acd8:	mov    rdx,r14
   14001acdb:	lea    rcx,[rsp+0x30]
   14001ace0:	call   0x1400142c0
   14001ace5:	lea    rcx,[rsp+0x30]
   14001acea:	call   0x1400145b4
   14001acef:	mov    rbx,rax
   14001acf2:	mov    r8,QWORD PTR [rip+0x241ef]        # 0x14003eee8
   14001acf9:	test   r8,r8
   14001acfc:	je     0x14001ad27
   14001acfe:	mov    rcx,QWORD PTR [rip+0x241eb]        # 0x14003eef0
   14001ad05:	mov    QWORD PTR [rip+0x241ec],rcx        # 0x14003eef8
   14001ad0c:	test   rcx,rcx
   14001ad0f:	je     0x14001ad27
   14001ad11:	mov    rdx,QWORD PTR [rcx]
   14001ad14:	mov    QWORD PTR [rip+0x241d5],rdx        # 0x14003eef0
   14001ad1b:	call   r8
   14001ad1e:	mov    r8,QWORD PTR [rip+0x241c3]        # 0x14003eee8
   14001ad25:	jmp    0x14001acfe
   14001ad27:	mov    ecx,0x5
   14001ad2c:	call   0x14000fe48
   14001ad31:	mov    rax,rbx
   14001ad34:	lea    r11,[rsp+0xe0]
   14001ad3c:	mov    rbx,QWORD PTR [r11+0x10]
   14001ad40:	mov    rsi,QWORD PTR [r11+0x18]
   14001ad44:	mov    rdi,QWORD PTR [r11+0x20]
   14001ad48:	mov    rsp,r11
   14001ad4b:	pop    r14
   14001ad4d:	ret    
   14001ad4e:	int3   
   14001ad4f:	int3   
   14001ad50:	xor    eax,eax
   14001ad52:	cmp    ecx,0x80
   14001ad58:	setb   al
   14001ad5b:	ret    
   14001ad5c:	rex push rbx
   14001ad5e:	sub    rsp,0x20
   14001ad62:	mov    ebx,ecx
   14001ad64:	movzx  ecx,cl
   14001ad67:	call   0x14001b340
   14001ad6c:	xor    edx,edx
   14001ad6e:	test   eax,eax
   14001ad70:	jne    0x14001ad77
   14001ad72:	cmp    bl,0x5f
   14001ad75:	jne    0x14001ad7c
   14001ad77:	mov    edx,0x1
   14001ad7c:	mov    eax,edx
   14001ad7e:	add    rsp,0x20
   14001ad82:	pop    rbx
   14001ad83:	ret    
   14001ad84:	rex push rbx
   14001ad86:	sub    rsp,0x20
   14001ad8a:	mov    ebx,ecx
   14001ad8c:	call   0x14001b3c0
   14001ad91:	xor    edx,edx
   14001ad93:	test   eax,eax
   14001ad95:	jne    0x14001ad9c
   14001ad97:	cmp    ebx,0x5f
   14001ad9a:	jne    0x14001ada1
   14001ad9c:	mov    edx,0x1
   14001ada1:	mov    eax,edx
   14001ada3:	add    rsp,0x20
   14001ada7:	pop    rbx
   14001ada8:	ret    
   14001ada9:	int3   
   14001adaa:	int3   
   14001adab:	int3   
   14001adac:	and    ecx,0x7f
   14001adaf:	mov    eax,ecx
   14001adb1:	ret    
   14001adb2:	int3   
   14001adb3:	int3   
   14001adb4:	rex push rbx
   14001adb6:	sub    rsp,0x40
   14001adba:	movsxd rbx,ecx
   14001adbd:	lea    rcx,[rsp+0x20]
   14001adc2:	call   0x140008fac
   14001adc7:	mov    rax,QWORD PTR [rsp+0x20]
   14001adcc:	cmp    DWORD PTR [rax+0xd4],0x1
   14001add3:	jle    0x14001adea
   14001add5:	lea    r8,[rsp+0x20]
   14001adda:	mov    edx,0x107
   14001addf:	mov    ecx,ebx
   14001ade1:	call   0x14001f9b8
   14001ade6:	mov    ecx,eax
   14001ade8:	jmp    0x14001adfb
   14001adea:	mov    rax,QWORD PTR [rax+0x108]
   14001adf1:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001adf5:	and    ecx,0x107
   14001adfb:	cmp    BYTE PTR [rsp+0x38],0x0
   14001ae00:	je     0x14001ae0e
   14001ae02:	mov    rax,QWORD PTR [rsp+0x30]
   14001ae07:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001ae0e:	mov    eax,ecx
   14001ae10:	add    rsp,0x40
   14001ae14:	pop    rbx
   14001ae15:	ret    
   14001ae16:	int3   
   14001ae17:	int3   
   14001ae18:	rex push rbx
   14001ae1a:	sub    rsp,0x40
   14001ae1e:	movsxd rbx,ecx
   14001ae21:	lea    rcx,[rsp+0x20]
   14001ae26:	call   0x140008fac
   14001ae2b:	mov    rax,QWORD PTR [rsp+0x20]
   14001ae30:	cmp    DWORD PTR [rax+0xd4],0x1
   14001ae37:	jle    0x14001ae4e
   14001ae39:	lea    r8,[rsp+0x20]
   14001ae3e:	mov    edx,0x103
   14001ae43:	mov    ecx,ebx
   14001ae45:	call   0x14001f9b8
   14001ae4a:	mov    ecx,eax
   14001ae4c:	jmp    0x14001ae5f
   14001ae4e:	mov    rax,QWORD PTR [rax+0x108]
   14001ae55:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001ae59:	and    ecx,0x103
   14001ae5f:	cmp    BYTE PTR [rsp+0x38],0x0
   14001ae64:	je     0x14001ae72
   14001ae66:	mov    rax,QWORD PTR [rsp+0x30]
   14001ae6b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001ae72:	mov    eax,ecx
   14001ae74:	add    rsp,0x40
   14001ae78:	pop    rbx
   14001ae79:	ret    
   14001ae7a:	int3   
   14001ae7b:	int3   
   14001ae7c:	rex push rbx
   14001ae7e:	sub    rsp,0x40
   14001ae82:	movsxd rbx,ecx
   14001ae85:	lea    rcx,[rsp+0x20]
   14001ae8a:	call   0x140008fac
   14001ae8f:	cmp    ebx,0x9
   14001ae92:	jne    0x14001ae99
   14001ae94:	lea    ecx,[rbx+0x37]
   14001ae97:	jmp    0x14001aece
   14001ae99:	mov    rax,QWORD PTR [rsp+0x20]
   14001ae9e:	cmp    DWORD PTR [rax+0xd4],0x1
   14001aea5:	jle    0x14001aebc
   14001aea7:	lea    r8,[rsp+0x20]
   14001aeac:	mov    edx,0x40
   14001aeb1:	mov    ecx,ebx
   14001aeb3:	call   0x14001f9b8
   14001aeb8:	mov    ecx,eax
   14001aeba:	jmp    0x14001aece
   14001aebc:	mov    rax,QWORD PTR [rax+0x108]
   14001aec3:	mov    ecx,0x40
   14001aec8:	movzx  edx,WORD PTR [rax+rbx*2]
   14001aecc:	and    ecx,edx
   14001aece:	cmp    BYTE PTR [rsp+0x38],0x0
   14001aed3:	je     0x14001aee1
   14001aed5:	mov    rax,QWORD PTR [rsp+0x30]
   14001aeda:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001aee1:	mov    eax,ecx
   14001aee3:	add    rsp,0x40
   14001aee7:	pop    rbx
   14001aee8:	ret    
   14001aee9:	int3   
   14001aeea:	int3   
   14001aeeb:	int3   
   14001aeec:	rex push rbx
   14001aeee:	sub    rsp,0x40
   14001aef2:	movsxd rbx,ecx
   14001aef5:	lea    rcx,[rsp+0x20]
   14001aefa:	call   0x140008fac
   14001aeff:	mov    rax,QWORD PTR [rsp+0x20]
   14001af04:	cmp    DWORD PTR [rax+0xd4],0x1
   14001af0b:	jle    0x14001af22
   14001af0d:	lea    r8,[rsp+0x20]
   14001af12:	mov    edx,0x20
   14001af17:	mov    ecx,ebx
   14001af19:	call   0x14001f9b8
   14001af1e:	mov    ecx,eax
   14001af20:	jmp    0x14001af30
   14001af22:	mov    rax,QWORD PTR [rax+0x108]
   14001af29:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001af2d:	and    ecx,0x20
   14001af30:	cmp    BYTE PTR [rsp+0x38],0x0
   14001af35:	je     0x14001af43
   14001af37:	mov    rax,QWORD PTR [rsp+0x30]
   14001af3c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001af43:	mov    eax,ecx
   14001af45:	add    rsp,0x40
   14001af49:	pop    rbx
   14001af4a:	ret    
   14001af4b:	int3   
   14001af4c:	rex push rbx
   14001af4e:	sub    rsp,0x40
   14001af52:	movsxd rbx,ecx
   14001af55:	lea    rcx,[rsp+0x20]
   14001af5a:	call   0x140008fac
   14001af5f:	mov    rax,QWORD PTR [rsp+0x20]
   14001af64:	cmp    DWORD PTR [rax+0xd4],0x1
   14001af6b:	jle    0x14001af82
   14001af6d:	lea    r8,[rsp+0x20]
   14001af72:	mov    edx,0x107
   14001af77:	mov    ecx,ebx
   14001af79:	call   0x14001f9b8
   14001af7e:	mov    edx,eax
   14001af80:	jmp    0x14001af93
   14001af82:	mov    rax,QWORD PTR [rax+0x108]
   14001af89:	movzx  edx,WORD PTR [rax+rbx*2]
   14001af8d:	and    edx,0x107
   14001af93:	xor    ecx,ecx
   14001af95:	cmp    BYTE PTR [rsp+0x38],cl
   14001af99:	je     0x14001afa7
   14001af9b:	mov    rax,QWORD PTR [rsp+0x30]
   14001afa0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001afa7:	test   edx,edx
   14001afa9:	jne    0x14001afb0
   14001afab:	cmp    ebx,0x5f
   14001afae:	jne    0x14001afb5
   14001afb0:	mov    ecx,0x1
   14001afb5:	mov    eax,ecx
   14001afb7:	add    rsp,0x40
   14001afbb:	pop    rbx
   14001afbc:	ret    
   14001afbd:	int3   
   14001afbe:	int3   
   14001afbf:	int3   
   14001afc0:	rex push rbx
   14001afc2:	sub    rsp,0x40
   14001afc6:	movsxd rbx,ecx
   14001afc9:	lea    rcx,[rsp+0x20]
   14001afce:	call   0x140008fac
   14001afd3:	mov    rax,QWORD PTR [rsp+0x20]
   14001afd8:	cmp    DWORD PTR [rax+0xd4],0x1
   14001afdf:	jle    0x14001aff6
   14001afe1:	lea    r8,[rsp+0x20]
   14001afe6:	mov    edx,0x103
   14001afeb:	mov    ecx,ebx
   14001afed:	call   0x14001f9b8
   14001aff2:	mov    edx,eax
   14001aff4:	jmp    0x14001b007
   14001aff6:	mov    rax,QWORD PTR [rax+0x108]
   14001affd:	movzx  edx,WORD PTR [rax+rbx*2]
   14001b001:	and    edx,0x103
   14001b007:	xor    ecx,ecx
   14001b009:	cmp    BYTE PTR [rsp+0x38],cl
   14001b00d:	je     0x14001b01b
   14001b00f:	mov    rax,QWORD PTR [rsp+0x30]
   14001b014:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b01b:	test   edx,edx
   14001b01d:	jne    0x14001b024
   14001b01f:	cmp    ebx,0x5f
   14001b022:	jne    0x14001b029
   14001b024:	mov    ecx,0x1
   14001b029:	mov    eax,ecx
   14001b02b:	add    rsp,0x40
   14001b02f:	pop    rbx
   14001b030:	ret    
   14001b031:	int3   
   14001b032:	int3   
   14001b033:	int3   
   14001b034:	rex push rbx
   14001b036:	sub    rsp,0x40
   14001b03a:	movsxd rbx,ecx
   14001b03d:	lea    rcx,[rsp+0x20]
   14001b042:	call   0x140008fac
   14001b047:	mov    rax,QWORD PTR [rsp+0x20]
   14001b04c:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b053:	jle    0x14001b06a
   14001b055:	lea    r8,[rsp+0x20]
   14001b05a:	mov    edx,0x4
   14001b05f:	mov    ecx,ebx
   14001b061:	call   0x14001f9b8
   14001b066:	mov    ecx,eax
   14001b068:	jmp    0x14001b078
   14001b06a:	mov    rax,QWORD PTR [rax+0x108]
   14001b071:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b075:	and    ecx,0x4
   14001b078:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b07d:	je     0x14001b08b
   14001b07f:	mov    rax,QWORD PTR [rsp+0x30]
   14001b084:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b08b:	mov    eax,ecx
   14001b08d:	add    rsp,0x40
   14001b091:	pop    rbx
   14001b092:	ret    
   14001b093:	int3   
   14001b094:	rex push rbx
   14001b096:	sub    rsp,0x40
   14001b09a:	movsxd rbx,ecx
   14001b09d:	lea    rcx,[rsp+0x20]
   14001b0a2:	call   0x140008fac
   14001b0a7:	mov    rax,QWORD PTR [rsp+0x20]
   14001b0ac:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b0b3:	jle    0x14001b0ca
   14001b0b5:	lea    r8,[rsp+0x20]
   14001b0ba:	mov    edx,0x117
   14001b0bf:	mov    ecx,ebx
   14001b0c1:	call   0x14001f9b8
   14001b0c6:	mov    ecx,eax
   14001b0c8:	jmp    0x14001b0db
   14001b0ca:	mov    rax,QWORD PTR [rax+0x108]
   14001b0d1:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b0d5:	and    ecx,0x117
   14001b0db:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b0e0:	je     0x14001b0ee
   14001b0e2:	mov    rax,QWORD PTR [rsp+0x30]
   14001b0e7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b0ee:	mov    eax,ecx
   14001b0f0:	add    rsp,0x40
   14001b0f4:	pop    rbx
   14001b0f5:	ret    
   14001b0f6:	int3   
   14001b0f7:	int3   
   14001b0f8:	rex push rbx
   14001b0fa:	sub    rsp,0x40
   14001b0fe:	movsxd rbx,ecx
   14001b101:	lea    rcx,[rsp+0x20]
   14001b106:	call   0x140008fac
   14001b10b:	mov    rax,QWORD PTR [rsp+0x20]
   14001b110:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b117:	jle    0x14001b12e
   14001b119:	lea    r8,[rsp+0x20]
   14001b11e:	mov    edx,0x2
   14001b123:	mov    ecx,ebx
   14001b125:	call   0x14001f9b8
   14001b12a:	mov    ecx,eax
   14001b12c:	jmp    0x14001b13c
   14001b12e:	mov    rax,QWORD PTR [rax+0x108]
   14001b135:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b139:	and    ecx,0x2
   14001b13c:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b141:	je     0x14001b14f
   14001b143:	mov    rax,QWORD PTR [rsp+0x30]
   14001b148:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b14f:	mov    eax,ecx
   14001b151:	add    rsp,0x40
   14001b155:	pop    rbx
   14001b156:	ret    
   14001b157:	int3   
   14001b158:	rex push rbx
   14001b15a:	sub    rsp,0x40
   14001b15e:	movsxd rbx,ecx
   14001b161:	lea    rcx,[rsp+0x20]
   14001b166:	call   0x140008fac
   14001b16b:	mov    rax,QWORD PTR [rsp+0x20]
   14001b170:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b177:	jle    0x14001b18e
   14001b179:	lea    r8,[rsp+0x20]
   14001b17e:	mov    edx,0x157
   14001b183:	mov    ecx,ebx
   14001b185:	call   0x14001f9b8
   14001b18a:	mov    ecx,eax
   14001b18c:	jmp    0x14001b19f
   14001b18e:	mov    rax,QWORD PTR [rax+0x108]
   14001b195:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b199:	and    ecx,0x157
   14001b19f:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b1a4:	je     0x14001b1b2
   14001b1a6:	mov    rax,QWORD PTR [rsp+0x30]
   14001b1ab:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b1b2:	mov    eax,ecx
   14001b1b4:	add    rsp,0x40
   14001b1b8:	pop    rbx
   14001b1b9:	ret    
   14001b1ba:	int3   
   14001b1bb:	int3   
   14001b1bc:	rex push rbx
   14001b1be:	sub    rsp,0x40
   14001b1c2:	movsxd rbx,ecx
   14001b1c5:	lea    rcx,[rsp+0x20]
   14001b1ca:	call   0x140008fac
   14001b1cf:	mov    rax,QWORD PTR [rsp+0x20]
   14001b1d4:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b1db:	jle    0x14001b1f2
   14001b1dd:	lea    r8,[rsp+0x20]
   14001b1e2:	mov    edx,0x10
   14001b1e7:	mov    ecx,ebx
   14001b1e9:	call   0x14001f9b8
   14001b1ee:	mov    ecx,eax
   14001b1f0:	jmp    0x14001b200
   14001b1f2:	mov    rax,QWORD PTR [rax+0x108]
   14001b1f9:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b1fd:	and    ecx,0x10
   14001b200:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b205:	je     0x14001b213
   14001b207:	mov    rax,QWORD PTR [rsp+0x30]
   14001b20c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b213:	mov    eax,ecx
   14001b215:	add    rsp,0x40
   14001b219:	pop    rbx
   14001b21a:	ret    
   14001b21b:	int3   
   14001b21c:	rex push rbx
   14001b21e:	sub    rsp,0x40
   14001b222:	movsxd rbx,ecx
   14001b225:	lea    rcx,[rsp+0x20]
   14001b22a:	call   0x140008fac
   14001b22f:	mov    rax,QWORD PTR [rsp+0x20]
   14001b234:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b23b:	jle    0x14001b252
   14001b23d:	lea    r8,[rsp+0x20]
   14001b242:	mov    edx,0x8
   14001b247:	mov    ecx,ebx
   14001b249:	call   0x14001f9b8
   14001b24e:	mov    ecx,eax
   14001b250:	jmp    0x14001b260
   14001b252:	mov    rax,QWORD PTR [rax+0x108]
   14001b259:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b25d:	and    ecx,0x8
   14001b260:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b265:	je     0x14001b273
   14001b267:	mov    rax,QWORD PTR [rsp+0x30]
   14001b26c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b273:	mov    eax,ecx
   14001b275:	add    rsp,0x40
   14001b279:	pop    rbx
   14001b27a:	ret    
   14001b27b:	int3   
   14001b27c:	rex push rbx
   14001b27e:	sub    rsp,0x40
   14001b282:	movsxd rbx,ecx
   14001b285:	lea    rcx,[rsp+0x20]
   14001b28a:	call   0x140008fac
   14001b28f:	mov    rax,QWORD PTR [rsp+0x20]
   14001b294:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b29b:	jle    0x14001b2b2
   14001b29d:	lea    r8,[rsp+0x20]
   14001b2a2:	mov    edx,0x1
   14001b2a7:	mov    ecx,ebx
   14001b2a9:	call   0x14001f9b8
   14001b2ae:	mov    ecx,eax
   14001b2b0:	jmp    0x14001b2c0
   14001b2b2:	mov    rax,QWORD PTR [rax+0x108]
   14001b2b9:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b2bd:	and    ecx,0x1
   14001b2c0:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b2c5:	je     0x14001b2d3
   14001b2c7:	mov    rax,QWORD PTR [rsp+0x30]
   14001b2cc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b2d3:	mov    eax,ecx
   14001b2d5:	add    rsp,0x40
   14001b2d9:	pop    rbx
   14001b2da:	ret    
   14001b2db:	int3   
   14001b2dc:	rex push rbx
   14001b2de:	sub    rsp,0x40
   14001b2e2:	movsxd rbx,ecx
   14001b2e5:	lea    rcx,[rsp+0x20]
   14001b2ea:	call   0x140008fac
   14001b2ef:	mov    rax,QWORD PTR [rsp+0x20]
   14001b2f4:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b2fb:	jle    0x14001b312
   14001b2fd:	lea    r8,[rsp+0x20]
   14001b302:	mov    edx,0x80
   14001b307:	mov    ecx,ebx
   14001b309:	call   0x14001f9b8
   14001b30e:	mov    ecx,eax
   14001b310:	jmp    0x14001b323
   14001b312:	mov    rax,QWORD PTR [rax+0x108]
   14001b319:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b31d:	and    ecx,0x80
   14001b323:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b328:	je     0x14001b336
   14001b32a:	mov    rax,QWORD PTR [rsp+0x30]
   14001b32f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b336:	mov    eax,ecx
   14001b338:	add    rsp,0x40
   14001b33c:	pop    rbx
   14001b33d:	ret    
   14001b33e:	int3   
   14001b33f:	int3   
   14001b340:	rex push rbx
   14001b342:	sub    rsp,0x40
   14001b346:	cmp    DWORD PTR [rip+0x23c3b],0x0        # 0x14003ef88
   14001b34d:	movsxd rbx,ecx
   14001b350:	jne    0x14001b364
   14001b352:	mov    rax,QWORD PTR [rip+0x21e5f]        # 0x14003d1b8
   14001b359:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b35d:	and    eax,0x107
   14001b362:	jmp    0x14001b3b9
   14001b364:	lea    rcx,[rsp+0x20]
   14001b369:	xor    edx,edx
   14001b36b:	call   0x140008fac
   14001b370:	mov    rax,QWORD PTR [rsp+0x20]
   14001b375:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b37c:	jle    0x14001b393
   14001b37e:	lea    r8,[rsp+0x20]
   14001b383:	mov    edx,0x107
   14001b388:	mov    ecx,ebx
   14001b38a:	call   0x14001f9b8
   14001b38f:	mov    ecx,eax
   14001b391:	jmp    0x14001b3a4
   14001b393:	mov    rax,QWORD PTR [rax+0x108]
   14001b39a:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b39e:	and    ecx,0x107
   14001b3a4:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b3a9:	je     0x14001b3b7
   14001b3ab:	mov    rax,QWORD PTR [rsp+0x30]
   14001b3b0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b3b7:	mov    eax,ecx
   14001b3b9:	add    rsp,0x40
   14001b3bd:	pop    rbx
   14001b3be:	ret    
   14001b3bf:	int3   
   14001b3c0:	rex push rbx
   14001b3c2:	sub    rsp,0x40
   14001b3c6:	cmp    DWORD PTR [rip+0x23bbb],0x0        # 0x14003ef88
   14001b3cd:	movsxd rbx,ecx
   14001b3d0:	jne    0x14001b3e4
   14001b3d2:	mov    rax,QWORD PTR [rip+0x21ddf]        # 0x14003d1b8
   14001b3d9:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b3dd:	and    eax,0x103
   14001b3e2:	jmp    0x14001b439
   14001b3e4:	lea    rcx,[rsp+0x20]
   14001b3e9:	xor    edx,edx
   14001b3eb:	call   0x140008fac
   14001b3f0:	mov    rax,QWORD PTR [rsp+0x20]
   14001b3f5:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b3fc:	jle    0x14001b413
   14001b3fe:	lea    r8,[rsp+0x20]
   14001b403:	mov    edx,0x103
   14001b408:	mov    ecx,ebx
   14001b40a:	call   0x14001f9b8
   14001b40f:	mov    ecx,eax
   14001b411:	jmp    0x14001b424
   14001b413:	mov    rax,QWORD PTR [rax+0x108]
   14001b41a:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b41e:	and    ecx,0x103
   14001b424:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b429:	je     0x14001b437
   14001b42b:	mov    rax,QWORD PTR [rsp+0x30]
   14001b430:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b437:	mov    eax,ecx
   14001b439:	add    rsp,0x40
   14001b43d:	pop    rbx
   14001b43e:	ret    
   14001b43f:	int3   
   14001b440:	cmp    DWORD PTR [rip+0x23b41],0x0        # 0x14003ef88
   14001b447:	jne    0x14001b468
   14001b449:	cmp    ecx,0x9
   14001b44c:	jne    0x14001b452
   14001b44e:	lea    eax,[rcx+0x37]
   14001b451:	ret    
   14001b452:	mov    rax,QWORD PTR [rip+0x21d5f]        # 0x14003d1b8
   14001b459:	movsxd rcx,ecx
   14001b45c:	movzx  edx,WORD PTR [rax+rcx*2]
   14001b460:	mov    eax,0x40
   14001b465:	and    eax,edx
   14001b467:	ret    
   14001b468:	xor    edx,edx
   14001b46a:	jmp    0x14001ae7c
   14001b46f:	int3   
   14001b470:	rex push rbx
   14001b472:	sub    rsp,0x40
   14001b476:	cmp    DWORD PTR [rip+0x23b0b],0x0        # 0x14003ef88
   14001b47d:	movsxd rbx,ecx
   14001b480:	jne    0x14001b492
   14001b482:	mov    rax,QWORD PTR [rip+0x21d2f]        # 0x14003d1b8
   14001b489:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b48d:	and    eax,0x20
   14001b490:	jmp    0x14001b4e4
   14001b492:	lea    rcx,[rsp+0x20]
   14001b497:	xor    edx,edx
   14001b499:	call   0x140008fac
   14001b49e:	mov    rax,QWORD PTR [rsp+0x20]
   14001b4a3:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b4aa:	jle    0x14001b4c1
   14001b4ac:	lea    r8,[rsp+0x20]
   14001b4b1:	mov    edx,0x20
   14001b4b6:	mov    ecx,ebx
   14001b4b8:	call   0x14001f9b8
   14001b4bd:	mov    ecx,eax
   14001b4bf:	jmp    0x14001b4cf
   14001b4c1:	mov    rax,QWORD PTR [rax+0x108]
   14001b4c8:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b4cc:	and    ecx,0x20
   14001b4cf:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b4d4:	je     0x14001b4e2
   14001b4d6:	mov    rax,QWORD PTR [rsp+0x30]
   14001b4db:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b4e2:	mov    eax,ecx
   14001b4e4:	add    rsp,0x40
   14001b4e8:	pop    rbx
   14001b4e9:	ret    
   14001b4ea:	int3   
   14001b4eb:	int3   
   14001b4ec:	rex push rbx
   14001b4ee:	sub    rsp,0x40
   14001b4f2:	cmp    DWORD PTR [rip+0x23a8f],0x0        # 0x14003ef88
   14001b4f9:	movsxd rbx,ecx
   14001b4fc:	jne    0x14001b50e
   14001b4fe:	mov    rax,QWORD PTR [rip+0x21cb3]        # 0x14003d1b8
   14001b505:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b509:	and    eax,0x4
   14001b50c:	jmp    0x14001b560
   14001b50e:	lea    rcx,[rsp+0x20]
   14001b513:	xor    edx,edx
   14001b515:	call   0x140008fac
   14001b51a:	mov    rax,QWORD PTR [rsp+0x20]
   14001b51f:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b526:	jle    0x14001b53d
   14001b528:	lea    r8,[rsp+0x20]
   14001b52d:	mov    edx,0x4
   14001b532:	mov    ecx,ebx
   14001b534:	call   0x14001f9b8
   14001b539:	mov    ecx,eax
   14001b53b:	jmp    0x14001b54b
   14001b53d:	mov    rax,QWORD PTR [rax+0x108]
   14001b544:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b548:	and    ecx,0x4
   14001b54b:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b550:	je     0x14001b55e
   14001b552:	mov    rax,QWORD PTR [rsp+0x30]
   14001b557:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b55e:	mov    eax,ecx
   14001b560:	add    rsp,0x40
   14001b564:	pop    rbx
   14001b565:	ret    
   14001b566:	int3   
   14001b567:	int3   
   14001b568:	rex push rbx
   14001b56a:	sub    rsp,0x40
   14001b56e:	cmp    DWORD PTR [rip+0x23a13],0x0        # 0x14003ef88
   14001b575:	movsxd rbx,ecx
   14001b578:	jne    0x14001b58c
   14001b57a:	mov    rax,QWORD PTR [rip+0x21c37]        # 0x14003d1b8
   14001b581:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b585:	and    eax,0x117
   14001b58a:	jmp    0x14001b5e1
   14001b58c:	lea    rcx,[rsp+0x20]
   14001b591:	xor    edx,edx
   14001b593:	call   0x140008fac
   14001b598:	mov    rax,QWORD PTR [rsp+0x20]
   14001b59d:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b5a4:	jle    0x14001b5bb
   14001b5a6:	lea    r8,[rsp+0x20]
   14001b5ab:	mov    edx,0x117
   14001b5b0:	mov    ecx,ebx
   14001b5b2:	call   0x14001f9b8
   14001b5b7:	mov    ecx,eax
   14001b5b9:	jmp    0x14001b5cc
   14001b5bb:	mov    rax,QWORD PTR [rax+0x108]
   14001b5c2:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b5c6:	and    ecx,0x117
   14001b5cc:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b5d1:	je     0x14001b5df
   14001b5d3:	mov    rax,QWORD PTR [rsp+0x30]
   14001b5d8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b5df:	mov    eax,ecx
   14001b5e1:	add    rsp,0x40
   14001b5e5:	pop    rbx
   14001b5e6:	ret    
   14001b5e7:	int3   
   14001b5e8:	rex push rbx
   14001b5ea:	sub    rsp,0x40
   14001b5ee:	cmp    DWORD PTR [rip+0x23993],0x0        # 0x14003ef88
   14001b5f5:	movsxd rbx,ecx
   14001b5f8:	jne    0x14001b60a
   14001b5fa:	mov    rax,QWORD PTR [rip+0x21bb7]        # 0x14003d1b8
   14001b601:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b605:	and    eax,0x2
   14001b608:	jmp    0x14001b65c
   14001b60a:	lea    rcx,[rsp+0x20]
   14001b60f:	xor    edx,edx
   14001b611:	call   0x140008fac
   14001b616:	mov    rax,QWORD PTR [rsp+0x20]
   14001b61b:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b622:	jle    0x14001b639
   14001b624:	lea    r8,[rsp+0x20]
   14001b629:	mov    edx,0x2
   14001b62e:	mov    ecx,ebx
   14001b630:	call   0x14001f9b8
   14001b635:	mov    ecx,eax
   14001b637:	jmp    0x14001b647
   14001b639:	mov    rax,QWORD PTR [rax+0x108]
   14001b640:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b644:	and    ecx,0x2
   14001b647:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b64c:	je     0x14001b65a
   14001b64e:	mov    rax,QWORD PTR [rsp+0x30]
   14001b653:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b65a:	mov    eax,ecx
   14001b65c:	add    rsp,0x40
   14001b660:	pop    rbx
   14001b661:	ret    
   14001b662:	int3   
   14001b663:	int3   
   14001b664:	rex push rbx
   14001b666:	sub    rsp,0x40
   14001b66a:	cmp    DWORD PTR [rip+0x23917],0x0        # 0x14003ef88
   14001b671:	movsxd rbx,ecx
   14001b674:	jne    0x14001b688
   14001b676:	mov    rax,QWORD PTR [rip+0x21b3b]        # 0x14003d1b8
   14001b67d:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b681:	and    eax,0x157
   14001b686:	jmp    0x14001b6dd
   14001b688:	lea    rcx,[rsp+0x20]
   14001b68d:	xor    edx,edx
   14001b68f:	call   0x140008fac
   14001b694:	mov    rax,QWORD PTR [rsp+0x20]
   14001b699:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b6a0:	jle    0x14001b6b7
   14001b6a2:	lea    r8,[rsp+0x20]
   14001b6a7:	mov    edx,0x157
   14001b6ac:	mov    ecx,ebx
   14001b6ae:	call   0x14001f9b8
   14001b6b3:	mov    ecx,eax
   14001b6b5:	jmp    0x14001b6c8
   14001b6b7:	mov    rax,QWORD PTR [rax+0x108]
   14001b6be:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b6c2:	and    ecx,0x157
   14001b6c8:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b6cd:	je     0x14001b6db
   14001b6cf:	mov    rax,QWORD PTR [rsp+0x30]
   14001b6d4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b6db:	mov    eax,ecx
   14001b6dd:	add    rsp,0x40
   14001b6e1:	pop    rbx
   14001b6e2:	ret    
   14001b6e3:	int3   
   14001b6e4:	rex push rbx
   14001b6e6:	sub    rsp,0x40
   14001b6ea:	cmp    DWORD PTR [rip+0x23897],0x0        # 0x14003ef88
   14001b6f1:	movsxd rbx,ecx
   14001b6f4:	jne    0x14001b706
   14001b6f6:	mov    rax,QWORD PTR [rip+0x21abb]        # 0x14003d1b8
   14001b6fd:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b701:	and    eax,0x10
   14001b704:	jmp    0x14001b758
   14001b706:	lea    rcx,[rsp+0x20]
   14001b70b:	xor    edx,edx
   14001b70d:	call   0x140008fac
   14001b712:	mov    rax,QWORD PTR [rsp+0x20]
   14001b717:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b71e:	jle    0x14001b735
   14001b720:	lea    r8,[rsp+0x20]
   14001b725:	mov    edx,0x10
   14001b72a:	mov    ecx,ebx
   14001b72c:	call   0x14001f9b8
   14001b731:	mov    ecx,eax
   14001b733:	jmp    0x14001b743
   14001b735:	mov    rax,QWORD PTR [rax+0x108]
   14001b73c:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b740:	and    ecx,0x10
   14001b743:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b748:	je     0x14001b756
   14001b74a:	mov    rax,QWORD PTR [rsp+0x30]
   14001b74f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b756:	mov    eax,ecx
   14001b758:	add    rsp,0x40
   14001b75c:	pop    rbx
   14001b75d:	ret    
   14001b75e:	int3   
   14001b75f:	int3   
   14001b760:	rex push rbx
   14001b762:	sub    rsp,0x40
   14001b766:	cmp    DWORD PTR [rip+0x2381b],0x0        # 0x14003ef88
   14001b76d:	movsxd rbx,ecx
   14001b770:	jne    0x14001b782
   14001b772:	mov    rax,QWORD PTR [rip+0x21a3f]        # 0x14003d1b8
   14001b779:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b77d:	and    eax,0x8
   14001b780:	jmp    0x14001b7d4
   14001b782:	lea    rcx,[rsp+0x20]
   14001b787:	xor    edx,edx
   14001b789:	call   0x140008fac
   14001b78e:	mov    rax,QWORD PTR [rsp+0x20]
   14001b793:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b79a:	jle    0x14001b7b1
   14001b79c:	lea    r8,[rsp+0x20]
   14001b7a1:	mov    edx,0x8
   14001b7a6:	mov    ecx,ebx
   14001b7a8:	call   0x14001f9b8
   14001b7ad:	mov    ecx,eax
   14001b7af:	jmp    0x14001b7bf
   14001b7b1:	mov    rax,QWORD PTR [rax+0x108]
   14001b7b8:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b7bc:	and    ecx,0x8
   14001b7bf:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b7c4:	je     0x14001b7d2
   14001b7c6:	mov    rax,QWORD PTR [rsp+0x30]
   14001b7cb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b7d2:	mov    eax,ecx
   14001b7d4:	add    rsp,0x40
   14001b7d8:	pop    rbx
   14001b7d9:	ret    
   14001b7da:	int3   
   14001b7db:	int3   
   14001b7dc:	rex push rbx
   14001b7de:	sub    rsp,0x40
   14001b7e2:	cmp    DWORD PTR [rip+0x2379f],0x0        # 0x14003ef88
   14001b7e9:	movsxd rbx,ecx
   14001b7ec:	jne    0x14001b7fe
   14001b7ee:	mov    rax,QWORD PTR [rip+0x219c3]        # 0x14003d1b8
   14001b7f5:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b7f9:	and    eax,0x1
   14001b7fc:	jmp    0x14001b850
   14001b7fe:	lea    rcx,[rsp+0x20]
   14001b803:	xor    edx,edx
   14001b805:	call   0x140008fac
   14001b80a:	mov    rax,QWORD PTR [rsp+0x20]
   14001b80f:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b816:	jle    0x14001b82d
   14001b818:	lea    r8,[rsp+0x20]
   14001b81d:	mov    edx,0x1
   14001b822:	mov    ecx,ebx
   14001b824:	call   0x14001f9b8
   14001b829:	mov    ecx,eax
   14001b82b:	jmp    0x14001b83b
   14001b82d:	mov    rax,QWORD PTR [rax+0x108]
   14001b834:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b838:	and    ecx,0x1
   14001b83b:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b840:	je     0x14001b84e
   14001b842:	mov    rax,QWORD PTR [rsp+0x30]
   14001b847:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b84e:	mov    eax,ecx
   14001b850:	add    rsp,0x40
   14001b854:	pop    rbx
   14001b855:	ret    
   14001b856:	int3   
   14001b857:	int3   
   14001b858:	rex push rbx
   14001b85a:	sub    rsp,0x40
   14001b85e:	cmp    DWORD PTR [rip+0x23723],0x0        # 0x14003ef88
   14001b865:	movsxd rbx,ecx
   14001b868:	jne    0x14001b87c
   14001b86a:	mov    rax,QWORD PTR [rip+0x21947]        # 0x14003d1b8
   14001b871:	movzx  eax,WORD PTR [rax+rbx*2]
   14001b875:	and    eax,0x80
   14001b87a:	jmp    0x14001b8d1
   14001b87c:	lea    rcx,[rsp+0x20]
   14001b881:	xor    edx,edx
   14001b883:	call   0x140008fac
   14001b888:	mov    rax,QWORD PTR [rsp+0x20]
   14001b88d:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b894:	jle    0x14001b8ab
   14001b896:	lea    r8,[rsp+0x20]
   14001b89b:	mov    edx,0x80
   14001b8a0:	mov    ecx,ebx
   14001b8a2:	call   0x14001f9b8
   14001b8a7:	mov    ecx,eax
   14001b8a9:	jmp    0x14001b8bc
   14001b8ab:	mov    rax,QWORD PTR [rax+0x108]
   14001b8b2:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001b8b6:	and    ecx,0x80
   14001b8bc:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b8c1:	je     0x14001b8cf
   14001b8c3:	mov    rax,QWORD PTR [rsp+0x30]
   14001b8c8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b8cf:	mov    eax,ecx
   14001b8d1:	add    rsp,0x40
   14001b8d5:	pop    rbx
   14001b8d6:	ret    
   14001b8d7:	int3   
   14001b8d8:	lea    eax,[rcx+0x20]
   14001b8db:	ret    
   14001b8dc:	mov    QWORD PTR [rsp+0x10],rdi
   14001b8e1:	mov    QWORD PTR [rsp+0x20],r14
   14001b8e6:	push   rbp
   14001b8e7:	mov    rbp,rsp
   14001b8ea:	sub    rsp,0x70
   14001b8ee:	movsxd rdi,ecx
   14001b8f1:	lea    rcx,[rbp-0x20]
   14001b8f5:	call   0x140008fac
   14001b8fa:	cmp    edi,0x100
   14001b900:	jae    0x14001b95f
   14001b902:	mov    rdx,QWORD PTR [rbp-0x20]
   14001b906:	cmp    DWORD PTR [rdx+0xd4],0x1
   14001b90d:	jle    0x14001b925
   14001b90f:	lea    r8,[rbp-0x20]
   14001b913:	mov    edx,0x1
   14001b918:	mov    ecx,edi
   14001b91a:	call   0x14001f9b8
   14001b91f:	mov    rdx,QWORD PTR [rbp-0x20]
   14001b923:	jmp    0x14001b933
   14001b925:	mov    rax,QWORD PTR [rdx+0x108]
   14001b92c:	movzx  eax,WORD PTR [rax+rdi*2]
   14001b930:	and    eax,0x1
   14001b933:	test   eax,eax
   14001b935:	je     0x14001b947
   14001b937:	mov    rax,QWORD PTR [rdx+0x110]
   14001b93e:	movzx  eax,BYTE PTR [rax+rdi*1]
   14001b942:	jmp    0x14001ba0b
   14001b947:	cmp    BYTE PTR [rbp-0x8],0x0
   14001b94b:	je     0x14001b958
   14001b94d:	mov    rax,QWORD PTR [rbp-0x10]
   14001b951:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b958:	mov    eax,edi
   14001b95a:	jmp    0x14001ba1c
   14001b95f:	mov    rax,QWORD PTR [rbp-0x20]
   14001b963:	cmp    DWORD PTR [rax+0xd4],0x1
   14001b96a:	jle    0x14001b997
   14001b96c:	mov    r14d,edi
   14001b96f:	lea    rdx,[rbp-0x20]
   14001b973:	sar    r14d,0x8
   14001b977:	movzx  ecx,r14b
   14001b97b:	call   0x140011e44
   14001b980:	test   eax,eax
   14001b982:	je     0x14001b997
   14001b984:	mov    BYTE PTR [rbp+0x10],r14b
   14001b988:	mov    BYTE PTR [rbp+0x11],dil
   14001b98c:	mov    BYTE PTR [rbp+0x12],0x0
   14001b990:	mov    ecx,0x2
   14001b995:	jmp    0x14001b9af
   14001b997:	call   0x140009cb4
   14001b99c:	mov    ecx,0x1
   14001b9a1:	mov    DWORD PTR [rax],0x2a
   14001b9a7:	mov    BYTE PTR [rbp+0x10],dil
   14001b9ab:	mov    BYTE PTR [rbp+0x11],0x0
   14001b9af:	mov    rdx,QWORD PTR [rbp-0x20]
   14001b9b3:	mov    DWORD PTR [rsp+0x40],0x1
   14001b9bb:	lea    r9,[rbp+0x10]
   14001b9bf:	mov    eax,DWORD PTR [rdx+0x4]
   14001b9c2:	mov    rdx,QWORD PTR [rdx+0x138]
   14001b9c9:	mov    r8d,0x100
   14001b9cf:	mov    DWORD PTR [rsp+0x38],eax
   14001b9d3:	lea    rax,[rbp+0x20]
   14001b9d7:	mov    DWORD PTR [rsp+0x30],0x3
   14001b9df:	mov    QWORD PTR [rsp+0x28],rax
   14001b9e4:	mov    DWORD PTR [rsp+0x20],ecx
   14001b9e8:	lea    rcx,[rbp-0x20]
   14001b9ec:	call   0x14001cb54
   14001b9f1:	test   eax,eax
   14001b9f3:	je     0x14001b947
   14001b9f9:	cmp    eax,0x1
   14001b9fc:	movzx  eax,BYTE PTR [rbp+0x20]
   14001ba00:	je     0x14001ba0b
   14001ba02:	movzx  ecx,BYTE PTR [rbp+0x21]
   14001ba06:	shl    eax,0x8
   14001ba09:	or     eax,ecx
   14001ba0b:	cmp    BYTE PTR [rbp-0x8],0x0
   14001ba0f:	je     0x14001ba1c
   14001ba11:	mov    rcx,QWORD PTR [rbp-0x10]
   14001ba15:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001ba1c:	lea    r11,[rsp+0x70]
   14001ba21:	mov    rdi,QWORD PTR [r11+0x18]
   14001ba25:	mov    r14,QWORD PTR [r11+0x28]
   14001ba29:	mov    rsp,r11
   14001ba2c:	pop    rbp
   14001ba2d:	ret    
   14001ba2e:	int3   
   14001ba2f:	int3   
   14001ba30:	cmp    DWORD PTR [rip+0x23551],0x0        # 0x14003ef88
   14001ba37:	jne    0x14001ba47
   14001ba39:	lea    eax,[rcx-0x41]
   14001ba3c:	cmp    eax,0x19
   14001ba3f:	ja     0x14001ba44
   14001ba41:	add    ecx,0x20
   14001ba44:	mov    eax,ecx
   14001ba46:	ret    
   14001ba47:	xor    edx,edx
   14001ba49:	jmp    0x14001b8dc
   14001ba4e:	int3   
   14001ba4f:	int3   
   14001ba50:	sub    rsp,0x18
   14001ba54:	xor    r8d,r8d
   14001ba57:	mov    r9,rcx
   14001ba5a:	test   edx,edx
   14001ba5c:	jne    0x14001baa6
   14001ba5e:	and    r9d,0xf
   14001ba62:	mov    rdx,rcx
   14001ba65:	xorps  xmm1,xmm1
   14001ba68:	and    rdx,0xfffffffffffffff0
   14001ba6c:	mov    ecx,r9d
   14001ba6f:	or     r9d,0xffffffff
   14001ba73:	shl    r9d,cl
   14001ba76:	movdqa xmm0,XMMWORD PTR [rdx]
   14001ba7a:	pcmpeqb xmm0,xmm1
   14001ba7e:	pmovmskb eax,xmm0
   14001ba82:	and    eax,r9d
   14001ba85:	jne    0x14001ba9b
   14001ba87:	add    rdx,0x10
   14001ba8b:	movdqa xmm0,XMMWORD PTR [rdx]
   14001ba8f:	pcmpeqb xmm0,xmm1
   14001ba93:	pmovmskb eax,xmm0
   14001ba97:	test   eax,eax
   14001ba99:	je     0x14001ba87
   14001ba9b:	bsf    eax,eax
   14001ba9e:	add    rax,rdx
   14001baa1:	jmp    0x14001bb4c
   14001baa6:	cmp    DWORD PTR [rip+0x20597],0x2        # 0x14003c044
   14001baad:	jge    0x14001bb51
   14001bab3:	mov    r10,rcx
   14001bab6:	movzx  eax,dl
   14001bab9:	and    r9d,0xf
   14001babd:	and    r10,0xfffffffffffffff0
   14001bac1:	mov    ecx,eax
   14001bac3:	xorps  xmm2,xmm2
   14001bac6:	shl    ecx,0x8
   14001bac9:	or     ecx,eax
   14001bacb:	movd   xmm0,ecx
   14001bacf:	mov    ecx,r9d
   14001bad2:	or     r9d,0xffffffff
   14001bad6:	shl    r9d,cl
   14001bad9:	pshuflw xmm1,xmm0,0x0
   14001bade:	movdqa xmm0,xmm2
   14001bae2:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14001bae7:	pshufd xmm3,xmm1,0x0
   14001baec:	pmovmskb ecx,xmm0
   14001baf0:	movdqa xmm0,xmm3
   14001baf4:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14001baf9:	pmovmskb edx,xmm0
   14001bafd:	and    edx,r9d
   14001bb00:	and    ecx,r9d
   14001bb03:	jne    0x14001bb33
   14001bb05:	bsr    ecx,edx
   14001bb08:	movdqa xmm1,xmm2
   14001bb0c:	movdqa xmm0,xmm3
   14001bb10:	add    rcx,r10
   14001bb13:	test   edx,edx
   14001bb15:	cmovne r8,rcx
   14001bb19:	add    r10,0x10
   14001bb1d:	pcmpeqb xmm1,XMMWORD PTR [r10]
   14001bb22:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14001bb27:	pmovmskb ecx,xmm1
   14001bb2b:	pmovmskb edx,xmm0
   14001bb2f:	test   ecx,ecx
   14001bb31:	je     0x14001bb05
   14001bb33:	mov    eax,ecx
   14001bb35:	neg    eax
   14001bb37:	and    eax,ecx
   14001bb39:	dec    eax
   14001bb3b:	and    edx,eax
   14001bb3d:	bsr    ecx,edx
   14001bb40:	add    rcx,r10
   14001bb43:	test   edx,edx
   14001bb45:	cmovne r8,rcx
   14001bb49:	mov    rax,r8
   14001bb4c:	add    rsp,0x18
   14001bb50:	ret    
   14001bb51:	test   cl,0xf
   14001bb54:	je     0x14001bb6f
   14001bb56:	movsx  eax,BYTE PTR [r9]
   14001bb5a:	cmp    eax,edx
   14001bb5c:	cmove  r8,r9
   14001bb60:	cmp    BYTE PTR [r9],0x0
   14001bb64:	je     0x14001bb49
   14001bb66:	inc    r9
   14001bb69:	test   r9b,0xf
   14001bb6d:	jne    0x14001bb56
   14001bb6f:	movzx  eax,dl
   14001bb72:	movd   xmm0,eax
   14001bb76:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14001bb7d:	jae    0x14001bb8c
   14001bb7f:	movsxd r8,ecx
   14001bb82:	add    r8,r9
   14001bb85:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14001bb8c:	je     0x14001bb49
   14001bb8e:	add    r9,0x10
   14001bb92:	jmp    0x14001bb76
   14001bb94:	mov    QWORD PTR [rsp+0x8],rbx
   14001bb99:	push   rdi
   14001bb9a:	sub    rsp,0x20
   14001bb9e:	mov    rbx,rcx
   14001bba1:	mov    rcx,QWORD PTR [r9+0x10]
   14001bba5:	xor    r10d,r10d
   14001bba8:	test   rbx,rbx
   14001bbab:	jne    0x14001bbc5
   14001bbad:	call   0x140009cb4
   14001bbb2:	mov    ebx,0x16
   14001bbb7:	mov    DWORD PTR [rax],ebx
   14001bbb9:	call   0x140008d58
   14001bbbe:	mov    eax,ebx
   14001bbc0:	jmp    0x14001bc54
   14001bbc5:	test   rdx,rdx
   14001bbc8:	je     0x14001bbad
   14001bbca:	mov    eax,r10d
   14001bbcd:	test   r8d,r8d
   14001bbd0:	mov    BYTE PTR [rbx],r10b
   14001bbd3:	cmovg  eax,r8d
   14001bbd7:	inc    eax
   14001bbd9:	cdqe   
   14001bbdb:	cmp    rdx,rax
   14001bbde:	ja     0x14001bbec
   14001bbe0:	call   0x140009cb4
   14001bbe5:	mov    ebx,0x22
   14001bbea:	jmp    0x14001bbb7
   14001bbec:	lea    rdi,[rbx+0x1]
   14001bbf0:	mov    BYTE PTR [rbx],0x30
   14001bbf3:	mov    rax,rdi
   14001bbf6:	jmp    0x14001bc12
   14001bbf8:	cmp    BYTE PTR [rcx],r10b
   14001bbfb:	je     0x14001bc05
   14001bbfd:	movsx  edx,BYTE PTR [rcx]
   14001bc00:	inc    rcx
   14001bc03:	jmp    0x14001bc0a
   14001bc05:	mov    edx,0x30
   14001bc0a:	mov    BYTE PTR [rax],dl
   14001bc0c:	inc    rax
   14001bc0f:	dec    r8d
   14001bc12:	test   r8d,r8d
   14001bc15:	jg     0x14001bbf8
   14001bc17:	mov    BYTE PTR [rax],r10b
   14001bc1a:	js     0x14001bc30
   14001bc1c:	cmp    BYTE PTR [rcx],0x35
   14001bc1f:	jl     0x14001bc30
   14001bc21:	jmp    0x14001bc26
   14001bc23:	mov    BYTE PTR [rax],0x30
   14001bc26:	dec    rax
   14001bc29:	cmp    BYTE PTR [rax],0x39
   14001bc2c:	je     0x14001bc23
   14001bc2e:	inc    BYTE PTR [rax]
   14001bc30:	cmp    BYTE PTR [rbx],0x31
   14001bc33:	jne    0x14001bc3b
   14001bc35:	inc    DWORD PTR [r9+0x4]
   14001bc39:	jmp    0x14001bc52
   14001bc3b:	mov    rcx,rdi
   14001bc3e:	call   0x140007550
   14001bc43:	mov    rdx,rdi
   14001bc46:	mov    rcx,rbx
   14001bc49:	lea    r8,[rax+0x1]
   14001bc4d:	call   0x1400059f0
   14001bc52:	xor    eax,eax
   14001bc54:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bc59:	add    rsp,0x20
   14001bc5d:	pop    rdi
   14001bc5e:	ret    
   14001bc5f:	int3   
   14001bc60:	rex push rbx
   14001bc62:	push   rsi
   14001bc63:	push   rdi
   14001bc64:	sub    rsp,0x80
   14001bc6b:	mov    rax,QWORD PTR [rip+0x2055e]        # 0x14003c1d0
   14001bc72:	xor    rax,rsp
   14001bc75:	mov    QWORD PTR [rsp+0x78],rax
   14001bc7a:	mov    rsi,rcx
   14001bc7d:	mov    rbx,rdx
   14001bc80:	lea    rcx,[rsp+0x48]
   14001bc85:	mov    rdx,r8
   14001bc88:	mov    rdi,r9
   14001bc8b:	call   0x140008fac
   14001bc90:	lea    rax,[rsp+0x48]
   14001bc95:	lea    rdx,[rsp+0x40]
   14001bc9a:	mov    QWORD PTR [rsp+0x38],rax
   14001bc9f:	and    DWORD PTR [rsp+0x30],0x0
   14001bca4:	and    DWORD PTR [rsp+0x28],0x0
   14001bca9:	and    DWORD PTR [rsp+0x20],0x0
   14001bcae:	lea    rcx,[rsp+0x68]
   14001bcb3:	xor    r9d,r9d
   14001bcb6:	mov    r8,rbx
   14001bcb9:	call   0x140022bd8
   14001bcbe:	mov    ebx,eax
   14001bcc0:	test   rdi,rdi
   14001bcc3:	je     0x14001bccd
   14001bcc5:	mov    rcx,QWORD PTR [rsp+0x40]
   14001bcca:	mov    QWORD PTR [rdi],rcx
   14001bccd:	lea    rcx,[rsp+0x68]
   14001bcd2:	mov    rdx,rsi
   14001bcd5:	call   0x140021d80
   14001bcda:	mov    ecx,eax
   14001bcdc:	mov    eax,0x3
   14001bce1:	test   al,bl
   14001bce3:	jne    0x14001bcf1
   14001bce5:	cmp    ecx,0x1
   14001bce8:	je     0x14001bd04
   14001bcea:	cmp    ecx,0x2
   14001bced:	jne    0x14001bd02
   14001bcef:	jmp    0x14001bcf6
   14001bcf1:	test   bl,0x1
   14001bcf4:	je     0x14001bcfd
   14001bcf6:	mov    eax,0x4
   14001bcfb:	jmp    0x14001bd04
   14001bcfd:	test   bl,0x2
   14001bd00:	jne    0x14001bd04
   14001bd02:	xor    eax,eax
   14001bd04:	cmp    BYTE PTR [rsp+0x60],0x0
   14001bd09:	je     0x14001bd17
   14001bd0b:	mov    rcx,QWORD PTR [rsp+0x58]
   14001bd10:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001bd17:	mov    rcx,QWORD PTR [rsp+0x78]
   14001bd1c:	xor    rcx,rsp
   14001bd1f:	call   0x14000c380
   14001bd24:	add    rsp,0x80
   14001bd2b:	pop    rdi
   14001bd2c:	pop    rsi
   14001bd2d:	pop    rbx
   14001bd2e:	ret    
   14001bd2f:	int3   
   14001bd30:	xor    r8d,r8d
   14001bd33:	jmp    0x14001bd38
   14001bd38:	mov    QWORD PTR [rsp+0x18],rbx
   14001bd3d:	push   rdi
   14001bd3e:	sub    rsp,0x80
   14001bd45:	mov    rax,QWORD PTR [rip+0x20484]        # 0x14003c1d0
   14001bd4c:	xor    rax,rsp
   14001bd4f:	mov    QWORD PTR [rsp+0x78],rax
   14001bd54:	mov    rdi,rcx
   14001bd57:	mov    rbx,rdx
   14001bd5a:	lea    rcx,[rsp+0x40]
   14001bd5f:	mov    rdx,r8
   14001bd62:	call   0x140008fac
   14001bd67:	lea    rax,[rsp+0x40]
   14001bd6c:	lea    rdx,[rsp+0x60]
   14001bd71:	mov    QWORD PTR [rsp+0x38],rax
   14001bd76:	and    DWORD PTR [rsp+0x30],0x0
   14001bd7b:	and    DWORD PTR [rsp+0x28],0x0
   14001bd80:	and    DWORD PTR [rsp+0x20],0x0
   14001bd85:	lea    rcx,[rsp+0x68]
   14001bd8a:	xor    r9d,r9d
   14001bd8d:	mov    r8,rbx
   14001bd90:	call   0x140022bd8
   14001bd95:	lea    rcx,[rsp+0x68]
   14001bd9a:	mov    rdx,rdi
   14001bd9d:	mov    ebx,eax
   14001bd9f:	call   0x1400217c8
   14001bda4:	mov    ecx,eax
   14001bda6:	mov    eax,0x3
   14001bdab:	test   al,bl
   14001bdad:	jne    0x14001bdbb
   14001bdaf:	cmp    ecx,0x1
   14001bdb2:	je     0x14001bdce
   14001bdb4:	cmp    ecx,0x2
   14001bdb7:	jne    0x14001bdcc
   14001bdb9:	jmp    0x14001bdc0
   14001bdbb:	test   bl,0x1
   14001bdbe:	je     0x14001bdc7
   14001bdc0:	mov    eax,0x4
   14001bdc5:	jmp    0x14001bdce
   14001bdc7:	test   bl,0x2
   14001bdca:	jne    0x14001bdce
   14001bdcc:	xor    eax,eax
   14001bdce:	cmp    BYTE PTR [rsp+0x58],0x0
   14001bdd3:	je     0x14001bde1
   14001bdd5:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bdda:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001bde1:	mov    rcx,QWORD PTR [rsp+0x78]
   14001bde6:	xor    rcx,rsp
   14001bde9:	call   0x14000c380
   14001bdee:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001bdf6:	add    rsp,0x80
   14001bdfd:	pop    rdi
   14001bdfe:	ret    
   14001bdff:	int3   
   14001be00:	xor    r9d,r9d
   14001be03:	xor    r8d,r8d
   14001be06:	jmp    0x14001bc60
   14001be0b:	int3   
   14001be0c:	xor    r9d,r9d
   14001be0f:	jmp    0x14001bc60
   14001be14:	xor    r8d,r8d
   14001be17:	jmp    0x14001be1c
   14001be1c:	mov    QWORD PTR [rsp+0x18],rbx
   14001be21:	push   rdi
   14001be22:	sub    rsp,0x80
   14001be29:	mov    rax,QWORD PTR [rip+0x203a0]        # 0x14003c1d0
   14001be30:	xor    rax,rsp
   14001be33:	mov    QWORD PTR [rsp+0x78],rax
   14001be38:	mov    rdi,rcx
   14001be3b:	mov    rbx,rdx
   14001be3e:	lea    rcx,[rsp+0x40]
   14001be43:	mov    rdx,r8
   14001be46:	call   0x140008fac
   14001be4b:	lea    rax,[rsp+0x40]
   14001be50:	lea    rdx,[rsp+0x60]
   14001be55:	mov    QWORD PTR [rsp+0x38],rax
   14001be5a:	and    DWORD PTR [rsp+0x30],0x0
   14001be5f:	and    DWORD PTR [rsp+0x28],0x0
   14001be64:	and    DWORD PTR [rsp+0x20],0x0
   14001be69:	lea    rcx,[rsp+0x68]
   14001be6e:	mov    r9d,0x1
   14001be74:	mov    r8,rbx
   14001be77:	call   0x140022bd8
   14001be7c:	lea    rcx,[rsp+0x68]
   14001be81:	mov    rdx,rdi
   14001be84:	mov    ebx,eax
   14001be86:	call   0x140022338
   14001be8b:	mov    ecx,eax
   14001be8d:	mov    eax,0x3
   14001be92:	test   al,bl
   14001be94:	jne    0x14001bea2
   14001be96:	cmp    ecx,0x1
   14001be99:	je     0x14001beb5
   14001be9b:	cmp    ecx,0x2
   14001be9e:	jne    0x14001beb3
   14001bea0:	jmp    0x14001bea7
   14001bea2:	test   bl,0x1
   14001bea5:	je     0x14001beae
   14001bea7:	mov    eax,0x4
   14001beac:	jmp    0x14001beb5
   14001beae:	test   bl,0x2
   14001beb1:	jne    0x14001beb5
   14001beb3:	xor    eax,eax
   14001beb5:	cmp    BYTE PTR [rsp+0x58],0x0
   14001beba:	je     0x14001bec8
   14001bebc:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bec1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001bec8:	mov    rcx,QWORD PTR [rsp+0x78]
   14001becd:	xor    rcx,rsp
   14001bed0:	call   0x14000c380
   14001bed5:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001bedd:	add    rsp,0x80
   14001bee4:	pop    rdi
   14001bee5:	ret    
   14001bee6:	int3   
   14001bee7:	int3   
   14001bee8:	mov    QWORD PTR [rsp+0x8],rbx
   14001beed:	movzx  r11d,WORD PTR [rdx+0x6]
   14001bef2:	mov    r10,rcx
   14001bef5:	mov    ecx,DWORD PTR [rdx+0x4]
   14001bef8:	movzx  r8d,r11w
   14001befc:	mov    eax,0x8000
   14001bf01:	mov    r9d,0x7ff
   14001bf07:	shr    r8w,0x4
   14001bf0c:	and    r11w,ax
   14001bf10:	mov    eax,DWORD PTR [rdx]
   14001bf12:	and    r8w,r9w
   14001bf16:	and    ecx,0xfffff
   14001bf1c:	mov    ebx,0x80000000
   14001bf21:	movzx  edx,r8w
   14001bf25:	test   edx,edx
   14001bf27:	je     0x14001bf41
   14001bf29:	cmp    edx,r9d
   14001bf2c:	je     0x14001bf39
   14001bf2e:	mov    edx,0x3c00
   14001bf33:	add    r8w,dx
   14001bf37:	jmp    0x14001bf5d
   14001bf39:	mov    r8d,0x7fff
   14001bf3f:	jmp    0x14001bf5d
   14001bf41:	test   ecx,ecx
   14001bf43:	jne    0x14001bf52
   14001bf45:	test   eax,eax
   14001bf47:	jne    0x14001bf52
   14001bf49:	and    DWORD PTR [r10+0x4],eax
   14001bf4d:	and    DWORD PTR [r10],eax
   14001bf50:	jmp    0x14001bfaa
   14001bf52:	mov    edx,0x3c01
   14001bf57:	add    r8w,dx
   14001bf5b:	xor    ebx,ebx
   14001bf5d:	mov    r9d,eax
   14001bf60:	shl    ecx,0xb
   14001bf63:	shl    eax,0xb
   14001bf66:	shr    r9d,0x15
   14001bf6a:	mov    DWORD PTR [r10],eax
   14001bf6d:	or     r9d,ecx
   14001bf70:	or     r9d,ebx
   14001bf73:	mov    DWORD PTR [r10+0x4],r9d
   14001bf77:	test   r9d,r9d
   14001bf7a:	js     0x14001bfa6
   14001bf7c:	mov    edx,DWORD PTR [r10]
   14001bf7f:	lea    eax,[r9+r9*1]
   14001bf83:	mov    ecx,edx
   14001bf85:	shr    ecx,0x1f
   14001bf88:	mov    r9d,ecx
   14001bf8b:	or     r9d,eax
   14001bf8e:	lea    eax,[rdx+rdx*1]
   14001bf91:	mov    DWORD PTR [r10],eax
   14001bf94:	mov    eax,0xffff
   14001bf99:	add    r8w,ax
   14001bf9d:	test   r9d,r9d
   14001bfa0:	jns    0x14001bf7c
   14001bfa2:	mov    DWORD PTR [r10+0x4],r9d
   14001bfa6:	or     r11w,r8w
   14001bfaa:	mov    rbx,QWORD PTR [rsp+0x8]
   14001bfaf:	mov    WORD PTR [r10+0x8],r11w
   14001bfb4:	ret    
   14001bfb5:	int3   
   14001bfb6:	int3   
   14001bfb7:	int3   
   14001bfb8:	rex push rbp
   14001bfba:	push   rbx
   14001bfbb:	push   rsi
   14001bfbc:	push   rdi
   14001bfbd:	lea    rbp,[rsp-0x3f]
   14001bfc2:	sub    rsp,0x88
   14001bfc9:	mov    rax,QWORD PTR [rip+0x20200]        # 0x14003c1d0
   14001bfd0:	xor    rax,rsp
   14001bfd3:	mov    QWORD PTR [rbp+0x27],rax
   14001bfd7:	mov    rdi,rdx
   14001bfda:	mov    QWORD PTR [rbp-0x19],rcx
   14001bfde:	lea    rdx,[rbp-0x19]
   14001bfe2:	lea    rcx,[rbp-0x9]
   14001bfe6:	mov    rbx,r9
   14001bfe9:	mov    rsi,r8
   14001bfec:	call   0x14001bee8
   14001bff1:	movzx  eax,WORD PTR [rbp-0x1]
   14001bff5:	xor    r8d,r8d
   14001bff8:	movsd  xmm0,QWORD PTR [rbp-0x9]
   14001bffd:	movsd  QWORD PTR [rbp-0x19],xmm0
   14001c002:	lea    r9,[rbp+0x7]
   14001c006:	lea    rcx,[rbp-0x19]
   14001c00a:	lea    edx,[r8+0x11]
   14001c00e:	mov    WORD PTR [rbp-0x11],ax
   14001c012:	call   0x14002343c
   14001c017:	movsx  ecx,BYTE PTR [rbp+0x9]
   14001c01b:	mov    DWORD PTR [rdi],ecx
   14001c01d:	movsx  ecx,WORD PTR [rbp+0x7]
   14001c021:	lea    r8,[rbp+0xb]
   14001c025:	mov    DWORD PTR [rdi+0x4],ecx
   14001c028:	mov    rdx,rbx
   14001c02b:	mov    rcx,rsi
   14001c02e:	mov    DWORD PTR [rdi+0x8],eax
   14001c031:	call   0x14000edd8
   14001c036:	test   eax,eax
   14001c038:	jne    0x14001c059
   14001c03a:	mov    QWORD PTR [rdi+0x10],rsi
   14001c03e:	mov    rax,rdi
   14001c041:	mov    rcx,QWORD PTR [rbp+0x27]
   14001c045:	xor    rcx,rsp
   14001c048:	call   0x14000c380
   14001c04d:	add    rsp,0x88
   14001c054:	pop    rdi
   14001c055:	pop    rsi
   14001c056:	pop    rbx
   14001c057:	pop    rbp
   14001c058:	ret    
   14001c059:	and    QWORD PTR [rsp+0x20],0x0
   14001c05f:	xor    r9d,r9d
   14001c062:	xor    r8d,r8d
   14001c065:	xor    edx,edx
   14001c067:	xor    ecx,ecx
   14001c069:	call   0x140008da8
   14001c06e:	int3   
   14001c06f:	int3   
   14001c070:	mov    eax,DWORD PTR [rip+0x22ede]        # 0x14003ef54
   14001c076:	ret    
   14001c077:	int3   
   14001c078:	rex push rbx
   14001c07a:	sub    rsp,0x20
   14001c07e:	mov    ebx,DWORD PTR [rip+0x22ed0]        # 0x14003ef54
   14001c084:	test   ecx,0xfffffffe
   14001c08a:	je     0x14001c09e
   14001c08c:	call   0x140009cb4
   14001c091:	mov    DWORD PTR [rax],0x16
   14001c097:	call   0x140008d58
   14001c09c:	jmp    0x14001c0a4
   14001c09e:	mov    DWORD PTR [rip+0x22eb0],ecx        # 0x14003ef54
   14001c0a4:	mov    eax,ebx
   14001c0a6:	add    rsp,0x20
   14001c0aa:	pop    rbx
   14001c0ab:	ret    
   14001c0ac:	mov    ecx,0x2
   14001c0b1:	jmp    0x1400081bc
   14001c0b6:	int3   
   14001c0b7:	int3   
   14001c0b8:	mov    QWORD PTR [rsp+0x8],rbx
   14001c0bd:	mov    QWORD PTR [rsp+0x10],rsi
   14001c0c2:	push   rdi
   14001c0c3:	sub    rsp,0x40
   14001c0c7:	mov    ebx,edx
   14001c0c9:	mov    rdx,rcx
   14001c0cc:	lea    rcx,[rsp+0x20]
   14001c0d1:	mov    edi,r9d
   14001c0d4:	mov    esi,r8d
   14001c0d7:	call   0x140008fac
   14001c0dc:	mov    rax,QWORD PTR [rsp+0x28]
   14001c0e1:	movzx  edx,bl
   14001c0e4:	test   BYTE PTR [rdx+rax*1+0x19],dil
   14001c0e9:	jne    0x14001c109
   14001c0eb:	test   esi,esi
   14001c0ed:	je     0x14001c103
   14001c0ef:	mov    rax,QWORD PTR [rsp+0x20]
   14001c0f4:	mov    rcx,QWORD PTR [rax+0x108]
   14001c0fb:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001c0ff:	and    eax,esi
   14001c101:	jmp    0x14001c105
   14001c103:	xor    eax,eax
   14001c105:	test   eax,eax
   14001c107:	je     0x14001c10e
   14001c109:	mov    eax,0x1
   14001c10e:	cmp    BYTE PTR [rsp+0x38],0x0
   14001c113:	je     0x14001c121
   14001c115:	mov    rcx,QWORD PTR [rsp+0x30]
   14001c11a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001c121:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c126:	mov    rsi,QWORD PTR [rsp+0x58]
   14001c12b:	add    rsp,0x40
   14001c12f:	pop    rdi
   14001c130:	ret    
   14001c131:	int3   
   14001c132:	int3   
   14001c133:	int3   
   14001c134:	mov    edx,ecx
   14001c136:	mov    r9d,0x1
   14001c13c:	mov    r8d,0x107
   14001c142:	xor    ecx,ecx
   14001c144:	jmp    0x14001c0b8
   14001c149:	int3   
   14001c14a:	int3   
   14001c14b:	int3   
   14001c14c:	mov    rax,rdx
   14001c14f:	mov    edx,ecx
   14001c151:	mov    r9d,0x1
   14001c157:	mov    rcx,rax
   14001c15a:	mov    r8d,0x107
   14001c160:	jmp    0x14001c0b8
   14001c165:	int3   
   14001c166:	int3   
   14001c167:	int3   
   14001c168:	mov    edx,ecx
   14001c16a:	mov    r9d,0x1
   14001c170:	mov    r8d,0x103
   14001c176:	xor    ecx,ecx
   14001c178:	jmp    0x14001c0b8
   14001c17d:	int3   
   14001c17e:	int3   
   14001c17f:	int3   
   14001c180:	mov    rax,rdx
   14001c183:	mov    edx,ecx
   14001c185:	mov    r9d,0x1
   14001c18b:	mov    rcx,rax
   14001c18e:	mov    r8d,0x103
   14001c194:	jmp    0x14001c0b8
   14001c199:	int3   
   14001c19a:	int3   
   14001c19b:	int3   
   14001c19c:	cmp    ecx,0x9
   14001c19f:	jne    0x14001c1a5
   14001c1a1:	lea    eax,[rcx+0x37]
   14001c1a4:	ret    
   14001c1a5:	mov    r9d,0x2
   14001c1ab:	mov    edx,ecx
   14001c1ad:	xor    ecx,ecx
   14001c1af:	lea    r8d,[r9+0x3e]
   14001c1b3:	jmp    0x14001c0b8
   14001c1b8:	mov    r10,rdx
   14001c1bb:	cmp    ecx,0x9
   14001c1be:	jne    0x14001c1c4
   14001c1c0:	lea    eax,[rcx+0x37]
   14001c1c3:	ret    
   14001c1c4:	mov    r9d,0x2
   14001c1ca:	mov    edx,ecx
   14001c1cc:	mov    rcx,r10
   14001c1cf:	lea    r8d,[r9+0x3e]
   14001c1d3:	jmp    0x14001c0b8
   14001c1d8:	mov    edx,ecx
   14001c1da:	mov    r9d,0x3
   14001c1e0:	mov    r8d,0x117
   14001c1e6:	xor    ecx,ecx
   14001c1e8:	jmp    0x14001c0b8
   14001c1ed:	int3   
   14001c1ee:	int3   
   14001c1ef:	int3   
   14001c1f0:	mov    rax,rdx
   14001c1f3:	mov    edx,ecx
   14001c1f5:	mov    r9d,0x3
   14001c1fb:	mov    rcx,rax
   14001c1fe:	mov    r8d,0x117
   14001c204:	jmp    0x14001c0b8
   14001c209:	int3   
   14001c20a:	int3   
   14001c20b:	int3   
   14001c20c:	mov    edx,ecx
   14001c20e:	mov    r9d,0x1
   14001c214:	xor    r8d,r8d
   14001c217:	xor    ecx,ecx
   14001c219:	jmp    0x14001c0b8
   14001c21e:	int3   
   14001c21f:	int3   
   14001c220:	mov    rax,rdx
   14001c223:	mov    edx,ecx
   14001c225:	mov    r9d,0x1
   14001c22b:	mov    rcx,rax
   14001c22e:	xor    r8d,r8d
   14001c231:	jmp    0x14001c0b8
   14001c236:	int3   
   14001c237:	int3   
   14001c238:	xor    edx,edx
   14001c23a:	jmp    0x14001c240
   14001c23f:	int3   
   14001c240:	mov    QWORD PTR [rsp+0x8],rbx
   14001c245:	push   rdi
   14001c246:	sub    rsp,0x40
   14001c24a:	mov    edi,ecx
   14001c24c:	lea    rcx,[rsp+0x20]
   14001c251:	mov    rbx,rdx
   14001c254:	call   0x140008fac
   14001c259:	mov    rax,QWORD PTR [rsp+0x28]
   14001c25e:	test   rax,rax
   14001c261:	je     0x14001c283
   14001c263:	cmp    DWORD PTR [rax+0x4],0x3a4
   14001c26a:	jne    0x14001c283
   14001c26c:	mov    r9d,0x3
   14001c272:	xor    r8d,r8d
   14001c275:	mov    edx,edi
   14001c277:	mov    rcx,rbx
   14001c27a:	call   0x14001c0b8
   14001c27f:	mov    ecx,eax
   14001c281:	jmp    0x14001c285
   14001c283:	xor    ecx,ecx
   14001c285:	cmp    BYTE PTR [rsp+0x38],0x0
   14001c28a:	je     0x14001c298
   14001c28c:	mov    rax,QWORD PTR [rsp+0x30]
   14001c291:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001c298:	mov    eax,ecx
   14001c29a:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c29f:	add    rsp,0x40
   14001c2a3:	pop    rdi
   14001c2a4:	ret    
   14001c2a5:	int3   
   14001c2a6:	int3   
   14001c2a7:	int3   
   14001c2a8:	mov    edx,ecx
   14001c2aa:	mov    r9d,0x3
   14001c2b0:	xor    r8d,r8d
   14001c2b3:	xor    ecx,ecx
   14001c2b5:	jmp    0x14001c0b8
   14001c2ba:	int3   
   14001c2bb:	int3   
   14001c2bc:	mov    rax,rdx
   14001c2bf:	mov    edx,ecx
   14001c2c1:	mov    r9d,0x3
   14001c2c7:	mov    rcx,rax
   14001c2ca:	xor    r8d,r8d
   14001c2cd:	jmp    0x14001c0b8
   14001c2d2:	int3   
   14001c2d3:	int3   
   14001c2d4:	mov    edx,ecx
   14001c2d6:	mov    r9d,0x2
   14001c2dc:	xor    r8d,r8d
   14001c2df:	xor    ecx,ecx
   14001c2e1:	jmp    0x14001c0b8
   14001c2e6:	int3   
   14001c2e7:	int3   
   14001c2e8:	mov    rax,rdx
   14001c2eb:	mov    edx,ecx
   14001c2ed:	mov    r9d,0x2
   14001c2f3:	mov    rcx,rax
   14001c2f6:	xor    r8d,r8d
   14001c2f9:	jmp    0x14001c0b8
   14001c2fe:	int3   
   14001c2ff:	int3   
   14001c300:	mov    edx,ecx
   14001c302:	mov    r9d,0x4
   14001c308:	xor    r8d,r8d
   14001c30b:	xor    ecx,ecx
   14001c30d:	jmp    0x14001c0b8
   14001c312:	int3   
   14001c313:	int3   
   14001c314:	mov    rax,rdx
   14001c317:	mov    edx,ecx
   14001c319:	mov    r9d,0x4
   14001c31f:	mov    rcx,rax
   14001c322:	xor    r8d,r8d
   14001c325:	jmp    0x14001c0b8
   14001c32a:	int3   
   14001c32b:	int3   
   14001c32c:	mov    edx,ecx
   14001c32e:	mov    r9d,0x3
   14001c334:	mov    r8d,0x157
   14001c33a:	xor    ecx,ecx
   14001c33c:	jmp    0x14001c0b8
   14001c341:	int3   
   14001c342:	int3   
   14001c343:	int3   
   14001c344:	mov    rax,rdx
   14001c347:	mov    edx,ecx
   14001c349:	mov    r9d,0x3
   14001c34f:	mov    rcx,rax
   14001c352:	mov    r8d,0x157
   14001c358:	jmp    0x14001c0b8
   14001c35d:	int3   
   14001c35e:	int3   
   14001c35f:	int3   
   14001c360:	mov    r9d,0x2
   14001c366:	mov    edx,ecx
   14001c368:	xor    ecx,ecx
   14001c36a:	lea    r8d,[r9+0xe]
   14001c36e:	jmp    0x14001c0b8
   14001c373:	int3   
   14001c374:	mov    rax,rdx
   14001c377:	mov    r9d,0x2
   14001c37d:	mov    edx,ecx
   14001c37f:	lea    r8d,[r9+0xe]
   14001c383:	mov    rcx,rax
   14001c386:	jmp    0x14001c0b8
   14001c38b:	int3   
   14001c38c:	mov    edx,ecx
   14001c38e:	mov    r9d,0x8
   14001c394:	xor    r8d,r8d
   14001c397:	xor    ecx,ecx
   14001c399:	jmp    0x14001c0b8
   14001c39e:	int3   
   14001c39f:	int3   
   14001c3a0:	mov    rax,rdx
   14001c3a3:	mov    edx,ecx
   14001c3a5:	mov    r9d,0x8
   14001c3ab:	mov    rcx,rax
   14001c3ae:	xor    r8d,r8d
   14001c3b1:	jmp    0x14001c0b8
   14001c3b6:	int3   
   14001c3b7:	int3   
   14001c3b8:	rex push rbx
   14001c3ba:	sub    rsp,0x20
   14001c3be:	xor    r10d,r10d
   14001c3c1:	mov    r9,rcx
   14001c3c4:	test   rcx,rcx
   14001c3c7:	je     0x14001c3d7
   14001c3c9:	test   rdx,rdx
   14001c3cc:	je     0x14001c3d7
   14001c3ce:	test   r8,r8
   14001c3d1:	jne    0x14001c3f0
   14001c3d3:	mov    WORD PTR [rcx],r10w
   14001c3d7:	call   0x140009cb4
   14001c3dc:	mov    ebx,0x16
   14001c3e1:	mov    DWORD PTR [rax],ebx
   14001c3e3:	call   0x140008d58
   14001c3e8:	mov    eax,ebx
   14001c3ea:	add    rsp,0x20
   14001c3ee:	pop    rbx
   14001c3ef:	ret    
   14001c3f0:	cmp    WORD PTR [rcx],r10w
   14001c3f4:	je     0x14001c3ff
   14001c3f6:	add    rcx,0x2
   14001c3fa:	dec    rdx
   14001c3fd:	jne    0x14001c3f0
   14001c3ff:	test   rdx,rdx
   14001c402:	jne    0x14001c40a
   14001c404:	mov    WORD PTR [r9],r10w
   14001c408:	jmp    0x14001c3d7
   14001c40a:	sub    rcx,r8
   14001c40d:	movzx  eax,WORD PTR [r8]
   14001c411:	mov    WORD PTR [rcx+r8*1],ax
   14001c416:	lea    r8,[r8+0x2]
   14001c41a:	test   ax,ax
   14001c41d:	je     0x14001c424
   14001c41f:	dec    rdx
   14001c422:	jne    0x14001c40d
   14001c424:	test   rdx,rdx
   14001c427:	jne    0x14001c439
   14001c429:	mov    WORD PTR [r9],r10w
   14001c42d:	call   0x140009cb4
   14001c432:	mov    ebx,0x22
   14001c437:	jmp    0x14001c3e1
   14001c439:	xor    eax,eax
   14001c43b:	jmp    0x14001c3ea
   14001c43d:	int3   
   14001c43e:	int3   
   14001c43f:	int3   
   14001c440:	rex push rbx
   14001c442:	sub    rsp,0x20
   14001c446:	xor    r10d,r10d
   14001c449:	test   rcx,rcx
   14001c44c:	je     0x14001c45c
   14001c44e:	test   rdx,rdx
   14001c451:	je     0x14001c45c
   14001c453:	test   r8,r8
   14001c456:	jne    0x14001c475
   14001c458:	mov    WORD PTR [rcx],r10w
   14001c45c:	call   0x140009cb4
   14001c461:	mov    ebx,0x16
   14001c466:	mov    DWORD PTR [rax],ebx
   14001c468:	call   0x140008d58
   14001c46d:	mov    eax,ebx
   14001c46f:	add    rsp,0x20
   14001c473:	pop    rbx
   14001c474:	ret    
   14001c475:	mov    r9,rcx
   14001c478:	sub    r9,r8
   14001c47b:	movzx  eax,WORD PTR [r8]
   14001c47f:	mov    WORD PTR [r9+r8*1],ax
   14001c484:	lea    r8,[r8+0x2]
   14001c488:	test   ax,ax
   14001c48b:	je     0x14001c492
   14001c48d:	dec    rdx
   14001c490:	jne    0x14001c47b
   14001c492:	test   rdx,rdx
   14001c495:	jne    0x14001c4a7
   14001c497:	mov    WORD PTR [rcx],r10w
   14001c49b:	call   0x140009cb4
   14001c4a0:	mov    ebx,0x22
   14001c4a5:	jmp    0x14001c466
   14001c4a7:	xor    eax,eax
   14001c4a9:	jmp    0x14001c46f
   14001c4ab:	int3   
   14001c4ac:	mov    rax,rcx
   14001c4af:	movzx  edx,WORD PTR [rax]
   14001c4b2:	add    rax,0x2
   14001c4b6:	test   dx,dx
   14001c4b9:	jne    0x14001c4af
   14001c4bb:	sub    rax,rcx
   14001c4be:	sar    rax,1
   14001c4c1:	dec    rax
   14001c4c4:	ret    
   14001c4c5:	int3   
   14001c4c6:	int3   
   14001c4c7:	int3   
   14001c4c8:	rex push rbx
   14001c4ca:	sub    rsp,0x20
   14001c4ce:	xor    ebx,ebx
   14001c4d0:	test   r9,r9
   14001c4d3:	jne    0x14001c4e3
   14001c4d5:	test   rcx,rcx
   14001c4d8:	jne    0x14001c4e8
   14001c4da:	test   rdx,rdx
   14001c4dd:	jne    0x14001c4ff
   14001c4df:	xor    eax,eax
   14001c4e1:	jmp    0x14001c512
   14001c4e3:	test   rcx,rcx
   14001c4e6:	je     0x14001c4ff
   14001c4e8:	test   rdx,rdx
   14001c4eb:	je     0x14001c4ff
   14001c4ed:	test   r9,r9
   14001c4f0:	jne    0x14001c4f7
   14001c4f2:	mov    WORD PTR [rcx],bx
   14001c4f5:	jmp    0x14001c4df
   14001c4f7:	test   r8,r8
   14001c4fa:	jne    0x14001c518
   14001c4fc:	mov    WORD PTR [rcx],bx
   14001c4ff:	call   0x140009cb4
   14001c504:	mov    ebx,0x16
   14001c509:	mov    DWORD PTR [rax],ebx
   14001c50b:	call   0x140008d58
   14001c510:	mov    eax,ebx
   14001c512:	add    rsp,0x20
   14001c516:	pop    rbx
   14001c517:	ret    
   14001c518:	mov    r11,rcx
   14001c51b:	mov    r10,rdx
   14001c51e:	cmp    r9,0xffffffffffffffff
   14001c522:	jne    0x14001c540
   14001c524:	sub    r11,r8
   14001c527:	movzx  eax,WORD PTR [r8]
   14001c52b:	mov    WORD PTR [r11+r8*1],ax
   14001c530:	lea    r8,[r8+0x2]
   14001c534:	test   ax,ax
   14001c537:	je     0x14001c568
   14001c539:	dec    r10
   14001c53c:	jne    0x14001c527
   14001c53e:	jmp    0x14001c568
   14001c540:	sub    r8,rcx
   14001c543:	movzx  eax,WORD PTR [r8+r11*1]
   14001c548:	mov    WORD PTR [r11],ax
   14001c54c:	lea    r11,[r11+0x2]
   14001c550:	test   ax,ax
   14001c553:	je     0x14001c55f
   14001c555:	dec    r10
   14001c558:	je     0x14001c55f
   14001c55a:	dec    r9
   14001c55d:	jne    0x14001c543
   14001c55f:	test   r9,r9
   14001c562:	jne    0x14001c568
   14001c564:	mov    WORD PTR [r11],bx
   14001c568:	test   r10,r10
   14001c56b:	jne    0x14001c4df
   14001c571:	cmp    r9,0xffffffffffffffff
   14001c575:	jne    0x14001c582
   14001c577:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   14001c57c:	lea    eax,[r10+0x50]
   14001c580:	jmp    0x14001c512
   14001c582:	mov    WORD PTR [rcx],bx
   14001c585:	call   0x140009cb4
   14001c58a:	mov    ebx,0x22
   14001c58f:	jmp    0x14001c509
   14001c594:	rex push rbx
   14001c596:	push   rbp
   14001c597:	push   rsi
   14001c598:	push   rdi
   14001c599:	push   r12
   14001c59b:	push   r14
   14001c59d:	push   r15
   14001c59f:	sub    rsp,0x50
   14001c5a3:	mov    rax,QWORD PTR [rip+0x1fc26]        # 0x14003c1d0
   14001c5aa:	xor    rax,rsp
   14001c5ad:	mov    QWORD PTR [rsp+0x48],rax
   14001c5b2:	mov    r15,rcx
   14001c5b5:	xor    ecx,ecx
   14001c5b7:	mov    ebp,r8d
   14001c5ba:	mov    r12,rdx
   14001c5bd:	call   QWORD PTR [rip+0xfb4d]        # 0x14002c110
   14001c5c3:	xor    edi,edi
   14001c5c5:	mov    rsi,rax
   14001c5c8:	call   0x14000e828
   14001c5cd:	cmp    QWORD PTR [rip+0x22984],rdi        # 0x14003ef58
   14001c5d4:	mov    r14d,eax
   14001c5d7:	jne    0x14001c6d5
   14001c5dd:	lea    rcx,[rip+0x17b4c]        # 0x140034130
   14001c5e4:	xor    edx,edx
   14001c5e6:	mov    r8d,0x800
   14001c5ec:	call   QWORD PTR [rip+0xfa86]        # 0x14002c078
   14001c5f2:	mov    rbx,rax
   14001c5f5:	test   rax,rax
   14001c5f8:	jne    0x14001c627
   14001c5fa:	call   QWORD PTR [rip+0xfb50]        # 0x14002c150
   14001c600:	cmp    eax,0x57
   14001c603:	jne    0x14001c7e9
   14001c609:	lea    rcx,[rip+0x17b20]        # 0x140034130
   14001c610:	xor    r8d,r8d
   14001c613:	xor    edx,edx
   14001c615:	call   QWORD PTR [rip+0xfa5d]        # 0x14002c078
   14001c61b:	mov    rbx,rax
   14001c61e:	test   rax,rax
   14001c621:	je     0x14001c7e9
   14001c627:	lea    rdx,[rip+0x17b1a]        # 0x140034148
   14001c62e:	mov    rcx,rbx
   14001c631:	call   QWORD PTR [rip+0xfb41]        # 0x14002c178
   14001c637:	test   rax,rax
   14001c63a:	je     0x14001c7e9
   14001c640:	mov    rcx,rax
   14001c643:	call   QWORD PTR [rip+0xfac7]        # 0x14002c110
   14001c649:	lea    rdx,[rip+0x17b08]        # 0x140034158
   14001c650:	mov    rcx,rbx
   14001c653:	mov    QWORD PTR [rip+0x228fe],rax        # 0x14003ef58
   14001c65a:	call   QWORD PTR [rip+0xfb18]        # 0x14002c178
   14001c660:	mov    rcx,rax
   14001c663:	call   QWORD PTR [rip+0xfaa7]        # 0x14002c110
   14001c669:	lea    rdx,[rip+0x17af8]        # 0x140034168
   14001c670:	mov    rcx,rbx
   14001c673:	mov    QWORD PTR [rip+0x228e6],rax        # 0x14003ef60
   14001c67a:	call   QWORD PTR [rip+0xfaf8]        # 0x14002c178
   14001c680:	mov    rcx,rax
   14001c683:	call   QWORD PTR [rip+0xfa87]        # 0x14002c110
   14001c689:	lea    rdx,[rip+0x17af0]        # 0x140034180
   14001c690:	mov    rcx,rbx
   14001c693:	mov    QWORD PTR [rip+0x228ce],rax        # 0x14003ef68
   14001c69a:	call   QWORD PTR [rip+0xfad8]        # 0x14002c178
   14001c6a0:	mov    rcx,rax
   14001c6a3:	call   QWORD PTR [rip+0xfa67]        # 0x14002c110
   14001c6a9:	mov    QWORD PTR [rip+0x228c8],rax        # 0x14003ef78
   14001c6b0:	test   rax,rax
   14001c6b3:	je     0x14001c6d5
   14001c6b5:	lea    rdx,[rip+0x17ae4]        # 0x1400341a0
   14001c6bc:	mov    rcx,rbx
   14001c6bf:	call   QWORD PTR [rip+0xfab3]        # 0x14002c178
   14001c6c5:	mov    rcx,rax
   14001c6c8:	call   QWORD PTR [rip+0xfa42]        # 0x14002c110
   14001c6ce:	mov    QWORD PTR [rip+0x2289b],rax        # 0x14003ef70
   14001c6d5:	call   QWORD PTR [rip+0xfac5]        # 0x14002c1a0
   14001c6db:	test   eax,eax
   14001c6dd:	je     0x14001c6fc
   14001c6df:	test   r15,r15
   14001c6e2:	je     0x14001c6ed
   14001c6e4:	mov    rcx,r15
   14001c6e7:	call   QWORD PTR [rip+0xf943]        # 0x14002c030
   14001c6ed:	test   r14d,r14d
   14001c6f0:	je     0x14001c718
   14001c6f2:	mov    eax,0x4
   14001c6f7:	jmp    0x14001c7eb
   14001c6fc:	test   r14d,r14d
   14001c6ff:	je     0x14001c718
   14001c701:	mov    rcx,QWORD PTR [rip+0x22850]        # 0x14003ef58
   14001c708:	call   QWORD PTR [rip+0xfa0a]        # 0x14002c118
   14001c70e:	mov    eax,0x3
   14001c713:	jmp    0x14001c7eb
   14001c718:	mov    rcx,QWORD PTR [rip+0x22851]        # 0x14003ef70
   14001c71f:	cmp    rcx,rsi
   14001c722:	je     0x14001c787
   14001c724:	cmp    QWORD PTR [rip+0x2284d],rsi        # 0x14003ef78
   14001c72b:	je     0x14001c787
   14001c72d:	call   QWORD PTR [rip+0xf9e5]        # 0x14002c118
   14001c733:	mov    rcx,QWORD PTR [rip+0x2283e]        # 0x14003ef78
   14001c73a:	mov    rbx,rax
   14001c73d:	call   QWORD PTR [rip+0xf9d5]        # 0x14002c118
   14001c743:	mov    r14,rax
   14001c746:	test   rbx,rbx
   14001c749:	je     0x14001c787
   14001c74b:	test   rax,rax
   14001c74e:	je     0x14001c787
   14001c750:	call   rbx
   14001c752:	test   rax,rax
   14001c755:	je     0x14001c781
   14001c757:	lea    rcx,[rsp+0x30]
   14001c75c:	mov    r9d,0xc
   14001c762:	lea    r8,[rsp+0x38]
   14001c767:	mov    QWORD PTR [rsp+0x20],rcx
   14001c76c:	lea    edx,[r9-0xb]
   14001c770:	mov    rcx,rax
   14001c773:	call   r14
   14001c776:	test   eax,eax
   14001c778:	je     0x14001c781
   14001c77a:	test   BYTE PTR [rsp+0x40],0x1
   14001c77f:	jne    0x14001c787
   14001c781:	bts    ebp,0x15
   14001c785:	jmp    0x14001c7c7
   14001c787:	mov    rcx,QWORD PTR [rip+0x227d2]        # 0x14003ef60
   14001c78e:	cmp    rcx,rsi
   14001c791:	je     0x14001c7c7
   14001c793:	call   QWORD PTR [rip+0xf97f]        # 0x14002c118
   14001c799:	test   rax,rax
   14001c79c:	je     0x14001c7c7
   14001c79e:	call   rax
   14001c7a0:	mov    rdi,rax
   14001c7a3:	test   rax,rax
   14001c7a6:	je     0x14001c7c7
   14001c7a8:	mov    rcx,QWORD PTR [rip+0x227b9]        # 0x14003ef68
   14001c7af:	cmp    rcx,rsi
   14001c7b2:	je     0x14001c7c7
   14001c7b4:	call   QWORD PTR [rip+0xf95e]        # 0x14002c118
   14001c7ba:	test   rax,rax
   14001c7bd:	je     0x14001c7c7
   14001c7bf:	mov    rcx,rdi
   14001c7c2:	call   rax
   14001c7c4:	mov    rdi,rax
   14001c7c7:	mov    rcx,QWORD PTR [rip+0x2278a]        # 0x14003ef58
   14001c7ce:	call   QWORD PTR [rip+0xf944]        # 0x14002c118
   14001c7d4:	test   rax,rax
   14001c7d7:	je     0x14001c7e9
   14001c7d9:	mov    r9d,ebp
   14001c7dc:	mov    r8,r12
   14001c7df:	mov    rdx,r15
   14001c7e2:	mov    rcx,rdi
   14001c7e5:	call   rax
   14001c7e7:	jmp    0x14001c7eb
   14001c7e9:	xor    eax,eax
   14001c7eb:	mov    rcx,QWORD PTR [rsp+0x48]
   14001c7f0:	xor    rcx,rsp
   14001c7f3:	call   0x14000c380
   14001c7f8:	add    rsp,0x50
   14001c7fc:	pop    r15
   14001c7fe:	pop    r14
   14001c800:	pop    r12
   14001c802:	pop    rdi
   14001c803:	pop    rsi
   14001c804:	pop    rbp
   14001c805:	pop    rbx
   14001c806:	ret    
   14001c807:	int3   
   14001c808:	rex push rbx
   14001c80a:	sub    rsp,0x20
   14001c80e:	mov    r9d,DWORD PTR [rcx+0x18]
   14001c812:	mov    r8,QWORD PTR [rcx+0x10]
   14001c816:	mov    rdx,QWORD PTR [rcx+0x8]
   14001c81a:	mov    rbx,rcx
   14001c81d:	xor    ecx,ecx
   14001c81f:	call   QWORD PTR [rbx]
   14001c821:	mov    DWORD PTR [rbx+0x1c],eax
   14001c824:	xor    eax,eax
   14001c826:	add    rsp,0x20
   14001c82a:	pop    rbx
   14001c82b:	ret    
   14001c82c:	xor    r8d,r8d
   14001c82f:	mov    eax,r8d
   14001c832:	test   rdx,rdx
   14001c835:	je     0x14001c849
   14001c837:	cmp    WORD PTR [rcx],r8w
   14001c83b:	je     0x14001c849
   14001c83d:	inc    rax
   14001c840:	add    rcx,0x2
   14001c844:	cmp    rax,rdx
   14001c847:	jb     0x14001c837
   14001c849:	ret    
   14001c84a:	int3   
   14001c84b:	int3   
   14001c84c:	rex push rbp
   14001c84e:	push   r12
   14001c850:	push   r13
   14001c852:	push   r14
   14001c854:	push   r15
   14001c856:	sub    rsp,0x50
   14001c85a:	lea    rbp,[rsp+0x40]
   14001c85f:	mov    QWORD PTR [rbp+0x40],rbx
   14001c863:	mov    QWORD PTR [rbp+0x48],rsi
   14001c867:	mov    QWORD PTR [rbp+0x50],rdi
   14001c86b:	mov    rax,QWORD PTR [rip+0x1f95e]        # 0x14003c1d0
   14001c872:	xor    rax,rbp
   14001c875:	mov    QWORD PTR [rbp+0x8],rax
   14001c879:	mov    ebx,DWORD PTR [rbp+0x60]
   14001c87c:	xor    edi,edi
   14001c87e:	mov    r12,r9
   14001c881:	mov    r13d,r8d
   14001c884:	mov    QWORD PTR [rbp+0x0],rdx
   14001c888:	test   ebx,ebx
   14001c88a:	jle    0x14001c8b6
   14001c88c:	mov    r10d,ebx
   14001c88f:	mov    rax,r9
   14001c892:	dec    r10d
   14001c895:	cmp    BYTE PTR [rax],dil
   14001c898:	je     0x14001c8a6
   14001c89a:	inc    rax
   14001c89d:	test   r10d,r10d
   14001c8a0:	jne    0x14001c892
   14001c8a2:	or     r10d,0xffffffff
   14001c8a6:	mov    eax,ebx
   14001c8a8:	sub    eax,r10d
   14001c8ab:	dec    eax
   14001c8ad:	cmp    eax,ebx
   14001c8af:	lea    ebx,[rax+0x1]
   14001c8b2:	jl     0x14001c8b6
   14001c8b4:	mov    ebx,eax
   14001c8b6:	mov    r14d,DWORD PTR [rbp+0x78]
   14001c8ba:	mov    esi,edi
   14001c8bc:	test   r14d,r14d
   14001c8bf:	jne    0x14001c8c8
   14001c8c1:	mov    rax,QWORD PTR [rcx]
   14001c8c4:	mov    r14d,DWORD PTR [rax+0x4]
   14001c8c8:	neg    DWORD PTR [rbp+0x80]
   14001c8ce:	mov    r9d,ebx
   14001c8d1:	mov    r8,r12
   14001c8d4:	sbb    edx,edx
   14001c8d6:	mov    ecx,r14d
   14001c8d9:	mov    DWORD PTR [rsp+0x28],edi
   14001c8dd:	and    edx,0x8
   14001c8e0:	mov    QWORD PTR [rsp+0x20],rdi
   14001c8e5:	inc    edx
   14001c8e7:	call   QWORD PTR [rip+0xf89b]        # 0x14002c188
   14001c8ed:	movsxd r15,eax
   14001c8f0:	test   eax,eax
   14001c8f2:	jne    0x14001c8fb
   14001c8f4:	xor    eax,eax
   14001c8f6:	jmp    0x14001cb12
   14001c8fb:	movabs r9,0xffffffffffffff0
   14001c905:	test   eax,eax
   14001c907:	jle    0x14001c977
   14001c909:	xor    edx,edx
   14001c90b:	lea    rax,[rdx-0x20]
   14001c90f:	div    r15
   14001c912:	cmp    rax,0x2
   14001c916:	jb     0x14001c977
   14001c918:	lea    rcx,[r15+r15*1]
   14001c91c:	lea    rax,[rcx+0x10]
   14001c920:	cmp    rax,rcx
   14001c923:	jbe    0x14001c977
   14001c925:	lea    rcx,[r15*2+0x10]
   14001c92d:	cmp    rcx,0x400
   14001c934:	ja     0x14001c960
   14001c936:	lea    rax,[rcx+0xf]
   14001c93a:	cmp    rax,rcx
   14001c93d:	ja     0x14001c942
   14001c93f:	mov    rax,r9
   14001c942:	and    rax,0xfffffffffffffff0
   14001c946:	call   0x140006e30
   14001c94b:	sub    rsp,rax
   14001c94e:	lea    rdi,[rsp+0x40]
   14001c953:	test   rdi,rdi
   14001c956:	je     0x14001c8f4
   14001c958:	mov    DWORD PTR [rdi],0xcccc
   14001c95e:	jmp    0x14001c973
   14001c960:	call   0x140007c64
   14001c965:	mov    rdi,rax
   14001c968:	test   rax,rax
   14001c96b:	je     0x14001c977
   14001c96d:	mov    DWORD PTR [rax],0xdddd
   14001c973:	add    rdi,0x10
   14001c977:	test   rdi,rdi
   14001c97a:	je     0x14001c8f4
   14001c980:	mov    r9d,ebx
   14001c983:	mov    r8,r12
   14001c986:	mov    edx,0x1
   14001c98b:	mov    ecx,r14d
   14001c98e:	mov    DWORD PTR [rsp+0x28],r15d
   14001c993:	mov    QWORD PTR [rsp+0x20],rdi
   14001c998:	call   QWORD PTR [rip+0xf7ea]        # 0x14002c188
   14001c99e:	test   eax,eax
   14001c9a0:	je     0x14001caff
   14001c9a6:	mov    r12,QWORD PTR [rbp+0x0]
   14001c9aa:	and    DWORD PTR [rsp+0x28],esi
   14001c9ae:	and    QWORD PTR [rsp+0x20],rsi
   14001c9b3:	mov    rcx,r12
   14001c9b6:	mov    r9d,r15d
   14001c9b9:	mov    r8,rdi
   14001c9bc:	mov    edx,r13d
   14001c9bf:	call   0x14000fb44
   14001c9c4:	movsxd rsi,eax
   14001c9c7:	test   eax,eax
   14001c9c9:	je     0x14001caff
   14001c9cf:	mov    r9d,0x400
   14001c9d5:	test   r9d,r13d
   14001c9d8:	je     0x14001ca10
   14001c9da:	mov    ecx,DWORD PTR [rbp+0x70]
   14001c9dd:	test   ecx,ecx
   14001c9df:	je     0x14001caff
   14001c9e5:	cmp    esi,ecx
   14001c9e7:	jg     0x14001caff
   14001c9ed:	mov    rax,QWORD PTR [rbp+0x68]
   14001c9f1:	mov    DWORD PTR [rsp+0x28],ecx
   14001c9f5:	mov    r9d,r15d
   14001c9f8:	mov    r8,rdi
   14001c9fb:	mov    edx,r13d
   14001c9fe:	mov    rcx,r12
   14001ca01:	mov    QWORD PTR [rsp+0x20],rax
   14001ca06:	call   0x14000fb44
   14001ca0b:	jmp    0x14001caff
   14001ca10:	test   eax,eax
   14001ca12:	jle    0x14001ca8b
   14001ca14:	xor    edx,edx
   14001ca16:	lea    rax,[rdx-0x20]
   14001ca1a:	div    rsi
   14001ca1d:	cmp    rax,0x2
   14001ca21:	jb     0x14001ca8b
   14001ca23:	lea    rcx,[rsi+rsi*1]
   14001ca27:	lea    rax,[rcx+0x10]
   14001ca2b:	cmp    rax,rcx
   14001ca2e:	jbe    0x14001ca8b
   14001ca30:	lea    rcx,[rsi*2+0x10]
   14001ca38:	cmp    rcx,r9
   14001ca3b:	ja     0x14001ca72
   14001ca3d:	lea    rax,[rcx+0xf]
   14001ca41:	cmp    rax,rcx
   14001ca44:	ja     0x14001ca50
   14001ca46:	movabs rax,0xffffffffffffff0
   14001ca50:	and    rax,0xfffffffffffffff0
   14001ca54:	call   0x140006e30
   14001ca59:	sub    rsp,rax
   14001ca5c:	lea    rbx,[rsp+0x40]
   14001ca61:	test   rbx,rbx
   14001ca64:	je     0x14001caff
   14001ca6a:	mov    DWORD PTR [rbx],0xcccc
   14001ca70:	jmp    0x14001ca85
   14001ca72:	call   0x140007c64
   14001ca77:	mov    rbx,rax
   14001ca7a:	test   rax,rax
   14001ca7d:	je     0x14001ca8d
   14001ca7f:	mov    DWORD PTR [rax],0xdddd
   14001ca85:	add    rbx,0x10
   14001ca89:	jmp    0x14001ca8d
   14001ca8b:	xor    ebx,ebx
   14001ca8d:	test   rbx,rbx
   14001ca90:	je     0x14001caff
   14001ca92:	mov    r9d,r15d
   14001ca95:	mov    r8,rdi
   14001ca98:	mov    edx,r13d
   14001ca9b:	mov    rcx,r12
   14001ca9e:	mov    DWORD PTR [rsp+0x28],esi
   14001caa2:	mov    QWORD PTR [rsp+0x20],rbx
   14001caa7:	call   0x14000fb44
   14001caac:	xor    ecx,ecx
   14001caae:	test   eax,eax
   14001cab0:	je     0x14001caee
   14001cab2:	mov    eax,DWORD PTR [rbp+0x70]
   14001cab5:	xor    edx,edx
   14001cab7:	mov    QWORD PTR [rsp+0x38],rcx
   14001cabc:	mov    r9d,esi
   14001cabf:	mov    r8,rbx
   14001cac2:	mov    QWORD PTR [rsp+0x30],rcx
   14001cac7:	test   eax,eax
   14001cac9:	jne    0x14001cad6
   14001cacb:	mov    DWORD PTR [rsp+0x28],ecx
   14001cacf:	mov    QWORD PTR [rsp+0x20],rcx
   14001cad4:	jmp    0x14001cae3
   14001cad6:	mov    DWORD PTR [rsp+0x28],eax
   14001cada:	mov    rax,QWORD PTR [rbp+0x68]
   14001cade:	mov    QWORD PTR [rsp+0x20],rax
   14001cae3:	mov    ecx,r14d
   14001cae6:	call   QWORD PTR [rip+0xf6a4]        # 0x14002c190
   14001caec:	mov    esi,eax
   14001caee:	lea    rcx,[rbx-0x10]
   14001caf2:	cmp    DWORD PTR [rcx],0xdddd
   14001caf8:	jne    0x14001caff
   14001cafa:	call   0x140007dc0
   14001caff:	lea    rcx,[rdi-0x10]
   14001cb03:	cmp    DWORD PTR [rcx],0xdddd
   14001cb09:	jne    0x14001cb10
   14001cb0b:	call   0x140007dc0
   14001cb10:	mov    eax,esi
   14001cb12:	mov    rcx,QWORD PTR [rbp+0x8]
   14001cb16:	xor    rcx,rbp
   14001cb19:	call   0x14000c380
   14001cb1e:	mov    rbx,QWORD PTR [rbp+0x40]
   14001cb22:	mov    rsi,QWORD PTR [rbp+0x48]
   14001cb26:	mov    rdi,QWORD PTR [rbp+0x50]
   14001cb2a:	lea    rsp,[rbp+0x10]
   14001cb2e:	pop    r15
   14001cb30:	pop    r14
   14001cb32:	pop    r13
   14001cb34:	pop    r12
   14001cb36:	pop    rbp
   14001cb37:	ret    
   14001cb38:	mov    eax,edx
   14001cb3a:	test   edx,edx
   14001cb3c:	je     0x14001cb4c
   14001cb3e:	dec    eax
   14001cb40:	cmp    BYTE PTR [rcx],0x0
   14001cb43:	je     0x14001cb4e
   14001cb45:	inc    rcx
   14001cb48:	test   eax,eax
   14001cb4a:	jne    0x14001cb3e
   14001cb4c:	dec    eax
   14001cb4e:	sub    edx,eax
   14001cb50:	lea    eax,[rdx-0x1]
   14001cb53:	ret    
   14001cb54:	mov    QWORD PTR [rsp+0x8],rbx
   14001cb59:	mov    QWORD PTR [rsp+0x10],rsi
   14001cb5e:	push   rdi
   14001cb5f:	sub    rsp,0x70
   14001cb63:	mov    rsi,rdx
   14001cb66:	mov    rdx,rcx
   14001cb69:	lea    rcx,[rsp+0x50]
   14001cb6e:	mov    rbx,r9
   14001cb71:	mov    edi,r8d
   14001cb74:	call   0x140008fac
   14001cb79:	mov    eax,DWORD PTR [rsp+0xc0]
   14001cb80:	lea    rcx,[rsp+0x50]
   14001cb85:	mov    r9,rbx
   14001cb88:	mov    DWORD PTR [rsp+0x40],eax
   14001cb8c:	mov    eax,DWORD PTR [rsp+0xb8]
   14001cb93:	mov    r8d,edi
   14001cb96:	mov    DWORD PTR [rsp+0x38],eax
   14001cb9a:	mov    eax,DWORD PTR [rsp+0xb0]
   14001cba1:	mov    rdx,rsi
   14001cba4:	mov    DWORD PTR [rsp+0x30],eax
   14001cba8:	mov    rax,QWORD PTR [rsp+0xa8]
   14001cbb0:	mov    QWORD PTR [rsp+0x28],rax
   14001cbb5:	mov    eax,DWORD PTR [rsp+0xa0]
   14001cbbc:	mov    DWORD PTR [rsp+0x20],eax
   14001cbc0:	call   0x14001c84c
   14001cbc5:	cmp    BYTE PTR [rsp+0x68],0x0
   14001cbca:	je     0x14001cbd8
   14001cbcc:	mov    rcx,QWORD PTR [rsp+0x60]
   14001cbd1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001cbd8:	lea    r11,[rsp+0x70]
   14001cbdd:	mov    rbx,QWORD PTR [r11+0x10]
   14001cbe1:	mov    rsi,QWORD PTR [r11+0x18]
   14001cbe5:	mov    rsp,r11
   14001cbe8:	pop    rdi
   14001cbe9:	ret    
   14001cbea:	int3   
   14001cbeb:	int3   
   14001cbec:	rex push rbp
   14001cbee:	push   r12
   14001cbf0:	push   r13
   14001cbf2:	push   r14
   14001cbf4:	push   r15
   14001cbf6:	sub    rsp,0x40
   14001cbfa:	lea    rbp,[rsp+0x30]
   14001cbff:	mov    QWORD PTR [rbp+0x40],rbx
   14001cc03:	mov    QWORD PTR [rbp+0x48],rsi
   14001cc07:	mov    QWORD PTR [rbp+0x50],rdi
   14001cc0b:	mov    rax,QWORD PTR [rip+0x1f5be]        # 0x14003c1d0
   14001cc12:	xor    rax,rbp
   14001cc15:	mov    QWORD PTR [rbp+0x0],rax
   14001cc19:	mov    r14d,DWORD PTR [rbp+0x68]
   14001cc1d:	xor    edi,edi
   14001cc1f:	mov    r15d,r9d
   14001cc22:	mov    r12,r8
   14001cc25:	mov    r13d,edx
   14001cc28:	test   r14d,r14d
   14001cc2b:	jne    0x14001cc34
   14001cc2d:	mov    rax,QWORD PTR [rcx]
   14001cc30:	mov    r14d,DWORD PTR [rax+0x4]
   14001cc34:	neg    DWORD PTR [rbp+0x70]
   14001cc37:	mov    ecx,r14d
   14001cc3a:	mov    DWORD PTR [rsp+0x28],edi
   14001cc3e:	sbb    edx,edx
   14001cc40:	mov    QWORD PTR [rsp+0x20],rdi
   14001cc45:	and    edx,0x8
   14001cc48:	inc    edx
   14001cc4a:	call   QWORD PTR [rip+0xf538]        # 0x14002c188
   14001cc50:	movsxd rsi,eax
   14001cc53:	test   eax,eax
   14001cc55:	jne    0x14001cc5e
   14001cc57:	xor    eax,eax
   14001cc59:	jmp    0x14001cd3c
   14001cc5e:	jle    0x14001ccd7
   14001cc60:	movabs rax,0x7ffffffffffffff0
   14001cc6a:	cmp    rsi,rax
   14001cc6d:	ja     0x14001ccd7
   14001cc6f:	lea    rcx,[rsi+rsi*1]
   14001cc73:	lea    rax,[rcx+0x10]
   14001cc77:	cmp    rax,rcx
   14001cc7a:	jbe    0x14001ccd7
   14001cc7c:	lea    rcx,[rsi*2+0x10]
   14001cc84:	cmp    rcx,0x400
   14001cc8b:	ja     0x14001ccbe
   14001cc8d:	lea    rax,[rcx+0xf]
   14001cc91:	cmp    rax,rcx
   14001cc94:	ja     0x14001cca0
   14001cc96:	movabs rax,0xffffffffffffff0
   14001cca0:	and    rax,0xfffffffffffffff0
   14001cca4:	call   0x140006e30
   14001cca9:	sub    rsp,rax
   14001ccac:	lea    rbx,[rsp+0x30]
   14001ccb1:	test   rbx,rbx
   14001ccb4:	je     0x14001cc57
   14001ccb6:	mov    DWORD PTR [rbx],0xcccc
   14001ccbc:	jmp    0x14001ccd1
   14001ccbe:	call   0x140007c64
   14001ccc3:	mov    rbx,rax
   14001ccc6:	test   rax,rax
   14001ccc9:	je     0x14001ccda
   14001cccb:	mov    DWORD PTR [rax],0xdddd
   14001ccd1:	add    rbx,0x10
   14001ccd5:	jmp    0x14001ccda
   14001ccd7:	mov    rbx,rdi
   14001ccda:	test   rbx,rbx
   14001ccdd:	je     0x14001cc57
   14001cce3:	mov    r8,rsi
   14001cce6:	xor    edx,edx
   14001cce8:	mov    rcx,rbx
   14001cceb:	add    r8,r8
   14001ccee:	call   0x140006f70
   14001ccf3:	mov    r9d,r15d
   14001ccf6:	mov    r8,r12
   14001ccf9:	mov    edx,0x1
   14001ccfe:	mov    ecx,r14d
   14001cd01:	mov    DWORD PTR [rsp+0x28],esi
   14001cd05:	mov    QWORD PTR [rsp+0x20],rbx
   14001cd0a:	call   QWORD PTR [rip+0xf478]        # 0x14002c188
   14001cd10:	test   eax,eax
   14001cd12:	je     0x14001cd29
   14001cd14:	mov    r9,QWORD PTR [rbp+0x60]
   14001cd18:	mov    r8d,eax
   14001cd1b:	mov    rdx,rbx
   14001cd1e:	mov    ecx,r13d
   14001cd21:	call   QWORD PTR [rip+0xf301]        # 0x14002c028
   14001cd27:	mov    edi,eax
   14001cd29:	lea    rcx,[rbx-0x10]
   14001cd2d:	cmp    DWORD PTR [rcx],0xdddd
   14001cd33:	jne    0x14001cd3a
   14001cd35:	call   0x140007dc0
   14001cd3a:	mov    eax,edi
   14001cd3c:	mov    rcx,QWORD PTR [rbp+0x0]
   14001cd40:	xor    rcx,rbp
   14001cd43:	call   0x14000c380
   14001cd48:	mov    rbx,QWORD PTR [rbp+0x40]
   14001cd4c:	mov    rsi,QWORD PTR [rbp+0x48]
   14001cd50:	mov    rdi,QWORD PTR [rbp+0x50]
   14001cd54:	lea    rsp,[rbp+0x10]
   14001cd58:	pop    r15
   14001cd5a:	pop    r14
   14001cd5c:	pop    r13
   14001cd5e:	pop    r12
   14001cd60:	pop    rbp
   14001cd61:	ret    
   14001cd62:	int3   
   14001cd63:	int3   
   14001cd64:	mov    QWORD PTR [rsp+0x8],rbx
   14001cd69:	mov    QWORD PTR [rsp+0x10],rsi
   14001cd6e:	push   rdi
   14001cd6f:	sub    rsp,0x60
   14001cd73:	mov    esi,edx
   14001cd75:	mov    rdx,rcx
   14001cd78:	lea    rcx,[rsp+0x40]
   14001cd7d:	mov    ebx,r9d
   14001cd80:	mov    rdi,r8
   14001cd83:	call   0x140008fac
   14001cd88:	mov    eax,DWORD PTR [rsp+0xa0]
   14001cd8f:	lea    rcx,[rsp+0x40]
   14001cd94:	mov    r9d,ebx
   14001cd97:	mov    DWORD PTR [rsp+0x30],eax
   14001cd9b:	mov    eax,DWORD PTR [rsp+0x98]
   14001cda2:	mov    r8,rdi
   14001cda5:	mov    DWORD PTR [rsp+0x28],eax
   14001cda9:	mov    rax,QWORD PTR [rsp+0x90]
   14001cdb1:	mov    edx,esi
   14001cdb3:	mov    QWORD PTR [rsp+0x20],rax
   14001cdb8:	call   0x14001cbec
   14001cdbd:	cmp    BYTE PTR [rsp+0x58],0x0
   14001cdc2:	je     0x14001cdd0
   14001cdc4:	mov    rcx,QWORD PTR [rsp+0x50]
   14001cdc9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001cdd0:	mov    rbx,QWORD PTR [rsp+0x70]
   14001cdd5:	mov    rsi,QWORD PTR [rsp+0x78]
   14001cdda:	add    rsp,0x60
   14001cdde:	pop    rdi
   14001cddf:	ret    
   14001cde0:	rex push rbx
   14001cde2:	sub    rsp,0x20
   14001cde6:	mov    rbx,rcx
   14001cde9:	test   rcx,rcx
   14001cdec:	jne    0x14001cdf8
   14001cdee:	add    rsp,0x20
   14001cdf2:	pop    rbx
   14001cdf3:	jmp    0x14001cef8
   14001cdf8:	call   0x14001ce2c
   14001cdfd:	test   eax,eax
   14001cdff:	je     0x14001ce06
   14001ce01:	or     eax,0xffffffff
   14001ce04:	jmp    0x14001ce26
   14001ce06:	test   DWORD PTR [rbx+0x18],0x4000
   14001ce0d:	je     0x14001ce24
   14001ce0f:	mov    rcx,rbx
   14001ce12:	call   0x140010f18
   14001ce17:	mov    ecx,eax
   14001ce19:	call   0x140023f90
   14001ce1e:	neg    eax
   14001ce20:	sbb    eax,eax
   14001ce22:	jmp    0x14001ce26
   14001ce24:	xor    eax,eax
   14001ce26:	add    rsp,0x20
   14001ce2a:	pop    rbx
   14001ce2b:	ret    
   14001ce2c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ce31:	mov    QWORD PTR [rsp+0x10],rsi
   14001ce36:	push   rdi
   14001ce37:	sub    rsp,0x20
   14001ce3b:	mov    eax,DWORD PTR [rcx+0x18]
   14001ce3e:	xor    esi,esi
   14001ce40:	mov    rbx,rcx
   14001ce43:	and    al,0x3
   14001ce45:	cmp    al,0x2
   14001ce47:	jne    0x14001ce88
   14001ce49:	test   DWORD PTR [rcx+0x18],0x108
   14001ce50:	je     0x14001ce88
   14001ce52:	mov    edi,DWORD PTR [rcx]
   14001ce54:	sub    edi,DWORD PTR [rcx+0x10]
   14001ce57:	test   edi,edi
   14001ce59:	jle    0x14001ce88
   14001ce5b:	call   0x140010f18
   14001ce60:	mov    rdx,QWORD PTR [rbx+0x10]
   14001ce64:	mov    r8d,edi
   14001ce67:	mov    ecx,eax
   14001ce69:	call   0x140010fa0
   14001ce6e:	cmp    eax,edi
   14001ce70:	jne    0x14001ce81
   14001ce72:	mov    eax,DWORD PTR [rbx+0x18]
   14001ce75:	test   al,al
   14001ce77:	jns    0x14001ce88
   14001ce79:	and    eax,0xfffffffd
   14001ce7c:	mov    DWORD PTR [rbx+0x18],eax
   14001ce7f:	jmp    0x14001ce88
   14001ce81:	or     DWORD PTR [rbx+0x18],0x20
   14001ce85:	or     esi,0xffffffff
   14001ce88:	mov    rcx,QWORD PTR [rbx+0x10]
   14001ce8c:	and    DWORD PTR [rbx+0x8],0x0
   14001ce90:	mov    eax,esi
   14001ce92:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ce97:	mov    QWORD PTR [rbx],rcx
   14001ce9a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce9f:	add    rsp,0x20
   14001cea3:	pop    rdi
   14001cea4:	ret    
   14001cea5:	int3   
   14001cea6:	int3   
   14001cea7:	int3   
   14001cea8:	mov    ecx,0x1
   14001cead:	jmp    0x14001cef8
   14001ceb2:	int3   
   14001ceb3:	int3   
   14001ceb4:	mov    QWORD PTR [rsp+0x10],rbx
   14001ceb9:	mov    QWORD PTR [rsp+0x8],rcx
   14001cebe:	push   rdi
   14001cebf:	sub    rsp,0x20
   14001cec3:	mov    rbx,rcx
   14001cec6:	test   rcx,rcx
   14001cec9:	jne    0x14001ced2
   14001cecb:	call   0x14001cef8
   14001ced0:	jmp    0x14001ceec
   14001ced2:	call   0x140010e0c
   14001ced7:	nop
   14001ced8:	mov    rcx,rbx
   14001cedb:	call   0x14001cde0
   14001cee0:	mov    edi,eax
   14001cee2:	mov    rcx,rbx
   14001cee5:	call   0x140010ea8
   14001ceea:	mov    eax,edi
   14001ceec:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cef1:	add    rsp,0x20
   14001cef5:	pop    rdi
   14001cef6:	ret    
   14001cef7:	int3   
   14001cef8:	mov    QWORD PTR [rsp+0x8],rbx
   14001cefd:	mov    QWORD PTR [rsp+0x10],rsi
   14001cf02:	mov    QWORD PTR [rsp+0x18],rdi
   14001cf07:	push   r13
   14001cf09:	push   r14
   14001cf0b:	push   r15
   14001cf0d:	sub    rsp,0x30
   14001cf11:	mov    r14d,ecx
   14001cf14:	xor    esi,esi
   14001cf16:	xor    edi,edi
   14001cf18:	lea    ecx,[rsi+0x1]
   14001cf1b:	call   0x14000fc2c
   14001cf20:	nop
   14001cf21:	xor    ebx,ebx
   14001cf23:	or     r13d,0xffffffff
   14001cf27:	mov    DWORD PTR [rsp+0x20],ebx
   14001cf2b:	cmp    ebx,DWORD PTR [rip+0x2206f]        # 0x14003efa0
   14001cf31:	jge    0x14001cfb1
   14001cf33:	movsxd r15,ebx
   14001cf36:	mov    rax,QWORD PTR [rip+0x2205b]        # 0x14003ef98
   14001cf3d:	mov    rdx,QWORD PTR [rax+r15*8]
   14001cf41:	test   rdx,rdx
   14001cf44:	je     0x14001cfaa
   14001cf46:	test   BYTE PTR [rdx+0x18],0x83
   14001cf4a:	je     0x14001cfaa
   14001cf4c:	mov    ecx,ebx
   14001cf4e:	call   0x140010e74
   14001cf53:	nop
   14001cf54:	mov    rax,QWORD PTR [rip+0x2203d]        # 0x14003ef98
   14001cf5b:	mov    rcx,QWORD PTR [rax+r15*8]
   14001cf5f:	test   BYTE PTR [rcx+0x18],0x83
   14001cf63:	je     0x14001cf98
   14001cf65:	cmp    r14d,0x1
   14001cf69:	jne    0x14001cf7d
   14001cf6b:	call   0x14001cde0
   14001cf70:	cmp    eax,r13d
   14001cf73:	je     0x14001cf98
   14001cf75:	inc    esi
   14001cf77:	mov    DWORD PTR [rsp+0x24],esi
   14001cf7b:	jmp    0x14001cf98
   14001cf7d:	test   r14d,r14d
   14001cf80:	jne    0x14001cf98
   14001cf82:	test   BYTE PTR [rcx+0x18],0x2
   14001cf86:	je     0x14001cf98
   14001cf88:	call   0x14001cde0
   14001cf8d:	cmp    eax,r13d
   14001cf90:	cmove  edi,r13d
   14001cf94:	mov    DWORD PTR [rsp+0x28],edi
   14001cf98:	mov    rdx,QWORD PTR [rip+0x21ff9]        # 0x14003ef98
   14001cf9f:	mov    rdx,QWORD PTR [rdx+r15*8]
   14001cfa3:	mov    ecx,ebx
   14001cfa5:	call   0x140010ef8
   14001cfaa:	inc    ebx
   14001cfac:	jmp    0x14001cf27
   14001cfb1:	mov    ecx,0x1
   14001cfb6:	call   0x14000fe48
   14001cfbb:	cmp    r14d,0x1
   14001cfbf:	cmove  edi,esi
   14001cfc2:	mov    eax,edi
   14001cfc4:	mov    rbx,QWORD PTR [rsp+0x50]
   14001cfc9:	mov    rsi,QWORD PTR [rsp+0x58]
   14001cfce:	mov    rdi,QWORD PTR [rsp+0x60]
   14001cfd3:	add    rsp,0x30
   14001cfd7:	pop    r15
   14001cfd9:	pop    r14
   14001cfdb:	pop    r13
   14001cfdd:	ret    
   14001cfde:	int3   
   14001cfdf:	int3   
   14001cfe0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cfe5:	mov    QWORD PTR [rsp+0x10],rsi
   14001cfea:	push   rdi
   14001cfeb:	sub    rsp,0x30
   14001cfef:	xor    edi,edi
   14001cff1:	lea    ecx,[rdi+0x1]
   14001cff4:	call   0x14000fc2c
   14001cff9:	nop
   14001cffa:	lea    ebx,[rdi+0x3]
   14001cffd:	mov    DWORD PTR [rsp+0x20],ebx
   14001d001:	cmp    ebx,DWORD PTR [rip+0x21f99]        # 0x14003efa0
   14001d007:	jge    0x14001d06c
   14001d009:	movsxd rsi,ebx
   14001d00c:	mov    rax,QWORD PTR [rip+0x21f85]        # 0x14003ef98
   14001d013:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001d017:	test   rcx,rcx
   14001d01a:	je     0x14001d068
   14001d01c:	test   BYTE PTR [rcx+0x18],0x83
   14001d020:	je     0x14001d032
   14001d022:	call   0x1400240e4
   14001d027:	cmp    eax,0xffffffff
   14001d02a:	je     0x14001d032
   14001d02c:	inc    edi
   14001d02e:	mov    DWORD PTR [rsp+0x24],edi
   14001d032:	cmp    ebx,0x14
   14001d035:	jl     0x14001d068
   14001d037:	mov    rax,QWORD PTR [rip+0x21f5a]        # 0x14003ef98
   14001d03e:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001d042:	add    rcx,0x30
   14001d046:	call   QWORD PTR [rip+0xf18c]        # 0x14002c1d8
   14001d04c:	mov    rcx,QWORD PTR [rip+0x21f45]        # 0x14003ef98
   14001d053:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14001d057:	call   0x140007dc0
   14001d05c:	mov    rax,QWORD PTR [rip+0x21f35]        # 0x14003ef98
   14001d063:	and    QWORD PTR [rax+rsi*8],0x0
   14001d068:	inc    ebx
   14001d06a:	jmp    0x14001cffd
   14001d06c:	mov    ecx,0x1
   14001d071:	call   0x14000fe48
   14001d076:	mov    eax,edi
   14001d078:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d07d:	mov    rsi,QWORD PTR [rsp+0x48]
   14001d082:	add    rsp,0x30
   14001d086:	pop    rdi
   14001d087:	ret    
   14001d088:	mov    QWORD PTR [rsp+0x8],rbx
   14001d08d:	mov    QWORD PTR [rsp+0x10],rsi
   14001d092:	mov    QWORD PTR [rsp+0x18],rdi
   14001d097:	push   r15
   14001d099:	sub    rsp,0x20
   14001d09d:	movsxd rax,ecx
   14001d0a0:	mov    rsi,rax
   14001d0a3:	sar    rsi,0x5
   14001d0a7:	lea    r15,[rip+0x20c62]        # 0x14003dd10
   14001d0ae:	and    eax,0x1f
   14001d0b1:	imul   rbx,rax,0x58
   14001d0b5:	mov    rdi,QWORD PTR [r15+rsi*8]
   14001d0b9:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14001d0be:	jne    0x14001d0f4
   14001d0c0:	mov    ecx,0xa
   14001d0c5:	call   0x14000fc2c
   14001d0ca:	nop
   14001d0cb:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14001d0d0:	jne    0x14001d0ea
   14001d0d2:	lea    rcx,[rbx+0x10]
   14001d0d6:	add    rcx,rdi
   14001d0d9:	xor    r8d,r8d
   14001d0dc:	mov    edx,0xfa0
   14001d0e1:	call   0x14000e7fc
   14001d0e6:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14001d0ea:	mov    ecx,0xa
   14001d0ef:	call   0x14000fe48
   14001d0f4:	mov    rcx,QWORD PTR [r15+rsi*8]
   14001d0f8:	add    rcx,0x10
   14001d0fc:	add    rcx,rbx
   14001d0ff:	call   QWORD PTR [rip+0xef93]        # 0x14002c098
   14001d105:	mov    eax,0x1
   14001d10a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d10f:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d114:	mov    rdi,QWORD PTR [rsp+0x40]
   14001d119:	add    rsp,0x20
   14001d11d:	pop    r15
   14001d11f:	ret    
   14001d120:	mov    rax,rsp
   14001d123:	mov    QWORD PTR [rax+0x8],rbx
   14001d127:	mov    QWORD PTR [rax+0x10],rsi
   14001d12b:	mov    QWORD PTR [rax+0x18],rdi
   14001d12f:	mov    QWORD PTR [rax+0x20],r12
   14001d133:	push   r13
   14001d135:	push   r14
   14001d137:	push   r15
   14001d139:	sub    rsp,0x30
   14001d13d:	or     r13,0xffffffffffffffff
   14001d141:	mov    esi,r13d
   14001d144:	xor    r12d,r12d
   14001d147:	lea    ebx,[r13+0xc]
   14001d14b:	mov    ecx,ebx
   14001d14d:	call   0x14000fd24
   14001d152:	test   eax,eax
   14001d154:	jne    0x14001d15e
   14001d156:	mov    eax,r13d
   14001d159:	jmp    0x14001d2f9
   14001d15e:	mov    ecx,ebx
   14001d160:	call   0x14000fc2c
   14001d165:	nop
   14001d166:	mov    edi,r12d
   14001d169:	mov    DWORD PTR [rsp+0x24],r12d
   14001d16e:	lea    r14,[rip+0x20b9b]        # 0x14003dd10
   14001d175:	cmp    edi,0x40
   14001d178:	jge    0x14001d2ed
   14001d17e:	movsxd r15,edi
   14001d181:	mov    rbx,QWORD PTR [r14+r15*8]
   14001d185:	test   rbx,rbx
   14001d188:	je     0x14001d26c
   14001d18e:	mov    QWORD PTR [rsp+0x28],rbx
   14001d193:	mov    rax,QWORD PTR [r14+r15*8]
   14001d197:	add    rax,0xb00
   14001d19d:	cmp    rbx,rax
   14001d1a0:	jae    0x14001d258
   14001d1a6:	test   BYTE PTR [rbx+0x8],0x1
   14001d1aa:	jne    0x14001d248
   14001d1b0:	cmp    DWORD PTR [rbx+0xc],r12d
   14001d1b4:	jne    0x14001d1e5
   14001d1b6:	mov    ecx,0xa
   14001d1bb:	call   0x14000fc2c
   14001d1c0:	nop
   14001d1c1:	cmp    DWORD PTR [rbx+0xc],r12d
   14001d1c5:	jne    0x14001d1db
   14001d1c7:	lea    rcx,[rbx+0x10]
   14001d1cb:	xor    r8d,r8d
   14001d1ce:	mov    edx,0xfa0
   14001d1d3:	call   0x14000e7fc
   14001d1d8:	inc    DWORD PTR [rbx+0xc]
   14001d1db:	mov    ecx,0xa
   14001d1e0:	call   0x14000fe48
   14001d1e5:	test   r12d,r12d
   14001d1e8:	jne    0x14001d248
   14001d1ea:	lea    rcx,[rbx+0x10]
   14001d1ee:	call   QWORD PTR [rip+0xeea4]        # 0x14002c098
   14001d1f4:	test   BYTE PTR [rbx+0x8],0x1
   14001d1f8:	je     0x14001d206
   14001d1fa:	lea    rcx,[rbx+0x10]
   14001d1fe:	call   QWORD PTR [rip+0xee8c]        # 0x14002c090
   14001d204:	jmp    0x14001d248
   14001d206:	lea    r14,[rip+0x20b03]        # 0x14003dd10
   14001d20d:	test   r12d,r12d
   14001d210:	jne    0x14001d248
   14001d212:	mov    BYTE PTR [rbx+0x8],0x1
   14001d216:	mov    QWORD PTR [rbx],r13
   14001d219:	sub    rbx,QWORD PTR [r14+r15*8]
   14001d21d:	movabs rax,0x2e8ba2e8ba2e8ba3
   14001d227:	imul   rbx
   14001d22a:	mov    rsi,rdx
   14001d22d:	sar    rsi,0x4
   14001d231:	mov    rax,rsi
   14001d234:	shr    rax,0x3f
   14001d238:	add    rsi,rax
   14001d23b:	mov    eax,edi
   14001d23d:	shl    eax,0x5
   14001d240:	add    esi,eax
   14001d242:	mov    DWORD PTR [rsp+0x20],esi
   14001d246:	jmp    0x14001d258
   14001d248:	add    rbx,0x58
   14001d24c:	lea    r14,[rip+0x20abd]        # 0x14003dd10
   14001d253:	jmp    0x14001d18e
   14001d258:	cmp    esi,r13d
   14001d25b:	jne    0x14001d2ed
   14001d261:	inc    edi
   14001d263:	mov    DWORD PTR [rsp+0x24],edi
   14001d267:	jmp    0x14001d175
   14001d26c:	mov    edx,0x58
   14001d271:	lea    ecx,[rdx-0x38]
   14001d274:	call   0x140008604
   14001d279:	mov    QWORD PTR [rsp+0x28],rax
   14001d27e:	test   rax,rax
   14001d281:	je     0x14001d2ed
   14001d283:	movsxd rdx,edi
   14001d286:	mov    QWORD PTR [r14+rdx*8],rax
   14001d28a:	add    DWORD PTR [rip+0x22e57],0x20        # 0x1400400e8
   14001d291:	mov    rcx,QWORD PTR [r14+rdx*8]
   14001d295:	add    rcx,0xb00
   14001d29c:	cmp    rax,rcx
   14001d29f:	jae    0x14001d2b9
   14001d2a1:	mov    WORD PTR [rax+0x8],0xa00
   14001d2a7:	mov    QWORD PTR [rax],r13
   14001d2aa:	mov    DWORD PTR [rax+0xc],r12d
   14001d2ae:	add    rax,0x58
   14001d2b2:	mov    QWORD PTR [rsp+0x28],rax
   14001d2b7:	jmp    0x14001d291
   14001d2b9:	shl    edi,0x5
   14001d2bc:	mov    DWORD PTR [rsp+0x20],edi
   14001d2c0:	movsxd rcx,edi
   14001d2c3:	mov    rax,rcx
   14001d2c6:	sar    rax,0x5
   14001d2ca:	and    ecx,0x1f
   14001d2cd:	imul   rcx,rcx,0x58
   14001d2d1:	mov    rax,QWORD PTR [r14+rax*8]
   14001d2d5:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   14001d2da:	mov    ecx,edi
   14001d2dc:	call   0x14001d088
   14001d2e1:	test   eax,eax
   14001d2e3:	cmove  edi,r13d
   14001d2e7:	mov    esi,edi
   14001d2e9:	mov    DWORD PTR [rsp+0x20],edi
   14001d2ed:	mov    ecx,0xb
   14001d2f2:	call   0x14000fe48
   14001d2f7:	mov    eax,esi
   14001d2f9:	mov    rbx,QWORD PTR [rsp+0x50]
   14001d2fe:	mov    rsi,QWORD PTR [rsp+0x58]
   14001d303:	mov    rdi,QWORD PTR [rsp+0x60]
   14001d308:	mov    r12,QWORD PTR [rsp+0x68]
   14001d30d:	add    rsp,0x30
   14001d311:	pop    r15
   14001d313:	pop    r14
   14001d315:	pop    r13
   14001d317:	ret    
   14001d318:	mov    QWORD PTR [rsp+0x8],rbx
   14001d31d:	mov    QWORD PTR [rsp+0x10],rdi
   14001d322:	push   r14
   14001d324:	sub    rsp,0x20
   14001d328:	test   ecx,ecx
   14001d32a:	js     0x14001d39b
   14001d32c:	cmp    ecx,DWORD PTR [rip+0x22db6]        # 0x1400400e8
   14001d332:	jae    0x14001d39b
   14001d334:	movsxd rax,ecx
   14001d337:	lea    r14,[rip+0x209d2]        # 0x14003dd10
   14001d33e:	mov    rdi,rax
   14001d341:	and    eax,0x1f
   14001d344:	sar    rdi,0x5
   14001d348:	imul   rbx,rax,0x58
   14001d34c:	mov    rax,QWORD PTR [r14+rdi*8]
   14001d350:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14001d355:	je     0x14001d39b
   14001d357:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14001d35c:	je     0x14001d39b
   14001d35e:	cmp    DWORD PTR [rip+0x20cbb],0x1        # 0x14003e020
   14001d365:	jne    0x14001d38e
   14001d367:	test   ecx,ecx
   14001d369:	je     0x14001d381
   14001d36b:	dec    ecx
   14001d36d:	je     0x14001d37a
   14001d36f:	dec    ecx
   14001d371:	jne    0x14001d38e
   14001d373:	mov    ecx,0xfffffff4
   14001d378:	jmp    0x14001d386
   14001d37a:	mov    ecx,0xfffffff5
   14001d37f:	jmp    0x14001d386
   14001d381:	mov    ecx,0xfffffff6
   14001d386:	xor    edx,edx
   14001d388:	call   QWORD PTR [rip+0xec92]        # 0x14002c020
   14001d38e:	mov    rax,QWORD PTR [r14+rdi*8]
   14001d392:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14001d397:	xor    eax,eax
   14001d399:	jmp    0x14001d3b1
   14001d39b:	call   0x140009cb4
   14001d3a0:	mov    DWORD PTR [rax],0x9
   14001d3a6:	call   0x140009c44
   14001d3ab:	and    DWORD PTR [rax],0x0
   14001d3ae:	or     eax,0xffffffff
   14001d3b1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d3b6:	mov    rdi,QWORD PTR [rsp+0x38]
   14001d3bb:	add    rsp,0x20
   14001d3bf:	pop    r14
   14001d3c1:	ret    
   14001d3c2:	int3   
   14001d3c3:	int3   
   14001d3c4:	sub    rsp,0x28
   14001d3c8:	cmp    ecx,0xfffffffe
   14001d3cb:	jne    0x14001d3e2
   14001d3cd:	call   0x140009c44
   14001d3d2:	and    DWORD PTR [rax],0x0
   14001d3d5:	call   0x140009cb4
   14001d3da:	mov    DWORD PTR [rax],0x9
   14001d3e0:	jmp    0x14001d42f
   14001d3e2:	test   ecx,ecx
   14001d3e4:	js     0x14001d417
   14001d3e6:	cmp    ecx,DWORD PTR [rip+0x22cfc]        # 0x1400400e8
   14001d3ec:	jae    0x14001d417
   14001d3ee:	movsxd rcx,ecx
   14001d3f1:	lea    r8,[rip+0x20918]        # 0x14003dd10
   14001d3f8:	mov    rax,rcx
   14001d3fb:	and    ecx,0x1f
   14001d3fe:	sar    rax,0x5
   14001d402:	imul   rdx,rcx,0x58
   14001d406:	mov    rax,QWORD PTR [r8+rax*8]
   14001d40a:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14001d40f:	je     0x14001d417
   14001d411:	mov    rax,QWORD PTR [rax+rdx*1]
   14001d415:	jmp    0x14001d433
   14001d417:	call   0x140009c44
   14001d41c:	and    DWORD PTR [rax],0x0
   14001d41f:	call   0x140009cb4
   14001d424:	mov    DWORD PTR [rax],0x9
   14001d42a:	call   0x140008d58
   14001d42f:	or     rax,0xffffffffffffffff
   14001d433:	add    rsp,0x28
   14001d437:	ret    
   14001d438:	mov    rax,rsp
   14001d43b:	mov    QWORD PTR [rax+0x8],rbx
   14001d43f:	mov    QWORD PTR [rax+0x18],rsi
   14001d443:	mov    QWORD PTR [rax+0x20],rdi
   14001d447:	push   r14
   14001d449:	sub    rsp,0x30
   14001d44d:	mov    rsi,rcx
   14001d450:	xor    r14d,r14d
   14001d453:	mov    DWORD PTR [rax-0x18],r14d
   14001d457:	test   dl,0x8
   14001d45a:	movzx  ebx,r14b
   14001d45e:	lea    eax,[r14+0x20]
   14001d462:	cmovne ebx,eax
   14001d465:	bt     edx,0xe
   14001d469:	jae    0x14001d46e
   14001d46b:	or     bl,0x80
   14001d46e:	test   dl,dl
   14001d470:	jns    0x14001d475
   14001d472:	or     bl,0x10
   14001d475:	call   QWORD PTR [rip+0xed55]        # 0x14002c1d0
   14001d47b:	test   eax,eax
   14001d47d:	jne    0x14001d494
   14001d47f:	call   QWORD PTR [rip+0xeccb]        # 0x14002c150
   14001d485:	mov    ecx,eax
   14001d487:	call   0x140009c64
   14001d48c:	or     eax,0xffffffff
   14001d48f:	jmp    0x14001d51c
   14001d494:	cmp    eax,0x2
   14001d497:	jne    0x14001d49e
   14001d499:	or     bl,0x40
   14001d49c:	jmp    0x14001d4a6
   14001d49e:	cmp    eax,0x3
   14001d4a1:	jne    0x14001d4a6
   14001d4a3:	or     bl,0x8
   14001d4a6:	call   0x14001d120
   14001d4ab:	movsxd rdi,eax
   14001d4ae:	mov    DWORD PTR [rsp+0x48],edi
   14001d4b2:	cmp    edi,0xffffffff
   14001d4b5:	jne    0x14001d4cc
   14001d4b7:	call   0x140009cb4
   14001d4bc:	mov    DWORD PTR [rax],0x18
   14001d4c2:	call   0x140009c44
   14001d4c7:	mov    DWORD PTR [rax],r14d
   14001d4ca:	jmp    0x14001d48c
   14001d4cc:	mov    rdx,rsi
   14001d4cf:	mov    ecx,edi
   14001d4d1:	call   0x14001d534
   14001d4d6:	or     bl,0x1
   14001d4d9:	mov    rax,rdi
   14001d4dc:	mov    rdx,rdi
   14001d4df:	sar    rdx,0x5
   14001d4e3:	lea    r8,[rip+0x20826]        # 0x14003dd10
   14001d4ea:	and    eax,0x1f
   14001d4ed:	imul   rcx,rax,0x58
   14001d4f1:	mov    rax,QWORD PTR [r8+rdx*8]
   14001d4f5:	mov    BYTE PTR [rcx+rax*1+0x8],bl
   14001d4f9:	mov    rax,QWORD PTR [r8+rdx*8]
   14001d4fd:	and    BYTE PTR [rcx+rax*1+0x38],0x80
   14001d502:	mov    rax,QWORD PTR [r8+rdx*8]
   14001d506:	and    BYTE PTR [rcx+rax*1+0x38],0x7f
   14001d50b:	mov    DWORD PTR [rsp+0x20],0x1
   14001d513:	mov    ecx,edi
   14001d515:	call   0x14001d5e4
   14001d51a:	mov    eax,edi
   14001d51c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d521:	mov    rsi,QWORD PTR [rsp+0x50]
   14001d526:	mov    rdi,QWORD PTR [rsp+0x58]
   14001d52b:	add    rsp,0x30
   14001d52f:	pop    r14
   14001d531:	ret    
   14001d532:	int3   
   14001d533:	int3   
   14001d534:	mov    QWORD PTR [rsp+0x8],rbx
   14001d539:	mov    QWORD PTR [rsp+0x10],rsi
   14001d53e:	mov    QWORD PTR [rsp+0x18],rdi
   14001d543:	push   r14
   14001d545:	sub    rsp,0x20
   14001d549:	mov    rbx,rdx
   14001d54c:	test   ecx,ecx
   14001d54e:	js     0x14001d5b5
   14001d550:	cmp    ecx,DWORD PTR [rip+0x22b92]        # 0x1400400e8
   14001d556:	jae    0x14001d5b5
   14001d558:	movsxd rax,ecx
   14001d55b:	lea    r14,[rip+0x207ae]        # 0x14003dd10
   14001d562:	mov    rdi,rax
   14001d565:	and    eax,0x1f
   14001d568:	sar    rdi,0x5
   14001d56c:	imul   rsi,rax,0x58
   14001d570:	mov    rax,QWORD PTR [r14+rdi*8]
   14001d574:	cmp    QWORD PTR [rsi+rax*1],0xffffffffffffffff
   14001d579:	jne    0x14001d5b5
   14001d57b:	cmp    DWORD PTR [rip+0x20a9e],0x1        # 0x14003e020
   14001d582:	jne    0x14001d5a9
   14001d584:	test   ecx,ecx
   14001d586:	je     0x14001d59e
   14001d588:	dec    ecx
   14001d58a:	je     0x14001d597
   14001d58c:	dec    ecx
   14001d58e:	jne    0x14001d5a9
   14001d590:	mov    ecx,0xfffffff4
   14001d595:	jmp    0x14001d5a3
   14001d597:	mov    ecx,0xfffffff5
   14001d59c:	jmp    0x14001d5a3
   14001d59e:	mov    ecx,0xfffffff6
   14001d5a3:	call   QWORD PTR [rip+0xea77]        # 0x14002c020
   14001d5a9:	mov    rax,QWORD PTR [r14+rdi*8]
   14001d5ad:	mov    QWORD PTR [rsi+rax*1],rbx
   14001d5b1:	xor    eax,eax
   14001d5b3:	jmp    0x14001d5cb
   14001d5b5:	call   0x140009cb4
   14001d5ba:	mov    DWORD PTR [rax],0x9
   14001d5c0:	call   0x140009c44
   14001d5c5:	and    DWORD PTR [rax],0x0
   14001d5c8:	or     eax,0xffffffff
   14001d5cb:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d5d0:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d5d5:	mov    rdi,QWORD PTR [rsp+0x40]
   14001d5da:	add    rsp,0x20
   14001d5de:	pop    r14
   14001d5e0:	ret    
   14001d5e1:	int3   
   14001d5e2:	int3   
   14001d5e3:	int3   
   14001d5e4:	movsxd rdx,ecx
   14001d5e7:	lea    r8,[rip+0x20722]        # 0x14003dd10
   14001d5ee:	mov    rax,rdx
   14001d5f1:	and    edx,0x1f
   14001d5f4:	sar    rax,0x5
   14001d5f8:	imul   rcx,rdx,0x58
   14001d5fc:	mov    rax,QWORD PTR [r8+rax*8]
   14001d600:	add    rcx,0x10
   14001d604:	add    rcx,rax
   14001d607:	rex.W jmp QWORD PTR [rip+0xea82]        # 0x14002c090
   14001d60e:	int3   
   14001d60f:	int3   
   14001d610:	rex push rbx
   14001d612:	sub    rsp,0x20
   14001d616:	movzx  ebx,cx
   14001d619:	mov    ecx,0x3
   14001d61e:	call   0x14000fc2c
   14001d623:	nop
   14001d624:	movzx  ecx,bx
   14001d627:	call   0x14001d644
   14001d62c:	movzx  ebx,ax
   14001d62f:	mov    ecx,0x3
   14001d634:	call   0x14000fe48
   14001d639:	movzx  eax,bx
   14001d63c:	add    rsp,0x20
   14001d640:	pop    rbx
   14001d641:	ret    
   14001d642:	int3   
   14001d643:	int3   
   14001d644:	mov    WORD PTR [rsp+0x8],cx
   14001d649:	sub    rsp,0x38
   14001d64d:	mov    rcx,QWORD PTR [rip+0x1fed4]        # 0x14003d528
   14001d654:	cmp    rcx,0xfffffffffffffffe
   14001d658:	jne    0x14001d666
   14001d65a:	call   0x14002416c
   14001d65f:	mov    rcx,QWORD PTR [rip+0x1fec2]        # 0x14003d528
   14001d666:	cmp    rcx,0xffffffffffffffff
   14001d66a:	jne    0x14001d673
   14001d66c:	mov    eax,0xffff
   14001d671:	jmp    0x14001d698
   14001d673:	and    QWORD PTR [rsp+0x20],0x0
   14001d679:	lea    r9,[rsp+0x48]
   14001d67e:	lea    rdx,[rsp+0x40]
   14001d683:	mov    r8d,0x1
   14001d689:	call   QWORD PTR [rip+0xe989]        # 0x14002c018
   14001d68f:	test   eax,eax
   14001d691:	je     0x14001d66c
   14001d693:	movzx  eax,WORD PTR [rsp+0x40]
   14001d698:	add    rsp,0x38
   14001d69c:	ret    
   14001d69d:	int3   
   14001d69e:	int3   
   14001d69f:	int3   
   14001d6a0:	test   rcx,rcx
   14001d6a3:	je     0x14001d7a9
   14001d6a9:	push   rbx
   14001d6aa:	sub    rsp,0x20
   14001d6ae:	mov    rbx,rcx
   14001d6b1:	mov    rcx,QWORD PTR [rcx+0x18]
   14001d6b5:	cmp    rcx,QWORD PTR [rip+0x1fd6c]        # 0x14003d428
   14001d6bc:	je     0x14001d6c3
   14001d6be:	call   0x140007dc0
   14001d6c3:	mov    rcx,QWORD PTR [rbx+0x20]
   14001d6c7:	cmp    rcx,QWORD PTR [rip+0x1fd62]        # 0x14003d430
   14001d6ce:	je     0x14001d6d5
   14001d6d0:	call   0x140007dc0
   14001d6d5:	mov    rcx,QWORD PTR [rbx+0x28]
   14001d6d9:	cmp    rcx,QWORD PTR [rip+0x1fd58]        # 0x14003d438
   14001d6e0:	je     0x14001d6e7
   14001d6e2:	call   0x140007dc0
   14001d6e7:	mov    rcx,QWORD PTR [rbx+0x30]
   14001d6eb:	cmp    rcx,QWORD PTR [rip+0x1fd4e]        # 0x14003d440
   14001d6f2:	je     0x14001d6f9
   14001d6f4:	call   0x140007dc0
   14001d6f9:	mov    rcx,QWORD PTR [rbx+0x38]
   14001d6fd:	cmp    rcx,QWORD PTR [rip+0x1fd44]        # 0x14003d448
   14001d704:	je     0x14001d70b
   14001d706:	call   0x140007dc0
   14001d70b:	mov    rcx,QWORD PTR [rbx+0x40]
   14001d70f:	cmp    rcx,QWORD PTR [rip+0x1fd3a]        # 0x14003d450
   14001d716:	je     0x14001d71d
   14001d718:	call   0x140007dc0
   14001d71d:	mov    rcx,QWORD PTR [rbx+0x48]
   14001d721:	cmp    rcx,QWORD PTR [rip+0x1fd30]        # 0x14003d458
   14001d728:	je     0x14001d72f
   14001d72a:	call   0x140007dc0
   14001d72f:	mov    rcx,QWORD PTR [rbx+0x68]
   14001d733:	cmp    rcx,QWORD PTR [rip+0x1fd3e]        # 0x14003d478
   14001d73a:	je     0x14001d741
   14001d73c:	call   0x140007dc0
   14001d741:	mov    rcx,QWORD PTR [rbx+0x70]
   14001d745:	cmp    rcx,QWORD PTR [rip+0x1fd34]        # 0x14003d480
   14001d74c:	je     0x14001d753
   14001d74e:	call   0x140007dc0
   14001d753:	mov    rcx,QWORD PTR [rbx+0x78]
   14001d757:	cmp    rcx,QWORD PTR [rip+0x1fd2a]        # 0x14003d488
   14001d75e:	je     0x14001d765
   14001d760:	call   0x140007dc0
   14001d765:	mov    rcx,QWORD PTR [rbx+0x80]
   14001d76c:	cmp    rcx,QWORD PTR [rip+0x1fd1d]        # 0x14003d490
   14001d773:	je     0x14001d77a
   14001d775:	call   0x140007dc0
   14001d77a:	mov    rcx,QWORD PTR [rbx+0x88]
   14001d781:	cmp    rcx,QWORD PTR [rip+0x1fd10]        # 0x14003d498
   14001d788:	je     0x14001d78f
   14001d78a:	call   0x140007dc0
   14001d78f:	mov    rcx,QWORD PTR [rbx+0x90]
   14001d796:	cmp    rcx,QWORD PTR [rip+0x1fd03]        # 0x14003d4a0
   14001d79d:	je     0x14001d7a4
   14001d79f:	call   0x140007dc0
   14001d7a4:	add    rsp,0x20
   14001d7a8:	pop    rbx
   14001d7a9:	ret    
   14001d7aa:	int3   
   14001d7ab:	int3   
   14001d7ac:	mov    QWORD PTR [rsp+0x8],rbx
   14001d7b1:	mov    QWORD PTR [rsp+0x10],rsi
   14001d7b6:	mov    QWORD PTR [rsp+0x18],rdi
   14001d7bb:	push   rbp
   14001d7bc:	push   r12
   14001d7be:	push   r13
   14001d7c0:	push   r14
   14001d7c2:	push   r15
   14001d7c4:	mov    rbp,rsp
   14001d7c7:	sub    rsp,0x40
   14001d7cb:	xor    ebx,ebx
   14001d7cd:	mov    rsi,rcx
   14001d7d0:	mov    QWORD PTR [rbp-0x10],rcx
   14001d7d4:	mov    r15d,ebx
   14001d7d7:	mov    QWORD PTR [rbp-0x8],rbx
   14001d7db:	cmp    QWORD PTR [rcx+0x140],rbx
   14001d7e2:	jne    0x14001d7fc
   14001d7e4:	cmp    QWORD PTR [rcx+0x148],rbx
   14001d7eb:	jne    0x14001d7fc
   14001d7ed:	mov    r12d,ebx
   14001d7f0:	lea    r14,[rip+0x1fc19]        # 0x14003d410
   14001d7f7:	jmp    0x14001dc3f
   14001d7fc:	mov    edx,0x98
   14001d801:	mov    ecx,0x1
   14001d806:	call   0x140008604
   14001d80b:	mov    r14,rax
   14001d80e:	test   rax,rax
   14001d811:	jne    0x14001d81d
   14001d813:	mov    eax,0x1
   14001d818:	jmp    0x14001dc8e
   14001d81d:	mov    edi,0x4
   14001d822:	mov    ecx,edi
   14001d824:	call   0x140008684
   14001d829:	mov    r12,rax
   14001d82c:	test   rax,rax
   14001d82f:	jne    0x14001d83b
   14001d831:	mov    rcx,r14
   14001d834:	call   0x140007dc0
   14001d839:	jmp    0x14001d813
   14001d83b:	mov    DWORD PTR [rax],ebx
   14001d83d:	cmp    QWORD PTR [rsi+0x140],rbx
   14001d844:	je     0x14001db7c
   14001d84a:	mov    rcx,rdi
   14001d84d:	call   0x140008684
   14001d852:	mov    r15,rax
   14001d855:	test   rax,rax
   14001d858:	jne    0x14001d867
   14001d85a:	mov    rcx,r14
   14001d85d:	call   0x140007dc0
   14001d862:	mov    rcx,r12
   14001d865:	jmp    0x14001d834
   14001d867:	mov    DWORD PTR [rax],ebx
   14001d869:	mov    rdi,QWORD PTR [rsi+0x140]
   14001d870:	mov    r9d,0x15
   14001d876:	lea    rax,[r14+0x18]
   14001d87a:	lea    rcx,[rbp-0x10]
   14001d87e:	lea    edx,[r9-0x14]
   14001d882:	mov    r8,rdi
   14001d885:	mov    QWORD PTR [rsp+0x20],rax
   14001d88a:	call   0x1400079f0
   14001d88f:	lea    rcx,[r14+0x20]
   14001d893:	mov    r9d,0x14
   14001d899:	mov    QWORD PTR [rsp+0x20],rcx
   14001d89e:	lea    edx,[r9-0x13]
   14001d8a2:	lea    rcx,[rbp-0x10]
   14001d8a6:	mov    r8,rdi
   14001d8a9:	mov    ebx,eax
   14001d8ab:	call   0x1400079f0
   14001d8b0:	lea    rcx,[r14+0x28]
   14001d8b4:	mov    r9d,0x16
   14001d8ba:	mov    QWORD PTR [rsp+0x20],rcx
   14001d8bf:	lea    edx,[r9-0x15]
   14001d8c3:	lea    rcx,[rbp-0x10]
   14001d8c7:	mov    r8,rdi
   14001d8ca:	or     ebx,eax
   14001d8cc:	call   0x1400079f0
   14001d8d1:	mov    r9d,0x17
   14001d8d7:	lea    rcx,[rbp-0x10]
   14001d8db:	or     ebx,eax
   14001d8dd:	lea    rax,[r14+0x30]
   14001d8e1:	lea    edx,[r9-0x16]
   14001d8e5:	mov    r8,rdi
   14001d8e8:	mov    QWORD PTR [rsp+0x20],rax
   14001d8ed:	call   0x1400079f0
   14001d8f2:	mov    r9d,0x18
   14001d8f8:	lea    r13,[r14+0x38]
   14001d8fc:	lea    rcx,[rbp-0x10]
   14001d900:	lea    edx,[r9-0x17]
   14001d904:	mov    r8,rdi
   14001d907:	or     ebx,eax
   14001d909:	mov    QWORD PTR [rsp+0x20],r13
   14001d90e:	call   0x1400079f0
   14001d913:	mov    r9d,0x50
   14001d919:	or     ebx,eax
   14001d91b:	lea    rax,[r14+0x40]
   14001d91f:	lea    rcx,[rbp-0x10]
   14001d923:	lea    edx,[r9-0x4f]
   14001d927:	mov    r8,rdi
   14001d92a:	mov    QWORD PTR [rsp+0x20],rax
   14001d92f:	call   0x1400079f0
   14001d934:	mov    r9d,0x51
   14001d93a:	or     ebx,eax
   14001d93c:	lea    rax,[r14+0x48]
   14001d940:	lea    rcx,[rbp-0x10]
   14001d944:	lea    edx,[r9-0x50]
   14001d948:	mov    r8,rdi
   14001d94b:	mov    QWORD PTR [rsp+0x20],rax
   14001d950:	call   0x1400079f0
   14001d955:	lea    rcx,[rbp-0x10]
   14001d959:	mov    r9d,0x1a
   14001d95f:	or     ebx,eax
   14001d961:	lea    rax,[r14+0x50]
   14001d965:	mov    r8,rdi
   14001d968:	xor    edx,edx
   14001d96a:	mov    QWORD PTR [rsp+0x20],rax
   14001d96f:	call   0x1400079f0
   14001d974:	lea    rcx,[rbp-0x10]
   14001d978:	mov    r9d,0x19
   14001d97e:	or     ebx,eax
   14001d980:	lea    rax,[r14+0x51]
   14001d984:	mov    r8,rdi
   14001d987:	xor    edx,edx
   14001d989:	mov    QWORD PTR [rsp+0x20],rax
   14001d98e:	call   0x1400079f0
   14001d993:	lea    rcx,[rbp-0x10]
   14001d997:	mov    r9d,0x54
   14001d99d:	or     ebx,eax
   14001d99f:	lea    rax,[r14+0x52]
   14001d9a3:	mov    r8,rdi
   14001d9a6:	xor    edx,edx
   14001d9a8:	mov    QWORD PTR [rsp+0x20],rax
   14001d9ad:	call   0x1400079f0
   14001d9b2:	or     ebx,eax
   14001d9b4:	lea    rax,[r14+0x53]
   14001d9b8:	lea    rcx,[rbp-0x10]
   14001d9bc:	mov    r9d,0x55
   14001d9c2:	mov    r8,rdi
   14001d9c5:	xor    edx,edx
   14001d9c7:	mov    QWORD PTR [rsp+0x20],rax
   14001d9cc:	call   0x1400079f0
   14001d9d1:	lea    rcx,[rbp-0x10]
   14001d9d5:	or     ebx,eax
   14001d9d7:	lea    rax,[r14+0x54]
   14001d9db:	mov    r9d,0x56
   14001d9e1:	mov    r8,rdi
   14001d9e4:	xor    edx,edx
   14001d9e6:	mov    QWORD PTR [rsp+0x20],rax
   14001d9eb:	call   0x1400079f0
   14001d9f0:	lea    rcx,[rbp-0x10]
   14001d9f4:	mov    r9d,0x57
   14001d9fa:	or     ebx,eax
   14001d9fc:	lea    rax,[r14+0x55]
   14001da00:	mov    r8,rdi
   14001da03:	xor    edx,edx
   14001da05:	mov    QWORD PTR [rsp+0x20],rax
   14001da0a:	call   0x1400079f0
   14001da0f:	lea    rcx,[rbp-0x10]
   14001da13:	mov    r9d,0x52
   14001da19:	or     ebx,eax
   14001da1b:	lea    rax,[r14+0x56]
   14001da1f:	mov    r8,rdi
   14001da22:	xor    edx,edx
   14001da24:	mov    QWORD PTR [rsp+0x20],rax
   14001da29:	call   0x1400079f0
   14001da2e:	lea    rcx,[rbp-0x10]
   14001da32:	mov    r9d,0x53
   14001da38:	or     ebx,eax
   14001da3a:	lea    rax,[r14+0x57]
   14001da3e:	mov    r8,rdi
   14001da41:	xor    edx,edx
   14001da43:	mov    QWORD PTR [rsp+0x20],rax
   14001da48:	call   0x1400079f0
   14001da4d:	mov    r9d,0x15
   14001da53:	lea    rcx,[rbp-0x10]
   14001da57:	or     ebx,eax
   14001da59:	lea    rax,[r14+0x68]
   14001da5d:	lea    edx,[r9-0x13]
   14001da61:	mov    r8,rdi
   14001da64:	mov    QWORD PTR [rsp+0x20],rax
   14001da69:	call   0x1400079f0
   14001da6e:	mov    r9d,0x14
   14001da74:	lea    rcx,[rbp-0x10]
   14001da78:	or     ebx,eax
   14001da7a:	lea    rax,[r14+0x70]
   14001da7e:	lea    edx,[r9-0x12]
   14001da82:	mov    r8,rdi
   14001da85:	mov    QWORD PTR [rsp+0x20],rax
   14001da8a:	call   0x1400079f0
   14001da8f:	mov    r9d,0x16
   14001da95:	lea    rcx,[rbp-0x10]
   14001da99:	or     ebx,eax
   14001da9b:	lea    rax,[r14+0x78]
   14001da9f:	lea    edx,[r9-0x14]
   14001daa3:	mov    r8,rdi
   14001daa6:	mov    QWORD PTR [rsp+0x20],rax
   14001daab:	call   0x1400079f0
   14001dab0:	mov    r9d,0x17
   14001dab6:	lea    rcx,[rbp-0x10]
   14001daba:	or     ebx,eax
   14001dabc:	lea    rax,[r14+0x80]
   14001dac3:	lea    edx,[r9-0x15]
   14001dac7:	mov    r8,rdi
   14001daca:	mov    QWORD PTR [rsp+0x20],rax
   14001dacf:	call   0x1400079f0
   14001dad4:	mov    r9d,0x50
   14001dada:	lea    rcx,[rbp-0x10]
   14001dade:	or     ebx,eax
   14001dae0:	lea    rax,[r14+0x88]
   14001dae7:	lea    edx,[r9-0x4e]
   14001daeb:	mov    r8,rdi
   14001daee:	mov    QWORD PTR [rsp+0x20],rax
   14001daf3:	call   0x1400079f0
   14001daf8:	or     ebx,eax
   14001dafa:	mov    r9d,0x51
   14001db00:	lea    rax,[r14+0x90]
   14001db07:	lea    rcx,[rbp-0x10]
   14001db0b:	lea    edx,[r9-0x4f]
   14001db0f:	mov    r8,rdi
   14001db12:	mov    QWORD PTR [rsp+0x20],rax
   14001db17:	call   0x1400079f0
   14001db1c:	or     eax,ebx
   14001db1e:	je     0x14001db40
   14001db20:	mov    rcx,r14
   14001db23:	call   0x14001d6a0
   14001db28:	mov    rcx,r14
   14001db2b:	call   0x140007dc0
   14001db30:	mov    rcx,r12
   14001db33:	call   0x140007dc0
   14001db38:	mov    rcx,r15
   14001db3b:	jmp    0x14001d834
   14001db40:	mov    rdx,QWORD PTR [r13+0x0]
   14001db44:	xor    ebx,ebx
   14001db46:	jmp    0x14001db59
   14001db48:	mov    cl,BYTE PTR [rdx]
   14001db4a:	lea    eax,[rcx-0x30]
   14001db4d:	cmp    al,0x9
   14001db4f:	ja     0x14001db62
   14001db51:	sub    cl,0x30
   14001db54:	mov    BYTE PTR [rdx],cl
   14001db56:	inc    rdx
   14001db59:	cmp    BYTE PTR [rdx],bl
   14001db5b:	jne    0x14001db48
   14001db5d:	jmp    0x14001dbe2
   14001db62:	cmp    cl,0x3b
   14001db65:	jne    0x14001db56
   14001db67:	mov    r8,rdx
   14001db6a:	lea    rcx,[r8+0x1]
   14001db6e:	mov    al,BYTE PTR [rcx]
   14001db70:	mov    BYTE PTR [r8],al
   14001db73:	mov    r8,rcx
   14001db76:	test   al,al
   14001db78:	jne    0x14001db6a
   14001db7a:	jmp    0x14001db59
   14001db7c:	lea    rax,[rip+0x1f88d]        # 0x14003d410
   14001db83:	mov    edx,0x80
   14001db88:	movups xmm0,XMMWORD PTR [rax]
   14001db8b:	movups XMMWORD PTR [r14],xmm0
   14001db8f:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001db93:	movups XMMWORD PTR [r14+0x10],xmm1
   14001db98:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001db9c:	movups XMMWORD PTR [r14+0x20],xmm0
   14001dba1:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001dba5:	movups XMMWORD PTR [r14+0x30],xmm1
   14001dbaa:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001dbae:	movups XMMWORD PTR [r14+0x40],xmm0
   14001dbb3:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001dbb7:	movups XMMWORD PTR [r14+0x50],xmm1
   14001dbbc:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001dbc0:	movups XMMWORD PTR [r14+0x60],xmm0
   14001dbc5:	movups xmm0,XMMWORD PTR [rax+0x70]
   14001dbc9:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   14001dbcf:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   14001dbd3:	movups XMMWORD PTR [r14+rdx*1],xmm1
   14001dbd8:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   14001dbdd:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14001dbe2:	mov    rax,QWORD PTR [rsi+0xf0]
   14001dbe9:	mov    rcx,QWORD PTR [rax]
   14001dbec:	mov    QWORD PTR [r14],rcx
   14001dbef:	mov    rax,QWORD PTR [rsi+0xf0]
   14001dbf6:	mov    rcx,QWORD PTR [rax+0x8]
   14001dbfa:	mov    QWORD PTR [r14+0x8],rcx
   14001dbfe:	mov    rax,QWORD PTR [rsi+0xf0]
   14001dc05:	mov    rcx,QWORD PTR [rax+0x10]
   14001dc09:	mov    QWORD PTR [r14+0x10],rcx
   14001dc0d:	mov    rax,QWORD PTR [rsi+0xf0]
   14001dc14:	mov    rcx,QWORD PTR [rax+0x58]
   14001dc18:	mov    QWORD PTR [r14+0x58],rcx
   14001dc1c:	mov    rax,QWORD PTR [rsi+0xf0]
   14001dc23:	mov    rcx,QWORD PTR [rax+0x60]
   14001dc27:	mov    QWORD PTR [r14+0x60],rcx
   14001dc2b:	mov    DWORD PTR [r12],0x1
   14001dc33:	test   r15,r15
   14001dc36:	je     0x14001dc3f
   14001dc38:	mov    DWORD PTR [r15],0x1
   14001dc3f:	mov    rax,QWORD PTR [rsi+0xe8]
   14001dc46:	test   rax,rax
   14001dc49:	je     0x14001dc4e
   14001dc4b:	lock dec DWORD PTR [rax]
   14001dc4e:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001dc55:	test   rcx,rcx
   14001dc58:	je     0x14001dc77
   14001dc5a:	lock dec DWORD PTR [rcx]
   14001dc5d:	jne    0x14001dc77
   14001dc5f:	mov    rcx,QWORD PTR [rsi+0xf0]
   14001dc66:	call   0x140007dc0
   14001dc6b:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001dc72:	call   0x140007dc0
   14001dc77:	mov    QWORD PTR [rsi+0xe8],r15
   14001dc7e:	mov    QWORD PTR [rsi+0xd8],r12
   14001dc85:	mov    QWORD PTR [rsi+0xf0],r14
   14001dc8c:	xor    eax,eax
   14001dc8e:	lea    r11,[rsp+0x40]
   14001dc93:	mov    rbx,QWORD PTR [r11+0x30]
   14001dc97:	mov    rsi,QWORD PTR [r11+0x38]
   14001dc9b:	mov    rdi,QWORD PTR [r11+0x40]
   14001dc9f:	mov    rsp,r11
   14001dca2:	pop    r15
   14001dca4:	pop    r14
   14001dca6:	pop    r13
   14001dca8:	pop    r12
   14001dcaa:	pop    rbp
   14001dcab:	ret    
   14001dcac:	xor    r9d,r9d
   14001dcaf:	mov    rdx,rcx
   14001dcb2:	cmp    BYTE PTR [rcx],r9b
   14001dcb5:	je     0x14001dccd
   14001dcb7:	mov    cl,BYTE PTR [rdx]
   14001dcb9:	lea    eax,[rcx-0x30]
   14001dcbc:	cmp    al,0x9
   14001dcbe:	ja     0x14001dcce
   14001dcc0:	sub    cl,0x30
   14001dcc3:	mov    BYTE PTR [rdx],cl
   14001dcc5:	inc    rdx
   14001dcc8:	cmp    BYTE PTR [rdx],r9b
   14001dccb:	jne    0x14001dcb7
   14001dccd:	ret    
   14001dcce:	cmp    cl,0x3b
   14001dcd1:	jne    0x14001dcc5
   14001dcd3:	mov    r8,rdx
   14001dcd6:	lea    rcx,[r8+0x1]
   14001dcda:	mov    al,BYTE PTR [rcx]
   14001dcdc:	mov    BYTE PTR [r8],al
   14001dcdf:	mov    r8,rcx
   14001dce2:	test   al,al
   14001dce4:	jne    0x14001dcd6
   14001dce6:	jmp    0x14001dcc8
   14001dce8:	test   rcx,rcx
   14001dceb:	je     0x14001dd53
   14001dced:	push   rbx
   14001dcee:	sub    rsp,0x20
   14001dcf2:	mov    rbx,rcx
   14001dcf5:	mov    rcx,QWORD PTR [rcx]
   14001dcf8:	cmp    rcx,QWORD PTR [rip+0x1f711]        # 0x14003d410
   14001dcff:	je     0x14001dd06
   14001dd01:	call   0x140007dc0
   14001dd06:	mov    rcx,QWORD PTR [rbx+0x8]
   14001dd0a:	cmp    rcx,QWORD PTR [rip+0x1f707]        # 0x14003d418
   14001dd11:	je     0x14001dd18
   14001dd13:	call   0x140007dc0
   14001dd18:	mov    rcx,QWORD PTR [rbx+0x10]
   14001dd1c:	cmp    rcx,QWORD PTR [rip+0x1f6fd]        # 0x14003d420
   14001dd23:	je     0x14001dd2a
   14001dd25:	call   0x140007dc0
   14001dd2a:	mov    rcx,QWORD PTR [rbx+0x58]
   14001dd2e:	cmp    rcx,QWORD PTR [rip+0x1f733]        # 0x14003d468
   14001dd35:	je     0x14001dd3c
   14001dd37:	call   0x140007dc0
   14001dd3c:	mov    rcx,QWORD PTR [rbx+0x60]
   14001dd40:	cmp    rcx,QWORD PTR [rip+0x1f729]        # 0x14003d470
   14001dd47:	je     0x14001dd4e
   14001dd49:	call   0x140007dc0
   14001dd4e:	add    rsp,0x20
   14001dd52:	pop    rbx
   14001dd53:	ret    
   14001dd54:	mov    rax,rsp
   14001dd57:	mov    QWORD PTR [rax+0x8],rbx
   14001dd5b:	mov    QWORD PTR [rax+0x10],rbp
   14001dd5f:	mov    QWORD PTR [rax+0x18],rsi
   14001dd63:	push   rdi
   14001dd64:	push   r12
   14001dd66:	push   r13
   14001dd68:	push   r14
   14001dd6a:	push   r15
   14001dd6c:	sub    rsp,0x40
   14001dd70:	xor    ebx,ebx
   14001dd72:	mov    rsi,rcx
   14001dd75:	mov    QWORD PTR [rax-0x38],rcx
   14001dd79:	mov    QWORD PTR [rax-0x30],rbx
   14001dd7d:	cmp    QWORD PTR [rcx+0x148],rbx
   14001dd84:	jne    0x14001dda1
   14001dd86:	cmp    QWORD PTR [rcx+0x140],rbx
   14001dd8d:	jne    0x14001dda1
   14001dd8f:	mov    r15d,ebx
   14001dd92:	mov    r12d,ebx
   14001dd95:	lea    r14,[rip+0x1f674]        # 0x14003d410
   14001dd9c:	jmp    0x14001dfad
   14001dda1:	mov    ebp,0x1
   14001dda6:	mov    edx,0x98
   14001ddab:	mov    ecx,ebp
   14001ddad:	call   0x140008604
   14001ddb2:	mov    r14,rax
   14001ddb5:	test   rax,rax
   14001ddb8:	jne    0x14001ddc1
   14001ddba:	mov    eax,ebp
   14001ddbc:	jmp    0x14001dffc
   14001ddc1:	mov    rax,QWORD PTR [rsi+0xf0]
   14001ddc8:	mov    edx,0x80
   14001ddcd:	lea    edi,[rdx-0x7c]
   14001ddd0:	mov    ecx,edi
   14001ddd2:	movups xmm0,XMMWORD PTR [rax]
   14001ddd5:	movups XMMWORD PTR [r14],xmm0
   14001ddd9:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001dddd:	movups XMMWORD PTR [r14+0x10],xmm1
   14001dde2:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001dde6:	movups XMMWORD PTR [r14+0x20],xmm0
   14001ddeb:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001ddef:	movups XMMWORD PTR [r14+0x30],xmm1
   14001ddf4:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001ddf8:	movups XMMWORD PTR [r14+0x40],xmm0
   14001ddfd:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001de01:	movups XMMWORD PTR [r14+0x50],xmm1
   14001de06:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001de0a:	movups XMMWORD PTR [r14+0x60],xmm0
   14001de0f:	movups xmm0,XMMWORD PTR [rax+0x70]
   14001de13:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   14001de19:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   14001de1d:	movups XMMWORD PTR [r14+rdx*1],xmm1
   14001de22:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   14001de27:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14001de2c:	call   0x140008684
   14001de31:	mov    r12,rax
   14001de34:	test   rax,rax
   14001de37:	jne    0x14001de46
   14001de39:	mov    rcx,r14
   14001de3c:	call   0x140007dc0
   14001de41:	jmp    0x14001ddba
   14001de46:	mov    DWORD PTR [rax],ebx
   14001de48:	cmp    QWORD PTR [rsi+0x148],rbx
   14001de4f:	je     0x14001df68
   14001de55:	mov    rcx,rdi
   14001de58:	call   0x140008684
   14001de5d:	mov    r15,rax
   14001de60:	test   rax,rax
   14001de63:	je     0x14001df1f
   14001de69:	mov    DWORD PTR [rax],ebx
   14001de6b:	mov    rdi,QWORD PTR [rsi+0x148]
   14001de72:	lea    rcx,[rsp+0x30]
   14001de77:	mov    r9d,0xe
   14001de7d:	mov    edx,ebp
   14001de7f:	mov    r8,rdi
   14001de82:	mov    QWORD PTR [rsp+0x20],r14
   14001de87:	call   0x1400079f0
   14001de8c:	lea    rcx,[r14+0x8]
   14001de90:	mov    QWORD PTR [rsp+0x20],rcx
   14001de95:	lea    rcx,[rsp+0x30]
   14001de9a:	mov    r9d,0xf
   14001dea0:	mov    r8,rdi
   14001dea3:	mov    edx,ebp
   14001dea5:	mov    ebx,eax
   14001dea7:	call   0x1400079f0
   14001deac:	lea    r13,[r14+0x10]
   14001deb0:	lea    rcx,[rsp+0x30]
   14001deb5:	mov    r9d,0x10
   14001debb:	mov    r8,rdi
   14001debe:	mov    edx,ebp
   14001dec0:	or     ebx,eax
   14001dec2:	mov    QWORD PTR [rsp+0x20],r13
   14001dec7:	call   0x1400079f0
   14001decc:	mov    r9d,0xe
   14001ded2:	or     ebx,eax
   14001ded4:	lea    rax,[r14+0x58]
   14001ded8:	lea    rcx,[rsp+0x30]
   14001dedd:	lea    edx,[r9-0xc]
   14001dee1:	mov    r8,rdi
   14001dee4:	mov    QWORD PTR [rsp+0x20],rax
   14001dee9:	call   0x1400079f0
   14001deee:	mov    r9d,0xf
   14001def4:	or     ebx,eax
   14001def6:	lea    rax,[r14+0x60]
   14001defa:	lea    rcx,[rsp+0x30]
   14001deff:	lea    edx,[r9-0xd]
   14001df03:	mov    r8,rdi
   14001df06:	mov    QWORD PTR [rsp+0x20],rax
   14001df0b:	call   0x1400079f0
   14001df10:	or     eax,ebx
   14001df12:	je     0x14001df2f
   14001df14:	mov    rcx,r14
   14001df17:	call   0x14001dce8
   14001df1c:	or     ebp,0xffffffff
   14001df1f:	mov    rcx,r14
   14001df22:	call   0x140007dc0
   14001df27:	mov    rcx,r12
   14001df2a:	jmp    0x14001de3c
   14001df2f:	mov    rdx,QWORD PTR [r13+0x0]
   14001df33:	xor    ebx,ebx
   14001df35:	jmp    0x14001df48
   14001df37:	mov    cl,BYTE PTR [rdx]
   14001df39:	lea    eax,[rcx-0x30]
   14001df3c:	cmp    al,0x9
   14001df3e:	ja     0x14001df4e
   14001df40:	sub    cl,0x30
   14001df43:	mov    BYTE PTR [rdx],cl
   14001df45:	add    rdx,rbp
   14001df48:	cmp    BYTE PTR [rdx],bl
   14001df4a:	jne    0x14001df37
   14001df4c:	jmp    0x14001dfa1
   14001df4e:	cmp    cl,0x3b
   14001df51:	jne    0x14001df45
   14001df53:	mov    r8,rdx
   14001df56:	lea    rcx,[r8+0x1]
   14001df5a:	mov    al,BYTE PTR [rcx]
   14001df5c:	mov    BYTE PTR [r8],al
   14001df5f:	mov    r8,rcx
   14001df62:	test   al,al
   14001df64:	jne    0x14001df56
   14001df66:	jmp    0x14001df48
   14001df68:	mov    rax,QWORD PTR [rip+0x1f4a1]        # 0x14003d410
   14001df6f:	mov    r15,rbx
   14001df72:	mov    QWORD PTR [r14],rax
   14001df75:	mov    rax,QWORD PTR [rip+0x1f49c]        # 0x14003d418
   14001df7c:	mov    QWORD PTR [r14+0x8],rax
   14001df80:	mov    rax,QWORD PTR [rip+0x1f499]        # 0x14003d420
   14001df87:	mov    QWORD PTR [r14+0x10],rax
   14001df8b:	mov    rax,QWORD PTR [rip+0x1f4d6]        # 0x14003d468
   14001df92:	mov    QWORD PTR [r14+0x58],rax
   14001df96:	mov    rax,QWORD PTR [rip+0x1f4d3]        # 0x14003d470
   14001df9d:	mov    QWORD PTR [r14+0x60],rax
   14001dfa1:	mov    DWORD PTR [r12],ebp
   14001dfa5:	test   r15,r15
   14001dfa8:	je     0x14001dfad
   14001dfaa:	mov    DWORD PTR [r15],ebp
   14001dfad:	mov    rax,QWORD PTR [rsi+0xe0]
   14001dfb4:	test   rax,rax
   14001dfb7:	je     0x14001dfbc
   14001dfb9:	lock dec DWORD PTR [rax]
   14001dfbc:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001dfc3:	test   rcx,rcx
   14001dfc6:	je     0x14001dfe5
   14001dfc8:	lock dec DWORD PTR [rcx]
   14001dfcb:	jne    0x14001dfe5
   14001dfcd:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001dfd4:	call   0x140007dc0
   14001dfd9:	mov    rcx,QWORD PTR [rsi+0xf0]
   14001dfe0:	call   0x140007dc0
   14001dfe5:	mov    QWORD PTR [rsi+0xe0],r15
   14001dfec:	mov    QWORD PTR [rsi+0xd8],r12
   14001dff3:	mov    QWORD PTR [rsi+0xf0],r14
   14001dffa:	xor    eax,eax
   14001dffc:	lea    r11,[rsp+0x40]
   14001e001:	mov    rbx,QWORD PTR [r11+0x30]
   14001e005:	mov    rbp,QWORD PTR [r11+0x38]
   14001e009:	mov    rsi,QWORD PTR [r11+0x40]
   14001e00d:	mov    rsp,r11
   14001e010:	pop    r15
   14001e012:	pop    r14
   14001e014:	pop    r13
   14001e016:	pop    r12
   14001e018:	pop    rdi
   14001e019:	ret    
   14001e01a:	int3   
   14001e01b:	int3   
   14001e01c:	xor    r9d,r9d
   14001e01f:	mov    rdx,rcx
   14001e022:	cmp    BYTE PTR [rcx],r9b
   14001e025:	je     0x14001e03d
   14001e027:	mov    cl,BYTE PTR [rdx]
   14001e029:	lea    eax,[rcx-0x30]
   14001e02c:	cmp    al,0x9
   14001e02e:	ja     0x14001e03e
   14001e030:	sub    cl,0x30
   14001e033:	mov    BYTE PTR [rdx],cl
   14001e035:	inc    rdx
   14001e038:	cmp    BYTE PTR [rdx],r9b
   14001e03b:	jne    0x14001e027
   14001e03d:	ret    
   14001e03e:	cmp    cl,0x3b
   14001e041:	jne    0x14001e035
   14001e043:	mov    r8,rdx
   14001e046:	lea    rcx,[r8+0x1]
   14001e04a:	mov    al,BYTE PTR [rcx]
   14001e04c:	mov    BYTE PTR [r8],al
   14001e04f:	mov    r8,rcx
   14001e052:	test   al,al
   14001e054:	jne    0x14001e046
   14001e056:	jmp    0x14001e038
   14001e058:	test   rcx,rcx
   14001e05b:	je     0x14001e451
   14001e061:	push   rbx
   14001e062:	sub    rsp,0x20
   14001e066:	mov    rbx,rcx
   14001e069:	mov    rcx,QWORD PTR [rcx+0x8]
   14001e06d:	call   0x140007dc0
   14001e072:	mov    rcx,QWORD PTR [rbx+0x10]
   14001e076:	call   0x140007dc0
   14001e07b:	mov    rcx,QWORD PTR [rbx+0x18]
   14001e07f:	call   0x140007dc0
   14001e084:	mov    rcx,QWORD PTR [rbx+0x20]
   14001e088:	call   0x140007dc0
   14001e08d:	mov    rcx,QWORD PTR [rbx+0x28]
   14001e091:	call   0x140007dc0
   14001e096:	mov    rcx,QWORD PTR [rbx+0x30]
   14001e09a:	call   0x140007dc0
   14001e09f:	mov    rcx,QWORD PTR [rbx]
   14001e0a2:	call   0x140007dc0
   14001e0a7:	mov    rcx,QWORD PTR [rbx+0x40]
   14001e0ab:	call   0x140007dc0
   14001e0b0:	mov    rcx,QWORD PTR [rbx+0x48]
   14001e0b4:	call   0x140007dc0
   14001e0b9:	mov    rcx,QWORD PTR [rbx+0x50]
   14001e0bd:	call   0x140007dc0
   14001e0c2:	mov    rcx,QWORD PTR [rbx+0x58]
   14001e0c6:	call   0x140007dc0
   14001e0cb:	mov    rcx,QWORD PTR [rbx+0x60]
   14001e0cf:	call   0x140007dc0
   14001e0d4:	mov    rcx,QWORD PTR [rbx+0x68]
   14001e0d8:	call   0x140007dc0
   14001e0dd:	mov    rcx,QWORD PTR [rbx+0x38]
   14001e0e1:	call   0x140007dc0
   14001e0e6:	mov    rcx,QWORD PTR [rbx+0x70]
   14001e0ea:	call   0x140007dc0
   14001e0ef:	mov    rcx,QWORD PTR [rbx+0x78]
   14001e0f3:	call   0x140007dc0
   14001e0f8:	mov    rcx,QWORD PTR [rbx+0x80]
   14001e0ff:	call   0x140007dc0
   14001e104:	mov    rcx,QWORD PTR [rbx+0x88]
   14001e10b:	call   0x140007dc0
   14001e110:	mov    rcx,QWORD PTR [rbx+0x90]
   14001e117:	call   0x140007dc0
   14001e11c:	mov    rcx,QWORD PTR [rbx+0x98]
   14001e123:	call   0x140007dc0
   14001e128:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001e12f:	call   0x140007dc0
   14001e134:	mov    rcx,QWORD PTR [rbx+0xa8]
   14001e13b:	call   0x140007dc0
   14001e140:	mov    rcx,QWORD PTR [rbx+0xb0]
   14001e147:	call   0x140007dc0
   14001e14c:	mov    rcx,QWORD PTR [rbx+0xb8]
   14001e153:	call   0x140007dc0
   14001e158:	mov    rcx,QWORD PTR [rbx+0xc0]
   14001e15f:	call   0x140007dc0
   14001e164:	mov    rcx,QWORD PTR [rbx+0xc8]
   14001e16b:	call   0x140007dc0
   14001e170:	mov    rcx,QWORD PTR [rbx+0xd0]
   14001e177:	call   0x140007dc0
   14001e17c:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001e183:	call   0x140007dc0
   14001e188:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001e18f:	call   0x140007dc0
   14001e194:	mov    rcx,QWORD PTR [rbx+0xe8]
   14001e19b:	call   0x140007dc0
   14001e1a0:	mov    rcx,QWORD PTR [rbx+0xf0]
   14001e1a7:	call   0x140007dc0
   14001e1ac:	mov    rcx,QWORD PTR [rbx+0xf8]
   14001e1b3:	call   0x140007dc0
   14001e1b8:	mov    rcx,QWORD PTR [rbx+0x100]
   14001e1bf:	call   0x140007dc0
   14001e1c4:	mov    rcx,QWORD PTR [rbx+0x108]
   14001e1cb:	call   0x140007dc0
   14001e1d0:	mov    rcx,QWORD PTR [rbx+0x110]
   14001e1d7:	call   0x140007dc0
   14001e1dc:	mov    rcx,QWORD PTR [rbx+0x118]
   14001e1e3:	call   0x140007dc0
   14001e1e8:	mov    rcx,QWORD PTR [rbx+0x120]
   14001e1ef:	call   0x140007dc0
   14001e1f4:	mov    rcx,QWORD PTR [rbx+0x128]
   14001e1fb:	call   0x140007dc0
   14001e200:	mov    rcx,QWORD PTR [rbx+0x130]
   14001e207:	call   0x140007dc0
   14001e20c:	mov    rcx,QWORD PTR [rbx+0x138]
   14001e213:	call   0x140007dc0
   14001e218:	mov    rcx,QWORD PTR [rbx+0x140]
   14001e21f:	call   0x140007dc0
   14001e224:	mov    rcx,QWORD PTR [rbx+0x148]
   14001e22b:	call   0x140007dc0
   14001e230:	mov    rcx,QWORD PTR [rbx+0x150]
   14001e237:	call   0x140007dc0
   14001e23c:	mov    rcx,QWORD PTR [rbx+0x168]
   14001e243:	call   0x140007dc0
   14001e248:	mov    rcx,QWORD PTR [rbx+0x170]
   14001e24f:	call   0x140007dc0
   14001e254:	mov    rcx,QWORD PTR [rbx+0x178]
   14001e25b:	call   0x140007dc0
   14001e260:	mov    rcx,QWORD PTR [rbx+0x180]
   14001e267:	call   0x140007dc0
   14001e26c:	mov    rcx,QWORD PTR [rbx+0x188]
   14001e273:	call   0x140007dc0
   14001e278:	mov    rcx,QWORD PTR [rbx+0x190]
   14001e27f:	call   0x140007dc0
   14001e284:	mov    rcx,QWORD PTR [rbx+0x160]
   14001e28b:	call   0x140007dc0
   14001e290:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14001e297:	call   0x140007dc0
   14001e29c:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14001e2a3:	call   0x140007dc0
   14001e2a8:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14001e2af:	call   0x140007dc0
   14001e2b4:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14001e2bb:	call   0x140007dc0
   14001e2c0:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14001e2c7:	call   0x140007dc0
   14001e2cc:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14001e2d3:	call   0x140007dc0
   14001e2d8:	mov    rcx,QWORD PTR [rbx+0x198]
   14001e2df:	call   0x140007dc0
   14001e2e4:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14001e2eb:	call   0x140007dc0
   14001e2f0:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14001e2f7:	call   0x140007dc0
   14001e2fc:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14001e303:	call   0x140007dc0
   14001e308:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14001e30f:	call   0x140007dc0
   14001e314:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14001e31b:	call   0x140007dc0
   14001e320:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14001e327:	call   0x140007dc0
   14001e32c:	mov    rcx,QWORD PTR [rbx+0x200]
   14001e333:	call   0x140007dc0
   14001e338:	mov    rcx,QWORD PTR [rbx+0x208]
   14001e33f:	call   0x140007dc0
   14001e344:	mov    rcx,QWORD PTR [rbx+0x210]
   14001e34b:	call   0x140007dc0
   14001e350:	mov    rcx,QWORD PTR [rbx+0x218]
   14001e357:	call   0x140007dc0
   14001e35c:	mov    rcx,QWORD PTR [rbx+0x220]
   14001e363:	call   0x140007dc0
   14001e368:	mov    rcx,QWORD PTR [rbx+0x228]
   14001e36f:	call   0x140007dc0
   14001e374:	mov    rcx,QWORD PTR [rbx+0x230]
   14001e37b:	call   0x140007dc0
   14001e380:	mov    rcx,QWORD PTR [rbx+0x238]
   14001e387:	call   0x140007dc0
   14001e38c:	mov    rcx,QWORD PTR [rbx+0x240]
   14001e393:	call   0x140007dc0
   14001e398:	mov    rcx,QWORD PTR [rbx+0x248]
   14001e39f:	call   0x140007dc0
   14001e3a4:	mov    rcx,QWORD PTR [rbx+0x250]
   14001e3ab:	call   0x140007dc0
   14001e3b0:	mov    rcx,QWORD PTR [rbx+0x258]
   14001e3b7:	call   0x140007dc0
   14001e3bc:	mov    rcx,QWORD PTR [rbx+0x260]
   14001e3c3:	call   0x140007dc0
   14001e3c8:	mov    rcx,QWORD PTR [rbx+0x268]
   14001e3cf:	call   0x140007dc0
   14001e3d4:	mov    rcx,QWORD PTR [rbx+0x270]
   14001e3db:	call   0x140007dc0
   14001e3e0:	mov    rcx,QWORD PTR [rbx+0x278]
   14001e3e7:	call   0x140007dc0
   14001e3ec:	mov    rcx,QWORD PTR [rbx+0x280]
   14001e3f3:	call   0x140007dc0
   14001e3f8:	mov    rcx,QWORD PTR [rbx+0x288]
   14001e3ff:	call   0x140007dc0
   14001e404:	mov    rcx,QWORD PTR [rbx+0x290]
   14001e40b:	call   0x140007dc0
   14001e410:	mov    rcx,QWORD PTR [rbx+0x298]
   14001e417:	call   0x140007dc0
   14001e41c:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14001e423:	call   0x140007dc0
   14001e428:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14001e42f:	call   0x140007dc0
   14001e434:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14001e43b:	call   0x140007dc0
   14001e440:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14001e447:	call   0x140007dc0
   14001e44c:	add    rsp,0x20
   14001e450:	pop    rbx
   14001e451:	ret    
   14001e452:	int3   
   14001e453:	int3   
   14001e454:	mov    QWORD PTR [rsp+0x8],rbx
   14001e459:	mov    QWORD PTR [rsp+0x10],rbp
   14001e45e:	push   rdi
   14001e45f:	sub    rsp,0x20
   14001e463:	cmp    QWORD PTR [rcx+0x150],0x0
   14001e46b:	mov    rdi,rcx
   14001e46e:	lea    rbp,[rip+0x1e96b]        # 0x14003cde0
   14001e475:	je     0x14001e4c2
   14001e477:	mov    edx,0x2c0
   14001e47c:	mov    ecx,0x1
   14001e481:	call   0x140008604
   14001e486:	mov    rbx,rax
   14001e489:	test   rax,rax
   14001e48c:	jne    0x14001e495
   14001e48e:	mov    eax,0x1
   14001e493:	jmp    0x14001e4e1
   14001e495:	mov    rdx,rdi
   14001e498:	mov    rcx,rax
   14001e49b:	call   0x14001e4f4
   14001e4a0:	test   eax,eax
   14001e4a2:	je     0x14001e4b6
   14001e4a4:	mov    rcx,rbx
   14001e4a7:	call   0x14001e058
   14001e4ac:	mov    rcx,rbx
   14001e4af:	call   0x140007dc0
   14001e4b4:	jmp    0x14001e48e
   14001e4b6:	mov    DWORD PTR [rbx+0x15c],0x1
   14001e4c0:	jmp    0x14001e4c5
   14001e4c2:	mov    rbx,rbp
   14001e4c5:	mov    rax,QWORD PTR [rdi+0x120]
   14001e4cc:	cmp    rax,rbp
   14001e4cf:	je     0x14001e4d8
   14001e4d1:	lock dec DWORD PTR [rax+0x15c]
   14001e4d8:	mov    QWORD PTR [rdi+0x120],rbx
   14001e4df:	xor    eax,eax
   14001e4e1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e4e6:	mov    rbp,QWORD PTR [rsp+0x38]
   14001e4eb:	add    rsp,0x20
   14001e4ef:	pop    rdi
   14001e4f0:	ret    
   14001e4f1:	int3   
   14001e4f2:	int3   
   14001e4f3:	int3   
   14001e4f4:	mov    rax,rsp
   14001e4f7:	mov    QWORD PTR [rax+0x8],rbx
   14001e4fb:	mov    QWORD PTR [rax+0x10],rsi
   14001e4ff:	mov    QWORD PTR [rax+0x18],rdi
   14001e503:	mov    QWORD PTR [rax+0x20],r14
   14001e507:	push   rbp
   14001e508:	mov    rbp,rsp
   14001e50b:	sub    rsp,0x40
   14001e50f:	mov    rsi,QWORD PTR [rdx+0x150]
   14001e516:	mov    rbx,rdx
   14001e519:	mov    rdi,rcx
   14001e51c:	test   rcx,rcx
   14001e51f:	jne    0x14001e529
   14001e521:	or     eax,0xffffffff
   14001e524:	jmp    0x14001f053
   14001e529:	mov    rcx,rsi
   14001e52c:	call   0x14001faf0
   14001e531:	and    QWORD PTR [rbp-0x8],0x0
   14001e536:	mov    r9d,0x31
   14001e53c:	lea    r14d,[r9-0x30]
   14001e540:	mov    QWORD PTR [rdi+0x2b8],rax
   14001e547:	lea    rax,[rdi+0x8]
   14001e54b:	lea    rcx,[rbp-0x10]
   14001e54f:	mov    r8,rsi
   14001e552:	mov    edx,r14d
   14001e555:	mov    QWORD PTR [rbp-0x10],rbx
   14001e559:	mov    QWORD PTR [rsp+0x20],rax
   14001e55e:	call   0x1400079f0
   14001e563:	lea    rcx,[rdi+0x10]
   14001e567:	lea    r9d,[r14+0x31]
   14001e56b:	mov    r8,rsi
   14001e56e:	mov    QWORD PTR [rsp+0x20],rcx
   14001e573:	lea    rcx,[rbp-0x10]
   14001e577:	mov    edx,r14d
   14001e57a:	mov    ebx,eax
   14001e57c:	call   0x1400079f0
   14001e581:	lea    rcx,[rdi+0x18]
   14001e585:	mov    QWORD PTR [rsp+0x20],rcx
   14001e58a:	lea    r9d,[r14+0x32]
   14001e58e:	lea    rcx,[rbp-0x10]
   14001e592:	mov    r8,rsi
   14001e595:	mov    edx,r14d
   14001e598:	or     ebx,eax
   14001e59a:	call   0x1400079f0
   14001e59f:	lea    r9d,[r14+0x33]
   14001e5a3:	lea    rcx,[rbp-0x10]
   14001e5a7:	or     ebx,eax
   14001e5a9:	lea    rax,[rdi+0x20]
   14001e5ad:	mov    r8,rsi
   14001e5b0:	mov    edx,r14d
   14001e5b3:	mov    QWORD PTR [rsp+0x20],rax
   14001e5b8:	call   0x1400079f0
   14001e5bd:	lea    r9d,[r14+0x34]
   14001e5c1:	lea    rcx,[rbp-0x10]
   14001e5c5:	or     ebx,eax
   14001e5c7:	lea    rax,[rdi+0x28]
   14001e5cb:	mov    r8,rsi
   14001e5ce:	mov    edx,r14d
   14001e5d1:	mov    QWORD PTR [rsp+0x20],rax
   14001e5d6:	call   0x1400079f0
   14001e5db:	lea    r9d,[r14+0x35]
   14001e5df:	lea    rcx,[rbp-0x10]
   14001e5e3:	or     ebx,eax
   14001e5e5:	lea    rax,[rdi+0x30]
   14001e5e9:	mov    r8,rsi
   14001e5ec:	mov    edx,r14d
   14001e5ef:	mov    QWORD PTR [rsp+0x20],rax
   14001e5f4:	call   0x1400079f0
   14001e5f9:	lea    r9d,[r14+0x36]
   14001e5fd:	lea    rcx,[rbp-0x10]
   14001e601:	mov    r8,rsi
   14001e604:	mov    edx,r14d
   14001e607:	mov    QWORD PTR [rsp+0x20],rdi
   14001e60c:	or     ebx,eax
   14001e60e:	call   0x1400079f0
   14001e613:	lea    r9d,[r14+0x29]
   14001e617:	or     ebx,eax
   14001e619:	lea    rax,[rdi+0x40]
   14001e61d:	lea    rcx,[rbp-0x10]
   14001e621:	mov    r8,rsi
   14001e624:	mov    edx,r14d
   14001e627:	mov    QWORD PTR [rsp+0x20],rax
   14001e62c:	call   0x1400079f0
   14001e631:	lea    r9d,[r14+0x2a]
   14001e635:	lea    rcx,[rbp-0x10]
   14001e639:	or     ebx,eax
   14001e63b:	lea    rax,[rdi+0x48]
   14001e63f:	mov    r8,rsi
   14001e642:	mov    edx,r14d
   14001e645:	mov    QWORD PTR [rsp+0x20],rax
   14001e64a:	call   0x1400079f0
   14001e64f:	lea    r9d,[r14+0x2b]
   14001e653:	mov    r8,rsi
   14001e656:	or     ebx,eax
   14001e658:	lea    rax,[rdi+0x50]
   14001e65c:	mov    QWORD PTR [rsp+0x20],rax
   14001e661:	lea    rcx,[rbp-0x10]
   14001e665:	mov    edx,r14d
   14001e668:	call   0x1400079f0
   14001e66d:	lea    r9d,[r14+0x2c]
   14001e671:	lea    rcx,[rbp-0x10]
   14001e675:	or     ebx,eax
   14001e677:	lea    rax,[rdi+0x58]
   14001e67b:	mov    r8,rsi
   14001e67e:	mov    edx,r14d
   14001e681:	mov    QWORD PTR [rsp+0x20],rax
   14001e686:	call   0x1400079f0
   14001e68b:	lea    r9d,[r14+0x2d]
   14001e68f:	lea    rcx,[rbp-0x10]
   14001e693:	or     ebx,eax
   14001e695:	lea    rax,[rdi+0x60]
   14001e699:	mov    r8,rsi
   14001e69c:	mov    edx,r14d
   14001e69f:	mov    QWORD PTR [rsp+0x20],rax
   14001e6a4:	call   0x1400079f0
   14001e6a9:	lea    r9d,[r14+0x2e]
   14001e6ad:	lea    rcx,[rbp-0x10]
   14001e6b1:	or     ebx,eax
   14001e6b3:	lea    rax,[rdi+0x68]
   14001e6b7:	mov    r8,rsi
   14001e6ba:	mov    edx,r14d
   14001e6bd:	mov    QWORD PTR [rsp+0x20],rax
   14001e6c2:	call   0x1400079f0
   14001e6c7:	lea    r9d,[r14+0x2f]
   14001e6cb:	lea    rcx,[rbp-0x10]
   14001e6cf:	or     ebx,eax
   14001e6d1:	lea    rax,[rdi+0x38]
   14001e6d5:	mov    r8,rsi
   14001e6d8:	mov    edx,r14d
   14001e6db:	mov    QWORD PTR [rsp+0x20],rax
   14001e6e0:	call   0x1400079f0
   14001e6e5:	lea    r9d,[r14+0x43]
   14001e6e9:	lea    rcx,[rbp-0x10]
   14001e6ed:	or     ebx,eax
   14001e6ef:	lea    rax,[rdi+0x70]
   14001e6f3:	mov    r8,rsi
   14001e6f6:	mov    edx,r14d
   14001e6f9:	mov    QWORD PTR [rsp+0x20],rax
   14001e6fe:	call   0x1400079f0
   14001e703:	lea    r9d,[r14+0x44]
   14001e707:	lea    rcx,[rbp-0x10]
   14001e70b:	or     ebx,eax
   14001e70d:	lea    rax,[rdi+0x78]
   14001e711:	mov    r8,rsi
   14001e714:	mov    edx,r14d
   14001e717:	mov    QWORD PTR [rsp+0x20],rax
   14001e71c:	call   0x1400079f0
   14001e721:	lea    r9d,[r14+0x45]
   14001e725:	lea    rcx,[rbp-0x10]
   14001e729:	or     ebx,eax
   14001e72b:	lea    rax,[rdi+0x80]
   14001e732:	mov    r8,rsi
   14001e735:	mov    edx,r14d
   14001e738:	mov    QWORD PTR [rsp+0x20],rax
   14001e73d:	call   0x1400079f0
   14001e742:	lea    r9d,[r14+0x46]
   14001e746:	lea    rcx,[rbp-0x10]
   14001e74a:	or     ebx,eax
   14001e74c:	lea    rax,[rdi+0x88]
   14001e753:	mov    r8,rsi
   14001e756:	mov    edx,r14d
   14001e759:	mov    QWORD PTR [rsp+0x20],rax
   14001e75e:	call   0x1400079f0
   14001e763:	lea    r9d,[r14+0x47]
   14001e767:	lea    rcx,[rbp-0x10]
   14001e76b:	or     ebx,eax
   14001e76d:	lea    rax,[rdi+0x90]
   14001e774:	mov    r8,rsi
   14001e777:	mov    edx,r14d
   14001e77a:	mov    QWORD PTR [rsp+0x20],rax
   14001e77f:	call   0x1400079f0
   14001e784:	lea    r9d,[r14+0x48]
   14001e788:	mov    r8,rsi
   14001e78b:	or     ebx,eax
   14001e78d:	lea    rax,[rdi+0x98]
   14001e794:	mov    edx,r14d
   14001e797:	mov    QWORD PTR [rsp+0x20],rax
   14001e79c:	lea    rcx,[rbp-0x10]
   14001e7a0:	call   0x1400079f0
   14001e7a5:	lea    r9d,[r14+0x49]
   14001e7a9:	lea    rcx,[rbp-0x10]
   14001e7ad:	or     ebx,eax
   14001e7af:	lea    rax,[rdi+0xa0]
   14001e7b6:	mov    r8,rsi
   14001e7b9:	mov    edx,r14d
   14001e7bc:	mov    QWORD PTR [rsp+0x20],rax
   14001e7c1:	call   0x1400079f0
   14001e7c6:	lea    r9d,[r14+0x4a]
   14001e7ca:	lea    rcx,[rbp-0x10]
   14001e7ce:	or     ebx,eax
   14001e7d0:	lea    rax,[rdi+0xa8]
   14001e7d7:	mov    r8,rsi
   14001e7da:	mov    edx,r14d
   14001e7dd:	mov    QWORD PTR [rsp+0x20],rax
   14001e7e2:	call   0x1400079f0
   14001e7e7:	lea    r9d,[r14+0x4b]
   14001e7eb:	lea    rcx,[rbp-0x10]
   14001e7ef:	or     ebx,eax
   14001e7f1:	lea    rax,[rdi+0xb0]
   14001e7f8:	mov    r8,rsi
   14001e7fb:	mov    edx,r14d
   14001e7fe:	mov    QWORD PTR [rsp+0x20],rax
   14001e803:	call   0x1400079f0
   14001e808:	lea    r9d,[r14+0x4c]
   14001e80c:	lea    rcx,[rbp-0x10]
   14001e810:	or     ebx,eax
   14001e812:	lea    rax,[rdi+0xb8]
   14001e819:	mov    r8,rsi
   14001e81c:	mov    edx,r14d
   14001e81f:	mov    QWORD PTR [rsp+0x20],rax
   14001e824:	call   0x1400079f0
   14001e829:	lea    r9d,[r14+0x4d]
   14001e82d:	lea    rcx,[rbp-0x10]
   14001e831:	or     ebx,eax
   14001e833:	lea    rax,[rdi+0xc0]
   14001e83a:	mov    r8,rsi
   14001e83d:	mov    edx,r14d
   14001e840:	mov    QWORD PTR [rsp+0x20],rax
   14001e845:	call   0x1400079f0
   14001e84a:	lea    r9d,[r14+0x4e]
   14001e84e:	lea    rcx,[rbp-0x10]
   14001e852:	or     ebx,eax
   14001e854:	lea    rax,[rdi+0xc8]
   14001e85b:	mov    r8,rsi
   14001e85e:	mov    edx,r14d
   14001e861:	mov    QWORD PTR [rsp+0x20],rax
   14001e866:	call   0x1400079f0
   14001e86b:	lea    r9d,[r14+0x37]
   14001e86f:	lea    rcx,[rbp-0x10]
   14001e873:	or     ebx,eax
   14001e875:	lea    rax,[rdi+0xd0]
   14001e87c:	mov    r8,rsi
   14001e87f:	mov    edx,r14d
   14001e882:	mov    QWORD PTR [rsp+0x20],rax
   14001e887:	call   0x1400079f0
   14001e88c:	lea    r9d,[r14+0x38]
   14001e890:	lea    rcx,[rbp-0x10]
   14001e894:	or     ebx,eax
   14001e896:	lea    rax,[rdi+0xd8]
   14001e89d:	mov    r8,rsi
   14001e8a0:	mov    edx,r14d
   14001e8a3:	mov    QWORD PTR [rsp+0x20],rax
   14001e8a8:	call   0x1400079f0
   14001e8ad:	lea    r9d,[r14+0x39]
   14001e8b1:	lea    rcx,[rbp-0x10]
   14001e8b5:	or     ebx,eax
   14001e8b7:	lea    rax,[rdi+0xe0]
   14001e8be:	mov    r8,rsi
   14001e8c1:	mov    edx,r14d
   14001e8c4:	mov    QWORD PTR [rsp+0x20],rax
   14001e8c9:	call   0x1400079f0
   14001e8ce:	lea    r9d,[r14+0x3a]
   14001e8d2:	mov    r8,rsi
   14001e8d5:	or     ebx,eax
   14001e8d7:	lea    rax,[rdi+0xe8]
   14001e8de:	mov    edx,r14d
   14001e8e1:	mov    QWORD PTR [rsp+0x20],rax
   14001e8e6:	lea    rcx,[rbp-0x10]
   14001e8ea:	call   0x1400079f0
   14001e8ef:	lea    r9d,[r14+0x3b]
   14001e8f3:	lea    rcx,[rbp-0x10]
   14001e8f7:	or     ebx,eax
   14001e8f9:	lea    rax,[rdi+0xf0]
   14001e900:	mov    r8,rsi
   14001e903:	mov    edx,r14d
   14001e906:	mov    QWORD PTR [rsp+0x20],rax
   14001e90b:	call   0x1400079f0
   14001e910:	lea    r9d,[r14+0x3c]
   14001e914:	lea    rcx,[rbp-0x10]
   14001e918:	or     ebx,eax
   14001e91a:	lea    rax,[rdi+0xf8]
   14001e921:	mov    r8,rsi
   14001e924:	mov    edx,r14d
   14001e927:	mov    QWORD PTR [rsp+0x20],rax
   14001e92c:	call   0x1400079f0
   14001e931:	lea    r9d,[r14+0x3d]
   14001e935:	lea    rcx,[rbp-0x10]
   14001e939:	or     ebx,eax
   14001e93b:	lea    rax,[rdi+0x100]
   14001e942:	mov    r8,rsi
   14001e945:	mov    edx,r14d
   14001e948:	mov    QWORD PTR [rsp+0x20],rax
   14001e94d:	call   0x1400079f0
   14001e952:	lea    r9d,[r14+0x3e]
   14001e956:	lea    rcx,[rbp-0x10]
   14001e95a:	or     ebx,eax
   14001e95c:	lea    rax,[rdi+0x108]
   14001e963:	mov    r8,rsi
   14001e966:	mov    edx,r14d
   14001e969:	mov    QWORD PTR [rsp+0x20],rax
   14001e96e:	call   0x1400079f0
   14001e973:	lea    r9d,[r14+0x3f]
   14001e977:	lea    rcx,[rbp-0x10]
   14001e97b:	or     ebx,eax
   14001e97d:	lea    rax,[rdi+0x110]
   14001e984:	mov    r8,rsi
   14001e987:	mov    edx,r14d
   14001e98a:	mov    QWORD PTR [rsp+0x20],rax
   14001e98f:	call   0x1400079f0
   14001e994:	lea    r9d,[r14+0x40]
   14001e998:	lea    rcx,[rbp-0x10]
   14001e99c:	or     ebx,eax
   14001e99e:	lea    rax,[rdi+0x118]
   14001e9a5:	mov    r8,rsi
   14001e9a8:	mov    edx,r14d
   14001e9ab:	mov    QWORD PTR [rsp+0x20],rax
   14001e9b0:	call   0x1400079f0
   14001e9b5:	lea    r9d,[r14+0x41]
   14001e9b9:	lea    rcx,[rbp-0x10]
   14001e9bd:	or     ebx,eax
   14001e9bf:	lea    rax,[rdi+0x120]
   14001e9c6:	mov    r8,rsi
   14001e9c9:	mov    edx,r14d
   14001e9cc:	mov    QWORD PTR [rsp+0x20],rax
   14001e9d1:	call   0x1400079f0
   14001e9d6:	lea    r9d,[r14+0x42]
   14001e9da:	lea    rcx,[rbp-0x10]
   14001e9de:	or     ebx,eax
   14001e9e0:	lea    rax,[rdi+0x128]
   14001e9e7:	mov    r8,rsi
   14001e9ea:	mov    edx,r14d
   14001e9ed:	mov    QWORD PTR [rsp+0x20],rax
   14001e9f2:	call   0x1400079f0
   14001e9f7:	lea    r9d,[r14+0x27]
   14001e9fb:	lea    rcx,[rbp-0x10]
   14001e9ff:	or     ebx,eax
   14001ea01:	lea    rax,[rdi+0x130]
   14001ea08:	mov    r8,rsi
   14001ea0b:	mov    edx,r14d
   14001ea0e:	mov    QWORD PTR [rsp+0x20],rax
   14001ea13:	call   0x1400079f0
   14001ea18:	lea    r9d,[r14+0x28]
   14001ea1c:	lea    rcx,[rbp-0x10]
   14001ea20:	or     ebx,eax
   14001ea22:	lea    rax,[rdi+0x138]
   14001ea29:	mov    r8,rsi
   14001ea2c:	mov    edx,r14d
   14001ea2f:	mov    QWORD PTR [rsp+0x20],rax
   14001ea34:	call   0x1400079f0
   14001ea39:	or     ebx,eax
   14001ea3b:	lea    rax,[rdi+0x140]
   14001ea42:	lea    r9d,[r14+0x1e]
   14001ea46:	lea    rcx,[rbp-0x10]
   14001ea4a:	mov    r8,rsi
   14001ea4d:	mov    edx,r14d
   14001ea50:	mov    QWORD PTR [rsp+0x20],rax
   14001ea55:	call   0x1400079f0
   14001ea5a:	lea    r9d,[r14+0x1f]
   14001ea5e:	or     ebx,eax
   14001ea60:	lea    rax,[rdi+0x148]
   14001ea67:	lea    rcx,[rbp-0x10]
   14001ea6b:	mov    r8,rsi
   14001ea6e:	mov    edx,r14d
   14001ea71:	mov    QWORD PTR [rsp+0x20],rax
   14001ea76:	call   0x1400079f0
   14001ea7b:	lea    rcx,[rbp-0x10]
   14001ea7f:	mov    r9d,0x1003
   14001ea85:	or     ebx,eax
   14001ea87:	lea    rax,[rdi+0x150]
   14001ea8e:	mov    r8,rsi
   14001ea91:	mov    edx,r14d
   14001ea94:	mov    QWORD PTR [rsp+0x20],rax
   14001ea99:	call   0x1400079f0
   14001ea9e:	lea    rcx,[rbp-0x10]
   14001eaa2:	mov    r9d,0x1009
   14001eaa8:	or     ebx,eax
   14001eaaa:	lea    rax,[rdi+0x158]
   14001eab1:	mov    r8,rsi
   14001eab4:	xor    edx,edx
   14001eab6:	mov    QWORD PTR [rsp+0x20],rax
   14001eabb:	call   0x1400079f0
   14001eac0:	lea    r9d,[r14+0x30]
   14001eac4:	lea    rcx,[rbp-0x10]
   14001eac8:	lea    r14d,[r9-0x2f]
   14001eacc:	or     ebx,eax
   14001eace:	lea    rax,[rdi+0x168]
   14001ead5:	mov    edx,r14d
   14001ead8:	mov    r8,rsi
   14001eadb:	mov    QWORD PTR [rsp+0x20],rax
   14001eae0:	call   0x1400079f0
   14001eae5:	lea    r9d,[r14+0x30]
   14001eae9:	lea    rcx,[rbp-0x10]
   14001eaed:	or     ebx,eax
   14001eaef:	lea    rax,[rdi+0x170]
   14001eaf6:	mov    r8,rsi
   14001eaf9:	mov    edx,r14d
   14001eafc:	mov    QWORD PTR [rsp+0x20],rax
   14001eb01:	call   0x1400079f0
   14001eb06:	lea    r9d,[r14+0x31]
   14001eb0a:	lea    rcx,[rbp-0x10]
   14001eb0e:	or     ebx,eax
   14001eb10:	lea    rax,[rdi+0x178]
   14001eb17:	mov    r8,rsi
   14001eb1a:	mov    edx,r14d
   14001eb1d:	mov    QWORD PTR [rsp+0x20],rax
   14001eb22:	call   0x1400079f0
   14001eb27:	lea    r9d,[r14+0x32]
   14001eb2b:	lea    rcx,[rbp-0x10]
   14001eb2f:	or     ebx,eax
   14001eb31:	lea    rax,[rdi+0x180]
   14001eb38:	mov    r8,rsi
   14001eb3b:	mov    edx,r14d
   14001eb3e:	mov    QWORD PTR [rsp+0x20],rax
   14001eb43:	call   0x1400079f0
   14001eb48:	lea    r9d,[r14+0x33]
   14001eb4c:	lea    rcx,[rbp-0x10]
   14001eb50:	or     ebx,eax
   14001eb52:	lea    rax,[rdi+0x188]
   14001eb59:	mov    r8,rsi
   14001eb5c:	mov    edx,r14d
   14001eb5f:	mov    QWORD PTR [rsp+0x20],rax
   14001eb64:	call   0x1400079f0
   14001eb69:	lea    r9d,[r14+0x34]
   14001eb6d:	lea    rcx,[rbp-0x10]
   14001eb71:	or     ebx,eax
   14001eb73:	lea    rax,[rdi+0x190]
   14001eb7a:	mov    r8,rsi
   14001eb7d:	mov    edx,r14d
   14001eb80:	mov    QWORD PTR [rsp+0x20],rax
   14001eb85:	call   0x1400079f0
   14001eb8a:	or     ebx,eax
   14001eb8c:	lea    rax,[rdi+0x160]
   14001eb93:	lea    r9d,[r14+0x35]
   14001eb97:	lea    rcx,[rbp-0x10]
   14001eb9b:	mov    r8,rsi
   14001eb9e:	mov    edx,r14d
   14001eba1:	mov    QWORD PTR [rsp+0x20],rax
   14001eba6:	call   0x1400079f0
   14001ebab:	lea    r9d,[r14+0x28]
   14001ebaf:	or     ebx,eax
   14001ebb1:	lea    rax,[rdi+0x1a0]
   14001ebb8:	lea    rcx,[rbp-0x10]
   14001ebbc:	mov    r8,rsi
   14001ebbf:	mov    edx,r14d
   14001ebc2:	mov    QWORD PTR [rsp+0x20],rax
   14001ebc7:	call   0x1400079f0
   14001ebcc:	lea    r9d,[r14+0x29]
   14001ebd0:	lea    rcx,[rbp-0x10]
   14001ebd4:	or     ebx,eax
   14001ebd6:	lea    rax,[rdi+0x1a8]
   14001ebdd:	mov    r8,rsi
   14001ebe0:	mov    edx,r14d
   14001ebe3:	mov    QWORD PTR [rsp+0x20],rax
   14001ebe8:	call   0x1400079f0
   14001ebed:	lea    r9d,[r14+0x2a]
   14001ebf1:	lea    rcx,[rbp-0x10]
   14001ebf5:	or     ebx,eax
   14001ebf7:	lea    rax,[rdi+0x1b0]
   14001ebfe:	mov    r8,rsi
   14001ec01:	mov    edx,r14d
   14001ec04:	mov    QWORD PTR [rsp+0x20],rax
   14001ec09:	call   0x1400079f0
   14001ec0e:	lea    r9d,[r14+0x2b]
   14001ec12:	lea    rcx,[rbp-0x10]
   14001ec16:	or     ebx,eax
   14001ec18:	lea    rax,[rdi+0x1b8]
   14001ec1f:	mov    r8,rsi
   14001ec22:	mov    edx,r14d
   14001ec25:	mov    QWORD PTR [rsp+0x20],rax
   14001ec2a:	call   0x1400079f0
   14001ec2f:	lea    r9d,[r14+0x2c]
   14001ec33:	lea    rcx,[rbp-0x10]
   14001ec37:	or     ebx,eax
   14001ec39:	lea    rax,[rdi+0x1c0]
   14001ec40:	mov    r8,rsi
   14001ec43:	mov    edx,r14d
   14001ec46:	mov    QWORD PTR [rsp+0x20],rax
   14001ec4b:	call   0x1400079f0
   14001ec50:	lea    r9d,[r14+0x2d]
   14001ec54:	lea    rcx,[rbp-0x10]
   14001ec58:	or     ebx,eax
   14001ec5a:	lea    rax,[rdi+0x1c8]
   14001ec61:	mov    r8,rsi
   14001ec64:	mov    edx,r14d
   14001ec67:	mov    QWORD PTR [rsp+0x20],rax
   14001ec6c:	call   0x1400079f0
   14001ec71:	lea    r9d,[r14+0x2e]
   14001ec75:	lea    rcx,[rbp-0x10]
   14001ec79:	or     ebx,eax
   14001ec7b:	lea    rax,[rdi+0x198]
   14001ec82:	mov    r8,rsi
   14001ec85:	mov    edx,r14d
   14001ec88:	mov    QWORD PTR [rsp+0x20],rax
   14001ec8d:	call   0x1400079f0
   14001ec92:	lea    r9d,[r14+0x42]
   14001ec96:	lea    rcx,[rbp-0x10]
   14001ec9a:	or     ebx,eax
   14001ec9c:	lea    rax,[rdi+0x1d0]
   14001eca3:	mov    r8,rsi
   14001eca6:	mov    edx,r14d
   14001eca9:	mov    QWORD PTR [rsp+0x20],rax
   14001ecae:	call   0x1400079f0
   14001ecb3:	lea    r9d,[r14+0x43]
   14001ecb7:	lea    rcx,[rbp-0x10]
   14001ecbb:	or     ebx,eax
   14001ecbd:	lea    rax,[rdi+0x1d8]
   14001ecc4:	mov    r8,rsi
   14001ecc7:	mov    edx,r14d
   14001ecca:	mov    QWORD PTR [rsp+0x20],rax
   14001eccf:	call   0x1400079f0
   14001ecd4:	or     ebx,eax
   14001ecd6:	lea    rax,[rdi+0x1e0]
   14001ecdd:	lea    r9d,[r14+0x44]
   14001ece1:	lea    rcx,[rbp-0x10]
   14001ece5:	mov    r8,rsi
   14001ece8:	mov    edx,r14d
   14001eceb:	mov    QWORD PTR [rsp+0x20],rax
   14001ecf0:	call   0x1400079f0
   14001ecf5:	lea    r9d,[r14+0x45]
   14001ecf9:	lea    rcx,[rbp-0x10]
   14001ecfd:	or     ebx,eax
   14001ecff:	lea    rax,[rdi+0x1e8]
   14001ed06:	mov    r8,rsi
   14001ed09:	mov    edx,r14d
   14001ed0c:	mov    QWORD PTR [rsp+0x20],rax
   14001ed11:	call   0x1400079f0
   14001ed16:	lea    r9d,[r14+0x46]
   14001ed1a:	lea    rcx,[rbp-0x10]
   14001ed1e:	or     ebx,eax
   14001ed20:	lea    rax,[rdi+0x1f0]
   14001ed27:	mov    r8,rsi
   14001ed2a:	mov    edx,r14d
   14001ed2d:	mov    QWORD PTR [rsp+0x20],rax
   14001ed32:	call   0x1400079f0
   14001ed37:	lea    r9d,[r14+0x47]
   14001ed3b:	lea    rcx,[rbp-0x10]
   14001ed3f:	or     ebx,eax
   14001ed41:	lea    rax,[rdi+0x1f8]
   14001ed48:	mov    r8,rsi
   14001ed4b:	mov    edx,r14d
   14001ed4e:	mov    QWORD PTR [rsp+0x20],rax
   14001ed53:	call   0x1400079f0
   14001ed58:	lea    r9d,[r14+0x48]
   14001ed5c:	lea    rcx,[rbp-0x10]
   14001ed60:	or     ebx,eax
   14001ed62:	lea    rax,[rdi+0x200]
   14001ed69:	mov    r8,rsi
   14001ed6c:	mov    edx,r14d
   14001ed6f:	mov    QWORD PTR [rsp+0x20],rax
   14001ed74:	call   0x1400079f0
   14001ed79:	lea    r9d,[r14+0x49]
   14001ed7d:	lea    rcx,[rbp-0x10]
   14001ed81:	or     ebx,eax
   14001ed83:	lea    rax,[rdi+0x208]
   14001ed8a:	mov    r8,rsi
   14001ed8d:	mov    edx,r14d
   14001ed90:	mov    QWORD PTR [rsp+0x20],rax
   14001ed95:	call   0x1400079f0
   14001ed9a:	lea    r9d,[r14+0x4a]
   14001ed9e:	lea    rcx,[rbp-0x10]
   14001eda2:	or     ebx,eax
   14001eda4:	lea    rax,[rdi+0x210]
   14001edab:	mov    r8,rsi
   14001edae:	mov    edx,r14d
   14001edb1:	mov    QWORD PTR [rsp+0x20],rax
   14001edb6:	call   0x1400079f0
   14001edbb:	lea    r9d,[r14+0x4b]
   14001edbf:	lea    rcx,[rbp-0x10]
   14001edc3:	or     ebx,eax
   14001edc5:	lea    rax,[rdi+0x218]
   14001edcc:	mov    r8,rsi
   14001edcf:	mov    edx,r14d
   14001edd2:	mov    QWORD PTR [rsp+0x20],rax
   14001edd7:	call   0x1400079f0
   14001eddc:	lea    r9d,[r14+0x4c]
   14001ede0:	lea    rcx,[rbp-0x10]
   14001ede4:	or     ebx,eax
   14001ede6:	lea    rax,[rdi+0x220]
   14001eded:	mov    r8,rsi
   14001edf0:	mov    edx,r14d
   14001edf3:	mov    QWORD PTR [rsp+0x20],rax
   14001edf8:	call   0x1400079f0
   14001edfd:	lea    r9d,[r14+0x4d]
   14001ee01:	lea    rcx,[rbp-0x10]
   14001ee05:	or     ebx,eax
   14001ee07:	lea    rax,[rdi+0x228]
   14001ee0e:	mov    r8,rsi
   14001ee11:	mov    edx,r14d
   14001ee14:	mov    QWORD PTR [rsp+0x20],rax
   14001ee19:	call   0x1400079f0
   14001ee1e:	or     ebx,eax
   14001ee20:	lea    rax,[rdi+0x230]
   14001ee27:	lea    r9d,[r14+0x36]
   14001ee2b:	lea    rcx,[rbp-0x10]
   14001ee2f:	mov    r8,rsi
   14001ee32:	mov    edx,r14d
   14001ee35:	mov    QWORD PTR [rsp+0x20],rax
   14001ee3a:	call   0x1400079f0
   14001ee3f:	lea    r9d,[r14+0x37]
   14001ee43:	lea    rcx,[rbp-0x10]
   14001ee47:	or     ebx,eax
   14001ee49:	lea    rax,[rdi+0x238]
   14001ee50:	mov    r8,rsi
   14001ee53:	mov    edx,r14d
   14001ee56:	mov    QWORD PTR [rsp+0x20],rax
   14001ee5b:	call   0x1400079f0
   14001ee60:	lea    r9d,[r14+0x38]
   14001ee64:	lea    rcx,[rbp-0x10]
   14001ee68:	or     ebx,eax
   14001ee6a:	lea    rax,[rdi+0x240]
   14001ee71:	mov    r8,rsi
   14001ee74:	mov    edx,r14d
   14001ee77:	mov    QWORD PTR [rsp+0x20],rax
   14001ee7c:	call   0x1400079f0
   14001ee81:	lea    r9d,[r14+0x39]
   14001ee85:	lea    rcx,[rbp-0x10]
   14001ee89:	or     ebx,eax
   14001ee8b:	lea    rax,[rdi+0x248]
   14001ee92:	mov    r8,rsi
   14001ee95:	mov    edx,r14d
   14001ee98:	mov    QWORD PTR [rsp+0x20],rax
   14001ee9d:	call   0x1400079f0
   14001eea2:	lea    r9d,[r14+0x3a]
   14001eea6:	lea    rcx,[rbp-0x10]
   14001eeaa:	or     ebx,eax
   14001eeac:	lea    rax,[rdi+0x250]
   14001eeb3:	mov    r8,rsi
   14001eeb6:	mov    edx,r14d
   14001eeb9:	mov    QWORD PTR [rsp+0x20],rax
   14001eebe:	call   0x1400079f0
   14001eec3:	lea    r9d,[r14+0x3b]
   14001eec7:	lea    rcx,[rbp-0x10]
   14001eecb:	or     ebx,eax
   14001eecd:	lea    rax,[rdi+0x258]
   14001eed4:	mov    r8,rsi
   14001eed7:	mov    edx,r14d
   14001eeda:	mov    QWORD PTR [rsp+0x20],rax
   14001eedf:	call   0x1400079f0
   14001eee4:	lea    r9d,[r14+0x3c]
   14001eee8:	lea    rcx,[rbp-0x10]
   14001eeec:	or     ebx,eax
   14001eeee:	lea    rax,[rdi+0x260]
   14001eef5:	mov    r8,rsi
   14001eef8:	mov    edx,r14d
   14001eefb:	mov    QWORD PTR [rsp+0x20],rax
   14001ef00:	call   0x1400079f0
   14001ef05:	lea    r9d,[r14+0x3d]
   14001ef09:	lea    rcx,[rbp-0x10]
   14001ef0d:	or     ebx,eax
   14001ef0f:	lea    rax,[rdi+0x268]
   14001ef16:	mov    r8,rsi
   14001ef19:	mov    edx,r14d
   14001ef1c:	mov    QWORD PTR [rsp+0x20],rax
   14001ef21:	call   0x1400079f0
   14001ef26:	lea    r9d,[r14+0x3e]
   14001ef2a:	lea    rcx,[rbp-0x10]
   14001ef2e:	or     ebx,eax
   14001ef30:	lea    rax,[rdi+0x270]
   14001ef37:	mov    r8,rsi
   14001ef3a:	mov    edx,r14d
   14001ef3d:	mov    QWORD PTR [rsp+0x20],rax
   14001ef42:	call   0x1400079f0
   14001ef47:	lea    r9d,[r14+0x3f]
   14001ef4b:	lea    rcx,[rbp-0x10]
   14001ef4f:	or     ebx,eax
   14001ef51:	lea    rax,[rdi+0x278]
   14001ef58:	mov    r8,rsi
   14001ef5b:	mov    edx,r14d
   14001ef5e:	mov    QWORD PTR [rsp+0x20],rax
   14001ef63:	call   0x1400079f0
   14001ef68:	or     ebx,eax
   14001ef6a:	lea    rax,[rdi+0x280]
   14001ef71:	mov    QWORD PTR [rsp+0x20],rax
   14001ef76:	lea    r9d,[r14+0x40]
   14001ef7a:	lea    rcx,[rbp-0x10]
   14001ef7e:	mov    r8,rsi
   14001ef81:	mov    edx,r14d
   14001ef84:	call   0x1400079f0
   14001ef89:	lea    r9d,[r14+0x41]
   14001ef8d:	lea    rcx,[rbp-0x10]
   14001ef91:	or     ebx,eax
   14001ef93:	lea    rax,[rdi+0x288]
   14001ef9a:	mov    r8,rsi
   14001ef9d:	mov    edx,r14d
   14001efa0:	mov    QWORD PTR [rsp+0x20],rax
   14001efa5:	call   0x1400079f0
   14001efaa:	lea    r9d,[r14+0x26]
   14001efae:	lea    rcx,[rbp-0x10]
   14001efb2:	or     ebx,eax
   14001efb4:	lea    rax,[rdi+0x290]
   14001efbb:	mov    r8,rsi
   14001efbe:	mov    edx,r14d
   14001efc1:	mov    QWORD PTR [rsp+0x20],rax
   14001efc6:	call   0x1400079f0
   14001efcb:	lea    r9d,[r14+0x27]
   14001efcf:	lea    rcx,[rbp-0x10]
   14001efd3:	or     ebx,eax
   14001efd5:	lea    rax,[rdi+0x298]
   14001efdc:	mov    r8,rsi
   14001efdf:	mov    edx,r14d
   14001efe2:	mov    QWORD PTR [rsp+0x20],rax
   14001efe7:	call   0x1400079f0
   14001efec:	lea    r9d,[r14+0x1d]
   14001eff0:	lea    rcx,[rbp-0x10]
   14001eff4:	or     ebx,eax
   14001eff6:	lea    rax,[rdi+0x2a0]
   14001effd:	mov    r8,rsi
   14001f000:	mov    edx,r14d
   14001f003:	mov    QWORD PTR [rsp+0x20],rax
   14001f008:	call   0x1400079f0
   14001f00d:	lea    r9d,[r14+0x1e]
   14001f011:	lea    rcx,[rbp-0x10]
   14001f015:	or     ebx,eax
   14001f017:	lea    rax,[rdi+0x2a8]
   14001f01e:	mov    r8,rsi
   14001f021:	mov    edx,r14d
   14001f024:	mov    QWORD PTR [rsp+0x20],rax
   14001f029:	call   0x1400079f0
   14001f02e:	lea    rcx,[rbp-0x10]
   14001f032:	mov    r9d,0x1003
   14001f038:	or     ebx,eax
   14001f03a:	lea    rax,[rdi+0x2b0]
   14001f041:	mov    r8,rsi
   14001f044:	mov    edx,r14d
   14001f047:	mov    QWORD PTR [rsp+0x20],rax
   14001f04c:	call   0x1400079f0
   14001f051:	or     eax,ebx
   14001f053:	mov    rbx,QWORD PTR [rsp+0x50]
   14001f058:	mov    rsi,QWORD PTR [rsp+0x58]
   14001f05d:	mov    rdi,QWORD PTR [rsp+0x60]
   14001f062:	mov    r14,QWORD PTR [rsp+0x68]
   14001f067:	add    rsp,0x40
   14001f06b:	pop    rbp
   14001f06c:	ret    
   14001f06d:	int3   
   14001f06e:	int3   
   14001f06f:	int3   
   14001f070:	sub    rsp,0x28
   14001f074:	call   0x14000a3ec
   14001f079:	mov    rcx,QWORD PTR [rip+0x1e020]        # 0x14003d0a0
   14001f080:	cmp    QWORD PTR [rax+0xc0],rcx
   14001f087:	je     0x14001f09c
   14001f089:	mov    eax,DWORD PTR [rax+0xc8]
   14001f08f:	test   DWORD PTR [rip+0x1e183],eax        # 0x14003d218
   14001f095:	jne    0x14001f09c
   14001f097:	call   0x140011d10
   14001f09c:	mov    rax,QWORD PTR [rip+0x1e40d]        # 0x14003d4b0
   14001f0a3:	add    rsp,0x28
   14001f0a7:	ret    
   14001f0a8:	jmp    0x14001f0b8
   14001f0ad:	int3   
   14001f0ae:	int3   
   14001f0af:	int3   
   14001f0b0:	jmp    0x14001f0b8
   14001f0b5:	int3   
   14001f0b6:	int3   
   14001f0b7:	int3   
   14001f0b8:	mov    WORD PTR [rsp+0x8],cx
   14001f0bd:	push   rbx
   14001f0be:	sub    rsp,0x20
   14001f0c2:	mov    eax,0xffff
   14001f0c7:	movzx  ebx,dx
   14001f0ca:	cmp    cx,ax
   14001f0cd:	jne    0x14001f0d3
   14001f0cf:	xor    eax,eax
   14001f0d1:	jmp    0x14001f118
   14001f0d3:	mov    eax,0x100
   14001f0d8:	cmp    cx,ax
   14001f0db:	jae    0x14001f0ed
   14001f0dd:	mov    rax,QWORD PTR [rip+0x1e3dc]        # 0x14003d4c0
   14001f0e4:	movzx  ecx,cx
   14001f0e7:	movzx  eax,WORD PTR [rax+rcx*2]
   14001f0eb:	jmp    0x14001f113
   14001f0ed:	mov    ecx,0x1
   14001f0f2:	lea    r9,[rsp+0x40]
   14001f0f7:	lea    rdx,[rsp+0x30]
   14001f0fc:	mov    r8d,ecx
   14001f0ff:	call   QWORD PTR [rip+0xcf23]        # 0x14002c028
   14001f105:	xor    ecx,ecx
   14001f107:	test   eax,eax
   14001f109:	je     0x14001f110
   14001f10b:	movzx  ecx,WORD PTR [rsp+0x40]
   14001f110:	movzx  eax,cx
   14001f113:	movzx  ecx,bx
   14001f116:	and    eax,ecx
   14001f118:	add    rsp,0x20
   14001f11c:	pop    rbx
   14001f11d:	ret    
   14001f11e:	int3   
   14001f11f:	int3   
   14001f120:	mov    r9,r8
   14001f123:	mov    r8,rdx
   14001f126:	mov    rdx,rcx
   14001f129:	lea    rcx,[rip+0xffffffffffff34a8]        # 0x1400125d8
   14001f130:	jmp    0x14001f198
   14001f135:	int3   
   14001f136:	int3   
   14001f137:	int3   
   14001f138:	mov    r9,rdx
   14001f13b:	mov    rdx,rcx
   14001f13e:	lea    rcx,[rip+0x5bbb]        # 0x140024d00
   14001f145:	xor    r8d,r8d
   14001f148:	jmp    0x14001f198
   14001f14d:	int3   
   14001f14e:	int3   
   14001f14f:	int3   
   14001f150:	mov    r9,r8
   14001f153:	mov    r8,rdx
   14001f156:	mov    rdx,rcx
   14001f159:	lea    rcx,[rip+0x5ba0]        # 0x140024d00
   14001f160:	jmp    0x14001f198
   14001f165:	int3   
   14001f166:	int3   
   14001f167:	int3   
   14001f168:	mov    r9,r8
   14001f16b:	mov    r8,rdx
   14001f16e:	mov    rdx,rcx
   14001f171:	lea    rcx,[rip+0x5030]        # 0x1400241a8
   14001f178:	jmp    0x14001f198
   14001f17d:	int3   
   14001f17e:	int3   
   14001f17f:	int3   
   14001f180:	mov    r9,rdx
   14001f183:	mov    rdx,rcx
   14001f186:	lea    rcx,[rip+0xffffffffffff344b]        # 0x1400125d8
   14001f18d:	xor    r8d,r8d
   14001f190:	jmp    0x14001f198
   14001f195:	int3   
   14001f196:	int3   
   14001f197:	int3   
   14001f198:	mov    QWORD PTR [rsp+0x8],rbx
   14001f19d:	mov    QWORD PTR [rsp+0x18],rsi
   14001f1a2:	mov    QWORD PTR [rsp+0x20],rdi
   14001f1a7:	push   r12
   14001f1a9:	push   r14
   14001f1ab:	push   r15
   14001f1ad:	sub    rsp,0x20
   14001f1b1:	mov    r14,r9
   14001f1b4:	mov    r15,r8
   14001f1b7:	mov    rsi,rdx
   14001f1ba:	mov    r12,rcx
   14001f1bd:	call   0x140010e04
   14001f1c2:	lea    rdi,[rax+0x30]
   14001f1c6:	mov    QWORD PTR [rsp+0x48],rdi
   14001f1cb:	xor    eax,eax
   14001f1cd:	test   rsi,rsi
   14001f1d0:	setne  al
   14001f1d3:	test   eax,eax
   14001f1d5:	jne    0x14001f1ec
   14001f1d7:	call   0x140009cb4
   14001f1dc:	mov    DWORD PTR [rax],0x16
   14001f1e2:	call   0x140008d58
   14001f1e7:	or     eax,0xffffffff
   14001f1ea:	jmp    0x14001f225
   14001f1ec:	mov    rcx,rdi
   14001f1ef:	call   0x140010e0c
   14001f1f4:	nop
   14001f1f5:	mov    rcx,rdi
   14001f1f8:	call   0x1400109f0
   14001f1fd:	mov    ebx,eax
   14001f1ff:	mov    r9,r14
   14001f202:	mov    r8,r15
   14001f205:	mov    rdx,rsi
   14001f208:	mov    rcx,rdi
   14001f20b:	call   r12
   14001f20e:	mov    esi,eax
   14001f210:	mov    rdx,rdi
   14001f213:	mov    ecx,ebx
   14001f215:	call   0x1400109b8
   14001f21a:	nop
   14001f21b:	mov    rcx,rdi
   14001f21e:	call   0x140010ea8
   14001f223:	mov    eax,esi
   14001f225:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f22a:	mov    rsi,QWORD PTR [rsp+0x50]
   14001f22f:	mov    rdi,QWORD PTR [rsp+0x58]
   14001f234:	add    rsp,0x20
   14001f238:	pop    r15
   14001f23a:	pop    r14
   14001f23c:	pop    r12
   14001f23e:	ret    
   14001f23f:	int3   
   14001f240:	mov    r9,rdx
   14001f243:	mov    rdx,rcx
   14001f246:	lea    rcx,[rip+0x4f5b]        # 0x1400241a8
   14001f24d:	xor    r8d,r8d
   14001f250:	jmp    0x14001f198
   14001f255:	int3   
   14001f256:	int3   
   14001f257:	int3   
   14001f258:	mov    rax,rsp
   14001f25b:	mov    QWORD PTR [rax+0x8],rbx
   14001f25f:	mov    QWORD PTR [rax+0x10],rsi
   14001f263:	push   rdi
   14001f264:	sub    rsp,0x50
   14001f268:	mov    rdi,rcx
   14001f26b:	movzx  ebx,dx
   14001f26e:	lea    rcx,[rax-0x28]
   14001f272:	or     esi,0xffffffff
   14001f275:	mov    rdx,r8
   14001f278:	mov    DWORD PTR [rax+0x20],esi
   14001f27b:	call   0x140008fac
   14001f280:	mov    rax,QWORD PTR [rsp+0x30]
   14001f285:	movsxd r8,DWORD PTR [rax+0xd4]
   14001f28c:	lea    rax,[rsp+0x30]
   14001f291:	lea    rcx,[rsp+0x78]
   14001f296:	movzx  r9d,bx
   14001f29a:	mov    rdx,rdi
   14001f29d:	mov    QWORD PTR [rsp+0x20],rax
   14001f2a2:	call   0x14001f2d4
   14001f2a7:	test   eax,eax
   14001f2a9:	cmove  esi,DWORD PTR [rsp+0x78]
   14001f2ae:	cmp    BYTE PTR [rsp+0x48],0x0
   14001f2b3:	je     0x14001f2c1
   14001f2b5:	mov    rax,QWORD PTR [rsp+0x40]
   14001f2ba:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001f2c1:	mov    rbx,QWORD PTR [rsp+0x60]
   14001f2c6:	mov    eax,esi
   14001f2c8:	mov    rsi,QWORD PTR [rsp+0x68]
   14001f2cd:	add    rsp,0x50
   14001f2d1:	pop    rdi
   14001f2d2:	ret    
   14001f2d3:	int3   
   14001f2d4:	mov    QWORD PTR [rsp+0x8],rbx
   14001f2d9:	mov    QWORD PTR [rsp+0x18],rsi
   14001f2de:	mov    WORD PTR [rsp+0x20],r9w
   14001f2e4:	push   rdi
   14001f2e5:	sub    rsp,0x60
   14001f2e9:	mov    rdi,r8
   14001f2ec:	mov    rsi,rdx
   14001f2ef:	mov    rbx,rcx
   14001f2f2:	test   rdx,rdx
   14001f2f5:	jne    0x14001f30a
   14001f2f7:	test   r8,r8
   14001f2fa:	je     0x14001f30a
   14001f2fc:	test   rcx,rcx
   14001f2ff:	je     0x14001f303
   14001f301:	and    DWORD PTR [rcx],edx
   14001f303:	xor    eax,eax
   14001f305:	jmp    0x14001f39f
   14001f30a:	test   rcx,rcx
   14001f30d:	je     0x14001f312
   14001f30f:	or     DWORD PTR [rcx],0xffffffff
   14001f312:	cmp    r8,0x7fffffff
   14001f319:	jbe    0x14001f32e
   14001f31b:	call   0x140009cb4
   14001f320:	mov    ebx,0x16
   14001f325:	mov    DWORD PTR [rax],ebx
   14001f327:	call   0x140008d58
   14001f32c:	jmp    0x14001f39d
   14001f32e:	mov    rdx,QWORD PTR [rsp+0x90]
   14001f336:	lea    rcx,[rsp+0x40]
   14001f33b:	call   0x140008fac
   14001f340:	mov    rax,QWORD PTR [rsp+0x40]
   14001f345:	cmp    QWORD PTR [rax+0x138],0x0
   14001f34d:	jne    0x14001f3ce
   14001f34f:	movzx  eax,WORD PTR [rsp+0x88]
   14001f357:	mov    ecx,0xff
   14001f35c:	cmp    ax,cx
   14001f35f:	jbe    0x14001f3b1
   14001f361:	test   rsi,rsi
   14001f364:	je     0x14001f378
   14001f366:	test   rdi,rdi
   14001f369:	je     0x14001f378
   14001f36b:	mov    r8,rdi
   14001f36e:	xor    edx,edx
   14001f370:	mov    rcx,rsi
   14001f373:	call   0x140006f70
   14001f378:	call   0x140009cb4
   14001f37d:	mov    DWORD PTR [rax],0x2a
   14001f383:	call   0x140009cb4
   14001f388:	mov    ebx,DWORD PTR [rax]
   14001f38a:	cmp    BYTE PTR [rsp+0x58],0x0
   14001f38f:	je     0x14001f39d
   14001f391:	mov    rcx,QWORD PTR [rsp+0x50]
   14001f396:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001f39d:	mov    eax,ebx
   14001f39f:	lea    r11,[rsp+0x60]
   14001f3a4:	mov    rbx,QWORD PTR [r11+0x10]
   14001f3a8:	mov    rsi,QWORD PTR [r11+0x20]
   14001f3ac:	mov    rsp,r11
   14001f3af:	pop    rdi
   14001f3b0:	ret    
   14001f3b1:	test   rsi,rsi
   14001f3b4:	je     0x14001f3c1
   14001f3b6:	test   rdi,rdi
   14001f3b9:	je     0x14001f448
   14001f3bf:	mov    BYTE PTR [rsi],al
   14001f3c1:	test   rbx,rbx
   14001f3c4:	je     0x14001f41b
   14001f3c6:	mov    DWORD PTR [rbx],0x1
   14001f3cc:	jmp    0x14001f41b
   14001f3ce:	and    DWORD PTR [rsp+0x78],0x0
   14001f3d3:	lea    rcx,[rsp+0x78]
   14001f3d8:	lea    r8,[rsp+0x88]
   14001f3e0:	mov    QWORD PTR [rsp+0x38],rcx
   14001f3e5:	and    QWORD PTR [rsp+0x30],0x0
   14001f3eb:	mov    ecx,DWORD PTR [rax+0x4]
   14001f3ee:	mov    r9d,0x1
   14001f3f4:	xor    edx,edx
   14001f3f6:	mov    DWORD PTR [rsp+0x28],edi
   14001f3fa:	mov    QWORD PTR [rsp+0x20],rsi
   14001f3ff:	call   QWORD PTR [rip+0xcd8b]        # 0x14002c190
   14001f405:	test   eax,eax
   14001f407:	je     0x14001f422
   14001f409:	cmp    DWORD PTR [rsp+0x78],0x0
   14001f40e:	jne    0x14001f378
   14001f414:	test   rbx,rbx
   14001f417:	je     0x14001f41b
   14001f419:	mov    DWORD PTR [rbx],eax
   14001f41b:	xor    ebx,ebx
   14001f41d:	jmp    0x14001f38a
   14001f422:	call   QWORD PTR [rip+0xcd28]        # 0x14002c150
   14001f428:	cmp    eax,0x7a
   14001f42b:	jne    0x14001f378
   14001f431:	test   rsi,rsi
   14001f434:	je     0x14001f448
   14001f436:	test   rdi,rdi
   14001f439:	je     0x14001f448
   14001f43b:	mov    r8,rdi
   14001f43e:	xor    edx,edx
   14001f440:	mov    rcx,rsi
   14001f443:	call   0x140006f70
   14001f448:	call   0x140009cb4
   14001f44d:	mov    ebx,0x22
   14001f452:	mov    DWORD PTR [rax],ebx
   14001f454:	call   0x140008d58
   14001f459:	jmp    0x14001f38a
   14001f45e:	int3   
   14001f45f:	int3   
   14001f460:	mov    QWORD PTR [rsp+0x8],rbx
   14001f465:	mov    QWORD PTR [rsp+0x10],rsi
   14001f46a:	push   rdi
   14001f46b:	sub    rsp,0x30
   14001f46f:	or     esi,0xffffffff
   14001f472:	movzx  ebx,dx
   14001f475:	mov    rdi,rcx
   14001f478:	mov    DWORD PTR [rsp+0x50],esi
   14001f47c:	call   0x1400260e0
   14001f481:	and    QWORD PTR [rsp+0x20],0x0
   14001f487:	lea    rcx,[rsp+0x50]
   14001f48c:	movsxd r8,eax
   14001f48f:	movzx  r9d,bx
   14001f493:	mov    rdx,rdi
   14001f496:	call   0x14001f2d4
   14001f49b:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f4a0:	test   eax,eax
   14001f4a2:	cmove  esi,DWORD PTR [rsp+0x50]
   14001f4a7:	mov    eax,esi
   14001f4a9:	mov    rsi,QWORD PTR [rsp+0x48]
   14001f4ae:	add    rsp,0x30
   14001f4b2:	pop    rdi
   14001f4b3:	ret    
   14001f4b4:	sub    rsp,0x38
   14001f4b8:	and    QWORD PTR [rsp+0x20],0x0
   14001f4be:	call   0x14001f2d4
   14001f4c3:	add    rsp,0x38
   14001f4c7:	ret    
   14001f4c8:	mov    QWORD PTR [rsp+0x8],rbx
   14001f4cd:	mov    QWORD PTR [rsp+0x18],rbp
   14001f4d2:	push   rsi
   14001f4d3:	push   rdi
   14001f4d4:	push   r14
   14001f4d6:	sub    rsp,0x20
   14001f4da:	mov    r14d,ecx
   14001f4dd:	mov    rcx,rdx
   14001f4e0:	mov    rbx,rdx
   14001f4e3:	call   0x140010f18
   14001f4e8:	mov    edx,DWORD PTR [rbx+0x18]
   14001f4eb:	movsxd rsi,eax
   14001f4ee:	test   dl,0x82
   14001f4f1:	jne    0x14001f50c
   14001f4f3:	call   0x140009cb4
   14001f4f8:	mov    DWORD PTR [rax],0x9
   14001f4fe:	or     DWORD PTR [rbx+0x18],0x20
   14001f502:	mov    eax,0xffff
   14001f507:	jmp    0x14001f642
   14001f50c:	test   dl,0x40
   14001f50f:	je     0x14001f51e
   14001f511:	call   0x140009cb4
   14001f516:	mov    DWORD PTR [rax],0x22
   14001f51c:	jmp    0x14001f4fe
   14001f51e:	xor    edi,edi
   14001f520:	test   dl,0x1
   14001f523:	je     0x14001f53e
   14001f525:	mov    DWORD PTR [rbx+0x8],edi
   14001f528:	test   dl,0x10
   14001f52b:	je     0x14001f5bb
   14001f531:	mov    rax,QWORD PTR [rbx+0x10]
   14001f535:	and    edx,0xfffffffe
   14001f538:	mov    QWORD PTR [rbx],rax
   14001f53b:	mov    DWORD PTR [rbx+0x18],edx
   14001f53e:	mov    eax,DWORD PTR [rbx+0x18]
   14001f541:	mov    DWORD PTR [rbx+0x8],edi
   14001f544:	and    eax,0xffffffef
   14001f547:	or     eax,0x2
   14001f54a:	mov    DWORD PTR [rbx+0x18],eax
   14001f54d:	test   eax,0x10c
   14001f552:	jne    0x14001f583
   14001f554:	call   0x140010e04
   14001f559:	add    rax,0x30
   14001f55d:	cmp    rbx,rax
   14001f560:	je     0x14001f570
   14001f562:	call   0x140010e04
   14001f567:	add    rax,0x60
   14001f56b:	cmp    rbx,rax
   14001f56e:	jne    0x14001f57b
   14001f570:	mov    ecx,esi
   14001f572:	call   0x140010f40
   14001f577:	test   eax,eax
   14001f579:	jne    0x14001f583
   14001f57b:	mov    rcx,rbx
   14001f57e:	call   0x1400119f4
   14001f583:	test   DWORD PTR [rbx+0x18],0x108
   14001f58a:	je     0x14001f61a
   14001f590:	mov    ebp,DWORD PTR [rbx]
   14001f592:	mov    rdx,QWORD PTR [rbx+0x10]
   14001f596:	sub    ebp,DWORD PTR [rbx+0x10]
   14001f599:	lea    rax,[rdx+0x2]
   14001f59d:	mov    QWORD PTR [rbx],rax
   14001f5a0:	mov    eax,DWORD PTR [rbx+0x24]
   14001f5a3:	sub    eax,0x2
   14001f5a6:	mov    DWORD PTR [rbx+0x8],eax
   14001f5a9:	test   ebp,ebp
   14001f5ab:	jle    0x14001f5c6
   14001f5ad:	mov    r8d,ebp
   14001f5b0:	mov    ecx,esi
   14001f5b2:	call   0x140010fa0
   14001f5b7:	mov    edi,eax
   14001f5b9:	jmp    0x14001f610
   14001f5bb:	or     edx,0x20
   14001f5be:	mov    DWORD PTR [rbx+0x18],edx
   14001f5c1:	jmp    0x14001f502
   14001f5c6:	lea    eax,[rsi+0x2]
   14001f5c9:	cmp    eax,0x1
   14001f5cc:	jbe    0x14001f5ec
   14001f5ce:	mov    rcx,rsi
   14001f5d1:	mov    rax,rsi
   14001f5d4:	lea    r8,[rip+0x1e735]        # 0x14003dd10
   14001f5db:	and    ecx,0x1f
   14001f5de:	sar    rax,0x5
   14001f5e2:	imul   rdx,rcx,0x58
   14001f5e6:	add    rdx,QWORD PTR [r8+rax*8]
   14001f5ea:	jmp    0x14001f5f3
   14001f5ec:	lea    rdx,[rip+0x1cc3d]        # 0x14003c230
   14001f5f3:	test   BYTE PTR [rdx+0x8],0x20
   14001f5f7:	je     0x14001f610
   14001f5f9:	xor    edx,edx
   14001f5fb:	mov    ecx,esi
   14001f5fd:	lea    r8d,[rdx+0x2]
   14001f601:	call   0x140011878
   14001f606:	cmp    rax,0xffffffffffffffff
   14001f60a:	je     0x14001f4fe
   14001f610:	mov    rax,QWORD PTR [rbx+0x10]
   14001f614:	mov    WORD PTR [rax],r14w
   14001f618:	jmp    0x14001f636
   14001f61a:	mov    ebp,0x2
   14001f61f:	lea    rdx,[rsp+0x48]
   14001f624:	mov    ecx,esi
   14001f626:	mov    r8d,ebp
   14001f629:	mov    WORD PTR [rsp+0x48],r14w
   14001f62f:	call   0x140010fa0
   14001f634:	mov    edi,eax
   14001f636:	cmp    edi,ebp
   14001f638:	jne    0x14001f4fe
   14001f63e:	movzx  eax,r14w
   14001f642:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f647:	mov    rbp,QWORD PTR [rsp+0x50]
   14001f64c:	add    rsp,0x20
   14001f650:	pop    r14
   14001f652:	pop    rdi
   14001f653:	pop    rsi
   14001f654:	ret    
   14001f655:	int3   
   14001f656:	int3   
   14001f657:	int3   
   14001f658:	sub    rsp,0x28
   14001f65c:	call   0x14000a3ec
   14001f661:	mov    rcx,QWORD PTR [rax+0xc0]
   14001f668:	cmp    rcx,QWORD PTR [rip+0x1da31]        # 0x14003d0a0
   14001f66f:	je     0x14001f687
   14001f671:	mov    eax,DWORD PTR [rax+0xc8]
   14001f677:	test   DWORD PTR [rip+0x1db9b],eax        # 0x14003d218
   14001f67d:	jne    0x14001f687
   14001f67f:	call   0x140011d10
   14001f684:	mov    rcx,rax
   14001f687:	mov    rax,QWORD PTR [rcx+0x108]
   14001f68e:	add    rsp,0x28
   14001f692:	ret    
   14001f693:	int3   
   14001f694:	mov    rax,QWORD PTR [rip+0x1de25]        # 0x14003d4c0
   14001f69b:	ret    
   14001f69c:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f6a2:	mov    rcx,QWORD PTR [rsp+0x8]
   14001f6a7:	mov    eax,0x7ff
   14001f6ac:	shr    rcx,0x30
   14001f6b0:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001f6b6:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001f6bc:	shr    cx,0x4
   14001f6c0:	and    cx,ax
   14001f6c3:	mov    rax,QWORD PTR [rsp+0x20]
   14001f6c8:	add    cx,dx
   14001f6cb:	shr    rax,0x30
   14001f6cf:	mov    edx,0x800f
   14001f6d4:	and    ax,dx
   14001f6d7:	shl    cx,0x4
   14001f6db:	or     cx,ax
   14001f6de:	mov    WORD PTR [rsp+0x1e],cx
   14001f6e3:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001f6e9:	ret    
   14001f6ea:	int3   
   14001f6eb:	int3   
   14001f6ec:	movaps xmm1,xmm0
   14001f6ef:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f6f5:	xorps  xmm0,xmm0
   14001f6f8:	mov    r10,rdx
   14001f6fb:	ucomisd xmm1,xmm0
   14001f6ff:	jp     0x14001f70a
   14001f701:	jne    0x14001f70a
   14001f703:	xor    ecx,ecx
   14001f705:	jmp    0x14001f81c
   14001f70a:	mov    rax,QWORD PTR [rsp+0x8]
   14001f70f:	mov    ecx,0x7ff0
   14001f714:	mov    r8,rax
   14001f717:	shr    r8,0x30
   14001f71b:	test   cx,r8w
   14001f71f:	jne    0x14001f7d2
   14001f725:	mov    edx,DWORD PTR [rsp+0x8]
   14001f729:	shr    rax,0x20
   14001f72d:	test   eax,0xfffff
   14001f732:	jne    0x14001f73c
   14001f734:	test   edx,edx
   14001f736:	je     0x14001f7d2
   14001f73c:	xor    r9d,r9d
   14001f73f:	comisd xmm0,xmm1
   14001f743:	mov    ecx,0xfffffc03
   14001f748:	seta   r9b
   14001f74c:	test   r8b,0x10
   14001f750:	jne    0x14001f776
   14001f752:	mov    eax,DWORD PTR [rsp+0xc]
   14001f756:	add    eax,eax
   14001f758:	mov    DWORD PTR [rsp+0xc],eax
   14001f75c:	test   edx,edx
   14001f75e:	jns    0x14001f767
   14001f760:	or     eax,0x1
   14001f763:	mov    DWORD PTR [rsp+0xc],eax
   14001f767:	add    edx,edx
   14001f769:	dec    ecx
   14001f76b:	test   BYTE PTR [rsp+0xe],0x10
   14001f770:	je     0x14001f756
   14001f772:	mov    DWORD PTR [rsp+0x8],edx
   14001f776:	movzx  eax,WORD PTR [rsp+0xe]
   14001f77b:	mov    edx,0xffef
   14001f780:	and    ax,dx
   14001f783:	mov    WORD PTR [rsp+0xe],ax
   14001f788:	test   r9d,r9d
   14001f78b:	je     0x14001f79a
   14001f78d:	mov    edx,0x8000
   14001f792:	or     ax,dx
   14001f795:	mov    WORD PTR [rsp+0xe],ax
   14001f79a:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14001f7a0:	mov    edx,0xbfef
   14001f7a5:	movsd  QWORD PTR [rsp+0x10],xmm0
   14001f7ab:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f7b1:	mov    rax,QWORD PTR [rsp+0x10]
   14001f7b6:	shr    rax,0x30
   14001f7ba:	and    ax,dx
   14001f7bd:	mov    edx,0x3fe0
   14001f7c2:	or     ax,dx
   14001f7c5:	mov    WORD PTR [rsp+0xe],ax
   14001f7ca:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14001f7d0:	jmp    0x14001f81c
   14001f7d2:	mov    edx,0xbfef
   14001f7d7:	movsd  QWORD PTR [rsp+0x10],xmm1
   14001f7dd:	mov    ecx,0x7ff
   14001f7e2:	movsd  QWORD PTR [rsp+0x18],xmm1
   14001f7e8:	mov    rax,QWORD PTR [rsp+0x18]
   14001f7ed:	shr    rax,0x30
   14001f7f1:	and    ax,dx
   14001f7f4:	mov    edx,0x3fe0
   14001f7f9:	or     ax,dx
   14001f7fc:	mov    WORD PTR [rsp+0x16],ax
   14001f801:	movzx  eax,WORD PTR [rsp+0xe]
   14001f806:	shr    ax,0x4
   14001f80a:	movsd  xmm0,QWORD PTR [rsp+0x10]
   14001f810:	and    ax,cx
   14001f813:	movsx  ecx,ax
   14001f816:	sub    ecx,0x3fe
   14001f81c:	mov    DWORD PTR [r10],ecx
   14001f81f:	ret    
   14001f820:	mov    ecx,0x7ff
   14001f825:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f82b:	mov    rax,QWORD PTR [rsp+0x8]
   14001f830:	shr    rax,0x30
   14001f834:	shr    ax,0x4
   14001f838:	and    ax,cx
   14001f83b:	mov    ecx,0x3fe
   14001f840:	sub    ax,cx
   14001f843:	cwde   
   14001f844:	ret    
   14001f845:	int3   
   14001f846:	int3   
   14001f847:	int3   
   14001f848:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f84e:	mov    rax,QWORD PTR [rsp+0x8]
   14001f853:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001f859:	shr    rax,0x30
   14001f85d:	mov    ecx,0x800f
   14001f862:	shl    dx,0x4
   14001f866:	and    ax,cx
   14001f869:	or     ax,dx
   14001f86c:	mov    WORD PTR [rsp+0x1e],ax
   14001f871:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001f877:	ret    
   14001f878:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f87e:	mov    rax,QWORD PTR [rsp+0x8]
   14001f883:	mov    ecx,0x800f
   14001f888:	shr    rax,0x30
   14001f88c:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001f892:	and    ax,cx
   14001f895:	mov    ecx,0x3fe
   14001f89a:	add    dx,cx
   14001f89d:	shl    dx,0x4
   14001f8a1:	or     ax,dx
   14001f8a4:	mov    WORD PTR [rsp+0x1e],ax
   14001f8a9:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001f8af:	ret    
   14001f8b0:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001f8b6:	mov    rax,QWORD PTR [rsp+0x8]
   14001f8bb:	mov    rcx,rax
   14001f8be:	shr    rcx,0x20
   14001f8c2:	cmp    ecx,0x7ff00000
   14001f8c8:	jne    0x14001f8d4
   14001f8ca:	test   eax,eax
   14001f8cc:	jne    0x14001f8d4
   14001f8ce:	mov    eax,0x1
   14001f8d3:	ret    
   14001f8d4:	cmp    ecx,0xfff00000
   14001f8da:	jne    0x14001f8e6
   14001f8dc:	test   eax,eax
   14001f8de:	jne    0x14001f8e6
   14001f8e0:	mov    eax,0x2
   14001f8e5:	ret    
   14001f8e6:	mov    r8d,0x7ff8
   14001f8ec:	mov    rdx,rax
   14001f8ef:	shr    rdx,0x30
   14001f8f3:	and    dx,r8w
   14001f8f7:	cmp    dx,r8w
   14001f8fb:	jne    0x14001f903
   14001f8fd:	mov    eax,0x3
   14001f902:	ret    
   14001f903:	mov    r8d,0x7ff0
   14001f909:	cmp    dx,r8w
   14001f90d:	jne    0x14001f921
   14001f90f:	test   ecx,0x7ffff
   14001f915:	jne    0x14001f91b
   14001f917:	test   eax,eax
   14001f919:	je     0x14001f921
   14001f91b:	mov    eax,0x4
   14001f920:	ret    
   14001f921:	xor    eax,eax
   14001f923:	ret    
   14001f924:	xor    edx,edx
   14001f926:	lea    r8d,[rdx+0xa]
   14001f92a:	jmp    0x1400267c4
   14001f92f:	int3   
   14001f930:	mov    r9,rdx
   14001f933:	xor    edx,edx
   14001f935:	lea    r8d,[rdx+0xa]
   14001f939:	jmp    0x1400267f4
   14001f93e:	int3   
   14001f93f:	int3   
   14001f940:	mov    r9,rdx
   14001f943:	xor    edx,edx
   14001f945:	lea    r8d,[rdx+0xa]
   14001f949:	jmp    0x140026b9c
   14001f94e:	int3   
   14001f94f:	int3   
   14001f950:	mov    r9,rdx
   14001f953:	xor    edx,edx
   14001f955:	lea    r8d,[rdx+0xa]
   14001f959:	jmp    0x140026b9c
   14001f95e:	int3   
   14001f95f:	int3   
   14001f960:	mov    r9,rdx
   14001f963:	xor    edx,edx
   14001f965:	lea    r8d,[rdx+0xa]
   14001f969:	jmp    0x1400267f4
   14001f96e:	int3   
   14001f96f:	int3   
   14001f970:	xor    edx,edx
   14001f972:	lea    r8d,[rdx+0xa]
   14001f976:	jmp    0x140026be8
   14001f97b:	int3   
   14001f97c:	xor    edx,edx
   14001f97e:	lea    r8d,[rdx+0xa]
   14001f982:	jmp    0x140026be8
   14001f987:	int3   
   14001f988:	xor    edx,edx
   14001f98a:	lea    r8d,[rdx+0xa]
   14001f98e:	jmp    0x1400267c4
   14001f993:	int3   
   14001f994:	cmp    DWORD PTR [rip+0x1f5ed],0x0        # 0x14003ef88
   14001f99b:	jne    0x14001f9ae
   14001f99d:	mov    rax,QWORD PTR [rip+0x1d814]        # 0x14003d1b8
   14001f9a4:	movsxd rcx,ecx
   14001f9a7:	movzx  eax,WORD PTR [rax+rcx*2]
   14001f9ab:	and    eax,edx
   14001f9ad:	ret    
   14001f9ae:	xor    r8d,r8d
   14001f9b1:	jmp    0x14001f9b8
   14001f9b6:	int3   
   14001f9b7:	int3   
   14001f9b8:	mov    QWORD PTR [rsp+0x10],rsi
   14001f9bd:	push   rbp
   14001f9be:	push   rdi
   14001f9bf:	push   r14
   14001f9c1:	mov    rbp,rsp
   14001f9c4:	sub    rsp,0x60
   14001f9c8:	movsxd rdi,ecx
   14001f9cb:	mov    r14d,edx
   14001f9ce:	lea    rcx,[rbp-0x20]
   14001f9d2:	mov    rdx,r8
   14001f9d5:	call   0x140008fac
   14001f9da:	lea    eax,[rdi+0x1]
   14001f9dd:	cmp    eax,0x100
   14001f9e2:	ja     0x14001f9f5
   14001f9e4:	mov    rax,QWORD PTR [rbp-0x20]
   14001f9e8:	mov    rcx,QWORD PTR [rax+0x108]
   14001f9ef:	movzx  eax,WORD PTR [rcx+rdi*2]
   14001f9f3:	jmp    0x14001fa6e
   14001f9f5:	mov    esi,edi
   14001f9f7:	lea    rdx,[rbp-0x20]
   14001f9fb:	sar    esi,0x8
   14001f9fe:	movzx  ecx,sil
   14001fa02:	call   0x140011e44
   14001fa07:	mov    edx,0x1
   14001fa0c:	test   eax,eax
   14001fa0e:	je     0x14001fa22
   14001fa10:	mov    BYTE PTR [rbp+0x38],sil
   14001fa14:	mov    BYTE PTR [rbp+0x39],dil
   14001fa18:	mov    BYTE PTR [rbp+0x3a],0x0
   14001fa1c:	lea    r9d,[rdx+0x1]
   14001fa20:	jmp    0x14001fa2d
   14001fa22:	mov    BYTE PTR [rbp+0x38],dil
   14001fa26:	mov    BYTE PTR [rbp+0x39],0x0
   14001fa2a:	mov    r9d,edx
   14001fa2d:	mov    rax,QWORD PTR [rbp-0x20]
   14001fa31:	mov    DWORD PTR [rsp+0x30],edx
   14001fa35:	lea    r8,[rbp+0x38]
   14001fa39:	mov    ecx,DWORD PTR [rax+0x4]
   14001fa3c:	lea    rax,[rbp+0x20]
   14001fa40:	mov    DWORD PTR [rsp+0x28],ecx
   14001fa44:	lea    rcx,[rbp-0x20]
   14001fa48:	mov    QWORD PTR [rsp+0x20],rax
   14001fa4d:	call   0x14001cd64
   14001fa52:	test   eax,eax
   14001fa54:	jne    0x14001fa6a
   14001fa56:	cmp    BYTE PTR [rbp-0x8],al
   14001fa59:	je     0x14001fa66
   14001fa5b:	mov    rax,QWORD PTR [rbp-0x10]
   14001fa5f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001fa66:	xor    eax,eax
   14001fa68:	jmp    0x14001fa82
   14001fa6a:	movzx  eax,WORD PTR [rbp+0x20]
   14001fa6e:	and    eax,r14d
   14001fa71:	cmp    BYTE PTR [rbp-0x8],0x0
   14001fa75:	je     0x14001fa82
   14001fa77:	mov    rcx,QWORD PTR [rbp-0x10]
   14001fa7b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001fa82:	mov    rsi,QWORD PTR [rsp+0x88]
   14001fa8a:	add    rsp,0x60
   14001fa8e:	pop    r14
   14001fa90:	pop    rdi
   14001fa91:	pop    rbp
   14001fa92:	ret    
   14001fa93:	int3   
   14001fa94:	xor    eax,eax
   14001fa96:	ret    
   14001fa97:	int3   
   14001fa98:	rex push rdi
   14001fa9a:	sub    rsp,0x20
   14001fa9e:	lea    rdi,[rip+0x1d60b]        # 0x14003d0b0
   14001faa5:	cmp    QWORD PTR [rip+0x1d5f4],rdi        # 0x14003d0a0
   14001faac:	je     0x14001fad9
   14001faae:	mov    ecx,0xc
   14001fab3:	call   0x14000fc2c
   14001fab8:	nop
   14001fab9:	mov    rdx,rdi
   14001fabc:	lea    rcx,[rip+0x1d5dd]        # 0x14003d0a0
   14001fac3:	call   0x140011d88
   14001fac8:	mov    QWORD PTR [rip+0x1d5d1],rax        # 0x14003d0a0
   14001facf:	mov    ecx,0xc
   14001fad4:	call   0x14000fe48
   14001fad9:	add    rsp,0x20
   14001fadd:	pop    rdi
   14001fade:	ret    
   14001fadf:	int3   
   14001fae0:	mov    eax,DWORD PTR [rip+0x1f4aa]        # 0x14003ef90
   14001fae6:	ret    
   14001fae7:	int3   
   14001fae8:	lea    rax,[rip+0x1f49d]        # 0x14003ef8c
   14001faef:	ret    
   14001faf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001faf5:	mov    QWORD PTR [rsp+0x10],rsi
   14001fafa:	push   rdi
   14001fafb:	sub    rsp,0x30
   14001faff:	mov    rdi,rcx
   14001fb02:	test   rcx,rcx
   14001fb05:	jne    0x14001fb19
   14001fb07:	xor    eax,eax
   14001fb09:	mov    rbx,QWORD PTR [rsp+0x40]
   14001fb0e:	mov    rsi,QWORD PTR [rsp+0x48]
   14001fb13:	add    rsp,0x30
   14001fb17:	pop    rdi
   14001fb18:	ret    
   14001fb19:	mov    edx,0x55
   14001fb1e:	call   0x14001c82c
   14001fb23:	mov    rsi,rax
   14001fb26:	cmp    rax,0x55
   14001fb2a:	jae    0x14001fb07
   14001fb2c:	lea    rcx,[rax*2+0x2]
   14001fb34:	call   0x140008684
   14001fb39:	mov    rbx,rax
   14001fb3c:	test   rax,rax
   14001fb3f:	je     0x14001fb07
   14001fb41:	lea    rdx,[rsi+0x1]
   14001fb45:	mov    r8,rdi
   14001fb48:	mov    rcx,rax
   14001fb4b:	mov    r9,rdx
   14001fb4e:	call   0x14001c4c8
   14001fb53:	test   eax,eax
   14001fb55:	jne    0x14001fb5c
   14001fb57:	mov    rax,rbx
   14001fb5a:	jmp    0x14001fb09
   14001fb5c:	and    QWORD PTR [rsp+0x20],0x0
   14001fb62:	xor    r9d,r9d
   14001fb65:	xor    r8d,r8d
   14001fb68:	xor    edx,edx
   14001fb6a:	xor    ecx,ecx
   14001fb6c:	call   0x140008da8
   14001fb71:	int3   
   14001fb72:	int3   
   14001fb73:	int3   
   14001fb74:	jmp    0x14001ff10
   14001fb79:	int3   
   14001fb7a:	int3   
   14001fb7b:	int3   
   14001fb7c:	jmp    0x14002035c
   14001fb81:	int3   
   14001fb82:	int3   
   14001fb83:	int3   
   14001fb84:	jmp    0x1400203f8
   14001fb89:	int3   
   14001fb8a:	int3   
   14001fb8b:	int3   
   14001fb8c:	mov    QWORD PTR [rsp+0x8],rbx
   14001fb91:	mov    QWORD PTR [rsp+0x10],rbp
   14001fb96:	mov    QWORD PTR [rsp+0x18],rsi
   14001fb9b:	push   rdi
   14001fb9c:	sub    rsp,0x30
   14001fba0:	mov    rbx,r8
   14001fba3:	mov    rdi,rdx
   14001fba6:	mov    rsi,rcx
   14001fba9:	call   0x14001c440
   14001fbae:	xor    ebp,ebp
   14001fbb0:	test   eax,eax
   14001fbb2:	jne    0x14001fc19
   14001fbb4:	lea    rax,[rbx+0x80]
   14001fbbb:	cmp    WORD PTR [rax],bp
   14001fbbe:	je     0x14001fbdb
   14001fbc0:	lea    r9,[rip+0x14fb9]        # 0x140034b80
   14001fbc7:	lea    r8d,[rbp+0x2]
   14001fbcb:	mov    rdx,rdi
   14001fbce:	mov    rcx,rsi
   14001fbd1:	mov    QWORD PTR [rsp+0x20],rax
   14001fbd6:	call   0x140020594
   14001fbdb:	lea    rax,[rbx+0x100]
   14001fbe2:	cmp    WORD PTR [rax],bp
   14001fbe5:	je     0x14001fc04
   14001fbe7:	lea    r9,[rip+0x14f96]        # 0x140034b84
   14001fbee:	mov    r8d,0x2
   14001fbf4:	mov    rdx,rdi
   14001fbf7:	mov    rcx,rsi
   14001fbfa:	mov    QWORD PTR [rsp+0x20],rax
   14001fbff:	call   0x140020594
   14001fc04:	mov    rbx,QWORD PTR [rsp+0x40]
   14001fc09:	mov    rbp,QWORD PTR [rsp+0x48]
   14001fc0e:	mov    rsi,QWORD PTR [rsp+0x50]
   14001fc13:	add    rsp,0x30
   14001fc17:	pop    rdi
   14001fc18:	ret    
   14001fc19:	xor    r9d,r9d
   14001fc1c:	xor    r8d,r8d
   14001fc1f:	xor    edx,edx
   14001fc21:	xor    ecx,ecx
   14001fc23:	mov    QWORD PTR [rsp+0x20],rbp
   14001fc28:	call   0x140008da8
   14001fc2d:	int3   
   14001fc2e:	int3   
   14001fc2f:	int3   
   14001fc30:	mov    QWORD PTR [rsp+0x8],rbx
   14001fc35:	mov    QWORD PTR [rsp+0x10],rbp
   14001fc3a:	mov    QWORD PTR [rsp+0x18],rsi
   14001fc3f:	push   rdi
   14001fc40:	push   r14
   14001fc42:	push   r15
   14001fc44:	sub    rsp,0x30
   14001fc48:	mov    rbx,rdx
   14001fc4b:	mov    r8d,0x1ca
   14001fc51:	xor    edx,edx
   14001fc53:	mov    rsi,rcx
   14001fc56:	call   0x140006f70
   14001fc5b:	xor    r15d,r15d
   14001fc5e:	cmp    WORD PTR [rbx],r15w
   14001fc62:	jne    0x14001fc6b
   14001fc64:	xor    eax,eax
   14001fc66:	jmp    0x14001fd78
   14001fc6b:	cmp    WORD PTR [rbx],0x2e
   14001fc6f:	jne    0x14001fca2
   14001fc71:	lea    r8,[rbx+0x2]
   14001fc75:	cmp    WORD PTR [r8],r15w
   14001fc79:	je     0x14001fca2
   14001fc7b:	mov    edx,0x10
   14001fc80:	lea    rcx,[rsi+0x100]
   14001fc87:	lea    r9d,[rdx-0x1]
   14001fc8b:	call   0x14001c4c8
   14001fc90:	test   eax,eax
   14001fc92:	jne    0x14001fd91
   14001fc98:	mov    WORD PTR [rsi+0x11e],r15w
   14001fca0:	jmp    0x14001fc64
   14001fca2:	mov    ebp,r15d
   14001fca5:	lea    rdx,[rip+0x14ecc]        # 0x140034b78
   14001fcac:	mov    rcx,rbx
   14001fcaf:	call   0x140026c8c
   14001fcb4:	test   rax,rax
   14001fcb7:	je     0x14001fd75
   14001fcbd:	lea    r14,[rbx+rax*2]
   14001fcc1:	movzx  edi,WORD PTR [r14]
   14001fcc5:	test   ebp,ebp
   14001fcc7:	jne    0x14001fcf7
   14001fcc9:	cmp    rax,0x40
   14001fccd:	jae    0x14001fd75
   14001fcd3:	cmp    di,0x2e
   14001fcd7:	je     0x14001fd75
   14001fcdd:	lea    edx,[rbp+0x40]
   14001fce0:	mov    r9,rax
   14001fce3:	mov    r8,rbx
   14001fce6:	mov    rcx,rsi
   14001fce9:	call   0x14001c4c8
   14001fcee:	test   eax,eax
   14001fcf0:	je     0x14001fd57
   14001fcf2:	jmp    0x14001fda6
   14001fcf7:	cmp    ebp,0x1
   14001fcfa:	jne    0x14001fd26
   14001fcfc:	cmp    rax,0x40
   14001fd00:	jae    0x14001fd75
   14001fd02:	cmp    di,0x5f
   14001fd06:	je     0x14001fd75
   14001fd08:	lea    rcx,[rsi+0x80]
   14001fd0f:	lea    edx,[rbp+0x3f]
   14001fd12:	mov    r9,rax
   14001fd15:	mov    r8,rbx
   14001fd18:	call   0x14001c4c8
   14001fd1d:	test   eax,eax
   14001fd1f:	je     0x14001fd57
   14001fd21:	jmp    0x14001fdbb
   14001fd26:	cmp    ebp,0x2
   14001fd29:	jne    0x14001fd75
   14001fd2b:	cmp    rax,0x10
   14001fd2f:	jae    0x14001fd75
   14001fd31:	test   di,di
   14001fd34:	je     0x14001fd3c
   14001fd36:	cmp    di,0x2c
   14001fd3a:	jne    0x14001fd75
   14001fd3c:	lea    rcx,[rsi+0x100]
   14001fd43:	mov    r9,rax
   14001fd46:	mov    r8,rbx
   14001fd49:	mov    edx,0x10
   14001fd4e:	call   0x14001c4c8
   14001fd53:	test   eax,eax
   14001fd55:	jne    0x14001fdd0
   14001fd57:	cmp    di,0x2c
   14001fd5b:	je     0x14001fc64
   14001fd61:	test   di,di
   14001fd64:	je     0x14001fc64
   14001fd6a:	lea    rbx,[r14+0x2]
   14001fd6e:	inc    ebp
   14001fd70:	jmp    0x14001fca5
   14001fd75:	or     eax,0xffffffff
   14001fd78:	mov    rbx,QWORD PTR [rsp+0x50]
   14001fd7d:	mov    rbp,QWORD PTR [rsp+0x58]
   14001fd82:	mov    rsi,QWORD PTR [rsp+0x60]
   14001fd87:	add    rsp,0x30
   14001fd8b:	pop    r15
   14001fd8d:	pop    r14
   14001fd8f:	pop    rdi
   14001fd90:	ret    
   14001fd91:	xor    r9d,r9d
   14001fd94:	xor    r8d,r8d
   14001fd97:	xor    edx,edx
   14001fd99:	xor    ecx,ecx
   14001fd9b:	mov    QWORD PTR [rsp+0x20],r15
   14001fda0:	call   0x140008da8
   14001fda5:	int3   
   14001fda6:	xor    r9d,r9d
   14001fda9:	xor    r8d,r8d
   14001fdac:	xor    edx,edx
   14001fdae:	xor    ecx,ecx
   14001fdb0:	mov    QWORD PTR [rsp+0x20],r15
   14001fdb5:	call   0x140008da8
   14001fdba:	int3   
   14001fdbb:	xor    r9d,r9d
   14001fdbe:	xor    r8d,r8d
   14001fdc1:	xor    edx,edx
   14001fdc3:	xor    ecx,ecx
   14001fdc5:	mov    QWORD PTR [rsp+0x20],r15
   14001fdca:	call   0x140008da8
   14001fdcf:	int3   
   14001fdd0:	xor    r9d,r9d
   14001fdd3:	xor    r8d,r8d
   14001fdd6:	xor    edx,edx
   14001fdd8:	xor    ecx,ecx
   14001fdda:	mov    QWORD PTR [rsp+0x20],r15
   14001fddf:	call   0x140008da8
   14001fde4:	int3   
   14001fde5:	int3   
   14001fde6:	int3   
   14001fde7:	int3   
   14001fde8:	rex push rbx
   14001fdea:	sub    rsp,0x20
   14001fdee:	mov    ebx,ecx
   14001fdf0:	call   0x14000a3ec
   14001fdf5:	mov    r8d,DWORD PTR [rax+0xc8]
   14001fdfc:	mov    edx,r8d
   14001fdff:	and    dl,0x2
   14001fe02:	neg    dl
   14001fe04:	sbb    ecx,ecx
   14001fe06:	cmp    ebx,0xffffffff
   14001fe09:	je     0x14001fe41
   14001fe0b:	test   ebx,ebx
   14001fe0d:	je     0x14001fe48
   14001fe0f:	cmp    ebx,0x1
   14001fe12:	je     0x14001fe34
   14001fe14:	cmp    ebx,0x2
   14001fe17:	je     0x14001fe2e
   14001fe19:	call   0x140009cb4
   14001fe1e:	mov    DWORD PTR [rax],0x16
   14001fe24:	call   0x140008d58
   14001fe29:	or     eax,0xffffffff
   14001fe2c:	jmp    0x14001fe4b
   14001fe2e:	and    r8d,0xfffffffd
   14001fe32:	jmp    0x14001fe38
   14001fe34:	or     r8d,0x2
   14001fe38:	mov    DWORD PTR [rax+0xc8],r8d
   14001fe3f:	jmp    0x14001fe48
   14001fe41:	or     DWORD PTR [rip+0x1d3d0],0xffffffff        # 0x14003d218
   14001fe48:	lea    eax,[rcx+0x2]
   14001fe4b:	add    rsp,0x20
   14001fe4f:	pop    rbx
   14001fe50:	ret    
   14001fe51:	int3   
   14001fe52:	int3   
   14001fe53:	int3   
   14001fe54:	sub    rsp,0x28
   14001fe58:	test   rdx,rdx
   14001fe5b:	je     0x14001ff0b
   14001fe61:	test   rcx,rcx
   14001fe64:	je     0x14001ff0b
   14001fe6a:	cmp    rcx,rdx
   14001fe6d:	je     0x14001ff0b
   14001fe73:	mov    eax,0x2
   14001fe78:	mov    r8,rcx
   14001fe7b:	lea    r9d,[rax+0x7e]
   14001fe7f:	movups xmm0,XMMWORD PTR [rdx]
   14001fe82:	movups XMMWORD PTR [r8],xmm0
   14001fe86:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14001fe8a:	movups XMMWORD PTR [r8+0x10],xmm1
   14001fe8f:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14001fe93:	movups XMMWORD PTR [r8+0x20],xmm0
   14001fe98:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14001fe9c:	movups XMMWORD PTR [r8+0x30],xmm1
   14001fea1:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14001fea5:	movups XMMWORD PTR [r8+0x40],xmm0
   14001feaa:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14001feae:	movups XMMWORD PTR [r8+0x50],xmm1
   14001feb3:	movups xmm0,XMMWORD PTR [rdx+0x60]
   14001feb7:	movups XMMWORD PTR [r8+0x60],xmm0
   14001febc:	movups xmm1,XMMWORD PTR [rdx+0x70]
   14001fec0:	add    r8,r9
   14001fec3:	add    rdx,r9
   14001fec6:	movups XMMWORD PTR [r8-0x10],xmm1
   14001fecb:	dec    rax
   14001fece:	jne    0x14001fe7f
   14001fed0:	movups xmm0,XMMWORD PTR [rdx]
   14001fed3:	movups XMMWORD PTR [r8],xmm0
   14001fed7:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14001fedb:	movups XMMWORD PTR [r8+0x10],xmm1
   14001fee0:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14001fee4:	movups XMMWORD PTR [r8+0x20],xmm0
   14001fee9:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14001feed:	movups XMMWORD PTR [r8+0x30],xmm1
   14001fef2:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14001fef6:	movups XMMWORD PTR [r8+0x40],xmm0
   14001fefb:	mov    rax,QWORD PTR [rdx+0x50]
   14001feff:	mov    QWORD PTR [r8+0x50],rax
   14001ff03:	and    DWORD PTR [rcx],0x0
   14001ff06:	call   0x140011a48
   14001ff0b:	add    rsp,0x28
   14001ff0f:	ret    
   14001ff10:	rex push rbx
   14001ff12:	sub    rsp,0x150
   14001ff19:	mov    rax,QWORD PTR [rip+0x1c2b0]        # 0x14003c1d0
   14001ff20:	xor    rax,rsp
   14001ff23:	mov    QWORD PTR [rsp+0x140],rax
   14001ff2b:	mov    ebx,ecx
   14001ff2d:	cmp    ecx,0x5
   14001ff30:	ja     0x14001ff6c
   14001ff32:	test   rdx,rdx
   14001ff35:	je     0x14001ff6c
   14001ff37:	lea    rax,[rsp+0x30]
   14001ff3c:	mov    r8,rdx
   14001ff3f:	or     r9d,0xffffffff
   14001ff43:	xor    edx,edx
   14001ff45:	xor    ecx,ecx
   14001ff47:	mov    DWORD PTR [rsp+0x28],0x83
   14001ff4f:	mov    QWORD PTR [rsp+0x20],rax
   14001ff54:	call   QWORD PTR [rip+0xc22e]        # 0x14002c188
   14001ff5a:	test   eax,eax
   14001ff5c:	je     0x14001ff6c
   14001ff5e:	lea    rdx,[rsp+0x30]
   14001ff63:	mov    ecx,ebx
   14001ff65:	call   0x140020494
   14001ff6a:	jmp    0x14001ff6e
   14001ff6c:	xor    eax,eax
   14001ff6e:	mov    rcx,QWORD PTR [rsp+0x140]
   14001ff76:	xor    rcx,rsp
   14001ff79:	call   0x14000c380
   14001ff7e:	add    rsp,0x150
   14001ff85:	pop    rbx
   14001ff86:	ret    
   14001ff87:	int3   
   14001ff88:	rex push rbp
   14001ff8a:	push   rbx
   14001ff8b:	push   rsi
   14001ff8c:	push   rdi
   14001ff8d:	push   r12
   14001ff8f:	push   r13
   14001ff91:	push   r14
   14001ff93:	push   r15
   14001ff95:	lea    rbp,[rsp-0x148]
   14001ff9d:	sub    rsp,0x248
   14001ffa4:	mov    rax,QWORD PTR [rip+0x1c225]        # 0x14003c1d0
   14001ffab:	xor    rax,rsp
   14001ffae:	mov    QWORD PTR [rbp+0x130],rax
   14001ffb5:	mov    rdi,QWORD PTR [rbp+0x1b8]
   14001ffbc:	mov    rsi,r9
   14001ffbf:	mov    r13,r8
   14001ffc2:	mov    QWORD PTR [rsp+0x50],r8
   14001ffc7:	mov    r12,rdx
   14001ffca:	mov    rbx,rcx
   14001ffcd:	call   0x14000a3ec
   14001ffd2:	lea    rcx,[rax+0x160]
   14001ffd9:	lea    r15,[rax+0x164]
   14001ffe0:	lea    r14,[rax+0x26a]
   14001ffe7:	mov    QWORD PTR [rsp+0x38],rcx
   14001ffec:	xor    ecx,ecx
   14001ffee:	mov    QWORD PTR [rsp+0x40],r15
   14001fff3:	mov    DWORD PTR [rsp+0x30],ecx
   14001fff7:	test   rbx,rbx
   14001fffa:	jne    0x140020021
   14001fffc:	xor    eax,eax
   14001fffe:	mov    rcx,QWORD PTR [rbp+0x130]
   140020005:	xor    rcx,rsp
   140020008:	call   0x14000c380
   14002000d:	add    rsp,0x248
   140020014:	pop    r15
   140020016:	pop    r14
   140020018:	pop    r13
   14002001a:	pop    r12
   14002001c:	pop    rdi
   14002001d:	pop    rsi
   14002001e:	pop    rbx
   14002001f:	pop    rbp
   140020020:	ret    
   140020021:	mov    rdx,QWORD PTR [rbp+0x1b0]
   140020028:	add    rax,0x398
   14002002e:	mov    r9d,0x55
   140020034:	mov    r8,rax
   140020037:	mov    rcx,rsi
   14002003a:	mov    QWORD PTR [rsp+0x48],rax
   14002003f:	call   0x14001c4c8
   140020044:	xor    ecx,ecx
   140020046:	test   eax,eax
   140020048:	jne    0x140020347
   14002004e:	cmp    WORD PTR [rbx],0x43
   140020052:	jne    0x140020085
   140020054:	cmp    WORD PTR [rbx+0x2],cx
   140020058:	jne    0x140020085
   14002005a:	lea    r8,[rip+0x14b0f]        # 0x140034b70
   140020061:	mov    rdx,r13
   140020064:	mov    rcx,r12
   140020067:	call   0x14001c440
   14002006c:	xor    ecx,ecx
   14002006e:	test   eax,eax
   140020070:	jne    0x1400202a5
   140020076:	test   rdi,rdi
   140020079:	je     0x14002007d
   14002007b:	mov    DWORD PTR [rdi],ecx
   14002007d:	mov    rax,r12
   140020080:	jmp    0x14001fffe
   140020085:	mov    rcx,rbx
   140020088:	call   0x14001c4ac
   14002008d:	mov    r13,rax
   140020090:	cmp    rax,0x83
   140020096:	jae    0x1400200be
   140020098:	mov    rdx,rbx
   14002009b:	mov    rcx,r14
   14002009e:	call   0x140026c50
   1400200a3:	test   eax,eax
   1400200a5:	je     0x140020242
   1400200ab:	mov    rdx,rbx
   1400200ae:	mov    rcx,r15
   1400200b1:	call   0x140026c50
   1400200b6:	test   eax,eax
   1400200b8:	je     0x140020242
   1400200be:	mov    rax,QWORD PTR [rip+0x1ffcb]        # 0x140040090
   1400200c5:	lea    rcx,[rsp+0x60]
   1400200ca:	mov    rdx,rbx
   1400200cd:	xor    rax,QWORD PTR [rip+0x1c0fc]        # 0x14003c1d0
   1400200d4:	mov    eax,0x0
   1400200d9:	lea    r15d,[rax+0x1]
   1400200dd:	cmovne r15d,eax
   1400200e1:	call   0x14001fc30
   1400200e6:	test   eax,eax
   1400200e8:	jne    0x140020165
   1400200ea:	test   r15d,r15d
   1400200ed:	mov    r15,QWORD PTR [rsp+0x38]
   1400200f2:	lea    r8,[rsp+0x60]
   1400200f7:	mov    rdx,r15
   1400200fa:	lea    rcx,[rsp+0x60]
   1400200ff:	je     0x140020108
   140020101:	call   0x1400280b8
   140020106:	jmp    0x14002010d
   140020108:	call   0x1400275bc
   14002010d:	test   eax,eax
   14002010f:	je     0x14002016a
   140020111:	mov    r15d,0x83
   140020117:	lea    r8,[rsp+0x60]
   14002011c:	mov    rcx,r14
   14002011f:	mov    edx,r15d
   140020122:	call   0x14001fb8c
   140020127:	test   rsi,rsi
   14002012a:	je     0x140020236
   140020130:	lea    rcx,[rbp+0x80]
   140020137:	call   0x14001c4ac
   14002013c:	mov    rdx,QWORD PTR [rbp+0x1b0]
   140020143:	lea    r8,[rbp+0x80]
   14002014a:	lea    r9,[rax+0x1]
   14002014e:	mov    rcx,rsi
   140020151:	call   0x14001c4c8
   140020156:	xor    esi,esi
   140020158:	test   eax,eax
   14002015a:	je     0x14002020f
   140020160:	jmp    0x1400202b8
   140020165:	mov    r15,QWORD PTR [rsp+0x38]
   14002016a:	mov    rcx,rbx
   14002016d:	call   0x14000fb10
   140020172:	test   eax,eax
   140020174:	je     0x140020278
   14002017a:	lea    r8,[rsp+0x30]
   14002017f:	mov    r9d,0x2
   140020185:	mov    edx,0x20001004
   14002018a:	mov    rcx,rbx
   14002018d:	call   0x14000fa04
   140020192:	test   eax,eax
   140020194:	je     0x14002019e
   140020196:	mov    eax,DWORD PTR [rsp+0x30]
   14002019a:	test   eax,eax
   14002019c:	jne    0x1400201a8
   14002019e:	call   QWORD PTR [rip+0xbec4]        # 0x14002c068
   1400201a4:	mov    DWORD PTR [rsp+0x30],eax
   1400201a8:	movzx  eax,ax
   1400201ab:	mov    r8,rbx
   1400201ae:	mov    edx,0x83
   1400201b3:	mov    DWORD PTR [r15],eax
   1400201b6:	lea    r15,[r13+0x1]
   1400201ba:	mov    rcx,r14
   1400201bd:	mov    r9,r15
   1400201c0:	call   0x14001c4c8
   1400201c5:	xor    ecx,ecx
   1400201c7:	test   eax,eax
   1400201c9:	jne    0x140020321
   1400201cf:	mov    rdx,QWORD PTR [rbp+0x1b0]
   1400201d6:	mov    r9,r15
   1400201d9:	mov    r8,rbx
   1400201dc:	mov    rcx,rsi
   1400201df:	call   0x14001c4c8
   1400201e4:	xor    esi,esi
   1400201e6:	test   eax,eax
   1400201e8:	jne    0x14002030c
   1400201ee:	mov    rcx,QWORD PTR [rsp+0x48]
   1400201f3:	lea    edx,[rsi+0x55]
   1400201f6:	mov    r9,r15
   1400201f9:	mov    r8,rbx
   1400201fc:	call   0x14001c4c8
   140020201:	test   eax,eax
   140020203:	jne    0x1400202f7
   140020209:	mov    r15d,0x83
   14002020f:	cmp    WORD PTR [rbx],si
   140020212:	je     0x140020238
   140020214:	cmp    r13,r15
   140020217:	jae    0x140020238
   140020219:	mov    rcx,QWORD PTR [rsp+0x40]
   14002021e:	lea    r9,[r13+0x1]
   140020222:	mov    r8,rbx
   140020225:	mov    rdx,r15
   140020228:	call   0x14001c4c8
   14002022d:	test   eax,eax
   14002022f:	je     0x140020244
   140020231:	jmp    0x1400202cd
   140020236:	jmp    0x14002020f
   140020238:	mov    rax,QWORD PTR [rsp+0x40]
   14002023d:	mov    WORD PTR [rax],si
   140020240:	jmp    0x140020244
   140020242:	xor    esi,esi
   140020244:	test   rdi,rdi
   140020247:	je     0x14002025c
   140020249:	mov    rdx,QWORD PTR [rsp+0x38]
   14002024e:	mov    r8d,0x4
   140020254:	mov    rcx,rdi
   140020257:	call   0x1400059f0
   14002025c:	mov    rdx,QWORD PTR [rsp+0x50]
   140020261:	mov    r8,r14
   140020264:	mov    rcx,r12
   140020267:	call   0x14001c440
   14002026c:	test   eax,eax
   14002026e:	jne    0x1400202e2
   140020270:	mov    rax,r14
   140020273:	jmp    0x14001fffe
   140020278:	mov    rcx,rsi
   14002027b:	call   0x14001c4ac
   140020280:	mov    rcx,QWORD PTR [rsp+0x48]
   140020285:	mov    r8,rsi
   140020288:	lea    r9,[rax+0x1]
   14002028c:	mov    edx,0x55
   140020291:	call   0x14001c4c8
   140020296:	xor    ecx,ecx
   140020298:	test   eax,eax
   14002029a:	je     0x14001fffc
   1400202a0:	jmp    0x140020334
   1400202a5:	xor    r9d,r9d
   1400202a8:	xor    r8d,r8d
   1400202ab:	xor    edx,edx
   1400202ad:	mov    QWORD PTR [rsp+0x20],rcx
   1400202b2:	call   0x140008da8
   1400202b7:	int3   
   1400202b8:	xor    r9d,r9d
   1400202bb:	xor    r8d,r8d
   1400202be:	xor    edx,edx
   1400202c0:	xor    ecx,ecx
   1400202c2:	mov    QWORD PTR [rsp+0x20],rsi
   1400202c7:	call   0x140008da8
   1400202cc:	int3   
   1400202cd:	xor    r9d,r9d
   1400202d0:	xor    r8d,r8d
   1400202d3:	xor    edx,edx
   1400202d5:	xor    ecx,ecx
   1400202d7:	mov    QWORD PTR [rsp+0x20],rsi
   1400202dc:	call   0x140008da8
   1400202e1:	int3   
   1400202e2:	xor    r9d,r9d
   1400202e5:	xor    r8d,r8d
   1400202e8:	xor    edx,edx
   1400202ea:	xor    ecx,ecx
   1400202ec:	mov    QWORD PTR [rsp+0x20],rsi
   1400202f1:	call   0x140008da8
   1400202f6:	int3   
   1400202f7:	xor    r9d,r9d
   1400202fa:	xor    r8d,r8d
   1400202fd:	xor    edx,edx
   1400202ff:	xor    ecx,ecx
   140020301:	mov    QWORD PTR [rsp+0x20],rsi
   140020306:	call   0x140008da8
   14002030b:	int3   
   14002030c:	xor    r9d,r9d
   14002030f:	xor    r8d,r8d
   140020312:	xor    edx,edx
   140020314:	xor    ecx,ecx
   140020316:	mov    QWORD PTR [rsp+0x20],rsi
   14002031b:	call   0x140008da8
   140020320:	int3   
   140020321:	xor    r9d,r9d
   140020324:	xor    r8d,r8d
   140020327:	xor    edx,edx
   140020329:	mov    QWORD PTR [rsp+0x20],rcx
   14002032e:	call   0x140008da8
   140020333:	int3   
   140020334:	xor    r9d,r9d
   140020337:	xor    r8d,r8d
   14002033a:	xor    edx,edx
   14002033c:	mov    QWORD PTR [rsp+0x20],rcx
   140020341:	call   0x140008da8
   140020346:	int3   
   140020347:	xor    r9d,r9d
   14002034a:	xor    r8d,r8d
   14002034d:	xor    edx,edx
   14002034f:	mov    QWORD PTR [rsp+0x20],rcx
   140020354:	call   0x140008da8
   140020359:	int3   
   14002035a:	int3   
   14002035b:	int3   
   14002035c:	test   rcx,rcx
   14002035f:	je     0x1400203f5
   140020365:	push   rbx
   140020366:	sub    rsp,0x20
   14002036a:	mov    rbx,rcx
   14002036d:	mov    ecx,0xd
   140020372:	call   0x14000fc2c
   140020377:	nop
   140020378:	mov    rcx,QWORD PTR [rbx+0x8]
   14002037c:	test   rcx,rcx
   14002037f:	je     0x14002039c
   140020381:	lock dec DWORD PTR [rcx]
   140020384:	jne    0x14002039c
   140020386:	mov    rcx,QWORD PTR [rbx+0x8]
   14002038a:	lea    rax,[rip+0x1c34f]        # 0x14003c6e0
   140020391:	cmp    rcx,rax
   140020394:	je     0x14002039c
   140020396:	call   0x140007dc0
   14002039b:	nop
   14002039c:	mov    ecx,0xd
   1400203a1:	call   0x14000fe48
   1400203a6:	cmp    QWORD PTR [rbx],0x0
   1400203aa:	je     0x1400203e8
   1400203ac:	mov    ecx,0xc
   1400203b1:	call   0x14000fc2c
   1400203b6:	nop
   1400203b7:	mov    rcx,QWORD PTR [rbx]
   1400203ba:	call   0x140011c6c
   1400203bf:	mov    rcx,QWORD PTR [rbx]
   1400203c2:	test   rcx,rcx
   1400203c5:	je     0x1400203de
   1400203c7:	cmp    DWORD PTR [rcx],0x0
   1400203ca:	jne    0x1400203de
   1400203cc:	lea    rax,[rip+0x1ccdd]        # 0x14003d0b0
   1400203d3:	cmp    rcx,rax
   1400203d6:	je     0x1400203de
   1400203d8:	call   0x140011ad4
   1400203dd:	nop
   1400203de:	mov    ecx,0xc
   1400203e3:	call   0x14000fe48
   1400203e8:	mov    rcx,rbx
   1400203eb:	call   0x140007dc0
   1400203f0:	add    rsp,0x20
   1400203f4:	pop    rbx
   1400203f5:	ret    
   1400203f6:	int3   
   1400203f7:	int3   
   1400203f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400203fd:	push   rdi
   1400203fe:	sub    rsp,0x20
   140020402:	call   0x14000a3ec
   140020407:	mov    rdi,rax
   14002040a:	mov    edx,0x1
   14002040f:	lea    ecx,[rdx+0xf]
   140020412:	call   0x140008604
   140020417:	mov    rbx,rax
   14002041a:	test   rax,rax
   14002041d:	jne    0x14002042e
   14002041f:	call   0x140009cb4
   140020424:	mov    DWORD PTR [rax],0xc
   14002042a:	xor    eax,eax
   14002042c:	jmp    0x140020489
   14002042e:	call   0x140011d10
   140020433:	call   0x1400103cc
   140020438:	mov    rax,QWORD PTR [rdi+0xc0]
   14002043f:	mov    QWORD PTR [rbx],rax
   140020442:	mov    rax,QWORD PTR [rdi+0xb8]
   140020449:	mov    QWORD PTR [rbx+0x8],rax
   14002044d:	mov    ecx,0xc
   140020452:	call   0x14000fc2c
   140020457:	nop
   140020458:	mov    rcx,QWORD PTR [rbx]
   14002045b:	call   0x140011a48
   140020460:	nop
   140020461:	mov    ecx,0xc
   140020466:	call   0x14000fe48
   14002046b:	mov    edi,0xd
   140020470:	mov    ecx,edi
   140020472:	call   0x14000fc2c
   140020477:	nop
   140020478:	mov    rax,QWORD PTR [rbx+0x8]
   14002047c:	lock inc DWORD PTR [rax]
   14002047f:	mov    ecx,edi
   140020481:	call   0x14000fe48
   140020486:	mov    rax,rbx
   140020489:	mov    rbx,QWORD PTR [rsp+0x30]
   14002048e:	add    rsp,0x20
   140020492:	pop    rdi
   140020493:	ret    
   140020494:	mov    QWORD PTR [rsp+0x8],rbx
   140020499:	mov    QWORD PTR [rsp+0x10],rbp
   14002049e:	mov    QWORD PTR [rsp+0x18],rsi
   1400204a3:	push   rdi
   1400204a4:	sub    rsp,0x20
   1400204a8:	mov    rdi,rdx
   1400204ab:	mov    esi,ecx
   1400204ad:	cmp    ecx,0x5
   1400204b0:	ja     0x1400204d9
   1400204b2:	test   rdx,rdx
   1400204b5:	je     0x1400204d9
   1400204b7:	mov    ebp,0x1
   1400204bc:	mov    edx,ebp
   1400204be:	lea    ecx,[rbp+0xf]
   1400204c1:	call   0x140008604
   1400204c6:	mov    rbx,rax
   1400204c9:	test   rax,rax
   1400204cc:	jne    0x1400204f0
   1400204ce:	call   0x140009cb4
   1400204d3:	mov    DWORD PTR [rax],0xc
   1400204d9:	xor    eax,eax
   1400204db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400204e0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400204e5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400204ea:	add    rsp,0x20
   1400204ee:	pop    rdi
   1400204ef:	ret    
   1400204f0:	mov    rdx,rbp
   1400204f3:	mov    ecx,0x158
   1400204f8:	call   0x140008604
   1400204fd:	mov    QWORD PTR [rbx],rax
   140020500:	test   rax,rax
   140020503:	jne    0x14002050f
   140020505:	mov    rcx,rbx
   140020508:	call   0x140007dc0
   14002050d:	jmp    0x1400204ce
   14002050f:	mov    rdx,rbp
   140020512:	mov    ecx,0x228
   140020517:	call   0x140008604
   14002051c:	mov    rcx,QWORD PTR [rbx]
   14002051f:	mov    QWORD PTR [rbx+0x8],rax
   140020523:	test   rax,rax
   140020526:	jne    0x14002052f
   140020528:	call   0x140007dc0
   14002052d:	jmp    0x140020505
   14002052f:	lea    rdx,[rip+0x1cb7a]        # 0x14003d0b0
   140020536:	call   0x14001fe54
   14002053b:	mov    rcx,QWORD PTR [rbx]
   14002053e:	mov    r8,rdi
   140020541:	mov    edx,esi
   140020543:	call   0x14002096c
   140020548:	test   rax,rax
   14002054b:	je     0x140020560
   14002054d:	mov    rax,QWORD PTR [rbx]
   140020550:	mov    rdx,QWORD PTR [rbx+0x8]
   140020554:	mov    ecx,DWORD PTR [rax+0x4]
   140020557:	call   0x140010708
   14002055c:	test   eax,eax
   14002055e:	je     0x140020585
   140020560:	mov    rcx,QWORD PTR [rbx+0x8]
   140020564:	call   0x140007dc0
   140020569:	mov    rcx,QWORD PTR [rbx]
   14002056c:	call   0x140011c6c
   140020571:	mov    rcx,QWORD PTR [rbx]
   140020574:	call   0x140011ad4
   140020579:	mov    rcx,rbx
   14002057c:	call   0x140007dc0
   140020581:	xor    ebx,ebx
   140020583:	jmp    0x14002058b
   140020585:	mov    rax,QWORD PTR [rbx+0x8]
   140020589:	mov    DWORD PTR [rax],ebp
   14002058b:	mov    rax,rbx
   14002058e:	jmp    0x1400204db
   140020593:	int3   
   140020594:	test   r8d,r8d
   140020597:	jle    0x1400205e2
   140020599:	mov    DWORD PTR [rsp+0x18],r8d
   14002059e:	mov    QWORD PTR [rsp+0x20],r9
   1400205a3:	push   rbx
   1400205a4:	push   rbp
   1400205a5:	push   rsi
   1400205a6:	push   rdi
   1400205a7:	sub    rsp,0x38
   1400205ab:	lea    rdi,[rsp+0x78]
   1400205b0:	xor    ebx,ebx
   1400205b2:	mov    rsi,rdx
   1400205b5:	add    rdi,0xfffffffffffffff8
   1400205b9:	mov    rbp,rcx
   1400205bc:	lea    rdi,[rdi+0x8]
   1400205c0:	mov    rdx,rsi
   1400205c3:	mov    rcx,rbp
   1400205c6:	mov    r8,QWORD PTR [rdi]
   1400205c9:	call   0x14001c3b8
   1400205ce:	test   eax,eax
   1400205d0:	jne    0x1400205e3
   1400205d2:	inc    ebx
   1400205d4:	cmp    ebx,DWORD PTR [rsp+0x70]
   1400205d8:	jl     0x1400205bc
   1400205da:	add    rsp,0x38
   1400205de:	pop    rdi
   1400205df:	pop    rsi
   1400205e0:	pop    rbp
   1400205e1:	pop    rbx
   1400205e2:	ret    
   1400205e3:	and    QWORD PTR [rsp+0x20],0x0
   1400205e9:	xor    r9d,r9d
   1400205ec:	xor    r8d,r8d
   1400205ef:	xor    edx,edx
   1400205f1:	xor    ecx,ecx
   1400205f3:	call   0x140008da8
   1400205f8:	int3   
   1400205f9:	int3   
   1400205fa:	int3   
   1400205fb:	int3   
   1400205fc:	mov    QWORD PTR [rsp+0x8],rbx
   140020601:	mov    QWORD PTR [rsp+0x10],rsi
   140020606:	mov    QWORD PTR [rsp+0x20],rdi
   14002060b:	push   r12
   14002060d:	push   r14
   14002060f:	push   r15
   140020611:	sub    rsp,0x30
   140020615:	mov    r14,rdx
   140020618:	mov    r12d,ecx
   14002061b:	xor    esi,esi
   14002061d:	cmp    ecx,0x5
   140020620:	jbe    0x140020639
   140020622:	call   0x140009cb4
   140020627:	mov    DWORD PTR [rax],0x16
   14002062d:	call   0x140008d58
   140020632:	xor    eax,eax
   140020634:	jmp    0x14002077d
   140020639:	call   0x14000a3ec
   14002063e:	mov    rbx,rax
   140020641:	mov    QWORD PTR [rsp+0x60],rax
   140020646:	call   0x140011d10
   14002064b:	or     DWORD PTR [rbx+0xc8],0x10
   140020652:	mov    edx,0x1
   140020657:	mov    ecx,0x158
   14002065c:	call   0x140008604
   140020661:	mov    rdi,rax
   140020664:	test   rax,rax
   140020667:	je     0x140020773
   14002066d:	mov    ecx,0xc
   140020672:	call   0x14000fc2c
   140020677:	nop
   140020678:	lea    r15,[rbx+0xc0]
   14002067f:	mov    rdx,QWORD PTR [r15]
   140020682:	mov    rcx,rdi
   140020685:	call   0x14001fe54
   14002068a:	nop
   14002068b:	mov    ecx,0xc
   140020690:	call   0x14000fe48
   140020695:	mov    r8,r14
   140020698:	mov    edx,r12d
   14002069b:	mov    rcx,rdi
   14002069e:	call   0x14002096c
   1400206a3:	mov    rsi,rax
   1400206a6:	mov    QWORD PTR [rsp+0x20],rax
   1400206ab:	test   rax,rax
   1400206ae:	je     0x140020762
   1400206b4:	test   r14,r14
   1400206b7:	je     0x1400206e2
   1400206b9:	lea    rdx,[rip+0x1c714]        # 0x14003cdd4
   1400206c0:	mov    rcx,r14
   1400206c3:	call   0x140026c50
   1400206c8:	mov    ecx,DWORD PTR [rip+0x1e8ba]        # 0x14003ef88
   1400206ce:	test   eax,eax
   1400206d0:	mov    r14d,0x1
   1400206d6:	cmovne ecx,r14d
   1400206da:	mov    DWORD PTR [rip+0x1e8a8],ecx        # 0x14003ef88
   1400206e0:	jmp    0x1400206e8
   1400206e2:	mov    r14d,0x1
   1400206e8:	mov    ecx,0xc
   1400206ed:	call   0x14000fc2c
   1400206f2:	nop
   1400206f3:	mov    rdx,rdi
   1400206f6:	mov    rcx,r15
   1400206f9:	call   0x140011d88
   1400206fe:	mov    rcx,rdi
   140020701:	call   0x140011c6c
   140020706:	test   BYTE PTR [rbx+0xc8],0x2
   14002070d:	jne    0x140020756
   14002070f:	test   BYTE PTR [rip+0x1cb02],r14b        # 0x14003d218
   140020716:	jne    0x140020756
   140020718:	mov    rdx,QWORD PTR [r15]
   14002071b:	lea    rcx,[rip+0x1c97e]        # 0x14003d0a0
   140020722:	call   0x140011d88
   140020727:	mov    rdx,QWORD PTR [rip+0x1c972]        # 0x14003d0a0
   14002072e:	mov    rax,QWORD PTR [rdx+0xf0]
   140020735:	mov    QWORD PTR [rip+0x1cd74],rax        # 0x14003d4b0
   14002073c:	mov    rax,QWORD PTR [rdx+0x108]
   140020743:	mov    QWORD PTR [rip+0x1cd6e],rax        # 0x14003d4b8
   14002074a:	mov    eax,DWORD PTR [rdx+0xd4]
   140020750:	mov    DWORD PTR [rip+0x1c67a],eax        # 0x14003cdd0
   140020756:	mov    ecx,0xc
   14002075b:	call   0x14000fe48
   140020760:	jmp    0x140020773
   140020762:	mov    rcx,rdi
   140020765:	call   0x140011c6c
   14002076a:	mov    rcx,rdi
   14002076d:	call   0x140011ad4
   140020772:	nop
   140020773:	and    DWORD PTR [rbx+0xc8],0xffffffef
   14002077a:	mov    rax,rsi
   14002077d:	mov    rbx,QWORD PTR [rsp+0x50]
   140020782:	mov    rsi,QWORD PTR [rsp+0x58]
   140020787:	mov    rdi,QWORD PTR [rsp+0x68]
   14002078c:	add    rsp,0x30
   140020790:	pop    r15
   140020792:	pop    r14
   140020794:	pop    r12
   140020796:	ret    
   140020797:	int3   
   140020798:	mov    QWORD PTR [rsp+0x8],rbx
   14002079d:	mov    QWORD PTR [rsp+0x10],rbp
   1400207a2:	mov    QWORD PTR [rsp+0x18],rsi
   1400207a7:	push   rdi
   1400207a8:	push   r12
   1400207aa:	push   r13
   1400207ac:	push   r14
   1400207ae:	push   r15
   1400207b0:	sub    rsp,0x30
   1400207b4:	mov    rdi,rcx
   1400207b7:	mov    ecx,0x6a6
   1400207bc:	mov    ebp,0x1
   1400207c1:	call   0x140008684
   1400207c6:	xor    r13d,r13d
   1400207c9:	mov    rsi,rax
   1400207cc:	test   rax,rax
   1400207cf:	jne    0x1400207ee
   1400207d1:	mov    rbx,QWORD PTR [rsp+0x60]
   1400207d6:	mov    rbp,QWORD PTR [rsp+0x68]
   1400207db:	mov    rsi,QWORD PTR [rsp+0x70]
   1400207e0:	add    rsp,0x30
   1400207e4:	pop    r15
   1400207e6:	pop    r14
   1400207e8:	pop    r13
   1400207ea:	pop    r12
   1400207ec:	pop    rdi
   1400207ed:	ret    
   1400207ee:	lea    r14,[rax+0x4]
   1400207f2:	mov    ebx,0x351
   1400207f7:	mov    r8d,0x3
   1400207fd:	mov    WORD PTR [r14],r13w
   140020801:	mov    DWORD PTR [rax],ebp
   140020803:	mov    rax,QWORD PTR [rdi+0x38]
   140020807:	mov    r9,QWORD PTR [rip+0x141da]        # 0x1400349e8
   14002080e:	mov    QWORD PTR [rsp+0x28],rax
   140020813:	lea    rax,[rip+0x14352]        # 0x140034b6c
   14002081a:	mov    edx,ebx
   14002081c:	mov    rcx,r14
   14002081f:	mov    QWORD PTR [rsp+0x20],rax
   140020824:	call   0x140020594
   140020829:	lea    r15,[rip+0x141b8]        # 0x1400349e8
   140020830:	lea    r12,[rdi+0x38]
   140020834:	lea    r8,[rip+0x1432d]        # 0x140034b68
   14002083b:	mov    rdx,rbx
   14002083e:	mov    rcx,r14
   140020841:	call   0x14001c3b8
   140020846:	test   eax,eax
   140020848:	jne    0x140020957
   14002084e:	mov    rcx,QWORD PTR [r12]
   140020852:	lea    rbx,[r12+0x20]
   140020857:	mov    rdx,QWORD PTR [rbx]
   14002085a:	call   0x140026c50
   14002085f:	mov    r12,rbx
   140020862:	mov    r8d,0x3
   140020868:	test   eax,eax
   14002086a:	mov    rax,QWORD PTR [rbx]
   14002086d:	mov    ebx,0x351
   140020872:	mov    QWORD PTR [rsp+0x28],rax
   140020877:	cmovne ebp,r13d
   14002087b:	lea    rax,[rip+0x142ea]        # 0x140034b6c
   140020882:	add    r15,0x18
   140020886:	mov    edx,ebx
   140020888:	mov    rcx,r14
   14002088b:	mov    r9,QWORD PTR [r15]
   14002088e:	mov    QWORD PTR [rsp+0x20],rax
   140020893:	call   0x140020594
   140020898:	lea    rax,[rip+0x141a9]        # 0x140034a48
   14002089f:	cmp    r15,rax
   1400208a2:	jl     0x140020834
   1400208a4:	test   ebp,ebp
   1400208a6:	jne    0x1400208fb
   1400208a8:	mov    rcx,QWORD PTR [rdi+0x28]
   1400208ac:	or     ebx,0xffffffff
   1400208af:	test   rcx,rcx
   1400208b2:	je     0x1400208c7
   1400208b4:	mov    eax,ebx
   1400208b6:	lock xadd DWORD PTR [rcx],eax
   1400208ba:	add    eax,ebx
   1400208bc:	jne    0x1400208c7
   1400208be:	mov    rcx,QWORD PTR [rdi+0x28]
   1400208c2:	call   0x140007dc0
   1400208c7:	mov    rax,QWORD PTR [rdi+0x20]
   1400208cb:	test   rax,rax
   1400208ce:	je     0x1400208e3
   1400208d0:	mov    ecx,ebx
   1400208d2:	lock xadd DWORD PTR [rax],ecx
   1400208d6:	add    ecx,ebx
   1400208d8:	jne    0x1400208e3
   1400208da:	mov    rcx,QWORD PTR [rdi+0x20]
   1400208de:	call   0x140007dc0
   1400208e3:	mov    QWORD PTR [rdi+0x20],r13
   1400208e7:	mov    QWORD PTR [rdi+0x10],r13
   1400208eb:	mov    QWORD PTR [rdi+0x28],rsi
   1400208ef:	mov    QWORD PTR [rdi+0x18],r14
   1400208f3:	mov    rax,r14
   1400208f6:	jmp    0x1400207d1
   1400208fb:	mov    rcx,rsi
   1400208fe:	call   0x140007dc0
   140020903:	mov    rcx,QWORD PTR [rdi+0x28]
   140020907:	or     ebx,0xffffffff
   14002090a:	test   rcx,rcx
   14002090d:	je     0x140020922
   14002090f:	mov    eax,ebx
   140020911:	lock xadd DWORD PTR [rcx],eax
   140020915:	add    eax,ebx
   140020917:	jne    0x140020922
   140020919:	mov    rcx,QWORD PTR [rdi+0x28]
   14002091d:	call   0x140007dc0
   140020922:	mov    rcx,QWORD PTR [rdi+0x20]
   140020926:	test   rcx,rcx
   140020929:	je     0x14002093e
   14002092b:	mov    eax,ebx
   14002092d:	lock xadd DWORD PTR [rcx],eax
   140020931:	add    eax,ebx
   140020933:	jne    0x14002093e
   140020935:	mov    rcx,QWORD PTR [rdi+0x20]
   140020939:	call   0x140007dc0
   14002093e:	mov    rax,QWORD PTR [rdi+0x58]
   140020942:	mov    QWORD PTR [rdi+0x20],r13
   140020946:	mov    QWORD PTR [rdi+0x10],r13
   14002094a:	mov    QWORD PTR [rdi+0x28],r13
   14002094e:	mov    QWORD PTR [rdi+0x18],r13
   140020952:	jmp    0x1400207d1
   140020957:	xor    r9d,r9d
   14002095a:	xor    r8d,r8d
   14002095d:	xor    edx,edx
   14002095f:	xor    ecx,ecx
   140020961:	mov    QWORD PTR [rsp+0x20],r13
   140020966:	call   0x140008da8
   14002096b:	int3   
   14002096c:	mov    QWORD PTR [rsp+0x20],rbx
   140020971:	push   rbp
   140020972:	push   rsi
   140020973:	push   rdi
   140020974:	push   r12
   140020976:	push   r13
   140020978:	push   r14
   14002097a:	push   r15
   14002097c:	sub    rsp,0x200
   140020983:	mov    rax,QWORD PTR [rip+0x1b846]        # 0x14003c1d0
   14002098a:	xor    rax,rsp
   14002098d:	mov    QWORD PTR [rsp+0x1f0],rax
   140020995:	xor    r13d,r13d
   140020998:	mov    rbx,r8
   14002099b:	mov    rdi,rcx
   14002099e:	test   edx,edx
   1400209a0:	je     0x1400209c2
   1400209a2:	test   rbx,rbx
   1400209a5:	je     0x1400209b1
   1400209a7:	call   0x140020bd8
   1400209ac:	jmp    0x140020b07
   1400209b1:	movsxd rax,edx
   1400209b4:	shl    rax,0x5
   1400209b8:	mov    rax,QWORD PTR [rax+rcx*1+0x18]
   1400209bd:	jmp    0x140020b07
   1400209c2:	mov    ebp,0x1
   1400209c7:	mov    esi,r13d
   1400209ca:	test   rbx,rbx
   1400209cd:	je     0x140020b02
   1400209d3:	cmp    WORD PTR [r8],0x4c
   1400209d8:	jne    0x140020b36
   1400209de:	cmp    WORD PTR [r8+0x2],0x43
   1400209e4:	jne    0x140020b36
   1400209ea:	cmp    WORD PTR [r8+0x4],0x5f
   1400209f0:	jne    0x140020b36
   1400209f6:	lea    rdx,[rip+0x14163]        # 0x140034b60
   1400209fd:	mov    rcx,rbx
   140020a00:	call   0x140026cf8
   140020a05:	mov    r14,rax
   140020a08:	test   rax,rax
   140020a0b:	je     0x140020b32
   140020a11:	mov    rbp,rax
   140020a14:	sub    rbp,rbx
   140020a17:	sar    rbp,1
   140020a1a:	je     0x140020b32
   140020a20:	cmp    WORD PTR [rax],0x3b
   140020a24:	je     0x140020b32
   140020a2a:	mov    r12d,0x1
   140020a30:	lea    r15,[rip+0x13fb1]        # 0x1400349e8
   140020a37:	mov    rcx,QWORD PTR [r15]
   140020a3a:	mov    r8,rbp
   140020a3d:	mov    rdx,rbx
   140020a40:	call   0x140026ccc
   140020a45:	test   eax,eax
   140020a47:	jne    0x140020a56
   140020a49:	mov    rcx,QWORD PTR [r15]
   140020a4c:	call   0x14001c4ac
   140020a51:	cmp    rbp,rax
   140020a54:	je     0x140020a69
   140020a56:	lea    rax,[rip+0x13feb]        # 0x140034a48
   140020a5d:	add    r15,0x18
   140020a61:	inc    r12d
   140020a64:	cmp    r15,rax
   140020a67:	jle    0x140020a37
   140020a69:	add    r14,0x2
   140020a6d:	lea    rdx,[rip+0x140f4]        # 0x140034b68
   140020a74:	mov    rcx,r14
   140020a77:	call   0x140026c8c
   140020a7c:	mov    rbx,rax
   140020a7f:	test   rax,rax
   140020a82:	jne    0x140020a8f
   140020a84:	cmp    WORD PTR [r14],0x3b
   140020a89:	jne    0x140020b32
   140020a8f:	cmp    r12d,0x5
   140020a93:	jg     0x140020adf
   140020a95:	lea    rcx,[rsp+0x30]
   140020a9a:	mov    r9,rax
   140020a9d:	mov    r8,r14
   140020aa0:	mov    edx,0x83
   140020aa5:	call   0x14001c4c8
   140020aaa:	test   eax,eax
   140020aac:	jne    0x140020bc1
   140020ab2:	lea    rax,[rbx+rbx*1]
   140020ab6:	cmp    rax,0x106
   140020abc:	jae    0x140020bbb
   140020ac2:	lea    r8,[rsp+0x30]
   140020ac7:	mov    edx,r12d
   140020aca:	mov    rcx,rdi
   140020acd:	mov    WORD PTR [rsp+rax*1+0x30],r13w
   140020ad3:	call   0x140020bd8
   140020ad8:	test   rax,rax
   140020adb:	je     0x140020adf
   140020add:	inc    esi
   140020adf:	lea    rbx,[r14+rbx*2]
   140020ae3:	cmp    WORD PTR [rbx],r13w
   140020ae7:	je     0x140020af7
   140020ae9:	add    rbx,0x2
   140020aed:	cmp    WORD PTR [rbx],r13w
   140020af1:	jne    0x1400209f6
   140020af7:	test   esi,esi
   140020af9:	je     0x140020bb3
   140020aff:	mov    rcx,rdi
   140020b02:	call   0x140020798
   140020b07:	mov    rcx,QWORD PTR [rsp+0x1f0]
   140020b0f:	xor    rcx,rsp
   140020b12:	call   0x14000c380
   140020b17:	mov    rbx,QWORD PTR [rsp+0x258]
   140020b1f:	add    rsp,0x200
   140020b26:	pop    r15
   140020b28:	pop    r14
   140020b2a:	pop    r13
   140020b2c:	pop    r12
   140020b2e:	pop    rdi
   140020b2f:	pop    rsi
   140020b30:	pop    rbp
   140020b31:	ret    
   140020b32:	xor    eax,eax
   140020b34:	jmp    0x140020b07
   140020b36:	lea    r9,[rsp+0x140]
   140020b3e:	lea    rdx,[rsp+0x30]
   140020b43:	mov    r8d,0x83
   140020b49:	mov    rcx,rbx
   140020b4c:	mov    QWORD PTR [rsp+0x28],r13
   140020b51:	mov    QWORD PTR [rsp+0x20],0x55
   140020b5a:	call   0x14001ff88
   140020b5f:	test   rax,rax
   140020b62:	je     0x140020b07
   140020b64:	mov    ebx,r13d
   140020b67:	lea    r14,[rdi+0x18]
   140020b6b:	test   ebx,ebx
   140020b6d:	je     0x140020b9b
   140020b6f:	mov    rdx,QWORD PTR [r14]
   140020b72:	lea    rcx,[rsp+0x30]
   140020b77:	call   0x140026c50
   140020b7c:	test   eax,eax
   140020b7e:	je     0x140020b99
   140020b80:	lea    r8,[rsp+0x30]
   140020b85:	mov    edx,ebx
   140020b87:	mov    rcx,rdi
   140020b8a:	call   0x140020bd8
   140020b8f:	test   rax,rax
   140020b92:	jne    0x140020b99
   140020b94:	mov    ebp,r13d
   140020b97:	jmp    0x140020b9b
   140020b99:	inc    esi
   140020b9b:	inc    ebx
   140020b9d:	add    r14,0x20
   140020ba1:	cmp    ebx,0x5
   140020ba4:	jle    0x140020b6b
   140020ba6:	test   ebp,ebp
   140020ba8:	jne    0x140020aff
   140020bae:	jmp    0x140020af7
   140020bb3:	mov    rax,r13
   140020bb6:	jmp    0x140020b07
   140020bbb:	call   0x140013d28
   140020bc0:	int3   
   140020bc1:	xor    r9d,r9d
   140020bc4:	xor    r8d,r8d
   140020bc7:	xor    edx,edx
   140020bc9:	xor    ecx,ecx
   140020bcb:	mov    QWORD PTR [rsp+0x20],r13
   140020bd0:	call   0x140008da8
   140020bd5:	int3   
   140020bd6:	int3   
   140020bd7:	int3   
   140020bd8:	mov    QWORD PTR [rsp+0x20],rbx
   140020bdd:	push   rbp
   140020bde:	push   rsi
   140020bdf:	push   rdi
   140020be0:	push   r12
   140020be2:	push   r13
   140020be4:	push   r14
   140020be6:	push   r15
   140020be8:	lea    rbp,[rsp-0x230]
   140020bf0:	sub    rsp,0x330
   140020bf7:	mov    rax,QWORD PTR [rip+0x1b5d2]        # 0x14003c1d0
   140020bfe:	xor    rax,rsp
   140020c01:	mov    QWORD PTR [rbp+0x220],rax
   140020c08:	mov    rbx,r8
   140020c0b:	movsxd r12,edx
   140020c0e:	mov    rdi,rcx
   140020c11:	call   0x14000a3ec
   140020c16:	lea    r9,[rbp+0x170]
   140020c1d:	lea    rdx,[rsp+0x60]
   140020c22:	lea    r14,[rax+0x370]
   140020c29:	lea    rax,[rsp+0x40]
   140020c2e:	mov    r8d,0x83
   140020c34:	mov    QWORD PTR [rsp+0x28],rax
   140020c39:	mov    rcx,rbx
   140020c3c:	mov    QWORD PTR [rsp+0x20],0x55
   140020c45:	call   0x14001ff88
   140020c4a:	test   rax,rax
   140020c4d:	jne    0x140020c7b
   140020c4f:	xor    eax,eax
   140020c51:	mov    rcx,QWORD PTR [rbp+0x220]
   140020c58:	xor    rcx,rsp
   140020c5b:	call   0x14000c380
   140020c60:	mov    rbx,QWORD PTR [rsp+0x388]
   140020c68:	add    rsp,0x330
   140020c6f:	pop    r15
   140020c71:	pop    r14
   140020c73:	pop    r13
   140020c75:	pop    r12
   140020c77:	pop    rdi
   140020c78:	pop    rsi
   140020c79:	pop    rbp
   140020c7a:	ret    
   140020c7b:	mov    rbx,r12
   140020c7e:	lea    rcx,[rsp+0x60]
   140020c83:	shl    rbx,0x5
   140020c87:	mov    rdx,QWORD PTR [rbx+rdi*1+0x18]
   140020c8c:	call   0x140026c50
   140020c91:	test   eax,eax
   140020c93:	jne    0x140020c9c
   140020c95:	mov    rax,QWORD PTR [rbx+rdi*1+0x18]
   140020c9a:	jmp    0x140020c51
   140020c9c:	lea    rcx,[rsp+0x60]
   140020ca1:	call   0x14001c4ac
   140020ca6:	mov    r15,rax
   140020ca9:	lea    rcx,[rax*2+0x6]
   140020cb1:	call   0x140008684
   140020cb6:	mov    r13,rax
   140020cb9:	test   rax,rax
   140020cbc:	je     0x140020c4f
   140020cbe:	mov    rcx,QWORD PTR [rbx+rdi*1+0x18]
   140020cc3:	lea    r8,[rsp+0x60]
   140020cc8:	lea    rdx,[r15+0x1]
   140020ccc:	mov    QWORD PTR [rsp+0x48],rcx
   140020cd1:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   140020cd9:	mov    QWORD PTR [rsp+0x50],rcx
   140020cde:	mov    ecx,DWORD PTR [rdi+0x4]
   140020ce1:	mov    DWORD PTR [rsp+0x44],ecx
   140020ce5:	lea    rcx,[rax+0x4]
   140020ce9:	call   0x14001c440
   140020cee:	xor    r15d,r15d
   140020cf1:	test   eax,eax
   140020cf3:	jne    0x140020ed1
   140020cf9:	cmp    WORD PTR [rsp+0x60],0x43
   140020cff:	lea    rax,[r13+0x4]
   140020d03:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   140020d08:	jne    0x140020d1c
   140020d0a:	cmp    WORD PTR [rsp+0x62],r15w
   140020d10:	jne    0x140020d1c
   140020d12:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   140020d1a:	jmp    0x140020d30
   140020d1c:	lea    rcx,[rbp+0x170]
   140020d23:	call   0x14001faf0
   140020d28:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   140020d30:	cmp    r12d,0x2
   140020d34:	jne    0x140020e10
   140020d3a:	mov    eax,DWORD PTR [rsp+0x40]
   140020d3e:	mov    r8d,r15d
   140020d41:	mov    rdx,r15
   140020d44:	mov    DWORD PTR [rdi+0x4],eax
   140020d47:	mov    rcx,QWORD PTR [r14+0x20]
   140020d4b:	mov    eax,DWORD PTR [r14+rdx*8]
   140020d4f:	cmp    DWORD PTR [rdi+0x4],eax
   140020d52:	je     0x140020d6d
   140020d54:	mov    rax,QWORD PTR [r14+rdx*8]
   140020d58:	mov    QWORD PTR [r14+rdx*8],rcx
   140020d5c:	inc    rdx
   140020d5f:	inc    r8d
   140020d62:	mov    rcx,rax
   140020d65:	cmp    rdx,0x5
   140020d69:	jl     0x140020d4b
   140020d6b:	jmp    0x140020d80
   140020d6d:	test   r8d,r8d
   140020d70:	je     0x140020d80
   140020d72:	movsxd rdx,r8d
   140020d75:	mov    rax,QWORD PTR [r14+rdx*8]
   140020d79:	mov    QWORD PTR [r14],rax
   140020d7c:	mov    QWORD PTR [r14+rdx*8],rcx
   140020d80:	cmp    r8d,0x5
   140020d84:	jne    0x140020e04
   140020d86:	mov    eax,DWORD PTR [rdi+0x4]
   140020d89:	lea    r9d,[r8+0x7a]
   140020d8d:	mov    DWORD PTR [rsp+0x30],0x1
   140020d95:	mov    DWORD PTR [rsp+0x28],eax
   140020d99:	lea    rax,[rbp+0x70]
   140020d9d:	lea    r8,[rip+0x13d3c]        # 0x140034ae0
   140020da4:	lea    edx,[r9-0x7e]
   140020da8:	xor    ecx,ecx
   140020daa:	mov    QWORD PTR [rsp+0x20],rax
   140020daf:	call   0x14001cd64
   140020db4:	test   eax,eax
   140020db6:	je     0x140020dfa
   140020db8:	mov    edx,r15d
   140020dbb:	lea    rcx,[rbp+0x70]
   140020dbf:	mov    eax,0x1ff
   140020dc4:	inc    edx
   140020dc6:	and    WORD PTR [rcx],ax
   140020dc9:	movsxd rax,edx
   140020dcc:	lea    rcx,[rcx+0x2]
   140020dd0:	cmp    rax,0x7f
   140020dd4:	jb     0x140020dbf
   140020dd6:	mov    rdx,QWORD PTR [rip+0x1c713]        # 0x14003d4f0
   140020ddd:	lea    rcx,[rbp+0x70]
   140020de1:	mov    r8d,0xfe
   140020de7:	call   0x140006e90
   140020dec:	mov    ecx,r15d
   140020def:	test   eax,eax
   140020df1:	sete   cl
   140020df4:	mov    DWORD PTR [r14+0x4],ecx
   140020df8:	jmp    0x140020dfe
   140020dfa:	mov    DWORD PTR [r14+0x4],r15d
   140020dfe:	mov    eax,DWORD PTR [rdi+0x4]
   140020e01:	mov    DWORD PTR [r14],eax
   140020e04:	mov    eax,DWORD PTR [r14+0x4]
   140020e08:	mov    DWORD PTR [rdi+0xd0],eax
   140020e0e:	jmp    0x140020e2c
   140020e10:	cmp    r12d,0x1
   140020e14:	jne    0x140020e1f
   140020e16:	mov    eax,DWORD PTR [rsp+0x40]
   140020e1a:	mov    DWORD PTR [rdi+0x8],eax
   140020e1d:	jmp    0x140020e2c
   140020e1f:	cmp    r12d,0x5
   140020e23:	jne    0x140020e2c
   140020e25:	mov    eax,DWORD PTR [rsp+0x40]
   140020e29:	mov    DWORD PTR [rdi+0xc],eax
   140020e2c:	lea    rax,[r12+r12*2]
   140020e30:	lea    rdx,[rip+0x13ba9]        # 0x1400349e0
   140020e37:	mov    rcx,rdi
   140020e3a:	call   QWORD PTR [rdx+rax*8]
   140020e3d:	test   eax,eax
   140020e3f:	je     0x140020e79
   140020e41:	mov    rax,QWORD PTR [rsp+0x48]
   140020e46:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   140020e4b:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   140020e53:	call   0x140007dc0
   140020e58:	mov    rax,QWORD PTR [rsp+0x50]
   140020e5d:	mov    rcx,r13
   140020e60:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   140020e68:	call   0x140007dc0
   140020e6d:	mov    eax,DWORD PTR [rsp+0x44]
   140020e71:	mov    DWORD PTR [rdi+0x4],eax
   140020e74:	jmp    0x140020c4f
   140020e79:	lea    rcx,[rip+0x1bf54]        # 0x14003cdd4
   140020e80:	cmp    QWORD PTR [rsp+0x48],rcx
   140020e85:	je     0x140020ebf
   140020e87:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   140020e8c:	lock dec DWORD PTR [rcx]
   140020e8f:	jne    0x140020ebf
   140020e91:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   140020e96:	call   0x140007dc0
   140020e9b:	mov    rcx,QWORD PTR [rbx+rdi*1+0x20]
   140020ea0:	call   0x140007dc0
   140020ea5:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   140020ead:	call   0x140007dc0
   140020eb2:	mov    QWORD PTR [rbx+rdi*1+0x18],r15
   140020eb7:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   140020ebf:	mov    DWORD PTR [r13+0x0],0x1
   140020ec7:	mov    QWORD PTR [rbx+rdi*1+0x28],r13
   140020ecc:	jmp    0x140020c95
   140020ed1:	xor    r9d,r9d
   140020ed4:	xor    r8d,r8d
   140020ed7:	xor    edx,edx
   140020ed9:	xor    ecx,ecx
   140020edb:	mov    QWORD PTR [rsp+0x20],r15
   140020ee0:	call   0x140008da8
   140020ee5:	int3   
   140020ee6:	int3   
   140020ee7:	int3   
   140020ee8:	mov    rcx,QWORD PTR [rip+0x1c1b1]        # 0x14003d0a0
   140020eef:	mov    rax,QWORD PTR [rcx+0xf0]
   140020ef6:	mov    QWORD PTR [rip+0x1c5b3],rax        # 0x14003d4b0
   140020efd:	mov    rax,QWORD PTR [rcx+0x108]
   140020f04:	mov    QWORD PTR [rip+0x1c5ad],rax        # 0x14003d4b8
   140020f0b:	mov    eax,DWORD PTR [rcx+0xd4]
   140020f11:	mov    DWORD PTR [rip+0x1beb9],eax        # 0x14003cdd0
   140020f17:	ret    
   140020f18:	sub    rcx,rdx
   140020f1b:	mov    r8d,0x3
   140020f21:	mov    eax,DWORD PTR [rdx]
   140020f23:	mov    DWORD PTR [rcx+rdx*1],eax
   140020f26:	lea    rdx,[rdx+0x4]
   140020f2a:	dec    r8
   140020f2d:	jne    0x140020f21
   140020f2f:	ret    
   140020f30:	and    QWORD PTR [rcx],0x0
   140020f34:	and    DWORD PTR [rcx+0x8],0x0
   140020f38:	ret    
   140020f39:	int3   
   140020f3a:	int3   
   140020f3b:	int3   
   140020f3c:	mov    r9,rcx
   140020f3f:	mov    eax,edx
   140020f41:	mov    ecx,0x1f
   140020f46:	cdq    
   140020f47:	mov    r8d,0x1
   140020f4d:	and    edx,ecx
   140020f4f:	add    eax,edx
   140020f51:	mov    r10d,eax
   140020f54:	and    eax,ecx
   140020f56:	sub    eax,edx
   140020f58:	sar    r10d,0x5
   140020f5c:	sub    ecx,eax
   140020f5e:	movsxd r11,r10d
   140020f61:	mov    eax,DWORD PTR [r9+r11*4]
   140020f65:	shl    r8d,cl
   140020f68:	xor    ecx,ecx
   140020f6a:	lea    edx,[rax+r8*1]
   140020f6e:	cmp    edx,eax
   140020f70:	jb     0x140020f77
   140020f72:	cmp    edx,r8d
   140020f75:	jae    0x140020f7c
   140020f77:	mov    ecx,0x1
   140020f7c:	lea    eax,[r10-0x1]
   140020f80:	mov    DWORD PTR [r9+r11*4],edx
   140020f84:	movsxd rdx,eax
   140020f87:	test   eax,eax
   140020f89:	js     0x140020fb2
   140020f8b:	test   ecx,ecx
   140020f8d:	je     0x140020fb2
   140020f8f:	mov    eax,DWORD PTR [r9+rdx*4]
   140020f93:	xor    ecx,ecx
   140020f95:	lea    r8d,[rax+0x1]
   140020f99:	cmp    r8d,eax
   140020f9c:	jb     0x140020fa4
   140020f9e:	cmp    r8d,0x1
   140020fa2:	jae    0x140020fa9
   140020fa4:	mov    ecx,0x1
   140020fa9:	mov    DWORD PTR [r9+rdx*4],r8d
   140020fad:	dec    rdx
   140020fb0:	jns    0x140020f8b
   140020fb2:	mov    eax,ecx
   140020fb4:	ret    
   140020fb5:	int3   
   140020fb6:	int3   
   140020fb7:	int3   
   140020fb8:	xor    edx,edx
   140020fba:	cmp    DWORD PTR [rcx+rdx*4],0x0
   140020fbe:	jne    0x140020fcf
   140020fc0:	inc    rdx
   140020fc3:	cmp    rdx,0x3
   140020fc7:	jl     0x140020fba
   140020fc9:	mov    eax,0x1
   140020fce:	ret    
   140020fcf:	xor    eax,eax
   140020fd1:	ret    
   140020fd2:	int3   
   140020fd3:	int3   
   140020fd4:	mov    QWORD PTR [rsp+0x8],rbx
   140020fd9:	mov    QWORD PTR [rsp+0x10],rbp
   140020fde:	mov    QWORD PTR [rsp+0x18],rsi
   140020fe3:	push   rdi
   140020fe4:	push   r14
   140020fe6:	push   r15
   140020fe8:	sub    rsp,0x20
   140020fec:	lea    r10d,[rdx-0x1]
   140020ff0:	xor    ebx,ebx
   140020ff2:	or     r11d,0xffffffff
   140020ff6:	lea    esi,[rbx+0x1f]
   140020ff9:	lea    eax,[r10+0x1]
   140020ffd:	mov    r8,rcx
   140021000:	cdq    
   140021001:	mov    r14d,esi
   140021004:	lea    r9d,[rbx+0x3]
   140021008:	and    edx,esi
   14002100a:	add    eax,edx
   14002100c:	mov    edi,eax
   14002100e:	and    eax,esi
   140021010:	sub    eax,edx
   140021012:	sar    edi,0x5
   140021015:	sub    r14d,eax
   140021018:	movsxd r15,edi
   14002101b:	mov    eax,DWORD PTR [rcx+r15*4]
   14002101f:	bt     eax,r14d
   140021023:	jae    0x1400210c5
   140021029:	mov    ecx,r14d
   14002102c:	mov    edx,r11d
   14002102f:	movsxd rax,edi
   140021032:	shl    edx,cl
   140021034:	not    edx
   140021036:	test   DWORD PTR [r8+rax*4],edx
   14002103a:	jne    0x140021054
   14002103c:	lea    eax,[rdi+0x1]
   14002103f:	movsxd rcx,eax
   140021042:	jmp    0x14002104d
   140021044:	cmp    DWORD PTR [r8+rcx*4],ebx
   140021048:	jne    0x140021054
   14002104a:	inc    rcx
   14002104d:	cmp    rcx,r9
   140021050:	jl     0x140021044
   140021052:	jmp    0x1400210c5
   140021054:	mov    eax,r10d
   140021057:	mov    r10d,0x1
   14002105d:	cdq    
   14002105e:	and    edx,esi
   140021060:	add    eax,edx
   140021062:	mov    ebp,eax
   140021064:	and    eax,esi
   140021066:	sub    eax,edx
   140021068:	sar    ebp,0x5
   14002106b:	sub    esi,eax
   14002106d:	mov    cl,sil
   140021070:	movsxd rsi,ebp
   140021073:	mov    eax,DWORD PTR [r8+rsi*4]
   140021077:	shl    r10d,cl
   14002107a:	mov    ecx,ebx
   14002107c:	lea    edx,[rax+r10*1]
   140021080:	cmp    edx,eax
   140021082:	jb     0x140021089
   140021084:	cmp    edx,r10d
   140021087:	jae    0x14002108e
   140021089:	mov    ecx,0x1
   14002108e:	lea    eax,[rbp-0x1]
   140021091:	mov    DWORD PTR [r8+rsi*4],edx
   140021095:	movsxd rdx,eax
   140021098:	test   eax,eax
   14002109a:	js     0x1400210c3
   14002109c:	test   ecx,ecx
   14002109e:	je     0x1400210c3
   1400210a0:	mov    eax,DWORD PTR [r8+rdx*4]
   1400210a4:	mov    ecx,ebx
   1400210a6:	lea    r10d,[rax+0x1]
   1400210aa:	cmp    r10d,eax
   1400210ad:	jb     0x1400210b5
   1400210af:	cmp    r10d,0x1
   1400210b3:	jae    0x1400210ba
   1400210b5:	mov    ecx,0x1
   1400210ba:	mov    DWORD PTR [r8+rdx*4],r10d
   1400210be:	dec    rdx
   1400210c1:	jns    0x14002109c
   1400210c3:	mov    ebx,ecx
   1400210c5:	lea    eax,[rdi+0x1]
   1400210c8:	mov    ecx,r14d
   1400210cb:	shl    r11d,cl
   1400210ce:	movsxd rdx,eax
   1400210d1:	and    DWORD PTR [r8+r15*4],r11d
   1400210d5:	cmp    rdx,r9
   1400210d8:	jge    0x1400210ef
   1400210da:	sub    r9,rdx
   1400210dd:	lea    rcx,[r8+rdx*4]
   1400210e1:	xor    edx,edx
   1400210e3:	shl    r9,0x2
   1400210e7:	mov    r8,r9
   1400210ea:	call   0x140006f70
   1400210ef:	mov    rbp,QWORD PTR [rsp+0x48]
   1400210f4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400210f9:	mov    eax,ebx
   1400210fb:	mov    rbx,QWORD PTR [rsp+0x40]
   140021100:	add    rsp,0x20
   140021104:	pop    r15
   140021106:	pop    r14
   140021108:	pop    rdi
   140021109:	ret    
   14002110a:	int3   
   14002110b:	int3   
   14002110c:	mov    rax,rsp
   14002110f:	mov    QWORD PTR [rax+0x8],rbx
   140021113:	mov    QWORD PTR [rax+0x10],rbp
   140021117:	mov    QWORD PTR [rax+0x18],rsi
   14002111b:	mov    QWORD PTR [rax+0x20],rdi
   14002111f:	xor    r9d,r9d
   140021122:	or     r10d,0xffffffff
   140021126:	mov    eax,edx
   140021128:	cdq    
   140021129:	mov    rbx,rcx
   14002112c:	lea    ebp,[r9+0x20]
   140021130:	and    edx,0x1f
   140021133:	mov    r8,rbx
   140021136:	lea    edi,[r9+0x3]
   14002113a:	add    eax,edx
   14002113c:	mov    r11d,eax
   14002113f:	and    eax,0x1f
   140021142:	sub    eax,edx
   140021144:	sar    r11d,0x5
   140021148:	mov    ecx,eax
   14002114a:	mov    esi,eax
   14002114c:	shl    r10d,cl
   14002114f:	sub    ebp,eax
   140021151:	not    r10d
   140021154:	mov    eax,DWORD PTR [r8]
   140021157:	mov    ecx,esi
   140021159:	mov    edx,eax
   14002115b:	shr    eax,cl
   14002115d:	mov    ecx,ebp
   14002115f:	or     eax,r9d
   140021162:	and    edx,r10d
   140021165:	mov    r9d,edx
   140021168:	mov    DWORD PTR [r8],eax
   14002116b:	lea    r8,[r8+0x4]
   14002116f:	shl    r9d,cl
   140021172:	dec    rdi
   140021175:	jne    0x140021154
   140021177:	movsxd r9,r11d
   14002117a:	lea    edx,[rdi+0x2]
   14002117d:	lea    rcx,[rbx+0x8]
   140021181:	mov    r8,r9
   140021184:	neg    r8
   140021187:	cmp    rdx,r9
   14002118a:	jl     0x140021194
   14002118c:	mov    eax,DWORD PTR [rcx+r8*4]
   140021190:	mov    DWORD PTR [rcx],eax
   140021192:	jmp    0x140021197
   140021194:	and    DWORD PTR [rcx],0x0
   140021197:	sub    rcx,0x4
   14002119b:	dec    rdx
   14002119e:	jns    0x140021187
   1400211a0:	mov    rbx,QWORD PTR [rsp+0x8]
   1400211a5:	mov    rbp,QWORD PTR [rsp+0x10]
   1400211aa:	mov    rsi,QWORD PTR [rsp+0x18]
   1400211af:	mov    rdi,QWORD PTR [rsp+0x20]
   1400211b4:	ret    
   1400211b5:	int3   
   1400211b6:	int3   
   1400211b7:	int3   
   1400211b8:	mov    eax,edx
   1400211ba:	mov    r9,rcx
   1400211bd:	mov    ecx,0x1f
   1400211c2:	cdq    
   1400211c3:	and    edx,ecx
   1400211c5:	add    eax,edx
   1400211c7:	mov    r8d,eax
   1400211ca:	and    eax,ecx
   1400211cc:	sub    eax,edx
   1400211ce:	or     edx,0xffffffff
   1400211d1:	sar    r8d,0x5
   1400211d5:	sub    ecx,eax
   1400211d7:	movsxd rax,r8d
   1400211da:	shl    edx,cl
   1400211dc:	not    edx
   1400211de:	test   DWORD PTR [r9+rax*4],edx
   1400211e2:	je     0x1400211e7
   1400211e4:	xor    eax,eax
   1400211e6:	ret    
   1400211e7:	lea    eax,[r8+0x1]
   1400211eb:	movsxd rcx,eax
   1400211ee:	jmp    0x1400211fa
   1400211f0:	cmp    DWORD PTR [r9+rcx*4],0x0
   1400211f5:	jne    0x1400211e4
   1400211f7:	inc    rcx
   1400211fa:	cmp    rcx,0x3
   1400211fe:	jl     0x1400211f0
   140021200:	mov    eax,0x1
   140021205:	ret    
   140021206:	int3   
   140021207:	int3   
   140021208:	lea    r9d,[rcx+rdx*1]
   14002120c:	xor    eax,eax
   14002120e:	cmp    r9d,ecx
   140021211:	jb     0x140021218
   140021213:	cmp    r9d,edx
   140021216:	jae    0x14002121d
   140021218:	mov    eax,0x1
   14002121d:	mov    DWORD PTR [r8],r9d
   140021220:	ret    
   140021221:	int3   
   140021222:	int3   
   140021223:	int3   
   140021224:	mov    QWORD PTR [rsp+0x8],rbx
   140021229:	push   rbp
   14002122a:	push   rsi
   14002122b:	push   rdi
   14002122c:	push   r12
   14002122e:	push   r13
   140021230:	push   r14
   140021232:	push   r15
   140021234:	mov    rbp,rsp
   140021237:	sub    rsp,0x70
   14002123b:	mov    rax,QWORD PTR [rip+0x1af8e]        # 0x14003c1d0
   140021242:	xor    rax,rsp
   140021245:	mov    QWORD PTR [rbp-0x10],rax
   140021249:	movzx  eax,WORD PTR [rcx+0xa]
   14002124d:	movzx  r11d,WORD PTR [rcx]
   140021251:	xor    ebx,ebx
   140021253:	mov    edi,eax
   140021255:	and    eax,0x8000
   14002125a:	shl    r11d,0x10
   14002125e:	mov    DWORD PTR [rbp-0x40],eax
   140021261:	mov    eax,DWORD PTR [rcx+0x6]
   140021264:	and    edi,0x7fff
   14002126a:	mov    DWORD PTR [rbp-0x20],eax
   14002126d:	mov    eax,DWORD PTR [rcx+0x2]
   140021270:	sub    edi,0x3fff
   140021276:	mov    r13d,0x1f
   14002127c:	mov    r9,r8
   14002127f:	mov    QWORD PTR [rbp-0x48],r8
   140021283:	mov    DWORD PTR [rbp-0x1c],eax
   140021286:	mov    QWORD PTR [rbp-0x38],rdx
   14002128a:	mov    DWORD PTR [rbp-0x2c],r11d
   14002128e:	mov    DWORD PTR [rbp-0x18],r11d
   140021292:	lea    esi,[rbx+0x1]
   140021295:	lea    r14d,[r13-0x1c]
   140021299:	cmp    edi,0xffffc001
   14002129f:	jne    0x1400212ca
   1400212a1:	mov    r8d,ebx
   1400212a4:	mov    eax,ebx
   1400212a6:	cmp    DWORD PTR [rbp+rax*4-0x20],ebx
   1400212aa:	jne    0x1400212b9
   1400212ac:	add    rax,rsi
   1400212af:	cmp    rax,r14
   1400212b2:	jl     0x1400212a6
   1400212b4:	jmp    0x14002176b
   1400212b9:	mov    QWORD PTR [rbp-0x20],rbx
   1400212bd:	mov    DWORD PTR [rbp-0x18],ebx
   1400212c0:	mov    ebx,0x2
   1400212c5:	jmp    0x14002176b
   1400212ca:	mov    rax,QWORD PTR [rbp-0x20]
   1400212ce:	or     r15d,0xffffffff
   1400212d2:	mov    DWORD PTR [rbp-0x50],edi
   1400212d5:	mov    QWORD PTR [rbp-0x28],rax
   1400212d9:	mov    eax,DWORD PTR [r8+0x8]
   1400212dd:	mov    r8d,r13d
   1400212e0:	dec    eax
   1400212e2:	mov    r12d,ebx
   1400212e5:	mov    DWORD PTR [rbp-0x4c],eax
   1400212e8:	inc    eax
   1400212ea:	cdq    
   1400212eb:	and    edx,r13d
   1400212ee:	add    eax,edx
   1400212f0:	mov    r9d,eax
   1400212f3:	and    eax,r13d
   1400212f6:	sar    r9d,0x5
   1400212fa:	sub    eax,edx
   1400212fc:	sub    r8d,eax
   1400212ff:	movsxd r10,r9d
   140021302:	mov    ecx,DWORD PTR [rbp+r10*4-0x20]
   140021307:	mov    DWORD PTR [rbp-0x30],r8d
   14002130b:	bt     ecx,r8d
   14002130f:	jae    0x1400213b3
   140021315:	mov    ecx,r8d
   140021318:	mov    eax,r15d
   14002131b:	movsxd rdx,r9d
   14002131e:	shl    eax,cl
   140021320:	not    eax
   140021322:	test   DWORD PTR [rbp+rdx*4-0x20],eax
   140021326:	jne    0x140021341
   140021328:	lea    eax,[r9+0x1]
   14002132c:	movsxd rcx,eax
   14002132f:	jmp    0x14002133a
   140021331:	cmp    DWORD PTR [rbp+rcx*4-0x20],ebx
   140021335:	jne    0x140021341
   140021337:	add    rcx,rsi
   14002133a:	cmp    rcx,r14
   14002133d:	jl     0x140021331
   14002133f:	jmp    0x1400213b3
   140021341:	mov    eax,DWORD PTR [rbp-0x4c]
   140021344:	mov    ecx,r13d
   140021347:	cdq    
   140021348:	and    edx,r13d
   14002134b:	add    eax,edx
   14002134d:	mov    r8d,eax
   140021350:	and    eax,r13d
   140021353:	sub    eax,edx
   140021355:	sar    r8d,0x5
   140021359:	mov    edx,esi
   14002135b:	sub    ecx,eax
   14002135d:	movsxd r10,r8d
   140021360:	mov    eax,DWORD PTR [rbp+r10*4-0x20]
   140021365:	shl    edx,cl
   140021367:	lea    ecx,[rax+rdx*1]
   14002136a:	cmp    ecx,eax
   14002136c:	jb     0x140021372
   14002136e:	cmp    ecx,edx
   140021370:	jae    0x140021375
   140021372:	mov    r12d,esi
   140021375:	lea    eax,[r8-0x1]
   140021379:	mov    DWORD PTR [rbp+r10*4-0x20],ecx
   14002137e:	movsxd rdx,eax
   140021381:	test   eax,eax
   140021383:	js     0x1400213ac
   140021385:	test   r12d,r12d
   140021388:	je     0x1400213ac
   14002138a:	mov    eax,DWORD PTR [rbp+rdx*4-0x20]
   14002138e:	mov    r12d,ebx
   140021391:	lea    r8d,[rax+0x1]
   140021395:	cmp    r8d,eax
   140021398:	jb     0x14002139f
   14002139a:	cmp    r8d,esi
   14002139d:	jae    0x1400213a2
   14002139f:	mov    r12d,esi
   1400213a2:	mov    DWORD PTR [rbp+rdx*4-0x20],r8d
   1400213a7:	sub    rdx,rsi
   1400213aa:	jns    0x140021385
   1400213ac:	mov    r8d,DWORD PTR [rbp-0x30]
   1400213b0:	movsxd r10,r9d
   1400213b3:	mov    ecx,r8d
   1400213b6:	mov    eax,r15d
   1400213b9:	shl    eax,cl
   1400213bb:	and    DWORD PTR [rbp+r10*4-0x20],eax
   1400213c0:	lea    eax,[r9+0x1]
   1400213c4:	movsxd rdx,eax
   1400213c7:	cmp    rdx,r14
   1400213ca:	jge    0x1400213e9
   1400213cc:	lea    rcx,[rbp-0x20]
   1400213d0:	mov    r8,r14
   1400213d3:	sub    r8,rdx
   1400213d6:	lea    rcx,[rcx+rdx*4]
   1400213da:	xor    edx,edx
   1400213dc:	shl    r8,0x2
   1400213e0:	call   0x140006f70
   1400213e5:	mov    r11d,DWORD PTR [rbp-0x2c]
   1400213e9:	test   r12d,r12d
   1400213ec:	je     0x1400213f0
   1400213ee:	add    edi,esi
   1400213f0:	mov    r9,QWORD PTR [rbp-0x48]
   1400213f4:	mov    ecx,DWORD PTR [r9+0x4]
   1400213f8:	mov    eax,ecx
   1400213fa:	sub    eax,DWORD PTR [r9+0x8]
   1400213fe:	cmp    edi,eax
   140021400:	jge    0x140021416
   140021402:	mov    QWORD PTR [rbp-0x20],rbx
   140021406:	mov    DWORD PTR [rbp-0x18],ebx
   140021409:	mov    r8d,ebx
   14002140c:	mov    ebx,0x2
   140021411:	jmp    0x140021767
   140021416:	cmp    edi,ecx
   140021418:	jg     0x140021650
   14002141e:	sub    ecx,DWORD PTR [rbp-0x50]
   140021421:	mov    rax,QWORD PTR [rbp-0x28]
   140021425:	mov    r10d,r15d
   140021428:	mov    QWORD PTR [rbp-0x20],rax
   14002142c:	mov    eax,ecx
   14002142e:	mov    DWORD PTR [rbp-0x18],r11d
   140021432:	cdq    
   140021433:	mov    r11,r14
   140021436:	mov    r9d,ebx
   140021439:	and    edx,r13d
   14002143c:	lea    r8,[rbp-0x20]
   140021440:	add    eax,edx
   140021442:	mov    r12d,eax
   140021445:	and    eax,r13d
   140021448:	sub    eax,edx
   14002144a:	sar    r12d,0x5
   14002144e:	mov    ecx,eax
   140021450:	mov    edi,eax
   140021452:	mov    eax,0x20
   140021457:	shl    r10d,cl
   14002145a:	sub    eax,ecx
   14002145c:	mov    r14d,eax
   14002145f:	not    r10d
   140021462:	mov    eax,DWORD PTR [r8]
   140021465:	mov    ecx,edi
   140021467:	mov    edx,eax
   140021469:	shr    eax,cl
   14002146b:	mov    ecx,r14d
   14002146e:	or     eax,r9d
   140021471:	and    edx,r10d
   140021474:	mov    r9d,edx
   140021477:	mov    DWORD PTR [r8],eax
   14002147a:	lea    r8,[r8+0x4]
   14002147e:	shl    r9d,cl
   140021481:	sub    r11,rsi
   140021484:	jne    0x140021462
   140021486:	movsxd r10,r12d
   140021489:	lea    edi,[r11+0x2]
   14002148d:	lea    r14d,[r11+0x3]
   140021491:	mov    r9,r10
   140021494:	mov    r8d,edi
   140021497:	neg    r9
   14002149a:	cmp    r8,r10
   14002149d:	jl     0x1400214b4
   14002149f:	mov    rdx,r8
   1400214a2:	shl    rdx,0x2
   1400214a6:	lea    rax,[rdx+r9*4]
   1400214aa:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   1400214ae:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   1400214b2:	jmp    0x1400214b9
   1400214b4:	mov    DWORD PTR [rbp+r8*4-0x20],ebx
   1400214b9:	sub    r8,rsi
   1400214bc:	jns    0x14002149a
   1400214be:	mov    r8d,DWORD PTR [rbp-0x4c]
   1400214c2:	mov    r11d,r13d
   1400214c5:	lea    eax,[r8+0x1]
   1400214c9:	cdq    
   1400214ca:	and    edx,r13d
   1400214cd:	add    eax,edx
   1400214cf:	mov    r9d,eax
   1400214d2:	and    eax,r13d
   1400214d5:	sub    eax,edx
   1400214d7:	sar    r9d,0x5
   1400214db:	sub    r11d,eax
   1400214de:	movsxd rax,r9d
   1400214e1:	mov    ecx,DWORD PTR [rbp+rax*4-0x20]
   1400214e5:	bt     ecx,r11d
   1400214e9:	jae    0x140021587
   1400214ef:	mov    ecx,r11d
   1400214f2:	mov    eax,r15d
   1400214f5:	movsxd rdx,r9d
   1400214f8:	shl    eax,cl
   1400214fa:	not    eax
   1400214fc:	test   DWORD PTR [rbp+rdx*4-0x20],eax
   140021500:	jne    0x14002151b
   140021502:	lea    eax,[r9+0x1]
   140021506:	movsxd rcx,eax
   140021509:	jmp    0x140021514
   14002150b:	cmp    DWORD PTR [rbp+rcx*4-0x20],ebx
   14002150f:	jne    0x14002151b
   140021511:	add    rcx,rsi
   140021514:	cmp    rcx,r14
   140021517:	jl     0x14002150b
   140021519:	jmp    0x140021587
   14002151b:	mov    eax,r8d
   14002151e:	mov    ecx,r13d
   140021521:	cdq    
   140021522:	and    edx,r13d
   140021525:	add    eax,edx
   140021527:	mov    r10d,eax
   14002152a:	and    eax,r13d
   14002152d:	sub    eax,edx
   14002152f:	sar    r10d,0x5
   140021533:	mov    edx,esi
   140021535:	sub    ecx,eax
   140021537:	movsxd r12,r10d
   14002153a:	mov    eax,DWORD PTR [rbp+r12*4-0x20]
   14002153f:	shl    edx,cl
   140021541:	mov    ecx,ebx
   140021543:	lea    r8d,[rax+rdx*1]
   140021547:	cmp    r8d,eax
   14002154a:	jb     0x140021551
   14002154c:	cmp    r8d,edx
   14002154f:	jae    0x140021553
   140021551:	mov    ecx,esi
   140021553:	lea    eax,[r10-0x1]
   140021557:	mov    DWORD PTR [rbp+r12*4-0x20],r8d
   14002155c:	movsxd rdx,eax
   14002155f:	test   eax,eax
   140021561:	js     0x140021587
   140021563:	test   ecx,ecx
   140021565:	je     0x140021587
   140021567:	mov    eax,DWORD PTR [rbp+rdx*4-0x20]
   14002156b:	mov    ecx,ebx
   14002156d:	lea    r8d,[rax+0x1]
   140021571:	cmp    r8d,eax
   140021574:	jb     0x14002157b
   140021576:	cmp    r8d,esi
   140021579:	jae    0x14002157d
   14002157b:	mov    ecx,esi
   14002157d:	mov    DWORD PTR [rbp+rdx*4-0x20],r8d
   140021582:	sub    rdx,rsi
   140021585:	jns    0x140021563
   140021587:	mov    ecx,r11d
   14002158a:	mov    eax,r15d
   14002158d:	shl    eax,cl
   14002158f:	movsxd rcx,r9d
   140021592:	and    DWORD PTR [rbp+rcx*4-0x20],eax
   140021596:	lea    eax,[r9+0x1]
   14002159a:	movsxd rdx,eax
   14002159d:	cmp    rdx,r14
   1400215a0:	jge    0x1400215bb
   1400215a2:	lea    rcx,[rbp-0x20]
   1400215a6:	mov    r8,r14
   1400215a9:	sub    r8,rdx
   1400215ac:	lea    rcx,[rcx+rdx*4]
   1400215b0:	xor    edx,edx
   1400215b2:	shl    r8,0x2
   1400215b6:	call   0x140006f70
   1400215bb:	mov    rax,QWORD PTR [rbp-0x48]
   1400215bf:	mov    r12d,0x20
   1400215c5:	mov    r9d,ebx
   1400215c8:	mov    eax,DWORD PTR [rax+0xc]
   1400215cb:	lea    r8,[rbp-0x20]
   1400215cf:	add    eax,esi
   1400215d1:	cdq    
   1400215d2:	and    edx,r13d
   1400215d5:	add    eax,edx
   1400215d7:	mov    r10d,eax
   1400215da:	and    eax,r13d
   1400215dd:	sub    eax,edx
   1400215df:	sar    r10d,0x5
   1400215e3:	mov    ecx,eax
   1400215e5:	mov    r11d,eax
   1400215e8:	shl    r15d,cl
   1400215eb:	sub    r12d,eax
   1400215ee:	not    r15d
   1400215f1:	mov    eax,DWORD PTR [r8]
   1400215f4:	mov    ecx,r11d
   1400215f7:	mov    edx,eax
   1400215f9:	shr    eax,cl
   1400215fb:	mov    ecx,r12d
   1400215fe:	or     eax,r9d
   140021601:	and    edx,r15d
   140021604:	mov    r9d,edx
   140021607:	mov    DWORD PTR [r8],eax
   14002160a:	lea    r8,[r8+0x4]
   14002160e:	shl    r9d,cl
   140021611:	sub    r14,rsi
   140021614:	jne    0x1400215f1
   140021616:	movsxd r10,r10d
   140021619:	mov    r8,rdi
   14002161c:	mov    r9,r10
   14002161f:	neg    r9
   140021622:	cmp    r8,r10
   140021625:	jl     0x14002163c
   140021627:	mov    rdx,r8
   14002162a:	shl    rdx,0x2
   14002162e:	lea    rax,[rdx+r9*4]
   140021632:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   140021636:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14002163a:	jmp    0x140021641
   14002163c:	mov    DWORD PTR [rbp+r8*4-0x20],ebx
   140021641:	sub    r8,rsi
   140021644:	jns    0x140021622
   140021646:	mov    r8d,ebx
   140021649:	mov    ebx,edi
   14002164b:	jmp    0x140021763
   140021650:	mov    eax,DWORD PTR [r9+0xc]
   140021654:	mov    r10d,DWORD PTR [r9]
   140021657:	mov    r12d,0x20
   14002165d:	cdq    
   14002165e:	and    edx,r13d
   140021661:	add    eax,edx
   140021663:	mov    r11d,eax
   140021666:	and    eax,r13d
   140021669:	sub    eax,edx
   14002166b:	sar    r11d,0x5
   14002166f:	mov    ecx,eax
   140021671:	shl    r15d,cl
   140021674:	not    r15d
   140021677:	cmp    edi,r10d
   14002167a:	jl     0x1400216f7
   14002167c:	mov    QWORD PTR [rbp-0x20],rbx
   140021680:	bts    DWORD PTR [rbp-0x20],0x1f
   140021685:	mov    DWORD PTR [rbp-0x18],ebx
   140021688:	sub    r12d,eax
   14002168b:	mov    edi,eax
   14002168d:	mov    r9d,ebx
   140021690:	lea    r8,[rbp-0x20]
   140021694:	mov    eax,DWORD PTR [r8]
   140021697:	mov    ecx,edi
   140021699:	mov    edx,r15d
   14002169c:	and    edx,eax
   14002169e:	shr    eax,cl
   1400216a0:	mov    ecx,r12d
   1400216a3:	or     eax,r9d
   1400216a6:	mov    r9d,edx
   1400216a9:	shl    r9d,cl
   1400216ac:	mov    DWORD PTR [r8],eax
   1400216af:	lea    r8,[r8+0x4]
   1400216b3:	sub    r14,rsi
   1400216b6:	jne    0x140021694
   1400216b8:	movsxd r9,r11d
   1400216bb:	lea    edi,[r14+0x2]
   1400216bf:	mov    r8,r9
   1400216c2:	neg    r8
   1400216c5:	cmp    rdi,r9
   1400216c8:	jl     0x1400216df
   1400216ca:	mov    rdx,rdi
   1400216cd:	shl    rdx,0x2
   1400216d1:	lea    rax,[rdx+r8*4]
   1400216d5:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   1400216d9:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   1400216dd:	jmp    0x1400216e3
   1400216df:	mov    DWORD PTR [rbp+rdi*4-0x20],ebx
   1400216e3:	sub    rdi,rsi
   1400216e6:	jns    0x1400216c5
   1400216e8:	mov    r9,QWORD PTR [rbp-0x48]
   1400216ec:	mov    ebx,esi
   1400216ee:	mov    r8d,DWORD PTR [r9+0x14]
   1400216f2:	add    r8d,r10d
   1400216f5:	jmp    0x140021767
   1400216f7:	mov    r8d,DWORD PTR [r9+0x14]
   1400216fb:	btr    DWORD PTR [rbp-0x20],0x1f
   140021700:	mov    r10d,ebx
   140021703:	add    r8d,edi
   140021706:	mov    edi,eax
   140021708:	sub    r12d,eax
   14002170b:	lea    r9,[rbp-0x20]
   14002170f:	mov    eax,DWORD PTR [r9]
   140021712:	mov    ecx,edi
   140021714:	mov    edx,eax
   140021716:	shr    eax,cl
   140021718:	mov    ecx,r12d
   14002171b:	or     eax,r10d
   14002171e:	and    edx,r15d
   140021721:	mov    r10d,edx
   140021724:	mov    DWORD PTR [r9],eax
   140021727:	lea    r9,[r9+0x4]
   14002172b:	shl    r10d,cl
   14002172e:	sub    r14,rsi
   140021731:	jne    0x14002170f
   140021733:	movsxd r10,r11d
   140021736:	lea    edi,[r14+0x2]
   14002173a:	mov    r9,r10
   14002173d:	neg    r9
   140021740:	cmp    rdi,r10
   140021743:	jl     0x14002175a
   140021745:	mov    rdx,rdi
   140021748:	shl    rdx,0x2
   14002174c:	lea    rax,[rdx+r9*4]
   140021750:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   140021754:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   140021758:	jmp    0x14002175e
   14002175a:	mov    DWORD PTR [rbp+rdi*4-0x20],ebx
   14002175e:	sub    rdi,rsi
   140021761:	jns    0x140021740
   140021763:	mov    r9,QWORD PTR [rbp-0x48]
   140021767:	mov    rdx,QWORD PTR [rbp-0x38]
   14002176b:	sub    r13d,DWORD PTR [r9+0xc]
   14002176f:	mov    cl,r13b
   140021772:	shl    r8d,cl
   140021775:	neg    DWORD PTR [rbp-0x40]
   140021778:	sbb    eax,eax
   14002177a:	and    eax,0x80000000
   14002177f:	or     r8d,eax
   140021782:	or     r8d,DWORD PTR [rbp-0x20]
   140021786:	cmp    DWORD PTR [r9+0x10],0x40
   14002178b:	jne    0x140021798
   14002178d:	mov    eax,DWORD PTR [rbp-0x1c]
   140021790:	mov    DWORD PTR [rdx+0x4],r8d
   140021794:	mov    DWORD PTR [rdx],eax
   140021796:	jmp    0x1400217a2
   140021798:	cmp    DWORD PTR [r9+0x10],0x20
   14002179d:	jne    0x1400217a2
   14002179f:	mov    DWORD PTR [rdx],r8d
   1400217a2:	mov    eax,ebx
   1400217a4:	mov    rcx,QWORD PTR [rbp-0x10]
   1400217a8:	xor    rcx,rsp
   1400217ab:	call   0x14000c380
   1400217b0:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400217b8:	add    rsp,0x70
   1400217bc:	pop    r15
   1400217be:	pop    r14
   1400217c0:	pop    r13
   1400217c2:	pop    r12
   1400217c4:	pop    rdi
   1400217c5:	pop    rsi
   1400217c6:	pop    rbp
   1400217c7:	ret    
   1400217c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400217cd:	mov    QWORD PTR [rsp+0x18],rsi
   1400217d2:	mov    QWORD PTR [rsp+0x20],rdi
   1400217d7:	push   rbp
   1400217d8:	push   r12
   1400217da:	push   r13
   1400217dc:	push   r14
   1400217de:	push   r15
   1400217e0:	mov    rbp,rsp
   1400217e3:	sub    rsp,0x60
   1400217e7:	mov    rax,QWORD PTR [rip+0x1a9e2]        # 0x14003c1d0
   1400217ee:	xor    rax,rsp
   1400217f1:	mov    QWORD PTR [rbp-0x8],rax
   1400217f5:	movzx  eax,WORD PTR [rcx+0xa]
   1400217f9:	movzx  r9d,WORD PTR [rcx]
   1400217fd:	xor    ebx,ebx
   1400217ff:	mov    edi,eax
   140021801:	and    eax,0x8000
   140021806:	shl    r9d,0x10
   14002180a:	mov    DWORD PTR [rbp-0x3c],eax
   14002180d:	mov    eax,DWORD PTR [rcx+0x6]
   140021810:	and    edi,0x7fff
   140021816:	mov    DWORD PTR [rbp-0x18],eax
   140021819:	mov    eax,DWORD PTR [rcx+0x2]
   14002181c:	sub    edi,0x3fff
   140021822:	mov    r12d,0x1f
   140021828:	mov    QWORD PTR [rbp-0x30],rdx
   14002182c:	mov    DWORD PTR [rbp-0x28],r9d
   140021830:	mov    DWORD PTR [rbp-0x14],eax
   140021833:	mov    DWORD PTR [rbp-0x10],r9d
   140021837:	lea    esi,[rbx+0x1]
   14002183a:	lea    r14d,[r12-0x1c]
   14002183f:	cmp    edi,0xffffc001
   140021845:	jne    0x140021870
   140021847:	mov    r8d,ebx
   14002184a:	mov    eax,ebx
   14002184c:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   140021850:	jne    0x14002185f
   140021852:	add    rax,rsi
   140021855:	cmp    rax,r14
   140021858:	jl     0x14002184c
   14002185a:	jmp    0x140021d16
   14002185f:	mov    QWORD PTR [rbp-0x18],rbx
   140021863:	mov    DWORD PTR [rbp-0x10],ebx
   140021866:	mov    ebx,0x2
   14002186b:	jmp    0x140021d16
   140021870:	mov    rax,QWORD PTR [rbp-0x18]
   140021874:	mov    r8d,r12d
   140021877:	or     r15d,0xffffffff
   14002187b:	mov    QWORD PTR [rbp-0x20],rax
   14002187f:	mov    eax,DWORD PTR [rip+0x1bc7b]        # 0x14003d500
   140021885:	mov    DWORD PTR [rbp-0x40],edi
   140021888:	dec    eax
   14002188a:	mov    r13d,ebx
   14002188d:	mov    DWORD PTR [rbp-0x38],eax
   140021890:	inc    eax
   140021892:	cdq    
   140021893:	and    edx,r12d
   140021896:	add    eax,edx
   140021898:	mov    r10d,eax
   14002189b:	and    eax,r12d
   14002189e:	sar    r10d,0x5
   1400218a2:	sub    eax,edx
   1400218a4:	sub    r8d,eax
   1400218a7:	movsxd r11,r10d
   1400218aa:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   1400218af:	mov    DWORD PTR [rbp-0x24],r8d
   1400218b3:	bt     ecx,r8d
   1400218b7:	jae    0x14002195b
   1400218bd:	mov    ecx,r8d
   1400218c0:	mov    eax,r15d
   1400218c3:	movsxd rdx,r10d
   1400218c6:	shl    eax,cl
   1400218c8:	not    eax
   1400218ca:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   1400218ce:	jne    0x1400218e9
   1400218d0:	lea    eax,[r10+0x1]
   1400218d4:	movsxd rcx,eax
   1400218d7:	jmp    0x1400218e2
   1400218d9:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   1400218dd:	jne    0x1400218e9
   1400218df:	add    rcx,rsi
   1400218e2:	cmp    rcx,r14
   1400218e5:	jl     0x1400218d9
   1400218e7:	jmp    0x14002195b
   1400218e9:	mov    eax,DWORD PTR [rbp-0x38]
   1400218ec:	mov    ecx,r12d
   1400218ef:	cdq    
   1400218f0:	and    edx,r12d
   1400218f3:	add    eax,edx
   1400218f5:	mov    r8d,eax
   1400218f8:	and    eax,r12d
   1400218fb:	sub    eax,edx
   1400218fd:	sar    r8d,0x5
   140021901:	mov    edx,esi
   140021903:	sub    ecx,eax
   140021905:	movsxd r11,r8d
   140021908:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   14002190d:	shl    edx,cl
   14002190f:	lea    ecx,[rax+rdx*1]
   140021912:	cmp    ecx,eax
   140021914:	jb     0x14002191a
   140021916:	cmp    ecx,edx
   140021918:	jae    0x14002191d
   14002191a:	mov    r13d,esi
   14002191d:	lea    eax,[r8-0x1]
   140021921:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   140021926:	movsxd rdx,eax
   140021929:	test   eax,eax
   14002192b:	js     0x140021954
   14002192d:	test   r13d,r13d
   140021930:	je     0x140021954
   140021932:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140021936:	mov    r13d,ebx
   140021939:	lea    r8d,[rax+0x1]
   14002193d:	cmp    r8d,eax
   140021940:	jb     0x140021947
   140021942:	cmp    r8d,esi
   140021945:	jae    0x14002194a
   140021947:	mov    r13d,esi
   14002194a:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14002194f:	sub    rdx,rsi
   140021952:	jns    0x14002192d
   140021954:	mov    r8d,DWORD PTR [rbp-0x24]
   140021958:	movsxd r11,r10d
   14002195b:	mov    ecx,r8d
   14002195e:	mov    eax,r15d
   140021961:	shl    eax,cl
   140021963:	and    DWORD PTR [rbp+r11*4-0x18],eax
   140021968:	lea    eax,[r10+0x1]
   14002196c:	movsxd rdx,eax
   14002196f:	cmp    rdx,r14
   140021972:	jge    0x140021991
   140021974:	lea    rcx,[rbp-0x18]
   140021978:	mov    r8,r14
   14002197b:	sub    r8,rdx
   14002197e:	lea    rcx,[rcx+rdx*4]
   140021982:	xor    edx,edx
   140021984:	shl    r8,0x2
   140021988:	call   0x140006f70
   14002198d:	mov    r9d,DWORD PTR [rbp-0x28]
   140021991:	test   r13d,r13d
   140021994:	je     0x140021998
   140021996:	add    edi,esi
   140021998:	mov    ecx,DWORD PTR [rip+0x1bb5e]        # 0x14003d4fc
   14002199e:	mov    eax,ecx
   1400219a0:	sub    eax,DWORD PTR [rip+0x1bb5a]        # 0x14003d500
   1400219a6:	cmp    edi,eax
   1400219a8:	jge    0x1400219be
   1400219aa:	mov    QWORD PTR [rbp-0x18],rbx
   1400219ae:	mov    DWORD PTR [rbp-0x10],ebx
   1400219b1:	mov    r8d,ebx
   1400219b4:	mov    ebx,0x2
   1400219b9:	jmp    0x140021d12
   1400219be:	cmp    edi,ecx
   1400219c0:	jg     0x140021bf7
   1400219c6:	sub    ecx,DWORD PTR [rbp-0x40]
   1400219c9:	mov    rax,QWORD PTR [rbp-0x20]
   1400219cd:	mov    r10d,r15d
   1400219d0:	mov    QWORD PTR [rbp-0x18],rax
   1400219d4:	mov    eax,ecx
   1400219d6:	mov    DWORD PTR [rbp-0x10],r9d
   1400219da:	cdq    
   1400219db:	mov    r11,r14
   1400219de:	mov    r9d,ebx
   1400219e1:	and    edx,r12d
   1400219e4:	lea    r8,[rbp-0x18]
   1400219e8:	add    eax,edx
   1400219ea:	mov    r13d,eax
   1400219ed:	and    eax,r12d
   1400219f0:	sub    eax,edx
   1400219f2:	sar    r13d,0x5
   1400219f6:	mov    ecx,eax
   1400219f8:	mov    edi,eax
   1400219fa:	mov    eax,0x20
   1400219ff:	shl    r10d,cl
   140021a02:	sub    eax,ecx
   140021a04:	mov    r14d,eax
   140021a07:	not    r10d
   140021a0a:	mov    eax,DWORD PTR [r8]
   140021a0d:	mov    ecx,edi
   140021a0f:	mov    edx,eax
   140021a11:	shr    eax,cl
   140021a13:	mov    ecx,r14d
   140021a16:	or     eax,r9d
   140021a19:	and    edx,r10d
   140021a1c:	mov    r9d,edx
   140021a1f:	mov    DWORD PTR [r8],eax
   140021a22:	lea    r8,[r8+0x4]
   140021a26:	shl    r9d,cl
   140021a29:	sub    r11,rsi
   140021a2c:	jne    0x140021a0a
   140021a2e:	movsxd r10,r13d
   140021a31:	lea    edi,[r11+0x2]
   140021a35:	lea    r14d,[r11+0x3]
   140021a39:	mov    r9,r10
   140021a3c:	mov    r8d,edi
   140021a3f:	neg    r9
   140021a42:	cmp    r8,r10
   140021a45:	jl     0x140021a5c
   140021a47:	mov    rdx,r8
   140021a4a:	shl    rdx,0x2
   140021a4e:	lea    rax,[rdx+r9*4]
   140021a52:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140021a56:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140021a5a:	jmp    0x140021a61
   140021a5c:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140021a61:	sub    r8,rsi
   140021a64:	jns    0x140021a42
   140021a66:	mov    r8d,DWORD PTR [rbp-0x38]
   140021a6a:	mov    r11d,r12d
   140021a6d:	lea    eax,[r8+0x1]
   140021a71:	cdq    
   140021a72:	and    edx,r12d
   140021a75:	add    eax,edx
   140021a77:	mov    r9d,eax
   140021a7a:	and    eax,r12d
   140021a7d:	sub    eax,edx
   140021a7f:	sar    r9d,0x5
   140021a83:	sub    r11d,eax
   140021a86:	movsxd rax,r9d
   140021a89:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   140021a8d:	bt     ecx,r11d
   140021a91:	jae    0x140021b2f
   140021a97:	mov    ecx,r11d
   140021a9a:	mov    eax,r15d
   140021a9d:	movsxd rdx,r9d
   140021aa0:	shl    eax,cl
   140021aa2:	not    eax
   140021aa4:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   140021aa8:	jne    0x140021ac3
   140021aaa:	lea    eax,[r9+0x1]
   140021aae:	movsxd rcx,eax
   140021ab1:	jmp    0x140021abc
   140021ab3:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   140021ab7:	jne    0x140021ac3
   140021ab9:	add    rcx,rsi
   140021abc:	cmp    rcx,r14
   140021abf:	jl     0x140021ab3
   140021ac1:	jmp    0x140021b2f
   140021ac3:	mov    eax,r8d
   140021ac6:	mov    ecx,r12d
   140021ac9:	cdq    
   140021aca:	and    edx,r12d
   140021acd:	add    eax,edx
   140021acf:	mov    r10d,eax
   140021ad2:	and    eax,r12d
   140021ad5:	sub    eax,edx
   140021ad7:	sar    r10d,0x5
   140021adb:	mov    edx,esi
   140021add:	sub    ecx,eax
   140021adf:	movsxd r13,r10d
   140021ae2:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   140021ae7:	shl    edx,cl
   140021ae9:	mov    ecx,ebx
   140021aeb:	lea    r8d,[rax+rdx*1]
   140021aef:	cmp    r8d,eax
   140021af2:	jb     0x140021af9
   140021af4:	cmp    r8d,edx
   140021af7:	jae    0x140021afb
   140021af9:	mov    ecx,esi
   140021afb:	lea    eax,[r10-0x1]
   140021aff:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   140021b04:	movsxd rdx,eax
   140021b07:	test   eax,eax
   140021b09:	js     0x140021b2f
   140021b0b:	test   ecx,ecx
   140021b0d:	je     0x140021b2f
   140021b0f:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140021b13:	mov    ecx,ebx
   140021b15:	lea    r8d,[rax+0x1]
   140021b19:	cmp    r8d,eax
   140021b1c:	jb     0x140021b23
   140021b1e:	cmp    r8d,esi
   140021b21:	jae    0x140021b25
   140021b23:	mov    ecx,esi
   140021b25:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   140021b2a:	sub    rdx,rsi
   140021b2d:	jns    0x140021b0b
   140021b2f:	mov    ecx,r11d
   140021b32:	mov    eax,r15d
   140021b35:	shl    eax,cl
   140021b37:	movsxd rcx,r9d
   140021b3a:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   140021b3e:	lea    eax,[r9+0x1]
   140021b42:	movsxd rdx,eax
   140021b45:	cmp    rdx,r14
   140021b48:	jge    0x140021b63
   140021b4a:	lea    rcx,[rbp-0x18]
   140021b4e:	mov    r8,r14
   140021b51:	sub    r8,rdx
   140021b54:	lea    rcx,[rcx+rdx*4]
   140021b58:	xor    edx,edx
   140021b5a:	shl    r8,0x2
   140021b5e:	call   0x140006f70
   140021b63:	mov    eax,DWORD PTR [rip+0x1b99b]        # 0x14003d504
   140021b69:	mov    r13d,0x20
   140021b6f:	mov    r9d,ebx
   140021b72:	inc    eax
   140021b74:	lea    r8,[rbp-0x18]
   140021b78:	cdq    
   140021b79:	and    edx,r12d
   140021b7c:	add    eax,edx
   140021b7e:	mov    r10d,eax
   140021b81:	and    eax,r12d
   140021b84:	sub    eax,edx
   140021b86:	sar    r10d,0x5
   140021b8a:	mov    ecx,eax
   140021b8c:	mov    r11d,eax
   140021b8f:	shl    r15d,cl
   140021b92:	sub    r13d,eax
   140021b95:	not    r15d
   140021b98:	mov    eax,DWORD PTR [r8]
   140021b9b:	mov    ecx,r11d
   140021b9e:	mov    edx,eax
   140021ba0:	shr    eax,cl
   140021ba2:	mov    ecx,r13d
   140021ba5:	or     eax,r9d
   140021ba8:	and    edx,r15d
   140021bab:	mov    r9d,edx
   140021bae:	mov    DWORD PTR [r8],eax
   140021bb1:	lea    r8,[r8+0x4]
   140021bb5:	shl    r9d,cl
   140021bb8:	sub    r14,rsi
   140021bbb:	jne    0x140021b98
   140021bbd:	movsxd r10,r10d
   140021bc0:	mov    r8,rdi
   140021bc3:	mov    r9,r10
   140021bc6:	neg    r9
   140021bc9:	cmp    r8,r10
   140021bcc:	jl     0x140021be3
   140021bce:	mov    rdx,r8
   140021bd1:	shl    rdx,0x2
   140021bd5:	lea    rax,[rdx+r9*4]
   140021bd9:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140021bdd:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140021be1:	jmp    0x140021be8
   140021be3:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140021be8:	sub    r8,rsi
   140021beb:	jns    0x140021bc9
   140021bed:	mov    r8d,ebx
   140021bf0:	mov    ebx,edi
   140021bf2:	jmp    0x140021d12
   140021bf7:	mov    eax,DWORD PTR [rip+0x1b907]        # 0x14003d504
   140021bfd:	mov    r10d,DWORD PTR [rip+0x1b8f4]        # 0x14003d4f8
   140021c04:	mov    r13d,0x20
   140021c0a:	cdq    
   140021c0b:	and    edx,r12d
   140021c0e:	add    eax,edx
   140021c10:	mov    r11d,eax
   140021c13:	and    eax,r12d
   140021c16:	sub    eax,edx
   140021c18:	sar    r11d,0x5
   140021c1c:	mov    ecx,eax
   140021c1e:	shl    r15d,cl
   140021c21:	not    r15d
   140021c24:	cmp    edi,r10d
   140021c27:	jl     0x140021ca3
   140021c29:	mov    QWORD PTR [rbp-0x18],rbx
   140021c2d:	bts    DWORD PTR [rbp-0x18],0x1f
   140021c32:	mov    DWORD PTR [rbp-0x10],ebx
   140021c35:	sub    r13d,eax
   140021c38:	mov    edi,eax
   140021c3a:	mov    r9d,ebx
   140021c3d:	lea    r8,[rbp-0x18]
   140021c41:	mov    eax,DWORD PTR [r8]
   140021c44:	mov    ecx,edi
   140021c46:	mov    edx,r15d
   140021c49:	and    edx,eax
   140021c4b:	shr    eax,cl
   140021c4d:	mov    ecx,r13d
   140021c50:	or     eax,r9d
   140021c53:	mov    r9d,edx
   140021c56:	shl    r9d,cl
   140021c59:	mov    DWORD PTR [r8],eax
   140021c5c:	lea    r8,[r8+0x4]
   140021c60:	sub    r14,rsi
   140021c63:	jne    0x140021c41
   140021c65:	movsxd r9,r11d
   140021c68:	lea    edi,[r14+0x2]
   140021c6c:	mov    r8,r9
   140021c6f:	neg    r8
   140021c72:	cmp    rdi,r9
   140021c75:	jl     0x140021c8c
   140021c77:	mov    rdx,rdi
   140021c7a:	shl    rdx,0x2
   140021c7e:	lea    rax,[rdx+r8*4]
   140021c82:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140021c86:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140021c8a:	jmp    0x140021c90
   140021c8c:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   140021c90:	sub    rdi,rsi
   140021c93:	jns    0x140021c72
   140021c95:	mov    r8d,DWORD PTR [rip+0x1b870]        # 0x14003d50c
   140021c9c:	mov    ebx,esi
   140021c9e:	add    r8d,r10d
   140021ca1:	jmp    0x140021d12
   140021ca3:	mov    r8d,DWORD PTR [rip+0x1b862]        # 0x14003d50c
   140021caa:	btr    DWORD PTR [rbp-0x18],0x1f
   140021caf:	mov    r10d,ebx
   140021cb2:	add    r8d,edi
   140021cb5:	mov    edi,eax
   140021cb7:	sub    r13d,eax
   140021cba:	lea    r9,[rbp-0x18]
   140021cbe:	mov    eax,DWORD PTR [r9]
   140021cc1:	mov    ecx,edi
   140021cc3:	mov    edx,eax
   140021cc5:	shr    eax,cl
   140021cc7:	mov    ecx,r13d
   140021cca:	or     eax,r10d
   140021ccd:	and    edx,r15d
   140021cd0:	mov    r10d,edx
   140021cd3:	mov    DWORD PTR [r9],eax
   140021cd6:	lea    r9,[r9+0x4]
   140021cda:	shl    r10d,cl
   140021cdd:	sub    r14,rsi
   140021ce0:	jne    0x140021cbe
   140021ce2:	movsxd r10,r11d
   140021ce5:	lea    edi,[r14+0x2]
   140021ce9:	mov    r9,r10
   140021cec:	neg    r9
   140021cef:	cmp    rdi,r10
   140021cf2:	jl     0x140021d09
   140021cf4:	mov    rdx,rdi
   140021cf7:	shl    rdx,0x2
   140021cfb:	lea    rax,[rdx+r9*4]
   140021cff:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140021d03:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140021d07:	jmp    0x140021d0d
   140021d09:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   140021d0d:	sub    rdi,rsi
   140021d10:	jns    0x140021cef
   140021d12:	mov    rdx,QWORD PTR [rbp-0x30]
   140021d16:	sub    r12d,DWORD PTR [rip+0x1b7e7]        # 0x14003d504
   140021d1d:	mov    cl,r12b
   140021d20:	shl    r8d,cl
   140021d23:	neg    DWORD PTR [rbp-0x3c]
   140021d26:	sbb    eax,eax
   140021d28:	and    eax,0x80000000
   140021d2d:	or     r8d,eax
   140021d30:	mov    eax,DWORD PTR [rip+0x1b7d2]        # 0x14003d508
   140021d36:	or     r8d,DWORD PTR [rbp-0x18]
   140021d3a:	cmp    eax,0x40
   140021d3d:	jne    0x140021d4a
   140021d3f:	mov    eax,DWORD PTR [rbp-0x14]
   140021d42:	mov    DWORD PTR [rdx+0x4],r8d
   140021d46:	mov    DWORD PTR [rdx],eax
   140021d48:	jmp    0x140021d52
   140021d4a:	cmp    eax,0x20
   140021d4d:	jne    0x140021d52
   140021d4f:	mov    DWORD PTR [rdx],r8d
   140021d52:	mov    eax,ebx
   140021d54:	mov    rcx,QWORD PTR [rbp-0x8]
   140021d58:	xor    rcx,rsp
   140021d5b:	call   0x14000c380
   140021d60:	lea    r11,[rsp+0x60]
   140021d65:	mov    rbx,QWORD PTR [r11+0x30]
   140021d69:	mov    rsi,QWORD PTR [r11+0x40]
   140021d6d:	mov    rdi,QWORD PTR [r11+0x48]
   140021d71:	mov    rsp,r11
   140021d74:	pop    r15
   140021d76:	pop    r14
   140021d78:	pop    r13
   140021d7a:	pop    r12
   140021d7c:	pop    rbp
   140021d7d:	ret    
   140021d7e:	int3   
   140021d7f:	int3   
   140021d80:	mov    QWORD PTR [rsp+0x8],rbx
   140021d85:	mov    QWORD PTR [rsp+0x18],rsi
   140021d8a:	mov    QWORD PTR [rsp+0x20],rdi
   140021d8f:	push   rbp
   140021d90:	push   r12
   140021d92:	push   r13
   140021d94:	push   r14
   140021d96:	push   r15
   140021d98:	mov    rbp,rsp
   140021d9b:	sub    rsp,0x60
   140021d9f:	mov    rax,QWORD PTR [rip+0x1a42a]        # 0x14003c1d0
   140021da6:	xor    rax,rsp
   140021da9:	mov    QWORD PTR [rbp-0x8],rax
   140021dad:	movzx  eax,WORD PTR [rcx+0xa]
   140021db1:	movzx  r9d,WORD PTR [rcx]
   140021db5:	xor    ebx,ebx
   140021db7:	mov    edi,eax
   140021db9:	and    eax,0x8000
   140021dbe:	shl    r9d,0x10
   140021dc2:	mov    DWORD PTR [rbp-0x3c],eax
   140021dc5:	mov    eax,DWORD PTR [rcx+0x6]
   140021dc8:	and    edi,0x7fff
   140021dce:	mov    DWORD PTR [rbp-0x18],eax
   140021dd1:	mov    eax,DWORD PTR [rcx+0x2]
   140021dd4:	sub    edi,0x3fff
   140021dda:	mov    r12d,0x1f
   140021de0:	mov    QWORD PTR [rbp-0x30],rdx
   140021de4:	mov    DWORD PTR [rbp-0x28],r9d
   140021de8:	mov    DWORD PTR [rbp-0x14],eax
   140021deb:	mov    DWORD PTR [rbp-0x10],r9d
   140021def:	lea    esi,[rbx+0x1]
   140021df2:	lea    r14d,[r12-0x1c]
   140021df7:	cmp    edi,0xffffc001
   140021dfd:	jne    0x140021e28
   140021dff:	mov    r8d,ebx
   140021e02:	mov    eax,ebx
   140021e04:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   140021e08:	jne    0x140021e17
   140021e0a:	add    rax,rsi
   140021e0d:	cmp    rax,r14
   140021e10:	jl     0x140021e04
   140021e12:	jmp    0x1400222ce
   140021e17:	mov    QWORD PTR [rbp-0x18],rbx
   140021e1b:	mov    DWORD PTR [rbp-0x10],ebx
   140021e1e:	mov    ebx,0x2
   140021e23:	jmp    0x1400222ce
   140021e28:	mov    rax,QWORD PTR [rbp-0x18]
   140021e2c:	mov    r8d,r12d
   140021e2f:	or     r15d,0xffffffff
   140021e33:	mov    QWORD PTR [rbp-0x20],rax
   140021e37:	mov    eax,DWORD PTR [rip+0x1b6db]        # 0x14003d518
   140021e3d:	mov    DWORD PTR [rbp-0x40],edi
   140021e40:	dec    eax
   140021e42:	mov    r13d,ebx
   140021e45:	mov    DWORD PTR [rbp-0x38],eax
   140021e48:	inc    eax
   140021e4a:	cdq    
   140021e4b:	and    edx,r12d
   140021e4e:	add    eax,edx
   140021e50:	mov    r10d,eax
   140021e53:	and    eax,r12d
   140021e56:	sar    r10d,0x5
   140021e5a:	sub    eax,edx
   140021e5c:	sub    r8d,eax
   140021e5f:	movsxd r11,r10d
   140021e62:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   140021e67:	mov    DWORD PTR [rbp-0x24],r8d
   140021e6b:	bt     ecx,r8d
   140021e6f:	jae    0x140021f13
   140021e75:	mov    ecx,r8d
   140021e78:	mov    eax,r15d
   140021e7b:	movsxd rdx,r10d
   140021e7e:	shl    eax,cl
   140021e80:	not    eax
   140021e82:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   140021e86:	jne    0x140021ea1
   140021e88:	lea    eax,[r10+0x1]
   140021e8c:	movsxd rcx,eax
   140021e8f:	jmp    0x140021e9a
   140021e91:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   140021e95:	jne    0x140021ea1
   140021e97:	add    rcx,rsi
   140021e9a:	cmp    rcx,r14
   140021e9d:	jl     0x140021e91
   140021e9f:	jmp    0x140021f13
   140021ea1:	mov    eax,DWORD PTR [rbp-0x38]
   140021ea4:	mov    ecx,r12d
   140021ea7:	cdq    
   140021ea8:	and    edx,r12d
   140021eab:	add    eax,edx
   140021ead:	mov    r8d,eax
   140021eb0:	and    eax,r12d
   140021eb3:	sub    eax,edx
   140021eb5:	sar    r8d,0x5
   140021eb9:	mov    edx,esi
   140021ebb:	sub    ecx,eax
   140021ebd:	movsxd r11,r8d
   140021ec0:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   140021ec5:	shl    edx,cl
   140021ec7:	lea    ecx,[rax+rdx*1]
   140021eca:	cmp    ecx,eax
   140021ecc:	jb     0x140021ed2
   140021ece:	cmp    ecx,edx
   140021ed0:	jae    0x140021ed5
   140021ed2:	mov    r13d,esi
   140021ed5:	lea    eax,[r8-0x1]
   140021ed9:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   140021ede:	movsxd rdx,eax
   140021ee1:	test   eax,eax
   140021ee3:	js     0x140021f0c
   140021ee5:	test   r13d,r13d
   140021ee8:	je     0x140021f0c
   140021eea:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140021eee:	mov    r13d,ebx
   140021ef1:	lea    r8d,[rax+0x1]
   140021ef5:	cmp    r8d,eax
   140021ef8:	jb     0x140021eff
   140021efa:	cmp    r8d,esi
   140021efd:	jae    0x140021f02
   140021eff:	mov    r13d,esi
   140021f02:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   140021f07:	sub    rdx,rsi
   140021f0a:	jns    0x140021ee5
   140021f0c:	mov    r8d,DWORD PTR [rbp-0x24]
   140021f10:	movsxd r11,r10d
   140021f13:	mov    ecx,r8d
   140021f16:	mov    eax,r15d
   140021f19:	shl    eax,cl
   140021f1b:	and    DWORD PTR [rbp+r11*4-0x18],eax
   140021f20:	lea    eax,[r10+0x1]
   140021f24:	movsxd rdx,eax
   140021f27:	cmp    rdx,r14
   140021f2a:	jge    0x140021f49
   140021f2c:	lea    rcx,[rbp-0x18]
   140021f30:	mov    r8,r14
   140021f33:	sub    r8,rdx
   140021f36:	lea    rcx,[rcx+rdx*4]
   140021f3a:	xor    edx,edx
   140021f3c:	shl    r8,0x2
   140021f40:	call   0x140006f70
   140021f45:	mov    r9d,DWORD PTR [rbp-0x28]
   140021f49:	test   r13d,r13d
   140021f4c:	je     0x140021f50
   140021f4e:	add    edi,esi
   140021f50:	mov    ecx,DWORD PTR [rip+0x1b5be]        # 0x14003d514
   140021f56:	mov    eax,ecx
   140021f58:	sub    eax,DWORD PTR [rip+0x1b5ba]        # 0x14003d518
   140021f5e:	cmp    edi,eax
   140021f60:	jge    0x140021f76
   140021f62:	mov    QWORD PTR [rbp-0x18],rbx
   140021f66:	mov    DWORD PTR [rbp-0x10],ebx
   140021f69:	mov    r8d,ebx
   140021f6c:	mov    ebx,0x2
   140021f71:	jmp    0x1400222ca
   140021f76:	cmp    edi,ecx
   140021f78:	jg     0x1400221af
   140021f7e:	sub    ecx,DWORD PTR [rbp-0x40]
   140021f81:	mov    rax,QWORD PTR [rbp-0x20]
   140021f85:	mov    r10d,r15d
   140021f88:	mov    QWORD PTR [rbp-0x18],rax
   140021f8c:	mov    eax,ecx
   140021f8e:	mov    DWORD PTR [rbp-0x10],r9d
   140021f92:	cdq    
   140021f93:	mov    r11,r14
   140021f96:	mov    r9d,ebx
   140021f99:	and    edx,r12d
   140021f9c:	lea    r8,[rbp-0x18]
   140021fa0:	add    eax,edx
   140021fa2:	mov    r13d,eax
   140021fa5:	and    eax,r12d
   140021fa8:	sub    eax,edx
   140021faa:	sar    r13d,0x5
   140021fae:	mov    ecx,eax
   140021fb0:	mov    edi,eax
   140021fb2:	mov    eax,0x20
   140021fb7:	shl    r10d,cl
   140021fba:	sub    eax,ecx
   140021fbc:	mov    r14d,eax
   140021fbf:	not    r10d
   140021fc2:	mov    eax,DWORD PTR [r8]
   140021fc5:	mov    ecx,edi
   140021fc7:	mov    edx,eax
   140021fc9:	shr    eax,cl
   140021fcb:	mov    ecx,r14d
   140021fce:	or     eax,r9d
   140021fd1:	and    edx,r10d
   140021fd4:	mov    r9d,edx
   140021fd7:	mov    DWORD PTR [r8],eax
   140021fda:	lea    r8,[r8+0x4]
   140021fde:	shl    r9d,cl
   140021fe1:	sub    r11,rsi
   140021fe4:	jne    0x140021fc2
   140021fe6:	movsxd r10,r13d
   140021fe9:	lea    edi,[r11+0x2]
   140021fed:	lea    r14d,[r11+0x3]
   140021ff1:	mov    r9,r10
   140021ff4:	mov    r8d,edi
   140021ff7:	neg    r9
   140021ffa:	cmp    r8,r10
   140021ffd:	jl     0x140022014
   140021fff:	mov    rdx,r8
   140022002:	shl    rdx,0x2
   140022006:	lea    rax,[rdx+r9*4]
   14002200a:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002200e:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140022012:	jmp    0x140022019
   140022014:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140022019:	sub    r8,rsi
   14002201c:	jns    0x140021ffa
   14002201e:	mov    r8d,DWORD PTR [rbp-0x38]
   140022022:	mov    r11d,r12d
   140022025:	lea    eax,[r8+0x1]
   140022029:	cdq    
   14002202a:	and    edx,r12d
   14002202d:	add    eax,edx
   14002202f:	mov    r9d,eax
   140022032:	and    eax,r12d
   140022035:	sub    eax,edx
   140022037:	sar    r9d,0x5
   14002203b:	sub    r11d,eax
   14002203e:	movsxd rax,r9d
   140022041:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   140022045:	bt     ecx,r11d
   140022049:	jae    0x1400220e7
   14002204f:	mov    ecx,r11d
   140022052:	mov    eax,r15d
   140022055:	movsxd rdx,r9d
   140022058:	shl    eax,cl
   14002205a:	not    eax
   14002205c:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   140022060:	jne    0x14002207b
   140022062:	lea    eax,[r9+0x1]
   140022066:	movsxd rcx,eax
   140022069:	jmp    0x140022074
   14002206b:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14002206f:	jne    0x14002207b
   140022071:	add    rcx,rsi
   140022074:	cmp    rcx,r14
   140022077:	jl     0x14002206b
   140022079:	jmp    0x1400220e7
   14002207b:	mov    eax,r8d
   14002207e:	mov    ecx,r12d
   140022081:	cdq    
   140022082:	and    edx,r12d
   140022085:	add    eax,edx
   140022087:	mov    r10d,eax
   14002208a:	and    eax,r12d
   14002208d:	sub    eax,edx
   14002208f:	sar    r10d,0x5
   140022093:	mov    edx,esi
   140022095:	sub    ecx,eax
   140022097:	movsxd r13,r10d
   14002209a:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14002209f:	shl    edx,cl
   1400220a1:	mov    ecx,ebx
   1400220a3:	lea    r8d,[rax+rdx*1]
   1400220a7:	cmp    r8d,eax
   1400220aa:	jb     0x1400220b1
   1400220ac:	cmp    r8d,edx
   1400220af:	jae    0x1400220b3
   1400220b1:	mov    ecx,esi
   1400220b3:	lea    eax,[r10-0x1]
   1400220b7:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   1400220bc:	movsxd rdx,eax
   1400220bf:	test   eax,eax
   1400220c1:	js     0x1400220e7
   1400220c3:	test   ecx,ecx
   1400220c5:	je     0x1400220e7
   1400220c7:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   1400220cb:	mov    ecx,ebx
   1400220cd:	lea    r8d,[rax+0x1]
   1400220d1:	cmp    r8d,eax
   1400220d4:	jb     0x1400220db
   1400220d6:	cmp    r8d,esi
   1400220d9:	jae    0x1400220dd
   1400220db:	mov    ecx,esi
   1400220dd:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   1400220e2:	sub    rdx,rsi
   1400220e5:	jns    0x1400220c3
   1400220e7:	mov    ecx,r11d
   1400220ea:	mov    eax,r15d
   1400220ed:	shl    eax,cl
   1400220ef:	movsxd rcx,r9d
   1400220f2:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   1400220f6:	lea    eax,[r9+0x1]
   1400220fa:	movsxd rdx,eax
   1400220fd:	cmp    rdx,r14
   140022100:	jge    0x14002211b
   140022102:	lea    rcx,[rbp-0x18]
   140022106:	mov    r8,r14
   140022109:	sub    r8,rdx
   14002210c:	lea    rcx,[rcx+rdx*4]
   140022110:	xor    edx,edx
   140022112:	shl    r8,0x2
   140022116:	call   0x140006f70
   14002211b:	mov    eax,DWORD PTR [rip+0x1b3fb]        # 0x14003d51c
   140022121:	mov    r13d,0x20
   140022127:	mov    r9d,ebx
   14002212a:	inc    eax
   14002212c:	lea    r8,[rbp-0x18]
   140022130:	cdq    
   140022131:	and    edx,r12d
   140022134:	add    eax,edx
   140022136:	mov    r10d,eax
   140022139:	and    eax,r12d
   14002213c:	sub    eax,edx
   14002213e:	sar    r10d,0x5
   140022142:	mov    ecx,eax
   140022144:	mov    r11d,eax
   140022147:	shl    r15d,cl
   14002214a:	sub    r13d,eax
   14002214d:	not    r15d
   140022150:	mov    eax,DWORD PTR [r8]
   140022153:	mov    ecx,r11d
   140022156:	mov    edx,eax
   140022158:	shr    eax,cl
   14002215a:	mov    ecx,r13d
   14002215d:	or     eax,r9d
   140022160:	and    edx,r15d
   140022163:	mov    r9d,edx
   140022166:	mov    DWORD PTR [r8],eax
   140022169:	lea    r8,[r8+0x4]
   14002216d:	shl    r9d,cl
   140022170:	sub    r14,rsi
   140022173:	jne    0x140022150
   140022175:	movsxd r10,r10d
   140022178:	mov    r8,rdi
   14002217b:	mov    r9,r10
   14002217e:	neg    r9
   140022181:	cmp    r8,r10
   140022184:	jl     0x14002219b
   140022186:	mov    rdx,r8
   140022189:	shl    rdx,0x2
   14002218d:	lea    rax,[rdx+r9*4]
   140022191:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140022195:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140022199:	jmp    0x1400221a0
   14002219b:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   1400221a0:	sub    r8,rsi
   1400221a3:	jns    0x140022181
   1400221a5:	mov    r8d,ebx
   1400221a8:	mov    ebx,edi
   1400221aa:	jmp    0x1400222ca
   1400221af:	mov    eax,DWORD PTR [rip+0x1b367]        # 0x14003d51c
   1400221b5:	mov    r10d,DWORD PTR [rip+0x1b354]        # 0x14003d510
   1400221bc:	mov    r13d,0x20
   1400221c2:	cdq    
   1400221c3:	and    edx,r12d
   1400221c6:	add    eax,edx
   1400221c8:	mov    r11d,eax
   1400221cb:	and    eax,r12d
   1400221ce:	sub    eax,edx
   1400221d0:	sar    r11d,0x5
   1400221d4:	mov    ecx,eax
   1400221d6:	shl    r15d,cl
   1400221d9:	not    r15d
   1400221dc:	cmp    edi,r10d
   1400221df:	jl     0x14002225b
   1400221e1:	mov    QWORD PTR [rbp-0x18],rbx
   1400221e5:	bts    DWORD PTR [rbp-0x18],0x1f
   1400221ea:	mov    DWORD PTR [rbp-0x10],ebx
   1400221ed:	sub    r13d,eax
   1400221f0:	mov    edi,eax
   1400221f2:	mov    r9d,ebx
   1400221f5:	lea    r8,[rbp-0x18]
   1400221f9:	mov    eax,DWORD PTR [r8]
   1400221fc:	mov    ecx,edi
   1400221fe:	mov    edx,r15d
   140022201:	and    edx,eax
   140022203:	shr    eax,cl
   140022205:	mov    ecx,r13d
   140022208:	or     eax,r9d
   14002220b:	mov    r9d,edx
   14002220e:	shl    r9d,cl
   140022211:	mov    DWORD PTR [r8],eax
   140022214:	lea    r8,[r8+0x4]
   140022218:	sub    r14,rsi
   14002221b:	jne    0x1400221f9
   14002221d:	movsxd r9,r11d
   140022220:	lea    edi,[r14+0x2]
   140022224:	mov    r8,r9
   140022227:	neg    r8
   14002222a:	cmp    rdi,r9
   14002222d:	jl     0x140022244
   14002222f:	mov    rdx,rdi
   140022232:	shl    rdx,0x2
   140022236:	lea    rax,[rdx+r8*4]
   14002223a:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002223e:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140022242:	jmp    0x140022248
   140022244:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   140022248:	sub    rdi,rsi
   14002224b:	jns    0x14002222a
   14002224d:	mov    r8d,DWORD PTR [rip+0x1b2d0]        # 0x14003d524
   140022254:	mov    ebx,esi
   140022256:	add    r8d,r10d
   140022259:	jmp    0x1400222ca
   14002225b:	mov    r8d,DWORD PTR [rip+0x1b2c2]        # 0x14003d524
   140022262:	btr    DWORD PTR [rbp-0x18],0x1f
   140022267:	mov    r10d,ebx
   14002226a:	add    r8d,edi
   14002226d:	mov    edi,eax
   14002226f:	sub    r13d,eax
   140022272:	lea    r9,[rbp-0x18]
   140022276:	mov    eax,DWORD PTR [r9]
   140022279:	mov    ecx,edi
   14002227b:	mov    edx,eax
   14002227d:	shr    eax,cl
   14002227f:	mov    ecx,r13d
   140022282:	or     eax,r10d
   140022285:	and    edx,r15d
   140022288:	mov    r10d,edx
   14002228b:	mov    DWORD PTR [r9],eax
   14002228e:	lea    r9,[r9+0x4]
   140022292:	shl    r10d,cl
   140022295:	sub    r14,rsi
   140022298:	jne    0x140022276
   14002229a:	movsxd r10,r11d
   14002229d:	lea    edi,[r14+0x2]
   1400222a1:	mov    r9,r10
   1400222a4:	neg    r9
   1400222a7:	cmp    rdi,r10
   1400222aa:	jl     0x1400222c1
   1400222ac:	mov    rdx,rdi
   1400222af:	shl    rdx,0x2
   1400222b3:	lea    rax,[rdx+r9*4]
   1400222b7:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   1400222bb:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   1400222bf:	jmp    0x1400222c5
   1400222c1:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   1400222c5:	sub    rdi,rsi
   1400222c8:	jns    0x1400222a7
   1400222ca:	mov    rdx,QWORD PTR [rbp-0x30]
   1400222ce:	sub    r12d,DWORD PTR [rip+0x1b247]        # 0x14003d51c
   1400222d5:	mov    cl,r12b
   1400222d8:	shl    r8d,cl
   1400222db:	neg    DWORD PTR [rbp-0x3c]
   1400222de:	sbb    eax,eax
   1400222e0:	and    eax,0x80000000
   1400222e5:	or     r8d,eax
   1400222e8:	mov    eax,DWORD PTR [rip+0x1b232]        # 0x14003d520
   1400222ee:	or     r8d,DWORD PTR [rbp-0x18]
   1400222f2:	cmp    eax,0x40
   1400222f5:	jne    0x140022302
   1400222f7:	mov    eax,DWORD PTR [rbp-0x14]
   1400222fa:	mov    DWORD PTR [rdx+0x4],r8d
   1400222fe:	mov    DWORD PTR [rdx],eax
   140022300:	jmp    0x14002230a
   140022302:	cmp    eax,0x20
   140022305:	jne    0x14002230a
   140022307:	mov    DWORD PTR [rdx],r8d
   14002230a:	mov    eax,ebx
   14002230c:	mov    rcx,QWORD PTR [rbp-0x8]
   140022310:	xor    rcx,rsp
   140022313:	call   0x14000c380
   140022318:	lea    r11,[rsp+0x60]
   14002231d:	mov    rbx,QWORD PTR [r11+0x30]
   140022321:	mov    rsi,QWORD PTR [r11+0x40]
   140022325:	mov    rdi,QWORD PTR [r11+0x48]
   140022329:	mov    rsp,r11
   14002232c:	pop    r15
   14002232e:	pop    r14
   140022330:	pop    r13
   140022332:	pop    r12
   140022334:	pop    rbp
   140022335:	ret    
   140022336:	int3   
   140022337:	int3   
   140022338:	mov    QWORD PTR [rsp+0x8],rbx
   14002233d:	mov    QWORD PTR [rsp+0x18],rbp
   140022342:	push   rdi
   140022343:	sub    rsp,0x20
   140022347:	mov    rax,QWORD PTR [rip+0x19e82]        # 0x14003c1d0
   14002234e:	xor    rax,rsp
   140022351:	mov    QWORD PTR [rsp+0x10],rax
   140022356:	movzx  r11d,WORD PTR [rcx+0xa]
   14002235b:	movzx  r10d,WORD PTR [rcx]
   14002235f:	mov    ebp,0x7fff
   140022364:	lea    eax,[rbp+0x1]
   140022367:	movzx  r9d,r11w
   14002236b:	xor    r8d,r8d
   14002236e:	shl    r10d,0x10
   140022372:	and    r11w,ax
   140022376:	mov    eax,DWORD PTR [rcx+0x2]
   140022379:	mov    rbx,rdx
   14002237c:	mov    edx,DWORD PTR [rcx+0x6]
   14002237f:	and    r9w,bp
   140022383:	mov    DWORD PTR [rsp+0x8],r10d
   140022388:	lea    edi,[r8+0x1]
   14002238c:	mov    DWORD PTR [rsp],edx
   14002238f:	test   r10d,r10d
   140022392:	jns    0x1400223ed
   140022394:	test   r10d,0x7fffffff
   14002239b:	je     0x1400223ed
   14002239d:	lea    edx,[rax+0x1]
   1400223a0:	mov    ecx,r8d
   1400223a3:	cmp    edx,eax
   1400223a5:	jb     0x1400223ab
   1400223a7:	cmp    edx,edi
   1400223a9:	jae    0x1400223ad
   1400223ab:	mov    ecx,edi
   1400223ad:	mov    DWORD PTR [rsp+0x4],edx
   1400223b1:	mov    rdx,r8
   1400223b4:	test   ecx,ecx
   1400223b6:	je     0x1400223e6
   1400223b8:	mov    eax,DWORD PTR [rsp+rdx*4]
   1400223bb:	mov    ecx,r8d
   1400223be:	lea    r10d,[rax+0x1]
   1400223c2:	cmp    r10d,eax
   1400223c5:	jb     0x1400223cc
   1400223c7:	cmp    r10d,edi
   1400223ca:	jae    0x1400223ce
   1400223cc:	mov    ecx,edi
   1400223ce:	mov    DWORD PTR [rsp+rdx*4],r10d
   1400223d2:	sub    rdx,rdi
   1400223d5:	jns    0x1400223b4
   1400223d7:	test   ecx,ecx
   1400223d9:	je     0x1400223e6
   1400223db:	mov    edx,0x80000000
   1400223e0:	add    r9w,di
   1400223e4:	jmp    0x1400223e9
   1400223e6:	mov    edx,DWORD PTR [rsp]
   1400223e9:	mov    eax,DWORD PTR [rsp+0x4]
   1400223ed:	cmp    r9w,bp
   1400223f1:	mov    DWORD PTR [rbx],eax
   1400223f3:	mov    DWORD PTR [rbx+0x4],edx
   1400223f6:	cmove  r8d,edi
   1400223fa:	or     r11w,r9w
   1400223fe:	mov    WORD PTR [rbx+0x8],r11w
   140022403:	mov    eax,r8d
   140022406:	mov    rcx,QWORD PTR [rsp+0x10]
   14002240b:	xor    rcx,rsp
   14002240e:	call   0x14000c380
   140022413:	mov    rbx,QWORD PTR [rsp+0x30]
   140022418:	mov    rbp,QWORD PTR [rsp+0x40]
   14002241d:	add    rsp,0x20
   140022421:	pop    rdi
   140022422:	ret    
   140022423:	int3   
   140022424:	mov    QWORD PTR [rsp+0x20],rbx
   140022429:	push   rdi
   14002242a:	sub    rsp,0x60
   14002242e:	mov    rax,QWORD PTR [rip+0x19d9b]        # 0x14003c1d0
   140022435:	xor    rax,rsp
   140022438:	mov    QWORD PTR [rsp+0x50],rax
   14002243d:	mov    rax,QWORD PTR [rsp+0x90]
   140022445:	mov    rbx,rcx
   140022448:	lea    rcx,[rsp+0x40]
   14002244d:	mov    QWORD PTR [rsp+0x38],rax
   140022452:	xor    eax,eax
   140022454:	mov    DWORD PTR [rsp+0x30],eax
   140022458:	mov    DWORD PTR [rsp+0x28],eax
   14002245c:	mov    DWORD PTR [rsp+0x20],eax
   140022460:	call   0x140022bd8
   140022465:	lea    rcx,[rsp+0x40]
   14002246a:	mov    rdx,rbx
   14002246d:	mov    edi,eax
   14002246f:	call   0x140022338
   140022474:	cmp    eax,0x1
   140022477:	jne    0x14002247c
   140022479:	or     edi,0x2
   14002247c:	mov    eax,edi
   14002247e:	mov    rcx,QWORD PTR [rsp+0x50]
   140022483:	xor    rcx,rsp
   140022486:	call   0x14000c380
   14002248b:	mov    rbx,QWORD PTR [rsp+0x88]
   140022493:	add    rsp,0x60
   140022497:	pop    rdi
   140022498:	ret    
   140022499:	int3   
   14002249a:	int3   
   14002249b:	int3   
   14002249c:	mov    QWORD PTR [rsp+0x10],rbx
   1400224a1:	mov    QWORD PTR [rsp+0x18],rsi
   1400224a6:	mov    QWORD PTR [rsp+0x20],rdi
   1400224ab:	push   rbp
   1400224ac:	push   r12
   1400224ae:	push   r13
   1400224b0:	push   r14
   1400224b2:	push   r15
   1400224b4:	mov    rbp,rsp
   1400224b7:	sub    rsp,0x30
   1400224bb:	mov    rax,QWORD PTR [rip+0x19d0e]        # 0x14003c1d0
   1400224c2:	xor    rax,rsp
   1400224c5:	mov    QWORD PTR [rbp-0x10],rax
   1400224c9:	movzx  eax,WORD PTR [rdx+0xa]
   1400224cd:	xor    r12d,r12d
   1400224d0:	mov    r8,rcx
   1400224d3:	mov    QWORD PTR [rbp-0x28],rcx
   1400224d7:	movzx  ecx,WORD PTR [rcx+0xa]
   1400224db:	movzx  esi,ax
   1400224de:	xor    si,cx
   1400224e1:	mov    rdi,rdx
   1400224e4:	mov    edx,0x8000
   1400224e9:	and    si,dx
   1400224ec:	mov    edx,0x7fff
   1400224f1:	mov    DWORD PTR [rbp-0x2c],r12d
   1400224f5:	and    cx,dx
   1400224f8:	and    ax,dx
   1400224fb:	mov    QWORD PTR [rbp-0x20],r12
   1400224ff:	lea    r9d,[rcx+rax*1]
   140022503:	mov    DWORD PTR [rbp-0x18],r12d
   140022507:	mov    WORD PTR [rbp-0x2e],si
   14002250b:	mov    WORD PTR [rbp-0x30],r9w
   140022510:	cmp    cx,dx
   140022513:	jae    0x140022788
   140022519:	cmp    ax,dx
   14002251c:	jae    0x140022788
   140022522:	mov    edx,0xbffd
   140022527:	cmp    r9w,dx
   14002252b:	ja     0x140022788
   140022531:	mov    edx,0x3fbf
   140022536:	cmp    r9w,dx
   14002253a:	ja     0x140022548
   14002253c:	mov    QWORD PTR [r8+0x4],r12
   140022540:	mov    DWORD PTR [r8],r12d
   140022543:	jmp    0x1400227a0
   140022548:	mov    edx,0x7fffffff
   14002254d:	mov    r14d,0x1
   140022553:	test   cx,cx
   140022556:	jne    0x14002257c
   140022558:	add    r9w,r14w
   14002255c:	mov    WORD PTR [rbp-0x30],r9w
   140022561:	test   DWORD PTR [r8+0x8],edx
   140022565:	jne    0x14002257c
   140022567:	cmp    DWORD PTR [r8+0x4],r12d
   14002256b:	jne    0x14002257c
   14002256d:	cmp    DWORD PTR [r8],r12d
   140022570:	jne    0x14002257c
   140022572:	mov    WORD PTR [r8+0xa],r12w
   140022577:	jmp    0x1400227a0
   14002257c:	test   ax,ax
   14002257f:	jne    0x14002259a
   140022581:	add    r9w,r14w
   140022585:	mov    WORD PTR [rbp-0x30],r9w
   14002258a:	test   DWORD PTR [rdi+0x8],edx
   14002258d:	jne    0x14002259a
   14002258f:	cmp    DWORD PTR [rdi+0x4],r12d
   140022593:	jne    0x14002259a
   140022595:	cmp    DWORD PTR [rdi],r12d
   140022598:	je     0x14002253c
   14002259a:	mov    r10d,0x5
   1400225a0:	mov    r14d,r12d
   1400225a3:	lea    rdx,[rbp-0x20]
   1400225a7:	lea    r9d,[r10-0x4]
   1400225ab:	mov    r15d,r10d
   1400225ae:	test   r10d,r10d
   1400225b1:	jle    0x140022606
   1400225b3:	lea    eax,[r14+r14*1]
   1400225b7:	mov    esi,r14d
   1400225ba:	lea    r12,[rdi+0x8]
   1400225be:	movsxd r13,eax
   1400225c1:	and    esi,r9d
   1400225c4:	add    r13,r8
   1400225c7:	movzx  eax,WORD PTR [r13+0x0]
   1400225cc:	movzx  ecx,WORD PTR [r12]
   1400225d1:	xor    r11d,r11d
   1400225d4:	imul   ecx,eax
   1400225d7:	mov    eax,DWORD PTR [rdx]
   1400225d9:	lea    ebx,[rax+rcx*1]
   1400225dc:	cmp    ebx,eax
   1400225de:	jb     0x1400225e4
   1400225e0:	cmp    ebx,ecx
   1400225e2:	jae    0x1400225e7
   1400225e4:	mov    r11d,r9d
   1400225e7:	mov    DWORD PTR [rdx],ebx
   1400225e9:	test   r11d,r11d
   1400225ec:	je     0x1400225f3
   1400225ee:	add    WORD PTR [rdx+0x4],r9w
   1400225f3:	sub    r15d,r9d
   1400225f6:	add    r13,0x2
   1400225fa:	sub    r12,0x2
   1400225fe:	test   r15d,r15d
   140022601:	jg     0x1400225c7
   140022603:	xor    r12d,r12d
   140022606:	sub    r10d,r9d
   140022609:	add    rdx,0x2
   14002260d:	add    r14d,r9d
   140022610:	test   r10d,r10d
   140022613:	jg     0x1400225ab
   140022615:	movzx  r9d,WORD PTR [rbp-0x30]
   14002261a:	mov    r10d,DWORD PTR [rbp-0x18]
   14002261e:	mov    r11d,DWORD PTR [rbp-0x20]
   140022622:	mov    eax,0xc002
   140022627:	mov    ebx,0x80000000
   14002262c:	mov    r15d,0xffff
   140022632:	add    r9w,ax
   140022636:	test   r9w,r9w
   14002263a:	jle    0x140022678
   14002263c:	test   ebx,r10d
   14002263f:	jne    0x140022672
   140022641:	mov    edi,DWORD PTR [rbp-0x1c]
   140022644:	mov    edx,r11d
   140022647:	add    r10d,r10d
   14002264a:	shr    edx,0x1f
   14002264d:	add    r11d,r11d
   140022650:	mov    ecx,edi
   140022652:	shr    ecx,0x1f
   140022655:	lea    eax,[rdi+rdi*1]
   140022658:	add    r9w,r15w
   14002265c:	or     eax,edx
   14002265e:	or     r10d,ecx
   140022661:	mov    DWORD PTR [rbp-0x20],r11d
   140022665:	mov    DWORD PTR [rbp-0x1c],eax
   140022668:	mov    DWORD PTR [rbp-0x18],r10d
   14002266c:	test   r9w,r9w
   140022670:	jg     0x14002263c
   140022672:	test   r9w,r9w
   140022676:	jg     0x1400226e5
   140022678:	add    r9w,r15w
   14002267c:	mov    r14d,0x1
   140022682:	jns    0x1400226eb
   140022684:	mov    r8d,DWORD PTR [rbp-0x2c]
   140022688:	movzx  eax,r9w
   14002268c:	neg    ax
   14002268f:	movzx  edx,ax
   140022692:	add    r9w,dx
   140022696:	test   BYTE PTR [rbp-0x20],r14b
   14002269a:	je     0x14002269f
   14002269c:	add    r8d,r14d
   14002269f:	mov    edi,DWORD PTR [rbp-0x1c]
   1400226a2:	mov    eax,r10d
   1400226a5:	shr    r11d,1
   1400226a8:	mov    ecx,edi
   1400226aa:	shl    eax,0x1f
   1400226ad:	shr    edi,1
   1400226af:	shl    ecx,0x1f
   1400226b2:	or     edi,eax
   1400226b4:	shr    r10d,1
   1400226b7:	or     r11d,ecx
   1400226ba:	mov    DWORD PTR [rbp-0x1c],edi
   1400226bd:	mov    DWORD PTR [rbp-0x20],r11d
   1400226c1:	sub    rdx,r14
   1400226c4:	jne    0x140022696
   1400226c6:	test   r8d,r8d
   1400226c9:	mov    r8,QWORD PTR [rbp-0x28]
   1400226cd:	mov    DWORD PTR [rbp-0x18],r10d
   1400226d1:	je     0x1400226eb
   1400226d3:	movzx  eax,r11w
   1400226d7:	or     ax,r14w
   1400226db:	mov    WORD PTR [rbp-0x20],ax
   1400226df:	mov    r11d,DWORD PTR [rbp-0x20]
   1400226e3:	jmp    0x1400226ef
   1400226e5:	mov    r14d,0x1
   1400226eb:	movzx  eax,WORD PTR [rbp-0x20]
   1400226ef:	movzx  esi,WORD PTR [rbp-0x2e]
   1400226f3:	mov    edx,0x8000
   1400226f8:	cmp    ax,dx
   1400226fb:	ja     0x14002270d
   1400226fd:	and    r11d,0x1ffff
   140022704:	cmp    r11d,0x18000
   14002270b:	jne    0x140022756
   14002270d:	mov    eax,DWORD PTR [rbp-0x1e]
   140022710:	or     ecx,0xffffffff
   140022713:	cmp    eax,ecx
   140022715:	jne    0x140022750
   140022717:	mov    eax,DWORD PTR [rbp-0x1a]
   14002271a:	mov    DWORD PTR [rbp-0x1e],r12d
   14002271e:	cmp    eax,ecx
   140022720:	jne    0x140022744
   140022722:	movzx  eax,WORD PTR [rbp-0x16]
   140022726:	mov    DWORD PTR [rbp-0x1a],r12d
   14002272a:	cmp    ax,r15w
   14002272e:	jne    0x14002273a
   140022730:	mov    WORD PTR [rbp-0x16],dx
   140022734:	add    r9w,r14w
   140022738:	jmp    0x14002274a
   14002273a:	add    ax,r14w
   14002273e:	mov    WORD PTR [rbp-0x16],ax
   140022742:	jmp    0x14002274a
   140022744:	add    eax,r14d
   140022747:	mov    DWORD PTR [rbp-0x1a],eax
   14002274a:	mov    r10d,DWORD PTR [rbp-0x18]
   14002274e:	jmp    0x140022756
   140022750:	add    eax,r14d
   140022753:	mov    DWORD PTR [rbp-0x1e],eax
   140022756:	mov    eax,0x7fff
   14002275b:	cmp    r9w,ax
   14002275f:	jb     0x14002276a
   140022761:	mov    QWORD PTR [r8],0x0
   140022768:	jmp    0x140022790
   14002276a:	movzx  eax,WORD PTR [rbp-0x1e]
   14002276e:	or     r9w,si
   140022772:	mov    DWORD PTR [r8+0x6],r10d
   140022776:	mov    WORD PTR [r8],ax
   14002277a:	mov    eax,DWORD PTR [rbp-0x1c]
   14002277d:	mov    WORD PTR [r8+0xa],r9w
   140022782:	mov    DWORD PTR [r8+0x2],eax
   140022786:	jmp    0x1400227a0
   140022788:	mov    ebx,0x80000000
   14002278d:	mov    QWORD PTR [r8],r12
   140022790:	neg    si
   140022793:	sbb    eax,eax
   140022795:	and    eax,ebx
   140022797:	add    eax,0x7fff8000
   14002279c:	mov    DWORD PTR [r8+0x8],eax
   1400227a0:	mov    rcx,QWORD PTR [rbp-0x10]
   1400227a4:	xor    rcx,rsp
   1400227a7:	call   0x14000c380
   1400227ac:	mov    rbx,QWORD PTR [rsp+0x68]
   1400227b1:	mov    rsi,QWORD PTR [rsp+0x70]
   1400227b6:	mov    rdi,QWORD PTR [rsp+0x78]
   1400227bb:	add    rsp,0x30
   1400227bf:	pop    r15
   1400227c1:	pop    r14
   1400227c3:	pop    r13
   1400227c5:	pop    r12
   1400227c7:	pop    rbp
   1400227c8:	ret    
   1400227c9:	int3   
   1400227ca:	int3   
   1400227cb:	int3   
   1400227cc:	test   edx,edx
   1400227ce:	je     0x140022b7f
   1400227d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400227d9:	mov    QWORD PTR [rsp+0x18],rsi
   1400227de:	mov    QWORD PTR [rsp+0x20],rdi
   1400227e3:	push   rbp
   1400227e4:	push   r12
   1400227e6:	push   r13
   1400227e8:	push   r14
   1400227ea:	push   r15
   1400227ec:	mov    rbp,rsp
   1400227ef:	sub    rsp,0x50
   1400227f3:	mov    rax,QWORD PTR [rip+0x199d6]        # 0x14003c1d0
   1400227fa:	xor    rax,rsp
   1400227fd:	mov    QWORD PTR [rbp-0x8],rax
   140022801:	lea    r14,[rip+0x1ad28]        # 0x14003d530
   140022808:	xor    edi,edi
   14002280a:	mov    ebx,edx
   14002280c:	sub    r14,0x60
   140022810:	mov    r9,rcx
   140022813:	mov    QWORD PTR [rbp-0x40],rcx
   140022817:	test   edx,edx
   140022819:	jns    0x140022828
   14002281b:	lea    r14,[rip+0x1ae6e]        # 0x14003d690
   140022822:	neg    ebx
   140022824:	sub    r14,0x60
   140022828:	test   r8d,r8d
   14002282b:	jne    0x140022830
   14002282d:	mov    WORD PTR [rcx],di
   140022830:	test   ebx,ebx
   140022832:	je     0x140022b56
   140022838:	mov    r15d,0x8000
   14002283e:	mov    esi,0x1
   140022843:	lea    r11d,[r15-0x1]
   140022847:	mov    eax,ebx
   140022849:	add    r14,0x54
   14002284d:	sar    ebx,0x3
   140022850:	mov    DWORD PTR [rbp-0x48],ebx
   140022853:	mov    QWORD PTR [rbp-0x38],r14
   140022857:	and    eax,0x7
   14002285a:	je     0x140022b4e
   140022860:	cdqe   
   140022862:	lea    rcx,[rax+rax*2]
   140022866:	lea    rdx,[r14+rcx*4]
   14002286a:	cmp    WORD PTR [rdx],r15w
   14002286e:	jb     0x140022890
   140022870:	mov    eax,DWORD PTR [rdx+0x8]
   140022873:	movsd  xmm0,QWORD PTR [rdx]
   140022877:	lea    rdx,[rbp-0x18]
   14002287b:	mov    DWORD PTR [rbp-0x10],eax
   14002287e:	movsd  QWORD PTR [rbp-0x18],xmm0
   140022883:	mov    rax,QWORD PTR [rbp-0x18]
   140022887:	shr    rax,0x10
   14002288b:	sub    eax,esi
   14002288d:	mov    DWORD PTR [rbp-0x16],eax
   140022890:	movzx  ecx,WORD PTR [rdx+0xa]
   140022894:	movzx  eax,WORD PTR [r9+0xa]
   140022899:	mov    DWORD PTR [rbp-0x4c],edi
   14002289c:	movzx  r10d,cx
   1400228a0:	and    cx,r11w
   1400228a4:	mov    QWORD PTR [rbp-0x28],0x0
   1400228ac:	xor    r10w,ax
   1400228b0:	and    ax,r11w
   1400228b4:	mov    DWORD PTR [rbp-0x20],edi
   1400228b7:	and    r10w,r15w
   1400228bb:	lea    r8d,[rax+rcx*1]
   1400228bf:	mov    WORD PTR [rbp-0x50],r10w
   1400228c4:	cmp    ax,r11w
   1400228c8:	jae    0x140022b33
   1400228ce:	cmp    cx,r11w
   1400228d2:	jae    0x140022b33
   1400228d8:	mov    r11d,0xbffd
   1400228de:	cmp    r8w,r11w
   1400228e2:	ja     0x140022b2d
   1400228e8:	mov    r10d,0x3fbf
   1400228ee:	cmp    r8w,r10w
   1400228f2:	ja     0x14002290a
   1400228f4:	mov    QWORD PTR [r9+0x4],0x0
   1400228fc:	mov    DWORD PTR [r9],edi
   1400228ff:	mov    r11d,0x7fff
   140022905:	jmp    0x140022b4e
   14002290a:	test   ax,ax
   14002290d:	jne    0x14002292f
   14002290f:	add    r8w,si
   140022913:	test   DWORD PTR [r9+0x8],0x7fffffff
   14002291b:	jne    0x14002292f
   14002291d:	cmp    DWORD PTR [r9+0x4],edi
   140022921:	jne    0x14002292f
   140022923:	cmp    DWORD PTR [r9],edi
   140022926:	jne    0x14002292f
   140022928:	mov    WORD PTR [r9+0xa],di
   14002292d:	jmp    0x1400228ff
   14002292f:	test   cx,cx
   140022932:	jne    0x14002294a
   140022934:	add    r8w,si
   140022938:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14002293f:	jne    0x14002294a
   140022941:	cmp    DWORD PTR [rdx+0x4],edi
   140022944:	jne    0x14002294a
   140022946:	cmp    DWORD PTR [rdx],edi
   140022948:	je     0x1400228f4
   14002294a:	xor    r14d,r14d
   14002294d:	lea    r10,[rbp-0x28]
   140022951:	lea    r11d,[r14+0x5]
   140022955:	mov    r15d,r14d
   140022958:	mov    r12d,r11d
   14002295b:	test   r11d,r11d
   14002295e:	jle    0x1400229bc
   140022960:	lea    eax,[r15+r15*1]
   140022964:	mov    ebx,r15d
   140022967:	lea    r13,[rdx+0x8]
   14002296b:	cdqe   
   14002296d:	and    ebx,esi
   14002296f:	add    rax,r9
   140022972:	mov    r9,rax
   140022975:	movzx  eax,WORD PTR [r13+0x0]
   14002297a:	movzx  ecx,WORD PTR [r9]
   14002297e:	mov    esi,r14d
   140022981:	imul   ecx,eax
   140022984:	mov    eax,DWORD PTR [r10]
   140022987:	lea    edi,[rax+rcx*1]
   14002298a:	cmp    edi,eax
   14002298c:	jb     0x140022992
   14002298e:	cmp    edi,ecx
   140022990:	jae    0x140022997
   140022992:	mov    esi,0x1
   140022997:	test   esi,esi
   140022999:	mov    DWORD PTR [r10],edi
   14002299c:	mov    esi,0x1
   1400229a1:	je     0x1400229a8
   1400229a3:	add    WORD PTR [r10+0x4],si
   1400229a8:	sub    r12d,esi
   1400229ab:	add    r9,0x2
   1400229af:	sub    r13,0x2
   1400229b3:	test   r12d,r12d
   1400229b6:	jg     0x140022975
   1400229b8:	mov    r9,QWORD PTR [rbp-0x40]
   1400229bc:	sub    r11d,esi
   1400229bf:	add    r10,0x2
   1400229c3:	add    r15d,esi
   1400229c6:	test   r11d,r11d
   1400229c9:	jg     0x140022958
   1400229cb:	mov    r10d,DWORD PTR [rbp-0x20]
   1400229cf:	mov    r11d,DWORD PTR [rbp-0x28]
   1400229d3:	mov    eax,0xc002
   1400229d8:	add    r8w,ax
   1400229dc:	mov    r12d,0xffff
   1400229e2:	test   r8w,r8w
   1400229e6:	jle    0x140022a24
   1400229e8:	test   r10d,r10d
   1400229eb:	js     0x140022a1e
   1400229ed:	mov    edi,DWORD PTR [rbp-0x24]
   1400229f0:	mov    edx,r11d
   1400229f3:	add    r10d,r10d
   1400229f6:	shr    edx,0x1f
   1400229f9:	add    r11d,r11d
   1400229fc:	mov    ecx,edi
   1400229fe:	shr    ecx,0x1f
   140022a01:	lea    eax,[rdi+rdi*1]
   140022a04:	add    r8w,r12w
   140022a08:	or     eax,edx
   140022a0a:	or     r10d,ecx
   140022a0d:	mov    DWORD PTR [rbp-0x28],r11d
   140022a11:	mov    DWORD PTR [rbp-0x24],eax
   140022a14:	mov    DWORD PTR [rbp-0x20],r10d
   140022a18:	test   r8w,r8w
   140022a1c:	jg     0x1400229e8
   140022a1e:	test   r8w,r8w
   140022a22:	jg     0x140022a8a
   140022a24:	add    r8w,r12w
   140022a28:	jns    0x140022a8a
   140022a2a:	mov    r9d,DWORD PTR [rbp-0x4c]
   140022a2e:	movzx  eax,r8w
   140022a32:	neg    ax
   140022a35:	movzx  edx,ax
   140022a38:	add    r8w,dx
   140022a3c:	test   BYTE PTR [rbp-0x28],sil
   140022a40:	je     0x140022a45
   140022a42:	add    r9d,esi
   140022a45:	mov    edi,DWORD PTR [rbp-0x24]
   140022a48:	mov    eax,r10d
   140022a4b:	shr    r11d,1
   140022a4e:	mov    ecx,edi
   140022a50:	shl    eax,0x1f
   140022a53:	shr    edi,1
   140022a55:	shl    ecx,0x1f
   140022a58:	or     edi,eax
   140022a5a:	shr    r10d,1
   140022a5d:	or     r11d,ecx
   140022a60:	mov    DWORD PTR [rbp-0x24],edi
   140022a63:	mov    DWORD PTR [rbp-0x28],r11d
   140022a67:	sub    rdx,rsi
   140022a6a:	jne    0x140022a3c
   140022a6c:	test   r9d,r9d
   140022a6f:	mov    r9,QWORD PTR [rbp-0x40]
   140022a73:	mov    DWORD PTR [rbp-0x20],r10d
   140022a77:	je     0x140022a8a
   140022a79:	movzx  eax,r11w
   140022a7d:	or     ax,si
   140022a80:	mov    WORD PTR [rbp-0x28],ax
   140022a84:	mov    r11d,DWORD PTR [rbp-0x28]
   140022a88:	jmp    0x140022a8e
   140022a8a:	movzx  eax,WORD PTR [rbp-0x28]
   140022a8e:	mov    ebx,DWORD PTR [rbp-0x48]
   140022a91:	mov    r14,QWORD PTR [rbp-0x38]
   140022a95:	mov    r15d,0x8000
   140022a9b:	cmp    ax,r15w
   140022a9f:	ja     0x140022ab1
   140022aa1:	and    r11d,0x1ffff
   140022aa8:	cmp    r11d,0x18000
   140022aaf:	jne    0x140022af7
   140022ab1:	mov    eax,DWORD PTR [rbp-0x26]
   140022ab4:	cmp    eax,0xffffffff
   140022ab7:	jne    0x140022af2
   140022ab9:	mov    eax,DWORD PTR [rbp-0x22]
   140022abc:	xor    edi,edi
   140022abe:	mov    DWORD PTR [rbp-0x26],edi
   140022ac1:	cmp    eax,0xffffffff
   140022ac4:	jne    0x140022ae7
   140022ac6:	movzx  eax,WORD PTR [rbp-0x1e]
   140022aca:	mov    DWORD PTR [rbp-0x22],edi
   140022acd:	cmp    ax,r12w
   140022ad1:	jne    0x140022ade
   140022ad3:	mov    WORD PTR [rbp-0x1e],r15w
   140022ad8:	add    r8w,si
   140022adc:	jmp    0x140022aec
   140022ade:	add    ax,si
   140022ae1:	mov    WORD PTR [rbp-0x1e],ax
   140022ae5:	jmp    0x140022aec
   140022ae7:	add    eax,esi
   140022ae9:	mov    DWORD PTR [rbp-0x22],eax
   140022aec:	mov    r10d,DWORD PTR [rbp-0x20]
   140022af0:	jmp    0x140022af9
   140022af2:	add    eax,esi
   140022af4:	mov    DWORD PTR [rbp-0x26],eax
   140022af7:	xor    edi,edi
   140022af9:	mov    r11d,0x7fff
   140022aff:	cmp    r8w,r11w
   140022b03:	jb     0x140022b0e
   140022b05:	movzx  eax,WORD PTR [rbp-0x50]
   140022b09:	neg    ax
   140022b0c:	jmp    0x140022b37
   140022b0e:	movzx  eax,WORD PTR [rbp-0x26]
   140022b12:	or     r8w,WORD PTR [rbp-0x50]
   140022b17:	mov    DWORD PTR [r9+0x6],r10d
   140022b1b:	mov    WORD PTR [r9],ax
   140022b1f:	mov    eax,DWORD PTR [rbp-0x24]
   140022b22:	mov    WORD PTR [r9+0xa],r8w
   140022b27:	mov    DWORD PTR [r9+0x2],eax
   140022b2b:	jmp    0x140022b4e
   140022b2d:	mov    r11d,0x7fff
   140022b33:	neg    r10w
   140022b37:	sbb    eax,eax
   140022b39:	mov    QWORD PTR [r9],0x0
   140022b40:	and    eax,0x80000000
   140022b45:	add    eax,0x7fff8000
   140022b4a:	mov    DWORD PTR [r9+0x8],eax
   140022b4e:	test   ebx,ebx
   140022b50:	jne    0x140022847
   140022b56:	mov    rcx,QWORD PTR [rbp-0x8]
   140022b5a:	xor    rcx,rsp
   140022b5d:	call   0x14000c380
   140022b62:	lea    r11,[rsp+0x50]
   140022b67:	mov    rbx,QWORD PTR [r11+0x38]
   140022b6b:	mov    rsi,QWORD PTR [r11+0x40]
   140022b6f:	mov    rdi,QWORD PTR [r11+0x48]
   140022b73:	mov    rsp,r11
   140022b76:	pop    r15
   140022b78:	pop    r14
   140022b7a:	pop    r13
   140022b7c:	pop    r12
   140022b7e:	pop    rbp
   140022b7f:	ret    
   140022b80:	mov    eax,DWORD PTR [rcx]
   140022b82:	mov    edx,DWORD PTR [rcx+0x4]
   140022b85:	mov    r8d,eax
   140022b88:	add    eax,eax
   140022b8a:	mov    r9d,edx
   140022b8d:	mov    DWORD PTR [rcx],eax
   140022b8f:	lea    eax,[rdx+rdx*1]
   140022b92:	shr    r8d,0x1f
   140022b96:	or     eax,r8d
   140022b99:	shr    r9d,0x1f
   140022b9d:	mov    DWORD PTR [rcx+0x4],eax
   140022ba0:	mov    eax,DWORD PTR [rcx+0x8]
   140022ba3:	add    eax,eax
   140022ba5:	or     eax,r9d
   140022ba8:	mov    DWORD PTR [rcx+0x8],eax
   140022bab:	ret    
   140022bac:	mov    eax,DWORD PTR [rcx+0x8]
   140022baf:	mov    edx,DWORD PTR [rcx+0x4]
   140022bb2:	mov    r8d,eax
   140022bb5:	shr    eax,1
   140022bb7:	mov    r9d,edx
   140022bba:	mov    DWORD PTR [rcx+0x8],eax
   140022bbd:	mov    eax,DWORD PTR [rcx]
   140022bbf:	shl    r8d,0x1f
   140022bc3:	shl    r9d,0x1f
   140022bc7:	shr    edx,1
   140022bc9:	shr    eax,1
   140022bcb:	or     eax,r9d
   140022bce:	or     edx,r8d
   140022bd1:	mov    DWORD PTR [rcx],eax
   140022bd3:	mov    DWORD PTR [rcx+0x4],edx
   140022bd6:	ret    
   140022bd7:	int3   
   140022bd8:	mov    QWORD PTR [rsp+0x18],rbx
   140022bdd:	push   rbp
   140022bde:	push   rsi
   140022bdf:	push   rdi
   140022be0:	push   r12
   140022be2:	push   r13
   140022be4:	push   r14
   140022be6:	push   r15
   140022be8:	lea    rbp,[rsp-0x7]
   140022bed:	sub    rsp,0xa0
   140022bf4:	mov    rax,QWORD PTR [rip+0x195d5]        # 0x14003c1d0
   140022bfb:	xor    rax,rsp
   140022bfe:	mov    QWORD PTR [rbp-0x1],rax
   140022c02:	mov    r14,QWORD PTR [rbp+0x7f]
   140022c06:	xor    ebx,ebx
   140022c08:	mov    DWORD PTR [rbp-0x6d],r9d
   140022c0c:	lea    r9d,[rbx+0x1]
   140022c10:	mov    QWORD PTR [rbp-0x59],rcx
   140022c14:	mov    QWORD PTR [rbp-0x69],rdx
   140022c18:	lea    r10,[rbp-0x21]
   140022c1c:	mov    WORD PTR [rbp-0x71],bx
   140022c20:	mov    r11d,ebx
   140022c23:	mov    DWORD PTR [rbp-0x75],r9d
   140022c27:	mov    r15d,ebx
   140022c2a:	mov    DWORD PTR [rbp-0x79],ebx
   140022c2d:	mov    r12d,ebx
   140022c30:	mov    r13d,ebx
   140022c33:	mov    esi,ebx
   140022c35:	mov    ecx,ebx
   140022c37:	test   r14,r14
   140022c3a:	jne    0x140022c53
   140022c3c:	call   0x140009cb4
   140022c41:	mov    DWORD PTR [rax],0x16
   140022c47:	call   0x140008d58
   140022c4c:	xor    eax,eax
   140022c4e:	jmp    0x140023412
   140022c53:	mov    rdi,r8
   140022c56:	cmp    BYTE PTR [r8],0x20
   140022c5a:	ja     0x140022c75
   140022c5c:	movsx  rax,BYTE PTR [r8]
   140022c60:	movabs rdx,0x100002600
   140022c6a:	bt     rdx,rax
   140022c6e:	jae    0x140022c75
   140022c70:	add    r8,r9
   140022c73:	jmp    0x140022c56
   140022c75:	mov    dl,BYTE PTR [r8]
   140022c78:	add    r8,r9
   140022c7b:	cmp    ecx,0x5
   140022c7e:	jg     0x140022e8e
   140022c84:	je     0x140022e74
   140022c8a:	mov    r9d,ecx
   140022c8d:	test   ecx,ecx
   140022c8f:	je     0x140022e18
   140022c95:	dec    r9d
   140022c98:	je     0x140022dd8
   140022c9e:	dec    r9d
   140022ca1:	je     0x140022d86
   140022ca7:	dec    r9d
   140022caa:	je     0x140022d39
   140022cb0:	dec    r9d
   140022cb3:	jne    0x140022f53
   140022cb9:	mov    r9d,0x1
   140022cbf:	mov    al,0x30
   140022cc1:	mov    r15d,r9d
   140022cc4:	mov    DWORD PTR [rbp-0x79],r9d
   140022cc8:	test   r11d,r11d
   140022ccb:	jne    0x140022cfd
   140022ccd:	jmp    0x140022cd8
   140022ccf:	mov    dl,BYTE PTR [r8]
   140022cd2:	sub    esi,r9d
   140022cd5:	add    r8,r9
   140022cd8:	cmp    dl,al
   140022cda:	je     0x140022ccf
   140022cdc:	jmp    0x140022cfd
   140022cde:	cmp    dl,0x39
   140022ce1:	jg     0x140022d01
   140022ce3:	cmp    r11d,0x19
   140022ce7:	jae    0x140022cf7
   140022ce9:	sub    dl,al
   140022ceb:	add    r11d,r9d
   140022cee:	mov    BYTE PTR [r10],dl
   140022cf1:	add    r10,r9
   140022cf4:	sub    esi,r9d
   140022cf7:	mov    dl,BYTE PTR [r8]
   140022cfa:	add    r8,r9
   140022cfd:	cmp    dl,al
   140022cff:	jge    0x140022cde
   140022d01:	lea    eax,[rdx-0x2b]
   140022d04:	test   al,0xfd
   140022d06:	je     0x140022d2c
   140022d08:	cmp    dl,0x43
   140022d0b:	jle    0x140022e4d
   140022d11:	cmp    dl,0x45
   140022d14:	jle    0x140022d22
   140022d16:	sub    dl,0x64
   140022d19:	cmp    dl,r9b
   140022d1c:	ja     0x140022e4d
   140022d22:	mov    ecx,0x6
   140022d27:	jmp    0x140022c75
   140022d2c:	sub    r8,r9
   140022d2f:	mov    ecx,0xb
   140022d34:	jmp    0x140022c75
   140022d39:	mov    r9d,0x1
   140022d3f:	mov    al,0x30
   140022d41:	mov    r15d,r9d
   140022d44:	jmp    0x140022d67
   140022d46:	cmp    dl,0x39
   140022d49:	jg     0x140022d6b
   140022d4b:	cmp    r11d,0x19
   140022d4f:	jae    0x140022d5e
   140022d51:	sub    dl,al
   140022d53:	add    r11d,r9d
   140022d56:	mov    BYTE PTR [r10],dl
   140022d59:	add    r10,r9
   140022d5c:	jmp    0x140022d61
   140022d5e:	add    esi,r9d
   140022d61:	mov    dl,BYTE PTR [r8]
   140022d64:	add    r8,r9
   140022d67:	cmp    dl,al
   140022d69:	jge    0x140022d46
   140022d6b:	mov    rax,QWORD PTR [r14]
   140022d6e:	mov    rcx,QWORD PTR [rax+0xf0]
   140022d75:	mov    rax,QWORD PTR [rcx]
   140022d78:	cmp    dl,BYTE PTR [rax]
   140022d7a:	jne    0x140022d01
   140022d7c:	mov    ecx,0x4
   140022d81:	jmp    0x140022c75
   140022d86:	lea    eax,[rdx-0x31]
   140022d89:	cmp    al,0x8
   140022d8b:	ja     0x140022da0
   140022d8d:	mov    ecx,0x3
   140022d92:	mov    r9d,0x1
   140022d98:	sub    r8,r9
   140022d9b:	jmp    0x140022c75
   140022da0:	mov    rax,QWORD PTR [r14]
   140022da3:	mov    rcx,QWORD PTR [rax+0xf0]
   140022daa:	mov    rax,QWORD PTR [rcx]
   140022dad:	cmp    dl,BYTE PTR [rax]
   140022daf:	jne    0x140022dc1
   140022db1:	mov    ecx,0x5
   140022db6:	mov    r9d,0x1
   140022dbc:	jmp    0x140022c75
   140022dc1:	cmp    dl,0x30
   140022dc4:	jne    0x140022fbc
   140022dca:	mov    r9d,0x1
   140022dd0:	mov    ecx,r9d
   140022dd3:	jmp    0x140022c75
   140022dd8:	lea    eax,[rdx-0x31]
   140022ddb:	mov    r9d,0x1
   140022de1:	mov    r15d,r9d
   140022de4:	cmp    al,0x8
   140022de6:	ja     0x140022dee
   140022de8:	lea    ecx,[r9+0x2]
   140022dec:	jmp    0x140022d98
   140022dee:	mov    rax,QWORD PTR [r14]
   140022df1:	mov    rcx,QWORD PTR [rax+0xf0]
   140022df8:	mov    rax,QWORD PTR [rcx]
   140022dfb:	cmp    dl,BYTE PTR [rax]
   140022dfd:	je     0x140022d7c
   140022e03:	lea    eax,[rdx-0x2b]
   140022e06:	test   al,0xfd
   140022e08:	je     0x140022d2c
   140022e0e:	cmp    dl,0x30
   140022e11:	je     0x140022dd0
   140022e13:	jmp    0x140022d08
   140022e18:	lea    eax,[rdx-0x31]
   140022e1b:	cmp    al,0x8
   140022e1d:	jbe    0x140022d8d
   140022e23:	mov    rax,QWORD PTR [r14]
   140022e26:	mov    rcx,QWORD PTR [rax+0xf0]
   140022e2d:	mov    rax,QWORD PTR [rcx]
   140022e30:	cmp    dl,BYTE PTR [rax]
   140022e32:	je     0x140022db1
   140022e38:	cmp    dl,0x2b
   140022e3b:	je     0x140022e66
   140022e3d:	cmp    dl,0x2d
   140022e40:	je     0x140022e55
   140022e42:	cmp    dl,0x30
   140022e45:	je     0x140022dca
   140022e47:	mov    r9d,0x1
   140022e4d:	sub    r8,r9
   140022e50:	jmp    0x140022fc5
   140022e55:	mov    ecx,0x2
   140022e5a:	mov    DWORD PTR [rbp-0x71],0x8000
   140022e61:	jmp    0x140022db6
   140022e66:	mov    ecx,0x2
   140022e6b:	mov    WORD PTR [rbp-0x71],bx
   140022e6f:	jmp    0x140022db6
   140022e74:	sub    dl,0x30
   140022e77:	mov    DWORD PTR [rbp-0x79],r9d
   140022e7b:	cmp    dl,0x9
   140022e7e:	ja     0x140022f5d
   140022e84:	mov    ecx,0x4
   140022e89:	jmp    0x140022d98
   140022e8e:	mov    r9d,ecx
   140022e91:	sub    r9d,0x6
   140022e95:	je     0x140022f37
   140022e9b:	dec    r9d
   140022e9e:	je     0x140022f13
   140022ea0:	dec    r9d
   140022ea3:	je     0x140022ee7
   140022ea5:	dec    r9d
   140022ea8:	je     0x140022f62
   140022eae:	cmp    r9d,0x2
   140022eb2:	jne    0x140022f53
   140022eb8:	cmp    DWORD PTR [rbp+0x77],ebx
   140022ebb:	je     0x140022e47
   140022ebd:	lea    rdi,[r8-0x1]
   140022ec1:	cmp    dl,0x2b
   140022ec4:	je     0x140022edd
   140022ec6:	cmp    dl,0x2d
   140022ec9:	jne    0x140022fbc
   140022ecf:	or     DWORD PTR [rbp-0x75],0xffffffff
   140022ed3:	mov    ecx,0x7
   140022ed8:	jmp    0x140022db6
   140022edd:	mov    ecx,0x7
   140022ee2:	jmp    0x140022db6
   140022ee7:	mov    r9d,0x1
   140022eed:	mov    r12d,r9d
   140022ef0:	jmp    0x140022ef8
   140022ef2:	mov    dl,BYTE PTR [r8]
   140022ef5:	add    r8,r9
   140022ef8:	cmp    dl,0x30
   140022efb:	je     0x140022ef2
   140022efd:	sub    dl,0x31
   140022f00:	cmp    dl,0x8
   140022f03:	ja     0x140022e4d
   140022f09:	mov    ecx,0x9
   140022f0e:	jmp    0x140022d98
   140022f13:	lea    eax,[rdx-0x31]
   140022f16:	cmp    al,0x8
   140022f18:	ja     0x140022f24
   140022f1a:	mov    ecx,0x9
   140022f1f:	jmp    0x140022d92
   140022f24:	cmp    dl,0x30
   140022f27:	jne    0x140022fbc
   140022f2d:	mov    ecx,0x8
   140022f32:	jmp    0x140022db6
   140022f37:	lea    eax,[rdx-0x31]
   140022f3a:	lea    rdi,[r8-0x2]
   140022f3e:	cmp    al,0x8
   140022f40:	jbe    0x140022f1a
   140022f42:	cmp    dl,0x2b
   140022f45:	je     0x140022f4e
   140022f47:	cmp    dl,0x2d
   140022f4a:	je     0x140022ecf
   140022f4c:	jmp    0x140022f24
   140022f4e:	mov    ecx,0x7
   140022f53:	cmp    ecx,0xa
   140022f56:	je     0x140022fbf
   140022f58:	jmp    0x140022db6
   140022f5d:	mov    r8,rdi
   140022f60:	jmp    0x140022fc5
   140022f62:	mov    r9d,0x1
   140022f68:	mov    dil,0x30
   140022f6b:	mov    r12d,r9d
   140022f6e:	jmp    0x140022f94
   140022f70:	cmp    dl,0x39
   140022f73:	jg     0x140022fb2
   140022f75:	lea    r13d,[r13+r13*4+0x0]
   140022f7a:	movsx  eax,dl
   140022f7d:	lea    r13d,[r13-0x18]
   140022f81:	lea    r13d,[rax+r13*2]
   140022f85:	cmp    r13d,0x1450
   140022f8c:	jg     0x140022f9b
   140022f8e:	mov    dl,BYTE PTR [r8]
   140022f91:	add    r8,r9
   140022f94:	cmp    dl,dil
   140022f97:	jge    0x140022f70
   140022f99:	jmp    0x140022fb2
   140022f9b:	mov    r13d,0x1451
   140022fa1:	jmp    0x140022fb2
   140022fa3:	cmp    dl,0x39
   140022fa6:	jg     0x140022e4d
   140022fac:	mov    dl,BYTE PTR [r8]
   140022faf:	add    r8,r9
   140022fb2:	cmp    dl,dil
   140022fb5:	jge    0x140022fa3
   140022fb7:	jmp    0x140022e4d
   140022fbc:	mov    r8,rdi
   140022fbf:	mov    r9d,0x1
   140022fc5:	mov    rax,QWORD PTR [rbp-0x69]
   140022fc9:	mov    QWORD PTR [rax],r8
   140022fcc:	test   r15d,r15d
   140022fcf:	je     0x1400233e8
   140022fd5:	cmp    r11d,0x18
   140022fd9:	jbe    0x140022ff4
   140022fdb:	mov    al,BYTE PTR [rbp-0xa]
   140022fde:	cmp    al,0x5
   140022fe0:	jl     0x140022fe8
   140022fe2:	add    al,r9b
   140022fe5:	mov    BYTE PTR [rbp-0xa],al
   140022fe8:	sub    r10,r9
   140022feb:	mov    r11d,0x18
   140022ff1:	add    esi,r9d
   140022ff4:	test   r11d,r11d
   140022ff7:	jne    0x14002300e
   140022ff9:	movzx  edx,bx
   140022ffc:	movzx  eax,bx
   140022fff:	mov    edi,ebx
   140023001:	mov    ecx,ebx
   140023003:	jmp    0x1400233f7
   140023008:	dec    r11d
   14002300b:	add    esi,r9d
   14002300e:	sub    r10,r9
   140023011:	cmp    BYTE PTR [r10],bl
   140023014:	je     0x140023008
   140023016:	lea    r8,[rbp-0x41]
   14002301a:	lea    rcx,[rbp-0x21]
   14002301e:	mov    edx,r11d
   140023021:	call   0x140028350
   140023026:	cmp    DWORD PTR [rbp-0x75],ebx
   140023029:	jge    0x14002302e
   14002302b:	neg    r13d
   14002302e:	add    r13d,esi
   140023031:	test   r12d,r12d
   140023034:	jne    0x14002303a
   140023036:	add    r13d,DWORD PTR [rbp+0x67]
   14002303a:	cmp    DWORD PTR [rbp-0x79],ebx
   14002303d:	jne    0x140023043
   14002303f:	sub    r13d,DWORD PTR [rbp+0x6f]
   140023043:	cmp    r13d,0x1450
   14002304a:	jg     0x1400233d2
   140023050:	cmp    r13d,0xffffebb0
   140023057:	jl     0x1400233c2
   14002305d:	lea    rsi,[rip+0x1a4cc]        # 0x14003d530
   140023064:	sub    rsi,0x60
   140023068:	test   r13d,r13d
   14002306b:	je     0x1400233b0
   140023071:	jns    0x140023081
   140023073:	lea    rsi,[rip+0x1a616]        # 0x14003d690
   14002307a:	neg    r13d
   14002307d:	sub    rsi,0x60
   140023081:	cmp    DWORD PTR [rbp-0x6d],ebx
   140023084:	jne    0x14002308a
   140023086:	mov    WORD PTR [rbp-0x41],bx
   14002308a:	test   r13d,r13d
   14002308d:	je     0x1400233b0
   140023093:	mov    edi,0x80000000
   140023098:	mov    r9d,0x7fff
   14002309e:	mov    eax,r13d
   1400230a1:	add    rsi,0x54
   1400230a5:	sar    r13d,0x3
   1400230a9:	mov    QWORD PTR [rbp-0x61],rsi
   1400230ad:	and    eax,0x7
   1400230b0:	je     0x1400233a7
   1400230b6:	cdqe   
   1400230b8:	mov    r11d,0x8000
   1400230be:	mov    r14d,0x1
   1400230c4:	lea    rcx,[rax+rax*2]
   1400230c8:	lea    rdx,[rsi+rcx*4]
   1400230cc:	mov    QWORD PTR [rbp-0x69],rdx
   1400230d0:	cmp    WORD PTR [rdx],r11w
   1400230d4:	jb     0x1400230fb
   1400230d6:	mov    eax,DWORD PTR [rdx+0x8]
   1400230d9:	movsd  xmm0,QWORD PTR [rdx]
   1400230dd:	lea    rdx,[rbp-0x31]
   1400230e1:	mov    DWORD PTR [rbp-0x29],eax
   1400230e4:	movsd  QWORD PTR [rbp-0x31],xmm0
   1400230e9:	mov    rax,QWORD PTR [rbp-0x31]
   1400230ed:	shr    rax,0x10
   1400230f1:	mov    QWORD PTR [rbp-0x69],rdx
   1400230f5:	sub    eax,r14d
   1400230f8:	mov    DWORD PTR [rbp-0x2f],eax
   1400230fb:	movzx  eax,WORD PTR [rdx+0xa]
   1400230ff:	movzx  ecx,WORD PTR [rbp-0x37]
   140023103:	mov    QWORD PTR [rbp-0x51],rbx
   140023107:	movzx  r12d,ax
   14002310b:	and    ax,r9w
   14002310f:	mov    DWORD PTR [rbp-0x49],ebx
   140023112:	xor    r12w,cx
   140023116:	and    cx,r9w
   14002311a:	and    r12w,r11w
   14002311e:	lea    r8d,[rcx+rax*1]
   140023122:	cmp    cx,r9w
   140023126:	jae    0x140023393
   14002312c:	cmp    ax,r9w
   140023130:	jae    0x140023393
   140023136:	mov    r10d,0xbffd
   14002313c:	cmp    r8w,r10w
   140023140:	ja     0x140023393
   140023146:	mov    r10d,0x3fbf
   14002314c:	cmp    r8w,r10w
   140023150:	ja     0x14002315e
   140023152:	mov    QWORD PTR [rbp-0x3d],rbx
   140023156:	mov    DWORD PTR [rbp-0x41],ebx
   140023159:	jmp    0x1400233a7
   14002315e:	test   cx,cx
   140023161:	jne    0x140023183
   140023163:	add    r8w,r14w
   140023167:	test   DWORD PTR [rbp-0x39],0x7fffffff
   14002316e:	jne    0x140023183
   140023170:	cmp    DWORD PTR [rbp-0x3d],ebx
   140023173:	jne    0x140023183
   140023175:	cmp    DWORD PTR [rbp-0x41],ebx
   140023178:	jne    0x140023183
   14002317a:	mov    WORD PTR [rbp-0x37],bx
   14002317e:	jmp    0x1400233a7
   140023183:	test   ax,ax
   140023186:	jne    0x14002319e
   140023188:	add    r8w,r14w
   14002318c:	test   DWORD PTR [rdx+0x8],0x7fffffff
   140023193:	jne    0x14002319e
   140023195:	cmp    DWORD PTR [rdx+0x4],ebx
   140023198:	jne    0x14002319e
   14002319a:	cmp    DWORD PTR [rdx],ebx
   14002319c:	je     0x140023152
   14002319e:	mov    r15d,ebx
   1400231a1:	lea    r9,[rbp-0x51]
   1400231a5:	mov    r10d,0x5
   1400231ab:	mov    DWORD PTR [rbp-0x79],r10d
   1400231af:	test   r10d,r10d
   1400231b2:	jle    0x140023220
   1400231b4:	lea    eax,[r15+r15*1]
   1400231b8:	lea    rdi,[rbp-0x41]
   1400231bc:	lea    rsi,[rdx+0x8]
   1400231c0:	movsxd rcx,eax
   1400231c3:	mov    eax,r15d
   1400231c6:	and    eax,r14d
   1400231c9:	add    rdi,rcx
   1400231cc:	mov    edx,eax
   1400231ce:	movzx  eax,WORD PTR [rdi]
   1400231d1:	movzx  ecx,WORD PTR [rsi]
   1400231d4:	mov    r11d,ebx
   1400231d7:	imul   ecx,eax
   1400231da:	mov    eax,DWORD PTR [r9]
   1400231dd:	lea    r14d,[rax+rcx*1]
   1400231e1:	cmp    r14d,eax
   1400231e4:	jb     0x1400231eb
   1400231e6:	cmp    r14d,ecx
   1400231e9:	jae    0x1400231f1
   1400231eb:	mov    r11d,0x1
   1400231f1:	mov    DWORD PTR [r9],r14d
   1400231f4:	mov    r14d,0x1
   1400231fa:	test   r11d,r11d
   1400231fd:	je     0x140023204
   1400231ff:	add    WORD PTR [r9+0x4],r14w
   140023204:	mov    r11d,DWORD PTR [rbp-0x79]
   140023208:	add    rdi,0x2
   14002320c:	sub    rsi,0x2
   140023210:	sub    r11d,r14d
   140023213:	mov    DWORD PTR [rbp-0x79],r11d
   140023217:	test   r11d,r11d
   14002321a:	jg     0x1400231ce
   14002321c:	mov    rdx,QWORD PTR [rbp-0x69]
   140023220:	sub    r10d,r14d
   140023223:	add    r9,0x2
   140023227:	add    r15d,r14d
   14002322a:	test   r10d,r10d
   14002322d:	jg     0x1400231ab
   140023233:	mov    r10d,DWORD PTR [rbp-0x49]
   140023237:	mov    r9d,DWORD PTR [rbp-0x51]
   14002323b:	mov    eax,0xc002
   140023240:	add    r8w,ax
   140023244:	mov    edi,0x80000000
   140023249:	mov    r15d,0xffff
   14002324f:	test   r8w,r8w
   140023253:	jle    0x140023294
   140023255:	test   edi,r10d
   140023258:	jne    0x14002328e
   14002325a:	mov    r11d,DWORD PTR [rbp-0x4d]
   14002325e:	mov    edx,r9d
   140023261:	add    r10d,r10d
   140023264:	shr    edx,0x1f
   140023267:	add    r9d,r9d
   14002326a:	mov    ecx,r11d
   14002326d:	shr    ecx,0x1f
   140023270:	lea    eax,[r11+r11*1]
   140023274:	add    r8w,r15w
   140023278:	or     eax,edx
   14002327a:	or     r10d,ecx
   14002327d:	mov    DWORD PTR [rbp-0x51],r9d
   140023281:	mov    DWORD PTR [rbp-0x4d],eax
   140023284:	mov    DWORD PTR [rbp-0x49],r10d
   140023288:	test   r8w,r8w
   14002328c:	jg     0x140023255
   14002328e:	test   r8w,r8w
   140023292:	jg     0x1400232fe
   140023294:	add    r8w,r15w
   140023298:	jns    0x1400232fe
   14002329a:	movzx  eax,r8w
   14002329e:	mov    edi,ebx
   1400232a0:	neg    ax
   1400232a3:	movzx  edx,ax
   1400232a6:	add    r8w,dx
   1400232aa:	test   BYTE PTR [rbp-0x51],r14b
   1400232ae:	je     0x1400232b3
   1400232b0:	add    edi,r14d
   1400232b3:	mov    r11d,DWORD PTR [rbp-0x4d]
   1400232b7:	mov    eax,r10d
   1400232ba:	shr    r9d,1
   1400232bd:	mov    ecx,r11d
   1400232c0:	shl    eax,0x1f
   1400232c3:	shr    r11d,1
   1400232c6:	shl    ecx,0x1f
   1400232c9:	or     r11d,eax
   1400232cc:	shr    r10d,1
   1400232cf:	or     r9d,ecx
   1400232d2:	mov    DWORD PTR [rbp-0x4d],r11d
   1400232d6:	mov    DWORD PTR [rbp-0x51],r9d
   1400232da:	sub    rdx,r14
   1400232dd:	jne    0x1400232aa
   1400232df:	test   edi,edi
   1400232e1:	mov    DWORD PTR [rbp-0x49],r10d
   1400232e5:	mov    edi,0x80000000
   1400232ea:	je     0x1400232fe
   1400232ec:	movzx  eax,r9w
   1400232f0:	or     ax,r14w
   1400232f4:	mov    WORD PTR [rbp-0x51],ax
   1400232f8:	mov    r9d,DWORD PTR [rbp-0x51]
   1400232fc:	jmp    0x140023302
   1400232fe:	movzx  eax,WORD PTR [rbp-0x51]
   140023302:	mov    rsi,QWORD PTR [rbp-0x61]
   140023306:	mov    r11d,0x8000
   14002330c:	cmp    ax,r11w
   140023310:	ja     0x140023322
   140023312:	and    r9d,0x1ffff
   140023319:	cmp    r9d,0x18000
   140023320:	jne    0x14002336a
   140023322:	mov    eax,DWORD PTR [rbp-0x4f]
   140023325:	or     ecx,0xffffffff
   140023328:	cmp    eax,ecx
   14002332a:	jne    0x140023364
   14002332c:	mov    eax,DWORD PTR [rbp-0x4b]
   14002332f:	mov    DWORD PTR [rbp-0x4f],ebx
   140023332:	cmp    eax,ecx
   140023334:	jne    0x140023358
   140023336:	movzx  eax,WORD PTR [rbp-0x47]
   14002333a:	mov    DWORD PTR [rbp-0x4b],ebx
   14002333d:	cmp    ax,r15w
   140023341:	jne    0x14002334e
   140023343:	mov    WORD PTR [rbp-0x47],r11w
   140023348:	add    r8w,r14w
   14002334c:	jmp    0x14002335e
   14002334e:	add    ax,r14w
   140023352:	mov    WORD PTR [rbp-0x47],ax
   140023356:	jmp    0x14002335e
   140023358:	add    eax,r14d
   14002335b:	mov    DWORD PTR [rbp-0x4b],eax
   14002335e:	mov    r10d,DWORD PTR [rbp-0x49]
   140023362:	jmp    0x14002336a
   140023364:	add    eax,r14d
   140023367:	mov    DWORD PTR [rbp-0x4f],eax
   14002336a:	mov    r9d,0x7fff
   140023370:	cmp    r8w,r9w
   140023374:	jae    0x140023393
   140023376:	movzx  eax,WORD PTR [rbp-0x4f]
   14002337a:	or     r8w,r12w
   14002337e:	mov    DWORD PTR [rbp-0x3b],r10d
   140023382:	mov    WORD PTR [rbp-0x41],ax
   140023386:	mov    eax,DWORD PTR [rbp-0x4d]
   140023389:	mov    WORD PTR [rbp-0x37],r8w
   14002338e:	mov    DWORD PTR [rbp-0x3f],eax
   140023391:	jmp    0x1400233a7
   140023393:	neg    r12w
   140023397:	mov    QWORD PTR [rbp-0x41],rbx
   14002339b:	sbb    eax,eax
   14002339d:	and    eax,edi
   14002339f:	add    eax,0x7fff8000
   1400233a4:	mov    DWORD PTR [rbp-0x39],eax
   1400233a7:	test   r13d,r13d
   1400233aa:	jne    0x14002309e
   1400233b0:	mov    eax,DWORD PTR [rbp-0x39]
   1400233b3:	movzx  edx,WORD PTR [rbp-0x41]
   1400233b7:	mov    ecx,DWORD PTR [rbp-0x3f]
   1400233ba:	mov    edi,DWORD PTR [rbp-0x3b]
   1400233bd:	shr    eax,0x10
   1400233c0:	jmp    0x1400233f7
   1400233c2:	mov    edx,ebx
   1400233c4:	movzx  eax,bx
   1400233c7:	mov    edi,ebx
   1400233c9:	mov    ecx,ebx
   1400233cb:	mov    ebx,0x1
   1400233d0:	jmp    0x1400233f7
   1400233d2:	mov    ecx,ebx
   1400233d4:	movzx  edx,bx
   1400233d7:	mov    eax,0x7fff
   1400233dc:	mov    ebx,0x2
   1400233e1:	mov    edi,0x80000000
   1400233e6:	jmp    0x1400233f7
   1400233e8:	movzx  edx,bx
   1400233eb:	movzx  eax,bx
   1400233ee:	mov    edi,ebx
   1400233f0:	mov    ecx,ebx
   1400233f2:	mov    ebx,0x4
   1400233f7:	mov    r8,QWORD PTR [rbp-0x59]
   1400233fb:	or     ax,WORD PTR [rbp-0x71]
   1400233ff:	mov    WORD PTR [r8+0xa],ax
   140023404:	mov    eax,ebx
   140023406:	mov    WORD PTR [r8],dx
   14002340a:	mov    DWORD PTR [r8+0x2],ecx
   14002340e:	mov    DWORD PTR [r8+0x6],edi
   140023412:	mov    rcx,QWORD PTR [rbp-0x1]
   140023416:	xor    rcx,rsp
   140023419:	call   0x14000c380
   14002341e:	mov    rbx,QWORD PTR [rsp+0xf0]
   140023426:	add    rsp,0xa0
   14002342d:	pop    r15
   14002342f:	pop    r14
   140023431:	pop    r13
   140023433:	pop    r12
   140023435:	pop    rdi
   140023436:	pop    rsi
   140023437:	pop    rbp
   140023438:	ret    
   140023439:	int3   
   14002343a:	int3   
   14002343b:	int3   
   14002343c:	mov    QWORD PTR [rsp+0x10],rbx
   140023441:	push   rbp
   140023442:	push   rsi
   140023443:	push   rdi
   140023444:	push   r12
   140023446:	push   r13
   140023448:	push   r14
   14002344a:	push   r15
   14002344c:	lea    rbp,[rsp-0x27]
   140023451:	sub    rsp,0xc0
   140023458:	mov    rax,QWORD PTR [rip+0x18d71]        # 0x14003c1d0
   14002345f:	xor    rax,rsp
   140023462:	mov    QWORD PTR [rbp+0x17],rax
   140023466:	movzx  r10d,WORD PTR [rcx+0x8]
   14002346b:	mov    rbx,r9
   14002346e:	mov    r9d,DWORD PTR [rcx]
   140023471:	mov    DWORD PTR [rbp-0x4d],edx
   140023474:	mov    edx,0x8000
   140023479:	mov    r11d,0x1
   14002347f:	mov    DWORD PTR [rbp-0x39],r8d
   140023483:	mov    r8d,DWORD PTR [rcx+0x4]
   140023487:	movzx  ecx,r10w
   14002348b:	and    cx,dx
   14002348e:	lea    r13d,[rdx-0x1]
   140023492:	lea    eax,[r11+0x1f]
   140023496:	xor    r12d,r12d
   140023499:	and    r10w,r13w
   14002349d:	mov    QWORD PTR [rbp-0x41],rbx
   1400234a1:	mov    DWORD PTR [rbp-0x9],0xcccccccc
   1400234a8:	mov    DWORD PTR [rbp-0x5],0xcccccccc
   1400234af:	mov    DWORD PTR [rbp-0x1],0x3ffbcccc
   1400234b6:	mov    WORD PTR [rbp-0x67],cx
   1400234ba:	lea    edi,[rax+0xd]
   1400234bd:	test   cx,cx
   1400234c0:	je     0x1400234c8
   1400234c2:	mov    BYTE PTR [rbx+0x2],dil
   1400234c6:	jmp    0x1400234cb
   1400234c8:	mov    BYTE PTR [rbx+0x2],al
   1400234cb:	test   r10w,r10w
   1400234cf:	jne    0x1400234ff
   1400234d1:	test   r8d,r8d
   1400234d4:	jne    0x1400235ce
   1400234da:	test   r9d,r9d
   1400234dd:	jne    0x1400235ce
   1400234e3:	cmp    cx,dx
   1400234e6:	cmove  eax,edi
   1400234e9:	mov    WORD PTR [rbx],r12w
   1400234ed:	mov    BYTE PTR [rbx+0x2],al
   1400234f0:	mov    WORD PTR [rbx+0x3],0x3001
   1400234f6:	mov    BYTE PTR [rbx+0x5],r12b
   1400234fa:	jmp    0x140023e5a
   1400234ff:	cmp    r10w,r13w
   140023503:	jne    0x1400235ce
   140023509:	mov    esi,0x80000000
   14002350e:	mov    WORD PTR [rbx],r11w
   140023512:	cmp    r8d,esi
   140023515:	jne    0x14002351c
   140023517:	test   r9d,r9d
   14002351a:	je     0x140023545
   14002351c:	bt     r8d,0x1e
   140023521:	jb     0x140023545
   140023523:	lea    rcx,[rbx+0x4]
   140023527:	lea    r8,[rip+0x1165a]        # 0x140034b88
   14002352e:	mov    edx,0x16
   140023533:	call   0x14000edd8
   140023538:	test   eax,eax
   14002353a:	je     0x1400235c2
   140023540:	jmp    0x140023ec0
   140023545:	test   cx,cx
   140023548:	je     0x140023575
   14002354a:	cmp    r8d,0xc0000000
   140023551:	jne    0x140023575
   140023553:	test   r9d,r9d
   140023556:	jne    0x1400235a5
   140023558:	lea    rcx,[rbx+0x4]
   14002355c:	lea    r8,[rip+0x1162d]        # 0x140034b90
   140023563:	lea    edx,[r9+0x16]
   140023567:	call   0x14000edd8
   14002356c:	test   eax,eax
   14002356e:	je     0x14002359b
   140023570:	jmp    0x140023ed5
   140023575:	cmp    r8d,esi
   140023578:	jne    0x1400235a5
   14002357a:	test   r9d,r9d
   14002357d:	jne    0x1400235a5
   14002357f:	lea    rcx,[rbx+0x4]
   140023583:	lea    r8,[rip+0x1160e]        # 0x140034b98
   14002358a:	lea    edx,[r9+0x16]
   14002358e:	call   0x14000edd8
   140023593:	test   eax,eax
   140023595:	jne    0x140023eea
   14002359b:	mov    eax,0x5
   1400235a0:	mov    BYTE PTR [rbx+0x3],al
   1400235a3:	jmp    0x1400235c6
   1400235a5:	lea    rcx,[rbx+0x4]
   1400235a9:	lea    r8,[rip+0x115f0]        # 0x140034ba0
   1400235b0:	mov    edx,0x16
   1400235b5:	call   0x14000edd8
   1400235ba:	test   eax,eax
   1400235bc:	jne    0x140023eff
   1400235c2:	mov    BYTE PTR [rbx+0x3],0x6
   1400235c6:	mov    r11d,r12d
   1400235c9:	jmp    0x140023e5a
   1400235ce:	movzx  edx,r10w
   1400235d2:	mov    DWORD PTR [rbp-0x17],r9d
   1400235d6:	mov    WORD PTR [rbp-0xf],r10w
   1400235db:	mov    ecx,r8d
   1400235de:	mov    eax,edx
   1400235e0:	lea    r9,[rip+0x19f49]        # 0x14003d530
   1400235e7:	shr    ecx,0x18
   1400235ea:	shr    eax,0x8
   1400235ed:	mov    r15d,0x80000000
   1400235f3:	lea    eax,[rax+rcx*2]
   1400235f6:	mov    r14d,0x5
   1400235fc:	sub    r9,0x60
   140023600:	mov    DWORD PTR [rbp-0x13],r8d
   140023604:	mov    WORD PTR [rbp-0x19],r12w
   140023609:	mov    esi,0xbffd
   14002360e:	imul   ecx,eax,0x4d
   140023611:	imul   eax,edx,0x4d10
   140023617:	add    eax,0xecbced0c
   14002361c:	mov    DWORD PTR [rbp-0x49],r14d
   140023620:	lea    edi,[r15-0x1]
   140023624:	add    ecx,eax
   140023626:	sar    ecx,0x10
   140023629:	movsx  r10d,cx
   14002362d:	mov    DWORD PTR [rbp-0x61],ecx
   140023630:	neg    r10d
   140023633:	je     0x1400239a8
   140023639:	test   r10d,r10d
   14002363c:	jns    0x14002364f
   14002363e:	lea    r9,[rip+0x1a04b]        # 0x14003d690
   140023645:	neg    r10d
   140023648:	sub    r9,0x60
   14002364c:	test   r10d,r10d
   14002364f:	je     0x1400239a8
   140023655:	mov    r8d,DWORD PTR [rbp-0x15]
   140023659:	mov    edx,DWORD PTR [rbp-0x19]
   14002365c:	mov    eax,r10d
   14002365f:	add    r9,0x54
   140023663:	sar    r10d,0x3
   140023667:	mov    DWORD PTR [rbp-0x51],r10d
   14002366b:	mov    QWORD PTR [rbp-0x59],r9
   14002366f:	and    eax,0x7
   140023672:	je     0x140023991
   140023678:	cdqe   
   14002367a:	lea    rcx,[rax+rax*2]
   14002367e:	lea    rsi,[r9+rcx*4]
   140023682:	mov    r9d,0x8000
   140023688:	mov    QWORD PTR [rbp-0x31],rsi
   14002368c:	cmp    WORD PTR [rsi],r9w
   140023690:	jb     0x1400236b7
   140023692:	mov    eax,DWORD PTR [rsi+0x8]
   140023695:	movsd  xmm0,QWORD PTR [rsi]
   140023699:	lea    rsi,[rbp+0x7]
   14002369d:	mov    DWORD PTR [rbp+0xf],eax
   1400236a0:	movsd  QWORD PTR [rbp+0x7],xmm0
   1400236a5:	mov    rax,QWORD PTR [rbp+0x7]
   1400236a9:	shr    rax,0x10
   1400236ad:	mov    QWORD PTR [rbp-0x31],rsi
   1400236b1:	sub    eax,r11d
   1400236b4:	mov    DWORD PTR [rbp+0x9],eax
   1400236b7:	movzx  ecx,WORD PTR [rsi+0xa]
   1400236bb:	movzx  eax,WORD PTR [rbp-0xf]
   1400236bf:	mov    DWORD PTR [rbp-0x65],r12d
   1400236c3:	movzx  ebx,cx
   1400236c6:	and    cx,r13w
   1400236ca:	mov    QWORD PTR [rbp-0x29],0x0
   1400236d2:	xor    bx,ax
   1400236d5:	and    ax,r13w
   1400236d9:	mov    DWORD PTR [rbp-0x21],r12d
   1400236dd:	and    bx,r9w
   1400236e1:	lea    r9d,[rax+rcx*1]
   1400236e5:	mov    WORD PTR [rbp-0x69],bx
   1400236e9:	cmp    ax,r13w
   1400236ed:	jae    0x140023970
   1400236f3:	cmp    cx,r13w
   1400236f7:	jae    0x140023970
   1400236fd:	mov    r13d,0xbffd
   140023703:	cmp    r9w,r13w
   140023707:	ja     0x14002396a
   14002370d:	mov    ebx,0x3fbf
   140023712:	cmp    r9w,bx
   140023716:	ja     0x14002372b
   140023718:	mov    QWORD PTR [rbp-0x15],0x0
   140023720:	mov    r13d,0x7fff
   140023726:	jmp    0x140023984
   14002372b:	test   ax,ax
   14002372e:	jne    0x140023752
   140023730:	add    r9w,r11w
   140023734:	test   DWORD PTR [rbp-0x11],edi
   140023737:	jne    0x140023752
   140023739:	test   r8d,r8d
   14002373c:	jne    0x140023752
   14002373e:	test   edx,edx
   140023740:	jne    0x140023752
   140023742:	mov    WORD PTR [rbp-0xf],r12w
   140023747:	mov    r13d,0x7fff
   14002374d:	jmp    0x14002398d
   140023752:	test   cx,cx
   140023755:	jne    0x14002376b
   140023757:	add    r9w,r11w
   14002375b:	test   DWORD PTR [rsi+0x8],edi
   14002375e:	jne    0x14002376b
   140023760:	cmp    DWORD PTR [rsi+0x4],r12d
   140023764:	jne    0x14002376b
   140023766:	cmp    DWORD PTR [rsi],r12d
   140023769:	je     0x140023718
   14002376b:	mov    edi,r14d
   14002376e:	lea    rdx,[rbp-0x29]
   140023772:	xor    r14d,r14d
   140023775:	mov    r13d,edi
   140023778:	test   edi,edi
   14002377a:	jle    0x1400237db
   14002377c:	lea    eax,[r12+r12*1]
   140023780:	lea    r14,[rbp-0x19]
   140023784:	mov    ebx,r12d
   140023787:	movsxd rcx,eax
   14002378a:	and    ebx,r11d
   14002378d:	lea    r15,[rsi+0x8]
   140023791:	add    r14,rcx
   140023794:	xor    esi,esi
   140023796:	movzx  eax,WORD PTR [r15]
   14002379a:	movzx  ecx,WORD PTR [r14]
   14002379e:	mov    r10d,esi
   1400237a1:	imul   ecx,eax
   1400237a4:	mov    eax,DWORD PTR [rdx]
   1400237a6:	lea    r8d,[rax+rcx*1]
   1400237aa:	cmp    r8d,eax
   1400237ad:	jb     0x1400237b4
   1400237af:	cmp    r8d,ecx
   1400237b2:	jae    0x1400237b7
   1400237b4:	mov    r10d,r11d
   1400237b7:	mov    DWORD PTR [rdx],r8d
   1400237ba:	test   r10d,r10d
   1400237bd:	je     0x1400237c4
   1400237bf:	add    WORD PTR [rdx+0x4],r11w
   1400237c4:	sub    r13d,r11d
   1400237c7:	add    r14,0x2
   1400237cb:	sub    r15,0x2
   1400237cf:	test   r13d,r13d
   1400237d2:	jg     0x140023796
   1400237d4:	mov    rsi,QWORD PTR [rbp-0x31]
   1400237d8:	xor    r14d,r14d
   1400237db:	sub    edi,r11d
   1400237de:	add    rdx,0x2
   1400237e2:	add    r12d,r11d
   1400237e5:	test   edi,edi
   1400237e7:	jg     0x140023775
   1400237e9:	mov    r10d,DWORD PTR [rbp-0x21]
   1400237ed:	mov    r8d,DWORD PTR [rbp-0x29]
   1400237f1:	mov    eax,0xc002
   1400237f6:	add    r9w,ax
   1400237fa:	xor    r12d,r12d
   1400237fd:	mov    ebx,0xffff
   140023802:	mov    r15d,0x80000000
   140023808:	test   r9w,r9w
   14002380c:	jle    0x14002384a
   14002380e:	test   r15d,r10d
   140023811:	jne    0x140023844
   140023813:	mov    edi,DWORD PTR [rbp-0x25]
   140023816:	mov    edx,r8d
   140023819:	add    r10d,r10d
   14002381c:	shr    edx,0x1f
   14002381f:	add    r8d,r8d
   140023822:	mov    ecx,edi
   140023824:	shr    ecx,0x1f
   140023827:	lea    eax,[rdi+rdi*1]
   14002382a:	add    r9w,bx
   14002382e:	or     eax,edx
   140023830:	or     r10d,ecx
   140023833:	mov    DWORD PTR [rbp-0x29],r8d
   140023837:	mov    DWORD PTR [rbp-0x25],eax
   14002383a:	mov    DWORD PTR [rbp-0x21],r10d
   14002383e:	test   r9w,r9w
   140023842:	jg     0x14002380e
   140023844:	test   r9w,r9w
   140023848:	jg     0x1400238b7
   14002384a:	add    r9w,bx
   14002384e:	jns    0x1400238b7
   140023850:	movzx  eax,r9w
   140023854:	neg    ax
   140023857:	movzx  edx,ax
   14002385a:	add    r9w,dx
   14002385e:	mov    WORD PTR [rbp-0x5d],r9w
   140023863:	mov    r9d,DWORD PTR [rbp-0x65]
   140023867:	test   BYTE PTR [rbp-0x29],r11b
   14002386b:	je     0x140023870
   14002386d:	add    r9d,r11d
   140023870:	mov    edi,DWORD PTR [rbp-0x25]
   140023873:	mov    eax,r10d
   140023876:	shr    r8d,1
   140023879:	mov    ecx,edi
   14002387b:	shl    eax,0x1f
   14002387e:	shr    edi,1
   140023880:	shl    ecx,0x1f
   140023883:	or     edi,eax
   140023885:	shr    r10d,1
   140023888:	or     r8d,ecx
   14002388b:	mov    DWORD PTR [rbp-0x25],edi
   14002388e:	mov    DWORD PTR [rbp-0x29],r8d
   140023892:	sub    rdx,r11
   140023895:	jne    0x140023867
   140023897:	test   r9d,r9d
   14002389a:	movzx  r9d,WORD PTR [rbp-0x5d]
   14002389f:	mov    DWORD PTR [rbp-0x21],r10d
   1400238a3:	je     0x1400238b7
   1400238a5:	movzx  eax,r8w
   1400238a9:	or     ax,r11w
   1400238ad:	mov    WORD PTR [rbp-0x29],ax
   1400238b1:	mov    r8d,DWORD PTR [rbp-0x29]
   1400238b5:	jmp    0x1400238bb
   1400238b7:	movzx  eax,WORD PTR [rbp-0x29]
   1400238bb:	mov    ecx,0x8000
   1400238c0:	cmp    ax,cx
   1400238c3:	ja     0x1400238d5
   1400238c5:	and    r8d,0x1ffff
   1400238cc:	cmp    r8d,0x18000
   1400238d3:	jne    0x14002391d
   1400238d5:	mov    eax,DWORD PTR [rbp-0x27]
   1400238d8:	or     edx,0xffffffff
   1400238db:	cmp    eax,edx
   1400238dd:	jne    0x140023917
   1400238df:	mov    eax,DWORD PTR [rbp-0x23]
   1400238e2:	mov    DWORD PTR [rbp-0x27],r12d
   1400238e6:	cmp    eax,edx
   1400238e8:	jne    0x14002390b
   1400238ea:	movzx  eax,WORD PTR [rbp-0x1f]
   1400238ee:	mov    DWORD PTR [rbp-0x23],r12d
   1400238f2:	cmp    ax,bx
   1400238f5:	jne    0x140023901
   1400238f7:	mov    WORD PTR [rbp-0x1f],cx
   1400238fb:	add    r9w,r11w
   1400238ff:	jmp    0x140023911
   140023901:	add    ax,r11w
   140023905:	mov    WORD PTR [rbp-0x1f],ax
   140023909:	jmp    0x140023911
   14002390b:	add    eax,r11d
   14002390e:	mov    DWORD PTR [rbp-0x23],eax
   140023911:	mov    r10d,DWORD PTR [rbp-0x21]
   140023915:	jmp    0x14002391d
   140023917:	add    eax,r11d
   14002391a:	mov    DWORD PTR [rbp-0x27],eax
   14002391d:	mov    r13d,0x7fff
   140023923:	mov    r14d,0x5
   140023929:	mov    edi,0x7fffffff
   14002392e:	cmp    r9w,r13w
   140023932:	jb     0x140023941
   140023934:	movzx  eax,WORD PTR [rbp-0x69]
   140023938:	mov    r10d,DWORD PTR [rbp-0x51]
   14002393c:	neg    ax
   14002393f:	jmp    0x140023973
   140023941:	movzx  eax,WORD PTR [rbp-0x27]
   140023945:	or     r9w,WORD PTR [rbp-0x69]
   14002394a:	mov    DWORD PTR [rbp-0x13],r10d
   14002394e:	mov    r10d,DWORD PTR [rbp-0x51]
   140023952:	mov    WORD PTR [rbp-0x19],ax
   140023956:	mov    eax,DWORD PTR [rbp-0x25]
   140023959:	mov    DWORD PTR [rbp-0x17],eax
   14002395c:	mov    r8d,DWORD PTR [rbp-0x15]
   140023960:	mov    edx,DWORD PTR [rbp-0x19]
   140023963:	mov    WORD PTR [rbp-0xf],r9w
   140023968:	jmp    0x14002398d
   14002396a:	mov    r13d,0x7fff
   140023970:	neg    bx
   140023973:	sbb    eax,eax
   140023975:	mov    DWORD PTR [rbp-0x15],r12d
   140023979:	and    eax,r15d
   14002397c:	add    eax,0x7fff8000
   140023981:	mov    DWORD PTR [rbp-0x11],eax
   140023984:	mov    edx,r12d
   140023987:	mov    r8d,r12d
   14002398a:	mov    DWORD PTR [rbp-0x19],edx
   14002398d:	mov    r9,QWORD PTR [rbp-0x59]
   140023991:	test   r10d,r10d
   140023994:	jne    0x14002365c
   14002399a:	mov    rbx,QWORD PTR [rbp-0x41]
   14002399e:	mov    ecx,DWORD PTR [rbp-0x61]
   1400239a1:	mov    esi,0xbffd
   1400239a6:	jmp    0x1400239af
   1400239a8:	mov    r8d,DWORD PTR [rbp-0x15]
   1400239ac:	mov    edx,DWORD PTR [rbp-0x19]
   1400239af:	mov    eax,DWORD PTR [rbp-0x11]
   1400239b2:	mov    r9d,0x3fff
   1400239b8:	shr    eax,0x10
   1400239bb:	cmp    ax,r9w
   1400239bf:	jb     0x140023c7b
   1400239c5:	add    cx,r11w
   1400239c9:	mov    r9d,0x8000
   1400239cf:	mov    DWORD PTR [rbp-0x65],r12d
   1400239d3:	lea    r10d,[r9-0x1]
   1400239d7:	mov    DWORD PTR [rbp-0x61],ecx
   1400239da:	movzx  ecx,WORD PTR [rbp+0x1]
   1400239de:	movzx  r13d,cx
   1400239e2:	and    cx,r10w
   1400239e6:	mov    QWORD PTR [rbp-0x29],0x0
   1400239ee:	xor    r13w,ax
   1400239f2:	and    ax,r10w
   1400239f6:	mov    DWORD PTR [rbp-0x21],r12d
   1400239fa:	and    r13w,r9w
   1400239fe:	lea    r9d,[rax+rcx*1]
   140023a02:	cmp    ax,r10w
   140023a06:	jae    0x140023c64
   140023a0c:	cmp    cx,r10w
   140023a10:	jae    0x140023c64
   140023a16:	cmp    r9w,si
   140023a1a:	ja     0x140023c64
   140023a20:	mov    r10d,0x3fbf
   140023a26:	cmp    r9w,r10w
   140023a2a:	ja     0x140023a35
   140023a2c:	mov    DWORD PTR [rbp-0x11],r12d
   140023a30:	jmp    0x140023c75
   140023a35:	test   ax,ax
   140023a38:	jne    0x140023a56
   140023a3a:	add    r9w,r11w
   140023a3e:	test   DWORD PTR [rbp-0x11],edi
   140023a41:	jne    0x140023a56
   140023a43:	test   r8d,r8d
   140023a46:	jne    0x140023a56
   140023a48:	test   edx,edx
   140023a4a:	jne    0x140023a56
   140023a4c:	mov    WORD PTR [rbp-0xf],r12w
   140023a51:	jmp    0x140023c7b
   140023a56:	test   cx,cx
   140023a59:	jne    0x140023a70
   140023a5b:	add    r9w,r11w
   140023a5f:	test   DWORD PTR [rbp-0x1],edi
   140023a62:	jne    0x140023a70
   140023a64:	cmp    DWORD PTR [rbp-0x5],r12d
   140023a68:	jne    0x140023a70
   140023a6a:	cmp    DWORD PTR [rbp-0x9],r12d
   140023a6e:	je     0x140023a2c
   140023a70:	mov    edi,r12d
   140023a73:	lea    rdx,[rbp-0x29]
   140023a77:	mov    esi,r14d
   140023a7a:	test   r14d,r14d
   140023a7d:	jle    0x140023adc
   140023a7f:	lea    eax,[rdi+rdi*1]
   140023a82:	lea    r15,[rbp-0x19]
   140023a86:	mov    r12d,edi
   140023a89:	movsxd rcx,eax
   140023a8c:	and    r12d,r11d
   140023a8f:	lea    r14,[rbp-0x1]
   140023a93:	add    r15,rcx
   140023a96:	xor    ebx,ebx
   140023a98:	movzx  eax,WORD PTR [r15]
   140023a9c:	movzx  ecx,WORD PTR [r14]
   140023aa0:	mov    r8d,ebx
   140023aa3:	imul   ecx,eax
   140023aa6:	mov    eax,DWORD PTR [rdx]
   140023aa8:	lea    r10d,[rax+rcx*1]
   140023aac:	cmp    r10d,eax
   140023aaf:	jb     0x140023ab6
   140023ab1:	cmp    r10d,ecx
   140023ab4:	jae    0x140023ab9
   140023ab6:	mov    r8d,r11d
   140023ab9:	mov    DWORD PTR [rdx],r10d
   140023abc:	test   r8d,r8d
   140023abf:	je     0x140023ac6
   140023ac1:	add    WORD PTR [rdx+0x4],r11w
   140023ac6:	sub    esi,r11d
   140023ac9:	add    r15,0x2
   140023acd:	sub    r14,0x2
   140023ad1:	test   esi,esi
   140023ad3:	jg     0x140023a98
   140023ad5:	mov    r14d,DWORD PTR [rbp-0x49]
   140023ad9:	xor    r12d,r12d
   140023adc:	sub    r14d,r11d
   140023adf:	add    rdx,0x2
   140023ae3:	add    edi,r11d
   140023ae6:	mov    DWORD PTR [rbp-0x49],r14d
   140023aea:	test   r14d,r14d
   140023aed:	jg     0x140023a77
   140023aef:	mov    rbx,QWORD PTR [rbp-0x41]
   140023af3:	mov    r8d,DWORD PTR [rbp-0x21]
   140023af7:	mov    r10d,DWORD PTR [rbp-0x29]
   140023afb:	mov    eax,0xc002
   140023b00:	mov    esi,0x80000000
   140023b05:	mov    r14d,0xffff
   140023b0b:	add    r9w,ax
   140023b0f:	test   r9w,r9w
   140023b13:	jle    0x140023b51
   140023b15:	test   esi,r8d
   140023b18:	jne    0x140023b4b
   140023b1a:	mov    edi,DWORD PTR [rbp-0x25]
   140023b1d:	mov    edx,r10d
   140023b20:	add    r8d,r8d
   140023b23:	shr    edx,0x1f
   140023b26:	add    r10d,r10d
   140023b29:	mov    ecx,edi
   140023b2b:	shr    ecx,0x1f
   140023b2e:	lea    eax,[rdi+rdi*1]
   140023b31:	add    r9w,r14w
   140023b35:	or     eax,edx
   140023b37:	or     r8d,ecx
   140023b3a:	mov    DWORD PTR [rbp-0x29],r10d
   140023b3e:	mov    DWORD PTR [rbp-0x25],eax
   140023b41:	mov    DWORD PTR [rbp-0x21],r8d
   140023b45:	test   r9w,r9w
   140023b49:	jg     0x140023b15
   140023b4b:	test   r9w,r9w
   140023b4f:	jg     0x140023bb6
   140023b51:	add    r9w,r14w
   140023b55:	jns    0x140023bb6
   140023b57:	mov    ebx,DWORD PTR [rbp-0x65]
   140023b5a:	movzx  eax,r9w
   140023b5e:	neg    ax
   140023b61:	movzx  edx,ax
   140023b64:	add    r9w,dx
   140023b68:	test   BYTE PTR [rbp-0x29],r11b
   140023b6c:	je     0x140023b71
   140023b6e:	add    ebx,r11d
   140023b71:	mov    edi,DWORD PTR [rbp-0x25]
   140023b74:	mov    eax,r8d
   140023b77:	shr    r10d,1
   140023b7a:	mov    ecx,edi
   140023b7c:	shl    eax,0x1f
   140023b7f:	shr    edi,1
   140023b81:	shl    ecx,0x1f
   140023b84:	or     edi,eax
   140023b86:	shr    r8d,1
   140023b89:	or     r10d,ecx
   140023b8c:	mov    DWORD PTR [rbp-0x25],edi
   140023b8f:	mov    DWORD PTR [rbp-0x29],r10d
   140023b93:	sub    rdx,r11
   140023b96:	jne    0x140023b68
   140023b98:	test   ebx,ebx
   140023b9a:	mov    rbx,QWORD PTR [rbp-0x41]
   140023b9e:	mov    DWORD PTR [rbp-0x21],r8d
   140023ba2:	je     0x140023bb6
   140023ba4:	movzx  eax,r10w
   140023ba8:	or     ax,r11w
   140023bac:	mov    WORD PTR [rbp-0x29],ax
   140023bb0:	mov    r10d,DWORD PTR [rbp-0x29]
   140023bb4:	jmp    0x140023bba
   140023bb6:	movzx  eax,WORD PTR [rbp-0x29]
   140023bba:	mov    ecx,0x8000
   140023bbf:	cmp    ax,cx
   140023bc2:	ja     0x140023bd4
   140023bc4:	and    r10d,0x1ffff
   140023bcb:	cmp    r10d,0x18000
   140023bd2:	jne    0x140023c1d
   140023bd4:	mov    eax,DWORD PTR [rbp-0x27]
   140023bd7:	or     edx,0xffffffff
   140023bda:	cmp    eax,edx
   140023bdc:	jne    0x140023c17
   140023bde:	mov    eax,DWORD PTR [rbp-0x23]
   140023be1:	mov    DWORD PTR [rbp-0x27],r12d
   140023be5:	cmp    eax,edx
   140023be7:	jne    0x140023c0b
   140023be9:	movzx  eax,WORD PTR [rbp-0x1f]
   140023bed:	mov    DWORD PTR [rbp-0x23],r12d
   140023bf1:	cmp    ax,r14w
   140023bf5:	jne    0x140023c01
   140023bf7:	mov    WORD PTR [rbp-0x1f],cx
   140023bfb:	add    r9w,r11w
   140023bff:	jmp    0x140023c11
   140023c01:	add    ax,r11w
   140023c05:	mov    WORD PTR [rbp-0x1f],ax
   140023c09:	jmp    0x140023c11
   140023c0b:	add    eax,r11d
   140023c0e:	mov    DWORD PTR [rbp-0x23],eax
   140023c11:	mov    r8d,DWORD PTR [rbp-0x21]
   140023c15:	jmp    0x140023c1d
   140023c17:	add    eax,r11d
   140023c1a:	mov    DWORD PTR [rbp-0x27],eax
   140023c1d:	mov    eax,0x7fff
   140023c22:	cmp    r9w,ax
   140023c26:	jb     0x140023c40
   140023c28:	neg    r13w
   140023c2c:	mov    r8d,r12d
   140023c2f:	mov    edx,r12d
   140023c32:	sbb    eax,eax
   140023c34:	and    eax,esi
   140023c36:	add    eax,0x7fff8000
   140023c3b:	mov    DWORD PTR [rbp-0x11],eax
   140023c3e:	jmp    0x140023c80
   140023c40:	movzx  eax,WORD PTR [rbp-0x27]
   140023c44:	or     r9w,r13w
   140023c48:	mov    DWORD PTR [rbp-0x13],r8d
   140023c4c:	mov    WORD PTR [rbp-0x19],ax
   140023c50:	mov    eax,DWORD PTR [rbp-0x25]
   140023c53:	mov    WORD PTR [rbp-0xf],r9w
   140023c58:	mov    DWORD PTR [rbp-0x17],eax
   140023c5b:	mov    r8d,DWORD PTR [rbp-0x15]
   140023c5f:	mov    edx,DWORD PTR [rbp-0x19]
   140023c62:	jmp    0x140023c80
   140023c64:	neg    r13w
   140023c68:	sbb    eax,eax
   140023c6a:	and    eax,r15d
   140023c6d:	add    eax,0x7fff8000
   140023c72:	mov    DWORD PTR [rbp-0x11],eax
   140023c75:	mov    edx,r12d
   140023c78:	mov    r8d,r12d
   140023c7b:	mov    ecx,0x8000
   140023c80:	mov    eax,DWORD PTR [rbp-0x61]
   140023c83:	mov    r14d,DWORD PTR [rbp-0x4d]
   140023c87:	mov    WORD PTR [rbx],ax
   140023c8a:	test   BYTE PTR [rbp-0x39],r11b
   140023c8e:	je     0x140023cad
   140023c90:	cwde   
   140023c91:	add    r14d,eax
   140023c94:	test   r14d,r14d
   140023c97:	jg     0x140023cad
   140023c99:	cmp    WORD PTR [rbp-0x67],cx
   140023c9d:	mov    eax,0x20
   140023ca2:	lea    ecx,[rax+0xd]
   140023ca5:	cmove  eax,ecx
   140023ca8:	jmp    0x1400234e9
   140023cad:	mov    r9d,DWORD PTR [rbp-0x11]
   140023cb1:	mov    eax,0x15
   140023cb6:	mov    WORD PTR [rbp-0xf],r12w
   140023cbb:	mov    esi,DWORD PTR [rbp-0x11]
   140023cbe:	cmp    r14d,eax
   140023cc1:	lea    r10d,[rax-0xd]
   140023cc5:	cmovg  r14d,eax
   140023cc9:	shr    r9d,0x10
   140023ccd:	sub    r9d,0x3ffe
   140023cd4:	mov    ecx,r8d
   140023cd7:	mov    eax,edx
   140023cd9:	add    esi,esi
   140023cdb:	add    r8d,r8d
   140023cde:	shr    eax,0x1f
   140023ce1:	shr    ecx,0x1f
   140023ce4:	or     r8d,eax
   140023ce7:	or     esi,ecx
   140023ce9:	add    edx,edx
   140023ceb:	sub    r10,r11
   140023cee:	jne    0x140023cd4
   140023cf0:	mov    DWORD PTR [rbp-0x15],r8d
   140023cf4:	mov    DWORD PTR [rbp-0x19],edx
   140023cf7:	test   r9d,r9d
   140023cfa:	jns    0x140023d2e
   140023cfc:	neg    r9d
   140023cff:	movzx  r10d,r9b
   140023d03:	test   r10d,r10d
   140023d06:	jle    0x140023d2e
   140023d08:	mov    ecx,r8d
   140023d0b:	mov    eax,esi
   140023d0d:	shr    edx,1
   140023d0f:	shr    r8d,1
   140023d12:	shl    eax,0x1f
   140023d15:	shl    ecx,0x1f
   140023d18:	sub    r10d,r11d
   140023d1b:	shr    esi,1
   140023d1d:	or     r8d,eax
   140023d20:	or     edx,ecx
   140023d22:	test   r10d,r10d
   140023d25:	jg     0x140023d08
   140023d27:	mov    DWORD PTR [rbp-0x15],r8d
   140023d2b:	mov    DWORD PTR [rbp-0x19],edx
   140023d2e:	lea    r15d,[r14+0x1]
   140023d32:	lea    rdi,[rbx+0x4]
   140023d36:	mov    r10,rdi
   140023d39:	test   r15d,r15d
   140023d3c:	jle    0x140023e16
   140023d42:	movsd  xmm0,QWORD PTR [rbp-0x19]
   140023d47:	mov    ecx,r8d
   140023d4a:	add    r8d,r8d
   140023d4d:	shr    ecx,0x1f
   140023d50:	mov    eax,edx
   140023d52:	add    edx,edx
   140023d54:	shr    eax,0x1f
   140023d57:	lea    r9d,[rsi+rsi*1]
   140023d5b:	movsd  QWORD PTR [rbp+0x7],xmm0
   140023d60:	or     r8d,eax
   140023d63:	or     r9d,ecx
   140023d66:	mov    eax,edx
   140023d68:	mov    ecx,r8d
   140023d6b:	shr    eax,0x1f
   140023d6e:	add    r8d,r8d
   140023d71:	or     r8d,eax
   140023d74:	mov    eax,DWORD PTR [rbp+0x7]
   140023d77:	add    edx,edx
   140023d79:	shr    ecx,0x1f
   140023d7c:	add    r9d,r9d
   140023d7f:	lea    r12d,[rax+rdx*1]
   140023d83:	or     r9d,ecx
   140023d86:	cmp    r12d,edx
   140023d89:	jb     0x140023d90
   140023d8b:	cmp    r12d,eax
   140023d8e:	jae    0x140023db1
   140023d90:	xor    r14d,r14d
   140023d93:	lea    eax,[r8+0x1]
   140023d97:	mov    ecx,r14d
   140023d9a:	cmp    eax,r8d
   140023d9d:	jb     0x140023da4
   140023d9f:	cmp    eax,r11d
   140023da2:	jae    0x140023da7
   140023da4:	mov    ecx,r11d
   140023da7:	mov    r8d,eax
   140023daa:	test   ecx,ecx
   140023dac:	je     0x140023db1
   140023dae:	add    r9d,r11d
   140023db1:	mov    rax,QWORD PTR [rbp+0x7]
   140023db5:	shr    rax,0x20
   140023db9:	lea    r14d,[r8+rax*1]
   140023dbd:	cmp    r14d,r8d
   140023dc0:	jb     0x140023dc7
   140023dc2:	cmp    r14d,eax
   140023dc5:	jae    0x140023dca
   140023dc7:	add    r9d,r11d
   140023dca:	mov    eax,r12d
   140023dcd:	add    r9d,esi
   140023dd0:	lea    edx,[r12+r12*1]
   140023dd4:	shr    eax,0x1f
   140023dd7:	xor    r12d,r12d
   140023dda:	lea    r8d,[r14+r14*1]
   140023dde:	or     r8d,eax
   140023de1:	mov    ecx,r14d
   140023de4:	lea    eax,[r9+r9*1]
   140023de8:	shr    ecx,0x1f
   140023deb:	sub    r15d,r11d
   140023dee:	mov    DWORD PTR [rbp-0x19],edx
   140023df1:	or     eax,ecx
   140023df3:	mov    DWORD PTR [rbp-0x15],r8d
   140023df7:	mov    DWORD PTR [rbp-0x11],eax
   140023dfa:	shr    eax,0x18
   140023dfd:	mov    BYTE PTR [rbp-0xe],r12b
   140023e01:	add    al,0x30
   140023e03:	mov    BYTE PTR [r10],al
   140023e06:	add    r10,r11
   140023e09:	test   r15d,r15d
   140023e0c:	jle    0x140023e16
   140023e0e:	mov    esi,DWORD PTR [rbp-0x11]
   140023e11:	jmp    0x140023d42
   140023e16:	sub    r10,r11
   140023e19:	mov    al,BYTE PTR [r10]
   140023e1c:	sub    r10,r11
   140023e1f:	cmp    al,0x35
   140023e21:	jl     0x140023e8d
   140023e23:	jmp    0x140023e32
   140023e25:	cmp    BYTE PTR [r10],0x39
   140023e29:	jne    0x140023e37
   140023e2b:	mov    BYTE PTR [r10],0x30
   140023e2f:	sub    r10,r11
   140023e32:	cmp    r10,rdi
   140023e35:	jae    0x140023e25
   140023e37:	cmp    r10,rdi
   140023e3a:	jae    0x140023e43
   140023e3c:	add    r10,r11
   140023e3f:	add    WORD PTR [rbx],r11w
   140023e43:	add    BYTE PTR [r10],r11b
   140023e46:	sub    r10b,bl
   140023e49:	sub    r10b,0x3
   140023e4d:	movsx  rax,r10b
   140023e51:	mov    BYTE PTR [rbx+0x3],r10b
   140023e55:	mov    BYTE PTR [rax+rbx*1+0x4],r12b
   140023e5a:	mov    eax,r11d
   140023e5d:	mov    rcx,QWORD PTR [rbp+0x17]
   140023e61:	xor    rcx,rsp
   140023e64:	call   0x14000c380
   140023e69:	mov    rbx,QWORD PTR [rsp+0x108]
   140023e71:	add    rsp,0xc0
   140023e78:	pop    r15
   140023e7a:	pop    r14
   140023e7c:	pop    r13
   140023e7e:	pop    r12
   140023e80:	pop    rdi
   140023e81:	pop    rsi
   140023e82:	pop    rbp
   140023e83:	ret    
   140023e84:	cmp    BYTE PTR [r10],0x30
   140023e88:	jne    0x140023e92
   140023e8a:	sub    r10,r11
   140023e8d:	cmp    r10,rdi
   140023e90:	jae    0x140023e84
   140023e92:	cmp    r10,rdi
   140023e95:	jae    0x140023e46
   140023e97:	mov    eax,0x20
   140023e9c:	mov    r9d,0x8000
   140023ea2:	mov    WORD PTR [rbx],r12w
   140023ea6:	cmp    WORD PTR [rbp-0x67],r9w
   140023eab:	lea    ecx,[rax+0xd]
   140023eae:	mov    BYTE PTR [rbx+0x3],r11b
   140023eb2:	cmove  eax,ecx
   140023eb5:	mov    BYTE PTR [rbx+0x2],al
   140023eb8:	mov    BYTE PTR [rdi],0x30
   140023ebb:	jmp    0x1400234f6
   140023ec0:	xor    r9d,r9d
   140023ec3:	xor    r8d,r8d
   140023ec6:	xor    edx,edx
   140023ec8:	xor    ecx,ecx
   140023eca:	mov    QWORD PTR [rsp+0x20],r12
   140023ecf:	call   0x140008da8
   140023ed4:	int3   
   140023ed5:	xor    r9d,r9d
   140023ed8:	xor    r8d,r8d
   140023edb:	xor    edx,edx
   140023edd:	xor    ecx,ecx
   140023edf:	mov    QWORD PTR [rsp+0x20],r12
   140023ee4:	call   0x140008da8
   140023ee9:	int3   
   140023eea:	xor    r9d,r9d
   140023eed:	xor    r8d,r8d
   140023ef0:	xor    edx,edx
   140023ef2:	xor    ecx,ecx
   140023ef4:	mov    QWORD PTR [rsp+0x20],r12
   140023ef9:	call   0x140008da8
   140023efe:	int3   
   140023eff:	xor    r9d,r9d
   140023f02:	xor    r8d,r8d
   140023f05:	xor    edx,edx
   140023f07:	xor    ecx,ecx
   140023f09:	mov    QWORD PTR [rsp+0x20],r12
   140023f0e:	call   0x140008da8
   140023f13:	int3   
   140023f14:	mov    eax,DWORD PTR [rcx]
   140023f16:	mov    r10d,DWORD PTR [rdx]
   140023f19:	xor    r9d,r9d
   140023f1c:	lea    r8d,[rax+r10*1]
   140023f20:	mov    r11,rdx
   140023f23:	cmp    r8d,eax
   140023f26:	jb     0x140023f2d
   140023f28:	cmp    r8d,r10d
   140023f2b:	jae    0x140023f33
   140023f2d:	mov    r9d,0x1
   140023f33:	mov    DWORD PTR [rcx],r8d
   140023f36:	test   r9d,r9d
   140023f39:	je     0x140023f5e
   140023f3b:	mov    eax,DWORD PTR [rcx+0x4]
   140023f3e:	xor    r8d,r8d
   140023f41:	lea    edx,[rax+0x1]
   140023f44:	cmp    edx,eax
   140023f46:	jb     0x140023f4d
   140023f48:	cmp    edx,0x1
   140023f4b:	jae    0x140023f53
   140023f4d:	mov    r8d,0x1
   140023f53:	mov    DWORD PTR [rcx+0x4],edx
   140023f56:	test   r8d,r8d
   140023f59:	je     0x140023f5e
   140023f5b:	inc    DWORD PTR [rcx+0x8]
   140023f5e:	mov    eax,DWORD PTR [rcx+0x4]
   140023f61:	mov    r9d,DWORD PTR [r11+0x4]
   140023f65:	xor    r8d,r8d
   140023f68:	lea    edx,[rax+r9*1]
   140023f6c:	cmp    edx,eax
   140023f6e:	jb     0x140023f75
   140023f70:	cmp    edx,r9d
   140023f73:	jae    0x140023f7b
   140023f75:	mov    r8d,0x1
   140023f7b:	mov    DWORD PTR [rcx+0x4],edx
   140023f7e:	test   r8d,r8d
   140023f81:	je     0x140023f86
   140023f83:	inc    DWORD PTR [rcx+0x8]
   140023f86:	mov    eax,DWORD PTR [r11+0x8]
   140023f8a:	add    DWORD PTR [rcx+0x8],eax
   140023f8d:	ret    
   140023f8e:	int3   
   140023f8f:	int3   
   140023f90:	mov    QWORD PTR [rsp+0x18],rbx
   140023f95:	mov    DWORD PTR [rsp+0x8],ecx
   140023f99:	push   rsi
   140023f9a:	push   rdi
   140023f9b:	push   r14
   140023f9d:	sub    rsp,0x20
   140023fa1:	movsxd rdi,ecx
   140023fa4:	cmp    edi,0xfffffffe
   140023fa7:	jne    0x140023fb9
   140023fa9:	call   0x140009cb4
   140023fae:	mov    DWORD PTR [rax],0x9
   140023fb4:	jmp    0x140024056
   140023fb9:	test   ecx,ecx
   140023fbb:	js     0x140024046
   140023fc1:	cmp    edi,DWORD PTR [rip+0x1c121]        # 0x1400400e8
   140023fc7:	jae    0x140024046
   140023fc9:	mov    rax,rdi
   140023fcc:	mov    rbx,rdi
   140023fcf:	sar    rbx,0x5
   140023fd3:	lea    r14,[rip+0x19d36]        # 0x14003dd10
   140023fda:	and    eax,0x1f
   140023fdd:	imul   rsi,rax,0x58
   140023fe1:	mov    rax,QWORD PTR [r14+rbx*8]
   140023fe5:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   140023fea:	and    ecx,0x1
   140023fed:	je     0x140024046
   140023fef:	mov    ecx,edi
   140023ff1:	call   0x14001d088
   140023ff6:	nop
   140023ff7:	mov    rax,QWORD PTR [r14+rbx*8]
   140023ffb:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140024000:	je     0x14002402d
   140024002:	mov    ecx,edi
   140024004:	call   0x14001d3c4
   140024009:	mov    rcx,rax
   14002400c:	call   QWORD PTR [rip+0x7ffe]        # 0x14002c010
   140024012:	test   eax,eax
   140024014:	jne    0x140024020
   140024016:	call   QWORD PTR [rip+0x8134]        # 0x14002c150
   14002401c:	mov    ebx,eax
   14002401e:	jmp    0x140024022
   140024020:	xor    ebx,ebx
   140024022:	test   ebx,ebx
   140024024:	je     0x14002403b
   140024026:	call   0x140009c44
   14002402b:	mov    DWORD PTR [rax],ebx
   14002402d:	call   0x140009cb4
   140024032:	mov    DWORD PTR [rax],0x9
   140024038:	or     ebx,0xffffffff
   14002403b:	mov    ecx,edi
   14002403d:	call   0x14001d5e4
   140024042:	mov    eax,ebx
   140024044:	jmp    0x140024059
   140024046:	call   0x140009cb4
   14002404b:	mov    DWORD PTR [rax],0x9
   140024051:	call   0x140008d58
   140024056:	or     eax,0xffffffff
   140024059:	mov    rbx,QWORD PTR [rsp+0x50]
   14002405e:	add    rsp,0x20
   140024062:	pop    r14
   140024064:	pop    rdi
   140024065:	pop    rsi
   140024066:	ret    
   140024067:	int3   
   140024068:	mov    QWORD PTR [rsp+0x8],rbx
   14002406d:	push   rdi
   14002406e:	sub    rsp,0x20
   140024072:	or     edi,0xffffffff
   140024075:	mov    rbx,rcx
   140024078:	test   rcx,rcx
   14002407b:	jne    0x140024091
   14002407d:	call   0x140009cb4
   140024082:	mov    DWORD PTR [rax],0x16
   140024088:	call   0x140008d58
   14002408d:	or     eax,edi
   14002408f:	jmp    0x1400240d7
   140024091:	test   BYTE PTR [rcx+0x18],0x83
   140024095:	je     0x1400240d1
   140024097:	call   0x14001ce2c
   14002409c:	mov    rcx,rbx
   14002409f:	mov    edi,eax
   1400240a1:	call   0x1400286f4
   1400240a6:	mov    rcx,rbx
   1400240a9:	call   0x140010f18
   1400240ae:	mov    ecx,eax
   1400240b0:	call   0x140028574
   1400240b5:	test   eax,eax
   1400240b7:	jns    0x1400240be
   1400240b9:	or     edi,0xffffffff
   1400240bc:	jmp    0x1400240d1
   1400240be:	mov    rcx,QWORD PTR [rbx+0x28]
   1400240c2:	test   rcx,rcx
   1400240c5:	je     0x1400240d1
   1400240c7:	call   0x140007dc0
   1400240cc:	and    QWORD PTR [rbx+0x28],0x0
   1400240d1:	and    DWORD PTR [rbx+0x18],0x0
   1400240d5:	mov    eax,edi
   1400240d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400240dc:	add    rsp,0x20
   1400240e0:	pop    rdi
   1400240e1:	ret    
   1400240e2:	int3   
   1400240e3:	int3   
   1400240e4:	mov    QWORD PTR [rsp+0x10],rbx
   1400240e9:	mov    QWORD PTR [rsp+0x8],rcx
   1400240ee:	push   rdi
   1400240ef:	sub    rsp,0x20
   1400240f3:	mov    rbx,rcx
   1400240f6:	or     edi,0xffffffff
   1400240f9:	xor    eax,eax
   1400240fb:	test   rcx,rcx
   1400240fe:	setne  al
   140024101:	test   eax,eax
   140024103:	jne    0x140024119
   140024105:	call   0x140009cb4
   14002410a:	mov    DWORD PTR [rax],0x16
   140024110:	call   0x140008d58
   140024115:	mov    eax,edi
   140024117:	jmp    0x14002413f
   140024119:	test   BYTE PTR [rcx+0x18],0x40
   14002411d:	je     0x140024125
   14002411f:	and    DWORD PTR [rcx+0x18],0x0
   140024123:	jmp    0x140024115
   140024125:	call   0x140010e0c
   14002412a:	nop
   14002412b:	mov    rcx,rbx
   14002412e:	call   0x140024068
   140024133:	mov    edi,eax
   140024135:	mov    rcx,rbx
   140024138:	call   0x140010ea8
   14002413d:	jmp    0x140024115
   14002413f:	mov    rbx,QWORD PTR [rsp+0x38]
   140024144:	add    rsp,0x20
   140024148:	pop    rdi
   140024149:	ret    
   14002414a:	int3   
   14002414b:	int3   
   14002414c:	sub    rsp,0x28
   140024150:	mov    rcx,QWORD PTR [rip+0x193d1]        # 0x14003d528
   140024157:	lea    rax,[rcx+0x2]
   14002415b:	cmp    rax,0x1
   14002415f:	jbe    0x140024167
   140024161:	call   QWORD PTR [rip+0x8059]        # 0x14002c1c0
   140024167:	add    rsp,0x28
   14002416b:	ret    
   14002416c:	sub    rsp,0x48
   140024170:	and    QWORD PTR [rsp+0x30],0x0
   140024176:	and    DWORD PTR [rsp+0x28],0x0
   14002417b:	mov    r8d,0x3
   140024181:	lea    rcx,[rip+0x10a20]        # 0x140034ba8
   140024188:	xor    r9d,r9d
   14002418b:	mov    edx,0x40000000
   140024190:	mov    DWORD PTR [rsp+0x20],r8d
   140024195:	call   QWORD PTR [rip+0x7e6d]        # 0x14002c008
   14002419b:	mov    QWORD PTR [rip+0x19386],rax        # 0x14003d528
   1400241a2:	add    rsp,0x48
   1400241a6:	ret    
   1400241a7:	int3   
   1400241a8:	mov    QWORD PTR [rsp+0x18],rbx
   1400241ad:	push   rbp
   1400241ae:	push   rsi
   1400241af:	push   rdi
   1400241b0:	push   r12
   1400241b2:	push   r13
   1400241b4:	push   r14
   1400241b6:	push   r15
   1400241b8:	lea    rbp,[rsp-0x1e0]
   1400241c0:	sub    rsp,0x2e0
   1400241c7:	mov    rax,QWORD PTR [rip+0x18002]        # 0x14003c1d0
   1400241ce:	xor    rax,rsp
   1400241d1:	mov    QWORD PTR [rbp+0x1d8],rax
   1400241d8:	xor    eax,eax
   1400241da:	mov    rsi,rcx
   1400241dd:	mov    QWORD PTR [rsp+0x68],rcx
   1400241e2:	mov    rdi,rdx
   1400241e5:	lea    rcx,[rbp-0x58]
   1400241e9:	mov    rdx,r8
   1400241ec:	mov    r13,r9
   1400241ef:	mov    DWORD PTR [rsp+0x70],eax
   1400241f3:	mov    r14d,eax
   1400241f6:	mov    DWORD PTR [rsp+0x54],eax
   1400241fa:	mov    r12d,eax
   1400241fd:	mov    DWORD PTR [rsp+0x48],eax
   140024201:	mov    DWORD PTR [rsp+0x60],eax
   140024205:	mov    DWORD PTR [rsp+0x58],eax
   140024209:	mov    ebx,eax
   14002420b:	mov    DWORD PTR [rsp+0x50],eax
   14002420f:	call   0x140008fac
   140024214:	call   0x140009cb4
   140024219:	or     r8d,0xffffffff
   14002421d:	xor    r10d,r10d
   140024220:	mov    QWORD PTR [rbp-0x80],rax
   140024224:	test   rsi,rsi
   140024227:	je     0x140024b78
   14002422d:	test   BYTE PTR [rsi+0x18],0x40
   140024231:	lea    r9,[rip+0xfffffffffffdbdc8]        # 0x140000000
   140024238:	jne    0x1400242c4
   14002423e:	mov    rcx,rsi
   140024241:	call   0x140010f18
   140024246:	lea    r8,[rip+0x17fe3]        # 0x14003c230
   14002424d:	movsxd r10,eax
   140024250:	lea    ecx,[r10+0x2]
   140024254:	cmp    ecx,0x1
   140024257:	jbe    0x14002427b
   140024259:	mov    rdx,r10
   14002425c:	mov    rcx,r10
   14002425f:	lea    rax,[rip+0xfffffffffffdbd9a]        # 0x140000000
   140024266:	and    edx,0x1f
   140024269:	sar    rcx,0x5
   14002426d:	imul   r9,rdx,0x58
   140024271:	add    r9,QWORD PTR [rax+rcx*8+0x3dd10]
   140024279:	jmp    0x14002427e
   14002427b:	mov    r9,r8
   14002427e:	test   BYTE PTR [r9+0x38],0x7f
   140024283:	jne    0x140024b78
   140024289:	lea    eax,[r10+0x2]
   14002428d:	lea    r9,[rip+0xfffffffffffdbd6c]        # 0x140000000
   140024294:	cmp    eax,0x1
   140024297:	jbe    0x1400242b2
   140024299:	mov    rcx,r10
   14002429c:	mov    rax,r10
   14002429f:	and    ecx,0x1f
   1400242a2:	sar    rax,0x5
   1400242a6:	imul   r8,rcx,0x58
   1400242aa:	add    r8,QWORD PTR [r9+rax*8+0x3dd10]
   1400242b2:	test   BYTE PTR [r8+0x38],0x80
   1400242b7:	jne    0x140024b78
   1400242bd:	or     r8d,0xffffffff
   1400242c1:	xor    r10d,r10d
   1400242c4:	test   rdi,rdi
   1400242c7:	je     0x140024b78
   1400242cd:	mov    r15b,BYTE PTR [rdi]
   1400242d0:	mov    esi,r10d
   1400242d3:	mov    DWORD PTR [rsp+0x40],r10d
   1400242d8:	mov    DWORD PTR [rsp+0x44],r10d
   1400242dd:	mov    edx,r10d
   1400242e0:	mov    QWORD PTR [rbp-0x78],r10
   1400242e4:	test   r15b,r15b
   1400242e7:	je     0x140024b90
   1400242ed:	mov    r11d,0x200
   1400242f3:	inc    rdi
   1400242f6:	mov    QWORD PTR [rbp-0x68],rdi
   1400242fa:	test   esi,esi
   1400242fc:	js     0x140024b6f
   140024302:	lea    eax,[r15-0x20]
   140024306:	cmp    al,0x58
   140024308:	ja     0x14002431c
   14002430a:	movsx  rax,r15b
   14002430e:	movzx  ecx,BYTE PTR [rax+r9*1+0x34ba0]
   140024317:	and    ecx,0xf
   14002431a:	jmp    0x14002431f
   14002431c:	mov    ecx,r10d
   14002431f:	movsxd rax,ecx
   140024322:	lea    rcx,[rax+rax*8]
   140024326:	movsxd rax,edx
   140024329:	add    rcx,rax
   14002432c:	movzx  edx,BYTE PTR [rcx+r9*1+0x34bc0]
   140024335:	shr    edx,0x4
   140024338:	mov    DWORD PTR [rsp+0x5c],edx
   14002433c:	cmp    edx,0x8
   14002433f:	je     0x140024b78
   140024345:	mov    ecx,edx
   140024347:	test   edx,edx
   140024349:	je     0x140024a31
   14002434f:	dec    ecx
   140024351:	je     0x140024b4b
   140024357:	dec    ecx
   140024359:	je     0x140024afb
   14002435f:	dec    ecx
   140024361:	je     0x140024abf
   140024367:	dec    ecx
   140024369:	je     0x140024ab7
   14002436f:	dec    ecx
   140024371:	je     0x140024a82
   140024377:	dec    ecx
   140024379:	je     0x1400249a7
   14002437f:	dec    ecx
   140024381:	jne    0x140024992
   140024387:	movsx  ecx,r15b
   14002438b:	cmp    ecx,0x64
   14002438e:	jg     0x1400244fd
   140024394:	je     0x1400245f5
   14002439a:	cmp    ecx,0x41
   14002439d:	je     0x1400244d2
   1400243a3:	cmp    ecx,0x43
   1400243a6:	je     0x140024478
   1400243ac:	lea    eax,[rcx-0x45]
   1400243af:	test   eax,0xfffffffd
   1400243b4:	je     0x1400244d2
   1400243ba:	cmp    ecx,0x53
   1400243bd:	je     0x14002442c
   1400243bf:	cmp    ecx,0x58
   1400243c2:	je     0x14002458e
   1400243c8:	cmp    ecx,0x5a
   1400243cb:	je     0x1400243e4
   1400243cd:	cmp    ecx,0x61
   1400243d0:	je     0x1400244de
   1400243d6:	cmp    ecx,0x63
   1400243d9:	je     0x140024486
   1400243df:	jmp    0x140024800
   1400243e4:	mov    rax,QWORD PTR [r13+0x0]
   1400243e8:	add    r13,0x8
   1400243ec:	test   rax,rax
   1400243ef:	je     0x140024420
   1400243f1:	mov    rbx,QWORD PTR [rax+0x8]
   1400243f5:	test   rbx,rbx
   1400243f8:	je     0x140024420
   1400243fa:	movsx  eax,WORD PTR [rax]
   1400243fd:	bt     r14d,0xb
   140024402:	jae    0x140024416
   140024404:	cdq    
   140024405:	mov    DWORD PTR [rsp+0x50],0x1
   14002440d:	sub    eax,edx
   14002440f:	sar    eax,1
   140024411:	jmp    0x1400247fc
   140024416:	mov    DWORD PTR [rsp+0x50],r10d
   14002441b:	jmp    0x1400247fc
   140024420:	mov    rbx,QWORD PTR [rip+0x18df9]        # 0x14003d220
   140024427:	jmp    0x1400247f1
   14002442c:	test   r14d,0x830
   140024433:	jne    0x14002443a
   140024435:	bts    r14d,0xb
   14002443a:	mov    rbx,QWORD PTR [r13+0x0]
   14002443e:	cmp    r12d,r8d
   140024441:	mov    eax,r12d
   140024444:	mov    ecx,0x7fffffff
   140024449:	cmove  eax,ecx
   14002444c:	add    r13,0x8
   140024450:	test   r14d,0x810
   140024457:	je     0x14002455a
   14002445d:	test   rbx,rbx
   140024460:	mov    DWORD PTR [rsp+0x50],0x1
   140024468:	cmove  rbx,QWORD PTR [rip+0x18db8]        # 0x14003d228
   140024470:	mov    rcx,rbx
   140024473:	jmp    0x14002454e
   140024478:	test   r14d,0x830
   14002447f:	jne    0x140024486
   140024481:	bts    r14d,0xb
   140024486:	add    r13,0x8
   14002448a:	test   r14d,0x810
   140024491:	je     0x1400244ba
   140024493:	movzx  r9d,WORD PTR [r13-0x8]
   140024498:	lea    rdx,[rbp-0x30]
   14002449c:	lea    rcx,[rsp+0x44]
   1400244a1:	mov    r8,r11
   1400244a4:	call   0x14001f4b4
   1400244a9:	xor    r10d,r10d
   1400244ac:	test   eax,eax
   1400244ae:	je     0x1400244c9
   1400244b0:	mov    DWORD PTR [rsp+0x58],0x1
   1400244b8:	jmp    0x1400244c9
   1400244ba:	mov    al,BYTE PTR [r13-0x8]
   1400244be:	mov    DWORD PTR [rsp+0x44],0x1
   1400244c6:	mov    BYTE PTR [rbp-0x30],al
   1400244c9:	lea    rbx,[rbp-0x30]
   1400244cd:	jmp    0x140024800
   1400244d2:	mov    DWORD PTR [rsp+0x60],0x1
   1400244da:	add    r15b,0x20
   1400244de:	or     r14d,0x40
   1400244e2:	lea    rbx,[rbp-0x30]
   1400244e6:	mov    esi,r11d
   1400244e9:	test   r12d,r12d
   1400244ec:	jns    0x140024713
   1400244f2:	mov    r12d,0x6
   1400244f8:	jmp    0x140024759
   1400244fd:	cmp    ecx,0x67
   140024500:	jle    0x1400244de
   140024502:	cmp    ecx,0x69
   140024505:	je     0x1400245f5
   14002450b:	cmp    ecx,0x6e
   14002450e:	je     0x1400245c3
   140024514:	cmp    ecx,0x6f
   140024517:	je     0x1400245b3
   14002451d:	cmp    ecx,0x70
   140024520:	je     0x140024583
   140024522:	cmp    ecx,0x73
   140024525:	je     0x14002443a
   14002452b:	cmp    ecx,0x75
   14002452e:	je     0x1400245f9
   140024534:	cmp    ecx,0x78
   140024537:	jne    0x140024800
   14002453d:	lea    eax,[rcx-0x51]
   140024540:	jmp    0x140024593
   140024542:	dec    eax
   140024544:	cmp    WORD PTR [rcx],r10w
   140024548:	je     0x140024552
   14002454a:	add    rcx,0x2
   14002454e:	test   eax,eax
   140024550:	jne    0x140024542
   140024552:	sub    rcx,rbx
   140024555:	sar    rcx,1
   140024558:	jmp    0x14002457a
   14002455a:	test   rbx,rbx
   14002455d:	cmove  rbx,QWORD PTR [rip+0x18cbb]        # 0x14003d220
   140024565:	mov    rcx,rbx
   140024568:	jmp    0x140024574
   14002456a:	dec    eax
   14002456c:	cmp    BYTE PTR [rcx],r10b
   14002456f:	je     0x140024578
   140024571:	inc    rcx
   140024574:	test   eax,eax
   140024576:	jne    0x14002456a
   140024578:	sub    ecx,ebx
   14002457a:	mov    DWORD PTR [rsp+0x44],ecx
   14002457e:	jmp    0x140024800
   140024583:	mov    r12d,0x10
   140024589:	bts    r14d,0xf
   14002458e:	mov    eax,0x7
   140024593:	mov    DWORD PTR [rsp+0x70],eax
   140024597:	mov    r9d,0x10
   14002459d:	test   r14b,r14b
   1400245a0:	jns    0x1400245ff
   1400245a2:	add    al,0x51
   1400245a4:	mov    BYTE PTR [rsp+0x4c],0x30
   1400245a9:	lea    edx,[r9-0xe]
   1400245ad:	mov    BYTE PTR [rsp+0x4d],al
   1400245b1:	jmp    0x140024603
   1400245b3:	mov    r9d,0x8
   1400245b9:	test   r14b,r14b
   1400245bc:	jns    0x1400245ff
   1400245be:	or     r14d,r11d
   1400245c1:	jmp    0x1400245ff
   1400245c3:	mov    rdi,QWORD PTR [r13+0x0]
   1400245c7:	add    r13,0x8
   1400245cb:	call   0x140012070
   1400245d0:	xor    r10d,r10d
   1400245d3:	test   eax,eax
   1400245d5:	je     0x140024b78
   1400245db:	test   r14b,0x20
   1400245df:	je     0x1400245e6
   1400245e1:	mov    WORD PTR [rdi],si
   1400245e4:	jmp    0x1400245e8
   1400245e6:	mov    DWORD PTR [rdi],esi
   1400245e8:	mov    DWORD PTR [rsp+0x58],0x1
   1400245f0:	jmp    0x140024961
   1400245f5:	or     r14d,0x40
   1400245f9:	mov    r9d,0xa
   1400245ff:	mov    edx,DWORD PTR [rsp+0x48]
   140024603:	mov    eax,0x8000
   140024608:	test   eax,r14d
   14002460b:	je     0x140024617
   14002460d:	mov    r8,QWORD PTR [r13+0x0]
   140024611:	add    r13,0x8
   140024615:	jmp    0x140024651
   140024617:	bt     r14d,0xc
   14002461c:	jb     0x14002460d
   14002461e:	add    r13,0x8
   140024622:	test   r14b,0x20
   140024626:	je     0x140024641
   140024628:	mov    QWORD PTR [rsp+0x78],r13
   14002462d:	test   r14b,0x40
   140024631:	je     0x14002463a
   140024633:	movsx  r8,WORD PTR [r13-0x8]
   140024638:	jmp    0x140024656
   14002463a:	movzx  r8d,WORD PTR [r13-0x8]
   14002463f:	jmp    0x140024656
   140024641:	test   r14b,0x40
   140024645:	je     0x14002464d
   140024647:	movsxd r8,DWORD PTR [r13-0x8]
   14002464b:	jmp    0x140024651
   14002464d:	mov    r8d,DWORD PTR [r13-0x8]
   140024651:	mov    QWORD PTR [rsp+0x78],r13
   140024656:	test   r14b,0x40
   14002465a:	je     0x140024669
   14002465c:	test   r8,r8
   14002465f:	jns    0x140024669
   140024661:	neg    r8
   140024664:	bts    r14d,0x8
   140024669:	test   eax,r14d
   14002466c:	jne    0x140024678
   14002466e:	bt     r14d,0xc
   140024673:	jb     0x140024678
   140024675:	mov    r8d,r8d
   140024678:	test   r12d,r12d
   14002467b:	jns    0x140024685
   14002467d:	mov    r12d,0x1
   140024683:	jmp    0x140024690
   140024685:	and    r14d,0xfffffff7
   140024689:	cmp    r12d,r11d
   14002468c:	cmovg  r12d,r11d
   140024690:	mov    r13d,DWORD PTR [rsp+0x70]
   140024695:	mov    rax,r8
   140024698:	lea    rbx,[rbp+0x1cf]
   14002469f:	neg    rax
   1400246a2:	sbb    ecx,ecx
   1400246a4:	and    ecx,edx
   1400246a6:	mov    DWORD PTR [rsp+0x48],ecx
   1400246aa:	mov    ecx,r12d
   1400246ad:	dec    r12d
   1400246b0:	test   ecx,ecx
   1400246b2:	jg     0x1400246b9
   1400246b4:	test   r8,r8
   1400246b7:	je     0x1400246d9
   1400246b9:	xor    edx,edx
   1400246bb:	mov    rax,r8
   1400246be:	movsxd rcx,r9d
   1400246c1:	div    rcx
   1400246c4:	mov    r8,rax
   1400246c7:	lea    eax,[rdx+0x30]
   1400246ca:	cmp    eax,0x39
   1400246cd:	jle    0x1400246d2
   1400246cf:	add    eax,r13d
   1400246d2:	mov    BYTE PTR [rbx],al
   1400246d4:	dec    rbx
   1400246d7:	jmp    0x1400246aa
   1400246d9:	mov    r13,QWORD PTR [rsp+0x78]
   1400246de:	lea    rax,[rbp+0x1cf]
   1400246e5:	sub    eax,ebx
   1400246e7:	inc    rbx
   1400246ea:	mov    DWORD PTR [rsp+0x44],eax
   1400246ee:	test   r11d,r14d
   1400246f1:	je     0x140024800
   1400246f7:	test   eax,eax
   1400246f9:	je     0x140024704
   1400246fb:	cmp    BYTE PTR [rbx],0x30
   1400246fe:	je     0x140024800
   140024704:	dec    rbx
   140024707:	inc    DWORD PTR [rsp+0x44]
   14002470b:	mov    BYTE PTR [rbx],0x30
   14002470e:	jmp    0x140024800
   140024713:	jne    0x140024723
   140024715:	cmp    r15b,0x67
   140024719:	jne    0x140024759
   14002471b:	mov    r12d,0x1
   140024721:	jmp    0x140024759
   140024723:	cmp    r12d,r11d
   140024726:	cmovg  r12d,r11d
   14002472a:	cmp    r12d,0xa3
   140024731:	jle    0x140024759
   140024733:	lea    edi,[r12+0x15d]
   14002473b:	movsxd rcx,edi
   14002473e:	call   0x140008684
   140024743:	mov    QWORD PTR [rbp-0x78],rax
   140024747:	test   rax,rax
   14002474a:	je     0x140024753
   14002474c:	mov    rbx,rax
   14002474f:	mov    esi,edi
   140024751:	jmp    0x140024759
   140024753:	mov    r12d,0xa3
   140024759:	mov    rax,QWORD PTR [r13+0x0]
   14002475d:	mov    rcx,QWORD PTR [rip+0x17aac]        # 0x14003c210
   140024764:	add    r13,0x8
   140024768:	movsx  edi,r15b
   14002476c:	movsxd rsi,esi
   14002476f:	mov    QWORD PTR [rbp-0x60],rax
   140024773:	call   QWORD PTR [rip+0x799f]        # 0x14002c118
   140024779:	lea    rcx,[rbp-0x58]
   14002477d:	mov    r9d,edi
   140024780:	mov    QWORD PTR [rsp+0x30],rcx
   140024785:	mov    ecx,DWORD PTR [rsp+0x60]
   140024789:	mov    r8,rsi
   14002478c:	mov    DWORD PTR [rsp+0x28],ecx
   140024790:	lea    rcx,[rbp-0x60]
   140024794:	mov    rdx,rbx
   140024797:	mov    DWORD PTR [rsp+0x20],r12d
   14002479c:	call   rax
   14002479e:	mov    edi,r14d
   1400247a1:	and    edi,0x80
   1400247a7:	je     0x1400247c4
   1400247a9:	test   r12d,r12d
   1400247ac:	jne    0x1400247c4
   1400247ae:	mov    rcx,QWORD PTR [rip+0x17a73]        # 0x14003c228
   1400247b5:	call   QWORD PTR [rip+0x795d]        # 0x14002c118
   1400247bb:	lea    rdx,[rbp-0x58]
   1400247bf:	mov    rcx,rbx
   1400247c2:	call   rax
   1400247c4:	cmp    r15b,0x67
   1400247c8:	jne    0x1400247e4
   1400247ca:	test   edi,edi
   1400247cc:	jne    0x1400247e4
   1400247ce:	mov    rcx,QWORD PTR [rip+0x17a4b]        # 0x14003c220
   1400247d5:	call   QWORD PTR [rip+0x793d]        # 0x14002c118
   1400247db:	lea    rdx,[rbp-0x58]
   1400247df:	mov    rcx,rbx
   1400247e2:	call   rax
   1400247e4:	cmp    BYTE PTR [rbx],0x2d
   1400247e7:	jne    0x1400247f1
   1400247e9:	bts    r14d,0x8
   1400247ee:	inc    rbx
   1400247f1:	mov    rcx,rbx
   1400247f4:	call   0x140007550
   1400247f9:	xor    r10d,r10d
   1400247fc:	mov    DWORD PTR [rsp+0x44],eax
   140024800:	cmp    DWORD PTR [rsp+0x58],r10d
   140024805:	jne    0x140024961
   14002480b:	test   r14b,0x40
   14002480f:	je     0x140024842
   140024811:	bt     r14d,0x8
   140024816:	jae    0x14002481f
   140024818:	mov    BYTE PTR [rsp+0x4c],0x2d
   14002481d:	jmp    0x14002482a
   14002481f:	test   r14b,0x1
   140024823:	je     0x140024835
   140024825:	mov    BYTE PTR [rsp+0x4c],0x2b
   14002482a:	mov    edi,0x1
   14002482f:	mov    DWORD PTR [rsp+0x48],edi
   140024833:	jmp    0x140024846
   140024835:	test   r14b,0x2
   140024839:	je     0x140024842
   14002483b:	mov    BYTE PTR [rsp+0x4c],0x20
   140024840:	jmp    0x14002482a
   140024842:	mov    edi,DWORD PTR [rsp+0x48]
   140024846:	mov    esi,DWORD PTR [rsp+0x54]
   14002484a:	mov    r15,QWORD PTR [rsp+0x68]
   14002484f:	sub    esi,DWORD PTR [rsp+0x44]
   140024853:	sub    esi,edi
   140024855:	test   r14b,0xc
   140024859:	jne    0x14002486c
   14002485b:	lea    r9,[rsp+0x40]
   140024860:	mov    r8,r15
   140024863:	mov    edx,esi
   140024865:	mov    cl,0x20
   140024867:	call   0x140024c18
   14002486c:	mov    rax,QWORD PTR [rbp-0x80]
   140024870:	lea    r9,[rsp+0x40]
   140024875:	lea    rcx,[rsp+0x4c]
   14002487a:	mov    r8,r15
   14002487d:	mov    edx,edi
   14002487f:	mov    QWORD PTR [rsp+0x20],rax
   140024884:	call   0x140024c6c
   140024889:	test   r14b,0x8
   14002488d:	je     0x1400248a6
   14002488f:	test   r14b,0x4
   140024893:	jne    0x1400248a6
   140024895:	lea    r9,[rsp+0x40]
   14002489a:	mov    r8,r15
   14002489d:	mov    edx,esi
   14002489f:	mov    cl,0x30
   1400248a1:	call   0x140024c18
   1400248a6:	cmp    DWORD PTR [rsp+0x50],0x0
   1400248ab:	mov    edi,DWORD PTR [rsp+0x44]
   1400248af:	je     0x140024921
   1400248b1:	test   edi,edi
   1400248b3:	jle    0x140024921
   1400248b5:	mov    r15,rbx
   1400248b8:	movzx  r9d,WORD PTR [r15]
   1400248bc:	lea    rdx,[rbp+0x1d0]
   1400248c3:	lea    rcx,[rbp-0x70]
   1400248c7:	mov    r8d,0x6
   1400248cd:	dec    edi
   1400248cf:	lea    r15,[r15+0x2]
   1400248d3:	call   0x14001f4b4
   1400248d8:	xor    r10d,r10d
   1400248db:	test   eax,eax
   1400248dd:	jne    0x140024913
   1400248df:	mov    edx,DWORD PTR [rbp-0x70]
   1400248e2:	test   edx,edx
   1400248e4:	je     0x140024913
   1400248e6:	mov    rax,QWORD PTR [rbp-0x80]
   1400248ea:	mov    r8,QWORD PTR [rsp+0x68]
   1400248ef:	lea    r9,[rsp+0x40]
   1400248f4:	lea    rcx,[rbp+0x1d0]
   1400248fb:	mov    QWORD PTR [rsp+0x20],rax
   140024900:	call   0x140024c6c
   140024905:	xor    r10d,r10d
   140024908:	test   edi,edi
   14002490a:	jne    0x1400248b8
   14002490c:	mov    r15,QWORD PTR [rsp+0x68]
   140024911:	jmp    0x14002493f
   140024913:	mov    r15,QWORD PTR [rsp+0x68]
   140024918:	or     eax,0xffffffff
   14002491b:	mov    DWORD PTR [rsp+0x40],eax
   14002491f:	jmp    0x140024943
   140024921:	mov    rax,QWORD PTR [rbp-0x80]
   140024925:	lea    r9,[rsp+0x40]
   14002492a:	mov    r8,r15
   14002492d:	mov    edx,edi
   14002492f:	mov    rcx,rbx
   140024932:	mov    QWORD PTR [rsp+0x20],rax
   140024937:	call   0x140024c6c
   14002493c:	xor    r10d,r10d
   14002493f:	mov    eax,DWORD PTR [rsp+0x40]
   140024943:	test   eax,eax
   140024945:	js     0x140024961
   140024947:	test   r14b,0x4
   14002494b:	je     0x140024961
   14002494d:	lea    r9,[rsp+0x40]
   140024952:	mov    r8,r15
   140024955:	mov    edx,esi
   140024957:	mov    cl,0x20
   140024959:	call   0x140024c18
   14002495e:	xor    r10d,r10d
   140024961:	mov    rax,QWORD PTR [rbp-0x78]
   140024965:	test   rax,rax
   140024968:	je     0x140024979
   14002496a:	mov    rcx,rax
   14002496d:	call   0x140007dc0
   140024972:	xor    r10d,r10d
   140024975:	mov    QWORD PTR [rbp-0x78],r10
   140024979:	mov    rdi,QWORD PTR [rbp-0x68]
   14002497d:	mov    esi,DWORD PTR [rsp+0x40]
   140024981:	mov    edx,DWORD PTR [rsp+0x5c]
   140024985:	mov    r11d,0x200
   14002498b:	lea    r9,[rip+0xfffffffffffdb66e]        # 0x140000000
   140024992:	mov    r15b,BYTE PTR [rdi]
   140024995:	test   r15b,r15b
   140024998:	je     0x140024b6f
   14002499e:	or     r8d,0xffffffff
   1400249a2:	jmp    0x1400242f3
   1400249a7:	cmp    r15b,0x49
   1400249ab:	je     0x1400249e1
   1400249ad:	cmp    r15b,0x68
   1400249b1:	je     0x1400249db
   1400249b3:	cmp    r15b,0x6c
   1400249b7:	je     0x1400249c6
   1400249b9:	cmp    r15b,0x77
   1400249bd:	jne    0x140024992
   1400249bf:	bts    r14d,0xb
   1400249c4:	jmp    0x140024992
   1400249c6:	cmp    BYTE PTR [rdi],0x6c
   1400249c9:	jne    0x1400249d5
   1400249cb:	inc    rdi
   1400249ce:	bts    r14d,0xc
   1400249d3:	jmp    0x140024992
   1400249d5:	or     r14d,0x10
   1400249d9:	jmp    0x140024992
   1400249db:	or     r14d,0x20
   1400249df:	jmp    0x140024992
   1400249e1:	mov    al,BYTE PTR [rdi]
   1400249e3:	bts    r14d,0xf
   1400249e8:	cmp    al,0x36
   1400249ea:	jne    0x1400249fd
   1400249ec:	cmp    BYTE PTR [rdi+0x1],0x34
   1400249f0:	jne    0x1400249fd
   1400249f2:	add    rdi,0x2
   1400249f6:	bts    r14d,0xf
   1400249fb:	jmp    0x140024992
   1400249fd:	cmp    al,0x33
   1400249ff:	jne    0x140024a12
   140024a01:	cmp    BYTE PTR [rdi+0x1],0x32
   140024a05:	jne    0x140024a12
   140024a07:	add    rdi,0x2
   140024a0b:	btr    r14d,0xf
   140024a10:	jmp    0x140024992
   140024a12:	sub    al,0x58
   140024a14:	cmp    al,0x20
   140024a16:	ja     0x140024a2c
   140024a18:	movabs rcx,0x120821001
   140024a22:	bt     rcx,rax
   140024a26:	jb     0x140024992
   140024a2c:	mov    DWORD PTR [rsp+0x5c],r10d
   140024a31:	lea    rdx,[rbp-0x58]
   140024a35:	movzx  ecx,r15b
   140024a39:	mov    DWORD PTR [rsp+0x50],r10d
   140024a3e:	call   0x140011e44
   140024a43:	test   eax,eax
   140024a45:	je     0x140024a68
   140024a47:	mov    rdx,QWORD PTR [rsp+0x68]
   140024a4c:	lea    r8,[rsp+0x40]
   140024a51:	mov    cl,r15b
   140024a54:	call   0x140024bd0
   140024a59:	mov    r15b,BYTE PTR [rdi]
   140024a5c:	inc    rdi
   140024a5f:	test   r15b,r15b
   140024a62:	je     0x140024b78
   140024a68:	mov    rdx,QWORD PTR [rsp+0x68]
   140024a6d:	lea    r8,[rsp+0x40]
   140024a72:	mov    cl,r15b
   140024a75:	call   0x140024bd0
   140024a7a:	xor    r10d,r10d
   140024a7d:	jmp    0x14002497d
   140024a82:	cmp    r15b,0x2a
   140024a86:	jne    0x140024aa1
   140024a88:	mov    r12d,DWORD PTR [r13+0x0]
   140024a8c:	add    r13,0x8
   140024a90:	test   r12d,r12d
   140024a93:	jns    0x140024992
   140024a99:	mov    r12d,r8d
   140024a9c:	jmp    0x140024992
   140024aa1:	lea    r12d,[r12+r12*4]
   140024aa5:	movsx  eax,r15b
   140024aa9:	lea    r12d,[r12-0x18]
   140024aae:	lea    r12d,[rax+r12*2]
   140024ab2:	jmp    0x140024992
   140024ab7:	mov    r12d,r10d
   140024aba:	jmp    0x140024992
   140024abf:	cmp    r15b,0x2a
   140024ac3:	jne    0x140024ae1
   140024ac5:	mov    eax,DWORD PTR [r13+0x0]
   140024ac9:	add    r13,0x8
   140024acd:	mov    DWORD PTR [rsp+0x54],eax
   140024ad1:	test   eax,eax
   140024ad3:	jns    0x140024992
   140024ad9:	or     r14d,0x4
   140024add:	neg    eax
   140024adf:	jmp    0x140024af2
   140024ae1:	mov    eax,DWORD PTR [rsp+0x54]
   140024ae5:	lea    ecx,[rax+rax*4]
   140024ae8:	movsx  eax,r15b
   140024aec:	lea    eax,[rax+rcx*2]
   140024aef:	add    eax,0xffffffd0
   140024af2:	mov    DWORD PTR [rsp+0x54],eax
   140024af6:	jmp    0x140024992
   140024afb:	cmp    r15b,0x20
   140024aff:	je     0x140024b42
   140024b01:	cmp    r15b,0x23
   140024b05:	je     0x140024b38
   140024b07:	cmp    r15b,0x2b
   140024b0b:	je     0x140024b2f
   140024b0d:	cmp    r15b,0x2d
   140024b11:	je     0x140024b26
   140024b13:	cmp    r15b,0x30
   140024b17:	jne    0x140024992
   140024b1d:	or     r14d,0x8
   140024b21:	jmp    0x140024992
   140024b26:	or     r14d,0x4
   140024b2a:	jmp    0x140024992
   140024b2f:	or     r14d,0x1
   140024b33:	jmp    0x140024992
   140024b38:	bts    r14d,0x7
   140024b3d:	jmp    0x140024992
   140024b42:	or     r14d,0x2
   140024b46:	jmp    0x140024992
   140024b4b:	mov    DWORD PTR [rsp+0x60],r10d
   140024b50:	mov    DWORD PTR [rsp+0x58],r10d
   140024b55:	mov    DWORD PTR [rsp+0x54],r10d
   140024b5a:	mov    DWORD PTR [rsp+0x48],r10d
   140024b5f:	mov    r14d,r10d
   140024b62:	mov    r12d,r8d
   140024b65:	mov    DWORD PTR [rsp+0x50],r10d
   140024b6a:	jmp    0x140024992
   140024b6f:	test   edx,edx
   140024b71:	je     0x140024b90
   140024b73:	cmp    edx,0x7
   140024b76:	je     0x140024b90
   140024b78:	call   0x140009cb4
   140024b7d:	mov    DWORD PTR [rax],0x16
   140024b83:	call   0x140008d58
   140024b88:	or     eax,0xffffffff
   140024b8b:	xor    r10d,r10d
   140024b8e:	jmp    0x140024b92
   140024b90:	mov    eax,esi
   140024b92:	cmp    BYTE PTR [rbp-0x40],r10b
   140024b96:	je     0x140024ba3
   140024b98:	mov    rcx,QWORD PTR [rbp-0x48]
   140024b9c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024ba3:	mov    rcx,QWORD PTR [rbp+0x1d8]
   140024baa:	xor    rcx,rsp
   140024bad:	call   0x14000c380
   140024bb2:	mov    rbx,QWORD PTR [rsp+0x330]
   140024bba:	add    rsp,0x2e0
   140024bc1:	pop    r15
   140024bc3:	pop    r14
   140024bc5:	pop    r13
   140024bc7:	pop    r12
   140024bc9:	pop    rdi
   140024bca:	pop    rsi
   140024bcb:	pop    rbp
   140024bcc:	ret    
   140024bcd:	int3   
   140024bce:	int3   
   140024bcf:	int3   
   140024bd0:	rex push rbx
   140024bd2:	sub    rsp,0x20
   140024bd6:	test   BYTE PTR [rdx+0x18],0x40
   140024bda:	mov    rbx,r8
   140024bdd:	je     0x140024beb
   140024bdf:	cmp    QWORD PTR [rdx+0x10],0x0
   140024be4:	jne    0x140024beb
   140024be6:	inc    DWORD PTR [r8]
   140024be9:	jmp    0x140024c10
   140024beb:	dec    DWORD PTR [rdx+0x8]
   140024bee:	js     0x140024bfd
   140024bf0:	mov    rax,QWORD PTR [rdx]
   140024bf3:	mov    BYTE PTR [rax],cl
   140024bf5:	inc    QWORD PTR [rdx]
   140024bf8:	movzx  eax,cl
   140024bfb:	jmp    0x140024c05
   140024bfd:	movsx  ecx,cl
   140024c00:	call   0x140008e20
   140024c05:	cmp    eax,0xffffffff
   140024c08:	jne    0x140024c0e
   140024c0a:	or     DWORD PTR [rbx],eax
   140024c0c:	jmp    0x140024c10
   140024c0e:	inc    DWORD PTR [rbx]
   140024c10:	add    rsp,0x20
   140024c14:	pop    rbx
   140024c15:	ret    
   140024c16:	int3   
   140024c17:	int3   
   140024c18:	test   edx,edx
   140024c1a:	jle    0x140024c68
   140024c1c:	mov    QWORD PTR [rsp+0x8],rbx
   140024c21:	mov    QWORD PTR [rsp+0x10],rbp
   140024c26:	mov    QWORD PTR [rsp+0x18],rsi
   140024c2b:	push   rdi
   140024c2c:	sub    rsp,0x20
   140024c30:	mov    rdi,r9
   140024c33:	mov    rsi,r8
   140024c36:	mov    ebx,edx
   140024c38:	mov    bpl,cl
   140024c3b:	mov    r8,rdi
   140024c3e:	mov    rdx,rsi
   140024c41:	mov    cl,bpl
   140024c44:	dec    ebx
   140024c46:	call   0x140024bd0
   140024c4b:	cmp    DWORD PTR [rdi],0xffffffff
   140024c4e:	je     0x140024c54
   140024c50:	test   ebx,ebx
   140024c52:	jg     0x140024c3b
   140024c54:	mov    rbx,QWORD PTR [rsp+0x30]
   140024c59:	mov    rbp,QWORD PTR [rsp+0x38]
   140024c5e:	mov    rsi,QWORD PTR [rsp+0x40]
   140024c63:	add    rsp,0x20
   140024c67:	pop    rdi
   140024c68:	ret    
   140024c69:	int3   
   140024c6a:	int3   
   140024c6b:	int3   
   140024c6c:	mov    QWORD PTR [rsp+0x8],rbx
   140024c71:	mov    QWORD PTR [rsp+0x10],rbp
   140024c76:	mov    QWORD PTR [rsp+0x18],rsi
   140024c7b:	push   rdi
   140024c7c:	push   r14
   140024c7e:	push   r15
   140024c80:	sub    rsp,0x20
   140024c84:	test   BYTE PTR [r8+0x18],0x40
   140024c89:	mov    rbx,QWORD PTR [rsp+0x60]
   140024c8e:	mov    rdi,r9
   140024c91:	mov    r15d,DWORD PTR [rbx]
   140024c94:	mov    rbp,r8
   140024c97:	mov    esi,edx
   140024c99:	mov    r14,rcx
   140024c9c:	je     0x140024caa
   140024c9e:	cmp    QWORD PTR [r8+0x10],0x0
   140024ca3:	jne    0x140024caa
   140024ca5:	add    DWORD PTR [r9],edx
   140024ca8:	jmp    0x140024ce7
   140024caa:	and    DWORD PTR [rbx],0x0
   140024cad:	test   edx,edx
   140024caf:	jle    0x140024ce4
   140024cb1:	mov    cl,BYTE PTR [r14]
   140024cb4:	mov    r8,rdi
   140024cb7:	mov    rdx,rbp
   140024cba:	dec    esi
   140024cbc:	call   0x140024bd0
   140024cc1:	inc    r14
   140024cc4:	cmp    DWORD PTR [rdi],0xffffffff
   140024cc7:	jne    0x140024cdb
   140024cc9:	cmp    DWORD PTR [rbx],0x2a
   140024ccc:	jne    0x140024cdf
   140024cce:	mov    r8,rdi
   140024cd1:	mov    rdx,rbp
   140024cd4:	mov    cl,0x3f
   140024cd6:	call   0x140024bd0
   140024cdb:	test   esi,esi
   140024cdd:	jg     0x140024cb1
   140024cdf:	cmp    DWORD PTR [rbx],0x0
   140024ce2:	jne    0x140024ce7
   140024ce4:	mov    DWORD PTR [rbx],r15d
   140024ce7:	mov    rbx,QWORD PTR [rsp+0x40]
   140024cec:	mov    rbp,QWORD PTR [rsp+0x48]
   140024cf1:	mov    rsi,QWORD PTR [rsp+0x50]
   140024cf6:	add    rsp,0x20
   140024cfa:	pop    r15
   140024cfc:	pop    r14
   140024cfe:	pop    rdi
   140024cff:	ret    
   140024d00:	mov    QWORD PTR [rsp+0x18],rbx
   140024d05:	push   rbp
   140024d06:	push   rsi
   140024d07:	push   rdi
   140024d08:	push   r12
   140024d0a:	push   r13
   140024d0c:	push   r14
   140024d0e:	push   r15
   140024d10:	lea    rbp,[rsp-0xb60]
   140024d18:	sub    rsp,0xc60
   140024d1f:	mov    rax,QWORD PTR [rip+0x174aa]        # 0x14003c1d0
   140024d26:	xor    rax,rsp
   140024d29:	mov    QWORD PTR [rbp+0xb58],rax
   140024d30:	xor    esi,esi
   140024d32:	mov    rdi,rcx
   140024d35:	mov    QWORD PTR [rbp-0x68],rcx
   140024d39:	mov    r12,rdx
   140024d3c:	mov    QWORD PTR [rbp-0x38],rdx
   140024d40:	lea    rcx,[rbp-0x30]
   140024d44:	mov    rdx,r8
   140024d47:	mov    r13,r9
   140024d4a:	mov    DWORD PTR [rbp-0x70],esi
   140024d4d:	mov    r15d,esi
   140024d50:	mov    DWORD PTR [rsp+0x50],esi
   140024d54:	mov    DWORD PTR [rbp-0x74],esi
   140024d57:	mov    DWORD PTR [rsp+0x44],esi
   140024d5b:	mov    ebx,esi
   140024d5d:	mov    DWORD PTR [rsp+0x68],esi
   140024d61:	call   0x140008fac
   140024d66:	mov    QWORD PTR [rbp-0x80],rsi
   140024d6a:	or     r14d,0xffffffff
   140024d6e:	mov    esi,r14d
   140024d71:	call   0x140009cb4
   140024d76:	mov    QWORD PTR [rbp-0x58],rax
   140024d7a:	test   rdi,rdi
   140024d7d:	je     0x140024e04
   140024d83:	test   BYTE PTR [rdi+0x18],0x40
   140024d87:	jne    0x140024e19
   140024d8d:	mov    rcx,rdi
   140024d90:	call   0x140010f18
   140024d95:	lea    r8,[rip+0x17494]        # 0x14003c230
   140024d9c:	movsxd r10,eax
   140024d9f:	lea    ecx,[r10+0x2]
   140024da3:	cmp    ecx,0x1
   140024da6:	jbe    0x140024dca
   140024da8:	mov    rdx,r10
   140024dab:	mov    rcx,r10
   140024dae:	and    edx,0x1f
   140024db1:	sar    rcx,0x5
   140024db5:	imul   r9,rdx,0x58
   140024db9:	lea    rdx,[rip+0xfffffffffffdb240]        # 0x140000000
   140024dc0:	add    r9,QWORD PTR [rdx+rcx*8+0x3dd10]
   140024dc8:	jmp    0x140024dd4
   140024dca:	mov    r9,r8
   140024dcd:	lea    rdx,[rip+0xfffffffffffdb22c]        # 0x140000000
   140024dd4:	test   BYTE PTR [r9+0x38],0x7f
   140024dd9:	jne    0x140024e04
   140024ddb:	lea    eax,[r10+0x2]
   140024ddf:	cmp    eax,0x1
   140024de2:	jbe    0x140024dfd
   140024de4:	mov    rcx,r10
   140024de7:	mov    rax,r10
   140024dea:	and    ecx,0x1f
   140024ded:	sar    rax,0x5
   140024df1:	imul   r8,rcx,0x58
   140024df5:	add    r8,QWORD PTR [rdx+rax*8+0x3dd10]
   140024dfd:	test   BYTE PTR [r8+0x38],0x80
   140024e02:	je     0x140024e19
   140024e04:	call   0x140009cb4
   140024e09:	mov    DWORD PTR [rax],0x16
   140024e0f:	call   0x140008d58
   140024e14:	jmp    0x140025128
   140024e19:	xor    edi,edi
   140024e1b:	test   r12,r12
   140024e1e:	jne    0x140024e35
   140024e20:	call   0x140009cb4
   140024e25:	mov    DWORD PTR [rax],0x16
   140024e2b:	call   0x140008d58
   140024e30:	jmp    0x140025d95
   140024e35:	mov    ecx,edi
   140024e37:	mov    r10d,edi
   140024e3a:	mov    DWORD PTR [rsp+0x4c],edi
   140024e3e:	mov    DWORD PTR [rsp+0x7c],ecx
   140024e42:	cmp    ecx,0x1
   140024e45:	jne    0x140024e4f
   140024e47:	test   esi,esi
   140024e49:	je     0x140025d92
   140024e4f:	mov    rax,QWORD PTR [rbp-0x38]
   140024e53:	mov    edx,r14d
   140024e56:	mov    r9,r12
   140024e59:	mov    DWORD PTR [rsp+0x54],edi
   140024e5d:	mov    r12d,r14d
   140024e60:	mov    DWORD PTR [rbp-0x60],r14d
   140024e64:	mov    esi,r14d
   140024e67:	mov    DWORD PTR [rsp+0x78],r14d
   140024e6c:	mov    r14b,BYTE PTR [rax]
   140024e6f:	mov    r11d,edi
   140024e72:	mov    QWORD PTR [rbp-0x50],rdi
   140024e76:	mov    DWORD PTR [rsp+0x40],edx
   140024e7a:	mov    DWORD PTR [rsp+0x5c],edi
   140024e7e:	mov    DWORD PTR [rsp+0x48],edi
   140024e82:	test   r14b,r14b
   140024e85:	je     0x140025d62
   140024e8b:	movsxd r8,ecx
   140024e8e:	mov    QWORD PTR [rsp+0x70],r8
   140024e93:	inc    r9
   140024e96:	mov    QWORD PTR [rsp+0x60],r9
   140024e9b:	test   r10d,r10d
   140024e9e:	js     0x140025cfe
   140024ea4:	lea    eax,[r14-0x20]
   140024ea8:	cmp    al,0x58
   140024eaa:	ja     0x140024ec7
   140024eac:	lea    rcx,[rip+0xfffffffffffdb14d]        # 0x140000000
   140024eb3:	movsx  rax,r14b
   140024eb7:	movzx  ecx,BYTE PTR [rax+rcx*1+0x34ba0]
   140024ebf:	and    ecx,0xf
   140024ec2:	xor    r10d,r10d
   140024ec5:	jmp    0x140024ecd
   140024ec7:	xor    r10d,r10d
   140024eca:	mov    ecx,r10d
   140024ecd:	movsxd rax,ecx
   140024ed0:	lea    rcx,[rax+rax*8]
   140024ed4:	movsxd rax,r11d
   140024ed7:	mov    r11d,0x1
   140024edd:	add    rcx,rax
   140024ee0:	lea    rax,[rip+0xfffffffffffdb119]        # 0x140000000
   140024ee7:	movzx  eax,BYTE PTR [rcx+rax*1+0x34bc0]
   140024eef:	shr    eax,0x4
   140024ef2:	mov    DWORD PTR [rbp-0x78],eax
   140024ef5:	cmp    eax,r11d
   140024ef8:	jne    0x140024fdb
   140024efe:	cmp    BYTE PTR [r9],0x25
   140024f02:	je     0x140024fe4
   140024f08:	cmp    esi,0xffffffff
   140024f0b:	jne    0x140024f6b
   140024f0d:	lea    r8d,[r11+0x9]
   140024f11:	lea    rdx,[rbp-0x80]
   140024f15:	mov    rcx,r9
   140024f18:	call   0x140026be8
   140024f1d:	xor    r10d,r10d
   140024f20:	test   eax,eax
   140024f22:	jle    0x140024f53
   140024f24:	mov    rax,QWORD PTR [rbp-0x80]
   140024f28:	cmp    BYTE PTR [rax],0x24
   140024f2b:	jne    0x140024f53
   140024f2d:	cmp    QWORD PTR [rsp+0x70],r10
   140024f32:	jne    0x140024f48
   140024f34:	lea    rcx,[rbp+0x1f0]
   140024f3b:	xor    edx,edx
   140024f3d:	mov    r8d,0x960
   140024f43:	call   0x140006f70
   140024f48:	mov    esi,0x1
   140024f4d:	mov    DWORD PTR [rsp+0x78],esi
   140024f51:	jmp    0x140024f70
   140024f53:	mov    r8,QWORD PTR [rsp+0x70]
   140024f58:	mov    r9,QWORD PTR [rsp+0x60]
   140024f5d:	mov    esi,r10d
   140024f60:	mov    DWORD PTR [rsp+0x78],r10d
   140024f65:	mov    r11d,0x1
   140024f6b:	cmp    esi,r11d
   140024f6e:	jne    0x140024fe4
   140024f70:	mov    rcx,QWORD PTR [rsp+0x60]
   140024f75:	lea    rdx,[rbp-0x80]
   140024f79:	mov    r8d,0xa
   140024f7f:	call   0x140026be8
   140024f84:	mov    rcx,QWORD PTR [rbp-0x80]
   140024f88:	mov    r8,QWORD PTR [rsp+0x70]
   140024f8d:	mov    r12d,eax
   140024f90:	mov    r11d,0x1
   140024f96:	lea    r9,[rcx+0x1]
   140024f9a:	sub    r12d,r11d
   140024f9d:	xor    r10d,r10d
   140024fa0:	mov    QWORD PTR [rsp+0x60],r9
   140024fa5:	mov    DWORD PTR [rbp-0x60],r12d
   140024fa9:	test   r8,r8
   140024fac:	jne    0x140024fe4
   140024fae:	test   r12d,r12d
   140024fb1:	js     0x140025114
   140024fb7:	cmp    BYTE PTR [rcx],0x24
   140024fba:	jne    0x140025114
   140024fc0:	cmp    r12d,0x64
   140024fc4:	jge    0x140025114
   140024fca:	mov    eax,DWORD PTR [rsp+0x40]
   140024fce:	cmp    r12d,eax
   140024fd1:	cmovg  eax,r12d
   140024fd5:	mov    DWORD PTR [rsp+0x40],eax
   140024fd9:	jmp    0x140024fe4
   140024fdb:	cmp    eax,0x8
   140024fde:	je     0x140025114
   140024fe4:	mov    ecx,DWORD PTR [rbp-0x78]
   140024fe7:	test   ecx,ecx
   140024fe9:	je     0x140025c6e
   140024fef:	dec    ecx
   140024ff1:	je     0x140025c4a
   140024ff7:	dec    ecx
   140024ff9:	je     0x140025bf7
   140024fff:	dec    ecx
   140025001:	je     0x140025b61
   140025007:	dec    ecx
   140025009:	je     0x140025b54
   14002500f:	dec    ecx
   140025011:	je     0x140025a61
   140025017:	dec    ecx
   140025019:	je     0x1400259ae
   14002501f:	dec    ecx
   140025021:	jne    0x140025ce1
   140025027:	movsx  ecx,r14b
   14002502b:	cmp    ecx,0x64
   14002502e:	jg     0x1400252af
   140025034:	je     0x140025446
   14002503a:	cmp    ecx,0x41
   14002503d:	je     0x140025251
   140025043:	cmp    ecx,0x43
   140025046:	je     0x140025175
   14002504c:	lea    eax,[rcx-0x45]
   14002504f:	test   eax,0xfffffffd
   140025054:	je     0x140025251
   14002505a:	cmp    ecx,0x53
   14002505d:	je     0x140025145
   140025063:	cmp    ecx,0x58
   140025066:	je     0x1400253a3
   14002506c:	cmp    ecx,0x5a
   14002506f:	je     0x140025088
   140025071:	cmp    ecx,0x61
   140025074:	je     0x140025259
   14002507a:	cmp    ecx,0x63
   14002507d:	je     0x140025183
   140025083:	jmp    0x14002581f
   140025088:	test   esi,esi
   14002508a:	jne    0x140025096
   14002508c:	mov    rax,QWORD PTR [r13+0x0]
   140025090:	add    r13,0x8
   140025094:	jmp    0x1400250b7
   140025096:	cmp    r12d,0x63
   14002509a:	ja     0x140025114
   14002509c:	movsxd rax,r12d
   14002509f:	lea    rcx,[rax+rax*2]
   1400250a3:	test   r8,r8
   1400250a6:	je     0x140025311
   1400250ac:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400250b4:	mov    rax,QWORD PTR [rax]
   1400250b7:	test   rax,rax
   1400250ba:	je     0x140025139
   1400250bc:	mov    rbx,QWORD PTR [rax+0x8]
   1400250c0:	test   rbx,rbx
   1400250c3:	je     0x140025139
   1400250c5:	movsx  eax,WORD PTR [rax]
   1400250c8:	bt     r15d,0xb
   1400250cd:	jae    0x14002512f
   1400250cf:	cdq    
   1400250d0:	mov    DWORD PTR [rsp+0x68],r11d
   1400250d5:	sub    eax,edx
   1400250d7:	sar    eax,1
   1400250d9:	jmp    0x14002581b
   1400250de:	mov    DWORD PTR [rax],0x3
   1400250e4:	mov    BYTE PTR [rbp+rcx*8+0x200],r14b
   1400250ec:	mov    DWORD PTR [rbp+rcx*8+0x204],r15d
   1400250f4:	jmp    0x14002581f
   1400250f9:	mov    edx,0x3
   1400250fe:	mov    r9d,r15d
   140025101:	mov    r8b,r14b
   140025104:	mov    rcx,rax
   140025107:	call   0x140025dd4
   14002510c:	test   eax,eax
   14002510e:	jne    0x14002581f
   140025114:	call   0x140009cb4
   140025119:	mov    DWORD PTR [rax],0x16
   14002511f:	call   0x140008d58
   140025124:	or     r14d,0xffffffff
   140025128:	xor    edi,edi
   14002512a:	jmp    0x140025d95
   14002512f:	mov    DWORD PTR [rsp+0x68],r10d
   140025134:	jmp    0x14002581b
   140025139:	mov    rbx,QWORD PTR [rip+0x180e0]        # 0x14003d220
   140025140:	jmp    0x140025813
   140025145:	test   r15d,0x830
   14002514c:	jne    0x140025153
   14002514e:	bts    r15d,0xb
   140025153:	cmp    edi,0xffffffff
   140025156:	mov    edx,edi
   140025158:	mov    eax,0x7fffffff
   14002515d:	cmove  edx,eax
   140025160:	test   esi,esi
   140025162:	jne    0x1400252fb
   140025168:	mov    rbx,QWORD PTR [r13+0x0]
   14002516c:	add    r13,0x8
   140025170:	jmp    0x140025335
   140025175:	test   r15d,0x830
   14002517c:	jne    0x140025183
   14002517e:	bts    r15d,0xb
   140025183:	test   r15d,0x810
   14002518a:	je     0x140025204
   14002518c:	test   esi,esi
   14002518e:	jne    0x14002519b
   140025190:	movzx  r9d,WORD PTR [r13+0x0]
   140025195:	add    r13,0x8
   140025199:	jmp    0x1400251e2
   14002519b:	cmp    r12d,0x63
   14002519f:	ja     0x140025114
   1400251a5:	movsxd rax,r12d
   1400251a8:	lea    rcx,[rax+rax*2]
   1400251ac:	test   r8,r8
   1400251af:	jne    0x1400251d6
   1400251b1:	lea    rax,[rbp+0x1f0]
   1400251b8:	lea    rax,[rax+rcx*8]
   1400251bc:	cmp    DWORD PTR [rax],r10d
   1400251bf:	jne    0x1400251cc
   1400251c1:	mov    DWORD PTR [rax],0x2
   1400251c7:	jmp    0x1400250e4
   1400251cc:	mov    edx,0x2
   1400251d1:	jmp    0x1400250fe
   1400251d6:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400251de:	movzx  r9d,WORD PTR [rax]
   1400251e2:	lea    rdx,[rbp-0x10]
   1400251e6:	lea    rcx,[rsp+0x54]
   1400251eb:	mov    r8d,0x200
   1400251f1:	call   0x14001f4b4
   1400251f6:	test   eax,eax
   1400251f8:	je     0x140025240
   1400251fa:	mov    DWORD PTR [rsp+0x44],0x1
   140025202:	jmp    0x140025240
   140025204:	test   esi,esi
   140025206:	jne    0x140025213
   140025208:	movzx  eax,WORD PTR [r13+0x0]
   14002520d:	add    r13,0x8
   140025211:	jmp    0x140025238
   140025213:	cmp    r12d,0x63
   140025217:	ja     0x140025114
   14002521d:	movsxd rax,r12d
   140025220:	lea    rcx,[rax+rax*2]
   140025224:	test   r8,r8
   140025227:	je     0x140025535
   14002522d:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025235:	movzx  eax,WORD PTR [rax]
   140025238:	mov    BYTE PTR [rbp-0x10],al
   14002523b:	mov    DWORD PTR [rsp+0x54],r11d
   140025240:	lea    rbx,[rbp-0x10]
   140025244:	jmp    0x14002581f
   140025249:	mov    DWORD PTR [rax],r11d
   14002524c:	jmp    0x1400250e4
   140025251:	mov    DWORD PTR [rbp-0x74],r11d
   140025255:	add    r14b,0x20
   140025259:	or     r15d,0x40
   14002525d:	cmp    esi,r11d
   140025260:	jne    0x1400256eb
   140025266:	test   r8,r8
   140025269:	jne    0x1400256eb
   14002526f:	cmp    r12d,0x63
   140025273:	ja     0x140025114
   140025279:	movsxd rax,r12d
   14002527c:	lea    rcx,[rax+rax*2]
   140025280:	lea    rax,[rbp+0x1f0]
   140025287:	lea    rax,[rax+rcx*8]
   14002528b:	cmp    DWORD PTR [rax],r10d
   14002528e:	jne    0x1400256c6
   140025294:	mov    DWORD PTR [rax],0x8
   14002529a:	mov    BYTE PTR [rbp+rcx*8+0x200],r14b
   1400252a2:	mov    DWORD PTR [rbp+rcx*8+0x204],r15d
   1400252aa:	jmp    0x140025ce1
   1400252af:	cmp    ecx,0x67
   1400252b2:	jle    0x140025259
   1400252b4:	cmp    ecx,0x69
   1400252b7:	je     0x140025446
   1400252bd:	cmp    ecx,0x6e
   1400252c0:	je     0x1400253e7
   1400252c6:	cmp    ecx,0x6f
   1400252c9:	je     0x1400253d2
   1400252cf:	cmp    ecx,0x70
   1400252d2:	je     0x140025395
   1400252d8:	cmp    ecx,0x73
   1400252db:	je     0x140025153
   1400252e1:	cmp    ecx,0x75
   1400252e4:	je     0x14002544a
   1400252ea:	cmp    ecx,0x78
   1400252ed:	jne    0x14002581f
   1400252f3:	lea    eax,[rcx-0x51]
   1400252f6:	jmp    0x1400253a8
   1400252fb:	cmp    r12d,0x63
   1400252ff:	ja     0x140025114
   140025305:	movsxd rax,r12d
   140025308:	lea    rcx,[rax+rax*2]
   14002530c:	test   r8,r8
   14002530f:	jne    0x14002532a
   140025311:	lea    rax,[rbp+0x1f0]
   140025318:	lea    rax,[rax+rcx*8]
   14002531c:	cmp    DWORD PTR [rax],r10d
   14002531f:	je     0x1400250de
   140025325:	jmp    0x1400250f9
   14002532a:	mov    rbx,QWORD PTR [rbp+rcx*8+0x1f8]
   140025332:	mov    rbx,QWORD PTR [rbx]
   140025335:	test   r15d,0x810
   14002533c:	je     0x14002536f
   14002533e:	test   rbx,rbx
   140025341:	mov    DWORD PTR [rsp+0x68],r11d
   140025346:	cmove  rbx,QWORD PTR [rip+0x17eda]        # 0x14003d228
   14002534e:	mov    rax,rbx
   140025351:	jmp    0x140025360
   140025353:	sub    edx,r11d
   140025356:	cmp    WORD PTR [rax],r10w
   14002535a:	je     0x140025364
   14002535c:	add    rax,0x2
   140025360:	test   edx,edx
   140025362:	jne    0x140025353
   140025364:	sub    rax,rbx
   140025367:	sar    rax,1
   14002536a:	jmp    0x14002581b
   14002536f:	test   rbx,rbx
   140025372:	cmove  rbx,QWORD PTR [rip+0x17ea6]        # 0x14003d220
   14002537a:	mov    rax,rbx
   14002537d:	jmp    0x14002538a
   14002537f:	sub    edx,r11d
   140025382:	cmp    BYTE PTR [rax],r10b
   140025385:	je     0x14002538e
   140025387:	add    rax,r11
   14002538a:	test   edx,edx
   14002538c:	jne    0x14002537f
   14002538e:	sub    eax,ebx
   140025390:	jmp    0x14002581b
   140025395:	mov    edi,0x10
   14002539a:	bts    r15d,0xf
   14002539f:	mov    DWORD PTR [rsp+0x48],edi
   1400253a3:	mov    eax,0x7
   1400253a8:	mov    DWORD PTR [rbp-0x70],eax
   1400253ab:	mov    r9d,0x10
   1400253b1:	test   r15b,r15b
   1400253b4:	jns    0x140025450
   1400253ba:	lea    edx,[r9-0xe]
   1400253be:	add    al,0x51
   1400253c0:	mov    BYTE PTR [rsp+0x58],0x30
   1400253c5:	mov    DWORD PTR [rsp+0x50],edx
   1400253c9:	mov    BYTE PTR [rsp+0x59],al
   1400253cd:	jmp    0x140025454
   1400253d2:	mov    r9d,0x8
   1400253d8:	test   r15b,r15b
   1400253db:	jns    0x140025450
   1400253dd:	mov    eax,0x200
   1400253e2:	or     r15d,eax
   1400253e5:	jmp    0x140025450
   1400253e7:	test   esi,esi
   1400253e9:	jne    0x1400253f5
   1400253eb:	mov    rdi,QWORD PTR [r13+0x0]
   1400253ef:	add    r13,0x8
   1400253f3:	jmp    0x14002541a
   1400253f5:	cmp    r12d,0x63
   1400253f9:	ja     0x140025114
   1400253ff:	movsxd rax,r12d
   140025402:	lea    rcx,[rax+rax*2]
   140025406:	test   r8,r8
   140025409:	je     0x140025311
   14002540f:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025417:	mov    rdi,QWORD PTR [rax]
   14002541a:	call   0x140012070
   14002541f:	test   eax,eax
   140025421:	je     0x140025114
   140025427:	mov    eax,DWORD PTR [rsp+0x4c]
   14002542b:	test   r15b,0x20
   14002542f:	je     0x140025436
   140025431:	mov    WORD PTR [rdi],ax
   140025434:	jmp    0x140025438
   140025436:	mov    DWORD PTR [rdi],eax
   140025438:	mov    eax,0x1
   14002543d:	mov    DWORD PTR [rsp+0x44],eax
   140025441:	jmp    0x140025823
   140025446:	or     r15d,0x40
   14002544a:	mov    r9d,0xa
   140025450:	mov    edx,DWORD PTR [rsp+0x50]
   140025454:	bt     r15d,0xf
   140025459:	jae    0x1400254a7
   14002545b:	test   esi,esi
   14002545d:	jne    0x14002546c
   14002545f:	mov    r8,QWORD PTR [r13+0x0]
   140025463:	add    r13,0x8
   140025467:	jmp    0x140025606
   14002546c:	cmp    r12d,0x63
   140025470:	ja     0x140025114
   140025476:	movsxd rax,r12d
   140025479:	lea    rcx,[rax+rax*2]
   14002547d:	test   r8,r8
   140025480:	jne    0x1400254ed
   140025482:	lea    rax,[rbp+0x1f0]
   140025489:	lea    rax,[rax+rcx*8]
   14002548d:	cmp    DWORD PTR [rax],r10d
   140025490:	jne    0x14002549d
   140025492:	mov    DWORD PTR [rax],0x4
   140025498:	jmp    0x1400250e4
   14002549d:	mov    edx,0x4
   1400254a2:	jmp    0x1400250fe
   1400254a7:	bt     r15d,0xc
   1400254ac:	jae    0x1400254fd
   1400254ae:	test   esi,esi
   1400254b0:	je     0x14002545f
   1400254b2:	cmp    r12d,0x63
   1400254b6:	ja     0x140025114
   1400254bc:	movsxd rax,r12d
   1400254bf:	lea    rcx,[rax+rax*2]
   1400254c3:	test   r8,r8
   1400254c6:	jne    0x1400254ed
   1400254c8:	lea    rax,[rbp+0x1f0]
   1400254cf:	lea    rax,[rax+rcx*8]
   1400254d3:	cmp    DWORD PTR [rax],r10d
   1400254d6:	jne    0x1400254e3
   1400254d8:	mov    DWORD PTR [rax],0x5
   1400254de:	jmp    0x1400250e4
   1400254e3:	mov    edx,0x5
   1400254e8:	jmp    0x1400250fe
   1400254ed:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400254f5:	mov    r8,QWORD PTR [rax]
   1400254f8:	jmp    0x140025606
   1400254fd:	test   r15b,0x20
   140025501:	je     0x140025598
   140025507:	test   r15b,0x40
   14002550b:	je     0x140025562
   14002550d:	test   esi,esi
   14002550f:	jne    0x14002551f
   140025511:	movsx  r8,WORD PTR [r13+0x0]
   140025516:	add    r13,0x8
   14002551a:	jmp    0x140025606
   14002551f:	cmp    r12d,0x63
   140025523:	ja     0x140025114
   140025529:	movsxd rax,r12d
   14002552c:	lea    rcx,[rax+rax*2]
   140025530:	test   r8,r8
   140025533:	jne    0x140025551
   140025535:	lea    rax,[rbp+0x1f0]
   14002553c:	lea    rax,[rax+rcx*8]
   140025540:	cmp    DWORD PTR [rax],r10d
   140025543:	je     0x140025249
   140025549:	mov    edx,r11d
   14002554c:	jmp    0x1400250fe
   140025551:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025559:	movsx  r8,WORD PTR [rax]
   14002555d:	jmp    0x140025606
   140025562:	test   esi,esi
   140025564:	jne    0x140025574
   140025566:	movzx  r8d,WORD PTR [r13+0x0]
   14002556b:	add    r13,0x8
   14002556f:	jmp    0x140025606
   140025574:	cmp    r12d,0x63
   140025578:	ja     0x140025114
   14002557e:	movsxd rax,r12d
   140025581:	lea    rcx,[rax+rax*2]
   140025585:	test   r8,r8
   140025588:	je     0x140025535
   14002558a:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025592:	movzx  r8d,WORD PTR [rax]
   140025596:	jmp    0x140025606
   140025598:	test   r15b,0x40
   14002559c:	je     0x1400255d3
   14002559e:	test   esi,esi
   1400255a0:	jne    0x1400255ac
   1400255a2:	movsxd r8,DWORD PTR [r13+0x0]
   1400255a6:	add    r13,0x8
   1400255aa:	jmp    0x140025606
   1400255ac:	cmp    r12d,0x63
   1400255b0:	ja     0x140025114
   1400255b6:	movsxd rax,r12d
   1400255b9:	lea    rcx,[rax+rax*2]
   1400255bd:	test   r8,r8
   1400255c0:	je     0x140025535
   1400255c6:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400255ce:	movsxd r8,DWORD PTR [rax]
   1400255d1:	jmp    0x140025606
   1400255d3:	test   esi,esi
   1400255d5:	jne    0x1400255e1
   1400255d7:	mov    r8d,DWORD PTR [r13+0x0]
   1400255db:	add    r13,0x8
   1400255df:	jmp    0x140025606
   1400255e1:	cmp    r12d,0x63
   1400255e5:	ja     0x140025114
   1400255eb:	movsxd rax,r12d
   1400255ee:	lea    rcx,[rax+rax*2]
   1400255f2:	test   r8,r8
   1400255f5:	je     0x140025535
   1400255fb:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025603:	mov    r8d,DWORD PTR [rax]
   140025606:	test   r15b,0x40
   14002560a:	je     0x140025619
   14002560c:	test   r8,r8
   14002560f:	jns    0x140025619
   140025611:	neg    r8
   140025614:	bts    r15d,0x8
   140025619:	bt     r15d,0xf
   14002561e:	jb     0x14002562a
   140025620:	bt     r15d,0xc
   140025625:	jb     0x14002562a
   140025627:	mov    r8d,r8d
   14002562a:	mov    esi,0x200
   14002562f:	test   edi,edi
   140025631:	jns    0x140025638
   140025633:	mov    edi,r11d
   140025636:	jmp    0x140025641
   140025638:	and    r15d,0xfffffff7
   14002563c:	cmp    edi,esi
   14002563e:	cmovg  edi,esi
   140025641:	mov    r12d,DWORD PTR [rbp-0x70]
   140025645:	mov    rax,r8
   140025648:	lea    rbx,[rbp+0x1ef]
   14002564f:	neg    rax
   140025652:	sbb    ecx,ecx
   140025654:	and    ecx,edx
   140025656:	mov    DWORD PTR [rsp+0x50],ecx
   14002565a:	mov    ecx,edi
   14002565c:	sub    edi,r11d
   14002565f:	test   ecx,ecx
   140025661:	jg     0x140025668
   140025663:	test   r8,r8
   140025666:	je     0x140025688
   140025668:	xor    edx,edx
   14002566a:	mov    rax,r8
   14002566d:	movsxd rcx,r9d
   140025670:	div    rcx
   140025673:	mov    r8,rax
   140025676:	lea    eax,[rdx+0x30]
   140025679:	cmp    eax,0x39
   14002567c:	jle    0x140025681
   14002567e:	add    eax,r12d
   140025681:	mov    BYTE PTR [rbx],al
   140025683:	sub    rbx,r11
   140025686:	jmp    0x14002565a
   140025688:	mov    r12d,DWORD PTR [rbp-0x60]
   14002568c:	lea    rax,[rbp+0x1ef]
   140025693:	mov    DWORD PTR [rsp+0x48],edi
   140025697:	sub    eax,ebx
   140025699:	add    rbx,r11
   14002569c:	mov    DWORD PTR [rsp+0x54],eax
   1400256a0:	test   esi,r15d
   1400256a3:	je     0x14002581f
   1400256a9:	test   eax,eax
   1400256ab:	je     0x1400256b6
   1400256ad:	cmp    BYTE PTR [rbx],0x30
   1400256b0:	je     0x14002581f
   1400256b6:	sub    rbx,r11
   1400256b9:	add    DWORD PTR [rsp+0x54],r11d
   1400256be:	mov    BYTE PTR [rbx],0x30
   1400256c1:	jmp    0x14002581f
   1400256c6:	mov    r8b,r14b
   1400256c9:	mov    edx,0x8
   1400256ce:	mov    r9d,r15d
   1400256d1:	mov    rcx,rax
   1400256d4:	call   0x140025dd4
   1400256d9:	test   eax,eax
   1400256db:	je     0x140025114
   1400256e1:	mov    r8,QWORD PTR [rsp+0x70]
   1400256e6:	jmp    0x140025cdc
   1400256eb:	mov    eax,0x200
   1400256f0:	lea    rbx,[rbp-0x10]
   1400256f4:	mov    esi,eax
   1400256f6:	test   edi,edi
   1400256f8:	jns    0x140025704
   1400256fa:	mov    DWORD PTR [rsp+0x48],0x6
   140025702:	jmp    0x14002574d
   140025704:	jne    0x140025713
   140025706:	cmp    r14b,0x67
   14002570a:	jne    0x14002574d
   14002570c:	mov    DWORD PTR [rsp+0x48],r11d
   140025711:	jmp    0x14002574d
   140025713:	cmp    edi,eax
   140025715:	cmovg  edi,eax
   140025718:	mov    DWORD PTR [rsp+0x48],edi
   14002571c:	cmp    edi,0xa3
   140025722:	jle    0x14002574d
   140025724:	add    edi,0x15d
   14002572a:	movsxd rcx,edi
   14002572d:	call   0x140008684
   140025732:	xor    r10d,r10d
   140025735:	mov    QWORD PTR [rbp-0x50],rax
   140025739:	test   rax,rax
   14002573c:	je     0x140025745
   14002573e:	mov    rbx,rax
   140025741:	mov    esi,edi
   140025743:	jmp    0x14002574d
   140025745:	mov    DWORD PTR [rsp+0x48],0xa3
   14002574d:	cmp    DWORD PTR [rsp+0x78],r10d
   140025752:	jne    0x140025762
   140025754:	mov    rax,QWORD PTR [r13+0x0]
   140025758:	add    r13,0x8
   14002575c:	mov    QWORD PTR [rbp-0x40],rax
   140025760:	jmp    0x140025782
   140025762:	cmp    r12d,0x63
   140025766:	ja     0x140025114
   14002576c:	movsxd rax,r12d
   14002576f:	lea    rcx,[rax+rax*2]
   140025773:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   14002577b:	mov    rcx,QWORD PTR [rax]
   14002577e:	mov    QWORD PTR [rbp-0x40],rcx
   140025782:	mov    rcx,QWORD PTR [rip+0x16a87]        # 0x14003c210
   140025789:	movsx  edi,r14b
   14002578d:	movsxd rsi,esi
   140025790:	call   QWORD PTR [rip+0x6982]        # 0x14002c118
   140025796:	lea    rcx,[rbp-0x30]
   14002579a:	mov    r9d,edi
   14002579d:	mov    QWORD PTR [rsp+0x30],rcx
   1400257a2:	mov    ecx,DWORD PTR [rbp-0x74]
   1400257a5:	mov    r8,rsi
   1400257a8:	mov    DWORD PTR [rsp+0x28],ecx
   1400257ac:	mov    ecx,DWORD PTR [rsp+0x48]
   1400257b0:	mov    rdx,rbx
   1400257b3:	mov    DWORD PTR [rsp+0x20],ecx
   1400257b7:	lea    rcx,[rbp-0x40]
   1400257bb:	call   rax
   1400257bd:	mov    edi,r15d
   1400257c0:	and    edi,0x80
   1400257c6:	je     0x1400257e6
   1400257c8:	xor    eax,eax
   1400257ca:	cmp    DWORD PTR [rsp+0x48],eax
   1400257ce:	jne    0x1400257e6
   1400257d0:	mov    rcx,QWORD PTR [rip+0x16a51]        # 0x14003c228
   1400257d7:	call   QWORD PTR [rip+0x693b]        # 0x14002c118
   1400257dd:	lea    rdx,[rbp-0x30]
   1400257e1:	mov    rcx,rbx
   1400257e4:	call   rax
   1400257e6:	cmp    r14b,0x67
   1400257ea:	jne    0x140025806
   1400257ec:	test   edi,edi
   1400257ee:	jne    0x140025806
   1400257f0:	mov    rcx,QWORD PTR [rip+0x16a29]        # 0x14003c220
   1400257f7:	call   QWORD PTR [rip+0x691b]        # 0x14002c118
   1400257fd:	lea    rdx,[rbp-0x30]
   140025801:	mov    rcx,rbx
   140025804:	call   rax
   140025806:	cmp    BYTE PTR [rbx],0x2d
   140025809:	jne    0x140025813
   14002580b:	bts    r15d,0x8
   140025810:	inc    rbx
   140025813:	mov    rcx,rbx
   140025816:	call   0x140007550
   14002581b:	mov    DWORD PTR [rsp+0x54],eax
   14002581f:	mov    eax,DWORD PTR [rsp+0x44]
   140025823:	cmp    DWORD PTR [rsp+0x78],0x1
   140025828:	jne    0x140025838
   14002582a:	mov    r8,QWORD PTR [rsp+0x70]
   14002582f:	test   r8,r8
   140025832:	je     0x140025cd8
   140025838:	test   eax,eax
   14002583a:	jne    0x14002598d
   140025840:	test   r15b,0x40
   140025844:	je     0x140025877
   140025846:	bt     r15d,0x8
   14002584b:	jae    0x140025854
   14002584d:	mov    BYTE PTR [rsp+0x58],0x2d
   140025852:	jmp    0x14002585f
   140025854:	test   r15b,0x1
   140025858:	je     0x14002586a
   14002585a:	mov    BYTE PTR [rsp+0x58],0x2b
   14002585f:	mov    edi,0x1
   140025864:	mov    DWORD PTR [rsp+0x50],edi
   140025868:	jmp    0x14002587b
   14002586a:	test   r15b,0x2
   14002586e:	je     0x140025877
   140025870:	mov    BYTE PTR [rsp+0x58],0x20
   140025875:	jmp    0x14002585f
   140025877:	mov    edi,DWORD PTR [rsp+0x50]
   14002587b:	mov    r14d,DWORD PTR [rsp+0x5c]
   140025880:	mov    rsi,QWORD PTR [rbp-0x68]
   140025884:	sub    r14d,DWORD PTR [rsp+0x54]
   140025889:	sub    r14d,edi
   14002588c:	test   r15b,0xc
   140025890:	jne    0x1400258a4
   140025892:	lea    r9,[rsp+0x4c]
   140025897:	mov    r8,rsi
   14002589a:	mov    edx,r14d
   14002589d:	mov    cl,0x20
   14002589f:	call   0x140025f4c
   1400258a4:	mov    rax,QWORD PTR [rbp-0x58]
   1400258a8:	lea    r9,[rsp+0x4c]
   1400258ad:	lea    rcx,[rsp+0x58]
   1400258b2:	mov    r8,rsi
   1400258b5:	mov    edx,edi
   1400258b7:	mov    QWORD PTR [rsp+0x20],rax
   1400258bc:	call   0x140025fa0
   1400258c1:	test   r15b,0x8
   1400258c5:	je     0x1400258df
   1400258c7:	test   r15b,0x4
   1400258cb:	jne    0x1400258df
   1400258cd:	lea    r9,[rsp+0x4c]
   1400258d2:	mov    r8,rsi
   1400258d5:	mov    edx,r14d
   1400258d8:	mov    cl,0x30
   1400258da:	call   0x140025f4c
   1400258df:	mov    edi,DWORD PTR [rsp+0x54]
   1400258e3:	xor    eax,eax
   1400258e5:	cmp    DWORD PTR [rsp+0x68],eax
   1400258e9:	je     0x140025952
   1400258eb:	test   edi,edi
   1400258ed:	jle    0x140025952
   1400258ef:	mov    rsi,rbx
   1400258f2:	movzx  r9d,WORD PTR [rsi]
   1400258f6:	lea    rdx,[rbp+0xb50]
   1400258fd:	lea    rcx,[rbp-0x48]
   140025901:	mov    r8d,0x6
   140025907:	dec    edi
   140025909:	lea    rsi,[rsi+0x2]
   14002590d:	call   0x14001f4b4
   140025912:	test   eax,eax
   140025914:	jne    0x140025945
   140025916:	mov    edx,DWORD PTR [rbp-0x48]
   140025919:	test   edx,edx
   14002591b:	je     0x140025945
   14002591d:	mov    rax,QWORD PTR [rbp-0x58]
   140025921:	mov    r8,QWORD PTR [rbp-0x68]
   140025925:	lea    r9,[rsp+0x4c]
   14002592a:	lea    rcx,[rbp+0xb50]
   140025931:	mov    QWORD PTR [rsp+0x20],rax
   140025936:	call   0x140025fa0
   14002593b:	test   edi,edi
   14002593d:	jne    0x1400258f2
   14002593f:	mov    rsi,QWORD PTR [rbp-0x68]
   140025943:	jmp    0x14002596d
   140025945:	mov    rsi,QWORD PTR [rbp-0x68]
   140025949:	or     eax,0xffffffff
   14002594c:	mov    DWORD PTR [rsp+0x4c],eax
   140025950:	jmp    0x140025971
   140025952:	mov    rax,QWORD PTR [rbp-0x58]
   140025956:	lea    r9,[rsp+0x4c]
   14002595b:	mov    r8,rsi
   14002595e:	mov    edx,edi
   140025960:	mov    rcx,rbx
   140025963:	mov    QWORD PTR [rsp+0x20],rax
   140025968:	call   0x140025fa0
   14002596d:	mov    eax,DWORD PTR [rsp+0x4c]
   140025971:	test   eax,eax
   140025973:	js     0x14002598d
   140025975:	test   r15b,0x4
   140025979:	je     0x14002598d
   14002597b:	lea    r9,[rsp+0x4c]
   140025980:	mov    r8,rsi
   140025983:	mov    edx,r14d
   140025986:	mov    cl,0x20
   140025988:	call   0x140025f4c
   14002598d:	mov    rax,QWORD PTR [rbp-0x50]
   140025991:	test   rax,rax
   140025994:	je     0x1400259a5
   140025996:	mov    rcx,rax
   140025999:	call   0x140007dc0
   14002599e:	xor    r10d,r10d
   1400259a1:	mov    QWORD PTR [rbp-0x50],r10
   1400259a5:	mov    edi,DWORD PTR [rsp+0x48]
   1400259a9:	jmp    0x1400256e1
   1400259ae:	cmp    r14b,0x49
   1400259b2:	je     0x1400259fd
   1400259b4:	cmp    r14b,0x68
   1400259b8:	je     0x1400259f4
   1400259ba:	cmp    r14b,0x6c
   1400259be:	je     0x1400259d4
   1400259c0:	cmp    r14b,0x77
   1400259c4:	jne    0x140025ce1
   1400259ca:	bts    r15d,0xb
   1400259cf:	jmp    0x140025ce1
   1400259d4:	cmp    BYTE PTR [r9],0x6c
   1400259d8:	mov    edx,DWORD PTR [rsp+0x40]
   1400259dc:	jne    0x1400259eb
   1400259de:	add    r9,r11
   1400259e1:	bts    r15d,0xc
   1400259e6:	jmp    0x140025ce5
   1400259eb:	or     r15d,0x10
   1400259ef:	jmp    0x140025ce5
   1400259f4:	or     r15d,0x20
   1400259f8:	jmp    0x140025ce1
   1400259fd:	mov    al,BYTE PTR [r9]
   140025a00:	mov    ecx,0x8000
   140025a05:	or     r15d,ecx
   140025a08:	cmp    al,0x36
   140025a0a:	jne    0x140025a1f
   140025a0c:	cmp    BYTE PTR [r9+0x1],0x34
   140025a11:	jne    0x140025a1f
   140025a13:	add    r9,0x2
   140025a17:	or     r15d,ecx
   140025a1a:	jmp    0x140025ce1
   140025a1f:	cmp    al,0x33
   140025a21:	jne    0x140025a38
   140025a23:	cmp    BYTE PTR [r9+0x1],0x32
   140025a28:	jne    0x140025a38
   140025a2a:	add    r9,0x2
   140025a2e:	btr    r15d,0xf
   140025a33:	jmp    0x140025ce1
   140025a38:	sub    al,0x58
   140025a3a:	cmp    al,0x20
   140025a3c:	ja     0x140025a58
   140025a3e:	movabs rcx,0x120821001
   140025a48:	bt     rcx,rax
   140025a4c:	jae    0x140025a58
   140025a4e:	bts    r15d,0x10
   140025a53:	jmp    0x140025ce1
   140025a58:	mov    DWORD PTR [rbp-0x78],r10d
   140025a5c:	jmp    0x140025c82
   140025a61:	cmp    r14b,0x2a
   140025a65:	jne    0x140025b3e
   140025a6b:	test   esi,esi
   140025a6d:	jne    0x140025a7c
   140025a6f:	mov    edi,DWORD PTR [r13+0x0]
   140025a73:	add    r13,0x8
   140025a77:	jmp    0x140025b22
   140025a7c:	lea    rdx,[rbp-0x80]
   140025a80:	mov    r8d,0xa
   140025a86:	mov    rcx,r9
   140025a89:	call   0x140026be8
   140025a8e:	mov    rcx,QWORD PTR [rbp-0x80]
   140025a92:	mov    r8,QWORD PTR [rsp+0x70]
   140025a97:	lea    r9,[rcx+0x1]
   140025a9b:	mov    r11d,0x1
   140025aa1:	xor    r10d,r10d
   140025aa4:	sub    eax,r11d
   140025aa7:	mov    QWORD PTR [rsp+0x60],r9
   140025aac:	test   r8,r8
   140025aaf:	jne    0x140025b12
   140025ab1:	test   eax,eax
   140025ab3:	js     0x140025114
   140025ab9:	cmp    BYTE PTR [rcx],0x24
   140025abc:	jne    0x140025114
   140025ac2:	cmp    r12d,0x64
   140025ac6:	jge    0x140025114
   140025acc:	mov    edx,DWORD PTR [rsp+0x40]
   140025ad0:	cmp    eax,edx
   140025ad2:	cmovg  edx,eax
   140025ad5:	cdqe   
   140025ad7:	lea    rcx,[rax+rax*2]
   140025adb:	lea    rax,[rbp+0x1f0]
   140025ae2:	mov    DWORD PTR [rsp+0x40],edx
   140025ae6:	lea    rax,[rax+rcx*8]
   140025aea:	cmp    DWORD PTR [rax],r10d
   140025aed:	jne    0x140025b07
   140025aef:	mov    DWORD PTR [rax],r11d
   140025af2:	mov    BYTE PTR [rbp+rcx*8+0x200],0x2a
   140025afa:	mov    DWORD PTR [rbp+rcx*8+0x204],r15d
   140025b02:	jmp    0x140025ce5
   140025b07:	mov    r8b,0x2a
   140025b0a:	mov    edx,r11d
   140025b0d:	jmp    0x1400256ce
   140025b12:	cdqe   
   140025b14:	lea    rcx,[rax+rax*2]
   140025b18:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025b20:	mov    edi,DWORD PTR [rax]
   140025b22:	mov    edx,DWORD PTR [rsp+0x40]
   140025b26:	mov    DWORD PTR [rsp+0x48],edi
   140025b2a:	test   edi,edi
   140025b2c:	jns    0x140025ce5
   140025b32:	or     edi,0xffffffff
   140025b35:	mov    DWORD PTR [rsp+0x48],edi
   140025b39:	jmp    0x140025ce5
   140025b3e:	lea    edi,[rdi+rdi*4]
   140025b41:	movsx  eax,r14b
   140025b45:	lea    edi,[rdi-0x18]
   140025b48:	lea    edi,[rax+rdi*2]
   140025b4b:	mov    DWORD PTR [rsp+0x48],edi
   140025b4f:	jmp    0x140025ce1
   140025b54:	mov    edi,r10d
   140025b57:	mov    DWORD PTR [rsp+0x48],r10d
   140025b5c:	jmp    0x140025ce1
   140025b61:	cmp    r14b,0x2a
   140025b65:	jne    0x140025bdd
   140025b67:	test   esi,esi
   140025b69:	jne    0x140025b75
   140025b6b:	mov    eax,DWORD PTR [r13+0x0]
   140025b6f:	add    r13,0x8
   140025b73:	jmp    0x140025bbe
   140025b75:	lea    rdx,[rbp-0x80]
   140025b79:	mov    r8d,0xa
   140025b7f:	mov    rcx,r9
   140025b82:	call   0x140026be8
   140025b87:	mov    rcx,QWORD PTR [rbp-0x80]
   140025b8b:	mov    r8,QWORD PTR [rsp+0x70]
   140025b90:	lea    r9,[rcx+0x1]
   140025b94:	mov    r11d,0x1
   140025b9a:	xor    r10d,r10d
   140025b9d:	sub    eax,r11d
   140025ba0:	mov    QWORD PTR [rsp+0x60],r9
   140025ba5:	test   r8,r8
   140025ba8:	je     0x140025ab1
   140025bae:	cdqe   
   140025bb0:	lea    rcx,[rax+rax*2]
   140025bb4:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140025bbc:	mov    eax,DWORD PTR [rax]
   140025bbe:	mov    edx,DWORD PTR [rsp+0x40]
   140025bc2:	mov    DWORD PTR [rsp+0x5c],eax
   140025bc6:	test   eax,eax
   140025bc8:	jns    0x140025ce5
   140025bce:	or     r15d,0x4
   140025bd2:	neg    eax
   140025bd4:	mov    DWORD PTR [rsp+0x5c],eax
   140025bd8:	jmp    0x140025ce5
   140025bdd:	mov    eax,DWORD PTR [rsp+0x5c]
   140025be1:	lea    ecx,[rax+rax*4]
   140025be4:	movsx  eax,r14b
   140025be8:	lea    eax,[rax+rcx*2]
   140025beb:	add    eax,0xffffffd0
   140025bee:	mov    DWORD PTR [rsp+0x5c],eax
   140025bf2:	jmp    0x140025ce1
   140025bf7:	cmp    r14b,0x20
   140025bfb:	je     0x140025c41
   140025bfd:	cmp    r14b,0x23
   140025c01:	je     0x140025c37
   140025c03:	cmp    r14b,0x2b
   140025c07:	je     0x140025c2f
   140025c09:	cmp    r14b,0x2d
   140025c0d:	je     0x140025c26
   140025c0f:	mov    edx,DWORD PTR [rsp+0x40]
   140025c13:	cmp    r14b,0x30
   140025c17:	jne    0x140025ce5
   140025c1d:	or     r15d,0x8
   140025c21:	jmp    0x140025ce5
   140025c26:	or     r15d,0x4
   140025c2a:	jmp    0x140025ce1
   140025c2f:	or     r15d,r11d
   140025c32:	jmp    0x140025ce1
   140025c37:	bts    r15d,0x7
   140025c3c:	jmp    0x140025ce1
   140025c41:	or     r15d,0x2
   140025c45:	jmp    0x140025ce1
   140025c4a:	or     edi,0xffffffff
   140025c4d:	mov    DWORD PTR [rbp-0x74],r10d
   140025c51:	mov    DWORD PTR [rsp+0x44],r10d
   140025c56:	mov    DWORD PTR [rsp+0x5c],r10d
   140025c5b:	mov    DWORD PTR [rsp+0x50],r10d
   140025c60:	mov    r15d,r10d
   140025c63:	mov    DWORD PTR [rsp+0x48],edi
   140025c67:	mov    DWORD PTR [rsp+0x68],r10d
   140025c6c:	jmp    0x140025ce1
   140025c6e:	test   r8,r8
   140025c71:	jne    0x140025c78
   140025c73:	cmp    esi,r11d
   140025c76:	je     0x140025ce1
   140025c78:	cmp    r8,r11
   140025c7b:	jne    0x140025c82
   140025c7d:	cmp    esi,0xffffffff
   140025c80:	je     0x140025ce1
   140025c82:	lea    rdx,[rbp-0x30]
   140025c86:	movzx  ecx,r14b
   140025c8a:	mov    DWORD PTR [rsp+0x68],r10d
   140025c8f:	call   0x140011e44
   140025c94:	test   eax,eax
   140025c96:	je     0x140025cc2
   140025c98:	mov    rdx,QWORD PTR [rbp-0x68]
   140025c9c:	lea    r8,[rsp+0x4c]
   140025ca1:	mov    cl,r14b
   140025ca4:	call   0x140025f04
   140025ca9:	mov    rax,QWORD PTR [rsp+0x60]
   140025cae:	mov    r14b,BYTE PTR [rax]
   140025cb1:	inc    rax
   140025cb4:	mov    QWORD PTR [rsp+0x60],rax
   140025cb9:	test   r14b,r14b
   140025cbc:	je     0x140025114
   140025cc2:	mov    rdx,QWORD PTR [rbp-0x68]
   140025cc6:	lea    r8,[rsp+0x4c]
   140025ccb:	mov    cl,r14b
   140025cce:	call   0x140025f04
   140025cd3:	jmp    0x1400256e1
   140025cd8:	mov    edi,DWORD PTR [rsp+0x48]
   140025cdc:	mov    r9,QWORD PTR [rsp+0x60]
   140025ce1:	mov    edx,DWORD PTR [rsp+0x40]
   140025ce5:	mov    r14b,BYTE PTR [r9]
   140025ce8:	mov    esi,DWORD PTR [rsp+0x78]
   140025cec:	mov    r10d,DWORD PTR [rsp+0x4c]
   140025cf1:	mov    r11d,DWORD PTR [rbp-0x78]
   140025cf5:	test   r14b,r14b
   140025cf8:	jne    0x140024e93
   140025cfe:	xor    edi,edi
   140025d00:	test   r11d,r11d
   140025d03:	je     0x140025d0b
   140025d05:	cmp    r11d,0x7
   140025d09:	jne    0x140025d7c
   140025d0b:	mov    ecx,DWORD PTR [rsp+0x7c]
   140025d0f:	cmp    esi,0x1
   140025d12:	jne    0x140025d64
   140025d14:	test   ecx,ecx
   140025d16:	jne    0x140025d64
   140025d18:	mov    r8,rdi
   140025d1b:	movsxd r9,edx
   140025d1e:	test   edx,edx
   140025d20:	js     0x140025d64
   140025d22:	lea    rdx,[rbp+0x1f8]
   140025d29:	mov    ecx,DWORD PTR [rdx-0x8]
   140025d2c:	dec    ecx
   140025d2e:	je     0x140025d49
   140025d30:	dec    ecx
   140025d32:	je     0x140025d49
   140025d34:	dec    ecx
   140025d36:	je     0x140025d49
   140025d38:	dec    ecx
   140025d3a:	je     0x140025d49
   140025d3c:	dec    ecx
   140025d3e:	je     0x140025d49
   140025d40:	dec    ecx
   140025d42:	je     0x140025d49
   140025d44:	cmp    ecx,0x2
   140025d47:	jne    0x140025d7c
   140025d49:	mov    QWORD PTR [rdx],r13
   140025d4c:	inc    r8
   140025d4f:	add    r13,0x8
   140025d53:	add    rdx,0x18
   140025d57:	cmp    r8,r9
   140025d5a:	jle    0x140025d29
   140025d5c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140025d60:	jmp    0x140025d64
   140025d62:	xor    edi,edi
   140025d64:	inc    ecx
   140025d66:	mov    DWORD PTR [rsp+0x7c],ecx
   140025d6a:	cmp    ecx,0x2
   140025d6d:	jge    0x140025d92
   140025d6f:	mov    r12,QWORD PTR [rbp-0x38]
   140025d73:	or     r14d,0xffffffff
   140025d77:	jmp    0x140024e42
   140025d7c:	call   0x140009cb4
   140025d81:	mov    DWORD PTR [rax],0x16
   140025d87:	call   0x140008d58
   140025d8c:	or     r14d,0xffffffff
   140025d90:	jmp    0x140025d95
   140025d92:	mov    r14d,r10d
   140025d95:	cmp    BYTE PTR [rbp-0x18],dil
   140025d99:	je     0x140025da6
   140025d9b:	mov    rcx,QWORD PTR [rbp-0x20]
   140025d9f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140025da6:	mov    eax,r14d
   140025da9:	mov    rcx,QWORD PTR [rbp+0xb58]
   140025db0:	xor    rcx,rsp
   140025db3:	call   0x14000c380
   140025db8:	mov    rbx,QWORD PTR [rsp+0xcb0]
   140025dc0:	add    rsp,0xc60
   140025dc7:	pop    r15
   140025dc9:	pop    r14
   140025dcb:	pop    r13
   140025dcd:	pop    r12
   140025dcf:	pop    rdi
   140025dd0:	pop    rsi
   140025dd1:	pop    rbp
   140025dd2:	ret    
   140025dd3:	int3   
   140025dd4:	mov    QWORD PTR [rsp+0x8],rbx
   140025dd9:	mov    QWORD PTR [rsp+0x10],rdi
   140025dde:	mov    QWORD PTR [rsp+0x18],r14
   140025de3:	mov    r10b,BYTE PTR [rcx+0x10]
   140025de7:	mov    ebx,r9d
   140025dea:	mov    edi,edx
   140025dec:	mov    r11,rcx
   140025def:	cmp    r10b,0x70
   140025df3:	je     0x140025edc
   140025df9:	cmp    r8b,0x70
   140025dfd:	je     0x140025edc
   140025e03:	lea    eax,[r10-0x53]
   140025e07:	mov    edx,0x0
   140025e0c:	test   al,0xdf
   140025e0e:	lea    eax,[r8-0x53]
   140025e12:	mov    ecx,edx
   140025e14:	sete   cl
   140025e17:	test   al,0xdf
   140025e19:	mov    eax,edx
   140025e1b:	sete   al
   140025e1e:	test   ecx,ecx
   140025e20:	jne    0x140025eb4
   140025e26:	test   eax,eax
   140025e28:	jne    0x140025ed6
   140025e2e:	lea    eax,[r10-0x58]
   140025e32:	movabs r14,0x120821001
   140025e3c:	cmp    al,0x20
   140025e3e:	ja     0x140025e4a
   140025e40:	movsx  rax,al
   140025e44:	bt     r14,rax
   140025e48:	jb     0x140025e5c
   140025e4a:	lea    eax,[r8-0x58]
   140025e4e:	cmp    al,0x20
   140025e50:	ja     0x140025eaf
   140025e52:	movsx  rax,al
   140025e56:	bt     r14,rax
   140025e5a:	jae    0x140025eaf
   140025e5c:	sub    r10b,0x58
   140025e60:	mov    ecx,0x1
   140025e65:	cmp    r10b,0x20
   140025e69:	ja     0x140025e78
   140025e6b:	movsx  rax,r10b
   140025e6f:	mov    r9d,ecx
   140025e72:	bt     r14,rax
   140025e76:	jb     0x140025e7b
   140025e78:	mov    r9d,edx
   140025e7b:	sub    r8b,0x58
   140025e7f:	cmp    r8b,0x20
   140025e83:	ja     0x140025e8f
   140025e85:	movsx  rax,r8b
   140025e89:	bt     r14,rax
   140025e8d:	jb     0x140025e91
   140025e8f:	mov    ecx,edx
   140025e91:	cmp    r9d,ecx
   140025e94:	je     0x140025e9a
   140025e96:	xor    eax,eax
   140025e98:	jmp    0x140025ee6
   140025e9a:	mov    ecx,DWORD PTR [r11+0x14]
   140025e9e:	mov    eax,ecx
   140025ea0:	xor    eax,ebx
   140025ea2:	bt     eax,0x10
   140025ea6:	jb     0x140025e96
   140025ea8:	xor    ecx,ebx
   140025eaa:	test   cl,0x20
   140025ead:	jne    0x140025e96
   140025eaf:	cmp    DWORD PTR [r11],edi
   140025eb2:	jmp    0x140025ee1
   140025eb4:	cmp    ecx,eax
   140025eb6:	jne    0x140025ed6
   140025eb8:	mov    eax,0x810
   140025ebd:	mov    ecx,edx
   140025ebf:	test   DWORD PTR [r11+0x14],eax
   140025ec3:	setne  cl
   140025ec6:	test   eax,ebx
   140025ec8:	mov    eax,edx
   140025eca:	setne  al
   140025ecd:	cmp    ecx,eax
   140025ecf:	mov    ecx,0x1
   140025ed4:	je     0x140025ed8
   140025ed6:	mov    ecx,edx
   140025ed8:	mov    eax,ecx
   140025eda:	jmp    0x140025ee6
   140025edc:	xor    edx,edx
   140025ede:	cmp    r10b,r8b
   140025ee1:	sete   dl
   140025ee4:	mov    eax,edx
   140025ee6:	mov    rbx,QWORD PTR [rsp+0x8]
   140025eeb:	mov    rdi,QWORD PTR [rsp+0x10]
   140025ef0:	mov    r14,QWORD PTR [rsp+0x18]
   140025ef5:	ret    
   140025ef6:	int3   
   140025ef7:	int3   
   140025ef8:	add    QWORD PTR [rcx],0x8
   140025efc:	mov    rax,QWORD PTR [rcx]
   140025eff:	mov    rax,QWORD PTR [rax-0x8]
   140025f03:	ret    
   140025f04:	rex push rbx
   140025f06:	sub    rsp,0x20
   140025f0a:	test   BYTE PTR [rdx+0x18],0x40
   140025f0e:	mov    rbx,r8
   140025f11:	je     0x140025f1f
   140025f13:	cmp    QWORD PTR [rdx+0x10],0x0
   140025f18:	jne    0x140025f1f
   140025f1a:	inc    DWORD PTR [r8]
   140025f1d:	jmp    0x140025f44
   140025f1f:	dec    DWORD PTR [rdx+0x8]
   140025f22:	js     0x140025f31
   140025f24:	mov    rax,QWORD PTR [rdx]
   140025f27:	mov    BYTE PTR [rax],cl
   140025f29:	inc    QWORD PTR [rdx]
   140025f2c:	movzx  eax,cl
   140025f2f:	jmp    0x140025f39
   140025f31:	movsx  ecx,cl
   140025f34:	call   0x140008e20
   140025f39:	cmp    eax,0xffffffff
   140025f3c:	jne    0x140025f42
   140025f3e:	or     DWORD PTR [rbx],eax
   140025f40:	jmp    0x140025f44
   140025f42:	inc    DWORD PTR [rbx]
   140025f44:	add    rsp,0x20
   140025f48:	pop    rbx
   140025f49:	ret    
   140025f4a:	int3   
   140025f4b:	int3   
   140025f4c:	test   edx,edx
   140025f4e:	jle    0x140025f9c
   140025f50:	mov    QWORD PTR [rsp+0x8],rbx
   140025f55:	mov    QWORD PTR [rsp+0x10],rbp
   140025f5a:	mov    QWORD PTR [rsp+0x18],rsi
   140025f5f:	push   rdi
   140025f60:	sub    rsp,0x20
   140025f64:	mov    rdi,r9
   140025f67:	mov    rsi,r8
   140025f6a:	mov    ebx,edx
   140025f6c:	mov    bpl,cl
   140025f6f:	mov    r8,rdi
   140025f72:	mov    rdx,rsi
   140025f75:	mov    cl,bpl
   140025f78:	dec    ebx
   140025f7a:	call   0x140025f04
   140025f7f:	cmp    DWORD PTR [rdi],0xffffffff
   140025f82:	je     0x140025f88
   140025f84:	test   ebx,ebx
   140025f86:	jg     0x140025f6f
   140025f88:	mov    rbx,QWORD PTR [rsp+0x30]
   140025f8d:	mov    rbp,QWORD PTR [rsp+0x38]
   140025f92:	mov    rsi,QWORD PTR [rsp+0x40]
   140025f97:	add    rsp,0x20
   140025f9b:	pop    rdi
   140025f9c:	ret    
   140025f9d:	int3   
   140025f9e:	int3   
   140025f9f:	int3   
   140025fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140025fa5:	mov    QWORD PTR [rsp+0x10],rbp
   140025faa:	mov    QWORD PTR [rsp+0x18],rsi
   140025faf:	push   rdi
   140025fb0:	push   r14
   140025fb2:	push   r15
   140025fb4:	sub    rsp,0x20
   140025fb8:	test   BYTE PTR [r8+0x18],0x40
   140025fbd:	mov    rbx,QWORD PTR [rsp+0x60]
   140025fc2:	mov    rdi,r9
   140025fc5:	mov    r15d,DWORD PTR [rbx]
   140025fc8:	mov    rbp,r8
   140025fcb:	mov    esi,edx
   140025fcd:	mov    r14,rcx
   140025fd0:	je     0x140025fde
   140025fd2:	cmp    QWORD PTR [r8+0x10],0x0
   140025fd7:	jne    0x140025fde
   140025fd9:	add    DWORD PTR [r9],edx
   140025fdc:	jmp    0x14002601b
   140025fde:	and    DWORD PTR [rbx],0x0
   140025fe1:	test   edx,edx
   140025fe3:	jle    0x140026018
   140025fe5:	mov    cl,BYTE PTR [r14]
   140025fe8:	mov    r8,rdi
   140025feb:	mov    rdx,rbp
   140025fee:	dec    esi
   140025ff0:	call   0x140025f04
   140025ff5:	inc    r14
   140025ff8:	cmp    DWORD PTR [rdi],0xffffffff
   140025ffb:	jne    0x14002600f
   140025ffd:	cmp    DWORD PTR [rbx],0x2a
   140026000:	jne    0x140026013
   140026002:	mov    r8,rdi
   140026005:	mov    rdx,rbp
   140026008:	mov    cl,0x3f
   14002600a:	call   0x140025f04
   14002600f:	test   esi,esi
   140026011:	jg     0x140025fe5
   140026013:	cmp    DWORD PTR [rbx],0x0
   140026016:	jne    0x14002601b
   140026018:	mov    DWORD PTR [rbx],r15d
   14002601b:	mov    rbx,QWORD PTR [rsp+0x40]
   140026020:	mov    rbp,QWORD PTR [rsp+0x48]
   140026025:	mov    rsi,QWORD PTR [rsp+0x50]
   14002602a:	add    rsp,0x20
   14002602e:	pop    r15
   140026030:	pop    r14
   140026032:	pop    rdi
   140026033:	ret    
   140026034:	sub    rsp,0x28
   140026038:	call   0x14000a3ec
   14002603d:	mov    rcx,QWORD PTR [rax+0xc0]
   140026044:	cmp    rcx,QWORD PTR [rip+0x17055]        # 0x14003d0a0
   14002604b:	je     0x140026063
   14002604d:	mov    eax,DWORD PTR [rax+0xc8]
   140026053:	test   DWORD PTR [rip+0x171bf],eax        # 0x14003d218
   140026059:	jne    0x140026063
   14002605b:	call   0x140011d10
   140026060:	mov    rcx,rax
   140026063:	mov    eax,DWORD PTR [rcx+0x4]
   140026066:	add    rsp,0x28
   14002606a:	ret    
   14002606b:	int3   
   14002606c:	sub    rsp,0x28
   140026070:	call   0x14000a3ec
   140026075:	mov    rcx,QWORD PTR [rax+0xc0]
   14002607c:	cmp    rcx,QWORD PTR [rip+0x1701d]        # 0x14003d0a0
   140026083:	je     0x14002609b
   140026085:	mov    eax,DWORD PTR [rax+0xc8]
   14002608b:	test   DWORD PTR [rip+0x17187],eax        # 0x14003d218
   140026091:	jne    0x14002609b
   140026093:	call   0x140011d10
   140026098:	mov    rcx,rax
   14002609b:	mov    eax,DWORD PTR [rcx+0x8]
   14002609e:	add    rsp,0x28
   1400260a2:	ret    
   1400260a3:	int3   
   1400260a4:	sub    rsp,0x28
   1400260a8:	call   0x14000a3ec
   1400260ad:	mov    rcx,QWORD PTR [rax+0xc0]
   1400260b4:	cmp    rcx,QWORD PTR [rip+0x16fe5]        # 0x14003d0a0
   1400260bb:	je     0x1400260d3
   1400260bd:	mov    eax,DWORD PTR [rax+0xc8]
   1400260c3:	test   DWORD PTR [rip+0x1714f],eax        # 0x14003d218
   1400260c9:	jne    0x1400260d3
   1400260cb:	call   0x140011d10
   1400260d0:	mov    rcx,rax
   1400260d3:	lea    rax,[rcx+0x128]
   1400260da:	add    rsp,0x28
   1400260de:	ret    
   1400260df:	int3   
   1400260e0:	sub    rsp,0x28
   1400260e4:	call   0x14000a3ec
   1400260e9:	mov    rcx,QWORD PTR [rax+0xc0]
   1400260f0:	cmp    rcx,QWORD PTR [rip+0x16fa9]        # 0x14003d0a0
   1400260f7:	je     0x14002610f
   1400260f9:	mov    eax,DWORD PTR [rax+0xc8]
   1400260ff:	test   DWORD PTR [rip+0x17113],eax        # 0x14003d218
   140026105:	jne    0x14002610f
   140026107:	call   0x140011d10
   14002610c:	mov    rcx,rax
   14002610f:	mov    eax,DWORD PTR [rcx+0xd4]
   140026115:	add    rsp,0x28
   140026119:	ret    
   14002611a:	int3   
   14002611b:	int3   
   14002611c:	test   rcx,rcx
   14002611f:	je     0x1400260e0
   140026125:	mov    rax,QWORD PTR [rcx]
   140026128:	mov    eax,DWORD PTR [rax+0xd4]
   14002612e:	ret    
   14002612f:	int3   
   140026130:	mov    r11,rsp
   140026133:	mov    QWORD PTR [r11+0x10],rbx
   140026137:	mov    QWORD PTR [r11+0x18],rbp
   14002613b:	mov    QWORD PTR [r11+0x20],rsi
   14002613f:	push   rdi
   140026140:	push   r12
   140026142:	push   r13
   140026144:	push   r14
   140026146:	push   r15
   140026148:	sub    rsp,0x90
   14002614f:	mov    rax,QWORD PTR [rip+0x1607a]        # 0x14003c1d0
   140026156:	xor    rax,rsp
   140026159:	mov    QWORD PTR [rsp+0x88],rax
   140026161:	mov    r8,QWORD PTR [rcx+0x138]
   140026168:	xor    ebx,ebx
   14002616a:	mov    rdi,rcx
   14002616d:	mov    QWORD PTR [rsp+0x58],rbx
   140026172:	mov    r15d,ebx
   140026175:	mov    r12d,ebx
   140026178:	mov    r13d,ebx
   14002617b:	mov    ebp,ebx
   14002617d:	mov    QWORD PTR [r11-0x58],rcx
   140026181:	mov    QWORD PTR [r11-0x50],rbx
   140026185:	test   r8,r8
   140026188:	je     0x1400264ce
   14002618e:	lea    r14,[rcx+0x4]
   140026192:	lea    esi,[rbx+0x1]
   140026195:	cmp    DWORD PTR [r14],ebx
   140026198:	jne    0x1400261b8
   14002619a:	lea    rcx,[r11-0x58]
   14002619e:	xor    edx,edx
   1400261a0:	mov    r9d,0x1004
   1400261a6:	mov    QWORD PTR [rsp+0x20],r14
   1400261ab:	call   0x1400079f0
   1400261b0:	test   eax,eax
   1400261b2:	jne    0x14002649e
   1400261b8:	mov    ecx,0x4
   1400261bd:	call   0x140008684
   1400261c2:	mov    ebp,0x180
   1400261c7:	mov    edx,0x2
   1400261cc:	mov    ecx,ebp
   1400261ce:	mov    QWORD PTR [rsp+0x58],rax
   1400261d3:	call   0x140008604
   1400261d8:	mov    rdx,rsi
   1400261db:	mov    ecx,ebp
   1400261dd:	mov    r15,rax
   1400261e0:	call   0x140008604
   1400261e5:	mov    rdx,rsi
   1400261e8:	mov    ecx,ebp
   1400261ea:	mov    r12,rax
   1400261ed:	call   0x140008604
   1400261f2:	lea    ecx,[rbp-0x7f]
   1400261f5:	mov    rdx,rsi
   1400261f8:	mov    r13,rax
   1400261fb:	call   0x140008604
   140026200:	mov    rbp,rax
   140026203:	mov    rax,QWORD PTR [rsp+0x58]
   140026208:	test   rax,rax
   14002620b:	je     0x14002649e
   140026211:	test   r15,r15
   140026214:	je     0x14002649e
   14002621a:	test   rbp,rbp
   14002621d:	je     0x14002649e
   140026223:	test   r12,r12
   140026226:	je     0x14002649e
   14002622c:	test   r13,r13
   14002622f:	je     0x14002649e
   140026235:	mov    DWORD PTR [rax],ebx
   140026237:	mov    rcx,rbp
   14002623a:	mov    eax,ebx
   14002623c:	mov    BYTE PTR [rcx],al
   14002623e:	add    eax,esi
   140026240:	add    rcx,rsi
   140026243:	cmp    eax,0x100
   140026248:	jl     0x14002623c
   14002624a:	mov    ecx,DWORD PTR [r14]
   14002624d:	lea    rdx,[rsp+0x70]
   140026252:	call   QWORD PTR [rip+0x5e00]        # 0x14002c058
   140026258:	test   eax,eax
   14002625a:	je     0x14002649e
   140026260:	cmp    DWORD PTR [rsp+0x70],0x5
   140026265:	ja     0x14002649e
   14002626b:	movzx  eax,WORD PTR [rsp+0x70]
   140026270:	mov    rdx,QWORD PTR [rdi+0x138]
   140026277:	mov    DWORD PTR [rsp+0x40],ebx
   14002627b:	mov    DWORD PTR [rsp+0x50],eax
   14002627f:	mov    eax,DWORD PTR [r14]
   140026282:	lea    rcx,[r12+0x81]
   14002628a:	mov    DWORD PTR [rsp+0x38],eax
   14002628e:	mov    eax,0xff
   140026293:	lea    r9,[rbp+0x1]
   140026297:	mov    DWORD PTR [rsp+0x30],eax
   14002629b:	mov    QWORD PTR [rsp+0x28],rcx
   1400262a0:	lea    r8d,[rax+0x1]
   1400262a4:	xor    ecx,ecx
   1400262a6:	mov    DWORD PTR [rsp+0x20],eax
   1400262aa:	call   0x14001cb54
   1400262af:	test   eax,eax
   1400262b1:	je     0x14002649e
   1400262b7:	mov    eax,DWORD PTR [r14]
   1400262ba:	mov    rdx,QWORD PTR [rdi+0x138]
   1400262c1:	mov    DWORD PTR [rsp+0x40],ebx
   1400262c5:	mov    DWORD PTR [rsp+0x38],eax
   1400262c9:	mov    eax,0xff
   1400262ce:	lea    rcx,[r13+0x81]
   1400262d5:	mov    DWORD PTR [rsp+0x30],eax
   1400262d9:	mov    QWORD PTR [rsp+0x28],rcx
   1400262de:	lea    r9,[rbp+0x1]
   1400262e2:	xor    ecx,ecx
   1400262e4:	mov    r8d,0x200
   1400262ea:	mov    DWORD PTR [rsp+0x20],eax
   1400262ee:	call   0x14001cb54
   1400262f3:	test   eax,eax
   1400262f5:	je     0x14002649e
   1400262fb:	cmp    DWORD PTR [rsp+0x50],esi
   1400262ff:	jle    0x14002632f
   140026301:	cmp    BYTE PTR [rsp+0x76],bl
   140026305:	je     0x14002632f
   140026307:	lea    rcx,[rsp+0x77]
   14002630c:	cmp    BYTE PTR [rcx],bl
   14002630e:	je     0x14002632f
   140026310:	movzx  edx,BYTE PTR [rcx-0x1]
   140026314:	jmp    0x14002631f
   140026316:	movsxd rax,edx
   140026319:	add    edx,esi
   14002631b:	mov    BYTE PTR [rax+rbp*1],0x20
   14002631f:	movzx  eax,BYTE PTR [rcx]
   140026322:	cmp    edx,eax
   140026324:	jle    0x140026316
   140026326:	add    rcx,0x2
   14002632a:	cmp    BYTE PTR [rcx-0x1],bl
   14002632d:	jne    0x14002630c
   14002632f:	mov    eax,DWORD PTR [r14]
   140026332:	lea    rcx,[r15+0x100]
   140026339:	mov    DWORD PTR [rsp+0x30],ebx
   14002633d:	mov    DWORD PTR [rsp+0x28],eax
   140026341:	mov    QWORD PTR [rsp+0x20],rcx
   140026346:	mov    r9d,0x100
   14002634c:	xor    ecx,ecx
   14002634e:	mov    r8,rbp
   140026351:	mov    edx,esi
   140026353:	call   0x14001cd64
   140026358:	test   eax,eax
   14002635a:	je     0x14002649e
   140026360:	lea    r14,[r15+0xfe]
   140026367:	mov    WORD PTR [r14],bx
   14002636b:	mov    BYTE PTR [r12+0x7f],bl
   140026370:	mov    BYTE PTR [r13+0x7f],bl
   140026374:	mov    BYTE PTR [r12+0x80],bl
   14002637c:	mov    BYTE PTR [r13+0x80],bl
   140026383:	cmp    DWORD PTR [rsp+0x50],esi
   140026387:	jle    0x1400263c2
   140026389:	cmp    BYTE PTR [rsp+0x76],bl
   14002638d:	je     0x1400263c2
   14002638f:	lea    rcx,[rsp+0x77]
   140026394:	cmp    BYTE PTR [rcx],bl
   140026396:	je     0x1400263c2
   140026398:	movzx  edx,BYTE PTR [rcx-0x1]
   14002639c:	jmp    0x1400263b2
   14002639e:	movsxd rax,edx
   1400263a1:	mov    r8d,0x8000
   1400263a7:	add    edx,esi
   1400263a9:	mov    WORD PTR [r15+rax*2+0x100],r8w
   1400263b2:	movzx  eax,BYTE PTR [rcx]
   1400263b5:	cmp    edx,eax
   1400263b7:	jle    0x14002639e
   1400263b9:	add    rcx,0x2
   1400263bd:	cmp    BYTE PTR [rcx-0x1],bl
   1400263c0:	jne    0x140026394
   1400263c2:	lea    rdx,[r15+0x200]
   1400263c9:	mov    r8d,0xfe
   1400263cf:	mov    rcx,r15
   1400263d2:	call   0x1400059f0
   1400263d7:	lea    rdx,[r12+0x100]
   1400263df:	mov    r8d,0x7f
   1400263e5:	mov    rcx,r12
   1400263e8:	call   0x1400059f0
   1400263ed:	lea    rdx,[r13+0x100]
   1400263f4:	mov    r8d,0x7f
   1400263fa:	mov    rcx,r13
   1400263fd:	call   0x1400059f0
   140026402:	mov    rcx,QWORD PTR [rdi+0xf8]
   140026409:	test   rcx,rcx
   14002640c:	je     0x140026452
   14002640e:	lock dec DWORD PTR [rcx]
   140026411:	jne    0x140026452
   140026413:	mov    rcx,QWORD PTR [rdi+0x100]
   14002641a:	sub    rcx,0xfe
   140026421:	call   0x140007dc0
   140026426:	mov    rcx,QWORD PTR [rdi+0x110]
   14002642d:	add    rcx,0xffffffffffffff80
   140026431:	call   0x140007dc0
   140026436:	mov    rcx,QWORD PTR [rdi+0x118]
   14002643d:	add    rcx,0xffffffffffffff80
   140026441:	call   0x140007dc0
   140026446:	mov    rcx,QWORD PTR [rdi+0xf8]
   14002644d:	call   0x140007dc0
   140026452:	mov    rax,QWORD PTR [rsp+0x58]
   140026457:	mov    DWORD PTR [rax],esi
   140026459:	mov    QWORD PTR [rdi+0xf8],rax
   140026460:	lea    rax,[r15+0x100]
   140026467:	mov    QWORD PTR [rdi+0x108],rax
   14002646e:	lea    rax,[r12+0x80]
   140026476:	mov    QWORD PTR [rdi+0x100],r14
   14002647d:	mov    QWORD PTR [rdi+0x110],rax
   140026484:	lea    rax,[r13+0x80]
   14002648b:	mov    QWORD PTR [rdi+0x118],rax
   140026492:	mov    eax,DWORD PTR [rsp+0x50]
   140026496:	mov    DWORD PTR [rdi+0xd4],eax
   14002649c:	jmp    0x1400264c2
   14002649e:	mov    rcx,QWORD PTR [rsp+0x58]
   1400264a3:	call   0x140007dc0
   1400264a8:	mov    rcx,r15
   1400264ab:	call   0x140007dc0
   1400264b0:	mov    rcx,r12
   1400264b3:	call   0x140007dc0
   1400264b8:	mov    rcx,r13
   1400264bb:	call   0x140007dc0
   1400264c0:	mov    ebx,esi
   1400264c2:	mov    rcx,rbp
   1400264c5:	call   0x140007dc0
   1400264ca:	mov    eax,ebx
   1400264cc:	jmp    0x140026522
   1400264ce:	mov    rax,QWORD PTR [rcx+0xf8]
   1400264d5:	test   rax,rax
   1400264d8:	je     0x1400264dd
   1400264da:	lock dec DWORD PTR [rax]
   1400264dd:	lea    rax,[rip+0xdddc]        # 0x1400342c0
   1400264e4:	mov    esi,0x1
   1400264e9:	mov    QWORD PTR [rcx+0xf8],rbx
   1400264f0:	mov    QWORD PTR [rcx+0x108],rax
   1400264f7:	lea    rax,[rip+0xe252]        # 0x140034750
   1400264fe:	mov    QWORD PTR [rcx+0x100],rbx
   140026505:	mov    QWORD PTR [rcx+0x110],rax
   14002650c:	lea    rax,[rip+0xe3bd]        # 0x1400348d0
   140026513:	mov    DWORD PTR [rcx+0xd4],esi
   140026519:	mov    QWORD PTR [rcx+0x118],rax
   140026520:	xor    eax,eax
   140026522:	mov    rcx,QWORD PTR [rsp+0x88]
   14002652a:	xor    rcx,rsp
   14002652d:	call   0x14000c380
   140026532:	lea    r11,[rsp+0x90]
   14002653a:	mov    rbx,QWORD PTR [r11+0x38]
   14002653e:	mov    rbp,QWORD PTR [r11+0x40]
   140026542:	mov    rsi,QWORD PTR [r11+0x48]
   140026546:	mov    rsp,r11
   140026549:	pop    r15
   14002654b:	pop    r14
   14002654d:	pop    r13
   14002654f:	pop    r12
   140026551:	pop    rdi
   140026552:	ret    
   140026553:	int3   
   140026554:	mov    rax,rsp
   140026557:	mov    QWORD PTR [rax+0x8],rbx
   14002655b:	mov    QWORD PTR [rax+0x18],rbp
   14002655f:	mov    QWORD PTR [rax+0x20],rsi
   140026563:	push   rdi
   140026564:	push   r12
   140026566:	push   r13
   140026568:	push   r14
   14002656a:	push   r15
   14002656c:	sub    rsp,0x40
   140026570:	mov    r12,rdx
   140026573:	mov    rdx,rcx
   140026576:	lea    rcx,[rax-0x48]
   14002657a:	mov    r14d,r9d
   14002657d:	mov    r15,r8
   140026580:	call   0x140008fac
   140026585:	test   r15,r15
   140026588:	je     0x14002658d
   14002658a:	mov    QWORD PTR [r15],r12
   14002658d:	test   r12,r12
   140026590:	je     0x1400265a0
   140026592:	test   r14d,r14d
   140026595:	je     0x1400265b7
   140026597:	lea    eax,[r14-0x2]
   14002659b:	cmp    eax,0x22
   14002659e:	jbe    0x1400265b7
   1400265a0:	call   0x140009cb4
   1400265a5:	mov    DWORD PTR [rax],0x16
   1400265ab:	call   0x140008d58
   1400265b0:	xor    edi,edi
   1400265b2:	jmp    0x14002676d
   1400265b7:	mov    sil,BYTE PTR [r12]
   1400265bb:	mov    r8,QWORD PTR [rsp+0x20]
   1400265c0:	xor    edi,edi
   1400265c2:	lea    rbx,[r12+0x1]
   1400265c7:	cmp    DWORD PTR [r8+0xd4],0x1
   1400265cf:	jle    0x1400265eb
   1400265d1:	lea    r8,[rsp+0x20]
   1400265d6:	movzx  ecx,sil
   1400265da:	mov    edx,0x8
   1400265df:	call   0x14001f9b8
   1400265e4:	mov    r8,QWORD PTR [rsp+0x20]
   1400265e9:	jmp    0x1400265fd
   1400265eb:	mov    rax,QWORD PTR [r8+0x108]
   1400265f2:	movzx  ecx,sil
   1400265f6:	movzx  eax,WORD PTR [rax+rcx*2]
   1400265fa:	and    eax,0x8
   1400265fd:	test   eax,eax
   1400265ff:	je     0x140026609
   140026601:	mov    sil,BYTE PTR [rbx]
   140026604:	inc    rbx
   140026607:	jmp    0x1400265c7
   140026609:	mov    ebp,DWORD PTR [rsp+0x90]
   140026610:	cmp    sil,0x2d
   140026614:	jne    0x14002661b
   140026616:	or     ebp,0x2
   140026619:	jmp    0x140026621
   14002661b:	cmp    sil,0x2b
   14002661f:	jne    0x140026627
   140026621:	mov    sil,BYTE PTR [rbx]
   140026624:	inc    rbx
   140026627:	test   r14d,r14d
   14002662a:	jne    0x140026650
   14002662c:	cmp    sil,0x30
   140026630:	je     0x14002663a
   140026632:	mov    r14d,0xa
   140026638:	jmp    0x14002666c
   14002663a:	mov    al,BYTE PTR [rbx]
   14002663c:	sub    al,0x58
   14002663e:	test   al,0xdf
   140026640:	je     0x14002664a
   140026642:	mov    r14d,0x8
   140026648:	jmp    0x14002666c
   14002664a:	mov    r14d,0x10
   140026650:	cmp    r14d,0x10
   140026654:	jne    0x14002666c
   140026656:	cmp    sil,0x30
   14002665a:	jne    0x14002666c
   14002665c:	mov    al,BYTE PTR [rbx]
   14002665e:	sub    al,0x58
   140026660:	test   al,0xdf
   140026662:	jne    0x14002666c
   140026664:	mov    sil,BYTE PTR [rbx+0x1]
   140026668:	add    rbx,0x2
   14002666c:	mov    r13,QWORD PTR [r8+0x108]
   140026673:	movsxd r10,r14d
   140026676:	xor    edx,edx
   140026678:	or     rax,0xffffffffffffffff
   14002667c:	div    r10
   14002667f:	mov    r11,rdx
   140026682:	mov    r9,rax
   140026685:	movzx  ecx,sil
   140026689:	movzx  r8d,WORD PTR [r13+rcx*2+0x0]
   14002668f:	mov    ecx,r8d
   140026692:	and    ecx,0x4
   140026695:	je     0x1400266a0
   140026697:	movsx  edx,sil
   14002669b:	sub    edx,0x30
   14002669e:	jmp    0x1400266ba
   1400266a0:	and    r8d,0x103
   1400266a7:	je     0x1400266d8
   1400266a9:	lea    eax,[rsi-0x61]
   1400266ac:	movsx  edx,sil
   1400266b0:	cmp    al,0x19
   1400266b2:	ja     0x1400266b7
   1400266b4:	sub    edx,0x20
   1400266b7:	add    edx,0xffffffc9
   1400266ba:	cmp    edx,r14d
   1400266bd:	jae    0x1400266d8
   1400266bf:	or     ebp,0x8
   1400266c2:	cmp    rdi,r9
   1400266c5:	jb     0x1400266ec
   1400266c7:	jne    0x1400266d0
   1400266c9:	mov    eax,edx
   1400266cb:	cmp    rax,r11
   1400266ce:	jbe    0x1400266ec
   1400266d0:	or     ebp,0x4
   1400266d3:	test   r15,r15
   1400266d6:	jne    0x1400266f8
   1400266d8:	dec    rbx
   1400266db:	test   bpl,0x8
   1400266df:	jne    0x140026700
   1400266e1:	test   r15,r15
   1400266e4:	cmovne rbx,r12
   1400266e8:	xor    edi,edi
   1400266ea:	jmp    0x14002675c
   1400266ec:	mov    rcx,r10
   1400266ef:	imul   rcx,rdi
   1400266f3:	mov    edi,edx
   1400266f5:	add    rdi,rcx
   1400266f8:	mov    sil,BYTE PTR [rbx]
   1400266fb:	inc    rbx
   1400266fe:	jmp    0x140026685
   140026700:	movabs rsi,0x7fffffffffffffff
   14002670a:	test   bpl,0x4
   14002670e:	jne    0x140026735
   140026710:	test   bpl,0x1
   140026714:	jne    0x14002675c
   140026716:	mov    eax,ebp
   140026718:	and    eax,0x2
   14002671b:	je     0x14002672c
   14002671d:	movabs rcx,0x8000000000000000
   140026727:	cmp    rdi,rcx
   14002672a:	ja     0x140026735
   14002672c:	test   eax,eax
   14002672e:	jne    0x14002675c
   140026730:	cmp    rdi,rsi
   140026733:	jbe    0x14002675c
   140026735:	call   0x140009cb4
   14002673a:	mov    DWORD PTR [rax],0x22
   140026740:	test   bpl,0x1
   140026744:	je     0x14002674c
   140026746:	or     rdi,0xffffffffffffffff
   14002674a:	jmp    0x14002675c
   14002674c:	mov    al,bpl
   14002674f:	and    al,0x2
   140026751:	neg    al
   140026753:	sbb    rdi,rdi
   140026756:	neg    rdi
   140026759:	add    rdi,rsi
   14002675c:	test   r15,r15
   14002675f:	je     0x140026764
   140026761:	mov    QWORD PTR [r15],rbx
   140026764:	test   bpl,0x2
   140026768:	je     0x14002676d
   14002676a:	neg    rdi
   14002676d:	cmp    BYTE PTR [rsp+0x38],0x0
   140026772:	je     0x140026780
   140026774:	mov    rcx,QWORD PTR [rsp+0x30]
   140026779:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140026780:	lea    r11,[rsp+0x40]
   140026785:	mov    rax,rdi
   140026788:	mov    rbx,QWORD PTR [r11+0x30]
   14002678c:	mov    rbp,QWORD PTR [r11+0x40]
   140026790:	mov    rsi,QWORD PTR [r11+0x48]
   140026794:	mov    rsp,r11
   140026797:	pop    r15
   140026799:	pop    r14
   14002679b:	pop    r13
   14002679d:	pop    r12
   14002679f:	pop    rdi
   1400267a0:	ret    
   1400267a1:	int3   
   1400267a2:	int3   
   1400267a3:	int3   
   1400267a4:	sub    rsp,0x28
   1400267a8:	mov    r9,rdx
   1400267ab:	mov    rdx,rcx
   1400267ae:	lea    rcx,[rsp+0x48]
   1400267b3:	call   0x14001bc60
   1400267b8:	movss  xmm0,DWORD PTR [rsp+0x48]
   1400267be:	add    rsp,0x28
   1400267c2:	ret    
   1400267c3:	int3   
   1400267c4:	sub    rsp,0x38
   1400267c8:	xor    eax,eax
   1400267ca:	mov    r9d,r8d
   1400267cd:	mov    r8,rdx
   1400267d0:	cmp    DWORD PTR [rip+0x187b2],eax        # 0x14003ef88
   1400267d6:	mov    DWORD PTR [rsp+0x20],eax
   1400267da:	mov    rdx,rcx
   1400267dd:	jne    0x1400267e8
   1400267df:	lea    rcx,[rip+0x16a22]        # 0x14003d208
   1400267e6:	jmp    0x1400267ea
   1400267e8:	xor    ecx,ecx
   1400267ea:	call   0x140026554
   1400267ef:	add    rsp,0x38
   1400267f3:	ret    
   1400267f4:	sub    rsp,0x38
   1400267f8:	and    DWORD PTR [rsp+0x20],0x0
   1400267fd:	mov    rax,r9
   140026800:	mov    r9d,r8d
   140026803:	mov    r8,rdx
   140026806:	mov    rdx,rcx
   140026809:	mov    rcx,rax
   14002680c:	call   0x140026554
   140026811:	add    rsp,0x38
   140026815:	ret    
   140026816:	int3   
   140026817:	int3   
   140026818:	sub    rsp,0x38
   14002681c:	and    DWORD PTR [rsp+0x20],0x0
   140026821:	mov    rax,r9
   140026824:	mov    r9d,r8d
   140026827:	mov    r8,rdx
   14002682a:	mov    rdx,rcx
   14002682d:	mov    rcx,rax
   140026830:	call   0x140026554
   140026835:	add    rsp,0x38
   140026839:	ret    
   14002683a:	int3   
   14002683b:	int3   
   14002683c:	jmp    0x14002872c
   140026841:	int3   
   140026842:	int3   
   140026843:	int3   
   140026844:	sub    rsp,0x38
   140026848:	and    DWORD PTR [rsp+0x20],0x0
   14002684d:	mov    rax,r9
   140026850:	mov    r9d,r8d
   140026853:	mov    r8,rdx
   140026856:	mov    rdx,rcx
   140026859:	mov    rcx,rax
   14002685c:	call   0x140026554
   140026861:	add    rsp,0x38
   140026865:	ret    
   140026866:	int3   
   140026867:	int3   
   140026868:	sub    rsp,0x38
   14002686c:	cmp    DWORD PTR [rip+0x18715],0x0        # 0x14003ef88
   140026873:	mov    r9d,r8d
   140026876:	mov    r8,rdx
   140026879:	mov    rdx,rcx
   14002687c:	mov    DWORD PTR [rsp+0x20],0x1
   140026884:	jne    0x14002688f
   140026886:	lea    rcx,[rip+0x1697b]        # 0x14003d208
   14002688d:	jmp    0x140026891
   14002688f:	xor    ecx,ecx
   140026891:	call   0x140026554
   140026896:	add    rsp,0x38
   14002689a:	ret    
   14002689b:	int3   
   14002689c:	sub    rsp,0x38
   1400268a0:	mov    rax,r9
   1400268a3:	mov    r9d,r8d
   1400268a6:	mov    r8,rdx
   1400268a9:	mov    rdx,rcx
   1400268ac:	mov    rcx,rax
   1400268af:	mov    DWORD PTR [rsp+0x20],0x1
   1400268b7:	call   0x140026554
   1400268bc:	add    rsp,0x38
   1400268c0:	ret    
   1400268c1:	int3   
   1400268c2:	int3   
   1400268c3:	int3   
   1400268c4:	sub    rsp,0x38
   1400268c8:	mov    rax,r9
   1400268cb:	mov    r9d,r8d
   1400268ce:	mov    r8,rdx
   1400268d1:	mov    rdx,rcx
   1400268d4:	mov    rcx,rax
   1400268d7:	mov    DWORD PTR [rsp+0x20],0x1
   1400268df:	call   0x140026554
   1400268e4:	add    rsp,0x38
   1400268e8:	ret    
   1400268e9:	int3   
   1400268ea:	int3   
   1400268eb:	int3   
   1400268ec:	sub    rsp,0x38
   1400268f0:	mov    rax,r9
   1400268f3:	mov    r9d,r8d
   1400268f6:	mov    r8,rdx
   1400268f9:	mov    rdx,rcx
   1400268fc:	mov    rcx,rax
   1400268ff:	mov    DWORD PTR [rsp+0x20],0x1
   140026907:	call   0x140026554
   14002690c:	add    rsp,0x38
   140026910:	ret    
   140026911:	int3   
   140026912:	int3   
   140026913:	int3   
   140026914:	sub    rsp,0x28
   140026918:	mov    r9,rdx
   14002691b:	mov    rdx,rcx
   14002691e:	lea    rcx,[rsp+0x40]
   140026923:	xor    r8d,r8d
   140026926:	call   0x14001bc60
   14002692b:	movss  xmm0,DWORD PTR [rsp+0x40]
   140026931:	add    rsp,0x28
   140026935:	ret    
   140026936:	int3   
   140026937:	int3   
   140026938:	jmp    0x1400267c4
   14002693d:	int3   
   14002693e:	int3   
   14002693f:	int3   
   140026940:	jmp    0x140028880
   140026945:	int3   
   140026946:	int3   
   140026947:	int3   
   140026948:	jmp    0x1400267c4
   14002694d:	int3   
   14002694e:	int3   
   14002694f:	int3   
   140026950:	jmp    0x140026868
   140026955:	int3   
   140026956:	int3   
   140026957:	int3   
   140026958:	jmp    0x140026868
   14002695d:	int3   
   14002695e:	int3   
   14002695f:	int3   
   140026960:	mov    QWORD PTR [rsp+0x8],rbx
   140026965:	mov    QWORD PTR [rsp+0x18],rbp
   14002696a:	push   rsi
   14002696b:	push   rdi
   14002696c:	push   r12
   14002696e:	push   r14
   140026970:	push   r15
   140026972:	sub    rsp,0x40
   140026976:	mov    r12,rdx
   140026979:	mov    rdx,rcx
   14002697c:	lea    rcx,[rsp+0x20]
   140026981:	mov    r14d,r9d
   140026984:	mov    r15,r8
   140026987:	call   0x140008fac
   14002698c:	test   r15,r15
   14002698f:	je     0x140026994
   140026991:	mov    QWORD PTR [r15],r12
   140026994:	test   r12,r12
   140026997:	je     0x1400269a7
   140026999:	test   r14d,r14d
   14002699c:	je     0x1400269bc
   14002699e:	lea    eax,[r14-0x2]
   1400269a2:	cmp    eax,0x22
   1400269a5:	jbe    0x1400269bc
   1400269a7:	call   0x140009cb4
   1400269ac:	mov    DWORD PTR [rax],0x16
   1400269b2:	call   0x140008d58
   1400269b7:	jmp    0x140026a42
   1400269bc:	mov    sil,BYTE PTR [r12]
   1400269c0:	mov    r8,QWORD PTR [rsp+0x20]
   1400269c5:	xor    edi,edi
   1400269c7:	lea    rbx,[r12+0x1]
   1400269cc:	cmp    DWORD PTR [r8+0xd4],0x1
   1400269d4:	jle    0x1400269f0
   1400269d6:	lea    r8,[rsp+0x20]
   1400269db:	movzx  ecx,sil
   1400269df:	mov    edx,0x8
   1400269e4:	call   0x14001f9b8
   1400269e9:	mov    r8,QWORD PTR [rsp+0x20]
   1400269ee:	jmp    0x140026a02
   1400269f0:	mov    rax,QWORD PTR [r8+0x108]
   1400269f7:	movzx  ecx,sil
   1400269fb:	movzx  eax,WORD PTR [rax+rcx*2]
   1400269ff:	and    eax,0x8
   140026a02:	test   eax,eax
   140026a04:	je     0x140026a0e
   140026a06:	mov    sil,BYTE PTR [rbx]
   140026a09:	inc    rbx
   140026a0c:	jmp    0x1400269cc
   140026a0e:	mov    ebp,DWORD PTR [rsp+0x90]
   140026a15:	cmp    sil,0x2d
   140026a19:	jne    0x140026a20
   140026a1b:	or     ebp,0x2
   140026a1e:	jmp    0x140026a26
   140026a20:	cmp    sil,0x2b
   140026a24:	jne    0x140026a2c
   140026a26:	mov    sil,BYTE PTR [rbx]
   140026a29:	inc    rbx
   140026a2c:	test   r14d,r14d
   140026a2f:	je     0x140026a4e
   140026a31:	lea    eax,[r14-0x2]
   140026a35:	cmp    eax,0x22
   140026a38:	jbe    0x140026a49
   140026a3a:	test   r15,r15
   140026a3d:	je     0x140026a42
   140026a3f:	mov    QWORD PTR [r15],r12
   140026a42:	xor    edi,edi
   140026a44:	jmp    0x140026b6e
   140026a49:	test   r14d,r14d
   140026a4c:	jne    0x140026a74
   140026a4e:	cmp    sil,0x30
   140026a52:	je     0x140026a5c
   140026a54:	mov    r14d,0xa
   140026a5a:	jmp    0x140026a90
   140026a5c:	mov    al,BYTE PTR [rbx]
   140026a5e:	sub    al,0x58
   140026a60:	test   al,0xdf
   140026a62:	je     0x140026a6c
   140026a64:	mov    r14d,0x8
   140026a6a:	jmp    0x140026a90
   140026a6c:	mov    r14d,0x10
   140026a72:	jmp    0x140026a80
   140026a74:	cmp    r14d,0x10
   140026a78:	jne    0x140026a90
   140026a7a:	cmp    sil,0x30
   140026a7e:	jne    0x140026a90
   140026a80:	mov    al,BYTE PTR [rbx]
   140026a82:	sub    al,0x58
   140026a84:	test   al,0xdf
   140026a86:	jne    0x140026a90
   140026a88:	mov    sil,BYTE PTR [rbx+0x1]
   140026a8c:	add    rbx,0x2
   140026a90:	mov    r10,QWORD PTR [r8+0x108]
   140026a97:	xor    edx,edx
   140026a99:	or     eax,0xffffffff
   140026a9c:	div    r14d
   140026a9f:	mov    r9d,eax
   140026aa2:	movzx  ecx,sil
   140026aa6:	movzx  r8d,WORD PTR [r10+rcx*2]
   140026aab:	mov    ecx,r8d
   140026aae:	and    ecx,0x4
   140026ab1:	je     0x140026abc
   140026ab3:	movsx  ecx,sil
   140026ab7:	sub    ecx,0x30
   140026aba:	jmp    0x140026ad6
   140026abc:	and    r8d,0x103
   140026ac3:	je     0x140026af1
   140026ac5:	lea    eax,[rsi-0x61]
   140026ac8:	movsx  ecx,sil
   140026acc:	cmp    al,0x19
   140026ace:	ja     0x140026ad3
   140026ad0:	sub    ecx,0x20
   140026ad3:	add    ecx,0xffffffc9
   140026ad6:	cmp    ecx,r14d
   140026ad9:	jae    0x140026af1
   140026adb:	or     ebp,0x8
   140026ade:	cmp    edi,r9d
   140026ae1:	jb     0x140026b05
   140026ae3:	jne    0x140026ae9
   140026ae5:	cmp    ecx,edx
   140026ae7:	jbe    0x140026b05
   140026ae9:	or     ebp,0x4
   140026aec:	test   r15,r15
   140026aef:	jne    0x140026b0b
   140026af1:	dec    rbx
   140026af4:	test   bpl,0x8
   140026af8:	jne    0x140026b13
   140026afa:	test   r15,r15
   140026afd:	cmovne rbx,r12
   140026b01:	xor    edi,edi
   140026b03:	jmp    0x140026b5e
   140026b05:	imul   edi,r14d
   140026b09:	add    edi,ecx
   140026b0b:	mov    sil,BYTE PTR [rbx]
   140026b0e:	inc    rbx
   140026b11:	jmp    0x140026aa2
   140026b13:	mov    esi,0x7fffffff
   140026b18:	test   bpl,0x4
   140026b1c:	jne    0x140026b3b
   140026b1e:	test   bpl,0x1
   140026b22:	jne    0x140026b5e
   140026b24:	mov    eax,ebp
   140026b26:	and    eax,0x2
   140026b29:	je     0x140026b33
   140026b2b:	cmp    edi,0x80000000
   140026b31:	ja     0x140026b3b
   140026b33:	test   eax,eax
   140026b35:	jne    0x140026b5e
   140026b37:	cmp    edi,esi
   140026b39:	jbe    0x140026b5e
   140026b3b:	call   0x140009cb4
   140026b40:	mov    DWORD PTR [rax],0x22
   140026b46:	test   bpl,0x1
   140026b4a:	je     0x140026b51
   140026b4c:	or     edi,0xffffffff
   140026b4f:	jmp    0x140026b5e
   140026b51:	mov    al,bpl
   140026b54:	and    al,0x2
   140026b56:	neg    al
   140026b58:	sbb    edi,edi
   140026b5a:	neg    edi
   140026b5c:	add    edi,esi
   140026b5e:	test   r15,r15
   140026b61:	je     0x140026b66
   140026b63:	mov    QWORD PTR [r15],rbx
   140026b66:	test   bpl,0x2
   140026b6a:	je     0x140026b6e
   140026b6c:	neg    edi
   140026b6e:	cmp    BYTE PTR [rsp+0x38],0x0
   140026b73:	je     0x140026b81
   140026b75:	mov    rcx,QWORD PTR [rsp+0x30]
   140026b7a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140026b81:	lea    r11,[rsp+0x40]
   140026b86:	mov    eax,edi
   140026b88:	mov    rbx,QWORD PTR [r11+0x30]
   140026b8c:	mov    rbp,QWORD PTR [r11+0x40]
   140026b90:	mov    rsp,r11
   140026b93:	pop    r15
   140026b95:	pop    r14
   140026b97:	pop    r12
   140026b99:	pop    rdi
   140026b9a:	pop    rsi
   140026b9b:	ret    
   140026b9c:	sub    rsp,0x38
   140026ba0:	and    DWORD PTR [rsp+0x20],0x0
   140026ba5:	mov    rax,r9
   140026ba8:	mov    r9d,r8d
   140026bab:	mov    r8,rdx
   140026bae:	mov    rdx,rcx
   140026bb1:	mov    rcx,rax
   140026bb4:	call   0x140026960
   140026bb9:	add    rsp,0x38
   140026bbd:	ret    
   140026bbe:	int3   
   140026bbf:	int3   
   140026bc0:	sub    rsp,0x38
   140026bc4:	mov    rax,r9
   140026bc7:	mov    r9d,r8d
   140026bca:	mov    r8,rdx
   140026bcd:	mov    rdx,rcx
   140026bd0:	mov    rcx,rax
   140026bd3:	mov    DWORD PTR [rsp+0x20],0x1
   140026bdb:	call   0x140026960
   140026be0:	add    rsp,0x38
   140026be4:	ret    
   140026be5:	int3   
   140026be6:	int3   
   140026be7:	int3   
   140026be8:	sub    rsp,0x38
   140026bec:	xor    eax,eax
   140026bee:	mov    r9d,r8d
   140026bf1:	mov    r8,rdx
   140026bf4:	cmp    DWORD PTR [rip+0x1838e],eax        # 0x14003ef88
   140026bfa:	mov    DWORD PTR [rsp+0x20],eax
   140026bfe:	mov    rdx,rcx
   140026c01:	jne    0x140026c0c
   140026c03:	lea    rcx,[rip+0x165fe]        # 0x14003d208
   140026c0a:	jmp    0x140026c0e
   140026c0c:	xor    ecx,ecx
   140026c0e:	call   0x140026960
   140026c13:	add    rsp,0x38
   140026c17:	ret    
   140026c18:	sub    rsp,0x38
   140026c1c:	cmp    DWORD PTR [rip+0x18365],0x0        # 0x14003ef88
   140026c23:	mov    r9d,r8d
   140026c26:	mov    r8,rdx
   140026c29:	mov    rdx,rcx
   140026c2c:	mov    DWORD PTR [rsp+0x20],0x1
   140026c34:	jne    0x140026c3f
   140026c36:	lea    rcx,[rip+0x165cb]        # 0x14003d208
   140026c3d:	jmp    0x140026c41
   140026c3f:	xor    ecx,ecx
   140026c41:	call   0x140026960
   140026c46:	add    rsp,0x38
   140026c4a:	ret    
   140026c4b:	int3   
   140026c4c:	xor    eax,eax
   140026c4e:	ret    
   140026c4f:	int3   
   140026c50:	movzx  r8d,WORD PTR [rdx]
   140026c54:	movzx  eax,WORD PTR [rcx]
   140026c57:	sub    eax,r8d
   140026c5a:	jne    0x140026c76
   140026c5c:	sub    rcx,rdx
   140026c5f:	test   r8w,r8w
   140026c63:	je     0x140026c76
   140026c65:	add    rdx,0x2
   140026c69:	movzx  r8d,WORD PTR [rdx]
   140026c6d:	movzx  eax,WORD PTR [rcx+rdx*1]
   140026c71:	sub    eax,r8d
   140026c74:	je     0x140026c5f
   140026c76:	test   eax,eax
   140026c78:	jns    0x140026c7e
   140026c7a:	or     eax,0xffffffff
   140026c7d:	ret    
   140026c7e:	mov    ecx,0x1
   140026c83:	test   eax,eax
   140026c85:	cmovg  eax,ecx
   140026c88:	ret    
   140026c89:	int3   
   140026c8a:	int3   
   140026c8b:	int3   
   140026c8c:	xor    r10d,r10d
   140026c8f:	mov    r9,rdx
   140026c92:	mov    rax,rcx
   140026c95:	cmp    WORD PTR [rcx],r10w
   140026c99:	je     0x140026cc4
   140026c9b:	mov    r8,r9
   140026c9e:	cmp    WORD PTR [r9],r10w
   140026ca2:	je     0x140026cba
   140026ca4:	movzx  edx,WORD PTR [r9]
   140026ca8:	cmp    dx,WORD PTR [rax]
   140026cab:	je     0x140026cc4
   140026cad:	add    r8,0x2
   140026cb1:	movzx  edx,WORD PTR [r8]
   140026cb5:	test   dx,dx
   140026cb8:	jne    0x140026ca8
   140026cba:	add    rax,0x2
   140026cbe:	cmp    WORD PTR [rax],r10w
   140026cc2:	jmp    0x140026c99
   140026cc4:	sub    rax,rcx
   140026cc7:	sar    rax,1
   140026cca:	ret    
   140026ccb:	int3   
   140026ccc:	test   r8,r8
   140026ccf:	jne    0x140026ce9
   140026cd1:	xor    eax,eax
   140026cd3:	ret    
   140026cd4:	movzx  eax,WORD PTR [rcx]
   140026cd7:	test   ax,ax
   140026cda:	je     0x140026cee
   140026cdc:	cmp    ax,WORD PTR [rdx]
   140026cdf:	jne    0x140026cee
   140026ce1:	add    rcx,0x2
   140026ce5:	add    rdx,0x2
   140026ce9:	dec    r8
   140026cec:	jne    0x140026cd4
   140026cee:	movzx  eax,WORD PTR [rcx]
   140026cf1:	movzx  ecx,WORD PTR [rdx]
   140026cf4:	sub    eax,ecx
   140026cf6:	ret    
   140026cf7:	int3   
   140026cf8:	mov    r9,rdx
   140026cfb:	movzx  eax,WORD PTR [rcx]
   140026cfe:	test   ax,ax
   140026d01:	je     0x140026d2d
   140026d03:	cmp    WORD PTR [r9],0x0
   140026d08:	mov    r8,r9
   140026d0b:	je     0x140026d23
   140026d0d:	movzx  edx,WORD PTR [r9]
   140026d11:	cmp    dx,ax
   140026d14:	je     0x140026d29
   140026d16:	add    r8,0x2
   140026d1a:	movzx  edx,WORD PTR [r8]
   140026d1e:	test   dx,dx
   140026d21:	jne    0x140026d11
   140026d23:	add    rcx,0x2
   140026d27:	jmp    0x140026cfb
   140026d29:	mov    rax,rcx
   140026d2c:	ret    
   140026d2d:	xor    eax,eax
   140026d2f:	ret    
   140026d30:	rex push rbx
   140026d32:	sub    rsp,0xf0
   140026d39:	mov    rax,QWORD PTR [rip+0x15490]        # 0x14003c1d0
   140026d40:	xor    rax,rsp
   140026d43:	mov    QWORD PTR [rsp+0xe0],rax
   140026d4b:	or     DWORD PTR [rcx+0x10],0x104
   140026d52:	mov    rbx,rcx
   140026d55:	lea    rcx,[rsp+0x30]
   140026d5a:	mov    edx,0x55
   140026d5f:	call   0x14000facc
   140026d64:	cmp    eax,0x1
   140026d67:	jle    0x140026d91
   140026d69:	lea    rcx,[rsp+0x30]
   140026d6e:	call   0x14001c4ac
   140026d73:	lea    rcx,[rbx+0x258]
   140026d7a:	lea    r8,[rsp+0x30]
   140026d7f:	lea    r9,[rax+0x1]
   140026d83:	mov    edx,0x55
   140026d88:	call   0x14001c4c8
   140026d8d:	test   eax,eax
   140026d8f:	jne    0x140026daa
   140026d91:	mov    rcx,QWORD PTR [rsp+0xe0]
   140026d99:	xor    rcx,rsp
   140026d9c:	call   0x14000c380
   140026da1:	add    rsp,0xf0
   140026da8:	pop    rbx
   140026da9:	ret    
   140026daa:	and    QWORD PTR [rsp+0x20],0x0
   140026db0:	xor    r9d,r9d
   140026db3:	xor    r8d,r8d
   140026db6:	xor    edx,edx
   140026db8:	xor    ecx,ecx
   140026dba:	call   0x140008da8
   140026dbf:	int3   
   140026dc0:	rex push rbx
   140026dc2:	sub    rsp,0x20
   140026dc6:	mov    rbx,rcx
   140026dc9:	mov    rcx,QWORD PTR [rcx]
   140026dcc:	call   0x14001c4ac
   140026dd1:	mov    rcx,QWORD PTR [rbx+0x8]
   140026dd5:	xor    edx,edx
   140026dd7:	cmp    rax,0x3
   140026ddb:	sete   dl
   140026dde:	mov    DWORD PTR [rbx+0x18],edx
   140026de1:	call   0x14001c4ac
   140026de6:	xor    ecx,ecx
   140026de8:	cmp    rax,0x3
   140026dec:	sete   cl
   140026def:	cmp    DWORD PTR [rbx+0x18],0x0
   140026df3:	mov    DWORD PTR [rbx+0x1c],ecx
   140026df6:	je     0x140026dff
   140026df8:	mov    edx,0x2
   140026dfd:	jmp    0x140026e38
   140026dff:	mov    rcx,QWORD PTR [rbx]
   140026e02:	xor    r9d,r9d
   140026e05:	test   rcx,rcx
   140026e08:	jne    0x140026e0e
   140026e0a:	xor    edx,edx
   140026e0c:	jmp    0x140026e38
   140026e0e:	mov    edx,0x2
   140026e13:	movzx  r8d,WORD PTR [rcx]
   140026e17:	add    rcx,rdx
   140026e1a:	lea    eax,[r8-0x41]
   140026e1e:	cmp    ax,0x19
   140026e22:	jbe    0x140026e30
   140026e24:	sub    r8w,0x61
   140026e29:	cmp    r8w,0x19
   140026e2e:	ja     0x140026e35
   140026e30:	inc    r9d
   140026e33:	jmp    0x140026e13
   140026e35:	mov    edx,r9d
   140026e38:	xor    r8d,r8d
   140026e3b:	mov    DWORD PTR [rbx+0x14],edx
   140026e3e:	lea    rcx,[rip+0xe3]        # 0x140026f28
   140026e45:	lea    edx,[r8+0x3]
   140026e49:	call   0x14000f944
   140026e4e:	test   DWORD PTR [rbx+0x10],0x100
   140026e55:	je     0x140026e66
   140026e57:	test   DWORD PTR [rbx+0x10],0x200
   140026e5e:	je     0x140026e66
   140026e60:	test   BYTE PTR [rbx+0x10],0x7
   140026e64:	jne    0x140026e6a
   140026e66:	and    DWORD PTR [rbx+0x10],0x0
   140026e6a:	add    rsp,0x20
   140026e6e:	pop    rbx
   140026e6f:	ret    
   140026e70:	rex push rbx
   140026e72:	sub    rsp,0x20
   140026e76:	mov    rbx,rcx
   140026e79:	mov    rcx,QWORD PTR [rcx]
   140026e7c:	call   0x14001c4ac
   140026e81:	xor    edx,edx
   140026e83:	cmp    rax,0x3
   140026e87:	sete   dl
   140026e8a:	mov    DWORD PTR [rbx+0x18],edx
   140026e8d:	test   edx,edx
   140026e8f:	je     0x140026e98
   140026e91:	mov    edx,0x2
   140026e96:	jmp    0x140026ed1
   140026e98:	mov    rcx,QWORD PTR [rbx]
   140026e9b:	xor    r9d,r9d
   140026e9e:	test   rcx,rcx
   140026ea1:	jne    0x140026ea7
   140026ea3:	xor    edx,edx
   140026ea5:	jmp    0x140026ed1
   140026ea7:	mov    edx,0x2
   140026eac:	movzx  r8d,WORD PTR [rcx]
   140026eb0:	add    rcx,rdx
   140026eb3:	lea    eax,[r8-0x41]
   140026eb7:	cmp    ax,0x19
   140026ebb:	jbe    0x140026ec9
   140026ebd:	sub    r8w,0x61
   140026ec2:	cmp    r8w,0x19
   140026ec7:	ja     0x140026ece
   140026ec9:	inc    r9d
   140026ecc:	jmp    0x140026eac
   140026ece:	mov    edx,r9d
   140026ed1:	xor    r8d,r8d
   140026ed4:	mov    DWORD PTR [rbx+0x14],edx
   140026ed7:	lea    rcx,[rip+0x3d6]        # 0x1400272b4
   140026ede:	lea    edx,[r8+0x3]
   140026ee2:	call   0x14000f944
   140026ee7:	test   BYTE PTR [rbx+0x10],0x4
   140026eeb:	jne    0x140026ef1
   140026eed:	and    DWORD PTR [rbx+0x10],0x0
   140026ef1:	add    rsp,0x20
   140026ef5:	pop    rbx
   140026ef6:	ret    
   140026ef7:	int3   
   140026ef8:	xor    edx,edx
   140026efa:	test   rcx,rcx
   140026efd:	jne    0x140026f02
   140026eff:	xor    eax,eax
   140026f01:	ret    
   140026f02:	movzx  r8d,WORD PTR [rcx]
   140026f06:	add    rcx,0x2
   140026f0a:	lea    eax,[r8-0x41]
   140026f0e:	cmp    ax,0x19
   140026f12:	jbe    0x140026f20
   140026f14:	sub    r8w,0x61
   140026f19:	cmp    r8w,0x19
   140026f1e:	ja     0x140026f24
   140026f20:	inc    edx
   140026f22:	jmp    0x140026f02
   140026f24:	mov    eax,edx
   140026f26:	ret    
   140026f27:	int3   
   140026f28:	mov    QWORD PTR [rsp+0x10],rbx
   140026f2d:	mov    QWORD PTR [rsp+0x18],rbp
   140026f32:	push   rsi
   140026f33:	push   rdi
   140026f34:	push   r14
   140026f36:	sub    rsp,0xc0
   140026f3d:	mov    rax,QWORD PTR [rip+0x1528c]        # 0x14003c1d0
   140026f44:	xor    rax,rsp
   140026f47:	mov    QWORD PTR [rsp+0xb0],rax
   140026f4f:	mov    rdi,rcx
   140026f52:	call   0x14000a3ec
   140026f57:	mov    esi,0x40
   140026f5c:	lea    rbx,[rax+0x140]
   140026f63:	lea    r8,[rsp+0x30]
   140026f68:	mov    r9d,esi
   140026f6b:	mov    ecx,DWORD PTR [rbx+0x1c]
   140026f6e:	neg    ecx
   140026f70:	mov    rcx,rdi
   140026f73:	sbb    edx,edx
   140026f75:	and    edx,0xfffff005
   140026f7b:	add    edx,0x1002
   140026f81:	call   0x14000fa04
   140026f86:	xor    ebp,ebp
   140026f88:	test   eax,eax
   140026f8a:	jne    0x140026f99
   140026f8c:	mov    DWORD PTR [rbx+0x10],ebp
   140026f8f:	mov    eax,0x1
   140026f94:	jmp    0x14002720d
   140026f99:	mov    rcx,QWORD PTR [rbx+0x8]
   140026f9d:	lea    rdx,[rsp+0x30]
   140026fa2:	call   0x140028c40
   140026fa7:	mov    r14d,0x55
   140026fad:	test   eax,eax
   140026faf:	jne    0x1400270aa
   140026fb5:	mov    eax,DWORD PTR [rbx+0x18]
   140026fb8:	lea    r8,[rsp+0x30]
   140026fbd:	mov    r9d,esi
   140026fc0:	neg    eax
   140026fc2:	mov    rcx,rdi
   140026fc5:	sbb    edx,edx
   140026fc7:	and    edx,0xfffff002
   140026fcd:	add    edx,0x1001
   140026fd3:	call   0x14000fa04
   140026fd8:	test   eax,eax
   140026fda:	je     0x140026f8c
   140026fdc:	mov    rcx,QWORD PTR [rbx]
   140026fdf:	lea    rdx,[rsp+0x30]
   140026fe4:	call   0x140028c40
   140026fe9:	test   eax,eax
   140026feb:	jne    0x14002701f
   140026fed:	or     DWORD PTR [rbx+0x10],0x304
   140026ff4:	mov    rcx,rdi
   140026ff7:	call   0x14001c4ac
   140026ffc:	lea    rcx,[rbx+0x258]
   140027003:	mov    r8,rdi
   140027006:	lea    r9,[rax+0x1]
   14002700a:	mov    edx,r14d
   14002700d:	call   0x14001c4c8
   140027012:	test   eax,eax
   140027014:	je     0x1400270aa
   14002701a:	jmp    0x140027235
   14002701f:	test   BYTE PTR [rbx+0x10],0x2
   140027023:	jne    0x1400270aa
   140027029:	cmp    DWORD PTR [rbx+0x14],ebp
   14002702c:	je     0x14002706e
   14002702e:	movsxd r8,DWORD PTR [rbx+0x14]
   140027032:	mov    rcx,QWORD PTR [rbx]
   140027035:	lea    rdx,[rsp+0x30]
   14002703a:	call   0x140028db4
   14002703f:	test   eax,eax
   140027041:	jne    0x14002706e
   140027043:	or     DWORD PTR [rbx+0x10],0x2
   140027047:	mov    rcx,rdi
   14002704a:	call   0x14001c4ac
   14002704f:	lea    rcx,[rbx+0x258]
   140027056:	mov    r8,rdi
   140027059:	lea    r9,[rax+0x1]
   14002705d:	mov    rdx,r14
   140027060:	call   0x14001c4c8
   140027065:	test   eax,eax
   140027067:	je     0x1400270aa
   140027069:	jmp    0x14002724a
   14002706e:	test   BYTE PTR [rbx+0x10],0x1
   140027072:	jne    0x1400270aa
   140027074:	mov    rcx,rdi
   140027077:	call   0x140027448
   14002707c:	test   eax,eax
   14002707e:	je     0x1400270aa
   140027080:	or     DWORD PTR [rbx+0x10],0x1
   140027084:	mov    rcx,rdi
   140027087:	call   0x14001c4ac
   14002708c:	lea    rcx,[rbx+0x258]
   140027093:	mov    r8,rdi
   140027096:	lea    r9,[rax+0x1]
   14002709a:	mov    rdx,r14
   14002709d:	call   0x14001c4c8
   1400270a2:	test   eax,eax
   1400270a4:	jne    0x14002725f
   1400270aa:	mov    eax,DWORD PTR [rbx+0x10]
   1400270ad:	mov    ecx,0x300
   1400270b2:	and    eax,ecx
   1400270b4:	cmp    eax,ecx
   1400270b6:	je     0x140027202
   1400270bc:	mov    eax,DWORD PTR [rbx+0x18]
   1400270bf:	lea    r8,[rsp+0x30]
   1400270c4:	mov    r9d,0x80
   1400270ca:	neg    eax
   1400270cc:	mov    rcx,rdi
   1400270cf:	sbb    edx,edx
   1400270d1:	and    edx,0xfffff002
   1400270d7:	add    edx,0x1001
   1400270dd:	call   0x14000fa04
   1400270e2:	test   eax,eax
   1400270e4:	je     0x140026f8c
   1400270ea:	mov    rcx,QWORD PTR [rbx]
   1400270ed:	lea    rdx,[rsp+0x30]
   1400270f2:	call   0x140028c40
   1400270f7:	test   eax,eax
   1400270f9:	jne    0x140027202
   1400270ff:	bts    DWORD PTR [rbx+0x10],0x9
   140027104:	cmp    DWORD PTR [rbx+0x18],ebp
   140027107:	je     0x140027145
   140027109:	bts    DWORD PTR [rbx+0x10],0x8
   14002710e:	lea    rsi,[rbx+0x258]
   140027115:	cmp    WORD PTR [rsi],bp
   140027118:	jne    0x140027202
   14002711e:	mov    rcx,rdi
   140027121:	call   0x14001c4ac
   140027126:	mov    r8,rdi
   140027129:	mov    rdx,r14
   14002712c:	lea    r9,[rax+0x1]
   140027130:	mov    rcx,rsi
   140027133:	call   0x14001c4c8
   140027138:	test   eax,eax
   14002713a:	je     0x140027202
   140027140:	jmp    0x140027274
   140027145:	cmp    DWORD PTR [rbx+0x14],ebp
   140027148:	je     0x1400271cf
   14002714e:	mov    rcx,QWORD PTR [rbx]
   140027151:	call   0x14001c4ac
   140027156:	cmp    eax,DWORD PTR [rbx+0x14]
   140027159:	jne    0x1400271cf
   14002715b:	mov    rcx,rdi
   14002715e:	call   0x140027448
   140027163:	test   eax,eax
   140027165:	jne    0x14002719b
   140027167:	mov    rcx,QWORD PTR [rbx]
   14002716a:	mov    esi,ebp
   14002716c:	test   rcx,rcx
   14002716f:	je     0x14002718f
   140027171:	movzx  edx,WORD PTR [rcx]
   140027174:	add    rcx,0x2
   140027178:	lea    eax,[rdx-0x41]
   14002717b:	cmp    ax,0x19
   14002717f:	jbe    0x14002718b
   140027181:	sub    dx,0x61
   140027185:	cmp    dx,0x19
   140027189:	ja     0x14002718f
   14002718b:	inc    esi
   14002718d:	jmp    0x140027171
   14002718f:	mov    rcx,QWORD PTR [rbx]
   140027192:	call   0x14001c4ac
   140027197:	cmp    esi,eax
   140027199:	je     0x140027202
   14002719b:	bts    DWORD PTR [rbx+0x10],0x8
   1400271a0:	lea    rsi,[rbx+0x258]
   1400271a7:	cmp    WORD PTR [rsi],bp
   1400271aa:	jne    0x140027202
   1400271ac:	mov    rcx,rdi
   1400271af:	call   0x14001c4ac
   1400271b4:	mov    r8,rdi
   1400271b7:	mov    rdx,r14
   1400271ba:	lea    r9,[rax+0x1]
   1400271be:	mov    rcx,rsi
   1400271c1:	call   0x14001c4c8
   1400271c6:	test   eax,eax
   1400271c8:	je     0x140027202
   1400271ca:	jmp    0x140027289
   1400271cf:	bts    DWORD PTR [rbx+0x10],0x8
   1400271d4:	lea    rsi,[rbx+0x258]
   1400271db:	cmp    WORD PTR [rsi],bp
   1400271de:	jne    0x140027202
   1400271e0:	mov    rcx,rdi
   1400271e3:	call   0x14001c4ac
   1400271e8:	mov    r8,rdi
   1400271eb:	mov    rdx,r14
   1400271ee:	lea    r9,[rax+0x1]
   1400271f2:	mov    rcx,rsi
   1400271f5:	call   0x14001c4c8
   1400271fa:	test   eax,eax
   1400271fc:	jne    0x14002729e
   140027202:	mov    eax,DWORD PTR [rbx+0x10]
   140027205:	shr    eax,0x2
   140027208:	not    eax
   14002720a:	and    eax,0x1
   14002720d:	mov    rcx,QWORD PTR [rsp+0xb0]
   140027215:	xor    rcx,rsp
   140027218:	call   0x14000c380
   14002721d:	lea    r11,[rsp+0xc0]
   140027225:	mov    rbx,QWORD PTR [r11+0x28]
   140027229:	mov    rbp,QWORD PTR [r11+0x30]
   14002722d:	mov    rsp,r11
   140027230:	pop    r14
   140027232:	pop    rdi
   140027233:	pop    rsi
   140027234:	ret    
   140027235:	xor    r9d,r9d
   140027238:	xor    r8d,r8d
   14002723b:	xor    edx,edx
   14002723d:	xor    ecx,ecx
   14002723f:	mov    QWORD PTR [rsp+0x20],rbp
   140027244:	call   0x140008da8
   140027249:	int3   
   14002724a:	xor    r9d,r9d
   14002724d:	xor    r8d,r8d
   140027250:	xor    edx,edx
   140027252:	xor    ecx,ecx
   140027254:	mov    QWORD PTR [rsp+0x20],rbp
   140027259:	call   0x140008da8
   14002725e:	int3   
   14002725f:	xor    r9d,r9d
   140027262:	xor    r8d,r8d
   140027265:	xor    edx,edx
   140027267:	xor    ecx,ecx
   140027269:	mov    QWORD PTR [rsp+0x20],rbp
   14002726e:	call   0x140008da8
   140027273:	int3   
   140027274:	xor    r9d,r9d
   140027277:	xor    r8d,r8d
   14002727a:	xor    edx,edx
   14002727c:	xor    ecx,ecx
   14002727e:	mov    QWORD PTR [rsp+0x20],rbp
   140027283:	call   0x140008da8
   140027288:	int3   
   140027289:	xor    r9d,r9d
   14002728c:	xor    r8d,r8d
   14002728f:	xor    edx,edx
   140027291:	xor    ecx,ecx
   140027293:	mov    QWORD PTR [rsp+0x20],rbp
   140027298:	call   0x140008da8
   14002729d:	int3   
   14002729e:	xor    r9d,r9d
   1400272a1:	xor    r8d,r8d
   1400272a4:	xor    edx,edx
   1400272a6:	xor    ecx,ecx
   1400272a8:	mov    QWORD PTR [rsp+0x20],rbp
   1400272ad:	call   0x140008da8
   1400272b2:	int3   
   1400272b3:	int3   
   1400272b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400272b9:	push   rdi
   1400272ba:	sub    rsp,0x130
   1400272c1:	mov    rax,QWORD PTR [rip+0x14f08]        # 0x14003c1d0
   1400272c8:	xor    rax,rsp
   1400272cb:	mov    QWORD PTR [rsp+0x120],rax
   1400272d3:	mov    rdi,rcx
   1400272d6:	call   0x14000a3ec
   1400272db:	lea    r8,[rsp+0x30]
   1400272e0:	lea    rbx,[rax+0x140]
   1400272e7:	mov    r9d,0x78
   1400272ed:	mov    ecx,DWORD PTR [rbx+0x18]
   1400272f0:	neg    ecx
   1400272f2:	mov    rcx,rdi
   1400272f5:	sbb    edx,edx
   1400272f7:	and    edx,0xfffff002
   1400272fd:	add    edx,0x1001
   140027303:	call   0x14000fa04
   140027308:	test   eax,eax
   14002730a:	jne    0x140027316
   14002730c:	and    DWORD PTR [rbx+0x10],eax
   14002730f:	mov    eax,0x1
   140027314:	jmp    0x14002735a
   140027316:	mov    rcx,QWORD PTR [rbx]
   140027319:	lea    rdx,[rsp+0x30]
   14002731e:	call   0x140028c40
   140027323:	test   eax,eax
   140027325:	jne    0x14002734f
   140027327:	mov    rcx,rdi
   14002732a:	call   0x14001c4ac
   14002732f:	lea    rcx,[rbx+0x258]
   140027336:	mov    r8,rdi
   140027339:	lea    r9,[rax+0x1]
   14002733d:	mov    edx,0x55
   140027342:	call   0x14001c4c8
   140027347:	test   eax,eax
   140027349:	jne    0x14002737b
   14002734b:	or     DWORD PTR [rbx+0x10],0x4
   14002734f:	mov    eax,DWORD PTR [rbx+0x10]
   140027352:	shr    eax,0x2
   140027355:	not    eax
   140027357:	and    eax,0x1
   14002735a:	mov    rcx,QWORD PTR [rsp+0x120]
   140027362:	xor    rcx,rsp
   140027365:	call   0x14000c380
   14002736a:	mov    rbx,QWORD PTR [rsp+0x148]
   140027372:	add    rsp,0x130
   140027379:	pop    rdi
   14002737a:	ret    
   14002737b:	and    QWORD PTR [rsp+0x20],0x0
   140027381:	xor    r9d,r9d
   140027384:	xor    r8d,r8d
   140027387:	xor    edx,edx
   140027389:	xor    ecx,ecx
   14002738b:	call   0x140008da8
   140027390:	int3   
   140027391:	int3   
   140027392:	int3   
   140027393:	int3   
   140027394:	mov    QWORD PTR [rsp+0x10],rbx
   140027399:	mov    QWORD PTR [rsp+0x18],rsi
   14002739e:	push   rdi
   14002739f:	sub    rsp,0x20
   1400273a3:	xor    esi,esi
   1400273a5:	mov    rdi,rdx
   1400273a8:	mov    rbx,rcx
   1400273ab:	test   rcx,rcx
   1400273ae:	je     0x140027406
   1400273b0:	cmp    WORD PTR [rcx],si
   1400273b3:	je     0x140027406
   1400273b5:	lea    rdx,[rip+0xe7f4]        # 0x140035bb0
   1400273bc:	call   0x140026c50
   1400273c1:	test   eax,eax
   1400273c3:	je     0x140027406
   1400273c5:	lea    rdx,[rip+0xe7ec]        # 0x140035bb8
   1400273cc:	mov    rcx,rbx
   1400273cf:	call   0x140026c50
   1400273d4:	test   eax,eax
   1400273d6:	jne    0x1400273fc
   1400273d8:	lea    rcx,[rdi+0x258]
   1400273df:	lea    r9d,[rsi+0x2]
   1400273e3:	lea    r8,[rsp+0x30]
   1400273e8:	mov    edx,0x2000000b
   1400273ed:	call   0x14000fa04
   1400273f2:	test   eax,eax
   1400273f4:	je     0x140027426
   1400273f6:	mov    eax,DWORD PTR [rsp+0x30]
   1400273fa:	jmp    0x140027438
   1400273fc:	mov    rcx,rbx
   1400273ff:	call   0x140028b7c
   140027404:	jmp    0x140027438
   140027406:	lea    rcx,[rdi+0x258]
   14002740d:	lea    r8,[rsp+0x30]
   140027412:	mov    r9d,0x2
   140027418:	mov    edx,0x20001004
   14002741d:	call   0x14000fa04
   140027422:	test   eax,eax
   140027424:	jne    0x14002742a
   140027426:	xor    eax,eax
   140027428:	jmp    0x140027438
   14002742a:	mov    eax,DWORD PTR [rsp+0x30]
   14002742e:	test   eax,eax
   140027430:	jne    0x140027438
   140027432:	call   QWORD PTR [rip+0x4c30]        # 0x14002c068
   140027438:	mov    rbx,QWORD PTR [rsp+0x38]
   14002743d:	mov    rsi,QWORD PTR [rsp+0x40]
   140027442:	add    rsp,0x20
   140027446:	pop    rdi
   140027447:	ret    
   140027448:	mov    QWORD PTR [rsp+0x10],rbx
   14002744d:	push   rdi
   14002744e:	sub    rsp,0x40
   140027452:	mov    rax,QWORD PTR [rip+0x14d77]        # 0x14003c1d0
   140027459:	xor    rax,rsp
   14002745c:	mov    QWORD PTR [rsp+0x38],rax
   140027461:	mov    r9d,0x9
   140027467:	lea    r8,[rsp+0x20]
   14002746c:	mov    rdi,rcx
   14002746f:	lea    edx,[r9+0x50]
   140027473:	call   0x14000fa04
   140027478:	xor    ebx,ebx
   14002747a:	test   eax,eax
   14002747c:	je     0x140027498
   14002747e:	lea    rcx,[rsp+0x20]
   140027483:	mov    r8d,0x9
   140027489:	mov    rdx,rdi
   14002748c:	call   0x140026ccc
   140027491:	test   eax,eax
   140027493:	sete   bl
   140027496:	mov    eax,ebx
   140027498:	mov    rcx,QWORD PTR [rsp+0x38]
   14002749d:	xor    rcx,rsp
   1400274a0:	call   0x14000c380
   1400274a5:	mov    rbx,QWORD PTR [rsp+0x58]
   1400274aa:	add    rsp,0x40
   1400274ae:	pop    rdi
   1400274af:	ret    
   1400274b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400274b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400274ba:	push   rdi
   1400274bb:	sub    rsp,0x20
   1400274bf:	mov    rsi,r8
   1400274c2:	mov    edi,edx
   1400274c4:	call   0x140027448
   1400274c9:	xor    ebx,ebx
   1400274cb:	test   eax,eax
   1400274cd:	jne    0x140027509
   1400274cf:	test   edi,edi
   1400274d1:	je     0x140027509
   1400274d3:	mov    rcx,QWORD PTR [rsi]
   1400274d6:	test   rcx,rcx
   1400274d9:	je     0x1400274f9
   1400274db:	movzx  edx,WORD PTR [rcx]
   1400274de:	add    rcx,0x2
   1400274e2:	lea    eax,[rdx-0x41]
   1400274e5:	cmp    ax,0x19
   1400274e9:	jbe    0x1400274f5
   1400274eb:	sub    dx,0x61
   1400274ef:	cmp    dx,0x19
   1400274f3:	ja     0x1400274f9
   1400274f5:	inc    ebx
   1400274f7:	jmp    0x1400274db
   1400274f9:	mov    rcx,QWORD PTR [rsi]
   1400274fc:	call   0x14001c4ac
   140027501:	cmp    ebx,eax
   140027503:	jne    0x140027509
   140027505:	xor    eax,eax
   140027507:	jmp    0x14002750e
   140027509:	mov    eax,0x1
   14002750e:	mov    rbx,QWORD PTR [rsp+0x30]
   140027513:	mov    rsi,QWORD PTR [rsp+0x38]
   140027518:	add    rsp,0x20
   14002751c:	pop    rdi
   14002751d:	ret    
   14002751e:	int3   
   14002751f:	int3   
   140027520:	mov    rax,rsp
   140027523:	mov    QWORD PTR [rax+0x8],rbx
   140027527:	mov    QWORD PTR [rax+0x10],rbp
   14002752b:	mov    QWORD PTR [rax+0x18],rsi
   14002752f:	mov    QWORD PTR [rax+0x20],rdi
   140027533:	push   r12
   140027535:	push   r14
   140027537:	push   r15
   140027539:	sub    rsp,0x20
   14002753d:	xor    ebx,ebx
   14002753f:	mov    r15,r8
   140027542:	mov    edi,edx
   140027544:	mov    r12,rcx
   140027547:	mov    eax,0x1
   14002754c:	mov    esi,ebx
   14002754e:	test   edx,edx
   140027550:	js     0x140027593
   140027552:	test   eax,eax
   140027554:	je     0x140027595
   140027556:	mov    rcx,QWORD PTR [r15]
   140027559:	lea    eax,[rsi+rdi*1]
   14002755c:	cdq    
   14002755d:	sub    eax,edx
   14002755f:	sar    eax,1
   140027561:	movsxd rbp,eax
   140027564:	mov    r14,rbp
   140027567:	shl    r14,0x4
   14002756b:	mov    rdx,QWORD PTR [r14+r12*1]
   14002756f:	call   0x140028c40
   140027574:	test   eax,eax
   140027576:	jne    0x140027585
   140027578:	lea    rcx,[r12+0x8]
   14002757d:	add    rcx,r14
   140027580:	mov    QWORD PTR [r15],rcx
   140027583:	jmp    0x14002758f
   140027585:	jns    0x14002758c
   140027587:	lea    edi,[rbp-0x1]
   14002758a:	jmp    0x14002758f
   14002758c:	lea    esi,[rbp+0x1]
   14002758f:	cmp    esi,edi
   140027591:	jle    0x140027552
   140027593:	test   eax,eax
   140027595:	mov    rbp,QWORD PTR [rsp+0x48]
   14002759a:	mov    rsi,QWORD PTR [rsp+0x50]
   14002759f:	mov    rdi,QWORD PTR [rsp+0x58]
   1400275a4:	sete   bl
   1400275a7:	mov    eax,ebx
   1400275a9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400275ae:	add    rsp,0x20
   1400275b2:	pop    r15
   1400275b4:	pop    r14
   1400275b6:	pop    r12
   1400275b8:	ret    
   1400275b9:	int3   
   1400275ba:	int3   
   1400275bb:	int3   
   1400275bc:	rex push rbx
   1400275be:	push   rbp
   1400275bf:	push   rsi
   1400275c0:	push   rdi
   1400275c1:	push   r12
   1400275c3:	push   r14
   1400275c5:	push   r15
   1400275c7:	sub    rsp,0xf0
   1400275ce:	mov    rax,QWORD PTR [rip+0x14bfb]        # 0x14003c1d0
   1400275d5:	xor    rax,rsp
   1400275d8:	mov    QWORD PTR [rsp+0xe0],rax
   1400275e0:	mov    rbp,r8
   1400275e3:	mov    rsi,rdx
   1400275e6:	mov    r14,rcx
   1400275e9:	call   0x14000a3ec
   1400275ee:	xor    r12d,r12d
   1400275f1:	lea    rbx,[rax+0x140]
   1400275f8:	lea    rax,[r14+0x80]
   1400275ff:	lea    r15,[rbx+0x258]
   140027606:	lea    rdi,[rbx+0x8]
   14002760a:	mov    DWORD PTR [rbx+0x10],r12d
   14002760e:	mov    WORD PTR [r15],r12w
   140027612:	mov    QWORD PTR [rdi],rax
   140027615:	mov    QWORD PTR [rbx],r14
   140027618:	cmp    WORD PTR [rax],r12w
   14002761c:	je     0x140027632
   14002761e:	lea    edx,[r12+0x16]
   140027623:	lea    rcx,[rip+0xe226]        # 0x140035850
   14002762a:	mov    r8,rdi
   14002762d:	call   0x140027520
   140027632:	mov    rax,QWORD PTR [rbx]
   140027635:	cmp    WORD PTR [rax],r12w
   140027639:	je     0x1400277b1
   14002763f:	mov    rax,QWORD PTR [rdi]
   140027642:	mov    rcx,rbx
   140027645:	cmp    WORD PTR [rax],r12w
   140027649:	je     0x140027652
   14002764b:	call   0x140026dc0
   140027650:	jmp    0x140027657
   140027652:	call   0x140026e70
   140027657:	cmp    DWORD PTR [rbx+0x10],r12d
   14002765b:	jne    0x140027694
   14002765d:	lea    rcx,[rip+0xd5bc]        # 0x140034c20
   140027664:	mov    r8,rbx
   140027667:	mov    edx,0x40
   14002766c:	call   0x140027520
   140027671:	test   eax,eax
   140027673:	je     0x14002768a
   140027675:	mov    rax,QWORD PTR [rdi]
   140027678:	mov    rcx,rbx
   14002767b:	cmp    WORD PTR [rax],r12w
   14002767f:	je     0x1400277a7
   140027685:	call   0x140026dc0
   14002768a:	cmp    DWORD PTR [rbx+0x10],r12d
   14002768e:	je     0x1400277fa
   140027694:	lea    rcx,[r14+0x100]
   14002769b:	mov    rdx,rbx
   14002769e:	call   0x140027394
   1400276a3:	mov    ebx,eax
   1400276a5:	test   eax,eax
   1400276a7:	je     0x1400277fa
   1400276ad:	lea    ecx,[rax-0xfde8]
   1400276b3:	cmp    ecx,0x1
   1400276b6:	jbe    0x1400277fa
   1400276bc:	movzx  ecx,ax
   1400276bf:	call   QWORD PTR [rip+0x49ab]        # 0x14002c070
   1400276c5:	test   eax,eax
   1400276c7:	je     0x1400277fa
   1400276cd:	test   rsi,rsi
   1400276d0:	je     0x1400276d4
   1400276d2:	mov    DWORD PTR [rsi],ebx
   1400276d4:	test   rbp,rbp
   1400276d7:	je     0x1400277a0
   1400276dd:	lea    rsi,[rbp+0x120]
   1400276e4:	mov    rcx,r15
   1400276e7:	mov    WORD PTR [rsi],r12w
   1400276eb:	call   0x14001c4ac
   1400276f0:	mov    r8,r15
   1400276f3:	lea    r9,[rax+0x1]
   1400276f7:	mov    edx,0x55
   1400276fc:	mov    rcx,rsi
   1400276ff:	call   0x14001c4c8
   140027704:	test   eax,eax
   140027706:	jne    0x140027833
   14002770c:	lea    r9d,[rax+0x40]
   140027710:	mov    r8,rbp
   140027713:	mov    edx,0x1001
   140027718:	mov    rcx,rsi
   14002771b:	call   0x14000fa04
   140027720:	test   eax,eax
   140027722:	je     0x1400277fa
   140027728:	lea    rdi,[rbp+0x80]
   14002772f:	mov    r9d,0x40
   140027735:	mov    edx,0x1002
   14002773a:	mov    r8,rdi
   14002773d:	mov    rcx,rsi
   140027740:	call   0x14000fa04
   140027745:	test   eax,eax
   140027747:	je     0x1400277fa
   14002774d:	mov    edx,0x5f
   140027752:	mov    rcx,rdi
   140027755:	call   0x140028bb4
   14002775a:	test   rax,rax
   14002775d:	jne    0x14002776f
   14002775f:	lea    edx,[rax+0x2e]
   140027762:	mov    rcx,rdi
   140027765:	call   0x140028bb4
   14002776a:	test   rax,rax
   14002776d:	je     0x140027788
   14002776f:	mov    r9d,0x40
   140027775:	mov    r8,rdi
   140027778:	mov    rcx,rsi
   14002777b:	lea    edx,[r9-0x39]
   14002777f:	call   0x14000fa04
   140027784:	test   eax,eax
   140027786:	je     0x1400277fa
   140027788:	mov    r9d,0xa
   14002778e:	lea    rdx,[rbp+0x100]
   140027795:	mov    ecx,ebx
   140027797:	lea    r8d,[r9+0x6]
   14002779b:	call   0x1400288ac
   1400277a0:	mov    eax,0x1
   1400277a5:	jmp    0x1400277fc
   1400277a7:	call   0x140026e70
   1400277ac:	jmp    0x14002768a
   1400277b1:	or     DWORD PTR [rbx+0x10],0x104
   1400277b8:	lea    rcx,[rsp+0x30]
   1400277bd:	mov    edx,0x55
   1400277c2:	call   0x14000facc
   1400277c7:	cmp    eax,0x1
   1400277ca:	jle    0x14002768a
   1400277d0:	lea    rcx,[rsp+0x30]
   1400277d5:	call   0x14001c4ac
   1400277da:	lea    r8,[rsp+0x30]
   1400277df:	mov    edx,0x55
   1400277e4:	lea    r9,[rax+0x1]
   1400277e8:	mov    rcx,r15
   1400277eb:	call   0x14001c4c8
   1400277f0:	test   eax,eax
   1400277f2:	je     0x14002768a
   1400277f8:	jmp    0x14002781e
   1400277fa:	xor    eax,eax
   1400277fc:	mov    rcx,QWORD PTR [rsp+0xe0]
   140027804:	xor    rcx,rsp
   140027807:	call   0x14000c380
   14002780c:	add    rsp,0xf0
   140027813:	pop    r15
   140027815:	pop    r14
   140027817:	pop    r12
   140027819:	pop    rdi
   14002781a:	pop    rsi
   14002781b:	pop    rbp
   14002781c:	pop    rbx
   14002781d:	ret    
   14002781e:	xor    r9d,r9d
   140027821:	xor    r8d,r8d
   140027824:	xor    edx,edx
   140027826:	xor    ecx,ecx
   140027828:	mov    QWORD PTR [rsp+0x20],r12
   14002782d:	call   0x140008da8
   140027832:	int3   
   140027833:	xor    r9d,r9d
   140027836:	xor    r8d,r8d
   140027839:	xor    edx,edx
   14002783b:	xor    ecx,ecx
   14002783d:	mov    QWORD PTR [rsp+0x20],r12
   140027842:	call   0x140008da8
   140027847:	int3   
   140027848:	mov    QWORD PTR [rsp+0x10],rbx
   14002784d:	mov    QWORD PTR [rsp+0x18],rbp
   140027852:	mov    QWORD PTR [rsp+0x20],rsi
   140027857:	push   rdi
   140027858:	sub    rsp,0x120
   14002785f:	mov    rax,QWORD PTR [rip+0x1496a]        # 0x14003c1d0
   140027866:	xor    rax,rsp
   140027869:	mov    QWORD PTR [rsp+0x110],rax
   140027871:	mov    rbx,rcx
   140027874:	call   0x14000a3ec
   140027879:	mov    rbp,rax
   14002787c:	call   0x14000a3ec
   140027881:	mov    rcx,rbx
   140027884:	mov    rdi,QWORD PTR [rax+0x470]
   14002788b:	call   0x140027e4c
   140027890:	mov    ecx,DWORD PTR [rbp+0x15c]
   140027896:	neg    ecx
   140027898:	lea    r8,[rsp+0x20]
   14002789d:	mov    r9d,0xf0
   1400278a3:	sbb    edx,edx
   1400278a5:	mov    ecx,eax
   1400278a7:	mov    esi,eax
   1400278a9:	and    edx,0xfffff005
   1400278af:	add    edx,0x1002
   1400278b5:	call   QWORD PTR [rip+0x4825]        # 0x14002c0e0
   1400278bb:	xor    ebx,ebx
   1400278bd:	test   eax,eax
   1400278bf:	jne    0x1400278c8
   1400278c1:	mov    DWORD PTR [rdi],ebx
   1400278c3:	lea    eax,[rbx+0x1]
   1400278c6:	jmp    0x14002790b
   1400278c8:	mov    rcx,QWORD PTR [rbp+0x148]
   1400278cf:	lea    rdx,[rsp+0x20]
   1400278d4:	call   0x140028c40
   1400278d9:	test   eax,eax
   1400278db:	jne    0x140027901
   1400278dd:	lea    rcx,[rip+0xe2dc]        # 0x140035bc0
   1400278e4:	cmp    si,WORD PTR [rcx]
   1400278e7:	je     0x140027901
   1400278e9:	inc    ebx
   1400278eb:	add    rcx,0x2
   1400278ef:	movsxd rax,ebx
   1400278f2:	cmp    rax,0xa
   1400278f6:	jb     0x1400278e4
   1400278f8:	or     DWORD PTR [rdi],0x4
   1400278fb:	mov    DWORD PTR [rdi+0x8],esi
   1400278fe:	mov    DWORD PTR [rdi+0x4],esi
   140027901:	mov    eax,DWORD PTR [rdi]
   140027903:	shr    eax,0x2
   140027906:	not    eax
   140027908:	and    eax,0x1
   14002790b:	mov    rcx,QWORD PTR [rsp+0x110]
   140027913:	xor    rcx,rsp
   140027916:	call   0x14000c380
   14002791b:	lea    r11,[rsp+0x120]
   140027923:	mov    rbx,QWORD PTR [r11+0x18]
   140027927:	mov    rbp,QWORD PTR [r11+0x20]
   14002792b:	mov    rsi,QWORD PTR [r11+0x28]
   14002792f:	mov    rsp,r11
   140027932:	pop    rdi
   140027933:	ret    
   140027934:	mov    QWORD PTR [rsp+0x8],rbx
   140027939:	push   rdi
   14002793a:	sub    rsp,0x20
   14002793e:	mov    rdi,rcx
   140027941:	call   0x14000a3ec
   140027946:	mov    rcx,QWORD PTR [rax+0x148]
   14002794d:	mov    rbx,rax
   140027950:	call   0x14001c4ac
   140027955:	xor    edx,edx
   140027957:	lea    rcx,[rip+0xfffffffffffffeea]        # 0x140027848
   14002795e:	cmp    rax,0x3
   140027962:	sete   dl
   140027965:	mov    DWORD PTR [rbx+0x15c],edx
   14002796b:	mov    edx,0x1
   140027970:	call   QWORD PTR [rip+0x472a]        # 0x14002c0a0
   140027976:	test   BYTE PTR [rdi],0x4
   140027979:	jne    0x14002797e
   14002797b:	and    DWORD PTR [rdi],0x0
   14002797e:	mov    rbx,QWORD PTR [rsp+0x30]
   140027983:	add    rsp,0x20
   140027987:	pop    rdi
   140027988:	ret    
   140027989:	int3   
   14002798a:	int3   
   14002798b:	int3   
   14002798c:	rex push rbx
   14002798e:	sub    rsp,0x20
   140027992:	or     DWORD PTR [rcx],0x104
   140027998:	mov    rbx,rcx
   14002799b:	call   QWORD PTR [rip+0x4707]        # 0x14002c0a8
   1400279a1:	mov    DWORD PTR [rbx+0x8],eax
   1400279a4:	mov    DWORD PTR [rbx+0x4],eax
   1400279a7:	add    rsp,0x20
   1400279ab:	pop    rbx
   1400279ac:	ret    
   1400279ad:	int3   
   1400279ae:	int3   
   1400279af:	int3   
   1400279b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400279b5:	push   rdi
   1400279b6:	sub    rsp,0x20
   1400279ba:	mov    rdi,rcx
   1400279bd:	call   0x14000a3ec
   1400279c2:	lea    rbx,[rax+0x140]
   1400279c9:	mov    rcx,QWORD PTR [rbx]
   1400279cc:	call   0x14001c4ac
   1400279d1:	mov    rcx,QWORD PTR [rbx+0x8]
   1400279d5:	xor    edx,edx
   1400279d7:	cmp    rax,0x3
   1400279db:	sete   dl
   1400279de:	mov    DWORD PTR [rbx+0x18],edx
   1400279e1:	call   0x14001c4ac
   1400279e6:	xor    ecx,ecx
   1400279e8:	cmp    rax,0x3
   1400279ec:	mov    edx,0x2
   1400279f1:	sete   cl
   1400279f4:	mov    DWORD PTR [rbx+0x1c],ecx
   1400279f7:	and    DWORD PTR [rdi+0x4],0x0
   1400279fb:	cmp    DWORD PTR [rbx+0x18],0x0
   1400279ff:	jne    0x140027a2c
   140027a01:	mov    rcx,QWORD PTR [rbx]
   140027a04:	xor    r9d,r9d
   140027a07:	movzx  r8d,WORD PTR [rcx]
   140027a0b:	add    rcx,rdx
   140027a0e:	lea    eax,[r8-0x41]
   140027a12:	cmp    ax,0x19
   140027a16:	jbe    0x140027a24
   140027a18:	sub    r8w,0x61
   140027a1d:	cmp    r8w,0x19
   140027a22:	ja     0x140027a29
   140027a24:	inc    r9d
   140027a27:	jmp    0x140027a07
   140027a29:	mov    edx,r9d
   140027a2c:	mov    DWORD PTR [rbx+0x14],edx
   140027a2f:	lea    rcx,[rip+0xea]        # 0x140027b20
   140027a36:	mov    edx,0x1
   140027a3b:	call   QWORD PTR [rip+0x465f]        # 0x14002c0a0
   140027a41:	test   DWORD PTR [rdi],0x100
   140027a47:	je     0x140027a56
   140027a49:	test   DWORD PTR [rdi],0x200
   140027a4f:	je     0x140027a56
   140027a51:	test   BYTE PTR [rdi],0x7
   140027a54:	jne    0x140027a59
   140027a56:	and    DWORD PTR [rdi],0x0
   140027a59:	mov    rbx,QWORD PTR [rsp+0x30]
   140027a5e:	add    rsp,0x20
   140027a62:	pop    rdi
   140027a63:	ret    
   140027a64:	mov    QWORD PTR [rsp+0x8],rbx
   140027a69:	push   rdi
   140027a6a:	sub    rsp,0x20
   140027a6e:	mov    rdi,rcx
   140027a71:	call   0x14000a3ec
   140027a76:	mov    rcx,QWORD PTR [rax+0x140]
   140027a7d:	mov    rbx,rax
   140027a80:	call   0x14001c4ac
   140027a85:	xor    edx,edx
   140027a87:	mov    ecx,0x2
   140027a8c:	cmp    rax,0x3
   140027a90:	sete   dl
   140027a93:	mov    DWORD PTR [rbx+0x158],edx
   140027a99:	test   edx,edx
   140027a9b:	jne    0x140027acc
   140027a9d:	mov    rdx,QWORD PTR [rbx+0x140]
   140027aa4:	xor    r9d,r9d
   140027aa7:	movzx  r8d,WORD PTR [rdx]
   140027aab:	add    rdx,rcx
   140027aae:	lea    eax,[r8-0x41]
   140027ab2:	cmp    ax,0x19
   140027ab6:	jbe    0x140027ac4
   140027ab8:	sub    r8w,0x61
   140027abd:	cmp    r8w,0x19
   140027ac2:	ja     0x140027ac9
   140027ac4:	inc    r9d
   140027ac7:	jmp    0x140027aa7
   140027ac9:	mov    ecx,r9d
   140027acc:	mov    DWORD PTR [rbx+0x154],ecx
   140027ad2:	lea    rcx,[rip+0x277]        # 0x140027d50
   140027ad9:	mov    edx,0x1
   140027ade:	call   QWORD PTR [rip+0x45bc]        # 0x14002c0a0
   140027ae4:	test   BYTE PTR [rdi],0x4
   140027ae7:	jne    0x140027aec
   140027ae9:	and    DWORD PTR [rdi],0x0
   140027aec:	mov    rbx,QWORD PTR [rsp+0x30]
   140027af1:	add    rsp,0x20
   140027af5:	pop    rdi
   140027af6:	ret    
   140027af7:	int3   
   140027af8:	xor    r8d,r8d
   140027afb:	movzx  edx,WORD PTR [rcx]
   140027afe:	add    rcx,0x2
   140027b02:	lea    eax,[rdx-0x41]
   140027b05:	cmp    ax,0x19
   140027b09:	jbe    0x140027b15
   140027b0b:	sub    dx,0x61
   140027b0f:	cmp    dx,0x19
   140027b13:	ja     0x140027b1a
   140027b15:	inc    r8d
   140027b18:	jmp    0x140027afb
   140027b1a:	mov    eax,r8d
   140027b1d:	ret    
   140027b1e:	int3   
   140027b1f:	int3   
   140027b20:	mov    QWORD PTR [rsp+0x10],rbx
   140027b25:	mov    QWORD PTR [rsp+0x18],rsi
   140027b2a:	mov    QWORD PTR [rsp+0x20],rdi
   140027b2f:	push   r14
   140027b31:	sub    rsp,0x120
   140027b38:	mov    rax,QWORD PTR [rip+0x14691]        # 0x14003c1d0
   140027b3f:	xor    rax,rsp
   140027b42:	mov    QWORD PTR [rsp+0x110],rax
   140027b4a:	mov    rbx,rcx
   140027b4d:	call   0x14000a3ec
   140027b52:	lea    rsi,[rax+0x140]
   140027b59:	call   0x14000a3ec
   140027b5e:	mov    rcx,rbx
   140027b61:	mov    rdi,QWORD PTR [rax+0x470]
   140027b68:	call   0x140027e4c
   140027b6d:	mov    ecx,DWORD PTR [rsi+0x1c]
   140027b70:	neg    ecx
   140027b72:	lea    r8,[rsp+0x20]
   140027b77:	mov    r9d,0xf0
   140027b7d:	sbb    edx,edx
   140027b7f:	mov    ecx,eax
   140027b81:	mov    ebx,eax
   140027b83:	and    edx,0xfffff005
   140027b89:	add    edx,0x1002
   140027b8f:	call   QWORD PTR [rip+0x454b]        # 0x14002c0e0
   140027b95:	xor    r14d,r14d
   140027b98:	test   eax,eax
   140027b9a:	jne    0x140027ba9
   140027b9c:	mov    DWORD PTR [rdi],r14d
   140027b9f:	mov    eax,0x1
   140027ba4:	jmp    0x140027d23
   140027ba9:	mov    rcx,QWORD PTR [rsi+0x8]
   140027bad:	lea    rdx,[rsp+0x20]
   140027bb2:	call   0x140028c40
   140027bb7:	test   eax,eax
   140027bb9:	jne    0x140027c6b
   140027bbf:	mov    eax,DWORD PTR [rsi+0x18]
   140027bc2:	lea    r8,[rsp+0x20]
   140027bc7:	mov    r9d,0xf0
   140027bcd:	neg    eax
   140027bcf:	mov    ecx,ebx
   140027bd1:	sbb    edx,edx
   140027bd3:	and    edx,0xfffff002
   140027bd9:	add    edx,0x1001
   140027bdf:	call   QWORD PTR [rip+0x44fb]        # 0x14002c0e0
   140027be5:	test   eax,eax
   140027be7:	je     0x140027b9c
   140027be9:	mov    rcx,QWORD PTR [rsi]
   140027bec:	lea    rdx,[rsp+0x20]
   140027bf1:	call   0x140028c40
   140027bf6:	test   eax,eax
   140027bf8:	jne    0x140027c05
   140027bfa:	or     DWORD PTR [rdi],0x304
   140027c00:	mov    DWORD PTR [rdi+0x4],ebx
   140027c03:	jmp    0x140027c68
   140027c05:	test   BYTE PTR [rdi],0x2
   140027c08:	jne    0x140027c6b
   140027c0a:	cmp    DWORD PTR [rsi+0x14],r14d
   140027c0e:	je     0x140027c3d
   140027c10:	movsxd r8,DWORD PTR [rsi+0x14]
   140027c14:	mov    rcx,QWORD PTR [rsi]
   140027c17:	lea    rdx,[rsp+0x20]
   140027c1c:	call   0x140028db4
   140027c21:	test   eax,eax
   140027c23:	jne    0x140027c3d
   140027c25:	or     DWORD PTR [rdi],0x2
   140027c28:	mov    DWORD PTR [rdi+0x8],ebx
   140027c2b:	mov    rcx,QWORD PTR [rsi]
   140027c2e:	call   0x14001c4ac
   140027c33:	cmp    eax,DWORD PTR [rsi+0x14]
   140027c36:	jne    0x140027c6b
   140027c38:	mov    DWORD PTR [rdi+0x4],ebx
   140027c3b:	jmp    0x140027c6b
   140027c3d:	mov    ecx,DWORD PTR [rdi]
   140027c3f:	test   cl,0x1
   140027c42:	jne    0x140027c6b
   140027c44:	mov    r8d,r14d
   140027c47:	lea    rdx,[rip+0xdf72]        # 0x140035bc0
   140027c4e:	cmp    bx,WORD PTR [rdx]
   140027c51:	je     0x140027c6b
   140027c53:	inc    r8d
   140027c56:	add    rdx,0x2
   140027c5a:	movsxd rax,r8d
   140027c5d:	cmp    rax,0xa
   140027c61:	jb     0x140027c4e
   140027c63:	or     ecx,0x1
   140027c66:	mov    DWORD PTR [rdi],ecx
   140027c68:	mov    DWORD PTR [rdi+0x8],ebx
   140027c6b:	mov    eax,DWORD PTR [rdi]
   140027c6d:	mov    ecx,0x300
   140027c72:	and    eax,ecx
   140027c74:	cmp    eax,ecx
   140027c76:	je     0x140027d19
   140027c7c:	mov    eax,DWORD PTR [rsi+0x18]
   140027c7f:	lea    r8,[rsp+0x20]
   140027c84:	mov    r9d,0xf0
   140027c8a:	neg    eax
   140027c8c:	mov    ecx,ebx
   140027c8e:	sbb    edx,edx
   140027c90:	and    edx,0xfffff002
   140027c96:	add    edx,0x1001
   140027c9c:	call   QWORD PTR [rip+0x443e]        # 0x14002c0e0
   140027ca2:	test   eax,eax
   140027ca4:	je     0x140027b9c
   140027caa:	mov    rcx,QWORD PTR [rsi]
   140027cad:	lea    rdx,[rsp+0x20]
   140027cb2:	call   0x140028c40
   140027cb7:	test   eax,eax
   140027cb9:	jne    0x140027cdf
   140027cbb:	bts    DWORD PTR [rdi],0x9
   140027cbf:	cmp    DWORD PTR [rsi+0x18],r14d
   140027cc3:	jne    0x140027d0c
   140027cc5:	cmp    DWORD PTR [rsi+0x14],r14d
   140027cc9:	je     0x140027d0c
   140027ccb:	mov    rcx,QWORD PTR [rsi]
   140027cce:	call   0x14001c4ac
   140027cd3:	cmp    eax,DWORD PTR [rsi+0x14]
   140027cd6:	jne    0x140027d0c
   140027cd8:	mov    edx,0x1
   140027cdd:	jmp    0x140027cfe
   140027cdf:	cmp    DWORD PTR [rsi+0x18],r14d
   140027ce3:	jne    0x140027d19
   140027ce5:	cmp    DWORD PTR [rsi+0x14],r14d
   140027ce9:	je     0x140027d19
   140027ceb:	mov    rcx,QWORD PTR [rsi]
   140027cee:	lea    rdx,[rsp+0x20]
   140027cf3:	call   0x140028c40
   140027cf8:	test   eax,eax
   140027cfa:	jne    0x140027d19
   140027cfc:	xor    edx,edx
   140027cfe:	mov    r8,rdi
   140027d01:	mov    ecx,ebx
   140027d03:	call   0x140027f74
   140027d08:	test   eax,eax
   140027d0a:	je     0x140027d19
   140027d0c:	bts    DWORD PTR [rdi],0x8
   140027d10:	cmp    DWORD PTR [rdi+0x4],r14d
   140027d14:	jne    0x140027d19
   140027d16:	mov    DWORD PTR [rdi+0x4],ebx
   140027d19:	mov    eax,DWORD PTR [rdi]
   140027d1b:	shr    eax,0x2
   140027d1e:	not    eax
   140027d20:	and    eax,0x1
   140027d23:	mov    rcx,QWORD PTR [rsp+0x110]
   140027d2b:	xor    rcx,rsp
   140027d2e:	call   0x14000c380
   140027d33:	lea    r11,[rsp+0x120]
   140027d3b:	mov    rbx,QWORD PTR [r11+0x18]
   140027d3f:	mov    rsi,QWORD PTR [r11+0x20]
   140027d43:	mov    rdi,QWORD PTR [r11+0x28]
   140027d47:	mov    rsp,r11
   140027d4a:	pop    r14
   140027d4c:	ret    
   140027d4d:	int3   
   140027d4e:	int3   
   140027d4f:	int3   
   140027d50:	mov    QWORD PTR [rsp+0x10],rbx
   140027d55:	mov    QWORD PTR [rsp+0x18],rsi
   140027d5a:	push   rdi
   140027d5b:	sub    rsp,0x120
   140027d62:	mov    rax,QWORD PTR [rip+0x14467]        # 0x14003c1d0
   140027d69:	xor    rax,rsp
   140027d6c:	mov    QWORD PTR [rsp+0x110],rax
   140027d74:	mov    rbx,rcx
   140027d77:	call   0x14000a3ec
   140027d7c:	lea    rsi,[rax+0x140]
   140027d83:	call   0x14000a3ec
   140027d88:	mov    rcx,rbx
   140027d8b:	mov    rdi,QWORD PTR [rax+0x470]
   140027d92:	call   0x140027e4c
   140027d97:	mov    ecx,DWORD PTR [rsi+0x18]
   140027d9a:	neg    ecx
   140027d9c:	lea    r8,[rsp+0x20]
   140027da1:	mov    r9d,0xf0
   140027da7:	sbb    edx,edx
   140027da9:	mov    ecx,eax
   140027dab:	mov    ebx,eax
   140027dad:	and    edx,0xfffff002
   140027db3:	add    edx,0x1001
   140027db9:	call   QWORD PTR [rip+0x4321]        # 0x14002c0e0
   140027dbf:	test   eax,eax
   140027dc1:	jne    0x140027dcc
   140027dc3:	and    DWORD PTR [rdi],eax
   140027dc5:	mov    eax,0x1
   140027dca:	jmp    0x140027e27
   140027dcc:	mov    rcx,QWORD PTR [rsi]
   140027dcf:	lea    rdx,[rsp+0x20]
   140027dd4:	call   0x140028c40
   140027dd9:	test   eax,eax
   140027ddb:	jne    0x140027de7
   140027ddd:	cmp    DWORD PTR [rsi+0x18],eax
   140027de0:	jne    0x140027e14
   140027de2:	lea    edx,[rax+0x1]
   140027de5:	jmp    0x140027e06
   140027de7:	cmp    DWORD PTR [rsi+0x18],0x0
   140027deb:	jne    0x140027e1d
   140027ded:	cmp    DWORD PTR [rsi+0x14],0x0
   140027df1:	je     0x140027e1d
   140027df3:	mov    rcx,QWORD PTR [rsi]
   140027df6:	lea    rdx,[rsp+0x20]
   140027dfb:	call   0x140028c40
   140027e00:	test   eax,eax
   140027e02:	jne    0x140027e1d
   140027e04:	xor    edx,edx
   140027e06:	mov    r8,rdi
   140027e09:	mov    ecx,ebx
   140027e0b:	call   0x140027f74
   140027e10:	test   eax,eax
   140027e12:	je     0x140027e1d
   140027e14:	or     DWORD PTR [rdi],0x4
   140027e17:	mov    DWORD PTR [rdi+0x4],ebx
   140027e1a:	mov    DWORD PTR [rdi+0x8],ebx
   140027e1d:	mov    eax,DWORD PTR [rdi]
   140027e1f:	shr    eax,0x2
   140027e22:	not    eax
   140027e24:	and    eax,0x1
   140027e27:	mov    rcx,QWORD PTR [rsp+0x110]
   140027e2f:	xor    rcx,rsp
   140027e32:	call   0x14000c380
   140027e37:	lea    r11,[rsp+0x120]
   140027e3f:	mov    rbx,QWORD PTR [r11+0x18]
   140027e43:	mov    rsi,QWORD PTR [r11+0x20]
   140027e47:	mov    rsp,r11
   140027e4a:	pop    rdi
   140027e4b:	ret    
   140027e4c:	movzx  edx,WORD PTR [rcx]
   140027e4f:	xor    r10d,r10d
   140027e52:	mov    r9,rcx
   140027e55:	mov    r8d,r10d
   140027e58:	jmp    0x140027e91
   140027e5a:	lea    eax,[rdx-0x61]
   140027e5d:	lea    r9,[r9+0x2]
   140027e61:	cmp    ax,0x5
   140027e65:	ja     0x140027e6e
   140027e67:	mov    eax,0xffd9
   140027e6c:	jmp    0x140027e7c
   140027e6e:	lea    eax,[rdx-0x41]
   140027e71:	cmp    ax,0x5
   140027e75:	ja     0x140027e7f
   140027e77:	mov    eax,0xfff9
   140027e7c:	add    dx,ax
   140027e7f:	shl    r8d,0x4
   140027e83:	movzx  ecx,dx
   140027e86:	movzx  edx,WORD PTR [r9]
   140027e8a:	add    r8d,0xffffffd0
   140027e8e:	add    r8d,ecx
   140027e91:	test   dx,dx
   140027e94:	jne    0x140027e5a
   140027e96:	mov    eax,r8d
   140027e99:	ret    
   140027e9a:	int3   
   140027e9b:	int3   
   140027e9c:	mov    QWORD PTR [rsp+0x10],rbx
   140027ea1:	mov    QWORD PTR [rsp+0x18],rsi
   140027ea6:	push   rdi
   140027ea7:	sub    rsp,0x20
   140027eab:	xor    esi,esi
   140027ead:	mov    rdi,rdx
   140027eb0:	mov    rbx,rcx
   140027eb3:	test   rcx,rcx
   140027eb6:	je     0x140027f0b
   140027eb8:	cmp    WORD PTR [rcx],si
   140027ebb:	je     0x140027f0b
   140027ebd:	lea    rdx,[rip+0xdcec]        # 0x140035bb0
   140027ec4:	call   0x140026c50
   140027ec9:	test   eax,eax
   140027ecb:	je     0x140027f0b
   140027ecd:	lea    rdx,[rip+0xdce4]        # 0x140035bb8
   140027ed4:	mov    rcx,rbx
   140027ed7:	call   0x140026c50
   140027edc:	test   eax,eax
   140027ede:	jne    0x140027f01
   140027ee0:	mov    ecx,DWORD PTR [rdi+0x8]
   140027ee3:	lea    r9d,[rsi+0x2]
   140027ee7:	lea    r8,[rsp+0x30]
   140027eec:	mov    edx,0x2000000b
   140027ef1:	call   QWORD PTR [rip+0x41e9]        # 0x14002c0e0
   140027ef7:	test   eax,eax
   140027ef9:	je     0x140027f28
   140027efb:	mov    eax,DWORD PTR [rsp+0x30]
   140027eff:	jmp    0x140027f3a
   140027f01:	mov    rcx,rbx
   140027f04:	call   0x140028b7c
   140027f09:	jmp    0x140027f3a
   140027f0b:	mov    ecx,DWORD PTR [rdi+0x8]
   140027f0e:	lea    r8,[rsp+0x30]
   140027f13:	mov    r9d,0x2
   140027f19:	mov    edx,0x20001004
   140027f1e:	call   QWORD PTR [rip+0x41bc]        # 0x14002c0e0
   140027f24:	test   eax,eax
   140027f26:	jne    0x140027f2c
   140027f28:	xor    eax,eax
   140027f2a:	jmp    0x140027f3a
   140027f2c:	mov    eax,DWORD PTR [rsp+0x30]
   140027f30:	test   eax,eax
   140027f32:	jne    0x140027f3a
   140027f34:	call   QWORD PTR [rip+0x412e]        # 0x14002c068
   140027f3a:	mov    rbx,QWORD PTR [rsp+0x38]
   140027f3f:	mov    rsi,QWORD PTR [rsp+0x40]
   140027f44:	add    rsp,0x20
   140027f48:	pop    rdi
   140027f49:	ret    
   140027f4a:	int3   
   140027f4b:	int3   
   140027f4c:	xor    r9d,r9d
   140027f4f:	lea    r8,[rip+0xdc6a]        # 0x140035bc0
   140027f56:	lea    eax,[r9+0x1]
   140027f5a:	cmp    cx,WORD PTR [r8]
   140027f5e:	je     0x140027f71
   140027f60:	add    r9d,eax
   140027f63:	add    r8,0x2
   140027f67:	movsxd rdx,r9d
   140027f6a:	cmp    rdx,0xa
   140027f6e:	jb     0x140027f5a
   140027f70:	ret    
   140027f71:	xor    eax,eax
   140027f73:	ret    
   140027f74:	mov    QWORD PTR [rsp+0x10],rbx
   140027f79:	mov    QWORD PTR [rsp+0x18],rbp
   140027f7e:	mov    QWORD PTR [rsp+0x20],rsi
   140027f83:	push   rdi
   140027f84:	sub    rsp,0x20
   140027f88:	mov    ebp,edx
   140027f8a:	mov    edi,ecx
   140027f8c:	call   0x14000a3ec
   140027f91:	mov    ecx,edi
   140027f93:	lea    r8,[rsp+0x30]
   140027f98:	mov    r9d,0x2
   140027f9e:	and    ecx,0x3ff
   140027fa4:	mov    edx,0x20000001
   140027fa9:	mov    rsi,rax
   140027fac:	bts    ecx,0xa
   140027fb0:	call   QWORD PTR [rip+0x412a]        # 0x14002c0e0
   140027fb6:	xor    ebx,ebx
   140027fb8:	test   eax,eax
   140027fba:	jne    0x140027fc0
   140027fbc:	xor    eax,eax
   140027fbe:	jmp    0x140028004
   140027fc0:	cmp    edi,DWORD PTR [rsp+0x30]
   140027fc4:	je     0x140027fff
   140027fc6:	test   ebp,ebp
   140027fc8:	je     0x140027fff
   140027fca:	mov    rcx,QWORD PTR [rsi+0x140]
   140027fd1:	movzx  edx,WORD PTR [rcx]
   140027fd4:	add    rcx,0x2
   140027fd8:	lea    eax,[rdx-0x41]
   140027fdb:	cmp    ax,0x19
   140027fdf:	jbe    0x140027feb
   140027fe1:	sub    dx,0x61
   140027fe5:	cmp    dx,0x19
   140027fe9:	ja     0x140027fef
   140027feb:	inc    ebx
   140027fed:	jmp    0x140027fd1
   140027fef:	mov    rcx,QWORD PTR [rsi+0x140]
   140027ff6:	call   0x14001c4ac
   140027ffb:	cmp    ebx,eax
   140027ffd:	je     0x140027fbc
   140027fff:	mov    eax,0x1
   140028004:	mov    rbx,QWORD PTR [rsp+0x38]
   140028009:	mov    rbp,QWORD PTR [rsp+0x40]
   14002800e:	mov    rsi,QWORD PTR [rsp+0x48]
   140028013:	add    rsp,0x20
   140028017:	pop    rdi
   140028018:	ret    
   140028019:	int3   
   14002801a:	int3   
   14002801b:	int3   
   14002801c:	mov    rax,rsp
   14002801f:	mov    QWORD PTR [rax+0x8],rbx
   140028023:	mov    QWORD PTR [rax+0x10],rbp
   140028027:	mov    QWORD PTR [rax+0x18],rsi
   14002802b:	mov    QWORD PTR [rax+0x20],rdi
   14002802f:	push   r12
   140028031:	push   r14
   140028033:	push   r15
   140028035:	sub    rsp,0x20
   140028039:	xor    ebx,ebx
   14002803b:	mov    r15,r8
   14002803e:	mov    edi,edx
   140028040:	mov    r12,rcx
   140028043:	mov    eax,0x1
   140028048:	mov    esi,ebx
   14002804a:	test   edx,edx
   14002804c:	js     0x14002808f
   14002804e:	test   eax,eax
   140028050:	je     0x140028091
   140028052:	mov    rcx,QWORD PTR [r15]
   140028055:	lea    eax,[rsi+rdi*1]
   140028058:	cdq    
   140028059:	sub    eax,edx
   14002805b:	sar    eax,1
   14002805d:	movsxd rbp,eax
   140028060:	mov    r14,rbp
   140028063:	shl    r14,0x4
   140028067:	mov    rdx,QWORD PTR [r14+r12*1]
   14002806b:	call   0x140028c40
   140028070:	test   eax,eax
   140028072:	jne    0x140028081
   140028074:	lea    rcx,[r12+0x8]
   140028079:	add    rcx,r14
   14002807c:	mov    QWORD PTR [r15],rcx
   14002807f:	jmp    0x14002808b
   140028081:	jns    0x140028088
   140028083:	lea    edi,[rbp-0x1]
   140028086:	jmp    0x14002808b
   140028088:	lea    esi,[rbp+0x1]
   14002808b:	cmp    esi,edi
   14002808d:	jle    0x14002804e
   14002808f:	test   eax,eax
   140028091:	mov    rbp,QWORD PTR [rsp+0x48]
   140028096:	mov    rsi,QWORD PTR [rsp+0x50]
   14002809b:	mov    rdi,QWORD PTR [rsp+0x58]
   1400280a0:	sete   bl
   1400280a3:	mov    eax,ebx
   1400280a5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400280aa:	add    rsp,0x20
   1400280ae:	pop    r15
   1400280b0:	pop    r14
   1400280b2:	pop    r12
   1400280b4:	ret    
   1400280b5:	int3   
   1400280b6:	int3   
   1400280b7:	int3   
   1400280b8:	rex push rbp
   1400280ba:	push   rbx
   1400280bb:	push   rsi
   1400280bc:	push   rdi
   1400280bd:	push   r12
   1400280bf:	push   r14
   1400280c1:	push   r15
   1400280c3:	mov    rbp,rsp
   1400280c6:	sub    rsp,0x40
   1400280ca:	mov    rax,QWORD PTR [rip+0x140ff]        # 0x14003c1d0
   1400280d1:	xor    rax,rsp
   1400280d4:	mov    QWORD PTR [rbp-0x10],rax
   1400280d8:	mov    r14,r8
   1400280db:	mov    r15,rdx
   1400280de:	mov    rsi,rcx
   1400280e1:	call   0x14000a3ec
   1400280e6:	xor    edx,edx
   1400280e8:	lea    rcx,[rbp-0x20]
   1400280ec:	lea    r8d,[rdx+0xc]
   1400280f0:	mov    rdi,rax
   1400280f3:	call   0x140006f70
   1400280f8:	call   0x14000a3ec
   1400280fd:	lea    rcx,[rbp-0x20]
   140028101:	xor    r12d,r12d
   140028104:	mov    QWORD PTR [rax+0x470],rcx
   14002810b:	test   rsi,rsi
   14002810e:	jne    0x14002811c
   140028110:	or     DWORD PTR [rbp-0x20],0x104
   140028117:	jmp    0x140028236
   14002811c:	lea    rax,[rsi+0x80]
   140028123:	lea    rbx,[rdi+0x148]
   14002812a:	mov    QWORD PTR [rdi+0x140],rsi
   140028131:	mov    QWORD PTR [rbx],rax
   140028134:	test   rax,rax
   140028137:	je     0x140028156
   140028139:	cmp    WORD PTR [rax],r12w
   14002813d:	je     0x140028156
   14002813f:	mov    edx,DWORD PTR [rip+0xda63]        # 0x140035ba8
   140028145:	lea    rcx,[rip+0xd704]        # 0x140035850
   14002814c:	mov    r8,rbx
   14002814f:	dec    edx
   140028151:	call   0x14002801c
   140028156:	mov    DWORD PTR [rbp-0x20],r12d
   14002815a:	mov    rax,QWORD PTR [rdi+0x140]
   140028161:	test   rax,rax
   140028164:	je     0x1400281df
   140028166:	cmp    WORD PTR [rax],r12w
   14002816a:	je     0x1400281df
   14002816c:	mov    rax,QWORD PTR [rbx]
   14002816f:	test   rax,rax
   140028172:	je     0x140028185
   140028174:	cmp    WORD PTR [rax],r12w
   140028178:	je     0x140028185
   14002817a:	lea    rcx,[rbp-0x20]
   14002817e:	call   0x1400279b0
   140028183:	jmp    0x14002818e
   140028185:	lea    rcx,[rbp-0x20]
   140028189:	call   0x140027a64
   14002818e:	cmp    DWORD PTR [rbp-0x20],r12d
   140028192:	jne    0x14002824c
   140028198:	mov    edx,DWORD PTR [rip+0xda06]        # 0x140035ba4
   14002819e:	lea    r8,[rdi+0x140]
   1400281a5:	lea    rcx,[rip+0xca74]        # 0x140034c20
   1400281ac:	dec    edx
   1400281ae:	call   0x14002801c
   1400281b3:	test   eax,eax
   1400281b5:	je     0x140028242
   1400281bb:	mov    rax,QWORD PTR [rbx]
   1400281be:	test   rax,rax
   1400281c1:	je     0x1400281d4
   1400281c3:	cmp    WORD PTR [rax],r12w
   1400281c7:	je     0x1400281d4
   1400281c9:	lea    rcx,[rbp-0x20]
   1400281cd:	call   0x1400279b0
   1400281d2:	jmp    0x140028242
   1400281d4:	lea    rcx,[rbp-0x20]
   1400281d8:	call   0x140027a64
   1400281dd:	jmp    0x140028242
   1400281df:	mov    rax,QWORD PTR [rbx]
   1400281e2:	test   rax,rax
   1400281e5:	je     0x14002822f
   1400281e7:	cmp    WORD PTR [rax],r12w
   1400281eb:	je     0x14002822f
   1400281ed:	call   0x14000a3ec
   1400281f2:	mov    rbx,rax
   1400281f5:	mov    rcx,QWORD PTR [rax+0x148]
   1400281fc:	call   0x14001c4ac
   140028201:	mov    ecx,r12d
   140028204:	mov    edx,0x1
   140028209:	cmp    rax,0x3
   14002820d:	sete   cl
   140028210:	mov    DWORD PTR [rbx+0x15c],ecx
   140028216:	lea    rcx,[rip+0xfffffffffffff62b]        # 0x140027848
   14002821d:	call   QWORD PTR [rip+0x3e7d]        # 0x14002c0a0
   140028223:	test   BYTE PTR [rbp-0x20],0x4
   140028227:	jne    0x140028242
   140028229:	mov    DWORD PTR [rbp-0x20],r12d
   14002822d:	jmp    0x140028242
   14002822f:	mov    DWORD PTR [rbp-0x20],0x104
   140028236:	call   QWORD PTR [rip+0x3e6c]        # 0x14002c0a8
   14002823c:	mov    DWORD PTR [rbp-0x1c],eax
   14002823f:	mov    DWORD PTR [rbp-0x18],eax
   140028242:	cmp    DWORD PTR [rbp-0x20],r12d
   140028246:	je     0x140028331
   14002824c:	lea    rax,[rsi+0x100]
   140028253:	neg    rsi
   140028256:	lea    rdx,[rbp-0x20]
   14002825a:	sbb    rcx,rcx
   14002825d:	and    rcx,rax
   140028260:	call   0x140027e9c
   140028265:	mov    ebx,eax
   140028267:	test   eax,eax
   140028269:	je     0x140028331
   14002826f:	lea    ecx,[rax-0xfde8]
   140028275:	cmp    ecx,0x1
   140028278:	jbe    0x140028331
   14002827e:	movzx  ecx,ax
   140028281:	call   QWORD PTR [rip+0x3de9]        # 0x14002c070
   140028287:	test   eax,eax
   140028289:	je     0x140028331
   14002828f:	mov    ecx,DWORD PTR [rbp-0x1c]
   140028292:	mov    edx,0x1
   140028297:	call   QWORD PTR [rip+0x3e3b]        # 0x14002c0d8
   14002829d:	test   eax,eax
   14002829f:	je     0x140028331
   1400282a5:	test   r15,r15
   1400282a8:	je     0x1400282ad
   1400282aa:	mov    DWORD PTR [r15],ebx
   1400282ad:	mov    ecx,DWORD PTR [rbp-0x1c]
   1400282b0:	lea    rdx,[rdi+0x398]
   1400282b7:	mov    edi,0x55
   1400282bc:	mov    r8d,edi
   1400282bf:	call   0x14000f854
   1400282c4:	test   r14,r14
   1400282c7:	je     0x14002832a
   1400282c9:	mov    ecx,DWORD PTR [rbp-0x1c]
   1400282cc:	lea    rdx,[r14+0x120]
   1400282d3:	mov    r8d,edi
   1400282d6:	call   0x14000f854
   1400282db:	mov    ecx,DWORD PTR [rbp-0x1c]
   1400282de:	mov    edi,0x40
   1400282e3:	mov    r9d,edi
   1400282e6:	mov    r8,r14
   1400282e9:	mov    edx,0x1001
   1400282ee:	call   QWORD PTR [rip+0x3dec]        # 0x14002c0e0
   1400282f4:	test   eax,eax
   1400282f6:	je     0x140028331
   1400282f8:	mov    ecx,DWORD PTR [rbp-0x18]
   1400282fb:	lea    r8,[r14+0x80]
   140028302:	mov    r9d,edi
   140028305:	mov    edx,0x1002
   14002830a:	call   QWORD PTR [rip+0x3dd0]        # 0x14002c0e0
   140028310:	test   eax,eax
   140028312:	je     0x140028331
   140028314:	lea    rdx,[r14+0x100]
   14002831b:	lea    r9d,[rdi-0x36]
   14002831f:	lea    r8d,[rdi-0x30]
   140028323:	mov    ecx,ebx
   140028325:	call   0x1400288ac
   14002832a:	mov    eax,0x1
   14002832f:	jmp    0x140028333
   140028331:	xor    eax,eax
   140028333:	mov    rcx,QWORD PTR [rbp-0x10]
   140028337:	xor    rcx,rsp
   14002833a:	call   0x14000c380
   14002833f:	add    rsp,0x40
   140028343:	pop    r15
   140028345:	pop    r14
   140028347:	pop    r12
   140028349:	pop    rdi
   14002834a:	pop    rsi
   14002834b:	pop    rbx
   14002834c:	pop    rbp
   14002834d:	ret    
   14002834e:	int3   
   14002834f:	int3   
   140028350:	mov    QWORD PTR [rsp+0x8],rbx
   140028355:	mov    QWORD PTR [rsp+0x10],rbp
   14002835a:	mov    QWORD PTR [rsp+0x18],rsi
   14002835f:	push   rdi
   140028360:	push   r12
   140028362:	push   r14
   140028364:	sub    rsp,0x10
   140028368:	and    DWORD PTR [r8],0x0
   14002836c:	and    DWORD PTR [r8+0x4],0x0
   140028371:	and    DWORD PTR [r8+0x8],0x0
   140028376:	mov    r10,r8
   140028379:	mov    edi,edx
   14002837b:	mov    rbp,rcx
   14002837e:	mov    ebx,0x404e
   140028383:	test   edx,edx
   140028385:	je     0x1400284cc
   14002838b:	xor    r11d,r11d
   14002838e:	xor    r8d,r8d
   140028391:	xor    r9d,r9d
   140028394:	lea    r12d,[r11+0x1]
   140028398:	movsd  xmm0,QWORD PTR [r10]
   14002839d:	mov    r14d,DWORD PTR [r10+0x8]
   1400283a1:	mov    ecx,r8d
   1400283a4:	shr    ecx,0x1f
   1400283a7:	add    r8d,r8d
   1400283aa:	add    r9d,r9d
   1400283ad:	movsd  QWORD PTR [rsp],xmm0
   1400283b2:	or     r9d,ecx
   1400283b5:	lea    edx,[r11+r11*1]
   1400283b9:	mov    eax,r11d
   1400283bc:	shr    eax,0x1f
   1400283bf:	add    r9d,r9d
   1400283c2:	or     r8d,eax
   1400283c5:	mov    eax,edx
   1400283c7:	add    edx,edx
   1400283c9:	mov    ecx,r8d
   1400283cc:	shr    eax,0x1f
   1400283cf:	add    r8d,r8d
   1400283d2:	shr    ecx,0x1f
   1400283d5:	or     r8d,eax
   1400283d8:	xor    eax,eax
   1400283da:	or     r9d,ecx
   1400283dd:	mov    ecx,DWORD PTR [rsp]
   1400283e0:	mov    DWORD PTR [r10],edx
   1400283e3:	lea    esi,[rdx+rcx*1]
   1400283e6:	mov    DWORD PTR [r10+0x4],r8d
   1400283ea:	mov    DWORD PTR [r10+0x8],r9d
   1400283ee:	cmp    esi,edx
   1400283f0:	jb     0x1400283f6
   1400283f2:	cmp    esi,ecx
   1400283f4:	jae    0x1400283f9
   1400283f6:	mov    eax,r12d
   1400283f9:	mov    DWORD PTR [r10],esi
   1400283fc:	test   eax,eax
   1400283fe:	je     0x140028424
   140028400:	mov    eax,r8d
   140028403:	inc    r8d
   140028406:	xor    ecx,ecx
   140028408:	cmp    r8d,eax
   14002840b:	jb     0x140028412
   14002840d:	cmp    r8d,r12d
   140028410:	jae    0x140028415
   140028412:	mov    ecx,r12d
   140028415:	mov    DWORD PTR [r10+0x4],r8d
   140028419:	test   ecx,ecx
   14002841b:	je     0x140028424
   14002841d:	inc    r9d
   140028420:	mov    DWORD PTR [r10+0x8],r9d
   140028424:	mov    rax,QWORD PTR [rsp]
   140028428:	xor    ecx,ecx
   14002842a:	shr    rax,0x20
   14002842e:	lea    r11d,[r8+rax*1]
   140028432:	cmp    r11d,r8d
   140028435:	jb     0x14002843c
   140028437:	cmp    r11d,eax
   14002843a:	jae    0x14002843f
   14002843c:	mov    ecx,r12d
   14002843f:	mov    DWORD PTR [r10+0x4],r11d
   140028443:	test   ecx,ecx
   140028445:	je     0x14002844e
   140028447:	add    r9d,r12d
   14002844a:	mov    DWORD PTR [r10+0x8],r9d
   14002844e:	add    r9d,r14d
   140028451:	lea    edx,[rsi+rsi*1]
   140028454:	mov    ecx,r11d
   140028457:	shr    ecx,0x1f
   14002845a:	lea    r8d,[r11+r11*1]
   14002845e:	add    r9d,r9d
   140028461:	or     r9d,ecx
   140028464:	mov    eax,esi
   140028466:	mov    DWORD PTR [r10],edx
   140028469:	shr    eax,0x1f
   14002846c:	mov    DWORD PTR [r10+0x8],r9d
   140028470:	or     r8d,eax
   140028473:	xor    eax,eax
   140028475:	mov    DWORD PTR [r10+0x4],r8d
   140028479:	movsx  ecx,BYTE PTR [rbp+0x0]
   14002847d:	lea    r11d,[rdx+rcx*1]
   140028481:	cmp    r11d,edx
   140028484:	jb     0x14002848b
   140028486:	cmp    r11d,ecx
   140028489:	jae    0x14002848e
   14002848b:	mov    eax,r12d
   14002848e:	mov    DWORD PTR [r10],r11d
   140028491:	test   eax,eax
   140028493:	je     0x1400284b9
   140028495:	mov    eax,r8d
   140028498:	inc    r8d
   14002849b:	xor    ecx,ecx
   14002849d:	cmp    r8d,eax
   1400284a0:	jb     0x1400284a7
   1400284a2:	cmp    r8d,r12d
   1400284a5:	jae    0x1400284aa
   1400284a7:	mov    ecx,r12d
   1400284aa:	mov    DWORD PTR [r10+0x4],r8d
   1400284ae:	test   ecx,ecx
   1400284b0:	je     0x1400284b9
   1400284b2:	inc    r9d
   1400284b5:	mov    DWORD PTR [r10+0x8],r9d
   1400284b9:	add    rbp,r12
   1400284bc:	mov    DWORD PTR [r10+0x4],r8d
   1400284c0:	mov    DWORD PTR [r10+0x8],r9d
   1400284c4:	dec    edi
   1400284c6:	jne    0x140028398
   1400284cc:	cmp    DWORD PTR [r10+0x8],0x0
   1400284d1:	jne    0x14002850d
   1400284d3:	mov    r8d,DWORD PTR [r10+0x4]
   1400284d7:	mov    edx,DWORD PTR [r10]
   1400284da:	mov    eax,r8d
   1400284dd:	mov    r9d,r8d
   1400284e0:	shl    eax,0x10
   1400284e3:	mov    ecx,edx
   1400284e5:	shl    edx,0x10
   1400284e8:	shr    ecx,0x10
   1400284eb:	shr    r9d,0x10
   1400284ef:	mov    DWORD PTR [r10],edx
   1400284f2:	mov    r8d,ecx
   1400284f5:	or     r8d,eax
   1400284f8:	mov    eax,0xfff0
   1400284fd:	add    bx,ax
   140028500:	test   r9d,r9d
   140028503:	je     0x1400284d7
   140028505:	mov    DWORD PTR [r10+0x4],r8d
   140028509:	mov    DWORD PTR [r10+0x8],r9d
   14002850d:	mov    edx,DWORD PTR [r10+0x8]
   140028511:	mov    r11d,0x8000
   140028517:	test   r11d,edx
   14002851a:	jne    0x140028554
   14002851c:	mov    r9d,DWORD PTR [r10]
   14002851f:	mov    r8d,DWORD PTR [r10+0x4]
   140028523:	mov    ecx,r8d
   140028526:	mov    eax,r9d
   140028529:	add    r8d,r8d
   14002852c:	shr    eax,0x1f
   14002852f:	add    edx,edx
   140028531:	shr    ecx,0x1f
   140028534:	or     r8d,eax
   140028537:	mov    eax,0xffff
   14002853c:	or     edx,ecx
   14002853e:	add    bx,ax
   140028541:	add    r9d,r9d
   140028544:	test   r11d,edx
   140028547:	je     0x140028523
   140028549:	mov    DWORD PTR [r10],r9d
   14002854c:	mov    DWORD PTR [r10+0x4],r8d
   140028550:	mov    DWORD PTR [r10+0x8],edx
   140028554:	mov    rbp,QWORD PTR [rsp+0x38]
   140028559:	mov    rsi,QWORD PTR [rsp+0x40]
   14002855e:	mov    WORD PTR [r10+0xa],bx
   140028563:	mov    rbx,QWORD PTR [rsp+0x30]
   140028568:	add    rsp,0x10
   14002856c:	pop    r14
   14002856e:	pop    r12
   140028570:	pop    rdi
   140028571:	ret    
   140028572:	int3   
   140028573:	int3   
   140028574:	mov    QWORD PTR [rsp+0x18],rbx
   140028579:	mov    DWORD PTR [rsp+0x8],ecx
   14002857d:	push   rsi
   14002857e:	push   rdi
   14002857f:	push   r14
   140028581:	sub    rsp,0x20
   140028585:	movsxd rbx,ecx
   140028588:	cmp    ebx,0xfffffffe
   14002858b:	jne    0x1400285a5
   14002858d:	call   0x140009c44
   140028592:	and    DWORD PTR [rax],0x0
   140028595:	call   0x140009cb4
   14002859a:	mov    DWORD PTR [rax],0x9
   1400285a0:	jmp    0x140028626
   1400285a5:	test   ecx,ecx
   1400285a7:	js     0x14002860e
   1400285a9:	cmp    ebx,DWORD PTR [rip+0x17b39]        # 0x1400400e8
   1400285af:	jae    0x14002860e
   1400285b1:	mov    rax,rbx
   1400285b4:	mov    rdi,rbx
   1400285b7:	sar    rdi,0x5
   1400285bb:	lea    r14,[rip+0x1574e]        # 0x14003dd10
   1400285c2:	and    eax,0x1f
   1400285c5:	imul   rsi,rax,0x58
   1400285c9:	mov    rax,QWORD PTR [r14+rdi*8]
   1400285cd:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   1400285d2:	and    ecx,0x1
   1400285d5:	je     0x14002860e
   1400285d7:	mov    ecx,ebx
   1400285d9:	call   0x14001d088
   1400285de:	nop
   1400285df:	mov    rax,QWORD PTR [r14+rdi*8]
   1400285e3:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   1400285e8:	je     0x1400285f5
   1400285ea:	mov    ecx,ebx
   1400285ec:	call   0x140028638
   1400285f1:	mov    edi,eax
   1400285f3:	jmp    0x140028603
   1400285f5:	call   0x140009cb4
   1400285fa:	mov    DWORD PTR [rax],0x9
   140028600:	or     edi,0xffffffff
   140028603:	mov    ecx,ebx
   140028605:	call   0x14001d5e4
   14002860a:	mov    eax,edi
   14002860c:	jmp    0x140028629
   14002860e:	call   0x140009c44
   140028613:	and    DWORD PTR [rax],0x0
   140028616:	call   0x140009cb4
   14002861b:	mov    DWORD PTR [rax],0x9
   140028621:	call   0x140008d58
   140028626:	or     eax,0xffffffff
   140028629:	mov    rbx,QWORD PTR [rsp+0x50]
   14002862e:	add    rsp,0x20
   140028632:	pop    r14
   140028634:	pop    rdi
   140028635:	pop    rsi
   140028636:	ret    
   140028637:	int3   
   140028638:	mov    QWORD PTR [rsp+0x8],rbx
   14002863d:	push   rdi
   14002863e:	sub    rsp,0x20
   140028642:	movsxd rdi,ecx
   140028645:	mov    ecx,edi
   140028647:	call   0x14001d3c4
   14002864c:	cmp    rax,0xffffffffffffffff
   140028650:	je     0x1400286ab
   140028652:	mov    rax,QWORD PTR [rip+0x156b7]        # 0x14003dd10
   140028659:	mov    ecx,0x2
   14002865e:	cmp    edi,0x1
   140028661:	jne    0x14002866c
   140028663:	test   BYTE PTR [rax+0xb8],dil
   14002866a:	jne    0x140028676
   14002866c:	cmp    edi,ecx
   14002866e:	jne    0x14002868d
   140028670:	test   BYTE PTR [rax+0x60],0x1
   140028674:	je     0x14002868d
   140028676:	call   0x14001d3c4
   14002867b:	mov    ecx,0x1
   140028680:	mov    rbx,rax
   140028683:	call   0x14001d3c4
   140028688:	cmp    rax,rbx
   14002868b:	je     0x1400286ab
   14002868d:	mov    ecx,edi
   14002868f:	call   0x14001d3c4
   140028694:	mov    rcx,rax
   140028697:	call   QWORD PTR [rip+0x3b23]        # 0x14002c1c0
   14002869d:	test   eax,eax
   14002869f:	jne    0x1400286ab
   1400286a1:	call   QWORD PTR [rip+0x3aa9]        # 0x14002c150
   1400286a7:	mov    ebx,eax
   1400286a9:	jmp    0x1400286ad
   1400286ab:	xor    ebx,ebx
   1400286ad:	mov    ecx,edi
   1400286af:	call   0x14001d318
   1400286b4:	mov    rdx,rdi
   1400286b7:	mov    rcx,rdi
   1400286ba:	sar    rcx,0x5
   1400286be:	and    edx,0x1f
   1400286c1:	lea    r8,[rip+0x15648]        # 0x14003dd10
   1400286c8:	mov    rcx,QWORD PTR [r8+rcx*8]
   1400286cc:	imul   rdx,rdx,0x58
   1400286d0:	mov    BYTE PTR [rcx+rdx*1+0x8],0x0
   1400286d5:	test   ebx,ebx
   1400286d7:	je     0x1400286e5
   1400286d9:	mov    ecx,ebx
   1400286db:	call   0x140009c64
   1400286e0:	or     eax,0xffffffff
   1400286e3:	jmp    0x1400286e7
   1400286e5:	xor    eax,eax
   1400286e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400286ec:	add    rsp,0x20
   1400286f0:	pop    rdi
   1400286f1:	ret    
   1400286f2:	int3   
   1400286f3:	int3   
   1400286f4:	rex push rbx
   1400286f6:	sub    rsp,0x20
   1400286fa:	test   BYTE PTR [rcx+0x18],0x83
   1400286fe:	mov    rbx,rcx
   140028701:	je     0x140028725
   140028703:	test   BYTE PTR [rcx+0x18],0x8
   140028707:	je     0x140028725
   140028709:	mov    rcx,QWORD PTR [rcx+0x10]
   14002870d:	call   0x140007dc0
   140028712:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140028719:	xor    eax,eax
   14002871b:	mov    QWORD PTR [rbx],rax
   14002871e:	mov    QWORD PTR [rbx+0x10],rax
   140028722:	mov    DWORD PTR [rbx+0x8],eax
   140028725:	add    rsp,0x20
   140028729:	pop    rbx
   14002872a:	ret    
   14002872b:	int3   
   14002872c:	mov    QWORD PTR [rsp+0x18],rbx
   140028731:	mov    QWORD PTR [rsp+0x20],rsi
   140028736:	push   rdi
   140028737:	sub    rsp,0x70
   14002873b:	movaps XMMWORD PTR [rsp+0x60],xmm6
   140028740:	mov    rax,QWORD PTR [rip+0x13a89]        # 0x14003c1d0
   140028747:	xor    rax,rsp
   14002874a:	mov    QWORD PTR [rsp+0x58],rax
   14002874f:	mov    rsi,rcx
   140028752:	mov    rbx,rcx
   140028755:	mov    rdi,rdx
   140028758:	lea    rcx,[rsp+0x20]
   14002875d:	mov    rdx,r8
   140028760:	call   0x140008fac
   140028765:	test   rdi,rdi
   140028768:	je     0x14002876d
   14002876a:	mov    QWORD PTR [rdi],rbx
   14002876d:	test   rsi,rsi
   140028770:	jne    0x14002878a
   140028772:	call   0x140009cb4
   140028777:	mov    DWORD PTR [rax],0x16
   14002877d:	call   0x140008d58
   140028782:	xorps  xmm6,xmm6
   140028785:	jmp    0x140028846
   14002878a:	mov    rdx,QWORD PTR [rsp+0x20]
   14002878f:	cmp    DWORD PTR [rdx+0xd4],0x1
   140028796:	jle    0x1400287b1
   140028798:	movzx  ecx,BYTE PTR [rbx]
   14002879b:	lea    r8,[rsp+0x20]
   1400287a0:	mov    edx,0x8
   1400287a5:	call   0x14001f9b8
   1400287aa:	mov    rdx,QWORD PTR [rsp+0x20]
   1400287af:	jmp    0x1400287c2
   1400287b1:	movzx  ecx,BYTE PTR [rbx]
   1400287b4:	mov    rax,QWORD PTR [rdx+0x108]
   1400287bb:	movzx  eax,WORD PTR [rax+rcx*2]
   1400287bf:	and    eax,0x8
   1400287c2:	test   eax,eax
   1400287c4:	je     0x1400287cb
   1400287c6:	inc    rbx
   1400287c9:	jmp    0x14002878f
   1400287cb:	lea    r8,[rsp+0x20]
   1400287d0:	lea    rcx,[rsp+0x40]
   1400287d5:	mov    rdx,rbx
   1400287d8:	call   0x140028f64
   1400287dd:	test   rdi,rdi
   1400287e0:	je     0x1400287ec
   1400287e2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400287e6:	add    rcx,rbx
   1400287e9:	mov    QWORD PTR [rdi],rcx
   1400287ec:	test   DWORD PTR [rax],0x240
   1400287f2:	je     0x140028801
   1400287f4:	xorps  xmm6,xmm6
   1400287f7:	test   rdi,rdi
   1400287fa:	je     0x140028846
   1400287fc:	mov    QWORD PTR [rdi],rsi
   1400287ff:	jmp    0x140028846
   140028801:	test   BYTE PTR [rax],0x81
   140028804:	je     0x14002881c
   140028806:	cmp    BYTE PTR [rbx],0x2d
   140028809:	movsd  xmm6,QWORD PTR [rip+0x14fdf]        # 0x14003d7f0
   140028811:	jne    0x140028834
   140028813:	xorps  xmm6,XMMWORD PTR [rip+0xab16]        # 0x140033330
   14002881a:	jmp    0x140028834
   14002881c:	test   DWORD PTR [rax],0x100
   140028822:	je     0x140028841
   140028824:	movsd  xmm0,QWORD PTR [rax+0x10]
   140028829:	xorps  xmm6,xmm6
   14002882c:	ucomisd xmm0,xmm6
   140028830:	jp     0x140028841
   140028832:	jne    0x140028841
   140028834:	call   0x140009cb4
   140028839:	mov    DWORD PTR [rax],0x22
   14002883f:	jmp    0x140028846
   140028841:	movsd  xmm6,QWORD PTR [rax+0x10]
   140028846:	cmp    BYTE PTR [rsp+0x38],0x0
   14002884b:	je     0x140028859
   14002884d:	mov    rax,QWORD PTR [rsp+0x30]
   140028852:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140028859:	movaps xmm0,xmm6
   14002885c:	mov    rcx,QWORD PTR [rsp+0x58]
   140028861:	xor    rcx,rsp
   140028864:	call   0x14000c380
   140028869:	lea    r11,[rsp+0x70]
   14002886e:	mov    rbx,QWORD PTR [r11+0x20]
   140028872:	mov    rsi,QWORD PTR [r11+0x28]
   140028876:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14002887b:	mov    rsp,r11
   14002887e:	pop    rdi
   14002887f:	ret    
   140028880:	xor    r8d,r8d
   140028883:	jmp    0x14002872c
   140028888:	sub    rsp,0x38
   14002888c:	xor    eax,eax
   14002888e:	cmp    r9d,0xa
   140028892:	jne    0x14002889d
   140028894:	test   rcx,rcx
   140028897:	jns    0x14002889d
   140028899:	lea    eax,[r9-0x9]
   14002889d:	mov    DWORD PTR [rsp+0x20],eax
   1400288a1:	call   0x140028920
   1400288a6:	add    rsp,0x38
   1400288aa:	ret    
   1400288ab:	int3   
   1400288ac:	sub    rsp,0x38
   1400288b0:	cmp    r9d,0xa
   1400288b4:	jne    0x1400288c4
   1400288b6:	test   ecx,ecx
   1400288b8:	jns    0x1400288c4
   1400288ba:	mov    DWORD PTR [rsp+0x20],0x1
   1400288c2:	jmp    0x1400288c9
   1400288c4:	and    DWORD PTR [rsp+0x20],0x0
   1400288c9:	call   0x140028a34
   1400288ce:	add    rsp,0x38
   1400288d2:	ret    
   1400288d3:	int3   
   1400288d4:	sub    rsp,0x38
   1400288d8:	xor    eax,eax
   1400288da:	cmp    r9d,0xa
   1400288de:	jne    0x1400288e8
   1400288e0:	test   ecx,ecx
   1400288e2:	jns    0x1400288e8
   1400288e4:	lea    eax,[r9-0x9]
   1400288e8:	mov    DWORD PTR [rsp+0x20],eax
   1400288ec:	call   0x140028a34
   1400288f1:	add    rsp,0x38
   1400288f5:	ret    
   1400288f6:	int3   
   1400288f7:	int3   
   1400288f8:	sub    rsp,0x38
   1400288fc:	and    DWORD PTR [rsp+0x20],0x0
   140028901:	call   0x140028920
   140028906:	add    rsp,0x38
   14002890a:	ret    
   14002890b:	int3   
   14002890c:	sub    rsp,0x38
   140028910:	and    DWORD PTR [rsp+0x20],0x0
   140028915:	call   0x140028a34
   14002891a:	add    rsp,0x38
   14002891e:	ret    
   14002891f:	int3   
   140028920:	mov    QWORD PTR [rsp+0x8],rbx
   140028925:	mov    QWORD PTR [rsp+0x10],rbp
   14002892a:	mov    QWORD PTR [rsp+0x18],rsi
   14002892f:	push   rdi
   140028930:	sub    rsp,0x20
   140028934:	xor    ebp,ebp
   140028936:	mov    esi,r9d
   140028939:	mov    rdi,r8
   14002893c:	mov    r10,rdx
   14002893f:	mov    r11,rcx
   140028942:	test   rdx,rdx
   140028945:	jne    0x14002895f
   140028947:	call   0x140009cb4
   14002894c:	mov    ebx,0x16
   140028951:	mov    DWORD PTR [rax],ebx
   140028953:	call   0x140008d58
   140028958:	mov    eax,ebx
   14002895a:	jmp    0x140028a1c
   14002895f:	test   r8,r8
   140028962:	je     0x140028947
   140028964:	mov    WORD PTR [rdx],bp
   140028967:	mov    edx,DWORD PTR [rsp+0x50]
   14002896b:	mov    eax,edx
   14002896d:	neg    eax
   14002896f:	sbb    rcx,rcx
   140028972:	neg    rcx
   140028975:	inc    rcx
   140028978:	cmp    r8,rcx
   14002897b:	ja     0x140028989
   14002897d:	call   0x140009cb4
   140028982:	mov    ebx,0x22
   140028987:	jmp    0x140028951
   140028989:	lea    eax,[rsi-0x2]
   14002898c:	mov    ebx,0x22
   140028991:	cmp    eax,ebx
   140028993:	ja     0x140028947
   140028995:	mov    rcx,rbp
   140028998:	mov    r8,r10
   14002899b:	test   edx,edx
   14002899d:	je     0x1400289b0
   14002899f:	lea    eax,[rbx+0xb]
   1400289a2:	lea    r8,[r10+0x2]
   1400289a6:	lea    ecx,[rbx-0x21]
   1400289a9:	mov    WORD PTR [r10],ax
   1400289ad:	neg    r11
   1400289b0:	mov    r9,r8
   1400289b3:	xor    edx,edx
   1400289b5:	mov    rax,r11
   1400289b8:	div    rsi
   1400289bb:	mov    r11,rax
   1400289be:	cmp    edx,0x9
   1400289c1:	jbe    0x1400289c9
   1400289c3:	add    dx,0x57
   1400289c7:	jmp    0x1400289cd
   1400289c9:	add    dx,0x30
   1400289cd:	mov    WORD PTR [r8],dx
   1400289d1:	inc    rcx
   1400289d4:	add    r8,0x2
   1400289d8:	test   rax,rax
   1400289db:	je     0x1400289e2
   1400289dd:	cmp    rcx,rdi
   1400289e0:	jb     0x1400289b3
   1400289e2:	cmp    rcx,rdi
   1400289e5:	jb     0x1400289f5
   1400289e7:	mov    WORD PTR [r10],bp
   1400289eb:	call   0x140009cb4
   1400289f0:	jmp    0x140028951
   1400289f5:	mov    WORD PTR [r8],bp
   1400289f9:	sub    r8,0x2
   1400289fd:	movzx  eax,WORD PTR [r9]
   140028a01:	movzx  ecx,WORD PTR [r8]
   140028a05:	mov    WORD PTR [r8],ax
   140028a09:	mov    WORD PTR [r9],cx
   140028a0d:	add    r9,0x2
   140028a11:	sub    r8,0x2
   140028a15:	cmp    r9,r8
   140028a18:	jb     0x1400289fd
   140028a1a:	xor    eax,eax
   140028a1c:	mov    rbx,QWORD PTR [rsp+0x30]
   140028a21:	mov    rbp,QWORD PTR [rsp+0x38]
   140028a26:	mov    rsi,QWORD PTR [rsp+0x40]
   140028a2b:	add    rsp,0x20
   140028a2f:	pop    rdi
   140028a30:	ret    
   140028a31:	int3   
   140028a32:	int3   
   140028a33:	int3   
   140028a34:	mov    QWORD PTR [rsp+0x8],rbx
   140028a39:	mov    QWORD PTR [rsp+0x10],rbp
   140028a3e:	mov    QWORD PTR [rsp+0x18],rsi
   140028a43:	push   rdi
   140028a44:	sub    rsp,0x20
   140028a48:	xor    ebp,ebp
   140028a4a:	mov    esi,r9d
   140028a4d:	mov    rdi,r8
   140028a50:	mov    r10,rdx
   140028a53:	mov    r11d,ecx
   140028a56:	test   rdx,rdx
   140028a59:	jne    0x140028a73
   140028a5b:	call   0x140009cb4
   140028a60:	mov    ebx,0x16
   140028a65:	mov    DWORD PTR [rax],ebx
   140028a67:	call   0x140008d58
   140028a6c:	mov    eax,ebx
   140028a6e:	jmp    0x140028b2f
   140028a73:	test   r8,r8
   140028a76:	je     0x140028a5b
   140028a78:	mov    WORD PTR [rdx],bp
   140028a7b:	mov    edx,DWORD PTR [rsp+0x50]
   140028a7f:	mov    eax,edx
   140028a81:	neg    eax
   140028a83:	sbb    rcx,rcx
   140028a86:	neg    rcx
   140028a89:	inc    rcx
   140028a8c:	cmp    r8,rcx
   140028a8f:	ja     0x140028a9d
   140028a91:	call   0x140009cb4
   140028a96:	mov    ebx,0x22
   140028a9b:	jmp    0x140028a65
   140028a9d:	lea    eax,[r9-0x2]
   140028aa1:	mov    ebx,0x22
   140028aa6:	cmp    eax,ebx
   140028aa8:	ja     0x140028a5b
   140028aaa:	mov    rcx,rbp
   140028aad:	mov    r8,r10
   140028ab0:	test   edx,edx
   140028ab2:	je     0x140028ac5
   140028ab4:	lea    eax,[rbx+0xb]
   140028ab7:	lea    r8,[r10+0x2]
   140028abb:	lea    ecx,[rbx-0x21]
   140028abe:	mov    WORD PTR [r10],ax
   140028ac2:	neg    r11d
   140028ac5:	mov    r9,r8
   140028ac8:	xor    edx,edx
   140028aca:	mov    eax,r11d
   140028acd:	div    esi
   140028acf:	mov    r11d,eax
   140028ad2:	cmp    edx,0x9
   140028ad5:	jbe    0x140028add
   140028ad7:	add    dx,0x57
   140028adb:	jmp    0x140028ae1
   140028add:	add    dx,0x30
   140028ae1:	mov    WORD PTR [r8],dx
   140028ae5:	inc    rcx
   140028ae8:	add    r8,0x2
   140028aec:	test   eax,eax
   140028aee:	je     0x140028af5
   140028af0:	cmp    rcx,rdi
   140028af3:	jb     0x140028ac8
   140028af5:	cmp    rcx,rdi
   140028af8:	jb     0x140028b08
   140028afa:	mov    WORD PTR [r10],bp
   140028afe:	call   0x140009cb4
   140028b03:	jmp    0x140028a65
   140028b08:	mov    WORD PTR [r8],bp
   140028b0c:	sub    r8,0x2
   140028b10:	movzx  eax,WORD PTR [r9]
   140028b14:	movzx  ecx,WORD PTR [r8]
   140028b18:	mov    WORD PTR [r8],ax
   140028b1c:	mov    WORD PTR [r9],cx
   140028b20:	add    r9,0x2
   140028b24:	sub    r8,0x2
   140028b28:	cmp    r9,r8
   140028b2b:	jb     0x140028b10
   140028b2d:	xor    eax,eax
   140028b2f:	mov    rbx,QWORD PTR [rsp+0x30]
   140028b34:	mov    rbp,QWORD PTR [rsp+0x38]
   140028b39:	mov    rsi,QWORD PTR [rsp+0x40]
   140028b3e:	add    rsp,0x20
   140028b42:	pop    rdi
   140028b43:	ret    
   140028b44:	xor    edx,edx
   140028b46:	lea    r8d,[rdx+0xa]
   140028b4a:	jmp    0x14002922c
   140028b4f:	int3   
   140028b50:	xor    edx,edx
   140028b52:	lea    r8d,[rdx+0xa]
   140028b56:	jmp    0x1400295b8
   140028b5b:	int3   
   140028b5c:	mov    r9,rdx
   140028b5f:	xor    edx,edx
   140028b61:	lea    r8d,[rdx+0xa]
   140028b65:	jmp    0x1400295e8
   140028b6a:	int3   
   140028b6b:	int3   
   140028b6c:	mov    r9,rdx
   140028b6f:	xor    edx,edx
   140028b71:	lea    r8d,[rdx+0xa]
   140028b75:	jmp    0x140029218
   140028b7a:	int3   
   140028b7b:	int3   
   140028b7c:	xor    edx,edx
   140028b7e:	lea    r8d,[rdx+0xa]
   140028b82:	jmp    0x14002922c
   140028b87:	int3   
   140028b88:	mov    r9,rdx
   140028b8b:	xor    edx,edx
   140028b8d:	lea    r8d,[rdx+0xa]
   140028b91:	jmp    0x140029218
   140028b96:	int3   
   140028b97:	int3   
   140028b98:	xor    edx,edx
   140028b9a:	lea    r8d,[rdx+0xa]
   140028b9e:	jmp    0x1400295b8
   140028ba3:	int3   
   140028ba4:	mov    r9,rdx
   140028ba7:	xor    edx,edx
   140028ba9:	lea    r8d,[rdx+0xa]
   140028bad:	jmp    0x1400295e8
   140028bb2:	int3   
   140028bb3:	int3   
   140028bb4:	sub    rsp,0x18
   140028bb8:	movdqa xmm2,XMMWORD PTR [rsp]
   140028bbd:	movzx  eax,dx
   140028bc0:	mov    r8,rcx
   140028bc3:	movd   xmm0,eax
   140028bc7:	xor    r9d,r9d
   140028bca:	pshuflw xmm1,xmm0,0x0
   140028bcf:	pshufd xmm3,xmm1,0x0
   140028bd4:	mov    rax,r8
   140028bd7:	and    eax,0xfff
   140028bdc:	cmp    rax,0xff0
   140028be2:	ja     0x140028c0f
   140028be4:	movdqu xmm1,XMMWORD PTR [r8]
   140028be9:	movdqa xmm0,xmm2
   140028bed:	pxor   xmm0,xmm2
   140028bf1:	movdqa xmm2,xmm0
   140028bf5:	pcmpeqw xmm2,xmm1
   140028bf9:	pcmpeqw xmm1,xmm3
   140028bfd:	por    xmm2,xmm1
   140028c01:	pmovmskb eax,xmm2
   140028c05:	test   eax,eax
   140028c07:	jne    0x140028c21
   140028c09:	add    r8,0x10
   140028c0d:	jmp    0x140028bd4
   140028c0f:	cmp    WORD PTR [r8],dx
   140028c13:	je     0x140028c38
   140028c15:	cmp    WORD PTR [r8],r9w
   140028c19:	je     0x140028c34
   140028c1b:	add    r8,0x2
   140028c1f:	jmp    0x140028bd4
   140028c21:	bsf    ecx,eax
   140028c24:	add    r8,rcx
   140028c27:	cmp    WORD PTR [r8],dx
   140028c2b:	cmove  r9,r8
   140028c2f:	mov    rax,r9
   140028c32:	jmp    0x140028c3b
   140028c34:	xor    eax,eax
   140028c36:	jmp    0x140028c3b
   140028c38:	mov    rax,r8
   140028c3b:	add    rsp,0x18
   140028c3f:	ret    
   140028c40:	sub    rsp,0x28
   140028c44:	xor    r8d,r8d
   140028c47:	mov    r9,rdx
   140028c4a:	mov    r10,rcx
   140028c4d:	cmp    DWORD PTR [rip+0x16334],r8d        # 0x14003ef88
   140028c54:	jne    0x140028cbb
   140028c56:	test   rcx,rcx
   140028c59:	jne    0x140028c75
   140028c5b:	call   0x140009cb4
   140028c60:	mov    DWORD PTR [rax],0x16
   140028c66:	call   0x140008d58
   140028c6b:	mov    eax,0x7fffffff
   140028c70:	add    rsp,0x28
   140028c74:	ret    
   140028c75:	test   rdx,rdx
   140028c78:	je     0x140028c5b
   140028c7a:	sub    r10,rdx
   140028c7d:	movzx  edx,WORD PTR [r10+r9*1]
   140028c82:	lea    eax,[rdx-0x41]
   140028c85:	cmp    ax,0x19
   140028c89:	ja     0x140028c8f
   140028c8b:	add    dx,0x20
   140028c8f:	movzx  ecx,WORD PTR [r9]
   140028c93:	lea    eax,[rcx-0x41]
   140028c96:	cmp    ax,0x19
   140028c9a:	ja     0x140028ca0
   140028c9c:	add    cx,0x20
   140028ca0:	add    r9,0x2
   140028ca4:	test   dx,dx
   140028ca7:	je     0x140028cae
   140028ca9:	cmp    dx,cx
   140028cac:	je     0x140028c7d
   140028cae:	movzx  ecx,cx
   140028cb1:	movzx  eax,dx
   140028cb4:	sub    eax,ecx
   140028cb6:	add    rsp,0x28
   140028cba:	ret    
   140028cbb:	add    rsp,0x28
   140028cbf:	jmp    0x140028cc4
   140028cc4:	mov    rax,rsp
   140028cc7:	mov    QWORD PTR [rax+0x8],rbx
   140028ccb:	mov    QWORD PTR [rax+0x10],rbp
   140028ccf:	mov    QWORD PTR [rax+0x18],rsi
   140028cd3:	push   rdi
   140028cd4:	sub    rsp,0x40
   140028cd8:	mov    rsi,rcx
   140028cdb:	mov    rdi,rdx
   140028cde:	lea    rcx,[rax-0x28]
   140028ce2:	mov    rdx,r8
   140028ce5:	call   0x140008fac
   140028cea:	xor    ebp,ebp
   140028cec:	test   rsi,rsi
   140028cef:	je     0x140028cf6
   140028cf1:	test   rdi,rdi
   140028cf4:	jne    0x140028d0d
   140028cf6:	call   0x140009cb4
   140028cfb:	mov    DWORD PTR [rax],0x16
   140028d01:	call   0x140008d58
   140028d06:	mov    eax,0x7fffffff
   140028d0b:	jmp    0x140028d89
   140028d0d:	mov    rax,QWORD PTR [rsp+0x20]
   140028d12:	cmp    QWORD PTR [rax+0x138],rbp
   140028d19:	jne    0x140028d4f
   140028d1b:	sub    rsi,rdi
   140028d1e:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140028d22:	lea    eax,[rbx-0x41]
   140028d25:	cmp    ax,0x19
   140028d29:	ja     0x140028d2f
   140028d2b:	add    bx,0x20
   140028d2f:	movzx  ecx,WORD PTR [rdi]
   140028d32:	lea    eax,[rcx-0x41]
   140028d35:	cmp    ax,0x19
   140028d39:	ja     0x140028d3f
   140028d3b:	add    cx,0x20
   140028d3f:	add    rdi,0x2
   140028d43:	test   bx,bx
   140028d46:	je     0x140028d81
   140028d48:	cmp    bx,cx
   140028d4b:	je     0x140028d1e
   140028d4d:	jmp    0x140028d81
   140028d4f:	movzx  ecx,WORD PTR [rsi]
   140028d52:	lea    rdx,[rsp+0x20]
   140028d57:	call   0x140029738
   140028d5c:	movzx  ecx,WORD PTR [rdi]
   140028d5f:	lea    rdx,[rsp+0x20]
   140028d64:	movzx  ebx,ax
   140028d67:	lea    rsi,[rsi+0x2]
   140028d6b:	call   0x140029738
   140028d70:	lea    rdi,[rdi+0x2]
   140028d74:	movzx  ecx,ax
   140028d77:	test   bx,bx
   140028d7a:	je     0x140028d81
   140028d7c:	cmp    bx,ax
   140028d7f:	je     0x140028d4f
   140028d81:	movzx  ecx,cx
   140028d84:	movzx  eax,bx
   140028d87:	sub    eax,ecx
   140028d89:	cmp    BYTE PTR [rsp+0x38],bpl
   140028d8e:	je     0x140028d9c
   140028d90:	mov    rcx,QWORD PTR [rsp+0x30]
   140028d95:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140028d9c:	mov    rbx,QWORD PTR [rsp+0x50]
   140028da1:	mov    rbp,QWORD PTR [rsp+0x58]
   140028da6:	mov    rsi,QWORD PTR [rsp+0x60]
   140028dab:	add    rsp,0x40
   140028daf:	pop    rdi
   140028db0:	ret    
   140028db1:	int3   
   140028db2:	int3   
   140028db3:	int3   
   140028db4:	sub    rsp,0x28
   140028db8:	xor    r9d,r9d
   140028dbb:	mov    r11,r8
   140028dbe:	mov    r10,rcx
   140028dc1:	cmp    DWORD PTR [rip+0x161c0],r9d        # 0x14003ef88
   140028dc8:	jne    0x140028e42
   140028dca:	test   r8,r8
   140028dcd:	je     0x140028e3a
   140028dcf:	test   rcx,rcx
   140028dd2:	jne    0x140028dee
   140028dd4:	call   0x140009cb4
   140028dd9:	mov    DWORD PTR [rax],0x16
   140028ddf:	call   0x140008d58
   140028de4:	mov    eax,0x7fffffff
   140028de9:	add    rsp,0x28
   140028ded:	ret    
   140028dee:	test   rdx,rdx
   140028df1:	je     0x140028dd4
   140028df3:	sub    r10,rdx
   140028df6:	movzx  ecx,WORD PTR [r10+rdx*1]
   140028dfb:	lea    eax,[rcx-0x41]
   140028dfe:	cmp    ax,0x19
   140028e02:	ja     0x140028e08
   140028e04:	add    cx,0x20
   140028e08:	movzx  r8d,WORD PTR [rdx]
   140028e0c:	lea    eax,[r8-0x41]
   140028e10:	cmp    ax,0x19
   140028e14:	ja     0x140028e1b
   140028e16:	add    r8w,0x20
   140028e1b:	add    rdx,0x2
   140028e1f:	dec    r11
   140028e22:	je     0x140028e2f
   140028e24:	test   cx,cx
   140028e27:	je     0x140028e2f
   140028e29:	cmp    cx,r8w
   140028e2d:	je     0x140028df6
   140028e2f:	movzx  eax,r8w
   140028e33:	movzx  r9d,cx
   140028e37:	sub    r9d,eax
   140028e3a:	mov    eax,r9d
   140028e3d:	add    rsp,0x28
   140028e41:	ret    
   140028e42:	add    rsp,0x28
   140028e46:	jmp    0x140028e4c
   140028e4b:	int3   
   140028e4c:	mov    rax,rsp
   140028e4f:	mov    QWORD PTR [rax+0x8],rbx
   140028e53:	mov    QWORD PTR [rax+0x10],rbp
   140028e57:	mov    QWORD PTR [rax+0x18],rsi
   140028e5b:	mov    QWORD PTR [rax+0x20],rdi
   140028e5f:	push   r14
   140028e61:	sub    rsp,0x40
   140028e65:	xor    r14d,r14d
   140028e68:	mov    rbp,r8
   140028e6b:	mov    rdi,rdx
   140028e6e:	mov    rsi,rcx
   140028e71:	mov    eax,r14d
   140028e74:	test   r8,r8
   140028e77:	je     0x140028f47
   140028e7d:	test   rcx,rcx
   140028e80:	jne    0x140028e9c
   140028e82:	call   0x140009cb4
   140028e87:	mov    DWORD PTR [rax],0x16
   140028e8d:	call   0x140008d58
   140028e92:	mov    eax,0x7fffffff
   140028e97:	jmp    0x140028f47
   140028e9c:	test   rdx,rdx
   140028e9f:	je     0x140028e82
   140028ea1:	lea    rcx,[rsp+0x20]
   140028ea6:	mov    rdx,r9
   140028ea9:	call   0x140008fac
   140028eae:	mov    rax,QWORD PTR [rsp+0x20]
   140028eb3:	cmp    QWORD PTR [rax+0x138],r14
   140028eba:	jne    0x140028ef5
   140028ebc:	sub    rsi,rdi
   140028ebf:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140028ec3:	lea    eax,[rbx-0x41]
   140028ec6:	cmp    ax,0x19
   140028eca:	ja     0x140028ed0
   140028ecc:	add    bx,0x20
   140028ed0:	movzx  ecx,WORD PTR [rdi]
   140028ed3:	lea    eax,[rcx-0x41]
   140028ed6:	cmp    ax,0x19
   140028eda:	ja     0x140028ee0
   140028edc:	add    cx,0x20
   140028ee0:	add    rdi,0x2
   140028ee4:	dec    rbp
   140028ee7:	je     0x140028f2c
   140028ee9:	test   bx,bx
   140028eec:	je     0x140028f2c
   140028eee:	cmp    bx,cx
   140028ef1:	je     0x140028ebf
   140028ef3:	jmp    0x140028f2c
   140028ef5:	movzx  ecx,WORD PTR [rsi]
   140028ef8:	lea    rdx,[rsp+0x20]
   140028efd:	call   0x140029738
   140028f02:	movzx  ecx,WORD PTR [rdi]
   140028f05:	lea    rdx,[rsp+0x20]
   140028f0a:	movzx  ebx,ax
   140028f0d:	call   0x140029738
   140028f12:	lea    rsi,[rsi+0x2]
   140028f16:	lea    rdi,[rdi+0x2]
   140028f1a:	movzx  ecx,ax
   140028f1d:	dec    rbp
   140028f20:	je     0x140028f2c
   140028f22:	test   bx,bx
   140028f25:	je     0x140028f2c
   140028f27:	cmp    bx,ax
   140028f2a:	je     0x140028ef5
   140028f2c:	movzx  ecx,cx
   140028f2f:	movzx  eax,bx
   140028f32:	sub    eax,ecx
   140028f34:	cmp    BYTE PTR [rsp+0x38],r14b
   140028f39:	je     0x140028f47
   140028f3b:	mov    rcx,QWORD PTR [rsp+0x30]
   140028f40:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140028f47:	mov    rbx,QWORD PTR [rsp+0x50]
   140028f4c:	mov    rbp,QWORD PTR [rsp+0x58]
   140028f51:	mov    rsi,QWORD PTR [rsp+0x60]
   140028f56:	mov    rdi,QWORD PTR [rsp+0x68]
   140028f5b:	add    rsp,0x40
   140028f5f:	pop    r14
   140028f61:	ret    
   140028f62:	int3   
   140028f63:	int3   
   140028f64:	mov    r11,rsp
   140028f67:	mov    QWORD PTR [r11+0x20],rbx
   140028f6b:	push   rbp
   140028f6c:	push   rsi
   140028f6d:	push   rdi
   140028f6e:	sub    rsp,0x70
   140028f72:	mov    rax,QWORD PTR [rip+0x13257]        # 0x14003c1d0
   140028f79:	xor    rax,rsp
   140028f7c:	mov    QWORD PTR [rsp+0x60],rax
   140028f81:	mov    QWORD PTR [r11-0x50],r8
   140028f85:	xor    ebx,ebx
   140028f87:	mov    rbp,rdx
   140028f8a:	and    DWORD PTR [rsp+0x30],ebx
   140028f8e:	and    DWORD PTR [rsp+0x28],ebx
   140028f92:	and    DWORD PTR [rsp+0x20],ebx
   140028f96:	mov    r8,rdx
   140028f99:	mov    rdi,rcx
   140028f9c:	lea    rdx,[r11-0x40]
   140028fa0:	lea    rcx,[r11-0x38]
   140028fa4:	xor    r9d,r9d
   140028fa7:	call   0x140022bd8
   140028fac:	mov    esi,eax
   140028fae:	test   al,0x4
   140028fb0:	je     0x140028fc3
   140028fb2:	and    DWORD PTR [rsp+0x40],0x0
   140028fb7:	and    DWORD PTR [rsp+0x44],0x0
   140028fbc:	mov    ebx,0x200
   140028fc1:	jmp    0x140028ff1
   140028fc3:	lea    rdx,[rsp+0x40]
   140028fc8:	lea    rcx,[rsp+0x50]
   140028fcd:	call   0x1400217c8
   140028fd2:	test   sil,0x2
   140028fd6:	jne    0x140028fdd
   140028fd8:	cmp    eax,0x1
   140028fdb:	jne    0x140028fe2
   140028fdd:	mov    ebx,0x80
   140028fe2:	test   sil,0x1
   140028fe6:	jne    0x140028fed
   140028fe8:	cmp    eax,0x2
   140028feb:	jne    0x140028ff1
   140028fed:	bts    ebx,0x8
   140028ff1:	mov    ecx,DWORD PTR [rsp+0x48]
   140028ff5:	mov    DWORD PTR [rdi],ebx
   140028ff7:	mov    rax,rdi
   140028ffa:	sub    ecx,ebp
   140028ffc:	mov    DWORD PTR [rdi+0x4],ecx
   140028fff:	mov    rcx,QWORD PTR [rsp+0x40]
   140029004:	mov    QWORD PTR [rdi+0x10],rcx
   140029008:	mov    rcx,QWORD PTR [rsp+0x60]
   14002900d:	xor    rcx,rsp
   140029010:	call   0x14000c380
   140029015:	mov    rbx,QWORD PTR [rsp+0xa8]
   14002901d:	add    rsp,0x70
   140029021:	pop    rdi
   140029022:	pop    rsi
   140029023:	pop    rbp
   140029024:	ret    
   140029025:	int3   
   140029026:	int3   
   140029027:	int3   
   140029028:	int3   
   140029029:	int3   
   14002902a:	int3   
   14002902b:	int3   
   14002902c:	int3   
   14002902d:	int3   
   14002902e:	int3   
   14002902f:	int3   
   140029030:	mov    QWORD PTR [rsp+0x18],rbx
   140029035:	mov    QWORD PTR [rsp+0x8],rcx
   14002903a:	push   rbp
   14002903b:	push   rsi
   14002903c:	push   rdi
   14002903d:	push   r12
   14002903f:	push   r13
   140029041:	push   r14
   140029043:	push   r15
   140029045:	sub    rsp,0x20
   140029049:	mov    ebp,r9d
   14002904c:	mov    r14d,r8d
   14002904f:	mov    r15,rdx
   140029052:	test   rdx,rdx
   140029055:	je     0x14002905a
   140029057:	mov    QWORD PTR [rdx],rcx
   14002905a:	test   rcx,rcx
   14002905d:	jne    0x140029076
   14002905f:	call   0x140009cb4
   140029064:	mov    DWORD PTR [rax],0x16
   14002906a:	call   0x140008d58
   14002906f:	xor    eax,eax
   140029071:	jmp    0x140029203
   140029076:	test   r8d,r8d
   140029079:	je     0x140029084
   14002907b:	lea    eax,[r8-0x2]
   14002907f:	cmp    eax,0x22
   140029082:	ja     0x14002905f
   140029084:	movzx  esi,WORD PTR [rcx]
   140029087:	xor    edi,edi
   140029089:	lea    rbx,[rcx+0x2]
   14002908d:	lea    r13d,[rdi+0x8]
   140029091:	jmp    0x14002909a
   140029093:	movzx  esi,WORD PTR [rbx]
   140029096:	add    rbx,0x2
   14002909a:	mov    edx,r13d
   14002909d:	movzx  ecx,si
   1400290a0:	call   0x14001f0b8
   1400290a5:	test   eax,eax
   1400290a7:	jne    0x140029093
   1400290a9:	cmp    si,0x2d
   1400290ad:	jne    0x1400290b4
   1400290af:	or     ebp,0x2
   1400290b2:	jmp    0x1400290ba
   1400290b4:	cmp    si,0x2b
   1400290b8:	jne    0x1400290c1
   1400290ba:	movzx  esi,WORD PTR [rbx]
   1400290bd:	add    rbx,0x2
   1400290c1:	mov    r13d,0xffdf
   1400290c7:	test   r14d,r14d
   1400290ca:	jne    0x1400290fb
   1400290cc:	movzx  ecx,si
   1400290cf:	call   0x14002980c
   1400290d4:	test   eax,eax
   1400290d6:	je     0x1400290e0
   1400290d8:	mov    r14d,0xa
   1400290de:	jmp    0x140029122
   1400290e0:	movzx  eax,WORD PTR [rbx]
   1400290e3:	sub    ax,0x58
   1400290e7:	test   r13w,ax
   1400290eb:	je     0x1400290f5
   1400290ed:	mov    r14d,0x8
   1400290f3:	jmp    0x140029122
   1400290f5:	mov    r14d,0x10
   1400290fb:	cmp    r14d,0x10
   1400290ff:	jne    0x140029122
   140029101:	movzx  ecx,si
   140029104:	call   0x14002980c
   140029109:	test   eax,eax
   14002910b:	jne    0x140029122
   14002910d:	movzx  eax,WORD PTR [rbx]
   140029110:	sub    ax,0x58
   140029114:	test   r13w,ax
   140029118:	jne    0x140029122
   14002911a:	movzx  esi,WORD PTR [rbx+0x2]
   14002911e:	add    rbx,0x4
   140029122:	xor    edx,edx
   140029124:	or     eax,0xffffffff
   140029127:	div    r14d
   14002912a:	mov    r13d,eax
   14002912d:	mov    r12d,edx
   140029130:	movzx  ecx,si
   140029133:	call   0x14002980c
   140029138:	cmp    eax,0xffffffff
   14002913b:	jne    0x140029161
   14002913d:	lea    ecx,[rsi-0x41]
   140029140:	cmp    cx,0x19
   140029144:	jbe    0x14002914f
   140029146:	lea    eax,[rsi-0x61]
   140029149:	cmp    ax,0x19
   14002914d:	ja     0x14002917d
   14002914f:	lea    eax,[rsi-0x61]
   140029152:	cmp    ax,0x19
   140029156:	movzx  eax,si
   140029159:	ja     0x14002915e
   14002915b:	sub    eax,0x20
   14002915e:	add    eax,0xffffffc9
   140029161:	cmp    eax,r14d
   140029164:	jae    0x14002917d
   140029166:	or     ebp,0x8
   140029169:	cmp    edi,r13d
   14002916c:	jb     0x140029197
   14002916e:	jne    0x140029175
   140029170:	cmp    eax,r12d
   140029173:	jbe    0x140029197
   140029175:	or     ebp,0x4
   140029178:	test   r15,r15
   14002917b:	jne    0x14002919d
   14002917d:	mov    r12,QWORD PTR [rsp+0x60]
   140029182:	sub    rbx,0x2
   140029186:	test   bpl,0x8
   14002918a:	jne    0x1400291a6
   14002918c:	test   r15,r15
   14002918f:	cmovne rbx,r12
   140029193:	xor    edi,edi
   140029195:	jmp    0x1400291f1
   140029197:	imul   edi,r14d
   14002919b:	add    edi,eax
   14002919d:	movzx  esi,WORD PTR [rbx]
   1400291a0:	add    rbx,0x2
   1400291a4:	jmp    0x140029130
   1400291a6:	mov    esi,0x7fffffff
   1400291ab:	test   bpl,0x4
   1400291af:	jne    0x1400291ce
   1400291b1:	test   bpl,0x1
   1400291b5:	jne    0x1400291f1
   1400291b7:	mov    eax,ebp
   1400291b9:	and    eax,0x2
   1400291bc:	je     0x1400291c6
   1400291be:	cmp    edi,0x80000000
   1400291c4:	ja     0x1400291ce
   1400291c6:	test   eax,eax
   1400291c8:	jne    0x1400291f1
   1400291ca:	cmp    edi,esi
   1400291cc:	jbe    0x1400291f1
   1400291ce:	call   0x140009cb4
   1400291d3:	mov    DWORD PTR [rax],0x22
   1400291d9:	test   bpl,0x1
   1400291dd:	je     0x1400291e4
   1400291df:	or     edi,0xffffffff
   1400291e2:	jmp    0x1400291f1
   1400291e4:	mov    al,bpl
   1400291e7:	and    al,0x2
   1400291e9:	neg    al
   1400291eb:	sbb    edi,edi
   1400291ed:	neg    edi
   1400291ef:	add    edi,esi
   1400291f1:	test   r15,r15
   1400291f4:	je     0x1400291f9
   1400291f6:	mov    QWORD PTR [r15],rbx
   1400291f9:	test   bpl,0x2
   1400291fd:	je     0x140029201
   1400291ff:	neg    edi
   140029201:	mov    eax,edi
   140029203:	mov    rbx,QWORD PTR [rsp+0x70]
   140029208:	add    rsp,0x20
   14002920c:	pop    r15
   14002920e:	pop    r14
   140029210:	pop    r13
   140029212:	pop    r12
   140029214:	pop    rdi
   140029215:	pop    rsi
   140029216:	pop    rbp
   140029217:	ret    
   140029218:	xor    r9d,r9d
   14002921b:	jmp    0x140029030
   140029220:	mov    r9d,0x1
   140029226:	jmp    0x140029030
   14002922b:	int3   
   14002922c:	xor    r9d,r9d
   14002922f:	jmp    0x140029030
   140029234:	mov    r9d,0x1
   14002923a:	jmp    0x140029030
   14002923f:	int3   
   140029240:	mov    QWORD PTR [rsp+0x8],rbx
   140029245:	mov    QWORD PTR [rsp+0x10],rdx
   14002924a:	push   rbp
   14002924b:	push   rsi
   14002924c:	push   rdi
   14002924d:	push   r12
   14002924f:	push   r13
   140029251:	push   r14
   140029253:	push   r15
   140029255:	sub    rsp,0x40
   140029259:	mov    r12,rdx
   14002925c:	mov    rdx,rcx
   14002925f:	lea    rcx,[rsp+0x20]
   140029264:	mov    r14d,r9d
   140029267:	mov    r15,r8
   14002926a:	call   0x140008fac
   14002926f:	test   r15,r15
   140029272:	je     0x140029277
   140029274:	mov    QWORD PTR [r15],r12
   140029277:	test   r12,r12
   14002927a:	je     0x14002928a
   14002927c:	test   r14d,r14d
   14002927f:	je     0x14002929c
   140029281:	lea    eax,[r14-0x2]
   140029285:	cmp    eax,0x22
   140029288:	jbe    0x14002929c
   14002928a:	call   0x140009cb4
   14002928f:	mov    DWORD PTR [rax],0x16
   140029295:	call   0x140008d58
   14002929a:	jmp    0x1400292f7
   14002929c:	movzx  esi,WORD PTR [r12]
   1400292a1:	xor    edi,edi
   1400292a3:	lea    rbx,[r12+0x2]
   1400292a8:	lea    ebp,[rdi+0x8]
   1400292ab:	jmp    0x1400292b4
   1400292ad:	movzx  esi,WORD PTR [rbx]
   1400292b0:	add    rbx,0x2
   1400292b4:	mov    edx,ebp
   1400292b6:	movzx  ecx,si
   1400292b9:	call   0x14001f0b8
   1400292be:	test   eax,eax
   1400292c0:	jne    0x1400292ad
   1400292c2:	mov    ebp,DWORD PTR [rsp+0xa0]
   1400292c9:	cmp    si,0x2d
   1400292cd:	jne    0x1400292d4
   1400292cf:	or     ebp,0x2
   1400292d2:	jmp    0x1400292da
   1400292d4:	cmp    si,0x2b
   1400292d8:	jne    0x1400292e1
   1400292da:	movzx  esi,WORD PTR [rbx]
   1400292dd:	add    rbx,0x2
   1400292e1:	test   r14d,r14d
   1400292e4:	je     0x1400292fe
   1400292e6:	lea    eax,[r14-0x2]
   1400292ea:	cmp    eax,0x22
   1400292ed:	jbe    0x1400292fe
   1400292ef:	test   r15,r15
   1400292f2:	je     0x1400292f7
   1400292f4:	mov    QWORD PTR [r15],r12
   1400292f7:	xor    edi,edi
   1400292f9:	jmp    0x140029477
   1400292fe:	mov    r13d,0xffdf
   140029304:	test   r14d,r14d
   140029307:	jne    0x140029338
   140029309:	movzx  ecx,si
   14002930c:	call   0x14002980c
   140029311:	test   eax,eax
   140029313:	je     0x14002931d
   140029315:	mov    r14d,0xa
   14002931b:	jmp    0x14002935f
   14002931d:	movzx  eax,WORD PTR [rbx]
   140029320:	sub    ax,0x58
   140029324:	test   r13w,ax
   140029328:	je     0x140029332
   14002932a:	mov    r14d,0x8
   140029330:	jmp    0x14002935f
   140029332:	mov    r14d,0x10
   140029338:	cmp    r14d,0x10
   14002933c:	jne    0x14002935f
   14002933e:	movzx  ecx,si
   140029341:	call   0x14002980c
   140029346:	test   eax,eax
   140029348:	jne    0x14002935f
   14002934a:	movzx  eax,WORD PTR [rbx]
   14002934d:	sub    ax,0x58
   140029351:	test   r13w,ax
   140029355:	jne    0x14002935f
   140029357:	movzx  esi,WORD PTR [rbx+0x2]
   14002935b:	add    rbx,0x4
   14002935f:	movsxd rcx,r14d
   140029362:	xor    edx,edx
   140029364:	or     rax,0xffffffffffffffff
   140029368:	div    rcx
   14002936b:	movsxd r12,r14d
   14002936e:	mov    QWORD PTR [rsp+0x90],rdx
   140029376:	mov    r13,rax
   140029379:	movzx  ecx,si
   14002937c:	call   0x14002980c
   140029381:	mov    r8d,eax
   140029384:	cmp    eax,0xffffffff
   140029387:	jne    0x1400293b0
   140029389:	lea    ecx,[rsi-0x41]
   14002938c:	cmp    cx,0x19
   140029390:	jbe    0x14002939b
   140029392:	lea    eax,[rsi-0x61]
   140029395:	cmp    ax,0x19
   140029399:	ja     0x1400293d4
   14002939b:	lea    eax,[rsi-0x61]
   14002939e:	movzx  r8d,si
   1400293a2:	cmp    ax,0x19
   1400293a6:	ja     0x1400293ac
   1400293a8:	sub    r8d,0x20
   1400293ac:	add    r8d,0xffffffc9
   1400293b0:	cmp    r8d,r14d
   1400293b3:	jae    0x1400293d4
   1400293b5:	or     ebp,0x8
   1400293b8:	cmp    rdi,r13
   1400293bb:	jb     0x1400293f1
   1400293bd:	jne    0x1400293cc
   1400293bf:	mov    eax,r8d
   1400293c2:	cmp    rax,QWORD PTR [rsp+0x90]
   1400293ca:	jbe    0x1400293f1
   1400293cc:	or     ebp,0x4
   1400293cf:	test   r15,r15
   1400293d2:	jne    0x1400293fe
   1400293d4:	mov    r12,QWORD PTR [rsp+0x88]
   1400293dc:	sub    rbx,0x2
   1400293e0:	test   bpl,0x8
   1400293e4:	jne    0x14002940a
   1400293e6:	test   r15,r15
   1400293e9:	cmovne rbx,r12
   1400293ed:	xor    edi,edi
   1400293ef:	jmp    0x140029466
   1400293f1:	mov    rcx,r12
   1400293f4:	imul   rcx,rdi
   1400293f8:	mov    edi,r8d
   1400293fb:	add    rdi,rcx
   1400293fe:	movzx  esi,WORD PTR [rbx]
   140029401:	add    rbx,0x2
   140029405:	jmp    0x140029379
   14002940a:	movabs rsi,0x7fffffffffffffff
   140029414:	test   bpl,0x4
   140029418:	jne    0x14002943f
   14002941a:	test   bpl,0x1
   14002941e:	jne    0x140029466
   140029420:	mov    eax,ebp
   140029422:	and    eax,0x2
   140029425:	je     0x140029436
   140029427:	movabs rcx,0x8000000000000000
   140029431:	cmp    rdi,rcx
   140029434:	ja     0x14002943f
   140029436:	test   eax,eax
   140029438:	jne    0x140029466
   14002943a:	cmp    rdi,rsi
   14002943d:	jbe    0x140029466
   14002943f:	call   0x140009cb4
   140029444:	mov    DWORD PTR [rax],0x22
   14002944a:	test   bpl,0x1
   14002944e:	je     0x140029456
   140029450:	or     rdi,0xffffffffffffffff
   140029454:	jmp    0x140029466
   140029456:	mov    al,bpl
   140029459:	and    al,0x2
   14002945b:	neg    al
   14002945d:	sbb    rdi,rdi
   140029460:	neg    rdi
   140029463:	add    rdi,rsi
   140029466:	test   r15,r15
   140029469:	je     0x14002946e
   14002946b:	mov    QWORD PTR [r15],rbx
   14002946e:	test   bpl,0x2
   140029472:	je     0x140029477
   140029474:	neg    rdi
   140029477:	cmp    BYTE PTR [rsp+0x38],0x0
   14002947c:	je     0x14002948a
   14002947e:	mov    rcx,QWORD PTR [rsp+0x30]
   140029483:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002948a:	mov    rax,rdi
   14002948d:	mov    rbx,QWORD PTR [rsp+0x80]
   140029495:	add    rsp,0x40
   140029499:	pop    r15
   14002949b:	pop    r14
   14002949d:	pop    r13
   14002949f:	pop    r12
   1400294a1:	pop    rdi
   1400294a2:	pop    rsi
   1400294a3:	pop    rbp
   1400294a4:	ret    
   1400294a5:	int3   
   1400294a6:	int3   
   1400294a7:	int3   
   1400294a8:	mov    rax,rsp
   1400294ab:	mov    QWORD PTR [rax+0x8],rbx
   1400294af:	mov    QWORD PTR [rax+0x10],rbp
   1400294b3:	push   rsi
   1400294b4:	push   rdi
   1400294b5:	push   r14
   1400294b7:	sub    rsp,0x50
   1400294bb:	and    QWORD PTR [rax-0x30],0x0
   1400294c0:	and    QWORD PTR [rax-0x38],0x0
   1400294c5:	and    DWORD PTR [rax-0x40],0x0
   1400294c9:	and    QWORD PTR [rax-0x48],0x0
   1400294ce:	mov    r14,r8
   1400294d1:	mov    rdi,rdx
   1400294d4:	mov    r8,rcx
   1400294d7:	mov    rsi,rcx
   1400294da:	or     r9d,0xffffffff
   1400294de:	xor    ecx,ecx
   1400294e0:	xor    edx,edx
   1400294e2:	call   QWORD PTR [rip+0x2ca8]        # 0x14002c190
   1400294e8:	movsxd rbp,eax
   1400294eb:	test   eax,eax
   1400294ed:	jne    0x140029504
   1400294ef:	call   QWORD PTR [rip+0x2c5b]        # 0x14002c150
   1400294f5:	mov    ecx,eax
   1400294f7:	call   0x140009c64
   1400294fc:	xorps  xmm0,xmm0
   1400294ff:	jmp    0x1400295a3
   140029504:	mov    rcx,rbp
   140029507:	call   0x140008684
   14002950c:	mov    rbx,rax
   14002950f:	test   rax,rax
   140029512:	je     0x1400294fc
   140029514:	and    QWORD PTR [rsp+0x38],0x0
   14002951a:	and    QWORD PTR [rsp+0x30],0x0
   140029520:	or     r9d,0xffffffff
   140029524:	mov    r8,rsi
   140029527:	xor    edx,edx
   140029529:	xor    ecx,ecx
   14002952b:	mov    DWORD PTR [rsp+0x28],ebp
   14002952f:	mov    QWORD PTR [rsp+0x20],rax
   140029534:	call   QWORD PTR [rip+0x2c56]        # 0x14002c190
   14002953a:	test   eax,eax
   14002953c:	jne    0x140029555
   14002953e:	call   QWORD PTR [rip+0x2c0c]        # 0x14002c150
   140029544:	mov    ecx,eax
   140029546:	call   0x140009c64
   14002954b:	mov    rcx,rbx
   14002954e:	call   0x140007dc0
   140029553:	jmp    0x1400294fc
   140029555:	and    QWORD PTR [rsp+0x40],0x0
   14002955b:	lea    r9,[rsp+0x40]
   140029560:	lea    rcx,[rsp+0x88]
   140029568:	mov    r8,r14
   14002956b:	mov    rdx,rbx
   14002956e:	call   0x14001bc60
   140029573:	test   rdi,rdi
   140029576:	je     0x140029592
   140029578:	mov    rax,QWORD PTR [rsp+0x40]
   14002957d:	test   rax,rax
   140029580:	je     0x14002958e
   140029582:	sub    rax,rbx
   140029585:	lea    rax,[rsi+rax*2]
   140029589:	mov    QWORD PTR [rdi],rax
   14002958c:	jmp    0x140029592
   14002958e:	and    QWORD PTR [rdi],0x0
   140029592:	mov    rcx,rbx
   140029595:	call   0x140007dc0
   14002959a:	movss  xmm0,DWORD PTR [rsp+0x88]
   1400295a3:	mov    rbx,QWORD PTR [rsp+0x70]
   1400295a8:	mov    rbp,QWORD PTR [rsp+0x78]
   1400295ad:	add    rsp,0x50
   1400295b1:	pop    r14
   1400295b3:	pop    rdi
   1400295b4:	pop    rsi
   1400295b5:	ret    
   1400295b6:	int3   
   1400295b7:	int3   
   1400295b8:	sub    rsp,0x38
   1400295bc:	xor    eax,eax
   1400295be:	mov    r9d,r8d
   1400295c1:	mov    r8,rdx
   1400295c4:	cmp    DWORD PTR [rip+0x159be],eax        # 0x14003ef88
   1400295ca:	mov    DWORD PTR [rsp+0x20],eax
   1400295ce:	mov    rdx,rcx
   1400295d1:	jne    0x1400295dc
   1400295d3:	lea    rcx,[rip+0x13c2e]        # 0x14003d208
   1400295da:	jmp    0x1400295de
   1400295dc:	xor    ecx,ecx
   1400295de:	call   0x140029240
   1400295e3:	add    rsp,0x38
   1400295e7:	ret    
   1400295e8:	sub    rsp,0x38
   1400295ec:	and    DWORD PTR [rsp+0x20],0x0
   1400295f1:	mov    rax,r9
   1400295f4:	mov    r9d,r8d
   1400295f7:	mov    r8,rdx
   1400295fa:	mov    rdx,rcx
   1400295fd:	mov    rcx,rax
   140029600:	call   0x140029240
   140029605:	add    rsp,0x38
   140029609:	ret    
   14002960a:	int3   
   14002960b:	int3   
   14002960c:	sub    rsp,0x38
   140029610:	and    DWORD PTR [rsp+0x20],0x0
   140029615:	mov    rax,r9
   140029618:	mov    r9d,r8d
   14002961b:	mov    r8,rdx
   14002961e:	mov    rdx,rcx
   140029621:	mov    rcx,rax
   140029624:	call   0x140029240
   140029629:	add    rsp,0x38
   14002962d:	ret    
   14002962e:	int3   
   14002962f:	int3   
   140029630:	jmp    0x1400299a4
   140029635:	int3   
   140029636:	int3   
   140029637:	int3   
   140029638:	sub    rsp,0x38
   14002963c:	and    DWORD PTR [rsp+0x20],0x0
   140029641:	mov    rax,r9
   140029644:	mov    r9d,r8d
   140029647:	mov    r8,rdx
   14002964a:	mov    rdx,rcx
   14002964d:	mov    rcx,rax
   140029650:	call   0x140029240
   140029655:	add    rsp,0x38
   140029659:	ret    
   14002965a:	int3   
   14002965b:	int3   
   14002965c:	sub    rsp,0x38
   140029660:	cmp    DWORD PTR [rip+0x15921],0x0        # 0x14003ef88
   140029667:	mov    r9d,r8d
   14002966a:	mov    r8,rdx
   14002966d:	mov    rdx,rcx
   140029670:	mov    DWORD PTR [rsp+0x20],0x1
   140029678:	jne    0x140029683
   14002967a:	lea    rcx,[rip+0x13b87]        # 0x14003d208
   140029681:	jmp    0x140029685
   140029683:	xor    ecx,ecx
   140029685:	call   0x140029240
   14002968a:	add    rsp,0x38
   14002968e:	ret    
   14002968f:	int3   
   140029690:	sub    rsp,0x38
   140029694:	mov    rax,r9
   140029697:	mov    r9d,r8d
   14002969a:	mov    r8,rdx
   14002969d:	mov    rdx,rcx
   1400296a0:	mov    rcx,rax
   1400296a3:	mov    DWORD PTR [rsp+0x20],0x1
   1400296ab:	call   0x140029240
   1400296b0:	add    rsp,0x38
   1400296b4:	ret    
   1400296b5:	int3   
   1400296b6:	int3   
   1400296b7:	int3   
   1400296b8:	sub    rsp,0x38
   1400296bc:	mov    rax,r9
   1400296bf:	mov    r9d,r8d
   1400296c2:	mov    r8,rdx
   1400296c5:	mov    rdx,rcx
   1400296c8:	mov    rcx,rax
   1400296cb:	mov    DWORD PTR [rsp+0x20],0x1
   1400296d3:	call   0x140029240
   1400296d8:	add    rsp,0x38
   1400296dc:	ret    
   1400296dd:	int3   
   1400296de:	int3   
   1400296df:	int3   
   1400296e0:	sub    rsp,0x38
   1400296e4:	mov    rax,r9
   1400296e7:	mov    r9d,r8d
   1400296ea:	mov    r8,rdx
   1400296ed:	mov    rdx,rcx
   1400296f0:	mov    rcx,rax
   1400296f3:	mov    DWORD PTR [rsp+0x20],0x1
   1400296fb:	call   0x140029240
   140029700:	add    rsp,0x38
   140029704:	ret    
   140029705:	int3   
   140029706:	int3   
   140029707:	int3   
   140029708:	xor    r8d,r8d
   14002970b:	jmp    0x1400294a8
   140029710:	jmp    0x1400295b8
   140029715:	int3   
   140029716:	int3   
   140029717:	int3   
   140029718:	jmp    0x140029ad4
   14002971d:	int3   
   14002971e:	int3   
   14002971f:	int3   
   140029720:	jmp    0x1400295b8
   140029725:	int3   
   140029726:	int3   
   140029727:	int3   
   140029728:	jmp    0x14002965c
   14002972d:	int3   
   14002972e:	int3   
   14002972f:	int3   
   140029730:	jmp    0x14002965c
   140029735:	int3   
   140029736:	int3   
   140029737:	int3   
   140029738:	mov    QWORD PTR [rsp+0x10],rbx
   14002973d:	mov    WORD PTR [rsp+0x8],cx
   140029742:	push   rbp
   140029743:	mov    rbp,rsp
   140029746:	sub    rsp,0x50
   14002974a:	mov    eax,0xffff
   14002974f:	cmp    cx,ax
   140029752:	je     0x1400297f7
   140029758:	lea    rcx,[rbp-0x20]
   14002975c:	call   0x140008fac
   140029761:	mov    rbx,QWORD PTR [rbp-0x20]
   140029765:	mov    rax,QWORD PTR [rbx+0x138]
   14002976c:	test   rax,rax
   14002976f:	jne    0x140029784
   140029771:	movzx  edx,WORD PTR [rbp+0x10]
   140029775:	lea    eax,[rdx-0x41]
   140029778:	cmp    ax,0x19
   14002977c:	ja     0x1400297e3
   14002977e:	add    dx,0x20
   140029782:	jmp    0x1400297e3
   140029784:	movzx  ecx,WORD PTR [rbp+0x10]
   140029788:	mov    edx,0x100
   14002978d:	cmp    cx,dx
   140029790:	jae    0x1400297b7
   140029792:	mov    edx,0x1
   140029797:	call   0x14001f0b8
   14002979c:	test   eax,eax
   14002979e:	jne    0x1400297a6
   1400297a0:	movzx  edx,WORD PTR [rbp+0x10]
   1400297a4:	jmp    0x1400297e3
   1400297a6:	movzx  ecx,WORD PTR [rbp+0x10]
   1400297aa:	mov    rax,QWORD PTR [rbx+0x110]
   1400297b1:	movzx  edx,BYTE PTR [rax+rcx*1]
   1400297b5:	jmp    0x1400297e3
   1400297b7:	lea    rcx,[rbp+0x20]
   1400297bb:	mov    r9d,0x1
   1400297c1:	lea    r8,[rbp+0x10]
   1400297c5:	mov    DWORD PTR [rsp+0x28],r9d
   1400297ca:	mov    QWORD PTR [rsp+0x20],rcx
   1400297cf:	mov    rcx,rax
   1400297d2:	call   0x140029adc
   1400297d7:	movzx  edx,WORD PTR [rbp+0x10]
   1400297db:	test   eax,eax
   1400297dd:	je     0x1400297e3
   1400297df:	movzx  edx,WORD PTR [rbp+0x20]
   1400297e3:	cmp    BYTE PTR [rbp-0x8],0x0
   1400297e7:	je     0x1400297f4
   1400297e9:	mov    rcx,QWORD PTR [rbp-0x10]
   1400297ed:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400297f4:	movzx  eax,dx
   1400297f7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400297fc:	add    rsp,0x50
   140029800:	pop    rbp
   140029801:	ret    
   140029802:	int3   
   140029803:	int3   
   140029804:	xor    edx,edx
   140029806:	jmp    0x140029738
   14002980b:	int3   
   14002980c:	mov    edx,0x30
   140029811:	cmp    cx,dx
   140029814:	jb     0x14002999d
   14002981a:	cmp    cx,0x3a
   14002981e:	jae    0x140029826
   140029820:	movzx  eax,cx
   140029823:	sub    eax,edx
   140029825:	ret    
   140029826:	mov    edx,0xff10
   14002982b:	cmp    cx,dx
   14002982e:	jae    0x14002998f
   140029834:	mov    edx,0x660
   140029839:	cmp    cx,dx
   14002983c:	jb     0x14002999d
   140029842:	lea    eax,[rdx+0xa]
   140029845:	cmp    cx,ax
   140029848:	jb     0x140029820
   14002984a:	mov    edx,0x6f0
   14002984f:	cmp    cx,dx
   140029852:	jb     0x14002999d
   140029858:	lea    eax,[rdx+0xa]
   14002985b:	cmp    cx,ax
   14002985e:	jb     0x140029820
   140029860:	mov    edx,0x966
   140029865:	cmp    cx,dx
   140029868:	jb     0x14002999d
   14002986e:	lea    eax,[rdx+0xa]
   140029871:	cmp    cx,ax
   140029874:	jb     0x140029820
   140029876:	lea    edx,[rax+0x76]
   140029879:	cmp    cx,dx
   14002987c:	jb     0x14002999d
   140029882:	lea    eax,[rdx+0xa]
   140029885:	cmp    cx,ax
   140029888:	jb     0x140029820
   14002988a:	lea    edx,[rax+0x76]
   14002988d:	cmp    cx,dx
   140029890:	jb     0x14002999d
   140029896:	lea    eax,[rdx+0xa]
   140029899:	cmp    cx,ax
   14002989c:	jb     0x140029820
   14002989e:	lea    edx,[rax+0x76]
   1400298a1:	cmp    cx,dx
   1400298a4:	jb     0x14002999d
   1400298aa:	lea    eax,[rdx+0xa]
   1400298ad:	cmp    cx,ax
   1400298b0:	jb     0x140029820
   1400298b6:	lea    edx,[rax+0x76]
   1400298b9:	cmp    cx,dx
   1400298bc:	jb     0x14002999d
   1400298c2:	lea    eax,[rdx+0xa]
   1400298c5:	cmp    cx,ax
   1400298c8:	jb     0x140029820
   1400298ce:	mov    edx,0xc66
   1400298d3:	cmp    cx,dx
   1400298d6:	jb     0x14002999d
   1400298dc:	lea    eax,[rdx+0xa]
   1400298df:	cmp    cx,ax
   1400298e2:	jb     0x140029820
   1400298e8:	lea    edx,[rax+0x76]
   1400298eb:	cmp    cx,dx
   1400298ee:	jb     0x14002999d
   1400298f4:	lea    eax,[rdx+0xa]
   1400298f7:	cmp    cx,ax
   1400298fa:	jb     0x140029820
   140029900:	lea    edx,[rax+0x76]
   140029903:	cmp    cx,dx
   140029906:	jb     0x14002999d
   14002990c:	lea    eax,[rdx+0xa]
   14002990f:	cmp    cx,ax
   140029912:	jb     0x140029820
   140029918:	mov    edx,0xe50
   14002991d:	cmp    cx,dx
   140029920:	jb     0x14002999d
   140029922:	lea    eax,[rdx+0xa]
   140029925:	cmp    cx,ax
   140029928:	jb     0x140029820
   14002992e:	lea    edx,[rax+0x76]
   140029931:	cmp    cx,dx
   140029934:	jb     0x14002999d
   140029936:	lea    eax,[rdx+0xa]
   140029939:	cmp    cx,ax
   14002993c:	jb     0x140029820
   140029942:	lea    edx,[rax+0x46]
   140029945:	cmp    cx,dx
   140029948:	jb     0x14002999d
   14002994a:	lea    eax,[rdx+0xa]
   14002994d:	cmp    cx,ax
   140029950:	jb     0x140029820
   140029956:	mov    edx,0x1040
   14002995b:	cmp    cx,dx
   14002995e:	jb     0x14002999d
   140029960:	lea    eax,[rdx+0xa]
   140029963:	cmp    cx,ax
   140029966:	jb     0x140029820
   14002996c:	mov    edx,0x17e0
   140029971:	cmp    cx,dx
   140029974:	jb     0x14002999d
   140029976:	lea    eax,[rdx+0xa]
   140029979:	cmp    cx,ax
   14002997c:	jb     0x140029820
   140029982:	lea    edx,[rax+0x26]
   140029985:	cmp    cx,dx
   140029988:	jb     0x14002999d
   14002998a:	lea    eax,[rdx+0xa]
   14002998d:	jmp    0x140029994
   14002998f:	mov    eax,0xff1a
   140029994:	cmp    cx,ax
   140029997:	jb     0x140029820
   14002999d:	or     eax,0xffffffff
   1400299a0:	ret    
   1400299a1:	int3   
   1400299a2:	int3   
   1400299a3:	int3   
   1400299a4:	mov    QWORD PTR [rsp+0x18],rbx
   1400299a9:	mov    QWORD PTR [rsp+0x20],rsi
   1400299ae:	push   rdi
   1400299af:	sub    rsp,0x70
   1400299b3:	movaps XMMWORD PTR [rsp+0x60],xmm6
   1400299b8:	mov    rax,QWORD PTR [rip+0x12811]        # 0x14003c1d0
   1400299bf:	xor    rax,rsp
   1400299c2:	mov    QWORD PTR [rsp+0x58],rax
   1400299c7:	mov    rsi,rcx
   1400299ca:	mov    rdi,rcx
   1400299cd:	mov    rbx,rdx
   1400299d0:	lea    rcx,[rsp+0x20]
   1400299d5:	mov    rdx,r8
   1400299d8:	call   0x140008fac
   1400299dd:	test   rbx,rbx
   1400299e0:	je     0x1400299e5
   1400299e2:	mov    QWORD PTR [rbx],rdi
   1400299e5:	test   rsi,rsi
   1400299e8:	jne    0x140029a02
   1400299ea:	call   0x140009cb4
   1400299ef:	mov    DWORD PTR [rax],0x16
   1400299f5:	call   0x140008d58
   1400299fa:	xorps  xmm6,xmm6
   1400299fd:	jmp    0x140029a99
   140029a02:	movzx  ecx,WORD PTR [rsi]
   140029a05:	jmp    0x140029a0e
   140029a07:	add    rdi,0x2
   140029a0b:	movzx  ecx,WORD PTR [rdi]
   140029a0e:	mov    edx,0x8
   140029a13:	call   0x14001f0b8
   140029a18:	test   eax,eax
   140029a1a:	jne    0x140029a07
   140029a1c:	lea    r8,[rsp+0x20]
   140029a21:	lea    rcx,[rsp+0x40]
   140029a26:	mov    rdx,rdi
   140029a29:	call   0x140029b28
   140029a2e:	test   rbx,rbx
   140029a31:	je     0x140029a3e
   140029a33:	movsxd rcx,DWORD PTR [rax+0x4]
   140029a37:	lea    rdx,[rdi+rcx*2]
   140029a3b:	mov    QWORD PTR [rbx],rdx
   140029a3e:	test   DWORD PTR [rax],0x240
   140029a44:	je     0x140029a53
   140029a46:	xorps  xmm6,xmm6
   140029a49:	test   rbx,rbx
   140029a4c:	je     0x140029a99
   140029a4e:	mov    QWORD PTR [rbx],rsi
   140029a51:	jmp    0x140029a99
   140029a53:	test   BYTE PTR [rax],0x81
   140029a56:	je     0x140029a6f
   140029a58:	cmp    WORD PTR [rdi],0x2d
   140029a5c:	movsd  xmm6,QWORD PTR [rip+0x13d8c]        # 0x14003d7f0
   140029a64:	jne    0x140029a87
   140029a66:	xorps  xmm6,XMMWORD PTR [rip+0x98c3]        # 0x140033330
   140029a6d:	jmp    0x140029a87
   140029a6f:	test   DWORD PTR [rax],0x100
   140029a75:	je     0x140029a94
   140029a77:	movsd  xmm0,QWORD PTR [rax+0x10]
   140029a7c:	xorps  xmm6,xmm6
   140029a7f:	ucomisd xmm0,xmm6
   140029a83:	jp     0x140029a94
   140029a85:	jne    0x140029a94
   140029a87:	call   0x140009cb4
   140029a8c:	mov    DWORD PTR [rax],0x22
   140029a92:	jmp    0x140029a99
   140029a94:	movsd  xmm6,QWORD PTR [rax+0x10]
   140029a99:	cmp    BYTE PTR [rsp+0x38],0x0
   140029a9e:	je     0x140029aac
   140029aa0:	mov    rax,QWORD PTR [rsp+0x30]
   140029aa5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140029aac:	movaps xmm0,xmm6
   140029aaf:	mov    rcx,QWORD PTR [rsp+0x58]
   140029ab4:	xor    rcx,rsp
   140029ab7:	call   0x14000c380
   140029abc:	lea    r11,[rsp+0x70]
   140029ac1:	mov    rbx,QWORD PTR [r11+0x20]
   140029ac5:	mov    rsi,QWORD PTR [r11+0x28]
   140029ac9:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   140029ace:	mov    rsp,r11
   140029ad1:	pop    rdi
   140029ad2:	ret    
   140029ad3:	int3   
   140029ad4:	xor    r8d,r8d
   140029ad7:	jmp    0x1400299a4
   140029adc:	mov    QWORD PTR [rsp+0x8],rbx
   140029ae1:	mov    QWORD PTR [rsp+0x10],rsi
   140029ae6:	push   rdi
   140029ae7:	sub    rsp,0x30
   140029aeb:	movsxd rax,r9d
   140029aee:	mov    rbx,r8
   140029af1:	mov    edi,edx
   140029af3:	mov    rsi,rcx
   140029af6:	test   r9d,r9d
   140029af9:	jle    0x140029b06
   140029afb:	mov    rdx,rax
   140029afe:	mov    rcx,rbx
   140029b01:	call   0x14001c82c
   140029b06:	mov    r8,rbx
   140029b09:	mov    edx,edi
   140029b0b:	mov    r9d,eax
   140029b0e:	mov    rcx,rsi
   140029b11:	mov    rbx,QWORD PTR [rsp+0x40]
   140029b16:	mov    rsi,QWORD PTR [rsp+0x48]
   140029b1b:	add    rsp,0x30
   140029b1f:	pop    rdi
   140029b20:	jmp    0x14000fb44
   140029b25:	int3   
   140029b26:	int3   
   140029b27:	int3   
   140029b28:	mov    r11,rsp
   140029b2b:	mov    QWORD PTR [r11+0x20],rbx
   140029b2f:	push   rbp
   140029b30:	push   rsi
   140029b31:	push   rdi
   140029b32:	sub    rsp,0x70
   140029b36:	mov    rax,QWORD PTR [rip+0x12693]        # 0x14003c1d0
   140029b3d:	xor    rax,rsp
   140029b40:	mov    QWORD PTR [rsp+0x60],rax
   140029b45:	mov    QWORD PTR [r11-0x50],r8
   140029b49:	xor    ebx,ebx
   140029b4b:	mov    rbp,rdx
   140029b4e:	and    DWORD PTR [rsp+0x30],ebx
   140029b52:	and    DWORD PTR [rsp+0x28],ebx
   140029b56:	and    DWORD PTR [rsp+0x20],ebx
   140029b5a:	mov    r8,rdx
   140029b5d:	mov    rdi,rcx
   140029b60:	lea    rdx,[r11-0x40]
   140029b64:	lea    rcx,[r11-0x38]
   140029b68:	xor    r9d,r9d
   140029b6b:	call   0x140029c68
   140029b70:	mov    esi,eax
   140029b72:	test   al,0x4
   140029b74:	je     0x140029b87
   140029b76:	and    DWORD PTR [rsp+0x40],0x0
   140029b7b:	and    DWORD PTR [rsp+0x44],0x0
   140029b80:	mov    ebx,0x200
   140029b85:	jmp    0x140029bb5
   140029b87:	lea    rdx,[rsp+0x40]
   140029b8c:	lea    rcx,[rsp+0x50]
   140029b91:	call   0x1400217c8
   140029b96:	test   sil,0x2
   140029b9a:	jne    0x140029ba1
   140029b9c:	cmp    eax,0x1
   140029b9f:	jne    0x140029ba6
   140029ba1:	mov    ebx,0x80
   140029ba6:	test   sil,0x1
   140029baa:	jne    0x140029bb1
   140029bac:	cmp    eax,0x2
   140029baf:	jne    0x140029bb5
   140029bb1:	bts    ebx,0x8
   140029bb5:	mov    rcx,QWORD PTR [rsp+0x48]
   140029bba:	mov    DWORD PTR [rdi],ebx
   140029bbc:	mov    rax,rdi
   140029bbf:	sub    rcx,rbp
   140029bc2:	sar    rcx,1
   140029bc5:	mov    DWORD PTR [rdi+0x4],ecx
   140029bc8:	mov    rcx,QWORD PTR [rsp+0x40]
   140029bcd:	mov    QWORD PTR [rdi+0x10],rcx
   140029bd1:	mov    rcx,QWORD PTR [rsp+0x60]
   140029bd6:	xor    rcx,rsp
   140029bd9:	call   0x14000c380
   140029bde:	mov    rbx,QWORD PTR [rsp+0xa8]
   140029be6:	add    rsp,0x70
   140029bea:	pop    rdi
   140029beb:	pop    rsi
   140029bec:	pop    rbp
   140029bed:	ret    
   140029bee:	int3   
   140029bef:	int3   
   140029bf0:	mov    QWORD PTR [rsp+0x20],rbx
   140029bf5:	push   rdi
   140029bf6:	sub    rsp,0x60
   140029bfa:	mov    rax,QWORD PTR [rip+0x125cf]        # 0x14003c1d0
   140029c01:	xor    rax,rsp
   140029c04:	mov    QWORD PTR [rsp+0x50],rax
   140029c09:	mov    rax,QWORD PTR [rsp+0x90]
   140029c11:	mov    rbx,rcx
   140029c14:	lea    rcx,[rsp+0x40]
   140029c19:	mov    QWORD PTR [rsp+0x38],rax
   140029c1e:	xor    eax,eax
   140029c20:	mov    DWORD PTR [rsp+0x30],eax
   140029c24:	mov    DWORD PTR [rsp+0x28],eax
   140029c28:	mov    DWORD PTR [rsp+0x20],eax
   140029c2c:	call   0x140029c68
   140029c31:	lea    rcx,[rsp+0x40]
   140029c36:	mov    rdx,rbx
   140029c39:	mov    edi,eax
   140029c3b:	call   0x140022338
   140029c40:	cmp    eax,0x1
   140029c43:	jne    0x140029c48
   140029c45:	or     edi,0x2
   140029c48:	mov    eax,edi
   140029c4a:	mov    rcx,QWORD PTR [rsp+0x50]
   140029c4f:	xor    rcx,rsp
   140029c52:	call   0x14000c380
   140029c57:	mov    rbx,QWORD PTR [rsp+0x88]
   140029c5f:	add    rsp,0x60
   140029c63:	pop    rdi
   140029c64:	ret    
   140029c65:	int3   
   140029c66:	int3   
   140029c67:	int3   
   140029c68:	mov    QWORD PTR [rsp+0x18],rbx
   140029c6d:	push   rbp
   140029c6e:	push   rsi
   140029c6f:	push   rdi
   140029c70:	push   r12
   140029c72:	push   r13
   140029c74:	push   r14
   140029c76:	push   r15
   140029c78:	lea    rbp,[rsp-0x7]
   140029c7d:	sub    rsp,0xa0
   140029c84:	mov    rax,QWORD PTR [rip+0x12545]        # 0x14003c1d0
   140029c8b:	xor    rax,rsp
   140029c8e:	mov    QWORD PTR [rbp-0x1],rax
   140029c92:	mov    r15,QWORD PTR [rbp+0x7f]
   140029c96:	xor    ebx,ebx
   140029c98:	mov    DWORD PTR [rbp-0x6d],r9d
   140029c9c:	lea    r9d,[rbx+0x1]
   140029ca0:	mov    QWORD PTR [rbp-0x59],rcx
   140029ca4:	mov    QWORD PTR [rbp-0x69],rdx
   140029ca8:	lea    r10,[rbp-0x21]
   140029cac:	mov    WORD PTR [rbp-0x71],bx
   140029cb0:	mov    r11d,ebx
   140029cb3:	mov    DWORD PTR [rbp-0x75],r9d
   140029cb7:	mov    r12d,ebx
   140029cba:	mov    DWORD PTR [rbp-0x79],ebx
   140029cbd:	mov    r13d,ebx
   140029cc0:	mov    esi,ebx
   140029cc2:	mov    r14d,ebx
   140029cc5:	mov    ecx,ebx
   140029cc7:	test   r15,r15
   140029cca:	jne    0x140029ce3
   140029ccc:	call   0x140009cb4
   140029cd1:	mov    DWORD PTR [rax],0x16
   140029cd7:	call   0x140008d58
   140029cdc:	xor    eax,eax
   140029cde:	jmp    0x14002a5ba
   140029ce3:	mov    rdi,r8
   140029ce6:	cmp    WORD PTR [r8],0x20
   140029ceb:	ja     0x140029d07
   140029ced:	movzx  eax,WORD PTR [r8]
   140029cf1:	movabs rdx,0x100002600
   140029cfb:	bt     rdx,rax
   140029cff:	jae    0x140029d07
   140029d01:	add    r8,0x2
   140029d05:	jmp    0x140029ce6
   140029d07:	mov    eax,0x30
   140029d0c:	movzx  edx,WORD PTR [r8]
   140029d10:	add    r8,0x2
   140029d14:	cmp    ecx,0x5
   140029d17:	jg     0x14002a00a
   140029d1d:	je     0x140029fe7
   140029d23:	mov    r9d,ecx
   140029d26:	test   ecx,ecx
   140029d28:	je     0x140029f77
   140029d2e:	dec    r9d
   140029d31:	je     0x140029ee3
   140029d37:	dec    r9d
   140029d3a:	je     0x140029e83
   140029d40:	dec    r9d
   140029d43:	je     0x140029de2
   140029d49:	dec    r9d
   140029d4c:	jne    0x14002a147
   140029d52:	mov    r9d,0x1
   140029d58:	mov    r12d,r9d
   140029d5b:	mov    DWORD PTR [rbp-0x79],r9d
   140029d5f:	lea    eax,[r9+0x2f]
   140029d63:	test   r11d,r11d
   140029d66:	jne    0x140029d9e
   140029d68:	jmp    0x140029d75
   140029d6a:	movzx  edx,WORD PTR [r8]
   140029d6e:	sub    r14d,r9d
   140029d71:	add    r8,0x2
   140029d75:	cmp    dx,ax
   140029d78:	je     0x140029d6a
   140029d7a:	jmp    0x140029d9e
   140029d7c:	cmp    dx,0x39
   140029d80:	ja     0x140029da3
   140029d82:	cmp    r11d,0x19
   140029d86:	jae    0x140029d96
   140029d88:	sub    dl,al
   140029d8a:	add    r11d,r9d
   140029d8d:	mov    BYTE PTR [r10],dl
   140029d90:	add    r10,r9
   140029d93:	sub    r14d,r9d
   140029d96:	movzx  edx,WORD PTR [r8]
   140029d9a:	add    r8,0x2
   140029d9e:	cmp    dx,ax
   140029da1:	jae    0x140029d7c
   140029da3:	movzx  ecx,dx
   140029da6:	lea    eax,[rcx-0x2b]
   140029da9:	test   eax,0xfffffffd
   140029dae:	je     0x140029dd4
   140029db0:	cmp    ecx,0x43
   140029db3:	jle    0x14002a155
   140029db9:	cmp    ecx,0x45
   140029dbc:	jle    0x140029dca
   140029dbe:	lea    eax,[rcx-0x64]
   140029dc1:	cmp    eax,r9d
   140029dc4:	ja     0x14002a155
   140029dca:	mov    ecx,0x6
   140029dcf:	jmp    0x140029d07
   140029dd4:	sub    r8,0x2
   140029dd8:	mov    ecx,0xb
   140029ddd:	jmp    0x140029d07
   140029de2:	mov    eax,0x1
   140029de7:	mov    r12d,eax
   140029dea:	lea    r9d,[rax+0x2f]
   140029dee:	jmp    0x140029e15
   140029df0:	cmp    dx,0x39
   140029df4:	ja     0x140029e1b
   140029df6:	cmp    r11d,0x19
   140029dfa:	jae    0x140029e0a
   140029dfc:	sub    dl,r9b
   140029dff:	add    r11d,eax
   140029e02:	mov    BYTE PTR [r10],dl
   140029e05:	add    r10,rax
   140029e08:	jmp    0x140029e0d
   140029e0a:	add    r14d,eax
   140029e0d:	movzx  edx,WORD PTR [r8]
   140029e11:	add    r8,0x2
   140029e15:	cmp    dx,r9w
   140029e19:	jae    0x140029df0
   140029e1b:	mov    rax,QWORD PTR [r15]
   140029e1e:	movzx  r9d,dx
   140029e22:	mov    rcx,QWORD PTR [rax+0xf0]
   140029e29:	mov    rax,QWORD PTR [rcx]
   140029e2c:	movsx  ecx,BYTE PTR [rax]
   140029e2f:	cmp    r9d,ecx
   140029e32:	jne    0x140029e41
   140029e34:	mov    ecx,0x4
   140029e39:	mov    r9,r12
   140029e3c:	jmp    0x140029d07
   140029e41:	lea    eax,[r9-0x2b]
   140029e45:	test   eax,0xfffffffd
   140029e4a:	je     0x140029e78
   140029e4c:	cmp    r9d,0x43
   140029e50:	jle    0x140029e68
   140029e52:	cmp    r9d,0x45
   140029e56:	jle    0x140029e70
   140029e58:	lea    eax,[r9-0x64]
   140029e5c:	mov    r9,r12
   140029e5f:	cmp    eax,r9d
   140029e62:	jbe    0x140029dca
   140029e68:	mov    r15,r12
   140029e6b:	jmp    0x14002a1b5
   140029e70:	mov    r9,r12
   140029e73:	jmp    0x140029dca
   140029e78:	sub    r8,0x2
   140029e7c:	mov    ecx,0xb
   140029e81:	jmp    0x140029e39
   140029e83:	lea    eax,[rdx-0x31]
   140029e86:	mov    ecx,0x8
   140029e8b:	cmp    ax,cx
   140029e8e:	ja     0x140029ea9
   140029e90:	mov    ecx,0x3
   140029e95:	sub    r8,0x2
   140029e99:	mov    eax,0x30
   140029e9e:	mov    r9d,0x1
   140029ea4:	jmp    0x140029d0c
   140029ea9:	mov    rax,QWORD PTR [r15]
   140029eac:	mov    rcx,QWORD PTR [rax+0xf0]
   140029eb3:	mov    rax,QWORD PTR [rcx]
   140029eb6:	movsx  ecx,BYTE PTR [rax]
   140029eb9:	movzx  eax,dx
   140029ebc:	cmp    eax,ecx
   140029ebe:	jne    0x140029ec7
   140029ec0:	mov    ecx,0x5
   140029ec5:	jmp    0x140029e99
   140029ec7:	mov    eax,0x30
   140029ecc:	cmp    dx,ax
   140029ecf:	jne    0x14002a0bf
   140029ed5:	mov    r9d,0x1
   140029edb:	mov    ecx,r9d
   140029ede:	jmp    0x140029d0c
   140029ee3:	mov    r9d,0x1
   140029ee9:	lea    eax,[rdx-0x31]
   140029eec:	lea    ecx,[r9+0x7]
   140029ef0:	mov    r12d,r9d
   140029ef3:	cmp    ax,cx
   140029ef6:	ja     0x140029f05
   140029ef8:	lea    ecx,[r9+0x2]
   140029efc:	sub    r8,0x2
   140029f00:	jmp    0x140029d07
   140029f05:	mov    rax,QWORD PTR [r15]
   140029f08:	movzx  r9d,dx
   140029f0c:	mov    rcx,QWORD PTR [rax+0xf0]
   140029f13:	mov    rax,QWORD PTR [rcx]
   140029f16:	movsx  ecx,BYTE PTR [rax]
   140029f19:	cmp    r9d,ecx
   140029f1c:	je     0x140029e34
   140029f22:	lea    eax,[r9-0x2b]
   140029f26:	test   eax,0xfffffffd
   140029f2b:	je     0x140029e78
   140029f31:	mov    eax,0x30
   140029f36:	cmp    r9d,eax
   140029f39:	je     0x140029f6f
   140029f3b:	cmp    r9d,0x43
   140029f3f:	jle    0x140029e68
   140029f45:	cmp    r9d,0x45
   140029f49:	jle    0x140029f6a
   140029f4b:	lea    eax,[r9-0x64]
   140029f4f:	mov    r9,r12
   140029f52:	cmp    eax,r9d
   140029f55:	ja     0x140029e68
   140029f5b:	mov    eax,0x30
   140029f60:	mov    ecx,0x6
   140029f65:	jmp    0x140029d0c
   140029f6a:	mov    r9,r12
   140029f6d:	jmp    0x140029f60
   140029f6f:	mov    r9,r12
   140029f72:	jmp    0x140029edb
   140029f77:	lea    eax,[rdx-0x31]
   140029f7a:	mov    ecx,0x8
   140029f7f:	cmp    ax,cx
   140029f82:	jbe    0x140029e90
   140029f88:	mov    rax,QWORD PTR [r15]
   140029f8b:	movzx  r9d,dx
   140029f8f:	mov    rcx,QWORD PTR [rax+0xf0]
   140029f96:	mov    rax,QWORD PTR [rcx]
   140029f99:	movsx  ecx,BYTE PTR [rax]
   140029f9c:	cmp    r9d,ecx
   140029f9f:	je     0x140029ec0
   140029fa5:	cmp    r9d,0x2b
   140029fa9:	je     0x140029fd9
   140029fab:	cmp    r9d,0x2d
   140029faf:	je     0x140029fc8
   140029fb1:	mov    eax,0x30
   140029fb6:	cmp    r9d,eax
   140029fb9:	je     0x140029ed5
   140029fbf:	sub    r8,0x2
   140029fc3:	jmp    0x14002a0c2
   140029fc8:	mov    ecx,0x2
   140029fcd:	mov    DWORD PTR [rbp-0x71],0x8000
   140029fd4:	jmp    0x140029e99
   140029fd9:	mov    ecx,0x2
   140029fde:	mov    WORD PTR [rbp-0x71],bx
   140029fe2:	jmp    0x140029e99
   140029fe7:	sub    dx,ax
   140029fea:	mov    ecx,0x9
   140029fef:	mov    DWORD PTR [rbp-0x79],r9d
   140029ff3:	cmp    dx,cx
   140029ff6:	ja     0x14002a0bf
   140029ffc:	mov    ecx,0x4
   14002a001:	sub    r8,0x2
   14002a005:	jmp    0x140029d0c
   14002a00a:	mov    r9d,ecx
   14002a00d:	sub    r9d,0x6
   14002a011:	je     0x14002a10f
   14002a017:	dec    r9d
   14002a01a:	je     0x14002a09a
   14002a01c:	dec    r9d
   14002a01f:	je     0x14002a062
   14002a021:	dec    r9d
   14002a024:	je     0x14002a161
   14002a02a:	cmp    r9d,0x2
   14002a02e:	jne    0x14002a147
   14002a034:	cmp    DWORD PTR [rbp+0x77],ebx
   14002a037:	je     0x140029fbf
   14002a039:	movzx  eax,dx
   14002a03c:	lea    rdi,[r8-0x2]
   14002a040:	cmp    eax,0x2b
   14002a043:	je     0x14002a058
   14002a045:	cmp    eax,0x2d
   14002a048:	jne    0x14002a0bf
   14002a04a:	or     DWORD PTR [rbp-0x75],0xffffffff
   14002a04e:	mov    ecx,0x7
   14002a053:	jmp    0x140029e99
   14002a058:	mov    ecx,0x7
   14002a05d:	jmp    0x140029e99
   14002a062:	mov    r9d,0x1
   14002a068:	mov    r13d,r9d
   14002a06b:	lea    eax,[r9+0x2f]
   14002a06f:	jmp    0x14002a079
   14002a071:	movzx  edx,WORD PTR [r8]
   14002a075:	add    r8,0x2
   14002a079:	cmp    dx,ax
   14002a07c:	je     0x14002a071
   14002a07e:	sub    dx,0x31
   14002a082:	mov    ecx,0x8
   14002a087:	cmp    dx,cx
   14002a08a:	ja     0x14002a155
   14002a090:	mov    ecx,0x9
   14002a095:	jmp    0x14002a001
   14002a09a:	lea    eax,[rdx-0x31]
   14002a09d:	mov    ecx,0x8
   14002a0a2:	cmp    ax,cx
   14002a0a5:	ja     0x14002a0b1
   14002a0a7:	mov    ecx,0x9
   14002a0ac:	jmp    0x140029e95
   14002a0b1:	mov    eax,0x30
   14002a0b6:	cmp    dx,ax
   14002a0b9:	je     0x140029e9e
   14002a0bf:	mov    r8,rdi
   14002a0c2:	mov    r15d,0x1
   14002a0c8:	mov    rax,QWORD PTR [rbp-0x69]
   14002a0cc:	mov    QWORD PTR [rax],r8
   14002a0cf:	test   r12d,r12d
   14002a0d2:	je     0x14002a590
   14002a0d8:	cmp    r11d,0x18
   14002a0dc:	jbe    0x14002a0f7
   14002a0de:	mov    al,BYTE PTR [rbp-0xa]
   14002a0e1:	cmp    al,0x5
   14002a0e3:	jl     0x14002a0eb
   14002a0e5:	add    al,r15b
   14002a0e8:	mov    BYTE PTR [rbp-0xa],al
   14002a0eb:	sub    r10,r15
   14002a0ee:	mov    r11d,0x18
   14002a0f4:	add    r14d,r15d
   14002a0f7:	test   r11d,r11d
   14002a0fa:	jne    0x14002a1c4
   14002a100:	movzx  edx,bx
   14002a103:	movzx  eax,bx
   14002a106:	mov    edi,ebx
   14002a108:	mov    ecx,ebx
   14002a10a:	jmp    0x14002a59f
   14002a10f:	lea    eax,[rdx-0x31]
   14002a112:	mov    ecx,0x8
   14002a117:	lea    rdi,[r8-0x4]
   14002a11b:	cmp    ax,cx
   14002a11e:	jbe    0x14002a0a7
   14002a120:	movzx  eax,dx
   14002a123:	cmp    eax,0x2b
   14002a126:	je     0x14002a142
   14002a128:	cmp    eax,0x2d
   14002a12b:	je     0x14002a04a
   14002a131:	lea    r9d,[rcx+0x28]
   14002a135:	cmp    eax,r9d
   14002a138:	jne    0x14002a0bf
   14002a13a:	mov    eax,r9d
   14002a13d:	jmp    0x140029e9e
   14002a142:	mov    ecx,0x7
   14002a147:	cmp    ecx,0xa
   14002a14a:	je     0x14002a0c2
   14002a150:	jmp    0x140029e99
   14002a155:	sub    r8,0x2
   14002a159:	mov    r15,r9
   14002a15c:	jmp    0x14002a0c8
   14002a161:	mov    r15d,0x1
   14002a167:	mov    r13d,r15d
   14002a16a:	lea    r9d,[r15+0x2f]
   14002a16e:	jmp    0x14002a192
   14002a170:	cmp    dx,0x39
   14002a174:	ja     0x14002a1af
   14002a176:	lea    esi,[rsi+rsi*4]
   14002a179:	movzx  eax,dx
   14002a17c:	lea    esi,[rsi-0x18]
   14002a17f:	lea    esi,[rax+rsi*2]
   14002a182:	cmp    esi,0x1450
   14002a188:	jg     0x14002a19a
   14002a18a:	movzx  edx,WORD PTR [r8]
   14002a18e:	add    r8,0x2
   14002a192:	cmp    dx,r9w
   14002a196:	jae    0x14002a170
   14002a198:	jmp    0x14002a1af
   14002a19a:	mov    esi,0x1451
   14002a19f:	jmp    0x14002a1af
   14002a1a1:	cmp    dx,0x39
   14002a1a5:	ja     0x14002a1b5
   14002a1a7:	movzx  edx,WORD PTR [r8]
   14002a1ab:	add    r8,0x2
   14002a1af:	cmp    dx,r9w
   14002a1b3:	jae    0x14002a1a1
   14002a1b5:	sub    r8,0x2
   14002a1b9:	jmp    0x14002a0c8
   14002a1be:	dec    r11d
   14002a1c1:	add    r14d,r15d
   14002a1c4:	sub    r10,r15
   14002a1c7:	cmp    BYTE PTR [r10],bl
   14002a1ca:	je     0x14002a1be
   14002a1cc:	lea    r8,[rbp-0x41]
   14002a1d0:	lea    rcx,[rbp-0x21]
   14002a1d4:	mov    edx,r11d
   14002a1d7:	call   0x140028350
   14002a1dc:	cmp    DWORD PTR [rbp-0x75],ebx
   14002a1df:	jge    0x14002a1e3
   14002a1e1:	neg    esi
   14002a1e3:	add    esi,r14d
   14002a1e6:	test   r13d,r13d
   14002a1e9:	jne    0x14002a1ee
   14002a1eb:	add    esi,DWORD PTR [rbp+0x67]
   14002a1ee:	cmp    DWORD PTR [rbp-0x79],ebx
   14002a1f1:	jne    0x14002a1f6
   14002a1f3:	sub    esi,DWORD PTR [rbp+0x6f]
   14002a1f6:	cmp    esi,0x1450
   14002a1fc:	jg     0x14002a57a
   14002a202:	cmp    esi,0xffffebb0
   14002a208:	jl     0x14002a56c
   14002a20e:	lea    r14,[rip+0x1331b]        # 0x14003d530
   14002a215:	sub    r14,0x60
   14002a219:	test   esi,esi
   14002a21b:	je     0x14002a55a
   14002a221:	jns    0x14002a230
   14002a223:	lea    r14,[rip+0x13466]        # 0x14003d690
   14002a22a:	neg    esi
   14002a22c:	sub    r14,0x60
   14002a230:	cmp    DWORD PTR [rbp-0x6d],ebx
   14002a233:	jne    0x14002a239
   14002a235:	mov    WORD PTR [rbp-0x41],bx
   14002a239:	test   esi,esi
   14002a23b:	je     0x14002a55a
   14002a241:	mov    edi,0x80000000
   14002a246:	mov    r9d,0x7fff
   14002a24c:	mov    eax,esi
   14002a24e:	add    r14,0x54
   14002a252:	sar    esi,0x3
   14002a255:	mov    QWORD PTR [rbp-0x61],r14
   14002a259:	and    eax,0x7
   14002a25c:	je     0x14002a552
   14002a262:	cdqe   
   14002a264:	mov    r11d,0x8000
   14002a26a:	lea    rcx,[rax+rax*2]
   14002a26e:	lea    rdx,[r14+rcx*4]
   14002a272:	mov    QWORD PTR [rbp-0x69],rdx
   14002a276:	cmp    WORD PTR [rdx],r11w
   14002a27a:	jb     0x14002a2a1
   14002a27c:	mov    eax,DWORD PTR [rdx+0x8]
   14002a27f:	movsd  xmm0,QWORD PTR [rdx]
   14002a283:	lea    rdx,[rbp-0x31]
   14002a287:	mov    DWORD PTR [rbp-0x29],eax
   14002a28a:	movsd  QWORD PTR [rbp-0x31],xmm0
   14002a28f:	mov    rax,QWORD PTR [rbp-0x31]
   14002a293:	shr    rax,0x10
   14002a297:	mov    QWORD PTR [rbp-0x69],rdx
   14002a29b:	sub    eax,r15d
   14002a29e:	mov    DWORD PTR [rbp-0x2f],eax
   14002a2a1:	movzx  eax,WORD PTR [rdx+0xa]
   14002a2a5:	movzx  ecx,WORD PTR [rbp-0x37]
   14002a2a9:	mov    QWORD PTR [rbp-0x51],rbx
   14002a2ad:	movzx  r12d,ax
   14002a2b1:	and    ax,r9w
   14002a2b5:	mov    DWORD PTR [rbp-0x49],ebx
   14002a2b8:	xor    r12w,cx
   14002a2bc:	and    cx,r9w
   14002a2c0:	and    r12w,r11w
   14002a2c4:	lea    r8d,[rcx+rax*1]
   14002a2c8:	cmp    cx,r9w
   14002a2cc:	jae    0x14002a53e
   14002a2d2:	cmp    ax,r9w
   14002a2d6:	jae    0x14002a53e
   14002a2dc:	mov    r10d,0xbffd
   14002a2e2:	cmp    r8w,r10w
   14002a2e6:	ja     0x14002a53e
   14002a2ec:	mov    r10d,0x3fbf
   14002a2f2:	cmp    r8w,r10w
   14002a2f6:	ja     0x14002a304
   14002a2f8:	mov    QWORD PTR [rbp-0x3d],rbx
   14002a2fc:	mov    DWORD PTR [rbp-0x41],ebx
   14002a2ff:	jmp    0x14002a552
   14002a304:	test   cx,cx
   14002a307:	jne    0x14002a329
   14002a309:	add    r8w,r15w
   14002a30d:	test   DWORD PTR [rbp-0x39],0x7fffffff
   14002a314:	jne    0x14002a329
   14002a316:	cmp    DWORD PTR [rbp-0x3d],ebx
   14002a319:	jne    0x14002a329
   14002a31b:	cmp    DWORD PTR [rbp-0x41],ebx
   14002a31e:	jne    0x14002a329
   14002a320:	mov    WORD PTR [rbp-0x37],bx
   14002a324:	jmp    0x14002a552
   14002a329:	test   ax,ax
   14002a32c:	jne    0x14002a344
   14002a32e:	add    r8w,r15w
   14002a332:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14002a339:	jne    0x14002a344
   14002a33b:	cmp    DWORD PTR [rdx+0x4],ebx
   14002a33e:	jne    0x14002a344
   14002a340:	cmp    DWORD PTR [rdx],ebx
   14002a342:	je     0x14002a2f8
   14002a344:	mov    r13d,ebx
   14002a347:	lea    r9,[rbp-0x51]
   14002a34b:	mov    r10d,0x5
   14002a351:	mov    DWORD PTR [rbp-0x79],r10d
   14002a355:	test   r10d,r10d
   14002a358:	jle    0x14002a3cb
   14002a35a:	lea    eax,[r13*2+0x0]
   14002a362:	lea    rdi,[rbp-0x41]
   14002a366:	lea    r14,[rdx+0x8]
   14002a36a:	movsxd rcx,eax
   14002a36d:	mov    eax,r13d
   14002a370:	and    eax,r15d
   14002a373:	add    rdi,rcx
   14002a376:	mov    edx,eax
   14002a378:	movzx  eax,WORD PTR [r14]
   14002a37c:	movzx  ecx,WORD PTR [rdi]
   14002a37f:	mov    r11d,ebx
   14002a382:	imul   ecx,eax
   14002a385:	mov    eax,DWORD PTR [r9]
   14002a388:	lea    r15d,[rax+rcx*1]
   14002a38c:	cmp    r15d,eax
   14002a38f:	jb     0x14002a396
   14002a391:	cmp    r15d,ecx
   14002a394:	jae    0x14002a39c
   14002a396:	mov    r11d,0x1
   14002a39c:	mov    DWORD PTR [r9],r15d
   14002a39f:	mov    r15d,0x1
   14002a3a5:	test   r11d,r11d
   14002a3a8:	je     0x14002a3af
   14002a3aa:	add    WORD PTR [r9+0x4],r15w
   14002a3af:	mov    r11d,DWORD PTR [rbp-0x79]
   14002a3b3:	add    rdi,0x2
   14002a3b7:	sub    r14,0x2
   14002a3bb:	sub    r11d,r15d
   14002a3be:	mov    DWORD PTR [rbp-0x79],r11d
   14002a3c2:	test   r11d,r11d
   14002a3c5:	jg     0x14002a378
   14002a3c7:	mov    rdx,QWORD PTR [rbp-0x69]
   14002a3cb:	sub    r10d,r15d
   14002a3ce:	add    r9,0x2
   14002a3d2:	add    r13d,r15d
   14002a3d5:	test   r10d,r10d
   14002a3d8:	jg     0x14002a351
   14002a3de:	mov    r10d,DWORD PTR [rbp-0x49]
   14002a3e2:	mov    r9d,DWORD PTR [rbp-0x51]
   14002a3e6:	mov    eax,0xc002
   14002a3eb:	add    r8w,ax
   14002a3ef:	mov    edi,0x80000000
   14002a3f4:	mov    r13d,0xffff
   14002a3fa:	test   r8w,r8w
   14002a3fe:	jle    0x14002a43f
   14002a400:	test   edi,r10d
   14002a403:	jne    0x14002a439
   14002a405:	mov    r11d,DWORD PTR [rbp-0x4d]
   14002a409:	mov    edx,r9d
   14002a40c:	add    r10d,r10d
   14002a40f:	shr    edx,0x1f
   14002a412:	add    r9d,r9d
   14002a415:	mov    ecx,r11d
   14002a418:	shr    ecx,0x1f
   14002a41b:	lea    eax,[r11+r11*1]
   14002a41f:	add    r8w,r13w
   14002a423:	or     eax,edx
   14002a425:	or     r10d,ecx
   14002a428:	mov    DWORD PTR [rbp-0x51],r9d
   14002a42c:	mov    DWORD PTR [rbp-0x4d],eax
   14002a42f:	mov    DWORD PTR [rbp-0x49],r10d
   14002a433:	test   r8w,r8w
   14002a437:	jg     0x14002a400
   14002a439:	test   r8w,r8w
   14002a43d:	jg     0x14002a4a9
   14002a43f:	add    r8w,r13w
   14002a443:	jns    0x14002a4a9
   14002a445:	movzx  eax,r8w
   14002a449:	mov    edi,ebx
   14002a44b:	neg    ax
   14002a44e:	movzx  edx,ax
   14002a451:	add    r8w,dx
   14002a455:	test   BYTE PTR [rbp-0x51],r15b
   14002a459:	je     0x14002a45e
   14002a45b:	add    edi,r15d
   14002a45e:	mov    r11d,DWORD PTR [rbp-0x4d]
   14002a462:	mov    eax,r10d
   14002a465:	shr    r9d,1
   14002a468:	mov    ecx,r11d
   14002a46b:	shl    eax,0x1f
   14002a46e:	shr    r11d,1
   14002a471:	shl    ecx,0x1f
   14002a474:	or     r11d,eax
   14002a477:	shr    r10d,1
   14002a47a:	or     r9d,ecx
   14002a47d:	mov    DWORD PTR [rbp-0x4d],r11d
   14002a481:	mov    DWORD PTR [rbp-0x51],r9d
   14002a485:	sub    rdx,r15
   14002a488:	jne    0x14002a455
   14002a48a:	test   edi,edi
   14002a48c:	mov    DWORD PTR [rbp-0x49],r10d
   14002a490:	mov    edi,0x80000000
   14002a495:	je     0x14002a4a9
   14002a497:	movzx  eax,r9w
   14002a49b:	or     ax,r15w
   14002a49f:	mov    WORD PTR [rbp-0x51],ax
   14002a4a3:	mov    r9d,DWORD PTR [rbp-0x51]
   14002a4a7:	jmp    0x14002a4ad
   14002a4a9:	movzx  eax,WORD PTR [rbp-0x51]
   14002a4ad:	mov    r14,QWORD PTR [rbp-0x61]
   14002a4b1:	mov    r11d,0x8000
   14002a4b7:	cmp    ax,r11w
   14002a4bb:	ja     0x14002a4cd
   14002a4bd:	and    r9d,0x1ffff
   14002a4c4:	cmp    r9d,0x18000
   14002a4cb:	jne    0x14002a515
   14002a4cd:	mov    eax,DWORD PTR [rbp-0x4f]
   14002a4d0:	or     ecx,0xffffffff
   14002a4d3:	cmp    eax,ecx
   14002a4d5:	jne    0x14002a50f
   14002a4d7:	mov    eax,DWORD PTR [rbp-0x4b]
   14002a4da:	mov    DWORD PTR [rbp-0x4f],ebx
   14002a4dd:	cmp    eax,ecx
   14002a4df:	jne    0x14002a503
   14002a4e1:	movzx  eax,WORD PTR [rbp-0x47]
   14002a4e5:	mov    DWORD PTR [rbp-0x4b],ebx
   14002a4e8:	cmp    ax,r13w
   14002a4ec:	jne    0x14002a4f9
   14002a4ee:	mov    WORD PTR [rbp-0x47],r11w
   14002a4f3:	add    r8w,r15w
   14002a4f7:	jmp    0x14002a509
   14002a4f9:	add    ax,r15w
   14002a4fd:	mov    WORD PTR [rbp-0x47],ax
   14002a501:	jmp    0x14002a509
   14002a503:	add    eax,r15d
   14002a506:	mov    DWORD PTR [rbp-0x4b],eax
   14002a509:	mov    r10d,DWORD PTR [rbp-0x49]
   14002a50d:	jmp    0x14002a515
   14002a50f:	add    eax,r15d
   14002a512:	mov    DWORD PTR [rbp-0x4f],eax
   14002a515:	mov    r9d,0x7fff
   14002a51b:	cmp    r8w,r9w
   14002a51f:	jae    0x14002a53e
   14002a521:	movzx  eax,WORD PTR [rbp-0x4f]
   14002a525:	or     r8w,r12w
   14002a529:	mov    DWORD PTR [rbp-0x3b],r10d
   14002a52d:	mov    WORD PTR [rbp-0x41],ax
   14002a531:	mov    eax,DWORD PTR [rbp-0x4d]
   14002a534:	mov    WORD PTR [rbp-0x37],r8w
   14002a539:	mov    DWORD PTR [rbp-0x3f],eax
   14002a53c:	jmp    0x14002a552
   14002a53e:	neg    r12w
   14002a542:	mov    QWORD PTR [rbp-0x41],rbx
   14002a546:	sbb    eax,eax
   14002a548:	and    eax,edi
   14002a54a:	add    eax,0x7fff8000
   14002a54f:	mov    DWORD PTR [rbp-0x39],eax
   14002a552:	test   esi,esi
   14002a554:	jne    0x14002a24c
   14002a55a:	mov    eax,DWORD PTR [rbp-0x39]
   14002a55d:	movzx  edx,WORD PTR [rbp-0x41]
   14002a561:	mov    ecx,DWORD PTR [rbp-0x3f]
   14002a564:	mov    edi,DWORD PTR [rbp-0x3b]
   14002a567:	shr    eax,0x10
   14002a56a:	jmp    0x14002a59f
   14002a56c:	mov    edx,ebx
   14002a56e:	movzx  eax,bx
   14002a571:	mov    edi,ebx
   14002a573:	mov    ecx,ebx
   14002a575:	mov    ebx,r15d
   14002a578:	jmp    0x14002a59f
   14002a57a:	mov    ecx,ebx
   14002a57c:	movzx  edx,bx
   14002a57f:	mov    eax,0x7fff
   14002a584:	mov    ebx,0x2
   14002a589:	mov    edi,0x80000000
   14002a58e:	jmp    0x14002a59f
   14002a590:	movzx  edx,bx
   14002a593:	movzx  eax,bx
   14002a596:	mov    edi,ebx
   14002a598:	mov    ecx,ebx
   14002a59a:	mov    ebx,0x4
   14002a59f:	mov    r8,QWORD PTR [rbp-0x59]
   14002a5a3:	or     ax,WORD PTR [rbp-0x71]
   14002a5a7:	mov    WORD PTR [r8+0xa],ax
   14002a5ac:	mov    eax,ebx
   14002a5ae:	mov    WORD PTR [r8],dx
   14002a5b2:	mov    DWORD PTR [r8+0x2],ecx
   14002a5b6:	mov    DWORD PTR [r8+0x6],edi
   14002a5ba:	mov    rcx,QWORD PTR [rbp-0x1]
   14002a5be:	xor    rcx,rsp
   14002a5c1:	call   0x14000c380
   14002a5c6:	mov    rbx,QWORD PTR [rsp+0xf0]
   14002a5ce:	add    rsp,0xa0
   14002a5d5:	pop    r15
   14002a5d7:	pop    r14
   14002a5d9:	pop    r13
   14002a5db:	pop    r12
   14002a5dd:	pop    rdi
   14002a5de:	pop    rsi
   14002a5df:	pop    rbp
   14002a5e0:	ret    
   14002a5e1:	int3   
   14002a5e2:	jmp    QWORD PTR [rip+0x1b28]        # 0x14002c110
   14002a5e8:	jmp    QWORD PTR [rip+0x1b2a]        # 0x14002c118
   14002a5ee:	jmp    QWORD PTR [rip+0x1b2c]        # 0x14002c120
   14002a5f4:	jmp    QWORD PTR [rip+0x1b2e]        # 0x14002c128
   14002a5fa:	jmp    QWORD PTR [rip+0x1b30]        # 0x14002c130
   14002a600:	jmp    QWORD PTR [rip+0x1b32]        # 0x14002c138
   14002a606:	jmp    QWORD PTR [rip+0x1b34]        # 0x14002c140
   14002a60c:	jmp    QWORD PTR [rip+0x1b36]        # 0x14002c148
   14002a612:	jmp    QWORD PTR [rip+0x1b38]        # 0x14002c150
   14002a618:	jmp    QWORD PTR [rip+0x1b3a]        # 0x14002c158
   14002a61e:	jmp    QWORD PTR [rip+0x1b3c]        # 0x14002c160
   14002a624:	jmp    QWORD PTR [rip+0x1b3e]        # 0x14002c168
   14002a62a:	jmp    QWORD PTR [rip+0x1b40]        # 0x14002c170
   14002a630:	jmp    QWORD PTR [rip+0x1b42]        # 0x14002c178
   14002a636:	jmp    QWORD PTR [rip+0x1b44]        # 0x14002c180
   14002a63c:	jmp    QWORD PTR [rip+0x1b46]        # 0x14002c188
   14002a642:	jmp    QWORD PTR [rip+0x1b48]        # 0x14002c190
   14002a648:	jmp    QWORD PTR [rip+0x1b4a]        # 0x14002c198
   14002a64e:	jmp    QWORD PTR [rip+0x1b4c]        # 0x14002c1a0
   14002a654:	jmp    QWORD PTR [rip+0x1b4e]        # 0x14002c1a8
   14002a65a:	jmp    QWORD PTR [rip+0x1b50]        # 0x14002c1b0
   14002a660:	jmp    QWORD PTR [rip+0x1b52]        # 0x14002c1b8
   14002a666:	jmp    QWORD PTR [rip+0x1994]        # 0x14002c000
   14002a66c:	jmp    QWORD PTR [rip+0x1b56]        # 0x14002c1c8
   14002a672:	jmp    QWORD PTR [rip+0x1b58]        # 0x14002c1d0
   14002a678:	jmp    QWORD PTR [rip+0x1b5a]        # 0x14002c1d8
   14002a67e:	jmp    QWORD PTR [rip+0x1b5c]        # 0x14002c1e0
   14002a684:	jmp    QWORD PTR [rip+0x1b5e]        # 0x14002c1e8
   14002a68a:	jmp    QWORD PTR [rip+0x1b60]        # 0x14002c1f0
   14002a690:	jmp    QWORD PTR [rip+0x1b62]        # 0x14002c1f8
   14002a696:	jmp    QWORD PTR [rip+0x1b64]        # 0x14002c200
   14002a69c:	jmp    QWORD PTR [rip+0x1b66]        # 0x14002c208
   14002a6a2:	jmp    QWORD PTR [rip+0x1b68]        # 0x14002c210
   14002a6a8:	jmp    QWORD PTR [rip+0x1b6a]        # 0x14002c218
   14002a6ae:	jmp    QWORD PTR [rip+0x1b6c]        # 0x14002c220
   14002a6b4:	jmp    QWORD PTR [rip+0x1b6e]        # 0x14002c228
   14002a6ba:	jmp    QWORD PTR [rip+0x1b70]        # 0x14002c230
   14002a6c0:	jmp    QWORD PTR [rip+0x1b72]        # 0x14002c238
   14002a6c6:	jmp    QWORD PTR [rip+0x1b74]        # 0x14002c240
   14002a6cc:	jmp    QWORD PTR [rip+0x1b76]        # 0x14002c248
   14002a6d2:	jmp    QWORD PTR [rip+0x1b78]        # 0x14002c250
   14002a6d8:	jmp    QWORD PTR [rip+0x1b7a]        # 0x14002c258
   14002a6de:	jmp    QWORD PTR [rip+0x1b7c]        # 0x14002c260
   14002a6e4:	jmp    QWORD PTR [rip+0x1b7e]        # 0x14002c268
   14002a6ea:	jmp    QWORD PTR [rip+0x1b80]        # 0x14002c270
   14002a6f0:	jmp    QWORD PTR [rip+0x1b82]        # 0x14002c278
   14002a6f6:	jmp    QWORD PTR [rip+0x1b84]        # 0x14002c280
   14002a6fc:	jmp    QWORD PTR [rip+0x1b86]        # 0x14002c288
   14002a702:	jmp    QWORD PTR [rip+0x1b88]        # 0x14002c290
   14002a708:	jmp    QWORD PTR [rip+0x1b8a]        # 0x14002c298
   14002a70e:	jmp    QWORD PTR [rip+0x19f4]        # 0x14002c108
   14002a714:	jmp    QWORD PTR [rip+0x19e6]        # 0x14002c100
   14002a71a:	jmp    QWORD PTR [rip+0x19d8]        # 0x14002c0f8
   14002a720:	jmp    QWORD PTR [rip+0x19ca]        # 0x14002c0f0
   14002a726:	jmp    QWORD PTR [rip+0x19bc]        # 0x14002c0e8
   14002a72c:	jmp    QWORD PTR [rip+0x19ae]        # 0x14002c0e0
   14002a732:	jmp    QWORD PTR [rip+0x19a0]        # 0x14002c0d8
   14002a738:	jmp    QWORD PTR [rip+0x196a]        # 0x14002c0a8
   14002a73e:	jmp    QWORD PTR [rip+0x195c]        # 0x14002c0a0
   14002a744:	jmp    QWORD PTR [rip+0x194e]        # 0x14002c098
   14002a74a:	jmp    QWORD PTR [rip+0x1940]        # 0x14002c090
   14002a750:	jmp    QWORD PTR [rip+0x1932]        # 0x14002c088
   14002a756:	jmp    QWORD PTR [rip+0x1924]        # 0x14002c080
   14002a75c:	jmp    QWORD PTR [rip+0x1916]        # 0x14002c078
   14002a762:	jmp    QWORD PTR [rip+0x1908]        # 0x14002c070
   14002a768:	jmp    QWORD PTR [rip+0x18fa]        # 0x14002c068
   14002a76e:	jmp    QWORD PTR [rip+0x18ec]        # 0x14002c060
   14002a774:	jmp    QWORD PTR [rip+0x18de]        # 0x14002c058
   14002a77a:	jmp    QWORD PTR [rip+0x18d0]        # 0x14002c050
   14002a780:	jmp    QWORD PTR [rip+0x18c2]        # 0x14002c048
   14002a786:	jmp    QWORD PTR [rip+0x18b4]        # 0x14002c040
   14002a78c:	jmp    QWORD PTR [rip+0x18a6]        # 0x14002c038
   14002a792:	jmp    QWORD PTR [rip+0x1898]        # 0x14002c030
   14002a798:	jmp    QWORD PTR [rip+0x188a]        # 0x14002c028
   14002a79e:	jmp    QWORD PTR [rip+0x187c]        # 0x14002c020
   14002a7a4:	jmp    QWORD PTR [rip+0x186e]        # 0x14002c018
   14002a7aa:	jmp    QWORD PTR [rip+0x1860]        # 0x14002c010
   14002a7b0:	jmp    QWORD PTR [rip+0x1852]        # 0x14002c008
   14002a7b6:	jmp    QWORD PTR [rip+0x1a04]        # 0x14002c1c0
   14002a7bc:	int3   
   14002a7bd:	int3   
   14002a7be:	int3   
   14002a7bf:	int3   
   14002a7c0:	rex push rbp
   14002a7c2:	sub    rsp,0x20
   14002a7c6:	mov    rbp,rdx
   14002a7c9:	mov    rdx,QWORD PTR [rbp+0x30]
   14002a7cd:	mov    rcx,QWORD PTR [rbp+0x38]
   14002a7d1:	call   0x140002470
   14002a7d6:	add    rsp,0x20
   14002a7da:	pop    rbp
   14002a7db:	ret    
   14002a7dc:	mov    QWORD PTR [rsp+0x10],rdx
   14002a7e1:	push   rbp
   14002a7e2:	sub    rsp,0x20
   14002a7e6:	mov    rbp,rdx
   14002a7e9:	mov    rcx,QWORD PTR [rbp+0x20]
   14002a7ed:	call   0x140005778
   14002a7f2:	xor    edx,edx
   14002a7f4:	xor    ecx,ecx
   14002a7f6:	call   0x140006570
   14002a7fb:	nop
   14002a7fc:	int3   
   14002a7fd:	int3   
   14002a7fe:	int3   
   14002a7ff:	int3   
   14002a800:	mov    QWORD PTR [rsp+0x10],rdx
   14002a805:	push   rbp
   14002a806:	sub    rsp,0x20
   14002a80a:	mov    rbp,rdx
   14002a80d:	mov    rdx,QWORD PTR [rbp+0x88]
   14002a814:	mov    rcx,QWORD PTR [rbp+0x70]
   14002a818:	call   0x140002ce0
   14002a81d:	xor    edx,edx
   14002a81f:	xor    ecx,ecx
   14002a821:	call   0x140006570
   14002a826:	nop
   14002a827:	int3   
   14002a828:	int3   
   14002a829:	int3   
   14002a82a:	int3   
   14002a82b:	int3   
   14002a82c:	int3   
   14002a82d:	int3   
   14002a82e:	int3   
   14002a82f:	int3   
   14002a830:	mov    QWORD PTR [rsp+0x10],rdx
   14002a835:	push   rbp
   14002a836:	sub    rsp,0x20
   14002a83a:	mov    rbp,rdx
   14002a83d:	xor    edx,edx
   14002a83f:	xor    ecx,ecx
   14002a841:	call   0x140006570
   14002a846:	nop
   14002a847:	int3   
   14002a848:	int3   
   14002a849:	int3   
   14002a84a:	int3   
   14002a84b:	int3   
   14002a84c:	int3   
   14002a84d:	int3   
   14002a84e:	int3   
   14002a84f:	int3   
   14002a850:	mov    QWORD PTR [rsp+0x10],rdx
   14002a855:	push   rbp
   14002a856:	sub    rsp,0x20
   14002a85a:	mov    rbp,rdx
   14002a85d:	xor    edx,edx
   14002a85f:	xor    ecx,ecx
   14002a861:	call   0x140006570
   14002a866:	nop
   14002a867:	int3   
   14002a868:	int3   
   14002a869:	int3   
   14002a86a:	int3   
   14002a86b:	int3   
   14002a86c:	int3   
   14002a86d:	int3   
   14002a86e:	int3   
   14002a86f:	int3   
   14002a870:	rex push rbp
   14002a872:	sub    rsp,0x20
   14002a876:	mov    rbp,rdx
   14002a879:	mov    rdx,QWORD PTR [rbp+0x48]
   14002a87d:	mov    rcx,QWORD PTR [rbp+0x58]
   14002a881:	call   0x140002470
   14002a886:	add    rsp,0x20
   14002a88a:	pop    rbp
   14002a88b:	ret    
   14002a88c:	int3   
   14002a88d:	int3   
   14002a88e:	int3   
   14002a88f:	int3   
   14002a890:	rex push rbp
   14002a892:	sub    rsp,0x20
   14002a896:	mov    rbp,rdx
   14002a899:	mov    rdx,QWORD PTR [rbp+0x48]
   14002a89d:	mov    rcx,QWORD PTR [rbp+0x58]
   14002a8a1:	call   0x140002470
   14002a8a6:	add    rsp,0x20
   14002a8aa:	pop    rbp
   14002a8ab:	ret    
   14002a8ac:	int3   
   14002a8ad:	int3   
   14002a8ae:	int3   
   14002a8af:	int3   
   14002a8b0:	rex push rbp
   14002a8b2:	sub    rsp,0x20
   14002a8b6:	mov    rbp,rdx
   14002a8b9:	mov    rdx,QWORD PTR [rbp+0x48]
   14002a8bd:	mov    rcx,QWORD PTR [rbp+0x58]
   14002a8c1:	call   0x140002470
   14002a8c6:	add    rsp,0x20
   14002a8ca:	pop    rbp
   14002a8cb:	ret    
   14002a8cc:	int3   
   14002a8cd:	int3   
   14002a8ce:	int3   
   14002a8cf:	int3   
   14002a8d0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a8d7:	jmp    0x140002330
   14002a8dc:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a8e3:	add    rcx,0x10
   14002a8e7:	jmp    0x1400023f0
   14002a8ec:	int3   
   14002a8ed:	int3   
   14002a8ee:	int3   
   14002a8ef:	int3   
   14002a8f0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a8f7:	jmp    0x1400022f0
   14002a8fc:	int3   
   14002a8fd:	int3   
   14002a8fe:	int3   
   14002a8ff:	int3   
   14002a900:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a907:	jmp    0x140002330
   14002a90c:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a913:	add    rcx,0x10
   14002a917:	jmp    0x1400023f0
   14002a91c:	int3   
   14002a91d:	int3   
   14002a91e:	int3   
   14002a91f:	int3   
   14002a920:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a927:	jmp    0x140002330
   14002a92c:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a933:	add    rcx,0x10
   14002a937:	jmp    0x1400023f0
   14002a93c:	int3   
   14002a93d:	int3   
   14002a93e:	int3   
   14002a93f:	int3   
   14002a940:	mov    QWORD PTR [rsp+0x10],rdx
   14002a945:	push   rbp
   14002a946:	sub    rsp,0x20
   14002a94a:	mov    rbp,rdx
   14002a94d:	mov    rcx,QWORD PTR [rbp+0x58]
   14002a951:	call   0x140005778
   14002a956:	xor    edx,edx
   14002a958:	xor    ecx,ecx
   14002a95a:	call   0x140006570
   14002a95f:	nop
   14002a960:	mov    QWORD PTR [rsp+0x10],rdx
   14002a965:	push   rbp
   14002a966:	sub    rsp,0x30
   14002a96a:	mov    rbp,rdx
   14002a96d:	mov    rcx,QWORD PTR [rbp+0x50]
   14002a971:	call   0x140003d10
   14002a976:	xor    edx,edx
   14002a978:	xor    ecx,ecx
   14002a97a:	call   0x140006570
   14002a97f:	nop
   14002a980:	mov    QWORD PTR [rsp+0x10],rdx
   14002a985:	push   rbp
   14002a986:	sub    rsp,0x20
   14002a98a:	mov    rbp,rdx
   14002a98d:	mov    rcx,QWORD PTR [rbp+0x68]
   14002a991:	mov    QWORD PTR [rbp+0x68],rcx
   14002a995:	xor    eax,eax
   14002a997:	inc    rcx
   14002a99a:	je     0x14002a9b1
   14002a99c:	cmp    rcx,0xffffffffffffffff
   14002a9a0:	ja     0x14002a9ac
   14002a9a2:	call   0x14000570c
   14002a9a7:	test   rax,rax
   14002a9aa:	jne    0x14002a9b1
   14002a9ac:	call   0x140005470
   14002a9b1:	mov    QWORD PTR [rbp+0x78],rax
   14002a9b5:	lea    rax,[rip+0xfffffffffffd8299]        # 0x140002c55
   14002a9bc:	add    rsp,0x20
   14002a9c0:	pop    rbp
   14002a9c1:	ret    
   14002a9c2:	int3   
   14002a9c3:	mov    QWORD PTR [rsp+0x10],rdx
   14002a9c8:	push   rbx
   14002a9c9:	push   rbp
   14002a9ca:	sub    rsp,0x28
   14002a9ce:	mov    rbp,rdx
   14002a9d1:	mov    rbx,QWORD PTR [rbp+0x60]
   14002a9d5:	cmp    QWORD PTR [rbx+0x18],0x10
   14002a9da:	jb     0x14002a9e4
   14002a9dc:	mov    rcx,QWORD PTR [rbx]
   14002a9df:	call   0x140005778
   14002a9e4:	mov    QWORD PTR [rbx+0x18],0xf
   14002a9ec:	mov    QWORD PTR [rbx+0x10],0x0
   14002a9f4:	mov    BYTE PTR [rbx],0x0
   14002a9f7:	xor    edx,edx
   14002a9f9:	xor    ecx,ecx
   14002a9fb:	call   0x140006570
   14002aa00:	nop
   14002aa01:	int3   
   14002aa02:	int3   
   14002aa03:	int3   
   14002aa04:	int3   
   14002aa05:	int3   
   14002aa06:	int3   
   14002aa07:	int3   
   14002aa08:	int3   
   14002aa09:	int3   
   14002aa0a:	int3   
   14002aa0b:	int3   
   14002aa0c:	int3   
   14002aa0d:	int3   
   14002aa0e:	int3   
   14002aa0f:	int3   
   14002aa10:	mov    QWORD PTR [rsp+0x10],rdx
   14002aa15:	push   rbp
   14002aa16:	sub    rsp,0x30
   14002aa1a:	mov    rbp,rdx
   14002aa1d:	mov    rcx,QWORD PTR [rbp+0x98]
   14002aa24:	call   0x140005778
   14002aa29:	xor    edx,edx
   14002aa2b:	xor    ecx,ecx
   14002aa2d:	call   0x140006570
   14002aa32:	nop
   14002aa33:	mov    QWORD PTR [rsp+0x10],rdx
   14002aa38:	push   rbp
   14002aa39:	sub    rsp,0x30
   14002aa3d:	mov    rbp,rdx
   14002aa40:	xor    edx,edx
   14002aa42:	xor    ecx,ecx
   14002aa44:	call   0x140006570
   14002aa49:	nop
   14002aa4a:	int3   
   14002aa4b:	int3   
   14002aa4c:	int3   
   14002aa4d:	int3   
   14002aa4e:	int3   
   14002aa4f:	int3   
   14002aa50:	lea    rcx,[rdx+0x48]
   14002aa57:	jmp    0x1400022f0
   14002aa5c:	lea    rcx,[rdx+0x28]
   14002aa63:	jmp    0x1400022f0
   14002aa68:	int3   
   14002aa69:	int3   
   14002aa6a:	int3   
   14002aa6b:	int3   
   14002aa6c:	int3   
   14002aa6d:	int3   
   14002aa6e:	int3   
   14002aa6f:	int3   
   14002aa70:	lea    rcx,[rdx+0x30]
   14002aa77:	jmp    0x140004e40
   14002aa7c:	rex push rbp
   14002aa7e:	sub    rsp,0x20
   14002aa82:	mov    rbp,rdx
   14002aa85:	add    rsp,0x20
   14002aa89:	pop    rbp
   14002aa8a:	jmp    0x140008418
   14002aa8f:	int3   
   14002aa90:	rex push rbp
   14002aa92:	sub    rsp,0x40
   14002aa96:	mov    rbp,rdx
   14002aa99:	lea    rax,[rbp+0x40]
   14002aa9d:	mov    QWORD PTR [rsp+0x30],rax
   14002aaa2:	mov    rax,QWORD PTR [rbp+0x90]
   14002aaa9:	mov    QWORD PTR [rsp+0x28],rax
   14002aaae:	mov    rax,QWORD PTR [rbp+0x88]
   14002aab5:	mov    QWORD PTR [rsp+0x20],rax
   14002aaba:	mov    r9,QWORD PTR [rbp+0x80]
   14002aac1:	mov    r8,QWORD PTR [rbp+0x78]
   14002aac5:	mov    rdx,QWORD PTR [rbp+0x70]
   14002aac9:	call   0x140006998
   14002aace:	nop
   14002aacf:	add    rsp,0x40
   14002aad3:	pop    rbp
   14002aad4:	ret    
   14002aad5:	int3   
   14002aad6:	rex push rbp
   14002aad8:	sub    rsp,0x20
   14002aadc:	mov    rbp,rdx
   14002aadf:	mov    rax,QWORD PTR [rcx]
   14002aae2:	mov    rdx,rcx
   14002aae5:	mov    ecx,DWORD PTR [rax]
   14002aae7:	call   0x14000d570
   14002aaec:	nop
   14002aaed:	add    rsp,0x20
   14002aaf1:	pop    rbp
   14002aaf2:	ret    
   14002aaf3:	int3   
   14002aaf4:	rex push rbp
   14002aaf6:	sub    rsp,0x20
   14002aafa:	mov    rbp,rdx
   14002aafd:	cmp    DWORD PTR [rbp+0x80],0x0
   14002ab04:	je     0x14002ab11
   14002ab06:	mov    ecx,0x8
   14002ab0b:	call   0x14000fe48
   14002ab10:	nop
   14002ab11:	add    rsp,0x20
   14002ab15:	pop    rbp
   14002ab16:	ret    
   14002ab17:	int3   
   14002ab18:	rex push rbp
   14002ab1a:	sub    rsp,0x20
   14002ab1e:	mov    rbp,rdx
   14002ab21:	mov    rax,QWORD PTR [rcx]
   14002ab24:	cmp    DWORD PTR [rax],0xc0000005
   14002ab2a:	je     0x14002ab38
   14002ab2c:	cmp    DWORD PTR [rax],0xc000001d
   14002ab32:	je     0x14002ab38
   14002ab34:	xor    eax,eax
   14002ab36:	jmp    0x14002ab3d
   14002ab38:	mov    eax,0x1
   14002ab3d:	add    rsp,0x20
   14002ab41:	pop    rbp
   14002ab42:	ret    
   14002ab43:	int3   
   14002ab44:	rex push rbp
   14002ab46:	sub    rsp,0x20
   14002ab4a:	mov    rbp,rdx
   14002ab4d:	mov    ecx,0xd
   14002ab52:	add    rsp,0x20
   14002ab56:	pop    rbp
   14002ab57:	jmp    0x14000fe48
   14002ab5c:	int3   
   14002ab5d:	rex push rbp
   14002ab5f:	sub    rsp,0x20
   14002ab63:	mov    rbp,rdx
   14002ab66:	mov    ecx,0xc
   14002ab6b:	add    rsp,0x20
   14002ab6f:	pop    rbp
   14002ab70:	jmp    0x14000fe48
   14002ab75:	int3   
   14002ab76:	rex push rbp
   14002ab78:	sub    rsp,0x20
   14002ab7c:	mov    rbp,rdx
   14002ab7f:	mov    ecx,0xd
   14002ab84:	add    rsp,0x20
   14002ab88:	pop    rbp
   14002ab89:	jmp    0x14000fe48
   14002ab8e:	int3   
   14002ab8f:	rex push rbp
   14002ab91:	sub    rsp,0x20
   14002ab95:	mov    rbp,rdx
   14002ab98:	mov    ecx,0xc
   14002ab9d:	add    rsp,0x20
   14002aba1:	pop    rbp
   14002aba2:	jmp    0x14000fe48
   14002aba7:	int3   
   14002aba8:	rex push rbp
   14002abaa:	sub    rsp,0x20
   14002abae:	mov    rbp,rdx
   14002abb1:	mov    QWORD PTR [rbp+0x70],rcx
   14002abb5:	mov    QWORD PTR [rbp+0x68],rcx
   14002abb9:	mov    rax,QWORD PTR [rbp+0x68]
   14002abbd:	mov    rcx,QWORD PTR [rax]
   14002abc0:	mov    QWORD PTR [rbp+0x28],rcx
   14002abc4:	mov    DWORD PTR [rbp+0x20],0x0
   14002abcb:	mov    rax,QWORD PTR [rbp+0x28]
   14002abcf:	cmp    DWORD PTR [rax],0xe06d7363
   14002abd5:	jne    0x14002ac24
   14002abd7:	mov    rax,QWORD PTR [rbp+0x28]
   14002abdb:	cmp    DWORD PTR [rax+0x18],0x4
   14002abdf:	jne    0x14002ac24
   14002abe1:	mov    rax,QWORD PTR [rbp+0x28]
   14002abe5:	cmp    DWORD PTR [rax+0x20],0x19930520
   14002abec:	je     0x14002ac08
   14002abee:	mov    rax,QWORD PTR [rbp+0x28]
   14002abf2:	cmp    DWORD PTR [rax+0x20],0x19930521
   14002abf9:	je     0x14002ac08
   14002abfb:	mov    rax,QWORD PTR [rbp+0x28]
   14002abff:	cmp    DWORD PTR [rax+0x20],0x19930522
   14002ac06:	jne    0x14002ac24
   14002ac08:	mov    rdx,QWORD PTR [rbp+0x28]
   14002ac0c:	mov    rax,QWORD PTR [rbp+0xd8]
   14002ac13:	mov    rcx,QWORD PTR [rax+0x28]
   14002ac17:	cmp    QWORD PTR [rdx+0x28],rcx
   14002ac1b:	jne    0x14002ac24
   14002ac1d:	mov    DWORD PTR [rbp+0x20],0x1
   14002ac24:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac28:	cmp    DWORD PTR [rax],0xe06d7363
   14002ac2e:	jne    0x14002ac8b
   14002ac30:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac34:	cmp    DWORD PTR [rax+0x18],0x4
   14002ac38:	jne    0x14002ac8b
   14002ac3a:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac3e:	cmp    DWORD PTR [rax+0x20],0x19930520
   14002ac45:	je     0x14002ac61
   14002ac47:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac4b:	cmp    DWORD PTR [rax+0x20],0x19930521
   14002ac52:	je     0x14002ac61
   14002ac54:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac58:	cmp    DWORD PTR [rax+0x20],0x19930522
   14002ac5f:	jne    0x14002ac8b
   14002ac61:	mov    rax,QWORD PTR [rbp+0x28]
   14002ac65:	cmp    QWORD PTR [rax+0x30],0x0
   14002ac6a:	jne    0x14002ac8b
   14002ac6c:	call   0x14000a3ec
   14002ac71:	mov    DWORD PTR [rax+0x460],0x1
   14002ac7b:	mov    DWORD PTR [rbp+0x20],0x1
   14002ac82:	mov    DWORD PTR [rbp+0x30],0x1
   14002ac89:	jmp    0x14002ac92
   14002ac8b:	mov    DWORD PTR [rbp+0x30],0x0
   14002ac92:	mov    eax,DWORD PTR [rbp+0x30]
   14002ac95:	add    rsp,0x20
   14002ac99:	pop    rbp
   14002ac9a:	ret    
   14002ac9b:	int3   
   14002ac9c:	rex push rbx
   14002ac9e:	push   rbp
   14002ac9f:	sub    rsp,0x28
   14002aca3:	mov    rbp,rdx
   14002aca6:	mov    rcx,QWORD PTR [rbp+0x38]
   14002acaa:	call   0x140006ad4
   14002acaf:	cmp    DWORD PTR [rbp+0x20],0x0
   14002acb3:	jne    0x14002acef
   14002acb5:	mov    rbx,QWORD PTR [rbp+0xd8]
   14002acbc:	cmp    DWORD PTR [rbx],0xe06d7363
   14002acc2:	jne    0x14002acef
   14002acc4:	cmp    DWORD PTR [rbx+0x18],0x4
   14002acc8:	jne    0x14002acef
   14002acca:	mov    eax,DWORD PTR [rbx+0x20]
   14002accd:	sub    eax,0x19930520
   14002acd2:	cmp    eax,0x2
   14002acd5:	ja     0x14002acef
   14002acd7:	mov    rcx,QWORD PTR [rbx+0x28]
   14002acdb:	call   0x140006b64
   14002ace0:	test   eax,eax
   14002ace2:	je     0x14002acef
   14002ace4:	mov    dl,0x1
   14002ace6:	mov    rcx,rbx
   14002ace9:	call   0x14000a5fc
   14002acee:	nop
   14002acef:	call   0x14000a3ec
   14002acf4:	mov    rcx,QWORD PTR [rbp+0xe0]
   14002acfb:	mov    QWORD PTR [rax+0xf0],rcx
   14002ad02:	call   0x14000a3ec
   14002ad07:	mov    rcx,QWORD PTR [rbp+0x50]
   14002ad0b:	mov    QWORD PTR [rax+0xf8],rcx
   14002ad12:	add    rsp,0x28
   14002ad16:	pop    rbp
   14002ad17:	pop    rbx
   14002ad18:	ret    
   14002ad19:	int3   
   14002ad1a:	rex push rbp
   14002ad1c:	sub    rsp,0x20
   14002ad20:	mov    rbp,rdx
   14002ad23:	mov    rcx,QWORD PTR [rbp+0x30]
   14002ad27:	call   0x140006ba4
   14002ad2c:	nop
   14002ad2d:	add    rsp,0x20
   14002ad31:	pop    rbp
   14002ad32:	ret    
   14002ad33:	int3   
   14002ad34:	rex push rbp
   14002ad36:	sub    rsp,0x20
   14002ad3a:	mov    rbp,rdx
   14002ad3d:	xor    eax,eax
   14002ad3f:	cmp    BYTE PTR [rbp+0x38],al
   14002ad42:	setne  al
   14002ad45:	add    rsp,0x20
   14002ad49:	pop    rbp
   14002ad4a:	ret    
   14002ad4b:	int3   
   14002ad4c:	rex push rbp
   14002ad4e:	sub    rsp,0x20
   14002ad52:	mov    rbp,rdx
   14002ad55:	call   0x14000bb60
   14002ad5a:	nop
   14002ad5b:	add    rsp,0x20
   14002ad5f:	pop    rbp
   14002ad60:	ret    
   14002ad61:	int3   
   14002ad62:	rex push rbp
   14002ad64:	sub    rsp,0x20
   14002ad68:	mov    rbp,rdx
   14002ad6b:	call   0x14000a3ec
   14002ad70:	cmp    DWORD PTR [rax+0x100],0x0
   14002ad77:	jle    0x14002ad84
   14002ad79:	call   0x14000a3ec
   14002ad7e:	dec    DWORD PTR [rax+0x100]
   14002ad84:	add    rsp,0x20
   14002ad88:	pop    rbp
   14002ad89:	ret    
   14002ad8a:	int3   
   14002ad8b:	rex push rbp
   14002ad8d:	sub    rsp,0x30
   14002ad91:	mov    rbp,rdx
   14002ad94:	mov    ecx,0xe
   14002ad99:	add    rsp,0x30
   14002ad9d:	pop    rbp
   14002ad9e:	jmp    0x14000fe48
   14002ada3:	int3   
   14002ada4:	rex push rbp
   14002ada6:	sub    rsp,0x30
   14002adaa:	mov    rbp,rdx
   14002adad:	mov    ecx,0xe
   14002adb2:	call   0x14000fe48
   14002adb7:	nop
   14002adb8:	add    rsp,0x30
   14002adbc:	pop    rbp
   14002adbd:	ret    
   14002adbe:	int3   
   14002adbf:	rex push rbp
   14002adc1:	sub    rsp,0x20
   14002adc5:	mov    rbp,rdx
   14002adc8:	mov    ecx,0xe
   14002adcd:	add    rsp,0x20
   14002add1:	pop    rbp
   14002add2:	jmp    0x14000fe48
   14002add7:	int3   
   14002add8:	rex push rbp
   14002adda:	sub    rsp,0x20
   14002adde:	mov    rbp,rdx
   14002ade1:	mov    ecx,0xe
   14002ade6:	add    rsp,0x20
   14002adea:	pop    rbp
   14002adeb:	jmp    0x14000fe48
   14002adf0:	int3   
   14002adf1:	rex push rbp
   14002adf3:	sub    rsp,0x20
   14002adf7:	mov    rbp,rdx
   14002adfa:	mov    ecx,0xe
   14002adff:	add    rsp,0x20
   14002ae03:	pop    rbp
   14002ae04:	jmp    0x14000fe48
   14002ae09:	int3   
   14002ae0a:	rex push rbp
   14002ae0c:	sub    rsp,0x20
   14002ae10:	mov    rbp,rdx
   14002ae13:	mov    ecx,0xb
   14002ae18:	call   0x14000fe48
   14002ae1d:	nop
   14002ae1e:	add    rsp,0x20
   14002ae22:	pop    rbp
   14002ae23:	ret    
   14002ae24:	int3   
   14002ae25:	rex push rbp
   14002ae27:	sub    rsp,0x20
   14002ae2b:	mov    rbp,rdx
   14002ae2e:	xor    ecx,ecx
   14002ae30:	add    rsp,0x20
   14002ae34:	pop    rbp
   14002ae35:	jmp    0x14000fe48
   14002ae3a:	int3   
   14002ae3b:	rex push rbp
   14002ae3d:	sub    rsp,0x20
   14002ae41:	mov    rbp,rdx
   14002ae44:	cmp    DWORD PTR [rbp+0x60],0x0
   14002ae48:	je     0x14002ae52
   14002ae4a:	xor    ecx,ecx
   14002ae4c:	call   0x14000fe48
   14002ae51:	nop
   14002ae52:	add    rsp,0x20
   14002ae56:	pop    rbp
   14002ae57:	ret    
   14002ae58:	int3   
   14002ae59:	rex push rbp
   14002ae5b:	sub    rsp,0x20
   14002ae5f:	mov    rbp,rdx
   14002ae62:	xor    ecx,ecx
   14002ae64:	add    rsp,0x20
   14002ae68:	pop    rbp
   14002ae69:	jmp    0x14000fe48
   14002ae6e:	int3   
   14002ae6f:	rex push rbp
   14002ae71:	sub    rsp,0x20
   14002ae75:	mov    rbp,rdx
   14002ae78:	mov    rcx,QWORD PTR [rip+0x114b1]        # 0x14003c330
   14002ae7f:	add    rsp,0x20
   14002ae83:	pop    rbp
   14002ae84:	rex.W jmp QWORD PTR [rip+0x1205]        # 0x14002c090
   14002ae8b:	int3   
   14002ae8c:	int3   
   14002ae8d:	int3   
   14002ae8e:	int3   
   14002ae8f:	int3   
   14002ae90:	rex push rbp
   14002ae92:	sub    rsp,0x20
   14002ae96:	mov    rbp,rdx
   14002ae99:	mov    rax,QWORD PTR [rcx]
   14002ae9c:	xor    ecx,ecx
   14002ae9e:	cmp    DWORD PTR [rax],0xc0000005
   14002aea4:	sete   cl
   14002aea7:	mov    eax,ecx
   14002aea9:	add    rsp,0x20
   14002aead:	pop    rbp
   14002aeae:	ret    
   14002aeaf:	int3   
   14002aeb0:	rex push rbp
   14002aeb2:	sub    rsp,0x20
   14002aeb6:	mov    rbp,rdx
   14002aeb9:	mov    ecx,0xd
   14002aebe:	add    rsp,0x20
   14002aec2:	pop    rbp
   14002aec3:	jmp    0x14000fe48
   14002aec8:	int3   
   14002aec9:	rex push rbp
   14002aecb:	sub    rsp,0x20
   14002aecf:	mov    rbp,rdx
   14002aed2:	mov    ecx,0xd
   14002aed7:	add    rsp,0x20
   14002aedb:	pop    rbp
   14002aedc:	jmp    0x14000fe48
   14002aee1:	int3   
   14002aee2:	rex push rbp
   14002aee4:	sub    rsp,0x20
   14002aee8:	mov    rbp,rdx
   14002aeeb:	mov    ecx,DWORD PTR [rbp+0x50]
   14002aeee:	add    rsp,0x20
   14002aef2:	pop    rbp
   14002aef3:	jmp    0x14001d5e4
   14002aef8:	int3   
   14002aef9:	rex push rbp
   14002aefb:	sub    rsp,0x20
   14002aeff:	mov    rbp,rdx
   14002af02:	mov    ecx,DWORD PTR [rbp+0x50]
   14002af05:	add    rsp,0x20
   14002af09:	pop    rbp
   14002af0a:	jmp    0x14001d5e4
   14002af0f:	int3   
   14002af10:	rex push rbp
   14002af12:	sub    rsp,0x20
   14002af16:	mov    rbp,rdx
   14002af19:	mov    ecx,0xc
   14002af1e:	add    rsp,0x20
   14002af22:	pop    rbp
   14002af23:	jmp    0x14000fe48
   14002af28:	int3   
   14002af29:	rex push rbp
   14002af2b:	sub    rsp,0x20
   14002af2f:	mov    rbp,rdx
   14002af32:	call   0x140010e04
   14002af37:	add    rax,0x30
   14002af3b:	mov    rdx,rax
   14002af3e:	mov    ecx,0x1
   14002af43:	call   0x140010ef8
   14002af48:	nop
   14002af49:	add    rsp,0x20
   14002af4d:	pop    rbp
   14002af4e:	ret    
   14002af4f:	int3   
   14002af50:	rex push rbp
   14002af52:	sub    rsp,0x20
   14002af56:	mov    rbp,rdx
   14002af59:	mov    rcx,QWORD PTR [rbp+0x38]
   14002af5d:	add    rsp,0x20
   14002af61:	pop    rbp
   14002af62:	jmp    0x140010ea8
   14002af67:	int3   
   14002af68:	rex push rbp
   14002af6a:	sub    rsp,0x30
   14002af6e:	mov    rbp,rdx
   14002af71:	mov    ecx,0x5
   14002af76:	add    rsp,0x30
   14002af7a:	pop    rbp
   14002af7b:	jmp    0x14000fe48
   14002af80:	int3   
   14002af81:	rex push rbp
   14002af83:	sub    rsp,0x30
   14002af87:	mov    rbp,rdx
   14002af8a:	mov    ecx,0x5
   14002af8f:	add    rsp,0x30
   14002af93:	pop    rbp
   14002af94:	jmp    0x14000fe48
   14002af99:	int3   
   14002af9a:	rex push rbp
   14002af9c:	sub    rsp,0x20
   14002afa0:	mov    rbp,rdx
   14002afa3:	mov    rcx,QWORD PTR [rbp+0x30]
   14002afa7:	add    rsp,0x20
   14002afab:	pop    rbp
   14002afac:	jmp    0x140010ea8
   14002afb1:	int3   
   14002afb2:	rex push rbp
   14002afb4:	sub    rsp,0x20
   14002afb8:	mov    rbp,rdx
   14002afbb:	movsxd rcx,DWORD PTR [rbp+0x20]
   14002afbf:	mov    rax,rcx
   14002afc2:	mov    rdx,QWORD PTR [rip+0x13fcf]        # 0x14003ef98
   14002afc9:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14002afcd:	call   0x140010ef8
   14002afd2:	nop
   14002afd3:	add    rsp,0x20
   14002afd7:	pop    rbp
   14002afd8:	ret    
   14002afd9:	int3   
   14002afda:	rex push rbp
   14002afdc:	sub    rsp,0x20
   14002afe0:	mov    rbp,rdx
   14002afe3:	mov    ecx,0x1
   14002afe8:	add    rsp,0x20
   14002afec:	pop    rbp
   14002afed:	jmp    0x14000fe48
   14002aff2:	int3   
   14002aff3:	rex push rbp
   14002aff5:	sub    rsp,0x20
   14002aff9:	mov    rbp,rdx
   14002affc:	mov    ecx,0x1
   14002b001:	add    rsp,0x20
   14002b005:	pop    rbp
   14002b006:	jmp    0x14000fe48
   14002b00b:	int3   
   14002b00c:	rex push rbp
   14002b00e:	sub    rsp,0x20
   14002b012:	mov    rbp,rdx
   14002b015:	mov    ecx,0xa
   14002b01a:	add    rsp,0x20
   14002b01e:	pop    rbp
   14002b01f:	jmp    0x14000fe48
   14002b024:	int3   
   14002b025:	rex push rbp
   14002b027:	sub    rsp,0x20
   14002b02b:	mov    rbp,rdx
   14002b02e:	mov    ecx,0xa
   14002b033:	call   0x14000fe48
   14002b038:	nop
   14002b039:	add    rsp,0x20
   14002b03d:	pop    rbp
   14002b03e:	ret    
   14002b03f:	int3   
   14002b040:	rex push rbp
   14002b042:	sub    rsp,0x20
   14002b046:	mov    rbp,rdx
   14002b049:	mov    ecx,0xb
   14002b04e:	add    rsp,0x20
   14002b052:	pop    rbp
   14002b053:	jmp    0x14000fe48
   14002b058:	int3   
   14002b059:	rex push rbp
   14002b05b:	sub    rsp,0x20
   14002b05f:	mov    rbp,rdx
   14002b062:	cmp    DWORD PTR [rbp+0x20],0x0
   14002b066:	jne    0x14002b08a
   14002b068:	movsxd rcx,DWORD PTR [rbp+0x48]
   14002b06c:	mov    rax,rcx
   14002b06f:	sar    rax,0x5
   14002b073:	lea    rdx,[rip+0x12c96]        # 0x14003dd10
   14002b07a:	and    ecx,0x1f
   14002b07d:	imul   rcx,rcx,0x58
   14002b081:	mov    rax,QWORD PTR [rdx+rax*8]
   14002b085:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002b08a:	mov    ecx,DWORD PTR [rbp+0x48]
   14002b08d:	call   0x14001d5e4
   14002b092:	nop
   14002b093:	add    rsp,0x20
   14002b097:	pop    rbp
   14002b098:	ret    
   14002b099:	int3   
   14002b09a:	rex push rbp
   14002b09c:	sub    rsp,0x20
   14002b0a0:	mov    rbp,rdx
   14002b0a3:	mov    ecx,0x3
   14002b0a8:	add    rsp,0x20
   14002b0ac:	pop    rbp
   14002b0ad:	jmp    0x14000fe48
   14002b0b2:	int3   
   14002b0b3:	rex push rbp
   14002b0b5:	sub    rsp,0x20
   14002b0b9:	mov    rbp,rdx
   14002b0bc:	mov    rcx,QWORD PTR [rbp+0x48]
   14002b0c0:	add    rsp,0x20
   14002b0c4:	pop    rbp
   14002b0c5:	jmp    0x140010ea8
   14002b0ca:	int3   
   14002b0cb:	rex push rbp
   14002b0cd:	sub    rsp,0x20
   14002b0d1:	mov    rbp,rdx
   14002b0d4:	mov    ecx,0xd
   14002b0d9:	add    rsp,0x20
   14002b0dd:	pop    rbp
   14002b0de:	jmp    0x14000fe48
   14002b0e3:	int3   
   14002b0e4:	rex push rbp
   14002b0e6:	sub    rsp,0x20
   14002b0ea:	mov    rbp,rdx
   14002b0ed:	mov    ecx,0xc
   14002b0f2:	add    rsp,0x20
   14002b0f6:	pop    rbp
   14002b0f7:	jmp    0x14000fe48
   14002b0fc:	int3   
   14002b0fd:	rex push rbp
   14002b0ff:	sub    rsp,0x20
   14002b103:	mov    rbp,rdx
   14002b106:	mov    ecx,0xc
   14002b10b:	add    rsp,0x20
   14002b10f:	pop    rbp
   14002b110:	jmp    0x14000fe48
   14002b115:	int3   
   14002b116:	rex push rbp
   14002b118:	sub    rsp,0x20
   14002b11c:	mov    rbp,rdx
   14002b11f:	mov    ecx,0xd
   14002b124:	add    rsp,0x20
   14002b128:	pop    rbp
   14002b129:	jmp    0x14000fe48
   14002b12e:	int3   
   14002b12f:	rex push rbp
   14002b131:	sub    rsp,0x20
   14002b135:	mov    rbp,rdx
   14002b138:	mov    ecx,0xc
   14002b13d:	add    rsp,0x20
   14002b141:	pop    rbp
   14002b142:	jmp    0x14000fe48
   14002b147:	int3   
   14002b148:	rex push rbp
   14002b14a:	sub    rsp,0x20
   14002b14e:	mov    rbp,rdx
   14002b151:	mov    ecx,0xc
   14002b156:	call   0x14000fe48
   14002b15b:	nop
   14002b15c:	add    rsp,0x20
   14002b160:	pop    rbp
   14002b161:	ret    
   14002b162:	int3   
   14002b163:	rex push rbp
   14002b165:	sub    rsp,0x20
   14002b169:	mov    rbp,rdx
   14002b16c:	mov    ecx,0xc
   14002b171:	call   0x14000fe48
   14002b176:	nop
   14002b177:	add    rsp,0x20
   14002b17b:	pop    rbp
   14002b17c:	ret    
   14002b17d:	int3   
   14002b17e:	rex push rbp
   14002b180:	sub    rsp,0x20
   14002b184:	mov    rbp,rdx
   14002b187:	mov    rax,QWORD PTR [rbp+0x60]
   14002b18b:	and    DWORD PTR [rax+0xc8],0xffffffef
   14002b192:	add    rsp,0x20
   14002b196:	pop    rbp
   14002b197:	ret    
   14002b198:	int3   
   14002b199:	rex push rbp
   14002b19b:	sub    rsp,0x20
   14002b19f:	mov    rbp,rdx
   14002b1a2:	mov    ecx,DWORD PTR [rbp+0x40]
   14002b1a5:	add    rsp,0x20
   14002b1a9:	pop    rbp
   14002b1aa:	jmp    0x14001d5e4
   14002b1af:	int3   
   14002b1b0:	rex push rbp
   14002b1b2:	sub    rsp,0x20
   14002b1b6:	mov    rbp,rdx
   14002b1b9:	mov    rcx,QWORD PTR [rbp+0x30]
   14002b1bd:	add    rsp,0x20
   14002b1c1:	pop    rbp
   14002b1c2:	jmp    0x140010ea8
   14002b1c7:	int3   
   14002b1c8:	rex push rbp
   14002b1ca:	sub    rsp,0x20
   14002b1ce:	mov    rbp,rdx
   14002b1d1:	mov    ecx,DWORD PTR [rbp+0x40]
   14002b1d4:	add    rsp,0x20
   14002b1d8:	pop    rbp
   14002b1d9:	jmp    0x14001d5e4
   14002b1de:	int3   
   14002b1df:	int3   
   14002b1e0:	lea    rax,[rip+0x1531]        # 0x14002c718
   14002b1e7:	mov    QWORD PTR [rip+0x10e12],rax        # 0x14003c000
   14002b1ee:	ret    
   14002b1ef:	int3   
   14002b1f0:	lea    rax,[rip+0x1521]        # 0x14002c718
   14002b1f7:	mov    QWORD PTR [rip+0x10e0a],rax        # 0x14003c008
   14002b1fe:	ret    
   14002b1ff:	int3   
   14002b200:	lea    rax,[rip+0x1511]        # 0x14002c718
   14002b207:	mov    QWORD PTR [rip+0x10e02],rax        # 0x14003c010
   14002b20e:	ret    
   14002b20f:	int3   
   14002b210:	lea    rax,[rip+0x1501]        # 0x14002c718
   14002b217:	mov    QWORD PTR [rip+0x10de2],rax        # 0x14003c000
   14002b21e:	ret    
   14002b21f:	int3   
   14002b220:	lea    rax,[rip+0x14f1]        # 0x14002c718
   14002b227:	mov    QWORD PTR [rip+0x10dda],rax        # 0x14003c008
   14002b22e:	ret    
   14002b22f:	int3   
   14002b230:	lea    rax,[rip+0x14e1]        # 0x14002c718
   14002b237:	mov    QWORD PTR [rip+0x10dd2],rax        # 0x14003c010
   14002b23e:	ret    
   14002b23f:	int3   
   14002b240:	lea    rax,[rip+0x14d1]        # 0x14002c718
   14002b247:	mov    QWORD PTR [rip+0x10db2],rax        # 0x14003c000
   14002b24e:	ret    
   14002b24f:	int3   
   14002b250:	lea    rax,[rip+0x14c1]        # 0x14002c718
   14002b257:	mov    QWORD PTR [rip+0x10daa],rax        # 0x14003c008
   14002b25e:	ret    
   14002b25f:	int3   
   14002b260:	lea    rax,[rip+0x14b1]        # 0x14002c718
   14002b267:	mov    QWORD PTR [rip+0x10da2],rax        # 0x14003c010
   14002b26e:	ret    
