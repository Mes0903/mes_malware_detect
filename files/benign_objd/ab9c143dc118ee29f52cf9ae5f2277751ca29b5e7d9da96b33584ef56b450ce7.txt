
ab9c143dc118ee29f52cf9ae5f2277751ca29b5e7d9da96b33584ef56b450ce7.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x38
   140001004:	xor    edx,edx
   140001006:	lea    rcx,[rip+0x6763]        # 0x140007770
   14000100d:	call   QWORD PTR [rip+0x3285]        # 0x140004298
   140001013:	and    QWORD PTR [rsp+0x20],0x0
   140001019:	lea    rax,[rip+0x36e0]        # 0x140004700
   140001020:	lea    r9,[rip+0x3ac9]        # 0x140004af0
   140001027:	mov    QWORD PTR [rip+0x6742],rax        # 0x140007770
   14000102e:	mov    QWORD PTR [rsp+0x28],r9
   140001033:	mov    rcx,QWORD PTR [rip+0x5fe6]        # 0x140007020
   14000103a:	lea    rax,[rip+0x5fdf]        # 0x140007020
   140001041:	cmp    rcx,rax
   140001044:	je     0x14000105d
   140001046:	test   DWORD PTR [rcx+0x1c],0x400
   14000104d:	je     0x14000105d
   14000104f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001053:	mov    edx,0xa
   140001058:	call   0x14000259c
   14000105d:	lea    rcx,[rsp+0x20]
   140001062:	call   0x1400026b4
   140001067:	lea    rcx,[rip+0x2a42]        # 0x140003ab0
   14000106e:	add    rsp,0x38
   140001072:	jmp    0x140003218
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	sub    rsp,0x28
   140001084:	mov    edx,0x600
   140001089:	xor    ecx,ecx
   14000108b:	call   0x140003768
   140001090:	mov    BYTE PTR [rip+0x666a],al        # 0x140007700
   140001096:	add    rsp,0x28
   14000109a:	ret    
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	int3   
   1400010a1:	int3   
   1400010a2:	int3   
   1400010a3:	int3   
   1400010a4:	int3   
   1400010a5:	int3   
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400010b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400010ba:	push   rdi
   1400010bb:	sub    rsp,0x20
   1400010bf:	and    DWORD PTR [r8],0x0
   1400010c3:	mov    rbx,rdx
   1400010c6:	sub    ecx,0x4
   1400010c9:	je     0x1400010e0
   1400010cb:	cmp    ecx,0x1
   1400010ce:	je     0x1400010d7
   1400010d0:	mov    eax,0x57
   1400010d5:	jmp    0x14000111f
   1400010d7:	xor    edi,edi
   1400010d9:	xor    eax,eax
   1400010db:	xor    sil,sil
   1400010de:	jmp    0x140001101
   1400010e0:	mov    rcx,r9
   1400010e3:	call   QWORD PTR [rip+0x2f17]        # 0x140004000
   1400010e9:	mov    rcx,rax
   1400010ec:	mov    rdi,rax
   1400010ef:	call   QWORD PTR [rip+0x2f13]        # 0x140004008
   1400010f5:	mov    rcx,rdi
   1400010f8:	mov    sil,al
   1400010fb:	call   QWORD PTR [rip+0x2f0f]        # 0x140004010
   140001101:	test   BYTE PTR [rbx+0x1a],0x2
   140001105:	je     0x140001112
   140001107:	mov    rcx,QWORD PTR [rbx+0x10]
   14000110b:	test   rcx,rcx
   14000110e:	cmovne rbx,rcx
   140001112:	mov    QWORD PTR [rbx+0x10],rdi
   140001116:	mov    BYTE PTR [rbx+0x19],sil
   14000111a:	mov    DWORD PTR [rbx+0x1c],eax
   14000111d:	xor    eax,eax
   14000111f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001124:	mov    rsi,QWORD PTR [rsp+0x38]
   140001129:	add    rsp,0x20
   14000112d:	pop    rdi
   14000112e:	ret    
   14000112f:	int3   
   140001130:	int3   
   140001131:	int3   
   140001132:	int3   
   140001133:	int3   
   140001134:	int3   
   140001135:	int3   
   140001136:	int3   
   140001137:	int3   
   140001138:	int3   
   140001139:	int3   
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	mov    rax,QWORD PTR [rip+0x3159]        # 0x1400042a0
   140001147:	ret    
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	lea    rax,[rip+0x36f1]        # 0x140004848
   140001157:	ret    
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	mov    QWORD PTR [rsp+0x8],rbx
   140001165:	push   rdi
   140001166:	sub    rsp,0x20
   14000116a:	mov    ebx,edx
   14000116c:	mov    rdi,rcx
   14000116f:	call   QWORD PTR [rip+0x311b]        # 0x140004290
   140001175:	test   bl,0x1
   140001178:	je     0x140001182
   14000117a:	mov    rcx,rdi
   14000117d:	call   0x14000295c
   140001182:	mov    rax,rdi
   140001185:	mov    rbx,QWORD PTR [rsp+0x30]
   14000118a:	add    rsp,0x20
   14000118e:	pop    rdi
   14000118f:	ret    
   140001190:	int3   
   140001191:	int3   
   140001192:	int3   
   140001193:	int3   
   140001194:	int3   
   140001195:	int3   
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	mov    rax,rsp
   1400011a3:	push   rbp
   1400011a4:	push   rdi
   1400011a5:	push   r14
   1400011a7:	lea    rbp,[rax-0x268]
   1400011ae:	sub    rsp,0x350
   1400011b5:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   1400011be:	mov    QWORD PTR [rax+0x10],rbx
   1400011c2:	mov    QWORD PTR [rax+0x18],rsi
   1400011c6:	mov    rax,QWORD PTR [rip+0x5e3b]        # 0x140007008
   1400011cd:	xor    rax,rsp
   1400011d0:	mov    QWORD PTR [rbp+0x240],rax
   1400011d7:	mov    rsi,rcx
   1400011da:	xor    r14d,r14d
   1400011dd:	mov    QWORD PTR [rip+0x653c],r14        # 0x140007720
   1400011e4:	lea    rax,[rip+0x654d]        # 0x140007738
   1400011eb:	mov    QWORD PTR [rip+0x651e],rax        # 0x140007710
   1400011f2:	mov    QWORD PTR [rip+0x652b],0x1        # 0x140007728
   1400011fd:	mov    QWORD PTR [rip+0x6544],r14        # 0x140007748
   140001204:	mov    QWORD PTR [rip+0x652d],r14        # 0x140007738
   14000120b:	mov    QWORD PTR [rip+0x653a],0x1        # 0x140007750
   140001216:	lea    rax,[rip+0x396b]        # 0x140004b88
   14000121d:	mov    QWORD PTR [rip+0x653c],rax        # 0x140007760
   140001224:	lea    rax,[rip+0x394d]        # 0x140004b78
   14000122b:	mov    QWORD PTR [rip+0x6536],rax        # 0x140007768
   140001232:	lea    rbx,[rip+0x64d7]        # 0x140007710
   140001239:	mov    QWORD PTR [rip+0x5de0],rbx        # 0x140007020
   140001240:	lea    rdi,[rip+0x6519]        # 0x140007760
   140001247:	mov    r8,QWORD PTR [rdi]
   14000124a:	lea    rdi,[rdi+0x8]
   14000124e:	mov    QWORD PTR [rsp+0x40],r8
   140001253:	mov    QWORD PTR [rsp+0x48],r14
   140001258:	mov    QWORD PTR [rbx+0x20],r8
   14000125c:	lea    rax,[rbx+0x8]
   140001260:	mov    QWORD PTR [rsp+0x38],rax
   140001265:	mov    QWORD PTR [rsp+0x30],r14
   14000126a:	mov    QWORD PTR [rsp+0x28],r14
   14000126f:	lea    rax,[rsp+0x40]
   140001274:	mov    QWORD PTR [rsp+0x20],rax
   140001279:	mov    r9d,0x1
   14000127f:	mov    rdx,rbx
   140001282:	lea    rcx,[rip+0xfffffffffffffe27]        # 0x1400010b0
   140001289:	call   QWORD PTR [rip+0x2d89]        # 0x140004018
   14000128f:	mov    rbx,QWORD PTR [rbx]
   140001292:	test   rbx,rbx
   140001295:	jne    0x140001247
   140001297:	mov    QWORD PTR [rsp+0x50],r14
   14000129c:	lea    rax,[rip+0x3875]        # 0x140004b18
   1400012a3:	mov    QWORD PTR [rsp+0x58],rax
   1400012a8:	lea    rbx,[rip+0x5d71]        # 0x140007020
   1400012af:	cmp    QWORD PTR [rip+0x5d6a],rbx        # 0x140007020
   1400012b6:	je     0x1400012c3
   1400012b8:	lea    rcx,[rsp+0x50]
   1400012bd:	call   0x140002678
   1400012c2:	nop
   1400012c3:	xor    r9d,r9d
   1400012c6:	xor    r8d,r8d
   1400012c9:	lea    edx,[r9+0x1]
   1400012cd:	xor    ecx,ecx
   1400012cf:	call   QWORD PTR [rip+0x2dfb]        # 0x1400040d0
   1400012d5:	call   QWORD PTR [rip+0x2fad]        # 0x140004288
   1400012db:	test   eax,eax
   1400012dd:	jne    0x1400012f0
   1400012df:	or     r8d,0xffffffff
   1400012e3:	xor    edx,edx
   1400012e5:	lea    ecx,[rax+0x64]
   1400012e8:	call   QWORD PTR [rip+0x2f22]        # 0x140004210
   1400012ee:	jmp    0x140001365
   1400012f0:	xor    r8d,r8d
   1400012f3:	lea    edx,[r8+0x66]
   1400012f7:	lea    rcx,[rsp+0x70]
   1400012fc:	call   QWORD PTR [rip+0x3016]        # 0x140004318
   140001302:	lea    rax,[rip+0x360f]        # 0x140004918
   140001309:	mov    QWORD PTR [rsp+0x70],rax
   14000130e:	mov    QWORD PTR [rsp+0x40],r14
   140001313:	lea    rax,[rip+0x389e]        # 0x140004bb8
   14000131a:	mov    QWORD PTR [rsp+0x48],rax
   14000131f:	cmp    QWORD PTR [rip+0x5cfa],rbx        # 0x140007020
   140001326:	je     0x140001332
   140001328:	lea    rcx,[rsp+0x40]
   14000132d:	call   0x140002678
   140001332:	mov    WORD PTR [rbp+0x30],r14w
   140001337:	lea    rcx,[rsp+0x40]
   14000133c:	call   0x1400026b4
   140001341:	nop
   140001342:	lea    rax,[rsp+0x70]
   140001347:	mov    QWORD PTR [rsi+0x40],rax
   14000134b:	lea    rcx,[rsp+0x70]
   140001350:	call   QWORD PTR [rip+0x2eb2]        # 0x140004208
   140001356:	mov    QWORD PTR [rsi+0x40],r14
   14000135a:	lea    rcx,[rsp+0x70]
   14000135f:	call   0x140001608
   140001364:	nop
   140001365:	lea    rcx,[rsp+0x50]
   14000136a:	call   0x1400026b4
   14000136f:	xor    eax,eax
   140001371:	mov    rcx,QWORD PTR [rbp+0x240]
   140001378:	xor    rcx,rsp
   14000137b:	call   0x140003150
   140001380:	lea    r11,[rsp+0x350]
   140001388:	mov    rbx,QWORD PTR [r11+0x28]
   14000138c:	mov    rsi,QWORD PTR [r11+0x30]
   140001390:	mov    rsp,r11
   140001393:	pop    r14
   140001395:	pop    rdi
   140001396:	pop    rbp
   140001397:	ret    
   140001398:	int3   
   140001399:	int3   
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	mov    r11,rsp
   1400013a3:	push   rdi
   1400013a4:	sub    rsp,0x40
   1400013a8:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   1400013b0:	mov    QWORD PTR [r11+0x8],rbx
   1400013b4:	mov    QWORD PTR [r11+0x10],rsi
   1400013b8:	mov    rbx,rcx
   1400013bb:	and    QWORD PTR [r11-0x20],0x0
   1400013c0:	lea    rax,[rip+0x3771]        # 0x140004b38
   1400013c7:	mov    QWORD PTR [r11-0x18],rax
   1400013cb:	lea    rsi,[rip+0x5c4e]        # 0x140007020
   1400013d2:	cmp    QWORD PTR [rip+0x5c47],rsi        # 0x140007020
   1400013d9:	je     0x1400013e5
   1400013db:	lea    rcx,[r11-0x20]
   1400013df:	call   0x140002678
   1400013e4:	nop
   1400013e5:	mov    rcx,rbx
   1400013e8:	call   QWORD PTR [rip+0x2e12]        # 0x140004200
   1400013ee:	mov    edi,eax
   1400013f0:	lea    rcx,[rsp+0x28]
   1400013f5:	call   0x1400026b4
   1400013fa:	mov    rbx,QWORD PTR [rip+0x5c1f]        # 0x140007020
   140001401:	cmp    rbx,rsi
   140001404:	je     0x14000142b
   140001406:	jmp    0x14000141f
   140001408:	mov    rcx,QWORD PTR [rbx+0x8]
   14000140c:	test   rcx,rcx
   14000140f:	je     0x14000141c
   140001411:	call   QWORD PTR [rip+0x2c09]        # 0x140004020
   140001417:	and    QWORD PTR [rbx+0x8],0x0
   14000141c:	mov    rbx,QWORD PTR [rbx]
   14000141f:	test   rbx,rbx
   140001422:	jne    0x140001408
   140001424:	mov    QWORD PTR [rip+0x5bf5],rsi        # 0x140007020
   14000142b:	mov    eax,edi
   14000142d:	mov    rbx,QWORD PTR [rsp+0x50]
   140001432:	mov    rsi,QWORD PTR [rsp+0x58]
   140001437:	add    rsp,0x40
   14000143b:	pop    rdi
   14000143c:	ret    
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	int3   
   140001441:	int3   
   140001442:	int3   
   140001443:	int3   
   140001444:	int3   
   140001445:	int3   
   140001446:	int3   
   140001447:	int3   
   140001448:	int3   
   140001449:	int3   
   14000144a:	int3   
   14000144b:	int3   
   14000144c:	int3   
   14000144d:	int3   
   14000144e:	int3   
   14000144f:	int3   
   140001450:	ret    0x0
   140001453:	int3   
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	int3   
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	sub    rsp,0x38
   140001460:	and    QWORD PTR [rsp+0x20],0x0
   140001466:	movzx  r9d,dx
   14000146a:	mov    edx,0x2b
   14000146f:	call   QWORD PTR [rip+0x2bb3]        # 0x140004028
   140001475:	add    rsp,0x38
   140001479:	ret    
   14000147a:	int3   
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	mov    r11,rsp
   140001483:	mov    DWORD PTR [r11+0x20],r9d
   140001487:	sub    rsp,0x48
   14000148b:	and    QWORD PTR [r11-0x18],0x0
   140001490:	lea    rax,[r11+0x20]
   140001494:	movzx  r9d,dx
   140001498:	mov    edx,0x2b
   14000149d:	mov    QWORD PTR [r11-0x20],0x4
   1400014a5:	mov    QWORD PTR [r11-0x28],rax
   1400014a9:	call   QWORD PTR [rip+0x2b79]        # 0x140004028
   1400014af:	add    rsp,0x48
   1400014b3:	ret    
   1400014b4:	int3   
   1400014b5:	int3   
   1400014b6:	int3   
   1400014b7:	int3   
   1400014b8:	int3   
   1400014b9:	int3   
   1400014ba:	int3   
   1400014bb:	int3   
   1400014bc:	int3   
   1400014bd:	int3   
   1400014be:	int3   
   1400014bf:	int3   
   1400014c0:	mov    r11,rsp
   1400014c3:	mov    QWORD PTR [r11+0x8],rbx
   1400014c7:	mov    QWORD PTR [r11+0x10],rsi
   1400014cb:	push   rdi
   1400014cc:	sub    rsp,0x40
   1400014d0:	and    QWORD PTR [r11-0x18],0x0
   1400014d5:	lea    rax,[rip+0x36bc]        # 0x140004b98
   1400014dc:	mov    QWORD PTR [r11-0x10],rax
   1400014e0:	mov    rbx,rcx
   1400014e3:	lea    rsi,[rip+0x5b36]        # 0x140007020
   1400014ea:	cmp    QWORD PTR [rip+0x5b2f],rsi        # 0x140007020
   1400014f1:	je     0x1400014fc
   1400014f3:	lea    rcx,[r11-0x18]
   1400014f7:	call   0x140002678
   1400014fc:	test   rbx,rbx
   1400014ff:	je     0x14000158d
   140001505:	mov    r8d,DWORD PTR [rbx+0x8]
   140001509:	mov    edx,0x1
   14000150e:	mov    ecx,0x100000
   140001513:	call   QWORD PTR [rip+0x2baf]        # 0x1400040c8
   140001519:	mov    rdi,rax
   14000151c:	test   rax,rax
   14000151f:	je     0x14000153f
   140001521:	mov    rcx,rax
   140001524:	call   0x1400028a4
   140001529:	test   eax,eax
   14000152b:	jne    0x140001535
   14000152d:	mov    rcx,QWORD PTR [rbx]
   140001530:	call   0x140002734
   140001535:	mov    rcx,rdi
   140001538:	call   0x1400027f0
   14000153d:	jmp    0x140001584
   14000153f:	mov    rax,QWORD PTR [rip+0x5ada]        # 0x140007020
   140001546:	cmp    rax,rsi
   140001549:	je     0x140001584
   14000154b:	test   BYTE PTR [rax+0x1c],0x4
   14000154f:	je     0x140001584
   140001551:	call   QWORD PTR [rip+0x2b69]        # 0x1400040c0
   140001557:	mov    rcx,QWORD PTR [rip+0x5ac2]        # 0x140007020
   14000155e:	lea    r8,[rip+0x3763]        # 0x140004cc8
   140001565:	movzx  r9d,ax
   140001569:	mov    edx,0xa
   14000156e:	or     r9d,0x80070000
   140001575:	test   eax,eax
   140001577:	mov    rcx,QWORD PTR [rcx+0x10]
   14000157b:	cmovle r9d,eax
   14000157f:	call   0x140001480
   140001584:	mov    rcx,rbx
   140001587:	call   QWORD PTR [rip+0x2e93]        # 0x140004420
   14000158d:	lea    rcx,[rsp+0x30]
   140001592:	call   0x1400026b4
   140001597:	mov    rbx,QWORD PTR [rsp+0x50]
   14000159c:	xor    eax,eax
   14000159e:	mov    rsi,QWORD PTR [rsp+0x58]
   1400015a3:	add    rsp,0x40
   1400015a7:	pop    rdi
   1400015a8:	ret    
   1400015a9:	int3   
   1400015aa:	int3   
   1400015ab:	int3   
   1400015ac:	int3   
   1400015ad:	int3   
   1400015ae:	int3   
   1400015af:	int3   
   1400015b0:	mov    rax,QWORD PTR [rip+0x2d69]        # 0x140004320
   1400015b7:	ret    
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	lea    rax,[rip+0x3501]        # 0x140004ac8
   1400015c7:	ret    
   1400015c8:	int3   
   1400015c9:	int3   
   1400015ca:	int3   
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015d5:	push   rdi
   1400015d6:	sub    rsp,0x20
   1400015da:	mov    ebx,edx
   1400015dc:	mov    rdi,rcx
   1400015df:	call   0x140001608
   1400015e4:	test   bl,0x1
   1400015e7:	je     0x1400015f1
   1400015e9:	mov    rcx,rdi
   1400015ec:	call   0x14000295c
   1400015f1:	mov    rax,rdi
   1400015f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015f9:	add    rsp,0x20
   1400015fd:	pop    rdi
   1400015fe:	ret    
   1400015ff:	int3   
   140001600:	int3   
   140001601:	int3   
   140001602:	int3   
   140001603:	int3   
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	rex push rbx
   14000160a:	sub    rsp,0x30
   14000160e:	and    QWORD PTR [rsp+0x20],0x0
   140001614:	lea    rax,[rip+0x32fd]        # 0x140004918
   14000161b:	mov    QWORD PTR [rcx],rax
   14000161e:	mov    rbx,rcx
   140001621:	lea    rax,[rip+0x35b8]        # 0x140004be0
   140001628:	mov    QWORD PTR [rsp+0x28],rax
   14000162d:	lea    rax,[rip+0x59ec]        # 0x140007020
   140001634:	cmp    QWORD PTR [rip+0x59e5],rax        # 0x140007020
   14000163b:	je     0x140001647
   14000163d:	lea    rcx,[rsp+0x20]
   140001642:	call   0x140002678
   140001647:	lea    rcx,[rsp+0x20]
   14000164c:	call   0x1400026b4
   140001651:	mov    rcx,rbx
   140001654:	add    rsp,0x30
   140001658:	pop    rbx
   140001659:	rex.W jmp QWORD PTR [rip+0x2cb0]        # 0x140004310
   140001660:	int3   
   140001661:	int3   
   140001662:	int3   
   140001663:	int3   
   140001664:	int3   
   140001665:	int3   
   140001666:	int3   
   140001667:	int3   
   140001668:	int3   
   140001669:	int3   
   14000166a:	int3   
   14000166b:	int3   
   14000166c:	int3   
   14000166d:	int3   
   14000166e:	int3   
   14000166f:	int3   
   140001670:	sub    rsp,0x38
   140001674:	and    QWORD PTR [rsp+0x20],0x0
   14000167a:	lea    rax,[rip+0x3587]        # 0x140004c08
   140001681:	mov    QWORD PTR [rsp+0x28],rax
   140001686:	lea    rax,[rip+0x5993]        # 0x140007020
   14000168d:	cmp    QWORD PTR [rip+0x598c],rax        # 0x140007020
   140001694:	je     0x1400016a0
   140001696:	lea    rcx,[rsp+0x20]
   14000169b:	call   0x140002678
   1400016a0:	lea    rcx,[rsp+0x20]
   1400016a5:	call   0x1400026b4
   1400016aa:	add    rsp,0x38
   1400016ae:	ret    
   1400016af:	int3   
   1400016b0:	int3   
   1400016b1:	int3   
   1400016b2:	int3   
   1400016b3:	int3   
   1400016b4:	int3   
   1400016b5:	int3   
   1400016b6:	int3   
   1400016b7:	int3   
   1400016b8:	int3   
   1400016b9:	int3   
   1400016ba:	int3   
   1400016bb:	int3   
   1400016bc:	int3   
   1400016bd:	int3   
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	mov    rax,QWORD PTR [rip+0x2c41]        # 0x140004308
   1400016c7:	ret    
   1400016c8:	int3   
   1400016c9:	int3   
   1400016ca:	int3   
   1400016cb:	int3   
   1400016cc:	int3   
   1400016cd:	int3   
   1400016ce:	int3   
   1400016cf:	int3   
   1400016d0:	lea    rax,[rip+0x3229]        # 0x140004900
   1400016d7:	ret    
   1400016d8:	int3   
   1400016d9:	int3   
   1400016da:	int3   
   1400016db:	int3   
   1400016dc:	int3   
   1400016dd:	int3   
   1400016de:	int3   
   1400016df:	int3   
   1400016e0:	mov    rax,rsp
   1400016e3:	push   rbp
   1400016e4:	push   r12
   1400016e6:	push   r13
   1400016e8:	push   r14
   1400016ea:	push   r15
   1400016ec:	lea    rbp,[rax-0x5f]
   1400016f0:	sub    rsp,0xc0
   1400016f7:	mov    QWORD PTR [rbp-0x21],0xfffffffffffffffe
   1400016ff:	mov    QWORD PTR [rax+0x10],rbx
   140001703:	mov    QWORD PTR [rax+0x18],rsi
   140001707:	mov    QWORD PTR [rax+0x20],rdi
   14000170b:	mov    rax,QWORD PTR [rip+0x58f6]        # 0x140007008
   140001712:	xor    rax,rsp
   140001715:	mov    QWORD PTR [rbp+0x27],rax
   140001719:	mov    rbx,rcx
   14000171c:	xor    r13d,r13d
   14000171f:	mov    QWORD PTR [rbp-0x31],r13
   140001723:	lea    rax,[rip+0x34fe]        # 0x140004c28
   14000172a:	mov    QWORD PTR [rbp-0x29],rax
   14000172e:	lea    rsi,[rip+0x58eb]        # 0x140007020
   140001735:	cmp    QWORD PTR [rip+0x58e4],rsi        # 0x140007020
   14000173c:	je     0x140001748
   14000173e:	lea    rcx,[rbp-0x31]
   140001742:	call   0x140002678
   140001747:	nop
   140001748:	mov    rcx,rbx
   14000174b:	call   QWORD PTR [rip+0x2baf]        # 0x140004300
   140001751:	test   rbx,rbx
   140001754:	mov    rcx,r13
   140001757:	je     0x14000175d
   140001759:	mov    rcx,QWORD PTR [rbx+0x40]
   14000175d:	mov    edx,0xffffffeb
   140001762:	mov    r8d,0xd48
   140001768:	call   QWORD PTR [rip+0x2c7a]        # 0x1400043e8
   14000176e:	mov    DWORD PTR [rbp-0x9],0x2c
   140001775:	lea    rdx,[rbp-0x9]
   140001779:	mov    rcx,rbx
   14000177c:	call   QWORD PTR [rip+0x2b76]        # 0x1400042f8
   140001782:	call   QWORD PTR [rip+0x2c88]        # 0x140004410
   140001788:	mov    rdi,rax
   14000178b:	mov    DWORD PTR [rbp-0x49],r13d
   14000178f:	lea    rax,[rbp-0x49]
   140001793:	mov    QWORD PTR [rbp-0x41],rax
   140001797:	lea    rax,[rip+0x35ba]        # 0x140004d58
   14000179e:	mov    QWORD PTR [rbp-0x39],rax
   1400017a2:	cmp    QWORD PTR [rip+0x5877],rsi        # 0x140007020
   1400017a9:	je     0x1400017b4
   1400017ab:	lea    rcx,[rbp-0x41]
   1400017af:	call   0x140002678
   1400017b4:	lea    rdx,[rbp-0x19]
   1400017b8:	mov    rcx,rdi
   1400017bb:	call   QWORD PTR [rip+0x2c37]        # 0x1400043f8
   1400017c1:	test   eax,eax
   1400017c3:	jne    0x140001807
   1400017c5:	call   QWORD PTR [rip+0x28f5]        # 0x1400040c0
   1400017cb:	movzx  r9d,ax
   1400017cf:	or     r9d,0x80070000
   1400017d6:	test   eax,eax
   1400017d8:	cmovle r9d,eax
   1400017dc:	mov    DWORD PTR [rbp-0x49],r9d
   1400017e0:	mov    rcx,QWORD PTR [rip+0x5839]        # 0x140007020
   1400017e7:	cmp    rcx,rsi
   1400017ea:	je     0x140001807
   1400017ec:	test   BYTE PTR [rcx+0x1c],0x4
   1400017f0:	je     0x140001807
   1400017f2:	mov    edx,0x22
   1400017f7:	lea    r8,[rip+0x35da]        # 0x140004dd8
   1400017fe:	mov    rcx,QWORD PTR [rcx+0x10]
   140001802:	call   0x140001480
   140001807:	lea    rcx,[rbp-0x41]
   14000180b:	call   0x1400026b4
   140001810:	mov    edi,DWORD PTR [rbp+0x1b]
   140001813:	sub    edi,DWORD PTR [rbp+0x13]
   140001816:	mov    esi,DWORD PTR [rbp+0x1f]
   140001819:	sub    esi,DWORD PTR [rbp+0x17]
   14000181c:	test   rbx,rbx
   14000181f:	mov    r14,r13
   140001822:	je     0x140001828
   140001824:	mov    r14,QWORD PTR [rbx+0x40]
   140001828:	mov    r15d,DWORD PTR [rbp-0xd]
   14000182c:	sub    r15d,esi
   14000182f:	mov    r12d,DWORD PTR [rbp-0x11]
   140001833:	sub    r12d,edi
   140001836:	mov    DWORD PTR [rbp-0x49],r13d
   14000183a:	lea    rax,[rbp-0x49]
   14000183e:	mov    QWORD PTR [rbp-0x41],rax
   140001842:	lea    rax,[rip+0x3577]        # 0x140004dc0
   140001849:	mov    QWORD PTR [rbp-0x39],rax
   14000184d:	lea    rax,[rip+0x57cc]        # 0x140007020
   140001854:	cmp    QWORD PTR [rip+0x57c5],rax        # 0x140007020
   14000185b:	je     0x140001866
   14000185d:	lea    rcx,[rbp-0x41]
   140001861:	call   0x140002678
   140001866:	mov    DWORD PTR [rsp+0x30],0x40
   14000186e:	mov    DWORD PTR [rsp+0x28],esi
   140001872:	mov    DWORD PTR [rsp+0x20],edi
   140001876:	lea    r9d,[r15-0x64]
   14000187a:	lea    r8d,[r12-0x64]
   14000187f:	or     rdx,0xffffffffffffffff
   140001883:	mov    rcx,r14
   140001886:	call   QWORD PTR [rip+0x2b54]        # 0x1400043e0
   14000188c:	test   eax,eax
   14000188e:	jne    0x1400018d9
   140001890:	call   QWORD PTR [rip+0x282a]        # 0x1400040c0
   140001896:	movzx  r9d,ax
   14000189a:	or     r9d,0x80070000
   1400018a1:	test   eax,eax
   1400018a3:	cmovle r9d,eax
   1400018a7:	mov    DWORD PTR [rbp-0x49],r9d
   1400018ab:	mov    rcx,QWORD PTR [rip+0x576e]        # 0x140007020
   1400018b2:	lea    rax,[rip+0x5767]        # 0x140007020
   1400018b9:	cmp    rcx,rax
   1400018bc:	je     0x1400018d9
   1400018be:	test   BYTE PTR [rcx+0x1c],0x4
   1400018c2:	je     0x1400018d9
   1400018c4:	mov    edx,0x5f
   1400018c9:	lea    r8,[rip+0x3508]        # 0x140004dd8
   1400018d0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400018d4:	call   0x140001480
   1400018d9:	lea    rcx,[rbp-0x41]
   1400018dd:	call   0x1400026b4
   1400018e2:	lea    r8,[rbx+0xc0]
   1400018e9:	cmp    WORD PTR [r8],r13w
   1400018ed:	je     0x1400018ff
   1400018ef:	mov    edx,0x3e8
   1400018f4:	mov    rcx,rbx
   1400018f7:	call   QWORD PTR [rip+0x29f3]        # 0x1400042f0
   1400018fd:	jmp    0x14000193b
   1400018ff:	lea    rcx,[rbp-0x49]
   140001903:	call   QWORD PTR [rip+0x29df]        # 0x1400042e8
   140001909:	nop
   14000190a:	mov    edx,0x66
   14000190f:	lea    rcx,[rbp-0x49]
   140001913:	call   QWORD PTR [rip+0x29bf]        # 0x1400042d8
   140001919:	test   eax,eax
   14000191b:	je     0x140001930
   14000191d:	mov    r8,QWORD PTR [rbp-0x49]
   140001921:	mov    edx,0x3e8
   140001926:	mov    rcx,rbx
   140001929:	call   QWORD PTR [rip+0x29c1]        # 0x1400042f0
   14000192f:	nop
   140001930:	lea    rcx,[rbp-0x49]
   140001934:	call   QWORD PTR [rip+0x29a6]        # 0x1400042e0
   14000193a:	nop
   14000193b:	lea    rcx,[rbp-0x31]
   14000193f:	call   0x1400026b4
   140001944:	mov    eax,0x1
   140001949:	mov    rcx,QWORD PTR [rbp+0x27]
   14000194d:	xor    rcx,rsp
   140001950:	call   0x140003150
   140001955:	lea    r11,[rsp+0xc0]
   14000195d:	mov    rbx,QWORD PTR [r11+0x38]
   140001961:	mov    rsi,QWORD PTR [r11+0x40]
   140001965:	mov    rdi,QWORD PTR [r11+0x48]
   140001969:	mov    rsp,r11
   14000196c:	pop    r15
   14000196e:	pop    r14
   140001970:	pop    r13
   140001972:	pop    r12
   140001974:	pop    rbp
   140001975:	ret    
   140001976:	int3   
   140001977:	int3   
   140001978:	int3   
   140001979:	int3   
   14000197a:	int3   
   14000197b:	int3   
   14000197c:	int3   
   14000197d:	int3   
   14000197e:	int3   
   14000197f:	int3   
   140001980:	mov    r11,rsp
   140001983:	push   rbx
   140001984:	sub    rsp,0x40
   140001988:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   140001990:	mov    rbx,rcx
   140001993:	and    QWORD PTR [r11-0x20],0x0
   140001998:	lea    rax,[rip+0x32a9]        # 0x140004c48
   14000199f:	mov    QWORD PTR [r11-0x18],rax
   1400019a3:	lea    rax,[rip+0x5676]        # 0x140007020
   1400019aa:	cmp    QWORD PTR [rip+0x566f],rax        # 0x140007020
   1400019b1:	je     0x1400019bd
   1400019b3:	lea    rcx,[r11-0x20]
   1400019b7:	call   0x140002678
   1400019bc:	nop
   1400019bd:	mov    edx,0x1
   1400019c2:	mov    rcx,rbx
   1400019c5:	call   QWORD PTR [rip+0x2905]        # 0x1400042d0
   1400019cb:	nop
   1400019cc:	lea    rcx,[rsp+0x28]
   1400019d1:	call   0x1400026b4
   1400019d6:	add    rsp,0x40
   1400019da:	pop    rbx
   1400019db:	ret    
   1400019dc:	int3   
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	int3   
   1400019e1:	int3   
   1400019e2:	int3   
   1400019e3:	int3   
   1400019e4:	int3   
   1400019e5:	int3   
   1400019e6:	int3   
   1400019e7:	int3   
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	mov    rax,rsp
   1400019f3:	push   rsi
   1400019f4:	push   rdi
   1400019f5:	push   r12
   1400019f7:	push   r14
   1400019f9:	push   r15
   1400019fb:	sub    rsp,0x260
   140001a02:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140001a0b:	mov    QWORD PTR [rax+0x10],rbx
   140001a0f:	mov    QWORD PTR [rax+0x18],rbp
   140001a13:	mov    rax,QWORD PTR [rip+0x55ee]        # 0x140007008
   140001a1a:	xor    rax,rsp
   140001a1d:	mov    QWORD PTR [rsp+0x250],rax
   140001a25:	mov    rbx,r8
   140001a28:	mov    r15,rcx
   140001a2b:	xor    r12d,r12d
   140001a2e:	mov    QWORD PTR [rsp+0x20],r12
   140001a33:	lea    rax,[rip+0x322e]        # 0x140004c68
   140001a3a:	mov    QWORD PTR [rsp+0x28],rax
   140001a3f:	lea    rax,[rip+0x55da]        # 0x140007020
   140001a46:	cmp    QWORD PTR [rip+0x55d3],rax        # 0x140007020
   140001a4d:	je     0x140001a5a
   140001a4f:	lea    rcx,[rsp+0x20]
   140001a54:	call   0x140002678
   140001a59:	nop
   140001a5a:	cmp    QWORD PTR [rbx],r12
   140001a5d:	jne    0x140001b32
   140001a63:	mov    rsi,QWORD PTR [rbx+0x10]
   140001a67:	mov    ebx,0x1
   140001a6c:	test   rsi,rsi
   140001a6f:	je     0x140001b35
   140001a75:	mov    ebp,0x104
   140001a7a:	mov    edx,ebp
   140001a7c:	lea    rcx,[rsp+0x40]
   140001a81:	mov    edi,r12d
   140001a84:	lea    rax,[rsp+0x40]
   140001a89:	mov    r8,rsi
   140001a8c:	sub    r8,rax
   140001a8f:	lea    rax,[rdx+0x7ffffefa]
   140001a96:	test   rax,rax
   140001a99:	je     0x140001ab1
   140001a9b:	movzx  eax,WORD PTR [r8+rcx*1]
   140001aa0:	test   ax,ax
   140001aa3:	je     0x140001ab1
   140001aa5:	mov    WORD PTR [rcx],ax
   140001aa8:	add    rcx,0x2
   140001aac:	sub    rdx,rbx
   140001aaf:	jne    0x140001a8f
   140001ab1:	test   rdx,rdx
   140001ab4:	jne    0x140001abf
   140001ab6:	sub    rcx,0x2
   140001aba:	mov    edi,0x8007007a
   140001abf:	mov    WORD PTR [rcx],r12w
   140001ac3:	test   edi,edi
   140001ac5:	js     0x140001b35
   140001ac7:	lea    r14,[r15+0xc0]
   140001ace:	mov    rdx,r14
   140001ad1:	lea    rcx,[rsp+0x40]
   140001ad6:	call   0x140002160
   140001adb:	test   eax,eax
   140001add:	jne    0x140001b1b
   140001adf:	mov    rdx,r14
   140001ae2:	mov    edi,r12d
   140001ae5:	sub    rsi,r14
   140001ae8:	lea    rax,[rbp+0x7ffffefa]
   140001aef:	test   rax,rax
   140001af2:	je     0x140001b09
   140001af4:	movzx  eax,WORD PTR [rsi+rdx*1]
   140001af8:	test   ax,ax
   140001afb:	je     0x140001b09
   140001afd:	mov    WORD PTR [rdx],ax
   140001b00:	add    rdx,0x2
   140001b04:	sub    rbp,rbx
   140001b07:	jne    0x140001ae8
   140001b09:	test   rbp,rbp
   140001b0c:	jne    0x140001b17
   140001b0e:	sub    rdx,0x2
   140001b12:	mov    edi,0x8007007a
   140001b17:	mov    WORD PTR [rdx],r12w
   140001b1b:	test   edi,edi
   140001b1d:	js     0x140001b35
   140001b1f:	mov    r8,r14
   140001b22:	mov    edx,0x3e8
   140001b27:	mov    rcx,r15
   140001b2a:	call   QWORD PTR [rip+0x27c0]        # 0x1400042f0
   140001b30:	jmp    0x140001b35
   140001b32:	mov    ebx,r12d
   140001b35:	lea    rcx,[rsp+0x20]
   140001b3a:	call   0x1400026b4
   140001b3f:	mov    eax,ebx
   140001b41:	mov    rcx,QWORD PTR [rsp+0x250]
   140001b49:	xor    rcx,rsp
   140001b4c:	call   0x140003150
   140001b51:	lea    r11,[rsp+0x260]
   140001b59:	mov    rbx,QWORD PTR [r11+0x38]
   140001b5d:	mov    rbp,QWORD PTR [r11+0x40]
   140001b61:	mov    rsp,r11
   140001b64:	pop    r15
   140001b66:	pop    r14
   140001b68:	pop    r12
   140001b6a:	pop    rdi
   140001b6b:	pop    rsi
   140001b6c:	ret    
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	int3   
   140001b71:	int3   
   140001b72:	int3   
   140001b73:	int3   
   140001b74:	int3   
   140001b75:	int3   
   140001b76:	int3   
   140001b77:	int3   
   140001b78:	int3   
   140001b79:	int3   
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	mov    r11,rsp
   140001b83:	push   r15
   140001b85:	sub    rsp,0x50
   140001b89:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   140001b91:	mov    QWORD PTR [r11+0x8],rbx
   140001b95:	mov    QWORD PTR [r11+0x10],rsi
   140001b99:	mov    QWORD PTR [r11+0x18],rdi
   140001b9d:	mov    rsi,r8
   140001ba0:	mov    rdi,rcx
   140001ba3:	and    QWORD PTR [r11-0x20],0x0
   140001ba8:	lea    rax,[rip+0x30d9]        # 0x140004c88
   140001baf:	mov    QWORD PTR [r11-0x18],rax
   140001bb3:	lea    r15,[rip+0x5466]        # 0x140007020
   140001bba:	mov    rbx,QWORD PTR [rip+0x545f]        # 0x140007020
   140001bc1:	cmp    rbx,r15
   140001bc4:	je     0x140001bd6
   140001bc6:	lea    rcx,[r11-0x20]
   140001bca:	call   0x140002678
   140001bcf:	mov    rbx,QWORD PTR [rip+0x544a]        # 0x140007020
   140001bd6:	mov    ecx,0x10
   140001bdb:	call   QWORD PTR [rip+0x2847]        # 0x140004428
   140001be1:	mov    QWORD PTR [rsp+0x78],rax
   140001be6:	test   rax,rax
   140001be9:	je     0x140001c22
   140001beb:	test   rdi,rdi
   140001bee:	jne    0x140001bf4
   140001bf0:	xor    ecx,ecx
   140001bf2:	jmp    0x140001bf8
   140001bf4:	mov    rcx,QWORD PTR [rdi+0x40]
   140001bf8:	mov    QWORD PTR [rax],rcx
   140001bfb:	mov    DWORD PTR [rax+0x8],esi
   140001bfe:	and    QWORD PTR [rsp+0x28],0x0
   140001c04:	and    DWORD PTR [rsp+0x20],0x0
   140001c09:	xor    r9d,r9d
   140001c0c:	xor    r8d,r8d
   140001c0f:	mov    rdx,rax
   140001c12:	lea    rcx,[rip+0xfffffffffffff8a7]        # 0x1400014c0
   140001c19:	call   QWORD PTR [rip+0x26a9]        # 0x1400042c8
   140001c1f:	nop
   140001c20:	jmp    0x140001c43
   140001c22:	cmp    rbx,r15
   140001c25:	je     0x140001c43
   140001c27:	test   BYTE PTR [rbx+0x1c],0x4
   140001c2b:	je     0x140001c43
   140001c2d:	mov    edx,0xc
   140001c32:	lea    r8,[rip+0x308f]        # 0x140004cc8
   140001c39:	mov    rcx,QWORD PTR [rbx+0x10]
   140001c3d:	call   0x14000145c
   140001c42:	nop
   140001c43:	lea    rcx,[rsp+0x38]
   140001c48:	call   0x1400026b4
   140001c4d:	mov    eax,0x1
   140001c52:	mov    rbx,QWORD PTR [rsp+0x60]
   140001c57:	mov    rsi,QWORD PTR [rsp+0x68]
   140001c5c:	mov    rdi,QWORD PTR [rsp+0x70]
   140001c61:	add    rsp,0x50
   140001c65:	pop    r15
   140001c67:	ret    
   140001c68:	int3   
   140001c69:	int3   
   140001c6a:	int3   
   140001c6b:	int3   
   140001c6c:	int3   
   140001c6d:	int3   
   140001c6e:	int3   
   140001c6f:	int3   
   140001c70:	rex push rbp
   140001c72:	mov    rbp,rsp
   140001c75:	sub    rsp,0x40
   140001c79:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140001c81:	mov    QWORD PTR [rsp+0x50],rbx
   140001c86:	mov    QWORD PTR [rsp+0x58],rdi
   140001c8b:	mov    rbx,r8
   140001c8e:	mov    rdi,rcx
   140001c91:	and    QWORD PTR [rbp-0x18],0x0
   140001c96:	lea    rax,[rip+0x300b]        # 0x140004ca8
   140001c9d:	mov    QWORD PTR [rbp-0x10],rax
   140001ca1:	lea    rax,[rip+0x5378]        # 0x140007020
   140001ca8:	cmp    QWORD PTR [rip+0x5371],rax        # 0x140007020
   140001caf:	je     0x140001cbb
   140001cb1:	lea    rcx,[rbp-0x18]
   140001cb5:	call   0x140002678
   140001cba:	nop
   140001cbb:	lea    rcx,[rbp+0x28]
   140001cbf:	call   QWORD PTR [rip+0x2623]        # 0x1400042e8
   140001cc5:	nop
   140001cc6:	mov    edx,0x3eb
   140001ccb:	lea    rcx,[rbp+0x28]
   140001ccf:	call   QWORD PTR [rip+0x2603]        # 0x1400042d8
   140001cd5:	lea    rcx,[rbp+0x20]
   140001cd9:	call   QWORD PTR [rip+0x2609]        # 0x1400042e8
   140001cdf:	nop
   140001ce0:	mov    r8d,ebx
   140001ce3:	mov    rdx,QWORD PTR [rbp+0x28]
   140001ce7:	lea    rcx,[rbp+0x20]
   140001ceb:	call   QWORD PTR [rip+0x25cf]        # 0x1400042c0
   140001cf1:	mov    r8,QWORD PTR [rbp+0x20]
   140001cf5:	mov    edx,0x3ea
   140001cfa:	mov    rcx,rdi
   140001cfd:	call   QWORD PTR [rip+0x25ed]        # 0x1400042f0
   140001d03:	nop
   140001d04:	lea    rcx,[rbp+0x20]
   140001d08:	call   QWORD PTR [rip+0x25d2]        # 0x1400042e0
   140001d0e:	nop
   140001d0f:	lea    rcx,[rbp+0x28]
   140001d13:	call   QWORD PTR [rip+0x25c7]        # 0x1400042e0
   140001d19:	nop
   140001d1a:	lea    rcx,[rbp-0x18]
   140001d1e:	call   0x1400026b4
   140001d23:	mov    eax,0x1
   140001d28:	mov    rbx,QWORD PTR [rsp+0x50]
   140001d2d:	mov    rdi,QWORD PTR [rsp+0x58]
   140001d32:	add    rsp,0x40
   140001d36:	pop    rbp
   140001d37:	ret    
   140001d38:	int3   
   140001d39:	int3   
   140001d3a:	int3   
   140001d3b:	int3   
   140001d3c:	int3   
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	mov    rcx,QWORD PTR [rcx+0x40]
   140001d44:	mov    edx,0x1
   140001d49:	rex.W jmp QWORD PTR [rip+0x26b8]        # 0x140004408
   140001d50:	int3   
   140001d51:	int3   
   140001d52:	int3   
   140001d53:	int3   
   140001d54:	int3   
   140001d55:	int3   
   140001d56:	int3   
   140001d57:	int3   
   140001d58:	int3   
   140001d59:	int3   
   140001d5a:	int3   
   140001d5b:	int3   
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	mov    rcx,QWORD PTR [rcx+0x40]
   140001d64:	xor    edx,edx
   140001d66:	rex.W jmp QWORD PTR [rip+0x269b]        # 0x140004408
   140001d6d:	int3   
   140001d6e:	int3   
   140001d6f:	int3   
   140001d70:	int3   
   140001d71:	int3   
   140001d72:	int3   
   140001d73:	int3   
   140001d74:	mov    rax,rsp
   140001d77:	mov    QWORD PTR [rax+0x8],rbx
   140001d7b:	mov    QWORD PTR [rax+0x18],rsi
   140001d7f:	mov    QWORD PTR [rax+0x20],rdi
   140001d83:	push   rbp
   140001d84:	push   r14
   140001d86:	push   r15
   140001d88:	lea    rbp,[rax-0x388]
   140001d8f:	sub    rsp,0x470
   140001d96:	mov    rax,QWORD PTR [rip+0x526b]        # 0x140007008
   140001d9d:	xor    rax,rsp
   140001da0:	mov    QWORD PTR [rbp+0x360],rax
   140001da7:	xor    ebx,ebx
   140001da9:	lea    rax,[rip+0x2f28]        # 0x140004cd8
   140001db0:	mov    QWORD PTR [rsp+0x30],rbx
   140001db5:	lea    r14,[rip+0x5d34]        # 0x140007af0
   140001dbc:	mov    QWORD PTR [rsp+0x38],rax
   140001dc1:	mov    rdi,rdx
   140001dc4:	lea    rax,[rip+0x5255]        # 0x140007020
   140001dcb:	cmp    QWORD PTR [rip+0x524e],rax        # 0x140007020
   140001dd2:	je     0x140001dde
   140001dd4:	lea    rcx,[rsp+0x30]
   140001dd9:	call   0x140002678
   140001dde:	mov    esi,0x208
   140001de3:	mov    WORD PTR [rsp+0x40],bx
   140001de8:	mov    r8d,esi
   140001deb:	lea    rcx,[rsp+0x42]
   140001df0:	xor    edx,edx
   140001df2:	call   0x1400038f2
   140001df7:	mov    r8d,esi
   140001dfa:	mov    WORD PTR [rbp+0x150],bx
   140001e01:	xor    edx,edx
   140001e03:	lea    rcx,[rbp+0x152]
   140001e0a:	call   0x1400038f2
   140001e0f:	test   r14,r14
   140001e12:	je     0x140001eda
   140001e18:	test   rdi,rdi
   140001e1b:	je     0x140001eda
   140001e21:	mov    rcx,rdi
   140001e24:	call   QWORD PTR [rip+0x226e]        # 0x140004098
   140001e2a:	mov    rcx,r14
   140001e2d:	mov    r15d,eax
   140001e30:	call   QWORD PTR [rip+0x2262]        # 0x140004098
   140001e36:	mov    esi,eax
   140001e38:	test   r15d,r15d
   140001e3b:	je     0x140001eda
   140001e41:	test   eax,eax
   140001e43:	je     0x140001eda
   140001e49:	mov    edx,0x7e
   140001e4e:	mov    rcx,r14
   140001e51:	call   QWORD PTR [rip+0x2579]        # 0x1400043d0
   140001e57:	test   rax,rax
   140001e5a:	je     0x140001e7b
   140001e5c:	mov    r8d,0x104
   140001e62:	lea    rdx,[rsp+0x40]
   140001e67:	mov    rcx,r14
   140001e6a:	call   QWORD PTR [rip+0x2230]        # 0x1400040a0
   140001e70:	mov    esi,eax
   140001e72:	test   eax,eax
   140001e74:	je     0x140001eda
   140001e76:	lea    r14,[rsp+0x40]
   140001e7b:	mov    edx,0x7e
   140001e80:	mov    rcx,rdi
   140001e83:	call   QWORD PTR [rip+0x2547]        # 0x1400043d0
   140001e89:	test   rax,rax
   140001e8c:	je     0x140001eb2
   140001e8e:	mov    r8d,0x104
   140001e94:	lea    rdx,[rbp+0x150]
   140001e9b:	mov    rcx,rdi
   140001e9e:	call   QWORD PTR [rip+0x21fc]        # 0x1400040a0
   140001ea4:	mov    r15d,eax
   140001ea7:	test   eax,eax
   140001ea9:	je     0x140001eda
   140001eab:	lea    rdi,[rbp+0x150]
   140001eb2:	cmp    r15d,esi
   140001eb5:	jbe    0x140001eda
   140001eb7:	mov    edx,0x1
   140001ebc:	mov    DWORD PTR [rsp+0x28],esi
   140001ec0:	mov    r9d,esi
   140001ec3:	mov    QWORD PTR [rsp+0x20],rdi
   140001ec8:	mov    r8,r14
   140001ecb:	lea    ecx,[rdx+0x7e]
   140001ece:	call   QWORD PTR [rip+0x21d4]        # 0x1400040a8
   140001ed4:	cmp    eax,0x2
   140001ed7:	sete   bl
   140001eda:	lea    rcx,[rsp+0x30]
   140001edf:	call   0x1400026b4
   140001ee4:	mov    eax,ebx
   140001ee6:	mov    rcx,QWORD PTR [rbp+0x360]
   140001eed:	xor    rcx,rsp
   140001ef0:	call   0x140003150
   140001ef5:	lea    r11,[rsp+0x470]
   140001efd:	mov    rbx,QWORD PTR [r11+0x20]
   140001f01:	mov    rsi,QWORD PTR [r11+0x30]
   140001f05:	mov    rdi,QWORD PTR [r11+0x38]
   140001f09:	mov    rsp,r11
   140001f0c:	pop    r15
   140001f0e:	pop    r14
   140001f10:	pop    rbp
   140001f11:	ret    
   140001f12:	int3   
   140001f13:	int3   
   140001f14:	int3   
   140001f15:	int3   
   140001f16:	int3   
   140001f17:	int3   
   140001f18:	mov    QWORD PTR [rsp+0x8],rbx
   140001f1d:	mov    QWORD PTR [rsp+0x10],rbp
   140001f22:	push   rsi
   140001f23:	push   rdi
   140001f24:	push   r12
   140001f26:	push   r14
   140001f28:	push   r15
   140001f2a:	sub    rsp,0x250
   140001f31:	mov    rax,QWORD PTR [rip+0x50d0]        # 0x140007008
   140001f38:	xor    rax,rsp
   140001f3b:	mov    QWORD PTR [rsp+0x240],rax
   140001f43:	xor    r15d,r15d
   140001f46:	lea    rax,[rip+0x2da3]        # 0x140004cf0
   140001f4d:	mov    QWORD PTR [rsp+0x20],r15
   140001f52:	mov    rdi,r9
   140001f55:	mov    QWORD PTR [rsp+0x28],rax
   140001f5a:	mov    r14,r8
   140001f5d:	mov    rcx,QWORD PTR [rip+0x50bc]        # 0x140007020
   140001f64:	lea    rbp,[rip+0x50b5]        # 0x140007020
   140001f6b:	cmp    rcx,rbp
   140001f6e:	je     0x140001f81
   140001f70:	lea    rcx,[rsp+0x20]
   140001f75:	call   0x140002678
   140001f7a:	mov    rcx,QWORD PTR [rip+0x509f]        # 0x140007020
   140001f81:	lea    r12,[rip+0x5b68]        # 0x140007af0
   140001f88:	mov    esi,0x1
   140001f8d:	test   r12,r12
   140001f90:	je     0x1400020fe
   140001f96:	lea    rbx,[rip+0x5943]        # 0x1400078e0
   140001f9d:	test   rbx,rbx
   140001fa0:	je     0x1400020fe
   140001fa6:	test   r14,r14
   140001fa9:	je     0x1400020fe
   140001faf:	test   rdi,rdi
   140001fb2:	je     0x1400020fe
   140001fb8:	mov    rcx,r12
   140001fbb:	call   QWORD PTR [rip+0x20d7]        # 0x140004098
   140001fc1:	test   eax,eax
   140001fc3:	je     0x1400020e5
   140001fc9:	mov    rcx,rbx
   140001fcc:	call   QWORD PTR [rip+0x20c6]        # 0x140004098
   140001fd2:	test   eax,eax
   140001fd4:	je     0x1400020e5
   140001fda:	mov    rcx,r14
   140001fdd:	call   QWORD PTR [rip+0x20b5]        # 0x140004098
   140001fe3:	test   eax,eax
   140001fe5:	je     0x1400020e5
   140001feb:	mov    rdx,r14
   140001fee:	mov    WORD PTR [rdi],r15w
   140001ff2:	call   0x140001d74
   140001ff7:	test   eax,eax
   140001ff9:	je     0x14000211e
   140001fff:	mov    ecx,0x104
   140002004:	mov    rax,rdi
   140002007:	sub    rbx,rdi
   14000200a:	test   rcx,rcx
   14000200d:	je     0x140002029
   14000200f:	movzx  edx,WORD PTR [rbx+rax*1]
   140002013:	test   dx,dx
   140002016:	je     0x140002024
   140002018:	mov    WORD PTR [rax],dx
   14000201b:	add    rax,0x2
   14000201f:	sub    rcx,rsi
   140002022:	jne    0x14000200a
   140002024:	test   rcx,rcx
   140002027:	jne    0x14000202d
   140002029:	sub    rax,0x2
   14000202d:	mov    rcx,rdi
   140002030:	mov    WORD PTR [rax],r15w
   140002034:	call   QWORD PTR [rip+0x237e]        # 0x1400043b8
   14000203a:	mov    rcx,r12
   14000203d:	call   QWORD PTR [rip+0x2055]        # 0x140004098
   140002043:	movsxd rcx,eax
   140002046:	lea    rbp,[r14+rcx*2]
   14000204a:	cmp    WORD PTR [rbp+0x0],0x5c
   14000204f:	jne    0x14000205d
   140002051:	mov    rcx,rbp
   140002054:	call   QWORD PTR [rip+0x23a6]        # 0x140004400
   14000205a:	mov    rbp,rax
   14000205d:	mov    rcx,rdi
   140002060:	call   QWORD PTR [rip+0x2032]        # 0x140004098
   140002066:	mov    rcx,rbp
   140002069:	mov    ebx,eax
   14000206b:	call   QWORD PTR [rip+0x2027]        # 0x140004098
   140002071:	add    ebx,eax
   140002073:	mov    rcx,rdi
   140002076:	cmp    ebx,0x104
   14000207c:	jge    0x140002093
   14000207e:	mov    r8,rbp
   140002081:	call   0x140002514
   140002086:	test   eax,eax
   140002088:	jns    0x140002121
   14000208e:	jmp    0x14000211e
   140002093:	call   QWORD PTR [rip+0x1fff]        # 0x140004098
   140002099:	mov    ebx,0x103
   14000209e:	sub    ebx,eax
   1400020a0:	test   ebx,ebx
   1400020a2:	jle    0x140002121
   1400020a4:	xor    edx,edx
   1400020a6:	mov    WORD PTR [rsp+0x30],r15w
   1400020ac:	mov    r8d,0x206
   1400020b2:	lea    rcx,[rsp+0x32]
   1400020b7:	call   0x1400038f2
   1400020bc:	xor    r9d,r9d
   1400020bf:	lea    rcx,[rsp+0x30]
   1400020c4:	mov    r8d,ebx
   1400020c7:	mov    rdx,rbp
   1400020ca:	call   QWORD PTR [rip+0x22f0]        # 0x1400043c0
   1400020d0:	lea    r8,[rsp+0x30]
   1400020d5:	mov    rcx,rdi
   1400020d8:	call   0x140002514
   1400020dd:	test   eax,eax
   1400020df:	cmovs  esi,r15d
   1400020e3:	jmp    0x140002121
   1400020e5:	mov    rcx,QWORD PTR [rip+0x4f34]        # 0x140007020
   1400020ec:	cmp    rcx,rbp
   1400020ef:	je     0x14000211e
   1400020f1:	test   BYTE PTR [rcx+0x1c],0x8
   1400020f5:	je     0x14000211e
   1400020f7:	mov    edx,0x10
   1400020fc:	jmp    0x14000210e
   1400020fe:	cmp    rcx,rbp
   140002101:	je     0x14000211e
   140002103:	test   BYTE PTR [rcx+0x1c],0x8
   140002107:	je     0x14000211e
   140002109:	mov    edx,0xf
   14000210e:	mov    rcx,QWORD PTR [rcx+0x10]
   140002112:	lea    r8,[rip+0x2c17]        # 0x140004d30
   140002119:	call   0x14000145c
   14000211e:	mov    esi,r15d
   140002121:	lea    rcx,[rsp+0x20]
   140002126:	call   0x1400026b4
   14000212b:	mov    eax,esi
   14000212d:	mov    rcx,QWORD PTR [rsp+0x240]
   140002135:	xor    rcx,rsp
   140002138:	call   0x140003150
   14000213d:	lea    r11,[rsp+0x250]
   140002145:	mov    rbx,QWORD PTR [r11+0x30]
   140002149:	mov    rbp,QWORD PTR [r11+0x38]
   14000214d:	mov    rsp,r11
   140002150:	pop    r15
   140002152:	pop    r14
   140002154:	pop    r12
   140002156:	pop    rdi
   140002157:	pop    rsi
   140002158:	ret    
   140002159:	int3   
   14000215a:	int3   
   14000215b:	int3   
   14000215c:	int3   
   14000215d:	int3   
   14000215e:	int3   
   14000215f:	int3   
   140002160:	mov    rax,rsp
   140002163:	push   rbp
   140002164:	push   rsi
   140002165:	push   rdi
   140002166:	push   r12
   140002168:	push   r13
   14000216a:	push   r14
   14000216c:	push   r15
   14000216e:	lea    rbp,[rsp-0x70]
   140002173:	sub    rsp,0x170
   14000217a:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140002183:	mov    QWORD PTR [rax+0x8],rbx
   140002187:	mov    r12,rdx
   14000218a:	mov    r13,rcx
   14000218d:	xor    edi,edi
   14000218f:	mov    QWORD PTR [rsp+0x40],rdi
   140002194:	lea    rax,[rip+0x2b7d]        # 0x140004d18
   14000219b:	mov    QWORD PTR [rsp+0x48],rax
   1400021a0:	lea    rbx,[rip+0x4e79]        # 0x140007020
   1400021a7:	cmp    QWORD PTR [rip+0x4e72],rbx        # 0x140007020
   1400021ae:	je     0x1400021bb
   1400021b0:	lea    rcx,[rsp+0x40]
   1400021b5:	call   0x140002678
   1400021ba:	nop
   1400021bb:	mov    r14d,0x5
   1400021c1:	cmp    WORD PTR [rip+0x5928],di        # 0x140007af0
   1400021c8:	jne    0x140002221
   1400021ca:	lea    rax,[rip+0x591f]        # 0x140007af0
   1400021d1:	mov    QWORD PTR [rsp+0x20],rax
   1400021d6:	xor    r9d,r9d
   1400021d9:	xor    r8d,r8d
   1400021dc:	mov    edx,r14d
   1400021df:	xor    ecx,ecx
   1400021e1:	call   QWORD PTR [rip+0x21a9]        # 0x140004390
   1400021e7:	test   eax,eax
   1400021e9:	jns    0x140002221
   1400021eb:	mov    rcx,QWORD PTR [rip+0x4e2e]        # 0x140007020
   1400021f2:	cmp    rcx,rbx
   1400021f5:	je     0x1400024e5
   1400021fb:	test   BYTE PTR [rcx+0x1c],0x4
   1400021ff:	je     0x1400024e5
   140002205:	lea    edx,[r14+0xd]
   140002209:	mov    r9d,eax
   14000220c:	lea    r8,[rip+0x2b1d]        # 0x140004d30
   140002213:	mov    rcx,QWORD PTR [rcx+0x10]
   140002217:	call   0x140001480
   14000221c:	jmp    0x1400024e5
   140002221:	cmp    WORD PTR [rip+0x56b8],di        # 0x1400078e0
   140002228:	jne    0x1400024d8
   14000222e:	mov    QWORD PTR [rbp+0xc8],rdi
   140002235:	mov    QWORD PTR [rbp+0xc0],rdi
   14000223c:	mov    QWORD PTR [rsp+0x30],rdi
   140002241:	mov    QWORD PTR [rsp+0x38],rdi
   140002246:	lea    rcx,[rbp+0xc8]
   14000224d:	call   QWORD PTR [rip+0x2145]        # 0x140004398
   140002253:	mov    esi,eax
   140002255:	test   eax,eax
   140002257:	jns    0x14000227d
   140002259:	mov    rcx,QWORD PTR [rip+0x4dc0]        # 0x140007020
   140002260:	cmp    rcx,rbx
   140002263:	je     0x14000242e
   140002269:	test   BYTE PTR [rcx+0x1c],0x4
   14000226d:	je     0x14000242e
   140002273:	mov    edx,0x13
   140002278:	jmp    0x14000241b
   14000227d:	lea    rcx,[rsp+0x30]
   140002282:	call   QWORD PTR [rip+0x2118]        # 0x1400043a0
   140002288:	mov    esi,eax
   14000228a:	test   eax,eax
   14000228c:	jns    0x1400022b2
   14000228e:	mov    rcx,QWORD PTR [rip+0x4d8b]        # 0x140007020
   140002295:	cmp    rcx,rbx
   140002298:	je     0x14000242e
   14000229e:	test   BYTE PTR [rcx+0x1c],0x4
   1400022a2:	je     0x14000242e
   1400022a8:	mov    edx,0x14
   1400022ad:	jmp    0x14000241b
   1400022b2:	lea    rax,[rbp+0xc0]
   1400022b9:	mov    QWORD PTR [rsp+0x20],rax
   1400022be:	xor    r9d,r9d
   1400022c1:	xor    r8d,r8d
   1400022c4:	mov    edx,r14d
   1400022c7:	xor    ecx,ecx
   1400022c9:	call   QWORD PTR [rip+0x20d9]        # 0x1400043a8
   1400022cf:	mov    esi,eax
   1400022d1:	test   eax,eax
   1400022d3:	jns    0x1400022f9
   1400022d5:	mov    rcx,QWORD PTR [rip+0x4d44]        # 0x140007020
   1400022dc:	cmp    rcx,rbx
   1400022df:	je     0x14000242e
   1400022e5:	test   BYTE PTR [rcx+0x1c],0x4
   1400022e9:	je     0x14000242e
   1400022ef:	mov    edx,0x15
   1400022f4:	jmp    0x14000241b
   1400022f9:	mov    r14,QWORD PTR [rsp+0x30]
   1400022fe:	test   r14,r14
   140002301:	je     0x14000237d
   140002303:	mov    r15,QWORD PTR [rbp+0xc0]
   14000230a:	test   r15,r15
   14000230d:	je     0x14000237d
   14000230f:	mov    rax,QWORD PTR [r14]
   140002312:	mov    rbx,QWORD PTR [rax+0x28]
   140002316:	mov    rcx,rbx
   140002319:	call   QWORD PTR [rip+0x21e9]        # 0x140004508
   14000231f:	lea    rax,[rsp+0x38]
   140002324:	mov    QWORD PTR [rsp+0x20],rax
   140002329:	lea    r9,[rip+0x2a10]        # 0x140004d40
   140002330:	xor    r8d,r8d
   140002333:	mov    rdx,r15
   140002336:	mov    rcx,r14
   140002339:	call   rbx
   14000233b:	mov    esi,eax
   14000233d:	test   eax,eax
   14000233f:	jns    0x140002374
   140002341:	mov    rcx,QWORD PTR [rip+0x4cd8]        # 0x140007020
   140002348:	lea    r15,[rip+0x4cd1]        # 0x140007020
   14000234f:	cmp    rcx,r15
   140002352:	je     0x140002384
   140002354:	test   BYTE PTR [rcx+0x1c],0x4
   140002358:	je     0x140002384
   14000235a:	mov    edx,0x16
   14000235f:	mov    r9d,eax
   140002362:	lea    r8,[rip+0x29c7]        # 0x140004d30
   140002369:	mov    rcx,QWORD PTR [rcx+0x10]
   14000236d:	call   0x140001480
   140002372:	jmp    0x140002384
   140002374:	lea    r15,[rip+0x4ca5]        # 0x140007020
   14000237b:	jmp    0x14000238c
   14000237d:	lea    r15,[rip+0x4c9c]        # 0x140007020
   140002384:	test   esi,esi
   140002386:	js     0x14000242e
   14000238c:	cmp    QWORD PTR [rsp+0x38],rdi
   140002391:	je     0x14000242e
   140002397:	mov    r14,QWORD PTR [rsp+0x30]
   14000239c:	mov    rax,QWORD PTR [r14]
   14000239f:	mov    rbx,QWORD PTR [rax+0x58]
   1400023a3:	mov    rcx,rbx
   1400023a6:	call   QWORD PTR [rip+0x215c]        # 0x140004508
   1400023ac:	lea    r9,[rsp+0x60]
   1400023b1:	xor    r8d,r8d
   1400023b4:	mov    rdx,QWORD PTR [rbp+0xc0]
   1400023bb:	mov    rcx,r14
   1400023be:	call   rbx
   1400023c0:	mov    esi,eax
   1400023c2:	test   eax,eax
   1400023c4:	jns    0x1400023df
   1400023c6:	mov    rcx,QWORD PTR [rip+0x4c53]        # 0x140007020
   1400023cd:	cmp    rcx,r15
   1400023d0:	je     0x14000242e
   1400023d2:	test   BYTE PTR [rcx+0x1c],0x4
   1400023d6:	je     0x14000242e
   1400023d8:	mov    edx,0x17
   1400023dd:	jmp    0x14000241b
   1400023df:	mov    r9d,0x104
   1400023e5:	lea    r8,[rip+0x54f4]        # 0x1400078e0
   1400023ec:	mov    rdx,QWORD PTR [rbp+0xc0]
   1400023f3:	lea    rcx,[rsp+0x60]
   1400023f8:	call   QWORD PTR [rip+0x1fca]        # 0x1400043c8
   1400023fe:	mov    esi,eax
   140002400:	test   eax,eax
   140002402:	jns    0x14000242e
   140002404:	mov    rcx,QWORD PTR [rip+0x4c15]        # 0x140007020
   14000240b:	cmp    rcx,r15
   14000240e:	je     0x14000242e
   140002410:	test   BYTE PTR [rcx+0x1c],0x4
   140002414:	je     0x14000242e
   140002416:	mov    edx,0x18
   14000241b:	mov    r9d,eax
   14000241e:	lea    r8,[rip+0x290b]        # 0x140004d30
   140002425:	mov    rcx,QWORD PTR [rcx+0x10]
   140002429:	call   0x140001480
   14000242e:	mov    r14,QWORD PTR [rbp+0xc8]
   140002435:	test   r14,r14
   140002438:	je     0x140002488
   14000243a:	mov    r15,QWORD PTR [rbp+0xc0]
   140002441:	test   r15,r15
   140002444:	je     0x14000246c
   140002446:	mov    rax,QWORD PTR [r14]
   140002449:	mov    rbx,QWORD PTR [rax+0x28]
   14000244d:	mov    rcx,rbx
   140002450:	call   QWORD PTR [rip+0x20b2]        # 0x140004508
   140002456:	mov    rdx,r15
   140002459:	mov    rcx,r14
   14000245c:	call   rbx
   14000245e:	mov    QWORD PTR [rbp+0xc0],rdi
   140002465:	mov    r14,QWORD PTR [rbp+0xc8]
   14000246c:	mov    rax,QWORD PTR [r14]
   14000246f:	mov    rbx,QWORD PTR [rax+0x10]
   140002473:	mov    rcx,rbx
   140002476:	call   QWORD PTR [rip+0x208c]        # 0x140004508
   14000247c:	mov    rcx,r14
   14000247f:	call   rbx
   140002481:	mov    QWORD PTR [rbp+0xc8],rdi
   140002488:	mov    r14,QWORD PTR [rsp+0x38]
   14000248d:	test   r14,r14
   140002490:	je     0x1400024ac
   140002492:	mov    rax,QWORD PTR [r14]
   140002495:	mov    rbx,QWORD PTR [rax+0x10]
   140002499:	mov    rcx,rbx
   14000249c:	call   QWORD PTR [rip+0x2066]        # 0x140004508
   1400024a2:	mov    rcx,r14
   1400024a5:	call   rbx
   1400024a7:	mov    QWORD PTR [rsp+0x38],rdi
   1400024ac:	mov    r14,QWORD PTR [rsp+0x30]
   1400024b1:	test   r14,r14
   1400024b4:	je     0x1400024cb
   1400024b6:	mov    rax,QWORD PTR [r14]
   1400024b9:	mov    rbx,QWORD PTR [rax+0x10]
   1400024bd:	mov    rcx,rbx
   1400024c0:	call   QWORD PTR [rip+0x2042]        # 0x140004508
   1400024c6:	mov    rcx,r14
   1400024c9:	call   rbx
   1400024cb:	test   esi,esi
   1400024cd:	jns    0x1400024d8
   1400024cf:	cmp    di,WORD PTR [rip+0x540a]        # 0x1400078e0
   1400024d6:	je     0x1400024e5
   1400024d8:	mov    r9,r12
   1400024db:	mov    r8,r13
   1400024de:	call   0x140001f18
   1400024e3:	mov    edi,eax
   1400024e5:	lea    rcx,[rsp+0x40]
   1400024ea:	call   0x1400026b4
   1400024ef:	mov    eax,edi
   1400024f1:	mov    rbx,QWORD PTR [rsp+0x1b0]
   1400024f9:	add    rsp,0x170
   140002500:	pop    r15
   140002502:	pop    r14
   140002504:	pop    r13
   140002506:	pop    r12
   140002508:	pop    rdi
   140002509:	pop    rsi
   14000250a:	pop    rbp
   14000250b:	ret    
   14000250c:	int3   
   14000250d:	int3   
   14000250e:	int3   
   14000250f:	int3   
   140002510:	int3   
   140002511:	int3   
   140002512:	int3   
   140002513:	int3   
   140002514:	mov    edx,0x104
   140002519:	mov    r10,r8
   14000251c:	mov    eax,edx
   14000251e:	mov    r9,rcx
   140002521:	xor    r11d,r11d
   140002524:	cmp    WORD PTR [r9],r11w
   140002528:	je     0x140002534
   14000252a:	add    r9,0x2
   14000252e:	sub    rax,0x1
   140002532:	jne    0x140002524
   140002534:	test   rax,rax
   140002537:	je     0x14000258d
   140002539:	mov    r8,rdx
   14000253c:	sub    r8,rax
   14000253f:	lea    rax,[rcx+r8*2]
   140002543:	mov    ecx,r11d
   140002546:	sub    rdx,r8
   140002549:	je     0x14000257e
   14000254b:	add    r8,0x7ffffefa
   140002552:	add    r8,rdx
   140002555:	sub    r10,rax
   140002558:	test   r8,r8
   14000255b:	je     0x140002579
   14000255d:	movzx  r9d,WORD PTR [r10+rax*1]
   140002562:	test   r9w,r9w
   140002566:	je     0x140002579
   140002568:	mov    WORD PTR [rax],r9w
   14000256c:	dec    r8
   14000256f:	add    rax,0x2
   140002573:	sub    rdx,0x1
   140002577:	jne    0x140002558
   140002579:	test   rdx,rdx
   14000257c:	jne    0x140002587
   14000257e:	sub    rax,0x2
   140002582:	mov    ecx,0x8007007a
   140002587:	mov    WORD PTR [rax],r11w
   14000258b:	jmp    0x140002592
   14000258d:	mov    ecx,0x80070057
   140002592:	mov    eax,ecx
   140002594:	ret    
   140002595:	int3   
   140002596:	int3   
   140002597:	int3   
   140002598:	int3   
   140002599:	int3   
   14000259a:	int3   
   14000259b:	int3   
   14000259c:	sub    rsp,0x48
   1400025a0:	test   r9,r9
   1400025a3:	je     0x1400025b8
   1400025a5:	or     r8,0xffffffffffffffff
   1400025a9:	inc    r8
   1400025ac:	cmp    BYTE PTR [r9+r8*1],0x0
   1400025b1:	jne    0x1400025a9
   1400025b3:	inc    r8
   1400025b6:	jmp    0x1400025be
   1400025b8:	mov    r8d,0x5
   1400025be:	test   r9,r9
   1400025c1:	lea    rax,[rip+0x2788]        # 0x140004d50
   1400025c8:	cmovne rax,r9
   1400025cc:	and    QWORD PTR [rsp+0x30],0x0
   1400025d2:	mov    QWORD PTR [rsp+0x28],r8
   1400025d7:	lea    r8,[rip+0x27fa]        # 0x140004dd8
   1400025de:	movzx  r9d,dx
   1400025e2:	mov    edx,0x2b
   1400025e7:	mov    QWORD PTR [rsp+0x20],rax
   1400025ec:	call   QWORD PTR [rip+0x1efe]        # 0x1400044f0
   1400025f2:	add    rsp,0x48
   1400025f6:	ret    
   1400025f7:	int3   
   1400025f8:	int3   
   1400025f9:	int3   
   1400025fa:	int3   
   1400025fb:	int3   
   1400025fc:	int3   
   1400025fd:	int3   
   1400025fe:	int3   
   1400025ff:	int3   
   140002600:	sub    rsp,0x58
   140002604:	test   r9,r9
   140002607:	je     0x14000261c
   140002609:	or     rdx,0xffffffffffffffff
   14000260d:	inc    rdx
   140002610:	cmp    BYTE PTR [r9+rdx*1],0x0
   140002615:	jne    0x14000260d
   140002617:	inc    rdx
   14000261a:	jmp    0x140002621
   14000261c:	mov    edx,0x5
   140002621:	test   r9,r9
   140002624:	lea    r8,[rsp+0x80]
   14000262c:	lea    rax,[rip+0x271d]        # 0x140004d50
   140002633:	cmovne rax,r9
   140002637:	and    QWORD PTR [rsp+0x40],0x0
   14000263d:	mov    QWORD PTR [rsp+0x38],0x4
   140002646:	mov    r9d,0xb
   14000264c:	mov    QWORD PTR [rsp+0x30],r8
   140002651:	lea    r8,[rip+0x2780]        # 0x140004dd8
   140002658:	mov    QWORD PTR [rsp+0x28],rdx
   14000265d:	mov    QWORD PTR [rsp+0x20],rax
   140002662:	lea    edx,[r9+0x20]
   140002666:	call   QWORD PTR [rip+0x1e84]        # 0x1400044f0
   14000266c:	add    rsp,0x58
   140002670:	ret    
   140002671:	int3   
   140002672:	int3   
   140002673:	int3   
   140002674:	int3   
   140002675:	int3   
   140002676:	int3   
   140002677:	int3   
   140002678:	rex push rbx
   14000267a:	sub    rsp,0x20
   14000267e:	mov    rbx,rcx
   140002681:	mov    rcx,QWORD PTR [rip+0x4998]        # 0x140007020
   140002688:	test   DWORD PTR [rcx+0x1c],0x400
   14000268f:	je     0x1400026a3
   140002691:	mov    r9,QWORD PTR [rbx+0x8]
   140002695:	mov    edx,0xa
   14000269a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000269e:	call   0x14000259c
   1400026a3:	mov    rax,rbx
   1400026a6:	add    rsp,0x20
   1400026aa:	pop    rbx
   1400026ab:	ret    
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	int3   
   1400026b1:	int3   
   1400026b2:	int3   
   1400026b3:	int3   
   1400026b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400026b9:	push   rdi
   1400026ba:	sub    rsp,0x30
   1400026be:	mov    rax,QWORD PTR [rcx]
   1400026c1:	lea    rdi,[rip+0x4958]        # 0x140007020
   1400026c8:	mov    rbx,rcx
   1400026cb:	test   rax,rax
   1400026ce:	je     0x1400026f9
   1400026d0:	mov    edx,DWORD PTR [rax]
   1400026d2:	test   edx,edx
   1400026d4:	jns    0x1400026f9
   1400026d6:	mov    rcx,QWORD PTR [rip+0x4943]        # 0x140007020
   1400026dd:	cmp    rcx,rdi
   1400026e0:	je     0x140002720
   1400026e2:	test   BYTE PTR [rcx+0x1c],0x4
   1400026e6:	je     0x140002700
   1400026e8:	mov    r9,QWORD PTR [rbx+0x8]
   1400026ec:	mov    rcx,QWORD PTR [rcx+0x10]
   1400026f0:	mov    DWORD PTR [rsp+0x20],edx
   1400026f4:	call   0x140002600
   1400026f9:	mov    rcx,QWORD PTR [rip+0x4920]        # 0x140007020
   140002700:	cmp    rcx,rdi
   140002703:	je     0x140002720
   140002705:	test   DWORD PTR [rcx+0x1c],0x400
   14000270c:	je     0x140002720
   14000270e:	mov    r9,QWORD PTR [rbx+0x8]
   140002712:	mov    edx,0xc
   140002717:	mov    rcx,QWORD PTR [rcx+0x10]
   14000271b:	call   0x14000259c
   140002720:	mov    rbx,QWORD PTR [rsp+0x40]
   140002725:	add    rsp,0x30
   140002729:	pop    rdi
   14000272a:	ret    
   14000272b:	int3   
   14000272c:	int3   
   14000272d:	int3   
   14000272e:	int3   
   14000272f:	int3   
   140002730:	int3   
   140002731:	int3   
   140002732:	int3   
   140002733:	int3   
   140002734:	mov    r11,rsp
   140002737:	mov    QWORD PTR [r11+0x8],rbx
   14000273b:	mov    DWORD PTR [rsp+0x10],edx
   14000273f:	push   rdi
   140002740:	sub    rsp,0x30
   140002744:	and    DWORD PTR [rsp+0x48],0x0
   140002749:	lea    rax,[r11+0x10]
   14000274d:	mov    QWORD PTR [r11-0x18],rax
   140002751:	mov    rbx,rcx
   140002754:	lea    rax,[rip+0x2615]        # 0x140004d70
   14000275b:	mov    QWORD PTR [r11-0x10],rax
   14000275f:	lea    rdi,[rip+0x48ba]        # 0x140007020
   140002766:	cmp    QWORD PTR [rip+0x48b3],rdi        # 0x140007020
   14000276d:	je     0x140002778
   14000276f:	lea    rcx,[r11-0x18]
   140002773:	call   0x140002678
   140002778:	xor    r9d,r9d
   14000277b:	xor    r8d,r8d
   14000277e:	mov    rcx,rbx
   140002781:	lea    edx,[r9+0x10]
   140002785:	call   QWORD PTR [rip+0x1c65]        # 0x1400043f0
   14000278b:	mov    ebx,eax
   14000278d:	test   eax,eax
   14000278f:	jne    0x1400027d2
   140002791:	call   QWORD PTR [rip+0x1929]        # 0x1400040c0
   140002797:	movzx  r9d,ax
   14000279b:	or     r9d,0x80070000
   1400027a2:	test   eax,eax
   1400027a4:	cmovle r9d,eax
   1400027a8:	mov    DWORD PTR [rsp+0x48],r9d
   1400027ad:	mov    rcx,QWORD PTR [rip+0x486c]        # 0x140007020
   1400027b4:	cmp    rcx,rdi
   1400027b7:	je     0x1400027d2
   1400027b9:	test   BYTE PTR [rcx+0x1c],0x4
   1400027bd:	je     0x1400027d2
   1400027bf:	mov    rcx,QWORD PTR [rcx+0x10]
   1400027c3:	lea    edx,[rbx+0x3c]
   1400027c6:	lea    r8,[rip+0x260b]        # 0x140004dd8
   1400027cd:	call   0x140001480
   1400027d2:	lea    rcx,[rsp+0x20]
   1400027d7:	call   0x1400026b4
   1400027dc:	mov    eax,ebx
   1400027de:	mov    rbx,QWORD PTR [rsp+0x40]
   1400027e3:	add    rsp,0x30
   1400027e7:	pop    rdi
   1400027e8:	ret    
   1400027e9:	int3   
   1400027ea:	int3   
   1400027eb:	int3   
   1400027ec:	int3   
   1400027ed:	int3   
   1400027ee:	int3   
   1400027ef:	int3   
   1400027f0:	mov    r11,rsp
   1400027f3:	mov    QWORD PTR [r11+0x8],rbx
   1400027f7:	mov    QWORD PTR [r11+0x10],rdx
   1400027fb:	push   rdi
   1400027fc:	sub    rsp,0x30
   140002800:	and    DWORD PTR [rsp+0x48],0x0
   140002805:	lea    rax,[r11+0x10]
   140002809:	mov    QWORD PTR [r11-0x18],rax
   14000280d:	mov    rbx,rcx
   140002810:	lea    rax,[rip+0x2571]        # 0x140004d88
   140002817:	mov    QWORD PTR [r11-0x10],rax
   14000281b:	lea    rdi,[rip+0x47fe]        # 0x140007020
   140002822:	cmp    QWORD PTR [rip+0x47f7],rdi        # 0x140007020
   140002829:	je     0x140002834
   14000282b:	lea    rcx,[r11-0x18]
   14000282f:	call   0x140002678
   140002834:	mov    rcx,rbx
   140002837:	call   QWORD PTR [rip+0x187b]        # 0x1400040b8
   14000283d:	mov    ebx,eax
   14000283f:	test   eax,eax
   140002841:	jne    0x140002884
   140002843:	call   QWORD PTR [rip+0x1877]        # 0x1400040c0
   140002849:	movzx  r9d,ax
   14000284d:	or     r9d,0x80070000
   140002854:	test   eax,eax
   140002856:	cmovle r9d,eax
   14000285a:	mov    DWORD PTR [rsp+0x48],r9d
   14000285f:	mov    rcx,QWORD PTR [rip+0x47ba]        # 0x140007020
   140002866:	cmp    rcx,rdi
   140002869:	je     0x140002884
   14000286b:	test   BYTE PTR [rcx+0x1c],0x4
   14000286f:	je     0x140002884
   140002871:	mov    rcx,QWORD PTR [rcx+0x10]
   140002875:	lea    edx,[rbx+0x4b]
   140002878:	lea    r8,[rip+0x2559]        # 0x140004dd8
   14000287f:	call   0x140001480
   140002884:	lea    rcx,[rsp+0x20]
   140002889:	call   0x1400026b4
   14000288e:	mov    eax,ebx
   140002890:	mov    rbx,QWORD PTR [rsp+0x40]
   140002895:	add    rsp,0x30
   140002899:	pop    rdi
   14000289a:	ret    
   14000289b:	int3   
   14000289c:	int3   
   14000289d:	int3   
   14000289e:	int3   
   14000289f:	int3   
   1400028a0:	int3   
   1400028a1:	int3   
   1400028a2:	int3   
   1400028a3:	int3   
   1400028a4:	mov    r11,rsp
   1400028a7:	mov    QWORD PTR [r11+0x8],rbx
   1400028ab:	mov    DWORD PTR [rsp+0x10],edx
   1400028af:	push   rsi
   1400028b0:	sub    rsp,0x30
   1400028b4:	and    DWORD PTR [rsp+0x48],0x0
   1400028b9:	lea    rax,[r11+0x10]
   1400028bd:	mov    QWORD PTR [r11-0x18],rax
   1400028c1:	mov    rbx,rcx
   1400028c4:	lea    rax,[rip+0x24d5]        # 0x140004da0
   1400028cb:	mov    QWORD PTR [r11-0x10],rax
   1400028cf:	lea    rsi,[rip+0x474a]        # 0x140007020
   1400028d6:	cmp    QWORD PTR [rip+0x4743],rsi        # 0x140007020
   1400028dd:	je     0x1400028e8
   1400028df:	lea    rcx,[r11-0x18]
   1400028e3:	call   0x140002678
   1400028e8:	or     edx,0xffffffff
   1400028eb:	mov    rcx,rbx
   1400028ee:	call   QWORD PTR [rip+0x17bc]        # 0x1400040b0
   1400028f4:	mov    ebx,eax
   1400028f6:	cmp    eax,0xffffffff
   1400028f9:	jne    0x14000293e
   1400028fb:	call   QWORD PTR [rip+0x17bf]        # 0x1400040c0
   140002901:	movzx  r9d,ax
   140002905:	or     r9d,0x80070000
   14000290c:	test   eax,eax
   14000290e:	cmovle r9d,eax
   140002912:	mov    DWORD PTR [rsp+0x48],r9d
   140002917:	mov    rcx,QWORD PTR [rip+0x4702]        # 0x140007020
   14000291e:	cmp    rcx,rsi
   140002921:	je     0x14000293e
   140002923:	test   BYTE PTR [rcx+0x1c],0x4
   140002927:	je     0x14000293e
   140002929:	mov    rcx,QWORD PTR [rcx+0x10]
   14000292d:	lea    r8,[rip+0x24a4]        # 0x140004dd8
   140002934:	mov    edx,0x4c
   140002939:	call   0x140001480
   14000293e:	lea    rcx,[rsp+0x20]
   140002943:	call   0x1400026b4
   140002948:	mov    eax,ebx
   14000294a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000294f:	add    rsp,0x30
   140002953:	pop    rsi
   140002954:	ret    
   140002955:	int3   
   140002956:	int3   
   140002957:	int3   
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	jmp    0x140003276
   140002961:	int3   
   140002962:	int3   
   140002963:	int3   
   140002964:	int3   
   140002965:	int3   
   140002966:	int3   
   140002967:	int3   
   140002968:	int3   
   140002969:	int3   
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	jmp    QWORD PTR [rip+0x1892]        # 0x140004208
   140002976:	int3   
   140002977:	int3   
   140002978:	int3   
   140002979:	int3   
   14000297a:	int3   
   14000297b:	int3   
   14000297c:	int3   
   14000297d:	int3   
   14000297e:	int3   
   14000297f:	int3   
   140002980:	jmp    QWORD PTR [rip+0x1872]        # 0x1400041f8
   140002986:	int3   
   140002987:	int3   
   140002988:	int3   
   140002989:	int3   
   14000298a:	int3   
   14000298b:	int3   
   14000298c:	int3   
   14000298d:	int3   
   14000298e:	int3   
   14000298f:	int3   
   140002990:	jmp    QWORD PTR [rip+0x185a]        # 0x1400041f0
   140002996:	int3   
   140002997:	int3   
   140002998:	int3   
   140002999:	int3   
   14000299a:	int3   
   14000299b:	int3   
   14000299c:	int3   
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	jmp    QWORD PTR [rip+0x1842]        # 0x1400041e8
   1400029a6:	int3   
   1400029a7:	int3   
   1400029a8:	int3   
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	jmp    QWORD PTR [rip+0x182a]        # 0x1400041e0
   1400029b6:	int3   
   1400029b7:	int3   
   1400029b8:	int3   
   1400029b9:	int3   
   1400029ba:	int3   
   1400029bb:	int3   
   1400029bc:	int3   
   1400029bd:	int3   
   1400029be:	int3   
   1400029bf:	int3   
   1400029c0:	jmp    QWORD PTR [rip+0x1812]        # 0x1400041d8
   1400029c6:	int3   
   1400029c7:	int3   
   1400029c8:	int3   
   1400029c9:	int3   
   1400029ca:	int3   
   1400029cb:	int3   
   1400029cc:	int3   
   1400029cd:	int3   
   1400029ce:	int3   
   1400029cf:	int3   
   1400029d0:	jmp    QWORD PTR [rip+0x17fa]        # 0x1400041d0
   1400029d6:	int3   
   1400029d7:	int3   
   1400029d8:	int3   
   1400029d9:	int3   
   1400029da:	int3   
   1400029db:	int3   
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	jmp    QWORD PTR [rip+0x17e2]        # 0x1400041c8
   1400029e6:	int3   
   1400029e7:	int3   
   1400029e8:	int3   
   1400029e9:	int3   
   1400029ea:	int3   
   1400029eb:	int3   
   1400029ec:	int3   
   1400029ed:	int3   
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	jmp    QWORD PTR [rip+0x17ca]        # 0x1400041c0
   1400029f6:	int3   
   1400029f7:	int3   
   1400029f8:	int3   
   1400029f9:	int3   
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	jmp    QWORD PTR [rip+0x17b2]        # 0x1400041b8
   140002a06:	int3   
   140002a07:	int3   
   140002a08:	int3   
   140002a09:	int3   
   140002a0a:	int3   
   140002a0b:	int3   
   140002a0c:	int3   
   140002a0d:	int3   
   140002a0e:	int3   
   140002a0f:	int3   
   140002a10:	jmp    QWORD PTR [rip+0x179a]        # 0x1400041b0
   140002a16:	int3   
   140002a17:	int3   
   140002a18:	int3   
   140002a19:	int3   
   140002a1a:	int3   
   140002a1b:	int3   
   140002a1c:	int3   
   140002a1d:	int3   
   140002a1e:	int3   
   140002a1f:	int3   
   140002a20:	jmp    QWORD PTR [rip+0x1782]        # 0x1400041a8
   140002a26:	int3   
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	jmp    QWORD PTR [rip+0x176a]        # 0x1400041a0
   140002a36:	int3   
   140002a37:	int3   
   140002a38:	int3   
   140002a39:	int3   
   140002a3a:	int3   
   140002a3b:	int3   
   140002a3c:	int3   
   140002a3d:	int3   
   140002a3e:	int3   
   140002a3f:	int3   
   140002a40:	jmp    QWORD PTR [rip+0x1752]        # 0x140004198
   140002a46:	int3   
   140002a47:	int3   
   140002a48:	int3   
   140002a49:	int3   
   140002a4a:	int3   
   140002a4b:	int3   
   140002a4c:	int3   
   140002a4d:	int3   
   140002a4e:	int3   
   140002a4f:	int3   
   140002a50:	jmp    QWORD PTR [rip+0x173a]        # 0x140004190
   140002a56:	int3   
   140002a57:	int3   
   140002a58:	int3   
   140002a59:	int3   
   140002a5a:	int3   
   140002a5b:	int3   
   140002a5c:	int3   
   140002a5d:	int3   
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	jmp    QWORD PTR [rip+0x190a]        # 0x140004370
   140002a66:	int3   
   140002a67:	int3   
   140002a68:	int3   
   140002a69:	int3   
   140002a6a:	int3   
   140002a6b:	int3   
   140002a6c:	int3   
   140002a6d:	int3   
   140002a6e:	int3   
   140002a6f:	int3   
   140002a70:	jmp    QWORD PTR [rip+0x170a]        # 0x140004180
   140002a76:	int3   
   140002a77:	int3   
   140002a78:	int3   
   140002a79:	int3   
   140002a7a:	int3   
   140002a7b:	int3   
   140002a7c:	int3   
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	jmp    QWORD PTR [rip+0x16f2]        # 0x140004178
   140002a86:	int3   
   140002a87:	int3   
   140002a88:	int3   
   140002a89:	int3   
   140002a8a:	int3   
   140002a8b:	int3   
   140002a8c:	int3   
   140002a8d:	int3   
   140002a8e:	int3   
   140002a8f:	int3   
   140002a90:	jmp    QWORD PTR [rip+0x16da]        # 0x140004170
   140002a96:	int3   
   140002a97:	int3   
   140002a98:	int3   
   140002a99:	int3   
   140002a9a:	int3   
   140002a9b:	int3   
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	jmp    QWORD PTR [rip+0x16c2]        # 0x140004168
   140002aa6:	int3   
   140002aa7:	int3   
   140002aa8:	int3   
   140002aa9:	int3   
   140002aaa:	int3   
   140002aab:	int3   
   140002aac:	int3   
   140002aad:	int3   
   140002aae:	int3   
   140002aaf:	int3   
   140002ab0:	jmp    QWORD PTR [rip+0x16aa]        # 0x140004160
   140002ab6:	int3   
   140002ab7:	int3   
   140002ab8:	int3   
   140002ab9:	int3   
   140002aba:	int3   
   140002abb:	int3   
   140002abc:	int3   
   140002abd:	int3   
   140002abe:	int3   
   140002abf:	int3   
   140002ac0:	jmp    QWORD PTR [rip+0x1692]        # 0x140004158
   140002ac6:	int3   
   140002ac7:	int3   
   140002ac8:	int3   
   140002ac9:	int3   
   140002aca:	int3   
   140002acb:	int3   
   140002acc:	int3   
   140002acd:	int3   
   140002ace:	int3   
   140002acf:	int3   
   140002ad0:	jmp    QWORD PTR [rip+0x167a]        # 0x140004150
   140002ad6:	int3   
   140002ad7:	int3   
   140002ad8:	int3   
   140002ad9:	int3   
   140002ada:	int3   
   140002adb:	int3   
   140002adc:	int3   
   140002add:	int3   
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	jmp    QWORD PTR [rip+0x1662]        # 0x140004148
   140002ae6:	int3   
   140002ae7:	int3   
   140002ae8:	int3   
   140002ae9:	int3   
   140002aea:	int3   
   140002aeb:	int3   
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	jmp    QWORD PTR [rip+0x160a]        # 0x140004100
   140002af6:	int3   
   140002af7:	int3   
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	jmp    QWORD PTR [rip+0x1872]        # 0x140004378
   140002b06:	int3   
   140002b07:	int3   
   140002b08:	int3   
   140002b09:	int3   
   140002b0a:	int3   
   140002b0b:	int3   
   140002b0c:	int3   
   140002b0d:	int3   
   140002b0e:	int3   
   140002b0f:	int3   
   140002b10:	jmp    QWORD PTR [rip+0x1852]        # 0x140004368
   140002b16:	int3   
   140002b17:	int3   
   140002b18:	int3   
   140002b19:	int3   
   140002b1a:	int3   
   140002b1b:	int3   
   140002b1c:	int3   
   140002b1d:	int3   
   140002b1e:	int3   
   140002b1f:	int3   
   140002b20:	jmp    QWORD PTR [rip+0x183a]        # 0x140004360
   140002b26:	int3   
   140002b27:	int3   
   140002b28:	int3   
   140002b29:	int3   
   140002b2a:	int3   
   140002b2b:	int3   
   140002b2c:	int3   
   140002b2d:	int3   
   140002b2e:	int3   
   140002b2f:	int3   
   140002b30:	jmp    QWORD PTR [rip+0x1822]        # 0x140004358
   140002b36:	int3   
   140002b37:	int3   
   140002b38:	int3   
   140002b39:	int3   
   140002b3a:	int3   
   140002b3b:	int3   
   140002b3c:	int3   
   140002b3d:	int3   
   140002b3e:	int3   
   140002b3f:	int3   
   140002b40:	jmp    QWORD PTR [rip+0x180a]        # 0x140004350
   140002b46:	int3   
   140002b47:	int3   
   140002b48:	int3   
   140002b49:	int3   
   140002b4a:	int3   
   140002b4b:	int3   
   140002b4c:	int3   
   140002b4d:	int3   
   140002b4e:	int3   
   140002b4f:	int3   
   140002b50:	jmp    QWORD PTR [rip+0x17f2]        # 0x140004348
   140002b56:	int3   
   140002b57:	int3   
   140002b58:	int3   
   140002b59:	int3   
   140002b5a:	int3   
   140002b5b:	int3   
   140002b5c:	int3   
   140002b5d:	int3   
   140002b5e:	int3   
   140002b5f:	int3   
   140002b60:	jmp    QWORD PTR [rip+0x17da]        # 0x140004340
   140002b66:	int3   
   140002b67:	int3   
   140002b68:	int3   
   140002b69:	int3   
   140002b6a:	int3   
   140002b6b:	int3   
   140002b6c:	int3   
   140002b6d:	int3   
   140002b6e:	int3   
   140002b6f:	int3   
   140002b70:	jmp    QWORD PTR [rip+0x17c2]        # 0x140004338
   140002b76:	int3   
   140002b77:	int3   
   140002b78:	int3   
   140002b79:	int3   
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	jmp    QWORD PTR [rip+0x17aa]        # 0x140004330
   140002b86:	int3   
   140002b87:	int3   
   140002b88:	int3   
   140002b89:	int3   
   140002b8a:	int3   
   140002b8b:	int3   
   140002b8c:	int3   
   140002b8d:	int3   
   140002b8e:	int3   
   140002b8f:	int3   
   140002b90:	jmp    QWORD PTR [rip+0x1792]        # 0x140004328
   140002b96:	int3   
   140002b97:	int3   
   140002b98:	int3   
   140002b99:	int3   
   140002b9a:	int3   
   140002b9b:	int3   
   140002b9c:	int3   
   140002b9d:	int3   
   140002b9e:	int3   
   140002b9f:	int3   
   140002ba0:	jmp    QWORD PTR [rip+0x1712]        # 0x1400042b8
   140002ba6:	int3   
   140002ba7:	int3   
   140002ba8:	int3   
   140002ba9:	int3   
   140002baa:	int3   
   140002bab:	int3   
   140002bac:	int3   
   140002bad:	int3   
   140002bae:	int3   
   140002baf:	int3   
   140002bb0:	jmp    QWORD PTR [rip+0x16ca]        # 0x140004280
   140002bb6:	int3   
   140002bb7:	int3   
   140002bb8:	int3   
   140002bb9:	int3   
   140002bba:	int3   
   140002bbb:	int3   
   140002bbc:	int3   
   140002bbd:	int3   
   140002bbe:	int3   
   140002bbf:	int3   
   140002bc0:	jmp    QWORD PTR [rip+0x16b2]        # 0x140004278
   140002bc6:	int3   
   140002bc7:	int3   
   140002bc8:	int3   
   140002bc9:	int3   
   140002bca:	int3   
   140002bcb:	int3   
   140002bcc:	int3   
   140002bcd:	int3   
   140002bce:	int3   
   140002bcf:	int3   
   140002bd0:	jmp    QWORD PTR [rip+0x169a]        # 0x140004270
   140002bd6:	int3   
   140002bd7:	int3   
   140002bd8:	int3   
   140002bd9:	int3   
   140002bda:	int3   
   140002bdb:	int3   
   140002bdc:	int3   
   140002bdd:	int3   
   140002bde:	int3   
   140002bdf:	int3   
   140002be0:	jmp    QWORD PTR [rip+0x1682]        # 0x140004268
   140002be6:	int3   
   140002be7:	int3   
   140002be8:	int3   
   140002be9:	int3   
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	jmp    QWORD PTR [rip+0x166a]        # 0x140004260
   140002bf6:	int3   
   140002bf7:	int3   
   140002bf8:	int3   
   140002bf9:	int3   
   140002bfa:	int3   
   140002bfb:	int3   
   140002bfc:	int3   
   140002bfd:	int3   
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	jmp    QWORD PTR [rip+0x1652]        # 0x140004258
   140002c06:	int3   
   140002c07:	int3   
   140002c08:	int3   
   140002c09:	int3   
   140002c0a:	int3   
   140002c0b:	int3   
   140002c0c:	int3   
   140002c0d:	int3   
   140002c0e:	int3   
   140002c0f:	int3   
   140002c10:	jmp    QWORD PTR [rip+0x163a]        # 0x140004250
   140002c16:	int3   
   140002c17:	int3   
   140002c18:	int3   
   140002c19:	int3   
   140002c1a:	int3   
   140002c1b:	int3   
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	jmp    QWORD PTR [rip+0x1622]        # 0x140004248
   140002c26:	int3   
   140002c27:	int3   
   140002c28:	int3   
   140002c29:	int3   
   140002c2a:	int3   
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	jmp    QWORD PTR [rip+0x160a]        # 0x140004240
   140002c36:	int3   
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	jmp    QWORD PTR [rip+0x15f2]        # 0x140004238
   140002c46:	int3   
   140002c47:	int3   
   140002c48:	int3   
   140002c49:	int3   
   140002c4a:	int3   
   140002c4b:	int3   
   140002c4c:	int3   
   140002c4d:	int3   
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	jmp    QWORD PTR [rip+0x15da]        # 0x140004230
   140002c56:	int3   
   140002c57:	int3   
   140002c58:	int3   
   140002c59:	int3   
   140002c5a:	int3   
   140002c5b:	int3   
   140002c5c:	int3   
   140002c5d:	int3   
   140002c5e:	int3   
   140002c5f:	int3   
   140002c60:	jmp    QWORD PTR [rip+0x15c2]        # 0x140004228
   140002c66:	int3   
   140002c67:	int3   
   140002c68:	int3   
   140002c69:	int3   
   140002c6a:	int3   
   140002c6b:	int3   
   140002c6c:	int3   
   140002c6d:	int3   
   140002c6e:	int3   
   140002c6f:	int3   
   140002c70:	jmp    QWORD PTR [rip+0x15aa]        # 0x140004220
   140002c76:	int3   
   140002c77:	int3   
   140002c78:	int3   
   140002c79:	int3   
   140002c7a:	int3   
   140002c7b:	int3   
   140002c7c:	int3   
   140002c7d:	int3   
   140002c7e:	int3   
   140002c7f:	int3   
   140002c80:	jmp    QWORD PTR [rip+0x1592]        # 0x140004218
   140002c86:	int3   
   140002c87:	int3   
   140002c88:	int3   
   140002c89:	int3   
   140002c8a:	int3   
   140002c8b:	int3   
   140002c8c:	int3   
   140002c8d:	int3   
   140002c8e:	int3   
   140002c8f:	int3   
   140002c90:	jmp    QWORD PTR [rip+0x14f2]        # 0x140004188
   140002c96:	int3   
   140002c97:	int3   
   140002c98:	int3   
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	jmp    QWORD PTR [rip+0x143a]        # 0x1400040e0
   140002ca6:	int3   
   140002ca7:	int3   
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	jmp    QWORD PTR [rip+0x1432]        # 0x1400040e8
   140002cb6:	int3   
   140002cb7:	int3   
   140002cb8:	int3   
   140002cb9:	int3   
   140002cba:	int3   
   140002cbb:	int3   
   140002cbc:	int3   
   140002cbd:	int3   
   140002cbe:	int3   
   140002cbf:	int3   
   140002cc0:	jmp    QWORD PTR [rip+0x142a]        # 0x1400040f0
   140002cc6:	int3   
   140002cc7:	int3   
   140002cc8:	int3   
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	jmp    QWORD PTR [rip+0x1422]        # 0x1400040f8
   140002cd6:	int3   
   140002cd7:	int3   
   140002cd8:	int3   
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	jmp    QWORD PTR [rip+0x169a]        # 0x140004380
   140002ce6:	int3   
   140002ce7:	int3   
   140002ce8:	int3   
   140002ce9:	int3   
   140002cea:	int3   
   140002ceb:	int3   
   140002cec:	int3   
   140002ced:	int3   
   140002cee:	int3   
   140002cef:	int3   
   140002cf0:	jmp    QWORD PTR [rip+0x1412]        # 0x140004108
   140002cf6:	int3   
   140002cf7:	int3   
   140002cf8:	int3   
   140002cf9:	int3   
   140002cfa:	int3   
   140002cfb:	int3   
   140002cfc:	int3   
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	jmp    QWORD PTR [rip+0x140a]        # 0x140004110
   140002d06:	int3   
   140002d07:	int3   
   140002d08:	int3   
   140002d09:	int3   
   140002d0a:	int3   
   140002d0b:	int3   
   140002d0c:	int3   
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	jmp    QWORD PTR [rip+0x1402]        # 0x140004118
   140002d16:	int3   
   140002d17:	int3   
   140002d18:	int3   
   140002d19:	int3   
   140002d1a:	int3   
   140002d1b:	int3   
   140002d1c:	int3   
   140002d1d:	int3   
   140002d1e:	int3   
   140002d1f:	int3   
   140002d20:	jmp    QWORD PTR [rip+0x13fa]        # 0x140004120
   140002d26:	int3   
   140002d27:	int3   
   140002d28:	int3   
   140002d29:	int3   
   140002d2a:	int3   
   140002d2b:	int3   
   140002d2c:	int3   
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	jmp    QWORD PTR [rip+0x13f2]        # 0x140004128
   140002d36:	int3   
   140002d37:	int3   
   140002d38:	int3   
   140002d39:	int3   
   140002d3a:	int3   
   140002d3b:	int3   
   140002d3c:	int3   
   140002d3d:	int3   
   140002d3e:	int3   
   140002d3f:	int3   
   140002d40:	jmp    QWORD PTR [rip+0x13ea]        # 0x140004130
   140002d46:	int3   
   140002d47:	int3   
   140002d48:	int3   
   140002d49:	int3   
   140002d4a:	int3   
   140002d4b:	int3   
   140002d4c:	int3   
   140002d4d:	int3   
   140002d4e:	int3   
   140002d4f:	int3   
   140002d50:	jmp    QWORD PTR [rip+0x13e2]        # 0x140004138
   140002d56:	int3   
   140002d57:	int3   
   140002d58:	int3   
   140002d59:	int3   
   140002d5a:	int3   
   140002d5b:	int3   
   140002d5c:	int3   
   140002d5d:	int3   
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	jmp    QWORD PTR [rip+0x13da]        # 0x140004140
   140002d66:	int3   
   140002d67:	int3   
   140002d68:	int3   
   140002d69:	int3   
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	int3   
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	sub    rsp,0x28
   140002d74:	mov    eax,0x5a4d
   140002d79:	cmp    WORD PTR [rip+0xffffffffffffd280],ax        # 0x140000000
   140002d80:	je     0x140002d86
   140002d82:	xor    eax,eax
   140002d84:	jmp    0x140002dd5
   140002d86:	movsxd rcx,DWORD PTR [rip+0xffffffffffffd2af]        # 0x14000003c
   140002d8d:	lea    rax,[rip+0xffffffffffffd26c]        # 0x140000000
   140002d94:	add    rcx,rax
   140002d97:	cmp    DWORD PTR [rcx],0x4550
   140002d9d:	jne    0x140002d82
   140002d9f:	movzx  eax,WORD PTR [rcx+0x18]
   140002da3:	cmp    eax,0x10b
   140002da8:	je     0x140002dc4
   140002daa:	cmp    eax,0x20b
   140002daf:	jne    0x140002d82
   140002db1:	xor    eax,eax
   140002db3:	cmp    DWORD PTR [rcx+0x84],0xe
   140002dba:	jbe    0x140002dd5
   140002dbc:	cmp    DWORD PTR [rcx+0xf8],eax
   140002dc2:	jmp    0x140002dd2
   140002dc4:	xor    eax,eax
   140002dc6:	cmp    DWORD PTR [rcx+0x74],0xe
   140002dca:	jbe    0x140002dd5
   140002dcc:	cmp    DWORD PTR [rcx+0xe8],eax
   140002dd2:	setne  al
   140002dd5:	mov    ecx,0x2
   140002dda:	mov    DWORD PTR [rip+0x4398],eax        # 0x140007178
   140002de0:	call   0x140003508
   140002de5:	mov    ecx,eax
   140002de7:	call   QWORD PTR [rip+0x165b]        # 0x140004448
   140002ded:	mov    rcx,QWORD PTR [rip+0x1694]        # 0x140004488
   140002df4:	or     rax,0xffffffffffffffff
   140002df8:	mov    QWORD PTR [rip+0x4f11],rax        # 0x140007d10
   140002dff:	mov    QWORD PTR [rip+0x4f12],rax        # 0x140007d18
   140002e06:	mov    eax,DWORD PTR [rip+0x48f0]        # 0x1400076fc
   140002e0c:	mov    DWORD PTR [rcx],eax
   140002e0e:	mov    rcx,QWORD PTR [rip+0x167b]        # 0x140004490
   140002e15:	mov    eax,DWORD PTR [rip+0x48d5]        # 0x1400076f0
   140002e1b:	mov    DWORD PTR [rcx],eax
   140002e1d:	call   0x140003560
   140002e22:	cmp    DWORD PTR [rip+0x41d7],0x0        # 0x140007000
   140002e29:	jne    0x140002e38
   140002e2b:	lea    rcx,[rip+0x72e]        # 0x140003560
   140002e32:	call   QWORD PTR [rip+0x1630]        # 0x140004468
   140002e38:	xor    eax,eax
   140002e3a:	add    rsp,0x28
   140002e3e:	ret    
   140002e3f:	int3   
   140002e40:	int3   
   140002e41:	int3   
   140002e42:	int3   
   140002e43:	int3   
   140002e44:	int3   
   140002e45:	int3   
   140002e46:	int3   
   140002e47:	int3   
   140002e48:	int3   
   140002e49:	int3   
   140002e4a:	int3   
   140002e4b:	int3   
   140002e4c:	int3   
   140002e4d:	int3   
   140002e4e:	int3   
   140002e4f:	int3   
   140002e50:	sub    rsp,0x38
   140002e54:	mov    eax,DWORD PTR [rip+0x489e]        # 0x1400076f8
   140002e5a:	lea    r8,[rip+0x430f]        # 0x140007170
   140002e61:	mov    r9d,DWORD PTR [rip+0x488c]        # 0x1400076f4
   140002e68:	lea    rdx,[rip+0x42f9]        # 0x140007168
   140002e6f:	mov    DWORD PTR [rip+0x4307],eax        # 0x14000717c
   140002e75:	lea    rcx,[rip+0x42e4]        # 0x140007160
   140002e7c:	lea    rax,[rip+0x42f9]        # 0x14000717c
   140002e83:	mov    QWORD PTR [rsp+0x20],rax
   140002e88:	call   QWORD PTR [rip+0x15b2]        # 0x140004440
   140002e8e:	mov    DWORD PTR [rip+0x42d0],eax        # 0x140007164
   140002e94:	add    rsp,0x38
   140002e98:	ret    
   140002e99:	int3   
   140002e9a:	int3   
   140002e9b:	int3   
   140002e9c:	int3   
   140002e9d:	int3   
   140002e9e:	int3   
   140002e9f:	int3   
   140002ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ea5:	mov    QWORD PTR [rsp+0x10],rsi
   140002eaa:	mov    QWORD PTR [rsp+0x18],rdi
   140002eaf:	push   r12
   140002eb1:	push   r14
   140002eb3:	push   r15
   140002eb5:	sub    rsp,0xb0
   140002ebc:	xor    r15d,r15d
   140002ebf:	mov    DWORD PTR [rsp+0x20],r15d
   140002ec4:	lea    rcx,[rsp+0x40]
   140002ec9:	call   QWORD PTR [rip+0x11b9]        # 0x140004088
   140002ecf:	nop
   140002ed0:	mov    rax,QWORD PTR gs:0x30
   140002ed9:	mov    rbx,QWORD PTR [rax+0x8]
   140002edd:	mov    r14d,r15d
   140002ee0:	xor    eax,eax
   140002ee2:	lock cmpxchg QWORD PTR [rip+0x4e15],rbx        # 0x140007d00
   140002eeb:	je     0x140002f09
   140002eed:	cmp    rax,rbx
   140002ef0:	jne    0x140002efc
   140002ef2:	mov    edi,0x1
   140002ef7:	mov    r14d,edi
   140002efa:	jmp    0x140002f0e
   140002efc:	mov    ecx,0x3e8
   140002f01:	call   QWORD PTR [rip+0x1189]        # 0x140004090
   140002f07:	jmp    0x140002ee0
   140002f09:	mov    edi,0x1
   140002f0e:	mov    eax,DWORD PTR [rip+0x4df4]        # 0x140007d08
   140002f14:	cmp    eax,edi
   140002f16:	jne    0x140002f26
   140002f18:	mov    esi,0x1f
   140002f1d:	mov    ecx,esi
   140002f1f:	call   0x140003554
   140002f24:	jmp    0x140002f97
   140002f26:	mov    eax,DWORD PTR [rip+0x4ddc]        # 0x140007d08
   140002f2c:	test   eax,eax
   140002f2e:	jne    0x140002f8c
   140002f30:	mov    DWORD PTR [rip+0x4dd2],edi        # 0x140007d08
   140002f36:	lea    r12,[rip+0x161b]        # 0x140004558
   140002f3d:	lea    rbx,[rip+0x15fc]        # 0x140004540
   140002f44:	mov    QWORD PTR [rsp+0x30],rbx
   140002f49:	mov    eax,r15d
   140002f4c:	mov    DWORD PTR [rsp+0x24],eax
   140002f50:	cmp    rbx,r12
   140002f53:	jae    0x140002f7e
   140002f55:	test   eax,eax
   140002f57:	jne    0x140002f82
   140002f59:	mov    rsi,QWORD PTR [rbx]
   140002f5c:	test   rsi,rsi
   140002f5f:	je     0x140002f73
   140002f61:	mov    rcx,rsi
   140002f64:	mov    rax,QWORD PTR [rip+0x159d]        # 0x140004508
   140002f6b:	call   rax
   140002f6d:	call   rsi
   140002f6f:	mov    DWORD PTR [rsp+0x24],eax
   140002f73:	add    rbx,0x8
   140002f77:	mov    QWORD PTR [rsp+0x30],rbx
   140002f7c:	jmp    0x140002f50
   140002f7e:	test   eax,eax
   140002f80:	je     0x140002f92
   140002f82:	mov    eax,0xff
   140002f87:	jmp    0x1400030f3
   140002f8c:	mov    DWORD PTR [rip+0x41ca],edi        # 0x14000715c
   140002f92:	mov    esi,0x1f
   140002f97:	mov    eax,DWORD PTR [rip+0x4d6b]        # 0x140007d08
   140002f9d:	cmp    eax,edi
   140002f9f:	jne    0x140002fbe
   140002fa1:	lea    rdx,[rip+0x1590]        # 0x140004538
   140002fa8:	lea    rcx,[rip+0x1569]        # 0x140004518
   140002faf:	call   0x14000372a
   140002fb4:	mov    DWORD PTR [rip+0x4d4a],0x2        # 0x140007d08
   140002fbe:	test   r14d,r14d
   140002fc1:	jne    0x140002fcd
   140002fc3:	mov    rax,r15
   140002fc6:	xchg   QWORD PTR [rip+0x4d33],rax        # 0x140007d00
   140002fcd:	cmp    QWORD PTR [rip+0x4d4c],r15        # 0x140007d20
   140002fd4:	je     0x140003004
   140002fd6:	lea    rcx,[rip+0x4d43]        # 0x140007d20
   140002fdd:	call   0x1400035c0
   140002fe2:	test   eax,eax
   140002fe4:	je     0x140003004
   140002fe6:	mov    rbx,QWORD PTR [rip+0x4d33]        # 0x140007d20
   140002fed:	mov    rcx,rbx
   140002ff0:	mov    rax,QWORD PTR [rip+0x1511]        # 0x140004508
   140002ff7:	call   rax
   140002ff9:	xor    r8d,r8d
   140002ffc:	lea    edx,[r8+0x2]
   140003000:	xor    ecx,ecx
   140003002:	call   rbx
   140003004:	mov    rax,QWORD PTR [rip+0x1475]        # 0x140004480
   14000300b:	mov    rdx,QWORD PTR [rax]
   14000300e:	test   rdx,rdx
   140003011:	jne    0x14000301d
   140003013:	mov    eax,0xff
   140003018:	jmp    0x1400030f3
   14000301d:	mov    QWORD PTR [rsp+0x28],rdx
   140003022:	mov    ecx,DWORD PTR [rsp+0x20]
   140003026:	cmp    WORD PTR [rdx],0x20
   14000302a:	ja     0x1400030a4
   14000302c:	cmp    WORD PTR [rdx],r15w
   140003030:	je     0x140003036
   140003032:	test   ecx,ecx
   140003034:	jne    0x1400030a4
   140003036:	movzx  eax,WORD PTR [rdx]
   140003039:	sub    ax,di
   14000303c:	cmp    ax,si
   14000303f:	ja     0x14000304c
   140003041:	add    rdx,0x2
   140003045:	mov    QWORD PTR [rsp+0x28],rdx
   14000304a:	jmp    0x140003036
   14000304c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140003050:	movzx  eax,WORD PTR [rsp+0x80]
   140003058:	mov    r9d,0xa
   14000305e:	and    cl,dil
   140003061:	cmovne r9d,eax
   140003065:	mov    r8,rdx
   140003068:	xor    edx,edx
   14000306a:	lea    rcx,[rip+0xffffffffffffcf8f]        # 0x140000000
   140003071:	call   0x14000379c
   140003076:	mov    DWORD PTR [rip+0x40dc],eax        # 0x140007158
   14000307c:	cmp    DWORD PTR [rip+0x40f5],r15d        # 0x140007178
   140003083:	jne    0x14000308d
   140003085:	mov    ecx,eax
   140003087:	call   QWORD PTR [rip+0x13c3]        # 0x140004450
   14000308d:	cmp    DWORD PTR [rip+0x40c8],r15d        # 0x14000715c
   140003094:	jne    0x1400030a2
   140003096:	call   QWORD PTR [rip+0x13c4]        # 0x140004460
   14000309c:	mov    eax,DWORD PTR [rip+0x40b6]        # 0x140007158
   1400030a2:	jmp    0x1400030f3
   1400030a4:	cmp    WORD PTR [rdx],0x22
   1400030a8:	jne    0x1400030b8
   1400030aa:	mov    eax,r15d
   1400030ad:	test   ecx,ecx
   1400030af:	sete   al
   1400030b2:	mov    ecx,eax
   1400030b4:	mov    DWORD PTR [rsp+0x20],eax
   1400030b8:	add    rdx,0x2
   1400030bc:	mov    QWORD PTR [rsp+0x28],rdx
   1400030c1:	jmp    0x140003026
   1400030c6:	mov    DWORD PTR [rip+0x408c],eax        # 0x140007158
   1400030cc:	cmp    DWORD PTR [rip+0x40a5],0x0        # 0x140007178
   1400030d3:	jne    0x1400030de
   1400030d5:	mov    ecx,eax
   1400030d7:	call   QWORD PTR [rip+0x137b]        # 0x140004458
   1400030dd:	int3   
   1400030de:	cmp    DWORD PTR [rip+0x4077],0x0        # 0x14000715c
   1400030e5:	jne    0x1400030f3
   1400030e7:	call   QWORD PTR [rip+0x1373]        # 0x140004460
   1400030ed:	mov    eax,DWORD PTR [rip+0x4065]        # 0x140007158
   1400030f3:	lea    r11,[rsp+0xb0]
   1400030fb:	mov    rbx,QWORD PTR [r11+0x20]
   1400030ff:	mov    rsi,QWORD PTR [r11+0x28]
   140003103:	mov    rdi,QWORD PTR [r11+0x30]
   140003107:	mov    rsp,r11
   14000310a:	pop    r15
   14000310c:	pop    r14
   14000310e:	pop    r12
   140003110:	ret    
   140003111:	int3   
   140003112:	int3   
   140003113:	int3   
   140003114:	int3   
   140003115:	int3   
   140003116:	int3   
   140003117:	int3   
   140003118:	int3   
   140003119:	int3   
   14000311a:	int3   
   14000311b:	int3   
   14000311c:	int3   
   14000311d:	int3   
   14000311e:	int3   
   14000311f:	int3   
   140003120:	sub    rsp,0x28
   140003124:	call   0x140003654
   140003129:	add    rsp,0x28
   14000312d:	jmp    0x140002ea0
   140003132:	int3   
   140003133:	int3   
   140003134:	int3   
   140003135:	int3   
   140003136:	int3   
   140003137:	int3   
   140003138:	int3   
   140003139:	int3   
   14000313a:	int3   
   14000313b:	int3   
   14000313c:	int3   
   14000313d:	int3   
   14000313e:	int3   
   14000313f:	int3   
   140003140:	int3   
   140003141:	int3   
   140003142:	int3   
   140003143:	int3   
   140003144:	int3   
   140003145:	int3   
   140003146:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003150:	cmp    rcx,QWORD PTR [rip+0x3eb1]        # 0x140007008
   140003157:	jne    0x140003169
   140003159:	rol    rcx,0x10
   14000315d:	test   cx,0xffff
   140003162:	jne    0x140003165
   140003164:	ret    
   140003165:	ror    rcx,0x10
   140003169:	jmp    0x1400032c0
   14000316e:	int3   
   14000316f:	int3   
   140003170:	int3   
   140003171:	int3   
   140003172:	int3   
   140003173:	int3   
   140003174:	mov    QWORD PTR [rsp+0x8],rbx
   140003179:	push   rdi
   14000317a:	sub    rsp,0x20
   14000317e:	mov    rdi,rcx
   140003181:	mov    rax,QWORD PTR [rip+0x4b90]        # 0x140007d18
   140003188:	mov    QWORD PTR [rsp+0x38],rax
   14000318d:	cmp    rax,0xffffffffffffffff
   140003191:	jne    0x1400031aa
   140003193:	mov    rbx,QWORD PTR [rip+0x1316]        # 0x1400044b0
   14000319a:	mov    rcx,rbx
   14000319d:	call   QWORD PTR [rip+0x1365]        # 0x140004508
   1400031a3:	mov    rcx,rdi
   1400031a6:	call   rbx
   1400031a8:	jmp    0x140003207
   1400031aa:	mov    ecx,0x8
   1400031af:	call   0x140003742
   1400031b4:	nop
   1400031b5:	mov    rax,QWORD PTR [rip+0x4b5c]        # 0x140007d18
   1400031bc:	mov    QWORD PTR [rsp+0x38],rax
   1400031c1:	mov    rax,QWORD PTR [rip+0x4b48]        # 0x140007d10
   1400031c8:	mov    QWORD PTR [rsp+0x40],rax
   1400031cd:	lea    r8,[rsp+0x40]
   1400031d2:	lea    rdx,[rsp+0x38]
   1400031d7:	mov    rcx,rdi
   1400031da:	call   0x14000375a
   1400031df:	mov    rbx,rax
   1400031e2:	mov    rdx,QWORD PTR [rsp+0x38]
   1400031e7:	mov    QWORD PTR [rip+0x4b2a],rdx        # 0x140007d18
   1400031ee:	mov    rdx,QWORD PTR [rsp+0x40]
   1400031f3:	mov    QWORD PTR [rip+0x4b16],rdx        # 0x140007d10
   1400031fa:	mov    ecx,0x8
   1400031ff:	call   0x14000374e
   140003204:	mov    rax,rbx
   140003207:	mov    rbx,QWORD PTR [rsp+0x30]
   14000320c:	add    rsp,0x20
   140003210:	pop    rdi
   140003211:	ret    
   140003212:	int3   
   140003213:	int3   
   140003214:	int3   
   140003215:	int3   
   140003216:	int3   
   140003217:	int3   
   140003218:	sub    rsp,0x28
   14000321c:	call   0x140003174
   140003221:	neg    rax
   140003224:	sbb    eax,eax
   140003226:	neg    eax
   140003228:	dec    eax
   14000322a:	add    rsp,0x28
   14000322e:	ret    
   14000322f:	int3   
   140003230:	int3   
   140003231:	int3   
   140003232:	int3   
   140003233:	int3   
   140003234:	int3   
   140003235:	int3   
   140003236:	int3   
   140003237:	int3   
   140003238:	int3   
   140003239:	int3   
   14000323a:	int3   
   14000323b:	int3   
   14000323c:	int3   
   14000323d:	int3   
   14000323e:	int3   
   14000323f:	int3   
   140003240:	mov    QWORD PTR [rsp+0x8],rbx
   140003245:	push   rdi
   140003246:	sub    rsp,0x20
   14000324a:	mov    ebx,edx
   14000324c:	mov    rdi,rcx
   14000324f:	call   QWORD PTR [rip+0x1263]        # 0x1400044b8
   140003255:	test   bl,0x1
   140003258:	je     0x140003262
   14000325a:	mov    rcx,rdi
   14000325d:	call   0x14000295c
   140003262:	mov    rax,rdi
   140003265:	mov    rbx,QWORD PTR [rsp+0x30]
   14000326a:	add    rsp,0x20
   14000326e:	pop    rdi
   14000326f:	ret    
   140003270:	int3   
   140003271:	int3   
   140003272:	int3   
   140003273:	int3   
   140003274:	int3   
   140003275:	int3   
   140003276:	jmp    QWORD PTR [rip+0x11a4]        # 0x140004420
   14000327c:	int3   
   14000327d:	int3   
   14000327e:	int3   
   14000327f:	int3   
   140003280:	int3   
   140003281:	int3   
   140003282:	int3   
   140003283:	int3   
   140003284:	rex push rbx
   140003286:	sub    rsp,0x20
   14000328a:	mov    rbx,rcx
   14000328d:	xor    ecx,ecx
   14000328f:	call   QWORD PTR [rip+0xde3]        # 0x140004078
   140003295:	mov    rcx,rbx
   140003298:	call   QWORD PTR [rip+0xde2]        # 0x140004080
   14000329e:	call   QWORD PTR [rip+0xdcc]        # 0x140004070
   1400032a4:	mov    rcx,rax
   1400032a7:	mov    edx,0xc0000409
   1400032ac:	add    rsp,0x20
   1400032b0:	pop    rbx
   1400032b1:	rex.W jmp QWORD PTR [rip+0xdb0]        # 0x140004068
   1400032b8:	int3   
   1400032b9:	int3   
   1400032ba:	int3   
   1400032bb:	int3   
   1400032bc:	int3   
   1400032bd:	int3   
   1400032be:	int3   
   1400032bf:	int3   
   1400032c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400032c5:	sub    rsp,0x88
   1400032cc:	lea    rcx,[rip+0x3f4d]        # 0x140007220
   1400032d3:	call   QWORD PTR [rip+0x121f]        # 0x1400044f8
   1400032d9:	mov    rax,QWORD PTR [rip+0x4038]        # 0x140007318
   1400032e0:	mov    QWORD PTR [rsp+0x48],rax
   1400032e5:	xor    r8d,r8d
   1400032e8:	lea    rdx,[rsp+0x50]
   1400032ed:	mov    rcx,QWORD PTR [rsp+0x48]
   1400032f2:	call   QWORD PTR [rip+0x11e8]        # 0x1400044e0
   1400032f8:	mov    QWORD PTR [rsp+0x40],rax
   1400032fd:	cmp    QWORD PTR [rsp+0x40],0x0
   140003303:	je     0x140003347
   140003305:	mov    QWORD PTR [rsp+0x38],0x0
   14000330e:	lea    rax,[rsp+0x58]
   140003313:	mov    QWORD PTR [rsp+0x30],rax
   140003318:	lea    rax,[rsp+0x60]
   14000331d:	mov    QWORD PTR [rsp+0x28],rax
   140003322:	lea    rax,[rip+0x3ef7]        # 0x140007220
   140003329:	mov    QWORD PTR [rsp+0x20],rax
   14000332e:	mov    r9,QWORD PTR [rsp+0x40]
   140003333:	mov    r8,QWORD PTR [rsp+0x48]
   140003338:	mov    rdx,QWORD PTR [rsp+0x50]
   14000333d:	xor    ecx,ecx
   14000333f:	call   QWORD PTR [rip+0x11a3]        # 0x1400044e8
   140003345:	jmp    0x14000336a
   140003347:	mov    rax,QWORD PTR [rip+0x3f6a]        # 0x1400072b8
   14000334e:	mov    rax,QWORD PTR [rax]
   140003351:	mov    QWORD PTR [rip+0x3fc0],rax        # 0x140007318
   140003358:	mov    rax,QWORD PTR [rip+0x3f59]        # 0x1400072b8
   14000335f:	add    rax,0x8
   140003363:	mov    QWORD PTR [rip+0x3f4e],rax        # 0x1400072b8
   14000336a:	mov    rax,QWORD PTR [rip+0x3fa7]        # 0x140007318
   140003371:	mov    QWORD PTR [rip+0x3e18],rax        # 0x140007190
   140003378:	mov    rax,QWORD PTR [rsp+0x90]
   140003380:	mov    QWORD PTR [rip+0x3f19],rax        # 0x1400072a0
   140003387:	mov    DWORD PTR [rip+0x3def],0xc0000409        # 0x140007180
   140003391:	mov    DWORD PTR [rip+0x3de9],0x1        # 0x140007184
   14000339b:	mov    DWORD PTR [rip+0x3df3],0x3        # 0x140007198
   1400033a5:	mov    eax,0x8
   1400033aa:	imul   rax,rax,0x0
   1400033ae:	lea    rcx,[rip+0x3deb]        # 0x1400071a0
   1400033b5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400033bd:	mov    eax,0x8
   1400033c2:	imul   rax,rax,0x1
   1400033c6:	lea    rcx,[rip+0x3dd3]        # 0x1400071a0
   1400033cd:	mov    rdx,QWORD PTR [rip+0x3c34]        # 0x140007008
   1400033d4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400033d8:	mov    eax,0x8
   1400033dd:	imul   rax,rax,0x2
   1400033e1:	lea    rcx,[rip+0x3db8]        # 0x1400071a0
   1400033e8:	mov    rdx,QWORD PTR [rip+0x3c21]        # 0x140007010
   1400033ef:	mov    QWORD PTR [rcx+rax*1],rdx
   1400033f3:	mov    eax,0x8
   1400033f8:	imul   rax,rax,0x0
   1400033fc:	mov    rcx,QWORD PTR [rip+0x3c05]        # 0x140007008
   140003403:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140003408:	mov    eax,0x8
   14000340d:	imul   rax,rax,0x1
   140003411:	mov    rcx,QWORD PTR [rip+0x3bf8]        # 0x140007010
   140003418:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000341d:	lea    rcx,[rip+0x12c4]        # 0x1400046e8
   140003424:	call   0x140003284
   140003429:	add    rsp,0x88
   140003430:	ret    
   140003431:	int3   
   140003432:	int3   
   140003433:	int3   
   140003434:	int3   
   140003435:	int3   
   140003436:	int3   
   140003437:	int3   
   140003438:	int3   
   140003439:	int3   
   14000343a:	int3   
   14000343b:	int3   
   14000343c:	int3   
   14000343d:	int3   
   14000343e:	int3   
   14000343f:	int3   
   140003440:	sub    rsp,0x28
   140003444:	mov    rax,QWORD PTR [rcx]
   140003447:	cmp    DWORD PTR [rax],0xe06d7363
   14000344d:	jne    0x140003472
   14000344f:	cmp    DWORD PTR [rax+0x18],0x4
   140003453:	jne    0x140003472
   140003455:	mov    ecx,DWORD PTR [rax+0x20]
   140003458:	lea    eax,[rcx-0x19930520]
   14000345e:	cmp    eax,0x2
   140003461:	jbe    0x14000346b
   140003463:	cmp    ecx,0x1994000
   140003469:	jne    0x140003472
   14000346b:	call   QWORD PTR [rip+0x104f]        # 0x1400044c0
   140003471:	int3   
   140003472:	xor    eax,eax
   140003474:	add    rsp,0x28
   140003478:	ret    
   140003479:	int3   
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	int3   
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	sub    rsp,0x28
   140003484:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140003440
   14000348b:	call   QWORD PTR [rip+0xbe7]        # 0x140004078
   140003491:	xor    eax,eax
   140003493:	add    rsp,0x28
   140003497:	ret    
   140003498:	int3   
   140003499:	int3   
   14000349a:	int3   
   14000349b:	int3   
   14000349c:	int3   
   14000349d:	int3   
   14000349e:	jmp    QWORD PTR [rip+0xf8c]        # 0x140004430
   1400034a4:	int3   
   1400034a5:	int3   
   1400034a6:	int3   
   1400034a7:	int3   
   1400034a8:	int3   
   1400034a9:	int3   
   1400034aa:	int3   
   1400034ab:	int3   
   1400034ac:	sub    rsp,0x18
   1400034b0:	xor    edx,edx
   1400034b2:	lea    rax,[rcx-0x1]
   1400034b6:	cmp    rax,0xfffffffffffffffd
   1400034ba:	ja     0x1400034f8
   1400034bc:	mov    eax,0x5a4d
   1400034c1:	cmp    WORD PTR [rcx],ax
   1400034c4:	jne    0x1400034f0
   1400034c6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400034c9:	jl     0x1400034f0
   1400034cb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400034d2:	jae    0x1400034f0
   1400034d4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400034d8:	add    rax,rcx
   1400034db:	mov    QWORD PTR [rsp],rax
   1400034df:	cmp    DWORD PTR [rax],0x4550
   1400034e5:	cmovne rax,rdx
   1400034e9:	mov    rdx,rax
   1400034ec:	mov    QWORD PTR [rsp],rax
   1400034f0:	jmp    0x1400034f8
   1400034f2:	xor    edx,edx
   1400034f4:	mov    QWORD PTR [rsp],rdx
   1400034f8:	mov    rax,rdx
   1400034fb:	add    rsp,0x18
   1400034ff:	ret    
   140003500:	int3   
   140003501:	int3   
   140003502:	int3   
   140003503:	int3   
   140003504:	int3   
   140003505:	int3   
   140003506:	int3   
   140003507:	int3   
   140003508:	rex push rbx
   14000350a:	sub    rsp,0x20
   14000350e:	mov    ebx,ecx
   140003510:	xor    ecx,ecx
   140003512:	call   QWORD PTR [rip+0xb48]        # 0x140004060
   140003518:	test   rax,rax
   14000351b:	je     0x140003545
   14000351d:	mov    rcx,rax
   140003520:	call   0x1400034ac
   140003525:	test   rax,rax
   140003528:	je     0x140003545
   14000352a:	mov    ecx,0x2
   14000352f:	cmp    WORD PTR [rax+0x5c],cx
   140003533:	jne    0x140003539
   140003535:	mov    eax,ecx
   140003537:	jmp    0x140003547
   140003539:	cmp    WORD PTR [rax+0x5c],0x3
   14000353e:	mov    eax,0x1
   140003543:	je     0x140003547
   140003545:	mov    eax,ebx
   140003547:	add    rsp,0x20
   14000354b:	pop    rbx
   14000354c:	ret    
   14000354d:	int3   
   14000354e:	int3   
   14000354f:	int3   
   140003550:	int3   
   140003551:	int3   
   140003552:	int3   
   140003553:	int3   
   140003554:	jmp    QWORD PTR [rip+0xede]        # 0x140004438
   14000355a:	int3   
   14000355b:	int3   
   14000355c:	int3   
   14000355d:	int3   
   14000355e:	int3   
   14000355f:	int3   
   140003560:	xor    eax,eax
   140003562:	ret    
   140003563:	int3   
   140003564:	int3   
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	int3   
   140003569:	int3   
   14000356a:	int3   
   14000356b:	int3   
   14000356c:	int3   
   14000356d:	int3   
   14000356e:	int3   
   14000356f:	int3   
   140003570:	movsxd r8,DWORD PTR [rcx+0x3c]
   140003574:	xor    r9d,r9d
   140003577:	add    r8,rcx
   14000357a:	mov    r10,rdx
   14000357d:	movzx  eax,WORD PTR [r8+0x14]
   140003582:	movzx  r11d,WORD PTR [r8+0x6]
   140003587:	add    rax,0x18
   14000358b:	add    rax,r8
   14000358e:	test   r11d,r11d
   140003591:	je     0x1400035b1
   140003593:	mov    edx,DWORD PTR [rax+0xc]
   140003596:	cmp    r10,rdx
   140003599:	jb     0x1400035a5
   14000359b:	mov    ecx,DWORD PTR [rax+0x8]
   14000359e:	add    ecx,edx
   1400035a0:	cmp    r10,rcx
   1400035a3:	jb     0x1400035b3
   1400035a5:	inc    r9d
   1400035a8:	add    rax,0x28
   1400035ac:	cmp    r9d,r11d
   1400035af:	jb     0x140003593
   1400035b1:	xor    eax,eax
   1400035b3:	ret    
   1400035b4:	int3   
   1400035b5:	int3   
   1400035b6:	int3   
   1400035b7:	int3   
   1400035b8:	int3   
   1400035b9:	int3   
   1400035ba:	int3   
   1400035bb:	int3   
   1400035bc:	int3   
   1400035bd:	int3   
   1400035be:	int3   
   1400035bf:	int3   
   1400035c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400035c5:	push   rdi
   1400035c6:	sub    rsp,0x20
   1400035ca:	mov    rbx,rcx
   1400035cd:	lea    rdi,[rip+0xffffffffffffca2c]        # 0x140000000
   1400035d4:	mov    rcx,rdi
   1400035d7:	call   0x140003620
   1400035dc:	test   eax,eax
   1400035de:	je     0x140003602
   1400035e0:	sub    rbx,rdi
   1400035e3:	mov    rdx,rbx
   1400035e6:	mov    rcx,rdi
   1400035e9:	call   0x140003570
   1400035ee:	test   rax,rax
   1400035f1:	je     0x140003602
   1400035f3:	mov    eax,DWORD PTR [rax+0x24]
   1400035f6:	shr    eax,0x1f
   1400035f9:	not    eax
   1400035fb:	and    eax,0x1
   1400035fe:	jmp    0x140003602
   140003600:	xor    eax,eax
   140003602:	mov    rbx,QWORD PTR [rsp+0x30]
   140003607:	add    rsp,0x20
   14000360b:	pop    rdi
   14000360c:	ret    
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	int3   
   140003611:	int3   
   140003612:	int3   
   140003613:	int3   
   140003614:	int3   
   140003615:	int3   
   140003616:	int3   
   140003617:	int3   
   140003618:	int3   
   140003619:	int3   
   14000361a:	int3   
   14000361b:	int3   
   14000361c:	int3   
   14000361d:	int3   
   14000361e:	int3   
   14000361f:	int3   
   140003620:	mov    rax,rcx
   140003623:	mov    ecx,0x5a4d
   140003628:	cmp    WORD PTR [rax],cx
   14000362b:	je     0x140003630
   14000362d:	xor    eax,eax
   14000362f:	ret    
   140003630:	movsxd rcx,DWORD PTR [rax+0x3c]
   140003634:	add    rcx,rax
   140003637:	xor    eax,eax
   140003639:	cmp    DWORD PTR [rcx],0x4550
   14000363f:	jne    0x14000364d
   140003641:	mov    edx,0x20b
   140003646:	cmp    WORD PTR [rcx+0x18],dx
   14000364a:	sete   al
   14000364d:	ret    
   14000364e:	int3   
   14000364f:	int3   
   140003650:	int3   
   140003651:	int3   
   140003652:	int3   
   140003653:	int3   
   140003654:	mov    QWORD PTR [rsp+0x20],rbx
   140003659:	push   rbp
   14000365a:	mov    rbp,rsp
   14000365d:	sub    rsp,0x20
   140003661:	and    QWORD PTR [rbp+0x18],0x0
   140003666:	movabs rbx,0x2b992ddfa232
   140003670:	mov    rax,QWORD PTR [rip+0x3991]        # 0x140007008
   140003677:	cmp    rax,rbx
   14000367a:	jne    0x14000370f
   140003680:	lea    rcx,[rbp+0x18]
   140003684:	call   QWORD PTR [rip+0x9b6]        # 0x140004040
   14000368a:	mov    rax,QWORD PTR [rbp+0x18]
   14000368e:	mov    QWORD PTR [rbp+0x10],rax
   140003692:	call   QWORD PTR [rip+0x9b8]        # 0x140004050
   140003698:	mov    eax,eax
   14000369a:	xor    QWORD PTR [rbp+0x10],rax
   14000369e:	call   QWORD PTR [rip+0x9a4]        # 0x140004048
   1400036a4:	mov    eax,eax
   1400036a6:	xor    QWORD PTR [rbp+0x10],rax
   1400036aa:	call   QWORD PTR [rip+0x988]        # 0x140004038
   1400036b0:	mov    eax,eax
   1400036b2:	shl    rax,0x18
   1400036b6:	xor    QWORD PTR [rbp+0x10],rax
   1400036ba:	call   QWORD PTR [rip+0x978]        # 0x140004038
   1400036c0:	mov    eax,eax
   1400036c2:	lea    rcx,[rbp+0x10]
   1400036c6:	xor    rax,QWORD PTR [rbp+0x10]
   1400036ca:	xor    rax,rcx
   1400036cd:	lea    rcx,[rbp+0x20]
   1400036d1:	mov    QWORD PTR [rbp+0x10],rax
   1400036d5:	call   QWORD PTR [rip+0x97d]        # 0x140004058
   1400036db:	mov    eax,DWORD PTR [rbp+0x20]
   1400036de:	movabs rcx,0xffffffffffff
   1400036e8:	shl    rax,0x20
   1400036ec:	xor    rax,QWORD PTR [rbp+0x20]
   1400036f0:	xor    rax,QWORD PTR [rbp+0x10]
   1400036f4:	and    rax,rcx
   1400036f7:	movabs rcx,0x2b992ddfa233
   140003701:	cmp    rax,rbx
   140003704:	cmove  rax,rcx
   140003708:	mov    QWORD PTR [rip+0x38f9],rax        # 0x140007008
   14000370f:	mov    rbx,QWORD PTR [rsp+0x48]
   140003714:	not    rax
   140003717:	mov    QWORD PTR [rip+0x38f2],rax        # 0x140007010
   14000371e:	add    rsp,0x20
   140003722:	pop    rbp
   140003723:	ret    
   140003724:	int3   
   140003725:	int3   
   140003726:	int3   
   140003727:	int3   
   140003728:	int3   
   140003729:	int3   
   14000372a:	jmp    QWORD PTR [rip+0xd40]        # 0x140004470
   140003730:	int3   
   140003731:	int3   
   140003732:	int3   
   140003733:	int3   
   140003734:	int3   
   140003735:	int3   
   140003736:	jmp    QWORD PTR [rip+0xd3c]        # 0x140004478
   14000373c:	int3   
   14000373d:	int3   
   14000373e:	int3   
   14000373f:	int3   
   140003740:	int3   
   140003741:	int3   
   140003742:	jmp    QWORD PTR [rip+0xd50]        # 0x140004498
   140003748:	int3   
   140003749:	int3   
   14000374a:	int3   
   14000374b:	int3   
   14000374c:	int3   
   14000374d:	int3   
   14000374e:	jmp    QWORD PTR [rip+0xd4c]        # 0x1400044a0
   140003754:	int3   
   140003755:	int3   
   140003756:	int3   
   140003757:	int3   
   140003758:	int3   
   140003759:	int3   
   14000375a:	jmp    QWORD PTR [rip+0xd48]        # 0x1400044a8
   140003760:	int3   
   140003761:	int3   
   140003762:	int3   
   140003763:	int3   
   140003764:	int3   
   140003765:	int3   
   140003766:	int3   
   140003767:	int3   
   140003768:	mov    QWORD PTR [rsp+0x8],rbx
   14000376d:	push   rdi
   14000376e:	sub    rsp,0x20
   140003772:	mov    edi,edx
   140003774:	mov    ebx,ecx
   140003776:	call   0x1400037a8
   14000377b:	mov    BYTE PTR [rax+0x28],bl
   14000377e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003783:	mov    DWORD PTR [rax+0x2070],edi
   140003789:	mov    eax,0x1
   14000378e:	add    rsp,0x20
   140003792:	pop    rdi
   140003793:	ret    
   140003794:	int3   
   140003795:	int3   
   140003796:	int3   
   140003797:	int3   
   140003798:	int3   
   140003799:	int3   
   14000379a:	int3   
   14000379b:	int3   
   14000379c:	jmp    0x1400037b4
   1400037a1:	int3   
   1400037a2:	int3   
   1400037a3:	int3   
   1400037a4:	int3   
   1400037a5:	int3   
   1400037a6:	int3   
   1400037a7:	int3   
   1400037a8:	jmp    QWORD PTR [rip+0xafa]        # 0x1400042a8
   1400037ae:	int3   
   1400037af:	int3   
   1400037b0:	int3   
   1400037b1:	int3   
   1400037b2:	int3   
   1400037b3:	int3   
   1400037b4:	jmp    QWORD PTR [rip+0xaf6]        # 0x1400042b0
   1400037ba:	int3   
   1400037bb:	int3   
   1400037bc:	int3   
   1400037bd:	int3   
   1400037be:	int3   
   1400037bf:	int3   
   1400037c0:	jmp    QWORD PTR [rip+0xd02]        # 0x1400044c8
   1400037c6:	int3   
   1400037c7:	int3   
   1400037c8:	int3   
   1400037c9:	int3   
   1400037ca:	int3   
   1400037cb:	int3   
   1400037cc:	sub    rsp,0x28
   1400037d0:	mov    r8,QWORD PTR [r9+0x38]
   1400037d4:	mov    rcx,rdx
   1400037d7:	mov    rdx,r9
   1400037da:	call   0x1400037f0
   1400037df:	mov    eax,0x1
   1400037e4:	add    rsp,0x28
   1400037e8:	ret    
   1400037e9:	int3   
   1400037ea:	int3   
   1400037eb:	int3   
   1400037ec:	int3   
   1400037ed:	int3   
   1400037ee:	int3   
   1400037ef:	int3   
   1400037f0:	rex push rbx
   1400037f2:	sub    rsp,0x20
   1400037f6:	mov    r11d,DWORD PTR [r8]
   1400037f9:	mov    rbx,rdx
   1400037fc:	and    r11d,0xfffffff8
   140003800:	mov    r9,rcx
   140003803:	test   BYTE PTR [r8],0x4
   140003807:	mov    r10,rcx
   14000380a:	je     0x14000381f
   14000380c:	mov    eax,DWORD PTR [r8+0x8]
   140003810:	movsxd r10,DWORD PTR [r8+0x4]
   140003814:	neg    eax
   140003816:	add    r10,rcx
   140003819:	movsxd rcx,eax
   14000381c:	and    r10,rcx
   14000381f:	movsxd rax,r11d
   140003822:	mov    rdx,QWORD PTR [rax+r10*1]
   140003826:	mov    rax,QWORD PTR [rbx+0x10]
   14000382a:	mov    ecx,DWORD PTR [rax+0x8]
   14000382d:	add    rcx,QWORD PTR [rbx+0x8]
   140003831:	test   BYTE PTR [rcx+0x3],0xf
   140003835:	je     0x140003843
   140003837:	movzx  eax,BYTE PTR [rcx+0x3]
   14000383b:	and    eax,0xfffffff0
   14000383e:	cdqe   
   140003840:	add    r9,rax
   140003843:	xor    r9,rdx
   140003846:	mov    rcx,r9
   140003849:	add    rsp,0x20
   14000384d:	pop    rbx
   14000384e:	jmp    0x140003150
   140003853:	int3   
   140003854:	int3   
   140003855:	int3   
   140003856:	int3   
   140003857:	int3   
   140003858:	int3   
   140003859:	int3   
   14000385a:	int3   
   14000385b:	int3   
   14000385c:	mov    rax,rsp
   14000385f:	mov    QWORD PTR [rax+0x8],rbx
   140003863:	mov    QWORD PTR [rax+0x10],rbp
   140003867:	mov    QWORD PTR [rax+0x18],rsi
   14000386b:	mov    QWORD PTR [rax+0x20],rdi
   14000386f:	push   r14
   140003871:	sub    rsp,0x20
   140003875:	mov    rbx,QWORD PTR [r9+0x38]
   140003879:	mov    rsi,rdx
   14000387c:	mov    r14,r8
   14000387f:	mov    rbp,rcx
   140003882:	mov    rdx,r9
   140003885:	mov    rcx,rsi
   140003888:	mov    rdi,r9
   14000388b:	lea    r8,[rbx+0x4]
   14000388f:	call   0x1400037f0
   140003894:	mov    r11d,DWORD PTR [rbx+0x4]
   140003898:	mov    r8d,0x1
   14000389e:	mov    r10d,DWORD PTR [rbp+0x4]
   1400038a2:	mov    eax,r11d
   1400038a5:	and    eax,r8d
   1400038a8:	and    r11d,0x2
   1400038ac:	and    r10b,0x66
   1400038b0:	cmove  r11d,eax
   1400038b4:	test   r11d,r11d
   1400038b7:	je     0x1400038cd
   1400038b9:	mov    r9,rdi
   1400038bc:	mov    r8,r14
   1400038bf:	mov    rdx,rsi
   1400038c2:	mov    rcx,rbp
   1400038c5:	call   0x1400037c0
   1400038ca:	mov    r8d,eax
   1400038cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038d2:	mov    eax,r8d
   1400038d5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400038da:	mov    rsi,QWORD PTR [rsp+0x40]
   1400038df:	mov    rdi,QWORD PTR [rsp+0x48]
   1400038e4:	add    rsp,0x20
   1400038e8:	pop    r14
   1400038ea:	ret    
   1400038eb:	int3   
   1400038ec:	int3   
   1400038ed:	int3   
   1400038ee:	int3   
   1400038ef:	int3   
   1400038f0:	int3   
   1400038f1:	int3   
   1400038f2:	jmp    QWORD PTR [rip+0xbd8]        # 0x1400044d0
   1400038f8:	int3   
   1400038f9:	int3   
   1400038fa:	int3   
   1400038fb:	int3   
   1400038fc:	int3   
   1400038fd:	int3   
   1400038fe:	int3   
   1400038ff:	int3   
   140003900:	int3   
   140003901:	int3   
   140003902:	int3   
   140003903:	int3   
   140003904:	int3   
   140003905:	int3   
   140003906:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003910:	jmp    rax
   140003912:	int3   
   140003913:	int3   
   140003914:	int3   
   140003915:	int3   
   140003916:	int3   
   140003917:	int3   
   140003918:	int3   
   140003919:	int3   
   14000391a:	int3   
   14000391b:	int3   
   14000391c:	int3   
   14000391d:	int3   
   14000391e:	int3   
   14000391f:	int3   
   140003920:	int3   
   140003921:	int3   
   140003922:	int3   
   140003923:	int3   
   140003924:	int3   
   140003925:	int3   
   140003926:	lea    rcx,[rdx+0x50]
   14000392d:	jmp    0x1400026b4
   140003932:	lea    rcx,[rdx+0x70]
   140003939:	jmp    0x140001608
   14000393e:	int3   
   14000393f:	int3   
   140003940:	int3   
   140003941:	int3   
   140003942:	int3   
   140003943:	int3   
   140003944:	lea    rcx,[rdx+0x28]
   14000394b:	jmp    0x1400026b4
   140003950:	int3   
   140003951:	int3   
   140003952:	int3   
   140003953:	int3   
   140003954:	int3   
   140003955:	int3   
   140003956:	lea    rcx,[rdx+0x58]
   14000395d:	jmp    0x1400026b4
   140003962:	lea    rcx,[rdx+0x40]
   140003969:	rex.W jmp QWORD PTR [rip+0x970]        # 0x1400042e0
   140003970:	int3   
   140003971:	int3   
   140003972:	int3   
   140003973:	int3   
   140003974:	int3   
   140003975:	int3   
   140003976:	lea    rcx,[rdx+0x20]
   14000397d:	jmp    0x1400026b4
   140003982:	int3   
   140003983:	int3   
   140003984:	int3   
   140003985:	int3   
   140003986:	int3   
   140003987:	int3   
   140003988:	lea    rcx,[rdx+0x38]
   14000398f:	jmp    0x1400026b4
   140003994:	mov    QWORD PTR [rsp+0x10],rdx
   140003999:	push   rbp
   14000399a:	sub    rsp,0x30
   14000399e:	mov    rbp,rdx
   1400039a1:	lea    rax,[rip+0x3678]        # 0x140007020
   1400039a8:	mov    rcx,QWORD PTR [rip+0x3671]        # 0x140007020
   1400039af:	cmp    rcx,rax
   1400039b2:	je     0x1400039cf
   1400039b4:	test   BYTE PTR [rcx+0x1c],0x4
   1400039b8:	je     0x1400039cf
   1400039ba:	mov    edx,0xb
   1400039bf:	lea    r8,[rip+0x1302]        # 0x140004cc8
   1400039c6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400039ca:	call   0x14000145c
   1400039cf:	mov    rcx,QWORD PTR [rbp+0x78]
   1400039d3:	call   QWORD PTR [rip+0xa47]        # 0x140004420
   1400039d9:	nop
   1400039da:	lea    rax,[rip+0xffffffffffffe23f]        # 0x140001c20
   1400039e1:	add    rsp,0x30
   1400039e5:	pop    rbp
   1400039e6:	ret    
   1400039e7:	int3   
   1400039e8:	int3   
   1400039e9:	int3   
   1400039ea:	int3   
   1400039eb:	int3   
   1400039ec:	int3   
   1400039ed:	int3   
   1400039ee:	lea    rcx,[rdx+0x28]
   1400039f5:	jmp    0x1400026b4
   1400039fa:	lea    rcx,[rdx+0x68]
   140003a01:	rex.W jmp QWORD PTR [rip+0x8d8]        # 0x1400042e0
   140003a08:	lea    rcx,[rdx+0x60]
   140003a0f:	rex.W jmp QWORD PTR [rip+0x8ca]        # 0x1400042e0
   140003a16:	int3   
   140003a17:	int3   
   140003a18:	int3   
   140003a19:	int3   
   140003a1a:	int3   
   140003a1b:	int3   
   140003a1c:	lea    rcx,[rdx+0x40]
   140003a23:	jmp    0x1400026b4
   140003a28:	int3   
   140003a29:	int3   
   140003a2a:	int3   
   140003a2b:	int3   
   140003a2c:	int3   
   140003a2d:	int3   
   140003a2e:	rex push rbp
   140003a30:	sub    rsp,0x20
   140003a34:	mov    rbp,rdx
   140003a37:	mov    rax,QWORD PTR [rcx]
   140003a3a:	mov    rdx,rcx
   140003a3d:	mov    ecx,DWORD PTR [rax]
   140003a3f:	call   0x14000349e
   140003a44:	nop
   140003a45:	add    rsp,0x20
   140003a49:	pop    rbp
   140003a4a:	ret    
   140003a4b:	int3   
   140003a4c:	int3   
   140003a4d:	int3   
   140003a4e:	int3   
   140003a4f:	int3   
   140003a50:	int3   
   140003a51:	int3   
   140003a52:	rex push rbp
   140003a54:	sub    rsp,0x20
   140003a58:	mov    rbp,rdx
   140003a5b:	mov    ecx,0x8
   140003a60:	call   0x14000374e
   140003a65:	nop
   140003a66:	add    rsp,0x20
   140003a6a:	pop    rbp
   140003a6b:	ret    
   140003a6c:	int3   
   140003a6d:	int3   
   140003a6e:	int3   
   140003a6f:	int3   
   140003a70:	int3   
   140003a71:	int3   
   140003a72:	int3   
   140003a73:	int3   
   140003a74:	int3   
   140003a75:	int3   
   140003a76:	int3   
   140003a77:	int3   
   140003a78:	int3   
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	rex push rbp
   140003a82:	sub    rsp,0x20
   140003a86:	mov    rbp,rdx
   140003a89:	mov    rax,QWORD PTR [rcx]
   140003a8c:	xor    ecx,ecx
   140003a8e:	cmp    DWORD PTR [rax],0xc0000005
   140003a94:	sete   cl
   140003a97:	mov    eax,ecx
   140003a99:	add    rsp,0x20
   140003a9d:	pop    rbp
   140003a9e:	ret    
   140003a9f:	int3   
   140003aa0:	int3   
   140003aa1:	int3   
   140003aa2:	int3   
   140003aa3:	int3   
   140003aa4:	int3   
   140003aa5:	int3   
   140003aa6:	int3   
   140003aa7:	int3   
   140003aa8:	int3   
   140003aa9:	int3   
   140003aaa:	int3   
   140003aab:	int3   
   140003aac:	int3   
   140003aad:	int3   
   140003aae:	int3   
   140003aaf:	int3   
   140003ab0:	lea    rcx,[rip+0x3cb9]        # 0x140007770
   140003ab7:	rex.W jmp QWORD PTR [rip+0x7d2]        # 0x140004290

Disassembly of section .rdata:

0000000140004000 <.rdata>:
   140004000:	push   rax
   140004001:	(bad)  
   140004002:	add    BYTE PTR [rax],al
   140004004:	add    BYTE PTR [rax],al
   140004006:	add    BYTE PTR [rax],al
   140004008:	push   0x60
   14000400d:	add    BYTE PTR [rax],al
   14000400f:	add    BYTE PTR [rsi+0x60],bh
   140004012:	add    BYTE PTR [rax],al
   140004014:	add    BYTE PTR [rax],al
   140004016:	add    BYTE PTR [rax],al
   140004018:	xchg   esp,eax
   140004019:	(bad)  
   14000401a:	add    BYTE PTR [rax],al
   14000401c:	add    BYTE PTR [rax],al
   14000401e:	add    BYTE PTR [rax],al
   140004020:	stos   BYTE PTR es:[rdi],al
   140004021:	(bad)  
   140004022:	add    BYTE PTR [rax],al
   140004024:	add    BYTE PTR [rax],al
   140004026:	add    BYTE PTR [rax],al
   140004028:	ret    0x60
	...
   140004037:	add    BYTE PTR [rsp+riz*2+0x0],bh
   14000403e:	add    BYTE PTR [rax],al
   140004040:	movabs ds:0x8c00000000000064,al
   140004049:	add    BYTE PTR fs:[rax],al
   14000404c:	add    BYTE PTR [rax],al
   14000404e:	add    BYTE PTR [rax],al
   140004050:	jbe    0x1400040b6
   140004052:	add    BYTE PTR [rax],al
   140004054:	add    BYTE PTR [rax],al
   140004056:	add    BYTE PTR [rax],al
   140004058:	pop    rsp
   140004059:	add    BYTE PTR fs:[rax],al
   14000405c:	add    BYTE PTR [rax],al
   14000405e:	add    BYTE PTR [rax],al
   140004060:	rex.W
   140004061:	add    BYTE PTR fs:[rax],al
   140004064:	add    BYTE PTR [rax],al
   140004066:	add    BYTE PTR [rax],al
   140004068:	xor    al,0x64
   14000406a:	add    BYTE PTR [rax],al
   14000406c:	add    BYTE PTR [rax],al
   14000406e:	add    BYTE PTR [rax],al
   140004070:	and    BYTE PTR [rax+rax*1+0x0],ah
   140004074:	add    BYTE PTR [rax],al
   140004076:	add    BYTE PTR [rax],al
   140004078:	add    ah,BYTE PTR [rax+rax*1+0x0]
   14000407c:	add    BYTE PTR [rax],al
   14000407e:	add    BYTE PTR [rax],al
   140004080:	out    0x63,al
   140004082:	add    BYTE PTR [rax],al
   140004084:	add    BYTE PTR [rax],al
   140004086:	add    BYTE PTR [rax],al
   140004088:	(bad)  
   140004089:	movsxd eax,DWORD PTR [rax]
   14000408b:	add    BYTE PTR [rax],al
   14000408d:	add    BYTE PTR [rax],al
   14000408f:	add    ah,cl
   140004091:	movsxd eax,DWORD PTR [rax]
   140004093:	add    BYTE PTR [rax],al
   140004095:	add    BYTE PTR [rax],al
   140004097:	add    BYTE PTR [rcx+riz*2],dl
   14000409a:	add    BYTE PTR [rax],al
   14000409c:	add    BYTE PTR [rax],al
   14000409e:	add    BYTE PTR [rax],al
   1400040a0:	and    BYTE PTR [rcx+0x0],ah
   1400040a3:	add    BYTE PTR [rax],al
   1400040a5:	add    BYTE PTR [rax],al
   1400040a7:	add    BYTE PTR [rcx+riz*2],dh
   1400040aa:	add    BYTE PTR [rax],al
   1400040ac:	add    BYTE PTR [rax],al
   1400040ae:	add    BYTE PTR [rax],al
   1400040b0:	int3   
   1400040b1:	add    BYTE PTR fs:[rax],al
   1400040b4:	add    BYTE PTR [rax],al
   1400040b6:	add    BYTE PTR [rax],al
   1400040b8:	loop   0x14000411e
   1400040ba:	add    BYTE PTR [rax],al
   1400040bc:	add    BYTE PTR [rax],al
   1400040be:	add    BYTE PTR [rax],al
   1400040c0:	add    al,0x61
   1400040c2:	add    BYTE PTR [rax],al
   1400040c4:	add    BYTE PTR [rax],al
   1400040c6:	add    BYTE PTR [rax],al
   1400040c8:	mul    BYTE PTR [rax+0x0]
   1400040cb:	add    BYTE PTR [rax],al
   1400040cd:	add    BYTE PTR [rax],al
   1400040cf:	add    al,ah
   1400040d1:	(bad)  
	...
   1400040de:	add    BYTE PTR [rax],al
   1400040e0:	push   rsi
   1400040e1:	adc    al,BYTE PTR [rax]
   1400040e3:	add    BYTE PTR [rax],al
   1400040e5:	add    BYTE PTR [rax],al
   1400040e7:	sbb    BYTE PTR [rdx+rbx*1+0x0],0x0
   1400040ef:	adc    dl,0x15
   1400040f2:	add    BYTE PTR [rax],al
   1400040f4:	add    BYTE PTR [rax],al
   1400040f6:	add    BYTE PTR [rax+0x95f],al
   1400040fc:	add    BYTE PTR [rax],al
   1400040fe:	add    BYTE PTR [rax+0x165a],al
   140004104:	add    BYTE PTR [rax],al
   140004106:	add    BYTE PTR [rax+0x1290],al
   14000410c:	add    BYTE PTR [rax],al
   14000410e:	add    BYTE PTR [rax+0x6f1],al
   140004114:	add    BYTE PTR [rax],al
   140004116:	add    BYTE PTR [rax+0x110d],al
   14000411c:	add    BYTE PTR [rax],al
   14000411e:	add    BYTE PTR [rax+0x1925],al
   140004124:	add    BYTE PTR [rax],al
   140004126:	add    BYTE PTR [rax+0x151e],al
   14000412c:	add    BYTE PTR [rax],al
   14000412e:	add    BYTE PTR [rax+0x147d],al
   140004134:	add    BYTE PTR [rax],al
   140004136:	add    BYTE PTR [rax+0x1271],al
   14000413c:	add    BYTE PTR [rax],al
   14000413e:	add    BYTE PTR [rax+0x1637],al
   140004144:	add    BYTE PTR [rax],al
   140004146:	add    BYTE PTR [rax+0x165c],al
   14000414c:	add    BYTE PTR [rax],al
   14000414e:	add    BYTE PTR [rax+0x1110],al
   140004154:	add    BYTE PTR [rax],al
   140004156:	add    BYTE PTR [rax+0x13c9],al
   14000415c:	add    BYTE PTR [rax],al
   14000415e:	add    BYTE PTR [rax+0x1662],al
   140004164:	add    BYTE PTR [rax],al
   140004166:	add    BYTE PTR [rax+0x164f],al
   14000416c:	add    BYTE PTR [rax],al
   14000416e:	add    BYTE PTR [rax+0x17a5],al
   140004174:	add    BYTE PTR [rax],al
   140004176:	add    BYTE PTR [rax+0xbe9],al
   14000417c:	add    BYTE PTR [rax],al
   14000417e:	add    BYTE PTR [rax+0xcab],al
   140004184:	add    BYTE PTR [rax],al
   140004186:	add    BYTE PTR [rax+0x1646],al
   14000418c:	add    BYTE PTR [rax],al
   14000418e:	add    BYTE PTR [rax+0x12cf],al
   140004194:	add    BYTE PTR [rax],al
   140004196:	add    BYTE PTR [rax+0xc9f],al
   14000419c:	add    BYTE PTR [rax],al
   14000419e:	add    BYTE PTR [rax+0xd26],al
   1400041a4:	add    BYTE PTR [rax],al
   1400041a6:	add    BYTE PTR [rax+0xbec],al
   1400041ac:	add    BYTE PTR [rax],al
   1400041ae:	add    BYTE PTR [rax+0xc5e],al
   1400041b4:	add    BYTE PTR [rax],al
   1400041b6:	add    BYTE PTR [rax+0xbe6],al
   1400041bc:	add    BYTE PTR [rax],al
   1400041be:	add    BYTE PTR [rax+0xff2],al
   1400041c4:	add    BYTE PTR [rax],al
   1400041c6:	add    BYTE PTR [rax+0xff3],al
   1400041cc:	add    BYTE PTR [rax],al
   1400041ce:	add    BYTE PTR [rax+0xfed],al
   1400041d4:	add    BYTE PTR [rax],al
   1400041d6:	add    BYTE PTR [rax+0xc5c],al
   1400041dc:	add    BYTE PTR [rax],al
   1400041de:	add    BYTE PTR [rax+0x1113],al
   1400041e4:	add    BYTE PTR [rax],al
   1400041e6:	add    BYTE PTR [rax+0x1377],al
   1400041ec:	add    BYTE PTR [rax],al
   1400041ee:	add    BYTE PTR [rax+0x12a2],al
   1400041f4:	add    BYTE PTR [rax],al
   1400041f6:	add    BYTE PTR [rax+0xf4c],al
   1400041fc:	add    BYTE PTR [rax],al
   1400041fe:	add    BYTE PTR [rax+0xac0],al
   140004204:	add    BYTE PTR [rax],al
   140004206:	add    BYTE PTR [rax+0x9d5],al
   14000420c:	add    BYTE PTR [rax],al
   14000420e:	add    BYTE PTR [rax+0x5da],al
   140004214:	add    BYTE PTR [rax],al
   140004216:	add    BYTE PTR [rax+0xfb1],al
   14000421c:	add    BYTE PTR [rax],al
   14000421e:	add    BYTE PTR [rax+0x146d],al
   140004224:	add    BYTE PTR [rax],al
   140004226:	add    BYTE PTR [rax+0x12b5],al
   14000422c:	add    BYTE PTR [rax],al
   14000422e:	add    BYTE PTR [rax+0xa6e],al
   140004234:	add    BYTE PTR [rax],al
   140004236:	add    BYTE PTR [rax+0x80c],al
   14000423c:	add    BYTE PTR [rax],al
   14000423e:	add    BYTE PTR [rax+0x1a9e],al
   140004244:	add    BYTE PTR [rax],al
   140004246:	add    BYTE PTR [rax+0xf5d],al
   14000424c:	add    BYTE PTR [rax],al
   14000424e:	add    BYTE PTR [rax+0x156c],al
   140004254:	add    BYTE PTR [rax],al
   140004256:	add    BYTE PTR [rax+0x6c8],al
   14000425c:	add    BYTE PTR [rax],al
   14000425e:	add    BYTE PTR [rax+0x1633],al
   140004264:	add    BYTE PTR [rax],al
   140004266:	add    BYTE PTR [rax+0x999],al
   14000426c:	add    BYTE PTR [rax],al
   14000426e:	add    BYTE PTR [rax+0x85c],al
   140004274:	add    BYTE PTR [rax],al
   140004276:	add    BYTE PTR [rax+0x1643],al
   14000427c:	add    BYTE PTR [rax],al
   14000427e:	add    BYTE PTR [rax+0x137c],al
   140004284:	add    BYTE PTR [rax],al
   140004286:	add    BYTE PTR [rax+0x5e1],al
   14000428c:	add    BYTE PTR [rax],al
   14000428e:	add    BYTE PTR [rax+0x427],al
   140004294:	add    BYTE PTR [rax],al
   140004296:	add    BYTE PTR [rax+0x293],al
   14000429c:	add    BYTE PTR [rax],al
   14000429e:	add    BYTE PTR [rax+0x11f6],al
   1400042a4:	add    BYTE PTR [rax],al
   1400042a6:	add    BYTE PTR [rax+0x5b7],al
   1400042ac:	add    BYTE PTR [rax],al
   1400042ae:	add    BYTE PTR [rax+0x630],al
   1400042b4:	add    BYTE PTR [rax],al
   1400042b6:	add    BYTE PTR [rax+0x12a3],al
   1400042bc:	add    BYTE PTR [rax],al
   1400042be:	add    BYTE PTR [rax+0xb1e],al
   1400042c4:	add    BYTE PTR [rax],al
   1400042c6:	add    BYTE PTR [rax+0x57c],al
   1400042cc:	add    BYTE PTR [rax],al
   1400042ce:	add    BYTE PTR [rax+0xa69],al
   1400042d4:	add    BYTE PTR [rax],al
   1400042d6:	add    BYTE PTR [rax+0x1179],al
   1400042dc:	add    BYTE PTR [rax],al
   1400042de:	add    BYTE PTR [rax+0x410],al
   1400042e4:	add    BYTE PTR [rax],al
   1400042e6:	add    BYTE PTR [rax+0x272],al
   1400042ec:	add    BYTE PTR [rax],al
   1400042ee:	add    BYTE PTR [rax+0x18b8],al
   1400042f4:	add    BYTE PTR [rax],al
   1400042f6:	add    BYTE PTR [rax+0x101c],al
   1400042fc:	add    BYTE PTR [rax],al
   1400042fe:	add    BYTE PTR [rax+0x13d5],al
   140004304:	add    BYTE PTR [rax],al
   140004306:	add    BYTE PTR [rax+0x11cd],al
   14000430c:	add    BYTE PTR [rax],al
   14000430e:	add    BYTE PTR [rax+0x354],al
   140004314:	add    BYTE PTR [rax],al
   140004316:	add    BYTE PTR [rax+0x151],al
   14000431c:	add    BYTE PTR [rax],al
   14000431e:	add    BYTE PTR [rax+0x714],al
   140004324:	add    BYTE PTR [rax],al
   140004326:	add    BYTE PTR [rax+0x1a9d],al
   14000432c:	add    BYTE PTR [rax],al
   14000432e:	add    BYTE PTR [rax+0x12e4],al
   140004334:	add    BYTE PTR [rax],al
   140004336:	add    BYTE PTR [rax+0x9ff],al
   14000433c:	add    BYTE PTR [rax],al
   14000433e:	add    BYTE PTR [rax+0x9d3],al
   140004344:	add    BYTE PTR [rax],al
   140004346:	add    BYTE PTR [rax+0x17b7],al
   14000434c:	add    BYTE PTR [rax],al
   14000434e:	add    BYTE PTR [rax+0x105f],al
   140004354:	add    BYTE PTR [rax],al
   140004356:	add    BYTE PTR [rax+0x56c],al
   14000435c:	add    BYTE PTR [rax],al
   14000435e:	add    BYTE PTR [rax+0x15ef],al
   140004364:	add    BYTE PTR [rax],al
   140004366:	add    BYTE PTR [rax+0x96c],al
   14000436c:	add    BYTE PTR [rax],al
   14000436e:	add    BYTE PTR [rax+0xd22],al
   140004374:	add    BYTE PTR [rax],al
   140004376:	add    BYTE PTR [rax+0xd8c],al
   14000437c:	add    BYTE PTR [rax],al
   14000437e:	add    BYTE PTR [rax+0x161f],al
   140004384:	add    BYTE PTR [rax],al
   140004386:	add    BYTE PTR [rax+0x0],al
   14000438c:	add    BYTE PTR [rax],al
   14000438e:	add    BYTE PTR [rax],al
   140004390:	and    ah,BYTE PTR [rbx+0x0]
   140004393:	add    BYTE PTR [rax],al
   140004395:	add    BYTE PTR [rax],al
   140004397:	add    BYTE PTR [rsi],dh
   140004399:	movsxd eax,DWORD PTR [rax]
   14000439b:	add    BYTE PTR [rax],al
   14000439d:	add    BYTE PTR [rax],al
   14000439f:	add    BYTE PTR [rbx+riz*2+0x0],al
   1400043a3:	add    BYTE PTR [rax],al
   1400043a5:	add    BYTE PTR [rax],al
   1400043a7:	add    BYTE PTR [rdx+0x63],bl
	...
   1400043b6:	add    BYTE PTR [rax],al
   1400043b8:	xchg   BYTE PTR [rbx+0x0],ah
   1400043bb:	add    BYTE PTR [rax],al
   1400043bd:	add    BYTE PTR [rax],al
   1400043bf:	add    BYTE PTR [rdx+0x63],bl
   1400043c5:	add    BYTE PTR [rax],al
   1400043c7:	add    BYTE PTR [rax+0x63],dh
   1400043cd:	add    BYTE PTR [rax],al
   1400043cf:	add    BYTE PTR [rbx+riz*2+0x0],bh
	...
   1400043df:	add    al,dh
   1400043e1:	add    BYTE PTR fs:[rax],al
   1400043e4:	add    BYTE PTR [rax],al
   1400043e6:	add    BYTE PTR [rax],al
   1400043e8:	push   rsp
   1400043e9:	(bad)  
   1400043ea:	add    BYTE PTR [rax],al
   1400043ec:	add    BYTE PTR [rax],al
   1400043ee:	add    BYTE PTR [rax],al
   1400043f0:	adc    BYTE PTR [rbp+0x0],ah
   1400043f3:	add    BYTE PTR [rax],al
   1400043f5:	add    BYTE PTR [rax],al
   1400043f7:	add    BYTE PTR [rax],al
   1400043f9:	add    BYTE PTR gs:[rax],al
   1400043fc:	add    BYTE PTR [rax],al
   1400043fe:	add    BYTE PTR [rax],al
   140004400:	mov    WORD PTR [rcx+0x0],fs
   140004403:	add    BYTE PTR [rax],al
   140004405:	add    BYTE PTR [rax],al
   140004407:	add    BYTE PTR [rcx+riz*2+0x0],bh
   14000440b:	add    BYTE PTR [rax],al
   14000440d:	add    BYTE PTR [rax],al
   14000440f:	add    BYTE PTR [rax+0x61],ch
	...
   14000441e:	add    BYTE PTR [rax],al
   140004420:	mov    al,0x61
   140004422:	add    BYTE PTR [rax],al
   140004424:	add    BYTE PTR [rax],al
   140004426:	add    BYTE PTR [rax],al
   140004428:	mov    eax,0x61
   14000442d:	add    BYTE PTR [rax],al
   14000442f:	add    dl,al
   140004431:	(bad)  
   140004432:	add    BYTE PTR [rax],al
   140004434:	add    BYTE PTR [rax],al
   140004436:	add    BYTE PTR [rax],al
   140004438:	shl    BYTE PTR [rcx+0x0],1
   14000443b:	add    BYTE PTR [rax],al
   14000443d:	add    BYTE PTR [rax],al
   14000443f:	add    dh,bl
   140004441:	(bad)  
   140004442:	add    BYTE PTR [rax],al
   140004444:	add    BYTE PTR [rax],al
   140004446:	add    BYTE PTR [rax],al
   140004448:	lock (bad) 
   14000444a:	add    BYTE PTR [rax],al
   14000444c:	add    BYTE PTR [rax],al
   14000444e:	add    BYTE PTR [rax],al
   140004450:	add    ah,BYTE PTR [rdx+0x0]
   140004453:	add    BYTE PTR [rax],al
   140004455:	add    BYTE PTR [rax],al
   140004457:	add    BYTE PTR [rdx],cl
   140004459:	(bad)  
   14000445a:	add    BYTE PTR [rax],al
   14000445c:	add    BYTE PTR [rax],al
   14000445e:	add    BYTE PTR [rax],al
   140004460:	adc    ah,BYTE PTR [rdx+0x0]
   140004463:	add    BYTE PTR [rax],al
   140004465:	add    BYTE PTR [rax],al
   140004467:	add    BYTE PTR [rdx+riz*2],bl
   14000446a:	add    BYTE PTR [rax],al
   14000446c:	add    BYTE PTR [rax],al
   14000446e:	add    BYTE PTR [rax],al
   140004470:	xor    BYTE PTR [rdx+0x0],ah
   140004473:	add    BYTE PTR [rax],al
   140004475:	add    BYTE PTR [rax],al
   140004477:	add    BYTE PTR [rdx+riz*2],bh
   14000447a:	add    BYTE PTR [rax],al
   14000447c:	add    BYTE PTR [rax],al
   14000447e:	add    BYTE PTR [rax],al
   140004480:	push   rsp
   140004481:	(bad)  
   140004482:	add    BYTE PTR [rax],al
   140004484:	add    BYTE PTR [rax],al
   140004486:	add    BYTE PTR [rax],al
   140004488:	pop    rsi
   140004489:	(bad)  
   14000448a:	add    BYTE PTR [rax],al
   14000448c:	add    BYTE PTR [rax],al
   14000448e:	add    BYTE PTR [rax],al
   140004490:	push   0x62
   140004495:	add    BYTE PTR [rax],al
   140004497:	add    BYTE PTR [rdx+riz*2+0x0],dh
   14000449b:	add    BYTE PTR [rax],al
   14000449d:	add    BYTE PTR [rax],al
   14000449f:	add    BYTE PTR [rdx+riz*2+0x0],bh
   1400044a3:	add    BYTE PTR [rax],al
   1400044a5:	add    BYTE PTR [rax],al
   1400044a7:	add    BYTE PTR [rsi+0x62],al
   1400044ad:	add    BYTE PTR [rax],al
   1400044af:	add    BYTE PTR [rdx+riz*2+0x0],dl
   1400044b6:	add    BYTE PTR [rax],al
   1400044b8:	sahf   
   1400044b9:	(bad)  
   1400044ba:	add    BYTE PTR [rax],al
   1400044bc:	add    BYTE PTR [rax],al
   1400044be:	add    BYTE PTR [rax],al
   1400044c0:	ret    0x62
   1400044c3:	add    BYTE PTR [rax],al
   1400044c5:	add    BYTE PTR [rax],al
   1400044c7:	add    BYTE PTR [rdx],dh
   1400044c9:	add    BYTE PTR gs:[rax],al
   1400044cc:	add    BYTE PTR [rax],al
   1400044ce:	add    BYTE PTR [rax],al
   1400044d0:	rex.W
   1400044d1:	add    BYTE PTR gs:[rax],al
	...
   1400044e0:	(bad)  
   1400044e1:	(bad)  
   1400044e2:	add    BYTE PTR [rax],al
   1400044e4:	add    BYTE PTR [rax],al
   1400044e6:	add    BYTE PTR [rax],al
   1400044e8:	add    al,0x63
   1400044ea:	add    BYTE PTR [rax],al
   1400044ec:	add    BYTE PTR [rax],al
   1400044ee:	add    BYTE PTR [rax],al
   1400044f0:	and    BYTE PTR [rbp+0x0],ah
   1400044f3:	add    BYTE PTR [rax],al
   1400044f5:	add    BYTE PTR [rax],al
   1400044f7:	add    dh,dl
   1400044f9:	(bad)  
	...
   140004506:	add    BYTE PTR [rax],al
   140004508:	push   rax
   140004509:	adc    al,0x0
   14000450b:	rex add DWORD PTR [rax],eax
   14000450e:	add    BYTE PTR [rax],al
   140004510:	adc    BYTE PTR [rcx],bh
   140004512:	add    BYTE PTR [rax+0x1],al
	...
   14000451d:	add    BYTE PTR [rax],al
   14000451f:	add    BYTE PTR [rax+0x2e],dl
   140004522:	add    BYTE PTR [rax+0x1],al
   140004525:	add    BYTE PTR [rax],al
   140004527:	add    BYTE PTR [rax+0x1400010],al
   14000452d:	add    BYTE PTR [rax],al
   14000452f:	add    BYTE PTR [rax],al
   140004531:	adc    BYTE PTR [rax],al
   140004533:	rex add DWORD PTR [rax],eax
	...
   140004546:	add    BYTE PTR [rax],al
   140004548:	jo     0x140004577
   14000454a:	add    BYTE PTR [rax+0x1],al
   14000454d:	add    BYTE PTR [rax],al
   14000454f:	add    BYTE PTR [rax+0x1400034],al
	...
   140004561:	adc    BYTE PTR [rax],al
   140004563:	add    BYTE PTR [rax-0x4ffffff0],al
   140004569:	adc    BYTE PTR [rax],al
   14000456b:	add    BYTE PTR [rax+0x11],al
   14000456e:	add    BYTE PTR [rax],al
   140004570:	push   rax
   140004571:	adc    DWORD PTR [rax],eax
   140004573:	add    BYTE PTR [rax+0x11],ah
   140004576:	add    BYTE PTR [rax],al
   140004578:	movabs al,ds:0x50000013a0000011
   140004581:	adc    al,0x0
   140004583:	add    al,al
   140004585:	adc    al,0x0
   140004587:	add    BYTE PTR [rax-0x3fffffeb],dh
   14000458d:	adc    eax,0x15d00000
   140004592:	add    BYTE PTR [rax],al
   140004594:	jo     0x1400045ac
   140004596:	add    BYTE PTR [rax],al
   140004598:	rcl    BYTE PTR [rsi],0x0
   14000459b:	add    al,dl
   14000459d:	(bad)  
   14000459e:	add    BYTE PTR [rax],al
   1400045a0:	loopne 0x1400045b8
   1400045a2:	add    BYTE PTR [rax],al
   1400045a4:	sbb    BYTE PTR [rcx],0x0
   1400045a7:	add    al,dh
   1400045a9:	sbb    DWORD PTR [rax],eax
   1400045ab:	add    BYTE PTR [rax+0x7000001b],al
   1400045b1:	sbb    al,0x0
   1400045b3:	add    BYTE PTR [rax+0x1d],al
   1400045b6:	add    BYTE PTR [rax],al
   1400045b8:	(bad)  
   1400045b9:	sbb    eax,0x29700000
   1400045be:	add    BYTE PTR [rax],al
   1400045c0:	sub    BYTE PTR [rcx],0x0
   1400045c3:	add    BYTE PTR [rax-0x5fffffd7],dl
   1400045c9:	sub    DWORD PTR [rax],eax
   1400045cb:	add    BYTE PTR [rax-0x3fffffd7],dh
   1400045d1:	sub    DWORD PTR [rax],eax
   1400045d3:	add    al,dl
   1400045d5:	sub    DWORD PTR [rax],eax
   1400045d7:	add    al,ah
   1400045d9:	sub    DWORD PTR [rax],eax
   1400045db:	add    al,dh
   1400045dd:	sub    DWORD PTR [rax],eax
   1400045df:	add    BYTE PTR [rax],al
   1400045e1:	sub    al,BYTE PTR [rax]
   1400045e3:	add    BYTE PTR [rax],dl
   1400045e5:	sub    al,BYTE PTR [rax]
   1400045e7:	add    BYTE PTR [rax],ah
   1400045e9:	sub    al,BYTE PTR [rax]
   1400045eb:	add    BYTE PTR [rax],dh
   1400045ed:	sub    al,BYTE PTR [rax]
   1400045ef:	add    BYTE PTR [rax+0x2a],al
   1400045f2:	add    BYTE PTR [rax],al
   1400045f4:	push   rax
   1400045f5:	sub    al,BYTE PTR [rax]
   1400045f7:	add    BYTE PTR [rax+0x2a],ah
   1400045fa:	add    BYTE PTR [rax],al
   1400045fc:	jo     0x140004628
   1400045fe:	add    BYTE PTR [rax],al
   140004600:	sub    BYTE PTR [rdx],0x0
   140004603:	add    BYTE PTR [rax-0x5fffffd6],dl
   140004609:	sub    al,BYTE PTR [rax]
   14000460b:	add    BYTE PTR [rax-0x3fffffd6],dh
   140004611:	sub    al,BYTE PTR [rax]
   140004613:	add    al,dl
   140004615:	sub    al,BYTE PTR [rax]
   140004617:	add    al,ah
   140004619:	sub    al,BYTE PTR [rax]
   14000461b:	add    al,dh
   14000461d:	sub    al,BYTE PTR [rax]
   14000461f:	add    BYTE PTR [rax],al
   140004621:	sub    eax,DWORD PTR [rax]
   140004623:	add    BYTE PTR [rax],dl
   140004625:	sub    eax,DWORD PTR [rax]
   140004627:	add    BYTE PTR [rax],ah
   140004629:	sub    eax,DWORD PTR [rax]
   14000462b:	add    BYTE PTR [rax],dh
   14000462d:	sub    eax,DWORD PTR [rax]
   14000462f:	add    BYTE PTR [rax+0x2b],al
   140004632:	add    BYTE PTR [rax],al
   140004634:	push   rax
   140004635:	sub    eax,DWORD PTR [rax]
   140004637:	add    BYTE PTR [rax+0x2b],ah
   14000463a:	add    BYTE PTR [rax],al
   14000463c:	jo     0x140004669
   14000463e:	add    BYTE PTR [rax],al
   140004640:	sub    BYTE PTR [rbx],0x0
   140004643:	add    BYTE PTR [rax-0x5fffffd5],dl
   140004649:	sub    eax,DWORD PTR [rax]
   14000464b:	add    BYTE PTR [rax-0x3fffffd5],dh
   140004651:	sub    eax,DWORD PTR [rax]
   140004653:	add    al,dl
   140004655:	sub    eax,DWORD PTR [rax]
   140004657:	add    al,ah
   140004659:	sub    eax,DWORD PTR [rax]
   14000465b:	add    al,dh
   14000465d:	sub    eax,DWORD PTR [rax]
   14000465f:	add    BYTE PTR [rax],al
   140004661:	sub    al,0x0
   140004663:	add    BYTE PTR [rax],dl
   140004665:	sub    al,0x0
   140004667:	add    BYTE PTR [rax],ah
   140004669:	sub    al,0x0
   14000466b:	add    BYTE PTR [rax],dh
   14000466d:	sub    al,0x0
   14000466f:	add    BYTE PTR [rax+0x2c],al
   140004672:	add    BYTE PTR [rax],al
   140004674:	push   rax
   140004675:	sub    al,0x0
   140004677:	add    BYTE PTR [rax+0x2c],ah
   14000467a:	add    BYTE PTR [rax],al
   14000467c:	jo     0x1400046aa
   14000467e:	add    BYTE PTR [rax],al
   140004680:	sub    BYTE PTR [rax+rax*1],0x0
   140004684:	nop
   140004685:	sub    al,0x0
   140004687:	add    BYTE PTR [rax-0x4fffffd4],ah
   14000468d:	sub    al,0x0
   14000468f:	add    al,al
   140004691:	sub    al,0x0
   140004693:	add    al,dl
   140004695:	sub    al,0x0
   140004697:	add    al,ah
   140004699:	sub    al,0x0
   14000469b:	add    al,dh
   14000469d:	sub    al,0x0
   14000469f:	add    BYTE PTR [rax],al
   1400046a1:	sub    eax,0x2d100000
   1400046a6:	add    BYTE PTR [rax],al
   1400046a8:	and    BYTE PTR [rip+0x2d300000],ch        # 0x16d3046ae
   1400046ae:	add    BYTE PTR [rax],al
   1400046b0:	rex sub eax,0x2d500000
   1400046b6:	add    BYTE PTR [rax],al
   1400046b8:	(bad)  
   1400046b9:	sub    eax,0x2d700000
   1400046be:	add    BYTE PTR [rax],al
   1400046c0:	push   rax
   1400046c1:	add    BYTE PTR cs:[rax],al
   1400046c4:	and    BYTE PTR [rcx],dh
   1400046c6:	add    BYTE PTR [rax],al
   1400046c8:	xor    al,BYTE PTR [rax]
   1400046cb:	add    al,al
   1400046cd:	xor    al,BYTE PTR [rax]
   1400046cf:	add    BYTE PTR [rax+0x34],al
   1400046d2:	add    BYTE PTR [rax],al
   1400046d4:	xor    BYTE PTR [rax+rax*1],0x0
   1400046d8:	(bad)  
   1400046d9:	xor    eax,0x3ab00000
   1400046de:	add    BYTE PTR [rax],al
   1400046e0:	xor    al,BYTE PTR [rax]
   1400046e3:	rex add DWORD PTR [rax],eax
   1400046e6:	add    BYTE PTR [rax],al
   1400046e8:	xor    BYTE PTR [rcx+0x0],0x40
   1400046ec:	add    DWORD PTR [rax],eax
   1400046ee:	add    BYTE PTR [rax],al
   1400046f0:	and    BYTE PTR [rdx+0x0],dh
   1400046f3:	rex add DWORD PTR [rax],eax
   1400046f6:	add    BYTE PTR [rax],al
   1400046f8:	adc    BYTE PTR [rdx+0x0],dl
   1400046fb:	rex add DWORD PTR [rax],eax
   1400046fe:	add    BYTE PTR [rax],al
   140004700:	sub    BYTE PTR [rcx],0x0
   140004703:	rex add DWORD PTR [rax],eax
   140004706:	add    BYTE PTR [rax],al
   140004708:	(bad)  
   140004709:	adc    DWORD PTR [rax],eax
   14000470b:	rex add DWORD PTR [rax],eax
   14000470e:	add    BYTE PTR [rax],al
   140004710:	push   rax
   140004711:	adc    al,0x0
   140004713:	rex add DWORD PTR [rax],eax
   140004716:	add    BYTE PTR [rax],al
   140004718:	push   rax
   140004719:	adc    al,0x0
   14000471b:	rex add DWORD PTR [rax],eax
   14000471e:	add    BYTE PTR [rax],al
   140004720:	push   rax
   140004721:	adc    al,0x0
   140004723:	rex add DWORD PTR [rax],eax
   140004726:	add    BYTE PTR [rax],al
   140004728:	nop
   140004729:	sub    DWORD PTR [rax],eax
   14000472b:	rex add DWORD PTR [rax],eax
   14000472e:	add    BYTE PTR [rax],al
   140004730:	movabs al,ds:0xb000000001400029
   140004739:	sub    DWORD PTR [rax],eax
   14000473b:	rex add DWORD PTR [rax],eax
   14000473e:	add    BYTE PTR [rax],al
   140004740:	shr    BYTE PTR [rcx],0x0
   140004743:	rex add DWORD PTR [rax],eax
   140004746:	add    BYTE PTR [rax],al
   140004748:	shr    BYTE PTR [rcx],1
   14000474a:	add    BYTE PTR [rax+0x1],al
   14000474d:	add    BYTE PTR [rax],al
   14000474f:	add    al,ah
   140004751:	sub    DWORD PTR [rax],eax
   140004753:	rex add DWORD PTR [rax],eax
   140004756:	add    BYTE PTR [rax],al
   140004758:	lock sub DWORD PTR [rax],eax
   14000475b:	rex add DWORD PTR [rax],eax
   14000475e:	add    BYTE PTR [rax],al
   140004760:	push   rax
   140004761:	adc    DWORD PTR [rax],eax
   140004763:	rex add DWORD PTR [rax],eax
   140004766:	add    BYTE PTR [rax],al
   140004768:	add    BYTE PTR [rdx],ch
   14000476a:	add    BYTE PTR [rax+0x1],al
   14000476d:	add    BYTE PTR [rax],al
   14000476f:	add    BYTE PTR [rax],dl
   140004771:	sub    al,BYTE PTR [rax]
   140004773:	rex add DWORD PTR [rax],eax
   140004776:	add    BYTE PTR [rax],al
   140004778:	and    BYTE PTR [rdx],ch
   14000477a:	add    BYTE PTR [rax+0x1],al
   14000477d:	add    BYTE PTR [rax],al
   14000477f:	add    BYTE PTR [rax],dh
   140004781:	sub    al,BYTE PTR [rax]
   140004783:	rex add DWORD PTR [rax],eax
   140004786:	add    BYTE PTR [rax],al
   140004788:	sub    al,BYTE PTR [rax]
   14000478b:	rex add DWORD PTR [rax],eax
   14000478e:	add    BYTE PTR [rax],al
   140004790:	push   rax
   140004791:	sub    al,BYTE PTR [rax]
   140004793:	rex add DWORD PTR [rax],eax
   140004796:	add    BYTE PTR [rax],al
   140004798:	(bad)  
   140004799:	sub    al,BYTE PTR [rax]
   14000479b:	rex add DWORD PTR [rax],eax
   14000479e:	add    BYTE PTR [rax],al
   1400047a0:	jo     0x1400047cc
   1400047a2:	add    BYTE PTR [rax+0x1],al
   1400047a5:	add    BYTE PTR [rax],al
   1400047a7:	add    BYTE PTR [rax+0x140002a],al
   1400047ad:	add    BYTE PTR [rax],al
   1400047af:	add    BYTE PTR [rax+0x1400011],ah
   1400047b5:	add    BYTE PTR [rax],al
   1400047b7:	add    BYTE PTR [rax+0x140002a],dl
   1400047bd:	add    BYTE PTR [rax],al
   1400047bf:	add    BYTE PTR [rax+0x140002a],ah
   1400047c5:	add    BYTE PTR [rax],al
   1400047c7:	add    BYTE PTR [rax+0x140002a],dh
   1400047cd:	add    BYTE PTR [rax],al
   1400047cf:	add    al,al
   1400047d1:	sub    al,BYTE PTR [rax]
   1400047d3:	rex add DWORD PTR [rax],eax
   1400047d6:	add    BYTE PTR [rax],al
   1400047d8:	shr    BYTE PTR [rdx],1
   1400047da:	add    BYTE PTR [rax+0x1],al
   1400047dd:	add    BYTE PTR [rax],al
   1400047df:	add    BYTE PTR [rax+0x1400013],ah
   1400047e5:	add    BYTE PTR [rax],al
   1400047e7:	add    al,ah
   1400047e9:	sub    al,BYTE PTR [rax]
   1400047eb:	rex add DWORD PTR [rax],eax
   1400047ee:	add    BYTE PTR [rax],al
   1400047f0:	lock sub al,BYTE PTR [rax]
   1400047f3:	rex add DWORD PTR [rax],eax
   1400047f6:	add    BYTE PTR [rax],al
   1400047f8:	add    BYTE PTR [rbx],ch
   1400047fa:	add    BYTE PTR [rax+0x1],al
   1400047fd:	add    BYTE PTR [rax],al
   1400047ff:	add    BYTE PTR [rax],dl
   140004801:	sub    eax,DWORD PTR [rax]
   140004803:	rex add DWORD PTR [rax],eax
   140004806:	add    BYTE PTR [rax],al
   140004808:	and    BYTE PTR [rbx],ch
   14000480a:	add    BYTE PTR [rax+0x1],al
   14000480d:	add    BYTE PTR [rax],al
   14000480f:	add    BYTE PTR [rax],dh
   140004811:	sub    eax,DWORD PTR [rax]
   140004813:	rex add DWORD PTR [rax],eax
   140004816:	add    BYTE PTR [rax],al
   140004818:	rex sub eax,DWORD PTR [rax]
   14000481b:	rex add DWORD PTR [rax],eax
   14000481e:	add    BYTE PTR [rax],al
   140004820:	push   rax
   140004821:	sub    eax,DWORD PTR [rax]
   140004823:	rex add DWORD PTR [rax],eax
   140004826:	add    BYTE PTR [rax],al
   140004828:	(bad)  
   140004829:	sub    eax,DWORD PTR [rax]
   14000482b:	rex add DWORD PTR [rax],eax
   14000482e:	add    BYTE PTR [rax],al
   140004830:	jo     0x14000485d
   140004832:	add    BYTE PTR [rax+0x1],al
   140004835:	add    BYTE PTR [rax],al
   140004837:	add    BYTE PTR [rax+0x140002b],al
   14000483d:	add    BYTE PTR [rax],al
   14000483f:	add    BYTE PTR [rax+0x140002b],dl
   140004845:	add    BYTE PTR [rax],al
   140004847:	add    BYTE PTR [rax+0x11],al
   14000484a:	add    BYTE PTR [rax+0x1],al
   14000484d:	add    BYTE PTR [rax],al
   14000484f:	add    BYTE PTR [rax+0x4b],bl
   140004852:	add    BYTE PTR [rax+0x1],al
	...
   14000485d:	add    BYTE PTR [rax],al
   14000485f:	add    BYTE PTR [rax],dl
	...
   14000486d:	add    BYTE PTR [rax],al
   14000486f:	add    BYTE PTR [rax+rax*1],cl
   140004872:	add    BYTE PTR [rax],al
   140004874:	add    BYTE PTR [rax],al
   140004876:	add    BYTE PTR [rax],al
   140004878:	sbb    BYTE PTR [rcx],0x0
   14000487b:	rex add DWORD PTR [rax],eax
   14000487e:	add    BYTE PTR [rax],al
   140004880:	rex.WX add BYTE PTR [rax],al
	...
   14000488f:	add    BYTE PTR [rip+0x0],ch        # 0x140004895
   140004895:	add    BYTE PTR [rax],al
   140004897:	add    al,dh
   140004899:	sbb    DWORD PTR [rax],eax
   14000489b:	rex add DWORD PTR [rax],eax
   14000489e:	add    BYTE PTR [rax],al
   1400048a0:	fs add al,0x0
	...
   1400048af:	add    BYTE PTR [rdx],cl
   1400048b1:	add    BYTE PTR [rax],al
   1400048b3:	add    BYTE PTR [rax],al
   1400048b5:	add    BYTE PTR [rax],al
   1400048b7:	add    BYTE PTR [rax+0x140001b],al
   1400048bd:	add    BYTE PTR [rax],al
   1400048bf:	add    BYTE PTR [rbp+0x4],ah
	...
   1400048ce:	add    BYTE PTR [rax],al
   1400048d0:	or     al,BYTE PTR [rax]
   1400048d2:	add    BYTE PTR [rax],al
   1400048d4:	add    BYTE PTR [rax],al
   1400048d6:	add    BYTE PTR [rax],al
   1400048d8:	jo     0x1400048f6
   1400048da:	add    BYTE PTR [rax+0x1],al
	...
   1400048fd:	add    BYTE PTR [rax],al
   1400048ff:	add    al,al
   140004901:	(bad)  
   140004902:	add    BYTE PTR [rax+0x1],al
   140004905:	add    BYTE PTR [rax],al
   140004907:	add    BYTE PTR [rax+0x48],ah
   14000490a:	add    BYTE PTR [rax+0x1],al
   14000490d:	add    BYTE PTR [rax],al
   14000490f:	add    BYTE PTR [rax+0x53],dh
   140004912:	add    BYTE PTR [rax+0x1],al
   140004915:	add    BYTE PTR [rax],al
   140004917:	add    al,al
   140004919:	adc    eax,0x14000
   14000491e:	add    BYTE PTR [rax],al
   140004920:	rcl    BYTE PTR [rip+0x14000],1        # 0x140018926
   140004926:	add    BYTE PTR [rax],al
   140004928:	push   rax
   140004929:	adc    al,0x0
   14000492b:	rex add DWORD PTR [rax],eax
   14000492e:	add    BYTE PTR [rax],al
   140004930:	push   rax
   140004931:	adc    al,0x0
   140004933:	rex add DWORD PTR [rax],eax
   140004936:	add    BYTE PTR [rax],al
   140004938:	push   rax
   140004939:	adc    al,0x0
   14000493b:	rex add DWORD PTR [rax],eax
   14000493e:	add    BYTE PTR [rax],al
   140004940:	movabs al,ds:0xb00000000140002b
   140004949:	sub    eax,DWORD PTR [rax]
   14000494b:	rex add DWORD PTR [rax],eax
   14000494e:	add    BYTE PTR [rax],al
   140004950:	mov    al,0x29
   140004952:	add    BYTE PTR [rax+0x1],al
   140004955:	add    BYTE PTR [rax],al
   140004957:	add    al,al
   140004959:	sub    DWORD PTR [rax],eax
   14000495b:	rex add DWORD PTR [rax],eax
   14000495e:	add    BYTE PTR [rax],al
   140004960:	shr    BYTE PTR [rcx],1
   140004962:	add    BYTE PTR [rax+0x1],al
   140004965:	add    BYTE PTR [rax],al
   140004967:	add    al,ah
   140004969:	sub    DWORD PTR [rax],eax
   14000496b:	rex add DWORD PTR [rax],eax
   14000496e:	add    BYTE PTR [rax],al
   140004970:	lock sub DWORD PTR [rax],eax
   140004973:	rex add DWORD PTR [rax],eax
   140004976:	add    BYTE PTR [rax],al
   140004978:	rcl    BYTE PTR [rsi],1
   14000497a:	add    BYTE PTR [rax+0x1],al
   14000497d:	add    BYTE PTR [rax],al
   14000497f:	add    BYTE PTR [rax],al
   140004981:	sub    al,BYTE PTR [rax]
   140004983:	rex add DWORD PTR [rax],eax
   140004986:	add    BYTE PTR [rax],al
   140004988:	adc    BYTE PTR [rdx],ch
   14000498a:	add    BYTE PTR [rax+0x1],al
   14000498d:	add    BYTE PTR [rax],al
   14000498f:	add    BYTE PTR [rax],ah
   140004991:	sub    al,BYTE PTR [rax]
   140004993:	rex add DWORD PTR [rax],eax
   140004996:	add    BYTE PTR [rax],al
   140004998:	xor    BYTE PTR [rdx],ch
   14000499a:	add    BYTE PTR [rax+0x1],al
   14000499d:	add    BYTE PTR [rax],al
   14000499f:	add    BYTE PTR [rax+0x2a],al
   1400049a2:	add    BYTE PTR [rax+0x1],al
   1400049a5:	add    BYTE PTR [rax],al
   1400049a7:	add    BYTE PTR [rax+0x2a],dl
   1400049aa:	add    BYTE PTR [rax+0x1],al
   1400049ad:	add    BYTE PTR [rax],al
   1400049af:	add    BYTE PTR [rax+0x2a],ah
   1400049b2:	add    BYTE PTR [rax+0x1],al
   1400049b5:	add    BYTE PTR [rax],al
   1400049b7:	add    BYTE PTR [rax+0x2a],dh
   1400049ba:	add    BYTE PTR [rax+0x1],al
   1400049bd:	add    BYTE PTR [rax],al
   1400049bf:	add    BYTE PTR [rax+0x140002a],al
   1400049c5:	add    BYTE PTR [rax],al
   1400049c7:	add    al,al
   1400049c9:	sub    eax,DWORD PTR [rax]
   1400049cb:	rex add DWORD PTR [rax],eax
   1400049ce:	add    BYTE PTR [rax],al
   1400049d0:	shr    BYTE PTR [rbx],1
   1400049d2:	add    BYTE PTR [rax+0x1],al
   1400049d5:	add    BYTE PTR [rax],al
   1400049d7:	add    al,ah
   1400049d9:	sub    eax,DWORD PTR [rax]
   1400049db:	rex add DWORD PTR [rax],eax
   1400049de:	add    BYTE PTR [rax],al
   1400049e0:	lock sub eax,DWORD PTR [rax]
   1400049e3:	rex add DWORD PTR [rax],eax
   1400049e6:	add    BYTE PTR [rax],al
   1400049e8:	add    BYTE PTR [rax+rax*1],ch
   1400049eb:	rex add DWORD PTR [rax],eax
   1400049ee:	add    BYTE PTR [rax],al
   1400049f0:	adc    BYTE PTR [rax+rax*1],ch
   1400049f3:	rex add DWORD PTR [rax],eax
   1400049f6:	add    BYTE PTR [rax],al
   1400049f8:	and    BYTE PTR [rax+rax*1],ch
   1400049fb:	rex add DWORD PTR [rax],eax
   1400049fe:	add    BYTE PTR [rax],al
   140004a00:	xor    BYTE PTR [rax+rax*1],ch
   140004a03:	rex add DWORD PTR [rax],eax
   140004a06:	add    BYTE PTR [rax],al
   140004a08:	sub    al,0x0
   140004a0b:	rex add DWORD PTR [rax],eax
   140004a0e:	add    BYTE PTR [rax],al
   140004a10:	push   rax
   140004a11:	sub    al,0x0
   140004a13:	rex add DWORD PTR [rax],eax
   140004a16:	add    BYTE PTR [rax],al
   140004a18:	(bad)  
   140004a19:	sub    al,0x0
   140004a1b:	rex add DWORD PTR [rax],eax
   140004a1e:	add    BYTE PTR [rax],al
   140004a20:	jo     0x140004a4e
   140004a22:	add    BYTE PTR [rax+0x1],al
   140004a25:	add    BYTE PTR [rax],al
   140004a27:	add    BYTE PTR [rax+0x140002c],al
   140004a2d:	add    BYTE PTR [rax],al
   140004a2f:	add    BYTE PTR [rax+0x16],dh
   140004a32:	add    BYTE PTR [rax+0x1],al
   140004a35:	add    BYTE PTR [rax],al
   140004a37:	add    BYTE PTR [rax+0x1d],ah
   140004a3a:	add    BYTE PTR [rax+0x1],al
   140004a3d:	add    BYTE PTR [rax],al
   140004a3f:	add    BYTE PTR [rax+0x1d],al
   140004a42:	add    BYTE PTR [rax+0x1],al
   140004a45:	add    BYTE PTR [rax],al
   140004a47:	add    BYTE PTR [rax+0x140002c],dl
   140004a4d:	add    BYTE PTR [rax],al
   140004a4f:	add    BYTE PTR [rax+0x140002c],ah
   140004a55:	add    BYTE PTR [rax],al
   140004a57:	add    BYTE PTR [rax+0x140002c],dh
   140004a5d:	add    BYTE PTR [rax],al
   140004a5f:	add    al,al
   140004a61:	sub    al,0x0
   140004a63:	rex add DWORD PTR [rax],eax
   140004a66:	add    BYTE PTR [rax],al
   140004a68:	shr    BYTE PTR [rax+rax*1],1
   140004a6b:	rex add DWORD PTR [rax],eax
   140004a6e:	add    BYTE PTR [rax],al
   140004a70:	loopne 0x140004a9e
   140004a72:	add    BYTE PTR [rax+0x1],al
   140004a75:	add    BYTE PTR [rax],al
   140004a77:	add    al,dh
   140004a79:	sub    al,0x0
   140004a7b:	rex add DWORD PTR [rax],eax
   140004a7e:	add    BYTE PTR [rax],al
   140004a80:	add    BYTE PTR [rip+0x14000],ch        # 0x140018a86
   140004a86:	add    BYTE PTR [rax],al
   140004a88:	adc    BYTE PTR [rip+0x14000],ch        # 0x140018a8e
   140004a8e:	add    BYTE PTR [rax],al
   140004a90:	and    BYTE PTR [rip+0x14000],ch        # 0x140018a96
   140004a96:	add    BYTE PTR [rax],al
   140004a98:	jo     0x140004ac3
   140004a9a:	add    BYTE PTR [rax+0x1],al
   140004a9d:	add    BYTE PTR [rax],al
   140004a9f:	add    al,ah
   140004aa1:	(bad)  
   140004aa2:	add    BYTE PTR [rax+0x1],al
   140004aa5:	add    BYTE PTR [rax],al
   140004aa7:	add    BYTE PTR [rax],dh
   140004aa9:	sub    eax,0x14000
   140004aae:	add    BYTE PTR [rax],al
   140004ab0:	rex sub eax,0x14000
   140004ab6:	add    BYTE PTR [rax],al
   140004ab8:	push   rax
   140004ab9:	sub    eax,0x14000
   140004abe:	add    BYTE PTR [rax],al
   140004ac0:	(bad)  
   140004ac1:	sub    eax,0x14000
   140004ac6:	add    BYTE PTR [rax],al
   140004ac8:	test   al,0x4b
   140004aca:	add    BYTE PTR [rax+0x1],al
   140004acd:	add    BYTE PTR [rax],al
   140004acf:	add    al,cl
   140004ad1:	add    al,BYTE PTR [rax]
   140004ad3:	add    bh,bh
   140004ad5:	inc    DWORD PTR [rax]
	...
   140004adf:	add    BYTE PTR [rax+0x1400015],dh
	...
   140004aed:	add    BYTE PTR [rax],al
   140004aef:	add    BYTE PTR [rbx+0x50],al
   140004af2:	jb     0x140004b63
   140004af4:	addr32 jb 0x140004b5c
   140004af7:	jae    0x140004b6c
   140004af9:	rex.R ins BYTE PTR es:[rdi],dx
   140004afb:	addr32 rex.B jo 0x140004b6f
   140004aff:	cmp    bh,BYTE PTR [rdx]
   140004b01:	rex.XB push r8
   140004b03:	jb     0x140004b74
   140004b05:	addr32 jb 0x140004b6d
   140004b08:	jae    0x140004b7d
   140004b0a:	rex.R ins BYTE PTR es:[rdi],dx
   140004b0c:	addr32 rex.B jo 0x140004b80
	...
   140004b18:	rex.XB push r8
   140004b1a:	jb     0x140004b8b
   140004b1c:	addr32 jb 0x140004b84
   140004b1f:	jae    0x140004b94
   140004b21:	rex.R ins BYTE PTR es:[rdi],dx
   140004b23:	addr32 rex.B jo 0x140004b97
   140004b27:	cmp    bh,BYTE PTR [rdx]
   140004b29:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140004b2b:	imul   esi,DWORD PTR [rcx+rcx*2+0x6e],0x6e617473
   140004b33:	movsxd esp,DWORD PTR [rbp+0x0]
   140004b36:	add    BYTE PTR [rax],al
   140004b38:	rex.XB push r8
   140004b3a:	jb     0x140004bab
   140004b3c:	addr32 jb 0x140004ba4
   140004b3f:	jae    0x140004bb4
   140004b41:	rex.R ins BYTE PTR es:[rdi],dx
   140004b43:	addr32 rex.B jo 0x140004bb7
   140004b47:	cmp    bh,BYTE PTR [rdx]
   140004b49:	rex.RB js 0x140004bb5
   140004b4c:	je     0x140004b97
   140004b4e:	outs   dx,BYTE PTR ds:[rsi]
   140004b4f:	jae    0x140004bc5
   140004b51:	(bad)  
   140004b52:	outs   dx,BYTE PTR ds:[rsi]
   140004b53:	movsxd esp,DWORD PTR [rbp+0x0]
	...
   140004b76:	add    BYTE PTR [rax],al
   140004b78:	rex.RX push rdx
   140004b7a:	mov    ecx,DWORD PTR [rdx+0x43396eb6]
   140004b80:	mov    ebx,DWORD PTR [rcx-0x50]
   140004b83:	or     BYTE PTR [rbx-0x61],bl
   140004b86:	rex.W nop
   140004b88:	(bad)  
   140004b89:	sub    dh,dh
   140004b8b:	xor    BYTE PTR es:[rdi-0x3b],dh
   140004b8f:	rex.RB mov r14d,0xaae3a49c
   140004b95:	xchg   ebx,eax
   140004b96:	jno    0x140004b67
   140004b98:	imul   r14,QWORD PTR [rbx+0x74],0x68546e65
   140004ba0:	jb     0x140004c07
   140004ba2:	(bad)  
   140004ba3:	add    BYTE PTR fs:[rax],al
   140004ba6:	add    BYTE PTR [rax],al
   140004ba8:	rex.XB push r8
   140004baa:	jb     0x140004c1b
   140004bac:	addr32 jb 0x140004c14
   140004baf:	jae    0x140004c24
   140004bb1:	rex.R ins BYTE PTR es:[rdi],dx
   140004bb3:	rex.R ins BYTE PTR es:[edi],dx
   140004bb6:	add    BYTE PTR [ebx+0x50],al
   140004bba:	jb     0x140004c2b
   140004bbc:	addr32 jb 0x140004c24
   140004bbf:	jae    0x140004c34
   140004bc1:	rex.R ins BYTE PTR es:[rdi],dx
   140004bc3:	rex.R ins BYTE PTR es:[edi],dx
   140004bc6:	cmp    bh,BYTE PTR [edx]
   140004bc9:	rex.XB push r8
   140004bcb:	jb     0x140004c3c
   140004bcd:	addr32 jb 0x140004c35
   140004bd0:	jae    0x140004c45
   140004bd2:	rex.R ins BYTE PTR es:[rdi],dx
   140004bd4:	rex.R ins BYTE PTR es:[edi],dx
   140004bd7:	add    BYTE PTR [eax],al
   140004bda:	add    BYTE PTR [rax],al
   140004bdc:	add    BYTE PTR [rax],al
   140004bde:	add    BYTE PTR [rax],al
   140004be0:	rex.XB push r8
   140004be2:	jb     0x140004c53
   140004be4:	addr32 jb 0x140004c4c
   140004be7:	jae    0x140004c5c
   140004be9:	rex.R ins BYTE PTR es:[rdi],dx
   140004beb:	rex.R ins BYTE PTR es:[edi],dx
   140004bee:	cmp    bh,BYTE PTR [edx]
   140004bf1:	jle    0x140004c36
   140004bf3:	push   rax
   140004bf4:	jb     0x140004c65
   140004bf6:	addr32 jb 0x140004c5e
   140004bf9:	jae    0x140004c6e
   140004bfb:	rex.R ins BYTE PTR es:[rdi],dx
   140004bfd:	rex.R ins BYTE PTR es:[edi],dx
   140004c00:	add    BYTE PTR [eax],al
   140004c03:	add    BYTE PTR [rax],al
   140004c05:	add    BYTE PTR [rax],al
   140004c07:	add    BYTE PTR [rbx+0x50],al
   140004c0a:	jb     0x140004c7b
   140004c0c:	addr32 jb 0x140004c74
   140004c0f:	jae    0x140004c84
   140004c11:	rex.R ins BYTE PTR es:[rdi],dx
   140004c13:	rex.R ins BYTE PTR es:[edi],dx
   140004c16:	cmp    bh,BYTE PTR [edx]
   140004c19:	rex.R outs dx,DWORD PTR ds:[rsi]
   140004c1b:	rex.R (bad) 
   140004c1d:	je     0x140004c80
   140004c1f:	rex.RB js 0x140004c85
   140004c22:	push   0x65676e61
   140004c27:	add    BYTE PTR [rbx+0x50],al
   140004c2a:	jb     0x140004c9b
   140004c2c:	addr32 jb 0x140004c94
   140004c2f:	jae    0x140004ca4
   140004c31:	rex.R ins BYTE PTR es:[rdi],dx
   140004c33:	rex.R ins BYTE PTR es:[edi],dx
   140004c36:	cmp    bh,BYTE PTR [edx]
   140004c39:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140004c3b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140004c3d:	imul   esi,DWORD PTR [rsp+rax*2+0x69],0x676f6c61
   140004c45:	add    BYTE PTR [rax],al
   140004c47:	add    BYTE PTR [rbx+0x50],al
   140004c4a:	jb     0x140004cbb
   140004c4c:	addr32 jb 0x140004cb4
   140004c4f:	jae    0x140004cc4
   140004c51:	rex.R ins BYTE PTR es:[rdi],dx
   140004c53:	rex.R ins BYTE PTR es:[edi],dx
   140004c56:	cmp    bh,BYTE PTR [edx]
   140004c59:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140004c5b:	rex.XB ins BYTE PTR es:[rdi],dx
   140004c5d:	outs   dx,DWORD PTR ds:[rsi]
   140004c5e:	jae    0x140004cc5
	...
   140004c68:	rex.XB push r8
   140004c6a:	jb     0x140004cdb
   140004c6c:	addr32 jb 0x140004cd4
   140004c6f:	jae    0x140004ce4
   140004c71:	rex.R ins BYTE PTR es:[rdi],dx
   140004c73:	rex.R ins BYTE PTR es:[edi],dx
   140004c76:	cmp    bh,BYTE PTR [edx]
   140004c79:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140004c7b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140004c7d:	jo     0x140004cf8
   140004c7f:	rex.R (bad) 
   140004c81:	je     0x140004ce4
   140004c83:	add    BYTE PTR [rax],al
   140004c85:	add    BYTE PTR [rax],al
   140004c87:	add    BYTE PTR [rbx+0x50],al
   140004c8a:	jb     0x140004cfb
   140004c8c:	addr32 jb 0x140004cf4
   140004c8f:	jae    0x140004d04
   140004c91:	rex.R ins BYTE PTR es:[rdi],dx
   140004c93:	rex.R ins BYTE PTR es:[edi],dx
   140004c96:	cmp    bh,BYTE PTR [edx]
   140004c99:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140004c9b:	push   rax
   140004c9c:	jb     0x140004d0d
   140004c9e:	movsxd esp,DWORD PTR [rbp+0x73]
   140004ca1:	jae    0x140004cec
   140004ca3:	add    BYTE PTR [rax],r8b
   140004ca6:	add    BYTE PTR [rax],al
   140004ca8:	rex.XB push r8
   140004caa:	jb     0x140004d1b
   140004cac:	addr32 jb 0x140004d14
   140004caf:	jae    0x140004d24
   140004cb1:	rex.R ins BYTE PTR es:[rdi],dx
   140004cb3:	rex.R ins BYTE PTR es:[edi],dx
   140004cb6:	cmp    bh,BYTE PTR [edx]
   140004cb9:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140004cbb:	push   rax
   140004cbc:	(bad)  
   140004cbd:	addr32 gs rex.WRX jne 0x140004d2f
   140004cc2:	(bad)  
   140004cc3:	gs jb  0x140004cc6
   140004cc6:	add    BYTE PTR [rax],al
   140004cc8:	(bad)  
   140004cca:	nop
   140004ccb:	(bad)  
   140004ccc:	movsxd esi,DWORD PTR [rcx-0x5c]
   140004ccf:	cmp    edx,DWORD PTR [rdi]
   140004cd1:	adc    DWORD PTR [rcx],esi
   140004cd3:	call   0x10b756f36
   140004cd8:	rex.RXB pop r15
   140004cda:	rex.WB jae 0x140004d23
   140004cdd:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x6c6f466e
   140004ce5:	fs gs jb 0x140004ce9
   140004ce9:	add    BYTE PTR [rax],al
   140004ceb:	add    BYTE PTR [rax],al
   140004ced:	add    BYTE PTR [rax],al
   140004cef:	add    BYTE PTR [rdi+0x5f],al
   140004cf2:	push   rbx
   140004cf3:	jne    0x140004d57
   140004cf5:	jae    0x140004d6b
   140004cf7:	imul   esi,DWORD PTR [rbp+rsi*2+0x74],0x6c6f4665
   140004cff:	fs gs jb 0x140004d53
   140004d03:	(bad)  
   140004d04:	je     0x140004d6e
   140004d06:	push   rdi
   140004d07:	imul   esi,DWORD PTR [rax+rbp*2+0x44],0x6c707369
   140004d0f:	(bad)  
   140004d10:	jns    0x140004d60
   140004d12:	(bad)  
   140004d13:	ins    DWORD PTR es:[rdi],dx
   140004d14:	add    BYTE PTR gs:[rax],al
   140004d17:	add    BYTE PTR [rdi+0x5f],al
   140004d1a:	push   rdx
   140004d1b:	gs jo  0x140004d8a
   140004d1e:	(bad)  
   140004d1f:	movsxd esp,DWORD PTR [rbp+0x4d]
   140004d22:	jns    0x140004d68
   140004d24:	outs   dx,DWORD PTR ds:[rsi]
   140004d25:	movsxd esi,DWORD PTR [rbx+0x50]
   140004d28:	(bad)  
   140004d29:	je     0x140004d93
   140004d2b:	add    BYTE PTR [rax],al
   140004d2d:	add    BYTE PTR [rax],al
   140004d2f:	add    BYTE PTR [rdx-0x3f],al
   140004d32:	sub    dl,BYTE PTR [rcx]
   140004d34:	sbb    dh,BYTE PTR [rdi]
   140004d36:	push   rsp
   140004d37:	fisubr WORD PTR [rcx]
   140004d39:	mov    ecx,0xada1d85c
   140004d3e:	sbb    DWORD PTR [rbx-0x1a],ebp
   140004d41:	adc    al,0x2
   140004d43:	add    BYTE PTR [rax],al
   140004d45:	add    BYTE PTR [rax],al
   140004d47:	add    al,al
   140004d49:	add    BYTE PTR [rax],al
   140004d4b:	add    BYTE PTR [rax],al
   140004d4d:	add    BYTE PTR [rax],al
   140004d4f:	rex.RX
   140004d50:	rex.WRX push rbp
   140004d52:	rex.WR
   140004d53:	rex.WR add BYTE PTR [rax],r8b
   140004d56:	add    BYTE PTR [rax],al
   140004d58:	rex.W
   140004d59:	gs ins BYTE PTR es:[rdi],dx
   140004d5b:	jo     0x140004dc2
   140004d5d:	jb     0x140004dd2
   140004d5f:	cmp    bh,BYTE PTR [rdx]
   140004d61:	rex.RXB
   140004d62:	gs je  0x140004da8
   140004d65:	ins    BYTE PTR es:[rdi],dx
   140004d66:	imul   esp,DWORD PTR [rbp+0x6e],0x63655274
   140004d6d:	je     0x140004d6f
   140004d6f:	add    BYTE PTR [rax+0x65],cl
   140004d72:	ins    BYTE PTR es:[rdi],dx
   140004d73:	jo     0x140004dda
   140004d75:	jb     0x140004dea
   140004d77:	cmp    bh,BYTE PTR [rdx]
   140004d79:	push   rax
   140004d7a:	outs   dx,DWORD PTR ds:[rsi]
   140004d7b:	jae    0x140004df1
   140004d7d:	rex.WRB
   140004d7e:	gs jae 0x140004df4
   140004d81:	(bad)  
   140004d82:	addr32 gs push rdi
   140004d85:	add    BYTE PTR [rax],al
   140004d87:	add    BYTE PTR [rax+0x65],cl
   140004d8a:	ins    BYTE PTR es:[rdi],dx
   140004d8b:	jo     0x140004df2
   140004d8d:	jb     0x140004e02
   140004d8f:	cmp    bh,BYTE PTR [rdx]
   140004d91:	rex.XB ins BYTE PTR es:[rdi],dx
   140004d93:	outs   dx,DWORD PTR ds:[rsi]
   140004d94:	jae    0x140004dfb
   140004d96:	rex.W (bad) 
   140004d98:	outs   dx,BYTE PTR ds:[rsi]
   140004d99:	fs ins BYTE PTR es:[rdi],dx
   140004d9b:	add    BYTE PTR gs:[rax],al
   140004d9e:	add    BYTE PTR [rax],al
   140004da0:	rex.W
   140004da1:	gs ins BYTE PTR es:[rdi],dx
   140004da3:	jo     0x140004e0a
   140004da5:	jb     0x140004e1a
   140004da7:	cmp    bh,BYTE PTR [rdx]
   140004da9:	push   rdi
   140004daa:	(bad)  
   140004dab:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   140004db3:	ins    BYTE PTR es:[edi],dx
   140004db5:	gs rex.WRXB (bad) 
   140004db8:	push   0x65
   140004dba:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140004dbe:	add    BYTE PTR [rax],al
   140004dc0:	rex.W
   140004dc1:	gs ins BYTE PTR es:[rdi],dx
   140004dc3:	jo     0x140004e2a
   140004dc5:	jb     0x140004e3a
   140004dc7:	cmp    bh,BYTE PTR [rdx]
   140004dc9:	push   rbx
   140004dca:	gs je  0x140004e24
   140004dcd:	imul   ebp,DWORD PTR [rsi+0x64],0x6f50776f
   140004dd4:	jae    0x140004dd6
   140004dd6:	add    BYTE PTR [rax],al
   140004dd8:	jb     0x140004d87
   140004dda:	(bad)  
   140004ddb:	xor    DWORD PTR [rdx],esp
   140004ddd:	cmp    esp,DWORD PTR [rsi]
   140004ddf:	mov    dh,0xdc
   140004de1:	sahf   
   140004de2:	test   BYTE PTR [rdi],ah
   140004de4:	sbb    DWORD PTR [rax+0x522d39d],esp
   140004dea:	xchg   ebx,eax
   140004deb:	sbb    DWORD PTR [rcx],eax
   140004ded:	add    BYTE PTR [rax],al
   140004def:	add    BYTE PTR [rax+0x56],bh
   140004df5:	add    BYTE PTR [rax],al
   140004df7:	add    BYTE PTR [rax],al
   140004df9:	add    BYTE PTR [rax],al
   140004dfb:	add    BYTE PTR [rbx],al
   140004dfd:	add    BYTE PTR [rax],al
   140004dff:	add    al,al
   140004e01:	push   rsi
   140004e02:	add    BYTE PTR [rax],al
   140004e04:	and    BYTE PTR [rax],al
   140004e06:	add    BYTE PTR [rax],al
   140004e08:	add    BYTE PTR [rax],al
   140004e0a:	add    BYTE PTR [rax],al
   140004e0c:	add    DWORD PTR [rax],eax
   140004e0e:	add    BYTE PTR [rax],al
   140004e10:	and    al,BYTE PTR [rip+0x21993]        # 0x1400267a9
   140004e16:	add    BYTE PTR [rax],al
   140004e18:	push   0x56
   140004e1d:	add    BYTE PTR [rax],al
   140004e1f:	add    BYTE PTR [rax],al
   140004e21:	add    BYTE PTR [rax],al
   140004e23:	add    BYTE PTR [rip+0x78000000],al        # 0x1b8004e29
   140004e29:	push   rsi
   140004e2a:	add    BYTE PTR [rax],al
   140004e2c:	(bad)  
   140004e2d:	add    BYTE PTR [rax],al
   140004e2f:	add    BYTE PTR [rax],al
   140004e31:	add    BYTE PTR [rax],al
   140004e33:	add    BYTE PTR [rcx],al
   140004e35:	add    BYTE PTR [rax],al
   140004e37:	add    BYTE PTR [rdx],ah
   140004e39:	add    eax,0x31993
   140004e3e:	add    BYTE PTR [rax],al
   140004e40:	cwde   
   140004e41:	pop    rax
	...
   140004e4a:	add    BYTE PTR [rax],al
   140004e4c:	(bad)  
   140004e4d:	add    BYTE PTR [rax],al
   140004e4f:	add    BYTE PTR [rax+0x20000058],dh
   140004e55:	add    BYTE PTR [rax],al
   140004e57:	add    BYTE PTR [rax],al
   140004e59:	add    BYTE PTR [rax],al
   140004e5b:	add    BYTE PTR [rcx],al
   140004e5d:	add    BYTE PTR [rax],al
   140004e5f:	add    BYTE PTR [rdx],ah
   140004e61:	add    eax,0x31993
   140004e66:	add    BYTE PTR [rax],al
   140004e68:	in     al,dx
   140004e69:	push   rdi
   140004e6a:	add    BYTE PTR [rax],al
   140004e6c:	add    DWORD PTR [rax],eax
   140004e6e:	add    BYTE PTR [rax],al
   140004e70:	add    al,0x58
   140004e72:	add    BYTE PTR [rax],al
   140004e74:	or     BYTE PTR [rax],al
   140004e76:	add    BYTE PTR [rax],al
   140004e78:	xor    BYTE PTR [rax+0x0],bl
   140004e7b:	add    BYTE PTR [rax],dh
   140004e7d:	add    BYTE PTR [rax],al
   140004e7f:	add    BYTE PTR [rax],al
   140004e81:	add    BYTE PTR [rax],al
   140004e83:	add    BYTE PTR [rcx],al
   140004e85:	add    BYTE PTR [rax],al
   140004e87:	add    BYTE PTR [rdx],ah
   140004e89:	add    eax,0x11993
   140004e8e:	add    BYTE PTR [rax],al
   140004e90:	mov    al,0x57
	...
   140004e9a:	add    BYTE PTR [rax],al
   140004e9c:	add    eax,DWORD PTR [rax]
   140004e9e:	add    BYTE PTR [rax],al
   140004ea0:	mov    eax,0x30000057
   140004ea5:	add    BYTE PTR [rax],al
   140004ea7:	add    BYTE PTR [rax],al
   140004ea9:	add    BYTE PTR [rax],al
   140004eab:	add    BYTE PTR [rcx],al
   140004ead:	add    BYTE PTR [rax],al
   140004eaf:	add    BYTE PTR [rdx],ah
   140004eb1:	add    eax,0x11993
   140004eb6:	add    BYTE PTR [rax],al
   140004eb8:	mov    eax,0x56
   140004ebd:	add    BYTE PTR [rax],al
   140004ebf:	add    BYTE PTR [rax],al
   140004ec1:	add    BYTE PTR [rax],al
   140004ec3:	add    BYTE PTR [rbx],al
   140004ec5:	add    BYTE PTR [rax],al
   140004ec7:	add    BYTE PTR [rax+0x57],dh
   140004eca:	add    BYTE PTR [rax],al
   140004ecc:	and    BYTE PTR [rax],al
   140004ece:	add    BYTE PTR [rax],al
   140004ed0:	add    BYTE PTR [rax],al
   140004ed2:	add    BYTE PTR [rax],al
   140004ed4:	add    DWORD PTR [rax],eax
   140004ed6:	add    BYTE PTR [rax],al
   140004ed8:	and    al,BYTE PTR [rip+0x21993]        # 0x140026871
   140004ede:	add    BYTE PTR [rax],al
   140004ee0:	and    al,0x57
	...
   140004eea:	add    BYTE PTR [rax],al
   140004eec:	add    eax,0x38000000
   140004ef1:	push   rdi
   140004ef2:	add    BYTE PTR [rax],al
   140004ef4:	push   0x0
   140004ef9:	add    BYTE PTR [rax],al
   140004efb:	add    BYTE PTR [rcx],al
   140004efd:	add    BYTE PTR [rax],al
   140004eff:	add    BYTE PTR [rdx],ah
   140004f01:	add    eax,0x11993
   140004f06:	add    BYTE PTR [rax],al
   140004f08:	push   rsp
   140004f09:	pop    rcx
	...
   140004f12:	add    BYTE PTR [rax],al
   140004f14:	add    eax,DWORD PTR [rax]
   140004f16:	add    BYTE PTR [rax],al
   140004f18:	(bad)  
   140004f19:	pop    rcx
   140004f1a:	add    BYTE PTR [rax],al
   140004f1c:	push   rax
   140004f1d:	add    BYTE PTR [rax],al
   140004f1f:	add    BYTE PTR [rax],al
   140004f21:	add    BYTE PTR [rax],al
   140004f23:	add    BYTE PTR [rcx],al
	...
   140004f31:	add    BYTE PTR [rax],al
   140004f33:	add    BYTE PTR [rdi],bh
   140004f35:	cmp    bl,BYTE PTR [rdi+0x55]
   140004f3b:	add    BYTE PTR [rdx],al
   140004f3d:	add    BYTE PTR [rax],al
   140004f3f:	add    BYTE PTR [rax+rax*1],ah
   140004f42:	add    BYTE PTR [rax],al
   140004f44:	xchg   esp,eax
   140004f45:	push   rbx
   140004f46:	add    BYTE PTR [rax],al
   140004f48:	xchg   esp,eax
   140004f49:	rex.XB add BYTE PTR [r8],al
   140004f4c:	add    BYTE PTR [rax],al
   140004f4e:	add    BYTE PTR [rax],al
   140004f50:	(bad)  
   140004f51:	cmp    bl,BYTE PTR [rdi+0x55]
   140004f57:	add    BYTE PTR [rip+0x54000000],cl        # 0x194004f5d
   140004f5d:	add    al,BYTE PTR [rax]
   140004f5f:	add    ah,cl
   140004f61:	push   rbx
   140004f62:	add    BYTE PTR [rax],al
   140004f64:	int3   
   140004f65:	rex.XB add BYTE PTR [r8],al
	...
   140004f90:	movabs al,ds:0x0
	...
   140004fe5:	add    BYTE PTR [rax],al
   140004fe7:	add    BYTE PTR [rax],cl
   140004fe9:	jo     0x140004feb
   140004feb:	rex add DWORD PTR [rax],eax
	...
   140004ffe:	add    BYTE PTR [rax],al
   140005000:	or     BYTE PTR [rbp+0x0],al
   140005003:	rex add DWORD PTR [rax],eax
   140005006:	add    BYTE PTR [rax],al
   140005008:	adc    BYTE PTR [rbp+0x0],al
   14000500b:	rex add DWORD PTR [rax],eax
   14000500e:	add    BYTE PTR [rax],al
   140005010:	(bad)  
   140005011:	add    BYTE PTR [r8+0x1],r8b
   140005015:	add    BYTE PTR [rax],al
   140005017:	add    BYTE PTR [rax+0x0],ah
   14000501a:	add    BYTE PTR [rax],al
   14000501c:	add    BYTE PTR [rax],al
   14000501e:	add    BYTE PTR [rax],al
   140005020:	add    BYTE PTR [rip+0x0],dh        # 0x140005026
	...
   14000502e:	add    BYTE PTR [rax],al
   140005030:	test   al,0x50
   140005032:	add    BYTE PTR [rax],al
   140005034:	rcl    BYTE PTR [rax+0x0],1
   140005037:	add    BYTE PTR [rax+0x78000051],ah
   14000503d:	push   rcx
   14000503e:	add    BYTE PTR [rax],al
   140005040:	and    BYTE PTR [rcx+0x0],dl
	...
   14000505f:	add    al,dl
   140005061:	push   rax
   140005062:	add    BYTE PTR [rax],al
   140005064:	movabs al,ds:0x2000005178000051
   14000506d:	push   rcx
	...
   140005086:	add    BYTE PTR [rax],al
   140005088:	movabs al,ds:0x2000005178000051
   140005091:	push   rcx
	...
   1400050a6:	add    BYTE PTR [rax],al
   1400050a8:	mov    eax,0x4000070
   1400050ad:	add    BYTE PTR [rax],al
   1400050af:	add    BYTE PTR [rax],al
   1400050b1:	add    BYTE PTR [rax],al
   1400050b3:	add    bh,bh
   1400050b5:	(bad)  
   1400050b6:	(bad)  
   1400050b7:	inc    DWORD PTR [rax]
   1400050b9:	add    BYTE PTR [rax],al
   1400050bb:	add    BYTE PTR [rax+0x0],al
   1400050be:	add    BYTE PTR [rax],al
   1400050c0:	clc    
   1400050c1:	push   rcx
	...
   1400050ce:	add    BYTE PTR [rax],al
   1400050d0:	jo     0x140005142
   1400050d2:	add    BYTE PTR [rax],al
   1400050d4:	add    eax,DWORD PTR [rax]
   1400050d6:	add    BYTE PTR [rax],al
   1400050d8:	add    BYTE PTR [rax],al
   1400050da:	add    BYTE PTR [rax],al
   1400050dc:	(bad)  
   1400050dd:	(bad)  
   1400050de:	(bad)  
   1400050df:	inc    DWORD PTR [rax]
   1400050e1:	add    BYTE PTR [rax],al
   1400050e3:	add    BYTE PTR [rax+0x0],al
   1400050e6:	add    BYTE PTR [rax],al
   1400050e8:	enter  0x51,0x0
	...
   1400050f8:	and    BYTE PTR [rcx+0x0],dl
	...
   14000510f:	add    BYTE PTR [rcx],al
   140005111:	add    BYTE PTR [rax],al
   140005113:	add    al,bh
   140005115:	push   rax
	...
   14000511e:	add    BYTE PTR [rax],al
   140005120:	push   rax
   140005121:	jo     0x140005123
	...
   14000512b:	add    bh,bh
   14000512d:	(bad)  
   14000512e:	(bad)  
   14000512f:	inc    DWORD PTR [rax]
   140005131:	add    BYTE PTR [rax],al
   140005133:	add    BYTE PTR [rax+0x0],al
   140005136:	add    BYTE PTR [rax],al
   140005138:	or     BYTE PTR [rcx+0x0],dl
	...
   140005147:	add    BYTE PTR [rax+0x51],bh
   14000514a:	add    BYTE PTR [rax],al
   14000514c:	and    BYTE PTR [rcx+0x0],dl
	...
   140005167:	add    BYTE PTR [rdx],al
   140005169:	add    BYTE PTR [rax],al
   14000516b:	add    BYTE PTR [rax+0x51],cl
	...
   140005176:	add    BYTE PTR [rax],al
   140005178:	sub    BYTE PTR [rax+0x0],dh
   14000517b:	add    BYTE PTR [rcx],al
   14000517d:	add    BYTE PTR [rax],al
   14000517f:	add    BYTE PTR [rax],al
   140005181:	add    BYTE PTR [rax],al
   140005183:	add    bh,bh
   140005185:	(bad)  
   140005186:	(bad)  
   140005187:	inc    DWORD PTR [rax]
   140005189:	add    BYTE PTR [rax],al
   14000518b:	add    BYTE PTR [rax+0x0],al
   14000518e:	add    BYTE PTR [rax],al
   140005190:	(bad)  
   140005191:	push   rcx
	...
   14000519e:	add    BYTE PTR [rax],al
   1400051a0:	nop
   1400051a1:	jo     0x1400051a3
   1400051a3:	add    BYTE PTR [rdx],al
   1400051a5:	add    BYTE PTR [rax],al
   1400051a7:	add    BYTE PTR [rax],al
   1400051a9:	add    BYTE PTR [rax],al
   1400051ab:	add    bh,bh
   1400051ad:	(bad)  
   1400051ae:	(bad)  
   1400051af:	inc    DWORD PTR [rax]
   1400051b1:	add    BYTE PTR [rax],al
   1400051b3:	add    BYTE PTR [rax+0x0],al
   1400051b6:	add    BYTE PTR [rax],al
   1400051b8:	loopne 0x14000520b
	...
   1400051ce:	add    BYTE PTR [rax],al
   1400051d0:	add    al,0x0
   1400051d2:	add    BYTE PTR [rax],al
   1400051d4:	(bad)  
   1400051d5:	push   rax
	...
   1400051e6:	add    BYTE PTR [rax],al
   1400051e8:	add    eax,DWORD PTR [rax]
   1400051ea:	add    BYTE PTR [rax],al
   1400051ec:	mov    BYTE PTR [rax+0x0],dl
	...
   1400051ff:	add    BYTE PTR [rip+0x30000000],al        # 0x170005205
   140005205:	push   rax
	...
   14000520e:	add    BYTE PTR [rax],al
   140005210:	add    DWORD PTR [rax],eax
	...
   14000521a:	add    BYTE PTR [rax],al
   14000521c:	mov    eax,0xf8000070
   140005221:	push   rcx
   140005222:	add    BYTE PTR [rax],al
   140005224:	adc    BYTE PTR [rdx+0x0],dl
	...
   140005237:	add    BYTE PTR [rax],dh
   140005239:	push   rbx
   14000523a:	add    BYTE PTR [rax],al
   14000523c:	or     BYTE PTR [rbx+0x0],dl
   14000523f:	add    BYTE PTR [rax+0x78000052],ah
   140005245:	push   rcx
   140005246:	add    BYTE PTR [rax],al
   140005248:	and    BYTE PTR [rcx+0x0],dl
	...
   140005267:	add    BYTE PTR [rax+0x78000052],ah
   14000526d:	push   rcx
   14000526e:	add    BYTE PTR [rax],al
   140005270:	and    BYTE PTR [rcx+0x0],dl
	...
   14000528f:	add    BYTE PTR [rbx],al
   140005291:	add    BYTE PTR [rax],al
   140005293:	add    BYTE PTR [rax+0x52],ch
	...
   14000529e:	add    BYTE PTR [rax],al
   1400052a0:	add    BYTE PTR [rcx+0x0],dh
   1400052a3:	add    BYTE PTR [rdx],al
   1400052a5:	add    BYTE PTR [rax],al
   1400052a7:	add    BYTE PTR [rax],al
   1400052a9:	add    BYTE PTR [rax],al
   1400052ab:	add    bh,bh
   1400052ad:	(bad)  
   1400052ae:	(bad)  
   1400052af:	inc    DWORD PTR [rax]
   1400052b1:	add    BYTE PTR [rax],al
   1400052b3:	add    BYTE PTR [rax+0x0],al
   1400052b6:	add    BYTE PTR [rax],al
   1400052b8:	mov    BYTE PTR [rdx+0x0],dl
	...
   1400052c7:	add    BYTE PTR [rax],cl
   1400052c9:	push   rbx
   1400052ca:	add    BYTE PTR [rax],al
   1400052cc:	movabs al,ds:0x2000005178000052
   1400052d5:	push   rcx
	...
   1400052f6:	add    BYTE PTR [rax],al
   1400052f8:	add    al,0x0
   1400052fa:	add    BYTE PTR [rax],al
   1400052fc:	enter  0x52,0x0
	...
   140005308:	loopne 0x14000537a
   14000530a:	add    BYTE PTR [rax],al
   14000530c:	add    eax,DWORD PTR [rax]
   14000530e:	add    BYTE PTR [rax],al
   140005310:	add    BYTE PTR [rax],al
   140005312:	add    BYTE PTR [rax],al
   140005314:	(bad)  
   140005315:	(bad)  
   140005316:	(bad)  
   140005317:	inc    DWORD PTR [rax]
   140005319:	add    BYTE PTR [rax],al
   14000531b:	add    BYTE PTR [rax+0x0],al
   14000531e:	add    BYTE PTR [rax],al
   140005320:	lock push rdx
	...
   14000532e:	add    BYTE PTR [rax],al
   140005330:	and    BYTE PTR [rcx+0x0],dh
   140005333:	add    BYTE PTR [rax+rax*1],al
   140005336:	add    BYTE PTR [rax],al
   140005338:	add    BYTE PTR [rax],al
   14000533a:	add    BYTE PTR [rax],al
   14000533c:	(bad)  
   14000533d:	(bad)  
   14000533e:	(bad)  
   14000533f:	inc    DWORD PTR [rax]
   140005341:	add    BYTE PTR [rax],al
   140005343:	add    BYTE PTR [rax+0x0],al
   140005346:	add    BYTE PTR [rax],al
   140005348:	pop    rax
   140005349:	push   rbx
	...
   14000535e:	add    BYTE PTR [rax],al
   140005360:	add    eax,0x38000000
   140005365:	push   rdx
	...
   14000536e:	add    BYTE PTR [rax],al
   140005370:	add    DWORD PTR [rax],eax
	...
   14000537a:	add    BYTE PTR [rax],al
   14000537c:	and    BYTE PTR [rcx+0x0],dh
   14000537f:	add    BYTE PTR [rax+0x53],bl
   140005382:	add    BYTE PTR [rax],al
   140005384:	jo     0x1400053d9
	...
   140005392:	add    BYTE PTR [rax],al
   140005394:	push   rdx
   140005395:	push   rbx
   140005396:	rex.R push rbx
   140005398:	xchg   ebp,eax
   140005399:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000539a:	sub    dh,al
   14000539c:	sbb    dh,BYTE PTR [rsp+rbx*1]
   14000539f:	rex.W scas al,BYTE PTR es:[rdi]
   1400053a1:	(bad)  
   1400053a2:	mov    bh,0x90
   1400053a4:	lods   eax,DWORD PTR ds:[rsi]
   1400053a5:	xor    eax,0x19723
   1400053aa:	add    BYTE PTR [rax],al
   1400053ac:	push   rax
   1400053ad:	rex.R
   1400053ae:	rex.WB
   1400053af:	rex.B
   1400053b0:	rex.WR
   1400053b1:	rex.WRXB
   1400053b2:	rex.RXB
   1400053b3:	cs jo  0x14000541a
   1400053b6:	(bad)  
	...
   1400053cb:	add    BYTE PTR [rdi+0x43],al
   1400053ce:	push   rsp
   1400053cf:	rex.WR add BYTE PTR [rax],r10b
   1400053d2:	add    BYTE PTR [rax],al
   1400053d4:	fwait
   1400053d5:	add    BYTE PTR [rax],al
   1400053d7:	add    BYTE PTR [rsi],ch
   1400053d9:	je     0x140005440
   1400053db:	js     0x140005451
   1400053dd:	and    al,0x64
   1400053df:	imul   eax,DWORD PTR [rax],0xa0000000
   1400053e5:	adc    BYTE PTR [rax],al
   1400053e7:	add    BYTE PTR [rax+0x28],bl
   1400053ea:	add    BYTE PTR [rax],al
   1400053ec:	cs je  0x140005454
   1400053ef:	js     0x140005465
   1400053f1:	and    al,0x6d
   1400053f3:	outs   dx,BYTE PTR ds:[rsi]
   1400053f4:	add    BYTE PTR [rax],al
   1400053f6:	add    BYTE PTR [rax],al
   1400053f8:	add    BYTE PTR [rcx],bh
   1400053fa:	add    BYTE PTR [rax],al
   1400053fc:	adc    al,BYTE PTR [rax]
   1400053fe:	add    BYTE PTR [rax],al
   140005400:	cs je  0x140005468
   140005403:	js     0x140005479
   140005405:	and    al,0x6d
   140005407:	outs   dx,BYTE PTR ds:[rsi]
   140005408:	and    al,0x30
   14000540a:	xor    BYTE PTR [rax],al
   14000540c:	and    BYTE PTR [rcx],bh
   14000540e:	add    BYTE PTR [rax],al
   140005410:	add    BYTE PTR [rcx],0x0
   140005413:	add    BYTE PTR [rsi],ch
   140005415:	je     0x14000547c
   140005417:	js     0x14000548d
   140005419:	and    al,0x78
   14000541b:	add    BYTE PTR [rax+0x1e00003a],ah
   140005421:	add    BYTE PTR [rax],al
   140005423:	add    BYTE PTR [rsi],ch
   140005425:	je     0x14000548c
   140005427:	js     0x14000549d
   140005429:	and    al,0x79
   14000542b:	add    BYTE PTR fs:[rax],al
   14000542e:	add    BYTE PTR [rax],al
   140005430:	add    BYTE PTR [rax+0x0],al
   140005433:	add    BYTE PTR [rax],cl
   140005435:	add    eax,0x692e0000
   14000543a:	fs (bad) 
   14000543c:	je     0x14000549f
   14000543e:	and    al,0x35
   140005440:	add    BYTE PTR [rax],al
   140005442:	add    BYTE PTR [rax],al
   140005444:	or     BYTE PTR [rbp+0x0],al
   140005447:	add    BYTE PTR [rax],dl
   140005449:	add    BYTE PTR [rax],al
   14000544b:	add    BYTE PTR [rsi],ch
   14000544d:	xor    BYTE PTR [rax],dh
   14000544f:	movsxd esp,DWORD PTR [rsi+0x67]
   140005452:	add    BYTE PTR [rax],al
   140005454:	sbb    BYTE PTR [rbp+0x0],al
   140005457:	add    BYTE PTR [rax],cl
   140005459:	add    BYTE PTR [rax],al
   14000545b:	add    BYTE PTR [rsi],ch
   14000545d:	rex.XB push r10
   14000545f:	push   rsp
   140005460:	and    al,0x58
   140005462:	rex.XB
   140005463:	add    BYTE PTR [r8],al
   140005466:	add    BYTE PTR [rax],al
   140005468:	and    BYTE PTR [rbp+0x0],al
   14000546b:	add    BYTE PTR [rax],cl
   14000546d:	add    BYTE PTR [rax],al
   14000546f:	add    BYTE PTR [rsi],ch
   140005471:	rex.XB push r10
   140005473:	push   rsp
   140005474:	and    al,0x58
   140005476:	rex.XB
   140005477:	rex.B
   140005478:	add    BYTE PTR [r8],al
   14000547b:	add    BYTE PTR [rax],ch
   14000547d:	add    BYTE PTR [r8],r8b
   140005480:	or     BYTE PTR [rax],al
   140005482:	add    BYTE PTR [rax],al
   140005484:	cs rex.XB push r10
   140005487:	push   rsp
   140005488:	and    al,0x58
   14000548a:	rex.XB
   14000548b:	rex.WR add BYTE PTR [rax],r8b
   14000548e:	add    BYTE PTR [rax],al
   140005490:	xor    BYTE PTR [rbp+0x0],al
   140005493:	add    BYTE PTR [rax],cl
   140005495:	add    BYTE PTR [rax],al
   140005497:	add    BYTE PTR [rsi],ch
   140005499:	rex.XB push r10
   14000549b:	push   rsp
   14000549c:	and    al,0x58
   14000549e:	rex.XB push r13
   1400054a0:	add    BYTE PTR [rax],al
   1400054a2:	add    BYTE PTR [rax],al
   1400054a4:	cmp    BYTE PTR [rbp+0x0],al
   1400054a7:	add    BYTE PTR [rax],cl
   1400054a9:	add    BYTE PTR [rax],al
   1400054ab:	add    BYTE PTR [rsi],ch
   1400054ad:	rex.XB push r10
   1400054af:	push   rsp
   1400054b0:	and    al,0x58
   1400054b2:	rex.XB pop r10
   1400054b4:	add    BYTE PTR [rax],al
   1400054b6:	add    BYTE PTR [rax],al
   1400054b8:	rex
   1400054b9:	add    BYTE PTR [r8],r8b
   1400054bc:	or     BYTE PTR [rax],al
   1400054be:	add    BYTE PTR [rax],al
   1400054c0:	cs rex.XB push r10
   1400054c3:	push   rsp
   1400054c4:	and    al,0x58
   1400054c6:	rex.WB
   1400054c7:	add    BYTE PTR [r8],al
   1400054ca:	add    BYTE PTR [rax],al
   1400054cc:	rex.W
   1400054cd:	add    BYTE PTR [r8],r8b
   1400054d0:	or     BYTE PTR [rax],al
   1400054d2:	add    BYTE PTR [rax],al
   1400054d4:	cs rex.XB push r10
   1400054d7:	push   rsp
   1400054d8:	and    al,0x58
   1400054da:	rex.WB
   1400054db:	rex.B
   1400054dc:	add    BYTE PTR [r8],al
   1400054df:	add    BYTE PTR [rax+0x45],dl
   1400054e2:	add    BYTE PTR [rax],al
   1400054e4:	or     BYTE PTR [rax],al
   1400054e6:	add    BYTE PTR [rax],al
   1400054e8:	cs rex.XB push r10
   1400054eb:	push   rsp
   1400054ec:	and    al,0x58
   1400054ee:	rex.WB pop r9
   1400054f0:	add    BYTE PTR [rax],al
   1400054f2:	add    BYTE PTR [rax],al
   1400054f4:	pop    rax
   1400054f5:	add    BYTE PTR [r8],r8b
   1400054f8:	or     BYTE PTR [rax],al
   1400054fa:	add    BYTE PTR [rax],al
   1400054fc:	cs rex.XB push r10
   1400054ff:	push   rsp
   140005500:	and    al,0x58
   140005502:	rex.WB pop r10
   140005504:	add    BYTE PTR [rax],al
   140005506:	add    BYTE PTR [rax],al
   140005508:	(bad)  
   140005509:	add    BYTE PTR [r8],r8b
   14000550c:	add    BYTE PTR [rcx],0x0
   14000550f:	add    BYTE PTR [rsi],ch
   140005511:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140005519:	add    BYTE PTR [rax],al
   14000551b:	add    al,ah
   14000551d:	rex.RX add BYTE PTR [rax],r8b
   140005520:	push   rax
   140005521:	or     DWORD PTR [rax],eax
   140005523:	add    BYTE PTR [rsi],ch
   140005525:	jb     0x14000558b
   140005527:	(bad)  
   140005528:	je     0x14000558b
   14000552a:	add    BYTE PTR [rax],al
   14000552c:	xor    BYTE PTR [rax+0x0],dl
   14000552f:	add    BYTE PTR [rbx+rax*1+0x0],ah
   140005533:	add    BYTE PTR [rsi],ch
   140005535:	jb     0x14000559b
   140005537:	(bad)  
   140005538:	je     0x14000559b
   14000553a:	and    al,0x72
   14000553c:	add    BYTE PTR [rax],al
   14000553e:	add    BYTE PTR [rax],al
   140005540:	xchg   esp,eax
   140005541:	push   rbx
   140005542:	add    BYTE PTR [rax],al
   140005544:	mov    WORD PTR [rdx],es
   140005546:	add    BYTE PTR [rax],al
   140005548:	cs jb  0x1400055af
   14000554b:	(bad)  
   14000554c:	je     0x1400055af
   14000554e:	and    al,0x7a
   140005550:	jp     0x1400055cc
   140005552:	fs (bad) 
   140005554:	add    BYTE PTR [eax],al
   140005557:	add    BYTE PTR [rax],ah
   140005559:	push   rsi
   14000555a:	add    BYTE PTR [rax],al
   14000555c:	je     0x140005562
   14000555e:	add    BYTE PTR [rax],al
   140005560:	cs js  0x1400055c7
   140005563:	(bad)  
   140005564:	je     0x1400055c7
   140005566:	add    BYTE PTR [rax],al
   140005568:	xchg   esp,eax
   140005569:	pop    rdx
   14000556a:	add    BYTE PTR [rax],al
   14000556c:	movabs al,ds:0x746164692e000000
   140005575:	(bad)  
   140005576:	and    al,0x32
   140005578:	add    BYTE PTR [rax],al
   14000557a:	add    BYTE PTR [rax],al
   14000557c:	xor    al,0x5b
   14000557e:	add    BYTE PTR [rax],al
   140005580:	adc    al,0x0
   140005582:	add    BYTE PTR [rax],al
   140005584:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000558d:	add    BYTE PTR [rax],al
   14000558f:	add    BYTE PTR [rax+0x5b],cl
   140005592:	add    BYTE PTR [rax],al
   140005594:	or     BYTE PTR [rip+0x692e0000],al        # 0x1a92e559a
   14000559a:	fs (bad) 
   14000559c:	je     0x1400055ff
   14000559e:	and    al,0x34
   1400055a0:	add    BYTE PTR [rax],al
   1400055a2:	add    BYTE PTR [rax],al
   1400055a4:	push   rax
   1400055a5:	(bad)  
   1400055a6:	add    BYTE PTR [rax],al
   1400055a8:	add    al,BYTE PTR [rip+0x692e0000]        # 0x1a92e55ae
   1400055ae:	fs (bad) 
   1400055b0:	je     0x140005613
   1400055b2:	and    al,0x36
   1400055b4:	add    BYTE PTR [rax],al
   1400055b6:	add    BYTE PTR [rax],al
   1400055b8:	add    BYTE PTR [rax+0x0],dh
   1400055bb:	add    BYTE PTR [rax],ch
   1400055bd:	add    BYTE PTR [rax],al
   1400055bf:	add    BYTE PTR [rsi],ch
   1400055c1:	fs (bad) 
   1400055c3:	je     0x140005626
   1400055c5:	add    BYTE PTR [rax],al
   1400055c7:	add    BYTE PTR [rax],ch
   1400055c9:	jo     0x1400055cb
   1400055cb:	add    BYTE PTR [rsi],bl
   1400055cd:	add    DWORD PTR [rax],eax
   1400055cf:	add    BYTE PTR [rsi],ch
   1400055d1:	fs (bad) 
   1400055d3:	je     0x140005636
   1400055d5:	and    al,0x72
   1400055d7:	add    BYTE PTR [rax+0x71],dl
   1400055da:	add    BYTE PTR [rax],al
   1400055dc:	fmul   DWORD PTR [rbx]
   1400055de:	add    BYTE PTR [rax],al
   1400055e0:	cs (bad) 
   1400055e3:	jae    0x1400055e5
   1400055e5:	add    BYTE PTR [rax],al
   1400055e7:	add    BYTE PTR [rax],al
   1400055e9:	add    BYTE PTR [rax],0x0
   1400055ec:	jo     0x1400055f0
   1400055ee:	add    BYTE PTR [rax],al
   1400055f0:	cs jo  0x140005657
   1400055f3:	(bad)  
   1400055f4:	je     0x140005657
   1400055f6:	add    BYTE PTR [rax],al
   1400055f8:	add    BYTE PTR [rax+0x3000000],dl
   1400055fe:	add    BYTE PTR [rax],al
   140005600:	cs jb  0x140005676
   140005603:	jb     0x140005668
   140005605:	and    al,0x30
   140005607:	xor    DWORD PTR [rax],eax
   140005609:	add    BYTE PTR [rax],al
   14000560b:	add    BYTE PTR [rax],al
   14000560d:	xchg   ebx,eax
   14000560e:	add    BYTE PTR [rax],al
   140005610:	fsubr  DWORD PTR [rdx+0x0]
   140005613:	add    BYTE PTR [rsi],ch
   140005615:	jb     0x14000568a
   140005617:	jb     0x14000567c
   140005619:	and    al,0x30
   14000561b:	xor    al,BYTE PTR [rax]
   14000561d:	add    BYTE PTR [rax],al
   14000561f:	add    BYTE PTR [rcx],al
   140005621:	clts   
   140005623:	add    BYTE PTR [rdi],cl
   140005625:	fs (bad) 
   140005627:	add    BYTE PTR [rdi],cl
   140005629:	xor    al,0x6
   14000562b:	add    BYTE PTR [rdi],cl
   14000562d:	xor    cl,BYTE PTR [rbx]
   14000562f:	jo     0x140005632
   140005631:	or     al,BYTE PTR [rax+rax*1]
   140005634:	or     dh,BYTE PTR [rsi+rax*1]
   140005637:	add    BYTE PTR [rdx],cl
   140005639:	xor    al,BYTE PTR [rsi]
   14000563b:	jo     0x14000563e
   14000563d:	add    al,0x1
   14000563f:	add    BYTE PTR [rdx+riz*2],al
   140005642:	add    BYTE PTR [rax],al
   140005644:	sbb    DWORD PTR [rdi],esi
   140005646:	or     DWORD PTR [rax],eax
   140005648:	es fs jo 0x14000564c
   14000564c:	and    dh,BYTE PTR [rdi+rbp*2]
   14000564f:	add    BYTE PTR [rip+0x7006a01],dl        # 0x14700c056
   140005655:	loopne 0x14000565c
   140005657:	jo     0x14000565d
   140005659:	push   rax
   14000565a:	add    BYTE PTR [rax],al
   14000565c:	pop    rsp
   14000565d:	cmp    BYTE PTR [rax],al
   14000565f:	add    BYTE PTR [rax],dl
   140005661:	rex.WRX add BYTE PTR [rax],r8b
   140005664:	rex.X add eax,DWORD PTR [rax]
   140005667:	add    bh,bh
   140005669:	(bad)  
   14000566a:	(bad)  
   14000566b:	jmp    QWORD PTR [rsi]
   14000566d:	cmp    DWORD PTR [rax],eax
   14000566f:	add    BYTE PTR [rax],al
   140005671:	add    BYTE PTR [rax],al
   140005673:	add    BYTE PTR [rdx],dh
   140005675:	cmp    DWORD PTR [rax],eax
   140005677:	add    BYTE PTR [rax-0xffffef],ah
   14000567d:	(bad)  
   14000567e:	(bad)  
   14000567f:	inc    ebx
   140005681:	adc    al,BYTE PTR [rax]
   140005683:	add    BYTE PTR [rax],al
   140005685:	add    BYTE PTR [rax],al
   140005687:	add    BYTE PTR [rdx+0x13],al
   14000568a:	add    BYTE PTR [rax],al
   14000568c:	add    DWORD PTR [rax],eax
   14000568e:	add    BYTE PTR [rax],al
   140005690:	pop    rdx
   140005691:	adc    eax,DWORD PTR [rax]
   140005693:	add    BYTE PTR [rax],al
   140005695:	add    BYTE PTR [rax],al
   140005697:	add    BYTE PTR [rbp+0x13],ah
   14000569a:	add    BYTE PTR [rax],al
   14000569c:	(bad)  
   14000569d:	(bad)  
   14000569e:	(bad)  
   14000569f:	call   QWORD PTR [rcx]
   1400056a1:	sbb    BYTE PTR [rsi],al
   1400056a3:	add    BYTE PTR [rax],bl
   1400056a5:	or     eax,DWORD PTR fs:[rax]
   1400056a8:	adc    al,0x34
   1400056aa:	or     al,BYTE PTR [rax]
   1400056ac:	or     BYTE PTR [rdx+0x4],dh
   1400056af:	jo     0x140005671
   1400056b1:	(bad)  
   1400056b2:	add    BYTE PTR [rax],al
   1400056b4:	call   0x13f005706
   1400056b9:	(bad)  
   1400056ba:	(bad)  
   1400056bb:	inc    DWORD PTR [rcx+rdi*1+0x0]
   1400056bf:	add    BYTE PTR [rax-0xffffed],ah
   1400056c5:	(bad)  
   1400056c6:	(bad)  
   1400056c7:	jmp    rbp
   1400056c9:	adc    eax,DWORD PTR [rax]
   1400056cb:	add    BYTE PTR [rax],al
   1400056cd:	add    BYTE PTR [rax],al
   1400056cf:	add    al,dh
   1400056d1:	adc    eax,DWORD PTR [rax]
   1400056d3:	add    bh,bh
   1400056d5:	(bad)  
   1400056d6:	(bad)  
   1400056d7:	inc    DWORD PTR [rcx]
   1400056d9:	or     eax,DWORD PTR [rcx]
   1400056db:	add    BYTE PTR [rbx],cl
   1400056dd:	(bad)  
   1400056de:	add    BYTE PTR [rax],al
   1400056e0:	add    DWORD PTR [rax],edx
   1400056e2:	(bad)  
   1400056e3:	add    BYTE PTR [rax],dl
   1400056e5:	or     eax,DWORD PTR fs:[rax]
   1400056e8:	adc    BYTE PTR [rdx+rcx*1],dh
   1400056eb:	add    BYTE PTR [rax],dl
   1400056ed:	jb     0x1400056fb
   1400056ef:	jo     0x1400056f2
   1400056f1:	(bad)  
   1400056f2:	add    al,BYTE PTR [rax]
   1400056f4:	(bad)  
   1400056f5:	push   rdx
   1400056f6:	add    dh,BYTE PTR [rax]
   1400056f8:	sbb    DWORD PTR [rcx],edi
   1400056fa:	or     eax,0x21742b00
   1400056ff:	add    BYTE PTR [rdi],ah
   140005701:	and    BYTE PTR fs:[rax],al
   140005704:	and    esi,DWORD PTR [rdi+rbx*1]
   140005707:	add    BYTE PTR [rdi],dl
   140005709:	add    DWORD PTR [rax],ebx
   14000570b:	add    BYTE PTR [rax+rsi*8],cl
   14000570e:	or     ah,al
   140005710:	or     al,dl
   140005712:	(bad)  
   140005713:	rol    BYTE PTR [rax+rdx*2],0x0
   140005717:	add    BYTE PTR [rax+rdi*1+0x0],bl
   14000571b:	add    al,bl
   14000571d:	rex.WRX add BYTE PTR [rax],r8b
   140005720:	mov    dl,0x0
   140005722:	add    BYTE PTR [rax],al
   140005724:	(bad)  
   140005725:	(bad)  
   140005726:	(bad)  
   140005727:	call   QWORD PTR [rsi+0x39]
   14000572a:	add    BYTE PTR [rax],al
   14000572c:	add    BYTE PTR [rax],al
   14000572e:	add    BYTE PTR [rax],al
   140005730:	(bad)  
   140005731:	cmp    DWORD PTR [rax],eax
   140005733:	add    BYTE PTR [rax],al
   140005735:	add    BYTE PTR [rax],al
   140005737:	add    al,ah
   140005739:	(bad)  
   14000573a:	add    BYTE PTR [rax],al
   14000573c:	(bad)  
   14000573d:	(bad)  
   14000573e:	(bad)  
   14000573f:	dec    DWORD PTR [rax+0x17]
   140005742:	add    BYTE PTR [rax],al
   140005744:	add    BYTE PTR [rax],al
   140005746:	add    BYTE PTR [rax],al
   140005748:	or     bl,BYTE PTR [rcx]
   14000574a:	add    BYTE PTR [rax],al
   14000574c:	add    DWORD PTR [rax],eax
   14000574e:	add    BYTE PTR [rax],al
   140005750:	xor    BYTE PTR [rcx],bl
   140005752:	add    BYTE PTR [rax],al
   140005754:	add    BYTE PTR [rax],al
   140005756:	add    BYTE PTR [rax],al
   140005758:	cmp    ebx,DWORD PTR [rcx]
   14000575a:	add    BYTE PTR [rax],al
   14000575c:	(bad)  
   14000575d:	(bad)  
   14000575e:	(bad)  
   14000575f:	call   QWORD PTR [rcx]
   140005761:	adc    BYTE PTR [rdx],al
   140005763:	add    BYTE PTR [rax],cl
   140005765:	jb     0x14000576b
   140005767:	xor    al,al
   140005769:	(bad)  
   14000576a:	add    BYTE PTR [rax],al
   14000576c:	mov    al,0x4e
   14000576e:	add    BYTE PTR [rax],al
   140005770:	sbb    BYTE PTR [rcx],0x0
   140005773:	add    bh,bh
   140005775:	(bad)  
   140005776:	(bad)  
   140005777:	(bad)  
   140005778:	mov    ebp,0x19
   14000577d:	add    BYTE PTR [rax],al
   14000577f:	add    ah,cl
   140005781:	sbb    DWORD PTR [rax],eax
   140005783:	add    bh,bh
   140005785:	(bad)  
   140005786:	(bad)  
   140005787:	call   FWORD PTR [rcx]
   140005789:	xor    eax,0x5423000b
   14000578e:	push   rsp
   14000578f:	add    BYTE PTR [rdi],bl
   140005791:	xor    al,0x53
   140005793:	add    BYTE PTR [rdx],dl
   140005795:	add    DWORD PTR [rax+rax*1+0xb],ecx
   140005799:	lock or eax,esp
   14000579c:	(bad)  
   14000579d:	rol    BYTE PTR [rip+0x600470],0x0        # 0x140605c14
   1400057a4:	pop    rsp
   1400057a5:	cmp    BYTE PTR [rax],al
   1400057a7:	add    BYTE PTR [rax+0x5200004e],cl
   1400057ad:	add    al,BYTE PTR [rax]
   1400057af:	add    bh,bh
   1400057b1:	(bad)  
   1400057b2:	(bad)  
   1400057b3:	push   QWORD PTR [rsi+0x39]
   1400057b6:	add    BYTE PTR [rax],al
   1400057b8:	lock sbb DWORD PTR [rax],eax
   1400057bb:	add    bh,bh
   1400057bd:	(bad)  
   1400057be:	(bad)  
   1400057bf:	call   FWORD PTR [rdx+0x1a]
   1400057c2:	add    BYTE PTR [rax],al
   1400057c4:	add    BYTE PTR [rax],al
   1400057c6:	add    BYTE PTR [rax],al
   1400057c8:	xor    eax,0xff00001b
   1400057cd:	(bad)  
   1400057ce:	(bad)  
   1400057cf:	call   FWORD PTR [rcx]
   1400057d1:	sbb    eax,0x741d0008
   1400057d6:	(bad)  
   1400057d7:	add    BYTE PTR [rcx],bl
   1400057d9:	fs or  eax,0xc341500
   1400057df:	add    BYTE PTR [rcx],cl
   1400057e1:	xchg   edx,eax
   1400057e2:	add    eax,0x37c0f0
   1400057e7:	add    BYTE PTR [rax+0x4e],ah
   1400057ea:	add    BYTE PTR [rax],al
   1400057ec:	(bad)  
   1400057ed:	(bad)  
   1400057ee:	(bad)  
   1400057ef:	dec    DWORD PTR [rax+0x39]
	...
   140005801:	add    BYTE PTR [rax],al
   140005803:	add    BYTE PTR [rcx],al
   140005805:	add    BYTE PTR [rax],al
   140005807:	add    BYTE PTR [rcx],al
   140005809:	add    BYTE PTR [rax],al
   14000580b:	add    BYTE PTR [rdx],al
   14000580d:	add    BYTE PTR [rax],al
   14000580f:	add    BYTE PTR [rcx],al
   140005811:	add    BYTE PTR [rax],al
   140005813:	add    BYTE PTR [rax],bl
   140005815:	pop    rax
   140005816:	add    BYTE PTR [rax],al
   140005818:	add    BYTE PTR [rax],al
	...
   140005823:	add    BYTE PTR [rcx+rdi*1+0x480000],dl
   14000582a:	add    BYTE PTR [rax],al
   14000582c:	add    BYTE PTR [rax],al
   14000582e:	add    BYTE PTR [rax],al
   140005830:	sbb    BYTE PTR [rbx],0x0
   140005833:	add    bh,bh
   140005835:	(bad)  
   140005836:	(bad)  
   140005837:	call   rsi
   140005839:	sbb    eax,DWORD PTR [rax]
   14000583b:	add    BYTE PTR [rax],al
   14000583d:	add    BYTE PTR [rax],al
   14000583f:	add    dh,bh
   140005841:	sbb    eax,DWORD PTR [rax]
   140005843:	add    BYTE PTR [rcx],al
   140005845:	add    BYTE PTR [rax],al
   140005847:	add    BYTE PTR [rax],ah
   140005849:	sbb    al,0x0
   14000584b:	add    BYTE PTR [rax],al
   14000584d:	add    BYTE PTR [rax],al
   14000584f:	add    BYTE PTR [rbx+0x1c],al
   140005852:	add    BYTE PTR [rax],al
   140005854:	(bad)  
   140005855:	(bad)  
   140005856:	(bad)  
   140005857:	call   QWORD PTR [rcx+rdi*1+0x0]
   14000585e:	add    BYTE PTR [rax],al
   140005860:	movabs eax,ds:0xda00000002000039
   140005869:	cmp    DWORD PTR [rax],eax
   14000586b:	add    BYTE PTR [rax],al
   14000586d:	add    BYTE PTR [rax],al
   14000586f:	add    BYTE PTR [rcx],bl
   140005871:	or     al,BYTE PTR [rdx]
   140005873:	add    BYTE PTR [rdx],cl
   140005875:	push   rdx
   140005876:	(bad)  
   140005877:	push   rax
   140005878:	shl    BYTE PTR [rdi],0x0
   14000587b:	add    BYTE PTR [rax+0x4e],ah
   14000587e:	add    BYTE PTR [rax],al
   140005880:	adc    DWORD PTR [rbx],ebx
   140005882:	(bad)  
   140005883:	add    BYTE PTR [rbx],bl
   140005885:	je     0x140005892
   140005887:	add    BYTE PTR [rsi],dl
   140005889:	xor    al,0xa
   14000588b:	add    BYTE PTR [rcx],cl
   14000588d:	jb     0x140005891
   14000588f:	push   rax
   140005890:	shl    BYTE PTR [rdi],0x0
   140005893:	add    BYTE PTR [rax],bh
   140005895:	rex.WRX add BYTE PTR [rax],r8b
   140005898:	(bad)  
   140005899:	(bad)  
   14000589a:	(bad)  
   14000589b:	(bad)  
   14000589c:	out    dx,al
   14000589d:	cmp    DWORD PTR [rax],eax
   14000589f:	add    BYTE PTR [rax],al
   1400058a1:	add    BYTE PTR [rax],al
   1400058a3:	add    dl,bh
   1400058a5:	cmp    DWORD PTR [rax],eax
   1400058a7:	add    BYTE PTR [rcx],al
   1400058a9:	add    BYTE PTR [rax],al
   1400058ab:	add    BYTE PTR [rax],cl
   1400058ad:	cmp    al,BYTE PTR [rax]
   1400058af:	add    BYTE PTR [rax+0x1c],dh
   1400058b2:	add    BYTE PTR [rax],al
   1400058b4:	(bad)  
   1400058b5:	(bad)  
   1400058b6:	(bad)  
   1400058b7:	(bad)  
   1400058b8:	mov    ebx,0x1c
   1400058bd:	add    BYTE PTR [rax],al
   1400058bf:	add    dh,al
   1400058c1:	sbb    al,0x0
   1400058c3:	add    BYTE PTR [rcx],al
   1400058c5:	add    BYTE PTR [rax],al
   1400058c7:	add    al,ah
   1400058c9:	sbb    al,0x0
   1400058cb:	add    BYTE PTR [rdx],al
   1400058cd:	add    BYTE PTR [rax],al
   1400058cf:	add    BYTE PTR [rbx*1+0x10000],al
   1400058d6:	add    BYTE PTR [rax],al
   1400058d8:	nop    DWORD PTR [rax]
   1400058db:	add    BYTE PTR [rax],al
   1400058dd:	add    BYTE PTR [rax],al
   1400058df:	add    BYTE PTR [rdx],bl
   1400058e1:	sbb    eax,0xffff0000
   1400058e6:	(bad)  
   1400058e7:	call   FWORD PTR [rcx]
   1400058e9:	xor    ecx,DWORD PTR [rbx]
   1400058eb:	add    BYTE PTR [rdx],ah
   1400058ed:	je     0x140005884
   1400058ef:	add    BYTE PTR [rdx],ah
   1400058f1:	fs xchg esp,eax
   1400058f3:	add    BYTE PTR [rdx],ah
   1400058f5:	xor    al,0x92
   1400058f7:	add    BYTE PTR [rdx],ah
   1400058f9:	add    DWORD PTR [rsi+0x12f01400],ecx
   1400058ff:	loopne 0x140005911
   140005901:	push   rax
   140005902:	add    BYTE PTR [rax],al
   140005904:	int3   
   140005905:	(bad)  
   140005906:	add    BYTE PTR [rax],al
   140005908:	(bad)  
   140005909:	add    al,0x0
   14000590b:	add    BYTE PTR [rcx],bl
   14000590d:	sub    ecx,DWORD PTR [rbx]
   14000590f:	add    BYTE PTR [rcx],bl
   140005911:	push   rsp
   140005912:	push   rcx
   140005913:	add    BYTE PTR [rcx],bl
   140005915:	xor    al,0x50
   140005917:	add    BYTE PTR [rcx],bl
   140005919:	add    DWORD PTR [rdx+0x0],ecx
   14000591c:	adc    dh,al
   14000591e:	adc    al,ah
   140005920:	(bad)  
   140005921:	ror    BYTE PTR [rax+rsi*2],0xb
   140005925:	(bad)  
   140005926:	add    BYTE PTR [rax],al
   140005928:	int3   
   140005929:	(bad)  
   14000592a:	add    BYTE PTR [rax],al
   14000592c:	add    al,BYTE PTR [rax]
   14000592f:	add    BYTE PTR [rcx],dl
   140005931:	(bad)  
   140005932:	or     eax,DWORD PTR [rax]
   140005934:	(bad)  
   140005935:	xor    al,0x36
   140005937:	add    BYTE PTR [rdx],bl
   140005939:	add    DWORD PTR [rsi],ebp
   14000593b:	add    BYTE PTR [rsi],cl
   14000593d:	lock or al,0xe0
   140005940:	or     dl,al
   140005942:	or     al,al
   140005944:	(bad)  
   140005945:	jo     0x14000594c
   140005947:	(bad)  
   140005948:	add    al,0x50
   14000594a:	add    BYTE PTR [rax],al
   14000594c:	shl    BYTE PTR [rdi],0x0
   14000594f:	add    BYTE PTR [rax],al
   140005951:	rex.WRXB add BYTE PTR [r8],r8b
   140005954:	(bad)  
   140005955:	(bad)  
   140005956:	(bad)  
   140005957:	call   FWORD PTR [rdx+rdi*1]
   14000595a:	add    BYTE PTR [rax],al
   14000595c:	add    BYTE PTR [rax],al
   14000595e:	add    BYTE PTR [rax],al
   140005960:	(bad)  
   140005961:	and    DWORD PTR [rax],eax
   140005963:	add    bh,bh
   140005965:	(bad)  
   140005966:	(bad)  
   140005967:	(bad)  
   140005968:	mov    ebx,0x21
   14000596d:	add    BYTE PTR [rax],al
   14000596f:	add    ch,ah
   140005971:	and    al,0x0
   140005973:	add    bh,bh
   140005975:	(bad)  
   140005976:	(bad)  
   140005977:	inc    DWORD PTR [rcx]
   140005979:	add    al,0x1
   14000597b:	add    BYTE PTR [rdx+rax*4],al
   14000597e:	add    BYTE PTR [rax],al
   140005980:	add    DWORD PTR [rcx+rax*1],eax
   140005983:	add    BYTE PTR [rdx+riz*4],al
   140005986:	add    BYTE PTR [rax],al
   140005988:	add    DWORD PTR [rsi],eax
   14000598a:	add    al,BYTE PTR [rax]
   14000598c:	(bad)  
   14000598d:	xor    al,BYTE PTR [rdx]
   14000598f:	xor    BYTE PTR [rcx],al
   140005991:	or     al,BYTE PTR [rax+rax*1]
   140005994:	or     dh,BYTE PTR [rax+rcx*1]
   140005997:	add    BYTE PTR [rdx],cl
   140005999:	push   rdx
   14000599a:	(bad)  
   14000599b:	jo     0x14000599e
   14000599d:	adc    BYTE PTR [rax+rax*1],al
   1400059a0:	adc    BYTE PTR [rax+rcx*1],dh
   1400059a3:	add    BYTE PTR [rax],dl
   1400059a5:	push   rdx
   1400059a6:	or     al,0x70
   1400059a8:	add    DWORD PTR [rax],edx
   1400059aa:	add    al,0x0
   1400059ac:	adc    BYTE PTR [rax+rcx*1],dh
   1400059af:	add    BYTE PTR [rax],dl
   1400059b1:	push   rdx
   1400059b2:	or     al,0x60
   1400059b4:	or     DWORD PTR [rbx+rcx*1],ebx
   1400059b7:	add    BYTE PTR [rsp+rsi*2],bl
   1400059ba:	sbb    al,0x0
   1400059bc:	sbb    al,0x64
   1400059be:	sbb    eax,DWORD PTR [rax]
   1400059c0:	sbb    al,0x34
   1400059c2:	sbb    al,BYTE PTR [rax]
   1400059c4:	sbb    al,0x1
   1400059c6:	(bad)  
   1400059c7:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e06dbd
   1400059cd:	rol    BYTE PTR [rax],0x0
   1400059d0:	ss (bad) 
   1400059d2:	add    BYTE PTR [rax],al
   1400059d4:	add    DWORD PTR [rax],eax
   1400059d6:	add    BYTE PTR [rax],al
   1400059d8:	shr    BYTE PTR [rsi],1
   1400059da:	add    BYTE PTR [rax],al
   1400059dc:	(bad)  
   1400059dd:	xor    BYTE PTR [rax],al
   1400059df:	add    BYTE PTR [rsi],ch
   1400059e1:	cmp    al,BYTE PTR [rax]
   1400059e3:	add    dh,al
   1400059e5:	xor    BYTE PTR [rax],al
   1400059e7:	add    BYTE PTR [rcx],al
   1400059e9:	add    BYTE PTR [rax],al
   1400059eb:	add    BYTE PTR [rcx],dl
   1400059ed:	or     al,BYTE PTR [rax+rax*1]
   1400059f0:	or     dh,BYTE PTR [rsi+rax*1]
   1400059f3:	add    BYTE PTR [rdx],cl
   1400059f5:	xor    al,BYTE PTR [rsi]
   1400059f7:	jo     0x140005a2f
   1400059f9:	(bad)  
   1400059fa:	add    BYTE PTR [rax],al
   1400059fc:	add    DWORD PTR [rax],eax
   1400059fe:	add    BYTE PTR [rax],al
   140005a00:	mov    ch,0x31
   140005a02:	add    BYTE PTR [rax],al
   140005a04:	cli    
   140005a05:	xor    DWORD PTR [rax],eax
   140005a07:	add    BYTE PTR [rdx+0x3a],dl
   140005a0a:	add    BYTE PTR [rax],al
   140005a0c:	add    BYTE PTR [rax],al
   140005a0e:	add    BYTE PTR [rax],al
   140005a10:	add    DWORD PTR [rdx+rax*1],ecx
   140005a13:	add    BYTE PTR [rcx+rax*1],cl
   140005a16:	adc    DWORD PTR [rax],eax
   140005a18:	add    DWORD PTR [rcx+rax*1],eax
   140005a1b:	add    BYTE PTR [rdx+rax*2],al
   140005a1e:	add    BYTE PTR [rax],al
   140005a20:	or     DWORD PTR [rcx+rax*1],eax
   140005a23:	add    BYTE PTR [rdx+riz*1],al
   140005a26:	add    BYTE PTR [rax],al
   140005a28:	ss (bad) 
   140005a2a:	add    BYTE PTR [rax],al
   140005a2c:	add    DWORD PTR [rax],eax
   140005a2e:	add    BYTE PTR [rax],al
   140005a30:	mov    esp,0xf2000034
   140005a35:	xor    al,0x0
   140005a37:	add    BYTE PTR [rcx],al
   140005a39:	add    BYTE PTR [rax],al
   140005a3b:	add    dl,dh
   140005a3d:	xor    al,0x0
   140005a3f:	add    BYTE PTR [rcx],cl
   140005a41:	or     al,BYTE PTR [rax+rax*1]
   140005a44:	or     dh,BYTE PTR [rsi+rax*1]
   140005a47:	add    BYTE PTR [rdx],cl
   140005a49:	xor    al,BYTE PTR [rsi]
   140005a4b:	jo     0x140005a83
   140005a4d:	(bad)  
   140005a4e:	add    BYTE PTR [rax],al
   140005a50:	add    DWORD PTR [rax],eax
   140005a52:	add    BYTE PTR [rax],al
   140005a54:	int    0x35
   140005a56:	add    BYTE PTR [rax],al
   140005a58:	add    BYTE PTR [rsi],dh
   140005a5a:	add    BYTE PTR [rax],al
   140005a5c:	cmp    BYTE PTR [rdx],0x0
   140005a5f:	add    BYTE PTR [rax],al
   140005a61:	add    BYTE PTR ss:[rax],al
   140005a64:	add    DWORD PTR [rsi],eax
   140005a66:	add    al,BYTE PTR [rax]
   140005a68:	(bad)  
   140005a69:	xor    al,BYTE PTR [rdx]
   140005a6b:	push   rax
   140005a6c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d5a76
   140005a72:	or     DWORD PTR [rax],eax
   140005a74:	or     eax,0x1500632
   140005a79:	add    BYTE PTR [rax],al
   140005a7b:	add    BYTE PTR [rcx],al
   140005a7d:	sbb    DWORD PTR [rdx],ecx
   140005a7f:	add    BYTE PTR [rcx],bl
   140005a81:	je     0x140005a8c
   140005a83:	add    BYTE PTR [rcx],bl
   140005a85:	or     BYTE PTR fs:[rax],al
   140005a88:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140005a8c:	sbb    DWORD PTR [rsi+rax*1],esi
   140005a8f:	add    BYTE PTR [rcx],bl
   140005a91:	xor    dl,BYTE PTR [rip+0x5b48e0]        # 0x1405ba377
	...
   140005a9f:	add    dl,dl
   140005aa1:	(bad)  
   140005aa2:	add    BYTE PTR [rax],al
   140005aa4:	add    BYTE PTR [rax+0x0],al
   140005aa7:	add    BYTE PTR [rax+0x5b],al
   140005aad:	add    BYTE PTR [rax],al
   140005aaf:	add    BYTE PTR [rax],al
   140005ab1:	add    BYTE PTR [rax],al
   140005ab3:	add    BYTE PTR [rsi+0x61],al
   140005ab6:	add    BYTE PTR [rax],al
   140005ab8:	cmp    BYTE PTR [rax+0x0],al
   140005abb:	add    BYTE PTR [rax],ch
   140005abd:	pop    rdi
	...
   140005ac6:	add    BYTE PTR [rax],al
   140005ac8:	cwde   
   140005ac9:	(bad)  
   140005aca:	add    BYTE PTR [rax],al
   140005acc:	loopne 0x140005b11
   140005ace:	add    BYTE PTR [rax],al
   140005ad0:	sub    BYTE PTR [rax+rax*1+0x0],bl
	...
   140005adc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005add:	(bad)  
   140005ade:	add    BYTE PTR [rax],al
   140005ae0:	loopne 0x140005b22
   140005ae2:	add    BYTE PTR [rax],al
   140005ae4:	push   0x5f
   140005ae9:	add    BYTE PTR [rax],al
   140005aeb:	add    BYTE PTR [rax],al
   140005aed:	add    BYTE PTR [rax],al
   140005aef:	add    BYTE PTR [rsi+0x20000062],dh
   140005af5:	add    BYTE PTR [rax],r8b
   140005af8:	sub    BYTE PTR [rax+0x0],ah
	...
   140005b03:	add    BYTE PTR [rax],bl
   140005b05:	movsxd eax,DWORD PTR [rax]
   140005b07:	add    al,ah
   140005b09:	add    BYTE PTR [rax],r8b
   140005b0c:	fcomp  DWORD PTR [rsi+0x0]
	...
   140005b17:	add    BYTE PTR [rax+0x63],dh
   140005b1a:	add    BYTE PTR [rax],al
   140005b1c:	nop
   140005b1d:	rex.XB add BYTE PTR [r8],al
   140005b20:	add    BYTE PTR [rdi+0x0],bl
	...
   140005b2b:	add    al,al
   140005b2d:	movsxd eax,DWORD PTR [rax]
   140005b2f:	add    BYTE PTR [rax+0x43],bh
	...
   140005b45:	add    BYTE PTR [rax],al
   140005b47:	add    BYTE PTR [rax+0x60],dl
   140005b4a:	add    BYTE PTR [rax],al
   140005b4c:	add    BYTE PTR [rax],al
   140005b4e:	add    BYTE PTR [rax],al
   140005b50:	push   0x60
   140005b55:	add    BYTE PTR [rax],al
   140005b57:	add    BYTE PTR [rsi+0x60],bh
   140005b5a:	add    BYTE PTR [rax],al
   140005b5c:	add    BYTE PTR [rax],al
   140005b5e:	add    BYTE PTR [rax],al
   140005b60:	xchg   esp,eax
   140005b61:	(bad)  
   140005b62:	add    BYTE PTR [rax],al
   140005b64:	add    BYTE PTR [rax],al
   140005b66:	add    BYTE PTR [rax],al
   140005b68:	stos   BYTE PTR es:[rdi],al
   140005b69:	(bad)  
   140005b6a:	add    BYTE PTR [rax],al
   140005b6c:	add    BYTE PTR [rax],al
   140005b6e:	add    BYTE PTR [rax],al
   140005b70:	ret    0x60
	...
   140005b7f:	add    BYTE PTR [rsp+riz*2+0x0],bh
   140005b86:	add    BYTE PTR [rax],al
   140005b88:	movabs ds:0x8c00000000000064,al
   140005b91:	add    BYTE PTR fs:[rax],al
   140005b94:	add    BYTE PTR [rax],al
   140005b96:	add    BYTE PTR [rax],al
   140005b98:	jbe    0x140005bfe
   140005b9a:	add    BYTE PTR [rax],al
   140005b9c:	add    BYTE PTR [rax],al
   140005b9e:	add    BYTE PTR [rax],al
   140005ba0:	pop    rsp
   140005ba1:	add    BYTE PTR fs:[rax],al
   140005ba4:	add    BYTE PTR [rax],al
   140005ba6:	add    BYTE PTR [rax],al
   140005ba8:	rex.W
   140005ba9:	add    BYTE PTR fs:[rax],al
   140005bac:	add    BYTE PTR [rax],al
   140005bae:	add    BYTE PTR [rax],al
   140005bb0:	xor    al,0x64
   140005bb2:	add    BYTE PTR [rax],al
   140005bb4:	add    BYTE PTR [rax],al
   140005bb6:	add    BYTE PTR [rax],al
   140005bb8:	and    BYTE PTR [rax+rax*1+0x0],ah
   140005bbc:	add    BYTE PTR [rax],al
   140005bbe:	add    BYTE PTR [rax],al
   140005bc0:	add    ah,BYTE PTR [rax+rax*1+0x0]
   140005bc4:	add    BYTE PTR [rax],al
   140005bc6:	add    BYTE PTR [rax],al
   140005bc8:	out    0x63,al
   140005bca:	add    BYTE PTR [rax],al
   140005bcc:	add    BYTE PTR [rax],al
   140005bce:	add    BYTE PTR [rax],al
   140005bd0:	(bad)  
   140005bd1:	movsxd eax,DWORD PTR [rax]
   140005bd3:	add    BYTE PTR [rax],al
   140005bd5:	add    BYTE PTR [rax],al
   140005bd7:	add    ah,cl
   140005bd9:	movsxd eax,DWORD PTR [rax]
   140005bdb:	add    BYTE PTR [rax],al
   140005bdd:	add    BYTE PTR [rax],al
   140005bdf:	add    BYTE PTR [rcx+riz*2],dl
   140005be2:	add    BYTE PTR [rax],al
   140005be4:	add    BYTE PTR [rax],al
   140005be6:	add    BYTE PTR [rax],al
   140005be8:	and    BYTE PTR [rcx+0x0],ah
   140005beb:	add    BYTE PTR [rax],al
   140005bed:	add    BYTE PTR [rax],al
   140005bef:	add    BYTE PTR [rcx+riz*2],dh
   140005bf2:	add    BYTE PTR [rax],al
   140005bf4:	add    BYTE PTR [rax],al
   140005bf6:	add    BYTE PTR [rax],al
   140005bf8:	int3   
   140005bf9:	add    BYTE PTR fs:[rax],al
   140005bfc:	add    BYTE PTR [rax],al
   140005bfe:	add    BYTE PTR [rax],al
   140005c00:	loop   0x140005c66
   140005c02:	add    BYTE PTR [rax],al
   140005c04:	add    BYTE PTR [rax],al
   140005c06:	add    BYTE PTR [rax],al
   140005c08:	add    al,0x61
   140005c0a:	add    BYTE PTR [rax],al
   140005c0c:	add    BYTE PTR [rax],al
   140005c0e:	add    BYTE PTR [rax],al
   140005c10:	mul    BYTE PTR [rax+0x0]
   140005c13:	add    BYTE PTR [rax],al
   140005c15:	add    BYTE PTR [rax],al
   140005c17:	add    al,ah
   140005c19:	(bad)  
	...
   140005c26:	add    BYTE PTR [rax],al
   140005c28:	push   rsi
   140005c29:	adc    al,BYTE PTR [rax]
   140005c2b:	add    BYTE PTR [rax],al
   140005c2d:	add    BYTE PTR [rax],al
   140005c2f:	sbb    BYTE PTR [rdx+rbx*1+0x0],0x0
   140005c37:	adc    dl,0x15
   140005c3a:	add    BYTE PTR [rax],al
   140005c3c:	add    BYTE PTR [rax],al
   140005c3e:	add    BYTE PTR [rax+0x95f],al
   140005c44:	add    BYTE PTR [rax],al
   140005c46:	add    BYTE PTR [rax+0x165a],al
   140005c4c:	add    BYTE PTR [rax],al
   140005c4e:	add    BYTE PTR [rax+0x1290],al
   140005c54:	add    BYTE PTR [rax],al
   140005c56:	add    BYTE PTR [rax+0x6f1],al
   140005c5c:	add    BYTE PTR [rax],al
   140005c5e:	add    BYTE PTR [rax+0x110d],al
   140005c64:	add    BYTE PTR [rax],al
   140005c66:	add    BYTE PTR [rax+0x1925],al
   140005c6c:	add    BYTE PTR [rax],al
   140005c6e:	add    BYTE PTR [rax+0x151e],al
   140005c74:	add    BYTE PTR [rax],al
   140005c76:	add    BYTE PTR [rax+0x147d],al
   140005c7c:	add    BYTE PTR [rax],al
   140005c7e:	add    BYTE PTR [rax+0x1271],al
   140005c84:	add    BYTE PTR [rax],al
   140005c86:	add    BYTE PTR [rax+0x1637],al
   140005c8c:	add    BYTE PTR [rax],al
   140005c8e:	add    BYTE PTR [rax+0x165c],al
   140005c94:	add    BYTE PTR [rax],al
   140005c96:	add    BYTE PTR [rax+0x1110],al
   140005c9c:	add    BYTE PTR [rax],al
   140005c9e:	add    BYTE PTR [rax+0x13c9],al
   140005ca4:	add    BYTE PTR [rax],al
   140005ca6:	add    BYTE PTR [rax+0x1662],al
   140005cac:	add    BYTE PTR [rax],al
   140005cae:	add    BYTE PTR [rax+0x164f],al
   140005cb4:	add    BYTE PTR [rax],al
   140005cb6:	add    BYTE PTR [rax+0x17a5],al
   140005cbc:	add    BYTE PTR [rax],al
   140005cbe:	add    BYTE PTR [rax+0xbe9],al
   140005cc4:	add    BYTE PTR [rax],al
   140005cc6:	add    BYTE PTR [rax+0xcab],al
   140005ccc:	add    BYTE PTR [rax],al
   140005cce:	add    BYTE PTR [rax+0x1646],al
   140005cd4:	add    BYTE PTR [rax],al
   140005cd6:	add    BYTE PTR [rax+0x12cf],al
   140005cdc:	add    BYTE PTR [rax],al
   140005cde:	add    BYTE PTR [rax+0xc9f],al
   140005ce4:	add    BYTE PTR [rax],al
   140005ce6:	add    BYTE PTR [rax+0xd26],al
   140005cec:	add    BYTE PTR [rax],al
   140005cee:	add    BYTE PTR [rax+0xbec],al
   140005cf4:	add    BYTE PTR [rax],al
   140005cf6:	add    BYTE PTR [rax+0xc5e],al
   140005cfc:	add    BYTE PTR [rax],al
   140005cfe:	add    BYTE PTR [rax+0xbe6],al
   140005d04:	add    BYTE PTR [rax],al
   140005d06:	add    BYTE PTR [rax+0xff2],al
   140005d0c:	add    BYTE PTR [rax],al
   140005d0e:	add    BYTE PTR [rax+0xff3],al
   140005d14:	add    BYTE PTR [rax],al
   140005d16:	add    BYTE PTR [rax+0xfed],al
   140005d1c:	add    BYTE PTR [rax],al
   140005d1e:	add    BYTE PTR [rax+0xc5c],al
   140005d24:	add    BYTE PTR [rax],al
   140005d26:	add    BYTE PTR [rax+0x1113],al
   140005d2c:	add    BYTE PTR [rax],al
   140005d2e:	add    BYTE PTR [rax+0x1377],al
   140005d34:	add    BYTE PTR [rax],al
   140005d36:	add    BYTE PTR [rax+0x12a2],al
   140005d3c:	add    BYTE PTR [rax],al
   140005d3e:	add    BYTE PTR [rax+0xf4c],al
   140005d44:	add    BYTE PTR [rax],al
   140005d46:	add    BYTE PTR [rax+0xac0],al
   140005d4c:	add    BYTE PTR [rax],al
   140005d4e:	add    BYTE PTR [rax+0x9d5],al
   140005d54:	add    BYTE PTR [rax],al
   140005d56:	add    BYTE PTR [rax+0x5da],al
   140005d5c:	add    BYTE PTR [rax],al
   140005d5e:	add    BYTE PTR [rax+0xfb1],al
   140005d64:	add    BYTE PTR [rax],al
   140005d66:	add    BYTE PTR [rax+0x146d],al
   140005d6c:	add    BYTE PTR [rax],al
   140005d6e:	add    BYTE PTR [rax+0x12b5],al
   140005d74:	add    BYTE PTR [rax],al
   140005d76:	add    BYTE PTR [rax+0xa6e],al
   140005d7c:	add    BYTE PTR [rax],al
   140005d7e:	add    BYTE PTR [rax+0x80c],al
   140005d84:	add    BYTE PTR [rax],al
   140005d86:	add    BYTE PTR [rax+0x1a9e],al
   140005d8c:	add    BYTE PTR [rax],al
   140005d8e:	add    BYTE PTR [rax+0xf5d],al
   140005d94:	add    BYTE PTR [rax],al
   140005d96:	add    BYTE PTR [rax+0x156c],al
   140005d9c:	add    BYTE PTR [rax],al
   140005d9e:	add    BYTE PTR [rax+0x6c8],al
   140005da4:	add    BYTE PTR [rax],al
   140005da6:	add    BYTE PTR [rax+0x1633],al
   140005dac:	add    BYTE PTR [rax],al
   140005dae:	add    BYTE PTR [rax+0x999],al
   140005db4:	add    BYTE PTR [rax],al
   140005db6:	add    BYTE PTR [rax+0x85c],al
   140005dbc:	add    BYTE PTR [rax],al
   140005dbe:	add    BYTE PTR [rax+0x1643],al
   140005dc4:	add    BYTE PTR [rax],al
   140005dc6:	add    BYTE PTR [rax+0x137c],al
   140005dcc:	add    BYTE PTR [rax],al
   140005dce:	add    BYTE PTR [rax+0x5e1],al
   140005dd4:	add    BYTE PTR [rax],al
   140005dd6:	add    BYTE PTR [rax+0x427],al
   140005ddc:	add    BYTE PTR [rax],al
   140005dde:	add    BYTE PTR [rax+0x293],al
   140005de4:	add    BYTE PTR [rax],al
   140005de6:	add    BYTE PTR [rax+0x11f6],al
   140005dec:	add    BYTE PTR [rax],al
   140005dee:	add    BYTE PTR [rax+0x5b7],al
   140005df4:	add    BYTE PTR [rax],al
   140005df6:	add    BYTE PTR [rax+0x630],al
   140005dfc:	add    BYTE PTR [rax],al
   140005dfe:	add    BYTE PTR [rax+0x12a3],al
   140005e04:	add    BYTE PTR [rax],al
   140005e06:	add    BYTE PTR [rax+0xb1e],al
   140005e0c:	add    BYTE PTR [rax],al
   140005e0e:	add    BYTE PTR [rax+0x57c],al
   140005e14:	add    BYTE PTR [rax],al
   140005e16:	add    BYTE PTR [rax+0xa69],al
   140005e1c:	add    BYTE PTR [rax],al
   140005e1e:	add    BYTE PTR [rax+0x1179],al
   140005e24:	add    BYTE PTR [rax],al
   140005e26:	add    BYTE PTR [rax+0x410],al
   140005e2c:	add    BYTE PTR [rax],al
   140005e2e:	add    BYTE PTR [rax+0x272],al
   140005e34:	add    BYTE PTR [rax],al
   140005e36:	add    BYTE PTR [rax+0x18b8],al
   140005e3c:	add    BYTE PTR [rax],al
   140005e3e:	add    BYTE PTR [rax+0x101c],al
   140005e44:	add    BYTE PTR [rax],al
   140005e46:	add    BYTE PTR [rax+0x13d5],al
   140005e4c:	add    BYTE PTR [rax],al
   140005e4e:	add    BYTE PTR [rax+0x11cd],al
   140005e54:	add    BYTE PTR [rax],al
   140005e56:	add    BYTE PTR [rax+0x354],al
   140005e5c:	add    BYTE PTR [rax],al
   140005e5e:	add    BYTE PTR [rax+0x151],al
   140005e64:	add    BYTE PTR [rax],al
   140005e66:	add    BYTE PTR [rax+0x714],al
   140005e6c:	add    BYTE PTR [rax],al
   140005e6e:	add    BYTE PTR [rax+0x1a9d],al
   140005e74:	add    BYTE PTR [rax],al
   140005e76:	add    BYTE PTR [rax+0x12e4],al
   140005e7c:	add    BYTE PTR [rax],al
   140005e7e:	add    BYTE PTR [rax+0x9ff],al
   140005e84:	add    BYTE PTR [rax],al
   140005e86:	add    BYTE PTR [rax+0x9d3],al
   140005e8c:	add    BYTE PTR [rax],al
   140005e8e:	add    BYTE PTR [rax+0x17b7],al
   140005e94:	add    BYTE PTR [rax],al
   140005e96:	add    BYTE PTR [rax+0x105f],al
   140005e9c:	add    BYTE PTR [rax],al
   140005e9e:	add    BYTE PTR [rax+0x56c],al
   140005ea4:	add    BYTE PTR [rax],al
   140005ea6:	add    BYTE PTR [rax+0x15ef],al
   140005eac:	add    BYTE PTR [rax],al
   140005eae:	add    BYTE PTR [rax+0x96c],al
   140005eb4:	add    BYTE PTR [rax],al
   140005eb6:	add    BYTE PTR [rax+0xd22],al
   140005ebc:	add    BYTE PTR [rax],al
   140005ebe:	add    BYTE PTR [rax+0xd8c],al
   140005ec4:	add    BYTE PTR [rax],al
   140005ec6:	add    BYTE PTR [rax+0x161f],al
   140005ecc:	add    BYTE PTR [rax],al
   140005ece:	add    BYTE PTR [rax+0x0],al
   140005ed4:	add    BYTE PTR [rax],al
   140005ed6:	add    BYTE PTR [rax],al
   140005ed8:	and    ah,BYTE PTR [rbx+0x0]
   140005edb:	add    BYTE PTR [rax],al
   140005edd:	add    BYTE PTR [rax],al
   140005edf:	add    BYTE PTR [rsi],dh
   140005ee1:	movsxd eax,DWORD PTR [rax]
   140005ee3:	add    BYTE PTR [rax],al
   140005ee5:	add    BYTE PTR [rax],al
   140005ee7:	add    BYTE PTR [rbx+riz*2+0x0],al
   140005eeb:	add    BYTE PTR [rax],al
   140005eed:	add    BYTE PTR [rax],al
   140005eef:	add    BYTE PTR [rdx+0x63],bl
	...
   140005efe:	add    BYTE PTR [rax],al
   140005f00:	xchg   BYTE PTR [rbx+0x0],ah
   140005f03:	add    BYTE PTR [rax],al
   140005f05:	add    BYTE PTR [rax],al
   140005f07:	add    BYTE PTR [rdx+0x63],bl
   140005f0d:	add    BYTE PTR [rax],al
   140005f0f:	add    BYTE PTR [rax+0x63],dh
   140005f15:	add    BYTE PTR [rax],al
   140005f17:	add    BYTE PTR [rbx+riz*2+0x0],bh
	...
   140005f27:	add    al,dh
   140005f29:	add    BYTE PTR fs:[rax],al
   140005f2c:	add    BYTE PTR [rax],al
   140005f2e:	add    BYTE PTR [rax],al
   140005f30:	push   rsp
   140005f31:	(bad)  
   140005f32:	add    BYTE PTR [rax],al
   140005f34:	add    BYTE PTR [rax],al
   140005f36:	add    BYTE PTR [rax],al
   140005f38:	adc    BYTE PTR [rbp+0x0],ah
   140005f3b:	add    BYTE PTR [rax],al
   140005f3d:	add    BYTE PTR [rax],al
   140005f3f:	add    BYTE PTR [rax],al
   140005f41:	add    BYTE PTR gs:[rax],al
   140005f44:	add    BYTE PTR [rax],al
   140005f46:	add    BYTE PTR [rax],al
   140005f48:	mov    WORD PTR [rcx+0x0],fs
   140005f4b:	add    BYTE PTR [rax],al
   140005f4d:	add    BYTE PTR [rax],al
   140005f4f:	add    BYTE PTR [rcx+riz*2+0x0],bh
   140005f53:	add    BYTE PTR [rax],al
   140005f55:	add    BYTE PTR [rax],al
   140005f57:	add    BYTE PTR [rax+0x61],ch
	...
   140005f66:	add    BYTE PTR [rax],al
   140005f68:	mov    al,0x61
   140005f6a:	add    BYTE PTR [rax],al
   140005f6c:	add    BYTE PTR [rax],al
   140005f6e:	add    BYTE PTR [rax],al
   140005f70:	mov    eax,0x61
   140005f75:	add    BYTE PTR [rax],al
   140005f77:	add    dl,al
   140005f79:	(bad)  
   140005f7a:	add    BYTE PTR [rax],al
   140005f7c:	add    BYTE PTR [rax],al
   140005f7e:	add    BYTE PTR [rax],al
   140005f80:	shl    BYTE PTR [rcx+0x0],1
   140005f83:	add    BYTE PTR [rax],al
   140005f85:	add    BYTE PTR [rax],al
   140005f87:	add    dh,bl
   140005f89:	(bad)  
   140005f8a:	add    BYTE PTR [rax],al
   140005f8c:	add    BYTE PTR [rax],al
   140005f8e:	add    BYTE PTR [rax],al
   140005f90:	lock (bad) 
   140005f92:	add    BYTE PTR [rax],al
   140005f94:	add    BYTE PTR [rax],al
   140005f96:	add    BYTE PTR [rax],al
   140005f98:	add    ah,BYTE PTR [rdx+0x0]
   140005f9b:	add    BYTE PTR [rax],al
   140005f9d:	add    BYTE PTR [rax],al
   140005f9f:	add    BYTE PTR [rdx],cl
   140005fa1:	(bad)  
   140005fa2:	add    BYTE PTR [rax],al
   140005fa4:	add    BYTE PTR [rax],al
   140005fa6:	add    BYTE PTR [rax],al
   140005fa8:	adc    ah,BYTE PTR [rdx+0x0]
   140005fab:	add    BYTE PTR [rax],al
   140005fad:	add    BYTE PTR [rax],al
   140005faf:	add    BYTE PTR [rdx+riz*2],bl
   140005fb2:	add    BYTE PTR [rax],al
   140005fb4:	add    BYTE PTR [rax],al
   140005fb6:	add    BYTE PTR [rax],al
   140005fb8:	xor    BYTE PTR [rdx+0x0],ah
   140005fbb:	add    BYTE PTR [rax],al
   140005fbd:	add    BYTE PTR [rax],al
   140005fbf:	add    BYTE PTR [rdx+riz*2],bh
   140005fc2:	add    BYTE PTR [rax],al
   140005fc4:	add    BYTE PTR [rax],al
   140005fc6:	add    BYTE PTR [rax],al
   140005fc8:	push   rsp
   140005fc9:	(bad)  
   140005fca:	add    BYTE PTR [rax],al
   140005fcc:	add    BYTE PTR [rax],al
   140005fce:	add    BYTE PTR [rax],al
   140005fd0:	pop    rsi
   140005fd1:	(bad)  
   140005fd2:	add    BYTE PTR [rax],al
   140005fd4:	add    BYTE PTR [rax],al
   140005fd6:	add    BYTE PTR [rax],al
   140005fd8:	push   0x62
   140005fdd:	add    BYTE PTR [rax],al
   140005fdf:	add    BYTE PTR [rdx+riz*2+0x0],dh
   140005fe3:	add    BYTE PTR [rax],al
   140005fe5:	add    BYTE PTR [rax],al
   140005fe7:	add    BYTE PTR [rdx+riz*2+0x0],bh
   140005feb:	add    BYTE PTR [rax],al
   140005fed:	add    BYTE PTR [rax],al
   140005fef:	add    BYTE PTR [rsi+0x62],al
   140005ff5:	add    BYTE PTR [rax],al
   140005ff7:	add    BYTE PTR [rdx+riz*2+0x0],dl
   140005ffe:	add    BYTE PTR [rax],al
   140006000:	sahf   
   140006001:	(bad)  
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	ret    0x62
   14000600b:	add    BYTE PTR [rax],al
   14000600d:	add    BYTE PTR [rax],al
   14000600f:	add    BYTE PTR [rdx],dh
   140006011:	add    BYTE PTR gs:[rax],al
   140006014:	add    BYTE PTR [rax],al
   140006016:	add    BYTE PTR [rax],al
   140006018:	rex.W
   140006019:	add    BYTE PTR gs:[rax],al
	...
   140006028:	(bad)  
   140006029:	(bad)  
   14000602a:	add    BYTE PTR [rax],al
   14000602c:	add    BYTE PTR [rax],al
   14000602e:	add    BYTE PTR [rax],al
   140006030:	add    al,0x63
   140006032:	add    BYTE PTR [rax],al
   140006034:	add    BYTE PTR [rax],al
   140006036:	add    BYTE PTR [rax],al
   140006038:	and    BYTE PTR [rbp+0x0],ah
   14000603b:	add    BYTE PTR [rax],al
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    dh,dl
   140006041:	(bad)  
	...
   14000604e:	add    BYTE PTR [rax],al
   140006050:	jb     0x140006053
   140006052:	rex.RXB
   140006053:	gs je  0x1400060aa
   140006056:	jb     0x1400060b9
   140006058:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000605b:	outs   dx,DWORD PTR ds:[rsi]
   14000605c:	addr32 addr32 gs jb 0x1400060a9
   140006061:	(bad)  
   140006062:	outs   dx,BYTE PTR ds:[rsi]
   140006063:	fs ins BYTE PTR es:[rdi],dx
   140006065:	add    BYTE PTR gs:[rax],al
   140006068:	jno    0x14000606b
   14000606a:	rex.RXB
   14000606b:	gs je  0x1400060c2
   14000606e:	jb     0x1400060d1
   140006070:	movsxd esp,DWORD PTR [rbp+0x45]
   140006073:	outs   dx,BYTE PTR ds:[rsi]
   140006074:	(bad)  
   140006075:	(bad)  
   140006076:	ins    BYTE PTR es:[rdi],dx
   140006077:	gs rex.WR
   140006079:	gs jbe 0x1400060e1
   14000607c:	ins    BYTE PTR es:[rdi],dx
   14000607d:	add    BYTE PTR [rax+0x1],dh
   140006080:	rex.RXB
   140006081:	gs je  0x1400060d8
   140006084:	jb     0x1400060e7
   140006086:	movsxd esp,DWORD PTR [rbp+0x45]
   140006089:	outs   dx,BYTE PTR ds:[rsi]
   14000608a:	(bad)  
   14000608b:	(bad)  
   14000608c:	ins    BYTE PTR es:[rdi],dx
   14000608d:	gs rex.RX ins BYTE PTR es:[rdi],dx
   140006090:	(bad)  
   140006091:	addr32 jae 0x140006094
   140006094:	scas   eax,DWORD PTR es:[rdi]
   140006095:	add    dl,BYTE PTR [rdx+0x65]
   140006098:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   1400060a0:	(bad)  
   1400060a1:	movsxd esp,DWORD PTR [rbp+0x47]
   1400060a4:	jne    0x14000610f
   1400060a6:	fs jae 0x140006100
   1400060a9:	add    BYTE PTR [rip+0x726e5503],ch        # 0x1b26eb5b2
   1400060af:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   1400060b8:	(bad)  
   1400060b9:	movsxd esp,DWORD PTR [rbp+0x47]
   1400060bc:	jne    0x140006127
   1400060be:	fs jae 0x1400060c1
   1400060c1:	add    BYTE PTR [rax],ah
   1400060c3:	add    edx,DWORD PTR [rdx+rsi*2+0x61]
   1400060c7:	movsxd esp,DWORD PTR [rbp+0x4d]
   1400060ca:	gs jae 0x140006140
   1400060cd:	(bad)  
   1400060ce:	add    BYTE PTR gs:[eax],al
   1400060d2:	rex.B
   1400060d3:	rex.R push rsi
   1400060d5:	push   r8
   1400060d7:	xor    rsi,QWORD PTR [r10]
   1400060da:	cs fs ins BYTE PTR es:[rdi],dx
   1400060dd:	ins    BYTE PTR es:[rdi],dx
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	add    r9d,DWORD PTR [rax+0x65]
   1400060e4:	(bad)  
   1400060e5:	jo     0x14000613a
   1400060e7:	gs je  0x140006133
   1400060ea:	outs   dx,BYTE PTR ds:[rsi]
   1400060eb:	outs   dx,WORD PTR ds:[rsi]
   1400060ed:	jb     0x14000615c
   1400060ef:	(bad)  
   1400060f0:	je     0x14000615b
   1400060f2:	outs   dx,DWORD PTR ds:[rsi]
   1400060f3:	outs   dx,BYTE PTR ds:[rsi]
   1400060f4:	add    BYTE PTR [rax],al
   1400060f6:	test   BYTE PTR [rbx],0x4f
   1400060f9:	jo     0x140006160
   1400060fb:	outs   dx,BYTE PTR ds:[rsi]
   1400060fc:	push   rax
   1400060fd:	jb     0x14000616e
   1400060ff:	movsxd esp,DWORD PTR [rbp+0x73]
   140006102:	jae    0x140006104
   140006104:	push   rdi
   140006105:	add    al,BYTE PTR [rdi+0x65]
   140006108:	je     0x140006156
   14000610a:	(bad)  
   14000610b:	jae    0x140006181
   14000610d:	rex.RB jb 0x140006182
   140006110:	outs   dx,DWORD PTR ds:[rsi]
   140006111:	jb     0x140006113
   140006113:	add    BYTE PTR [rsi],ch
   140006115:	(bad)  
   140006116:	ins    BYTE PTR es:[rdi],dx
   140006117:	jae    0x14000618d
   140006119:	jb     0x140006187
   14000611b:	outs   dx,BYTE PTR gs:[rsi]
   14000611d:	push   rdi
   14000611e:	add    BYTE PTR [rax],al
   140006120:	add    al,BYTE PTR fs:[rdi+0x65]
   140006124:	je     0x140006172
   140006126:	outs   dx,DWORD PTR ds:[rsi]
   140006127:	outs   dx,BYTE PTR ds:[rsi]
   140006128:	addr32 push rax
   14000612a:	(bad)  
   14000612b:	je     0x140006195
   14000612d:	rex.WRX (bad) 
   14000612f:	ins    DWORD PTR es:[rdi],dx
   140006130:	gs push rdi
   140006132:	add    BYTE PTR [rax],al
   140006134:	xchg   ecx,eax
   140006135:	add    BYTE PTR [rbx+0x6f],al
   140006138:	ins    DWORD PTR es:[rdi],dx
   140006139:	jo     0x14000619c
   14000613b:	jb     0x1400061a2
   14000613d:	push   rbx
   14000613e:	je     0x1400061b2
   140006140:	imul   ebp,DWORD PTR [rsi+0x67],0x4b000057
   140006147:	rex.RB push r10
   140006149:	rex.WRX
   14000614a:	rex.RB
   14000614b:	xor    r14,QWORD PTR [rdx]
   14000614e:	cs fs ins BYTE PTR es:[rdi],dx
   140006151:	ins    BYTE PTR es:[rdi],dx
   140006152:	add    BYTE PTR [rax],al
   140006154:	cmp    BYTE PTR [rbx],al
   140006156:	push   rbx
   140006157:	gs je  0x1400061b1
   14000615a:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140006161:	outs   dx,BYTE PTR ds:[rsi]
   140006162:	addr32 push rax
   140006164:	je     0x1400061d8
   140006166:	push   rdi
   140006167:	add    BYTE PTR [rbx],bh
   140006169:	add    DWORD PTR [rdi+0x65],eax
   14000616c:	je     0x1400061b2
   14000616e:	gs jae 0x1400061dc
   140006171:	je     0x1400061e2
   140006173:	jo     0x1400061cc
   140006175:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000617c:	out    0x0,al
   14000617e:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140006180:	(bad)  
   140006181:	(bad)  
   140006182:	ins    BYTE PTR es:[rdi],dx
   140006183:	gs push rdi
   140006185:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000618c:	xor    DWORD PTR [rax],eax
   14000618e:	rex.XB push 0x654e7261
   140006194:	js     0x14000620a
   140006196:	push   rdi
   140006197:	add    BYTE PTR [rbp+0x53],dl
   14000619a:	rex.RB push r10
   14000619c:	xor    esi,DWORD PTR [rdx]
   14000619e:	cs fs ins BYTE PTR es:[rdi],dx
   1400061a1:	ins    BYTE PTR es:[rdi],dx
   1400061a2:	add    BYTE PTR [rax],al
   1400061a4:	rex.WRB
   1400061a5:	rex.RX
   1400061a6:	rex.XB xor al,0x32
   1400061a9:	jne    0x1400061d9
   1400061ab:	fs ins BYTE PTR es:[rdi],dx
   1400061ad:	ins    BYTE PTR es:[rdi],dx
   1400061ae:	add    BYTE PTR [rax],al
   1400061b0:	rex.WR add al,0x66
   1400061b3:	jb     0x14000621a
   1400061b5:	add    BYTE PTR gs:[rax],al
   1400061b8:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   1400061bf:	movsxd eax,DWORD PTR [rax]
   1400061c1:	add    BYTE PTR [rbp+0x0],dl
   1400061c4:	pop    rdi
   1400061c5:	pop    rax
   1400061c6:	movsxd esi,DWORD PTR [rax+0x74]
   1400061c9:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400061d2:	pop    rdi
   1400061d3:	(bad)  
   1400061d4:	ins    DWORD PTR es:[rdi],dx
   1400061d5:	jae    0x14000623e
   1400061d7:	pop    rdi
   1400061d8:	gs js  0x140006244
   1400061db:	je     0x1400061dd
   1400061dd:	add    BYTE PTR [rbp+0x775f5f00],bl
   1400061e3:	addr32 gs je 0x140006254
   1400061e7:	(bad)  
   1400061e8:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400061ef:	add    BYTE PTR [rsi+0x735f5f00],cl
   1400061f5:	gs je  0x140006257
   1400061f8:	(bad)  
   1400061f9:	jo     0x14000626b
   1400061fb:	pop    rdi
   1400061fc:	je     0x140006277
   1400061fe:	jo     0x140006265
   140006200:	add    BYTE PTR [rax],al
   140006202:	xor    al,BYTE PTR [riz*2+0x746978]
   140006209:	add    BYTE PTR [rsi],cl
   14000620b:	add    DWORD PTR [rdi+0x65],ebx
   14000620e:	js     0x140006279
   140006210:	je     0x140006212
   140006212:	rol    DWORD PTR [rax],0x5f
   140006215:	movsxd esp,DWORD PTR [rbp+0x78]
   140006218:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140006220:	jae    0x140006287
   140006222:	je     0x140006299
   140006224:	jae    0x14000628b
   140006226:	jb     0x140006295
   140006228:	(bad)  
   140006229:	je     0x140006293
   14000622b:	gs jb  0x1400062a0
   14000622e:	add    BYTE PTR [rax],al
   140006230:	jge    0x140006233
   140006232:	pop    rdi
   140006233:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000623a:	ins    DWORD PTR es:[rdi],dx
   14000623b:	add    BYTE PTR [rdi+0x0],dl
   14000623e:	pop    rdi
   14000623f:	pop    rdi
   140006240:	rex.XB pop r15
   140006242:	jae    0x1400062b4
   140006244:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140006248:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000624f:	ins    BYTE PTR es:[rdi],dx
   140006250:	gs jb  0x140006253
   140006253:	add    BYTE PTR [rdx+0x63775f03],al
   140006259:	ins    DWORD PTR es:[rdi],dx
   14000625a:	fs ins BYTE PTR es:[rdi],dx
   14000625c:	outs   dx,BYTE PTR ds:[rsi]
   14000625d:	add    BYTE PTR [rdi],ah
   14000625f:	add    DWORD PTR [rdi+0x66],ebx
   140006262:	ins    DWORD PTR es:[rdi],dx
   140006263:	outs   dx,DWORD PTR ds:[rsi]
   140006264:	fs add BYTE PTR gs:[rax],al
   140006268:	rol    BYTE PTR [rax],cl
   14000626a:	pop    rdi
   14000626b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000626e:	ins    DWORD PTR es:[rdi],dx
   14000626f:	outs   dx,DWORD PTR ds:[rsi]
   140006270:	fs add BYTE PTR gs:[rax],al
   140006274:	out    0x1,al
   140006276:	pop    rdi
   140006277:	ins    BYTE PTR es:[rdi],dx
   140006278:	outs   dx,DWORD PTR ds:[rsi]
   140006279:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000627c:	add    ebx,DWORD PTR [r15+0x75]
   140006280:	outs   dx,BYTE PTR ds:[rsi]
   140006281:	ins    BYTE PTR es:[rdi],dx
   140006282:	outs   dx,DWORD PTR ds:[rsi]
   140006283:	movsxd ebp,DWORD PTR [rbx+0x0]
   140006286:	jnp    0x140006288
   140006288:	pop    rdi
   140006289:	pop    rdi
   14000628a:	fs ins BYTE PTR es:[rdi],dx
   14000628c:	ins    BYTE PTR es:[rdi],dx
   14000628d:	outs   dx,DWORD PTR ds:[rsi]
   14000628e:	outs   dx,BYTE PTR ds:[rsi]
   14000628f:	gs js  0x1400062fb
   140006292:	je     0x140006294
   140006294:	nop
   140006295:	add    bl,BYTE PTR [rdi+0x6f]
   140006298:	outs   dx,BYTE PTR ds:[rsi]
   140006299:	gs js  0x140006305
   14000629c:	je     0x14000629e
   14000629e:	adc    al,BYTE PTR [rax]
   1400062a0:	(bad)  
   1400062a1:	(bad)  
   1400062a2:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   1400062a6:	gs pop rdi
   1400062a8:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   1400062af:	rex.RB
   1400062b0:	rex.B
   1400062b1:	rex.B
   1400062b2:	rex pop rax
   1400062b4:	pop    rdx
   1400062b5:	add    BYTE PTR [rbp+0x73],ch
   1400062b8:	jbe    0x14000631d
   1400062ba:	jb     0x140006330
   1400062bc:	cs fs ins BYTE PTR es:[rdi],dx
   1400062bf:	ins    BYTE PTR es:[rdi],dx
   1400062c0:	add    BYTE PTR [rax],al
   1400062c2:	(bad)  
   1400062c3:	add    BYTE PTR [rdi],bh
   1400062c5:	je     0x14000632c
   1400062c7:	jb     0x140006336
   1400062c9:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   1400062d0:	pop    rcx
   1400062d1:	pop    r8
   1400062d3:	pop    rax
   1400062d4:	pop    rdx
   1400062d5:	add    dh,al
   1400062d7:	add    dl,BYTE PTR [rdx+0x74]
   1400062da:	ins    BYTE PTR es:[rdi],dx
   1400062db:	rex.XB (bad) 
   1400062dd:	jo     0x140006353
   1400062df:	jne    0x140006353
   1400062e1:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400062e4:	outs   dx,BYTE PTR ds:[rsi]
   1400062e5:	je     0x14000634c
   1400062e7:	js     0x14000635d
   1400062e9:	add    BYTE PTR [rdi+0x4],dh
   1400062ec:	push   rdx
   1400062ed:	je     0x14000635b
   1400062ef:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400062f1:	outs   dx,DWORD PTR ds:[rsi]
   1400062f2:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400062f6:	jne    0x140006366
   1400062f8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400062fc:	outs   dx,BYTE PTR ds:[rsi]
   1400062fd:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400062ff:	je     0x140006373
   140006301:	jns    0x140006303
   140006303:	add    BYTE PTR [rbx+0x6c745205],cl
   140006309:	push   rsi
   14000630a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140006311:	outs   dx,BYTE PTR ds:[rsi]
   140006312:	ja     0x14000637d
   140006314:	outs   dx,BYTE PTR ds:[rsi]
   140006315:	add    BYTE PTR fs:[rax],al
   140006318:	outs   dx,BYTE PTR ds:[rsi]
   140006319:	je     0x14000637f
   14000631b:	ins    BYTE PTR es:[rdi],dx
   14000631c:	ins    BYTE PTR es:[rdi],dx
   14000631d:	cs fs ins BYTE PTR es:[rdi],dx
   140006320:	ins    BYTE PTR es:[rdi],dx
   140006321:	add    BYTE PTR [rdi+0x1],dl
   140006324:	push   rbx
   140006325:	rex.W
   140006326:	rex.RXB
   140006327:	gs je  0x140006370
   14000632a:	outs   dx,DWORD PTR ds:[rsi]
   14000632b:	ins    BYTE PTR es:[rdi],dx
   14000632c:	fs gs jb 0x140006380
   140006330:	(bad)  
   140006331:	je     0x14000639b
   140006333:	push   rdi
   140006334:	add    BYTE PTR [rax],al
   140006336:	movsxd eax,DWORD PTR [rcx]
   140006338:	push   rbx
   140006339:	rex.W
   14000633a:	rex.RXB
   14000633b:	gs je  0x14000638b
   14000633e:	(bad)  
   14000633f:	ins    BYTE PTR es:[rdi],dx
   140006340:	ins    BYTE PTR es:[rdi],dx
   140006341:	outs   dx,DWORD PTR ds:[rsi]
   140006342:	movsxd eax,DWORD PTR [rax]
   140006344:	rex.WX add QWORD PTR [rbx+0x48],rdx
   140006348:	rex.RXB
   140006349:	gs je  0x140006390
   14000634c:	gs jae 0x1400063ba
   14000634f:	je     0x1400063c0
   140006351:	jo     0x140006399
   140006353:	outs   dx,DWORD PTR ds:[rsi]
   140006354:	ins    BYTE PTR es:[rdi],dx
   140006355:	fs gs jb 0x140006359
   140006359:	add    BYTE PTR [rdx+0x1],dl
   14000635c:	push   rbx
   14000635d:	rex.W
   14000635e:	rex.RXB
   14000635f:	gs je  0x1400063a8
   140006362:	outs   dx,DWORD PTR ds:[rsi]
   140006363:	ins    BYTE PTR es:[rdi],dx
   140006364:	fs gs jb 0x1400063b4
   140006368:	outs   dx,DWORD PTR ds:[rsi]
   140006369:	movsxd esp,DWORD PTR [rcx+0x74]
   14000636c:	imul   ebp,DWORD PTR [rdi+0x6e],0x45485300
   140006373:	rex.WR
   140006374:	xor    r14,QWORD PTR [rdx]
   140006377:	cs fs ins BYTE PTR es:[rdi],dx
   14000637a:	ins    BYTE PTR es:[rdi],dx
   14000637b:	add    BYTE PTR [rsi],bl
   14000637d:	add    DWORD PTR [rbx+0x74],edx
   140006380:	jb     0x1400063c5
   140006382:	push   0x33005772
   140006387:	add    BYTE PTR [rax+0x61],dl
   14000638a:	je     0x1400063f4
   14000638c:	rex.B
   14000638d:	fs fs rex.X (bad) 
   140006391:	movsxd ebp,DWORD PTR [rbx+0x73]
   140006394:	ins    BYTE PTR es:[rdi],dx
   140006395:	(bad)  
   140006396:	jae    0x140006400
   140006398:	push   rdi
   140006399:	add    BYTE PTR [rdx+0x0],al
   14000639c:	push   rax
   14000639d:	(bad)  
   14000639e:	je     0x140006408
   1400063a0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400063a2:	ins    DWORD PTR es:[rdi],dx
   1400063a3:	jo     0x140006406
   1400063a5:	movsxd esi,DWORD PTR [rax+rdx*2+0x61]
   1400063a9:	je     0x140006413
   1400063ab:	rex.RB js 0x140006405
   1400063ae:	add    BYTE PTR [rax],al
   1400063b0:	add    QWORD PTR [rbx+0x74],rdx
   1400063b4:	jb     0x140006408
   1400063b6:	gs je  0x14000640d
   1400063b9:	outs   dx,DWORD PTR ds:[rsi]
   1400063ba:	rex.X jne 0x140006423
   1400063bd:	push   rdi
   1400063be:	add    BYTE PTR [rax],al
   1400063c0:	push   rbx
   1400063c1:	rex.W
   1400063c2:	rex.WR push rdi
   1400063c4:	push   r8
   1400063c6:	rex.WB
   1400063c7:	cs fs ins BYTE PTR es:[rdi],dx
   1400063ca:	ins    BYTE PTR es:[rdi],dx
   1400063cb:	add    BYTE PTR [rbp+0x5],ch
   1400063ce:	push   rbx
   1400063cf:	ins    BYTE PTR es:[rdi],dx
   1400063d0:	gs gs jo 0x1400063d4
   1400063d4:	mov    DWORD PTR [rdx],0x53746547
   1400063da:	je     0x14000643d
   1400063dc:	jb     0x140006452
   1400063de:	jne    0x140006450
   1400063e0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400063e2:	outs   dx,WORD PTR ds:[rsi]
   1400063e4:	push   rdi
   1400063e5:	add    BYTE PTR [rsi+0x686e5505],bl
   1400063eb:	(bad)  
   1400063ec:	outs   dx,BYTE PTR ds:[rsi]
   1400063ed:	fs ins BYTE PTR es:[rdi],dx
   1400063ef:	gs fs rex.RB js 0x140006457
   1400063f4:	gs jo  0x14000646b
   1400063f7:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400063fe:	gs jb  0x140006401
   140006401:	add    BYTE PTR [rsi+0x5],bl
   140006404:	push   rbx
   140006405:	gs je  0x14000645d
   140006408:	outs   dx,BYTE PTR ds:[rsi]
   140006409:	push   0x6c646e61
   14000640e:	gs fs rex.RB js 0x140006476
   140006413:	gs jo  0x14000648a
   140006416:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000641d:	gs jb  0x140006420
   140006420:	adc    BYTE PTR [rdx],al
   140006422:	rex.RXB
   140006423:	gs je  0x140006469
   140006426:	jne    0x14000649a
   140006428:	jb     0x14000648f
   14000642a:	outs   dx,BYTE PTR ds:[rsi]
   14000642b:	je     0x14000647d
   14000642d:	jb     0x14000649e
   14000642f:	movsxd esp,DWORD PTR [rbp+0x73]
   140006432:	jae    0x140006434
   140006434:	jl     0x14000643b
   140006436:	push   rsp
   140006437:	gs jb  0x1400064a7
   14000643a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140006441:	outs   dx,DWORD PTR ds:[rsi]
   140006442:	movsxd esp,DWORD PTR [rbp+0x73]
   140006445:	jae    0x140006447
   140006447:	add    BYTE PTR [rsi+0x2],ch
   14000644a:	rex.RXB
   14000644b:	gs je  0x14000649b
   14000644e:	outs   dx,DWORD PTR ds:[rsi]
   14000644f:	fs jne 0x1400064be
   140006452:	gs rex.W (bad) 
   140006455:	outs   dx,BYTE PTR ds:[rsi]
   140006456:	fs ins BYTE PTR es:[rdi],dx
   140006458:	gs push rdi
   14000645a:	add    BYTE PTR [rax],al
   14000645c:	ss add al,0x51
   14000645f:	jne    0x1400064c6
   140006461:	jb     0x1400064dc
   140006463:	push   rax
   140006464:	gs jb  0x1400064cd
   140006467:	outs   dx,DWORD PTR ds:[rsi]
   140006468:	jb     0x1400064d7
   14000646a:	(bad)  
   14000646b:	outs   dx,BYTE PTR ds:[rsi]
   14000646c:	movsxd esp,DWORD PTR [rbp+0x43]
   14000646f:	outs   dx,DWORD PTR ds:[rsi]
   140006470:	jne    0x1400064e0
   140006472:	je     0x1400064d9
   140006474:	jb     0x140006476
   140006476:	adc    DWORD PTR [rdx],eax
   140006478:	rex.RXB
   140006479:	gs je  0x1400064bf
   14000647c:	jne    0x1400064f0
   14000647e:	jb     0x1400064e5
   140006480:	outs   dx,BYTE PTR ds:[rsi]
   140006481:	je     0x1400064d3
   140006483:	jb     0x1400064f4
   140006485:	movsxd esp,DWORD PTR [rbp+0x73]
   140006488:	jae    0x1400064d3
   14000648a:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465ab93
   140006491:	rex.XB jne 0x140006506
   140006494:	jb     0x1400064fb
   140006496:	outs   dx,BYTE PTR ds:[rsi]
   140006497:	je     0x1400064ed
   140006499:	push   0x64616572
   14000649e:	rex.WB
   14000649f:	add    BYTE PTR fs:[rax],al
   1400064a2:	loopne 0x1400064a6
   1400064a4:	rex.RXB
   1400064a5:	gs je  0x1400064fb
   1400064a8:	jns    0x14000651d
   1400064aa:	je     0x140006511
   1400064ac:	ins    DWORD PTR es:[rdi],dx
   1400064ad:	push   rsp
   1400064ae:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400064b5:	ins    BYTE PTR es:[rdi],dx
   1400064b6:	gs push rsp
   1400064b8:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   1400064bf:	gs je  0x140006516
   1400064c2:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400064c9:	je     0x1400064cb
   1400064cb:	add    al,cl
   1400064cd:	add    eax,0x74696157
   1400064d2:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400064d4:	jb     0x140006529
   1400064d6:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   1400064dd:	push   0x65
   1400064df:	movsxd esi,DWORD PTR [rax+rax*1+0x7d]
   1400064e3:	add    BYTE PTR [rbx+0x6c],al
   1400064e6:	outs   dx,DWORD PTR ds:[rsi]
   1400064e7:	jae    0x14000654e
   1400064e9:	rex.W (bad) 
   1400064eb:	outs   dx,BYTE PTR ds:[rsi]
   1400064ec:	fs ins BYTE PTR es:[rdi],dx
   1400064ee:	add    BYTE PTR gs:[rbx],bh
   1400064f1:	add    edx,DWORD PTR [rbx+0x65]
   1400064f4:	je     0x14000654d
   1400064f6:	imul   ebp,DWORD PTR [rsi+0x64],0x6f50776f
   1400064fd:	jae    0x1400064ff
   1400064ff:	add    BYTE PTR [rcx],ch
   140006501:	add    DWORD PTR [rdi+0x65],eax
   140006504:	je     0x140006549
   140006506:	ins    BYTE PTR es:[rdi],dx
   140006507:	imul   esp,DWORD PTR [rbp+0x6e],0x63655274
   14000650e:	je     0x140006510
   140006510:	add    DWORD PTR [rdx],0x50
   140006513:	outs   dx,DWORD PTR ds:[rsi]
   140006514:	jae    0x14000658a
   140006516:	rex.WRB
   140006517:	gs jae 0x14000658d
   14000651a:	(bad)  
   14000651b:	addr32 gs push rdi
   14000651e:	add    BYTE PTR [rax],al
   140006520:	push   rdx
   140006521:	add    BYTE PTR [rbp+0x74],al
   140006524:	ja     0x14000657a
   140006526:	jb     0x140006589
   140006528:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000652b:	gs jae 0x1400065a1
   14000652e:	(bad)  
   14000652f:	add    BYTE PTR gs:[ebx+0x0],bl
   140006534:	pop    rdi
   140006535:	pop    rdi
   140006536:	rex.XB js 0x1400065b1
   140006539:	rex.RX jb 0x14000659d
   14000653c:	ins    DWORD PTR es:[rdi],dx
   14000653d:	gs rex.W (bad) 
   140006540:	outs   dx,BYTE PTR ds:[rsi]
   140006541:	fs ins BYTE PTR es:[rdi],dx
   140006543:	gs jb  0x140006579
   140006546:	add    BYTE PTR [rax],al
   140006548:	xchg   esi,eax
   140006549:	add    al,0x6d
   14000654b:	gs ins DWORD PTR es:[rdi],dx
   14000654d:	jae    0x1400065b4
   14000654f:	je     0x140006551
	...

Disassembly of section .data:

0000000140007000 <.data>:
   140007000:	add    DWORD PTR [rax],eax
   140007002:	add    BYTE PTR [rax],al
   140007004:	add    BYTE PTR [rax],al
   140007006:	add    BYTE PTR [rax],al
   140007008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000700e:	add    BYTE PTR [rax],al
   140007010:	int    0x5d
   140007012:	and    dl,dl
   140007014:	data16 (bad) 
   140007016:	(bad)  
   140007017:	inc    DWORD PTR [rax]
   140007019:	add    BYTE PTR [rax],al
   14000701b:	add    BYTE PTR [rax],al
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rax],ah
   140007021:	jo     0x140007023
   140007023:	rex add DWORD PTR [rax],eax
   140007026:	add    BYTE PTR [rax],al
   140007028:	loopne 0x140007070
   14000702a:	add    BYTE PTR [rax+0x1],al
	...
   140007035:	add    BYTE PTR [rax],al
   140007037:	add    BYTE PTR [rsi],ch
   140007039:	(bad)  
   14000703a:	push   r14
   14000703c:	rex.XB
   14000703d:	rex.XB ins DWORD PTR es:[rdi],dx
   14000703f:	fs push rsp
   140007041:	(bad)  
   140007042:	jb     0x1400070ab
   140007044:	gs je  0x140007087
   140007047:	add    BYTE PTR [rax],al
   14000704a:	add    BYTE PTR [rax],al
   14000704c:	add    BYTE PTR [rax],al
   14000704e:	add    BYTE PTR [rax],al
   140007050:	loopne 0x140007098
   140007052:	add    BYTE PTR [rax+0x1],al
	...
   14000705d:	add    BYTE PTR [rax],al
   14000705f:	add    BYTE PTR [rsi],ch
   140007061:	(bad)  
   140007062:	push   r14
   140007064:	rex.XB
   140007065:	rex.WRXB (bad) 
   140007067:	push   0x65
   140007069:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14000706d:	add    BYTE PTR [rax],al
   14000706f:	add    al,ah
   140007071:	rex.RX add BYTE PTR [rax+0x1],r8b
	...
   14000707d:	add    BYTE PTR [rax],al
   14000707f:	add    BYTE PTR [rsi],ch
   140007081:	(bad)  
   140007082:	push   r14
   140007084:	rex.XB push r15
   140007086:	imul   ebp,DWORD PTR [rsi+0x41],0x40407070
   14000708d:	add    BYTE PTR [rax],al
   14000708f:	add    al,ah
   140007091:	rex.RX add BYTE PTR [rax+0x1],r8b
	...
   14000709d:	add    BYTE PTR [rax],al
   14000709f:	add    BYTE PTR [rsi],ch
   1400070a1:	(bad)  
   1400070a2:	push   r14
   1400070a4:	rex.XB push r15
   1400070a6:	imul   ebp,DWORD PTR [rsi+0x54],0x61657268
   1400070ad:	fs rex
   1400070af:	add    BYTE PTR [rax],al
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	add    BYTE PTR [rax],al
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	loopne 0x140007100
   1400070ba:	add    BYTE PTR [rax+0x1],al
	...
   1400070c5:	add    BYTE PTR [rax],al
   1400070c7:	add    BYTE PTR [rsi],ch
   1400070c9:	(bad)  
   1400070ca:	push   r14
   1400070cc:	rex.XB push r8
   1400070ce:	jb     0x14000713f
   1400070d0:	addr32 jb 0x140007138
   1400070d3:	jae    0x140007148
   1400070d5:	rex.R ins BYTE PTR es:[rdi],dx
   1400070d7:	addr32 rex.B jo 0x14000714b
   1400070db:	rex
   1400070dc:	add    BYTE PTR [rax],al
   1400070df:	add    al,ah
   1400070e1:	rex.RX add BYTE PTR [rax+0x1],r8b
	...
   1400070ed:	add    BYTE PTR [rax],al
   1400070ef:	add    BYTE PTR [rsi],ch
   1400070f1:	(bad)  
   1400070f2:	push   r14
   1400070f4:	rex.XB
   1400070f5:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   1400070fd:	add    BYTE PTR [rax],al
   1400070ff:	add    al,ah
   140007101:	rex.RX add BYTE PTR [rax+0x1],r8b
	...
   14000710d:	add    BYTE PTR [rax],al
   14000710f:	add    BYTE PTR [rsi],ch
   140007111:	(bad)  
   140007112:	push   r14
   140007114:	rex.XB push r15
   140007116:	outs   dx,BYTE PTR ds:[rsi]
   140007117:	fs rex
   140007119:	add    BYTE PTR [rax],al
   14000711c:	add    BYTE PTR [rax],al
   14000711e:	add    BYTE PTR [rax],al
   140007120:	loopne 0x140007168
   140007122:	add    BYTE PTR [rax+0x1],al
	...
   14000712d:	add    BYTE PTR [rax],al
   14000712f:	add    BYTE PTR [rsi],ch
   140007131:	(bad)  
   140007132:	push   r14
   140007134:	rex.XB push r8
   140007136:	jb     0x1400071a7
   140007138:	addr32 jb 0x1400071a0
   14000713b:	jae    0x1400071b0
   14000713d:	rex.R ins BYTE PTR es:[rdi],dx
   14000713f:	rex.R ins BYTE PTR es:[edi],dx
   140007142:	addr32 rex
   140007144:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140008000 <.pdata>:
   140008000:	add    BYTE PTR [rax],dl
   140008002:	add    BYTE PTR [rax],al
   140008004:	ja     0x140008016
   140008006:	add    BYTE PTR [rax],al
   140008008:	cmp    al,0x56
   14000800a:	add    BYTE PTR [rax],al
   14000800c:	adc    BYTE PTR [rax],0x0
   14000800f:	add    BYTE PTR [rbx+0x18000010],bl
   140008015:	pop    rdx
   140008016:	add    BYTE PTR [rax],al
   140008018:	mov    al,0x10
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	(bad)  
   14000801d:	adc    DWORD PTR [rax],eax
   14000801f:	add    BYTE PTR [rax],ah
   140008021:	push   rsi
   140008022:	add    BYTE PTR [rax],al
   140008024:	(bad)  
   140008025:	adc    DWORD PTR [rax],eax
   140008027:	add    BYTE PTR [rax+0x30000011],dl
   14000802d:	push   rsi
   14000802e:	add    BYTE PTR [rax],al
   140008030:	movabs al,ds:0x4400001398000011
   140008039:	push   rsi
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	movabs al,ds:0xa00000143d000013
   140008045:	push   rsi
   140008046:	add    BYTE PTR [rax],al
   140008048:	pop    rsp
   140008049:	adc    al,0x0
   14000804b:	add    BYTE PTR [rdx+0x14],bh
   14000804e:	add    BYTE PTR [rax],al
   140008050:	cmp    al,0x56
   140008052:	add    BYTE PTR [rax],al
   140008054:	adc    BYTE PTR [rax+rax*1],0x0
   140008058:	mov    ah,0x14
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	fcom   DWORD PTR [rsi+0x0]
   14000805f:	add    al,al
   140008061:	adc    al,0x0
   140008063:	add    BYTE PTR [rcx-0x1fffffeb],ch
   140008069:	push   rsi
   14000806a:	add    BYTE PTR [rax],al
   14000806c:	rcl    BYTE PTR [rip+0x15ff0000],1        # 0x155ff8072
   140008072:	add    BYTE PTR [rax],al
   140008074:	xor    BYTE PTR [rsi+0x0],dl
   140008077:	add    BYTE PTR [rax],cl
   140008079:	(bad)  
   14000807a:	add    BYTE PTR [rax],al
   14000807c:	(bad)  
   14000807d:	(bad)  
   14000807e:	add    BYTE PTR [rax],al
   140008080:	lock push rsi
   140008082:	add    BYTE PTR [rax],al
   140008084:	jo     0x14000809c
   140008086:	add    BYTE PTR [rax],al
   140008088:	scas   eax,DWORD PTR es:[rdi]
   140008089:	(bad)  
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	cmp    al,0x56
   14000808e:	add    BYTE PTR [rax],al
   140008090:	loopne 0x1400080a8
   140008092:	add    BYTE PTR [rax],al
   140008094:	jbe    0x1400080af
   140008096:	add    BYTE PTR [rax],al
   140008098:	clc    
   140008099:	push   rsi
   14000809a:	add    BYTE PTR [rax],al
   14000809c:	sbb    BYTE PTR [rcx],0x0
   14000809f:	add    ah,bl
   1400080a1:	sbb    DWORD PTR [rax],eax
   1400080a3:	add    BYTE PTR [rax+0x57],ah
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	lock sbb DWORD PTR [rax],eax
   1400080ab:	add    BYTE PTR [rbp+0x1b],ch
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	mov    BYTE PTR [rdi+0x0],dl
   1400080b3:	add    BYTE PTR [rax+0x6800001b],al
   1400080b9:	sbb    al,0x0
   1400080bb:	add    al,dl
   1400080bd:	push   rdi
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	jo     0x1400080de
   1400080c2:	add    BYTE PTR [rax],al
   1400080c4:	cmp    BYTE PTR [rip+0x58800000],bl        # 0x1988080ca
   1400080ca:	add    BYTE PTR [rax],al
   1400080cc:	je     0x1400080eb
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	adc    bl,BYTE PTR [rdi]
   1400080d2:	add    BYTE PTR [rax],al
   1400080d4:	call   0x158008131
   1400080d9:	(bad)  
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	pop    rcx
   1400080dd:	and    DWORD PTR [rax],eax
   1400080df:	add    BYTE PTR [rcx+rbx*2],cl
   1400080e2:	add    BYTE PTR [rax],al
   1400080e4:	(bad)  
   1400080e5:	and    DWORD PTR [rax],eax
   1400080e7:	add    BYTE PTR ds:0x59300000,cl
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	pushf  
   1400080f1:	and    eax,0x25f70000
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	js     0x140008153
   1400080fa:	add    BYTE PTR [rax],al
   1400080fc:	add    BYTE PTR [rsi],ah
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	jno    0x140008128
   140008102:	add    BYTE PTR [rax],al
   140008104:	sbb    BYTE PTR [rcx+0x0],0x0
   140008108:	js     0x140008130
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	lods   al,BYTE PTR ds:[rsi]
   14000810d:	add    BYTE PTR es:[rax],al
   140008110:	mov    BYTE PTR [rcx+0x0],bl
   140008113:	add    BYTE PTR [rsi+riz*1+0x272b0000],dh
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	nop
   14000811d:	pop    rcx
   14000811e:	add    BYTE PTR [rax],al
   140008120:	xor    al,0x27
   140008122:	add    BYTE PTR [rax],al
   140008124:	jmp    0xdc008150
   140008129:	pop    rcx
   14000812a:	add    BYTE PTR [rax],al
   14000812c:	lock (bad) 
   14000812e:	add    BYTE PTR [rax],al
   140008130:	fwait
   140008131:	sub    BYTE PTR [rax],al
   140008133:	add    BYTE PTR [rcx+rbx*2+0x28a40000],bl
   14000813a:	add    BYTE PTR [rax],al
   14000813c:	push   rbp
   14000813d:	sub    DWORD PTR [rax],eax
   14000813f:	add    BYTE PTR [rax+0x70000059],ch
   140008145:	sub    eax,0x2e3f0000
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	sbb    BYTE PTR [rdx+0x0],bl
   14000814f:	add    BYTE PTR [rax+0x2e],dl
   140008152:	add    BYTE PTR [rax],al
   140008154:	cdq    
   140008155:	add    BYTE PTR cs:[rax],al
   140008158:	cmp    al,0x56
   14000815a:	add    BYTE PTR [rax],al
   14000815c:	movabs al,ds:0xb40000311100002e
   140008165:	pop    rcx
   140008166:	add    BYTE PTR [rax],al
   140008168:	and    BYTE PTR [rcx],dh
   14000816a:	add    BYTE PTR [rax],al
   14000816c:	xor    dh,BYTE PTR [rcx]
   14000816e:	add    BYTE PTR [rax],al
   140008170:	sbb    BYTE PTR [rdx+0x0],bl
   140008173:	add    BYTE PTR [rax+0x31],dl
   140008176:	add    BYTE PTR [rax],al
   140008178:	outs   dx,BYTE PTR ds:[rsi]
   140008179:	xor    DWORD PTR [rax],eax
   14000817b:	add    al,ch
   14000817d:	pop    rcx
   14000817e:	add    BYTE PTR [rax],al
   140008180:	je     0x1400081b3
   140008182:	add    BYTE PTR [rax],al
   140008184:	adc    dh,BYTE PTR [rdx]
   140008186:	add    BYTE PTR [rax],al
   140008188:	in     al,dx
   140008189:	pop    rcx
   14000818a:	add    BYTE PTR [rax],al
   14000818c:	sbb    BYTE PTR [rdx],dh
   14000818e:	add    BYTE PTR [rax],al
   140008190:	(bad)  
   140008191:	xor    al,BYTE PTR [rax]
   140008193:	add    BYTE PTR [rax],bl
   140008195:	pop    rdx
   140008196:	add    BYTE PTR [rax],al
   140008198:	xor    al,BYTE PTR [rax]
   14000819b:	add    BYTE PTR [rax+0x32],dh
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	xor    BYTE PTR [rsi+0x0],dl
   1400081a3:	add    BYTE PTR [rdx+rsi*1+0x32b80000],al
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	mov    BYTE PTR [rcx+0x0],bl
   1400081af:	add    al,al
   1400081b1:	xor    al,BYTE PTR [rax]
   1400081b3:	add    BYTE PTR [rcx],dh
   1400081b5:	xor    al,0x0
   1400081b7:	add    BYTE PTR [rax],dl
   1400081b9:	pop    rdx
   1400081ba:	add    BYTE PTR [rax],al
   1400081bc:	xor    al,0x0
   1400081bf:	add    BYTE PTR [rcx+0x34],bh
   1400081c2:	add    BYTE PTR [rax],al
   1400081c4:	sbb    BYTE PTR [rdx+0x0],bl
   1400081c7:	add    BYTE PTR [rax-0x67ffffcc],al
   1400081cd:	xor    al,0x0
   1400081cf:	add    BYTE PTR [rax],bl
   1400081d1:	pop    rdx
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	lods   al,BYTE PTR ds:[rsi]
   1400081d5:	xor    al,0x0
   1400081d7:	add    BYTE PTR [rax],al
   1400081d9:	xor    eax,0x5a200000
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	or     BYTE PTR [rip+0x354d0000],dh        # 0x1754d81e6
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	mov    BYTE PTR [rcx+0x0],bl
   1400081eb:	add    al,al
   1400081ed:	xor    eax,0x360d0000
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	rex pop rdx
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	push   rsp
   1400081f9:	add    BYTE PTR ss:[rax],al
   1400081fc:	and    al,0x37
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	ins    BYTE PTR es:[rdi],dx
   140008201:	pop    rdx
   140008202:	add    BYTE PTR [rax],al
   140008204:	push   0xffffffff94000037
   140008209:	(bad)  
   14000820a:	add    BYTE PTR [rax],al
   14000820c:	xor    BYTE PTR [rsi+0x0],dl
   14000820f:	add    ah,cl
   140008211:	(bad)  
   140008212:	add    BYTE PTR [rax],al
   140008214:	jmp    0x158008250
   140008219:	pop    rdx
   14000821a:	add    BYTE PTR [rax],al
   14000821c:	lock (bad) 
   14000821e:	add    BYTE PTR [rax],al
   140008220:	push   rbx
   140008221:	cmp    BYTE PTR [rax],al
   140008223:	add    BYTE PTR [rax+0x5c000059],cl
   140008229:	cmp    BYTE PTR [rax],al
   14000822b:	add    bl,ch
   14000822d:	cmp    BYTE PTR [rax],al
   14000822f:	add    BYTE PTR [rdx+rbx*2+0x0],bh
   140008233:	add    BYTE PTR [rax],dl
   140008235:	cmp    DWORD PTR [rax],eax
   140008237:	add    BYTE PTR [rdx],dl
   140008239:	cmp    DWORD PTR [rax],eax
   14000823b:	add    BYTE PTR [rax+0x5a],bh
   14000823e:	add    BYTE PTR [rax],al
   140008240:	xchg   esp,eax
   140008241:	cmp    DWORD PTR [rax],eax
   140008243:	add    al,ch
   140008245:	cmp    DWORD PTR [rax],eax
   140008247:	add    BYTE PTR [rax+0x58],dh
   14000824a:	add    BYTE PTR [rax],al
   14000824c:	cmp    al,BYTE PTR cs:[rax]
   14000824f:	add    BYTE PTR [rdx+rdi*1+0x0],cl
   140008253:	add    BYTE PTR [rdx+rbx*2+0x0],ah
   140008257:	add    BYTE PTR [rdx+0x3a],dl
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	ins    DWORD PTR es:[rdi],dx
   14000825d:	cmp    al,BYTE PTR [rax]
   14000825f:	add    BYTE PTR [rdx+rbx*2+0x0],ah
   140008263:	add    BYTE PTR [rax-0x5fffffc6],al
   140008269:	cmp    al,BYTE PTR [rax]
   14000826b:	add    BYTE PTR [rdx+rbx*2+0x0],ah
	...

Disassembly of section .rsrc:

0000000140009000 <.rsrc>:
	...
   14000900c:	add    DWORD PTR [rax],eax
   14000900e:	add    al,0x0
   140009010:	clc    
   140009011:	add    al,BYTE PTR [rax]
   140009013:	cmp    BYTE PTR [rax],0x0
   140009016:	add    BYTE PTR [rax+0x3],al
   14000901c:	push   rax
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	or     BYTE PTR [rsi],0x0
   140009022:	add    BYTE PTR [rax],al
   140009024:	test   al,0x0
   140009026:	add    BYTE PTR [rax+0x10],al
   14000902c:	rol    BYTE PTR [rax],0x0
   14000902f:	sbb    BYTE PTR [rax],0x0
   140009032:	add    BYTE PTR [rax],al
   140009034:	fadd   DWORD PTR [rax]
   140009036:	add    BYTE PTR [rax+0x0],al
	...
   140009044:	add    BYTE PTR [rax],al
   140009046:	add    DWORD PTR [rax],eax
   140009048:	add    DWORD PTR [rax],eax
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	lock add BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rax],0x0
	...
   14000905e:	or     DWORD PTR [rax],eax
   140009060:	add    DWORD PTR [rax],eax
   140009062:	add    BYTE PTR [rax],al
   140009064:	or     BYTE PTR [rcx],al
   140009066:	add    BYTE PTR [rax+0x2],al
   14000906c:	and    BYTE PTR [rcx],al
   14000906e:	add    BYTE PTR [rax+0x3],al
   140009074:	cmp    BYTE PTR [rcx],al
   140009076:	add    BYTE PTR [rax+0x4],al
   14000907c:	push   rax
   14000907d:	add    DWORD PTR [rax],eax
   14000907f:	add    BYTE PTR [rip+0x68000000],0x1        # 0x1a8009086
   140009086:	add    BYTE PTR [rax+0x6],al
   14000908c:	add    BYTE PTR [rcx],0x0
   14000908f:	add    BYTE PTR [rdi],0x0
   140009092:	add    BYTE PTR [rax],al
   140009094:	cwde   
   140009095:	add    DWORD PTR [rax],eax
   140009097:	or     BYTE PTR [rax],0x0
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	mov    al,0x1
   14000909e:	add    BYTE PTR [rax+0x9],al
   1400090a4:	enter  0x1,0x80
	...
   1400090b4:	add    BYTE PTR [rax],al
   1400090b6:	add    DWORD PTR [rax],eax
   1400090b8:	add    BYTE PTR [rax],0x0
   1400090bb:	add    al,ah
   1400090bd:	add    DWORD PTR [rax],eax
   1400090bf:	add    BYTE PTR [rax],0x0
	...
   1400090ce:	add    DWORD PTR [rax],eax
   1400090d0:	add    DWORD PTR [rax],eax
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	clc    
   1400090d5:	add    DWORD PTR [rax],eax
   1400090d7:	add    BYTE PTR [rax],0x0
	...
   1400090e6:	add    DWORD PTR [rax],eax
   1400090e8:	add    DWORD PTR [rax],eax
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	adc    BYTE PTR [rdx],al
   1400090ee:	add    BYTE PTR [rax+0x0],al
	...
   1400090fc:	add    BYTE PTR [rax],al
   1400090fe:	add    DWORD PTR [rax],eax
   140009100:	or     DWORD PTR [rax+rax*1],eax
   140009103:	add    BYTE PTR [rax],ch
   140009105:	add    al,BYTE PTR [rax]
	...
   140009113:	add    BYTE PTR [rax],al
   140009115:	add    BYTE PTR [rcx],al
   140009117:	add    BYTE PTR [rcx],cl
   140009119:	add    al,0x0
   14000911b:	add    BYTE PTR [rax],bh
   14000911d:	add    al,BYTE PTR [rax]
	...
   14000912b:	add    BYTE PTR [rax],al
   14000912d:	add    BYTE PTR [rcx],al
   14000912f:	add    BYTE PTR [rcx],cl
   140009131:	add    al,0x0
   140009133:	add    BYTE PTR [rax+0x2],cl
	...
   140009146:	add    DWORD PTR [rax],eax
   140009148:	or     DWORD PTR [rax+rax*1],eax
   14000914b:	add    BYTE PTR [rax+0x2],bl
	...
   14000915e:	add    DWORD PTR [rax],eax
   140009160:	or     DWORD PTR [rax+rax*1],eax
   140009163:	add    BYTE PTR [rax+0x2],ch
	...
   140009176:	add    DWORD PTR [rax],eax
   140009178:	or     DWORD PTR [rax+rax*1],eax
   14000917b:	add    BYTE PTR [rax+0x2],bh
	...
   14000918e:	add    DWORD PTR [rax],eax
   140009190:	or     DWORD PTR [rax+rax*1],eax
   140009193:	add    BYTE PTR [rax+0x2],cl
	...
   1400091a5:	add    BYTE PTR [rcx],al
   1400091a7:	add    BYTE PTR [rcx],cl
   1400091a9:	add    al,0x0
   1400091ab:	add    BYTE PTR [rax+0x2],bl
	...
   1400091bd:	add    BYTE PTR [rcx],al
   1400091bf:	add    BYTE PTR [rcx],cl
   1400091c1:	add    al,0x0
   1400091c3:	add    BYTE PTR [rax+0x2],ch
	...
   1400091d5:	add    BYTE PTR [rcx],al
   1400091d7:	add    BYTE PTR [rcx],cl
   1400091d9:	add    al,0x0
   1400091db:	add    BYTE PTR [rax+0x2],bh
	...
   1400091ed:	add    BYTE PTR [rcx],al
   1400091ef:	add    BYTE PTR [rcx],cl
   1400091f1:	add    al,0x0
   1400091f3:	add    al,cl
   1400091f5:	add    al,BYTE PTR [rax]
	...
   140009203:	add    BYTE PTR [rax],al
   140009205:	add    BYTE PTR [rcx],al
   140009207:	add    BYTE PTR [rcx],cl
   140009209:	add    al,0x0
   14000920b:	add    al,bl
   14000920d:	add    al,BYTE PTR [rax]
	...
   14000921b:	add    BYTE PTR [rax],al
   14000921d:	add    BYTE PTR [rcx],al
   14000921f:	add    BYTE PTR [rcx],cl
   140009221:	add    al,0x0
   140009223:	add    al,ch
   140009225:	add    al,BYTE PTR [rax]
   140009227:	add    BYTE PTR [rax],al
   140009229:	std    
   14000922a:	add    BYTE PTR [rax],al
   14000922c:	fadd   DWORD PTR [rax]
	...
   140009236:	add    BYTE PTR [rax],al
   140009238:	nop
   140009239:	(bad)  
   14000923a:	add    BYTE PTR [rax],al
   14000923c:	push   0x6
   140009241:	add    BYTE PTR [rax],al
   140009243:	add    BYTE PTR [rax],al
   140009245:	add    BYTE PTR [rax],al
   140009247:	add    al,bh
   140009249:	movabs al,ds:0x2e80000
   140009252:	add    BYTE PTR [rax],al
   140009254:	add    BYTE PTR [rax],al
   140009256:	add    BYTE PTR [rax],al
   140009258:	loopne 0x1400091fd
   14000925a:	add    BYTE PTR [rax],al
   14000925c:	sub    BYTE PTR [rcx],al
	...
   140009266:	add    BYTE PTR [rax],al
   140009268:	or     BYTE PTR [rbp+0xea80000],ah
	...
   140009276:	add    BYTE PTR [rax],al
   140009278:	mov    al,0xb3
   14000927a:	add    BYTE PTR [rax],al
   14000927c:	test   al,0x8
	...
   140009286:	add    BYTE PTR [rax],al
   140009288:	pop    rax
   140009289:	mov    esp,0x5680000
	...
   140009296:	add    BYTE PTR [rax],al
   140009298:	rol    cl,0x0
   14000929b:	add    BYTE PTR [rax+0x25],ch
   1400092a1:	add    BYTE PTR [rax],al
   1400092a3:	add    BYTE PTR [rax],al
   1400092a5:	add    BYTE PTR [rax],al
   1400092a7:	add    BYTE PTR [rax-0x19],ch
   1400092aa:	add    BYTE PTR [rax],al
   1400092ac:	test   al,0x10
	...
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	adc    al,bh
   1400092ba:	add    BYTE PTR [rax],al
   1400092bc:	push   0x4
   1400092c1:	add    BYTE PTR [rax],al
   1400092c3:	add    BYTE PTR [rax],al
   1400092c5:	add    BYTE PTR [rax],al
   1400092c7:	add    BYTE PTR [rax-0x4],bh
   1400092ca:	add    BYTE PTR [rax],al
   1400092cc:	test   BYTE PTR [rax],al
	...
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	fcom   DWORD PTR [rsi+0x3b40000]
	...
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	add    BYTE PTR [rbx+0x3d80000],dl
	...
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	add    eax,DWORD PTR [rax]
   1400092fa:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400092fe:	rex.WB add BYTE PTR [r15+rdi*1],dil
   140009302:	js     0x140009371
   140009304:	ins    BYTE PTR es:[rdi],dx
   140009305:	and    BYTE PTR [rsi+0x65],dh
   140009308:	jb     0x14000937d
   14000930a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140009311:	xor    BYTE PTR [rdx],ah
   140009313:	and    BYTE PTR [rbp+0x6e],ah
   140009316:	movsxd ebp,DWORD PTR [rdi+0x64]
   140009319:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140009320:	rex.RX sub eax,0x73202238
   140009326:	je     0x140009389
   140009328:	outs   dx,BYTE PTR ds:[rsi]
   140009329:	fs (bad) 
   14000932b:	ins    BYTE PTR es:[rdi],dx
   14000932c:	outs   dx,DWORD PTR ds:[rsi]
   14000932d:	outs   dx,BYTE PTR ds:[rsi]
   14000932e:	gs cmp eax,0x73657922
   140009334:	and    bh,BYTE PTR [rdi]
   140009336:	ds or  eax,0x2d213c0a
   14000933c:	sub    eax,0x706f4320
   140009341:	jns    0x1400093b5
   140009343:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000934a:	sub    DWORD PTR [rax],esp
   14000934c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140009354:	je     0x140009376
   140009356:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009358:	jb     0x1400093ca
   14000935a:	outs   dx,DWORD PTR ds:[rsi]
   14000935b:	jb     0x1400093be
   14000935d:	je     0x1400093c8
   14000935f:	outs   dx,DWORD PTR ds:[rsi]
   140009360:	outs   dx,BYTE PTR ds:[rsi]
   140009361:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dd194
   140009367:	cmp    al,0x61
   140009369:	jae    0x1400093de
   14000936b:	gs ins DWORD PTR es:[rdi],dx
   14000936d:	(bad)  
   14000936e:	ins    BYTE PTR es:[rdi],dx
   14000936f:	jns    0x140009391
   140009371:	js     0x1400093e0
   140009373:	ins    BYTE PTR es:[rdi],dx
   140009374:	outs   dx,BYTE PTR ds:[rsi]
   140009375:	jae    0x1400093b4
   140009377:	and    dh,BYTE PTR [rbp+0x72]
   14000937a:	outs   dx,BYTE PTR ds:[rsi]
   14000937b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000937e:	push   0x73616d65
   140009383:	sub    eax,0x7263696d
   140009388:	outs   dx,DWORD PTR ds:[rsi]
   140009389:	jae    0x1400093fa
   14000938b:	data16 je 0x1400093bb
   14000938e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009391:	cmp    ah,BYTE PTR [rcx+0x73]
   140009394:	ins    DWORD PTR es:[rdi],dx
   140009395:	cs jbe 0x1400093c9
   140009398:	and    ah,BYTE PTR [rax]
   14000939a:	ins    DWORD PTR es:[rdi],dx
   14000939b:	(bad)  
   14000939c:	outs   dx,BYTE PTR ds:[rsi]
   14000939d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400093a4:	jb     0x140009419
   1400093a6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400093ad:	xor    BYTE PTR [rdx],ah
   1400093af:	ds or  eax,0x73613c0a
   1400093b5:	jae    0x14000941c
   1400093b7:	ins    DWORD PTR es:[rdi],dx
   1400093b8:	(bad)  
   1400093b9:	ins    BYTE PTR es:[rdi],dx
   1400093ba:	jns    0x140009405
   1400093bc:	fs outs dx,BYTE PTR gs:[rsi]
   1400093bf:	je     0x14000942a
   1400093c1:	je     0x14000943c
   1400093c3:	or     eax,0x2020200a
   1400093c8:	and    BYTE PTR [rsi+0x65],dh
   1400093cb:	jb     0x140009440
   1400093cd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400093d4:	xor    DWORD PTR [rsi],ebp
   1400093d6:	xor    BYTE PTR [rsi],ch
   1400093d8:	xor    BYTE PTR [rdx],ah
   1400093da:	or     eax,0x2020200a
   1400093df:	and    BYTE PTR [rax+0x72],dh
   1400093e2:	outs   dx,DWORD PTR ds:[rsi]
   1400093e3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400093e6:	jae    0x140009457
   1400093e8:	jb     0x14000942b
   1400093ea:	jb     0x14000944f
   1400093ec:	push   0x63657469
   1400093f1:	je     0x140009468
   1400093f3:	jb     0x14000945a
   1400093f5:	cmp    eax,0x646d6122
   1400093fa:	ss xor al,0x22
   1400093fd:	or     eax,0x2020200a
   140009402:	and    BYTE PTR [rsi+0x61],ch
   140009405:	ins    DWORD PTR es:[rdi],dx
   140009406:	gs cmp eax,0x63694d22
   14000940c:	jb     0x14000947d
   14000940e:	jae    0x14000947f
   140009410:	data16 je 0x140009441
   140009413:	push   rsp
   140009414:	(bad)  
   140009415:	(bad)  
   140009416:	ins    BYTE PTR es:[rdi],dx
   140009417:	gs je  0x14000946a
   14000941a:	rex.XB
   14000941b:	cs push rax
   14000941d:	imul   r12d,DWORD PTR [rcx+0x6c],0xd22676f
   140009425:	or     ah,BYTE PTR [rax]
   140009427:	and    BYTE PTR [rax],ah
   140009429:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000942d:	gs cmp eax,0x6e697722
   140009433:	xor    esi,DWORD PTR [rdx]
   140009435:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3ec345
   14000943b:	or     bh,BYTE PTR [rsp+riz*2]
   14000943e:	gs jae 0x1400094a4
   140009441:	jb     0x1400094ac
   140009443:	jo     0x1400094b9
   140009445:	imul   ebp,DWORD PTR [rdi+0x6e],0x6369503e
   14000944c:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x64
   140009451:	jb     0x1400094bc
   140009453:	jbe    0x1400094ba
   140009455:	jb     0x140009477
   140009457:	push   rax
   140009458:	imul   r12d,DWORD PTR [rcx+0x6c],0x6320676f
   140009460:	outs   dx,DWORD PTR ds:[rsi]
   140009461:	ins    DWORD PTR es:[rdi],dx
   140009462:	jo     0x1400094d3
   140009464:	outs   dx,BYTE PTR ds:[rsi]
   140009465:	outs   dx,BYTE PTR gs:[rsi]
   140009467:	je     0x1400094a5
   140009469:	(bad)  
   14000946a:	fs gs jae 0x1400094d1
   14000946e:	jb     0x1400094d9
   140009470:	jo     0x1400094e6
   140009472:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   140009479:	fs gs jo 0x1400094e2
   14000947d:	outs   dx,BYTE PTR ds:[rsi]
   14000947e:	fs outs dx,BYTE PTR gs:[rsi]
   140009481:	movsxd edi,DWORD PTR [rcx+0x3e]
   140009484:	or     eax,0x2020200a
   140009489:	and    BYTE PTR [rsp+riz*2],bh
   14000948c:	gs jo  0x1400094f4
   14000948f:	outs   dx,BYTE PTR ds:[rsi]
   140009490:	fs outs dx,BYTE PTR gs:[rsi]
   140009493:	je     0x1400094d6
   140009495:	jae    0x14000950a
   140009497:	gs ins DWORD PTR es:[rdi],dx
   140009499:	(bad)  
   14000949a:	ins    BYTE PTR es:[rdi],dx
   14000949b:	jns    0x1400094db
   14000949d:	or     eax,0x2020200a
   1400094a2:	and    BYTE PTR [rax],ah
   1400094a4:	and    BYTE PTR [rax],ah
   1400094a6:	and    BYTE PTR [rax],ah
   1400094a8:	cmp    al,0x61
   1400094aa:	jae    0x14000951f
   1400094ac:	gs ins DWORD PTR es:[rdi],dx
   1400094ae:	(bad)  
   1400094af:	ins    BYTE PTR es:[rdi],dx
   1400094b0:	jns    0x1400094fb
   1400094b2:	fs outs dx,BYTE PTR gs:[rsi]
   1400094b5:	je     0x140009520
   1400094b7:	je     0x140009532
   1400094b9:	or     eax,0x2020200a
   1400094be:	and    BYTE PTR [rax],ah
   1400094c0:	and    BYTE PTR [rax],ah
   1400094c2:	and    BYTE PTR [rax],ah
   1400094c4:	and    BYTE PTR [rax],ah
   1400094c6:	and    BYTE PTR [rax],ah
   1400094c8:	je     0x140009543
   1400094ca:	jo     0x140009531
   1400094cc:	cmp    eax,0x6e697722
   1400094d1:	xor    esi,DWORD PTR [rdx]
   1400094d3:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020b4e3
   1400094d9:	and    BYTE PTR [rax],ah
   1400094db:	and    BYTE PTR [rax],ah
   1400094dd:	and    BYTE PTR [rax],ah
   1400094df:	and    BYTE PTR [rax],ah
   1400094e1:	and    BYTE PTR [rax],ah
   1400094e3:	outs   dx,BYTE PTR ds:[rsi]
   1400094e4:	(bad)  
   1400094e5:	ins    DWORD PTR es:[rdi],dx
   1400094e6:	gs cmp eax,0x63694d22
   1400094ec:	jb     0x14000955d
   1400094ee:	jae    0x14000955f
   1400094f0:	data16 je 0x140009521
   1400094f3:	push   rdi
   1400094f4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400094fb:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400094fd:	ins    DWORD PTR es:[rdi],dx
   1400094fe:	ins    DWORD PTR es:[rdi],dx
   1400094ff:	outs   dx,DWORD PTR ds:[rsi]
   140009500:	outs   dx,BYTE PTR ds:[rsi]
   140009501:	sub    eax,0x746e6f43
   140009506:	jb     0x140009577
   140009508:	ins    BYTE PTR es:[rdi],dx
   140009509:	jae    0x14000952d
   14000950b:	or     eax,0x2020200a
   140009510:	and    BYTE PTR [rax],ah
   140009512:	and    BYTE PTR [rax],ah
   140009514:	and    BYTE PTR [rax],ah
   140009516:	and    BYTE PTR [rax],ah
   140009518:	and    BYTE PTR [rax],ah
   14000951a:	jbe    0x140009581
   14000951c:	jb     0x140009591
   14000951e:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   140009525:	xor    BYTE PTR [rsi],ch
   140009527:	xor    BYTE PTR [rsi],ch
   140009529:	xor    BYTE PTR [rdx],ah
   14000952b:	or     eax,0x2020200a
   140009530:	and    BYTE PTR [rax],ah
   140009532:	and    BYTE PTR [rax],ah
   140009534:	and    BYTE PTR [rax],ah
   140009536:	and    BYTE PTR [rax],ah
   140009538:	and    BYTE PTR [rax],ah
   14000953a:	jo     0x1400095ae
   14000953c:	outs   dx,DWORD PTR ds:[rsi]
   14000953d:	movsxd esp,DWORD PTR [rbp+0x73]
   140009540:	jae    0x1400095b1
   140009542:	jb     0x140009585
   140009544:	jb     0x1400095a9
   140009546:	push   0x63657469
   14000954b:	je     0x1400095c2
   14000954d:	jb     0x1400095b4
   14000954f:	cmp    eax,0x646d6122
   140009554:	ss xor al,0x22
   140009557:	or     eax,0x2020200a
   14000955c:	and    BYTE PTR [rax],ah
   14000955e:	and    BYTE PTR [rax],ah
   140009560:	and    BYTE PTR [rax],ah
   140009562:	and    BYTE PTR [rax],ah
   140009564:	and    BYTE PTR [rax],ah
   140009566:	jo     0x1400095dd
   140009568:	(bad)  
   140009569:	ins    BYTE PTR es:[rdi],dx
   14000956a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140009571:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   140009575:	and    dh,BYTE PTR [rsi]
   140009577:	xor    eax,0x36623539
   14000957c:	xor    al,0x31
   14000957e:	xor    al,0x34
   140009580:	movsxd esp,DWORD PTR [rbx+0x66]
   140009583:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   140009587:	or     eax,0x2020200a
   14000958c:	and    BYTE PTR [rax],ah
   14000958e:	and    BYTE PTR [rax],ah
   140009590:	and    BYTE PTR [rax],ah
   140009592:	and    BYTE PTR [rax],ah
   140009594:	and    BYTE PTR [rax],ah
   140009596:	ins    BYTE PTR es:[rdi],dx
   140009597:	(bad)  
   140009598:	outs   dx,BYTE PTR ds:[rsi]
   140009599:	addr32 jne 0x1400095fd
   14000959c:	addr32 gs cmp eax,0xd222a22
   1400095a3:	or     ah,BYTE PTR [rax]
   1400095a5:	and    BYTE PTR [rax],ah
   1400095a7:	and    BYTE PTR [rax],ah
   1400095a9:	and    BYTE PTR [rax],ah
   1400095ab:	and    BYTE PTR [rdi],ch
   1400095ad:	ds or  eax,0x2020200a
   1400095b3:	and    BYTE PTR [rdi+rbp*1],bh
   1400095b6:	fs gs jo 0x14000961f
   1400095ba:	outs   dx,BYTE PTR ds:[rsi]
   1400095bb:	fs outs dx,BYTE PTR gs:[rsi]
   1400095be:	je     0x140009601
   1400095c0:	jae    0x140009635
   1400095c2:	gs ins DWORD PTR es:[rdi],dx
   1400095c4:	(bad)  
   1400095c5:	ins    BYTE PTR es:[rdi],dx
   1400095c6:	jns    0x140009606
   1400095c8:	or     eax,0x642f3c0a
   1400095cd:	gs jo  0x140009635
   1400095d0:	outs   dx,BYTE PTR ds:[rsi]
   1400095d1:	fs outs dx,BYTE PTR gs:[rsi]
   1400095d4:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400095d7:	or     eax,0x72743c0a
   1400095dc:	jne    0x140009651
   1400095de:	je     0x140009629
   1400095e0:	outs   dx,BYTE PTR ds:[rsi]
   1400095e1:	outs   dx,WORD PTR ds:[rsi]
   1400095e3:	and    BYTE PTR [rax+0x6d],bh
   1400095e6:	ins    BYTE PTR es:[rdi],dx
   1400095e7:	outs   dx,BYTE PTR ds:[rsi]
   1400095e8:	jae    0x140009627
   1400095ea:	and    dh,BYTE PTR [rbp+0x72]
   1400095ed:	outs   dx,BYTE PTR ds:[rsi]
   1400095ee:	cmp    dh,BYTE PTR [rbx+0x63]
   1400095f1:	push   0x73616d65
   1400095f6:	sub    eax,0x7263696d
   1400095fb:	outs   dx,DWORD PTR ds:[rsi]
   1400095fc:	jae    0x14000966d
   1400095fe:	data16 je 0x14000962e
   140009601:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009604:	cmp    ah,BYTE PTR [rcx+0x73]
   140009607:	ins    DWORD PTR es:[rdi],dx
   140009608:	cs jbe 0x14000963d
   14000960b:	and    bh,BYTE PTR [rsi]
   14000960d:	or     eax,0x3c20200a
   140009612:	jae    0x140009679
   140009614:	movsxd esi,DWORD PTR [rbp+0x72]
   140009617:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000961f:	and    BYTE PTR [rax],ah
   140009621:	cmp    al,0x72
   140009623:	gs jno 0x14000969b
   140009626:	gs jae 0x14000969d
   140009629:	gs fs push rax
   14000962c:	jb     0x140009697
   14000962e:	jbe    0x140009699
   140009630:	ins    BYTE PTR es:[rdi],dx
   140009631:	gs addr32 gs jae 0x140009674
   140009636:	or     eax,0x2020200a
   14000963b:	and    BYTE PTR [rax],ah
   14000963d:	and    BYTE PTR [rdx+rsi*2],bh
   140009640:	gs jno 0x1400096b8
   140009643:	gs jae 0x1400096ba
   140009646:	gs fs rex.RB js 0x1400096b0
   14000964b:	movsxd esi,DWORD PTR [rbp+0x74]
   14000964e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140009655:	ins    BYTE PTR es:[rdi],dx
   140009656:	or     eax,0x2020200a
   14000965b:	and    BYTE PTR [rax],ah
   14000965d:	and    BYTE PTR [rax],ah
   14000965f:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140009663:	gs ins BYTE PTR es:[rdi],dx
   140009665:	cmp    eax,0x49736122
   14000966a:	outs   dx,BYTE PTR ds:[rsi]
   14000966b:	jbe    0x1400096dc
   14000966d:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140009671:	or     eax,0x2020200a
   140009676:	and    BYTE PTR [rax],ah
   140009678:	and    BYTE PTR [rax],ah
   14000967a:	and    BYTE PTR [rbp+0x69],dh
   14000967d:	movsxd esp,DWORD PTR [r11+0x65]
   140009681:	jae    0x1400096f6
   140009683:	cmp    eax,0x6c616622
   140009688:	jae    0x1400096ef
   14000968a:	and    ch,BYTE PTR [rdi]
   14000968c:	ds or  eax,0x2020200a
   140009692:	and    BYTE PTR [rdi+rbp*1],bh
   140009695:	jb     0x1400096fc
   140009697:	jno    0x14000970e
   140009699:	gs jae 0x140009710
   14000969c:	gs fs push rax
   14000969f:	jb     0x14000970a
   1400096a1:	jbe    0x14000970c
   1400096a3:	ins    BYTE PTR es:[rdi],dx
   1400096a4:	gs addr32 gs jae 0x1400096e7
   1400096a9:	or     eax,0x2020200a
   1400096ae:	cmp    al,0x2f
   1400096b0:	jae    0x140009717
   1400096b2:	movsxd esi,DWORD PTR [rbp+0x72]
   1400096b5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   1400096bd:	je     0x140009731
   1400096bf:	jne    0x140009734
   1400096c1:	je     0x14000970c
   1400096c3:	outs   dx,BYTE PTR ds:[rsi]
   1400096c4:	outs   dx,WORD PTR ds:[rsi]
   1400096c6:	ds or  eax,0x612f3c0a
   1400096cc:	jae    0x140009741
   1400096ce:	gs ins DWORD PTR es:[rdi],dx
   1400096d0:	(bad)  
   1400096d1:	ins    BYTE PTR es:[rdi],dx
   1400096d2:	jns    0x140009712
   1400096d4:	or     eax,0xb40a0d0a
   1400096d9:	add    esi,DWORD PTR [rax+rax*1]
   1400096dc:	add    BYTE PTR [rax],al
   1400096de:	push   rsi
   1400096df:	add    BYTE PTR [rbx+0x0],dl
   1400096e2:	pop    rdi
   1400096e3:	add    BYTE PTR [rsi+0x0],dl
   1400096e6:	add    BYTE PTR [r10+0x0],r10b
   1400096ea:	push   rbx
   1400096eb:	add    BYTE PTR [rcx+0x0],cl
   1400096ee:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400096f2:	pop    rdi
   1400096f3:	add    BYTE PTR [rcx+0x0],cl
   1400096f6:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400096fa:	rex.WRXB add BYTE PTR [r8],r8b
   1400096fd:	add    BYTE PTR [rax],al
   1400096ff:	add    BYTE PTR [rbp+0xfeef04],bh
   140009705:	add    BYTE PTR [rcx],al
   140009707:	add    BYTE PTR [rbx],al
   140009709:	add    BYTE PTR [rax],al
   14000970b:	add    BYTE PTR [rax],al
   14000970d:	add    BYTE PTR [rax],bpl
   140009710:	add    BYTE PTR [rax],al
   140009712:	or     al,BYTE PTR [rax]
   140009714:	add    BYTE PTR [rax+0x0],al
   140009717:	sub    BYTE PTR [rdi],bh
   140009719:	add    BYTE PTR [rax],al
   14000971b:	add    BYTE PTR [rax],al
   14000971d:	add    BYTE PTR [rax],al
   14000971f:	add    BYTE PTR [rax+rax*1],al
   140009722:	add    al,0x0
   140009724:	add    eax,DWORD PTR [rax]
   140009726:	add    BYTE PTR [rax],al
   140009728:	or     al,0x0
	...
   140009732:	add    BYTE PTR [rax],al
   140009734:	adc    al,BYTE PTR [rbx]
   140009736:	add    BYTE PTR [rax],al
   140009738:	add    DWORD PTR [rax],eax
   14000973a:	push   rbx
   14000973b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000973f:	add    BYTE PTR [rcx+0x0],ch
   140009742:	outs   dx,BYTE PTR ds:[rsi]
   140009743:	add    BYTE PTR [rdi+0x0],ah
   140009746:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000974a:	ins    BYTE PTR es:[rdi],dx
   14000974b:	add    BYTE PTR [rbp+0x0],ah
   14000974e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140009752:	data16 add BYTE PTR [rdi+0x0],ch
   140009756:	add    BYTE PTR [rax],al
   140009758:	out    dx,al
   140009759:	add    al,BYTE PTR [rax]
   14000975b:	add    BYTE PTR [rcx],al
   14000975d:	add    BYTE PTR [rax],dh
   14000975f:	add    BYTE PTR [rax+rax*1],dh
   140009762:	xor    BYTE PTR [rax],al
   140009764:	cmp    DWORD PTR [rax],eax
   140009766:	xor    BYTE PTR [rax],al
   140009768:	xor    al,0x0
   14000976a:	rex.X add BYTE PTR [rax],sil
   14000976d:	add    BYTE PTR [rax],al
   14000976f:	add    BYTE PTR [rax+rax*1+0x16],cl
   140009773:	add    BYTE PTR [rcx],al
   140009775:	add    BYTE PTR [rbx+0x0],al
   140009778:	outs   dx,DWORD PTR ds:[rsi]
   140009779:	add    BYTE PTR [rbp+0x0],ch
   14000977c:	jo     0x14000977e
   14000977e:	(bad)  
   14000977f:	add    BYTE PTR [rsi+0x0],ch
   140009782:	jns    0x140009784
   140009784:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140009788:	ins    DWORD PTR es:[rdi],dx
   140009789:	add    BYTE PTR [rbp+0x0],ah
   14000978c:	add    BYTE PTR [rax],al
   14000978e:	add    BYTE PTR [rax],al
   140009790:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140009794:	movsxd eax,DWORD PTR [rax]
   140009796:	jb     0x140009798
   140009798:	outs   dx,DWORD PTR ds:[rsi]
   140009799:	add    BYTE PTR [rbx+0x0],dh
   14000979c:	outs   dx,DWORD PTR ds:[rsi]
   14000979d:	add    BYTE PTR [rsi+0x0],ah
   1400097a0:	je     0x1400097a2
   1400097a2:	and    BYTE PTR [rax],al
   1400097a4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400097a8:	jb     0x1400097aa
   1400097aa:	jo     0x1400097ac
   1400097ac:	outs   dx,DWORD PTR ds:[rsi]
   1400097ad:	add    BYTE PTR [rdx+0x0],dh
   1400097b0:	(bad)  
   1400097b1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400097b5:	add    BYTE PTR [rdi+0x0],ch
   1400097b8:	outs   dx,BYTE PTR ds:[rsi]
   1400097b9:	add    BYTE PTR [rax],al
   1400097bb:	add    BYTE PTR [rax+0x1002c00],al
   1400097c1:	add    BYTE PTR [rsi+0x0],al
   1400097c4:	imul   eax,DWORD PTR [rax],0x65006c
   1400097ca:	add    BYTE PTR [rbp+0x0],r12b
   1400097ce:	jae    0x1400097d0
   1400097d0:	movsxd eax,DWORD PTR [rax]
   1400097d2:	jb     0x1400097d4
   1400097d4:	imul   eax,DWORD PTR [rax],0x740070
   1400097da:	imul   eax,DWORD PTR [rax],0x6e006f
   1400097e0:	add    BYTE PTR [rax],al
   1400097e2:	add    BYTE PTR [rax],al
   1400097e4:	push   rdi
   1400097e5:	add    BYTE PTR [rcx+0x0],ch
   1400097e8:	outs   dx,BYTE PTR ds:[rsi]
   1400097e9:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400097ed:	add    BYTE PTR [rdi+0x0],dh
   1400097f0:	jae    0x1400097f2
   1400097f2:	and    BYTE PTR [rax],al
   1400097f4:	rex.WX add BYTE PTR [rdi+0x0],bpl
   1400097f8:	jne    0x1400097fa
   1400097fa:	jb     0x1400097fc
   1400097fc:	outs   dx,BYTE PTR ds:[rsi]
   1400097fd:	add    BYTE PTR [rcx+0x0],ah
   140009800:	ins    BYTE PTR es:[rdi],dx
   140009801:	add    BYTE PTR [rax],ah
   140009803:	add    BYTE PTR [rsi+0x0],cl
   140009806:	outs   dx,DWORD PTR ds:[rsi]
   140009807:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000980b:	add    BYTE PTR [rax],ah
   14000980d:	add    BYTE PTR [rdi+0x0],dl
   140009810:	jb     0x140009812
   140009812:	imul   eax,DWORD PTR [rax],0x650074
   140009818:	jb     0x14000981a
   14000981a:	and    BYTE PTR [rax],al
   14000981c:	push   rax
   14000981d:	add    BYTE PTR [rdx+0x0],dh
   140009820:	outs   dx,DWORD PTR ds:[rsi]
   140009821:	add    BYTE PTR [rdi+0x0],ah
   140009824:	jb     0x140009826
   140009826:	add    BYTE PTR gs:[rbx+0x0],dh
   14000982a:	jae    0x14000982c
   14000982c:	and    BYTE PTR [rax],al
   14000982e:	add    BYTE PTR [rcx+0x0],r13b
   140009832:	(bad)  
   140009833:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009837:	add    BYTE PTR [rdi+0x0],ah
   14000983a:	add    BYTE PTR [rax],al
   14000983c:	data16 add BYTE PTR [rbx],ah
   14000983f:	add    BYTE PTR [rcx],al
   140009841:	add    BYTE PTR [rsi+0x0],al
   140009844:	imul   eax,DWORD PTR [rax],0x65006c
   14000984a:	push   rsi
   14000984b:	add    BYTE PTR [rbp+0x0],ah
   14000984e:	jb     0x140009850
   140009850:	jae    0x140009852
   140009852:	imul   eax,DWORD PTR [rax],0x6e006f
   140009858:	add    BYTE PTR [rax],al
   14000985a:	add    BYTE PTR [rax],al
   14000985c:	xor    DWORD PTR [rax],eax
   14000985e:	xor    BYTE PTR [rax],al
   140009860:	add    BYTE PTR cs:[rax],dh
   140009863:	add    BYTE PTR [rsi],ch
   140009865:	add    BYTE PTR [rcx],dh
   140009867:	add    BYTE PTR [rax],dh
   140009869:	add    BYTE PTR [rdx],dh
   14000986b:	add    BYTE PTR [rax+rax*1],dh
   14000986e:	xor    BYTE PTR [rax],al
   140009870:	add    BYTE PTR cs:[rcx],dh
   140009873:	add    BYTE PTR [rsi],dh
   140009875:	add    BYTE PTR [rbx],dh
   140009877:	add    BYTE PTR [rax],bh
   140009879:	add    BYTE PTR [rax+rax*1],dh
   14000987c:	and    BYTE PTR [rax],al
   14000987e:	sub    BYTE PTR [rax],al
   140009880:	je     0x140009882
   140009882:	push   0x2e003100
   140009887:	add    BYTE PTR [rcx],dh
   140009889:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700c88f
   14000988f:	add    BYTE PTR [rax],dh
   140009891:	add    BYTE PTR [rcx],bh
   140009893:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700c999
   140009899:	add    BYTE PTR [rax],dh
   14000989b:	add    BYTE PTR [rax],dh
   14000989d:	add    BYTE PTR [rcx],ch
   14000989f:	add    BYTE PTR [rax],al
   1400098a1:	add    BYTE PTR [rax],al
   1400098a3:	add    BYTE PTR [rax],dh
   1400098a5:	add    BYTE PTR [rax],cl
   1400098a7:	add    BYTE PTR [rcx],al
   1400098a9:	add    BYTE PTR [rcx+0x0],cl
   1400098ac:	outs   dx,BYTE PTR ds:[rsi]
   1400098ad:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400098b1:	add    BYTE PTR [rdx+0x0],dh
   1400098b4:	outs   dx,BYTE PTR ds:[rsi]
   1400098b5:	add    BYTE PTR [rcx+0x0],ah
   1400098b8:	ins    BYTE PTR es:[rdi],dx
   1400098b9:	add    BYTE PTR [rsi+0x0],cl
   1400098bc:	(bad)  
   1400098bd:	add    BYTE PTR [rbp+0x0],ch
   1400098c0:	add    BYTE PTR gs:[rax],al
   1400098c3:	add    BYTE PTR [rax+0x0],dl
   1400098c6:	add    BYTE PTR fs:[rcx+0x0],ch
   1400098ca:	(bad)  
   1400098cb:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400098cf:	add    BYTE PTR [rdi+0x0],ah
   1400098d2:	add    BYTE PTR [rax],al
   1400098d4:	add    BYTE PTR [rax],0x2e
   1400098d7:	add    BYTE PTR [rcx],al
   1400098d9:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400098dd:	add    BYTE PTR [rdi+0x0],ah
   1400098e0:	(bad)  
   1400098e1:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400098e5:	add    BYTE PTR [rdi+0x0],ch
   1400098e8:	jo     0x1400098ea
   1400098ea:	jns    0x1400098ec
   1400098ec:	jb     0x1400098ee
   1400098ee:	imul   eax,DWORD PTR [rax],0x680067
   1400098f4:	je     0x1400098f6
   1400098f6:	add    BYTE PTR [rax],al
   1400098f8:	test   eax,0x4d002000
   1400098fd:	add    BYTE PTR [rcx+0x0],ch
   140009900:	movsxd eax,DWORD PTR [rax]
   140009902:	jb     0x140009904
   140009904:	outs   dx,DWORD PTR ds:[rsi]
   140009905:	add    BYTE PTR [rbx+0x0],dh
   140009908:	outs   dx,DWORD PTR ds:[rsi]
   140009909:	add    BYTE PTR [rsi+0x0],ah
   14000990c:	je     0x14000990e
   14000990e:	and    BYTE PTR [rax],al
   140009910:	rex.XB add BYTE PTR [r15+0x0],bpl
   140009914:	jb     0x140009916
   140009916:	jo     0x140009918
   140009918:	outs   dx,DWORD PTR ds:[rsi]
   140009919:	add    BYTE PTR [rdx+0x0],dh
   14000991c:	(bad)  
   14000991d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009921:	add    BYTE PTR [rdi+0x0],ch
   140009924:	outs   dx,BYTE PTR ds:[rsi]
   140009925:	add    BYTE PTR [rsi],ch
   140009927:	add    BYTE PTR [rax],ah
   140009929:	add    BYTE PTR [rcx+0x0],al
   14000992c:	ins    BYTE PTR es:[rdi],dx
   14000992d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140009931:	add    BYTE PTR [rdx+0x0],dh
   140009934:	imul   eax,DWORD PTR [rax],0x680067
   14000993a:	je     0x14000993c
   14000993c:	jae    0x14000993e
   14000993e:	and    BYTE PTR [rax],al
   140009940:	jb     0x140009942
   140009942:	add    BYTE PTR gs:[rbx+0x0],dh
   140009946:	add    BYTE PTR gs:[rdx+0x0],dh
   14000994a:	jbe    0x14000994c
   14000994c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140009951:	add    BYTE PTR [rax],al
   140009953:	add    BYTE PTR [rax+0x0],al
   140009956:	or     al,0x0
   140009958:	add    DWORD PTR [rax],eax
   14000995a:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000995e:	imul   eax,DWORD PTR [rax],0x690067
   140009964:	outs   dx,BYTE PTR ds:[rsi]
   140009965:	add    BYTE PTR [rcx+0x0],ah
   140009968:	ins    BYTE PTR es:[rdi],dx
   140009969:	add    BYTE PTR [rsi+0x0],al
   14000996c:	imul   eax,DWORD PTR [rax],0x65006c
   140009972:	outs   dx,BYTE PTR ds:[rsi]
   140009973:	add    BYTE PTR [rcx+0x0],ah
   140009976:	ins    DWORD PTR es:[rdi],dx
   140009977:	add    BYTE PTR [rbp+0x0],ah
   14000997a:	add    BYTE PTR [rax],al
   14000997c:	push   rax
   14000997d:	add    BYTE PTR [rax+rax*1+0x69],ah
   140009981:	add    BYTE PTR [rcx+0x0],ah
   140009984:	ins    BYTE PTR es:[rdi],dx
   140009985:	add    BYTE PTR [rdi+0x0],ch
   140009988:	add    BYTE PTR [esi],ch
   14000998b:	add    BYTE PTR [rbp+0x0],ah
   14000998e:	js     0x140009990
   140009990:	add    BYTE PTR gs:[rax],al
   140009993:	add    BYTE PTR [rdx+0x0],ch
   140009996:	and    eax,0x50000100
   14000999b:	add    BYTE PTR [rdx+0x0],dh
   14000999e:	outs   dx,DWORD PTR ds:[rsi]
   14000999f:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400099a3:	add    BYTE PTR [rbx+0x0],ah
   1400099a6:	je     0x1400099a8
   1400099a8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400099ac:	ins    DWORD PTR es:[rdi],dx
   1400099ad:	add    BYTE PTR [rbp+0x0],ah
   1400099b0:	add    BYTE PTR [rax],al
   1400099b2:	add    BYTE PTR [rax],al
   1400099b4:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400099b8:	movsxd eax,DWORD PTR [rax]
   1400099ba:	jb     0x1400099bc
   1400099bc:	outs   dx,DWORD PTR ds:[rsi]
   1400099bd:	add    BYTE PTR [rbx+0x0],dh
   1400099c0:	outs   dx,DWORD PTR ds:[rsi]
   1400099c1:	add    BYTE PTR [rsi+0x0],ah
   1400099c4:	je     0x1400099c6
   1400099c6:	scas   al,BYTE PTR es:[rdi]
   1400099c7:	add    BYTE PTR [rax],ah
   1400099c9:	add    BYTE PTR [rdi+0x0],dl
   1400099cc:	imul   eax,DWORD PTR [rax],0x64006e
   1400099d2:	outs   dx,DWORD PTR ds:[rsi]
   1400099d3:	add    BYTE PTR [rdi+0x0],dh
   1400099d6:	jae    0x1400099d8
   1400099d8:	scas   al,BYTE PTR es:[rdi]
   1400099d9:	add    BYTE PTR [rax],ah
   1400099db:	add    BYTE PTR [rdi+0x0],cl
   1400099de:	jo     0x1400099e0
   1400099e0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400099e4:	(bad)  
   1400099e5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400099e9:	add    BYTE PTR [rsi+0x0],ch
   1400099ec:	add    BYTE PTR [eax],ah
   1400099ef:	add    BYTE PTR [rbx+0x0],dl
   1400099f2:	jns    0x1400099f4
   1400099f4:	jae    0x1400099f6
   1400099f6:	je     0x1400099f8
   1400099f8:	add    BYTE PTR gs:[rbp+0x0],ch
   1400099fc:	add    BYTE PTR [rax],al
   1400099fe:	add    BYTE PTR [rax],al
   140009a00:	rex.RX add BYTE PTR [rcx],r10b
   140009a03:	add    BYTE PTR [rcx],al
   140009a05:	add    BYTE PTR [rax+0x0],dl
   140009a08:	jb     0x140009a0a
   140009a0a:	outs   dx,DWORD PTR ds:[rsi]
   140009a0b:	add    BYTE PTR [rax+rax*1+0x75],ah
   140009a0f:	add    BYTE PTR [rbx+0x0],ah
   140009a12:	je     0x140009a14
   140009a14:	push   rsi
   140009a15:	add    BYTE PTR [rbp+0x0],ah
   140009a18:	jb     0x140009a1a
   140009a1a:	jae    0x140009a1c
   140009a1c:	imul   eax,DWORD PTR [rax],0x6e006f
   140009a22:	add    BYTE PTR [rax],al
   140009a24:	xor    DWORD PTR [rax],eax
   140009a26:	xor    BYTE PTR [rax],al
   140009a28:	add    BYTE PTR cs:[rax],dh
   140009a2b:	add    BYTE PTR [rsi],ch
   140009a2d:	add    BYTE PTR [rcx],dh
   140009a2f:	add    BYTE PTR [rax],dh
   140009a31:	add    BYTE PTR [rdx],dh
   140009a33:	add    BYTE PTR [rax+rax*1],dh
   140009a36:	xor    BYTE PTR [rax],al
   140009a38:	add    BYTE PTR cs:[rcx],dh
   140009a3b:	add    BYTE PTR [rsi],dh
   140009a3d:	add    BYTE PTR [rbx],dh
   140009a3f:	add    BYTE PTR [rax],bh
   140009a41:	add    BYTE PTR [rax+rax*1],dh
   140009a44:	add    BYTE PTR [rax],al
   140009a46:	add    BYTE PTR [rax],al
   140009a48:	add    BYTE PTR [rax],r8b
   140009a4b:	add    BYTE PTR [rcx],al
   140009a4d:	add    BYTE PTR [rsi+0x0],dl
   140009a50:	(bad)  
   140009a51:	add    BYTE PTR [rdx+0x0],dh
   140009a54:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140009a58:	ins    BYTE PTR es:[rdi],dx
   140009a59:	add    BYTE PTR [rbp+0x0],ah
   140009a5c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140009a60:	data16 add BYTE PTR [rdi+0x0],ch
   140009a64:	add    BYTE PTR [rax],al
   140009a66:	add    BYTE PTR [rax],al
   140009a68:	and    al,0x0
   140009a6a:	add    al,0x0
   140009a6c:	add    BYTE PTR [rax],al
   140009a6e:	push   rsp
   140009a6f:	add    BYTE PTR [rdx+0x0],dh
   140009a72:	(bad)  
   140009a73:	add    BYTE PTR [rsi+0x0],ch
   140009a76:	jae    0x140009a78
   140009a78:	ins    BYTE PTR es:[rdi],dx
   140009a79:	add    BYTE PTR [rcx+0x0],ah
   140009a7c:	je     0x140009a7e
   140009a7e:	imul   eax,DWORD PTR [rax],0x6e006f
   140009a84:	add    BYTE PTR [rax],al
   140009a86:	add    BYTE PTR [rax],al
   140009a88:	or     DWORD PTR [rax+rsi*4],eax
   140009a8b:	add    al,0x0
   140009a8d:	add    BYTE PTR [rax],al
   140009a8f:	add    BYTE PTR [rax],ch
   140009a91:	add    BYTE PTR [rax],al
   140009a93:	add    BYTE PTR [rax],dh
   140009a95:	add    BYTE PTR [rax],al
   140009a97:	add    BYTE PTR [rax+0x0],ah
   140009a9a:	add    BYTE PTR [rax],al
   140009a9c:	add    DWORD PTR [rax],eax
   140009a9e:	add    al,0x0
	...
   140009ac0:	add    BYTE PTR [rax-0x80000000],al
   140009ac6:	add    BYTE PTR [rax],0x80
   140009ac9:	add    BYTE PTR [rax],al
   140009acb:	add    BYTE PTR [rax-0x7fff8000],al
   140009ad1:	add    BYTE PTR [rax],0x0
   140009ad4:	add    BYTE PTR [rax-0x3f3fff80],0xc0
   140009adb:	add    BYTE PTR [rax],al
   140009add:	add    bh,bh
   140009adf:	add    BYTE PTR [rax],al
   140009ae1:	add    BYTE PTR [rax],al
   140009ae3:	add    BYTE PTR [rax],al
   140009ae5:	(bad)  
   140009ae6:	inc    DWORD PTR [rax]
   140009ae8:	inc    DWORD PTR [rax]
   140009aea:	add    BYTE PTR [rax],al
   140009aec:	inc    DWORD PTR [rax]
   140009aee:	inc    DWORD PTR [rax]
   140009af0:	(bad)  
   140009af1:	inc    DWORD PTR [rax]
   140009af3:	add    bh,bh
   140009af5:	(bad)  
   140009af6:	inc    DWORD PTR [rax]
   140009af8:	adc    DWORD PTR [rcx],edx
   140009afa:	adc    DWORD PTR [rcx],edx
   140009afc:	adc    DWORD PTR [rcx],edx
   140009afe:	adc    DWORD PTR [rcx],edx
   140009b00:	adc    DWORD PTR [rcx],edx
   140009b02:	adc    DWORD PTR [rcx],edx
   140009b04:	adc    DWORD PTR [rcx],edx
   140009b06:	adc    DWORD PTR [rcx],edx
   140009b08:	adc    DWORD PTR [rcx],edx
   140009b0a:	adc    DWORD PTR [rcx],edx
   140009b0c:	adc    DWORD PTR [rcx],edx
   140009b0e:	adc    DWORD PTR [rcx],edx
   140009b10:	adc    DWORD PTR [rcx],edx
   140009b12:	adc    DWORD PTR [rcx],edx
   140009b14:	adc    DWORD PTR [rcx],edx
   140009b16:	adc    DWORD PTR [rcx],edx
   140009b18:	adc    DWORD PTR [rcx],edx
   140009b1a:	adc    DWORD PTR [rcx],edx
   140009b1c:	adc    DWORD PTR [rcx],edx
   140009b1e:	adc    DWORD PTR [rcx],edx
   140009b20:	adc    DWORD PTR [rcx],edx
   140009b22:	adc    DWORD PTR [rcx],edx
   140009b24:	adc    DWORD PTR [rcx],edx
   140009b26:	adc    DWORD PTR [rcx],edx
   140009b28:	adc    DWORD PTR [rcx],edx
   140009b2a:	adc    DWORD PTR [rcx],edx
   140009b2c:	adc    DWORD PTR [rax],edx
   140009b2e:	add    BYTE PTR [rcx],dl
   140009b30:	adc    DWORD PTR [rcx],edx
   140009b32:	adc    DWORD PTR [rcx],edx
   140009b34:	adc    DWORD PTR [rcx],edx
   140009b36:	adc    DWORD PTR [rcx],edx
   140009b38:	adc    DWORD PTR [rcx],edx
   140009b3a:	adc    DWORD PTR [rcx],edx
   140009b3c:	adc    DWORD PTR [rcx],edx
   140009b3e:	adc    DWORD PTR [rcx],edx
   140009b40:	adc    DWORD PTR [rcx],edx
   140009b42:	adc    DWORD PTR [rcx],edx
   140009b44:	adc    BYTE PTR [rbx],al
   140009b46:	cwde   
   140009b47:	add    BYTE PTR [rcx],dl
   140009b49:	adc    DWORD PTR [rcx],edx
   140009b4b:	adc    DWORD PTR [rcx],edx
   140009b4d:	adc    DWORD PTR [rcx],edx
   140009b4f:	adc    DWORD PTR [rcx],edx
   140009b51:	adc    DWORD PTR [rcx],edx
   140009b53:	adc    DWORD PTR [rcx],edx
   140009b55:	adc    DWORD PTR [rcx],edx
   140009b57:	adc    DWORD PTR [rcx],edx
   140009b59:	adc    DWORD PTR [rcx],edx
   140009b5b:	adc    BYTE PTR [rcx],cl
   140009b5d:	cmp    DWORD PTR [rax],edi
   140009b5f:	cmp    DWORD PTR [rax],eax
   140009b61:	add    DWORD PTR [rcx],edx
   140009b63:	adc    DWORD PTR [rcx],edx
   140009b65:	adc    DWORD PTR [rcx],edx
   140009b67:	adc    DWORD PTR [rcx],edx
   140009b69:	adc    DWORD PTR [rcx],edx
   140009b6b:	adc    DWORD PTR [rcx],edx
   140009b6d:	adc    DWORD PTR [rcx],edx
   140009b6f:	adc    DWORD PTR [rcx],edx
   140009b71:	adc    DWORD PTR [rcx],edx
   140009b73:	add    edx,DWORD PTR [rbx-0x6ccc676d]
   140009b79:	nop
   140009b7a:	add    BYTE PTR [rcx],dl
   140009b7c:	adc    DWORD PTR [rcx],edx
   140009b7e:	adc    DWORD PTR [rcx],edx
   140009b80:	adc    DWORD PTR [rcx],edx
   140009b82:	adc    DWORD PTR [rcx],edx
   140009b84:	adc    DWORD PTR [rcx],edx
   140009b86:	adc    DWORD PTR [rcx],edx
   140009b88:	adc    DWORD PTR [rcx],edx
   140009b8a:	adc    edi,DWORD PTR [rcx]
   140009b8c:	cmp    DWORD PTR [rcx],edi
   140009b8e:	cmp    BYTE PTR [rcx],bh
   140009b90:	cmp    DWORD PTR [rcx],edi
   140009b92:	cmp    DWORD PTR [rax],eax
   140009b94:	add    DWORD PTR [rcx],edx
   140009b96:	adc    DWORD PTR [rcx],edx
   140009b98:	adc    DWORD PTR [rcx],edx
   140009b9a:	adc    DWORD PTR [rcx],edx
   140009b9c:	adc    DWORD PTR [rcx],edx
   140009b9e:	adc    DWORD PTR [rcx],edx
   140009ba0:	adc    DWORD PTR [rcx],edx
   140009ba2:	adc    edx,DWORD PTR [rbx+0x33989393]
   140009ba8:	xchg   ebx,eax
   140009ba9:	xchg   ebx,eax
   140009baa:	xchg   ebx,eax
   140009bab:	xchg   ebx,eax
   140009bac:	nop
   140009bad:	add    BYTE PTR [rcx],dl
   140009baf:	adc    DWORD PTR [rcx],edx
   140009bb1:	adc    DWORD PTR [rcx],edx
   140009bb3:	adc    DWORD PTR [rcx],edx
   140009bb5:	adc    DWORD PTR [rcx],edx
   140009bb7:	adc    DWORD PTR [rcx],edx
   140009bb9:	adc    DWORD PTR [rbx],edx
   140009bbb:	cmp    DWORD PTR [rcx],edi
   140009bbd:	cmp    DWORD PTR [rax],edi
   140009bbf:	cmp    DWORD PTR [rcx],edi
   140009bc1:	cmp    DWORD PTR [rcx],edi
   140009bc3:	cmp    DWORD PTR [rcx],edi
   140009bc5:	cmp    DWORD PTR [rax],eax
   140009bc7:	add    DWORD PTR [rcx],edx
   140009bc9:	adc    DWORD PTR [rcx],edx
   140009bcb:	adc    DWORD PTR [rcx],edx
   140009bcd:	adc    DWORD PTR [rcx],edx
   140009bcf:	adc    DWORD PTR [rcx],edx
   140009bd1:	adc    DWORD PTR [rbx],edx
   140009bd3:	xchg   ebx,eax
   140009bd4:	xchg   ebx,eax
   140009bd5:	xchg   ebx,eax
   140009bd6:	cwde   
   140009bd7:	xor    edx,DWORD PTR [rbx-0x6c6c6c6d]
   140009bdd:	xchg   ebx,eax
   140009bde:	xchg   ebx,eax
   140009bdf:	nop
   140009be0:	add    BYTE PTR [rcx],dl
   140009be2:	adc    DWORD PTR [rcx],edx
   140009be4:	adc    DWORD PTR [rcx],edx
   140009be6:	adc    DWORD PTR [rcx],edx
   140009be8:	adc    DWORD PTR [rcx],edx
   140009bea:	adc    edi,DWORD PTR [rcx]
   140009bec:	cmp    DWORD PTR [rcx],edi
   140009bee:	cmp    BYTE PTR [rcx],bh
   140009bf0:	cmp    DWORD PTR [rcx],edi
   140009bf2:	cmp    DWORD PTR [rcx],edi
   140009bf4:	cmp    DWORD PTR [rcx],edi
   140009bf6:	cmp    DWORD PTR [rcx],edi
   140009bf8:	cmp    DWORD PTR [rax],eax
   140009bfa:	add    DWORD PTR [rcx],edx
   140009bfc:	adc    DWORD PTR [rcx],edx
   140009bfe:	adc    DWORD PTR [rcx],edx
   140009c00:	adc    DWORD PTR [rcx],edx
   140009c02:	adc    edx,DWORD PTR [rbx+0x33989393]
   140009c08:	xchg   ebx,eax
   140009c09:	xchg   ebx,eax
   140009c0a:	xchg   ebx,eax
   140009c0b:	xchg   ebx,eax
   140009c0c:	xchg   ebx,eax
   140009c0d:	xchg   ebx,eax
   140009c0e:	xchg   ebx,eax
   140009c0f:	xchg   ebx,eax
   140009c10:	xchg   ebx,eax
   140009c11:	xchg   ebx,eax
   140009c12:	nop
   140009c13:	add    DWORD PTR [rcx],edx
   140009c15:	adc    DWORD PTR [rcx],edx
   140009c17:	adc    DWORD PTR [rcx],edx
   140009c19:	adc    DWORD PTR [rbx],edx
   140009c1b:	cmp    DWORD PTR [rcx],edi
   140009c1d:	cmp    BYTE PTR [rax+0x39393939],cl
   140009c23:	cmp    DWORD PTR [rcx],edi
   140009c25:	cmp    DWORD PTR [rcx],edi
   140009c27:	cmp    DWORD PTR [rcx],edi
   140009c29:	cmp    DWORD PTR [rcx],edi
   140009c2b:	add    DWORD PTR [rcx],edx
   140009c2d:	adc    DWORD PTR [rcx],edx
   140009c2f:	adc    DWORD PTR [rcx],edx
   140009c31:	adc    DWORD PTR [rbx],edx
   140009c33:	xchg   ebx,eax
   140009c34:	cwde   
   140009c35:	mov    BYTE PTR [rax-0x6c6c6c6d],cl
   140009c3b:	xchg   ebx,eax
   140009c3c:	xchg   ebx,eax
   140009c3d:	xchg   ebx,eax
   140009c3e:	xchg   ebx,eax
   140009c3f:	xchg   ebx,eax
   140009c40:	xchg   ebx,eax
   140009c41:	xchg   ebx,eax
   140009c42:	xchg   ebx,eax
   140009c43:	add    DWORD PTR [rcx],edx
   140009c45:	adc    DWORD PTR [rcx],edx
   140009c47:	adc    DWORD PTR [rcx],edx
   140009c49:	adc    DWORD PTR [rbx],edx
   140009c4b:	mov    BYTE PTR [rax+0x30398389],cl
   140009c51:	add    BYTE PTR [rax],al
   140009c53:	or     DWORD PTR [rcx],edi
   140009c55:	cmp    DWORD PTR [rcx],edi
   140009c57:	cmp    DWORD PTR [rcx],edi
   140009c59:	cmp    DWORD PTR [rcx],edi
   140009c5b:	add    DWORD PTR [rcx],edx
   140009c5d:	adc    DWORD PTR [rcx],edx
   140009c5f:	adc    DWORD PTR [rcx],edx
   140009c61:	adc    DWORD PTR [rbx],edx
   140009c63:	mov    BYTE PTR [rbx+0x4c938393],al
   140009c69:	int3   
   140009c6a:	data16 (bad) 
   140009c6c:	add    BYTE PTR [rbx-0x6c6c6c6d],dl
   140009c72:	xchg   ebx,eax
   140009c73:	add    DWORD PTR [rcx],edx
   140009c75:	adc    DWORD PTR [rcx],edx
   140009c77:	adc    DWORD PTR [rcx],edx
   140009c79:	adc    DWORD PTR [rax],edi
   140009c7b:	mov    DWORD PTR [rcx],edi
   140009c7d:	cmp    DWORD PTR [rbx-0x3317cbc7],eax
   140009c83:	(bad)  
   140009c84:	data16 add BYTE PTR [rcx],cl
   140009c87:	cmp    DWORD PTR [rcx],edi
   140009c89:	cmp    DWORD PTR [rcx],edi
   140009c8b:	add    DWORD PTR [rcx],edx
   140009c8d:	adc    DWORD PTR [rcx],edx
   140009c8f:	adc    DWORD PTR [rcx],edx
   140009c91:	adc    DWORD PTR [rbx],esi
   140009c93:	xchg   ebx,eax
   140009c94:	xchg   ebx,eax
   140009c95:	xchg   ebx,eax
   140009c96:	adc    DWORD PTR [rbx-0x7377b16d],0xffffffcc
   140009c9d:	data16 (bad) 
   140009c9f:	add    BYTE PTR [rbx+0x11019393],dl
   140009ca5:	adc    DWORD PTR [rcx],edx
   140009ca7:	adc    DWORD PTR [rcx],edx
   140009ca9:	adc    DWORD PTR [rcx],edi
   140009cab:	cmp    DWORD PTR [rcx],edi
   140009cad:	cmp    DWORD PTR [rbx-0x11cbc6c7],eax
   140009cb3:	call   0x1a6c76940
   140009cb8:	add    BYTE PTR [rax],al
   140009cba:	cmp    DWORD PTR [rcx],eax
   140009cbc:	adc    DWORD PTR [rcx],edx
   140009cbe:	adc    DWORD PTR [rcx],edx
   140009cc0:	adc    DWORD PTR [rcx],edx
   140009cc2:	xor    edx,DWORD PTR [rbx-0x6c7c6c6d]
   140009cc8:	xchg   ebx,eax
   140009cc9:	xchg   ebx,eax
   140009cca:	rex.R out dx,al
   140009ccc:	out    dx,al
   140009ccd:	mov    BYTE PTR [rsp+rcx*8+0x1006666],cl
   140009cd4:	adc    DWORD PTR [rcx],edx
   140009cd6:	adc    DWORD PTR [rcx],edx
   140009cd8:	adc    DWORD PTR [rcx],edx
   140009cda:	cmp    DWORD PTR [rcx],edi
   140009cdc:	cmp    DWORD PTR [rcx],edi
   140009cde:	cmp    DWORD PTR [rcx],0x39
   140009ce1:	cmp    DWORD PTR [rcx],edi
   140009ce3:	rex.R out dx,al
   140009ce5:	out    dx,al
   140009ce6:	call   0x1a6cd6973
   140009ceb:	add    BYTE PTR [rcx],dl
   140009ced:	adc    DWORD PTR [rcx],edx
   140009cef:	adc    DWORD PTR [rcx],edx
   140009cf1:	adc    DWORD PTR [rbx],esi
   140009cf3:	xchg   ebx,eax
   140009cf4:	xchg   ebx,eax
   140009cf5:	xchg   ebx,eax
   140009cf6:	adc    DWORD PTR [rbx-0x6c6c6c6d],0x44
   140009cfd:	out    dx,al
   140009cfe:	out    dx,al
   140009cff:	out    dx,al
   140009d00:	mov    BYTE PTR [rsp+rcx*8+0x11110066],cl
   140009d07:	adc    DWORD PTR [rcx],edx
   140009d09:	adc    DWORD PTR [rcx],edi
   140009d0b:	cmp    DWORD PTR [rcx],edi
   140009d0d:	cmp    DWORD PTR [rbx+0x39393939],eax
   140009d13:	cmp    DWORD PTR [rcx],edi
   140009d15:	rex.R out dx,al
   140009d17:	out    dx,al
   140009d18:	out    dx,al
   140009d19:	enter  0xcc88,0x66
   140009d1d:	add    BYTE PTR [rcx],dl
   140009d1f:	adc    DWORD PTR [rcx],edx
   140009d21:	adc    DWORD PTR [rbx],esi
   140009d23:	xchg   ebx,eax
   140009d24:	xchg   ebx,eax
   140009d25:	xchg   ebx,eax
   140009d26:	adc    DWORD PTR [rbx-0x6c6c6c6d],0xffffff93
   140009d2d:	xchg   ebx,eax
   140009d2e:	rex.R out dx,al
   140009d30:	out    dx,al
   140009d31:	outs   dx,BYTE PTR ds:[rsi]
   140009d32:	out    dx,al
   140009d33:	mov    ah,cl
   140009d35:	data16 add BYTE PTR [rcx],dl
   140009d38:	adc    DWORD PTR [rcx],edx
   140009d3a:	cmp    DWORD PTR [rcx],edi
   140009d3c:	cmp    DWORD PTR [rcx],edi
   140009d3e:	cmp    DWORD PTR [rcx],0x39
   140009d41:	cmp    DWORD PTR [rcx],edi
   140009d43:	cmp    DWORD PTR [rcx],edi
   140009d45:	cmp    DWORD PTR [rcx],edi
   140009d47:	rex.WRX out 0xee,al
   140009d4a:	out    dx,al
   140009d4b:	out    dx,al
   140009d4c:	mov    ah,cl
   140009d4e:	add    WORD PTR [rcx],dx
   140009d51:	adc    DWORD PTR [rbx],esi
   140009d53:	xchg   ebx,eax
   140009d54:	xchg   ebx,eax
   140009d55:	mov    BYTE PTR [rbx-0x6c6c6c6d],al
   140009d5b:	xchg   ebx,eax
   140009d5c:	xchg   ebx,eax
   140009d5d:	xchg   ebx,eax
   140009d5e:	xchg   ebx,eax
   140009d5f:	xchg   esp,eax
   140009d60:	rex.WRX (bad) 
   140009d62:	out    dx,al
   140009d63:	out    dx,al
   140009d64:	out    dx,al
   140009d65:	mov    ah,cl
   140009d67:	(bad)  
   140009d68:	adc    DWORD PTR [rcx],edx
   140009d6a:	cmp    DWORD PTR [rcx],edi
   140009d6c:	mov    BYTE PTR [rax+0x39393989],cl
   140009d72:	cmp    DWORD PTR [rcx],edi
   140009d74:	cmp    DWORD PTR [rcx],edi
   140009d76:	cmp    DWORD PTR [rcx],edi
   140009d78:	rex.R out dx,al
   140009d7a:	(bad)  
   140009d7b:	(bad)  
   140009d7c:	out    dx,al
   140009d7d:	out    dx,al
   140009d7e:	enter  0x1160,0x11
   140009d82:	cmp    BYTE PTR [rax-0x6ccc6778],cl
   140009d88:	xchg   ebx,eax
   140009d89:	xchg   ebx,eax
   140009d8a:	xchg   ebx,eax
   140009d8b:	xchg   ebx,eax
   140009d8c:	xchg   ebx,eax
   140009d8d:	xchg   ebx,eax
   140009d8e:	xchg   ebx,eax
   140009d8f:	xchg   ebx,eax
   140009d90:	rex.WRX
   140009d91:	rex.R out dx,al
   140009d93:	out    dx,eax
   140009d94:	(bad)  
   140009d95:	call   0x15311fe02
   140009d9a:	mov    BYTE PTR [rax+0x39393839],cl
   140009da0:	cmp    DWORD PTR [rbx],esi
   140009da2:	xor    edi,DWORD PTR [rcx]
   140009da4:	cmp    DWORD PTR [rcx],edi
   140009da6:	cmp    DWORD PTR [rcx],edi
   140009da8:	rex.R out dx,al
   140009daa:	rex.R
   140009dab:	rex.WRX out dx,al
   140009dad:	out    0xee,al
   140009daf:	(bad)  
   140009db0:	adc    DWORD PTR [rbx],edx
   140009db2:	mov    BYTE PTR [rbx-0x6ccc676d],dl
   140009db8:	xchg   ebx,eax
   140009db9:	cmp    BYTE PTR [rax-0x6ccccccd],cl
   140009dbf:	xchg   ebx,eax
   140009dc0:	xchg   ebx,eax
   140009dc1:	rex.R out dx,al
   140009dc3:	in     al,0x4e
   140009dc5:	mov    dh,bh
   140009dc7:	rcl    DWORD PTR [rcx],0x13
   140009dca:	cmp    DWORD PTR [rcx],edi
   140009dcc:	cmp    DWORD PTR [rax],edi
   140009dce:	cmp    DWORD PTR [rcx],edi
   140009dd0:	cmp    DWORD PTR [rax],edi
   140009dd2:	dec    DWORD PTR [rax+0x33338888]
   140009dd8:	cmp    DWORD PTR [rcx],edi
   140009dda:	rex.R
   140009ddb:	rex.WR int3 
   140009ddd:	int3   
   140009dde:	int3   
   140009ddf:	adc    DWORD PTR [rcx],edx
   140009de1:	adc    edx,DWORD PTR [rbx+0x33989393]
   140009de7:	xchg   ebx,eax
   140009de8:	xchg   ebx,eax
   140009de9:	cmp    bh,bh
   140009deb:	(bad)  
   140009dec:	(bad)  
   140009ded:	dec    DWORD PTR [rax-0x6c6ccc78]
   140009df3:	add    DWORD PTR [rcx],edx
   140009df5:	adc    DWORD PTR [rcx],edx
   140009df7:	adc    DWORD PTR [rcx],edx
   140009df9:	adc    edi,DWORD PTR [rcx]
   140009dfb:	cmp    DWORD PTR [rcx],edi
   140009dfd:	cmp    BYTE PTR [rcx],bh
   140009dff:	cmp    DWORD PTR [rcx],edi
   140009e01:	cmp    bh,bh
   140009e03:	(bad)  
   140009e04:	(bad)  
   140009e05:	(bad)  
   140009e06:	(bad)  
   140009e07:	clc    
   140009e08:	cmp    DWORD PTR [rcx],edi
   140009e0a:	cmp    DWORD PTR [rcx],eax
   140009e0c:	adc    DWORD PTR [rcx],edx
   140009e0e:	adc    DWORD PTR [rcx],edx
   140009e10:	adc    DWORD PTR [rbx],edx
   140009e12:	xchg   ebx,eax
   140009e13:	xchg   ebx,eax
   140009e14:	xchg   ebx,eax
   140009e15:	cwde   
   140009e16:	xor    edx,DWORD PTR [rbx-0xc76d]
   140009e1c:	(bad)  
   140009e1d:	(bad)  
   140009e1e:	(bad)  
   140009e1f:	clc    
   140009e20:	xor    edx,DWORD PTR [rbx+0x11110193]
   140009e26:	adc    DWORD PTR [rcx],edx
   140009e28:	adc    DWORD PTR [rbx],edx
   140009e2a:	cmp    DWORD PTR [rcx],edi
   140009e2c:	cmp    DWORD PTR [rax],edi
   140009e2e:	cmp    DWORD PTR [rcx],edi
   140009e30:	cmp    DWORD PTR [rax],edi
   140009e32:	mov    bh,bh
   140009e34:	(bad)  
   140009e35:	(bad)  
   140009e36:	(bad)  
   140009e37:	clc    
   140009e38:	cmp    DWORD PTR [rcx],edi
   140009e3a:	cmp    DWORD PTR [rcx],eax
   140009e3c:	adc    DWORD PTR [rcx],edx
   140009e3e:	adc    DWORD PTR [rcx],edx
   140009e40:	adc    DWORD PTR [rbx],edx
   140009e42:	xchg   ebx,eax
   140009e43:	xchg   ebx,eax
   140009e44:	xchg   ebx,eax
   140009e45:	cwde   
   140009e46:	xor    edx,DWORD PTR [rbx-0x77cccc6d]
   140009e4c:	mov    BYTE PTR [rax-0x6ccc0701],cl
   140009e52:	xchg   ebx,eax
   140009e53:	add    DWORD PTR [rcx],edx
   140009e55:	adc    DWORD PTR [rcx],edx
   140009e57:	adc    DWORD PTR [rcx],edx
   140009e59:	adc    edi,DWORD PTR [rcx]
   140009e5b:	cmp    DWORD PTR [rcx],edi
   140009e5d:	cmp    BYTE PTR [rcx],bh
   140009e5f:	cmp    DWORD PTR [rcx],edi
   140009e61:	cmp    DWORD PTR [rcx],edi
   140009e63:	xor    esi,DWORD PTR [rbx]
   140009e65:	xor    ecx,DWORD PTR [rax+0x39393988]
   140009e6b:	add    DWORD PTR [rcx],edx
   140009e6d:	adc    DWORD PTR [rcx],edx
   140009e6f:	adc    DWORD PTR [rcx],edx
   140009e71:	adc    edx,DWORD PTR [rbx+0x33989393]
   140009e77:	xchg   ebx,eax
   140009e78:	xchg   ebx,eax
   140009e79:	xchg   ebx,eax
   140009e7a:	xchg   ebx,eax
   140009e7b:	xchg   ebx,eax
   140009e7c:	xchg   ebx,eax
   140009e7d:	xchg   ebx,eax
   140009e7e:	xor    esi,DWORD PTR [rbx]
   140009e80:	xor    edx,DWORD PTR [rbx+0x11110193]
   140009e86:	adc    DWORD PTR [rcx],edx
   140009e88:	adc    DWORD PTR [rbx],edx
   140009e8a:	cmp    DWORD PTR [rcx],edi
   140009e8c:	cmp    DWORD PTR [rax],edi
   140009e8e:	cmp    DWORD PTR [rcx],edi
   140009e90:	cmp    DWORD PTR [rcx],edi
   140009e92:	cmp    DWORD PTR [rcx],edi
   140009e94:	cmp    DWORD PTR [rcx],edi
   140009e96:	cmp    DWORD PTR [rcx],edi
   140009e98:	cmp    DWORD PTR [rcx],edi
   140009e9a:	cmp    DWORD PTR [rcx],eax
   140009e9c:	adc    DWORD PTR [rcx],edx
   140009e9e:	adc    DWORD PTR [rcx],edx
   140009ea0:	adc    DWORD PTR [rbx],edx
   140009ea2:	xchg   ebx,eax
   140009ea3:	cwde   
   140009ea4:	mov    BYTE PTR [rax-0x6c6ccccd],cl
   140009eaa:	xchg   ebx,eax
   140009eab:	xchg   ebx,eax
   140009eac:	xchg   ebx,eax
   140009ead:	xchg   ebx,eax
   140009eae:	xchg   ebx,eax
   140009eaf:	xchg   ebx,eax
   140009eb0:	xchg   ebx,eax
   140009eb1:	xchg   ebx,eax
   140009eb2:	xchg   ebx,eax
   140009eb3:	add    DWORD PTR [rcx],edx
   140009eb5:	adc    DWORD PTR [rcx],edx
   140009eb7:	adc    DWORD PTR [rcx],edx
   140009eb9:	adc    edi,DWORD PTR [rax]
   140009ebb:	(bad)  
   140009ebc:	(bad)  
   140009ebd:	(bad)  
   140009ebe:	(bad)  
   140009ebf:	clc    
   140009ec0:	xor    esi,DWORD PTR [rbx]
   140009ec2:	xor    edi,DWORD PTR [rcx]
   140009ec4:	cmp    DWORD PTR [rcx],edi
   140009ec6:	cmp    DWORD PTR [rcx],edi
   140009ec8:	cmp    DWORD PTR [rcx],edi
   140009eca:	cmp    DWORD PTR [rcx],eax
   140009ecc:	adc    DWORD PTR [rcx],edx
   140009ece:	adc    DWORD PTR [rcx],edx
   140009ed0:	adc    DWORD PTR [rbx],edx
   140009ed2:	xchg   ebx,eax
   140009ed3:	xchg   ebx,eax
   140009ed4:	mov    BYTE PTR [rax-0x71],cl
   140009eda:	clc    
   140009edb:	xor    esi,DWORD PTR [rbx]
   140009edd:	xor    edx,DWORD PTR [rbx-0x6c6c6c6d]
   140009ee3:	add    DWORD PTR [rcx],edx
   140009ee5:	adc    DWORD PTR [rcx],edx
   140009ee7:	adc    DWORD PTR [rcx],edx
   140009ee9:	adc    DWORD PTR [rbx],esi
   140009eeb:	xor    edx,DWORD PTR [rbx-0x7777676d]
   140009ef1:	(bad)  
   140009ef2:	(bad)  
   140009ef3:	(bad)  
   140009ef4:	(bad)  
   140009ef5:	clc    
   140009ef6:	xor    esi,DWORD PTR [rbx]
   140009ef8:	cmp    DWORD PTR [rcx],edi
   140009efa:	cmp    DWORD PTR [rcx],eax
   140009efc:	adc    DWORD PTR [rcx],edx
   140009efe:	adc    DWORD PTR [rcx],edx
   140009f00:	adc    DWORD PTR [rcx],edx
   140009f02:	adc    DWORD PTR [rcx],edx
   140009f04:	xor    esi,DWORD PTR [rbx]
   140009f06:	cmp    DWORD PTR [rcx],edi
   140009f08:	cmp    DWORD PTR [rax],edi
   140009f0a:	mov    BYTE PTR [rax-0x77770071],cl
   140009f10:	xor    esi,DWORD PTR [rbx]
   140009f12:	xor    eax,DWORD PTR [rcx]
   140009f14:	adc    DWORD PTR [rcx],edx
   140009f16:	adc    DWORD PTR [rcx],edx
   140009f18:	adc    DWORD PTR [rcx],edx
   140009f1a:	adc    DWORD PTR [rcx],edx
   140009f1c:	adc    DWORD PTR [rcx],edx
   140009f1e:	adc    esi,DWORD PTR [rbx]
   140009f20:	xor    edi,DWORD PTR [rcx]
   140009f22:	cmp    DWORD PTR [rcx],edi
   140009f24:	cmp    BYTE PTR [rax+0x33333388],cl
   140009f2a:	xor    eax,DWORD PTR [rcx]
   140009f2c:	adc    DWORD PTR [rcx],edx
   140009f2e:	adc    DWORD PTR [rcx],edx
   140009f30:	adc    DWORD PTR [rcx],edx
   140009f32:	adc    DWORD PTR [rcx],edx
   140009f34:	adc    DWORD PTR [rcx],edx
   140009f36:	adc    DWORD PTR [rcx],edx
   140009f38:	adc    DWORD PTR [rbx],edx
   140009f3a:	xor    esi,DWORD PTR [rbx]
   140009f3c:	cmp    DWORD PTR [rcx],edi
   140009f3e:	cmp    DWORD PTR [rcx],esi
   140009f40:	adc    DWORD PTR [rcx],edx
   140009f42:	adc    DWORD PTR [rcx],edx
   140009f44:	adc    DWORD PTR [rcx],edx
   140009f46:	adc    DWORD PTR [rcx],edx
   140009f48:	adc    DWORD PTR [rcx],edx
   140009f4a:	adc    DWORD PTR [rcx],edx
   140009f4c:	adc    DWORD PTR [rcx],edx
   140009f4e:	adc    DWORD PTR [rcx],edx
   140009f50:	adc    DWORD PTR [rcx],edx
   140009f52:	adc    DWORD PTR [rcx],edx
   140009f54:	adc    esi,DWORD PTR [rbx]
   140009f56:	xor    esi,DWORD PTR [rcx]
   140009f58:	adc    DWORD PTR [rcx],edx
   140009f5a:	adc    DWORD PTR [rcx],edx
   140009f5c:	adc    DWORD PTR [rcx],edx
   140009f5e:	adc    DWORD PTR [rcx],edx
   140009f60:	adc    DWORD PTR [rcx],edx
   140009f62:	adc    DWORD PTR [rcx],edx
   140009f64:	adc    DWORD PTR [rcx],edx
   140009f66:	adc    DWORD PTR [rcx],edx
   140009f68:	adc    DWORD PTR [rcx],edx
   140009f6a:	adc    DWORD PTR [rcx],edx
   140009f6c:	adc    DWORD PTR [rcx],edx
   140009f6e:	adc    DWORD PTR [rcx],edx
   140009f70:	adc    DWORD PTR [rcx],edx
   140009f72:	adc    DWORD PTR [rcx],edx
   140009f74:	adc    DWORD PTR [rcx],edx
   140009f76:	adc    DWORD PTR [rcx],edx
   140009f78:	(bad)  
   140009f79:	(bad)  
   140009f7a:	(bad)  
   140009f7b:	(bad)  
   140009f7c:	(bad)  
   140009f7d:	inc    DWORD PTR [rax]
   140009f7f:	add    bh,bh
   140009f81:	(bad)  
   140009f82:	(bad)  
   140009f83:	(bad)  
   140009f84:	(bad)  
   140009f85:	inc    DWORD PTR [rax]
   140009f87:	add    bh,bh
   140009f89:	jrcxz  0x140009f8a
   140009f8b:	(bad)  
   140009f8c:	(bad)  
   140009f8d:	inc    DWORD PTR [rax]
   140009f8f:	add    bh,bh
   140009f91:	cmp    bh,0xff
   140009f94:	(bad)  
   140009f95:	inc    DWORD PTR [rax]
   140009f97:	add    dh,bh
   140009f99:	add    BYTE PTR [rdi],bl
   140009f9b:	(bad)  
   140009f9c:	(bad)  
   140009f9d:	inc    DWORD PTR [rax]
   140009f9f:	add    ah,bh
   140009fa1:	add    BYTE PTR [rbx],al
   140009fa3:	(bad)  
   140009fa4:	(bad)  
   140009fa5:	inc    DWORD PTR [rax]
   140009fa7:	add    al,bh
   140009fa9:	add    BYTE PTR [rax],al
   140009fab:	jg     0x140009fac
   140009fad:	inc    DWORD PTR [rax]
   140009faf:	add    al,bh
   140009fb1:	add    BYTE PTR [rax],al
   140009fb3:	ud0    edi,edi
   140009fb6:	add    BYTE PTR [rax],al
   140009fb8:	clc    
   140009fb9:	add    BYTE PTR [rax],al
   140009fbb:	add    edi,edi
   140009fbd:	inc    DWORD PTR [rax]
   140009fbf:	add    al,bh
   140009fc1:	add    BYTE PTR [rax],al
   140009fc3:	add    BYTE PTR [rdi],bh
   140009fc5:	inc    DWORD PTR [rax]
   140009fc7:	add    al,bh
   140009fc9:	add    BYTE PTR [rax],al
   140009fcb:	add    BYTE PTR [rdi],al
   140009fcd:	inc    DWORD PTR [rax]
   140009fcf:	add    al,bh
   140009fd1:	add    BYTE PTR [rax],al
   140009fd3:	add    BYTE PTR [rcx],al
   140009fd5:	inc    DWORD PTR [rax]
   140009fd7:	add    al,bh
   140009fd9:	add    BYTE PTR [rax],al
   140009fdb:	add    BYTE PTR [rcx],al
   140009fdd:	inc    DWORD PTR [rax]
   140009fdf:	add    al,bh
   140009fe1:	add    BYTE PTR [rax],al
   140009fe3:	add    BYTE PTR [rcx],al
   140009fe5:	inc    DWORD PTR [rax]
   140009fe7:	add    al,bh
   140009fe9:	add    BYTE PTR [rax],al
   140009feb:	add    BYTE PTR [rcx],al
   140009fed:	inc    DWORD PTR [rax]
   140009fef:	add    al,bh
   140009ff1:	add    BYTE PTR [rax],al
   140009ff3:	add    BYTE PTR [rcx],al
   140009ff5:	inc    DWORD PTR [rax]
   140009ff7:	add    al,dh
   140009ff9:	add    BYTE PTR [rax],al
   140009ffb:	add    BYTE PTR [rcx],al
   140009ffd:	inc    DWORD PTR [rax]
   140009fff:	add    al,dh
   14000a001:	add    BYTE PTR [rax],al
   14000a003:	add    BYTE PTR [rcx],al
   14000a005:	inc    DWORD PTR [rax]
   14000a007:	add    al,dh
   14000a009:	add    BYTE PTR [rax],al
   14000a00b:	add    BYTE PTR [rcx],al
   14000a00d:	inc    DWORD PTR [rax]
   14000a00f:	add    al,dh
   14000a011:	add    BYTE PTR [rax],al
   14000a013:	add    BYTE PTR [rcx],al
   14000a015:	inc    DWORD PTR [rax]
   14000a017:	add    al,dh
   14000a019:	add    BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rax],al
   14000a01d:	inc    DWORD PTR [rax]
   14000a01f:	add    al,dh
   14000a021:	add    BYTE PTR [rax],al
   14000a023:	add    BYTE PTR [rax],al
   14000a025:	(bad)  
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	lock add BYTE PTR [rax],al
   14000a02b:	add    BYTE PTR [rax],al
   14000a02d:	sldt   WORD PTR [rax]
   14000a030:	lock add BYTE PTR [rax],al
   14000a033:	add    BYTE PTR [rax],al
   14000a035:	add    eax,DWORD PTR [rax]
   14000a037:	add    al,dh
   14000a039:	add    BYTE PTR [rax],al
   14000a03b:	add    BYTE PTR [rax],al
   14000a03d:	add    DWORD PTR [rax],eax
   14000a03f:	add    al,dh
   14000a041:	add    BYTE PTR [rax],al
   14000a043:	add    BYTE PTR [rax],al
   14000a045:	add    BYTE PTR [rax],al
   14000a047:	add    al,dh
   14000a049:	add    BYTE PTR [rax],al
   14000a04b:	add    BYTE PTR [rax],al
   14000a04d:	add    BYTE PTR [rax],al
   14000a04f:	add    al,dh
   14000a051:	add    BYTE PTR [rax],al
   14000a053:	add    BYTE PTR [rax],al
   14000a055:	add    BYTE PTR [rax],al
   14000a057:	add    al,ah
   14000a059:	add    BYTE PTR [rax],al
   14000a05b:	add    BYTE PTR [rax],al
   14000a05d:	add    BYTE PTR [rax],al
   14000a05f:	add    al,ah
   14000a061:	add    BYTE PTR [rax],al
   14000a063:	add    BYTE PTR [rax],al
   14000a065:	add    DWORD PTR [rax],eax
   14000a067:	add    al,ah
   14000a069:	add    BYTE PTR [rax],al
   14000a06b:	add    BYTE PTR [rax],al
   14000a06d:	add    eax,DWORD PTR [rax]
   14000a06f:	add    al,ah
   14000a071:	add    BYTE PTR [rax],al
   14000a073:	add    BYTE PTR [rcx],al
   14000a075:	inc    DWORD PTR [rax]
   14000a077:	add    al,ah
   14000a079:	add    BYTE PTR [rax],al
   14000a07b:	add    BYTE PTR [rcx],al
   14000a07d:	inc    DWORD PTR [rax]
   14000a07f:	add    al,ah
   14000a081:	add    BYTE PTR [rax],al
   14000a083:	add    BYTE PTR [rcx],al
   14000a085:	inc    DWORD PTR [rax]
   14000a087:	add    al,ah
   14000a089:	add    BYTE PTR [rax],al
   14000a08b:	add    BYTE PTR [rcx],al
   14000a08d:	inc    DWORD PTR [rax]
   14000a08f:	add    al,ah
   14000a091:	add    BYTE PTR [rax],al
   14000a093:	add    BYTE PTR [rcx],al
   14000a095:	inc    DWORD PTR [rax]
   14000a097:	add    al,ah
   14000a099:	add    BYTE PTR [rax],al
   14000a09b:	add    BYTE PTR [rcx],al
   14000a09d:	inc    DWORD PTR [rax]
   14000a09f:	add    al,ah
   14000a0a1:	add    BYTE PTR [rax],al
   14000a0a3:	add    BYTE PTR [rcx],al
   14000a0a5:	inc    DWORD PTR [rax]
   14000a0a7:	add    al,ah
   14000a0a9:	add    BYTE PTR [rax],al
   14000a0ab:	add    BYTE PTR [rcx],al
   14000a0ad:	inc    DWORD PTR [rax]
   14000a0af:	add    al,ah
   14000a0b1:	add    BYTE PTR [rax],al
   14000a0b3:	add    BYTE PTR [rcx],al
   14000a0b5:	inc    DWORD PTR [rax]
   14000a0b7:	add    al,ah
   14000a0b9:	add    BYTE PTR [rax],al
   14000a0bb:	add    BYTE PTR [rcx],al
   14000a0bd:	inc    DWORD PTR [rax]
   14000a0bf:	add    al,ah
   14000a0c1:	add    BYTE PTR [rax],al
   14000a0c3:	add    BYTE PTR [rcx],al
   14000a0c5:	inc    DWORD PTR [rax]
   14000a0c7:	add    al,dh
   14000a0c9:	add    BYTE PTR [rax],al
   14000a0cb:	add    BYTE PTR [rcx],al
   14000a0cd:	inc    DWORD PTR [rax]
   14000a0cf:	add    bh,bh
   14000a0d1:	add    BYTE PTR [rax],al
   14000a0d3:	add    BYTE PTR [rcx],al
   14000a0d5:	inc    DWORD PTR [rax]
   14000a0d7:	add    bh,bh
   14000a0d9:	clc    
   14000a0da:	add    BYTE PTR [rax],al
   14000a0dc:	add    edi,edi
   14000a0de:	add    BYTE PTR [rax],al
   14000a0e0:	(bad)  
   14000a0e1:	jmp    rax
   14000a0e3:	add    edi,edi
   14000a0e5:	inc    DWORD PTR [rax]
   14000a0e7:	add    bh,bh
   14000a0e9:	(bad)  
   14000a0ea:	inc    DWORD PTR [rcx+0xffff]
   14000a0f0:	(bad)  
   14000a0f1:	(bad)  
   14000a0f2:	(bad)  
   14000a0f3:	(bad)  
   14000a0f4:	(bad)  
   14000a0f5:	inc    DWORD PTR [rax]
   14000a0f7:	add    BYTE PTR [rax],ch
   14000a0f9:	add    BYTE PTR [rax],al
   14000a0fb:	add    BYTE PTR [rax],ah
   14000a0fd:	add    BYTE PTR [rax],al
   14000a0ff:	add    BYTE PTR [rax+0x0],al
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	add    DWORD PTR [rax],eax
   14000a106:	add    al,0x0
	...
   14000a128:	add    BYTE PTR [rax-0x80000000],al
   14000a12e:	add    BYTE PTR [rax],0x80
   14000a131:	add    BYTE PTR [rax],al
   14000a133:	add    BYTE PTR [rax-0x7fff8000],al
   14000a139:	add    BYTE PTR [rax],0x0
   14000a13c:	add    BYTE PTR [rax-0x3f3fff80],0xc0
   14000a143:	add    BYTE PTR [rax],al
   14000a145:	add    bh,bh
   14000a147:	add    BYTE PTR [rax],al
   14000a149:	add    BYTE PTR [rax],al
   14000a14b:	add    BYTE PTR [rax],al
   14000a14d:	(bad)  
   14000a14e:	inc    DWORD PTR [rax]
   14000a150:	inc    DWORD PTR [rax]
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	inc    DWORD PTR [rax]
   14000a156:	inc    DWORD PTR [rax]
   14000a158:	(bad)  
   14000a159:	inc    DWORD PTR [rax]
   14000a15b:	add    bh,bh
   14000a15d:	(bad)  
   14000a15e:	inc    DWORD PTR [rax]
   14000a160:	adc    DWORD PTR [rcx],edx
   14000a162:	adc    DWORD PTR [rcx],edx
   14000a164:	adc    DWORD PTR [rcx],edx
   14000a166:	adc    DWORD PTR [rcx],edx
   14000a168:	adc    DWORD PTR [rcx],edx
   14000a16a:	adc    DWORD PTR [rcx],edx
   14000a16c:	adc    DWORD PTR [rcx],edx
   14000a16e:	adc    DWORD PTR [rcx],edx
   14000a170:	adc    DWORD PTR [rcx],edx
   14000a172:	adc    DWORD PTR [rax],eax
   14000a174:	add    DWORD PTR [rcx],edx
   14000a176:	adc    DWORD PTR [rcx],edx
   14000a178:	adc    DWORD PTR [rcx],edx
   14000a17a:	adc    DWORD PTR [rcx],edx
   14000a17c:	adc    DWORD PTR [rcx],edx
   14000a17e:	adc    DWORD PTR [rcx],edx
   14000a180:	adc    DWORD PTR [rcx],edx
   14000a182:	add    BYTE PTR [rbx+0x11110030],al
   14000a188:	adc    DWORD PTR [rcx],edx
   14000a18a:	adc    DWORD PTR [rcx],edx
   14000a18c:	adc    DWORD PTR [rcx],edx
   14000a18e:	adc    DWORD PTR [rcx],edx
   14000a190:	adc    DWORD PTR [rax],edx
   14000a192:	cmp    DWORD PTR [rbx+0x1009393],eax
   14000a198:	adc    DWORD PTR [rcx],edx
   14000a19a:	adc    DWORD PTR [rcx],edx
   14000a19c:	adc    DWORD PTR [rcx],edx
   14000a19e:	adc    DWORD PTR [rcx],edx
   14000a1a0:	adc    DWORD PTR [rbx],eax
   14000a1a2:	xchg   ebx,eax
   14000a1a3:	cmp    DWORD PTR [rcx],0x39
   14000a1a6:	cmp    DWORD PTR [rax],esi
   14000a1a8:	add    BYTE PTR [rcx],dl
   14000a1aa:	adc    DWORD PTR [rcx],edx
   14000a1ac:	adc    DWORD PTR [rcx],edx
   14000a1ae:	adc    DWORD PTR [rcx],edx
   14000a1b0:	adc    BYTE PTR [rcx],bh
   14000a1b2:	cmp    DWORD PTR [rbx-0x6c6c6c6d],eax
   14000a1b8:	xchg   ebx,eax
   14000a1b9:	add    BYTE PTR [rcx],al
   14000a1bb:	adc    DWORD PTR [rcx],edx
   14000a1bd:	adc    DWORD PTR [rcx],edx
   14000a1bf:	adc    DWORD PTR [rbx],edx
   14000a1c1:	xchg   ebx,eax
   14000a1c2:	xchg   ebx,eax
   14000a1c3:	cmp    DWORD PTR [rcx],0x39
   14000a1c6:	cmp    DWORD PTR [rcx],edi
   14000a1c8:	cmp    DWORD PTR [rcx],edi
   14000a1ca:	xor    BYTE PTR [rcx],al
   14000a1cc:	adc    DWORD PTR [rcx],edx
   14000a1ce:	adc    DWORD PTR [rcx],edx
   14000a1d0:	adc    edi,DWORD PTR [rcx]
   14000a1d2:	mov    BYTE PTR [rbx-0x6c6c6c6d],al
   14000a1d8:	xchg   ebx,eax
   14000a1d9:	xchg   ebx,eax
   14000a1da:	xchg   ebx,eax
   14000a1db:	nop
   14000a1dc:	add    DWORD PTR [rcx],edx
   14000a1de:	adc    DWORD PTR [rcx],edx
   14000a1e0:	adc    edi,DWORD PTR [rax]
   14000a1e2:	mov    BYTE PTR [rbx+0x39393939],al
   14000a1e8:	cmp    DWORD PTR [rcx],edi
   14000a1ea:	cmp    DWORD PTR [rcx],edi
   14000a1ec:	add    DWORD PTR [rcx],edx
   14000a1ee:	adc    DWORD PTR [rcx],edx
   14000a1f0:	adc    ecx,DWORD PTR [rax+0x938339]
   14000a1f6:	add    BYTE PTR [rbx-0x6c6c6c6d],dl
   14000a1fc:	add    DWORD PTR [rcx],edx
   14000a1fe:	adc    DWORD PTR [rcx],edx
   14000a200:	adc    eax,DWORD PTR [rbx-0x39c67c6d]
   14000a206:	data16 add BYTE PTR [rcx],cl
   14000a209:	cmp    DWORD PTR [rcx],edi
   14000a20b:	cmp    DWORD PTR [rcx],eax
   14000a20d:	adc    DWORD PTR [rcx],edx
   14000a20f:	adc    DWORD PTR [rbx],edx
   14000a211:	cmp    DWORD PTR [rcx],edi
   14000a213:	adc    DWORD PTR [rbx+0x6066ee9c],0x0
   14000a21a:	xchg   ebx,eax
   14000a21b:	xchg   ebx,eax
   14000a21c:	add    DWORD PTR [rcx],edx
   14000a21e:	adc    DWORD PTR [rcx],edx
   14000a220:	adc    edx,DWORD PTR [rbx+0x39398393]
   14000a226:	int3   
   14000a227:	out    dx,al
   14000a228:	out    0x66,al
   14000a22a:	add    BYTE PTR [rcx],cl
   14000a22c:	add    DWORD PTR [rcx],edx
   14000a22e:	adc    DWORD PTR [rcx],edx
   14000a230:	adc    edi,DWORD PTR [rcx]
   14000a232:	cmp    DWORD PTR [rbx-0x336c6c6d],eax
   14000a238:	out    dx,al
   14000a239:	out    dx,al
   14000a23a:	data16 (bad) 
   14000a23c:	add    BYTE PTR [rcx],dl
   14000a23e:	adc    DWORD PTR [rcx],edx
   14000a240:	adc    edx,DWORD PTR [rbx+0x39398393]
   14000a246:	cmp    DWORD PTR [rcx],edi
   14000a248:	int3   
   14000a249:	out    dx,al
   14000a24a:	out    dx,al
   14000a24b:	out    0x66,al
   14000a24d:	add    BYTE PTR [rcx],dl
   14000a24f:	adc    DWORD PTR [rbx],edx
   14000a251:	cmp    DWORD PTR [rcx],edi
   14000a253:	adc    DWORD PTR [rbx-0x6c6c6c6d],0xffffffcc
   14000a25a:	out    dx,al
   14000a25b:	out    dx,al
   14000a25c:	out    dx,al
   14000a25d:	data16 add BYTE PTR [rcx],dl
   14000a260:	adc    edx,DWORD PTR [rbx+0x39398393]
   14000a266:	cmp    DWORD PTR [rcx],edi
   14000a268:	cmp    DWORD PTR [rcx],edi
   14000a26a:	int3   
   14000a26b:	int3   
   14000a26c:	out    dx,al
   14000a26d:	out    dx,al
   14000a26e:	add    WORD PTR [rbx],dx
   14000a271:	cmp    DWORD PTR [rcx],edi
   14000a273:	adc    DWORD PTR [rbx-0x6c6c6c6d],0xffffff93
   14000a27a:	pushf  
   14000a27b:	out    dx,al
   14000a27c:	int3   
   14000a27d:	out    dx,al
   14000a27e:	outs   dx,BYTE PTR ds:[rsi]
   14000a27f:	add    DWORD PTR [rbx],edx
   14000a281:	xchg   ebx,eax
   14000a282:	xchg   ebx,eax
   14000a283:	cmp    DWORD PTR [rcx],0x33
   14000a286:	xor    edi,DWORD PTR [rcx]
   14000a288:	cmp    DWORD PTR [rcx],edi
   14000a28a:	cmp    esp,ecx
   14000a28c:	out    dx,al
   14000a28d:	out    dx,al
   14000a28e:	out    dx,al
   14000a28f:	add    DWORD PTR [rbx],edx
   14000a291:	cmp    DWORD PTR [rax-0x6c6c7d],ecx
   14000a297:	repz xor esi,DWORD PTR [rbx]
   14000a29a:	xchg   ebx,eax
   14000a29b:	xchg   ebx,eax
   14000a29c:	int3   
   14000a29d:	int3   
   14000a29e:	int3   
   14000a29f:	adc    DWORD PTR [rbx],edx
   14000a2a1:	cmp    BYTE PTR [rax-0xccc67d],cl
   14000a2a7:	(bad)  
   14000a2a8:	push   rbx
   14000a2aa:	cmp    DWORD PTR [rcx],edi
   14000a2ac:	add    DWORD PTR [rcx],edx
   14000a2ae:	adc    DWORD PTR [rcx],edx
   14000a2b0:	adc    ecx,DWORD PTR [rax-0x6c6c7cc7]
   14000a2b6:	(bad)  
   14000a2b7:	(bad)  
   14000a2b8:	(bad)  
   14000a2b9:	push   QWORD PTR [rbx]
   14000a2bb:	xchg   ebx,eax
   14000a2bc:	add    DWORD PTR [rcx],edx
   14000a2be:	adc    DWORD PTR [rcx],edx
   14000a2c0:	adc    eax,DWORD PTR [rbx+0x33398393]
   14000a2c6:	(bad)  
   14000a2c7:	(bad)  
   14000a2c8:	(bad)  
   14000a2c9:	(bad)  
   14000a2ca:	cmp    DWORD PTR [rcx],edi
   14000a2cc:	add    DWORD PTR [rcx],edx
   14000a2ce:	adc    DWORD PTR [rcx],edx
   14000a2d0:	adc    edi,DWORD PTR [rcx]
   14000a2d2:	cmp    DWORD PTR [rbx+0x33939393],eax
   14000a2d8:	(bad)  
   14000a2d9:	push   QWORD PTR [rbx]
   14000a2db:	xchg   ebx,eax
   14000a2dc:	add    DWORD PTR [rcx],edx
   14000a2de:	adc    DWORD PTR [rcx],edx
   14000a2e0:	adc    edx,DWORD PTR [rbx+0x39398393]
   14000a2e6:	cmp    DWORD PTR [rcx],edi
   14000a2e8:	xor    esi,DWORD PTR [rbx]
   14000a2ea:	cmp    DWORD PTR [rcx],edi
   14000a2ec:	add    DWORD PTR [rcx],edx
   14000a2ee:	adc    DWORD PTR [rcx],edx
   14000a2f0:	adc    edi,DWORD PTR [rcx]
   14000a2f2:	mov    BYTE PTR [rax-0x6c6c6c6d],cl
   14000a2f8:	xchg   ebx,eax
   14000a2f9:	xchg   ebx,eax
   14000a2fa:	xchg   ebx,eax
   14000a2fb:	xchg   ebx,eax
   14000a2fc:	add    DWORD PTR [rcx],edx
   14000a2fe:	adc    DWORD PTR [rcx],edx
   14000a300:	adc    ebx,DWORD PTR [rdi+0x39f9ffff]
   14000a306:	cmp    DWORD PTR [rcx],edi
   14000a308:	cmp    DWORD PTR [rcx],edi
   14000a30a:	cmp    DWORD PTR [rcx],edi
   14000a30c:	add    DWORD PTR [rcx],edx
   14000a30e:	adc    DWORD PTR [rcx],edx
   14000a310:	adc    edi,DWORD PTR [rcx]
   14000a312:	cmp    DWORD PTR [rcx],edi
   14000a314:	(bad)  
   14000a315:	(bad)  
   14000a316:	push   rbx
   14000a318:	xchg   ebx,eax
   14000a319:	xchg   ebx,eax
   14000a31a:	xchg   ebx,eax
   14000a31b:	xchg   ebx,eax
   14000a31c:	add    DWORD PTR [rcx],edx
   14000a31e:	adc    DWORD PTR [rcx],edx
   14000a320:	adc    DWORD PTR [rbx],esi
   14000a322:	xor    esi,DWORD PTR [rbx]
   14000a324:	xchg   ebx,eax
   14000a325:	xchg   ebx,eax
   14000a326:	xchg   ebx,eax
   14000a327:	lahf   
   14000a328:	(bad)  
   14000a329:	inc    DWORD PTR [rax]
   14000a32b:	add    BYTE PTR [rcx],al
   14000a32d:	adc    DWORD PTR [rcx],edx
   14000a32f:	adc    DWORD PTR [rcx],edx
   14000a331:	adc    DWORD PTR [rcx],edx
   14000a333:	adc    DWORD PTR [rbx],esi
   14000a335:	xor    esi,DWORD PTR [rbx]
   14000a337:	cmp    DWORD PTR [rcx],edi
   14000a339:	xor    BYTE PTR [rcx],dl
   14000a33b:	adc    DWORD PTR [rcx],edx
   14000a33d:	adc    DWORD PTR [rcx],edx
   14000a33f:	adc    DWORD PTR [rcx],edx
   14000a341:	adc    DWORD PTR [rcx],edx
   14000a343:	adc    DWORD PTR [rcx],edx
   14000a345:	adc    DWORD PTR [rcx],edx
   14000a347:	xor    esi,DWORD PTR [rbx]
   14000a349:	xor    BYTE PTR [rcx],dl
   14000a34b:	adc    DWORD PTR [rcx],edx
   14000a34d:	adc    DWORD PTR [rcx],edx
   14000a34f:	adc    DWORD PTR [rcx],edx
   14000a351:	adc    DWORD PTR [rcx],edx
   14000a353:	adc    DWORD PTR [rcx],edx
   14000a355:	adc    DWORD PTR [rcx],edx
   14000a357:	adc    DWORD PTR [rcx],edx
   14000a359:	adc    DWORD PTR [rcx],edx
   14000a35b:	adc    DWORD PTR [rcx],edx
   14000a35d:	adc    DWORD PTR [rcx],edx
   14000a35f:	adc    edi,edi
   14000a361:	(bad)  
   14000a362:	(bad)  
   14000a363:	(bad)  
   14000a364:	cld    
   14000a365:	jg     0x14000a366
   14000a367:	push   rax
   14000a369:	ud0    edi,edi
   14000a36c:	loopne 0x14000a36f
   14000a36e:	(bad)  
   14000a36f:	inc    eax
   14000a371:	add    BYTE PTR [rdi],bh
   14000a373:	inc    DWORD PTR [rax-0x7f00f900]
   14000a379:	add    BYTE PTR [rcx],al
   14000a37b:	inc    DWORD PTR [rax-0x7f810000]
   14000a381:	add    BYTE PTR [rax],al
   14000a383:	jg     0x14000a305
   14000a385:	add    BYTE PTR [rax],al
   14000a387:	jg     0x14000a309
   14000a389:	add    BYTE PTR [rax],al
   14000a38b:	jg     0x14000a30d
   14000a38d:	add    BYTE PTR [rax],al
   14000a38f:	jg     0x14000a311
   14000a391:	add    BYTE PTR [rax],al
   14000a393:	jg     0x14000a315
   14000a395:	add    BYTE PTR [rax],al
   14000a397:	(bad)  
   14000a398:	add    BYTE PTR [rax],0x0
   14000a39b:	jo     0xc003a3a1
   14000a3a1:	add    BYTE PTR [rax],al
   14000a3a3:	add    DWORD PTR [rax-0x7fff0000],eax
   14000a3a9:	add    BYTE PTR [rax],al
   14000a3ab:	add    DWORD PTR [rax-0x7ffd0000],eax
   14000a3b1:	add    BYTE PTR [rax],al
   14000a3b3:	jg     0x14000a335
   14000a3b5:	add    BYTE PTR [rax],al
   14000a3b7:	jg     0x14000a339
   14000a3b9:	add    BYTE PTR [rax],al
   14000a3bb:	jg     0x14000a33d
   14000a3bd:	add    BYTE PTR [rax],al
   14000a3bf:	jg     0x14000a341
   14000a3c1:	add    BYTE PTR [rax],al
   14000a3c3:	jg     0x14000a345
   14000a3c5:	add    BYTE PTR [rax],al
   14000a3c7:	jg     0x14000a349
   14000a3c9:	add    BYTE PTR [rax],al
   14000a3cb:	jg     0x14000a34d
   14000a3cd:	add    BYTE PTR [rax],al
   14000a3cf:	jg     0x14000a391
   14000a3d1:	add    BYTE PTR [rax],al
   14000a3d3:	jg     0x14000a3d4
   14000a3d5:	add    BYTE PTR [rdi],cl
   14000a3d7:	(bad)  
   14000a3d8:	(bad)  
   14000a3d9:	cld    
   14000a3da:	ud0    edi,edi
   14000a3dd:	(bad)  
   14000a3de:	(bad)  
   14000a3df:	jmp    FWORD PTR [rax]
   14000a3e1:	add    BYTE PTR [rax],al
   14000a3e3:	add    BYTE PTR [rax],dl
   14000a3e5:	add    BYTE PTR [rax],al
   14000a3e7:	add    BYTE PTR [rax],ah
   14000a3e9:	add    BYTE PTR [rax],al
   14000a3eb:	add    BYTE PTR [rcx],al
   14000a3ed:	add    BYTE PTR [rax+rax*1],al
	...
   14000a410:	add    BYTE PTR [rax-0x80000000],al
   14000a416:	add    BYTE PTR [rax],0x80
   14000a419:	add    BYTE PTR [rax],al
   14000a41b:	add    BYTE PTR [rax-0x7fff8000],al
   14000a421:	add    BYTE PTR [rax],0x0
   14000a424:	add    BYTE PTR [rax-0x3f3fff80],0xc0
   14000a42b:	add    BYTE PTR [rax],al
   14000a42d:	add    bh,bh
   14000a42f:	add    BYTE PTR [rax],al
   14000a431:	add    BYTE PTR [rax],al
   14000a433:	add    BYTE PTR [rax],al
   14000a435:	(bad)  
   14000a436:	inc    DWORD PTR [rax]
   14000a438:	inc    DWORD PTR [rax]
   14000a43a:	add    BYTE PTR [rax],al
   14000a43c:	inc    DWORD PTR [rax]
   14000a43e:	inc    DWORD PTR [rax]
   14000a440:	(bad)  
   14000a441:	inc    DWORD PTR [rax]
   14000a443:	add    bh,bh
   14000a445:	(bad)  
   14000a446:	inc    DWORD PTR [rax]
   14000a448:	adc    DWORD PTR [rax],edx
   14000a44a:	add    BYTE PTR [rcx],dl
   14000a44c:	adc    DWORD PTR [rcx],edx
   14000a44e:	adc    DWORD PTR [rcx],edx
   14000a450:	adc    DWORD PTR [rcx],ecx
   14000a452:	cmp    DWORD PTR [rax],eax
   14000a454:	add    DWORD PTR [rcx],edx
   14000a456:	adc    DWORD PTR [rcx],edx
   14000a458:	adc    edx,DWORD PTR [rbx+0x909393]
   14000a45e:	adc    DWORD PTR [rcx],edx
   14000a460:	adc    edi,DWORD PTR [rax]
   14000a462:	mov    DWORD PTR [rcx],edi
   14000a464:	cmp    DWORD PTR [rax],esi
   14000a466:	adc    DWORD PTR [rcx],edx
   14000a468:	adc    esi,ebx
   14000a46a:	xchg   esp,eax
   14000a46b:	xor    r14d,DWORD PTR [rax]
   14000a46e:	adc    DWORD PTR [rcx],edx
   14000a470:	adc    edx,DWORD PTR [rbx+0x3044ce39]
   14000a476:	adc    DWORD PTR [rcx],edx
   14000a478:	adc    esi,DWORD PTR [rbx]
   14000a47a:	xchg   ebx,eax
   14000a47b:	pushf  
   14000a47c:	out    dx,al
   14000a47d:	add    BYTE PTR [rcx],al
   14000a47f:	adc    DWORD PTR [rbx],edx
   14000a481:	xchg   ebx,eax
   14000a482:	cmp    DWORD PTR [rcx],edi
   14000a484:	int3   
   14000a485:	out    dx,al
   14000a486:	loopne 0x14000a489
   14000a488:	adc    esi,DWORD PTR [rbx]
   14000a48a:	xchg   ebx,eax
   14000a48b:	xor    DWORD PTR [rbx],0xffffffcc
   14000a48e:	out    dx,al
   14000a48f:	loopne 0x14000a4a4
   14000a491:	cwde   
   14000a492:	cmp    edi,0xffffff83
   14000a495:	xor    ah,cl
   14000a497:	rcl    BYTE PTR [rbx],0xf3
   14000a49a:	xchg   ebx,eax
   14000a49b:	cmp    bh,bh
   14000a49d:	xor    BYTE PTR [rcx],dl
   14000a49f:	adc    DWORD PTR [rbx],edx
   14000a4a1:	xor    edi,DWORD PTR [rcx]
   14000a4a3:	cmp    DWORD PTR [rax],edi
   14000a4a5:	xor    BYTE PTR [rcx],dl
   14000a4a7:	adc    DWORD PTR [rbx],edx
   14000a4a9:	push   QWORD PTR [rbx]
   14000a4ab:	xor    edx,DWORD PTR [rbx+0x13111130]
   14000a4b1:	xor    edi,edi
   14000a4b3:	repz xor esi,DWORD PTR [rax]
   14000a4b6:	adc    DWORD PTR [rcx],edx
   14000a4b8:	adc    DWORD PTR [rcx],edx
   14000a4ba:	xor    edi,DWORD PTR [rdi]
   14000a4bc:	push   QWORD PTR [rax]
   14000a4be:	adc    DWORD PTR [rcx],edx
   14000a4c0:	adc    DWORD PTR [rcx],edx
   14000a4c2:	adc    DWORD PTR [rbx],edx
   14000a4c4:	xor    edx,DWORD PTR [rcx]
   14000a4c6:	adc    DWORD PTR [rcx],edx
   14000a4c8:	jrcxz  0x14000a4c9
   14000a4ca:	mov    BYTE PTR [rbx+0x39397fc0],al
   14000a4d0:	or     BYTE PTR [rdi],0x39
   14000a4d3:	cmp    DWORD PTR [rax-0x7feeeef1],eax
   14000a4d9:	(bad)  
   14000a4db:	add    DWORD PTR [rax-0x7f6cfff1],0x7
   14000a4e2:	xchg   ebx,eax
   14000a4e3:	xchg   ebx,eax
   14000a4e4:	add    BYTE PTR [rcx],0x11
   14000a4e7:	adc    DWORD PTR [rax-0x7f7c6d00],eax
   14000a4ed:	add    BYTE PTR [rsi+0x0],ah
   14000a4f0:	or     BYTE PTR [rdi],0x39
   14000a4f3:	cmp    DWORD PTR [rax-0x7feeeef1],eax
   14000a4f9:	(bad)  
   14000a4fb:	add    DWORD PTR [rax-0xf9911f1],0xf
   14000a502:	xchg   ebx,eax
   14000a503:	xchg   ebx,eax
   14000a504:	(bad)  
   14000a505:	(bad)  
   14000a506:	adc    DWORD PTR [rcx],edx
   14000a508:	sub    BYTE PTR [rax],al
   14000a50a:	add    BYTE PTR [rax],al
   14000a50c:	xor    BYTE PTR [rax],al
   14000a50e:	add    BYTE PTR [rax],al
   14000a510:	(bad)  
   14000a511:	add    BYTE PTR [rax],al
   14000a513:	add    BYTE PTR [rcx],al
   14000a515:	add    BYTE PTR [rax],cl
	...
   14000a533:	add    bh,bh
   14000a535:	(bad)  
   14000a536:	inc    DWORD PTR [rax]
   14000a538:	add    BYTE PTR [rax],al
   14000a53a:	add    BYTE PTR [rax],al
   14000a53c:	and    DWORD PTR [rdx+rsi*8+0x0],ebp
   14000a540:	jno    0x14000a5a7
   14000a542:	jne    0x14000a544
   14000a544:	and    DWORD PTR [rdx+0x5a],0x0
   14000a548:	mov    BYTE PTR [rbx+0x36],cl
   14000a54b:	add    BYTE PTR [rcx-0x66ffe0bd],dl
   14000a551:	xor    eax,DWORD PTR [rax]
   14000a553:	add    BYTE PTR [rbx-0x62fff2c7],dl
   14000a559:	rex.RX sbb DWORD PTR [rax],r8d
   14000a55c:	lahf   
   14000a55d:	cmp    DWORD PTR [rax],eax
   14000a55f:	add    BYTE PTR [rbp-0x4fffffc1],ah
   14000a565:	push   rdi
   14000a566:	and    BYTE PTR [rax],al
   14000a568:	scas   al,BYTE PTR es:[rdi]
   14000a569:	add    QWORD PTR [rax],rax
   14000a56c:	mov    ecx,0xbc003167
   14000a571:	pop    rcx
   14000a572:	(bad)  
   14000a573:	add    bl,cl
   14000a575:	imul   edx,DWORD PTR [rcx],0x0
   14000a578:	(bad)  
   14000a579:	jno    0x14000a5a4
   14000a57b:	add    ch,al
   14000a57d:	xchg   DWORD PTR [rcx+0x0],edx
   14000a580:	in     eax,0x9f
   14000a582:	(bad)  
   14000a583:	add    cl,dl
   14000a585:	xchg   esi,eax
   14000a586:	(bad)  
   14000a587:	add    dl,cl
   14000a589:	gs add al,0x0
   14000a58c:	iret   
   14000a58d:	ins    DWORD PTR es:[rdi],dx
   14000a58e:	or     al,BYTE PTR [rax]
   14000a590:	shl    BYTE PTR [rdx+0x11],cl
   14000a593:	add    dh,dl
   14000a595:	jns    0x14000a5b4
   14000a597:	add    bl,bl
   14000a599:	test   BYTE PTR [rip+0x3e8fe000],ch        # 0x17e90859f
   14000a59f:	add    bl,ah
   14000a5a1:	xchg   esi,eax
   14000a5a2:	rex.WXB add r9b,bpl
   14000a5a5:	lahf   
   14000a5a6:	push   rsi
   14000a5a7:	add    ch,ch
   14000a5a9:	test   al,0x62
   14000a5ab:	add    al,dh
   14000a5ad:	lods   eax,DWORD PTR ds:[rsi]
   14000a5ae:	imul   eax,DWORD PTR [rax],0xfffffff1
   14000a5b1:	mov    cl,0x71
   14000a5b3:	add    ah,dh
   14000a5b5:	mov    dh,0x78
   14000a5b7:	add    bh,dh
   14000a5b9:	mov    esp,0xc3fa0081
   14000a5be:	mov    eax,DWORD PTR [rax]
   14000a5c0:	(bad)  
   14000a5c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a5c2:	jb     0x14000a5c4
   14000a5c4:	sti    
   14000a5c5:	enter  0x92,0xfe
   14000a5c9:	(bad)  
   14000a5ca:	(bad)  
   14000a5cb:	add    dh,bh
   14000a5cd:	(bad)  
   14000a5ce:	movabs eax,ds:0xa5d8ff008dc0e600
   14000a5d7:	add    bh,bh
   14000a5d9:	(bad)  [rdx-0x6b381a00]
   14000a5df:	add    bh,bh
   14000a5e1:	loopne 0x14000a590
   14000a5e3:	add    dl,dh
   14000a5e5:	(bad)  
   14000a5e6:	movabs ds:0xacdff200b2e5fe00,al
   14000a5ef:	add    dh,bh
   14000a5f1:	in     al,dx
   14000a5f2:	mov    ecx,0xbef1ff00
   14000a5f7:	add    ah,bh
   14000a5f9:	icebp  
   14000a5fa:	ret    
   14000a5fb:	add    bh,bh
   14000a5fd:	call   rbx
   14000a5ff:	add    bh,bh
   14000a601:	(bad)  
   14000a602:	fild   DWORD PTR [rax]
   14000a604:	(bad)  
   14000a605:	jmp    rbx
   14000a607:	add    bh,bh
   14000a609:	(bad)  
   14000a60a:	jmp    0x14000a60c
   14000a60c:	(bad)  
   14000a60d:	push   rsp
   14000a60f:	add    dl,ah
   14000a611:	cmc    
   14000a612:	(bad)  
   14000a613:	add    dl,ah
   14000a615:	cmc    
   14000a616:	jmp    0x1a6fea61b
   14000a61b:	add    cl,bl
   14000a61d:	repnz out 0x0,eax
   14000a620:	mov    ch,0xff
   14000a622:	test   BYTE PTR [rax],0x8f
   14000a625:	hlt    
   14000a626:	out    dx,al
   14000a627:	add    BYTE PTR [rdx-0x39ff0905],ah
   14000a62d:	std    
   14000a62e:	stc    
   14000a62f:	add    ah,ah
   14000a631:	(bad)  
   14000a632:	cld    
   14000a633:	add    BYTE PTR [rbp-0x70ff110d],dl
   14000a639:	stc    
   14000a63a:	clc    
   14000a63b:	add    bh,dl
   14000a63d:	idiv   edx
   14000a63f:	add    BYTE PTR [rsi-0x74ff0813],al
   14000a645:	repz std 
   14000a647:	add    dh,al
   14000a649:	in     al,dx
   14000a64a:	icebp  
   14000a64b:	add    BYTE PTR [rbx+riz*8-0xa],bh
   14000a64f:	add    BYTE PTR [rbx-0x58ff0316],al
   14000a655:	out    0xf0,al
   14000a657:	add    BYTE PTR [rbx+0x7e00eee6],dh
   14000a65d:	(bad)  
   14000a65e:	out    0x0,al
   14000a660:	ja     0x14000a63e
   14000a662:	cmc    
   14000a663:	add    BYTE PTR [rbp+0x7900f8e5],dl
   14000a669:	loopne 0x14000a668
   14000a66b:	add    BYTE PTR [rsi-0x35],ch
   14000a66e:	in     al,0x0
   14000a670:	jb     0x14000a646
   14000a672:	hlt    
   14000a673:	add    BYTE PTR [rbp+rbp*8-0x31a2ff04],bh
   14000a67a:	cmc    
   14000a67b:	add    BYTE PTR [rax-0x2a],dh
   14000a67e:	cld    
   14000a67f:	add    BYTE PTR [rcx+rbx*8-0x1],dh
   14000a683:	add    BYTE PTR [rbx+0x6200ead4],dl
   14000a689:	(bad)  
   14000a68a:	cli    
   14000a68b:	add    BYTE PTR [rax-0x33],ch
   14000a68e:	test   BYTE PTR [rax],0x6b
   14000a691:	int3   
   14000a692:	icebp  
   14000a693:	add    BYTE PTR [rax-0x6bff0628],cl
   14000a699:	(bad)  
   14000a69b:	add    BYTE PTR [rbp-0x37],bl
   14000a69e:	clc    
   14000a69f:	add    BYTE PTR [rsi-0x33],ah
   14000a6a2:	std    
   14000a6a3:	add    BYTE PTR [rdx-0x30],ch
   14000a6a6:	inc    BYTE PTR [rax]
   14000a6a8:	gs (bad) 
   14000a6aa:	repnz add BYTE PTR [rbp+0x5400fbe0],ah
   14000a6b1:	shl    ah,0x0
   14000a6b4:	pop    rbx
   14000a6b5:	(bad)  
   14000a6b6:	sti    
   14000a6b7:	add    BYTE PTR [rax-0x3a],ah
   14000a6ba:	cli    
   14000a6bb:	add    BYTE PTR [rsi-0x34],ah
   14000a6be:	inc    DWORD PTR [rax]
   14000a6c0:	gs leave 
   14000a6c2:	cld    
   14000a6c3:	add    BYTE PTR [rax-0x40],ah
   14000a6c6:	lock add BYTE PTR [rcx-0x33],ch
   14000a6ca:	std    
   14000a6cb:	add    BYTE PTR [rbx-0x45],dl
   14000a6ce:	hlt    
   14000a6cf:	add    BYTE PTR [rcx+rax*8-0x5],bl
   14000a6d3:	add    BYTE PTR [rax-0x3c],ah
   14000a6d6:	cld    
   14000a6d7:	add    BYTE PTR [rbx-0x37],ah
   14000a6da:	inc    DWORD PTR [rax]
   14000a6dc:	pop    rsi
   14000a6dd:	mov    ecx,0xcf7b00ed
   14000a6e2:	cld    
   14000a6e3:	add    BYTE PTR [rbx-0x3d],dh
   14000a6e6:	in     eax,dx
   14000a6e7:	add    BYTE PTR [rcx-0x41],bl
   14000a6ea:	inc    DWORD PTR [rax]
   14000a6ec:	pop    rbx
   14000a6ed:	ret    0xfe
   14000a6f0:	pop    rsi
   14000a6f1:	sar    esi,0x0
   14000a6f4:	pop    rbp
   14000a6f5:	sar    ch,0x0
   14000a6f8:	pop    rdi
   14000a6f9:	ret    0xfe
   14000a6fc:	pop    rsi
   14000a6fd:	sar    ch,0x0
   14000a700:	(bad)  
   14000a701:	(bad)  
   14000a702:	inc    BYTE PTR [rax]
   14000a704:	rex.X lods eax,DWORD PTR ds:[rsi]
   14000a706:	cmc    
   14000a707:	add    BYTE PTR [rax-0x4e],dl
   14000a70a:	test   DWORD PTR [rax],0xe3a74a
   14000a710:	push   rdx
   14000a711:	mov    ch,0xf9
   14000a713:	add    BYTE PTR [rbp-0x45],dl
   14000a716:	inc    DWORD PTR [rax]
   14000a718:	pop    rcx
   14000a719:	mov    ecx,0xb95900fc
   14000a71e:	sti    
   14000a71f:	add    BYTE PTR [rdx-0x45],bl
   14000a722:	std    
   14000a723:	add    BYTE PTR [rsi+rdi*4-0x3],bl
   14000a727:	add    BYTE PTR [rdx-0x43],ah
   14000a72a:	clc    
   14000a72b:	add    BYTE PTR [rax-0x51],ch
   14000a72e:	loope  0x14000a730
   14000a730:	mov    ah,cl
   14000a732:	cld    
   14000a733:	add    BYTE PTR [rax+rbx*8-0x4ab0ff10],dh
   14000a73a:	inc    DWORD PTR [rax]
   14000a73c:	rex.WR scas al,BYTE PTR es:[rdi]
   14000a73e:	hlt    
   14000a73f:	add    BYTE PTR [rcx-0x4d],dl
   14000a742:	cli    
   14000a743:	add    BYTE PTR [rcx-0x4e],dl
   14000a746:	stc    
   14000a747:	add    BYTE PTR [rbx-0x4d],dl
   14000a74a:	sti    
   14000a74b:	add    BYTE PTR [rbp-0x4b],dl
   14000a74e:	cld    
   14000a74f:	add    BYTE PTR [rbp-0x4b],dl
   14000a752:	sti    
   14000a753:	add    BYTE PTR [rdi-0x49],dl
   14000a756:	cld    
   14000a757:	add    BYTE PTR [rax-0x49],bl
   14000a75a:	cld    
   14000a75b:	add    BYTE PTR [rbp-0x3f],dh
   14000a75e:	cli    
   14000a75f:	add    BYTE PTR [rsi],dh
   14000a761:	sahf   
   14000a762:	repz add BYTE PTR [rsi-0x54],al
   14000a766:	inc    DWORD PTR [rax]
   14000a768:	rex.WR mov al,0xfe
   14000a76b:	add    BYTE PTR [rdx-0x57],cl
   14000a76e:	clc    
   14000a76f:	add    BYTE PTR [rbx+rbp*4-0x9],cl
   14000a773:	add    BYTE PTR [rdi-0x54],cl
   14000a776:	sti    
   14000a777:	add    BYTE PTR [rcx-0x50],dl
   14000a77a:	sti    
   14000a77b:	add    BYTE PTR [rcx-0x52],dl
   14000a77e:	sti    
   14000a77f:	add    BYTE PTR [rax-0x55],dl
   14000a782:	clc    
   14000a783:	add    BYTE PTR [rdx-0x4f],dl
   14000a786:	sti    
   14000a787:	add    BYTE PTR [rbx-0x4e],dl
   14000a78a:	cld    
   14000a78b:	add    BYTE PTR [rbp-0x4f],dl
   14000a78e:	cli    
   14000a78f:	add    BYTE PTR [rdi-0x61],dl
   14000a792:	fiadd  DWORD PTR [rax]
   14000a794:	pop    rbp
   14000a795:	test   eax,0xb26d00e7
   14000a79a:	(bad)  
   14000a79b:	add    BYTE PTR [rcx],dh
   14000a79d:	xchg   edi,eax
   14000a79e:	icebp  
   14000a79f:	add    BYTE PTR [rdx+riz*4],bh
   14000a7a2:	inc    DWORD PTR [rax]
   14000a7a4:	ds sahf 
   14000a7a6:	repnz add BYTE PTR [rdi],dh
   14000a7a9:	mov    dl,bh
   14000a7ab:	add    BYTE PTR [rdx-0x59],al
   14000a7ae:	inc    DWORD PTR [rax]
   14000a7b0:	rex.WRB test rax,0xffffffffa84c00fa
   14000a7b6:	stc    
   14000a7b7:	add    BYTE PTR [rdi-0x55],cl
   14000a7ba:	cli    
   14000a7bb:	add    BYTE PTR [rdi-0x54],dl
   14000a7be:	clc    
   14000a7bf:	add    BYTE PTR [rbx],dh
   14000a7c1:	cdq    
   14000a7c2:	inc    DWORD PTR [rax]
   14000a7c4:	xor    eax,0x3900ff9b
   14000a7c9:	sahf   
   14000a7ca:	inc    DWORD PTR [rax]
   14000a7cc:	cmp    dl,BYTE PTR [rsi-0x60bfff0c]
   14000a7d2:	cld    
   14000a7d3:	add    BYTE PTR [rcx+riz*4-0x5],al
   14000a7d7:	add    BYTE PTR [rdi+rbx*4-0xa],al
   14000a7db:	add    BYTE PTR [rdi-0x5f],al
   14000a7de:	stc    
   14000a7df:	add    BYTE PTR [rcx-0x5c],cl
   14000a7e2:	cli    
   14000a7e3:	add    BYTE PTR [rdx-0x65],cl
   14000a7e6:	out    dx,al
   14000a7e7:	add    BYTE PTR [rax-0x69],dl
   14000a7ea:	fiadd  WORD PTR [rax]
   14000a7ec:	sub    BYTE PTR [rax-0x2e],bh
   14000a7ef:	add    BYTE PTR [rdx],dh
   14000a7f1:	xchg   ebx,eax
   14000a7f2:	cld    
   14000a7f3:	add    BYTE PTR [rsi+rcx*4],dh
   14000a7f6:	icebp  
   14000a7f7:	add    BYTE PTR [rsi],bh
   14000a7f9:	xchg   ebp,eax
   14000a7fa:	test   DWORD PTR [rax],0xf89740
   14000a800:	rex.B cdq 
   14000a802:	clc    
   14000a803:	add    BYTE PTR [rbx-0x63],al
   14000a806:	cli    
   14000a807:	add    BYTE PTR [rdx-0x67],al
   14000a80a:	clc    
   14000a80b:	add    BYTE PTR [rbx-0x65],al
   14000a80e:	clc    
   14000a80f:	add    BYTE PTR [rbp-0x63],al
   14000a812:	stc    
   14000a813:	add    BYTE PTR [rcx-0x66],cl
   14000a816:	cmc    
   14000a817:	add    BYTE PTR [rdi],ch
   14000a819:	mov    ?,esp
   14000a81b:	add    BYTE PTR [rax],dh
   14000a81d:	(bad)  
   14000a81e:	sti    
   14000a81f:	add    BYTE PTR [rip+0x2f00ef85],ch        # 0x16f0197aa
   14000a825:	mov    al,dh
   14000a827:	add    BYTE PTR [rax],dh
   14000a829:	mov    edi,ebp
   14000a82b:	add    BYTE PTR [rbx],dh
   14000a82d:	mov    dh,cl
   14000a82f:	add    BYTE PTR [rip+0x3500f48b],dh        # 0x175019cc0
   14000a835:	mov    ebx,?
   14000a837:	add    BYTE PTR [rcx],bh
   14000a839:	(bad)  
   14000a83a:	cmc    
   14000a83b:	add    BYTE PTR [rbx],bh
   14000a83d:	(bad)  
   14000a83e:	test   DWORD PTR [rax],0xf7923c
   14000a844:	ds xchg ebp,eax
   14000a846:	clc    
   14000a847:	add    BYTE PTR [rdi],bh
   14000a849:	xchg   ecx,eax
   14000a84a:	hlt    
   14000a84b:	add    BYTE PTR [rbp-0x71],al
   14000a84e:	jmp    0x1178df953
   14000a853:	add    BYTE PTR [rcx+rbp*4-0x7],ah
   14000a857:	add    BYTE PTR [rsi-0x77],bl
   14000a85a:	mov    esp,0xe8751f00
   14000a85f:	add    BYTE PTR [rax*4-0x7ed3ff07],ch
   14000a866:	icebp  
   14000a867:	add    BYTE PTR [rdi],ch
   14000a869:	xor    edx,0x0
   14000a86c:	xor    DWORD PTR [rsi-0x79cbff0e],eax
   14000a872:	test   BYTE PTR [rax],0x35
   14000a875:	mov    esi,esi
   14000a877:	add    BYTE PTR [rsi+rax*4],dh
   14000a87a:	repnz add BYTE PTR [rsi],dh
   14000a87d:	mov    esi,esi
   14000a87f:	add    BYTE PTR [rsi],dh
   14000a881:	mov    dh,dh
   14000a883:	add    BYTE PTR [rsi],dh
   14000a885:	mov    ebp,esi
   14000a887:	add    BYTE PTR [rsi],dh
   14000a889:	mov    esi,ebp
   14000a88b:	add    BYTE PTR [rcx],bh
   14000a88d:	(bad)  
   14000a88e:	test   BYTE PTR [rax],0x52
   14000a891:	cdq    
   14000a892:	test   DWORD PTR [rax],0xe7b691
   14000a898:	sbb    ah,BYTE PTR [rsi-0x2d]
   14000a89b:	add    BYTE PTR [rax],ah
   14000a89d:	jb     0x14000a88c
   14000a89f:	add    BYTE PTR [rdi],ah
   14000a8a1:	jns    0x14000a893
   14000a8a3:	add    BYTE PTR [rcx],ch
   14000a8a5:	jg     0x14000a89f
   14000a8a7:	add    BYTE PTR [rdx],ch
   14000a8a9:	jge    0x14000a89c
   14000a8ab:	add    BYTE PTR [rip+0x2f00f47e],ch        # 0x16f019d2f
   14000a8b1:	xor    ch,0x0
   14000a8b4:	xor    DWORD PTR [rdx-0x7bcdff0b],eax
   14000a8ba:	cmc    
   14000a8bb:	add    BYTE PTR [rip+0x1700f488],bh        # 0x157019d49
   14000a8c1:	pop    rcx
   14000a8c2:	ret    
   14000a8c3:	add    BYTE PTR [rax],ah
   14000a8c5:	outs   dx,DWORD PTR ds:[rsi]
   14000a8c6:	out    dx,eax
   14000a8c7:	add    BYTE PTR [rbx],ah
   14000a8c9:	jb     0x14000a8bf
   14000a8cb:	add    BYTE PTR [rbx],ah
   14000a8cd:	jno    0x14000a8c0
   14000a8cf:	add    BYTE PTR [rsi],ah
   14000a8d1:	ja     0x14000a8c8
   14000a8d3:	add    BYTE PTR [rdi],ah
   14000a8d5:	js     0x14000a8cc
   14000a8d7:	add    BYTE PTR [rdi],ah
   14000a8d9:	je     0x14000a8ce
   14000a8db:	add    BYTE PTR [rax],ch
   14000a8dd:	jbe    0x14000a8d2
   14000a8df:	add    BYTE PTR [rdx],ch
   14000a8e1:	jns    0x14000a8d6
   14000a8e3:	add    BYTE PTR [rbx+rdi*2],ch
   14000a8e6:	hlt    
   14000a8e7:	add    BYTE PTR [rsi],bh
   14000a8e9:	test   esp,esi
   14000a8eb:	add    BYTE PTR [rcx-0x60],bh
   14000a8ee:	loopne 0x14000a8f0
   14000a8f0:	sbb    BYTE PTR [rsi-0x3b],dl
   14000a8f3:	add    BYTE PTR [rcx],ah
   14000a8f5:	ins    DWORD PTR es:[rdi],dx
   14000a8f6:	repnz add BYTE PTR [rcx],ah
   14000a8f9:	ins    DWORD PTR es:[rdi],dx
   14000a8fa:	icebp  
   14000a8fb:	add    BYTE PTR [rbx],ah
   14000a8fd:	outs   dx,DWORD PTR ds:[rsi]
   14000a8fe:	repnz add BYTE PTR [rip+0x2000f372],ah        # 0x160019c77
   14000a905:	pop    rsp
   14000a906:	mov    BYTE PTR [rax],0x18
   14000a909:	push   rdx
   14000a90a:	mov    DWORD PTR [rax],0xa67860
   14000a910:	sbb    DWORD PTR [rbp-0x36],ecx
   14000a913:	add    BYTE PTR [rcx],bl
   14000a915:	rex.WX retf 
   14000a917:	add    BYTE PTR [rbx+rdx*2],ah
   14000a91a:	int3   
   14000a91b:	add    BYTE PTR [rdx],bl
   14000a91d:	rex.RB (bad) 
   14000a91f:	add    BYTE PTR [rdx],ah
   14000a921:	rex.WR iretq 
   14000a923:	add    BYTE PTR [rax],ch
   14000a925:	push   rax
   14000a926:	rol    BYTE PTR [rax],1
   14000a928:	pop    rsi
   14000a929:	push   0xffffffffffffff97
   14000a92b:	add    bh,bh
   14000a92d:	(bad)  
   14000a92e:	inc    DWORD PTR [rax]
	...
   14000a998:	add    BYTE PTR [rax],al
   14000a99a:	add    ah,bh
   14000a99c:	cld    
   14000a99d:	cld    
	...
   14000a9c6:	add    BYTE PTR [rax],al
   14000a9c8:	add    ah,bh
   14000a9ca:	cld    
   14000a9cb:	fisubr DWORD PTR [rdi+0xfcfc9e]
	...
   14000a9f5:	add    BYTE PTR [rax],al
   14000a9f7:	cld    
   14000a9f8:	cld    
   14000a9f9:	retf   
   14000a9fa:	retf   
   14000a9fb:	retf   
   14000a9fc:	popf   
   14000a9fd:	push   rdx
   14000a9fe:	(bad)  
   14000a9ff:	lods   eax,DWORD PTR ds:[rsi]
   14000aa00:	cld    
   14000aa01:	cld    
   14000aa02:	cld    
	...
   14000aa23:	add    BYTE PTR [rax],al
   14000aa25:	add    ah,bh
   14000aa27:	addr32 mov cl,0xdb
   14000aa2a:	fcmovnu st,st(3)
   14000aa2c:	popf   
   14000aa2d:	pop    rbx
   14000aa2e:	add    DWORD PTR [ebx-0x303527d],0xfffffffc
	...
   14000aa52:	add    BYTE PTR [rax],al
   14000aa54:	add    al,bh
   14000aa56:	gs push rsi
   14000aa58:	mov    cl,0xe5
   14000aa5a:	in     eax,0xe5
   14000aa5c:	popf   
   14000aa5d:	(bad)  
   14000aa5e:	js     0x14000a9ef
   14000aa60:	nop
   14000aa61:	xor    DWORD PTR [rsi+0x76],0xffffff83
   14000aa65:	lods   eax,DWORD PTR ds:[rsi]
   14000aa66:	stc    
   14000aa67:	cld    
   14000aa68:	cld    
	...
   14000aa85:	clc    
   14000aa86:	(bad)
   14000aa8c:	mov    bl,0x6f
   14000aa8e:	test   BYTE PTR [rdi+rcx*4-0x7a896e70],ch
   14000aa95:	js     0x14000aa1f
   14000aa97:	xchg   DWORD PTR [rbp+0xfcfcfc],ebp
	...
   14000aab5:	clc    
   14000aab6:	pop    rsi
   14000aab7:	push   0xfffffffff2f2f2c0
   14000aabc:	(bad)
   14000aabf:	stos   DWORD PTR es:[rdi],eax
   14000aac0:	lods   al,BYTE PTR ds:[rsi]
   14000aac1:	movabs eax,ds:0x7b898886959391a0
   14000aaca:	jp     0x14000aa79
   14000aacc:	cld    
   14000aacd:	cld    
   14000aace:	cld    
	...
   14000aae3:	add    BYTE PTR [rax],al
   14000aae5:	stc    
   14000aae6:	push   rdi
   14000aae7:	push   0x5d7da3aa
   14000aaec:	outs   dx,BYTE PTR ds:[rsi]
   14000aaed:	jns    0x14000aa8f
   14000aaef:	stos   DWORD PTR es:[rdi],eax
   14000aaf0:	stos   DWORD PTR es:[rdi],eax
   14000aaf1:	lods   al,BYTE PTR ds:[rsi]
   14000aaf2:	movabs eax,ds:0x7a898786959391a0
   14000aafb:	jl     0x14000ab7a
   14000aafd:	jge    0x14000aaac
   14000aaff:	cld    
   14000ab00:	cld    
   14000ab01:	cld    
	...
   14000ab12:	add    BYTE PTR [rax],al
   14000ab14:	add    cl,bh
   14000ab16:	push   rbx
   14000ab17:	rex.W
   14000ab18:	rex.W
   14000ab19:	rex.WRX push rsp
   14000ab1b:	pop    rbp
   14000ab1c:	outs   dx,BYTE PTR ds:[rsi]
   14000ab1d:	jns    0x14000aaca
   14000ab1f:	mov    eax,0xa1acabab
   14000ab24:	movabs al,ds:0x7c7a898786959391
   14000ab2d:	jge    0x14000aba0
   14000ab2f:	jb     0x14000aba3
   14000ab31:	lods   eax,DWORD PTR ds:[rsi]
   14000ab32:	cld    
   14000ab33:	cld    
   14000ab34:	cld    
	...
   14000ab45:	stc    
   14000ab46:	rex.W
   14000ab47:	rex.RB
   14000ab48:	rex.W
   14000ab49:	rex.WRX
   14000ab4a:	data16 movabs ds:0xacababb8b7a9828e,al
   14000ab54:	movabs eax,ds:0x7a898786959391a0
   14000ab5d:	jl     0x14000abdc
   14000ab5f:	jno    0x14000abd3
   14000ab61:	je     0x14000abd7
   14000ab63:	push   0xffffffffffffffad
   14000ab65:	cld    
   14000ab66:	cld    
	...
   14000ab73:	add    BYTE PTR [rax],al
   14000ab75:	stc    
   14000ab76:	rex.R
   14000ab77:	rex.RB
   14000ab78:	fs in  eax,dx
   14000ab7a:	add    eax,DWORD PTR [rbx]
   14000ab7c:	test   eax,0xb7b6b582
   14000ab81:	mov    eax,0xacacaca9
   14000ab86:	movabs al,ds:0x7c7a898786959391
   14000ab8f:	jge    0x14000ac02
   14000ab91:	jb     0x14000ac07
   14000ab93:	push   0x6a
   14000ab95:	imul   edi,esp,0x0
	...
   14000aba3:	add    BYTE PTR [rax],al
   14000aba5:	stc    
   14000aba6:	rex.W jge 0x14000ab7d
   14000aba9:	add    eax,DWORD PTR [rbx]
   14000abab:	add    ebp,DWORD PTR [rax+0x6f7b78e]
   14000abb1:	add    al,0x4
   14000abb3:	add    al,0xca
   14000abb5:	retf   0x94ca
   14000abb8:	xchg   esp,eax
   14000abb9:	xchg   ebx,eax
   14000abba:	xchg   ebp,eax
   14000abbb:	xchg   BYTE PTR [rdi+0x7d7c7a89],al
   14000abc1:	jno    0x14000ac35
   14000abc3:	je     0x14000ac2f
   14000abc5:	push   0xfffffffffffffffc
	...
   14000abd3:	add    BYTE PTR [rax],al
   14000abd5:	stc    
   14000abd6:	push   rbx
   14000abd7:	mov    ah,dl
   14000abd9:	add    eax,DWORD PTR [rbx]
   14000abdb:	add    ecx,DWORD PTR [rbp+0x509b28d]
   14000abe1:	sbb    edx,DWORD PTR [rdx]
   14000abe3:	or     eax,0x60c0e10
   14000abe8:	not    DWORD PTR [rdx-0x7879696a]
   14000abee:	mov    DWORD PTR [rdx+0x7c],edi
   14000abf1:	jge    0x14000ac64
   14000abf3:	jb     0x14000ac69
   14000abf5:	push   0xfffffffffffffffc
	...
   14000ac03:	add    BYTE PTR [rax],al
   14000ac05:	stc    
   14000ac06:	push   rbx
   14000ac07:	mov    ah,dl
   14000ac09:	add    eax,DWORD PTR [rbx]
   14000ac0b:	add    ecx,DWORD PTR [rbp+0xf04c38d]
   14000ac11:	and    esp,DWORD PTR [rax]
   14000ac13:	sbb    eax,0x161a1c1b
   14000ac18:	(bad)  
   14000ac19:	(bad)  
   14000ac1a:	add    al,0x99
   14000ac1c:	xchg   edx,eax
   14000ac1d:	xchg   BYTE PTR [rdi+0x7d7c7a89],al
   14000ac23:	jno    0x14000ac97
   14000ac25:	je     0x14000ac23
	...
   14000ac33:	add    al,bh
   14000ac35:	imul   edx,DWORD PTR [rbx-0x6b],0xffffffd4
   14000ac39:	add    eax,DWORD PTR [rbx]
   14000ac3b:	add    ebx,DWORD PTR [rdi+0x4c2d79f]
   14000ac41:	or     eax,0x26252325
   14000ac46:	sbb    eax,0xe16191a
   14000ac4b:	or     DWORD PTR [rip+0xffffffff89898598],eax        # 0xc98a31e9
   14000ac51:	jp     0x14000accf
   14000ac53:	jge    0x14000acc6
   14000ac55:	jb     0x14000ac53
	...
   14000ac63:	add    al,bh
   14000ac65:	imul   edx,DWORD PTR [rbx-0x6d],0xffffffd4
   14000ac69:	add    eax,DWORD PTR [rbx]
   14000ac6b:	add    ebx,DWORD PTR [rdi-0x3c282b61]
   14000ac71:	dec    BYTE PTR [rip+0x222e302d]        # 0x1622edca4
   14000ac77:	(bad)  
   14000ac78:	sbb    al,0x1b
   14000ac7a:	sbb    DWORD PTR [rdi],edx
   14000ac7c:	adc    BYTE PTR [rbx],cl
   14000ac7e:	add    eax,0x7a8988ca
   14000ac83:	jge    0x14000acf7
   14000ac85:	jno    0x14000ac83
	...
   14000ac93:	add    al,bh
   14000ac95:	gs push rbx
   14000ac97:	xchg   ebx,eax
   14000ac98:	(bad)  
   14000ac99:	add    eax,DWORD PTR [rbx]
   14000ac9b:	add    ebx,DWORD PTR [rsp+rbx*4-0x3c282b2d]
   14000aca2:	dec    BYTE PTR [rip+0x25293230]        # 0x16529ded8
   14000aca8:	and    bl,BYTE PTR [rdi]
   14000acaa:	sbb    eax,0x10181a1b
   14000acaf:	or     al,0x6
   14000acb1:	add    eax,0x71ca0507
   14000acb6:	sti    
	...
   14000acc3:	add    al,bh
   14000acc5:	pop    rsi
   14000acc6:	push   rbx
   14000acc7:	xchg   ebx,eax
   14000acc8:	(bad)  
   14000acc9:	add    eax,DWORD PTR [rbx]
   14000accb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000accd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000acce:	rcl    bl,1
   14000acd0:	(bad)  
   14000acd1:	xlat   BYTE PTR ds:[rbx]
   14000acd2:	ret    
   14000acd3:	test   DWORD PTR [rdi],0x292e2d13
   14000acd9:	and    esp,DWORD PTR es:[rax]
   14000acdc:	sbb    eax,0x16181a1b
   14000ace1:	adc    BYTE PTR [rsi],dl
   14000ace3:	adc    BYTE PTR [rsi+rax*1],cl
   14000ace6:	inc    BYTE PTR [rax]
	...
   14000acf4:	clc    
   14000acf5:	pop    rax
   14000acf6:	push   rbx
   14000acf7:	xchg   ebx,eax
   14000acf8:	(bad)  
   14000acf9:	add    eax,DWORD PTR [rbx]
   14000acfb:	jmp    0x110e351a6
   14000ad00:	rcl    esp,cl
   14000ad02:	xlat   BYTE PTR ds:[rbx]
   14000ad03:	ret    
   14000ad04:	(bad)  
   14000ad05:	inc    BYTE PTR [rdi]
   14000ad07:	adc    ebp,DWORD PTR [rax]
   14000ad09:	sub    ah,BYTE PTR cs:[rdi]
   14000ad0c:	and    esp,DWORD PTR [rcx]
   14000ad0e:	(bad)  
   14000ad0f:	sbb    ebx,DWORD PTR [rbx]
   14000ad11:	sbb    ebx,DWORD PTR [rdx]
   14000ad13:	sbb    BYTE PTR [rsi],dl
   14000ad15:	(bad)  
   14000ad16:	or     BYTE PTR [rax],cl
	...
   14000ad24:	clc    
   14000ad25:	push   rax
   14000ad26:	pop    rbp
   14000ad27:	movabs eax,ds:0xe2e1b0a5e80303d4
   14000ad30:	rcl    bl,1
   14000ad32:	(bad)  
   14000ad33:	xlat   BYTE PTR ds:[rbx]
   14000ad34:	ret    
   14000ad35:	(bad)  
   14000ad36:	(bad)
   14000ad39:	(bad)  
   14000ad3b:	xor    BYTE PTR [rdi+riz*1],ch
   14000ad3e:	and    eax,0x1c1d2022
   14000ad43:	sbb    ebx,DWORD PTR [rdx]
   14000ad45:	sbb    DWORD PTR [rdi],edx
   14000ad47:	(bad)  
   14000ad48:	or     BYTE PTR [rax],cl
	...
   14000ad52:	add    BYTE PTR [rax],al
   14000ad54:	clc    
   14000ad55:	push   rax
   14000ad56:	pop    rbp
   14000ad57:	movabs eax,ds:0xe1e0b0a4e80303d4
   14000ad60:	loop   0x14000ad32
   14000ad62:	rcl    esp,cl
   14000ad64:	xlat   BYTE PTR ds:[rbx]
   14000ad65:	ret    
   14000ad66:	(bad)  
   14000ad67:	mov    dl,0xb3
   14000ad69:	enter  0xa05,0x24
   14000ad6d:	cs sub al,0x27
   14000ad70:	and    eax,0x1d1e2022
   14000ad75:	sbb    ebx,DWORD PTR [rdx]
   14000ad77:	sbb    DWORD PTR [rax],ebx
   14000ad79:	(bad)  
   14000ad7a:	or     BYTE PTR [rax],cl
	...
   14000ad84:	clc    
   14000ad85:	rex.WR pop rbp
   14000ad87:	movabs eax,ds:0xe0dfb0a4e80303d4
   14000ad90:	loope  0x14000ad74
   14000ad92:	rcl    bl,1
   14000ad94:	(bad)  
   14000ad95:	xlat   BYTE PTR ds:[rbx]
   14000ad96:	ret    
   14000ad97:	(bad)  
   14000ad98:	mov    dl,0xb3
   14000ad9a:	mov    ah,0xc8
   14000ad9c:	add    al,0xa
   14000ad9e:	adc    ebp,DWORD PTR [rip+0x22252627]        # 0x16225d3cb
   14000ada4:	and    DWORD PTR [rsi],ebx
   14000ada6:	sbb    eax,0x18191a1b
   14000adab:	(bad)  
   14000adac:	or     BYTE PTR [rax],cl
   14000adae:	add    BYTE PTR [rax],al
   14000adb0:	add    BYTE PTR [rax],al
   14000adb2:	add    BYTE PTR [rax],al
   14000adb4:	clc    
   14000adb5:	rex.RXB pop r13
   14000adb7:	movabs eax,ds:0xdfedbba4e80303d4
   14000adc0:	loopne 0x14000ada3
   14000adc2:	loop   0x14000ad94
   14000adc4:	rcl    esp,cl
   14000adc6:	xlat   BYTE PTR ds:[rbx]
   14000adc7:	ret    
   14000adc8:	(bad)  
   14000adc9:	mov    dl,0xb3
   14000adcb:	mov    ah,0xb8
   14000adcd:	mov    DWORD PTR [rdx*1+0x27292c30],0x1f212326
   14000add8:	sbb    eax,0x1d1c1b1c
   14000addd:	sbb    ecx,DWORD PTR [rax]
   14000addf:	add    BYTE PTR [rax],al
   14000ade1:	add    BYTE PTR [rax],al
   14000ade3:	add    al,bh
   14000ade5:	rex.RXB pop r12
   14000ade7:	movabs eax,ds:0xedeccca4dd0303d4
   14000adf0:	fnstsw ax
   14000adf2:	loope  0x14000add6
   14000adf4:	rcl    bl,1
   14000adf6:	(bad)  
   14000adf7:	xlat   BYTE PTR ds:[rbx]
   14000adf8:	ret    
   14000adf9:	(bad)  
   14000adfa:	mov    dl,0xb3
   14000adfc:	mov    ah,0xb7
   14000adfe:	lods   eax,DWORD PTR ds:[rsi]
   14000adff:	(bad)  
   14000ae00:	and    al,0x30
   14000ae02:	xor    BYTE PTR [rsi],ch
   14000ae04:	sub    ah,BYTE PTR [rdi]
   14000ae06:	and    esp,DWORD PTR es:[rdx]
   14000ae09:	(bad)  
   14000ae0a:	and    DWORD PTR [rip+0x81c2023],esp        # 0x1481cce33
   14000ae10:	add    BYTE PTR [rax],al
   14000ae12:	add    BYTE PTR [rax],al
   14000ae14:	clc    
   14000ae15:	rex.W
   14000ae16:	movabs eax,fs:0xecebcca4cc0303d4
   14000ae20:	in     eax,dx
   14000ae21:	fnstsw ax
   14000ae23:	loope  0x14000ae07
   14000ae25:	rcl    bl,1
   14000ae27:	(bad)  
   14000ae28:	xlat   BYTE PTR ds:[rbx]
   14000ae29:	ret    
   14000ae2a:	(bad)  
   14000ae2b:	mov    dl,0xb3
   14000ae2d:	mov    ah,0xb6
   14000ae2f:	retf   0x100c
   14000ae32:	adc    eax,0x2a2e322f
   14000ae37:	(bad)  
   14000ae38:	es and eax,0x26272a29
   14000ae3e:	and    BYTE PTR [rax],cl
   14000ae40:	add    BYTE PTR [rax],al
   14000ae42:	add    dh,dh
   14000ae44:	imul   ecx,DWORD PTR [rax+0x64],0xffffffa1
   14000ae48:	(bad)  
   14000ae49:	add    eax,DWORD PTR [rbx]
   14000ae4b:	frstor [rsp+rcx*8-0x1f131416]
   14000ae52:	shl    al,1
   14000ae54:	loope  0x14000ae38
   14000ae56:	rcl    bl,1
   14000ae58:	(bad)  
   14000ae59:	xlat   BYTE PTR ds:[rbx]
   14000ae5a:	ret    
   14000ae5b:	(bad)  
   14000ae5c:	mov    dl,0xb3
   14000ae5e:	mov    ah,0xca
   14000ae60:	or     eax,0xf0c161a
   14000ae65:	sub    esi,DWORD PTR [rcx]
   14000ae67:	cs sub al,0x2a
   14000ae6a:	xor    BYTE PTR [rdx],dh
   14000ae6c:	xor    BYTE PTR [rdx],ch
   14000ae6e:	or     BYTE PTR es:[rax],al
   14000ae71:	add    BYTE PTR [rax],al
   14000ae73:	imul   BYTE PTR [rbx+0x48]
   14000ae76:	movabs eax,fs:0xeaf4cca4cc0303d4
   14000ae80:	jmp    0x14000ae59
   14000ae82:	movsxd esi,DWORD PTR [rdx-0x6e]
   14000ae85:	mov    eax,0xd4d3d0d7
   14000ae8a:	xlat   BYTE PTR ds:[rbx]
   14000ae8b:	ret    
   14000ae8c:	(bad)  
   14000ae8d:	mov    dl,0xb3
   14000ae8f:	mov    DWORD PTR [rsi],0x111b140f
   14000ae95:	(bad)  
   14000ae96:	adc    bl,BYTE PTR [rbx]
   14000ae98:	and    eax,0x34373331
   14000ae9d:	cs adc eax,0x8
   14000aea3:	mul    BYTE PTR [rbp+0x48]
   14000aea6:	fs xchg edi,eax
   14000aea8:	xchg   edi,eax
   14000aea9:	xchg   edx,eax
   14000aeaa:	mov    bl,BYTE PTR [rdi-0xb0c225c]
   14000aeb0:	(bad)  
   14000aeb1:	xlat   BYTE PTR ds:[rbx]
   14000aeb2:	movsxd ebx,DWORD PTR [rdx+0x59]
   14000aeb5:	movsxd esp,DWORD PTR [rbx+0x72]
   14000aeb8:	xchg   esi,eax
   14000aeb9:	lods   al,BYTE PTR ds:[rsi]
   14000aeba:	(bad)  
   14000aebb:	xlat   BYTE PTR ds:[rbx]
   14000aebc:	ret    
   14000aebd:	(bad)  
   14000aebe:	mov    dl,0xb3
   14000aec0:	mov    bh,0xfe
   14000aec2:	(bad)  
   14000aec3:	or     eax,0x12191c1c
   14000aec8:	adc    dl,BYTE PTR [rbx]
   14000aeca:	xor    dh,BYTE PTR [rip+0x82833]        # 0x14008d703
   14000aed0:	add    BYTE PTR [rax],al
   14000aed2:	add    dh,dh
   14000aed4:	pop    rsi
   14000aed5:	rex.R
   14000aed6:	rex.W
   14000aed7:	rex.W
   14000aed8:	rex.WRX push rsp
   14000aeda:	pop    rbp
   14000aedb:	lea    esp,[rax+rbp*8-0x2b0b0c0f]
   14000aee2:	movsxd eax,DWORD PTR [rbx+0x36]
   14000aee5:	cmp    ecx,DWORD PTR ss:[rdx+0x59]
   14000aee9:	pop    rsp
   14000aeea:	pop    rsp
   14000aeeb:	imul   ecx,DWORD PTR [rax-0x4c4d4954],0x5cab7b4
   14000aef5:	or     cl,BYTE PTR [rax]
   14000aef7:	or     BYTE PTR [rax],cl
   14000aef9:	or     BYTE PTR [rax],cl
   14000aefb:	or     BYTE PTR [rax],cl
   14000aefd:	or     BYTE PTR [rax],al
   14000aeff:	add    BYTE PTR [rax],al
   14000af01:	add    BYTE PTR [rax],al
   14000af03:	neg    BYTE PTR [rax+0x42]
   14000af06:	rex.RB
   14000af07:	rex.W
   14000af08:	rex.WRX push rsp
   14000af0a:	jge    0x14000aea8
   14000af0c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000af0d:	call   0xf4f4a015
   14000af12:	movsxd eax,DWORD PTR [rbx+0x37]
   14000af15:	ss ss xor eax,0x4a3b3435
   14000af1c:	pop    rdx
   14000af1d:	push   rax
   14000af1e:	movsxd ebp,DWORD PTR [rcx-0x6f]
   14000af21:	mov    bl,0xb4
   14000af23:	mov    bh,0xb8
   14000af25:	enter  0xfc,0x0
	...
   14000af31:	add    BYTE PTR [rax],al
   14000af33:	neg    BYTE PTR [rax+0x42]
   14000af36:	rex.RB push r12
   14000af38:	xchg   esp,eax
   14000af39:	(bad)  
   14000af3a:	add    edi,DWORD PTR [rdx+0x303e8a4]
   14000af40:	icebp  
   14000af41:	mov    eax,0x37374363
   14000af46:	ss ss xor eax,0x33343435
   14000af4d:	xor    edi,DWORD PTR [rax]
   14000af4f:	pop    rcx
   14000af50:	jge    0x14000af04
   14000af52:	mov    bl,0xb4
   14000af54:	mov    bh,0xb8
   14000af56:	sti    
	...
   14000af63:	not    BYTE PTR [rax+0x45]
   14000af66:	movabs ax,ds:0x303e8a4ba0303d4
   14000af70:	add    edi,DWORD PTR [rax+0x37370163]
   14000af76:	(bad)  
   14000af77:	ss ss xor eax,0x33343435
   14000af7e:	xor    edx,DWORD PTR [rbp+0x7d]
   14000af81:	(bad)  
   14000af82:	mov    dl,0xb3
   14000af84:	mov    ah,0xb7
   14000af86:	sti    
	...
   14000af93:	test   BYTE PTR [rsi+rcx*2+0x69],0xa1
   14000af98:	(bad)  
   14000af99:	add    eax,DWORD PTR [rbx]
   14000af9b:	mov    edx,0x303e6a4
   14000afa0:	add    edi,DWORD PTR [rax+0x515f5963]
   14000afa6:	rex.XB (bad) 
   14000afa8:	ss xor eax,0x34343535
   14000afae:	xor    ebx,DWORD PTR [rcx+0x7c]
   14000afb1:	ret    
   14000afb2:	(bad)  
   14000afb3:	mov    dl,0xb3
   14000afb5:	mov    ah,0xfb
	...
   14000afc3:	test   BYTE PTR [rdi+0x4c],0x69
   14000afc7:	movabs eax,ds:0x30303a4ba0303d4
   14000afd0:	add    ebx,edi
   14000afd2:	mov    eax,0x63637393
   14000afd7:	movsxd ebx,DWORD PTR [rcx+0x5f]
   14000afda:	rex.RX cmp DWORD PTR [rip+0x7c593434],r14d        # 0x1bc59e415
   14000afe1:	xlat   BYTE PTR ds:[rbx]
   14000afe2:	ret    
   14000afe3:	(bad)  
   14000afe4:	mov    dl,0xb3
   14000afe6:	sti    
	...
   14000aff3:	test   BYTE PTR [rdi+0x4e],0x69
   14000aff7:	(bad)  
   14000aff8:	(bad)  
   14000aff9:	add    eax,DWORD PTR [rbx]
   14000affb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000affc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000affd:	add    eax,DWORD PTR [rbx]
   14000afff:	add    eax,DWORD PTR [rbx]
   14000b001:	add    eax,DWORD PTR [rbx]
   14000b003:	add    esi,ecx
   14000b005:	(bad)  
   14000b006:	shr    DWORD PTR [rbx+0x63637095],1
   14000b00c:	movsxd ebx,DWORD PTR [rcx+0x49]
   14000b00f:	ins    BYTE PTR es:[rdi],dx
   14000b010:	jl     0x14000afe6
   14000b012:	xlat   BYTE PTR ds:[rbx]
   14000b013:	ret    
   14000b014:	(bad)  
   14000b015:	mov    dl,0xfb
	...
   14000b023:	test   BYTE PTR [rsi+rcx*2+0x69],0x8f
   14000b028:	(bad)  
   14000b029:	add    eax,DWORD PTR [rbx]
   14000b02b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b02c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b02d:	add    eax,DWORD PTR [rbx]
   14000b02f:	add    eax,DWORD PTR [rbx]
   14000b031:	add    eax,DWORD PTR [rbx]
   14000b033:	add    eax,DWORD PTR [rbx]
   14000b035:	icebp  
   14000b036:	repz hlt 
   14000b038:	(bad)  
   14000b039:	jmp    0x14000b01a
   14000b03b:	ret    
   14000b03c:	lods   al,BYTE PTR ds:[rsi]
   14000b03d:	xchg   DWORD PTR [rdx+0x63],esi
   14000b040:	jl     0x14000b015
   14000b042:	(bad)  
   14000b043:	xlat   BYTE PTR ds:[rbx]
   14000b044:	ret    
   14000b045:	(bad)  
   14000b046:	sti    
	...
   14000b053:	test   BYTE PTR [rsp+rcx*2+0x69],0x8f
   14000b058:	(bad)  
   14000b059:	repnz add esp,DWORD PTR [rsp+riz*4+0x3030303]
   14000b061:	add    eax,DWORD PTR [rbx]
   14000b063:	add    eax,DWORD PTR [rbx]
   14000b065:	add    esi,ecx
   14000b067:	repz hlt 
   14000b069:	(bad)  
   14000b06a:	jmp    0x14000b058
   14000b06c:	in     eax,dx
   14000b06d:	fnstsw ax
   14000b06f:	rol    ah,1
   14000b071:	rcl    bl,1
   14000b073:	(bad)  
   14000b074:	xlat   BYTE PTR ds:[rbx]
   14000b075:	ret    
   14000b076:	sti    
	...
   14000b083:	test   BYTE PTR [rdx+0x4e],0x69
   14000b087:	jle    0x14000b107
   14000b089:	mov    ebx,DWORD PTR [rcx+0x5a]
   14000b08c:	ins    BYTE PTR es:[rdi],dx
   14000b08d:	mov    ecx,ecx
   14000b08f:	fsubr  st,st(6)
   14000b091:	repnz repz repnz repnz repnz repnz repnz out 0xf4,eax
   14000b09a:	(bad)  
   14000b09b:	fsub   st(4),st
   14000b09d:	in     eax,dx
   14000b09e:	fnstsw ax
   14000b0a0:	loope  0x14000b084
   14000b0a2:	rcl    ch,1
   14000b0a4:	(bad)  
   14000b0a5:	ret    0xfb
	...
   14000b0b0:	add    BYTE PTR [rax],al
   14000b0b2:	add    al,dh
   14000b0b4:	rex.X
   14000b0b5:	rex.R
   14000b0b6:	rex.X
   14000b0b7:	rex.X pop rdi
   14000b0b9:	push   rcx
   14000b0ba:	rex
   14000b0bb:	rex
   14000b0bc:	rex
   14000b0bd:	rex.XB push r9
   14000b0bf:	pop    rdi
   14000b0c0:	pop    rdi
   14000b0c1:	or     BYTE PTR [rbx-0x131c2737],0xf2
   14000b0c8:	repnz out 0xea,eax
   14000b0cb:	(bad)  
   14000b0cc:	fsub   st(4),st
   14000b0ce:	fmulp  st(5),st
   14000b0d0:	(bad)  
   14000b0d1:	(bad)  
   14000b0d2:	iret   
   14000b0d3:	rol    al,1
   14000b0d5:	sar    bl,0x0
	...
   14000b0e0:	add    BYTE PTR [rax],al
   14000b0e2:	add    ah,ah
   14000b0e4:	rex.X
   14000b0e5:	rex.X
   14000b0e6:	rex.R scas al,BYTE PTR es:[rdi]
   14000b0e8:	out    dx,eax
   14000b0e9:	fld    DWORD PTR [rcx+0x40404040]
   14000b0ef:	rex.XB
   14000b0f0:	rex.XB
   14000b0f1:	rex.XB (bad) 
   14000b0f3:	push   rcx
   14000b0f4:	pop    rdi
   14000b0f5:	pop    rcx
   14000b0f6:	or     BYTE PTR [rbx-0x2d39465d],0xdc
   14000b0fd:	(bad)  
   14000b0ff:	int    0xcd
   14000b101:	(bad)  
   14000b102:	iret   
   14000b103:	iret   
   14000b104:	mov    edi,0xf9c1
	...
   14000b111:	add    BYTE PTR [rax],al
   14000b113:	in     al,0xf0
   14000b115:	idiv   al
   14000b117:	imul   ebp,DWORD PTR [rbp+0x6d],0xffffff99
   14000b11b:	scas   al,BYTE PTR es:[rdi]
   14000b11c:	enter  0xefc8,0xd9
   14000b120:	cmp    DWORD PTR [rdi],0x3f3f3f3f
   14000b126:	cmp    al,0x3c
   14000b128:	ds rex.WRB pop r9
   14000b12b:	push   rax
   14000b12c:	jle    0x14000b0b1
   14000b12e:	stos   BYTE PTR es:[rdi],al
   14000b12f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b130:	mov    cl,0xbd
   14000b132:	mov    esp,0xf8bfbebd
	...
   14000b147:	cli    
   14000b148:	std    
   14000b149:	std    
   14000b14a:	std    
   14000b14b:	std    
   14000b14c:	scas   al,BYTE PTR es:[rdi]
   14000b14d:	jg     0x14000b1bc
   14000b14f:	(bad)  
   14000b150:	cdq    
   14000b151:	enter  0xc8c8,0x7f
   14000b155:	push   rbp
   14000b156:	rex.WB cmp al,0x3c
   14000b159:	ds ds ds ds ds rex.R
   14000b15f:	rex.WR push rdi
   14000b161:	(bad)  
   14000b162:	jne    0x14000b0f0
   14000b164:	fwait
   14000b165:	fwait
   14000b166:	test   BYTE PTR [rax],0x0
	...
   14000b179:	add    BYTE PTR [rax],al
   14000b17b:	add    dl,bh
   14000b17d:	cli    
   14000b17e:	cli    
   14000b17f:	std    
   14000b180:	std    
   14000b181:	std    
   14000b182:	enter  0x9999,0x99
   14000b186:	scas   al,BYTE PTR es:[rdi]
   14000b187:	sahf   
   14000b188:	scas   al,BYTE PTR es:[rdi]
   14000b189:	cwde   
   14000b18a:	jg     0x14000b1d7
   14000b18c:	cmp    eax,0xf04f3d3e
   14000b191:	lock lock lock lock lock lock add BYTE PTR [rax],al
	...
   14000b1b1:	add    dl,bh
   14000b1b3:	cli    
   14000b1b4:	cli    
   14000b1b5:	std    
   14000b1b6:	std    
   14000b1b7:	std    
   14000b1b8:	sahf   
   14000b1b9:	ja     0x14000b232
   14000b1bb:	ja     0x14000b15b
   14000b1bd:	sahf   
   14000b1be:	scas   eax,DWORD PTR es:[rdi]
   14000b1bf:	std    
	...
   14000b1e8:	cmc    
   14000b1e9:	cmc    
   14000b1ea:	cli    
   14000b1eb:	cli    
   14000b1ec:	cli    
   14000b1ed:	std    
   14000b1ee:	std    
   14000b1ef:	std    
	...
   14000b230:	(bad)  
   14000b231:	(bad)  
   14000b232:	(bad)  
   14000b233:	(bad)  
   14000b234:	(bad)  
   14000b235:	inc    DWORD PTR [rax]
   14000b237:	add    bh,bh
   14000b239:	(bad)  
   14000b23a:	(bad)  
   14000b23b:	(bad)  
   14000b23c:	(bad)  
   14000b23d:	inc    DWORD PTR [rax]
   14000b23f:	add    bh,bh
   14000b241:	jrcxz  0x14000b242
   14000b243:	(bad)  
   14000b244:	(bad)  
   14000b245:	inc    DWORD PTR [rax]
   14000b247:	add    bh,bh
   14000b249:	cmp    bh,0xff
   14000b24c:	(bad)  
   14000b24d:	inc    DWORD PTR [rax]
   14000b24f:	add    dh,bh
   14000b251:	add    BYTE PTR [rdi],bl
   14000b253:	(bad)  
   14000b254:	(bad)  
   14000b255:	inc    DWORD PTR [rax]
   14000b257:	add    ah,bh
   14000b259:	add    BYTE PTR [rbx],al
   14000b25b:	(bad)  
   14000b25c:	(bad)  
   14000b25d:	inc    DWORD PTR [rax]
   14000b25f:	add    al,bh
   14000b261:	add    BYTE PTR [rax],al
   14000b263:	jg     0x14000b264
   14000b265:	inc    DWORD PTR [rax]
   14000b267:	add    al,bh
   14000b269:	add    BYTE PTR [rax],al
   14000b26b:	ud0    edi,edi
   14000b26e:	add    BYTE PTR [rax],al
   14000b270:	clc    
   14000b271:	add    BYTE PTR [rax],al
   14000b273:	add    edi,edi
   14000b275:	inc    DWORD PTR [rax]
   14000b277:	add    al,bh
   14000b279:	add    BYTE PTR [rax],al
   14000b27b:	add    BYTE PTR [rdi],bh
   14000b27d:	inc    DWORD PTR [rax]
   14000b27f:	add    al,bh
   14000b281:	add    BYTE PTR [rax],al
   14000b283:	add    BYTE PTR [rdi],al
   14000b285:	inc    DWORD PTR [rax]
   14000b287:	add    al,bh
   14000b289:	add    BYTE PTR [rax],al
   14000b28b:	add    BYTE PTR [rcx],al
   14000b28d:	inc    DWORD PTR [rax]
   14000b28f:	add    al,bh
   14000b291:	add    BYTE PTR [rax],al
   14000b293:	add    BYTE PTR [rcx],al
   14000b295:	inc    DWORD PTR [rax]
   14000b297:	add    al,bh
   14000b299:	add    BYTE PTR [rax],al
   14000b29b:	add    BYTE PTR [rcx],al
   14000b29d:	inc    DWORD PTR [rax]
   14000b29f:	add    al,bh
   14000b2a1:	add    BYTE PTR [rax],al
   14000b2a3:	add    BYTE PTR [rcx],al
   14000b2a5:	inc    DWORD PTR [rax]
   14000b2a7:	add    al,bh
   14000b2a9:	add    BYTE PTR [rax],al
   14000b2ab:	add    BYTE PTR [rcx],al
   14000b2ad:	inc    DWORD PTR [rax]
   14000b2af:	add    al,dh
   14000b2b1:	add    BYTE PTR [rax],al
   14000b2b3:	add    BYTE PTR [rcx],al
   14000b2b5:	inc    DWORD PTR [rax]
   14000b2b7:	add    al,dh
   14000b2b9:	add    BYTE PTR [rax],al
   14000b2bb:	add    BYTE PTR [rcx],al
   14000b2bd:	inc    DWORD PTR [rax]
   14000b2bf:	add    al,dh
   14000b2c1:	add    BYTE PTR [rax],al
   14000b2c3:	add    BYTE PTR [rcx],al
   14000b2c5:	inc    DWORD PTR [rax]
   14000b2c7:	add    al,dh
   14000b2c9:	add    BYTE PTR [rax],al
   14000b2cb:	add    BYTE PTR [rcx],al
   14000b2cd:	inc    DWORD PTR [rax]
   14000b2cf:	add    al,dh
   14000b2d1:	add    BYTE PTR [rax],al
   14000b2d3:	add    BYTE PTR [rax],al
   14000b2d5:	inc    DWORD PTR [rax]
   14000b2d7:	add    al,dh
   14000b2d9:	add    BYTE PTR [rax],al
   14000b2db:	add    BYTE PTR [rax],al
   14000b2dd:	(bad)  
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	lock add BYTE PTR [rax],al
   14000b2e3:	add    BYTE PTR [rax],al
   14000b2e5:	sldt   WORD PTR [rax]
   14000b2e8:	lock add BYTE PTR [rax],al
   14000b2eb:	add    BYTE PTR [rax],al
   14000b2ed:	add    eax,DWORD PTR [rax]
   14000b2ef:	add    al,dh
   14000b2f1:	add    BYTE PTR [rax],al
   14000b2f3:	add    BYTE PTR [rax],al
   14000b2f5:	add    DWORD PTR [rax],eax
   14000b2f7:	add    al,dh
   14000b2f9:	add    BYTE PTR [rax],al
   14000b2fb:	add    BYTE PTR [rax],al
   14000b2fd:	add    BYTE PTR [rax],al
   14000b2ff:	add    al,dh
   14000b301:	add    BYTE PTR [rax],al
   14000b303:	add    BYTE PTR [rax],al
   14000b305:	add    BYTE PTR [rax],al
   14000b307:	add    al,ah
   14000b309:	add    BYTE PTR [rax],al
   14000b30b:	add    BYTE PTR [rax],al
   14000b30d:	add    BYTE PTR [rax],al
   14000b30f:	add    al,ah
   14000b311:	add    BYTE PTR [rax],al
   14000b313:	add    BYTE PTR [rax],al
   14000b315:	add    BYTE PTR [rax],al
   14000b317:	add    al,ah
   14000b319:	add    BYTE PTR [rax],al
   14000b31b:	add    BYTE PTR [rax],al
   14000b31d:	add    DWORD PTR [rax],eax
   14000b31f:	add    al,ah
   14000b321:	add    BYTE PTR [rax],al
   14000b323:	add    BYTE PTR [rax],al
   14000b325:	add    eax,DWORD PTR [rax]
   14000b327:	add    al,ah
   14000b329:	add    BYTE PTR [rax],al
   14000b32b:	add    BYTE PTR [rcx],al
   14000b32d:	inc    DWORD PTR [rax]
   14000b32f:	add    al,ah
   14000b331:	add    BYTE PTR [rax],al
   14000b333:	add    BYTE PTR [rcx],al
   14000b335:	inc    DWORD PTR [rax]
   14000b337:	add    al,ah
   14000b339:	add    BYTE PTR [rax],al
   14000b33b:	add    BYTE PTR [rcx],al
   14000b33d:	inc    DWORD PTR [rax]
   14000b33f:	add    al,ah
   14000b341:	add    BYTE PTR [rax],al
   14000b343:	add    BYTE PTR [rcx],al
   14000b345:	inc    DWORD PTR [rax]
   14000b347:	add    al,ah
   14000b349:	add    BYTE PTR [rax],al
   14000b34b:	add    BYTE PTR [rcx],al
   14000b34d:	inc    DWORD PTR [rax]
   14000b34f:	add    al,ah
   14000b351:	add    BYTE PTR [rax],al
   14000b353:	add    BYTE PTR [rcx],al
   14000b355:	inc    DWORD PTR [rax]
   14000b357:	add    al,ah
   14000b359:	add    BYTE PTR [rax],al
   14000b35b:	add    BYTE PTR [rcx],al
   14000b35d:	inc    DWORD PTR [rax]
   14000b35f:	add    al,ah
   14000b361:	add    BYTE PTR [rax],al
   14000b363:	add    BYTE PTR [rcx],al
   14000b365:	inc    DWORD PTR [rax]
   14000b367:	add    al,ah
   14000b369:	add    BYTE PTR [rax],al
   14000b36b:	add    BYTE PTR [rcx],al
   14000b36d:	inc    DWORD PTR [rax]
   14000b36f:	add    al,ah
   14000b371:	add    BYTE PTR [rax],al
   14000b373:	add    BYTE PTR [rcx],al
   14000b375:	inc    DWORD PTR [rax]
   14000b377:	add    al,ah
   14000b379:	add    BYTE PTR [rax],al
   14000b37b:	add    BYTE PTR [rcx],al
   14000b37d:	inc    DWORD PTR [rax]
   14000b37f:	add    al,ah
   14000b381:	add    BYTE PTR [rax],al
   14000b383:	add    BYTE PTR [rcx],al
   14000b385:	inc    DWORD PTR [rax]
   14000b387:	add    dh,bh
   14000b389:	add    BYTE PTR [rax],al
   14000b38b:	add    BYTE PTR [rcx],al
   14000b38d:	inc    DWORD PTR [rax]
   14000b38f:	add    bh,bh
   14000b391:	lock add BYTE PTR [rax],al
   14000b394:	add    edi,edi
   14000b396:	add    BYTE PTR [rax],al
   14000b398:	(bad)  
   14000b399:	inc    eax
   14000b39b:	add    bh,bh
   14000b39d:	inc    DWORD PTR [rax]
   14000b39f:	add    bh,bh
   14000b3a1:	(bad)  
   14000b3a2:	inc    DWORD PTR [rax]
   14000b3a4:	(bad)  
   14000b3a5:	inc    DWORD PTR [rax]
   14000b3a7:	add    bh,bh
   14000b3a9:	(bad)  
   14000b3aa:	(bad)  
   14000b3ab:	(bad)  
   14000b3ac:	(bad)  
   14000b3ad:	inc    DWORD PTR [rax]
   14000b3af:	add    BYTE PTR [rax],ch
   14000b3b1:	add    BYTE PTR [rax],al
   14000b3b3:	add    BYTE PTR [rax],ah
   14000b3b5:	add    BYTE PTR [rax],al
   14000b3b7:	add    BYTE PTR [rax+0x0],al
   14000b3ba:	add    BYTE PTR [rax],al
   14000b3bc:	add    DWORD PTR [rax],eax
   14000b3be:	or     BYTE PTR [rax],al
	...
   14000b3d8:	cdq    
   14000b3d9:	xor    eax,DWORD PTR [rax]
   14000b3db:	add    BYTE PTR [rax+0x6600faa2],ch
   14000b3e1:	rex.W clc 
   14000b3e3:	add    BYTE PTR [rbx+0x5700b696],ah
   14000b3e9:	sbb    ebp,DWORD PTR [rcx-0x5d17b00]
   14000b3ef:	add    BYTE PTR [rdx-0x43ff15a2],ah
   14000b3f5:	cdq    
   14000b3f6:	fld    QWORD PTR [rax]
   14000b3f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b3f9:	and    eax,0x15b400f6
   14000b3fe:	stc    
   14000b3ff:	add    BYTE PTR [rsi-0x3aff4cdd],cl
   14000b405:	(bad)  
   14000b406:	std    
   14000b407:	add    cl,al
   14000b409:	psubd  mm0,QWORD PTR [rax]
   14000b40c:	leave  
   14000b40d:	add    eax,0x1cd00fd
   14000b412:	inc    DWORD PTR [rax]
   14000b414:	retf   
   14000b415:	add    esi,edi
   14000b417:	add    dl,cl
   14000b419:	add    edx,edi
   14000b41b:	add    ch,cl
   14000b41d:	add    edi,ebx
   14000b41f:	add    bl,cl
   14000b421:	add    esi,edi
   14000b423:	add    ah,al
   14000b425:	add    al,0xf2
   14000b427:	add    BYTE PTR [rsp+rcx*2+0x56],dl
   14000b42b:	add    BYTE PTR [rbp-0x4eff20f7],bh
   14000b431:	adc    eax,0x1fc100ca
   14000b436:	fld    DWORD PTR [rax]
   14000b438:	cwde   
   14000b439:	push   rcx
   14000b43a:	(bad)  
   14000b43b:	add    cl,al
   14000b43d:	rol    cl,0x0
   14000b440:	push   rsi
   14000b442:	inc    BYTE PTR [rax]
   14000b444:	mov    esi,0x7000a825
   14000b449:	push   0x52c8006d
   14000b44e:	xchg   edx,eax
   14000b44f:	add    BYTE PTR [rcx-0x4bff8bd5],bh
   14000b455:	mov    dl,0xb3
   14000b457:	add    BYTE PTR [rcx-0x13ff92ab],ah
   14000b45d:	(bad)  
   14000b45e:	mov    dl,0x0
   14000b460:	pushf  
   14000b461:	xchg   edi,eax
   14000b462:	cwde   
   14000b463:	add    BYTE PTR [rdx-0xff959b],bl
   14000b469:	mov    ebx,0xc8ff00bb
   14000b46e:	enter  0x8600,0x79
   14000b472:	jns    0x14000b474
   14000b474:	(bad)  
   14000b475:	call   0xe7a9b562
   14000b47a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b47b:	add    cl,ah
   14000b47d:	loopne 0x14000b45f
   14000b47f:	add    BYTE PTR [rdx-0x4cffc1c0],bh
   14000b485:	mov    cs,WORD PTR [rbp-0x27260100]
   14000b48b:	add    BYTE PTR [rax-0x1aff8d8b],ch
   14000b491:	int3   
   14000b492:	retf   0xfe00
   14000b495:	repz repnz add dl,ch
   14000b499:	xlat   BYTE PTR ds:[rbx]
   14000b49a:	(bad)  
   14000b49b:	add    bl,dh
   14000b49d:	ret    
   14000b49e:	mov    esp,0x81849a00
   14000b4a3:	add    bl,cl
   14000b4a5:	scas   eax,DWORD PTR es:[rdi]
   14000b4a6:	test   eax,0x515b8400
   14000b4ab:	add    BYTE PTR [rdi+0x75002343],dh
   14000b4b1:	rex (bad) 
   14000b4b3:	add    BYTE PTR [rbp-0x3affe2ba],dh
   14000b4b9:	pop    rbx
   14000b4ba:	xor    al,0x0
   14000b4bc:	ins    DWORD PTR es:[rdi],dx
   14000b4bd:	rex.WB cmp rax,0x3d5aa100
   14000b4c3:	add    BYTE PTR [rdx+0x31003d53],cl
   14000b4c9:	(bad)  
   14000b4ca:	and    eax,DWORD PTR [rax]
   14000b4cc:	(bad)  
   14000b4cd:	fcmove st,st(3)
   14000b4cf:	add    BYTE PTR [rsi+0x2d],bl
   14000b4d2:	(bad)  
   14000b4d3:	add    BYTE PTR [rax+0x27],dl
   14000b4d6:	adc    al,0x0
   14000b4d8:	pop    rbp
   14000b4d9:	cmp    ch,BYTE PTR [rbx]
   14000b4db:	add    bl,al
   14000b4dd:	and    BYTE PTR [rcx+0x0],0x9b
   14000b4e1:	xor    eax,0x33990001
   14000b4e6:	add    DWORD PTR [rax],eax
   14000b4e8:	xchg   esp,eax
   14000b4e9:	xor    al,BYTE PTR [rcx]
   14000b4eb:	add    BYTE PTR [rsi-0x7afffed1],cl
   14000b4f1:	sub    eax,0x29790001
   14000b4f6:	add    DWORD PTR [rax],eax
   14000b4f8:	and    eax,DWORD PTR [ecx]
   14000b4fb:	add    BYTE PTR [rax+0x19],cl
   14000b4fe:	add    al,BYTE PTR [rax]
   14000b500:	nop
   14000b501:	cmp    BYTE PTR [rip+0xd327a00],cl        # 0x14d332f07
   14000b507:	add    BYTE PTR [rbx-0x36ffecc3],dl
   14000b50d:	pop    rax
   14000b50e:	and    BYTE PTR [rax],al
   14000b510:	rcr    DWORD PTR [rcx+0x27],0x0
   14000b514:	ins    DWORD PTR es:[rdi],dx
   14000b515:	xor    dl,BYTE PTR [rsi]
   14000b517:	add    bl,al
   14000b519:	pop    rbx
   14000b51a:	sub    BYTE PTR [rax],al
   14000b51c:	mov    ecx,0xae002656
   14000b521:	push   rcx
   14000b522:	and    al,0x0
   14000b524:	movabs eax,ds:0x9000295bc500214b
   14000b52d:	rex.XB (bad) 
   14000b52f:	add    BYTE PTR [rax+0x38],bh
   14000b532:	sbb    DWORD PTR [rax],eax
   14000b534:	cmp    DWORD PTR [rip+0x4e96001c],0x2b        # 0x18e96b557
   14000b53b:	add    ch,cl
   14000b53d:	fwait
   14000b53e:	(bad)  
   14000b53f:	add    BYTE PTR [rsi+rsi*1],bh
   14000b542:	xor    eax,DWORD PTR [rax]
   14000b544:	in     al,dx
   14000b545:	in     al,0xe0
   14000b547:	add    BYTE PTR [rdi-0x65fffec7],bl
   14000b54d:	cmp    eax,0x3c96000a
   14000b552:	or     al,0x0
   14000b554:	lods   eax,DWORD PTR ds:[rsi]
   14000b555:	imul   eax,DWORD PTR [rax+rax*1-0x48],0xa5005277
   14000b55d:	(bad)  
   14000b55e:	add    DWORD PTR [rax],eax
   14000b560:	fwait
   14000b561:	cmp    eax,0x49aa0004
   14000b566:	adc    BYTE PTR [rax],al
   14000b568:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b569:	push   rdi
   14000b56a:	and    eax,0x3162b500
   14000b56f:	add    BYTE PTR [rsi+rax*2+0x3c940001],ch
   14000b576:	add    al,BYTE PTR [rax]
   14000b578:	mov    esi,0xb400386d
   14000b57d:	mov    WORD PTR [rdx+0x0],?
   14000b580:	(bad)  
   14000b581:	lods   al,BYTE PTR ds:[rsi]
   14000b582:	nop
   14000b583:	add    cl,dl
   14000b585:	(bad)
   14000b588:	fnop   
   14000b58a:	retf   0xb400
   14000b58d:	rex.WRXB add QWORD PTR [r8],r8
   14000b590:	mov    edx,0xbc00155a
   14000b595:	and    eax,DWORD PTR fs:[rax]
   14000b598:	retf   0x3c7a
   14000b59b:	add    dl,dl
   14000b59d:	xchg   DWORD PTR [rcx+0x0],edx
   14000b5a0:	rcl    DWORD PTR [rsi+0x55bb0069],cl
   14000b5a6:	add    DWORD PTR [rax],eax
   14000b5a8:	rcr    DWORD PTR [rdi+0xe],0x0
   14000b5ac:	ret    
   14000b5ad:	push   0x7597001d
   14000b5b2:	pop    rax
   14000b5b3:	add    cl,bl
   14000b5b5:	mov    esp,0x5bc100a4
   14000b5ba:	add    DWORD PTR [rax],eax
   14000b5bc:	int3   
   14000b5bd:	push   0xf
   14000b5bf:	add    dl,cl
   14000b5c1:	jb     0x14000b5e3
   14000b5c3:	add    al,ch
   14000b5c5:	fxch   st(3)
   14000b5c7:	add    ch,cl
   14000b5c9:	add    DWORD PTR [eax],eax
   14000b5cc:	(bad)  
   14000b5cd:	(bad)  
   14000b5ce:	add    DWORD PTR [rax],eax
   14000b5d0:	shr    BYTE PTR [rdx+0x2],1
   14000b5d3:	add    dl,cl
   14000b5d5:	or     BYTE PTR [eax],al
   14000b5d8:	shl    DWORD PTR [rcx+0xf],1
   14000b5db:	add    ah,dl
   14000b5dd:	jne    0x14000b5f4
   14000b5df:	add    dh,dl
   14000b5e1:	jl     0x14000b604
   14000b5e3:	add    dl,bl
   14000b5e5:	test   BYTE PTR [rip+0x3c8ede00],ch        # 0x17c8f93eb
   14000b5eb:	add    al,dh
   14000b5ed:	mov    al,0x6e
   14000b5ef:	add    ah,bl
   14000b5f1:	lods   al,BYTE PTR ds:[rsi]
   14000b5f2:	jnp    0x14000b5f4
   14000b5f4:	in     al,dx
   14000b5f5:	(bad)  
   14000b5f6:	mov    esp,0x172d800
   14000b5fb:	add    ah,dl
   14000b5fd:	outs   dx,BYTE PTR ds:[rsi]
   14000b5fe:	add    DWORD PTR [rax],eax
   14000b600:	in     al,0x99
   14000b602:	rex.WXB add r9b,bpl
   14000b605:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b606:	pop    rbx
   14000b607:	add    dh,dh
   14000b609:	mov    edi,0xccfe0084
   14000b60e:	xchg   edi,eax
   14000b60f:	add    bl,ah
   14000b611:	leave  
   14000b612:	scas   al,BYTE PTR es:[rdi]
   14000b613:	add    bl,ah
   14000b615:	jle    0x14000b618
   14000b617:	add    dh,bl
   14000b619:	js     0x14000b61c
   14000b61b:	add    ah,ah
   14000b61d:	adc    DWORD PTR [rax],0x0
   14000b620:	out    0x8e,eax
   14000b622:	and    BYTE PTR [rax],al
   14000b624:	(bad)  
   14000b625:	(bad)  
   14000b626:	movabs ds:0xd5ecff00bedffc00,al
   14000b62f:	add    dl,ch
   14000b631:	test   BYTE PTR [rcx],al
   14000b633:	add    cl,ch
   14000b635:	(bad)  
   14000b636:	xchg   esp,eax
   14000b637:	add    dh,bh
   14000b639:	out    0xc9,eax
   14000b63b:	add    bh,bh
   14000b63d:	sti    
   14000b63e:	test   BYTE PTR [rax],0xfd
   14000b641:	xchg   edi,eax
   14000b642:	add    DWORD PTR [rax],eax
   14000b644:	repz lea eax,[rcx]
   14000b647:	add    ah,bh
   14000b649:	popf   
   14000b64a:	adc    BYTE PTR [rax],al
   14000b64c:	cmc    
   14000b64d:	xlat   BYTE PTR ds:[rbx]
   14000b64e:	lods   eax,DWORD PTR ds:[rsi]
   14000b64f:	add    dh,bh
   14000b651:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b652:	sbb    al,0x0
   14000b654:	mov    ebp,0xf9002383
   14000b659:	test   eax,0xb2f9002f
   14000b65e:	add    r14b,r15b
   14000b661:	fisubr WORD PTR [rbp+0x5ec5fe00]
   14000b667:	add    bh,bh
   14000b669:	out    0xba,al
   14000b66b:	add    dh,bh
   14000b66d:	std    
   14000b66e:	sti    
   14000b66f:	add    bh,bh
   14000b671:	xlat   BYTE PTR ds:[rbx]
   14000b672:	add    BYTE PTR [rax],0xff
   14000b675:	mul    esi
   14000b677:	add    bh,bh
   14000b679:	cli    
   14000b67a:	out    dx,eax
   14000b67b:	add    bh,bh
   14000b67d:	loop   0x14000b619
   14000b67f:	add    bh,bh
   14000b681:	lock mov ebp,0xdbf8ff00
   14000b687:	add    bh,bh
   14000b689:	test   ebx,0xf1f2f200
   14000b68f:	add    bh,bl
   14000b691:	loope  0x14000b64e
   14000b693:	add    cl,dh
   14000b695:	stc    
   14000b696:	fadd   QWORD PTR [rax]
   14000b698:	mov    al,0xd4
   14000b69a:	popf   
   14000b69b:	add    bh,al
   14000b69d:	ffreep st(3)
   14000b69f:	add    BYTE PTR [rdi+rcx*4],al
   14000b6a2:	(bad)  
   14000b6a3:	add    BYTE PTR [rdi+0x2e00c7f1],bh
   14000b6a9:	mov    ebx,0xc6730049
   14000b6ae:	test   BYTE PTR [rax],al
   14000b6b0:	add    BYTE PTR [rax],al
   14000b6b2:	add    BYTE PTR [rax],al
   14000b6b4:	int    0xeb
   14000b6b6:	xlat   BYTE PTR ds:[rbx]
   14000b6b7:	add    dh,bl
   14000b6b9:	hlt    
   14000b6ba:	call   0x13f009fbf
   14000b6bf:	add    BYTE PTR [rbx],cl
   14000b6c1:	stc    
   14000b6c2:	cld    
   14000b6c3:	add    bh,dh
   14000b6c5:	(bad)  
   14000b6c6:	inc    DWORD PTR [rax]
   14000b6c8:	test   al,0xfd
   14000b6ca:	inc    DWORD PTR [rax]
   14000b6cc:	ret    0xfffc
   14000b6cf:	add    dh,dl
   14000b6d1:	std    
   14000b6d2:	inc    DWORD PTR [rax]
   14000b6d4:	xor    eax,0x9200726e
   14000b6d9:	idiv   bh
   14000b6db:	add    BYTE PTR [rbx+0x4f00ebe6],dh
   14000b6e1:	leave  
   14000b6e2:	in     al,0x0
   14000b6e4:	(bad)  
   14000b6e5:	int    0xe7
   14000b6e7:	add    BYTE PTR [rbp+0x6100ffe9],al
   14000b6ed:	shl    ecx,1
   14000b6ef:	add    BYTE PTR [rdi],ah
   14000b6f1:	mov    al,0xdb
   14000b6f3:	add    BYTE PTR [rsi],bl
   14000b6f5:	and    DWORD PTR [rdx-0x2041b200],0x0
   14000b6fc:	jns    0x14000b6db
   14000b6fe:	inc    BYTE PTR [rax]
   14000b700:	add    bl,BYTE PTR [rax-0x5ae7ff35]
   14000b706:	fadd   DWORD PTR [rax]
   14000b708:	(bad)  
   14000b709:	(bad)  
   14000b70a:	inc    DWORD PTR [rax]
   14000b70c:	xor    BYTE PTR [rsi-0x45bbff18],ch
   14000b712:	lock add BYTE PTR [rbp-0x2e],ch
   14000b716:	inc    DWORD PTR [rax]
   14000b718:	cmps   BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   14000b71a:	out    0x0,eax
   14000b71c:	gs retf 0xff
   14000b720:	cwde   
   14000b721:	(bad)  
   14000b722:	clc    
   14000b723:	add    BYTE PTR [rdi],bh
   14000b725:	mov    al,0xf3
   14000b727:	add    BYTE PTR [rcx+rax*8-0x1],bl
   14000b72b:	add    BYTE PTR [rcx+0x5400fde1],dh
   14000b731:	mov    ecx,0xc48000ff
   14000b736:	hlt    
   14000b737:	add    BYTE PTR [rbx-0x4f],cl
   14000b73a:	inc    DWORD PTR [rax]
   14000b73c:	jno    0x14000b6d3
   14000b73e:	scas   eax,DWORD PTR es:[rdi]
   14000b73f:	add    BYTE PTR [rdx-0x58],al
   14000b742:	inc    DWORD PTR [rax]
   14000b744:	push   rbx
   14000b745:	scas   eax,DWORD PTR es:[rdi]
   14000b746:	cli    
   14000b747:	add    BYTE PTR [rsi-0x49],ch
   14000b74a:	test   BYTE PTR [rax],0x36
   14000b74d:	fwait
   14000b74e:	inc    DWORD PTR [rax]
   14000b750:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000b752:	cli    
   14000b753:	add    dl,dh
   14000b755:	clc    
   14000b756:	inc    BYTE PTR [rax]
   14000b758:	rex.X cdq 
   14000b75a:	clc    
   14000b75b:	add    BYTE PTR [rbp-0x5e],bl
   14000b75e:	in     eax,dx
   14000b75f:	add    BYTE PTR [rcx],bh
   14000b761:	(bad)  
   14000b762:	test   DWORD PTR [rax],0xe7853d
   14000b768:	xor    al,BYTE PTR [rsi+rsi*8-0xc8bda00]
   14000b76f:	add    BYTE PTR [rip+0x5100f57c],ch        # 0x19101acf1
   14000b775:	mov    eax,gs
   14000b777:	add    BYTE PTR [rcx],ah
   14000b779:	ins    DWORD PTR es:[rdi],dx
   14000b77a:	repz add BYTE PTR [rbx],ch
   14000b77d:	jno    0x14000b766
   14000b77f:	add    BYTE PTR [rcx],bh
   14000b781:	jae    0x14000b75e
   14000b783:	add    BYTE PTR [rdi],bh
   14000b785:	jns    0x14000b76b
   14000b787:	add    dh,dl
   14000b789:	jrcxz  0x14000b787
   14000b78b:	add    BYTE PTR [rbx],ch
   14000b78d:	movsxd ebx,ebp
   14000b78f:	add    BYTE PTR [rdx-0x6d],ch
   14000b792:	out    0x0,eax
   14000b794:	and    ebx,DWORD PTR [rax-0x28]
   14000b797:	add    BYTE PTR [rbx],dh
   14000b799:	addr32 hlt 
   14000b79b:	add    BYTE PTR [rax*2+0x6e5e00c3],ah
   14000b7a2:	scas   al,BYTE PTR es:[rdi]
   14000b7a3:	add    BYTE PTR [rdx],al
   14000b7a5:	sub    esp,ebp
   14000b7a7:	add    BYTE PTR [rdx],ch
   14000b7a9:	sub    eax,0xf040050
   14000b7ae:	mov    dh,0x0
   14000b7b0:	and    ebp,DWORD PTR [rcx]
   14000b7b2:	pop    QWORD PTR [rax]
   14000b7b4:	ds rex.R pushf 
   14000b7b7:	add    BYTE PTR [rdi+0x5e],dl
   14000b7ba:	test   DWORD PTR [rax],0xfec0c0
   14000b7c0:	sti    
   14000b7c1:	sti    
   14000b7c2:	sti    
   14000b7c3:	add    bh,dh
   14000b7c5:	div    edi
   14000b7c7:	add    dl,ch
   14000b7c9:	(bad)  
   14000b7ca:	(bad)  
   14000b7cb:	add    al,bl
   14000b7cd:	fcomp  st(0)
   14000b7cf:	add    dh,cl
   14000b7d1:	(bad)  
   14000b7d2:	(bad)  
   14000b7d3:	add    BYTE PTR [rax],al
   14000b7d5:	add    BYTE PTR [rax],al
   14000b7d7:	add    BYTE PTR [rsi-0x4949494a],dh
   14000b7dd:	mov    dh,0xb6
   14000b7df:	mov    dh,0xb6
   14000b7e1:	mov    dh,0xb6
   14000b7e3:	mov    dh,0xb6
   14000b7e5:	mov    dh,0xb6
   14000b7e7:	mov    dh,0xb6
   14000b7e9:	mov    dh,0xb6
   14000b7eb:	mov    dh,0xb6
   14000b7ed:	mov    dh,0xb6
   14000b7ef:	mov    dh,0xb6
   14000b7f1:	mov    dh,0xb6
   14000b7f3:	mov    dh,0xb6
   14000b7f5:	mov    dh,0xb6
   14000b7f7:	mov    dh,0xb6
   14000b7f9:	mov    dh,0xb6
   14000b7fb:	mov    dh,0xf1
   14000b7fd:	icebp  
   14000b7fe:	icebp  
   14000b7ff:	icebp  
   14000b800:	icebp  
   14000b801:	mov    dh,0xb6
   14000b803:	mov    dh,0xb6
   14000b805:	mov    dh,0xb6
   14000b807:	mov    dh,0xb6
   14000b809:	mov    dh,0xb6
   14000b80b:	mov    dh,0xb6
   14000b80d:	mov    dh,0xb6
   14000b80f:	mov    dh,0xb6
   14000b811:	mov    dh,0xb6
   14000b813:	mov    dh,0xb6
   14000b815:	mov    dh,0xb6
   14000b817:	mov    dh,0xb6
   14000b819:	mov    dh,0xf1
   14000b81b:	icebp  
   14000b81c:	out    dx,eax
   14000b81d:	out    dx,eax
   14000b81e:	call   0x131f29903
   14000b823:	icebp  
   14000b824:	mov    dh,0xb6
   14000b826:	mov    dh,0xb6
   14000b828:	mov    dh,0xb6
   14000b82a:	mov    dh,0xb6
   14000b82c:	mov    dh,0xb6
   14000b82e:	mov    dh,0xb6
   14000b830:	mov    dh,0xb6
   14000b832:	mov    dh,0xb6
   14000b834:	mov    dh,0xb6
   14000b836:	mov    dh,0xb6
   14000b838:	mov    dh,0xf1
   14000b83a:	loopne 0x14000b81c
   14000b83c:	loop   0x14000b826
   14000b83e:	in     eax,0xd6
   14000b840:	(bad)  
   14000b841:	fsubrp st(0),st
   14000b843:	jrcxz  0x14000b836
   14000b845:	icebp  
   14000b846:	icebp  
   14000b847:	mov    dh,0xb6
   14000b849:	mov    dh,0xb6
   14000b84b:	mov    dh,0xb6
   14000b84d:	mov    dh,0xb6
   14000b84f:	mov    dh,0xb6
   14000b851:	mov    dh,0xb6
   14000b853:	mov    dh,0xb6
   14000b855:	mov    dh,0xb6
   14000b857:	mov    dh,0xb6
   14000b859:	icebp  
   14000b85a:	iret   
   14000b85b:	iret   
   14000b85c:	loop   0x14000b846
   14000b85e:	call   0x11bdf8f3e
   14000b863:	fcmovnu st,st(3)
   14000b865:	loopne 0x14000b84a
   14000b867:	icebp  
   14000b868:	icebp  
   14000b869:	icebp  
   14000b86a:	mov    dh,0xb6
   14000b86c:	mov    dh,0xb6
   14000b86e:	mov    dh,0xb6
   14000b870:	mov    dh,0xb6
   14000b872:	mov    dh,0xb6
   14000b874:	mov    dh,0xb6
   14000b876:	mov    dh,0xb6
   14000b878:	mov    dh,0xf1
   14000b87a:	rcl    ecx,1
   14000b87c:	loopne 0x14000b860
   14000b87e:	loopne 0x14000b856
   14000b880:	(bad)  
   14000b881:	(bad)  
   14000b883:	(bad)  
   14000b885:	(bad)  
   14000b886:	(bad)  
   14000b887:	(bad)  
   14000b888:	fsubrp st(3),st
   14000b88a:	icebp  
   14000b88b:	icebp  
   14000b88c:	icebp  
   14000b88d:	mov    dh,0xb6
   14000b88f:	mov    dh,0xb6
   14000b891:	mov    dh,0xb6
   14000b893:	mov    dh,0xb6
   14000b895:	mov    dh,0xb6
   14000b897:	mov    dh,0xb6
   14000b899:	icebp  
   14000b89a:	leave  
   14000b89b:	leave  
   14000b89c:	leave  
   14000b89d:	leave  
   14000b89e:	iret   
   14000b89f:	(bad)  
   14000b8a0:	fcmovnu st,st(6)
   14000b8a2:	(bad)  
   14000b8a4:	fcmovnu st,st(3)
   14000b8a6:	fcmovnbe st,st(6)
   14000b8a8:	(bad)  
   14000b8a9:	(bad)  
   14000b8aa:	(bad)  
   14000b8ab:	fsubp  st(3),st
   14000b8ad:	icebp  
   14000b8ae:	icebp  
   14000b8af:	icebp  
   14000b8b0:	mov    dh,0xb6
   14000b8b2:	mov    dh,0xb6
   14000b8b4:	mov    dh,0xb6
   14000b8b6:	mov    dh,0xb6
   14000b8b8:	mov    dh,0xf1
   14000b8ba:	rol    al,0xc9
   14000b8bd:	loopne 0x14000b8a1
   14000b8bf:	fcomp  st(6)
   14000b8c1:	loopne 0x14000b8a1
   14000b8c3:	(bad)  
   14000b8c5:	fcmovnu st,st(3)
   14000b8c7:	fcmovnbe st,st(6)
   14000b8c9:	(bad)  
   14000b8ca:	(bad)  
   14000b8cb:	(bad)  
   14000b8cc:	rcl    esp,1
   14000b8ce:	fdivrp st(1),st
   14000b8d0:	mov    dh,0xb6
   14000b8d2:	mov    dh,0xb6
   14000b8d4:	mov    dh,0xb6
   14000b8d6:	mov    dh,0xb6
   14000b8d8:	mov    dh,0xf1
   14000b8da:	leave  
   14000b8db:	leave  
   14000b8dc:	loop   0x14000b8c6
   14000b8de:	in     eax,0xd8
   14000b8e0:	loopne 0x14000b8c2
   14000b8e2:	loopne 0x14000b8be
   14000b8e4:	fcmovu st,st(0)
   14000b8e6:	fcomp  st(3)
   14000b8e8:	(bad)  
   14000b8e9:	(bad)  
   14000b8ea:	(bad)  
   14000b8eb:	(bad)  
   14000b8ec:	(bad)  
   14000b8ed:	(bad)  
   14000b8ee:	iret   
   14000b8ef:	icebp  
   14000b8f0:	mov    dh,0xb6
   14000b8f2:	mov    dh,0xb6
   14000b8f4:	mov    dh,0xb6
   14000b8f6:	mov    dh,0xb6
   14000b8f8:	mov    dh,0xf1
   14000b8fa:	rcl    ecx,1
   14000b8fc:	loop   0x14000b8e6
   14000b8fe:	out    0xd8,al
   14000b900:	out    0x1c,eax
   14000b902:	es es es repnz out 0xd8,eax
   14000b908:	(bad)  
   14000b909:	(bad)  
   14000b90a:	(bad)  
   14000b90b:	(bad)  
   14000b90c:	(bad)  
   14000b90d:	(bad)  
   14000b90e:	shl    ecx,1
   14000b910:	mov    dh,0xb6
   14000b912:	mov    dh,0xb6
   14000b914:	mov    dh,0xb6
   14000b916:	mov    dh,0xb6
   14000b918:	mov    dh,0xf1
   14000b91a:	rcl    ecx,1
   14000b91c:	loop   0x14000b906
   14000b91e:	out    0xda,al
   14000b920:	(bad)  
   14000b921:	pop    rdi
   14000b922:	mov    eax,DWORD PTR [rdx+rdi*2-0x26e39c87]
   14000b929:	fcmovnbe st,st(6)
   14000b92b:	(bad)  
   14000b92c:	(bad)  
   14000b92d:	(bad)  
   14000b92e:	shl    ecx,1
   14000b930:	mov    dh,0xb6
   14000b932:	mov    dh,0xb6
   14000b934:	mov    dh,0xb6
   14000b936:	mov    dh,0xb6
   14000b938:	mov    dh,0xf1
   14000b93a:	rcl    ecx,1
   14000b93c:	loop   0x14000b926
   14000b93e:	out    0xda,al
   14000b940:	loop   0x14000b934
   14000b942:	(bad)  
   14000b943:	mov    WORD PTR [rdx+0x637c8385],fs
   14000b949:	xor    al,0xd9
   14000b94b:	(bad)  
   14000b94d:	(bad)  
   14000b94e:	shl    ecx,1
   14000b950:	mov    dh,0xb6
   14000b952:	mov    dh,0xb6
   14000b954:	mov    dh,0xb6
   14000b956:	mov    dh,0xb6
   14000b958:	mov    dh,0xf1
   14000b95a:	rcl    ecx,1
   14000b95c:	loop   0x14000b946
   14000b95e:	out    0xdd,al
   14000b960:	loop   0x14000b944
   14000b962:	repnz (bad) 
   14000b964:	xchg   ebx,eax
   14000b965:	movabs ds:0x2626347380848b8c,al
   14000b96e:	fyl2x  
   14000b970:	mov    dh,0xb6
   14000b972:	mov    dh,0xb6
   14000b974:	mov    dh,0xb6
   14000b976:	mov    dh,0xb6
   14000b978:	mov    dh,0xf1
   14000b97a:	rcl    ecx,1
   14000b97c:	loop   0x14000b966
   14000b97e:	out    0xdd,al
   14000b980:	loop   0x14000b964
   14000b982:	loop   0x14000b96e
   14000b984:	es jb  0x14000b913
   14000b987:	xchg   ebx,eax
   14000b988:	lea    eax,[rbp+0x7c798184]
   14000b98e:	jae    0x14000b9cb
   14000b990:	mov    dh,0xb6
   14000b992:	mov    dh,0xb6
   14000b994:	mov    dh,0xb6
   14000b996:	mov    dh,0xb6
   14000b998:	mov    dh,0xf1
   14000b99a:	rcl    ecx,1
   14000b99c:	loop   0x14000b986
   14000b99e:	out    0xdd,al
   14000b9a0:	in     al,0xe4
   14000b9a2:	loop   0x14000b986
   14000b9a4:	loop   0x14000b998
   14000b9a6:	imul   ecx,DWORD PTR es:[rbx+rdx*4-0x7b74736d],0x78788083
   14000b9b2:	mov    dh,0xb6
   14000b9b4:	mov    dh,0xb6
   14000b9b6:	mov    dh,0xb6
   14000b9b8:	mov    dh,0xf1
   14000b9ba:	rcl    ecx,1
   14000b9bc:	loop   0x14000b9a6
   14000b9be:	out    0xdd,al
   14000b9c0:	in     al,0xe4
   14000b9c2:	in     al,0xe2
   14000b9c4:	loop   0x14000b9a3
   14000b9c6:	loop   0x14000b9b3
   14000b9c8:	imul   eax,DWORD PTR es:[rsi-0x7473726d],0x78818384
   14000b9d3:	js     0x14000b98b
   14000b9d5:	mov    dh,0xb6
   14000b9d7:	mov    dh,0xb6
   14000b9d9:	icebp  
   14000b9da:	rcl    ecx,1
   14000b9dc:	loop   0x14000b9c6
   14000b9de:	out    0xdd,al
   14000b9e0:	out    0xe6,al
   14000b9e2:	in     al,0xe4
   14000b9e4:	loop   0x14000b9c8
   14000b9e6:	loop   0x14000b9c5
   14000b9e8:	fucom  st(3)
   14000b9ea:	sbb    al,0x86
   14000b9ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b9ed:	movabs ds:0x787883848b858c8d,al
   14000b9f6:	mov    dh,0xb6
   14000b9f8:	mov    dh,0xf1
   14000b9fa:	rcl    ecx,1
   14000b9fc:	loop   0x14000b9e6
   14000b9fe:	in     al,0xe2
   14000ba00:	out    0xe6,al
   14000ba02:	out    0xe6,al
   14000ba04:	in     al,0xe2
   14000ba06:	loop   0x14000b9ea
   14000ba08:	loopne 0x14000b9e7
   14000ba0a:	loopne 0x14000ba28
   14000ba0c:	jno    0x14000b9a5
   14000ba0e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ba0f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ba10:	xchg   ebx,eax
   14000ba11:	mov    WORD PTR [rbp+0x788b8c8c],es
   14000ba17:	mov    dh,0xb6
   14000ba19:	icebp  
   14000ba1a:	rcl    esp,1
   14000ba1c:	in     al,0xe8
   14000ba1e:	out    0xe2,al
   14000ba20:	in     eax,0xe5
   14000ba22:	loop   0x14000ba06
   14000ba24:	in     al,0xe4
   14000ba26:	in     al,0xe2
   14000ba28:	loop   0x14000ba0c
   14000ba2a:	(bad)  
   14000ba2c:	jge    0x14000baa8
   14000ba2e:	jno    0x14000b9b6
   14000ba30:	xchg   ebx,eax
   14000ba31:	xchg   ebx,eax
   14000ba32:	xchg   ebx,eax
   14000ba33:	movabs ds:0xd1cff1b6b67893a2,al
   14000ba3c:	fsubrp st(0),st
   14000ba3e:	fucom  st(4)
   14000ba40:	call   0x117ca992d
   14000ba45:	fcmovnu st,st(6)
   14000ba47:	loop   0x14000ba2b
   14000ba49:	loop   0x14000ba2d
   14000ba4b:	jrcxz  0x14000ba73
   14000ba4d:	pop    rdi
   14000ba4e:	jp     0x14000bac9
   14000ba50:	add    DWORD PTR [rbx+rdx*4+0x7893abab],0xc9f1b6b6
   14000ba5b:	(bad)  
   14000ba5c:	leave  
   14000ba5d:	leave  
   14000ba5e:	fsub   st,st(6)
   14000ba60:	call   0xd9d69b4d
   14000ba65:	mov    eax,0xd4d7d2d5
   14000ba6a:	(bad)  
   14000ba6c:	loopne 0x14000ba51
   14000ba6e:	es pop rdi
   14000ba70:	cmp    esp,DWORD PTR [rcx+rdi*2+0x79]
   14000ba74:	jns    0x14000baef
   14000ba76:	mov    dh,0xb6
   14000ba78:	mov    dh,0xf1
   14000ba7a:	(bad)  
   14000ba7b:	(bad)  
   14000ba7c:	(bad)  
   14000ba7d:	loop   0x14000ba61
   14000ba7f:	in     al,0xe8
   14000ba81:	call   0xe79a7864
   14000ba86:	stos   DWORD PTR es:[rdi],eax
   14000ba87:	stos   DWORD PTR es:[rdi],eax
   14000ba88:	scas   eax,DWORD PTR es:[rdi]
   14000ba89:	mov    eax,0xdddad7b7
   14000ba8e:	(bad)  
   14000ba90:	mov    dh,0xb6
   14000ba92:	mov    dh,0xb6
   14000ba94:	mov    dh,0xb6
   14000ba96:	mov    dh,0xb6
   14000ba98:	mov    dh,0xf1
   14000ba9a:	(bad)  
   14000ba9b:	(bad)  
   14000ba9c:	in     al,0xe8
   14000ba9e:	in     eax,0xe4
   14000baa0:	call   0xf9d6998d
   14000baa5:	cdq    
   14000baa6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000baa7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000baa8:	stos   DWORD PTR es:[rdi],eax
   14000baa9:	stos   DWORD PTR es:[rdi],eax
   14000baaa:	stos   DWORD PTR es:[rdi],eax
   14000baab:	shl    al,cl
   14000baad:	loop   0x14000ba8f
   14000baaf:	icebp  
   14000bab0:	mov    dh,0xb6
   14000bab2:	mov    dh,0xb6
   14000bab4:	mov    dh,0xb6
   14000bab6:	mov    dh,0xb6
   14000bab8:	mov    dh,0xf1
   14000baba:	leave  
   14000babb:	(bad)  
   14000babc:	loop   0x14000baa6
   14000babe:	out    0xe6,al
   14000bac0:	call   0x114dc9dad
   14000bac5:	xlat   BYTE PTR ds:[rbx]
   14000bac6:	rcl    ch,cl
   14000bac8:	mov    eax,0xe0d2afb8
   14000bacd:	loop   0x14000baaf
   14000bacf:	icebp  
   14000bad0:	mov    dh,0xb6
   14000bad2:	mov    dh,0xb6
   14000bad4:	mov    dh,0xb6
   14000bad6:	mov    dh,0xb6
   14000bad8:	mov    dh,0xf1
   14000bada:	leave  
   14000badb:	(bad)  
   14000badc:	in     al,0xe8
   14000bade:	in     eax,0xe6
   14000bae0:	call   0x128e9a3cd
   14000bae5:	out    0xe2,al
   14000bae7:	loopne 0x14000bac4
   14000bae9:	(bad)  
   14000baea:	xlat   BYTE PTR ds:[rbx]
   14000baeb:	iret   
   14000baec:	loopne 0x14000bad0
   14000baee:	loopne 0x14000bae1
   14000baf0:	mov    dh,0xb6
   14000baf2:	mov    dh,0xb6
   14000baf4:	mov    dh,0xb6
   14000baf6:	mov    dh,0xb6
   14000baf8:	mov    dh,0xf1
   14000bafa:	(bad)  
   14000bafb:	(bad)  
   14000bafc:	loop   0x14000bae4
   14000bafe:	loop   0x14000bae4
   14000bb00:	call   0x128e9a3ed
   14000bb05:	call   0x124e6a3f2
   14000bb0a:	in     al,0xe0
   14000bb0c:	loop   0x14000baf0
   14000bb0e:	loop   0x14000bb01
   14000bb10:	mov    dh,0xb6
   14000bb12:	mov    dh,0xb6
   14000bb14:	mov    dh,0xb6
   14000bb16:	mov    dh,0xb6
   14000bb18:	mov    dh,0xf1
   14000bb1a:	ror    cl,0xd7
   14000bb1d:	(bad)  
   14000bb1e:	mov    ebp,0xe1dcd2d5
   14000bb23:	loopne 0x14000bb09
   14000bb25:	call   0x128e9a412
   14000bb2a:	in     eax,0xe6
   14000bb2c:	in     al,0xe4
   14000bb2e:	loop   0x14000bb21
   14000bb30:	mov    dh,0xb6
   14000bb32:	mov    dh,0xb6
   14000bb34:	mov    dh,0xb6
   14000bb36:	mov    dh,0xb6
   14000bb38:	mov    dh,0xf1
   14000bb3a:	rcl    bh,cl
   14000bb3c:	xlat   BYTE PTR ds:[rbx]
   14000bb3d:	(bad)  
   14000bb3e:	in     al,dx
   14000bb3f:	in     al,dx
   14000bb40:	in     al,dx
   14000bb41:	mov    esi,0xd7d5bdbe
   14000bb46:	(bad)  
   14000bb48:	loopne 0x14000bb2e
   14000bb4a:	out    0xe6,al
   14000bb4c:	out    0xe4,al
   14000bb4e:	loop   0x14000bb41
   14000bb50:	mov    dh,0xb6
   14000bb52:	mov    dh,0xb6
   14000bb54:	mov    dh,0xb6
   14000bb56:	mov    dh,0xb6
   14000bb58:	mov    dh,0xf1
   14000bb5a:	icebp  
   14000bb5b:	icebp  
   14000bb5c:	icebp  
   14000bb5d:	jmp    0x14000bb46
   14000bb5f:	(bad)  
   14000bb61:	xlat   BYTE PTR ds:[rbx]
   14000bb62:	rcl    ch,cl
   14000bb64:	mov    ebp,0xd5bcbdbd
   14000bb69:	ror    cl,0xd4
   14000bb6c:	fsubrp st(2),st
   14000bb6e:	loop   0x14000bb61
   14000bb70:	mov    dh,0xb6
   14000bb72:	mov    dh,0xb6
   14000bb74:	mov    dh,0xb6
   14000bb76:	mov    dh,0xb6
   14000bb78:	mov    dh,0xb6
   14000bb7a:	mov    dh,0xb6
   14000bb7c:	mov    dh,0xf1
   14000bb7e:	icebp  
   14000bb7f:	icebp  
   14000bb80:	icebp  
   14000bb81:	icebp  
   14000bb82:	out    0xe7,eax
   14000bb84:	out    0xdc,eax
   14000bb86:	xlat   BYTE PTR ds:[rbx]
   14000bb87:	rcl    dl,cl
   14000bb89:	rcl    bh,cl
   14000bb8b:	icebp  
   14000bb8c:	icebp  
   14000bb8d:	icebp  
   14000bb8e:	icebp  
   14000bb8f:	icebp  
   14000bb90:	mov    dh,0xb6
   14000bb92:	mov    dh,0xb6
   14000bb94:	mov    dh,0xb6
   14000bb96:	mov    dh,0xb6
   14000bb98:	mov    dh,0xb6
   14000bb9a:	mov    dh,0xb6
   14000bb9c:	mov    dh,0xb6
   14000bb9e:	mov    dh,0xb6
   14000bba0:	mov    dh,0xb6
   14000bba2:	icebp  
   14000bba3:	icebp  
   14000bba4:	icebp  
   14000bba5:	icebp  
   14000bba6:	icebp  
   14000bba7:	out    0xdc,eax
   14000bba9:	xlat   BYTE PTR ds:[rbx]
   14000bbaa:	fdivr  st(1),st
   14000bbac:	mov    dh,0xb6
   14000bbae:	mov    dh,0xb6
   14000bbb0:	mov    dh,0xb6
   14000bbb2:	mov    dh,0xb6
   14000bbb4:	mov    dh,0xb6
   14000bbb6:	mov    dh,0xb6
   14000bbb8:	mov    dh,0xb6
   14000bbba:	mov    dh,0xb6
   14000bbbc:	mov    dh,0xb6
   14000bbbe:	mov    dh,0xb6
   14000bbc0:	mov    dh,0xb6
   14000bbc2:	mov    dh,0xb6
   14000bbc4:	mov    dh,0xb6
   14000bbc6:	mov    dh,0xf1
   14000bbc8:	icebp  
   14000bbc9:	icebp  
   14000bbca:	icebp  
   14000bbcb:	icebp  
   14000bbcc:	mov    dh,0xb6
   14000bbce:	mov    dh,0xb6
   14000bbd0:	mov    dh,0xb6
   14000bbd2:	mov    dh,0xb6
   14000bbd4:	mov    dh,0xb6
   14000bbd6:	mov    dh,0xb6
   14000bbd8:	(bad)  
   14000bbd9:	(bad)  
   14000bbda:	(bad)  
   14000bbdb:	push   rax
   14000bbdd:	jg     0x14000bbde
   14000bbdf:	inc    eax
   14000bbe1:	ud0    edi,edi
   14000bbe4:	add    BYTE PTR [rcx],0xff
   14000bbe7:	inc    DWORD PTR [rax-0x7f00c100]
   14000bbed:	add    BYTE PTR [rdi],al
   14000bbef:	inc    DWORD PTR [rax-0x7f010000]
   14000bbf5:	add    BYTE PTR [rax],al
   14000bbf7:	inc    DWORD PTR [rax-0x7f010000]
   14000bbfd:	add    BYTE PTR [rax],al
   14000bbff:	inc    DWORD PTR [rax-0x7f010000]
   14000bc05:	add    BYTE PTR [rax],al
   14000bc07:	inc    DWORD PTR [rax-0x7f010000]
   14000bc0d:	add    BYTE PTR [rax],al
   14000bc0f:	inc    DWORD PTR [rax-0x7fc10000]
   14000bc15:	add    BYTE PTR [rax],al
   14000bc17:	jo     0xc003bc1d
   14000bc1d:	add    BYTE PTR [rax],al
   14000bc1f:	add    DWORD PTR [rax-0x7fff0000],eax
   14000bc25:	add    BYTE PTR [rax],al
   14000bc27:	add    DWORD PTR [rax-0x7ffd0000],eax
   14000bc2d:	add    BYTE PTR [rax],al
   14000bc2f:	inc    DWORD PTR [rax-0x7f010000]
   14000bc35:	add    BYTE PTR [rax],al
   14000bc37:	inc    DWORD PTR [rax-0x7f010000]
   14000bc3d:	add    BYTE PTR [rax],al
   14000bc3f:	inc    DWORD PTR [rax-0x7f010000]
   14000bc45:	add    BYTE PTR [rax],al
   14000bc47:	inc    DWORD PTR [rax-0x7010000]
   14000bc4d:	add    BYTE PTR [rax],al
   14000bc4f:	(bad)  
   14000bc50:	inc    eax
   14000bc52:	ud0    edi,edi
   14000bc55:	dec    BYTE PTR [rdi]
   14000bc57:	jmp    FWORD PTR [rax]
   14000bc59:	add    BYTE PTR [rax],al
   14000bc5b:	add    BYTE PTR [rax],dl
   14000bc5d:	add    BYTE PTR [rax],al
   14000bc5f:	add    BYTE PTR [rax],ah
   14000bc61:	add    BYTE PTR [rax],al
   14000bc63:	add    BYTE PTR [rcx],al
   14000bc65:	add    BYTE PTR [rax],cl
	...
   14000bc83:	add    bh,bh
   14000bc85:	(bad)  
   14000bc86:	inc    DWORD PTR [rax]
   14000bc88:	cdq    
   14000bc89:	xchg   esi,eax
   14000bc8a:	pushf  
   14000bc8b:	add    BYTE PTR [rdi-0x46ff6e67],ah
   14000bc91:	je     0x14000bcd5
   14000bc93:	add    BYTE PTR [rbp-0x3cffbd93],ah
   14000bc99:	push   0x22
   14000bc9b:	add    BYTE PTR [rbp-0x13ffbd92],ah
   14000bca1:	xchg   ebp,eax
   14000bca2:	rex.X add spl,dil
   14000bca5:	scas   eax,DWORD PTR es:[rdi]
   14000bca6:	(bad)  
   14000bca7:	add    ah,bh
   14000bca9:	mov    bh,0x70
   14000bcab:	add    dh,ch
   14000bcad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bcae:	pop    rbp
   14000bcaf:	add    ch,bh
   14000bcb1:	retf   
   14000bcb2:	pop    QWORD PTR [rax]
   14000bcb4:	call   0x133014b78
   14000bcb9:	(bad)
   14000bcbc:	(bad)
   14000bcc0:	(bad)  
   14000bcc1:	(bad)  
   14000bcc2:	cwde   
   14000bcc3:	add    bh,bh
   14000bcc5:	fisub  WORD PTR [rdi-0x23000100]
   14000bccb:	add    ah,bh
   14000bccd:	push   rax
   14000bccf:	add    BYTE PTR [rax],al
   14000bcd1:	add    BYTE PTR [rax],al
   14000bcd3:	add    BYTE PTR [rax],al
   14000bcd5:	(bad)  
   14000bcd6:	data16 add BYTE PTR [rax],al
   14000bcd9:	std    
   14000bcda:	data16 add al,bl
   14000bcdd:	repnz (bad) 
   14000bcdf:	add    BYTE PTR [rsi-0x2eff1917],bh
   14000bce5:	lock lock add BYTE PTR [rsi+0x7a00e6dc],ch
   14000bced:	(bad)  
   14000bcee:	test   DWORD PTR [rax],0xf7d278
   14000bcf4:	mov    ebx,eax
   14000bcf6:	cli    
   14000bcf7:	add    BYTE PTR [rdx-0x38],ch
   14000bcfa:	stc    
   14000bcfb:	add    BYTE PTR [rsp+rcx*8-0x4],ch
   14000bcff:	add    BYTE PTR [rsi+0x6300fbde],ah
   14000bd05:	(bad)  
   14000bd08:	(bad)  
   14000bd09:	(bad)  
   14000bd0a:	std    
   14000bd0b:	add    BYTE PTR [rbp-0x40],bl
   14000bd0e:	inc    DWORD PTR [rax]
   14000bd10:	pop    rbx
   14000bd11:	mov    ebx,0xb96300fe
   14000bd16:	cmc    
   14000bd17:	add    BYTE PTR [rbx-0x48ff052c],bl
   14000bd1d:	loop   0x14000bd1d
   14000bd1f:	add    BYTE PTR [rdi-0x49],dl
   14000bd22:	std    
   14000bd23:	add    BYTE PTR [rdi-0x4d],dl
   14000bd26:	test   BYTE PTR [rax],0x64
   14000bd29:	mov    eax,0xb46400f4
   14000bd2e:	lock add BYTE PTR [rcx-0x49],ch
   14000bd32:	repz add BYTE PTR [rcx-0x4d],ch
   14000bd36:	in     al,dx
   14000bd37:	add    BYTE PTR [rcx-0x40],dh
   14000bd3a:	clc    
   14000bd3b:	add    BYTE PTR [rdi-0x53],cl
   14000bd3e:	cld    
   14000bd3f:	add    BYTE PTR [rax-0x52],dl
   14000bd42:	cld    
   14000bd43:	add    BYTE PTR [rcx-0x64],ah
   14000bd46:	retf   
   14000bd47:	add    BYTE PTR [rbp+0x4b00f3c4],cl
   14000bd4d:	stos   DWORD PTR es:[rdi],eax
   14000bd4e:	inc    BYTE PTR [rax]
   14000bd50:	push   rax
   14000bd51:	stos   BYTE PTR es:[rdi],al
   14000bd52:	clc    
   14000bd53:	add    BYTE PTR [rdx-0x56],dl
   14000bd56:	stc    
   14000bd57:	add    BYTE PTR [rdi+rbp*4-0x10],ah
   14000bd5b:	add    BYTE PTR [rdx-0x49],bh
   14000bd5e:	lock add BYTE PTR [rbx+0x4600fccb],dl
   14000bd65:	movabs al,ds:0xa55300f9a65200fa
   14000bd6e:	test   DWORD PTR [rax],0xec9f54
   14000bd74:	push   rsi
   14000bd75:	movabs ds:0xb26600e49f5600eb,al
   14000bd7e:	sti    
   14000bd7f:	add    BYTE PTR [rbx-0x4a],dh
   14000bd82:	sti    
   14000bd83:	add    BYTE PTR [rip+0x3700ff92],ch        # 0x17701bd1b
   14000bd89:	cdq    
   14000bd8a:	inc    DWORD PTR [rax]
   14000bd8c:	cmp    al,0x96
   14000bd8e:	cli    
   14000bd8f:	add    BYTE PTR [rax-0x67],cl
   14000bd92:	out    dx,al
   14000bd93:	add    BYTE PTR [rdi-0x6e],al
   14000bd96:	in     eax,0x0
   14000bd98:	pop    rax
   14000bd99:	cwde   
   14000bd9a:	fadd   QWORD PTR [rax]
   14000bd9c:	xor    DWORD PTR [rbp-0x74cfff05],ecx
   14000bda2:	cli    
   14000bda3:	add    BYTE PTR [rbx],dh
   14000bda5:	(bad)  
   14000bda6:	stc    
   14000bda7:	add    BYTE PTR [rip+0x3700fb8e],dh        # 0x17701b93b
   14000bdad:	(bad)  
   14000bdae:	sti    
   14000bdaf:	add    BYTE PTR [rdx],bh
   14000bdb1:	xchg   ecx,eax
   14000bdb2:	stc    
   14000bdb3:	add    BYTE PTR [rcx],bh
   14000bdb5:	mov    ?,edi
   14000bdb7:	add    BYTE PTR [rsi],bh
   14000bdb9:	xchg   ebp,eax
   14000bdba:	stc    
   14000bdbb:	add    BYTE PTR [rcx-0x6e],al
   14000bdbe:	out    dx,al
   14000bdbf:	add    BYTE PTR [rax-0x67],cl
   14000bdc2:	test   BYTE PTR [rax],0x45
   14000bdc5:	mov    ebx,esp
   14000bdc7:	add    BYTE PTR [rax+0x2500f0b4],al
   14000bdcd:	jg     0x14000bdc8
   14000bdcf:	add    BYTE PTR [rdx],ch
   14000bdd1:	cmp    eax,0xff882d00
   14000bdd7:	add    BYTE PTR [rip+0x2f00f984],ch        # 0x16f01b761
   14000bddd:	mov    ah,bh
   14000bddf:	add    BYTE PTR [rdx],dh
   14000bde1:	xchg   edi,esi
   14000bde3:	add    BYTE PTR [rbx],dh
   14000bde5:	mov    cl,bh
   14000bde7:	add    BYTE PTR [rbx],dh
   14000bde9:	xchg   edi,esi
   14000bdeb:	add    BYTE PTR [rbx],dh
   14000bded:	mov    bh,dh
   14000bdef:	add    BYTE PTR [rax],bh
   14000bdf1:	mov    edi,eax
   14000bdf3:	add    BYTE PTR [rdi],dh
   14000bdf5:	mov    dh,bh
   14000bdf7:	add    BYTE PTR [rbx],bh
   14000bdf9:	mov    edi,eax
   14000bdfb:	add    BYTE PTR [rax-0x73],al
   14000bdfe:	cmc    
   14000bdff:	add    BYTE PTR [rax-0x65],dl
   14000be02:	cli    
   14000be03:	add    BYTE PTR [rdi+rax*4-0x2a],cl
   14000be07:	add    BYTE PTR [rbx-0x7b],cl
   14000be0a:	iret   
   14000be0b:	add    BYTE PTR [rax],ch
   14000be0d:	jle    0x14000be07
   14000be0f:	add    BYTE PTR [rax],ch
   14000be11:	jle    0x14000be09
   14000be13:	add    BYTE PTR [rsi],ch
   14000be15:	xor    bh,0x0
   14000be18:	cs xor dh,0x0
   14000be1c:	(bad)  
   14000be1d:	xor    esi,0xf6813200
   14000be23:	add    BYTE PTR [rsi],bh
   14000be25:	mov    esi,ebp
   14000be27:	add    BYTE PTR [rsi],bh
   14000be29:	test   eax,esi
   14000be2b:	add    BYTE PTR [rdi],bh
   14000be2d:	xchg   dl,ch
   14000be2f:	add    BYTE PTR [rcx-0x58],bh
   14000be32:	jmp    0x14000be34
   14000be34:	(bad)  
   14000be35:	push   0xfffffffffffffff3
   14000be37:	add    BYTE PTR [rdx],bl
   14000be39:	ins    DWORD PTR es:[rdi],dx
   14000be3a:	repz add BYTE PTR [rsi],ah
   14000be3d:	jbe    0x14000be33
   14000be3f:	add    BYTE PTR [rip+0x6600f082],bh        # 0x1a601aec7
   14000be45:	xchg   esp,eax
   14000be46:	fld    QWORD PTR [rax]
   14000be48:	ins    DWORD PTR es:[rdi],dx
   14000be49:	xchg   DWORD PTR [rcx-0xd98e700],esi
   14000be4f:	add    BYTE PTR [rip+0x2500f26c],bl        # 0x16501b0c1
   14000be55:	jno    0x14000be4a
   14000be57:	add    BYTE PTR [rbx+0x1a00efbe],ch
   14000be5d:	rex.RB (bad) 
   14000be5f:	add    BYTE PTR [rdx],bl
   14000be61:	rex.RX int 0x0
   14000be64:	leave  
   14000be65:	(bad)  
   14000be66:	hlt    
   14000be67:	add    BYTE PTR [rbp+0x71],ah
   14000be6a:	movabs eax,ds:0x9d8a8a00
	...
   14000c07f:	add    BYTE PTR [rax],al
   14000c081:	add    BYTE PTR [rdi+0x77],dh
   14000c084:	ja     0x14000c086
	...
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	add    BYTE PTR [rdi+0x6a],dh
   14000c093:	pop    rdi
   14000c094:	imul   esi,DWORD PTR [rdi+0x77],0x77
   14000c09b:	add    BYTE PTR [rax],al
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rdi+0x70],dh
   14000c0a2:	sub    BYTE PTR [rdi],ch
   14000c0a4:	xor    ecx,DWORD PTR [rdi+0x6b]
   14000c0a7:	imul   esi,DWORD PTR [rdi+0x77],0x77
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	ja     0x14000c0ef
   14000c0b2:	and    al,0x30
   14000c0b4:	cmp    al,0x46
   14000c0b6:	ds xor al,0x44
   14000c0b9:	imul   r14d,DWORD PTR [rdi+0x0],0x77000000
   14000c0c1:	sub    eax,0x572555e
   14000c0c6:	add    eax,0x29233105
   14000c0cb:	ja     0x14000c0cd
   14000c0cd:	add    BYTE PTR [rax],al
   14000c0cf:	add    BYTE PTR [rdi+0x36],dh
   14000c0d2:	pop    rsp
   14000c0d3:	push   rsi
   14000c0d4:	rex.WRB jnp 0x14000c0e5
   14000c0d7:	or     DWORD PTR [rip+0x770507],eax        # 0x14077c5e4
   14000c0dd:	add    BYTE PTR [rax],al
   14000c0df:	add    BYTE PTR [rdi+0x2b],dh
   14000c0e2:	pop    rbp
   14000c0e3:	push   rsp
   14000c0e4:	pop    rcx
   14000c0e5:	pop    rbx
   14000c0e6:	(bad)  
   14000c0e7:	add    cl,BYTE PTR [rip+0x606080a]        # 0x14606c8f7
   14000c0ed:	add    BYTE PTR [rax],al
   14000c0ef:	add    BYTE PTR [rdi+0x2a],dh
   14000c0f2:	pop    rdx
   14000c0f3:	movsxd esp,DWORD PTR [rsi+0x67]
   14000c0f6:	push   rdi
   14000c0f7:	rex.WB push r9
   14000c0f9:	add    edx,DWORD PTR [rax]
   14000c0fb:	or     al,0xb
   14000c0fd:	(bad)  
   14000c0fe:	(bad)  
   14000c0ff:	add    BYTE PTR [rdi+0x25],dh
   14000c102:	cmp    DWORD PTR [rax+0x6f],ecx
   14000c105:	cmp    dh,BYTE PTR [rip+0x4624143]        # 0x14463024e
   14000c10b:	(bad)  
   14000c10c:	movups XMMWORD PTR [rcx],xmm2
   14000c10f:	(bad)  
   14000c110:	ja     0x14000c12d
   14000c112:	and    DWORD PTR [rdi+0x6e],eax
   14000c115:	adc    edx,DWORD PTR es:[rdi]
   14000c118:	sbb    ch,BYTE PTR [rsi]
   14000c11a:	rex.RB jp 0x14000c123
   14000c11d:	(bad)  
   14000c11e:	(bad)  
   14000c11f:	(bad)  
   14000c120:	ja     0x14000c140
   14000c122:	pop    rax
   14000c123:	push   rbx
   14000c124:	je     0x14000c165
   14000c126:	and    BYTE PTR [rcx],bl
   14000c128:	adc    bl,BYTE PTR [rax]
   14000c12a:	rex.X ja 0x14000c12d
   14000c12d:	add    BYTE PTR [rax],al
   14000c12f:	add    BYTE PTR [rdi+0x1f],dh
   14000c132:	rex.WRX
   14000c133:	rex.WX jne 0x14000c1a9
   14000c136:	ins    DWORD PTR es:[rdi],dx
   14000c137:	fs push rax
   14000c139:	cmp    ecx,DWORD PTR [rax+rdi*2+0x0]
   14000c13d:	add    BYTE PTR [rax],al
   14000c13f:	add    BYTE PTR [rdi+0x1c],dh
   14000c142:	xor    ah,BYTE PTR [rdx]
   14000c144:	(bad)  
   14000c145:	cmp    BYTE PTR [rax+0x60],al
   14000c148:	push   0x774b65
   14000c14d:	add    BYTE PTR [rax],al
   14000c14f:	add    BYTE PTR [rax],al
   14000c151:	ja     0x14000c1ca
   14000c153:	ja     0x14000c1c6
   14000c155:	ins    BYTE PTR es:[rdi],dx
   14000c156:	push   rdx
   14000c157:	(bad)  
   14000c158:	sbb    eax,0x77772c
   14000c15d:	add    BYTE PTR [rax],al
   14000c15f:	add    BYTE PTR [rax],al
   14000c161:	add    BYTE PTR [rax],al
   14000c163:	add    BYTE PTR [rdi+0x77],dh
   14000c166:	ja     0x14000c1e1
   14000c168:	jbe    0x14000c1e1
	...
   14000c176:	add    BYTE PTR [rdi+0x77],dh
   14000c179:	ja     0x14000c17b
   14000c17b:	add    BYTE PTR [rax],al
   14000c17d:	add    BYTE PTR [rax],al
   14000c17f:	add    bh,al
   14000c181:	dec    ecx
   14000c183:	leave  
   14000c184:	cmp    bh,0xe5
   14000c187:	fadd   DWORD PTR [rax]
   14000c189:	(bad)  
   14000c18a:	loopne 0x14000c166
   14000c18c:	add    BYTE PTR [rdi],cl
   14000c18e:	fcomp  st(3)
   14000c190:	add    BYTE PTR [rdi],cl
   14000c192:	(bad)  
   14000c193:	(bad)  
   14000c194:	add    BYTE PTR [rdi],cl
   14000c196:	iret   
   14000c197:	icebp  
   14000c198:	add    BYTE PTR [rdi],al
   14000c19a:	mov    dh,0xb6
   14000c19c:	add    BYTE PTR [rcx],al
   14000c19e:	mov    dh,0xb6
   14000c1a0:	add    BYTE PTR [rax],al
   14000c1a2:	rcl    ecx,1
   14000c1a4:	add    BYTE PTR [rax],al
   14000c1a6:	out    0xd8,al
   14000c1a8:	add    BYTE PTR [rdi],cl
   14000c1aa:	es add BYTE PTR es:[rdi],cl
   14000c1ae:	out    0xd8,eax
   14000c1b0:	add    BYTE PTR [rdi],cl
   14000c1b2:	(bad)  
   14000c1b3:	(bad)  
   14000c1b4:	or     BYTE PTR [rdi],0xd1
   14000c1b7:	icebp  
   14000c1b8:	lock (bad) 
   14000c1ba:	mov    dh,0xb6
   14000c1bc:	(bad)  
   14000c1bd:	(bad)  
   14000c1be:	mov    dh,0xb6
   14000c1c0:	sub    BYTE PTR [rax],al
   14000c1c2:	add    BYTE PTR [rax],al
   14000c1c4:	xor    BYTE PTR [rax],al
   14000c1c6:	add    BYTE PTR [rax],al
   14000c1c8:	(bad)  
   14000c1c9:	add    BYTE PTR [rax],al
   14000c1cb:	add    BYTE PTR [rcx],al
   14000c1cd:	add    BYTE PTR [rax],ah
	...
   14000c20b:	add    DWORD PTR [rax],eax
   14000c20d:	add    BYTE PTR [rax],al
   14000c20f:	(bad)  
   14000c210:	add    BYTE PTR [rax],al
   14000c212:	add    BYTE PTR [rip+0x13000000],cl        # 0x15300c218
   14000c218:	add    BYTE PTR [rax],al
   14000c21a:	add    BYTE PTR [rip+0x4000000],cl        # 0x14400c220
	...
   14000c2bc:	add    BYTE PTR [rax],al
   14000c2be:	add    BYTE PTR [rcx],al
   14000c2c0:	add    BYTE PTR [rax],al
   14000c2c2:	add    BYTE PTR [rsi],al
   14000c2c4:	add    BYTE PTR [rax],al
   14000c2c6:	add    BYTE PTR [rbx],dl
   14000c2c8:	add    BYTE PTR [rax],al
   14000c2ca:	add    BYTE PTR [rsi],ah
   14000c2cc:	add    BYTE PTR [rax],al
   14000c2ce:	add    BYTE PTR [rcx],bh
   14000c2d0:	add    BYTE PTR [rax],al
   14000c2d2:	add    BYTE PTR [rdx+0x0],cl
   14000c2d5:	add    BYTE PTR [rax],al
   14000c2d7:	push   rbp
   14000c2d8:	add    BYTE PTR [rax],al
   14000c2da:	add    BYTE PTR [rcx+0x0],cl
   14000c2dd:	add    BYTE PTR [rax],al
   14000c2df:	xor    DWORD PTR [rax],eax
   14000c2e1:	add    BYTE PTR [rax],al
   14000c2e3:	sbb    eax,0xe000000
   14000c2e8:	add    BYTE PTR [rax],al
   14000c2ea:	add    BYTE PTR [rax+rax*1],al
	...
   14000c379:	add    BYTE PTR [rax],al
   14000c37b:	add    al,0x0
   14000c37d:	add    BYTE PTR [rax],al
   14000c37f:	adc    eax,DWORD PTR [rax]
   14000c381:	add    BYTE PTR [rax],al
   14000c383:	xor    BYTE PTR [rax],al
   14000c385:	add    BYTE PTR [rax],al
   14000c387:	push   rbp
   14000c388:	(bad)  
   14000c389:	adc    BYTE PTR [rax],dh
   14000c38b:	mov    cl,BYTE PTR [rdx]
   14000c38d:	sbb    DWORD PTR [rbp+rbp*4+0x10],ecx
   14000c391:	sub    eax,DWORD PTR [rax+0x561d0bce]
   14000c397:	mov    edi,0x9b000000
   14000c39c:	add    BYTE PTR [rax],al
   14000c39e:	add    BYTE PTR [rdi+0x6b000000],al
   14000c3a4:	add    BYTE PTR [rax],al
   14000c3a6:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000c3aa:	add    BYTE PTR [rsi],ch
   14000c3ac:	add    BYTE PTR [rax],al
   14000c3ae:	add    BYTE PTR [rcx],bl
   14000c3b0:	add    BYTE PTR [rax],al
   14000c3b2:	add    BYTE PTR [rdx],cl
   14000c3b4:	add    BYTE PTR [rax],al
   14000c3b6:	add    BYTE PTR [rdx],al
	...
   14000c434:	add    BYTE PTR [rax],al
   14000c436:	add    BYTE PTR [rax+rax*1],al
   14000c439:	add    BYTE PTR [rax],al
   14000c43b:	sbb    al,0x5
   14000c43d:	or     eax,0x260e5726
   14000c442:	jno    0x14000c3f3
   14000c444:	(bad)  
   14000c445:	cmp    al,0xb4
   14000c447:	in     eax,dx
   14000c448:	sbb    al,0x4d
   14000c44a:	(bad)  
   14000c44b:	call   FWORD PTR [rip+0x2fffde57]        # 0x17000a2a8
   14000c451:	jno    0x14000c436
   14000c453:	push   QWORD PTR [rip+0x1cffe075]        # 0x15d00a4ce
   14000c459:	rex.W (bad) 
   14000c45b:	sti    
   14000c45c:	adc    dh,BYTE PTR [rax]
   14000c45e:	(bad)  
   14000c45f:	in     eax,0xb
   14000c461:	sbb    al,0x53
   14000c463:	mov    DWORD PTR [rax],0x9b0000
   14000c469:	add    BYTE PTR [rax],al
   14000c46b:	(bad)  
   14000c46c:	add    BYTE PTR [rax],al
   14000c46e:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000c472:	add    BYTE PTR [rax+rax*1+0x0],al
   14000c476:	add    BYTE PTR [rbx],ch
   14000c478:	add    BYTE PTR [rax],al
   14000c47a:	add    BYTE PTR [rdi],dl
   14000c47c:	add    BYTE PTR [rax],al
   14000c47e:	add    BYTE PTR [rcx],cl
   14000c480:	add    BYTE PTR [rax],al
   14000c482:	add    BYTE PTR [rcx],al
	...
   14000c4f4:	add    BYTE PTR [rax],al
   14000c4f6:	add    BYTE PTR [rdi+rcx*1],dl
   14000c4f9:	sub    DWORD PTR [rcx-0x78],edi
   14000c4fc:	sbb    eax,DWORD PTR [rbp-0x3f]
   14000c4ff:	icebp  
   14000c500:	(bad)  
   14000c501:	gs loop 0x14000c503
   14000c504:	and    DWORD PTR [rax-0x12],ebp
   14000c507:	jmp    QWORD PTR [rcx]
   14000c509:	ins    BYTE PTR es:[rdi],dx
   14000c50a:	bnd jmp QWORD PTR [rcx]
   14000c50d:	ins    BYTE PTR es:[rdi],dx
   14000c50e:	repnz inc DWORD PTR [rdx-0x65]
   14000c512:	stc    
   14000c513:	jmp    QWORD PTR [rdx+rcx*8-0x1]
   14000c517:	call   FWORD PTR [rcx-0x46]
   14000c51a:	std    
   14000c51b:	(bad)  
   14000c51c:	ds mov ebp,ebp
   14000c51f:	jmp    FWORD PTR [rsi]
   14000c521:	ins    BYTE PTR es:[rdi],dx
   14000c522:	(bad)  
   14000c524:	(bad)  
   14000c525:	ds mov edx,0x842c11f7
   14000c52b:	fild   WORD PTR [rdi]
   14000c52d:	adc    dh,BYTE PTR [rip+0xb9]        # 0x14000c5ec
   14000c533:	xchg   edi,eax
   14000c534:	add    BYTE PTR [rax],al
   14000c536:	add    BYTE PTR [rdi+0x0],bh
   14000c539:	add    BYTE PTR [rax],al
   14000c53b:	pop    rdi
   14000c53c:	add    BYTE PTR [rax],al
   14000c53e:	add    BYTE PTR [rdi],bh
   14000c540:	add    BYTE PTR [rax],al
   14000c542:	add    BYTE PTR [rdi],ah
   14000c544:	add    BYTE PTR [rax],al
   14000c546:	add    BYTE PTR [rip+0x8000000],dl        # 0x14800c54c
   14000c54c:	add    BYTE PTR [rax],al
   14000c54e:	add    BYTE PTR [rcx],al
	...
   14000c5b4:	adc    eax,0x2879a337
   14000c5b9:	pop    rsi
   14000c5ba:	xlat   BYTE PTR ds:[rbx]
   14000c5bb:	call   FWORD PTR [rcx-0x49]
   14000c5be:	clc    
   14000c5bf:	push   QWORD PTR [rsi]
   14000c5c1:	mov    dh,dh
   14000c5c3:	jmp    QWORD PTR [rcx]
   14000c5c5:	ins    BYTE PTR es:[rdi],dx
   14000c5c6:	bnd jmp QWORD PTR [rcx]
   14000c5c9:	ins    BYTE PTR es:[rdi],dx
   14000c5ca:	bnd jmp QWORD PTR [rcx]
   14000c5cd:	ins    BYTE PTR es:[rdi],dx
   14000c5ce:	repnz inc DWORD PTR [rcx-0x67]
   14000c5d2:	stc    
   14000c5d3:	jmp    QWORD PTR [rcx-0x39]
   14000c5d6:	(bad)  
   14000c5d7:	call   QWORD PTR [rsi-0x49]
   14000c5da:	std    
   14000c5db:	dec    DWORD PTR [rbp-0x57]
   14000c5de:	cli    
   14000c5df:	dec    DWORD PTR [rdi-0x54]
   14000c5e2:	sti    
   14000c5e3:	dec    DWORD PTR [rbp-0x59]
   14000c5e6:	clc    
   14000c5e7:	(bad)  
   14000c5e8:	cmp    eax,0x2cffea88
   14000c5ed:	addr32 fdiv st(7),st
   14000c5f0:	(bad)  
   14000c5f1:	ds mov edx,0x78280ff7
   14000c5f7:	fild   DWORD PTR [rip+0xb2250c]        # 0x140b2eb09
   14000c5fd:	add    BYTE PTR [rax],al
   14000c5ff:	xchg   esp,eax
   14000c600:	add    BYTE PTR [rax],al
   14000c602:	add    BYTE PTR [rdx+0x0],bh
   14000c605:	add    BYTE PTR [rax],al
   14000c607:	pop    rbx
   14000c608:	add    BYTE PTR [rax],al
   14000c60a:	add    BYTE PTR [rip+0x25000000],bh        # 0x16500c610
   14000c610:	add    BYTE PTR [rax],al
   14000c612:	add    BYTE PTR [rdx],dl
   14000c614:	add    BYTE PTR [rax],al
   14000c616:	add    BYTE PTR [rsi],al
   14000c618:	add    BYTE PTR [rax],al
   14000c61a:	add    BYTE PTR [rcx],al
	...
   14000c670:	add    BYTE PTR [rax],al
   14000c672:	add    BYTE PTR [rcx],al
   14000c674:	and    eax,0x64ffd458
   14000c679:	(bad)  
   14000c67a:	cld    
   14000c67b:	jmp    QWORD PTR [rsi-0x34]
   14000c67e:	(bad)  
   14000c67f:	push   QWORD PTR [rsi]
   14000c681:	mov    dh,dh
   14000c683:	jmp    QWORD PTR [rcx]
   14000c685:	ins    BYTE PTR es:[rdi],dx
   14000c686:	bnd jmp QWORD PTR [rcx]
   14000c689:	ins    BYTE PTR es:[rdi],dx
   14000c68a:	bnd jmp QWORD PTR [rcx]
   14000c68d:	ins    BYTE PTR es:[rdi],dx
   14000c68e:	repnz (bad) 
   14000c690:	(bad)  
   14000c691:	cwde   
   14000c692:	stc    
   14000c693:	call   FWORD PTR [rsi-0x3c]
   14000c696:	(bad)  
   14000c697:	call   QWORD PTR [rsp+rsi*4-0x3]
   14000c69b:	dec    DWORD PTR [rbx-0x59]
   14000c69e:	cli    
   14000c69f:	dec    DWORD PTR [rbp-0x57]
   14000c6a2:	cli    
   14000c6a3:	dec    DWORD PTR [rdi-0x54]
   14000c6a6:	sti    
   14000c6a7:	call   QWORD PTR [rcx-0x52]
   14000c6aa:	sti    
   14000c6ab:	call   QWORD PTR [rdx-0x4f]
   14000c6ae:	sti    
   14000c6af:	call   QWORD PTR [rax-0x54]
   14000c6b2:	clc    
   14000c6b3:	(bad)  
   14000c6b4:	cmp    eax,DWORD PTR [rax+rbp*8-0x28a5da01]
   14000c6bb:	call   QWORD PTR [rsi]
   14000c6bd:	cmp    ebp,DWORD PTR [rdi+0x6c240ef3]
   14000c6c3:	(bad)  
   14000c6c4:	add    eax,0xb0250c
   14000c6c9:	add    BYTE PTR [rax],al
   14000c6cb:	xchg   ecx,eax
   14000c6cc:	add    BYTE PTR [rax],al
   14000c6ce:	add    BYTE PTR [rsi+0x0],dh
   14000c6d1:	add    BYTE PTR [rax],al
   14000c6d3:	push   rbp
   14000c6d4:	add    BYTE PTR [rax],al
   14000c6d6:	add    BYTE PTR [rdi],dh
   14000c6d8:	add    BYTE PTR [rax],al
   14000c6da:	add    BYTE PTR [rdx],ah
   14000c6dc:	add    BYTE PTR [rax],al
   14000c6de:	add    BYTE PTR [rcx],dl
   14000c6e0:	add    BYTE PTR [rax],al
   14000c6e2:	add    BYTE PTR [rsi],al
   14000c6e4:	add    BYTE PTR [rax],al
   14000c6e6:	add    BYTE PTR [rcx],al
	...
   14000c730:	add    BYTE PTR [rax],al
   14000c732:	add    BYTE PTR [rax+rsi*1],al
   14000c735:	push   0xffffffffffffffda
   14000c737:	jmp    FWORD PTR [rcx-0x31]
   14000c73a:	(bad)  
   14000c73b:	jmp    QWORD PTR [rdx-0x3a]
   14000c73e:	(bad)  
   14000c73f:	push   QWORD PTR [rsi]
   14000c741:	mov    dh,dh
   14000c743:	jmp    QWORD PTR [rcx]
   14000c745:	ins    BYTE PTR es:[rdi],dx
   14000c746:	bnd jmp QWORD PTR [rcx]
   14000c749:	ins    BYTE PTR es:[rdi],dx
   14000c74a:	bnd jmp QWORD PTR [rcx]
   14000c74d:	ins    BYTE PTR es:[rdi],dx
   14000c74e:	repnz (bad) 
   14000c750:	ds xchg edi,eax
   14000c752:	stc    
   14000c753:	call   FWORD PTR [rdx+rax*8-0x1]
   14000c757:	call   QWORD PTR [rdx-0x4e]
   14000c75a:	cld    
   14000c75b:	dec    DWORD PTR [rcx-0x5c]
   14000c75e:	cli    
   14000c75f:	dec    DWORD PTR [rbx-0x59]
   14000c762:	cli    
   14000c763:	dec    DWORD PTR [rbp-0x57]
   14000c766:	cli    
   14000c767:	dec    DWORD PTR [rdi-0x54]
   14000c76a:	sti    
   14000c76b:	call   QWORD PTR [rcx-0x52]
   14000c76e:	sti    
   14000c76f:	call   QWORD PTR [rdx-0x4f]
   14000c772:	sti    
   14000c773:	call   QWORD PTR [rbx-0x4d]
   14000c776:	sti    
   14000c777:	call   QWORD PTR [rbp-0x4b]
   14000c77a:	cld    
   14000c77b:	dec    DWORD PTR [rdi-0x57]
   14000c77e:	idiv   bh
   14000c780:	cmp    eax,0x26ffe886
   14000c785:	pop    rbx
   14000c786:	xlat   BYTE PTR ds:[rbx]
   14000c787:	call   QWORD PTR [rip+0xceea637]        # 0x14cef6dc4
   14000c78d:	and    BYTE PTR [rdi-0x31],bl
   14000c790:	add    al,BYTE PTR [rsi]
   14000c792:	adc    ebp,DWORD PTR [rax-0x72000000]
   14000c798:	add    BYTE PTR [rax],al
   14000c79a:	add    BYTE PTR [rdx+0x0],dh
   14000c79d:	add    BYTE PTR [rax],al
   14000c79f:	push   rdx
   14000c7a0:	add    BYTE PTR [rax],al
   14000c7a2:	add    BYTE PTR [rip+0x1f000000],dh        # 0x15f00c7a8
   14000c7a8:	add    BYTE PTR [rax],al
   14000c7aa:	add    BYTE PTR [rsi],cl
   14000c7ac:	add    BYTE PTR [rax],al
   14000c7ae:	add    BYTE PTR [rax+rax*1],al
	...
   14000c7ed:	add    BYTE PTR [rax],al
   14000c7ef:	add    BYTE PTR [rcx],dl
   14000c7f1:	sub    al,0x84
   14000c7f3:	sbb    DWORD PTR [rax],esi
   14000c7f5:	push   0xffffffffffffffda
   14000c7f7:	jmp    FWORD PTR [rcx-0x31]
   14000c7fa:	(bad)  
   14000c7fb:	call   FWORD PTR [rbp-0x40]
   14000c7fe:	std    
   14000c7ff:	push   QWORD PTR [rsi]
   14000c801:	mov    dh,dh
   14000c803:	jmp    QWORD PTR [rcx]
   14000c805:	ins    BYTE PTR es:[rdi],dx
   14000c806:	bnd jmp QWORD PTR [rcx]
   14000c809:	ins    BYTE PTR es:[rdi],dx
   14000c80a:	bnd jmp QWORD PTR [rcx]
   14000c80d:	ins    BYTE PTR es:[rdi],dx
   14000c80e:	repnz (bad) 
   14000c810:	cmp    eax,0x59fff995
   14000c815:	mov    edi,0xb050ffff
   14000c81a:	cld    
   14000c81b:	dec    DWORD PTR [rax-0x5e]
   14000c81e:	stc    
   14000c81f:	dec    DWORD PTR [rcx-0x5c]
   14000c822:	cli    
   14000c823:	dec    DWORD PTR [rbx-0x59]
   14000c826:	cli    
   14000c827:	dec    DWORD PTR [rbp-0x57]
   14000c82a:	cli    
   14000c82b:	dec    DWORD PTR [rdi-0x54]
   14000c82e:	sti    
   14000c82f:	call   QWORD PTR [rcx-0x52]
   14000c832:	sti    
   14000c833:	call   QWORD PTR [rdx-0x4f]
   14000c836:	sti    
   14000c837:	call   QWORD PTR [rbx-0x4d]
   14000c83a:	sti    
   14000c83b:	call   QWORD PTR [rbp-0x4b]
   14000c83e:	cld    
   14000c83f:	call   QWORD PTR [rdi-0x49]
   14000c842:	cld    
   14000c843:	call   FWORD PTR [rcx-0x47]
   14000c846:	cld    
   14000c847:	dec    DWORD PTR [rsi-0x5b]
   14000c84a:	hlt    
   14000c84b:	push   QWORD PTR [rdi]
   14000c84d:	jp     0x14000c832
   14000c84f:	jmp    QWORD PTR [rdx]
   14000c851:	push   rsp
   14000c852:	(bad)  
   14000c853:	call   QWORD PTR [rbx]
   14000c855:	xor    al,0x9a
   14000c857:	(bad)  
   14000c858:	or     al,0x20
   14000c85a:	(bad)  
   14000c85b:	(bad)  
   14000c85c:	add    eax,DWORD PTR [rdi]
   14000c85e:	adc    al,0xa6
   14000c860:	add    BYTE PTR [rax],al
   14000c862:	add    BYTE PTR [rcx+0x6c000000],cl
   14000c868:	add    BYTE PTR [rax],al
   14000c86a:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000c86e:	add    BYTE PTR [rcx],dh
   14000c870:	add    BYTE PTR [rax],al
   14000c872:	add    BYTE PTR [rax+rax*1],bl
   14000c875:	add    BYTE PTR [rax],al
   14000c877:	or     eax,DWORD PTR [rax]
   14000c879:	add    BYTE PTR [rax],al
   14000c87b:	add    al,BYTE PTR [rax]
	...
   14000c8ad:	add    BYTE PTR [rax],al
   14000c8af:	add    BYTE PTR [rdi],dl
   14000c8b1:	cmp    eax,0x6a3049b5
   14000c8b6:	(bad)  
   14000c8b8:	imul   ecx,edi,0xc05dffff
   14000c8be:	std    
   14000c8bf:	inc    DWORD PTR [rbp-0x63]
   14000c8c2:	clc    
   14000c8c3:	call   QWORD PTR [rsi+rbp*4-0x7]
   14000c8c7:	call   FWORD PTR [rsi-0x43]
   14000c8ca:	cld    
   14000c8cb:	jmp    FWORD PTR [rdx-0x30]
   14000c8ce:	(bad)  
   14000c8cf:	call   FWORD PTR [rdx-0x40]
   14000c8d2:	(bad)  
   14000c8d3:	call   QWORD PTR [rsi-0x44]
   14000c8d6:	(bad)  
   14000c8d7:	dec    DWORD PTR [rbx-0x57]
   14000c8da:	sti    
   14000c8db:	inc    DWORD PTR [rsi-0x60]
   14000c8de:	stc    
   14000c8df:	dec    DWORD PTR [rax-0x5e]
   14000c8e2:	stc    
   14000c8e3:	dec    DWORD PTR [rcx-0x5c]
   14000c8e6:	cli    
   14000c8e7:	dec    DWORD PTR [rbx-0x59]
   14000c8ea:	cli    
   14000c8eb:	dec    DWORD PTR [rbp-0x57]
   14000c8ee:	cli    
   14000c8ef:	dec    DWORD PTR [rdi-0x54]
   14000c8f2:	sti    
   14000c8f3:	call   QWORD PTR [rcx-0x52]
   14000c8f6:	sti    
   14000c8f7:	call   QWORD PTR [rdx-0x4f]
   14000c8fa:	sti    
   14000c8fb:	call   QWORD PTR [rbx-0x4d]
   14000c8fe:	sti    
   14000c8ff:	call   QWORD PTR [rbp-0x4b]
   14000c902:	cld    
   14000c903:	call   QWORD PTR [rdi-0x49]
   14000c906:	cld    
   14000c907:	call   FWORD PTR [rcx-0x47]
   14000c90a:	cld    
   14000c90b:	call   FWORD PTR [rdx-0x45]
   14000c90e:	std    
   14000c90f:	call   FWORD PTR [rsi+rdi*4-0x3]
   14000c913:	call   QWORD PTR [rax-0x57]
   14000c916:	hlt    
   14000c917:	push   QWORD PTR [rsp+rsi*2]
   14000c91a:	loopne 0x14000c91b
   14000c91c:	(bad)  
   14000c91d:	rex.WB (bad) 
   14000c91f:	sti    
   14000c920:	adc    dh,BYTE PTR [rax]
   14000c922:	(bad)  
   14000c923:	in     eax,0xb
   14000c925:	sbb    al,0x53
   14000c927:	mov    DWORD PTR [rax],0x9d0000
   14000c92d:	add    BYTE PTR [rax],al
   14000c92f:	xchg   DWORD PTR [rax],eax
   14000c931:	add    BYTE PTR [rax],al
   14000c933:	push   0x46000000
   14000c938:	add    BYTE PTR [rax],al
   14000c93a:	add    BYTE PTR [rbx],ch
   14000c93c:	add    BYTE PTR [rax],al
   14000c93e:	add    BYTE PTR [rax],bl
   14000c940:	add    BYTE PTR [rax],al
   14000c942:	add    BYTE PTR [rdi],al
   14000c944:	add    BYTE PTR [rax],al
   14000c946:	add    BYTE PTR [rcx],al
	...
   14000c970:	(bad)  
   14000c971:	cmp    eax,0x733649b5
   14000c976:	(bad)  
   14000c978:	je     0x14000c954
   14000c97a:	(bad)  
   14000c97b:	inc    DWORD PTR [rdx-0x7b000018]
   14000c981:	(bad)  
   14000c982:	(bad)  
   14000c983:	(bad)  
   14000c984:	jl     0x14000c967
   14000c986:	(bad)  
   14000c987:	push   QWORD PTR [rbx-0x27]
   14000c98a:	(bad)  
   14000c98b:	jmp    FWORD PTR [rdx-0x30]
   14000c98e:	(bad)  
   14000c98f:	call   FWORD PTR [rax-0x42]
   14000c992:	(bad)  
   14000c993:	call   QWORD PTR [rbx-0x47]
   14000c996:	(bad)  
   14000c997:	inc    DWORD PTR [rdi-0x5e]
   14000c99a:	cli    
   14000c99b:	inc    DWORD PTR [rbp-0x62]
   14000c99e:	stc    
   14000c99f:	inc    DWORD PTR [rsi-0x60]
   14000c9a2:	stc    
   14000c9a3:	dec    DWORD PTR [rax-0x5e]
   14000c9a6:	stc    
   14000c9a7:	dec    DWORD PTR [rcx-0x5c]
   14000c9aa:	cli    
   14000c9ab:	dec    DWORD PTR [rbx-0x59]
   14000c9ae:	cli    
   14000c9af:	dec    DWORD PTR [rbp-0x57]
   14000c9b2:	cli    
   14000c9b3:	dec    DWORD PTR [rdi-0x54]
   14000c9b6:	sti    
   14000c9b7:	call   QWORD PTR [rcx-0x52]
   14000c9ba:	sti    
   14000c9bb:	call   QWORD PTR [rdx-0x4f]
   14000c9be:	sti    
   14000c9bf:	call   QWORD PTR [rbx-0x4d]
   14000c9c2:	sti    
   14000c9c3:	call   QWORD PTR [rbp-0x4b]
   14000c9c6:	cld    
   14000c9c7:	call   QWORD PTR [rdi-0x49]
   14000c9ca:	cld    
   14000c9cb:	call   FWORD PTR [rcx-0x47]
   14000c9ce:	cld    
   14000c9cf:	call   FWORD PTR [rdx-0x45]
   14000c9d2:	std    
   14000c9d3:	call   FWORD PTR [rsi+rdi*4-0x3]
   14000c9d7:	call   FWORD PTR [rbp-0x40]
   14000c9da:	std    
   14000c9db:	call   FWORD PTR [rdi-0x3e]
   14000c9de:	(bad)  
   14000c9df:	dec    DWORD PTR [rdx-0x64]
   14000c9e2:	out    dx,eax
   14000c9e3:	push   QWORD PTR [rip+0x1effe075]        # 0x15f00aa5e
   14000c9e9:	rex.WX (bad) 
   14000c9eb:	sti    
   14000c9ec:	adc    dh,BYTE PTR [rax]
   14000c9ee:	(bad)  
   14000c9ef:	in     eax,0x7
   14000c9f1:	adc    dh,BYTE PTR [rip+0xbc]        # 0x14000cab3
   14000c9f7:	cwde   
   14000c9f8:	add    BYTE PTR [rax],al
   14000c9fa:	add    BYTE PTR [rcx+0x58000000],al
   14000ca00:	add    BYTE PTR [rax],al
   14000ca02:	add    BYTE PTR [rdx],ah
   14000ca04:	add    BYTE PTR [rax],al
   14000ca06:	add    BYTE PTR [rax+rax*1],al
	...
   14000ca2d:	add    BYTE PTR [rax],al
   14000ca2f:	add    BYTE PTR [rdi],dl
   14000ca31:	cmp    al,0xb3
   14000ca33:	rex.WX push rdx
   14000ca35:	fwait
   14000ca36:	out    0xff,eax
   14000ca38:	xchg   ebp,eax
   14000ca39:	sti    
   14000ca3a:	(bad)  
   14000ca3b:	dec    DWORD PTR [rdx+rsi*8-0x157b0001]
   14000ca42:	(bad)  
   14000ca43:	(bad)  
   14000ca44:	jl     0x14000ca27
   14000ca46:	(bad)  
   14000ca47:	jmp    FWORD PTR [rcx-0x34]
   14000ca4a:	std    
   14000ca4b:	dec    DWORD PTR [rdi-0x55]
   14000ca4e:	cli    
   14000ca4f:	dec    DWORD PTR [rbp-0x51]
   14000ca52:	std    
   14000ca53:	call   QWORD PTR [rax-0x4a]
   14000ca56:	(bad)  
   14000ca57:	inc    DWORD PTR [rbp-0x60]
   14000ca5a:	cli    
   14000ca5b:	inc    DWORD PTR [rbx-0x65]
   14000ca5e:	clc    
   14000ca5f:	inc    DWORD PTR [rbp-0x62]
   14000ca62:	stc    
   14000ca63:	inc    DWORD PTR [rsi-0x60]
   14000ca66:	stc    
   14000ca67:	dec    DWORD PTR [rax-0x5e]
   14000ca6a:	stc    
   14000ca6b:	dec    DWORD PTR [rcx-0x5c]
   14000ca6e:	cli    
   14000ca6f:	dec    DWORD PTR [rbx-0x59]
   14000ca72:	cli    
   14000ca73:	dec    DWORD PTR [rbp-0x57]
   14000ca76:	cli    
   14000ca77:	dec    DWORD PTR [rdi-0x54]
   14000ca7a:	sti    
   14000ca7b:	call   QWORD PTR [rcx-0x52]
   14000ca7e:	sti    
   14000ca7f:	call   QWORD PTR [rdx-0x4f]
   14000ca82:	sti    
   14000ca83:	call   QWORD PTR [rbx-0x4d]
   14000ca86:	sti    
   14000ca87:	call   QWORD PTR [rbp-0x4b]
   14000ca8a:	cld    
   14000ca8b:	call   QWORD PTR [rdi-0x49]
   14000ca8e:	cld    
   14000ca8f:	call   FWORD PTR [rcx-0x47]
   14000ca92:	cld    
   14000ca93:	call   FWORD PTR [rdx-0x45]
   14000ca96:	std    
   14000ca97:	call   FWORD PTR [rsi+rdi*4-0x3]
   14000ca9b:	call   FWORD PTR [rbp-0x40]
   14000ca9e:	std    
   14000ca9f:	call   FWORD PTR [rdi-0x3e]
   14000caa2:	(bad)  
   14000caa3:	jmp    QWORD PTR [rcx-0x3c]
   14000caa6:	(bad)  
   14000caa7:	jmp    QWORD PTR [rbx-0x38]
   14000caaa:	(bad)  
   14000caab:	dec    DWORD PTR [rax-0x68]
   14000caae:	in     eax,dx
   14000caaf:	push   QWORD PTR [rdx]
   14000cab1:	outs   dx,DWORD PTR ds:[rsi]
   14000cab2:	(bad)  
   14000cab4:	(bad)  
   14000cab5:	ds mov edx,0x842c11f7
   14000cabb:	fild   WORD PTR [rbx]
   14000cabd:	or     BYTE PTR [rdi],dl
   14000cabf:	xchg   esp,eax
   14000cac0:	add    BYTE PTR [rax],al
   14000cac2:	add    BYTE PTR [rip+0xa000000],bh        # 0x14a00cac8
	...
   14000caf0:	adc    eax,0x5a4ea939
   14000caf5:	movabs ds:0xf28cfffffb95ffe7,al
   14000cafe:	(bad)  
   14000caff:	jmp    QWORD PTR [rdi-0x3a]
   14000cb02:	sti    
   14000cb03:	jmp    FWORD PTR [rip+0x21fff47b]        # 0x16200bf84
   14000cb09:	ins    BYTE PTR es:[rdi],dx
   14000cb0a:	bnd jmp QWORD PTR [rcx]
   14000cb0d:	ins    BYTE PTR es:[rdi],dx
   14000cb0e:	repnz inc DWORD PTR [rdx-0x5f]
   14000cb12:	cld    
   14000cb13:	dec    DWORD PTR [rbp-0x4d]
   14000cb16:	(bad)  
   14000cb17:	inc    DWORD PTR [rbx-0x62]
   14000cb1a:	cli    
   14000cb1b:	inc    DWORD PTR [rcx-0x67]
   14000cb1e:	clc    
   14000cb1f:	inc    DWORD PTR [rbx-0x65]
   14000cb22:	clc    
   14000cb23:	inc    DWORD PTR [rbp-0x62]
   14000cb26:	stc    
   14000cb27:	inc    DWORD PTR [rsi-0x60]
   14000cb2a:	stc    
   14000cb2b:	dec    DWORD PTR [rax-0x5e]
   14000cb2e:	stc    
   14000cb2f:	dec    DWORD PTR [rcx-0x5c]
   14000cb32:	cli    
   14000cb33:	dec    DWORD PTR [rbx-0x59]
   14000cb36:	cli    
   14000cb37:	dec    DWORD PTR [rbp-0x57]
   14000cb3a:	cli    
   14000cb3b:	dec    DWORD PTR [rdi-0x54]
   14000cb3e:	sti    
   14000cb3f:	call   QWORD PTR [rcx-0x52]
   14000cb42:	sti    
   14000cb43:	call   QWORD PTR [rdx-0x4f]
   14000cb46:	sti    
   14000cb47:	call   QWORD PTR [rbx-0x4d]
   14000cb4a:	sti    
   14000cb4b:	call   QWORD PTR [rbp-0x4b]
   14000cb4e:	cld    
   14000cb4f:	call   QWORD PTR [rdi-0x49]
   14000cb52:	cld    
   14000cb53:	call   FWORD PTR [rcx-0x47]
   14000cb56:	cld    
   14000cb57:	call   FWORD PTR [rdx-0x45]
   14000cb5a:	std    
   14000cb5b:	call   FWORD PTR [rsi+rdi*4-0x3]
   14000cb5f:	call   FWORD PTR [rbp-0x40]
   14000cb62:	std    
   14000cb63:	call   FWORD PTR [rdi-0x3e]
   14000cb66:	(bad)  
   14000cb67:	jmp    QWORD PTR [rcx-0x3c]
   14000cb6a:	(bad)  
   14000cb6b:	jmp    QWORD PTR [rbx-0x38]
   14000cb6e:	(bad)  
   14000cb6f:	jmp    QWORD PTR [rdx+rcx*8-0x1]
   14000cb73:	jmp    QWORD PTR [rcx-0x3d]
   14000cb76:	cld    
   14000cb77:	jmp    FWORD PTR [rax]
   14000cb79:	pop    rsi
   14000cb7a:	xlat   BYTE PTR ds:[rbx]
   14000cb7b:	dec    DWORD PTR [rcx]
   14000cb7d:	sbb    DWORD PTR [rdx-0x4c],ecx
   14000cb80:	add    BYTE PTR [rax],al
   14000cb82:	add    BYTE PTR [rdi+0x0],al
   14000cb85:	add    BYTE PTR [rax],al
   14000cb87:	or     al,0x0
	...
   14000cbad:	add    BYTE PTR [rax],al
   14000cbaf:	add    BYTE PTR [rdi],dl
   14000cbb1:	ds mov eax,0xe7a25a7d
   14000cbb7:	dec    DWORD PTR [rbp+0x5cfffff3]
   14000cbbd:	mov    esp,0x8a36fffc
   14000cbc2:	idiv   bh
   14000cbc4:	and    DWORD PTR [rdx+rsi*8-0x1],ebp
   14000cbc8:	and    DWORD PTR [rdx+rsi*8-0x1],ebp
   14000cbcc:	and    DWORD PTR [rdx+rsi*8-0x1],ebp
   14000cbd0:	rex lahf 
   14000cbd2:	cld    
   14000cbd3:	dec    DWORD PTR [rbx-0x4f]
   14000cbd6:	(bad)  
   14000cbd7:	inc    DWORD PTR [rdx-0x64]
   14000cbda:	stc    
   14000cbdb:	jmp    QWORD PTR [rcx+0x71]
   14000cbde:	fwait
   14000cbdf:	inc    DWORD PTR [rbx+0x74ff3e4d]
   14000cbe5:	(bad)  
   14000cbe6:	ins    DWORD PTR es:[rdi],dx
   14000cbe7:	jmp    FWORD PTR [rdi+0x69]
   14000cbea:	jge    0x14000cbeb
   14000cbec:	jo     0x14000cc58
   14000cbee:	jge    0x14000cbef
   14000cbf0:	pop    rsp
   14000cbf1:	xchg   DWORD PTR [rbx-0x4377a201],edi
   14000cbf7:	call   FWORD PTR [rdx-0x6e]
   14000cbfa:	retf   
   14000cbfb:	dec    DWORD PTR [rbp-0x57]
   14000cbfe:	cli    
   14000cbff:	dec    DWORD PTR [rdi-0x54]
   14000cc02:	sti    
   14000cc03:	call   QWORD PTR [rcx-0x52]
   14000cc06:	sti    
   14000cc07:	call   QWORD PTR [rdx-0x4f]
   14000cc0a:	sti    
   14000cc0b:	call   QWORD PTR [rbx-0x4d]
   14000cc0e:	sti    
   14000cc0f:	call   QWORD PTR [rbp-0x4b]
   14000cc12:	cld    
   14000cc13:	call   QWORD PTR [rdi-0x49]
   14000cc16:	cld    
   14000cc17:	call   FWORD PTR [rcx-0x47]
   14000cc1a:	cld    
   14000cc1b:	call   FWORD PTR [rdx-0x45]
   14000cc1e:	std    
   14000cc1f:	call   FWORD PTR [rsi+rdi*4-0x3]
   14000cc23:	call   FWORD PTR [rbp-0x40]
   14000cc26:	std    
   14000cc27:	call   FWORD PTR [rdi-0x3e]
   14000cc2a:	(bad)  
   14000cc2b:	jmp    QWORD PTR [rcx-0x3c]
   14000cc2e:	(bad)  
   14000cc2f:	jmp    QWORD PTR [rbx-0x38]
   14000cc32:	(bad)  
   14000cc33:	jmp    QWORD PTR [rdx+rcx*8-0x1]
   14000cc37:	jmp    FWORD PTR [rip+0x9ffda67]        # 0x14a00a6a4
   14000cc3d:	sbb    DWORD PTR [rdx-0x4c],ecx
   14000cc40:	add    BYTE PTR [rax],al
   14000cc42:	add    BYTE PTR [rdi+0x0],al
   14000cc45:	add    BYTE PTR [rax],al
   14000cc47:	or     al,0x0
	...
   14000cc6d:	add    BYTE PTR [rax],al
   14000cc6f:	add    BYTE PTR [rax],bl
   14000cc71:	(bad)  
   14000cc72:	mov    esp,0xe799508c
   14000cc77:	jmp    FWORD PTR [rdx+rdx*8-0x1]
   14000cc7b:	call   QWORD PTR [rbp-0x4c]
   14000cc7e:	cld    
   14000cc7f:	push   QWORD PTR [rsi]
   14000cc81:	mov    dh,dh
   14000cc83:	jmp    QWORD PTR [rcx]
   14000cc85:	ins    BYTE PTR es:[rdi],dx
   14000cc86:	bnd jmp QWORD PTR [rcx]
   14000cc89:	ins    BYTE PTR es:[rdi],dx
   14000cc8a:	bnd jmp QWORD PTR [rcx]
   14000cc8d:	ins    BYTE PTR es:[rdi],dx
   14000cc8e:	repnz inc DWORD PTR [rbp-0x56]
   14000cc92:	(bad)  
   14000cc93:	dec    DWORD PTR [rax-0x52]
   14000cc96:	(bad)  
   14000cc97:	(bad)  
   14000cc98:	ds xchg ebp,eax
   14000cc9a:	clc    
   14000cc9b:	call   QWORD PTR [rbx-0x6000f2c7]
   14000cca1:	jns    0x14000cd03
   14000cca3:	call   rsi
   14000cca5:	xchg   DWORD PTR [rbp-0x1],eax
   14000cca8:	leave  
   14000cca9:	jae    0x14000ccdb
   14000ccab:	(bad)  
   14000ccac:	mov    ebx,0xb7ff185d
   14000ccb1:	push   rsi
   14000ccb2:	(bad)  
   14000ccb3:	jmp    FWORD PTR [rbp-0x5900fdb8]
   14000ccb9:	add    dil,dil
   14000ccbc:	mov    ecx,DWORD PTR [rcx+0x2f]
   14000ccbf:	jmp    FWORD PTR [rdx+0x7d]
   14000ccc2:	popf   
   14000ccc3:	dec    DWORD PTR [rdi-0x54]
   14000ccc6:	sti    
   14000ccc7:	call   QWORD PTR [rcx-0x52]
   14000ccca:	sti    
   14000cccb:	call   QWORD PTR [rdx-0x4f]
   14000ccce:	sti    
   14000cccf:	call   QWORD PTR [rbx-0x4d]
   14000ccd2:	sti    
   14000ccd3:	call   QWORD PTR [rbp-0x4b]
   14000ccd6:	cld    
   14000ccd7:	call   QWORD PTR [rdi-0x49]
   14000ccda:	cld    
   14000ccdb:	call   FWORD PTR [rcx-0x47]
   14000ccde:	cld    
   14000ccdf:	call   FWORD PTR [rdx-0x45]
   14000cce2:	std    
   14000cce3:	call   FWORD PTR [rsi+rdi*4-0x3]
   14000cce7:	call   FWORD PTR [rbp-0x40]
   14000ccea:	std    
   14000cceb:	call   FWORD PTR [rdi-0x3e]
   14000ccee:	(bad)  
   14000ccef:	jmp    QWORD PTR [rcx-0x3c]
   14000ccf2:	(bad)  
   14000ccf3:	jmp    QWORD PTR [rbx-0x38]
   14000ccf6:	(bad)  
   14000ccf7:	jmp    FWORD PTR [rip+0x9ffda66]        # 0x14a00a763
   14000ccfd:	sbb    DWORD PTR [rdx-0x4c],ecx
   14000cd00:	add    BYTE PTR [rax],al
   14000cd02:	add    BYTE PTR [rdi+0x0],al
   14000cd05:	add    BYTE PTR [rax],al
   14000cd07:	or     al,0x0
	...
   14000cd2d:	add    BYTE PTR [rax],al
   14000cd2f:	add    BYTE PTR [rax],bl
   14000cd31:	(bad)  
   14000cd32:	mov    esp,0xf0ad5a8c
   14000cd37:	jmp    FWORD PTR [rcx-0x31]
   14000cd3a:	(bad)  
   14000cd3b:	call   QWORD PTR [rbp-0x4c]
   14000cd3e:	cld    
   14000cd3f:	push   QWORD PTR [rsi]
   14000cd41:	mov    dh,dh
   14000cd43:	jmp    QWORD PTR [rcx]
   14000cd45:	ins    BYTE PTR es:[rdi],dx
   14000cd46:	bnd jmp QWORD PTR [rcx]
   14000cd49:	ins    BYTE PTR es:[rdi],dx
   14000cd4a:	bnd jmp QWORD PTR [rcx]
   14000cd4d:	ins    BYTE PTR es:[rdi],dx
   14000cd4e:	repnz inc DWORD PTR [rsi-0x54]
   14000cd52:	(bad)  
   14000cd53:	inc    DWORD PTR [rsi-0x54]
   14000cd56:	(bad)  
   14000cd57:	(bad)  
   14000cd58:	cmp    ecx,DWORD PTR [rdi+0x5c70fff7]
   14000cd5e:	ins    BYTE PTR es:[rdi],dx
   14000cd5f:	(bad)  
   14000cd60:	mov    esi,0xf9ff376b
   14000cd65:	ror    DWORD PTR [rax+0x73b2f2ff],0xff
   14000cd6c:	(bad)  
   14000cd6d:	movabs ds:0x97e5ff4393e2ff5b,al
   14000cd76:	rex.WX (bad) 
   14000cd78:	fld    DWORD PTR [rax+0x65c8ff26]
   14000cd7e:	(bad)  
   14000cd7f:	jmp    FWORD PTR [rsi+rax*2+0x4593ff00]
   14000cd86:	(bad)  
   14000cd87:	push   QWORD PTR [rax+rsi*2+0x7e]
   14000cd8b:	call   QWORD PTR [rsi-0x5a]
   14000cd8e:	jmp    0x14000cd8f
   14000cd90:	push   rdx
   14000cd91:	mov    cl,0xfb
   14000cd93:	call   QWORD PTR [rbx-0x4d]
   14000cd96:	sti    
   14000cd97:	call   QWORD PTR [rbp-0x4b]
   14000cd9a:	cld    
   14000cd9b:	call   QWORD PTR [rdi-0x49]
   14000cd9e:	cld    
   14000cd9f:	call   FWORD PTR [rcx-0x47]
   14000cda2:	cld    
   14000cda3:	call   FWORD PTR [rdx-0x45]
   14000cda6:	std    
   14000cda7:	call   FWORD PTR [rsi+rdi*4-0x3]
   14000cdab:	call   FWORD PTR [rbp-0x40]
   14000cdae:	std    
   14000cdaf:	call   FWORD PTR [rdi-0x3e]
   14000cdb2:	(bad)  
   14000cdb3:	jmp    QWORD PTR [rcx-0x3c]
   14000cdb6:	(bad)  
   14000cdb7:	jmp    FWORD PTR [riz*2+0x1909ffda]
   14000cdbe:	rex.WX mov spl,0x0
   14000cdc1:	add    BYTE PTR [rax],al
   14000cdc3:	rex.RXB add BYTE PTR [r8],r8b
   14000cdc6:	add    BYTE PTR [rax+rax*1],cl
	...
   14000cded:	add    BYTE PTR [rax],al
   14000cdef:	add    BYTE PTR [rdi],dl
   14000cdf1:	ds mov edx,0xf3b7608e
   14000cdf7:	jmp    FWORD PTR [rcx-0x31]
   14000cdfa:	(bad)  
   14000cdfb:	call   QWORD PTR [rdx-0x4f]
   14000cdfe:	sti    
   14000cdff:	push   QWORD PTR [rsi]
   14000ce01:	mov    dh,dh
   14000ce03:	jmp    QWORD PTR [rcx]
   14000ce05:	ins    BYTE PTR es:[rdi],dx
   14000ce06:	bnd jmp QWORD PTR [rcx]
   14000ce09:	ins    BYTE PTR es:[rdi],dx
   14000ce0a:	bnd jmp QWORD PTR [rcx]
   14000ce0d:	ins    BYTE PTR es:[rdi],dx
   14000ce0e:	repnz inc DWORD PTR [rbx-0x57]
   14000ce12:	(bad)  
   14000ce13:	inc    DWORD PTR [rbx-0x57]
   14000ce16:	(bad)  
   14000ce17:	(bad)  
   14000ce18:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000ce1e:	idiv   edi
   14000ce20:	jo     0x14000ce7e
   14000ce22:	ins    BYTE PTR es:[rdi],dx
   14000ce23:	push   QWORD PTR [rbx-0x600d7a5]
   14000ce29:	(bad)  
   14000ce2a:	xchg   esp,eax
   14000ce2b:	(bad)  
   14000ce2c:	cli    
   14000ce2d:	ret    0xff8b
   14000ce30:	stc    
   14000ce31:	(bad)  
   14000ce32:	(bad)  
   14000ce33:	(bad)  
   14000ce34:	std    
   14000ce35:	(bad)  
   14000ce36:	(bad)  
   14000ce37:	(bad)  
   14000ce38:	call   0x11f0024dc
   14000ce3d:	mov    DWORD PTR [rdi+rdi*8],esi
   14000ce40:	(bad)  
   14000ce41:	jbe    0x14000ce5b
   14000ce43:	dec    ebx
   14000ce45:	push   0x4db3ff07
   14000ce4a:	add    bh,bh
   14000ce4c:	fwait
   14000ce4d:	adc    r15b,dil
   14000ce50:	jle    0x14000ceb3
   14000ce52:	pop    rsi
   14000ce53:	call   FWORD PTR [rbx-0x5f]
   14000ce56:	fdiv   st(7),st
   14000ce58:	push   rbx
   14000ce59:	mov    bl,0xfb
   14000ce5b:	call   QWORD PTR [rbp-0x4b]
   14000ce5e:	cld    
   14000ce5f:	call   QWORD PTR [rdi-0x49]
   14000ce62:	cld    
   14000ce63:	call   FWORD PTR [rcx-0x47]
   14000ce66:	cld    
   14000ce67:	call   FWORD PTR [rdx-0x45]
   14000ce6a:	std    
   14000ce6b:	call   FWORD PTR [rsi+rdi*4-0x3]
   14000ce6f:	call   FWORD PTR [rbp-0x40]
   14000ce72:	std    
   14000ce73:	call   FWORD PTR [rdi-0x3e]
   14000ce76:	(bad)  
   14000ce77:	jmp    FWORD PTR [riz*2+0x1909ffda]
   14000ce7e:	rex.WX mov spl,0x0
   14000ce81:	add    BYTE PTR [rax],al
   14000ce83:	rex.RXB add BYTE PTR [r8],r8b
   14000ce86:	add    BYTE PTR [rax+rax*1],cl
	...
   14000cead:	add    BYTE PTR [rax],al
   14000ceaf:	add    BYTE PTR [rax],bl
   14000ceb1:	rex mov edi,0xf3b760ac
   14000ceb7:	jmp    FWORD PTR [rcx-0x31]
   14000ceba:	(bad)  
   14000cebb:	call   QWORD PTR [rax-0x52]
   14000cebe:	sti    
   14000cebf:	push   QWORD PTR [rsi]
   14000cec1:	mov    dh,dh
   14000cec3:	jmp    QWORD PTR [rcx]
   14000cec5:	ins    BYTE PTR es:[rdi],dx
   14000cec6:	bnd jmp QWORD PTR [rcx]
   14000cec9:	ins    BYTE PTR es:[rdi],dx
   14000ceca:	bnd jmp QWORD PTR [rcx]
   14000cecd:	ins    BYTE PTR es:[rdi],dx
   14000cece:	repnz inc DWORD PTR [rax-0x5a]
   14000ced2:	(bad)  
   14000ced3:	inc    DWORD PTR [rax-0x5a]
   14000ced6:	(bad)  
   14000ced7:	push   QWORD PTR [rdi]
   14000ced9:	mov    esi,esi
   14000cedb:	(bad)  
   14000cedc:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000cee2:	idiv   edi
   14000cee4:	pop    rsi
   14000cee5:	ins    DWORD PTR es:[rdi],dx
   14000cee6:	(bad)  
   14000cee7:	jmp    FWORD PTR [rsp+rdx*2-0x2a0600df]
   14000ceee:	movabs ds:0xb1e4feffbaedffff,al
   14000cef7:	push   rdi
   14000cef9:	mov    esp,0xa9edff81
   14000cefe:	fs jmp rbp
   14000cf01:	cdq    
   14000cf02:	rex.WR (bad) 
   14000cf04:	fisttp WORD PTR [rbp+0x7bd7ff39]
   14000cf0a:	(bad)  
   14000cf0b:	call   rax
   14000cf0d:	outs   dx,BYTE PTR ds:[rsi]
   14000cf0e:	or     al,0xff
   14000cf10:	mov    ecx,0x9fff0053
   14000cf15:	cmp    DWORD PTR [rax],eax
   14000cf17:	inc    DWORD PTR [rbx+0x65ff4e5b]
   14000cf1d:	xchg   ebx,eax
   14000cf1e:	mov    esp,0xfcb555ff
   14000cf23:	call   QWORD PTR [rdi-0x49]
   14000cf26:	cld    
   14000cf27:	call   FWORD PTR [rcx-0x47]
   14000cf2a:	cld    
   14000cf2b:	call   FWORD PTR [rdx-0x45]
   14000cf2e:	std    
   14000cf2f:	call   FWORD PTR [rsi+rdi*4-0x3]
   14000cf33:	call   FWORD PTR [rbp-0x40]
   14000cf36:	std    
   14000cf37:	jmp    FWORD PTR [rbx]
   14000cf39:	fs (bad) 
   14000cf3c:	or     DWORD PTR [rcx],ebx
   14000cf3e:	rex.WX mov spl,0x0
   14000cf41:	add    BYTE PTR [rax],al
   14000cf43:	rex.RXB add BYTE PTR [r8],r8b
   14000cf46:	add    BYTE PTR [rax+rax*1],cl
	...
   14000cf6d:	add    BYTE PTR [rax],al
   14000cf6f:	add    BYTE PTR [rcx],bl
   14000cf71:	(bad)
   14000cf75:	mov    bh,0xf3
   14000cf77:	jmp    FWORD PTR [rcx-0x31]
   14000cf7a:	(bad)  
   14000cf7b:	call   QWORD PTR [rax-0x52]
   14000cf7e:	sti    
   14000cf7f:	push   QWORD PTR [rsi]
   14000cf81:	mov    dh,dh
   14000cf83:	jmp    QWORD PTR [rcx]
   14000cf85:	ins    BYTE PTR es:[rdi],dx
   14000cf86:	bnd jmp QWORD PTR [rcx]
   14000cf89:	ins    BYTE PTR es:[rdi],dx
   14000cf8a:	bnd jmp QWORD PTR [rcx]
   14000cf8d:	ins    BYTE PTR es:[rdi],dx
   14000cf8e:	repnz (bad) 
   14000cf90:	cmp    eax,0x3dffffa3
   14000cf95:	movabs ds:0x8b37fff68936ffff,eax
   14000cf9e:	idiv   bh
   14000cfa0:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000cfa6:	idiv   edi
   14000cfa8:	pop    rsi
   14000cfa9:	ins    DWORD PTR es:[rdi],dx
   14000cfaa:	(bad)  
   14000cfab:	jmp    FWORD PTR [rdi+rdx*2-0x110600dc]
   14000cfb2:	mov    ebx,0xbef1ffff
   14000cfb7:	(bad)  
   14000cfb8:	call   rdi
   14000cfba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cfbb:	(bad)  
   14000cfbc:	std    
   14000cfbd:	retf   0xff96
   14000cfc0:	clc    
   14000cfc1:	mov    ebp,0xadf0ff84
   14000cfc6:	ins    BYTE PTR es:[rdi],dx
   14000cfc7:	(bad)  
   14000cfc8:	call   0x12200236b
   14000cfcd:	nop
   14000cfce:	ds (bad) 
   14000cfd0:	fld    DWORD PTR [rax+0x70d1ff26]
   14000cfd6:	(bad)  
   14000cfd7:	inc    eax
   14000cfd9:	pop    rbx
   14000cfda:	add    bh,bh
   14000cfdc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cfdd:	add    dil,dil
   14000cfe0:	mov    WORD PTR [rbx+0x2f],cs
   14000cfe3:	inc    DWORD PTR [rax-0x6e00a09c]
   14000cfe9:	and    dil,r15b
   14000cfec:	and    DWORD PTR [rsi+0x5f],0xbe996aff
   14000cff3:	call   FWORD PTR [rsi+rdi*4-0x3]
   14000cff7:	jmp    FWORD PTR [rbx]
   14000cff9:	fs (bad) 
   14000cffc:	or     DWORD PTR [rax],ebx
   14000cffe:	rex.RXB mov r10d,0x5b000000
   14000d004:	add    BYTE PTR [rax],al
   14000d006:	add    BYTE PTR [rsi],bl
   14000d008:	add    BYTE PTR [rax],al
   14000d00a:	add    BYTE PTR [rdi],al
   14000d00c:	add    BYTE PTR [rax],al
   14000d00e:	add    BYTE PTR [rcx],al
	...
   14000d030:	sbb    DWORD PTR [rdx-0x3b],eax
   14000d033:	enter  0xc166,0xf6
   14000d037:	jmp    FWORD PTR [rcx-0x31]
   14000d03a:	(bad)  
   14000d03b:	call   QWORD PTR [rax-0x52]
   14000d03e:	sti    
   14000d03f:	push   QWORD PTR [rsi]
   14000d041:	mov    dh,dh
   14000d043:	jmp    QWORD PTR [rcx]
   14000d045:	ins    BYTE PTR es:[rdi],dx
   14000d046:	bnd jmp QWORD PTR [rcx]
   14000d049:	ins    BYTE PTR es:[rdi],dx
   14000d04a:	bnd jmp QWORD PTR [rbx]
   14000d04d:	outs   dx,DWORD PTR ds:[rsi]
   14000d04e:	repz (bad) 
   14000d050:	cmp    ah,BYTE PTR [rax-0x62c60001]
   14000d056:	(bad)  
   14000d057:	push   QWORD PTR [rsi+rax*4]
   14000d05a:	idiv   bh
   14000d05c:	ss mov esi,esi
   14000d05f:	push   QWORD PTR [rdi]
   14000d061:	mov    esi,esi
   14000d063:	(bad)  
   14000d064:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000d06a:	idiv   edi
   14000d06c:	pop    rcx
   14000d06d:	jae    0x14000d019
   14000d06f:	call   FWORD PTR [rdx-0x3900e3ba]
   14000d075:	mov    ebx,DWORD PTR [rax-0x1]
   14000d078:	repnz fldenv [rsi-0x4c190001]
   14000d07f:	(bad)  
   14000d080:	(bad)  
   14000d081:	fisub  DWORD PTR [rdi-0x65310101]
   14000d087:	(bad)  
   14000d088:	stc    
   14000d089:	ror    DWORD PTR [rax+0x73b2f2ff],0xff
   14000d090:	(bad)  
   14000d091:	movabs ds:0x85dbff3e90e1ff5b,al
   14000d09a:	sub    eax,0x1373d3ff
   14000d09f:	inc    edi
   14000d0a1:	movsxd eax,DWORD PTR [rip+0xe60c1ff]        # 0x14e6192a6
   14000d0a7:	dec    ebp
   14000d0a9:	push   0x59bfff02
   14000d0ae:	add    bh,bh
   14000d0b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0b1:	add    dil,dil
   14000d0b4:	mov    DWORD PTR [rbp+0x3f],edx
   14000d0b7:	call   QWORD PTR [rdx+0x4e]
   14000d0ba:	xchg   edi,edi
   14000d0bc:	or     BYTE PTR [rsi],dl
   14000d0be:	rex.X mov BYTE PTR [rax],0x0
   14000d0c2:	add    BYTE PTR [rsi+0x5d000000],cl
   14000d0c8:	add    BYTE PTR [rax],al
   14000d0ca:	add    BYTE PTR [rsi],dh
   14000d0cc:	add    BYTE PTR [rax],al
   14000d0ce:	add    BYTE PTR [rbx],bl
   14000d0d0:	add    BYTE PTR [rax],al
   14000d0d2:	add    BYTE PTR [rcx],cl
   14000d0d4:	add    BYTE PTR [rax],al
   14000d0d6:	add    BYTE PTR [rcx],al
	...
   14000d0f0:	sbb    DWORD PTR [rcx-0x3d],eax
   14000d0f3:	leave  
   14000d0f4:	jp     0x14000d0d5
   14000d0f6:	(bad)  
   14000d0f7:	jmp    FWORD PTR [rcx-0x31]
   14000d0fa:	(bad)  
   14000d0fb:	call   QWORD PTR [rax-0x52]
   14000d0fe:	sti    
   14000d0ff:	push   QWORD PTR [rsi]
   14000d101:	mov    dh,dh
   14000d103:	jmp    QWORD PTR [rcx]
   14000d105:	ins    BYTE PTR es:[rdi],dx
   14000d106:	bnd jmp QWORD PTR [rcx]
   14000d109:	ins    BYTE PTR es:[rdi],dx
   14000d10a:	bnd jmp QWORD PTR [rdi]
   14000d10d:	js     0x14000d104
   14000d10f:	(bad)  
   14000d110:	cmp    BYTE PTR [rsi-0x68c90001],bl
   14000d116:	std    
   14000d117:	push   QWORD PTR [rdx]
   14000d119:	test   ch,dh
   14000d11b:	push   QWORD PTR [rsi+rax*4]
   14000d11e:	idiv   bh
   14000d120:	ss mov esi,esi
   14000d123:	push   QWORD PTR [rdi]
   14000d125:	mov    esi,esi
   14000d127:	(bad)  
   14000d128:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000d12e:	idiv   edi
   14000d130:	rex.X mov ebp,eax
   14000d133:	jmp    QWORD PTR [rax+0x70]
   14000d136:	(bad)  
   14000d137:	dec    DWORD PTR [rsi-0x4000e0c1]
   14000d13d:	jle    0x14000d18a
   14000d13f:	jmp    rsi
   14000d141:	ret    0xff8f
   14000d144:	(bad)  
   14000d145:	jmp    0x11e00d100
   14000d14a:	stos   BYTE PTR es:[rdi],al
   14000d14b:	(bad)  
   14000d14c:	call   rdx
   14000d14e:	lahf   
   14000d14f:	(bad)  
   14000d150:	cli    
   14000d151:	ret    0xff8b
   14000d154:	hlt    
   14000d155:	mov    bh,0x7a
   14000d157:	(bad)  
   14000d158:	in     al,dx
   14000d159:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d15a:	(bad)  
   14000d15b:	jmp    rbx
   14000d15d:	xchg   esp,eax
   14000d15e:	rex.RB jmp r9
   14000d161:	nop
   14000d162:	ds (bad) 
   14000d164:	fimul  WORD PTR [rbx-0x7d2500c9]
   14000d16a:	sub    bh,bh
   14000d16c:	(bad)  
   14000d16d:	jbe    0x14000d187
   14000d16f:	dec    esi
   14000d171:	imul   eax,DWORD PTR [rip+0x60c6ff],0x46acff        # 0x14061987a
   14000d17b:	dec    DWORD PTR [rdx+0x50f7002e]
   14000d181:	sbb    eax,DWORD PTR [rax]
   14000d183:	(bad)  
   14000d184:	(bad)  
   14000d185:	add    eax,0xa900
   14000d18a:	add    BYTE PTR [rax+0x64000000],cl
   14000d190:	add    BYTE PTR [rax],al
   14000d192:	add    BYTE PTR [rsi],bh
   14000d194:	add    BYTE PTR [rax],al
   14000d196:	add    BYTE PTR [rax],ah
   14000d198:	add    BYTE PTR [rax],al
   14000d19a:	add    BYTE PTR [rip+0x3000000],cl        # 0x14300d1a0
	...
   14000d1b0:	sbb    DWORD PTR [rcx-0x3d],eax
   14000d1b3:	retf   0xdf7a
   14000d1b6:	(bad)  
   14000d1b7:	jmp    FWORD PTR [rcx-0x31]
   14000d1ba:	(bad)  
   14000d1bb:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000d1bf:	push   QWORD PTR [rsi]
   14000d1c1:	mov    dh,dh
   14000d1c3:	jmp    QWORD PTR [rcx]
   14000d1c5:	ins    BYTE PTR es:[rdi],dx
   14000d1c6:	bnd jmp QWORD PTR [rcx]
   14000d1c9:	ins    BYTE PTR es:[rdi],dx
   14000d1ca:	bnd jmp QWORD PTR [rsi]
   14000d1cd:	js     0x14000d1c4
   14000d1cf:	push   QWORD PTR [rip+0x33ffff9b]        # 0x17400d170
   14000d1d5:	xchg   esp,eax
   14000d1d6:	std    
   14000d1d7:	push   QWORD PTR [rcx]
   14000d1d9:	(bad)  
   14000d1da:	cmc    
   14000d1db:	push   QWORD PTR [rdx]
   14000d1dd:	test   ch,dh
   14000d1df:	push   QWORD PTR [rsi+rax*4]
   14000d1e2:	idiv   bh
   14000d1e4:	ss mov esi,esi
   14000d1e7:	push   QWORD PTR [rdi]
   14000d1e9:	mov    esi,esi
   14000d1eb:	(bad)  
   14000d1ec:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000d1f2:	idiv   edi
   14000d1f4:	cmp    al,0x92
   14000d1f6:	idiv   edi
   14000d1f8:	ds xchg ebp,eax
   14000d1fa:	idiv   edi
   14000d1fc:	pop    rsp
   14000d1fd:	js     0x14000d1a9
   14000d1ff:	inc    DWORD PTR [rbx-0x4c00c1b4]
   14000d205:	gs xor bh,bh
   14000d208:	fldcw  WORD PTR [rbx-0x13000088]
   14000d20e:	mov    ecx,0xade0ffff
   14000d213:	(bad)  
   14000d214:	call   rsp
   14000d216:	movabs eax,ds:0x7fbaf6ff90c6fcff
   14000d21f:	push   rax
   14000d221:	scas   eax,DWORD PTR es:[rdi]
   14000d222:	outs   dx,BYTE PTR ds:[rsi]
   14000d223:	(bad)  
   14000d224:	(bad)  
   14000d225:	movabs ds:0x8ee0ff4c99e5ff5b,al
   14000d22e:	cmp    edi,edi
   14000d230:	fild   DWORD PTR [rbx+0x7ad6ff2b]
   14000d236:	sbb    eax,0xa6dcfff
   14000d23b:	dec    ecx
   14000d23d:	movsxd eax,DWORD PTR [rax]
   14000d23f:	push   QWORD PTR [rbx-0x6a00ffb3]
   14000d245:	xor    eax,DWORD PTR [rax]
   14000d247:	sti    
   14000d248:	(bad)  
   14000d24a:	add    al,ah
   14000d24c:	sbb    ecx,DWORD PTR [rcx]
   14000d24e:	add    BYTE PTR [rax+rax*1+0x900000],dh
   14000d255:	add    BYTE PTR [rax],al
   14000d257:	ins    DWORD PTR es:[rdi],dx
   14000d258:	add    BYTE PTR [rax],al
   14000d25a:	add    BYTE PTR [rbp+0x0],al
   14000d25d:	add    BYTE PTR [rax],al
   14000d25f:	(bad)  
   14000d260:	add    BYTE PTR [rax],al
   14000d262:	add    BYTE PTR [rsi],al
	...
   14000d270:	sbb    al,BYTE PTR [rbp-0x32]
   14000d273:	(bad)  
   14000d274:	jp     0x14000d255
   14000d276:	(bad)  
   14000d277:	jmp    FWORD PTR [rcx-0x31]
   14000d27a:	(bad)  
   14000d27b:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000d27f:	push   QWORD PTR [rsi]
   14000d281:	mov    dh,dh
   14000d283:	jmp    QWORD PTR [rcx]
   14000d285:	ins    BYTE PTR es:[rdi],dx
   14000d286:	bnd jmp QWORD PTR [rcx]
   14000d289:	ins    BYTE PTR es:[rdi],dx
   14000d28a:	bnd jmp QWORD PTR [rsi]
   14000d28d:	ja     0x14000d284
   14000d28f:	push   QWORD PTR [rbx]
   14000d291:	cdq    
   14000d292:	(bad)  
   14000d293:	push   QWORD PTR [rdx]
   14000d295:	xchg   edx,eax
   14000d296:	cld    
   14000d297:	jmp    FWORD PTR [rdi]
   14000d299:	xor    ch,0xff
   14000d29c:	xor    DWORD PTR [rdx-0x7bcd000b],eax
   14000d2a2:	cmc    
   14000d2a3:	push   QWORD PTR [rsi+rax*4]
   14000d2a6:	idiv   bh
   14000d2a8:	ss mov esi,esi
   14000d2ab:	push   QWORD PTR [rdi]
   14000d2ad:	mov    esi,esi
   14000d2af:	(bad)  
   14000d2b0:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000d2b6:	idiv   edi
   14000d2b8:	cmp    al,0x92
   14000d2ba:	idiv   edi
   14000d2bc:	ds xchg ebp,eax
   14000d2be:	idiv   edi
   14000d2c0:	rex xchg edi,eax
   14000d2c2:	clc    
   14000d2c3:	call   QWORD PTR [rdx-0x7a]
   14000d2c6:	retf   0x78ff
   14000d2c9:	pop    rdx
   14000d2ca:	pop    rbp
   14000d2cb:	jmp    QWORD PTR [rsi-0x2d00e5b3]
   14000d2d1:	movabs eax,ds:0xe3ffffb0e3f9ff6e
   14000d2da:	mov    al,0xff
   14000d2dc:	call   rbx
   14000d2de:	movabs al,ds:0x81bcf7ff92c7fdff
   14000d2e7:	push   rcx
   14000d2e9:	mov    al,0x71
   14000d2eb:	(bad)  
   14000d2ec:	in     al,dx
   14000d2ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d2ee:	(bad)  
   14000d2ef:	jmp    rdi
   14000d2f1:	pushf  
   14000d2f2:	push   rcx
   14000d2f3:	jmp    rcx
   14000d2f5:	nop
   14000d2f6:	ds (bad) 
   14000d2f8:	fadd   QWORD PTR [rsi+0x7dd7ff30]
   14000d2fe:	and    edi,edi
   14000d300:	shl    DWORD PTR [rax+0xe],1
   14000d303:	dec    esp
   14000d305:	data16 add bh,bh
   14000d308:	mov    ecx,0xa3ff0053
   14000d30d:	cmp    eax,0x236aff00
   14000d312:	add    ch,ah
   14000d314:	xor    dl,BYTE PTR [rcx]
   14000d316:	add    dl,al
   14000d318:	add    BYTE PTR [rax],al
   14000d31a:	add    BYTE PTR [rdx+0x5f000000],dl
   14000d320:	add    BYTE PTR [rax],al
   14000d322:	add    BYTE PTR [rip+0x6000000],ah        # 0x14600d328
	...
   14000d330:	sbb    al,BYTE PTR [rbp-0x32]
   14000d333:	(bad)  
   14000d334:	jp     0x14000d315
   14000d336:	(bad)  
   14000d337:	jmp    FWORD PTR [rcx-0x31]
   14000d33a:	(bad)  
   14000d33b:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000d33f:	push   QWORD PTR [rsi]
   14000d341:	mov    dh,dh
   14000d343:	jmp    QWORD PTR [rcx]
   14000d345:	ins    BYTE PTR es:[rdi],dx
   14000d346:	bnd jmp QWORD PTR [rcx]
   14000d349:	ins    BYTE PTR es:[rdi],dx
   14000d34a:	bnd jmp QWORD PTR [rsi]
   14000d34d:	ja     0x14000d344
   14000d34f:	push   QWORD PTR [rbx]
   14000d351:	cdq    
   14000d352:	(bad)  
   14000d353:	push   QWORD PTR [rcx]
   14000d355:	xchg   edx,eax
   14000d356:	cld    
   14000d357:	jmp    FWORD PTR [rip+0x2ffff47e]        # 0x17000c7db
   14000d35d:	xor    ch,0xff
   14000d360:	xor    DWORD PTR [rdx-0x7bcd000b],eax
   14000d366:	cmc    
   14000d367:	push   QWORD PTR [rsi+rax*4]
   14000d36a:	idiv   bh
   14000d36c:	ss mov esi,esi
   14000d36f:	push   QWORD PTR [rdi]
   14000d371:	mov    esi,esi
   14000d373:	(bad)  
   14000d374:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000d37a:	idiv   edi
   14000d37c:	cmp    al,0x92
   14000d37e:	idiv   edi
   14000d380:	ds xchg ebp,eax
   14000d382:	idiv   edi
   14000d384:	rex xchg edi,eax
   14000d386:	clc    
   14000d387:	inc    DWORD PTR [rcx-0x67]
   14000d38a:	clc    
   14000d38b:	dec    DWORD PTR [rbp-0x73]
   14000d38e:	fcos   
   14000d390:	outs   dx,DWORD PTR ds:[rsi]
   14000d391:	push   0x469aff7c
   14000d396:	sbb    al,0xff
   14000d398:	(bad)  
   14000d399:	mov    DWORD PTR [rsi-0x1],edx
   14000d39c:	repnz rcr DWORD PTR [rsi-0x5b280001],1
   14000d3a3:	(bad)  
   14000d3a4:	call   rax
   14000d3a6:	popf   
   14000d3a7:	(bad)  
   14000d3a8:	std    
   14000d3a9:	leave  
   14000d3aa:	xchg   esp,eax
   14000d3ab:	(bad)  
   14000d3ac:	stc    
   14000d3ad:	mov    edi,0xb4f3ff86
   14000d3b2:	jne    0x14000d3b3
   14000d3b4:	in     eax,dx
   14000d3b5:	test   eax,0x9ee7ff64
   14000d3ba:	push   rbx
   14000d3bb:	jmp    rdx
   14000d3bd:	xchg   ebx,eax
   14000d3be:	rex.XB (bad) 
   14000d3c0:	fimul  WORD PTR [rcx+0x7ed8ff34]
   14000d3c6:	and    al,0xff
   14000d3c8:	shl    DWORD PTR [rbx+0x13],cl
   14000d3cb:	dec    esi
   14000d3cd:	imul   eax,DWORD PTR [rdi],0xffffffff
   14000d3d0:	(bad)  
   14000d3d1:	imul   ebx,DWORD PTR [rax],0xa46a9ff
   14000d3d7:	jmp    QWORD PTR [rcx+0x20]
   14000d3da:	add    cl,ah
   14000d3dc:	add    BYTE PTR [rax],al
   14000d3de:	add    BYTE PTR [rbx+0x57000000],bl
   14000d3e4:	add    BYTE PTR [rax],al
   14000d3e6:	add    BYTE PTR [rsi],dl
   14000d3e8:	add    BYTE PTR [rax],al
   14000d3ea:	add    BYTE PTR [rax],al
   14000d3ec:	add    BYTE PTR [rax],al
   14000d3ee:	add    BYTE PTR [rdx],al
   14000d3f0:	(bad)  
   14000d3f1:	jo     0x14000d3cd
   14000d3f3:	(bad)  
   14000d3f4:	jp     0x14000d3d5
   14000d3f6:	(bad)  
   14000d3f7:	jmp    FWORD PTR [rcx-0x31]
   14000d3fa:	(bad)  
   14000d3fb:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000d3ff:	push   QWORD PTR [rsi]
   14000d401:	mov    dh,dh
   14000d403:	jmp    QWORD PTR [rcx]
   14000d405:	ins    BYTE PTR es:[rdi],dx
   14000d406:	bnd jmp QWORD PTR [rcx]
   14000d409:	ins    BYTE PTR es:[rdi],dx
   14000d40a:	bnd jmp QWORD PTR [rsi]
   14000d40d:	ja     0x14000d404
   14000d40f:	push   QWORD PTR [rbx]
   14000d411:	cdq    
   14000d412:	(bad)  
   14000d413:	push   QWORD PTR [rax]
   14000d415:	(bad)  
   14000d416:	sti    
   14000d417:	jmp    FWORD PTR [rbx+rdi*2]
   14000d41a:	hlt    
   14000d41b:	jmp    FWORD PTR [rip+0x2ffff47e]        # 0x17000c89f
   14000d421:	xor    ch,0xff
   14000d424:	xor    DWORD PTR [rdx-0x7bcd000b],eax
   14000d42a:	cmc    
   14000d42b:	push   QWORD PTR [rsi+rax*4]
   14000d42e:	idiv   bh
   14000d430:	ss mov esi,esi
   14000d433:	push   QWORD PTR [rdi]
   14000d435:	mov    esi,esi
   14000d437:	(bad)  
   14000d438:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000d43e:	idiv   edi
   14000d440:	cmp    al,0x92
   14000d442:	idiv   edi
   14000d444:	ds xchg ebp,eax
   14000d446:	idiv   edi
   14000d448:	rex xchg edi,eax
   14000d44a:	clc    
   14000d44b:	inc    DWORD PTR [rcx-0x67]
   14000d44e:	clc    
   14000d44f:	inc    DWORD PTR [rbx-0x65]
   14000d452:	clc    
   14000d453:	dec    DWORD PTR [rdx-0x69]
   14000d456:	jmp    0x1ad63495a
   14000d45b:	dec    esp
   14000d45d:	xchg   ebx,eax
   14000d45e:	(bad)  
   14000d45f:	(bad)  
   14000d460:	(bad)  
   14000d461:	in     al,dx
   14000d462:	mov    ecx,0xaee1ffff
   14000d467:	(bad)  
   14000d468:	(bad)  
   14000d469:	fisub  DWORD PTR [rdi-0x612e0001]
   14000d46f:	(bad)  
   14000d470:	dec    bl
   14000d472:	xchg   edi,eax
   14000d473:	(bad)  
   14000d474:	cli    
   14000d475:	ret    0xff8b
   14000d478:	hlt    
   14000d479:	mov    ch,0x78
   14000d47b:	(bad)  
   14000d47c:	out    dx,eax
   14000d47d:	lods   al,BYTE PTR ds:[rsi]
   14000d47e:	imul   edi,edi,0xff58a1e9
   14000d484:	in     al,0x96
   14000d486:	rex.RXB (bad) 
   14000d488:	fimul  WORD PTR [rbx-0x641900c9]
   14000d48e:	rex.WRXB jmp r15
   14000d491:	pushf  
   14000d492:	push   rcx
   14000d493:	jmp    rdx
   14000d495:	xchg   ebx,eax
   14000d496:	rex.XB push QWORD PTR [r11+0x59ff1555]
   14000d49d:	(bad)  
   14000d49e:	add    bl,bl
   14000d4a0:	add    BYTE PTR [rax],al
   14000d4a2:	add    BYTE PTR [rbp+0x0],bh
   14000d4a5:	add    BYTE PTR [rax],al
   14000d4a7:	add    BYTE PTR es:[rax],al
   14000d4aa:	add    BYTE PTR [rax],al
   14000d4ac:	add    BYTE PTR [rax],al
   14000d4ae:	add    BYTE PTR [rdi],al
   14000d4b0:	(bad)  
   14000d4b1:	jo     0x14000d48d
   14000d4b3:	(bad)  
   14000d4b4:	jp     0x14000d495
   14000d4b6:	(bad)  
   14000d4b7:	jmp    QWORD PTR [rdi-0x34]
   14000d4ba:	(bad)  
   14000d4bb:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000d4bf:	push   QWORD PTR [rsi]
   14000d4c1:	mov    dh,dh
   14000d4c3:	jmp    QWORD PTR [rcx]
   14000d4c5:	ins    BYTE PTR es:[rdi],dx
   14000d4c6:	bnd jmp QWORD PTR [rcx]
   14000d4c9:	ins    BYTE PTR es:[rdi],dx
   14000d4ca:	repnz jmp FWORD PTR [rcx]
   14000d4cd:	cmp    al,0xff
   14000d4d0:	xor    ebx,DWORD PTR [rcx-0x77d10001]
   14000d4d6:	stc    
   14000d4d7:	jmp    FWORD PTR [rdx]
   14000d4d9:	js     0x14000d4cf
   14000d4db:	jmp    FWORD PTR [rbx+rdi*2]
   14000d4de:	hlt    
   14000d4df:	jmp    FWORD PTR [rip+0x2ffff47e]        # 0x17000c963
   14000d4e5:	xor    ch,0xff
   14000d4e8:	xor    DWORD PTR [rdx-0x7bcd000b],eax
   14000d4ee:	cmc    
   14000d4ef:	push   QWORD PTR [rsi+rax*4]
   14000d4f2:	idiv   bh
   14000d4f4:	ss mov esi,esi
   14000d4f7:	push   QWORD PTR [rdi]
   14000d4f9:	mov    esi,esi
   14000d4fb:	(bad)  
   14000d4fc:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000d502:	idiv   edi
   14000d504:	cmp    al,0x92
   14000d506:	idiv   edi
   14000d508:	ds xchg ebp,eax
   14000d50a:	idiv   edi
   14000d50c:	rex xchg edi,eax
   14000d50e:	clc    
   14000d50f:	inc    DWORD PTR [rcx-0x67]
   14000d512:	clc    
   14000d513:	inc    DWORD PTR [rbx-0x65]
   14000d516:	clc    
   14000d517:	dec    DWORD PTR [rdx-0x69]
   14000d51a:	jmp    0x15c47701e
   14000d51f:	call   rdx
   14000d521:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d522:	jno    0x14000d523
   14000d524:	stc    
   14000d525:	(bad)  
   14000d526:	mov    bh,0xff
   14000d528:	(bad)  
   14000d529:	out    dx,al
   14000d52a:	mov    ebx,0xb1e4ffff
   14000d52f:	(bad)  
   14000d530:	(bad)  
   14000d531:	(bad)  [rdx-0x5f2c0001]
   14000d537:	(bad)  
   14000d538:	dec    esi
   14000d53a:	fwait
   14000d53b:	(bad)  
   14000d53c:	sti    
   14000d53d:	(bad)  
   14000d53e:	(bad)  
   14000d53f:	push   rbp
   14000d541:	mov    ecx,0xaff0ff7d
   14000d546:	outs   dx,BYTE PTR ds:[rsi]
   14000d547:	push   rsp
   14000d549:	mov    bh,0x7a
   14000d54b:	(bad)  
   14000d54c:	dec    dl
   14000d54e:	xchg   edi,eax
   14000d54f:	(bad)  
   14000d550:	sti    
   14000d551:	(bad)  
   14000d552:	(bad)  
   14000d553:	push   rcx
   14000d555:	mov    cl,0x70
   14000d557:	jmp    rcx
   14000d559:	xchg   esp,eax
   14000d55a:	rex.WX dec QWORD PTR [rdx+0xf7002e]
   14000d561:	add    BYTE PTR [rax],al
   14000d563:	mov    eax,DWORD PTR [rax]
   14000d565:	add    BYTE PTR [rax],al
   14000d567:	sub    eax,0x0
   14000d56c:	(bad)  
   14000d56d:	cmp    ch,BYTE PTR [rsi-0x258fc8c7]
   14000d573:	(bad)  
   14000d574:	jp     0x14000d555
   14000d576:	(bad)  
   14000d577:	jmp    QWORD PTR [rbp-0x37]
   14000d57a:	(bad)  
   14000d57b:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000d57f:	push   QWORD PTR [rsi]
   14000d581:	mov    dh,dh
   14000d583:	jmp    QWORD PTR [rcx]
   14000d585:	ins    BYTE PTR es:[rdi],dx
   14000d586:	bnd jmp QWORD PTR [rcx]
   14000d589:	ins    BYTE PTR es:[rdi],dx
   14000d58a:	repnz jmp FWORD PTR [rdx]
   14000d58d:	cmp    ecx,0xffffffff
   14000d590:	xor    ebx,DWORD PTR [rcx-0x78d20001]
   14000d596:	stc    
   14000d597:	jmp    FWORD PTR [rax]
   14000d599:	jbe    0x14000d58e
   14000d59b:	jmp    FWORD PTR [rdx]
   14000d59d:	js     0x14000d593
   14000d59f:	jmp    FWORD PTR [rbx+rdi*2]
   14000d5a2:	hlt    
   14000d5a3:	jmp    FWORD PTR [rip+0x2ffff47e]        # 0x17000ca27
   14000d5a9:	xor    ch,0xff
   14000d5ac:	xor    DWORD PTR [rdx-0x7bcd000b],eax
   14000d5b2:	cmc    
   14000d5b3:	push   QWORD PTR [rsi+rax*4]
   14000d5b6:	idiv   bh
   14000d5b8:	ss mov esi,esi
   14000d5bb:	push   QWORD PTR [rdi]
   14000d5bd:	mov    esi,esi
   14000d5bf:	(bad)  
   14000d5c0:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000d5c6:	idiv   edi
   14000d5c8:	cmp    al,0x92
   14000d5ca:	idiv   edi
   14000d5cc:	ds xchg ebp,eax
   14000d5ce:	idiv   edi
   14000d5d0:	rex xchg edi,eax
   14000d5d2:	clc    
   14000d5d3:	inc    DWORD PTR [rcx-0x67]
   14000d5d6:	clc    
   14000d5d7:	inc    DWORD PTR [rbx-0x65]
   14000d5da:	clc    
   14000d5db:	call   FWORD PTR [rdx-0x7d]
   14000d5de:	mov    ebx,0x3da3ff
   14000d5e3:	(bad)  
   14000d5e4:	mov    ecx,0xcfff0d59
   14000d5e9:	xchg   ebp,eax
   14000d5ea:	pop    rax
   14000d5eb:	push   rdx
   14000d5ed:	fild   QWORD PTR [rdi+rdi*8-0x420f01]
   14000d5f4:	jmp    rdi
   14000d5f6:	mov    ah,0xff
   14000d5f8:	(bad)  
   14000d5f9:	fisubr WORD PTR [rbx-0x5d2a0001]
   14000d5ff:	(bad)  
   14000d600:	dec    esi
   14000d602:	fwait
   14000d603:	(bad)  
   14000d604:	std    
   14000d605:	(bad)  
   14000d606:	xchg   edx,eax
   14000d607:	(bad)  
   14000d608:	std    
   14000d609:	xlat   BYTE PTR ds:[rbx]
   14000d60a:	movabs ds:0xa3d6ffffa9dcffff,eax
   14000d613:	(bad)  
   14000d614:	dec    esi
   14000d616:	fwait
   14000d617:	push   rsp
   14000d619:	mov    bh,0x7a
   14000d61b:	call   FWORD PTR [rcx+0xff0033]
   14000d621:	add    BYTE PTR [rax],al
   14000d623:	add    DWORD PTR [rax],0x0
   14000d626:	add    BYTE PTR [rcx],ch
   14000d628:	add    BYTE PTR [rax],al
   14000d62a:	add    BYTE PTR [rax],al
   14000d62c:	(bad)  
   14000d62d:	cmp    eax,0x703749b5
   14000d632:	(bad)  
   14000d634:	jp     0x14000d615
   14000d636:	(bad)  
   14000d637:	jmp    QWORD PTR [rbp-0x37]
   14000d63a:	(bad)  
   14000d63b:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000d63f:	push   QWORD PTR [rsi]
   14000d641:	mov    dh,dh
   14000d643:	jmp    QWORD PTR [rcx]
   14000d645:	ins    BYTE PTR es:[rdi],dx
   14000d646:	bnd jmp QWORD PTR [rcx]
   14000d649:	ins    BYTE PTR es:[rdi],dx
   14000d64a:	repnz jmp FWORD PTR [rdx]
   14000d64d:	cmp    ecx,0xffffffff
   14000d650:	xor    ebx,DWORD PTR [rcx-0x79d20001]
   14000d656:	stc    
   14000d657:	jmp    QWORD PTR [rdi]
   14000d659:	je     0x14000d64e
   14000d65b:	jmp    FWORD PTR [rax]
   14000d65d:	jbe    0x14000d652
   14000d65f:	jmp    FWORD PTR [rdx]
   14000d661:	js     0x14000d657
   14000d663:	jmp    FWORD PTR [rdi]
   14000d665:	xor    ch,0xff
   14000d668:	xor    eax,0x2ffff687
   14000d66d:	xor    ch,0xff
   14000d670:	xor    DWORD PTR [rdx-0x7bcd000b],eax
   14000d676:	cmc    
   14000d677:	push   QWORD PTR [rsi+rax*4]
   14000d67a:	idiv   bh
   14000d67c:	ss mov esi,esi
   14000d67f:	push   QWORD PTR [rdi]
   14000d681:	mov    esi,esi
   14000d683:	(bad)  
   14000d684:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000d68a:	idiv   edi
   14000d68c:	cmp    al,0x92
   14000d68e:	idiv   edi
   14000d690:	ds xchg ebp,eax
   14000d692:	idiv   edi
   14000d694:	rex xchg edi,eax
   14000d696:	clc    
   14000d697:	inc    DWORD PTR [rcx-0x67]
   14000d69a:	clc    
   14000d69b:	call   FWORD PTR [rax-0x7f]
   14000d69e:	mov    edx,0x2461bbff
   14000d6a3:	(bad)  
   14000d6a4:	fild   DWORD PTR [rbp+rbp*1+0xa66c9ff]
   14000d6ab:	jmp    QWORD PTR [rsi-0x4600ffc0]
   14000d6b1:	jae    0x14000d6f3
   14000d6b3:	jmp    rsi
   14000d6b5:	(bad)  
   14000d6b6:	xchg   esp,eax
   14000d6b7:	(bad)  
   14000d6b8:	push   rdx
   14000d6ba:	mov    edi,0xb6e9ffff
   14000d6bf:	(bad)  
   14000d6c0:	jmp    rax
   14000d6c2:	lods   eax,DWORD PTR ds:[rsi]
   14000d6c3:	(bad)  
   14000d6c4:	(bad)  
   14000d6c5:	fsubr  QWORD PTR [rcx-0x46130001]
   14000d6cb:	(bad)  
   14000d6cc:	(bad)  
   14000d6cd:	in     eax,dx
   14000d6ce:	sar    bh,0xff
   14000d6d1:	(bad)  
   14000d6d2:	mov    ecx,0xa7daffff
   14000d6d7:	(bad)  
   14000d6d8:	dec    ch
   14000d6da:	cdq    
   14000d6db:	call   QWORD PTR [rdx+0xfa0031]
   14000d6e1:	add    BYTE PTR [rax],al
   14000d6e3:	data16 add BYTE PTR [rax],al
   14000d6e6:	add    BYTE PTR [rbx],bl
   14000d6e8:	add    BYTE PTR [rax],al
   14000d6ea:	add    BYTE PTR [rax],al
   14000d6ec:	(bad)  
   14000d6ed:	cmp    al,0xb3
   14000d6ef:	rex.WX
   14000d6f0:	xchg   r8b,r12b
   14000d6f3:	(bad)  
   14000d6f4:	jp     0x14000d6d5
   14000d6f6:	(bad)  
   14000d6f7:	jmp    QWORD PTR [rbp-0x37]
   14000d6fa:	(bad)  
   14000d6fb:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000d6ff:	push   QWORD PTR [rsi]
   14000d701:	mov    dh,dh
   14000d703:	jmp    QWORD PTR [rcx]
   14000d705:	ins    BYTE PTR es:[rdi],dx
   14000d706:	bnd jmp QWORD PTR [rcx]
   14000d709:	ins    BYTE PTR es:[rdi],dx
   14000d70a:	repnz jmp FWORD PTR [rdx]
   14000d70d:	cmp    ecx,0xffffffff
   14000d710:	xor    ebx,DWORD PTR [rcx-0x7bd40001]
   14000d716:	stc    
   14000d717:	jmp    QWORD PTR [rip+0x27fff372]        # 0x16800ca8f
   14000d71d:	je     0x14000d712
   14000d71f:	jmp    FWORD PTR [rax]
   14000d721:	jbe    0x14000d716
   14000d723:	(bad)  
   14000d724:	cmp    DWORD PTR [rbp-0x33990009],ecx
   14000d72a:	(bad)  
   14000d72b:	call   FWORD PTR [rdi-0x3d]
   14000d72e:	(bad)  
   14000d72f:	call   QWORD PTR [rcx-0x50]
   14000d732:	sti    
   14000d733:	inc    DWORD PTR [rbp-0x62]
   14000d736:	stc    
   14000d737:	(bad)  
   14000d738:	cmp    DWORD PTR [rbp-0x79cb000a],ecx
   14000d73e:	idiv   bh
   14000d740:	ss mov esi,esi
   14000d743:	push   QWORD PTR [rdi]
   14000d745:	mov    esi,esi
   14000d747:	(bad)  
   14000d748:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000d74e:	idiv   edi
   14000d750:	cmp    al,0x92
   14000d752:	idiv   edi
   14000d754:	ds xchg ebp,eax
   14000d756:	idiv   edi
   14000d758:	rex xchg edi,eax
   14000d75a:	clc    
   14000d75b:	inc    DWORD PTR [rdi-0x6e]
   14000d75e:	jmp    0x16f476162
   14000d763:	(bad)  
   14000d764:	mov    esp,0xe5ff3066
   14000d769:	lahf   
   14000d76a:	(bad)  
   14000d76b:	(bad)  
   14000d76c:	fisttp WORD PTR [rcx+rdi*1+0x116bcbff]
   14000d773:	jmp    FWORD PTR [rsi+rax*2+0x70c2ff00]
   14000d77a:	es (bad) 
   14000d77c:	fcom   QWORD PTR [rbx-0x310d00c3]
   14000d782:	mov    ?,edi
   14000d784:	push   rax
   14000d786:	mov    ebp,0xd5feffff
   14000d78b:	(bad)  
   14000d78c:	(bad)  
   14000d78d:	push   rdx
   14000d78f:	(bad)  
   14000d790:	(bad)  
   14000d791:	(bad)  
   14000d792:	fcos   
   14000d794:	(bad)  
   14000d795:	call   0xdadad74f
   14000d79a:	push   QWORD PTR [esi+0x27]
   14000d79e:	add    dh,cl
   14000d7a0:	add    BYTE PTR [rax],al
   14000d7a2:	add    BYTE PTR [rax],bh
   14000d7a4:	add    BYTE PTR [rax],al
   14000d7a6:	add    BYTE PTR [rdx],cl
   14000d7a8:	add    BYTE PTR [rax],al
   14000d7aa:	add    BYTE PTR [rax],al
   14000d7ac:	(bad)  
   14000d7ad:	cmp    ch,BYTE PTR [rsi-0x1863acb4]
   14000d7b3:	(bad)  
   14000d7b4:	jp     0x14000d795
   14000d7b6:	(bad)  
   14000d7b7:	jmp    QWORD PTR [rbp-0x37]
   14000d7ba:	(bad)  
   14000d7bb:	call   QWORD PTR [rcx+rsi*4-0x5]
   14000d7bf:	call   QWORD PTR [rbp-0x4f]
   14000d7c2:	cli    
   14000d7c3:	call   QWORD PTR [rbx-0x51]
   14000d7c6:	cli    
   14000d7c7:	call   FWORD PTR [rax-0x49]
   14000d7ca:	cld    
   14000d7cb:	inc    DWORD PTR [rdi+riz*4-0x3]
   14000d7cf:	push   QWORD PTR [rbx]
   14000d7d1:	cdq    
   14000d7d2:	(bad)  
   14000d7d3:	jmp    FWORD PTR [rax]
   14000d7d5:	jge    0x14000d7ce
   14000d7d7:	jmp    QWORD PTR [rbx]
   14000d7d9:	outs   dx,DWORD PTR ds:[rsi]
   14000d7da:	bnd jmp QWORD PTR [rip+0x27fff372]        # 0x16800cb53
   14000d7e1:	je     0x14000d7d6
   14000d7e3:	(bad)  
   14000d7e4:	cmp    BYTE PTR [rsi+rsi*8-0x339901],cl
   14000d7eb:	call   QWORD PTR [rsi-0x7c000524]
   14000d7f1:	(bad)  
   14000d7f2:	sti    
   14000d7f3:	jmp    QWORD PTR [rsi-0x34]
   14000d7f6:	(bad)  
   14000d7f7:	jmp    QWORD PTR [rsi-0x34]
   14000d7fa:	(bad)  
   14000d7fb:	jmp    QWORD PTR [rax-0x3d]
   14000d7fe:	(bad)  
   14000d7ff:	call   QWORD PTR [rbx-0x4e]
   14000d802:	cld    
   14000d803:	dec    DWORD PTR [rax-0x5d]
   14000d806:	stc    
   14000d807:	(bad)  
   14000d808:	cmp    eax,0x39fff793
   14000d80d:	(bad)  
   14000d80e:	idiv   bh
   14000d810:	cmp    ecx,DWORD PTR [rdi-0x6dc30009]
   14000d816:	idiv   edi
   14000d818:	ds xchg ebp,eax
   14000d81a:	idiv   edi
   14000d81c:	rex xchg edi,eax
   14000d81e:	clc    
   14000d81f:	inc    DWORD PTR [rcx-0x67]
   14000d822:	clc    
   14000d823:	jmp    QWORD PTR [rbx+0x73]
   14000d826:	fwait
   14000d827:	dec    DWORD PTR [rcx-0x4800d0b9]
   14000d82d:	(bad)  
   14000d82e:	sub    edi,edi
   14000d830:	fist   DWORD PTR [rcx-0x681b00ac]
   14000d836:	rex.WX call rsp
   14000d839:	jbe    0x14000d853
   14000d83b:	dec    esp
   14000d83d:	data16 add bh,bh
   14000d840:	ret    0x5c
   14000d843:	dec    ecx
   14000d845:	mov    BYTE PTR [rdi+rdi*8-0x7],cl
   14000d849:	bnd ret 0xffff
   14000d84d:	jmp    rdx
   14000d84f:	(bad)  
   14000d850:	(bad)  
   14000d851:	std    
   14000d852:	sar    edi,1
   14000d854:	out    0xbd,al
   14000d856:	mov    bh,bh
   14000d858:	pushf  
   14000d859:	cmp    al,0xb
   14000d85b:	idiv   BYTE PTR [rbx]
   14000d85d:	adc    al,0x0
   14000d85f:	push   rbx
   14000d860:	add    BYTE PTR [rax],al
   14000d862:	add    BYTE PTR [rax],dl
   14000d864:	add    BYTE PTR [rax],al
   14000d866:	add    BYTE PTR [rcx],al
   14000d868:	add    BYTE PTR [rax],al
   14000d86a:	add    BYTE PTR [rax],al
   14000d86c:	(bad)  
   14000d86d:	cmp    ch,BYTE PTR [rsi-0x1863aca1]
   14000d873:	inc    DWORD PTR [rcx-0x7c00001a]
   14000d879:	call   0x12a85d87d
   14000d87e:	(bad)  
   14000d87f:	(bad)  
   14000d880:	jl     0x14000d863
   14000d882:	(bad)  
   14000d883:	push   QWORD PTR [rbx-0x27]
   14000d886:	(bad)  
   14000d887:	jmp    FWORD PTR [rdx-0x30]
   14000d88a:	(bad)  
   14000d88b:	inc    DWORD PTR [rsi-0x54]
   14000d88e:	(bad)  
   14000d88f:	push   QWORD PTR [rbx]
   14000d891:	cdq    
   14000d892:	(bad)  
   14000d893:	jmp    QWORD PTR [rsi]
   14000d895:	ja     0x14000d88c
   14000d897:	jmp    QWORD PTR [rcx]
   14000d899:	ins    DWORD PTR es:[rdi],dx
   14000d89a:	bnd jmp QWORD PTR [rbx]
   14000d89d:	outs   dx,DWORD PTR ds:[rsi]
   14000d89e:	bnd jmp QWORD PTR [rip+0x36fff372]        # 0x17700cc17
   14000d8a5:	mov    dh,dh
   14000d8a7:	jmp    QWORD PTR [rsi-0x34]
   14000d8aa:	(bad)  
   14000d8ab:	(bad)  
   14000d8ac:	fptan  
   14000d8ae:	cmc    
   14000d8af:	(bad)  
   14000d8b0:	(bad)  
   14000d8b1:	(bad)  
   14000d8b2:	in     eax,dx
   14000d8b3:	(bad)  
   14000d8b4:	(bad)  
   14000d8b5:	(bad)  
   14000d8b6:	call   0x12cf3b2ba
   14000d8bb:	push   QWORD PTR [rbx-0x73000e1a]
   14000d8c1:	fincstp 
   14000d8c3:	jmp    QWORD PTR [rsi-0x34]
   14000d8c6:	(bad)  
   14000d8c7:	jmp    QWORD PTR [rsi-0x34]
   14000d8ca:	(bad)  
   14000d8cb:	jmp    QWORD PTR [rax-0x3c]
   14000d8ce:	(bad)  
   14000d8cf:	call   QWORD PTR [rbp-0x4b]
   14000d8d2:	cld    
   14000d8d3:	dec    DWORD PTR [rbx-0x59]
   14000d8d6:	cli    
   14000d8d7:	inc    DWORD PTR [rdx-0x67]
   14000d8da:	clc    
   14000d8db:	(bad)  
   14000d8dc:	ds xchg ebp,eax
   14000d8de:	idiv   edi
   14000d8e0:	rex xchg edi,eax
   14000d8e2:	clc    
   14000d8e3:	inc    DWORD PTR [rcx-0x67]
   14000d8e6:	clc    
   14000d8e7:	inc    DWORD PTR [rbx-0x65]
   14000d8ea:	clc    
   14000d8eb:	call   FWORD PTR [rdx-0x7d]
   14000d8ee:	mov    ebx,0x4e557fff
   14000d8f3:	jmp    FWORD PTR [rbx-0x3a00e5b2]
   14000d8f9:	jno    0x14000d932
   14000d8fb:	jmp    QWORD PTR [rbx-0x7d00f5c0]
   14000d901:	sub    eax,DWORD PTR [rax]
   14000d903:	(bad)  
   14000d904:	xchg   BYTE PTR [rip+0x3297a300],ch        # 0x172987c0a
   14000d90a:	add    bl,ah
   14000d90c:	mov    bl,0x66
   14000d90e:	xor    edi,edi
   14000d910:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d911:	rex.WRB sbb r15b,r15b
   14000d914:	mov    gs,WORD PTR [rdi]
   14000d916:	add    BYTE PTR [rsi+rdx*2+0x39001d],bh
   14000d91d:	add    BYTE PTR [rax],al
   14000d91f:	or     al,BYTE PTR [rax]
   14000d921:	add    BYTE PTR [rax],al
   14000d923:	add    DWORD PTR [rax],eax
   14000d925:	add    BYTE PTR [rax],al
   14000d927:	add    BYTE PTR [rax],al
   14000d929:	add    BYTE PTR [rax],al
   14000d92b:	add    BYTE PTR [rax],bl
   14000d92d:	(bad)  
   14000d92e:	mov    esp,0xe7a0588c
   14000d933:	call   QWORD PTR [rbp-0x73000005]
   14000d939:	repnz (bad) 
   14000d93b:	inc    DWORD PTR [rdx+rbp*8-0x1e830001]
   14000d942:	(bad)  
   14000d943:	push   QWORD PTR [rbx-0x27]
   14000d946:	(bad)  
   14000d947:	call   FWORD PTR [rbp-0x42]
   14000d94a:	std    
   14000d94b:	(bad)  
   14000d94c:	cmp    esp,DWORD PTR [rax-0x66cc0002]
   14000d952:	(bad)  
   14000d953:	jmp    QWORD PTR [rsi]
   14000d955:	ja     0x14000d94c
   14000d957:	jmp    QWORD PTR [rcx]
   14000d959:	ins    BYTE PTR es:[rdi],dx
   14000d95a:	bnd jmp QWORD PTR [rcx]
   14000d95d:	ins    DWORD PTR es:[rdi],dx
   14000d95e:	bnd jmp QWORD PTR [rbx]
   14000d961:	outs   dx,DWORD PTR ds:[rsi]
   14000d962:	repnz inc DWORD PTR [rcx-0x67]
   14000d966:	clc    
   14000d967:	jmp    QWORD PTR [rsi-0x34]
   14000d96a:	(bad)  
   14000d96b:	(bad)  
   14000d96c:	fptan  
   14000d96e:	clc    
   14000d96f:	(bad)  
   14000d970:	(bad)  
   14000d971:	push   rdx
   14000d973:	(bad)  
   14000d974:	(bad)  
   14000d975:	(bad)  
   14000d976:	in     eax,dx
   14000d977:	(bad)  
   14000d978:	(bad)  
   14000d979:	(bad)  
   14000d97a:	call   0x12600d97e
   14000d97f:	(bad)  
   14000d980:	(bad)  
   14000d981:	jmp    rcx
   14000d983:	(bad)  
   14000d984:	(bad)  
   14000d985:	(bad)  
   14000d986:	(bad)  
   14000d988:	fptan  
   14000d98a:	loop   0x14000d98b
   14000d98c:	mov    bl,0xe6
   14000d98e:	(bad)  
   14000d98f:	call   QWORD PTR [rsi+0x70fff1dc]
   14000d995:	iret   
   14000d996:	cld    
   14000d997:	jmp    QWORD PTR [rsi-0x34]
   14000d99a:	(bad)  
   14000d99b:	jmp    QWORD PTR [rcx-0x3b]
   14000d99e:	(bad)  
   14000d99f:	call   QWORD PTR [rax-0x53]
   14000d9a2:	sti    
   14000d9a3:	inc    DWORD PTR [rax-0x69]
   14000d9a6:	clc    
   14000d9a7:	inc    DWORD PTR [rcx-0x67]
   14000d9aa:	clc    
   14000d9ab:	inc    DWORD PTR [rbx-0x65]
   14000d9ae:	clc    
   14000d9af:	inc    DWORD PTR [rbp-0x62]
   14000d9b2:	stc    
   14000d9b3:	call   QWORD PTR [rcx-0x6e]
   14000d9b6:	(bad)  
   14000d9b8:	push   rdi
   14000d9b9:	rex.WB jns 0x14000d9bb
   14000d9bc:	and    DWORD PTR [rbx],ebx
   14000d9be:	xor    eax,0xbb
   14000d9c3:	rex.WB add BYTE PTR [r8],al
   14000d9c6:	add    BYTE PTR [rip+0x0],cl        # 0x14000d9cc
	...
   14000d9ec:	sbb    BYTE PTR [rdi],bh
   14000d9ee:	mov    esp,0xeaad618c
   14000d9f3:	call   QWORD PTR [rbp-0x73000005]
   14000d9f9:	repnz (bad) 
   14000d9fb:	push   QWORD PTR [rbp-0x28]
   14000d9fe:	(bad)  
   14000d9ff:	call   QWORD PTR [rax-0x56]
   14000da02:	stc    
   14000da03:	jmp    QWORD PTR [rsi]
   14000da05:	jae    0x14000d9fa
   14000da07:	jmp    QWORD PTR [rcx]
   14000da09:	ins    BYTE PTR es:[rdi],dx
   14000da0a:	repnz jmp FWORD PTR [rdi]
   14000da0d:	mov    ?,esp
   14000da0f:	push   QWORD PTR [rbx]
   14000da11:	cdq    
   14000da12:	(bad)  
   14000da13:	jmp    QWORD PTR [rsi]
   14000da15:	ja     0x14000da0c
   14000da17:	jmp    QWORD PTR [rcx]
   14000da19:	ins    BYTE PTR es:[rdi],dx
   14000da1a:	bnd jmp QWORD PTR [rcx]
   14000da1d:	ins    BYTE PTR es:[rdi],dx
   14000da1e:	bnd jmp QWORD PTR [rcx]
   14000da21:	ins    DWORD PTR es:[rdi],dx
   14000da22:	repnz inc DWORD PTR [rbp+rbx*4-0x7]
   14000da27:	jmp    QWORD PTR [rsi-0x34]
   14000da2a:	(bad)  
   14000da2b:	(bad)  
   14000da2c:	fptan  
   14000da2e:	sti    
   14000da2f:	(bad)  
   14000da30:	(bad)  
   14000da31:	push   rsi
   14000da33:	(bad)  
   14000da34:	(bad)  
   14000da35:	push   rdx
   14000da37:	(bad)  
   14000da38:	(bad)  
   14000da39:	(bad)  
   14000da3a:	in     eax,dx
   14000da3b:	(bad)  
   14000da3c:	(bad)  
   14000da3d:	(bad)  
   14000da3e:	call   0x12600da42
   14000da43:	(bad)  
   14000da44:	(bad)  
   14000da45:	jmp    rcx
   14000da47:	(bad)  
   14000da48:	(bad)  
   14000da49:	(bad)  
   14000da4a:	(bad)  
   14000da4c:	(bad)  
   14000da4d:	(bad)  
   14000da4e:	fdivr  st,st(7)
   14000da50:	(bad)  
   14000da51:	call   rsp
   14000da53:	(bad)  
   14000da54:	(bad)  
   14000da55:	call   rax
   14000da57:	jmp    rdx
   14000da59:	cmc    
   14000da5a:	(bad)  
   14000da5b:	inc    DWORD PTR [rbx+0x5cfff5d6]
   14000da61:	mov    esi,0x953efffd
   14000da66:	idiv   edi
   14000da68:	rex xchg edi,eax
   14000da6a:	clc    
   14000da6b:	inc    DWORD PTR [rcx-0x67]
   14000da6e:	clc    
   14000da6f:	inc    DWORD PTR [rbx-0x65]
   14000da72:	clc    
   14000da73:	inc    DWORD PTR [rbp-0x62]
   14000da76:	stc    
   14000da77:	jmp    QWORD PTR [rip+0x9ffd95b]        # 0x14a00b3d8
   14000da7d:	sbb    DWORD PTR [rdx-0x4c],ecx
   14000da80:	add    BYTE PTR [rax],al
   14000da82:	add    BYTE PTR [rdi+0x0],al
   14000da85:	add    BYTE PTR [rax],al
   14000da87:	or     al,0x0
	...
   14000daa9:	add    BYTE PTR [rax],al
   14000daab:	add    BYTE PTR [rax],bl
   14000daad:	(bad)  
   14000daae:	mov    esp,0xf3d0788c
   14000dab3:	dec    DWORD PTR [rdi+0x6afffff5]
   14000dab9:	int    0xfe
   14000dabb:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000dabf:	push   QWORD PTR [rsi]
   14000dac1:	mov    dh,dh
   14000dac3:	jmp    QWORD PTR [rcx]
   14000dac5:	ins    BYTE PTR es:[rdi],dx
   14000dac6:	bnd jmp QWORD PTR [rcx]
   14000dac9:	ins    BYTE PTR es:[rdi],dx
   14000daca:	repnz jmp FWORD PTR [rdi]
   14000dacd:	mov    ?,esp
   14000dacf:	push   QWORD PTR [rbx]
   14000dad1:	cdq    
   14000dad2:	(bad)  
   14000dad3:	jmp    QWORD PTR [rsi]
   14000dad5:	ja     0x14000dacc
   14000dad7:	jmp    QWORD PTR [rcx]
   14000dad9:	ins    BYTE PTR es:[rdi],dx
   14000dada:	bnd jmp QWORD PTR [rcx]
   14000dadd:	ins    BYTE PTR es:[rdi],dx
   14000dade:	bnd jmp QWORD PTR [rcx]
   14000dae1:	ins    BYTE PTR es:[rdi],dx
   14000dae2:	repnz inc DWORD PTR [rsp+rbx*4-0x7]
   14000dae7:	jmp    QWORD PTR [rsi-0x34]
   14000daea:	(bad)  
   14000daeb:	(bad)  
   14000daec:	(bad)  
   14000daed:	(bad)  
   14000daee:	(bad)  
   14000daef:	(bad)  
   14000daf0:	(bad)  
   14000daf1:	(bad)  
   14000daf2:	stc    
   14000daf3:	(bad)  
   14000daf4:	(bad)  
   14000daf5:	push   rsi
   14000daf7:	(bad)  
   14000daf8:	(bad)  
   14000daf9:	push   rdx
   14000dafb:	(bad)  
   14000dafc:	(bad)  
   14000dafd:	(bad)  
   14000dafe:	in     eax,dx
   14000daff:	(bad)  
   14000db00:	(bad)  
   14000db01:	(bad)  
   14000db02:	call   0x12600db06
   14000db07:	(bad)  
   14000db08:	(bad)  
   14000db09:	jmp    rcx
   14000db0b:	(bad)  
   14000db0c:	(bad)  
   14000db0d:	(bad)  
   14000db0e:	(bad)  
   14000db10:	(bad)  
   14000db11:	(bad)  
   14000db12:	fdivr  st,st(7)
   14000db14:	(bad)  
   14000db15:	call   rsp
   14000db17:	(bad)  
   14000db18:	(bad)  
   14000db19:	call   rax
   14000db1b:	dec    DWORD PTR [rcx+rbx*8-0x42a4000e]
   14000db22:	std    
   14000db23:	(bad)  
   14000db24:	cmp    al,0x92
   14000db26:	idiv   edi
   14000db28:	ds xchg ebp,eax
   14000db2a:	idiv   edi
   14000db2c:	rex xchg edi,eax
   14000db2e:	clc    
   14000db2f:	inc    DWORD PTR [rcx-0x67]
   14000db32:	clc    
   14000db33:	inc    DWORD PTR [rbx-0x65]
   14000db36:	clc    
   14000db37:	jmp    QWORD PTR [rip+0x9ffd95b]        # 0x14a00b498
   14000db3d:	sbb    DWORD PTR [rdx-0x4c],ecx
   14000db40:	add    BYTE PTR [rax],al
   14000db42:	add    BYTE PTR [rdi+0x0],al
   14000db45:	add    BYTE PTR [rax],al
   14000db47:	or     al,0x0
	...
   14000db69:	add    BYTE PTR [rax],al
   14000db6b:	add    BYTE PTR [rdi],dl
   14000db6d:	ds mov eax,0xf3cb748f
   14000db73:	(bad)  
   14000db74:	jp     0x14000db55
   14000db76:	(bad)  
   14000db77:	jmp    QWORD PTR [rcx-0x3d]
   14000db7a:	(bad)  
   14000db7b:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000db7f:	push   QWORD PTR [rsi]
   14000db81:	mov    dh,dh
   14000db83:	jmp    QWORD PTR [rcx]
   14000db85:	ins    BYTE PTR es:[rdi],dx
   14000db86:	bnd jmp QWORD PTR [rcx]
   14000db89:	ins    BYTE PTR es:[rdi],dx
   14000db8a:	repnz jmp FWORD PTR [rdi]
   14000db8d:	mov    ?,esp
   14000db8f:	push   QWORD PTR [rbx]
   14000db91:	cdq    
   14000db92:	(bad)  
   14000db93:	jmp    QWORD PTR [rbx]
   14000db95:	jb     0x14000db8b
   14000db97:	jmp    QWORD PTR [rcx]
   14000db99:	ins    BYTE PTR es:[rdi],dx
   14000db9a:	bnd jmp QWORD PTR [rcx]
   14000db9d:	ins    BYTE PTR es:[rdi],dx
   14000db9e:	bnd jmp QWORD PTR [rcx]
   14000dba1:	ins    BYTE PTR es:[rdi],dx
   14000dba2:	repnz inc DWORD PTR [rsp+rbx*4-0x7]
   14000dba7:	jmp    QWORD PTR [rsi-0x34]
   14000dbaa:	(bad)  
   14000dbab:	inc    DWORD PTR [rbx-0x6000002a]
   14000dbb1:	(bad)  
   14000dbb3:	(bad)  
   14000dbb4:	mov    esp,0xd9fffce9
   14000dbb9:	repnz clc 
   14000dbbb:	(bad)  
   14000dbbc:	(bad)  
   14000dbbd:	push   rdx
   14000dbbf:	(bad)  
   14000dbc0:	(bad)  
   14000dbc1:	(bad)  
   14000dbc2:	in     eax,dx
   14000dbc3:	(bad)  
   14000dbc4:	(bad)  
   14000dbc5:	(bad)  
   14000dbc6:	call   0x12600dbca
   14000dbcb:	(bad)  
   14000dbcc:	(bad)  
   14000dbcd:	jmp    rcx
   14000dbcf:	(bad)  
   14000dbd0:	(bad)  
   14000dbd1:	(bad)  
   14000dbd2:	(bad)  
   14000dbd4:	(bad)  
   14000dbd5:	(bad)  
   14000dbd6:	fdivr  st,st(7)
   14000dbd8:	(bad)  
   14000dbd9:	call   rsp
   14000dbdb:	dec    DWORD PTR [rcx+rbx*8-0x43a4000c]
   14000dbe2:	std    
   14000dbe3:	(bad)  
   14000dbe4:	cmp    ecx,DWORD PTR [rdi-0x6dc30009]
   14000dbea:	idiv   edi
   14000dbec:	ds xchg ebp,eax
   14000dbee:	idiv   edi
   14000dbf0:	rex xchg edi,eax
   14000dbf2:	clc    
   14000dbf3:	inc    DWORD PTR [rcx-0x67]
   14000dbf6:	clc    
   14000dbf7:	jmp    QWORD PTR [rdx+rbx*2]
   14000dbfa:	fcos   
   14000dbfc:	or     DWORD PTR [rcx],ebx
   14000dbfe:	rex.WX mov spl,0x0
   14000dc01:	add    BYTE PTR [rax],al
   14000dc03:	rex.RXB add BYTE PTR [r8],r8b
   14000dc06:	add    BYTE PTR [rax+rax*1],cl
	...
   14000dc29:	add    BYTE PTR [rax],al
   14000dc2b:	add    BYTE PTR [rax],bl
   14000dc2d:	rex.B ret 0x70ba
   14000dc31:	(bad)  
   14000dc32:	repz (bad) 
   14000dc34:	jp     0x14000dc15
   14000dc36:	(bad)  
   14000dc37:	jmp    QWORD PTR [rcx-0x3d]
   14000dc3a:	(bad)  
   14000dc3b:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000dc3f:	push   QWORD PTR [rsi]
   14000dc41:	mov    dh,dh
   14000dc43:	jmp    QWORD PTR [rcx]
   14000dc45:	ins    BYTE PTR es:[rdi],dx
   14000dc46:	bnd jmp QWORD PTR [rcx]
   14000dc49:	ins    BYTE PTR es:[rdi],dx
   14000dc4a:	repnz jmp FWORD PTR [rdi]
   14000dc4d:	mov    ?,esp
   14000dc4f:	push   QWORD PTR [rbx]
   14000dc51:	cdq    
   14000dc52:	(bad)  
   14000dc53:	jmp    QWORD PTR [rcx]
   14000dc55:	ins    BYTE PTR es:[rdi],dx
   14000dc56:	bnd jmp QWORD PTR [rcx]
   14000dc59:	ins    BYTE PTR es:[rdi],dx
   14000dc5a:	bnd jmp QWORD PTR [rcx]
   14000dc5d:	ins    BYTE PTR es:[rdi],dx
   14000dc5e:	bnd jmp QWORD PTR [rcx]
   14000dc61:	ins    BYTE PTR es:[rdi],dx
   14000dc62:	repnz jmp FWORD PTR [rsi]
   14000dc65:	jle    0x14000dc5b
   14000dc67:	inc    DWORD PTR [rsp+rbx*4-0x7]
   14000dc6b:	call   QWORD PTR [rax-0x52]
   14000dc6e:	sti    
   14000dc6f:	call   FWORD PTR [rsi-0x40]
   14000dc72:	std    
   14000dc73:	jmp    QWORD PTR [rsi-0x34]
   14000dc76:	(bad)  
   14000dc77:	jmp    QWORD PTR [rsi-0x34]
   14000dc7a:	(bad)  
   14000dc7b:	jmp    QWORD PTR [rsi-0x34]
   14000dc7e:	(bad)  
   14000dc7f:	inc    DWORD PTR [rbx-0x5600032a]
   14000dc85:	loop   0x14000dc7d
   14000dc87:	inc    esi
   14000dc89:	in     al,dx
   14000dc8a:	icebp  
   14000dc8b:	jmp    rdx
   14000dc8d:	cmc    
   14000dc8e:	jmp    0x12200dc92
   14000dc93:	(bad)  
   14000dc94:	(bad)  
   14000dc95:	(bad)  
   14000dc96:	(bad)  
   14000dc98:	(bad)  
   14000dc99:	(bad)  
   14000dc9a:	fdivr  st,st(7)
   14000dc9c:	mov    ecx,ds
   14000dc9e:	cmc    
   14000dc9f:	call   FWORD PTR [rbx-0x44]
   14000dca2:	std    
   14000dca3:	(bad)  
   14000dca4:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000dcaa:	idiv   edi
   14000dcac:	cmp    al,0x92
   14000dcae:	idiv   edi
   14000dcb0:	ds xchg ebp,eax
   14000dcb2:	idiv   edi
   14000dcb4:	rex xchg edi,eax
   14000dcb6:	clc    
   14000dcb7:	jmp    QWORD PTR [rdx+rbx*2]
   14000dcba:	fcos   
   14000dcbc:	or     DWORD PTR [rcx],ebx
   14000dcbe:	rex.WX mov spl,0x0
   14000dcc1:	add    BYTE PTR [rax],al
   14000dcc3:	rex.RXB add BYTE PTR [r8],r8b
   14000dcc6:	add    BYTE PTR [rax+rax*1],cl
	...
   14000dce9:	add    BYTE PTR [rax],al
   14000dceb:	add    BYTE PTR [rcx],bl
   14000dced:	(bad)
   14000dcf1:	(bad)  
   14000dcf2:	repz (bad) 
   14000dcf4:	jp     0x14000dcd5
   14000dcf6:	(bad)  
   14000dcf7:	jmp    QWORD PTR [rcx-0x3d]
   14000dcfa:	(bad)  
   14000dcfb:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000dcff:	push   QWORD PTR [rsi]
   14000dd01:	mov    dh,dh
   14000dd03:	jmp    QWORD PTR [rcx]
   14000dd05:	ins    BYTE PTR es:[rdi],dx
   14000dd06:	bnd jmp QWORD PTR [rcx]
   14000dd09:	ins    BYTE PTR es:[rdi],dx
   14000dd0a:	repnz push QWORD PTR [rbx]
   14000dd0d:	cdq    
   14000dd0e:	(bad)  
   14000dd0f:	push   QWORD PTR [rbx]
   14000dd11:	cdq    
   14000dd12:	(bad)  
   14000dd13:	jmp    QWORD PTR [rcx]
   14000dd15:	ins    BYTE PTR es:[rdi],dx
   14000dd16:	bnd jmp QWORD PTR [rcx]
   14000dd19:	ins    BYTE PTR es:[rdi],dx
   14000dd1a:	bnd jmp QWORD PTR [rcx]
   14000dd1d:	ins    BYTE PTR es:[rdi],dx
   14000dd1e:	bnd jmp QWORD PTR [rcx]
   14000dd21:	ins    BYTE PTR es:[rdi],dx
   14000dd22:	bnd jmp QWORD PTR [rcx]
   14000dd25:	ins    BYTE PTR es:[rdi],dx
   14000dd26:	bnd jmp QWORD PTR [rcx]
   14000dd29:	ins    BYTE PTR es:[rdi],dx
   14000dd2a:	bnd jmp QWORD PTR [rcx]
   14000dd2d:	ins    BYTE PTR es:[rdi],dx
   14000dd2e:	bnd jmp QWORD PTR [rcx]
   14000dd31:	ins    DWORD PTR es:[rdi],dx
   14000dd32:	bnd jmp QWORD PTR [rdi]
   14000dd35:	jne    0x14000dd2a
   14000dd37:	push   QWORD PTR [rip+0x46fff689]        # 0x18700d3c6
   14000dd3d:	movabs al,ds:0xc15efffbb153fff9
   14000dd46:	(bad)  
   14000dd47:	jmp    QWORD PTR [rsi-0x34]
   14000dd4a:	(bad)  
   14000dd4b:	jmp    QWORD PTR [rsi-0x34]
   14000dd4e:	(bad)  
   14000dd4f:	jmp    QWORD PTR [rsi-0x34]
   14000dd52:	(bad)  
   14000dd53:	dec    DWORD PTR [rcx+rbx*8-0x1d560009]
   14000dd5a:	lock (bad) 
   14000dd5c:	jns    0x14000dd30
   14000dd5e:	cli    
   14000dd5f:	call   FWORD PTR [rdx-0x44]
   14000dd62:	std    
   14000dd63:	push   QWORD PTR [rdi]
   14000dd65:	mov    esi,esi
   14000dd67:	(bad)  
   14000dd68:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000dd6e:	idiv   edi
   14000dd70:	cmp    al,0x92
   14000dd72:	idiv   edi
   14000dd74:	ds xchg ebp,eax
   14000dd76:	idiv   edi
   14000dd78:	and    ebx,DWORD PTR [rcx-0x28]
   14000dd7b:	dec    DWORD PTR [rcx]
   14000dd7d:	sbb    DWORD PTR [rdx-0x4c],ecx
   14000dd80:	add    BYTE PTR [rax],al
   14000dd82:	add    BYTE PTR [rdi+0x0],al
   14000dd85:	add    BYTE PTR [rax],al
   14000dd87:	or     al,0x0
	...
   14000dda9:	add    BYTE PTR [rax],al
   14000ddab:	add    BYTE PTR [rcx],bl
   14000ddad:	(bad)
   14000ddb1:	(bad)  
   14000ddb2:	cld    
   14000ddb3:	(bad)  
   14000ddb4:	jp     0x14000dd95
   14000ddb6:	(bad)  
   14000ddb7:	jmp    QWORD PTR [rcx-0x3d]
   14000ddba:	(bad)  
   14000ddbb:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000ddbf:	push   QWORD PTR [rsi]
   14000ddc1:	mov    dh,dh
   14000ddc3:	jmp    QWORD PTR [rcx]
   14000ddc5:	ins    BYTE PTR es:[rdi],dx
   14000ddc6:	bnd jmp QWORD PTR [rcx]
   14000ddc9:	ins    BYTE PTR es:[rdi],dx
   14000ddca:	repnz push QWORD PTR [rbx]
   14000ddcd:	cdq    
   14000ddce:	(bad)  
   14000ddcf:	push   QWORD PTR [rbx]
   14000ddd1:	cdq    
   14000ddd2:	(bad)  
   14000ddd3:	jmp    QWORD PTR [rcx]
   14000ddd5:	ins    BYTE PTR es:[rdi],dx
   14000ddd6:	bnd jmp QWORD PTR [rcx]
   14000ddd9:	ins    BYTE PTR es:[rdi],dx
   14000ddda:	bnd jmp QWORD PTR [rcx]
   14000dddd:	ins    BYTE PTR es:[rdi],dx
   14000ddde:	bnd jmp QWORD PTR [rcx]
   14000dde1:	ins    BYTE PTR es:[rdi],dx
   14000dde2:	bnd jmp QWORD PTR [rcx]
   14000dde5:	ins    BYTE PTR es:[rdi],dx
   14000dde6:	bnd jmp QWORD PTR [rcx]
   14000dde9:	ins    BYTE PTR es:[rdi],dx
   14000ddea:	bnd jmp QWORD PTR [rcx]
   14000dded:	ins    BYTE PTR es:[rdi],dx
   14000ddee:	bnd jmp QWORD PTR [rcx]
   14000ddf1:	ins    BYTE PTR es:[rdi],dx
   14000ddf2:	bnd jmp QWORD PTR [rcx]
   14000ddf5:	ins    DWORD PTR es:[rdi],dx
   14000ddf6:	bnd jmp QWORD PTR [rbx]
   14000ddf9:	outs   dx,DWORD PTR ds:[rsi]
   14000ddfa:	bnd jmp QWORD PTR [rip+0x27fff372]        # 0x16800d173
   14000de01:	je     0x14000ddf6
   14000de03:	jmp    FWORD PTR [rax]
   14000de05:	jbe    0x14000ddfa
   14000de07:	jmp    FWORD PTR [rsi]
   14000de09:	jle    0x14000de00
   14000de0b:	(bad)  
   14000de0c:	cmp    cl,BYTE PTR [rdi-0x5ab50009]
   14000de12:	cli    
   14000de13:	call   QWORD PTR [rbp-0x4c]
   14000de16:	cld    
   14000de17:	call   FWORD PTR [rdi-0x3d]
   14000de1a:	(bad)  
   14000de1b:	jmp    QWORD PTR [rsi-0x34]
   14000de1e:	(bad)  
   14000de1f:	call   FWORD PTR [rdx-0x45]
   14000de22:	std    
   14000de23:	push   QWORD PTR [rsi]
   14000de25:	mov    esi,esi
   14000de27:	push   QWORD PTR [rdi]
   14000de29:	mov    esi,esi
   14000de2b:	(bad)  
   14000de2c:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000de32:	idiv   edi
   14000de34:	cmp    al,0x92
   14000de36:	idiv   edi
   14000de38:	and    ebx,DWORD PTR [rcx-0x28]
   14000de3b:	dec    DWORD PTR [rcx]
   14000de3d:	sbb    DWORD PTR [rdx-0x4c],ecx
   14000de40:	add    BYTE PTR [rax],al
   14000de42:	add    BYTE PTR [rdi+0x0],al
   14000de45:	add    BYTE PTR [rax],al
   14000de47:	or     al,0x0
	...
   14000de69:	add    BYTE PTR [rax],al
   14000de6b:	add    BYTE PTR [rcx],bl
   14000de6d:	rex.B ret 
   14000de6f:	leave  
   14000de70:	(bad)  
   14000de71:	cmc    
   14000de72:	(bad)  
   14000de73:	(bad)  
   14000de74:	jp     0x14000de55
   14000de76:	(bad)  
   14000de77:	jmp    QWORD PTR [rcx-0x3d]
   14000de7a:	(bad)  
   14000de7b:	dec    DWORD PTR [rax+rbp*4-0x6]
   14000de7f:	push   QWORD PTR [rsi]
   14000de81:	mov    dh,dh
   14000de83:	jmp    QWORD PTR [rcx]
   14000de85:	ins    BYTE PTR es:[rdi],dx
   14000de86:	bnd jmp QWORD PTR [rcx]
   14000de89:	ins    BYTE PTR es:[rdi],dx
   14000de8a:	repnz push QWORD PTR [rbx]
   14000de8d:	cdq    
   14000de8e:	(bad)  
   14000de8f:	push   QWORD PTR [rbx]
   14000de91:	cdq    
   14000de92:	(bad)  
   14000de93:	jmp    QWORD PTR [rcx]
   14000de95:	ins    BYTE PTR es:[rdi],dx
   14000de96:	bnd jmp QWORD PTR [rcx]
   14000de99:	ins    BYTE PTR es:[rdi],dx
   14000de9a:	bnd jmp QWORD PTR [rcx]
   14000de9d:	ins    BYTE PTR es:[rdi],dx
   14000de9e:	bnd jmp QWORD PTR [rcx]
   14000dea1:	ins    BYTE PTR es:[rdi],dx
   14000dea2:	bnd jmp QWORD PTR [rcx]
   14000dea5:	ins    BYTE PTR es:[rdi],dx
   14000dea6:	bnd jmp QWORD PTR [rcx]
   14000dea9:	ins    BYTE PTR es:[rdi],dx
   14000deaa:	bnd jmp QWORD PTR [rcx]
   14000dead:	ins    BYTE PTR es:[rdi],dx
   14000deae:	bnd jmp QWORD PTR [rcx]
   14000deb1:	ins    BYTE PTR es:[rdi],dx
   14000deb2:	bnd jmp QWORD PTR [rcx]
   14000deb5:	ins    BYTE PTR es:[rdi],dx
   14000deb6:	bnd jmp QWORD PTR [rcx]
   14000deb9:	ins    DWORD PTR es:[rdi],dx
   14000deba:	bnd jmp QWORD PTR [rbx]
   14000debd:	outs   dx,DWORD PTR ds:[rsi]
   14000debe:	bnd jmp QWORD PTR [rip+0x27fff372]        # 0x16800d237
   14000dec5:	je     0x14000deba
   14000dec7:	jmp    FWORD PTR [rax]
   14000dec9:	jbe    0x14000debe
   14000decb:	jmp    FWORD PTR [rdx]
   14000decd:	js     0x14000dec3
   14000decf:	jmp    FWORD PTR [rbx+rdi*2]
   14000ded2:	hlt    
   14000ded3:	jmp    FWORD PTR [rip+0x2ffff47e]        # 0x17000d357
   14000ded9:	xor    ch,0xff
   14000dedc:	xor    al,0x86
   14000dede:	idiv   bh
   14000dee0:	cmp    al,0x91
   14000dee2:	idiv   edi
   14000dee4:	xor    al,0x86
   14000dee6:	idiv   bh
   14000dee8:	ss mov esi,esi
   14000deeb:	push   QWORD PTR [rdi]
   14000deed:	mov    esi,esi
   14000deef:	(bad)  
   14000def0:	cmp    DWORD PTR [rbp-0x70c4000a],ecx
   14000def6:	idiv   edi
   14000def8:	and    bl,BYTE PTR [rax-0x28]
   14000defb:	dec    DWORD PTR [rcx]
   14000defd:	sbb    DWORD PTR [rdx-0x4c],ecx
   14000df00:	add    BYTE PTR [rax],al
   14000df02:	add    BYTE PTR [rdi+0x0],al
   14000df05:	add    BYTE PTR [rax],al
   14000df07:	or     al,0x0
	...
   14000df29:	add    BYTE PTR [rax],al
   14000df2b:	add    BYTE PTR [rcx],bl
   14000df2d:	rex.XB enter 0x8fe5,0xf5
   14000df32:	(bad)  
   14000df33:	(bad)  
   14000df34:	jp     0x14000df15
   14000df36:	(bad)  
   14000df37:	jmp    QWORD PTR [rdx-0x3c]
   14000df3a:	(bad)  
   14000df3b:	call   FWORD PTR [rdi-0x45]
   14000df3e:	sti    
   14000df3f:	jmp    QWORD PTR [rdi-0x44]
   14000df42:	cli    
   14000df43:	push   QWORD PTR [rcx-0x3e]
   14000df46:	sti    
   14000df47:	inc    DWORD PTR [rdi-0x7000022b]
   14000df4d:	fcos   
   14000df4f:	(bad)  
   14000df50:	jge    0x14000df1d
   14000df52:	(bad)  
   14000df53:	(bad)  
   14000df54:	js     0x14000df13
   14000df56:	cld    
   14000df57:	jmp    QWORD PTR [rdx-0x59]
   14000df5a:	stc    
   14000df5b:	call   QWORD PTR [rbx-0x68]
   14000df5e:	clc    
   14000df5f:	(bad)  
   14000df60:	ds test ebp,esi
   14000df63:	jmp    QWORD PTR [rcx]
   14000df65:	ins    BYTE PTR es:[rdi],dx
   14000df66:	bnd jmp QWORD PTR [rcx]
   14000df69:	ins    BYTE PTR es:[rdi],dx
   14000df6a:	bnd jmp QWORD PTR [rcx]
   14000df6d:	ins    BYTE PTR es:[rdi],dx
   14000df6e:	bnd jmp QWORD PTR [rcx]
   14000df71:	ins    BYTE PTR es:[rdi],dx
   14000df72:	bnd jmp QWORD PTR [rcx]
   14000df75:	ins    BYTE PTR es:[rdi],dx
   14000df76:	bnd jmp QWORD PTR [rcx]
   14000df79:	ins    BYTE PTR es:[rdi],dx
   14000df7a:	bnd jmp QWORD PTR [rcx]
   14000df7d:	ins    DWORD PTR es:[rdi],dx
   14000df7e:	bnd jmp QWORD PTR [rbx]
   14000df81:	outs   dx,DWORD PTR ds:[rsi]
   14000df82:	bnd jmp QWORD PTR [rip+0x27fff372]        # 0x16800d2fb
   14000df89:	je     0x14000df7e
   14000df8b:	jmp    FWORD PTR [rax]
   14000df8d:	jbe    0x14000df82
   14000df8f:	jmp    FWORD PTR [rdx]
   14000df91:	js     0x14000df87
   14000df93:	jmp    FWORD PTR [rbx+rdi*2]
   14000df96:	hlt    
   14000df97:	jmp    FWORD PTR [rip+0x2ffff47e]        # 0x17000d41b
   14000df9d:	xor    ch,0xff
   14000dfa0:	xor    DWORD PTR [rdx-0x7bcd000b],eax
   14000dfa6:	cmc    
   14000dfa7:	push   QWORD PTR [rsi+rax*4]
   14000dfaa:	idiv   bh
   14000dfac:	ss mov esi,esi
   14000dfaf:	push   QWORD PTR [rdi]
   14000dfb1:	mov    esi,esi
   14000dfb3:	(bad)  
   14000dfb4:	cmp    DWORD PTR [rbp+0x5722fff6],ecx
   14000dfba:	fdivr  st,st(7)
   14000dfbc:	or     DWORD PTR [rcx],ebx
   14000dfbe:	rex.WX mov spl,0x0
   14000dfc1:	add    BYTE PTR [rax],al
   14000dfc3:	rex.RXB add BYTE PTR [r8],r8b
   14000dfc6:	add    BYTE PTR [rax+rax*1],cl
	...
   14000dfe9:	add    BYTE PTR [rax],al
   14000dfeb:	add    BYTE PTR [rdx],bl
   14000dfed:	rex.RB (bad) 
   14000dfef:	dec    DWORD PTR [rdi-0x7500000b]
   14000dff5:	in     eax,dx
   14000dff6:	(bad)  
   14000dff7:	call   FWORD PTR [rax-0x6800000a]
   14000dffd:	repnz (bad) 
   14000dfff:	jmp    QWORD PTR [rbx-0x38000010]
   14000e005:	cmc    
   14000e006:	(bad)  
   14000e007:	jmp    rdi
   14000e009:	cld    
   14000e00a:	(bad)  
   14000e00b:	(bad)  
   14000e00c:	out    dx,eax
   14000e00d:	(bad)  
   14000e00e:	(bad)  
   14000e00f:	jmp    rsi
   14000e011:	std    
   14000e012:	(bad)  
   14000e013:	call   rdx
   14000e015:	cmc    
   14000e016:	(bad)  
   14000e017:	inc    ecx
   14000e019:	in     al,dx
   14000e01a:	(bad)  
   14000e01b:	push   QWORD PTR [rax-0x5a00001f]
   14000e021:	(bad)  
   14000e023:	dec    DWORD PTR [rsi+0x7effffcb]
   14000e029:	mov    esi,0xaa67fffd
   14000e02e:	sti    
   14000e02f:	call   QWORD PTR [rdx-0x68]
   14000e032:	stc    
   14000e033:	(bad)  
   14000e034:	ds xchg esi,esi
   14000e037:	jmp    FWORD PTR [rdi+rsi*2]
   14000e03a:	hlt    
   14000e03b:	jmp    QWORD PTR [rcx]
   14000e03d:	ins    BYTE PTR es:[rdi],dx
   14000e03e:	bnd jmp QWORD PTR [rcx]
   14000e041:	ins    DWORD PTR es:[rdi],dx
   14000e042:	bnd jmp QWORD PTR [rbx]
   14000e045:	outs   dx,DWORD PTR ds:[rsi]
   14000e046:	bnd jmp QWORD PTR [rip+0x27fff372]        # 0x16800d3bf
   14000e04d:	je     0x14000e042
   14000e04f:	jmp    FWORD PTR [rax]
   14000e051:	jbe    0x14000e046
   14000e053:	jmp    FWORD PTR [rdx]
   14000e055:	js     0x14000e04b
   14000e057:	jmp    FWORD PTR [rbx+rdi*2]
   14000e05a:	hlt    
   14000e05b:	jmp    FWORD PTR [rip+0x2ffff47e]        # 0x17000d4df
   14000e061:	xor    ch,0xff
   14000e064:	xor    DWORD PTR [rdx-0x7bcd000b],eax
   14000e06a:	cmc    
   14000e06b:	push   QWORD PTR [rsi+rax*4]
   14000e06e:	idiv   bh
   14000e070:	ss mov esi,esi
   14000e073:	push   QWORD PTR [rdi]
   14000e075:	mov    esi,esi
   14000e077:	jmp    QWORD PTR [rdx]
   14000e079:	push   rdi
   14000e07a:	fdivr  st,st(7)
   14000e07c:	or     DWORD PTR [rcx],ebx
   14000e07e:	rex.WX mov spl,0x0
   14000e081:	add    BYTE PTR [rax],al
   14000e083:	rex.RXB add BYTE PTR [r8],r8b
   14000e086:	add    BYTE PTR [rax+rax*1],cl
	...
   14000e0a9:	add    BYTE PTR [rax],al
   14000e0ab:	add    BYTE PTR [rdx],bl
   14000e0ad:	rex.RB (bad) 
   14000e0af:	call   QWORD PTR [rsi-0x67000004]
   14000e0b5:	cli    
   14000e0b6:	(bad)  
   14000e0b7:	call   QWORD PTR [rax+0x51fffceb]
   14000e0bd:	xchg   ecx,eax
   14000e0be:	jrcxz  0x14000e0bf
   14000e0c0:	jl     0x14000e058
   14000e0c2:	jrcxz  0x14000e0c3
   14000e0c4:	xchg   esi,eax
   14000e0c5:	scas   al,BYTE PTR es:[rdi]
   14000e0c6:	(bad)  
   14000e0c7:	(bad)  
   14000e0c8:	mov    ebp,0xeffff3d1
   14000e0cd:	(bad)  
   14000e0ce:	(bad)  
   14000e0cf:	(bad)  
   14000e0d0:	jmp    0x14000e0d1
   14000e0d2:	(bad)  
   14000e0d3:	jmp    rdi
   14000e0d5:	(bad)  
   14000e0d6:	(bad)  
   14000e0d7:	jmp    rsp
   14000e0d9:	(bad)  
   14000e0da:	(bad)  
   14000e0db:	jmp    rax
   14000e0dd:	(bad)  
   14000e0de:	(bad)  
   14000e0df:	(bad)  
   14000e0e0:	fdiv   st(7),st
   14000e0e2:	(bad)  
   14000e0e3:	(bad)  
   14000e0e4:	fdivr  st,st(7)
   14000e0e6:	(bad)  
   14000e0e7:	dec    ebx
   14000e0e9:	clc    
   14000e0ea:	(bad)  
   14000e0eb:	(bad)  
   14000e0ec:	mov    esi,0xa7fffff1
   14000e0f1:	loop   0x14000e0f2
   14000e0f3:	call   QWORD PTR [rbp-0x7800002b]
   14000e0f9:	retf   
   14000e0fa:	(bad)  
   14000e0fb:	push   QWORD PTR [rbp+rdi*4-0x1]
   14000e0ff:	call   FWORD PTR [rdi+riz*4-0x4]
   14000e103:	dec    DWORD PTR [rbx-0x69]
   14000e106:	stc    
   14000e107:	inc    DWORD PTR [rcx-0x72]
   14000e10a:	clc    
   14000e10b:	push   QWORD PTR [rip+0x27fff683]        # 0x16800d794
   14000e111:	je     0x14000e106
   14000e113:	jmp    FWORD PTR [rax]
   14000e115:	jbe    0x14000e10a
   14000e117:	jmp    FWORD PTR [rdx]
   14000e119:	js     0x14000e10f
   14000e11b:	jmp    FWORD PTR [rbx+rdi*2]
   14000e11e:	hlt    
   14000e11f:	jmp    FWORD PTR [rip+0x2ffff47e]        # 0x17000d5a3
   14000e125:	xor    ch,0xff
   14000e128:	xor    DWORD PTR [rdx-0x7bcd000b],eax
   14000e12e:	cmc    
   14000e12f:	push   QWORD PTR [rsi+rax*4]
   14000e132:	idiv   bh
   14000e134:	ss mov esi,esi
   14000e137:	jmp    QWORD PTR [rcx]
   14000e139:	push   rsi
   14000e13a:	fdivr  st,st(7)
   14000e13c:	or     DWORD PTR [rcx],ebx
   14000e13e:	rex.WX mov spl,0x0
   14000e141:	add    BYTE PTR [rax],al
   14000e143:	rex.RXB add BYTE PTR [r8],r8b
   14000e146:	add    BYTE PTR [rax+rax*1],cl
	...
   14000e169:	add    BYTE PTR [rax],al
   14000e16b:	add    BYTE PTR [rdx],bl
   14000e16d:	rex.R int3 
   14000e16f:	shr    DWORD PTR [rdx],1
   14000e171:	pop    rsp
   14000e172:	(bad)  
   14000e173:	(bad)  
   14000e174:	cmp    dh,BYTE PTR [rdx-0x26]
   14000e177:	call   FWORD PTR [rcx-0x62]
   14000e17a:	out    0xff,eax
   14000e17c:	push   0x78ffedb1
   14000e181:	(bad)  
   14000e182:	cmc    
   14000e183:	push   QWORD PTR [rdi-0x3f]
   14000e186:	repz jmp FWORD PTR [rax-0x57]
   14000e18a:	in     eax,dx
   14000e18b:	call   FWORD PTR [rax-0x6d]
   14000e18e:	out    0xff,eax
   14000e190:	push   rbx
   14000e191:	(bad)  
   14000e192:	loopne 0x14000e193
   14000e194:	pop    rbp
   14000e195:	xchg   al,ah
   14000e197:	(bad)  
   14000e198:	jg     0x14000e13c
   14000e19a:	out    0xff,eax
   14000e19c:	xchg   esi,eax
   14000e19d:	mov    ecx,0xdcb8ffed
   14000e1a2:	idiv   bh
   14000e1a4:	fdivr  st,st(7)
   14000e1a6:	(bad)  
   14000e1a7:	call   rsp
   14000e1a9:	(bad)  
   14000e1aa:	(bad)  
   14000e1ab:	call   rax
   14000e1ad:	(bad)  
   14000e1ae:	(bad)  
   14000e1af:	dec    esp
   14000e1b1:	(bad)  
   14000e1b2:	(bad)  
   14000e1b3:	dec    ecx
   14000e1b5:	(bad)  
   14000e1b6:	(bad)  
   14000e1b7:	inc    ebp
   14000e1b9:	(bad)  
   14000e1ba:	(bad)  
   14000e1bb:	inc    ecx
   14000e1bd:	(bad)  
   14000e1be:	(bad)  
   14000e1bf:	jmp    FWORD PTR [rsi-0x6300000e]
   14000e1c5:	in     al,0xff
   14000e1c7:	dec    DWORD PTR [rsi+0x76ffffda]
   14000e1cd:	(bad)  
   14000e1ce:	(bad)  
   14000e1cf:	jmp    QWORD PTR [rdi-0x46]
   14000e1d2:	(bad)  
   14000e1d3:	call   QWORD PTR [rbx-0x59]
   14000e1d6:	(bad)  
   14000e1d7:	inc    DWORD PTR [rdi-0x65]
   14000e1da:	sti    
   14000e1db:	(bad)  
   14000e1dc:	cmp    eax,0x36fffa91
   14000e1e1:	mov    edi,esi
   14000e1e3:	push   QWORD PTR [rcx]
   14000e1e5:	xor    esi,0xffffffff
   14000e1e8:	(bad)  
   14000e1e9:	xor    ch,0xff
   14000e1ec:	xor    DWORD PTR [rdx-0x7bcd000b],eax
   14000e1f2:	cmc    
   14000e1f3:	push   QWORD PTR [rsi+rax*4]
   14000e1f6:	idiv   bh
   14000e1f8:	and    DWORD PTR [rsi-0x28],edx
   14000e1fb:	dec    DWORD PTR [rcx]
   14000e1fd:	sbb    DWORD PTR [rbx-0x50],ecx
   14000e200:	add    BYTE PTR [rax],al
   14000e202:	add    BYTE PTR [rbx+0x0],al
   14000e205:	add    BYTE PTR [rax],al
   14000e207:	or     eax,DWORD PTR [rax]
	...
   14000e231:	add    BYTE PTR [rax],al
   14000e233:	add    BYTE PTR [rcx],bl
   14000e235:	rex.X (bad) 
   14000e237:	xor    bl,BYTE PTR [rax]
   14000e239:	rex.B ret 0x1855
   14000e23d:	rex.B ret 0x1988
   14000e241:	rex.XB enter 0x1ac5,0x44
   14000e246:	retf   
   14000e247:	jrcxz  0x14000e273
   14000e249:	pop    rbx
   14000e24a:	(bad)  
   14000e24b:	inc    DWORD PTR [rcx+0x75]
   14000e24e:	(bad)  
   14000e250:	pop    rax
   14000e251:	xchg   ecx,eax
   14000e252:	out    0xff,eax
   14000e254:	outs   dx,BYTE PTR ds:[rsi]
   14000e255:	stos   BYTE PTR es:[rdi],al
   14000e256:	lock (bad) 
   14000e258:	jge    0x14000e213
   14000e25a:	idiv   bh
   14000e25c:	jne    0x14000e20b
   14000e25e:	repz jmp QWORD PTR [rsi-0x65]
   14000e262:	in     eax,dx
   14000e263:	dec    DWORD PTR [rbp-0x80]
   14000e266:	jrcxz  0x14000e267
   14000e268:	pop    rcx
   14000e269:	mov    ebx,esp
   14000e26b:	call   FWORD PTR [rdx-0x79]
   14000e26e:	loopne 0x14000e26f
   14000e270:	jae    0x14000e214
   14000e272:	out    0xff,eax
   14000e274:	popf   
   14000e275:	shl    ebx,1
   14000e277:	push   QWORD PTR [rax-0x3e000618]
   14000e27d:	(bad)  
   14000e27e:	(bad)  
   14000e27f:	(bad)  
   14000e280:	mov    ebp,0xb9ffffff
   14000e285:	(bad)  
   14000e286:	(bad)  
   14000e287:	push   QWORD PTR [rbp-0x4d000001]
   14000e28d:	(bad)  
   14000e28e:	(bad)  
   14000e28f:	jmp    FWORD PTR [rsi-0x55000001]
   14000e295:	(bad)  
   14000e296:	(bad)  
   14000e297:	call   QWORD PTR [rdx+0x7effffea]
   14000e29d:	fcos   
   14000e29f:	jmp    FWORD PTR [rdi-0x33]
   14000e2a2:	(bad)  
   14000e2a3:	call   FWORD PTR [rbx-0x45]
   14000e2a6:	(bad)  
   14000e2a7:	inc    DWORD PTR [rdi-0x59]
   14000e2aa:	(bad)  
   14000e2ab:	(bad)  
   14000e2ac:	cmp    dl,BYTE PTR [rdi-0x6ec90003]
   14000e2b2:	sti    
   14000e2b3:	push   QWORD PTR [rbx]
   14000e2b5:	mov    ?,edx
   14000e2b7:	jmp    QWORD PTR [rax]
   14000e2b9:	push   rsi
   14000e2ba:	fcos   
   14000e2bc:	or     al,0x1f
   14000e2be:	pop    rsp
   14000e2bf:	pop    QWORD PTR [rax]
   14000e2c1:	add    BYTE PTR [rax],al
   14000e2c3:	add    BYTE PTR cs:[rax],al
   14000e2c6:	add    BYTE PTR [rdi],al
	...
   14000e30c:	sbb    DWORD PTR [rbx-0x38],eax
   14000e30f:	rex.X sbb BYTE PTR [rcx-0x3e],al
   14000e313:	data16 sbb BYTE PTR [rax-0x40],al
   14000e317:	mov    DWORD PTR [rcx],ebx
   14000e319:	rex.XB enter 0x1ac5,0x44
   14000e31e:	retf   
   14000e31f:	jrcxz  0x14000e352
   14000e321:	(bad)  
   14000e322:	fcos   
   14000e324:	(bad)  
   14000e325:	jno    0x14000e307
   14000e327:	call   QWORD PTR [rbx-0x79]
   14000e32a:	out    0xff,eax
   14000e32c:	movabs eax,gs:0xa364fff5a768fff2
   14000e336:	repz call QWORD PTR [rax-0x76]
   14000e33a:	(bad)  
   14000e33b:	inc    DWORD PTR [rdx+0x79]
   14000e33e:	jrcxz  0x14000e33f
   14000e340:	pop    rax
   14000e341:	xchg   ecx,eax
   14000e342:	out    0xff,eax
   14000e344:	pop    rbx
   14000e345:	xchg   edx,eax
   14000e346:	jrcxz  0x14000e347
   14000e348:	jno    0x14000e2f8
   14000e34a:	(bad)  
   14000e34b:	dec    DWORD PTR [rcx+rdx*8-0xc5a000d]
   14000e352:	cld    
   14000e353:	jmp    FWORD PTR [rdx-0x62000001]
   14000e359:	repz cld 
   14000e35b:	(bad)  
   14000e35c:	js     0x14000e323
   14000e35e:	lock call QWORD PTR [rsi+rdx*4-0x1d]
   14000e363:	push   QWORD PTR [rdx]
   14000e365:	push   0x441affd7
   14000e36a:	retf   
   14000e36b:	repz (bad) 
   14000e36d:	push   rax
   14000e36e:	(bad)  
   14000e36f:	jmp    QWORD PTR [rbx]
   14000e371:	pop    rdi
   14000e372:	(bad)  
   14000e374:	(bad)  
   14000e375:	push   rbp
   14000e376:	xlat   BYTE PTR ds:[rbx]
   14000e377:	call   FWORD PTR [rcx]
   14000e379:	rex.X (bad) 
   14000e37b:	fst    DWORD PTR [rax]
   14000e37d:	sub    al,0x82
   14000e37f:	rex.WR add BYTE PTR [rax],r8b
   14000e382:	add    BYTE PTR [rip+0x2000000],cl        # 0x14200e388
	...
   14000e3e4:	sbb    DWORD PTR [rbx-0x38],eax
   14000e3e7:	rex.X sbb DWORD PTR [rcx-0x3d],eax
   14000e3eb:	jbe    0x14000e406
   14000e3ed:	rex.B ret 
   14000e3ef:	xchg   edi,eax
   14000e3f0:	sbb    DWORD PTR [rbx-0x39],eax
   14000e3f3:	(bad)  
   14000e3f4:	sbb    al,BYTE PTR [rdi-0x32]
   14000e3f7:	icebp  
   14000e3f8:	xor    ah,BYTE PTR [rdx+rbx*8-0x1]
   14000e3fc:	cmp    al,0x74
   14000e3fe:	jrcxz  0x14000e3ff
   14000e400:	rex.RB (bad) 
   14000e402:	jmp    0x1339c3c06
   14000e407:	call   FWORD PTR [rax-0x5d]
   14000e40a:	clc    
   14000e40b:	call   QWORD PTR [rax-0x69]
   14000e40e:	repz inc DWORD PTR [rax-0x7e]
   14000e412:	(bad)  
   14000e413:	(bad)  
   14000e414:	cmp    edi,DWORD PTR [rax-0x1d]
   14000e417:	jmp    FWORD PTR [rcx]
   14000e419:	pop    rdi
   14000e41a:	(bad)  
   14000e41c:	sbb    al,BYTE PTR [rbp-0x32]
   14000e41f:	call   QWORD PTR [rbx]
   14000e421:	xor    dl,BYTE PTR [rbp+0x4c190ac5]
   14000e427:	push   rdi
   14000e428:	add    BYTE PTR [rax],al
   14000e42a:	add    BYTE PTR [rdi],cl
   14000e42c:	add    BYTE PTR [rax],al
   14000e42e:	add    BYTE PTR [rcx],al
   14000e430:	sbb    DWORD PTR [rdx-0x3a],eax
   14000e433:	xor    dl,BYTE PTR [rsp+rsi*1]
   14000e436:	popf   
   14000e437:	adc    eax,0x4000000
   14000e43c:	add    BYTE PTR [rax],al
   14000e43e:	add    BYTE PTR [rcx],al
	...
   14000e4b8:	sbb    BYTE PTR [rcx-0x3e],al
   14000e4bb:	adc    DWORD PTR [rcx],ebx
   14000e4bd:	(bad)
   14000e4c1:	rex.B ret 0x1977
   14000e4c5:	rex.B ret 
   14000e4c7:	xchg   edi,eax
   14000e4c8:	sbb    DWORD PTR [rbx-0x39],eax
   14000e4cb:	(bad)  
   14000e4cc:	sbb    al,BYTE PTR [rdi-0x32]
   14000e4cf:	icebp  
   14000e4d0:	sub    esp,DWORD PTR [rax-0x26]
   14000e4d3:	push   QWORD PTR [rdx]
   14000e4d5:	jno    0x14000e4bc
   14000e4d7:	push   QWORD PTR [rax]
   14000e4d9:	ins    BYTE PTR es:[rdi],dx
   14000e4da:	loopne 0x14000e4db
   14000e4dc:	and    DWORD PTR [rdx-0x2c],edx
   14000e4df:	call   QWORD PTR [rcx]
   14000e4e1:	sub    eax,0x6385
   14000e4e6:	add    BYTE PTR [rbx],dl
   14000e4e8:	add    BYTE PTR [rax],al
   14000e4ea:	add    BYTE PTR [rbx],al
	...
   14000e590:	sbb    DWORD PTR [rbx-0x38],eax
   14000e593:	and    DWORD PTR [rax],ebx
   14000e595:	rex.B ret 0x1744
   14000e599:	ds mov edx,0x842c1147
   14000e59f:	sbb    DWORD PTR [rax],eax
   14000e5a1:	add    BYTE PTR [rax],al
   14000e5a3:	add    al,0x0
   14000e5a5:	add    BYTE PTR [rax],al
   14000e5a7:	add    DWORD PTR [rax],eax
	...
   14000e5e5:	add    BYTE PTR [rax],al
   14000e5e7:	add    bh,bh
   14000e5e9:	add    edi,edi
   14000e5eb:	(bad)  
   14000e5ec:	(bad)  
   14000e5ed:	inc    DWORD PTR [rax]
   14000e5ef:	add    al,bh
   14000e5f1:	add    BYTE PTR [rdi-0x1],bh
   14000e5f4:	(bad)  
   14000e5f5:	inc    DWORD PTR [rax]
   14000e5f7:	add    al,dh
   14000e5f9:	add    BYTE PTR [rdi],cl
   14000e5fb:	(bad)  
   14000e5fc:	(bad)  
   14000e5fd:	inc    DWORD PTR [rax]
   14000e5ff:	add    al,ah
   14000e601:	add    BYTE PTR [rcx],al
   14000e603:	(bad)  
   14000e604:	(bad)  
   14000e605:	inc    DWORD PTR [rax]
   14000e607:	add    al,ah
   14000e609:	add    BYTE PTR [rax],al
   14000e60b:	(bad)  
   14000e60c:	(bad)  
   14000e60d:	inc    DWORD PTR [rax]
   14000e60f:	add    al,ah
   14000e611:	add    BYTE PTR [rax],al
   14000e613:	(bad)  
   14000e614:	(bad)  
   14000e615:	inc    DWORD PTR [rax]
   14000e617:	add    al,al
   14000e619:	add    BYTE PTR [rax],al
   14000e61b:	add    bh,bh
   14000e61d:	inc    DWORD PTR [rax]
   14000e61f:	add    al,al
   14000e621:	add    BYTE PTR [rax],al
   14000e623:	add    BYTE PTR [rdi],bh
   14000e625:	inc    DWORD PTR [rax]
   14000e627:	add    al,al
   14000e629:	add    BYTE PTR [rax],al
   14000e62b:	add    BYTE PTR [rdi],al
   14000e62d:	inc    DWORD PTR [rax]
   14000e62f:	add    al,al
   14000e631:	add    BYTE PTR [rax],al
   14000e633:	add    BYTE PTR [rax],al
   14000e635:	inc    DWORD PTR [rax]
   14000e637:	add    al,al
   14000e639:	add    BYTE PTR [rax],al
   14000e63b:	add    BYTE PTR [rax],al
   14000e63d:	inc    DWORD PTR [rax]
   14000e63f:	add    al,al
   14000e641:	add    BYTE PTR [rax],al
   14000e643:	add    BYTE PTR [rax],al
   14000e645:	inc    DWORD PTR [rax]
   14000e647:	add    al,al
   14000e649:	add    BYTE PTR [rax],al
   14000e64b:	add    BYTE PTR [rax],al
   14000e64d:	inc    DWORD PTR [rax]
   14000e64f:	add    al,al
   14000e651:	add    BYTE PTR [rax],al
   14000e653:	add    BYTE PTR [rax],al
   14000e655:	inc    DWORD PTR [rax]
   14000e657:	add    al,al
   14000e659:	add    BYTE PTR [rax],al
   14000e65b:	add    BYTE PTR [rax],al
   14000e65d:	inc    DWORD PTR [rax]
   14000e65f:	add    al,al
   14000e661:	add    BYTE PTR [rax],al
   14000e663:	add    BYTE PTR [rax],al
   14000e665:	inc    DWORD PTR [rax]
   14000e667:	add    al,al
   14000e669:	add    BYTE PTR [rax],al
   14000e66b:	add    BYTE PTR [rax],al
   14000e66d:	inc    DWORD PTR [rax]
   14000e66f:	add    al,al
   14000e671:	add    BYTE PTR [rax],al
   14000e673:	add    BYTE PTR [rax],al
   14000e675:	inc    DWORD PTR [rax]
   14000e677:	add    al,al
   14000e679:	add    BYTE PTR [rax],al
   14000e67b:	add    BYTE PTR [rax],al
   14000e67d:	(bad)  
   14000e67e:	add    BYTE PTR [rax],al
   14000e680:	rol    BYTE PTR [rax],0x0
   14000e683:	add    BYTE PTR [rax],al
   14000e685:	sldt   WORD PTR [rax]
   14000e688:	rol    BYTE PTR [rax],0x0
   14000e68b:	add    BYTE PTR [rax],al
   14000e68d:	add    eax,DWORD PTR [rax]
   14000e68f:	add    al,al
   14000e691:	add    BYTE PTR [rax],al
   14000e693:	add    BYTE PTR [rax],al
   14000e695:	add    DWORD PTR [rax],eax
   14000e697:	add    al,al
   14000e699:	add    BYTE PTR [rax],al
   14000e69b:	add    BYTE PTR [rax],al
   14000e69d:	add    BYTE PTR [rax],al
   14000e69f:	add    al,al
   14000e6a1:	add    BYTE PTR [rax],al
   14000e6a3:	add    BYTE PTR [rax],al
   14000e6a5:	add    BYTE PTR [rax],al
   14000e6a7:	add    BYTE PTR [rax+0x0],al
   14000e6ad:	add    BYTE PTR [rax],al
   14000e6af:	add    BYTE PTR [rax+0x0],al
   14000e6b5:	add    BYTE PTR [rax],al
   14000e6b7:	add    BYTE PTR [rax+0x0],al
   14000e6bd:	add    BYTE PTR [rax],al
   14000e6bf:	add    BYTE PTR [rax+0x0],al
   14000e6c5:	add    BYTE PTR [rax],al
   14000e6c7:	add    BYTE PTR [rax+0x0],al
   14000e6cd:	add    BYTE PTR [rax],al
   14000e6cf:	add    BYTE PTR [rax+0x0],al
   14000e6d5:	add    BYTE PTR [rax],al
   14000e6d7:	add    BYTE PTR [rax+0x0],al
   14000e6dd:	add    DWORD PTR [rax],eax
   14000e6df:	add    BYTE PTR [rax+0x0],al
   14000e6e5:	inc    DWORD PTR [rax]
   14000e6e7:	add    BYTE PTR [rax+0x0],al
   14000e6ed:	inc    DWORD PTR [rax]
   14000e6ef:	add    BYTE PTR [rax+0x0],al
   14000e6f5:	inc    DWORD PTR [rax]
   14000e6f7:	add    BYTE PTR [rax+0x0],al
   14000e6fd:	inc    DWORD PTR [rax]
   14000e6ff:	add    BYTE PTR [rax+0x0],al
   14000e705:	inc    DWORD PTR [rax]
   14000e707:	add    BYTE PTR [rax+0x0],al
   14000e70d:	inc    DWORD PTR [rax]
   14000e70f:	add    BYTE PTR [rax+0x0],al
   14000e715:	inc    DWORD PTR [rax]
   14000e717:	add    BYTE PTR [rax+0x0],al
   14000e71d:	inc    DWORD PTR [rax]
   14000e71f:	add    BYTE PTR [rax+0x0],al
   14000e725:	inc    DWORD PTR [rax]
   14000e727:	add    BYTE PTR [rax+0x0],al
   14000e72d:	inc    DWORD PTR [rax]
   14000e72f:	add    BYTE PTR [rax+0x0],al
   14000e735:	inc    DWORD PTR [rax]
   14000e737:	add    BYTE PTR [rax+0x0],al
   14000e73d:	inc    DWORD PTR [rax]
   14000e73f:	add    al,ah
   14000e741:	add    BYTE PTR [rax],al
   14000e743:	add    BYTE PTR [rax],al
   14000e745:	inc    DWORD PTR [rax]
   14000e747:	add    bh,bh
   14000e749:	add    BYTE PTR [rax],0x0
   14000e74c:	add    bh,bh
   14000e74e:	add    BYTE PTR [rax],al
   14000e750:	(bad)  
   14000e751:	inc    BYTE PTR [rax]
   14000e753:	add    BYTE PTR [rbx],al
   14000e755:	inc    DWORD PTR [rax]
   14000e757:	add    bh,bh
   14000e759:	push   rax
   14000e75b:	add    BYTE PTR [rdi-0x1],bh
   14000e75e:	add    BYTE PTR [rax],al
   14000e760:	(bad)  
   14000e761:	(bad)  
   14000e762:	inc    eax
   14000e764:	(bad)  
   14000e765:	inc    DWORD PTR [rax]
   14000e767:	add    BYTE PTR [rax],ch
   14000e769:	add    BYTE PTR [rax],al
   14000e76b:	add    BYTE PTR [rax],ah
   14000e76d:	add    BYTE PTR [rax],al
   14000e76f:	add    BYTE PTR [rax+0x0],al
   14000e772:	add    BYTE PTR [rax],al
   14000e774:	add    DWORD PTR [rax],eax
   14000e776:	and    BYTE PTR [rax],al
	...
   14000e79c:	add    BYTE PTR [rax],al
   14000e79e:	add    BYTE PTR [rcx],al
   14000e7a0:	add    BYTE PTR [rax],al
   14000e7a2:	add    BYTE PTR [rsi],al
   14000e7a4:	add    BYTE PTR [rax],al
   14000e7a6:	add    BYTE PTR [rax],dl
   14000e7a8:	add    BYTE PTR [rax],al
   14000e7aa:	add    BYTE PTR [rdi],dl
   14000e7ac:	add    BYTE PTR [rax],al
   14000e7ae:	add    BYTE PTR [rax],bl
   14000e7b0:	add    BYTE PTR [rax],al
   14000e7b2:	add    BYTE PTR [rax],dl
   14000e7b4:	add    BYTE PTR [rax],al
   14000e7b6:	add    BYTE PTR [rsi],al
   14000e7b8:	add    BYTE PTR [rax],al
   14000e7ba:	add    BYTE PTR [rcx],al
	...
   14000e818:	add    BYTE PTR [rax],al
   14000e81a:	add    BYTE PTR [rip+0x16000000],al        # 0x15600e820
   14000e820:	add    BYTE PTR [rax],al
   14000e822:	add    BYTE PTR [rcx],dh
   14000e824:	add    BYTE PTR [rax],al
   14000e826:	add    BYTE PTR [rbp+0x0],cl
   14000e829:	add    BYTE PTR [rax],al
   14000e82b:	pop    rdi
   14000e82c:	add    BYTE PTR [rax],al
   14000e82e:	add    BYTE PTR [rax+0x0],ah
   14000e831:	add    BYTE PTR [rax],al
   14000e833:	rex.WRX add BYTE PTR [rax],r8b
   14000e836:	add    BYTE PTR [rax+rax*1],dh
   14000e839:	add    BYTE PTR [rax],al
   14000e83b:	(bad)  
   14000e83c:	add    BYTE PTR [rax],al
   14000e83e:	add    BYTE PTR [rsi],cl
   14000e840:	add    BYTE PTR [rax],al
   14000e842:	add    BYTE PTR [rax+rax*1],al
   14000e845:	add    BYTE PTR [rax],al
   14000e847:	add    DWORD PTR [rax],eax
	...
   14000e895:	add    BYTE PTR [rax],al
   14000e897:	(bad)  
   14000e898:	add    BYTE PTR [rax],al
   14000e89a:	add    BYTE PTR [rdx],ah
   14000e89c:	(bad)  
   14000e89d:	adc    DWORD PTR [rip+0x6b230e64],esi        # 0x1ab23f707
   14000e8a3:	lods   eax,DWORD PTR ds:[rsi]
   14000e8a4:	adc    dh,BYTE PTR [rdx]
   14000e8a6:	mov    dl,al
   14000e8a8:	(bad)  
   14000e8a9:	cmp    DWORD PTR [rcx+0x5a1f0cda],edx
   14000e8af:	(bad)  
   14000e8b0:	add    al,0xb
   14000e8b2:	and    ah,BYTE PTR [rsi-0x7c000000]
   14000e8b8:	add    BYTE PTR [rax],al
   14000e8ba:	add    BYTE PTR [rdi+0x0],ah
   14000e8bd:	add    BYTE PTR [rax],al
   14000e8bf:	rex.WB add BYTE PTR [r8],al
   14000e8c2:	add    BYTE PTR [rdi],ch
   14000e8c4:	add    BYTE PTR [rax],al
   14000e8c6:	add    BYTE PTR [rdx],bl
   14000e8c8:	add    BYTE PTR [rax],al
   14000e8ca:	add    BYTE PTR [rax+rax*1],cl
   14000e8cd:	add    BYTE PTR [rax],al
   14000e8cf:	add    al,0x0
	...
   14000e911:	add    BYTE PTR [rax],al
   14000e913:	add    BYTE PTR [rbx+rcx*1],al
   14000e916:	and    edx,DWORD PTR [rdi]
   14000e918:	adc    al,0x33
   14000e91a:	nop
   14000e91b:	fwait
   14000e91c:	and    BYTE PTR [rsi+rax*8-0x13],dl
   14000e920:	(bad)  
   14000e921:	pop    rdi
   14000e922:	out    0xff,eax
   14000e924:	and    eax,0x4dffee6e
   14000e929:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e92a:	idiv   bh
   14000e92c:	rex.RXB cwde 
   14000e92e:	out    dx,eax
   14000e92f:	jmp    FWORD PTR [rax]
   14000e931:	pop    rsi
   14000e932:	(bad)  
   14000e933:	hlt    
   14000e934:	adc    eax,0x9e18d35
   14000e939:	sbb    DWORD PTR [rdx-0x3f],ecx
   14000e93c:	add    eax,DWORD PTR [rdi]
   14000e93e:	(bad)  
   14000e93f:	lahf   
   14000e940:	add    BYTE PTR [rax],al
   14000e942:	add    BYTE PTR [rdi+0x0],bh
   14000e945:	add    BYTE PTR [rax],al
   14000e947:	(bad)  
   14000e948:	add    BYTE PTR [rax],al
   14000e94a:	add    BYTE PTR [rsi+0x0],al
   14000e94d:	add    BYTE PTR [rax],al
   14000e94f:	sub    eax,DWORD PTR [rax]
   14000e951:	add    BYTE PTR [rax],al
   14000e953:	sbb    BYTE PTR [rax],al
   14000e955:	add    BYTE PTR [rax],al
   14000e957:	or     eax,DWORD PTR [rax]
   14000e959:	add    BYTE PTR [rax],al
   14000e95b:	add    eax,DWORD PTR [rax]
	...
   14000e991:	add    BYTE PTR [rax],al
   14000e993:	add    BYTE PTR [rip+0x4d89b846],bl        # 0x18d8aa1df
   14000e999:	sahf   
   14000e99a:	out    dx,al
   14000e99b:	(bad)  
   14000e99c:	ds xchg esi,eax
   14000e99e:	clc    
   14000e99f:	call   FWORD PTR [rsi]
   14000e9a1:	imul   esi,ebx,0xf47426ff
   14000e9a7:	call   QWORD PTR [rbp-0x48]
   14000e9aa:	(bad)  
   14000e9ab:	call   FWORD PTR [rdx-0x42]
   14000e9ae:	(bad)  
   14000e9af:	dec    DWORD PTR [rbp-0x56]
   14000e9b2:	sti    
   14000e9b3:	dec    DWORD PTR [rdx-0x5e]
   14000e9b6:	idiv   bh
   14000e9b8:	cmp    al,0x86
   14000e9ba:	out    0xfe,eax
   14000e9bc:	(bad)  
   14000e9bd:	pop    rbx
   14000e9be:	mov    edi,0x7c2d12f3
   14000e9c3:	fisttp DWORD PTR [rax]
   14000e9c5:	(bad)  
   14000e9c6:	movabs rsi,0x7c000000980a0301
   14000e9d0:	add    BYTE PTR [rax],al
   14000e9d2:	add    BYTE PTR [rsi+0x0],bl
   14000e9d5:	add    BYTE PTR [rax],al
   14000e9d7:	rex.X add BYTE PTR [rax],al
   14000e9da:	add    BYTE PTR [rax],ch
   14000e9dc:	add    BYTE PTR [rax],al
   14000e9de:	add    BYTE PTR [rsi],dl
   14000e9e0:	add    BYTE PTR [rax],al
   14000e9e2:	add    BYTE PTR [rcx],cl
   14000e9e4:	add    BYTE PTR [rax],al
   14000e9e6:	add    BYTE PTR [rcx],al
	...
   14000ea10:	add    BYTE PTR [rax],al
   14000ea12:	add    BYTE PTR [rcx],al
   14000ea14:	(bad)  
   14000ea15:	addr32 rol ah,1
   14000ea18:	push   0xffffffffffffffd1
   14000ea1a:	(bad)  
   14000ea1b:	(bad)  
   14000ea1c:	cmp    al,0x93
   14000ea1e:	clc    
   14000ea1f:	call   FWORD PTR [rax]
   14000ea21:	(bad)  
   14000ea22:	lock jmp QWORD PTR [rax]
   14000ea25:	imul   esi,edx,0xffffffff
   14000ea28:	rex.WRXB scas rax,QWORD PTR es:[rdi]
   14000ea2a:	std    
   14000ea2b:	call   QWORD PTR [rbx-0x4b]
   14000ea2e:	cld    
   14000ea2f:	dec    DWORD PTR [rdx-0x5b]
   14000ea32:	cli    
   14000ea33:	dec    DWORD PTR [rdi-0x53]
   14000ea36:	sti    
   14000ea37:	call   QWORD PTR [rbp+rsi*4-0x2]
   14000ea3b:	call   QWORD PTR [rbx+rsi*4-0x4]
   14000ea3f:	dec    DWORD PTR [rbx-0x5d]
   14000ea42:	hlt    
   14000ea43:	(bad)  
   14000ea44:	cmp    eax,0x26fde487
   14000ea49:	push   rsi
   14000ea4a:	mov    ecx,0x792d12f1
   14000ea4f:	fld    DWORD PTR [rsi]
   14000ea51:	adc    bh,BYTE PTR [rcx]
   14000ea53:	mov    eax,0x97100502
   14000ea58:	add    BYTE PTR [rax],al
   14000ea5a:	add    BYTE PTR [rdi+0x0],dh
   14000ea5d:	add    BYTE PTR [rax],al
   14000ea5f:	pop    rcx
   14000ea60:	add    BYTE PTR [rax],al
   14000ea62:	add    BYTE PTR [rip+0x24000000],bh        # 0x16400ea68
   14000ea68:	add    BYTE PTR [rax],al
   14000ea6a:	add    BYTE PTR [rbx],dl
   14000ea6c:	add    BYTE PTR [rax],al
   14000ea6e:	add    BYTE PTR [rdi],al
   14000ea70:	add    BYTE PTR [rax],al
   14000ea72:	add    BYTE PTR [rcx],al
	...
   14000ea90:	adc    esi,DWORD PTR [rip+0x662e07af]        # 0x1a62ef245
   14000ea96:	ror    dl,1
   14000ea98:	movsxd eax,edi
   14000ea9a:	(bad)  
   14000ea9b:	inc    DWORD PTR [rbx-0x64]
   14000ea9e:	stc    
   14000ea9f:	(bad)  
   14000eaa0:	cmp    DWORD PTR [rbp+rsi*8-0x661ba01],ecx
   14000eaa7:	call   QWORD PTR [rbx-0x4a]
   14000eaaa:	(bad)  
   14000eaab:	dec    DWORD PTR [rsi-0x52]
   14000eaae:	sti    
   14000eaaf:	inc    DWORD PTR [rdi-0x5f]
   14000eab2:	stc    
   14000eab3:	dec    DWORD PTR [rdx-0x5a]
   14000eab6:	cli    
   14000eab7:	dec    DWORD PTR [rsi-0x56]
   14000eaba:	cli    
   14000eabb:	call   QWORD PTR [rcx-0x51]
   14000eabe:	sti    
   14000eabf:	call   QWORD PTR [rbp-0x49]
   14000eac2:	std    
   14000eac3:	call   FWORD PTR [rax-0x45]
   14000eac6:	(bad)  
   14000eac7:	call   FWORD PTR [rax-0x48]
   14000eaca:	cld    
   14000eacb:	dec    DWORD PTR [rbp-0x5d]
   14000eace:	repz (bad) 
   14000ead0:	cmp    al,0x83
   14000ead2:	jrcxz  0x14000ead1
   14000ead4:	and    cl,BYTE PTR [rbp-0x57]
   14000ead7:	in     al,dx
   14000ead8:	(bad)  
   14000ead9:	outs   dx,BYTE PTR es:[rsi]
   14000eadb:	(bad)  
   14000eadc:	(bad)  
   14000eadd:	adc    BYTE PTR [rdx],dh
   14000eadf:	mov    dl,0x0
   14000eae1:	add    BYTE PTR [rax],al
   14000eae3:	lea    eax,[rax]
   14000eae5:	add    BYTE PTR [rax],al
   14000eae7:	jae    0x14000eae9
   14000eae9:	add    BYTE PTR [rax],al
   14000eaeb:	push   rbp
   14000eaec:	add    BYTE PTR [rax],al
   14000eaee:	add    BYTE PTR [rip+0x15000000],dh        # 0x15500eaf4
   14000eaf4:	add    BYTE PTR [rax],al
   14000eaf6:	add    BYTE PTR [rbx],al
	...
   14000eb10:	adc    dh,BYTE PTR [rax+rbp*4]
   14000eb13:	adc    DWORD PTR [rsi],esi
   14000eb15:	jo     0x14000eaea
   14000eb17:	sar    DWORD PTR [rbx-0x20],cl
   14000eb1a:	(bad)  
   14000eb1b:	(bad)  
   14000eb1c:	jg     0x14000eb03
   14000eb1e:	(bad)  
   14000eb1f:	(bad)  
   14000eb20:	jnp    0x14000eb04
   14000eb22:	(bad)  
   14000eb23:	jmp    FWORD PTR [rbx-0x2f]
   14000eb26:	(bad)  
   14000eb27:	call   QWORD PTR [rdx+rdi*4-0x1]
   14000eb2b:	dec    DWORD PTR [rax-0x5c]
   14000eb2e:	cli    
   14000eb2f:	inc    DWORD PTR [rdi+rbx*4-0x4]
   14000eb33:	inc    DWORD PTR [rdi-0x5d]
   14000eb36:	cld    
   14000eb37:	dec    DWORD PTR [rdx-0x59]
   14000eb3a:	cld    
   14000eb3b:	dec    DWORD PTR [rsi-0x55]
   14000eb3e:	sti    
   14000eb3f:	call   QWORD PTR [rcx-0x51]
   14000eb42:	cld    
   14000eb43:	call   QWORD PTR [rdx-0x4e]
   14000eb46:	sti    
   14000eb47:	call   QWORD PTR [rsi-0x4a]
   14000eb4a:	cld    
   14000eb4b:	call   FWORD PTR [rdx-0x43]
   14000eb4e:	(bad)  
   14000eb4f:	call   FWORD PTR [rsi-0x3d]
   14000eb52:	(bad)  
   14000eb53:	call   FWORD PTR [rdx-0x45]
   14000eb56:	sti    
   14000eb57:	dec    DWORD PTR [rdi-0x5a]
   14000eb5a:	repz (bad) 
   14000eb5c:	cmp    DWORD PTR [rdx-0x2b],edi
   14000eb5f:	stc    
   14000eb60:	and    DWORD PTR [rcx+rbp*4-0x14],ecx
   14000eb64:	or     al,0x21
   14000eb66:	(bad)  
   14000eb67:	int    0x5
   14000eb69:	(bad)  
   14000eb6a:	sub    eax,0x60201ae
   14000eb6f:	jl     0x14000eb71
   14000eb71:	add    BYTE PTR [rax],al
   14000eb73:	cmp    al,BYTE PTR [rax]
   14000eb75:	add    BYTE PTR [rax],al
   14000eb77:	or     eax,DWORD PTR [rax]
	...
   14000eb8d:	add    BYTE PTR [rax],al
   14000eb8f:	add    BYTE PTR [rsi],cl
   14000eb91:	sub    al,0x93
   14000eb93:	adc    cl,BYTE PTR [rdx-0x76]
   14000eb96:	(bad)  
   14000eb97:	(bad)  
   14000eb98:	cwde   
   14000eb99:	(bad)  
   14000eb9a:	(bad)  
   14000eb9b:	push   QWORD PTR [rsi-0x27]
   14000eb9e:	std    
   14000eb9f:	dec    DWORD PTR [rax-0x62]
   14000eba2:	idiv   edi
   14000eba4:	cmp    DWORD PTR [rsi-0x52b50009],ecx
   14000ebaa:	(bad)  
   14000ebab:	inc    DWORD PTR [rbp-0x5d]
   14000ebae:	cld    
   14000ebaf:	inc    DWORD PTR [rdx-0x68]
   14000ebb2:	idiv   bh
   14000ebb4:	rex.X (bad) 
   14000ebb6:	idiv   bh
   14000ebb8:	rex.R movabs ds:0xaf49ffffa846fffc,al
   14000ebc2:	(bad)  
   14000ebc3:	dec    DWORD PTR [rbp-0x4e]
   14000ebc6:	(bad)  
   14000ebc7:	call   QWORD PTR [rdx-0x4e]
   14000ebca:	cld    
   14000ebcb:	call   QWORD PTR [rbp-0x4b]
   14000ebce:	cld    
   14000ebcf:	call   FWORD PTR [rax-0x48]
   14000ebd2:	cld    
   14000ebd3:	call   FWORD PTR [rsi+rdi*4-0x2]
   14000ebd7:	jmp    QWORD PTR [rax-0x3b]
   14000ebda:	(bad)  
   14000ebdb:	jmp    QWORD PTR [rbx-0x37]
   14000ebde:	(bad)  
   14000ebdf:	jmp    QWORD PTR [rcx-0x3d]
   14000ebe2:	std    
   14000ebe3:	call   QWORD PTR [rcx-0x58]
   14000ebe6:	icebp  
   14000ebe7:	push   QWORD PTR [rcx]
   14000ebe9:	ins    DWORD PTR es:[rdi],dx
   14000ebea:	sar    cl,1
   14000ebec:	or     DWORD PTR [rdx],ebx
   14000ebee:	rex.WRB movabs r8,0x1000000050000000
	...
   14000ec10:	adc    dh,BYTE PTR [rsp+rbp*4]
   14000ec13:	es rex.WX mov rbx,rbx
   14000ec17:	loope  0x14000ec94
   14000ec19:	loopne 0x14000ec1a
   14000ec1b:	(bad)  
   14000ec1c:	cmp    eax,0x18fff793
   14000ec21:	(bad)  
   14000ec22:	lock jmp QWORD PTR [rdx+rsi*2]
   14000ec26:	hlt    
   14000ec27:	inc    DWORD PTR [rsi+rbp*4-0x1]
   14000ec2b:	dec    DWORD PTR [rsi-0x70]
   14000ec2e:	fcos   
   14000ec30:	jl     0x14000ec95
   14000ec32:	inc    DWORD PTR [ebp+0x7aff7170]
   14000ec39:	ins    DWORD PTR es:[rdi],dx
   14000ec3a:	jne    0x14000ec3b
   14000ec3c:	outs   dx,BYTE PTR ds:[rsi]
   14000ec3d:	je     0x14000ebc9
   14000ec3f:	jmp    QWORD PTR [rdi+0x7a]
   14000ec42:	(bad)  
   14000ec43:	call   QWORD PTR [rbp-0x6a]
   14000ec46:	(bad)  
   14000ec47:	dec    DWORD PTR [rdx+rsi*4-0x1]
   14000ec4b:	dec    DWORD PTR [rdi-0x49]
   14000ec4e:	(bad)  
   14000ec4f:	call   QWORD PTR [rsi+rsi*4-0x1]
   14000ec53:	call   FWORD PTR [rax-0x48]
   14000ec56:	cld    
   14000ec57:	call   FWORD PTR [rbx-0x44]
   14000ec5a:	std    
   14000ec5b:	call   FWORD PTR [rbp-0x40]
   14000ec5e:	std    
   14000ec5f:	jmp    QWORD PTR [rcx-0x3c]
   14000ec62:	(bad)  
   14000ec63:	jmp    FWORD PTR [rbx-0x2b]
   14000ec66:	(bad)  
   14000ec67:	dec    DWORD PTR [rdi-0x5c]
   14000ec6a:	icebp  
   14000ec6b:	dec    DWORD PTR [rip+0xc56722]        # 0x140c65393
   14000ec71:	add    BYTE PTR [rax],al
   14000ec73:	push   rbx
   14000ec74:	add    BYTE PTR [rax],al
   14000ec76:	add    BYTE PTR [rcx],dl
	...
   14000ec90:	adc    esi,DWORD PTR [rip+0xffffffff8b462fae]        # 0xcb471c44
   14000ec96:	(bad)  
   14000ec98:	fs leave 
   14000ec9a:	(bad)  
   14000ec9b:	push   QWORD PTR [rdi]
   14000ec9d:	mov    edi,?
   14000ec9f:	call   FWORD PTR [rip+0x29fff166]        # 0x16a00de0b
   14000eca5:	jp     0x14000ec9c
   14000eca7:	inc    DWORD PTR [rbx-0x4f]
   14000ecaa:	(bad)  
   14000ecab:	dec    DWORD PTR [rdx-0x80]
   14000ecae:	enter  0xa7ff,0x60
   14000ecb2:	cmp    edi,edi
   14000ecb4:	lock movabs al,ds:0x79d8ff438fe5ff58
   14000ecbe:	(bad)  
   14000ecbf:	dec    esp
   14000ecc1:	gs adc edi,edi
   14000ecc4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ecc5:	push   rbp
   14000ecc6:	sbb    al,0xff
   14000ecc8:	jl     0x14000ed34
   14000ecca:	imul   edi,edi,0x5d
   14000eccd:	xchg   ebx,eax
   14000ecce:	enter  0x4fff,0xb0
   14000ecd2:	sti    
   14000ecd3:	call   QWORD PTR [rcx-0x45]
   14000ecd6:	(bad)  
   14000ecd7:	call   QWORD PTR [rdi-0x47]
   14000ecda:	(bad)  
   14000ecdb:	call   FWORD PTR [rdx-0x45]
   14000ecde:	std    
   14000ecdf:	call   FWORD PTR [rbp-0x40]
   14000ece2:	std    
   14000ece3:	jmp    QWORD PTR [rdx+rcx*8-0x1]
   14000ece7:	dec    DWORD PTR [rbx-0x64]
   14000ecea:	out    dx,eax
   14000eceb:	dec    DWORD PTR [rip+0xc36321]        # 0x140c45012
   14000ecf1:	add    BYTE PTR [rax],al
   14000ecf3:	push   rdx
   14000ecf4:	add    BYTE PTR [rax],al
   14000ecf6:	add    BYTE PTR [rax],dl
	...
   14000ed10:	adc    esi,DWORD PTR [rsp+rbp*4]
   14000ed13:	xor    ecx,DWORD PTR [rbp+rdx*4-0x1e]
   14000ed17:	(bad)  
   14000ed18:	gs retf 
   14000ed1a:	(bad)  
   14000ed1b:	(bad)  
   14000ed1c:	cmp    BYTE PTR [rsi+rsi*8-0xe98e101],cl
   14000ed23:	jmp    FWORD PTR [rax]
   14000ed25:	jp     0x14000ed1c
   14000ed27:	inc    DWORD PTR [rdx-0x57]
   14000ed2a:	(bad)  
   14000ed2b:	push   QWORD PTR [rdi]
   14000ed2d:	xchg   ebx,eax
   14000ed2e:	sti    
   14000ed2f:	call   QWORD PTR [rdi+0x75]
   14000ed32:	mov    cl,0xff
   14000ed34:	mov    ch,0x79
   14000ed36:	pop    rax
   14000ed37:	(bad)  
   14000ed38:	inc    esp
   14000ed3a:	test   edi,edi
   14000ed3c:	(bad)  
   14000ed3d:	fild   QWORD PTR [rax+0x6eb3f3ff]
   14000ed43:	jmp    rax
   14000ed45:	and    DWORD PTR [rdi],0xffffffff
   14000ed48:	(bad)  
   14000ed49:	gs (bad) 
   14000ed4b:	push   QWORD PTR [rax-0x7800efac]
   14000ed51:	movsxd edx,DWORD PTR [rdi+rdi*8+0x62]
   14000ed55:	mov    WORD PTR [rbp-0x94fab01],?
   14000ed5b:	call   QWORD PTR [rdx-0x42]
   14000ed5e:	(bad)  
   14000ed5f:	call   QWORD PTR [rbp-0x3f]
   14000ed62:	(bad)  
   14000ed63:	call   FWORD PTR [rbp-0x35]
   14000ed66:	(bad)  
   14000ed67:	inc    DWORD PTR [rdi-0x64]
   14000ed6a:	repz dec DWORD PTR [rcx+riz*1]
   14000ed6e:	fs (bad) 
   14000ed70:	add    BYTE PTR [rax],al
   14000ed72:	add    BYTE PTR [rsi+0x0],dl
   14000ed75:	add    BYTE PTR [rax],al
   14000ed77:	adc    al,0x0
   14000ed79:	add    BYTE PTR [rax],al
   14000ed7b:	add    DWORD PTR [rax],eax
	...
   14000ed8d:	add    BYTE PTR [rax],al
   14000ed8f:	add    BYTE PTR [rbx],dl
   14000ed91:	ss mov dl,0x47
   14000ed94:	rex.WRB xchg r15,rax
   14000ed96:	out    0xf7,al
   14000ed98:	fs retf 0xffff
   14000ed9c:	(bad)  
   14000ed9d:	mov    esi,esi
   14000ed9f:	call   FWORD PTR [rsi]
   14000eda1:	addr32 icebp 
   14000eda3:	jmp    QWORD PTR [rdi]
   14000eda5:	js     0x14000ed9c
   14000eda7:	(bad)  
   14000eda8:	movabs ds:0x8f32fff98f37ffff,eax
   14000edb2:	(bad)  
   14000edb3:	dec    DWORD PTR [rax+0x74]
   14000edb6:	mov    ebp,0x627faeff
   14000edbb:	(bad)  
   14000edbc:	cld    
   14000edbd:	fisub  WORD PTR [rdx-0x551f0001]
   14000edc3:	(bad)  
   14000edc4:	sti    
   14000edc5:	(bad)
   14000edc8:	out    dx,eax
   14000edc9:	test   al,0x60
   14000edcb:	jmp    rbp
   14000edcd:	lea    esi,[rdi+rdi*8]
   14000edd0:	(bad)  
   14000edd1:	imul   ecx,DWORD PTR [rsi],0xffffffff
   14000edd4:	mov    bh,0x55
   14000edd6:	(bad)  
   14000edd7:	dec    DWORD PTR [rdi+0x79ff4460]
   14000eddd:	je     0x14000ee57
   14000eddf:	inc    DWORD PTR [rax+0x6fff6e72]
   14000ede5:	pushf  
   14000ede6:	mov    eax,0xe99145ff
   14000edeb:	inc    DWORD PTR [rdi]
   14000eded:	(bad)  
   14000edee:	pop    rsi
   14000edef:	enter  0x0,0x0
   14000edf3:	jne    0x14000edf5
   14000edf5:	add    BYTE PTR [rax],al
   14000edf7:	cmp    DWORD PTR [rax],eax
   14000edf9:	add    BYTE PTR [rax],al
   14000edfb:	(bad)  
   14000edfc:	add    BYTE PTR [rax],al
   14000edfe:	add    BYTE PTR [rax],cl
   14000ee00:	add    BYTE PTR [rax],al
   14000ee02:	add    BYTE PTR [rcx],al
	...
   14000ee10:	adc    esi,DWORD PTR [rsi]
   14000ee12:	mov    cl,0x4b
   14000ee14:	push   rbp
   14000ee15:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ee16:	jmp    0x14000ee11
   14000ee18:	data16 int3 
   14000ee1a:	(bad)  
   14000ee1b:	push   QWORD PTR [rdi]
   14000ee1d:	mov    esi,esi
   14000ee1f:	call   FWORD PTR [rsi]
   14000ee21:	addr32 icebp 
   14000ee23:	jmp    FWORD PTR [rcx]
   14000ee25:	jnp    0x14000ee1d
   14000ee27:	(bad)  
   14000ee28:	cmp    DWORD PTR [rsi-0x76cb0001],ebx
   14000ee2e:	idiv   bh
   14000ee30:	ss mov edi,esi
   14000ee33:	push   QWORD PTR [rbx]
   14000ee35:	nop
   14000ee36:	(bad)  
   14000ee37:	dec    DWORD PTR [rax+0x7a]
   14000ee3a:	(bad)  
   14000ee3b:	dec    DWORD PTR [rax-0x35008b8e]
   14000ee41:	(bad)  
   14000ee42:	outs   dx,BYTE PTR ds:[rsi]
   14000ee43:	push   rsp
   14000ee45:	(bad)  
   14000ee46:	(bad)  
   14000ee47:	(bad)  
   14000ee48:	(bad)  
   14000ee49:	(bad)  [rbx-0x6c330101]
   14000ee4f:	push   rbx
   14000ee51:	mov    cl,0x6d
   14000ee53:	jmp    rsi
   14000ee55:	xchg   edx,eax
   14000ee56:	notrack call rdi
   14000ee59:	jae    0x14000ee70
   14000ee5b:	dec    ebp
   14000ee5d:	imul   ecx,DWORD PTR [rdi],0x264ceff
   14000ee63:	push   QWORD PTR [rdi-0x7800f8a9]
   14000ee69:	push   rsp
   14000ee6a:	rex.X (bad) 
   14000ee6c:	cmp    DWORD PTR [rip+0x40ee03e],esp        # 0x1440fceb0
   14000ee72:	add    BYTE PTR [rdx-0x7e000000],ch
   14000ee78:	add    BYTE PTR [rax],al
   14000ee7a:	add    BYTE PTR [rbx+0x0],bl
   14000ee7d:	add    BYTE PTR [rax],al
   14000ee7f:	(bad)  
   14000ee80:	add    BYTE PTR [rax],al
   14000ee82:	add    BYTE PTR [rdx],bl
   14000ee84:	add    BYTE PTR [rax],al
   14000ee86:	add    BYTE PTR [rdi],al
   14000ee88:	add    BYTE PTR [rax],al
   14000ee8a:	add    BYTE PTR [rcx],al
   14000ee8c:	add    BYTE PTR [rax],al
   14000ee8e:	add    BYTE PTR [rax],al
   14000ee90:	adc    esi,DWORD PTR [rip+0xffffffffb15d51ae]        # 0xf15e4044
   14000ee96:	out    dx,al
   14000ee97:	cli    
   14000ee98:	data16 int 0xff
   14000ee9b:	push   QWORD PTR [rip+0x1ffff689]        # 0x16000e52a
   14000eea1:	push   0x7f29fff1
   14000eea6:	idiv   edi
   14000eea8:	xor    al,0x98
   14000eeaa:	(bad)  
   14000eeab:	push   QWORD PTR [rcx]
   14000eead:	test   esi,esi
   14000eeaf:	push   QWORD PTR [rbx]
   14000eeb1:	test   ebp,esi
   14000eeb3:	push   QWORD PTR [rsi]
   14000eeb5:	mov    dh,bh
   14000eeb7:	push   QWORD PTR [rip+0x36ffff90]        # 0x17700ee4d
   14000eebd:	mov    esi,esi
   14000eebf:	dec    DWORD PTR [rdx+0x79]
   14000eec2:	mov    esi,0x83747bff
   14000eec7:	push   QWORD PTR [rdi-0x13009575]
   14000eecd:	mov    esp,0xd9ffff85
   14000eed2:	movabs eax,ds:0x78b7f6ff9cd4ffff
   14000eedb:	(bad)  
   14000eedc:	in     eax,dx
   14000eedd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eede:	pop    rbx
   14000eedf:	jmp    rsp
   14000eee1:	xchg   esp,eax
   14000eee2:	rex.X (bad) 
   14000eee4:	fiadd  WORD PTR [rcx+0x6dd5ff23]
   14000eeea:	or     bh,bh
   14000eeec:	(bad)  
   14000eeed:	pop    rax
   14000eeee:	add    dh,bh
   14000eef0:	xchg   ecx,eax
   14000eef1:	cmp    BYTE PTR [rax],al
   14000eef3:	repz push rsi
   14000eef5:	(bad)  
   14000eef6:	add    bh,dl
   14000eef8:	sbb    ecx,DWORD PTR [rax]
   14000eefa:	add    BYTE PTR [rbp-0x7b000000],ch
   14000ef00:	add    BYTE PTR [rax],al
   14000ef02:	add    BYTE PTR [rbx+0x0],bl
   14000ef05:	add    BYTE PTR [rax],al
   14000ef07:	sub    DWORD PTR [rax],eax
   14000ef09:	add    BYTE PTR [rax],al
   14000ef0b:	or     BYTE PTR [rax],al
   14000ef0d:	add    BYTE PTR [rax],al
   14000ef0f:	add    BYTE PTR [rax+rdi*1],dl
   14000ef12:	mov    dh,0x65
   14000ef14:	pop    rbp
   14000ef15:	mov    cl,0xf0
   14000ef17:	jmp    QWORD PTR [rbp-0x34]
   14000ef1a:	(bad)  
   14000ef1b:	push   QWORD PTR [rip+0x1ffff689]        # 0x16000e5aa
   14000ef21:	imul   esi,ecx,0xf77d28ff
   14000ef27:	push   QWORD PTR [rdx]
   14000ef29:	xchg   esi,eax
   14000ef2a:	std    
   14000ef2b:	jmp    FWORD PTR [rdi]
   14000ef2d:	(bad)  
   14000ef2e:	idiv   bh
   14000ef30:	xor    DWORD PTR [rcx-0x79cb000b],eax
   14000ef36:	cmc    
   14000ef37:	push   QWORD PTR [rsi]
   14000ef39:	mov    dh,dh
   14000ef3b:	(bad)  
   14000ef3c:	cmp    BYTE PTR [rsi-0x6ac80007],cl
   14000ef42:	(bad)  
   14000ef43:	(bad)  
   14000ef44:	cmp    BYTE PTR [rdx-0x7cb80007],dl
   14000ef4a:	sar    bh,cl
   14000ef4c:	jo     0x14000efbf
   14000ef4e:	mov    bh,bh
   14000ef50:	stos   DWORD PTR es:[rdi],eax
   14000ef51:	xchg   BYTE PTR [rbp-0x1],ch
   14000ef54:	jrcxz  0x14000ef07
   14000ef56:	jp     0x14000ef57
   14000ef58:	call   rdi
   14000ef5a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ef5b:	(bad)  
   14000ef5c:	std    
   14000ef5d:	retf   0xff95
   14000ef60:	idiv   BYTE PTR [rax-0x57120084]
   14000ef66:	movsxd edi,edi
   14000ef68:	in     eax,0x97
   14000ef6a:	rex.W (bad) 
   14000ef6c:	fimul  WORD PTR [rax+0x74d4ff2d]
   14000ef72:	adc    al,0xff
   14000ef74:	ret    0x45d
   14000ef77:	call   FWORD PTR [rbp+0x5ef60342]
   14000ef7d:	and    DWORD PTR [rcx],eax
   14000ef7f:	fmul   QWORD PTR [rdi]
   14000ef81:	add    eax,0xa200
   14000ef86:	add    BYTE PTR [rsi+0x0],bl
   14000ef89:	add    BYTE PTR [rax],al
   14000ef8b:	sbb    DWORD PTR [rax],eax
   14000ef8d:	add    BYTE PTR [rax],al
   14000ef8f:	add    BYTE PTR [rip+0x6465bb51],ah        # 0x1a466aae6
   14000ef95:	mov    esp,0xc964fff3
   14000ef9a:	(bad)  
   14000ef9b:	push   QWORD PTR [rip+0x1ffff689]        # 0x16000e62a
   14000efa1:	imul   esi,ecx,0xf77e28ff
   14000efa7:	push   QWORD PTR [rdx]
   14000efa9:	xchg   ebx,eax
   14000efaa:	std    
   14000efab:	jmp    FWORD PTR [rip+0x2efff57e]        # 0x16f00e52f
   14000efb1:	jg     0x14000efa7
   14000efb3:	push   QWORD PTR [rcx]
   14000efb5:	(bad)  
   14000efb6:	cmc    
   14000efb7:	push   QWORD PTR [rsi+rax*4]
   14000efba:	idiv   bh
   14000efbc:	ss mov dh,dh
   14000efbf:	(bad)  
   14000efc0:	cmp    DWORD PTR [rbp-0x6ec4000a],ecx
   14000efc6:	clc    
   14000efc7:	(bad)  
   14000efc8:	cmp    ebx,DWORD PTR [rax-0x65c50001]
   14000efce:	(bad)  
   14000efcf:	inc    DWORD PTR [rdx-0x76]
   14000efd2:	fdivp  st(7),st
   14000efd4:	ins    BYTE PTR es:[rdi],dx
   14000efd5:	outs   dx,DWORD PTR ds:[rsi]
   14000efd6:	mov    bh,bh
   14000efd8:	(bad)  
   14000efd9:	movabs ds:0xe1ffffbaedffff71,eax
   14000efe2:	scas   eax,DWORD PTR es:[rdi]
   14000efe3:	(bad)  
   14000efe4:	dec    esi
   14000efe6:	cdq    
   14000efe7:	(bad)  
   14000efe8:	clc    
   14000efe9:	mov    ebp,0xacf0ff84
   14000efee:	push   0xffffffffffffffff
   14000eff0:	out    0x9b,eax
   14000eff2:	rex.WRX jmp rsp
   14000eff5:	xchg   ebx,eax
   14000eff6:	rex.B (bad) 
   14000eff8:	(bad)  
   14000eff9:	lahf   
   14000effa:	push   rcx
   14000effb:	call   rdx
   14000effd:	jle    0x14000f035
   14000efff:	jmp    FWORD PTR [rbp+0x29]
   14000f002:	add    al,0xe2
   14000f004:	add    BYTE PTR [rax],al
   14000f006:	add    BYTE PTR [rdi+0x0],bh
   14000f009:	add    BYTE PTR [rax],al
   14000f00b:	sub    BYTE PTR [rax],al
   14000f00d:	add    BYTE PTR [rax],al
   14000f00f:	add    BYTE PTR [rdi],bl
   14000f011:	movabs rdx,0xffc662fff5c06777
   14000f01b:	push   QWORD PTR [rip+0x1ffff689]        # 0x16000e6aa
   14000f021:	imul   esi,ecx,0xf9842bff
   14000f027:	push   QWORD PTR [rcx]
   14000f029:	nop
   14000f02a:	cld    
   14000f02b:	jmp    FWORD PTR [rdx]
   14000f02d:	jns    0x14000f023
   14000f02f:	jmp    FWORD PTR [rbx+rdi*2]
   14000f032:	hlt    
   14000f033:	jmp    FWORD PTR [rip+0x2efff47d]        # 0x16f00e4b6
   14000f039:	jle    0x14000f02f
   14000f03b:	push   QWORD PTR [rdx]
   14000f03d:	xor    ebp,0xffffffff
   14000f040:	ss mov esi,esi
   14000f043:	(bad)  
   14000f044:	cmp    DWORD PTR [rbp-0x6fc4000a],ecx
   14000f04a:	idiv   edi
   14000f04c:	ds xchg ebp,eax
   14000f04e:	clc    
   14000f04f:	(bad)  
   14000f050:	cmp    al,0x9d
   14000f052:	(bad)  
   14000f053:	(bad)  
   14000f054:	ds xchg edi,eax
   14000f056:	idiv   bh
   14000f058:	test   DWORD PTR [rdi+0x63],esp
   14000f05b:	call   rsp
   14000f05d:	lea    ecx,[rax-0x1]
   14000f060:	jmp    0x13d00802c
   14000f065:	out    0xb7,eax
   14000f067:	(bad)  
   14000f068:	jmp    rsi
   14000f06a:	mov    ch,0xff
   14000f06c:	call   rbp
   14000f06e:	movabs ds:0x93cafbff89c1faff,eax
   14000f077:	(bad)  
   14000f078:	call   rsi
   14000f07a:	movabs eax,ds:0x2159afff89c6fdff
   14000f083:	stc    
   14000f084:	add    BYTE PTR [rax],al
   14000f086:	add    BYTE PTR [rax+rax*1+0x0],bh
   14000f08a:	add    BYTE PTR [rip+0x0],ah        # 0x14000f090
   14000f090:	and    BYTE PTR [rdx-0x41],cl
   14000f093:	mov    ebp,DWORD PTR [rax-0x3f]
   14000f096:	cmc    
   14000f097:	jmp    QWORD PTR [rax-0x3c]
   14000f09a:	(bad)  
   14000f09b:	push   QWORD PTR [rdx]
   14000f09d:	test   esi,esi
   14000f09f:	call   FWORD PTR [rbx]
   14000f0a1:	movsxd esi,eax
   14000f0a3:	jmp    FWORD PTR [rcx]
   14000f0a5:	cmp    ecx,0xffffffff
   14000f0a8:	xor    BYTE PTR [rdi+0x7627fffc],cl
   14000f0ae:	repz jmp FWORD PTR [rcx]
   14000f0b1:	jbe    0x14000f0a6
   14000f0b3:	push   QWORD PTR [rdi]
   14000f0b5:	mov    esi,esi
   14000f0b7:	(bad)  
   14000f0b8:	cmp    dl,BYTE PTR [rbx-0x76cd0008]
   14000f0be:	idiv   bh
   14000f0c0:	xor    BYTE PTR [rbx-0x7ace000a],al
   14000f0c6:	idiv   bh
   14000f0c8:	(bad)  
   14000f0c9:	mov    dh,dh
   14000f0cb:	(bad)  
   14000f0cc:	cmp    ecx,DWORD PTR [rdi-0x6bc20009]
   14000f0d2:	clc    
   14000f0d3:	(bad)  
   14000f0d4:	cmp    ebx,DWORD PTR [rdi+rdi*8-0x6b8c9601]
   14000f0db:	dec    ebx
   14000f0dd:	pop    rbx
   14000f0de:	(bad)  
   14000f0df:	call   rax
   14000f0e1:	je     0x14000f105
   14000f0e3:	dec    eax
   14000f0e5:	add    DWORD PTR [rcx-0x1],0xff81b9e2
   14000f0ec:	clc    
   14000f0ed:	fldenv [rax-0x4c190001]
   14000f0f3:	(bad)  
   14000f0f4:	push   rsp
   14000f0f6:	(bad)  
   14000f0f7:	(bad)  
   14000f0f8:	push   rsp
   14000f0fa:	int3   
   14000f0fb:	(bad)  
   14000f0fc:	jmp    rbp
   14000f0fe:	mov    bl,0xff
   14000f100:	scas   al,BYTE PTR es:[rdi]
   14000f101:	pop    rdi
   14000f102:	repz add BYTE PTR cs:[rax],al
   14000f106:	add    BYTE PTR [rsi+0x0],dl
   14000f109:	add    BYTE PTR [rax],al
   14000f10b:	(bad)  
   14000f10c:	add    BYTE PTR [rax],al
   14000f10e:	add    BYTE PTR [rax],al
   14000f110:	(bad)  
   14000f111:	push   rsi
   14000f112:	ror    BYTE PTR [rsi+rbp*2+0x63fff8cc],0xc6
   14000f11a:	(bad)  
   14000f11b:	dec    DWORD PTR [rcx-0x5e]
   14000f11e:	stc    
   14000f11f:	inc    DWORD PTR [rbx-0x67]
   14000f122:	idiv   edi
   14000f124:	cmp    al,0x9c
   14000f126:	cld    
   14000f127:	jmp    FWORD PTR [rcx+rcx*4]
   14000f12a:	sti    
   14000f12b:	jmp    QWORD PTR [rax+rsi*2]
   14000f12e:	bnd jmp QWORD PTR [rax+rsi*2]
   14000f132:	repnz inc DWORD PTR [rsi-0x5f]
   14000f136:	cli    
   14000f137:	inc    DWORD PTR [rax+0x72fffdd8]
   14000f13d:	(bad)  
   14000f13e:	cli    
   14000f13f:	call   FWORD PTR [rax-0x4b]
   14000f142:	sti    
   14000f143:	dec    DWORD PTR [rcx-0x59]
   14000f146:	sti    
   14000f147:	(bad)  
   14000f148:	cmp    DWORD PTR [rax-0x70c90006],ebx
   14000f14e:	stc    
   14000f14f:	(bad)  
   14000f150:	cmp    BYTE PTR [rax-0x6bc50008],dl
   14000f156:	cli    
   14000f157:	inc    DWORD PTR [rbp-0x76]
   14000f15a:	(bad)  
   14000f15c:	jnp    0x14000f1cf
   14000f15e:	(bad)  
   14000f15f:	push   QWORD PTR [rbx-0x3000bd92]
   14000f165:	jo     0x14000f18a
   14000f167:	call   rax
   14000f169:	ins    BYTE PTR es:[rdi],dx
   14000f16a:	adc    al,0xff
   14000f16c:	shl    BYTE PTR [rbp+rdx*1-0x1],cl
   14000f170:	xlat   BYTE PTR ds:[rbx]
   14000f171:	pushf  
   14000f172:	pop    rax
   14000f173:	push   rbx
   14000f175:	jmp    0x137fbf13d
   14000f17a:	fdivp  st(7),st
   14000f17c:	fidiv  WORD PTR [rcx+0x2e7aff7e]
   14000f182:	or     DWORD PTR [rsi+0x22000000],esp
   14000f188:	add    BYTE PTR [rax],al
   14000f18a:	add    BYTE PTR [rsi],al
   14000f18c:	add    BYTE PTR [rax],al
   14000f18e:	add    BYTE PTR [rax],al
   14000f190:	sub    DWORD PTR [rax-0x3c],ebx
   14000f193:	popf   
   14000f194:	jnp    0x14000f16f
   14000f196:	stc    
   14000f197:	inc    DWORD PTR [rdi+0x7fffffee]
   14000f19d:	in     al,0xff
   14000f19f:	push   QWORD PTR [rbx-0x26]
   14000f1a2:	(bad)  
   14000f1a3:	dec    DWORD PTR [rax-0x50]
   14000f1a6:	(bad)  
   14000f1a7:	jmp    FWORD PTR [rcx]
   14000f1a9:	cmp    ecx,0xffffffff
   14000f1ac:	and    DWORD PTR [rbx-0xe],ebp
   14000f1af:	jmp    QWORD PTR [rdx]
   14000f1b1:	outs   dx,BYTE PTR ds:[rsi]
   14000f1b2:	repnz (bad) 
   14000f1b4:	(bad)  
   14000f1b5:	lahf   
   14000f1b6:	cli    
   14000f1b7:	(bad)  
   14000f1b8:	mov    eax,0xf4fff9eb
   14000f1bd:	std    
   14000f1be:	out    dx,al
   14000f1bf:	jmp    rax
   14000f1c1:	clc    
   14000f1c2:	in     eax,dx
   14000f1c3:	(bad)  
   14000f1c4:	mov    edx,0x96fff0ea
   14000f1c9:	(bad)  
   14000f1cb:	(bad)  
   14000f1cc:	jp     0x14000f19b
   14000f1ce:	idiv   bh
   14000f1d0:	pop    rsi
   14000f1d1:	mov    edx,0xa847fffa
   14000f1d6:	std    
   14000f1d7:	inc    DWORD PTR [rbx-0x5c]
   14000f1da:	(bad)  
   14000f1db:	(bad)  
   14000f1dc:	cmp    eax,0x49fffc99
   14000f1e1:	mov    bl,al
   14000f1e3:	push   QWORD PTR [rbp+0x7a]
   14000f1e6:	xchg   edx,eax
   14000f1e7:	jmp    QWORD PTR [rax-0x7d00ab94]
   14000f1ed:	cmp    DWORD PTR [rax],ebx
   14000f1ef:	jmp    0x14000f25e
   14000f1f1:	(bad)  
   14000f1f2:	add    BYTE PTR [rcx-0x59e5b668],ch
   14000f1f8:	lods   al,BYTE PTR ds:[rsi]
   14000f1f9:	gs ss mov dh,0x8a
   14000f1fd:	xor    al,0x8
   14000f1ff:	jge    0x14000f227
   14000f201:	or     al,0x0
   14000f203:	sbb    BYTE PTR [rax],al
   14000f205:	add    BYTE PTR [rax],al
   14000f207:	add    eax,0x0
   14000f20c:	add    BYTE PTR [rax],al
   14000f20e:	add    BYTE PTR [rax],al
   14000f210:	cs (bad) 
   14000f212:	retf   0x8bb0
   14000f215:	jmp    0x14000f211
   14000f217:	dec    DWORD PTR [rcx+0x5ffffff1]
   14000f21d:	mov    esp,0x8e3afffb
   14000f222:	idiv   bh
   14000f224:	xor    edx,DWORD PTR [rsp+rdi*8-0x578d401]
   14000f22b:	jmp    QWORD PTR [rax]
   14000f22d:	push   0xfffffffffffffff2
   14000f22f:	jmp    QWORD PTR [rcx]
   14000f231:	ins    BYTE PTR es:[rdi],dx
   14000f232:	repnz inc DWORD PTR [rbp+riz*4-0x5]
   14000f237:	inc    ebp
   14000f239:	out    dx,eax
   14000f23a:	std    
   14000f23b:	(bad)  
   14000f23c:	(bad)  
   14000f23d:	push   rbx
   14000f23f:	(bad)  
   14000f240:	(bad)  
   14000f241:	(bad)  
   14000f242:	jmp    0x14000f243
   14000f244:	(bad)  
   14000f245:	jmp    rsp
   14000f247:	(bad)  
   14000f248:	(bad)  
   14000f249:	(bad)  
   14000f24a:	(bad)  
   14000f24c:	repnz std 
   14000f24e:	(bad)  
   14000f250:	(bad)  
   14000f252:	(bad)  
   14000f254:	ret    0xe3ee
   14000f257:	push   QWORD PTR [rsi-0x31]
   14000f25a:	clc    
   14000f25b:	inc    DWORD PTR [rdx-0x5f]
   14000f25e:	std    
   14000f25f:	(bad)  
   14000f260:	cmp    ebx,DWORD PTR [rcx-0x5dc00001]
   14000f266:	(bad)  
   14000f267:	(bad)  
   14000f268:	cmp    BYTE PTR [rcx+riz*8-0x1],bh
   14000f26c:	adc    bl,BYTE PTR [rsi]
   14000f26e:	push   rsp
   14000f26f:	rol    DWORD PTR [rax],0x0
   14000f272:	add    BYTE PTR [rdx+0x0],dl
   14000f275:	add    BYTE PTR [rax],al
   14000f277:	adc    DWORD PTR [rax],eax
	...
   14000f28d:	add    BYTE PTR [rax],al
   14000f28f:	add    BYTE PTR [rdi],dh
   14000f291:	ins    DWORD PTR es:[rdi],dx
   14000f292:	retf   
   14000f293:	scas   al,BYTE PTR es:[rdi]
   14000f294:	xchg   dl,ch
   14000f296:	(bad)  
   14000f297:	jmp    QWORD PTR [rdx-0x3c]
   14000f29a:	std    
   14000f29b:	push   QWORD PTR [rbx]
   14000f29d:	xchg   esi,esi
   14000f29f:	call   FWORD PTR [rbx]
   14000f2a1:	fs icebp 
   14000f2a3:	jmp    FWORD PTR [rip+0x2cfffb8a]        # 0x16d00ee33
   14000f2a9:	xchg   edx,edi
   14000f2ab:	jmp    QWORD PTR [rax]
   14000f2ad:	push   0xfffffffffffffff2
   14000f2af:	jmp    QWORD PTR [rcx]
   14000f2b1:	ins    BYTE PTR es:[rdi],dx
   14000f2b2:	repnz dec DWORD PTR [rax-0x57]
   14000f2b6:	sti    
   14000f2b7:	push   QWORD PTR [rbp+rbp*8-0x61b0001]
   14000f2be:	sti    
   14000f2bf:	(bad)  
   14000f2c0:	clc    
   14000f2c1:	push   rsp
   14000f2c3:	(bad)  
   14000f2c4:	(bad)  
   14000f2c5:	(bad)  
   14000f2c6:	in     al,dx
   14000f2c7:	(bad)  
   14000f2c8:	(bad)  
   14000f2c9:	jmp    rbp
   14000f2cb:	(bad)  
   14000f2cc:	(bad)  
   14000f2cd:	(bad)  
   14000f2ce:	fdivp  st(7),st
   14000f2d0:	(bad)  
   14000f2d1:	call   rbp
   14000f2d3:	(bad)  
   14000f2d4:	(bad)  
   14000f2d5:	call   rax
   14000f2d7:	dec    DWORD PTR [rdi+rdx*8-0x62bf000e]
   14000f2de:	sti    
   14000f2df:	(bad)  
   14000f2e0:	cmp    edx,DWORD PTR [rdx-0x61bc0009]
   14000f2e6:	cli    
   14000f2e7:	push   QWORD PTR [rax+rax*4]
   14000f2ea:	out    dx,eax
   14000f2eb:	dec    DWORD PTR [rdx]
   14000f2ed:	and    DWORD PTR [rax-0x3d],ebp
   14000f2f0:	add    BYTE PTR [rax],al
   14000f2f2:	add    BYTE PTR [rdx+0x0],dl
   14000f2f5:	add    BYTE PTR [rax],al
   14000f2f7:	adc    DWORD PTR [rax],eax
	...
   14000f30d:	add    BYTE PTR [rax],al
   14000f30f:	add    BYTE PTR [rsi],dh
   14000f311:	outs   dx,BYTE PTR ds:[rsi]
   14000f312:	rol    dl,1
   14000f314:	jp     0x14000f2f3
   14000f316:	(bad)  
   14000f317:	call   FWORD PTR [rdx-0x45]
   14000f31a:	std    
   14000f31b:	push   QWORD PTR [rax+rcx*4]
   14000f31e:	idiv   bh
   14000f320:	and    BYTE PTR [rdx-0xe],ch
   14000f323:	jmp    FWORD PTR [rsi]
   14000f325:	mov    ?,esp
   14000f327:	jmp    FWORD PTR [rdx]
   14000f329:	cmp    eax,0xffffffff
   14000f32c:	(bad)  
   14000f32d:	push   0x6b20fff1
   14000f332:	repnz push QWORD PTR [rdi]
   14000f335:	mov    esi,esi
   14000f337:	call   QWORD PTR [rax-0x54]
   14000f33a:	sti    
   14000f33b:	jmp    QWORD PTR [rbp-0x42]
   14000f33e:	std    
   14000f33f:	(bad)  
   14000f340:	jnp    0x14000f30f
   14000f342:	std    
   14000f343:	call   QWORD PTR [rbp-0x47000425]
   14000f349:	(bad)  
   14000f34a:	cmc    
   14000f34b:	call   rbp
   14000f34d:	cmc    
   14000f34e:	in     eax,dx
   14000f34f:	(bad)  
   14000f350:	in     eax,dx
   14000f351:	sti    
   14000f352:	in     al,0xff
   14000f354:	hlt    
   14000f355:	std    
   14000f356:	(bad)  
   14000f358:	mov    esi,edx
   14000f35a:	cmc    
   14000f35b:	(bad)  
   14000f35c:	ds (bad) 
   14000f35e:	cli    
   14000f35f:	(bad)  
   14000f360:	cmp    DWORD PTR [rbp-0x66bf000a],ecx
   14000f366:	stc    
   14000f367:	push   QWORD PTR [rdi*2+0x210dffeb]
   14000f36e:	movsxd eax,ebx
   14000f370:	add    BYTE PTR [rax],al
   14000f372:	add    BYTE PTR [rdx+0x0],dl
   14000f375:	add    BYTE PTR [rax],al
   14000f377:	adc    DWORD PTR [rax],eax
	...
   14000f38d:	add    BYTE PTR [rax],al
   14000f38f:	add    BYTE PTR [rbx],bh
   14000f391:	jne    0x14000f366
   14000f393:	iret   
   14000f394:	jle    0x14000f37a
   14000f396:	(bad)  
   14000f397:	call   FWORD PTR [rbx-0x44]
   14000f39a:	std    
   14000f39b:	push   QWORD PTR [rbx]
   14000f39d:	xchg   esi,esi
   14000f39f:	call   FWORD PTR [rbx]
   14000f3a1:	gs icebp 
   14000f3a3:	jmp    FWORD PTR [rdi+rcx*4]
   14000f3a6:	std    
   14000f3a7:	jmp    QWORD PTR [rsi]
   14000f3a9:	jle    0x14000f3a3
   14000f3ab:	call   FWORD PTR [rip+0x1ffff166]        # 0x16000e517
   14000f3b1:	push   0xfffffffffffffff2
   14000f3b3:	jmp    QWORD PTR [rax]
   14000f3b5:	imul   esi,edx,0xffffffff
   14000f3b8:	and    BYTE PTR [rbx-0xe],ch
   14000f3bb:	call   FWORD PTR [rdi]
   14000f3bd:	outs   dx,BYTE PTR ds:[rsi]
   14000f3be:	bnd jmp QWORD PTR [rdi]
   14000f3c1:	jl     0x14000f3b8
   14000f3c3:	push   QWORD PTR [rdi+rcx*4]
   14000f3c6:	clc    
   14000f3c7:	inc    DWORD PTR [rax+riz*4-0x6]
   14000f3cb:	call   QWORD PTR [rcx-0x51]
   14000f3ce:	sti    
   14000f3cf:	jmp    QWORD PTR [rdi+rdi*4-0x5]
   14000f3d3:	inc    DWORD PTR [rsi+0x71fff8d4]
   14000f3d9:	sar    ah,1
   14000f3db:	inc    DWORD PTR [rcx-0x66]
   14000f3de:	stc    
   14000f3df:	push   QWORD PTR [rsi]
   14000f3e1:	mov    ebp,esi
   14000f3e3:	(bad)  
   14000f3e4:	ds xchg ebp,eax
   14000f3e6:	stc    
   14000f3e7:	push   QWORD PTR [rdx]
   14000f3e9:	jnp    0x14000f3d5
   14000f3eb:	dec    DWORD PTR [rip+0xc36321]        # 0x140c45712
   14000f3f1:	add    BYTE PTR [rax],al
   14000f3f3:	push   rdx
   14000f3f4:	add    BYTE PTR [rax],al
   14000f3f6:	add    BYTE PTR [rcx],dl
	...
   14000f410:	rex.XB adc r14b,0xd2
   14000f414:	test   dh,ch
   14000f416:	(bad)  
   14000f417:	call   FWORD PTR [rax-0x48]
   14000f41a:	std    
   14000f41b:	(bad)  
   14000f41c:	cmp    dl,BYTE PTR [rax+0x7a2cfff7]
   14000f422:	hlt    
   14000f423:	(bad)  
   14000f424:	cmp    ebx,DWORD PTR [rbp-0x75cd0003]
   14000f42a:	stc    
   14000f42b:	jmp    QWORD PTR [rsi]
   14000f42d:	jo     0x14000f421
   14000f42f:	call   FWORD PTR [rdi]
   14000f431:	imul   esi,edx,0xffffffff
   14000f434:	sbb    BYTE PTR [rcx+rsi*8-0x1],ah
   14000f438:	sbb    DWORD PTR [rbp-0xf],esp
   14000f43b:	call   FWORD PTR [rsi+riz*2]
   14000f43e:	icebp  
   14000f43f:	call   FWORD PTR [rip+0x20fff168]        # 0x16100e5ad
   14000f445:	imul   esi,ecx,0xffffffff
   14000f448:	and    DWORD PTR [rsi-0xe],ebp
   14000f44b:	jmp    QWORD PTR [rsi]
   14000f44d:	je     0x14000f443
   14000f44f:	jmp    FWORD PTR [rip+0x32fff680]        # 0x17300ead5
   14000f455:	mov    bh,al
   14000f457:	(bad)  
   14000f458:	ds xchg esi,eax
   14000f45a:	clc    
   14000f45b:	(bad)  
   14000f45c:	cmp    DWORD PTR [rbp-0x77c9000a],ecx
   14000f462:	idiv   bh
   14000f464:	cmp    edx,DWORD PTR [rcx+0x7730fff8]
   14000f46a:	(bad)  
   14000f46b:	dec    DWORD PTR [rip+0xc36321]        # 0x140c45792
   14000f471:	add    BYTE PTR [rax],al
   14000f473:	push   rdx
   14000f474:	add    BYTE PTR [rax],al
   14000f476:	add    BYTE PTR [rcx],dl
	...
   14000f490:	rex.RXB xchg r13d,r11d
   14000f493:	call   0x14000f32b
   14000f498:	jge    0x14000f476
   14000f49a:	(bad)  
   14000f49b:	inc    DWORD PTR [rbp-0x4f00042d]
   14000f4a1:	in     al,0xfd
   14000f4a3:	dec    ecx
   14000f4a5:	repz (bad) 
   14000f4a7:	push   QWORD PTR [rsi-0x65000019]
   14000f4ad:	sar    esi,1
   14000f4af:	(bad)  
   14000f4b0:	jp     0x14000f469
   14000f4b2:	sti    
   14000f4b3:	call   FWORD PTR [rdx-0x63]
   14000f4b6:	stc    
   14000f4b7:	inc    DWORD PTR [rdi-0x72]
   14000f4ba:	idiv   edi
   14000f4bc:	xor    eax,0x24fff57f
   14000f4c1:	jo     0x14000f4b6
   14000f4c3:	call   FWORD PTR [rip+0x1ffff269]        # 0x16000e732
   14000f4c9:	ins    BYTE PTR es:[rdi],dx
   14000f4ca:	bnd jmp QWORD PTR [rdx]
   14000f4cd:	outs   dx,DWORD PTR ds:[rsi]
   14000f4ce:	bnd jmp QWORD PTR [rcx+rsi*2]
   14000f4d2:	bnd jmp QWORD PTR [rdi]
   14000f4d5:	jne    0x14000f4ca
   14000f4d7:	jmp    FWORD PTR [rbx]
   14000f4d9:	jp     0x14000f4cf
   14000f4db:	push   QWORD PTR [rax]
   14000f4dd:	xor    ebp,0xf68634ff
   14000f4e3:	(bad)  
   14000f4e4:	cmp    BYTE PTR [rsi+0x752efff8],cl
   14000f4ea:	jmp    0x1a32201ee
   14000f4ef:	(bad)  
   14000f4f0:	add    BYTE PTR [rax],al
   14000f4f2:	add    BYTE PTR [rbx+0x0],dl
   14000f4f5:	add    BYTE PTR [rax],al
   14000f4f7:	adc    DWORD PTR [rax],eax
	...
   14000f50d:	add    BYTE PTR [rax],al
   14000f50f:	add    BYTE PTR [rax+rdi*2],bh
   14000f512:	fcomi  st,st(6)
   14000f514:	mov    ah,al
   14000f516:	idiv   edi
   14000f518:	jge    0x14000f4ea
   14000f51a:	hlt    
   14000f51b:	inc    DWORD PTR [rbp-0x4d001146]
   14000f521:	shl    ah,cl
   14000f523:	call   rdx
   14000f525:	call   0x125cff523
   14000f52a:	idiv   edi
   14000f52c:	iret   
   14000f52d:	in     al,dx
   14000f52e:	cli    
   14000f52f:	call   rdi
   14000f531:	cli    
   14000f532:	(bad)  
   14000f533:	(bad)  
   14000f534:	(bad)  
   14000f536:	(bad)  
   14000f537:	inc    ebx
   14000f539:	idiv   bh
   14000f53b:	jmp    QWORD PTR [rbp-0x7400001f]
   14000f541:	(bad)  
   14000f542:	(bad)  
   14000f543:	push   QWORD PTR [rcx-0x46]
   14000f546:	std    
   14000f547:	call   QWORD PTR [rdi-0x5d]
   14000f54a:	cli    
   14000f54b:	inc    DWORD PTR [rdx+rdx*4-0x7]
   14000f54f:	push   QWORD PTR [rcx]
   14000f551:	xor    dh,0xff
   14000f554:	sub    edi,DWORD PTR [rdx-0xb]
   14000f557:	jmp    FWORD PTR [rbx]
   14000f559:	jl     0x14000f550
   14000f55b:	jmp    FWORD PTR [rip+0x30fff57f]        # 0x17100eae0
   14000f561:	(bad)  
   14000f562:	cmc    
   14000f563:	push   QWORD PTR [rip+0x2dfff88a]        # 0x16e00edf3
   14000f569:	jae    0x14000f554
   14000f56b:	dec    DWORD PTR [rip+0xbb6723]        # 0x140bc5c94
   14000f571:	add    BYTE PTR [rax],al
   14000f573:	rex.WR add BYTE PTR [rax],r8b
   14000f576:	add    BYTE PTR [rax],dl
	...
   14000f590:	(bad)  
   14000f591:	rex.W enter 0x2659,0x53
   14000f596:	mov    DWORD PTR [rcx+rsi*1+0x3ca8cc63],0x3dd3d773
   14000f5a1:	jbe    0x14000f57e
   14000f5a3:	lock rex.R jl 0x14000f586
   14000f5a7:	sti    
   14000f5a8:	pop    rcx
   14000f5a9:	(bad)  
   14000f5aa:	in     eax,0xff
   14000f5ac:	ja     0x14000f555
   14000f5ae:	in     eax,dx
   14000f5af:	inc    DWORD PTR [rbp-0x71000f4e]
   14000f5b5:	mov    ebx,0xc395fff0
   14000f5ba:	icebp  
   14000f5bb:	jmp    FWORD PTR [rdx-0x40000824]
   14000f5c1:	idiv   ebp
   14000f5c3:	(bad)  
   14000f5c4:	mov    edi,0xaffffefe
   14000f5c9:	hlt    
   14000f5ca:	(bad)  
   14000f5cb:	jmp    QWORD PTR [rdx-0x67000112]
   14000f5d1:	(bad)  
   14000f5d2:	(bad)  
   14000f5d3:	inc    DWORD PTR [rdx+0x66ffffda]
   14000f5d9:	sar    dh,0xff
   14000f5dc:	rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f5de:	cli    
   14000f5df:	(bad)  
   14000f5e0:	cmp    BYTE PTR [rax-0x72ca0008],dl
   14000f5e6:	cli    
   14000f5e7:	jmp    FWORD PTR [rbx]
   14000f5e9:	jae    0x14000f5d5
   14000f5eb:	call   QWORD PTR [rax]
   14000f5ed:	sub    eax,DWORD PTR [rcx+0x9c]
   14000f5f3:	add    BYTE PTR cs:[rax],al
   14000f5f6:	add    BYTE PTR [rcx],cl
	...
   14000f618:	adc    al,0x3d
   14000f61a:	int3   
   14000f61b:	add    DWORD PTR [rcx],edx
   14000f61d:	cmp    al,al
   14000f61f:	adc    bl,BYTE PTR [rdx]
   14000f621:	rex.XB ret 0x1e1e
   14000f625:	rol    QWORD PTR [rbx+0x21],0x4c
   14000f62a:	(bad)
   14000f62d:	rex.WRB (bad) 
   14000f62f:	xchg   ebp,eax
   14000f630:	sub    BYTE PTR [rdi-0x32],dl
   14000f633:	mov    ch,0x2f
   14000f635:	pop    rdi
   14000f636:	(bad)  
   14000f637:	rol    DWORD PTR [rcx+0x74],cl
   14000f63a:	fucomp st(2)
   14000f63c:	rex.WRXB xchg r15b,r12b
   14000f63f:	(bad)  
   14000f640:	push   rdx
   14000f641:	mov    edi,esp
   14000f643:	call   FWORD PTR [rcx-0x6e]
   14000f646:	jmp    0x12fac634a
   14000f64b:	inc    DWORD PTR [rax-0x6f000a39]
   14000f651:	fdiv   st(1),st
   14000f653:	inc    DWORD PTR [rbp+0x5dfff4d3]
   14000f659:	movabs al,ds:0x4d1edfc16230ffe6
   14000f662:	mov    edi,0xd25920c0
   14000f667:	(bad)  
   14000f668:	sbb    al,0x4c
   14000f66a:	enter  0x13b9,0x31
   14000f66e:	xchg   edx,eax
   14000f66f:	rex.WB add BYTE PTR [r8],al
   14000f672:	add    BYTE PTR [rip+0x2000000],cl        # 0x14200f678
	...
   14000f6b4:	sbb    al,BYTE PTR [rdx-0x3d]
   14000f6b7:	adc    DWORD PTR [rip+0x132ec33d],edx        # 0x1532fb9fa
   14000f6bd:	cmp    edi,DWORD PTR [rsi-0x3ebbe6b1]
   14000f6c3:	ins    BYTE PTR es:[rdi],dx
   14000f6c4:	and    DWORD PTR [rsi-0x37],ecx
   14000f6c7:	xchg   ebx,eax
   14000f6c8:	sub    DWORD PTR [rdx-0x30],ebx
   14000f6cb:	mov    bh,0x2a
   14000f6cd:	pop    rsi
   14000f6ce:	xlat   BYTE PTR ds:[rbx]
   14000f6cf:	(bad)  [riz*2+0x6029f3dc]
   14000f6d6:	(bad)  
   14000f6d8:	(bad)  
   14000f6d9:	(bad)  
   14000f6da:	mov    esi,0x3b1206d2
   14000f6df:	add    BYTE PTR ds:[rax],al
   14000f6e2:	add    BYTE PTR [rdi],cl
   14000f6e4:	add    BYTE PTR [rax],al
   14000f6e6:	add    BYTE PTR [rcx],al
	...
   14000f744:	(bad)  
   14000f745:	rex.B int3 
   14000f747:	add    eax,0x17c33c15
   14000f74c:	adc    al,0x3c
   14000f74e:	mov    esi,0xc142182e
   14000f753:	rex.WRXB sbb r8,QWORD PTR [r14-0x3f]
   14000f757:	movsxd edx,DWORD PTR [rip+0x3aa839]        # 0x1403b9f96
   14000f75d:	add    BYTE PTR [rax],al
   14000f75f:	or     BYTE PTR [rax],al
   14000f761:	add    BYTE PTR [rax],al
   14000f763:	add    DWORD PTR [rax],eax
	...
   14000f78d:	add    BYTE PTR [rax],al
   14000f78f:	add    al,ah
   14000f791:	(bad)  
   14000f792:	(bad)  
   14000f793:	inc    eax
   14000f795:	add    edi,edi
   14000f797:	inc    DWORD PTR [rax-0x7f000100]
   14000f79d:	add    BYTE PTR [rdi],bl
   14000f79f:	inc    DWORD PTR [rax+0xff0300]
   14000f7a5:	add    BYTE PTR [rax],al
   14000f7a7:	jg     0x14000f7a9
   14000f7a9:	add    BYTE PTR [rax],al
   14000f7ab:	(bad)  
   14000f7ac:	add    BYTE PTR [rax],al
   14000f7ae:	add    BYTE PTR [rdi],bh
   14000f7b0:	add    BYTE PTR [rax],al
   14000f7b2:	add    BYTE PTR [rdi],bh
   14000f7b4:	add    BYTE PTR [rax],al
   14000f7b6:	add    BYTE PTR [rdi],bh
   14000f7b8:	add    BYTE PTR [rax],al
   14000f7ba:	add    BYTE PTR [rdi],bh
   14000f7bc:	add    BYTE PTR [rax],al
   14000f7be:	add    BYTE PTR [rdi],bl
   14000f7c0:	add    BYTE PTR [rax],al
   14000f7c2:	add    BYTE PTR [rdi],al
   14000f7c4:	add    BYTE PTR [rax],al
   14000f7c6:	add    BYTE PTR [rcx],al
   14000f7c8:	add    BYTE PTR [rax],al
   14000f7ca:	add    BYTE PTR [rcx],al
   14000f7cc:	add    BYTE PTR [rax],al
   14000f7ce:	add    BYTE PTR [rcx],al
   14000f7d0:	add    BYTE PTR [rax],al
   14000f7d2:	add    BYTE PTR [rcx],al
   14000f7d4:	add    BYTE PTR [rax],al
   14000f7d6:	add    BYTE PTR [rcx],al
   14000f7d8:	add    BYTE PTR [rax],al
   14000f7da:	add    BYTE PTR [rcx],al
   14000f7dc:	add    BYTE PTR [rax],al
   14000f7de:	add    BYTE PTR [rcx],al
   14000f7e0:	add    BYTE PTR [rax],al
   14000f7e2:	add    BYTE PTR [rbx],al
   14000f7e4:	add    BYTE PTR [rax],al
   14000f7e6:	add    BYTE PTR [rdi],bh
   14000f7e8:	add    BYTE PTR [rax],al
   14000f7ea:	add    BYTE PTR [rdi],bh
   14000f7ec:	add    BYTE PTR [rax],al
   14000f7ee:	add    BYTE PTR [rdi],bh
   14000f7f0:	add    BYTE PTR [rax],al
   14000f7f2:	add    BYTE PTR [rdi],bh
   14000f7f4:	add    BYTE PTR [rax],al
   14000f7f6:	add    BYTE PTR [rdi],bh
   14000f7f8:	add    BYTE PTR [rax],al
   14000f7fa:	add    BYTE PTR [rdi],bh
   14000f7fc:	add    BYTE PTR [rax],al
   14000f7fe:	add    BYTE PTR [rdi],bh
   14000f800:	add    BYTE PTR [rax],al
   14000f802:	add    BYTE PTR [rdi],bh
   14000f804:	rol    BYTE PTR [rax],0x0
   14000f807:	(bad)  
   14000f808:	inc    DWORD PTR [rax-0x70000fd]
   14000f80e:	(bad)  
   14000f80f:	jmp    FWORD PTR [rax]
   14000f811:	add    BYTE PTR [rax],al
   14000f813:	add    BYTE PTR [rax],dl
   14000f815:	add    BYTE PTR [rax],al
   14000f817:	add    BYTE PTR [rax],ah
   14000f819:	add    BYTE PTR [rax],al
   14000f81b:	add    BYTE PTR [rcx],al
   14000f81d:	add    BYTE PTR [rax],ah
	...
   14000f83f:	add    al,BYTE PTR [rax]
   14000f841:	add    BYTE PTR [rax],al
   14000f843:	or     BYTE PTR [rax],al
   14000f845:	add    BYTE PTR [rax],al
   14000f847:	or     eax,0x9000000
   14000f84c:	add    BYTE PTR [rax],al
   14000f84e:	add    BYTE PTR [rbx],al
	...
   14000f878:	add    BYTE PTR [rax],al
   14000f87a:	add    BYTE PTR [rsi],al
   14000f87c:	add    BYTE PTR [rax],al
   14000f87e:	add    BYTE PTR [rip+0x3b000000],bl        # 0x17b00f884
   14000f884:	add    BYTE PTR [rax],al
   14000f886:	add    BYTE PTR [rcx+0x0],cl
   14000f889:	add    BYTE PTR [rax],al
   14000f88b:	add    BYTE PTR [r8],al
   14000f88e:	add    BYTE PTR [rsi],ch
   14000f890:	add    BYTE PTR [rax],al
   14000f892:	add    BYTE PTR [rax+rax*1],bl
   14000f895:	add    BYTE PTR [rax],al
   14000f897:	or     eax,0x3000000
	...
   14000f8b8:	add    BYTE PTR [rax],al
   14000f8ba:	add    BYTE PTR [rsi],dl
   14000f8bc:	or     bl,BYTE PTR [rip+0x2c117357]        # 0x16c126c19
   14000f8c2:	imul   esi,DWORD PTR [rdx-0x4dbde6f6],0x1
   14000f8c9:	add    ecx,DWORD PTR [rax]
   14000f8cb:	xchg   edi,eax
   14000f8cc:	add    BYTE PTR [rax],al
   14000f8ce:	add    BYTE PTR [rdx+0x68000000],al
   14000f8d4:	add    BYTE PTR [rax],al
   14000f8d6:	add    BYTE PTR [rcx+0x0],cl
   14000f8d9:	add    BYTE PTR [rax],al
   14000f8db:	sub    eax,0x19000000
   14000f8e0:	add    BYTE PTR [rax],al
   14000f8e2:	add    BYTE PTR [rdx],cl
   14000f8e4:	add    BYTE PTR [rax],al
   14000f8e6:	add    BYTE PTR [rcx],al
	...
   14000f8f8:	xor    BYTE PTR [rax-0x37],ch
   14000f8fb:	popf   
   14000f8fc:	cs jns 0x14000f8ee
   14000f8ff:	std    
   14000f900:	xor    al,0x87
   14000f902:	idiv   bh
   14000f904:	push   rax
   14000f905:	lods   al,BYTE PTR ds:[rsi]
   14000f906:	stc    
   14000f907:	push   QWORD PTR [rdi]
   14000f909:	jl     0x14000f8dc
   14000f90b:	cmc    
   14000f90c:	(bad)  
   14000f90d:	rex.WB
   14000f90e:	fwait
   14000f90f:	in     eax,0x9
   14000f911:	sbb    BYTE PTR [rbp-0x3f],al
   14000f914:	add    DWORD PTR [rdx],eax
   14000f916:	(bad)  
   14000f917:	(bad)  
   14000f918:	add    BYTE PTR [rax],al
   14000f91a:	add    BYTE PTR [rdi+0x0],bh
   14000f91d:	add    BYTE PTR [rax],al
   14000f91f:	(bad)  
   14000f920:	add    BYTE PTR [rax],al
   14000f922:	add    BYTE PTR [rcx+0x0],al
   14000f925:	add    BYTE PTR [rax],al
   14000f927:	and    al,BYTE PTR [rax]
   14000f929:	add    BYTE PTR [rax],al
   14000f92b:	or     al,BYTE PTR [rax]
   14000f92d:	add    BYTE PTR [rax],al
   14000f92f:	add    DWORD PTR [rax],eax
   14000f931:	add    BYTE PTR [rax],al
   14000f933:	add    BYTE PTR [rax],al
   14000f935:	add    BYTE PTR [rax],al
   14000f937:	add    BYTE PTR [rdi-0x6f],al
   14000f93a:	loope  0x14000f90c
   14000f93c:	pop    rcx
   14000f93d:	mov    edx,0xaf50fffe
   14000f942:	cld    
   14000f943:	dec    DWORD PTR [rbx-0x55]
   14000f946:	(bad)  
   14000f947:	dec    DWORD PTR [rdi+rbp*4-0x1]
   14000f94b:	call   QWORD PTR [rdx-0x4a]
   14000f94e:	(bad)  
   14000f94f:	dec    DWORD PTR [rdi-0x57]
   14000f952:	clc    
   14000f953:	(bad)  
   14000f954:	cmp    bh,BYTE PTR [rbx-0x36]
   14000f957:	repz sbb al,0x40
   14000f95a:	mov    ds,edi
   14000f95c:	(bad)  
   14000f95d:	cvttps2pi mm6,QWORD PTR [rbp-0x6cfdff00]
   14000f964:	add    BYTE PTR [rax],al
   14000f966:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000f96a:	add    BYTE PTR [rax+rax*1],ah
   14000f96d:	add    BYTE PTR [rax],al
   14000f96f:	add    eax,DWORD PTR [rax]
   14000f971:	add    BYTE PTR [rax],al
   14000f973:	add    BYTE PTR [rax],al
   14000f975:	add    BYTE PTR [rax],al
   14000f977:	add    BYTE PTR [rsi-0x57],bl
   14000f97a:	loop   0x14000f94d
   14000f97c:	gs (bad) 
   14000f97e:	cld    
   14000f97f:	(bad)  
   14000f980:	(bad)  
   14000f981:	fwait
   14000f982:	sti    
   14000f983:	dec    DWORD PTR [rbx+rbx*4-0x15]
   14000f987:	call   QWORD PTR [rax-0x6d]
   14000f98a:	(bad)  
   14000f98c:	rex.WRX
   14000f98d:	fwait
   14000f98e:	jrcxz  0x14000f98f
   14000f990:	rex.WRXB mov r10b,0xff
   14000f993:	call   FWORD PTR [rax-0x3e]
   14000f996:	(bad)  
   14000f997:	call   FWORD PTR [rbp-0x40]
   14000f99a:	(bad)  
   14000f99b:	call   QWORD PTR [rbp-0x51]
   14000f99e:	icebp  
   14000f99f:	std    
   14000f9a0:	sub    eax,0x3eeb761
   14000f9a5:	or     DWORD PTR [rbx],ebx
   14000f9a7:	xchg   ebp,eax
   14000f9a8:	add    BYTE PTR [rax],al
   14000f9aa:	add    BYTE PTR [rsi],dh
   14000f9ac:	add    BYTE PTR [rax],al
   14000f9ae:	add    BYTE PTR [rax+rax*1],al
   14000f9b1:	add    BYTE PTR [rax],al
   14000f9b3:	add    BYTE PTR [rax],al
   14000f9b5:	add    BYTE PTR [rax],al
   14000f9b7:	add    BYTE PTR [rbx-0x5d],dl
   14000f9ba:	in     eax,dx
   14000f9bb:	cli    
   14000f9bc:	xor    eax,0x27fff888
   14000f9c1:	test   edi,edi
   14000f9c3:	jmp    FWORD PTR [rcx-0x7c]
   14000f9c6:	scas   eax,DWORD PTR es:[rdi]
   14000f9c7:	(bad)  
   14000f9c8:	fist   DWORD PTR [rbx-0x743000aa]
   14000f9ce:	rex.WXB call QWORD PTR [r11+0x5dff5970]
   14000f9d5:	cdq    
   14000f9d6:	retf   0x52ff
   14000f9d9:	mov    ch,0xfe
   14000f9db:	call   FWORD PTR [rbp-0x30]
   14000f9de:	(bad)  
   14000f9df:	inc    DWORD PTR [rbx-0x67]
   14000f9e2:	repz inc BYTE PTR [rbx]
   14000f9e5:	or     al,0x26
   14000f9e7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f9e8:	add    BYTE PTR [rax],al
   14000f9ea:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000f9ee:	add    BYTE PTR [rbx],dl
   14000f9f0:	add    BYTE PTR [rax],al
   14000f9f2:	add    BYTE PTR [rbx],al
   14000f9f4:	add    BYTE PTR [rax],al
   14000f9f6:	add    BYTE PTR [rax],al
   14000f9f8:	push   rsp
   14000f9f9:	test   al,0xec
   14000f9fb:	(bad)  
   14000f9fc:	ss mov dh,bh
   14000f9ff:	jmp    FWORD PTR [rcx]
   14000fa01:	cmp    eax,0xf78d37ff
   14000fa07:	dec    DWORD PTR [rcx-0xc006377]
   14000fa0d:	(bad)  
   14000fa0e:	mov    edi,edi
   14000fa10:	cld    
   14000fa11:	scas   al,BYTE PTR es:[rdi]
   14000fa12:	pop    rsi
   14000fa13:	(bad)  
   14000fa14:	fiadd  DWORD PTR [rbx+rsi*1+0x406ca4ff]
   14000fa1b:	dec    DWORD PTR [rcx+0x4eff6d7c]
   14000fa21:	jne    0x14000f9d8
   14000fa23:	cld    
   14000fa24:	or     al,0x9
   14000fa26:	adc    DWORD PTR [rsi-0x80000000],esi
   14000fa2c:	add    BYTE PTR [rax],al
   14000fa2e:	add    BYTE PTR [rcx+0x0],cl
   14000fa31:	add    BYTE PTR [rax],al
   14000fa33:	sbb    al,0x0
   14000fa35:	add    BYTE PTR [rax],al
   14000fa37:	add    al,0x5b
   14000fa39:	mov    bl,0xf2
   14000fa3b:	hlt    
   14000fa3c:	xor    eax,DWORD PTR [rdi+0x7e28fff7]
   14000fa42:	clc    
   14000fa43:	jmp    FWORD PTR [rsi]
   14000fa45:	xor    dh,0xff
   14000fa48:	(bad)  
   14000fa49:	xor    esi,0xd6874bff
   14000fa4f:	call   FWORD PTR [rcx-0x1700636a]
   14000fa55:	mov    edi,0xb7fcff8e
   14000fa5a:	outs   dx,DWORD PTR ds:[rsi]
   14000fa5b:	(bad)  
   14000fa5c:	in     al,dx
   14000fa5d:	xchg   ebp,eax
   14000fa5e:	dec    r15d
   14000fa61:	jb     0x14000fa7f
   14000fa63:	call   QWORD PTR [rdx+0x37ef013e]
   14000fa69:	adc    al,BYTE PTR [rax]
   14000fa6b:	(bad)
   14000fa6e:	add    BYTE PTR [rdx+0x43000000],cl
   14000fa74:	add    BYTE PTR [rax],al
   14000fa76:	add    BYTE PTR [rsi],cl
   14000fa78:	pop    rsi
   14000fa79:	mov    dh,0xf4
   14000fa7b:	clc    
   14000fa7c:	rex.RX movabs al,ds:0x7626fffa8b30fffa
   14000fa86:	hlt    
   14000fa87:	call   QWORD PTR [rdx-0x5a]
   14000fa8a:	stc    
   14000fa8b:	call   QWORD PTR [rdx-0x56]
   14000fa8e:	stc    
   14000fa8f:	(bad)  
   14000fa90:	cmp    al,0x96
   14000fa92:	cli    
   14000fa93:	inc    DWORD PTR [rbp-0x75]
   14000fa96:	fdiv   st(7),st
   14000fa98:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fa99:	cdq    
   14000fa9a:	xchg   ecx,eax
   14000fa9b:	(bad)  
   14000fa9c:	(bad)  
   14000fa9d:	(bad)  
   14000fa9e:	cwde   
   14000fa9f:	(bad)  
   14000faa0:	cld    
   14000faa1:	retf   
   14000faa2:	xchg   ecx,eax
   14000faa3:	push   rcx
   14000faa5:	scas   al,BYTE PTR es:[rdi]
   14000faa6:	fs jmp rdx
   14000faa9:	(bad)  
   14000faaa:	push   rsp
   14000faab:	jmp    QWORD PTR [rdx+0x30]
   14000faae:	adc    BYTE PTR [rbp+0x45000000],dh
   14000fab4:	add    BYTE PTR [rax],al
   14000fab6:	add    BYTE PTR [rsi],cl
   14000fab8:	jns    0x14000fa90
   14000faba:	idiv   ebp
   14000fabc:	movsxd eax,ebp
   14000fabe:	std    
   14000fabf:	push   QWORD PTR [rcx]
   14000fac1:	(bad)  
   14000fac2:	sti    
   14000fac3:	call   FWORD PTR [rdx]
   14000fac5:	ins    DWORD PTR es:[rdi],dx
   14000fac6:	repz call FWORD PTR [rbx-0x300052c]
   14000facd:	push   rax
   14000facf:	(bad)  
   14000fad0:	fdiv   st,st(2)
   14000fad2:	(bad)  
   14000fad3:	jmp    FWORD PTR [rsi+0x4bffe6dc]
   14000fad9:	test   edi,ecx
   14000fadb:	(bad)  
   14000fadc:	mov    ecx,0xe2ff4274
   14000fae1:	xchg   esp,eax
   14000fae2:	rex.RB push r11
   14000fae5:	mov    BYTE PTR [rbp-0x3b150401],0xff
   14000faec:	mov    BYTE PTR [rbx+0x24],cl
   14000faef:	nop
   14000faf0:	add    BYTE PTR [rax],al
   14000faf2:	add    BYTE PTR [rsi],bl
   14000faf4:	add    BYTE PTR [rax],al
   14000faf6:	add    BYTE PTR [rip+0xfffffffffff9c86a],al        # 0x13ffac366
   14000fafc:	xor    al,BYTE PTR [rdi+0x7f25fff7]
   14000fb02:	stc    
   14000fb03:	call   FWORD PTR [rip+0x66fff26c]        # 0x1a700ed75
   14000fb09:	mov    dl,0xfb
   14000fb0b:	jmp    QWORD PTR [rsi-0x2e000422]
   14000fb11:	lock lock (bad) 
   14000fb14:	(bad)  
   14000fb15:	(bad)  
   14000fb16:	fdiv   st(7),st
   14000fb18:	mov    esi,0x47ffe6e9
   14000fb1d:	xchg   edx,eax
   14000fb1e:	in     eax,0xff
   14000fb20:	pop    rdi
   14000fb21:	ins    DWORD PTR es:[rdi],dx
   14000fb22:	movabs al,ds:0x143a71c3292542ff
   14000fb2b:	jl     0x14000fb66
   14000fb2d:	adc    al,BYTE PTR [rax]
   14000fb2f:	sbb    BYTE PTR [rax],al
   14000fb31:	add    BYTE PTR [rax],al
   14000fb33:	add    al,0x0
   14000fb35:	add    BYTE PTR [rax],al
   14000fb37:	add    BYTE PTR [rsp+rcx*8-0x4],ch
   14000fb3b:	(bad)  
   14000fb3c:	ds xchg ebp,eax
   14000fb3e:	stc    
   14000fb3f:	push   QWORD PTR [rip+0x25fffb8e]        # 0x16600f6d3
   14000fb45:	jno    0x14000fb3a
   14000fb47:	call   FWORD PTR [rcx]
   14000fb49:	bnd call QWORD PTR [esi]
   14000fb4d:	push   0xfffffffffffffff3
   14000fb4f:	jmp    FWORD PTR [rax]
   14000fb51:	jle    0x14000fb49
   14000fb53:	dec    DWORD PTR [rax-0x67]
   14000fb56:	idiv   bh
   14000fb58:	push   rbx
   14000fb59:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fb5a:	idiv   edi
   14000fb5c:	cmp    dl,BYTE PTR [rcx+0x6f2dfff9]
   14000fb62:	(bad)  
   14000fb64:	add    al,0xd
   14000fb66:	sub    DWORD PTR [rcx+0x37000000],ebx
   14000fb6c:	add    BYTE PTR [rax],al
   14000fb6e:	add    BYTE PTR [rip+0x0],al        # 0x14000fb74
   14000fb74:	add    BYTE PTR [rax],al
   14000fb76:	add    BYTE PTR [rax],al
   14000fb78:	js     0x14000fb4c
   14000fb7a:	idiv   edi
   14000fb7c:	(bad)  
   14000fb7d:	(bad)  
   14000fb7e:	repz inc edi
   14000fb81:	(bad)  
   14000fb82:	std    
   14000fb83:	push   QWORD PTR [rdi-0x6c00011e]
   14000fb89:	retf   
   14000fb8a:	cld    
   14000fb8b:	push   QWORD PTR [rbx-0x4a]
   14000fb8e:	sti    
   14000fb8f:	call   QWORD PTR [rax-0x65]
   14000fb92:	cli    
   14000fb93:	push   QWORD PTR [rdx]
   14000fb95:	xor    esi,0xf7802eff
   14000fb9b:	push   QWORD PTR [rdi]
   14000fb9d:	(bad)  
   14000fb9e:	sti    
   14000fb9f:	jmp    FWORD PTR [rax+rsi*2]
   14000fba2:	out    0xfd,al
   14000fba4:	(bad)  
   14000fba5:	adc    dh,BYTE PTR [rsi]
   14000fba7:	je     0x14000fba9
   14000fba9:	add    BYTE PTR [rax],al
   14000fbab:	and    eax,0x3000000
	...
   14000fbb8:	and    al,0x51
   14000fbba:	retf   
   14000fbbb:	cmp    ebp,DWORD PTR [rcx]
   14000fbbd:	push   rsi
   14000fbbe:	(bad)  
   14000fbbf:	pop    rbx
   14000fbc0:	xor    bl,BYTE PTR [rsp+rcx*8-0x71]
   14000fbc4:	rex.WB jae 0x14000fb9f
   14000fbc7:	int3   
   14000fbc8:	imul   ebx,DWORD PTR [rsi+riz*8-0x124f8616],0xfffffff6
   14000fbd0:	jp     0x14000fb89
   14000fbd2:	lock dec DWORD PTR [rbx+0x69fffad8]
   14000fbd9:	mov    bh,0xf3
   14000fbdb:	jmp    FWORD PTR [rax]
   14000fbdd:	push   0x541fe6da
   14000fbe2:	iret   
   14000fbe3:	ror    BYTE PTR [rbx],cl
   14000fbe5:	sbb    eax,0x3158
   14000fbea:	add    BYTE PTR [rbx],cl
   14000fbec:	add    BYTE PTR [rax],al
   14000fbee:	add    BYTE PTR [rcx],al
	...
   14000fc08:	(bad)  
   14000fc09:	rex.X (bad) 
   14000fc0b:	(bad)  
   14000fc0c:	adc    al,0x3d
   14000fc0e:	mov    esi,0xc2451b27
   14000fc13:	rex.X and DWORD PTR [rbp-0x39],ecx
   14000fc17:	push   0x60b8411a
   14000fc1c:	add    BYTE PTR [rax],al
   14000fc1e:	add    BYTE PTR [rax+rax*1],cl
   14000fc21:	add    BYTE PTR [rax],al
   14000fc23:	add    al,0x0
	...
   14000fc35:	add    BYTE PTR [rax],al
   14000fc37:	add    BYTE PTR [rbx+0x1293ff],al
   14000fc3d:	jg     0x14000fc15
   14000fc3f:	(bad)  
   14000fc40:	add    BYTE PTR [rdi],cl
   14000fc42:	(bad)  
   14000fc43:	inc    DWORD PTR [rax]
   14000fc45:	add    edi,ebp
   14000fc47:	inc    DWORD PTR [rax]
   14000fc49:	add    esi,edi
   14000fc4b:	inc    DWORD PTR [rax]
   14000fc4d:	add    esi,edi
   14000fc4f:	inc    DWORD PTR [rax]
   14000fc51:	add    esi,edi
   14000fc53:	inc    DWORD PTR [rax]
   14000fc55:	add    ah,bh
   14000fc57:	inc    DWORD PTR [rax]
   14000fc59:	add    dh,dh
   14000fc5b:	inc    DWORD PTR [rax]
   14000fc5d:	add    dh,dh
   14000fc5f:	inc    DWORD PTR [rax]
   14000fc61:	add    ah,bh
   14000fc63:	inc    DWORD PTR [rax]
   14000fc65:	add    edi,edi
   14000fc67:	inc    DWORD PTR [rax]
   14000fc69:	add    edi,edi
   14000fc6b:	inc    DWORD PTR [rax]
   14000fc6d:	add    edi,edi
   14000fc6f:	inc    DWORD PTR [rax]
   14000fc71:	add    edi,esp
   14000fc73:	push   rax
   14000fc75:	(bad)  
   14000fc76:	cld    
   14000fc77:	inc    DWORD PTR [rax]
   14000fc79:	add    BYTE PTR [rcx],al
   14000fc7b:	add    BYTE PTR [rcx],cl
   14000fc7d:	add    BYTE PTR [rax],dh
   14000fc7f:	xor    BYTE PTR [rax],dl
   14000fc81:	add    BYTE PTR [rcx],al
   14000fc83:	add    BYTE PTR [rax+rax*1],al
   14000fc86:	push   0x1000006
   14000fc8b:	add    BYTE PTR [rax],ah
   14000fc8d:	and    BYTE PTR [rax],dl
   14000fc8f:	add    BYTE PTR [rcx],al
   14000fc91:	add    BYTE PTR [rax+rax*1],al
   14000fc94:	call   0x14200fc9b
   14000fc99:	add    BYTE PTR [rax],dl
   14000fc9b:	adc    BYTE PTR [rax],dl
   14000fc9d:	add    BYTE PTR [rcx],al
   14000fc9f:	add    BYTE PTR [rax+rax*1],al
   14000fca2:	sub    BYTE PTR [rcx],al
   14000fca4:	add    BYTE PTR [rax],al
   14000fca6:	add    eax,DWORD PTR [rax]
   14000fca8:	xor    BYTE PTR [rax],dh
   14000fcaa:	add    BYTE PTR [rax],al
   14000fcac:	add    DWORD PTR [rax],eax
   14000fcae:	or     BYTE PTR [rax],al
   14000fcb0:	test   al,0xe
   14000fcb2:	add    BYTE PTR [rax],al
   14000fcb4:	add    al,0x0
   14000fcb6:	and    BYTE PTR [rax],ah
   14000fcb8:	add    BYTE PTR [rax],al
   14000fcba:	add    DWORD PTR [rax],eax
   14000fcbc:	or     BYTE PTR [rax],al
   14000fcbe:	test   al,0x8
   14000fcc0:	add    BYTE PTR [rax],al
   14000fcc2:	add    eax,0x101000
   14000fcc7:	add    BYTE PTR [rcx],al
   14000fcc9:	add    BYTE PTR [rax],cl
   14000fccb:	add    BYTE PTR [rax+0x5],ch
   14000fcce:	add    BYTE PTR [rax],al
   14000fcd0:	(bad)  
   14000fcd1:	add    BYTE PTR [rax],dh
   14000fcd3:	xor    BYTE PTR [rax],al
   14000fcd5:	add    BYTE PTR [rcx],al
   14000fcd7:	add    BYTE PTR [rax],ah
   14000fcd9:	add    BYTE PTR [rax+0x7000025],ch
   14000fcdf:	add    BYTE PTR [rax],ah
   14000fce1:	and    BYTE PTR [rax],al
   14000fce3:	add    BYTE PTR [rcx],al
   14000fce5:	add    BYTE PTR [rax],ah
   14000fce7:	add    BYTE PTR [rax+0x8000010],ch
   14000fced:	add    BYTE PTR [rax],dl
   14000fcef:	adc    BYTE PTR [rax],al
   14000fcf1:	add    BYTE PTR [rcx],al
   14000fcf3:	add    BYTE PTR [rax],ah
   14000fcf5:	add    BYTE PTR [rax+0x4],ch
   14000fcf8:	add    BYTE PTR [rax],al
   14000fcfa:	or     DWORD PTR [rax],eax
   14000fcfc:	add    BYTE PTR [rax],al
   14000fcfe:	add    BYTE PTR [rax],al
   14000fd00:	int    0xfe
   14000fd02:	int    0xfe
   14000fd04:	fadd   DWORD PTR [rax]
   14000fd06:	add    BYTE PTR [rax],al
   14000fd08:	add    BYTE PTR [rax],al
   14000fd0a:	add    DWORD PTR [rax],eax
   14000fd0c:	add    BYTE PTR [rax],al
   14000fd0e:	add    BYTE PTR [rax],al
   14000fd10:	adc    DWORD PTR [rax],eax
   14000fd12:	add    BYTE PTR [rax],al
   14000fd14:	add    BYTE PTR [rax],al
   14000fd16:	add    BYTE PTR [rax],al
   14000fd18:	add    al,BYTE PTR [rax]
   14000fd1a:	add    BYTE PTR [rax],al
   14000fd1c:	xchg   BYTE PTR [r13-0x7f8b3caf],dl
   14000fd23:	retf   
   14000fd24:	cld    
   14000fd25:	(bad)  
   14000fd26:	mov    ah,0x8f
   14000fd28:	sbb    al,0xf1
   14000fd2a:	mov    al,0x80
   14000fd2c:	(bad)  
   14000fd2d:	div    BYTE PTR [rbx-0x2a]
   14000fd30:	mov    dh,0x91
   14000fd32:	je     0x14000fd15
   14000fd34:	xchg   BYTE PTR [rsi+0x7e6a1b33],ch
   14000fd3a:	popf   
   14000fd3b:	hlt    
	...
   14000fd54:	mov    BYTE PTR [rax],al
   14000fd56:	add    BYTE PTR [rax],al
   14000fd58:	(bad)  
   14000fd59:	add    BYTE PTR [rax],al
   14000fd5b:	add    BYTE PTR [rax+0x10000000],bl
   14000fd61:	add    BYTE PTR [rax],al
   14000fd63:	add    BYTE PTR [rax+0xe000000],ch
   14000fd69:	add    BYTE PTR [rax],al
   14000fd6b:	add    BYTE PTR [rax+0xc000000],bh
	...
   14000fd79:	add    BYTE PTR [rax],al
   14000fd7b:	add    al,cl
   14000fd7d:	add    BYTE PTR [rax],al
   14000fd7f:	add    BYTE PTR [rax+rax*1],cl
   14000fd82:	add    BYTE PTR [rax],al
   14000fd84:	add    BYTE PTR [rax],al
   14000fd86:	add    BYTE PTR [rax],al
   14000fd88:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000fd8c:	rex.WB add BYTE PTR [r8],al
	...
   14000fd97:	add    BYTE PTR [rbx],al
   14000fd99:	add    BYTE PTR [rax],al
   14000fd9b:	add    BYTE PTR [rsi],cl
   14000fd9d:	add    BYTE PTR [rax],al
   14000fd9f:	add    BYTE PTR [rax],dl
   14000fda1:	add    BYTE PTR [rax],al
   14000fda3:	add    BYTE PTR [rax],bl
   14000fda5:	add    BYTE PTR [rax],al
   14000fda7:	add    BYTE PTR [rbp+0x0],cl
   14000fdaa:	push   rbp
   14000fdab:	add    BYTE PTR [rcx+0x0],cl
	...
   14000fdb6:	add    BYTE PTR [rax],al
   14000fdb8:	add    eax,0x6000000
   14000fdbd:	add    BYTE PTR [rax],al
   14000fdbf:	add    BYTE PTR [rax],dl
   14000fdc1:	add    BYTE PTR [rax],al
   14000fdc3:	add    BYTE PTR [rax],al
   14000fdc5:	add    BYTE PTR [rax],al
   14000fdc7:	add    BYTE PTR [rbp+0x0],ah
   14000fdca:	outs   dx,BYTE PTR ds:[rsi]
   14000fdcb:	add    BYTE PTR [rip+0x53005500],ch        # 0x1930152d1
   14000fdd1:	add    BYTE PTR [rax],al
   14000fdd3:	add    BYTE PTR [rax],al
   14000fdd5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140010000 <.reloc>:
   140010000:	add    BYTE PTR [rax+0x0],al
   140010003:	add    ah,dh
   140010005:	add    BYTE PTR [rax],al
   140010007:	add    BYTE PTR [rax],cl
   140010009:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001000a:	adc    BYTE PTR [rbp-0x5ad75ae0],ah
   140010010:	xor    BYTE PTR [rbp-0x5aaf5ab8],ah
   140010016:	loopne 0x14000ffbe
   140010018:	call   0x138a7f0c3
   14001001d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001001e:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140010024:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14001002a:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140010030:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140010032:	push   rax
   140010033:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010034:	pop    rax
   140010035:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010036:	(bad)  
   140010037:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010038:	push   0x78a770a7
   14001003d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001003e:	and    BYTE PTR [rdi-0x586f5878],0x98
   140010045:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010046:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14001004f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010050:	enter  0xd0a7,0xa7
   140010054:	fsub   DWORD PTR [rdi-0x58175820]
   14001005a:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001005c:	clc    
   14001005d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001005e:	add    BYTE PTR [rax-0x57ef57f8],ch
   140010064:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14001006a:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140010070:	rex.W test al,0x50
   140010073:	test   al,0x78
   140010075:	test   al,0x98
   140010077:	test   al,0xb8
   140010079:	test   al,0xd8
   14001007b:	test   al,0x0
   14001007d:	test   eax,0xa910a908
   140010082:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140010088:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14001008e:	test   rax,0xffffffffa958a950
   140010094:	(bad)  
   140010095:	test   eax,0xa970a968
   14001009a:	js     0x140010045
   14001009c:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400100a3:	test   eax,0xa9a8a9a0
   1400100a8:	mov    al,0xa9
   1400100aa:	mov    eax,0xc8a9c0a9
   1400100af:	test   eax,0xa9d8a9d0
   1400100b4:	loopne 0x14001005f
   1400100b6:	call   0x138aaf164
   1400100bb:	test   eax,0xaa08aa00
   1400100c0:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400100c6:	sub    BYTE PTR [rdx-0x55c755d0],ch
   1400100cc:	stos   BYTE PTR es:[rdi],al
   1400100ce:	rex.W stos BYTE PTR es:[rdi],al
   1400100d0:	push   rax
   1400100d1:	stos   BYTE PTR es:[rdi],al
   1400100d2:	pop    rax
   1400100d3:	stos   BYTE PTR es:[rdi],al
   1400100d4:	(bad)  
   1400100d5:	stos   BYTE PTR es:[rdi],al
   1400100d6:	push   0x78aa70aa
   1400100db:	stos   BYTE PTR es:[rdi],al
   1400100dc:	sub    BYTE PTR [rdx-0x556f5578],0x98
   1400100e3:	stos   BYTE PTR es:[rdi],al
   1400100e4:	movabs al,ds:0xc0aab8aab0aaa8aa
   1400100ed:	stos   BYTE PTR es:[rdi],al
   1400100ee:	enter  0xe0aa,0xaa
   1400100f2:	call   0x1405101a6
   1400100f7:	add    BYTE PTR [rax],dl
   1400100f9:	add    BYTE PTR [rax],al
   1400100fb:	add    BYTE PTR [rax],al
   1400100fd:	movabs al,ds:0x70000000a010a008
   140010106:	add    BYTE PTR [rax],al
   140010108:	sbb    al,0x0
   14001010a:	add    BYTE PTR [rax],al
   14001010c:	and    BYTE PTR [rax-0x5faf5fd8],ah
   140010112:	jo     0x1400100b4
   140010114:	nop
   140010115:	movabs al,ds:0xa120a100a0e0a0b8
	...
