
44b6a440aa28893b3a9d20a9d3b729a3da38e27934db839b7b427331f814319d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x7845]        # 0x408860
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x7846]        # 0x408870
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x7849]        # 0x408880
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x780c]        # 0x408850
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x76bf]        # 0x408710
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x77e1]        # 0x408840
  40105f:	mov    DWORD PTR [rip+0x9fa3],edx        # 0x40b008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x405648
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x403d00
  401081:	mov    rdx,QWORD PTR [rip+0x7718]        # 0x4087a0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x76fe]        # 0x408790
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x7764]        # 0x408800
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x769b]        # 0x408740
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x4038e0
  4010af:	mov    rax,QWORD PTR [rip+0x75fa]        # 0x4086b0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x405648
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x2ab9]        # 0x403be0
  401127:	call   0x403bd0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x76c5]        # 0x408830
  40116b:	lea    r8,[rip+0x9ea6]        # 0x40b018
  401172:	lea    rdx,[rip+0x9ea7]        # 0x40b020
  401179:	lea    rcx,[rip+0x9ea8]        # 0x40b028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x9e78],eax        # 0x40b000
  401188:	lea    rax,[rip+0x9e71]        # 0x40b000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x7655]        # 0x4087f0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x405660
  4011a3:	mov    DWORD PTR [rip+0x9e67],eax        # 0x40b010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x767a]        # 0x408840
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x757b]        # 0x408770
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xc432]        # 0x40d634
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x7557]        # 0x408780
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x9dba],0x1        # 0x40b004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x749c]        # 0x408700
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x403ef0
  40127d:	lea    rcx,[rip+0x320c]        # 0x404490
  401284:	call   QWORD PTR [rip+0xc3a2]        # 0x40d62c
  40128a:	mov    rdx,QWORD PTR [rip+0x74cf]        # 0x408760
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4043a0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x405680
  4012a5:	call   0x403ce0
  4012aa:	mov    rax,QWORD PTR [rip+0x745f]        # 0x408710
  4012b1:	mov    QWORD PTR [rip+0xa790],rax        # 0x40ba48
  4012b8:	mov    rax,QWORD PTR [rip+0x7471]        # 0x408730
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xa729],rax        # 0x40ba40
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x5cca],eax        # 0x407000
  401336:	mov    r12d,DWORD PTR [rip+0x9ceb]        # 0x40b028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x405570
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x9cc2]        # 0x40b020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x405510
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x405570
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x405560
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x9c6a],rbp        # 0x40b020
  4013b6:	call   0x4038b0
  4013bb:	mov    rax,QWORD PTR [rip+0x735e]        # 0x408720
  4013c2:	mov    rdx,QWORD PTR [rip+0x9c4f]        # 0x40b018
  4013c9:	mov    ecx,DWORD PTR [rip+0x9c59]        # 0x40b028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x9c3c]        # 0x40b018
  4013dc:	mov    rdx,QWORD PTR [rip+0x9c3d]        # 0x40b020
  4013e3:	call   0x405810
  4013e8:	mov    ecx,DWORD PTR [rip+0x9c1a]        # 0x40b008
  4013ee:	mov    DWORD PTR [rip+0x9c18],eax        # 0x40b00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x9c02]        # 0x40b004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x405630
  40140b:	mov    eax,DWORD PTR [rip+0x9bfb]        # 0x40b00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x7349]        # 0x408780
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x405638
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x735d]        # 0x4087c0
  401463:	mov    rcx,QWORD PTR [rip+0x7346]        # 0x4087b0
  40146a:	call   0x4055f0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xc143]        # 0x40d5dc
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x7339]        # 0x4087e0
  4014a7:	mov    rcx,QWORD PTR [rip+0x7322]        # 0x4087d0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4055f0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4055a0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x7365]        # 0x408840
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4038f0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x7335]        # 0x408840
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4038f0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbx
  401531:	sub    rsp,0x20
  401535:	mov    DWORD PTR [rcx],0x0
  40153b:	mov    rbx,rcx
  40153e:	xor    ecx,ecx
  401540:	call   QWORD PTR [rip+0xc32e]        # 0x40d874
  401546:	test   rax,rax
  401549:	je     0x401560
  40154b:	lea    rax,[rip+0x6aae]        # 0x408000
  401552:	mov    DWORD PTR [rbx],0x1
  401558:	add    rsp,0x20
  40155c:	pop    rbx
  40155d:	ret    
  40155e:	xchg   ax,ax
  401560:	lea    rax,[rip+0x6a9a]        # 0x408001
  401567:	add    rsp,0x20
  40156b:	pop    rbx
  40156c:	ret    
  40156d:	nop
  40156e:	nop
  40156f:	nop
  401570:	push   rbx
  401571:	sub    rsp,0x30
  401575:	mov    rbx,rcx
  401578:	mov    rcx,QWORD PTR [rdx]
  40157b:	call   0x405578
  401580:	test   rax,rax
  401583:	mov    rdx,rax
  401586:	lea    rax,[rip+0x6a93]        # 0x408020
  40158d:	lea    r8,[rsp+0x2f]
  401592:	mov    rcx,rbx
  401595:	cmove  rdx,rax
  401599:	call   0x4036d0
  40159e:	mov    rax,rbx
  4015a1:	add    rsp,0x30
  4015a5:	pop    rbx
  4015a6:	ret    
  4015a7:	nop    WORD PTR [rax+rax*1+0x0]
  4015b0:	push   rbp
  4015b1:	push   rdi
  4015b2:	push   rsi
  4015b3:	push   rbx
  4015b4:	sub    rsp,0x178
  4015bb:	xor    edx,edx
  4015bd:	lea    rdi,[rsp+0x60]
  4015c2:	mov    rsi,rcx
  4015c5:	xor    ecx,ecx
  4015c7:	mov    r8,rdi
  4015ca:	call   0x403718
  4015cf:	lea    r8,[rsp+0x2e]
  4015d4:	mov    QWORD PTR [rsi],rax
  4015d7:	xor    edx,edx
  4015d9:	xor    ecx,ecx
  4015db:	call   0x403718
  4015e0:	mov    QWORD PTR [rsp+0x30],rax
  4015e5:	xor    ecx,ecx
  4015e7:	call   QWORD PTR [rip+0xbfdf]        # 0x40d5cc
  4015ed:	mov    r8d,0x104
  4015f3:	mov    rdx,rdi
  4015f6:	mov    rcx,rax
  4015f9:	call   QWORD PTR [rip+0xbfbd]        # 0x40d5bc
  4015ff:	test   eax,eax
  401601:	jne    0x40168a
  401607:	mov    r8,QWORD PTR [rsp+0x30]
  40160c:	lea    rbx,[rsp+0x50]
  401611:	cmp    QWORD PTR [r8-0x18],0x0
  401616:	je     0x40166f
  401618:	lea    rdi,[rsp+0x30]
  40161d:	lea    rdx,[rip+0x69ff]        # 0x408023
  401624:	or     r8,0xffffffffffffffff
  401628:	mov    rcx,rdi
  40162b:	call   0x403730
  401630:	cmp    rax,0xffffffffffffffff
  401634:	lea    rbx,[rsp+0x50]
  401639:	je     0x40166a
  40163b:	mov    r9,rax
  40163e:	xor    r8d,r8d
  401641:	mov    rdx,rdi
  401644:	mov    rcx,rbx
  401647:	call   0x403728
  40164c:	mov    rdx,rbx
  40164f:	mov    rcx,rsi
  401652:	call   0x403700
  401657:	mov    rax,QWORD PTR [rsp+0x50]
  40165c:	lea    rdx,[rsp+0x40]
  401661:	lea    rcx,[rax-0x18]
  401665:	call   0x403708
  40166a:	mov    r8,QWORD PTR [rsp+0x30]
  40166f:	lea    rcx,[r8-0x18]
  401673:	mov    rdx,rbx
  401676:	call   0x403708
  40167b:	mov    rax,rsi
  40167e:	add    rsp,0x178
  401685:	pop    rbx
  401686:	pop    rsi
  401687:	pop    rdi
  401688:	pop    rbp
  401689:	ret    
  40168a:	lea    rbp,[rsp+0x40]
  40168f:	lea    rbx,[rsp+0x50]
  401694:	mov    rdx,rdi
  401697:	mov    BYTE PTR [rsp+0x164],0x0
  40169f:	mov    r8,rbp
  4016a2:	mov    rcx,rbx
  4016a5:	call   0x4036d0
  4016aa:	lea    rdx,[rip+0x6970]        # 0x408021
  4016b1:	or     r8,0xffffffffffffffff
  4016b5:	mov    rcx,rbx
  4016b8:	call   0x403730
  4016bd:	cmp    rax,0xffffffffffffffff
  4016c1:	je     0x4016f8
  4016c3:	lea    r9,[rax+0x1]
  4016c7:	xor    r8d,r8d
  4016ca:	mov    rdx,rbx
  4016cd:	mov    rcx,rbp
  4016d0:	call   0x403728
  4016d5:	lea    rcx,[rsp+0x30]
  4016da:	mov    rdx,rbp
  4016dd:	call   0x403700
  4016e2:	mov    rax,QWORD PTR [rsp+0x40]
  4016e7:	lea    rbx,[rsp+0x2f]
  4016ec:	mov    rdx,rbx
  4016ef:	lea    rcx,[rax-0x18]
  4016f3:	call   0x403708
  4016f8:	mov    rax,QWORD PTR [rsp+0x50]
  4016fd:	mov    rdx,rbp
  401700:	lea    rcx,[rax-0x18]
  401704:	call   0x403708
  401709:	jmp    0x401607
  40170e:	mov    rdi,rax
  401711:	mov    rax,QWORD PTR [rsp+0x50]
  401716:	lea    rdx,[rsp+0x40]
  40171b:	lea    rbx,[rsp+0x2f]
  401720:	lea    rcx,[rax-0x18]
  401724:	call   0x403708
  401729:	mov    rax,QWORD PTR [rsp+0x30]
  40172e:	mov    rdx,rbx
  401731:	lea    rcx,[rax-0x18]
  401735:	call   0x403708
  40173a:	mov    rcx,QWORD PTR [rsi]
  40173d:	mov    rdx,rbx
  401740:	sub    rcx,0x18
  401744:	call   0x403708
  401749:	mov    rcx,rdi
  40174c:	call   0x404c60
  401751:	lea    rbx,[rsp+0x2f]
  401756:	mov    rdi,rax
  401759:	mov    rax,QWORD PTR [rsp+0x50]
  40175e:	mov    rdx,rbx
  401761:	lea    rcx,[rax-0x18]
  401765:	call   0x403708
  40176a:	jmp    0x401729
  40176c:	mov    rdi,rax
  40176f:	mov    rax,QWORD PTR [rsp+0x40]
  401774:	lea    rbx,[rsp+0x2f]
  401779:	mov    rdx,rbx
  40177c:	lea    rcx,[rax-0x18]
  401780:	call   0x403708
  401785:	jmp    0x401759
  401787:	mov    rdi,rax
  40178a:	lea    rbx,[rsp+0x2f]
  40178f:	jmp    0x401729
  401791:	mov    rdi,rax
  401794:	lea    rbx,[rsp+0x2f]
  401799:	jmp    0x40173a
  40179b:	nop    DWORD PTR [rax+rax*1+0x0]
  4017a0:	lea    rcx,[rip+0x9899]        # 0x40b040
  4017a7:	jmp    0x4036b8
  4017ac:	nop    DWORD PTR [rax+0x0]
  4017b0:	push   r13
  4017b2:	push   r12
  4017b4:	push   rbp
  4017b5:	push   rdi
  4017b6:	push   rsi
  4017b7:	push   rbx
  4017b8:	sub    rsp,0xa8
  4017bf:	lea    rsi,[rsp+0x90]
  4017c7:	mov    rdi,rcx
  4017ca:	mov    r12,rdx
  4017cd:	xor    ecx,ecx
  4017cf:	xor    edx,edx
  4017d1:	mov    r8,rsi
  4017d4:	call   0x403718
  4017d9:	lea    r8,[rsp+0x3f]
  4017de:	lea    rdx,[rip+0x6844]        # 0x408029
  4017e5:	mov    QWORD PTR [rdi],rax
  4017e8:	mov    rcx,rsi
  4017eb:	call   0x4036d0
  4017f0:	lea    rbx,[rsp+0x70]
  4017f5:	mov    rdx,rsi
  4017f8:	mov    rcx,rbx
  4017fb:	call   0x401570
  401800:	mov    rax,QWORD PTR [rsp+0x90]
  401808:	lea    rbp,[rsp+0x80]
  401810:	mov    rdx,rbp
  401813:	lea    rcx,[rax-0x18]
  401817:	call   0x403708
  40181c:	mov    rax,QWORD PTR [rsp+0x70]
  401821:	cmp    QWORD PTR [rax-0x18],0x0
  401826:	je     0x40193a
  40182c:	lea    rbp,[rsp+0x40]
  401831:	mov    rdx,rbx
  401834:	mov    rcx,rbp
  401837:	call   0x4036c8
  40183c:	mov    rax,QWORD PTR [rsp+0x70]
  401841:	mov    rdx,rsi
  401844:	lea    rbx,[rsp+0x50]
  401849:	lea    rcx,[rax-0x18]
  40184d:	call   0x403708
  401852:	lea    rdx,[rip+0x67df]        # 0x408038
  401859:	mov    r8,rsi
  40185c:	mov    rcx,rbx
  40185f:	call   0x4036d0
  401864:	mov    rdx,r12
  401867:	mov    rcx,rdi
  40186a:	call   0x4036e0
  40186f:	mov    rdx,rbx
  401872:	mov    rcx,rbp
  401875:	call   0x405740
  40187a:	test   al,al
  40187c:	jne    0x4018c3
  40187e:	mov    rax,QWORD PTR [rsp+0x50]
  401883:	lea    rbp,[rsp+0x60]
  401888:	xor    r8d,r8d
  40188b:	mov    rdx,r12
  40188e:	mov    rcx,rbp
  401891:	mov    r13,QWORD PTR [rax-0x18]
  401895:	mov    r9,r13
  401898:	call   0x403728
  40189d:	mov    rdx,rbx
  4018a0:	mov    rcx,rbp
  4018a3:	call   0x405740
  4018a8:	mov    ebx,eax
  4018aa:	mov    rax,QWORD PTR [rsp+0x60]
  4018af:	mov    rdx,rsi
  4018b2:	lea    rcx,[rax-0x18]
  4018b6:	call   0x403708
  4018bb:	test   bl,bl
  4018bd:	jne    0x40198d
  4018c3:	mov    rcx,rdi
  4018c6:	call   0x403710
  4018cb:	mov    r9,QWORD PTR [rdi]
  4018ce:	mov    rbx,rax
  4018d1:	mov    eax,DWORD PTR [r9-0x8]
  4018d5:	test   eax,eax
  4018d7:	js     0x4018f4
  4018d9:	mov    rcx,rdi
  4018dc:	call   0x403720
  4018e1:	mov    r9,QWORD PTR [rdi]
  4018e4:	jmp    0x4018f4
  4018e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018f0:	add    r9,0x1
  4018f4:	cmp    r9,rbx
  4018f7:	je     0x401905
  4018f9:	cmp    BYTE PTR [r9],0x2f
  4018fd:	jne    0x4018f0
  4018ff:	mov    BYTE PTR [r9],0x5c
  401903:	jmp    0x4018f0
  401905:	mov    rax,QWORD PTR [rsp+0x50]
  40190a:	mov    rdx,rsi
  40190d:	lea    rcx,[rax-0x18]
  401911:	call   0x403708
  401916:	mov    rax,QWORD PTR [rsp+0x40]
  40191b:	mov    rdx,rsi
  40191e:	lea    rcx,[rax-0x18]
  401922:	call   0x403708
  401927:	mov    rax,rdi
  40192a:	add    rsp,0xa8
  401931:	pop    rbx
  401932:	pop    rsi
  401933:	pop    rdi
  401934:	pop    rbp
  401935:	pop    r12
  401937:	pop    r13
  401939:	ret    
  40193a:	mov    rcx,rbp
  40193d:	call   0x4015b0
  401942:	mov    rdx,rbp
  401945:	mov    rcx,rbx
  401948:	call   0x403700
  40194d:	mov    rax,QWORD PTR [rsp+0x80]
  401955:	mov    rdx,rsi
  401958:	lea    rcx,[rax-0x18]
  40195c:	call   0x403708
  401961:	mov    rax,QWORD PTR [rsp+0x70]
  401966:	cmp    QWORD PTR [rax-0x18],0x0
  40196b:	jne    0x40182c
  401971:	lea    rbp,[rsp+0x40]
  401976:	lea    rdx,[rip+0x66bb]        # 0x408038
  40197d:	mov    r8,rsi
  401980:	mov    rcx,rbp
  401983:	call   0x4036d0
  401988:	jmp    0x40183c
  40198d:	mov    r9,QWORD PTR [rsp+0x40]
  401992:	mov    r8,r13
  401995:	xor    edx,edx
  401997:	mov    rcx,rdi
  40199a:	mov    rax,QWORD PTR [r9-0x18]
  40199e:	mov    QWORD PTR [rsp+0x20],rax
  4019a3:	call   0x4036d8
  4019a8:	jmp    0x4018c3
  4019ad:	mov    rbx,rax
  4019b0:	mov    rcx,QWORD PTR [rdi]
  4019b3:	lea    rdx,[rsp+0x3e]
  4019b8:	sub    rcx,0x18
  4019bc:	call   0x403708
  4019c1:	mov    rcx,rbx
  4019c4:	call   0x404c60
  4019c9:	mov    rbx,rax
  4019cc:	mov    rax,QWORD PTR [rsp+0x80]
  4019d4:	mov    rdx,rsi
  4019d7:	lea    rcx,[rax-0x18]
  4019db:	call   0x403708
  4019e0:	mov    rax,QWORD PTR [rsp+0x70]
  4019e5:	mov    rdx,rsi
  4019e8:	lea    rcx,[rax-0x18]
  4019ec:	call   0x403708
  4019f1:	jmp    0x4019b0
  4019f3:	mov    rbx,rax
  4019f6:	jmp    0x4019e0
  4019f8:	jmp    0x4019f3
  4019fa:	mov    rbx,rax
  4019fd:	mov    rax,QWORD PTR [rsp+0x50]
  401a02:	mov    rdx,rsi
  401a05:	lea    rcx,[rax-0x18]
  401a09:	call   0x403708
  401a0e:	mov    rax,QWORD PTR [rsp+0x40]
  401a13:	mov    rdx,rsi
  401a16:	lea    rcx,[rax-0x18]
  401a1a:	call   0x403708
  401a1f:	jmp    0x4019b0
  401a21:	mov    rbx,rax
  401a24:	jmp    0x401a0e
  401a26:	mov    rbx,rax
  401a29:	mov    rax,QWORD PTR [rsp+0x90]
  401a31:	lea    rdx,[rsp+0x80]
  401a39:	lea    rcx,[rax-0x18]
  401a3d:	call   0x403708
  401a42:	jmp    0x4019b0
  401a47:	nop
  401a48:	nop
  401a49:	nop
  401a4a:	nop
  401a4b:	nop
  401a4c:	nop
  401a4d:	nop
  401a4e:	nop
  401a4f:	nop
  401a50:	xor    eax,eax
  401a52:	ret    
  401a53:	nop    DWORD PTR [rax]
  401a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a60:	mov    eax,0x4
  401a65:	ret    
  401a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a70:	mov    eax,0x2
  401a75:	ret    
  401a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a80:	mov    eax,0x1
  401a85:	ret    
  401a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a90:	jmp    0x405490
  401a95:	nop
  401a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401aa0:	jmp    0x405498
  401aa5:	nop
  401aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ab0:	jmp    0x401f10
  401ab5:	nop
  401ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ac0:	lea    rax,[rip+0x6749]        # 0x408210
  401ac7:	ret    
  401ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ad0:	jmp    0x401f40
  401ad5:	nop
  401ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ae0:	push   r15
  401ae2:	push   r14
  401ae4:	push   r13
  401ae6:	push   r12
  401ae8:	push   rbp
  401ae9:	push   rdi
  401aea:	push   rsi
  401aeb:	push   rbx
  401aec:	sub    rsp,0x28
  401af0:	cmp    QWORD PTR [rdx],0x0
  401af4:	mov    QWORD PTR [rsp+0x70],rcx
  401af9:	mov    rdi,rdx
  401afc:	je     0x401d51
  401b02:	xor    ebx,ebx
  401b04:	add    rbx,0x1
  401b08:	cmp    QWORD PTR [rdi+rbx*8],0x0
  401b0d:	lea    r12,[rbx*8+0x0]
  401b15:	jne    0x401b04
  401b17:	lea    rcx,[rbx+0x1]
  401b1b:	xor    esi,esi
  401b1d:	call   0x402d80
  401b22:	mov    rbp,rax
  401b25:	mov    r15,QWORD PTR [rdi+rsi*8]
  401b29:	movzx  r14d,BYTE PTR [r15]
  401b2d:	test   r14b,r14b
  401b30:	je     0x401d10
  401b36:	lea    rdx,[rip+0x66e3]        # 0x408220
  401b3d:	mov    rcx,r15
  401b40:	call   0x4054f8
  401b45:	test   rax,rax
  401b48:	je     0x401d37
  401b4e:	lea    rdx,[rip+0x66f3]        # 0x408248
  401b55:	mov    rcx,r15
  401b58:	call   0x4054f8
  401b5d:	test   rax,rax
  401b60:	mov    rdx,r15
  401b63:	setne  r13b
  401b67:	xor    eax,eax
  401b69:	xor    r9d,r9d
  401b6c:	movzx  ecx,r13b
  401b70:	jmp    0x401b8e
  401b72:	add    eax,0x1
  401b75:	add    rcx,0x1
  401b79:	cmp    r14b,0x5c
  401b7d:	cmovne eax,r9d
  401b81:	add    rdx,0x1
  401b85:	movzx  r14d,BYTE PTR [rdx]
  401b89:	test   r14b,r14b
  401b8c:	je     0x401bab
  401b8e:	cmp    r14b,0x22
  401b92:	jne    0x401b72
  401b94:	add    rdx,0x1
  401b98:	movzx  r14d,BYTE PTR [rdx]
  401b9c:	add    eax,0x1
  401b9f:	lea    rcx,[rcx+rax*1+0x1]
  401ba4:	xor    eax,eax
  401ba6:	test   r14b,r14b
  401ba9:	jne    0x401b8e
  401bab:	test   r13b,r13b
  401bae:	je     0x401cf0
  401bb4:	add    eax,0x1
  401bb7:	lea    rcx,[rcx+rax*1+0x1]
  401bbc:	call   0x402d80
  401bc1:	mov    BYTE PTR [rax],0x22
  401bc4:	movzx  r10d,BYTE PTR [r15]
  401bc8:	lea    r9,[rax+0x1]
  401bcc:	test   r10b,r10b
  401bcf:	je     0x401d49
  401bd5:	xor    edx,edx
  401bd7:	jmp    0x401c03
  401bd9:	nop    DWORD PTR [rax+0x0]
  401be0:	cmp    r10b,0x5c
  401be4:	lea    rcx,[r9+0x1]
  401be8:	mov    BYTE PTR [r9],r10b
  401beb:	je     0x401ce1
  401bf1:	mov    r9,rcx
  401bf4:	xor    edx,edx
  401bf6:	add    r15,0x1
  401bfa:	movzx  r10d,BYTE PTR [r15]
  401bfe:	test   r10b,r10b
  401c01:	je     0x401c44
  401c03:	cmp    r10b,0x22
  401c07:	jne    0x401be0
  401c09:	cmp    edx,0xffffffff
  401c0c:	je     0x401d26
  401c12:	lea    rdx,[r9+rdx*1+0x1]
  401c17:	nop    WORD PTR [rax+rax*1+0x0]
  401c20:	add    r9,0x1
  401c24:	mov    BYTE PTR [r9-0x1],0x5c
  401c29:	cmp    r9,rdx
  401c2c:	jne    0x401c20
  401c2e:	lea    r9,[rdx+0x1]
  401c32:	mov    BYTE PTR [rdx],0x22
  401c35:	xor    edx,edx
  401c37:	add    r15,0x1
  401c3b:	movzx  r10d,BYTE PTR [r15]
  401c3f:	test   r10b,r10b
  401c42:	jne    0x401c03
  401c44:	test   r13b,r13b
  401c47:	je     0x401c75
  401c49:	test   edx,edx
  401c4b:	je     0x401d49
  401c51:	sub    edx,0x1
  401c54:	lea    rdx,[r9+rdx*1+0x1]
  401c59:	nop    DWORD PTR [rax+0x0]
  401c60:	add    r9,0x1
  401c64:	mov    BYTE PTR [r9-0x1],0x5c
  401c69:	cmp    r9,rdx
  401c6c:	jne    0x401c60
  401c6e:	lea    r9,[rdx+0x1]
  401c72:	mov    BYTE PTR [rdx],0x22
  401c75:	mov    BYTE PTR [r9],0x0
  401c79:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
  401c7e:	add    rsi,0x1
  401c82:	cmp    rsi,rbx
  401c85:	jne    0x401b25
  401c8b:	mov    rdx,QWORD PTR [rsp+0x70]
  401c90:	mov    ecx,0x2
  401c95:	mov    QWORD PTR [rbp+r12*1+0x0],0x0
  401c9e:	mov    r8,rbp
  401ca1:	mov    rbx,rbp
  401ca4:	call   0x405280
  401ca9:	mov    rcx,QWORD PTR [rbp+0x0]
  401cad:	mov    rsi,rax
  401cb0:	test   rcx,rcx
  401cb3:	je     0x401cc6
  401cb5:	add    rbx,0x8
  401cb9:	call   0x405590
  401cbe:	mov    rcx,QWORD PTR [rbx]
  401cc1:	test   rcx,rcx
  401cc4:	jne    0x401cb5
  401cc6:	mov    rcx,rbp
  401cc9:	call   0x405590
  401cce:	mov    eax,esi
  401cd0:	add    rsp,0x28
  401cd4:	pop    rbx
  401cd5:	pop    rsi
  401cd6:	pop    rdi
  401cd7:	pop    rbp
  401cd8:	pop    r12
  401cda:	pop    r13
  401cdc:	pop    r14
  401cde:	pop    r15
  401ce0:	ret    
  401ce1:	add    edx,0x1
  401ce4:	mov    r9,rcx
  401ce7:	jmp    0x401bf6
  401cec:	nop    DWORD PTR [rax+0x0]
  401cf0:	add    rcx,0x1
  401cf4:	call   0x402d80
  401cf9:	movzx  r10d,BYTE PTR [r15]
  401cfd:	mov    r9,rax
  401d00:	test   r10b,r10b
  401d03:	jne    0x401bd5
  401d09:	jmp    0x401c75
  401d0e:	xchg   ax,ax
  401d10:	lea    rcx,[rip+0x6502]        # 0x408219
  401d17:	call   0x4030c0
  401d1c:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
  401d21:	jmp    0x401c7e
  401d26:	mov    rdx,r9
  401d29:	lea    r9,[rdx+0x1]
  401d2d:	mov    BYTE PTR [rdx],0x22
  401d30:	xor    edx,edx
  401d32:	jmp    0x401c37
  401d37:	mov    rcx,r15
  401d3a:	call   0x4030c0
  401d3f:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
  401d44:	jmp    0x401c7e
  401d49:	mov    rdx,r9
  401d4c:	jmp    0x401c6e
  401d51:	mov    ecx,0x1
  401d56:	xor    r12d,r12d
  401d59:	call   0x402d80
  401d5e:	mov    rbp,rax
  401d61:	jmp    0x401c8b
  401d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d70:	jmp    0x405250
  401d75:	nop
  401d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d80:	mov    rax,0xffffffffffffffff
  401d87:	ret    
  401d88:	nop    DWORD PTR [rax+rax*1+0x0]
  401d90:	jmp    0x4023c0
  401d95:	nop
  401d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401da0:	jmp    0x4023e0
  401da5:	nop
  401da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401db0:	mov    eax,0xffffffff
  401db5:	ret    
  401db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dc0:	mov    eax,0xffffffff
  401dc5:	ret    
  401dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dd0:	mov    eax,0xffffffff
  401dd5:	ret    
  401dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401de0:	mov    rax,QWORD PTR [rip+0xbaa5]        # 0x40d88c
  401de7:	rex.W jmp rax
  401dea:	nop    WORD PTR [rax+rax*1+0x0]
  401df0:	mov    rax,0xffffffffffffffff
  401df7:	ret    
  401df8:	nop    DWORD PTR [rax+rax*1+0x0]
  401e00:	sub    rsp,0x28
  401e04:	call   0x4054c0
  401e09:	cdqe   
  401e0b:	add    rsp,0x28
  401e0f:	ret    
  401e10:	mov    rax,0xffffffffffffffff
  401e17:	ret    
  401e18:	nop    DWORD PTR [rax+rax*1+0x0]
  401e20:	mov    eax,0xffffffff
  401e25:	ret    
  401e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e30:	jmp    0x402a30
  401e35:	nop
  401e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e40:	jmp    0x402ab0
  401e45:	nop
  401e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e50:	jmp    0x402e20
  401e55:	nop
  401e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e60:	jmp    0x402eb0
  401e65:	nop
  401e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e70:	mov    rax,0xffffffffffffffff
  401e77:	ret    
  401e78:	nop    DWORD PTR [rax+rax*1+0x0]
  401e80:	xor    eax,eax
  401e82:	ret    
  401e83:	nop    DWORD PTR [rax]
  401e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e90:	mov    eax,0x1
  401e95:	ret    
  401e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ea0:	jmp    0x403100
  401ea5:	nop
  401ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401eb0:	jmp    0x403120
  401eb5:	nop
  401eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ec0:	mov    rax,0xffffffffffffffff
  401ec7:	ret    
  401ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ed0:	xor    eax,eax
  401ed2:	ret    
  401ed3:	nop    DWORD PTR [rax]
  401ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ee0:	xor    eax,eax
  401ee2:	ret    
  401ee3:	nop
  401ee4:	nop
  401ee5:	nop
  401ee6:	nop
  401ee7:	nop
  401ee8:	nop
  401ee9:	nop
  401eea:	nop
  401eeb:	nop
  401eec:	nop
  401eed:	nop
  401eee:	nop
  401eef:	nop
  401ef0:	push   rbx
  401ef1:	sub    rsp,0x20
  401ef5:	mov    ebx,ecx
  401ef7:	call   0x402dd0
  401efc:	mov    ecx,ebx
  401efe:	add    rsp,0x20
  401f02:	pop    rbx
  401f03:	jmp    0x4054a8
  401f08:	nop    DWORD PTR [rax+rax*1+0x0]
  401f10:	push   rbx
  401f11:	sub    rsp,0x30
  401f15:	mov    edx,ecx
  401f17:	mov    ebx,ecx
  401f19:	lea    rcx,[rip+0xffffffffffffffd0]        # 0x401ef0
  401f20:	call   0x403260
  401f25:	test   eax,eax
  401f27:	js     0x401f38
  401f29:	mov    ecx,ebx
  401f2b:	mov    DWORD PTR [rsp+0x2c],eax
  401f2f:	call   0x4020b0
  401f34:	mov    eax,DWORD PTR [rsp+0x2c]
  401f38:	add    rsp,0x30
  401f3c:	pop    rbx
  401f3d:	ret    
  401f3e:	nop
  401f3f:	nop
  401f40:	push   rsi
  401f41:	push   rbx
  401f42:	sub    rsp,0x28
  401f46:	cmp    ecx,edx
  401f48:	mov    ebx,ecx
  401f4a:	mov    esi,edx
  401f4c:	je     0x401fa0
  401f4e:	test   edx,edx
  401f50:	js     0x401fd0
  401f52:	call   0x402dd0
  401f57:	mov    edx,esi
  401f59:	mov    ecx,ebx
  401f5b:	call   0x4054b0
  401f60:	test   eax,eax
  401f62:	jne    0x401f75
  401f64:	mov    eax,esi
  401f66:	mov    edx,eax
  401f68:	mov    ecx,ebx
  401f6a:	add    rsp,0x28
  401f6e:	pop    rbx
  401f6f:	pop    rsi
  401f70:	jmp    0x402240
  401f75:	cmp    eax,0xffffffff
  401f78:	jne    0x401f66
  401f7a:	mov    rbx,QWORD PTR [rip+0xb743]        # 0x40d6c4
  401f81:	call   rbx
  401f83:	cmp    DWORD PTR [rax],0x18
  401f86:	je     0x401fc0
  401f88:	mov    ebx,0xffffffff
  401f8d:	mov    eax,ebx
  401f8f:	add    rsp,0x28
  401f93:	pop    rbx
  401f94:	pop    rsi
  401f95:	ret    
  401f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fa0:	call   0x402e00
  401fa5:	cmp    rax,0xffffffffffffffff
  401fa9:	je     0x401fd0
  401fab:	cmp    ebx,0xffffffff
  401fae:	je     0x401f7a
  401fb0:	mov    eax,ebx
  401fb2:	add    rsp,0x28
  401fb6:	pop    rbx
  401fb7:	pop    rsi
  401fb8:	ret    
  401fb9:	nop    DWORD PTR [rax+0x0]
  401fc0:	call   rbx
  401fc2:	mov    DWORD PTR [rax],0x9
  401fc8:	jmp    0x401f88
  401fca:	nop    WORD PTR [rax+rax*1+0x0]
  401fd0:	mov    rbx,QWORD PTR [rip+0xb6ed]        # 0x40d6c4
  401fd7:	call   rbx
  401fd9:	mov    DWORD PTR [rax],0x9
  401fdf:	jmp    0x401f81
  401fe1:	nop
  401fe2:	nop
  401fe3:	nop
  401fe4:	nop
  401fe5:	nop
  401fe6:	nop
  401fe7:	nop
  401fe8:	nop
  401fe9:	nop
  401fea:	nop
  401feb:	nop
  401fec:	nop
  401fed:	nop
  401fee:	nop
  401fef:	nop
  401ff0:	push   rsi
  401ff1:	push   rbx
  401ff2:	sub    rsp,0x28
  401ff6:	mov    rax,QWORD PTR [rip+0x9053]        # 0x40b050
  401ffd:	cmp    rax,rcx
  402000:	ja     0x402070
  402002:	lea    rbx,[rax+rax*1+0x1]
  402007:	lea    rax,[rcx+0x1]
  40200b:	cmp    rcx,rbx
  40200e:	mov    rcx,QWORD PTR [rip+0x9043]        # 0x40b058
  402015:	cmovae rbx,rax
  402019:	test   rcx,rcx
  40201c:	je     0x402090
  40201e:	lea    rdx,[rbx*8+0x0]
  402026:	call   0x402e60
  40202b:	mov    rsi,rax
  40202e:	xor    eax,eax
  402030:	test   rsi,rsi
  402033:	je     0x402064
  402035:	mov    rax,QWORD PTR [rip+0x9014]        # 0x40b050
  40203c:	mov    r8,rbx
  40203f:	xor    edx,edx
  402041:	sub    r8,rax
  402044:	lea    rcx,[rsi+rax*8]
  402048:	shl    r8,0x3
  40204c:	call   0x405550
  402051:	mov    QWORD PTR [rip+0x9000],rsi        # 0x40b058
  402058:	mov    QWORD PTR [rip+0x8ff1],rbx        # 0x40b050
  40205f:	mov    eax,0x1
  402064:	add    rsp,0x28
  402068:	pop    rbx
  402069:	pop    rsi
  40206a:	ret    
  40206b:	nop    DWORD PTR [rax+rax*1+0x0]
  402070:	mov    rax,QWORD PTR [rip+0x8fe1]        # 0x40b058
  402077:	mov    rcx,QWORD PTR [rax+rcx*8]
  40207b:	call   0x405590
  402080:	mov    eax,0x1
  402085:	add    rsp,0x28
  402089:	pop    rbx
  40208a:	pop    rsi
  40208b:	ret    
  40208c:	nop    DWORD PTR [rax+0x0]
  402090:	lea    rcx,[rbx*8+0x0]
  402098:	call   0x402d80
  40209d:	mov    rsi,rax
  4020a0:	jmp    0x40202e
  4020a2:	nop    DWORD PTR [rax+0x0]
  4020a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020b0:	push   rbx
  4020b1:	sub    rsp,0x20
  4020b5:	test   ecx,ecx
  4020b7:	js     0x4020c5
  4020b9:	movsxd rcx,ecx
  4020bc:	cmp    rcx,QWORD PTR [rip+0x8f8d]        # 0x40b050
  4020c3:	jb     0x4020d0
  4020c5:	add    rsp,0x20
  4020c9:	pop    rbx
  4020ca:	ret    
  4020cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4020d0:	mov    rax,QWORD PTR [rip+0x8f81]        # 0x40b058
  4020d7:	lea    rbx,[rax+rcx*8]
  4020db:	mov    rcx,QWORD PTR [rbx]
  4020de:	call   0x405590
  4020e3:	mov    QWORD PTR [rbx],0x0
  4020ea:	add    rsp,0x20
  4020ee:	pop    rbx
  4020ef:	ret    
  4020f0:	push   r13
  4020f2:	push   r12
  4020f4:	push   rbp
  4020f5:	push   rdi
  4020f6:	push   rsi
  4020f7:	push   rbx
  4020f8:	sub    rsp,0x28
  4020fc:	test   ecx,ecx
  4020fe:	mov    ebx,ecx
  402100:	mov    rsi,rdx
  402103:	js     0x4021f0
  402109:	movsxd rdi,ebx
  40210c:	mov    rcx,rdi
  40210f:	call   0x401ff0
  402114:	test   al,al
  402116:	je     0x402217
  40211c:	movzx  edx,BYTE PTR [rsi]
  40211f:	mov    rax,QWORD PTR [rip+0x8f32]        # 0x40b058
  402126:	lea    rdi,[rax+rdi*8]
  40212a:	mov    eax,edx
  40212c:	or     eax,0x20
  40212f:	movsx  eax,al
  402132:	sub    eax,0x61
  402135:	cmp    eax,0x19
  402138:	jbe    0x4021b4
  40213a:	cmp    dl,0x2f
  40213d:	sete   dl
  402140:	xor    eax,eax
  402142:	cmp    BYTE PTR [rsi+rax*1],0x5c
  402146:	je     0x4021d0
  40214c:	test   dl,dl
  40214e:	jne    0x4021d0
  402154:	xor    edx,edx
  402156:	xor    ecx,ecx
  402158:	call   0x4023e0
  40215d:	test   rax,rax
  402160:	mov    rbp,rax
  402163:	je     0x402210
  402169:	cmp    BYTE PTR [rsi],0x2e
  40216c:	je     0x4021e0
  40216e:	mov    rdx,rsi
  402171:	xor    r8d,r8d
  402174:	mov    rcx,rbp
  402177:	call   0x403360
  40217c:	mov    r12,QWORD PTR [rip+0xb541]        # 0x40d6c4
  402183:	mov    rsi,rax
  402186:	call   r12
  402189:	mov    r13d,DWORD PTR [rax]
  40218c:	mov    rcx,rbp
  40218f:	call   0x405590
  402194:	call   r12
  402197:	mov    DWORD PTR [rax],r13d
  40219a:	mov    rax,rsi
  40219d:	test   rax,rax
  4021a0:	mov    QWORD PTR [rdi],rax
  4021a3:	je     0x402217
  4021a5:	mov    eax,ebx
  4021a7:	add    rsp,0x28
  4021ab:	pop    rbx
  4021ac:	pop    rsi
  4021ad:	pop    rdi
  4021ae:	pop    rbp
  4021af:	pop    r12
  4021b1:	pop    r13
  4021b3:	ret    
  4021b4:	cmp    BYTE PTR [rsi+0x1],0x3a
  4021b8:	jne    0x40213a
  4021ba:	cmp    BYTE PTR [rsi+0x2],0x2f
  4021be:	mov    eax,0x2
  4021c3:	sete   dl
  4021c6:	cmp    BYTE PTR [rsi+rax*1],0x5c
  4021ca:	jne    0x40214c
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	mov    rcx,rsi
  4021d3:	call   0x4030c0
  4021d8:	jmp    0x40219d
  4021da:	nop    WORD PTR [rax+rax*1+0x0]
  4021e0:	cmp    BYTE PTR [rsi+0x1],0x0
  4021e4:	jne    0x40216e
  4021e6:	mov    QWORD PTR [rdi],rax
  4021e9:	jmp    0x4021a5
  4021eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4021f0:	lea    rdx,[rip+0x6079]        # 0x408270
  4021f7:	lea    rcx,[rip+0x60c6]        # 0x4082c4
  4021fe:	mov    r8d,0x87
  402204:	call   0x4053d0
  402209:	jmp    0x402109
  40220e:	xchg   ax,ax
  402210:	mov    QWORD PTR [rdi],0x0
  402217:	mov    rsi,QWORD PTR [rip+0xb4a6]        # 0x40d6c4
  40221e:	call   rsi
  402220:	mov    edi,DWORD PTR [rax]
  402222:	mov    ecx,ebx
  402224:	call   0x401f10
  402229:	call   rsi
  40222b:	mov    DWORD PTR [rax],edi
  40222d:	mov    eax,0xffffffff
  402232:	jmp    0x4021a7
  402237:	nop    WORD PTR [rax+rax*1+0x0]
  402240:	push   rdi
  402241:	push   rsi
  402242:	push   rbx
  402243:	sub    rsp,0x20
  402247:	movsxd rbx,ecx
  40224a:	mov    esi,edx
  40224c:	mov    eax,ebx
  40224e:	not    eax
  402250:	shr    eax,0x1f
  402253:	cmp    ebx,edx
  402255:	setne  dl
  402258:	test   dl,al
  40225a:	je     0x4022e0
  402260:	test   esi,esi
  402262:	js     0x4022e0
  402264:	mov    rax,QWORD PTR [rip+0x8de5]        # 0x40b050
  40226b:	cmp    rbx,rax
  40226e:	jae    0x4022b3
  402270:	mov    rdx,QWORD PTR [rip+0x8de1]        # 0x40b058
  402277:	cmp    QWORD PTR [rdx+rbx*8],0x0
  40227c:	je     0x4022b3
  40227e:	movsxd rdi,esi
  402281:	mov    rcx,rdi
  402284:	call   0x401ff0
  402289:	test   al,al
  40228b:	je     0x402300
  40228d:	mov    rax,QWORD PTR [rip+0x8dc4]        # 0x40b058
  402294:	mov    rcx,QWORD PTR [rax+rbx*8]
  402298:	lea    rdi,[rax+rdi*8]
  40229c:	call   0x4030c0
  4022a1:	test   rax,rax
  4022a4:	mov    QWORD PTR [rdi],rax
  4022a7:	je     0x402300
  4022a9:	mov    eax,esi
  4022ab:	add    rsp,0x20
  4022af:	pop    rbx
  4022b0:	pop    rsi
  4022b1:	pop    rdi
  4022b2:	ret    
  4022b3:	movsxd rdx,esi
  4022b6:	cmp    rax,rdx
  4022b9:	jbe    0x4022a9
  4022bb:	mov    rax,QWORD PTR [rip+0x8d96]        # 0x40b058
  4022c2:	lea    rbx,[rax+rdx*8]
  4022c6:	mov    rcx,QWORD PTR [rbx]
  4022c9:	call   0x405590
  4022ce:	mov    eax,esi
  4022d0:	mov    QWORD PTR [rbx],0x0
  4022d7:	add    rsp,0x20
  4022db:	pop    rbx
  4022dc:	pop    rsi
  4022dd:	pop    rdi
  4022de:	ret    
  4022df:	nop
  4022e0:	lea    rdx,[rip+0x5f89]        # 0x408270
  4022e7:	lea    rcx,[rip+0x5fe2]        # 0x4082d0
  4022ee:	mov    r8d,0x9f
  4022f4:	call   0x4053d0
  4022f9:	jmp    0x402264
  4022fe:	xchg   ax,ax
  402300:	mov    rbx,QWORD PTR [rip+0xb3bd]        # 0x40d6c4
  402307:	call   rbx
  402309:	mov    edi,DWORD PTR [rax]
  40230b:	mov    ecx,esi
  40230d:	mov    esi,0xffffffff
  402312:	call   0x401f10
  402317:	call   rbx
  402319:	mov    DWORD PTR [rax],edi
  40231b:	jmp    0x4022a9
  40231d:	nop    DWORD PTR [rax]
  402320:	push   rsi
  402321:	push   rbx
  402322:	sub    rsp,0x28
  402326:	test   ecx,ecx
  402328:	mov    ebx,ecx
  40232a:	js     0x402380
  40232c:	movsxd rax,ecx
  40232f:	cmp    rax,QWORD PTR [rip+0x8d1a]        # 0x40b050
  402336:	jb     0x402351
  402338:	mov    edx,ebx
  40233a:	mov    ecx,ebx
  40233c:	xor    esi,esi
  40233e:	call   0x401f40
  402343:	cmp    eax,ebx
  402345:	je     0x402370
  402347:	mov    rax,rsi
  40234a:	add    rsp,0x28
  40234e:	pop    rbx
  40234f:	pop    rsi
  402350:	ret    
  402351:	mov    rdx,QWORD PTR [rip+0x8d00]        # 0x40b058
  402358:	mov    rsi,QWORD PTR [rdx+rax*8]
  40235c:	test   rsi,rsi
  40235f:	je     0x402338
  402361:	mov    rax,rsi
  402364:	add    rsp,0x28
  402368:	pop    rbx
  402369:	pop    rsi
  40236a:	ret    
  40236b:	nop    DWORD PTR [rax+rax*1+0x0]
  402370:	call   QWORD PTR [rip+0xb34e]        # 0x40d6c4
  402376:	mov    DWORD PTR [rax],0x14
  40237c:	jmp    0x402347
  40237e:	xchg   ax,ax
  402380:	call   QWORD PTR [rip+0xb33e]        # 0x40d6c4
  402386:	xor    esi,esi
  402388:	mov    DWORD PTR [rax],0x9
  40238e:	jmp    0x402347
  402390:	sub    rsp,0x28
  402394:	call   0x402320
  402399:	test   rax,rax
  40239c:	je     0x4023b0
  40239e:	mov    rcx,rax
  4023a1:	add    rsp,0x28
  4023a5:	jmp    0x405498
  4023aa:	nop    WORD PTR [rax+rax*1+0x0]
  4023b0:	mov    eax,0xffffffff
  4023b5:	add    rsp,0x28
  4023b9:	ret    
  4023ba:	nop
  4023bb:	nop
  4023bc:	nop
  4023bd:	nop
  4023be:	nop
  4023bf:	nop
  4023c0:	push   rsi
  4023c1:	push   rbx
  4023c2:	sub    rsp,0x28
  4023c6:	mov    ebx,ecx
  4023c8:	mov    rsi,rdx
  4023cb:	call   0x402dd0
  4023d0:	mov    edx,esi
  4023d2:	mov    ecx,ebx
  4023d4:	add    rsp,0x28
  4023d8:	pop    rbx
  4023d9:	pop    rsi
  4023da:	jmp    0x4054a0
  4023df:	nop
  4023e0:	push   r15
  4023e2:	push   r14
  4023e4:	push   r13
  4023e6:	push   r12
  4023e8:	push   rbp
  4023e9:	push   rdi
  4023ea:	push   rsi
  4023eb:	push   rbx
  4023ec:	sub    rsp,0x2d8
  4023f3:	mov    QWORD PTR [rsp+0x328],rdx
  4023fb:	mov    edx,DWORD PTR [rsp+0x328]
  402402:	mov    r15,rcx
  402405:	call   0x4054b8
  40240a:	test   rax,rax
  40240d:	je     0x402423
  40240f:	add    rsp,0x2d8
  402416:	pop    rbx
  402417:	pop    rsi
  402418:	pop    rdi
  402419:	pop    rbp
  40241a:	pop    r12
  40241c:	pop    r13
  40241e:	pop    r14
  402420:	pop    r15
  402422:	ret    
  402423:	cmp    QWORD PTR [rsp+0x328],0x0
  40242c:	mov    r12,QWORD PTR [rip+0xb291]        # 0x40d6c4
  402433:	je     0x4027a0
  402439:	call   r12
  40243c:	cmp    DWORD PTR [rax],0x22
  40243f:	je     0x4027d6
  402445:	call   r12
  402448:	mov    rax,QWORD PTR [rsp+0x328]
  402450:	test   r15,r15
  402453:	mov    QWORD PTR [rsp+0x30],rax
  402458:	je     0x4027be
  40245e:	mov    QWORD PTR [rsp+0x38],r15
  402463:	mov    rbx,QWORD PTR [rsp+0x38]
  402468:	add    rbx,QWORD PTR [rsp+0x30]
  40246d:	lea    rcx,[rip+0x5e8c]        # 0x408300
  402474:	lea    rax,[rbx-0x1]
  402478:	mov    BYTE PTR [rbx-0x1],0x0
  40247c:	mov    QWORD PTR [rsp+0x48],rax
  402481:	lea    rax,[rsp+0x60]
  402486:	mov    rdx,rax
  402489:	mov    rdi,rax
  40248c:	mov    QWORD PTR [rsp+0x40],rax
  402491:	call   0x402f60
  402496:	test   eax,eax
  402498:	js     0x4028f5
  40249e:	mov    eax,DWORD PTR [rsp+0x60]
  4024a2:	lea    rcx,[rip+0x5e59]        # 0x408302
  4024a9:	mov    rdx,rdi
  4024ac:	mov    DWORD PTR [rsp+0x28],eax
  4024b0:	mov    r14d,eax
  4024b3:	movzx  eax,WORD PTR [rsp+0x64]
  4024b8:	mov    esi,eax
  4024ba:	mov    WORD PTR [rsp+0x52],ax
  4024bf:	call   0x402f60
  4024c4:	test   eax,eax
  4024c6:	js     0x4028f5
  4024cc:	mov    eax,DWORD PTR [rsp+0x60]
  4024d0:	mov    edi,eax
  4024d2:	mov    DWORD PTR [rsp+0x58],eax
  4024d6:	movzx  eax,WORD PTR [rsp+0x64]
  4024db:	mov    edx,eax
  4024dd:	mov    WORD PTR [rsp+0x5e],ax
  4024e2:	cmp    si,dx
  4024e5:	jne    0x4024f0
  4024e7:	cmp    r14d,edi
  4024ea:	je     0x402950
  4024f0:	lea    rax,[rsp+0xa0]
  4024f8:	mov    r14,QWORD PTR [rsp+0x40]
  4024fd:	mov    QWORD PTR [rsp+0x320],r15
  402505:	xor    r13d,r13d
  402508:	xor    esi,esi
  40250a:	mov    ebp,0x22c
  40250f:	mov    QWORD PTR [rsp+0x20],rax
  402514:	mov    r15,rax
  402517:	lea    rbx,[r15+rsi*1+0x2]
  40251c:	mov    BYTE PTR [r15+rsi*1],0x2e
  402521:	mov    BYTE PTR [r15+rsi*1+0x1],0x2e
  402527:	mov    rdx,r14
  40252a:	mov    rcx,r15
  40252d:	mov    BYTE PTR [rbx],0x0
  402530:	call   0x402f60
  402535:	test   eax,eax
  402537:	jne    0x40292b
  40253d:	test   r13,r13
  402540:	je     0x402552
  402542:	mov    rcx,r13
  402545:	call   0x4050b0
  40254a:	test   eax,eax
  40254c:	jne    0x40291e
  402552:	mov    eax,DWORD PTR [rsp+0x60]
  402556:	mov    rcx,r15
  402559:	mov    DWORD PTR [rsp+0x54],eax
  40255d:	movzx  eax,WORD PTR [rsp+0x64]
  402562:	mov    WORD PTR [rsp+0x5c],ax
  402567:	call   0x404cb0
  40256c:	test   rax,rax
  40256f:	mov    r13,rax
  402572:	je     0x40291e
  402578:	add    rsi,0x3
  40257c:	mov    BYTE PTR [rbx],0x2f
  40257f:	mov    BYTE PTR [rsp+0x40],0x1
  402584:	call   r12
  402587:	mov    rcx,r13
  40258a:	mov    DWORD PTR [rax],0x0
  402590:	call   0x404e90
  402595:	test   rax,rax
  402598:	je     0x402804
  40259e:	cmp    BYTE PTR [rax+0x8],0x2e
  4025a2:	je     0x4027e0
  4025a8:	lea    rdi,[rax+0x8]
  4025ac:	mov    ebx,0x3
  4025b1:	mov    rcx,rdi
  4025b4:	call   0x405510
  4025b9:	lea    r8,[rax+0x1]
  4025bd:	cmp    r8,0x3
  4025c1:	cmovae rbx,r8
  4025c5:	add    rbx,rsi
  4025c8:	jb     0x402861
  4025ce:	cmp    rbp,rbx
  4025d1:	jae    0x402639
  4025d3:	lea    rax,[rbp+rbp*1+0x0]
  4025d8:	cmp    rbx,rax
  4025db:	cmovb  rbx,rax
  4025df:	cmp    rbp,rbx
  4025e2:	ja     0x402861
  4025e8:	cmp    r15,QWORD PTR [rsp+0x20]
  4025ed:	je     0x4025f7
  4025ef:	mov    rcx,r15
  4025f2:	call   0x405590
  4025f7:	mov    rcx,rbx
  4025fa:	call   0x402d80
  4025ff:	test   rax,rax
  402602:	mov    r15,rax
  402605:	je     0x4028b4
  40260b:	xor    r8d,r8d
  40260e:	xchg   ax,ax
  402610:	mov    BYTE PTR [r15+r8*1],0x2e
  402615:	mov    BYTE PTR [r15+r8*1+0x1],0x2e
  40261b:	add    r8,0x3
  40261f:	cmp    rsi,r8
  402622:	mov    BYTE PTR [r15+r8*1-0x1],0x2f
  402628:	ja     0x402610
  40262a:	mov    rcx,rdi
  40262d:	mov    rbp,rbx
  402630:	call   0x405510
  402635:	lea    r8,[rax+0x1]
  402639:	lea    rcx,[r15+rsi*1]
  40263d:	mov    rdx,rdi
  402640:	call   0x405560
  402645:	mov    rdx,r14
  402648:	mov    rcx,r15
  40264b:	call   0x402f60
  402650:	test   eax,eax
  402652:	jne    0x402584
  402658:	movzx  eax,WORD PTR [rsp+0x66]
  40265d:	and    ax,0xf000
  402661:	cmp    ax,0x4000
  402665:	jne    0x402584
  40266b:	mov    eax,DWORD PTR [rsp+0x28]
  40266f:	cmp    DWORD PTR [rsp+0x60],eax
  402673:	jne    0x402584
  402679:	movzx  eax,WORD PTR [rsp+0x52]
  40267e:	cmp    WORD PTR [rsp+0x64],ax
  402683:	jne    0x402584
  402689:	mov    r8,QWORD PTR [rsp+0x48]
  40268e:	sub    r8,QWORD PTR [rsp+0x38]
  402693:	mov    rcx,rdi
  402696:	mov    QWORD PTR [rsp+0x28],r8
  40269b:	call   0x405510
  4026a0:	mov    r8,QWORD PTR [rsp+0x28]
  4026a5:	mov    r10,rax
  4026a8:	cmp    r8,rax
  4026ab:	ja     0x40273e
  4026b1:	cmp    QWORD PTR [rsp+0x328],0x0
  4026ba:	jne    0x4029d8
  4026c0:	mov    rax,QWORD PTR [rsp+0x30]
  4026c5:	mov    QWORD PTR [rsp+0x28],r8
  4026ca:	mov    QWORD PTR [rsp+0x40],r10
  4026cf:	cmp    r10,rax
  4026d2:	mov    rbx,rax
  4026d5:	cmovae rbx,r10
  4026d9:	add    rbx,rax
  4026dc:	jb     0x402861
  4026e2:	mov    rcx,QWORD PTR [rsp+0x38]
  4026e7:	mov    rdx,rbx
  4026ea:	call   0x402e60
  4026ef:	test   rax,rax
  4026f2:	mov    r11,rax
  4026f5:	je     0x402861
  4026fb:	mov    r8,QWORD PTR [rsp+0x28]
  402700:	mov    rax,QWORD PTR [rsp+0x30]
  402705:	mov    QWORD PTR [rsp+0x28],r11
  40270a:	mov    rcx,r8
  40270d:	lea    rdx,[r11+r8*1]
  402711:	sub    rcx,rax
  402714:	sub    rax,r8
  402717:	add    rcx,rbx
  40271a:	mov    r8,rax
  40271d:	add    rcx,r11
  402720:	call   0x405560
  402725:	mov    r11,QWORD PTR [rsp+0x28]
  40272a:	mov    r10,QWORD PTR [rsp+0x40]
  40272f:	mov    QWORD PTR [rsp+0x48],rax
  402734:	mov    QWORD PTR [rsp+0x30],rbx
  402739:	mov    QWORD PTR [rsp+0x38],r11
  40273e:	mov    r11,QWORD PTR [rsp+0x48]
  402743:	mov    rdx,rdi
  402746:	mov    r8,r10
  402749:	sub    r11,r10
  40274c:	mov    rcx,r11
  40274f:	call   0x405560
  402754:	movzx  edx,WORD PTR [rsp+0x5c]
  402759:	mov    r11,rax
  40275c:	lea    rax,[rax-0x1]
  402760:	cmp    WORD PTR [rsp+0x5e],dx
  402765:	mov    BYTE PTR [r11-0x1],0x2f
  40276a:	mov    QWORD PTR [rsp+0x48],rax
  40276f:	jne    0x40277f
  402771:	mov    edx,DWORD PTR [rsp+0x54]
  402775:	cmp    DWORD PTR [rsp+0x58],edx
  402779:	je     0x4029f1
  40277f:	movzx  eax,WORD PTR [rsp+0x5c]
  402784:	mov    WORD PTR [rsp+0x52],ax
  402789:	mov    eax,DWORD PTR [rsp+0x54]
  40278d:	mov    DWORD PTR [rsp+0x28],eax
  402791:	jmp    0x402517
  402796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027a0:	call   r12
  4027a3:	cmp    DWORD PTR [rax],0x16
  4027a6:	je     0x402877
  4027ac:	test   r15,r15
  4027af:	jne    0x40287c
  4027b5:	mov    QWORD PTR [rsp+0x30],0x104
  4027be:	mov    rcx,QWORD PTR [rsp+0x30]
  4027c3:	call   0x402d80
  4027c8:	test   rax,rax
  4027cb:	mov    QWORD PTR [rsp+0x38],rax
  4027d0:	jne    0x402463
  4027d6:	xor    eax,eax
  4027d8:	jmp    0x40240f
  4027dd:	nop    DWORD PTR [rax]
  4027e0:	cmp    BYTE PTR [rax+0x9],0x0
  4027e4:	je     0x402584
  4027ea:	mov    edx,DWORD PTR [rax+0x8]
  4027ed:	and    edx,0xffff00
  4027f3:	cmp    edx,0x2e00
  4027f9:	jne    0x4025a8
  4027ff:	jmp    0x402584
  402804:	call   r12
  402807:	mov    edx,DWORD PTR [rax]
  402809:	test   edx,edx
  40280b:	jne    0x402818
  40280d:	cmp    BYTE PTR [rsp+0x40],0x0
  402812:	jne    0x4028c4
  402818:	mov    r14,r15
  40281b:	mov    r15,QWORD PTR [rsp+0x320]
  402823:	call   r12
  402826:	mov    eax,DWORD PTR [rax]
  402828:	test   eax,eax
  40282a:	je     0x4028e7
  402830:	call   r12
  402833:	mov    ebx,DWORD PTR [rax]
  402835:	mov    rcx,r13
  402838:	call   0x4050b0
  40283d:	cmp    r14,QWORD PTR [rsp+0x20]
  402842:	je     0x40284c
  402844:	mov    rcx,r14
  402847:	call   0x405590
  40284c:	test   r15,r15
  40284f:	je     0x40290f
  402855:	call   r12
  402858:	mov    DWORD PTR [rax],ebx
  40285a:	xor    eax,eax
  40285c:	jmp    0x40240f
  402861:	mov    r14,r15
  402864:	mov    r15,QWORD PTR [rsp+0x320]
  40286c:	call   r12
  40286f:	mov    DWORD PTR [rax],0xc
  402875:	jmp    0x402830
  402877:	test   r15,r15
  40287a:	je     0x40288c
  40287c:	call   r12
  40287f:	mov    DWORD PTR [rax],0x16
  402885:	xor    eax,eax
  402887:	jmp    0x40240f
  40288c:	lea    rcx,[rsp+0xa0]
  402894:	mov    edx,0x104
  402899:	call   0x4054b8
  40289e:	test   rax,rax
  4028a1:	je     0x4027b5
  4028a7:	mov    rcx,rax
  4028aa:	call   0x4030c0
  4028af:	jmp    0x40240f
  4028b4:	mov    r14,rax
  4028b7:	mov    r15,QWORD PTR [rsp+0x320]
  4028bf:	jmp    0x402830
  4028c4:	mov    rcx,r13
  4028c7:	call   0x405110
  4028cc:	mov    rcx,r13
  4028cf:	call   0x404e90
  4028d4:	test   rax,rax
  4028d7:	je     0x402818
  4028dd:	mov    BYTE PTR [rsp+0x40],0x0
  4028e2:	jmp    0x40259e
  4028e7:	call   r12
  4028ea:	mov    DWORD PTR [rax],0x2
  4028f0:	jmp    0x402830
  4028f5:	lea    rax,[rsp+0xa0]
  4028fd:	mov    QWORD PTR [rsp+0x20],rax
  402902:	mov    r14,rax
  402905:	call   r12
  402908:	mov    ebx,DWORD PTR [rax]
  40290a:	jmp    0x40283d
  40290f:	mov    rcx,QWORD PTR [rsp+0x38]
  402914:	call   0x405590
  402919:	jmp    0x402855
  40291e:	mov    r14,r15
  402921:	mov    r15,QWORD PTR [rsp+0x320]
  402929:	jmp    0x402905
  40292b:	mov    r14,r15
  40292e:	mov    r15,QWORD PTR [rsp+0x320]
  402936:	call   r12
  402939:	test   r13,r13
  40293c:	mov    ebx,DWORD PTR [rax]
  40293e:	je     0x40283d
  402944:	jmp    0x402835
  402949:	nop    DWORD PTR [rax+0x0]
  402950:	mov    rax,QWORD PTR [rsp+0x38]
  402955:	mov    rdx,QWORD PTR [rsp+0x30]
  40295a:	lea    rax,[rax+rdx*1-0x1]
  40295f:	cmp    QWORD PTR [rsp+0x48],rax
  402964:	je     0x4029aa
  402966:	mov    rax,QWORD PTR [rsp+0x48]
  40296b:	mov    rcx,QWORD PTR [rsp+0x38]
  402970:	sub    rbx,rax
  402973:	mov    rdx,rax
  402976:	mov    r8,rbx
  402979:	call   0x405558
  40297e:	cmp    QWORD PTR [rsp+0x328],0x0
  402987:	jne    0x402999
  402989:	mov    rcx,QWORD PTR [rsp+0x38]
  40298e:	mov    rdx,rbx
  402991:	call   0x402e60
  402996:	mov    r15,rax
  402999:	mov    rax,QWORD PTR [rsp+0x38]
  40299e:	test   r15,r15
  4029a1:	cmovne rax,r15
  4029a5:	jmp    0x40240f
  4029aa:	lea    rdx,[rsp+0xa0]
  4029b2:	mov    QWORD PTR [rsp+0x20],rdx
  4029b7:	mov    r14,rdx
  4029ba:	lea    rdx,[rax-0x1]
  4029be:	mov    BYTE PTR [rax-0x1],0x2f
  4029c2:	mov    QWORD PTR [rsp+0x48],rdx
  4029c7:	cmp    r14,QWORD PTR [rsp+0x20]
  4029cc:	je     0x402966
  4029ce:	mov    rcx,r14
  4029d1:	call   0x405590
  4029d6:	jmp    0x402966
  4029d8:	mov    r14,r15
  4029db:	mov    r15,QWORD PTR [rsp+0x320]
  4029e3:	call   r12
  4029e6:	mov    DWORD PTR [rax],0x22
  4029ec:	jmp    0x402830
  4029f1:	mov    rcx,r13
  4029f4:	mov    r14,r15
  4029f7:	mov    r15,QWORD PTR [rsp+0x320]
  4029ff:	call   0x4050b0
  402a04:	test   eax,eax
  402a06:	jne    0x402905
  402a0c:	mov    rax,QWORD PTR [rsp+0x38]
  402a11:	mov    rdx,QWORD PTR [rsp+0x30]
  402a16:	mov    rbx,rax
  402a19:	lea    rax,[rax+rdx*1-0x1]
  402a1e:	add    rbx,rdx
  402a21:	cmp    QWORD PTR [rsp+0x48],rax
  402a26:	jne    0x4029c7
  402a28:	jmp    0x4029ba
  402a2a:	nop
  402a2b:	nop
  402a2c:	nop
  402a2d:	nop
  402a2e:	nop
  402a2f:	nop
  402a30:	push   rsi
  402a31:	push   rbx
  402a32:	sub    rsp,0x38
  402a36:	mov    ebx,ecx
  402a38:	call   0x402e00
  402a3d:	cmp    rax,0xffffffffffffffff
  402a41:	mov    rsi,rax
  402a44:	je     0x402a90
  402a46:	call   0x402dd0
  402a4b:	mov    ecx,ebx
  402a4d:	call   QWORD PTR [rip+0xacb9]        # 0x40d70c
  402a53:	test   eax,eax
  402a55:	jne    0x402a70
  402a57:	call   QWORD PTR [rip+0xac67]        # 0x40d6c4
  402a5d:	mov    DWORD PTR [rax],0x19
  402a63:	xor    eax,eax
  402a65:	add    rsp,0x38
  402a69:	pop    rbx
  402a6a:	pop    rsi
  402a6b:	ret    
  402a6c:	nop    DWORD PTR [rax+0x0]
  402a70:	lea    rdx,[rsp+0x2c]
  402a75:	mov    rcx,rsi
  402a78:	call   QWORD PTR [rip+0xab0e]        # 0x40d58c
  402a7e:	test   eax,eax
  402a80:	je     0x402a57
  402a82:	mov    eax,0x1
  402a87:	add    rsp,0x38
  402a8b:	pop    rbx
  402a8c:	pop    rsi
  402a8d:	ret    
  402a8e:	xchg   ax,ax
  402a90:	call   QWORD PTR [rip+0xac2e]        # 0x40d6c4
  402a96:	mov    DWORD PTR [rax],0x9
  402a9c:	xor    eax,eax
  402a9e:	add    rsp,0x38
  402aa2:	pop    rbx
  402aa3:	pop    rsi
  402aa4:	ret    
  402aa5:	nop
  402aa6:	nop
  402aa7:	nop
  402aa8:	nop
  402aa9:	nop
  402aaa:	nop
  402aab:	nop
  402aac:	nop
  402aad:	nop
  402aae:	nop
  402aaf:	nop
  402ab0:	push   rbp
  402ab1:	push   rdi
  402ab2:	push   rsi
  402ab3:	push   rbx
  402ab4:	sub    rsp,0x68
  402ab8:	mov    rsi,rdx
  402abb:	mov    rbp,rcx
  402abe:	call   0x405510
  402ac3:	mov    rcx,rsi
  402ac6:	mov    rdi,rax
  402ac9:	call   0x405510
  402ace:	mov    rbx,rax
  402ad1:	mov    eax,DWORD PTR [rip+0x8589]        # 0x40b060
  402ad7:	test   eax,eax
  402ad9:	je     0x402c80
  402adf:	mov    rdx,QWORD PTR [rip+0x8582]        # 0x40b068
  402ae6:	test   rdx,rdx
  402ae9:	je     0x402d2b
  402aef:	test   rdi,rdi
  402af2:	jne    0x402be0
  402af8:	test   rbx,rbx
  402afb:	je     0x402b12
  402afd:	movzx  eax,BYTE PTR [rsi+rbx*1-0x1]
  402b02:	cmp    al,0x5c
  402b04:	je     0x402bf1
  402b0a:	cmp    al,0x2f
  402b0c:	je     0x402bf1
  402b12:	mov    rcx,rsi
  402b15:	call   0x4030c0
  402b1a:	test   rax,rax
  402b1d:	mov    rbx,rax
  402b20:	je     0x402c21
  402b26:	xor    edx,edx
  402b28:	mov    rcx,rax
  402b2b:	call   0x405530
  402b30:	cmp    rbx,rax
  402b33:	jae    0x402b95
  402b35:	lea    r8,[rax-0x1]
  402b39:	movzx  eax,BYTE PTR [rax-0x1]
  402b3d:	cmp    al,0x2f
  402b3f:	je     0x402ba0
  402b41:	cmp    al,0x5c
  402b43:	jne    0x402b64
  402b45:	jmp    0x402ba0
  402b47:	nop    WORD PTR [rax+rax*1+0x0]
  402b50:	sub    r8,0x1
  402b54:	movzx  r9d,BYTE PTR [r8]
  402b58:	cmp    r9b,0x2f
  402b5c:	je     0x402ba0
  402b5e:	cmp    r9b,0x5c
  402b62:	je     0x402ba0
  402b64:	cmp    r8,rbx
  402b67:	jne    0x402b50
  402b69:	mov    rcx,rbx
  402b6c:	xor    edi,edi
  402b6e:	call   0x405590
  402b73:	xor    r8d,r8d
  402b76:	mov    rdx,rbp
  402b79:	mov    rcx,rsi
  402b7c:	call   QWORD PTR [rip+0x84e6]        # 0x40b068
  402b82:	test   eax,eax
  402b84:	je     0x402c30
  402b8a:	mov    eax,edi
  402b8c:	add    rsp,0x68
  402b90:	pop    rbx
  402b91:	pop    rsi
  402b92:	pop    rdi
  402b93:	pop    rbp
  402b94:	ret    
  402b95:	mov    r8,rax
  402b98:	nop    DWORD PTR [rax+rax*1+0x0]
  402ba0:	cmp    r8,rbx
  402ba3:	mov    BYTE PTR [r8],0x0
  402ba7:	je     0x402b69
  402ba9:	lea    rdx,[rsp+0x20]
  402bae:	mov    rcx,rbx
  402bb1:	call   0x402f60
  402bb6:	cmp    eax,0xffffffff
  402bb9:	mov    edi,eax
  402bbb:	jne    0x402b69
  402bbd:	mov    rsi,QWORD PTR [rip+0xab00]        # 0x40d6c4
  402bc4:	call   rsi
  402bc6:	mov    ebp,DWORD PTR [rax]
  402bc8:	mov    rcx,rbx
  402bcb:	call   0x405590
  402bd0:	call   rsi
  402bd2:	mov    DWORD PTR [rax],ebp
  402bd4:	jmp    0x402b8a
  402bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402be0:	movzx  eax,BYTE PTR [rbp+rdi*1-0x1]
  402be5:	cmp    al,0x5c
  402be7:	je     0x402bf1
  402be9:	cmp    al,0x2f
  402beb:	jne    0x402af8
  402bf1:	lea    rdx,[rsp+0x20]
  402bf6:	mov    rcx,rbp
  402bf9:	call   0x402f60
  402bfe:	test   eax,eax
  402c00:	jne    0x402c15
  402c02:	movzx  eax,WORD PTR [rsp+0x26]
  402c07:	and    ax,0xf000
  402c0b:	cmp    ax,0x4000
  402c0f:	je     0x402d6d
  402c15:	call   QWORD PTR [rip+0xaaa9]        # 0x40d6c4
  402c1b:	mov    DWORD PTR [rax],0x14
  402c21:	mov    edi,0xffffffff
  402c26:	jmp    0x402b8a
  402c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c30:	call   QWORD PTR [rip+0xa97e]        # 0x40d5b4
  402c36:	cmp    eax,0x5
  402c39:	je     0x402d41
  402c3f:	jbe    0x402cc2
  402c45:	cmp    eax,0x57
  402c48:	je     0x402cff
  402c4e:	jbe    0x402ce4
  402c54:	cmp    eax,0xb7
  402c59:	je     0x402d57
  402c5f:	cmp    eax,0x476
  402c64:	jne    0x402d15
  402c6a:	call   QWORD PTR [rip+0xaa54]        # 0x40d6c4
  402c70:	mov    edi,0xffffffff
  402c75:	mov    DWORD PTR [rax],0x1f
  402c7b:	jmp    0x402b8a
  402c80:	lea    rcx,[rip+0x5689]        # 0x408310
  402c87:	call   QWORD PTR [rip+0xa93f]        # 0x40d5cc
  402c8d:	test   rax,rax
  402c90:	mov    rdx,QWORD PTR [rip+0x83d1]        # 0x40b068
  402c97:	je     0x402cb3
  402c99:	lea    rdx,[rip+0x567d]        # 0x40831d
  402ca0:	mov    rcx,rax
  402ca3:	call   QWORD PTR [rip+0xa92b]        # 0x40d5d4
  402ca9:	mov    QWORD PTR [rip+0x83b8],rax        # 0x40b068
  402cb0:	mov    rdx,rax
  402cb3:	mov    DWORD PTR [rip+0x83a3],0x1        # 0x40b060
  402cbd:	jmp    0x402ae6
  402cc2:	cmp    eax,0x1
  402cc5:	je     0x402d2b
  402cc7:	jb     0x402d15
  402cc9:	cmp    eax,0x3
  402ccc:	ja     0x402d15
  402cce:	call   QWORD PTR [rip+0xa9f0]        # 0x40d6c4
  402cd4:	mov    edi,0xffffffff
  402cd9:	mov    DWORD PTR [rax],0x2
  402cdf:	jmp    0x402b8a
  402ce4:	cmp    eax,0x11
  402ce7:	jne    0x402d15
  402ce9:	call   QWORD PTR [rip+0xa9d5]        # 0x40d6c4
  402cef:	mov    edi,0xffffffff
  402cf4:	mov    DWORD PTR [rax],0x12
  402cfa:	jmp    0x402b8a
  402cff:	call   QWORD PTR [rip+0xa9bf]        # 0x40d6c4
  402d05:	mov    edi,0xffffffff
  402d0a:	mov    DWORD PTR [rax],0x26
  402d10:	jmp    0x402b8a
  402d15:	call   QWORD PTR [rip+0xa9a9]        # 0x40d6c4
  402d1b:	mov    edi,0xffffffff
  402d20:	mov    DWORD PTR [rax],0x5
  402d26:	jmp    0x402b8a
  402d2b:	call   QWORD PTR [rip+0xa993]        # 0x40d6c4
  402d31:	mov    edi,0xffffffff
  402d36:	mov    DWORD PTR [rax],0x1
  402d3c:	jmp    0x402b8a
  402d41:	call   QWORD PTR [rip+0xa97d]        # 0x40d6c4
  402d47:	mov    edi,0xffffffff
  402d4c:	mov    DWORD PTR [rax],0xd
  402d52:	jmp    0x402b8a
  402d57:	call   QWORD PTR [rip+0xa967]        # 0x40d6c4
  402d5d:	mov    edi,0xffffffff
  402d62:	mov    DWORD PTR [rax],0x11
  402d68:	jmp    0x402b8a
  402d6d:	call   QWORD PTR [rip+0xa951]        # 0x40d6c4
  402d73:	mov    DWORD PTR [rax],0x1
  402d79:	jmp    0x402c21
  402d7e:	nop
  402d7f:	nop
  402d80:	push   rbx
  402d81:	sub    rsp,0x20
  402d85:	call   0x405570
  402d8a:	test   rax,rax
  402d8d:	mov    rbx,rax
  402d90:	je     0x402da0
  402d92:	mov    rax,rbx
  402d95:	add    rsp,0x20
  402d99:	pop    rbx
  402d9a:	ret    
  402d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402da0:	call   QWORD PTR [rip+0xa91e]        # 0x40d6c4
  402da6:	mov    DWORD PTR [rax],0xc
  402dac:	mov    rax,rbx
  402daf:	add    rsp,0x20
  402db3:	pop    rbx
  402db4:	ret    
  402db5:	nop
  402db6:	nop
  402db7:	nop
  402db8:	nop
  402db9:	nop
  402dba:	nop
  402dbb:	nop
  402dbc:	nop
  402dbd:	nop
  402dbe:	nop
  402dbf:	nop
  402dc0:	ret    
  402dc1:	nop    DWORD PTR [rax+rax*1+0x0]
  402dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402dd0:	sub    rsp,0x28
  402dd4:	mov    eax,DWORD PTR [rip+0x8296]        # 0x40b070
  402dda:	test   eax,eax
  402ddc:	jne    0x402df5
  402dde:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x402dc0
  402de5:	call   QWORD PTR [rip+0x42ad]        # 0x407098
  402deb:	mov    DWORD PTR [rip+0x827b],0x1        # 0x40b070
  402df5:	add    rsp,0x28
  402df9:	ret    
  402dfa:	nop
  402dfb:	nop
  402dfc:	nop
  402dfd:	nop
  402dfe:	nop
  402dff:	nop
  402e00:	push   rbx
  402e01:	sub    rsp,0x20
  402e05:	mov    ebx,ecx
  402e07:	call   0x402dd0
  402e0c:	mov    rax,QWORD PTR [rip+0xa8e9]        # 0x40d6fc
  402e13:	mov    ecx,ebx
  402e15:	add    rsp,0x20
  402e19:	pop    rbx
  402e1a:	rex.W jmp rax
  402e1d:	nop
  402e1e:	nop
  402e1f:	nop
  402e20:	push   rbx
  402e21:	sub    rsp,0x30
  402e25:	mov    r8d,0x8000
  402e2b:	mov    edx,0x1000
  402e30:	mov    rbx,rcx
  402e33:	lea    rcx,[rsp+0x20]
  402e38:	call   QWORD PTR [rip+0xa8e6]        # 0x40d724
  402e3e:	test   eax,eax
  402e40:	jne    0x402e4f
  402e42:	mov    edx,DWORD PTR [rsp+0x20]
  402e46:	mov    DWORD PTR [rbx],edx
  402e48:	mov    edx,DWORD PTR [rsp+0x24]
  402e4c:	mov    DWORD PTR [rbx+0x4],edx
  402e4f:	add    rsp,0x30
  402e53:	pop    rbx
  402e54:	ret    
  402e55:	nop
  402e56:	nop
  402e57:	nop
  402e58:	nop
  402e59:	nop
  402e5a:	nop
  402e5b:	nop
  402e5c:	nop
  402e5d:	nop
  402e5e:	nop
  402e5f:	nop
  402e60:	push   rbx
  402e61:	sub    rsp,0x20
  402e65:	test   rcx,rcx
  402e68:	je     0x402e80
  402e6a:	call   0x405540
  402e6f:	mov    rbx,rax
  402e72:	test   rbx,rbx
  402e75:	je     0x402e90
  402e77:	mov    rax,rbx
  402e7a:	add    rsp,0x20
  402e7e:	pop    rbx
  402e7f:	ret    
  402e80:	mov    rcx,rdx
  402e83:	call   0x405570
  402e88:	mov    rbx,rax
  402e8b:	test   rbx,rbx
  402e8e:	jne    0x402e77
  402e90:	call   QWORD PTR [rip+0xa82e]        # 0x40d6c4
  402e96:	mov    DWORD PTR [rax],0xc
  402e9c:	mov    rax,rbx
  402e9f:	add    rsp,0x20
  402ea3:	pop    rbx
  402ea4:	ret    
  402ea5:	nop
  402ea6:	nop
  402ea7:	nop
  402ea8:	nop
  402ea9:	nop
  402eaa:	nop
  402eab:	nop
  402eac:	nop
  402ead:	nop
  402eae:	nop
  402eaf:	nop
  402eb0:	push   rsi
  402eb1:	push   rbx
  402eb2:	sub    rsp,0x28
  402eb6:	mov    rbx,rcx
  402eb9:	call   0x405510
  402ebe:	test   rax,rax
  402ec1:	je     0x402ef9
  402ec3:	movzx  r8d,BYTE PTR [rbx+rax*1-0x1]
  402ec9:	lea    rdx,[rax-0x1]
  402ecd:	cmp    r8b,0x5c
  402ed1:	je     0x402ef4
  402ed3:	cmp    r8b,0x2f
  402ed7:	je     0x402ef4
  402ed9:	mov    rdx,rax
  402edc:	jmp    0x402f14
  402ede:	xchg   ax,ax
  402ee0:	movzx  eax,BYTE PTR [rbx+rdx*1-0x1]
  402ee5:	lea    r8,[rdx-0x1]
  402ee9:	cmp    al,0x5c
  402eeb:	je     0x402ef1
  402eed:	cmp    al,0x2f
  402eef:	jne    0x402f11
  402ef1:	mov    rdx,r8
  402ef4:	test   rdx,rdx
  402ef7:	jne    0x402ee0
  402ef9:	mov    rcx,rbx
  402efc:	call   0x4054c8
  402f01:	cmp    eax,0xffffffff
  402f04:	mov    ebx,eax
  402f06:	je     0x402f40
  402f08:	mov    eax,ebx
  402f0a:	add    rsp,0x28
  402f0e:	pop    rbx
  402f0f:	pop    rsi
  402f10:	ret    
  402f11:	mov    r8d,eax
  402f14:	cmp    r8b,0x2e
  402f18:	jne    0x402ef9
  402f1a:	cmp    rdx,0x1
  402f1e:	je     0x402f2d
  402f20:	movzx  eax,BYTE PTR [rbx+rdx*1-0x2]
  402f25:	cmp    al,0x5c
  402f27:	je     0x402f2d
  402f29:	cmp    al,0x2f
  402f2b:	jne    0x402ef9
  402f2d:	call   QWORD PTR [rip+0xa791]        # 0x40d6c4
  402f33:	mov    ebx,0xffffffff
  402f38:	mov    DWORD PTR [rax],0x16
  402f3e:	jmp    0x402f08
  402f40:	mov    rsi,QWORD PTR [rip+0xa77d]        # 0x40d6c4
  402f47:	call   rsi
  402f49:	cmp    DWORD PTR [rax],0x16
  402f4c:	jne    0x402f08
  402f4e:	call   rsi
  402f50:	mov    DWORD PTR [rax],0x14
  402f56:	jmp    0x402f08
  402f58:	nop
  402f59:	nop
  402f5a:	nop
  402f5b:	nop
  402f5c:	nop
  402f5d:	nop
  402f5e:	nop
  402f5f:	nop
  402f60:	push   r14
  402f62:	push   r13
  402f64:	push   r12
  402f66:	push   rbp
  402f67:	push   rdi
  402f68:	push   rsi
  402f69:	push   rbx
  402f6a:	sub    rsp,0x130
  402f71:	mov    r12,QWORD PTR [rip+0xa89c]        # 0x40d814
  402f78:	mov    rsi,rcx
  402f7b:	mov    rbp,rdx
  402f7e:	call   r12
  402f81:	cmp    eax,0xffffffff
  402f84:	mov    ebx,eax
  402f86:	je     0x402fa0
  402f88:	mov    eax,ebx
  402f8a:	add    rsp,0x130
  402f91:	pop    rbx
  402f92:	pop    rsi
  402f93:	pop    rdi
  402f94:	pop    rbp
  402f95:	pop    r12
  402f97:	pop    r13
  402f99:	pop    r14
  402f9b:	ret    
  402f9c:	nop    DWORD PTR [rax+0x0]
  402fa0:	mov    r13,QWORD PTR [rip+0xa71d]        # 0x40d6c4
  402fa7:	call   r13
  402faa:	cmp    DWORD PTR [rax],0x2
  402fad:	jne    0x402f88
  402faf:	lea    r14,[rsp+0x20]
  402fb4:	xor    eax,eax
  402fb6:	mov    ecx,0x20
  402fbb:	mov    rdi,r14
  402fbe:	rep stos QWORD PTR es:[rdi],rax
  402fc1:	mov    rcx,rsi
  402fc4:	mov    DWORD PTR [rdi],0x0
  402fca:	mov    BYTE PTR [rdi+0x4],0x0
  402fce:	call   0x405510
  402fd3:	cmp    rax,0x103
  402fd9:	ja     0x403050
  402fdb:	test   rax,rax
  402fde:	je     0x402f88
  402fe0:	lea    rdx,[rax+0x1]
  402fe4:	mov    rdi,r14
  402fe7:	cmp    edx,0x8
  402fea:	jb     0x402ff4
  402fec:	mov    ecx,edx
  402fee:	shr    ecx,0x3
  402ff1:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  402ff4:	xor    ecx,ecx
  402ff6:	test   dl,0x4
  402ff9:	je     0x403004
  402ffb:	mov    ecx,DWORD PTR [rsi]
  402ffd:	mov    DWORD PTR [rdi],ecx
  402fff:	mov    ecx,0x4
  403004:	test   dl,0x2
  403007:	je     0x403017
  403009:	movzx  r8d,WORD PTR [rsi+rcx*1]
  40300e:	mov    WORD PTR [rdi+rcx*1],r8w
  403013:	add    rcx,0x2
  403017:	and    edx,0x1
  40301a:	je     0x403023
  40301c:	movzx  edx,BYTE PTR [rsi+rcx*1]
  403020:	mov    BYTE PTR [rdi+rcx*1],dl
  403023:	lea    rdx,[rax-0x1]
  403027:	movzx  ecx,BYTE PTR [rsp+rdx*1+0x20]
  40302c:	cmp    cl,0x5c
  40302f:	je     0x40305e
  403031:	cmp    cl,0x2f
  403034:	je     0x40305e
  403036:	mov    BYTE PTR [rsp+rax*1+0x20],0x2f
  40303b:	mov    rdx,rbp
  40303e:	mov    rcx,r14
  403041:	call   r12
  403044:	mov    ebx,eax
  403046:	jmp    0x402f88
  40304b:	nop    DWORD PTR [rax+rax*1+0x0]
  403050:	call   r13
  403053:	mov    DWORD PTR [rax],0x26
  403059:	jmp    0x402f88
  40305e:	lea    rax,[r14+rdx*1]
  403062:	cmp    rax,r14
  403065:	mov    BYTE PTR [rax],0x0
  403068:	je     0x4030a5
  40306a:	movzx  edx,BYTE PTR [rax-0x1]
  40306e:	sub    rax,0x1
  403072:	cmp    dl,0x5c
  403075:	je     0x403062
  403077:	cmp    dl,0x2f
  40307a:	je     0x403062
  40307c:	mov    rdx,rbp
  40307f:	mov    rcx,r14
  403082:	call   r12
  403085:	test   eax,eax
  403087:	jne    0x4030b3
  403089:	movzx  eax,WORD PTR [rbp+0x6]
  40308d:	and    ax,0xf000
  403091:	cmp    ax,0x4000
  403095:	je     0x4030ac
  403097:	call   r13
  40309a:	mov    DWORD PTR [rax],0x14
  4030a0:	jmp    0x402f88
  4030a5:	mov    BYTE PTR [rsp+0x20],0x2f
  4030aa:	jmp    0x40307c
  4030ac:	xor    ebx,ebx
  4030ae:	jmp    0x402f88
  4030b3:	mov    ebx,eax
  4030b5:	jmp    0x402f88
  4030ba:	nop
  4030bb:	nop
  4030bc:	nop
  4030bd:	nop
  4030be:	nop
  4030bf:	nop
  4030c0:	push   rsi
  4030c1:	push   rbx
  4030c2:	sub    rsp,0x28
  4030c6:	mov    rsi,rcx
  4030c9:	call   0x405510
  4030ce:	lea    rbx,[rax+0x1]
  4030d2:	mov    rcx,rbx
  4030d5:	call   0x402d80
  4030da:	test   rax,rax
  4030dd:	je     0x4030f3
  4030df:	mov    r8,rbx
  4030e2:	mov    rdx,rsi
  4030e5:	mov    rcx,rax
  4030e8:	add    rsp,0x28
  4030ec:	pop    rbx
  4030ed:	pop    rsi
  4030ee:	jmp    0x405560
  4030f3:	xor    eax,eax
  4030f5:	add    rsp,0x28
  4030f9:	pop    rbx
  4030fa:	pop    rsi
  4030fb:	ret    
  4030fc:	nop
  4030fd:	nop
  4030fe:	nop
  4030ff:	nop
  403100:	sub    rsp,0x28
  403104:	call   QWORD PTR [rip+0xa5ba]        # 0x40d6c4
  40310a:	mov    DWORD PTR [rax],0x28
  403110:	mov    eax,0xffffffff
  403115:	add    rsp,0x28
  403119:	ret    
  40311a:	nop
  40311b:	nop
  40311c:	nop
  40311d:	nop
  40311e:	nop
  40311f:	nop
  403120:	push   r12
  403122:	push   rbp
  403123:	push   rdi
  403124:	push   rsi
  403125:	push   rbx
  403126:	sub    rsp,0x60
  40312a:	mov    rdi,rcx
  40312d:	call   0x405510
  403132:	test   rax,rax
  403135:	mov    rbx,rax
  403138:	mov    rsi,rax
  40313b:	jne    0x403150
  40313d:	mov    rcx,rdi
  403140:	call   0x4054d0
  403145:	add    rsp,0x60
  403149:	pop    rbx
  40314a:	pop    rsi
  40314b:	pop    rdi
  40314c:	pop    rbp
  40314d:	pop    r12
  40314f:	ret    
  403150:	movzx  eax,BYTE PTR [rdi+rax*1-0x1]
  403155:	cmp    al,0x5c
  403157:	je     0x40315d
  403159:	cmp    al,0x2f
  40315b:	jne    0x40313d
  40315d:	lea    r12,[rsp+0x20]
  403162:	mov    rcx,rdi
  403165:	mov    rdx,r12
  403168:	call   0x402f60
  40316d:	test   eax,eax
  40316f:	jne    0x403145
  403171:	mov    rcx,rbx
  403174:	call   0x402d80
  403179:	test   rax,rax
  40317c:	mov    rbp,rax
  40317f:	je     0x4031d7
  403181:	mov    r8,rbx
  403184:	mov    rdx,rdi
  403187:	mov    rcx,rax
  40318a:	call   0x405560
  40318f:	nop
  403190:	sub    rsi,0x1
  403194:	movzx  r8d,BYTE PTR [rbp+rsi*1+0x0]
  40319a:	cmp    r8b,0x5c
  40319e:	je     0x4031a6
  4031a0:	cmp    r8b,0x2f
  4031a4:	jne    0x4031c0
  4031a6:	test   rsi,rsi
  4031a9:	mov    BYTE PTR [rbp+rsi*1+0x0],0x0
  4031ae:	jne    0x403190
  4031b0:	mov    rcx,rbp
  4031b3:	call   0x405590
  4031b8:	jmp    0x40313d
  4031ba:	nop    WORD PTR [rax+rax*1+0x0]
  4031c0:	mov    rdx,r12
  4031c3:	mov    rcx,rbp
  4031c6:	call   0x402f60
  4031cb:	test   eax,eax
  4031cd:	je     0x4031b0
  4031cf:	mov    rcx,rbp
  4031d2:	call   0x405590
  4031d7:	call   QWORD PTR [rip+0xa4e7]        # 0x40d6c4
  4031dd:	mov    DWORD PTR [rax],0x1
  4031e3:	or     eax,0xffffffff
  4031e6:	jmp    0x403145
  4031eb:	nop
  4031ec:	nop
  4031ed:	nop
  4031ee:	nop
  4031ef:	nop
  4031f0:	lea    r9,[rip+0x3e29]        # 0x407020
  4031f7:	cmp    rcx,r9
  4031fa:	je     0x403210
  4031fc:	mov    r9,QWORD PTR [rcx+0x10]
  403200:	mov    rcx,QWORD PTR [rcx]
  403203:	rex.WB jmp r9
  403206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403210:	mov    ecx,r8d
  403213:	rex.W jmp rdx
  403216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403220:	lea    r10,[rip+0x3df9]        # 0x407020
  403227:	mov    rax,rcx
  40322a:	mov    r11,rdx
  40322d:	mov    ecx,r8d
  403230:	cmp    rax,r10
  403233:	mov    r8,QWORD PTR [rsp+0x28]
  403238:	je     0x403250
  40323a:	mov    QWORD PTR [rsp+0x28],r8
  40323f:	mov    r8d,ecx
  403242:	mov    r10,QWORD PTR [rax+0x18]
  403246:	mov    rcx,QWORD PTR [rax]
  403249:	rex.WB jmp r10
  40324c:	nop    DWORD PTR [rax+0x0]
  403250:	mov    edx,r9d
  403253:	rex.WB jmp r11
  403256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403260:	mov    r8d,edx
  403263:	mov    rdx,rcx
  403266:	mov    rcx,QWORD PTR [rip+0x3db3]        # 0x407020
  40326d:	jmp    0x4031f0
  40326f:	nop
  403270:	sub    rsp,0x38
  403274:	mov    QWORD PTR [rsp+0x20],r9
  403279:	mov    r9d,r8d
  40327c:	mov    r8d,edx
  40327f:	mov    rdx,rcx
  403282:	mov    rcx,QWORD PTR [rip+0x3d97]        # 0x407020
  403289:	call   0x403220
  40328e:	add    rsp,0x38
  403292:	ret    
  403293:	nop    DWORD PTR [rax]
  403296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032a0:	sub    rsp,0x28
  4032a4:	lea    rax,[rip+0xffffffffffffff45]        # 0x4031f0
  4032ab:	test   rcx,rcx
  4032ae:	cmove  rcx,rax
  4032b2:	lea    rax,[rip+0xffffffffffffff67]        # 0x403220
  4032b9:	test   rdx,rdx
  4032bc:	cmove  rdx,rax
  4032c0:	cmp    QWORD PTR [r8],0x0
  4032c4:	je     0x4032e0
  4032c6:	cmp    QWORD PTR [r8+0x10],rcx
  4032ca:	jne    0x403318
  4032cc:	cmp    QWORD PTR [r8+0x18],rdx
  4032d0:	jne    0x403318
  4032d2:	add    rsp,0x28
  4032d6:	ret    
  4032d7:	nop    WORD PTR [rax+rax*1+0x0]
  4032e0:	cmp    QWORD PTR [r8+0x8],0x0
  4032e5:	jne    0x4032c6
  4032e7:	mov    rax,QWORD PTR [rip+0x3d32]        # 0x407020
  4032ee:	mov    QWORD PTR [r8+0x10],rcx
  4032f2:	mov    QWORD PTR [r8+0x18],rdx
  4032f6:	mov    QWORD PTR [r8],rax
  4032f9:	lea    rax,[rip+0x3d20]        # 0x407020
  403300:	mov    QWORD PTR [r8+0x8],rax
  403304:	mov    rax,QWORD PTR [rip+0x3d15]        # 0x407020
  40330b:	mov    QWORD PTR [rip+0x3d0e],r8        # 0x407020
  403312:	mov    QWORD PTR [rax+0x8],r8
  403316:	jmp    0x4032d2
  403318:	call   0x4055b0
  40331d:	nop
  40331e:	xchg   ax,ax
  403320:	mov    rax,QWORD PTR [rcx+0x8]
  403324:	mov    rdx,QWORD PTR [rcx]
  403327:	test   rax,rax
  40332a:	je     0x403357
  40332c:	test   rdx,rdx
  40332f:	je     0x403357
  403331:	mov    QWORD PTR [rax],rdx
  403334:	mov    QWORD PTR [rdx+0x8],rax
  403338:	mov    QWORD PTR [rcx],0x0
  40333f:	mov    QWORD PTR [rcx+0x8],0x0
  403347:	mov    QWORD PTR [rcx+0x10],0x0
  40334f:	mov    QWORD PTR [rcx+0x18],0x0
  403357:	repz ret 
  403359:	nop
  40335a:	nop
  40335b:	nop
  40335c:	nop
  40335d:	nop
  40335e:	nop
  40335f:	nop
  403360:	push   r15
  403362:	push   r14
  403364:	push   r13
  403366:	push   r12
  403368:	push   rbp
  403369:	push   rdi
  40336a:	push   rsi
  40336b:	push   rbx
  40336c:	sub    rsp,0x28
  403370:	xor    edi,edi
  403372:	mov    rbp,rcx
  403375:	mov    r14,rdx
  403378:	mov    r12,r8
  40337b:	call   0x4034d0
  403380:	mov    rbx,rax
  403383:	mov    rcx,rax
  403386:	mov    rsi,rbx
  403389:	sub    rsi,rbp
  40338c:	call   0x403560
  403391:	add    rsi,rax
  403394:	test   rax,rax
  403397:	je     0x4033b0
  403399:	movzx  edx,BYTE PTR [rbx+rax*1-0x1]
  40339e:	cmp    dl,0x5c
  4033a1:	setne  al
  4033a4:	xor    edi,edi
  4033a6:	cmp    dl,0x2f
  4033a9:	setne  dil
  4033ad:	and    rdi,rax
  4033b0:	movzx  r9d,BYTE PTR [r14]
  4033b4:	xor    ebx,ebx
  4033b6:	or     r9d,0x20
  4033ba:	movsx  r9d,r9b
  4033be:	sub    r9d,0x61
  4033c2:	cmp    r9d,0x19
  4033c6:	ja     0x4033d5
  4033c8:	xor    ebx,ebx
  4033ca:	cmp    BYTE PTR [r14+0x1],0x3a
  4033cf:	sete   bl
  4033d2:	add    rbx,rbx
  4033d5:	add    rbx,r14
  4033d8:	movzx  eax,BYTE PTR [rbx]
  4033db:	cmp    al,0x5c
  4033dd:	je     0x403480
  4033e3:	cmp    al,0x2f
  4033e5:	je     0x403480
  4033eb:	mov    rcx,rbx
  4033ee:	call   0x405510
  4033f3:	lea    rcx,[rsi+rdi*1+0x1]
  4033f8:	mov    r15,rax
  4033fb:	add    rcx,rax
  4033fe:	call   0x402d80
  403403:	test   rax,rax
  403406:	mov    r13,rax
  403409:	je     0x4034c0
  40340f:	mov    rcx,rax
  403412:	mov    r8,rsi
  403415:	mov    rdx,rbp
  403418:	call   0x405260
  40341d:	test   r12,r12
  403420:	mov    BYTE PTR [rax],0x2f
  403423:	lea    rcx,[rax+rdi*1]
  403427:	je     0x40345b
  403429:	movzx  eax,BYTE PTR [r14]
  40342d:	mov    edx,eax
  40342f:	or     edx,0x20
  403432:	movsx  edx,dl
  403435:	sub    edx,0x61
  403438:	cmp    edx,0x19
  40343b:	jbe    0x4034a0
  40343d:	cmp    al,0x2f
  40343f:	sete   dl
  403442:	xor    eax,eax
  403444:	cmp    BYTE PTR [r14+rax*1],0x5c
  403449:	sete   al
  40344c:	or     edx,eax
  40344e:	mov    rax,rcx
  403451:	movzx  edx,dl
  403454:	sub    rax,rdx
  403457:	mov    QWORD PTR [r12],rax
  40345b:	mov    r8,r15
  40345e:	mov    rdx,rbx
  403461:	call   0x405260
  403466:	mov    BYTE PTR [rax],0x0
  403469:	mov    rax,r13
  40346c:	add    rsp,0x28
  403470:	pop    rbx
  403471:	pop    rsi
  403472:	pop    rdi
  403473:	pop    rbp
  403474:	pop    r12
  403476:	pop    r13
  403478:	pop    r14
  40347a:	pop    r15
  40347c:	ret    
  40347d:	nop    DWORD PTR [rax]
  403480:	add    rbx,0x1
  403484:	movzx  eax,BYTE PTR [rbx]
  403487:	cmp    al,0x5c
  403489:	jne    0x4033e3
  40348f:	add    rbx,0x1
  403493:	movzx  eax,BYTE PTR [rbx]
  403496:	cmp    al,0x5c
  403498:	jne    0x4033e3
  40349e:	jmp    0x403480
  4034a0:	cmp    BYTE PTR [r14+0x1],0x3a
  4034a5:	jne    0x40343d
  4034a7:	cmp    BYTE PTR [r14+0x2],0x2f
  4034ac:	mov    eax,0x2
  4034b1:	sete   dl
  4034b4:	jmp    0x403444
  4034b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034c0:	xor    eax,eax
  4034c2:	jmp    0x40346c
  4034c4:	nop
  4034c5:	nop
  4034c6:	nop
  4034c7:	nop
  4034c8:	nop
  4034c9:	nop
  4034ca:	nop
  4034cb:	nop
  4034cc:	nop
  4034cd:	nop
  4034ce:	nop
  4034cf:	nop
  4034d0:	movzx  edx,BYTE PTR [rcx]
  4034d3:	xor    eax,eax
  4034d5:	or     edx,0x20
  4034d8:	movsx  edx,dl
  4034db:	sub    edx,0x61
  4034de:	cmp    edx,0x19
  4034e1:	ja     0x4034ef
  4034e3:	xor    eax,eax
  4034e5:	cmp    BYTE PTR [rcx+0x1],0x3a
  4034e9:	sete   al
  4034ec:	add    rax,rax
  4034ef:	add    rax,rcx
  4034f2:	movzx  edx,BYTE PTR [rax]
  4034f5:	cmp    dl,0x5c
  4034f8:	jne    0x40350c
  4034fa:	nop    WORD PTR [rax+rax*1+0x0]
  403500:	add    rax,0x1
  403504:	movzx  edx,BYTE PTR [rax]
  403507:	cmp    dl,0x5c
  40350a:	je     0x403500
  40350c:	cmp    dl,0x2f
  40350f:	je     0x403500
  403511:	test   dl,dl
  403513:	je     0x403551
  403515:	mov    rcx,rax
  403518:	xor    r8d,r8d
  40351b:	jmp    0x40353b
  40351d:	nop    DWORD PTR [rax]
  403520:	cmp    dl,0x2f
  403523:	je     0x403540
  403525:	test   r8b,r8b
  403528:	je     0x403530
  40352a:	mov    rax,rcx
  40352d:	xor    r8d,r8d
  403530:	add    rcx,0x1
  403534:	movzx  edx,BYTE PTR [rcx]
  403537:	test   dl,dl
  403539:	je     0x403551
  40353b:	cmp    dl,0x5c
  40353e:	jne    0x403520
  403540:	add    rcx,0x1
  403544:	movzx  edx,BYTE PTR [rcx]
  403547:	mov    r8d,0x1
  40354d:	test   dl,dl
  40354f:	jne    0x40353b
  403551:	repz ret 
  403553:	nop    DWORD PTR [rax]
  403556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403560:	push   rbx
  403561:	sub    rsp,0x20
  403565:	movzx  eax,BYTE PTR [rcx]
  403568:	mov    rbx,rcx
  40356b:	or     eax,0x20
  40356e:	movsx  eax,al
  403571:	sub    eax,0x61
  403574:	cmp    eax,0x19
  403577:	ja     0x40357f
  403579:	cmp    BYTE PTR [rbx+0x1],0x3a
  40357d:	je     0x4035c0
  40357f:	call   0x405510
  403584:	xor    r8d,r8d
  403587:	xor    edx,edx
  403589:	cmp    rax,0x1
  40358d:	jbe    0x4035ba
  40358f:	movzx  ecx,BYTE PTR [rbx+rax*1-0x1]
  403594:	lea    r9,[rax-0x1]
  403598:	cmp    cl,0x5c
  40359b:	je     0x4035e4
  40359d:	cmp    cl,0x2f
  4035a0:	je     0x4035e4
  4035a2:	cmp    rax,rdx
  4035a5:	jne    0x4035ba
  4035a7:	test   r8b,r8b
  4035aa:	je     0x4035ba
  4035ac:	movzx  ecx,BYTE PTR [rbx+rdx*1]
  4035b0:	cmp    cl,0x5c
  4035b3:	je     0x4035f0
  4035b5:	cmp    cl,0x2f
  4035b8:	je     0x4035f0
  4035ba:	add    rsp,0x20
  4035be:	pop    rbx
  4035bf:	ret    
  4035c0:	call   0x405510
  4035c5:	cmp    rax,0x1
  4035c9:	jbe    0x4035ba
  4035cb:	movzx  ecx,BYTE PTR [rbx+rax*1-0x1]
  4035d0:	mov    r8d,0x1
  4035d6:	mov    edx,0x2
  4035db:	lea    r9,[rax-0x1]
  4035df:	cmp    cl,0x5c
  4035e2:	jne    0x40359d
  4035e4:	cmp    r9,0x1
  4035e8:	mov    rax,r9
  4035eb:	jne    0x40358f
  4035ed:	jmp    0x4035a2
  4035ef:	nop
  4035f0:	lea    rax,[rdx+0x1]
  4035f4:	add    rsp,0x20
  4035f8:	pop    rbx
  4035f9:	ret    
  4035fa:	nop
  4035fb:	nop
  4035fc:	nop
  4035fd:	nop
  4035fe:	nop
  4035ff:	nop
  403600:	jmp    QWORD PTR [rip+0xa286]        # 0x40d88c
  403606:	nop
  403607:	nop
  403608:	nop    DWORD PTR [rax+rax*1+0x0]
  403610:	jmp    QWORD PTR [rip+0xa25e]        # 0x40d874
  403616:	nop
  403617:	nop
  403618:	nop    DWORD PTR [rax+rax*1+0x0]
  403620:	jmp    QWORD PTR [rip+0xa03e]        # 0x40d664
  403626:	nop
  403627:	nop
  403628:	jmp    QWORD PTR [rip+0xa006]        # 0x40d634
  40362e:	nop
  40362f:	nop
  403630:	jmp    QWORD PTR [rip+0x9ff6]        # 0x40d62c
  403636:	nop
  403637:	nop
  403638:	jmp    QWORD PTR [rip+0x9f9e]        # 0x40d5dc
  40363e:	nop
  40363f:	nop
  403640:	jmp    QWORD PTR [rip+0x9f8e]        # 0x40d5d4
  403646:	nop
  403647:	nop
  403648:	jmp    QWORD PTR [rip+0x9f7e]        # 0x40d5cc
  40364e:	nop
  40364f:	nop
  403650:	jmp    QWORD PTR [rip+0x9f66]        # 0x40d5bc
  403656:	nop
  403657:	nop
  403658:	jmp    QWORD PTR [rip+0x9f56]        # 0x40d5b4
  40365e:	nop
  40365f:	nop
  403660:	jmp    QWORD PTR [rip+0x9f26]        # 0x40d58c
  403666:	nop
  403667:	nop
  403668:	nop    DWORD PTR [rax+rax*1+0x0]
  403670:	jmp    QWORD PTR [rip+0x9ef6]        # 0x40d56c
  403676:	nop
  403677:	nop
  403678:	jmp    QWORD PTR [rip+0x9ee6]        # 0x40d564
  40367e:	nop
  40367f:	nop
  403680:	jmp    QWORD PTR [rip+0x9ed6]        # 0x40d55c
  403686:	nop
  403687:	nop
  403688:	jmp    QWORD PTR [rip+0x9ec6]        # 0x40d554
  40368e:	nop
  40368f:	nop
  403690:	jmp    QWORD PTR [rip+0x9eb6]        # 0x40d54c
  403696:	nop
  403697:	nop
  403698:	jmp    QWORD PTR [rip+0x9ea6]        # 0x40d544
  40369e:	nop
  40369f:	nop
  4036a0:	jmp    QWORD PTR [rip+0x9e96]        # 0x40d53c
  4036a6:	nop
  4036a7:	nop
  4036a8:	jmp    QWORD PTR [rip+0x9e86]        # 0x40d534
  4036ae:	nop
  4036af:	nop
  4036b0:	jmp    QWORD PTR [rip+0x9e6e]        # 0x40d524
  4036b6:	nop
  4036b7:	nop
  4036b8:	jmp    QWORD PTR [rip+0x9e5e]        # 0x40d51c
  4036be:	nop
  4036bf:	nop
  4036c0:	jmp    QWORD PTR [rip+0x9e4e]        # 0x40d514
  4036c6:	nop
  4036c7:	nop
  4036c8:	jmp    QWORD PTR [rip+0x9e3e]        # 0x40d50c
  4036ce:	nop
  4036cf:	nop
  4036d0:	jmp    QWORD PTR [rip+0x9e2e]        # 0x40d504
  4036d6:	nop
  4036d7:	nop
  4036d8:	jmp    QWORD PTR [rip+0x9e1e]        # 0x40d4fc
  4036de:	nop
  4036df:	nop
  4036e0:	jmp    QWORD PTR [rip+0x9e0e]        # 0x40d4f4
  4036e6:	nop
  4036e7:	nop
  4036e8:	jmp    QWORD PTR [rip+0x9dfe]        # 0x40d4ec
  4036ee:	nop
  4036ef:	nop
  4036f0:	jmp    QWORD PTR [rip+0x9dee]        # 0x40d4e4
  4036f6:	nop
  4036f7:	nop
  4036f8:	jmp    QWORD PTR [rip+0x9dde]        # 0x40d4dc
  4036fe:	nop
  4036ff:	nop
  403700:	jmp    QWORD PTR [rip+0x9dce]        # 0x40d4d4
  403706:	nop
  403707:	nop
  403708:	jmp    QWORD PTR [rip+0x9dbe]        # 0x40d4cc
  40370e:	nop
  40370f:	nop
  403710:	jmp    QWORD PTR [rip+0x9dae]        # 0x40d4c4
  403716:	nop
  403717:	nop
  403718:	jmp    QWORD PTR [rip+0x9d9e]        # 0x40d4bc
  40371e:	nop
  40371f:	nop
  403720:	jmp    QWORD PTR [rip+0x9d8e]        # 0x40d4b4
  403726:	nop
  403727:	nop
  403728:	jmp    QWORD PTR [rip+0x9d7e]        # 0x40d4ac
  40372e:	nop
  40372f:	nop
  403730:	jmp    QWORD PTR [rip+0x9d6e]        # 0x40d4a4
  403736:	nop
  403737:	nop
  403738:	nop    DWORD PTR [rax+rax*1+0x0]
  403740:	push   rbx
  403741:	sub    rsp,0x30
  403745:	mov    rbx,rcx
  403748:	mov    rcx,QWORD PTR [rip+0x8301]        # 0x40ba50
  40374f:	call   0x403cf0
  403754:	cmp    rax,0xffffffffffffffff
  403758:	mov    QWORD PTR [rsp+0x20],rax
  40375d:	je     0x4037d5
  40375f:	mov    ecx,0x8
  403764:	call   0x4055e0
  403769:	mov    rcx,QWORD PTR [rip+0x82e0]        # 0x40ba50
  403770:	call   0x403cf0
  403775:	mov    rcx,QWORD PTR [rip+0x82dc]        # 0x40ba58
  40377c:	mov    QWORD PTR [rsp+0x20],rax
  403781:	call   0x403cf0
  403786:	lea    rdx,[rsp+0x20]
  40378b:	lea    r8,[rsp+0x28]
  403790:	mov    rcx,rbx
  403793:	mov    QWORD PTR [rsp+0x28],rax
  403798:	call   0x405668
  40379d:	mov    rcx,QWORD PTR [rsp+0x20]
  4037a2:	mov    rbx,rax
  4037a5:	call   0x403d00
  4037aa:	mov    rcx,QWORD PTR [rsp+0x28]
  4037af:	mov    QWORD PTR [rip+0x829a],rax        # 0x40ba50
  4037b6:	call   0x403d00
  4037bb:	mov    ecx,0x8
  4037c0:	mov    QWORD PTR [rip+0x8291],rax        # 0x40ba58
  4037c7:	call   0x4055b8
  4037cc:	mov    rax,rbx
  4037cf:	add    rsp,0x30
  4037d3:	pop    rbx
  4037d4:	ret    
  4037d5:	mov    rax,QWORD PTR [rip+0x4f74]        # 0x408750
  4037dc:	mov    rcx,rbx
  4037df:	call   QWORD PTR [rax]
  4037e1:	add    rsp,0x30
  4037e5:	pop    rbx
  4037e6:	ret    
  4037e7:	nop    WORD PTR [rax+rax*1+0x0]
  4037f0:	sub    rsp,0x28
  4037f4:	call   0x403740
  4037f9:	test   rax,rax
  4037fc:	sete   al
  4037ff:	movzx  eax,al
  403802:	neg    eax
  403804:	add    rsp,0x28
  403808:	ret    
  403809:	nop
  40380a:	nop
  40380b:	nop
  40380c:	nop
  40380d:	nop
  40380e:	nop
  40380f:	nop
  403810:	sub    rsp,0x28
  403814:	mov    rax,QWORD PTR [rip+0x3825]        # 0x407040
  40381b:	mov    rax,QWORD PTR [rax]
  40381e:	test   rax,rax
  403821:	je     0x403840
  403823:	call   rax
  403825:	mov    rax,QWORD PTR [rip+0x3814]        # 0x407040
  40382c:	lea    rdx,[rax+0x8]
  403830:	mov    rax,QWORD PTR [rax+0x8]
  403834:	mov    QWORD PTR [rip+0x3805],rdx        # 0x407040
  40383b:	test   rax,rax
  40383e:	jne    0x403823
  403840:	add    rsp,0x28
  403844:	ret    
  403845:	nop
  403846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403850:	push   rsi
  403851:	push   rbx
  403852:	sub    rsp,0x28
  403856:	mov    rsi,QWORD PTR [rip+0x4e73]        # 0x4086d0
  40385d:	mov    rax,QWORD PTR [rsi]
  403860:	cmp    eax,0xffffffff
  403863:	mov    ebx,eax
  403865:	je     0x403890
  403867:	test   ebx,ebx
  403869:	je     0x40387a
  40386b:	nop    DWORD PTR [rax+rax*1+0x0]
  403870:	mov    eax,ebx
  403872:	call   QWORD PTR [rsi+rax*8]
  403875:	sub    ebx,0x1
  403878:	jne    0x403870
  40387a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x403810
  403881:	add    rsp,0x28
  403885:	pop    rbx
  403886:	pop    rsi
  403887:	jmp    0x4037f0
  40388c:	nop    DWORD PTR [rax+0x0]
  403890:	xor    ebx,ebx
  403892:	jmp    0x403896
  403894:	mov    ebx,eax
  403896:	lea    edx,[rbx+0x1]
  403899:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40389e:	mov    rax,rdx
  4038a1:	jne    0x403894
  4038a3:	jmp    0x403867
  4038a5:	nop
  4038a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038b0:	mov    eax,DWORD PTR [rip+0x77ca]        # 0x40b080
  4038b6:	test   eax,eax
  4038b8:	je     0x4038c0
  4038ba:	repz ret 
  4038bc:	nop    DWORD PTR [rax+0x0]
  4038c0:	mov    DWORD PTR [rip+0x77b6],0x1        # 0x40b080
  4038ca:	jmp    0x403850
  4038cc:	nop
  4038cd:	nop
  4038ce:	nop
  4038cf:	nop
  4038d0:	mov    rax,QWORD PTR [rip+0x9dbd]        # 0x40d694
  4038d7:	rex.W jmp rax
  4038da:	nop
  4038db:	nop
  4038dc:	nop
  4038dd:	nop
  4038de:	nop
  4038df:	nop
  4038e0:	xor    eax,eax
  4038e2:	ret    
  4038e3:	nop
  4038e4:	nop
  4038e5:	nop
  4038e6:	nop
  4038e7:	nop
  4038e8:	nop
  4038e9:	nop
  4038ea:	nop
  4038eb:	nop
  4038ec:	nop
  4038ed:	nop
  4038ee:	nop
  4038ef:	nop
  4038f0:	push   r12
  4038f2:	push   rbp
  4038f3:	push   rdi
  4038f4:	push   rsi
  4038f5:	push   rbx
  4038f6:	sub    rsp,0x40
  4038fa:	mov    rbx,QWORD PTR [rip+0x379f]        # 0x4070a0
  403901:	movabs rax,0x2b992ddfa232
  40390b:	mov    QWORD PTR [rsp+0x20],0x0
  403914:	cmp    rbx,rax
  403917:	je     0x403930
  403919:	not    rbx
  40391c:	mov    QWORD PTR [rip+0x378d],rbx        # 0x4070b0
  403923:	add    rsp,0x40
  403927:	pop    rbx
  403928:	pop    rsi
  403929:	pop    rdi
  40392a:	pop    rbp
  40392b:	pop    r12
  40392d:	ret    
  40392e:	xchg   ax,ax
  403930:	lea    rcx,[rsp+0x20]
  403935:	call   QWORD PTR [rip+0x9ca9]        # 0x40d5e4
  40393b:	mov    r12,QWORD PTR [rsp+0x20]
  403940:	call   QWORD PTR [rip+0x9c56]        # 0x40d59c
  403946:	mov    ebp,eax
  403948:	call   QWORD PTR [rip+0x9c56]        # 0x40d5a4
  40394e:	mov    edi,eax
  403950:	call   QWORD PTR [rip+0x9c96]        # 0x40d5ec
  403956:	lea    rcx,[rsp+0x30]
  40395b:	mov    esi,eax
  40395d:	call   QWORD PTR [rip+0x9ca1]        # 0x40d604
  403963:	xor    r12,QWORD PTR [rsp+0x30]
  403968:	mov    edx,edi
  40396a:	movabs rax,0xffffffffffff
  403974:	xor    rbp,r12
  403977:	mov    rdi,rbp
  40397a:	xor    rdi,rdx
  40397d:	mov    edx,esi
  40397f:	xor    rdi,rdx
  403982:	mov    rsi,rdi
  403985:	and    rsi,rax
  403988:	cmp    rsi,rbx
  40398b:	je     0x4039b0
  40398d:	mov    rax,rsi
  403990:	not    rax
  403993:	mov    QWORD PTR [rip+0x3706],rsi        # 0x4070a0
  40399a:	mov    QWORD PTR [rip+0x370f],rax        # 0x4070b0
  4039a1:	add    rsp,0x40
  4039a5:	pop    rbx
  4039a6:	pop    rsi
  4039a7:	pop    rdi
  4039a8:	pop    rbp
  4039a9:	pop    r12
  4039ab:	ret    
  4039ac:	nop    DWORD PTR [rax+0x0]
  4039b0:	movabs rax,0xffffd466d2205dcc
  4039ba:	movabs rsi,0x2b992ddfa233
  4039c4:	jmp    0x403993
  4039c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039d0:	push   rbp
  4039d1:	push   rsi
  4039d2:	push   rbx
  4039d3:	mov    rbp,rsp
  4039d6:	sub    rsp,0x70
  4039da:	mov    rsi,rcx
  4039dd:	lea    rcx,[rip+0x76dc]        # 0x40b0c0
  4039e4:	call   QWORD PTR [rip+0x9c2a]        # 0x40d614
  4039ea:	mov    rbx,QWORD PTR [rip+0x77c7]        # 0x40b1b8
  4039f1:	xor    r8d,r8d
  4039f4:	lea    rdx,[rbp-0x28]
  4039f8:	mov    rcx,rbx
  4039fb:	call   QWORD PTR [rip+0x9c1b]        # 0x40d61c
  403a01:	test   rax,rax
  403a04:	mov    r9,rax
  403a07:	je     0x403ab0
  403a0d:	lea    rax,[rbp-0x20]
  403a11:	mov    QWORD PTR [rsp+0x38],0x0
  403a1a:	mov    r8,rbx
  403a1d:	mov    rdx,QWORD PTR [rbp-0x28]
  403a21:	xor    ecx,ecx
  403a23:	mov    QWORD PTR [rsp+0x30],rax
  403a28:	lea    rax,[rbp-0x18]
  403a2c:	mov    QWORD PTR [rsp+0x28],rax
  403a31:	lea    rax,[rip+0x7688]        # 0x40b0c0
  403a38:	mov    QWORD PTR [rsp+0x20],rax
  403a3d:	call   QWORD PTR [rip+0x9be1]        # 0x40d624
  403a43:	mov    rax,QWORD PTR [rip+0x776e]        # 0x40b1b8
  403a4a:	xor    ecx,ecx
  403a4c:	mov    QWORD PTR [rip+0x76ed],rsi        # 0x40b140
  403a53:	mov    DWORD PTR [rip+0x7b63],0xc0000409        # 0x40b5c0
  403a5d:	mov    DWORD PTR [rip+0x7b5d],0x1        # 0x40b5c4
  403a67:	mov    QWORD PTR [rip+0x7b62],rax        # 0x40b5d0
  403a6e:	mov    rax,QWORD PTR [rip+0x362b]        # 0x4070a0
  403a75:	mov    QWORD PTR [rbp-0x10],rax
  403a79:	mov    rax,QWORD PTR [rip+0x3630]        # 0x4070b0
  403a80:	mov    QWORD PTR [rbp-0x8],rax
  403a84:	call   QWORD PTR [rip+0x9ba2]        # 0x40d62c
  403a8a:	lea    rcx,[rip+0x489f]        # 0x408330
  403a91:	call   QWORD PTR [rip+0x9bb5]        # 0x40d64c
  403a97:	call   QWORD PTR [rip+0x9af7]        # 0x40d594
  403a9d:	mov    edx,0xc0000409
  403aa2:	mov    rcx,rax
  403aa5:	call   QWORD PTR [rip+0x9b91]        # 0x40d63c
  403aab:	call   0x4055b0
  403ab0:	mov    rax,QWORD PTR [rbp+0x18]
  403ab4:	mov    QWORD PTR [rip+0x76fd],rax        # 0x40b1b8
  403abb:	lea    rax,[rbp+0x8]
  403abf:	mov    QWORD PTR [rip+0x7692],rax        # 0x40b158
  403ac6:	jmp    0x403a43
  403acb:	nop
  403acc:	nop
  403acd:	nop
  403ace:	nop
  403acf:	nop
  403ad0:	sub    rsp,0x28
  403ad4:	test   edx,edx
  403ad6:	je     0x403af0
  403ad8:	cmp    edx,0x3
  403adb:	je     0x403af0
  403add:	mov    eax,0x1
  403ae2:	add    rsp,0x28
  403ae6:	ret    
  403ae7:	nop    WORD PTR [rax+rax*1+0x0]
  403af0:	call   0x4047e0
  403af5:	mov    eax,0x1
  403afa:	add    rsp,0x28
  403afe:	ret    
  403aff:	nop
  403b00:	push   rsi
  403b01:	push   rbx
  403b02:	sub    rsp,0x28
  403b06:	mov    rax,QWORD PTR [rip+0x4b93]        # 0x4086a0
  403b0d:	cmp    DWORD PTR [rax],0x2
  403b10:	je     0x403b18
  403b12:	mov    DWORD PTR [rax],0x2
  403b18:	cmp    edx,0x2
  403b1b:	je     0x403b30
  403b1d:	cmp    edx,0x1
  403b20:	je     0x403b62
  403b22:	mov    eax,0x1
  403b27:	add    rsp,0x28
  403b2b:	pop    rbx
  403b2c:	pop    rsi
  403b2d:	ret    
  403b2e:	xchg   ax,ax
  403b30:	lea    rbx,[rip+0xb529]        # 0x40f060
  403b37:	lea    rsi,[rip+0xb522]        # 0x40f060
  403b3e:	cmp    rbx,rsi
  403b41:	je     0x403b22
  403b43:	mov    rax,QWORD PTR [rbx]
  403b46:	test   rax,rax
  403b49:	je     0x403b4d
  403b4b:	call   rax
  403b4d:	add    rbx,0x8
  403b51:	cmp    rbx,rsi
  403b54:	jne    0x403b43
  403b56:	mov    eax,0x1
  403b5b:	add    rsp,0x28
  403b5f:	pop    rbx
  403b60:	pop    rsi
  403b61:	ret    
  403b62:	call   0x4047e0
  403b67:	jmp    0x403b22
  403b69:	nop    DWORD PTR [rax+0x0]
  403b70:	xor    eax,eax
  403b72:	ret    
  403b73:	nop
  403b74:	nop
  403b75:	nop
  403b76:	nop
  403b77:	nop
  403b78:	nop
  403b79:	nop
  403b7a:	nop
  403b7b:	nop
  403b7c:	nop
  403b7d:	nop
  403b7e:	nop
  403b7f:	nop
  403b80:	sub    rsp,0x58
  403b84:	mov    rax,QWORD PTR [rip+0x7b15]        # 0x40b6a0
  403b8b:	test   rax,rax
  403b8e:	je     0x403bbc
  403b90:	movsd  xmm0,QWORD PTR [rsp+0x80]
  403b99:	mov    DWORD PTR [rsp+0x20],ecx
  403b9d:	lea    rcx,[rsp+0x20]
  403ba2:	mov    QWORD PTR [rsp+0x28],rdx
  403ba7:	movsd  QWORD PTR [rsp+0x30],xmm2
  403bad:	movsd  QWORD PTR [rsp+0x38],xmm3
  403bb3:	movsd  QWORD PTR [rsp+0x40],xmm0
  403bb9:	call   rax
  403bbb:	nop
  403bbc:	add    rsp,0x58
  403bc0:	ret    
  403bc1:	nop    DWORD PTR [rax+rax*1+0x0]
  403bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bd0:	mov    QWORD PTR [rip+0x7ac9],rcx        # 0x40b6a0
  403bd7:	jmp    0x405640
  403bdc:	nop    DWORD PTR [rax+0x0]
  403be0:	push   rsi
  403be1:	push   rbx
  403be2:	sub    rsp,0x78
  403be6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  403beb:	movaps XMMWORD PTR [rsp+0x50],xmm7
  403bf0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  403bf6:	cmp    DWORD PTR [rcx],0x6
  403bf9:	ja     0x403cd0
  403bff:	mov    edx,DWORD PTR [rcx]
  403c01:	lea    rax,[rip+0x486c]        # 0x408474
  403c08:	movsxd rdx,DWORD PTR [rax+rdx*4]
  403c0c:	add    rax,rdx
  403c0f:	jmp    rax
  403c11:	lea    rbx,[rip+0x4738]        # 0x408350
  403c18:	nop    DWORD PTR [rax+rax*1+0x0]
  403c20:	movsd  xmm8,QWORD PTR [rcx+0x20]
  403c26:	mov    rsi,QWORD PTR [rcx+0x8]
  403c2a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  403c2f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  403c34:	call   0x405658
  403c39:	movsd  QWORD PTR [rsp+0x30],xmm8
  403c40:	lea    rcx,[rax+0x60]
  403c44:	lea    rdx,[rip+0x47fd]        # 0x408448
  403c4b:	movsd  QWORD PTR [rsp+0x28],xmm7
  403c51:	mov    r9,rsi
  403c54:	mov    r8,rbx
  403c57:	movsd  QWORD PTR [rsp+0x20],xmm6
  403c5d:	call   0x405598
  403c62:	nop
  403c63:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  403c68:	xor    eax,eax
  403c6a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  403c6f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  403c75:	add    rsp,0x78
  403c79:	pop    rbx
  403c7a:	pop    rsi
  403c7b:	ret    
  403c7c:	nop    DWORD PTR [rax+0x0]
  403c80:	lea    rbx,[rip+0x46e8]        # 0x40836f
  403c87:	jmp    0x403c20
  403c89:	nop    DWORD PTR [rax+0x0]
  403c90:	lea    rbx,[rip+0x46f9]        # 0x408390
  403c97:	jmp    0x403c20
  403c99:	nop    DWORD PTR [rax+0x0]
  403ca0:	lea    rbx,[rip+0x4759]        # 0x408400
  403ca7:	jmp    0x403c20
  403cac:	nop    DWORD PTR [rax+0x0]
  403cb0:	lea    rbx,[rip+0x4721]        # 0x4083d8
  403cb7:	jmp    0x403c20
  403cbc:	nop    DWORD PTR [rax+0x0]
  403cc0:	lea    rbx,[rip+0x46e9]        # 0x4083b0
  403cc7:	jmp    0x403c20
  403ccc:	nop    DWORD PTR [rax+0x0]
  403cd0:	lea    rbx,[rip+0x475f]        # 0x408436
  403cd7:	jmp    0x403c20
  403cdc:	nop
  403cdd:	nop
  403cde:	nop
  403cdf:	nop
  403ce0:	fninit 
  403ce2:	ret    
  403ce3:	nop
  403ce4:	nop
  403ce5:	nop
  403ce6:	nop
  403ce7:	nop
  403ce8:	nop
  403ce9:	nop
  403cea:	nop
  403ceb:	nop
  403cec:	nop
  403ced:	nop
  403cee:	nop
  403cef:	nop
  403cf0:	mov    rax,rcx
  403cf3:	ret    
  403cf4:	xchg   ax,ax
  403cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d00:	mov    rax,rcx
  403d03:	ret    
  403d04:	nop
  403d05:	nop
  403d06:	nop
  403d07:	nop
  403d08:	nop
  403d09:	nop
  403d0a:	nop
  403d0b:	nop
  403d0c:	nop
  403d0d:	nop
  403d0e:	nop
  403d0f:	nop
  403d10:	push   rsi
  403d11:	push   rbx
  403d12:	sub    rsp,0x38
  403d16:	lea    rax,[rsp+0x58]
  403d1b:	mov    rbx,rcx
  403d1e:	mov    QWORD PTR [rsp+0x58],rdx
  403d23:	mov    QWORD PTR [rsp+0x60],r8
  403d28:	mov    QWORD PTR [rsp+0x68],r9
  403d2d:	mov    QWORD PTR [rsp+0x28],rax
  403d32:	call   0x405658
  403d37:	lea    rcx,[rip+0x4752]        # 0x408490
  403d3e:	lea    r9,[rax+0x60]
  403d42:	mov    r8d,0x1b
  403d48:	mov    edx,0x1
  403d4d:	call   0x405580
  403d52:	mov    rsi,QWORD PTR [rsp+0x28]
  403d57:	call   0x405658
  403d5c:	lea    rcx,[rax+0x60]
  403d60:	mov    rdx,rbx
  403d63:	mov    r8,rsi
  403d66:	call   0x4054f0
  403d6b:	call   0x4055b0
  403d70:	nop
  403d71:	nop    DWORD PTR [rax+rax*1+0x0]
  403d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d80:	push   r13
  403d82:	push   r12
  403d84:	push   rbp
  403d85:	push   rdi
  403d86:	push   rsi
  403d87:	push   rbx
  403d88:	sub    rsp,0x58
  403d8c:	movsxd rbp,DWORD PTR [rip+0x7931]        # 0x40b6c4
  403d93:	mov    rbx,rcx
  403d96:	mov    rsi,rdx
  403d99:	mov    rdi,r8
  403d9c:	test   ebp,ebp
  403d9e:	jle    0x403e9a
  403da4:	mov    rax,QWORD PTR [rip+0x791d]        # 0x40b6c8
  403dab:	xor    r9d,r9d
  403dae:	add    rax,0x8
  403db2:	mov    r10,QWORD PTR [rax]
  403db5:	cmp    rbx,r10
  403db8:	jb     0x403dce
  403dba:	mov    rdx,QWORD PTR [rax+0x8]
  403dbe:	mov    r11d,DWORD PTR [rdx+0x8]
  403dc2:	add    r10,r11
  403dc5:	cmp    rbx,r10
  403dc8:	jb     0x403e80
  403dce:	add    r9d,0x1
  403dd2:	add    rax,0x18
  403dd6:	cmp    r9d,ebp
  403dd9:	jne    0x403db2
  403ddb:	mov    rcx,rbx
  403dde:	call   0x4049f0
  403de3:	test   rax,rax
  403de6:	mov    r12,rax
  403de9:	je     0x403ed2
  403def:	lea    rbp,[rbp+rbp*2+0x0]
  403df4:	shl    rbp,0x3
  403df8:	mov    r13,rbp
  403dfb:	add    r13,QWORD PTR [rip+0x78c6]        # 0x40b6c8
  403e02:	mov    QWORD PTR [r13+0x10],rax
  403e06:	mov    DWORD PTR [r13+0x0],0x0
  403e0e:	call   0x404b10
  403e13:	mov    edx,DWORD PTR [r12+0xc]
  403e18:	mov    r8d,0x30
  403e1e:	add    rax,rdx
  403e21:	lea    rdx,[rsp+0x20]
  403e26:	mov    QWORD PTR [r13+0x8],rax
  403e2a:	mov    rax,QWORD PTR [rip+0x7897]        # 0x40b6c8
  403e31:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  403e36:	call   QWORD PTR [rip+0x9820]        # 0x40d65c
  403e3c:	test   rax,rax
  403e3f:	je     0x403eb5
  403e41:	mov    eax,DWORD PTR [rsp+0x44]
  403e45:	lea    edx,[rax-0x4]
  403e48:	and    edx,0xfffffffb
  403e4b:	je     0x403e79
  403e4d:	sub    eax,0x40
  403e50:	and    eax,0xffffffbf
  403e53:	je     0x403e79
  403e55:	mov    r9,rbp
  403e58:	add    r9,QWORD PTR [rip+0x7869]        # 0x40b6c8
  403e5f:	mov    r8d,0x40
  403e65:	mov    rdx,QWORD PTR [rsp+0x38]
  403e6a:	mov    rcx,QWORD PTR [rsp+0x20]
  403e6f:	call   QWORD PTR [rip+0x97df]        # 0x40d654
  403e75:	test   eax,eax
  403e77:	je     0x403ea1
  403e79:	add    DWORD PTR [rip+0x7844],0x1        # 0x40b6c4
  403e80:	mov    r8,rdi
  403e83:	mov    rdx,rsi
  403e86:	mov    rcx,rbx
  403e89:	add    rsp,0x58
  403e8d:	pop    rbx
  403e8e:	pop    rsi
  403e8f:	pop    rdi
  403e90:	pop    rbp
  403e91:	pop    r12
  403e93:	pop    r13
  403e95:	jmp    0x405560
  403e9a:	xor    ebp,ebp
  403e9c:	jmp    0x403ddb
  403ea1:	call   QWORD PTR [rip+0x970d]        # 0x40d5b4
  403ea7:	lea    rcx,[rip+0x465a]        # 0x408508
  403eae:	mov    edx,eax
  403eb0:	call   0x403d10
  403eb5:	mov    rax,QWORD PTR [rip+0x780c]        # 0x40b6c8
  403ebc:	mov    edx,DWORD PTR [r12+0x8]
  403ec1:	lea    rcx,[rip+0x4608]        # 0x4084d0
  403ec8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  403ecd:	call   0x403d10
  403ed2:	lea    rcx,[rip+0x45d7]        # 0x4084b0
  403ed9:	mov    rdx,rbx
  403edc:	call   0x403d10
  403ee1:	nop
  403ee2:	nop    DWORD PTR [rax+0x0]
  403ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ef0:	push   rbp
  403ef1:	push   r14
  403ef3:	push   r13
  403ef5:	push   r12
  403ef7:	push   rdi
  403ef8:	push   rsi
  403ef9:	push   rbx
  403efa:	mov    rbp,rsp
  403efd:	sub    rsp,0x60
  403f01:	mov    ebx,DWORD PTR [rip+0x77b9]        # 0x40b6c0
  403f07:	test   ebx,ebx
  403f09:	je     0x403f20
  403f0b:	mov    rsp,rbp
  403f0e:	pop    rbx
  403f0f:	pop    rsi
  403f10:	pop    rdi
  403f11:	pop    r12
  403f13:	pop    r13
  403f15:	pop    r14
  403f17:	pop    rbp
  403f18:	ret    
  403f19:	nop    DWORD PTR [rax+0x0]
  403f20:	mov    DWORD PTR [rip+0x7796],0x1        # 0x40b6c0
  403f2a:	call   0x404a40
  403f2f:	cdqe   
  403f31:	lea    rax,[rax+rax*2]
  403f35:	lea    rax,[rax*8+0x1e]
  403f3d:	and    rax,0xfffffffffffffff0
  403f41:	call   0x404c70
  403f46:	mov    rsi,QWORD PTR [rip+0x4793]        # 0x4086e0
  403f4d:	mov    rbx,QWORD PTR [rip+0x479c]        # 0x4086f0
  403f54:	sub    rsp,rax
  403f57:	mov    DWORD PTR [rip+0x7763],0x0        # 0x40b6c4
  403f61:	lea    rax,[rsp+0x20]
  403f66:	mov    QWORD PTR [rip+0x775b],rax        # 0x40b6c8
  403f6d:	mov    rax,rsi
  403f70:	sub    rax,rbx
  403f73:	cmp    rax,0x7
  403f77:	jle    0x403f0b
  403f79:	cmp    rax,0xb
  403f7d:	jle    0x403fa5
  403f7f:	mov    r11d,DWORD PTR [rbx]
  403f82:	test   r11d,r11d
  403f85:	jne    0x4040d0
  403f8b:	mov    r10d,DWORD PTR [rbx+0x4]
  403f8f:	test   r10d,r10d
  403f92:	jne    0x4040d0
  403f98:	mov    r9d,DWORD PTR [rbx+0x8]
  403f9c:	test   r9d,r9d
  403f9f:	jne    0x403fbc
  403fa1:	add    rbx,0xc
  403fa5:	mov    r8d,DWORD PTR [rbx]
  403fa8:	test   r8d,r8d
  403fab:	jne    0x4040d0
  403fb1:	mov    ecx,DWORD PTR [rbx+0x4]
  403fb4:	test   ecx,ecx
  403fb6:	jne    0x4040d0
  403fbc:	mov    edx,DWORD PTR [rbx+0x8]
  403fbf:	cmp    edx,0x1
  403fc2:	jne    0x4041dc
  403fc8:	add    rbx,0xc
  403fcc:	cmp    rbx,rsi
  403fcf:	jae    0x403f0b
  403fd5:	mov    r12,QWORD PTR [rip+0x4734]        # 0x408710
  403fdc:	lea    r13,[rbp-0x30]
  403fe0:	movabs r14,0xffffffff00000000
  403fea:	mov    ecx,DWORD PTR [rbx+0x4]
  403fed:	mov    eax,DWORD PTR [rbx]
  403fef:	movzx  edx,BYTE PTR [rbx+0x8]
  403ff3:	add    rax,r12
  403ff6:	add    rcx,r12
  403ff9:	cmp    edx,0x10
  403ffc:	mov    r8,QWORD PTR [rax]
  403fff:	je     0x404146
  404005:	jbe    0x40410d
  40400b:	cmp    edx,0x20
  40400e:	je     0x40418f
  404014:	cmp    edx,0x40
  404017:	jne    0x40417b
  40401d:	sub    r8,rax
  404020:	mov    rdx,r13
  404023:	mov    rdi,r13
  404026:	mov    rax,r8
  404029:	add    rax,QWORD PTR [rcx]
  40402c:	mov    r8d,0x8
  404032:	mov    QWORD PTR [rbp-0x30],rax
  404036:	call   0x403d80
  40403b:	add    rbx,0xc
  40403f:	cmp    rbx,rsi
  404042:	jb     0x403fea
  404044:	mov    eax,DWORD PTR [rip+0x767a]        # 0x40b6c4
  40404a:	xor    ebx,ebx
  40404c:	xor    esi,esi
  40404e:	test   eax,eax
  404050:	jle    0x403f0b
  404056:	mov    r14,QWORD PTR [rip+0x95ff]        # 0x40d65c
  40405d:	lea    r13,[rbp-0x34]
  404061:	mov    r12,QWORD PTR [rip+0x95ec]        # 0x40d654
  404068:	jmp    0x404083
  40406a:	nop    WORD PTR [rax+rax*1+0x0]
  404070:	add    esi,0x1
  404073:	add    rbx,0x18
  404077:	cmp    esi,DWORD PTR [rip+0x7647]        # 0x40b6c4
  40407d:	jge    0x403f0b
  404083:	mov    rax,rbx
  404086:	add    rax,QWORD PTR [rip+0x763b]        # 0x40b6c8
  40408d:	mov    edx,DWORD PTR [rax]
  40408f:	test   edx,edx
  404091:	je     0x404070
  404093:	mov    rcx,QWORD PTR [rax+0x8]
  404097:	mov    r8d,0x30
  40409d:	mov    rdx,rdi
  4040a0:	call   r14
  4040a3:	test   rax,rax
  4040a6:	je     0x4041be
  4040ac:	mov    rax,QWORD PTR [rip+0x7615]        # 0x40b6c8
  4040b3:	mov    r9,r13
  4040b6:	mov    rdx,QWORD PTR [rbp-0x18]
  4040ba:	mov    rcx,QWORD PTR [rbp-0x30]
  4040be:	mov    r8d,DWORD PTR [rax+rbx*1]
  4040c2:	call   r12
  4040c5:	jmp    0x404070
  4040c7:	nop    WORD PTR [rax+rax*1+0x0]
  4040d0:	cmp    rbx,rsi
  4040d3:	jae    0x403f0b
  4040d9:	mov    r12,QWORD PTR [rip+0x4630]        # 0x408710
  4040e0:	lea    rdi,[rbp-0x30]
  4040e4:	mov    ecx,DWORD PTR [rbx+0x4]
  4040e7:	mov    eax,DWORD PTR [rbx]
  4040e9:	mov    r8d,0x4
  4040ef:	mov    rdx,rdi
  4040f2:	add    rbx,0x8
  4040f6:	add    rcx,r12
  4040f9:	add    eax,DWORD PTR [rcx]
  4040fb:	mov    DWORD PTR [rbp-0x30],eax
  4040fe:	call   0x403d80
  404103:	cmp    rbx,rsi
  404106:	jb     0x4040e4
  404108:	jmp    0x404044
  40410d:	cmp    edx,0x8
  404110:	jne    0x40417b
  404112:	movzx  edx,BYTE PTR [rcx]
  404115:	mov    rdi,r13
  404118:	mov    r10,rdx
  40411b:	or     r10,0xffffffffffffff00
  404122:	test   dl,dl
  404124:	cmovs  rdx,r10
  404128:	sub    rdx,rax
  40412b:	lea    rax,[r8+rdx*1]
  40412f:	mov    r8d,0x1
  404135:	mov    rdx,r13
  404138:	mov    QWORD PTR [rbp-0x30],rax
  40413c:	call   0x403d80
  404141:	jmp    0x40403b
  404146:	movzx  edx,WORD PTR [rcx]
  404149:	mov    rdi,r13
  40414c:	mov    r10,rdx
  40414f:	or     r10,0xffffffffffff0000
  404156:	test   dx,dx
  404159:	cmovs  rdx,r10
  40415d:	sub    rdx,rax
  404160:	lea    rax,[r8+rdx*1]
  404164:	mov    r8d,0x2
  40416a:	mov    rdx,r13
  40416d:	mov    QWORD PTR [rbp-0x30],rax
  404171:	call   0x403d80
  404176:	jmp    0x40403b
  40417b:	lea    rcx,[rip+0x43e6]        # 0x408568
  404182:	mov    QWORD PTR [rbp-0x30],0x0
  40418a:	call   0x403d10
  40418f:	mov    edx,DWORD PTR [rcx]
  404191:	mov    rdi,r13
  404194:	mov    r10,rdx
  404197:	or     r10,r14
  40419a:	test   edx,edx
  40419c:	cmovs  rdx,r10
  4041a0:	sub    rdx,rax
  4041a3:	lea    rax,[r8+rdx*1]
  4041a7:	mov    r8d,0x4
  4041ad:	mov    rdx,r13
  4041b0:	mov    QWORD PTR [rbp-0x30],rax
  4041b4:	call   0x403d80
  4041b9:	jmp    0x40403b
  4041be:	add    rbx,QWORD PTR [rip+0x7503]        # 0x40b6c8
  4041c5:	lea    rcx,[rip+0x4304]        # 0x4084d0
  4041cc:	mov    rax,QWORD PTR [rbx+0x10]
  4041d0:	mov    r8,QWORD PTR [rbx+0x8]
  4041d4:	mov    edx,DWORD PTR [rax+0x8]
  4041d7:	call   0x403d10
  4041dc:	lea    rcx,[rip+0x434d]        # 0x408530
  4041e3:	call   0x403d10
  4041e8:	nop
  4041e9:	nop
  4041ea:	nop
  4041eb:	nop
  4041ec:	nop
  4041ed:	nop
  4041ee:	nop
  4041ef:	nop
  4041f0:	sub    rsp,0x28
  4041f4:	mov    eax,DWORD PTR [rcx]
  4041f6:	cmp    eax,0xc0000091
  4041fb:	ja     0x404260
  4041fd:	cmp    eax,0xc000008d
  404202:	jae    0x40427f
  404204:	cmp    eax,0xc0000008
  404209:	je     0x404320
  40420f:	ja     0x4042f0
  404215:	cmp    eax,0x80000002
  40421a:	je     0x404320
  404220:	cmp    eax,0xc0000005
  404225:	jne    0x4042fe
  40422b:	xor    edx,edx
  40422d:	mov    ecx,0xb
  404232:	call   0x405538
  404237:	cmp    rax,0x1
  40423b:	je     0x404380
  404241:	test   rax,rax
  404244:	je     0x404360
  40424a:	mov    ecx,0xb
  40424f:	call   rax
  404251:	xor    eax,eax
  404253:	add    rsp,0x28
  404257:	ret    
  404258:	nop    DWORD PTR [rax+rax*1+0x0]
  404260:	cmp    eax,0xc0000094
  404265:	je     0x404330
  40426b:	ja     0x4042b0
  40426d:	cmp    eax,0xc0000092
  404272:	je     0x404320
  404278:	cmp    eax,0xc0000093
  40427d:	jne    0x4042fe
  40427f:	xor    edx,edx
  404281:	mov    ecx,0x8
  404286:	call   0x405538
  40428b:	cmp    rax,0x1
  40428f:	mov    rdx,rax
  404292:	je     0x404308
  404294:	test   rdx,rdx
  404297:	mov    eax,0x1
  40429c:	je     0x404253
  40429e:	mov    ecx,0x8
  4042a3:	call   rdx
  4042a5:	xor    eax,eax
  4042a7:	add    rsp,0x28
  4042ab:	ret    
  4042ac:	nop    DWORD PTR [rax+0x0]
  4042b0:	cmp    eax,0xc0000095
  4042b5:	je     0x404320
  4042b7:	cmp    eax,0xc0000096
  4042bc:	jne    0x4042fe
  4042be:	xor    edx,edx
  4042c0:	mov    ecx,0x4
  4042c5:	call   0x405538
  4042ca:	cmp    rax,0x1
  4042ce:	je     0x40436a
  4042d4:	test   rax,rax
  4042d7:	je     0x404360
  4042dd:	mov    ecx,0x4
  4042e2:	call   rax
  4042e4:	xor    eax,eax
  4042e6:	jmp    0x404253
  4042eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4042f0:	cmp    eax,0xc000001d
  4042f5:	je     0x4042be
  4042f7:	cmp    eax,0xc000008c
  4042fc:	je     0x404320
  4042fe:	mov    eax,0x1
  404303:	add    rsp,0x28
  404307:	ret    
  404308:	mov    edx,0x1
  40430d:	mov    ecx,0x8
  404312:	call   0x405538
  404317:	call   0x403ce0
  40431c:	nop    DWORD PTR [rax+0x0]
  404320:	xor    eax,eax
  404322:	add    rsp,0x28
  404326:	ret    
  404327:	nop    WORD PTR [rax+rax*1+0x0]
  404330:	xor    edx,edx
  404332:	mov    ecx,0x8
  404337:	call   0x405538
  40433c:	cmp    rax,0x1
  404340:	mov    rdx,rax
  404343:	jne    0x404294
  404349:	mov    edx,0x1
  40434e:	mov    ecx,0x8
  404353:	call   0x405538
  404358:	xor    eax,eax
  40435a:	jmp    0x404253
  40435f:	nop
  404360:	mov    eax,0x4
  404365:	add    rsp,0x28
  404369:	ret    
  40436a:	mov    edx,0x1
  40436f:	mov    ecx,0x4
  404374:	call   0x405538
  404379:	xor    eax,eax
  40437b:	jmp    0x404253
  404380:	mov    edx,0x1
  404385:	mov    ecx,0xb
  40438a:	call   0x405538
  40438f:	xor    eax,eax
  404391:	jmp    0x404253
  404396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043a0:	push   r12
  4043a2:	push   rbp
  4043a3:	push   rdi
  4043a4:	push   rsi
  4043a5:	push   rbx
  4043a6:	sub    rsp,0x20
  4043aa:	call   0x404b10
  4043af:	mov    rbp,rax
  4043b2:	mov    eax,DWORD PTR [rip+0x7350]        # 0x40b708
  4043b8:	test   eax,eax
  4043ba:	jne    0x4043e1
  4043bc:	test   rbp,rbp
  4043bf:	je     0x4043e1
  4043c1:	lea    rcx,[rip+0x41d8]        # 0x4085a0
  4043c8:	mov    DWORD PTR [rip+0x7336],0x1        # 0x40b708
  4043d2:	call   0x404950
  4043d7:	test   rax,rax
  4043da:	je     0x4043f0
  4043dc:	mov    eax,0x1
  4043e1:	add    rsp,0x20
  4043e5:	pop    rbx
  4043e6:	pop    rsi
  4043e7:	pop    rdi
  4043e8:	pop    rbp
  4043e9:	pop    r12
  4043eb:	ret    
  4043ec:	nop    DWORD PTR [rax+0x0]
  4043f0:	lea    rbx,[rip+0x7449]        # 0x40b840
  4043f7:	mov    ecx,0x30
  4043fc:	lea    rdx,[rip+0x733d]        # 0x40b740
  404403:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4041f0
  40440a:	xor    esi,esi
  40440c:	mov    rdi,rbx
  40440f:	rep stos QWORD PTR es:[rdi],rax
  404412:	mov    rdi,rdx
  404415:	sub    r12,rbp
  404418:	mov    cl,0x20
  40441a:	rep stos QWORD PTR es:[rdi],rax
  40441d:	mov    rdi,rdx
  404420:	jmp    0x404450
  404422:	mov    BYTE PTR [rdi],0x9
  404425:	mov    DWORD PTR [rdi+0x4],r12d
  404429:	add    rsi,0x1
  40442d:	mov    edx,DWORD PTR [rax+0xc]
  404430:	add    rbx,0xc
  404434:	mov    DWORD PTR [rbx-0xc],edx
  404437:	add    edx,DWORD PTR [rax+0x8]
  40443a:	mov    rax,rdi
  40443d:	sub    rax,rbp
  404440:	add    rdi,0x8
  404444:	mov    DWORD PTR [rbx-0x4],eax
  404447:	mov    DWORD PTR [rbx-0x8],edx
  40444a:	cmp    rsi,0x20
  40444e:	je     0x404485
  404450:	mov    rcx,rsi
  404453:	call   0x404a80
  404458:	test   rax,rax
  40445b:	jne    0x404422
  40445d:	test   rsi,rsi
  404460:	je     0x4043dc
  404466:	mov    edx,esi
  404468:	nop    DWORD PTR [rax+rax*1+0x0]
  404470:	mov    r8,rbp
  404473:	lea    rcx,[rip+0x73c6]        # 0x40b840
  40447a:	call   QWORD PTR [rip+0x918c]        # 0x40d60c
  404480:	jmp    0x4043dc
  404485:	mov    edx,0x20
  40448a:	jmp    0x404470
  40448c:	nop    DWORD PTR [rax+0x0]
  404490:	push   rbx
  404491:	sub    rsp,0x20
  404495:	mov    rdx,QWORD PTR [rcx]
  404498:	mov    eax,DWORD PTR [rdx]
  40449a:	mov    r8d,eax
  40449d:	and    r8d,0x20ffffff
  4044a4:	cmp    r8d,0x20474343
  4044ab:	je     0x4045b0
  4044b1:	cmp    eax,0xc0000091
  4044b6:	mov    rbx,rcx
  4044b9:	ja     0x404540
  4044bf:	cmp    eax,0xc000008d
  4044c4:	jae    0x404557
  4044ca:	cmp    eax,0xc0000008
  4044cf:	je     0x404503
  4044d1:	ja     0x404510
  4044d3:	cmp    eax,0x80000002
  4044d8:	je     0x404503
  4044da:	cmp    eax,0xc0000005
  4044df:	jne    0x404522
  4044e1:	xor    edx,edx
  4044e3:	mov    ecx,0xb
  4044e8:	call   0x405538
  4044ed:	cmp    rax,0x1
  4044f1:	je     0x404620
  4044f7:	test   rax,rax
  4044fa:	je     0x404522
  4044fc:	mov    ecx,0xb
  404501:	call   rax
  404503:	mov    eax,0xffffffff
  404508:	add    rsp,0x20
  40450c:	pop    rbx
  40450d:	ret    
  40450e:	xchg   ax,ax
  404510:	cmp    eax,0xc000001d
  404515:	je     0x4045d6
  40451b:	cmp    eax,0xc000008c
  404520:	je     0x404503
  404522:	mov    rax,QWORD PTR [rip+0x71d7]        # 0x40b700
  404529:	test   rax,rax
  40452c:	je     0x404508
  40452e:	mov    rcx,rbx
  404531:	add    rsp,0x20
  404535:	pop    rbx
  404536:	rex.W jmp rax
  404539:	nop    DWORD PTR [rax+0x0]
  404540:	cmp    eax,0xc0000094
  404545:	je     0x404582
  404547:	ja     0x4045c0
  404549:	cmp    eax,0xc0000092
  40454e:	je     0x404503
  404550:	cmp    eax,0xc0000093
  404555:	jne    0x404522
  404557:	xor    edx,edx
  404559:	mov    ecx,0x8
  40455e:	call   0x405538
  404563:	cmp    rax,0x1
  404567:	jne    0x404594
  404569:	mov    edx,0x1
  40456e:	mov    ecx,0x8
  404573:	call   0x405538
  404578:	call   0x403ce0
  40457d:	jmp    0x404503
  404582:	xor    edx,edx
  404584:	mov    ecx,0x8
  404589:	call   0x405538
  40458e:	cmp    rax,0x1
  404592:	je     0x404602
  404594:	test   rax,rax
  404597:	je     0x404522
  404599:	mov    ecx,0x8
  40459e:	call   rax
  4045a0:	mov    eax,0xffffffff
  4045a5:	jmp    0x404508
  4045aa:	nop    WORD PTR [rax+rax*1+0x0]
  4045b0:	test   BYTE PTR [rdx+0x4],0x1
  4045b4:	jne    0x4044b1
  4045ba:	jmp    0x404503
  4045bf:	nop
  4045c0:	cmp    eax,0xc0000095
  4045c5:	je     0x404503
  4045cb:	cmp    eax,0xc0000096
  4045d0:	jne    0x404522
  4045d6:	xor    edx,edx
  4045d8:	mov    ecx,0x4
  4045dd:	call   0x405538
  4045e2:	cmp    rax,0x1
  4045e6:	je     0x404634
  4045e8:	test   rax,rax
  4045eb:	je     0x404522
  4045f1:	mov    ecx,0x4
  4045f6:	call   rax
  4045f8:	mov    eax,0xffffffff
  4045fd:	jmp    0x404508
  404602:	mov    edx,0x1
  404607:	mov    ecx,0x8
  40460c:	call   0x405538
  404611:	jmp    0x404503
  404616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404620:	mov    edx,0x1
  404625:	mov    ecx,0xb
  40462a:	call   0x405538
  40462f:	jmp    0x404503
  404634:	mov    edx,0x1
  404639:	mov    ecx,0x4
  40463e:	call   0x405538
  404643:	jmp    0x404503
  404648:	nop
  404649:	nop
  40464a:	nop
  40464b:	nop
  40464c:	nop
  40464d:	nop
  40464e:	nop
  40464f:	nop
  404650:	push   rbp
  404651:	push   rdi
  404652:	push   rsi
  404653:	push   rbx
  404654:	sub    rsp,0x28
  404658:	lea    rcx,[rip+0x7381]        # 0x40b9e0
  40465f:	call   QWORD PTR [rip+0x8f1f]        # 0x40d584
  404665:	mov    rbx,QWORD PTR [rip+0x7354]        # 0x40b9c0
  40466c:	test   rbx,rbx
  40466f:	je     0x4046a4
  404671:	mov    rbp,QWORD PTR [rip+0x8fcc]        # 0x40d644
  404678:	mov    rdi,QWORD PTR [rip+0x8f35]        # 0x40d5b4
  40467f:	nop
  404680:	mov    ecx,DWORD PTR [rbx]
  404682:	call   rbp
  404684:	mov    rsi,rax
  404687:	call   rdi
  404689:	test   eax,eax
  40468b:	jne    0x40469b
  40468d:	test   rsi,rsi
  404690:	je     0x40469b
  404692:	mov    rax,QWORD PTR [rbx+0x8]
  404696:	mov    rcx,rsi
  404699:	call   rax
  40469b:	mov    rbx,QWORD PTR [rbx+0x10]
  40469f:	test   rbx,rbx
  4046a2:	jne    0x404680
  4046a4:	mov    rax,QWORD PTR [rip+0x8f51]        # 0x40d5fc
  4046ab:	lea    rcx,[rip+0x732e]        # 0x40b9e0
  4046b2:	add    rsp,0x28
  4046b6:	pop    rbx
  4046b7:	pop    rsi
  4046b8:	pop    rdi
  4046b9:	pop    rbp
  4046ba:	rex.W jmp rax
  4046bd:	nop    DWORD PTR [rax]
  4046c0:	push   rdi
  4046c1:	push   rsi
  4046c2:	push   rbx
  4046c3:	sub    rsp,0x20
  4046c7:	mov    eax,DWORD PTR [rip+0x72fb]        # 0x40b9c8
  4046cd:	test   eax,eax
  4046cf:	jne    0x4046e0
  4046d1:	add    rsp,0x20
  4046d5:	pop    rbx
  4046d6:	pop    rsi
  4046d7:	pop    rdi
  4046d8:	ret    
  4046d9:	nop    DWORD PTR [rax+0x0]
  4046e0:	mov    rsi,rdx
  4046e3:	mov    edi,ecx
  4046e5:	mov    edx,0x18
  4046ea:	mov    ecx,0x1
  4046ef:	call   0x4055a8
  4046f4:	test   rax,rax
  4046f7:	mov    rbx,rax
  4046fa:	je     0x404738
  4046fc:	mov    DWORD PTR [rax],edi
  4046fe:	mov    QWORD PTR [rax+0x8],rsi
  404702:	lea    rcx,[rip+0x72d7]        # 0x40b9e0
  404709:	call   QWORD PTR [rip+0x8e75]        # 0x40d584
  40470f:	mov    rax,QWORD PTR [rip+0x72aa]        # 0x40b9c0
  404716:	lea    rcx,[rip+0x72c3]        # 0x40b9e0
  40471d:	mov    QWORD PTR [rip+0x729c],rbx        # 0x40b9c0
  404724:	mov    QWORD PTR [rbx+0x10],rax
  404728:	call   QWORD PTR [rip+0x8ece]        # 0x40d5fc
  40472e:	xor    eax,eax
  404730:	add    rsp,0x20
  404734:	pop    rbx
  404735:	pop    rsi
  404736:	pop    rdi
  404737:	ret    
  404738:	mov    eax,0xffffffff
  40473d:	jmp    0x4046d1
  40473f:	nop
  404740:	push   rbx
  404741:	sub    rsp,0x20
  404745:	mov    eax,DWORD PTR [rip+0x727d]        # 0x40b9c8
  40474b:	test   eax,eax
  40474d:	jne    0x404760
  40474f:	xor    eax,eax
  404751:	add    rsp,0x20
  404755:	pop    rbx
  404756:	ret    
  404757:	nop    WORD PTR [rax+rax*1+0x0]
  404760:	mov    ebx,ecx
  404762:	lea    rcx,[rip+0x7277]        # 0x40b9e0
  404769:	call   QWORD PTR [rip+0x8e15]        # 0x40d584
  40476f:	mov    rdx,QWORD PTR [rip+0x724a]        # 0x40b9c0
  404776:	test   rdx,rdx
  404779:	je     0x404797
  40477b:	mov    eax,DWORD PTR [rdx]
  40477d:	cmp    eax,ebx
  40477f:	jne    0x40478e
  404781:	jmp    0x4047cf
  404783:	mov    r8d,DWORD PTR [rax]
  404786:	cmp    r8d,ebx
  404789:	je     0x4047b0
  40478b:	mov    rdx,rax
  40478e:	mov    rax,QWORD PTR [rdx+0x10]
  404792:	test   rax,rax
  404795:	jne    0x404783
  404797:	lea    rcx,[rip+0x7242]        # 0x40b9e0
  40479e:	call   QWORD PTR [rip+0x8e58]        # 0x40d5fc
  4047a4:	xor    eax,eax
  4047a6:	add    rsp,0x20
  4047aa:	pop    rbx
  4047ab:	ret    
  4047ac:	nop    DWORD PTR [rax+0x0]
  4047b0:	mov    rcx,rax
  4047b3:	mov    rax,QWORD PTR [rax+0x10]
  4047b7:	mov    QWORD PTR [rdx+0x10],rax
  4047bb:	call   0x405590
  4047c0:	lea    rcx,[rip+0x7219]        # 0x40b9e0
  4047c7:	call   QWORD PTR [rip+0x8e2f]        # 0x40d5fc
  4047cd:	jmp    0x4047a4
  4047cf:	mov    rax,QWORD PTR [rdx+0x10]
  4047d3:	mov    rcx,rdx
  4047d6:	mov    QWORD PTR [rip+0x71e3],rax        # 0x40b9c0
  4047dd:	jmp    0x4047bb
  4047df:	nop
  4047e0:	push   rbx
  4047e1:	sub    rsp,0x20
  4047e5:	cmp    edx,0x1
  4047e8:	je     0x404880
  4047ee:	jb     0x404820
  4047f0:	cmp    edx,0x2
  4047f3:	je     0x404810
  4047f5:	cmp    edx,0x3
  4047f8:	jne    0x404815
  4047fa:	mov    eax,DWORD PTR [rip+0x71c8]        # 0x40b9c8
  404800:	test   eax,eax
  404802:	je     0x404815
  404804:	call   0x404650
  404809:	jmp    0x404815
  40480b:	nop    DWORD PTR [rax+rax*1+0x0]
  404810:	call   0x403ce0
  404815:	mov    eax,0x1
  40481a:	add    rsp,0x20
  40481e:	pop    rbx
  40481f:	ret    
  404820:	mov    eax,DWORD PTR [rip+0x71a2]        # 0x40b9c8
  404826:	test   eax,eax
  404828:	jne    0x4048b0
  40482e:	mov    eax,DWORD PTR [rip+0x7194]        # 0x40b9c8
  404834:	cmp    eax,0x1
  404837:	jne    0x404815
  404839:	mov    rcx,QWORD PTR [rip+0x7180]        # 0x40b9c0
  404840:	test   rcx,rcx
  404843:	je     0x404856
  404845:	mov    rbx,QWORD PTR [rcx+0x10]
  404849:	call   0x405590
  40484e:	test   rbx,rbx
  404851:	mov    rcx,rbx
  404854:	jne    0x404845
  404856:	lea    rcx,[rip+0x7183]        # 0x40b9e0
  40485d:	mov    QWORD PTR [rip+0x7158],0x0        # 0x40b9c0
  404868:	mov    DWORD PTR [rip+0x7156],0x0        # 0x40b9c8
  404872:	call   QWORD PTR [rip+0x8d04]        # 0x40d57c
  404878:	jmp    0x404815
  40487a:	nop    WORD PTR [rax+rax*1+0x0]
  404880:	mov    eax,DWORD PTR [rip+0x7142]        # 0x40b9c8
  404886:	test   eax,eax
  404888:	je     0x4048a0
  40488a:	mov    eax,0x1
  40488f:	mov    DWORD PTR [rip+0x712f],0x1        # 0x40b9c8
  404899:	add    rsp,0x20
  40489d:	pop    rbx
  40489e:	ret    
  40489f:	nop
  4048a0:	lea    rcx,[rip+0x7139]        # 0x40b9e0
  4048a7:	call   QWORD PTR [rip+0x8d47]        # 0x40d5f4
  4048ad:	jmp    0x40488a
  4048af:	nop
  4048b0:	call   0x404650
  4048b5:	jmp    0x40482e
  4048ba:	nop
  4048bb:	nop
  4048bc:	nop
  4048bd:	nop
  4048be:	nop
  4048bf:	nop
  4048c0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4048c4:	add    rcx,rax
  4048c7:	xor    eax,eax
  4048c9:	cmp    DWORD PTR [rcx],0x4550
  4048cf:	je     0x4048d3
  4048d1:	repz ret 
  4048d3:	xor    eax,eax
  4048d5:	cmp    WORD PTR [rcx+0x18],0x20b
  4048db:	sete   al
  4048de:	ret    
  4048df:	nop
  4048e0:	cmp    WORD PTR [rcx],0x5a4d
  4048e5:	je     0x4048f0
  4048e7:	xor    eax,eax
  4048e9:	ret    
  4048ea:	nop    WORD PTR [rax+rax*1+0x0]
  4048f0:	jmp    0x4048c0
  4048f2:	nop    DWORD PTR [rax+0x0]
  4048f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404900:	movsxd rax,DWORD PTR [rcx+0x3c]
  404904:	add    rcx,rax
  404907:	movzx  eax,WORD PTR [rcx+0x14]
  40490b:	lea    rax,[rcx+rax*1+0x18]
  404910:	movzx  ecx,WORD PTR [rcx+0x6]
  404914:	test   ecx,ecx
  404916:	je     0x404941
  404918:	sub    ecx,0x1
  40491b:	lea    rcx,[rcx+rcx*4]
  40491f:	lea    r9,[rax+rcx*8+0x28]
  404924:	mov    r8d,DWORD PTR [rax+0xc]
  404928:	cmp    r8,rdx
  40492b:	mov    rcx,r8
  40492e:	ja     0x404938
  404930:	add    ecx,DWORD PTR [rax+0x8]
  404933:	cmp    rdx,rcx
  404936:	jb     0x404943
  404938:	add    rax,0x28
  40493c:	cmp    rax,r9
  40493f:	jne    0x404924
  404941:	xor    eax,eax
  404943:	repz ret 
  404945:	nop
  404946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404950:	push   rdi
  404951:	push   rsi
  404952:	push   rbx
  404953:	sub    rsp,0x20
  404957:	mov    rsi,rcx
  40495a:	call   0x405510
  40495f:	cmp    rax,0x8
  404963:	ja     0x404980
  404965:	mov    rbx,QWORD PTR [rip+0x3da4]        # 0x408710
  40496c:	xor    edi,edi
  40496e:	cmp    WORD PTR [rbx],0x5a4d
  404973:	je     0x404990
  404975:	mov    rax,rdi
  404978:	add    rsp,0x20
  40497c:	pop    rbx
  40497d:	pop    rsi
  40497e:	pop    rdi
  40497f:	ret    
  404980:	xor    edi,edi
  404982:	mov    rax,rdi
  404985:	add    rsp,0x20
  404989:	pop    rbx
  40498a:	pop    rsi
  40498b:	pop    rdi
  40498c:	ret    
  40498d:	nop    DWORD PTR [rax]
  404990:	mov    rcx,rbx
  404993:	call   0x4048c0
  404998:	test   eax,eax
  40499a:	je     0x404975
  40499c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4049a0:	add    rdx,rbx
  4049a3:	movzx  eax,WORD PTR [rdx+0x14]
  4049a7:	lea    rbx,[rdx+rax*1+0x18]
  4049ac:	movzx  eax,WORD PTR [rdx+0x6]
  4049b0:	test   eax,eax
  4049b2:	je     0x404975
  4049b4:	sub    eax,0x1
  4049b7:	lea    rax,[rax+rax*4]
  4049bb:	lea    rdi,[rbx+rax*8+0x28]
  4049c0:	jmp    0x4049cb
  4049c2:	add    rbx,0x28
  4049c6:	cmp    rbx,rdi
  4049c9:	je     0x404980
  4049cb:	mov    r8d,0x8
  4049d1:	mov    rdx,rsi
  4049d4:	mov    rcx,rbx
  4049d7:	call   0x405508
  4049dc:	test   eax,eax
  4049de:	jne    0x4049c2
  4049e0:	mov    rdi,rbx
  4049e3:	mov    rax,rdi
  4049e6:	add    rsp,0x20
  4049ea:	pop    rbx
  4049eb:	pop    rsi
  4049ec:	pop    rdi
  4049ed:	ret    
  4049ee:	xchg   ax,ax
  4049f0:	push   rsi
  4049f1:	push   rbx
  4049f2:	sub    rsp,0x28
  4049f6:	mov    rbx,QWORD PTR [rip+0x3d13]        # 0x408710
  4049fd:	cmp    WORD PTR [rbx],0x5a4d
  404a02:	je     0x404a10
  404a04:	xor    eax,eax
  404a06:	add    rsp,0x28
  404a0a:	pop    rbx
  404a0b:	pop    rsi
  404a0c:	ret    
  404a0d:	nop    DWORD PTR [rax]
  404a10:	mov    rsi,rcx
  404a13:	mov    rcx,rbx
  404a16:	call   0x4048c0
  404a1b:	test   eax,eax
  404a1d:	je     0x404a04
  404a1f:	sub    rsi,rbx
  404a22:	mov    rcx,rbx
  404a25:	mov    rdx,rsi
  404a28:	add    rsp,0x28
  404a2c:	pop    rbx
  404a2d:	pop    rsi
  404a2e:	jmp    0x404900
  404a33:	nop    DWORD PTR [rax]
  404a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a40:	push   rbx
  404a41:	sub    rsp,0x20
  404a45:	mov    rbx,QWORD PTR [rip+0x3cc4]        # 0x408710
  404a4c:	xor    eax,eax
  404a4e:	cmp    WORD PTR [rbx],0x5a4d
  404a53:	je     0x404a60
  404a55:	add    rsp,0x20
  404a59:	pop    rbx
  404a5a:	ret    
  404a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a60:	mov    rcx,rbx
  404a63:	call   0x4048c0
  404a68:	test   eax,eax
  404a6a:	je     0x404a55
  404a6c:	movsxd rax,DWORD PTR [rbx+0x3c]
  404a70:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  404a75:	add    rsp,0x20
  404a79:	pop    rbx
  404a7a:	ret    
  404a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a80:	push   rdi
  404a81:	push   rsi
  404a82:	push   rbx
  404a83:	sub    rsp,0x20
  404a87:	mov    rsi,QWORD PTR [rip+0x3c82]        # 0x408710
  404a8e:	xor    edi,edi
  404a90:	mov    rbx,rcx
  404a93:	cmp    WORD PTR [rsi],0x5a4d
  404a98:	je     0x404aa5
  404a9a:	mov    rax,rdi
  404a9d:	add    rsp,0x20
  404aa1:	pop    rbx
  404aa2:	pop    rsi
  404aa3:	pop    rdi
  404aa4:	ret    
  404aa5:	mov    rcx,rsi
  404aa8:	call   0x4048c0
  404aad:	test   eax,eax
  404aaf:	je     0x404a9a
  404ab1:	movsxd rax,DWORD PTR [rsi+0x3c]
  404ab5:	add    rsi,rax
  404ab8:	movzx  eax,WORD PTR [rsi+0x14]
  404abc:	lea    rdx,[rsi+rax*1+0x18]
  404ac1:	movzx  eax,WORD PTR [rsi+0x6]
  404ac5:	test   eax,eax
  404ac7:	je     0x404a9a
  404ac9:	sub    eax,0x1
  404acc:	lea    rax,[rax+rax*4]
  404ad0:	lea    rax,[rdx+rax*8+0x28]
  404ad5:	test   BYTE PTR [rdx+0x27],0x20
  404ad9:	je     0x404ae4
  404adb:	test   rbx,rbx
  404ade:	je     0x404b00
  404ae0:	sub    rbx,0x1
  404ae4:	add    rdx,0x28
  404ae8:	cmp    rdx,rax
  404aeb:	jne    0x404ad5
  404aed:	xor    edi,edi
  404aef:	mov    rax,rdi
  404af2:	add    rsp,0x20
  404af6:	pop    rbx
  404af7:	pop    rsi
  404af8:	pop    rdi
  404af9:	ret    
  404afa:	nop    WORD PTR [rax+rax*1+0x0]
  404b00:	mov    rdi,rdx
  404b03:	mov    rax,rdi
  404b06:	add    rsp,0x20
  404b0a:	pop    rbx
  404b0b:	pop    rsi
  404b0c:	pop    rdi
  404b0d:	ret    
  404b0e:	xchg   ax,ax
  404b10:	push   rsi
  404b11:	push   rbx
  404b12:	sub    rsp,0x28
  404b16:	mov    rsi,QWORD PTR [rip+0x3bf3]        # 0x408710
  404b1d:	xor    ebx,ebx
  404b1f:	cmp    WORD PTR [rsi],0x5a4d
  404b24:	je     0x404b30
  404b26:	mov    rax,rbx
  404b29:	add    rsp,0x28
  404b2d:	pop    rbx
  404b2e:	pop    rsi
  404b2f:	ret    
  404b30:	mov    rcx,rsi
  404b33:	call   0x4048c0
  404b38:	test   eax,eax
  404b3a:	cmovne rbx,rsi
  404b3e:	mov    rax,rbx
  404b41:	add    rsp,0x28
  404b45:	pop    rbx
  404b46:	pop    rsi
  404b47:	ret    
  404b48:	nop    DWORD PTR [rax+rax*1+0x0]
  404b50:	push   rsi
  404b51:	push   rbx
  404b52:	sub    rsp,0x28
  404b56:	mov    rbx,QWORD PTR [rip+0x3bb3]        # 0x408710
  404b5d:	xor    eax,eax
  404b5f:	cmp    WORD PTR [rbx],0x5a4d
  404b64:	je     0x404b70
  404b66:	add    rsp,0x28
  404b6a:	pop    rbx
  404b6b:	pop    rsi
  404b6c:	ret    
  404b6d:	nop    DWORD PTR [rax]
  404b70:	mov    rsi,rcx
  404b73:	mov    rcx,rbx
  404b76:	call   0x4048c0
  404b7b:	test   eax,eax
  404b7d:	je     0x404b66
  404b7f:	sub    rsi,rbx
  404b82:	mov    rcx,rbx
  404b85:	mov    rdx,rsi
  404b88:	call   0x404900
  404b8d:	test   rax,rax
  404b90:	je     0x404ba1
  404b92:	mov    eax,DWORD PTR [rax+0x24]
  404b95:	not    eax
  404b97:	shr    eax,0x1f
  404b9a:	add    rsp,0x28
  404b9e:	pop    rbx
  404b9f:	pop    rsi
  404ba0:	ret    
  404ba1:	xor    eax,eax
  404ba3:	jmp    0x404b66
  404ba5:	nop
  404ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bb0:	push   rbp
  404bb1:	push   rdi
  404bb2:	push   rsi
  404bb3:	push   rbx
  404bb4:	sub    rsp,0x28
  404bb8:	mov    rdi,QWORD PTR [rip+0x3b51]        # 0x408710
  404bbf:	xor    ebp,ebp
  404bc1:	mov    esi,ecx
  404bc3:	cmp    WORD PTR [rdi],0x5a4d
  404bc8:	je     0x404be0
  404bca:	mov    rax,rbp
  404bcd:	add    rsp,0x28
  404bd1:	pop    rbx
  404bd2:	pop    rsi
  404bd3:	pop    rdi
  404bd4:	pop    rbp
  404bd5:	ret    
  404bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404be0:	mov    rcx,rdi
  404be3:	call   0x4048c0
  404be8:	test   eax,eax
  404bea:	je     0x404bca
  404bec:	movsxd rax,DWORD PTR [rdi+0x3c]
  404bf0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  404bf7:	test   edx,edx
  404bf9:	je     0x404bca
  404bfb:	mov    ebx,edx
  404bfd:	mov    rcx,rdi
  404c00:	mov    rdx,rbx
  404c03:	call   0x404900
  404c08:	test   rax,rax
  404c0b:	je     0x404bca
  404c0d:	add    rbx,rdi
  404c10:	mov    rdx,rbx
  404c13:	jne    0x404c27
  404c15:	jmp    0x404bca
  404c17:	nop    WORD PTR [rax+rax*1+0x0]
  404c20:	sub    esi,0x1
  404c23:	add    rdx,0x14
  404c27:	mov    ecx,DWORD PTR [rdx+0x4]
  404c2a:	test   ecx,ecx
  404c2c:	jne    0x404c35
  404c2e:	mov    eax,DWORD PTR [rdx+0xc]
  404c31:	test   eax,eax
  404c33:	je     0x404c50
  404c35:	test   esi,esi
  404c37:	jg     0x404c20
  404c39:	mov    ebp,DWORD PTR [rdx+0xc]
  404c3c:	add    rbp,rdi
  404c3f:	mov    rax,rbp
  404c42:	add    rsp,0x28
  404c46:	pop    rbx
  404c47:	pop    rsi
  404c48:	pop    rdi
  404c49:	pop    rbp
  404c4a:	ret    
  404c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c50:	xor    ebp,ebp
  404c52:	mov    rax,rbp
  404c55:	add    rsp,0x28
  404c59:	pop    rbx
  404c5a:	pop    rsi
  404c5b:	pop    rdi
  404c5c:	pop    rbp
  404c5d:	ret    
  404c5e:	nop
  404c5f:	nop
  404c60:	jmp    QWORD PTR [rip+0x882e]        # 0x40d494
  404c66:	nop
  404c67:	nop
  404c68:	nop    DWORD PTR [rax+rax*1+0x0]
  404c70:	push   rcx
  404c71:	push   rax
  404c72:	cmp    rax,0x1000
  404c78:	lea    rcx,[rsp+0x18]
  404c7d:	jb     0x404c98
  404c7f:	sub    rcx,0x1000
  404c86:	or     QWORD PTR [rcx],0x0
  404c8a:	sub    rax,0x1000
  404c90:	cmp    rax,0x1000
  404c96:	ja     0x404c7f
  404c98:	sub    rcx,rax
  404c9b:	or     QWORD PTR [rcx],0x0
  404c9f:	pop    rax
  404ca0:	pop    rcx
  404ca1:	ret    
  404ca2:	nop
  404ca3:	nop
  404ca4:	nop
  404ca5:	nop
  404ca6:	nop
  404ca7:	nop
  404ca8:	nop
  404ca9:	nop
  404caa:	nop
  404cab:	nop
  404cac:	nop
  404cad:	nop
  404cae:	nop
  404caf:	nop
  404cb0:	push   rdi
  404cb1:	push   rsi
  404cb2:	push   rbx
  404cb3:	sub    rsp,0x130
  404cba:	mov    rbx,rcx
  404cbd:	call   0x405628
  404cc2:	test   rbx,rbx
  404cc5:	mov    DWORD PTR [rax],0x0
  404ccb:	je     0x404e7e
  404cd1:	cmp    BYTE PTR [rbx],0x0
  404cd4:	je     0x404e40
  404cda:	mov    rcx,rbx
  404cdd:	call   QWORD PTR [rip+0x88c9]        # 0x40d5ac
  404ce3:	cmp    eax,0xffffffff
  404ce6:	je     0x404e60
  404cec:	test   al,0x10
  404cee:	je     0x404e40
  404cf4:	lea    rdi,[rsp+0x20]
  404cf9:	mov    rdx,rbx
  404cfc:	mov    r8d,0x104
  404d02:	mov    rcx,rdi
  404d05:	mov    rbx,rdi
  404d08:	call   0x405600
  404d0d:	mov    r8d,DWORD PTR [rbx]
  404d10:	add    rbx,0x4
  404d14:	lea    eax,[r8-0x1010101]
  404d1b:	not    r8d
  404d1e:	and    eax,r8d
  404d21:	and    eax,0x80808080
  404d26:	je     0x404d0d
  404d28:	mov    edx,eax
  404d2a:	shr    edx,0x10
  404d2d:	test   eax,0x8080
  404d32:	cmove  eax,edx
  404d35:	lea    rdx,[rbx+0x2]
  404d39:	cmove  rbx,rdx
  404d3d:	add    al,al
  404d3f:	sbb    rbx,0x3
  404d43:	sub    rbx,rdi
  404d46:	lea    rcx,[rbx+0x24b]
  404d4d:	call   0x405570
  404d52:	test   rax,rax
  404d55:	mov    rsi,rax
  404d58:	je     0x404e6f
  404d5e:	lea    r9,[rax+0x244]
  404d65:	lea    r8,[rbx+0x1]
  404d69:	mov    rdx,rdi
  404d6c:	mov    rcx,r9
  404d6f:	call   0x405560
  404d74:	cmp    BYTE PTR [rsi+0x244],0x0
  404d7b:	mov    r9,rax
  404d7e:	je     0x404da0
  404d80:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  404d88:	cmp    al,0x2f
  404d8a:	je     0x404da0
  404d8c:	cmp    al,0x5c
  404d8e:	je     0x404da0
  404d90:	mov    r8d,0x5c
  404d96:	mov    WORD PTR [r9+rbx*1],r8w
  404d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  404da0:	mov    rcx,r9
  404da3:	mov    eax,DWORD PTR [rcx]
  404da5:	add    rcx,0x4
  404da9:	lea    edx,[rax-0x1010101]
  404daf:	not    eax
  404db1:	and    edx,eax
  404db3:	and    edx,0x80808080
  404db9:	je     0x404da3
  404dbb:	mov    eax,edx
  404dbd:	shr    eax,0x10
  404dc0:	test   edx,0x8080
  404dc6:	cmove  edx,eax
  404dc9:	lea    rax,[rcx+0x2]
  404dcd:	cmove  rcx,rax
  404dd1:	add    dl,dl
  404dd3:	mov    eax,0x2a
  404dd8:	sbb    rcx,0x3
  404ddc:	xor    edx,edx
  404dde:	mov    WORD PTR [rcx],ax
  404de1:	mov    WORD PTR [rsi+0x12c],dx
  404de8:	lea    rdx,[rsi+0x130]
  404def:	xor    ecx,ecx
  404df1:	xor    eax,eax
  404df3:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  404dfe:	mov    WORD PTR [rsi+0x12e],cx
  404e05:	mov    rdi,rdx
  404e08:	mov    ecx,0x20
  404e0d:	mov    DWORD PTR [rsi+0x240],0x0
  404e17:	mov    DWORD PTR [rsi+0x128],0x0
  404e21:	rep stos QWORD PTR es:[rdi],rax
  404e24:	mov    rax,rsi
  404e27:	mov    DWORD PTR [rdi],0x0
  404e2d:	add    rsp,0x130
  404e34:	pop    rbx
  404e35:	pop    rsi
  404e36:	pop    rdi
  404e37:	ret    
  404e38:	nop    DWORD PTR [rax+rax*1+0x0]
  404e40:	call   0x405628
  404e45:	mov    DWORD PTR [rax],0x14
  404e4b:	xor    eax,eax
  404e4d:	add    rsp,0x130
  404e54:	pop    rbx
  404e55:	pop    rsi
  404e56:	pop    rdi
  404e57:	ret    
  404e58:	nop    DWORD PTR [rax+rax*1+0x0]
  404e60:	call   0x405628
  404e65:	mov    DWORD PTR [rax],0x2
  404e6b:	xor    eax,eax
  404e6d:	jmp    0x404e2d
  404e6f:	call   0x405628
  404e74:	mov    DWORD PTR [rax],0xc
  404e7a:	xor    eax,eax
  404e7c:	jmp    0x404e2d
  404e7e:	call   0x405628
  404e83:	mov    DWORD PTR [rax],0xe
  404e89:	xor    eax,eax
  404e8b:	jmp    0x404e2d
  404e8d:	nop    DWORD PTR [rax]
  404e90:	push   rbp
  404e91:	push   rdi
  404e92:	push   rsi
  404e93:	push   rbx
  404e94:	sub    rsp,0x158
  404e9b:	mov    rbx,rcx
  404e9e:	call   0x405628
  404ea3:	test   rbx,rbx
  404ea6:	mov    DWORD PTR [rax],0x0
  404eac:	je     0x40509d
  404eb2:	mov    eax,DWORD PTR [rbx+0x240]
  404eb8:	test   eax,eax
  404eba:	js     0x40503f
  404ec0:	lea    rdi,[rsp+0x20]
  404ec5:	je     0x404f74
  404ecb:	mov    rcx,QWORD PTR [rbx+0x238]
  404ed2:	mov    rdx,rdi
  404ed5:	call   0x4054d8
  404eda:	cmp    eax,0xffffffff
  404edd:	mov    ebp,eax
  404edf:	je     0x404fe5
  404ee5:	mov    eax,DWORD PTR [rsp+0x20]
  404ee9:	lea    rsi,[rbx+0x24]
  404eed:	lea    rdx,[rdi+0x28]
  404ef1:	mov    r8d,0x104
  404ef7:	mov    rcx,rsi
  404efa:	mov    DWORD PTR [rbx],eax
  404efc:	mov    rax,QWORD PTR [rsp+0x28]
  404f01:	mov    QWORD PTR [rbx+0x8],rax
  404f05:	mov    rax,QWORD PTR [rsp+0x30]
  404f0a:	mov    QWORD PTR [rbx+0x10],rax
  404f0e:	mov    rax,QWORD PTR [rsp+0x38]
  404f13:	mov    QWORD PTR [rbx+0x18],rax
  404f17:	mov    rax,QWORD PTR [rsp+0x40]
  404f1c:	mov    DWORD PTR [rbx+0x20],eax
  404f1f:	call   0x405500
  404f24:	test   ebp,ebp
  404f26:	jne    0x405013
  404f2c:	mov    eax,DWORD PTR [rbx+0x240]
  404f32:	add    eax,0x1
  404f35:	test   eax,eax
  404f37:	mov    DWORD PTR [rbx+0x240],eax
  404f3d:	jle    0x40503f
  404f43:	mov    rcx,rsi
  404f46:	call   0x405510
  404f4b:	lea    rcx,[rbx+0x130]
  404f52:	mov    WORD PTR [rbx+0x12e],ax
  404f59:	mov    rdx,rsi
  404f5c:	call   0x405520
  404f61:	lea    rax,[rbx+0x128]
  404f68:	add    rsp,0x158
  404f6f:	pop    rbx
  404f70:	pop    rsi
  404f71:	pop    rdi
  404f72:	pop    rbp
  404f73:	ret    
  404f74:	lea    rcx,[rbx+0x244]
  404f7b:	mov    rdx,rdi
  404f7e:	call   0x405608
  404f83:	cmp    rax,0xffffffffffffffff
  404f87:	mov    rbp,rax
  404f8a:	je     0x405050
  404f90:	mov    eax,DWORD PTR [rsp+0x20]
  404f94:	lea    rsi,[rbx+0x24]
  404f98:	lea    rdx,[rdi+0x28]
  404f9c:	mov    r8d,0x104
  404fa2:	mov    rcx,rsi
  404fa5:	mov    DWORD PTR [rbx],eax
  404fa7:	mov    rax,QWORD PTR [rsp+0x28]
  404fac:	mov    QWORD PTR [rbx+0x8],rax
  404fb0:	mov    rax,QWORD PTR [rsp+0x30]
  404fb5:	mov    QWORD PTR [rbx+0x10],rax
  404fb9:	mov    rax,QWORD PTR [rsp+0x38]
  404fbe:	mov    QWORD PTR [rbx+0x18],rax
  404fc2:	mov    rax,QWORD PTR [rsp+0x40]
  404fc7:	mov    DWORD PTR [rbx+0x20],eax
  404fca:	call   0x405500
  404fcf:	mov    QWORD PTR [rbx+0x238],rbp
  404fd6:	mov    DWORD PTR [rbx+0x240],0x1
  404fe0:	jmp    0x404f43
  404fe5:	lea    rdi,[rbx+0x8]
  404fe9:	mov    rcx,rbx
  404fec:	xor    eax,eax
  404fee:	mov    QWORD PTR [rbx],0x0
  404ff5:	mov    QWORD PTR [rbx+0x120],0x0
  405000:	and    rdi,0xfffffffffffffff8
  405004:	sub    rcx,rdi
  405007:	add    ecx,0x128
  40500d:	shr    ecx,0x3
  405010:	rep stos QWORD PTR es:[rdi],rax
  405013:	call   QWORD PTR [rip+0x859b]        # 0x40d5b4
  405019:	cmp    eax,0x12
  40501c:	je     0x405090
  40501e:	mov    rcx,QWORD PTR [rbx+0x238]
  405025:	call   0x405610
  40502a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  405035:	mov    DWORD PTR [rbx+0x240],0xffffffff
  40503f:	xor    eax,eax
  405041:	add    rsp,0x158
  405048:	pop    rbx
  405049:	pop    rsi
  40504a:	pop    rdi
  40504b:	pop    rbp
  40504c:	ret    
  40504d:	nop    DWORD PTR [rax]
  405050:	lea    rdi,[rbx+0x8]
  405054:	mov    rcx,rbx
  405057:	xor    eax,eax
  405059:	mov    QWORD PTR [rbx],0x0
  405060:	mov    QWORD PTR [rbx+0x120],0x0
  40506b:	and    rdi,0xfffffffffffffff8
  40506f:	sub    rcx,rdi
  405072:	add    ecx,0x128
  405078:	shr    ecx,0x3
  40507b:	rep stos QWORD PTR es:[rdi],rax
  40507e:	mov    QWORD PTR [rbx+0x238],rbp
  405085:	mov    DWORD PTR [rbx+0x240],ebp
  40508b:	xor    eax,eax
  40508d:	jmp    0x405041
  40508f:	nop
  405090:	call   0x405628
  405095:	mov    DWORD PTR [rax],0x0
  40509b:	jmp    0x40501e
  40509d:	call   0x405628
  4050a2:	mov    DWORD PTR [rax],0xe
  4050a8:	xor    eax,eax
  4050aa:	jmp    0x404f68
  4050af:	nop
  4050b0:	push   rsi
  4050b1:	push   rbx
  4050b2:	sub    rsp,0x28
  4050b6:	mov    rsi,rcx
  4050b9:	call   0x405628
  4050be:	test   rsi,rsi
  4050c1:	mov    DWORD PTR [rax],0x0
  4050c7:	je     0x4050f0
  4050c9:	mov    rcx,QWORD PTR [rsi+0x238]
  4050d0:	xor    ebx,ebx
  4050d2:	cmp    rcx,0xffffffffffffffff
  4050d6:	je     0x4050df
  4050d8:	call   0x405610
  4050dd:	mov    ebx,eax
  4050df:	mov    rcx,rsi
  4050e2:	call   0x405590
  4050e7:	mov    eax,ebx
  4050e9:	add    rsp,0x28
  4050ed:	pop    rbx
  4050ee:	pop    rsi
  4050ef:	ret    
  4050f0:	call   0x405628
  4050f5:	mov    DWORD PTR [rax],0xe
  4050fb:	mov    eax,0xffffffff
  405100:	jmp    0x4050e9
  405102:	nop    DWORD PTR [rax+0x0]
  405106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405110:	push   rbx
  405111:	sub    rsp,0x20
  405115:	mov    rbx,rcx
  405118:	call   0x405628
  40511d:	test   rbx,rbx
  405120:	mov    DWORD PTR [rax],0x0
  405126:	je     0x405155
  405128:	mov    rcx,QWORD PTR [rbx+0x238]
  40512f:	cmp    rcx,0xffffffffffffffff
  405133:	je     0x40513a
  405135:	call   0x405610
  40513a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  405145:	mov    DWORD PTR [rbx+0x240],0x0
  40514f:	add    rsp,0x20
  405153:	pop    rbx
  405154:	ret    
  405155:	call   0x405628
  40515a:	mov    DWORD PTR [rax],0xe
  405160:	jmp    0x40514f
  405162:	nop    DWORD PTR [rax+0x0]
  405166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405170:	push   rbx
  405171:	sub    rsp,0x20
  405175:	mov    rbx,rcx
  405178:	call   0x405628
  40517d:	test   rbx,rbx
  405180:	mov    DWORD PTR [rax],0x0
  405186:	je     0x405194
  405188:	mov    eax,DWORD PTR [rbx+0x240]
  40518e:	add    rsp,0x20
  405192:	pop    rbx
  405193:	ret    
  405194:	call   0x405628
  405199:	mov    DWORD PTR [rax],0xe
  40519f:	mov    eax,0xffffffff
  4051a4:	jmp    0x40518e
  4051a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051b0:	push   rsi
  4051b1:	push   rbx
  4051b2:	sub    rsp,0x28
  4051b6:	mov    rbx,rcx
  4051b9:	mov    esi,edx
  4051bb:	call   0x405628
  4051c0:	test   rbx,rbx
  4051c3:	mov    DWORD PTR [rax],0x0
  4051c9:	je     0x40523d
  4051cb:	cmp    esi,0xffffffff
  4051ce:	jl     0x405230
  4051d0:	je     0x405200
  4051d2:	mov    rcx,rbx
  4051d5:	call   0x405110
  4051da:	jmp    0x4051ed
  4051dc:	nop    DWORD PTR [rax+0x0]
  4051e0:	mov    rcx,rbx
  4051e3:	call   0x404e90
  4051e8:	test   rax,rax
  4051eb:	je     0x405227
  4051ed:	cmp    esi,DWORD PTR [rbx+0x240]
  4051f3:	jg     0x4051e0
  4051f5:	add    rsp,0x28
  4051f9:	pop    rbx
  4051fa:	pop    rsi
  4051fb:	ret    
  4051fc:	nop    DWORD PTR [rax+0x0]
  405200:	mov    rcx,QWORD PTR [rbx+0x238]
  405207:	cmp    rcx,0xffffffffffffffff
  40520b:	je     0x405212
  40520d:	call   0x405610
  405212:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  40521d:	mov    DWORD PTR [rbx+0x240],0xffffffff
  405227:	add    rsp,0x28
  40522b:	pop    rbx
  40522c:	pop    rsi
  40522d:	ret    
  40522e:	xchg   ax,ax
  405230:	call   0x405628
  405235:	mov    DWORD PTR [rax],0x16
  40523b:	jmp    0x405227
  40523d:	call   0x405628
  405242:	mov    DWORD PTR [rax],0xe
  405248:	jmp    0x405227
  40524a:	nop
  40524b:	nop
  40524c:	nop
  40524d:	nop
  40524e:	nop
  40524f:	nop
  405250:	sub    rsp,0x28
  405254:	call   0x405620
  405259:	add    rsp,0x28
  40525d:	ret    
  40525e:	nop
  40525f:	nop
  405260:	push   rbx
  405261:	sub    rsp,0x20
  405265:	test   r8,r8
  405268:	lea    rbx,[rcx+r8*1]
  40526c:	je     0x405273
  40526e:	call   0x405560
  405273:	mov    rax,rbx
  405276:	add    rsp,0x20
  40527a:	pop    rbx
  40527b:	ret    
  40527c:	nop
  40527d:	nop
  40527e:	nop
  40527f:	nop
  405280:	jmp    0x4055c0
  405285:	nop
  405286:	nop
  405287:	nop
  405288:	nop
  405289:	nop
  40528a:	nop
  40528b:	nop
  40528c:	nop
  40528d:	nop
  40528e:	nop
  40528f:	nop
  405290:	push   r12
  405292:	push   rbp
  405293:	push   rdi
  405294:	push   rsi
  405295:	push   rbx
  405296:	sub    rsp,0x250
  40529d:	mov    rbx,rdx
  4052a0:	mov    rsi,rcx
  4052a3:	mov    ecx,0x4000
  4052a8:	mov    r12d,r8d
  4052ab:	call   0x405570
  4052b0:	test   rbx,rbx
  4052b3:	mov    rbp,rax
  4052b6:	je     0x405380
  4052bc:	cmp    WORD PTR [rbx],0x0
  4052c0:	lea    rax,[rip+0x32e9]        # 0x4085b0
  4052c7:	cmove  rbx,rax
  4052cb:	test   rsi,rsi
  4052ce:	je     0x405371
  4052d4:	cmp    WORD PTR [rsi],0x0
  4052d8:	lea    rax,[rip+0x32e5]        # 0x4085c4
  4052df:	cmove  rsi,rax
  4052e3:	lea    rdi,[rsp+0x40]
  4052e8:	xor    ecx,ecx
  4052ea:	mov    r8d,0x104
  4052f0:	mov    rdx,rdi
  4052f3:	call   QWORD PTR [rip+0x82cb]        # 0x40d5c4
  4052f9:	test   eax,eax
  4052fb:	je     0x405360
  4052fd:	lea    r8,[rip+0x32c4]        # 0x4085c8
  405304:	mov    QWORD PTR [rsp+0x30],rsi
  405309:	mov    DWORD PTR [rsp+0x28],r12d
  40530e:	mov    QWORD PTR [rsp+0x20],rbx
  405313:	mov    r9,rdi
  405316:	mov    edx,0x1fff
  40531b:	mov    rcx,rbp
  40531e:	call   0x4055c8
  405323:	mov    rax,QWORD PTR [rip+0x3516]        # 0x408840
  40532a:	mov    eax,DWORD PTR [rax]
  40532c:	test   eax,eax
  40532e:	je     0x4053a5
  405330:	xor    ecx,ecx
  405332:	mov    r9d,0x12012
  405338:	lea    r8,[rip+0x3321]        # 0x408660
  40533f:	mov    rdx,rbp
  405342:	call   QWORD PTR [rip+0x8534]        # 0x40d87c
  405348:	cmp    eax,0x3
  40534b:	je     0x405391
  40534d:	cmp    eax,0x5
  405350:	jne    0x40538c
  405352:	add    rsp,0x250
  405359:	pop    rbx
  40535a:	pop    rsi
  40535b:	pop    rdi
  40535c:	pop    rbp
  40535d:	pop    r12
  40535f:	ret    
  405360:	lea    rdx,[rip+0x3249]        # 0x4085b0
  405367:	mov    rcx,rdi
  40536a:	call   0x4054e8
  40536f:	jmp    0x4052fd
  405371:	lea    rsi,[rip+0x324c]        # 0x4085c4
  405378:	jmp    0x4052e3
  40537d:	nop    DWORD PTR [rax]
  405380:	lea    rbx,[rip+0x3229]        # 0x4085b0
  405387:	jmp    0x4052cb
  40538c:	call   0x4055b0
  405391:	mov    ecx,0x16
  405396:	call   0x405548
  40539b:	mov    ecx,0x3
  4053a0:	call   0x405618
  4053a5:	call   0x405658
  4053aa:	lea    rdx,[rip+0x329f]        # 0x408650
  4053b1:	lea    rcx,[rax+0x60]
  4053b5:	mov    r8,rbp
  4053b8:	call   0x405588
  4053bd:	call   0x4055b0
  4053c2:	nop
  4053c3:	nop    DWORD PTR [rax]
  4053c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053d0:	push   rbp
  4053d1:	push   rdi
  4053d2:	push   rsi
  4053d3:	push   rbx
  4053d4:	sub    rsp,0x38
  4053d8:	mov    rdi,rdx
  4053db:	mov    DWORD PTR [rsp+0x2c],r8d
  4053e0:	mov    rbp,rcx
  4053e3:	call   0x405510
  4053e8:	lea    rcx,[rax+rax*1+0x2]
  4053ed:	call   0x405570
  4053f2:	mov    rcx,rdi
  4053f5:	mov    rsi,rax
  4053f8:	call   0x405510
  4053fd:	lea    rcx,[rax+rax*1+0x2]
  405402:	call   0x405570
  405407:	movzx  r9d,BYTE PTR [rbp+0x0]
  40540c:	xor    r10d,r10d
  40540f:	mov    rbx,rax
  405412:	mov    r8d,DWORD PTR [rsp+0x2c]
  405417:	test   r9b,r9b
  40541a:	je     0x405437
  40541c:	nop    DWORD PTR [rax+0x0]
  405420:	mov    WORD PTR [rsi+r10*2],r9w
  405425:	add    r10,0x1
  405429:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  40542f:	test   r9b,r9b
  405432:	jne    0x405420
  405434:	add    r10,r10
  405437:	movzx  r9d,BYTE PTR [rdi]
  40543b:	xor    edx,edx
  40543d:	mov    WORD PTR [rsi+r10*1],dx
  405442:	xor    r10d,r10d
  405445:	test   r9b,r9b
  405448:	je     0x405466
  40544a:	nop    WORD PTR [rax+rax*1+0x0]
  405450:	mov    WORD PTR [rbx+r10*2],r9w
  405455:	add    r10,0x1
  405459:	movzx  r9d,BYTE PTR [rdi+r10*1]
  40545e:	test   r9b,r9b
  405461:	jne    0x405450
  405463:	add    r10,r10
  405466:	xor    eax,eax
  405468:	mov    rdx,rbx
  40546b:	mov    rcx,rsi
  40546e:	mov    WORD PTR [rbx+r10*1],ax
  405473:	call   0x405290
  405478:	mov    rcx,rsi
  40547b:	call   0x405590
  405480:	mov    rcx,rbx
  405483:	add    rsp,0x38
  405487:	pop    rbx
  405488:	pop    rsi
  405489:	pop    rdi
  40548a:	pop    rbp
  40548b:	jmp    0x405590
  405490:	jmp    QWORD PTR [rip+0x83ce]        # 0x40d864
  405496:	nop
  405497:	nop
  405498:	jmp    QWORD PTR [rip+0x83be]        # 0x40d85c
  40549e:	nop
  40549f:	nop
  4054a0:	jmp    QWORD PTR [rip+0x83ae]        # 0x40d854
  4054a6:	nop
  4054a7:	nop
  4054a8:	jmp    QWORD PTR [rip+0x839e]        # 0x40d84c
  4054ae:	nop
  4054af:	nop
  4054b0:	jmp    QWORD PTR [rip+0x838e]        # 0x40d844
  4054b6:	nop
  4054b7:	nop
  4054b8:	jmp    QWORD PTR [rip+0x837e]        # 0x40d83c
  4054be:	nop
  4054bf:	nop
  4054c0:	jmp    QWORD PTR [rip+0x836e]        # 0x40d834
  4054c6:	nop
  4054c7:	nop
  4054c8:	jmp    QWORD PTR [rip+0x835e]        # 0x40d82c
  4054ce:	nop
  4054cf:	nop
  4054d0:	jmp    QWORD PTR [rip+0x834e]        # 0x40d824
  4054d6:	nop
  4054d7:	nop
  4054d8:	jmp    QWORD PTR [rip+0x833e]        # 0x40d81c
  4054de:	nop
  4054df:	nop
  4054e0:	jmp    QWORD PTR [rip+0x832e]        # 0x40d814
  4054e6:	nop
  4054e7:	nop
  4054e8:	jmp    QWORD PTR [rip+0x831e]        # 0x40d80c
  4054ee:	nop
  4054ef:	nop
  4054f0:	jmp    QWORD PTR [rip+0x830e]        # 0x40d804
  4054f6:	nop
  4054f7:	nop
  4054f8:	jmp    QWORD PTR [rip+0x82fe]        # 0x40d7fc
  4054fe:	nop
  4054ff:	nop
  405500:	jmp    QWORD PTR [rip+0x82ee]        # 0x40d7f4
  405506:	nop
  405507:	nop
  405508:	jmp    QWORD PTR [rip+0x82de]        # 0x40d7ec
  40550e:	nop
  40550f:	nop
  405510:	jmp    QWORD PTR [rip+0x82ce]        # 0x40d7e4
  405516:	nop
  405517:	nop
  405518:	jmp    QWORD PTR [rip+0x82be]        # 0x40d7dc
  40551e:	nop
  40551f:	nop
  405520:	jmp    QWORD PTR [rip+0x82ae]        # 0x40d7d4
  405526:	nop
  405527:	nop
  405528:	jmp    QWORD PTR [rip+0x829e]        # 0x40d7cc
  40552e:	nop
  40552f:	nop
  405530:	jmp    QWORD PTR [rip+0x828e]        # 0x40d7c4
  405536:	nop
  405537:	nop
  405538:	jmp    QWORD PTR [rip+0x827e]        # 0x40d7bc
  40553e:	nop
  40553f:	nop
  405540:	jmp    QWORD PTR [rip+0x826e]        # 0x40d7b4
  405546:	nop
  405547:	nop
  405548:	jmp    QWORD PTR [rip+0x825e]        # 0x40d7ac
  40554e:	nop
  40554f:	nop
  405550:	jmp    QWORD PTR [rip+0x824e]        # 0x40d7a4
  405556:	nop
  405557:	nop
  405558:	jmp    QWORD PTR [rip+0x823e]        # 0x40d79c
  40555e:	nop
  40555f:	nop
  405560:	jmp    QWORD PTR [rip+0x822e]        # 0x40d794
  405566:	nop
  405567:	nop
  405568:	jmp    QWORD PTR [rip+0x821e]        # 0x40d78c
  40556e:	nop
  40556f:	nop
  405570:	jmp    QWORD PTR [rip+0x820e]        # 0x40d784
  405576:	nop
  405577:	nop
  405578:	jmp    QWORD PTR [rip+0x81fe]        # 0x40d77c
  40557e:	nop
  40557f:	nop
  405580:	jmp    QWORD PTR [rip+0x81ee]        # 0x40d774
  405586:	nop
  405587:	nop
  405588:	jmp    QWORD PTR [rip+0x81de]        # 0x40d76c
  40558e:	nop
  40558f:	nop
  405590:	jmp    QWORD PTR [rip+0x81ce]        # 0x40d764
  405596:	nop
  405597:	nop
  405598:	jmp    QWORD PTR [rip+0x81be]        # 0x40d75c
  40559e:	nop
  40559f:	nop
  4055a0:	jmp    QWORD PTR [rip+0x81ae]        # 0x40d754
  4055a6:	nop
  4055a7:	nop
  4055a8:	jmp    QWORD PTR [rip+0x819e]        # 0x40d74c
  4055ae:	nop
  4055af:	nop
  4055b0:	jmp    QWORD PTR [rip+0x818e]        # 0x40d744
  4055b6:	nop
  4055b7:	nop
  4055b8:	jmp    QWORD PTR [rip+0x817e]        # 0x40d73c
  4055be:	nop
  4055bf:	nop
  4055c0:	jmp    QWORD PTR [rip+0x816e]        # 0x40d734
  4055c6:	nop
  4055c7:	nop
  4055c8:	jmp    QWORD PTR [rip+0x815e]        # 0x40d72c
  4055ce:	nop
  4055cf:	nop
  4055d0:	jmp    QWORD PTR [rip+0x814e]        # 0x40d724
  4055d6:	nop
  4055d7:	nop
  4055d8:	jmp    QWORD PTR [rip+0x813e]        # 0x40d71c
  4055de:	nop
  4055df:	nop
  4055e0:	jmp    QWORD PTR [rip+0x812e]        # 0x40d714
  4055e6:	nop
  4055e7:	nop
  4055e8:	jmp    QWORD PTR [rip+0x811e]        # 0x40d70c
  4055ee:	nop
  4055ef:	nop
  4055f0:	jmp    QWORD PTR [rip+0x810e]        # 0x40d704
  4055f6:	nop
  4055f7:	nop
  4055f8:	jmp    QWORD PTR [rip+0x80fe]        # 0x40d6fc
  4055fe:	nop
  4055ff:	nop
  405600:	jmp    QWORD PTR [rip+0x80ee]        # 0x40d6f4
  405606:	nop
  405607:	nop
  405608:	jmp    QWORD PTR [rip+0x80d6]        # 0x40d6e4
  40560e:	nop
  40560f:	nop
  405610:	jmp    QWORD PTR [rip+0x80c6]        # 0x40d6dc
  405616:	nop
  405617:	nop
  405618:	jmp    QWORD PTR [rip+0x80b6]        # 0x40d6d4
  40561e:	nop
  40561f:	nop
  405620:	jmp    QWORD PTR [rip+0x80a6]        # 0x40d6cc
  405626:	nop
  405627:	nop
  405628:	jmp    QWORD PTR [rip+0x8096]        # 0x40d6c4
  40562e:	nop
  40562f:	nop
  405630:	jmp    QWORD PTR [rip+0x8086]        # 0x40d6bc
  405636:	nop
  405637:	nop
  405638:	jmp    QWORD PTR [rip+0x8076]        # 0x40d6b4
  40563e:	nop
  40563f:	nop
  405640:	jmp    QWORD PTR [rip+0x805e]        # 0x40d6a4
  405646:	nop
  405647:	nop
  405648:	jmp    QWORD PTR [rip+0x804e]        # 0x40d69c
  40564e:	nop
  40564f:	nop
  405650:	jmp    QWORD PTR [rip+0x803e]        # 0x40d694
  405656:	nop
  405657:	nop
  405658:	jmp    QWORD PTR [rip+0x802e]        # 0x40d68c
  40565e:	nop
  40565f:	nop
  405660:	jmp    QWORD PTR [rip+0x8016]        # 0x40d67c
  405666:	nop
  405667:	nop
  405668:	jmp    QWORD PTR [rip+0x8006]        # 0x40d674
  40566e:	nop
  40566f:	nop
  405670:	mov    rax,QWORD PTR [rip+0x63b9]        # 0x40ba30
  405677:	ret    
  405678:	nop    DWORD PTR [rax+rax*1+0x0]
  405680:	mov    rax,rcx
  405683:	xchg   QWORD PTR [rip+0x63a6],rax        # 0x40ba30
  40568a:	ret    
  40568b:	nop
  40568c:	nop
  40568d:	nop
  40568e:	nop
  40568f:	nop
  405690:	jmp    QWORD PTR [rip+0x81e6]        # 0x40d87c
  405696:	nop
  405697:	nop
  405698:	jmp    QWORD PTR [rip+0x7fbe]        # 0x40d65c
  40569e:	nop
  40569f:	nop
  4056a0:	jmp    QWORD PTR [rip+0x7fae]        # 0x40d654
  4056a6:	nop
  4056a7:	nop
  4056a8:	jmp    QWORD PTR [rip+0x7f9e]        # 0x40d64c
  4056ae:	nop
  4056af:	nop
  4056b0:	jmp    QWORD PTR [rip+0x7f8e]        # 0x40d644
  4056b6:	nop
  4056b7:	nop
  4056b8:	jmp    QWORD PTR [rip+0x7f7e]        # 0x40d63c
  4056be:	nop
  4056bf:	nop
  4056c0:	jmp    QWORD PTR [rip+0x7f5e]        # 0x40d624
  4056c6:	nop
  4056c7:	nop
  4056c8:	jmp    QWORD PTR [rip+0x7f4e]        # 0x40d61c
  4056ce:	nop
  4056cf:	nop
  4056d0:	jmp    QWORD PTR [rip+0x7f3e]        # 0x40d614
  4056d6:	nop
  4056d7:	nop
  4056d8:	jmp    QWORD PTR [rip+0x7f2e]        # 0x40d60c
  4056de:	nop
  4056df:	nop
  4056e0:	jmp    QWORD PTR [rip+0x7f1e]        # 0x40d604
  4056e6:	nop
  4056e7:	nop
  4056e8:	jmp    QWORD PTR [rip+0x7f0e]        # 0x40d5fc
  4056ee:	nop
  4056ef:	nop
  4056f0:	jmp    QWORD PTR [rip+0x7efe]        # 0x40d5f4
  4056f6:	nop
  4056f7:	nop
  4056f8:	jmp    QWORD PTR [rip+0x7eee]        # 0x40d5ec
  4056fe:	nop
  4056ff:	nop
  405700:	jmp    QWORD PTR [rip+0x7ede]        # 0x40d5e4
  405706:	nop
  405707:	nop
  405708:	jmp    QWORD PTR [rip+0x7eb6]        # 0x40d5c4
  40570e:	nop
  40570f:	nop
  405710:	jmp    QWORD PTR [rip+0x7e96]        # 0x40d5ac
  405716:	nop
  405717:	nop
  405718:	jmp    QWORD PTR [rip+0x7e86]        # 0x40d5a4
  40571e:	nop
  40571f:	nop
  405720:	jmp    QWORD PTR [rip+0x7e76]        # 0x40d59c
  405726:	nop
  405727:	nop
  405728:	jmp    QWORD PTR [rip+0x7e66]        # 0x40d594
  40572e:	nop
  40572f:	nop
  405730:	jmp    QWORD PTR [rip+0x7e4e]        # 0x40d584
  405736:	nop
  405737:	nop
  405738:	jmp    QWORD PTR [rip+0x7e3e]        # 0x40d57c
  40573e:	nop
  40573f:	nop
  405740:	sub    rsp,0x28
  405744:	mov    rcx,QWORD PTR [rcx]
  405747:	mov    rdx,QWORD PTR [rdx]
  40574a:	xor    eax,eax
  40574c:	mov    r8,QWORD PTR [rcx-0x18]
  405750:	cmp    r8,QWORD PTR [rdx-0x18]
  405754:	je     0x405760
  405756:	add    rsp,0x28
  40575a:	ret    
  40575b:	nop    DWORD PTR [rax+rax*1+0x0]
  405760:	call   0x405568
  405765:	test   eax,eax
  405767:	sete   al
  40576a:	add    rsp,0x28
  40576e:	ret    
  40576f:	nop
  405770:	push   rdi
  405771:	push   rsi
  405772:	push   rbx
  405773:	sub    rsp,0x30
  405777:	mov    rbx,rcx
  40577a:	mov    rdi,rdx
  40577d:	mov    rsi,r8
  405780:	mov    rcx,r8
  405783:	call   0x405510
  405788:	mov    rdx,rsi
  40578b:	mov    rcx,rdi
  40578e:	mov    r8,rax
  405791:	call   0x4036f0
  405796:	mov    rsi,rax
  405799:	mov    rax,QWORD PTR [rax]
  40579c:	lea    r8,[rsp+0x2f]
  4057a1:	xor    edx,edx
  4057a3:	xor    ecx,ecx
  4057a5:	mov    QWORD PTR [rbx],rax
  4057a8:	call   0x403718
  4057ad:	mov    QWORD PTR [rsi],rax
  4057b0:	mov    rax,rbx
  4057b3:	add    rsp,0x30
  4057b7:	pop    rbx
  4057b8:	pop    rsi
  4057b9:	pop    rdi
  4057ba:	ret    
  4057bb:	nop
  4057bc:	nop
  4057bd:	nop
  4057be:	nop
  4057bf:	nop
  4057c0:	push   rsi
  4057c1:	push   rbx
  4057c2:	sub    rsp,0x38
  4057c6:	mov    rbx,rcx
  4057c9:	mov    esi,r8d
  4057cc:	call   0x4036c8
  4057d1:	movsx  r8d,sil
  4057d5:	mov    edx,0x1
  4057da:	mov    rcx,rbx
  4057dd:	call   0x4036e8
  4057e2:	mov    rax,rbx
  4057e5:	add    rsp,0x38
  4057e9:	pop    rbx
  4057ea:	pop    rsi
  4057eb:	ret    
  4057ec:	mov    rcx,QWORD PTR [rbx]
  4057ef:	lea    rdx,[rsp+0x2f]
  4057f4:	mov    rsi,rax
  4057f7:	sub    rcx,0x18
  4057fb:	call   0x403708
  405800:	mov    rcx,rsi
  405803:	call   0x404c60
  405808:	nop
  405809:	nop
  40580a:	nop
  40580b:	nop
  40580c:	nop
  40580d:	nop
  40580e:	nop
  40580f:	nop
  405810:	push   r15
  405812:	push   r14
  405814:	push   r13
  405816:	push   r12
  405818:	push   rbp
  405819:	push   rdi
  40581a:	push   rsi
  40581b:	push   rbx
  40581c:	sub    rsp,0xf8
  405823:	lea    r15,[rsp+0xe0]
  40582b:	lea    r12,[rsp+0xc0]
  405833:	mov    esi,ecx
  405835:	mov    QWORD PTR [rsp+0x148],rdx
  40583d:	lea    rbx,[rsp+0xd0]
  405845:	call   0x4038b0
  40584a:	lea    rdx,[rip+0x2841]        # 0x408092
  405851:	mov    rcx,r15
  405854:	mov    r8,r12
  405857:	call   0x4036d0
  40585c:	mov    rdx,r15
  40585f:	mov    rcx,rbx
  405862:	call   0x401570
  405867:	mov    rdi,QWORD PTR [rsp+0xe0]
  40586f:	lea    rax,[rsp+0xb0]
  405877:	mov    rdx,rax
  40587a:	mov    QWORD PTR [rsp+0x20],rax
  40587f:	lea    rcx,[rdi-0x18]
  405883:	call   0x403708
  405888:	mov    rax,QWORD PTR [rsp+0xd0]
  405890:	cmp    QWORD PTR [rax-0x18],0x0
  405895:	jne    0x405d2f
  40589b:	lea    rdx,[rip+0x27fe]        # 0x4080a0
  4058a2:	mov    r8,r12
  4058a5:	mov    rcx,r15
  4058a8:	call   0x4036d0
  4058ad:	lea    rbp,[rsp+0x50]
  4058b2:	mov    rdx,r15
  4058b5:	mov    rcx,rbp
  4058b8:	call   0x4017b0
  4058bd:	mov    rax,QWORD PTR [rsp+0xe0]
  4058c5:	mov    rdx,QWORD PTR [rsp+0x20]
  4058ca:	lea    rcx,[rax-0x18]
  4058ce:	call   0x403708
  4058d3:	mov    rax,QWORD PTR [rsp+0xd0]
  4058db:	mov    rdx,r15
  4058de:	lea    rcx,[rax-0x18]
  4058e2:	call   0x403708
  4058e7:	lea    r8,[rsp+0x4f]
  4058ec:	lea    rdx,[rip+0x27ed]        # 0x4080e0
  4058f3:	mov    rcx,r15
  4058f6:	call   0x4036d0
  4058fb:	mov    rdx,r15
  4058fe:	mov    rcx,r12
  405901:	call   0x401570
  405906:	mov    rax,QWORD PTR [rsp+0xe0]
  40590e:	mov    rdx,rbx
  405911:	lea    rcx,[rax-0x18]
  405915:	call   0x403708
  40591a:	mov    rax,QWORD PTR [rsp+0xc0]
  405922:	cmp    QWORD PTR [rax-0x18],0x0
  405927:	jne    0x405d1a
  40592d:	lea    r8,[rsp+0x4e]
  405932:	lea    rdx,[rip+0x27bf]        # 0x4080f8
  405939:	mov    rcx,rbx
  40593c:	call   0x4036d0
  405941:	lea    rdi,[rsp+0x60]
  405946:	mov    rdx,rbx
  405949:	mov    rcx,rdi
  40594c:	call   0x4017b0
  405951:	mov    rax,QWORD PTR [rsp+0xd0]
  405959:	mov    rdx,r15
  40595c:	lea    rcx,[rax-0x18]
  405960:	call   0x403708
  405965:	mov    rax,QWORD PTR [rsp+0xc0]
  40596d:	lea    rbx,[rsp+0x80]
  405975:	mov    rdx,r15
  405978:	lea    rcx,[rax-0x18]
  40597c:	call   0x403708
  405981:	mov    r8d,0x5c
  405987:	mov    rdx,rbp
  40598a:	mov    rcx,rbx
  40598d:	call   0x4057c0
  405992:	lea    rax,[rsp+0x70]
  405997:	lea    r8,[rip+0x27c3]        # 0x408161
  40599e:	mov    rdx,rbx
  4059a1:	mov    rcx,rax
  4059a4:	mov    QWORD PTR [rsp+0x28],rax
  4059a9:	call   0x405770
  4059ae:	mov    rax,QWORD PTR [rsp+0x80]
  4059b6:	lea    rbp,[rsp+0xa0]
  4059be:	mov    rdx,r15
  4059c1:	lea    rcx,[rax-0x18]
  4059c5:	call   0x403708
  4059ca:	mov    r8d,0x5c
  4059d0:	mov    rdx,rdi
  4059d3:	mov    rcx,rbp
  4059d6:	call   0x4057c0
  4059db:	lea    rbx,[rsp+0x90]
  4059e3:	lea    r8,[rip+0x2788]        # 0x408172
  4059ea:	mov    rdx,rbp
  4059ed:	mov    rcx,rbx
  4059f0:	call   0x405770
  4059f5:	mov    rax,QWORD PTR [rsp+0xa0]
  4059fd:	mov    rdx,r15
  405a00:	lea    rcx,[rax-0x18]
  405a04:	call   0x403708
  405a09:	mov    rcx,QWORD PTR [rsp+0x20]
  405a0e:	mov    rdx,rbx
  405a11:	call   0x4036c8
  405a16:	cmp    BYTE PTR [rip+0x561b],0x0        # 0x40b038
  405a1d:	je     0x405d92
  405a23:	cmp    esi,0x1
  405a26:	jle    0x405df7
  405a2c:	mov    rax,QWORD PTR [rsp+0x148]
  405a34:	mov    BYTE PTR [rsp+0x3d],0x0
  405a39:	mov    ebp,0x1
  405a3e:	mov    BYTE PTR [rsp+0x3c],0x1
  405a43:	mov    r10d,0x1
  405a49:	mov    r9d,0x1
  405a4f:	mov    r14d,0xe
  405a55:	mov    r12d,0x9
  405a5b:	lea    rbx,[rax+0x8]
  405a5f:	lea    eax,[rsi-0x2]
  405a62:	mov    rsi,QWORD PTR [rsp+0x148]
  405a6a:	lea    r13,[rsi+rax*8+0x10]
  405a6f:	jmp    0x405a92
  405a71:	mov    rax,QWORD PTR [rip+0x55b8]        # 0x40b030
  405a78:	movsxd rdx,ebp
  405a7b:	xor    r9d,r9d
  405a7e:	add    ebp,0x1
  405a81:	mov    QWORD PTR [rax+rdx*8],r8
  405a85:	add    rbx,0x8
  405a89:	cmp    rbx,r13
  405a8c:	je     0x405b83
  405a92:	mov    r8,QWORD PTR [rbx]
  405a95:	lea    rdi,[rip+0x26e1]        # 0x40817d
  405a9c:	mov    rcx,r14
  405a9f:	mov    rsi,r8
  405aa2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405aa4:	je     0x405d00
  405aaa:	lea    rdi,[rip+0x26da]        # 0x40818b
  405ab1:	mov    rsi,r8
  405ab4:	mov    rcx,r12
  405ab7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405ab9:	je     0x405a71
  405abb:	lea    rdi,[rip+0x26d2]        # 0x408194
  405ac2:	mov    rsi,r8
  405ac5:	mov    rcx,r12
  405ac8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405aca:	je     0x405ce0
  405ad0:	lea    rdi,[rip+0x26c6]        # 0x40819d
  405ad7:	mov    rsi,r8
  405ada:	mov    ecx,0x8
  405adf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405ae1:	je     0x405ce0
  405ae7:	lea    rdi,[rip+0x26b7]        # 0x4081a5
  405aee:	mov    ecx,0x3
  405af3:	mov    rsi,r8
  405af6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405af8:	je     0x405ce0
  405afe:	lea    rdi,[rip+0x26a3]        # 0x4081a8
  405b05:	mov    ecx,0x13
  405b0a:	mov    rsi,r8
  405b0d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405b0f:	je     0x405b60
  405b11:	lea    rdx,[rip+0x26a3]        # 0x4081bb
  405b18:	mov    rcx,r8
  405b1b:	mov    BYTE PTR [rsp+0x3f],r10b
  405b20:	mov    BYTE PTR [rsp+0x3e],r9b
  405b25:	mov    QWORD PTR [rsp+0x30],r8
  405b2a:	call   0x405528
  405b2f:	test   eax,eax
  405b31:	mov    r8,QWORD PTR [rsp+0x30]
  405b36:	movzx  r9d,BYTE PTR [rsp+0x3e]
  405b3c:	movzx  r10d,BYTE PTR [rsp+0x3f]
  405b42:	je     0x405b60
  405b44:	mov    rax,QWORD PTR [rip+0x54e5]        # 0x40b030
  405b4b:	movsxd rdx,ebp
  405b4e:	add    ebp,0x1
  405b51:	mov    QWORD PTR [rax+rdx*8],r8
  405b55:	jmp    0x405a85
  405b5a:	nop    WORD PTR [rax+rax*1+0x0]
  405b60:	mov    rax,QWORD PTR [rip+0x54c9]        # 0x40b030
  405b67:	add    rbx,0x8
  405b6b:	movsxd rdx,ebp
  405b6e:	add    ebp,0x1
  405b71:	cmp    rbx,r13
  405b74:	mov    QWORD PTR [rax+rdx*8],r8
  405b78:	mov    BYTE PTR [rsp+0x3d],0x1
  405b7d:	jne    0x405a92
  405b83:	cmp    BYTE PTR [rsp+0x3d],0x0
  405b88:	mov    rax,QWORD PTR [rip+0x54a1]        # 0x40b030
  405b8f:	movsxd rbp,ebp
  405b92:	mov    QWORD PTR [rax+rbp*8],0x0
  405b9a:	jne    0x405de3
  405ba0:	test   r10b,r10b
  405ba3:	jne    0x405e0b
  405ba9:	test   r9b,r9b
  405bac:	jne    0x405e0b
  405bb2:	mov    rcx,QWORD PTR [rsp+0x20]
  405bb7:	lea    rdx,[rip+0x2629]        # 0x4081e7
  405bbe:	call   0x4036f8
  405bc3:	mov    rbx,QWORD PTR [rsp+0xb0]
  405bcb:	mov    rdi,QWORD PTR [rip+0x545e]        # 0x40b030
  405bd2:	test   rbx,rbx
  405bd5:	mov    rsi,rdi
  405bd8:	je     0x405c02
  405bda:	mov    rcx,rbx
  405bdd:	call   0x405510
  405be2:	lea    ecx,[rax+0x1]
  405be5:	movsxd rcx,ecx
  405be8:	call   0x403698
  405bed:	mov    rdx,rbx
  405bf0:	mov    rcx,rax
  405bf3:	call   0x405520
  405bf8:	mov    rsi,QWORD PTR [rip+0x5431]        # 0x40b030
  405bff:	mov    rbx,rax
  405c02:	mov    QWORD PTR [rdi],rbx
  405c05:	mov    rcx,QWORD PTR [rsp+0xb0]
  405c0d:	mov    rdx,rsi
  405c10:	call   0x401ae0
  405c15:	mov    rdx,QWORD PTR [rsi]
  405c18:	mov    rcx,QWORD PTR [rip+0x2aa1]        # 0x4086c0
  405c1f:	mov    ebx,eax
  405c21:	call   0x4036a0
  405c26:	lea    rdx,[rip+0x25bf]        # 0x4081ec
  405c2d:	mov    rcx,rax
  405c30:	call   0x4036a0
  405c35:	mov    rdx,QWORD PTR [rsp+0xb0]
  405c3d:	mov    rcx,rax
  405c40:	mov    r8,QWORD PTR [rdx-0x18]
  405c44:	call   0x4036b0
  405c49:	lea    rdx,[rip+0x25af]        # 0x4081ff
  405c50:	mov    rcx,rax
  405c53:	call   0x4036a0
  405c58:	mov    rcx,rax
  405c5b:	call   0x4036a8
  405c60:	test   ebx,ebx
  405c62:	js     0x405d44
  405c68:	mov    rax,QWORD PTR [rsp+0xb0]
  405c70:	mov    rdx,r15
  405c73:	lea    rcx,[rax-0x18]
  405c77:	call   0x403708
  405c7c:	mov    rax,QWORD PTR [rsp+0x90]
  405c84:	mov    rdx,r15
  405c87:	lea    rcx,[rax-0x18]
  405c8b:	call   0x403708
  405c90:	mov    rax,QWORD PTR [rsp+0x70]
  405c95:	mov    rdx,r15
  405c98:	lea    rcx,[rax-0x18]
  405c9c:	call   0x403708
  405ca1:	mov    rax,QWORD PTR [rsp+0x60]
  405ca6:	mov    rdx,r15
  405ca9:	lea    rcx,[rax-0x18]
  405cad:	call   0x403708
  405cb2:	mov    rax,QWORD PTR [rsp+0x50]
  405cb7:	mov    rdx,r15
  405cba:	lea    rcx,[rax-0x18]
  405cbe:	call   0x403708
  405cc3:	mov    eax,ebx
  405cc5:	add    rsp,0xf8
  405ccc:	pop    rbx
  405ccd:	pop    rsi
  405cce:	pop    rdi
  405ccf:	pop    rbp
  405cd0:	pop    r12
  405cd2:	pop    r13
  405cd4:	pop    r14
  405cd6:	pop    r15
  405cd8:	ret    
  405cd9:	nop    DWORD PTR [rax+0x0]
  405ce0:	mov    rax,QWORD PTR [rip+0x5349]        # 0x40b030
  405ce7:	movsxd rdx,ebp
  405cea:	mov    BYTE PTR [rsp+0x3c],0x0
  405cef:	add    ebp,0x1
  405cf2:	mov    QWORD PTR [rax+rdx*8],r8
  405cf6:	jmp    0x405a85
  405cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  405d00:	mov    rdx,QWORD PTR [rsp+0x28]
  405d05:	mov    rcx,QWORD PTR [rsp+0x20]
  405d0a:	call   0x4036e0
  405d0f:	xor    r10d,r10d
  405d12:	xor    r9d,r9d
  405d15:	jmp    0x405a85
  405d1a:	lea    rdi,[rsp+0x60]
  405d1f:	mov    rdx,r12
  405d22:	mov    rcx,rdi
  405d25:	call   0x4036c8
  405d2a:	jmp    0x405965
  405d2f:	lea    rbp,[rsp+0x50]
  405d34:	mov    rdx,rbx
  405d37:	mov    rcx,rbp
  405d3a:	call   0x4036c8
  405d3f:	jmp    0x4058d3
  405d44:	call   QWORD PTR [rip+0x797a]        # 0x40d6c4
  405d4a:	mov    ecx,DWORD PTR [rax]
  405d4c:	call   0x405518
  405d51:	mov    rsi,rax
  405d54:	mov    rax,QWORD PTR [rsp+0x148]
  405d5c:	mov    rcx,QWORD PTR [rip+0x295d]        # 0x4086c0
  405d63:	mov    rdx,QWORD PTR [rax]
  405d66:	call   0x4036a0
  405d6b:	lea    rdx,[rip+0x248f]        # 0x408201
  405d72:	mov    rcx,rax
  405d75:	call   0x4036a0
  405d7a:	mov    rcx,rax
  405d7d:	mov    rdx,rsi
  405d80:	call   0x4036a0
  405d85:	mov    rcx,rax
  405d88:	call   0x4036a8
  405d8d:	jmp    0x405c68
  405d92:	lea    rcx,[rip+0x529f]        # 0x40b038
  405d99:	call   0x403688
  405d9e:	test   eax,eax
  405da0:	je     0x405a23
  405da6:	lea    eax,[rsi+0x1]
  405da9:	movabs rdx,0xfe0000000000000
  405db3:	cdqe   
  405db5:	cmp    rax,rdx
  405db8:	ja     0x405f3d
  405dbe:	lea    rcx,[rax*8+0x0]
  405dc6:	call   0x403698
  405dcb:	lea    rcx,[rip+0x5266]        # 0x40b038
  405dd2:	mov    QWORD PTR [rip+0x5257],rax        # 0x40b030
  405dd9:	call   0x403680
  405dde:	jmp    0x405a23
  405de3:	mov    rdx,QWORD PTR [rsp+0x28]
  405de8:	mov    rcx,QWORD PTR [rsp+0x20]
  405ded:	call   0x4036e0
  405df2:	jmp    0x405bb2
  405df7:	mov    rax,QWORD PTR [rip+0x5232]        # 0x40b030
  405dfe:	mov    BYTE PTR [rsp+0x3c],0x1
  405e03:	mov    QWORD PTR [rax+0x8],0x0
  405e0b:	mov    rcx,r15
  405e0e:	call   0x401530
  405e13:	cmp    DWORD PTR [rsp+0xe0],0x0
  405e1b:	mov    rbx,rax
  405e1e:	jne    0x405bb2
  405e24:	mov    rdx,QWORD PTR [rsp+0x28]
  405e29:	mov    rcx,QWORD PTR [rsp+0x20]
  405e2e:	call   0x4036e0
  405e33:	cmp    BYTE PTR [rsp+0x3c],0x0
  405e38:	je     0x405bb2
  405e3e:	mov    rcx,QWORD PTR [rip+0x287b]        # 0x4086c0
  405e45:	lea    rax,[rip+0x2228]        # 0x408074
  405e4c:	lea    rdx,[rip+0x236b]        # 0x4081be
  405e53:	test   rbx,rbx
  405e56:	cmove  rbx,rax
  405e5a:	call   0x4036a0
  405e5f:	mov    rdx,rbx
  405e62:	mov    rcx,rax
  405e65:	call   0x4036a0
  405e6a:	mov    rcx,rax
  405e6d:	call   0x4036a8
  405e72:	mov    rcx,QWORD PTR [rip+0x2847]        # 0x4086c0
  405e79:	lea    rdx,[rip+0x2348]        # 0x4081c8
  405e80:	call   0x4036a0
  405e85:	mov    rcx,rax
  405e88:	call   0x4036a8
  405e8d:	jmp    0x405bb2
  405e92:	mov    rbx,rax
  405e95:	mov    rax,QWORD PTR [rsp+0xe0]
  405e9d:	mov    rdx,QWORD PTR [rsp+0x20]
  405ea2:	lea    rcx,[rax-0x18]
  405ea6:	call   0x403708
  405eab:	mov    rax,QWORD PTR [rsp+0xd0]
  405eb3:	mov    rdx,QWORD PTR [rsp+0x20]
  405eb8:	lea    rcx,[rax-0x18]
  405ebc:	call   0x403708
  405ec1:	mov    rcx,rbx
  405ec4:	call   0x404c60
  405ec9:	lea    rcx,[rip+0x5168]        # 0x40b038
  405ed0:	mov    rbx,rax
  405ed3:	call   0x403690
  405ed8:	mov    rax,QWORD PTR [rsp+0xb0]
  405ee0:	mov    rdx,r15
  405ee3:	lea    rcx,[rax-0x18]
  405ee7:	call   0x403708
  405eec:	mov    rax,QWORD PTR [rsp+0x90]
  405ef4:	mov    rdx,r15
  405ef7:	lea    rcx,[rax-0x18]
  405efb:	call   0x403708
  405f00:	mov    rax,QWORD PTR [rsp+0x70]
  405f05:	mov    rdx,r15
  405f08:	lea    rcx,[rax-0x18]
  405f0c:	call   0x403708
  405f11:	mov    rax,QWORD PTR [rsp+0x60]
  405f16:	mov    rdx,r15
  405f19:	lea    rcx,[rax-0x18]
  405f1d:	call   0x403708
  405f22:	mov    rax,QWORD PTR [rsp+0x50]
  405f27:	lea    rdx,[rsp+0x4d]
  405f2c:	lea    rcx,[rax-0x18]
  405f30:	call   0x403708
  405f35:	mov    rcx,rbx
  405f38:	call   0x404c60
  405f3d:	call   0x403678
  405f42:	mov    rbx,rax
  405f45:	jmp    0x405ed8
  405f47:	mov    rbx,rax
  405f4a:	jmp    0x405eec
  405f4c:	mov    rbx,rax
  405f4f:	mov    rax,QWORD PTR [rsp+0xa0]
  405f57:	mov    rdx,r15
  405f5a:	lea    rcx,[rax-0x18]
  405f5e:	call   0x403708
  405f63:	jmp    0x405f00
  405f65:	mov    rbx,rax
  405f68:	jmp    0x405eab
  405f6d:	mov    rbx,rax
  405f70:	mov    rax,QWORD PTR [rsp+0xe0]
  405f78:	lea    rdx,[rsp+0xb0]
  405f80:	lea    rcx,[rax-0x18]
  405f84:	call   0x403708
  405f89:	mov    rcx,rbx
  405f8c:	call   0x404c60
  405f91:	jmp    0x405f65
  405f93:	mov    rbx,rax
  405f96:	mov    rax,QWORD PTR [rsp+0xc0]
  405f9e:	mov    rdx,r15
  405fa1:	lea    rcx,[rax-0x18]
  405fa5:	call   0x403708
  405faa:	jmp    0x405f22
  405faf:	mov    rbx,rax
  405fb2:	jmp    0x405f00
  405fb7:	mov    rbx,rax
  405fba:	mov    rax,QWORD PTR [rsp+0x80]
  405fc2:	mov    rdx,r15
  405fc5:	lea    rcx,[rax-0x18]
  405fc9:	call   0x403708
  405fce:	jmp    0x405f11
  405fd3:	mov    rbx,rax
  405fd6:	jmp    0x405f11
  405fdb:	mov    rbx,rax
  405fde:	mov    rax,QWORD PTR [rsp+0xd0]
  405fe6:	mov    rdx,r15
  405fe9:	lea    rcx,[rax-0x18]
  405fed:	call   0x403708
  405ff2:	jmp    0x405f96
  405ff4:	jmp    0x405f93
  405ff6:	mov    rsi,rax
  405ff9:	mov    rax,QWORD PTR [rsp+0xe0]
  406001:	mov    rdx,rbx
  406004:	mov    rbx,rsi
  406007:	lea    rcx,[rax-0x18]
  40600b:	call   0x403708
  406010:	jmp    0x405f22
  406015:	mov    rbx,rax
  406018:	jmp    0x405f22
  40601d:	nop    DWORD PTR [rax]
  406020:	sub    rsp,0x28
  406024:	lea    rcx,[rip+0x5015]        # 0x40b040
  40602b:	call   0x4036c0
  406030:	lea    rcx,[rip+0xffffffffffffb769]        # 0x4017a0
  406037:	add    rsp,0x28
  40603b:	jmp    0x4037f0
  406040:	(bad)  
  406041:	(bad)  
  406042:	(bad)  
  406043:	(bad)  
  406044:	(bad)  
  406045:	(bad)  
  406046:	(bad)  
  406047:	jmp    QWORD PTR [rax]
  406049:	(bad)  
  40604a:	add    BYTE PTR [rax],al
	...
  406055:	add    BYTE PTR [rax],al
  406057:	add    bh,bh
  406059:	(bad)  
  40605a:	(bad)  
  40605b:	(bad)  
  40605c:	(bad)  
  40605d:	(bad)  
  40605e:	(bad)  
  40605f:	inc    DWORD PTR [rax]
  406061:	add    BYTE PTR [rax],al
  406063:	add    BYTE PTR [rax],al
  406065:	add    BYTE PTR [rax],al
	...
