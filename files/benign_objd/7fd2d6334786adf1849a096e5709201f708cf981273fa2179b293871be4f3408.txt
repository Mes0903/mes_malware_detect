
7fd2d6334786adf1849a096e5709201f708cf981273fa2179b293871be4f3408.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rax,[rip+0x3f9]        # 0x140001400
   140001007:	mov    QWORD PTR [rip+0xb7e2],rax        # 0x14000c7f0
   14000100e:	lea    rax,[rip+0x4fb]        # 0x140001510
   140001015:	mov    QWORD PTR [rip+0xb7c4],rax        # 0x14000c7e0
   14000101c:	lea    rax,[rip+0x53d]        # 0x140001560
   140001023:	mov    QWORD PTR [rip+0xb7be],rax        # 0x14000c7e8
   14000102a:	ret    
   14000102b:	int3   
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	xor    edx,edx
   140001036:	lea    rcx,[rip+0xb833]        # 0x14000c870
   14000103d:	mov    r8d,0xa0
   140001043:	call   0x140005dc2
   140001048:	lea    rcx,[rip+0x51e1]        # 0x140006230
   14000104f:	add    rsp,0x28
   140001053:	jmp    0x1400056c4
   140001058:	int3   
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	lea    rcx,[rip+0x5259]        # 0x1400062c0
   140001067:	jmp    0x1400056c4
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	lea    rcx,[rip+0x5229]        # 0x1400062a0
   140001077:	jmp    0x1400056c4
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	lea    rcx,[rip+0x51f9]        # 0x140006280
   140001087:	jmp    0x1400056c4
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	int3   
   140001091:	int3   
   140001092:	int3   
   140001093:	int3   
   140001094:	int3   
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	ret    0x0
   1400010a3:	int3   
   1400010a4:	int3   
   1400010a5:	int3   
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	mov    QWORD PTR [rsp+0x18],r8
   1400010b1:	mov    QWORD PTR [rsp+0x20],r9
   1400010b6:	push   rbx
   1400010b7:	push   rsi
   1400010b8:	push   rdi
   1400010b9:	sub    rsp,0x20
   1400010bd:	mov    r10,rdx
   1400010c0:	lea    r9,[rsp+0x58]
   1400010c5:	sub    r10,rcx
   1400010c8:	mov    rsi,rdx
   1400010cb:	sar    r10,1
   1400010ce:	mov    rbx,rcx
   1400010d1:	lea    rax,[r10-0x1]
   1400010d5:	cmp    rax,0x7ffffffe
   1400010db:	ja     0x1400010ff
   1400010dd:	lea    rdi,[r10-0x1]
   1400010e1:	mov    rdx,rdi
   1400010e4:	call   QWORD PTR [rip+0x7256]        # 0x140008340
   1400010ea:	xor    ecx,ecx
   1400010ec:	test   eax,eax
   1400010ee:	js     0x1400010f9
   1400010f0:	cdqe   
   1400010f2:	cmp    rax,rdi
   1400010f5:	ja     0x1400010f9
   1400010f7:	jne    0x140001109
   1400010f9:	mov    WORD PTR [rbx+rdi*2],cx
   1400010fd:	jmp    0x140001109
   1400010ff:	xor    ecx,ecx
   140001101:	test   r10,r10
   140001104:	je     0x140001109
   140001106:	mov    WORD PTR [rbx],cx
   140001109:	cmp    rsi,rbx
   14000110c:	je     0x14000111f
   14000110e:	or     rax,0xffffffffffffffff
   140001112:	inc    rax
   140001115:	cmp    WORD PTR [rbx+rax*2],cx
   140001119:	jne    0x140001112
   14000111b:	lea    rbx,[rbx+rax*2]
   14000111f:	mov    rax,rbx
   140001122:	add    rsp,0x20
   140001126:	pop    rdi
   140001127:	pop    rsi
   140001128:	pop    rbx
   140001129:	ret    
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	mov    QWORD PTR [rsp+0x20],rbx
   140001135:	push   rbp
   140001136:	push   rsi
   140001137:	push   rdi
   140001138:	push   r14
   14000113a:	push   r15
   14000113c:	sub    rsp,0x250
   140001143:	mov    rax,QWORD PTR [rip+0xaebe]        # 0x14000c008
   14000114a:	xor    rax,rsp
   14000114d:	mov    QWORD PTR [rsp+0x240],rax
   140001155:	mov    r14,rcx
   140001158:	lea    rsi,[rip+0x73f1]        # 0x140008550
   14000115f:	mov    ecx,DWORD PTR [r8]
   140001162:	xor    r15d,r15d
   140001165:	mov    rbx,r8
   140001168:	mov    rdi,rdx
   14000116b:	test   ecx,ecx
   14000116d:	je     0x1400011a7
   14000116f:	sub    ecx,0x1
   140001172:	je     0x14000119e
   140001174:	sub    ecx,0x1
   140001177:	je     0x140001195
   140001179:	sub    ecx,0x1
   14000117c:	je     0x14000118c
   14000117e:	cmp    ecx,0x1
   140001181:	jne    0x1400011ae
   140001183:	lea    rsi,[rip+0x740e]        # 0x140008598
   14000118a:	jmp    0x1400011ae
   14000118c:	lea    rsi,[rip+0x73fd]        # 0x140008590
   140001193:	jmp    0x1400011ae
   140001195:	lea    rsi,[rip+0x73dc]        # 0x140008578
   14000119c:	jmp    0x1400011ae
   14000119e:	lea    rsi,[rip+0x73c3]        # 0x140008568
   1400011a5:	jmp    0x1400011ae
   1400011a7:	lea    rsi,[rip+0x73aa]        # 0x140008558
   1400011ae:	mov    r8d,DWORD PTR [r8+0x4]
   1400011b2:	lea    rax,[rsp+0x40]
   1400011b7:	mov    QWORD PTR [rsp+0x30],r15
   1400011bc:	mov    r9d,0x400
   1400011c2:	mov    DWORD PTR [rsp+0x28],0x100
   1400011ca:	xor    edx,edx
   1400011cc:	mov    ecx,0x1200
   1400011d1:	mov    QWORD PTR [rsp+0x20],rax
   1400011d6:	mov    WORD PTR [rsp+0x40],r15w
   1400011dc:	call   QWORD PTR [rip+0x6ee6]        # 0x1400080c8
   1400011e2:	mov    r9,QWORD PTR [rbx+0x30]
   1400011e6:	lea    rdi,[r14+rdi*2]
   1400011ea:	mov    rax,QWORD PTR [rbx+0x80]
   1400011f1:	mov    rdx,rdi
   1400011f4:	mov    rcx,r14
   1400011f7:	test   r9,r9
   1400011fa:	je     0x14000121f
   1400011fc:	mov    QWORD PTR [rsp+0x30],rax
   140001201:	lea    r8,[rip+0x73a0]        # 0x1400085a8
   140001208:	mov    rax,QWORD PTR [rbx+0x78]
   14000120c:	mov    QWORD PTR [rsp+0x28],rax
   140001211:	mov    eax,DWORD PTR [rbx+0x38]
   140001214:	mov    DWORD PTR [rsp+0x20],eax
   140001218:	call   0x1400010ac
   14000121d:	jmp    0x140001234
   14000121f:	mov    r9,QWORD PTR [rbx+0x78]
   140001223:	lea    r8,[rip+0x73a6]        # 0x1400085d0
   14000122a:	mov    QWORD PTR [rsp+0x20],rax
   14000122f:	call   0x1400010ac
   140001234:	mov    r9,QWORD PTR [rbx+0x88]
   14000123b:	mov    rbp,rax
   14000123e:	test   r9,r9
   140001241:	je     0x140001258
   140001243:	lea    r8,[rip+0x739e]        # 0x1400085e8
   14000124a:	mov    rdx,rdi
   14000124d:	mov    rcx,rax
   140001250:	call   0x1400010ac
   140001255:	mov    rbp,rax
   140001258:	call   QWORD PTR [rip+0x6e42]        # 0x1400080a0
   14000125e:	lea    rcx,[rsp+0x40]
   140001263:	mov    r9,rsi
   140001266:	mov    QWORD PTR [rsp+0x38],rcx
   14000126b:	lea    r8,[rip+0x7396]        # 0x140008608
   140001272:	mov    ecx,DWORD PTR [rbx+0x4]
   140001275:	mov    rdx,rdi
   140001278:	mov    DWORD PTR [rsp+0x30],ecx
   14000127c:	mov    rcx,rbp
   14000127f:	mov    DWORD PTR [rsp+0x28],eax
   140001283:	mov    eax,DWORD PTR [rbx+0x3c]
   140001286:	mov    DWORD PTR [rsp+0x20],eax
   14000128a:	call   0x1400010ac
   14000128f:	cmp    QWORD PTR [rbx+0x10],r15
   140001293:	jne    0x1400012a5
   140001295:	cmp    QWORD PTR [rbx+0x40],r15
   140001299:	jne    0x1400012a5
   14000129b:	cmp    QWORD PTR [rbx+0x28],r15
   14000129f:	je     0x140001335
   1400012a5:	lea    r8,[rip+0x7394]        # 0x140008640
   1400012ac:	mov    rdx,rdi
   1400012af:	mov    rcx,rax
   1400012b2:	call   0x1400010ac
   1400012b7:	mov    r9,QWORD PTR [rbx+0x10]
   1400012bb:	test   r9,r9
   1400012be:	je     0x1400012d2
   1400012c0:	lea    r8,[rip+0x7389]        # 0x140008650
   1400012c7:	mov    rdx,rdi
   1400012ca:	mov    rcx,rax
   1400012cd:	call   0x1400010ac
   1400012d2:	mov    r9,QWORD PTR [rbx+0x40]
   1400012d6:	test   r9,r9
   1400012d9:	je     0x1400012ed
   1400012db:	lea    r8,[rip+0x7386]        # 0x140008668
   1400012e2:	mov    rdx,rdi
   1400012e5:	mov    rcx,rax
   1400012e8:	call   0x1400010ac
   1400012ed:	mov    rcx,QWORD PTR [rbx+0x20]
   1400012f1:	mov    rdx,rdi
   1400012f4:	mov    r9,QWORD PTR [rbx+0x28]
   1400012f8:	test   rcx,rcx
   1400012fb:	je     0x140001313
   1400012fd:	mov    QWORD PTR [rsp+0x20],rcx
   140001302:	lea    r8,[rip+0x7387]        # 0x140008690
   140001309:	mov    rcx,rax
   14000130c:	call   0x1400010ac
   140001311:	jmp    0x140001335
   140001313:	mov    rcx,rax
   140001316:	test   r9,r9
   140001319:	je     0x140001329
   14000131b:	lea    r8,[rip+0x7386]        # 0x1400086a8
   140001322:	call   0x1400010ac
   140001327:	jmp    0x140001335
   140001329:	lea    r8,[rip+0x7388]        # 0x1400086b8
   140001330:	call   0x1400010ac
   140001335:	xor    eax,eax
   140001337:	mov    rcx,QWORD PTR [rsp+0x240]
   14000133f:	xor    rcx,rsp
   140001342:	call   0x1400055f0
   140001347:	mov    rbx,QWORD PTR [rsp+0x298]
   14000134f:	add    rsp,0x250
   140001356:	pop    r15
   140001358:	pop    r14
   14000135a:	pop    rdi
   14000135b:	pop    rsi
   14000135c:	pop    rbp
   14000135d:	ret    
   14000135e:	int3   
   14000135f:	int3   
   140001360:	int3   
   140001361:	int3   
   140001362:	int3   
   140001363:	int3   
   140001364:	mov    DWORD PTR [rip+0xb4ce],ecx        # 0x14000c838
   14000136a:	mov    eax,0x1
   14000136f:	lock xadd DWORD PTR [rip+0xb4a1],eax        # 0x14000c818
   140001377:	inc    eax
   140001379:	ret    
   14000137a:	int3   
   14000137b:	int3   
   14000137c:	int3   
   14000137d:	int3   
   14000137e:	int3   
   14000137f:	int3   
   140001380:	mov    DWORD PTR [rip+0xb3ea],ecx        # 0x14000c770
   140001386:	mov    eax,0x1
   14000138b:	lock xadd DWORD PTR [rip+0xb495],eax        # 0x14000c828
   140001393:	inc    eax
   140001395:	ret    
   140001396:	int3   
   140001397:	int3   
   140001398:	int3   
   140001399:	int3   
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	mov    DWORD PTR [rip+0xb48e],ecx        # 0x14000c830
   1400013a2:	mov    eax,0x1
   1400013a7:	lock xadd DWORD PTR [rip+0xb411],eax        # 0x14000c7c0
   1400013af:	inc    eax
   1400013b1:	ret    
   1400013b2:	int3   
   1400013b3:	int3   
   1400013b4:	int3   
   1400013b5:	int3   
   1400013b6:	int3   
   1400013b7:	int3   
   1400013b8:	mov    DWORD PTR [rip+0xb3b6],ecx        # 0x14000c774
   1400013be:	mov    eax,0x1
   1400013c3:	lock xadd DWORD PTR [rip+0xb3f9],eax        # 0x14000c7c4
   1400013cb:	inc    eax
   1400013cd:	ret    
   1400013ce:	int3   
   1400013cf:	int3   
   1400013d0:	int3   
   1400013d1:	int3   
   1400013d2:	int3   
   1400013d3:	int3   
   1400013d4:	int3   
   1400013d5:	int3   
   1400013d6:	int3   
   1400013d7:	int3   
   1400013d8:	int3   
   1400013d9:	int3   
   1400013da:	int3   
   1400013db:	int3   
   1400013dc:	int3   
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	mov    DWORD PTR [rip+0xb422],ecx        # 0x14000c808
   1400013e6:	mov    eax,0x1
   1400013eb:	ret    
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	int3   
   1400013f1:	int3   
   1400013f2:	int3   
   1400013f3:	int3   
   1400013f4:	int3   
   1400013f5:	int3   
   1400013f6:	int3   
   1400013f7:	int3   
   1400013f8:	int3   
   1400013f9:	int3   
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	mov    QWORD PTR [rsp+0x8],rbx
   140001405:	push   rsi
   140001406:	sub    rsp,0x150
   14000140d:	mov    rax,QWORD PTR [rip+0xabf4]        # 0x14000c008
   140001414:	xor    rax,rsp
   140001417:	mov    QWORD PTR [rsp+0x140],rax
   14000141f:	mov    al,BYTE PTR [rip+0xb40f]        # 0x14000c834
   140001425:	lea    rsi,[rip+0xb354]        # 0x14000c780
   14000142c:	test   al,al
   14000142e:	jne    0x1400014e4
   140001434:	mov    ebx,0x40
   140001439:	xor    edx,edx
   14000143b:	mov    r8d,ebx
   14000143e:	mov    rcx,rsi
   140001441:	call   0x140005dc2
   140001446:	and    QWORD PTR [rsp+0x20],0x0
   14000144c:	lea    r8,[rsp+0x20]
   140001451:	lea    rdx,[rip+0xffffffffffffff88]        # 0x1400013e0
   140001458:	lea    ecx,[rbx-0x3a]
   14000145b:	call   QWORD PTR [rip+0x6c8f]        # 0x1400080f0
   140001461:	test   eax,eax
   140001463:	je     0x1400014dd
   140001465:	mov    rcx,QWORD PTR [rsp+0x20]
   14000146a:	lea    rdx,[rsp+0x30]
   14000146f:	mov    r8d,0x104
   140001475:	call   QWORD PTR [rip+0x6c05]        # 0x140008080
   14000147b:	test   eax,eax
   14000147d:	je     0x1400014dd
   14000147f:	lea    rcx,[rsp+0x30]
   140001484:	or     rax,0xffffffffffffffff
   140001488:	inc    rax
   14000148b:	cmp    BYTE PTR [rcx+rax*1],0x0
   14000148f:	jne    0x140001488
   140001491:	lea    rdx,[rsp+0x30]
   140001496:	add    rdx,rax
   140001499:	jmp    0x1400014a4
   14000149b:	cmp    BYTE PTR [rdx-0x1],0x5c
   14000149f:	je     0x1400014ae
   1400014a1:	dec    rdx
   1400014a4:	lea    rax,[rsp+0x30]
   1400014a9:	cmp    rdx,rax
   1400014ac:	ja     0x14000149b
   1400014ae:	mov    rcx,rsi
   1400014b1:	sub    rdx,rsi
   1400014b4:	lea    rax,[rbx+0x7fffffbe]
   1400014bb:	test   rax,rax
   1400014be:	je     0x1400014d2
   1400014c0:	mov    al,BYTE PTR [rdx+rcx*1]
   1400014c3:	test   al,al
   1400014c5:	je     0x1400014d2
   1400014c7:	mov    BYTE PTR [rcx],al
   1400014c9:	inc    rcx
   1400014cc:	sub    rbx,0x1
   1400014d0:	jne    0x1400014b4
   1400014d2:	test   rbx,rbx
   1400014d5:	jne    0x1400014da
   1400014d7:	dec    rcx
   1400014da:	mov    BYTE PTR [rcx],0x0
   1400014dd:	mov    BYTE PTR [rip+0xb350],0x1        # 0x14000c834
   1400014e4:	mov    rax,rsi
   1400014e7:	mov    rcx,QWORD PTR [rsp+0x140]
   1400014ef:	xor    rcx,rsp
   1400014f2:	call   0x1400055f0
   1400014f7:	mov    rbx,QWORD PTR [rsp+0x160]
   1400014ff:	add    rsp,0x150
   140001506:	pop    rsi
   140001507:	ret    
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	rex push rbx
   140001512:	sub    rsp,0x20
   140001516:	lea    rcx,[rip+0x71a3]        # 0x1400086c0
   14000151d:	call   QWORD PTR [rip+0x6bb5]        # 0x1400080d8
   140001523:	test   rax,rax
   140001526:	je     0x14000154b
   140001528:	lea    rdx,[rip+0x71a9]        # 0x1400086d8
   14000152f:	mov    rcx,rax
   140001532:	call   QWORD PTR [rip+0x6b58]        # 0x140008090
   140001538:	mov    rbx,rax
   14000153b:	test   rax,rax
   14000153e:	je     0x14000154b
   140001540:	mov    rcx,rax
   140001543:	call   QWORD PTR [rip+0x6e67]        # 0x1400083b0
   140001549:	call   rbx
   14000154b:	add    rsp,0x20
   14000154f:	pop    rbx
   140001550:	ret    
   140001551:	int3   
   140001552:	int3   
   140001553:	int3   
   140001554:	int3   
   140001555:	int3   
   140001556:	int3   
   140001557:	int3   
   140001558:	int3   
   140001559:	int3   
   14000155a:	int3   
   14000155b:	int3   
   14000155c:	int3   
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	mov    QWORD PTR [rsp+0x8],rbx
   140001565:	mov    QWORD PTR [rsp+0x10],rsi
   14000156a:	push   rdi
   14000156b:	sub    rsp,0x20
   14000156f:	mov    rdi,QWORD PTR [rip+0xb2aa]        # 0x14000c820
   140001576:	xor    ebx,ebx
   140001578:	mov    esi,ecx
   14000157a:	test   rdi,rdi
   14000157d:	jne    0x1400015c6
   14000157f:	mov    rax,QWORD PTR [rip+0xb28a]        # 0x14000c810
   140001586:	test   rax,rax
   140001589:	jne    0x1400015a7
   14000158b:	xor    edx,edx
   14000158d:	lea    rcx,[rip+0x712c]        # 0x1400086c0
   140001594:	mov    r8d,0x800
   14000159a:	call   QWORD PTR [rip+0x6b60]        # 0x140008100
   1400015a0:	mov    QWORD PTR [rip+0xb269],rax        # 0x14000c810
   1400015a7:	lea    rdx,[rip+0x714a]        # 0x1400086f8
   1400015ae:	mov    rcx,rax
   1400015b1:	call   QWORD PTR [rip+0x6ad9]        # 0x140008090
   1400015b7:	mov    QWORD PTR [rip+0xb262],rax        # 0x14000c820
   1400015be:	mov    rdi,rax
   1400015c1:	test   rax,rax
   1400015c4:	je     0x1400015d5
   1400015c6:	mov    rcx,rdi
   1400015c9:	call   QWORD PTR [rip+0x6de1]        # 0x1400083b0
   1400015cf:	mov    ecx,esi
   1400015d1:	call   rdi
   1400015d3:	mov    ebx,eax
   1400015d5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400015da:	mov    eax,ebx
   1400015dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015e1:	add    rsp,0x20
   1400015e5:	pop    rdi
   1400015e6:	ret    
   1400015e7:	int3   
   1400015e8:	int3   
   1400015e9:	int3   
   1400015ea:	int3   
   1400015eb:	int3   
   1400015ec:	int3   
   1400015ed:	int3   
   1400015ee:	int3   
   1400015ef:	int3   
   1400015f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400015fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400015ff:	push   rdi
   140001600:	sub    rsp,0x20
   140001604:	xor    al,al
   140001606:	mov    BYTE PTR [r8],0x0
   14000160a:	mov    rbp,r9
   14000160d:	mov    rbx,r8
   140001610:	mov    rsi,rdx
   140001613:	mov    rdi,rcx
   140001616:	test   rdx,rdx
   140001619:	je     0x1400016c6
   14000161f:	mov    rdx,QWORD PTR [rdx+0x10]
   140001623:	call   0x1400015f0
   140001628:	mov    rdx,QWORD PTR [rsi+0x20]
   14000162c:	xor    esi,esi
   14000162e:	test   rdx,rdx
   140001631:	je     0x1400016c6
   140001637:	cmp    DWORD PTR [rdx],esi
   140001639:	jne    0x14000164a
   14000163b:	lea    eax,[rsi+0x1]
   14000163e:	lock xadd DWORD PTR [rip+0xa9da],eax        # 0x14000c020
   140001646:	inc    eax
   140001648:	mov    DWORD PTR [rdx],eax
   14000164a:	cmp    DWORD PTR [rdi+0x48],esi
   14000164d:	jne    0x140001660
   14000164f:	movups xmm0,XMMWORD PTR [rdx]
   140001652:	movups XMMWORD PTR [rdi+0x48],xmm0
   140001656:	movsd  xmm1,QWORD PTR [rdx+0x10]
   14000165b:	movsd  QWORD PTR [rdi+0x58],xmm1
   140001660:	movups xmm0,XMMWORD PTR [rdx]
   140001663:	or     rcx,0xffffffffffffffff
   140001667:	mov    rax,rcx
   14000166a:	movups XMMWORD PTR [rdi+0x60],xmm0
   14000166e:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140001673:	movsd  QWORD PTR [rdi+0x70],xmm1
   140001678:	lea    rdi,[rbx+rbp*1]
   14000167c:	inc    rax
   14000167f:	cmp    BYTE PTR [rbx+rax*1],sil
   140001683:	jne    0x14000167c
   140001685:	add    rbx,rax
   140001688:	mov    rax,rdi
   14000168b:	sub    rax,rbx
   14000168e:	cmp    rax,0x2
   140001692:	jle    0x1400016c4
   140001694:	mov    BYTE PTR [rbx],0x5c
   140001697:	inc    rbx
   14000169a:	mov    rdx,QWORD PTR [rdx+0x8]
   14000169e:	inc    rcx
   1400016a1:	cmp    BYTE PTR [rdx+rcx*1],sil
   1400016a5:	jne    0x14000169e
   1400016a7:	inc    rcx
   1400016aa:	sub    rdi,rbx
   1400016ad:	cmp    rcx,rdi
   1400016b0:	cmovb  rdi,rcx
   1400016b4:	mov    rcx,rbx
   1400016b7:	mov    r8,rdi
   1400016ba:	call   0x140005db6
   1400016bf:	mov    BYTE PTR [rdi+rbx*1-0x1],sil
   1400016c4:	mov    al,0x1
   1400016c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400016cb:	mov    rbp,QWORD PTR [rsp+0x38]
   1400016d0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400016d5:	add    rsp,0x20
   1400016d9:	pop    rdi
   1400016da:	ret    
   1400016db:	int3   
   1400016dc:	int3   
   1400016dd:	int3   
   1400016de:	int3   
   1400016df:	int3   
   1400016e0:	int3   
   1400016e1:	int3   
   1400016e2:	int3   
   1400016e3:	int3   
   1400016e4:	mov    QWORD PTR [rsp+0x10],rbx
   1400016e9:	mov    QWORD PTR [rsp+0x18],rbp
   1400016ee:	mov    QWORD PTR [rsp+0x20],rsi
   1400016f3:	push   rdi
   1400016f4:	push   r12
   1400016f6:	push   r13
   1400016f8:	push   r14
   1400016fa:	push   r15
   1400016fc:	sub    rsp,0x20
   140001700:	movups xmm0,XMMWORD PTR [rdx]
   140001703:	mov    rsi,rcx
   140001706:	or     r15,0xffffffffffffffff
   14000170a:	xor    edi,edi
   14000170c:	mov    r14,rdx
   14000170f:	movups XMMWORD PTR [rcx],xmm0
   140001712:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140001716:	lea    r12d,[r15+0x3]
   14000171a:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000171e:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140001722:	movups XMMWORD PTR [rcx+0x20],xmm0
   140001726:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14000172a:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000172e:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140001732:	movups XMMWORD PTR [rcx+0x40],xmm0
   140001736:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14000173a:	movups XMMWORD PTR [rcx+0x50],xmm1
   14000173e:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140001742:	movups XMMWORD PTR [rcx+0x60],xmm0
   140001746:	mov    ecx,0x80
   14000174b:	movups xmm0,XMMWORD PTR [rdx+0x70]
   14000174f:	movups XMMWORD PTR [rsi+rcx*1-0x10],xmm0
   140001754:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140001758:	movups XMMWORD PTR [rsi+rcx*1],xmm1
   14000175c:	mov    rcx,QWORD PTR [rdx+0x10]
   140001760:	test   rcx,rcx
   140001763:	jne    0x14000176c
   140001765:	mov    QWORD PTR [rsp+0x50],r12
   14000176a:	jmp    0x140001785
   14000176c:	mov    rax,r15
   14000176f:	inc    rax
   140001772:	cmp    WORD PTR [rcx+rax*2],di
   140001776:	jne    0x14000176f
   140001778:	lea    rax,[rax*2+0x2]
   140001780:	mov    QWORD PTR [rsp+0x50],rax
   140001785:	mov    rax,QWORD PTR [rdx+0x20]
   140001789:	test   rax,rax
   14000178c:	jne    0x140001795
   14000178e:	lea    ebx,[rax+0x1]
   140001791:	mov    ecx,ebx
   140001793:	jmp    0x1400017a9
   140001795:	mov    rcx,r15
   140001798:	inc    rcx
   14000179b:	cmp    BYTE PTR [rax+rcx*1],dil
   14000179f:	jne    0x140001798
   1400017a1:	mov    ebx,0x1
   1400017a6:	add    rcx,rbx
   1400017a9:	mov    rax,QWORD PTR [rdx+0x28]
   1400017ad:	test   rax,rax
   1400017b0:	jne    0x1400017b7
   1400017b2:	mov    r9,rbx
   1400017b5:	jmp    0x1400017c6
   1400017b7:	mov    r9,r15
   1400017ba:	inc    r9
   1400017bd:	cmp    BYTE PTR [rax+r9*1],dil
   1400017c1:	jne    0x1400017ba
   1400017c3:	add    r9,rbx
   1400017c6:	mov    rax,QWORD PTR [rdx+0x30]
   1400017ca:	test   rax,rax
   1400017cd:	jne    0x1400017d4
   1400017cf:	mov    r11,rbx
   1400017d2:	jmp    0x1400017e3
   1400017d4:	mov    r11,r15
   1400017d7:	inc    r11
   1400017da:	cmp    BYTE PTR [rax+r11*1],dil
   1400017de:	jne    0x1400017d7
   1400017e0:	add    r11,rbx
   1400017e3:	mov    rax,QWORD PTR [rdx+0x40]
   1400017e7:	test   rax,rax
   1400017ea:	jne    0x1400017f1
   1400017ec:	mov    r10,rbx
   1400017ef:	jmp    0x140001800
   1400017f1:	mov    r10,r15
   1400017f4:	inc    r10
   1400017f7:	cmp    BYTE PTR [rax+r10*1],dil
   1400017fb:	jne    0x1400017f4
   1400017fd:	add    r10,rbx
   140001800:	mov    rax,QWORD PTR [rdx+0x78]
   140001804:	test   rax,rax
   140001807:	jne    0x14000180e
   140001809:	mov    r8,rbx
   14000180c:	jmp    0x14000181d
   14000180e:	mov    r8,r15
   140001811:	inc    r8
   140001814:	cmp    BYTE PTR [rax+r8*1],dil
   140001818:	jne    0x140001811
   14000181a:	add    r8,rbx
   14000181d:	mov    rax,QWORD PTR [rdx+0x68]
   140001821:	test   rax,rax
   140001824:	jne    0x14000182b
   140001826:	mov    rdx,rbx
   140001829:	jmp    0x14000183a
   14000182b:	mov    rdx,r15
   14000182e:	inc    rdx
   140001831:	cmp    BYTE PTR [rax+rdx*1],dil
   140001835:	jne    0x14000182e
   140001837:	add    rdx,rbx
   14000183a:	mov    rbp,QWORD PTR [r14+0x70]
   14000183e:	test   rbp,rbp
   140001841:	jne    0x140001848
   140001843:	mov    r13,r12
   140001846:	jmp    0x14000185d
   140001848:	mov    rax,r15
   14000184b:	inc    rax
   14000184e:	cmp    WORD PTR [rbp+rax*2+0x0],di
   140001853:	jne    0x14000184b
   140001855:	lea    r13,[rax*2+0x2]
   14000185d:	mov    rbp,QWORD PTR [r14+0x50]
   140001861:	test   rbp,rbp
   140001864:	jne    0x14000186b
   140001866:	mov    rax,rbx
   140001869:	jmp    0x14000187a
   14000186b:	mov    rax,r15
   14000186e:	inc    rax
   140001871:	cmp    BYTE PTR [rax+rbp*1],dil
   140001875:	jne    0x14000186e
   140001877:	add    rax,rbx
   14000187a:	mov    r15,QWORD PTR [r14+0x58]
   14000187e:	test   r15,r15
   140001881:	je     0x140001899
   140001883:	or     rbp,0xffffffffffffffff
   140001887:	inc    rbp
   14000188a:	cmp    WORD PTR [r15+rbp*2],di
   14000188f:	jne    0x140001887
   140001891:	lea    r12,[rbp*2+0x2]
   140001899:	lea    rbp,[r12+rax*1]
   14000189d:	mov    rax,QWORD PTR [rsi+0x90]
   1400018a4:	add    rbp,r13
   1400018a7:	add    rbp,rdx
   1400018aa:	add    rbp,r8
   1400018ad:	add    rbp,r10
   1400018b0:	add    rbp,r11
   1400018b3:	add    rbp,r9
   1400018b6:	add    rbp,rcx
   1400018b9:	add    rbp,QWORD PTR [rsp+0x50]
   1400018be:	test   rax,rax
   1400018c1:	je     0x1400018d4
   1400018c3:	cmp    DWORD PTR [rax],ebx
   1400018c5:	jne    0x1400018d4
   1400018c7:	cmp    QWORD PTR [rsi+0x98],rbp
   1400018ce:	jae    0x14000199a
   1400018d4:	mov    rcx,rax
   1400018d7:	test   rax,rax
   1400018da:	je     0x140001903
   1400018dc:	or     eax,0xffffffff
   1400018df:	lock xadd DWORD PTR [rcx],eax
   1400018e3:	cmp    eax,0x1
   1400018e6:	jne    0x1400018f5
   1400018e8:	mov    rcx,QWORD PTR [rsi+0x90]
   1400018ef:	call   QWORD PTR [rip+0x697b]        # 0x140008270
   1400018f5:	mov    QWORD PTR [rsi+0x90],rdi
   1400018fc:	mov    QWORD PTR [rsi+0x98],rdi
   140001903:	test   rbp,rbp
   140001906:	jne    0x140001941
   140001908:	mov    rcx,QWORD PTR [rsi+0x90]
   14000190f:	test   rcx,rcx
   140001912:	je     0x14000199a
   140001918:	or     eax,0xffffffff
   14000191b:	lock xadd DWORD PTR [rcx],eax
   14000191f:	cmp    eax,0x1
   140001922:	jne    0x140001931
   140001924:	mov    rcx,QWORD PTR [rsi+0x90]
   14000192b:	call   QWORD PTR [rip+0x693f]        # 0x140008270
   140001931:	mov    QWORD PTR [rsi+0x90],rdi
   140001938:	mov    QWORD PTR [rsi+0x98],rdi
   14000193f:	jmp    0x14000199a
   140001941:	lea    rcx,[rbp+0x4]
   140001945:	call   QWORD PTR [rip+0x6965]        # 0x1400082b0
   14000194b:	mov    r15,rax
   14000194e:	test   rax,rax
   140001951:	je     0x14000199a
   140001953:	mov    DWORD PTR [rax],edi
   140001955:	mov    rax,QWORD PTR [rsi+0x90]
   14000195c:	test   rax,rax
   14000195f:	je     0x140001988
   140001961:	or     ecx,0xffffffff
   140001964:	lock xadd DWORD PTR [rax],ecx
   140001968:	cmp    ecx,0x1
   14000196b:	jne    0x14000197a
   14000196d:	mov    rcx,QWORD PTR [rsi+0x90]
   140001974:	call   QWORD PTR [rip+0x68f6]        # 0x140008270
   14000197a:	mov    QWORD PTR [rsi+0x90],rdi
   140001981:	mov    QWORD PTR [rsi+0x98],rdi
   140001988:	mov    QWORD PTR [rsi+0x90],r15
   14000198f:	mov    QWORD PTR [rsi+0x98],rbp
   140001996:	lock add DWORD PTR [r15],ebx
   14000199a:	mov    rax,QWORD PTR [rsi+0x90]
   1400019a1:	mov    rcx,QWORD PTR [rsi+0x98]
   1400019a8:	test   rax,rax
   1400019ab:	je     0x1400019b1
   1400019ad:	lea    rdi,[rax+0x4]
   1400019b1:	mov    r8,QWORD PTR [r14+0x10]
   1400019b5:	lea    rdx,[rcx+rdi*1]
   1400019b9:	mov    rax,rdi
   1400019bc:	lea    r9,[rsi+0x10]
   1400019c0:	neg    rax
   1400019c3:	mov    rcx,rdi
   1400019c6:	sbb    rbx,rbx
   1400019c9:	and    rbx,rdx
   1400019cc:	mov    rdx,rbx
   1400019cf:	call   0x140003cbc
   1400019d4:	mov    r8,QWORD PTR [r14+0x20]
   1400019d8:	lea    r9,[rsi+0x20]
   1400019dc:	mov    rdx,rbx
   1400019df:	mov    rcx,rax
   1400019e2:	call   0x140003d74
   1400019e7:	mov    r8,QWORD PTR [r14+0x28]
   1400019eb:	lea    r9,[rsi+0x28]
   1400019ef:	mov    rdx,rbx
   1400019f2:	mov    rcx,rax
   1400019f5:	call   0x140003d74
   1400019fa:	mov    r8,QWORD PTR [r14+0x30]
   1400019fe:	lea    r9,[rsi+0x30]
   140001a02:	mov    rdx,rbx
   140001a05:	mov    rcx,rax
   140001a08:	call   0x140003d74
   140001a0d:	mov    r8,QWORD PTR [r14+0x40]
   140001a11:	lea    r9,[rsi+0x40]
   140001a15:	mov    rdx,rbx
   140001a18:	mov    rcx,rax
   140001a1b:	call   0x140003d74
   140001a20:	mov    r8,QWORD PTR [r14+0x78]
   140001a24:	lea    r9,[rsi+0x78]
   140001a28:	mov    rdx,rbx
   140001a2b:	mov    rcx,rax
   140001a2e:	call   0x140003d74
   140001a33:	mov    r8,QWORD PTR [r14+0x68]
   140001a37:	lea    r9,[rsi+0x68]
   140001a3b:	mov    rdx,rbx
   140001a3e:	mov    rcx,rax
   140001a41:	call   0x140003d74
   140001a46:	mov    r8,QWORD PTR [r14+0x70]
   140001a4a:	lea    r9,[rsi+0x70]
   140001a4e:	mov    rdx,rbx
   140001a51:	mov    rcx,rax
   140001a54:	call   0x140003cbc
   140001a59:	mov    r8,QWORD PTR [r14+0x50]
   140001a5d:	lea    r9,[rsi+0x50]
   140001a61:	mov    rdx,rbx
   140001a64:	mov    rcx,rax
   140001a67:	call   0x140003d74
   140001a6c:	mov    r8,QWORD PTR [r14+0x58]
   140001a70:	lea    r9,[rsi+0x58]
   140001a74:	mov    rdx,rbx
   140001a77:	mov    rcx,rax
   140001a7a:	mov    rbx,QWORD PTR [rsp+0x58]
   140001a7f:	mov    rbp,QWORD PTR [rsp+0x60]
   140001a84:	mov    rsi,QWORD PTR [rsp+0x68]
   140001a89:	add    rsp,0x20
   140001a8d:	pop    r15
   140001a8f:	pop    r14
   140001a91:	pop    r13
   140001a93:	pop    r12
   140001a95:	pop    rdi
   140001a96:	jmp    0x140003cbc
   140001a9b:	int3   
   140001a9c:	int3   
   140001a9d:	int3   
   140001a9e:	int3   
   140001a9f:	int3   
   140001aa0:	int3   
   140001aa1:	int3   
   140001aa2:	int3   
   140001aa3:	int3   
   140001aa4:	rex push rbx
   140001aa6:	sub    rsp,0x20
   140001aaa:	and    QWORD PTR [rcx+0x90],0x0
   140001ab2:	mov    rbx,rcx
   140001ab5:	and    QWORD PTR [rcx+0x98],0x0
   140001abd:	call   0x1400016e4
   140001ac2:	mov    rax,rbx
   140001ac5:	add    rsp,0x20
   140001ac9:	pop    rbx
   140001aca:	ret    
   140001acb:	int3   
   140001acc:	int3   
   140001acd:	int3   
   140001ace:	int3   
   140001acf:	int3   
   140001ad0:	int3   
   140001ad1:	int3   
   140001ad2:	int3   
   140001ad3:	int3   
   140001ad4:	mov    QWORD PTR [rsp+0x18],rbx
   140001ad9:	mov    DWORD PTR [rsp+0x10],edx
   140001add:	mov    QWORD PTR [rsp+0x8],rcx
   140001ae2:	push   rbp
   140001ae3:	push   rsi
   140001ae4:	push   rdi
   140001ae5:	push   r12
   140001ae7:	push   r13
   140001ae9:	push   r14
   140001aeb:	push   r15
   140001aed:	sub    rsp,0x40
   140001af1:	mov    r14d,DWORD PTR [rsp+0xb0]
   140001af9:	mov    r13,r8
   140001afc:	mov    r15,QWORD PTR [rsp+0xd0]
   140001b04:	xor    r8d,r8d
   140001b07:	mov    rbp,QWORD PTR [rsp+0xe0]
   140001b0f:	mov    r12,r9
   140001b12:	mov    ebx,DWORD PTR [rsp+0xb8]
   140001b19:	mov    edi,r8d
   140001b1c:	mov    r10d,r14d
   140001b1f:	mov    WORD PTR [r15],r8w
   140001b23:	mov    BYTE PTR [rbp+0x0],r8b
   140001b27:	test   r14d,r14d
   140001b2a:	je     0x140001b9f
   140001b2c:	sub    r10d,0x1
   140001b30:	je     0x140001b96
   140001b32:	sub    r10d,0x1
   140001b36:	je     0x140001b8d
   140001b38:	sub    r10d,0x1
   140001b3c:	je     0x140001b4d
   140001b3e:	cmp    r10d,0x1
   140001b42:	jne    0x140001ba8
   140001b44:	mov    ecx,ebx
   140001b46:	call   0x1400013e0
   140001b4b:	jmp    0x140001ba6
   140001b4d:	test   ebx,ebx
   140001b4f:	js     0x140001b84
   140001b51:	mov    rax,QWORD PTR [rsp+0xa8]
   140001b59:	mov    ebx,0x8007029c
   140001b5e:	mov    DWORD PTR [rsp+0x38],ebx
   140001b62:	mov    r8,r13
   140001b65:	mov    DWORD PTR [rsp+0x30],0x3
   140001b6d:	mov    QWORD PTR [rsp+0x28],rax
   140001b72:	mov    rax,QWORD PTR [rsp+0xa0]
   140001b7a:	mov    QWORD PTR [rsp+0x20],rax
   140001b7f:	call   0x14000203c
   140001b84:	mov    ecx,ebx
   140001b86:	call   0x1400013b8
   140001b8b:	jmp    0x140001ba6
   140001b8d:	mov    ecx,ebx
   140001b8f:	call   0x14000139c
   140001b94:	jmp    0x140001ba6
   140001b96:	mov    ecx,ebx
   140001b98:	call   0x140001380
   140001b9d:	jmp    0x140001ba6
   140001b9f:	mov    ecx,ebx
   140001ba1:	call   0x140001364
   140001ba6:	mov    edi,eax
   140001ba8:	mov    rsi,QWORD PTR [rsp+0xf0]
   140001bb0:	mov    DWORD PTR [rsi],r14d
   140001bb3:	mov    r14d,0x1
   140001bb9:	mov    eax,r14d
   140001bbc:	mov    DWORD PTR [rsi+0x4],ebx
   140001bbf:	lock xadd DWORD PTR [rip+0xac65],eax        # 0x14000c82c
   140001bc7:	add    eax,r14d
   140001bca:	xor    ecx,ecx
   140001bcc:	mov    DWORD PTR [rsi+0x8],eax
   140001bcf:	mov    rax,QWORD PTR [rsp+0xc0]
   140001bd7:	test   rax,rax
   140001bda:	je     0x140001be1
   140001bdc:	cmp    WORD PTR [rax],cx
   140001bdf:	jne    0x140001be4
   140001be1:	mov    rax,rcx
   140001be4:	mov    QWORD PTR [rsi+0x10],rax
   140001be8:	call   QWORD PTR [rip+0x64b2]        # 0x1400080a0
   140001bee:	mov    rbx,QWORD PTR [rip+0xabfb]        # 0x14000c7f0
   140001bf5:	mov    DWORD PTR [rsi+0x18],eax
   140001bf8:	mov    eax,DWORD PTR [rsp+0x88]
   140001bff:	mov    DWORD PTR [rsi+0x38],eax
   140001c02:	mov    rax,QWORD PTR [rsp+0xa0]
   140001c0a:	mov    QWORD PTR [rsi+0x20],rax
   140001c0e:	mov    rax,QWORD PTR [rsp+0xa8]
   140001c16:	mov    QWORD PTR [rsi+0x80],rax
   140001c1d:	mov    rax,QWORD PTR [rsp+0x80]
   140001c25:	mov    QWORD PTR [rsi+0x30],r13
   140001c29:	xor    r13d,r13d
   140001c2c:	mov    QWORD PTR [rsi+0x88],rax
   140001c33:	mov    DWORD PTR [rsi+0x3c],edi
   140001c36:	mov    QWORD PTR [rsi+0x28],r12
   140001c3a:	mov    QWORD PTR [rsi+0x40],r13
   140001c3e:	mov    DWORD PTR [rsi+0x60],r13d
   140001c42:	mov    QWORD PTR [rsi+0x68],r13
   140001c46:	mov    QWORD PTR [rsi+0x70],r13
   140001c4a:	mov    DWORD PTR [rsi+0x48],r13d
   140001c4e:	mov    QWORD PTR [rsi+0x50],r13
   140001c52:	mov    QWORD PTR [rsi+0x58],r13
   140001c56:	test   rbx,rbx
   140001c59:	je     0x140001c68
   140001c5b:	mov    rcx,rbx
   140001c5e:	call   QWORD PTR [rip+0x674c]        # 0x1400083b0
   140001c64:	call   rbx
   140001c66:	jmp    0x140001c6b
   140001c68:	mov    rax,r13
   140001c6b:	mov    QWORD PTR [rsi+0x78],rax
   140001c6f:	mov    r12b,r13b
   140001c72:	mov    BYTE PTR [rbp+0x0],r13b
   140001c76:	call   QWORD PTR [rip+0x6424]        # 0x1400080a0
   140001c7c:	mov    r8d,eax
   140001c7f:	lea    rbx,[rip+0xabea]        # 0x14000c870
   140001c86:	mov    r9d,eax
   140001c89:	movabs rax,0xcccccccccccccccd
   140001c93:	mul    r9
   140001c96:	shr    rdx,0x4
   140001c9a:	lea    rcx,[rdx+rdx*4]
   140001c9e:	shl    rcx,0x2
   140001ca2:	sub    r8,rcx
   140001ca5:	mov    rbx,QWORD PTR [rbx+r8*8]
   140001ca9:	jmp    0x140001cb5
   140001cab:	cmp    DWORD PTR [rbx+0x8],r9d
   140001caf:	je     0x140001cbd
   140001cb1:	mov    rbx,QWORD PTR [rbx+0x10]
   140001cb5:	test   rbx,rbx
   140001cb8:	jne    0x140001cab
   140001cba:	mov    rbx,r13
   140001cbd:	test   rbx,rbx
   140001cc0:	je     0x140001d11
   140001cc2:	cmp    QWORD PTR [rbx],r13
   140001cc5:	je     0x140001d11
   140001cc7:	mov    BYTE PTR [rbp+0x0],r13b
   140001ccb:	mov    r9d,0x400
   140001cd1:	mov    rdx,QWORD PTR [rbx]
   140001cd4:	mov    r8,rbp
   140001cd7:	mov    rcx,rsi
   140001cda:	call   0x1400015f0
   140001cdf:	test   al,al
   140001ce1:	je     0x140001ce7
   140001ce3:	mov    QWORD PTR [rsi+0x40],rbp
   140001ce7:	mov    rbp,QWORD PTR [rbx]
   140001cea:	mov    rdi,QWORD PTR [rbp+0x8]
   140001cee:	mov    rax,QWORD PTR [rdi]
   140001cf1:	mov    rbx,QWORD PTR [rax]
   140001cf4:	mov    rcx,rbx
   140001cf7:	call   QWORD PTR [rip+0x66b3]        # 0x1400083b0
   140001cfd:	mov    rdx,rsi
   140001d00:	mov    rcx,rdi
   140001d03:	call   rbx
   140001d05:	mov    rbp,QWORD PTR [rbp+0x10]
   140001d09:	or     r12b,al
   140001d0c:	test   rbp,rbp
   140001d0f:	jne    0x140001cea
   140001d11:	mov    rdi,QWORD PTR [rip+0xaab8]        # 0x14000c7d0
   140001d18:	test   rdi,rdi
   140001d1b:	je     0x140001d35
   140001d1d:	mov    rcx,rdi
   140001d20:	call   QWORD PTR [rip+0x668a]        # 0x1400083b0
   140001d26:	mov    rdx,rsi
   140001d29:	mov    cl,r12b
   140001d2c:	call   rdi
   140001d2e:	mov    rdi,QWORD PTR [rip+0xaa9b]        # 0x14000c7d0
   140001d35:	mov    rbx,QWORD PTR [rip+0xaa8c]        # 0x14000c7c8
   140001d3c:	test   rbx,rbx
   140001d3f:	je     0x140001d56
   140001d41:	mov    rcx,rbx
   140001d44:	call   QWORD PTR [rip+0x6666]        # 0x1400083b0
   140001d4a:	mov    rcx,rsi
   140001d4d:	call   rbx
   140001d4f:	mov    rdi,QWORD PTR [rip+0xaa7a]        # 0x14000c7d0
   140001d56:	cmp    DWORD PTR [rsi+0x4],r13d
   140001d5a:	jl     0x140001d6a
   140001d5c:	cmp    DWORD PTR [rsp+0xb0],0x4
   140001d64:	jne    0x140001e11
   140001d6a:	cmp    BYTE PTR [rip+0xaa88],r13b        # 0x14000c7f9
   140001d71:	mov    rbx,QWORD PTR [rip+0xaa88]        # 0x14000c800
   140001d78:	jne    0x140001d87
   140001d7a:	test   rdi,rdi
   140001d7d:	jne    0x140001d84
   140001d7f:	test   rbx,rbx
   140001d82:	je     0x140001d87
   140001d84:	mov    r14b,r13b
   140001d87:	cmp    BYTE PTR [rsp+0xc8],r13b
   140001d8f:	jne    0x140001db9
   140001d91:	test   r14b,r14b
   140001d94:	jne    0x140001db9
   140001d96:	test   rbx,rbx
   140001d99:	je     0x140001df9
   140001d9b:	cmp    BYTE PTR [rip+0xaa56],r13b        # 0x14000c7f8
   140001da2:	jne    0x140001df9
   140001da4:	mov    rcx,rbx
   140001da7:	call   QWORD PTR [rip+0x6603]        # 0x1400083b0
   140001dad:	xor    r8d,r8d
   140001db0:	xor    edx,edx
   140001db2:	mov    rcx,rsi
   140001db5:	call   rbx
   140001db7:	jmp    0x140001df9
   140001db9:	mov    edi,0x800
   140001dbe:	test   rbx,rbx
   140001dc1:	je     0x140001dd7
   140001dc3:	mov    rcx,rbx
   140001dc6:	call   QWORD PTR [rip+0x65e4]        # 0x1400083b0
   140001dcc:	mov    r8d,edi
   140001dcf:	mov    rdx,r15
   140001dd2:	mov    rcx,rsi
   140001dd5:	call   rbx
   140001dd7:	cmp    WORD PTR [r15],r13w
   140001ddb:	jne    0x140001deb
   140001ddd:	mov    r8,rsi
   140001de0:	mov    rdx,rdi
   140001de3:	mov    rcx,r15
   140001de6:	call   0x140001130
   140001deb:	test   r14b,r14b
   140001dee:	je     0x140001df9
   140001df0:	mov    rcx,r15
   140001df3:	call   QWORD PTR [rip+0x62e7]        # 0x1400080e0
   140001df9:	mov    rbx,QWORD PTR [rsp+0x90]
   140001e01:	add    rsp,0x40
   140001e05:	pop    r15
   140001e07:	pop    r14
   140001e09:	pop    r13
   140001e0b:	pop    r12
   140001e0d:	pop    rdi
   140001e0e:	pop    rsi
   140001e0f:	pop    rbp
   140001e10:	ret    
   140001e11:	mov    rcx,QWORD PTR [rsp+0x78]
   140001e16:	lea    rax,[rip+0x691b]        # 0x140008738
   140001e1d:	lea    r9,[rip+0x6954]        # 0x140008778
   140001e24:	mov    QWORD PTR [rsp+0x20],rax
   140001e29:	lea    r8,[rip+0x68e8]        # 0x140008718
   140001e30:	mov    edx,0xb46
   140001e35:	call   0x1400021bc
   140001e3a:	int3   
   140001e3b:	int3   
   140001e3c:	int3   
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	int3   
   140001e41:	int3   
   140001e42:	int3   
   140001e43:	int3   
   140001e44:	rex push rbx
   140001e46:	push   rdi
   140001e47:	mov    eax,0x15c8
   140001e4c:	call   0x140005e00
   140001e51:	sub    rsp,rax
   140001e54:	mov    rax,QWORD PTR [rip+0xa1ad]        # 0x14000c008
   140001e5b:	xor    rax,rsp
   140001e5e:	mov    QWORD PTR [rsp+0x15b0],rax
   140001e66:	mov    edi,DWORD PTR [rsp+0x1610]
   140001e6d:	mov    r10,QWORD PTR [rsp+0x1600]
   140001e75:	mov    r11,QWORD PTR [rsp+0x1608]
   140001e7d:	test   edi,edi
   140001e7f:	jne    0x140001e8f
   140001e81:	cmp    QWORD PTR [rip+0xa94f],0x0        # 0x14000c7d8
   140001e89:	je     0x140001e8f
   140001e8b:	mov    bl,0x1
   140001e8d:	jmp    0x140001e91
   140001e8f:	xor    bl,bl
   140001e91:	lea    rax,[rsp+0x80]
   140001e99:	mov    QWORD PTR [rsp+0x70],rax
   140001e9e:	lea    rax,[rsp+0x1b0]
   140001ea6:	mov    QWORD PTR [rsp+0x60],rax
   140001eab:	lea    rax,[rsp+0x5b0]
   140001eb3:	mov    QWORD PTR [rsp+0x50],rax
   140001eb8:	mov    eax,DWORD PTR [rsp+0x1618]
   140001ebf:	mov    BYTE PTR [rsp+0x48],bl
   140001ec3:	and    QWORD PTR [rsp+0x40],0x0
   140001ec9:	mov    DWORD PTR [rsp+0x38],eax
   140001ecd:	mov    DWORD PTR [rsp+0x30],edi
   140001ed1:	mov    QWORD PTR [rsp+0x28],r11
   140001ed6:	mov    QWORD PTR [rsp+0x20],r10
   140001edb:	call   0x140001ad4
   140001ee0:	cmp    edi,0x4
   140001ee3:	jne    0x140001f04
   140001ee5:	lea    ecx,[rdi+0x3]
   140001ee8:	int    0x29
   140001eea:	mov    rcx,QWORD PTR [rsp+0x15b0]
   140001ef2:	xor    rcx,rsp
   140001ef5:	call   0x1400055f0
   140001efa:	add    rsp,0x15c8
   140001f01:	pop    rdi
   140001f02:	pop    rbx
   140001f03:	ret    
   140001f04:	test   edi,edi
   140001f06:	jne    0x140001eea
   140001f08:	test   bl,bl
   140001f0a:	je     0x140001f2e
   140001f0c:	mov    rbx,QWORD PTR [rip+0xa8c5]        # 0x14000c7d8
   140001f13:	mov    rcx,rbx
   140001f16:	call   QWORD PTR [rip+0x6494]        # 0x1400083b0
   140001f1c:	lea    rdx,[rsp+0x5b0]
   140001f24:	lea    rcx,[rsp+0x80]
   140001f2c:	call   rbx
   140001f2e:	lea    rdx,[rsp+0x80]
   140001f36:	lea    rcx,[rsp+0x110]
   140001f3e:	call   0x140001aa4
   140001f43:	lea    rdx,[rip+0x813e]        # 0x14000a088
   140001f4a:	lea    rcx,[rsp+0x110]
   140001f52:	call   0x140005c7c
   140001f57:	int3   
   140001f58:	int3   
   140001f59:	int3   
   140001f5a:	int3   
   140001f5b:	int3   
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	rex push rbx
   140001f62:	sub    rsp,0x20
   140001f66:	mov    rbx,rcx
   140001f69:	mov    rcx,QWORD PTR [rcx+0x90]
   140001f70:	test   rcx,rcx
   140001f73:	je     0x140001f9e
   140001f75:	or     eax,0xffffffff
   140001f78:	lock xadd DWORD PTR [rcx],eax
   140001f7c:	cmp    eax,0x1
   140001f7f:	jne    0x140001f8e
   140001f81:	mov    rcx,QWORD PTR [rbx+0x90]
   140001f88:	call   QWORD PTR [rip+0x62e2]        # 0x140008270
   140001f8e:	and    QWORD PTR [rbx+0x90],0x0
   140001f96:	and    QWORD PTR [rbx+0x98],0x0
   140001f9e:	add    rsp,0x20
   140001fa2:	pop    rbx
   140001fa3:	ret    
   140001fa4:	int3   
   140001fa5:	int3   
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	movups xmm0,XMMWORD PTR [rdx]
   140001faf:	mov    r9d,0x80
   140001fb5:	movups XMMWORD PTR [rcx],xmm0
   140001fb8:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140001fbc:	movups XMMWORD PTR [rcx+0x10],xmm1
   140001fc0:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140001fc4:	movups XMMWORD PTR [rcx+0x20],xmm0
   140001fc8:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140001fcc:	movups XMMWORD PTR [rcx+0x30],xmm1
   140001fd0:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140001fd4:	movups XMMWORD PTR [rcx+0x40],xmm0
   140001fd8:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140001fdc:	movups XMMWORD PTR [rcx+0x50],xmm1
   140001fe0:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140001fe4:	movups XMMWORD PTR [rcx+0x60],xmm0
   140001fe8:	movups xmm0,XMMWORD PTR [rdx+0x70]
   140001fec:	movups XMMWORD PTR [rcx+r9*1-0x10],xmm0
   140001ff2:	movups xmm1,XMMWORD PTR [rdx+r9*1]
   140001ff7:	movups XMMWORD PTR [rcx+r9*1],xmm1
   140001ffc:	and    QWORD PTR [rcx+0x90],0x0
   140002004:	and    QWORD PTR [rcx+0x98],0x0
   14000200c:	mov    rax,QWORD PTR [rdx+0x90]
   140002013:	mov    r8,QWORD PTR [rdx+0x98]
   14000201a:	test   rax,rax
   14000201d:	je     0x140002030
   14000201f:	mov    QWORD PTR [rcx+0x90],rax
   140002026:	mov    QWORD PTR [rcx+0x98],r8
   14000202d:	lock inc DWORD PTR [rax]
   140002030:	mov    rax,rcx
   140002033:	ret    
   140002034:	int3   
   140002035:	int3   
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	sub    rsp,0x58
   140002040:	mov    eax,DWORD PTR [rsp+0x98]
   140002047:	mov    DWORD PTR [rsp+0x38],eax
   14000204b:	mov    eax,DWORD PTR [rsp+0x90]
   140002052:	mov    DWORD PTR [rsp+0x30],eax
   140002056:	mov    rax,QWORD PTR [rsp+0x88]
   14000205e:	mov    QWORD PTR [rsp+0x28],rax
   140002063:	mov    rax,QWORD PTR [rsp+0x80]
   14000206b:	mov    QWORD PTR [rsp+0x20],rax
   140002070:	call   0x140001e44
   140002075:	add    rsp,0x58
   140002079:	ret    
   14000207a:	int3   
   14000207b:	int3   
   14000207c:	int3   
   14000207d:	int3   
   14000207e:	int3   
   14000207f:	int3   
   140002080:	mov    rax,rsp
   140002083:	mov    QWORD PTR [rax+0x8],rbx
   140002087:	mov    QWORD PTR [rax+0x10],rbp
   14000208b:	mov    QWORD PTR [rax+0x18],rsi
   14000208f:	mov    QWORD PTR [rax+0x20],rdi
   140002093:	push   r12
   140002095:	push   r14
   140002097:	push   r15
   140002099:	sub    rsp,0x50
   14000209d:	mov    rdi,r9
   1400020a0:	mov    rsi,r8
   1400020a3:	mov    ebp,edx
   1400020a5:	mov    r14,rcx
   1400020a8:	call   QWORD PTR [rip+0x600a]        # 0x1400080b8
   1400020ae:	mov    r15,QWORD PTR [rsp+0x98]
   1400020b6:	mov    r12,QWORD PTR [rsp+0x90]
   1400020be:	test   eax,eax
   1400020c0:	jne    0x1400020f1
   1400020c2:	mov    DWORD PTR [rsp+0x38],0x8007029c
   1400020ca:	mov    r9,rdi
   1400020cd:	mov    DWORD PTR [rsp+0x30],0x3
   1400020d5:	mov    r8,rsi
   1400020d8:	mov    QWORD PTR [rsp+0x28],r15
   1400020dd:	mov    edx,ebp
   1400020df:	mov    rcx,r14
   1400020e2:	mov    QWORD PTR [rsp+0x20],r12
   1400020e7:	call   0x14000203c
   1400020ec:	mov    eax,0x29c
   1400020f1:	movzx  ebx,ax
   1400020f4:	mov    r9,rdi
   1400020f7:	or     ebx,0x80070000
   1400020fd:	mov    r8,rsi
   140002100:	test   eax,eax
   140002102:	mov    edx,ebp
   140002104:	mov    rcx,r14
   140002107:	cmovle ebx,eax
   14000210a:	mov    DWORD PTR [rsp+0x38],ebx
   14000210e:	mov    DWORD PTR [rsp+0x30],0x2
   140002116:	mov    QWORD PTR [rsp+0x28],r15
   14000211b:	mov    QWORD PTR [rsp+0x20],r12
   140002120:	call   0x140001e44
   140002125:	lea    r11,[rsp+0x50]
   14000212a:	mov    eax,ebx
   14000212c:	mov    rbx,QWORD PTR [r11+0x20]
   140002130:	mov    rbp,QWORD PTR [r11+0x28]
   140002134:	mov    rsi,QWORD PTR [r11+0x30]
   140002138:	mov    rdi,QWORD PTR [r11+0x38]
   14000213c:	mov    rsp,r11
   14000213f:	pop    r15
   140002141:	pop    r14
   140002143:	pop    r12
   140002145:	ret    
   140002146:	int3   
   140002147:	int3   
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	sub    rsp,0x48
   140002150:	mov    eax,DWORD PTR [rsp+0x78]
   140002154:	mov    r8,QWORD PTR [rsp+0x48]
   140002159:	mov    DWORD PTR [rsp+0x38],eax
   14000215d:	mov    rax,QWORD PTR [rsp+0x70]
   140002162:	mov    DWORD PTR [rsp+0x30],0x2
   14000216a:	mov    QWORD PTR [rsp+0x28],r8
   14000216f:	lea    r8,[rip+0x673a]        # 0x1400088b0
   140002176:	mov    QWORD PTR [rsp+0x20],rax
   14000217b:	call   0x14000203c
   140002180:	add    rsp,0x48
   140002184:	ret    
   140002185:	int3   
   140002186:	int3   
   140002187:	int3   
   140002188:	int3   
   140002189:	int3   
   14000218a:	int3   
   14000218b:	int3   
   14000218c:	sub    rsp,0x48
   140002190:	mov    rax,QWORD PTR [rsp+0x48]
   140002195:	lea    r8,[rip+0x6714]        # 0x1400088b0
   14000219c:	mov    QWORD PTR [rsp+0x28],rax
   1400021a1:	mov    rax,QWORD PTR [rsp+0x70]
   1400021a6:	mov    QWORD PTR [rsp+0x20],rax
   1400021ab:	call   0x140002080
   1400021b0:	add    rsp,0x48
   1400021b4:	ret    
   1400021b5:	int3   
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	sub    rsp,0x48
   1400021c0:	mov    rax,QWORD PTR [rsp+0x48]
   1400021c5:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   1400021cd:	mov    DWORD PTR [rsp+0x30],0x4
   1400021d5:	mov    QWORD PTR [rsp+0x28],rax
   1400021da:	mov    rax,QWORD PTR [rsp+0x70]
   1400021df:	mov    QWORD PTR [rsp+0x20],rax
   1400021e4:	call   0x14000203c
   1400021e9:	add    rsp,0x48
   1400021ed:	ret    
   1400021ee:	int3   
   1400021ef:	int3   
   1400021f0:	int3   
   1400021f1:	int3   
   1400021f2:	int3   
   1400021f3:	int3   
   1400021f4:	mov    DWORD PTR [rcx],edx
   1400021f6:	mov    rax,rcx
   1400021f9:	ret    
   1400021fa:	int3   
   1400021fb:	int3   
   1400021fc:	int3   
   1400021fd:	int3   
   1400021fe:	int3   
   1400021ff:	int3   
   140002200:	sub    rsp,0x28
   140002204:	mov    edx,ecx
   140002206:	lea    rcx,[rsp+0x40]
   14000220b:	call   0x1400021f4
   140002210:	lea    rdx,[rip+0x7e29]        # 0x14000a040
   140002217:	mov    ecx,DWORD PTR [rax]
   140002219:	mov    DWORD PTR [rsp+0x38],ecx
   14000221d:	lea    rcx,[rsp+0x38]
   140002222:	call   0x140005c7c
   140002227:	int3   
   140002228:	int3   
   140002229:	int3   
   14000222a:	int3   
   14000222b:	int3   
   14000222c:	int3   
   14000222d:	int3   
   14000222e:	int3   
   14000222f:	int3   
   140002230:	sub    rsp,0x38
   140002234:	call   QWORD PTR [rip+0x5e96]        # 0x1400080d0
   14000223a:	xor    eax,eax
   14000223c:	mov    DWORD PTR [rsp+0x20],eax
   140002240:	jmp    0x14000224b
   140002242:	mov    eax,0x8007000e
   140002247:	mov    DWORD PTR [rsp+0x20],eax
   14000224b:	add    rsp,0x38
   14000224f:	ret    
   140002250:	int3   
   140002251:	int3   
   140002252:	int3   
   140002253:	int3   
   140002254:	int3   
   140002255:	int3   
   140002256:	int3   
   140002257:	int3   
   140002258:	rex.W jmp QWORD PTR [rip+0x5e39]        # 0x140008098
   14000225f:	int3   
   140002260:	int3   
   140002261:	int3   
   140002262:	int3   
   140002263:	int3   
   140002264:	int3   
   140002265:	int3   
   140002266:	int3   
   140002267:	int3   
   140002268:	mov    rcx,QWORD PTR [rcx]
   14000226b:	rex.W jmp QWORD PTR [rip+0x5ec6]        # 0x140008138
   140002272:	int3   
   140002273:	int3   
   140002274:	int3   
   140002275:	int3   
   140002276:	int3   
   140002277:	int3   
   140002278:	rex push rbx
   14000227a:	sub    rsp,0x20
   14000227e:	mov    rbx,rcx
   140002281:	mov    rcx,QWORD PTR [rcx]
   140002284:	test   rcx,rcx
   140002287:	je     0x140002293
   140002289:	call   QWORD PTR [rip+0x5e19]        # 0x1400080a8
   14000228f:	and    QWORD PTR [rbx],0x0
   140002293:	add    rsp,0x20
   140002297:	pop    rbx
   140002298:	ret    
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	rex push rbx
   1400022a2:	sub    rsp,0x20
   1400022a6:	lea    rax,[rip+0x6bab]        # 0x140008e58
   1400022ad:	mov    rbx,rcx
   1400022b0:	mov    QWORD PTR [rcx],rax
   1400022b3:	test   dl,0x1
   1400022b6:	je     0x1400022be
   1400022b8:	call   QWORD PTR [rip+0x5fa2]        # 0x140008260
   1400022be:	mov    rax,rbx
   1400022c1:	add    rsp,0x20
   1400022c5:	pop    rbx
   1400022c6:	ret    
   1400022c7:	int3   
   1400022c8:	int3   
   1400022c9:	int3   
   1400022ca:	int3   
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	mov    DWORD PTR [rdx],r8d
   1400022d3:	mov    rax,rdx
   1400022d6:	mov    QWORD PTR [rdx+0x8],rcx
   1400022da:	ret    
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	int3   
   1400022e1:	int3   
   1400022e2:	int3   
   1400022e3:	int3   
   1400022e4:	int3   
   1400022e5:	int3   
   1400022e6:	int3   
   1400022e7:	int3   
   1400022e8:	int3   
   1400022e9:	int3   
   1400022ea:	int3   
   1400022eb:	int3   
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400022f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400022fa:	mov    QWORD PTR [rsp+0x18],rdi
   1400022ff:	push   r14
   140002301:	sub    rsp,0x30
   140002305:	mov    rax,QWORD PTR [rcx]
   140002308:	mov    rsi,rcx
   14000230b:	mov    r14,r8
   14000230e:	mov    edi,edx
   140002310:	mov    rbx,QWORD PTR [rax+0x18]
   140002314:	mov    rcx,rbx
   140002317:	call   QWORD PTR [rip+0x6093]        # 0x1400083b0
   14000231d:	mov    r8d,edi
   140002320:	lea    rdx,[rsp+0x20]
   140002325:	mov    rcx,rsi
   140002328:	call   rbx
   14000232a:	mov    rcx,QWORD PTR [r14+0x8]
   14000232e:	cmp    QWORD PTR [rax+0x8],rcx
   140002332:	jne    0x140002342
   140002334:	mov    ecx,DWORD PTR [r14]
   140002337:	cmp    DWORD PTR [rax],ecx
   140002339:	jne    0x140002342
   14000233b:	mov    eax,0x1
   140002340:	jmp    0x140002344
   140002342:	xor    eax,eax
   140002344:	mov    rbx,QWORD PTR [rsp+0x40]
   140002349:	mov    rsi,QWORD PTR [rsp+0x48]
   14000234e:	mov    rdi,QWORD PTR [rsp+0x50]
   140002353:	add    rsp,0x30
   140002357:	pop    r14
   140002359:	ret    
   14000235a:	int3   
   14000235b:	int3   
   14000235c:	int3   
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	cmp    rcx,QWORD PTR [rdx+0x8]
   140002364:	jne    0x140002371
   140002366:	cmp    DWORD PTR [rdx],r8d
   140002369:	jne    0x140002371
   14000236b:	mov    eax,0x1
   140002370:	ret    
   140002371:	xor    eax,eax
   140002373:	ret    
   140002374:	int3   
   140002375:	int3   
   140002376:	int3   
   140002377:	int3   
   140002378:	int3   
   140002379:	int3   
   14000237a:	int3   
   14000237b:	int3   
   14000237c:	int3   
   14000237d:	int3   
   14000237e:	int3   
   14000237f:	int3   
   140002380:	lea    rax,[rip+0x6411]        # 0x140008798
   140002387:	ret    
   140002388:	int3   
   140002389:	int3   
   14000238a:	int3   
   14000238b:	int3   
   14000238c:	int3   
   14000238d:	int3   
   14000238e:	int3   
   14000238f:	int3   
   140002390:	rex push rbx
   140002392:	sub    rsp,0x30
   140002396:	and    DWORD PTR [rsp+0x20],0x0
   14000239b:	mov    ecx,r8d
   14000239e:	mov    rbx,rdx
   1400023a1:	call   QWORD PTR [rip+0x5e99]        # 0x140008240
   1400023a7:	lea    rdx,[rip+0x63f2]        # 0x1400087a0
   1400023ae:	mov    rcx,rbx
   1400023b1:	test   rax,rax
   1400023b4:	cmovne rdx,rax
   1400023b8:	call   0x140003230
   1400023bd:	mov    rax,rbx
   1400023c0:	add    rsp,0x30
   1400023c4:	pop    rbx
   1400023c5:	ret    
   1400023c6:	int3   
   1400023c7:	int3   
   1400023c8:	int3   
   1400023c9:	int3   
   1400023ca:	int3   
   1400023cb:	int3   
   1400023cc:	int3   
   1400023cd:	int3   
   1400023ce:	int3   
   1400023cf:	int3   
   1400023d0:	lea    rax,[rip+0x63d9]        # 0x1400087b0
   1400023d7:	ret    
   1400023d8:	int3   
   1400023d9:	int3   
   1400023da:	int3   
   1400023db:	int3   
   1400023dc:	int3   
   1400023dd:	int3   
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	rex push rbx
   1400023e2:	sub    rsp,0x30
   1400023e6:	and    DWORD PTR [rsp+0x20],0x0
   1400023eb:	mov    rbx,rdx
   1400023ee:	cmp    r8d,0x1
   1400023f2:	jne    0x140002405
   1400023f4:	lea    rdx,[rip+0x63c5]        # 0x1400087c0
   1400023fb:	mov    rcx,rbx
   1400023fe:	call   0x140003230
   140002403:	jmp    0x14000240a
   140002405:	call   0x140002390
   14000240a:	mov    rax,rbx
   14000240d:	add    rsp,0x30
   140002411:	pop    rbx
   140002412:	ret    
   140002413:	int3   
   140002414:	int3   
   140002415:	int3   
   140002416:	int3   
   140002417:	int3   
   140002418:	int3   
   140002419:	int3   
   14000241a:	int3   
   14000241b:	int3   
   14000241c:	int3   
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	lea    rax,[rip+0x63b1]        # 0x1400087d8
   140002427:	ret    
   140002428:	int3   
   140002429:	int3   
   14000242a:	int3   
   14000242b:	int3   
   14000242c:	int3   
   14000242d:	int3   
   14000242e:	int3   
   14000242f:	int3   
   140002430:	rex push rbx
   140002432:	sub    rsp,0x30
   140002436:	and    DWORD PTR [rsp+0x20],0x0
   14000243b:	mov    ecx,r8d
   14000243e:	mov    rbx,rdx
   140002441:	call   QWORD PTR [rip+0x5de1]        # 0x140008228
   140002447:	lea    rdx,[rip+0x6352]        # 0x1400087a0
   14000244e:	mov    rcx,rbx
   140002451:	test   rax,rax
   140002454:	cmovne rdx,rax
   140002458:	call   0x140003230
   14000245d:	mov    rax,rbx
   140002460:	add    rsp,0x30
   140002464:	pop    rbx
   140002465:	ret    
   140002466:	int3   
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	mov    QWORD PTR [rsp+0x8],rbx
   140002475:	push   rdi
   140002476:	sub    rsp,0x20
   14000247a:	mov    ecx,r8d
   14000247d:	mov    edi,r8d
   140002480:	mov    rbx,rdx
   140002483:	call   QWORD PTR [rip+0x5db7]        # 0x140008240
   140002489:	test   rax,rax
   14000248c:	mov    DWORD PTR [rbx],edi
   14000248e:	lea    rax,[rip+0x9bab]        # 0x14000c040
   140002495:	jne    0x14000249e
   140002497:	lea    rax,[rip+0x9b8a]        # 0x14000c028
   14000249e:	mov    QWORD PTR [rbx+0x8],rax
   1400024a2:	mov    rax,rbx
   1400024a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024aa:	add    rsp,0x20
   1400024ae:	pop    rdi
   1400024af:	ret    
   1400024b0:	int3   
   1400024b1:	int3   
   1400024b2:	int3   
   1400024b3:	int3   
   1400024b4:	int3   
   1400024b5:	int3   
   1400024b6:	int3   
   1400024b7:	int3   
   1400024b8:	mov    QWORD PTR [rsp+0x8],rcx
   1400024bd:	push   rbx
   1400024be:	sub    rsp,0x30
   1400024c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400024cb:	mov    rbx,rcx
   1400024ce:	lea    rax,[rip+0x69b3]        # 0x140008e88
   1400024d5:	mov    QWORD PTR [rcx],rax
   1400024d8:	mov    rcx,QWORD PTR [rcx+0x8]
   1400024dc:	test   rcx,rcx
   1400024df:	je     0x14000250d
   1400024e1:	xor    r9d,r9d
   1400024e4:	xor    r8d,r8d
   1400024e7:	xor    edx,edx
   1400024e9:	call   QWORD PTR [rip+0x5c09]        # 0x1400080f8
   1400024ef:	mov    edx,0x1
   1400024f4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400024f8:	call   QWORD PTR [rip+0x5c0a]        # 0x140008108
   1400024fe:	mov    rcx,QWORD PTR [rbx+0x8]
   140002502:	call   QWORD PTR [rip+0x5c08]        # 0x140008110
   140002508:	and    QWORD PTR [rbx+0x8],0x0
   14000250d:	lea    rcx,[rbx+0x18]
   140002511:	add    rsp,0x30
   140002515:	pop    rbx
   140002516:	jmp    0x1400034ac
   14000251b:	int3   
   14000251c:	int3   
   14000251d:	int3   
   14000251e:	int3   
   14000251f:	int3   
   140002520:	int3   
   140002521:	int3   
   140002522:	int3   
   140002523:	int3   
   140002524:	int3   
   140002525:	int3   
   140002526:	int3   
   140002527:	int3   
   140002528:	int3   
   140002529:	int3   
   14000252a:	int3   
   14000252b:	int3   
   14000252c:	int3   
   14000252d:	int3   
   14000252e:	int3   
   14000252f:	int3   
   140002530:	mov    QWORD PTR [rsp+0x8],rbx
   140002535:	mov    QWORD PTR [rsp+0x10],rsi
   14000253a:	push   rdi
   14000253b:	sub    rsp,0x20
   14000253f:	mov    rdi,rdx
   140002542:	xor    ecx,ecx
   140002544:	xor    edx,edx
   140002546:	call   QWORD PTR [rip+0x5e3c]        # 0x140008388
   14000254c:	test   eax,eax
   14000254e:	js     0x140002588
   140002550:	call   QWORD PTR [rip+0x5b5a]        # 0x1400080b0
   140002556:	xchg   QWORD PTR [rdi+0x40],rax
   14000255a:	mov    rsi,QWORD PTR [rdi+0x30]
   14000255e:	test   rsi,rsi
   140002561:	jne    0x14000256a
   140002563:	call   QWORD PTR [rip+0x5cc7]        # 0x140008230
   140002569:	int3   
   14000256a:	mov    rax,QWORD PTR [rsi]
   14000256d:	mov    rbx,QWORD PTR [rax+0x10]
   140002571:	mov    rcx,rbx
   140002574:	call   QWORD PTR [rip+0x5e36]        # 0x1400083b0
   14000257a:	mov    rcx,rsi
   14000257d:	call   rbx
   14000257f:	mov    DWORD PTR [rdi+0x38],eax
   140002582:	call   QWORD PTR [rip+0x5e08]        # 0x140008390
   140002588:	mov    rbx,QWORD PTR [rsp+0x30]
   14000258d:	mov    rsi,QWORD PTR [rsp+0x38]
   140002592:	add    rsp,0x20
   140002596:	pop    rdi
   140002597:	ret    
   140002598:	int3   
   140002599:	int3   
   14000259a:	int3   
   14000259b:	int3   
   14000259c:	int3   
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025a5:	push   rdi
   1400025a6:	sub    rsp,0x20
   1400025aa:	mov    ebx,edx
   1400025ac:	mov    rdi,rcx
   1400025af:	call   0x1400024b8
   1400025b4:	test   bl,0x1
   1400025b7:	je     0x1400025c2
   1400025b9:	mov    rcx,rdi
   1400025bc:	call   QWORD PTR [rip+0x5c9e]        # 0x140008260
   1400025c2:	mov    rax,rdi
   1400025c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025ca:	add    rsp,0x20
   1400025ce:	pop    rdi
   1400025cf:	ret    
   1400025d0:	int3   
   1400025d1:	int3   
   1400025d2:	int3   
   1400025d3:	int3   
   1400025d4:	int3   
   1400025d5:	int3   
   1400025d6:	int3   
   1400025d7:	int3   
   1400025d8:	mov    QWORD PTR [rsp+0x8],rcx
   1400025dd:	push   rdi
   1400025de:	sub    rsp,0x30
   1400025e2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400025eb:	mov    QWORD PTR [rsp+0x50],rbx
   1400025f0:	mov    rdi,rcx
   1400025f3:	mov    rcx,QWORD PTR [rcx+0x20]
   1400025f7:	test   rcx,rcx
   1400025fa:	je     0x14000260e
   1400025fc:	call   QWORD PTR [rip+0x5d56]        # 0x140008358
   140002602:	or     eax,0x10000000
   140002607:	jl     0x14000260e
   140002609:	and    QWORD PTR [rdi+0x20],0x0
   14000260e:	lea    rcx,[rdi+0x40]
   140002612:	call   QWORD PTR [rip+0x5a80]        # 0x140008098
   140002618:	nop
   140002619:	mov    rax,QWORD PTR [rdi+0x30]
   14000261d:	mov    rcx,QWORD PTR [rax]
   140002620:	mov    QWORD PTR [rax],rax
   140002623:	mov    rax,QWORD PTR [rdi+0x30]
   140002627:	mov    QWORD PTR [rax+0x8],rax
   14000262b:	and    QWORD PTR [rdi+0x38],0x0
   140002630:	cmp    rcx,QWORD PTR [rdi+0x30]
   140002634:	je     0x140002648
   140002636:	mov    rbx,QWORD PTR [rcx]
   140002639:	call   QWORD PTR [rip+0x5c21]        # 0x140008260
   14000263f:	mov    rcx,rbx
   140002642:	cmp    rbx,QWORD PTR [rdi+0x30]
   140002646:	jne    0x140002636
   140002648:	mov    rcx,QWORD PTR [rdi+0x30]
   14000264c:	call   QWORD PTR [rip+0x5c0e]        # 0x140008260
   140002652:	nop
   140002653:	mov    QWORD PTR [rsp+0x40],rdi
   140002658:	mov    rcx,QWORD PTR [rdi+0x20]
   14000265c:	test   rcx,rcx
   14000265f:	je     0x140002673
   140002661:	call   QWORD PTR [rip+0x5cf1]        # 0x140008358
   140002667:	or     eax,0x10000000
   14000266c:	jl     0x140002673
   14000266e:	and    QWORD PTR [rdi+0x20],0x0
   140002673:	mov    rcx,rdi
   140002676:	mov    rbx,QWORD PTR [rsp+0x50]
   14000267b:	add    rsp,0x30
   14000267f:	pop    rdi
   140002680:	jmp    0x1400034ac
   140002685:	int3   
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	rex push rdi
   140002692:	sub    rsp,0x50
   140002696:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000269f:	mov    QWORD PTR [rsp+0x60],rbx
   1400026a4:	mov    QWORD PTR [rsp+0x68],rsi
   1400026a9:	mov    rbx,rcx
   1400026ac:	xor    r9d,r9d
   1400026af:	xor    r8d,r8d
   1400026b2:	lea    edx,[r9+0x1]
   1400026b6:	xor    ecx,ecx
   1400026b8:	call   QWORD PTR [rip+0x59ba]        # 0x140008078
   1400026be:	mov    QWORD PTR [rsp+0x78],rax
   1400026c3:	test   rax,rax
   1400026c6:	jne    0x1400026ec
   1400026c8:	mov    rcx,QWORD PTR [rsp+0x58]
   1400026cd:	lea    rax,[rip+0x64e4]        # 0x140008bb8
   1400026d4:	mov    QWORD PTR [rsp+0x20],rax
   1400026d9:	lea    r9,[rip+0x64e8]        # 0x140008bc8
   1400026e0:	mov    edx,0xac
   1400026e5:	call   0x14000218c
   1400026ea:	jmp    0x14000275b
   1400026ec:	lea    rdi,[rbx+0x40]
   1400026f0:	mov    QWORD PTR [rsp+0x38],rdi
   1400026f5:	mov    rcx,rdi
   1400026f8:	call   QWORD PTR [rip+0x5972]        # 0x140008070
   1400026fe:	mov    BYTE PTR [rsp+0x40],0x1
   140002703:	mov    rsi,QWORD PTR [rbx+0x30]
   140002707:	lea    r9,[rsp+0x78]
   14000270c:	mov    r8,QWORD PTR [rsi+0x8]
   140002710:	mov    rdx,rsi
   140002713:	call   0x140003e48
   140002718:	mov    rdx,rax
   14000271b:	mov    rax,QWORD PTR [rbx+0x38]
   14000271f:	movabs rcx,0xaaaaaaaaaaaaaa9
   140002729:	sub    rcx,rax
   14000272c:	cmp    rcx,0x1
   140002730:	jae    0x140002740
   140002732:	lea    rcx,[rip+0x65a7]        # 0x140008ce0
   140002739:	call   QWORD PTR [rip+0x5af9]        # 0x140008238
   14000273f:	int3   
   140002740:	inc    rax
   140002743:	mov    QWORD PTR [rbx+0x38],rax
   140002747:	mov    QWORD PTR [rsi+0x8],rdx
   14000274b:	mov    rax,QWORD PTR [rdx+0x8]
   14000274f:	mov    QWORD PTR [rax],rdx
   140002752:	mov    rcx,rdi
   140002755:	call   QWORD PTR [rip+0x5965]        # 0x1400080c0
   14000275b:	mov    rbx,QWORD PTR [rsp+0x60]
   140002760:	mov    rsi,QWORD PTR [rsp+0x68]
   140002765:	add    rsp,0x50
   140002769:	pop    rdi
   14000276a:	ret    
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	int3   
   140002771:	int3   
   140002772:	int3   
   140002773:	int3   
   140002774:	mov    rax,rsp
   140002777:	push   rbp
   140002778:	push   r14
   14000277a:	push   r15
   14000277c:	lea    rbp,[rsp-0x70]
   140002781:	sub    rsp,0x170
   140002788:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   140002790:	mov    QWORD PTR [rax+0x10],rbx
   140002794:	mov    QWORD PTR [rax+0x18],rsi
   140002798:	mov    QWORD PTR [rax+0x20],rdi
   14000279c:	mov    rax,QWORD PTR [rip+0x9865]        # 0x14000c008
   1400027a3:	xor    rax,rsp
   1400027a6:	mov    QWORD PTR [rbp+0x60],rax
   1400027aa:	mov    r14,rcx
   1400027ad:	xor    r15d,r15d
   1400027b0:	mov    QWORD PTR [rsp+0x58],r15
   1400027b5:	lea    rax,[rsp+0x58]
   1400027ba:	mov    QWORD PTR [rsp+0x20],rax
   1400027bf:	lea    r9,[rip+0x6612]        # 0x140008dd8
   1400027c6:	xor    edx,edx
   1400027c8:	lea    r8d,[r15+0x4]
   1400027cc:	lea    rcx,[rip+0x6615]        # 0x140008de8
   1400027d3:	call   QWORD PTR [rip+0x5bc7]        # 0x1400083a0
   1400027d9:	mov    esi,eax
   1400027db:	test   eax,eax
   1400027dd:	js     0x140002d3b
   1400027e3:	mov    DWORD PTR [rsp+0x38],0x20
   1400027eb:	mov    QWORD PTR [rsp+0x30],r15
   1400027f0:	mov    DWORD PTR [rsp+0x28],0x3
   1400027f8:	mov    DWORD PTR [rsp+0x20],r15d
   1400027fd:	xor    r9d,r9d
   140002800:	or     edx,0xffffffff
   140002803:	mov    r8d,edx
   140002806:	mov    rcx,QWORD PTR [rsp+0x58]
   14000280b:	call   QWORD PTR [rip+0x5b87]        # 0x140008398
   140002811:	mov    esi,eax
   140002813:	test   eax,eax
   140002815:	js     0x140002d3b
   14000281b:	mov    QWORD PTR [rsp+0x40],r15
   140002820:	mov    rbx,QWORD PTR [rsp+0x58]
   140002825:	mov    rax,QWORD PTR [rbx]
   140002828:	mov    rdi,QWORD PTR [rax+0xc0]
   14000282f:	mov    rcx,rdi
   140002832:	call   QWORD PTR [rip+0x5b78]        # 0x1400083b0
   140002838:	lea    rdx,[rsp+0x40]
   14000283d:	mov    rcx,rbx
   140002840:	call   rdi
   140002842:	mov    esi,eax
   140002844:	test   eax,eax
   140002846:	jns    0x140002874
   140002848:	mov    rcx,QWORD PTR [rbp+0x88]
   14000284f:	mov    DWORD PTR [rsp+0x28],eax
   140002853:	lea    rax,[rip+0x6126]        # 0x140008980
   14000285a:	mov    QWORD PTR [rsp+0x20],rax
   14000285f:	lea    r9,[rip+0x60f2]        # 0x140008958
   140002866:	lea    edx,[r15+0x79]
   14000286a:	call   0x14000214c
   14000286f:	jmp    0x140002d15
   140002874:	cmp    QWORD PTR [rsp+0x40],r15
   140002879:	jne    0x140002885
   14000287b:	mov    esi,0x1
   140002880:	jmp    0x140002d15
   140002885:	mov    QWORD PTR [rsp+0x60],r15
   14000288a:	mov    QWORD PTR [rsp+0x70],r15
   14000288f:	mov    rdi,r15
   140002892:	mov    QWORD PTR [rsp+0x78],r15
   140002897:	mov    rbx,QWORD PTR [rsp+0x40]
   14000289c:	mov    rax,QWORD PTR [rbx]
   14000289f:	mov    rsi,QWORD PTR [rax+0x28]
   1400028a3:	mov    rcx,rsi
   1400028a6:	call   QWORD PTR [rip+0x5b04]        # 0x1400083b0
   1400028ac:	lea    rdx,[rsp+0x60]
   1400028b1:	mov    rcx,rbx
   1400028b4:	call   rsi
   1400028b6:	mov    esi,eax
   1400028b8:	test   eax,eax
   1400028ba:	jns    0x1400028d1
   1400028bc:	mov    DWORD PTR [rsp+0x28],eax
   1400028c0:	lea    rax,[rip+0x6101]        # 0x1400089c8
   1400028c7:	mov    edx,0x85
   1400028cc:	jmp    0x140002cd1
   1400028d1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400028d6:	mov    rax,QWORD PTR [rbx]
   1400028d9:	mov    rsi,QWORD PTR [rax+0x20]
   1400028dd:	mov    rcx,rsi
   1400028e0:	call   QWORD PTR [rip+0x5aca]        # 0x1400083b0
   1400028e6:	lea    rdx,[rsp+0x70]
   1400028eb:	mov    rcx,rbx
   1400028ee:	call   rsi
   1400028f0:	mov    esi,eax
   1400028f2:	test   eax,eax
   1400028f4:	jns    0x14000290b
   1400028f6:	mov    DWORD PTR [rsp+0x28],eax
   1400028fa:	lea    rax,[rip+0x60f7]        # 0x1400089f8
   140002901:	mov    edx,0x86
   140002906:	jmp    0x140002cd1
   14000290b:	mov    rbx,QWORD PTR [rsp+0x40]
   140002910:	mov    rax,QWORD PTR [rbx]
   140002913:	mov    rsi,QWORD PTR [rax+0x30]
   140002917:	mov    rcx,rsi
   14000291a:	call   QWORD PTR [rip+0x5a90]        # 0x1400083b0
   140002920:	lea    rdx,[rsp+0x68]
   140002925:	mov    rcx,rbx
   140002928:	call   rsi
   14000292a:	mov    esi,eax
   14000292c:	test   eax,eax
   14000292e:	jns    0x140002945
   140002930:	mov    DWORD PTR [rsp+0x28],eax
   140002934:	lea    rax,[rip+0x60f5]        # 0x140008a30
   14000293b:	mov    edx,0x87
   140002940:	jmp    0x140002cd1
   140002945:	mov    esi,0x80070057
   14000294a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000294f:	test   rbx,rbx
   140002952:	je     0x140002cc1
   140002958:	mov    rdi,r15
   14000295b:	mov    QWORD PTR [rsp+0x78],r15
   140002960:	mov    QWORD PTR [rsp+0x48],r15
   140002965:	mov    rax,QWORD PTR [rbx]
   140002968:	mov    rsi,QWORD PTR [rax+0x40]
   14000296c:	mov    rcx,rsi
   14000296f:	call   QWORD PTR [rip+0x5a3b]        # 0x1400083b0
   140002975:	lea    rdx,[rsp+0x48]
   14000297a:	mov    rcx,rbx
   14000297d:	call   rsi
   14000297f:	mov    esi,eax
   140002981:	test   eax,eax
   140002983:	js     0x1400029bd
   140002985:	mov    r8,QWORD PTR [rsp+0x48]
   14000298a:	xor    edx,edx
   14000298c:	mov    ecx,0x100000
   140002991:	call   QWORD PTR [rip+0x5781]        # 0x140008118
   140002997:	mov    rdi,rax
   14000299a:	mov    QWORD PTR [rsp+0x78],rax
   14000299f:	test   rax,rax
   1400029a2:	jne    0x1400029ba
   1400029a4:	call   QWORD PTR [rip+0x570e]        # 0x1400080b8
   1400029aa:	movzx  esi,ax
   1400029ad:	or     esi,0x80070000
   1400029b3:	test   eax,eax
   1400029b5:	cmovle esi,eax
   1400029b8:	jmp    0x1400029bd
   1400029ba:	mov    esi,r15d
   1400029bd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400029c2:	test   rcx,rcx
   1400029c5:	je     0x1400029cd
   1400029c7:	call   QWORD PTR [rip+0x576b]        # 0x140008138
   1400029cd:	test   esi,esi
   1400029cf:	js     0x140002cc1
   1400029d5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400029da:	mov    rax,QWORD PTR [rbx]
   1400029dd:	mov    rsi,QWORD PTR [rax+0x38]
   1400029e1:	mov    rcx,rsi
   1400029e4:	call   QWORD PTR [rip+0x59c6]        # 0x1400083b0
   1400029ea:	lea    rdx,[rsp+0x50]
   1400029ef:	mov    rcx,rbx
   1400029f2:	call   rsi
   1400029f4:	mov    ecx,DWORD PTR [rsp+0x50]
   1400029f8:	mov    edx,0x7530
   1400029fd:	test   eax,eax
   1400029ff:	cmovs  ecx,edx
   140002a02:	mov    DWORD PTR [rsp+0x50],ecx
   140002a06:	lea    rax,[rbp-0x70]
   140002a0a:	mov    QWORD PTR [rbp-0x48],rax
   140002a0e:	mov    QWORD PTR [rbp-0x58],r15
   140002a12:	mov    QWORD PTR [rsp+0x48],r15
   140002a17:	lea    rax,[rbp-0x70]
   140002a1b:	mov    QWORD PTR [rsp+0x48],rax
   140002a20:	lea    rax,[rbp-0x70]
   140002a24:	mov    QWORD PTR [rbp-0x50],rax
   140002a28:	lea    rax,[rip+0x6371]        # 0x140008da0
   140002a2f:	mov    QWORD PTR [rbp-0x70],rax
   140002a33:	mov    QWORD PTR [rbp-0x68],r14
   140002a37:	lea    rax,[rbp-0x70]
   140002a3b:	mov    QWORD PTR [rbp-0x58],rax
   140002a3f:	lea    rax,[rbp-0x70]
   140002a43:	mov    QWORD PTR [rbp-0x50],rax
   140002a47:	lea    rax,[rip+0x643a]        # 0x140008e88
   140002a4e:	mov    QWORD PTR [rbp+0x10],rax
   140002a52:	mov    QWORD PTR [rbp+0x18],r15
   140002a56:	mov    DWORD PTR [rbp+0x20],r15d
   140002a5a:	lea    rax,[rbp+0x28]
   140002a5e:	mov    QWORD PTR [rbp-0x48],rax
   140002a62:	mov    QWORD PTR [rbp+0x40],r15
   140002a66:	mov    rsi,QWORD PTR [rbp-0x58]
   140002a6a:	test   rsi,rsi
   140002a6d:	jne    0x140002a75
   140002a6f:	mov    QWORD PTR [rbp+0x40],r15
   140002a73:	jmp    0x140002aa4
   140002a75:	lea    rax,[rbp-0x70]
   140002a79:	cmp    rsi,rax
   140002a7c:	mov    rax,QWORD PTR [rsi]
   140002a7f:	mov    rbx,QWORD PTR [rax]
   140002a82:	mov    rcx,rbx
   140002a85:	jne    0x140002a93
   140002a87:	call   QWORD PTR [rip+0x5923]        # 0x1400083b0
   140002a8d:	lea    rdx,[rbp+0x28]
   140002a91:	jmp    0x140002a9b
   140002a93:	call   QWORD PTR [rip+0x5917]        # 0x1400083b0
   140002a99:	xor    edx,edx
   140002a9b:	mov    rcx,rsi
   140002a9e:	call   rbx
   140002aa0:	mov    QWORD PTR [rbp+0x40],rax
   140002aa4:	mov    DWORD PTR [rbp+0x48],r15d
   140002aa8:	mov    QWORD PTR [rbp+0x50],r15
   140002aac:	call   QWORD PTR [rip+0x55fe]        # 0x1400080b0
   140002ab2:	sub    rax,0xea60
   140002ab8:	mov    QWORD PTR [rbp+0x58],rax
   140002abc:	lea    rcx,[rbp-0x70]
   140002ac0:	call   0x1400034ac
   140002ac5:	nop
   140002ac6:	mov    rbx,QWORD PTR [rsp+0x60]
   140002acb:	mov    rcx,rbx
   140002ace:	call   QWORD PTR [rip+0x565c]        # 0x140008130
   140002ad4:	mov    r8d,eax
   140002ad7:	mov    rdx,rbx
   140002ada:	lea    rcx,[rbp-0x18]
   140002ade:	call   0x140003348
   140002ae3:	nop
   140002ae4:	mov    rbx,QWORD PTR [rsp+0x70]
   140002ae9:	mov    rcx,rbx
   140002aec:	call   QWORD PTR [rip+0x563e]        # 0x140008130
   140002af2:	mov    r8d,eax
   140002af5:	mov    rdx,rbx
   140002af8:	lea    rcx,[rbp-0x38]
   140002afc:	call   0x140003348
   140002b01:	nop
   140002b02:	mov    QWORD PTR [rbp-0x80],r15
   140002b06:	mov    DWORD PTR [rbp-0x78],0x3
   140002b0d:	mov    eax,DWORD PTR [rsp+0x68]
   140002b11:	mov    DWORD PTR [rbp-0x74],eax
   140002b14:	mov    esi,DWORD PTR [rsp+0x50]
   140002b18:	call   QWORD PTR [rip+0x5592]        # 0x1400080b0
   140002b1e:	add    rsi,rax
   140002b21:	cmp    QWORD PTR [rbp+0x18],r15
   140002b25:	jne    0x140002b5a
   140002b27:	xor    r8d,r8d
   140002b2a:	lea    rdx,[rbp+0x10]
   140002b2e:	lea    rcx,[rip+0xfffffffffffff9fb]        # 0x140002530
   140002b35:	call   QWORD PTR [rip+0x554d]        # 0x140008088
   140002b3b:	mov    QWORD PTR [rbp+0x18],rax
   140002b3f:	test   rax,rax
   140002b42:	jne    0x140002b5a
   140002b44:	call   QWORD PTR [rip+0x556e]        # 0x1400080b8
   140002b4a:	movzx  esi,ax
   140002b4d:	or     esi,0x80070000
   140002b53:	test   eax,eax
   140002b55:	cmovle esi,eax
   140002b58:	jmp    0x140002ba7
   140002b5a:	call   QWORD PTR [rip+0x5550]        # 0x1400080b0
   140002b60:	mov    rcx,rsi
   140002b63:	sub    rcx,rax
   140002b66:	test   rcx,rcx
   140002b69:	jle    0x140002b7b
   140002b6b:	mov    QWORD PTR [rbp+0x58],rsi
   140002b6f:	sub    rax,rsi
   140002b72:	imul   rax,rax,0x2710
   140002b79:	jmp    0x140002b82
   140002b7b:	mov    QWORD PTR [rbp+0x58],rax
   140002b7f:	mov    rax,r15
   140002b82:	mov    DWORD PTR [rsp+0x48],eax
   140002b86:	shr    rax,0x20
   140002b8a:	mov    DWORD PTR [rsp+0x4c],eax
   140002b8e:	mov    r9d,DWORD PTR [rbp+0x20]
   140002b92:	xor    r8d,r8d
   140002b95:	lea    rdx,[rsp+0x48]
   140002b9a:	mov    rcx,QWORD PTR [rbp+0x18]
   140002b9e:	call   QWORD PTR [rip+0x5554]        # 0x1400080f8
   140002ba4:	mov    esi,r15d
   140002ba7:	test   esi,esi
   140002ba9:	jns    0x140002bbd
   140002bab:	mov    DWORD PTR [rsp+0x28],esi
   140002baf:	lea    rax,[rip+0x5f02]        # 0x140008ab8
   140002bb6:	mov    edx,0x9c
   140002bbb:	jmp    0x140002c35
   140002bbd:	lea    r8,[rbp-0x38]
   140002bc1:	cmp    QWORD PTR [rbp-0x20],0x8
   140002bc6:	cmovae r8,QWORD PTR [rbp-0x38]
   140002bcb:	lea    rdx,[rbp-0x18]
   140002bcf:	cmp    QWORD PTR [rbp+0x0],0x8
   140002bd4:	cmovae rdx,QWORD PTR [rbp-0x18]
   140002bd9:	mov    QWORD PTR [rsp+0x20],rdi
   140002bde:	mov    r9,r14
   140002be1:	lea    rcx,[rbp-0x80]
   140002be5:	call   0x140004040
   140002bea:	mov    esi,eax
   140002bec:	test   eax,eax
   140002bee:	jns    0x140002c02
   140002bf0:	mov    DWORD PTR [rsp+0x28],eax
   140002bf4:	lea    rax,[rip+0x5ee5]        # 0x140008ae0
   140002bfb:	mov    edx,0x9f
   140002c00:	jmp    0x140002c35
   140002c02:	mov    rbx,QWORD PTR [rsp+0x40]
   140002c07:	mov    rax,QWORD PTR [rbx]
   140002c0a:	mov    rsi,QWORD PTR [rax+0x18]
   140002c0e:	mov    rcx,rsi
   140002c11:	call   QWORD PTR [rip+0x5799]        # 0x1400083b0
   140002c17:	mov    edx,DWORD PTR [rbp-0x78]
   140002c1a:	mov    rcx,rbx
   140002c1d:	call   rsi
   140002c1f:	mov    esi,eax
   140002c21:	test   eax,eax
   140002c23:	jns    0x140002c4f
   140002c25:	mov    DWORD PTR [rsp+0x28],eax
   140002c29:	lea    rax,[rip+0x5f30]        # 0x140008b60
   140002c30:	mov    edx,0xa4
   140002c35:	mov    rcx,QWORD PTR [rbp+0x88]
   140002c3c:	mov    QWORD PTR [rsp+0x20],rax
   140002c41:	lea    r9,[rip+0x5d10]        # 0x140008958
   140002c48:	call   0x14000214c
   140002c4d:	jmp    0x140002c52
   140002c4f:	mov    esi,r15d
   140002c52:	mov    r14,QWORD PTR [rbp-0x80]
   140002c56:	test   r14,r14
   140002c59:	je     0x140002c75
   140002c5b:	mov    QWORD PTR [rbp-0x80],r15
   140002c5f:	mov    rax,QWORD PTR [r14]
   140002c62:	mov    rbx,QWORD PTR [rax+0x10]
   140002c66:	mov    rcx,rbx
   140002c69:	call   QWORD PTR [rip+0x5741]        # 0x1400083b0
   140002c6f:	mov    rcx,r14
   140002c72:	call   rbx
   140002c74:	nop
   140002c75:	cmp    QWORD PTR [rbp-0x20],0x8
   140002c7a:	jb     0x140002c86
   140002c7c:	mov    rcx,QWORD PTR [rbp-0x38]
   140002c80:	call   QWORD PTR [rip+0x55da]        # 0x140008260
   140002c86:	mov    ebx,0x7
   140002c8b:	mov    QWORD PTR [rbp-0x20],rbx
   140002c8f:	mov    QWORD PTR [rbp-0x28],r15
   140002c93:	mov    WORD PTR [rbp-0x38],r15w
   140002c98:	cmp    QWORD PTR [rbp+0x0],0x8
   140002c9d:	jb     0x140002ca9
   140002c9f:	mov    rcx,QWORD PTR [rbp-0x18]
   140002ca3:	call   QWORD PTR [rip+0x55b7]        # 0x140008260
   140002ca9:	mov    QWORD PTR [rbp+0x0],rbx
   140002cad:	mov    QWORD PTR [rbp-0x8],r15
   140002cb1:	mov    WORD PTR [rbp-0x18],r15w
   140002cb6:	lea    rcx,[rbp+0x10]
   140002cba:	call   0x1400024b8
   140002cbf:	jmp    0x140002cea
   140002cc1:	mov    DWORD PTR [rsp+0x28],esi
   140002cc5:	lea    rax,[rip+0x5d94]        # 0x140008a60
   140002ccc:	mov    edx,0x88
   140002cd1:	mov    QWORD PTR [rsp+0x20],rax
   140002cd6:	lea    r9,[rip+0x5c7b]        # 0x140008958
   140002cdd:	mov    rcx,QWORD PTR [rbp+0x88]
   140002ce4:	call   0x14000214c
   140002ce9:	nop
   140002cea:	test   rdi,rdi
   140002ced:	je     0x140002cfd
   140002cef:	mov    rcx,rdi
   140002cf2:	call   QWORD PTR [rip+0x53b0]        # 0x1400080a8
   140002cf8:	mov    QWORD PTR [rsp+0x78],r15
   140002cfd:	mov    rcx,QWORD PTR [rsp+0x70]
   140002d02:	call   QWORD PTR [rip+0x5430]        # 0x140008138
   140002d08:	nop
   140002d09:	mov    rcx,QWORD PTR [rsp+0x60]
   140002d0e:	call   QWORD PTR [rip+0x5424]        # 0x140008138
   140002d14:	nop
   140002d15:	mov    rdi,QWORD PTR [rsp+0x40]
   140002d1a:	test   rdi,rdi
   140002d1d:	je     0x140002d64
   140002d1f:	mov    QWORD PTR [rsp+0x40],r15
   140002d24:	mov    rax,QWORD PTR [rdi]
   140002d27:	mov    rbx,QWORD PTR [rax+0x10]
   140002d2b:	mov    rcx,rbx
   140002d2e:	call   QWORD PTR [rip+0x567c]        # 0x1400083b0
   140002d34:	mov    rcx,rdi
   140002d37:	call   rbx
   140002d39:	jmp    0x140002d64
   140002d3b:	mov    rcx,QWORD PTR [rbp+0x88]
   140002d42:	mov    DWORD PTR [rsp+0x28],esi
   140002d46:	lea    rax,[rip+0x5bb3]        # 0x140008900
   140002d4d:	mov    QWORD PTR [rsp+0x20],rax
   140002d52:	lea    r9,[rip+0x5bff]        # 0x140008958
   140002d59:	mov    edx,0x75
   140002d5e:	call   0x14000214c
   140002d63:	nop
   140002d64:	mov    rdi,QWORD PTR [rsp+0x58]
   140002d69:	test   rdi,rdi
   140002d6c:	je     0x140002d88
   140002d6e:	mov    QWORD PTR [rsp+0x58],r15
   140002d73:	mov    rdx,QWORD PTR [rdi]
   140002d76:	mov    rbx,QWORD PTR [rdx+0x10]
   140002d7a:	mov    rcx,rbx
   140002d7d:	call   QWORD PTR [rip+0x562d]        # 0x1400083b0
   140002d83:	mov    rcx,rdi
   140002d86:	call   rbx
   140002d88:	mov    eax,esi
   140002d8a:	mov    rcx,QWORD PTR [rbp+0x60]
   140002d8e:	xor    rcx,rsp
   140002d91:	call   0x1400055f0
   140002d96:	lea    r11,[rsp+0x170]
   140002d9e:	mov    rbx,QWORD PTR [r11+0x28]
   140002da2:	mov    rsi,QWORD PTR [r11+0x30]
   140002da6:	mov    rdi,QWORD PTR [r11+0x38]
   140002daa:	mov    rsp,r11
   140002dad:	pop    r15
   140002daf:	pop    r14
   140002db1:	pop    rbp
   140002db2:	ret    
   140002db3:	int3   
   140002db4:	int3   
   140002db5:	int3   
   140002db6:	int3   
   140002db7:	int3   
   140002db8:	int3   
   140002db9:	int3   
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	mov    QWORD PTR [rsp+0x8],rbx
   140002dc1:	push   rdi
   140002dc2:	sub    rsp,0x20
   140002dc6:	mov    rdi,QWORD PTR [rcx]
   140002dc9:	test   rdi,rdi
   140002dcc:	je     0x140002de7
   140002dce:	and    QWORD PTR [rcx],0x0
   140002dd2:	mov    rax,QWORD PTR [rdi]
   140002dd5:	mov    rbx,QWORD PTR [rax+0x10]
   140002dd9:	mov    rcx,rbx
   140002ddc:	call   QWORD PTR [rip+0x55ce]        # 0x1400083b0
   140002de2:	mov    rcx,rdi
   140002de5:	call   rbx
   140002de7:	mov    rbx,QWORD PTR [rsp+0x30]
   140002dec:	add    rsp,0x20
   140002df0:	pop    rdi
   140002df1:	ret    
   140002df2:	int3   
   140002df3:	int3   
   140002df4:	int3   
   140002df5:	int3   
   140002df6:	int3   
   140002df7:	int3   
   140002df8:	mov    rax,rsp
   140002dfb:	push   rbp
   140002dfc:	push   r14
   140002dfe:	push   r15
   140002e00:	lea    rbp,[rax-0x28]
   140002e04:	sub    rsp,0x110
   140002e0b:	mov    QWORD PTR [rbp-0x80],0xfffffffffffffffe
   140002e13:	mov    QWORD PTR [rax+0x8],rbx
   140002e17:	mov    QWORD PTR [rax+0x10],rsi
   140002e1b:	mov    QWORD PTR [rax+0x18],rdi
   140002e1f:	mov    QWORD PTR [rax+0x20],r12
   140002e23:	mov    rax,QWORD PTR [rip+0x91de]        # 0x14000c008
   140002e2a:	xor    rax,rsp
   140002e2d:	mov    QWORD PTR [rbp+0x0],rax
   140002e31:	xor    ecx,ecx
   140002e33:	call   QWORD PTR [rip+0x53df]        # 0x140008218
   140002e39:	mov    ebx,eax
   140002e3b:	xor    r12d,r12d
   140002e3e:	test   eax,eax
   140002e40:	jns    0x140002e6e
   140002e42:	mov    rcx,QWORD PTR [rbp+0x28]
   140002e46:	mov    DWORD PTR [rsp+0x28],eax
   140002e4a:	lea    rax,[rip+0x5d9f]        # 0x140008bf0
   140002e51:	mov    QWORD PTR [rsp+0x20],rax
   140002e56:	lea    r9,[rip+0x5dcb]        # 0x140008c28
   140002e5d:	mov    edx,0xbf
   140002e62:	call   0x14000214c
   140002e67:	mov    eax,ebx
   140002e69:	jmp    0x1400031fd
   140002e6e:	lea    rcx,[rsp+0x40]
   140002e73:	call   0x140003e38
   140002e78:	nop
   140002e79:	lea    r8,[rip+0x5db8]        # 0x140008c38
   140002e80:	xor    edx,edx
   140002e82:	xor    ecx,ecx
   140002e84:	call   QWORD PTR [rip+0x5296]        # 0x140008120
   140002e8a:	mov    rdi,rax
   140002e8d:	mov    QWORD PTR [rsp+0x78],rax
   140002e92:	test   rax,rax
   140002e95:	sete   al
   140002e98:	test   al,al
   140002e9a:	je     0x140002eaa
   140002e9c:	lea    rax,[rip+0x5dbd]        # 0x140008c60
   140002ea3:	mov    edx,0xc3
   140002ea8:	jmp    0x140002ec3
   140002eaa:	call   QWORD PTR [rip+0x5208]        # 0x1400080b8
   140002eb0:	cmp    eax,0xb7
   140002eb5:	jne    0x140002ee0
   140002eb7:	lea    rax,[rip+0x5dba]        # 0x140008c78
   140002ebe:	mov    edx,0xc4
   140002ec3:	lea    r9,[rip+0x5d5e]        # 0x140008c28
   140002eca:	mov    QWORD PTR [rsp+0x20],rax
   140002ecf:	mov    rcx,QWORD PTR [rbp+0x28]
   140002ed3:	call   0x14000218c
   140002ed8:	mov    r14d,eax
   140002edb:	jmp    0x1400031de
   140002ee0:	mov    eax,0x2
   140002ee5:	mov    QWORD PTR [rbp-0x58],r12
   140002ee9:	sub    rax,0x1
   140002eed:	jne    0x140002ee5
   140002eef:	mov    QWORD PTR [rbp-0x50],r12
   140002ef3:	mov    QWORD PTR [rbp-0x40],r12
   140002ef7:	mov    QWORD PTR [rbp-0x38],r12
   140002efb:	xor    r8d,r8d
   140002efe:	xor    edx,edx
   140002f00:	call   0x140003c58
   140002f05:	mov    QWORD PTR [rbp-0x40],rax
   140002f09:	mov    ebx,0x28
   140002f0e:	mov    r8d,ebx
   140002f11:	xor    edx,edx
   140002f13:	lea    rcx,[rbp-0x30]
   140002f17:	call   0x140005dc2
   140002f1c:	lea    rcx,[rbp-0x30]
   140002f20:	call   0x140002230
   140002f25:	test   eax,eax
   140002f27:	jns    0x140002f31
   140002f29:	mov    ecx,eax
   140002f2b:	call   0x140002200
   140002f30:	nop
   140002f31:	lea    rax,[rsp+0x58]
   140002f36:	mov    QWORD PTR [rsp+0x50],rax
   140002f3b:	mov    QWORD PTR [rsp+0x70],r12
   140002f40:	mov    rcx,rbx
   140002f43:	call   0x1400051d0
   140002f48:	mov    rsi,rax
   140002f4b:	test   rax,rax
   140002f4e:	jne    0x140002f57
   140002f50:	call   QWORD PTR [rip+0x52f2]        # 0x140008248
   140002f56:	int3   
   140002f57:	lea    rax,[rip+0x5d9a]        # 0x140008cf8
   140002f5e:	mov    QWORD PTR [rsi],rax
   140002f61:	lea    rax,[rip+0xfffffffffffff728]        # 0x140002690
   140002f68:	mov    QWORD PTR [rsi+0x8],rax
   140002f6c:	lea    rax,[rbp-0x70]
   140002f70:	mov    QWORD PTR [rsi+0x18],rax
   140002f74:	mov    QWORD PTR [rsp+0x70],rsi
   140002f79:	lea    rax,[rsp+0x58]
   140002f7e:	mov    QWORD PTR [rsp+0x50],rax
   140002f83:	mov    r14d,r12d
   140002f86:	cmp    QWORD PTR [rbp-0x50],r12
   140002f8a:	je     0x140002f97
   140002f8c:	mov    r14d,0x8000ffff
   140002f92:	jmp    0x14000304c
   140002f97:	mov    rax,QWORD PTR [rip+0x5dca]        # 0x140008d68
   140002f9e:	mov    QWORD PTR [rbp-0x48],rax
   140002fa2:	mov    r15,QWORD PTR [rbp-0x58]
   140002fa6:	test   r15,r15
   140002fa9:	je     0x140002fd5
   140002fab:	mov    rax,QWORD PTR [r15]
   140002fae:	lea    rcx,[rbp-0x70]
   140002fb2:	cmp    r15,rcx
   140002fb5:	setne  bl
   140002fb8:	mov    rsi,QWORD PTR [rax+0x20]
   140002fbc:	mov    rcx,rsi
   140002fbf:	call   QWORD PTR [rip+0x53eb]        # 0x1400083b0
   140002fc5:	mov    dl,bl
   140002fc7:	mov    rcx,r15
   140002fca:	call   rsi
   140002fcc:	mov    QWORD PTR [rbp-0x58],r12
   140002fd0:	mov    rsi,QWORD PTR [rsp+0x70]
   140002fd5:	test   rsi,rsi
   140002fd8:	jne    0x140002fe0
   140002fda:	mov    QWORD PTR [rbp-0x58],r12
   140002fde:	jmp    0x140003010
   140002fe0:	lea    rax,[rsp+0x58]
   140002fe5:	cmp    rsi,rax
   140002fe8:	mov    rax,QWORD PTR [rsi]
   140002feb:	mov    rbx,QWORD PTR [rax]
   140002fee:	mov    rcx,rbx
   140002ff1:	jne    0x140002fff
   140002ff3:	call   QWORD PTR [rip+0x53b7]        # 0x1400083b0
   140002ff9:	lea    rdx,[rbp-0x70]
   140002ffd:	jmp    0x140003007
   140002fff:	call   QWORD PTR [rip+0x53ab]        # 0x1400083b0
   140003005:	xor    edx,edx
   140003007:	mov    rcx,rsi
   14000300a:	call   rbx
   14000300c:	mov    QWORD PTR [rbp-0x58],rax
   140003010:	mov    DWORD PTR [rsp+0x38],r12d
   140003015:	mov    DWORD PTR [rsp+0x30],r12d
   14000301a:	mov    QWORD PTR [rsp+0x28],r12
   14000301f:	lea    rax,[rbp-0x70]
   140003023:	mov    QWORD PTR [rsp+0x20],rax
   140003028:	lea    r9,[rip+0x2101]        # 0x140005130
   14000302f:	xor    r8d,r8d
   140003032:	mov    rdx,QWORD PTR [rbp-0x48]
   140003036:	lea    rcx,[rbp-0x50]
   14000303a:	call   QWORD PTR [rip+0x5320]        # 0x140008360
   140003040:	test   eax,eax
   140003042:	jns    0x14000304c
   140003044:	mov    r14d,eax
   140003047:	bts    r14d,0x1c
   14000304c:	lea    rcx,[rsp+0x58]
   140003051:	call   0x1400034ac
   140003056:	test   r14d,r14d
   140003059:	jns    0x140003083
   14000305b:	mov    rcx,QWORD PTR [rbp+0x28]
   14000305f:	mov    DWORD PTR [rsp+0x28],r14d
   140003064:	lea    rax,[rip+0x5775]        # 0x1400087e0
   14000306b:	mov    QWORD PTR [rsp+0x20],rax
   140003070:	lea    r9,[rip+0x5811]        # 0x140008888
   140003077:	mov    edx,0x40
   14000307c:	call   0x14000214c
   140003081:	jmp    0x140003086
   140003083:	mov    r14d,r12d
   140003086:	test   r14d,r14d
   140003089:	jns    0x1400030b6
   14000308b:	mov    rcx,QWORD PTR [rbp+0x28]
   14000308f:	mov    DWORD PTR [rsp+0x28],r14d
   140003094:	lea    rax,[rip+0x5c05]        # 0x140008ca0
   14000309b:	mov    QWORD PTR [rsp+0x20],rax
   1400030a0:	lea    r9,[rip+0x5b81]        # 0x140008c28
   1400030a7:	mov    edx,0xc7
   1400030ac:	call   0x14000214c
   1400030b1:	jmp    0x140003142
   1400030b6:	xor    r8d,r8d
   1400030b9:	xor    edx,edx
   1400030bb:	lea    rcx,[rbp-0x70]
   1400030bf:	call   0x140002690
   1400030c4:	mov    rbx,r12
   1400030c7:	mov    QWORD PTR [rsp+0x48],rbx
   1400030cc:	test   rbx,rbx
   1400030cf:	je     0x1400030e2
   1400030d1:	mov    rcx,rbx
   1400030d4:	call   QWORD PTR [rip+0x4fce]        # 0x1400080a8
   1400030da:	mov    rbx,r12
   1400030dd:	mov    QWORD PTR [rsp+0x48],rbx
   1400030e2:	lea    rcx,[rbp-0x30]
   1400030e6:	call   QWORD PTR [rip+0x4f84]        # 0x140008070
   1400030ec:	cmp    QWORD PTR [rbp-0x38],r12
   1400030f0:	jbe    0x140003126
   1400030f2:	mov    rax,QWORD PTR [rbp-0x40]
   1400030f6:	mov    rcx,QWORD PTR [rax]
   1400030f9:	mov    rbx,QWORD PTR [rcx+0x10]
   1400030fd:	mov    QWORD PTR [rsp+0x48],rbx
   140003102:	cmp    rcx,rax
   140003105:	je     0x140003126
   140003107:	mov    rdx,QWORD PTR [rcx+0x8]
   14000310b:	mov    rax,QWORD PTR [rcx]
   14000310e:	mov    QWORD PTR [rdx],rax
   140003111:	mov    rdx,QWORD PTR [rcx]
   140003114:	mov    rax,QWORD PTR [rcx+0x8]
   140003118:	mov    QWORD PTR [rdx+0x8],rax
   14000311c:	call   QWORD PTR [rip+0x513e]        # 0x140008260
   140003122:	dec    QWORD PTR [rbp-0x38]
   140003126:	lea    rcx,[rbp-0x30]
   14000312a:	call   QWORD PTR [rip+0x4f90]        # 0x1400080c0
   140003130:	test   rbx,rbx
   140003133:	je     0x14000313f
   140003135:	mov    rcx,rbx
   140003138:	call   0x140002774
   14000313d:	jmp    0x1400030cc
   14000313f:	mov    r14d,r12d
   140003142:	mov    rcx,QWORD PTR [rbp-0x50]
   140003146:	test   rcx,rcx
   140003149:	je     0x140003162
   14000314b:	call   QWORD PTR [rip+0x5207]        # 0x140008358
   140003151:	mov    rcx,QWORD PTR [rbp-0x50]
   140003155:	or     eax,0x10000000
   14000315a:	cmovns rcx,r12
   14000315e:	mov    QWORD PTR [rbp-0x50],rcx
   140003162:	lea    rcx,[rbp-0x30]
   140003166:	call   QWORD PTR [rip+0x4f2c]        # 0x140008098
   14000316c:	nop
   14000316d:	mov    rax,QWORD PTR [rbp-0x40]
   140003171:	mov    rdx,QWORD PTR [rax]
   140003174:	mov    QWORD PTR [rax],rax
   140003177:	mov    rax,QWORD PTR [rbp-0x40]
   14000317b:	mov    QWORD PTR [rax+0x8],rax
   14000317f:	mov    QWORD PTR [rbp-0x38],r12
   140003183:	mov    rcx,QWORD PTR [rbp-0x40]
   140003187:	cmp    rdx,rcx
   14000318a:	je     0x1400031a4
   14000318c:	mov    rbx,QWORD PTR [rdx]
   14000318f:	mov    rcx,rdx
   140003192:	call   QWORD PTR [rip+0x50c8]        # 0x140008260
   140003198:	mov    rdx,rbx
   14000319b:	mov    rcx,QWORD PTR [rbp-0x40]
   14000319f:	cmp    rbx,rcx
   1400031a2:	jne    0x14000318c
   1400031a4:	call   QWORD PTR [rip+0x50b6]        # 0x140008260
   1400031aa:	nop
   1400031ab:	lea    rax,[rbp-0x70]
   1400031af:	mov    QWORD PTR [rsp+0x50],rax
   1400031b4:	mov    rcx,QWORD PTR [rbp-0x50]
   1400031b8:	test   rcx,rcx
   1400031bb:	je     0x1400031d4
   1400031bd:	call   QWORD PTR [rip+0x5195]        # 0x140008358
   1400031c3:	mov    rcx,QWORD PTR [rbp-0x50]
   1400031c7:	or     eax,0x10000000
   1400031cc:	cmovns rcx,r12
   1400031d0:	mov    QWORD PTR [rbp-0x50],rcx
   1400031d4:	lea    rcx,[rbp-0x70]
   1400031d8:	call   0x1400034ac
   1400031dd:	nop
   1400031de:	test   rdi,rdi
   1400031e1:	je     0x1400031ed
   1400031e3:	mov    rcx,rdi
   1400031e6:	call   QWORD PTR [rip+0x4ebc]        # 0x1400080a8
   1400031ec:	nop
   1400031ed:	cmp    BYTE PTR [rsp+0x41],r12b
   1400031f2:	je     0x1400031fa
   1400031f4:	call   QWORD PTR [rip+0x5016]        # 0x140008210
   1400031fa:	mov    eax,r14d
   1400031fd:	mov    rcx,QWORD PTR [rbp+0x0]
   140003201:	xor    rcx,rsp
   140003204:	call   0x1400055f0
   140003209:	lea    r11,[rsp+0x110]
   140003211:	mov    rbx,QWORD PTR [r11+0x20]
   140003215:	mov    rsi,QWORD PTR [r11+0x28]
   140003219:	mov    rdi,QWORD PTR [r11+0x30]
   14000321d:	mov    r12,QWORD PTR [r11+0x38]
   140003221:	mov    rsp,r11
   140003224:	pop    r15
   140003226:	pop    r14
   140003228:	pop    rbp
   140003229:	ret    
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	mov    QWORD PTR [rsp+0x8],rbx
   140003235:	mov    QWORD PTR [rsp+0x10],rsi
   14000323a:	push   rdi
   14000323b:	sub    rsp,0x20
   14000323f:	and    QWORD PTR [rcx+0x10],0x0
   140003244:	mov    rsi,rdx
   140003247:	mov    QWORD PTR [rcx+0x18],0xf
   14000324f:	mov    rbx,rcx
   140003252:	mov    BYTE PTR [rcx],0x0
   140003255:	cmp    BYTE PTR [rdx],0x0
   140003258:	jne    0x14000325e
   14000325a:	xor    edi,edi
   14000325c:	jmp    0x14000326b
   14000325e:	or     rdi,0xffffffffffffffff
   140003262:	inc    rdi
   140003265:	cmp    BYTE PTR [rdx+rdi*1],0x0
   140003269:	jne    0x140003262
   14000326b:	mov    rdx,QWORD PTR [rcx+0x18]
   14000326f:	cmp    rdx,0x10
   140003273:	jb     0x14000327a
   140003275:	mov    rax,QWORD PTR [rcx]
   140003278:	jmp    0x14000327d
   14000327a:	mov    rax,rcx
   14000327d:	cmp    rsi,rax
   140003280:	jb     0x1400032b8
   140003282:	cmp    rdx,0x10
   140003286:	jb     0x14000328b
   140003288:	mov    rcx,QWORD PTR [rcx]
   14000328b:	add    rcx,QWORD PTR [rbx+0x10]
   14000328f:	cmp    rcx,rsi
   140003292:	jbe    0x1400032b8
   140003294:	cmp    rdx,0x10
   140003298:	jb     0x14000329f
   14000329a:	mov    rax,QWORD PTR [rbx]
   14000329d:	jmp    0x1400032a2
   14000329f:	mov    rax,rbx
   1400032a2:	sub    rsi,rax
   1400032a5:	mov    r9,rdi
   1400032a8:	mov    r8,rsi
   1400032ab:	mov    rdx,rbx
   1400032ae:	mov    rcx,rbx
   1400032b1:	call   0x1400039cc
   1400032b6:	jmp    0x140003329
   1400032b8:	cmp    rdi,0xfffffffffffffffe
   1400032bc:	ja     0x14000333c
   1400032be:	cmp    rdx,rdi
   1400032c1:	jae    0x1400032d4
   1400032c3:	mov    r8,QWORD PTR [rbx+0x10]
   1400032c7:	mov    rdx,rdi
   1400032ca:	mov    rcx,rbx
   1400032cd:	call   0x140003730
   1400032d2:	jmp    0x1400032ee
   1400032d4:	test   rdi,rdi
   1400032d7:	jne    0x1400032f3
   1400032d9:	and    QWORD PTR [rbx+0x10],rdi
   1400032dd:	cmp    rdx,0x10
   1400032e1:	jb     0x1400032e8
   1400032e3:	mov    rax,QWORD PTR [rbx]
   1400032e6:	jmp    0x1400032eb
   1400032e8:	mov    rax,rbx
   1400032eb:	mov    BYTE PTR [rax],0x0
   1400032ee:	test   rdi,rdi
   1400032f1:	je     0x140003329
   1400032f3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400032f8:	jb     0x1400032ff
   1400032fa:	mov    rcx,QWORD PTR [rbx]
   1400032fd:	jmp    0x140003302
   1400032ff:	mov    rcx,rbx
   140003302:	test   rdi,rdi
   140003305:	je     0x140003312
   140003307:	mov    r8,rdi
   14000330a:	mov    rdx,rsi
   14000330d:	call   0x140005db6
   140003312:	cmp    QWORD PTR [rbx+0x18],0x10
   140003317:	mov    QWORD PTR [rbx+0x10],rdi
   14000331b:	jb     0x140003322
   14000331d:	mov    rax,QWORD PTR [rbx]
   140003320:	jmp    0x140003325
   140003322:	mov    rax,rbx
   140003325:	mov    BYTE PTR [rax+rdi*1],0x0
   140003329:	mov    rsi,QWORD PTR [rsp+0x38]
   14000332e:	mov    rax,rbx
   140003331:	mov    rbx,QWORD PTR [rsp+0x30]
   140003336:	add    rsp,0x20
   14000333a:	pop    rdi
   14000333b:	ret    
   14000333c:	call   0x14000360c
   140003341:	int3   
   140003342:	int3   
   140003343:	int3   
   140003344:	int3   
   140003345:	int3   
   140003346:	int3   
   140003347:	int3   
   140003348:	mov    QWORD PTR [rsp+0x8],rbx
   14000334d:	mov    QWORD PTR [rsp+0x10],rbp
   140003352:	mov    QWORD PTR [rsp+0x18],rsi
   140003357:	push   rdi
   140003358:	sub    rsp,0x20
   14000335c:	xor    ebp,ebp
   14000335e:	mov    QWORD PTR [rcx+0x18],0x7
   140003366:	mov    QWORD PTR [rcx+0x10],rbp
   14000336a:	mov    rdi,r8
   14000336d:	mov    WORD PTR [rcx],bp
   140003370:	mov    rsi,rdx
   140003373:	mov    rbx,rcx
   140003376:	test   rdx,rdx
   140003379:	je     0x1400033cd
   14000337b:	cmp    QWORD PTR [rcx+0x18],0x8
   140003380:	jb     0x140003387
   140003382:	mov    rax,QWORD PTR [rcx]
   140003385:	jmp    0x14000338a
   140003387:	mov    rax,rcx
   14000338a:	cmp    rdx,rax
   14000338d:	jb     0x1400033cd
   14000338f:	cmp    QWORD PTR [rcx+0x18],0x8
   140003394:	jb     0x140003399
   140003396:	mov    rcx,QWORD PTR [rcx]
   140003399:	lea    rcx,[rcx+rbp*2]
   14000339d:	cmp    rcx,rdx
   1400033a0:	jbe    0x1400033cd
   1400033a2:	cmp    QWORD PTR [rbx+0x18],0x8
   1400033a7:	jb     0x1400033ae
   1400033a9:	mov    rax,QWORD PTR [rbx]
   1400033ac:	jmp    0x1400033b1
   1400033ae:	mov    rax,rbx
   1400033b1:	sub    rsi,rax
   1400033b4:	mov    r9,r8
   1400033b7:	sar    rsi,1
   1400033ba:	mov    rdx,rbx
   1400033bd:	mov    r8,rsi
   1400033c0:	mov    rcx,rbx
   1400033c3:	call   0x140003854
   1400033c8:	jmp    0x14000344d
   1400033cd:	movabs rax,0x7ffffffffffffffe
   1400033d7:	cmp    r8,rax
   1400033da:	ja     0x140003465
   1400033e0:	cmp    QWORD PTR [rbx+0x18],r8
   1400033e4:	jae    0x1400033f6
   1400033e6:	mov    r8,rbp
   1400033e9:	mov    rdx,rdi
   1400033ec:	mov    rcx,rbx
   1400033ef:	call   0x140003b28
   1400033f4:	jmp    0x140003411
   1400033f6:	test   r8,r8
   1400033f9:	jne    0x140003411
   1400033fb:	cmp    QWORD PTR [rbx+0x18],0x8
   140003400:	mov    QWORD PTR [rbx+0x10],rbp
   140003404:	jb     0x14000340b
   140003406:	mov    rax,QWORD PTR [rbx]
   140003409:	jmp    0x14000340e
   14000340b:	mov    rax,rbx
   14000340e:	mov    WORD PTR [rax],bp
   140003411:	test   rdi,rdi
   140003414:	je     0x14000344d
   140003416:	cmp    QWORD PTR [rbx+0x18],0x8
   14000341b:	jb     0x140003422
   14000341d:	mov    rcx,QWORD PTR [rbx]
   140003420:	jmp    0x140003425
   140003422:	mov    rcx,rbx
   140003425:	test   rdi,rdi
   140003428:	je     0x140003436
   14000342a:	lea    r8,[rdi+rdi*1]
   14000342e:	mov    rdx,rsi
   140003431:	call   0x140005db6
   140003436:	cmp    QWORD PTR [rbx+0x18],0x8
   14000343b:	mov    QWORD PTR [rbx+0x10],rdi
   14000343f:	jb     0x140003446
   140003441:	mov    rax,QWORD PTR [rbx]
   140003444:	jmp    0x140003449
   140003446:	mov    rax,rbx
   140003449:	mov    WORD PTR [rax+rdi*2],bp
   14000344d:	mov    rbp,QWORD PTR [rsp+0x38]
   140003452:	mov    rax,rbx
   140003455:	mov    rbx,QWORD PTR [rsp+0x30]
   14000345a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000345f:	add    rsp,0x20
   140003463:	pop    rdi
   140003464:	ret    
   140003465:	call   0x14000360c
   14000346a:	int3   
   14000346b:	int3   
   14000346c:	int3   
   14000346d:	int3   
   14000346e:	int3   
   14000346f:	int3   
   140003470:	int3   
   140003471:	int3   
   140003472:	int3   
   140003473:	int3   
   140003474:	rex push rbx
   140003476:	sub    rsp,0x20
   14000347a:	cmp    QWORD PTR [rcx+0x18],0x8
   14000347f:	mov    rbx,rcx
   140003482:	jb     0x14000348d
   140003484:	mov    rcx,QWORD PTR [rcx]
   140003487:	call   QWORD PTR [rip+0x4dd3]        # 0x140008260
   14000348d:	xor    eax,eax
   14000348f:	mov    QWORD PTR [rbx+0x18],0x7
   140003497:	mov    QWORD PTR [rbx+0x10],rax
   14000349b:	mov    WORD PTR [rbx],ax
   14000349e:	add    rsp,0x20
   1400034a2:	pop    rbx
   1400034a3:	ret    
   1400034a4:	int3   
   1400034a5:	int3   
   1400034a6:	int3   
   1400034a7:	int3   
   1400034a8:	int3   
   1400034a9:	int3   
   1400034aa:	int3   
   1400034ab:	int3   
   1400034ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400034b1:	mov    QWORD PTR [rsp+0x10],rsi
   1400034b6:	mov    QWORD PTR [rsp+0x18],rdi
   1400034bb:	push   r14
   1400034bd:	sub    rsp,0x20
   1400034c1:	mov    r14,QWORD PTR [rcx+0x18]
   1400034c5:	mov    rsi,rcx
   1400034c8:	test   r14,r14
   1400034cb:	je     0x1400034ef
   1400034cd:	mov    rax,QWORD PTR [r14]
   1400034d0:	cmp    r14,rcx
   1400034d3:	setne  bl
   1400034d6:	mov    rdi,QWORD PTR [rax+0x20]
   1400034da:	mov    rcx,rdi
   1400034dd:	call   QWORD PTR [rip+0x4ecd]        # 0x1400083b0
   1400034e3:	mov    dl,bl
   1400034e5:	mov    rcx,r14
   1400034e8:	call   rdi
   1400034ea:	and    QWORD PTR [rsi+0x18],0x0
   1400034ef:	mov    r14,QWORD PTR [rsi+0x18]
   1400034f3:	test   r14,r14
   1400034f6:	je     0x14000351a
   1400034f8:	mov    rax,QWORD PTR [r14]
   1400034fb:	cmp    r14,rsi
   1400034fe:	setne  bl
   140003501:	mov    rdi,QWORD PTR [rax+0x20]
   140003505:	mov    rcx,rdi
   140003508:	call   QWORD PTR [rip+0x4ea2]        # 0x1400083b0
   14000350e:	mov    dl,bl
   140003510:	mov    rcx,r14
   140003513:	call   rdi
   140003515:	and    QWORD PTR [rsi+0x18],0x0
   14000351a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000351f:	mov    rsi,QWORD PTR [rsp+0x38]
   140003524:	mov    rdi,QWORD PTR [rsp+0x40]
   140003529:	add    rsp,0x20
   14000352d:	pop    r14
   14000352f:	ret    
   140003530:	int3   
   140003531:	int3   
   140003532:	int3   
   140003533:	int3   
   140003534:	int3   
   140003535:	int3   
   140003536:	int3   
   140003537:	int3   
   140003538:	mov    QWORD PTR [rsp+0x8],rbx
   14000353d:	push   rdi
   14000353e:	sub    rsp,0x20
   140003542:	mov    rax,QWORD PTR [rcx]
   140003545:	mov    rdi,rcx
   140003548:	mov    rcx,QWORD PTR [rax]
   14000354b:	mov    QWORD PTR [rax],rax
   14000354e:	mov    rax,QWORD PTR [rdi]
   140003551:	mov    QWORD PTR [rax+0x8],rax
   140003555:	and    QWORD PTR [rdi+0x8],0x0
   14000355a:	cmp    rcx,QWORD PTR [rdi]
   14000355d:	je     0x140003570
   14000355f:	mov    rbx,QWORD PTR [rcx]
   140003562:	call   QWORD PTR [rip+0x4cf8]        # 0x140008260
   140003568:	mov    rcx,rbx
   14000356b:	cmp    rbx,QWORD PTR [rdi]
   14000356e:	jne    0x14000355f
   140003570:	mov    rcx,QWORD PTR [rdi]
   140003573:	mov    rbx,QWORD PTR [rsp+0x30]
   140003578:	add    rsp,0x20
   14000357c:	pop    rdi
   14000357d:	rex.W jmp QWORD PTR [rip+0x4cdc]        # 0x140008260
   140003584:	int3   
   140003585:	int3   
   140003586:	int3   
   140003587:	int3   
   140003588:	int3   
   140003589:	int3   
   14000358a:	int3   
   14000358b:	int3   
   14000358c:	sub    rsp,0x28
   140003590:	cmp    BYTE PTR [rcx+0x1],0x0
   140003594:	je     0x1400035a0
   140003596:	mov    BYTE PTR [rcx+0x1],0x0
   14000359a:	call   QWORD PTR [rip+0x4c70]        # 0x140008210
   1400035a0:	add    rsp,0x28
   1400035a4:	ret    
   1400035a5:	int3   
   1400035a6:	int3   
   1400035a7:	int3   
   1400035a8:	int3   
   1400035a9:	int3   
   1400035aa:	int3   
   1400035ab:	int3   
   1400035ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400035b1:	mov    QWORD PTR [rsp+0x10],rsi
   1400035b6:	push   rdi
   1400035b7:	sub    rsp,0x20
   1400035bb:	mov    rdi,r8
   1400035be:	mov    rbx,rcx
   1400035c1:	test   dl,dl
   1400035c3:	je     0x1400035e5
   1400035c5:	cmp    QWORD PTR [rcx+0x18],0x10
   1400035ca:	jb     0x1400035e5
   1400035cc:	mov    rsi,QWORD PTR [rcx]
   1400035cf:	test   r8,r8
   1400035d2:	je     0x1400035dc
   1400035d4:	mov    rdx,rsi
   1400035d7:	call   0x140005db6
   1400035dc:	mov    rcx,rsi
   1400035df:	call   QWORD PTR [rip+0x4c7b]        # 0x140008260
   1400035e5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400035ea:	mov    QWORD PTR [rbx+0x18],0xf
   1400035f2:	mov    QWORD PTR [rbx+0x10],rdi
   1400035f6:	mov    BYTE PTR [rdi+rbx*1],0x0
   1400035fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035ff:	add    rsp,0x20
   140003603:	pop    rdi
   140003604:	ret    
   140003605:	int3   
   140003606:	int3   
   140003607:	int3   
   140003608:	int3   
   140003609:	int3   
   14000360a:	int3   
   14000360b:	int3   
   14000360c:	sub    rsp,0x28
   140003610:	lea    rcx,[rip+0x56a1]        # 0x140008cb8
   140003617:	call   QWORD PTR [rip+0x4c1b]        # 0x140008238
   14000361d:	int3   
   14000361e:	int3   
   14000361f:	int3   
   140003620:	int3   
   140003621:	int3   
   140003622:	int3   
   140003623:	int3   
   140003624:	mov    QWORD PTR [rsp+0x8],rbx
   140003629:	mov    QWORD PTR [rsp+0x10],rbp
   14000362e:	mov    QWORD PTR [rsp+0x18],rsi
   140003633:	push   rdi
   140003634:	sub    rsp,0x20
   140003638:	xor    ebp,ebp
   14000363a:	mov    rdi,r8
   14000363d:	mov    rbx,rcx
   140003640:	test   dl,dl
   140003642:	je     0x140003667
   140003644:	cmp    QWORD PTR [rcx+0x18],0x8
   140003649:	jb     0x140003667
   14000364b:	mov    rsi,QWORD PTR [rcx]
   14000364e:	test   r8,r8
   140003651:	je     0x14000365e
   140003653:	add    r8,r8
   140003656:	mov    rdx,rsi
   140003659:	call   0x140005db6
   14000365e:	mov    rcx,rsi
   140003661:	call   QWORD PTR [rip+0x4bf9]        # 0x140008260
   140003667:	mov    rsi,QWORD PTR [rsp+0x40]
   14000366c:	mov    QWORD PTR [rbx+0x18],0x7
   140003674:	mov    QWORD PTR [rbx+0x10],rdi
   140003678:	mov    WORD PTR [rbx+rdi*2],bp
   14000367c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003681:	mov    rbp,QWORD PTR [rsp+0x38]
   140003686:	add    rsp,0x20
   14000368a:	pop    rdi
   14000368b:	ret    
   14000368c:	int3   
   14000368d:	int3   
   14000368e:	int3   
   14000368f:	int3   
   140003690:	int3   
   140003691:	int3   
   140003692:	int3   
   140003693:	int3   
   140003694:	mov    QWORD PTR [rsp+0x8],rbx
   140003699:	mov    QWORD PTR [rsp+0x10],rbp
   14000369e:	mov    QWORD PTR [rsp+0x18],rsi
   1400036a3:	push   rdi
   1400036a4:	sub    rsp,0x20
   1400036a8:	mov    rsi,QWORD PTR [rcx+0x18]
   1400036ac:	mov    rbp,rcx
   1400036af:	test   rsi,rsi
   1400036b2:	je     0x1400036d6
   1400036b4:	mov    rax,QWORD PTR [rsi]
   1400036b7:	cmp    rsi,rcx
   1400036ba:	setne  bl
   1400036bd:	mov    rdi,QWORD PTR [rax+0x20]
   1400036c1:	mov    rcx,rdi
   1400036c4:	call   QWORD PTR [rip+0x4ce6]        # 0x1400083b0
   1400036ca:	mov    dl,bl
   1400036cc:	mov    rcx,rsi
   1400036cf:	call   rdi
   1400036d1:	and    QWORD PTR [rbp+0x18],0x0
   1400036d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036db:	mov    rbp,QWORD PTR [rsp+0x38]
   1400036e0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400036e5:	add    rsp,0x20
   1400036e9:	pop    rdi
   1400036ea:	ret    
   1400036eb:	int3   
   1400036ec:	int3   
   1400036ed:	int3   
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	int3   
   1400036f1:	int3   
   1400036f2:	int3   
   1400036f3:	int3   
   1400036f4:	int3   
   1400036f5:	int3   
   1400036f6:	int3   
   1400036f7:	int3   
   1400036f8:	int3   
   1400036f9:	int3   
   1400036fa:	int3   
   1400036fb:	int3   
   1400036fc:	int3   
   1400036fd:	int3   
   1400036fe:	int3   
   1400036ff:	int3   
   140003700:	rex push rbx
   140003702:	sub    rsp,0x20
   140003706:	lea    rax,[rip+0x5623]        # 0x140008d30
   14000370d:	mov    rbx,rcx
   140003710:	mov    QWORD PTR [rcx],rax
   140003713:	test   dl,0x1
   140003716:	je     0x14000371e
   140003718:	call   QWORD PTR [rip+0x4b42]        # 0x140008260
   14000371e:	mov    rax,rbx
   140003721:	add    rsp,0x20
   140003725:	pop    rbx
   140003726:	ret    
   140003727:	int3   
   140003728:	int3   
   140003729:	int3   
   14000372a:	int3   
   14000372b:	int3   
   14000372c:	int3   
   14000372d:	int3   
   14000372e:	int3   
   14000372f:	int3   
   140003730:	mov    rax,rsp
   140003733:	mov    QWORD PTR [rax+0x18],r8
   140003737:	mov    QWORD PTR [rax+0x10],rdx
   14000373b:	mov    QWORD PTR [rax+0x8],rcx
   14000373f:	push   rbx
   140003740:	push   rsi
   140003741:	push   rdi
   140003742:	push   r14
   140003744:	sub    rsp,0x38
   140003748:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140003750:	mov    rsi,r8
   140003753:	mov    rbx,rcx
   140003756:	mov    rdi,rdx
   140003759:	or     rdi,0xf
   14000375d:	mov    r9,0xfffffffffffffffe
   140003764:	cmp    rdi,r9
   140003767:	jbe    0x14000376e
   140003769:	mov    rdi,rdx
   14000376c:	jmp    0x14000379f
   14000376e:	mov    r8,QWORD PTR [rcx+0x18]
   140003772:	mov    rcx,r8
   140003775:	shr    rcx,1
   140003778:	movabs rax,0xaaaaaaaaaaaaaaab
   140003782:	mul    rdi
   140003785:	shr    rdx,1
   140003788:	cmp    rcx,rdx
   14000378b:	jbe    0x14000379f
   14000378d:	mov    rax,r9
   140003790:	sub    rax,rcx
   140003793:	cmp    r8,rax
   140003796:	lea    rdi,[rcx+r8*1]
   14000379a:	jbe    0x14000379f
   14000379c:	mov    rdi,r9
   14000379f:	lea    rcx,[rdi+0x1]
   1400037a3:	xor    r14d,r14d
   1400037a6:	test   rcx,rcx
   1400037a9:	je     0x1400037c5
   1400037ab:	cmp    rcx,0xffffffffffffffff
   1400037af:	ja     0x1400037be
   1400037b1:	call   0x1400051d0
   1400037b6:	mov    r14,rax
   1400037b9:	test   rax,rax
   1400037bc:	jne    0x1400037c5
   1400037be:	call   QWORD PTR [rip+0x4a84]        # 0x140008248
   1400037c4:	nop
   1400037c5:	jmp    0x1400037db
   1400037c7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400037cc:	mov    rsi,QWORD PTR [rsp+0x70]
   1400037d1:	mov    rdi,QWORD PTR [rsp+0x68]
   1400037d6:	mov    r14,QWORD PTR [rsp+0x78]
   1400037db:	test   rsi,rsi
   1400037de:	je     0x1400037ff
   1400037e0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400037e5:	jb     0x1400037ec
   1400037e7:	mov    rdx,QWORD PTR [rbx]
   1400037ea:	jmp    0x1400037ef
   1400037ec:	mov    rdx,rbx
   1400037ef:	test   rsi,rsi
   1400037f2:	je     0x1400037ff
   1400037f4:	mov    r8,rsi
   1400037f7:	mov    rcx,r14
   1400037fa:	call   0x140005db6
   1400037ff:	cmp    QWORD PTR [rbx+0x18],0x10
   140003804:	jb     0x14000380f
   140003806:	mov    rcx,QWORD PTR [rbx]
   140003809:	call   QWORD PTR [rip+0x4a51]        # 0x140008260
   14000380f:	mov    BYTE PTR [rbx],0x0
   140003812:	mov    QWORD PTR [rbx],r14
   140003815:	mov    QWORD PTR [rbx+0x18],rdi
   140003819:	mov    QWORD PTR [rbx+0x10],rsi
   14000381d:	cmp    rdi,0x10
   140003821:	jb     0x140003826
   140003823:	mov    rbx,r14
   140003826:	mov    BYTE PTR [rbx+rsi*1],0x0
   14000382a:	add    rsp,0x38
   14000382e:	pop    r14
   140003830:	pop    rdi
   140003831:	pop    rsi
   140003832:	pop    rbx
   140003833:	ret    
   140003834:	int3   
   140003835:	int3   
   140003836:	int3   
   140003837:	int3   
   140003838:	int3   
   140003839:	int3   
   14000383a:	int3   
   14000383b:	int3   
   14000383c:	sub    rsp,0x28
   140003840:	lea    rcx,[rip+0x5481]        # 0x140008cc8
   140003847:	call   QWORD PTR [rip+0x4a03]        # 0x140008250
   14000384d:	int3   
   14000384e:	int3   
   14000384f:	int3   
   140003850:	int3   
   140003851:	int3   
   140003852:	int3   
   140003853:	int3   
   140003854:	mov    rax,rsp
   140003857:	mov    QWORD PTR [rax+0x8],rbx
   14000385b:	mov    QWORD PTR [rax+0x10],rbp
   14000385f:	mov    QWORD PTR [rax+0x18],rsi
   140003863:	mov    QWORD PTR [rax+0x20],rdi
   140003867:	push   r14
   140003869:	sub    rsp,0x20
   14000386d:	mov    rdi,QWORD PTR [rdx+0x10]
   140003871:	mov    rbp,r8
   140003874:	mov    r14,rdx
   140003877:	mov    rbx,rcx
   14000387a:	cmp    rdi,r8
   14000387d:	jb     0x1400039b2
   140003883:	sub    rdi,r8
   140003886:	cmp    r9,rdi
   140003889:	cmovb  rdi,r9
   14000388d:	cmp    rcx,rdx
   140003890:	jne    0x140003909
   140003892:	lea    rax,[rdi+r8*1]
   140003896:	cmp    QWORD PTR [rcx+0x10],rax
   14000389a:	jb     0x1400039b8
   1400038a0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400038a5:	mov    QWORD PTR [rcx+0x10],rax
   1400038a9:	jb     0x1400038ae
   1400038ab:	mov    rcx,QWORD PTR [rcx]
   1400038ae:	xor    esi,esi
   1400038b0:	mov    WORD PTR [rcx+rax*2],si
   1400038b4:	mov    rdi,QWORD PTR [rbx+0x10]
   1400038b8:	cmp    rdi,r8
   1400038bb:	ja     0x1400038d8
   1400038bd:	cmp    QWORD PTR [rbx+0x18],0x8
   1400038c2:	mov    QWORD PTR [rbx+0x10],rsi
   1400038c6:	jb     0x1400038cd
   1400038c8:	mov    rax,QWORD PTR [rbx]
   1400038cb:	jmp    0x1400038d0
   1400038cd:	mov    rax,rbx
   1400038d0:	mov    WORD PTR [rax],si
   1400038d3:	jmp    0x140003994
   1400038d8:	test   r8,r8
   1400038db:	je     0x140003994
   1400038e1:	cmp    QWORD PTR [rbx+0x18],0x8
   1400038e6:	jb     0x1400038ed
   1400038e8:	mov    rcx,QWORD PTR [rbx]
   1400038eb:	jmp    0x1400038f0
   1400038ed:	mov    rcx,rbx
   1400038f0:	sub    rdi,r8
   1400038f3:	je     0x14000397d
   1400038f9:	lea    r8,[rdi+rdi*1]
   1400038fd:	lea    rdx,[rcx+rbp*2]
   140003901:	call   QWORD PTR [rip+0x4961]        # 0x140008268
   140003907:	jmp    0x14000397d
   140003909:	movabs rax,0x7ffffffffffffffe
   140003913:	cmp    rdi,rax
   140003916:	ja     0x1400039be
   14000391c:	xor    esi,esi
   14000391e:	cmp    QWORD PTR [rcx+0x18],rdi
   140003922:	jae    0x140003932
   140003924:	mov    r8,QWORD PTR [rcx+0x10]
   140003928:	mov    rdx,rdi
   14000392b:	call   0x140003b28
   140003930:	jmp    0x14000394d
   140003932:	test   rdi,rdi
   140003935:	jne    0x140003952
   140003937:	cmp    QWORD PTR [rcx+0x18],0x8
   14000393c:	mov    QWORD PTR [rcx+0x10],rsi
   140003940:	jb     0x140003947
   140003942:	mov    rax,QWORD PTR [rcx]
   140003945:	jmp    0x14000394a
   140003947:	mov    rax,rcx
   14000394a:	mov    WORD PTR [rax],si
   14000394d:	test   rdi,rdi
   140003950:	je     0x140003994
   140003952:	cmp    QWORD PTR [r14+0x18],0x8
   140003957:	jb     0x14000395c
   140003959:	mov    r14,QWORD PTR [r14]
   14000395c:	cmp    QWORD PTR [rbx+0x18],0x8
   140003961:	jb     0x140003968
   140003963:	mov    rcx,QWORD PTR [rbx]
   140003966:	jmp    0x14000396b
   140003968:	mov    rcx,rbx
   14000396b:	test   rdi,rdi
   14000396e:	je     0x14000397d
   140003970:	lea    r8,[rdi+rdi*1]
   140003974:	lea    rdx,[r14+rbp*2]
   140003978:	call   0x140005db6
   14000397d:	cmp    QWORD PTR [rbx+0x18],0x8
   140003982:	mov    QWORD PTR [rbx+0x10],rdi
   140003986:	jb     0x14000398d
   140003988:	mov    rax,QWORD PTR [rbx]
   14000398b:	jmp    0x140003990
   14000398d:	mov    rax,rbx
   140003990:	mov    WORD PTR [rax+rdi*2],si
   140003994:	mov    rbp,QWORD PTR [rsp+0x38]
   140003999:	mov    rax,rbx
   14000399c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039a1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400039a6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400039ab:	add    rsp,0x20
   1400039af:	pop    r14
   1400039b1:	ret    
   1400039b2:	call   0x14000383c
   1400039b7:	int3   
   1400039b8:	call   0x14000383c
   1400039bd:	int3   
   1400039be:	call   0x14000360c
   1400039c3:	int3   
   1400039c4:	int3   
   1400039c5:	int3   
   1400039c6:	int3   
   1400039c7:	int3   
   1400039c8:	int3   
   1400039c9:	int3   
   1400039ca:	int3   
   1400039cb:	int3   
   1400039cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400039d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400039d6:	mov    QWORD PTR [rsp+0x18],rdi
   1400039db:	push   r14
   1400039dd:	sub    rsp,0x20
   1400039e1:	mov    rdi,QWORD PTR [rdx+0x10]
   1400039e5:	mov    rbp,r8
   1400039e8:	mov    r14,rdx
   1400039eb:	mov    rbx,rcx
   1400039ee:	cmp    rdi,r8
   1400039f1:	jb     0x140003b0f
   1400039f7:	sub    rdi,r8
   1400039fa:	cmp    r9,rdi
   1400039fd:	cmovb  rdi,r9
   140003a01:	cmp    rcx,rdx
   140003a04:	jne    0x140003a77
   140003a06:	lea    rax,[rdi+r8*1]
   140003a0a:	cmp    QWORD PTR [rcx+0x10],rax
   140003a0e:	jb     0x140003b15
   140003a14:	cmp    QWORD PTR [rcx+0x18],0x10
   140003a19:	mov    QWORD PTR [rcx+0x10],rax
   140003a1d:	jb     0x140003a22
   140003a1f:	mov    rcx,QWORD PTR [rcx]
   140003a22:	mov    BYTE PTR [rcx+rax*1],0x0
   140003a26:	mov    rdi,QWORD PTR [rbx+0x10]
   140003a2a:	cmp    rdi,r8
   140003a2d:	ja     0x140003a4b
   140003a2f:	and    QWORD PTR [rbx+0x10],0x0
   140003a34:	cmp    QWORD PTR [rbx+0x18],0x10
   140003a39:	jb     0x140003a40
   140003a3b:	mov    rax,QWORD PTR [rbx]
   140003a3e:	jmp    0x140003a43
   140003a40:	mov    rax,rbx
   140003a43:	mov    BYTE PTR [rax],0x0
   140003a46:	jmp    0x140003af6
   140003a4b:	test   r8,r8
   140003a4e:	je     0x140003af6
   140003a54:	cmp    QWORD PTR [rbx+0x18],0x10
   140003a59:	jb     0x140003a60
   140003a5b:	mov    rcx,QWORD PTR [rbx]
   140003a5e:	jmp    0x140003a63
   140003a60:	mov    rcx,rbx
   140003a63:	sub    rdi,r8
   140003a66:	je     0x140003adf
   140003a68:	lea    rdx,[rcx+r8*1]
   140003a6c:	mov    r8,rdi
   140003a6f:	call   QWORD PTR [rip+0x47f3]        # 0x140008268
   140003a75:	jmp    0x140003adf
   140003a77:	cmp    rdi,0xfffffffffffffffe
   140003a7b:	ja     0x140003b1b
   140003a81:	cmp    QWORD PTR [rcx+0x18],rdi
   140003a85:	jae    0x140003a95
   140003a87:	mov    r8,QWORD PTR [rcx+0x10]
   140003a8b:	mov    rdx,rdi
   140003a8e:	call   0x140003730
   140003a93:	jmp    0x140003ab0
   140003a95:	test   rdi,rdi
   140003a98:	jne    0x140003ab5
   140003a9a:	and    QWORD PTR [rcx+0x10],rdi
   140003a9e:	cmp    QWORD PTR [rcx+0x18],0x10
   140003aa3:	jb     0x140003aaa
   140003aa5:	mov    rax,QWORD PTR [rcx]
   140003aa8:	jmp    0x140003aad
   140003aaa:	mov    rax,rcx
   140003aad:	mov    BYTE PTR [rax],0x0
   140003ab0:	test   rdi,rdi
   140003ab3:	je     0x140003af6
   140003ab5:	cmp    QWORD PTR [r14+0x18],0x10
   140003aba:	jb     0x140003abf
   140003abc:	mov    r14,QWORD PTR [r14]
   140003abf:	cmp    QWORD PTR [rbx+0x18],0x10
   140003ac4:	jb     0x140003acb
   140003ac6:	mov    rcx,QWORD PTR [rbx]
   140003ac9:	jmp    0x140003ace
   140003acb:	mov    rcx,rbx
   140003ace:	test   rdi,rdi
   140003ad1:	je     0x140003adf
   140003ad3:	lea    rdx,[r14+rbp*1]
   140003ad7:	mov    r8,rdi
   140003ada:	call   0x140005db6
   140003adf:	cmp    QWORD PTR [rbx+0x18],0x10
   140003ae4:	mov    QWORD PTR [rbx+0x10],rdi
   140003ae8:	jb     0x140003aef
   140003aea:	mov    rax,QWORD PTR [rbx]
   140003aed:	jmp    0x140003af2
   140003aef:	mov    rax,rbx
   140003af2:	mov    BYTE PTR [rax+rdi*1],0x0
   140003af6:	mov    rbp,QWORD PTR [rsp+0x38]
   140003afb:	mov    rax,rbx
   140003afe:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b03:	mov    rdi,QWORD PTR [rsp+0x40]
   140003b08:	add    rsp,0x20
   140003b0c:	pop    r14
   140003b0e:	ret    
   140003b0f:	call   0x14000383c
   140003b14:	int3   
   140003b15:	call   0x14000383c
   140003b1a:	int3   
   140003b1b:	call   0x14000360c
   140003b20:	int3   
   140003b21:	int3   
   140003b22:	int3   
   140003b23:	int3   
   140003b24:	int3   
   140003b25:	int3   
   140003b26:	int3   
   140003b27:	int3   
   140003b28:	mov    rax,rsp
   140003b2b:	mov    QWORD PTR [rax+0x18],r8
   140003b2f:	mov    QWORD PTR [rax+0x10],rdx
   140003b33:	mov    QWORD PTR [rax+0x8],rcx
   140003b37:	push   rbx
   140003b38:	push   rsi
   140003b39:	push   rdi
   140003b3a:	push   r14
   140003b3c:	push   r15
   140003b3e:	sub    rsp,0x30
   140003b42:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140003b4a:	mov    r14,r8
   140003b4d:	mov    rbx,rcx
   140003b50:	mov    rdi,rdx
   140003b53:	or     rdi,0x7
   140003b57:	movabs r9,0x7ffffffffffffffe
   140003b61:	cmp    rdi,r9
   140003b64:	jbe    0x140003b6b
   140003b66:	mov    rdi,rdx
   140003b69:	jmp    0x140003b9c
   140003b6b:	mov    r8,QWORD PTR [rcx+0x18]
   140003b6f:	mov    rcx,r8
   140003b72:	shr    rcx,1
   140003b75:	movabs rax,0xaaaaaaaaaaaaaaab
   140003b7f:	mul    rdi
   140003b82:	shr    rdx,1
   140003b85:	cmp    rcx,rdx
   140003b88:	jbe    0x140003b9c
   140003b8a:	mov    rax,r9
   140003b8d:	sub    rax,rcx
   140003b90:	cmp    r8,rax
   140003b93:	lea    rdi,[rcx+r8*1]
   140003b97:	jbe    0x140003b9c
   140003b99:	mov    rdi,r9
   140003b9c:	lea    rcx,[rdi+0x1]
   140003ba0:	xor    esi,esi
   140003ba2:	mov    r15d,esi
   140003ba5:	test   rcx,rcx
   140003ba8:	je     0x140003bd0
   140003baa:	movabs rax,0x7fffffffffffffff
   140003bb4:	cmp    rcx,rax
   140003bb7:	ja     0x140003bc9
   140003bb9:	add    rcx,rcx
   140003bbc:	call   0x1400051d0
   140003bc1:	mov    r15,rax
   140003bc4:	test   rax,rax
   140003bc7:	jne    0x140003bd0
   140003bc9:	call   QWORD PTR [rip+0x4679]        # 0x140008248
   140003bcf:	nop
   140003bd0:	jmp    0x140003be8
   140003bd2:	xor    esi,esi
   140003bd4:	mov    rbx,QWORD PTR [rsp+0x60]
   140003bd9:	mov    r14,QWORD PTR [rsp+0x70]
   140003bde:	mov    rdi,QWORD PTR [rsp+0x68]
   140003be3:	mov    r15,QWORD PTR [rsp+0x78]
   140003be8:	test   r14,r14
   140003beb:	je     0x140003c0d
   140003bed:	cmp    QWORD PTR [rbx+0x18],0x8
   140003bf2:	jb     0x140003bf9
   140003bf4:	mov    rdx,QWORD PTR [rbx]
   140003bf7:	jmp    0x140003bfc
   140003bf9:	mov    rdx,rbx
   140003bfc:	test   r14,r14
   140003bff:	je     0x140003c0d
   140003c01:	lea    r8,[r14+r14*1]
   140003c05:	mov    rcx,r15
   140003c08:	call   0x140005db6
   140003c0d:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c12:	jb     0x140003c1d
   140003c14:	mov    rcx,QWORD PTR [rbx]
   140003c17:	call   QWORD PTR [rip+0x4643]        # 0x140008260
   140003c1d:	mov    QWORD PTR [rbx],r15
   140003c20:	mov    QWORD PTR [rbx+0x18],rdi
   140003c24:	mov    QWORD PTR [rbx+0x10],r14
   140003c28:	cmp    rdi,0x8
   140003c2c:	jb     0x140003c31
   140003c2e:	mov    rbx,r15
   140003c31:	mov    WORD PTR [rbx+r14*2],si
   140003c36:	add    rsp,0x30
   140003c3a:	pop    r15
   140003c3c:	pop    r14
   140003c3e:	pop    rdi
   140003c3f:	pop    rsi
   140003c40:	pop    rbx
   140003c41:	ret    
   140003c42:	int3   
   140003c43:	int3   
   140003c44:	int3   
   140003c45:	int3   
   140003c46:	int3   
   140003c47:	int3   
   140003c48:	mov    rcx,rdx
   140003c4b:	rex.W jmp QWORD PTR [rip+0x460e]        # 0x140008260
   140003c52:	int3   
   140003c53:	int3   
   140003c54:	int3   
   140003c55:	int3   
   140003c56:	int3   
   140003c57:	int3   
   140003c58:	mov    QWORD PTR [rsp+0x8],rcx
   140003c5d:	push   rdi
   140003c5e:	sub    rsp,0x30
   140003c62:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003c6b:	mov    QWORD PTR [rsp+0x48],rbx
   140003c70:	mov    rdi,r8
   140003c73:	mov    rbx,rdx
   140003c76:	mov    ecx,0x18
   140003c7b:	call   0x1400051d0
   140003c80:	mov    QWORD PTR [rsp+0x40],rax
   140003c85:	test   rax,rax
   140003c88:	jne    0x140003c91
   140003c8a:	call   QWORD PTR [rip+0x45b8]        # 0x140008248
   140003c90:	int3   
   140003c91:	test   rbx,rbx
   140003c94:	jne    0x140003c9c
   140003c96:	mov    rbx,rax
   140003c99:	mov    rdi,rax
   140003c9c:	mov    QWORD PTR [rax],rbx
   140003c9f:	lea    rcx,[rax+0x8]
   140003ca3:	test   rcx,rcx
   140003ca6:	je     0x140003cab
   140003ca8:	mov    QWORD PTR [rcx],rdi
   140003cab:	mov    rbx,QWORD PTR [rsp+0x48]
   140003cb0:	add    rsp,0x30
   140003cb4:	pop    rdi
   140003cb5:	ret    
   140003cb6:	int3   
   140003cb7:	int3   
   140003cb8:	int3   
   140003cb9:	int3   
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	mov    rax,rsp
   140003cbf:	mov    QWORD PTR [rax+0x10],rbx
   140003cc3:	mov    QWORD PTR [rax+0x18],rbp
   140003cc7:	mov    QWORD PTR [rax+0x20],rsi
   140003ccb:	push   rdi
   140003ccc:	push   r14
   140003cce:	push   r15
   140003cd0:	sub    rsp,0x20
   140003cd4:	xor    ebp,ebp
   140003cd6:	mov    rbx,rdx
   140003cd9:	test   r8,r8
   140003cdc:	mov    WORD PTR [rax+0x8],bp
   140003ce0:	lea    rdx,[rax+0x8]
   140003ce4:	mov    r15,r9
   140003ce7:	cmovne rdx,r8
   140003ceb:	mov    rdi,rcx
   140003cee:	test   rdx,rdx
   140003cf1:	jne    0x140003cf8
   140003cf3:	lea    esi,[rbp+0x2]
   140003cf6:	jmp    0x140003d0d
   140003cf8:	or     rax,0xffffffffffffffff
   140003cfc:	inc    rax
   140003cff:	cmp    WORD PTR [rdx+rax*2],bp
   140003d03:	jne    0x140003cfc
   140003d05:	lea    rsi,[rax*2+0x2]
   140003d0d:	sub    rbx,rcx
   140003d10:	shr    rsi,1
   140003d13:	shr    rbx,1
   140003d16:	cmp    rsi,rbx
   140003d19:	cmovb  rbx,rsi
   140003d1d:	lea    r14,[rbx+rbx*1]
   140003d21:	mov    r8,r14
   140003d24:	call   0x140005db6
   140003d29:	test   r15,r15
   140003d2c:	je     0x140003d3c
   140003d2e:	cmp    rbx,0x1
   140003d32:	mov    rax,rbp
   140003d35:	cmova  rax,rdi
   140003d39:	mov    QWORD PTR [r15],rax
   140003d3c:	cmp    rbx,rsi
   140003d3f:	jae    0x140003d4e
   140003d41:	test   rbx,rbx
   140003d44:	je     0x140003d4e
   140003d46:	xor    eax,eax
   140003d48:	mov    WORD PTR [r14+rdi*1-0x2],ax
   140003d4e:	mov    rbx,QWORD PTR [rsp+0x48]
   140003d53:	lea    rax,[r14+rdi*1]
   140003d57:	mov    rbp,QWORD PTR [rsp+0x50]
   140003d5c:	mov    rsi,QWORD PTR [rsp+0x58]
   140003d61:	add    rsp,0x20
   140003d65:	pop    r15
   140003d67:	pop    r14
   140003d69:	pop    rdi
   140003d6a:	ret    
   140003d6b:	int3   
   140003d6c:	int3   
   140003d6d:	int3   
   140003d6e:	int3   
   140003d6f:	int3   
   140003d70:	int3   
   140003d71:	int3   
   140003d72:	int3   
   140003d73:	int3   
   140003d74:	mov    rax,rsp
   140003d77:	mov    QWORD PTR [rax+0x10],rbx
   140003d7b:	mov    QWORD PTR [rax+0x18],rsi
   140003d7f:	mov    QWORD PTR [rax+0x20],rdi
   140003d83:	push   r14
   140003d85:	sub    rsp,0x20
   140003d89:	mov    rbx,rdx
   140003d8c:	mov    BYTE PTR [rax+0x8],0x0
   140003d90:	test   r8,r8
   140003d93:	lea    rdx,[rax+0x8]
   140003d97:	mov    r14,r9
   140003d9a:	mov    rsi,rcx
   140003d9d:	cmovne rdx,r8
   140003da1:	test   rdx,rdx
   140003da4:	jne    0x140003dab
   140003da6:	lea    edi,[rdx+0x1]
   140003da9:	jmp    0x140003dbb
   140003dab:	or     rdi,0xffffffffffffffff
   140003daf:	inc    rdi
   140003db2:	cmp    BYTE PTR [rdx+rdi*1],0x0
   140003db6:	jne    0x140003daf
   140003db8:	inc    rdi
   140003dbb:	sub    rbx,rcx
   140003dbe:	cmp    rdi,rbx
   140003dc1:	cmovb  rbx,rdi
   140003dc5:	mov    r8,rbx
   140003dc8:	call   0x140005db6
   140003dcd:	test   r14,r14
   140003dd0:	je     0x140003ddf
   140003dd2:	xor    eax,eax
   140003dd4:	cmp    rbx,0x1
   140003dd8:	cmova  rax,rsi
   140003ddc:	mov    QWORD PTR [r14],rax
   140003ddf:	cmp    rbx,rdi
   140003de2:	jae    0x140003def
   140003de4:	test   rbx,rbx
   140003de7:	je     0x140003def
   140003de9:	xor    eax,eax
   140003deb:	mov    BYTE PTR [rbx+rsi*1-0x1],al
   140003def:	mov    rdi,QWORD PTR [rsp+0x48]
   140003df4:	lea    rax,[rbx+rsi*1]
   140003df8:	mov    rbx,QWORD PTR [rsp+0x38]
   140003dfd:	mov    rsi,QWORD PTR [rsp+0x40]
   140003e02:	add    rsp,0x20
   140003e06:	pop    r14
   140003e08:	ret    
   140003e09:	int3   
   140003e0a:	int3   
   140003e0b:	int3   
   140003e0c:	int3   
   140003e0d:	int3   
   140003e0e:	int3   
   140003e0f:	int3   
   140003e10:	rex push rbx
   140003e12:	sub    rsp,0x20
   140003e16:	cmp    BYTE PTR [rcx+0x8],0x0
   140003e1a:	mov    rbx,rcx
   140003e1d:	je     0x140003e2c
   140003e1f:	mov    rcx,QWORD PTR [rcx]
   140003e22:	call   QWORD PTR [rip+0x4298]        # 0x1400080c0
   140003e28:	mov    BYTE PTR [rbx+0x8],0x0
   140003e2c:	add    rsp,0x20
   140003e30:	pop    rbx
   140003e31:	ret    
   140003e32:	int3   
   140003e33:	int3   
   140003e34:	int3   
   140003e35:	int3   
   140003e36:	int3   
   140003e37:	int3   
   140003e38:	mov    BYTE PTR [rcx+0x1],0x1
   140003e3c:	mov    rax,rcx
   140003e3f:	ret    
   140003e40:	int3   
   140003e41:	int3   
   140003e42:	int3   
   140003e43:	int3   
   140003e44:	int3   
   140003e45:	int3   
   140003e46:	int3   
   140003e47:	int3   
   140003e48:	mov    QWORD PTR [rsp+0x8],rcx
   140003e4d:	push   rbx
   140003e4e:	sub    rsp,0x30
   140003e52:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003e5b:	mov    rbx,r9
   140003e5e:	call   0x140003c58
   140003e63:	mov    QWORD PTR [rsp+0x40],rax
   140003e68:	lea    rdx,[rax+0x10]
   140003e6c:	test   rdx,rdx
   140003e6f:	je     0x140003e77
   140003e71:	mov    rcx,QWORD PTR [rbx]
   140003e74:	mov    QWORD PTR [rdx],rcx
   140003e77:	add    rsp,0x30
   140003e7b:	pop    rbx
   140003e7c:	ret    
   140003e7d:	int3   
   140003e7e:	int3   
   140003e7f:	int3   
   140003e80:	int3   
   140003e81:	int3   
   140003e82:	int3   
   140003e83:	int3   
   140003e84:	int3   
   140003e85:	int3   
   140003e86:	int3   
   140003e87:	int3   
   140003e88:	int3   
   140003e89:	int3   
   140003e8a:	int3   
   140003e8b:	int3   
   140003e8c:	int3   
   140003e8d:	int3   
   140003e8e:	int3   
   140003e8f:	int3   
   140003e90:	rex push rbx
   140003e92:	sub    rsp,0x20
   140003e96:	mov    rbx,rcx
   140003e99:	test   rdx,rdx
   140003e9c:	jne    0x140003ebf
   140003e9e:	lea    ecx,[rdx+0x28]
   140003ea1:	call   0x1400051d0
   140003ea6:	mov    rdx,rax
   140003ea9:	test   rax,rax
   140003eac:	jne    0x140003eb5
   140003eae:	call   QWORD PTR [rip+0x4394]        # 0x140008248
   140003eb4:	int3   
   140003eb5:	mov    QWORD PTR [rsp+0x38],rax
   140003eba:	test   rdx,rdx
   140003ebd:	je     0x140003ed9
   140003ebf:	lea    rax,[rip+0x4e32]        # 0x140008cf8
   140003ec6:	mov    QWORD PTR [rdx],rax
   140003ec9:	mov    rax,QWORD PTR [rbx+0x8]
   140003ecd:	mov    QWORD PTR [rdx+0x8],rax
   140003ed1:	mov    rax,QWORD PTR [rbx+0x18]
   140003ed5:	mov    QWORD PTR [rdx+0x18],rax
   140003ed9:	mov    rax,rdx
   140003edc:	add    rsp,0x20
   140003ee0:	pop    rbx
   140003ee1:	ret    
   140003ee2:	int3   
   140003ee3:	int3   
   140003ee4:	int3   
   140003ee5:	int3   
   140003ee6:	int3   
   140003ee7:	int3   
   140003ee8:	int3   
   140003ee9:	int3   
   140003eea:	int3   
   140003eeb:	int3   
   140003eec:	int3   
   140003eed:	int3   
   140003eee:	int3   
   140003eef:	int3   
   140003ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ef5:	mov    QWORD PTR [rsp+0x10],rbp
   140003efa:	mov    QWORD PTR [rsp+0x18],rsi
   140003eff:	push   rdi
   140003f00:	sub    rsp,0x20
   140003f04:	mov    rbx,QWORD PTR [rcx+0x8]
   140003f08:	mov    rbp,rcx
   140003f0b:	mov    rcx,rbx
   140003f0e:	mov    rdi,r8
   140003f11:	mov    rsi,rdx
   140003f14:	call   QWORD PTR [rip+0x4496]        # 0x1400083b0
   140003f1a:	mov    r8d,DWORD PTR [rdi]
   140003f1d:	mov    rdx,QWORD PTR [rsi]
   140003f20:	mov    rcx,QWORD PTR [rbp+0x18]
   140003f24:	mov    rax,rbx
   140003f27:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f2c:	mov    rbp,QWORD PTR [rsp+0x38]
   140003f31:	mov    rsi,QWORD PTR [rsp+0x40]
   140003f36:	add    rsp,0x20
   140003f3a:	pop    rdi
   140003f3b:	rex.W jmp rax
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	int3   
   140003f41:	int3   
   140003f42:	int3   
   140003f43:	int3   
   140003f44:	int3   
   140003f45:	int3   
   140003f46:	int3   
   140003f47:	int3   
   140003f48:	int3   
   140003f49:	int3   
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	int3   
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	lea    rax,[rip+0x8169]        # 0x14000c0c0
   140003f57:	ret    
   140003f58:	int3   
   140003f59:	int3   
   140003f5a:	int3   
   140003f5b:	int3   
   140003f5c:	int3   
   140003f5d:	int3   
   140003f5e:	int3   
   140003f5f:	int3   
   140003f60:	lea    rax,[rcx+0x8]
   140003f64:	ret    
   140003f65:	int3   
   140003f66:	int3   
   140003f67:	int3   
   140003f68:	int3   
   140003f69:	int3   
   140003f6a:	int3   
   140003f6b:	int3   
   140003f6c:	int3   
   140003f6d:	int3   
   140003f6e:	int3   
   140003f6f:	int3   
   140003f70:	mov    QWORD PTR [rsp+0x8],rbx
   140003f75:	mov    QWORD PTR [rsp+0x10],rsi
   140003f7a:	push   rdi
   140003f7b:	sub    rsp,0x20
   140003f7f:	mov    rax,QWORD PTR [rcx]
   140003f82:	mov    rsi,rcx
   140003f85:	mov    dil,dl
   140003f88:	mov    rbx,QWORD PTR [rax+0x28]
   140003f8c:	mov    rcx,rbx
   140003f8f:	call   QWORD PTR [rip+0x441b]        # 0x1400083b0
   140003f95:	xor    edx,edx
   140003f97:	mov    rcx,rsi
   140003f9a:	call   rbx
   140003f9c:	test   dil,dil
   140003f9f:	je     0x140003faa
   140003fa1:	mov    rcx,rsi
   140003fa4:	call   QWORD PTR [rip+0x42b6]        # 0x140008260
   140003faa:	mov    rbx,QWORD PTR [rsp+0x30]
   140003faf:	mov    rsi,QWORD PTR [rsp+0x38]
   140003fb4:	add    rsp,0x20
   140003fb8:	pop    rdi
   140003fb9:	ret    
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	rex push rbx
   140003fc2:	sub    rsp,0x20
   140003fc6:	mov    rbx,rcx
   140003fc9:	test   rdx,rdx
   140003fcc:	jne    0x140003fef
   140003fce:	lea    ecx,[rdx+0x18]
   140003fd1:	call   0x1400051d0
   140003fd6:	mov    rdx,rax
   140003fd9:	test   rax,rax
   140003fdc:	jne    0x140003fe5
   140003fde:	call   QWORD PTR [rip+0x4264]        # 0x140008248
   140003fe4:	int3   
   140003fe5:	mov    QWORD PTR [rsp+0x38],rax
   140003fea:	test   rdx,rdx
   140003fed:	je     0x140004001
   140003fef:	lea    rax,[rip+0x4daa]        # 0x140008da0
   140003ff6:	mov    QWORD PTR [rdx],rax
   140003ff9:	mov    rax,QWORD PTR [rbx+0x8]
   140003ffd:	mov    QWORD PTR [rdx+0x8],rax
   140004001:	mov    rax,rdx
   140004004:	add    rsp,0x20
   140004008:	pop    rbx
   140004009:	ret    
   14000400a:	int3   
   14000400b:	int3   
   14000400c:	int3   
   14000400d:	int3   
   14000400e:	int3   
   14000400f:	int3   
   140004010:	sub    rsp,0x28
   140004014:	mov    rcx,QWORD PTR [rcx+0x8]
   140004018:	call   QWORD PTR [rip+0x40ca]        # 0x1400080e8
   14000401e:	xor    eax,eax
   140004020:	add    rsp,0x28
   140004024:	ret    
   140004025:	int3   
   140004026:	int3   
   140004027:	int3   
   140004028:	int3   
   140004029:	int3   
   14000402a:	int3   
   14000402b:	int3   
   14000402c:	int3   
   14000402d:	int3   
   14000402e:	int3   
   14000402f:	int3   
   140004030:	lea    rax,[rip+0x8019]        # 0x14000c050
   140004037:	ret    
   140004038:	int3   
   140004039:	int3   
   14000403a:	int3   
   14000403b:	int3   
   14000403c:	int3   
   14000403d:	int3   
   14000403e:	int3   
   14000403f:	int3   
   140004040:	mov    rax,rsp
   140004043:	mov    QWORD PTR [rax+0x8],rbx
   140004047:	mov    QWORD PTR [rax+0x10],rsi
   14000404b:	mov    QWORD PTR [rax+0x18],rdi
   14000404f:	mov    QWORD PTR [rax+0x20],r9
   140004053:	push   rbp
   140004054:	push   r12
   140004056:	push   r13
   140004058:	push   r14
   14000405a:	push   r15
   14000405c:	mov    rbp,rsp
   14000405f:	sub    rsp,0x70
   140004063:	mov    r14,rcx
   140004066:	mov    r13,r8
   140004069:	xor    ecx,ecx
   14000406b:	mov    r12,rdx
   14000406e:	call   QWORD PTR [rip+0x41a4]        # 0x140008218
   140004074:	mov    ebx,eax
   140004076:	test   eax,eax
   140004078:	jns    0x140004099
   14000407a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000407e:	lea    r8,[rip+0x4edb]        # 0x140008f60
   140004085:	mov    r9d,eax
   140004088:	mov    edx,0x18
   14000408d:	call   0x140004cb0
   140004092:	mov    eax,ebx
   140004094:	jmp    0x140004373
   140004099:	mov    r15d,0x1
   14000409f:	lea    rdx,[rip+0xffffffffffffbf5a]        # 0x140000000
   1400040a6:	mov    r9b,r15b
   1400040a9:	mov    BYTE PTR [rsp+0x20],r15b
   1400040ae:	mov    r8b,r15b
   1400040b1:	lea    ecx,[r15+0xd]
   1400040b5:	call   QWORD PTR [rip+0x3f8d]        # 0x140008048
   1400040bb:	mov    edi,eax
   1400040bd:	test   eax,eax
   1400040bf:	jns    0x1400040dd
   1400040c1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400040c5:	lea    r8,[rip+0x4e94]        # 0x140008f60
   1400040cc:	mov    r9d,eax
   1400040cf:	lea    edx,[r15+0x19]
   1400040d3:	call   0x140004cb0
   1400040d8:	jmp    0x14000436b
   1400040dd:	mov    ecx,0x10002
   1400040e2:	call   QWORD PTR [rip+0x3f68]        # 0x140008050
   1400040e8:	mov    edi,eax
   1400040ea:	test   eax,eax
   1400040ec:	jns    0x14000410b
   1400040ee:	mov    rcx,QWORD PTR [rbp+0x28]
   1400040f2:	lea    r8,[rip+0x4e67]        # 0x140008f60
   1400040f9:	mov    r9d,eax
   1400040fc:	mov    edx,0x1c
   140004101:	call   0x140004cb0
   140004106:	jmp    0x14000435e
   14000410b:	and    QWORD PTR [rbp-0x40],0x0
   140004110:	lea    rax,[rbp-0x40]
   140004114:	lea    r9,[rip+0x4ed5]        # 0x140008ff0
   14000411b:	mov    QWORD PTR [rsp+0x20],rax
   140004120:	mov    r8d,r15d
   140004123:	lea    rcx,[rip+0x4f36]        # 0x140009060
   14000412a:	xor    edx,edx
   14000412c:	call   QWORD PTR [rip+0x426e]        # 0x1400083a0
   140004132:	lea    rsi,[rip+0x4e27]        # 0x140008f60
   140004139:	mov    edi,eax
   14000413b:	test   eax,eax
   14000413d:	jns    0x14000417f
   14000413f:	mov    edx,0x53
   140004144:	mov    rcx,QWORD PTR [rbp+0x28]
   140004148:	mov    r8,rsi
   14000414b:	mov    r9d,eax
   14000414e:	call   0x140004cb0
   140004153:	mov    r15,QWORD PTR [rbp-0x40]
   140004157:	test   r15,r15
   14000415a:	je     0x140004245
   140004160:	and    QWORD PTR [rbp-0x40],0x0
   140004165:	mov    rax,QWORD PTR [r15]
   140004168:	mov    rbx,QWORD PTR [rax+0x10]
   14000416c:	mov    rcx,rbx
   14000416f:	call   QWORD PTR [rip+0x423b]        # 0x1400083b0
   140004175:	mov    rcx,r15
   140004178:	call   rbx
   14000417a:	jmp    0x140004245
   14000417f:	mov    rbx,QWORD PTR [rbp-0x40]
   140004183:	mov    rax,QWORD PTR [rbx]
   140004186:	mov    rdi,QWORD PTR [rax+0x18]
   14000418a:	mov    rcx,rdi
   14000418d:	call   QWORD PTR [rip+0x421d]        # 0x1400083b0
   140004193:	mov    edx,r15d
   140004196:	mov    rcx,rbx
   140004199:	call   rdi
   14000419b:	mov    edi,eax
   14000419d:	test   eax,eax
   14000419f:	jns    0x1400041a8
   1400041a1:	mov    edx,0x54
   1400041a6:	jmp    0x140004144
   1400041a8:	mov    rdi,QWORD PTR [r14]
   1400041ab:	mov    r15,QWORD PTR [rbp-0x40]
   1400041af:	test   rdi,rdi
   1400041b2:	je     0x1400041cd
   1400041b4:	and    QWORD PTR [r14],0x0
   1400041b8:	mov    rax,QWORD PTR [rdi]
   1400041bb:	mov    rbx,QWORD PTR [rax+0x10]
   1400041bf:	mov    rcx,rbx
   1400041c2:	call   QWORD PTR [rip+0x41e8]        # 0x1400083b0
   1400041c8:	mov    rcx,rdi
   1400041cb:	call   rbx
   1400041cd:	mov    rax,QWORD PTR [r15]
   1400041d0:	mov    rbx,QWORD PTR [rax+0x50]
   1400041d4:	mov    rcx,rbx
   1400041d7:	call   QWORD PTR [rip+0x41d3]        # 0x1400083b0
   1400041dd:	mov    rdx,r14
   1400041e0:	mov    rcx,r15
   1400041e3:	call   rbx
   1400041e5:	mov    edi,eax
   1400041e7:	test   eax,eax
   1400041e9:	jns    0x1400041f5
   1400041eb:	mov    edx,0x55
   1400041f0:	jmp    0x140004144
   1400041f5:	mov    rdi,QWORD PTR [r14]
   1400041f8:	mov    rax,QWORD PTR [rdi]
   1400041fb:	mov    rbx,QWORD PTR [rax+0x20]
   1400041ff:	mov    rcx,rbx
   140004202:	call   QWORD PTR [rip+0x41a8]        # 0x1400083b0
   140004208:	mov    rdx,r12
   14000420b:	mov    rcx,rdi
   14000420e:	call   rbx
   140004210:	mov    edi,eax
   140004212:	test   eax,eax
   140004214:	jns    0x140004220
   140004216:	mov    edx,0x56
   14000421b:	jmp    0x140004144
   140004220:	mov    rdi,QWORD PTR [rbp-0x40]
   140004224:	test   rdi,rdi
   140004227:	je     0x140004243
   140004229:	and    QWORD PTR [rbp-0x40],0x0
   14000422e:	mov    rax,QWORD PTR [rdi]
   140004231:	mov    rbx,QWORD PTR [rax+0x10]
   140004235:	mov    rcx,rbx
   140004238:	call   QWORD PTR [rip+0x4172]        # 0x1400083b0
   14000423e:	mov    rcx,rdi
   140004241:	call   rbx
   140004243:	xor    edi,edi
   140004245:	test   edi,edi
   140004247:	jns    0x140004253
   140004249:	mov    r9d,edi
   14000424c:	mov    edx,0x1f
   140004251:	jmp    0x1400042a9
   140004253:	mov    rdx,r13
   140004256:	mov    rcx,r14
   140004259:	call   0x1400045a8
   14000425e:	mov    edi,eax
   140004260:	test   eax,eax
   140004262:	jns    0x14000426b
   140004264:	mov    edx,0x20
   140004269:	jmp    0x1400042a6
   14000426b:	mov    rcx,r14
   14000426e:	call   0x140004398
   140004273:	mov    edi,eax
   140004275:	test   eax,eax
   140004277:	jns    0x140004280
   140004279:	mov    edx,0x21
   14000427e:	jmp    0x1400042a6
   140004280:	mov    rdi,QWORD PTR [r14]
   140004283:	mov    rax,QWORD PTR [rdi]
   140004286:	mov    rbx,QWORD PTR [rax+0x110]
   14000428d:	mov    rcx,rbx
   140004290:	call   QWORD PTR [rip+0x411a]        # 0x1400083b0
   140004296:	mov    rcx,rdi
   140004299:	call   rbx
   14000429b:	mov    edi,eax
   14000429d:	test   eax,eax
   14000429f:	jns    0x1400042ba
   1400042a1:	mov    edx,0x22
   1400042a6:	mov    r9d,eax
   1400042a9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400042ad:	mov    r8,rsi
   1400042b0:	call   0x140004cb0
   1400042b5:	jmp    0x140004358
   1400042ba:	mov    rdi,QWORD PTR [rbp+0x50]
   1400042be:	mov    r12d,0x2
   1400042c4:	mov    rsi,QWORD PTR [rbp+0x48]
   1400042c8:	xor    bl,bl
   1400042ca:	lea    r15d,[r12-0x1]
   1400042cf:	or     r9d,0xffffffff
   1400042d3:	mov    QWORD PTR [rbp-0x40],rsi
   1400042d7:	xor    r8d,r8d
   1400042da:	mov    QWORD PTR [rbp-0x38],rdi
   1400042de:	lea    rdx,[rbp-0x40]
   1400042e2:	mov    DWORD PTR [rsp+0x20],0x1cff
   1400042ea:	mov    ecx,r12d
   1400042ed:	call   QWORD PTR [rip+0x3e6d]        # 0x140008160
   1400042f3:	test   eax,eax
   1400042f5:	jne    0x1400042fd
   1400042f7:	mov    DWORD PTR [r14+0x8],r12d
   1400042fb:	jmp    0x14000430a
   1400042fd:	cmp    eax,r15d
   140004300:	jne    0x140004333
   140004302:	mov    DWORD PTR [r14+0x8],0x3
   14000430a:	mov    rcx,r14
   14000430d:	call   0x14000496c
   140004312:	jmp    0x140004333
   140004314:	cmp    DWORD PTR [rbp-0x28],0x12
   140004318:	jne    0x14000431f
   14000431a:	mov    bl,r15b
   14000431d:	jmp    0x140004333
   14000431f:	lea    rcx,[rbp-0x30]
   140004323:	call   QWORD PTR [rip+0x3e27]        # 0x140008150
   140004329:	lea    rcx,[rbp-0x30]
   14000432d:	call   QWORD PTR [rip+0x3e15]        # 0x140008148
   140004333:	xor    r9d,r9d
   140004336:	mov    DWORD PTR [rsp+0x20],r15d
   14000433b:	xor    r8d,r8d
   14000433e:	lea    rcx,[rbp-0x30]
   140004342:	xor    edx,edx
   140004344:	call   QWORD PTR [rip+0x3e0e]        # 0x140008158
   14000434a:	test   eax,eax
   14000434c:	jne    0x140004314
   14000434e:	test   bl,bl
   140004350:	je     0x1400042cf
   140004356:	xor    edi,edi
   140004358:	call   QWORD PTR [rip+0x3d02]        # 0x140008060
   14000435e:	lea    rcx,[rip+0xffffffffffffbc9b]        # 0x140000000
   140004365:	call   QWORD PTR [rip+0x3ced]        # 0x140008058
   14000436b:	call   QWORD PTR [rip+0x3e9f]        # 0x140008210
   140004371:	mov    eax,edi
   140004373:	lea    r11,[rsp+0x70]
   140004378:	mov    rbx,QWORD PTR [r11+0x30]
   14000437c:	mov    rsi,QWORD PTR [r11+0x38]
   140004380:	mov    rdi,QWORD PTR [r11+0x40]
   140004384:	mov    rsp,r11
   140004387:	pop    r15
   140004389:	pop    r14
   14000438b:	pop    r13
   14000438d:	pop    r12
   14000438f:	pop    rbp
   140004390:	ret    
   140004391:	int3   
   140004392:	int3   
   140004393:	int3   
   140004394:	int3   
   140004395:	int3   
   140004396:	int3   
   140004397:	int3   
   140004398:	mov    QWORD PTR [rsp+0x18],rbx
   14000439d:	mov    QWORD PTR [rsp+0x20],rsi
   1400043a2:	push   rbp
   1400043a3:	push   rdi
   1400043a4:	push   r14
   1400043a6:	mov    rbp,rsp
   1400043a9:	sub    rsp,0x30
   1400043ad:	mov    edx,0x1
   1400043b2:	mov    rsi,rcx
   1400043b5:	cmp    DWORD PTR [rcx+0xc],edx
   1400043b8:	jne    0x1400044e6
   1400043be:	and    QWORD PTR [rbp+0x28],0x0
   1400043c3:	lea    r9,[rbp+0x28]
   1400043c7:	xor    ebx,ebx
   1400043c9:	mov    r8d,0x3ea
   1400043cf:	mov    QWORD PTR [rbp+0x20],rbx
   1400043d3:	call   0x1400047c0
   1400043d8:	mov    rdi,QWORD PTR [rbp+0x28]
   1400043dc:	mov    r14d,eax
   1400043df:	test   eax,eax
   1400043e1:	jns    0x1400043e8
   1400043e3:	lea    edx,[rbx+0x5f]
   1400043e6:	jmp    0x14000445a
   1400043e8:	lea    r9,[rbp+0x20]
   1400043ec:	xor    edx,edx
   1400043ee:	mov    r8d,0x3e9
   1400043f4:	mov    rcx,rsi
   1400043f7:	call   0x1400047c0
   1400043fc:	mov    r14d,eax
   1400043ff:	test   eax,eax
   140004401:	jns    0x140004421
   140004403:	mov    rcx,QWORD PTR [rbp+0x18]
   140004407:	lea    r8,[rip+0x4b52]        # 0x140008f60
   14000440e:	mov    r9d,eax
   140004411:	mov    edx,0x60
   140004416:	call   0x140004cb0
   14000441b:	mov    rbx,QWORD PTR [rbp+0x20]
   14000441f:	jmp    0x14000446d
   140004421:	mov    r14,QWORD PTR [rsi]
   140004424:	mov    rbx,QWORD PTR [rbp+0x20]
   140004428:	mov    QWORD PTR [rbp-0x10],rbx
   14000442c:	mov    QWORD PTR [rbp-0x8],rdi
   140004430:	mov    rax,QWORD PTR [r14]
   140004433:	mov    rsi,QWORD PTR [rax+0x40]
   140004437:	mov    rcx,rsi
   14000443a:	call   QWORD PTR [rip+0x3f70]        # 0x1400083b0
   140004440:	lea    r8,[rbp-0x10]
   140004444:	mov    edx,0x2
   140004449:	mov    rcx,r14
   14000444c:	call   rsi
   14000444e:	mov    r14d,eax
   140004451:	test   eax,eax
   140004453:	jns    0x1400044a9
   140004455:	mov    edx,0x62
   14000445a:	mov    rcx,QWORD PTR [rbp+0x18]
   14000445e:	lea    r8,[rip+0x4afb]        # 0x140008f60
   140004465:	mov    r9d,eax
   140004468:	call   0x140004cb0
   14000446d:	test   rbx,rbx
   140004470:	je     0x140004487
   140004472:	mov    rax,QWORD PTR [rbx]
   140004475:	mov    rsi,QWORD PTR [rax+0x10]
   140004479:	mov    rcx,rsi
   14000447c:	call   QWORD PTR [rip+0x3f2e]        # 0x1400083b0
   140004482:	mov    rcx,rbx
   140004485:	call   rsi
   140004487:	test   rdi,rdi
   14000448a:	je     0x1400044a1
   14000448c:	mov    rcx,QWORD PTR [rdi]
   14000448f:	mov    rbx,QWORD PTR [rcx+0x10]
   140004493:	mov    rcx,rbx
   140004496:	call   QWORD PTR [rip+0x3f14]        # 0x1400083b0
   14000449c:	mov    rcx,rdi
   14000449f:	call   rbx
   1400044a1:	mov    eax,r14d
   1400044a4:	jmp    0x14000458f
   1400044a9:	test   rbx,rbx
   1400044ac:	je     0x1400044c3
   1400044ae:	mov    rax,QWORD PTR [rbx]
   1400044b1:	mov    rsi,QWORD PTR [rax+0x10]
   1400044b5:	mov    rcx,rsi
   1400044b8:	call   QWORD PTR [rip+0x3ef2]        # 0x1400083b0
   1400044be:	mov    rcx,rbx
   1400044c1:	call   rsi
   1400044c3:	test   rdi,rdi
   1400044c6:	je     0x14000458d
   1400044cc:	mov    rax,QWORD PTR [rdi]
   1400044cf:	mov    rbx,QWORD PTR [rax+0x10]
   1400044d3:	mov    rcx,rbx
   1400044d6:	call   QWORD PTR [rip+0x3ed4]        # 0x1400083b0
   1400044dc:	mov    rcx,rdi
   1400044df:	call   rbx
   1400044e1:	jmp    0x14000458d
   1400044e6:	and    QWORD PTR [rbp+0x20],0x0
   1400044eb:	lea    r9,[rbp+0x20]
   1400044ef:	mov    r8d,0x3eb
   1400044f5:	call   0x1400047c0
   1400044fa:	mov    rbx,QWORD PTR [rbp+0x20]
   1400044fe:	mov    r14d,eax
   140004501:	test   eax,eax
   140004503:	jns    0x14000450c
   140004505:	mov    edx,0x67
   14000450a:	jmp    0x14000453d
   14000450c:	mov    rsi,QWORD PTR [rsi]
   14000450f:	mov    QWORD PTR [rbp+0x28],rbx
   140004513:	mov    rax,QWORD PTR [rsi]
   140004516:	mov    rdi,QWORD PTR [rax+0x40]
   14000451a:	mov    rcx,rdi
   14000451d:	call   QWORD PTR [rip+0x3e8d]        # 0x1400083b0
   140004523:	lea    r8,[rbp+0x28]
   140004527:	mov    edx,0x1
   14000452c:	mov    rcx,rsi
   14000452f:	call   rdi
   140004531:	mov    r14d,eax
   140004534:	test   eax,eax
   140004536:	jns    0x140004573
   140004538:	mov    edx,0x69
   14000453d:	mov    rcx,QWORD PTR [rbp+0x18]
   140004541:	lea    r8,[rip+0x4a18]        # 0x140008f60
   140004548:	mov    r9d,eax
   14000454b:	call   0x140004cb0
   140004550:	test   rbx,rbx
   140004553:	je     0x1400044a1
   140004559:	mov    rcx,QWORD PTR [rbx]
   14000455c:	mov    rdi,QWORD PTR [rcx+0x10]
   140004560:	mov    rcx,rdi
   140004563:	call   QWORD PTR [rip+0x3e47]        # 0x1400083b0
   140004569:	mov    rcx,rbx
   14000456c:	call   rdi
   14000456e:	jmp    0x1400044a1
   140004573:	test   rbx,rbx
   140004576:	je     0x14000458d
   140004578:	mov    rax,QWORD PTR [rbx]
   14000457b:	mov    rdi,QWORD PTR [rax+0x10]
   14000457f:	mov    rcx,rdi
   140004582:	call   QWORD PTR [rip+0x3e28]        # 0x1400083b0
   140004588:	mov    rcx,rbx
   14000458b:	call   rdi
   14000458d:	xor    eax,eax
   14000458f:	mov    rbx,QWORD PTR [rsp+0x60]
   140004594:	mov    rsi,QWORD PTR [rsp+0x68]
   140004599:	add    rsp,0x30
   14000459d:	pop    r14
   14000459f:	pop    rdi
   1400045a0:	pop    rbp
   1400045a1:	ret    
   1400045a2:	int3   
   1400045a3:	int3   
   1400045a4:	int3   
   1400045a5:	int3   
   1400045a6:	int3   
   1400045a7:	int3   
   1400045a8:	mov    rax,rsp
   1400045ab:	mov    QWORD PTR [rax+0x8],rbp
   1400045af:	mov    QWORD PTR [rax+0x10],rsi
   1400045b3:	push   rdi
   1400045b4:	push   r14
   1400045b6:	push   r15
   1400045b8:	sub    rsp,0x40
   1400045bc:	and    QWORD PTR [rax-0x38],0x0
   1400045c1:	mov    r14,rdx
   1400045c4:	mov    r15,rcx
   1400045c7:	xor    edx,edx
   1400045c9:	lea    rcx,[rax+0x20]
   1400045cd:	xor    r9d,r9d
   1400045d0:	xor    r8d,r8d
   1400045d3:	call   QWORD PTR [rip+0x3a27]        # 0x140008000
   1400045d9:	mov    ebp,eax
   1400045db:	test   eax,eax
   1400045dd:	jns    0x1400045fd
   1400045df:	mov    rcx,QWORD PTR [rsp+0x58]
   1400045e4:	lea    r8,[rip+0x4975]        # 0x140008f60
   1400045eb:	mov    r9d,eax
   1400045ee:	mov    edx,0x74
   1400045f3:	call   0x140004cb0
   1400045f8:	jmp    0x1400047a3
   1400045fd:	mov    rax,QWORD PTR [rsp+0x78]
   140004602:	lea    r8,[rsp+0x70]
   140004607:	xor    esi,esi
   140004609:	lea    rdx,[rip+0x2d0]        # 0x1400048e0
   140004610:	test   rax,rax
   140004613:	mov    ecx,0x4
   140004618:	cmovne rsi,rax
   14000461c:	and    QWORD PTR [rsp+0x70],0x0
   140004622:	call   QWORD PTR [rip+0x3ac8]        # 0x1400080f0
   140004628:	test   eax,eax
   14000462a:	jne    0x140004647
   14000462c:	mov    rcx,QWORD PTR [rsp+0x58]
   140004631:	lea    r8,[rip+0x4928]        # 0x140008f60
   140004638:	lea    edx,[rax+0x7a]
   14000463b:	call   0x140004c88
   140004640:	mov    ebp,eax
   140004642:	jmp    0x140004785
   140004647:	mov    r8,QWORD PTR [rsp+0x70]
   14000464c:	lea    r9,[rip+0xffffffffffffb9ad]        # 0x140000000
   140004653:	mov    edx,0xc9
   140004658:	mov    rcx,rsi
   14000465b:	call   QWORD PTR [rip+0x39df]        # 0x140008040
   140004661:	mov    ebp,eax
   140004663:	test   eax,eax
   140004665:	jns    0x140004685
   140004667:	mov    rcx,QWORD PTR [rsp+0x58]
   14000466c:	lea    r8,[rip+0x48ed]        # 0x140008f60
   140004673:	mov    r9d,eax
   140004676:	mov    edx,0x7b
   14000467b:	call   0x140004cb0
   140004680:	jmp    0x140004785
   140004685:	lea    rax,[rsp+0x30]
   14000468a:	xor    edi,edi
   14000468c:	mov    QWORD PTR [rsp+0x28],rax
   140004691:	lea    rdx,[rip+0x4918]        # 0x140008fb0
   140004698:	and    QWORD PTR [rsp+0x20],rdi
   14000469d:	xor    r9d,r9d
   1400046a0:	xor    r8d,r8d
   1400046a3:	mov    rcx,rsi
   1400046a6:	call   QWORD PTR [rip+0x398c]        # 0x140008038
   1400046ac:	mov    ebp,eax
   1400046ae:	test   eax,eax
   1400046b0:	jns    0x1400046bc
   1400046b2:	mov    edx,0x80
   1400046b7:	jmp    0x14000475d
   1400046bc:	mov    rax,QWORD PTR [rsp+0x30]
   1400046c1:	mov    rcx,r14
   1400046c4:	test   rax,rax
   1400046c7:	cmovne rdi,rax
   1400046cb:	xor    edx,edx
   1400046cd:	call   QWORD PTR [rip+0x3945]        # 0x140008018
   1400046d3:	mov    r14,rax
   1400046d6:	test   rax,rax
   1400046d9:	jne    0x1400046e2
   1400046db:	mov    ebp,0x8007000e
   1400046e0:	jmp    0x140004725
   1400046e2:	mov    rdx,QWORD PTR [rip+0x393f]        # 0x140008028
   1400046e9:	mov    r9,rax
   1400046ec:	mov    r8d,0x1
   1400046f2:	mov    rcx,rdi
   1400046f5:	call   QWORD PTR [rip+0x3925]        # 0x140008020
   1400046fb:	mov    ebp,eax
   1400046fd:	mov    ecx,0xffffff80
   140004702:	mov    eax,DWORD PTR [r14]
   140004705:	and    eax,ecx
   140004707:	cmp    eax,ecx
   140004709:	je     0x140004721
   14000470b:	mov    eax,ecx
   14000470d:	lock xadd DWORD PTR [r14],eax
   140004712:	add    eax,ecx
   140004714:	test   ecx,eax
   140004716:	jne    0x140004721
   140004718:	mov    rcx,r14
   14000471b:	call   QWORD PTR [rip+0x390f]        # 0x140008030
   140004721:	test   ebp,ebp
   140004723:	jns    0x14000472f
   140004725:	mov    r9d,ebp
   140004728:	mov    edx,0x83
   14000472d:	jmp    0x140004760
   14000472f:	mov    r15,QWORD PTR [r15]
   140004732:	mov    r14,rdi
   140004735:	xor    edi,edi
   140004737:	mov    rax,QWORD PTR [r15]
   14000473a:	mov    rbp,QWORD PTR [rax+0x158]
   140004741:	mov    rcx,rbp
   140004744:	call   QWORD PTR [rip+0x3c66]        # 0x1400083b0
   14000474a:	mov    rdx,r14
   14000474d:	mov    rcx,r15
   140004750:	call   rbp
   140004752:	mov    ebp,eax
   140004754:	test   eax,eax
   140004756:	jns    0x140004773
   140004758:	mov    edx,0x84
   14000475d:	mov    r9d,eax
   140004760:	mov    rcx,QWORD PTR [rsp+0x58]
   140004765:	lea    r8,[rip+0x47f4]        # 0x140008f60
   14000476c:	call   0x140004cb0
   140004771:	jmp    0x140004775
   140004773:	xor    ebp,ebp
   140004775:	test   rdi,rdi
   140004778:	je     0x140004785
   14000477a:	mov    dl,0x1
   14000477c:	mov    rcx,rdi
   14000477f:	call   QWORD PTR [rip+0x3883]        # 0x140008008
   140004785:	mov    rcx,QWORD PTR [rsp+0x70]
   14000478a:	test   rcx,rcx
   14000478d:	je     0x140004795
   14000478f:	call   QWORD PTR [rip+0x3a0b]        # 0x1400081a0
   140004795:	test   rsi,rsi
   140004798:	je     0x1400047a3
   14000479a:	mov    rcx,rsi
   14000479d:	call   QWORD PTR [rip+0x386d]        # 0x140008010
   1400047a3:	mov    rsi,QWORD PTR [rsp+0x68]
   1400047a8:	mov    eax,ebp
   1400047aa:	mov    rbp,QWORD PTR [rsp+0x60]
   1400047af:	add    rsp,0x40
   1400047b3:	pop    r15
   1400047b5:	pop    r14
   1400047b7:	pop    rdi
   1400047b8:	ret    
   1400047b9:	int3   
   1400047ba:	int3   
   1400047bb:	int3   
   1400047bc:	int3   
   1400047bd:	int3   
   1400047be:	int3   
   1400047bf:	int3   
   1400047c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400047c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400047ca:	mov    DWORD PTR [rsp+0x18],r8d
   1400047cf:	push   rbp
   1400047d0:	push   rdi
   1400047d1:	push   r14
   1400047d3:	mov    rbp,rsp
   1400047d6:	sub    rsp,0x50
   1400047da:	and    QWORD PTR [r9],0x0
   1400047de:	lea    rsi,[rip+0xfb]        # 0x1400048e0
   1400047e5:	and    QWORD PTR [rbp-0x20],0x0
   1400047ea:	lea    r8,[rbp-0x20]
   1400047ee:	mov    ebx,edx
   1400047f0:	mov    rdi,rcx
   1400047f3:	mov    rdx,rsi
   1400047f6:	mov    ecx,0x4
   1400047fb:	mov    r14,r9
   1400047fe:	call   QWORD PTR [rip+0x38ec]        # 0x1400080f0
   140004804:	test   eax,eax
   140004806:	jne    0x140004824
   140004808:	mov    rcx,QWORD PTR [rbp+0x18]
   14000480c:	lea    r8,[rip+0x474d]        # 0x140008f60
   140004813:	mov    edx,0x8d
   140004818:	call   0x140004c88
   14000481d:	mov    ebx,eax
   14000481f:	jmp    0x1400048a9
   140004824:	lea    rax,[rbp+0x30]
   140004828:	mov    DWORD PTR [rbp+0x38],ebx
   14000482b:	mov    QWORD PTR [rsp+0x28],rax
   140004830:	lea    r9,[rbp-0x10]
   140004834:	lea    rax,[rbp+0x38]
   140004838:	mov    QWORD PTR [rbp-0x10],rdi
   14000483c:	lea    r8,[rbp-0x8]
   140004840:	mov    QWORD PTR [rsp+0x20],rax
   140004845:	lea    rdx,[rbp-0x20]
   140004849:	mov    QWORD PTR [rbp-0x8],rsi
   14000484d:	lea    rcx,[rbp-0x18]
   140004851:	call   0x1400049c0
   140004856:	mov    rbx,QWORD PTR [rax]
   140004859:	and    QWORD PTR [rax],0x0
   14000485d:	mov    rsi,QWORD PTR [rbp-0x18]
   140004861:	test   rsi,rsi
   140004864:	je     0x140004880
   140004866:	and    QWORD PTR [rbp-0x18],0x0
   14000486b:	mov    rax,QWORD PTR [rsi]
   14000486e:	mov    rdi,QWORD PTR [rax+0x10]
   140004872:	mov    rcx,rdi
   140004875:	call   QWORD PTR [rip+0x3b35]        # 0x1400083b0
   14000487b:	mov    rcx,rsi
   14000487e:	call   rdi
   140004880:	test   rbx,rbx
   140004883:	jne    0x1400048a4
   140004885:	mov    rcx,QWORD PTR [rbp+0x18]
   140004889:	lea    r8,[rip+0x46d0]        # 0x140008f60
   140004890:	mov    ebx,0x8007000e
   140004895:	mov    edx,0x91
   14000489a:	mov    r9d,ebx
   14000489d:	call   0x140004cb0
   1400048a2:	jmp    0x1400048a9
   1400048a4:	mov    QWORD PTR [r14],rbx
   1400048a7:	xor    ebx,ebx
   1400048a9:	mov    rcx,QWORD PTR [rbp-0x20]
   1400048ad:	test   rcx,rcx
   1400048b0:	je     0x1400048b8
   1400048b2:	call   QWORD PTR [rip+0x38e8]        # 0x1400081a0
   1400048b8:	mov    rsi,QWORD PTR [rsp+0x78]
   1400048bd:	mov    eax,ebx
   1400048bf:	mov    rbx,QWORD PTR [rsp+0x70]
   1400048c4:	add    rsp,0x50
   1400048c8:	pop    r14
   1400048ca:	pop    rdi
   1400048cb:	pop    rbp
   1400048cc:	ret    
   1400048cd:	int3   
   1400048ce:	int3   
   1400048cf:	int3   
   1400048d0:	int3   
   1400048d1:	int3   
   1400048d2:	int3   
   1400048d3:	int3   
   1400048d4:	int3   
   1400048d5:	int3   
   1400048d6:	int3   
   1400048d7:	int3   
   1400048d8:	int3   
   1400048d9:	int3   
   1400048da:	int3   
   1400048db:	int3   
   1400048dc:	int3   
   1400048dd:	int3   
   1400048de:	int3   
   1400048df:	int3   
   1400048e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048e5:	mov    QWORD PTR [rsp+0x18],rsi
   1400048ea:	push   rdi
   1400048eb:	sub    rsp,0x20
   1400048ef:	mov    rax,QWORD PTR [rdx]
   1400048f2:	mov    rsi,r8
   1400048f5:	mov    rdi,rdx
   1400048f8:	mov    rbx,QWORD PTR [rax+0x20]
   1400048fc:	mov    rcx,rbx
   1400048ff:	call   QWORD PTR [rip+0x3aab]        # 0x1400083b0
   140004905:	lea    rdx,[rsp+0x38]
   14000490a:	mov    rcx,rdi
   14000490d:	call   rbx
   14000490f:	mov    ebx,eax
   140004911:	test   eax,eax
   140004913:	jns    0x140004932
   140004915:	mov    rcx,QWORD PTR [rsp+0x28]
   14000491a:	lea    r8,[rip+0x463f]        # 0x140008f60
   140004921:	mov    r9d,eax
   140004924:	mov    edx,0x9a
   140004929:	call   0x140004cb0
   14000492e:	mov    eax,ebx
   140004930:	jmp    0x140004956
   140004932:	mov    eax,DWORD PTR [rsp+0x38]
   140004936:	test   eax,eax
   140004938:	je     0x140004945
   14000493a:	cmp    eax,0x1
   14000493d:	jne    0x140004954
   14000493f:	and    DWORD PTR [rsi+0x8],0x0
   140004943:	jmp    0x14000494c
   140004945:	mov    DWORD PTR [rsi+0x8],0x1
   14000494c:	mov    rcx,rsi
   14000494f:	call   0x14000496c
   140004954:	xor    eax,eax
   140004956:	mov    rbx,QWORD PTR [rsp+0x30]
   14000495b:	mov    rsi,QWORD PTR [rsp+0x40]
   140004960:	add    rsp,0x20
   140004964:	pop    rdi
   140004965:	ret    
   140004966:	int3   
   140004967:	int3   
   140004968:	int3   
   140004969:	int3   
   14000496a:	int3   
   14000496b:	int3   
   14000496c:	mov    QWORD PTR [rsp+0x8],rbx
   140004971:	push   rdi
   140004972:	sub    rsp,0x20
   140004976:	mov    rbx,QWORD PTR [rcx]
   140004979:	test   rbx,rbx
   14000497c:	je     0x1400049af
   14000497e:	and    QWORD PTR [rcx],0x0
   140004982:	mov    rax,QWORD PTR [rbx]
   140004985:	mov    rdi,QWORD PTR [rax+0x130]
   14000498c:	mov    rcx,rdi
   14000498f:	call   QWORD PTR [rip+0x3a1b]        # 0x1400083b0
   140004995:	mov    rcx,rbx
   140004998:	call   rdi
   14000499a:	mov    rax,QWORD PTR [rbx]
   14000499d:	mov    rdi,QWORD PTR [rax+0x10]
   1400049a1:	mov    rcx,rdi
   1400049a4:	call   QWORD PTR [rip+0x3a06]        # 0x1400083b0
   1400049aa:	mov    rcx,rbx
   1400049ad:	call   rdi
   1400049af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400049b4:	add    rsp,0x20
   1400049b8:	pop    rdi
   1400049b9:	ret    
   1400049ba:	int3   
   1400049bb:	int3   
   1400049bc:	int3   
   1400049bd:	int3   
   1400049be:	int3   
   1400049bf:	int3   
   1400049c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400049c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400049ca:	mov    QWORD PTR [rsp+0x20],rsi
   1400049cf:	push   rdi
   1400049d0:	push   r12
   1400049d2:	push   r13
   1400049d4:	push   r14
   1400049d6:	push   r15
   1400049d8:	sub    rsp,0x30
   1400049dc:	and    QWORD PTR [rcx],0x0
   1400049e0:	mov    rsi,rdx
   1400049e3:	mov    r14,rcx
   1400049e6:	lea    rdx,[rip+0x44a3]        # 0x140008e90
   1400049ed:	mov    ecx,0x30
   1400049f2:	mov    r13,r9
   1400049f5:	mov    r15,r8
   1400049f8:	call   0x140005c38
   1400049fd:	mov    rbx,rax
   140004a00:	test   rax,rax
   140004a03:	je     0x140004aaa
   140004a09:	mov    rdi,QWORD PTR [rsi]
   140004a0c:	lea    rcx,[rip+0x4485]        # 0x140008e98
   140004a13:	and    QWORD PTR [rsi],0x0
   140004a17:	mov    rax,QWORD PTR [rsp+0x88]
   140004a1f:	mov    r13,QWORD PTR [r13+0x0]
   140004a23:	mov    QWORD PTR [rsp+0x20],rdi
   140004a28:	mov    ebp,DWORD PTR [rax]
   140004a2a:	mov    rax,QWORD PTR [rsp+0x80]
   140004a32:	mov    r12d,DWORD PTR [rax]
   140004a35:	mov    rax,QWORD PTR [r15]
   140004a38:	mov    r15,QWORD PTR [rip+0x7e01]        # 0x14000c840
   140004a3f:	mov    QWORD PTR [rsp+0x60],rax
   140004a44:	mov    DWORD PTR [rbx+0xc],0x1
   140004a4b:	mov    QWORD PTR [rbx],rcx
   140004a4e:	test   r15,r15
   140004a51:	je     0x140004a6d
   140004a53:	mov    rax,QWORD PTR [r15]
   140004a56:	mov    rsi,QWORD PTR [rax+0x8]
   140004a5a:	mov    rcx,rsi
   140004a5d:	call   QWORD PTR [rip+0x394d]        # 0x1400083b0
   140004a63:	mov    rcx,r15
   140004a66:	call   rsi
   140004a68:	mov    rax,QWORD PTR [rsp+0x60]
   140004a6d:	lea    rcx,[rip+0x445c]        # 0x140008ed0
   140004a74:	mov    QWORD PTR [rbx],rcx
   140004a77:	mov    QWORD PTR [rbx+0x10],rdi
   140004a7b:	mov    QWORD PTR [rbx+0x18],rax
   140004a7f:	mov    QWORD PTR [rbx+0x20],r13
   140004a83:	mov    DWORD PTR [rbx+0x28],r12d
   140004a87:	mov    DWORD PTR [rbx+0x2c],ebp
   140004a8a:	mov    rsi,QWORD PTR [r14]
   140004a8d:	test   rsi,rsi
   140004a90:	je     0x140004aa7
   140004a92:	mov    rax,QWORD PTR [rsi]
   140004a95:	mov    rdi,QWORD PTR [rax+0x10]
   140004a99:	mov    rcx,rdi
   140004a9c:	call   QWORD PTR [rip+0x390e]        # 0x1400083b0
   140004aa2:	mov    rcx,rsi
   140004aa5:	call   rdi
   140004aa7:	mov    QWORD PTR [r14],rbx
   140004aaa:	mov    rbx,QWORD PTR [rsp+0x68]
   140004aaf:	mov    rax,r14
   140004ab2:	mov    rbp,QWORD PTR [rsp+0x70]
   140004ab7:	mov    rsi,QWORD PTR [rsp+0x78]
   140004abc:	add    rsp,0x30
   140004ac0:	pop    r15
   140004ac2:	pop    r14
   140004ac4:	pop    r13
   140004ac6:	pop    r12
   140004ac8:	pop    rdi
   140004ac9:	ret    
   140004aca:	int3   
   140004acb:	int3   
   140004acc:	int3   
   140004acd:	int3   
   140004ace:	int3   
   140004acf:	int3   
   140004ad0:	rex push rbx
   140004ad2:	sub    rsp,0x20
   140004ad6:	mov    DWORD PTR [rcx+0xc],0xc0000001
   140004add:	mov    rbx,rcx
   140004ae0:	test   dl,0x1
   140004ae3:	je     0x140004aeb
   140004ae5:	call   QWORD PTR [rip+0x3775]        # 0x140008260
   140004aeb:	mov    rax,rbx
   140004aee:	add    rsp,0x20
   140004af2:	pop    rbx
   140004af3:	ret    
   140004af4:	int3   
   140004af5:	int3   
   140004af6:	int3   
   140004af7:	int3   
   140004af8:	int3   
   140004af9:	int3   
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	mov    QWORD PTR [rsp+0x8],rbx
   140004b05:	mov    QWORD PTR [rsp+0x10],rsi
   140004b0a:	push   rdi
   140004b0b:	sub    rsp,0x20
   140004b0f:	xor    edi,edi
   140004b11:	mov    rsi,rcx
   140004b14:	mov    QWORD PTR [r8],rdi
   140004b17:	cmp    DWORD PTR [rdx],edi
   140004b19:	jne    0x140004b3c
   140004b1b:	mov    eax,DWORD PTR [rip+0x44b3]        # 0x140008fd4
   140004b21:	cmp    DWORD PTR [rdx+0x4],eax
   140004b24:	jne    0x140004b3c
   140004b26:	mov    eax,DWORD PTR [rip+0x44ac]        # 0x140008fd8
   140004b2c:	cmp    DWORD PTR [rdx+0x8],eax
   140004b2f:	jne    0x140004b3c
   140004b31:	mov    eax,DWORD PTR [rip+0x44a5]        # 0x140008fdc
   140004b37:	cmp    DWORD PTR [rdx+0xc],eax
   140004b3a:	je     0x140004b65
   140004b3c:	cmp    DWORD PTR [rdx],0x4452ce09
   140004b42:	jne    0x140004b7f
   140004b44:	mov    eax,DWORD PTR [rip+0x449a]        # 0x140008fe4
   140004b4a:	cmp    DWORD PTR [rdx+0x4],eax
   140004b4d:	jne    0x140004b7f
   140004b4f:	mov    eax,DWORD PTR [rip+0x4493]        # 0x140008fe8
   140004b55:	cmp    DWORD PTR [rdx+0x8],eax
   140004b58:	jne    0x140004b7f
   140004b5a:	mov    eax,DWORD PTR [rip+0x448c]        # 0x140008fec
   140004b60:	cmp    DWORD PTR [rdx+0xc],eax
   140004b63:	jne    0x140004b7f
   140004b65:	mov    QWORD PTR [r8],rcx
   140004b68:	mov    rax,QWORD PTR [rcx]
   140004b6b:	mov    rbx,QWORD PTR [rax+0x8]
   140004b6f:	mov    rcx,rbx
   140004b72:	call   QWORD PTR [rip+0x3838]        # 0x1400083b0
   140004b78:	mov    rcx,rsi
   140004b7b:	call   rbx
   140004b7d:	jmp    0x140004b84
   140004b7f:	mov    edi,0x80004002
   140004b84:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b89:	mov    eax,edi
   140004b8b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004b90:	add    rsp,0x20
   140004b94:	pop    rdi
   140004b95:	ret    
   140004b96:	int3   
   140004b97:	int3   
   140004b98:	int3   
   140004b99:	int3   
   140004b9a:	int3   
   140004b9b:	int3   
   140004b9c:	int3   
   140004b9d:	int3   
   140004b9e:	int3   
   140004b9f:	int3   
   140004ba0:	mov    eax,0x1
   140004ba5:	lock xadd DWORD PTR [rcx+0xc],eax
   140004baa:	inc    eax
   140004bac:	ret    
   140004bad:	int3   
   140004bae:	int3   
   140004baf:	int3   
   140004bb0:	int3   
   140004bb1:	int3   
   140004bb2:	int3   
   140004bb3:	int3   
   140004bb4:	int3   
   140004bb5:	int3   
   140004bb6:	int3   
   140004bb7:	int3   
   140004bb8:	int3   
   140004bb9:	int3   
   140004bba:	int3   
   140004bbb:	int3   
   140004bbc:	int3   
   140004bbd:	int3   
   140004bbe:	int3   
   140004bbf:	int3   
   140004bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140004bc5:	push   rdi
   140004bc6:	sub    rsp,0x20
   140004bca:	mov    rbx,rcx
   140004bcd:	mov    edi,edx
   140004bcf:	mov    rcx,QWORD PTR [rcx+0x10]
   140004bd3:	test   rcx,rcx
   140004bd6:	je     0x140004bde
   140004bd8:	call   QWORD PTR [rip+0x35c2]        # 0x1400081a0
   140004bde:	mov    DWORD PTR [rbx+0xc],0xc0000001
   140004be5:	test   dil,0x1
   140004be9:	je     0x140004bf4
   140004beb:	mov    rcx,rbx
   140004bee:	call   QWORD PTR [rip+0x366c]        # 0x140008260
   140004bf4:	mov    rax,rbx
   140004bf7:	mov    rbx,QWORD PTR [rsp+0x30]
   140004bfc:	add    rsp,0x20
   140004c00:	pop    rdi
   140004c01:	ret    
   140004c02:	int3   
   140004c03:	int3   
   140004c04:	int3   
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	mov    QWORD PTR [rsp+0x8],rbx
   140004c15:	mov    QWORD PTR [rsp+0x10],rsi
   140004c1a:	push   rdi
   140004c1b:	sub    rsp,0x20
   140004c1f:	mov    rsi,rcx
   140004c22:	or     edi,0xffffffff
   140004c25:	lock xadd DWORD PTR [rcx+0xc],edi
   140004c2a:	sub    edi,0x1
   140004c2d:	jne    0x140004c6d
   140004c2f:	test   rcx,rcx
   140004c32:	je     0x140004c4c
   140004c34:	mov    rax,QWORD PTR [rcx]
   140004c37:	mov    rbx,QWORD PTR [rax+0x30]
   140004c3b:	mov    rcx,rbx
   140004c3e:	call   QWORD PTR [rip+0x376c]        # 0x1400083b0
   140004c44:	lea    edx,[rdi+0x1]
   140004c47:	mov    rcx,rsi
   140004c4a:	call   rbx
   140004c4c:	mov    rsi,QWORD PTR [rip+0x7bed]        # 0x14000c840
   140004c53:	test   rsi,rsi
   140004c56:	je     0x140004c6d
   140004c58:	mov    rdx,QWORD PTR [rsi]
   140004c5b:	mov    rbx,QWORD PTR [rdx+0x10]
   140004c5f:	mov    rcx,rbx
   140004c62:	call   QWORD PTR [rip+0x3748]        # 0x1400083b0
   140004c68:	mov    rcx,rsi
   140004c6b:	call   rbx
   140004c6d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c72:	mov    eax,edi
   140004c74:	mov    rsi,QWORD PTR [rsp+0x38]
   140004c79:	add    rsp,0x20
   140004c7d:	pop    rdi
   140004c7e:	ret    
   140004c7f:	int3   
   140004c80:	int3   
   140004c81:	int3   
   140004c82:	int3   
   140004c83:	int3   
   140004c84:	int3   
   140004c85:	int3   
   140004c86:	int3   
   140004c87:	int3   
   140004c88:	sub    rsp,0x48
   140004c8c:	mov    rax,QWORD PTR [rsp+0x48]
   140004c91:	xor    r9d,r9d
   140004c94:	mov    QWORD PTR [rsp+0x28],rax
   140004c99:	and    QWORD PTR [rsp+0x20],0x0
   140004c9f:	call   0x140002080
   140004ca4:	add    rsp,0x48
   140004ca8:	ret    
   140004ca9:	int3   
   140004caa:	int3   
   140004cab:	int3   
   140004cac:	int3   
   140004cad:	int3   
   140004cae:	int3   
   140004caf:	int3   
   140004cb0:	sub    rsp,0x48
   140004cb4:	mov    rax,QWORD PTR [rsp+0x48]
   140004cb9:	mov    DWORD PTR [rsp+0x38],r9d
   140004cbe:	xor    r9d,r9d
   140004cc1:	mov    DWORD PTR [rsp+0x30],0x2
   140004cc9:	mov    QWORD PTR [rsp+0x28],rax
   140004cce:	and    QWORD PTR [rsp+0x20],0x0
   140004cd4:	call   0x14000203c
   140004cd9:	add    rsp,0x48
   140004cdd:	ret    
   140004cde:	int3   
   140004cdf:	int3   
   140004ce0:	int3   
   140004ce1:	int3   
   140004ce2:	int3   
   140004ce3:	int3   
   140004ce4:	int3   
   140004ce5:	int3   
   140004ce6:	int3   
   140004ce7:	int3   
   140004ce8:	int3   
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140004cf5:	mov    QWORD PTR [rsp+0x10],rbp
   140004cfa:	mov    QWORD PTR [rsp+0x18],rsi
   140004cff:	push   rdi
   140004d00:	sub    rsp,0x20
   140004d04:	mov    rdi,QWORD PTR [rcx+0x10]
   140004d08:	mov    rbx,rcx
   140004d0b:	mov    rcx,rdi
   140004d0e:	mov    rsi,r8
   140004d11:	mov    rbp,rdx
   140004d14:	call   QWORD PTR [rip+0x3696]        # 0x1400083b0
   140004d1a:	mov    r8,QWORD PTR [rbx+0x18]
   140004d1e:	mov    rdx,rsi
   140004d21:	mov    rcx,rbp
   140004d24:	mov    rax,rdi
   140004d27:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d2c:	mov    rbp,QWORD PTR [rsp+0x38]
   140004d31:	mov    rsi,QWORD PTR [rsp+0x40]
   140004d36:	add    rsp,0x20
   140004d3a:	pop    rdi
   140004d3b:	rex.W jmp rax
   140004d3e:	int3   
   140004d3f:	int3   
   140004d40:	int3   
   140004d41:	int3   
   140004d42:	int3   
   140004d43:	int3   
   140004d44:	int3   
   140004d45:	int3   
   140004d46:	int3   
   140004d47:	int3   
   140004d48:	int3   
   140004d49:	int3   
   140004d4a:	int3   
   140004d4b:	int3   
   140004d4c:	int3   
   140004d4d:	int3   
   140004d4e:	int3   
   140004d4f:	int3   
   140004d50:	mov    QWORD PTR [rsp+0x18],rbx
   140004d55:	mov    QWORD PTR [rsp+0x20],rbp
   140004d5a:	push   rsi
   140004d5b:	push   rdi
   140004d5c:	push   r14
   140004d5e:	sub    rsp,0x240
   140004d65:	mov    rax,QWORD PTR [rip+0x729c]        # 0x14000c008
   140004d6c:	xor    rax,rsp
   140004d6f:	mov    QWORD PTR [rsp+0x230],rax
   140004d77:	mov    rsi,rdx
   140004d7a:	mov    eax,0x2
   140004d7f:	xor    r14d,r14d
   140004d82:	mov    QWORD PTR [rdx],r14
   140004d85:	sub    rax,0x1
   140004d89:	jne    0x140004d82
   140004d8b:	mov    edx,DWORD PTR [rcx+0x2c]
   140004d8e:	lea    r8,[rsp+0x20]
   140004d93:	mov    rcx,QWORD PTR [rcx+0x10]
   140004d97:	mov    r9d,0x104
   140004d9d:	call   QWORD PTR [rip+0x33f5]        # 0x140008198
   140004da3:	test   eax,eax
   140004da5:	jg     0x140004dc5
   140004da7:	mov    rcx,QWORD PTR [rsp+0x258]
   140004daf:	lea    r8,[rip+0x424a]        # 0x140009000
   140004db6:	mov    edx,0x16
   140004dbb:	call   0x140004c88
   140004dc0:	jmp    0x140004efa
   140004dc5:	lea    rax,[rsp+0x20]
   140004dca:	or     rdi,0xffffffffffffffff
   140004dce:	inc    rdi
   140004dd1:	cmp    WORD PTR [rax+rdi*2],r14w
   140004dd6:	jne    0x140004dce
   140004dd8:	lea    rbx,[rdi+0x1]
   140004ddc:	mov    QWORD PTR [rsi],r14
   140004ddf:	cmp    rbx,rdi
   140004de2:	jb     0x140004ed7
   140004de8:	mov    eax,0x2
   140004ded:	mov    QWORD PTR [rsi],r14
   140004df0:	mul    rbx
   140004df3:	test   rdx,rdx
   140004df6:	je     0x140004e04
   140004df8:	mov    esi,0x80070216
   140004dfd:	mov    ebp,esi
   140004dff:	jmp    0x140004ec8
   140004e04:	mov    rcx,rax
   140004e07:	call   QWORD PTR [rip+0x3363]        # 0x140008170
   140004e0d:	mov    QWORD PTR [rsi],rax
   140004e10:	mov    rcx,rax
   140004e13:	test   rax,rax
   140004e16:	je     0x140004ed0
   140004e1c:	mov    eax,0x7fffffff
   140004e21:	mov    esi,r14d
   140004e24:	mov    ebp,r14d
   140004e27:	cmp    rbx,rax
   140004e2a:	ja     0x140004ebf
   140004e30:	cmp    rdi,rax
   140004e33:	jae    0x140004ebf
   140004e39:	test   rbx,rbx
   140004e3c:	je     0x140004ec8
   140004e42:	sub    rdi,rbx
   140004e45:	lea    r10,[rsp+0x20]
   140004e4a:	sub    r10,rcx
   140004e4d:	mov    r8,rbx
   140004e50:	mov    rdx,rcx
   140004e53:	mov    r11d,r14d
   140004e56:	mov    r9,r14
   140004e59:	lea    rax,[rdi+r8*1]
   140004e5d:	test   rax,rax
   140004e60:	je     0x140004e7c
   140004e62:	movzx  eax,WORD PTR [r10+rdx*1]
   140004e67:	test   ax,ax
   140004e6a:	je     0x140004e7c
   140004e6c:	mov    WORD PTR [rdx],ax
   140004e6f:	inc    r9
   140004e72:	add    rdx,0x2
   140004e76:	sub    r8,0x1
   140004e7a:	jne    0x140004e59
   140004e7c:	test   r8,r8
   140004e7f:	jne    0x140004e8e
   140004e81:	sub    rdx,0x2
   140004e85:	mov    r11d,0x8007007a
   140004e8b:	dec    r9
   140004e8e:	sub    rbx,r9
   140004e91:	mov    WORD PTR [rdx],r14w
   140004e95:	test   r11d,r11d
   140004e98:	js     0x140004ec8
   140004e9a:	cmp    rbx,0x1
   140004e9e:	jbe    0x140004ec8
   140004ea0:	lea    r8,[rbx+rbx*1]
   140004ea4:	cmp    r8,0x2
   140004ea8:	jbe    0x140004ec8
   140004eaa:	lea    rcx,[rcx+r9*2]
   140004eae:	add    r8,0xfffffffffffffffe
   140004eb2:	add    rcx,0x2
   140004eb6:	xor    edx,edx
   140004eb8:	call   0x140005dc2
   140004ebd:	jmp    0x140004ec8
   140004ebf:	test   rbx,rbx
   140004ec2:	je     0x140004ec8
   140004ec4:	mov    WORD PTR [rcx],r14w
   140004ec8:	test   esi,esi
   140004eca:	js     0x140004edc
   140004ecc:	xor    eax,eax
   140004ece:	jmp    0x140004efa
   140004ed0:	mov    ebp,0x8007000e
   140004ed5:	jmp    0x140004edc
   140004ed7:	mov    ebp,0x80070216
   140004edc:	mov    rcx,QWORD PTR [rsp+0x258]
   140004ee4:	lea    r8,[rip+0x4115]        # 0x140009000
   140004eeb:	mov    r9d,ebp
   140004eee:	mov    edx,0x17
   140004ef3:	call   0x140004cb0
   140004ef8:	mov    eax,ebp
   140004efa:	mov    rcx,QWORD PTR [rsp+0x230]
   140004f02:	xor    rcx,rsp
   140004f05:	call   0x1400055f0
   140004f0a:	lea    r11,[rsp+0x240]
   140004f12:	mov    rbx,QWORD PTR [r11+0x30]
   140004f16:	mov    rbp,QWORD PTR [r11+0x38]
   140004f1a:	mov    rsp,r11
   140004f1d:	pop    r14
   140004f1f:	pop    rdi
   140004f20:	pop    rsi
   140004f21:	ret    
   140004f22:	int3   
   140004f23:	int3   
   140004f24:	int3   
   140004f25:	int3   
   140004f26:	int3   
   140004f27:	int3   
   140004f28:	int3   
   140004f29:	int3   
   140004f2a:	int3   
   140004f2b:	int3   
   140004f2c:	int3   
   140004f2d:	int3   
   140004f2e:	int3   
   140004f2f:	int3   
   140004f30:	mov    eax,DWORD PTR [rcx+0x28]
   140004f33:	mov    DWORD PTR [rdx],eax
   140004f35:	xor    eax,eax
   140004f37:	ret    
   140004f38:	int3   
   140004f39:	int3   
   140004f3a:	int3   
   140004f3b:	int3   
   140004f3c:	int3   
   140004f3d:	int3   
   140004f3e:	int3   
   140004f3f:	int3   
   140004f40:	mov    QWORD PTR [rsp+0x8],rbx
   140004f45:	mov    QWORD PTR [rsp+0x18],rbp
   140004f4a:	push   rsi
   140004f4b:	push   rdi
   140004f4c:	push   r12
   140004f4e:	push   r14
   140004f50:	push   r15
   140004f52:	sub    rsp,0x20
   140004f56:	xor    esi,esi
   140004f58:	mov    r15,rdx
   140004f5b:	mov    rdi,rcx
   140004f5e:	mov    QWORD PTR [rdx],rsi
   140004f61:	lea    rdx,[rip+0x3f28]        # 0x140008e90
   140004f68:	mov    QWORD PTR [rsp+0x58],rsi
   140004f6d:	lea    ecx,[rsi+0x20]
   140004f70:	call   0x140005c38
   140004f75:	mov    rbx,rax
   140004f78:	test   rax,rax
   140004f7b:	je     0x140004fce
   140004f7d:	mov    rbp,QWORD PTR [rdi+0x20]
   140004f81:	mov    r12,QWORD PTR [rdi+0x18]
   140004f85:	mov    r14,QWORD PTR [rip+0x78b4]        # 0x14000c840
   140004f8c:	mov    DWORD PTR [rax+0xc],0x1
   140004f93:	lea    rax,[rip+0x3f6e]        # 0x140008f08
   140004f9a:	mov    QWORD PTR [rbx],rax
   140004f9d:	test   r14,r14
   140004fa0:	je     0x140004fb7
   140004fa2:	mov    rax,QWORD PTR [r14]
   140004fa5:	mov    rdi,QWORD PTR [rax+0x8]
   140004fa9:	mov    rcx,rdi
   140004fac:	call   QWORD PTR [rip+0x33fe]        # 0x1400083b0
   140004fb2:	mov    rcx,r14
   140004fb5:	call   rdi
   140004fb7:	lea    rax,[rip+0x3f72]        # 0x140008f30
   140004fbe:	mov    QWORD PTR [rbx+0x10],r12
   140004fc2:	mov    QWORD PTR [rbx],rax
   140004fc5:	mov    QWORD PTR [rbx+0x18],rbp
   140004fc9:	mov    QWORD PTR [r15],rbx
   140004fcc:	jmp    0x140004fee
   140004fce:	mov    rcx,QWORD PTR [rsp+0x48]
   140004fd3:	lea    r8,[rip+0x4026]        # 0x140009000
   140004fda:	mov    ebx,0x8007000e
   140004fdf:	mov    edx,0x26
   140004fe4:	mov    r9d,ebx
   140004fe7:	call   0x140004cb0
   140004fec:	mov    esi,ebx
   140004fee:	mov    rbx,QWORD PTR [rsp+0x50]
   140004ff3:	mov    eax,esi
   140004ff5:	mov    rbp,QWORD PTR [rsp+0x60]
   140004ffa:	add    rsp,0x20
   140004ffe:	pop    r15
   140005000:	pop    r14
   140005002:	pop    r12
   140005004:	pop    rdi
   140005005:	pop    rsi
   140005006:	ret    
   140005007:	int3   
   140005008:	int3   
   140005009:	int3   
   14000500a:	int3   
   14000500b:	int3   
   14000500c:	int3   
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	mov    QWORD PTR [rsp+0x8],rbx
   140005015:	mov    QWORD PTR [rsp+0x10],rsi
   14000501a:	push   rdi
   14000501b:	sub    rsp,0x20
   14000501f:	xor    edi,edi
   140005021:	mov    rsi,rcx
   140005024:	mov    QWORD PTR [r8],rdi
   140005027:	cmp    DWORD PTR [rdx],edi
   140005029:	jne    0x14000504c
   14000502b:	mov    eax,DWORD PTR [rip+0x3fa3]        # 0x140008fd4
   140005031:	cmp    DWORD PTR [rdx+0x4],eax
   140005034:	jne    0x14000504c
   140005036:	mov    eax,DWORD PTR [rip+0x3f9c]        # 0x140008fd8
   14000503c:	cmp    DWORD PTR [rdx+0x8],eax
   14000503f:	jne    0x14000504c
   140005041:	mov    eax,DWORD PTR [rip+0x3f95]        # 0x140008fdc
   140005047:	cmp    DWORD PTR [rdx+0xc],eax
   14000504a:	je     0x140005075
   14000504c:	cmp    DWORD PTR [rdx],0x4da31a12
   140005052:	jne    0x14000508f
   140005054:	mov    eax,DWORD PTR [rip+0x3ffa]        # 0x140009054
   14000505a:	cmp    DWORD PTR [rdx+0x4],eax
   14000505d:	jne    0x14000508f
   14000505f:	mov    eax,DWORD PTR [rip+0x3ff3]        # 0x140009058
   140005065:	cmp    DWORD PTR [rdx+0x8],eax
   140005068:	jne    0x14000508f
   14000506a:	mov    eax,DWORD PTR [rip+0x3fec]        # 0x14000905c
   140005070:	cmp    DWORD PTR [rdx+0xc],eax
   140005073:	jne    0x14000508f
   140005075:	mov    QWORD PTR [r8],rcx
   140005078:	mov    rax,QWORD PTR [rcx]
   14000507b:	mov    rbx,QWORD PTR [rax+0x8]
   14000507f:	mov    rcx,rbx
   140005082:	call   QWORD PTR [rip+0x3328]        # 0x1400083b0
   140005088:	mov    rcx,rsi
   14000508b:	call   rbx
   14000508d:	jmp    0x140005094
   14000508f:	mov    edi,0x80004002
   140005094:	mov    rbx,QWORD PTR [rsp+0x30]
   140005099:	mov    eax,edi
   14000509b:	mov    rsi,QWORD PTR [rsp+0x38]
   1400050a0:	add    rsp,0x20
   1400050a4:	pop    rdi
   1400050a5:	ret    
   1400050a6:	int3   
   1400050a7:	int3   
   1400050a8:	int3   
   1400050a9:	int3   
   1400050aa:	int3   
   1400050ab:	int3   
   1400050ac:	int3   
   1400050ad:	int3   
   1400050ae:	int3   
   1400050af:	int3   
   1400050b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400050b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400050ba:	push   rdi
   1400050bb:	sub    rsp,0x20
   1400050bf:	mov    rsi,rcx
   1400050c2:	or     edi,0xffffffff
   1400050c5:	lock xadd DWORD PTR [rcx+0xc],edi
   1400050ca:	sub    edi,0x1
   1400050cd:	jne    0x14000510d
   1400050cf:	test   rcx,rcx
   1400050d2:	je     0x1400050ec
   1400050d4:	mov    rax,QWORD PTR [rcx]
   1400050d7:	mov    rbx,QWORD PTR [rax+0x20]
   1400050db:	mov    rcx,rbx
   1400050de:	call   QWORD PTR [rip+0x32cc]        # 0x1400083b0
   1400050e4:	lea    edx,[rdi+0x1]
   1400050e7:	mov    rcx,rsi
   1400050ea:	call   rbx
   1400050ec:	mov    rsi,QWORD PTR [rip+0x774d]        # 0x14000c840
   1400050f3:	test   rsi,rsi
   1400050f6:	je     0x14000510d
   1400050f8:	mov    rdx,QWORD PTR [rsi]
   1400050fb:	mov    rbx,QWORD PTR [rdx+0x10]
   1400050ff:	mov    rcx,rbx
   140005102:	call   QWORD PTR [rip+0x32a8]        # 0x1400083b0
   140005108:	mov    rcx,rsi
   14000510b:	call   rbx
   14000510d:	mov    rbx,QWORD PTR [rsp+0x30]
   140005112:	mov    eax,edi
   140005114:	mov    rsi,QWORD PTR [rsp+0x38]
   140005119:	add    rsp,0x20
   14000511d:	pop    rdi
   14000511e:	ret    
   14000511f:	int3   
   140005120:	int3   
   140005121:	int3   
   140005122:	int3   
   140005123:	int3   
   140005124:	int3   
   140005125:	int3   
   140005126:	int3   
   140005127:	int3   
   140005128:	int3   
   140005129:	int3   
   14000512a:	int3   
   14000512b:	int3   
   14000512c:	int3   
   14000512d:	int3   
   14000512e:	int3   
   14000512f:	int3   
   140005130:	mov    QWORD PTR [rsp+0x8],rbx
   140005135:	push   rdi
   140005136:	sub    rsp,0x30
   14000513a:	test   r9,r9
   14000513d:	je     0x140005179
   14000513f:	mov    rdi,QWORD PTR [r9+0x18]
   140005143:	test   rdi,rdi
   140005146:	je     0x140005179
   140005148:	mov    eax,DWORD PTR [rsp+0x68]
   14000514c:	mov    DWORD PTR [rsp+0x58],eax
   140005150:	mov    rax,QWORD PTR [rsp+0x60]
   140005155:	mov    QWORD PTR [rsp+0x20],rax
   14000515a:	mov    rax,QWORD PTR [rdi]
   14000515d:	mov    rbx,QWORD PTR [rax+0x10]
   140005161:	mov    rcx,rbx
   140005164:	call   QWORD PTR [rip+0x3246]        # 0x1400083b0
   14000516a:	lea    r8,[rsp+0x58]
   14000516f:	mov    rcx,rdi
   140005172:	lea    rdx,[rsp+0x20]
   140005177:	call   rbx
   140005179:	xor    eax,eax
   14000517b:	mov    rbx,QWORD PTR [rsp+0x40]
   140005180:	add    rsp,0x30
   140005184:	pop    rdi
   140005185:	ret    
   140005186:	int3   
   140005187:	int3   
   140005188:	int3   
   140005189:	int3   
   14000518a:	int3   
   14000518b:	int3   
   14000518c:	mov    QWORD PTR [rsp+0x8],rcx
   140005191:	push   rbx
   140005192:	sub    rsp,0x30
   140005196:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000519f:	mov    rbx,rcx
   1400051a2:	mov    rcx,QWORD PTR [rcx+0x20]
   1400051a6:	test   rcx,rcx
   1400051a9:	je     0x1400051bd
   1400051ab:	call   QWORD PTR [rip+0x31a7]        # 0x140008358
   1400051b1:	or     eax,0x10000000
   1400051b6:	jl     0x1400051bd
   1400051b8:	and    QWORD PTR [rbx+0x20],0x0
   1400051bd:	mov    rcx,rbx
   1400051c0:	add    rsp,0x30
   1400051c4:	pop    rbx
   1400051c5:	jmp    0x1400034ac
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	int3   
   1400051cd:	int3   
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	rex push rbx
   1400051d2:	sub    rsp,0x20
   1400051d6:	mov    rbx,rcx
   1400051d9:	jmp    0x1400051ea
   1400051db:	mov    rcx,rbx
   1400051de:	call   0x1400058f6
   1400051e3:	test   eax,eax
   1400051e5:	je     0x1400051fa
   1400051e7:	mov    rcx,rbx
   1400051ea:	call   0x140005614
   1400051ef:	test   rax,rax
   1400051f2:	je     0x1400051db
   1400051f4:	add    rsp,0x20
   1400051f8:	pop    rbx
   1400051f9:	ret    
   1400051fa:	call   QWORD PTR [rip+0x3048]        # 0x140008248
   140005200:	int3   
   140005201:	int3   
   140005202:	int3   
   140005203:	int3   
   140005204:	int3   
   140005205:	int3   
   140005206:	int3   
   140005207:	int3   
   140005208:	int3   
   140005209:	int3   
   14000520a:	int3   
   14000520b:	int3   
   14000520c:	int3   
   14000520d:	int3   
   14000520e:	int3   
   14000520f:	int3   
   140005210:	sub    rsp,0x28
   140005214:	mov    eax,0x5a4d
   140005219:	cmp    WORD PTR [rip+0xffffffffffffade0],ax        # 0x140000000
   140005220:	je     0x140005226
   140005222:	xor    eax,eax
   140005224:	jmp    0x140005275
   140005226:	movsxd rcx,DWORD PTR [rip+0xffffffffffffae0f]        # 0x14000003c
   14000522d:	lea    rax,[rip+0xffffffffffffadcc]        # 0x140000000
   140005234:	add    rcx,rax
   140005237:	cmp    DWORD PTR [rcx],0x4550
   14000523d:	jne    0x140005222
   14000523f:	movzx  eax,WORD PTR [rcx+0x18]
   140005243:	cmp    eax,0x10b
   140005248:	je     0x140005264
   14000524a:	cmp    eax,0x20b
   14000524f:	jne    0x140005222
   140005251:	xor    eax,eax
   140005253:	cmp    DWORD PTR [rcx+0x84],0xe
   14000525a:	jbe    0x140005275
   14000525c:	cmp    DWORD PTR [rcx+0xf8],eax
   140005262:	jmp    0x140005272
   140005264:	xor    eax,eax
   140005266:	cmp    DWORD PTR [rcx+0x74],0xe
   14000526a:	jbe    0x140005275
   14000526c:	cmp    DWORD PTR [rcx+0xe8],eax
   140005272:	setne  al
   140005275:	mov    ecx,0x2
   14000527a:	mov    DWORD PTR [rip+0x6f68],eax        # 0x14000c1e8
   140005280:	call   0x1400059d8
   140005285:	mov    ecx,eax
   140005287:	call   QWORD PTR [rip+0x307b]        # 0x140008308
   14000528d:	mov    rcx,QWORD PTR [rip+0x3034]        # 0x1400082c8
   140005294:	or     rax,0xffffffffffffffff
   140005298:	mov    QWORD PTR [rip+0x7681],rax        # 0x14000c920
   14000529f:	mov    QWORD PTR [rip+0x7682],rax        # 0x14000c928
   1400052a6:	mov    eax,DWORD PTR [rip+0x74c0]        # 0x14000c76c
   1400052ac:	mov    DWORD PTR [rcx],eax
   1400052ae:	mov    rcx,QWORD PTR [rip+0x300b]        # 0x1400082c0
   1400052b5:	mov    eax,DWORD PTR [rip+0x74a5]        # 0x14000c760
   1400052bb:	mov    DWORD PTR [rcx],eax
   1400052bd:	call   0x140005bf0
   1400052c2:	cmp    DWORD PTR [rip+0x6d37],0x0        # 0x14000c000
   1400052c9:	jne    0x1400052d8
   1400052cb:	lea    rcx,[rip+0x91e]        # 0x140005bf0
   1400052d2:	call   QWORD PTR [rip+0x3010]        # 0x1400082e8
   1400052d8:	xor    eax,eax
   1400052da:	add    rsp,0x28
   1400052de:	ret    
   1400052df:	int3   
   1400052e0:	int3   
   1400052e1:	int3   
   1400052e2:	int3   
   1400052e3:	int3   
   1400052e4:	int3   
   1400052e5:	int3   
   1400052e6:	int3   
   1400052e7:	int3   
   1400052e8:	int3   
   1400052e9:	int3   
   1400052ea:	int3   
   1400052eb:	int3   
   1400052ec:	int3   
   1400052ed:	int3   
   1400052ee:	int3   
   1400052ef:	int3   
   1400052f0:	sub    rsp,0x38
   1400052f4:	mov    eax,DWORD PTR [rip+0x746e]        # 0x14000c768
   1400052fa:	lea    r8,[rip+0x6edf]        # 0x14000c1e0
   140005301:	mov    r9d,DWORD PTR [rip+0x745c]        # 0x14000c764
   140005308:	lea    rdx,[rip+0x6ec9]        # 0x14000c1d8
   14000530f:	mov    DWORD PTR [rip+0x6ed7],eax        # 0x14000c1ec
   140005315:	lea    rcx,[rip+0x6eb4]        # 0x14000c1d0
   14000531c:	lea    rax,[rip+0x6ec9]        # 0x14000c1ec
   140005323:	mov    QWORD PTR [rsp+0x20],rax
   140005328:	call   QWORD PTR [rip+0x2fea]        # 0x140008318
   14000532e:	mov    DWORD PTR [rip+0x6ea0],eax        # 0x14000c1d4
   140005334:	add    rsp,0x38
   140005338:	ret    
   140005339:	int3   
   14000533a:	int3   
   14000533b:	int3   
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	mov    QWORD PTR [rsp+0x8],rbx
   140005345:	mov    QWORD PTR [rsp+0x10],rsi
   14000534a:	mov    QWORD PTR [rsp+0x18],rdi
   14000534f:	push   r12
   140005351:	push   r14
   140005353:	push   r15
   140005355:	sub    rsp,0xb0
   14000535c:	xor    r15d,r15d
   14000535f:	mov    DWORD PTR [rsp+0x20],r15d
   140005364:	lea    rcx,[rsp+0x40]
   140005369:	call   QWORD PTR [rip+0x2e51]        # 0x1400081c0
   14000536f:	nop
   140005370:	mov    rax,QWORD PTR gs:0x30
   140005379:	mov    rbx,QWORD PTR [rax+0x8]
   14000537d:	mov    r14d,r15d
   140005380:	xor    eax,eax
   140005382:	lock cmpxchg QWORD PTR [rip+0x7585],rbx        # 0x14000c910
   14000538b:	je     0x1400053a9
   14000538d:	cmp    rax,rbx
   140005390:	jne    0x14000539c
   140005392:	mov    edi,0x1
   140005397:	mov    r14d,edi
   14000539a:	jmp    0x1400053ae
   14000539c:	mov    ecx,0x3e8
   1400053a1:	call   QWORD PTR [rip+0x2e41]        # 0x1400081e8
   1400053a7:	jmp    0x140005380
   1400053a9:	mov    edi,0x1
   1400053ae:	mov    eax,DWORD PTR [rip+0x7564]        # 0x14000c918
   1400053b4:	cmp    eax,edi
   1400053b6:	jne    0x1400053c6
   1400053b8:	mov    esi,0x1f
   1400053bd:	mov    ecx,esi
   1400053bf:	call   0x140005a24
   1400053c4:	jmp    0x140005437
   1400053c6:	mov    eax,DWORD PTR [rip+0x754c]        # 0x14000c918
   1400053cc:	test   eax,eax
   1400053ce:	jne    0x14000542c
   1400053d0:	mov    DWORD PTR [rip+0x7542],edi        # 0x14000c918
   1400053d6:	lea    r12,[rip+0x303b]        # 0x140008418
   1400053dd:	lea    rbx,[rip+0x301c]        # 0x140008400
   1400053e4:	mov    QWORD PTR [rsp+0x30],rbx
   1400053e9:	mov    eax,r15d
   1400053ec:	mov    DWORD PTR [rsp+0x24],eax
   1400053f0:	cmp    rbx,r12
   1400053f3:	jae    0x14000541e
   1400053f5:	test   eax,eax
   1400053f7:	jne    0x140005422
   1400053f9:	mov    rsi,QWORD PTR [rbx]
   1400053fc:	test   rsi,rsi
   1400053ff:	je     0x140005413
   140005401:	mov    rcx,rsi
   140005404:	mov    rax,QWORD PTR [rip+0x2fa5]        # 0x1400083b0
   14000540b:	call   rax
   14000540d:	call   rsi
   14000540f:	mov    DWORD PTR [rsp+0x24],eax
   140005413:	add    rbx,0x8
   140005417:	mov    QWORD PTR [rsp+0x30],rbx
   14000541c:	jmp    0x1400053f0
   14000541e:	test   eax,eax
   140005420:	je     0x140005432
   140005422:	mov    eax,0xff
   140005427:	jmp    0x140005593
   14000542c:	mov    DWORD PTR [rip+0x6d96],edi        # 0x14000c1c8
   140005432:	mov    esi,0x1f
   140005437:	mov    eax,DWORD PTR [rip+0x74db]        # 0x14000c918
   14000543d:	cmp    eax,edi
   14000543f:	jne    0x14000545e
   140005441:	lea    rdx,[rip+0x2fb0]        # 0x1400083f8
   140005448:	lea    rcx,[rip+0x2f71]        # 0x1400083c0
   14000544f:	call   0x140005bfa
   140005454:	mov    DWORD PTR [rip+0x74ba],0x2        # 0x14000c918
   14000545e:	test   r14d,r14d
   140005461:	jne    0x14000546d
   140005463:	mov    rax,r15
   140005466:	xchg   QWORD PTR [rip+0x74a3],rax        # 0x14000c910
   14000546d:	cmp    QWORD PTR [rip+0x74bc],r15        # 0x14000c930
   140005474:	je     0x1400054a4
   140005476:	lea    rcx,[rip+0x74b3]        # 0x14000c930
   14000547d:	call   0x140005a80
   140005482:	test   eax,eax
   140005484:	je     0x1400054a4
   140005486:	mov    rbx,QWORD PTR [rip+0x74a3]        # 0x14000c930
   14000548d:	mov    rcx,rbx
   140005490:	mov    rax,QWORD PTR [rip+0x2f19]        # 0x1400083b0
   140005497:	call   rax
   140005499:	xor    r8d,r8d
   14000549c:	lea    edx,[r8+0x2]
   1400054a0:	xor    ecx,ecx
   1400054a2:	call   rbx
   1400054a4:	mov    rax,QWORD PTR [rip+0x2e25]        # 0x1400082d0
   1400054ab:	mov    rdx,QWORD PTR [rax]
   1400054ae:	test   rdx,rdx
   1400054b1:	jne    0x1400054bd
   1400054b3:	mov    eax,0xff
   1400054b8:	jmp    0x140005593
   1400054bd:	mov    QWORD PTR [rsp+0x28],rdx
   1400054c2:	mov    ecx,DWORD PTR [rsp+0x20]
   1400054c6:	cmp    WORD PTR [rdx],0x20
   1400054ca:	ja     0x140005544
   1400054cc:	cmp    WORD PTR [rdx],r15w
   1400054d0:	je     0x1400054d6
   1400054d2:	test   ecx,ecx
   1400054d4:	jne    0x140005544
   1400054d6:	movzx  eax,WORD PTR [rdx]
   1400054d9:	sub    ax,di
   1400054dc:	cmp    ax,si
   1400054df:	ja     0x1400054ec
   1400054e1:	add    rdx,0x2
   1400054e5:	mov    QWORD PTR [rsp+0x28],rdx
   1400054ea:	jmp    0x1400054d6
   1400054ec:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400054f0:	movzx  eax,WORD PTR [rsp+0x80]
   1400054f8:	mov    r9d,0xa
   1400054fe:	and    cl,dil
   140005501:	cmovne r9d,eax
   140005505:	mov    r8,rdx
   140005508:	xor    edx,edx
   14000550a:	lea    rcx,[rip+0xffffffffffffaaef]        # 0x140000000
   140005511:	call   0x140002df8
   140005516:	mov    DWORD PTR [rip+0x6ca8],eax        # 0x14000c1c4
   14000551c:	cmp    DWORD PTR [rip+0x6cc5],r15d        # 0x14000c1e8
   140005523:	jne    0x14000552d
   140005525:	mov    ecx,eax
   140005527:	call   QWORD PTR [rip+0x2dd3]        # 0x140008300
   14000552d:	cmp    DWORD PTR [rip+0x6c94],r15d        # 0x14000c1c8
   140005534:	jne    0x140005542
   140005536:	call   QWORD PTR [rip+0x2db4]        # 0x1400082f0
   14000553c:	mov    eax,DWORD PTR [rip+0x6c82]        # 0x14000c1c4
   140005542:	jmp    0x140005593
   140005544:	cmp    WORD PTR [rdx],0x22
   140005548:	jne    0x140005558
   14000554a:	mov    eax,r15d
   14000554d:	test   ecx,ecx
   14000554f:	sete   al
   140005552:	mov    ecx,eax
   140005554:	mov    DWORD PTR [rsp+0x20],eax
   140005558:	add    rdx,0x2
   14000555c:	mov    QWORD PTR [rsp+0x28],rdx
   140005561:	jmp    0x1400054c6
   140005566:	mov    DWORD PTR [rip+0x6c58],eax        # 0x14000c1c4
   14000556c:	cmp    DWORD PTR [rip+0x6c75],0x0        # 0x14000c1e8
   140005573:	jne    0x14000557e
   140005575:	mov    ecx,eax
   140005577:	call   QWORD PTR [rip+0x2d7b]        # 0x1400082f8
   14000557d:	int3   
   14000557e:	cmp    DWORD PTR [rip+0x6c43],0x0        # 0x14000c1c8
   140005585:	jne    0x140005593
   140005587:	call   QWORD PTR [rip+0x2d63]        # 0x1400082f0
   14000558d:	mov    eax,DWORD PTR [rip+0x6c31]        # 0x14000c1c4
   140005593:	lea    r11,[rsp+0xb0]
   14000559b:	mov    rbx,QWORD PTR [r11+0x20]
   14000559f:	mov    rsi,QWORD PTR [r11+0x28]
   1400055a3:	mov    rdi,QWORD PTR [r11+0x30]
   1400055a7:	mov    rsp,r11
   1400055aa:	pop    r15
   1400055ac:	pop    r14
   1400055ae:	pop    r12
   1400055b0:	ret    
   1400055b1:	int3   
   1400055b2:	int3   
   1400055b3:	int3   
   1400055b4:	int3   
   1400055b5:	int3   
   1400055b6:	int3   
   1400055b7:	int3   
   1400055b8:	int3   
   1400055b9:	int3   
   1400055ba:	int3   
   1400055bb:	int3   
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	sub    rsp,0x28
   1400055c4:	call   0x140005b14
   1400055c9:	add    rsp,0x28
   1400055cd:	jmp    0x140005340
   1400055d2:	int3   
   1400055d3:	int3   
   1400055d4:	int3   
   1400055d5:	int3   
   1400055d6:	int3   
   1400055d7:	int3   
   1400055d8:	jmp    QWORD PTR [rip+0x2c82]        # 0x140008260
   1400055de:	int3   
   1400055df:	int3   
   1400055e0:	int3   
   1400055e1:	int3   
   1400055e2:	int3   
   1400055e3:	int3   
   1400055e4:	int3   
   1400055e5:	int3   
   1400055e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400055f0:	cmp    rcx,QWORD PTR [rip+0x6a11]        # 0x14000c008
   1400055f7:	jne    0x140005609
   1400055f9:	rol    rcx,0x10
   1400055fd:	test   cx,0xffff
   140005602:	jne    0x140005605
   140005604:	ret    
   140005605:	ror    rcx,0x10
   140005609:	jmp    0x140005740
   14000560e:	int3   
   14000560f:	int3   
   140005610:	int3   
   140005611:	int3   
   140005612:	int3   
   140005613:	int3   
   140005614:	jmp    QWORD PTR [rip+0x2c96]        # 0x1400082b0
   14000561a:	int3   
   14000561b:	int3   
   14000561c:	int3   
   14000561d:	int3   
   14000561e:	int3   
   14000561f:	int3   
   140005620:	mov    QWORD PTR [rsp+0x8],rbx
   140005625:	push   rdi
   140005626:	sub    rsp,0x20
   14000562a:	mov    rdi,rcx
   14000562d:	mov    rax,QWORD PTR [rip+0x72f4]        # 0x14000c928
   140005634:	mov    QWORD PTR [rsp+0x38],rax
   140005639:	cmp    rax,0xffffffffffffffff
   14000563d:	jne    0x140005656
   14000563f:	mov    rbx,QWORD PTR [rip+0x2c52]        # 0x140008298
   140005646:	mov    rcx,rbx
   140005649:	call   QWORD PTR [rip+0x2d61]        # 0x1400083b0
   14000564f:	mov    rcx,rdi
   140005652:	call   rbx
   140005654:	jmp    0x1400056b3
   140005656:	mov    ecx,0x8
   14000565b:	call   0x140005c12
   140005660:	nop
   140005661:	mov    rax,QWORD PTR [rip+0x72c0]        # 0x14000c928
   140005668:	mov    QWORD PTR [rsp+0x38],rax
   14000566d:	mov    rax,QWORD PTR [rip+0x72ac]        # 0x14000c920
   140005674:	mov    QWORD PTR [rsp+0x40],rax
   140005679:	lea    r8,[rsp+0x40]
   14000567e:	lea    rdx,[rsp+0x38]
   140005683:	mov    rcx,rdi
   140005686:	call   0x140005c2a
   14000568b:	mov    rbx,rax
   14000568e:	mov    rdx,QWORD PTR [rsp+0x38]
   140005693:	mov    QWORD PTR [rip+0x728e],rdx        # 0x14000c928
   14000569a:	mov    rdx,QWORD PTR [rsp+0x40]
   14000569f:	mov    QWORD PTR [rip+0x727a],rdx        # 0x14000c920
   1400056a6:	mov    ecx,0x8
   1400056ab:	call   0x140005c1e
   1400056b0:	mov    rax,rbx
   1400056b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400056b8:	add    rsp,0x20
   1400056bc:	pop    rdi
   1400056bd:	ret    
   1400056be:	int3   
   1400056bf:	int3   
   1400056c0:	int3   
   1400056c1:	int3   
   1400056c2:	int3   
   1400056c3:	int3   
   1400056c4:	sub    rsp,0x28
   1400056c8:	call   0x140005620
   1400056cd:	neg    rax
   1400056d0:	sbb    eax,eax
   1400056d2:	neg    eax
   1400056d4:	dec    eax
   1400056d6:	add    rsp,0x28
   1400056da:	ret    
   1400056db:	int3   
   1400056dc:	int3   
   1400056dd:	int3   
   1400056de:	int3   
   1400056df:	int3   
   1400056e0:	int3   
   1400056e1:	int3   
   1400056e2:	int3   
   1400056e3:	int3   
   1400056e4:	int3   
   1400056e5:	int3   
   1400056e6:	int3   
   1400056e7:	int3   
   1400056e8:	int3   
   1400056e9:	int3   
   1400056ea:	int3   
   1400056eb:	int3   
   1400056ec:	int3   
   1400056ed:	int3   
   1400056ee:	int3   
   1400056ef:	int3   
   1400056f0:	jmp    QWORD PTR [rip+0x2c42]        # 0x140008338
   1400056f6:	int3   
   1400056f7:	int3   
   1400056f8:	int3   
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	rex push rbx
   1400056fe:	sub    rsp,0x20
   140005702:	mov    rbx,rcx
   140005705:	xor    ecx,ecx
   140005707:	call   QWORD PTR [rip+0x2a73]        # 0x140008180
   14000570d:	mov    rcx,rbx
   140005710:	call   QWORD PTR [rip+0x2a72]        # 0x140008188
   140005716:	call   QWORD PTR [rip+0x2a94]        # 0x1400081b0
   14000571c:	mov    rcx,rax
   14000571f:	mov    edx,0xc0000409
   140005724:	add    rsp,0x20
   140005728:	pop    rbx
   140005729:	rex.W jmp QWORD PTR [rip+0x2a88]        # 0x1400081b8
   140005730:	int3   
   140005731:	int3   
   140005732:	int3   
   140005733:	int3   
   140005734:	int3   
   140005735:	int3   
   140005736:	int3   
   140005737:	int3   
   140005738:	int3   
   140005739:	int3   
   14000573a:	int3   
   14000573b:	int3   
   14000573c:	int3   
   14000573d:	int3   
   14000573e:	int3   
   14000573f:	int3   
   140005740:	mov    QWORD PTR [rsp+0x8],rcx
   140005745:	sub    rsp,0x88
   14000574c:	lea    rcx,[rip+0x6b3d]        # 0x14000c290
   140005753:	call   QWORD PTR [rip+0x2c1f]        # 0x140008378
   140005759:	mov    rax,QWORD PTR [rip+0x6c28]        # 0x14000c388
   140005760:	mov    QWORD PTR [rsp+0x48],rax
   140005765:	xor    r8d,r8d
   140005768:	lea    rdx,[rsp+0x50]
   14000576d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005772:	call   QWORD PTR [rip+0x2bf8]        # 0x140008370
   140005778:	mov    QWORD PTR [rsp+0x40],rax
   14000577d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005783:	je     0x1400057c7
   140005785:	mov    QWORD PTR [rsp+0x38],0x0
   14000578e:	lea    rax,[rsp+0x58]
   140005793:	mov    QWORD PTR [rsp+0x30],rax
   140005798:	lea    rax,[rsp+0x60]
   14000579d:	mov    QWORD PTR [rsp+0x28],rax
   1400057a2:	lea    rax,[rip+0x6ae7]        # 0x14000c290
   1400057a9:	mov    QWORD PTR [rsp+0x20],rax
   1400057ae:	mov    r9,QWORD PTR [rsp+0x40]
   1400057b3:	mov    r8,QWORD PTR [rsp+0x48]
   1400057b8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400057bd:	xor    ecx,ecx
   1400057bf:	call   QWORD PTR [rip+0x2ba3]        # 0x140008368
   1400057c5:	jmp    0x1400057ea
   1400057c7:	mov    rax,QWORD PTR [rip+0x6b5a]        # 0x14000c328
   1400057ce:	mov    rax,QWORD PTR [rax]
   1400057d1:	mov    QWORD PTR [rip+0x6bb0],rax        # 0x14000c388
   1400057d8:	mov    rax,QWORD PTR [rip+0x6b49]        # 0x14000c328
   1400057df:	add    rax,0x8
   1400057e3:	mov    QWORD PTR [rip+0x6b3e],rax        # 0x14000c328
   1400057ea:	mov    rax,QWORD PTR [rip+0x6b97]        # 0x14000c388
   1400057f1:	mov    QWORD PTR [rip+0x6a08],rax        # 0x14000c200
   1400057f8:	mov    rax,QWORD PTR [rsp+0x90]
   140005800:	mov    QWORD PTR [rip+0x6b09],rax        # 0x14000c310
   140005807:	mov    DWORD PTR [rip+0x69df],0xc0000409        # 0x14000c1f0
   140005811:	mov    DWORD PTR [rip+0x69d9],0x1        # 0x14000c1f4
   14000581b:	mov    DWORD PTR [rip+0x69e3],0x3        # 0x14000c208
   140005825:	mov    eax,0x8
   14000582a:	imul   rax,rax,0x0
   14000582e:	lea    rcx,[rip+0x69db]        # 0x14000c210
   140005835:	mov    QWORD PTR [rcx+rax*1],0x2
   14000583d:	mov    eax,0x8
   140005842:	imul   rax,rax,0x1
   140005846:	lea    rcx,[rip+0x69c3]        # 0x14000c210
   14000584d:	mov    rdx,QWORD PTR [rip+0x67b4]        # 0x14000c008
   140005854:	mov    QWORD PTR [rcx+rax*1],rdx
   140005858:	mov    eax,0x8
   14000585d:	imul   rax,rax,0x2
   140005861:	lea    rcx,[rip+0x69a8]        # 0x14000c210
   140005868:	mov    rdx,QWORD PTR [rip+0x67a1]        # 0x14000c010
   14000586f:	mov    QWORD PTR [rcx+rax*1],rdx
   140005873:	mov    eax,0x8
   140005878:	imul   rax,rax,0x0
   14000587c:	mov    rcx,QWORD PTR [rip+0x6785]        # 0x14000c008
   140005883:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005888:	mov    eax,0x8
   14000588d:	imul   rax,rax,0x1
   140005891:	mov    rcx,QWORD PTR [rip+0x6778]        # 0x14000c010
   140005898:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000589d:	lea    rcx,[rip+0x2c6c]        # 0x140008510
   1400058a4:	call   0x1400056fc
   1400058a9:	add    rsp,0x88
   1400058b0:	ret    
   1400058b1:	int3   
   1400058b2:	int3   
   1400058b3:	int3   
   1400058b4:	int3   
   1400058b5:	int3   
   1400058b6:	int3   
   1400058b7:	int3   
   1400058b8:	int3   
   1400058b9:	int3   
   1400058ba:	int3   
   1400058bb:	int3   
   1400058bc:	int3   
   1400058bd:	int3   
   1400058be:	int3   
   1400058bf:	int3   
   1400058c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400058c5:	push   rdi
   1400058c6:	sub    rsp,0x20
   1400058ca:	mov    ebx,edx
   1400058cc:	mov    rdi,rcx
   1400058cf:	call   QWORD PTR [rip+0x29bb]        # 0x140008290
   1400058d5:	test   bl,0x1
   1400058d8:	je     0x1400058e2
   1400058da:	mov    rcx,rdi
   1400058dd:	call   0x1400055d8
   1400058e2:	mov    rax,rdi
   1400058e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400058ea:	add    rsp,0x20
   1400058ee:	pop    rdi
   1400058ef:	ret    
   1400058f0:	int3   
   1400058f1:	int3   
   1400058f2:	int3   
   1400058f3:	int3   
   1400058f4:	int3   
   1400058f5:	int3   
   1400058f6:	jmp    QWORD PTR [rip+0x2a34]        # 0x140008330
   1400058fc:	int3   
   1400058fd:	int3   
   1400058fe:	int3   
   1400058ff:	int3   
   140005900:	int3   
   140005901:	int3   
   140005902:	int3   
   140005903:	int3   
   140005904:	int3   
   140005905:	int3   
   140005906:	int3   
   140005907:	int3   
   140005908:	int3   
   140005909:	int3   
   14000590a:	int3   
   14000590b:	int3   
   14000590c:	int3   
   14000590d:	int3   
   14000590e:	int3   
   14000590f:	int3   
   140005910:	sub    rsp,0x28
   140005914:	mov    rax,QWORD PTR [rcx]
   140005917:	cmp    DWORD PTR [rax],0xe06d7363
   14000591d:	jne    0x140005942
   14000591f:	cmp    DWORD PTR [rax+0x18],0x4
   140005923:	jne    0x140005942
   140005925:	mov    ecx,DWORD PTR [rax+0x20]
   140005928:	lea    eax,[rcx-0x19930520]
   14000592e:	cmp    eax,0x2
   140005931:	jbe    0x14000593b
   140005933:	cmp    ecx,0x1994000
   140005939:	jne    0x140005942
   14000593b:	call   QWORD PTR [rip+0x2977]        # 0x1400082b8
   140005941:	int3   
   140005942:	xor    eax,eax
   140005944:	add    rsp,0x28
   140005948:	ret    
   140005949:	int3   
   14000594a:	int3   
   14000594b:	int3   
   14000594c:	int3   
   14000594d:	int3   
   14000594e:	int3   
   14000594f:	int3   
   140005950:	sub    rsp,0x28
   140005954:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005910
   14000595b:	call   QWORD PTR [rip+0x281f]        # 0x140008180
   140005961:	xor    eax,eax
   140005963:	add    rsp,0x28
   140005967:	ret    
   140005968:	int3   
   140005969:	int3   
   14000596a:	int3   
   14000596b:	int3   
   14000596c:	int3   
   14000596d:	int3   
   14000596e:	jmp    QWORD PTR [rip+0x29b4]        # 0x140008328
   140005974:	int3   
   140005975:	int3   
   140005976:	int3   
   140005977:	int3   
   140005978:	int3   
   140005979:	int3   
   14000597a:	int3   
   14000597b:	int3   
   14000597c:	sub    rsp,0x18
   140005980:	xor    edx,edx
   140005982:	lea    rax,[rcx-0x1]
   140005986:	cmp    rax,0xfffffffffffffffd
   14000598a:	ja     0x1400059c8
   14000598c:	mov    eax,0x5a4d
   140005991:	cmp    WORD PTR [rcx],ax
   140005994:	jne    0x1400059c0
   140005996:	cmp    DWORD PTR [rcx+0x3c],edx
   140005999:	jl     0x1400059c0
   14000599b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400059a2:	jae    0x1400059c0
   1400059a4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400059a8:	add    rax,rcx
   1400059ab:	mov    QWORD PTR [rsp],rax
   1400059af:	cmp    DWORD PTR [rax],0x4550
   1400059b5:	cmovne rax,rdx
   1400059b9:	mov    rdx,rax
   1400059bc:	mov    QWORD PTR [rsp],rax
   1400059c0:	jmp    0x1400059c8
   1400059c2:	xor    edx,edx
   1400059c4:	mov    QWORD PTR [rsp],rdx
   1400059c8:	mov    rax,rdx
   1400059cb:	add    rsp,0x18
   1400059cf:	ret    
   1400059d0:	int3   
   1400059d1:	int3   
   1400059d2:	int3   
   1400059d3:	int3   
   1400059d4:	int3   
   1400059d5:	int3   
   1400059d6:	int3   
   1400059d7:	int3   
   1400059d8:	rex push rbx
   1400059da:	sub    rsp,0x20
   1400059de:	mov    ebx,ecx
   1400059e0:	xor    ecx,ecx
   1400059e2:	call   QWORD PTR [rip+0x26f0]        # 0x1400080d8
   1400059e8:	test   rax,rax
   1400059eb:	je     0x140005a15
   1400059ed:	mov    rcx,rax
   1400059f0:	call   0x14000597c
   1400059f5:	test   rax,rax
   1400059f8:	je     0x140005a15
   1400059fa:	mov    ecx,0x2
   1400059ff:	cmp    WORD PTR [rax+0x5c],cx
   140005a03:	jne    0x140005a09
   140005a05:	mov    eax,ecx
   140005a07:	jmp    0x140005a17
   140005a09:	cmp    WORD PTR [rax+0x5c],0x3
   140005a0e:	mov    eax,0x1
   140005a13:	je     0x140005a17
   140005a15:	mov    eax,ebx
   140005a17:	add    rsp,0x20
   140005a1b:	pop    rbx
   140005a1c:	ret    
   140005a1d:	int3   
   140005a1e:	int3   
   140005a1f:	int3   
   140005a20:	int3   
   140005a21:	int3   
   140005a22:	int3   
   140005a23:	int3   
   140005a24:	jmp    QWORD PTR [rip+0x28f6]        # 0x140008320
   140005a2a:	int3   
   140005a2b:	int3   
   140005a2c:	int3   
   140005a2d:	int3   
   140005a2e:	int3   
   140005a2f:	int3   
   140005a30:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005a34:	xor    r9d,r9d
   140005a37:	add    r8,rcx
   140005a3a:	mov    r10,rdx
   140005a3d:	movzx  eax,WORD PTR [r8+0x14]
   140005a42:	movzx  r11d,WORD PTR [r8+0x6]
   140005a47:	add    rax,0x18
   140005a4b:	add    rax,r8
   140005a4e:	test   r11d,r11d
   140005a51:	je     0x140005a71
   140005a53:	mov    edx,DWORD PTR [rax+0xc]
   140005a56:	cmp    r10,rdx
   140005a59:	jb     0x140005a65
   140005a5b:	mov    ecx,DWORD PTR [rax+0x8]
   140005a5e:	add    ecx,edx
   140005a60:	cmp    r10,rcx
   140005a63:	jb     0x140005a73
   140005a65:	inc    r9d
   140005a68:	add    rax,0x28
   140005a6c:	cmp    r9d,r11d
   140005a6f:	jb     0x140005a53
   140005a71:	xor    eax,eax
   140005a73:	ret    
   140005a74:	int3   
   140005a75:	int3   
   140005a76:	int3   
   140005a77:	int3   
   140005a78:	int3   
   140005a79:	int3   
   140005a7a:	int3   
   140005a7b:	int3   
   140005a7c:	int3   
   140005a7d:	int3   
   140005a7e:	int3   
   140005a7f:	int3   
   140005a80:	mov    QWORD PTR [rsp+0x8],rbx
   140005a85:	push   rdi
   140005a86:	sub    rsp,0x20
   140005a8a:	mov    rbx,rcx
   140005a8d:	lea    rdi,[rip+0xffffffffffffa56c]        # 0x140000000
   140005a94:	mov    rcx,rdi
   140005a97:	call   0x140005ae0
   140005a9c:	test   eax,eax
   140005a9e:	je     0x140005ac2
   140005aa0:	sub    rbx,rdi
   140005aa3:	mov    rdx,rbx
   140005aa6:	mov    rcx,rdi
   140005aa9:	call   0x140005a30
   140005aae:	test   rax,rax
   140005ab1:	je     0x140005ac2
   140005ab3:	mov    eax,DWORD PTR [rax+0x24]
   140005ab6:	shr    eax,0x1f
   140005ab9:	not    eax
   140005abb:	and    eax,0x1
   140005abe:	jmp    0x140005ac2
   140005ac0:	xor    eax,eax
   140005ac2:	mov    rbx,QWORD PTR [rsp+0x30]
   140005ac7:	add    rsp,0x20
   140005acb:	pop    rdi
   140005acc:	ret    
   140005acd:	int3   
   140005ace:	int3   
   140005acf:	int3   
   140005ad0:	int3   
   140005ad1:	int3   
   140005ad2:	int3   
   140005ad3:	int3   
   140005ad4:	int3   
   140005ad5:	int3   
   140005ad6:	int3   
   140005ad7:	int3   
   140005ad8:	int3   
   140005ad9:	int3   
   140005ada:	int3   
   140005adb:	int3   
   140005adc:	int3   
   140005add:	int3   
   140005ade:	int3   
   140005adf:	int3   
   140005ae0:	mov    rax,rcx
   140005ae3:	mov    ecx,0x5a4d
   140005ae8:	cmp    WORD PTR [rax],cx
   140005aeb:	je     0x140005af0
   140005aed:	xor    eax,eax
   140005aef:	ret    
   140005af0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005af4:	add    rcx,rax
   140005af7:	xor    eax,eax
   140005af9:	cmp    DWORD PTR [rcx],0x4550
   140005aff:	jne    0x140005b0d
   140005b01:	mov    edx,0x20b
   140005b06:	cmp    WORD PTR [rcx+0x18],dx
   140005b0a:	sete   al
   140005b0d:	ret    
   140005b0e:	int3   
   140005b0f:	int3   
   140005b10:	int3   
   140005b11:	int3   
   140005b12:	int3   
   140005b13:	int3   
   140005b14:	mov    QWORD PTR [rsp+0x20],rbx
   140005b19:	push   rbp
   140005b1a:	mov    rbp,rsp
   140005b1d:	sub    rsp,0x20
   140005b21:	and    QWORD PTR [rbp+0x18],0x0
   140005b26:	movabs rbx,0x2b992ddfa232
   140005b30:	mov    rax,QWORD PTR [rip+0x64d1]        # 0x14000c008
   140005b37:	cmp    rax,rbx
   140005b3a:	jne    0x140005bcf
   140005b40:	lea    rcx,[rbp+0x18]
   140005b44:	call   QWORD PTR [rip+0x26ae]        # 0x1400081f8
   140005b4a:	mov    rax,QWORD PTR [rbp+0x18]
   140005b4e:	mov    QWORD PTR [rbp+0x10],rax
   140005b52:	call   QWORD PTR [rip+0x2670]        # 0x1400081c8
   140005b58:	mov    eax,eax
   140005b5a:	xor    QWORD PTR [rbp+0x10],rax
   140005b5e:	call   QWORD PTR [rip+0x253c]        # 0x1400080a0
   140005b64:	mov    eax,eax
   140005b66:	xor    QWORD PTR [rbp+0x10],rax
   140005b6a:	call   QWORD PTR [rip+0x2690]        # 0x140008200
   140005b70:	mov    eax,eax
   140005b72:	shl    rax,0x18
   140005b76:	xor    QWORD PTR [rbp+0x10],rax
   140005b7a:	call   QWORD PTR [rip+0x2680]        # 0x140008200
   140005b80:	mov    eax,eax
   140005b82:	lea    rcx,[rbp+0x10]
   140005b86:	xor    rax,QWORD PTR [rbp+0x10]
   140005b8a:	xor    rax,rcx
   140005b8d:	lea    rcx,[rbp+0x20]
   140005b91:	mov    QWORD PTR [rbp+0x10],rax
   140005b95:	call   QWORD PTR [rip+0x263d]        # 0x1400081d8
   140005b9b:	mov    eax,DWORD PTR [rbp+0x20]
   140005b9e:	movabs rcx,0xffffffffffff
   140005ba8:	shl    rax,0x20
   140005bac:	xor    rax,QWORD PTR [rbp+0x20]
   140005bb0:	xor    rax,QWORD PTR [rbp+0x10]
   140005bb4:	and    rax,rcx
   140005bb7:	movabs rcx,0x2b992ddfa233
   140005bc1:	cmp    rax,rbx
   140005bc4:	cmove  rax,rcx
   140005bc8:	mov    QWORD PTR [rip+0x6439],rax        # 0x14000c008
   140005bcf:	mov    rbx,QWORD PTR [rsp+0x48]
   140005bd4:	not    rax
   140005bd7:	mov    QWORD PTR [rip+0x6432],rax        # 0x14000c010
   140005bde:	add    rsp,0x20
   140005be2:	pop    rbp
   140005be3:	ret    
   140005be4:	int3   
   140005be5:	int3   
   140005be6:	int3   
   140005be7:	int3   
   140005be8:	int3   
   140005be9:	int3   
   140005bea:	int3   
   140005beb:	int3   
   140005bec:	int3   
   140005bed:	int3   
   140005bee:	int3   
   140005bef:	int3   
   140005bf0:	xor    eax,eax
   140005bf2:	ret    
   140005bf3:	int3   
   140005bf4:	int3   
   140005bf5:	int3   
   140005bf6:	int3   
   140005bf7:	int3   
   140005bf8:	int3   
   140005bf9:	int3   
   140005bfa:	jmp    QWORD PTR [rip+0x26e0]        # 0x1400082e0
   140005c00:	int3   
   140005c01:	int3   
   140005c02:	int3   
   140005c03:	int3   
   140005c04:	int3   
   140005c05:	int3   
   140005c06:	jmp    QWORD PTR [rip+0x26cc]        # 0x1400082d8
   140005c0c:	int3   
   140005c0d:	int3   
   140005c0e:	int3   
   140005c0f:	int3   
   140005c10:	int3   
   140005c11:	int3   
   140005c12:	jmp    QWORD PTR [rip+0x2730]        # 0x140008348
   140005c18:	int3   
   140005c19:	int3   
   140005c1a:	int3   
   140005c1b:	int3   
   140005c1c:	int3   
   140005c1d:	int3   
   140005c1e:	jmp    QWORD PTR [rip+0x2684]        # 0x1400082a8
   140005c24:	int3   
   140005c25:	int3   
   140005c26:	int3   
   140005c27:	int3   
   140005c28:	int3   
   140005c29:	int3   
   140005c2a:	jmp    QWORD PTR [rip+0x2670]        # 0x1400082a0
   140005c30:	int3   
   140005c31:	int3   
   140005c32:	int3   
   140005c33:	int3   
   140005c34:	int3   
   140005c35:	int3   
   140005c36:	int3   
   140005c37:	int3   
   140005c38:	sub    rsp,0x38
   140005c3c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005c45:	call   0x1400051d0
   140005c4a:	nop
   140005c4b:	jmp    0x140005c52
   140005c4d:	mov    rax,QWORD PTR [rsp+0x50]
   140005c52:	add    rsp,0x38
   140005c56:	ret    
   140005c57:	int3   
   140005c58:	int3   
   140005c59:	int3   
   140005c5a:	int3   
   140005c5b:	int3   
   140005c5c:	int3   
   140005c5d:	int3   
   140005c5e:	jmp    QWORD PTR [rip+0x26ac]        # 0x140008310
   140005c64:	int3   
   140005c65:	int3   
   140005c66:	int3   
   140005c67:	int3   
   140005c68:	int3   
   140005c69:	int3   
   140005c6a:	int3   
   140005c6b:	int3   
   140005c6c:	int3   
   140005c6d:	int3   
   140005c6e:	int3   
   140005c6f:	int3   
   140005c70:	jmp    QWORD PTR [rip+0x23b2]        # 0x140008028
   140005c76:	int3   
   140005c77:	int3   
   140005c78:	int3   
   140005c79:	int3   
   140005c7a:	int3   
   140005c7b:	int3   
   140005c7c:	jmp    QWORD PTR [rip+0x25f6]        # 0x140008278
   140005c82:	int3   
   140005c83:	int3   
   140005c84:	int3   
   140005c85:	int3   
   140005c86:	int3   
   140005c87:	int3   
   140005c88:	sub    rsp,0x28
   140005c8c:	mov    r8,QWORD PTR [r9+0x38]
   140005c90:	mov    rcx,rdx
   140005c93:	mov    rdx,r9
   140005c96:	call   0x140005cac
   140005c9b:	mov    eax,0x1
   140005ca0:	add    rsp,0x28
   140005ca4:	ret    
   140005ca5:	int3   
   140005ca6:	int3   
   140005ca7:	int3   
   140005ca8:	int3   
   140005ca9:	int3   
   140005caa:	int3   
   140005cab:	int3   
   140005cac:	rex push rbx
   140005cae:	sub    rsp,0x20
   140005cb2:	mov    r11d,DWORD PTR [r8]
   140005cb5:	mov    rbx,rdx
   140005cb8:	and    r11d,0xfffffff8
   140005cbc:	mov    r9,rcx
   140005cbf:	test   BYTE PTR [r8],0x4
   140005cc3:	mov    r10,rcx
   140005cc6:	je     0x140005cdb
   140005cc8:	mov    eax,DWORD PTR [r8+0x8]
   140005ccc:	movsxd r10,DWORD PTR [r8+0x4]
   140005cd0:	neg    eax
   140005cd2:	add    r10,rcx
   140005cd5:	movsxd rcx,eax
   140005cd8:	and    r10,rcx
   140005cdb:	movsxd rax,r11d
   140005cde:	mov    rdx,QWORD PTR [rax+r10*1]
   140005ce2:	mov    rax,QWORD PTR [rbx+0x10]
   140005ce6:	mov    ecx,DWORD PTR [rax+0x8]
   140005ce9:	add    rcx,QWORD PTR [rbx+0x8]
   140005ced:	test   BYTE PTR [rcx+0x3],0xf
   140005cf1:	je     0x140005cff
   140005cf3:	movzx  eax,BYTE PTR [rcx+0x3]
   140005cf7:	and    eax,0xfffffff0
   140005cfa:	cdqe   
   140005cfc:	add    r9,rax
   140005cff:	xor    r9,rdx
   140005d02:	mov    rcx,r9
   140005d05:	add    rsp,0x20
   140005d09:	pop    rbx
   140005d0a:	jmp    0x1400055f0
   140005d0f:	int3   
   140005d10:	int3   
   140005d11:	int3   
   140005d12:	int3   
   140005d13:	int3   
   140005d14:	int3   
   140005d15:	int3   
   140005d16:	int3   
   140005d17:	int3   
   140005d18:	mov    rax,rsp
   140005d1b:	mov    QWORD PTR [rax+0x8],rbx
   140005d1f:	mov    QWORD PTR [rax+0x10],rbp
   140005d23:	mov    QWORD PTR [rax+0x18],rsi
   140005d27:	mov    QWORD PTR [rax+0x20],rdi
   140005d2b:	push   r14
   140005d2d:	sub    rsp,0x20
   140005d31:	mov    rbx,QWORD PTR [r9+0x38]
   140005d35:	mov    rsi,rdx
   140005d38:	mov    r14,r8
   140005d3b:	mov    rbp,rcx
   140005d3e:	mov    rdx,r9
   140005d41:	mov    rcx,rsi
   140005d44:	mov    rdi,r9
   140005d47:	lea    r8,[rbx+0x4]
   140005d4b:	call   0x140005cac
   140005d50:	mov    r11d,DWORD PTR [rbx+0x4]
   140005d54:	mov    r8d,0x1
   140005d5a:	mov    r10d,DWORD PTR [rbp+0x4]
   140005d5e:	mov    eax,r11d
   140005d61:	and    eax,r8d
   140005d64:	and    r11d,0x2
   140005d68:	and    r10b,0x66
   140005d6c:	cmove  r11d,eax
   140005d70:	test   r11d,r11d
   140005d73:	je     0x140005d89
   140005d75:	mov    r9,rdi
   140005d78:	mov    r8,r14
   140005d7b:	mov    rdx,rsi
   140005d7e:	mov    rcx,rbp
   140005d81:	call   0x140005c5e
   140005d86:	mov    r8d,eax
   140005d89:	mov    rbx,QWORD PTR [rsp+0x30]
   140005d8e:	mov    eax,r8d
   140005d91:	mov    rbp,QWORD PTR [rsp+0x38]
   140005d96:	mov    rsi,QWORD PTR [rsp+0x40]
   140005d9b:	mov    rdi,QWORD PTR [rsp+0x48]
   140005da0:	add    rsp,0x20
   140005da4:	pop    r14
   140005da6:	ret    
   140005da7:	int3   
   140005da8:	int3   
   140005da9:	int3   
   140005daa:	int3   
   140005dab:	int3   
   140005dac:	int3   
   140005dad:	int3   
   140005dae:	int3   
   140005daf:	int3   
   140005db0:	int3   
   140005db1:	int3   
   140005db2:	int3   
   140005db3:	int3   
   140005db4:	int3   
   140005db5:	int3   
   140005db6:	jmp    QWORD PTR [rip+0x24c4]        # 0x140008280
   140005dbc:	int3   
   140005dbd:	int3   
   140005dbe:	int3   
   140005dbf:	int3   
   140005dc0:	int3   
   140005dc1:	int3   
   140005dc2:	jmp    QWORD PTR [rip+0x24c0]        # 0x140008288
   140005dc8:	int3   
   140005dc9:	int3   
   140005dca:	int3   
   140005dcb:	int3   
   140005dcc:	int3   
   140005dcd:	int3   
   140005dce:	int3   
   140005dcf:	int3   
   140005dd0:	int3   
   140005dd1:	int3   
   140005dd2:	int3   
   140005dd3:	int3   
   140005dd4:	int3   
   140005dd5:	int3   
   140005dd6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005de0:	jmp    rax
   140005de2:	int3   
   140005de3:	int3   
   140005de4:	int3   
   140005de5:	int3   
   140005de6:	int3   
   140005de7:	int3   
   140005de8:	int3   
   140005de9:	int3   
   140005dea:	int3   
   140005deb:	int3   
   140005dec:	int3   
   140005ded:	int3   
   140005dee:	int3   
   140005def:	int3   
   140005df0:	int3   
   140005df1:	int3   
   140005df2:	int3   
   140005df3:	int3   
   140005df4:	int3   
   140005df5:	int3   
   140005df6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005e00:	sub    rsp,0x10
   140005e04:	mov    QWORD PTR [rsp],r10
   140005e08:	mov    QWORD PTR [rsp+0x8],r11
   140005e0d:	xor    r11,r11
   140005e10:	lea    r10,[rsp+0x18]
   140005e15:	sub    r10,rax
   140005e18:	cmovb  r10,r11
   140005e1c:	mov    r11,QWORD PTR gs:0x10
   140005e25:	cmp    r10,r11
   140005e28:	jae    0x140005e3f
   140005e2a:	and    r10w,0xf000
   140005e30:	lea    r11,[r11-0x1000]
   140005e37:	test   BYTE PTR [r11],r11b
   140005e3a:	cmp    r10,r11
   140005e3d:	jne    0x140005e30
   140005e3f:	mov    r10,QWORD PTR [rsp]
   140005e43:	mov    r11,QWORD PTR [rsp+0x8]
   140005e48:	add    rsp,0x10
   140005e4c:	ret    
   140005e4d:	int3   
   140005e4e:	int3   
   140005e4f:	int3   
   140005e50:	int3   
   140005e51:	int3   
   140005e52:	int3   
   140005e53:	int3   
   140005e54:	int3   
   140005e55:	int3   
   140005e56:	rex push rbp
   140005e58:	sub    rsp,0x20
   140005e5c:	mov    rbp,rdx
   140005e5f:	mov    rax,QWORD PTR [rcx]
   140005e62:	xor    ecx,ecx
   140005e64:	cmp    DWORD PTR [rax],0xc0000017
   140005e6a:	sete   cl
   140005e6d:	mov    eax,ecx
   140005e6f:	add    rsp,0x20
   140005e73:	pop    rbp
   140005e74:	ret    
   140005e75:	int3   
   140005e76:	int3   
   140005e77:	int3   
   140005e78:	int3   
   140005e79:	int3   
   140005e7a:	int3   
   140005e7b:	int3   
   140005e7c:	mov    rcx,QWORD PTR [rdx+0x40]
   140005e83:	add    rcx,0x18
   140005e87:	jmp    0x1400034ac
   140005e8c:	int3   
   140005e8d:	int3   
   140005e8e:	int3   
   140005e8f:	int3   
   140005e90:	int3   
   140005e91:	int3   
   140005e92:	mov    rcx,QWORD PTR [rdx+0x40]
   140005e99:	jmp    0x14000518c
   140005e9e:	mov    rcx,QWORD PTR [rdx+0x40]
   140005ea5:	add    rcx,0x30
   140005ea9:	jmp    0x140003538
   140005eae:	mov    rcx,QWORD PTR [rdx+0x40]
   140005eb5:	add    rcx,0x40
   140005eb9:	jmp    0x140002258
   140005ebe:	mov    rcx,QWORD PTR [rdx+0x40]
   140005ec5:	jmp    0x1400034ac
   140005eca:	int3   
   140005ecb:	int3   
   140005ecc:	int3   
   140005ecd:	int3   
   140005ece:	int3   
   140005ecf:	int3   
   140005ed0:	lea    rcx,[rdx+0x38]
   140005ed7:	jmp    0x140003e10
   140005edc:	int3   
   140005edd:	int3   
   140005ede:	int3   
   140005edf:	int3   
   140005ee0:	int3   
   140005ee1:	int3   
   140005ee2:	lea    rcx,[rdx+0x58]
   140005ee9:	jmp    0x140002dbc
   140005eee:	lea    rcx,[rdx+0x40]
   140005ef5:	jmp    0x140002dbc
   140005efa:	lea    rcx,[rdx+0x60]
   140005f01:	jmp    0x140002268
   140005f06:	lea    rcx,[rdx+0x70]
   140005f0d:	jmp    0x140002268
   140005f12:	lea    rcx,[rdx+0x78]
   140005f19:	jmp    0x140002278
   140005f1e:	mov    rcx,QWORD PTR [rdx+0xb8]
   140005f25:	jmp    0x140003694
   140005f2a:	rex push rbp
   140005f2c:	sub    rsp,0x20
   140005f30:	mov    rbp,rdx
   140005f33:	mov    rdx,QWORD PTR [rbp+0x48]
   140005f37:	mov    rcx,QWORD PTR [rbp+0xb0]
   140005f3e:	call   0x1400010a0
   140005f43:	add    rsp,0x20
   140005f47:	pop    rbp
   140005f48:	ret    
   140005f49:	mov    rcx,QWORD PTR [rdx+0xb0]
   140005f50:	jmp    0x1400034ac
   140005f55:	mov    rcx,QWORD PTR [rdx+0xb8]
   140005f5c:	jmp    0x140003694
   140005f61:	lea    rcx,[rdx+0x110]
   140005f68:	add    rcx,0x18
   140005f6c:	jmp    0x1400034ac
   140005f71:	lea    rcx,[rdx+0x110]
   140005f78:	jmp    0x1400024b8
   140005f7d:	lea    rcx,[rdx+0xe8]
   140005f84:	jmp    0x140003474
   140005f89:	lea    rcx,[rdx+0xc8]
   140005f90:	jmp    0x140003474
   140005f95:	lea    rcx,[rdx+0x80]
   140005f9c:	jmp    0x140002dbc
   140005fa1:	int3   
   140005fa2:	int3   
   140005fa3:	int3   
   140005fa4:	int3   
   140005fa5:	int3   
   140005fa6:	int3   
   140005fa7:	lea    rcx,[rdx+0x40]
   140005fae:	jmp    0x14000358c
   140005fb3:	lea    rcx,[rdx+0x78]
   140005fba:	jmp    0x140002278
   140005fbf:	lea    rcx,[rdx+0x90]
   140005fc6:	jmp    0x14000518c
   140005fcb:	lea    rcx,[rdx+0x90]
   140005fd2:	add    rcx,0x30
   140005fd6:	jmp    0x140003538
   140005fdb:	lea    rcx,[rdx+0x90]
   140005fe2:	jmp    0x1400025d8
   140005fe7:	mov    rcx,QWORD PTR [rdx+0x50]
   140005fee:	jmp    0x140003694
   140005ff3:	mov    rcx,QWORD PTR [rdx+0x50]
   140005ffa:	jmp    0x1400034ac
   140005fff:	lea    rcx,[rdx+0x48]
   140006006:	jmp    0x140002278
   14000600b:	lea    rcx,[rdx+0x90]
   140006012:	jmp    0x14000518c
   140006017:	lea    rcx,[rdx+0x90]
   14000601e:	add    rcx,0x30
   140006022:	jmp    0x140003538
   140006027:	lea    rcx,[rdx+0x90]
   14000602e:	add    rcx,0x40
   140006032:	jmp    0x140002258
   140006037:	mov    rcx,QWORD PTR [rdx+0x50]
   14000603e:	jmp    0x1400034ac
   140006043:	int3   
   140006044:	int3   
   140006045:	int3   
   140006046:	int3   
   140006047:	int3   
   140006048:	int3   
   140006049:	mov    QWORD PTR [rsp+0x10],rdx
   14000604e:	push   rbp
   14000604f:	sub    rsp,0x20
   140006053:	mov    rbp,rdx
   140006056:	mov    rcx,QWORD PTR [rbp+0x68]
   14000605a:	mov    QWORD PTR [rbp+0x68],rcx
   14000605e:	xor    eax,eax
   140006060:	add    rcx,0x1
   140006064:	je     0x14000607c
   140006066:	cmp    rcx,0xffffffffffffffff
   14000606a:	ja     0x140006076
   14000606c:	call   0x1400051d0
   140006071:	test   rax,rax
   140006074:	jne    0x14000607c
   140006076:	call   QWORD PTR [rip+0x21cc]        # 0x140008248
   14000607c:	mov    QWORD PTR [rbp+0x78],rax
   140006080:	lea    rax,[rip+0xffffffffffffd740]        # 0x1400037c7
   140006087:	add    rsp,0x20
   14000608b:	pop    rbp
   14000608c:	ret    
   14000608d:	int3   
   14000608e:	mov    QWORD PTR [rsp+0x10],rdx
   140006093:	push   rbp
   140006094:	sub    rsp,0x20
   140006098:	mov    rbp,rdx
   14000609b:	xor    r8d,r8d
   14000609e:	mov    dl,0x1
   1400060a0:	mov    rcx,QWORD PTR [rbp+0x60]
   1400060a4:	call   0x1400035ac
   1400060a9:	xor    edx,edx
   1400060ab:	xor    ecx,ecx
   1400060ad:	call   0x140005c7c
   1400060b2:	nop
   1400060b3:	int3   
   1400060b4:	int3   
   1400060b5:	int3   
   1400060b6:	int3   
   1400060b7:	int3   
   1400060b8:	int3   
   1400060b9:	mov    QWORD PTR [rsp+0x10],rdx
   1400060be:	push   rbp
   1400060bf:	sub    rsp,0x20
   1400060c3:	mov    rbp,rdx
   1400060c6:	mov    rcx,QWORD PTR [rbp+0x68]
   1400060ca:	mov    QWORD PTR [rbp+0x68],rcx
   1400060ce:	xor    eax,eax
   1400060d0:	add    rcx,0x1
   1400060d4:	je     0x1400060f8
   1400060d6:	movabs rax,0x7fffffffffffffff
   1400060e0:	cmp    rcx,rax
   1400060e3:	ja     0x1400060f2
   1400060e5:	add    rcx,rcx
   1400060e8:	call   0x1400051d0
   1400060ed:	test   rax,rax
   1400060f0:	jne    0x1400060f8
   1400060f2:	call   QWORD PTR [rip+0x2150]        # 0x140008248
   1400060f8:	mov    QWORD PTR [rbp+0x78],rax
   1400060fc:	lea    rax,[rip+0xffffffffffffdacf]        # 0x140003bd2
   140006103:	add    rsp,0x20
   140006107:	pop    rbp
   140006108:	ret    
   140006109:	int3   
   14000610a:	mov    QWORD PTR [rsp+0x10],rdx
   14000610f:	push   rbp
   140006110:	sub    rsp,0x20
   140006114:	mov    rbp,rdx
   140006117:	xor    r8d,r8d
   14000611a:	mov    dl,0x1
   14000611c:	mov    rcx,QWORD PTR [rbp+0x60]
   140006120:	call   0x140003624
   140006125:	xor    edx,edx
   140006127:	xor    ecx,ecx
   140006129:	call   0x140005c7c
   14000612e:	nop
   14000612f:	int3   
   140006130:	int3   
   140006131:	int3   
   140006132:	int3   
   140006133:	int3   
   140006134:	int3   
   140006135:	mov    QWORD PTR [rsp+0x10],rdx
   14000613a:	push   rbp
   14000613b:	sub    rsp,0x20
   14000613f:	mov    rbp,rdx
   140006142:	mov    rdx,QWORD PTR [rbp+0x40]
   140006146:	call   0x140003c48
   14000614b:	xor    edx,edx
   14000614d:	xor    ecx,ecx
   14000614f:	call   0x140005c7c
   140006154:	nop
   140006155:	int3   
   140006156:	int3   
   140006157:	int3   
   140006158:	int3   
   140006159:	int3   
   14000615a:	int3   
   14000615b:	mov    QWORD PTR [rsp+0x10],rdx
   140006160:	push   rbp
   140006161:	sub    rsp,0x20
   140006165:	mov    rbp,rdx
   140006168:	mov    rdx,QWORD PTR [rbp+0x40]
   14000616c:	call   0x140003c48
   140006171:	xor    edx,edx
   140006173:	xor    ecx,ecx
   140006175:	call   0x140005c7c
   14000617a:	nop
   14000617b:	int3   
   14000617c:	int3   
   14000617d:	int3   
   14000617e:	int3   
   14000617f:	int3   
   140006180:	int3   
   140006181:	mov    rcx,QWORD PTR [rdx+0x40]
   140006188:	jmp    0x1400034ac
   14000618d:	int3   
   14000618e:	int3   
   14000618f:	int3   
   140006190:	int3   
   140006191:	int3   
   140006192:	int3   
   140006193:	rex push rbp
   140006195:	sub    rsp,0x20
   140006199:	mov    rbp,rdx
   14000619c:	mov    rax,QWORD PTR [rcx]
   14000619f:	mov    rdx,rcx
   1400061a2:	mov    ecx,DWORD PTR [rax]
   1400061a4:	call   0x14000596e
   1400061a9:	nop
   1400061aa:	add    rsp,0x20
   1400061ae:	pop    rbp
   1400061af:	ret    
   1400061b0:	int3   
   1400061b1:	int3   
   1400061b2:	int3   
   1400061b3:	int3   
   1400061b4:	int3   
   1400061b5:	int3   
   1400061b6:	int3   
   1400061b7:	rex push rbp
   1400061b9:	sub    rsp,0x20
   1400061bd:	mov    rbp,rdx
   1400061c0:	mov    ecx,0x8
   1400061c5:	call   0x140005c1e
   1400061ca:	nop
   1400061cb:	add    rsp,0x20
   1400061cf:	pop    rbp
   1400061d0:	ret    
   1400061d1:	int3   
   1400061d2:	int3   
   1400061d3:	int3   
   1400061d4:	int3   
   1400061d5:	int3   
   1400061d6:	int3   
   1400061d7:	int3   
   1400061d8:	int3   
   1400061d9:	int3   
   1400061da:	int3   
   1400061db:	int3   
   1400061dc:	int3   
   1400061dd:	int3   
   1400061de:	int3   
   1400061df:	int3   
   1400061e0:	rex push rbp
   1400061e2:	sub    rsp,0x20
   1400061e6:	mov    rbp,rdx
   1400061e9:	mov    rax,QWORD PTR [rcx]
   1400061ec:	xor    ecx,ecx
   1400061ee:	cmp    DWORD PTR [rax],0xc0000005
   1400061f4:	sete   cl
   1400061f7:	mov    eax,ecx
   1400061f9:	add    rsp,0x20
   1400061fd:	pop    rbp
   1400061fe:	ret    
   1400061ff:	int3   
   140006200:	int3   
   140006201:	int3   
   140006202:	int3   
   140006203:	int3   
   140006204:	int3   
   140006205:	int3   
   140006206:	mov    QWORD PTR [rsp+0x10],rdx
   14000620b:	push   rbp
   14000620c:	sub    rsp,0x20
   140006210:	mov    rbp,rdx
   140006213:	and    QWORD PTR [rbp+0x50],0x0
   140006218:	lea    rax,[rip+0xfffffffffffffa2e]        # 0x140005c4d
   14000621f:	add    rsp,0x20
   140006223:	pop    rbp
   140006224:	ret    
   140006225:	int3   
   140006226:	int3   
   140006227:	int3   
   140006228:	int3   
   140006229:	int3   
   14000622a:	int3   
   14000622b:	int3   
   14000622c:	int3   
   14000622d:	int3   
   14000622e:	int3   
   14000622f:	int3   
   140006230:	mov    QWORD PTR [rsp+0x8],rbx
   140006235:	push   rdi
   140006236:	sub    rsp,0x20
   14000623a:	lea    rbx,[rip+0x662f]        # 0x14000c870
   140006241:	mov    rdi,QWORD PTR [rbx]
   140006244:	jmp    0x140006253
   140006246:	mov    rcx,rdi
   140006249:	mov    rdi,QWORD PTR [rdi+0x10]
   14000624d:	call   QWORD PTR [rip+0x201d]        # 0x140008270
   140006253:	test   rdi,rdi
   140006256:	jne    0x140006246
   140006258:	mov    QWORD PTR [rbx],rdi
   14000625b:	lea    rax,[rip+0x66ae]        # 0x14000c910
   140006262:	add    rbx,0x8
   140006266:	cmp    rbx,rax
   140006269:	jne    0x140006241
   14000626b:	mov    rbx,QWORD PTR [rsp+0x30]
   140006270:	add    rsp,0x20
   140006274:	pop    rdi
   140006275:	ret    
   140006276:	int3   
   140006277:	int3   
   140006278:	int3   
   140006279:	int3   
   14000627a:	int3   
   14000627b:	int3   
   14000627c:	int3   
   14000627d:	int3   
   14000627e:	int3   
   14000627f:	int3   
   140006280:	lea    rax,[rip+0x2bd1]        # 0x140008e58
   140006287:	mov    QWORD PTR [rip+0x5d9a],rax        # 0x14000c028
   14000628e:	ret    
   14000628f:	int3   
   140006290:	int3   
   140006291:	int3   
   140006292:	int3   
   140006293:	int3   
   140006294:	int3   
   140006295:	int3   
   140006296:	int3   
   140006297:	int3   
   140006298:	int3   
   140006299:	int3   
   14000629a:	int3   
   14000629b:	int3   
   14000629c:	int3   
   14000629d:	int3   
   14000629e:	int3   
   14000629f:	int3   
   1400062a0:	lea    rax,[rip+0x2bb1]        # 0x140008e58
   1400062a7:	mov    QWORD PTR [rip+0x5d82],rax        # 0x14000c030
   1400062ae:	ret    
   1400062af:	int3   
   1400062b0:	int3   
   1400062b1:	int3   
   1400062b2:	int3   
   1400062b3:	int3   
   1400062b4:	int3   
   1400062b5:	int3   
   1400062b6:	int3   
   1400062b7:	int3   
   1400062b8:	int3   
   1400062b9:	int3   
   1400062ba:	int3   
   1400062bb:	int3   
   1400062bc:	int3   
   1400062bd:	int3   
   1400062be:	int3   
   1400062bf:	int3   
   1400062c0:	lea    rax,[rip+0x2b91]        # 0x140008e58
   1400062c7:	mov    QWORD PTR [rip+0x5d72],rax        # 0x14000c040
   1400062ce:	ret    

Disassembly of section .imrsiv:

0000000140007000 <.imrsiv>:
   140007000:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	in     al,0xad
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	out    dx,al
   140008009:	scas   eax,DWORD PTR es:[rdi]
   14000800a:	add    BYTE PTR [rax],al
   14000800c:	add    BYTE PTR [rax],al
   14000800e:	add    BYTE PTR [rax],al
   140008010:	(bad)  
   140008011:	scas   eax,DWORD PTR es:[rdi]
   140008012:	add    BYTE PTR [rax],al
   140008014:	add    BYTE PTR [rax],al
   140008016:	add    BYTE PTR [rax],al
   140008018:	(bad)  
   140008019:	scas   eax,DWORD PTR es:[rdi]
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	add    BYTE PTR [rax],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	ss scas eax,DWORD PTR es:[rdi]
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	cld    
   140008029:	scas   al,BYTE PTR es:[rdi]
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	add    BYTE PTR [rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	(bad)  
   140008031:	scas   al,BYTE PTR es:[rdi]
   140008032:	add    BYTE PTR [rax],al
   140008034:	add    BYTE PTR [rax],al
   140008036:	add    BYTE PTR [rax],al
   140008038:	(bad)  
   140008039:	scas   al,BYTE PTR es:[rdi]
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	add    BYTE PTR [rax],al
   140008040:	cmp    ch,BYTE PTR [rsi+0x0]
   140008046:	add    BYTE PTR [rax],al
   140008048:	movabs al,ds:0xb2000000000000ad
   140008051:	lods   eax,DWORD PTR ds:[rsi]
   140008052:	add    BYTE PTR [rax],al
   140008054:	add    BYTE PTR [rax],al
   140008056:	add    BYTE PTR [rax],al
   140008058:	shr    BYTE PTR [rbp+0x0],0x0
   14000805f:	add    ah,dl
   140008061:	lods   eax,DWORD PTR ds:[rsi]
	...
   14000806e:	add    BYTE PTR [rax],al
   140008070:	(bad)  
   140008071:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008072:	add    BYTE PTR [rax],al
   140008074:	add    BYTE PTR [rax],al
   140008076:	add    BYTE PTR [rax],al
   140008078:	out    dx,al
   140008079:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000807a:	add    BYTE PTR [rax],al
   14000807c:	add    BYTE PTR [rax],al
   14000807e:	add    BYTE PTR [rax],al
   140008080:	(bad)  
   140008081:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008082:	add    BYTE PTR [rax],al
   140008084:	add    BYTE PTR [rax],al
   140008086:	add    BYTE PTR [rax],al
   140008088:	adc    al,0xa7
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	add    BYTE PTR [rax],al
   14000808e:	add    BYTE PTR [rax],al
   140008090:	(bad)  
   140008091:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008092:	add    BYTE PTR [rax],al
   140008094:	add    BYTE PTR [rax],al
   140008096:	add    BYTE PTR [rax],al
   140008098:	cmp    ah,BYTE PTR [rdi+0x0]
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	push   rdx
   1400080a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400080a2:	add    BYTE PTR [rax],al
   1400080a4:	add    BYTE PTR [rax],al
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	push   0xa7
   1400080ad:	add    BYTE PTR [rax],al
   1400080af:	add    BYTE PTR [rsi-0x59],dh
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	add    BYTE PTR [rax],al
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	mov    ah,0xa6
   1400080ba:	add    BYTE PTR [rax],al
   1400080bc:	add    BYTE PTR [rax],al
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	pushf  
   1400080c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400080c2:	add    BYTE PTR [rax],al
   1400080c4:	add    BYTE PTR [rax],al
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	mov    ah,BYTE PTR [rsi+0x0]
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	outs   dx,BYTE PTR ds:[rsi]
   1400080d1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400080d2:	add    BYTE PTR [rax],al
   1400080d4:	add    BYTE PTR [rax],al
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	pop    rdx
   1400080d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	add    BYTE PTR [rax],al
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	rex.R cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400080e2:	add    BYTE PTR [rax],al
   1400080e4:	add    BYTE PTR [rax],al
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	cmp    BYTE PTR [rsi+0x0],ah
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	and    ah,BYTE PTR [rsi+0x0]
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	or     al,0xa6
   1400080fa:	add    BYTE PTR [rax],al
   1400080fc:	add    BYTE PTR [rax],al
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	cli    
   140008101:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008102:	add    BYTE PTR [rax],al
   140008104:	add    BYTE PTR [rax],al
   140008106:	add    BYTE PTR [rax],al
   140008108:	fsub   DWORD PTR [rbp+0x0]
   14000810e:	add    BYTE PTR [rax],al
   140008110:	shl    BYTE PTR [rbp+0x0],0x0
   140008117:	add    BYTE PTR [rdi+riz*4],ch
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	add    BYTE PTR [rax],al
   14000811e:	add    BYTE PTR [rax],al
   140008120:	mov    al,0xa5
	...
   14000812e:	add    BYTE PTR [rax],al
   140008130:	(bad)  
   140008131:	add    BYTE PTR [rax],al
   140008133:	add    BYTE PTR [rax],al
   140008135:	add    BYTE PTR [rax],al
   140008137:	add    BYTE PTR [rsi],0x0
   14000813a:	add    BYTE PTR [rax],al
   14000813c:	add    BYTE PTR [rax],al
   14000813e:	add    BYTE PTR [rax+0x0],al
   140008144:	add    BYTE PTR [rax],al
   140008146:	add    BYTE PTR [rax],al
   140008148:	(bad)  
   140008149:	lods   eax,DWORD PTR ds:[rsi]
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	add    BYTE PTR [rax],al
   14000814e:	add    BYTE PTR [rax],al
   140008150:	cli    
   140008151:	lods   al,BYTE PTR ds:[rsi]
   140008152:	add    BYTE PTR [rax],al
   140008154:	add    BYTE PTR [rax],al
   140008156:	add    BYTE PTR [rax],al
   140008158:	(bad)  
   140008159:	lods   al,BYTE PTR ds:[rsi]
   14000815a:	add    BYTE PTR [rax],al
   14000815c:	add    BYTE PTR [rax],al
   14000815e:	add    BYTE PTR [rax],al
   140008160:	(bad)  
   140008161:	lods   al,BYTE PTR ds:[rsi]
	...
   14000816e:	add    BYTE PTR [rax],al
   140008170:	cwde   
   140008171:	stos   DWORD PTR es:[rdi],eax
	...
   14000817e:	add    BYTE PTR [rax],al
   140008180:	(bad)  
   140008181:	stos   BYTE PTR es:[rdi],al
   140008182:	add    BYTE PTR [rax],al
   140008184:	add    BYTE PTR [rax],al
   140008186:	add    BYTE PTR [rax],al
   140008188:	(bad)  
   140008189:	stos   BYTE PTR es:[rdi],al
	...
   140008196:	add    BYTE PTR [rax],al
   140008198:	stos   BYTE PTR es:[rdi],al
   140008199:	stos   DWORD PTR es:[rdi],eax
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	add    BYTE PTR [rax],al
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	mov    ch,BYTE PTR [rbx+0x0]
	...
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	or     BYTE PTR [rbx+0x0],ch
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	sbb    al,0xab
   1400081ba:	add    BYTE PTR [rax],al
   1400081bc:	add    BYTE PTR [rax],al
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	mov    esp,0xaa
   1400081c5:	add    BYTE PTR [rax],al
   1400081c7:	add    BYTE PTR [rdx-0x55],cl
	...
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	xor    BYTE PTR [rbx+0x0],ch
	...
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	mov    ah,0xaa
	...
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	(bad)  
   1400081f9:	stos   DWORD PTR es:[rdi],eax
   1400081fa:	add    BYTE PTR [rax],al
   1400081fc:	add    BYTE PTR [rax],al
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	jp     0x1400081ad
	...
   14000820e:	add    BYTE PTR [rax],al
   140008210:	sub    BYTE PTR [rdx+0x0],0x0
   140008217:	add    BYTE PTR [rax-0x56],dh
	...
   140008226:	add    BYTE PTR [rax],al
   140008228:	mov    eax,0xa7
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	add    BYTE PTR [rsi+0xa7],dl
   140008235:	add    BYTE PTR [rax],al
   140008237:	add    BYTE PTR [rax+rbp*4],dh
   14000823a:	add    BYTE PTR [rax],al
   14000823c:	add    BYTE PTR [rax],al
   14000823e:	add    BYTE PTR [rax],al
   140008240:	fsub   DWORD PTR [rdi+0x0]
   140008246:	add    BYTE PTR [rax],al
   140008248:	clc    
   140008249:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000824a:	add    BYTE PTR [rax],al
   14000824c:	add    BYTE PTR [rax],al
   14000824e:	add    BYTE PTR [rax],al
   140008250:	adc    ch,BYTE PTR [rax+0x0]
	...
   14000825e:	add    BYTE PTR [rax],al
   140008260:	push   0xa8
   140008265:	add    BYTE PTR [rax],al
   140008267:	add    BYTE PTR [rax-0x58],bh
   14000826a:	add    BYTE PTR [rax],al
   14000826c:	add    BYTE PTR [rax],al
   14000826e:	add    BYTE PTR [rax],al
   140008270:	(bad)  
   140008271:	test   al,0x0
   140008273:	add    BYTE PTR [rax],al
   140008275:	add    BYTE PTR [rax],al
   140008277:	add    BYTE PTR [rax],ah
   140008279:	mov    al,0x0
   14000827b:	add    BYTE PTR [rax],al
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    BYTE PTR [rsi],dh
   140008281:	mov    al,0x0
   140008283:	add    BYTE PTR [rax],al
   140008285:	add    BYTE PTR [rax],al
   140008287:	add    BYTE PTR [rax-0x50],al
   14000828a:	add    BYTE PTR [rax],al
   14000828c:	add    BYTE PTR [rax],al
   14000828e:	add    BYTE PTR [rax],al
   140008290:	mov    dh,0xa9
   140008292:	add    BYTE PTR [rax],al
   140008294:	add    BYTE PTR [rax],al
   140008296:	add    BYTE PTR [rax],al
   140008298:	lods   al,BYTE PTR ds:[rsi]
   140008299:	test   eax,0x0
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	sahf   
   1400082a1:	test   eax,0x0
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	xchg   esp,eax
   1400082a9:	test   eax,0x0
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	mov    ch,BYTE PTR [rax+0x0]
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	js     0x140008263
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	add    BYTE PTR [rax],al
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	(bad)  
   1400082c1:	test   eax,0x0
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	push   rsi
   1400082c9:	test   eax,0x0
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	rex.WR test rax,0x0
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	xor    al,0xa9
   1400082da:	add    BYTE PTR [rax],al
   1400082dc:	add    BYTE PTR [rax],al
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	sub    BYTE PTR [rcx+0x0],ch
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	adc    al,0xa9
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	add    BYTE PTR [rax],al
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	or     ch,BYTE PTR [rcx+0x0]
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	add    ch,BYTE PTR [rcx+0x0]
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	cli    
   140008301:	test   al,0x0
   140008303:	add    BYTE PTR [rax],al
   140008305:	add    BYTE PTR [rax],al
   140008307:	add    al,ch
   140008309:	test   al,0x0
   14000830b:	add    BYTE PTR [rax],al
   14000830d:	add    BYTE PTR [rax],al
   14000830f:	add    BYTE PTR [rsi],ch
   140008311:	lods   eax,DWORD PTR ds:[rsi]
   140008312:	add    BYTE PTR [rax],al
   140008314:	add    BYTE PTR [rax],al
   140008316:	add    BYTE PTR [rax],al
   140008318:	(bad)  
   140008319:	test   al,0x0
   14000831b:	add    BYTE PTR [rax],al
   14000831d:	add    BYTE PTR [rax],al
   14000831f:	add    al,cl
   140008321:	test   al,0x0
   140008323:	add    BYTE PTR [rax],al
   140008325:	add    BYTE PTR [rax],al
   140008327:	add    BYTE PTR [rdx+0xa8],bh
   14000832d:	add    BYTE PTR [rax],al
   14000832f:	add    BYTE PTR [rsi+0xa8],ch
   140008335:	add    BYTE PTR [rax],al
   140008337:	add    BYTE PTR [rdx+0xa8],ah
   14000833d:	add    BYTE PTR [rax],al
   14000833f:	add    BYTE PTR [rax+rbp*4+0x0],dl
   140008346:	add    BYTE PTR [rax],al
   140008348:	mov    WORD PTR [rcx+0x0],gs
	...
   140008356:	add    BYTE PTR [rax],al
   140008358:	outs   dx,BYTE PTR ds:[rsi]
   140008359:	lods   eax,DWORD PTR ds:[rsi]
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	add    BYTE PTR [rax],al
   14000835e:	add    BYTE PTR [rax],al
   140008360:	rex.R lods eax,DWORD PTR ds:[rsi]
   140008362:	add    BYTE PTR [rax],al
   140008364:	add    BYTE PTR [rax],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	push   rdx
   140008369:	stos   BYTE PTR es:[rdi],al
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	add    BYTE PTR [rax],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	cmp    BYTE PTR [rdx+0x0],ch
   140008376:	add    BYTE PTR [rax],al
   140008378:	and    al,0xaa
	...
   140008386:	add    BYTE PTR [rax],al
   140008388:	or     BYTE PTR [rdx+0x0],ch
   14000838e:	add    BYTE PTR [rax],al
   140008390:	imul   BYTE PTR [rcx+0x0]
   140008396:	add    BYTE PTR [rax],al
   140008398:	loop   0x140008343
   14000839a:	add    BYTE PTR [rax],al
   14000839c:	add    BYTE PTR [rax],al
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	(bad)  
   1400083a1:	test   eax,0x0
	...
   1400083ae:	add    BYTE PTR [rax],al
   1400083b0:	movabs al,ds:0xe000000001400010
   1400083b9:	pop    rbp
   1400083ba:	add    BYTE PTR [rax+0x1],al
	...
   1400083c5:	add    BYTE PTR [rax],al
   1400083c7:	add    al,dh
   1400083c9:	push   rdx
   1400083ca:	add    BYTE PTR [rax+0x1],al
   1400083cd:	add    BYTE PTR [rax],al
   1400083cf:	add    BYTE PTR [rax],al
   1400083d1:	adc    BYTE PTR [rax],al
   1400083d3:	rex add DWORD PTR [rax],eax
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	xor    BYTE PTR [rax],dl
   1400083da:	add    BYTE PTR [rax+0x1],al
   1400083dd:	add    BYTE PTR [rax],al
   1400083df:	add    BYTE PTR [rax+0x10],ah
   1400083e2:	add    BYTE PTR [rax+0x1],al
   1400083e5:	add    BYTE PTR [rax],al
   1400083e7:	add    BYTE PTR [rax+0x10],dh
   1400083ea:	add    BYTE PTR [rax+0x1],al
   1400083ed:	add    BYTE PTR [rax],al
   1400083ef:	add    BYTE PTR [rax+0x1400010],al
	...
   140008405:	add    BYTE PTR [rax],al
   140008407:	add    BYTE PTR [rax],dl
   140008409:	push   rdx
   14000840a:	add    BYTE PTR [rax+0x1],al
   14000840d:	add    BYTE PTR [rax],al
   14000840f:	add    BYTE PTR [rax+0x59],dl
   140008412:	add    BYTE PTR [rax+0x1],al
	...
   140008421:	adc    BYTE PTR [rax],al
   140008423:	add    BYTE PTR [rax],dh
   140008425:	adc    BYTE PTR [rax],al
   140008427:	add    BYTE PTR [rax+0x10],ah
   14000842a:	add    BYTE PTR [rax],al
   14000842c:	jo     0x14000843e
   14000842e:	add    BYTE PTR [rax],al
   140008430:	adc    BYTE PTR [rax],0x0
   140008433:	add    BYTE PTR [rax-0x1ffffff0],ah
   140008439:	adc    eax,DWORD PTR [rax]
   14000843b:	add    BYTE PTR [rax],al
   14000843d:	adc    al,0x0
   14000843f:	add    BYTE PTR [rax],dl
   140008441:	adc    eax,0x15600000
   140008446:	add    BYTE PTR [rax],al
   140008448:	movabs al,ds:0xf0000022d0000022
   140008451:	and    al,BYTE PTR [rax]
   140008453:	add    BYTE PTR [rax+0x23],ah
   140008456:	add    BYTE PTR [rax],al
   140008458:	and    BYTE PTR [rbx],0x0
   14000845b:	add    BYTE PTR [rax-0x2fffffdd],dl
   140008461:	and    eax,DWORD PTR [rax]
   140008463:	add    al,ah
   140008465:	and    eax,DWORD PTR [rax]
   140008467:	add    BYTE PTR [rax],ah
   140008469:	and    al,0x0
   14000846b:	add    BYTE PTR [rax],dh
   14000846d:	and    al,0x0
   14000846f:	add    BYTE PTR [rax+0x24],dh
   140008472:	add    BYTE PTR [rax],al
   140008474:	xor    BYTE PTR [rip+0x25a00000],ah        # 0x165a0847a
   14000847a:	add    BYTE PTR [rax],al
   14000847c:	nop
   14000847d:	add    BYTE PTR es:[rax],al
   140008480:	add    BYTE PTR [rdi],dh
   140008482:	add    BYTE PTR [rax],al
   140008484:	nop
   140008485:	add    BYTE PTR ds:[rax],al
   140008488:	lock add BYTE PTR ds:[rax],al
   14000848c:	push   rax
   14000848d:	(bad)  
   14000848e:	add    BYTE PTR [rax],al
   140008490:	(bad)  
   140008491:	(bad)  
   140008492:	add    BYTE PTR [rax],al
   140008494:	jo     0x1400084d5
   140008496:	add    BYTE PTR [rax],al
   140008498:	sar    BYTE PTR [rdi],0x0
   14000849b:	add    BYTE PTR [rax],dl
   14000849d:	add    BYTE PTR [rax],al
   1400084a0:	xor    BYTE PTR [rax+0x0],al
   1400084a3:	add    al,ah
   1400084a5:	rex.W add BYTE PTR [rax],al
   1400084a8:	ror    BYTE PTR [rdx+0x0],1
   1400084ab:	add    BYTE PTR [rax],al
   1400084ad:	rex.WXB add BYTE PTR [r8],al
   1400084b0:	movabs al,ds:0x1000004bc000004b
   1400084b9:	rex.WR add BYTE PTR [rax],r8b
   1400084bc:	lock rex.WR add BYTE PTR [rax],r8b
   1400084c0:	push   rax
   1400084c1:	rex.WRB add BYTE PTR [r8],r8b
   1400084c4:	xor    BYTE PTR [rdi+0x0],cl
   1400084c7:	add    BYTE PTR [rax+0x4f],al
   1400084ca:	add    BYTE PTR [rax],al
   1400084cc:	adc    BYTE PTR [rax+0x0],dl
   1400084cf:	add    BYTE PTR [rax+0x30000050],dh
   1400084d5:	push   rcx
   1400084d6:	add    BYTE PTR [rax],al
   1400084d8:	adc    BYTE PTR [rdx+0x0],dl
   1400084db:	add    al,dh
   1400084dd:	push   rdx
   1400084de:	add    BYTE PTR [rax],al
   1400084e0:	rcl    BYTE PTR [rbp+0x0],0x0
   1400084e4:	lock push rsi
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	rex push rdi
   1400084ea:	add    BYTE PTR [rax],al
   1400084ec:	rcr    BYTE PTR [rax+0x0],0x0
   1400084f0:	adc    BYTE PTR [rcx+0x0],bl
   1400084f3:	add    BYTE PTR [rax+0x59],dl
   1400084f6:	add    BYTE PTR [rax],al
   1400084f8:	lock pop rbx
   1400084fa:	add    BYTE PTR [rax],al
   1400084fc:	jo     0x14000855a
   1400084fe:	add    BYTE PTR [rax],al
   140008500:	xor    BYTE PTR [rdx+0x0],ah
   140008503:	add    BYTE PTR [rax-0x5fffff9e],al
   140008509:	(bad)  
   14000850a:	add    BYTE PTR [rax],al
   14000850c:	shl    BYTE PTR [rdx+0x0],0x0
   140008510:	lock rol DWORD PTR [rax],0x40
   140008514:	add    DWORD PTR [rax],eax
   140008516:	add    BYTE PTR [rax],al
   140008518:	nop
   140008519:	ret    0x4000
   14000851c:	add    DWORD PTR [rax],eax
   14000851e:	add    BYTE PTR [rax],al
   140008520:	rcr    BYTE PTR [rax+0x0],0x40
   140008524:	add    DWORD PTR [rax],eax
   140008526:	add    BYTE PTR [rax],al
   140008528:	and    al,BYTE PTR [rip+0x21993]        # 0x140029ec1
   14000852e:	add    BYTE PTR [rax],al
   140008530:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008531:	pushf  
   140008532:	add    BYTE PTR [rax],al
   140008534:	add    DWORD PTR [rax],eax
   140008536:	add    BYTE PTR [rax],al
   140008538:	test   BYTE PTR [rdi+0x60000],bl
   14000853e:	add    BYTE PTR [rax],al
   140008540:	mov    al,0x9f
   140008542:	add    BYTE PTR [rax],al
   140008544:	and    BYTE PTR [rax],al
   140008546:	add    BYTE PTR [rax],al
   140008548:	add    BYTE PTR [rax],al
   14000854a:	add    BYTE PTR [rax],al
   14000854c:	add    DWORD PTR [rax],eax
	...
   140008556:	add    BYTE PTR [rax],al
   140008558:	rex.RB js 0x1400085be
   14000855b:	gs jo  0x1400085d2
   14000855e:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140008565:	add    BYTE PTR [rax],al
   140008567:	add    BYTE PTR [rdx+0x65],dl
   14000856a:	je     0x1400085e1
   14000856c:	jb     0x1400085dc
   14000856e:	rex.W jb 0x140008571
   140008571:	add    BYTE PTR [rax],al
   140008573:	add    BYTE PTR [rax],al
   140008575:	add    BYTE PTR [rax],al
   140008577:	add    BYTE PTR [rdx+0x65],dl
   14000857a:	je     0x1400085f1
   14000857c:	jb     0x1400085ec
   14000857e:	rex.W jb 0x1400085dc
   140008581:	push   rax
   140008582:	jb     0x1400085e9
   140008584:	push   rdx
   140008585:	gs ins BYTE PTR es:[rdi],dx
   140008587:	gs (bad) 
   140008589:	jae    0x1400085f0
   14000858b:	pop    rbp
   14000858c:	add    BYTE PTR [rax],al
   14000858e:	add    BYTE PTR [rax],al
   140008590:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008592:	addr32 rex.W jb 0x140008596
   140008596:	add    BYTE PTR [rax],al
   140008598:	rex.RX (bad) 
   14000859a:	imul   ebp,DWORD PTR [rsi+rax*2+0x61],0x7473
   1400085a2:	add    BYTE PTR [rax],al
   1400085a4:	add    BYTE PTR [rax],al
   1400085a6:	add    BYTE PTR [rax],al
   1400085a8:	and    eax,0x73006800
   1400085ad:	add    BYTE PTR [rax],ch
   1400085af:	add    BYTE PTR [rip+0x29006400],ah        # 0x16900e9b5
   1400085b5:	add    BYTE PTR [rax+rax*1+0x25],bl
   1400085b9:	add    BYTE PTR [rax+0x0],ch
   1400085bc:	jae    0x1400085be
   1400085be:	and    DWORD PTR [rax],eax
   1400085c0:	and    eax,0x3a007000
   1400085c5:	add    BYTE PTR [rax],ah
	...
   1400085cf:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300edd5
   1400085d5:	add    BYTE PTR [rcx],ah
   1400085d7:	add    BYTE PTR [rip+0x3a007000],ah        # 0x17a00f5dd
   1400085dd:	add    BYTE PTR [rax],ah
	...
   1400085e7:	add    BYTE PTR [rax],ch
   1400085e9:	add    BYTE PTR [rbx+0x0],ah
   1400085ec:	(bad)  
   1400085ed:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400085f1:	add    BYTE PTR [rbp+0x0],ah
   1400085f4:	jb     0x1400085f6
   1400085f6:	cmp    al,BYTE PTR [rax]
   1400085f8:	and    BYTE PTR [rax],al
   1400085fa:	and    eax,0x29007000
   1400085ff:	add    BYTE PTR [rax],ah
   140008601:	add    BYTE PTR [rax],al
   140008603:	add    BYTE PTR [rax],al
   140008605:	add    BYTE PTR [rax],al
   140008607:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300ee0d
   14000860d:	add    BYTE PTR [rax],ch
   14000860f:	add    BYTE PTR [rip+0x29006400],ah        # 0x16900ea15
   140008615:	add    BYTE PTR [rax],ah
   140008617:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000861b:	add    BYTE PTR [rax+rax*1+0x28],ah
   14000861f:	add    BYTE PTR [rip+0x29007800],ah        # 0x16900fe25
   140008625:	add    BYTE PTR [rax],ah
   140008627:	add    BYTE PTR [rip+0x38003000],ah        # 0x17800b62d
   14000862d:	add    BYTE PTR [rax+0x0],bl
   140008630:	and    BYTE PTR [rax],al
   140008632:	and    eax,0x73007700
	...
   14000863f:	add    BYTE PTR [rax],ah
   140008641:	add    BYTE PTR [rax],ah
   140008643:	add    BYTE PTR [rax],ah
   140008645:	add    BYTE PTR [rax],ah
	...
   14000864f:	add    BYTE PTR [rbp+0x0],cl
   140008652:	jae    0x140008654
   140008654:	add    BYTE PTR [edx],bh
   140008657:	add    BYTE PTR [rbx+0x0],bl
   14000865a:	and    eax,0x73007700
   14000865f:	add    BYTE PTR [rbp+0x0],bl
   140008662:	and    BYTE PTR [rax],al
   140008664:	add    BYTE PTR [rax],al
   140008666:	add    BYTE PTR [rax],al
   140008668:	rex.XB add BYTE PTR [r9+0x0],spl
   14000866c:	ins    BYTE PTR es:[rdi],dx
   14000866d:	add    BYTE PTR [rax+rax*1+0x43],ch
   140008671:	add    BYTE PTR [rdi+0x0],ch
   140008674:	outs   dx,BYTE PTR ds:[rsi]
   140008675:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008679:	add    BYTE PTR [rax+0x0],bh
   14000867c:	je     0x14000867e
   14000867e:	cmp    al,BYTE PTR [rax]
   140008680:	pop    rbx
   140008681:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300ee87
   140008687:	add    BYTE PTR [rbp+0x0],bl
   14000868a:	and    BYTE PTR [rax],al
   14000868c:	add    BYTE PTR [rax],al
   14000868e:	add    BYTE PTR [rax],al
   140008690:	pop    rbx
   140008691:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300ee97
   140008697:	add    BYTE PTR [rax],ch
   140008699:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300ee9f
   14000869f:	add    BYTE PTR [rcx],ch
   1400086a1:	add    BYTE PTR [rbp+0x0],bl
   1400086a4:	or     al,BYTE PTR [rax]
   1400086a6:	add    BYTE PTR [rax],al
   1400086a8:	pop    rbx
   1400086a9:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300eeaf
   1400086af:	add    BYTE PTR [rbp+0x0],bl
   1400086b2:	or     al,BYTE PTR [rax]
   1400086b4:	add    BYTE PTR [rax],al
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	or     al,BYTE PTR [rax]
   1400086ba:	add    BYTE PTR [rax],al
   1400086bc:	add    BYTE PTR [rax],al
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	outs   dx,BYTE PTR ds:[rsi]
   1400086c1:	add    BYTE PTR [rax+rax*1+0x64],dh
   1400086c5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400086c9:	add    BYTE PTR [rsi],ch
   1400086cb:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1400086cf:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400086d3:	add    BYTE PTR [rax],al
   1400086d5:	add    BYTE PTR [rax],al
   1400086d7:	add    BYTE PTR [rsp+riz*2+0x72],cl
   1400086db:	rex.RX (bad) 
   1400086dd:	jae    0x140008753
   1400086df:	rex.RX (bad) 
   1400086e1:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   1400086e9:	gs jb  0x14000872f
   1400086ec:	(bad)  
   1400086ed:	ins    BYTE PTR es:[rdi],dx
   1400086ee:	ins    BYTE PTR es:[rdi],dx
   1400086ef:	outs   dx,DWORD PTR ds:[rsi]
   1400086f0:	jne    0x140008766
   1400086f2:	add    BYTE PTR [rax],al
   1400086f4:	add    BYTE PTR [rax],al
   1400086f6:	add    BYTE PTR [rax],al
   1400086f8:	push   rdx
   1400086f9:	je     0x140008767
   1400086fb:	rex.WRX je 0x140008751
   1400086fe:	je     0x140008761
   140008700:	je     0x140008777
   140008702:	jae    0x140008758
   140008704:	outs   dx,DWORD PTR ds:[rsi]
   140008705:	rex.R outs dx,DWORD PTR ds:[rsi]
   140008707:	jae    0x14000874e
   140008709:	jb     0x14000877d
   14000870b:	outs   dx,DWORD PTR ds:[rsi]
   14000870c:	jb     0x14000875c
   14000870e:	outs   dx,DWORD PTR ds:[rsi]
   14000870f:	push   rsp
   140008710:	gs (bad) 
   140008712:	add    BYTE PTR [rax],al
   140008714:	add    BYTE PTR [rax],al
   140008716:	add    BYTE PTR [rax],al
   140008718:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000871f:	ins    BYTE PTR es:[rdi],dx
   140008720:	pop    rsp
   140008721:	jae    0x140008787
   140008723:	imul   ebx,DWORD PTR [rcx+rbp*2+0x6e],0x63
   140008728:	pop    rsp
   140008729:	ja     0x140008794
   14000872b:	ins    BYTE PTR es:[rdi],dx
   14000872c:	pop    rsp
   14000872d:	jb     0x140008794
   14000872f:	jae    0x1400087a6
   140008731:	ins    BYTE PTR es:[rdi],dx
   140008732:	je     0x140008762
   140008734:	push   0x53000000
   140008739:	push   rbp
   14000873a:	rex.XB
   14000873b:	rex.XB
   14000873c:	rex.RB
   14000873d:	rex.RB
   14000873e:	rex.R
   14000873f:	rex.RB
   140008740:	sub    BYTE PTR [rsi+0x61],r12b
   140008744:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x683e2d65
   14000874c:	jb     0x140008777
   14000874e:	and    BYTE PTR [rsi],ah
   140008750:	and    BYTE PTR es:[rax],ch
   140008753:	je     0x1400087ce
   140008755:	jo     0x1400087bc
   140008757:	and    BYTE PTR [rcx],ah
   140008759:	cmp    eax,0x69614620
   14000875e:	ins    BYTE PTR es:[rdi],dx
   14000875f:	jne    0x1400087d3
   140008761:	gs push rsp
   140008763:	jns    0x1400087d5
   140008765:	cmp    bh,BYTE PTR gs:[rdx]
   140008768:	rex.RX (bad) 
   14000876a:	imul   ebp,DWORD PTR [rsi+rax*2+0x61],0x297473
   140008772:	add    BYTE PTR [rax],al
   140008774:	add    BYTE PTR [rax],al
   140008776:	add    BYTE PTR [rax],al
   140008778:	ja     0x1400087e3
   14000877a:	ins    BYTE PTR es:[rdi],dx
   14000877b:	cmp    bh,BYTE PTR [rdx]
   14000877d:	fs gs je 0x1400087e2
   140008781:	imul   ebp,DWORD PTR [rbx+rsi*2+0x3a],0x676f4c3a
   140008789:	rex.RX (bad) 
   14000878b:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65
   140008793:	add    BYTE PTR [rax],al
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rdi+0x65],ah
   14000879a:	outs   dx,BYTE PTR ds:[rsi]
   14000879b:	gs jb  0x140008807
   14000879e:	movsxd eax,DWORD PTR [rax]
   1400087a0:	jne    0x140008810
   1400087a2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400087a6:	outs   dx,BYTE PTR ds:[rsi]
   1400087a7:	and    BYTE PTR [rbp+0x72],ah
   1400087aa:	jb     0x14000881b
   1400087ac:	jb     0x1400087ae
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400087b7:	ins    DWORD PTR es:[rdi],dx
	...
   1400087c0:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400087c7:	ins    DWORD PTR es:[rdi],dx
   1400087c8:	and    BYTE PTR [rbx+0x74],dh
   1400087cb:	jb     0x140008832
   1400087cd:	(bad)  
   1400087ce:	ins    DWORD PTR es:[rdi],dx
   1400087cf:	and    BYTE PTR [rbp+0x72],ah
   1400087d2:	jb     0x140008843
   1400087d4:	jb     0x1400087d6
   1400087d6:	add    BYTE PTR [rax],al
   1400087d8:	jae    0x140008853
   1400087da:	jae    0x140008850
   1400087dc:	gs ins DWORD PTR es:[rdi],dx
   1400087de:	add    BYTE PTR [rax],al
   1400087e0:	pop    rdi
   1400087e1:	jb     0x140008848
   1400087e3:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400087e6:	movsxd esi,DWORD PTR [rbp+0x6c]
   1400087e9:	(bad)  
   1400087ea:	je     0x140008851
   1400087ec:	push   rdi
   1400087ed:	outs   dx,BYTE PTR ds:[rsi]
   1400087ee:	cs push bx
   1400087f1:	jne    0x140008855
   1400087f3:	jae    0x140008858
   1400087f5:	jb     0x140008860
   1400087f7:	(bad)  
   1400087f8:	gs push rsp
   1400087fa:	outs   dx,DWORD PTR ds:[rsi]
   1400087fb:	push   rdi
   1400087fc:	outs   dx,BYTE PTR ds:[rsi]
   1400087fd:	push   bx
   1400087ff:	je     0x140008862
   140008801:	je     0x140008868
   140008803:	sub    BYTE PTR [rdi+0x4e],dl
   140008806:	rex.RX pop rdi
   140008808:	rex.WR
   140008809:	rex.RX push rbx
   14000880b:	pop    rdi
   14000880c:	rex.B
   14000880d:	rex.XB push r12
   14000880f:	rex.WB
   140008810:	rex.WRXB
   140008811:	rex.WRX pop rdi
   140008813:	rex.R
   140008814:	rex.WB
   140008815:	rex.B
   140008816:	rex.WR
   140008817:	rex.WRXB
   140008818:	rex.RXB pop r15
   14000881a:	push   r14
   14000881c:	rex.B
   14000881d:	rex.WB
   14000881e:	rex.WR
   14000881f:	rex.B
   140008820:	rex.X
   140008821:	rex.WR
   140008822:	rex.RB sub al,0x20
   140008825:	jae    0x14000889b
   140008827:	cmp    bh,BYTE PTR fs:[rdx]
   14000882a:	(bad)  
   14000882b:	imul   ebp,DWORD PTR [rsi+0x64],0x63412628
   140008832:	je     0x14000889d
   140008834:	outs   dx,DWORD PTR ds:[rsi]
   140008835:	outs   dx,BYTE PTR ds:[rsi]
   140008836:	imul   r12d,DWORD PTR [rcx+0x6c],0x614d676f
   14000883e:	outs   dx,BYTE PTR ds:[rsi]
   14000883f:	(bad)  
   140008840:	addr32 gs jb 0x14000887e
   140008844:	cmp    dl,BYTE PTR [rdi+0x6e]
   140008847:	data16 rex.XB (bad) 
   14000884a:	ins    BYTE PTR es:[rdi],dx
   14000884b:	ins    BYTE PTR es:[rdi],dx
   14000884c:	(bad)  
   14000884e:	movsxd ebp,DWORD PTR [rbx+0x2c]
   140008851:	and    BYTE PTR [rax+rbp*2+0x69],dh
   140008855:	jae    0x140008883
   140008857:	and    BYTE PTR [rbx+0x74],dh
   14000885a:	cmp    bh,BYTE PTR fs:[rdx]
   14000885d:	jo     0x1400088cb
   14000885f:	(bad)  
   140008860:	movsxd esp,DWORD PTR [rbp+0x68]
   140008863:	outs   dx,DWORD PTR ds:[rsi]
   140008864:	ins    BYTE PTR es:[rdi],dx
   140008865:	fs gs jb 0x1400088dc
   140008869:	cmp    bh,BYTE PTR [rdx]
   14000886b:	pop    rdi
   14000886c:	xor    DWORD PTR [rax+riz*1],ebp
   14000886f:	jae    0x1400088e5
   140008871:	cmp    bh,BYTE PTR fs:[rdx]
   140008874:	jo     0x1400088e2
   140008876:	(bad)  
   140008877:	movsxd esp,DWORD PTR [rbp+0x68]
   14000887a:	outs   dx,DWORD PTR ds:[rsi]
   14000887b:	ins    BYTE PTR es:[rdi],dx
   14000887c:	fs gs jb 0x1400088f3
   140008880:	cmp    bh,BYTE PTR [rdx]
   140008882:	pop    rdi
   140008883:	xor    ch,BYTE PTR [rcx]
   140008885:	sub    DWORD PTR [rax],eax
   140008887:	add    BYTE PTR [rcx+0x63],al
   14000888a:	je     0x1400088f5
   14000888c:	outs   dx,DWORD PTR ds:[rsi]
   14000888d:	outs   dx,BYTE PTR ds:[rsi]
   14000888e:	imul   r12d,DWORD PTR [rcx+0x6c],0x614d676f
   140008896:	outs   dx,BYTE PTR ds:[rsi]
   140008897:	(bad)  
   140008898:	addr32 gs jb 0x1400088d6
   14000889c:	cmp    cl,BYTE PTR [rcx+0x6e]
   14000889f:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
	...
   1400088af:	add    BYTE PTR [rdx+rsi*2+0x69],ah
   1400088b3:	jbe    0x14000891a
   1400088b5:	jb     0x14000892a
   1400088b7:	pop    rsp
   1400088b8:	ins    DWORD PTR es:[rdi],dx
   1400088b9:	outs   dx,DWORD PTR ds:[rsi]
   1400088ba:	(bad)  
   1400088bb:	imul   ebp,DWORD PTR [rbp+riz*2+0x70],0x6f6c5c63
   1400088c3:	movsxd esp,DWORD PTR [rcx+0x74]
   1400088c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x766e6f63
   1400088cd:	gs jb  0x140008937
   1400088d0:	outs   dx,BYTE PTR gs:[rsi]
   1400088d2:	movsxd esp,DWORD PTR [rbp+0x5c]
   1400088d5:	ja     0x140008940
   1400088d7:	outs   dx,BYTE PTR ds:[rsi]
   1400088d8:	(bad)  
   1400088d9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400088dd:	outs   dx,BYTE PTR ds:[rsi]
   1400088de:	imul   esp,DWORD PTR fs:[rcx+0x6c],0x655c676f
   1400088e6:	js     0x14000894d
   1400088e8:	pop    rsp
   1400088e9:	(bad)  
   1400088ea:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400088ee:	outs   dx,BYTE PTR ds:[rsi]
   1400088ef:	imul   esp,DWORD PTR fs:[rcx+0x6c],0x632e676f
   1400088f7:	jo     0x140008969
   1400088f9:	add    BYTE PTR [rax],al
   1400088fb:	add    BYTE PTR [rax],al
   1400088fd:	add    BYTE PTR [rax],al
   1400088ff:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   140008903:	(bad)  
   140008904:	je     0x14000896f
   140008906:	outs   dx,DWORD PTR ds:[rsi]
   140008907:	outs   dx,BYTE PTR ds:[rsi]
   140008908:	rex.W
   140008909:	gs ins BYTE PTR es:[rdi],dx
   14000890b:	jo     0x140008972
   14000890d:	jb     0x140008949
   14000890f:	cmp    al,BYTE PTR [rbx+0x72]
   140008912:	gs (bad) 
   140008914:	je     0x14000897b
   140008916:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008918:	movsxd esp,DWORD PTR [rcx+0x74]
   14000891b:	imul   ebp,DWORD PTR [rdi+0x6e],0x616e614d
   140008922:	addr32 gs jb 0x14000896f
   140008926:	outs   dx,BYTE PTR ds:[rsi]
   140008927:	je     0x14000898e
   140008929:	jb     0x140008999
   14000892b:	(bad)  
   14000892c:	ins    BYTE PTR es:[rdi],dx
   14000892d:	rex.WRXB jne 0x1400089a4
   140008930:	rex.WRXB
   140008931:	push   ax
   140008933:	jb     0x1400089a4
   140008935:	movsxd ebp,DWORD PTR [rax]
   140008937:	jo     0x14000897f
   140008939:	jb     0x14000899c
   14000893b:	ins    DWORD PTR es:[rdi],dx
   14000893c:	gs ja  0x1400089ae
   14000893f:	jb     0x1400089ac
   140008941:	cs rex.RXB
   140008943:	gs je  0x140008987
   140008946:	fs fs jb 0x1400089af
   14000894a:	jae    0x1400089bf
   14000894c:	rex.WRXB
   14000894d:	data16 sub BYTE PTR [rcx],ch
   140008950:	sub    DWORD PTR [rax],eax
   140008952:	add    BYTE PTR [rax],al
   140008954:	add    BYTE PTR [rax],al
   140008956:	add    BYTE PTR [rax],al
   140008958:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14000895d:	outs   dx,BYTE PTR ds:[rsi]
   14000895e:	imul   r12d,DWORD PTR [rcx+0x6c],0x614d676f
   140008966:	outs   dx,BYTE PTR ds:[rsi]
   140008967:	(bad)  
   140008968:	addr32 gs jb 0x1400089a6
   14000896c:	cmp    cl,BYTE PTR [rax+0x61]
   14000896f:	outs   dx,BYTE PTR ds:[rsi]
   140008970:	fs ins BYTE PTR es:[rdi],dx
   140008972:	gs push rax
   140008974:	jb     0x1400089e5
   140008976:	ins    DWORD PTR es:[rdi],dx
   140008977:	jo     0x1400089ed
   140008979:	push   rbx
   14000897a:	jns    0x1400089ea
   14000897c:	movsxd eax,DWORD PTR [rax]
   14000897e:	add    BYTE PTR [rax],al
   140008980:	jo     0x1400089c8
   140008982:	jb     0x1400089e5
   140008984:	ins    DWORD PTR es:[rdi],dx
   140008985:	gs ja  0x1400089f7
   140008988:	jb     0x1400089f5
   14000898a:	sub    eax,0x6565503e
   14000898f:	imul   eax,DWORD PTR [rcx+0x63],0x74
   140008993:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c616944
   14000899a:	outs   dx,DWORD PTR ds:[rsi]
   14000899b:	sub    BYTE PTR [eax+0x53],dh
   14000899f:	gs jb  0x140008a18
   1400089a2:	imul   esp,DWORD PTR [rbx+0x65],0x72727543
   1400089a9:	outs   dx,BYTE PTR gs:[rsi]
   1400089ab:	je     0x1400089fd
   1400089ad:	jb     0x140008a1e
   1400089af:	ins    DWORD PTR es:[rdi],dx
   1400089b0:	jo     0x140008a26
   1400089b2:	cs rex.RXB
   1400089b4:	gs je  0x1400089f8
   1400089b7:	fs fs jb 0x140008a20
   1400089bb:	jae    0x140008a30
   1400089bd:	rex.WRXB
   1400089be:	data16 sub BYTE PTR [rcx],ch
   1400089c1:	sub    DWORD PTR [rax],eax
   1400089c3:	add    BYTE PTR [rax],al
   1400089c5:	add    BYTE PTR [rax],al
   1400089c7:	add    BYTE PTR [rax+0x53],dh
   1400089ca:	gs jb  0x140008a43
   1400089cd:	imul   esp,DWORD PTR [rbx+0x65],0x72727543
   1400089d4:	outs   dx,BYTE PTR gs:[rsi]
   1400089d6:	je     0x140008a28
   1400089d8:	jb     0x140008a49
   1400089da:	ins    DWORD PTR es:[rdi],dx
   1400089db:	jo     0x140008a51
   1400089dd:	sub    eax,0x7465673e
   1400089e2:	pop    rdi
   1400089e3:	push   rsp
   1400089e4:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x74786554
   1400089ec:	sub    BYTE PTR [rsi],ah
   1400089ee:	je     0x140008a59
   1400089f0:	je     0x140008a5e
   1400089f2:	sub    DWORD PTR gs:[rax],eax
   1400089f5:	add    BYTE PTR [rax],al
   1400089f7:	add    BYTE PTR [rax+0x53],dh
   1400089fa:	gs jb  0x140008a73
   1400089fd:	imul   esp,DWORD PTR [rbx+0x65],0x72727543
   140008a04:	outs   dx,BYTE PTR gs:[rsi]
   140008a06:	je     0x140008a58
   140008a08:	jb     0x140008a79
   140008a0a:	ins    DWORD PTR es:[rdi],dx
   140008a0b:	jo     0x140008a81
   140008a0d:	sub    eax,0x7465673e
   140008a12:	pop    rdi
   140008a13:	rex.WRB
   140008a14:	gs jae 0x140008a8a
   140008a17:	(bad)  
   140008a18:	addr32 gs push rsp
   140008a1b:	gs js  0x140008a92
   140008a1e:	sub    BYTE PTR [rsi],ah
   140008a20:	ins    DWORD PTR es:[rdi],dx
   140008a21:	gs jae 0x140008a97
   140008a24:	(bad)  
   140008a25:	sub    DWORD PTR gs:[eax],eax
   140008a29:	add    BYTE PTR [rax],al
   140008a2b:	add    BYTE PTR [rax],al
   140008a2d:	add    BYTE PTR [rax],al
   140008a2f:	add    BYTE PTR [rax+0x53],dh
   140008a32:	gs jb  0x140008aab
   140008a35:	imul   esp,DWORD PTR [rbx+0x65],0x72727543
   140008a3c:	outs   dx,BYTE PTR gs:[rsi]
   140008a3e:	je     0x140008a90
   140008a40:	jb     0x140008ab1
   140008a42:	ins    DWORD PTR es:[rdi],dx
   140008a43:	jo     0x140008ab9
   140008a45:	sub    eax,0x7465673e
   140008a4a:	pop    rdi
   140008a4b:	imul   r12d,DWORD PTR [rcx+0x6c],0x6f4d676f
   140008a53:	fs sub BYTE PTR gs:[rsi],ah
   140008a57:	ins    DWORD PTR es:[rdi],dx
   140008a58:	outs   dx,DWORD PTR ds:[rsi]
   140008a59:	fs sub DWORD PTR gs:[rax],eax
   140008a5d:	add    BYTE PTR [rax],al
   140008a5f:	add    BYTE PTR [rdi+0x65],al
   140008a62:	je     0x140008ab7
   140008a64:	gs jae 0x140008ada
   140008a67:	imul   ebp,DWORD PTR [rdi+0x6e],0x69746f4e
   140008a6e:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140008a74:	outs   dx,DWORD PTR ds:[rsi]
   140008a75:	outs   dx,BYTE PTR ds:[rsi]
   140008a76:	rex.W (bad) 
   140008a78:	outs   dx,BYTE PTR ds:[rsi]
   140008a79:	fs ins BYTE PTR es:[rdi],dx
   140008a7b:	gs jb  0x140008aa6
   140008a7e:	jo     0x140008ad3
   140008a80:	gs jb  0x140008af9
   140008a83:	imul   esp,DWORD PTR [rbx+0x65],0x72727543
   140008a8a:	outs   dx,BYTE PTR gs:[rsi]
   140008a8c:	je     0x140008ade
   140008a8e:	jb     0x140008aff
   140008a90:	ins    DWORD PTR es:[rdi],dx
   140008a91:	jo     0x140008b07
   140008a93:	cs rex.RXB
   140008a95:	gs je  0x140008ac0
   140008a98:	sub    DWORD PTR [rax+riz*1],ebp
   140008a9b:	sub    BYTE PTR es:[rbx+0x6c],ah
   140008a9f:	imul   esp,DWORD PTR [rbp+0x6e],0x6e614374
   140008aa6:	movsxd esp,DWORD PTR [rbp+0x6c]
   140008aa9:	rex.RB jbe 0x140008b11
   140008aac:	outs   dx,BYTE PTR ds:[rsi]
   140008aad:	je     0x140008add
   140008aaf:	ins    DWORD PTR es:[rdi],dx
   140008ab0:	pop    rdi
   140008ab1:	push   0x2929
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	pop    rdi
   140008ab9:	je     0x140008b24
   140008abb:	ins    DWORD PTR es:[rdi],dx
   140008abc:	gs jb  0x140008aed
   140008abf:	push   rbx
   140008ac0:	gs je  0x140008b07
   140008ac3:	jne    0x140008b2a
   140008ac5:	push   rsp
   140008ac6:	imul   ebp,DWORD PTR [rbp+0x65],0x6d6f7246
   140008acd:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140008acf:	ja     0x140008af9
   140008ad1:	je     0x140008b3c
   140008ad3:	ins    DWORD PTR es:[rdi],dx
   140008ad4:	outs   dx,DWORD PTR gs:[rsi]
   140008ad6:	jne    0x140008b4c
   140008ad8:	rex.WRB jae 0x140008b04
   140008adb:	add    BYTE PTR [rax],al
   140008add:	add    BYTE PTR [rax],al
   140008adf:	add    BYTE PTR [rax+0x72],dh
   140008ae2:	outs   dx,DWORD PTR ds:[rsi]
   140008ae3:	jbe    0x140008b4e
   140008ae5:	jae    0x140008b50
   140008ae7:	outs   dx,DWORD PTR ds:[rsi]
   140008ae8:	outs   dx,BYTE PTR ds:[rsi]
   140008ae9:	imul   ebp,DWORD PTR [rsi+0x67],0x736e6f43
   140008af0:	outs   dx,BYTE PTR gs:[rsi]
   140008af2:	je     0x140008b4b
   140008af4:	imul   ebp,DWORD PTR [rsi+0x64],0x532e776f
   140008afb:	push   0x7953776f
   140008b00:	jae    0x140008b76
   140008b02:	gs ins DWORD PTR es:[rdi],dx
   140008b04:	imul   r12d,DWORD PTR [rcx+0x6c],0x7228676f
   140008b0c:	gs (bad) 
   140008b0e:	ins    BYTE PTR es:[rdi],dx
   140008b0f:	push   rsp
   140008b10:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x735f632e
   140008b18:	je     0x140008b8c
   140008b1a:	sub    BYTE PTR [rcx],ch
   140008b1c:	sub    al,0x20
   140008b1e:	jb     0x140008b85
   140008b20:	(bad)  
   140008b21:	ins    BYTE PTR es:[rdi],dx
   140008b22:	rex.WRB
   140008b23:	gs jae 0x140008b99
   140008b26:	(bad)  
   140008b27:	gs movsxd ebx,DWORD PTR cs:[edi+0x73]
   140008b2d:	je     0x140008ba1
   140008b2f:	sub    BYTE PTR [rcx],ch
   140008b31:	sub    al,0x20
   140008b33:	je     0x140008b9e
   140008b35:	ins    DWORD PTR es:[rdi],dx
   140008b36:	outs   dx,DWORD PTR gs:[rsi]
   140008b38:	jne    0x140008bae
   140008b3a:	rex.RB jbe 0x140008ba2
   140008b3d:	outs   dx,BYTE PTR ds:[rsi]
   140008b3e:	je     0x140008b6c
   140008b40:	and    BYTE PTR [rbx+0x6c],ah
   140008b43:	imul   esp,DWORD PTR [rbp+0x6e],0x6e614374
   140008b4a:	movsxd esp,DWORD PTR [rbp+0x6c]
   140008b4d:	rex.RB jbe 0x140008bb5
   140008b50:	outs   dx,BYTE PTR ds:[rsi]
   140008b51:	je     0x140008b81
   140008b53:	ins    DWORD PTR es:[rdi],dx
   140008b54:	pop    rdi
   140008b55:	push   0x29
   140008b5a:	add    BYTE PTR [rax],al
   140008b5c:	add    BYTE PTR [rax],al
   140008b5e:	add    BYTE PTR [rax],al
   140008b60:	jo     0x140008bb5
   140008b62:	gs jb  0x140008bdb
   140008b65:	imul   esp,DWORD PTR [rbx+0x65],0x72727543
   140008b6c:	outs   dx,BYTE PTR gs:[rsi]
   140008b6e:	je     0x140008bc0
   140008b70:	jb     0x140008be1
   140008b72:	ins    DWORD PTR es:[rdi],dx
   140008b73:	jo     0x140008be9
   140008b75:	sub    eax,0x7475703e
   140008b7a:	pop    rdi
   140008b7b:	push   rax
   140008b7c:	jb     0x140008bed
   140008b7e:	ins    DWORD PTR es:[rdi],dx
   140008b7f:	jo     0x140008bf5
   140008b81:	rex.B outs dx,BYTE PTR ds:[rsi]
   140008b83:	jae    0x140008bfc
   140008b85:	gs jb  0x140008bb0
   140008b88:	jo     0x140008bfc
   140008b8a:	outs   dx,DWORD PTR ds:[rsi]
   140008b8b:	jbe    0x140008bf6
   140008b8d:	jae    0x140008bf8
   140008b8f:	outs   dx,DWORD PTR ds:[rsi]
   140008b90:	outs   dx,BYTE PTR ds:[rsi]
   140008b91:	imul   ebp,DWORD PTR [rsi+0x67],0x736e6f43
   140008b98:	outs   dx,BYTE PTR gs:[rsi]
   140008b9a:	je     0x140008bf3
   140008b9c:	imul   ebp,DWORD PTR [rsi+0x64],0x432e776f
   140008ba3:	push   0x556b6365
   140008ba8:	jae    0x140008c0f
   140008baa:	jb     0x140008bfe
   140008bac:	gs jae 0x140008c1f
   140008baf:	outs   dx,DWORD PTR ds:[rsi]
   140008bb0:	outs   dx,BYTE PTR ds:[rsi]
   140008bb1:	jae    0x140008c18
   140008bb3:	sub    BYTE PTR [rcx],ch
   140008bb5:	sub    DWORD PTR [rax],eax
   140008bb7:	add    BYTE PTR [rbx+0x72],ah
   140008bba:	gs (bad) 
   140008bbc:	je     0x140008c23
   140008bbe:	fs rex.W (bad) 
   140008bc1:	outs   dx,BYTE PTR ds:[rsi]
   140008bc2:	fs ins BYTE PTR es:[rdi],dx
   140008bc4:	add    BYTE PTR gs:[rax],al
   140008bc7:	add    BYTE PTR [rcx+0x63],al
   140008bca:	je     0x140008c35
   140008bcc:	outs   dx,DWORD PTR ds:[rsi]
   140008bcd:	outs   dx,BYTE PTR ds:[rsi]
   140008bce:	imul   r12d,DWORD PTR [rcx+0x6c],0x614d676f
   140008bd6:	outs   dx,BYTE PTR ds:[rsi]
   140008bd7:	(bad)  
   140008bd8:	addr32 gs jb 0x140008c16
   140008bdc:	cmp    dl,BYTE PTR [rdi+0x6e]
   140008bdf:	data16 rex.XB (bad) 
   140008be2:	ins    BYTE PTR es:[rdi],dx
   140008be3:	ins    BYTE PTR es:[rdi],dx
   140008be4:	(bad)  
   140008be6:	movsxd ebp,DWORD PTR [rbx+0x49]
   140008be9:	ins    DWORD PTR es:[rdi],dx
   140008bea:	jo     0x140008c58
   140008bec:	add    BYTE PTR [rax],al
   140008bee:	add    BYTE PTR [rax],al
   140008bf0:	push   rdi
   140008bf1:	imul   ebp,DWORD PTR [rsi+0x64],0x3a73776f
   140008bf8:	cmp    al,BYTE PTR [rsi+0x6f]
   140008bfb:	jne    0x140008c6b
   140008bfd:	fs (bad) 
   140008bff:	je     0x140008c6a
   140008c01:	outs   dx,DWORD PTR ds:[rsi]
   140008c02:	outs   dx,BYTE PTR ds:[rsi]
   140008c03:	cmp    bh,BYTE PTR [rdx]
   140008c05:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008c07:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008c0f:	sub    BYTE PTR [rdx+0x4f],dl
   140008c12:	pop    rdi
   140008c13:	rex.WB
   140008c14:	rex.WRX
   140008c15:	rex.WB push r12
   140008c17:	pop    rdi
   140008c18:	push   rbx
   140008c19:	rex.WB
   140008c1a:	rex.WRX
   140008c1b:	rex.RXB
   140008c1c:	rex.WR
   140008c1d:	rex.RB push r12
   140008c1f:	rex.W push rdx
   140008c21:	rex.RB
   140008c22:	rex.B
   140008c23:	rex.R
   140008c24:	rex.RB
   140008c25:	sub    DWORD PTR [rax],r8d
   140008c28:	ja     0x140008c81
   140008c2a:	imul   ebp,DWORD PTR [rsi+0x4d],0x6e6961
   140008c31:	add    BYTE PTR [rax],al
   140008c33:	add    BYTE PTR [rax],al
   140008c35:	add    BYTE PTR [rax],al
   140008c37:	add    BYTE PTR [rcx+0x0],al
   140008c3a:	add    BYTE PTR [r8+r8*1+0x49],dl
   140008c3f:	add    BYTE PTR [rdi+0x0],cl
   140008c42:	rex.WRX add BYTE PTR [rax+r8*1+0x49],r8b
   140008c47:	add    BYTE PTR [rcx+0x0],al
   140008c4a:	rex.WR add BYTE PTR [rdi+0x0],r9b
   140008c4e:	rex.RXB add BYTE PTR [r15+0x0],r11b
   140008c52:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140008c56:	push   rsp
   140008c57:	add    BYTE PTR [rbp+0x0],al
   140008c5a:	pop    rax
   140008c5b:	add    BYTE PTR [rax],al
   140008c5d:	add    BYTE PTR [rax],al
   140008c5f:	add    BYTE PTR [rsi+0x75],ch
   140008c62:	ins    BYTE PTR es:[rdi],dx
   140008c63:	ins    BYTE PTR es:[rdi],dx
   140008c64:	jo     0x140008cda
   140008c66:	jb     0x140008c88
   140008c68:	cmp    eax,0x4d68203d
   140008c6d:	jne    0x140008ce3
   140008c6f:	gs js  0x140008ca0
   140008c72:	ins    DWORD PTR es:[rdi],dx
   140008c73:	pop    rdi
   140008c74:	push   0x47000000
   140008c79:	gs je  0x140008cc8
   140008c7c:	(bad)  
   140008c7d:	jae    0x140008cf3
   140008c7f:	rex.RB jb 0x140008cf4
   140008c82:	outs   dx,DWORD PTR ds:[rsi]
   140008c83:	jb     0x140008cad
   140008c85:	sub    DWORD PTR [rax],esp
   140008c87:	cmp    eax,0x5245203d
   140008c8c:	push   rdx
   140008c8d:	rex.WRXB push r10
   140008c8f:	pop    rdi
   140008c90:	rex.B
   140008c91:	rex.WR push rdx
   140008c93:	rex.RB
   140008c94:	rex.B
   140008c95:	rex.R pop rcx
   140008c97:	pop    rdi
   140008c98:	rex.RB pop r8
   140008c9a:	rex.WB push r11
   140008c9c:	push   rsp
   140008c9d:	push   rbx
   140008c9e:	add    BYTE PTR [rax],al
   140008ca0:	(bad)  
   140008ca1:	fs ins DWORD PTR es:[rdi],dx
   140008ca3:	rex.WB outs dx,BYTE PTR cs:[rsi]
   140008ca6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008cae:	sub    BYTE PTR [rcx],ch
	...
   140008cb8:	jae    0x140008d2e
   140008cba:	jb     0x140008d25
   140008cbc:	outs   dx,BYTE PTR ds:[rsi]
   140008cbd:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   140008cc2:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140008cc6:	add    BYTE PTR [ecx+0x6e],ch
   140008cca:	jbe    0x140008d2d
   140008ccc:	ins    BYTE PTR es:[rdi],dx
   140008ccd:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   140008cd5:	and    BYTE PTR [eax+0x6f],dh
   140008cd9:	jae    0x140008d44
   140008cdb:	je     0x140008d46
   140008cdd:	outs   dx,DWORD PTR ds:[rsi]
   140008cde:	outs   dx,BYTE PTR ds:[rsi]
   140008cdf:	add    BYTE PTR [rcx+rbp*2+0x73],ch
   140008ce3:	je     0x140008d21
   140008ce5:	push   rsp
   140008ce6:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   140008ceb:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140008cef:	add    BYTE PTR [eax],al
   140008cf2:	add    BYTE PTR [rax],al
   140008cf4:	add    BYTE PTR [rax],al
   140008cf6:	add    BYTE PTR [rax],al
   140008cf8:	nop
   140008cf9:	add    BYTE PTR ds:[rax+0x1],al
   140008cfd:	add    BYTE PTR [rax],al
   140008cff:	add    BYTE PTR [rax+0x140003e],dl
   140008d05:	add    BYTE PTR [rax],al
   140008d07:	add    al,dh
   140008d09:	add    BYTE PTR ds:[rax+0x1],al
   140008d0d:	add    BYTE PTR [rax],al
   140008d0f:	add    BYTE PTR [rax+0x3f],dl
   140008d12:	add    BYTE PTR [rax+0x1],al
   140008d15:	add    BYTE PTR [rax],al
   140008d17:	add    BYTE PTR [rax+0x3f],dh
   140008d1a:	add    BYTE PTR [rax+0x1],al
   140008d1d:	add    BYTE PTR [rax],al
   140008d1f:	add    BYTE PTR [rax],al
   140008d21:	(bad)  
   140008d22:	add    BYTE PTR [rax+0x1],al
   140008d25:	add    BYTE PTR [rax],al
   140008d27:	add    BYTE PTR [rax+0x3f],ah
   140008d2a:	add    BYTE PTR [rax+0x1],al
   140008d2d:	add    BYTE PTR [rax],al
   140008d2f:	add    al,dh
   140008d31:	push   rsi
   140008d32:	add    BYTE PTR [rax+0x1],al
   140008d35:	add    BYTE PTR [rax],al
   140008d37:	add    al,dh
   140008d39:	push   rsi
   140008d3a:	add    BYTE PTR [rax+0x1],al
   140008d3d:	add    BYTE PTR [rax],al
   140008d3f:	add    al,dh
   140008d41:	push   rsi
   140008d42:	add    BYTE PTR [rax+0x1],al
   140008d45:	add    BYTE PTR [rax],al
   140008d47:	add    al,dh
   140008d49:	push   rsi
   140008d4a:	add    BYTE PTR [rax+0x1],al
   140008d4d:	add    BYTE PTR [rax],al
   140008d4f:	add    al,dh
   140008d51:	push   rsi
   140008d52:	add    BYTE PTR [rax+0x1],al
   140008d55:	add    BYTE PTR [rax],al
   140008d57:	add    BYTE PTR [rax],al
   140008d59:	(bad)  
   140008d5a:	add    BYTE PTR [rax+0x1],al
   140008d5d:	add    BYTE PTR [rax],al
   140008d5f:	add    al,dh
   140008d61:	push   rsi
   140008d62:	add    BYTE PTR [rax+0x1],al
   140008d65:	add    BYTE PTR [rax],al
   140008d67:	add    BYTE PTR [rbp+0x48],dh
   140008d6a:	mov    esp,0x950821a3
   140008d6f:	rex.B movabs al,ds:0x8000000001400022
   140008d79:	and    eax,DWORD PTR [rax]
   140008d7b:	rex add DWORD PTR [rax],eax
   140008d7e:	add    BYTE PTR [rax],al
   140008d80:	nop
   140008d81:	and    eax,DWORD PTR [rax]
   140008d83:	rex add DWORD PTR [rax],eax
   140008d86:	add    BYTE PTR [rax],al
   140008d88:	shl    BYTE PTR [rdx],1
   140008d8a:	add    BYTE PTR [rax+0x1],al
   140008d8d:	add    BYTE PTR [rax],al
   140008d8f:	add    BYTE PTR [rax+0x23],ah
   140008d92:	add    BYTE PTR [rax+0x1],al
   140008d95:	add    BYTE PTR [rax],al
   140008d97:	add    al,dh
   140008d99:	and    al,BYTE PTR [rax]
   140008d9b:	rex add DWORD PTR [rax],eax
   140008d9e:	add    BYTE PTR [rax],al
   140008da0:	sar    BYTE PTR [rdi],0x0
   140008da3:	rex add DWORD PTR [rax],eax
   140008da6:	add    BYTE PTR [rax],al
   140008da8:	sar    BYTE PTR [rdi],0x0
   140008dab:	rex add DWORD PTR [rax],eax
   140008dae:	add    BYTE PTR [rax],al
   140008db0:	adc    BYTE PTR [rax+0x0],al
   140008db3:	rex add DWORD PTR [rax],eax
   140008db6:	add    BYTE PTR [rax],al
   140008db8:	xor    BYTE PTR [rax+0x0],al
   140008dbb:	rex add DWORD PTR [rax],eax
   140008dbe:	add    BYTE PTR [rax],al
   140008dc0:	jo     0x140008e01
   140008dc2:	add    BYTE PTR [rax+0x1],al
   140008dc5:	add    BYTE PTR [rax],al
   140008dc7:	add    BYTE PTR [rax],al
   140008dc9:	(bad)  
   140008dca:	add    BYTE PTR [rax+0x1],al
   140008dcd:	add    BYTE PTR [rax],al
   140008dcf:	add    BYTE PTR [rax+0x3f],ah
   140008dd2:	add    BYTE PTR [rax+0x1],al
   140008dd5:	add    BYTE PTR [rax],al
   140008dd7:	add    cl,dh
   140008dd9:	mov    esp,0x230abb31
   140008dde:	(bad)  
   140008ddf:	rex.WXB stos QWORD PTR es:[rdi],rax
   140008de1:	out    dx,eax
   140008de2:	movabs es:0x8d9dfdf2a127f88,eax
   140008dec:	test   esi,0xfa2404a
   140008df2:	data16 out dx,al
   140008df4:	shl    BYTE PTR [rsi+0x22a0cd09],0x0
   140008dfb:	rex add DWORD PTR [rax],eax
   140008dfe:	add    BYTE PTR [rax],al
   140008e00:	and    BYTE PTR [rax+rax*1],ah
   140008e03:	rex add DWORD PTR [rax],eax
   140008e06:	add    BYTE PTR [rax],al
   140008e08:	xor    BYTE PTR [rax+rax*1],ah
   140008e0b:	rex add DWORD PTR [rax],eax
   140008e0e:	add    BYTE PTR [rax],al
   140008e10:	jo     0x140008e36
   140008e12:	add    BYTE PTR [rax+0x1],al
   140008e15:	add    BYTE PTR [rax],al
   140008e17:	add    BYTE PTR [rax+0x23],ah
   140008e1a:	add    BYTE PTR [rax+0x1],al
   140008e1d:	add    BYTE PTR [rax],al
   140008e1f:	add    al,dh
   140008e21:	and    al,BYTE PTR [rax]
   140008e23:	rex add DWORD PTR [rax],eax
   140008e26:	add    BYTE PTR [rax],al
   140008e28:	movabs al,ds:0xd000000001400022
   140008e31:	and    eax,DWORD PTR [rax]
   140008e33:	rex add DWORD PTR [rax],eax
   140008e36:	add    BYTE PTR [rax],al
   140008e38:	loopne 0x140008e5d
   140008e3a:	add    BYTE PTR [rax+0x1],al
   140008e3d:	add    BYTE PTR [rax],al
   140008e3f:	add    al,dl
   140008e41:	and    al,BYTE PTR [rax]
   140008e43:	rex add DWORD PTR [rax],eax
   140008e46:	add    BYTE PTR [rax],al
   140008e48:	(bad)  
   140008e49:	and    eax,DWORD PTR [rax]
   140008e4b:	rex add DWORD PTR [rax],eax
   140008e4e:	add    BYTE PTR [rax],al
   140008e50:	lock and al,BYTE PTR [rax]
   140008e53:	rex add DWORD PTR [rax],eax
   140008e56:	add    BYTE PTR [rax],al
   140008e58:	movabs al,ds:0xf000000001400022
   140008e61:	push   rsi
   140008e62:	add    BYTE PTR [rax+0x1],al
   140008e65:	add    BYTE PTR [rax],al
   140008e67:	add    al,dh
   140008e69:	push   rsi
   140008e6a:	add    BYTE PTR [rax+0x1],al
   140008e6d:	add    BYTE PTR [rax],al
   140008e6f:	add    al,dl
   140008e71:	and    al,BYTE PTR [rax]
   140008e73:	rex add DWORD PTR [rax],eax
   140008e76:	add    BYTE PTR [rax],al
   140008e78:	(bad)  
   140008e79:	and    eax,DWORD PTR [rax]
   140008e7b:	rex add DWORD PTR [rax],eax
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	lock and al,BYTE PTR [rax]
   140008e83:	rex add DWORD PTR [rax],eax
   140008e86:	add    BYTE PTR [rax],al
   140008e88:	movabs al,ds:0x1400025
	...
   140008e99:	rex.WXB add BYTE PTR [r8+0x1],al
   140008e9d:	add    BYTE PTR [rax],al
   140008e9f:	add    BYTE PTR [rax+0x140004b],ah
   140008ea5:	add    BYTE PTR [rax],al
   140008ea7:	add    BYTE PTR [rax],dl
   140008ea9:	rex.WR add BYTE PTR [rax+0x1],r8b
   140008ead:	add    BYTE PTR [rax],al
   140008eaf:	add    al,dh
   140008eb1:	push   rsi
   140008eb2:	add    BYTE PTR [rax+0x1],al
   140008eb5:	add    BYTE PTR [rax],al
   140008eb7:	add    al,dh
   140008eb9:	push   rsi
   140008eba:	add    BYTE PTR [rax+0x1],al
   140008ebd:	add    BYTE PTR [rax],al
   140008ebf:	add    al,dh
   140008ec1:	push   rsi
   140008ec2:	add    BYTE PTR [rax+0x1],al
   140008ec5:	add    BYTE PTR [rax],al
   140008ec7:	add    al,dl
   140008ec9:	rex.WX add BYTE PTR [rax+0x1],al
   140008ecd:	add    BYTE PTR [rax],al
   140008ecf:	add    BYTE PTR [rax],al
   140008ed1:	rex.WXB add BYTE PTR [r8+0x1],al
   140008ed5:	add    BYTE PTR [rax],al
   140008ed7:	add    BYTE PTR [rax+0x140004b],ah
   140008edd:	add    BYTE PTR [rax],al
   140008edf:	add    BYTE PTR [rax],dl
   140008ee1:	rex.WR add BYTE PTR [rax+0x1],r8b
   140008ee5:	add    BYTE PTR [rax],al
   140008ee7:	add    BYTE PTR [rax+0x4d],dl
   140008eea:	add    BYTE PTR [rax+0x1],al
   140008eed:	add    BYTE PTR [rax],al
   140008eef:	add    BYTE PTR [rax],dh
   140008ef1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140008ef5:	add    BYTE PTR [rax],al
   140008ef7:	add    BYTE PTR [rax+0x4f],al
   140008efa:	add    BYTE PTR [rax+0x1],al
   140008efd:	add    BYTE PTR [rax],al
   140008eff:	add    al,al
   140008f01:	rex.WXB add BYTE PTR [r8+0x1],al
   140008f05:	add    BYTE PTR [rax],al
   140008f07:	add    BYTE PTR [rax],dl
   140008f09:	push   rax
   140008f0a:	add    BYTE PTR [rax+0x1],al
   140008f0d:	add    BYTE PTR [rax],al
   140008f0f:	add    BYTE PTR [rax+0x140004b],ah
   140008f15:	add    BYTE PTR [rax],al
   140008f17:	add    BYTE PTR [rax+0x1400050],dh
   140008f1d:	add    BYTE PTR [rax],al
   140008f1f:	add    al,dh
   140008f21:	push   rsi
   140008f22:	add    BYTE PTR [rax+0x1],al
   140008f25:	add    BYTE PTR [rax],al
   140008f27:	add    al,dl
   140008f29:	rex.WX add BYTE PTR [rax+0x1],al
   140008f2d:	add    BYTE PTR [rax],al
   140008f2f:	add    BYTE PTR [rax],dl
   140008f31:	push   rax
   140008f32:	add    BYTE PTR [rax+0x1],al
   140008f35:	add    BYTE PTR [rax],al
   140008f37:	add    BYTE PTR [rax+0x140004b],ah
   140008f3d:	add    BYTE PTR [rax],al
   140008f3f:	add    BYTE PTR [rax+0x1400050],dh
   140008f45:	add    BYTE PTR [rax],al
   140008f47:	add    al,dh
   140008f49:	rex.WR add BYTE PTR [rax+0x1],r8b
   140008f4d:	add    BYTE PTR [rax],al
   140008f4f:	add    al,dl
   140008f51:	rex.WX add BYTE PTR [rax+0x1],al
	...
   140008f5d:	add    BYTE PTR [rax],al
   140008f5f:	add    BYTE PTR [rdx+rsi*2+0x69],ah
   140008f63:	jbe    0x140008fca
   140008f65:	jb     0x140008fda
   140008f67:	pop    rsp
   140008f68:	ins    DWORD PTR es:[rdi],dx
   140008f69:	outs   dx,DWORD PTR ds:[rsi]
   140008f6a:	(bad)  
   140008f6b:	imul   ebp,DWORD PTR [rbp+riz*2+0x70],0x6f6c5c63
   140008f73:	movsxd esp,DWORD PTR [rcx+0x74]
   140008f76:	imul   ebp,DWORD PTR [rdi+0x6e],0x766e6f63
   140008f7d:	gs jb  0x140008fe7
   140008f80:	outs   dx,BYTE PTR gs:[rsi]
   140008f82:	movsxd esp,DWORD PTR [rbp+0x5c]
   140008f85:	ja     0x140008ff0
   140008f87:	outs   dx,BYTE PTR ds:[rsi]
   140008f88:	(bad)  
   140008f89:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008f8d:	outs   dx,BYTE PTR ds:[rsi]
   140008f8e:	imul   esp,DWORD PTR fs:[rcx+0x6c],0x6c5c676f
   140008f96:	imul   esp,DWORD PTR [rdx+0x5c],0x75706f70
   140008f9d:	jo     0x140009016
   140008f9f:	imul   ebp,DWORD PTR [rsi+0x64],0x632e776f
   140008fa6:	jo     0x140009018
	...
   140008fb0:	push   rax
   140008fb1:	add    BYTE PTR [rax+rax*1+0x61],ch
   140008fb5:	add    BYTE PTR [rax+rax*1+0x66],dh
   140008fb9:	add    BYTE PTR [rdi+0x0],ch
   140008fbc:	jb     0x140008fbe
   140008fbe:	ins    DWORD PTR es:[rdi],dx
   140008fbf:	add    BYTE PTR [rdx+0x0],dl
   140008fc2:	outs   dx,DWORD PTR ds:[rsi]
   140008fc3:	add    BYTE PTR [rdi+0x0],ch
   140008fc6:	je     0x140008fc8
	...
   140008fd8:	rol    BYTE PTR [rax],0x0
   140008fdb:	add    BYTE PTR [rax],al
   140008fdd:	add    BYTE PTR [rax],al
   140008fdf:	rex.RX or esi,r9d
   140008fe2:	push   rdx
   140008fe3:	mov    BYTE PTR [rdi+riz*4],r8b
   140008fe7:	rex.WR test al,0x96
   140008fea:	(bad)  
   140008feb:	icebp  
   140008fec:	rex xchg eax,eax
   140008fee:	jne    0x140009039
   140008ff0:	(bad)  
   140008ff1:	(bad)  
   140008ff2:	add    BYTE PTR [rdx+0x25],ch
   140008ff5:	fucomip st,st(3)
   140008ff7:	rex.RX mov r10b,BYTE PTR [rsi-0x637720c8]
   140008ffe:	mov    ch,0xb1
   140009000:	fs jb  0x14000906c
   140009003:	jbe    0x14000906a
   140009005:	jb     0x14000907a
   140009007:	pop    rsp
   140009008:	ins    DWORD PTR es:[rdi],dx
   140009009:	outs   dx,DWORD PTR ds:[rsi]
   14000900a:	(bad)  
   14000900b:	imul   ebp,DWORD PTR [rbp+riz*2+0x70],0x6f6c5c63
   140009013:	movsxd esp,DWORD PTR [rcx+0x74]
   140009016:	imul   ebp,DWORD PTR [rdi+0x6e],0x766e6f63
   14000901d:	gs jb  0x140009087
   140009020:	outs   dx,BYTE PTR gs:[rsi]
   140009022:	movsxd esp,DWORD PTR [rbp+0x5c]
   140009025:	ja     0x140009090
   140009027:	outs   dx,BYTE PTR ds:[rsi]
   140009028:	(bad)  
   140009029:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000902d:	outs   dx,BYTE PTR ds:[rsi]
   14000902e:	imul   esp,DWORD PTR fs:[rcx+0x6c],0x6c5c676f
   140009036:	imul   esp,DWORD PTR [rdx+0x5c],0x75706f70
   14000903d:	jo     0x1400090a2
   14000903f:	outs   dx,DWORD PTR ds:[rsi]
   140009040:	ins    DWORD PTR es:[rdi],dx
   140009041:	ins    DWORD PTR es:[rdi],dx
   140009042:	(bad)  
   140009043:	outs   dx,BYTE PTR ds:[rsi]
   140009044:	fs movsxd esi,DWORD PTR cs:[rax+0x70]
   140009049:	add    BYTE PTR [rax],al
   14000904b:	add    BYTE PTR [rax],al
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rdx],dl
   140009051:	sbb    ah,BYTE PTR [rbx-0x4333cdb3]
   140009057:	rex.WB mov r10b,0xcc
   14000905a:	(bad)  
   14000905b:	or     eax,0xfcbaf2bc
   140009060:	or     al,0x7d
   140009062:	in     al,dx
   140009063:	or     eax,0x4759bd63
   140009068:	stos   BYTE PTR es:[rdi],al
   140009069:	lods   eax,DWORD PTR fs:[rsi]
   14000906b:	out    dx,eax
   14000906c:	xlat   BYTE PTR ds:[rbx]
   14000906d:	or     eax,0x5229acf
   140009072:	xchg   ebx,eax
   140009073:	sbb    DWORD PTR [rdx],eax
   140009075:	add    BYTE PTR [rax],al
   140009077:	add    BYTE PTR [rsp+rbx*4+0x10000],ah
   14000907e:	add    BYTE PTR [rax],al
   140009080:	push   rsp
   140009081:	popf   
   140009082:	add    BYTE PTR [rax],al
   140009084:	add    eax,0x80000000
   140009089:	popf   
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	and    BYTE PTR [rax],al
   14000908e:	add    BYTE PTR [rax],al
   140009090:	add    BYTE PTR [rax],al
   140009092:	add    BYTE PTR [rax],al
   140009094:	add    DWORD PTR [rax],eax
   140009096:	add    BYTE PTR [rax],al
   140009098:	and    al,BYTE PTR [rip+0x21993]        # 0x14002aa31
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400090a1:	pushf  
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	add    DWORD PTR [rax],eax
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	mov    ah,0x9c
   1400090aa:	add    BYTE PTR [rax],al
   1400090ac:	add    eax,0xe0000000
   1400090b1:	pushf  
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	and    BYTE PTR [rax],al
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	add    BYTE PTR [rax],al
   1400090ba:	add    BYTE PTR [rax],al
   1400090bc:	add    DWORD PTR [rax],eax
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	and    al,BYTE PTR [rip+0x41993]        # 0x14004aa59
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	fcomp  QWORD PTR [rdx+0x20000]
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	in     al,0x9b
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	or     BYTE PTR [rax],al
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	rex pushf 
   1400090da:	add    BYTE PTR [rax],al
   1400090dc:	and    BYTE PTR [rax],al
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	add    BYTE PTR [rax],al
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	add    DWORD PTR [rax],eax
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	and    al,BYTE PTR [rip+0x41993]        # 0x14004aa81
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	fcomp  QWORD PTR [rdx+0x20000]
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	cld    
   1400090f9:	(bad)  
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	or     BYTE PTR [rax],al
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	push   rax
   140009101:	fwait
   140009102:	add    BYTE PTR [rax],al
   140009104:	and    BYTE PTR [rax],al
   140009106:	add    BYTE PTR [rax],al
   140009108:	add    BYTE PTR [rax],al
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	add    DWORD PTR [rax],eax
   14000910e:	add    BYTE PTR [rax],al
   140009110:	and    al,BYTE PTR [rip+0x141993]        # 0x14014aaa9
   140009116:	add    BYTE PTR [rax],al
   140009118:	fs cdq 
	...
   140009122:	add    BYTE PTR [rax],al
   140009124:	adc    al,0x0
   140009126:	add    BYTE PTR [rax],al
   140009128:	adc    BYTE PTR [rdx+0x800000],bl
   14000912e:	add    BYTE PTR [rax],al
   140009130:	add    BYTE PTR [rax],al
   140009132:	add    BYTE PTR [rax],al
   140009134:	add    DWORD PTR [rax],eax
   140009136:	add    BYTE PTR [rax],al
   140009138:	and    al,BYTE PTR [rip+0xf1993]        # 0x1400faad1
   14000913e:	add    BYTE PTR [rax],al
   140009140:	loopne 0x1400090d9
	...
   14000914a:	add    BYTE PTR [rax],al
   14000914c:	sbb    eax,DWORD PTR [rax]
   14000914e:	add    BYTE PTR [rax],al
   140009150:	(bad)  
   140009151:	cwde   
   140009152:	add    BYTE PTR [rax],al
   140009154:	rol    BYTE PTR [rax],0x0
	...
   14000915f:	add    BYTE PTR [rdx],ah
   140009161:	add    eax,0x11993
   140009166:	add    BYTE PTR [rax],al
   140009168:	cwde   
   140009169:	xchg   edi,eax
	...
   140009172:	add    BYTE PTR [rax],al
   140009174:	add    eax,DWORD PTR [rax]
   140009176:	add    BYTE PTR [rax],al
   140009178:	movabs al,ds:0x30000097
   140009181:	add    BYTE PTR [rax],al
   140009183:	add    BYTE PTR [rcx],al
   140009185:	add    BYTE PTR [rax],al
   140009187:	add    BYTE PTR [rdx],ah
   140009189:	add    eax,0x41993
   14000918e:	add    BYTE PTR [rax],al
   140009190:	and    al,0x97
	...
   14000919a:	add    BYTE PTR [rax],al
   14000919c:	(bad)  
   14000919d:	add    BYTE PTR [rax],al
   14000919f:	add    BYTE PTR [rax-0x69],cl
   1400091a2:	add    BYTE PTR [rax],al
   1400091a4:	and    BYTE PTR [rax],al
   1400091a6:	add    BYTE PTR [rax],al
   1400091a8:	add    BYTE PTR [rax],al
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    DWORD PTR [rax],eax
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ab49
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	in     al,dx
   1400091b9:	xchg   esi,eax
	...
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	add    eax,DWORD PTR [rax]
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	clc    
   1400091c9:	xchg   esi,eax
   1400091ca:	add    BYTE PTR [rax],al
   1400091cc:	and    BYTE PTR [rax],al
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	add    BYTE PTR [rax],al
   1400091d2:	add    BYTE PTR [rax],al
   1400091d4:	add    DWORD PTR [rax],eax
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ab71
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	nop
   1400091e1:	sahf   
	...
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	add    eax,DWORD PTR [rax]
   1400091ee:	add    BYTE PTR [rax],al
   1400091f0:	cwde   
   1400091f1:	sahf   
   1400091f2:	add    BYTE PTR [rax],al
   1400091f4:	and    BYTE PTR [rax],al
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	add    BYTE PTR [rax],al
   1400091fa:	add    BYTE PTR [rax],al
   1400091fc:	add    DWORD PTR [rax],eax
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	add    BYTE PTR [rax],al
   140009202:	add    BYTE PTR [rax],al
   140009204:	and    bh,BYTE PTR [rdx]
   140009206:	lahf   
   140009207:	push   rbp
   140009208:	add    BYTE PTR [rax],al
   14000920a:	add    BYTE PTR [rax],al
   14000920c:	add    al,BYTE PTR [rax]
   14000920e:	add    BYTE PTR [rax],al
   140009210:	xor    BYTE PTR [rax],al
   140009212:	add    BYTE PTR [rax],al
   140009214:	add    BYTE PTR [rbx+0x6b000000],dl
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	add    BYTE PTR [rax],al
   14000921e:	add    BYTE PTR [rax],al
   140009220:	and    bh,BYTE PTR [rdx]
   140009222:	lahf   
   140009223:	push   rbp
   140009224:	add    BYTE PTR [rax],al
   140009226:	add    BYTE PTR [rax],al
   140009228:	or     eax,0x50000000
   14000922d:	add    al,BYTE PTR [rax]
   14000922f:	add    BYTE PTR [rbx+rdx*4+0x0],al
   140009233:	add    BYTE PTR [rbx+rbp*2+0x0],al
	...
   14000925f:	add    BYTE PTR [rax+0x0],ah
	...
   1400092b5:	add    BYTE PTR [rax],al
   1400092b7:	add    BYTE PTR [rax],cl
   1400092b9:	rol    BYTE PTR [rax],0x40
   1400092bc:	add    DWORD PTR [rax],eax
	...
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	mov    al,0x83
   1400092d2:	add    BYTE PTR [rax+0x1],al
   1400092d5:	add    BYTE PTR [rax],al
   1400092d7:	add    BYTE PTR [rax+0x1400083],bh
   1400092dd:	add    BYTE PTR [rax],al
   1400092df:	add    BYTE PTR [rax],ah
   1400092e1:	test   BYTE PTR [rax],al
   1400092e3:	rex add DWORD PTR [rax],eax
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	cmp    al,0x0
   1400092ea:	add    BYTE PTR [rax],al
   1400092ec:	add    BYTE PTR [rax],al
   1400092ee:	add    BYTE PTR [rax],al
   1400092f0:	add    BYTE PTR [rip+0x0],dh        # 0x1400092f6
	...
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	push   rdx
   140009301:	push   rbx
   140009302:	rex.R push rbx
   140009304:	cmp    al,0xf4
   140009306:	js     0x1400092a5
   140009308:	xchg   esi,eax
   140009309:	movsxd edi,DWORD PTR [rbp+0x42b48043]
   14000930f:	xchg   eax,esi
   140009311:	test   eax,0x11f15
   140009316:	add    BYTE PTR [rax],al
   140009318:	push   rdi
   140009319:	imul   ebp,DWORD PTR [rsi+0x64],0x4173776f
   140009320:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140009324:	outs   dx,BYTE PTR ds:[rsi]
   140009325:	imul   r12d,DWORD PTR [rcx+0x6c],0x702e676f
   14000932d:	fs (bad) 
	...
   140009343:	add    BYTE PTR [rdi+0x43],al
   140009346:	push   rsp
   140009347:	rex.WR add BYTE PTR [rax],r10b
   14000934a:	add    BYTE PTR [rax],al
   14000934c:	mov    WORD PTR [rax],es
   14000934e:	add    BYTE PTR [rax],al
   140009350:	cs je  0x1400093b8
   140009353:	js     0x1400093c9
   140009355:	and    al,0x64
   140009357:	imul   eax,DWORD PTR [rax],0x90000000
   14000935d:	adc    BYTE PTR [rax],al
   14000935f:	add    BYTE PTR [rax],bh
   140009361:	rex.WRB add BYTE PTR [r8],r8b
   140009364:	cs je  0x1400093cc
   140009367:	js     0x1400093dd
   140009369:	and    al,0x6d
   14000936b:	outs   dx,BYTE PTR ds:[rsi]
   14000936c:	add    BYTE PTR [rax],al
   14000936e:	add    BYTE PTR [rax],al
   140009370:	rcr    BYTE PTR [rbp+0x0],1
   140009373:	add    BYTE PTR [rbp+0x0],bh
   140009376:	add    BYTE PTR [rax],al
   140009378:	cs je  0x1400093e0
   14000937b:	js     0x1400093f1
   14000937d:	and    al,0x6d
   14000937f:	outs   dx,BYTE PTR ds:[rsi]
   140009380:	and    al,0x30
   140009382:	xor    BYTE PTR [rax],al
   140009384:	push   rax
   140009385:	pop    rsi
   140009386:	add    BYTE PTR [rax],al
   140009388:	(bad)  
   140009389:	add    eax,DWORD PTR [rax]
   14000938b:	add    BYTE PTR [rsi],ch
   14000938d:	je     0x1400093f4
   14000938f:	js     0x140009405
   140009391:	and    al,0x78
   140009393:	add    BYTE PTR [rax],ch
   140009395:	(bad)  
   140009396:	add    BYTE PTR [rax],al
   140009398:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009399:	add    BYTE PTR [rax],al
   14000939b:	add    BYTE PTR [rsi],ch
   14000939d:	je     0x140009404
   14000939f:	js     0x140009415
   1400093a1:	and    al,0x79
   1400093a3:	add    BYTE PTR fs:[rax],al
   1400093a6:	add    BYTE PTR [rax],al
   1400093a8:	add    BYTE PTR [rax+0x0],dh
   1400093ab:	add    BYTE PTR [rax+rax*1],al
   1400093ae:	add    BYTE PTR [rax],al
   1400093b0:	imul   ebp,DWORD PTR cs:[rbp+0x72],0x766973
   1400093b8:	add    BYTE PTR [rax+0x3b00000],al
   1400093be:	add    BYTE PTR [rax],al
   1400093c0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   1400093c9:	add    BYTE PTR [rax],al
   1400093cb:	add    BYTE PTR [rax+0x10000083],dh
   1400093d1:	add    BYTE PTR [rax],al
   1400093d3:	add    BYTE PTR [rsi],ch
   1400093d5:	xor    BYTE PTR [rax],dh
   1400093d7:	movsxd esp,DWORD PTR [rsi+0x67]
   1400093da:	add    BYTE PTR [rax],al
   1400093dc:	rol    BYTE PTR [rbx+0x80000],0x0
   1400093e3:	add    BYTE PTR [rsi],ch
   1400093e5:	rex.XB push r10
   1400093e7:	push   rsp
   1400093e8:	and    al,0x58
   1400093ea:	rex.XB
   1400093eb:	add    BYTE PTR [r8],al
   1400093ee:	add    BYTE PTR [rax],al
   1400093f0:	enter  0x83,0x0
   1400093f4:	or     BYTE PTR [rax],al
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	cs rex.XB push r10
   1400093fb:	push   rsp
   1400093fc:	and    al,0x58
   1400093fe:	rex.XB
   1400093ff:	rex.B
   140009400:	add    BYTE PTR [r8],al
   140009403:	add    al,dl
   140009405:	add    DWORD PTR [rax],0x0
   140009408:	sub    BYTE PTR [rax],al
   14000940a:	add    BYTE PTR [rax],al
   14000940c:	cs rex.XB push r10
   14000940f:	push   rsp
   140009410:	and    al,0x58
   140009412:	rex.XB push r13
   140009414:	add    BYTE PTR [rax],al
   140009416:	add    BYTE PTR [rax],al
   140009418:	clc    
   140009419:	add    DWORD PTR [rax],0x0
   14000941c:	or     BYTE PTR [rax],al
   14000941e:	add    BYTE PTR [rax],al
   140009420:	cs rex.XB push r10
   140009423:	push   rsp
   140009424:	and    al,0x58
   140009426:	rex.XB pop r10
   140009428:	add    BYTE PTR [rax],al
   14000942a:	add    BYTE PTR [rax],al
   14000942c:	add    BYTE PTR [rax+rax*1+0x800],al
   140009433:	add    BYTE PTR [rsi],ch
   140009435:	rex.XB push r10
   140009437:	push   rsp
   140009438:	and    al,0x58
   14000943a:	rex.WB
   14000943b:	add    BYTE PTR [r8],al
   14000943e:	add    BYTE PTR [rax],al
   140009440:	or     BYTE PTR [rax+rax*1+0x800],al
   140009447:	add    BYTE PTR [rsi],ch
   140009449:	rex.XB push r10
   14000944b:	push   rsp
   14000944c:	and    al,0x58
   14000944e:	rex.WB
   14000944f:	rex.B
   140009450:	add    BYTE PTR [r8],al
   140009453:	add    BYTE PTR [rax],dl
   140009455:	test   BYTE PTR [rax],al
   140009457:	add    BYTE PTR [rax],cl
   140009459:	add    BYTE PTR [rax],al
   14000945b:	add    BYTE PTR [rsi],ch
   14000945d:	rex.XB push r10
   14000945f:	push   rsp
   140009460:	and    al,0x58
   140009462:	rex.WB pop r9
   140009464:	add    BYTE PTR [rax],al
   140009466:	add    BYTE PTR [rax],al
   140009468:	sbb    BYTE PTR [rax+rax*1+0x800],al
   14000946f:	add    BYTE PTR [rsi],ch
   140009471:	rex.XB push r10
   140009473:	push   rsp
   140009474:	and    al,0x58
   140009476:	rex.WB pop r10
   140009478:	add    BYTE PTR [rax],al
   14000947a:	add    BYTE PTR [rax],al
   14000947c:	and    BYTE PTR [rax+rax*1+0xf000],al
   140009483:	add    BYTE PTR [rsi],ch
   140009485:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14000948d:	add    BYTE PTR [rax],al
   14000948f:	add    BYTE PTR [rax],dl
   140009491:	test   DWORD PTR [rax],eax
   140009493:	add    al,dh
   140009495:	or     eax,0x722e0000
   14000949a:	fs (bad) 
   14000949c:	je     0x1400094ff
   14000949e:	add    BYTE PTR [rax],al
   1400094a0:	add    BYTE PTR [rbx+0x2940000],dl
   1400094a6:	add    BYTE PTR [rax],al
   1400094a8:	cs jb  0x14000950f
   1400094ab:	(bad)  
   1400094ac:	je     0x14000950f
   1400094ae:	and    al,0x7a
   1400094b0:	jp     0x14000952c
   1400094b2:	fs (bad) 
   1400094b4:	add    BYTE PTR [eax],al
   1400094b7:	add    BYTE PTR [rax+0x58000095],ah
   1400094bd:	or     al,BYTE PTR [rax]
   1400094bf:	add    BYTE PTR [rsi],ch
   1400094c1:	js     0x140009527
   1400094c3:	(bad)  
   1400094c4:	je     0x140009527
   1400094c6:	add    BYTE PTR [rax],al
   1400094c8:	clc    
   1400094c9:	lahf   
   1400094ca:	add    BYTE PTR [rax],al
   1400094cc:	lods   al,BYTE PTR ds:[rsi]
   1400094cd:	add    BYTE PTR [rax],al
   1400094cf:	add    BYTE PTR [rsi],ch
   1400094d1:	js     0x140009537
   1400094d3:	(bad)  
   1400094d4:	je     0x140009537
   1400094d6:	and    al,0x78
   1400094d8:	add    BYTE PTR [rax],al
   1400094da:	add    BYTE PTR [rax],al
   1400094dc:	test   al,0xa0
   1400094de:	add    BYTE PTR [rax],al
   1400094e0:	rex add DWORD PTR [rax],eax
   1400094e3:	add    BYTE PTR [rsi],ch
   1400094e5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   1400094ed:	add    BYTE PTR [rax],al
   1400094ef:	add    al,ch
   1400094f1:	movabs eax,ds:0x692e000000140000
   1400094fa:	fs (bad) 
   1400094fc:	je     0x14000955f
   1400094fe:	and    al,0x33
   140009500:	add    BYTE PTR [rax],al
   140009502:	add    BYTE PTR [rax],al
   140009504:	add    BYTE PTR [rdx+0x3b00000],ah
   14000950a:	add    BYTE PTR [rax],al
   14000950c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140009515:	add    BYTE PTR [rax],al
   140009517:	add    BYTE PTR [rax-0x65ffff5b],dh
   14000951d:	or     al,BYTE PTR [rax]
   14000951f:	add    BYTE PTR [rsi],ch
   140009521:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140009529:	add    BYTE PTR [rax],al
   14000952b:	add    BYTE PTR [rax],al
   14000952d:	rol    BYTE PTR [rax],0x0
   140009530:	push   rax
   140009531:	add    BYTE PTR [rax],al
   140009533:	add    BYTE PTR [rsi],ch
   140009535:	fs (bad) 
   140009537:	je     0x14000959a
   140009539:	add    BYTE PTR [rax],al
   14000953b:	add    BYTE PTR [rax-0x40],dl
   14000953e:	add    BYTE PTR [rax],al
   140009540:	push   0x2e000001
   140009545:	fs (bad) 
   140009547:	je     0x1400095aa
   140009549:	and    al,0x72
   14000954b:	add    al,al
   14000954d:	rol    DWORD PTR [rax],0x0
   140009550:	js     0x140009559
   140009552:	add    BYTE PTR [rax],al
   140009554:	cs (bad) 
   140009557:	jae    0x140009559
   140009559:	add    BYTE PTR [rax],al
   14000955b:	add    BYTE PTR [rax],al
   14000955d:	rol    BYTE PTR [rax],1
   14000955f:	add    BYTE PTR [rax+0x5],dh
   140009562:	add    BYTE PTR [rax],al
   140009564:	cs jo  0x1400095cb
   140009567:	(bad)  
   140009568:	je     0x1400095cb
   14000956a:	add    BYTE PTR [rax],al
   14000956c:	add    al,ah
   14000956e:	add    BYTE PTR [rax],al
   140009570:	add    BYTE PTR [rcx],al
   140009572:	add    BYTE PTR [rax],al
   140009574:	cs jb  0x1400095ea
   140009577:	jb     0x1400095dc
   140009579:	and    al,0x30
   14000957b:	xor    DWORD PTR [rax],eax
   14000957d:	add    BYTE PTR [rax],al
   14000957f:	add    BYTE PTR [rax],al
   140009581:	loope  0x140009583
   140009583:	add    al,dl
   140009585:	add    eax,0x722e0000
   14000958a:	jae    0x1400095fe
   14000958c:	movsxd esp,DWORD PTR [rax+rsi*1]
   14000958f:	xor    al,BYTE PTR [rax]
	...
   14000959d:	add    BYTE PTR [rax],al
   14000959f:	add    BYTE PTR [rcx],al
   1400095a1:	adc    DWORD PTR [rax+rax*1],eax
   1400095a4:	adc    DWORD PTR [rdx],esi
   1400095a6:	or     eax,0xb600c70
   1400095ab:	xor    BYTE PTR [rcx],bl
   1400095ad:	and    eax,0x34130009
   1400095b2:	push   rbx
   1400095b3:	add    BYTE PTR [rbx],dl
   1400095b5:	add    DWORD PTR [rdx+0x0],ecx
   1400095b8:	or     al,0xf0
   1400095ba:	or     ah,al
   1400095bc:	or     BYTE PTR [rax+0x7],dh
   1400095bf:	(bad)  
   1400095c0:	(bad)  
   1400095c1:	push   rax
   1400095c2:	add    BYTE PTR [rax],al
   1400095c4:	mov    BYTE PTR [rax+rax*1+0x0],bl
   1400095c8:	add    al,BYTE PTR [rax]
   1400095cb:	add    BYTE PTR [rcx],bl
   1400095cd:	(bad)  
   1400095ce:	add    eax,0x2c340d00
   1400095d3:	add    BYTE PTR [rip+0x6002a01],cl        # 0x14600bfda
   1400095d9:	(bad)  
   1400095da:	add    BYTE PTR [rax],al
   1400095dc:	mov    BYTE PTR [rax+rax*1+0x0],bl
   1400095e0:	rex add DWORD PTR [rax],eax
   1400095e3:	add    BYTE PTR [rcx],al
   1400095e5:	(bad)  
   1400095e6:	add    al,BYTE PTR [rax]
   1400095e8:	(bad)  
   1400095e9:	xor    al,BYTE PTR [rdx]
   1400095eb:	xor    BYTE PTR [rcx],al
   1400095ed:	clts   
   1400095ef:	add    BYTE PTR [rdi],cl
   1400095f1:	fs (bad) 
   1400095f3:	add    BYTE PTR [rdi],cl
   1400095f5:	xor    al,0x6
   1400095f7:	add    BYTE PTR [rdi],cl
   1400095f9:	xor    cl,BYTE PTR [rbx]
   1400095fb:	jo     0x1400095fe
   1400095fd:	add    al,0x1
   1400095ff:	add    BYTE PTR [rdx+rax*2],al
   140009602:	add    BYTE PTR [rax],al
   140009604:	add    DWORD PTR [rdx],ecx
   140009606:	add    al,0x0
   140009608:	or     dh,BYTE PTR [rsi+rax*1]
   14000960b:	add    BYTE PTR [rdx],cl
   14000960d:	xor    al,BYTE PTR [rsi]
   14000960f:	jo     0x140009612
   140009611:	adc    al,0x8
   140009613:	add    BYTE PTR [rsp+riz*2],dl
   140009616:	or     BYTE PTR [rax],al
   140009618:	adc    al,0x54
   14000961a:	(bad)  
   14000961b:	add    BYTE PTR [rsp+rsi*1],dl
   14000961e:	(bad)  
   14000961f:	add    BYTE PTR [rdx+rsi*1],dl
   140009622:	adc    BYTE PTR [rax+0x1],dh
   140009625:	sbb    al,0xc
   140009627:	add    BYTE PTR [rsp+riz*2],bl
   14000962a:	or     eax,0xc541c00
   14000962f:	add    BYTE PTR [rsp+rsi*1],bl
   140009632:	or     eax,DWORD PTR [rax]
   140009634:	sbb    al,0x32
   140009636:	sbb    al,dh
   140009638:	(bad)  
   140009639:	loopne 0x14000964f
   14000963b:	rcl    BYTE PTR [rdx],1
   14000963d:	rcl    BYTE PTR [rax],0x70
   140009640:	add    DWORD PTR [rip+0x341d000a],ebx        # 0x1741d9650
   140009646:	adc    al,BYTE PTR [rax]
   140009648:	sbb    eax,0x17f01972
   14000964d:	loopne 0x140009664
   14000964f:	rcl    BYTE PTR [rbx],1
   140009651:	rcl    BYTE PTR [rcx],0x70
   140009654:	adc    BYTE PTR [rax+0xf],ah
   140009657:	push   rax
   140009658:	sbb    DWORD PTR [rdx],esp
   14000965a:	add    al,0x0
   14000965c:	adc    BYTE PTR [rcx],al
   14000965e:	mov    ecx,0x2700302
   140009663:	xor    BYTE PTR [rax-0x4fffffa4],cl
   140009669:	adc    eax,0x4010000
   14000966e:	add    DWORD PTR [rax],eax
   140009670:	add    al,0xa2
   140009672:	add    BYTE PTR [rax],al
   140009674:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41d9686
   14000967a:	adc    DWORD PTR [rax],eax
   14000967c:	sbb    eax,0x1d001064
   140009681:	push   rsp
   140009682:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d00a4bd
   140009689:	xchg   edx,eax
   14000968a:	sbb    eax,esi
   14000968c:	(bad)  
   14000968d:	loopne 0x1400096a4
   14000968f:	rol    BYTE PTR [rcx],0x4
   140009692:	add    DWORD PTR [rax],eax
   140009694:	add    al,0x82
   140009696:	add    BYTE PTR [rax],al
   140009698:	or     DWORD PTR [rcx+rax*1],eax
   14000969b:	add    BYTE PTR [rdx+riz*2],al
   14000969e:	add    BYTE PTR [rax],al
   1400096a0:	(bad)  
   1400096a1:	pop    rsp
   1400096a2:	add    BYTE PTR [rax],al
   1400096a4:	add    DWORD PTR [rax],eax
   1400096a6:	add    BYTE PTR [rax],al
   1400096a8:	xor    al,0x22
   1400096aa:	add    BYTE PTR [rax],al
   1400096ac:	rex.X and al,BYTE PTR [rax]
   1400096af:	add    BYTE PTR [rsi+0x5e],dl
   1400096b2:	add    BYTE PTR [rax],al
   1400096b4:	rex.X and al,BYTE PTR [rax]
   1400096b7:	add    BYTE PTR [rcx],al
   1400096b9:	(bad)  
   1400096ba:	add    al,BYTE PTR [rax]
   1400096bc:	(bad)  
   1400096bd:	xor    al,BYTE PTR [rdx]
   1400096bf:	push   rax
   1400096c0:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b41596ce
   1400096c6:	or     al,BYTE PTR [rax]
   1400096c8:	adc    eax,0x15000964
   1400096cd:	xor    al,0x8
   1400096cf:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e0a827
   1400096d5:	(bad)  
   1400096d6:	add    al,BYTE PTR [rax]
   1400096d8:	(bad)  
   1400096d9:	push   rdx
   1400096da:	add    dh,BYTE PTR [rax]
   1400096dc:	adc    DWORD PTR [rbx],edx
   1400096de:	add    al,BYTE PTR [rax]
   1400096e0:	or     dl,BYTE PTR [rdx+0x6]
   1400096e3:	xor    BYTE PTR [rsi+0x5c],bl
   1400096e6:	add    BYTE PTR [rax],al
   1400096e8:	mov    al,0x91
   1400096ea:	add    BYTE PTR [rax],al
   1400096ec:	(bad)  
   1400096ed:	(bad)  
   1400096ee:	(bad)  
   1400096ef:	(bad)  
   1400096f0:	jl     0x140009750
   1400096f2:	add    BYTE PTR [rax],al
   1400096f4:	add    BYTE PTR [rax],al
   1400096f6:	add    BYTE PTR [rax],al
   1400096f8:	mov    eax,0xff000024
   1400096fd:	(bad)  
   1400096fe:	(bad)  
   1400096ff:	(bad)  
   140009700:	fsub   DWORD PTR [rax+rax*1]
   140009703:	add    BYTE PTR [rax],al
   140009705:	add    BYTE PTR [rax],al
   140009707:	add    BYTE PTR [rip+0xffffffffff000025],cl        # 0x13f009732
   14000970d:	(bad)  
   14000970e:	(bad)  
   14000970f:	call   QWORD PTR [rcx]
   140009711:	sbb    BYTE PTR [rax+rax*1],al
   140009714:	sbb    BYTE PTR [rdx+rcx*1],dh
   140009717:	add    BYTE PTR [rdx],cl
   140009719:	push   rdx
   14000971a:	(bad)  
   14000971b:	jo     0x14000977b
   14000971d:	pop    rsp
   14000971e:	add    BYTE PTR [rax],al
   140009720:	mov    BYTE PTR [rcx-0x10000],dl
   140009726:	(bad)  
   140009727:	call   QWORD PTR [rdx+0x5e]
   14000972d:	add    BYTE PTR [rax],al
   14000972f:	add    BYTE PTR [rsi+0x100005e],bl
   140009735:	add    BYTE PTR [rax],al
   140009737:	add    BYTE PTR [rsi-0xffffa2],ch
   14000973d:	(bad)  
   14000973e:	(bad)  
   14000973f:	(bad)  
   140009740:	mov    esi,0x5e
   140009745:	add    BYTE PTR [rax],al
   140009747:	add    al,bl
   140009749:	and    eax,0xffff0000
   14000974e:	(bad)  
   14000974f:	push   rbx
   140009751:	and    eax,0x20000
   140009756:	add    BYTE PTR [rax],al
   140009758:	(bad)  
   140009759:	add    BYTE PTR es:[rax],al
   14000975c:	add    DWORD PTR [rax],eax
   14000975e:	add    BYTE PTR [rax],al
   140009760:	sbb    DWORD PTR [rsi],esp
   140009762:	add    BYTE PTR [rax],al
   140009764:	add    BYTE PTR [rax],al
   140009766:	add    BYTE PTR [rax],al
   140009768:	push   rbx
   140009769:	add    BYTE PTR es:[rax],al
   14000976c:	(bad)  
   14000976d:	(bad)  
   14000976e:	(bad)  
   14000976f:	call   FWORD PTR [rax+0x26]
   140009772:	add    BYTE PTR [rax],al
   140009774:	add    eax,DWORD PTR [rax]
   140009776:	add    BYTE PTR [rax],al
   140009778:	jae    0x1400097a0
   14000977a:	add    BYTE PTR [rax],al
   14000977c:	(bad)  
   14000977d:	(bad)  
   14000977e:	(bad)  
   14000977f:	call   QWORD PTR [rcx]
   140009781:	sbb    DWORD PTR [rsi],eax
   140009783:	add    BYTE PTR [rcx],bl
   140009785:	fs or  eax,0xc341400
   14000978b:	add    BYTE PTR [rsi],al
   14000978d:	xchg   edx,eax
   14000978e:	add    dh,BYTE PTR [rax+0x5e]
   140009791:	pop    rsp
   140009792:	add    BYTE PTR [rax],al
   140009794:	(bad)  
   140009795:	xchg   ecx,eax
   140009796:	add    BYTE PTR [rax],al
   140009798:	(bad)  
   140009799:	(bad)  
   14000979a:	(bad)  
   14000979b:	call   rax
   14000979d:	pop    rsi
   14000979e:	add    BYTE PTR [rax],al
   1400097a0:	nop
   1400097a1:	add    BYTE PTR es:[rax],al
   1400097a4:	(bad)  
   1400097a5:	(bad)  
   1400097a6:	(bad)  
   1400097a7:	inc    DWORD PTR [rbx]
   1400097a9:	(bad)  
   1400097aa:	add    BYTE PTR [rax],al
   1400097ac:	add    BYTE PTR [rax],al
   1400097ae:	add    BYTE PTR [rax],al
   1400097b0:	push   rdx
   1400097b1:	(bad)  
   1400097b2:	add    BYTE PTR [rax],al
   1400097b4:	(bad)  
   1400097b5:	(bad)  
   1400097b6:	(bad)  
   1400097b7:	call   FWORD PTR [rcx]
   1400097b9:	or     eax,DWORD PTR ss:[rax]
   1400097bc:	sub    BYTE PTR [rbp+rsi*1+0x0],dh
   1400097c0:	and    al,0x64
   1400097c2:	xor    al,0x0
   1400097c4:	and    BYTE PTR [rbx+rsi*1],dh
   1400097c7:	add    BYTE PTR [rcx+rax*1],dl
   1400097ca:	add    BYTE PTR cs:[rax],cl
   1400097cd:	lock (bad) 
   1400097cf:	loopne 0x1400097d5
   1400097d1:	push   rax
   1400097d2:	add    BYTE PTR [rax],al
   1400097d4:	sbb    BYTE PTR [rbp+0x0],bl
   1400097d7:	add    BYTE PTR [rax],bh
   1400097d9:	xchg   ecx,eax
   1400097da:	add    BYTE PTR [rax],al
   1400097dc:	(bad)  
   1400097de:	add    BYTE PTR [rax],al
   1400097e0:	(bad)  
   1400097e1:	(bad)  
   1400097e2:	(bad)  
   1400097e3:	jmp    rdx
   1400097e5:	pop    rsi
   1400097e6:	add    BYTE PTR [rax],al
   1400097e8:	add    BYTE PTR [rax],al
   1400097ea:	add    BYTE PTR [rax],al
   1400097ec:	out    dx,al
   1400097ed:	pop    rsi
   1400097ee:	add    BYTE PTR [rax],al
   1400097f0:	add    DWORD PTR [rax],eax
   1400097f2:	add    BYTE PTR [rax],al
   1400097f4:	cli    
   1400097f5:	pop    rsi
   1400097f6:	add    BYTE PTR [rax],al
   1400097f8:	add    al,BYTE PTR [rax]
   1400097fa:	add    BYTE PTR [rax],al
   1400097fc:	(bad)  
   1400097fd:	pop    rdi
   1400097fe:	add    BYTE PTR [rax],al
   140009800:	add    eax,DWORD PTR [rax]
   140009802:	add    BYTE PTR [rax],al
   140009804:	adc    bl,BYTE PTR [rdi+0x0]
   140009807:	add    BYTE PTR [rax+rax*1],al
   14000980a:	add    BYTE PTR [rax],al
   14000980c:	(bad)  
   14000980d:	pop    rdi
   14000980e:	add    BYTE PTR [rax],al
   140009810:	add    eax,0x2a000000
   140009815:	pop    rdi
   140009816:	add    BYTE PTR [rax],al
   140009818:	add    eax,0x0
   14000981d:	add    BYTE PTR [rax],al
   14000981f:	add    BYTE PTR [rax+rax*1],al
   140009822:	add    BYTE PTR [rax],al
   140009824:	rex.WB pop r15
   140009826:	add    BYTE PTR [rax],al
   140009828:	or     BYTE PTR [rax],al
   14000982a:	add    BYTE PTR [rax],al
   14000982c:	push   rbp
   14000982d:	pop    rdi
   14000982e:	add    BYTE PTR [rax],al
   140009830:	or     BYTE PTR [rax],al
   140009832:	add    BYTE PTR [rax],al
   140009834:	(bad)  
   140009835:	pop    rdi
   140009836:	add    BYTE PTR [rax],al
   140009838:	add    al,0x0
   14000983a:	add    BYTE PTR [rax],al
   14000983c:	jno    0x14000989d
   14000983e:	add    BYTE PTR [rax],al
   140009840:	or     eax,DWORD PTR [rax]
   140009842:	add    BYTE PTR [rax],al
   140009844:	jge    0x1400098a5
   140009846:	add    BYTE PTR [rax],al
   140009848:	or     al,0x0
   14000984a:	add    BYTE PTR [rax],al
   14000984c:	mov    DWORD PTR [rdi+0x0],ebx
   14000984f:	add    BYTE PTR [rip+0xffffffff95000000],cl        # 0xd5009855
   140009855:	pop    rdi
	...
   14000985e:	add    BYTE PTR [rax],al
   140009860:	je     0x140009889
   140009862:	add    BYTE PTR [rax],al
   140009864:	(bad)  
   140009865:	(bad)  
   140009866:	(bad)  
   140009867:	push   QWORD PTR [rbp+0x27]
   14000986d:	add    BYTE PTR [rax],al
   14000986f:	add    BYTE PTR [rax],ah
   140009871:	sub    BYTE PTR [rax],al
   140009873:	add    BYTE PTR [rcx],al
   140009875:	add    BYTE PTR [rax],al
   140009877:	add    BYTE PTR [rdx+0x2000028],cl
   14000987d:	add    BYTE PTR [rax],al
   14000987f:	add    BYTE PTR [rdi+0x3000028],cl
   140009885:	add    BYTE PTR [rax],al
   140009887:	add    BYTE PTR [rdi+0x4000028],dl
   14000988d:	add    BYTE PTR [rax],al
   14000988f:	add    BYTE PTR [rdx],dl
   140009891:	sub    al,BYTE PTR [rax]
   140009893:	add    BYTE PTR [rip+0x28000000],al        # 0x168009899
   140009899:	sub    al,BYTE PTR [rax]
   14000989b:	add    BYTE PTR [rsi],al
   14000989d:	add    BYTE PTR [rax],al
   14000989f:	add    BYTE PTR [rdi],dh
   1400098a1:	sub    al,BYTE PTR [rax]
   1400098a3:	add    BYTE PTR [rip+0x3f000000],al        # 0x17f0098a9
   1400098a9:	sub    al,BYTE PTR [rax]
   1400098ab:	add    BYTE PTR [rax+rax*1],al
   1400098ae:	add    BYTE PTR [rax],al
   1400098b0:	rex.RXB sub r8b,BYTE PTR [r8]
   1400098b3:	add    BYTE PTR [rax],cl
   1400098b5:	add    BYTE PTR [rax],al
   1400098b7:	add    BYTE PTR [rsi+0x2a],ah
   1400098ba:	add    BYTE PTR [rax],al
   1400098bc:	or     DWORD PTR [rax],eax
   1400098be:	add    BYTE PTR [rax],al
   1400098c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400098c1:	sub    al,BYTE PTR [rax]
   1400098c3:	add    BYTE PTR [rdx],cl
   1400098c5:	add    BYTE PTR [rax],al
   1400098c7:	add    BYTE PTR [rdx+rbp*1+0x40000],bh
   1400098ce:	add    BYTE PTR [rax],al
   1400098d0:	(bad)  
   1400098d1:	sub    al,BYTE PTR [rax]
   1400098d3:	add    BYTE PTR [rbx],cl
   1400098d5:	add    BYTE PTR [rax],al
   1400098d7:	add    ah,ah
   1400098d9:	sub    al,BYTE PTR [rax]
   1400098db:	add    BYTE PTR [rax+rax*1],cl
   1400098de:	add    BYTE PTR [rax],al
   1400098e0:	add    ch,BYTE PTR [rbx]
   1400098e2:	add    BYTE PTR [rax],al
   1400098e4:	or     eax,0x14000000
   1400098e9:	sub    eax,DWORD PTR [rax]
   1400098eb:	add    BYTE PTR [rsi],cl
   1400098ed:	add    BYTE PTR [rax],al
   1400098ef:	add    BYTE PTR [rdx+0x2c],dl
   1400098f2:	add    BYTE PTR [rax],al
   1400098f4:	or     eax,0x75000000
   1400098f9:	sub    al,0x0
   1400098fb:	add    BYTE PTR [rax+rax*1],cl
   1400098fe:	add    BYTE PTR [rax],al
   140009900:	cwde   
   140009901:	sub    al,0x0
   140009903:	add    BYTE PTR [rbx],cl
   140009905:	add    BYTE PTR [rax],al
   140009907:	add    BYTE PTR [rsi+0x400002c],dh
   14000990d:	add    BYTE PTR [rax],al
   14000990f:	add    dl,ch
   140009911:	sub    al,0x0
   140009913:	add    BYTE PTR [rbx],al
   140009915:	add    BYTE PTR [rax],al
   140009917:	add    ch,bh
   140009919:	sub    al,0x0
   14000991b:	add    BYTE PTR [rdx],al
   14000991d:	add    BYTE PTR [rax],al
   14000991f:	add    BYTE PTR [rcx],cl
   140009921:	sub    eax,0x10000
   140009926:	add    BYTE PTR [rax],al
   140009928:	adc    eax,0x2d
   14000992d:	add    BYTE PTR [rax],al
   14000992f:	add    BYTE PTR [rbp+rbp*1+0x0],ah
   140009933:	add    bh,bh
   140009935:	(bad)  
   140009936:	(bad)  
   140009937:	call   FWORD PTR [rcx]
   140009939:	cmp    DWORD PTR [rip+0x29c42b00],ecx        # 0x169c4c43f
   14000993f:	add    BYTE PTR [rdi],ah
   140009941:	je     0x14000996b
   140009943:	add    BYTE PTR [rbx],ah
   140009945:	fs (bad) 
   140009947:	add    BYTE PTR [rdi],bl
   140009949:	xor    al,0x26
   14000994b:	add    BYTE PTR [rbx],dl
   14000994d:	add    DWORD PTR [rdx],esp
   14000994f:	add    BYTE PTR [rax],cl
   140009951:	lock (bad) 
   140009953:	loopne 0x140009959
   140009955:	push   rax
   140009956:	add    BYTE PTR [rax],al
   140009958:	sbb    BYTE PTR [rbp+0x0],bl
   14000995b:	add    BYTE PTR [rax],dl
   14000995d:	xchg   ecx,eax
   14000995e:	add    BYTE PTR [rax],al
   140009960:	add    al,BYTE PTR [rcx]
   140009962:	add    BYTE PTR [rax],al
   140009964:	(bad)  
   140009965:	(bad)  
   140009966:	(bad)  
   140009967:	jmp    QWORD PTR [rdi+0x5f]
   14000996d:	add    BYTE PTR [rax],al
   14000996f:	add    BYTE PTR [rbx+0x100005f],dh
   140009975:	add    BYTE PTR [rax],al
   140009977:	add    BYTE PTR [rdi+0x200005f],bh
   14000997d:	add    BYTE PTR [rax],al
   14000997f:	add    bl,cl
   140009981:	pop    rdi
   140009982:	add    BYTE PTR [rax],al
   140009984:	add    DWORD PTR [rax],eax
   140009986:	add    BYTE PTR [rax],al
   140009988:	fistp  DWORD PTR [rdi+0x0]
   14000998b:	add    BYTE PTR [rax+rax*1],al
   14000998e:	add    BYTE PTR [rax],al
   140009990:	out    0x5f,eax
   140009992:	add    BYTE PTR [rax],al
   140009994:	add    al,0x0
   140009996:	add    BYTE PTR [rax],al
   140009998:	repz pop rdi
   14000999a:	add    BYTE PTR [rax],al
   14000999c:	add    DWORD PTR [rax],eax
   14000999e:	add    BYTE PTR [rax],al
   1400099a0:	add    BYTE PTR [rax],al
   1400099a2:	add    BYTE PTR [rax],al
   1400099a4:	(bad)  
   1400099a5:	add    BYTE PTR [rax],al
   1400099a7:	add    BYTE PTR [rax],al
   1400099a9:	add    BYTE PTR [rax],al
   1400099ab:	add    BYTE PTR [rax],cl
   1400099ad:	add    BYTE PTR [rax],al
   1400099af:	add    BYTE PTR [rax],al
   1400099b1:	add    BYTE PTR [rax],al
   1400099b3:	add    BYTE PTR [rcx],al
   1400099b5:	add    BYTE PTR [rax],al
   1400099b7:	add    BYTE PTR [rax],al
   1400099b9:	add    BYTE PTR [rax],al
   1400099bb:	add    BYTE PTR [rax+rax*1],al
   1400099be:	add    BYTE PTR [rax],al
   1400099c0:	call   FWORD PTR [rdi+0x0]
   1400099c3:	add    BYTE PTR [rcx],al
   1400099c5:	add    BYTE PTR [rax],al
   1400099c7:	add    BYTE PTR [rax],al
   1400099c9:	add    BYTE PTR [rax],al
   1400099cb:	add    BYTE PTR [rax+rax*1],cl
   1400099ce:	add    BYTE PTR [rax],al
   1400099d0:	add    BYTE PTR [rax],al
   1400099d2:	add    BYTE PTR [rax],al
   1400099d4:	or     eax,0x0
   1400099d9:	add    BYTE PTR [rax],al
   1400099db:	add    BYTE PTR [rcx],al
   1400099dd:	add    BYTE PTR [rax],al
   1400099df:	add    BYTE PTR [rax],al
   1400099e1:	add    BYTE PTR [rax],al
   1400099e3:	add    BYTE PTR [rcx],al
   1400099e5:	add    BYTE PTR [rax],al
   1400099e7:	add    BYTE PTR [rbx],cl
   1400099e9:	(bad)  
   1400099ea:	add    BYTE PTR [rax],al
   1400099ec:	adc    BYTE PTR [rax],al
   1400099ee:	add    BYTE PTR [rax],al
   1400099f0:	(bad)  
   1400099f1:	(bad)  
   1400099f2:	add    BYTE PTR [rax],al
   1400099f4:	adc    DWORD PTR [rax],eax
   1400099f6:	add    BYTE PTR [rax],al
   1400099f8:	(bad)  
   1400099f9:	(bad)  
   1400099fa:	add    BYTE PTR [rax],al
   1400099fc:	add    DWORD PTR [rax],eax
   1400099fe:	add    BYTE PTR [rax],al
   140009a00:	(bad)  
   140009a01:	(bad)  
	...
   140009a0e:	add    BYTE PTR [rax],al
   140009a10:	clc    
   140009a11:	sub    eax,0xffff0000
   140009a16:	(bad)  
   140009a17:	(bad)  
   140009a18:	jns    0x140009a48
   140009a1a:	add    BYTE PTR [rax],al
   140009a1c:	add    BYTE PTR [rax],al
   140009a1e:	add    BYTE PTR [rax],al
   140009a20:	xchg   edx,eax
   140009a21:	add    BYTE PTR cs:[rax],al
   140009a24:	add    DWORD PTR [rax],eax
   140009a26:	add    BYTE PTR [rax],al
   140009a28:	repz add BYTE PTR cs:[rax],al
   140009a2c:	add    al,BYTE PTR [rax]
   140009a2e:	add    BYTE PTR [rax],al
   140009a30:	or     DWORD PTR [rdi],ebp
   140009a32:	add    BYTE PTR [rax],al
   140009a34:	add    eax,DWORD PTR [rax]
   140009a36:	add    BYTE PTR [rax],al
   140009a38:	xor    DWORD PTR [rdi],ebp
   140009a3a:	add    BYTE PTR [rax],al
   140009a3c:	add    al,0x0
   140009a3e:	add    BYTE PTR [rax],al
   140009a40:	rex (bad) 
   140009a42:	add    BYTE PTR [rax],al
   140009a44:	add    eax,0x79000000
   140009a49:	(bad)  
   140009a4a:	add    BYTE PTR [rax],al
   140009a4c:	add    al,0x0
   140009a4e:	add    BYTE PTR [rax],al
   140009a50:	sub    DWORD PTR [rdi],0x0
   140009a53:	add    BYTE PTR [rsi],al
   140009a55:	add    BYTE PTR [rax],al
   140009a57:	add    BYTE PTR [rax+rsi*1+0x0],cl
   140009a5b:	add    BYTE PTR [rax+rax*1],al
   140009a5e:	add    BYTE PTR [rax],al
   140009a60:	int3   
   140009a61:	xor    BYTE PTR [rax],al
   140009a63:	add    BYTE PTR [rbx],cl
   140009a65:	add    BYTE PTR [rax],al
   140009a67:	add    BYTE PTR [rdi],bh
   140009a69:	xor    DWORD PTR [rax],eax
   140009a6b:	add    BYTE PTR [rax+rax*1],al
   140009a6e:	add    BYTE PTR [rax],al
   140009a70:	rex.X xor DWORD PTR [rax],eax
   140009a73:	add    BYTE PTR [rdx],dl
   140009a75:	add    BYTE PTR [rax],al
   140009a77:	add    BYTE PTR [rdx+0x31],ah
   140009a7a:	add    BYTE PTR [rax],al
   140009a7c:	adc    DWORD PTR [rax],eax
   140009a7e:	add    BYTE PTR [rax],al
   140009a80:	ins    DWORD PTR es:[rdi],dx
   140009a81:	xor    DWORD PTR [rax],eax
   140009a83:	add    BYTE PTR [rax],dl
   140009a85:	add    BYTE PTR [rax],al
   140009a87:	add    BYTE PTR [rbx+0x1000031],ch
   140009a8d:	add    BYTE PTR [rax],al
   140009a8f:	add    BYTE PTR [rcx+rsi*1+0x130000],dh
   140009a96:	add    BYTE PTR [rax],al
   140009a98:	(bad)  
   140009a99:	xor    DWORD PTR [rax],eax
   140009a9b:	add    BYTE PTR [rcx],al
   140009a9d:	add    BYTE PTR [rax],al
   140009a9f:	add    dh,bl
   140009aa1:	xor    DWORD PTR [rax],eax
   140009aa3:	add    BYTE PTR [rax],al
   140009aa5:	add    BYTE PTR [rax],al
   140009aa7:	add    ch,ch
   140009aa9:	xor    DWORD PTR [rax],eax
   140009aab:	add    bh,bh
   140009aad:	(bad)  
   140009aae:	(bad)  
   140009aaf:	inc    DWORD PTR [rcx]
   140009ab1:	adc    eax,0x74150008
   140009ab6:	or     BYTE PTR [rax],al
   140009ab8:	adc    eax,0x15000764
   140009abd:	xor    al,0x6
   140009abf:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e0abf7
   140009ac5:	and    BYTE PTR [rip+0x14621800],al        # 0x15462b2cb
   140009acb:	loopne 0x140009adf
   140009acd:	jo     0x140009ae0
   140009acf:	(bad)  
   140009ad0:	adc    BYTE PTR [rax],dh
   140009ad2:	add    BYTE PTR [rax],al
   140009ad4:	pop    rsi
   140009ad5:	pop    rsp
   140009ad6:	add    BYTE PTR [rax],al
   140009ad8:	call   0x13f009b6d
   140009add:	(bad)  
   140009ade:	(bad)  
   140009adf:	inc    DWORD PTR [rax]
   140009ae1:	add    BYTE PTR [rax],al
   140009ae3:	add    bh,bh
   140009ae5:	(bad)  
   140009ae6:	(bad)  
   140009ae7:	inc    DWORD PTR [rax]
   140009ae9:	add    BYTE PTR [rax],al
   140009aeb:	add    BYTE PTR [rcx],al
   140009aed:	add    BYTE PTR [rax],al
   140009aef:	add    BYTE PTR [rax],al
   140009af1:	add    BYTE PTR [rax],al
   140009af3:	add    BYTE PTR [rcx],al
	...
   140009b01:	add    BYTE PTR [rax],al
   140009b03:	add    BYTE PTR [rbx],al
   140009b05:	add    BYTE PTR [rax],al
   140009b07:	add    BYTE PTR [rcx],al
   140009b09:	add    BYTE PTR [rax],al
   140009b0b:	add    BYTE PTR [rbx+rbx*4],ah
   140009b0e:	add    BYTE PTR [rax],al
   140009b10:	add    al,BYTE PTR [rax]
   140009b12:	add    BYTE PTR [rax],al
   140009b14:	add    al,BYTE PTR [rax]
   140009b16:	add    BYTE PTR [rax],al
   140009b18:	add    eax,DWORD PTR [rax]
   140009b1a:	add    BYTE PTR [rax],al
   140009b1c:	add    DWORD PTR [rax],eax
   140009b1e:	add    BYTE PTR [rax],al
   140009b20:	cmp    BYTE PTR [rbx+0x400000],bl
	...
   140009b2e:	add    BYTE PTR [rax],al
   140009b30:	rex.WB (bad) 
   140009b32:	add    BYTE PTR [rax],al
   140009b34:	cmp    BYTE PTR [rax],al
   140009b36:	add    BYTE PTR [rax],al
   140009b38:	add    BYTE PTR [rax],al
	...
   140009b43:	add    BYTE PTR [rsi+0x38000060],cl
   140009b49:	add    BYTE PTR [rax],al
   140009b4b:	add    BYTE PTR [rax],al
   140009b4d:	add    BYTE PTR [rax],al
   140009b4f:	add    BYTE PTR [rax],dh
   140009b51:	(bad)  
   140009b52:	add    BYTE PTR [rax],al
   140009b54:	(bad)  
   140009b55:	(bad)  
   140009b56:	(bad)  
   140009b57:	call   FWORD PTR [rdi+0x37]
   140009b5d:	add    BYTE PTR [rax],al
   140009b5f:	add    ch,al
   140009b61:	(bad)  
   140009b62:	add    BYTE PTR [rax],al
   140009b64:	(bad)  
   140009b65:	(bad)  
   140009b66:	(bad)  
   140009b67:	dec    DWORD PTR [rcx+0x60]
   140009b6a:	add    BYTE PTR [rax],al
   140009b6c:	add    BYTE PTR [rax],al
   140009b6e:	add    BYTE PTR [rax],al
   140009b70:	push   rsi
   140009b71:	(bad)  
   140009b72:	add    BYTE PTR [rax],al
   140009b74:	add    DWORD PTR [rax],eax
   140009b76:	add    BYTE PTR [rax],al
   140009b78:	pop    rsi
   140009b79:	(bad)  
   140009b7a:	add    BYTE PTR [rax],al
   140009b7c:	add    al,BYTE PTR [rax]
   140009b7e:	add    BYTE PTR [rax],al
   140009b80:	and    BYTE PTR [rax+0x0],0x0
   140009b84:	add    BYTE PTR [rax],al
   140009b86:	add    BYTE PTR [rax],al
   140009b88:	fwait
   140009b89:	(bad)  
   140009b8a:	add    BYTE PTR [rax],al
   140009b8c:	add    eax,DWORD PTR [rax]
   140009b8e:	add    BYTE PTR [rax],al
   140009b90:	sbb    DWORD PTR [rdx],ecx
   140009b92:	add    al,BYTE PTR [rax]
   140009b94:	or     dh,BYTE PTR [rdx]
   140009b96:	(bad)  
   140009b97:	push   rax
   140009b98:	pop    rsi
   140009b99:	pop    rsp
   140009b9a:	add    BYTE PTR [rax],al
   140009b9c:	call   0x141009c31
   140009ba1:	sbb    DWORD PTR [rdx],ecx
   140009ba3:	add    BYTE PTR [rcx],bl
   140009ba5:	je     0x140009bb0
   140009ba7:	add    BYTE PTR [rcx],bl
   140009ba9:	or     BYTE PTR fs:[rax],al
   140009bac:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140009bb0:	sbb    DWORD PTR [rsi+rax*1],esi
   140009bb3:	add    BYTE PTR [rcx],bl
   140009bb5:	xor    dl,BYTE PTR [rip+0x81501e0]        # 0x148159d9b
   140009bbb:	add    BYTE PTR [rip+0x15000874],dl        # 0x15500a435
   140009bc1:	push   rsp
   140009bc2:	(bad)  
   140009bc3:	add    BYTE PTR [rip+0x15000634],dl        # 0x15500a1fd
   140009bc9:	xor    dl,BYTE PTR [rcx]
   140009bcb:	loopne 0x140009be6
   140009bcd:	and    al,BYTE PTR [rsi]
   140009bcf:	add    BYTE PTR [rdx],bl
   140009bd1:	push   rdx
   140009bd2:	(bad)  
   140009bd3:	lock adc al,0xe0
   140009bd6:	adc    dh,BYTE PTR [rax+0x11]
   140009bd9:	(bad)  
   140009bda:	adc    BYTE PTR [rax],dh
   140009bdc:	pop    rsi
   140009bdd:	pop    rsp
   140009bde:	add    BYTE PTR [rax],al
   140009be0:	rcl    BYTE PTR [rax+0x0],0x0
   140009be7:	add    BYTE PTR [rax],al
   140009be9:	add    BYTE PTR [rax],al
   140009beb:	add    BYTE PTR [rbx],al
   140009bed:	add    BYTE PTR [rax],al
   140009bef:	add    BYTE PTR [rcx],al
   140009bf1:	add    BYTE PTR [rax],al
   140009bf3:	add    BYTE PTR [rsp+rbx*4],cl
   140009bf6:	add    BYTE PTR [rax],al
   140009bf8:	add    al,BYTE PTR [rax]
   140009bfa:	add    BYTE PTR [rax],al
   140009bfc:	add    al,BYTE PTR [rax]
   140009bfe:	add    BYTE PTR [rax],al
   140009c00:	add    eax,DWORD PTR [rax]
   140009c02:	add    BYTE PTR [rax],al
   140009c04:	add    DWORD PTR [rax],eax
   140009c06:	add    BYTE PTR [rax],al
   140009c08:	and    BYTE PTR [rax+rax*1+0x4000],bl
	...
   140009c17:	add    BYTE PTR [rcx+0x38000060],bh
   140009c1d:	add    BYTE PTR [rax],al
   140009c1f:	add    BYTE PTR [rax+0x0],al
	...
   140009c2a:	add    BYTE PTR [rax],al
   140009c2c:	or     ah,BYTE PTR [rcx+0x0]
   140009c2f:	add    BYTE PTR [rax],bh
	...
   140009c3d:	add    BYTE PTR [rax],al
   140009c3f:	add    BYTE PTR [rax],ch
   140009c41:	cmp    eax,DWORD PTR [rax]
   140009c43:	add    bh,bh
   140009c45:	(bad)  
   140009c46:	(bad)  
   140009c47:	call   FWORD PTR [rbx+rdi*1+0x0]
   140009c4e:	add    BYTE PTR [rax],al
   140009c50:	sar    BYTE PTR [rbx],1
   140009c52:	add    BYTE PTR [rax],al
   140009c54:	(bad)  
   140009c55:	(bad)  
   140009c56:	(bad)  
   140009c57:	(bad)  
   140009c58:	mov    ecx,0x60
   140009c5d:	add    BYTE PTR [rax],al
   140009c5f:	add    dh,al
   140009c61:	(bad)  
   140009c62:	add    BYTE PTR [rax],al
   140009c64:	add    DWORD PTR [rax],eax
   140009c66:	add    BYTE PTR [rax],al
   140009c68:	(bad)  
   140009c69:	(bad)  
   140009c6a:	add    BYTE PTR [rax],al
   140009c6c:	add    al,BYTE PTR [rax]
   140009c6e:	add    BYTE PTR [rax],al
   140009c70:	cld    
   140009c71:	(bad)  
   140009c72:	add    BYTE PTR [rax],al
   140009c74:	add    BYTE PTR [rax],al
   140009c76:	add    BYTE PTR [rax],al
   140009c78:	(bad)  
   140009c79:	(bad)  
   140009c7a:	add    BYTE PTR [rax],al
   140009c7c:	add    eax,DWORD PTR [rax]
   140009c7e:	add    BYTE PTR [rax],al
   140009c80:	sbb    DWORD PTR [rdx],ecx
   140009c82:	add    al,BYTE PTR [rax]
   140009c84:	or     dh,BYTE PTR [rdx]
   140009c86:	(bad)  
   140009c87:	push   rax
   140009c88:	pop    rsi
   140009c89:	pop    rsp
   140009c8a:	add    BYTE PTR [rax],al
   140009c8c:	rcl    BYTE PTR [rax+0x18190000],0x4
   140009c93:	add    BYTE PTR [rax],bl
   140009c95:	xor    al,0x9
   140009c97:	add    BYTE PTR [rdx],cl
   140009c99:	push   rdx
   140009c9a:	(bad)  
   140009c9b:	jo     0x140009cfb
   140009c9d:	pop    rsp
   140009c9e:	add    BYTE PTR [rax],al
   140009ca0:	cwde   
   140009ca1:	nop
   140009ca2:	add    BYTE PTR [rax],al
   140009ca4:	(bad)  
   140009ca5:	(bad)  
   140009ca6:	(bad)  
   140009ca7:	inc    DWORD PTR [rax]
   140009ca9:	add    BYTE PTR [rax],al
   140009cab:	add    bh,bh
   140009cad:	(bad)  
   140009cae:	(bad)  
   140009caf:	inc    DWORD PTR [rax]
	...
   140009cb9:	add    BYTE PTR [rax],al
   140009cbb:	add    BYTE PTR [rcx],al
   140009cbd:	add    BYTE PTR [rax],al
   140009cbf:	add    BYTE PTR [rcx],al
   140009cc1:	add    BYTE PTR [rax],al
   140009cc3:	add    al,cl
   140009cc5:	pushf  
   140009cc6:	add    BYTE PTR [rax],al
   140009cc8:	add    BYTE PTR [rax],al
	...
   140009cd3:	add    BYTE PTR [rip+0x38000061],dh        # 0x178009d3a
   140009cd9:	add    BYTE PTR [rax],al
   140009cdb:	add    BYTE PTR [rax],al
   140009cdd:	add    BYTE PTR [rax],al
   140009cdf:	add    BYTE PTR [rax+0x3c],bl
   140009ce2:	add    BYTE PTR [rax],al
   140009ce4:	(bad)  
   140009ce5:	(bad)  
   140009ce6:	(bad)  
   140009ce7:	call   FWORD PTR [rsp+rdi*1+0x0]
   140009cee:	add    BYTE PTR [rax],al
   140009cf0:	stos   DWORD PTR es:[rdi],eax
   140009cf1:	cmp    al,0x0
   140009cf3:	add    bh,bh
   140009cf5:	(bad)  
   140009cf6:	(bad)  
   140009cf7:	push   QWORD PTR [rip+0x61]        # 0x140009d5e
   140009cfd:	add    BYTE PTR [rax],al
   140009cff:	add    BYTE PTR [rdx+0x61],al
   140009d02:	add    BYTE PTR [rax],al
   140009d04:	add    DWORD PTR [rax],eax
   140009d06:	add    BYTE PTR [rax],al
   140009d08:	sbb    DWORD PTR [rdx],ecx
   140009d0a:	add    al,BYTE PTR [rax]
   140009d0c:	or     dh,BYTE PTR [rdx]
   140009d0e:	(bad)  
   140009d0f:	push   rax
   140009d10:	pop    rsi
   140009d11:	pop    rsp
   140009d12:	add    BYTE PTR [rax],al
   140009d14:	cwde   
   140009d15:	nop
   140009d16:	add    BYTE PTR [rax],al
   140009d18:	add    DWORD PTR [rax],ebx
   140009d1a:	or     al,BYTE PTR [rax]
   140009d1c:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   140009d20:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140009d24:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009d27:	add    BYTE PTR [rax],bl
   140009d29:	xor    dl,BYTE PTR [rax+rsi*8]
   140009d2c:	adc    ah,al
   140009d2e:	adc    BYTE PTR [rax+0x1],dh
   140009d31:	adc    eax,0x74150008
   140009d36:	or     DWORD PTR [rax],eax
   140009d38:	adc    eax,0x15000864
   140009d3d:	xor    al,0x7
   140009d3f:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e0ae77
   140009d45:	adc    eax,DWORD PTR [rdx]
   140009d47:	add    BYTE PTR [rdx],cl
   140009d49:	push   rdx
   140009d4a:	(bad)  
   140009d4b:	xor    BYTE PTR [rsi+0x5c],bl
   140009d4e:	add    BYTE PTR [rax],al
   140009d50:	jo     0x140009ce2
	...
   140009d5a:	add    BYTE PTR [rax],al
   140009d5c:	add    DWORD PTR [rax],eax
   140009d5e:	add    BYTE PTR [rax],al
   140009d60:	add    DWORD PTR [rax],eax
   140009d62:	add    BYTE PTR [rax],al
   140009d64:	push   0x4000009d
	...
   140009d71:	add    BYTE PTR [rax],al
   140009d73:	add    BYTE PTR [rbx+0x61],bl
   140009d76:	add    BYTE PTR [rax],al
   140009d78:	cmp    BYTE PTR [rax],al
   140009d7a:	add    BYTE PTR [rax],al
   140009d7c:	add    BYTE PTR [rax],al
   140009d7e:	add    BYTE PTR [rax],al
   140009d80:	rex.W
   140009d81:	add    BYTE PTR ds:[rax],al
   140009d84:	(bad)  
   140009d85:	(bad)  
   140009d86:	(bad)  
   140009d87:	jmp    FWORD PTR [rax+0x3e]
   140009d8a:	add    BYTE PTR [rax],al
   140009d8c:	add    BYTE PTR [rax],al
   140009d8e:	add    BYTE PTR [rax],al
   140009d90:	ja     0x140009dd0
   140009d92:	add    BYTE PTR [rax],al
   140009d94:	(bad)  
   140009d95:	(bad)  
   140009d96:	(bad)  
   140009d97:	call   FWORD PTR [rbx+0x61]
   140009d9a:	add    BYTE PTR [rax],al
   140009d9c:	add    BYTE PTR [rax],al
   140009d9e:	add    BYTE PTR [rax],al
   140009da0:	push   0x1000061
   140009da5:	add    BYTE PTR [rax],al
   140009da7:	add    BYTE PTR [rcx],bl
   140009da9:	or     al,BYTE PTR [rdx]
   140009dab:	add    BYTE PTR [rdx],cl
   140009dad:	xor    al,BYTE PTR [rsi]
   140009daf:	push   rax
   140009db0:	pop    rsi
   140009db1:	pop    rsp
   140009db2:	add    BYTE PTR [rax],al
   140009db4:	jo     0x140009d46
   140009db6:	add    BYTE PTR [rax],al
   140009db8:	add    DWORD PTR [rbx],esp
   140009dba:	or     al,0x0
   140009dbc:	and    esi,DWORD PTR [rsi+rdx*1+0x0]
   140009dc0:	and    esp,DWORD PTR [rbp+rdx*1+0x0]
   140009dc4:	and    esi,DWORD PTR [rsp+rdx*1]
   140009dc7:	add    BYTE PTR [rbx],ah
   140009dc9:	rcr    BYTE PTR [rax+rsi*8],cl
   140009dcc:	sbb    ah,al
   140009dce:	sbb    al,dl
   140009dd0:	(bad)  
   140009dd1:	rcl    BYTE PTR [rax+rdx*2],0x1
   140009dd5:	adc    eax,0x64150008
   140009dda:	or     eax,0xc341500
   140009ddf:	add    BYTE PTR [rip+0xce00e52],dl        # 0x14ce0ac37
   140009de5:	jo     0x140009df2
   140009de7:	push   rax
   140009de8:	add    DWORD PTR [rax+rcx*1],edx
   140009deb:	add    BYTE PTR [rsp+riz*2],dl
   140009dee:	or     eax,0xc541400
   140009df3:	add    BYTE PTR [rdx+rsi*2],dl
   140009df6:	adc    al,dh
   140009df8:	(bad)  
   140009df9:	loopne 0x140009e07
   140009dfb:	jo     0x140009dfe
   140009dfd:	sbb    cl,BYTE PTR [rax]
   140009dff:	add    BYTE PTR [rdx],bl
   140009e01:	ltr    WORD PTR fs:[rdx]
   140009e05:	xor    al,0xe
   140009e07:	add    BYTE PTR [rdx],bl
   140009e09:	xchg   edx,eax
   140009e0a:	adc    esp,eax
   140009e0c:	adc    DWORD PTR [rax+0x10],esi
   140009e0f:	push   rax
   140009e10:	add    DWORD PTR [rdi],ecx
   140009e12:	(bad)  
   140009e13:	add    BYTE PTR [rdi],cl
   140009e15:	or     BYTE PTR fs:[rax],al
   140009e18:	sysenter 
   140009e1a:	(bad)  
   140009e1b:	add    BYTE PTR [rdi],cl
   140009e1d:	xor    cl,BYTE PTR [rbx]
   140009e1f:	jo     0x140009e22
   140009e21:	sbb    al,0xc
   140009e23:	add    BYTE PTR [rsp+riz*2],bl
   140009e26:	ltr    WORD PTR [rsp+rdx*2]
   140009e2a:	(bad)  
   140009e2b:	add    BYTE PTR [rsp+rsi*1],bl
   140009e2e:	or     eax,0x18521c00
   140009e33:	lock (bad) 
   140009e35:	loopne 0x140009e4b
   140009e37:	rcl    BYTE PTR [rdx],1
   140009e39:	rcl    BYTE PTR [rax],0x70
   140009e3c:	sbb    DWORD PTR [rdi],esp
   140009e3e:	or     DWORD PTR [rax],eax
   140009e40:	adc    eax,0x15004f54
   140009e45:	xor    al,0x4e
   140009e47:	add    BYTE PTR [rip+0xe004801],dl        # 0x14e00e64e
   140009e4d:	loopne 0x140009e5b
   140009e4f:	jo     0x140009e5c
   140009e51:	(bad)  
   140009e52:	add    BYTE PTR [rax],al
   140009e54:	mov    BYTE PTR [rax+rax*1+0x0],bl
   140009e58:	xor    BYTE PTR [rdx],al
   140009e5a:	add    BYTE PTR [rax],al
   140009e5c:	add    DWORD PTR [rsi],edx
   140009e5e:	or     al,BYTE PTR [rax]
   140009e60:	(bad)  
   140009e61:	push   rsp
   140009e62:	or     al,0x0
   140009e64:	(bad)  
   140009e65:	xor    al,0xa
   140009e67:	add    BYTE PTR [rsi],dl
   140009e69:	xor    dl,BYTE PTR [rdx]
   140009e6b:	lock adc al,ah
   140009e6e:	(bad)  
   140009e6f:	ror    BYTE PTR [rax+rsi*2],0xb
   140009e73:	(bad)  
   140009e74:	add    DWORD PTR [rdx],ecx
   140009e76:	add    al,0x0
   140009e78:	or     dh,BYTE PTR [rax+rcx*1]
   140009e7b:	add    BYTE PTR [rdx],cl
   140009e7d:	push   rdx
   140009e7e:	(bad)  
   140009e7f:	jo     0x140009e92
   140009e81:	adc    eax,DWORD PTR [rdx]
   140009e83:	add    BYTE PTR [rdx],cl
   140009e85:	push   rdx
   140009e86:	(bad)  
   140009e87:	xor    BYTE PTR [rsi+0x5c],bl
   140009e8a:	add    BYTE PTR [rax],al
   140009e8c:	fcom   DWORD PTR [rcx-0x10000]
   140009e92:	(bad)  
   140009e93:	inc    DWORD PTR [rcx-0x73ffff9f]
   140009e99:	push   rcx
   140009e9a:	add    BYTE PTR [rax],al
   140009e9c:	(bad)  
   140009e9d:	(bad)  
   140009e9e:	(bad)  
   140009e9f:	jmp    QWORD PTR [rdx+0x51]
   140009ea5:	add    BYTE PTR [rax],al
   140009ea7:	add    BYTE PTR [rbp-0xffffaf],bh
   140009ead:	(bad)  
   140009eae:	(bad)  
   140009eaf:	inc    DWORD PTR [rcx]
   140009eb1:	add    al,0x1
   140009eb3:	add    BYTE PTR [rdx+riz*2],al
   140009eb6:	add    BYTE PTR [rax],al
   140009eb8:	or     DWORD PTR [rbx+rcx*1],ebx
   140009ebb:	add    BYTE PTR [rsp+rsi*2],bl
   140009ebe:	sbb    al,0x0
   140009ec0:	sbb    al,0x64
   140009ec2:	sbb    eax,DWORD PTR [rax]
   140009ec4:	sbb    al,0x34
   140009ec6:	sbb    al,BYTE PTR [rax]
   140009ec8:	sbb    al,0x1
   140009eca:	(bad)  
   140009ecb:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0b2c1
   140009ed1:	rol    BYTE PTR [rax],0x0
   140009ed4:	(bad)  
   140009ed5:	pop    rsp
   140009ed6:	add    BYTE PTR [rax],al
   140009ed8:	add    DWORD PTR [rax],eax
   140009eda:	add    BYTE PTR [rax],al
   140009edc:	jo     0x140009f31
   140009ede:	add    BYTE PTR [rax],al
   140009ee0:	push   bp
   140009ee2:	add    BYTE PTR [rax],al
   140009ee4:	xchg   ebx,eax
   140009ee5:	(bad)  
   140009ee6:	add    BYTE PTR [rax],al
   140009ee8:	push   bp
   140009eea:	add    BYTE PTR [rax],al
   140009eec:	add    BYTE PTR [rax],al
   140009eee:	add    BYTE PTR [rax],al
   140009ef0:	add    DWORD PTR [rax],eax
   140009ef2:	add    BYTE PTR [rax],al
   140009ef4:	adc    DWORD PTR [rdx],ecx
   140009ef6:	add    al,0x0
   140009ef8:	or     dh,BYTE PTR [rsi+rax*1]
   140009efb:	add    BYTE PTR [rdx],cl
   140009efd:	xor    al,BYTE PTR [rsi]
   140009eff:	jo     0x140009f07
   140009f01:	pop    rsp
   140009f02:	add    BYTE PTR [rax],al
   140009f04:	add    DWORD PTR [rax],eax
   140009f06:	add    BYTE PTR [rax],al
   140009f08:	(bad)  
   140009f09:	push   rsi
   140009f0a:	add    BYTE PTR [rax],al
   140009f0c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009f0d:	push   rsi
   140009f0e:	add    BYTE PTR [rax],al
   140009f10:	mov    bh,0x61
   140009f12:	add    BYTE PTR [rax],al
   140009f14:	add    BYTE PTR [rax],al
   140009f16:	add    BYTE PTR [rax],al
   140009f18:	add    DWORD PTR [rdx+rax*1],ecx
   140009f1b:	add    BYTE PTR [rcx+rax*1],cl
   140009f1e:	adc    DWORD PTR [rax],eax
   140009f20:	or     DWORD PTR [rcx+rax*1],eax
   140009f23:	add    BYTE PTR [rdx+riz*1],al
   140009f26:	add    BYTE PTR [rax],al
   140009f28:	(bad)  
   140009f29:	pop    rsp
   140009f2a:	add    BYTE PTR [rax],al
   140009f2c:	add    DWORD PTR [rax],eax
   140009f2e:	add    BYTE PTR [rax],al
   140009f30:	mov    WORD PTR [rcx+0x0],ds
   140009f33:	add    dl,al
   140009f35:	pop    rcx
   140009f36:	add    BYTE PTR [rax],al
   140009f38:	add    DWORD PTR [rax],eax
   140009f3a:	add    BYTE PTR [rax],al
   140009f3c:	ret    0x59
   140009f3f:	add    BYTE PTR [rcx],cl
   140009f41:	or     al,BYTE PTR [rax+rax*1]
   140009f44:	or     dh,BYTE PTR [rsi+rax*1]
   140009f47:	add    BYTE PTR [rdx],cl
   140009f49:	xor    al,BYTE PTR [rsi]
   140009f4b:	jo     0x140009f53
   140009f4d:	pop    rsp
   140009f4e:	add    BYTE PTR [rax],al
   140009f50:	add    DWORD PTR [rax],eax
   140009f52:	add    BYTE PTR [rax],al
   140009f54:	lea    ebx,[rdx+0x0]
   140009f57:	add    al,al
   140009f59:	pop    rdx
   140009f5a:	add    BYTE PTR [rax],al
   140009f5c:	loopne 0x140009fbf
   140009f5e:	add    BYTE PTR [rax],al
   140009f60:	rcr    BYTE PTR [rdx+0x0],0x0
   140009f64:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d9f6e
   140009f6a:	or     DWORD PTR [rax],eax
   140009f6c:	or     eax,0x1500632
   140009f71:	add    BYTE PTR [rax],al
   140009f73:	add    BYTE PTR [rcx],bl
   140009f75:	or     eax,0x62040001
   140009f7a:	add    BYTE PTR [rax],al
   140009f7c:	pop    rsi
   140009f7d:	pop    rsp
   140009f7e:	add    BYTE PTR [rax],al
   140009f80:	sub    BYTE PTR [rbp+0x0],al
   140009f86:	add    BYTE PTR [rax],al
   140009f88:	add    BYTE PTR [rax],al
   140009f8a:	add    BYTE PTR [rax],al
   140009f8c:	add    DWORD PTR [rax],eax
   140009f8e:	add    BYTE PTR [rax],al
   140009f90:	add    DWORD PTR [rax],eax
   140009f92:	add    BYTE PTR [rax],al
   140009f94:	cwde   
   140009f95:	lahf   
   140009f96:	add    BYTE PTR [rax],al
   140009f98:	add    BYTE PTR [rax],al
	...
   140009fa3:	add    BYTE PTR [rsi],al
   140009fa5:	(bad)  
   140009fa6:	add    BYTE PTR [rax],al
   140009fa8:	cmp    BYTE PTR [rax],al
   140009faa:	add    BYTE PTR [rax],al
   140009fac:	add    BYTE PTR [rax],al
   140009fae:	add    BYTE PTR [rax],al
   140009fb0:	cmp    BYTE PTR [rax+rax*1+0x0],bl
   140009fb4:	(bad)  
   140009fb5:	(bad)  
   140009fb6:	(bad)  
   140009fb7:	inc    DWORD PTR [rbp+0x5c]
   140009fba:	add    BYTE PTR [rax],al
   140009fbc:	add    BYTE PTR [rax],al
   140009fbe:	add    BYTE PTR [rax],al
   140009fc0:	rex.WXB pop r12
   140009fc2:	add    BYTE PTR [rax],al
   140009fc4:	(bad)  
   140009fc5:	(bad)  
   140009fc6:	(bad)  
   140009fc7:	inc    DWORD PTR [rsi]
   140009fc9:	(bad)  
   140009fca:	add    BYTE PTR [rax],al
   140009fcc:	add    BYTE PTR [rax],al
   140009fce:	add    BYTE PTR [rax],al
   140009fd0:	adc    esp,DWORD PTR [rdx+0x0]
   140009fd3:	add    BYTE PTR [rcx],al
   140009fd5:	add    BYTE PTR [rax],al
   140009fd7:	add    BYTE PTR [rax],bl
   140009fd9:	(bad)  
   140009fda:	add    BYTE PTR [rax],al
   140009fdc:	add    BYTE PTR [rax],al
   140009fde:	add    BYTE PTR [rax],al
   140009fe0:	sbb    DWORD PTR [rdx],ecx
   140009fe2:	add    al,BYTE PTR [rax]
   140009fe4:	or     dh,BYTE PTR [rdx]
   140009fe6:	(bad)  
   140009fe7:	push   rax
   140009fe8:	pop    rsi
   140009fe9:	pop    rsp
   140009fea:	add    BYTE PTR [rax],al
   140009fec:	sub    BYTE PTR [rbp+0x4010000],al
   140009ff2:	add    DWORD PTR [rax],eax
   140009ff4:	add    al,0x12
   140009ff6:	add    BYTE PTR [rax],al
   140009ff8:	add    DWORD PTR [rax],eax
   140009ffa:	add    BYTE PTR [rax],al
   140009ffc:	sbb    BYTE PTR [rax+0x0],ah
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	add    DWORD PTR [rax],eax
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	(bad)  
   14000a00d:	movabs al,ds:0x0
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	add    BYTE PTR [rax],al
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	nop
   14000a01d:	rol    BYTE PTR [rax],0x0
   14000a020:	add    BYTE PTR [rax],al
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	(bad)  
   14000a025:	(bad)  
   14000a026:	(bad)  
   14000a027:	inc    DWORD PTR [rax]
   14000a029:	add    BYTE PTR [rax],al
   14000a02b:	add    BYTE PTR [rax-0x54000000],ah
   14000a031:	(bad)  
	...
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	or     BYTE PTR [rax+0x0],ah
	...
   14000a062:	add    BYTE PTR [rax],al
   14000a064:	nop
   14000a065:	rol    DWORD PTR [rax],0x0
   14000a068:	add    BYTE PTR [rax],al
   14000a06a:	add    BYTE PTR [rax],al
   14000a06c:	(bad)  
   14000a06d:	(bad)  
   14000a06e:	(bad)  
   14000a06f:	inc    DWORD PTR [rax]
   14000a071:	add    BYTE PTR [rax],al
   14000a073:	add    BYTE PTR [rax+rax*1],al
	...
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	(bad)  
   14000a08d:	(bad)  
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	add    BYTE PTR [rax],al
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	clc    
   14000a095:	lahf   
	...
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	jo     0x14000a04c
	...
   14000a0b2:	add    BYTE PTR [rax],al
   14000a0b4:	mov    BYTE PTR [rdi-0x7f900000],ah
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	sub    BYTE PTR [rax+rax*1+0x0],ah
   14000a0c3:	add    BYTE PTR [rax],al
   14000a0c5:	add    BYTE PTR [rax],al
   14000a0c7:	add    BYTE PTR [rsi-0x58],dl
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	sub    BYTE PTR [rdx-0x5ba00000],al
	...
   14000a0da:	add    BYTE PTR [rax],al
   14000a0dc:	ins    BYTE PTR es:[rdi],dx
   14000a0dd:	test   eax,0x82600000
   14000a0e2:	add    BYTE PTR [rax],al
   14000a0e4:	mov    BYTE PTR [rbp+0x0],ah
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	add    BYTE PTR [rax],al
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	sbb    ch,BYTE PTR [rdx-0x7c780000]
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	pop    rax
   14000a0f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	data16 stos BYTE PTR es:[rdi],al
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	pop    rax
   14000a109:	add    DWORD PTR [rax],0x0
   14000a10c:	adc    BYTE PTR [rax+rax*1+0x0],ah
   14000a113:	add    BYTE PTR [rax],al
   14000a115:	add    BYTE PTR [rax],al
   14000a117:	add    BYTE PTR [rdx+0x100000aa],dl
   14000a11d:	(bad)  
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	xor    BYTE PTR [rbx+0x0],ah
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	add    BYTE PTR [rax],al
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	mov    eax,0x300000ab
   14000a131:	add    DWORD PTR [rax],0xa3e800
	...
   14000a13f:	add    dh,al
   14000a141:	stos   DWORD PTR es:[rdi],eax
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	call   0xf000a1ca
   14000a149:	movabs ds:0x0,eax
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	call   0xf000a204
   14000a159:	add    DWORD PTR [rax],0xa38000
	...
   14000a167:	add    BYTE PTR [rdx],dl
   14000a169:	lods   al,BYTE PTR ds:[rsi]
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	add    BYTE PTR [rcx-0x5c280000],0x0
	...
   14000a17b:	add    BYTE PTR [rsp+rbp*4],bh
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	fadd   DWORD PTR [rcx-0x5c080000]
	...
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	(bad)  
   14000a191:	lods   al,BYTE PTR ds:[rsi]
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	clc    
   14000a195:	add    DWORD PTR [rax],0xa39800
	...
   14000a1a3:	add    BYTE PTR [rsp+rbp*4-0x7e680000],al
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	jo     0x14000a151
	...
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	scas   al,BYTE PTR es:[rdi]
   14000a1b9:	lods   al,BYTE PTR ds:[rsi]
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	jo     0x14000a13f
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	movabs ds:0x0,rax
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	and    ch,BYTE PTR [rbp-0x7eb80000]
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	add    BYTE PTR [rdx+0x0],ah
   14000a1da:	add    BYTE PTR [rax],al
   14000a1dc:	add    BYTE PTR [rax],al
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	(bad)  
   14000a1e1:	mov    al,0x0
   14000a1e3:	add    BYTE PTR [rax],al
   14000a1e5:	add    BYTE PTR [rax],0x0
	...
   14000a200:	in     al,0xad
   14000a202:	add    BYTE PTR [rax],al
   14000a204:	add    BYTE PTR [rax],al
   14000a206:	add    BYTE PTR [rax],al
   14000a208:	out    dx,al
   14000a209:	scas   eax,DWORD PTR es:[rdi]
   14000a20a:	add    BYTE PTR [rax],al
   14000a20c:	add    BYTE PTR [rax],al
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	(bad)  
   14000a211:	scas   eax,DWORD PTR es:[rdi]
   14000a212:	add    BYTE PTR [rax],al
   14000a214:	add    BYTE PTR [rax],al
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	(bad)  
   14000a219:	scas   eax,DWORD PTR es:[rdi]
   14000a21a:	add    BYTE PTR [rax],al
   14000a21c:	add    BYTE PTR [rax],al
   14000a21e:	add    BYTE PTR [rax],al
   14000a220:	ss scas eax,DWORD PTR es:[rdi]
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	add    BYTE PTR [rax],al
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	cld    
   14000a229:	scas   al,BYTE PTR es:[rdi]
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	add    BYTE PTR [rax],al
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	(bad)  
   14000a231:	scas   al,BYTE PTR es:[rdi]
   14000a232:	add    BYTE PTR [rax],al
   14000a234:	add    BYTE PTR [rax],al
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	(bad)  
   14000a239:	scas   al,BYTE PTR es:[rdi]
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	add    BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	cmp    ch,BYTE PTR [rsi+0x0]
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	movabs al,ds:0xb2000000000000ad
   14000a251:	lods   eax,DWORD PTR ds:[rsi]
   14000a252:	add    BYTE PTR [rax],al
   14000a254:	add    BYTE PTR [rax],al
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	shr    BYTE PTR [rbp+0x0],0x0
   14000a25f:	add    ah,dl
   14000a261:	lods   eax,DWORD PTR ds:[rsi]
	...
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	(bad)  
   14000a271:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a272:	add    BYTE PTR [rax],al
   14000a274:	add    BYTE PTR [rax],al
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	out    dx,al
   14000a279:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a27a:	add    BYTE PTR [rax],al
   14000a27c:	add    BYTE PTR [rax],al
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	(bad)  
   14000a281:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a282:	add    BYTE PTR [rax],al
   14000a284:	add    BYTE PTR [rax],al
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	adc    al,0xa7
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	add    BYTE PTR [rax],al
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	(bad)  
   14000a291:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a292:	add    BYTE PTR [rax],al
   14000a294:	add    BYTE PTR [rax],al
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	cmp    ah,BYTE PTR [rdi+0x0]
   14000a29e:	add    BYTE PTR [rax],al
   14000a2a0:	push   rdx
   14000a2a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	add    BYTE PTR [rax],al
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	push   0xa7
   14000a2ad:	add    BYTE PTR [rax],al
   14000a2af:	add    BYTE PTR [rsi-0x59],dh
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	add    BYTE PTR [rax],al
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	mov    ah,0xa6
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	add    BYTE PTR [rax],al
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	pushf  
   14000a2c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a2c2:	add    BYTE PTR [rax],al
   14000a2c4:	add    BYTE PTR [rax],al
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	mov    ah,BYTE PTR [rsi+0x0]
   14000a2ce:	add    BYTE PTR [rax],al
   14000a2d0:	outs   dx,BYTE PTR ds:[rsi]
   14000a2d1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	add    BYTE PTR [rax],al
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	pop    rdx
   14000a2d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a2da:	add    BYTE PTR [rax],al
   14000a2dc:	add    BYTE PTR [rax],al
   14000a2de:	add    BYTE PTR [rax],al
   14000a2e0:	rex.R cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a2e2:	add    BYTE PTR [rax],al
   14000a2e4:	add    BYTE PTR [rax],al
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	cmp    BYTE PTR [rsi+0x0],ah
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	and    ah,BYTE PTR [rsi+0x0]
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	or     al,0xa6
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	add    BYTE PTR [rax],al
   14000a2fe:	add    BYTE PTR [rax],al
   14000a300:	cli    
   14000a301:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a302:	add    BYTE PTR [rax],al
   14000a304:	add    BYTE PTR [rax],al
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	fsub   DWORD PTR [rbp+0x0]
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	shl    BYTE PTR [rbp+0x0],0x0
   14000a317:	add    BYTE PTR [rdi+riz*4],ch
   14000a31a:	add    BYTE PTR [rax],al
   14000a31c:	add    BYTE PTR [rax],al
   14000a31e:	add    BYTE PTR [rax],al
   14000a320:	mov    al,0xa5
	...
   14000a32e:	add    BYTE PTR [rax],al
   14000a330:	(bad)  
   14000a331:	add    BYTE PTR [rax],al
   14000a333:	add    BYTE PTR [rax],al
   14000a335:	add    BYTE PTR [rax],al
   14000a337:	add    BYTE PTR [rsi],0x0
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	add    BYTE PTR [rax],al
   14000a33e:	add    BYTE PTR [rax+0x0],al
   14000a344:	add    BYTE PTR [rax],al
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	(bad)  
   14000a349:	lods   eax,DWORD PTR ds:[rsi]
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	add    BYTE PTR [rax],al
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	cli    
   14000a351:	lods   al,BYTE PTR ds:[rsi]
   14000a352:	add    BYTE PTR [rax],al
   14000a354:	add    BYTE PTR [rax],al
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	(bad)  
   14000a359:	lods   al,BYTE PTR ds:[rsi]
   14000a35a:	add    BYTE PTR [rax],al
   14000a35c:	add    BYTE PTR [rax],al
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	(bad)  
   14000a361:	lods   al,BYTE PTR ds:[rsi]
	...
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	cwde   
   14000a371:	stos   DWORD PTR es:[rdi],eax
	...
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	(bad)  
   14000a381:	stos   BYTE PTR es:[rdi],al
   14000a382:	add    BYTE PTR [rax],al
   14000a384:	add    BYTE PTR [rax],al
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	(bad)  
   14000a389:	stos   BYTE PTR es:[rdi],al
	...
   14000a396:	add    BYTE PTR [rax],al
   14000a398:	stos   BYTE PTR es:[rdi],al
   14000a399:	stos   DWORD PTR es:[rdi],eax
   14000a39a:	add    BYTE PTR [rax],al
   14000a39c:	add    BYTE PTR [rax],al
   14000a39e:	add    BYTE PTR [rax],al
   14000a3a0:	mov    ch,BYTE PTR [rbx+0x0]
	...
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	or     BYTE PTR [rbx+0x0],ch
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	sbb    al,0xab
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	add    BYTE PTR [rax],al
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	mov    esp,0xaa
   14000a3c5:	add    BYTE PTR [rax],al
   14000a3c7:	add    BYTE PTR [rdx-0x55],cl
	...
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	xor    BYTE PTR [rbx+0x0],ch
	...
   14000a3e6:	add    BYTE PTR [rax],al
   14000a3e8:	mov    ah,0xaa
	...
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	(bad)  
   14000a3f9:	stos   DWORD PTR es:[rdi],eax
   14000a3fa:	add    BYTE PTR [rax],al
   14000a3fc:	add    BYTE PTR [rax],al
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	jp     0x14000a3ad
	...
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	sub    BYTE PTR [rdx+0x0],0x0
   14000a417:	add    BYTE PTR [rax-0x56],dh
	...
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	mov    eax,0xa7
   14000a42d:	add    BYTE PTR [rax],al
   14000a42f:	add    BYTE PTR [rsi+0xa7],dl
   14000a435:	add    BYTE PTR [rax],al
   14000a437:	add    BYTE PTR [rax+rbp*4],dh
   14000a43a:	add    BYTE PTR [rax],al
   14000a43c:	add    BYTE PTR [rax],al
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	fsub   DWORD PTR [rdi+0x0]
   14000a446:	add    BYTE PTR [rax],al
   14000a448:	clc    
   14000a449:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a44a:	add    BYTE PTR [rax],al
   14000a44c:	add    BYTE PTR [rax],al
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	adc    ch,BYTE PTR [rax+0x0]
	...
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	push   0xa8
   14000a465:	add    BYTE PTR [rax],al
   14000a467:	add    BYTE PTR [rax-0x58],bh
   14000a46a:	add    BYTE PTR [rax],al
   14000a46c:	add    BYTE PTR [rax],al
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	(bad)  
   14000a471:	test   al,0x0
   14000a473:	add    BYTE PTR [rax],al
   14000a475:	add    BYTE PTR [rax],al
   14000a477:	add    BYTE PTR [rax],ah
   14000a479:	mov    al,0x0
   14000a47b:	add    BYTE PTR [rax],al
   14000a47d:	add    BYTE PTR [rax],al
   14000a47f:	add    BYTE PTR [rsi],dh
   14000a481:	mov    al,0x0
   14000a483:	add    BYTE PTR [rax],al
   14000a485:	add    BYTE PTR [rax],al
   14000a487:	add    BYTE PTR [rax-0x50],al
   14000a48a:	add    BYTE PTR [rax],al
   14000a48c:	add    BYTE PTR [rax],al
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	mov    dh,0xa9
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	add    BYTE PTR [rax],al
   14000a496:	add    BYTE PTR [rax],al
   14000a498:	lods   al,BYTE PTR ds:[rsi]
   14000a499:	test   eax,0x0
   14000a49e:	add    BYTE PTR [rax],al
   14000a4a0:	sahf   
   14000a4a1:	test   eax,0x0
   14000a4a6:	add    BYTE PTR [rax],al
   14000a4a8:	xchg   esp,eax
   14000a4a9:	test   eax,0x0
   14000a4ae:	add    BYTE PTR [rax],al
   14000a4b0:	mov    ch,BYTE PTR [rax+0x0]
   14000a4b6:	add    BYTE PTR [rax],al
   14000a4b8:	js     0x14000a463
   14000a4ba:	add    BYTE PTR [rax],al
   14000a4bc:	add    BYTE PTR [rax],al
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	(bad)  
   14000a4c1:	test   eax,0x0
   14000a4c6:	add    BYTE PTR [rax],al
   14000a4c8:	push   rsi
   14000a4c9:	test   eax,0x0
   14000a4ce:	add    BYTE PTR [rax],al
   14000a4d0:	rex.WR test rax,0x0
   14000a4d6:	add    BYTE PTR [rax],al
   14000a4d8:	xor    al,0xa9
   14000a4da:	add    BYTE PTR [rax],al
   14000a4dc:	add    BYTE PTR [rax],al
   14000a4de:	add    BYTE PTR [rax],al
   14000a4e0:	sub    BYTE PTR [rcx+0x0],ch
   14000a4e6:	add    BYTE PTR [rax],al
   14000a4e8:	adc    al,0xa9
   14000a4ea:	add    BYTE PTR [rax],al
   14000a4ec:	add    BYTE PTR [rax],al
   14000a4ee:	add    BYTE PTR [rax],al
   14000a4f0:	or     ch,BYTE PTR [rcx+0x0]
   14000a4f6:	add    BYTE PTR [rax],al
   14000a4f8:	add    ch,BYTE PTR [rcx+0x0]
   14000a4fe:	add    BYTE PTR [rax],al
   14000a500:	cli    
   14000a501:	test   al,0x0
   14000a503:	add    BYTE PTR [rax],al
   14000a505:	add    BYTE PTR [rax],al
   14000a507:	add    al,ch
   14000a509:	test   al,0x0
   14000a50b:	add    BYTE PTR [rax],al
   14000a50d:	add    BYTE PTR [rax],al
   14000a50f:	add    BYTE PTR [rsi],ch
   14000a511:	lods   eax,DWORD PTR ds:[rsi]
   14000a512:	add    BYTE PTR [rax],al
   14000a514:	add    BYTE PTR [rax],al
   14000a516:	add    BYTE PTR [rax],al
   14000a518:	(bad)  
   14000a519:	test   al,0x0
   14000a51b:	add    BYTE PTR [rax],al
   14000a51d:	add    BYTE PTR [rax],al
   14000a51f:	add    al,cl
   14000a521:	test   al,0x0
   14000a523:	add    BYTE PTR [rax],al
   14000a525:	add    BYTE PTR [rax],al
   14000a527:	add    BYTE PTR [rdx+0xa8],bh
   14000a52d:	add    BYTE PTR [rax],al
   14000a52f:	add    BYTE PTR [rsi+0xa8],ch
   14000a535:	add    BYTE PTR [rax],al
   14000a537:	add    BYTE PTR [rdx+0xa8],ah
   14000a53d:	add    BYTE PTR [rax],al
   14000a53f:	add    BYTE PTR [rax+rbp*4+0x0],dl
   14000a546:	add    BYTE PTR [rax],al
   14000a548:	mov    WORD PTR [rcx+0x0],gs
	...
   14000a556:	add    BYTE PTR [rax],al
   14000a558:	outs   dx,BYTE PTR ds:[rsi]
   14000a559:	lods   eax,DWORD PTR ds:[rsi]
   14000a55a:	add    BYTE PTR [rax],al
   14000a55c:	add    BYTE PTR [rax],al
   14000a55e:	add    BYTE PTR [rax],al
   14000a560:	rex.R lods eax,DWORD PTR ds:[rsi]
   14000a562:	add    BYTE PTR [rax],al
   14000a564:	add    BYTE PTR [rax],al
   14000a566:	add    BYTE PTR [rax],al
   14000a568:	push   rdx
   14000a569:	stos   BYTE PTR es:[rdi],al
   14000a56a:	add    BYTE PTR [rax],al
   14000a56c:	add    BYTE PTR [rax],al
   14000a56e:	add    BYTE PTR [rax],al
   14000a570:	cmp    BYTE PTR [rdx+0x0],ch
   14000a576:	add    BYTE PTR [rax],al
   14000a578:	and    al,0xaa
	...
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	or     BYTE PTR [rdx+0x0],ch
   14000a58e:	add    BYTE PTR [rax],al
   14000a590:	imul   BYTE PTR [rcx+0x0]
   14000a596:	add    BYTE PTR [rax],al
   14000a598:	loop   0x14000a543
   14000a59a:	add    BYTE PTR [rax],al
   14000a59c:	add    BYTE PTR [rax],al
   14000a59e:	add    BYTE PTR [rax],al
   14000a5a0:	(bad)  
   14000a5a1:	test   eax,0x0
	...
   14000a5ae:	add    BYTE PTR [rax],al
   14000a5b0:	iret   
   14000a5b1:	add    BYTE PTR [rbx+0x72],al
   14000a5b4:	gs (bad) 
   14000a5b6:	je     0x14000a61d
   14000a5b8:	rex.WRB jne 0x14000a62f
   14000a5bb:	gs js  0x14000a615
   14000a5be:	add    BYTE PTR [rax],al
   14000a5c0:	xchg   BYTE PTR [rax],al
   14000a5c2:	rex.XB ins BYTE PTR es:[rdi],dx
   14000a5c4:	outs   dx,DWORD PTR ds:[rsi]
   14000a5c5:	jae    0x14000a62c
   14000a5c7:	push   rsp
   14000a5c8:	push   0x64616572
   14000a5cd:	jo     0x14000a63e
   14000a5cf:	outs   dx,DWORD PTR ds:[rsi]
   14000a5d0:	ins    BYTE PTR es:[rdi],dx
   14000a5d1:	push   rsp
   14000a5d2:	imul   ebp,DWORD PTR [rbp+0x65],0xcb000072
   14000a5d9:	add    eax,0x74696157
   14000a5de:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000a5e0:	jb     0x14000a636
   14000a5e2:	push   0x64616572
   14000a5e7:	jo     0x14000a658
   14000a5e9:	outs   dx,DWORD PTR ds:[rsi]
   14000a5ea:	ins    BYTE PTR es:[rdi],dx
   14000a5eb:	push   rsp
   14000a5ec:	imul   ebp,DWORD PTR [rbp+0x65],0x6c614372
   14000a5f3:	ins    BYTE PTR es:[rdi],dx
   14000a5f4:	(bad)  
   14000a5f6:	movsxd ebp,DWORD PTR [rbx+0x73]
   14000a5f9:	add    BYTE PTR [rsi+0x616f4c03],ch
   14000a5ff:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000a608:	js     0x14000a661
   14000a60a:	add    BYTE PTR [rax],al
   14000a60c:	push   rdi
   14000a60d:	add    eax,0x54746553
   14000a612:	push   0x64616572
   14000a617:	jo     0x14000a688
   14000a619:	outs   dx,DWORD PTR ds:[rsi]
   14000a61a:	ins    BYTE PTR es:[rdi],dx
   14000a61b:	push   rsp
   14000a61c:	imul   ebp,DWORD PTR [rbp+0x65],0x6d000072
   14000a623:	add    al,BYTE PTR [rdi+0x65]
   14000a626:	je     0x14000a675
   14000a628:	outs   dx,DWORD PTR ds:[rsi]
   14000a629:	fs jne 0x14000a698
   14000a62c:	gs rex.W (bad) 
   14000a62f:	outs   dx,BYTE PTR ds:[rsi]
   14000a630:	fs ins BYTE PTR es:[rdi],dx
   14000a632:	gs rex.RB js 0x14000a68d
   14000a636:	add    BYTE PTR [rax],al
   14000a638:	or     BYTE PTR [rip+0x45746553],al        # 0x185750b91
   14000a63e:	jbe    0x14000a6a5
   14000a640:	outs   dx,BYTE PTR ds:[rsi]
   14000a641:	je     0x14000a643
   14000a643:	add    BYTE PTR [rdx],al
   14000a645:	add    al,0x4f
   14000a647:	jne    0x14000a6bd
   14000a649:	jo     0x14000a6c0
   14000a64b:	je     0x14000a691
   14000a64d:	gs (bad) 
   14000a64f:	jne    0x14000a6b8
   14000a651:	push   rbx
   14000a652:	je     0x14000a6c6
   14000a654:	imul   ebp,DWORD PTR [rsi+0x67],0x6e000057
   14000a65b:	add    al,BYTE PTR [rdi+0x65]
   14000a65e:	je     0x14000a6ad
   14000a660:	outs   dx,DWORD PTR ds:[rsi]
   14000a661:	fs jne 0x14000a6d0
   14000a664:	gs rex.W (bad) 
   14000a667:	outs   dx,BYTE PTR ds:[rsi]
   14000a668:	fs ins BYTE PTR es:[rdi],dx
   14000a66a:	gs push rdi
   14000a66c:	add    BYTE PTR [rax],al
   14000a66e:	push   rsp
   14000a66f:	add    ecx,DWORD PTR [rcx+0x6e]
   14000a672:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000a67a:	rex.XB jb 0x14000a6e6
   14000a67d:	je     0x14000a6e8
   14000a67f:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a682:	push   rbx
   14000a683:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000a688:	outs   dx,BYTE PTR ds:[rsi]
   14000a689:	add    BYTE PTR [rax+0x726f4601],ah
   14000a68f:	ins    DWORD PTR es:[rdi],dx
   14000a690:	(bad)  
   14000a691:	je     0x14000a6e0
   14000a693:	gs jae 0x14000a709
   14000a696:	(bad)  
   14000a697:	addr32 gs push rdi
   14000a69a:	add    BYTE PTR [rax],al
   14000a69c:	test   eax,0x61654c03
   14000a6a1:	jbe    0x14000a708
   14000a6a3:	rex.XB jb 0x14000a70f
   14000a6a6:	je     0x14000a711
   14000a6a8:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a6ab:	push   rbx
   14000a6ac:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000a6b1:	outs   dx,BYTE PTR ds:[rsi]
   14000a6b2:	add    BYTE PTR [rax],al
   14000a6b4:	push   rdi
   14000a6b5:	add    al,BYTE PTR [rdi+0x65]
   14000a6b8:	je     0x14000a706
   14000a6ba:	(bad)  
   14000a6bb:	jae    0x14000a731
   14000a6bd:	rex.RB jb 0x14000a732
   14000a6c0:	outs   dx,DWORD PTR ds:[rsi]
   14000a6c1:	jb     0x14000a6c3
   14000a6c3:	add    BYTE PTR [rbp+0x74654702],ah
   14000a6c9:	push   rax
   14000a6ca:	jb     0x14000a73b
   14000a6cc:	movsxd eax,DWORD PTR [rcx+0x64]
   14000a6cf:	fs jb  0x14000a737
   14000a6d2:	jae    0x14000a747
   14000a6d4:	add    BYTE PTR [rax],al
   14000a6d6:	sub    DWORD PTR [rcx],eax
   14000a6d8:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000a6da:	je     0x14000a741
   14000a6dc:	jb     0x14000a721
   14000a6de:	jb     0x14000a749
   14000a6e0:	je     0x14000a74b
   14000a6e2:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a6e5:	push   rbx
   14000a6e6:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000a6eb:	outs   dx,BYTE PTR ds:[rsi]
   14000a6ec:	add    BYTE PTR [rax],al
   14000a6ee:	mov    ah,0x0
   14000a6f0:	rex.XB jb 0x14000a758
   14000a6f3:	(bad)  
   14000a6f4:	je     0x14000a75b
   14000a6f6:	rex.RB jbe 0x14000a75e
   14000a6f9:	outs   dx,BYTE PTR ds:[rsi]
   14000a6fa:	je     0x14000a753
   14000a6fc:	add    BYTE PTR [rax],al
   14000a6fe:	imul   eax,DWORD PTR [rdx],0x4d746547
   14000a704:	outs   dx,DWORD PTR ds:[rsi]
   14000a705:	fs jne 0x14000a774
   14000a708:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14000a712:	add    BYTE PTR [rax],al
   14000a714:	(bad)  
   14000a715:	add    BYTE PTR [rbx+0x72],al
   14000a718:	gs (bad) 
   14000a71a:	je     0x14000a781
   14000a71c:	push   rsp
   14000a71d:	push   0x64616572
   14000a722:	jo     0x14000a793
   14000a724:	outs   dx,DWORD PTR ds:[rsi]
   14000a725:	ins    BYTE PTR es:[rdi],dx
   14000a726:	push   rsp
   14000a727:	imul   ebp,DWORD PTR [rbp+0x65],0x3ea0072
   14000a72e:	rex.WRXB jo 0x14000a796
   14000a731:	outs   dx,BYTE PTR ds:[rsi]
   14000a732:	rex.RB jbe 0x14000a79a
   14000a735:	outs   dx,BYTE PTR ds:[rsi]
   14000a736:	je     0x14000a78f
   14000a738:	add    BYTE PTR [rax],al
   14000a73a:	add    eax,0x6c654401
   14000a73f:	gs je  0x14000a7a7
   14000a742:	rex.XB jb 0x14000a7ae
   14000a745:	je     0x14000a7b0
   14000a747:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a74a:	push   rbx
   14000a74b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000a750:	outs   dx,BYTE PTR ds:[rsi]
   14000a751:	add    BYTE PTR [rip+0x74654702],dl        # 0x1b465ee59
   14000a757:	rex.XB jne 0x14000a7cc
   14000a75a:	jb     0x14000a7c1
   14000a75c:	outs   dx,BYTE PTR ds:[rsi]
   14000a75d:	je     0x14000a7b3
   14000a75f:	push   0x64616572
   14000a764:	rex.WB
   14000a765:	add    BYTE PTR fs:[rax],al
   14000a768:	jge    0x14000a76a
   14000a76a:	rex.XB ins BYTE PTR es:[rdi],dx
   14000a76c:	outs   dx,DWORD PTR ds:[rsi]
   14000a76d:	jae    0x14000a7d4
   14000a76f:	rex.W (bad) 
   14000a771:	outs   dx,BYTE PTR ds:[rsi]
   14000a772:	fs ins BYTE PTR es:[rdi],dx
   14000a774:	gs add dh,bh
   14000a777:	add    al,BYTE PTR [rdi+0x65]
   14000a77a:	je     0x14000a7d0
   14000a77c:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000a783:	je     0x14000a7bb
   14000a785:	xor    al,0x0
   14000a787:	add    BYTE PTR [rbx+0x45],cl
   14000a78a:	push   rdx
   14000a78b:	rex.WRX
   14000a78c:	rex.RB
   14000a78d:	xor    r14,QWORD PTR [rdx]
   14000a790:	cs fs ins BYTE PTR es:[rdi],dx
   14000a793:	ins    BYTE PTR es:[rdi],dx
   14000a794:	add    BYTE PTR [rax],al
   14000a796:	jl     0x14000a79a
   14000a798:	(bad)  
   14000a799:	pop    rdi
   14000a79a:	pop    rax
   14000a79b:	(bad)
   14000a7a0:	jne    0x14000a810
   14000a7a2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000a7a6:	outs   dx,BYTE PTR ds:[rsi]
   14000a7a7:	pop    rdi
   14000a7a8:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a7ab:	ins    BYTE PTR es:[rdi],dx
   14000a7ac:	rex jae 0x14000a823
   14000a7af:	fs rex
   14000a7b1:	rex pop rcx
   14000a7b3:	pop    r8
   14000a7b5:	pop    rax
   14000a7b6:	pop    rdx
   14000a7b7:	add    BYTE PTR [rdi+0x2],dh
   14000a7ba:	(bad)  
   14000a7bb:	pop    rdi
   14000a7bc:	push   rdi
   14000a7bd:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   14000a7c4:	pop    rdi
   14000a7c5:	ins    DWORD PTR es:[rdi],dx
   14000a7c6:	(bad)  
   14000a7c7:	jo     0x14000a809
   14000a7c9:	jae    0x14000a83f
   14000a7cb:	fs rex
   14000a7cd:	rex pop rcx
   14000a7cf:	push   r8
   14000a7d1:	rex.RB
   14000a7d2:	rex.X
   14000a7d3:	rex.R
   14000a7d4:	rex.W
   14000a7d5:	rex pop rdx
   14000a7d7:	add    BYTE PTR [rdi+0x2],ah
   14000a7da:	(bad)  
   14000a7db:	pop    rdi
   14000a7dc:	push   rbx
   14000a7dd:	jns    0x14000a852
   14000a7df:	gs jb  0x14000a854
   14000a7e2:	outs   dx,DWORD PTR ds:[rsi]
   14000a7e3:	jb     0x14000a844
   14000a7e5:	ins    DWORD PTR es:[rdi],dx
   14000a7e6:	(bad)  
   14000a7e7:	jo     0x14000a829
   14000a7e9:	jae    0x14000a85f
   14000a7eb:	fs rex
   14000a7ed:	rex pop rcx
   14000a7ef:	push   r8
   14000a7f1:	rex.RB
   14000a7f2:	rex.X
   14000a7f3:	rex.R
   14000a7f4:	rex.W
   14000a7f5:	rex pop rdx
   14000a7f7:	add    BYTE PTR [rbx+0x2],bh
   14000a7fa:	(bad)  
   14000a7fb:	pop    rdi
   14000a7fc:	pop    rax
   14000a7fd:	(bad)
   14000a802:	ins    BYTE PTR es:[rdi],dx
   14000a803:	ins    BYTE PTR es:[rdi],dx
   14000a804:	outs   dx,DWORD PTR ds:[rsi]
   14000a805:	movsxd eax,DWORD PTR [rax+0x73]
   14000a808:	je     0x14000a86e
   14000a80a:	rex
   14000a80b:	rex pop rcx
   14000a80d:	pop    r8
   14000a80f:	pop    rax
   14000a810:	pop    rdx
   14000a811:	add    BYTE PTR [rdi+0x2],bh
   14000a814:	(bad)  
   14000a815:	pop    rdi
   14000a816:	pop    rax
   14000a817:	outs   dx,DWORD PTR ds:[rsi]
   14000a818:	jne    0x14000a88e
   14000a81a:	pop    rdi
   14000a81b:	outs   dx,DWORD PTR ds:[rsi]
   14000a81c:	pop    di
   14000a81e:	jb     0x14000a881
   14000a820:	outs   dx,BYTE PTR ds:[rsi]
   14000a821:	addr32 gs rex jae 0x14000a89a
   14000a826:	fs rex
   14000a828:	rex pop rcx
   14000a82a:	pop    r8
   14000a82c:	push   rax
   14000a82d:	rex.RB
   14000a82e:	rex.X
   14000a82f:	rex.R
   14000a830:	rex pop rdx
   14000a832:	add    BYTE PTR [rax],al
   14000a834:	jle    0x14000a838
   14000a836:	(bad)  
   14000a837:	pop    rdi
   14000a838:	pop    rax
   14000a839:	ins    BYTE PTR es:[rdi],dx
   14000a83a:	outs   dx,BYTE PTR gs:[rsi]
   14000a83c:	addr32 je 0x14000a8a7
   14000a83f:	pop    rdi
   14000a840:	gs jb  0x14000a8b5
   14000a843:	outs   dx,DWORD PTR ds:[rsi]
   14000a844:	jb     0x14000a886
   14000a846:	jae    0x14000a8bc
   14000a848:	fs rex
   14000a84a:	rex pop rcx
   14000a84c:	pop    r8
   14000a84e:	push   rax
   14000a84f:	rex.RB
   14000a850:	rex.X
   14000a851:	rex.R
   14000a852:	rex pop rdx
   14000a854:	add    BYTE PTR [rax],al
   14000a856:	ins    DWORD PTR es:[rdi],dx
   14000a857:	jae    0x14000a8cf
   14000a859:	movsxd esi,DWORD PTR [rax+0x31]
   14000a85c:	xor    DWORD PTR [rax],esi
   14000a85e:	pop    rdi
   14000a85f:	ja     0x14000a8ca
   14000a861:	outs   dx,BYTE PTR ds:[rsi]
   14000a862:	cs fs ins BYTE PTR es:[rdi],dx
   14000a865:	ins    BYTE PTR es:[rdi],dx
   14000a866:	add    BYTE PTR [rax],al
   14000a868:	adc    al,0x0
   14000a86a:	(bad)  
   14000a86b:	(bad)  
   14000a86c:	xor    eax,DWORD PTR [rax+0x59]
   14000a86f:	pop    r8
   14000a871:	push   rax
   14000a872:	rex.RB
   14000a873:	pop    r8
   14000a875:	rex pop rdx
   14000a877:	add    BYTE PTR [rsp+rax*1+0x6d6d656d],dl
   14000a87e:	outs   dx,DWORD PTR ds:[rsi]
   14000a87f:	jbe    0x14000a8e6
   14000a881:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000a885:	jb     0x14000a8ec
   14000a887:	add    BYTE PTR gs:[rax],al
   14000a88a:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000a891:	movsxd eax,DWORD PTR [rax]
   14000a893:	add    BYTE PTR [rcx+0x3],ch
   14000a896:	pop    rdi
   14000a897:	jbe    0x14000a90c
   14000a899:	outs   dx,BYTE PTR ds:[rsi]
   14000a89a:	ja     0x14000a90c
   14000a89c:	jb     0x14000a907
   14000a89e:	outs   dx,BYTE PTR ds:[rsi]
   14000a89f:	je     0x14000a907
   14000a8a1:	add    BYTE PTR [rsi+0x75705f02],bl
   14000a8a7:	jb     0x14000a90e
   14000a8a9:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a8ac:	ins    BYTE PTR es:[rdi],dx
   14000a8ad:	add    BYTE PTR [rdi+0x61635f00],bh
   14000a8b3:	ins    BYTE PTR es:[rdi],dx
   14000a8b4:	ins    BYTE PTR es:[rdi],dx
   14000a8b5:	outs   dx,BYTE PTR ds:[rsi]
   14000a8b6:	gs ja  0x14000a921
   14000a8b9:	add    BYTE PTR [rbp+0x0],dl
   14000a8bc:	pop    rdi
   14000a8bd:	pop    rax
   14000a8be:	movsxd esi,DWORD PTR [rax+0x74]
   14000a8c1:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000a8ca:	pop    rdi
   14000a8cb:	(bad)  
   14000a8cc:	ins    DWORD PTR es:[rdi],dx
   14000a8cd:	jae    0x14000a936
   14000a8cf:	pop    rdi
   14000a8d0:	gs js  0x14000a93c
   14000a8d3:	je     0x14000a8d5
   14000a8d5:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000a8db:	addr32 gs je 0x14000a94c
   14000a8df:	(bad)  
   14000a8e0:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000a8e7:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000a8ed:	gs je  0x14000a94f
   14000a8f0:	(bad)  
   14000a8f1:	jo     0x14000a963
   14000a8f3:	pop    rdi
   14000a8f4:	je     0x14000a96f
   14000a8f6:	jo     0x14000a95d
   14000a8f8:	add    BYTE PTR [rax],al
   14000a8fa:	xor    al,BYTE PTR [riz*2+0x746978]
   14000a901:	add    BYTE PTR [rsi],cl
   14000a903:	add    DWORD PTR [rdi+0x65],ebx
   14000a906:	js     0x14000a971
   14000a908:	je     0x14000a90a
   14000a90a:	rol    DWORD PTR [rax],0x5f
   14000a90d:	movsxd esp,DWORD PTR [rbp+0x78]
   14000a910:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000a918:	jae    0x14000a97f
   14000a91a:	je     0x14000a991
   14000a91c:	jae    0x14000a983
   14000a91e:	jb     0x14000a98d
   14000a920:	(bad)  
   14000a921:	je     0x14000a98b
   14000a923:	gs jb  0x14000a998
   14000a926:	add    BYTE PTR [rax],al
   14000a928:	jge    0x14000a92b
   14000a92a:	pop    rdi
   14000a92b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000a932:	ins    DWORD PTR es:[rdi],dx
   14000a933:	add    BYTE PTR [rdi+0x0],dl
   14000a936:	pop    rdi
   14000a937:	pop    rdi
   14000a938:	rex.XB pop r15
   14000a93a:	jae    0x14000a9ac
   14000a93c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000a940:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000a947:	ins    BYTE PTR es:[rdi],dx
   14000a948:	gs jb  0x14000a94b
   14000a94b:	add    BYTE PTR [rdx+0x63775f03],al
   14000a951:	ins    DWORD PTR es:[rdi],dx
   14000a952:	fs ins BYTE PTR es:[rdi],dx
   14000a954:	outs   dx,BYTE PTR ds:[rsi]
   14000a955:	add    BYTE PTR [rdi],ah
   14000a957:	add    DWORD PTR [rdi+0x66],ebx
   14000a95a:	ins    DWORD PTR es:[rdi],dx
   14000a95b:	outs   dx,DWORD PTR ds:[rsi]
   14000a95c:	fs add BYTE PTR gs:[rax],al
   14000a960:	rol    BYTE PTR [rax],cl
   14000a962:	pop    rdi
   14000a963:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a966:	ins    DWORD PTR es:[rdi],dx
   14000a967:	outs   dx,DWORD PTR ds:[rsi]
   14000a968:	fs add BYTE PTR gs:[rax],al
   14000a96c:	ins    DWORD PTR es:[rdi],dx
   14000a96d:	jae    0x14000a9e5
   14000a96f:	movsxd esi,DWORD PTR [rdx+0x74]
   14000a972:	cs fs ins BYTE PTR es:[rdi],dx
   14000a975:	ins    BYTE PTR es:[rdi],dx
   14000a976:	add    BYTE PTR [rax],al
   14000a978:	(bad)  
   14000a979:	add    BYTE PTR [rdi],bh
   14000a97b:	je     0x14000a9e2
   14000a97d:	jb     0x14000a9ec
   14000a97f:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000a986:	pop    rcx
   14000a987:	pop    r8
   14000a989:	pop    rax
   14000a98a:	pop    rdx
   14000a98b:	add    dh,ah
   14000a98d:	add    DWORD PTR [rdi+0x6c],ebx
   14000a990:	outs   dx,DWORD PTR ds:[rsi]
   14000a991:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a994:	add    ebx,DWORD PTR [r15+0x75]
   14000a998:	outs   dx,BYTE PTR ds:[rsi]
   14000a999:	ins    BYTE PTR es:[rdi],dx
   14000a99a:	outs   dx,DWORD PTR ds:[rsi]
   14000a99b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a99e:	jnp    0x14000a9a0
   14000a9a0:	pop    rdi
   14000a9a1:	pop    rdi
   14000a9a2:	fs ins BYTE PTR es:[rdi],dx
   14000a9a4:	ins    BYTE PTR es:[rdi],dx
   14000a9a5:	outs   dx,DWORD PTR ds:[rsi]
   14000a9a6:	outs   dx,BYTE PTR ds:[rsi]
   14000a9a7:	gs js  0x14000aa13
   14000a9aa:	je     0x14000a9ac
   14000a9ac:	nop
   14000a9ad:	add    bl,BYTE PTR [rdi+0x6f]
   14000a9b0:	outs   dx,BYTE PTR ds:[rsi]
   14000a9b1:	gs js  0x14000aa1d
   14000a9b4:	je     0x14000a9b6
   14000a9b6:	adc    al,BYTE PTR [rax]
   14000a9b8:	(bad)  
   14000a9b9:	(bad)  
   14000a9ba:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000a9be:	gs pop rdi
   14000a9c0:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000a9c7:	rex.RB
   14000a9c8:	rex.B
   14000a9c9:	rex.B
   14000a9ca:	rex pop rax
   14000a9cc:	pop    rdx
   14000a9cd:	add    BYTE PTR [rbx],ch
   14000a9cf:	add    BYTE PTR [rbx+0x6f],al
   14000a9d2:	rex.XB jb 0x14000aa3a
   14000a9d5:	(bad)  
   14000a9d6:	je     0x14000aa3d
   14000a9d8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a9da:	jae    0x14000aa50
   14000a9dc:	(bad)  
   14000a9dd:	outs   dx,BYTE PTR ds:[rsi]
   14000a9de:	movsxd esp,DWORD PTR [rbp+0x0]
   14000a9e1:	add    BYTE PTR [rdi+0x536f4300],al
   14000a9e7:	gs je  0x14000aa3a
   14000a9ea:	jb     0x14000aa5b
   14000a9ec:	js     0x14000aa67
   14000a9ee:	rex.X ins BYTE PTR es:[rdi],dx
   14000a9f0:	(bad)  
   14000a9f1:	outs   dx,BYTE PTR ds:[rsi]
   14000a9f2:	imul   esp,DWORD PTR [rbp+0x74],0x0
   14000a9f6:	nop
   14000a9f7:	add    BYTE PTR [rbx+0x6f],al
   14000a9fa:	push   rbp
   14000a9fb:	outs   dx,BYTE PTR ds:[rsi]
   14000a9fc:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000aa03:	imul   edi,DWORD PTR [rdx+0x65],0x610000
   14000aa0a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000aa0c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000aa0e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000aa16:	rex.RB js 0x14000aa19
   14000aa19:	add    BYTE PTR [rdi+0x6c],ch
   14000aa1c:	xor    esi,DWORD PTR gs:[rdx]
   14000aa1f:	cs fs ins BYTE PTR es:[rdi],dx
   14000aa22:	ins    BYTE PTR es:[rdi],dx
   14000aa23:	add    dh,al
   14000aa25:	add    dl,BYTE PTR [rdx+0x74]
   14000aa28:	ins    BYTE PTR es:[rdi],dx
   14000aa29:	rex.XB (bad) 
   14000aa2b:	jo     0x14000aaa1
   14000aa2d:	jne    0x14000aaa1
   14000aa2f:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000aa32:	outs   dx,BYTE PTR ds:[rsi]
   14000aa33:	je     0x14000aa9a
   14000aa35:	js     0x14000aaab
   14000aa37:	add    BYTE PTR [rdi+0x4],dh
   14000aa3a:	push   rdx
   14000aa3b:	je     0x14000aaa9
   14000aa3d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000aa3f:	outs   dx,DWORD PTR ds:[rsi]
   14000aa40:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000aa44:	jne    0x14000aab4
   14000aa46:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000aa4a:	outs   dx,BYTE PTR ds:[rsi]
   14000aa4b:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000aa4d:	je     0x14000aac1
   14000aa4f:	jns    0x14000aa51
   14000aa51:	add    BYTE PTR [rbx+0x6c745205],cl
   14000aa57:	push   rsi
   14000aa58:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000aa5f:	outs   dx,BYTE PTR ds:[rsi]
   14000aa60:	ja     0x14000aacb
   14000aa62:	outs   dx,BYTE PTR ds:[rsi]
   14000aa63:	add    BYTE PTR fs:[rax],al
   14000aa66:	outs   dx,BYTE PTR ds:[rsi]
   14000aa67:	je     0x14000aacd
   14000aa69:	ins    BYTE PTR es:[rdi],dx
   14000aa6a:	ins    BYTE PTR es:[rdi],dx
   14000aa6b:	cs fs ins BYTE PTR es:[rdi],dx
   14000aa6e:	ins    BYTE PTR es:[rdi],dx
   14000aa6f:	add    BYTE PTR [rbx],al
   14000aa71:	add    BYTE PTR [rdx+0x6f],dl
   14000aa74:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000aa76:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000aa7e:	add    BYTE PTR [rax],al
   14000aa80:	(bad)  
   14000aa81:	add    BYTE PTR [rdx+0x6f],dl
   14000aa84:	push   rbp
   14000aa85:	outs   dx,BYTE PTR ds:[rsi]
   14000aa86:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000aa8d:	imul   edi,DWORD PTR [rdx+0x65],0x70610000
   14000aa94:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e1e0b
   14000aa9e:	outs   dx,DWORD PTR ds:[rsi]
   14000aa9f:	jb     0x14000ab06
   14000aaa1:	sub    eax,0x726e6977
   14000aaa6:	je     0x14000aad5
   14000aaa8:	ins    BYTE PTR es:[rdi],dx
   14000aaa9:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30d7e0
   14000aaaf:	fs ins BYTE PTR es:[rdi],dx
   14000aab1:	ins    BYTE PTR es:[rdi],dx
   14000aab2:	add    BYTE PTR [rax],al
   14000aab4:	sub    eax,0x656c5300
   14000aab9:	gs jo  0x14000aabc
   14000aabc:	and    BYTE PTR [rax],al
   14000aabe:	rex.RXB
   14000aabf:	gs je  0x14000ab15
   14000aac2:	je     0x14000ab25
   14000aac4:	jb     0x14000ab3a
   14000aac6:	jne    0x14000ab38
   14000aac8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000aaca:	outs   dx,WORD PTR ds:[rsi]
   14000aacc:	push   rdi
   14000aacd:	add    BYTE PTR [rcx],dl
   14000aacf:	add    BYTE PTR [rbp+0x6e],dl
   14000aad2:	push   0x6c646e61
   14000aad7:	gs fs rex.RB js 0x14000ab3f
   14000aadc:	gs jo  0x14000ab53
   14000aadf:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000aae6:	gs jb  0x14000aae9
   14000aae9:	add    BYTE PTR [rdi],cl
   14000aaeb:	add    BYTE PTR [rbx+0x65],dl
   14000aaee:	je     0x14000ab45
   14000aaf0:	outs   dx,BYTE PTR ds:[rsi]
   14000aaf1:	push   0x6c646e61
   14000aaf6:	gs fs rex.RB js 0x14000ab5e
   14000aafb:	gs jo  0x14000ab72
   14000aafe:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000ab05:	gs jb  0x14000ab08
   14000ab08:	or     al,0x0
   14000ab0a:	rex.RXB
   14000ab0b:	gs je  0x14000ab51
   14000ab0e:	jne    0x14000ab82
   14000ab10:	jb     0x14000ab77
   14000ab12:	outs   dx,BYTE PTR ds:[rsi]
   14000ab13:	je     0x14000ab65
   14000ab15:	jb     0x14000ab86
   14000ab17:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ab1a:	jae    0x14000ab1c
   14000ab1c:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000ab21:	ins    DWORD PTR es:[rdi],dx
   14000ab22:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000ab29:	outs   dx,DWORD PTR ds:[rsi]
   14000ab2a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ab2d:	jae    0x14000ab2f
   14000ab2f:	add    BYTE PTR [rax],al
   14000ab31:	add    BYTE PTR [rcx+0x75],dl
   14000ab34:	gs jb  0x14000abb0
   14000ab37:	push   rax
   14000ab38:	gs jb  0x14000aba1
   14000ab3b:	outs   dx,DWORD PTR ds:[rsi]
   14000ab3c:	jb     0x14000abab
   14000ab3e:	(bad)  
   14000ab3f:	outs   dx,BYTE PTR ds:[rsi]
   14000ab40:	movsxd esp,DWORD PTR [rbp+0x43]
   14000ab43:	outs   dx,DWORD PTR ds:[rsi]
   14000ab44:	jne    0x14000abb4
   14000ab46:	je     0x14000abad
   14000ab48:	jb     0x14000ab4a
   14000ab4a:	or     eax,0x74654700
   14000ab4f:	rex.XB jne 0x14000abc4
   14000ab52:	jb     0x14000abb9
   14000ab54:	outs   dx,BYTE PTR ds:[rsi]
   14000ab55:	je     0x14000aba7
   14000ab57:	jb     0x14000abc8
   14000ab59:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ab5c:	jae    0x14000aba7
   14000ab5e:	add    BYTE PTR fs:[rax+rax*1],dl
   14000ab62:	rex.RXB
   14000ab63:	gs je  0x14000abb9
   14000ab66:	jns    0x14000abdb
   14000ab68:	je     0x14000abcf
   14000ab6a:	ins    DWORD PTR es:[rdi],dx
   14000ab6b:	push   rsp
   14000ab6c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000ab73:	ins    BYTE PTR es:[rdi],dx
   14000ab74:	gs push rsp
   14000ab76:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000ab7d:	gs je  0x14000abd4
   14000ab80:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000ab87:	je     0x14000ab89
   14000ab89:	add    BYTE PTR [rbx],cl
   14000ab8b:	add    BYTE PTR [rsi+0x72],al
   14000ab8e:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000ab98:	add    BYTE PTR ds:[rbx+0x6f],al
   14000ab9c:	push   rsp
   14000ab9d:	(bad)  
   14000ab9e:	jae    0x14000ac0b
   14000aba0:	rex.WRB
   14000aba1:	gs ins DWORD PTR es:[rdi],dx
   14000aba3:	rex.B ins BYTE PTR es:[rdi],dx
   14000aba5:	ins    BYTE PTR es:[rdi],dx
   14000aba6:	outs   dx,DWORD PTR ds:[rsi]
   14000aba7:	movsxd eax,DWORD PTR [rax]
   14000aba9:	add    BYTE PTR [rbx],bl
   14000abab:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000abaf:	fs push rbx
   14000abb1:	je     0x14000ac25
   14000abb3:	imul   ebp,DWORD PTR [rsi+0x67],0x4c4f0057
   14000abba:	rex.RB
   14000abbb:	push   r13
   14000abbd:	push   rsp
   14000abbe:	xor    esi,DWORD PTR [rdx]
   14000abc0:	cs fs ins BYTE PTR es:[rdi],dx
   14000abc3:	ins    BYTE PTR es:[rdi],dx
   14000abc4:	add    BYTE PTR [rax],al
   14000abc6:	(bad)  
   14000abc7:	jo     0x14000ac32
   14000abc9:	sub    eax,0x772d736d
   14000abce:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000abd5:	sub    eax,0x636e7973
   14000abda:	push   0x2d316c2d
   14000abdf:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64da15
   14000abe5:	ins    BYTE PTR es:[rdi],dx
   14000abe6:	add    BYTE PTR [rax],al
   14000abe8:	(bad)  
   14000abe9:	jo     0x14000ac54
   14000abeb:	sub    eax,0x772d736d
   14000abf0:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000abf7:	sub    eax,0x636f7270
   14000abfc:	gs jae 0x14000ac72
   14000abff:	je     0x14000ac69
   14000ac01:	jb     0x14000ac68
   14000ac03:	(bad)  
   14000ac04:	fs jae 0x14000ac34
   14000ac07:	ins    BYTE PTR es:[rdi],dx
   14000ac08:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32d93f
   14000ac0e:	fs ins BYTE PTR es:[rdi],dx
   14000ac10:	ins    BYTE PTR es:[rdi],dx
   14000ac11:	add    BYTE PTR [rcx+0x70],ah
   14000ac14:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e1f8b
   14000ac1e:	outs   dx,DWORD PTR ds:[rsi]
   14000ac1f:	jb     0x14000ac86
   14000ac21:	sub    eax,0x6f727265
   14000ac26:	jb     0x14000ac90
   14000ac28:	(bad)  
   14000ac29:	outs   dx,BYTE PTR ds:[rsi]
   14000ac2a:	fs ins BYTE PTR es:[rdi],dx
   14000ac2c:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000ac33:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64da6a
   14000ac39:	ins    BYTE PTR es:[rdi],dx
   14000ac3a:	add    BYTE PTR [rax],al
   14000ac3c:	(bad)  
   14000ac3d:	jo     0x14000aca8
   14000ac3f:	sub    eax,0x772d736d
   14000ac44:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ac4b:	sub    eax,0x666f7270
   14000ac50:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000ac58:	sub    eax,0x6c642e30
   14000ac5d:	ins    BYTE PTR es:[rdi],dx
   14000ac5e:	add    BYTE PTR [rax],al
   14000ac60:	(bad)  
   14000ac61:	jo     0x14000accc
   14000ac63:	sub    eax,0x772d736d
   14000ac68:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ac6f:	sub    eax,0x69737973
   14000ac74:	outs   dx,BYTE PTR ds:[rsi]
   14000ac75:	outs   dx,WORD PTR ds:[rsi]
   14000ac77:	sub    eax,0x322d316c
   14000ac7c:	sub    eax,0x6c642e31
   14000ac81:	ins    BYTE PTR es:[rdi],dx
   14000ac82:	add    BYTE PTR [rax],al
   14000ac84:	(bad)  
   14000ac85:	jo     0x14000acf0
   14000ac87:	sub    eax,0x772d736d
   14000ac8c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ac93:	sub    eax,0x7262696c
   14000ac98:	(bad)  
   14000ac99:	jb     0x14000ad14
   14000ac9b:	ins    BYTE PTR es:[rdi],dx
   14000ac9c:	outs   dx,DWORD PTR ds:[rsi]
   14000ac9d:	(bad)  
   14000ac9e:	fs gs jb 0x14000accf
   14000aca2:	ins    BYTE PTR es:[rdi],dx
   14000aca3:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30d9db
   14000aca9:	fs ins BYTE PTR es:[rdi],dx
   14000acab:	ins    BYTE PTR es:[rdi],dx
   14000acac:	add    BYTE PTR [rax],al
   14000acae:	(bad)  
   14000acaf:	jo     0x14000ad1a
   14000acb1:	sub    eax,0x772d736d
   14000acb6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000acbd:	sub    eax,0x2d6d6f63
   14000acc2:	ins    BYTE PTR es:[rdi],dx
   14000acc3:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31d9fa
   14000acc9:	fs ins BYTE PTR es:[rdi],dx
   14000accb:	ins    BYTE PTR es:[rdi],dx
   14000accc:	add    BYTE PTR [rax],al
   14000acce:	add    cl,BYTE PTR [ebp+0x73]
   14000acd2:	addr32 push rdi
   14000acd4:	(bad)  
   14000acd5:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6c754d72
   14000acdd:	je     0x14000ad48
   14000acdf:	jo     0x14000ad4d
   14000ace1:	gs rex.WRXB (bad) 
   14000ace4:	push   0x65
   14000ace6:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000acea:	jg     0x14000acee
   14000acec:	push   rax
   14000aced:	gs imul ecx,DWORD PTR gs:[rbp+0x65],0x73
   14000acf3:	jae    0x14000ad56
   14000acf5:	addr32 gs push rdi
   14000acf8:	add    BYTE PTR [rax],al
   14000acfa:	imul   eax,DWORD PTR [rbx],0x54
   14000acfd:	jb     0x14000ad60
   14000acff:	outs   dx,BYTE PTR ds:[rsi]
   14000ad00:	jae    0x14000ad6e
   14000ad02:	(bad)  
   14000ad03:	je     0x14000ad6a
   14000ad05:	rex.WRB
   14000ad06:	gs jae 0x14000ad7c
   14000ad09:	(bad)  
   14000ad0a:	add    BYTE PTR gs:[eax],al
   14000ad0e:	mov    dh,0x0
   14000ad10:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14000ad18:	rex.WRB
   14000ad19:	gs jae 0x14000ad8f
   14000ad1c:	(bad)  
   14000ad1d:	addr32 gs push rdi
   14000ad20:	add    BYTE PTR [rax],al
   14000ad22:	push   rbp
   14000ad23:	push   rbx
   14000ad24:	rex.RB push r10
   14000ad26:	xor    esi,DWORD PTR [rdx]
   14000ad28:	cs fs ins BYTE PTR es:[rdi],dx
   14000ad2b:	ins    BYTE PTR es:[rdi],dx
   14000ad2c:	add    BYTE PTR [rax],al
   14000ad2e:	pop    rbx
   14000ad2f:	add    BYTE PTR [rdi+0x5f],bl
   14000ad32:	rex.XB js 0x14000adad
   14000ad35:	rex.RX jb 0x14000ad99
   14000ad38:	ins    DWORD PTR es:[rdi],dx
   14000ad39:	gs rex.W (bad) 
   14000ad3c:	outs   dx,BYTE PTR ds:[rsi]
   14000ad3d:	fs ins BYTE PTR es:[rdi],dx
   14000ad3f:	gs jb  0x14000ad75
   14000ad42:	add    BYTE PTR [rax],al
   14000ad44:	ds add eax,0x536c7452
   14000ad4a:	jne    0x14000adae
   14000ad4c:	jae    0x14000adb1
   14000ad4e:	jb     0x14000adb9
   14000ad50:	(bad)  
   14000ad51:	gs push rdi
   14000ad53:	outs   dx,BYTE PTR ds:[rsi]
   14000ad54:	push   bx
   14000ad56:	je     0x14000adb9
   14000ad58:	je     0x14000adbf
   14000ad5a:	rex.XB push 0x65676e61
   14000ad60:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000ad62:	je     0x14000adcd
   14000ad64:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000ad6a:	outs   dx,DWORD PTR ds:[rsi]
   14000ad6b:	outs   dx,BYTE PTR ds:[rsi]
   14000ad6c:	add    BYTE PTR [rax],al
   14000ad6e:	outs   dx,DWORD PTR ds:[rsi]
   14000ad6f:	add    eax,0x556c7452
   14000ad74:	outs   dx,BYTE PTR ds:[rsi]
   14000ad75:	jae    0x14000adec
   14000ad77:	(bad)  
   14000ad79:	movsxd esi,DWORD PTR [rdx+0x69]
   14000ad7c:	(bad)  
   14000ad7d:	gs push rdi
   14000ad7f:	outs   dx,BYTE PTR ds:[rsi]
   14000ad80:	data16 rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000ad83:	je     0x14000adee
   14000ad85:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000ad8b:	outs   dx,DWORD PTR ds:[rsi]
   14000ad8c:	outs   dx,BYTE PTR ds:[rsi]
   14000ad8d:	push   rdi
   14000ad8e:	(bad)  
   14000ad8f:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6d6f4372
   14000ad97:	jo     0x14000ae05
   14000ad99:	gs je  0x14000ae05
   14000ad9c:	outs   dx,DWORD PTR ds:[rsi]
   14000ad9d:	outs   dx,BYTE PTR ds:[rsi]
   14000ad9e:	add    BYTE PTR [rax],al
   14000ada0:	or     eax,0x696e4910
   14000ada5:	je     0x14000adf7
   14000ada7:	jb     0x14000ae18
   14000ada9:	movsxd esp,DWORD PTR [rbp+0x73]
   14000adac:	jae    0x14000adfe
   14000adae:	jb     0x14000ae19
   14000adb0:	jbe    0x14000adb2
   14000adb2:	(bad)  
   14000adb3:	adc    BYTE PTR [rcx+0x6e],cl
   14000adb6:	imul   esi,DWORD PTR [rsp+rdx*2+0x68],0x64616572
   14000adbe:	add    BYTE PTR [rax],al
   14000adc0:	sub    edx,DWORD PTR [rax]
   14000adc2:	push   rbp
   14000adc3:	outs   dx,BYTE PTR ds:[rsi]
   14000adc4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000adc6:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   14000adce:	jae    0x14000ae20
   14000add0:	jb     0x14000ae3b
   14000add2:	jbe    0x14000add4
   14000add4:	sub    al,0x10
   14000add6:	push   rbp
   14000add7:	outs   dx,BYTE PTR ds:[rsi]
   14000add8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000adda:	imul   esi,DWORD PTR [rsp+rdx*2+0x68],0x64616572
   14000ade2:	add    BYTE PTR [rax],al
   14000ade4:	jrcxz  0x14000ade9
   14000ade6:	(bad)  
   14000ade7:	rex.XB jb 0x14000ae4f
   14000adea:	(bad)  
   14000adeb:	je     0x14000ae52
   14000aded:	rex
   14000adee:	rex.R push rbp
   14000adf0:	rex.WB pop r8
   14000adf2:	ins    DWORD PTR es:[rdi],dx
   14000adf3:	ins    BYTE PTR es:[rdi],dx
   14000adf4:	push   rax
   14000adf5:	(bad)  
   14000adf6:	jb     0x14000ae6b
   14000adf8:	gs jb  0x14000ae3b
   14000adfb:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   14000ae03:	rex
   14000ae04:	rex push rbx
   14000ae06:	rex.B
   14000ae07:	rex.WX push rax
   14000ae09:	rex.RB
   14000ae0a:	push   r8
   14000ae0c:	rex.RB
   14000ae0d:	push   r14
   14000ae0f:	xor    DWORD PTR [rdx],esi
   14000ae11:	rex push rax
   14000ae13:	ss push r8
   14000ae16:	rex.RB
   14000ae17:	push   r14
   14000ae19:	push   rsi
   14000ae1a:	(bad)  
   14000ae1b:	ins    BYTE PTR es:[rdi],dx
   14000ae1c:	jne    0x14000ae83
   14000ae1e:	xor    al,BYTE PTR [rax+0x50]
   14000ae22:	rex.RB
   14000ae23:	rex.X
   14000ae24:	rex.RXB push r8
   14000ae26:	rex.RB
   14000ae27:	pop    r8
   14000ae29:	rex pop rdx
   14000ae2b:	xor    dl,BYTE PTR [rax+0x36]
   14000ae2e:	pop    r8
   14000ae30:	xor    DWORD PTR [rcx],esi
   14000ae32:	rex.W xor al,BYTE PTR [rax+0x5a]
   14000ae36:	xor    al,BYTE PTR [rax+0x5a]
   14000ae39:	add    bh,cl
   14000ae3b:	or     eax,0x7465533f
   14000ae40:	pop    rax
   14000ae41:	rex.WRB
   14000ae42:	rex.WR
   14000ae43:	rex.RX jb 0x14000aeb5
   14000ae46:	ins    DWORD PTR es:[rdi],dx
   14000ae47:	push   rdx
   14000ae48:	gs jae 0x14000aeba
   14000ae4b:	jne    0x14000aebf
   14000ae4d:	movsxd esp,DWORD PTR [rbp+0x40]
   14000ae50:	rex.R push rbp
   14000ae52:	rex.WB pop r8
   14000ae54:	ins    DWORD PTR es:[rdi],dx
   14000ae55:	ins    BYTE PTR es:[rdi],dx
   14000ae56:	push   rax
   14000ae57:	(bad)  
   14000ae58:	jb     0x14000aecd
   14000ae5a:	gs jb  0x14000ae9d
   14000ae5d:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   14000ae65:	rex
   14000ae66:	rex push rcx
   14000ae68:	rex.RB
   14000ae69:	rex.B
   14000ae6a:	rex.B
   14000ae6b:	rex.WX
   14000ae6c:	rex.WB push r8
   14000ae6e:	rex.RB
   14000ae6f:	push   r13
   14000ae71:	rex.W
   14000ae72:	rex.WB
   14000ae73:	rex.WRX push rbx
   14000ae75:	push   rsp
   14000ae76:	rex.B
   14000ae77:	rex.WRX
   14000ae78:	rex.XB
   14000ae79:	rex.RB pop r15
   14000ae7b:	pop    rdi
   14000ae7c:	rex
   14000ae7d:	xor    BYTE PTR [rax+0x5a],al
   14000ae81:	add    BYTE PTR [rdx+0x4],ch
   14000ae84:	(bad)  
   14000ae85:	rex.XB jb 0x14000aeed
   14000ae88:	(bad)  
   14000ae89:	je     0x14000aef0
   14000ae8b:	rex.RB ins BYTE PTR es:[rdi],dx
   14000ae8d:	gs ins DWORD PTR es:[rdi],dx
   14000ae8f:	outs   dx,BYTE PTR gs:[rsi]
   14000ae91:	je     0x14000aed3
   14000ae93:	rex.R push rbp
   14000ae95:	rex.WB pop r8
   14000ae97:	ins    DWORD PTR es:[rdi],dx
   14000ae98:	ins    BYTE PTR es:[rdi],dx
   14000ae99:	push   rax
   14000ae9a:	(bad)  
   14000ae9b:	jb     0x14000af10
   14000ae9d:	gs jb  0x14000aee0
   14000aea0:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   14000aea8:	rex
   14000aea9:	rex push rcx
   14000aeab:	rex.RB
   14000aeac:	rex.B
   14000aead:	rex.B
   14000aeae:	rex.WX push rax
   14000aeb0:	rex.RB
   14000aeb1:	rex.X
   14000aeb2:	rex.RXB push r8
   14000aeb4:	rex.RB
   14000aeb5:	push   r14
   14000aeb7:	rex.RB ins BYTE PTR es:[rdi],dx
   14000aeb9:	gs ins DWORD PTR es:[rdi],dx
   14000aebb:	outs   dx,BYTE PTR gs:[rsi]
   14000aebd:	je     0x14000aeff
   14000aebf:	xor    al,BYTE PTR [rax+0x31]
   14000aec2:	push   rax
   14000aec3:	rex.RB
   14000aec4:	rex.B
   14000aec5:	rex.WXB push r8
   14000aec7:	rex.RB
   14000aec8:	push   r8
   14000aeca:	rex.RB
   14000aecb:	push   r14
   14000aecd:	xor    esi,DWORD PTR [rdx]
   14000aecf:	rex
   14000aed0:	rex pop rdx
   14000aed2:	add    BYTE PTR [rax],al
   14000aed4:	xor    DWORD PTR [rdi],ecx
   14000aed6:	(bad)  
   14000aed7:	pop    rdi
   14000aed8:	pop    rdx
   14000aed9:	gs jb  0x14000af4b
   14000aedc:	push   rdx
   14000aedd:	gs ins BYTE PTR es:[rdi],dx
   14000aedf:	gs (bad) 
   14000aee1:	jae    0x14000af48
   14000aee3:	rex push rsi
   14000aee5:	(bad)  
   14000aee6:	ins    BYTE PTR es:[rdi],dx
   14000aee7:	jne    0x14000af4e
   14000aee9:	rex
   14000aeea:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   14000aef2:	rex
   14000aef3:	rex
   14000aef4:	rex.B
   14000aef5:	rex.RB
   14000aef6:	rex.B
   14000aef7:	pop    r8
   14000aef9:	pop    rax
   14000aefa:	pop    rdx
   14000aefb:	add    BYTE PTR [rax+0x6f433f03],ah
   14000af01:	outs   dx,BYTE PTR ds:[rsi]
   14000af02:	je     0x14000af69
   14000af04:	outs   dx,BYTE PTR ds:[rsi]
   14000af05:	je     0x14000af57
   14000af07:	jb     0x14000af78
   14000af09:	jo     0x14000af4b
   14000af0b:	rex.RB ins BYTE PTR es:[rdi],dx
   14000af0d:	gs ins DWORD PTR es:[rdi],dx
   14000af0f:	outs   dx,BYTE PTR gs:[rsi]
   14000af11:	je     0x14000af53
   14000af13:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   14000af1b:	rex
   14000af1c:	rex push rbx
   14000af1e:	push   r8
   14000af20:	rex.RB
   14000af21:	rex.X push rbp
   14000af23:	push   rax
   14000af24:	jb     0x14000af95
   14000af26:	jo     0x14000af8d
   14000af28:	jb     0x14000af9e
   14000af2a:	jns    0x14000af75
   14000af2c:	outs   dx,BYTE PTR ds:[rsi]
   14000af2d:	outs   dx,WORD PTR ds:[rsi]
   14000af2f:	xor    al,BYTE PTR [rax+0x58]
   14000af33:	pop    rdx
   14000af34:	add    BYTE PTR [rax],al
   14000af36:	mov    ebx,0x65533f0d
   14000af3b:	je     0x14000af93
   14000af3d:	(bad)  
   14000af3e:	ins    BYTE PTR es:[rdi],dx
   14000af3f:	jne    0x14000afa6
   14000af41:	rex
   14000af42:	rex.RB ins BYTE PTR es:[rdi],dx
   14000af44:	gs ins DWORD PTR es:[rdi],dx
   14000af46:	outs   dx,BYTE PTR gs:[rsi]
   14000af48:	je     0x14000af8a
   14000af4a:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   14000af52:	rex
   14000af53:	rex push rcx
   14000af55:	rex.RB
   14000af56:	rex.B
   14000af57:	rex.B
   14000af58:	rex.WX push rax
   14000af5a:	ss push r8
   14000af5d:	rex.RB
   14000af5e:	rex.X push rbp
   14000af60:	push   rax
   14000af61:	jb     0x14000afd2
   14000af63:	jo     0x14000afca
   14000af65:	jb     0x14000afdb
   14000af67:	jns    0x14000afb2
   14000af69:	outs   dx,BYTE PTR ds:[rsi]
   14000af6a:	outs   dx,WORD PTR ds:[rsi]
   14000af6c:	xor    al,BYTE PTR [rax+0x58]
   14000af70:	pop    rdx
   14000af71:	rex.W push rax
   14000af73:	rex.RB
   14000af74:	push   r14
   14000af76:	push   rsi
   14000af77:	(bad)  
   14000af78:	ins    BYTE PTR es:[rdi],dx
   14000af79:	jne    0x14000afe0
   14000af7b:	xor    al,BYTE PTR [rax+0x40]
   14000af7f:	pop    rdx
   14000af80:	add    BYTE PTR [rax],al
   14000af82:	xchg   ecx,eax
   14000af83:	add    al,0x3f
   14000af85:	rex.XB jb 0x14000afed
   14000af88:	(bad)  
   14000af89:	je     0x14000aff0
   14000af8b:	push   rbx
   14000af8c:	je     0x14000b000
   14000af8e:	imul   ebp,DWORD PTR [rsi+0x67],0x6c615640
   14000af95:	jne    0x14000affc
   14000af97:	rex
   14000af98:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   14000afa0:	rex
   14000afa1:	rex push rbx
   14000afa3:	push   r8
   14000afa5:	rex.RB
   14000afa6:	push   r14
   14000afa8:	xor    DWORD PTR [rdx],esi
   14000afaa:	rex push rax
   14000afac:	rex.RB
   14000afad:	rex.X
   14000afae:	rex.RXB push r8
   14000afb0:	rex.RB
   14000afb1:	push   r13
   14000afb3:	rex.W
   14000afb4:	rex.WB
   14000afb5:	rex.WRX push rbx
   14000afb7:	push   rsp
   14000afb8:	rex.B
   14000afb9:	rex.WRX
   14000afba:	rex.XB
   14000afbb:	rex.RB pop r15
   14000afbd:	pop    rdi
   14000afbe:	rex
   14000afbf:	rex
   14000afc0:	rex pop rdx
   14000afc2:	add    BYTE PTR [rax],al
   14000afc4:	mov    bh,0x4
   14000afc6:	(bad)  
   14000afc7:	rex.R
   14000afc8:	gs jae 0x14000b03f
   14000afcb:	jb     0x14000b03c
   14000afcd:	jns    0x14000b00f
   14000afcf:	rex.R push rbp
   14000afd1:	rex.WB pop r8
   14000afd3:	ins    DWORD PTR es:[rdi],dx
   14000afd4:	ins    BYTE PTR es:[rdi],dx
   14000afd5:	push   rax
   14000afd6:	(bad)  
   14000afd7:	jb     0x14000b04c
   14000afd9:	gs jb  0x14000b01c
   14000afdc:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   14000afe4:	rex
   14000afe5:	rex push rcx
   14000afe7:	rex.RB
   14000afe8:	rex.B
   14000afe9:	pop    r8
   14000afeb:	pop    rax
   14000afec:	pop    rdx
   14000afed:	add    BYTE PTR [rax+0x65443f04],bh
   14000aff3:	jae    0x14000b069
   14000aff5:	jb     0x14000b066
   14000aff7:	jns    0x14000b039
   14000aff9:	rex.RB ins BYTE PTR es:[rdi],dx
   14000affb:	gs ins DWORD PTR es:[rdi],dx
   14000affd:	outs   dx,BYTE PTR gs:[rsi]
   14000afff:	je     0x14000b041
   14000b001:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   14000b009:	rex
   14000b00a:	rex push rcx
   14000b00c:	rex.RB
   14000b00d:	rex.B
   14000b00e:	rex.B
   14000b00f:	rex.WX pop rdi
   14000b011:	rex.WRX
   14000b012:	rex pop rdx
   14000b014:	add    BYTE PTR [rax],al
   14000b016:	rex.R push rbp
   14000b018:	rex.WB (bad) 
   14000b01a:	xor    BYTE PTR [rsi],ch
   14000b01c:	fs ins BYTE PTR es:[rdi],dx
   14000b01e:	ins    BYTE PTR es:[rdi],dx
   14000b01f:	add    BYTE PTR [rbx+0x0],cl
   14000b022:	pop    rdi
   14000b023:	rex.XB js 0x14000b09e
   14000b026:	push   rsp
   14000b027:	push   0x45776f72
   14000b02c:	js     0x14000b091
   14000b02e:	gs jo  0x14000b0a5
   14000b031:	imul   ebp,DWORD PTR [rdi+0x6e],0x4920000
   14000b038:	ins    DWORD PTR es:[rdi],dx
   14000b039:	gs ins DWORD PTR es:[rdi],dx
   14000b03b:	movsxd esi,DWORD PTR [rax+0x79]
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	xchg   esi,eax
   14000b041:	add    al,0x6d
   14000b043:	gs ins DWORD PTR es:[rdi],dx
   14000b045:	jae    0x14000b0ac
   14000b047:	je     0x14000b049
	...

Disassembly of section .data:

000000014000c000 <.data>:
   14000c000:	add    DWORD PTR [rax],eax
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	add    BYTE PTR [rax],al
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	int    0x5d
   14000c012:	and    dl,dl
   14000c014:	data16 (bad) 
   14000c016:	(bad)  
   14000c017:	inc    DWORD PTR [rax]
   14000c019:	add    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rax],al
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rcx],al
   14000c021:	add    BYTE PTR [rax],al
   14000c023:	add    BYTE PTR [rax],al
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	add    al,bh
   14000c029:	lea    eax,[rax]
   14000c02b:	rex add DWORD PTR [rax],eax
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	sub    BYTE PTR [rsi+0x14000],cl
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	add    DWORD PTR [rax],eax
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	add    BYTE PTR [rax],al
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	jo     0x14000bfcf
   14000c042:	add    BYTE PTR [rax+0x1],al
	...
   14000c04d:	add    BYTE PTR [rax],al
   14000c04f:	add    BYTE PTR [rax],ah
   14000c051:	test   DWORD PTR [rax],eax
   14000c053:	rex add DWORD PTR [rax],eax
	...
   14000c05e:	add    BYTE PTR [rax],al
   14000c060:	cs (bad) 
   14000c062:	push   r14
   14000c064:	cmp    al,0x6c
   14000c066:	(bad)  
   14000c067:	ins    DWORD PTR es:[rdi],dx
   14000c068:	(bad)  
   14000c069:	fs (bad) 
   14000c06b:	pop    rdi
   14000c06c:	(bad)  
   14000c06d:	xor    eax,0x31656431
   14000c072:	movsxd esp,DWORD PTR [rdx+0x39]
   14000c075:	movsxd esi,DWORD PTR [rbx]
   14000c077:	xor    BYTE PTR [rbx],dh
   14000c079:	cmp    BYTE PTR ss:[rcx+0x63],ah
   14000c07d:	xor    esp,DWORD PTR [rcx+0x38]
   14000c080:	cmp    DWORD PTR [rbx+0x64],esp
   14000c083:	xor    ah,BYTE PTR [rcx+0x65]
   14000c086:	cmp    BYTE PTR [rax],dh
   14000c088:	xor    esi,DWORD PTR [rip+0x403e3330]        # 0x1803ef3be
   14000c08e:	add    BYTE PTR [rax],spl
   14000c091:	test   DWORD PTR [rax],eax
   14000c093:	rex add DWORD PTR [rax],eax
	...
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	cs (bad) 
   14000c0a2:	push   r14
   14000c0a4:	push   rdx
   14000c0a5:	gs jae 0x14000c11d
   14000c0a8:	ins    BYTE PTR es:[rdi],dx
   14000c0a9:	je     0x14000c0f0
   14000c0ab:	js     0x14000c110
   14000c0ad:	gs jo  0x14000c124
   14000c0b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c697740
   14000c0b7:	rex
   14000c0b8:	add    BYTE PTR [rax],al
   14000c0bb:	add    BYTE PTR [rax],al
   14000c0bd:	add    BYTE PTR [rax],al
   14000c0bf:	add    BYTE PTR [rax],ah
   14000c0c1:	test   DWORD PTR [rax],eax
   14000c0c3:	rex add DWORD PTR [rax],eax
	...
   14000c0ce:	add    BYTE PTR [rax],al
   14000c0d0:	cs (bad) 
   14000c0d2:	push   r14
   14000c0d4:	(bad)  
   14000c0d5:	and    al,0x5f
   14000c0d7:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x30302440
   14000c0df:	pop    rax
   14000c0e0:	push   rbp
   14000c0e1:	(bad)  
   14000c0e2:	and    al,0x5f
   14000c0e4:	push   rax
   14000c0e5:	ins    DWORD PTR es:[rdi],dx
   14000c0e6:	pop    di
   14000c0e8:	ja     0x14000c15c
   14000c0ea:	(bad)  
   14000c0eb:	jo     0x14000c12d
   14000c0ed:	push   rax
   14000c0ee:	cmp    BYTE PTR [rcx+0x63],al
   14000c0f1:	je     0x14000c15c
   14000c0f3:	outs   dx,DWORD PTR ds:[rsi]
   14000c0f4:	outs   dx,BYTE PTR ds:[rsi]
   14000c0f5:	imul   r12d,DWORD PTR [rcx+0x6c],0x614d676f
   14000c0fd:	outs   dx,BYTE PTR ds:[rsi]
   14000c0fe:	(bad)  
   14000c0ff:	addr32 gs jb 0x14000c143
   14000c103:	rex
   14000c104:	rex.RB
   14000c105:	rex.B
   14000c106:	pop    r8
   14000c108:	push   rax
   14000c109:	rex.RB
   14000c10a:	rex.X pop rax
   14000c10c:	rex.WXB
   14000c10d:	rex pop rdx
   14000c10f:	pop    rax
   14000c110:	push   rsi
   14000c111:	xor    DWORD PTR [rax+0x50],eax
   14000c114:	rex.RB
   14000c115:	rex.X pop rax
   14000c117:	rex.WXB push r13
   14000c119:	pop    rdi
   14000c11a:	imul   r13,QWORD PTR [rax+r8*2+0x73],0x40406474
   14000c123:	push   rbp
   14000c124:	xor    dh,BYTE PTR [rbx]
   14000c126:	rex push rbp
   14000c128:	xor    dh,BYTE PTR [rbx]
   14000c12a:	rex push rbp
   14000c12c:	xor    dh,BYTE PTR [rbx]
   14000c12e:	rex push rbp
   14000c130:	xor    dh,BYTE PTR [rbx]
   14000c132:	rex
   14000c133:	rex jae 0x14000c1aa
   14000c136:	fs rex
   14000c138:	rex push rcx
   14000c13a:	rex.RB
   14000c13b:	push   r14
   14000c13d:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14000c142:	outs   dx,BYTE PTR ds:[rsi]
   14000c143:	imul   r12d,DWORD PTR [rcx+0x6c],0x614d676f
   14000c14b:	outs   dx,BYTE PTR ds:[rsi]
   14000c14c:	(bad)  
   14000c14d:	addr32 gs jb 0x14000c191
   14000c151:	rex
   14000c152:	rex.B
   14000c153:	rex.RB
   14000c154:	push   r14
   14000c156:	(bad)  
   14000c157:	and    al,0x5f
   14000c159:	push   rax
   14000c15a:	push   0x30302440
   14000c15f:	xor    al,BYTE PTR [rax+0x41]
   14000c163:	rex.RB
   14000c164:	push   r14
   14000c166:	(bad)  
   14000c167:	and    al,0x5f
   14000c169:	push   rax
   14000c16a:	push   0x31302440
   14000c16f:	xor    al,BYTE PTR [rax+0x55]
   14000c173:	pop    rdi
   14000c174:	imul   r13,QWORD PTR [rax+r8*2+0x32],0x32365540
   14000c17d:	rex push rbp
   14000c17f:	xor    al,BYTE PTR ss:[rax+0x55]
   14000c183:	xor    al,BYTE PTR ss:[rax+0x40]
   14000c187:	jae    0x14000c1fd
   14000c189:	fs rex
   14000c18b:	add    BYTE PTR [rax],al
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	and    BYTE PTR [rbp+0x14000],al
	...
   14000c19e:	add    BYTE PTR [rax],al
   14000c1a0:	cs (bad) 
   14000c1a2:	push   r14
   14000c1a4:	rex.XB
   14000c1a5:	rex.B je 0x14000c214
   14000c1a8:	rex.RB js 0x14000c20e
   14000c1ab:	gs jo  0x14000c222
   14000c1ae:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14000c1b5:	rex
   14000c1b6:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000d000 <.pdata>:
   14000d000:	xor    BYTE PTR [rax],dl
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	pop    rax
   14000d005:	adc    BYTE PTR [rax],al
   14000d007:	add    ah,bh
   14000d009:	xchg   ebp,eax
   14000d00a:	add    BYTE PTR [rax],al
   14000d00c:	lods   al,BYTE PTR ds:[rsi]
   14000d00d:	adc    BYTE PTR [rax],al
   14000d00f:	add    BYTE PTR [rdx],ch
   14000d011:	adc    DWORD PTR [rax],eax
   14000d013:	add    BYTE PTR [rax+0x30000095],ah
   14000d019:	adc    DWORD PTR [rax],eax
   14000d01b:	add    BYTE PTR [rsi+0x13],bl
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	lods   al,BYTE PTR ds:[rsi]
   14000d021:	xchg   ebp,eax
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	add    BYTE PTR [rax+rax*1],dl
   14000d027:	add    BYTE PTR [rax],cl
   14000d029:	adc    eax,0x95cc0000
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	adc    BYTE PTR [rip+0x15510000],dl        # 0x15551d036
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	in     al,0x95
   14000d03a:	add    BYTE PTR [rax],al
   14000d03c:	(bad)  
   14000d03d:	adc    eax,0x15e70000
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	in     al,dx
   14000d045:	xchg   ebp,eax
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	lock adc eax,0x16db0000
   14000d04e:	add    BYTE PTR [rax],al
   14000d050:	adc    BYTE PTR [rsi+0x16e40000],dl
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	fwait
   14000d059:	sbb    al,BYTE PTR [rax]
   14000d05b:	add    BYTE PTR [rsi+rdx*4],ah
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d061:	sbb    al,BYTE PTR [rax]
   14000d063:	add    bl,cl
   14000d065:	sbb    al,BYTE PTR [rax]
   14000d067:	add    ah,ah
   14000d069:	xchg   ebp,eax
   14000d06a:	add    BYTE PTR [rax],al
   14000d06c:	(bad)  
   14000d06d:	sbb    al,BYTE PTR [rax]
   14000d06f:	add    BYTE PTR [rbx],bh
   14000d071:	(bad)  
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	rex xchg esi,eax
   14000d076:	add    BYTE PTR [rax],al
   14000d078:	rex.R (bad) 
   14000d07a:	add    BYTE PTR [rax],al
   14000d07c:	pop    rax
   14000d07d:	(bad)  
   14000d07e:	add    BYTE PTR [rax],al
   14000d080:	pop    rax
   14000d081:	xchg   esi,eax
   14000d082:	add    BYTE PTR [rax],al
   14000d084:	(bad)  
   14000d085:	(bad)  
   14000d086:	add    BYTE PTR [rax],al
   14000d088:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d089:	(bad)  
   14000d08a:	add    BYTE PTR [rax],al
   14000d08c:	in     al,0x95
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	cmp    al,0x20
   14000d092:	add    BYTE PTR [rax],al
   14000d094:	jp     0x14000d0b6
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	ins    BYTE PTR es:[rdi],dx
   14000d099:	xchg   esi,eax
   14000d09a:	add    BYTE PTR [rax],al
   14000d09c:	and    BYTE PTR [rax],0x0
   14000d09f:	add    BYTE PTR [rsi+0x21],al
   14000d0a2:	add    BYTE PTR [rax],al
   14000d0a4:	je     0x14000d03c
   14000d0a6:	add    BYTE PTR [rax],al
   14000d0a8:	and    QWORD PTR [rax],r8
   14000d0ab:	add    BYTE PTR [rbp-0x6fffffdf],al
   14000d0b1:	xchg   esi,eax
   14000d0b2:	add    BYTE PTR [rax],al
   14000d0b4:	mov    WORD PTR [rcx],fs
   14000d0b6:	add    BYTE PTR [rax],al
   14000d0b8:	mov    ch,0x21
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	nop
   14000d0bd:	xchg   esi,eax
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	mov    esp,0xee000021
   14000d0c5:	and    DWORD PTR [rax],eax
   14000d0c7:	add    BYTE PTR [rax+0x96],dl
   14000d0cd:	and    al,BYTE PTR [rax]
   14000d0cf:	add    BYTE PTR [rax],ch
   14000d0d1:	and    al,BYTE PTR [rax]
   14000d0d3:	add    ah,bh
   14000d0d5:	xchg   ebp,eax
   14000d0d6:	add    BYTE PTR [rax],al
   14000d0d8:	xor    BYTE PTR [rdx],ah
   14000d0da:	add    BYTE PTR [rax],al
   14000d0dc:	push   rax
   14000d0dd:	and    al,BYTE PTR [rax]
   14000d0df:	add    BYTE PTR [rax+0x78000096],bl
   14000d0e5:	and    al,BYTE PTR [rax]
   14000d0e7:	add    BYTE PTR [rcx-0x1bffffde],bl
   14000d0ed:	xchg   ebp,eax
   14000d0ee:	add    BYTE PTR [rax],al
   14000d0f0:	movabs al,ds:0xe4000022c7000022
   14000d0f9:	xchg   ebp,eax
   14000d0fa:	add    BYTE PTR [rax],al
   14000d0fc:	lock and al,BYTE PTR [rax]
   14000d0ff:	add    BYTE PTR [rdx+0x23],bl
   14000d102:	add    BYTE PTR [rax],al
   14000d104:	rcl    BYTE PTR [rsi+0x23900000],0x0
   14000d10b:	add    dh,al
   14000d10d:	and    eax,DWORD PTR [rax]
   14000d10f:	add    ah,dl
   14000d111:	xchg   esi,eax
   14000d112:	add    BYTE PTR [rax],al
   14000d114:	loopne 0x14000d139
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	adc    esp,DWORD PTR [rax+rax*1]
   14000d11b:	add    ah,dl
   14000d11d:	xchg   esi,eax
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	xor    BYTE PTR [rax+rax*1],ah
   14000d123:	add    BYTE PTR [rsi+0x24],ah
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	(bad)  
   14000d129:	xchg   esi,eax
   14000d12a:	add    BYTE PTR [rax],al
   14000d12c:	jo     0x14000d152
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	mov    al,0x24
   14000d132:	add    BYTE PTR [rax],al
   14000d134:	add    al,0x96
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	mov    eax,0x1b000024
   14000d13d:	and    eax,0x96dc0000
   14000d142:	add    BYTE PTR [rax],al
   14000d144:	xor    BYTE PTR [rip+0x25980000],ah        # 0x16598d14a
   14000d14a:	add    BYTE PTR [rax],al
   14000d14c:	in     al,dx
   14000d14d:	xchg   ebp,eax
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	movabs al,ds:0x4000025d0000025
   14000d159:	xchg   esi,eax
   14000d15a:	add    BYTE PTR [rax],al
   14000d15c:	fsub   DWORD PTR [rip+0x26850000]        # 0x16685d162
   14000d162:	add    BYTE PTR [rax],al
   14000d164:	adc    BYTE PTR [rdi+0x26900000],dl
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	imul   esp,DWORD PTR [rdi],0x0
   14000d16f:	add    BYTE PTR [rax+0x74000097],al
   14000d175:	(bad)  
   14000d176:	add    BYTE PTR [rax],al
   14000d178:	mov    bl,0x2d
   14000d17a:	add    BYTE PTR [rax],al
   14000d17c:	mov    eax,0xbc000097
   14000d181:	sub    eax,0x2df20000
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	add    al,0x96
   14000d18a:	add    BYTE PTR [rax],al
   14000d18c:	clc    
   14000d18d:	sub    eax,0x322a0000
   14000d192:	add    BYTE PTR [rax],al
   14000d194:	cmp    BYTE PTR [rcx+0x32300000],bl
   14000d19a:	add    BYTE PTR [rax],al
   14000d19c:	rex.X xor eax,DWORD PTR [rax]
   14000d19f:	add    ah,ch
   14000d1a1:	xchg   ebp,eax
   14000d1a2:	add    BYTE PTR [rax],al
   14000d1a4:	xor    rax,QWORD PTR [rax]
   14000d1a7:	add    BYTE PTR [rbx+0x34],ch
   14000d1aa:	add    BYTE PTR [rax],al
   14000d1ac:	adc    BYTE PTR [rsi+0x34740000],dl
   14000d1b2:	add    BYTE PTR [rax],al
   14000d1b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d1b5:	xor    al,0x0
   14000d1b7:	add    ah,ah
   14000d1b9:	xchg   ebp,eax
   14000d1ba:	add    BYTE PTR [rax],al
   14000d1bc:	lods   al,BYTE PTR ds:[rsi]
   14000d1bd:	xor    al,0x0
   14000d1bf:	add    BYTE PTR [rax],dh
   14000d1c1:	xor    eax,0x9ab00000
   14000d1c6:	add    BYTE PTR [rax],al
   14000d1c8:	cmp    BYTE PTR [rip+0x35840000],dh        # 0x17584d1ce
   14000d1ce:	add    BYTE PTR [rax],al
   14000d1d0:	add    al,0x96
   14000d1d2:	add    BYTE PTR [rax],al
   14000d1d4:	mov    WORD PTR [rip+0x35a50000],?        # 0x175a5d1da
   14000d1da:	add    BYTE PTR [rax],al
   14000d1dc:	cld    
   14000d1dd:	xchg   ebp,eax
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	lods   al,BYTE PTR ds:[rsi]
   14000d1e1:	xor    eax,0x36050000
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	in     al,dx
   14000d1e9:	xchg   ebp,eax
   14000d1ea:	add    BYTE PTR [rax],al
   14000d1ec:	or     al,0x36
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	(bad)  
   14000d1f1:	add    BYTE PTR ss:[rax],al
   14000d1f4:	cld    
   14000d1f5:	xchg   ebp,eax
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	and    al,0x36
   14000d1fa:	add    BYTE PTR [rax],al
   14000d1fc:	mov    WORD PTR [rsi],?
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	adc    BYTE PTR [rsi+0x36940000],dl
   14000d206:	add    BYTE PTR [rax],al
   14000d208:	jmp    0x14000d240
   14000d20a:	add    BYTE PTR [rax],al
   14000d20c:	adc    BYTE PTR [rsi+0x37000000],dl
   14000d212:	add    BYTE PTR [rax],al
   14000d214:	(bad)  
   14000d215:	(bad)  
   14000d216:	add    BYTE PTR [rax],al
   14000d218:	in     al,0x95
   14000d21a:	add    BYTE PTR [rax],al
   14000d21c:	xor    BYTE PTR [rdi],dh
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	xor    al,0x38
   14000d222:	add    BYTE PTR [rax],al
   14000d224:	(bad)  
   14000d225:	(bad)  
   14000d226:	add    BYTE PTR [rax],al
   14000d228:	cmp    al,0x38
   14000d22a:	add    BYTE PTR [rax],al
   14000d22c:	rex.WRX cmp BYTE PTR [rax],r8b
   14000d22f:	add    ah,bh
   14000d231:	xchg   ebp,eax
   14000d232:	add    BYTE PTR [rax],al
   14000d234:	push   rsp
   14000d235:	cmp    BYTE PTR [rax],al
   14000d237:	add    ah,al
   14000d239:	cmp    DWORD PTR [rax],eax
   14000d23b:	add    BYTE PTR [rax-0x33ffff65],ah
   14000d241:	cmp    DWORD PTR [rax],eax
   14000d243:	add    BYTE PTR [rcx],ah
   14000d245:	cmp    eax,DWORD PTR [rax]
   14000d247:	add    BYTE PTR [rax+0x2800009b],bh
   14000d24d:	cmp    eax,DWORD PTR [rax]
   14000d24f:	add    BYTE PTR [rdx+0x3c],al
   14000d252:	add    BYTE PTR [rax],al
   14000d254:	int3   
   14000d255:	fwait
   14000d256:	add    BYTE PTR [rax],al
   14000d258:	pop    rax
   14000d259:	cmp    al,0x0
   14000d25b:	add    BYTE PTR [rsi-0x6fffffc4],dh
   14000d261:	pushf  
   14000d262:	add    BYTE PTR [rax],al
   14000d264:	mov    esp,0x6b00003c
   14000d269:	cmp    eax,0x9d180000
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	je     0x14000d2af
   14000d272:	add    BYTE PTR [rax],al
   14000d274:	or     DWORD PTR [rsi],edi
   14000d276:	add    BYTE PTR [rax],al
   14000d278:	xor    BYTE PTR [rbp+0x3e100000],bl
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	xor    bh,BYTE PTR [rsi]
   14000d282:	add    BYTE PTR [rax],al
   14000d284:	in     al,0x95
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	rex.W
   14000d289:	add    BYTE PTR ds:[rax],al
   14000d28c:	jge    0x14000d2cc
   14000d28e:	add    BYTE PTR [rax],al
   14000d290:	rex.R popf 
   14000d292:	add    BYTE PTR [rax],al
   14000d294:	nop
   14000d295:	add    BYTE PTR ds:[rax],al
   14000d298:	loop   0x14000d2d8
   14000d29a:	add    BYTE PTR [rax],al
   14000d29c:	in     al,0x95
   14000d29e:	add    BYTE PTR [rax],al
   14000d2a0:	lock add BYTE PTR ds:[rax],al
   14000d2a4:	ds (bad) 
   14000d2a6:	add    BYTE PTR [rax],al
   14000d2a8:	adc    BYTE PTR [rsi+0x3f700000],dl
   14000d2ae:	add    BYTE PTR [rax],al
   14000d2b0:	mov    edx,0xec00003f
   14000d2b5:	xchg   ebp,eax
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	sar    BYTE PTR [rdi],0x0
   14000d2bb:	add    BYTE PTR [rdx],cl
   14000d2bd:	add    BYTE PTR [rax],al
   14000d2c0:	in     al,0x95
   14000d2c2:	add    BYTE PTR [rax],al
   14000d2c4:	adc    BYTE PTR [rax+0x0],al
   14000d2c7:	add    BYTE PTR [rip+0xfffffffffc000040],ah        # 0x13c00d30d
   14000d2cd:	xchg   ebp,eax
   14000d2ce:	add    BYTE PTR [rax],al
   14000d2d0:	rex
   14000d2d1:	add    BYTE PTR [rax],al
   14000d2d4:	xchg   ecx,eax
   14000d2d5:	rex.XB add BYTE PTR [r8],al
   14000d2d8:	mov    eax,0x9800009d
   14000d2dd:	rex.XB add BYTE PTR [r8],al
   14000d2e0:	movabs ds:0xa800009dd4000045,al
   14000d2e9:	add    BYTE PTR [r8],r8b
   14000d2ec:	mov    ecx,0xe8000047
   14000d2f1:	popf   
   14000d2f2:	add    BYTE PTR [rax],al
   14000d2f4:	rol    BYTE PTR [rdi+0x0],0x0
   14000d2f8:	int    0x48
   14000d2fa:	add    BYTE PTR [rax],al
   14000d2fc:	cld    
   14000d2fd:	popf   
   14000d2fe:	add    BYTE PTR [rax],al
   14000d300:	loopne 0x14000d34a
   14000d302:	add    BYTE PTR [rax],al
   14000d304:	data16 rex.WB add BYTE PTR [r8],al
   14000d308:	adc    BYTE PTR [rsi+0x496c0000],bl
   14000d30e:	add    BYTE PTR [rax],al
   14000d310:	mov    edx,0x4000049
   14000d315:	xchg   esi,eax
   14000d316:	add    BYTE PTR [rax],al
   14000d318:	ror    BYTE PTR [rcx+0x0],0x0
   14000d31c:	retf   0x4a
   14000d31f:	add    BYTE PTR [rax],ah
   14000d321:	sahf   
   14000d322:	add    BYTE PTR [rax],al
   14000d324:	ror    BYTE PTR [rdx+0x0],1
   14000d327:	add    ah,dh
   14000d329:	rex.WX add BYTE PTR [rax],al
   14000d32c:	in     al,0x95
   14000d32e:	add    BYTE PTR [rax],al
   14000d330:	add    BYTE PTR [rbx+0x0],cl
   14000d333:	add    BYTE PTR [rsi-0x13ffffb5],dl
   14000d339:	xchg   ebp,eax
   14000d33a:	add    BYTE PTR [rax],al
   14000d33c:	ror    BYTE PTR [rbx+0x0],0x0
   14000d340:	add    cl,BYTE PTR [rax+rax*1+0x0]
   14000d344:	add    al,0x96
   14000d346:	add    BYTE PTR [rax],al
   14000d348:	adc    BYTE PTR [rax+rax*1+0x0],cl
   14000d34c:	jg     0x14000d39a
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	in     al,dx
   14000d351:	xchg   ebp,eax
   14000d352:	add    BYTE PTR [rax],al
   14000d354:	mov    BYTE PTR [rax+rax*1+0x0],cl
   14000d358:	test   eax,0x9000004c
   14000d35d:	xchg   esi,eax
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	mov    al,0x4c
   14000d362:	add    BYTE PTR [rax],al
   14000d364:	fimul  WORD PTR [rax+rax*1+0x0]
   14000d368:	nop
   14000d369:	xchg   esi,eax
   14000d36a:	add    BYTE PTR [rax],al
   14000d36c:	lock rex.WR add BYTE PTR [rax],r8b
   14000d370:	rex.WRB add BYTE PTR ds:[r8],r8b
   14000d374:	adc    BYTE PTR [rsi+0x4d500000],dl
   14000d37a:	add    BYTE PTR [rax],al
   14000d37c:	and    cl,BYTE PTR [rdi+0x0]
   14000d37f:	add    BYTE PTR [rsi+rbx*4],bh
   14000d382:	add    BYTE PTR [rax],al
   14000d384:	rex
   14000d385:	rex.WRXB add BYTE PTR [r8],r8b
   14000d388:	(bad)  
   14000d389:	push   rax
   14000d38a:	add    BYTE PTR [rax],al
   14000d38c:	pop    rsp
   14000d38d:	sahf   
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	adc    BYTE PTR [rax+0x0],dl
   14000d393:	add    BYTE PTR [rsi-0x13ffffb0],ah
   14000d399:	xchg   ebp,eax
   14000d39a:	add    BYTE PTR [rax],al
   14000d39c:	mov    al,0x50
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	(bad)  
   14000d3a1:	push   rcx
   14000d3a2:	add    BYTE PTR [rax],al
   14000d3a4:	in     al,dx
   14000d3a5:	xchg   ebp,eax
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	xor    BYTE PTR [rcx+0x0],dl
   14000d3ab:	add    BYTE PTR [rsi+0x74000051],al
   14000d3b1:	sahf   
   14000d3b2:	add    BYTE PTR [rax],al
   14000d3b4:	mov    WORD PTR [rcx+0x0],ss
   14000d3b7:	add    dl,cl
   14000d3b9:	push   rcx
   14000d3ba:	add    BYTE PTR [rax],al
   14000d3bc:	sbb    BYTE PTR [rsi+0x51d00000],0x0
   14000d3c3:	add    BYTE PTR [rcx],al
   14000d3c5:	push   rdx
   14000d3c6:	add    BYTE PTR [rax],al
   14000d3c8:	in     al,0x95
   14000d3ca:	add    BYTE PTR [rax],al
   14000d3cc:	adc    BYTE PTR [rdx+0x0],dl
   14000d3cf:	add    bh,bl
   14000d3d1:	push   rdx
   14000d3d2:	add    BYTE PTR [rax],al
   14000d3d4:	cld    
   14000d3d5:	xchg   ebp,eax
   14000d3d6:	add    BYTE PTR [rax],al
   14000d3d8:	lock push rdx
   14000d3da:	add    BYTE PTR [rax],al
   14000d3dc:	cmp    DWORD PTR [rbx+0x0],edx
   14000d3df:	add    BYTE PTR [rax+0x4000009e],dh
   14000d3e5:	push   rbx
   14000d3e6:	add    BYTE PTR [rax],al
   14000d3e8:	mov    cl,0x55
   14000d3ea:	add    BYTE PTR [rax],al
   14000d3ec:	mov    eax,0xc000009e
   14000d3f1:	push   rbp
   14000d3f2:	add    BYTE PTR [rax],al
   14000d3f4:	rcl    BYTE PTR [rbp+0x0],cl
   14000d3f7:	add    ah,bh
   14000d3f9:	xchg   ebp,eax
   14000d3fa:	add    BYTE PTR [rax],al
   14000d3fc:	lock push rbp
   14000d3fe:	add    BYTE PTR [rax],al
   14000d400:	(bad)  
   14000d401:	push   rsi
   14000d402:	add    BYTE PTR [rax],al
   14000d404:	lock sahf 
   14000d406:	add    BYTE PTR [rax],al
   14000d408:	and    BYTE PTR [rsi+0x0],dl
   14000d40b:	add    BYTE PTR [rsi-0xbffffaa],bh
   14000d411:	sahf   
   14000d412:	add    BYTE PTR [rax],al
   14000d414:	(bad)  
   14000d415:	push   rsi
   14000d416:	add    BYTE PTR [rax],al
   14000d418:	fist   DWORD PTR [rsi+0x0]
   14000d41b:	add    ah,bh
   14000d41d:	xchg   ebp,eax
   14000d41e:	add    BYTE PTR [rax],al
   14000d420:	cld    
   14000d421:	push   rsi
   14000d422:	add    BYTE PTR [rax],al
   14000d424:	xor    BYTE PTR [rdi+0x0],dl
   14000d427:	add    ah,ah
   14000d429:	xchg   ebp,eax
   14000d42a:	add    BYTE PTR [rax],al
   14000d42c:	rex push rdi
   14000d42e:	add    BYTE PTR [rax],al
   14000d430:	mov    cl,0x58
   14000d432:	add    BYTE PTR [rax],al
   14000d434:	sbb    BYTE PTR [rdi+0x58c00000],bl
   14000d43a:	add    BYTE PTR [rax],al
   14000d43c:	lock pop rax
   14000d43e:	add    BYTE PTR [rax],al
   14000d440:	add    al,0x96
   14000d442:	add    BYTE PTR [rax],al
   14000d444:	adc    BYTE PTR [rcx+0x0],bl
   14000d447:	add    BYTE PTR [rcx+0x59],cl
   14000d44a:	add    BYTE PTR [rax],al
   14000d44c:	cld    
   14000d44d:	xchg   ebp,eax
   14000d44e:	add    BYTE PTR [rax],al
   14000d450:	push   rax
   14000d451:	pop    rcx
   14000d452:	add    BYTE PTR [rax],al
   14000d454:	push   0xfffffffffc000059
   14000d459:	xchg   ebp,eax
   14000d45a:	add    BYTE PTR [rax],al
   14000d45c:	jl     0x14000d4b7
   14000d45e:	add    BYTE PTR [rax],al
   14000d460:	rcr    BYTE PTR [rcx+0x0],1
   14000d463:	add    BYTE PTR [rax],ah
   14000d465:	lahf   
   14000d466:	add    BYTE PTR [rax],al
   14000d468:	fcomp  DWORD PTR [rcx+0x0]
   14000d46b:	add    BYTE PTR [rip+0xffffffffe400005a],bl        # 0x12400d4cb
   14000d471:	xchg   ebp,eax
   14000d472:	add    BYTE PTR [rax],al
   14000d474:	sbb    BYTE PTR [rdx+0x0],0x0
   14000d478:	int    0x5a
   14000d47a:	add    BYTE PTR [rax],al
   14000d47c:	rex lahf 
   14000d47e:	add    BYTE PTR [rax],al
   14000d480:	adc    al,0x5b
   14000d482:	add    BYTE PTR [rax],al
   14000d484:	in     al,0x5b
   14000d486:	add    BYTE PTR [rax],al
   14000d488:	fs lahf 
   14000d48a:	add    BYTE PTR [rax],al
   14000d48c:	cmp    BYTE PTR [rax+rax*1+0x0],bl
   14000d490:	push   rdi
   14000d491:	pop    rsp
   14000d492:	add    BYTE PTR [rax],al
   14000d494:	je     0x14000d435
   14000d496:	add    BYTE PTR [rax],al
   14000d498:	mov    BYTE PTR [rax+rax*1+0x0],bl
   14000d49c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d49d:	pop    rsp
   14000d49e:	add    BYTE PTR [rax],al
   14000d4a0:	cld    
   14000d4a1:	xchg   ebp,eax
   14000d4a2:	add    BYTE PTR [rax],al
   14000d4a4:	lods   al,BYTE PTR ds:[rsi]
   14000d4a5:	pop    rsp
   14000d4a6:	add    BYTE PTR [rax],al
   14000d4a8:	minps  xmm0,XMMWORD PTR [rax]
   14000d4ab:	add    ah,ah
   14000d4ad:	xchg   ebp,eax
   14000d4ae:	add    BYTE PTR [rax],al
   14000d4b0:	sbb    BYTE PTR [rbp+0x0],bl
   14000d4b3:	add    BYTE PTR [rdi-0x5fffffa3],ah
   14000d4b9:	fwait
   14000d4ba:	add    BYTE PTR [rax],al
   14000d4bc:	loopne 0x14000d51b
   14000d4be:	add    BYTE PTR [rax],al
   14000d4c0:	loop   0x14000d51f
   14000d4c2:	add    BYTE PTR [rax],al
   14000d4c4:	jo     0x14000d465
   14000d4c6:	add    BYTE PTR [rax],al
   14000d4c8:	add    BYTE PTR [rsi+0x0],bl
   14000d4cb:	add    BYTE PTR [rbp+0x5e],cl
   14000d4ce:	add    BYTE PTR [rax],al
   14000d4d0:	lock lahf 
   14000d4d2:	add    BYTE PTR [rax],al
   14000d4d4:	push   rsi
   14000d4d5:	pop    rsi
   14000d4d6:	add    BYTE PTR [rax],al
   14000d4d8:	jbe    0x14000d538
   14000d4da:	add    BYTE PTR [rax],al
   14000d4dc:	mov    eax,0x2a000096
   14000d4e1:	pop    rdi
   14000d4e2:	add    BYTE PTR [rax],al
   14000d4e4:	rex.WB pop r15
   14000d4e6:	add    BYTE PTR [rax],al
   14000d4e8:	mov    eax,0x49000096
   14000d4ed:	(bad)  
   14000d4ee:	add    BYTE PTR [rax],al
   14000d4f0:	mov    fs,WORD PTR [rax+0x0]
   14000d4f3:	add    BYTE PTR [rax-0x71ffff65],dl
   14000d4f9:	(bad)  
   14000d4fa:	add    BYTE PTR [rax],al
   14000d4fc:	mov    bl,0x60
   14000d4fe:	add    BYTE PTR [rax],al
   14000d500:	nop
   14000d501:	fwait
   14000d502:	add    BYTE PTR [rax],al
   14000d504:	mov    ecx,0xa000060
   14000d509:	(bad)  
   14000d50a:	add    BYTE PTR [rax],al
   14000d50c:	sbb    BYTE PTR [rax+rax*1+0x610a00],0x0
   14000d514:	(bad)  
   14000d515:	(bad)  
   14000d516:	add    BYTE PTR [rax],al
   14000d518:	sbb    BYTE PTR [rax+rax*1+0x613500],0x0
   14000d520:	push   rbp
   14000d521:	(bad)  
   14000d522:	add    BYTE PTR [rax],al
   14000d524:	or     BYTE PTR [rbp+0x615b0000],bl
   14000d52a:	add    BYTE PTR [rax],al
   14000d52c:	jnp    0x14000d58f
   14000d52e:	add    BYTE PTR [rax],al
   14000d530:	test   al,0x9d
   14000d532:	add    BYTE PTR [rax],al
   14000d534:	xchg   ebx,eax
   14000d535:	(bad)  
   14000d536:	add    BYTE PTR [rax],al
   14000d538:	mov    cl,0x61
   14000d53a:	add    BYTE PTR [rax],al
   14000d53c:	mov    eax,0xb7000096
   14000d541:	(bad)  
   14000d542:	add    BYTE PTR [rax],al
   14000d544:	shl    BYTE PTR [rcx+0x0],cl
   14000d547:	add    BYTE PTR [rax-0x1fffff6a],bh
   14000d54d:	(bad)  
   14000d54e:	add    BYTE PTR [rax],al
   14000d550:	add    BYTE PTR [rdx+0x0],ah
   14000d553:	add    BYTE PTR [rax+0x6000096],bh
   14000d559:	(bad)  
   14000d55a:	add    BYTE PTR [rax],al
   14000d55c:	es (bad) 
   14000d55e:	add    BYTE PTR [rax],al
   14000d560:	loopne 0x14000d501
   14000d562:	add    BYTE PTR [rax],al
   14000d564:	xor    BYTE PTR [rdx+0x0],ah
   14000d567:	add    BYTE PTR [rsi+0x62],dh
   14000d56a:	add    BYTE PTR [rax],al
   14000d56c:	add    al,0x96
	...

Disassembly of section .rsrc:

000000014000e000 <.rsrc>:
	...
   14000e00c:	add    al,BYTE PTR [rax]
   14000e00e:	add    DWORD PTR [rax],eax
   14000e010:	test   BYTE PTR [rax],0x0
   14000e013:	sub    BYTE PTR [rax],0x0
   14000e016:	add    BYTE PTR [rax-0x7fffff18],al
   14000e01c:	add    BYTE PTR [rax],al
   14000e01f:	adc    BYTE PTR [rax],0x0
   14000e022:	add    BYTE PTR [rax],al
   14000e024:	pop    rax
   14000e025:	add    BYTE PTR [rax],al
   14000e027:	add    BYTE PTR [rax],0x0
	...
   14000e036:	add    DWORD PTR [rax],eax
   14000e038:	add    DWORD PTR [rax],eax
   14000e03a:	add    BYTE PTR [rax],al
   14000e03c:	jo     0x14000e03e
   14000e03e:	add    BYTE PTR [rax+0x0],al
	...
   14000e04c:	add    BYTE PTR [rax],al
   14000e04e:	add    DWORD PTR [rax],eax
   14000e050:	leave  
   14000e051:	add    BYTE PTR [rax],al
   14000e053:	add    BYTE PTR [rax+0x800000],cl
	...
   14000e065:	add    BYTE PTR [rcx],al
   14000e067:	add    BYTE PTR [rcx],al
   14000e069:	add    BYTE PTR [rax],al
   14000e06b:	add    BYTE PTR [rax+0x800000],ah
	...
   14000e07d:	add    BYTE PTR [rcx],al
   14000e07f:	add    BYTE PTR [rcx],cl
   14000e081:	add    al,0x0
   14000e083:	add    BYTE PTR [rax+0x0],bh
	...
   14000e095:	add    BYTE PTR [rcx],al
   14000e097:	add    BYTE PTR [rcx],cl
   14000e099:	add    al,0x0
   14000e09b:	add    al,cl
	...
   14000e0ad:	add    BYTE PTR [rcx],al
   14000e0af:	add    BYTE PTR [rcx],cl
   14000e0b1:	add    al,0x0
   14000e0b3:	add    al,bl
   14000e0b5:	add    BYTE PTR [rax],al
   14000e0b7:	add    al,bh
   14000e0b9:	in     eax,0x0
   14000e0bb:	add    al,bl
	...
   14000e0c9:	loope  0x14000e0cb
   14000e0cb:	add    BYTE PTR [rsi],ch
   14000e0cd:	add    DWORD PTR [rax],eax
	...
   14000e0d7:	add    BYTE PTR [rax],dh
   14000e0d9:	loop   0x14000e0db
   14000e0db:	add    al,cl
   14000e0dd:	add    eax,DWORD PTR [rax]
	...
   14000e0e7:	add    BYTE PTR [rsi],al
   14000e0e9:	add    BYTE PTR [rbp+0x0],dl
   14000e0ec:	rex.WB add BYTE PTR [r14+0x0],al
   14000e0f0:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   14000e0f5:	add    BYTE PTR [rbx],al
   14000e0f7:	add    BYTE PTR [rbp+0x0],cl
   14000e0fa:	push   rbp
   14000e0fb:	add    BYTE PTR [rcx+0x0],cl
   14000e0fe:	add    BYTE PTR [rax],al
   14000e100:	cmp    al,0x3f
   14000e102:	js     0x14000e171
   14000e104:	ins    BYTE PTR es:[rdi],dx
   14000e105:	and    BYTE PTR [rsi+0x65],dh
   14000e108:	jb     0x14000e17d
   14000e10a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e111:	xor    BYTE PTR [rdx],ah
   14000e113:	and    BYTE PTR [rbp+0x6e],ah
   14000e116:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000e119:	imul   ebp,DWORD PTR [rsi+0x67],0x7475223d
   14000e120:	sub    ax,0x2238
   14000e124:	(bad)  
   14000e125:	ds or  eax,0x75643c0a
   14000e12b:	imul   edi,DWORD PTR [rax+0x6d],0xa0d3e6c
   14000e132:	cmp    al,0x52
   14000e134:	imul   esp,DWORD PTR [rbx+0x68],0x74786554
   14000e13b:	and    BYTE PTR [rdx+0x65],dh
   14000e13e:	jae    0x14000e1a9
   14000e140:	fs cmp eax,0x616c5022
   14000e146:	je     0x14000e1ae
   14000e148:	outs   dx,DWORD PTR ds:[rsi]
   14000e149:	jb     0x14000e1b8
   14000e14b:	push   rdx
   14000e14c:	outs   dx,DWORD PTR ds:[rsi]
   14000e14d:	outs   dx,DWORD PTR ds:[rsi]
   14000e14e:	je     0x14000e172
   14000e150:	and    BYTE PTR [rcx+0x64],ch
   14000e153:	cmp    eax,0x6f746122
   14000e158:	ins    DWORD PTR es:[rdi],dx
   14000e159:	sub    BYTE PTR [rbp+0x6f],cl
   14000e15c:	fs (bad) 
   14000e15e:	ins    BYTE PTR es:[rdi],dx
   14000e15f:	imul   r12d,DWORD PTR [rcx+0x6c],0x6c45676f
   14000e167:	gs ins DWORD PTR es:[rdi],dx
   14000e169:	outs   dx,BYTE PTR gs:[rsi]
   14000e16b:	je     0x14000e196
   14000e16d:	and    ah,BYTE PTR [rax]
   14000e16f:	(bad)  
   14000e170:	movsxd esp,DWORD PTR [rbx+0x65]
   14000e173:	jae    0x14000e1e8
   14000e175:	imul   esp,DWORD PTR [rdx+0x6c],0x74223d65
   14000e17c:	jb     0x14000e1f3
   14000e17e:	and    ah,BYTE PTR gs:[rax]
   14000e181:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000e184:	je     0x14000e1eb
   14000e186:	outs   dx,BYTE PTR ds:[rsi]
   14000e187:	je     0x14000e1ea
   14000e189:	ins    BYTE PTR es:[rdi],dx
   14000e18a:	imul   esp,DWORD PTR [rdi+0x6e],0x6e65223d
   14000e191:	fs gs ins BYTE PTR es:[rdi],dx
   14000e194:	ins    BYTE PTR es:[rdi],dx
   14000e195:	imul   esi,DWORD PTR [rax+0x73],0x777c7369
   14000e19c:	jb     0x14000e1ff
   14000e19e:	jo     0x14000e20c
   14000e1a0:	gs data16 je 0x14000e1c6
   14000e1a4:	and    BYTE PTR [rbx+0x68],dh
   14000e1a7:	gs gs je 0x14000e1e8
   14000e1ab:	and    al,BYTE PTR [rcx+rbp*2+0x61]
   14000e1af:	ins    BYTE PTR es:[rdi],dx
   14000e1b0:	outs   dx,DWORD PTR ds:[rsi]
   14000e1b1:	addr32 push rbx
   14000e1b3:	je     0x14000e22e
   14000e1b5:	ins    BYTE PTR es:[rdi],dx
   14000e1b6:	and    ch,BYTE PTR gs:[rdi]
   14000e1b9:	ds or  eax,0x74733c0a
   14000e1bf:	jns    0x14000e22d
   14000e1c1:	gs jae 0x14000e22c
   14000e1c4:	gs gs je 0x14000e23b
   14000e1c8:	ds or  eax,0x74733c0a
   14000e1ce:	jns    0x14000e23c
   14000e1d0:	and    BYTE PTR gs:[rdx+0x65],dh
   14000e1d4:	jae    0x14000e23f
   14000e1d6:	fs cmp eax,0x61694422
   14000e1dc:	ins    BYTE PTR es:[rdi],dx
   14000e1dd:	outs   dx,DWORD PTR ds:[rsi]
   14000e1de:	addr32 push rbx
   14000e1e0:	je     0x14000e25b
   14000e1e2:	ins    BYTE PTR es:[rdi],dx
   14000e1e3:	and    bh,BYTE PTR gs:[rsi]
   14000e1e6:	or     eax,0x69523c0a
   14000e1eb:	movsxd ebp,DWORD PTR [rax+0x54]
   14000e1ee:	gs js  0x14000e265
   14000e1f1:	and    BYTE PTR [rsi+0x6f],ah
   14000e1f4:	outs   dx,BYTE PTR ds:[rsi]
   14000e1f5:	je     0x14000e234
   14000e1f7:	and    dh,BYTE PTR [rdx+0x65]
   14000e1fa:	jae    0x14000e26f
   14000e1fc:	je     0x14000e270
   14000e1fe:	sub    BYTE PTR [rcx],dh
   14000e200:	xor    BYTE PTR [rax],dh
   14000e202:	xor    al,0x29
   14000e204:	and    ch,BYTE PTR [rdi]
   14000e206:	ds or  eax,0x732f3c0a
   14000e20c:	je     0x14000e287
   14000e20e:	ins    BYTE PTR es:[rdi],dx
   14000e20f:	gs ds or eax,0x732f3c0a
   14000e216:	je     0x14000e291
   14000e218:	ins    BYTE PTR es:[rdi],dx
   14000e219:	gs jae 0x14000e284
   14000e21c:	gs gs je 0x14000e293
   14000e220:	ds or  eax,0x642f3c0a
   14000e226:	jne    0x14000e291
   14000e228:	js     0x14000e297
   14000e22a:	ins    BYTE PTR es:[rdi],dx
   14000e22b:	ds or  eax,0xc800000a
   14000e231:	add    esi,DWORD PTR [rax+rax*1]
   14000e234:	add    BYTE PTR [rax],al
   14000e236:	push   rsi
   14000e237:	add    BYTE PTR [rbx+0x0],dl
   14000e23a:	pop    rdi
   14000e23b:	add    BYTE PTR [rsi+0x0],dl
   14000e23e:	add    BYTE PTR [r10+0x0],r10b
   14000e242:	push   rbx
   14000e243:	add    BYTE PTR [rcx+0x0],cl
   14000e246:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000e24a:	pop    rdi
   14000e24b:	add    BYTE PTR [rcx+0x0],cl
   14000e24e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000e252:	rex.WRXB add BYTE PTR [r8],r8b
   14000e255:	add    BYTE PTR [rax],al
   14000e257:	add    BYTE PTR [rbp+0xfeef04],bh
   14000e25d:	add    BYTE PTR [rcx],al
   14000e25f:	add    BYTE PTR [rax],al
   14000e261:	add    BYTE PTR [rdx],cl
   14000e263:	add    BYTE PTR [rax],al
   14000e265:	add    BYTE PTR [rax],bpl
   14000e268:	add    BYTE PTR [rax],al
   14000e26a:	or     al,BYTE PTR [rax]
   14000e26c:	add    BYTE PTR [rax+0x0],al
   14000e26f:	sub    BYTE PTR [rdi],bh
   14000e271:	add    BYTE PTR [rax],al
   14000e273:	add    BYTE PTR [rax],al
   14000e275:	add    BYTE PTR [rax],al
   14000e277:	add    BYTE PTR [rax+rax*1],al
   14000e27a:	add    al,0x0
   14000e27c:	add    DWORD PTR [rax],eax
	...
   14000e28a:	add    BYTE PTR [rax],al
   14000e28c:	add    eax,DWORD PTR es:[rax]
   14000e28f:	add    BYTE PTR [rcx],al
   14000e291:	add    BYTE PTR [rbx+0x0],dl
   14000e294:	je     0x14000e296
   14000e296:	jb     0x14000e298
   14000e298:	imul   eax,DWORD PTR [rax],0x67006e
   14000e29e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e2a2:	ins    BYTE PTR es:[rdi],dx
   14000e2a3:	add    BYTE PTR [rbp+0x0],ah
   14000e2a6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e2aa:	data16 add BYTE PTR [rdi+0x0],ch
   14000e2ae:	add    BYTE PTR [rax],al
   14000e2b0:	add    al,BYTE PTR [rbx]
   14000e2b2:	add    BYTE PTR [rax],al
   14000e2b4:	add    DWORD PTR [rax],eax
   14000e2b6:	xor    BYTE PTR [rax],al
   14000e2b8:	xor    al,0x0
   14000e2ba:	xor    BYTE PTR [rax],al
   14000e2bc:	cmp    DWORD PTR [rax],eax
   14000e2be:	xor    BYTE PTR [rax],al
   14000e2c0:	xor    al,0x0
   14000e2c2:	rex.X add BYTE PTR [rax],sil
   14000e2c5:	add    BYTE PTR [rax],al
   14000e2c7:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000e2cb:	add    BYTE PTR [rcx],al
   14000e2cd:	add    BYTE PTR [rbx+0x0],al
   14000e2d0:	outs   dx,DWORD PTR ds:[rsi]
   14000e2d1:	add    BYTE PTR [rbp+0x0],ch
   14000e2d4:	jo     0x14000e2d6
   14000e2d6:	(bad)  
   14000e2d7:	add    BYTE PTR [rsi+0x0],ch
   14000e2da:	jns    0x14000e2dc
   14000e2dc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e2e0:	ins    DWORD PTR es:[rdi],dx
   14000e2e1:	add    BYTE PTR [rbp+0x0],ah
   14000e2e4:	add    BYTE PTR [rax],al
   14000e2e6:	add    BYTE PTR [rax],al
   14000e2e8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e2ec:	movsxd eax,DWORD PTR [rax]
   14000e2ee:	jb     0x14000e2f0
   14000e2f0:	outs   dx,DWORD PTR ds:[rsi]
   14000e2f1:	add    BYTE PTR [rbx+0x0],dh
   14000e2f4:	outs   dx,DWORD PTR ds:[rsi]
   14000e2f5:	add    BYTE PTR [rsi+0x0],ah
   14000e2f8:	je     0x14000e2fa
   14000e2fa:	and    BYTE PTR [rax],al
   14000e2fc:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e300:	jb     0x14000e302
   14000e302:	jo     0x14000e304
   14000e304:	outs   dx,DWORD PTR ds:[rsi]
   14000e305:	add    BYTE PTR [rdx+0x0],dh
   14000e308:	(bad)  
   14000e309:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e30d:	add    BYTE PTR [rdi+0x0],ch
   14000e310:	outs   dx,BYTE PTR ds:[rsi]
   14000e311:	add    BYTE PTR [rax],al
   14000e313:	add    BYTE PTR [rdx+0x0],ah
   14000e316:	sbb    eax,0x46000100
   14000e31b:	add    BYTE PTR [rcx+0x0],ch
   14000e31e:	ins    BYTE PTR es:[rdi],dx
   14000e31f:	add    BYTE PTR [rbp+0x0],ah
   14000e322:	add    BYTE PTR [rbp+0x0],r12b
   14000e326:	jae    0x14000e328
   14000e328:	movsxd eax,DWORD PTR [rax]
   14000e32a:	jb     0x14000e32c
   14000e32c:	imul   eax,DWORD PTR [rax],0x740070
   14000e332:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e338:	add    BYTE PTR [rax],al
   14000e33a:	add    BYTE PTR [rax],al
   14000e33c:	push   rdi
   14000e33d:	add    BYTE PTR [rcx+0x0],ch
   14000e340:	outs   dx,BYTE PTR ds:[rsi]
   14000e341:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000e345:	add    BYTE PTR [rdi+0x0],dh
   14000e348:	jae    0x14000e34a
   14000e34a:	and    BYTE PTR [rax],al
   14000e34c:	add    BYTE PTR [r11+0x0],spl
   14000e350:	je     0x14000e352
   14000e352:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e358:	and    BYTE PTR [rax],al
   14000e35a:	add    BYTE PTR [rcx+0x0],r13b
   14000e35e:	(bad)  
   14000e35f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000e363:	add    BYTE PTR [rdi+0x0],ah
   14000e366:	and    BYTE PTR [rax],al
   14000e368:	rex.X add BYTE PTR [rdx+0x0],sil
   14000e36c:	outs   dx,DWORD PTR ds:[rsi]
   14000e36d:	add    BYTE PTR [rbx+0x0],ch
   14000e370:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e374:	add    BYTE PTR [rax],al
   14000e376:	add    BYTE PTR [rax],al
   14000e378:	data16 add BYTE PTR [rbx],ah
   14000e37b:	add    BYTE PTR [rcx],al
   14000e37d:	add    BYTE PTR [rsi+0x0],al
   14000e380:	imul   eax,DWORD PTR [rax],0x65006c
   14000e386:	push   rsi
   14000e387:	add    BYTE PTR [rbp+0x0],ah
   14000e38a:	jb     0x14000e38c
   14000e38c:	jae    0x14000e38e
   14000e38e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e394:	add    BYTE PTR [rax],al
   14000e396:	add    BYTE PTR [rax],al
   14000e398:	xor    DWORD PTR [rax],eax
   14000e39a:	xor    BYTE PTR [rax],al
   14000e39c:	add    BYTE PTR cs:[rax],dh
   14000e39f:	add    BYTE PTR [rsi],ch
   14000e3a1:	add    BYTE PTR [rcx],dh
   14000e3a3:	add    BYTE PTR [rax],dh
   14000e3a5:	add    BYTE PTR [rdx],dh
   14000e3a7:	add    BYTE PTR [rax+rax*1],dh
   14000e3aa:	xor    BYTE PTR [rax],al
   14000e3ac:	add    BYTE PTR cs:[rcx],dh
   14000e3af:	add    BYTE PTR [rsi],dh
   14000e3b1:	add    BYTE PTR [rbx],dh
   14000e3b3:	add    BYTE PTR [rax],bh
   14000e3b5:	add    BYTE PTR [rax+rax*1],dh
   14000e3b8:	and    BYTE PTR [rax],al
   14000e3ba:	sub    BYTE PTR [rax],al
   14000e3bc:	je     0x14000e3be
   14000e3be:	push   0x2e003100
   14000e3c3:	add    BYTE PTR [rcx],dh
   14000e3c5:	add    BYTE PTR [rip+0x37003000],dh        # 0x1770113cb
   14000e3cb:	add    BYTE PTR [rax],dh
   14000e3cd:	add    BYTE PTR [rcx],bh
   14000e3cf:	add    BYTE PTR [rip+0x37003100],ch        # 0x1770114d5
   14000e3d5:	add    BYTE PTR [rax],dh
   14000e3d7:	add    BYTE PTR [rax],dh
   14000e3d9:	add    BYTE PTR [rcx],ch
   14000e3db:	add    BYTE PTR [rax],al
   14000e3dd:	add    BYTE PTR [rax],al
   14000e3df:	add    BYTE PTR [rax+0x0],cl
   14000e3e2:	adc    al,0x0
   14000e3e4:	add    DWORD PTR [rax],eax
   14000e3e6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e3ea:	je     0x14000e3ec
   14000e3ec:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e3f0:	outs   dx,BYTE PTR ds:[rsi]
   14000e3f1:	add    BYTE PTR [rcx+0x0],ah
   14000e3f4:	ins    BYTE PTR es:[rdi],dx
   14000e3f5:	add    BYTE PTR [rsi+0x0],cl
   14000e3f8:	(bad)  
   14000e3f9:	add    BYTE PTR [rbp+0x0],ch
   14000e3fc:	add    BYTE PTR gs:[rax],al
   14000e3ff:	add    BYTE PTR [rdi+0x0],dl
   14000e402:	imul   eax,DWORD PTR [rax],0x64006e
   14000e408:	outs   dx,DWORD PTR ds:[rsi]
   14000e409:	add    BYTE PTR [rdi+0x0],dh
   14000e40c:	jae    0x14000e40e
   14000e40e:	add    BYTE PTR [r11+0x0],spl
   14000e412:	je     0x14000e414
   14000e414:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e41a:	add    BYTE PTR [rcx+0x0],r13b
   14000e41e:	(bad)  
   14000e41f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000e423:	add    BYTE PTR [rdi+0x0],ah
   14000e426:	add    BYTE PTR [rax],al
   14000e428:	add    BYTE PTR [rax],0x2e
   14000e42b:	add    BYTE PTR [rcx],al
   14000e42d:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000e431:	add    BYTE PTR [rdi+0x0],ah
   14000e434:	(bad)  
   14000e435:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000e439:	add    BYTE PTR [rdi+0x0],ch
   14000e43c:	jo     0x14000e43e
   14000e43e:	jns    0x14000e440
   14000e440:	jb     0x14000e442
   14000e442:	imul   eax,DWORD PTR [rax],0x680067
   14000e448:	je     0x14000e44a
   14000e44a:	add    BYTE PTR [rax],al
   14000e44c:	test   eax,0x4d002000
   14000e451:	add    BYTE PTR [rcx+0x0],ch
   14000e454:	movsxd eax,DWORD PTR [rax]
   14000e456:	jb     0x14000e458
   14000e458:	outs   dx,DWORD PTR ds:[rsi]
   14000e459:	add    BYTE PTR [rbx+0x0],dh
   14000e45c:	outs   dx,DWORD PTR ds:[rsi]
   14000e45d:	add    BYTE PTR [rsi+0x0],ah
   14000e460:	je     0x14000e462
   14000e462:	and    BYTE PTR [rax],al
   14000e464:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e468:	jb     0x14000e46a
   14000e46a:	jo     0x14000e46c
   14000e46c:	outs   dx,DWORD PTR ds:[rsi]
   14000e46d:	add    BYTE PTR [rdx+0x0],dh
   14000e470:	(bad)  
   14000e471:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e475:	add    BYTE PTR [rdi+0x0],ch
   14000e478:	outs   dx,BYTE PTR ds:[rsi]
   14000e479:	add    BYTE PTR [rsi],ch
   14000e47b:	add    BYTE PTR [rax],ah
   14000e47d:	add    BYTE PTR [rcx+0x0],al
   14000e480:	ins    BYTE PTR es:[rdi],dx
   14000e481:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000e485:	add    BYTE PTR [rdx+0x0],dh
   14000e488:	imul   eax,DWORD PTR [rax],0x680067
   14000e48e:	je     0x14000e490
   14000e490:	jae    0x14000e492
   14000e492:	and    BYTE PTR [rax],al
   14000e494:	jb     0x14000e496
   14000e496:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e49a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e49e:	jbe    0x14000e4a0
   14000e4a0:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000e4a5:	add    BYTE PTR [rax],al
   14000e4a7:	add    BYTE PTR [rax+0x0],bl
   14000e4aa:	sbb    BYTE PTR [rax],al
   14000e4ac:	add    DWORD PTR [rax],eax
   14000e4ae:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000e4b2:	imul   eax,DWORD PTR [rax],0x690067
   14000e4b8:	outs   dx,BYTE PTR ds:[rsi]
   14000e4b9:	add    BYTE PTR [rcx+0x0],ah
   14000e4bc:	ins    BYTE PTR es:[rdi],dx
   14000e4bd:	add    BYTE PTR [rsi+0x0],al
   14000e4c0:	imul   eax,DWORD PTR [rax],0x65006c
   14000e4c6:	outs   dx,BYTE PTR ds:[rsi]
   14000e4c7:	add    BYTE PTR [rcx+0x0],ah
   14000e4ca:	ins    DWORD PTR es:[rdi],dx
   14000e4cb:	add    BYTE PTR [rbp+0x0],ah
   14000e4ce:	add    BYTE PTR [rax],al
   14000e4d0:	push   rdi
   14000e4d1:	add    BYTE PTR [rcx+0x0],ch
   14000e4d4:	outs   dx,BYTE PTR ds:[rsi]
   14000e4d5:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000e4d9:	add    BYTE PTR [rdi+0x0],dh
   14000e4dc:	jae    0x14000e4de
   14000e4de:	add    BYTE PTR [r11+0x0],spl
   14000e4e2:	je     0x14000e4e4
   14000e4e4:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e4ea:	add    BYTE PTR [rcx+0x0],r13b
   14000e4ee:	(bad)  
   14000e4ef:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000e4f3:	add    BYTE PTR [rdi+0x0],ah
   14000e4f6:	add    BYTE PTR cs:[rbp+0x0],ah
   14000e4fa:	js     0x14000e4fc
   14000e4fc:	add    BYTE PTR gs:[rax],al
   14000e4ff:	add    BYTE PTR [rdx+0x0],ch
   14000e502:	and    eax,0x50000100
   14000e507:	add    BYTE PTR [rdx+0x0],dh
   14000e50a:	outs   dx,DWORD PTR ds:[rsi]
   14000e50b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e50f:	add    BYTE PTR [rbx+0x0],ah
   14000e512:	je     0x14000e514
   14000e514:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e518:	ins    DWORD PTR es:[rdi],dx
   14000e519:	add    BYTE PTR [rbp+0x0],ah
   14000e51c:	add    BYTE PTR [rax],al
   14000e51e:	add    BYTE PTR [rax],al
   14000e520:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e524:	movsxd eax,DWORD PTR [rax]
   14000e526:	jb     0x14000e528
   14000e528:	outs   dx,DWORD PTR ds:[rsi]
   14000e529:	add    BYTE PTR [rbx+0x0],dh
   14000e52c:	outs   dx,DWORD PTR ds:[rsi]
   14000e52d:	add    BYTE PTR [rsi+0x0],ah
   14000e530:	je     0x14000e532
   14000e532:	scas   al,BYTE PTR es:[rdi]
   14000e533:	add    BYTE PTR [rax],ah
   14000e535:	add    BYTE PTR [rdi+0x0],dl
   14000e538:	imul   eax,DWORD PTR [rax],0x64006e
   14000e53e:	outs   dx,DWORD PTR ds:[rsi]
   14000e53f:	add    BYTE PTR [rdi+0x0],dh
   14000e542:	jae    0x14000e544
   14000e544:	scas   al,BYTE PTR es:[rdi]
   14000e545:	add    BYTE PTR [rax],ah
   14000e547:	add    BYTE PTR [rdi+0x0],cl
   14000e54a:	jo     0x14000e54c
   14000e54c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e550:	(bad)  
   14000e551:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e555:	add    BYTE PTR [rsi+0x0],ch
   14000e558:	add    BYTE PTR [eax],ah
   14000e55b:	add    BYTE PTR [rbx+0x0],dl
   14000e55e:	jns    0x14000e560
   14000e560:	jae    0x14000e562
   14000e562:	je     0x14000e564
   14000e564:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e568:	add    BYTE PTR [rax],al
   14000e56a:	add    BYTE PTR [rax],al
   14000e56c:	rex.RX add BYTE PTR [rcx],r10b
   14000e56f:	add    BYTE PTR [rcx],al
   14000e571:	add    BYTE PTR [rax+0x0],dl
   14000e574:	jb     0x14000e576
   14000e576:	outs   dx,DWORD PTR ds:[rsi]
   14000e577:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e57b:	add    BYTE PTR [rbx+0x0],ah
   14000e57e:	je     0x14000e580
   14000e580:	push   rsi
   14000e581:	add    BYTE PTR [rbp+0x0],ah
   14000e584:	jb     0x14000e586
   14000e586:	jae    0x14000e588
   14000e588:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e58e:	add    BYTE PTR [rax],al
   14000e590:	xor    DWORD PTR [rax],eax
   14000e592:	xor    BYTE PTR [rax],al
   14000e594:	add    BYTE PTR cs:[rax],dh
   14000e597:	add    BYTE PTR [rsi],ch
   14000e599:	add    BYTE PTR [rcx],dh
   14000e59b:	add    BYTE PTR [rax],dh
   14000e59d:	add    BYTE PTR [rdx],dh
   14000e59f:	add    BYTE PTR [rax+rax*1],dh
   14000e5a2:	xor    BYTE PTR [rax],al
   14000e5a4:	add    BYTE PTR cs:[rcx],dh
   14000e5a7:	add    BYTE PTR [rsi],dh
   14000e5a9:	add    BYTE PTR [rbx],dh
   14000e5ab:	add    BYTE PTR [rax],bh
   14000e5ad:	add    BYTE PTR [rax+rax*1],dh
   14000e5b0:	add    BYTE PTR [rax],al
   14000e5b2:	add    BYTE PTR [rax],al
   14000e5b4:	add    BYTE PTR [rax],r8b
   14000e5b7:	add    BYTE PTR [rcx],al
   14000e5b9:	add    BYTE PTR [rsi+0x0],dl
   14000e5bc:	(bad)  
   14000e5bd:	add    BYTE PTR [rdx+0x0],dh
   14000e5c0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e5c4:	ins    BYTE PTR es:[rdi],dx
   14000e5c5:	add    BYTE PTR [rbp+0x0],ah
   14000e5c8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e5cc:	data16 add BYTE PTR [rdi+0x0],ch
   14000e5d0:	add    BYTE PTR [rax],al
   14000e5d2:	add    BYTE PTR [rax],al
   14000e5d4:	and    al,0x0
   14000e5d6:	add    al,0x0
   14000e5d8:	add    BYTE PTR [rax],al
   14000e5da:	push   rsp
   14000e5db:	add    BYTE PTR [rdx+0x0],dh
   14000e5de:	(bad)  
   14000e5df:	add    BYTE PTR [rsi+0x0],ch
   14000e5e2:	jae    0x14000e5e4
   14000e5e4:	ins    BYTE PTR es:[rdi],dx
   14000e5e5:	add    BYTE PTR [rcx+0x0],ah
   14000e5e8:	je     0x14000e5ea
   14000e5ea:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e5f0:	add    BYTE PTR [rax],al
   14000e5f2:	add    BYTE PTR [rax],al
   14000e5f4:	or     DWORD PTR [rax+rsi*4],eax
   14000e5f7:	add    al,0xcd
   14000e5f9:	dec    ch
   14000e5fb:	(bad)  
   14000e5fc:	fadd   DWORD PTR [rax]
   14000e5fe:	add    BYTE PTR [rax],al
   14000e600:	add    BYTE PTR [rax],al
   14000e602:	add    DWORD PTR [rax],eax
   14000e604:	add    BYTE PTR [rax],al
   14000e606:	add    BYTE PTR [rax],al
   14000e608:	adc    DWORD PTR [rax],eax
   14000e60a:	add    BYTE PTR [rax],al
   14000e60c:	add    BYTE PTR [rax],al
   14000e60e:	add    BYTE PTR [rax],al
   14000e610:	add    al,BYTE PTR [rax]
   14000e612:	add    BYTE PTR [rax],al
   14000e614:	(bad)  
   14000e615:	jmp    0x14000e5c6
   14000e617:	retf   0x184
   14000e61a:	scas   al,BYTE PTR es:[rdi]
   14000e61b:	(bad)  
   14000e61c:	mov    dh,0x41
   14000e61e:	add    ch,bl
   14000e620:	movabs rsi,0x1c939a48e171793f
   14000e62a:	or     eax,0xb0eb4e74
   14000e62f:	jo     0x14000e681
   14000e631:	add    al,0xf1
   14000e633:	add    BYTE PTR [rax],al
	...
   14000e64a:	add    BYTE PTR [rax],al
   14000e64c:	mov    BYTE PTR [rax],al
   14000e64e:	add    BYTE PTR [rax],al
   14000e650:	sbb    al,0x0
   14000e652:	add    BYTE PTR [rax],al
   14000e654:	test   al,0x0
   14000e656:	add    BYTE PTR [rax],al
   14000e658:	add    al,0x0
   14000e65a:	add    BYTE PTR [rax],al
   14000e65c:	mov    al,0x0
   14000e65e:	add    BYTE PTR [rax],al
   14000e660:	(bad)  
   14000e661:	add    BYTE PTR [rax],al
   14000e663:	add    al,al
   14000e665:	add    BYTE PTR [rax],al
   14000e667:	add    BYTE PTR [rax],cl
	...
   14000e671:	add    BYTE PTR [rax],al
   14000e673:	add    al,cl
   14000e675:	add    BYTE PTR [rax],al
   14000e677:	add    BYTE PTR [rax+rax*1],cl
   14000e67a:	add    BYTE PTR [rax],al
   14000e67c:	add    BYTE PTR [rax],al
   14000e67e:	add    BYTE PTR [rax],al
   14000e680:	push   rbp
   14000e681:	add    BYTE PTR [rcx+0x0],cl
   14000e684:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14000e688:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000e68c:	add    BYTE PTR [rax],al
   14000e68e:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000e692:	rex.WB add BYTE PTR [r8],al
	...
   14000e69d:	add    BYTE PTR [rax],al
   14000e69f:	add    BYTE PTR [rax],dl
   14000e6a1:	add    BYTE PTR [rax],al
   14000e6a3:	add    BYTE PTR [rax],al
   14000e6a5:	add    BYTE PTR [rax],al
   14000e6a7:	add    BYTE PTR [rbp+0x0],cl
   14000e6aa:	push   rbp
   14000e6ab:	add    BYTE PTR [rcx+0x0],cl
	...
   14000e6b6:	add    BYTE PTR [rax],al
   14000e6b8:	(bad)  
   14000e6b9:	add    BYTE PTR [rax],al
   14000e6bb:	add    BYTE PTR [rax],dl
   14000e6bd:	add    BYTE PTR [rax],al
   14000e6bf:	add    BYTE PTR [rbp+0x0],ah
   14000e6c2:	outs   dx,BYTE PTR ds:[rsi]
   14000e6c3:	add    BYTE PTR [rip+0x53005500],ch        # 0x193013bc9
   14000e6c9:	add    BYTE PTR [rax],al
   14000e6cb:	add    BYTE PTR [rax],al
   14000e6cd:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000f000 <.reloc>:
   14000f000:	add    BYTE PTR [rax+0xb00000],al
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	mov    al,0xa3
   14000f00a:	mov    eax,0xd0a3c8a3
   14000f00f:	movabs ds:0xa3f0a3e8a3e0a3d8,eax
   14000f018:	or     BYTE PTR [rax+rdx*1+0x18a510a4],ah
   14000f01f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f020:	and    BYTE PTR [rbp-0x52ff5308],ah
   14000f026:	or     BYTE PTR [rbp-0x52e752f0],ch
   14000f02c:	and    BYTE PTR [rbp-0x52cf52d8],ch
   14000f032:	cmp    BYTE PTR [rbp-0x52b752c0],ch
   14000f038:	push   rax
   14000f039:	lods   eax,DWORD PTR ds:[rsi]
   14000f03a:	pop    rax
   14000f03b:	lods   eax,DWORD PTR ds:[rsi]
   14000f03c:	(bad)  
   14000f03d:	lods   eax,DWORD PTR ds:[rsi]
   14000f03e:	jo     0x14000efed
   14000f040:	js     0x14000efef
   14000f042:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14000f049:	lods   eax,DWORD PTR ds:[rsi]
   14000f04a:	movabs al,ds:0xc0adb8adb0ada8ad
   14000f053:	lods   eax,DWORD PTR ds:[rsi]
   14000f054:	enter  0xd0ad,0xad
   14000f058:	clc    
   14000f059:	lods   eax,DWORD PTR ds:[rsi]
   14000f05a:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14000f060:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   14000f066:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14000f06c:	rex.W scas al,BYTE PTR es:[rdi]
   14000f06e:	push   rax
   14000f06f:	scas   al,BYTE PTR es:[rdi]
   14000f070:	pop    rax
   14000f071:	scas   al,BYTE PTR es:[rdi]
   14000f072:	(bad)  
   14000f073:	scas   al,BYTE PTR es:[rdi]
   14000f074:	push   0x78ae70ae
   14000f079:	scas   al,BYTE PTR es:[rdi]
   14000f07a:	sub    BYTE PTR [rsi-0x51675178],0xa0
   14000f081:	scas   al,BYTE PTR es:[rdi]
   14000f082:	test   al,0xae
   14000f084:	mov    al,0xae
   14000f086:	mov    eax,0xc8aec0ae
   14000f08b:	scas   al,BYTE PTR es:[rdi]
   14000f08c:	shr    BYTE PTR [rsi-0x511f5128],1
   14000f092:	call   0x138afe145
   14000f097:	scas   al,BYTE PTR es:[rdi]
   14000f098:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14000f09e:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   14000f0a4:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   14000f0aa:	scas   rax,QWORD PTR es:[rdi]
   14000f0ac:	push   rax
   14000f0ad:	scas   eax,DWORD PTR es:[rdi]
   14000f0ae:	add    BYTE PTR [rax],al
   14000f0b0:	add    BYTE PTR [rax+0x100000],dl
   14000f0b6:	add    BYTE PTR [rax],al
   14000f0b8:	mov    eax,0xd8a2d0a2
   14000f0bd:	movabs ds:0x180000c000a2e0,al
   14000f0c6:	add    BYTE PTR [rax],al
   14000f0c8:	sub    BYTE PTR [rax-0x5fbf5fd0],ah
   14000f0ce:	push   rax
   14000f0cf:	movabs al,ds:0xa190a0c0a090
