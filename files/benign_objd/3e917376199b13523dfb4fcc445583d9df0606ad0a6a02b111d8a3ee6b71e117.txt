
3e917376199b13523dfb4fcc445583d9df0606ad0a6a02b111d8a3ee6b71e117.exe:     file format pei-x86-64


Disassembly of section .text:

0000000100001000 <.text>:
   100001000:	xor    BYTE PTR [rax],bh
   100001002:	add    al,BYTE PTR [rax]
   100001004:	add    BYTE PTR [rax],al
   100001006:	add    BYTE PTR [rax],al
   100001008:	rex.WRX cmp BYTE PTR [rdx],r8b
   10000100b:	add    BYTE PTR [rax],al
   10000100d:	add    BYTE PTR [rax],al
   10000100f:	add    BYTE PTR [rax+rdi*1+0x2],ch
   100001013:	add    BYTE PTR [rax],al
   100001015:	add    BYTE PTR [rax],al
   100001017:	add    BYTE PTR [rsi+0x38],bh
   10000101a:	add    al,BYTE PTR [rax]
   10000101c:	add    BYTE PTR [rax],al
   10000101e:	add    BYTE PTR [rax],al
   100001020:	xchg   edx,eax
   100001021:	cmp    BYTE PTR [rdx],al
   100001023:	add    BYTE PTR [rax],al
   100001025:	add    BYTE PTR [rax],al
   100001027:	add    BYTE PTR [rdx+0x238],ah
   10000102d:	add    BYTE PTR [rax],al
   10000102f:	add    BYTE PTR [rax+0x238],dh
   100001035:	add    BYTE PTR [rax],al
   100001037:	add    al,al
   100001039:	cmp    BYTE PTR [rdx],al
   10000103b:	add    BYTE PTR [rax],al
   10000103d:	add    BYTE PTR [rax],al
   10000103f:	add    ah,dl
   100001041:	cmp    BYTE PTR [rdx],al
   100001043:	add    BYTE PTR [rax],al
   100001045:	add    BYTE PTR [rax],al
   100001047:	add    al,ch
   100001049:	cmp    BYTE PTR [rdx],al
   10000104b:	add    BYTE PTR [rax],al
   10000104d:	add    BYTE PTR [rax],al
   10000104f:	add    dl,bh
   100001051:	cmp    BYTE PTR [rdx],al
	...
   10000105f:	add    BYTE PTR [rax],cl
   100001061:	cmp    DWORD PTR [rdx],eax
   100001063:	add    BYTE PTR [rax],al
   100001065:	add    BYTE PTR [rax],al
   100001067:	add    BYTE PTR [rcx+rdi*1],dl
   10000106a:	add    al,BYTE PTR [rax]
   10000106c:	add    BYTE PTR [rax],al
   10000106e:	add    BYTE PTR [rax],al
   100001070:	cmp    DWORD PTR es:[rdx],eax
   100001073:	add    BYTE PTR [rax],al
   100001075:	add    BYTE PTR [rax],al
   100001077:	add    BYTE PTR [rcx+rdi*1],dh
   10000107a:	add    al,BYTE PTR [rax]
   10000107c:	add    BYTE PTR [rax],al
   10000107e:	add    BYTE PTR [rax],al
   100001080:	rex.WRX cmp QWORD PTR [rdx],r8
   100001083:	add    BYTE PTR [rax],al
   100001085:	add    BYTE PTR [rax],al
   100001087:	add    BYTE PTR [rdx+0x39],ah
   10000108a:	add    al,BYTE PTR [rax]
   10000108c:	add    BYTE PTR [rax],al
   10000108e:	add    BYTE PTR [rax],al
   100001090:	jbe    0x1000010cb
   100001092:	add    al,BYTE PTR [rax]
   100001094:	add    BYTE PTR [rax],al
   100001096:	add    BYTE PTR [rax],al
   100001098:	mov    bh,BYTE PTR [rcx]
   10000109a:	add    al,BYTE PTR [rax]
   10000109c:	add    BYTE PTR [rax],al
   10000109e:	add    BYTE PTR [rax],al
   1000010a0:	movabs ds:0xb600000000000239,al
   1000010a9:	cmp    DWORD PTR [rdx],eax
   1000010ab:	add    BYTE PTR [rax],al
   1000010ad:	add    BYTE PTR [rax],al
   1000010af:	add    al,dl
   1000010b1:	cmp    DWORD PTR [rdx],eax
   1000010b3:	add    BYTE PTR [rax],al
   1000010b5:	add    BYTE PTR [rax],al
   1000010b7:	add    ah,ah
   1000010b9:	cmp    DWORD PTR [rdx],eax
   1000010bb:	add    BYTE PTR [rax],al
   1000010bd:	add    BYTE PTR [rax],al
   1000010bf:	add    al,bh
   1000010c1:	cmp    DWORD PTR [rdx],eax
   1000010c3:	add    BYTE PTR [rax],al
   1000010c5:	add    BYTE PTR [rax],al
   1000010c7:	add    BYTE PTR [rax],cl
   1000010c9:	cmp    al,BYTE PTR [rdx]
   1000010cb:	add    BYTE PTR [rax],al
   1000010cd:	add    BYTE PTR [rax],al
   1000010cf:	add    BYTE PTR [rdx+rdi*1],ah
   1000010d2:	add    al,BYTE PTR [rax]
   1000010d4:	add    BYTE PTR [rax],al
   1000010d6:	add    BYTE PTR [rax],al
   1000010d8:	cmp    al,BYTE PTR ss:[rdx]
   1000010db:	add    BYTE PTR [rax],al
   1000010dd:	add    BYTE PTR [rax],al
   1000010df:	add    BYTE PTR [rdx+rdi*1+0x2],al
   1000010e3:	add    BYTE PTR [rax],al
   1000010e5:	add    BYTE PTR [rax],al
   1000010e7:	add    BYTE PTR [rsi+0x3a],dl
   1000010ea:	add    al,BYTE PTR [rax]
   1000010ec:	add    BYTE PTR [rax],al
   1000010ee:	add    BYTE PTR [rax],al
   1000010f0:	data16 cmp al,BYTE PTR [rdx]
   1000010f3:	add    BYTE PTR [rax],al
   1000010f5:	add    BYTE PTR [rax],al
   1000010f7:	add    BYTE PTR [rdx+rdi*1+0x2],dh
   1000010fb:	add    BYTE PTR [rax],al
   1000010fd:	add    BYTE PTR [rax],al
   1000010ff:	add    BYTE PTR [rsi+0x23a],al
   100001105:	add    BYTE PTR [rax],al
   100001107:	add    BYTE PTR [rsi+0x23a],dl
   10000110d:	add    BYTE PTR [rax],al
   10000110f:	add    BYTE PTR [rdx+0x23a],dh
   100001115:	add    BYTE PTR [rax],al
   100001117:	add    dh,al
   100001119:	cmp    al,BYTE PTR [rdx]
   10000111b:	add    BYTE PTR [rax],al
   10000111d:	add    BYTE PTR [rax],al
   10000111f:	add    dl,bl
   100001121:	cmp    al,BYTE PTR [rdx]
   100001123:	add    BYTE PTR [rax],al
   100001125:	add    BYTE PTR [rax],al
   100001127:	add    al,ch
   100001129:	cmp    al,BYTE PTR [rdx]
   10000112b:	add    BYTE PTR [rax],al
   10000112d:	add    BYTE PTR [rax],al
   10000112f:	add    dh,dh
   100001131:	cmp    al,BYTE PTR [rdx]
   100001133:	add    BYTE PTR [rax],al
   100001135:	add    BYTE PTR [rax],al
   100001137:	add    BYTE PTR [rsi],al
   100001139:	cmp    eax,DWORD PTR [rdx]
   10000113b:	add    BYTE PTR [rax],al
   10000113d:	add    BYTE PTR [rax],al
   10000113f:	add    BYTE PTR [rsi],bl
   100001141:	cmp    eax,DWORD PTR [rdx]
   100001143:	add    BYTE PTR [rax],al
   100001145:	add    BYTE PTR [rax],al
   100001147:	add    BYTE PTR [rdx],bh
   100001149:	cmp    eax,DWORD PTR [rdx]
   10000114b:	add    BYTE PTR [rax],al
   10000114d:	add    BYTE PTR [rax],al
   10000114f:	add    BYTE PTR [rdx+0x3b],dl
   100001152:	add    al,BYTE PTR [rax]
   100001154:	add    BYTE PTR [rax],al
   100001156:	add    BYTE PTR [rax],al
   100001158:	(bad)  
   100001159:	cmp    eax,DWORD PTR [rdx]
   10000115b:	add    BYTE PTR [rax],al
   10000115d:	add    BYTE PTR [rax],al
   10000115f:	add    BYTE PTR [rdx+0x3b],bh
   100001162:	add    al,BYTE PTR [rax]
   100001164:	add    BYTE PTR [rax],al
   100001166:	add    BYTE PTR [rax],al
   100001168:	mov    ?,WORD PTR [rbx]
   10000116a:	add    al,BYTE PTR [rax]
   10000116c:	add    BYTE PTR [rax],al
   10000116e:	add    BYTE PTR [rax],al
   100001170:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   100001171:	cmp    eax,DWORD PTR [rdx]
   100001173:	add    BYTE PTR [rax],al
   100001175:	add    BYTE PTR [rax],al
   100001177:	add    BYTE PTR [rsi+0x23b],dh
   10000117d:	add    BYTE PTR [rax],al
   10000117f:	add    dh,al
   100001181:	cmp    eax,DWORD PTR [rdx]
   100001183:	add    BYTE PTR [rax],al
   100001185:	add    BYTE PTR [rax],al
   100001187:	add    dh,cl
   100001189:	cmp    eax,DWORD PTR [rdx]
   10000118b:	add    BYTE PTR [rax],al
   10000118d:	add    BYTE PTR [rax],al
   10000118f:	add    ah,ah
   100001191:	cmp    eax,DWORD PTR [rdx]
   100001193:	add    BYTE PTR [rax],al
   100001195:	add    BYTE PTR [rax],al
   100001197:	add    al,dh
   100001199:	cmp    eax,DWORD PTR [rdx]
   10000119b:	add    BYTE PTR [rax],al
   10000119d:	add    BYTE PTR [rax],al
   10000119f:	add    BYTE PTR [rdx],cl
   1000011a1:	cmp    al,0x2
   1000011a3:	add    BYTE PTR [rax],al
   1000011a5:	add    BYTE PTR [rax],al
   1000011a7:	add    BYTE PTR [rsi],bl
   1000011a9:	cmp    al,0x2
   1000011ab:	add    BYTE PTR [rax],al
   1000011ad:	add    BYTE PTR [rax],al
   1000011af:	add    BYTE PTR [rsp+rdi*1],dh
   1000011b2:	add    al,BYTE PTR [rax]
   1000011b4:	add    BYTE PTR [rax],al
   1000011b6:	add    BYTE PTR [rax],al
   1000011b8:	rex.R cmp al,0x2
   1000011bb:	add    BYTE PTR [rax],al
   1000011bd:	add    BYTE PTR [rax],al
   1000011bf:	add    BYTE PTR [rdx+0x3c],bl
   1000011c2:	add    al,BYTE PTR [rax]
   1000011c4:	add    BYTE PTR [rax],al
   1000011c6:	add    BYTE PTR [rax],al
   1000011c8:	push   0x3c
   1000011ca:	add    al,BYTE PTR [rax]
   1000011cc:	add    BYTE PTR [rax],al
   1000011ce:	add    BYTE PTR [rax],al
   1000011d0:	jp     0x10000120e
   1000011d2:	add    al,BYTE PTR [rax]
   1000011d4:	add    BYTE PTR [rax],al
   1000011d6:	add    BYTE PTR [rax],al
   1000011d8:	xchg   esp,eax
   1000011d9:	cmp    al,0x2
   1000011db:	add    BYTE PTR [rax],al
   1000011dd:	add    BYTE PTR [rax],al
   1000011df:	add    BYTE PTR [rdx+0x23c],ch
   1000011e5:	add    BYTE PTR [rax],al
   1000011e7:	add    al,al
   1000011e9:	cmp    al,0x2
   1000011eb:	add    BYTE PTR [rax],al
   1000011ed:	add    BYTE PTR [rax],al
   1000011ef:	add    al,dl
   1000011f1:	cmp    al,0x2
   1000011f3:	add    BYTE PTR [rax],al
   1000011f5:	add    BYTE PTR [rax],al
   1000011f7:	add    ah,bl
   1000011f9:	cmp    al,0x2
   1000011fb:	add    BYTE PTR [rax],al
   1000011fd:	add    BYTE PTR [rax],al
   1000011ff:	add    ah,ch
   100001201:	cmp    al,0x2
   100001203:	add    BYTE PTR [rax],al
   100001205:	add    BYTE PTR [rax],al
   100001207:	add    dl,bh
   100001209:	cmp    al,0x2
   10000120b:	add    BYTE PTR [rax],al
   10000120d:	add    BYTE PTR [rax],al
   10000120f:	add    BYTE PTR [rsi],dl
   100001211:	cmp    eax,0x2
   100001216:	add    BYTE PTR [rax],al
   100001218:	xor    bh,BYTE PTR [rip+0x2]        # 0x100001220
   10000121e:	add    BYTE PTR [rax],al
   100001220:	cmp    rax,0x2
   100001226:	add    BYTE PTR [rax],al
   100001228:	pop    rsi
   100001229:	cmp    eax,0x2
   10000122e:	add    BYTE PTR [rax],al
   100001230:	je     0x10000126f
   100001232:	add    al,BYTE PTR [rax]
   100001234:	add    BYTE PTR [rax],al
   100001236:	add    BYTE PTR [rax],al
   100001238:	xchg   BYTE PTR [rip+0x2],bh        # 0x100001240
   10000123e:	add    BYTE PTR [rax],al
   100001240:	movabs al,ds:0xae0000000000023d
   100001249:	cmp    eax,0x2
   10000124e:	add    BYTE PTR [rax],al
   100001250:	sar    BYTE PTR [rip+0x2],0x0        # 0x100001259
   100001257:	add    ah,cl
   100001259:	cmp    eax,0x2
   10000125e:	add    BYTE PTR [rax],al
   100001260:	fidivr DWORD PTR [rip+0x2]        # 0x100001268
   100001266:	add    BYTE PTR [rax],al
   100001268:	(bad)  
   100001269:	cmp    eax,0x2
   10000126e:	add    BYTE PTR [rax],al
   100001270:	cli    
   100001271:	cmp    eax,0x2
   100001276:	add    BYTE PTR [rax],al
   100001278:	or     BYTE PTR [rsi],bh
   10000127a:	add    al,BYTE PTR [rax]
   10000127c:	add    BYTE PTR [rax],al
   10000127e:	add    BYTE PTR [rax],al
   100001280:	sbb    al,0x3e
   100001282:	add    al,BYTE PTR [rax]
   100001284:	add    BYTE PTR [rax],al
   100001286:	add    BYTE PTR [rax],al
   100001288:	sub    al,0x3e
   10000128a:	add    al,BYTE PTR [rax]
   10000128c:	add    BYTE PTR [rax],al
   10000128e:	add    BYTE PTR [rax],al
   100001290:	rex.R
   100001291:	add    al,BYTE PTR ds:[rax]
   100001294:	add    BYTE PTR [rax],al
   100001296:	add    BYTE PTR [rax],al
   100001298:	push   rsp
   100001299:	add    al,BYTE PTR ds:[rax]
   10000129c:	add    BYTE PTR [rax],al
   10000129e:	add    BYTE PTR [rax],al
   1000012a0:	push   0x3e
   1000012a2:	add    al,BYTE PTR [rax]
   1000012a4:	add    BYTE PTR [rax],al
   1000012a6:	add    BYTE PTR [rax],al
   1000012a8:	jl     0x1000012e8
   1000012aa:	add    al,BYTE PTR [rax]
   1000012ac:	add    BYTE PTR [rax],al
   1000012ae:	add    BYTE PTR [rax],al
   1000012b0:	mov    WORD PTR [rsi],?
   1000012b2:	add    al,BYTE PTR [rax]
   1000012b4:	add    BYTE PTR [rax],al
   1000012b6:	add    BYTE PTR [rax],al
   1000012b8:	(bad)  
   1000012b9:	add    al,BYTE PTR ds:[rax]
   1000012bc:	add    BYTE PTR [rax],al
   1000012be:	add    BYTE PTR [rax],al
   1000012c0:	mov    eax,0x23e
   1000012c5:	add    BYTE PTR [rax],al
   1000012c7:	add    dl,cl
   1000012c9:	add    al,BYTE PTR ds:[rax]
   1000012cc:	add    BYTE PTR [rax],al
   1000012ce:	add    BYTE PTR [rax],al
   1000012d0:	fidivr WORD PTR [rsi]
   1000012d2:	add    al,BYTE PTR [rax]
   1000012d4:	add    BYTE PTR [rax],al
   1000012d6:	add    BYTE PTR [rax],al
   1000012d8:	lock add al,BYTE PTR ds:[rax]
	...
   1000012e8:	add    BYTE PTR [rdi],bh
   1000012ea:	add    al,BYTE PTR [rax]
   1000012ec:	add    BYTE PTR [rax],al
   1000012ee:	add    BYTE PTR [rax],al
   1000012f0:	or     bh,BYTE PTR [rdi]
   1000012f2:	add    al,BYTE PTR [rax]
   1000012f4:	add    BYTE PTR [rax],al
   1000012f6:	add    BYTE PTR [rax],al
   1000012f8:	adc    al,0x3f
   1000012fa:	add    al,BYTE PTR [rax]
   1000012fc:	add    BYTE PTR [rax],al
   1000012fe:	add    BYTE PTR [rax],al
   100001300:	and    al,0x3f
   100001302:	add    al,BYTE PTR [rax]
   100001304:	add    BYTE PTR [rax],al
   100001306:	add    BYTE PTR [rax],al
   100001308:	xor    al,0x3f
   10000130a:	add    al,BYTE PTR [rax]
   10000130c:	add    BYTE PTR [rax],al
   10000130e:	add    BYTE PTR [rax],al
   100001310:	push   0x3f
   100001312:	add    al,BYTE PTR [rax]
   100001314:	add    BYTE PTR [rax],al
   100001316:	add    BYTE PTR [rax],al
   100001318:	jle    0x100001359
   10000131a:	add    al,BYTE PTR [rax]
   10000131c:	add    BYTE PTR [rax],al
   10000131e:	add    BYTE PTR [rax],al
   100001320:	mov    BYTE PTR [rdi],bh
   100001322:	add    al,BYTE PTR [rax]
   100001324:	add    BYTE PTR [rax],al
   100001326:	add    BYTE PTR [rax],al
   100001328:	nop
   100001329:	(bad)  
   10000132a:	add    al,BYTE PTR [rax]
   10000132c:	add    BYTE PTR [rax],al
   10000132e:	add    BYTE PTR [rax],al
   100001330:	sahf   
   100001331:	(bad)  
   100001332:	add    al,BYTE PTR [rax]
   100001334:	add    BYTE PTR [rax],al
   100001336:	add    BYTE PTR [rax],al
   100001338:	test   al,0x3f
   10000133a:	add    al,BYTE PTR [rax]
   10000133c:	add    BYTE PTR [rax],al
   10000133e:	add    BYTE PTR [rax],al
   100001340:	mov    edx,0x23f
   100001345:	add    BYTE PTR [rax],al
   100001347:	add    ah,al
   100001349:	(bad)  
   10000134a:	add    al,BYTE PTR [rax]
   10000134c:	add    BYTE PTR [rax],al
   10000134e:	add    BYTE PTR [rax],al
   100001350:	fdivr  DWORD PTR [rdi]
   100001352:	add    al,BYTE PTR [rax]
   100001354:	add    BYTE PTR [rax],al
   100001356:	add    BYTE PTR [rax],al
   100001358:	out    dx,al
   100001359:	(bad)  
   10000135a:	add    al,BYTE PTR [rax]
   10000135c:	add    BYTE PTR [rax],al
   10000135e:	add    BYTE PTR [rax],al
   100001360:	cld    
   100001361:	(bad)  
   100001362:	add    al,BYTE PTR [rax]
   100001364:	add    BYTE PTR [rax],al
   100001366:	add    BYTE PTR [rax],al
   100001368:	or     BYTE PTR [rax+0x2],al
   10000136b:	add    BYTE PTR [rax],al
   10000136d:	add    BYTE PTR [rax],al
   10000136f:	add    BYTE PTR [rsi],dl
   100001371:	add    al,BYTE PTR [rax]
   100001374:	add    BYTE PTR [rax],al
   100001376:	add    BYTE PTR [rax],al
   100001378:	(bad)  
   100001379:	add    al,BYTE PTR [rax]
   10000137c:	add    BYTE PTR [rax],al
   10000137e:	add    BYTE PTR [rax],al
   100001380:	sub    BYTE PTR [rax+0x2],al
   100001383:	add    BYTE PTR [rax],al
   100001385:	add    BYTE PTR [rax],al
   100001387:	add    BYTE PTR [rax],dh
   100001389:	add    al,BYTE PTR [rax]
   10000138c:	add    BYTE PTR [rax],al
   10000138e:	add    BYTE PTR [rax],al
   100001390:	add    al,BYTE PTR ds:[rax]
   100001394:	add    BYTE PTR [rax],al
   100001396:	add    BYTE PTR [rax],al
   100001398:	push   rsi
   100001399:	add    al,BYTE PTR [rax]
   10000139c:	add    BYTE PTR [rax],al
   10000139e:	add    BYTE PTR [rax],al
   1000013a0:	push   0x240
   1000013a5:	add    BYTE PTR [rax],al
   1000013a7:	add    BYTE PTR [rsi+0x40],dh
   1000013aa:	add    al,BYTE PTR [rax]
   1000013ac:	add    BYTE PTR [rax],al
   1000013ae:	add    BYTE PTR [rax],al
   1000013b0:	(bad)  
   1000013b1:	add    al,BYTE PTR [rax]
   1000013b4:	add    BYTE PTR [rax],al
   1000013b6:	add    BYTE PTR [rax],al
   1000013b8:	mov    es,WORD PTR [rax+0x2]
   1000013bb:	add    BYTE PTR [rax],al
   1000013bd:	add    BYTE PTR [rax],al
   1000013bf:	add    BYTE PTR [rax+0x240],bl
   1000013c5:	add    BYTE PTR [rax],al
   1000013c7:	add    BYTE PTR [rax+0x240],ah
   1000013cd:	add    BYTE PTR [rax],al
   1000013cf:	add    BYTE PTR [rax+rax*2+0x2],ch
   1000013d6:	add    BYTE PTR [rax],al
   1000013d8:	mov    esp,0x240
   1000013dd:	add    BYTE PTR [rax],al
   1000013df:	add    dl,cl
   1000013e1:	add    al,BYTE PTR [rax]
   1000013e4:	add    BYTE PTR [rax],al
   1000013e6:	add    BYTE PTR [rax],al
   1000013e8:	(bad)  
   1000013e9:	add    al,BYTE PTR [rax]
   1000013ec:	add    BYTE PTR [rax],al
   1000013ee:	add    BYTE PTR [rax],al
   1000013f0:	loopne 0x100001432
   1000013f2:	add    al,BYTE PTR [rax]
   1000013f4:	add    BYTE PTR [rax],al
   1000013f6:	add    BYTE PTR [rax],al
   1000013f8:	in     al,dx
   1000013f9:	add    al,BYTE PTR [rax]
   1000013fc:	add    BYTE PTR [rax],al
   1000013fe:	add    BYTE PTR [rax],al
   100001400:	clc    
   100001401:	add    al,BYTE PTR [rax]
   100001404:	add    BYTE PTR [rax],al
   100001406:	add    BYTE PTR [rax],al
   100001408:	(bad)  
   100001409:	add    al,BYTE PTR [r8]
   10000140c:	add    BYTE PTR [rax],al
   10000140e:	add    BYTE PTR [rax],al
   100001410:	adc    BYTE PTR [rcx+0x2],al
   100001413:	add    BYTE PTR [rax],al
   100001415:	add    BYTE PTR [rax],al
   100001417:	add    BYTE PTR [rcx+rax*2],bl
   10000141a:	add    al,BYTE PTR [rax]
   10000141c:	add    BYTE PTR [rax],al
   10000141e:	add    BYTE PTR [rax],al
   100001420:	sub    al,BYTE PTR [rcx+0x2]
   100001423:	add    BYTE PTR [rax],al
   100001425:	add    BYTE PTR [rax],al
   100001427:	add    BYTE PTR [rsi],dh
   100001429:	add    al,BYTE PTR [r8]
   10000142c:	add    BYTE PTR [rax],al
   10000142e:	add    BYTE PTR [rax],al
   100001430:	rex.RX
   100001431:	add    al,BYTE PTR [r8]
   100001434:	add    BYTE PTR [rax],al
   100001436:	add    BYTE PTR [rax],al
   100001438:	push   rax
   100001439:	add    al,BYTE PTR [r8]
   10000143c:	add    BYTE PTR [rax],al
   10000143e:	add    BYTE PTR [rax],al
   100001440:	(bad)  
   100001441:	add    al,BYTE PTR [r8]
   100001444:	add    BYTE PTR [rax],al
   100001446:	add    BYTE PTR [rax],al
   100001448:	jo     0x10000148b
   10000144a:	add    al,BYTE PTR [rax]
   10000144c:	add    BYTE PTR [rax],al
   10000144e:	add    BYTE PTR [rax],al
   100001450:	jl     0x100001493
   100001452:	add    al,BYTE PTR [rax]
   100001454:	add    BYTE PTR [rax],al
   100001456:	add    BYTE PTR [rax],al
   100001458:	mov    WORD PTR [rcx+0x2],es
   10000145b:	add    BYTE PTR [rax],al
   10000145d:	add    BYTE PTR [rax],al
   10000145f:	add    BYTE PTR [rcx+rax*2+0x2],bl
   100001466:	add    BYTE PTR [rax],al
   100001468:	test   al,0x41
   10000146a:	add    al,BYTE PTR [rax]
   10000146c:	add    BYTE PTR [rax],al
   10000146e:	add    BYTE PTR [rax],al
   100001470:	mov    dl,0x41
   100001472:	add    al,BYTE PTR [rax]
   100001474:	add    BYTE PTR [rax],al
   100001476:	add    BYTE PTR [rax],al
   100001478:	mov    esp,0x241
   10000147d:	add    BYTE PTR [rax],al
   10000147f:	add    dh,al
   100001481:	add    al,BYTE PTR [r8]
   100001484:	add    BYTE PTR [rax],al
   100001486:	add    BYTE PTR [rax],al
   100001488:	fadd   DWORD PTR [rcx+0x2]
   10000148b:	add    BYTE PTR [rax],al
   10000148d:	add    BYTE PTR [rax],al
   10000148f:	add    dh,ah
   100001491:	add    al,BYTE PTR [r8]
   100001494:	add    BYTE PTR [rax],al
   100001496:	add    BYTE PTR [rax],al
   100001498:	repnz add al,BYTE PTR [r8]
	...
   1000014a8:	or     BYTE PTR [rdx+0x2],al
   1000014ab:	add    BYTE PTR [rax],al
   1000014ad:	add    BYTE PTR [rax],al
   1000014af:	add    BYTE PTR [rdx+rax*2+0x2],al
	...
   1000014bf:	add    BYTE PTR [rax+0x242],al
	...
   1000014cd:	add    BYTE PTR [rax],al
   1000014cf:	add    BYTE PTR [rdx+0x242],dl
   1000014d5:	add    BYTE PTR [rax],al
   1000014d7:	add    BYTE PTR [rdx+rax*2+0x2],ah
	...
   1000014e6:	add    BYTE PTR [rax],al
   1000014e8:	mov    eax,0x242
   1000014ed:	add    BYTE PTR [rax],al
   1000014ef:	add    dl,cl
   1000014f1:	rex.X add al,BYTE PTR [rax]
   1000014f4:	add    BYTE PTR [rax],al
   1000014f6:	add    BYTE PTR [rax],al
   1000014f8:	loopne 0x10000153c
   1000014fa:	add    al,BYTE PTR [rax]
   1000014fc:	add    BYTE PTR [rax],al
   1000014fe:	add    BYTE PTR [rax],al
   100001500:	inc    BYTE PTR [rdx+0x2]
   100001503:	add    BYTE PTR [rax],al
   100001505:	add    BYTE PTR [rax],al
   100001507:	add    BYTE PTR [rsi],cl
   100001509:	rex.XB add al,BYTE PTR [r8]
	...
   100001518:	jb     0x10000151a
   10000151a:	add    BYTE PTR [rax],al
   10000151c:	add    BYTE PTR [rax],al
   10000151e:	add    BYTE PTR [rax+0x0],al
   100001524:	add    BYTE PTR [rax],al
   100001526:	add    BYTE PTR [rax],al
   100001528:	cmp    eax,DWORD PTR [rbx]
   10000152a:	add    BYTE PTR [rax],al
   10000152c:	add    BYTE PTR [rax],al
   10000152e:	add    BYTE PTR [rax+0x465],al
   100001534:	add    BYTE PTR [rax],al
   100001536:	add    BYTE PTR [rax+0x119],al
   10000153c:	add    BYTE PTR [rax],al
   10000153e:	add    BYTE PTR [rax+0x136],al
   100001544:	add    BYTE PTR [rax],al
   100001546:	add    BYTE PTR [rax+0x2a3],al
   10000154c:	add    BYTE PTR [rax],al
   10000154e:	add    BYTE PTR [rax+0x2b4],al
   100001554:	add    BYTE PTR [rax],al
   100001556:	add    BYTE PTR [rax+0x2b3],al
   10000155c:	add    BYTE PTR [rax],al
   10000155e:	add    BYTE PTR [rax+0x17c],al
   100001564:	add    BYTE PTR [rax],al
   100001566:	add    BYTE PTR [rax+0x4cb],al
   10000156c:	add    BYTE PTR [rax],al
   10000156e:	add    BYTE PTR [rax+0x4c9],al
   100001574:	add    BYTE PTR [rax],al
   100001576:	add    BYTE PTR [rax+0x3a0],al
   10000157c:	add    BYTE PTR [rax],al
   10000157e:	add    BYTE PTR [rax+0xd1],al
   100001584:	add    BYTE PTR [rax],al
   100001586:	add    BYTE PTR [rax+0x75],al
   10000158c:	add    BYTE PTR [rax],al
   10000158e:	add    BYTE PTR [rax+0x2e],al
   100001594:	add    BYTE PTR [rax],al
   100001596:	add    BYTE PTR [rax+0x52c],al
   10000159c:	add    BYTE PTR [rax],al
   10000159e:	add    BYTE PTR [rax+0xf3],al
   1000015a4:	add    BYTE PTR [rax],al
   1000015a6:	add    BYTE PTR [rax+0x31e],al
   1000015ac:	add    BYTE PTR [rax],al
   1000015ae:	add    BYTE PTR [rax+0x320],al
   1000015b4:	add    BYTE PTR [rax],al
   1000015b6:	add    BYTE PTR [rax+0x308],al
   1000015bc:	add    BYTE PTR [rax],al
   1000015be:	add    BYTE PTR [rax+0x4c6],al
   1000015c4:	add    BYTE PTR [rax],al
   1000015c6:	add    BYTE PTR [rax+0x164],al
   1000015cc:	add    BYTE PTR [rax],al
   1000015ce:	add    BYTE PTR [rax+0x246],al
   1000015d4:	add    BYTE PTR [rax],al
   1000015d6:	add    BYTE PTR [rax+0x402],al
   1000015dc:	add    BYTE PTR [rax],al
   1000015de:	add    BYTE PTR [rax+0x2bb],al
   1000015e4:	add    BYTE PTR [rax],al
   1000015e6:	add    BYTE PTR [rax+0x535],al
   1000015ec:	add    BYTE PTR [rax],al
   1000015ee:	add    BYTE PTR [rax+0x2d9],al
   1000015f4:	add    BYTE PTR [rax],al
   1000015f6:	add    BYTE PTR [rax+0x1b9],al
   1000015fc:	add    BYTE PTR [rax],al
   1000015fe:	add    BYTE PTR [rax+0x326],al
   100001604:	add    BYTE PTR [rax],al
   100001606:	add    BYTE PTR [rax+0x404],al
   10000160c:	add    BYTE PTR [rax],al
   10000160e:	add    BYTE PTR [rax+0xec],al
   100001614:	add    BYTE PTR [rax],al
   100001616:	add    BYTE PTR [rax+0x469],al
   10000161c:	add    BYTE PTR [rax],al
   10000161e:	add    BYTE PTR [rax+0x468],al
   100001624:	add    BYTE PTR [rax],al
   100001626:	add    BYTE PTR [rax+0x321],al
   10000162c:	add    BYTE PTR [rax],al
   10000162e:	add    BYTE PTR [rax+0x49c],al
   100001634:	add    BYTE PTR [rax],al
   100001636:	add    BYTE PTR [rax+0x166],al
   10000163c:	add    BYTE PTR [rax],al
   10000163e:	add    BYTE PTR [rax+0x46a],al
   100001644:	add    BYTE PTR [rax],al
   100001646:	add    BYTE PTR [rax+0x316],al
   10000164c:	add    BYTE PTR [rax],al
   10000164e:	add    BYTE PTR [rax+0xda],al
   100001654:	add    BYTE PTR [rax],al
   100001656:	add    BYTE PTR [rax+0x477],al
   10000165c:	add    BYTE PTR [rax],al
   10000165e:	add    BYTE PTR [rax+0x484],al
   100001664:	add    BYTE PTR [rax],al
   100001666:	add    BYTE PTR [rax+0x509],al
   10000166c:	add    BYTE PTR [rax],al
   10000166e:	add    BYTE PTR [rax+0x312],al
   100001674:	add    BYTE PTR [rax],al
   100001676:	add    BYTE PTR [rax+0x1de],al
   10000167c:	add    BYTE PTR [rax],al
   10000167e:	add    BYTE PTR [rax+0x377],al
   100001684:	add    BYTE PTR [rax],al
   100001686:	add    BYTE PTR [rax+0x261],al
   10000168c:	add    BYTE PTR [rax],al
   10000168e:	add    BYTE PTR [rax+0x4ca],al
   100001694:	add    BYTE PTR [rax],al
   100001696:	add    BYTE PTR [rax+0x290],al
   10000169c:	add    BYTE PTR [rax],al
   10000169e:	add    BYTE PTR [rax+0x2be],al
   1000016a4:	add    BYTE PTR [rax],al
   1000016a6:	add    BYTE PTR [rax+0x11a],al
   1000016ac:	add    BYTE PTR [rax],al
   1000016ae:	add    BYTE PTR [rax+0x239],al
   1000016b4:	add    BYTE PTR [rax],al
   1000016b6:	add    BYTE PTR [rax+0x4b0],al
   1000016bc:	add    BYTE PTR [rax],al
   1000016be:	add    BYTE PTR [rax+0x4a0],al
   1000016c4:	add    BYTE PTR [rax],al
   1000016c6:	add    BYTE PTR [rax+0x329],al
   1000016cc:	add    BYTE PTR [rax],al
   1000016ce:	add    BYTE PTR [rax+0x19b],al
   1000016d4:	add    BYTE PTR [rax],al
   1000016d6:	add    BYTE PTR [rax+0x19c],al
   1000016dc:	add    BYTE PTR [rax],al
   1000016de:	add    BYTE PTR [rax+0x525],al
   1000016e4:	add    BYTE PTR [rax],al
   1000016e6:	add    BYTE PTR [rax+0x527],al
   1000016ec:	add    BYTE PTR [rax],al
   1000016ee:	add    BYTE PTR [rax+0x526],al
   1000016f4:	add    BYTE PTR [rax],al
   1000016f6:	add    BYTE PTR [rax+0x47a],al
   1000016fc:	add    BYTE PTR [rax],al
   1000016fe:	add    BYTE PTR [rax+0x0],al
   100001704:	add    BYTE PTR [rax],al
   100001706:	add    BYTE PTR [rax],al
   100001708:	xor    BYTE PTR [rdx],al
   10000170a:	add    BYTE PTR [rax],al
   10000170c:	add    BYTE PTR [rax],al
   10000170e:	add    BYTE PTR [rax+0xf3],al
   100001714:	add    BYTE PTR [rax],al
   100001716:	add    BYTE PTR [rax+0x334],al
   10000171c:	add    BYTE PTR [rax],al
   10000171e:	add    BYTE PTR [rax+0x193],al
   100001724:	add    BYTE PTR [rax],al
   100001726:	add    BYTE PTR [rax+0x40e],al
   10000172c:	add    BYTE PTR [rax],al
   10000172e:	add    BYTE PTR [rax+0xd0],al
   100001734:	add    BYTE PTR [rax],al
   100001736:	add    BYTE PTR [rax+0x4e7],al
   10000173c:	add    BYTE PTR [rax],al
   10000173e:	add    BYTE PTR [rax+0xf5],al
   100001744:	add    BYTE PTR [rax],al
   100001746:	add    BYTE PTR [rax+0x402],al
   10000174c:	add    BYTE PTR [rax],al
   10000174e:	add    BYTE PTR [rax+0x30e],al
   100001754:	add    BYTE PTR [rax],al
   100001756:	add    BYTE PTR [rax+0x31d],al
   10000175c:	add    BYTE PTR [rax],al
   10000175e:	add    BYTE PTR [rax+0x316],al
   100001764:	add    BYTE PTR [rax],al
   100001766:	add    BYTE PTR [rax+0x2fc],al
   10000176c:	add    BYTE PTR [rax],al
   10000176e:	add    BYTE PTR [rax+0x30d],al
   100001774:	add    BYTE PTR [rax],al
   100001776:	add    BYTE PTR [rax+0xa3],al
   10000177c:	add    BYTE PTR [rax],al
   10000177e:	add    BYTE PTR [rax+0x4d7],al
   100001784:	add    BYTE PTR [rax],al
   100001786:	add    BYTE PTR [rax+0x4d8],al
   10000178c:	add    BYTE PTR [rax],al
   10000178e:	add    BYTE PTR [rax+0x4d9],al
   100001794:	add    BYTE PTR [rax],al
   100001796:	add    BYTE PTR [rax+0x130],al
   10000179c:	add    BYTE PTR [rax],al
   10000179e:	add    BYTE PTR [rax+0x1a1],al
   1000017a4:	add    BYTE PTR [rax],al
   1000017a6:	add    BYTE PTR [rax+0x494],al
   1000017ac:	add    BYTE PTR [rax],al
   1000017ae:	add    BYTE PTR [rax+0x4e5],al
   1000017b4:	add    BYTE PTR [rax],al
   1000017b6:	add    BYTE PTR [rax+0x4e6],al
   1000017bc:	add    BYTE PTR [rax],al
   1000017be:	add    BYTE PTR [rax+0x502],al
   1000017c4:	add    BYTE PTR [rax],al
   1000017c6:	add    BYTE PTR [rax+0x1cd],al
   1000017cc:	add    BYTE PTR [rax],al
   1000017ce:	add    BYTE PTR [rax+0x4e8],al
   1000017d4:	add    BYTE PTR [rax],al
   1000017d6:	add    BYTE PTR [rax+0x503],al
   1000017dc:	add    BYTE PTR [rax],al
   1000017de:	add    BYTE PTR [rax+0x158],al
   1000017e4:	add    BYTE PTR [rax],al
   1000017e6:	add    BYTE PTR [rax+0x410],al
   1000017ec:	add    BYTE PTR [rax],al
   1000017ee:	add    BYTE PTR [rax+0x26f],al
   1000017f4:	add    BYTE PTR [rax],al
   1000017f6:	add    BYTE PTR [rax+0x40f],al
   1000017fc:	add    BYTE PTR [rax],al
   1000017fe:	add    BYTE PTR [rax+0x470],al
   100001804:	add    BYTE PTR [rax],al
   100001806:	add    BYTE PTR [rax+0x496],al
   10000180c:	add    BYTE PTR [rax],al
   10000180e:	add    BYTE PTR [rax+0x497],al
   100001814:	add    BYTE PTR [rax],al
   100001816:	add    BYTE PTR [rax+0x3e5],al
   10000181c:	add    BYTE PTR [rax],al
   10000181e:	add    BYTE PTR [rax+0x505],al
   100001824:	add    BYTE PTR [rax],al
   100001826:	add    BYTE PTR [rax+0xb8],al
   10000182c:	add    BYTE PTR [rax],al
   10000182e:	add    BYTE PTR [rax+0x495],al
   100001834:	add    BYTE PTR [rax],al
   100001836:	add    BYTE PTR [rax+0x344],al
   10000183c:	add    BYTE PTR [rax],al
   10000183e:	add    BYTE PTR [rax+0x134],al
   100001844:	add    BYTE PTR [rax],al
   100001846:	add    BYTE PTR [rax+0x14d],al
   10000184c:	add    BYTE PTR [rax],al
   10000184e:	add    BYTE PTR [rax+0x31f],al
   100001854:	add    BYTE PTR [rax],al
   100001856:	add    BYTE PTR [rax+0x45e],al
   10000185c:	add    BYTE PTR [rax],al
   10000185e:	add    BYTE PTR [rax+0x31c],al
   100001864:	add    BYTE PTR [rax],al
   100001866:	add    BYTE PTR [rax+0x1f3],al
   10000186c:	add    BYTE PTR [rax],al
   10000186e:	add    BYTE PTR [rax+0xca],al
   100001874:	add    BYTE PTR [rax],al
   100001876:	add    BYTE PTR [rax+0x307],al
   10000187c:	add    BYTE PTR [rax],al
   10000187e:	add    BYTE PTR [rax+0x306],al
   100001884:	add    BYTE PTR [rax],al
   100001886:	add    BYTE PTR [rax+0x178],al
   10000188c:	add    BYTE PTR [rax],al
   10000188e:	add    BYTE PTR [rax+0x35f],al
   100001894:	add    BYTE PTR [rax],al
   100001896:	add    BYTE PTR [rax+0x125],al
   10000189c:	add    BYTE PTR [rax],al
   10000189e:	add    BYTE PTR [rax+0x411],al
   1000018a4:	add    BYTE PTR [rax],al
   1000018a6:	add    BYTE PTR [rax+0x4cf],al
   1000018ac:	add    BYTE PTR [rax],al
   1000018ae:	add    BYTE PTR [rax+0x2fd],al
   1000018b4:	add    BYTE PTR [rax],al
   1000018b6:	add    BYTE PTR [rax+0x155],al
   1000018bc:	add    BYTE PTR [rax],al
   1000018be:	add    BYTE PTR [rax+0x347],al
   1000018c4:	add    BYTE PTR [rax],al
   1000018c6:	add    BYTE PTR [rax+0x44b],al
   1000018cc:	add    BYTE PTR [rax],al
   1000018ce:	add    BYTE PTR [rax+0x44f],al
   1000018d4:	add    BYTE PTR [rax],al
   1000018d6:	add    BYTE PTR [rax+0x2e9],al
   1000018dc:	add    BYTE PTR [rax],al
   1000018de:	add    BYTE PTR [rax+0x44a],al
   1000018e4:	add    BYTE PTR [rax],al
   1000018e6:	add    BYTE PTR [rax+0x45c],al
   1000018ec:	add    BYTE PTR [rax],al
   1000018ee:	add    BYTE PTR [rax+0x412],al
   1000018f4:	add    BYTE PTR [rax],al
   1000018f6:	add    BYTE PTR [rax+0x2ec],al
   1000018fc:	add    BYTE PTR [rax],al
   1000018fe:	add    BYTE PTR [rax+0x10a],al
   100001904:	add    BYTE PTR [rax],al
   100001906:	add    BYTE PTR [rax+0xaa],al
   10000190c:	add    BYTE PTR [rax],al
   10000190e:	add    BYTE PTR [rax+0x107],al
   100001914:	add    BYTE PTR [rax],al
   100001916:	add    BYTE PTR [rax+0x48a],al
   10000191c:	add    BYTE PTR [rax],al
   10000191e:	add    BYTE PTR [rax+0x471],al
   100001924:	add    BYTE PTR [rax],al
   100001926:	add    BYTE PTR [rax+0x210],al
   10000192c:	add    BYTE PTR [rax],al
   10000192e:	add    BYTE PTR [rax+0x211],al
   100001934:	add    BYTE PTR [rax],al
   100001936:	add    BYTE PTR [rax+0x475],al
   10000193c:	add    BYTE PTR [rax],al
   10000193e:	add    BYTE PTR [rax+0x474],al
   100001944:	add    BYTE PTR [rax],al
   100001946:	add    BYTE PTR [rax+0x501],al
   10000194c:	add    BYTE PTR [rax],al
   10000194e:	add    BYTE PTR [rax+0x500],al
   100001954:	add    BYTE PTR [rax],al
   100001956:	add    BYTE PTR [rax+0x36b],al
   10000195c:	add    BYTE PTR [rax],al
   10000195e:	add    BYTE PTR [rax+0x50a],al
   100001964:	add    BYTE PTR [rax],al
   100001966:	add    BYTE PTR [rax+0x2d3],al
   10000196c:	add    BYTE PTR [rax],al
   10000196e:	add    BYTE PTR [rax+0x320],al
   100001974:	add    BYTE PTR [rax],al
   100001976:	add    BYTE PTR [rax+0x531],al
   10000197c:	add    BYTE PTR [rax],al
   10000197e:	add    BYTE PTR [rax+0x52f],al
   100001984:	add    BYTE PTR [rax],al
   100001986:	add    BYTE PTR [rax+0x52e],al
   10000198c:	add    BYTE PTR [rax],al
   10000198e:	add    BYTE PTR [rax+0x50b],al
   100001994:	add    BYTE PTR [rax],al
   100001996:	add    BYTE PTR [rax+0x0],al
   10000199c:	add    BYTE PTR [rax],al
   10000199e:	add    BYTE PTR [rax],al
   1000019a0:	(bad)  
   1000019a1:	add    BYTE PTR [rax],al
   1000019a3:	add    BYTE PTR [rax],al
   1000019a5:	add    BYTE PTR [rax],al
   1000019a7:	and    BYTE PTR [rdi+0x0],0x0
   1000019ae:	add    BYTE PTR [rax+0x184],al
   1000019b4:	add    BYTE PTR [rax],al
   1000019b6:	add    BYTE PTR [rax+0x219],al
   1000019bc:	add    BYTE PTR [rax],al
   1000019be:	add    BYTE PTR [rax+0x216],al
   1000019c4:	add    BYTE PTR [rax],al
   1000019c6:	add    BYTE PTR [rax+0x217],al
   1000019cc:	add    BYTE PTR [rax],al
   1000019ce:	add    BYTE PTR [rax+0x2a2],al
   1000019d4:	add    BYTE PTR [rax],al
   1000019d6:	add    BYTE PTR [rax+0x1e5],al
   1000019dc:	add    BYTE PTR [rax],al
   1000019de:	add    BYTE PTR [rax+0x132],al
   1000019e4:	add    BYTE PTR [rax],al
   1000019e6:	add    BYTE PTR [rax+0x174],al
   1000019ec:	add    BYTE PTR [rax],al
   1000019ee:	add    BYTE PTR [rax+0x167],al
   1000019f4:	add    BYTE PTR [rax],al
   1000019f6:	add    BYTE PTR [rax+0x0],al
   1000019fc:	add    BYTE PTR [rax],al
   1000019fe:	add    BYTE PTR [rax],al
   100001a00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100001a01:	add    eax,DWORD PTR [rax]
   100001a03:	add    BYTE PTR [rax],al
   100001a05:	add    BYTE PTR [rax],al
   100001a07:	sbb    dh,0x3
   100001a0a:	add    BYTE PTR [rax],al
   100001a0c:	add    BYTE PTR [rax],al
   100001a0e:	add    BYTE PTR [rax+0x3d4],al
   100001a14:	add    BYTE PTR [rax],al
   100001a16:	add    BYTE PTR [rax+0x3b0],al
   100001a1c:	add    BYTE PTR [rax],al
   100001a1e:	add    BYTE PTR [rax+0x3e7],al
   100001a24:	add    BYTE PTR [rax],al
   100001a26:	add    BYTE PTR [rax+0x3c7],al
   100001a2c:	add    BYTE PTR [rax],al
   100001a2e:	add    BYTE PTR [rax+0x3a5],al
   100001a34:	add    BYTE PTR [rax],al
   100001a36:	add    BYTE PTR [rax+0x3e5],al
   100001a3c:	add    BYTE PTR [rax],al
   100001a3e:	add    BYTE PTR [rax+0x175],al
   100001a44:	add    BYTE PTR [rax],al
   100001a46:	add    BYTE PTR [rax+0x3bd],al
   100001a4c:	add    BYTE PTR [rax],al
   100001a4e:	add    BYTE PTR [rax+0x3bc],al
   100001a54:	add    BYTE PTR [rax],al
   100001a56:	add    BYTE PTR [rax+0x3d9],al
   100001a5c:	add    BYTE PTR [rax],al
   100001a5e:	add    BYTE PTR [rax+0x3c8],al
   100001a64:	add    BYTE PTR [rax],al
   100001a66:	add    BYTE PTR [rax+0x3c4],al
   100001a6c:	add    BYTE PTR [rax],al
   100001a6e:	add    BYTE PTR [rax+0x3dc],al
   100001a74:	add    BYTE PTR [rax],al
   100001a76:	add    BYTE PTR [rax+0x3d0],al
   100001a7c:	add    BYTE PTR [rax],al
   100001a7e:	add    BYTE PTR [rax+0x3b9],al
   100001a84:	add    BYTE PTR [rax],al
   100001a86:	add    BYTE PTR [rax+0x3b8],al
   100001a8c:	add    BYTE PTR [rax],al
   100001a8e:	add    BYTE PTR [rax+0x3cf],al
   100001a94:	add    BYTE PTR [rax],al
   100001a96:	add    BYTE PTR [rax+0x3af],al
   100001a9c:	add    BYTE PTR [rax],al
   100001a9e:	add    BYTE PTR [rax+0x3e4],al
   100001aa4:	add    BYTE PTR [rax],al
   100001aa6:	add    BYTE PTR [rax+0x3cb],al
   100001aac:	add    BYTE PTR [rax],al
   100001aae:	add    BYTE PTR [rax+0x3c1],al
   100001ab4:	add    BYTE PTR [rax],al
   100001ab6:	add    BYTE PTR [rax+0x3b4],al
   100001abc:	add    BYTE PTR [rax],al
   100001abe:	add    BYTE PTR [rax+0x3b5],al
   100001ac4:	add    BYTE PTR [rax],al
   100001ac6:	add    BYTE PTR [rax+0x3ca],al
   100001acc:	add    BYTE PTR [rax],al
   100001ace:	add    BYTE PTR [rax+0x3ae],al
   100001ad4:	add    BYTE PTR [rax],al
   100001ad6:	add    BYTE PTR [rax+0x3cc],al
   100001adc:	add    BYTE PTR [rax],al
   100001ade:	add    BYTE PTR [rax+0x3db],al
   100001ae4:	add    BYTE PTR [rax],al
   100001ae6:	add    BYTE PTR [rax+0x3a9],al
   100001aec:	add    BYTE PTR [rax],al
   100001aee:	add    BYTE PTR [rax+0x3ee],al
   100001af4:	add    BYTE PTR [rax],al
   100001af6:	add    BYTE PTR [rax+0x3ab],al
   100001afc:	add    BYTE PTR [rax],al
   100001afe:	add    BYTE PTR [rax+0x3fb],al
   100001b04:	add    BYTE PTR [rax],al
   100001b06:	add    BYTE PTR [rax+0x3ec],al
   100001b0c:	add    BYTE PTR [rax],al
   100001b0e:	add    BYTE PTR [rax+0x39d],al
   100001b14:	add    BYTE PTR [rax],al
   100001b16:	add    BYTE PTR [rax+0x39e],al
   100001b1c:	add    BYTE PTR [rax],al
   100001b1e:	add    BYTE PTR [rax+0x3a1],al
   100001b24:	add    BYTE PTR [rax],al
   100001b26:	add    BYTE PTR [rax+0x397],al
   100001b2c:	add    BYTE PTR [rax],al
   100001b2e:	add    BYTE PTR [rax+0x3b6],al
   100001b34:	add    BYTE PTR [rax],al
   100001b36:	add    BYTE PTR [rax+0x2f5],al
   100001b3c:	add    BYTE PTR [rax],al
   100001b3e:	add    BYTE PTR [rax+0x383],al
   100001b44:	add    BYTE PTR [rax],al
   100001b46:	add    BYTE PTR [rax+0x38c],al
   100001b4c:	add    BYTE PTR [rax],al
   100001b4e:	add    BYTE PTR [rax+0x7],al
   100001b54:	add    BYTE PTR [rax],al
   100001b56:	add    BYTE PTR [rax+0x3fd],al
   100001b5c:	add    BYTE PTR [rax],al
   100001b5e:	add    BYTE PTR [rax+0xbb],al
   100001b64:	add    BYTE PTR [rax],al
   100001b66:	add    BYTE PTR [rax+0x165],al
   100001b6c:	add    BYTE PTR [rax],al
   100001b6e:	add    BYTE PTR [rax+0x1db],al
   100001b74:	add    BYTE PTR [rax],al
   100001b76:	add    BYTE PTR [rax+0x16a],al
   100001b7c:	add    BYTE PTR [rax],al
   100001b7e:	add    BYTE PTR [rax+0x2c],al
   100001b84:	add    BYTE PTR [rax],al
   100001b86:	add    BYTE PTR [rax+0x63],al
   100001b8c:	add    BYTE PTR [rax],al
   100001b8e:	add    BYTE PTR [rax+0xf4],al
   100001b94:	add    BYTE PTR [rax],al
   100001b96:	add    BYTE PTR [rax+0x1bd],al
   100001b9c:	add    BYTE PTR [rax],al
   100001b9e:	add    BYTE PTR [rax+0x276],al
   100001ba4:	add    BYTE PTR [rax],al
   100001ba6:	add    BYTE PTR [rax+0x24b],al
   100001bac:	add    BYTE PTR [rax],al
   100001bae:	add    BYTE PTR [rax+0x2f6],al
   100001bb4:	add    BYTE PTR [rax],al
   100001bb6:	add    BYTE PTR [rax+0x384],al
   100001bbc:	add    BYTE PTR [rax],al
   100001bbe:	add    BYTE PTR [rax+0x326],al
   100001bc4:	add    BYTE PTR [rax],al
   100001bc6:	add    BYTE PTR [rax+0x2bb],al
   100001bcc:	add    BYTE PTR [rax],al
   100001bce:	add    BYTE PTR [rax+0x1d8],al
   100001bd4:	add    BYTE PTR [rax],al
   100001bd6:	add    BYTE PTR [rax+0x2f7],al
   100001bdc:	add    BYTE PTR [rax],al
   100001bde:	add    BYTE PTR [rax+0x274],al
   100001be4:	add    BYTE PTR [rax],al
   100001be6:	add    BYTE PTR [rax+0x34b],al
   100001bec:	add    BYTE PTR [rax],al
   100001bee:	add    BYTE PTR [rax+0x277],al
   100001bf4:	add    BYTE PTR [rax],al
   100001bf6:	add    BYTE PTR [rax+0x2f8],al
   100001bfc:	add    BYTE PTR [rax],al
   100001bfe:	add    BYTE PTR [rax+0x333],al
   100001c04:	add    BYTE PTR [rax],al
   100001c06:	add    BYTE PTR [rax+0x16],al
   100001c0c:	add    BYTE PTR [rax],al
   100001c0e:	add    BYTE PTR [rax+0x3e],al
   100001c14:	add    BYTE PTR [rax],al
   100001c16:	add    BYTE PTR [rax+0x6d],al
   100001c1c:	add    BYTE PTR [rax],al
   100001c1e:	add    BYTE PTR [rax+0x130],al
   100001c24:	add    BYTE PTR [rax],al
   100001c26:	add    BYTE PTR [rax+0x292],al
   100001c2c:	add    BYTE PTR [rax],al
   100001c2e:	add    BYTE PTR [rax+0x37c],al
   100001c34:	add    BYTE PTR [rax],al
   100001c36:	add    BYTE PTR [rax+0x174],al
   100001c3c:	add    BYTE PTR [rax],al
   100001c3e:	add    BYTE PTR [rax+0x2c2],al
   100001c44:	add    BYTE PTR [rax],al
   100001c46:	add    BYTE PTR [rax+0x2b4],al
   100001c4c:	add    BYTE PTR [rax],al
   100001c4e:	add    BYTE PTR [rax+0x26f],al
   100001c54:	add    BYTE PTR [rax],al
   100001c56:	add    BYTE PTR [rax+0x3f],al
   100001c5c:	add    BYTE PTR [rax],al
   100001c5e:	add    BYTE PTR [rax+0x6e],al
   100001c64:	add    BYTE PTR [rax],al
   100001c66:	add    BYTE PTR [rax+0x46],al
   100001c6c:	add    BYTE PTR [rax],al
   100001c6e:	add    BYTE PTR [rax+0x54],al
   100001c74:	add    BYTE PTR [rax],al
   100001c76:	add    BYTE PTR [rax+0x305],al
   100001c7c:	add    BYTE PTR [rax],al
   100001c7e:	add    BYTE PTR [rax+0x159],al
   100001c84:	add    BYTE PTR [rax],al
   100001c86:	add    BYTE PTR [rax+0x18f],al
   100001c8c:	add    BYTE PTR [rax],al
   100001c8e:	add    BYTE PTR [rax+0x31a],al
   100001c94:	add    BYTE PTR [rax],al
   100001c96:	add    BYTE PTR [rax+0xdf],al
   100001c9c:	add    BYTE PTR [rax],al
   100001c9e:	add    BYTE PTR [rax+0x1b3],al
   100001ca4:	add    BYTE PTR [rax],al
   100001ca6:	add    BYTE PTR [rax+0x280],al
   100001cac:	add    BYTE PTR [rax],al
   100001cae:	add    BYTE PTR [rax+0x32c],al
   100001cb4:	add    BYTE PTR [rax],al
   100001cb6:	add    BYTE PTR [rax+0x313],al
   100001cbc:	add    BYTE PTR [rax],al
   100001cbe:	add    BYTE PTR [rax+0x304],al
   100001cc4:	add    BYTE PTR [rax],al
   100001cc6:	add    BYTE PTR [rax+0x42],al
   100001ccc:	add    BYTE PTR [rax],al
   100001cce:	add    BYTE PTR [rax+0x31b],al
   100001cd4:	add    BYTE PTR [rax],al
   100001cd6:	add    BYTE PTR [rax+0x1be],al
   100001cdc:	add    BYTE PTR [rax],al
   100001cde:	add    BYTE PTR [rax+0x35d],al
   100001ce4:	add    BYTE PTR [rax],al
   100001ce6:	add    BYTE PTR [rax+0x358],al
   100001cec:	add    BYTE PTR [rax],al
   100001cee:	add    BYTE PTR [rax+0x318],al
   100001cf4:	add    BYTE PTR [rax],al
   100001cf6:	add    BYTE PTR [rax+0x9a],al
   100001cfc:	add    BYTE PTR [rax],al
   100001cfe:	add    BYTE PTR [rax+0x94],al
   100001d04:	add    BYTE PTR [rax],al
   100001d06:	add    BYTE PTR [rax+0x306],al
   100001d0c:	add    BYTE PTR [rax],al
   100001d0e:	add    BYTE PTR [rax+0xcc],al
   100001d14:	add    BYTE PTR [rax],al
   100001d16:	add    BYTE PTR [rax+0x233],al
   100001d1c:	add    BYTE PTR [rax],al
   100001d1e:	add    BYTE PTR [rax+0x275],al
   100001d24:	add    BYTE PTR [rax],al
   100001d26:	add    BYTE PTR [rax+0x225],al
   100001d2c:	add    BYTE PTR [rax],al
   100001d2e:	add    BYTE PTR [rax+0x15],al
   100001d34:	add    BYTE PTR [rax],al
   100001d36:	add    BYTE PTR [rax+0xbe],al
   100001d3c:	add    BYTE PTR [rax],al
   100001d3e:	add    BYTE PTR [rax+0x22e],al
   100001d44:	add    BYTE PTR [rax],al
   100001d46:	add    BYTE PTR [rax+0x22b],al
   100001d4c:	add    BYTE PTR [rax],al
   100001d4e:	add    BYTE PTR [rax+0x189],al
   100001d54:	add    BYTE PTR [rax],al
   100001d56:	add    BYTE PTR [rax+0x39b],al
   100001d5c:	add    BYTE PTR [rax],al
   100001d5e:	add    BYTE PTR [rax+0x24a],al
   100001d64:	add    BYTE PTR [rax],al
   100001d66:	add    BYTE PTR [rax+0x327],al
   100001d6c:	add    BYTE PTR [rax],al
   100001d6e:	add    BYTE PTR [rax+0x1e1],al
   100001d74:	add    BYTE PTR [rax],al
   100001d76:	add    BYTE PTR [rax+0x1b7],al
   100001d7c:	add    BYTE PTR [rax],al
   100001d7e:	add    BYTE PTR [rax+0x1b8],al
   100001d84:	add    BYTE PTR [rax],al
   100001d86:	add    BYTE PTR [rax+0x1e0],al
   100001d8c:	add    BYTE PTR [rax],al
   100001d8e:	add    BYTE PTR [rax+0x1d0],al
   100001d94:	add    BYTE PTR [rax],al
   100001d96:	add    BYTE PTR [rax+0x1f2],al
   100001d9c:	add    BYTE PTR [rax],al
   100001d9e:	add    BYTE PTR [rax+0x329],al
   100001da4:	add    BYTE PTR [rax],al
   100001da6:	add    BYTE PTR [rax+0x32a],al
   100001dac:	add    BYTE PTR [rax],al
   100001dae:	add    BYTE PTR [rax+0x19e],al
   100001db4:	add    BYTE PTR [rax],al
   100001db6:	add    BYTE PTR [rax+0x19f],al
   100001dbc:	add    BYTE PTR [rax],al
   100001dbe:	add    BYTE PTR [rax+0x19b],al
   100001dc4:	add    BYTE PTR [rax],al
   100001dc6:	add    BYTE PTR [rax+0x217],al
   100001dcc:	add    BYTE PTR [rax],al
   100001dce:	add    BYTE PTR [rax+0x1ae],al
   100001dd4:	add    BYTE PTR [rax],al
   100001dd6:	add    BYTE PTR [rax+0xde],al
   100001ddc:	add    BYTE PTR [rax],al
   100001dde:	add    BYTE PTR [rax+0xe0],al
   100001de4:	add    BYTE PTR [rax],al
   100001de6:	add    BYTE PTR [rax+0x355],al
   100001dec:	add    BYTE PTR [rax],al
   100001dee:	add    BYTE PTR [rax+0x27b],al
   100001df4:	add    BYTE PTR [rax],al
   100001df6:	add    BYTE PTR [rax+0x1ca],al
   100001dfc:	add    BYTE PTR [rax],al
   100001dfe:	add    BYTE PTR [rax+0x134],al
   100001e04:	add    BYTE PTR [rax],al
   100001e06:	add    BYTE PTR [rax+0x27a],al
   100001e0c:	add    BYTE PTR [rax],al
   100001e0e:	add    BYTE PTR [rax+0x273],al
   100001e14:	add    BYTE PTR [rax],al
   100001e16:	add    BYTE PTR [rax+0x27e],al
   100001e1c:	add    BYTE PTR [rax],al
   100001e1e:	add    BYTE PTR [rax+0x108],al
   100001e24:	add    BYTE PTR [rax],al
   100001e26:	add    BYTE PTR [rax+0x2f],al
   100001e2c:	add    BYTE PTR [rax],al
   100001e2e:	add    BYTE PTR [rax+0x102],al
   100001e34:	add    BYTE PTR [rax],al
   100001e36:	add    BYTE PTR [rax+0x377],al
   100001e3c:	add    BYTE PTR [rax],al
   100001e3e:	add    BYTE PTR [rax+0x39a],al
   100001e44:	add    BYTE PTR [rax],al
   100001e46:	add    BYTE PTR [rax+0x2b9],al
   100001e4c:	add    BYTE PTR [rax],al
   100001e4e:	add    BYTE PTR [rax+0x249],al
   100001e54:	add    BYTE PTR [rax],al
   100001e56:	add    BYTE PTR [rax+0x242],al
   100001e5c:	add    BYTE PTR [rax],al
   100001e5e:	add    BYTE PTR [rax+0x194],al
   100001e64:	add    BYTE PTR [rax],al
   100001e66:	add    BYTE PTR [rax+0x1d2],al
   100001e6c:	add    BYTE PTR [rax],al
   100001e6e:	add    BYTE PTR [rax+0x209],al
   100001e74:	add    BYTE PTR [rax],al
   100001e76:	add    BYTE PTR [rax+0x37b],al
   100001e7c:	add    BYTE PTR [rax],al
   100001e7e:	add    BYTE PTR [rax+0x1fe],al
   100001e84:	add    BYTE PTR [rax],al
   100001e86:	add    BYTE PTR [rax+0xee],al
   100001e8c:	add    BYTE PTR [rax],al
   100001e8e:	add    BYTE PTR [rax+0x369],al
   100001e94:	add    BYTE PTR [rax],al
   100001e96:	add    BYTE PTR [rax+0x2b3],al
   100001e9c:	add    BYTE PTR [rax],al
   100001e9e:	add    BYTE PTR [rax+0x349],al
   100001ea4:	add    BYTE PTR [rax],al
   100001ea6:	add    BYTE PTR [rax+0x399],al
   100001eac:	add    BYTE PTR [rax],al
   100001eae:	add    BYTE PTR [rax+0x33],al
   100001eb4:	add    BYTE PTR [rax],al
   100001eb6:	add    BYTE PTR [rax+0x2c4],al
   100001ebc:	add    BYTE PTR [rax],al
   100001ebe:	add    BYTE PTR [rax+0x393],al
   100001ec4:	add    BYTE PTR [rax],al
   100001ec6:	add    BYTE PTR [rax+0x3fe],al
   100001ecc:	add    BYTE PTR [rax],al
   100001ece:	add    BYTE PTR [rax+0x3a0],al
   100001ed4:	add    BYTE PTR [rax],al
   100001ed6:	add    BYTE PTR [rax+0x30],al
   100001edc:	add    BYTE PTR [rax],al
   100001ede:	add    BYTE PTR [rax+0x3d3],al
   100001ee4:	add    BYTE PTR [rax],al
   100001ee6:	add    BYTE PTR [rax+0x3ed],al
   100001eec:	add    BYTE PTR [rax],al
   100001eee:	add    BYTE PTR [rax+0x3e1],al
   100001ef4:	add    BYTE PTR [rax],al
   100001ef6:	add    BYTE PTR [rax+0x3dd],al
   100001efc:	add    BYTE PTR [rax],al
   100001efe:	add    BYTE PTR [rax+0x2de],al
   100001f04:	add    BYTE PTR [rax],al
   100001f06:	add    BYTE PTR [rax+0x2e8],al
   100001f0c:	add    BYTE PTR [rax],al
   100001f0e:	add    BYTE PTR [rax+0x2cb],al
   100001f14:	add    BYTE PTR [rax],al
   100001f16:	add    BYTE PTR [rax+0x2d0],al
   100001f1c:	add    BYTE PTR [rax],al
   100001f1e:	add    BYTE PTR [rax+0x2db],al
   100001f24:	add    BYTE PTR [rax],al
   100001f26:	add    BYTE PTR [rax+0x2e6],al
   100001f2c:	add    BYTE PTR [rax],al
   100001f2e:	add    BYTE PTR [rax+0x2d1],al
   100001f34:	add    BYTE PTR [rax],al
   100001f36:	add    BYTE PTR [rax+0x2d3],al
   100001f3c:	add    BYTE PTR [rax],al
   100001f3e:	add    BYTE PTR [rax+0x2d2],al
   100001f44:	add    BYTE PTR [rax],al
   100001f46:	add    BYTE PTR [rax+0x2e5],al
   100001f4c:	add    BYTE PTR [rax],al
   100001f4e:	add    BYTE PTR [rax+0x2e7],al
   100001f54:	add    BYTE PTR [rax],al
   100001f56:	add    BYTE PTR [rax+0x2ed],al
   100001f5c:	add    BYTE PTR [rax],al
   100001f5e:	add    BYTE PTR [rax+0x2d4],al
   100001f64:	add    BYTE PTR [rax],al
   100001f66:	add    BYTE PTR [rax+0x2ca],al
   100001f6c:	add    BYTE PTR [rax],al
   100001f6e:	add    BYTE PTR [rax+0x2dd],al
   100001f74:	add    BYTE PTR [rax],al
   100001f76:	add    BYTE PTR [rax+0x2ee],al
   100001f7c:	add    BYTE PTR [rax],al
   100001f7e:	add    BYTE PTR [rax+0x2da],al
   100001f84:	add    BYTE PTR [rax],al
   100001f86:	add    BYTE PTR [rax+0x2e3],al
   100001f8c:	add    BYTE PTR [rax],al
   100001f8e:	add    BYTE PTR [rax+0x2d6],al
   100001f94:	add    BYTE PTR [rax],al
   100001f96:	add    BYTE PTR [rax+0x2c9],al
   100001f9c:	add    BYTE PTR [rax],al
   100001f9e:	add    BYTE PTR [rax+0x2d8],al
   100001fa4:	add    BYTE PTR [rax],al
   100001fa6:	add    BYTE PTR [rax+0x2d7],al
   100001fac:	add    BYTE PTR [rax],al
   100001fae:	add    BYTE PTR [rax+0x3f7],al
   100001fb4:	add    BYTE PTR [rax],al
   100001fb6:	add    BYTE PTR [rax+0x3f6],al
   100001fbc:	add    BYTE PTR [rax],al
   100001fbe:	add    BYTE PTR [rax+0x3f5],al
   100001fc4:	add    BYTE PTR [rax],al
   100001fc6:	add    BYTE PTR [rax+0x2f1],al
   100001fcc:	add    BYTE PTR [rax],al
   100001fce:	add    BYTE PTR [rax+0x2f2],al
   100001fd4:	add    BYTE PTR [rax],al
   100001fd6:	add    BYTE PTR [rax+0x25a],al
   100001fdc:	add    BYTE PTR [rax],al
   100001fde:	add    BYTE PTR [rax+0x3c9],al
   100001fe4:	add    BYTE PTR [rax],al
   100001fe6:	add    BYTE PTR [rax+0x3e3],al
   100001fec:	add    BYTE PTR [rax],al
   100001fee:	add    BYTE PTR [rax+0x3d5],al
   100001ff4:	add    BYTE PTR [rax],al
   100001ff6:	add    BYTE PTR [rax+0x3f4],al
   100001ffc:	add    BYTE PTR [rax],al
   100001ffe:	add    BYTE PTR [rax+0x3b7],al
   100002004:	add    BYTE PTR [rax],al
   100002006:	add    BYTE PTR [rax+0x2f9],al
   10000200c:	add    BYTE PTR [rax],al
   10000200e:	add    BYTE PTR [rax+0x3a3],al
   100002014:	add    BYTE PTR [rax],al
   100002016:	add    BYTE PTR [rax+0x0],al
   10000201c:	add    BYTE PTR [rax],al
   10000201e:	add    BYTE PTR [rax],al
   100002020:	nop
   100002021:	nop
   100002022:	nop
   100002023:	nop
   100002024:	nop
   100002025:	nop
   100002026:	nop
   100002027:	nop
   100002028:	nop
   100002029:	nop
   10000202a:	nop
   10000202b:	nop
   10000202c:	nop
   10000202d:	nop
   10000202e:	nop
   10000202f:	nop
   100002030:	push   rbx
   100002032:	sub    rsp,0x20
   100002036:	mov    rax,QWORD PTR gs:0x30
   10000203f:	mov    rbx,rcx
   100002042:	mov    rcx,QWORD PTR [rip+0x27077]        # 0x1000290c0
   100002049:	add    rax,rcx
   10000204c:	cmp    rcx,0x1480
   100002053:	jl     0x10000267e
   100002059:	test   rax,rax
   10000205c:	je     0x10000268a
   100002062:	mov    rdx,QWORD PTR [rax+0xd8]
   100002069:	test   rdx,rdx
   10000206c:	je     0x10000268a
   100002072:	mov    rcx,QWORD PTR [rbx+0x8]
   100002076:	mov    QWORD PTR [rdx+0xe8],rcx
   10000207d:	add    rsp,0x20
   100002081:	pop    rbx
   100002082:	ret    
   100002083:	nop
   100002084:	nop
   100002085:	nop
   100002086:	nop
   100002087:	nop
   100002088:	nop
   100002089:	nop
   10000208a:	nop
   10000208b:	nop
   10000208c:	nop
   10000208d:	nop
   10000208e:	nop
   10000208f:	nop
   100002090:	push   rbx
   100002092:	sub    rsp,0x20
   100002096:	xor    eax,eax
   100002098:	mov    QWORD PTR [rcx+0x10],rdx
   10000209c:	mov    rbx,rcx
   10000209f:	mov    WORD PTR [rcx+0x18],ax
   1000020a3:	mov    BYTE PTR [rcx+0x1a],al
   1000020a6:	mov    rcx,QWORD PTR [rip+0x27013]        # 0x1000290c0
   1000020ad:	mov    rax,QWORD PTR gs:0x30
   1000020b6:	add    rax,rcx
   1000020b9:	cmp    rcx,0x1480
   1000020c0:	jl     0x1000026cd
   1000020c6:	test   rax,rax
   1000020c9:	je     0x1000026d9
   1000020cf:	mov    rcx,QWORD PTR [rax+0xd8]
   1000020d6:	test   rcx,rcx
   1000020d9:	je     0x1000026d9
   1000020df:	mov    rax,QWORD PTR [rcx+0xe8]
   1000020e6:	mov    QWORD PTR [rbx+0x8],rax
   1000020ea:	mov    rax,QWORD PTR [rip+0xfffffffffffffa17]        # 0x100001b08
   1000020f1:	mov    QWORD PTR [rcx+0xe8],rbx
   1000020f8:	mov    rcx,QWORD PTR [rax]
   1000020fb:	mov    rax,rbx
   1000020fe:	xor    rcx,rbx
   100002101:	mov    QWORD PTR [rbx],rcx
   100002104:	add    rsp,0x20
   100002108:	pop    rbx
   100002109:	ret    
   10000210a:	call   QWORD PTR [rip+0xfffffffffffff010]        # 0x100001120
   100002110:	nop
   100002111:	jmp    0x10000225d
   100002116:	mov    rax,QWORD PTR [rbx+0xf0]
   10000211d:	mov    QWORD PTR [rsp+0x48],rax
   100002122:	lea    rax,[rip+0x129b7]        # 0x100014ae0
   100002129:	mov    QWORD PTR [rsp+0x50],rax
   10000212e:	lea    rdx,[rsp+0x48]
   100002133:	lea    rcx,[rsp+0x38]
   100002138:	call   0x100014860
   10000213d:	nop
   10000213e:	jmp    0x100002524
   100002143:	call   QWORD PTR [rip+0xfffffffffffff5c7]        # 0x100001710
   100002149:	nop
   10000214a:	jmp    0x10000220e
   10000214f:	lea    rax,[rip+0x38fca]        # 0x10003b120
   100002156:	mov    QWORD PTR [rsp+0x20],rax
   10000215b:	mov    r9d,0x689
   100002161:	lea    r8,[rip+0x38ed8]        # 0x10003b040
   100002168:	lea    rdx,[rip+0x38fc9]        # 0x10003b138
   10000216f:	mov    ecx,0x1
   100002174:	call   QWORD PTR [rip+0xfffffffffffff9de]        # 0x100001b58
   10000217a:	nop
   10000217b:	jmp    0x100002292
   100002180:	call   QWORD PTR [rip+0xffffffffffffef9a]        # 0x100001120
   100002186:	nop
   100002187:	jmp    0x1000022c0
   10000218c:	call   QWORD PTR [rip+0xfffffffffffff9be]        # 0x100001b50
   100002192:	mov    r11,QWORD PTR [rip+0x26f27]        # 0x1000290c0
   100002199:	mov    rax,QWORD PTR gs:0x30
   1000021a2:	add    rax,r11
   1000021a5:	cmp    r11,0x1480
   1000021ac:	jge    0x1000021b7
   1000021ae:	mov    ecx,r11d
   1000021b1:	call   QWORD PTR [rip+0xffffffffffffef69]        # 0x100001120
   1000021b7:	mov    rcx,QWORD PTR [rax+0xd8]
   1000021be:	jmp    0x1000022d9
   1000021c3:	call   QWORD PTR [rip+0xfffffffffffffa57]        # 0x100001c20
   1000021c9:	nop
   1000021ca:	jmp    0x1000022e6
   1000021cf:	nop
   1000021d0:	mul    DWORD PTR [rdx]
   1000021d2:	add    BYTE PTR [rax],al
   1000021d4:	xchg   edx,eax
   1000021d5:	and    al,BYTE PTR [rax]
   1000021d7:	add    ah,ch
   1000021d9:	and    DWORD PTR [rax],eax
   1000021db:	add    BYTE PTR [rsi],cl
   1000021dd:	and    al,BYTE PTR [rax]
   1000021df:	add    BYTE PTR [rdx-0x6dffffde],dl
   1000021e5:	and    al,BYTE PTR [rax]
   1000021e7:	add    BYTE PTR [rdx+0x48000022],dl
   1000021ed:	test   ebx,ebx
   1000021ef:	jne    0x100002504
   1000021f5:	mov    rax,QWORD PTR [rip+0x26ecc]        # 0x1000290c8
   1000021fc:	movzx  ecx,BYTE PTR [rax+0x3d0]
   100002203:	shr    cl,1
   100002205:	test   cl,0x1
   100002208:	jne    0x100002143
   10000220e:	call   QWORD PTR [rip+0xfffffffffffff31c]        # 0x100001530
   100002214:	jmp    0x100002292
   100002216:	nop
   100002217:	nop
   100002218:	nop
   100002219:	nop
   10000221a:	nop
   10000221b:	nop
   10000221c:	nop
   10000221d:	nop
   10000221e:	nop
   10000221f:	nop
   100002220:	push   rdi
   100002222:	sub    rsp,0xb0
   100002229:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   100002232:	mov    QWORD PTR [rsp+0xc0],rbx
   10000223a:	movsxd rdi,edx
   10000223d:	mov    rcx,QWORD PTR [rip+0x26e7c]        # 0x1000290c0
   100002244:	mov    rax,QWORD PTR gs:0x30
   10000224d:	add    rax,rcx
   100002250:	cmp    rcx,0x1480
   100002257:	jl     0x10000210a
   10000225d:	mov    rbx,QWORD PTR [rax+0x38]
   100002261:	mov    rdx,QWORD PTR [rip+0xfffffffffffffbd8]        # 0x100001e40
   100002268:	lea    rcx,[rsp+0x80]
   100002270:	call   0x100002090
   100002275:	nop
   100002276:	cmp    edi,0x6
   100002279:	ja     0x10000214f
   10000227f:	lea    rdx,[rip+0xffffffffffffdd7a]        # 0x100000000
   100002286:	mov    ecx,DWORD PTR [rdx+rdi*4+0x21d0]
   10000228d:	add    rcx,rdx
   100002290:	jmp    rcx
   100002292:	lea    rcx,[rsp+0x80]
   10000229a:	call   0x100002030
   10000229f:	nop
   1000022a0:	mov    rcx,QWORD PTR [rip+0x26e19]        # 0x1000290c0
   1000022a7:	mov    rax,QWORD PTR gs:0x30
   1000022b0:	add    rax,rcx
   1000022b3:	cmp    rcx,0x1480
   1000022ba:	jl     0x100002180
   1000022c0:	test   rax,rax
   1000022c3:	je     0x10000218c
   1000022c9:	mov    rcx,QWORD PTR [rax+0xd8]
   1000022d0:	test   rcx,rcx
   1000022d3:	je     0x10000218c
   1000022d9:	cmp    DWORD PTR [rcx+0x204],0x0
   1000022e0:	jne    0x1000021c3
   1000022e6:	mov    rbx,QWORD PTR [rsp+0xc0]
   1000022ee:	add    rsp,0xb0
   1000022f5:	pop    rdi
   1000022f6:	ret    
   1000022f7:	test   rbx,rbx
   1000022fa:	je     0x100002292
   1000022fc:	mov    DWORD PTR [rbx+0xdc],0x1
   100002306:	mov    rcx,QWORD PTR [rbx+0xf0]
   10000230d:	test   rcx,rcx
   100002310:	je     0x100002317
   100002312:	call   0x100002540
   100002317:	mov    rcx,rbx
   10000231a:	call   QWORD PTR [rip+0xfffffffffffff410]        # 0x100001730
   100002320:	jmp    0x100002292
   100002325:	add    rsp,0x30
   100002329:	pop    rsi
   10000232a:	repz ret 
   10000232c:	nop
   10000232d:	nop
   10000232e:	nop
   10000232f:	nop
   100002330:	nop
   100002331:	nop
   100002332:	nop
   100002333:	nop
   100002334:	nop
   100002335:	nop
   100002336:	nop
   100002337:	nop
   100002338:	nop
   100002339:	nop
   10000233a:	nop
   10000233b:	nop
   10000233c:	nop
   10000233d:	nop
   10000233e:	nop
   10000233f:	nop
   100002340:	mov    QWORD PTR [rsp+0x8],rbx
   100002345:	push   rdi
   100002346:	sub    rsp,0x20
   10000234a:	mov    ebx,edx
   10000234c:	mov    edi,ecx
   10000234e:	call   QWORD PTR [rip+0xfffffffffffff8b4]        # 0x100001c08
   100002354:	mov    r8d,ebx
   100002357:	mov    edx,edi
   100002359:	mov    rcx,rax
   10000235c:	mov    rbx,QWORD PTR [rsp+0x30]
   100002361:	add    rsp,0x20
   100002365:	pop    rdi
   100002366:	rex.W jmp QWORD PTR [rip+0xfffffffffffff45b]        # 0x1000017c8
   10000236d:	nop
   10000236e:	nop
   10000236f:	nop
   100002370:	nop
   100002371:	cld    
   100002372:	add    BYTE PTR [rax],al
   100002374:	add    DWORD PTR [rax],eax
   100002376:	add    BYTE PTR [rax],al
   100002378:	rol    BYTE PTR [rbx],1
   10000237a:	add    DWORD PTR [rax],eax
   10000237c:	add    DWORD PTR [rax],eax
   10000237e:	add    BYTE PTR [rax],al
   100002380:	add    BYTE PTR [rsi],al
   100002382:	add    DWORD PTR [rax],eax
   100002384:	add    DWORD PTR [rax],eax
   100002386:	add    BYTE PTR [rax],al
   100002388:	(bad)  
   100002389:	(bad)  
   10000238a:	add    DWORD PTR [rax],eax
   10000238c:	add    DWORD PTR [rax],eax
   10000238e:	add    BYTE PTR [rax],al
   100002390:	and    BYTE PTR [rax],cl
   100002392:	add    DWORD PTR [rax],eax
   100002394:	add    DWORD PTR [rax],eax
   100002396:	add    BYTE PTR [rax],al
   100002398:	ror    BYTE PTR [rax],1
   10000239a:	add    DWORD PTR [rax],eax
   10000239c:	add    DWORD PTR [rax],eax
   10000239e:	add    BYTE PTR [rax],al
   1000023a0:	or     BYTE PTR [rcx],0x1
   1000023a3:	add    BYTE PTR [rcx],al
   1000023a5:	add    BYTE PTR [rax],al
   1000023a7:	add    BYTE PTR [rax],ah
   1000023a9:	or     eax,0x10001
   1000023ae:	add    BYTE PTR [rax],al
   1000023b0:	rex or eax,0x10001
   1000023b6:	add    BYTE PTR [rax],al
   1000023b8:	(bad)  
   1000023b9:	or     eax,0x10001
   1000023be:	add    BYTE PTR [rax],al
   1000023c0:	mov    al,0xf
   1000023c2:	add    DWORD PTR [rax],eax
   1000023c4:	add    DWORD PTR [rax],eax
   1000023c6:	add    BYTE PTR [rax],al
   1000023c8:	add    BYTE PTR [rdx],dl
   1000023ca:	add    DWORD PTR [rax],eax
   1000023cc:	add    DWORD PTR [rax],eax
   1000023ce:	add    BYTE PTR [rax],al
   1000023d0:	rcl    BYTE PTR [rdx],0x1
   1000023d3:	add    BYTE PTR [rcx],al
   1000023d5:	add    BYTE PTR [rax],al
   1000023d7:	add    BYTE PTR [rax+0x1000113],dl
   1000023dd:	add    BYTE PTR [rax],al
   1000023df:	add    BYTE PTR [rax+0x1000115],dl
   1000023e5:	add    BYTE PTR [rax],al
   1000023e7:	add    BYTE PTR [rax+0x16],dl
   1000023ea:	add    DWORD PTR [rax],eax
   1000023ec:	add    DWORD PTR [rax],eax
   1000023ee:	add    BYTE PTR [rax],al
   1000023f0:	adc    BYTE PTR [rdi],dl
   1000023f2:	add    DWORD PTR [rax],eax
   1000023f4:	add    DWORD PTR [rax],eax
   1000023f6:	add    BYTE PTR [rax],al
   1000023f8:	loopne 0x100002411
   1000023fa:	add    DWORD PTR [rax],eax
   1000023fc:	add    DWORD PTR [rax],eax
   1000023fe:	add    BYTE PTR [rax],al
   100002400:	mov    al,0x18
   100002402:	add    DWORD PTR [rax],eax
   100002404:	add    DWORD PTR [rax],eax
   100002406:	add    BYTE PTR [rax],al
   100002408:	nop
   100002409:	sbb    DWORD PTR [rcx],eax
   10000240b:	add    BYTE PTR [rcx],al
   10000240d:	add    BYTE PTR [rax],al
   10000240f:	add    al,al
   100002411:	sbb    al,BYTE PTR [rcx]
   100002413:	add    BYTE PTR [rcx],al
   100002415:	add    BYTE PTR [rax],al
   100002417:	add    BYTE PTR [rax],dh
   100002419:	sbb    eax,0x10001
   10000241e:	add    BYTE PTR [rax],al
   100002420:	rex sbb eax,0x10001
   100002426:	add    BYTE PTR [rax],al
   100002428:	movabs al,ds:0x5000000001000024
   100002431:	sbb    eax,0x10001
   100002436:	add    BYTE PTR [rax],al
   100002438:	(bad)  
   100002439:	sbb    eax,0x10001
   10000243e:	add    BYTE PTR [rax],al
   100002440:	jo     0x10000245f
   100002442:	add    DWORD PTR [rax],eax
   100002444:	add    DWORD PTR [rax],eax
   100002446:	add    BYTE PTR [rax],al
   100002448:	shl    BYTE PTR [rax+rax*1],0x0
   10000244c:	add    DWORD PTR [rax],eax
   10000244e:	add    BYTE PTR [rax],al
   100002450:	shl    BYTE PTR [rax+rax*1],1
   100002453:	add    BYTE PTR [rcx],al
   100002455:	add    BYTE PTR [rax],al
   100002457:	add    BYTE PTR [rax+0x100011d],dl
   10000245d:	add    BYTE PTR [rax],al
   10000245f:	add    BYTE PTR [rax+0x100011d],dh
   100002465:	add    BYTE PTR [rax],al
   100002467:	add    al,dl
   100002469:	sbb    eax,0x10001
   10000246e:	add    BYTE PTR [rax],al
   100002470:	lock sbb eax,0x10001
   100002476:	add    BYTE PTR [rax],al
   100002478:	add    BYTE PTR [rsi],bl
   10000247a:	add    DWORD PTR [rax],eax
   10000247c:	add    DWORD PTR [rax],eax
   10000247e:	add    BYTE PTR [rax],al
   100002480:	jo     0x1000024a0
   100002482:	add    DWORD PTR [rax],eax
   100002484:	add    DWORD PTR [rax],eax
   100002486:	add    BYTE PTR [rax],al
   100002488:	sbb    BYTE PTR [rsi],0x1
   10000248b:	add    BYTE PTR [rcx],al
   10000248d:	add    BYTE PTR [rax],al
   10000248f:	add    BYTE PTR [rax],ah
   100002491:	add    eax,0x10001
   100002496:	add    BYTE PTR [rax],al
   100002498:	nop
   100002499:	nop
   10000249a:	nop
   10000249b:	nop
   10000249c:	nop
   10000249d:	nop
   10000249e:	nop
   10000249f:	nop
   1000024a0:	mov    rcx,rdx
   1000024a3:	mov    edx,r8d
   1000024a6:	rex.W jmp QWORD PTR [rip+0xfffffffffffff09b]        # 0x100001548
   1000024ad:	nop
   1000024ae:	nop
   1000024af:	nop
   1000024b0:	nop
   1000024b1:	nop
   1000024b2:	nop
   1000024b3:	nop
   1000024b4:	nop
   1000024b5:	nop
   1000024b6:	nop
   1000024b7:	nop
   1000024b8:	nop
   1000024b9:	nop
   1000024ba:	nop
   1000024bb:	nop
   1000024bc:	nop
   1000024bd:	nop
   1000024be:	nop
   1000024bf:	nop
   1000024c0:	mov    eax,0x2c
   1000024c5:	ret    
   1000024c6:	nop
   1000024c7:	nop
   1000024c8:	nop
   1000024c9:	nop
   1000024ca:	nop
   1000024cb:	nop
   1000024cc:	nop
   1000024cd:	nop
   1000024ce:	nop
   1000024cf:	nop
   1000024d0:	lea    rax,[rip+0x1]        # 0x1000024d8
   1000024d7:	ret    
   1000024d8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1000024dc:	movsxd eax,DWORD PTR [rax]
   1000024de:	jb     0x1000024e0
   1000024e0:	outs   dx,DWORD PTR ds:[rsi]
   1000024e1:	add    BYTE PTR [rbx+0x0],dh
   1000024e4:	outs   dx,DWORD PTR ds:[rsi]
   1000024e5:	add    BYTE PTR [rsi+0x0],ah
   1000024e8:	je     0x1000024ea
   1000024ea:	and    BYTE PTR [rax],al
   1000024ec:	push   rbx
   1000024ed:	add    BYTE PTR [rcx+0x0],dl
   1000024f0:	rex.WR add BYTE PTR [rax],r12b
   1000024f3:	add    BYTE PTR [rbx+0x0],dl
   1000024f6:	add    BYTE PTR gs:[rdx+0x0],dh
   1000024fa:	jbe    0x1000024fc
   1000024fc:	add    BYTE PTR gs:[rdx+0x0],dh
   100002500:	add    BYTE PTR [rax],al
   100002502:	add    BYTE PTR [rax],al
   100002504:	mov    rcx,rbx
   100002507:	call   QWORD PTR [rip+0xfffffffffffff223]        # 0x100001730
   10000250d:	cmp    QWORD PTR [rbx+0xf0],0x0
   100002515:	je     0x100002524
   100002517:	call   0x100002590
   10000251c:	test   eax,eax
   10000251e:	jne    0x100002116
   100002524:	mov    DWORD PTR [rbx+0xdc],0x0
   10000252e:	jmp    0x1000021f5
   100002533:	nop
   100002534:	nop
   100002535:	nop
   100002536:	nop
   100002537:	nop
   100002538:	nop
   100002539:	nop
   10000253a:	nop
   10000253b:	nop
   10000253c:	nop
   10000253d:	nop
   10000253e:	nop
   10000253f:	nop
   100002540:	mov    QWORD PTR [rsp+0x8],rbx
   100002545:	push   rdi
   100002546:	sub    rsp,0x50
   10000254a:	mov    rax,QWORD PTR [rip+0x26b6f]        # 0x1000290c0
   100002551:	mov    rbx,QWORD PTR gs:0x30
   10000255a:	mov    rdi,rcx
   10000255d:	add    rbx,rax
   100002560:	cmp    rax,0x1480
   100002566:	jl     0x100002753
   10000256c:	call   0x100002590
   100002571:	test   eax,eax
   100002573:	jne    0x100002763
   100002579:	xor    eax,eax
   10000257b:	mov    rbx,QWORD PTR [rsp+0x60]
   100002580:	add    rsp,0x50
   100002584:	pop    rdi
   100002585:	ret    
   100002586:	nop
   100002587:	nop
   100002588:	nop
   100002589:	nop
   10000258a:	nop
   10000258b:	nop
   10000258c:	nop
   10000258d:	nop
   10000258e:	nop
   10000258f:	nop
   100002590:	sub    rsp,0x28
   100002594:	mov    rcx,QWORD PTR [rip+0x26b25]        # 0x1000290c0
   10000259b:	mov    rax,QWORD PTR gs:0x30
   1000025a4:	add    rax,rcx
   1000025a7:	cmp    rcx,0x1480
   1000025ae:	jl     0x100002710
   1000025b4:	test   rax,rax
   1000025b7:	je     0x10000271c
   1000025bd:	mov    rcx,QWORD PTR [rax+0xd8]
   1000025c4:	test   rcx,rcx
   1000025c7:	je     0x10000271c
   1000025cd:	mov    eax,DWORD PTR [rcx+0x2d8]
   1000025d3:	shr    eax,0x3
   1000025d6:	and    eax,0x1
   1000025d9:	add    rsp,0x28
   1000025dd:	ret    
   1000025de:	nop
   1000025df:	nop
   1000025e0:	nop
   1000025e1:	nop
   1000025e2:	nop
   1000025e3:	nop
   1000025e4:	nop
   1000025e5:	nop
   1000025e6:	nop
   1000025e7:	nop
   1000025e8:	nop
   1000025e9:	nop
   1000025ea:	nop
   1000025eb:	nop
   1000025ec:	nop
   1000025ed:	nop
   1000025ee:	nop
   1000025ef:	nop
   1000025f0:	test   edx,edx
   1000025f2:	jne    0x10000232a
   1000025f8:	mov    QWORD PTR [rsp+0x10],rbx
   1000025fd:	push   rsi
   1000025fe:	sub    rsp,0x30
   100002602:	jmp    0x10001358c
   100002607:	nop
   100002608:	nop
   100002609:	nop
   10000260a:	nop
   10000260b:	nop
   10000260c:	nop
   10000260d:	nop
   10000260e:	nop
   10000260f:	nop
   100002610:	cmp    rcx,QWORD PTR [rip+0x26bd9]        # 0x1000291f0
   100002617:	jne    0x10000262a
   100002619:	rol    rcx,0x10
   10000261d:	test   cx,0xffff
   100002622:	jne    0x100002626
   100002624:	repz ret 
   100002626:	ror    rcx,0x10
   10000262a:	jmp    0x100003850
   10000262f:	nop
   100002630:	sub    rsp,0x10
   100002634:	mov    QWORD PTR [rsp],r10
   100002638:	mov    QWORD PTR [rsp+0x8],r11
   10000263d:	xor    r11,r11
   100002640:	lea    r10,[rsp+0x18]
   100002645:	sub    r10,rax
   100002648:	cmovb  r10,r11
   10000264c:	mov    r11,QWORD PTR gs:0x10
   100002655:	cmp    r10,r11
   100002658:	jae    0x100002670
   10000265a:	and    r10w,0xf000
   100002660:	lea    r11,[r11-0x1000]
   100002667:	mov    BYTE PTR [r11],0x0
   10000266b:	cmp    r10,r11
   10000266e:	jne    0x100002660
   100002670:	mov    r10,QWORD PTR [rsp]
   100002674:	mov    r11,QWORD PTR [rsp+0x8]
   100002679:	add    rsp,0x10
   10000267d:	ret    
   10000267e:	call   QWORD PTR [rip+0xffffffffffffea9c]        # 0x100001120
   100002684:	nop
   100002685:	jmp    0x100002059
   10000268a:	call   QWORD PTR [rip+0xfffffffffffff4c0]        # 0x100001b50
   100002690:	mov    r11,QWORD PTR [rip+0x26a29]        # 0x1000290c0
   100002697:	mov    rax,QWORD PTR gs:0x30
   1000026a0:	add    rax,r11
   1000026a3:	cmp    r11,0x1480
   1000026aa:	jge    0x1000026b5
   1000026ac:	mov    ecx,r11d
   1000026af:	call   QWORD PTR [rip+0xffffffffffffea6b]        # 0x100001120
   1000026b5:	mov    rax,QWORD PTR [rax+0xd8]
   1000026bc:	mov    rcx,QWORD PTR [rbx+0x8]
   1000026c0:	mov    QWORD PTR [rax+0xe8],rcx
   1000026c7:	add    rsp,0x20
   1000026cb:	pop    rbx
   1000026cc:	ret    
   1000026cd:	call   QWORD PTR [rip+0xffffffffffffea4d]        # 0x100001120
   1000026d3:	nop
   1000026d4:	jmp    0x1000020c6
   1000026d9:	call   QWORD PTR [rip+0xfffffffffffff471]        # 0x100001b50
   1000026df:	mov    r11,QWORD PTR [rip+0x269da]        # 0x1000290c0
   1000026e6:	mov    rax,QWORD PTR gs:0x30
   1000026ef:	add    rax,r11
   1000026f2:	cmp    r11,0x1480
   1000026f9:	jge    0x100002704
   1000026fb:	mov    ecx,r11d
   1000026fe:	call   QWORD PTR [rip+0xffffffffffffea1c]        # 0x100001120
   100002704:	mov    rcx,QWORD PTR [rax+0xd8]
   10000270b:	jmp    0x1000020df
   100002710:	call   QWORD PTR [rip+0xffffffffffffea0a]        # 0x100001120
   100002716:	nop
   100002717:	jmp    0x1000025b4
   10000271c:	call   QWORD PTR [rip+0xfffffffffffff42e]        # 0x100001b50
   100002722:	mov    r11,QWORD PTR [rip+0x26997]        # 0x1000290c0
   100002729:	mov    rax,QWORD PTR gs:0x30
   100002732:	add    rax,r11
   100002735:	cmp    r11,0x1480
   10000273c:	jge    0x100002747
   10000273e:	mov    ecx,r11d
   100002741:	call   QWORD PTR [rip+0xffffffffffffe9d9]        # 0x100001120
   100002747:	mov    rcx,QWORD PTR [rax+0xd8]
   10000274e:	jmp    0x1000025cd
   100002753:	mov    ecx,eax
   100002755:	call   QWORD PTR [rip+0xffffffffffffe9c5]        # 0x100001120
   10000275b:	mov    rbx,rax
   10000275e:	jmp    0x10000256c
   100002763:	mov    rax,QWORD PTR [rbx+0x100]
   10000276a:	test   rax,rax
   10000276d:	jne    0x10000277f
   10000276f:	mov    rcx,rbx
   100002772:	call   QWORD PTR [rip+0xfffffffffffff6b8]        # 0x100001e30
   100002778:	mov    rax,QWORD PTR [rbx+0x100]
   10000277f:	lea    rcx,[rip+0x1236a]        # 0x100014af0
   100002786:	lea    rdx,[rsp+0x30]
   10000278b:	mov    QWORD PTR [rsp+0x30],rdi
   100002790:	mov    QWORD PTR [rsp+0x38],rcx
   100002795:	lea    rcx,[rsp+0x20]
   10000279a:	mov    QWORD PTR [rsp+0x40],rax
   10000279f:	call   0x1000147d0
   1000027a4:	mov    eax,DWORD PTR [rsp+0x28]
   1000027a8:	mov    rbx,QWORD PTR [rsp+0x60]
   1000027ad:	add    rsp,0x50
   1000027b1:	pop    rdi
   1000027b2:	ret    
   1000027b3:	nop
   1000027b4:	nop
   1000027b5:	nop
   1000027b6:	nop
   1000027b7:	nop
	...
   1000027c8:	ins    DWORD PTR es:[rdi],dx
   1000027c9:	add    BYTE PTR [rbx+0x0],dh
   1000027cc:	ins    DWORD PTR es:[rdi],dx
   1000027cd:	add    BYTE PTR [rax+rax*1+0x73],ah
   1000027d1:	add    BYTE PTR [rdx+0x0],dh
   1000027d4:	jbe    0x1000027d6
   1000027d6:	add    BYTE PTR cs:[rbp+0x0],ah
   1000027da:	js     0x1000027dc
   1000027dc:	add    BYTE PTR gs:[rax],al
   1000027df:	add    BYTE PTR [rax+0x0],cl
   1000027e2:	rex.WXB add BYTE PTR [r13+0x0],al
   1000027e6:	pop    rcx
   1000027e7:	add    BYTE PTR [rdi+0x0],bl
   1000027ea:	rex.WR add BYTE PTR [rdi+0x0],r9b
   1000027ee:	rex.XB add BYTE PTR [r9+0x0],al
   1000027f2:	rex.WR add BYTE PTR [rdi+0x0],r11b
   1000027f6:	rex.WRB add BYTE PTR [r9+0x0],r8b
   1000027fa:	rex.XB add BYTE PTR [r8+0x0],cl
   1000027fe:	rex.WB add BYTE PTR [r14+0x0],cl
   100002802:	add    BYTE PTR [r8+rax*1+0x53],r11b
   100002807:	add    BYTE PTR [rdi+0x0],cl
   10000280a:	add    BYTE PTR [rax+r8*1+0x57],r10b
   10000280f:	add    BYTE PTR [rcx+0x0],al
   100002812:	push   rdx
   100002813:	add    BYTE PTR [rbp+0x0],al
   100002816:	pop    rsp
   100002817:	add    BYTE PTR [rbp+0x0],cl
   10000281a:	imul   eax,DWORD PTR [rax],0x720063
   100002820:	outs   dx,DWORD PTR ds:[rsi]
   100002821:	add    BYTE PTR [rbx+0x0],dh
   100002824:	outs   dx,DWORD PTR ds:[rsi]
   100002825:	add    BYTE PTR [rsi+0x0],ah
   100002828:	je     0x10000282a
   10000282a:	pop    rsp
   10000282b:	add    BYTE PTR [rbp+0x0],cl
   10000282e:	imul   eax,DWORD PTR [rax],0x720063
   100002834:	outs   dx,DWORD PTR ds:[rsi]
   100002835:	add    BYTE PTR [rbx+0x0],dh
   100002838:	outs   dx,DWORD PTR ds:[rsi]
   100002839:	add    BYTE PTR [rsi+0x0],ah
   10000283c:	je     0x10000283e
   10000283e:	and    BYTE PTR [rax],al
   100002840:	push   rbx
   100002841:	add    BYTE PTR [rcx+0x0],dl
   100002844:	rex.WR add BYTE PTR [rax],r12b
   100002847:	add    BYTE PTR [rbx+0x0],dl
   10000284a:	add    BYTE PTR gs:[rdx+0x0],dh
   10000284e:	jbe    0x100002850
   100002850:	add    BYTE PTR gs:[rdx+0x0],dh
   100002854:	pop    rsp
   100002855:	add    BYTE PTR [rcx+0x0],cl
   100002858:	outs   dx,BYTE PTR ds:[rsi]
   100002859:	add    BYTE PTR [rbx+0x0],dh
   10000285c:	je     0x10000285e
   10000285e:	(bad)  
   10000285f:	add    BYTE PTR [rsi+0x0],ch
   100002862:	movsxd eax,DWORD PTR [rax]
   100002864:	add    BYTE PTR gs:[rax],ah
   100002867:	add    BYTE PTR [rsi+0x0],cl
   10000286a:	(bad)  
   10000286b:	add    BYTE PTR [rbp+0x0],ch
   10000286e:	add    BYTE PTR gs:[rbx+0x0],dh
   100002872:	pop    rsp
   100002873:	add    BYTE PTR [rbx+0x0],dl
   100002876:	push   rcx
   100002877:	add    BYTE PTR [rax+rax*1+0x0],cl
   10000287b:	add    BYTE PTR [rax+0x25909090],dl
   100002881:	add    BYTE PTR [rbx+0x0],dl
   100002884:	push   rcx
   100002885:	add    BYTE PTR [rax+rax*1+0x53],cl
   100002889:	add    BYTE PTR [rbp+0x0],al
   10000288c:	push   rdx
   10000288d:	add    BYTE PTR [rsi+0x0],dl
   100002890:	push   rdx
   100002891:	add    BYTE PTR [rdi+0x0],bl
   100002894:	rex.WB add BYTE PTR [r14+0x0],cl
   100002898:	push   rbx
   100002899:	add    BYTE PTR [rax+rax*1+0x4e],dl
   10000289d:	add    BYTE PTR [rcx+0x0],al
   1000028a0:	rex.WRB add BYTE PTR [r13+0x0],r8b
   1000028a4:	and    eax,0x53000000
   1000028a9:	add    BYTE PTR [rax+0x0],ch
   1000028ac:	(bad)  
   1000028ad:	add    BYTE PTR [rdx+0x0],dh
   1000028b0:	add    BYTE PTR gs:[rax+rax*1+0x43],ah
   1000028b5:	add    BYTE PTR [rdi+0x0],ch
   1000028b8:	add    BYTE PTR fs:[rbp+0x0],ah
   1000028bc:	add    BYTE PTR [rax],al
   1000028be:	nop
   1000028bf:	nop
   1000028c0:	add    BYTE PTR [rax],al
   1000028c2:	add    BYTE PTR [rax],al
   1000028c4:	xchg   esi,eax
   1000028c5:	xor    BYTE PTR [rdi],al
   1000028c7:	ja     0x1000028f5
   1000028c9:	(bad)  
   1000028ca:	(bad)  
   1000028cb:	out    dx,al
   1000028cc:	mov    edx,0x19990951
   1000028d1:	(bad)  
   1000028d2:	ins    DWORD PTR es:[rdi],dx
   1000028d3:	(bad)  
   1000028d4:	(bad)  
   1000028d5:	hlt    
   1000028d6:	push   0x70
   1000028d8:	xor    eax,0xa3e963a5
   1000028dd:	xchg   ebp,eax
   1000028de:	fs sahf 
   1000028e0:	xor    cl,BYTE PTR [rax-0x475bf125]
   1000028e6:	fdivr  QWORD PTR [rcx+0x1e]
   1000028e9:	jmp    0xd98909c3
   1000028ee:	rcl    BYTE PTR [rdi+0x9b64c2b],cl
   1000028f4:	mov    ebp,0x77eb17c
   1000028f9:	sub    eax,0x1d91e7b8
   1000028fe:	mov    edi,0xb7106490
   100002903:	sbb    eax,0x6ab020f2
   100002908:	rex.W jno 0x1000028c4
   10000290b:	repz fiadd WORD PTR [rcx-0x42]
   10000290f:	test   BYTE PTR [rbp-0x2c],bh
   100002912:	ficomp DWORD PTR [rdx]
   100002914:	jmp    0x1000028fa
   100002916:	(bad)  [rbp+0x51]
   100002919:	mov    ch,0xd4
   10000291b:	hlt    
   10000291c:	mov    DWORD PTR [rbp-0x67a97c2d],0xa8c0136c
   100002926:	imul   esp,DWORD PTR [rdx+rdi*2-0x7],0x62
   10000292b:	std    
   10000292c:	in     al,dx
   10000292d:	leave  
   10000292e:	mov    cl,BYTE PTR gs:[rdi+0x5c]
   100002932:	add    DWORD PTR [rcx+rbx*8],edx
   100002935:	ins    BYTE PTR es:[rdi],dx
   100002936:	(bad)  
   100002937:	movsxd esp,DWORD PTR [rbx+0x3d]
   10000293a:	psubd  mm6,mm5
   10000293d:	or     eax,0x20c88d08
   100002942:	outs   dx,BYTE PTR ds:[rsi]
   100002943:	cmp    ebx,DWORD PTR [rsi+0x10]
   100002946:	imul   ecx,DWORD PTR [rsp+riz*8+0x41],0x7172d560
   10000294e:	addr32 mov ds:0x3c03e4d1,al
   100002954:	rex.RXB (bad) 
   100002956:	add    al,0x4b
   100002958:	std    
   100002959:	test   DWORD PTR [rip+0xab56bd2],ecx        # 0x10ab59531
   10000295f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   100002960:	cli    
   100002961:	test   al,0xb5
   100002963:	xor    eax,0x42b2986c
   100002968:	(bad)  
   100002969:	leave  
   10000296a:	mov    ebx,0xbcf940db
   10000296f:	lods   al,BYTE PTR ds:[rsi]
   100002970:	jrcxz  0x1000029de
   100002972:	fdiv   DWORD PTR [rdx]
   100002974:	jne    0x1000029d2
   100002976:	fild   WORD PTR [rbp-0x31]
   100002979:	or     eax,0x3d59dcd6
   10000297e:	shr    DWORD PTR [rbx+0x26d930ac],1
   100002984:	cmp    al,BYTE PTR [rax]
   100002986:	ficom  WORD PTR [rcx-0x80]
   100002989:	push   rcx
   10000298a:	xlat   BYTE PTR ds:[rbx]
   10000298b:	enter  0x6116,0xd0
   10000298f:	mov    edi,0x21b4f4b5
   100002994:	and    eax,esp
   100002996:	mov    bl,0x56
   100002998:	cdq    
   100002999:	xchg   ebp,eax
   10000299a:	mov    edx,0xbda50fcf
   10000299f:	mov    eax,0x2802b89e
   1000029a4:	or     BYTE PTR [rax-0x264da0fb],cl
   1000029aa:	or     al,0xc6
   1000029ac:	and    al,0xe9
   1000029ae:	or     esi,DWORD PTR [rcx+0x2f6f7c87]
   1000029b4:	adc    DWORD PTR [rax+rbp*2+0x58],ecx
   1000029b8:	stos   DWORD PTR es:[rdi],eax
   1000029b9:	sbb    eax,0x2d3dc161
   1000029be:	data16 mov dh,0x90
   1000029c1:	fdiv   QWORD PTR [r14+0x6]
   1000029c5:	jno    0x1000029a2
   1000029c7:	add    DWORD PTR [rax+riz*1+0x102a98d2],edi
   1000029ce:	(bad)  
   1000029cf:	out    dx,eax
   1000029d0:	mov    DWORD PTR [rbp-0x4ae08e4f],eax
   1000029d6:	mov    dh,0x6
   1000029d8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1000029d9:	in     al,0xbf
   1000029db:	lahf   
   1000029dc:	xor    edx,esp
   1000029de:	mov    eax,0x7c9a2e8
   1000029e3:	js     0x100002a19
   1000029e5:	stc    
   1000029e6:	add    BYTE PTR [rdi],cl
   1000029e8:	mov    gs,WORD PTR [rax-0x67e769f7]
   1000029ee:	(bad)  
   1000029ef:	loope  0x1000029ac
   1000029f1:	or     eax,0x3d2d7f6a
   1000029f6:	ins    DWORD PTR es:[rdi],dx
   1000029f7:	or     BYTE PTR [rdi+0x191646c],dl
   1000029fd:	pop    rsp
   1000029fe:	movsxd esp,esi
   100002a00:	hlt    
   100002a01:	push   rcx
   100002a02:	imul   ebp,DWORD PTR [rbx+0x62],0x61
   100002a06:	ins    BYTE PTR es:[rdi],dx
   100002a07:	sbb    al,0xd8
   100002a09:	xor    BYTE PTR [rbp-0x7b],ah
   100002a0c:	rex.WRX add BYTE PTR [rdx-0xe],r12b
   100002a10:	in     eax,dx
   100002a11:	xchg   ebp,eax
   100002a12:	(bad)  
   100002a13:	ins    BYTE PTR es:[rdi],dx
   100002a14:	jnp    0x1000029bb
   100002a16:	add    DWORD PTR [rbx],ebx
   100002a18:	shl    esp,0x8
   100002a1b:	(bad)  
   100002a1c:	push   rdi
   100002a1d:	(bad)  
   100002a1e:	pmaddwd mm0,mm6
   100002a21:	fnstenv [rax-0x4816af9b]
   100002a27:	adc    ch,dl
   100002a29:	mov    eax,0x887c8bbe
   100002a2e:	mov    ecx,0xdd1ddffc
   100002a33:	(bad)  
   100002a34:	rex.WB sub rax,0x7cf315da
   100002a3a:	ror    DWORD PTR [rbp+riz*2+0x58fbd44c],cl
   100002a41:	(bad)  
   100002a42:	mov    dl,0x4d
   100002a44:	(bad)  
   100002a45:	push   rcx
   100002a46:	mov    ch,0x3a
   100002a48:	je     0x100002a4a
   100002a4a:	mov    esp,0xbb30e2a3
   100002a4f:	(bad)  
   100002a50:	rex.B movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   100002a52:	fisttp WORD PTR [rdx-0x29]
   100002a55:	xchg   ebp,eax
   100002a56:	fdivr  DWORD PTR [rip+0xffffffffa4d1c46d]        # 0xa4d1eec9
   100002a5c:	sti    
   100002a5d:	hlt    
   100002a5e:	(bad)  
   100002a5f:	shr    DWORD PTR [rdx-0x17],cl
   100002a62:	imul   eax,DWORD PTR [rbx-0x4],0x46346ed9
   100002a69:	mov    BYTE PTR [rdi-0x53],ah
   100002a6c:	sar    BYTE PTR [rax+0x2d73da60],1
   100002a72:	add    al,0x44
   100002a74:	in     eax,0x1d
   100002a76:	add    esi,DWORD PTR [rbx]
   100002a78:	pop    rdi
   100002a79:	rex.WR or r13b,BYTE PTR [rdx-0x22f28337]
   100002a80:	cmp    al,0x71
   100002a82:	add    eax,0x241aa50
   100002a87:	(bad)  
   100002a88:	adc    BYTE PTR [rax],dl
   100002a8a:	or     edi,DWORD PTR [rsi-0x36f3df7a]
   100002a90:	and    eax,0xb35768b5
   100002a95:	test   DWORD PTR [rdi+0x20],ebp
   100002a98:	or     esp,edx
   100002a9a:	mov    cx,0xe49f
   100002a9e:	(bad)  
   100002a9f:	(bad)  
   100002aa0:	(bad)  
   100002aa1:	stc    
   100002aa2:	ficomp WORD PTR [rsi-0x68]
   100002aa5:	leave  
   100002aa6:	fldcw  WORD PTR [rcx]
   100002aa8:	and    bl,BYTE PTR [rax-0x574b4f30]
   100002aae:	xlat   BYTE PTR ds:[rbx]
   100002aaf:	(bad)  
   100002ab0:	(bad)  
   100002ab1:	cmp    eax,0xd8159b3
   100002ab6:	mov    ah,0x2e
   100002ab8:	cmp    ebx,DWORD PTR [rbp+rdi*4-0x49]
   100002abc:	lods   eax,DWORD PTR ds:[rsi]
   100002abd:	ins    BYTE PTR es:[rdi],dx
   100002abe:	mov    edx,0xb88320c0
   100002ac3:	in     eax,dx
   100002ac4:	mov    dh,0xb3
   100002ac6:	mov    edi,0xb6e20c9a
   100002acb:	add    ebx,DWORD PTR [rdx+0x3974b1d2]
   100002ad1:	rex.RXB (bad) 
   100002ad3:	(bad)  
   100002ad4:	scas   eax,DWORD PTR es:[rdi]
   100002ad5:	ja     0x100002aa9
   100002ad7:	popf   
   100002ad8:	adc    eax,0x8304db26
   100002add:	(bad)  
   100002ade:	fdiv   QWORD PTR [rbx+0x12]
   100002ae1:	or     esp,DWORD PTR [rbx-0x1d]
   100002ae4:	test   BYTE PTR [rbx],bh
   100002ae6:	fs xchg esp,eax
   100002ae8:	ds push 0x6d
   100002aeb:	or     eax,0x7a6a5aa8
   100002af0:	or     ecx,edi
   100002af2:	(bad)  
   100002af3:	in     al,0x9d
   100002af5:	dec    DWORD PTR [rcx]
   100002af7:	xchg   ebx,eax
   100002af8:	(bad)  
   100002af9:	scas   al,BYTE PTR es:[rdi]
   100002afa:	add    BYTE PTR [rdx],cl
   100002afc:	mov    cl,0x9e
   100002afe:	(bad)  
   100002aff:	jge    0x100002b45
   100002b01:	xchg   ebx,eax
   100002b02:	(bad)  
   100002b04:	shl    BYTE PTR [rbx-0xd9778f8],cl
   100002b0a:	add    DWORD PTR [rsi],ebx
   100002b0c:	inc    dl
   100002b0e:	(bad)  
   100002b0f:	imul   ebx,DWORD PTR [rbp+0x57],0x67cbf762
   100002b16:	xor    BYTE PTR gs:[rcx+0x36],0x6c
   100002b1b:	sbb    edi,esp
   100002b1d:	(bad)  
   100002b1e:	imul   ebp,DWORD PTR [rsi+0x76],0x1b
   100002b22:	(bad)  
   100002b23:	(bad)  
   100002b24:	loopne 0x100002b51
   100002b26:	ror    DWORD PTR [rcx+0x10da7a5a],cl
   100002b2c:	int3   
   100002b2d:	rex.WX frstor [rdi+0x6f]
   100002b31:	fistp  QWORD PTR [rcx-0x41100607]
   100002b37:	mov    es,WORD PTR [rbx-0x42]
   100002b3a:	mov    bh,0x17
   100002b3c:	(bad)  
   100002b3d:	mov    ?,WORD PTR [rax-0x295c17a0]
   100002b43:	(bad)  
   100002b44:	jle    0x100002ad9
   100002b46:	shl    DWORD PTR [rcx+0x38d8c2c4],1
   100002b4c:	push   rdx
   100002b4d:	repnz fisttp WORD PTR [rdi-0xf]
   100002b51:	addr32 mov ebx,0xbc5767d1
   100002b57:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   100002b58:	fld    QWORD PTR [rsi]
   100002b5a:	mov    ch,0x3f
   100002b5c:	rex.WXB
   100002b5d:	ss mov dl,0x48
   100002b60:	fisubr DWORD PTR [rbx]
   100002b62:	or     eax,0xa1b4cd8
   100002b67:	scas   eax,DWORD PTR es:[rdi]
   100002b68:	test   BYTE PTR [rdx+0x3],0x36
   100002b6c:	(bad)  
   100002b6d:	jp     0x100002b73
   100002b6f:	rex.B ret 
   100002b71:	out    dx,eax
   100002b72:	(bad)  
   100002b73:	fist   WORD PTR [rbp-0x21]
   100002b76:	addr32 test al,0xef
   100002b79:	mov    gs,WORD PTR [rsi+0x31]
   100002b7c:	jns    0x100002b3c
   100002b7e:	imul   eax,DWORD PTR [rsi-0x74],0x1acb61b3
   100002b85:	and    DWORD PTR [rsi-0x44],0xffffffa0
   100002b89:	shr    BYTE PTR [rdi+0x25],cl
   100002b8c:	ss loop 0x100002bf7
   100002b8f:	push   rdx
   100002b90:	xchg   ebp,eax
   100002b91:	ja     0x100002b9f
   100002b93:	int3   
   100002b94:	add    eax,DWORD PTR [rdi+0xb]
   100002b97:	mov    ebx,0x220216b9
   100002b9c:	(bad)  
   100002b9d:	es add eax,0xba3bbe55
   100002ba3:	(bad)
   100002ba6:	mov    ebp,0xb45a92b2
   100002bab:	sub    eax,DWORD PTR [rdx+rbp*2]
   100002bae:	mov    bl,0x5c
   100002bb0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   100002bb1:	call   rdi
   100002bb3:	ret    0xcf31
   100002bb6:	shl    BYTE PTR [rbp+0x2cd99e8b],1
   100002bbc:	sbb    eax,0xb05bdeae
   100002bc1:	ret    0x9b64
   100002bc4:	es repnz movsxd ebp,esp
   100002bc8:	pushf  
   100002bc9:	movabs ds:0x6a9026d930a756a,eax
   100002bd2:	or     DWORD PTR [rdi+rdi*1-0x7a14f1ca],ebx
   100002bd9:	addr32 (bad) 
   100002bdb:	jb     0x100002bf0
   100002bdd:	push   rdi
   100002bde:	add    BYTE PTR [rip+0xffffffff95bf4a82],al        # 0x95bf7666
   100002be4:	adc    al,0x7a
   100002be6:	mov    eax,0xb12baee2
   100002beb:	jnp    0x100002c25
   100002bed:	sbb    esi,DWORD PTR [rsi-0x2d7164f4]
   100002bf3:	xchg   edx,eax
   100002bf4:	or     eax,0xb7e5d5be
   100002bf9:	out    dx,eax
   100002bfa:	fdivr  QWORD PTR [rcx+riz*1-0x21]
   100002bfe:	fisttp DWORD PTR [rbx]
   100002c00:	(bad)  
   100002c01:	rcl    bl,cl
   100002c03:	xchg   BYTE PTR [rdx-0x1e],al
   100002c06:	(bad)  
   100002c07:	icebp  
   100002c08:	clc    
   100002c09:	mov    bl,0xdd
   100002c0b:	push   0x1fda836e
   100002c10:	int    0x16
   100002c12:	mov    esi,0xb9265b81
   100002c17:	mul    cl
   100002c19:	ja     0x100002bcb
   100002c1b:	outs   dx,DWORD PTR ds:[rsi]
   100002c1c:	ja     0x100002c65
   100002c1e:	mov    bh,0x18
   100002c20:	out    0x5a,al
   100002c22:	or     BYTE PTR [rax-0xf09590],cl
   100002c28:	retf   0x63b
   100002c2b:	pop    sp
   100002c2d:	or     eax,DWORD PTR [rcx]
   100002c2f:	adc    edi,edi
   100002c31:	sahf   
   100002c32:	(bad)
   100002c37:	clc    
   100002c38:	sar    edi,cl
   100002c3a:	imul   esp,DWORD PTR [rcx+0x45],0xffffffcf
   100002c3e:	ins    BYTE PTR es:[rdi],dx
   100002c3f:	(bad)  
   100002c40:	js     0x100002c24
   100002c42:	or     ah,BYTE PTR [rax-0x28f22d12]
   100002c48:	push   rsp
   100002c49:	add    DWORD PTR [rsi+rcx*2],0xffffffc2
   100002c4d:	mov    bl,0x3
   100002c4f:	cmp    DWORD PTR [rcx+0x26],esp
   100002c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   100002c54:	not    DWORD PTR [rsi]
   100002c56:	(bad)  
   100002c57:	ror    BYTE PTR [rbp+0x47],1
   100002c5a:	imul   ecx,DWORD PTR [rcx-0x25],0x4a3e6e77
   100002c61:	push   0xffffffffffffffd1
   100002c63:	scas   al,BYTE PTR es:[rdi]
   100002c64:	fcomp  QWORD PTR [rdx-0x2a]
   100002c67:	fldenv [rsi+0xb]
   100002c6a:	fild   WORD PTR [rax-0x10]
   100002c6d:	cmp    ebx,eax
   100002c6f:	(bad)  
   100002c70:	push   rbx
   100002c71:	scas   al,BYTE PTR es:[rdi]
   100002c72:	mov    esp,0xbb9ec5a9
   100002c77:	fidivr WORD PTR [rdi-0x31]
   100002c7a:	mov    dl,0x47
   100002c7c:	jmp    0x11c30e280
   100002c81:	repnz mov ebp,0xbac28abd
   100002c87:	retf   0x9330
   100002c8a:	mov    bl,0x53
   100002c8c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   100002c8d:	movabs ds:0x693bad0360524b4,eax
   100002c96:	xlat   BYTE PTR ds:[rbx]
   100002c97:	int    0x29
   100002c99:	push   rdi
   100002c9a:	ficom  WORD PTR [rdi+rdi*4+0x67]
   100002c9e:	fldenv [rbx]
   100002ca0:	cs jp  0x100002d09
   100002ca3:	mov    bl,0xb8
   100002ca5:	rex.WX (bad) 
   100002ca7:	(bad)
   100002cab:	pop    rbp
   100002cac:	xchg   esp,eax
   100002cad:	sub    ebp,DWORD PTR [rdi+0x2a]
   100002cb0:	(bad)  
   100002cb1:	mov    esi,0x8ea1b40b
   100002cb6:	or     al,0xc3
   100002cb8:	sbb    ebx,edi
   100002cba:	add    eax,0x2ef8d5a
   100002cbf:	sub    eax,0x510053
   100002cc4:	rex.WR add BYTE PTR [rax+rax*1+0x55],r8b
   100002cc9:	add    BYTE PTR [rbp+0x0],cl
   100002ccc:	push   rax
   100002ccd:	add    BYTE PTR [rbp+0x0],al
   100002cd0:	push   rdx
   100002cd1:	add    BYTE PTR [rsi],ch
   100002cd3:	add    BYTE PTR [rbp+0x0],al
   100002cd6:	pop    rax
   100002cd7:	add    BYTE PTR [rbp+0x0],al
   100002cda:	add    BYTE PTR [rax],al
   100002cdc:	nop
   100002cdd:	nop
   100002cde:	nop
   100002cdf:	nop
	...
   100002ce8:	rol    BYTE PTR [rax],0x0
   100002ceb:	add    BYTE PTR [rax],al
   100002ced:	add    BYTE PTR [rax],al
   100002cef:	rex.RX
   100002cf0:	add    BYTE PTR [r10+0x0],r14b
   100002cf4:	jb     0x100002cf6
   100002cf6:	outs   dx,DWORD PTR ds:[rsi]
   100002cf7:	add    BYTE PTR [rdx+0x0],dh
   100002cfa:	and    BYTE PTR [rax],al
   100002cfc:	sub    eax,0x49002000
   100002d01:	add    BYTE PTR [rsi+0x0],ch
   100002d04:	jo     0x100002d06
   100002d06:	jne    0x100002d08
   100002d08:	je     0x100002d0a
   100002d0a:	and    BYTE PTR [rax],al
   100002d0c:	jo     0x100002d0e
   100002d0e:	(bad)  
   100002d0f:	add    BYTE PTR [rdx+0x0],dh
   100002d12:	(bad)  
   100002d13:	add    BYTE PTR [rbp+0x0],ch
   100002d16:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   100002d1b:	add    BYTE PTR [rdx+0x0],dh
   100002d1e:	jae    0x100002d20
   100002d20:	and    BYTE PTR [rax],al
   100002d22:	imul   eax,DWORD PTR [rax],0x76006e
   100002d28:	(bad)  
   100002d29:	add    BYTE PTR [rax+rax*1+0x69],ch
   100002d2d:	add    BYTE PTR [rax+rax*1+0x2e],ah
   100002d31:	add    BYTE PTR [rip+0xa00],cl        # 0x100003737
   100002d37:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100002d3d:	nop
   100002d3e:	nop
   100002d3f:	nop
   100002d40:	add    BYTE PTR [r10+0x0],r14b
   100002d44:	jb     0x100002d46
   100002d46:	outs   dx,DWORD PTR ds:[rsi]
   100002d47:	add    BYTE PTR [rdx+0x0],dh
   100002d4a:	and    BYTE PTR [rax],al
   100002d4c:	sub    eax,0x46002000
   100002d51:	add    BYTE PTR [rcx+0x0],ah
   100002d54:	imul   eax,DWORD PTR [rax],0x65006c
   100002d5a:	add    BYTE PTR fs:[rax],ah
   100002d5d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   100002d61:	add    BYTE PTR [rax],ah
   100002d63:	add    BYTE PTR [rbx+0x0],ah
   100002d66:	jb     0x100002d68
   100002d68:	add    BYTE PTR gs:[rcx+0x0],ah
   100002d6c:	je     0x100002d6e
   100002d6e:	add    BYTE PTR gs:[rax],ah
   100002d71:	add    BYTE PTR [rax+rax*1+0x75],ah
   100002d75:	add    BYTE PTR [rbp+0x0],ch
   100002d78:	jo     0x100002d7a
   100002d7a:	and    BYTE PTR [rax],al
   100002d7c:	data16 add BYTE PTR [rcx+0x0],ch
   100002d80:	ins    BYTE PTR es:[rdi],dx
   100002d81:	add    BYTE PTR [rbp+0x0],ah
   100002d84:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x10000378b
   100002d8b:	add    BYTE PTR [rax+0x45909090],dl
   100002d91:	add    BYTE PTR [rdx+0x0],dh
   100002d94:	jb     0x100002d96
   100002d96:	outs   dx,DWORD PTR ds:[rsi]
   100002d97:	add    BYTE PTR [rdx+0x0],dh
   100002d9a:	and    BYTE PTR [rax],al
   100002d9c:	sub    eax,0x46002000
   100002da1:	add    BYTE PTR [rcx+0x0],ah
   100002da4:	imul   eax,DWORD PTR [rax],0x65006c
   100002daa:	add    BYTE PTR fs:[rax],ah
   100002dad:	add    BYTE PTR [rax+rax*1+0x6f],dh
   100002db1:	add    BYTE PTR [rax],ah
   100002db3:	add    BYTE PTR [rbx+0x0],ah
   100002db6:	jb     0x100002db8
   100002db8:	add    BYTE PTR gs:[rcx+0x0],ah
   100002dbc:	je     0x100002dbe
   100002dbe:	add    BYTE PTR gs:[rax],ah
   100002dc1:	add    BYTE PTR [rbp+0x0],ch
   100002dc4:	(bad)  
   100002dc5:	add    BYTE PTR [rsi+0x0],ch
   100002dc8:	imul   eax,DWORD PTR [rax],0x650066
   100002dce:	jae    0x100002dd0
   100002dd0:	je     0x100002dd2
   100002dd2:	and    BYTE PTR [rax],al
   100002dd4:	data16 add BYTE PTR [rcx+0x0],ch
   100002dd8:	ins    BYTE PTR es:[rdi],dx
   100002dd9:	add    BYTE PTR [rbp+0x0],ah
   100002ddc:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x1000037e3
   100002de3:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100002de9:	nop
   100002dea:	nop
   100002deb:	nop
   100002dec:	nop
   100002ded:	nop
   100002dee:	nop
   100002def:	nop
   100002df0:	add    BYTE PTR [r10+0x0],r14b
   100002df4:	jb     0x100002df6
   100002df6:	outs   dx,DWORD PTR ds:[rsi]
   100002df7:	add    BYTE PTR [rdx+0x0],dh
   100002dfa:	and    BYTE PTR [rax],al
   100002dfc:	sub    eax,0x46002000
   100002e01:	add    BYTE PTR [rcx+0x0],ah
   100002e04:	imul   eax,DWORD PTR [rax],0x65006c
   100002e0a:	add    BYTE PTR fs:[rax],ah
   100002e0d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   100002e11:	add    BYTE PTR [rax],ah
   100002e13:	add    BYTE PTR [rdi+0x0],ch
   100002e16:	jo     0x100002e18
   100002e18:	add    BYTE PTR gs:[rsi+0x0],ch
   100002e1c:	and    BYTE PTR [rax],al
   100002e1e:	add    BYTE PTR fs:[rbp+0x0],ah
   100002e22:	(bad)  
   100002e23:	add    BYTE PTR [rbp+0x0],dh
   100002e26:	add    BYTE PTR [eax],ah
   100002e29:	add    BYTE PTR [rax+0x0],dh
   100002e2c:	jb     0x100002e2e
   100002e2e:	outs   dx,DWORD PTR ds:[rsi]
   100002e2f:	add    BYTE PTR [rbx+0x0],ah
   100002e32:	add    BYTE PTR gs:[rbx+0x0],dh
   100002e36:	jae    0x100002e38
   100002e38:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x10000383f
   100002e3f:	add    BYTE PTR [rbp+0x0],al
   100002e42:	jb     0x100002e44
   100002e44:	jb     0x100002e46
   100002e46:	outs   dx,DWORD PTR ds:[rsi]
   100002e47:	add    BYTE PTR [rdx+0x0],dh
   100002e4a:	and    BYTE PTR [rax],al
   100002e4c:	sub    eax,0x46002000
   100002e51:	add    BYTE PTR [rcx+0x0],ah
   100002e54:	imul   eax,DWORD PTR [rax],0x65006c
   100002e5a:	add    BYTE PTR fs:[rax],ah
   100002e5d:	add    BYTE PTR [rdi+0x0],dh
   100002e60:	push   0x6c006900
   100002e65:	add    BYTE PTR [rbp+0x0],ah
   100002e68:	and    BYTE PTR [rax],al
   100002e6a:	ja     0x100002e6c
   100002e6c:	jb     0x100002e6e
   100002e6e:	imul   eax,DWORD PTR [rax],0x690074
   100002e74:	outs   dx,BYTE PTR ds:[rsi]
   100002e75:	add    BYTE PTR [rdi+0x0],ah
   100002e78:	and    BYTE PTR [rax],al
   100002e7a:	ins    DWORD PTR es:[rdi],dx
   100002e7b:	add    BYTE PTR [rcx+0x0],ch
   100002e7e:	outs   dx,BYTE PTR ds:[rsi]
   100002e7f:	add    BYTE PTR [rcx+0x0],ch
   100002e82:	and    BYTE PTR [rax],al
   100002e84:	add    BYTE PTR fs:[rbp+0x0],dh
   100002e88:	ins    DWORD PTR es:[rdi],dx
   100002e89:	add    BYTE PTR [rax+0x0],dh
   100002e8c:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x100003893
   100002e93:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100002e99:	nop
   100002e9a:	nop
   100002e9b:	nop
   100002e9c:	nop
   100002e9d:	nop
   100002e9e:	nop
   100002e9f:	nop
   100002ea0:	add    BYTE PTR [r10+0x0],r14b
   100002ea4:	jb     0x100002ea6
   100002ea6:	outs   dx,DWORD PTR ds:[rsi]
   100002ea7:	add    BYTE PTR [rdx+0x0],dh
   100002eaa:	and    BYTE PTR [rax],al
   100002eac:	sub    eax,0x46002000
   100002eb1:	add    BYTE PTR [rcx+0x0],ah
   100002eb4:	imul   eax,DWORD PTR [rax],0x65006c
   100002eba:	add    BYTE PTR fs:[rax],ah
   100002ebd:	add    BYTE PTR [rdx+0x0],dh
   100002ec0:	add    BYTE PTR gs:[rcx+0x0],ah
   100002ec4:	add    BYTE PTR fs:[rcx+0x0],ch
   100002ec8:	outs   dx,BYTE PTR ds:[rsi]
   100002ec9:	add    BYTE PTR [rdi+0x0],ah
   100002ecc:	and    BYTE PTR [rax],al
   100002ece:	jb     0x100002ed0
   100002ed0:	add    BYTE PTR gs:[rdi+0x0],ah
   100002ed4:	imul   eax,DWORD PTR [rax],0x740073
   100002eda:	jb     0x100002edc
   100002edc:	jns    0x100002ede
   100002ede:	and    BYTE PTR [rax],al
   100002ee0:	imul   eax,DWORD PTR [rax],0x65
   100002ee3:	add    BYTE PTR [rcx+0x0],bh
   100002ee6:	jae    0x100002ee8
   100002ee8:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x1000038ef
   100002eef:	add    BYTE PTR [rbp+0x0],al
   100002ef2:	jb     0x100002ef4
   100002ef4:	jb     0x100002ef6
   100002ef6:	outs   dx,DWORD PTR ds:[rsi]
   100002ef7:	add    BYTE PTR [rdx+0x0],dh
   100002efa:	and    BYTE PTR [rax],al
   100002efc:	sub    eax,0x46002000
   100002f01:	add    BYTE PTR [rcx+0x0],ah
   100002f04:	imul   eax,DWORD PTR [rax],0x65006c
   100002f0a:	add    BYTE PTR fs:[rax],ah
   100002f0d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   100002f11:	add    BYTE PTR [rax],ah
   100002f13:	add    BYTE PTR [rbx+0x0],dh
   100002f16:	je     0x100002f18
   100002f18:	(bad)  
   100002f19:	add    BYTE PTR [rdx+0x0],dh
   100002f1c:	je     0x100002f1e
   100002f1e:	and    BYTE PTR [rax],al
   100002f20:	push   rdi
   100002f21:	add    BYTE PTR [rcx+0x0],ah
   100002f24:	je     0x100002f26
   100002f26:	jae    0x100002f28
   100002f28:	outs   dx,DWORD PTR ds:[rsi]
   100002f29:	add    BYTE PTR [rsi+0x0],ch
   100002f2c:	and    BYTE PTR [rax],al
   100002f2e:	jo     0x100002f30
   100002f30:	jb     0x100002f32
   100002f32:	outs   dx,DWORD PTR ds:[rsi]
   100002f33:	add    BYTE PTR [rbx+0x0],ah
   100002f36:	add    BYTE PTR gs:[rbx+0x0],dh
   100002f3a:	jae    0x100002f3c
   100002f3c:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x100003943
   100002f43:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100002f49:	nop
   100002f4a:	nop
   100002f4b:	nop
   100002f4c:	nop
   100002f4d:	nop
   100002f4e:	nop
   100002f4f:	nop
   100002f50:	add    BYTE PTR [r10+0x0],r14b
   100002f54:	jb     0x100002f56
   100002f56:	outs   dx,DWORD PTR ds:[rsi]
   100002f57:	add    BYTE PTR [rdx+0x0],dh
   100002f5a:	and    BYTE PTR [rax],al
   100002f5c:	sub    eax,0x46002000
   100002f61:	add    BYTE PTR [rcx+0x0],ah
   100002f64:	imul   eax,DWORD PTR [rax],0x65006c
   100002f6a:	add    BYTE PTR fs:[rax],ah
   100002f6d:	add    BYTE PTR [rdi+0x0],dh
   100002f70:	jb     0x100002f72
   100002f72:	imul   eax,DWORD PTR [rax],0x690074
   100002f78:	outs   dx,BYTE PTR ds:[rsi]
   100002f79:	add    BYTE PTR [rdi+0x0],ah
   100002f7c:	and    BYTE PTR [rax],al
   100002f7e:	je     0x100002f80
   100002f80:	push   0x20006500
   100002f85:	add    BYTE PTR [rdi+0x0],dl
   100002f88:	(bad)  
   100002f89:	add    BYTE PTR [rax+rax*1+0x73],dh
   100002f8d:	add    BYTE PTR [rdi+0x0],ch
   100002f90:	outs   dx,BYTE PTR ds:[rsi]
   100002f91:	add    BYTE PTR [rax],ah
   100002f93:	add    BYTE PTR [rbp+0x0],ch
   100002f96:	(bad)  
   100002f97:	add    BYTE PTR [rsi+0x0],ch
   100002f9a:	imul   eax,DWORD PTR [rax],0x650066
   100002fa0:	jae    0x100002fa2
   100002fa2:	je     0x100002fa4
   100002fa4:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x1000039ab
   100002fab:	add    BYTE PTR [rax+0x45909090],dl
   100002fb1:	add    BYTE PTR [rdx+0x0],dh
   100002fb4:	jb     0x100002fb6
   100002fb6:	outs   dx,DWORD PTR ds:[rsi]
   100002fb7:	add    BYTE PTR [rdx+0x0],dh
   100002fba:	and    BYTE PTR [rax],al
   100002fbc:	sub    eax,0x56002000
   100002fc1:	add    BYTE PTR [rbp+0x0],ah
   100002fc4:	jb     0x100002fc6
   100002fc6:	jae    0x100002fc8
   100002fc8:	imul   eax,DWORD PTR [rax],0x6e006f
   100002fce:	and    BYTE PTR [rax],al
   100002fd0:	ins    DWORD PTR es:[rdi],dx
   100002fd1:	add    BYTE PTR [rcx+0x0],ch
   100002fd4:	jae    0x100002fd6
   100002fd6:	ins    DWORD PTR es:[rdi],dx
   100002fd7:	add    BYTE PTR [rcx+0x0],ah
   100002fda:	je     0x100002fdc
   100002fdc:	movsxd eax,DWORD PTR [rax]
   100002fde:	push   0x64002000
   100002fe3:	add    BYTE PTR [rbp+0x0],ah
   100002fe6:	je     0x100002fe8
   100002fe8:	add    BYTE PTR gs:[rbx+0x0],ah
   100002fec:	je     0x100002fee
   100002fee:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   100002ff3:	add    BYTE PTR [rip+0xa00],cl        # 0x1000039f9
   100002ff9:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100002fff:	nop
   100003000:	add    BYTE PTR [r10+0x0],r14b
   100003004:	jb     0x100003006
   100003006:	outs   dx,DWORD PTR ds:[rsi]
   100003007:	add    BYTE PTR [rdx+0x0],dh
   10000300a:	and    BYTE PTR [rax],al
   10000300c:	sub    eax,0x52002000
   100003011:	add    BYTE PTR [rbp+0x0],ah
   100003014:	ins    DWORD PTR es:[rdi],dx
   100003015:	add    BYTE PTR [rdi+0x0],ch
   100003018:	je     0x10000301a
   10000301a:	add    BYTE PTR gs:[rax],ah
   10000301d:	add    BYTE PTR [rbp+0x0],ch
   100003020:	add    BYTE PTR gs:[rbp+0x0],ch
   100003024:	outs   dx,DWORD PTR ds:[rsi]
   100003025:	add    BYTE PTR [rdx+0x0],dh
   100003028:	jns    0x10000302a
   10000302a:	and    BYTE PTR [rax],al
   10000302c:	jb     0x10000302e
   10000302e:	add    BYTE PTR gs:[rcx+0x0],ah
   100003032:	add    BYTE PTR fs:[rax],ah
   100003035:	add    BYTE PTR [rsi+0x0],ah
   100003038:	(bad)  
   100003039:	add    BYTE PTR [rcx+0x0],ch
   10000303c:	ins    BYTE PTR es:[rdi],dx
   10000303d:	add    BYTE PTR [rbp+0x0],ah
   100003040:	add    BYTE PTR fs:[rsi],ch
   100003043:	add    BYTE PTR [rip+0xa00],cl        # 0x100003a49
   100003049:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000304f:	nop
   100003050:	add    BYTE PTR [r10+0x0],r14b
   100003054:	jb     0x100003056
   100003056:	outs   dx,DWORD PTR ds:[rsi]
   100003057:	add    BYTE PTR [rdx+0x0],dh
   10000305a:	and    BYTE PTR [rax],al
   10000305c:	sub    eax,0x52002000
   100003061:	add    BYTE PTR [rbp+0x0],ah
   100003064:	ins    DWORD PTR es:[rdi],dx
   100003065:	add    BYTE PTR [rdi+0x0],ch
   100003068:	je     0x10000306a
   10000306a:	add    BYTE PTR gs:[rax],ah
   10000306d:	add    BYTE PTR [rbp+0x0],ch
   100003070:	add    BYTE PTR gs:[rbp+0x0],ch
   100003074:	outs   dx,DWORD PTR ds:[rsi]
   100003075:	add    BYTE PTR [rdx+0x0],dh
   100003078:	jns    0x10000307a
   10000307a:	and    BYTE PTR [rax],al
   10000307c:	data16 add BYTE PTR [rcx+0x0],ah
   100003080:	imul   eax,DWORD PTR [rax],0x65006c
   100003086:	add    BYTE PTR fs:[rax],ah
   100003089:	add    BYTE PTR [rbx+0x0],ah
   10000308c:	push   0x63006500
   100003091:	add    BYTE PTR [rbx+0x0],ch
   100003094:	jae    0x100003096
   100003096:	jne    0x100003098
   100003098:	ins    DWORD PTR es:[rdi],dx
   100003099:	add    BYTE PTR [rsi],ch
   10000309b:	add    BYTE PTR [rip+0xa00],cl        # 0x100003aa1
   1000030a1:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000030a7:	nop
   1000030a8:	nop
   1000030a9:	nop
   1000030aa:	nop
   1000030ab:	nop
   1000030ac:	nop
   1000030ad:	nop
   1000030ae:	nop
   1000030af:	nop
   1000030b0:	add    BYTE PTR [r10+0x0],r14b
   1000030b4:	jb     0x1000030b6
   1000030b6:	outs   dx,DWORD PTR ds:[rsi]
   1000030b7:	add    BYTE PTR [rdx+0x0],dh
   1000030ba:	and    BYTE PTR [rax],al
   1000030bc:	sub    eax,0x52002000
   1000030c1:	add    BYTE PTR [rbp+0x0],ah
   1000030c4:	ins    DWORD PTR es:[rdi],dx
   1000030c5:	add    BYTE PTR [rdi+0x0],ch
   1000030c8:	je     0x1000030ca
   1000030ca:	add    BYTE PTR gs:[rax],ah
   1000030cd:	add    BYTE PTR [rbp+0x0],ch
   1000030d0:	add    BYTE PTR gs:[rbp+0x0],ch
   1000030d4:	outs   dx,DWORD PTR ds:[rsi]
   1000030d5:	add    BYTE PTR [rdx+0x0],dh
   1000030d8:	jns    0x1000030da
   1000030da:	and    BYTE PTR [rax],al
   1000030dc:	data16 add BYTE PTR [rcx+0x0],ah
   1000030e0:	imul   eax,DWORD PTR [rax],0x65006c
   1000030e6:	add    BYTE PTR fs:[rax],ah
   1000030e9:	add    BYTE PTR [rbx+0x0],dh
   1000030ec:	(bad)  
   1000030ed:	add    BYTE PTR [rsi+0x0],ch
   1000030f0:	imul   eax,DWORD PTR [rax],0x790074
   1000030f6:	and    BYTE PTR [rax],al
   1000030f8:	movsxd eax,DWORD PTR [rax]
   1000030fa:	push   0x63006500
   1000030ff:	add    BYTE PTR [rbx+0x0],ch
   100003102:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x100003b09
   100003109:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000310f:	nop
   100003110:	push   rsp
   100003111:	add    BYTE PTR [rax+0x0],ch
   100003114:	add    BYTE PTR gs:[rax],ah
   100003117:	add    BYTE PTR [rbp+0x0],ah
   10000311a:	jb     0x10000311c
   10000311c:	jb     0x10000311e
   10000311e:	outs   dx,DWORD PTR ds:[rsi]
   10000311f:	add    BYTE PTR [rdx+0x0],dh
   100003122:	and    BYTE PTR [rax],al
   100003124:	imul   eax,DWORD PTR [rax],0x66006e
   10000312a:	outs   dx,DWORD PTR ds:[rsi]
   10000312b:	add    BYTE PTR [rdx+0x0],dh
   10000312e:	ins    DWORD PTR es:[rdi],dx
   10000312f:	add    BYTE PTR [rcx+0x0],ah
   100003132:	je     0x100003134
   100003134:	imul   eax,DWORD PTR [rax],0x6e006f
   10000313a:	and    BYTE PTR [rax],al
   10000313c:	push   0x73006100
   100003141:	add    BYTE PTR [rax],ah
   100003143:	add    BYTE PTR [rdx+0x0],ah
   100003146:	add    BYTE PTR gs:[rbp+0x0],ah
   10000314a:	outs   dx,BYTE PTR ds:[rsi]
   10000314b:	add    BYTE PTR [rax],ah
   10000314d:	add    BYTE PTR [rbx+0x0],dh
   100003150:	jne    0x100003152
   100003152:	(bad)  
   100003153:	add    BYTE PTR [rbp+0x0],ch
   100003156:	imul   eax,DWORD PTR [rax],0x740074
   10000315c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   100003161:	add    BYTE PTR [rax+rax*1+0x6f],dh
   100003165:	add    BYTE PTR [rax],ah
   100003167:	add    BYTE PTR [rdi+0x0],dl
   10000316a:	(bad)  
   10000316b:	add    BYTE PTR [rax+rax*1+0x73],dh
   10000316f:	add    BYTE PTR [rdi+0x0],ch
   100003172:	outs   dx,BYTE PTR ds:[rsi]
   100003173:	add    BYTE PTR [rax],ah
   100003175:	add    BYTE PTR [rbp+0x0],ah
   100003178:	jb     0x10000317a
   10000317a:	jb     0x10000317c
   10000317c:	outs   dx,DWORD PTR ds:[rsi]
   10000317d:	add    BYTE PTR [rdx+0x0],dh
   100003180:	and    BYTE PTR [rax],al
   100003182:	jb     0x100003184
   100003184:	add    BYTE PTR gs:[rax+0x0],dh
   100003188:	outs   dx,DWORD PTR ds:[rsi]
   100003189:	add    BYTE PTR [rdx+0x0],dh
   10000318c:	je     0x10000318e
   10000318e:	imul   eax,DWORD PTR [rax],0x67006e
   100003194:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x100003b9b
   10000319b:	add    BYTE PTR [rax+0x45909090],dl
   1000031a1:	add    BYTE PTR [rdx+0x0],dh
   1000031a4:	jb     0x1000031a6
   1000031a6:	outs   dx,DWORD PTR ds:[rsi]
   1000031a7:	add    BYTE PTR [rdx+0x0],dh
   1000031aa:	and    BYTE PTR [rax],al
   1000031ac:	sub    eax,0x73002000
   1000031b1:	add    BYTE PTR [rdi+0x0],ch
   1000031b4:	ins    DWORD PTR es:[rdi],dx
   1000031b5:	add    BYTE PTR [rbp+0x0],ah
   1000031b8:	and    BYTE PTR [rax],al
   1000031ba:	outs   dx,DWORD PTR ds:[rsi]
   1000031bb:	add    BYTE PTR [rsi+0x0],ah
   1000031be:	and    BYTE PTR [rax],al
   1000031c0:	je     0x1000031c2
   1000031c2:	push   0x20006500
   1000031c7:	add    BYTE PTR [rax+rax*1+0x75],ah
   1000031cb:	add    BYTE PTR [rbp+0x0],ch
   1000031ce:	jo     0x1000031d0
   1000031d0:	and    BYTE PTR [rax],al
   1000031d2:	data16 add BYTE PTR [rcx+0x0],ch
   1000031d6:	ins    BYTE PTR es:[rdi],dx
   1000031d7:	add    BYTE PTR [rbp+0x0],ah
   1000031da:	jae    0x1000031dc
   1000031dc:	and    BYTE PTR [rax],al
   1000031de:	ja     0x1000031e0
   1000031e0:	add    BYTE PTR gs:[rdx+0x0],dh
   1000031e4:	add    BYTE PTR gs:[rax],ah
   1000031e7:	add    BYTE PTR [rsi+0x0],ch
   1000031ea:	outs   dx,DWORD PTR ds:[rsi]
   1000031eb:	add    BYTE PTR [rax+rax*1+0x20],dh
   1000031ef:	add    BYTE PTR [rdi+0x0],ah
   1000031f2:	add    BYTE PTR gs:[rsi+0x0],ch
   1000031f6:	add    BYTE PTR gs:[rdx+0x0],dh
   1000031fa:	(bad)  
   1000031fb:	add    BYTE PTR [rax+rax*1+0x65],dh
   1000031ff:	add    BYTE PTR [rax+rax*1+0x20],ah
   100003203:	add    BYTE PTR [rdi+0x0],ch
   100003206:	outs   dx,BYTE PTR ds:[rsi]
   100003207:	add    BYTE PTR [rax],ah
   100003209:	add    BYTE PTR [rdx+0x0],dh
   10000320c:	add    BYTE PTR gs:[rbp+0x0],ch
   100003210:	outs   dx,DWORD PTR ds:[rsi]
   100003211:	add    BYTE PTR [rax+rax*1+0x65],dh
   100003215:	add    BYTE PTR [rax],ah
   100003217:	add    BYTE PTR [rsi+0x0],ch
   10000321a:	outs   dx,DWORD PTR ds:[rsi]
   10000321b:	add    BYTE PTR [rax+rax*1+0x65],ah
   10000321f:	add    BYTE PTR [rbx+0x0],dh
   100003222:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x100003c29
   100003229:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000322f:	nop
   100003230:	lock fiadd DWORD PTR [rcx]
   100003233:	add    BYTE PTR [rcx],al
   100003235:	add    BYTE PTR [rax],al
   100003237:	add    BYTE PTR [rax+0x10001db],ah
   10000323d:	add    BYTE PTR [rax],al
   10000323f:	add    al,al
   100003241:	fild   DWORD PTR [rcx]
   100003243:	add    BYTE PTR [rcx],al
   100003245:	add    BYTE PTR [rax],al
   100003247:	add    BYTE PTR [rax-0xf],dh
   10000324a:	add    DWORD PTR [rax],eax
   10000324c:	add    DWORD PTR [rax],eax
   10000324e:	add    BYTE PTR [rax],al
   100003250:	sbb    cl,0x1
   100003253:	add    BYTE PTR [rcx],al
   100003255:	add    BYTE PTR [rax],al
   100003257:	add    BYTE PTR [rax-0x27],ah
   10000325a:	add    DWORD PTR [rax],eax
   10000325c:	add    DWORD PTR [rax],eax
   10000325e:	add    BYTE PTR [rax],al
   100003260:	movabs al,ds:0xe0000000010001d8
   100003269:	fadd   QWORD PTR [rcx]
   10000326b:	add    BYTE PTR [rcx],al
   10000326d:	add    BYTE PTR [rax],al
   10000326f:	add    al,dh
   100003271:	fld    DWORD PTR [rcx]
   100003273:	add    BYTE PTR [rcx],al
   100003275:	add    BYTE PTR [rax],al
   100003277:	add    BYTE PTR [rax+0x10001d8],al
   10000327d:	add    BYTE PTR [rax],al
   10000327f:	add    BYTE PTR [rax],ah
   100003281:	out    0x1,eax
   100003283:	add    BYTE PTR [rcx],al
   100003285:	add    BYTE PTR [rax],al
   100003287:	add    BYTE PTR [rax],ah
   100003289:	call   0x10001328f
   10000328e:	add    BYTE PTR [rax],al
   100003290:	mov    al,0xd8
   100003292:	add    DWORD PTR [rax],eax
   100003294:	add    DWORD PTR [rax],eax
   100003296:	add    BYTE PTR [rax],al
   100003298:	xor    cl,bl
   10000329a:	add    DWORD PTR [rax],eax
   10000329c:	add    DWORD PTR [rax],eax
   10000329e:	add    BYTE PTR [rax],al
   1000032a0:	loopne 0x10000327b
   1000032a2:	add    DWORD PTR [rax],eax
   1000032a4:	add    DWORD PTR [rax],eax
   1000032a6:	add    BYTE PTR [rax],al
   1000032a8:	rcr    cl,1
   1000032aa:	add    DWORD PTR [rax],eax
   1000032ac:	add    DWORD PTR [rax],eax
   1000032ae:	add    BYTE PTR [rax],al
   1000032b0:	push   rax
   1000032b1:	fiadd  DWORD PTR [rcx]
   1000032b3:	add    BYTE PTR [rcx],al
   1000032b5:	add    BYTE PTR [rax],al
   1000032b7:	add    BYTE PTR [rax-0x26],ah
   1000032ba:	add    DWORD PTR [rax],eax
   1000032bc:	add    DWORD PTR [rax],eax
   1000032be:	add    BYTE PTR [rax],al
   1000032c0:	rex fiadd DWORD PTR [rcx]
   1000032c3:	add    BYTE PTR [rcx],al
   1000032c5:	add    BYTE PTR [rax],al
   1000032c7:	add    BYTE PTR [rax],dl
   1000032c9:	fiadd  DWORD PTR [rcx]
   1000032cb:	add    BYTE PTR [rcx],al
   1000032cd:	add    BYTE PTR [rax],al
   1000032cf:	add    BYTE PTR [rax],ah
   1000032d1:	fiadd  DWORD PTR [rcx]
   1000032d3:	add    BYTE PTR [rcx],al
   1000032d5:	add    BYTE PTR [rax],al
   1000032d7:	add    BYTE PTR [rax],dh
   1000032d9:	fiadd  DWORD PTR [rcx]
   1000032db:	add    BYTE PTR [rcx],al
   1000032dd:	add    BYTE PTR [rax],al
   1000032df:	add    BYTE PTR [rax],ah
   1000032e1:	fld    DWORD PTR [rcx]
   1000032e3:	add    BYTE PTR [rcx],al
   1000032e5:	add    BYTE PTR [rax],al
   1000032e7:	add    BYTE PTR [rax+0x10001ee],al
   1000032ed:	add    BYTE PTR [rax],al
   1000032ef:	add    BYTE PTR [rax+0x10001da],dh
   1000032f5:	add    BYTE PTR [rax],al
   1000032f7:	add    BYTE PTR [rax+0x10001da],ah
   1000032fd:	add    BYTE PTR [rax],al
   1000032ff:	add    BYTE PTR [rax+0x10001da],al
   100003305:	add    BYTE PTR [rax],al
   100003307:	add    BYTE PTR [rax+0x10001da],dl
   10000330d:	add    BYTE PTR [rax],al
   10000330f:	add    BYTE PTR [rax-0x27],al
   100003312:	add    DWORD PTR [rax],eax
   100003314:	add    DWORD PTR [rax],eax
   100003316:	add    BYTE PTR [rax],al
   100003318:	rcr    bh,0x1
   10000331b:	add    BYTE PTR [rcx],al
   10000331d:	add    BYTE PTR [rax],al
   10000331f:	add    BYTE PTR [rax],ah
   100003321:	jmp    0x100013327
   100003326:	add    BYTE PTR [rax],al
   100003328:	jae    0x10000332a
   10000332a:	jno    0x10000332c
   10000332c:	ins    BYTE PTR es:[rdi],dx
   10000332d:	add    BYTE PTR [rbp+0x0],ch
   100003330:	imul   eax,DWORD PTR [rax],0x2e006e
   100003336:	add    BYTE PTR fs:[rax+rax*1+0x6c],ch
   10000333b:	add    BYTE PTR [rax],al
   10000333d:	add    BYTE PTR [rax],al
   10000333f:	add    BYTE PTR [rbx+0x0],dh
   100003342:	jno    0x100003344
   100003344:	ins    BYTE PTR es:[rdi],dx
   100003345:	add    BYTE PTR [rax+rax*1+0x6b],ah
   100003349:	add    BYTE PTR [rsi],ch
   10000334b:	add    BYTE PTR [rax+rax*1+0x6c],ah
   10000334f:	add    BYTE PTR [rax+rax*1+0x0],ch
   100003353:	add    BYTE PTR [rax+0x53909090],dl
   100003359:	je     0x1000033cd
   10000335b:	imul   ebp,DWORD PTR [rsi+0x67],0x706f6320
   100003362:	jns    0x100003384
   100003364:	data16 (bad) 
   100003366:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x62282065
   10000336e:	jne    0x1000033d9
   100003370:	ins    BYTE PTR es:[rdi],dx
   100003371:	and    BYTE PTR fs:[rbx+0x65],dh
   100003375:	jb     0x1000033ed
   100003377:	gs jb  0x10000339a
   10000337a:	outs   dx,BYTE PTR ds:[rsi]
   10000337b:	(bad)  
   10000337c:	ins    DWORD PTR es:[rdi],dx
   10000337d:	sub    DWORD PTR gs:[rax],eax
   100003380:	imul   eax,DWORD PTR [rax],0x69006e
   100003386:	je     0x100003388
   100003388:	jae    0x10000338a
   10000338a:	imul   eax,DWORD PTR [rax],0x6e0067
   100003390:	(bad)  
   100003391:	add    BYTE PTR [rax+rax*1+0x3a],ch
   100003395:	add    BYTE PTR [rbx+0x0],al
   100003398:	jb     0x10000339a
   10000339a:	add    BYTE PTR gs:[rcx+0x0],ah
   10000339e:	je     0x1000033a0
   1000033a0:	add    BYTE PTR gs:[rbp+0x0],al
   1000033a4:	jbe    0x1000033a6
   1000033a6:	add    BYTE PTR gs:[rsi+0x0],ch
   1000033aa:	je     0x1000033ac
   1000033ac:	add    BYTE PTR [rax],al
   1000033ae:	nop
   1000033af:	nop
   1000033b0:	imul   eax,DWORD PTR [rax],0x63006e
   1000033b6:	jb     0x1000033b8
   1000033b8:	add    BYTE PTR gs:[rbp+0x0],ch
   1000033bc:	add    BYTE PTR gs:[rsi+0x0],ch
   1000033c0:	je     0x1000033c2
   1000033c2:	jae    0x1000033c4
   1000033c4:	imul   eax,DWORD PTR [rax],0x6e0067
   1000033ca:	(bad)  
   1000033cb:	add    BYTE PTR [rax+rax*1+0x0],ch
   1000033cf:	add    BYTE PTR [rip+0x73006c00],ah        # 0x173009fd5
   1000033d5:	add    BYTE PTR [rax+rax*1],ah
   1000033d8:	and    eax,0x73006c00
   1000033dd:	add    BYTE PTR [rax],al
   1000033df:	add    BYTE PTR [rip+0x25007300],ah        # 0x12500a6e5
   1000033e5:	add    BYTE PTR [rbx+0x0],dh
   1000033e8:	and    eax,0x7300
   1000033ed:	add    BYTE PTR [rax+0x72745390],dl
   1000033f3:	imul   ebp,DWORD PTR [rsi+0x67],0x726f4620
   1000033fa:	ins    DWORD PTR es:[rdi],dx
   1000033fb:	(bad)  
   1000033fc:	je     0x10000341e
   1000033fe:	rex.RB jb 0x100003473
   100003401:	outs   dx,DWORD PTR ds:[rsi]
   100003402:	jb     0x100003404
   100003404:	pop    rsp
   100003405:	add    BYTE PTR [rax],al
   100003407:	add    BYTE PTR [rip+0x73006c00],ah        # 0x17300a00d
   10000340d:	add    BYTE PTR [rax],al
   10000340f:	add    BYTE PTR [rax+rax*1+0x6f],cl
   100003413:	add    BYTE PTR [rdi+0x0],ah
   100003416:	imul   eax,DWORD PTR [rax],0x4d006e
   10000341c:	outs   dx,DWORD PTR ds:[rsi]
   10000341d:	add    BYTE PTR [rax+rax*1+0x65],ah
   100003421:	add    BYTE PTR [rax],al
   100003423:	add    BYTE PTR [rax+0x44909090],dl
   100003429:	add    BYTE PTR [rbp+0x0],ah
   10000342c:	data16 add BYTE PTR [rcx+0x0],ah
   100003430:	jne    0x100003432
   100003432:	ins    BYTE PTR es:[rdi],dx
   100003433:	add    BYTE PTR [rax+rax*1+0x4c],dh
   100003437:	add    BYTE PTR [rdi+0x0],ch
   10000343a:	add    BYTE PTR [ecx+0x0],ch
   10000343e:	outs   dx,BYTE PTR ds:[rsi]
   10000343f:	add    BYTE PTR [rax],al
   100003441:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100003447:	nop
   100003448:	add    BYTE PTR [r13+0x0],sil
   10000344c:	add    BYTE PTR fs:[rcx+0x0],ch
   100003450:	je     0x100003452
   100003452:	rex.WR add BYTE PTR [rbp+0x0],r12b
   100003456:	jbe    0x100003458
   100003458:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   10000345d:	add    BYTE PTR [rax+0x61004d90],dl
   100003463:	add    BYTE PTR [rax+0x0],dh
   100003466:	pop    rdi
   100003467:	add    BYTE PTR [rax],al
   100003469:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000346f:	nop
   100003470:	rex.WRB add BYTE PTR [r9+0x0],r12b
   100003474:	jo     0x100003476
   100003476:	and    al,0x0
   100003478:	add    BYTE PTR [rax],al
   10000347a:	nop
   10000347b:	nop
   10000347c:	nop
   10000347d:	nop
   10000347e:	nop
   10000347f:	nop
   100003480:	rex.WRB add BYTE PTR [r9+0x0],r12b
   100003484:	jo     0x100003486
   100003486:	and    eax,DWORD PTR [rax]
   100003488:	add    BYTE PTR [rax],al
   10000348a:	nop
   10000348b:	nop
   10000348c:	nop
   10000348d:	nop
   10000348e:	nop
   10000348f:	nop
   100003490:	imul   eax,DWORD PTR [rax],0x65
   100003493:	add    BYTE PTR [rdx+0x0],dh
   100003496:	outs   dx,BYTE PTR ds:[rsi]
   100003497:	add    BYTE PTR [rbp+0x0],ah
   10000349a:	ins    BYTE PTR es:[rdi],dx
   10000349b:	add    BYTE PTR [rbx],dh
   10000349d:	add    BYTE PTR [rdx],dh
   10000349f:	add    BYTE PTR [rsi],ch
   1000034a1:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1000034a5:	add    BYTE PTR [rax+rax*1+0x0],ch
   1000034a9:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000034af:	nop
   1000034b0:	rex.RB jb 0x100003525
   1000034b3:	outs   dx,DWORD PTR ds:[rsi]
   1000034b4:	jb     0x1000034f0
   1000034b6:	and    BYTE PTR [rcx+0x6e],cl
   1000034b9:	jae    0x10000352f
   1000034bb:	(bad)  
   1000034bc:	outs   dx,BYTE PTR ds:[rsi]
   1000034bd:	movsxd esp,DWORD PTR [rbp+0x20]
   1000034c0:	outs   dx,BYTE PTR ds:[rsi]
   1000034c1:	(bad)  
   1000034c2:	ins    DWORD PTR es:[rdi],dx
   1000034c3:	and    BYTE PTR gs:[rbp+0x78],ah
   1000034c7:	movsxd esp,DWORD PTR [rbp+0x65]
   1000034ca:	fs jae 0x1000034ed
   1000034cd:	ins    DWORD PTR es:[rdi],dx
   1000034ce:	(bad)  
   1000034cf:	js     0x10000353a
   1000034d1:	ins    DWORD PTR es:[rdi],dx
   1000034d2:	jne    0x100003541
   1000034d4:	and    BYTE PTR [rbp+riz*2+0x6e],ch
   1000034d8:	addr32 je 0x100003543
   1000034db:	add    BYTE PTR cs:[rax+0x72459090],dl
   1000034e2:	jb     0x100003553
   1000034e4:	jb     0x100003506
   1000034e6:	addr32 gs je 0x10000355e
   1000034ea:	imul   ebp,DWORD PTR [rsi+0x67],0x736e6920
   1000034f1:	je     0x100003554
   1000034f3:	outs   dx,BYTE PTR ds:[rsi]
   1000034f4:	movsxd esp,DWORD PTR [rbp+0x20]
   1000034f7:	rex.WB
   1000034f8:	and    BYTE PTR [rsi+0x72],r12b
   1000034fc:	outs   dx,DWORD PTR ds:[rsi]
   1000034fd:	ins    DWORD PTR es:[rdi],dx
   1000034fe:	and    BYTE PTR [rsi+0x61],ch
   100003501:	ins    DWORD PTR es:[rdi],dx
   100003502:	gs add BYTE PTR cs:[rax+0x72459090],dl
   10000350a:	jb     0x10000357b
   10000350c:	jb     0x10000352e
   10000350e:	addr32 gs je 0x100003586
   100003512:	imul   ebp,DWORD PTR [rsi+0x67],0x736e6920
   100003519:	je     0x10000357c
   10000351b:	outs   dx,BYTE PTR ds:[rsi]
   10000351c:	movsxd esp,DWORD PTR [rbp+0x20]
   10000351f:	outs   dx,BYTE PTR ds:[rsi]
   100003520:	(bad)  
   100003521:	ins    DWORD PTR es:[rdi],dx
   100003522:	gs add BYTE PTR cs:[rax-0x6f6f6f70],dl
   10000352a:	nop
   10000352b:	nop
   10000352c:	nop
   10000352d:	nop
   10000352e:	nop
   10000352f:	nop
   100003530:	rex.RXB
   100003531:	gs je  0x100003577
   100003534:	outs   dx,DWORD PTR ds:[rsi]
   100003535:	ins    DWORD PTR es:[rdi],dx
   100003536:	jo     0x1000035ad
   100003538:	je     0x10000359f
   10000353a:	jb     0x10000358a
   10000353c:	(bad)  
   10000353d:	ins    DWORD PTR es:[rdi],dx
   10000353e:	sub    BYTE PTR gs:[rcx],ch
   100003541:	and    BYTE PTR [rcx+0x6e],ch
   100003544:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   10000354c:	je     0x1000035b7
   10000354e:	outs   dx,DWORD PTR ds:[rsi]
   10000354f:	outs   dx,BYTE PTR ds:[rsi]
   100003550:	and    BYTE PTR [rsi+0x61],ah
   100003553:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6241202e
   10000355b:	outs   dx,DWORD PTR ds:[rsi]
   10000355c:	jb     0x1000035d2
   10000355e:	imul   ebp,DWORD PTR [rsi+0x67],0x696e4920
   100003565:	je     0x1000035d0
   100003567:	(bad)  
   100003568:	ins    BYTE PTR es:[rdi],dx
   100003569:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   100003570:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100003576:	nop
   100003577:	nop
   100003578:	push   rbp
   100003579:	outs   dx,BYTE PTR ds:[rsi]
   10000357a:	(bad)  
   10000357b:	(bad)  
   10000357c:	ins    BYTE PTR es:[rdi],dx
   10000357d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   100003582:	outs   dx,DWORD PTR ds:[rsi]
   100003583:	(bad)  
   100003584:	je     0x1000035e7
   100003586:	imul   ebp,DWORD PTR [rsi+0x20],0x76726573
   10000358d:	imul   esp,DWORD PTR [rbx+0x65],0x6d616e20
   100003594:	gs add BYTE PTR cs:[rax+0x6c0025],dl
   10000359c:	jae    0x10000359e
   10000359e:	pop    rsp
   10000359f:	add    BYTE PTR [rip+0x73006c00],ah        # 0x17300a1a5
   1000035a5:	add    BYTE PTR [rax],al
   1000035a7:	add    BYTE PTR [rbx+0x4c],al
   1000035aa:	push   rbp
   1000035ab:	push   rbx
   1000035ac:	push   r8
   1000035ae:	rex.WB
   1000035af:	cs rex.R
   1000035b1:	rex.WR
   1000035b2:	rex.WR add BYTE PTR [rax+0x47909090],r10b
   1000035b9:	gs je  0x1000035ff
   1000035bc:	ins    BYTE PTR es:[rdi],dx
   1000035bd:	jne    0x100003632
   1000035bf:	je     0x100003626
   1000035c1:	jb     0x100003611
   1000035c3:	outs   dx,DWORD PTR ds:[rsi]
   1000035c4:	fs gs push rbx
   1000035c7:	je     0x10000362a
   1000035c9:	je     0x100003630
   1000035cb:	add    BYTE PTR [rax+0x52909090],dl
   1000035d1:	rex.RB push r11
   1000035d3:	push   rbp
   1000035d4:	push   rsp
   1000035d5:	rex.WB
   1000035d6:	rex.WR push rbx
   1000035d8:	cs rex.R
   1000035da:	rex.WR
   1000035db:	rex.WR add BYTE PTR [rax-0x2a2f6f70],r10b
   1000035e2:	add    BYTE PTR [rax],al
   1000035e4:	add    DWORD PTR [rax],eax
   1000035e6:	add    BYTE PTR [rax],al
   1000035e8:	rcl    ch,0x0
   1000035eb:	add    BYTE PTR [rcx],al
   1000035ed:	add    BYTE PTR [rax],al
   1000035ef:	add    BYTE PTR [rax],dl
   1000035f1:	(bad)  
   1000035f2:	add    BYTE PTR [rax],al
   1000035f4:	add    DWORD PTR [rax],eax
   1000035f6:	add    BYTE PTR [rax],al
   1000035f8:	and    dh,dl
   1000035fa:	add    BYTE PTR [rax],al
   1000035fc:	add    DWORD PTR [rax],eax
   1000035fe:	add    BYTE PTR [rax],al
   100003600:	xor    dh,dl
   100003602:	add    BYTE PTR [rax],al
   100003604:	add    DWORD PTR [rax],eax
   100003606:	add    BYTE PTR [rax],al
   100003608:	rex (bad) 
   10000360a:	add    BYTE PTR [rax],al
   10000360c:	add    DWORD PTR [rax],eax
   10000360e:	add    BYTE PTR [rax],al
   100003610:	(bad)  
   100003611:	(bad)  
   100003612:	add    BYTE PTR [rax],al
   100003614:	add    DWORD PTR [rax],eax
   100003616:	add    BYTE PTR [rax],al
   100003618:	rcl    dh,1
   10000361a:	add    BYTE PTR [rax],al
   10000361c:	add    DWORD PTR [rax],eax
   10000361e:	add    BYTE PTR [rax],al
   100003620:	loopne 0x1000035f8
   100003622:	add    BYTE PTR [rax],al
   100003624:	add    DWORD PTR [rax],eax
   100003626:	add    BYTE PTR [rax],al
   100003628:	movabs al,ds:0xf0000000010000d7
   100003631:	(bad)  
   100003632:	add    BYTE PTR [rax],al
   100003634:	add    DWORD PTR [rax],eax
   100003636:	add    BYTE PTR [rax],al
   100003638:	add    BYTE PTR [rax],al
   10000363a:	nop
   10000363b:	nop
   10000363c:	(bad)  
   10000363d:	add    BYTE PTR [rax],al
   10000363f:	add    BYTE PTR [rbx+0x0],ah
   100003642:	add    BYTE PTR [rax],al
   100003644:	(bad)  
   100003645:	add    BYTE PTR [rax],al
   100003647:	add    BYTE PTR [rbx+0x0],dl
   10000364a:	add    BYTE PTR [rax],al
   10000364c:	jae    0x10000364e
   10000364e:	add    BYTE PTR [rax],al
   100003650:	push   rsi
   100003651:	add    BYTE PTR [rax],al
   100003653:	add    BYTE PTR [rax+0x63909090],dl
   100003659:	add    BYTE PTR [rax+rax*1+0x6f],ch
   10000365d:	add    BYTE PTR [rbp+0x0],dh
   100003660:	add    BYTE PTR fs:[rax+rax*1+0x62],ah
   100003665:	add    BYTE PTR [rax],al
   100003667:	add    BYTE PTR [rax+0x0],bh
   10000366a:	movsxd eax,DWORD PTR [rax]
   10000366c:	outs   dx,DWORD PTR ds:[rsi]
   10000366d:	add    BYTE PTR [rax+0x0],dh
   100003670:	jns    0x100003672
   100003672:	add    BYTE PTR [rax],al
   100003674:	add    BYTE PTR [r8],al
   100003677:	add    BYTE PTR [rdx+0x0],al
   10000367a:	add    BYTE PTR [rax],al
   10000367c:	add    BYTE PTR fs:[rax],al
   10000367f:	add    BYTE PTR [rbp+0x0],al
   100003682:	add    BYTE PTR [rax],al
   100003684:	add    BYTE PTR gs:[rax],al
   100003687:	add    BYTE PTR [rsi+0x0],ah
   10000368a:	add    BYTE PTR [rax],al
   10000368c:	add    BYTE PTR [eax],al
   10000368f:	add    BYTE PTR [rax+0x0],ch
   100003692:	add    BYTE PTR [rax],al
   100003694:	rex.WXB add BYTE PTR [r8],al
   100003697:	add    BYTE PTR [rbx+0x0],ch
   10000369a:	add    BYTE PTR [rax],al
   10000369c:	ins    BYTE PTR es:[rdi],dx
   10000369d:	add    BYTE PTR [rax],al
   10000369f:	add    BYTE PTR [rbp+0x0],ch
   1000036a2:	add    BYTE PTR [rax],al
   1000036a4:	rex.WRX add BYTE PTR [rax],r8b
   1000036a7:	add    BYTE PTR [rsi+0x0],ch
   1000036aa:	add    BYTE PTR [rax],al
   1000036ac:	rex.WRXB add BYTE PTR [r8],r8b
   1000036af:	add    BYTE PTR [rax+0x0],dl
   1000036b2:	add    BYTE PTR [rax],al
   1000036b4:	jo     0x1000036b6
   1000036b6:	add    BYTE PTR [rax],al
   1000036b8:	push   rcx
   1000036b9:	add    BYTE PTR [rax],al
   1000036bb:	add    BYTE PTR [rcx+0x0],dh
   1000036be:	add    BYTE PTR [rax],al
   1000036c0:	push   rsp
   1000036c1:	add    BYTE PTR [rax],al
   1000036c3:	add    BYTE PTR [rbp+0x0],dl
   1000036c6:	add    BYTE PTR [rax],al
   1000036c8:	jbe    0x1000036ca
   1000036ca:	add    BYTE PTR [rax],al
   1000036cc:	ja     0x1000036ce
   1000036ce:	add    BYTE PTR [rax],al
   1000036d0:	jns    0x1000036d2
   1000036d2:	add    BYTE PTR [rax],al
   1000036d4:	js     0x1000036d6
   1000036d6:	add    BYTE PTR [rax],al
   1000036d8:	push   rbx
   1000036d9:	add    BYTE PTR [rcx+0x0],dl
   1000036dc:	rex.WR add BYTE PTR [rax],r12b
   1000036df:	add    BYTE PTR [rbx+0x0],dl
   1000036e2:	add    BYTE PTR gs:[rdx+0x0],dh
   1000036e6:	jbe    0x1000036e8
   1000036e8:	add    BYTE PTR gs:[rdx+0x0],dh
   1000036ec:	add    BYTE PTR [rax],al
   1000036ee:	nop
   1000036ef:	nop
   1000036f0:	and    eax,0x73006c00
   1000036f5:	add    BYTE PTR [rip+0x73006c00],ah        # 0x17300a2fb
   1000036fb:	add    BYTE PTR [rax],al
   1000036fd:	add    BYTE PTR [rax+0x39003190],dl
   100003703:	add    BYTE PTR [rdx],bh
   100003705:	add    BYTE PTR [rbx],dh
   100003707:	add    BYTE PTR [rcx],bh
   100003709:	add    BYTE PTR [rdx],bh
   10000370b:	add    BYTE PTR [rcx],dh
   10000370d:	add    BYTE PTR [rip+0xffffffff90000000],dh        # 0x90003713
   100003713:	nop
   100003714:	nop
   100003715:	nop
   100003716:	nop
   100003717:	nop
   100003718:	nop
   100003719:	nop
   10000371a:	nop
   10000371b:	nop
   10000371c:	nop
   10000371d:	nop
   10000371e:	nop
   10000371f:	nop
   100003720:	rex.XB add BYTE PTR [r15+0x0],bpl
   100003724:	jo     0x100003726
   100003726:	jns    0x100003728
   100003728:	jb     0x10000372a
   10000372a:	imul   eax,DWORD PTR [rax],0x680067
   100003730:	je     0x100003732
   100003732:	and    BYTE PTR [rax],al
   100003734:	sub    BYTE PTR [rax],al
   100003736:	movsxd eax,DWORD PTR [rax]
   100003738:	sub    DWORD PTR [rax],eax
   10000373a:	and    BYTE PTR [rax],al
   10000373c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   100003740:	movsxd eax,DWORD PTR [rax]
   100003742:	jb     0x100003744
   100003744:	outs   dx,DWORD PTR ds:[rsi]
   100003745:	add    BYTE PTR [rbx+0x0],dh
   100003748:	outs   dx,DWORD PTR ds:[rsi]
   100003749:	add    BYTE PTR [rsi+0x0],ah
   10000374c:	je     0x10000374e
   10000374e:	and    BYTE PTR [rax],al
   100003750:	rex.XB add BYTE PTR [r15+0x0],bpl
   100003754:	jb     0x100003756
   100003756:	jo     0x100003758
   100003758:	outs   dx,DWORD PTR ds:[rsi]
   100003759:	add    BYTE PTR [rdx+0x0],dh
   10000375c:	(bad)  
   10000375d:	add    BYTE PTR [rax+rax*1+0x69],dh
   100003761:	add    BYTE PTR [rdi+0x0],ch
   100003764:	outs   dx,BYTE PTR ds:[rsi]
   100003765:	add    BYTE PTR [rax],al
   100003767:	add    BYTE PTR [rsi+0x0],al
   10000376a:	add    BYTE PTR gs:[rdx+0x0],ah
   10000376e:	and    BYTE PTR [rax],al
   100003770:	xor    DWORD PTR [rax],eax
   100003772:	xor    BYTE PTR [rax],al
   100003774:	and    BYTE PTR [rax],al
   100003776:	xor    al,BYTE PTR [rax]
   100003778:	xor    BYTE PTR [rax],al
   10000377a:	xor    DWORD PTR [rax],eax
   10000377c:	xor    al,BYTE PTR [rax]
   10000377e:	add    BYTE PTR [rax],al
   100003780:	cmp    bl,BYTE PTR gs:[rbx+rsi*2+0x71]
   100003785:	ins    BYTE PTR es:[rdi],dx
   100003786:	xor    DWORD PTR [rcx],esi
   100003788:	pop    rdi
   100003789:	ins    DWORD PTR es:[rdi],dx
   10000378a:	(bad)  
   10000378b:	imul   ebp,DWORD PTR [rsi+0x5f],0x71735c74
   100003792:	ins    BYTE PTR es:[rdi],dx
   100003793:	pop    rsp
   100003794:	outs   dx,BYTE PTR ds:[rsi]
   100003795:	je     0x1000037fb
   100003797:	(bad)  
   100003798:	ins    DWORD PTR es:[rdi],dx
   100003799:	jae    0x1000037f7
   10000379b:	imul   esi,DWORD PTR [rbx+0x6f],0x75
   10000379f:	jb     0x100003804
   1000037a1:	gs pop rsp
   1000037a3:	jbe    0x10000380a
   1000037a5:	jb     0x10000381a
   1000037a7:	imul   ebp,DWORD PTR [rdi+0x6e],0x7070632e
   1000037ae:	add    BYTE PTR [rax+0x6d6c7173],dl
   1000037b4:	imul   ebp,DWORD PTR [rsi+0x2e],0x6c6c64
   1000037bb:	nop
   1000037bc:	nop
   1000037bd:	nop
   1000037be:	nop
   1000037bf:	nop
   1000037c0:	and    eax,0x28207368
   1000037c5:	rex.W push rdx
   1000037c7:	rex.RB push r11
   1000037c9:	push   rbp
   1000037ca:	rex.WR push rsp
   1000037cc:	and    BYTE PTR [rax],dh
   1000037ce:	js     0x1000037f5
   1000037d0:	js     0x1000037fb
   1000037d2:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000037d8:	cmp    bl,BYTE PTR gs:[rbx+rsi*2+0x71]
   1000037dd:	ins    BYTE PTR es:[rdi],dx
   1000037de:	xor    DWORD PTR [rcx],esi
   1000037e0:	pop    rdi
   1000037e1:	ins    DWORD PTR es:[rdi],dx
   1000037e2:	(bad)  
   1000037e3:	imul   ebp,DWORD PTR [rsi+0x5f],0x71735c74
   1000037ea:	ins    BYTE PTR es:[rdi],dx
   1000037eb:	pop    rsp
   1000037ec:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1000037ef:	ins    DWORD PTR es:[rdi],dx
   1000037f0:	outs   dx,DWORD PTR ds:[rsi]
   1000037f1:	outs   dx,BYTE PTR ds:[rsi]
   1000037f2:	pop    rsp
   1000037f3:	rex.R
   1000037f4:	rex.WXB pop r12
   1000037f6:	outs   dx,DWORD PTR ds:[rsi]
   1000037f7:	jae    0x10000385f
   1000037f9:	pop    rsp
   1000037fa:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
   100003801:	pop    rsp
   100003802:	jae    0x100003869
   100003804:	jb     0x10000386f
   100003806:	(bad)  
   100003807:	ins    BYTE PTR es:[rdi],dx
   100003808:	imul   edi,DWORD PTR [rdx+0x65],0x9000682e
   10000380f:	nop
   100003810:	add    BYTE PTR [r8+r8*1+0x62],al
   100003815:	add    BYTE PTR [rcx+0x0],al
   100003818:	outs   dx,BYTE PTR ds:[rsi]
   100003819:	add    BYTE PTR [rax+rax*1+0x53],ah
   10000381d:	add    BYTE PTR [rbp+0x0],ah
   100003820:	je     0x100003822
   100003822:	rex.WRXB add BYTE PTR [r8+0x0],r14b
   100003826:	je     0x100003828
   100003828:	jae    0x10000382a
   10000382a:	add    BYTE PTR [rax],al
   10000382c:	nop
   10000382d:	nop
   10000382e:	nop
   10000382f:	nop
   100003830:	pop    rax
   100003831:	rex.RB
   100003832:	rex.RXB
   100003833:	gs je  0x10000387b
   100003836:	outs   dx,BYTE PTR ds:[rsi]
   100003837:	imul   ebp,DWORD PTR [esi+0x65],0x90909000
   10000383f:	nop
   100003840:	nop
   100003841:	nop
   100003842:	nop
   100003843:	nop
   100003844:	nop
   100003845:	nop
   100003846:	nop
   100003847:	nop
   100003848:	nop
   100003849:	nop
   10000384a:	nop
   10000384b:	nop
   10000384c:	nop
   10000384d:	nop
   10000384e:	nop
   10000384f:	nop
   100003850:	sub    rsp,0x5a8
   100003857:	mov    rax,QWORD PTR [rip+0x25992]        # 0x1000291f0
   10000385e:	xor    edx,edx
   100003860:	mov    QWORD PTR [rsp+0x5b8],rax
   100003868:	mov    rax,QWORD PTR [rip+0x25989]        # 0x1000291f8
   10000386f:	lea    ecx,[rdx+0x1]
   100003872:	mov    QWORD PTR [rsp+0x5b8],rax
   10000387a:	call   QWORD PTR [rip+0xffffffffffffe2c0]        # 0x100001b40
   100003880:	lea    rcx,[rsp+0x34]
   100003885:	xor    edx,edx
   100003887:	mov    r8d,0x94
   10000388d:	call   0x10001f80c
   100003892:	lea    rcx,[rsp+0xd8]
   10000389a:	xor    edx,edx
   10000389c:	mov    r8d,0x4c8
   1000038a2:	mov    QWORD PTR [rsp+0xd0],0x0
   1000038ae:	call   0x10001f80c
   1000038b3:	mov    rax,QWORD PTR [rsp+0x5a8]
   1000038bb:	xor    ecx,ecx
   1000038bd:	mov    QWORD PTR [rsp+0x40],rax
   1000038c2:	lea    rax,[rsp+0x30]
   1000038c7:	mov    DWORD PTR [rsp+0x30],0xc0000409
   1000038cf:	mov    QWORD PTR [rsp+0x20],rax
   1000038d4:	lea    rax,[rsp+0xd0]
   1000038dc:	mov    QWORD PTR [rsp+0x28],rax
   1000038e1:	call   QWORD PTR [rip+0xffffffffffffd9d1]        # 0x1000012b8
   1000038e7:	lea    rcx,[rsp+0x20]
   1000038ec:	call   QWORD PTR [rip+0xffffffffffffd816]        # 0x100001108
   1000038f2:	call   QWORD PTR [rip+0xffffffffffffd820]        # 0x100001118
   1000038f8:	mov    edx,0x502
   1000038fd:	mov    rcx,rax
   100003900:	call   QWORD PTR [rip+0xffffffffffffd80a]        # 0x100001110
   100003906:	add    rsp,0x5a8
   10000390d:	ret    
   10000390e:	nop
   10000390f:	nop
   100003910:	nop
   100003911:	nop
   100003912:	nop
   100003913:	nop
   100003914:	nop
   100003915:	nop
   100003916:	nop
   100003917:	nop
   100003918:	nop
   100003919:	nop
   10000391a:	nop
   10000391b:	nop
   10000391c:	nop
   10000391d:	nop
   10000391e:	nop
   10000391f:	nop
   100003920:	sub    rsp,0x28
   100003924:	test   rcx,rcx
   100003927:	je     0x10000395a
   100003929:	mov    rax,rcx
   10000392c:	and    rax,0xffffffffffffe000
   100003932:	mov    rax,QWORD PTR [rax+0x8]
   100003936:	mov    rdx,QWORD PTR [rax+0x10]
   10000393a:	dec    rdx
   10000393d:	not    rdx
   100003940:	and    rdx,rcx
   100003943:	mov    r8,QWORD PTR [rdx+0x8]
   100003947:	test   BYTE PTR [r8+0x28],0x8
   10000394c:	jne    0x10000395a
   10000394e:	mov    rax,QWORD PTR [r8]
   100003951:	mov    rdx,rcx
   100003954:	mov    rcx,r8
   100003957:	call   QWORD PTR [rax+0x28]
   10000395a:	add    rsp,0x28
   10000395e:	ret    
   10000395f:	nop
   100003960:	nop
   100003961:	nop
   100003962:	nop
   100003963:	nop
   100003964:	nop
   100003965:	nop
   100003966:	nop
   100003967:	nop
   100003968:	nop
   100003969:	nop
   10000396a:	nop
   10000396b:	nop
   10000396c:	nop
   10000396d:	nop
   10000396e:	nop
   10000396f:	nop
   100003970:	sub    rsp,0x28
   100003974:	mov    rcx,QWORD PTR [rip+0x25745]        # 0x1000290c0
   10000397b:	mov    rax,QWORD PTR gs:0x30
   100003984:	add    rax,rcx
   100003987:	cmp    rcx,0x1480
   10000398e:	jge    0x100003996
   100003990:	call   QWORD PTR [rip+0xffffffffffffd78a]        # 0x100001120
   100003996:	test   rax,rax
   100003999:	je     0x1000039a7
   10000399b:	mov    rax,QWORD PTR [rax+0xd8]
   1000039a2:	test   rax,rax
   1000039a5:	jne    0x1000039d9
   1000039a7:	call   QWORD PTR [rip+0xffffffffffffe1a3]        # 0x100001b50
   1000039ad:	mov    r11,QWORD PTR [rip+0x2570c]        # 0x1000290c0
   1000039b4:	mov    rax,QWORD PTR gs:0x30
   1000039bd:	add    rax,r11
   1000039c0:	cmp    r11,0x1480
   1000039c7:	jge    0x1000039d2
   1000039c9:	mov    ecx,r11d
   1000039cc:	call   QWORD PTR [rip+0xffffffffffffd74e]        # 0x100001120
   1000039d2:	mov    rax,QWORD PTR [rax+0xd8]
   1000039d9:	mov    rax,QWORD PTR [rax+0x388]
   1000039e0:	mov    rax,QWORD PTR [rax+0x108]
   1000039e7:	add    rsp,0x28
   1000039eb:	ret    
   1000039ec:	nop
   1000039ed:	nop
   1000039ee:	nop
   1000039ef:	nop
   1000039f0:	nop
   1000039f1:	nop
   1000039f2:	nop
   1000039f3:	nop
   1000039f4:	nop
   1000039f5:	nop
   1000039f6:	nop
   1000039f7:	nop
   1000039f8:	nop
   1000039f9:	nop
   1000039fa:	nop
   1000039fb:	nop
   1000039fc:	nop
   1000039fd:	nop
   1000039fe:	nop
   1000039ff:	nop
   100003a00:	push   rbx
   100003a02:	sub    rsp,0x30
   100003a06:	mov    rax,QWORD PTR gs:0x30
   100003a0f:	mov    ebx,ecx
   100003a11:	mov    rcx,QWORD PTR [rip+0x256a8]        # 0x1000290c0
   100003a18:	add    rax,rcx
   100003a1b:	cmp    rcx,0x1480
   100003a22:	jge    0x100003a2a
   100003a24:	call   QWORD PTR [rip+0xffffffffffffd6f6]        # 0x100001120
   100003a2a:	test   rax,rax
   100003a2d:	je     0x100003a3b
   100003a2f:	mov    rax,QWORD PTR [rax+0xd8]
   100003a36:	test   rax,rax
   100003a39:	jne    0x100003a6d
   100003a3b:	call   QWORD PTR [rip+0xffffffffffffe10f]        # 0x100001b50
   100003a41:	mov    r11,QWORD PTR [rip+0x25678]        # 0x1000290c0
   100003a48:	mov    rax,QWORD PTR gs:0x30
   100003a51:	add    rax,r11
   100003a54:	cmp    r11,0x1480
   100003a5b:	jge    0x100003a66
   100003a5d:	mov    ecx,r11d
   100003a60:	call   QWORD PTR [rip+0xffffffffffffd6ba]        # 0x100001120
   100003a66:	mov    rax,QWORD PTR [rax+0xd8]
   100003a6d:	mov    rax,QWORD PTR [rax+0x1f0]
   100003a74:	mov    edx,0x1
   100003a79:	mov    r9d,ebx
   100003a7c:	mov    rcx,QWORD PTR [rax+0x1f0]
   100003a83:	lea    r8d,[rdx+0x10]
   100003a87:	add    rcx,0xdc
   100003a8e:	mov    QWORD PTR [rsp+0x20],rcx
   100003a93:	lea    ecx,[rdx+0x6]
   100003a96:	call   QWORD PTR [rip+0xffffffffffffe0ac]        # 0x100001b48
   100003a9c:	add    rsp,0x30
   100003aa0:	pop    rbx
   100003aa1:	ret    
   100003aa2:	nop
   100003aa3:	nop
   100003aa4:	nop
   100003aa5:	nop
   100003aa6:	nop
   100003aa7:	nop
   100003aa8:	nop
   100003aa9:	nop
   100003aaa:	nop
   100003aab:	nop
   100003aac:	nop
   100003aad:	nop
   100003aae:	nop
   100003aaf:	nop
   100003ab0:	push   rbp
   100003ab2:	push   rdi
   100003ab3:	push   r14
   100003ab5:	mov    eax,0x1270
   100003aba:	call   0x100002630
   100003abf:	sub    rsp,rax
   100003ac2:	lea    rbp,[rsp+0x40]
   100003ac7:	mov    QWORD PTR [rbp+0x0],0xfffffffffffffffe
   100003acf:	mov    QWORD PTR [rbp+0x1260],rbx
   100003ad6:	mov    QWORD PTR [rbp+0x1268],rsi
   100003add:	mov    rax,QWORD PTR [rip+0x2570c]        # 0x1000291f0
   100003ae4:	xor    rax,rbp
   100003ae7:	mov    QWORD PTR [rbp+0x1220],rax
   100003aee:	mov    r14,rdx
   100003af1:	mov    esi,ecx
   100003af3:	mov    rax,QWORD PTR [rip+0xffffffffffffe4ee]        # 0x100001fe8
   100003afa:	mov    rcx,QWORD PTR [rax+0x8]
   100003afe:	lea    rax,[rcx*8+0x0]
   100003b06:	lea    r8,[rax+0xf]
   100003b0a:	cmp    r8,rax
   100003b0d:	ja     0x100003b19
   100003b0f:	movabs r8,0xffffffffffffff0
   100003b19:	and    r8,0xfffffffffffffff0
   100003b1d:	mov    rax,r8
   100003b20:	call   0x100002630
   100003b25:	sub    rsp,r8
   100003b28:	lea    r9,[rsp+0x40]
   100003b2d:	xor    edi,edi
   100003b2f:	mov    QWORD PTR [rsp+0x30],rdi
   100003b34:	mov    QWORD PTR [rsp+0x28],rdi
   100003b39:	mov    DWORD PTR [rsp+0x20],0x1
   100003b41:	mov    r8,rcx
   100003b44:	xor    edx,edx
   100003b46:	lea    rcx,[rbp+0x10]
   100003b4a:	call   QWORD PTR [rip+0xffffffffffffe030]        # 0x100001b80
   100003b50:	nop
   100003b51:	mov    rcx,QWORD PTR [rip+0x25568]        # 0x1000290c0
   100003b58:	mov    rax,QWORD PTR gs:0x30
   100003b61:	add    rax,rcx
   100003b64:	cmp    rcx,0x1480
   100003b6b:	jge    0x100003b73
   100003b6d:	call   QWORD PTR [rip+0xffffffffffffd5ad]        # 0x100001120
   100003b73:	test   rax,rax
   100003b76:	je     0x100003b84
   100003b78:	mov    rbx,QWORD PTR [rax+0xd8]
   100003b7f:	test   rbx,rbx
   100003b82:	jne    0x100003bb6
   100003b84:	call   QWORD PTR [rip+0xffffffffffffdfc6]        # 0x100001b50
   100003b8a:	mov    r11,QWORD PTR [rip+0x2552f]        # 0x1000290c0
   100003b91:	mov    rax,QWORD PTR gs:0x30
   100003b9a:	add    rax,r11
   100003b9d:	cmp    r11,0x1480
   100003ba4:	jge    0x100003baf
   100003ba6:	mov    ecx,r11d
   100003ba9:	call   QWORD PTR [rip+0xffffffffffffd571]        # 0x100001120
   100003baf:	mov    rbx,QWORD PTR [rax+0xd8]
   100003bb6:	or     DWORD PTR [rbx+0x220],0x20
   100003bbd:	mov    rax,QWORD PTR [rip+0xffffffffffffe434]        # 0x100001ff8
   100003bc4:	test   rax,rax
   100003bc7:	je     0x100003bcd
   100003bc9:	lea    rdi,[rax+0x40]
   100003bcd:	mov    eax,0x80
   100003bd2:	lea    r9d,[rax-0x78]
   100003bd6:	mov    WORD PTR [rsp+0x20],ax
   100003bdb:	mov    r8,rdi
   100003bde:	lea    edx,[rax-0x7c]
   100003be1:	lea    ecx,[rax-0x7f]
   100003be4:	call   QWORD PTR [rip+0xffffffffffffdfa6]        # 0x100001b90
   100003bea:	mov    QWORD PTR [rbx+0x390],rax
   100003bf1:	cmp    esi,0x1
   100003bf4:	jle    0x100003c23
   100003bf6:	lea    r8,[r14+0x8]
   100003bfa:	lea    edx,[rsi-0x1]
   100003bfd:	lea    rcx,[rip+0x25d5c]        # 0x100029960
   100003c04:	call   QWORD PTR [rip+0xffffffffffffe1e6]        # 0x100001df0
   100003c0a:	mov    ebx,eax
   100003c0c:	test   eax,eax
   100003c0e:	je     0x100003c23
   100003c10:	call   0x10000a240
   100003c15:	lea    rdx,[rip+0x25d44]        # 0x100029960
   100003c1c:	mov    ecx,ebx
   100003c1e:	call   0x10000f690
   100003c23:	call   0x10000b670
   100003c28:	nop
   100003c29:	lea    rcx,[rbp+0x10]
   100003c2d:	call   QWORD PTR [rip+0xffffffffffffdf55]        # 0x100001b88
   100003c33:	call   QWORD PTR [rip+0xffffffffffffd84f]        # 0x100001488
   100003c39:	mov    rcx,QWORD PTR [rbp+0x1220]
   100003c40:	xor    rcx,rbp
   100003c43:	call   0x100002610
   100003c48:	mov    rbx,QWORD PTR [rbp+0x1260]
   100003c4f:	mov    rsi,QWORD PTR [rbp+0x1268]
   100003c56:	lea    rsp,[rbp+0x1230]
   100003c5d:	pop    r14
   100003c5f:	pop    rdi
   100003c60:	pop    rbp
   100003c61:	ret    
   100003c62:	nop
   100003c63:	nop
   100003c64:	nop
   100003c65:	nop
   100003c66:	nop
   100003c67:	nop
   100003c68:	nop
   100003c69:	nop
   100003c6a:	nop
   100003c6b:	nop
   100003c6c:	nop
   100003c6d:	nop
   100003c6e:	nop
   100003c6f:	nop
   100003c70:	mov    QWORD PTR [rsp+0x8],rbx
   100003c75:	push   rdi
   100003c76:	mov    eax,0x1030
   100003c7b:	call   0x100002630
   100003c80:	sub    rsp,rax
   100003c83:	mov    rax,QWORD PTR [rip+0x25566]        # 0x1000291f0
   100003c8a:	xor    rax,rsp
   100003c8d:	mov    QWORD PTR [rsp+0x1020],rax
   100003c95:	mov    edi,ecx
   100003c97:	call   QWORD PTR [rip+0xffffffffffffd493]        # 0x100001130
   100003c9d:	mov    ebx,eax
   100003c9f:	call   0x10000a240
   100003ca4:	lea    rdx,[rsp+0x20]
   100003ca9:	xor    r9d,r9d
   100003cac:	xor    r8d,r8d
   100003caf:	mov    ecx,ebx
   100003cb1:	call   QWORD PTR [rip+0xffffffffffffdee1]        # 0x100001b98
   100003cb7:	mov    ecx,edi
   100003cb9:	mov    rdx,rax
   100003cbc:	call   0x1000182d0
   100003cc1:	mov    rcx,QWORD PTR [rsp+0x1020]
   100003cc9:	xor    rcx,rsp
   100003ccc:	call   0x100002610
   100003cd1:	mov    rbx,QWORD PTR [rsp+0x1040]
   100003cd9:	add    rsp,0x1030
   100003ce0:	pop    rdi
   100003ce1:	ret    
   100003ce2:	nop
   100003ce3:	nop
   100003ce4:	nop
   100003ce5:	nop
   100003ce6:	nop
   100003ce7:	nop
   100003ce8:	nop
   100003ce9:	nop
   100003cea:	nop
   100003ceb:	nop
   100003cec:	nop
   100003ced:	nop
   100003cee:	nop
   100003cef:	nop
   100003cf0:	push   rbp
   100003cf2:	push   rdi
   100003cf3:	push   r14
   100003cf5:	mov    eax,0x14c0
   100003cfa:	call   0x100002630
   100003cff:	sub    rsp,rax
   100003d02:	lea    rbp,[rsp+0x40]
   100003d07:	mov    QWORD PTR [rbp+0x40],0xfffffffffffffffe
   100003d0f:	mov    QWORD PTR [rbp+0x14b0],rbx
   100003d16:	mov    QWORD PTR [rbp+0x14b8],rsi
   100003d1d:	mov    rax,QWORD PTR [rip+0x254cc]        # 0x1000291f0
   100003d24:	xor    rax,rbp
   100003d27:	mov    QWORD PTR [rbp+0x1470],rax
   100003d2e:	mov    rsi,rdx
   100003d31:	mov    edi,ecx
   100003d33:	xor    r14d,r14d
   100003d36:	mov    QWORD PTR [rbp+0x48],r14
   100003d3a:	xor    eax,eax
   100003d3c:	mov    DWORD PTR [rbp+0x50],eax
   100003d3f:	lea    rcx,[rbp+0x48]
   100003d43:	call   QWORD PTR [rip+0xffffffffffffd777]        # 0x1000014c0
   100003d49:	lea    rcx,[rip+0x25c00]        # 0x100029950
   100003d50:	call   QWORD PTR [rip+0xffffffffffffe012]        # 0x100001d68
   100003d56:	lea    r11,[rip+0x25d03]        # 0x100029a60
   100003d5d:	mov    rax,QWORD PTR [rip+0xffffffffffffddbc]        # 0x100001b20
   100003d64:	mov    QWORD PTR [rax],r11
   100003d67:	call   QWORD PTR [rip+0xffffffffffffdc03]        # 0x100001970
   100003d6d:	lea    r11,[rip+0x304]        # 0x100004078
   100003d74:	mov    edx,0x105
   100003d79:	mov    rcx,QWORD PTR [rip+0x34b90]        # 0x100038910
   100003d80:	add    rcx,0x7fc0
   100003d87:	mov    ebx,r14d
   100003d8a:	nop    WORD PTR [rax+rax*1+0x0]
   100003d90:	lea    rax,[rdx+0x7ffffef9]
   100003d97:	test   rax,rax
   100003d9a:	je     0x100003db7
   100003d9c:	movzx  eax,WORD PTR [r11]
   100003da0:	test   ax,ax
   100003da3:	je     0x100003db7
   100003da5:	mov    WORD PTR [rcx],ax
   100003da8:	add    rcx,0x2
   100003dac:	add    r11,0x2
   100003db0:	dec    rdx
   100003db3:	jne    0x100003d90
   100003db5:	jmp    0x100003dbc
   100003db7:	test   rdx,rdx
   100003dba:	jne    0x100003dc5
   100003dbc:	sub    rcx,0x2
   100003dc0:	mov    ebx,0x8007007a
   100003dc5:	mov    WORD PTR [rcx],r14w
   100003dc9:	test   ebx,ebx
   100003dcb:	jns    0x100003e19
   100003dcd:	mov    ecx,ebx
   100003dcf:	call   QWORD PTR [rip+0xffffffffffffd8e3]        # 0x1000016b8
   100003dd5:	call   QWORD PTR [rip+0xffffffffffffde5d]        # 0x100001c38
   100003ddb:	mov    r9,rax
   100003dde:	mov    DWORD PTR [rsp+0x28],ebx
   100003de2:	lea    rbx,[rip+0xfffffffffffff56f]        # 0x100003358
   100003de9:	mov    QWORD PTR [rsp+0x20],rbx
   100003dee:	lea    r8,[rip+0xfffffffffffff9cb]        # 0x1000037c0
   100003df5:	mov    edx,0x200
   100003dfa:	lea    rcx,[rbp+0x1270]
   100003e01:	call   0x10000eb40
   100003e06:	test   eax,eax
   100003e08:	mov    rcx,rbx
   100003e0b:	js     0x100003e14
   100003e0d:	lea    rcx,[rbp+0x1270]
   100003e14:	call   0x100015fc0
   100003e19:	call   QWORD PTR [rip+0xffffffffffffdb49]        # 0x100001968
   100003e1f:	mov    rbx,rax
   100003e22:	call   QWORD PTR [rip+0xffffffffffffd8e0]        # 0x100001708
   100003e28:	mov    QWORD PTR [rbp+0x0],rax
   100003e2c:	mov    QWORD PTR [rbp+0x8],r14
   100003e30:	mov    QWORD PTR [rbp+0x10],rbx
   100003e34:	movsd  xmm0,QWORD PTR [rbp+0x0]
   100003e39:	movsd  QWORD PTR [rbp+0x20],xmm0
   100003e3e:	movsd  xmm1,QWORD PTR [rbp+0x8]
   100003e43:	movsd  QWORD PTR [rbp+0x28],xmm1
   100003e48:	movsd  xmm0,QWORD PTR [rbp+0x10]
   100003e4d:	movsd  QWORD PTR [rbp+0x30],xmm0
   100003e52:	mov    edx,0x10
   100003e57:	lea    rcx,[rbp+0x20]
   100003e5b:	call   QWORD PTR [rip+0xffffffffffffdd3f]        # 0x100001ba0
   100003e61:	mov    r11,QWORD PTR [rip+0xffffffffffffe180]        # 0x100001fe8
   100003e68:	mov    r8,QWORD PTR [r11+0x8]
   100003e6c:	lea    rax,[r8*8+0x0]
   100003e74:	lea    rcx,[rax+0xf]
   100003e78:	cmp    rcx,rax
   100003e7b:	ja     0x100003e87
   100003e7d:	movabs rcx,0xffffffffffffff0
   100003e87:	and    rcx,0xfffffffffffffff0
   100003e8b:	mov    rax,rcx
   100003e8e:	call   0x100002630
   100003e93:	sub    rsp,rcx
   100003e96:	lea    r9,[rsp+0x40]
   100003e9b:	mov    QWORD PTR [rsp+0x30],r14
   100003ea0:	mov    QWORD PTR [rsp+0x28],r14
   100003ea5:	mov    DWORD PTR [rsp+0x20],0x1
   100003ead:	xor    edx,edx
   100003eaf:	lea    rcx,[rbp+0x60]
   100003eb3:	call   QWORD PTR [rip+0xffffffffffffdcc7]        # 0x100001b80
   100003eb9:	nop
   100003eba:	mov    rcx,QWORD PTR [rip+0x251ff]        # 0x1000290c0
   100003ec1:	mov    rax,QWORD PTR gs:0x30
   100003eca:	add    rax,rcx
   100003ecd:	cmp    rcx,0x1480
   100003ed4:	jge    0x100003edc
   100003ed6:	call   QWORD PTR [rip+0xffffffffffffd244]        # 0x100001120
   100003edc:	test   rax,rax
   100003edf:	je     0x100003eed
   100003ee1:	mov    rbx,QWORD PTR [rax+0xd8]
   100003ee8:	test   rbx,rbx
   100003eeb:	jne    0x100003f1f
   100003eed:	call   QWORD PTR [rip+0xffffffffffffdc5d]        # 0x100001b50
   100003ef3:	mov    r11,QWORD PTR [rip+0x251c6]        # 0x1000290c0
   100003efa:	mov    rax,QWORD PTR gs:0x30
   100003f03:	add    rax,r11
   100003f06:	cmp    r11,0x1480
   100003f0d:	jge    0x100003f18
   100003f0f:	mov    ecx,r11d
   100003f12:	call   QWORD PTR [rip+0xffffffffffffd208]        # 0x100001120
   100003f18:	mov    rbx,QWORD PTR [rax+0xd8]
   100003f1f:	or     DWORD PTR [rbx+0x220],0x20
   100003f26:	mov    rax,QWORD PTR [rip+0xffffffffffffe0cb]        # 0x100001ff8
   100003f2d:	test   rax,rax
   100003f30:	lea    r8,[rax+0x40]
   100003f34:	jne    0x100003f39
   100003f36:	mov    r8,r14
   100003f39:	mov    eax,0x80
   100003f3e:	lea    r9d,[rax-0x78]
   100003f42:	mov    WORD PTR [rsp+0x20],ax
   100003f47:	lea    edx,[rax-0x7c]
   100003f4a:	lea    ecx,[rax-0x7f]
   100003f4d:	call   QWORD PTR [rip+0xffffffffffffdc3d]        # 0x100001b90
   100003f53:	mov    QWORD PTR [rbx+0x390],rax
   100003f5a:	mov    edx,0x1
   100003f5f:	lea    rcx,[rip+0x8fa]        # 0x100004860
   100003f66:	call   QWORD PTR [rip+0xffffffffffffd1cc]        # 0x100001138
   100003f6c:	cmp    eax,0x1
   100003f6f:	je     0x100003f91
   100003f71:	call   QWORD PTR [rip+0xffffffffffffd1b9]        # 0x100001130
   100003f77:	test   eax,eax
   100003f79:	jle    0x100003f83
   100003f7b:	movzx  eax,ax
   100003f7e:	or     eax,0x80070000
   100003f83:	lea    rdx,[rip+0x106]        # 0x100004090
   100003f8a:	mov    ecx,eax
   100003f8c:	call   0x100015f20
   100003f91:	mov    rdx,rsi
   100003f94:	mov    ecx,edi
   100003f96:	call   0x10000f7c0
   100003f9b:	mov    edx,0x63
   100003fa0:	lea    rcx,[rip+0x259b9]        # 0x100029960
   100003fa7:	call   QWORD PTR [rip+0xffffffffffffde4b]        # 0x100001df8
   100003fad:	mov    ecx,r14d
   100003fb0:	test   rax,rax
   100003fb3:	sete   cl
   100003fb6:	mov    rax,QWORD PTR [rip+0x34953]        # 0x100038910
   100003fbd:	mov    DWORD PTR [rax+0x7fa8],ecx
   100003fc3:	test   ecx,ecx
   100003fc5:	je     0x100004032
   100003fc7:	lea    rax,[rip+0xe2]        # 0x1000040b0
   100003fce:	mov    QWORD PTR [rbp+0x0],rax
   100003fd2:	lea    rax,[rip+0xfffffffffffffad7]        # 0x100003ab0
   100003fd9:	mov    QWORD PTR [rbp+0x8],rax
   100003fdd:	mov    QWORD PTR [rbp+0x10],r14
   100003fe1:	mov    QWORD PTR [rbp+0x18],r14
   100003fe5:	lea    rcx,[rbp+0x0]
   100003fe9:	call   QWORD PTR [rip+0xffffffffffffd011]        # 0x100001000
   100003fef:	test   eax,eax
   100003ff1:	jne    0x10000401c
   100003ff3:	call   QWORD PTR [rip+0xffffffffffffd137]        # 0x100001130
   100003ff9:	cmp    eax,0x427
   100003ffe:	je     0x100004024
   100004000:	cmp    eax,0x1
   100004003:	je     0x100004024
   100004005:	mov    ecx,0x42f4
   10000400a:	call   0x100003c70
   10000400f:	nop
   100004010:	lea    rcx,[rbp+0x60]
   100004014:	call   QWORD PTR [rip+0xffffffffffffdb6e]        # 0x100001b88
   10000401a:	jmp    0x100004048
   10000401c:	xor    ecx,ecx
   10000401e:	call   QWORD PTR [rip+0xffffffffffffdb84]        # 0x100001ba8
   100004024:	mov    rax,QWORD PTR [rip+0x348e5]        # 0x100038910
   10000402b:	mov    DWORD PTR [rax+0x7fa8],r14d
   100004032:	call   0x10000b670
   100004037:	nop
   100004038:	lea    rcx,[rbp+0x60]
   10000403c:	call   QWORD PTR [rip+0xffffffffffffdb46]        # 0x100001b88
   100004042:	call   QWORD PTR [rip+0xffffffffffffd440]        # 0x100001488
   100004048:	xor    eax,eax
   10000404a:	mov    rcx,QWORD PTR [rbp+0x1470]
   100004051:	xor    rcx,rbp
   100004054:	call   0x100002610
   100004059:	mov    rbx,QWORD PTR [rbp+0x14b0]
   100004060:	mov    rsi,QWORD PTR [rbp+0x14b8]
   100004067:	lea    rsp,[rbp+0x1480]
   10000406e:	pop    r14
   100004070:	pop    rdi
   100004071:	pop    rbp
   100004072:	ret    
   100004073:	nop
   100004074:	nop
   100004075:	nop
   100004076:	nop
   100004077:	nop
   100004078:	rex.WRB add BYTE PTR [r11+0x0],r10b
   10000407c:	push   rbx
   10000407d:	add    BYTE PTR [rcx+0x0],dl
   100004080:	rex.WR add BYTE PTR [rbx+0x0],r10b
   100004084:	add    BYTE PTR [r10+0x0],r10b
   100004088:	push   rsi
   100004089:	add    BYTE PTR [rbp+0x0],al
   10000408c:	push   rdx
   10000408d:	add    BYTE PTR [rax],al
   10000408f:	add    BYTE PTR [rbx+0x65],dl
   100004092:	je     0x1000040d7
   100004094:	outs   dx,DWORD PTR ds:[rsi]
   100004095:	outs   dx,BYTE PTR ds:[rsi]
   100004096:	jae    0x100004107
   100004098:	ins    BYTE PTR es:[rdi],dx
   100004099:	gs rex.XB je 0x10000410f
   10000409d:	ins    BYTE PTR es:[rdi],dx
   10000409e:	rex.W (bad) 
   1000040a0:	outs   dx,BYTE PTR ds:[rsi]
   1000040a1:	fs ins BYTE PTR es:[rdi],dx
   1000040a3:	gs jb  0x1000040c6
   1000040a6:	data16 (bad) 
   1000040a8:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x90900065
   1000040b0:	jae    0x1000040b2
   1000040b2:	jno    0x1000040b4
   1000040b4:	ins    BYTE PTR es:[rdi],dx
   1000040b5:	add    BYTE PTR [rbx+0x0],dh
   1000040b8:	add    BYTE PTR gs:[rdx+0x0],dh
   1000040bc:	jbe    0x1000040be
   1000040be:	add    BYTE PTR gs:[rdx+0x0],dh
   1000040c2:	add    BYTE PTR [rax],al
   1000040c4:	nop
   1000040c5:	nop
   1000040c6:	nop
   1000040c7:	nop
   1000040c8:	nop
   1000040c9:	nop
   1000040ca:	nop
   1000040cb:	nop
   1000040cc:	nop
   1000040cd:	nop
   1000040ce:	nop
   1000040cf:	nop
   1000040d0:	mov    eax,0x1058
   1000040d5:	call   0x100002630
   1000040da:	sub    rsp,rax
   1000040dd:	mov    rax,QWORD PTR [rip+0x2510c]        # 0x1000291f0
   1000040e4:	xor    rax,rsp
   1000040e7:	mov    QWORD PTR [rsp+0x1040],rax
   1000040ef:	mov    rax,QWORD PTR [rip+0x3481a]        # 0x100038910
   1000040f6:	mov    QWORD PTR [rsp+0x1050],rdi
   1000040fe:	mov    edi,0x1
   100004103:	cmp    DWORD PTR [rax+0x7fa8],0x0
   10000410a:	je     0x100004322
   100004110:	lea    rcx,[rip+0x28009]        # 0x10002c120
   100004117:	mov    QWORD PTR [rsp+0x1060],rbx
   10000411f:	call   QWORD PTR [rip+0xffffffffffffd01b]        # 0x100001140
   100004125:	lea    rcx,[rip+0x27ff4]        # 0x10002c120
   10000412c:	call   QWORD PTR [rip+0xffffffffffffd016]        # 0x100001148
   100004132:	lea    rdx,[rip+0x7f7]        # 0x100004930
   100004139:	lea    rcx,[rip+0x230]        # 0x100004370
   100004140:	call   QWORD PTR [rip+0xffffffffffffcec2]        # 0x100001008
   100004146:	mov    QWORD PTR [rip+0x27ffb],rax        # 0x10002c148
   10000414d:	test   rax,rax
   100004150:	je     0x100004168
   100004152:	lea    edx,[rdi+0x3]
   100004155:	xor    r9d,r9d
   100004158:	mov    r8d,edi
   10000415b:	mov    rcx,rax
   10000415e:	call   QWORD PTR [rip+0xffffffffffffceac]        # 0x100001010
   100004164:	test   eax,eax
   100004166:	jne    0x1000041a1
   100004168:	call   QWORD PTR [rip+0xffffffffffffcfc2]        # 0x100001130
   10000416e:	lea    rdx,[rsp+0x40]
   100004173:	xor    r9d,r9d
   100004176:	mov    ecx,eax
   100004178:	xor    r8d,r8d
   10000417b:	call   QWORD PTR [rip+0xffffffffffffda17]        # 0x100001b98
   100004181:	mov    ecx,0x42f5
   100004186:	mov    rdx,rax
   100004189:	call   0x1000182d0
   10000418e:	mov    edx,0x42f5
   100004193:	mov    r8d,0x42a
   100004199:	mov    ecx,edi
   10000419b:	call   QWORD PTR [rip+0xffffffffffffda0f]        # 0x100001bb0
   1000041a1:	mov    rcx,QWORD PTR [rip+0x27fa0]        # 0x10002c148
   1000041a8:	lea    rdx,[rip+0x27fa1]        # 0x10002c150
   1000041af:	xor    ebx,ebx
   1000041b1:	mov    DWORD PTR [rip+0x27f95],0x10        # 0x10002c150
   1000041bb:	mov    DWORD PTR [rip+0x27f8f],0x2        # 0x10002c154
   1000041c5:	mov    QWORD PTR [rip+0x27f88],0x7        # 0x10002c158
   1000041d0:	mov    DWORD PTR [rip+0x27f8a],ebx        # 0x10002c160
   1000041d6:	mov    DWORD PTR [rip+0x27f88],edi        # 0x10002c164
   1000041dc:	mov    DWORD PTR [rip+0x27f82],0x4e20        # 0x10002c168
   1000041e6:	call   QWORD PTR [rip+0xffffffffffffce2c]        # 0x100001018
   1000041ec:	test   eax,eax
   1000041ee:	jne    0x100004230
   1000041f0:	call   QWORD PTR [rip+0xffffffffffffcf3a]        # 0x100001130
   1000041f6:	lea    rdx,[rsp+0x40]
   1000041fb:	xor    r9d,r9d
   1000041fe:	mov    ecx,eax
   100004200:	xor    r8d,r8d
   100004203:	call   QWORD PTR [rip+0xffffffffffffd98f]        # 0x100001b98
   100004209:	lea    rdx,[rip+0x170]        # 0x100004380
   100004210:	mov    ecx,0x42f7
   100004215:	mov    r8,rax
   100004218:	call   0x1000182d0
   10000421d:	mov    edx,0x42f7
   100004222:	mov    r8d,0x42a
   100004228:	mov    ecx,edi
   10000422a:	call   QWORD PTR [rip+0xffffffffffffd980]        # 0x100001bb0
   100004230:	xor    r9d,r9d
   100004233:	xor    r8d,r8d
   100004236:	mov    edx,edi
   100004238:	xor    ecx,ecx
   10000423a:	call   QWORD PTR [rip+0xffffffffffffcf10]        # 0x100001150
   100004240:	mov    QWORD PTR [rip+0x27ed1],rax        # 0x10002c118
   100004247:	test   rax,rax
   10000424a:	jne    0x10000428c
   10000424c:	call   QWORD PTR [rip+0xffffffffffffcede]        # 0x100001130
   100004252:	lea    rdx,[rsp+0x40]
   100004257:	xor    r9d,r9d
   10000425a:	mov    ecx,eax
   10000425c:	xor    r8d,r8d
   10000425f:	call   QWORD PTR [rip+0xffffffffffffd933]        # 0x100001b98
   100004265:	lea    rdx,[rip+0xfffffffffffff114]        # 0x100003380
   10000426c:	mov    ecx,0x42f7
   100004271:	mov    r8,rax
   100004274:	call   0x1000182d0
   100004279:	mov    edx,0x42f7
   10000427e:	mov    r8d,0x42a
   100004284:	mov    ecx,edi
   100004286:	call   QWORD PTR [rip+0xffffffffffffd924]        # 0x100001bb0
   10000428c:	lea    rcx,[rip+0x27e8d]        # 0x10002c120
   100004293:	call   QWORD PTR [rip+0xffffffffffffcebf]        # 0x100001158
   100004299:	lea    r11,[rsp+0x30]
   10000429e:	lea    r8,[rip+0xc1b]        # 0x100004ec0
   1000042a5:	mov    QWORD PTR [rsp+0x28],r11
   1000042aa:	mov    r9d,0x2
   1000042b0:	xor    edx,edx
   1000042b2:	xor    ecx,ecx
   1000042b4:	mov    DWORD PTR [rsp+0x20],ebx
   1000042b8:	call   QWORD PTR [rip+0xffffffffffffd1c2]        # 0x100001480
   1000042be:	mov    rbx,rax
   1000042c1:	test   rax,rax
   1000042c4:	jne    0x1000042ea
   1000042c6:	lea    rdx,[rip+0xfffffffffffff0e3]        # 0x1000033b0
   1000042cd:	mov    ecx,0x42e0
   1000042d2:	call   0x1000182d0
   1000042d7:	mov    edx,0x42e0
   1000042dc:	mov    r8d,0x42a
   1000042e2:	mov    ecx,edi
   1000042e4:	call   QWORD PTR [rip+0xffffffffffffd8c6]        # 0x100001bb0
   1000042ea:	mov    edx,0x2
   1000042ef:	mov    rcx,rbx
   1000042f2:	call   QWORD PTR [rip+0xffffffffffffce68]        # 0x100001160
   1000042f8:	mov    rdx,rdi
   1000042fb:	mov    rcx,rbx
   1000042fe:	call   QWORD PTR [rip+0xffffffffffffce64]        # 0x100001168
   100004304:	mov    rcx,rbx
   100004307:	call   QWORD PTR [rip+0xffffffffffffce1b]        # 0x100001128
   10000430d:	mov    rcx,QWORD PTR [rip+0xffffffffffffd8a4]        # 0x100001bb8
   100004314:	call   QWORD PTR [rip+0xffffffffffffd3de]        # 0x1000016f8
   10000431a:	mov    rbx,QWORD PTR [rsp+0x1060]
   100004322:	mov    rax,QWORD PTR [rip+0x24d9f]        # 0x1000290c8
   100004329:	mov    ecx,0x5
   10000432e:	movzx  edx,BYTE PTR [rax+0x1c3]
   100004335:	test   dl,0x10
   100004338:	cmovne ecx,edi
   10000433b:	mov    rdi,QWORD PTR [rsp+0x1050]
   100004343:	test   dl,0x8
   100004346:	je     0x10000434b
   100004348:	or     ecx,0x4
   10000434b:	call   QWORD PTR [rip+0xffffffffffffce1f]        # 0x100001170
   100004351:	mov    rcx,QWORD PTR [rsp+0x1040]
   100004359:	xor    rcx,rsp
   10000435c:	call   0x100002610
   100004361:	add    rsp,0x1058
   100004368:	ret    
   100004369:	nop
   10000436a:	nop
   10000436b:	nop
   10000436c:	nop
   10000436d:	nop
   10000436e:	nop
   10000436f:	nop
   100004370:	jae    0x1000043e3
   100004372:	ins    BYTE PTR es:[rdi],dx
   100004373:	jae    0x1000043da
   100004375:	jb     0x1000043ed
   100004377:	gs jb  0x10000437a
   10000437a:	nop
   10000437b:	nop
   10000437c:	nop
   10000437d:	nop
   10000437e:	nop
   10000437f:	nop
   100004380:	imul   eax,DWORD PTR [rax],0x69006e
   100004386:	je     0x100004388
   100004388:	jae    0x10000438a
   10000438a:	imul   eax,DWORD PTR [rax],0x6e0067
   100004390:	(bad)  
   100004391:	add    BYTE PTR [rax+rax*1+0x0],ch
   100004395:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000439b:	nop
   10000439c:	nop
   10000439d:	nop
   10000439e:	nop
   10000439f:	nop
   1000043a0:	mov    QWORD PTR [rsp+0x10],rbx
   1000043a5:	push   rdi
   1000043a6:	sub    rsp,0x30
   1000043aa:	cmp    ecx,0x1
   1000043ad:	jbe    0x10000444c
   1000043b3:	cmp    ecx,0x2
   1000043b6:	je     0x10000443f
   1000043bc:	cmp    ecx,0x5
   1000043bf:	je     0x100004401
   1000043c1:	cmp    ecx,0x6
   1000043c4:	jne    0x1000043fa
   1000043c6:	cmp    DWORD PTR [rip+0x27d33],0x0        # 0x10002c100
   1000043cd:	jne    0x100004401
   1000043cf:	cmp    QWORD PTR [rip+0x27d31],0x0        # 0x10002c108
   1000043d7:	je     0x100004401
   1000043d9:	mov    DWORD PTR [rip+0x27d1d],0x1        # 0x10002c100
   1000043e3:	mov    ecx,0x42fb
   1000043e8:	call   0x1000182d0
   1000043ed:	mov    ecx,0x1
   1000043f2:	call   QWORD PTR [rip+0xffffffffffffd560]        # 0x100001958
   1000043f8:	jmp    0x100004401
   1000043fa:	xor    eax,eax
   1000043fc:	jmp    0x1000046ad
   100004401:	mov    rax,QWORD PTR [rip+0x34508]        # 0x100038910
   100004408:	cmp    DWORD PTR [rax+0x7fa8],0x0
   10000440f:	jne    0x1000046a8
   100004415:	mov    ecx,0x2
   10000441a:	call   QWORD PTR [rip+0xffffffffffffd7a0]        # 0x100001bc0
   100004420:	mov    rcx,QWORD PTR [rip+0x27ce1]        # 0x10002c108
   100004427:	test   rcx,rcx
   10000442a:	je     0x10000443f
   10000442c:	call   0x100006a50
   100004431:	or     ecx,0xffffffff
   100004434:	call   QWORD PTR [rip+0xffffffffffffcd46]        # 0x100001180
   10000443a:	jmp    0x1000046a8
   10000443f:	xor    ecx,ecx
   100004441:	call   QWORD PTR [rip+0xffffffffffffd761]        # 0x100001ba8
   100004447:	jmp    0x1000046a8
   10000444c:	cmp    QWORD PTR [rip+0x27cb4],0x0        # 0x10002c108
   100004454:	jne    0x100004468
   100004456:	lea    rcx,[rip+0x25b]        # 0x1000046b8
   10000445d:	call   QWORD PTR [rip+0xffffffffffffd015]        # 0x100001478
   100004463:	jmp    0x1000046a8
   100004468:	mov    rax,QWORD PTR [rip+0x344a1]        # 0x100038910
   10000446f:	cmp    DWORD PTR [rax+0x49c4],0x0
   100004476:	je     0x1000044ab
   100004478:	mov    rax,QWORD PTR [rip+0x24c49]        # 0x1000290c8
   10000447f:	movzx  ecx,BYTE PTR [rax+0x4b4]
   100004486:	shr    cl,0x6
   100004489:	test   cl,0x1
   10000448c:	jne    0x1000044ab
   10000448e:	lea    rcx,[rip+0x263]        # 0x1000046f8
   100004495:	call   QWORD PTR [rip+0xffffffffffffcfdd]        # 0x100001478
   10000449b:	mov    r11d,0x59
   1000044a1:	mov    WORD PTR [rsp+0x40],r11w
   1000044a7:	xor    ebx,ebx
   1000044a9:	jmp    0x100004502
   1000044ab:	call   QWORD PTR [rip+0xffffffffffffcfbf]        # 0x100001470
   1000044b1:	test   eax,eax
   1000044b3:	je     0x1000044bd
   1000044b5:	call   QWORD PTR [rip+0xffffffffffffcfad]        # 0x100001468
   1000044bb:	jmp    0x1000044ab
   1000044bd:	lea    rcx,[rip+0x25c]        # 0x100004720
   1000044c4:	call   QWORD PTR [rip+0xffffffffffffcfae]        # 0x100001478
   1000044ca:	nop
   1000044cb:	call   QWORD PTR [rip+0xffffffffffffcf8f]        # 0x100001460
   1000044d1:	mov    WORD PTR [rsp+0x40],ax
   1000044d6:	movzx  ecx,ax
   1000044d9:	cmp    ecx,0xffffffff
   1000044dc:	jne    0x1000044e7
   1000044de:	xor    ebx,ebx
   1000044e0:	mov    WORD PTR [rsp+0x40],bx
   1000044e5:	jmp    0x1000044f5
   1000044e7:	cmp    ax,0x20
   1000044eb:	je     0x1000044cb
   1000044ed:	cmp    ax,0x9
   1000044f1:	je     0x1000044cb
   1000044f3:	xor    ebx,ebx
   1000044f5:	lea    rcx,[rip+0x250]        # 0x10000474c
   1000044fc:	call   QWORD PTR [rip+0xffffffffffffcf76]        # 0x100001478
   100004502:	mov    DWORD PTR [rsp+0x28],0x1
   10000450a:	lea    rax,[rsp+0x40]
   10000450f:	mov    QWORD PTR [rsp+0x20],rax
   100004514:	mov    r9d,0x1
   10000451a:	lea    r8,[rsp+0x40]
   10000451f:	mov    edx,0x200
   100004524:	mov    ecx,0x800
   100004529:	call   QWORD PTR [rip+0xffffffffffffcc49]        # 0x100001178
   10000452f:	movzx  r11d,WORD PTR [rsp+0x40]
   100004535:	cmp    r11w,0x59
   10000453a:	je     0x100004659
   100004540:	cmp    r11w,0x44
   100004545:	jne    0x10000455f
   100004547:	lea    rcx,[rip+0x202]        # 0x100004750
   10000454e:	call   QWORD PTR [rip+0xffffffffffffcf24]        # 0x100001478
   100004554:	call   QWORD PTR [rip+0xffffffffffffd196]        # 0x1000016f0
   10000455a:	jmp    0x100004645
   10000455f:	cmp    r11w,0x53
   100004564:	jne    0x10000457e
   100004566:	lea    rcx,[rip+0x1e3]        # 0x100004750
   10000456d:	call   QWORD PTR [rip+0xffffffffffffcf05]        # 0x100001478
   100004573:	call   QWORD PTR [rip+0xffffffffffffd16f]        # 0x1000016e8
   100004579:	jmp    0x100004645
   10000457e:	cmp    r11w,0x54
   100004583:	jne    0x1000045a1
   100004585:	lea    rcx,[rip+0x204]        # 0x100004790
   10000458c:	call   QWORD PTR [rip+0xffffffffffffcee6]        # 0x100001478
   100004592:	xor    edx,edx
   100004594:	xor    ecx,ecx
   100004596:	call   QWORD PTR [rip+0xffffffffffffd144]        # 0x1000016e0
   10000459c:	jmp    0x100004645
   1000045a1:	cmp    r11w,0x4d
   1000045a6:	jne    0x1000045b7
   1000045a8:	xor    edx,edx
   1000045aa:	xor    ecx,ecx
   1000045ac:	call   QWORD PTR [rip+0xffffffffffffd126]        # 0x1000016d8
   1000045b2:	jmp    0x100004645
   1000045b7:	cmp    r11w,0x4c
   1000045bc:	jne    0x100004645
   1000045c2:	lea    rcx,[rip+0x1f7]        # 0x1000047c0
   1000045c9:	call   QWORD PTR [rip+0xffffffffffffcea9]        # 0x100001478
   1000045cf:	mov    rdi,rbx
   1000045d2:	mov    ecx,0x30
   1000045d7:	mov    WORD PTR [rsp+0x40],cx
   1000045dc:	lea    eax,[rcx-0x30]
   1000045df:	cmp    ax,0x9
   1000045e3:	ja     0x1000045ed
   1000045e5:	movzx  eax,cx
   1000045e8:	sub    eax,0x30
   1000045eb:	jmp    0x10000460d
   1000045ed:	lea    eax,[rcx-0x61]
   1000045f0:	cmp    ax,0x5
   1000045f4:	ja     0x1000045fe
   1000045f6:	movzx  eax,cx
   1000045f9:	sub    eax,0x57
   1000045fc:	jmp    0x10000460d
   1000045fe:	lea    eax,[rcx-0x41]
   100004601:	cmp    ax,0x5
   100004605:	ja     0x100004627
   100004607:	movzx  eax,cx
   10000460a:	sub    eax,0x37
   10000460d:	movsxd rcx,eax
   100004610:	shl    rdi,0x4
   100004614:	add    rdi,rcx
   100004617:	call   QWORD PTR [rip+0xffffffffffffce43]        # 0x100001460
   10000461d:	movzx  ecx,ax
   100004620:	mov    WORD PTR [rsp+0x40],ax
   100004625:	jmp    0x1000045dc
   100004627:	lea    rcx,[rip+0x11e]        # 0x10000474c
   10000462e:	call   QWORD PTR [rip+0xffffffffffffce44]        # 0x100001478
   100004634:	test   rdi,rdi
   100004637:	setne  bl
   10000463a:	mov    rdx,rdi
   10000463d:	mov    ecx,ebx
   10000463f:	call   QWORD PTR [rip+0xffffffffffffd08b]        # 0x1000016d0
   100004645:	lea    rcx,[rip+0x19c]        # 0x1000047e8
   10000464c:	call   QWORD PTR [rip+0xffffffffffffce26]        # 0x100001478
   100004652:	mov    eax,0x1
   100004657:	jmp    0x1000046ad
   100004659:	mov    rax,QWORD PTR [rip+0x24a68]        # 0x1000290c8
   100004660:	movzx  ecx,BYTE PTR [rax+0x4bc]
   100004667:	shr    cl,0x3
   10000466a:	test   cl,0x1
   10000466d:	mov    ecx,0x2
   100004672:	jne    0x100004679
   100004674:	mov    ecx,0x1
   100004679:	call   QWORD PTR [rip+0xffffffffffffd541]        # 0x100001bc0
   10000467f:	mov    rcx,QWORD PTR [rip+0x27a82]        # 0x10002c108
   100004686:	call   0x100006a50
   10000468b:	jmp    0x1000046a8
   10000468d:	cmp    eax,0xc00000fd
   100004692:	jne    0x10000469a
   100004694:	call   QWORD PTR [rip+0xffffffffffffcdbe]        # 0x100001458
   10000469a:	lea    rcx,[rip+0x177]        # 0x100004818
   1000046a1:	call   QWORD PTR [rip+0xffffffffffffcdd1]        # 0x100001478
   1000046a7:	nop
   1000046a8:	mov    eax,0x1
   1000046ad:	mov    rbx,QWORD PTR [rsp+0x48]
   1000046b2:	add    rsp,0x30
   1000046b6:	pop    rdi
   1000046b7:	ret    
   1000046b8:	rex.XB outs dx,BYTE PTR ds:[rsi]
   1000046ba:	je     0x10000472e
   1000046bc:	ins    BYTE PTR es:[rdi],dx
   1000046bd:	sub    eax,0x67692043
   1000046c2:	outs   dx,BYTE PTR ds:[rsi]
   1000046c3:	outs   dx,DWORD PTR ds:[rsi]
   1000046c4:	jb     0x10000472b
   1000046c6:	and    BYTE PTR fs:[rdx+0x65],ah
   1000046ca:	movsxd esp,DWORD PTR [rcx+0x75]
   1000046cd:	jae    0x100004734
   1000046cf:	and    BYTE PTR [rbx+0x74],dh
   1000046d2:	(bad)  
   1000046d3:	jb     0x100004749
   1000046d5:	jne    0x100004747
   1000046d7:	and    BYTE PTR [rax+0x61],ch
   1000046da:	jae    0x1000046fc
   1000046dc:	outs   dx,BYTE PTR ds:[rsi]
   1000046dd:	outs   dx,DWORD PTR ds:[rsi]
   1000046de:	je     0x100004700
   1000046e0:	jns    0x100004747
   1000046e2:	je     0x100004704
   1000046e4:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1000046e7:	jo     0x100004755
   1000046e9:	gs je  0x100004751
   1000046ec:	fs cs or eax,0x9090000a
   1000046f3:	nop
   1000046f4:	nop
   1000046f5:	nop
   1000046f6:	nop
   1000046f7:	nop
   1000046f8:	push   rbx
   1000046f9:	push   0x69747475
   1000046fe:	outs   dx,BYTE PTR ds:[rsi]
   1000046ff:	and    BYTE PTR [edi+ebp*2+0x77],ah
   100004704:	outs   dx,BYTE PTR ds:[rsi]
   100004705:	and    BYTE PTR [rbx+0x6c],ah
   100004708:	outs   dx,DWORD PTR ds:[rsi]
   100004709:	jne    0x10000476f
   10000470b:	fs (bad) 
   10000470d:	and    BYTE PTR [rbx+0x51],dl
   100004710:	rex.WR and BYTE PTR [rbx+0x65],r10b
   100004714:	jb     0x10000478c
   100004716:	gs jb  0x100004719
   100004719:	nop
   10000471a:	nop
   10000471b:	nop
   10000471c:	nop
   10000471d:	nop
   10000471e:	nop
   10000471f:	nop
   100004720:	rex.R outs dx,DWORD PTR ds:[rsi]
   100004722:	and    BYTE PTR [rcx+0x6f],bh
   100004725:	jne    0x100004747
   100004727:	ja     0x100004792
   100004729:	jae    0x100004793
   10000472b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   10000472f:	jae    0x100004799
   100004731:	jne    0x1000047a7
   100004733:	outs   dx,DWORD PTR fs:[rsi]
   100004735:	ja     0x1000047a5
   100004737:	and    BYTE PTR [rbx+0x51],dl
   10000473a:	rex.WR and BYTE PTR [rbx+0x65],r10b
   10000473e:	jb     0x1000047b6
   100004740:	gs jb  0x100004763
   100004743:	sub    BYTE PTR [rcx+0x2f],bl
   100004746:	rex.WRX sub QWORD PTR [rdi],r15
   100004749:	and    BYTE PTR [rax],al
   10000474b:	nop
   10000474c:	or     eax,0x4390000a
   100004751:	outs   dx,DWORD PTR ds:[rsi]
   100004752:	outs   dx,BYTE PTR ds:[rsi]
   100004753:	jae    0x1000047c4
   100004755:	ins    BYTE PTR es:[rdi],dx
   100004756:	and    BYTE PTR gs:[rdx+0x65],dh
   10000475a:	jno    0x1000047d1
   10000475c:	gs jae 0x1000047d3
   10000475f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   100004763:	fs jne 0x1000047d3
   100004766:	jo     0x100004788
   100004768:	(bad)  
   100004769:	ins    BYTE PTR es:[rdi],dx
   10000476a:	ins    BYTE PTR es:[rdi],dx
   10000476b:	and    BYTE PTR [rcx+0x63],ah
   10000476e:	je     0x1000047d9
   100004770:	jbe    0x1000047d7
   100004772:	and    BYTE PTR [rbx+0x65],dh
   100004775:	jb     0x1000047ed
   100004777:	gs jb  0x10000479a
   10000477a:	jae    0x1000047e1
   10000477c:	jae    0x1000047f1
   10000477e:	imul   ebp,DWORD PTR [rdi+0x6e],0x72687420
   100004785:	gs (bad) 
   100004787:	fs jae 0x1000047b8
   10000478a:	or     eax,0x9090000a
   10000478f:	nop
   100004790:	rex.XB outs dx,DWORD PTR ds:[rsi]
   100004792:	outs   dx,BYTE PTR ds:[rsi]
   100004793:	jae    0x100004804
   100004795:	ins    BYTE PTR es:[rdi],dx
   100004796:	and    BYTE PTR gs:[rdx+0x65],dh
   10000479a:	jno    0x100004811
   10000479c:	gs jae 0x100004813
   10000479f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1000047a3:	fs jne 0x100004813
   1000047a6:	jo     0x1000047c8
   1000047a8:	(bad)  
   1000047a9:	ins    BYTE PTR es:[rdi],dx
   1000047aa:	ins    BYTE PTR es:[rdi],dx
   1000047ab:	and    BYTE PTR [rbx+0x65],dh
   1000047ae:	jb     0x100004826
   1000047b0:	gs jb  0x1000047d3
   1000047b3:	je     0x10000481d
   1000047b5:	jb     0x10000481c
   1000047b7:	(bad)  
   1000047b8:	fs jae 0x1000047e9
   1000047bb:	or     eax,0x9090000a
   1000047c0:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1000047c2:	je     0x100004829
   1000047c4:	jb     0x1000047e6
   1000047c6:	rex.WRB
   1000047c7:	gs ins DWORD PTR es:[rdi],dx
   1000047c9:	outs   dx,DWORD PTR ds:[rsi]
   1000047ca:	jb     0x100004845
   1000047cc:	and    BYTE PTR [rdi+0x62],cl
   1000047cf:	push   0x65
   1000047d1:	movsxd esi,DWORD PTR [rax+riz*1+0x49]
   1000047d5:	and    BYTE PTR [rax],r13b
   1000047d8:	xor    BYTE PTR [rip+0x296c6c61],bh        # 0x1296cb43f
   1000047de:	cmp    ah,BYTE PTR [rax]
   1000047e0:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000047e6:	nop
   1000047e7:	nop
   1000047e8:	rex.XB outs dx,BYTE PTR ds:[rsi]
   1000047ea:	je     0x10000485e
   1000047ec:	ins    BYTE PTR es:[rdi],dx
   1000047ed:	sub    eax,0x69642043
   1000047f2:	jae    0x100004861
   1000047f4:	imul   esi,DWORD PTR [rbx+0x73],0x202c6465
   1000047fb:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1000047fe:	je     0x100004869
   100004800:	outs   dx,BYTE PTR ds:[rsi]
   100004801:	jne    0x10000486c
   100004803:	outs   dx,BYTE PTR ds:[rsi]
   100004804:	and    BYTE PTR [ebp+0x78],ah
   100004808:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   10000480c:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0d2e
   100004813:	nop
   100004814:	nop
   100004815:	nop
   100004816:	nop
   100004817:	nop
   100004818:	rex.XB outs dx,BYTE PTR ds:[rsi]
   10000481a:	je     0x10000488e
   10000481c:	ins    BYTE PTR es:[rdi],dx
   10000481d:	sub    eax,0x61682043
   100004822:	outs   dx,BYTE PTR ds:[rsi]
   100004823:	fs ins BYTE PTR es:[rdi],dx
   100004825:	gs jb  0x100004848
   100004828:	outs   dx,BYTE PTR gs:[rsi]
   10000482a:	movsxd ebp,DWORD PTR [rdi+0x75]
   10000482d:	outs   dx,BYTE PTR ds:[rsi]
   10000482e:	je     0x100004895
   100004830:	jb     0x100004897
   100004832:	and    BYTE PTR fs:[rcx+0x6e],ah
   100004836:	and    BYTE PTR [rbp+0x78],ah
   100004839:	movsxd esp,DWORD PTR [rbp+0x70]
   10000483c:	je     0x1000048a7
   10000483e:	outs   dx,DWORD PTR ds:[rsi]
   10000483f:	outs   dx,BYTE PTR ds:[rsi]
   100004840:	and    BYTE PTR [rip+0x73696420],ch        # 0x17369ac66
   100004846:	ins    DWORD PTR es:[rdi],dx
   100004847:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
   10000484e:	(bad)  
   10000484f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   100004853:	outs   dx,BYTE PTR ds:[rsi]
   100004854:	or     eax,0x9090000a
   100004859:	nop
   10000485a:	nop
   10000485b:	nop
   10000485c:	nop
   10000485d:	nop
   10000485e:	nop
   10000485f:	nop
   100004860:	push   rbp
   100004862:	mov    eax,0x1270
   100004867:	call   0x100002630
   10000486c:	sub    rsp,rax
   10000486f:	lea    rbp,[rsp+0x40]
   100004874:	mov    QWORD PTR [rbp+0x0],0xfffffffffffffffe
   10000487c:	mov    QWORD PTR [rbp+0x1240],rbx
   100004883:	mov    rax,QWORD PTR [rip+0x24966]        # 0x1000291f0
   10000488a:	xor    rax,rbp
   10000488d:	mov    QWORD PTR [rbp+0x1220],rax
   100004894:	mov    ebx,ecx
   100004896:	mov    rax,QWORD PTR [rip+0xffffffffffffd74b]        # 0x100001fe8
   10000489d:	mov    r8,QWORD PTR [rax+0x8]
   1000048a1:	lea    rax,[r8*8+0x0]
   1000048a9:	lea    rdx,[rax+0xf]
   1000048ad:	cmp    rdx,rax
   1000048b0:	ja     0x1000048bc
   1000048b2:	movabs rdx,0xffffffffffffff0
   1000048bc:	and    rdx,0xfffffffffffffff0
   1000048c0:	mov    rax,rdx
   1000048c3:	call   0x100002630
   1000048c8:	sub    rsp,rdx
   1000048cb:	lea    r9,[rsp+0x40]
   1000048d0:	xor    eax,eax
   1000048d2:	mov    QWORD PTR [rsp+0x30],rax
   1000048d7:	mov    QWORD PTR [rsp+0x28],rax
   1000048dc:	mov    DWORD PTR [rsp+0x20],0x1
   1000048e4:	xor    edx,edx
   1000048e6:	lea    rcx,[rbp+0x10]
   1000048ea:	call   QWORD PTR [rip+0xffffffffffffd290]        # 0x100001b80
   1000048f0:	nop
   1000048f1:	mov    ecx,ebx
   1000048f3:	call   0x1000043a0
   1000048f8:	mov    ebx,eax
   1000048fa:	lea    rcx,[rbp+0x10]
   1000048fe:	call   QWORD PTR [rip+0xffffffffffffd284]        # 0x100001b88
   100004904:	mov    eax,ebx
   100004906:	mov    rcx,QWORD PTR [rbp+0x1220]
   10000490d:	xor    rcx,rbp
   100004910:	call   0x100002610
   100004915:	mov    rbx,QWORD PTR [rbp+0x1240]
   10000491c:	lea    rsp,[rbp+0x1230]
   100004923:	pop    rbp
   100004924:	ret    
   100004925:	nop
   100004926:	nop
   100004927:	nop
   100004928:	nop
   100004929:	nop
   10000492a:	nop
   10000492b:	nop
   10000492c:	nop
   10000492d:	nop
   10000492e:	nop
   10000492f:	nop
   100004930:	push   rbp
   100004932:	mov    eax,0x2270
   100004937:	call   0x100002630
   10000493c:	sub    rsp,rax
   10000493f:	lea    rbp,[rsp+0x40]
   100004944:	mov    QWORD PTR [rbp+0x8],0xfffffffffffffffe
   10000494c:	mov    QWORD PTR [rbp+0x2248],rbx
   100004953:	mov    QWORD PTR [rbp+0x2250],rdi
   10000495a:	mov    rax,QWORD PTR [rip+0x2488f]        # 0x1000291f0
   100004961:	xor    rax,rbp
   100004964:	mov    QWORD PTR [rbp+0x2220],rax
   10000496b:	mov    ebx,ecx
   10000496d:	mov    rax,QWORD PTR [rip+0x33f9c]        # 0x100038910
   100004974:	xor    edi,edi
   100004976:	cmp    DWORD PTR [rax+0x7fa8],edi
   10000497c:	jne    0x1000049a0
   10000497e:	mov    QWORD PTR [rsp+0x20],rdi
   100004983:	mov    r9d,0x3ba
   100004989:	lea    r8,[rip+0x36680]        # 0x10003b010
   100004990:	lea    rdx,[rip+0x36669]        # 0x10003b000
   100004997:	lea    ecx,[rdi+0x1]
   10000499a:	call   QWORD PTR [rip+0xffffffffffffd1b8]        # 0x100001b58
   1000049a0:	mov    rax,QWORD PTR [rip+0xffffffffffffd641]        # 0x100001fe8
   1000049a7:	mov    r8,QWORD PTR [rax+0x8]
   1000049ab:	lea    rax,[r8*8+0x0]
   1000049b3:	lea    rcx,[rax+0xf]
   1000049b7:	cmp    rcx,rax
   1000049ba:	ja     0x1000049c6
   1000049bc:	movabs rcx,0xffffffffffffff0
   1000049c6:	and    rcx,0xfffffffffffffff0
   1000049ca:	mov    rax,rcx
   1000049cd:	call   0x100002630
   1000049d2:	sub    rsp,rcx
   1000049d5:	lea    r9,[rsp+0x40]
   1000049da:	mov    QWORD PTR [rsp+0x30],rdi
   1000049df:	mov    QWORD PTR [rsp+0x28],rdi
   1000049e4:	mov    DWORD PTR [rsp+0x20],0x1
   1000049ec:	xor    edx,edx
   1000049ee:	lea    rcx,[rbp+0x1010]
   1000049f5:	call   QWORD PTR [rip+0xffffffffffffd185]        # 0x100001b80
   1000049fb:	nop
   1000049fc:	mov    eax,ebx
   1000049fe:	dec    eax
   100004a00:	je     0x100004cb6
   100004a06:	dec    eax
   100004a08:	je     0x100004bfb
   100004a0e:	dec    eax
   100004a10:	je     0x100004b4a
   100004a16:	dec    eax
   100004a18:	je     0x100004ae7
   100004a1e:	dec    eax
   100004a20:	je     0x100004a33
   100004a22:	mov    edx,ebx
   100004a24:	mov    ecx,0x42f9
   100004a29:	call   0x1000182d0
   100004a2e:	jmp    0x100004e46
   100004a33:	lea    rcx,[rip+0x276e6]        # 0x10002c120
   100004a3a:	call   QWORD PTR [rip+0xffffffffffffc708]        # 0x100001148
   100004a40:	mov    DWORD PTR [rip+0x2770a],0x3        # 0x10002c154
   100004a4a:	mov    QWORD PTR [rip+0x2770b],rdi        # 0x10002c15c
   100004a51:	mov    DWORD PTR [rip+0x27709],0x1        # 0x10002c164
   100004a5b:	mov    DWORD PTR [rip+0x27703],0x4e20        # 0x10002c168
   100004a65:	lea    rdx,[rip+0x276e4]        # 0x10002c150
   100004a6c:	mov    rcx,QWORD PTR [rip+0x276d5]        # 0x10002c148
   100004a73:	call   QWORD PTR [rip+0xffffffffffffc59f]        # 0x100001018
   100004a79:	test   eax,eax
   100004a7b:	jne    0x100004aa9
   100004a7d:	call   QWORD PTR [rip+0xffffffffffffc6ad]        # 0x100001130
   100004a83:	mov    ecx,eax
   100004a85:	xor    r9d,r9d
   100004a88:	xor    r8d,r8d
   100004a8b:	lea    rdx,[rbp+0x10]
   100004a8f:	call   QWORD PTR [rip+0xffffffffffffd103]        # 0x100001b98
   100004a95:	mov    r8,rax
   100004a98:	lea    rdx,[rip+0x3e1]        # 0x100004e80
   100004a9f:	mov    ecx,0x42f7
   100004aa4:	call   0x1000182d0
   100004aa9:	lea    rcx,[rip+0x27670]        # 0x10002c120
   100004ab0:	call   QWORD PTR [rip+0xffffffffffffc6a2]        # 0x100001158
   100004ab6:	mov    ecx,0x2
   100004abb:	call   QWORD PTR [rip+0xffffffffffffd0ff]        # 0x100001bc0
   100004ac1:	cmp    DWORD PTR [rip+0x27638],0x0        # 0x10002c100
   100004ac8:	jne    0x100004e34
   100004ace:	mov    DWORD PTR [rip+0x27628],0x1        # 0x10002c100
   100004ad8:	mov    ecx,0x42fb
   100004add:	call   0x1000182d0
   100004ae2:	jmp    0x100004e34
   100004ae7:	lea    rcx,[rip+0x27632]        # 0x10002c120
   100004aee:	call   QWORD PTR [rip+0xffffffffffffc654]        # 0x100001148
   100004af4:	lea    rdx,[rip+0x27655]        # 0x10002c150
   100004afb:	mov    rcx,QWORD PTR [rip+0x27646]        # 0x10002c148
   100004b02:	call   QWORD PTR [rip+0xffffffffffffc510]        # 0x100001018
   100004b08:	test   eax,eax
   100004b0a:	jne    0x100004b38
   100004b0c:	call   QWORD PTR [rip+0xffffffffffffc61e]        # 0x100001130
   100004b12:	mov    ecx,eax
   100004b14:	xor    r9d,r9d
   100004b17:	xor    r8d,r8d
   100004b1a:	lea    rdx,[rbp+0x10]
   100004b1e:	call   QWORD PTR [rip+0xffffffffffffd074]        # 0x100001b98
   100004b24:	mov    r8,rax
   100004b27:	lea    rdx,[rip+0x352]        # 0x100004e80
   100004b2e:	mov    ecx,0x42f7
   100004b33:	call   0x1000182d0
   100004b38:	lea    rcx,[rip+0x275e1]        # 0x10002c120
   100004b3f:	call   QWORD PTR [rip+0xffffffffffffc613]        # 0x100001158
   100004b45:	jmp    0x100004e46
   100004b4a:	lea    rcx,[rip+0x275cf]        # 0x10002c120
   100004b51:	call   QWORD PTR [rip+0xffffffffffffc5f1]        # 0x100001148
   100004b57:	mov    r11,QWORD PTR [rip+0x33db2]        # 0x100038910
   100004b5e:	test   BYTE PTR [r11+0x28],0x40
   100004b63:	je     0x100004ca4
   100004b69:	mov    DWORD PTR [rip+0x275e1],0x4        # 0x10002c154
   100004b73:	and    DWORD PTR [r11+0x28],0xffffffbf
   100004b78:	lea    rdx,[rip+0x275d1]        # 0x10002c150
   100004b7f:	mov    rcx,QWORD PTR [rip+0x275c2]        # 0x10002c148
   100004b86:	call   QWORD PTR [rip+0xffffffffffffc48c]        # 0x100001018
   100004b8c:	test   eax,eax
   100004b8e:	jne    0x100004bbe
   100004b90:	call   QWORD PTR [rip+0xffffffffffffc59a]        # 0x100001130
   100004b96:	mov    ecx,eax
   100004b98:	xor    r9d,r9d
   100004b9b:	xor    r8d,r8d
   100004b9e:	lea    rdx,[rbp+0x10]
   100004ba2:	call   QWORD PTR [rip+0xffffffffffffcff0]        # 0x100001b98
   100004ba8:	mov    r8,rax
   100004bab:	lea    rdx,[rip+0x2ce]        # 0x100004e80
   100004bb2:	mov    ecx,0x42f7
   100004bb7:	call   0x1000182d0
   100004bbc:	jmp    0x100004bc8
   100004bbe:	mov    ecx,0x42fa
   100004bc3:	call   0x1000182d0
   100004bc8:	mov    rcx,QWORD PTR [rip+0x27539]        # 0x10002c108
   100004bcf:	test   rcx,rcx
   100004bd2:	je     0x100004ca4
   100004bd8:	mov    rax,QWORD PTR [rip+0x33d31]        # 0x100038910
   100004bdf:	cmp    DWORD PTR [rax+0x49f4],0x0
   100004be6:	jne    0x100004ca4
   100004bec:	mov    DWORD PTR [rax+0x49f4],0x2
   100004bf6:	jmp    0x100004c9f
   100004bfb:	lea    rcx,[rip+0x2751e]        # 0x10002c120
   100004c02:	call   QWORD PTR [rip+0xffffffffffffc540]        # 0x100001148
   100004c08:	mov    r11,QWORD PTR [rip+0x33d01]        # 0x100038910
   100004c0f:	test   BYTE PTR [r11+0x28],0x40
   100004c14:	jne    0x100004ca4
   100004c1a:	mov    DWORD PTR [rip+0x27530],0x7        # 0x10002c154
   100004c24:	or     DWORD PTR [r11+0x28],0x40
   100004c29:	lea    rdx,[rip+0x27520]        # 0x10002c150
   100004c30:	mov    rcx,QWORD PTR [rip+0x27511]        # 0x10002c148
   100004c37:	call   QWORD PTR [rip+0xffffffffffffc3db]        # 0x100001018
   100004c3d:	test   eax,eax
   100004c3f:	jne    0x100004c6f
   100004c41:	call   QWORD PTR [rip+0xffffffffffffc4e9]        # 0x100001130
   100004c47:	mov    ecx,eax
   100004c49:	xor    r9d,r9d
   100004c4c:	xor    r8d,r8d
   100004c4f:	lea    rdx,[rbp+0x10]
   100004c53:	call   QWORD PTR [rip+0xffffffffffffcf3f]        # 0x100001b98
   100004c59:	mov    r8,rax
   100004c5c:	lea    rdx,[rip+0x21d]        # 0x100004e80
   100004c63:	mov    ecx,0x42f7
   100004c68:	call   0x1000182d0
   100004c6d:	jmp    0x100004c79
   100004c6f:	mov    ecx,0x42f8
   100004c74:	call   0x1000182d0
   100004c79:	mov    rcx,QWORD PTR [rip+0x27488]        # 0x10002c108
   100004c80:	test   rcx,rcx
   100004c83:	je     0x100004ca4
   100004c85:	mov    rax,QWORD PTR [rip+0x33c84]        # 0x100038910
   100004c8c:	cmp    DWORD PTR [rax+0x49f4],0x0
   100004c93:	jne    0x100004ca4
   100004c95:	mov    DWORD PTR [rax+0x49f4],0x1
   100004c9f:	call   0x100006a50
   100004ca4:	lea    rcx,[rip+0x27475]        # 0x10002c120
   100004cab:	call   QWORD PTR [rip+0xffffffffffffc4a7]        # 0x100001158
   100004cb1:	jmp    0x100004e46
   100004cb6:	mov    rax,QWORD PTR [rip+0x33c53]        # 0x100038910
   100004cbd:	test   BYTE PTR [rax+0x28],0x20
   100004cc1:	je     0x100004ccb
   100004cc3:	xor    ecx,ecx
   100004cc5:	call   QWORD PTR [rip+0xffffffffffffce6d]        # 0x100001b38
   100004ccb:	lea    rcx,[rip+0x2744e]        # 0x10002c120
   100004cd2:	call   QWORD PTR [rip+0xffffffffffffc470]        # 0x100001148
   100004cd8:	mov    DWORD PTR [rip+0x27472],0x3        # 0x10002c154
   100004ce2:	mov    QWORD PTR [rip+0x27473],rdi        # 0x10002c15c
   100004ce9:	mov    DWORD PTR [rip+0x27471],0x1        # 0x10002c164
   100004cf3:	mov    DWORD PTR [rip+0x2746b],0xea60        # 0x10002c168
   100004cfd:	lea    rdx,[rip+0x2744c]        # 0x10002c150
   100004d04:	mov    rcx,QWORD PTR [rip+0x2743d]        # 0x10002c148
   100004d0b:	call   QWORD PTR [rip+0xffffffffffffc307]        # 0x100001018
   100004d11:	test   eax,eax
   100004d13:	jne    0x100004d41
   100004d15:	call   QWORD PTR [rip+0xffffffffffffc415]        # 0x100001130
   100004d1b:	mov    ecx,eax
   100004d1d:	xor    r9d,r9d
   100004d20:	xor    r8d,r8d
   100004d23:	lea    rdx,[rbp+0x10]
   100004d27:	call   QWORD PTR [rip+0xffffffffffffce6b]        # 0x100001b98
   100004d2d:	mov    r8,rax
   100004d30:	lea    rdx,[rip+0x149]        # 0x100004e80
   100004d37:	mov    ecx,0x42f7
   100004d3c:	call   0x1000182d0
   100004d41:	xor    r9d,r9d
   100004d44:	xor    r8d,r8d
   100004d47:	lea    edx,[r9+0x1]
   100004d4b:	xor    ecx,ecx
   100004d4d:	call   QWORD PTR [rip+0xffffffffffffc3fd]        # 0x100001150
   100004d53:	mov    QWORD PTR [rip+0x273b6],rax        # 0x10002c110
   100004d5a:	lea    rcx,[rip+0x273bf]        # 0x10002c120
   100004d61:	call   QWORD PTR [rip+0xffffffffffffc3f1]        # 0x100001158
   100004d67:	cmp    QWORD PTR [rip+0x273a1],0x0        # 0x10002c110
   100004d6f:	jne    0x100004db3
   100004d71:	call   QWORD PTR [rip+0xffffffffffffc3b9]        # 0x100001130
   100004d77:	mov    ecx,eax
   100004d79:	xor    r9d,r9d
   100004d7c:	xor    r8d,r8d
   100004d7f:	lea    rdx,[rbp+0x10]
   100004d83:	call   QWORD PTR [rip+0xffffffffffffce0f]        # 0x100001b98
   100004d89:	mov    r8,rax
   100004d8c:	lea    rdx,[rip+0xffffffffffffe5ed]        # 0x100003380
   100004d93:	mov    ecx,0x42f7
   100004d98:	call   0x1000182d0
   100004d9d:	mov    edx,0x42f7
   100004da2:	mov    ecx,0x1
   100004da7:	mov    r8d,0x42a
   100004dad:	call   QWORD PTR [rip+0xffffffffffffcdfd]        # 0x100001bb0
   100004db3:	lea    rax,[rbp+0x0]
   100004db7:	mov    QWORD PTR [rsp+0x28],rax
   100004dbc:	mov    DWORD PTR [rsp+0x20],edi
   100004dc0:	mov    r9d,0x3
   100004dc6:	lea    r8,[rip+0xf3]        # 0x100004ec0
   100004dcd:	xor    edx,edx
   100004dcf:	xor    ecx,ecx
   100004dd1:	call   QWORD PTR [rip+0xffffffffffffc6a9]        # 0x100001480
   100004dd7:	mov    rbx,rax
   100004dda:	test   rax,rax
   100004ddd:	jne    0x100004e04
   100004ddf:	lea    rdx,[rip+0xffffffffffffe5ca]        # 0x1000033b0
   100004de6:	mov    ecx,0x42e0
   100004deb:	call   0x1000182d0
   100004df0:	mov    edx,0x42e0
   100004df5:	lea    ecx,[rbx+0x1]
   100004df8:	mov    r8d,0x42a
   100004dfe:	call   QWORD PTR [rip+0xffffffffffffcdac]        # 0x100001bb0
   100004e04:	mov    edx,0x2
   100004e09:	mov    rcx,rbx
   100004e0c:	call   QWORD PTR [rip+0xffffffffffffc34e]        # 0x100001160
   100004e12:	mov    edx,0x1
   100004e17:	mov    rcx,rbx
   100004e1a:	call   QWORD PTR [rip+0xffffffffffffc348]        # 0x100001168
   100004e20:	mov    rcx,rbx
   100004e23:	call   QWORD PTR [rip+0xffffffffffffc2ff]        # 0x100001128
   100004e29:	mov    ecx,0x2
   100004e2e:	call   QWORD PTR [rip+0xffffffffffffcd8c]        # 0x100001bc0
   100004e34:	mov    rcx,QWORD PTR [rip+0x272cd]        # 0x10002c108
   100004e3b:	test   rcx,rcx
   100004e3e:	je     0x100004e46
   100004e40:	call   0x100006a50
   100004e45:	nop
   100004e46:	lea    rcx,[rbp+0x1010]
   100004e4d:	call   QWORD PTR [rip+0xffffffffffffcd35]        # 0x100001b88
   100004e53:	mov    rcx,QWORD PTR [rbp+0x2220]
   100004e5a:	xor    rcx,rbp
   100004e5d:	call   0x100002610
   100004e62:	mov    rbx,QWORD PTR [rbp+0x2248]
   100004e69:	mov    rdi,QWORD PTR [rbp+0x2250]
   100004e70:	lea    rsp,[rbp+0x2230]
   100004e77:	pop    rbp
   100004e78:	ret    
   100004e79:	nop
   100004e7a:	nop
   100004e7b:	nop
   100004e7c:	nop
   100004e7d:	nop
   100004e7e:	nop
   100004e7f:	nop
   100004e80:	push   rbx
   100004e81:	add    BYTE PTR [rcx+0x0],dl
   100004e84:	rex.WR add BYTE PTR [rbx+0x0],r10b
   100004e88:	add    BYTE PTR gs:[rdx+0x0],dh
   100004e8c:	jbe    0x100004e8e
   100004e8e:	imul   eax,DWORD PTR [rax],0x650063
   100004e94:	rex.XB add BYTE PTR [r15+0x0],bpl
   100004e98:	outs   dx,BYTE PTR ds:[rsi]
   100004e99:	add    BYTE PTR [rax+rax*1+0x72],dh
   100004e9d:	add    BYTE PTR [rdi+0x0],ch
   100004ea0:	ins    BYTE PTR es:[rdi],dx
   100004ea1:	add    BYTE PTR [rax+0x0],cl
   100004ea4:	(bad)  
   100004ea5:	add    BYTE PTR [rsi+0x0],ch
   100004ea8:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   100004ead:	add    BYTE PTR [rdx+0x0],dh
   100004eb0:	add    BYTE PTR [rax],al
   100004eb2:	nop
   100004eb3:	nop
   100004eb4:	nop
   100004eb5:	nop
   100004eb6:	nop
   100004eb7:	nop
   100004eb8:	nop
   100004eb9:	nop
   100004eba:	nop
   100004ebb:	nop
   100004ebc:	nop
   100004ebd:	nop
   100004ebe:	nop
   100004ebf:	nop
   100004ec0:	push   rbp
   100004ec2:	mov    eax,0x1270
   100004ec7:	call   0x100002630
   100004ecc:	sub    rsp,rax
   100004ecf:	lea    rbp,[rsp+0x40]
   100004ed4:	mov    QWORD PTR [rbp+0x0],0xfffffffffffffffe
   100004edc:	mov    QWORD PTR [rbp+0x1240],rbx
   100004ee3:	mov    QWORD PTR [rbp+0x1248],rsi
   100004eea:	mov    QWORD PTR [rbp+0x1250],rdi
   100004ef1:	mov    rax,QWORD PTR [rip+0x242f8]        # 0x1000291f0
   100004ef8:	xor    rax,rbp
   100004efb:	mov    QWORD PTR [rbp+0x1220],rax
   100004f02:	mov    rbx,rcx
   100004f05:	mov    rax,QWORD PTR [rip+0xffffffffffffd0dc]        # 0x100001fe8
   100004f0c:	mov    r8,QWORD PTR [rax+0x8]
   100004f10:	lea    rax,[r8*8+0x0]
   100004f18:	lea    rcx,[rax+0xf]
   100004f1c:	cmp    rcx,rax
   100004f1f:	ja     0x100004f2b
   100004f21:	movabs rcx,0xffffffffffffff0
   100004f2b:	and    rcx,0xfffffffffffffff0
   100004f2f:	mov    rax,rcx
   100004f32:	call   0x100002630
   100004f37:	sub    rsp,rcx
   100004f3a:	lea    r9,[rsp+0x40]
   100004f3f:	xor    esi,esi
   100004f41:	mov    QWORD PTR [rsp+0x30],rsi
   100004f46:	mov    QWORD PTR [rsp+0x28],rsi
   100004f4b:	mov    DWORD PTR [rsp+0x20],0x1
   100004f53:	xor    edx,edx
   100004f55:	lea    rcx,[rbp+0x10]
   100004f59:	call   QWORD PTR [rip+0xffffffffffffcc21]        # 0x100001b80
   100004f5f:	nop
   100004f60:	lea    rcx,[rip+0x271b9]        # 0x10002c120
   100004f67:	call   QWORD PTR [rip+0xffffffffffffc1db]        # 0x100001148
   100004f6d:	mov    rdi,QWORD PTR [rip+0x2719c]        # 0x10002c110
   100004f74:	cmp    ebx,0x2
   100004f77:	cmove  rdi,QWORD PTR [rip+0x27199]        # 0x10002c118
   100004f7f:	lea    rcx,[rip+0x2719a]        # 0x10002c120
   100004f86:	call   QWORD PTR [rip+0xffffffffffffc1cc]        # 0x100001158
   100004f8c:	mov    edx,0x2710
   100004f91:	mov    rcx,rdi
   100004f94:	call   QWORD PTR [rip+0xffffffffffffc1ee]        # 0x100001188
   100004f9a:	cmp    QWORD PTR [rip+0x27166],0x0        # 0x10002c108
   100004fa2:	jne    0x100004fb9
   100004fa4:	mov    rax,QWORD PTR [rip+0x33965]        # 0x100038910
   100004fab:	test   BYTE PTR [rax+0x28],0x20
   100004faf:	je     0x100004fb9
   100004fb1:	xor    ecx,ecx
   100004fb3:	call   QWORD PTR [rip+0xffffffffffffcbef]        # 0x100001ba8
   100004fb9:	lea    rcx,[rip+0x27160]        # 0x10002c120
   100004fc0:	call   QWORD PTR [rip+0xffffffffffffc182]        # 0x100001148
   100004fc6:	cmp    ebx,0x2
   100004fc9:	jne    0x100004fd8
   100004fcb:	lea    ecx,[rbx+0xa]
   100004fce:	call   QWORD PTR [rip+0xffffffffffffc6f4]        # 0x1000016c8
   100004fd4:	test   al,al
   100004fd6:	jne    0x100004ffc
   100004fd8:	cmp    DWORD PTR [rip+0x27176],ebx        # 0x10002c154
   100004fde:	jne    0x100004ffc
   100004fe0:	inc    DWORD PTR [rip+0x2717e]        # 0x10002c164
   100004fe6:	lea    rdx,[rip+0x27163]        # 0x10002c150
   100004fed:	mov    rcx,QWORD PTR [rip+0x27154]        # 0x10002c148
   100004ff4:	call   QWORD PTR [rip+0xffffffffffffc01e]        # 0x100001018
   100004ffa:	jmp    0x100004f7f
   100004ffc:	mov    rcx,rdi
   100004fff:	call   QWORD PTR [rip+0xffffffffffffc123]        # 0x100001128
   100005005:	cmp    ebx,0x2
   100005008:	jne    0x100005013
   10000500a:	mov    QWORD PTR [rip+0x27107],rsi        # 0x10002c118
   100005011:	jmp    0x10000501a
   100005013:	mov    QWORD PTR [rip+0x270f6],rsi        # 0x10002c110
   10000501a:	lea    rcx,[rip+0x270ff]        # 0x10002c120
   100005021:	call   QWORD PTR [rip+0xffffffffffffc131]        # 0x100001158
   100005027:	nop
   100005028:	lea    rcx,[rbp+0x10]
   10000502c:	call   QWORD PTR [rip+0xffffffffffffcb56]        # 0x100001b88
   100005032:	xor    ecx,ecx
   100005034:	call   QWORD PTR [rip+0xffffffffffffc416]        # 0x100001450
   10000503a:	xor    eax,eax
   10000503c:	mov    rcx,QWORD PTR [rbp+0x1220]
   100005043:	xor    rcx,rbp
   100005046:	call   0x100002610
   10000504b:	mov    rbx,QWORD PTR [rbp+0x1240]
   100005052:	mov    rsi,QWORD PTR [rbp+0x1248]
   100005059:	mov    rdi,QWORD PTR [rbp+0x1250]
   100005060:	lea    rsp,[rbp+0x1230]
   100005067:	pop    rbp
   100005068:	ret    
   100005069:	nop
   10000506a:	nop
   10000506b:	nop
   10000506c:	nop
   10000506d:	nop
   10000506e:	nop
   10000506f:	nop
   100005070:	mov    eax,0x1038
   100005075:	call   0x100002630
   10000507a:	sub    rsp,rax
   10000507d:	mov    rax,QWORD PTR [rip+0x2416c]        # 0x1000291f0
   100005084:	xor    rax,rsp
   100005087:	mov    QWORD PTR [rsp+0x1020],rax
   10000508f:	mov    rax,QWORD PTR [rip+0x3387a]        # 0x100038910
   100005096:	cmp    DWORD PTR [rax+0x7fa8],0x0
   10000509d:	je     0x100005130
   1000050a3:	lea    rcx,[rip+0x27076]        # 0x10002c120
   1000050aa:	call   QWORD PTR [rip+0xffffffffffffc098]        # 0x100001148
   1000050b0:	cmp    DWORD PTR [rip+0x2709d],0x2        # 0x10002c154
   1000050b7:	jne    0x100005123
   1000050b9:	mov    rcx,QWORD PTR [rip+0x27058]        # 0x10002c118
   1000050c0:	test   rcx,rcx
   1000050c3:	je     0x1000050cb
   1000050c5:	call   QWORD PTR [rip+0xffffffffffffc0c5]        # 0x100001190
   1000050cb:	mov    rcx,QWORD PTR [rip+0x27076]        # 0x10002c148
   1000050d2:	xor    eax,eax
   1000050d4:	lea    rdx,[rip+0x27075]        # 0x10002c150
   1000050db:	mov    DWORD PTR [rip+0x2706f],0x4        # 0x10002c154
   1000050e5:	mov    QWORD PTR [rip+0x27078],rax        # 0x10002c164
   1000050ec:	call   QWORD PTR [rip+0xffffffffffffbf26]        # 0x100001018
   1000050f2:	test   eax,eax
   1000050f4:	jne    0x100005123
   1000050f6:	call   QWORD PTR [rip+0xffffffffffffc034]        # 0x100001130
   1000050fc:	lea    rdx,[rsp+0x20]
   100005101:	xor    r9d,r9d
   100005104:	mov    ecx,eax
   100005106:	xor    r8d,r8d
   100005109:	call   QWORD PTR [rip+0xffffffffffffca89]        # 0x100001b98
   10000510f:	lea    rdx,[rip+0x32]        # 0x100005148
   100005116:	mov    ecx,0x42f7
   10000511b:	mov    r8,rax
   10000511e:	call   0x1000182d0
   100005123:	lea    rcx,[rip+0x26ff6]        # 0x10002c120
   10000512a:	call   QWORD PTR [rip+0xffffffffffffc028]        # 0x100001158
   100005130:	mov    rcx,QWORD PTR [rsp+0x1020]
   100005138:	xor    rcx,rsp
   10000513b:	call   0x100002610
   100005140:	add    rsp,0x1038
   100005147:	ret    
   100005148:	movsxd eax,DWORD PTR [rax]
   10000514a:	outs   dx,DWORD PTR ds:[rsi]
   10000514b:	add    BYTE PTR [rbp+0x0],ch
   10000514e:	jo     0x100005150
   100005150:	ins    BYTE PTR es:[rdi],dx
   100005151:	add    BYTE PTR [rbp+0x0],ah
   100005154:	je     0x100005156
   100005156:	add    BYTE PTR gs:[rbx+0x0],dh
   10000515a:	imul   eax,DWORD PTR [rax],0x6e0067
   100005160:	(bad)  
   100005161:	add    BYTE PTR [rax+rax*1+0x0],ch
   100005165:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000516b:	nop
   10000516c:	nop
   10000516d:	nop
   10000516e:	nop
   10000516f:	nop
   100005170:	push   rdi
   100005172:	sub    rsp,0x60
   100005176:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   10000517f:	mov    QWORD PTR [rsp+0x70],rbx
   100005184:	mov    QWORD PTR [rsp+0x78],rsi
   100005189:	mov    ebx,ecx
   10000518b:	call   QWORD PTR [rip+0xffffffffffffca3f]        # 0x100001bd0
   100005191:	mov    edx,eax
   100005193:	mov    ecx,ebx
   100005195:	call   QWORD PTR [rip+0xffffffffffffc7b5]        # 0x100001950
   10000519b:	call   0x100005510
   1000051a0:	mov    r11,QWORD PTR [rip+0xffffffffffffce09]        # 0x100001fb0
   1000051a7:	test   BYTE PTR [r11],0x1
   1000051ab:	je     0x1000051c7
   1000051ad:	call   QWORD PTR [rip+0xffffffffffffc4fd]        # 0x1000016b0
   1000051b3:	test   rax,rax
   1000051b6:	je     0x1000051c7
   1000051b8:	call   QWORD PTR [rip+0xffffffffffffc4f2]        # 0x1000016b0
   1000051be:	mov    rdx,QWORD PTR [rax]
   1000051c1:	mov    rcx,rax
   1000051c4:	call   QWORD PTR [rdx+0x70]
   1000051c7:	call   QWORD PTR [rip+0xffffffffffffc773]        # 0x100001940
   1000051cd:	mov    ecx,ebx
   1000051cf:	call   QWORD PTR [rip+0xffffffffffffca03]        # 0x100001bd8
   1000051d5:	call   0x100006800
   1000051da:	test   eax,eax
   1000051dc:	je     0x1000051ec
   1000051de:	or     ecx,0xffffffff
   1000051e1:	call   QWORD PTR [rip+0xffffffffffffbf99]        # 0x100001180
   1000051e7:	jmp    0x1000052a6
   1000051ec:	xor    esi,esi
   1000051ee:	mov    DWORD PTR [rsp+0x28],esi
   1000051f2:	mov    rcx,QWORD PTR [rip+0x23ec7]        # 0x1000290c0
   1000051f9:	mov    rax,QWORD PTR gs:0x30
   100005202:	add    rax,rcx
   100005205:	cmp    rcx,0x1480
   10000520c:	jge    0x100005214
   10000520e:	call   QWORD PTR [rip+0xffffffffffffbf0c]        # 0x100001120
   100005214:	test   rax,rax
   100005217:	je     0x100005225
   100005219:	mov    rdi,QWORD PTR [rax+0xd8]
   100005220:	test   rdi,rdi
   100005223:	jne    0x100005257
   100005225:	call   QWORD PTR [rip+0xffffffffffffc925]        # 0x100001b50
   10000522b:	mov    r11,QWORD PTR [rip+0x23e8e]        # 0x1000290c0
   100005232:	mov    rax,QWORD PTR gs:0x30
   10000523b:	add    rax,r11
   10000523e:	cmp    r11,0x1480
   100005245:	jge    0x100005250
   100005247:	mov    ecx,r11d
   10000524a:	call   QWORD PTR [rip+0xffffffffffffbed0]        # 0x100001120
   100005250:	mov    rdi,QWORD PTR [rax+0xd8]
   100005257:	mov    QWORD PTR [rsp+0x30],rdi
   10000525c:	mov    eax,DWORD PTR [rdi+0x220]
   100005262:	mov    ebx,eax
   100005264:	and    ebx,0x1
   100005267:	xor    ebx,0x1
   10000526a:	mov    DWORD PTR [rsp+0x28],ebx
   10000526e:	or     eax,0x1
   100005271:	mov    DWORD PTR [rdi+0x220],eax
   100005277:	mov    DWORD PTR [rsp+0x38],0x40006d
   10000527f:	mov    QWORD PTR [rsp+0x40],rsi
   100005284:	mov    QWORD PTR [rsp+0x50],rsi
   100005289:	mov    QWORD PTR [rsp+0x48],rsi
   10000528e:	mov    QWORD PTR [rsp+0x58],rsi
   100005293:	lea    rcx,[rsp+0x38]
   100005298:	call   0x100006630
   10000529d:	nop
   10000529e:	not    ebx
   1000052a0:	and    DWORD PTR [rdi+0x220],ebx
   1000052a6:	mov    rbx,QWORD PTR [rsp+0x70]
   1000052ab:	mov    rsi,QWORD PTR [rsp+0x78]
   1000052b0:	add    rsp,0x60
   1000052b4:	pop    rdi
   1000052b5:	ret    
   1000052b6:	nop
   1000052b7:	nop
   1000052b8:	nop
   1000052b9:	nop
   1000052ba:	nop
   1000052bb:	nop
   1000052bc:	nop
   1000052bd:	nop
   1000052be:	nop
   1000052bf:	nop
   1000052c0:	push   rbx
   1000052c2:	sub    rsp,0x30
   1000052c6:	mov    ebx,ecx
   1000052c8:	call   QWORD PTR [rip+0xffffffffffffc3da]        # 0x1000016a8
   1000052ce:	test   ebx,ebx
   1000052d0:	setne  cl
   1000052d3:	call   QWORD PTR [rip+0xffffffffffffc65f]        # 0x100001938
   1000052d9:	call   QWORD PTR [rip+0xffffffffffffc651]        # 0x100001930
   1000052df:	call   QWORD PTR [rip+0xffffffffffffc643]        # 0x100001928
   1000052e5:	xor    ecx,ecx
   1000052e7:	call   QWORD PTR [rip+0xffffffffffffc633]        # 0x100001920
   1000052ed:	call   QWORD PTR [rip+0xffffffffffffc155]        # 0x100001448
   1000052f3:	xor    ecx,ecx
   1000052f5:	call   QWORD PTR [rip+0xffffffffffffc65d]        # 0x100001958
   1000052fb:	call   QWORD PTR [rip+0xffffffffffffc617]        # 0x100001918
   100005301:	test   al,al
   100005303:	jne    0x10000532b
   100005305:	mov    r8d,ebx
   100005308:	xor    r9d,r9d
   10000530b:	mov    edx,0x40000028
   100005310:	or     rcx,0xffffffffffffffff
   100005314:	mov    QWORD PTR [rsp+0x20],0x0
   10000531d:	call   QWORD PTR [rip+0xffffffffffffc655]        # 0x100001978
   100005323:	mov    ecx,ebx
   100005325:	call   QWORD PTR [rip+0xffffffffffffc8cd]        # 0x100001bf8
   10000532b:	add    rsp,0x30
   10000532f:	pop    rbx
   100005330:	ret    
   100005331:	nop
   100005332:	nop
   100005333:	nop
   100005334:	nop
   100005335:	nop
   100005336:	nop
   100005337:	nop
   100005338:	nop
   100005339:	nop
   10000533a:	nop
   10000533b:	nop
   10000533c:	nop
   10000533d:	nop
   10000533e:	nop
   10000533f:	nop
   100005340:	mov    DWORD PTR [rsp+0x8],ecx
   100005344:	sub    rsp,0xa8
   10000534b:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   100005354:	mov    rdx,QWORD PTR [rip+0xffffffffffffc8a5]        # 0x100001c00
   10000535b:	lea    rcx,[rsp+0x60]
   100005360:	call   0x100002090
   100005365:	nop
   100005366:	mov    rax,QWORD PTR [rip+0xffffffffffffc7a3]        # 0x100001b10
   10000536d:	mov    BYTE PTR [rax],0x0
   100005370:	call   QWORD PTR [rip+0xffffffffffffc0d2]        # 0x100001448
   100005376:	call   QWORD PTR [rip+0xffffffffffffc88c]        # 0x100001c08
   10000537c:	mov    rcx,rax
   10000537f:	call   QWORD PTR [rip+0xffffffffffffc58b]        # 0x100001910
   100005385:	mov    rax,QWORD PTR [rip+0x33584]        # 0x100038910
   10000538c:	cmp    DWORD PTR [rax+0x7fa8],0x0
   100005393:	je     0x10000542e
   100005399:	lea    rcx,[rip+0x26d80]        # 0x10002c120
   1000053a0:	call   QWORD PTR [rip+0xffffffffffffbda2]        # 0x100001148
   1000053a6:	mov    DWORD PTR [rip+0x26da4],0x1        # 0x10002c154
   1000053b0:	mov    rcx,QWORD PTR [rip+0x26d61]        # 0x10002c118
   1000053b7:	test   rcx,rcx
   1000053ba:	je     0x1000053c2
   1000053bc:	call   QWORD PTR [rip+0xffffffffffffbdce]        # 0x100001190
   1000053c2:	mov    rcx,QWORD PTR [rip+0x26d47]        # 0x10002c110
   1000053c9:	test   rcx,rcx
   1000053cc:	je     0x1000053d4
   1000053ce:	call   QWORD PTR [rip+0xffffffffffffbdbc]        # 0x100001190
   1000053d4:	call   QWORD PTR [rip+0xffffffffffffc2c6]        # 0x1000016a0
   1000053da:	mov    DWORD PTR [rip+0x26d7c],eax        # 0x10002c15c
   1000053e0:	call   QWORD PTR [rip+0xffffffffffffc2b2]        # 0x100001698
   1000053e6:	mov    DWORD PTR [rip+0x26d74],eax        # 0x10002c160
   1000053ec:	xor    eax,eax
   1000053ee:	mov    QWORD PTR [rip+0x26d6f],rax        # 0x10002c164
   1000053f5:	lea    rdx,[rip+0x26d54]        # 0x10002c150
   1000053fc:	mov    rcx,QWORD PTR [rip+0x26d45]        # 0x10002c148
   100005403:	call   QWORD PTR [rip+0xffffffffffffbc0f]        # 0x100001018
   100005409:	mov    rax,QWORD PTR [rip+0x23cb8]        # 0x1000290c8
   100005410:	movzx  edx,BYTE PTR [rax+0x53]
   100005414:	shr    dl,0x2
   100005417:	test   dl,0x1
   10000541a:	jne    0x100005421
   10000541c:	call   0x1000058a0
   100005421:	lea    rcx,[rip+0x26cf8]        # 0x10002c120
   100005428:	call   QWORD PTR [rip+0xffffffffffffbd2a]        # 0x100001158
   10000542e:	call   QWORD PTR [rip+0xffffffffffffc014]        # 0x100001448
   100005434:	mov    r11,QWORD PTR [rip+0xffffffffffffc6dd]        # 0x100001b18
   10000543b:	mov    BYTE PTR [r11],0x0
   10000543f:	mov    rcx,QWORD PTR [rip+0x334ca]        # 0x100038910
   100005446:	call   QWORD PTR [rip+0xffffffffffffc244]        # 0x100001690
   10000544c:	nop
   10000544d:	lea    rcx,[rsp+0x60]
   100005452:	call   0x100002030
   100005457:	nop
   100005458:	mov    rax,QWORD PTR [rip+0x23c61]        # 0x1000290c0
   10000545f:	mov    QWORD PTR [rsp+0xb8],rax
   100005467:	mov    rax,QWORD PTR gs:0x30
   100005470:	mov    rcx,QWORD PTR [rsp+0xb8]
   100005478:	add    rax,rcx
   10000547b:	cmp    rcx,0x1480
   100005482:	jge    0x10000548a
   100005484:	call   QWORD PTR [rip+0xffffffffffffbc96]        # 0x100001120
   10000548a:	test   rax,rax
   10000548d:	je     0x10000549b
   10000548f:	mov    rax,QWORD PTR [rax+0xd8]
   100005496:	test   rax,rax
   100005499:	jne    0x1000054da
   10000549b:	call   QWORD PTR [rip+0xffffffffffffc6af]        # 0x100001b50
   1000054a1:	mov    r11,QWORD PTR [rip+0x23c18]        # 0x1000290c0
   1000054a8:	mov    QWORD PTR [rsp+0xc0],r11
   1000054b0:	mov    rax,QWORD PTR gs:0x30
   1000054b9:	mov    rcx,QWORD PTR [rsp+0xc0]
   1000054c1:	add    rax,rcx
   1000054c4:	cmp    rcx,0x1480
   1000054cb:	jge    0x1000054d3
   1000054cd:	call   QWORD PTR [rip+0xffffffffffffbc4d]        # 0x100001120
   1000054d3:	mov    rax,QWORD PTR [rax+0xd8]
   1000054da:	cmp    DWORD PTR [rax+0x204],0x0
   1000054e1:	je     0x1000054ea
   1000054e3:	call   QWORD PTR [rip+0xffffffffffffc737]        # 0x100001c20
   1000054e9:	nop
   1000054ea:	mov    ecx,DWORD PTR [rsp+0xb0]
   1000054f1:	add    rsp,0xa8
   1000054f8:	rex.W jmp QWORD PTR [rip+0xffffffffffffc6a9]        # 0x100001ba8
   1000054ff:	nop
   100005500:	nop
   100005501:	nop
   100005502:	nop
   100005503:	nop
   100005504:	nop
   100005505:	nop
   100005506:	nop
   100005507:	nop
   100005508:	nop
   100005509:	nop
   10000550a:	nop
   10000550b:	nop
   10000550c:	nop
   10000550d:	nop
   10000550e:	nop
   10000550f:	nop
   100005510:	mov    r11,rsp
   100005513:	push   rdi
   100005514:	sub    rsp,0x50
   100005518:	mov    QWORD PTR [r11-0x38],0xfffffffffffffffe
   100005520:	mov    QWORD PTR [r11+0x10],rbx
   100005524:	mov    rax,QWORD PTR [rip+0xffffffffffffc5c5]        # 0x100001af0
   10000552b:	cmp    DWORD PTR [rax],0x0
   10000552e:	je     0x10000565f
   100005534:	mov    rbx,QWORD PTR [rip+0xffffffffffffcaa5]        # 0x100001fe0
   10000553b:	xor    edi,edi
   10000553d:	mov    QWORD PTR [r11-0x30],rdi
   100005541:	mov    QWORD PTR [r11-0x28],rdi
   100005545:	mov    QWORD PTR [r11-0x18],rdi
   100005549:	mov    DWORD PTR [rsp+0x48],edi
   10000554d:	mov    QWORD PTR [r11-0x20],rdi
   100005551:	mov    QWORD PTR [r11-0x20],rbx
   100005555:	mov    rcx,rbx
   100005558:	call   0x100006100
   10000555d:	mov    QWORD PTR [rsp+0x28],rax
   100005562:	mov    rcx,rbx
   100005565:	call   0x1000061b0
   10000556a:	mov    QWORD PTR [rsp+0x30],rax
   10000556f:	xor    edx,edx
   100005571:	lea    rcx,[rsp+0x28]
   100005576:	call   0x100005e90
   10000557b:	mov    rbx,rax
   10000557e:	test   rax,rax
   100005581:	je     0x1000055d1
   100005583:	mov    rcx,QWORD PTR [rip+0xffffffffffffc566]        # 0x100001af0
   10000558a:	cmp    DWORD PTR [rcx],0x0
   10000558d:	je     0x1000055bc
   10000558f:	lea    rcx,[rbx+0x2970]
   100005596:	call   QWORD PTR [rip+0xffffffffffffbbfc]        # 0x100001198
   10000559c:	mov    eax,DWORD PTR [rbx+0xe4]
   1000055a2:	test   eax,eax
   1000055a4:	je     0x1000055bc
   1000055a6:	mov    DWORD PTR [rbx+0xe4],edi
   1000055ac:	mov    ecx,edi
   1000055ae:	cmp    eax,0x2
   1000055b1:	sete   cl
   1000055b4:	xor    edx,edx
   1000055b6:	call   QWORD PTR [rip+0xffffffffffffc674]        # 0x100001c30
   1000055bc:	mov    rdx,rbx
   1000055bf:	lea    rcx,[rsp+0x28]
   1000055c4:	call   0x100005e90
   1000055c9:	mov    rbx,rax
   1000055cc:	test   rax,rax
   1000055cf:	jne    0x100005583
   1000055d1:	mov    edx,0x3
   1000055d6:	xor    ecx,ecx
   1000055d8:	call   QWORD PTR [rip+0xffffffffffffc652]        # 0x100001c30
   1000055de:	mov    r11,QWORD PTR [rip+0xffffffffffffc50b]        # 0x100001af0
   1000055e5:	mov    DWORD PTR [r11],edi
   1000055e8:	or     ebx,0xffffffff
   1000055eb:	mov    rcx,QWORD PTR [rsp+0x28]
   1000055f0:	test   rcx,rcx
   1000055f3:	je     0x100005615
   1000055f5:	add    rcx,0x10
   1000055f9:	mov    eax,ebx
   1000055fb:	lock xadd DWORD PTR [rcx+0x10],eax
   100005600:	dec    eax
   100005602:	jne    0x100005610
   100005604:	cmp    QWORD PTR [rcx+0x8],0x0
   100005609:	je     0x100005610
   10000560b:	call   0x100006430
   100005610:	mov    QWORD PTR [rsp+0x28],rdi
   100005615:	mov    rcx,QWORD PTR [rsp+0x30]
   10000561a:	test   rcx,rcx
   10000561d:	je     0x10000563d
   10000561f:	add    rcx,0x10
   100005623:	lock xadd DWORD PTR [rcx+0x10],ebx
   100005628:	dec    ebx
   10000562a:	jne    0x100005638
   10000562c:	cmp    QWORD PTR [rcx+0x8],0x0
   100005631:	je     0x100005638
   100005633:	call   0x100006430
   100005638:	mov    QWORD PTR [rsp+0x30],rdi
   10000563d:	mov    rcx,QWORD PTR [rsp+0x40]
   100005642:	test   rcx,rcx
   100005645:	je     0x10000565a
   100005647:	mov    edx,DWORD PTR [rsp+0x48]
   10000564b:	call   QWORD PTR [rip+0xffffffffffffc5d7]        # 0x100001c28
   100005651:	mov    QWORD PTR [rsp+0x40],rdi
   100005656:	mov    DWORD PTR [rsp+0x48],edi
   10000565a:	mov    QWORD PTR [rsp+0x38],rdi
   10000565f:	mov    rbx,QWORD PTR [rsp+0x68]
   100005664:	add    rsp,0x50
   100005668:	pop    rdi
   100005669:	ret    
   10000566a:	nop
   10000566b:	nop
   10000566c:	nop
   10000566d:	nop
   10000566e:	nop
   10000566f:	nop
   100005670:	push   rbx
   100005672:	sub    rsp,0x450
   100005679:	mov    rax,QWORD PTR [rip+0x23b70]        # 0x1000291f0
   100005680:	xor    rax,rsp
   100005683:	mov    QWORD PTR [rsp+0x440],rax
   10000568b:	mov    rax,QWORD PTR [rip+0x3327e]        # 0x100038910
   100005692:	cmp    DWORD PTR [rax+0x49d4],0x0
   100005699:	jne    0x100005725
   10000569f:	mov    rax,QWORD PTR [rip+0xffffffffffffc47a]        # 0x100001b20
   1000056a6:	mov    rcx,QWORD PTR [rax]
   1000056a9:	mov    rax,QWORD PTR [rcx]
   1000056ac:	call   QWORD PTR [rax+0xd0]
   1000056b2:	mov    rcx,rax
   1000056b5:	call   QWORD PTR [rip+0x239cd]        # 0x100029088
   1000056bb:	test   eax,eax
   1000056bd:	je     0x100005725
   1000056bf:	xor    r9d,r9d
   1000056c2:	lea    r8,[rip+0x17f]        # 0x100005848
   1000056c9:	lea    rax,[rsp+0x30]
   1000056ce:	mov    edx,0x105
   1000056d3:	lea    rcx,[rsp+0x30]
   1000056d8:	sub    r8,rax
   1000056db:	mov    ebx,r9d
   1000056de:	xchg   ax,ax
   1000056e0:	lea    rax,[rdx+0x7ffffef9]
   1000056e7:	test   rax,rax
   1000056ea:	je     0x100005711
   1000056ec:	movzx  eax,WORD PTR [r8+rcx*1]
   1000056f1:	test   ax,ax
   1000056f4:	je     0x100005711
   1000056f6:	mov    WORD PTR [rcx],ax
   1000056f9:	add    rcx,0x2
   1000056fd:	dec    rdx
   100005700:	jne    0x1000056e0
   100005702:	sub    rcx,0x2
   100005706:	mov    ebx,0x8007007a
   10000570b:	mov    WORD PTR [rcx],r9w
   10000570f:	jmp    0x10000576d
   100005711:	test   rdx,rdx
   100005714:	jne    0x10000571f
   100005716:	sub    rcx,0x2
   10000571a:	mov    ebx,0x8007007a
   10000571f:	mov    WORD PTR [rcx],r9w
   100005723:	jmp    0x10000576d
   100005725:	mov    rax,QWORD PTR [rip+0xffffffffffffc3f4]        # 0x100001b20
   10000572c:	mov    rcx,QWORD PTR [rax]
   10000572f:	mov    rax,QWORD PTR [rcx]
   100005732:	call   QWORD PTR [rax+0xd0]
   100005738:	mov    rbx,rax
   10000573b:	call   QWORD PTR [rip+0xffffffffffffc4f7]        # 0x100001c38
   100005741:	lea    r8,[rip+0x100]        # 0x100005848
   100005748:	mov    QWORD PTR [rsp+0x28],rbx
   10000574d:	mov    QWORD PTR [rsp+0x20],r8
   100005752:	lea    rcx,[rsp+0x30]
   100005757:	lea    r8,[rip+0xffffffffffffdc72]        # 0x1000033d0
   10000575e:	mov    r9,rax
   100005761:	mov    edx,0x105
   100005766:	call   0x100005bb0
   10000576b:	mov    ebx,eax
   10000576d:	test   ebx,ebx
   10000576f:	jns    0x1000057bf
   100005771:	mov    ecx,ebx
   100005773:	call   QWORD PTR [rip+0xffffffffffffbf3f]        # 0x1000016b8
   100005779:	call   QWORD PTR [rip+0xffffffffffffc4b9]        # 0x100001c38
   10000577f:	mov    DWORD PTR [rsp+0x28],ebx
   100005783:	lea    rbx,[rip+0xde]        # 0x100005868
   10000578a:	lea    r8,[rip+0xffffffffffffe02f]        # 0x1000037c0
   100005791:	lea    rcx,[rsp+0x240]
   100005799:	mov    r9,rax
   10000579c:	mov    edx,0x200
   1000057a1:	mov    QWORD PTR [rsp+0x20],rbx
   1000057a6:	call   0x10000eb40
   1000057ab:	mov    rcx,rbx
   1000057ae:	test   eax,eax
   1000057b0:	js     0x1000057ba
   1000057b2:	lea    rcx,[rsp+0x240]
   1000057ba:	call   0x100015fc0
   1000057bf:	call   QWORD PTR [rip+0xffffffffffffbec3]        # 0x100001688
   1000057c5:	xor    r9d,r9d
   1000057c8:	or     rcx,0xffffffffffffffff
   1000057cc:	mov    rdx,rax
   1000057cf:	lea    rax,[rsp+0x30]
   1000057d4:	lea    r8d,[r9+0x4]
   1000057d8:	mov    QWORD PTR [rsp+0x28],rax
   1000057dd:	mov    DWORD PTR [rsp+0x20],0x4
   1000057e5:	call   QWORD PTR [rip+0xffffffffffffb9bd]        # 0x1000011a8
   1000057eb:	mov    rbx,rax
   1000057ee:	test   rax,rax
   1000057f1:	je     0x10000582f
   1000057f3:	call   QWORD PTR [rip+0xffffffffffffb937]        # 0x100001130
   1000057f9:	cmp    eax,0xb7
   1000057fe:	je     0x100005826
   100005800:	xor    r9d,r9d
   100005803:	xor    r8d,r8d
   100005806:	mov    rcx,rbx
   100005809:	lea    edx,[r9+0x2]
   10000580d:	mov    QWORD PTR [rsp+0x20],0x4
   100005816:	call   QWORD PTR [rip+0xffffffffffffb994]        # 0x1000011b0
   10000581c:	test   rax,rax
   10000581f:	je     0x100005826
   100005821:	mov    BYTE PTR [rax],0x1
   100005824:	jmp    0x10000582f
   100005826:	mov    rcx,rbx
   100005829:	call   QWORD PTR [rip+0xffffffffffffb8f9]        # 0x100001128
   10000582f:	mov    rcx,QWORD PTR [rsp+0x440]
   100005837:	xor    rcx,rsp
   10000583a:	call   0x100002610
   10000583f:	add    rsp,0x450
   100005846:	pop    rbx
   100005847:	ret    
   100005848:	push   rbx
   100005849:	add    BYTE PTR [rcx+0x0],dl
   10000584c:	rex.WR add BYTE PTR [rsi],r14b
   10000584f:	add    BYTE PTR [rax],dh
   100005851:	add    BYTE PTR [rdi+0x0],bl
   100005854:	push   rdx
   100005855:	add    BYTE PTR [rbp+0x0],dl
   100005858:	rex.WRX add BYTE PTR [rsi+0x0],r9b
   10000585c:	rex.WB add BYTE PTR [r14+0x0],cl
   100005860:	rex.RXB add BYTE PTR [r8],r8b
   100005863:	add    BYTE PTR [rax+0x53909090],dl
   100005869:	je     0x1000058dd
   10000586b:	imul   ebp,DWORD PTR [rsi+0x67],0x65706f20
   100005872:	jb     0x1000058d5
   100005874:	je     0x1000058df
   100005876:	outs   dx,DWORD PTR ds:[rsi]
   100005877:	outs   dx,BYTE PTR ds:[rsi]
   100005878:	and    BYTE PTR [rsi+0x61],ah
   10000587b:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x73282065
   100005883:	je     0x1000058e6
   100005885:	je     0x1000058fc
   100005887:	jae    0x1000058a9
   100005889:	(bad)  
   10000588a:	ins    BYTE PTR es:[rdi],dx
   10000588b:	outs   dx,DWORD PTR ds:[rsi]
   10000588c:	movsxd ebp,DWORD PTR [rbx+0x20]
   10000588f:	outs   dx,BYTE PTR ds:[rsi]
   100005890:	(bad)  
   100005891:	ins    DWORD PTR es:[rdi],dx
   100005892:	sub    DWORD PTR gs:[rax],eax
   100005895:	nop
   100005896:	nop
   100005897:	nop
   100005898:	nop
   100005899:	nop
   10000589a:	nop
   10000589b:	nop
   10000589c:	nop
   10000589d:	nop
   10000589e:	nop
   10000589f:	nop
   1000058a0:	push   rbx
   1000058a2:	sub    rsp,0x450
   1000058a9:	mov    rax,QWORD PTR [rip+0x23940]        # 0x1000291f0
   1000058b0:	xor    rax,rsp
   1000058b3:	mov    QWORD PTR [rsp+0x440],rax
   1000058bb:	mov    rax,QWORD PTR [rip+0x3304e]        # 0x100038910
   1000058c2:	cmp    DWORD PTR [rax+0x49d4],0x0
   1000058c9:	jne    0x100005955
   1000058cf:	mov    rax,QWORD PTR [rip+0xffffffffffffc24a]        # 0x100001b20
   1000058d6:	mov    rcx,QWORD PTR [rax]
   1000058d9:	mov    rax,QWORD PTR [rcx]
   1000058dc:	call   QWORD PTR [rax+0xd0]
   1000058e2:	mov    rcx,rax
   1000058e5:	call   QWORD PTR [rip+0x2379d]        # 0x100029088
   1000058eb:	test   eax,eax
   1000058ed:	je     0x100005955
   1000058ef:	xor    r9d,r9d
   1000058f2:	lea    r8,[rip+0x157]        # 0x100005a50
   1000058f9:	lea    rax,[rsp+0x30]
   1000058fe:	mov    edx,0x105
   100005903:	lea    rcx,[rsp+0x30]
   100005908:	sub    r8,rax
   10000590b:	mov    ebx,r9d
   10000590e:	xchg   ax,ax
   100005910:	lea    rax,[rdx+0x7ffffef9]
   100005917:	test   rax,rax
   10000591a:	je     0x100005941
   10000591c:	movzx  eax,WORD PTR [r8+rcx*1]
   100005921:	test   ax,ax
   100005924:	je     0x100005941
   100005926:	mov    WORD PTR [rcx],ax
   100005929:	add    rcx,0x2
   10000592d:	dec    rdx
   100005930:	jne    0x100005910
   100005932:	sub    rcx,0x2
   100005936:	mov    ebx,0x8007007a
   10000593b:	mov    WORD PTR [rcx],r9w
   10000593f:	jmp    0x10000599d
   100005941:	test   rdx,rdx
   100005944:	jne    0x10000594f
   100005946:	sub    rcx,0x2
   10000594a:	mov    ebx,0x8007007a
   10000594f:	mov    WORD PTR [rcx],r9w
   100005953:	jmp    0x10000599d
   100005955:	mov    rax,QWORD PTR [rip+0xffffffffffffc1c4]        # 0x100001b20
   10000595c:	mov    rcx,QWORD PTR [rax]
   10000595f:	mov    rax,QWORD PTR [rcx]
   100005962:	call   QWORD PTR [rax+0xd0]
   100005968:	mov    rbx,rax
   10000596b:	call   QWORD PTR [rip+0xffffffffffffc2c7]        # 0x100001c38
   100005971:	lea    r8,[rip+0xd8]        # 0x100005a50
   100005978:	mov    QWORD PTR [rsp+0x28],rbx
   10000597d:	mov    QWORD PTR [rsp+0x20],r8
   100005982:	lea    rcx,[rsp+0x30]
   100005987:	lea    r8,[rip+0xffffffffffffda42]        # 0x1000033d0
   10000598e:	mov    r9,rax
   100005991:	mov    edx,0x105
   100005996:	call   0x100005bb0
   10000599b:	mov    ebx,eax
   10000599d:	test   ebx,ebx
   10000599f:	jns    0x1000059ef
   1000059a1:	mov    ecx,ebx
   1000059a3:	call   QWORD PTR [rip+0xffffffffffffbd0f]        # 0x1000016b8
   1000059a9:	call   QWORD PTR [rip+0xffffffffffffc289]        # 0x100001c38
   1000059af:	mov    DWORD PTR [rsp+0x28],ebx
   1000059b3:	lea    rbx,[rip+0xb6]        # 0x100005a70
   1000059ba:	lea    r8,[rip+0xffffffffffffddff]        # 0x1000037c0
   1000059c1:	lea    rcx,[rsp+0x240]
   1000059c9:	mov    r9,rax
   1000059cc:	mov    edx,0x200
   1000059d1:	mov    QWORD PTR [rsp+0x20],rbx
   1000059d6:	call   0x10000eb40
   1000059db:	mov    rcx,rbx
   1000059de:	test   eax,eax
   1000059e0:	js     0x1000059ea
   1000059e2:	lea    rcx,[rsp+0x240]
   1000059ea:	call   0x100015fc0
   1000059ef:	mov    edx,0x1
   1000059f4:	lea    r8,[rsp+0x30]
   1000059f9:	lea    ecx,[rdx+0x5]
   1000059fc:	call   QWORD PTR [rip+0xffffffffffffb79e]        # 0x1000011a0
   100005a02:	mov    rbx,rax
   100005a05:	test   rax,rax
   100005a08:	je     0x100005a37
   100005a0a:	xor    r9d,r9d
   100005a0d:	xor    r8d,r8d
   100005a10:	mov    rcx,rax
   100005a13:	lea    edx,[r9+0x6]
   100005a17:	mov    QWORD PTR [rsp+0x20],0x4
   100005a20:	call   QWORD PTR [rip+0xffffffffffffb78a]        # 0x1000011b0
   100005a26:	test   rax,rax
   100005a29:	je     0x100005a2e
   100005a2b:	mov    BYTE PTR [rax],0x1
   100005a2e:	mov    rcx,rbx
   100005a31:	call   QWORD PTR [rip+0xffffffffffffb6f1]        # 0x100001128
   100005a37:	mov    rcx,QWORD PTR [rsp+0x440]
   100005a3f:	xor    rcx,rsp
   100005a42:	call   0x100002610
   100005a47:	add    rsp,0x450
   100005a4e:	pop    rbx
   100005a4f:	ret    
   100005a50:	push   rbx
   100005a51:	add    BYTE PTR [rcx+0x0],dl
   100005a54:	rex.WR add BYTE PTR [rsi],r14b
   100005a57:	add    BYTE PTR [rax],dh
   100005a59:	add    BYTE PTR [rdi+0x0],bl
   100005a5c:	push   rbx
   100005a5d:	add    BYTE PTR [rax+0x0],cl
   100005a60:	push   rbp
   100005a61:	add    BYTE PTR [rax+rax*1+0x44],dl
   100005a65:	add    BYTE PTR [rdi+0x0],cl
   100005a68:	push   rdi
   100005a69:	add    BYTE PTR [rsi+0x0],cl
   100005a6c:	add    BYTE PTR [rax],al
   100005a6e:	nop
   100005a6f:	nop
   100005a70:	push   rbx
   100005a71:	je     0x100005ae5
   100005a73:	imul   ebp,DWORD PTR [rsi+0x67],0x65706f20
   100005a7a:	jb     0x100005add
   100005a7c:	je     0x100005ae7
   100005a7e:	outs   dx,DWORD PTR ds:[rsi]
   100005a7f:	outs   dx,BYTE PTR ds:[rsi]
   100005a80:	and    BYTE PTR [rsi+0x61],ah
   100005a83:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65282065
   100005a8b:	js     0x100005af6
   100005a8d:	je     0x100005aaf
   100005a8f:	jae    0x100005b05
   100005a91:	(bad)  
   100005a92:	je     0x100005b09
   100005a94:	jae    0x100005ab6
   100005a96:	(bad)  
   100005a97:	ins    BYTE PTR es:[rdi],dx
   100005a98:	outs   dx,DWORD PTR ds:[rsi]
   100005a99:	movsxd ebp,DWORD PTR [rbx+0x29]
   100005a9c:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100005aa2:	nop
   100005aa3:	nop
   100005aa4:	nop
   100005aa5:	nop
   100005aa6:	nop
   100005aa7:	nop
   100005aa8:	nop
   100005aa9:	nop
   100005aaa:	nop
   100005aab:	nop
   100005aac:	nop
   100005aad:	nop
   100005aae:	nop
   100005aaf:	nop
   100005ab0:	mov    eax,0x1
   100005ab5:	ret    
   100005ab6:	nop
   100005ab7:	nop
   100005ab8:	nop
   100005ab9:	nop
   100005aba:	nop
   100005abb:	nop
   100005abc:	nop
   100005abd:	nop
   100005abe:	nop
   100005abf:	nop
   100005ac0:	mov    QWORD PTR [rsp+0x8],rcx
   100005ac5:	push   rbx
   100005ac6:	sub    rsp,0x20
   100005aca:	mov    rbx,rcx
   100005acd:	xor    eax,eax
   100005acf:	mov    QWORD PTR [rcx],rax
   100005ad2:	mov    rcx,QWORD PTR [rdx+0x8]
   100005ad6:	call   QWORD PTR [rdx]
   100005ad8:	mov    DWORD PTR [rbx],0x5
   100005ade:	jmp    0x100005afc
   100005ae0:	mov    rbx,QWORD PTR [rsp+0x30]
   100005ae5:	mov    DWORD PTR [rbx],0x3
   100005aeb:	mov    DWORD PTR [rbx+0x4],eax
   100005aee:	cmp    eax,0xc00000fd
   100005af3:	jne    0x100005afc
   100005af5:	call   QWORD PTR [rip+0xffffffffffffc14d]        # 0x100001c48
   100005afb:	nop
   100005afc:	mov    rax,rbx
   100005aff:	add    rsp,0x20
   100005b03:	pop    rbx
   100005b04:	ret    
   100005b05:	nop
   100005b06:	nop
   100005b07:	nop
   100005b08:	nop
   100005b09:	nop
   100005b0a:	nop
   100005b0b:	nop
   100005b0c:	nop
   100005b0d:	nop
   100005b0e:	nop
   100005b0f:	nop
   100005b10:	push   rbx
   100005b12:	sub    rsp,0x20
   100005b16:	mov    rax,QWORD PTR gs:0x30
   100005b1f:	mov    rbx,rcx
   100005b22:	mov    rcx,QWORD PTR [rip+0x23597]        # 0x1000290c0
   100005b29:	add    rax,rcx
   100005b2c:	cmp    rcx,0x1480
   100005b33:	jge    0x100005b3b
   100005b35:	call   QWORD PTR [rip+0xffffffffffffb5e5]        # 0x100001120
   100005b3b:	test   rax,rax
   100005b3e:	je     0x100005b5c
   100005b40:	mov    rdx,QWORD PTR [rax+0xd8]
   100005b47:	test   rdx,rdx
   100005b4a:	je     0x100005b5c
   100005b4c:	mov    rcx,QWORD PTR [rbx]
   100005b4f:	mov    QWORD PTR [rdx+0x400],rcx
   100005b56:	add    rsp,0x20
   100005b5a:	pop    rbx
   100005b5b:	ret    
   100005b5c:	call   QWORD PTR [rip+0xffffffffffffbfee]        # 0x100001b50
   100005b62:	mov    r11,QWORD PTR [rip+0x23557]        # 0x1000290c0
   100005b69:	mov    rax,QWORD PTR gs:0x30
   100005b72:	add    rax,r11
   100005b75:	cmp    r11,0x1480
   100005b7c:	jge    0x100005b87
   100005b7e:	mov    ecx,r11d
   100005b81:	call   QWORD PTR [rip+0xffffffffffffb599]        # 0x100001120
   100005b87:	mov    rax,QWORD PTR [rax+0xd8]
   100005b8e:	mov    rcx,QWORD PTR [rbx]
   100005b91:	mov    QWORD PTR [rax+0x400],rcx
   100005b98:	add    rsp,0x20
   100005b9c:	pop    rbx
   100005b9d:	ret    
   100005b9e:	nop
   100005b9f:	nop
   100005ba0:	nop
   100005ba1:	nop
   100005ba2:	nop
   100005ba3:	nop
   100005ba4:	nop
   100005ba5:	nop
   100005ba6:	nop
   100005ba7:	nop
   100005ba8:	nop
   100005ba9:	nop
   100005baa:	nop
   100005bab:	nop
   100005bac:	nop
   100005bad:	nop
   100005bae:	nop
   100005baf:	nop
   100005bb0:	mov    QWORD PTR [rsp+0x20],r9
   100005bb5:	push   rbx
   100005bb6:	push   rsi
   100005bb7:	sub    rsp,0x38
   100005bbb:	xor    ebx,ebx
   100005bbd:	mov    rsi,rcx
   100005bc0:	mov    eax,ebx
   100005bc2:	test   rdx,rdx
   100005bc5:	je     0x100005bd0
   100005bc7:	cmp    rdx,0x7fffffff
   100005bce:	jbe    0x100005bd5
   100005bd0:	mov    eax,0x80070057
   100005bd5:	test   eax,eax
   100005bd7:	js     0x100005c24
   100005bd9:	lea    rax,[rsp+0x70]
   100005bde:	mov    QWORD PTR [rsp+0x30],rdi
   100005be3:	lea    rdi,[rdx-0x1]
   100005be7:	mov    rdx,rdi
   100005bea:	mov    QWORD PTR [rsp+0x20],rax
   100005bef:	call   QWORD PTR [rip+0xffffffffffffb84b]        # 0x100001440
   100005bf5:	test   eax,eax
   100005bf7:	js     0x100005c14
   100005bf9:	cdqe   
   100005bfb:	cmp    rax,rdi
   100005bfe:	ja     0x100005c14
   100005c00:	jne    0x100005c1d
   100005c02:	mov    WORD PTR [rsi+rdi*2],bx
   100005c06:	mov    rdi,QWORD PTR [rsp+0x30]
   100005c0b:	mov    eax,ebx
   100005c0d:	add    rsp,0x38
   100005c11:	pop    rsi
   100005c12:	pop    rbx
   100005c13:	ret    
   100005c14:	mov    WORD PTR [rsi+rdi*2],bx
   100005c18:	mov    ebx,0x8007007a
   100005c1d:	mov    rdi,QWORD PTR [rsp+0x30]
   100005c22:	mov    eax,ebx
   100005c24:	add    rsp,0x38
   100005c28:	pop    rsi
   100005c29:	pop    rbx
   100005c2a:	ret    
   100005c2b:	nop
   100005c2c:	nop
   100005c2d:	nop
   100005c2e:	nop
   100005c2f:	nop
   100005c30:	nop
   100005c31:	nop
   100005c32:	nop
   100005c33:	nop
   100005c34:	nop
   100005c35:	nop
   100005c36:	nop
   100005c37:	nop
   100005c38:	nop
   100005c39:	nop
   100005c3a:	nop
   100005c3b:	nop
   100005c3c:	nop
   100005c3d:	nop
   100005c3e:	nop
   100005c3f:	nop
   100005c40:	mov    QWORD PTR [rsp+0x18],rbx
   100005c45:	push   rsi
   100005c46:	push   rdi
   100005c47:	push   r12
   100005c49:	push   r14
   100005c4b:	push   r15
   100005c4d:	sub    rsp,0x20
   100005c51:	xor    esi,esi
   100005c53:	or     r12d,0xffffffff
   100005c57:	mov    rdi,rdx
   100005c5a:	mov    r15,rcx
   100005c5d:	mov    ebx,esi
   100005c5f:	test   rdx,rdx
   100005c62:	jne    0x100005c6c
   100005c64:	mov    rbx,QWORD PTR [rcx]
   100005c67:	jmp    0x100005d4a
   100005c6c:	mov    rcx,QWORD PTR [rcx]
   100005c6f:	test   rcx,rcx
   100005c72:	je     0x100005d4a
   100005c78:	cmp    rcx,QWORD PTR [r15+0x8]
   100005c7c:	je     0x100005d2c
   100005c82:	mov    QWORD PTR [rsp+0x50],rbp
   100005c87:	mov    rbp,QWORD PTR [r15+0x10]
   100005c8b:	call   QWORD PTR [rip+0xffffffffffffbee7]        # 0x100001b78
   100005c91:	mov    edx,eax
   100005c93:	xor    eax,eax
   100005c95:	lock cmpxchg DWORD PTR [rbp+0x10],edx
   100005c9a:	je     0x100005ca5
   100005c9c:	lea    rcx,[rbp+0x10]
   100005ca0:	call   0x100006260
   100005ca5:	mov    rbx,QWORD PTR [rdi+0x18]
   100005ca9:	cmp    rbx,rbp
   100005cac:	je     0x100005cb9
   100005cae:	test   rbx,rbx
   100005cb1:	je     0x100005cb9
   100005cb3:	add    rbx,0xfffffffffffffff0
   100005cb7:	jmp    0x100005cbc
   100005cb9:	mov    rbx,rsi
   100005cbc:	test   rbx,rbx
   100005cbf:	je     0x100005d09
   100005cc1:	mov    ecx,DWORD PTR [rbx+0x20]
   100005cc4:	test   ecx,ecx
   100005cc6:	je     0x100005ced
   100005cc8:	nop    DWORD PTR [rax+rax*1+0x0]
   100005cd0:	lea    edx,[rcx+0x1]
   100005cd3:	mov    eax,ecx
   100005cd5:	lock cmpxchg DWORD PTR [rbx+0x20],edx
   100005cda:	cmp    ecx,eax
   100005cdc:	je     0x100005ce9
   100005cde:	pause  
   100005ce0:	mov    ecx,DWORD PTR [rbx+0x20]
   100005ce3:	test   ecx,ecx
   100005ce5:	jne    0x100005cd0
   100005ce7:	jmp    0x100005ced
   100005ce9:	test   edx,edx
   100005ceb:	jne    0x100005d09
   100005ced:	mov    rbx,QWORD PTR [rbx+0x18]
   100005cf1:	cmp    rbx,rbp
   100005cf4:	je     0x100005d01
   100005cf6:	test   rbx,rbx
   100005cf9:	je     0x100005d01
   100005cfb:	add    rbx,0xfffffffffffffff0
   100005cff:	jmp    0x100005d04
   100005d01:	mov    rbx,rsi
   100005d04:	test   rbx,rbx
   100005d07:	jne    0x100005cc1
   100005d09:	mov    DWORD PTR [rbp+0x10],esi
   100005d0c:	mov    eax,r12d
   100005d0f:	mov    QWORD PTR [r15],rbx
   100005d12:	lock xadd DWORD PTR [rdi+0x20],eax
   100005d17:	mov    rbp,QWORD PTR [rsp+0x50]
   100005d1c:	dec    eax
   100005d1e:	jne    0x100005d4a
   100005d20:	cmp    QWORD PTR [rdi+0x18],rsi
   100005d24:	je     0x100005d4a
   100005d26:	lea    rcx,[rdi+0x10]
   100005d2a:	jmp    0x100005d45
   100005d2c:	mov    QWORD PTR [r15],rsi
   100005d2f:	add    rcx,0x10
   100005d33:	mov    eax,r12d
   100005d36:	lock xadd DWORD PTR [rcx+0x10],eax
   100005d3b:	dec    eax
   100005d3d:	jne    0x100005d4a
   100005d3f:	cmp    QWORD PTR [rcx+0x8],rbx
   100005d43:	je     0x100005d4a
   100005d45:	call   0x100006430
   100005d4a:	test   rbx,rbx
   100005d4d:	je     0x100005e67
   100005d53:	test   BYTE PTR [rbx+0x5a0],0x4
   100005d5a:	je     0x100005e67
   100005d60:	mov    rcx,QWORD PTR [r15]
   100005d63:	test   rcx,rcx
   100005d66:	je     0x100005e52
   100005d6c:	cmp    rcx,QWORD PTR [r15+0x8]
   100005d70:	je     0x100005e35
   100005d76:	mov    rdi,QWORD PTR [r15+0x10]
   100005d7a:	call   QWORD PTR [rip+0xffffffffffffbdf8]        # 0x100001b78
   100005d80:	mov    edx,eax
   100005d82:	xor    eax,eax
   100005d84:	lock cmpxchg DWORD PTR [rdi+0x10],edx
   100005d89:	je     0x100005d94
   100005d8b:	lea    rcx,[rdi+0x10]
   100005d8f:	call   0x100006260
   100005d94:	mov    rdx,QWORD PTR [rbx+0x18]
   100005d98:	cmp    rdx,rdi
   100005d9b:	je     0x100005da8
   100005d9d:	test   rdx,rdx
   100005da0:	je     0x100005da8
   100005da2:	add    rdx,0xfffffffffffffff0
   100005da6:	jmp    0x100005dab
   100005da8:	mov    rdx,rsi
   100005dab:	test   rdx,rdx
   100005dae:	je     0x100005dfc
   100005db0:	mov    ecx,DWORD PTR [rdx+0x20]
   100005db3:	test   ecx,ecx
   100005db5:	je     0x100005de0
   100005db7:	nop    WORD PTR [rax+rax*1+0x0]
   100005dc0:	lea    r8d,[rcx+0x1]
   100005dc4:	mov    eax,ecx
   100005dc6:	lock cmpxchg DWORD PTR [rdx+0x20],r8d
   100005dcc:	cmp    ecx,eax
   100005dce:	je     0x100005ddb
   100005dd0:	pause  
   100005dd2:	mov    ecx,DWORD PTR [rdx+0x20]
   100005dd5:	test   ecx,ecx
   100005dd7:	jne    0x100005dc0
   100005dd9:	jmp    0x100005de0
   100005ddb:	test   r8d,r8d
   100005dde:	jne    0x100005dfc
   100005de0:	mov    rdx,QWORD PTR [rdx+0x18]
   100005de4:	cmp    rdx,rdi
   100005de7:	je     0x100005df4
   100005de9:	test   rdx,rdx
   100005dec:	je     0x100005df4
   100005dee:	add    rdx,0xfffffffffffffff0
   100005df2:	jmp    0x100005df7
   100005df4:	mov    rdx,rsi
   100005df7:	test   rdx,rdx
   100005dfa:	jne    0x100005db0
   100005dfc:	mov    DWORD PTR [rdi+0x10],esi
   100005dff:	mov    rsi,rdx
   100005e02:	mov    QWORD PTR [r15],rdx
   100005e05:	lock xadd DWORD PTR [rbx+0x20],r12d
   100005e0b:	dec    r12d
   100005e0e:	jne    0x100005e52
   100005e10:	cmp    QWORD PTR [rbx+0x18],0x0
   100005e15:	je     0x100005e52
   100005e17:	lea    rcx,[rbx+0x10]
   100005e1b:	call   0x100006430
   100005e20:	mov    rax,rsi
   100005e23:	mov    rbx,QWORD PTR [rsp+0x60]
   100005e28:	add    rsp,0x20
   100005e2c:	pop    r15
   100005e2e:	pop    r14
   100005e30:	pop    r12
   100005e32:	pop    rdi
   100005e33:	pop    rsi
   100005e34:	ret    
   100005e35:	mov    QWORD PTR [r15],rsi
   100005e38:	add    rcx,0x10
   100005e3c:	lock xadd DWORD PTR [rcx+0x10],r12d
   100005e42:	dec    r12d
   100005e45:	jne    0x100005e52
   100005e47:	cmp    QWORD PTR [rcx+0x8],rsi
   100005e4b:	je     0x100005e52
   100005e4d:	call   0x100006430
   100005e52:	mov    rax,rsi
   100005e55:	mov    rbx,QWORD PTR [rsp+0x60]
   100005e5a:	add    rsp,0x20
   100005e5e:	pop    r15
   100005e60:	pop    r14
   100005e62:	pop    r12
   100005e64:	pop    rdi
   100005e65:	pop    rsi
   100005e66:	ret    
   100005e67:	mov    rax,rbx
   100005e6a:	mov    rbx,QWORD PTR [rsp+0x60]
   100005e6f:	add    rsp,0x20
   100005e73:	pop    r15
   100005e75:	pop    r14
   100005e77:	pop    r12
   100005e79:	pop    rdi
   100005e7a:	pop    rsi
   100005e7b:	ret    
   100005e7c:	nop
   100005e7d:	nop
   100005e7e:	nop
   100005e7f:	nop
   100005e80:	nop
   100005e81:	nop
   100005e82:	nop
   100005e83:	nop
   100005e84:	nop
   100005e85:	nop
   100005e86:	nop
   100005e87:	nop
   100005e88:	nop
   100005e89:	nop
   100005e8a:	nop
   100005e8b:	nop
   100005e8c:	nop
   100005e8d:	nop
   100005e8e:	nop
   100005e8f:	nop
   100005e90:	push   rbx
   100005e92:	push   r15
   100005e94:	sub    rsp,0x28
   100005e98:	mov    r15,rcx
   100005e9b:	call   0x100005c40
   100005ea0:	mov    rbx,rax
   100005ea3:	test   rax,rax
   100005ea6:	je     0x1000060b5
   100005eac:	mov    QWORD PTR [rsp+0x40],rbp
   100005eb1:	mov    QWORD PTR [rsp+0x48],rsi
   100005eb6:	mov    QWORD PTR [rsp+0x58],rdi
   100005ebb:	mov    QWORD PTR [rsp+0x20],r14
   100005ec0:	xor    ebp,ebp
   100005ec2:	test   BYTE PTR [rbx+0x5a0],0x10
   100005ec9:	je     0x10000609e
   100005ecf:	mov    rcx,QWORD PTR [r15]
   100005ed2:	mov    rdi,rbp
   100005ed5:	test   rcx,rcx
   100005ed8:	je     0x100005fa5
   100005ede:	cmp    rcx,QWORD PTR [r15+0x8]
   100005ee2:	je     0x100005f87
   100005ee8:	mov    rsi,QWORD PTR [r15+0x10]
   100005eec:	call   QWORD PTR [rip+0xffffffffffffbc86]        # 0x100001b78
   100005ef2:	mov    edx,eax
   100005ef4:	xor    eax,eax
   100005ef6:	lock cmpxchg DWORD PTR [rsi+0x10],edx
   100005efb:	je     0x100005f06
   100005efd:	lea    rcx,[rsi+0x10]
   100005f01:	call   0x100006260
   100005f06:	mov    rdi,QWORD PTR [rbx+0x18]
   100005f0a:	cmp    rdi,rsi
   100005f0d:	je     0x100005f1a
   100005f0f:	test   rdi,rdi
   100005f12:	je     0x100005f1a
   100005f14:	add    rdi,0xfffffffffffffff0
   100005f18:	jmp    0x100005f1d
   100005f1a:	mov    rdi,rbp
   100005f1d:	test   rdi,rdi
   100005f20:	je     0x100005f69
   100005f22:	mov    ecx,DWORD PTR [rdi+0x20]
   100005f25:	test   ecx,ecx
   100005f27:	je     0x100005f4d
   100005f29:	nop    DWORD PTR [rax+0x0]
   100005f30:	lea    edx,[rcx+0x1]
   100005f33:	mov    eax,ecx
   100005f35:	lock cmpxchg DWORD PTR [rdi+0x20],edx
   100005f3a:	cmp    ecx,eax
   100005f3c:	je     0x100005f49
   100005f3e:	pause  
   100005f40:	mov    ecx,DWORD PTR [rdi+0x20]
   100005f43:	test   ecx,ecx
   100005f45:	jne    0x100005f30
   100005f47:	jmp    0x100005f4d
   100005f49:	test   edx,edx
   100005f4b:	jne    0x100005f69
   100005f4d:	mov    rdi,QWORD PTR [rdi+0x18]
   100005f51:	cmp    rdi,rsi
   100005f54:	je     0x100005f61
   100005f56:	test   rdi,rdi
   100005f59:	je     0x100005f61
   100005f5b:	add    rdi,0xfffffffffffffff0
   100005f5f:	jmp    0x100005f64
   100005f61:	mov    rdi,rbp
   100005f64:	test   rdi,rdi
   100005f67:	jne    0x100005f22
   100005f69:	mov    DWORD PTR [rsi+0x10],ebp
   100005f6c:	or     eax,0xffffffff
   100005f6f:	mov    QWORD PTR [r15],rdi
   100005f72:	lock xadd DWORD PTR [rbx+0x20],eax
   100005f77:	dec    eax
   100005f79:	jne    0x100005fa5
   100005f7b:	cmp    QWORD PTR [rbx+0x18],rbp
   100005f7f:	je     0x100005fa5
   100005f81:	lea    rcx,[rbx+0x10]
   100005f85:	jmp    0x100005fa0
   100005f87:	add    rcx,0x10
   100005f8b:	mov    QWORD PTR [r15],rbp
   100005f8e:	or     eax,0xffffffff
   100005f91:	lock xadd DWORD PTR [rcx+0x10],eax
   100005f96:	dec    eax
   100005f98:	jne    0x100005fa5
   100005f9a:	cmp    QWORD PTR [rcx+0x8],rdi
   100005f9e:	je     0x100005fa5
   100005fa0:	call   0x100006430
   100005fa5:	mov    rbx,rdi
   100005fa8:	test   rdi,rdi
   100005fab:	je     0x100006095
   100005fb1:	test   BYTE PTR [rdi+0x5a0],0x4
   100005fb8:	je     0x100006095
   100005fbe:	mov    rcx,QWORD PTR [r15]
   100005fc1:	mov    rbx,rbp
   100005fc4:	test   rcx,rcx
   100005fc7:	je     0x100006095
   100005fcd:	cmp    rcx,QWORD PTR [r15+0x8]
   100005fd1:	je     0x100006077
   100005fd7:	mov    rsi,QWORD PTR [r15+0x10]
   100005fdb:	call   QWORD PTR [rip+0xffffffffffffbb97]        # 0x100001b78
   100005fe1:	mov    edx,eax
   100005fe3:	xor    eax,eax
   100005fe5:	lock cmpxchg DWORD PTR [rsi+0x10],edx
   100005fea:	je     0x100005ff5
   100005fec:	lea    rcx,[rsi+0x10]
   100005ff0:	call   0x100006260
   100005ff5:	mov    rbx,QWORD PTR [rdi+0x18]
   100005ff9:	cmp    rbx,rsi
   100005ffc:	je     0x100006009
   100005ffe:	test   rbx,rbx
   100006001:	je     0x100006009
   100006003:	add    rbx,0xfffffffffffffff0
   100006007:	jmp    0x10000600c
   100006009:	mov    rbx,rbp
   10000600c:	test   rbx,rbx
   10000600f:	je     0x100006059
   100006011:	mov    ecx,DWORD PTR [rbx+0x20]
   100006014:	test   ecx,ecx
   100006016:	je     0x10000603d
   100006018:	nop    DWORD PTR [rax+rax*1+0x0]
   100006020:	lea    edx,[rcx+0x1]
   100006023:	mov    eax,ecx
   100006025:	lock cmpxchg DWORD PTR [rbx+0x20],edx
   10000602a:	cmp    ecx,eax
   10000602c:	je     0x100006039
   10000602e:	pause  
   100006030:	mov    ecx,DWORD PTR [rbx+0x20]
   100006033:	test   ecx,ecx
   100006035:	jne    0x100006020
   100006037:	jmp    0x10000603d
   100006039:	test   edx,edx
   10000603b:	jne    0x100006059
   10000603d:	mov    rbx,QWORD PTR [rbx+0x18]
   100006041:	cmp    rbx,rsi
   100006044:	je     0x100006051
   100006046:	test   rbx,rbx
   100006049:	je     0x100006051
   10000604b:	add    rbx,0xfffffffffffffff0
   10000604f:	jmp    0x100006054
   100006051:	mov    rbx,rbp
   100006054:	test   rbx,rbx
   100006057:	jne    0x100006011
   100006059:	mov    DWORD PTR [rsi+0x10],ebp
   10000605c:	or     eax,0xffffffff
   10000605f:	mov    QWORD PTR [r15],rbx
   100006062:	lock xadd DWORD PTR [rdi+0x20],eax
   100006067:	dec    eax
   100006069:	jne    0x100006095
   10000606b:	cmp    QWORD PTR [rdi+0x18],rbp
   10000606f:	je     0x100006095
   100006071:	lea    rcx,[rdi+0x10]
   100006075:	jmp    0x100006090
   100006077:	add    rcx,0x10
   10000607b:	mov    QWORD PTR [r15],rbp
   10000607e:	or     eax,0xffffffff
   100006081:	lock xadd DWORD PTR [rcx+0x10],eax
   100006086:	dec    eax
   100006088:	jne    0x100006095
   10000608a:	cmp    QWORD PTR [rcx+0x8],rbx
   10000608e:	je     0x100006095
   100006090:	call   0x100006430
   100006095:	test   rbx,rbx
   100006098:	jne    0x100005ec2
   10000609e:	mov    r14,QWORD PTR [rsp+0x20]
   1000060a3:	mov    rsi,QWORD PTR [rsp+0x48]
   1000060a8:	mov    rbp,QWORD PTR [rsp+0x40]
   1000060ad:	mov    rdi,QWORD PTR [rsp+0x58]
   1000060b2:	mov    rax,rbx
   1000060b5:	add    rsp,0x28
   1000060b9:	pop    r15
   1000060bb:	pop    rbx
   1000060bc:	ret    
   1000060bd:	nop
   1000060be:	nop
   1000060bf:	nop
   1000060c0:	nop
   1000060c1:	nop
   1000060c2:	nop
   1000060c3:	nop
   1000060c4:	nop
   1000060c5:	nop
   1000060c6:	nop
   1000060c7:	nop
   1000060c8:	nop
   1000060c9:	nop
   1000060ca:	nop
   1000060cb:	nop
   1000060cc:	nop
   1000060cd:	nop
   1000060ce:	nop
   1000060cf:	nop
   1000060d0:	mov    QWORD PTR [rsp+0x8],rcx
   1000060d5:	sub    rsp,0x38
   1000060d9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1000060e2:	add    rsp,0x38
   1000060e6:	jmp    0x100006550
   1000060eb:	nop
   1000060ec:	nop
   1000060ed:	nop
   1000060ee:	nop
   1000060ef:	nop
   1000060f0:	nop
   1000060f1:	nop
   1000060f2:	nop
   1000060f3:	nop
   1000060f4:	nop
   1000060f5:	nop
   1000060f6:	nop
   1000060f7:	nop
   1000060f8:	nop
   1000060f9:	nop
   1000060fa:	nop
   1000060fb:	nop
   1000060fc:	nop
   1000060fd:	nop
   1000060fe:	nop
   1000060ff:	nop
   100006100:	mov    QWORD PTR [rsp+0x10],rbx
   100006105:	push   rdi
   100006106:	sub    rsp,0x20
   10000610a:	mov    rbx,rcx
   10000610d:	call   QWORD PTR [rip+0xffffffffffffba65]        # 0x100001b78
   100006113:	mov    edx,eax
   100006115:	xor    eax,eax
   100006117:	lock cmpxchg DWORD PTR [rbx+0x10],edx
   10000611c:	je     0x100006127
   10000611e:	lea    rcx,[rbx+0x10]
   100006122:	call   0x100006260
   100006127:	mov    rcx,QWORD PTR [rbx+0x8]
   10000612b:	xor    r9d,r9d
   10000612e:	cmp    rcx,rbx
   100006131:	je     0x10000613e
   100006133:	test   rcx,rcx
   100006136:	je     0x10000613e
   100006138:	add    rcx,0xfffffffffffffff0
   10000613c:	jmp    0x100006141
   10000613e:	mov    rcx,r9
   100006141:	test   rcx,rcx
   100006144:	je     0x10000618c
   100006146:	mov    edx,DWORD PTR [rcx+0x20]
   100006149:	test   edx,edx
   10000614b:	je     0x100006170
   10000614d:	nop    DWORD PTR [rax]
   100006150:	lea    r8d,[rdx+0x1]
   100006154:	mov    eax,edx
   100006156:	lock cmpxchg DWORD PTR [rcx+0x20],r8d
   10000615c:	cmp    edx,eax
   10000615e:	je     0x10000616b
   100006160:	pause  
   100006162:	mov    edx,DWORD PTR [rcx+0x20]
   100006165:	test   edx,edx
   100006167:	jne    0x100006150
   100006169:	jmp    0x100006170
   10000616b:	test   r8d,r8d
   10000616e:	jne    0x10000618c
   100006170:	mov    rcx,QWORD PTR [rcx+0x18]
   100006174:	cmp    rcx,rbx
   100006177:	je     0x100006184
   100006179:	test   rcx,rcx
   10000617c:	je     0x100006184
   10000617e:	add    rcx,0xfffffffffffffff0
   100006182:	jmp    0x100006187
   100006184:	mov    rcx,r9
   100006187:	test   rcx,rcx
   10000618a:	jne    0x100006146
   10000618c:	mov    DWORD PTR [rbx+0x10],r9d
   100006190:	mov    rbx,QWORD PTR [rsp+0x38]
   100006195:	mov    rax,rcx
   100006198:	add    rsp,0x20
   10000619c:	pop    rdi
   10000619d:	ret    
   10000619e:	nop
   10000619f:	nop
   1000061a0:	nop
   1000061a1:	nop
   1000061a2:	nop
   1000061a3:	nop
   1000061a4:	nop
   1000061a5:	nop
   1000061a6:	nop
   1000061a7:	nop
   1000061a8:	nop
   1000061a9:	nop
   1000061aa:	nop
   1000061ab:	nop
   1000061ac:	nop
   1000061ad:	nop
   1000061ae:	nop
   1000061af:	nop
   1000061b0:	mov    QWORD PTR [rsp+0x10],rbx
   1000061b5:	push   rdi
   1000061b6:	sub    rsp,0x20
   1000061ba:	mov    rbx,rcx
   1000061bd:	call   QWORD PTR [rip+0xffffffffffffb9b5]        # 0x100001b78
   1000061c3:	mov    edx,eax
   1000061c5:	xor    eax,eax
   1000061c7:	lock cmpxchg DWORD PTR [rbx+0x10],edx
   1000061cc:	je     0x1000061d7
   1000061ce:	lea    rcx,[rbx+0x10]
   1000061d2:	call   0x100006260
   1000061d7:	xor    r9d,r9d
   1000061da:	cmp    QWORD PTR [rbx+0x8],rbx
   1000061de:	je     0x1000061ee
   1000061e0:	mov    rcx,QWORD PTR [rbx]
   1000061e3:	test   rcx,rcx
   1000061e6:	je     0x1000061ee
   1000061e8:	add    rcx,0xfffffffffffffff0
   1000061ec:	jmp    0x1000061f1
   1000061ee:	mov    rcx,r9
   1000061f1:	test   rcx,rcx
   1000061f4:	je     0x10000623c
   1000061f6:	mov    edx,DWORD PTR [rcx+0x20]
   1000061f9:	test   edx,edx
   1000061fb:	je     0x100006220
   1000061fd:	nop    DWORD PTR [rax]
   100006200:	lea    r8d,[rdx+0x1]
   100006204:	mov    eax,edx
   100006206:	lock cmpxchg DWORD PTR [rcx+0x20],r8d
   10000620c:	cmp    edx,eax
   10000620e:	je     0x10000621b
   100006210:	pause  
   100006212:	mov    edx,DWORD PTR [rcx+0x20]
   100006215:	test   edx,edx
   100006217:	jne    0x100006200
   100006219:	jmp    0x100006220
   10000621b:	test   r8d,r8d
   10000621e:	jne    0x10000623c
   100006220:	mov    rcx,QWORD PTR [rcx+0x10]
   100006224:	cmp    rcx,rbx
   100006227:	je     0x100006234
   100006229:	test   rcx,rcx
   10000622c:	je     0x100006234
   10000622e:	add    rcx,0xfffffffffffffff0
   100006232:	jmp    0x100006237
   100006234:	mov    rcx,r9
   100006237:	test   rcx,rcx
   10000623a:	jne    0x1000061f6
   10000623c:	mov    DWORD PTR [rbx+0x10],r9d
   100006240:	mov    rbx,QWORD PTR [rsp+0x38]
   100006245:	mov    rax,rcx
   100006248:	add    rsp,0x20
   10000624c:	pop    rdi
   10000624d:	ret    
   10000624e:	nop
   10000624f:	nop
   100006250:	nop
   100006251:	nop
   100006252:	nop
   100006253:	nop
   100006254:	nop
   100006255:	nop
   100006256:	nop
   100006257:	nop
   100006258:	nop
   100006259:	nop
   10000625a:	nop
   10000625b:	nop
   10000625c:	nop
   10000625d:	nop
   10000625e:	nop
   10000625f:	nop
   100006260:	mov    QWORD PTR [rsp+0x8],rbx
   100006265:	mov    QWORD PTR [rsp+0x10],rbp
   10000626a:	mov    QWORD PTR [rsp+0x20],rsi
   10000626f:	push   rdi
   100006270:	sub    rsp,0x50
   100006274:	mov    rdi,rcx
   100006277:	mov    rcx,QWORD PTR [rip+0x22e42]        # 0x1000290c0
   10000627e:	mov    DWORD PTR [rsp+0x20],0xd0
   100006286:	mov    rax,QWORD PTR gs:0x30
   10000628f:	mov    esi,edx
   100006291:	add    rax,rcx
   100006294:	cmp    rcx,0x1480
   10000629b:	jge    0x1000062a3
   10000629d:	call   QWORD PTR [rip+0xffffffffffffae7d]        # 0x100001120
   1000062a3:	test   rax,rax
   1000062a6:	je     0x1000062b4
   1000062a8:	mov    rax,QWORD PTR [rax+0xd8]
   1000062af:	test   rax,rax
   1000062b2:	jne    0x1000062e6
   1000062b4:	call   QWORD PTR [rip+0xffffffffffffb896]        # 0x100001b50
   1000062ba:	mov    r11,QWORD PTR [rip+0x22dff]        # 0x1000290c0
   1000062c1:	mov    rax,QWORD PTR gs:0x30
   1000062ca:	add    rax,r11
   1000062cd:	cmp    r11,0x1480
   1000062d4:	jge    0x1000062df
   1000062d6:	mov    ecx,r11d
   1000062d9:	call   QWORD PTR [rip+0xffffffffffffae41]        # 0x100001120
   1000062df:	mov    rax,QWORD PTR [rax+0xd8]
   1000062e6:	mov    QWORD PTR [rsp+0x28],rax
   1000062eb:	test   rax,rax
   1000062ee:	je     0x1000062f9
   1000062f0:	mov    rdx,QWORD PTR [rax+0x388]
   1000062f7:	jmp    0x1000062fb
   1000062f9:	xor    edx,edx
   1000062fb:	mov    rax,QWORD PTR [rip+0xffffffffffffbcb6]        # 0x100001fb8
   100006302:	xor    ecx,ecx
   100006304:	mov    QWORD PTR [rsp+0x30],rdx
   100006309:	mov    QWORD PTR [rsp+0x38],rcx
   10000630e:	mov    DWORD PTR [rsp+0x40],ecx
   100006312:	test   BYTE PTR [rax],0x1
   100006315:	je     0x100006393
   100006317:	test   rdx,rdx
   10000631a:	je     0x100006393
   10000631c:	lea    rcx,[rdx+0x6b8]
   100006323:	mov    QWORD PTR [rsp+0x38],rcx
   100006328:	test   rcx,rcx
   10000632b:	je     0x100006393
   10000632d:	inc    QWORD PTR [rcx+0x1a08]
   100006334:	mov    rcx,QWORD PTR [rsp+0x38]
   100006339:	mov    edx,0xd0
   10000633e:	call   QWORD PTR [rip+0xffffffffffffb82c]        # 0x100001b70
   100006344:	mov    rcx,QWORD PTR [rsp+0x38]
   100006349:	mov    edx,0xd0
   10000634e:	mov    rbx,rax
   100006351:	call   QWORD PTR [rip+0xffffffffffffb811]        # 0x100001b68
   100006357:	mov    r11,rax
   10000635a:	test   rbx,rbx
   10000635d:	je     0x10000638e
   10000635f:	test   rax,rax
   100006362:	je     0x10000638e
   100006364:	mov    rcx,QWORD PTR [rsp+0x38]
   100006369:	xor    edx,edx
   10000636b:	mov    rax,rbx
   10000636e:	div    r11
   100006371:	mov    edx,0xfa
   100006376:	mov    ebx,0x61a8
   10000637b:	shr    rax,1
   10000637e:	cmp    rax,rdx
   100006381:	cmova  rdx,rax
   100006385:	cmp    rdx,rbx
   100006388:	cmovb  rbx,rdx
   10000638c:	jmp    0x100006398
   10000638e:	mov    rcx,QWORD PTR [rsp+0x38]
   100006393:	mov    ebx,0xfa
   100006398:	mov    ebp,0x3b9aca00
   10000639d:	nop    DWORD PTR [rax]
   1000063a0:	xor    edx,edx
   1000063a2:	test   rbx,rbx
   1000063a5:	je     0x1000063bc
   1000063a7:	mov    rax,rbx
   1000063aa:	mov    rdx,rbx
   1000063ad:	nop    DWORD PTR [rax]
   1000063b0:	pause  
   1000063b2:	dec    rax
   1000063b5:	jne    0x1000063b0
   1000063b7:	mov    rcx,QWORD PTR [rsp+0x38]
   1000063bc:	test   rcx,rcx
   1000063bf:	je     0x1000063c8
   1000063c1:	add    QWORD PTR [rcx+0x1a00],rdx
   1000063c8:	xor    eax,eax
   1000063ca:	lock cmpxchg DWORD PTR [rdi],esi
   1000063ce:	je     0x10000640e
   1000063d0:	mov    rcx,QWORD PTR [rsp+0x38]
   1000063d5:	lea    rax,[rbx+rbx*1]
   1000063d9:	cmp    rax,rbp
   1000063dc:	mov    rbx,rax
   1000063df:	cmova  rbx,rbp
   1000063e3:	inc    DWORD PTR [rsp+0x40]
   1000063e7:	test   rcx,rcx
   1000063ea:	je     0x1000063f9
   1000063ec:	movsxd rax,DWORD PTR [rsp+0x20]
   1000063f1:	shl    rax,0x5
   1000063f5:	inc    DWORD PTR [rax+rcx*1+0x18]
   1000063f9:	lea    rdx,[rsp+0x20]
   1000063fe:	mov    rcx,rdi
   100006401:	call   QWORD PTR [rip+0xffffffffffffb759]        # 0x100001b60
   100006407:	mov    rcx,QWORD PTR [rsp+0x38]
   10000640c:	jmp    0x1000063a0
   10000640e:	mov    rbx,QWORD PTR [rsp+0x60]
   100006413:	mov    rbp,QWORD PTR [rsp+0x68]
   100006418:	mov    rsi,QWORD PTR [rsp+0x78]
   10000641d:	add    rsp,0x50
   100006421:	pop    rdi
   100006422:	ret    
   100006423:	nop
   100006424:	nop
   100006425:	nop
   100006426:	nop
   100006427:	nop
   100006428:	nop
   100006429:	nop
   10000642a:	nop
   10000642b:	nop
   10000642c:	nop
   10000642d:	nop
   10000642e:	nop
   10000642f:	nop
   100006430:	mov    QWORD PTR [rsp+0x10],rbx
   100006435:	mov    QWORD PTR [rsp+0x18],rbp
   10000643a:	mov    QWORD PTR [rsp+0x20],rsi
   10000643f:	push   rdi
   100006440:	sub    rsp,0x20
   100006444:	xor    ebp,ebp
   100006446:	lea    rbx,[rcx-0x10]
   10000644a:	test   rcx,rcx
   10000644d:	jne    0x100006451
   10000644f:	mov    ebx,ebp
   100006451:	mov    rsi,QWORD PTR [rcx+0x18]
   100006455:	call   QWORD PTR [rip+0xffffffffffffb71d]        # 0x100001b78
   10000645b:	mov    edx,eax
   10000645d:	xor    eax,eax
   10000645f:	lock cmpxchg DWORD PTR [rsi+0x10],edx
   100006464:	je     0x10000646f
   100006466:	lea    rcx,[rsi+0x10]
   10000646a:	call   0x100006260
   10000646f:	mov    rax,QWORD PTR [rbx+0x10]
   100006473:	mov    rcx,QWORD PTR [rbx+0x18]
   100006477:	mov    QWORD PTR [rax+0x8],rcx
   10000647b:	mov    QWORD PTR [rcx],rax
   10000647e:	mov    QWORD PTR [rbx+0x18],rbp
   100006482:	mov    QWORD PTR [rbx+0x10],rbp
   100006486:	dec    DWORD PTR [rsi+0x14]
   100006489:	mov    DWORD PTR [rsi+0x10],ebp
   10000648c:	mov    rsi,QWORD PTR [rsp+0x48]
   100006491:	mov    QWORD PTR [rbx+0x28],rbp
   100006495:	mov    rbx,QWORD PTR [rsp+0x38]
   10000649a:	mov    rbp,QWORD PTR [rsp+0x40]
   10000649f:	add    rsp,0x20
   1000064a3:	pop    rdi
   1000064a4:	ret    
   1000064a5:	nop
   1000064a6:	nop
   1000064a7:	nop
   1000064a8:	nop
   1000064a9:	nop
   1000064aa:	nop
   1000064ab:	nop
   1000064ac:	nop
   1000064ad:	nop
   1000064ae:	nop
   1000064af:	nop
   1000064b0:	mov    QWORD PTR [rsp+0x10],rbx
   1000064b5:	mov    QWORD PTR [rsp+0x18],rsi
   1000064ba:	push   rdi
   1000064bb:	sub    rsp,0x20
   1000064bf:	mov    rbx,rcx
   1000064c2:	mov    rcx,QWORD PTR [rcx]
   1000064c5:	or     edi,0xffffffff
   1000064c8:	xor    esi,esi
   1000064ca:	test   rcx,rcx
   1000064cd:	je     0x1000064ec
   1000064cf:	add    rcx,0x10
   1000064d3:	mov    eax,edi
   1000064d5:	lock xadd DWORD PTR [rcx+0x10],eax
   1000064da:	dec    eax
   1000064dc:	jne    0x1000064e9
   1000064de:	cmp    QWORD PTR [rcx+0x8],rsi
   1000064e2:	je     0x1000064e9
   1000064e4:	call   0x100006430
   1000064e9:	mov    QWORD PTR [rbx],rsi
   1000064ec:	mov    rcx,QWORD PTR [rbx+0x8]
   1000064f0:	test   rcx,rcx
   1000064f3:	je     0x100006511
   1000064f5:	add    rcx,0x10
   1000064f9:	lock xadd DWORD PTR [rcx+0x10],edi
   1000064fe:	dec    edi
   100006500:	jne    0x10000650d
   100006502:	cmp    QWORD PTR [rcx+0x8],rsi
   100006506:	je     0x10000650d
   100006508:	call   0x100006430
   10000650d:	mov    QWORD PTR [rbx+0x8],rsi
   100006511:	mov    rcx,QWORD PTR [rbx+0x18]
   100006515:	test   rcx,rcx
   100006518:	je     0x10000652a
   10000651a:	mov    edx,DWORD PTR [rbx+0x20]
   10000651d:	call   QWORD PTR [rip+0xffffffffffffb705]        # 0x100001c28
   100006523:	mov    QWORD PTR [rbx+0x18],rsi
   100006527:	mov    DWORD PTR [rbx+0x20],esi
   10000652a:	mov    QWORD PTR [rbx+0x10],rsi
   10000652e:	mov    rbx,QWORD PTR [rsp+0x38]
   100006533:	mov    rsi,QWORD PTR [rsp+0x40]
   100006538:	add    rsp,0x20
   10000653c:	pop    rdi
   10000653d:	ret    
   10000653e:	nop
   10000653f:	nop
   100006540:	nop
   100006541:	nop
   100006542:	nop
   100006543:	nop
   100006544:	nop
   100006545:	nop
   100006546:	nop
   100006547:	nop
   100006548:	nop
   100006549:	nop
   10000654a:	nop
   10000654b:	nop
   10000654c:	nop
   10000654d:	nop
   10000654e:	nop
   10000654f:	nop
   100006550:	mov    QWORD PTR [rsp+0x8],rcx
   100006555:	push   rdi
   100006556:	sub    rsp,0x30
   10000655a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100006563:	mov    QWORD PTR [rsp+0x48],rbx
   100006568:	mov    QWORD PTR [rsp+0x50],rsi
   10000656d:	mov    rbx,rcx
   100006570:	mov    rcx,QWORD PTR [rcx]
   100006573:	or     edi,0xffffffff
   100006576:	xor    esi,esi
   100006578:	test   rcx,rcx
   10000657b:	je     0x10000659a
   10000657d:	add    rcx,0x10
   100006581:	mov    eax,edi
   100006583:	lock xadd DWORD PTR [rcx+0x10],eax
   100006588:	dec    eax
   10000658a:	jne    0x100006597
   10000658c:	cmp    QWORD PTR [rcx+0x8],rsi
   100006590:	je     0x100006597
   100006592:	call   0x100006430
   100006597:	mov    QWORD PTR [rbx],rsi
   10000659a:	mov    rcx,QWORD PTR [rbx+0x8]
   10000659e:	test   rcx,rcx
   1000065a1:	je     0x1000065bf
   1000065a3:	add    rcx,0x10
   1000065a7:	lock xadd DWORD PTR [rcx+0x10],edi
   1000065ac:	dec    edi
   1000065ae:	jne    0x1000065bb
   1000065b0:	cmp    QWORD PTR [rcx+0x8],rsi
   1000065b4:	je     0x1000065bb
   1000065b6:	call   0x100006430
   1000065bb:	mov    QWORD PTR [rbx+0x8],rsi
   1000065bf:	mov    rcx,QWORD PTR [rbx+0x18]
   1000065c3:	test   rcx,rcx
   1000065c6:	je     0x1000065d8
   1000065c8:	mov    edx,DWORD PTR [rbx+0x20]
   1000065cb:	call   QWORD PTR [rip+0xffffffffffffb657]        # 0x100001c28
   1000065d1:	mov    QWORD PTR [rbx+0x18],rsi
   1000065d5:	mov    DWORD PTR [rbx+0x20],esi
   1000065d8:	mov    QWORD PTR [rbx+0x10],rsi
   1000065dc:	mov    rbx,QWORD PTR [rsp+0x48]
   1000065e1:	mov    rsi,QWORD PTR [rsp+0x50]
   1000065e6:	add    rsp,0x30
   1000065ea:	pop    rdi
   1000065eb:	ret    
   1000065ec:	nop
   1000065ed:	nop
   1000065ee:	nop
   1000065ef:	nop
   1000065f0:	nop
   1000065f1:	nop
   1000065f2:	nop
   1000065f3:	nop
   1000065f4:	nop
   1000065f5:	nop
   1000065f6:	nop
   1000065f7:	nop
   1000065f8:	nop
   1000065f9:	nop
   1000065fa:	nop
   1000065fb:	nop
   1000065fc:	nop
   1000065fd:	nop
   1000065fe:	nop
   1000065ff:	nop
   100006600:	sub    rsp,0x28
   100006604:	cmp    DWORD PTR [rcx],0x0
   100006607:	mov    rdx,rcx
   10000660a:	je     0x10000661a
   10000660c:	mov    rcx,QWORD PTR [rcx+0x10]
   100006610:	mov    rdx,QWORD PTR [rdx+0x8]
   100006614:	mov    rax,QWORD PTR [rcx]
   100006617:	call   QWORD PTR [rax+0x18]
   10000661a:	add    rsp,0x28
   10000661e:	ret    
   10000661f:	nop
   100006620:	nop
   100006621:	nop
   100006622:	nop
   100006623:	nop
   100006624:	nop
   100006625:	nop
   100006626:	nop
   100006627:	nop
   100006628:	nop
   100006629:	nop
   10000662a:	nop
   10000662b:	nop
   10000662c:	nop
   10000662d:	nop
   10000662e:	nop
   10000662f:	nop
   100006630:	push   r14
   100006632:	sub    rsp,0x40
   100006636:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   10000663f:	mov    QWORD PTR [rsp+0x50],rbx
   100006644:	mov    QWORD PTR [rsp+0x58],rbp
   100006649:	mov    QWORD PTR [rsp+0x60],rsi
   10000664e:	mov    QWORD PTR [rsp+0x68],rdi
   100006653:	mov    r14,rcx
   100006656:	mov    rcx,QWORD PTR [rip+0x22a63]        # 0x1000290c0
   10000665d:	mov    rax,QWORD PTR gs:0x30
   100006666:	add    rax,rcx
   100006669:	cmp    rcx,0x1480
   100006670:	jge    0x100006678
   100006672:	call   QWORD PTR [rip+0xffffffffffffaaa8]        # 0x100001120
   100006678:	test   rax,rax
   10000667b:	je     0x100006689
   10000667d:	mov    rbp,QWORD PTR [rax+0xd8]
   100006684:	test   rbp,rbp
   100006687:	jne    0x1000066bb
   100006689:	call   QWORD PTR [rip+0xffffffffffffb4c1]        # 0x100001b50
   10000668f:	mov    r11,QWORD PTR [rip+0x22a2a]        # 0x1000290c0
   100006696:	mov    rax,QWORD PTR gs:0x30
   10000669f:	add    rax,r11
   1000066a2:	cmp    r11,0x1480
   1000066a9:	jge    0x1000066b4
   1000066ab:	mov    ecx,r11d
   1000066ae:	call   QWORD PTR [rip+0xffffffffffffaa6c]        # 0x100001120
   1000066b4:	mov    rbp,QWORD PTR [rax+0xd8]
   1000066bb:	mov    rcx,QWORD PTR [rbp+0x210]
   1000066c2:	test   rcx,rcx
   1000066c5:	je     0x1000066fb
   1000066c7:	mov    eax,DWORD PTR [rcx+0xb4]
   1000066cd:	test   al,0x4
   1000066cf:	je     0x1000066fb
   1000066d1:	mov    rax,QWORD PTR [rcx+0x98]
   1000066d8:	test   BYTE PTR [rax+0x220],0x1
   1000066df:	jne    0x1000066fb
   1000066e1:	mov    eax,DWORD PTR [rax+0x2d8]
   1000066e7:	test   al,al
   1000066e9:	js     0x1000066fb
   1000066eb:	bt     eax,0x8
   1000066ef:	jb     0x1000066fb
   1000066f1:	mov    eax,0x2
   1000066f6:	jmp    0x1000067d5
   1000066fb:	mov    rcx,QWORD PTR [rip+0x229be]        # 0x1000290c0
   100006702:	mov    rax,QWORD PTR gs:0x30
   10000670b:	add    rax,rcx
   10000670e:	cmp    rcx,0x1480
   100006715:	jge    0x10000671d
   100006717:	call   QWORD PTR [rip+0xffffffffffffaa03]        # 0x100001120
   10000671d:	test   rax,rax
   100006720:	je     0x10000672e
   100006722:	mov    rdi,QWORD PTR [rax+0xd8]
   100006729:	test   rdi,rdi
   10000672c:	jne    0x100006760
   10000672e:	call   QWORD PTR [rip+0xffffffffffffb41c]        # 0x100001b50
   100006734:	mov    r11,QWORD PTR [rip+0x22985]        # 0x1000290c0
   10000673b:	mov    rax,QWORD PTR gs:0x30
   100006744:	add    rax,r11
   100006747:	cmp    r11,0x1480
   10000674e:	jge    0x100006759
   100006750:	mov    ecx,r11d
   100006753:	call   QWORD PTR [rip+0xffffffffffffa9c7]        # 0x100001120
   100006759:	mov    rdi,QWORD PTR [rax+0xd8]
   100006760:	mov    QWORD PTR [rsp+0x30],rdi
   100006765:	mov    ebx,DWORD PTR [rdi+0x2d8]
   10000676b:	shr    ebx,0xb
   10000676e:	and    ebx,0x1
   100006771:	mov    DWORD PTR [rsp+0x28],ebx
   100006775:	je     0x10000679c
   100006777:	mov    rsi,QWORD PTR [rdi+0x218]
   10000677e:	mov    QWORD PTR [rsp+0x38],rsi
   100006783:	mov    rax,QWORD PTR [rsi]
   100006786:	mov    rdx,rdi
   100006789:	mov    rcx,rsi
   10000678c:	call   QWORD PTR [rax+0x20]
   10000678f:	xor    ebx,ebx
   100006791:	test   eax,eax
   100006793:	sete   bl
   100006796:	mov    DWORD PTR [rsp+0x28],ebx
   10000679a:	jmp    0x1000067a1
   10000679c:	mov    rsi,QWORD PTR [rsp+0x38]
   1000067a1:	mov    rcx,r14
   1000067a4:	call   QWORD PTR [rip+0xffffffffffffb446]        # 0x100001bf0
   1000067aa:	or     edx,0xffffffff
   1000067ad:	mov    rcx,rbp
   1000067b0:	call   QWORD PTR [rip+0xffffffffffffb432]        # 0x100001be8
   1000067b6:	mov    ebp,eax
   1000067b8:	mov    rcx,r14
   1000067bb:	call   QWORD PTR [rip+0xffffffffffffb41f]        # 0x100001be0
   1000067c1:	nop
   1000067c2:	test   ebx,ebx
   1000067c4:	je     0x1000067d3
   1000067c6:	mov    r8,QWORD PTR [rsi]
   1000067c9:	mov    rdx,rdi
   1000067cc:	mov    rcx,rsi
   1000067cf:	call   QWORD PTR [r8+0x18]
   1000067d3:	mov    eax,ebp
   1000067d5:	mov    rbx,QWORD PTR [rsp+0x50]
   1000067da:	mov    rbp,QWORD PTR [rsp+0x58]
   1000067df:	mov    rsi,QWORD PTR [rsp+0x60]
   1000067e4:	mov    rdi,QWORD PTR [rsp+0x68]
   1000067e9:	add    rsp,0x40
   1000067ed:	pop    r14
   1000067ef:	ret    
   1000067f0:	nop
   1000067f1:	nop
   1000067f2:	nop
   1000067f3:	nop
   1000067f4:	nop
   1000067f5:	nop
   1000067f6:	nop
   1000067f7:	nop
   1000067f8:	nop
   1000067f9:	nop
   1000067fa:	nop
   1000067fb:	nop
   1000067fc:	nop
   1000067fd:	nop
   1000067fe:	nop
   1000067ff:	nop
   100006800:	sub    rsp,0x28
   100006804:	mov    rcx,QWORD PTR [rip+0x228b5]        # 0x1000290c0
   10000680b:	mov    rax,QWORD PTR gs:0x30
   100006814:	add    rax,rcx
   100006817:	cmp    rcx,0x1480
   10000681e:	jge    0x100006826
   100006820:	call   QWORD PTR [rip+0xffffffffffffa8fa]        # 0x100001120
   100006826:	test   rax,rax
   100006829:	je     0x100006837
   10000682b:	mov    rcx,QWORD PTR [rax+0xd8]
   100006832:	test   rcx,rcx
   100006835:	jne    0x100006869
   100006837:	call   QWORD PTR [rip+0xffffffffffffb313]        # 0x100001b50
   10000683d:	mov    r11,QWORD PTR [rip+0x2287c]        # 0x1000290c0
   100006844:	mov    rax,QWORD PTR gs:0x30
   10000684d:	add    rax,r11
   100006850:	cmp    r11,0x1480
   100006857:	jge    0x100006862
   100006859:	mov    ecx,r11d
   10000685c:	call   QWORD PTR [rip+0xffffffffffffa8be]        # 0x100001120
   100006862:	mov    rcx,QWORD PTR [rax+0xd8]
   100006869:	mov    eax,DWORD PTR [rcx+0x2d8]
   10000686f:	shr    eax,0x2
   100006872:	and    eax,0x1
   100006875:	add    rsp,0x28
   100006879:	ret    
   10000687a:	nop
   10000687b:	nop
   10000687c:	nop
   10000687d:	nop
   10000687e:	nop
   10000687f:	nop
   100006880:	mov    QWORD PTR [rsp+0x8],rbx
   100006885:	mov    QWORD PTR [rsp+0x10],rbp
   10000688a:	mov    QWORD PTR [rsp+0x20],rsi
   10000688f:	push   rdi
   100006890:	sub    rsp,0x50
   100006894:	mov    rdi,rcx
   100006897:	mov    rcx,QWORD PTR [rip+0x22822]        # 0x1000290c0
   10000689e:	mov    DWORD PTR [rsp+0x20],0xdd
   1000068a6:	mov    rax,QWORD PTR gs:0x30
   1000068af:	mov    esi,edx
   1000068b1:	add    rax,rcx
   1000068b4:	cmp    rcx,0x1480
   1000068bb:	jge    0x1000068c3
   1000068bd:	call   QWORD PTR [rip+0xffffffffffffa85d]        # 0x100001120
   1000068c3:	test   rax,rax
   1000068c6:	je     0x1000068d4
   1000068c8:	mov    rax,QWORD PTR [rax+0xd8]
   1000068cf:	test   rax,rax
   1000068d2:	jne    0x100006906
   1000068d4:	call   QWORD PTR [rip+0xffffffffffffb276]        # 0x100001b50
   1000068da:	mov    r11,QWORD PTR [rip+0x227df]        # 0x1000290c0
   1000068e1:	mov    rax,QWORD PTR gs:0x30
   1000068ea:	add    rax,r11
   1000068ed:	cmp    r11,0x1480
   1000068f4:	jge    0x1000068ff
   1000068f6:	mov    ecx,r11d
   1000068f9:	call   QWORD PTR [rip+0xffffffffffffa821]        # 0x100001120
   1000068ff:	mov    rax,QWORD PTR [rax+0xd8]
   100006906:	mov    QWORD PTR [rsp+0x28],rax
   10000690b:	test   rax,rax
   10000690e:	je     0x100006919
   100006910:	mov    rdx,QWORD PTR [rax+0x388]
   100006917:	jmp    0x10000691b
   100006919:	xor    edx,edx
   10000691b:	mov    rax,QWORD PTR [rip+0xffffffffffffb696]        # 0x100001fb8
   100006922:	xor    ecx,ecx
   100006924:	mov    QWORD PTR [rsp+0x30],rdx
   100006929:	mov    QWORD PTR [rsp+0x38],rcx
   10000692e:	mov    DWORD PTR [rsp+0x40],ecx
   100006932:	test   BYTE PTR [rax],0x1
   100006935:	je     0x1000069b3
   100006937:	test   rdx,rdx
   10000693a:	je     0x1000069b3
   10000693c:	lea    rcx,[rdx+0x6b8]
   100006943:	mov    QWORD PTR [rsp+0x38],rcx
   100006948:	test   rcx,rcx
   10000694b:	je     0x1000069b3
   10000694d:	inc    QWORD PTR [rcx+0x1ba8]
   100006954:	mov    rcx,QWORD PTR [rsp+0x38]
   100006959:	mov    edx,0xdd
   10000695e:	call   QWORD PTR [rip+0xffffffffffffb20c]        # 0x100001b70
   100006964:	mov    rcx,QWORD PTR [rsp+0x38]
   100006969:	mov    edx,0xdd
   10000696e:	mov    rbx,rax
   100006971:	call   QWORD PTR [rip+0xffffffffffffb1f1]        # 0x100001b68
   100006977:	mov    r11,rax
   10000697a:	test   rbx,rbx
   10000697d:	je     0x1000069ae
   10000697f:	test   rax,rax
   100006982:	je     0x1000069ae
   100006984:	mov    rcx,QWORD PTR [rsp+0x38]
   100006989:	xor    edx,edx
   10000698b:	mov    rax,rbx
   10000698e:	div    r11
   100006991:	mov    edx,0xfa
   100006996:	mov    ebx,0x61a8
   10000699b:	shr    rax,1
   10000699e:	cmp    rax,rdx
   1000069a1:	cmova  rdx,rax
   1000069a5:	cmp    rdx,rbx
   1000069a8:	cmovb  rbx,rdx
   1000069ac:	jmp    0x1000069b8
   1000069ae:	mov    rcx,QWORD PTR [rsp+0x38]
   1000069b3:	mov    ebx,0xfa
   1000069b8:	mov    ebp,0x3b9aca00
   1000069bd:	nop    DWORD PTR [rax]
   1000069c0:	xor    edx,edx
   1000069c2:	test   rbx,rbx
   1000069c5:	je     0x1000069dc
   1000069c7:	mov    rax,rbx
   1000069ca:	mov    rdx,rbx
   1000069cd:	nop    DWORD PTR [rax]
   1000069d0:	pause  
   1000069d2:	dec    rax
   1000069d5:	jne    0x1000069d0
   1000069d7:	mov    rcx,QWORD PTR [rsp+0x38]
   1000069dc:	test   rcx,rcx
   1000069df:	je     0x1000069e8
   1000069e1:	add    QWORD PTR [rcx+0x1ba0],rdx
   1000069e8:	xor    eax,eax
   1000069ea:	lock cmpxchg DWORD PTR [rdi],esi
   1000069ee:	je     0x100006a2e
   1000069f0:	mov    rcx,QWORD PTR [rsp+0x38]
   1000069f5:	lea    rax,[rbx+rbx*1]
   1000069f9:	cmp    rax,rbp
   1000069fc:	mov    rbx,rax
   1000069ff:	cmova  rbx,rbp
   100006a03:	inc    DWORD PTR [rsp+0x40]
   100006a07:	test   rcx,rcx
   100006a0a:	je     0x100006a19
   100006a0c:	movsxd rax,DWORD PTR [rsp+0x20]
   100006a11:	shl    rax,0x5
   100006a15:	inc    DWORD PTR [rax+rcx*1+0x18]
   100006a19:	lea    rdx,[rsp+0x20]
   100006a1e:	mov    rcx,rdi
   100006a21:	call   QWORD PTR [rip+0xffffffffffffb139]        # 0x100001b60
   100006a27:	mov    rcx,QWORD PTR [rsp+0x38]
   100006a2c:	jmp    0x1000069c0
   100006a2e:	mov    rbx,QWORD PTR [rsp+0x60]
   100006a33:	mov    rbp,QWORD PTR [rsp+0x68]
   100006a38:	mov    rsi,QWORD PTR [rsp+0x78]
   100006a3d:	add    rsp,0x50
   100006a41:	pop    rdi
   100006a42:	ret    
   100006a43:	nop
   100006a44:	nop
   100006a45:	nop
   100006a46:	nop
   100006a47:	nop
   100006a48:	nop
   100006a49:	nop
   100006a4a:	nop
   100006a4b:	nop
   100006a4c:	nop
   100006a4d:	nop
   100006a4e:	nop
   100006a4f:	nop
   100006a50:	mov    QWORD PTR [rsp+0x10],rbx
   100006a55:	push   rdi
   100006a56:	sub    rsp,0x30
   100006a5a:	lea    rax,[rsp+0x20]
   100006a5f:	mov    rbx,rcx
   100006a62:	mov    QWORD PTR [rsp+0x28],rax
   100006a67:	lea    rax,[rsp+0x20]
   100006a6c:	mov    QWORD PTR [rsp+0x20],rax
   100006a71:	call   QWORD PTR [rip+0xffffffffffffb101]        # 0x100001b78
   100006a77:	mov    edx,eax
   100006a79:	xor    eax,eax
   100006a7b:	lock cmpxchg DWORD PTR [rbx+0x20],edx
   100006a80:	je     0x100006a8b
   100006a82:	lea    rcx,[rbx+0x20]
   100006a86:	call   0x100006880
   100006a8b:	xor    r8d,r8d
   100006a8e:	cmp    DWORD PTR [rbx+0x4],0x1
   100006a92:	jne    0x100006af9
   100006a94:	mov    rdx,QWORD PTR [rbx+0x10]
   100006a98:	lea    rax,[rbx+0x8]
   100006a9c:	cmp    rdx,rax
   100006a9f:	je     0x100006ad9
   100006aa1:	test   rdx,rdx
   100006aa4:	je     0x100006ad9
   100006aa6:	mov    rax,QWORD PTR [rdx]
   100006aa9:	mov    rcx,QWORD PTR [rdx+0x8]
   100006aad:	mov    QWORD PTR [rax+0x8],rcx
   100006ab1:	mov    QWORD PTR [rcx],rax
   100006ab4:	mov    QWORD PTR [rdx+0x8],r8
   100006ab8:	mov    QWORD PTR [rdx],r8
   100006abb:	mov    rax,QWORD PTR [rsp+0x28]
   100006ac0:	mov    QWORD PTR [rdx+0x8],rax
   100006ac4:	mov    rax,QWORD PTR [rsp+0x28]
   100006ac9:	mov    QWORD PTR [rax],rdx
   100006acc:	lea    rax,[rsp+0x20]
   100006ad1:	mov    QWORD PTR [rsp+0x28],rdx
   100006ad6:	mov    QWORD PTR [rdx],rax
   100006ad9:	lea    rax,[rsp+0x20]
   100006ade:	cmp    QWORD PTR [rsp+0x28],rax
   100006ae3:	je     0x100006aea
   100006ae5:	mov    DWORD PTR [rbx],r8d
   100006ae8:	jmp    0x100006b38
   100006aea:	cmp    DWORD PTR [rbx],r8d
   100006aed:	jne    0x100006b38
   100006aef:	mov    QWORD PTR [rbx+0x18],0x1
   100006af7:	jmp    0x100006b32
   100006af9:	lea    rdx,[rbx+0x8]
   100006afd:	cmp    QWORD PTR [rdx+0x8],rdx
   100006b01:	je     0x100006b32
   100006b03:	mov    rcx,QWORD PTR [rdx]
   100006b06:	mov    rax,QWORD PTR [rsp+0x28]
   100006b0b:	mov    QWORD PTR [rcx+0x8],rax
   100006b0f:	mov    rax,QWORD PTR [rsp+0x28]
   100006b14:	mov    rcx,QWORD PTR [rdx]
   100006b17:	mov    QWORD PTR [rax],rcx
   100006b1a:	mov    rax,QWORD PTR [rdx+0x8]
   100006b1e:	lea    rcx,[rsp+0x20]
   100006b23:	mov    QWORD PTR [rsp+0x28],rax
   100006b28:	mov    QWORD PTR [rax],rcx
   100006b2b:	mov    QWORD PTR [rdx+0x8],rdx
   100006b2f:	mov    QWORD PTR [rdx],rdx
   100006b32:	mov    DWORD PTR [rbx],0x1
   100006b38:	lea    rcx,[rsp+0x20]
   100006b3d:	xor    edx,edx
   100006b3f:	mov    DWORD PTR [rbx+0x20],r8d
   100006b43:	call   QWORD PTR [rip+0xffffffffffffb07f]        # 0x100001bc8
   100006b49:	mov    rbx,QWORD PTR [rsp+0x48]
   100006b4e:	add    rsp,0x30
   100006b52:	pop    rdi
   100006b53:	ret    
   100006b54:	nop
   100006b55:	nop
   100006b56:	nop
   100006b57:	nop
   100006b58:	nop
   100006b59:	nop
   100006b5a:	nop
   100006b5b:	nop
   100006b5c:	nop
   100006b5d:	nop
   100006b5e:	nop
   100006b5f:	nop
   100006b60:	xor    r11d,r11d
   100006b63:	mov    eax,r11d
   100006b66:	test   rdx,rdx
   100006b69:	je     0x100006b74
   100006b6b:	cmp    rdx,0x7fffffff
   100006b72:	jbe    0x100006b79
   100006b74:	mov    eax,0x80070057
   100006b79:	test   eax,eax
   100006b7b:	js     0x100006bd8
   100006b7d:	mov    r10d,r11d
   100006b80:	test   rdx,rdx
   100006b83:	je     0x100006bc7
   100006b85:	mov    r9d,0x7ffffffe
   100006b8b:	sub    r9,rdx
   100006b8e:	sub    r8,rcx
   100006b91:	lea    rax,[r9+rdx*1]
   100006b95:	test   rax,rax
   100006b98:	je     0x100006bc2
   100006b9a:	movzx  eax,WORD PTR [r8+rcx*1]
   100006b9f:	test   ax,ax
   100006ba2:	je     0x100006bc2
   100006ba4:	mov    WORD PTR [rcx],ax
   100006ba7:	add    rcx,0x2
   100006bab:	dec    rdx
   100006bae:	jne    0x100006b91
   100006bb0:	sub    rcx,0x2
   100006bb4:	mov    r10d,0x8007007a
   100006bba:	mov    WORD PTR [rcx],r11w
   100006bbe:	mov    eax,r10d
   100006bc1:	ret    
   100006bc2:	test   rdx,rdx
   100006bc5:	jne    0x100006bd1
   100006bc7:	sub    rcx,0x2
   100006bcb:	mov    r10d,0x8007007a
   100006bd1:	mov    WORD PTR [rcx],r11w
   100006bd5:	mov    eax,r10d
   100006bd8:	repz ret 
   100006bda:	nop
   100006bdb:	nop
   100006bdc:	nop
   100006bdd:	nop
   100006bde:	nop
   100006bdf:	nop
   100006be0:	mov    eax,DWORD PTR [rcx]
   100006be2:	mov    rdx,QWORD PTR [rcx+0x8]
   100006be6:	not    eax
   100006be8:	and    DWORD PTR [rdx+0x220],eax
   100006bee:	ret    
   100006bef:	nop
   100006bf0:	nop
   100006bf1:	nop
   100006bf2:	nop
   100006bf3:	nop
   100006bf4:	nop
   100006bf5:	nop
   100006bf6:	nop
   100006bf7:	nop
   100006bf8:	nop
   100006bf9:	nop
   100006bfa:	nop
   100006bfb:	nop
   100006bfc:	nop
   100006bfd:	nop
   100006bfe:	nop
   100006bff:	nop
   100006c00:	mov    QWORD PTR [rsp+0x8],rcx
   100006c05:	push   rdi
   100006c06:	sub    rsp,0x30
   100006c0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100006c13:	mov    QWORD PTR [rsp+0x48],rbx
   100006c18:	mov    ebx,edx
   100006c1a:	mov    rdi,rcx
   100006c1d:	call   QWORD PTR [rip+0xffffffffffffb03d]        # 0x100001c60
   100006c23:	mov    rax,rdi
   100006c26:	test   bl,0x1
   100006c29:	je     0x100006c5d
   100006c2b:	test   rdi,rdi
   100006c2e:	je     0x100006c5d
   100006c30:	and    rax,0xffffffffffffe000
   100006c36:	mov    rax,QWORD PTR [rax+0x8]
   100006c3a:	mov    rcx,QWORD PTR [rax+0x10]
   100006c3e:	dec    rcx
   100006c41:	not    rcx
   100006c44:	and    rcx,rdi
   100006c47:	mov    rcx,QWORD PTR [rcx+0x8]
   100006c4b:	test   BYTE PTR [rcx+0x28],0x8
   100006c4f:	jne    0x100006c5a
   100006c51:	mov    rax,QWORD PTR [rcx]
   100006c54:	mov    rdx,rdi
   100006c57:	call   QWORD PTR [rax+0x28]
   100006c5a:	mov    rax,rdi
   100006c5d:	mov    rbx,QWORD PTR [rsp+0x48]
   100006c62:	add    rsp,0x30
   100006c66:	pop    rdi
   100006c67:	ret    
   100006c68:	nop
   100006c69:	nop
   100006c6a:	nop
   100006c6b:	nop
   100006c6c:	nop
   100006c6d:	nop
   100006c6e:	nop
   100006c6f:	nop
   100006c70:	mov    QWORD PTR [rsp+0x10],rbx
   100006c75:	push   rdi
   100006c76:	sub    rsp,0x50
   100006c7a:	mov    rcx,QWORD PTR [rip+0x2243f]        # 0x1000290c0
   100006c81:	xor    ebx,ebx
   100006c83:	mov    DWORD PTR [rsp+0x20],0x4002dd
   100006c8b:	mov    QWORD PTR [rsp+0x28],rbx
   100006c90:	mov    QWORD PTR [rsp+0x38],rbx
   100006c95:	mov    QWORD PTR [rsp+0x30],rbx
   100006c9a:	mov    QWORD PTR [rsp+0x40],rbx
   100006c9f:	mov    rax,QWORD PTR gs:0x30
   100006ca8:	add    rax,rcx
   100006cab:	cmp    rcx,0x1480
   100006cb2:	jge    0x100006cba
   100006cb4:	call   QWORD PTR [rip+0xffffffffffffa466]        # 0x100001120
   100006cba:	test   rax,rax
   100006cbd:	je     0x100006cc8
   100006cbf:	cmp    QWORD PTR [rax+0xd8],rbx
   100006cc6:	jne    0x100006cf0
   100006cc8:	call   QWORD PTR [rip+0xffffffffffffae82]        # 0x100001b50
   100006cce:	mov    r11,QWORD PTR [rip+0x223eb]        # 0x1000290c0
   100006cd5:	mov    rax,QWORD PTR gs:0x30
   100006cde:	cmp    r11,0x1480
   100006ce5:	jge    0x100006cf0
   100006ce7:	mov    ecx,r11d
   100006cea:	call   QWORD PTR [rip+0xffffffffffffa430]        # 0x100001120
   100006cf0:	mov    edi,ebx
   100006cf2:	call   QWORD PTR [rip+0xffffffffffffae80]        # 0x100001b78
   100006cf8:	mov    edx,eax
   100006cfa:	xor    eax,eax
   100006cfc:	lock cmpxchg DWORD PTR [rip+0x22c44],edx        # 0x100029948
   100006d04:	je     0x100006d12
   100006d06:	lea    rcx,[rip+0x22c3b]        # 0x100029948
   100006d0d:	call   0x100006880
   100006d12:	mov    eax,DWORD PTR [rip+0x22c10]        # 0x100029928
   100006d18:	test   eax,eax
   100006d1a:	jne    0x100006d23
   100006d1c:	mov    edi,0x102
   100006d21:	jmp    0x100006d3c
   100006d23:	cmp    DWORD PTR [rip+0x22c02],0x1        # 0x10002992c
   100006d2a:	jne    0x100006d3c
   100006d2c:	dec    QWORD PTR [rip+0x22c0d]        # 0x100029940
   100006d33:	cmove  eax,ebx
   100006d36:	mov    DWORD PTR [rip+0x22bec],eax        # 0x100029928
   100006d3c:	mov    DWORD PTR [rip+0x22c06],ebx        # 0x100029948
   100006d42:	test   edi,edi
   100006d44:	sete   bl
   100006d47:	mov    eax,ebx
   100006d49:	mov    rbx,QWORD PTR [rsp+0x68]
   100006d4e:	add    rsp,0x50
   100006d52:	pop    rdi
   100006d53:	ret    
   100006d54:	nop
   100006d55:	nop
   100006d56:	nop
   100006d57:	nop
   100006d58:	nop
   100006d59:	nop
   100006d5a:	nop
   100006d5b:	nop
   100006d5c:	nop
   100006d5d:	nop
   100006d5e:	nop
   100006d5f:	nop
   100006d60:	lea    rax,[rip+0x268e9]        # 0x10002d650
   100006d67:	ret    
   100006d68:	nop
   100006d69:	nop
   100006d6a:	nop
   100006d6b:	nop
   100006d6c:	nop
   100006d6d:	nop
   100006d6e:	nop
   100006d6f:	nop
   100006d70:	push   rbp
   100006d72:	push   r14
   100006d74:	push   r15
   100006d76:	lea    rbp,[rsp-0x17c0]
   100006d7e:	mov    eax,0x18c0
   100006d83:	call   0x100002630
   100006d88:	sub    rsp,rax
   100006d8b:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   100006d94:	mov    QWORD PTR [rsp+0x18e8],rbx
   100006d9c:	mov    QWORD PTR [rsp+0x18f0],rsi
   100006da4:	mov    QWORD PTR [rsp+0x18f8],rdi
   100006dac:	mov    rax,QWORD PTR [rip+0x2243d]        # 0x1000291f0
   100006db3:	xor    rax,rsp
   100006db6:	mov    QWORD PTR [rbp+0x17b0],rax
   100006dbd:	mov    rsi,rcx
   100006dc0:	mov    r8d,0x104
   100006dc6:	lea    rdx,[rbp+0xf80]
   100006dcd:	xor    ecx,ecx
   100006dcf:	call   QWORD PTR [rip+0xffffffffffffa3e3]        # 0x1000011b8
   100006dd5:	xor    r15d,r15d
   100006dd8:	mov    WORD PTR [rbp+0x1186],r15w
   100006de0:	test   eax,eax
   100006de2:	jne    0x100006e0c
   100006de4:	call   QWORD PTR [rip+0xffffffffffffa346]        # 0x100001130
   100006dea:	mov    ecx,eax
   100006dec:	xor    r9d,r9d
   100006def:	xor    r8d,r8d
   100006df2:	lea    rdx,[rsp+0x70]
   100006df7:	call   QWORD PTR [rip+0xffffffffffffad9b]        # 0x100001b98
   100006dfd:	lea    rdx,[rsp+0x70]
   100006e02:	mov    ecx,0x283e
   100006e07:	call   0x1000182d0
   100006e0c:	mov    QWORD PTR [rsp+0x40],r15
   100006e11:	mov    QWORD PTR [rsp+0x38],r15
   100006e16:	mov    QWORD PTR [rsp+0x30],r15
   100006e1b:	mov    QWORD PTR [rsp+0x28],r15
   100006e20:	mov    QWORD PTR [rsp+0x20],0x101
   100006e29:	lea    r9,[rbp+0x13a0]
   100006e30:	mov    r8d,0x4
   100006e36:	lea    rdx,[rbp+0xf70]
   100006e3d:	lea    rcx,[rbp+0xf80]
   100006e44:	call   QWORD PTR [rip+0xffffffffffffa5ee]        # 0x100001438
   100006e4a:	call   QWORD PTR [rip+0xffffffffffffade8]        # 0x100001c38
   100006e50:	mov    r9,rax
   100006e53:	mov    QWORD PTR [rsp+0x30],rsi
   100006e58:	lea    rax,[rbp+0x13a0]
   100006e5f:	mov    QWORD PTR [rsp+0x28],rax
   100006e64:	lea    rax,[rbp+0xf70]
   100006e6b:	mov    QWORD PTR [rsp+0x20],rax
   100006e70:	lea    r8,[rip+0xffffffffffffc569]        # 0x1000033e0
   100006e77:	mov    edx,0x105
   100006e7c:	lea    rcx,[rbp+0x1190]
   100006e83:	call   0x100005bb0
   100006e88:	mov    ebx,eax
   100006e8a:	test   eax,eax
   100006e8c:	jns    0x100006eda
   100006e8e:	mov    ecx,eax
   100006e90:	call   QWORD PTR [rip+0xffffffffffffa822]        # 0x1000016b8
   100006e96:	call   QWORD PTR [rip+0xffffffffffffad9c]        # 0x100001c38
   100006e9c:	mov    r9,rax
   100006e9f:	mov    DWORD PTR [rsp+0x28],ebx
   100006ea3:	lea    rbx,[rip+0xffffffffffffc546]        # 0x1000033f0
   100006eaa:	mov    QWORD PTR [rsp+0x20],rbx
   100006eaf:	lea    r8,[rip+0xffffffffffffc90a]        # 0x1000037c0
   100006eb6:	mov    edx,0x200
   100006ebb:	lea    rcx,[rbp+0x15b0]
   100006ec2:	call   0x10000eb40
   100006ec7:	test   eax,eax
   100006ec9:	mov    rcx,rbx
   100006ecc:	js     0x100006ed5
   100006ece:	lea    rcx,[rbp+0x15b0]
   100006ed5:	call   0x100015fc0
   100006eda:	mov    DWORD PTR [rsp+0x50],r15d
   100006edf:	lea    rdx,[rsp+0x50]
   100006ee4:	lea    rcx,[rbp+0x1190]
   100006eeb:	call   QWORD PTR [rip+0x2211f]        # 0x100029010
   100006ef1:	mov    edi,eax
   100006ef3:	test   eax,eax
   100006ef5:	jne    0x100006f25
   100006ef7:	lea    r9,[rbp+0x13a0]
   100006efe:	lea    r8,[rbp+0xf70]
   100006f05:	mov    rdx,rsi
   100006f08:	mov    ecx,0x19a1
   100006f0d:	call   0x1000182d0
   100006f12:	mov    edx,0x19a1
   100006f17:	xor    ecx,ecx
   100006f19:	mov    r8d,0x42a
   100006f1f:	call   QWORD PTR [rip+0xffffffffffffac8b]        # 0x100001bb0
   100006f25:	call   0x10000ebd0
   100006f2a:	mov    r14,rax
   100006f2d:	cmp    rdi,0xffffffffffffffff
   100006f31:	jne    0x100006f3b
   100006f33:	lea    ecx,[rdi+0x20]
   100006f36:	call   0x100003a00
   100006f3b:	mov    r10,QWORD PTR [r14]
   100006f3e:	mov    BYTE PTR [rsp+0x20],0x6
   100006f43:	mov    r9d,0x12e
   100006f49:	lea    r8,[rip+0x178]        # 0x1000070c8
   100006f50:	mov    rdx,rdi
   100006f53:	mov    rcx,r14
   100006f56:	call   QWORD PTR [r10+0x48]
   100006f5a:	mov    rbx,rax
   100006f5d:	test   rax,rax
   100006f60:	jne    0x100006f6a
   100006f62:	lea    ecx,[rax+0x7b]
   100006f65:	call   0x100003a00
   100006f6a:	mov    QWORD PTR [rsp+0x60],rbx
   100006f6f:	mov    r9,rbx
   100006f72:	mov    r8d,edi
   100006f75:	mov    edx,DWORD PTR [rsp+0x50]
   100006f79:	lea    rcx,[rbp+0x1190]
   100006f80:	call   QWORD PTR [rip+0x22082]        # 0x100029008
   100006f86:	test   eax,eax
   100006f88:	jne    0x100006faa
   100006f8a:	mov    rdx,rsi
   100006f8d:	mov    ecx,0x284d
   100006f92:	call   0x1000182d0
   100006f97:	mov    edx,0x284d
   100006f9c:	xor    ecx,ecx
   100006f9e:	mov    r8d,0x42a
   100006fa4:	call   QWORD PTR [rip+0xffffffffffffac06]        # 0x100001bb0
   100006faa:	mov    QWORD PTR [rsp+0x58],r15
   100006faf:	mov    DWORD PTR [rsp+0x54],r15d
   100006fb4:	lea    r9,[rsp+0x54]
   100006fb9:	lea    r8,[rsp+0x58]
   100006fbe:	lea    rdx,[rip+0xffffffffffffc43f]        # 0x100003404
   100006fc5:	mov    rcx,rbx
   100006fc8:	call   QWORD PTR [rip+0x22032]        # 0x100029000
   100006fce:	test   eax,eax
   100006fd0:	jne    0x100006ff2
   100006fd2:	mov    rdx,rsi
   100006fd5:	mov    ecx,0x284d
   100006fda:	call   0x1000182d0
   100006fdf:	mov    edx,0x284d
   100006fe4:	xor    ecx,ecx
   100006fe6:	mov    r8d,0x42a
   100006fec:	call   QWORD PTR [rip+0xffffffffffffabbe]        # 0x100001bb0
   100006ff2:	mov    r9,QWORD PTR [rsp+0x58]
   100006ff7:	mov    edx,0x834
   100006ffc:	mov    r8d,0xb
   100007002:	cmp    r8w,WORD PTR [r9+0x12]
   100007007:	jne    0x100007017
   100007009:	cmp    r15w,WORD PTR [r9+0x10]
   10000700e:	jne    0x100007017
   100007010:	cmp    dx,WORD PTR [r9+0x16]
   100007015:	je     0x10000706b
   100007017:	movzx  eax,WORD PTR [r9+0x16]
   10000701c:	movzx  ecx,WORD PTR [r9+0x10]
   100007021:	movzx  r9d,WORD PTR [r9+0x12]
   100007026:	mov    DWORD PTR [rsp+0x40],eax
   10000702a:	mov    DWORD PTR [rsp+0x38],ecx
   10000702e:	mov    DWORD PTR [rsp+0x30],r9d
   100007033:	lea    rax,[rbp+0x1190]
   10000703a:	mov    QWORD PTR [rsp+0x28],rax
   10000703f:	mov    DWORD PTR [rsp+0x20],edx
   100007043:	xor    r9d,r9d
   100007046:	lea    rdx,[rbp+0xf80]
   10000704d:	mov    ecx,0x19a2
   100007052:	call   0x1000182d0
   100007057:	mov    edx,0x284d
   10000705c:	xor    ecx,ecx
   10000705e:	mov    r8d,0x42a
   100007064:	call   QWORD PTR [rip+0xffffffffffffab46]        # 0x100001bb0
   10000706a:	nop
   10000706b:	mov    rax,rbx
   10000706e:	and    rax,0xffffffffffffe000
   100007074:	mov    rax,QWORD PTR [rax+0x8]
   100007078:	mov    rcx,QWORD PTR [rax+0x10]
   10000707c:	dec    rcx
   10000707f:	not    rcx
   100007082:	and    rcx,rbx
   100007085:	mov    rcx,QWORD PTR [rcx+0x8]
   100007089:	test   BYTE PTR [rcx+0x28],0x8
   10000708d:	jne    0x100007098
   10000708f:	mov    rax,QWORD PTR [rcx]
   100007092:	mov    rdx,rbx
   100007095:	call   QWORD PTR [rax+0x28]
   100007098:	mov    rcx,QWORD PTR [rbp+0x17b0]
   10000709f:	xor    rcx,rsp
   1000070a2:	call   0x100002610
   1000070a7:	lea    r11,[rsp+0x18c0]
   1000070af:	mov    rbx,QWORD PTR [r11+0x28]
   1000070b3:	mov    rsi,QWORD PTR [r11+0x30]
   1000070b7:	mov    rdi,QWORD PTR [r11+0x38]
   1000070bb:	mov    rsp,r11
   1000070be:	pop    r15
   1000070c0:	pop    r14
   1000070c2:	pop    rbp
   1000070c3:	ret    
   1000070c4:	nop
   1000070c5:	nop
   1000070c6:	nop
   1000070c7:	nop
   1000070c8:	cmp    bl,BYTE PTR gs:[rbx+rsi*2+0x71]
   1000070cd:	ins    BYTE PTR es:[rdi],dx
   1000070ce:	xor    DWORD PTR [rcx],esi
   1000070d0:	pop    rdi
   1000070d1:	ins    DWORD PTR es:[rdi],dx
   1000070d2:	(bad)  
   1000070d3:	imul   ebp,DWORD PTR [rsi+0x5f],0x71735c74
   1000070da:	ins    BYTE PTR es:[rdi],dx
   1000070db:	pop    rsp
   1000070dc:	outs   dx,BYTE PTR ds:[rsi]
   1000070dd:	je     0x100007143
   1000070df:	(bad)  
   1000070e0:	ins    DWORD PTR es:[rdi],dx
   1000070e1:	jae    0x10000713f
   1000070e3:	imul   esi,DWORD PTR [rbx+0x6f],0x75
   1000070e7:	jb     0x10000714c
   1000070e9:	gs pop rsp
   1000070eb:	jae    0x100007152
   1000070ed:	jb     0x100007165
   1000070ef:	gs jb  0x10000715f
   1000070f2:	(bad)  
   1000070f3:	movsxd esi,DWORD PTR cs:[rax+0x70]
   1000070f7:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000070fd:	nop
   1000070fe:	nop
   1000070ff:	nop
   100007100:	push   rbx
   100007102:	sub    rsp,0x240
   100007109:	mov    rax,QWORD PTR [rip+0x220e0]        # 0x1000291f0
   100007110:	xor    rax,rsp
   100007113:	mov    QWORD PTR [rsp+0x230],rax
   10000711b:	mov    rax,QWORD PTR [rip+0x317ee]        # 0x100038910
   100007122:	cmp    DWORD PTR [rax+0x49d4],0x0
   100007129:	je     0x100007132
   10000712b:	call   0x100008ad0
   100007130:	jmp    0x100007147
   100007132:	cmp    DWORD PTR [rax+0x49c0],0x0
   100007139:	je     0x100007142
   10000713b:	call   0x100008020
   100007140:	jmp    0x100007147
   100007142:	call   0x1000073b0
   100007147:	call   QWORD PTR [rip+0xffffffffffffa533]        # 0x100001680
   10000714d:	mov    rcx,QWORD PTR [rip+0x317bc]        # 0x100038910
   100007154:	add    rcx,0x3ccc
   10000715b:	call   0x1000153c0
   100007160:	mov    r8,QWORD PTR [rip+0x25119]        # 0x10002c280
   100007167:	xor    r9d,r9d
   10000716a:	mov    QWORD PTR [rip+0x31967],rax        # 0x100038ad8
   100007171:	mov    edx,0x32
   100007176:	mov    ebx,r9d
   100007179:	lea    rax,[rip+0x25110]        # 0x10002c290
   100007180:	test   r8,r8
   100007183:	je     0x1000071b4
   100007185:	sub    r8,rax
   100007188:	nop    DWORD PTR [rax+rax*1+0x0]
   100007190:	lea    rcx,[rdx+0x7fffffcc]
   100007197:	test   rcx,rcx
   10000719a:	je     0x1000071e4
   10000719c:	movzx  ecx,WORD PTR [r8+rax*1]
   1000071a1:	test   cx,cx
   1000071a4:	je     0x1000071e4
   1000071a6:	mov    WORD PTR [rax],cx
   1000071a9:	add    rax,0x2
   1000071ad:	dec    rdx
   1000071b0:	jne    0x100007190
   1000071b2:	jmp    0x1000071e9
   1000071b4:	lea    r8,[rip+0xffffffffffffc47d]        # 0x100003638
   1000071bb:	sub    r8,rax
   1000071be:	xchg   ax,ax
   1000071c0:	lea    rcx,[rdx+0x7fffffcc]
   1000071c7:	test   rcx,rcx
   1000071ca:	je     0x1000071e4
   1000071cc:	movzx  ecx,WORD PTR [r8+rax*1]
   1000071d1:	test   cx,cx
   1000071d4:	je     0x1000071e4
   1000071d6:	mov    WORD PTR [rax],cx
   1000071d9:	add    rax,0x2
   1000071dd:	dec    rdx
   1000071e0:	jne    0x1000071c0
   1000071e2:	jmp    0x1000071e9
   1000071e4:	test   rdx,rdx
   1000071e7:	jne    0x1000071f2
   1000071e9:	sub    rax,0x2
   1000071ed:	mov    ebx,0x8007007a
   1000071f2:	mov    WORD PTR [rax],r9w
   1000071f6:	test   ebx,ebx
   1000071f8:	jns    0x100007242
   1000071fa:	mov    ecx,ebx
   1000071fc:	call   QWORD PTR [rip+0xffffffffffffa4b6]        # 0x1000016b8
   100007202:	call   QWORD PTR [rip+0xffffffffffffaa30]        # 0x100001c38
   100007208:	mov    DWORD PTR [rsp+0x28],ebx
   10000720c:	lea    rbx,[rip+0x4d]        # 0x100007260
   100007213:	lea    r8,[rip+0xffffffffffffc5a6]        # 0x1000037c0
   10000721a:	lea    rcx,[rsp+0x30]
   10000721f:	mov    r9,rax
   100007222:	mov    edx,0x200
   100007227:	mov    QWORD PTR [rsp+0x20],rbx
   10000722c:	call   0x10000eb40
   100007231:	mov    rcx,rbx
   100007234:	test   eax,eax
   100007236:	js     0x10000723d
   100007238:	lea    rcx,[rsp+0x30]
   10000723d:	call   0x100015fc0
   100007242:	mov    rcx,QWORD PTR [rsp+0x230]
   10000724a:	xor    rcx,rsp
   10000724d:	call   0x100002610
   100007252:	add    rsp,0x240
   100007259:	pop    rbx
   10000725a:	ret    
   10000725b:	nop
   10000725c:	nop
   10000725d:	nop
   10000725e:	nop
   10000725f:	nop
   100007260:	push   rbx
   100007261:	je     0x1000072d5
   100007263:	imul   ebp,DWORD PTR [rsi+0x67],0x706f4320
   10000726a:	jns    0x10000728c
   10000726c:	rex.RB jb 0x1000072e1
   10000726f:	outs   dx,DWORD PTR ds:[rsi]
   100007270:	jb     0x100007292
   100007272:	sub    BYTE PTR [rcx+rbp*2+0x6d],cl
   100007276:	imul   esi,DWORD PTR [rsi+rdx*2+0x65],0x6f697372
   10000727e:	outs   dx,BYTE PTR ds:[rsi]
   10000727f:	sub    DWORD PTR [rax],eax
   100007281:	nop
   100007282:	nop
   100007283:	nop
   100007284:	nop
   100007285:	nop
   100007286:	nop
   100007287:	nop
   100007288:	nop
   100007289:	nop
   10000728a:	nop
   10000728b:	nop
   10000728c:	nop
   10000728d:	nop
   10000728e:	nop
   10000728f:	nop
   100007290:	push   rbx
   100007292:	sub    rsp,0x330
   100007299:	mov    rax,QWORD PTR [rip+0x21f50]        # 0x1000291f0
   1000072a0:	xor    rax,rsp
   1000072a3:	mov    QWORD PTR [rsp+0x320],rax
   1000072ab:	mov    rax,QWORD PTR [rip+0xffffffffffffa86e]        # 0x100001b20
   1000072b2:	mov    rdx,rcx
   1000072b5:	mov    DWORD PTR [rsp+0x30],0x20a
   1000072bd:	mov    rcx,QWORD PTR [rax]
   1000072c0:	lea    r9,[rsp+0x30]
   1000072c5:	lea    r8,[rsp+0x40]
   1000072ca:	mov    rax,QWORD PTR [rcx]
   1000072cd:	call   QWORD PTR [rax+0x8]
   1000072d0:	xor    r11d,r11d
   1000072d3:	lea    rbx,[rip+0x6e]        # 0x100007348
   1000072da:	lea    rdx,[rsp+0x40]
   1000072df:	lea    r8d,[r11+0x4]
   1000072e3:	mov    rcx,rbx
   1000072e6:	mov    WORD PTR [rsp+0x248],r11w
   1000072ef:	call   QWORD PTR [rip+0xffffffffffffa13b]        # 0x100001430
   1000072f5:	test   eax,eax
   1000072f7:	je     0x10000732a
   1000072f9:	call   QWORD PTR [rip+0xffffffffffffa939]        # 0x100001c38
   1000072ff:	lea    r8,[rip+0x5a]        # 0x100007360
   100007306:	lea    rcx,[rsp+0x250]
   10000730e:	mov    r9,rax
   100007311:	lea    rax,[rsp+0x40]
   100007316:	mov    edx,0xc8
   10000731b:	mov    QWORD PTR [rsp+0x28],rax
   100007320:	mov    QWORD PTR [rsp+0x20],rbx
   100007325:	call   0x10000eb40
   10000732a:	mov    rcx,QWORD PTR [rsp+0x320]
   100007332:	xor    rcx,rsp
   100007335:	call   0x100002610
   10000733a:	add    rsp,0x330
   100007341:	pop    rbx
   100007342:	ret    
   100007343:	nop
   100007344:	nop
   100007345:	nop
   100007346:	nop
   100007347:	nop
   100007348:	xor    DWORD PTR [rax],eax
   10000734a:	xor    DWORD PTR [rax],eax
   10000734c:	add    BYTE PTR cs:[rax],dh
   10000734f:	add    BYTE PTR [rax],al
   100007351:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100007357:	nop
   100007358:	nop
   100007359:	nop
   10000735a:	nop
   10000735b:	nop
   10000735c:	nop
   10000735d:	nop
   10000735e:	nop
   10000735f:	nop
   100007360:	push   rbx
   100007361:	push   rcx
   100007362:	rex.WR and BYTE PTR [rdx+0x65],r10b
   100007366:	imul   esi,DWORD PTR [ebx+0x74],0x76207972
   10000736e:	gs jb  0x1000073e4
   100007371:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c252820
   100007378:	jae    0x1000073a3
   10000737a:	and    BYTE PTR [rcx+0x73],ch
   10000737d:	and    BYTE PTR [rcx+rbp*2+0x66],ah
   100007381:	data16 gs jb 0x1000073ea
   100007385:	outs   dx,BYTE PTR ds:[rsi]
   100007386:	je     0x1000073a8
   100007388:	je     0x1000073f2
   10000738a:	(bad)  
   10000738b:	outs   dx,BYTE PTR ds:[rsi]
   10000738c:	and    BYTE PTR [rbx+0x71],dh
   10000738f:	ins    BYTE PTR es:[rdi],dx
   100007390:	jae    0x1000073f7
   100007392:	jb     0x10000740a
   100007394:	jb     0x1000073c4
   100007396:	gs js  0x1000073fe
   100007399:	and    BYTE PTR [rsi+0x65],dh
   10000739c:	jb     0x100007411
   10000739e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c252820
   1000073a5:	jae    0x1000073d0
   1000073a7:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000073ad:	nop
   1000073ae:	nop
   1000073af:	nop
   1000073b0:	push   rbx
   1000073b2:	push   rbp
   1000073b3:	push   rsi
   1000073b4:	push   rdi
   1000073b5:	push   r12
   1000073b7:	push   r13
   1000073b9:	push   r14
   1000073bb:	push   r15
   1000073bd:	sub    rsp,0x48
   1000073c1:	mov    rax,QWORD PTR [rip+0x31548]        # 0x100038910
   1000073c8:	or     rsi,0xffffffffffffffff
   1000073cc:	cmp    DWORD PTR [rax+0x49d8],0x0
   1000073d3:	mov    rax,QWORD PTR [rip+0xffffffffffffa746]        # 0x100001b20
   1000073da:	mov    DWORD PTR [rip+0x24ea8],esi        # 0x10002c288
   1000073e0:	mov    rcx,QWORD PTR [rax]
   1000073e3:	mov    rax,QWORD PTR [rcx]
   1000073e6:	je     0x1000073f0
   1000073e8:	call   QWORD PTR [rax+0xf8]
   1000073ee:	jmp    0x1000073f6
   1000073f0:	call   QWORD PTR [rax+0xd0]
   1000073f6:	mov    rbp,rax
   1000073f9:	mov    rax,QWORD PTR [rip+0x31510]        # 0x100038910
   100007400:	xor    edi,edi
   100007402:	mov    QWORD PTR [rax+0x4098],rdi
   100007409:	mov    rax,QWORD PTR [rip+0x31500]        # 0x100038910
   100007410:	xor    edx,edx
   100007412:	mov    QWORD PTR [rax+0x40a0],rdi
   100007419:	mov    rax,QWORD PTR [rip+0x314f0]        # 0x100038910
   100007420:	mov    DWORD PTR [rax+0x3cf0],0x1
   10000742a:	mov    rax,QWORD PTR [rip+0x314df]        # 0x100038910
   100007431:	mov    DWORD PTR [rax+0x3df8],0x100
   10000743b:	mov    rcx,QWORD PTR [rip+0x314ce]        # 0x100038910
   100007442:	mov    r8d,DWORD PTR [rcx+0x3df8]
   100007449:	add    rcx,0x3cf8
   100007450:	call   0x10001f80c
   100007455:	mov    r11,QWORD PTR [rip+0x314b4]        # 0x100038910
   10000745c:	xor    edx,edx
   10000745e:	mov    DWORD PTR [r11+0x3dfc],edi
   100007465:	mov    rax,QWORD PTR [rip+0x314a4]        # 0x100038910
   10000746c:	mov    DWORD PTR [rax+0x3f04],0x102
   100007476:	mov    rcx,QWORD PTR [rip+0x31493]        # 0x100038910
   10000747d:	mov    r8d,DWORD PTR [rcx+0x3f04]
   100007484:	add    rcx,0x3e00
   10000748b:	call   0x10001f80c
   100007490:	mov    r11,QWORD PTR [rip+0x31479]        # 0x100038910
   100007497:	xor    eax,eax
   100007499:	mov    DWORD PTR [r11+0x3f08],eax
   1000074a0:	mov    WORD PTR [r11+0x3f0c],ax
   1000074a8:	mov    rax,QWORD PTR [rip+0x31461]        # 0x100038910
   1000074af:	mov    DWORD PTR [rax+0x4318],edi
   1000074b5:	mov    rax,QWORD PTR [rip+0x31454]        # 0x100038910
   1000074bc:	lea    rcx,[rip+0x945]        # 0x100007e08
   1000074c3:	mov    QWORD PTR [rax+0x4330],rdi
   1000074ca:	mov    rax,QWORD PTR [rip+0x3143f]        # 0x100038910
   1000074d1:	mov    r14d,edi
   1000074d4:	mov    QWORD PTR [rax+0x4328],rdi
   1000074db:	mov    rax,QWORD PTR [rip+0x3142e]        # 0x100038910
   1000074e2:	mov    ebx,edi
   1000074e4:	mov    QWORD PTR [rax+0x4320],rdi
   1000074eb:	mov    rax,QWORD PTR [rip+0x3141e]        # 0x100038910
   1000074f2:	mov    r12d,edi
   1000074f5:	mov    QWORD PTR [rax+0x9528],rdi
   1000074fc:	mov    rax,QWORD PTR [rip+0x3140d]        # 0x100038910
   100007503:	mov    DWORD PTR [rax+0x4078],edi
   100007509:	mov    rax,QWORD PTR [rip+0x31400]        # 0x100038910
   100007510:	mov    DWORD PTR [rax+0x407c],edi
   100007516:	call   0x1000161b0
   10000751b:	mov    rcx,rbp
   10000751e:	mov    r15,rax
   100007521:	call   0x100007290
   100007526:	test   r15,r15
   100007529:	je     0x10000759c
   10000752b:	lea    rdx,[rip+0x8e6]        # 0x100007e18
   100007532:	mov    rcx,r15
   100007535:	call   QWORD PTR [rip+0xffffffffffff9d0d]        # 0x100001248
   10000753b:	lea    rdx,[rip+0x8e6]        # 0x100007e28
   100007542:	mov    rcx,r15
   100007545:	mov    r14,rax
   100007548:	call   QWORD PTR [rip+0xffffffffffff9cfa]        # 0x100001248
   10000754e:	lea    rdx,[rip+0x8eb]        # 0x100007e40
   100007555:	mov    rcx,r15
   100007558:	mov    rbx,rax
   10000755b:	call   QWORD PTR [rip+0xffffffffffff9ce7]        # 0x100001248
   100007561:	mov    r12,rax
   100007564:	test   r14,r14
   100007567:	jne    0x100007576
   100007569:	lea    rcx,[rip+0x8e0]        # 0x100007e50
   100007570:	call   QWORD PTR [rip+0xffffffffffffa102]        # 0x100001678
   100007576:	test   rbx,rbx
   100007579:	jne    0x100007588
   10000757b:	lea    rcx,[rip+0x8fe]        # 0x100007e80
   100007582:	call   QWORD PTR [rip+0xffffffffffffa0f0]        # 0x100001678
   100007588:	test   r12,r12
   10000758b:	jne    0x1000075bc
   10000758d:	lea    rcx,[rip+0x924]        # 0x100007eb8
   100007594:	call   QWORD PTR [rip+0xffffffffffffa0de]        # 0x100001678
   10000759a:	jmp    0x1000075bc
   10000759c:	call   QWORD PTR [rip+0xffffffffffff9b8e]        # 0x100001130
   1000075a2:	test   eax,eax
   1000075a4:	jle    0x1000075ae
   1000075a6:	movzx  eax,ax
   1000075a9:	or     eax,0x80070000
   1000075ae:	lea    rdx,[rip+0x933]        # 0x100007ee8
   1000075b5:	mov    ecx,eax
   1000075b7:	call   0x100015f20
   1000075bc:	xor    r8d,r8d
   1000075bf:	mov    rdx,rbp
   1000075c2:	mov    ecx,0x325fa6d9
   1000075c7:	call   r14
   1000075ca:	mov    ecx,0x2
   1000075cf:	cmp    eax,0x1
   1000075d2:	jne    0x1000075dc
   1000075d4:	mov    DWORD PTR [rip+0x22496],edi        # 0x100029a70
   1000075da:	jmp    0x100007617
   1000075dc:	cmp    eax,0x4
   1000075df:	jne    0x1000075ed
   1000075e1:	mov    DWORD PTR [rip+0x22485],0x3        # 0x100029a70
   1000075eb:	jmp    0x100007617
   1000075ed:	cmp    eax,ecx
   1000075ef:	jne    0x1000075fd
   1000075f1:	mov    DWORD PTR [rip+0x22475],0x1        # 0x100029a70
   1000075fb:	jmp    0x100007617
   1000075fd:	cmp    eax,0x3
   100007600:	jne    0x10000760a
   100007602:	mov    DWORD PTR [rip+0x22468],ecx        # 0x100029a70
   100007608:	jmp    0x100007617
   10000760a:	lea    rcx,[rip+0x8f7]        # 0x100007f08
   100007611:	call   QWORD PTR [rip+0xffffffffffffa061]        # 0x100001678
   100007617:	xor    r8d,r8d
   10000761a:	mov    rdx,rbp
   10000761d:	mov    ecx,0x8237a0df
   100007622:	call   r14
   100007625:	mov    r13d,0xffffffff
   10000762b:	mov    ecx,eax
   10000762d:	cmp    eax,r13d
   100007630:	je     0x1000076be
   100007636:	cmp    eax,0x3e463de3
   10000763b:	jne    0x100007649
   10000763d:	mov    DWORD PTR [rip+0x2242d],0x1        # 0x100029a74
   100007647:	jmp    0x100007663
   100007649:	mov    eax,DWORD PTR [rip+0x22425]        # 0x100029a74
   10000764f:	cmp    ecx,0xafafafaf
   100007655:	mov    edx,0x2
   10000765a:	cmove  eax,edx
   10000765d:	mov    DWORD PTR [rip+0x22411],eax        # 0x100029a74
   100007663:	test   rbx,rbx
   100007666:	je     0x1000076cb
   100007668:	lea    rdx,[rsp+0x90]
   100007670:	mov    QWORD PTR [rsp+0x90],rdi
   100007678:	call   rbx
   10000767a:	mov    r8,QWORD PTR [rsp+0x90]
   100007682:	lea    rbx,[rip+0x24af7]        # 0x10002c180
   100007689:	test   r8,r8
   10000768c:	je     0x10000769c
   10000768e:	mov    edx,0x40
   100007693:	mov    rcx,rbx
   100007696:	call   QWORD PTR [rip+0xffffffffffff9d84]        # 0x100001420
   10000769c:	call   QWORD PTR [rip+0xffffffffffff99c6]        # 0x100001068
   1000076a2:	mov    r8,QWORD PTR [rsp+0x90]
   1000076aa:	xor    edx,edx
   1000076ac:	mov    rcx,rax
   1000076af:	call   QWORD PTR [rip+0xffffffffffff99ab]        # 0x100001060
   1000076b5:	mov    QWORD PTR [rip+0x24bc4],rbx        # 0x10002c280
   1000076bc:	jmp    0x1000076cb
   1000076be:	lea    rcx,[rip+0x85b]        # 0x100007f20
   1000076c5:	call   QWORD PTR [rip+0xffffffffffff9fad]        # 0x100001678
   1000076cb:	call   QWORD PTR [rip+0xffffffffffffa537]        # 0x100001c08
   1000076d1:	mov    rcx,rax
   1000076d4:	call   QWORD PTR [rip+0xffffffffffffa20e]        # 0x1000018e8
   1000076da:	mov    rax,QWORD PTR [rip+0x24b9f]        # 0x10002c280
   1000076e1:	mov    rbx,QWORD PTR [rip+0x31228]        # 0x100038910
   1000076e8:	test   rax,rax
   1000076eb:	lea    r11,[rip+0x6fe]        # 0x100007df0
   1000076f2:	cmovne r11,rax
   1000076f6:	mov    QWORD PTR [rip+0x24b83],r11        # 0x10002c280
   1000076fd:	cmp    DWORD PTR [rbx+0x49d8],edi
   100007703:	je     0x100007735
   100007705:	mov    rax,QWORD PTR [rip+0xffffffffffffa414]        # 0x100001b20
   10000770c:	mov    rdx,QWORD PTR [rax]
   10000770f:	cmp    DWORD PTR [rdx+0x10],0x3
   100007713:	je     0x100007735
   100007715:	mov    eax,DWORD PTR [rdx+0x14]
   100007718:	cmp    eax,0x2
   10000771b:	je     0x100007735
   10000771d:	cmp    eax,0x1
   100007720:	je     0x100007735
   100007722:	lea    rcx,[rip+0x817]        # 0x100007f40
   100007729:	call   0x100015fc0
   10000772e:	mov    rbx,QWORD PTR [rip+0x311db]        # 0x100038910
   100007735:	lea    rdx,[rip+0x24dd4]        # 0x10002c510
   10000773c:	mov    ecx,0x8237a0df
   100007741:	call   r12
   100007744:	mov    DWORD PTR [rbx+0x3cec],eax
   10000774a:	mov    rax,QWORD PTR [rip+0xffffffffffffa3cf]        # 0x100001b20
   100007751:	mov    rcx,QWORD PTR [rax]
   100007754:	mov    rax,QWORD PTR [rcx]
   100007757:	call   QWORD PTR [rax+0x10]
   10000775a:	test   al,al
   10000775c:	je     0x1000077ed
   100007762:	mov    rax,QWORD PTR [rip+0xffffffffffffa3b7]        # 0x100001b20
   100007769:	mov    rcx,QWORD PTR [rax]
   10000776c:	cmp    DWORD PTR [rcx+0x10],0x3
   100007770:	jne    0x100007784
   100007772:	mov    ecx,0x42ae
   100007777:	call   0x1000182d0
   10000777c:	xor    ecx,ecx
   10000777e:	call   QWORD PTR [rip+0xffffffffffffa3b4]        # 0x100001b38
   100007784:	mov    rcx,QWORD PTR [rip+0x31185]        # 0x100038910
   10000778b:	add    rcx,0x4098
   100007792:	call   0x10000d080
   100007797:	test   eax,eax
   100007799:	jne    0x1000077a8
   10000779b:	lea    rcx,[rip+0x7e6]        # 0x100007f88
   1000077a2:	call   QWORD PTR [rip+0xffffffffffff9ed0]        # 0x100001678
   1000077a8:	mov    rax,QWORD PTR [rip+0x31161]        # 0x100038910
   1000077af:	test   BYTE PTR [rax+0x42f0],0x1
   1000077b6:	jne    0x1000077e3
   1000077b8:	lea    r8,[rip+0x33861]        # 0x10003b020
   1000077bf:	lea    rdx,[rip+0x338aa]        # 0x10003b070
   1000077c6:	mov    r9d,0x2a0
   1000077cc:	mov    ecx,0x1
   1000077d1:	mov    QWORD PTR [rsp+0x20],rdi
   1000077d6:	call   QWORD PTR [rip+0xffffffffffffa37c]        # 0x100001b58
   1000077dc:	mov    rax,QWORD PTR [rip+0x3112d]        # 0x100038910
   1000077e3:	mov    DWORD PTR [rax+0x49ec],0x1
   1000077ed:	mov    rbx,QWORD PTR [rip+0x3111c]        # 0x100038910
   1000077f4:	xor    r8d,r8d
   1000077f7:	mov    rdx,rbp
   1000077fa:	mov    ecx,0xd90827e2
   1000077ff:	call   r14
   100007802:	mov    ecx,edi
   100007804:	cmp    eax,0x2
   100007807:	sete   cl
   10000780a:	mov    DWORD PTR [rbx+0x9438],ecx
   100007810:	mov    rcx,QWORD PTR [rip+0x310f9]        # 0x100038910
   100007817:	cmp    DWORD PTR [rcx+0x9438],edi
   10000781d:	je     0x10000782c
   10000781f:	call   QWORD PTR [rip+0xffffffffffff9e4b]        # 0x100001670
   100007825:	mov    rcx,QWORD PTR [rip+0x310e4]        # 0x100038910
   10000782c:	cmp    DWORD PTR [rcx+0x49f0],edi
   100007832:	je     0x100007865
   100007834:	test   BYTE PTR [rcx+0x42f0],0x1
   10000783b:	jne    0x100007850
   10000783d:	add    rcx,0x4098
   100007844:	call   0x10000d080
   100007849:	mov    rcx,QWORD PTR [rip+0x310c0]        # 0x100038910
   100007850:	test   BYTE PTR [rcx+0x42f0],0x2
   100007857:	jne    0x100007865
   100007859:	add    rcx,0x4098
   100007860:	call   0x10000d7d0
   100007865:	xor    r8d,r8d
   100007868:	mov    rdx,rbp
   10000786b:	mov    ecx,0x2546c2dd
   100007870:	call   r14
   100007873:	cmp    eax,0x1
   100007876:	jne    0x1000078c7
   100007878:	xor    r8d,r8d
   10000787b:	mov    rdx,rbp
   10000787e:	mov    ecx,0xb62b32fa
   100007883:	call   r14
   100007886:	mov    r11d,eax
   100007889:	test   eax,eax
   10000788b:	je     0x100007892
   10000788d:	cmp    eax,0x2
   100007890:	jne    0x1000078c7
   100007892:	mov    rax,QWORD PTR [rip+0x31077]        # 0x100038910
   100007899:	xor    r8d,r8d
   10000789c:	mov    rdx,rbp
   10000789f:	mov    ecx,0x6b1a0189
   1000078a4:	mov    DWORD PTR [rax+0x4090],r11d
   1000078ab:	call   r14
   1000078ae:	mov    ecx,0x1
   1000078b3:	test   eax,eax
   1000078b5:	cmovne ecx,eax
   1000078b8:	mov    rax,QWORD PTR [rip+0x31051]        # 0x100038910
   1000078bf:	mov    DWORD PTR [rax+0x4094],ecx
   1000078c5:	jmp    0x1000078d4
   1000078c7:	mov    rax,QWORD PTR [rip+0x31042]        # 0x100038910
   1000078ce:	mov    DWORD PTR [rax+0x4090],esi
   1000078d4:	mov    rax,QWORD PTR [rip+0xffffffffffffa245]        # 0x100001b20
   1000078db:	mov    rdx,QWORD PTR [rip+0x3102e]        # 0x100038910
   1000078e2:	mov    rbx,QWORD PTR [rax]
   1000078e5:	add    rdx,0x3cf0
   1000078ec:	mov    rax,QWORD PTR [rbx]
   1000078ef:	mov    rcx,rbx
   1000078f2:	call   QWORD PTR [rax+0x18]
   1000078f5:	mov    rdx,QWORD PTR [rip+0x31014]        # 0x100038910
   1000078fc:	mov    r11,QWORD PTR [rbx]
   1000078ff:	lea    r8,[rdx+0x3df8]
   100007906:	mov    rcx,rbx
   100007909:	add    rdx,0x3cf8
   100007910:	call   QWORD PTR [r11+0x20]
   100007914:	mov    rax,QWORD PTR [rip+0x30ff5]        # 0x100038910
   10000791b:	mov    r12d,0xfffffffe
   100007921:	mov    WORD PTR [rax+0x3df6],di
   100007928:	mov    rax,QWORD PTR [rip+0x30fe1]        # 0x100038910
   10000792f:	mov    rcx,rbx
   100007932:	add    DWORD PTR [rax+0x3df8],r12d
   100007939:	mov    rdx,QWORD PTR [rip+0x30fd0]        # 0x100038910
   100007940:	mov    rax,QWORD PTR [rbx]
   100007943:	add    rdx,0x3dfc
   10000794a:	call   QWORD PTR [rax+0x28]
   10000794d:	mov    rdx,QWORD PTR [rip+0x30fbc]        # 0x100038910
   100007954:	mov    r11,QWORD PTR [rbx]
   100007957:	add    rdx,0x3f08
   10000795e:	mov    rcx,rbx
   100007961:	call   QWORD PTR [r11+0x30]
   100007965:	lea    r8,[rsp+0x30]
   10000796a:	mov    edx,0x64
   10000796f:	xor    ecx,ecx
   100007971:	mov    QWORD PTR [rsp+0x30],rdi
   100007976:	call   QWORD PTR [rip+0xffffffffffff9b54]        # 0x1000014d0
   10000797c:	test   eax,eax
   10000797e:	jne    0x100007a17
   100007984:	mov    r8,QWORD PTR [rsp+0x30]
   100007989:	test   r8,r8
   10000798c:	je     0x100007a17
   100007992:	mov    rcx,QWORD PTR [rip+0x30f77]        # 0x100038910
   100007999:	mov    r8,QWORD PTR [r8+0x10]
   10000799d:	mov    edx,0x81
   1000079a2:	add    rcx,0x3e00
   1000079a9:	mov    r9d,edi
   1000079ac:	nop    DWORD PTR [rax+0x0]
   1000079b0:	lea    rax,[rdx+0x7fffff7d]
   1000079b7:	test   rax,rax
   1000079ba:	je     0x1000079d7
   1000079bc:	movzx  eax,WORD PTR [r8]
   1000079c0:	test   ax,ax
   1000079c3:	je     0x1000079d7
   1000079c5:	mov    WORD PTR [rcx],ax
   1000079c8:	add    rcx,0x2
   1000079cc:	add    r8,0x2
   1000079d0:	dec    rdx
   1000079d3:	jne    0x1000079b0
   1000079d5:	jmp    0x1000079dc
   1000079d7:	test   rdx,rdx
   1000079da:	jne    0x1000079e6
   1000079dc:	sub    rcx,0x2
   1000079e0:	mov    r9d,0x8007007a
   1000079e6:	mov    WORD PTR [rcx],di
   1000079e9:	test   r9d,r9d
   1000079ec:	js     0x100007a17
   1000079ee:	mov    rax,QWORD PTR [rip+0x30f1b]        # 0x100038910
   1000079f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   100007a00:	inc    rsi
   100007a03:	cmp    WORD PTR [rax+rsi*2+0x3e00],di
   100007a0b:	jne    0x100007a00
   100007a0d:	add    esi,esi
   100007a0f:	mov    DWORD PTR [rax+0x3f04],esi
   100007a15:	jmp    0x100007a32
   100007a17:	mov    rax,QWORD PTR [rip+0x30ef2]        # 0x100038910
   100007a1e:	mov    DWORD PTR [rax+0x3f04],edi
   100007a24:	mov    rax,QWORD PTR [rip+0x30ee5]        # 0x100038910
   100007a2b:	mov    WORD PTR [rax+0x3e00],di
   100007a32:	mov    rcx,QWORD PTR [rsp+0x30]
   100007a37:	test   rcx,rcx
   100007a3a:	je     0x100007a42
   100007a3c:	call   QWORD PTR [rip+0xffffffffffff9a96]        # 0x1000014d8
   100007a42:	mov    rax,QWORD PTR [rip+0x30ec7]        # 0x100038910
   100007a49:	xor    r8d,r8d
   100007a4c:	mov    rdx,rbp
   100007a4f:	mov    DWORD PTR [rax+0x4078],0x7fff
   100007a59:	mov    rbx,QWORD PTR [rip+0x30eb0]        # 0x100038910
   100007a60:	mov    ecx,0x77c79f5a
   100007a65:	call   r14
   100007a68:	mov    r11d,eax
   100007a6b:	mov    QWORD PTR [rbx+0x4330],r11
   100007a72:	mov    rbx,QWORD PTR [rip+0x30e97]        # 0x100038910
   100007a79:	mov    rax,QWORD PTR [rbx+0x4330]
   100007a80:	cmp    rax,r13
   100007a83:	je     0x100007a8a
   100007a85:	cmp    rax,r12
   100007a88:	jne    0x100007a9e
   100007a8a:	lea    rcx,[rip+0x517]        # 0x100007fa8
   100007a91:	call   QWORD PTR [rip+0xffffffffffff9be1]        # 0x100001678
   100007a97:	mov    rbx,QWORD PTR [rip+0x30e72]        # 0x100038910
   100007a9e:	cmp    QWORD PTR [rbx+0x4330],rdi
   100007aa5:	je     0x100007ac0
   100007aa7:	mov    rax,QWORD PTR [rbx+0x4330]
   100007aae:	shl    rax,0x14
   100007ab2:	mov    QWORD PTR [rbx+0x4330],rax
   100007ab9:	mov    rbx,QWORD PTR [rip+0x30e50]        # 0x100038910
   100007ac0:	xor    r8d,r8d
   100007ac3:	mov    rdx,rbp
   100007ac6:	mov    ecx,0x2318f0fa
   100007acb:	call   r14
   100007ace:	mov    r11d,eax
   100007ad1:	mov    QWORD PTR [rbx+0x4328],r11
   100007ad8:	mov    rbx,QWORD PTR [rip+0x30e31]        # 0x100038910
   100007adf:	mov    rax,QWORD PTR [rbx+0x4328]
   100007ae6:	cmp    rax,r13
   100007ae9:	je     0x100007af0
   100007aeb:	cmp    rax,r12
   100007aee:	jne    0x100007b04
   100007af0:	lea    rcx,[rip+0x4d1]        # 0x100007fc8
   100007af7:	call   QWORD PTR [rip+0xffffffffffff9b7b]        # 0x100001678
   100007afd:	mov    rbx,QWORD PTR [rip+0x30e0c]        # 0x100038910
   100007b04:	cmp    QWORD PTR [rbx+0x4328],rdi
   100007b0b:	je     0x100007b26
   100007b0d:	mov    rax,QWORD PTR [rbx+0x4328]
   100007b14:	shl    rax,0xa
   100007b18:	mov    QWORD PTR [rbx+0x4328],rax
   100007b1f:	mov    rbx,QWORD PTR [rip+0x30dea]        # 0x100038910
   100007b26:	xor    r8d,r8d
   100007b29:	mov    rdx,rbp
   100007b2c:	mov    ecx,0x9ca1d87c
   100007b31:	call   r14
   100007b34:	xor    r8d,r8d
   100007b37:	mov    rdx,rbp
   100007b3a:	mov    DWORD PTR [rbx+0x4080],eax
   100007b40:	mov    rbx,QWORD PTR [rip+0x30dc9]        # 0x100038910
   100007b47:	mov    ecx,0x20c6e8f8
   100007b4c:	call   r14
   100007b4f:	mov    DWORD PTR [rbx+0x4084],eax
   100007b55:	mov    rax,QWORD PTR [rip+0x30db4]        # 0x100038910
   100007b5c:	mov    ecx,DWORD PTR [rax+0x4080]
   100007b62:	cmp    ecx,r13d
   100007b65:	je     0x100007b7c
   100007b67:	cmp    ecx,r12d
   100007b6a:	je     0x100007b7c
   100007b6c:	mov    ecx,DWORD PTR [rax+0x4084]
   100007b72:	cmp    ecx,r13d
   100007b75:	je     0x100007b7c
   100007b77:	cmp    ecx,r12d
   100007b7a:	jne    0x100007b89
   100007b7c:	lea    rcx,[rip+0x465]        # 0x100007fe8
   100007b83:	call   QWORD PTR [rip+0xffffffffffff9aef]        # 0x100001678
   100007b89:	xor    r8d,r8d
   100007b8c:	mov    rdx,rbp
   100007b8f:	mov    ecx,0xa1d58f2b
   100007b94:	call   r14
   100007b97:	xor    r8d,r8d
   100007b9a:	mov    rdx,rbp
   100007b9d:	mov    ecx,0x18a7cc4f
   100007ba2:	mov    DWORD PTR [rip+0x246e0],eax        # 0x10002c288
   100007ba8:	call   r14
   100007bab:	mov    rdx,rbp
   100007bae:	mov    ecx,0x69cd8f1
   100007bb3:	cmp    eax,0x1
   100007bb6:	sete   BYTE PTR [rsp+0x90]
   100007bbe:	xor    r8d,r8d
   100007bc1:	call   r14
   100007bc4:	mov    rdx,rbp
   100007bc7:	mov    ecx,0x4ea65c78
   100007bcc:	cmp    eax,0x1
   100007bcf:	sete   r12b
   100007bd3:	xor    r8d,r8d
   100007bd6:	call   r14
   100007bd9:	mov    rdx,rbp
   100007bdc:	mov    ecx,0x8b44f2b8
   100007be1:	cmp    eax,0x1
   100007be4:	sete   sil
   100007be8:	xor    r8d,r8d
   100007beb:	call   r14
   100007bee:	mov    rdx,rbp
   100007bf1:	mov    ecx,0x106dbc8d
   100007bf6:	cmp    eax,0x1
   100007bf9:	sete   r13b
   100007bfd:	xor    r8d,r8d
   100007c00:	call   r14
   100007c03:	mov    rdx,rbp
   100007c06:	mov    ecx,0xaa61e3e9
   100007c0b:	cmp    eax,0x1
   100007c0e:	sete   BYTE PTR [rsp+0x98]
   100007c16:	xor    r8d,r8d
   100007c19:	call   r14
   100007c1c:	mov    rdx,rbp
   100007c1f:	mov    ecx,0x68380c5a
   100007c24:	cmp    eax,0x1
   100007c27:	sete   BYTE PTR [rsp+0xa0]
   100007c2f:	xor    r8d,r8d
   100007c32:	call   r14
   100007c35:	mov    rbx,QWORD PTR [rip+0x30cd4]        # 0x100038910
   100007c3c:	xor    r8d,r8d
   100007c3f:	mov    rdx,rbp
   100007c42:	mov    ecx,0xbb93c8f5
   100007c47:	mov    DWORD PTR [rsp+0xa8],eax
   100007c4e:	call   r14
   100007c51:	mov    ecx,edi
   100007c53:	mov    rdx,rbp
   100007c56:	cmp    eax,0x2
   100007c59:	sete   cl
   100007c5c:	xor    r8d,r8d
   100007c5f:	mov    DWORD PTR [rbx+0x49cc],ecx
   100007c65:	mov    rbx,QWORD PTR [rip+0x30ca4]        # 0x100038910
   100007c6c:	mov    ecx,0x36bd62a9
   100007c71:	call   r14
   100007c74:	mov    ecx,edi
   100007c76:	mov    rdx,rbp
   100007c79:	cmp    eax,0x2
   100007c7c:	sete   cl
   100007c7f:	xor    r8d,r8d
   100007c82:	mov    DWORD PTR [rbx+0x9428],ecx
   100007c88:	mov    rbx,QWORD PTR [rip+0x30c81]        # 0x100038910
   100007c8f:	mov    ecx,0xb93bc157
   100007c94:	call   r14
   100007c97:	mov    ecx,edi
   100007c99:	mov    rdx,rbp
   100007c9c:	cmp    eax,0x2
   100007c9f:	sete   cl
   100007ca2:	xor    r8d,r8d
   100007ca5:	mov    DWORD PTR [rbx+0x942c],ecx
   100007cab:	mov    rbx,QWORD PTR [rip+0x30c5e]        # 0x100038910
   100007cb2:	mov    ecx,0xb1354bd0
   100007cb7:	call   r14
   100007cba:	mov    r8d,edi
   100007cbd:	cmp    eax,0x2
   100007cc0:	sete   r8b
   100007cc4:	movzx  eax,BYTE PTR [rsp+0x90]
   100007ccc:	mov    DWORD PTR [rbx+0x9430],r8d
   100007cd3:	test   al,al
   100007cd5:	je     0x100007ce2
   100007cd7:	movzx  edx,al
   100007cda:	xor    ecx,ecx
   100007cdc:	call   QWORD PTR [rip+0xffffffffffff9986]        # 0x100001668
   100007ce2:	test   r12b,r12b
   100007ce5:	je     0x100007cf6
   100007ce7:	movzx  edx,r12b
   100007ceb:	mov    ecx,0x1
   100007cf0:	call   QWORD PTR [rip+0xffffffffffff9972]        # 0x100001668
   100007cf6:	mov    ebx,0x2
   100007cfb:	test   sil,sil
   100007cfe:	je     0x100007d0c
   100007d00:	movzx  edx,sil
   100007d04:	mov    ecx,ebx
   100007d06:	call   QWORD PTR [rip+0xffffffffffff995c]        # 0x100001668
   100007d0c:	test   r13b,r13b
   100007d0f:	je     0x100007d20
   100007d11:	movzx  edx,r13b
   100007d15:	mov    ecx,0x3
   100007d1a:	call   QWORD PTR [rip+0xffffffffffff9948]        # 0x100001668
   100007d20:	movzx  eax,BYTE PTR [rsp+0x98]
   100007d28:	test   al,al
   100007d2a:	je     0x100007d3a
   100007d2c:	movzx  edx,al
   100007d2f:	mov    ecx,0x4
   100007d34:	call   QWORD PTR [rip+0xffffffffffff992e]        # 0x100001668
   100007d3a:	movzx  eax,BYTE PTR [rsp+0xa0]
   100007d42:	test   al,al
   100007d44:	je     0x100007d54
   100007d46:	movzx  edx,al
   100007d49:	mov    ecx,0x5
   100007d4e:	call   QWORD PTR [rip+0xffffffffffff9914]        # 0x100001668
   100007d54:	mov    rax,QWORD PTR [rip+0x30bb5]        # 0x100038910
   100007d5b:	cmp    DWORD PTR [rax+0x9428],edi
   100007d61:	jne    0x100007d77
   100007d63:	mov    dl,0x1
   100007d65:	mov    ecx,0x6
   100007d6a:	call   QWORD PTR [rip+0xffffffffffff98f8]        # 0x100001668
   100007d70:	mov    rax,QWORD PTR [rip+0x30b99]        # 0x100038910
   100007d77:	mov    ecx,DWORD PTR [rsp+0xa8]
   100007d7e:	cmp    ecx,0x3
   100007d81:	jne    0x100007d8b
   100007d83:	mov    DWORD PTR [rax+0x9424],ecx
   100007d89:	jmp    0x100007d96
   100007d8b:	cmp    ecx,0x2
   100007d8e:	jne    0x100007d9d
   100007d90:	mov    DWORD PTR [rax+0x9424],ebx
   100007d96:	mov    rax,QWORD PTR [rip+0x30b73]        # 0x100038910
   100007d9d:	mov    rcx,QWORD PTR [rip+0xffffffffffff9d7c]        # 0x100001b20
   100007da4:	mov    rdx,QWORD PTR [rcx]
   100007da7:	mov    ecx,0xb49247da
   100007dac:	cmp    DWORD PTR [rdx+0x14],0x2
   100007db0:	mov    rdx,rbp
   100007db3:	sete   dil
   100007db7:	xor    r8d,r8d
   100007dba:	mov    DWORD PTR [rax+0x49c8],edi
   100007dc0:	call   r14
   100007dc3:	cmp    eax,0x2
   100007dc6:	sete   BYTE PTR [rip+0x21cab]        # 0x100029a78
   100007dcd:	test   r15,r15
   100007dd0:	je     0x100007ddb
   100007dd2:	mov    rcx,r15
   100007dd5:	call   QWORD PTR [rip+0xffffffffffff9295]        # 0x100001070
   100007ddb:	add    rsp,0x48
   100007ddf:	pop    r15
   100007de1:	pop    r14
   100007de3:	pop    r13
   100007de5:	pop    r12
   100007de7:	pop    rdi
   100007de8:	pop    rsi
   100007de9:	pop    rbp
   100007dea:	pop    rbx
   100007deb:	ret    
   100007dec:	nop
   100007ded:	nop
   100007dee:	nop
   100007def:	nop
   100007df0:	push   rbp
   100007df1:	add    BYTE PTR [rsi+0x0],ch
   100007df4:	imul   eax,DWORD PTR [rax],0x6e
   100007df7:	add    BYTE PTR [rdi+0x0],ch
   100007dfa:	ja     0x100007dfc
   100007dfc:	outs   dx,BYTE PTR ds:[rsi]
   100007dfd:	add    BYTE PTR [rax],ah
   100007dff:	add    BYTE PTR [rbx+0x0],dl
   100007e02:	rex.WXB add BYTE PTR [r13+0x0],dl
   100007e06:	add    BYTE PTR [rax],al
   100007e08:	push   rbx
   100007e09:	push   rcx
   100007e0a:	rex.WR
   100007e0b:	rex.X
   100007e0c:	rex.WRXB
   100007e0d:	rex.WRXB push r12
   100007e0f:	cs rex.R
   100007e11:	rex.WR
   100007e12:	rex.WR add BYTE PTR [rax+0x51909090],r10b
   100007e19:	jne    0x100007e80
   100007e1b:	jb     0x100007e96
   100007e1d:	push   rsi
   100007e1e:	(bad)  
   100007e1f:	ins    BYTE PTR es:[rdi],dx
   100007e20:	jne    0x100007e87
   100007e22:	xor    dl,BYTE PTR [rdi+0x0]
   100007e25:	nop
   100007e26:	nop
   100007e27:	nop
   100007e28:	push   rcx
   100007e29:	jne    0x100007e90
   100007e2b:	jb     0x100007ea6
   100007e2d:	push   rax
   100007e2e:	jb     0x100007e9f
   100007e30:	fs jne 0x100007e96
   100007e33:	je     0x100007e88
   100007e35:	je     0x100007ea9
   100007e37:	imul   ebp,DWORD PTR [rsi+0x67],0x90909000
   100007e3e:	nop
   100007e3f:	nop
   100007e40:	push   rcx
   100007e41:	jne    0x100007ea8
   100007e43:	jb     0x100007ebe
   100007e45:	push   rsi
   100007e46:	(bad)  
   100007e47:	ins    BYTE PTR es:[rdi],dx
   100007e48:	jne    0x100007eaf
   100007e4a:	rex.WB
   100007e4b:	add    BYTE PTR [rax+0x51539090],r10b
   100007e52:	rex.WR
   100007e53:	rex.X
   100007e54:	rex.WRXB
   100007e55:	rex.WRXB push r12
   100007e57:	cs rex.R
   100007e59:	rex.WR
   100007e5a:	rex.WR and BYTE PTR [rbp+0x69],r13b
   100007e5e:	jae    0x100007ed3
   100007e60:	imul   ebp,DWORD PTR [rsi+0x67],0x746e6520
   100007e67:	jb     0x100007ee2
   100007e69:	and    BYTE PTR [rax+0x6f],dh
   100007e6c:	imul   ebp,DWORD PTR [rsi+0x74],0x65755120
   100007e73:	jb     0x100007eee
   100007e75:	push   rsi
   100007e76:	(bad)  
   100007e77:	ins    BYTE PTR es:[rdi],dx
   100007e78:	jne    0x100007edf
   100007e7a:	xor    dl,BYTE PTR [rdi+0x0]
   100007e7d:	nop
   100007e7e:	nop
   100007e7f:	nop
   100007e80:	push   rbx
   100007e81:	push   rcx
   100007e82:	rex.WR
   100007e83:	rex.X
   100007e84:	rex.WRXB
   100007e85:	rex.WRXB push r12
   100007e87:	cs rex.R
   100007e89:	rex.WR
   100007e8a:	rex.WR and BYTE PTR [rbp+0x69],r13b
   100007e8e:	jae    0x100007f03
   100007e90:	imul   ebp,DWORD PTR [rsi+0x67],0x746e6520
   100007e97:	jb     0x100007f12
   100007e99:	and    BYTE PTR [rax+0x6f],dh
   100007e9c:	imul   ebp,DWORD PTR [rsi+0x74],0x65755120
   100007ea3:	jb     0x100007f1e
   100007ea5:	push   rax
   100007ea6:	jb     0x100007f17
   100007ea8:	fs jne 0x100007f0e
   100007eab:	je     0x100007f00
   100007ead:	je     0x100007f21
   100007eaf:	imul   ebp,DWORD PTR [rsi+0x67],0x90909000
   100007eb6:	nop
   100007eb7:	nop
   100007eb8:	push   rbx
   100007eb9:	push   rcx
   100007eba:	rex.WR
   100007ebb:	rex.X
   100007ebc:	rex.WRXB
   100007ebd:	rex.WRXB push r12
   100007ebf:	cs rex.R
   100007ec1:	rex.WR
   100007ec2:	rex.WR and BYTE PTR [rbp+0x69],r13b
   100007ec6:	jae    0x100007f3b
   100007ec8:	imul   ebp,DWORD PTR [rsi+0x67],0x746e6520
   100007ecf:	jb     0x100007f4a
   100007ed1:	and    BYTE PTR [rax+0x6f],dh
   100007ed4:	imul   ebp,DWORD PTR [rsi+0x74],0x65755120
   100007edb:	jb     0x100007f56
   100007edd:	push   rsi
   100007ede:	(bad)  
   100007edf:	ins    BYTE PTR es:[rdi],dx
   100007ee0:	jne    0x100007f47
   100007ee2:	rex.WB
   100007ee3:	add    BYTE PTR [rax+0x6e559090],r10b
   100007eea:	(bad)  
   100007eeb:	(bad)  
   100007eec:	ins    BYTE PTR es:[rdi],dx
   100007eed:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   100007ef2:	ins    BYTE PTR es:[rdi],dx
   100007ef3:	outs   dx,DWORD PTR ds:[rsi]
   100007ef4:	(bad)  
   100007ef5:	and    BYTE PTR fs:[rbx+0x51],dl
   100007ef9:	rex.WR
   100007efa:	rex.X
   100007efb:	rex.WRXB
   100007efc:	rex.WRXB push r12
   100007efe:	cs rex.R
   100007f00:	rex.WR
   100007f01:	rex.WR add BYTE PTR [rax-0x6f6f6f70],r10b
   100007f08:	push   rbp
   100007f09:	outs   dx,BYTE PTR ds:[rsi]
   100007f0a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   100007f0e:	outs   dx,BYTE PTR ds:[rsi]
   100007f0f:	and    BYTE PTR [rax+0x61],dh
   100007f12:	movsxd ebp,DWORD PTR [rbx+0x61]
   100007f15:	and    BYTE PTR gs:[ecx+0x64],ch
   100007f1a:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100007f20:	rex.RB jb 0x100007f95
   100007f23:	outs   dx,DWORD PTR ds:[rsi]
   100007f24:	jb     0x100007f46
   100007f26:	addr32 gs je 0x100007f9e
   100007f2a:	imul   ebp,DWORD PTR [rsi+0x67],0x4c415620
   100007f31:	push   rbp
   100007f32:	rex.RB pop r15
   100007f34:	push   rbx
   100007f35:	rex.WXB push r13
   100007f37:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100007f3d:	nop
   100007f3e:	nop
   100007f3f:	nop
   100007f40:	push   rbx
   100007f41:	push   rcx
   100007f42:	rex.WR and BYTE PTR [rbx+0x65],r10b
   100007f46:	jb     0x100007fbe
   100007f48:	gs jb  0x100007f6b
   100007f4b:	push   rbp
   100007f4c:	jae    0x100007fb3
   100007f4e:	jb     0x100007f70
   100007f50:	rex.WB outs dx,BYTE PTR ds:[rsi]
   100007f52:	jae    0x100007fc8
   100007f54:	(bad)  
   100007f55:	outs   dx,BYTE PTR ds:[rsi]
   100007f56:	movsxd esp,DWORD PTR [rbp+0x20]
   100007f59:	outs   dx,DWORD PTR ds:[rsi]
   100007f5a:	outs   dx,BYTE PTR ds:[rsi]
   100007f5b:	ins    BYTE PTR es:[rdi],dx
   100007f5c:	jns    0x100007f7e
   100007f5e:	jae    0x100007fd5
   100007f60:	jo     0x100007fd2
   100007f62:	outs   dx,DWORD PTR ds:[rsi]
   100007f63:	jb     0x100007fd9
   100007f65:	gs and BYTE PTR fs:[rdi+0x6e],ch
   100007f6a:	and    BYTE PTR [rbx+0x51],dl
   100007f6d:	rex.WR and BYTE PTR [rbx+0x65],r10b
   100007f71:	jb     0x100007fe9
   100007f73:	gs jb  0x100007f96
   100007f76:	rex.RB js 0x100007fe9
   100007f79:	jb     0x100007fe0
   100007f7b:	jae    0x100007ff0
   100007f7d:	and    BYTE PTR [rbx+0x4b],dl
   100007f80:	push   rbp
   100007f81:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100007f87:	nop
   100007f88:	data16 (bad) 
   100007f8a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   100007f92:	ins    BYTE PTR es:[rdi],dx
   100007f93:	outs   dx,DWORD PTR ds:[rsi]
   100007f94:	(bad)  
   100007f95:	and    BYTE PTR fs:[rbx+0x6c],ah
   100007f99:	jne    0x10000800e
   100007f9b:	je     0x100008002
   100007f9d:	jb     0x100007fbf
   100007f9f:	ins    BYTE PTR es:[rdi],dx
   100007fa0:	imul   esp,DWORD PTR [rdx+0x72],0x797261
   100007fa7:	nop
   100007fa8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   100007faa:	jbe    0x10000800d
   100007fac:	ins    BYTE PTR es:[rdi],dx
   100007fad:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x62617461
   100007fb5:	(bad)  
   100007fb6:	jae    0x10000801d
   100007fb8:	and    BYTE PTR [rbx+0x69],dh
   100007fbb:	jp     0x100008022
   100007fbd:	and    BYTE PTR [rcx+rbp*2+0x6d],ch
   100007fc1:	imul   esi,DWORD PTR [rax+rax*1-0x70],0x49909090
   100007fc9:	outs   dx,BYTE PTR ds:[rsi]
   100007fca:	jbe    0x10000802d
   100007fcc:	ins    BYTE PTR es:[rdi],dx
   100007fcd:	imul   esp,DWORD PTR [rax+riz*1+0x62],0x65666675
   100007fd5:	jb     0x100007ff7
   100007fd7:	jo     0x100008048
   100007fd9:	outs   dx,DWORD PTR ds:[rsi]
   100007fda:	ins    BYTE PTR es:[rdi],dx
   100007fdb:	and    BYTE PTR [rbx+0x69],dh
   100007fde:	jp     0x100008045
   100007fe0:	and    BYTE PTR [rcx+rbp*2+0x6d],ch
   100007fe4:	imul   esi,DWORD PTR [rax+rax*1-0x70],0x61766e49
   100007fec:	ins    BYTE PTR es:[rdi],dx
   100007fed:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x6e207861
   100007ff5:	jne    0x100008064
   100007ff7:	(bad)  
   100007ff8:	gs jb  0x10000801b
   100007ffb:	outs   dx,DWORD PTR ds:[rsi]
   100007ffc:	data16 and BYTE PTR [rbx+0x6f],dh
   100008000:	movsxd ebp,DWORD PTR [rbx+0x65]
   100008003:	je     0x100008078
   100008005:	and    BYTE PTR [rdi+0x72],ch
   100008008:	and    BYTE PTR [rbx+0x6f],ah
   10000800b:	jb     0x100008072
   10000800d:	jae    0x10000800f
   10000800f:	nop
   100008010:	nop
   100008011:	nop
   100008012:	nop
   100008013:	nop
   100008014:	nop
   100008015:	nop
   100008016:	nop
   100008017:	nop
   100008018:	nop
   100008019:	nop
   10000801a:	nop
   10000801b:	nop
   10000801c:	nop
   10000801d:	nop
   10000801e:	nop
   10000801f:	nop
   100008020:	mov    QWORD PTR [rsp+0x8],rbx
   100008025:	mov    QWORD PTR [rsp+0x10],rsi
   10000802a:	mov    QWORD PTR [rsp+0x18],rdi
   10000802f:	push   rbp
   100008030:	push   r12
   100008032:	push   r13
   100008034:	push   r14
   100008036:	push   r15
   100008038:	lea    rbp,[rsp-0x410]
   100008040:	sub    rsp,0x510
   100008047:	mov    rax,QWORD PTR [rip+0x211a2]        # 0x1000291f0
   10000804e:	xor    rax,rsp
   100008051:	mov    QWORD PTR [rbp+0x400],rax
   100008058:	mov    rax,QWORD PTR [rip+0xffffffffffff9ac1]        # 0x100001b20
   10000805f:	xor    esi,esi
   100008061:	mov    rcx,QWORD PTR [rax]
   100008064:	mov    QWORD PTR [rsp+0x38],rsi
   100008069:	mov    rax,QWORD PTR [rcx]
   10000806c:	call   QWORD PTR [rax+0xd0]
   100008072:	mov    r11,QWORD PTR [rip+0x30897]        # 0x100038910
   100008079:	xor    edx,edx
   10000807b:	mov    QWORD PTR [r11+0x4098],rsi
   100008082:	mov    rax,QWORD PTR [rip+0x30887]        # 0x100038910
   100008089:	mov    QWORD PTR [rax+0x40a0],rsi
   100008090:	mov    rax,QWORD PTR [rip+0x30879]        # 0x100038910
   100008097:	mov    DWORD PTR [rax+0x3cf0],0x1
   1000080a1:	mov    rax,QWORD PTR [rip+0x30868]        # 0x100038910
   1000080a8:	mov    DWORD PTR [rax+0x3df8],0x100
   1000080b2:	mov    rcx,QWORD PTR [rip+0x30857]        # 0x100038910
   1000080b9:	mov    r8d,DWORD PTR [rcx+0x3df8]
   1000080c0:	add    rcx,0x3cf8
   1000080c7:	call   0x10001f80c
   1000080cc:	mov    r11,QWORD PTR [rip+0x3083d]        # 0x100038910
   1000080d3:	xor    edx,edx
   1000080d5:	mov    DWORD PTR [r11+0x3dfc],esi
   1000080dc:	mov    rax,QWORD PTR [rip+0x3082d]        # 0x100038910
   1000080e3:	mov    DWORD PTR [rax+0x3f04],0x102
   1000080ed:	mov    rcx,QWORD PTR [rip+0x3081c]        # 0x100038910
   1000080f4:	mov    r8d,DWORD PTR [rcx+0x3f04]
   1000080fb:	add    rcx,0x3e00
   100008102:	call   0x10001f80c
   100008107:	mov    r11,QWORD PTR [rip+0x30802]        # 0x100038910
   10000810e:	xor    eax,eax
   100008110:	mov    DWORD PTR [r11+0x3f08],eax
   100008117:	mov    WORD PTR [r11+0x3f0c],ax
   10000811f:	mov    rax,QWORD PTR [rip+0x307ea]        # 0x100038910
   100008126:	mov    DWORD PTR [rax+0x4318],esi
   10000812c:	mov    rax,QWORD PTR [rip+0x307dd]        # 0x100038910
   100008133:	mov    QWORD PTR [rax+0x4330],rsi
   10000813a:	mov    rax,QWORD PTR [rip+0x307cf]        # 0x100038910
   100008141:	mov    QWORD PTR [rax+0x4328],rsi
   100008148:	mov    rax,QWORD PTR [rip+0x307c1]        # 0x100038910
   10000814f:	mov    QWORD PTR [rax+0x4320],rsi
   100008156:	mov    rax,QWORD PTR [rip+0x307b3]        # 0x100038910
   10000815d:	mov    QWORD PTR [rax+0x9528],rsi
   100008164:	mov    rax,QWORD PTR [rip+0x307a5]        # 0x100038910
   10000816b:	cmp    DWORD PTR [rax+0x49c4],esi
   100008171:	je     0x100008186
   100008173:	mov    ecx,0x1388
   100008178:	mov    WORD PTR [rax+0x4370],cx
   10000817f:	mov    rax,QWORD PTR [rip+0x3078a]        # 0x100038910
   100008186:	mov    DWORD PTR [rax+0x4078],esi
   10000818c:	mov    rax,QWORD PTR [rip+0x3077d]        # 0x100038910
   100008193:	mov    DWORD PTR [rax+0x407c],esi
   100008199:	mov    rax,QWORD PTR [rip+0x30770]        # 0x100038910
   1000081a0:	mov    QWORD PTR [rip+0x218c5],0x2        # 0x100029a70
   1000081ab:	mov    DWORD PTR [rax+0x9428],0x1
   1000081b5:	call   QWORD PTR [rip+0xffffffffffff9a4d]        # 0x100001c08
   1000081bb:	mov    rcx,rax
   1000081be:	call   QWORD PTR [rip+0xffffffffffff9724]        # 0x1000018e8
   1000081c4:	mov    r11,QWORD PTR [rip+0x30745]        # 0x100038910
   1000081cb:	cmp    DWORD PTR [r11+0x49c4],esi
   1000081d2:	je     0x1000081fb
   1000081d4:	lea    rax,[rip+0x745]        # 0x100008920
   1000081db:	mov    QWORD PTR [rip+0x2409e],rax        # 0x10002c280
   1000081e2:	mov    DWORD PTR [r11+0x3cec],0x63ccfce6
   1000081ed:	call   0x100015df0
   1000081f2:	mov    QWORD PTR [rip+0x23f77],rax        # 0x10002c170
   1000081f9:	jmp    0x100008214
   1000081fb:	lea    rax,[rip+0x6e6]        # 0x1000088e8
   100008202:	mov    QWORD PTR [rip+0x24077],rax        # 0x10002c280
   100008209:	mov    DWORD PTR [r11+0x3cec],0x6b9471a8
   100008214:	mov    rax,QWORD PTR [rip+0x306f5]        # 0x100038910
   10000821b:	or     rdi,0xffffffffffffffff
   10000821f:	mov    DWORD PTR [rax+0x4090],edi
   100008225:	mov    rbx,QWORD PTR [rip+0x306e4]        # 0x100038910
   10000822c:	add    rbx,0x83d4
   100008233:	call   QWORD PTR [rip+0xffffffffffff99ff]        # 0x100001c38
   100008239:	lea    r8,[rip+0xffffffffffffb1c8]        # 0x100003408
   100008240:	lea    rcx,[rbp+0x1f0]
   100008247:	mov    edx,0x105
   10000824c:	mov    r9,rax
   10000824f:	mov    QWORD PTR [rsp+0x20],rbx
   100008254:	call   0x100005bb0
   100008259:	mov    ebx,eax
   10000825b:	test   eax,eax
   10000825d:	jns    0x1000082a5
   10000825f:	mov    ecx,eax
   100008261:	call   QWORD PTR [rip+0xffffffffffff9451]        # 0x1000016b8
   100008267:	call   QWORD PTR [rip+0xffffffffffff99cb]        # 0x100001c38
   10000826d:	mov    DWORD PTR [rsp+0x28],ebx
   100008271:	lea    rbx,[rip+0x6b8]        # 0x100008930
   100008278:	lea    r8,[rip+0xffffffffffffb541]        # 0x1000037c0
   10000827f:	lea    rcx,[rbp-0x10]
   100008283:	mov    r9,rax
   100008286:	mov    edx,0x200
   10000828b:	mov    QWORD PTR [rsp+0x20],rbx
   100008290:	call   0x10000eb40
   100008295:	mov    rcx,rbx
   100008298:	test   eax,eax
   10000829a:	js     0x1000082a0
   10000829c:	lea    rcx,[rbp-0x10]
   1000082a0:	call   0x100015fc0
   1000082a5:	lea    rax,[rsp+0x38]
   1000082aa:	lea    rdx,[rbp+0x1f0]
   1000082b1:	mov    r9d,0x1
   1000082b7:	xor    r8d,r8d
   1000082ba:	mov    rcx,0xffffffff80000002
   1000082c1:	mov    DWORD PTR [rsp+0x34],esi
   1000082c5:	mov    QWORD PTR [rsp+0x20],rax
   1000082ca:	xor    r13b,r13b
   1000082cd:	xor    r12b,r12b
   1000082d0:	xor    bl,bl
   1000082d2:	xor    r15b,r15b
   1000082d5:	xor    r14b,r14b
   1000082d8:	call   0x100019a90
   1000082dd:	test   eax,eax
   1000082df:	je     0x1000082ed
   1000082e1:	lea    rcx,[rip+0x678]        # 0x100008960
   1000082e8:	call   0x100015fc0
   1000082ed:	mov    rcx,QWORD PTR [rsp+0x38]
   1000082f2:	lea    rax,[rsp+0x30]
   1000082f7:	lea    rdx,[rip+0x67a]        # 0x100008978
   1000082fe:	mov    QWORD PTR [rsp+0x28],rax
   100008303:	lea    rax,[rsp+0x34]
   100008308:	xor    r9d,r9d
   10000830b:	xor    r8d,r8d
   10000830e:	mov    DWORD PTR [rsp+0x30],0x4
   100008316:	mov    QWORD PTR [rsp+0x20],rax
   10000831b:	call   0x100019dc0
   100008320:	test   eax,eax
   100008322:	jne    0x10000832b
   100008324:	cmp    DWORD PTR [rsp+0x34],0x1
   100008329:	je     0x100008337
   10000832b:	lea    rcx,[rip+0x62e]        # 0x100008960
   100008332:	call   0x100015fc0
   100008337:	mov    rax,QWORD PTR [rip+0x305d2]        # 0x100038910
   10000833e:	lea    rcx,[rsp+0x30]
   100008343:	lea    rdx,[rip+0xffffffffffffb0c6]        # 0x100003410
   10000834a:	mov    QWORD PTR [rsp+0x28],rcx
   10000834f:	mov    rcx,QWORD PTR [rsp+0x38]
   100008354:	add    rax,0x3cf0
   10000835a:	xor    r9d,r9d
   10000835d:	xor    r8d,r8d
   100008360:	mov    DWORD PTR [rsp+0x30],0x4
   100008368:	mov    QWORD PTR [rsp+0x20],rax
   10000836d:	call   0x100019dc0
   100008372:	mov    r11,QWORD PTR [rip+0x30597]        # 0x100038910
   100008379:	mov    rcx,QWORD PTR [rsp+0x38]
   10000837e:	lea    rax,[r11+0x3df8]
   100008385:	add    r11,0x3cf8
   10000838c:	mov    QWORD PTR [rsp+0x28],rax
   100008391:	lea    rdx,[rip+0xffffffffffffb090]        # 0x100003428
   100008398:	xor    r9d,r9d
   10000839b:	xor    r8d,r8d
   10000839e:	mov    QWORD PTR [rsp+0x20],r11
   1000083a3:	call   0x100019dc0
   1000083a8:	mov    rax,QWORD PTR [rip+0x30561]        # 0x100038910
   1000083af:	xor    ecx,ecx
   1000083b1:	mov    WORD PTR [rax+0x3df6],cx
   1000083b8:	mov    rax,QWORD PTR [rip+0x30551]        # 0x100038910
   1000083bf:	lea    rcx,[rsp+0x30]
   1000083c4:	add    DWORD PTR [rax+0x3df8],0xfffffffe
   1000083cb:	mov    rax,QWORD PTR [rip+0x3053e]        # 0x100038910
   1000083d2:	mov    QWORD PTR [rsp+0x28],rcx
   1000083d7:	mov    rcx,QWORD PTR [rsp+0x38]
   1000083dc:	add    rax,0x3dfc
   1000083e2:	lea    rdx,[rip+0xffffffffffffb05f]        # 0x100003448
   1000083e9:	xor    r9d,r9d
   1000083ec:	xor    r8d,r8d
   1000083ef:	mov    QWORD PTR [rsp+0x20],rax
   1000083f4:	mov    DWORD PTR [rsp+0x30],0x4
   1000083fc:	call   0x100019dc0
   100008401:	mov    rcx,QWORD PTR [rsp+0x38]
   100008406:	lea    rax,[rsp+0x40]
   10000840b:	lea    rdx,[rip+0xffffffffffffb04e]        # 0x100003460
   100008412:	xor    r9d,r9d
   100008415:	mov    QWORD PTR [rsp+0x28],rax
   10000841a:	lea    rax,[rsp+0x50]
   10000841f:	xor    r8d,r8d
   100008422:	mov    QWORD PTR [rsp+0x20],rax
   100008427:	mov    DWORD PTR [rsp+0x40],0x2
   10000842f:	call   0x100019dc0
   100008434:	test   eax,eax
   100008436:	jne    0x10000844b
   100008438:	mov    rax,QWORD PTR [rip+0x304d1]        # 0x100038910
   10000843f:	movzx  ecx,WORD PTR [rsp+0x50]
   100008444:	mov    WORD PTR [rax+0x3f08],cx
   10000844b:	mov    rcx,QWORD PTR [rsp+0x38]
   100008450:	lea    rax,[rsp+0x40]
   100008455:	lea    rdx,[rip+0xffffffffffffb014]        # 0x100003470
   10000845c:	mov    QWORD PTR [rsp+0x28],rax
   100008461:	lea    rax,[rsp+0x50]
   100008466:	xor    r9d,r9d
   100008469:	xor    r8d,r8d
   10000846c:	mov    DWORD PTR [rsp+0x40],0x2
   100008474:	mov    QWORD PTR [rsp+0x20],rax
   100008479:	call   0x100019dc0
   10000847e:	test   eax,eax
   100008480:	jne    0x100008495
   100008482:	mov    rax,QWORD PTR [rip+0x30487]        # 0x100038910
   100008489:	movzx  ecx,WORD PTR [rsp+0x50]
   10000848e:	mov    WORD PTR [rax+0x3f0a],cx
   100008495:	mov    rcx,QWORD PTR [rsp+0x38]
   10000849a:	lea    rax,[rsp+0x40]
   10000849f:	lea    rdx,[rip+0xffffffffffffafda]        # 0x100003480
   1000084a6:	mov    QWORD PTR [rsp+0x28],rax
   1000084ab:	lea    rax,[rsp+0x50]
   1000084b0:	xor    r9d,r9d
   1000084b3:	xor    r8d,r8d
   1000084b6:	mov    DWORD PTR [rsp+0x40],0x2
   1000084be:	mov    QWORD PTR [rsp+0x20],rax
   1000084c3:	call   0x100019dc0
   1000084c8:	test   eax,eax
   1000084ca:	jne    0x1000084df
   1000084cc:	mov    rax,QWORD PTR [rip+0x3043d]        # 0x100038910
   1000084d3:	movzx  ecx,WORD PTR [rsp+0x50]
   1000084d8:	mov    WORD PTR [rax+0x3f0c],cx
   1000084df:	mov    rcx,QWORD PTR [rsp+0x38]
   1000084e4:	lea    rax,[rsp+0x30]
   1000084e9:	lea    rdx,[rip+0x4a8]        # 0x100008998
   1000084f0:	mov    QWORD PTR [rsp+0x28],rax
   1000084f5:	lea    rax,[rsp+0x34]
   1000084fa:	xor    r9d,r9d
   1000084fd:	xor    r8d,r8d
   100008500:	mov    DWORD PTR [rsp+0x30],0x4
   100008508:	mov    QWORD PTR [rsp+0x20],rax
   10000850d:	call   0x100019dc0
   100008512:	test   eax,eax
   100008514:	jne    0x10000851e
   100008516:	cmp    DWORD PTR [rsp+0x34],eax
   10000851a:	setne  r13b
   10000851e:	mov    rcx,QWORD PTR [rsp+0x38]
   100008523:	lea    rax,[rsp+0x30]
   100008528:	lea    rdx,[rip+0x489]        # 0x1000089b8
   10000852f:	mov    QWORD PTR [rsp+0x28],rax
   100008534:	lea    rax,[rsp+0x34]
   100008539:	xor    r9d,r9d
   10000853c:	xor    r8d,r8d
   10000853f:	mov    DWORD PTR [rsp+0x30],0x4
   100008547:	mov    QWORD PTR [rsp+0x20],rax
   10000854c:	call   0x100019dc0
   100008551:	test   eax,eax
   100008553:	jne    0x10000855d
   100008555:	cmp    DWORD PTR [rsp+0x34],eax
   100008559:	setne  r12b
   10000855d:	mov    rcx,QWORD PTR [rsp+0x38]
   100008562:	lea    rax,[rsp+0x30]
   100008567:	lea    rdx,[rip+0x482]        # 0x1000089f0
   10000856e:	mov    QWORD PTR [rsp+0x28],rax
   100008573:	lea    rax,[rsp+0x34]
   100008578:	xor    r9d,r9d
   10000857b:	xor    r8d,r8d
   10000857e:	mov    DWORD PTR [rsp+0x30],0x4
   100008586:	mov    QWORD PTR [rsp+0x20],rax
   10000858b:	call   0x100019dc0
   100008590:	test   eax,eax
   100008592:	jne    0x10000859c
   100008594:	cmp    DWORD PTR [rsp+0x34],eax
   100008598:	setne  sil
   10000859c:	mov    rcx,QWORD PTR [rsp+0x38]
   1000085a1:	lea    rax,[rsp+0x30]
   1000085a6:	lea    rdx,[rip+0x46b]        # 0x100008a18
   1000085ad:	mov    QWORD PTR [rsp+0x28],rax
   1000085b2:	lea    rax,[rsp+0x34]
   1000085b7:	xor    r9d,r9d
   1000085ba:	xor    r8d,r8d
   1000085bd:	mov    DWORD PTR [rsp+0x30],0x4
   1000085c5:	mov    QWORD PTR [rsp+0x20],rax
   1000085ca:	call   0x100019dc0
   1000085cf:	test   eax,eax
   1000085d1:	jne    0x1000085da
   1000085d3:	cmp    DWORD PTR [rsp+0x34],eax
   1000085d7:	setne  bl
   1000085da:	mov    rcx,QWORD PTR [rsp+0x38]
   1000085df:	lea    rax,[rsp+0x30]
   1000085e4:	lea    rdx,[rip+0x445]        # 0x100008a30
   1000085eb:	mov    QWORD PTR [rsp+0x28],rax
   1000085f0:	lea    rax,[rsp+0x34]
   1000085f5:	xor    r9d,r9d
   1000085f8:	xor    r8d,r8d
   1000085fb:	mov    DWORD PTR [rsp+0x30],0x4
   100008603:	mov    QWORD PTR [rsp+0x20],rax
   100008608:	call   0x100019dc0
   10000860d:	test   eax,eax
   10000860f:	jne    0x100008619
   100008611:	cmp    DWORD PTR [rsp+0x34],eax
   100008615:	setne  r15b
   100008619:	mov    rcx,QWORD PTR [rsp+0x38]
   10000861e:	lea    rax,[rsp+0x30]
   100008623:	lea    rdx,[rip+0x436]        # 0x100008a60
   10000862a:	mov    QWORD PTR [rsp+0x28],rax
   10000862f:	lea    rax,[rsp+0x34]
   100008634:	xor    r9d,r9d
   100008637:	xor    r8d,r8d
   10000863a:	mov    DWORD PTR [rsp+0x30],0x4
   100008642:	mov    QWORD PTR [rsp+0x20],rax
   100008647:	call   0x100019dc0
   10000864c:	test   eax,eax
   10000864e:	jne    0x100008658
   100008650:	cmp    DWORD PTR [rsp+0x34],eax
   100008654:	setne  r14b
   100008658:	mov    rcx,QWORD PTR [rsp+0x38]
   10000865d:	lea    rax,[rsp+0x30]
   100008662:	lea    rdx,[rip+0x417]        # 0x100008a80
   100008669:	mov    QWORD PTR [rsp+0x28],rax
   10000866e:	lea    rax,[rsp+0x34]
   100008673:	xor    r9d,r9d
   100008676:	xor    r8d,r8d
   100008679:	mov    DWORD PTR [rsp+0x30],0x4
   100008681:	mov    QWORD PTR [rsp+0x20],rax
   100008686:	call   0x100019dc0
   10000868b:	test   eax,eax
   10000868d:	jne    0x1000086a7
   10000868f:	xor    eax,eax
   100008691:	cmp    DWORD PTR [rsp+0x34],eax
   100008695:	mov    ecx,eax
   100008697:	mov    rax,QWORD PTR [rip+0x30272]        # 0x100038910
   10000869e:	setne  cl
   1000086a1:	mov    DWORD PTR [rax+0x49cc],ecx
   1000086a7:	mov    rcx,QWORD PTR [rsp+0x38]
   1000086ac:	lea    rax,[rsp+0x30]
   1000086b1:	lea    rdx,[rip+0x3e8]        # 0x100008aa0
   1000086b8:	mov    QWORD PTR [rsp+0x28],rax
   1000086bd:	lea    rax,[rsp+0x34]
   1000086c2:	xor    r9d,r9d
   1000086c5:	xor    r8d,r8d
   1000086c8:	mov    DWORD PTR [rsp+0x30],0x4
   1000086d0:	mov    QWORD PTR [rsp+0x20],rax
   1000086d5:	call   0x100019dc0
   1000086da:	test   eax,eax
   1000086dc:	jne    0x1000086f6
   1000086de:	xor    eax,eax
   1000086e0:	cmp    DWORD PTR [rsp+0x34],eax
   1000086e4:	mov    ecx,eax
   1000086e6:	mov    rax,QWORD PTR [rip+0x30223]        # 0x100038910
   1000086ed:	setne  cl
   1000086f0:	mov    DWORD PTR [rax+0x49c8],ecx
   1000086f6:	mov    rcx,QWORD PTR [rsp+0x38]
   1000086fb:	call   0x10001ab50
   100008700:	mov    r11,QWORD PTR [rip+0x30209]        # 0x100038910
   100008707:	cmp    DWORD PTR [r11+0x3cf0],0x2
   10000870f:	je     0x10000871c
   100008711:	mov    DWORD PTR [r11+0x3cf0],0x1
   10000871c:	xor    eax,eax
   10000871e:	lea    r8,[rsp+0x48]
   100008723:	xor    ecx,ecx
   100008725:	lea    edx,[rax+0x64]
   100008728:	mov    QWORD PTR [rsp+0x48],rax
   10000872d:	call   QWORD PTR [rip+0xffffffffffff8d9d]        # 0x1000014d0
   100008733:	test   eax,eax
   100008735:	jne    0x1000087da
   10000873b:	mov    r8,QWORD PTR [rsp+0x48]
   100008740:	test   r8,r8
   100008743:	je     0x1000087da
   100008749:	mov    rcx,QWORD PTR [rip+0x301c0]        # 0x100038910
   100008750:	mov    r8,QWORD PTR [r8+0x10]
   100008754:	mov    edx,0x81
   100008759:	add    rcx,0x3e00
   100008760:	xor    r10d,r10d
   100008763:	mov    r9d,r10d
   100008766:	data16 nop WORD PTR [rax+rax*1+0x0]
   100008770:	lea    rax,[rdx+0x7fffff7d]
   100008777:	test   rax,rax
   10000877a:	je     0x100008797
   10000877c:	movzx  eax,WORD PTR [r8]
   100008780:	test   ax,ax
   100008783:	je     0x100008797
   100008785:	mov    WORD PTR [rcx],ax
   100008788:	add    rcx,0x2
   10000878c:	add    r8,0x2
   100008790:	dec    rdx
   100008793:	jne    0x100008770
   100008795:	jmp    0x10000879c
   100008797:	test   rdx,rdx
   10000879a:	jne    0x1000087a6
   10000879c:	sub    rcx,0x2
   1000087a0:	mov    r9d,0x8007007a
   1000087a6:	mov    WORD PTR [rcx],r10w
   1000087aa:	test   r9d,r9d
   1000087ad:	js     0x1000087da
   1000087af:	mov    rax,QWORD PTR [rip+0x3015a]        # 0x100038910
   1000087b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1000087c0:	inc    rdi
   1000087c3:	cmp    WORD PTR [rax+rdi*2+0x3e00],r10w
   1000087cc:	jne    0x1000087c0
   1000087ce:	add    edi,edi
   1000087d0:	mov    DWORD PTR [rax+0x3f04],edi
   1000087d6:	xor    edi,edi
   1000087d8:	jmp    0x1000087f7
   1000087da:	mov    rax,QWORD PTR [rip+0x3012f]        # 0x100038910
   1000087e1:	xor    edi,edi
   1000087e3:	mov    DWORD PTR [rax+0x3f04],edi
   1000087e9:	mov    rax,QWORD PTR [rip+0x30120]        # 0x100038910
   1000087f0:	mov    WORD PTR [rax+0x3e00],di
   1000087f7:	mov    rcx,QWORD PTR [rsp+0x48]
   1000087fc:	test   rcx,rcx
   1000087ff:	je     0x100008807
   100008801:	call   QWORD PTR [rip+0xffffffffffff8cd1]        # 0x1000014d8
   100008807:	mov    rax,QWORD PTR [rip+0x30102]        # 0x100038910
   10000880e:	mov    DWORD PTR [rax+0x4078],0x7fff
   100008818:	mov    rax,QWORD PTR [rip+0x300f1]        # 0x100038910
   10000881f:	mov    QWORD PTR [rax+0x4330],rdi
   100008826:	mov    rax,QWORD PTR [rip+0x300e3]        # 0x100038910
   10000882d:	mov    QWORD PTR [rax+0x4328],rdi
   100008834:	mov    rax,QWORD PTR [rip+0x300d5]        # 0x100038910
   10000883b:	mov    DWORD PTR [rax+0x407c],0x40
   100008845:	test   r13b,r13b
   100008848:	je     0x100008856
   10000884a:	movzx  edx,r13b
   10000884e:	xor    ecx,ecx
   100008850:	call   QWORD PTR [rip+0xffffffffffff8e12]        # 0x100001668
   100008856:	test   r12b,r12b
   100008859:	je     0x10000886a
   10000885b:	movzx  edx,r12b
   10000885f:	mov    ecx,0x1
   100008864:	call   QWORD PTR [rip+0xffffffffffff8dfe]        # 0x100001668
   10000886a:	test   r15b,r15b
   10000886d:	je     0x10000887e
   10000886f:	movzx  edx,r15b
   100008873:	mov    ecx,0x2
   100008878:	call   QWORD PTR [rip+0xffffffffffff8dea]        # 0x100001668
   10000887e:	test   r14b,r14b
   100008881:	je     0x100008892
   100008883:	movzx  edx,r14b
   100008887:	mov    ecx,0x3
   10000888c:	call   QWORD PTR [rip+0xffffffffffff8dd6]        # 0x100001668
   100008892:	test   sil,sil
   100008895:	je     0x1000088a6
   100008897:	movzx  edx,sil
   10000889b:	mov    ecx,0x4
   1000088a0:	call   QWORD PTR [rip+0xffffffffffff8dc2]        # 0x100001668
   1000088a6:	test   bl,bl
   1000088a8:	je     0x1000088b8
   1000088aa:	movzx  edx,bl
   1000088ad:	mov    ecx,0x5
   1000088b2:	call   QWORD PTR [rip+0xffffffffffff8db0]        # 0x100001668
   1000088b8:	mov    rcx,QWORD PTR [rbp+0x400]
   1000088bf:	xor    rcx,rsp
   1000088c2:	call   0x100002610
   1000088c7:	lea    r11,[rsp+0x510]
   1000088cf:	mov    rbx,QWORD PTR [r11+0x30]
   1000088d3:	mov    rsi,QWORD PTR [r11+0x38]
   1000088d7:	mov    rdi,QWORD PTR [r11+0x40]
   1000088db:	mov    rsp,r11
   1000088de:	pop    r15
   1000088e0:	pop    r14
   1000088e2:	pop    r13
   1000088e4:	pop    r12
   1000088e6:	pop    rbp
   1000088e7:	ret    
   1000088e8:	add    BYTE PTR [r14+0x0],r13b
   1000088ec:	je     0x1000088ee
   1000088ee:	add    BYTE PTR gs:[rdx+0x0],dh
   1000088f2:	jo     0x1000088f4
   1000088f4:	jb     0x1000088f6
   1000088f6:	imul   eax,DWORD PTR [rax],0x650073
   1000088fc:	and    BYTE PTR [rax],al
   1000088fe:	add    BYTE PTR [r8+rax*1+0x69],r12b
   100008903:	add    BYTE PTR [rax+rax*1+0x69],dh
   100008907:	add    BYTE PTR [rdi+0x0],ch
   10000890a:	outs   dx,BYTE PTR ds:[rsi]
   10000890b:	add    BYTE PTR [rax],ah
   10000890d:	add    BYTE PTR [rax],ch
   10000890f:	add    BYTE PTR [rsi],dh
   100008911:	add    BYTE PTR [rax+rax*1],dh
   100008914:	sub    eax,0x69006200
   100008919:	add    BYTE PTR [rax+rax*1+0x29],dh
   10000891d:	add    BYTE PTR [rax],al
   10000891f:	add    BYTE PTR [rbx+0x0],al
   100008922:	ins    BYTE PTR es:[rdi],dx
   100008923:	add    BYTE PTR [rdi+0x0],ch
   100008926:	jne    0x100008928
   100008928:	add    BYTE PTR fs:[rax+rax*1+0x42],al
   10000892d:	add    BYTE PTR [rax],al
   10000892f:	add    BYTE PTR [rbx+0x74],dl
   100008932:	jb     0x10000899d
   100008934:	outs   dx,BYTE PTR ds:[rsi]
   100008935:	and    BYTE PTR [esi+0x6f],al
   100008939:	jb     0x1000089a8
   10000893b:	(bad)  
   10000893c:	je     0x10000895e
   10000893e:	rex.RX (bad) 
   100008940:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x73282065
   100008948:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   10000894c:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x7379656b
   100008954:	je     0x1000089c8
   100008956:	imul   ebp,DWORD PTR [rsi+0x67],0x90900029
   10000895d:	nop
   10000895e:	nop
   10000895f:	nop
   100008960:	rex.X (bad) 
   100008962:	and    BYTE PTR fs:[rbx+0x6f],ah
   100008966:	outs   dx,BYTE PTR ds:[rsi]
   100008967:	imul   sp,WORD PTR [rdi+0x75],0x6172
   10000896d:	je     0x1000089d8
   10000896f:	outs   dx,DWORD PTR ds:[rsi]
   100008970:	outs   dx,BYTE PTR ds:[rsi]
   100008971:	add    BYTE PTR cs:[rax-0x6f6f6f70],dl
   100008978:	pop    rax
   100008979:	add    BYTE PTR [rbx+0x0],al
   10000897c:	outs   dx,DWORD PTR ds:[rsi]
   10000897d:	add    BYTE PTR [rax+0x0],dh
   100008980:	jns    0x100008982
   100008982:	rex.WB add BYTE PTR [r14+0x0],bpl
   100008986:	jae    0x100008988
   100008988:	je     0x10000898a
   10000898a:	(bad)  
   10000898b:	add    BYTE PTR [rsi+0x0],ch
   10000898e:	movsxd eax,DWORD PTR [rax]
   100008990:	add    BYTE PTR gs:[rax],al
   100008993:	add    BYTE PTR [rax+0x4e909090],dl
   100008999:	add    BYTE PTR [rbp+0x0],ah
   10000899c:	je     0x10000899e
   10000899e:	push   rax
   10000899f:	add    BYTE PTR [rdx+0x0],dh
   1000089a2:	outs   dx,DWORD PTR ds:[rsi]
   1000089a3:	add    BYTE PTR [rax+rax*1+0x44],dh
   1000089a7:	add    BYTE PTR [rcx+0x0],ch
   1000089aa:	jae    0x1000089ac
   1000089ac:	(bad)  
   1000089ad:	add    BYTE PTR [rdx+0x0],ah
   1000089b0:	ins    BYTE PTR es:[rdi],dx
   1000089b1:	add    BYTE PTR [rbp+0x0],ah
   1000089b4:	add    BYTE PTR fs:[rax],al
   1000089b7:	add    BYTE PTR [rax+rax*1+0x69],al
   1000089bb:	add    BYTE PTR [rbx+0x0],dh
   1000089be:	je     0x1000089c0
   1000089c0:	jb     0x1000089c2
   1000089c2:	imul   eax,DWORD PTR [rax],0x750062
   1000089c8:	je     0x1000089ca
   1000089ca:	add    BYTE PTR gs:[rax+rax*1+0x51],ah
   1000089cf:	add    BYTE PTR [rbp+0x0],dh
   1000089d2:	add    BYTE PTR gs:[rdx+0x0],dh
   1000089d6:	imul   eax,DWORD PTR [rax],0x730065
   1000089dc:	add    BYTE PTR [rcx+0x0],r13b
   1000089e0:	jae    0x1000089e2
   1000089e2:	(bad)  
   1000089e3:	add    BYTE PTR [rdx+0x0],ah
   1000089e6:	ins    BYTE PTR es:[rdi],dx
   1000089e7:	add    BYTE PTR [rbp+0x0],ah
   1000089ea:	add    BYTE PTR fs:[rax],al
   1000089ed:	add    BYTE PTR [rax+0x70005890],dl
   1000089f3:	add    BYTE PTR [rcx+0x0],al
   1000089f6:	movsxd eax,DWORD PTR [rax]
   1000089f8:	movsxd eax,DWORD PTR [rax]
   1000089fa:	add    BYTE PTR gs:[rbx+0x0],dh
   1000089fe:	jae    0x100008a00
   100008a00:	add    BYTE PTR [rcx+0x0],r13b
   100008a04:	jae    0x100008a06
   100008a06:	(bad)  
   100008a07:	add    BYTE PTR [rdx+0x0],ah
   100008a0a:	ins    BYTE PTR es:[rdi],dx
   100008a0b:	add    BYTE PTR [rbp+0x0],ah
   100008a0e:	add    BYTE PTR fs:[rax],al
   100008a11:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100008a17:	nop
   100008a18:	add    BYTE PTR [r8+r8*1+0x72],bpl
   100008a1d:	add    BYTE PTR [rax+rax*1+0x69],al
   100008a21:	add    BYTE PTR [rbx+0x0],dh
   100008a24:	(bad)  
   100008a25:	add    BYTE PTR [rdx+0x0],ah
   100008a28:	ins    BYTE PTR es:[rdi],dx
   100008a29:	add    BYTE PTR [rbp+0x0],ah
   100008a2c:	add    BYTE PTR fs:[rax],al
   100008a2f:	add    BYTE PTR [rbp+0x0],dl
   100008a32:	jae    0x100008a34
   100008a34:	add    BYTE PTR gs:[rdx+0x0],dh
   100008a38:	rex.WB add BYTE PTR [r14+0x0],bpl
   100008a3c:	jae    0x100008a3e
   100008a3e:	je     0x100008a40
   100008a40:	(bad)  
   100008a41:	add    BYTE PTR [rsi+0x0],ch
   100008a44:	movsxd eax,DWORD PTR [rax]
   100008a46:	add    BYTE PTR gs:[rbx+0x0],dh
   100008a4a:	add    BYTE PTR [rcx+0x0],r13b
   100008a4e:	jae    0x100008a50
   100008a50:	(bad)  
   100008a51:	add    BYTE PTR [rdx+0x0],ah
   100008a54:	ins    BYTE PTR es:[rdi],dx
   100008a55:	add    BYTE PTR [rbp+0x0],ah
   100008a58:	add    BYTE PTR fs:[rax],al
   100008a5b:	add    BYTE PTR [rax+0x53909090],dl
   100008a61:	add    BYTE PTR [rcx+0x0],dh
   100008a64:	ins    BYTE PTR es:[rdi],dx
   100008a65:	add    BYTE PTR [rbp+0x0],cl
   100008a68:	(bad)  
   100008a69:	add    BYTE PTR [rcx+0x0],ch
   100008a6c:	ins    BYTE PTR es:[rdi],dx
   100008a6d:	add    BYTE PTR [rax+rax*1+0x69],al
   100008a71:	add    BYTE PTR [rbx+0x0],dh
   100008a74:	(bad)  
   100008a75:	add    BYTE PTR [rdx+0x0],ah
   100008a78:	ins    BYTE PTR es:[rdi],dx
   100008a79:	add    BYTE PTR [rbp+0x0],ah
   100008a7c:	add    BYTE PTR fs:[rax],al
   100008a7f:	add    BYTE PTR [rcx+0x0],cl
   100008a82:	jae    0x100008a84
   100008a84:	push   rbx
   100008a85:	add    BYTE PTR [rdi+0x0],cl
   100008a88:	add    BYTE PTR [r8+0x0],dl
   100008a8c:	push   rbx
   100008a8d:	add    BYTE PTR [rbp+0x0],dh
   100008a90:	jo     0x100008a92
   100008a92:	jo     0x100008a94
   100008a94:	outs   dx,DWORD PTR ds:[rsi]
   100008a95:	add    BYTE PTR [rdx+0x0],dh
   100008a98:	je     0x100008a9a
   100008a9a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   100008a9f:	add    BYTE PTR [rsi+0x0],al
   100008aa2:	outs   dx,DWORD PTR ds:[rsi]
   100008aa3:	add    BYTE PTR [rdx+0x0],dh
   100008aa6:	movsxd eax,DWORD PTR [rax]
   100008aa8:	add    BYTE PTR gs:[rsi+0x0],al
   100008aac:	ins    BYTE PTR es:[rdi],dx
   100008aad:	add    BYTE PTR [rbp+0x0],dh
   100008ab0:	jae    0x100008ab2
   100008ab2:	push   0x6e004500
   100008ab7:	add    BYTE PTR [rcx+0x0],ah
   100008aba:	(bad)  
   100008abb:	add    BYTE PTR [rax+rax*1+0x65],ch
   100008abf:	add    BYTE PTR [rax+rax*1+0x0],ah
   100008ac3:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100008ac9:	nop
   100008aca:	nop
   100008acb:	nop
   100008acc:	nop
   100008acd:	nop
   100008ace:	nop
   100008acf:	nop
   100008ad0:	push   rbx
   100008ad2:	sub    rsp,0x20
   100008ad6:	mov    rax,QWORD PTR [rip+0x2fe33]        # 0x100038910
   100008add:	mov    DWORD PTR [rip+0x20f89],0x2        # 0x100029a70
   100008ae7:	xor    ebx,ebx
   100008ae9:	mov    QWORD PTR [rax+0x4098],rbx
   100008af0:	mov    rax,QWORD PTR [rip+0x2fe19]        # 0x100038910
   100008af7:	xor    edx,edx
   100008af9:	mov    QWORD PTR [rax+0x40a0],rbx
   100008b00:	mov    rax,QWORD PTR [rip+0x2fe09]        # 0x100038910
   100008b07:	mov    DWORD PTR [rax+0x3cf0],0x2
   100008b11:	mov    rax,QWORD PTR [rip+0x2fdf8]        # 0x100038910
   100008b18:	mov    DWORD PTR [rax+0x3df8],0x100
   100008b22:	mov    rcx,QWORD PTR [rip+0x2fde7]        # 0x100038910
   100008b29:	mov    r8d,DWORD PTR [rcx+0x3df8]
   100008b30:	add    rcx,0x3cf8
   100008b37:	call   0x10001f80c
   100008b3c:	mov    r11,QWORD PTR [rip+0x2fdcd]        # 0x100038910
   100008b43:	xor    edx,edx
   100008b45:	mov    DWORD PTR [r11+0x3dfc],ebx
   100008b4c:	mov    rax,QWORD PTR [rip+0x2fdbd]        # 0x100038910
   100008b53:	mov    DWORD PTR [rax+0x3f04],0x102
   100008b5d:	mov    rcx,QWORD PTR [rip+0x2fdac]        # 0x100038910
   100008b64:	mov    r8d,DWORD PTR [rcx+0x3f04]
   100008b6b:	add    rcx,0x3e00
   100008b72:	call   0x10001f80c
   100008b77:	mov    r11,QWORD PTR [rip+0x2fd92]        # 0x100038910
   100008b7e:	xor    eax,eax
   100008b80:	mov    DWORD PTR [r11+0x3f08],eax
   100008b87:	mov    WORD PTR [r11+0x3f0c],ax
   100008b8f:	mov    rax,QWORD PTR [rip+0x2fd7a]        # 0x100038910
   100008b96:	mov    DWORD PTR [rax+0x4318],ebx
   100008b9c:	mov    rax,QWORD PTR [rip+0x2fd6d]        # 0x100038910
   100008ba3:	mov    QWORD PTR [rax+0x4330],rbx
   100008baa:	mov    rax,QWORD PTR [rip+0x2fd5f]        # 0x100038910
   100008bb1:	mov    QWORD PTR [rax+0x4328],rbx
   100008bb8:	mov    rax,QWORD PTR [rip+0x2fd51]        # 0x100038910
   100008bbf:	mov    QWORD PTR [rax+0x4320],rbx
   100008bc6:	mov    rax,QWORD PTR [rip+0x2fd43]        # 0x100038910
   100008bcd:	mov    QWORD PTR [rax+0x9528],rbx
   100008bd4:	mov    rax,QWORD PTR [rip+0x2fd35]        # 0x100038910
   100008bdb:	mov    DWORD PTR [rax+0x4078],0x7fff
   100008be5:	mov    rax,QWORD PTR [rip+0x2fd24]        # 0x100038910
   100008bec:	mov    DWORD PTR [rax+0x4080],0x2
   100008bf6:	mov    rax,QWORD PTR [rip+0x2fd13]        # 0x100038910
   100008bfd:	mov    DWORD PTR [rax+0x407c],ebx
   100008c03:	mov    rax,QWORD PTR [rip+0x2fd06]        # 0x100038910
   100008c0a:	mov    DWORD PTR [rax+0x4090],0xffffffff
   100008c14:	mov    rax,QWORD PTR [rip+0x2fcf5]        # 0x100038910
   100008c1b:	add    rax,0x7fc0
   100008c21:	mov    QWORD PTR [rip+0x23658],rax        # 0x10002c280
   100008c28:	add    rsp,0x20
   100008c2c:	pop    rbx
   100008c2d:	ret    
   100008c2e:	nop
   100008c2f:	nop
   100008c30:	nop
   100008c31:	nop
   100008c32:	nop
   100008c33:	nop
   100008c34:	nop
   100008c35:	nop
   100008c36:	nop
   100008c37:	nop
   100008c38:	nop
   100008c39:	nop
   100008c3a:	nop
   100008c3b:	nop
   100008c3c:	nop
   100008c3d:	nop
   100008c3e:	nop
   100008c3f:	nop
   100008c40:	sub    rsp,0x28
   100008c44:	call   QWORD PTR [rip+0xffffffffffff8fee]        # 0x100001c38
   100008c4a:	lea    rcx,[rip+0x18f]        # 0x100008de0
   100008c51:	mov    rdx,rax
   100008c54:	call   QWORD PTR [rip+0xffffffffffff87be]        # 0x100001418
   100008c5a:	call   QWORD PTR [rip+0xffffffffffff8fd8]        # 0x100001c38
   100008c60:	lea    rcx,[rip+0x1a1]        # 0x100008e08
   100008c67:	mov    rdx,rax
   100008c6a:	call   QWORD PTR [rip+0xffffffffffff87a8]        # 0x100001418
   100008c70:	call   QWORD PTR [rip+0xffffffffffff8fc2]        # 0x100001c38
   100008c76:	lea    rcx,[rip+0x1c3]        # 0x100008e40
   100008c7d:	mov    rdx,rax
   100008c80:	call   QWORD PTR [rip+0xffffffffffff8792]        # 0x100001418
   100008c86:	call   QWORD PTR [rip+0xffffffffffff8fac]        # 0x100001c38
   100008c8c:	lea    rcx,[rip+0x20d]        # 0x100008ea0
   100008c93:	mov    rdx,rax
   100008c96:	call   QWORD PTR [rip+0xffffffffffff877c]        # 0x100001418
   100008c9c:	call   QWORD PTR [rip+0xffffffffffff8f96]        # 0x100001c38
   100008ca2:	lea    rcx,[rip+0x257]        # 0x100008f00
   100008ca9:	mov    rdx,rax
   100008cac:	call   QWORD PTR [rip+0xffffffffffff8766]        # 0x100001418
   100008cb2:	call   QWORD PTR [rip+0xffffffffffff8f80]        # 0x100001c38
   100008cb8:	lea    rcx,[rip+0x291]        # 0x100008f50
   100008cbf:	mov    rdx,rax
   100008cc2:	call   QWORD PTR [rip+0xffffffffffff8750]        # 0x100001418
   100008cc8:	call   QWORD PTR [rip+0xffffffffffff8f6a]        # 0x100001c38
   100008cce:	lea    rcx,[rip+0x2cb]        # 0x100008fa0
   100008cd5:	mov    rdx,rax
   100008cd8:	call   QWORD PTR [rip+0xffffffffffff873a]        # 0x100001418
   100008cde:	call   QWORD PTR [rip+0xffffffffffff8f54]        # 0x100001c38
   100008ce4:	lea    rcx,[rip+0x305]        # 0x100008ff0
   100008ceb:	mov    rdx,rax
   100008cee:	call   QWORD PTR [rip+0xffffffffffff8724]        # 0x100001418
   100008cf4:	call   QWORD PTR [rip+0xffffffffffff8f3e]        # 0x100001c38
   100008cfa:	lea    rcx,[rip+0x33f]        # 0x100009040
   100008d01:	mov    rdx,rax
   100008d04:	call   QWORD PTR [rip+0xffffffffffff870e]        # 0x100001418
   100008d0a:	call   QWORD PTR [rip+0xffffffffffff8f28]        # 0x100001c38
   100008d10:	lea    rcx,[rip+0x399]        # 0x1000090b0
   100008d17:	mov    rdx,rax
   100008d1a:	call   QWORD PTR [rip+0xffffffffffff86f8]        # 0x100001418
   100008d20:	call   QWORD PTR [rip+0xffffffffffff8f12]        # 0x100001c38
   100008d26:	lea    rcx,[rip+0x3d3]        # 0x100009100
   100008d2d:	mov    rdx,rax
   100008d30:	call   QWORD PTR [rip+0xffffffffffff86e2]        # 0x100001418
   100008d36:	call   QWORD PTR [rip+0xffffffffffff8efc]        # 0x100001c38
   100008d3c:	lea    rcx,[rip+0x41d]        # 0x100009160
   100008d43:	mov    rdx,rax
   100008d46:	call   QWORD PTR [rip+0xffffffffffff86cc]        # 0x100001418
   100008d4c:	call   QWORD PTR [rip+0xffffffffffff8ee6]        # 0x100001c38
   100008d52:	lea    rcx,[rip+0x477]        # 0x1000091d0
   100008d59:	mov    rdx,rax
   100008d5c:	call   QWORD PTR [rip+0xffffffffffff86b6]        # 0x100001418
   100008d62:	call   QWORD PTR [rip+0xffffffffffff8ed0]        # 0x100001c38
   100008d68:	lea    rcx,[rip+0x4b1]        # 0x100009220
   100008d6f:	mov    rdx,rax
   100008d72:	call   QWORD PTR [rip+0xffffffffffff86a0]        # 0x100001418
   100008d78:	call   QWORD PTR [rip+0xffffffffffff8eba]        # 0x100001c38
   100008d7e:	lea    rcx,[rip+0x4fb]        # 0x100009280
   100008d85:	mov    rdx,rax
   100008d88:	call   QWORD PTR [rip+0xffffffffffff868a]        # 0x100001418
   100008d8e:	call   QWORD PTR [rip+0xffffffffffff8ea4]        # 0x100001c38
   100008d94:	lea    rcx,[rip+0x545]        # 0x1000092e0
   100008d9b:	mov    rdx,rax
   100008d9e:	call   QWORD PTR [rip+0xffffffffffff8674]        # 0x100001418
   100008da4:	call   QWORD PTR [rip+0xffffffffffff8e8e]        # 0x100001c38
   100008daa:	lea    rcx,[rip+0x5af]        # 0x100009360
   100008db1:	mov    rdx,rax
   100008db4:	call   QWORD PTR [rip+0xffffffffffff865e]        # 0x100001418
   100008dba:	call   QWORD PTR [rip+0xffffffffffff8e78]        # 0x100001c38
   100008dc0:	lea    rcx,[rip+0x5e9]        # 0x1000093b0
   100008dc7:	mov    rdx,rax
   100008dca:	call   QWORD PTR [rip+0xffffffffffff8648]        # 0x100001418
   100008dd0:	xor    ecx,ecx
   100008dd2:	add    rsp,0x28
   100008dd6:	rex.W jmp QWORD PTR [rip+0xffffffffffff8d5b]        # 0x100001b38
   100008ddd:	nop
   100008dde:	nop
   100008ddf:	nop
   100008de0:	jne    0x100008de2
   100008de2:	jae    0x100008de4
   100008de4:	(bad)  
   100008de5:	add    BYTE PTR [rdi+0x0],ah
   100008de8:	add    BYTE PTR gs:[rdx],bh
   100008deb:	add    BYTE PTR [rax],ah
   100008ded:	add    BYTE PTR [rbx+0x0],dh
   100008df0:	jno    0x100008df2
   100008df2:	ins    BYTE PTR es:[rdi],dx
   100008df3:	add    BYTE PTR [rbx+0x0],dh
   100008df6:	add    BYTE PTR gs:[rdx+0x0],dh
   100008dfa:	jbe    0x100008dfc
   100008dfc:	jb     0x100008dfe
   100008dfe:	or     eax,0xa00
   100008e03:	add    BYTE PTR [rax+0x9909090],dl
   100008e09:	add    BYTE PTR [rbx+0x0],bl
   100008e0c:	sub    eax,0x5d006300
   100008e11:	add    BYTE PTR [rax],ah
   100008e13:	add    BYTE PTR [rax],ch
   100008e15:	add    BYTE PTR [rsi+0x0],ch
   100008e18:	outs   dx,DWORD PTR ds:[rsi]
   100008e19:	add    BYTE PTR [rax+rax*1+0x20],dh
   100008e1d:	add    BYTE PTR [rcx+0x0],ah
   100008e20:	jae    0x100008e22
   100008e22:	and    BYTE PTR [rax],al
   100008e24:	(bad)  
   100008e25:	add    BYTE PTR [rax],ah
   100008e27:	add    BYTE PTR [rbx+0x0],dh
   100008e2a:	add    BYTE PTR gs:[rdx+0x0],dh
   100008e2e:	jbe    0x100008e30
   100008e30:	imul   eax,DWORD PTR [rax],0x650063
   100008e36:	sub    DWORD PTR [rax],eax
   100008e38:	or     eax,0xa00
   100008e3d:	add    BYTE PTR [rax+0x5b000990],dl
   100008e43:	add    BYTE PTR [rip+0x20006400],ch        # 0x12000f249
   100008e49:	add    BYTE PTR [rsi+0x0],ah
   100008e4c:	imul   eax,DWORD PTR [rax],0x65006c
   100008e52:	pop    rbp
   100008e53:	add    BYTE PTR [rax],ah
   100008e55:	add    BYTE PTR [rax],ch
   100008e57:	add    BYTE PTR [rcx+0x0],ah
   100008e5a:	ins    BYTE PTR es:[rdi],dx
   100008e5b:	add    BYTE PTR [rax+rax*1+0x65],dh
   100008e5f:	add    BYTE PTR [rdx+0x0],dh
   100008e62:	outs   dx,BYTE PTR ds:[rsi]
   100008e63:	add    BYTE PTR [rcx+0x0],ah
   100008e66:	je     0x100008e68
   100008e68:	imul   eax,DWORD PTR [rax],0x650076
   100008e6e:	and    BYTE PTR [rax],al
   100008e70:	ins    DWORD PTR es:[rdi],dx
   100008e71:	add    BYTE PTR [rcx+0x0],ah
   100008e74:	jae    0x100008e76
   100008e76:	je     0x100008e78
   100008e78:	add    BYTE PTR gs:[rdx+0x0],dh
   100008e7c:	and    BYTE PTR [rax],al
   100008e7e:	add    BYTE PTR fs:[rcx+0x0],ah
   100008e82:	je     0x100008e84
   100008e84:	(bad)  
   100008e85:	add    BYTE PTR [rax],ah
   100008e87:	add    BYTE PTR [rsi+0x0],ah
   100008e8a:	imul   eax,DWORD PTR [rax],0x65006c
   100008e90:	sub    DWORD PTR [rax],eax
   100008e92:	or     eax,0xa00
   100008e97:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100008e9d:	nop
   100008e9e:	nop
   100008e9f:	nop
   100008ea0:	or     DWORD PTR [rax],eax
   100008ea2:	pop    rbx
   100008ea3:	add    BYTE PTR [rip+0x20006c00],ch        # 0x12000faa9
   100008ea9:	add    BYTE PTR [rsi+0x0],ah
   100008eac:	imul   eax,DWORD PTR [rax],0x65006c
   100008eb2:	pop    rbp
   100008eb3:	add    BYTE PTR [rax],ah
   100008eb5:	add    BYTE PTR [rax],ch
   100008eb7:	add    BYTE PTR [rcx+0x0],ah
   100008eba:	ins    BYTE PTR es:[rdi],dx
   100008ebb:	add    BYTE PTR [rax+rax*1+0x65],dh
   100008ebf:	add    BYTE PTR [rdx+0x0],dh
   100008ec2:	outs   dx,BYTE PTR ds:[rsi]
   100008ec3:	add    BYTE PTR [rcx+0x0],ah
   100008ec6:	je     0x100008ec8
   100008ec8:	imul   eax,DWORD PTR [rax],0x650076
   100008ece:	and    BYTE PTR [rax],al
   100008ed0:	ins    DWORD PTR es:[rdi],dx
   100008ed1:	add    BYTE PTR [rcx+0x0],ah
   100008ed4:	jae    0x100008ed6
   100008ed6:	je     0x100008ed8
   100008ed8:	add    BYTE PTR gs:[rdx+0x0],dh
   100008edc:	and    BYTE PTR [rax],al
   100008ede:	ins    BYTE PTR es:[rdi],dx
   100008edf:	add    BYTE PTR [rdi+0x0],ch
   100008ee2:	add    BYTE PTR [eax],ah
   100008ee5:	add    BYTE PTR [rsi+0x0],ah
   100008ee8:	imul   eax,DWORD PTR [rax],0x65006c
   100008eee:	sub    DWORD PTR [rax],eax
   100008ef0:	or     eax,0xa00
   100008ef5:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100008efb:	nop
   100008efc:	nop
   100008efd:	nop
   100008efe:	nop
   100008eff:	nop
   100008f00:	or     DWORD PTR [rax],eax
   100008f02:	pop    rbx
   100008f03:	add    BYTE PTR [rip+0x20006500],ch        # 0x12000f409
   100008f09:	add    BYTE PTR [rsi+0x0],ah
   100008f0c:	imul   eax,DWORD PTR [rax],0x65006c
   100008f12:	pop    rbp
   100008f13:	add    BYTE PTR [rax],ah
   100008f15:	add    BYTE PTR [rax],ch
   100008f17:	add    BYTE PTR [rcx+0x0],ah
   100008f1a:	ins    BYTE PTR es:[rdi],dx
   100008f1b:	add    BYTE PTR [rax+rax*1+0x65],dh
   100008f1f:	add    BYTE PTR [rdx+0x0],dh
   100008f22:	outs   dx,BYTE PTR ds:[rsi]
   100008f23:	add    BYTE PTR [rcx+0x0],ah
   100008f26:	je     0x100008f28
   100008f28:	add    BYTE PTR gs:[rax],ah
   100008f2b:	add    BYTE PTR [rbp+0x0],ah
   100008f2e:	jb     0x100008f30
   100008f30:	jb     0x100008f32
   100008f32:	outs   dx,DWORD PTR ds:[rsi]
   100008f33:	add    BYTE PTR [rdx+0x0],dh
   100008f36:	ins    BYTE PTR es:[rdi],dx
   100008f37:	add    BYTE PTR [rdi+0x0],ch
   100008f3a:	add    BYTE PTR [eax],ah
   100008f3d:	add    BYTE PTR [rsi+0x0],ah
   100008f40:	imul   eax,DWORD PTR [rax],0x65006c
   100008f46:	sub    DWORD PTR [rax],eax
   100008f48:	or     eax,0xa00
   100008f4d:	add    BYTE PTR [rax+0x5b000990],dl
   100008f53:	add    BYTE PTR [rip+0x5d006600],ch        # 0x15d00f559
   100008f59:	add    BYTE PTR [rax],ah
   100008f5b:	add    BYTE PTR [rax],ch
   100008f5d:	add    BYTE PTR [rbp+0x0],ch
   100008f60:	imul   eax,DWORD PTR [rax],0x69006e
   100008f66:	ins    DWORD PTR es:[rdi],dx
   100008f67:	add    BYTE PTR [rcx+0x0],ah
   100008f6a:	ins    BYTE PTR es:[rdi],dx
   100008f6b:	add    BYTE PTR [rax],ah
   100008f6d:	add    BYTE PTR [rbx+0x0],ah
   100008f70:	outs   dx,DWORD PTR ds:[rsi]
   100008f71:	add    BYTE PTR [rsi+0x0],ch
   100008f74:	data16 add BYTE PTR [rcx+0x0],ch
   100008f78:	add    BYTE PTR [ebp+0x0],dh
   100008f7c:	jb     0x100008f7e
   100008f7e:	(bad)  
   100008f7f:	add    BYTE PTR [rax+rax*1+0x69],dh
   100008f83:	add    BYTE PTR [rdi+0x0],ch
   100008f86:	outs   dx,BYTE PTR ds:[rsi]
   100008f87:	add    BYTE PTR [rax],ah
   100008f89:	add    BYTE PTR [rbp+0x0],ch
   100008f8c:	outs   dx,DWORD PTR ds:[rsi]
   100008f8d:	add    BYTE PTR [rax+rax*1+0x65],ah
   100008f91:	add    BYTE PTR [rcx],ch
   100008f93:	add    BYTE PTR [rip+0xa00],cl        # 0x100009999
   100008f99:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100008f9f:	nop
   100008fa0:	or     DWORD PTR [rax],eax
   100008fa2:	pop    rbx
   100008fa3:	add    BYTE PTR [rip+0x5d006d00],ch        # 0x15d00fca9
   100008fa9:	add    BYTE PTR [rax],ah
   100008fab:	add    BYTE PTR [rax],ch
   100008fad:	add    BYTE PTR [rbx+0x0],dh
   100008fb0:	imul   eax,DWORD PTR [rax],0x67006e
   100008fb6:	ins    BYTE PTR es:[rdi],dx
   100008fb7:	add    BYTE PTR [rbp+0x0],ah
   100008fba:	and    BYTE PTR [rax],al
   100008fbc:	jne    0x100008fbe
   100008fbe:	jae    0x100008fc0
   100008fc0:	add    BYTE PTR gs:[rdx+0x0],dh
   100008fc4:	and    BYTE PTR [rax],al
   100008fc6:	(bad)  
   100008fc7:	add    BYTE PTR [rax+rax*1+0x6d],ah
   100008fcb:	add    BYTE PTR [rcx+0x0],ch
   100008fce:	outs   dx,BYTE PTR ds:[rsi]
   100008fcf:	add    BYTE PTR [rax],ah
   100008fd1:	add    BYTE PTR [rbp+0x0],ch
   100008fd4:	outs   dx,DWORD PTR ds:[rsi]
   100008fd5:	add    BYTE PTR [rax+rax*1+0x65],ah
   100008fd9:	add    BYTE PTR [rcx],ch
   100008fdb:	add    BYTE PTR [rip+0xa00],cl        # 0x1000099e1
   100008fe1:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100008fe7:	nop
   100008fe8:	nop
   100008fe9:	nop
   100008fea:	nop
   100008feb:	nop
   100008fec:	nop
   100008fed:	nop
   100008fee:	nop
   100008fef:	nop
   100008ff0:	or     DWORD PTR [rax],eax
   100008ff2:	pop    rbx
   100008ff3:	add    BYTE PTR [rip+0x20006700],ch        # 0x12000f6f9
   100008ff9:	add    BYTE PTR [rsi+0x0],ch
   100008ffc:	jne    0x100008ffe
   100008ffe:	ins    DWORD PTR es:[rdi],dx
   100008fff:	add    BYTE PTR [rdx+0x0],ah
   100009002:	add    BYTE PTR gs:[rdx+0x0],dh
   100009006:	pop    rbp
   100009007:	add    BYTE PTR [rax],ah
   100009009:	add    BYTE PTR [rax],ch
   10000900b:	add    BYTE PTR [rbx+0x0],dh
   10000900e:	je     0x100009010
   100009010:	(bad)  
   100009011:	add    BYTE PTR [rbx+0x0],ah
   100009014:	imul   eax,DWORD PTR [rax],0x20
   100009017:	add    BYTE PTR [rbp+0x0],cl
   10000901a:	rex.X add BYTE PTR [rax],spl
   10000901d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   100009021:	add    BYTE PTR [rax],ah
   100009023:	add    BYTE PTR [rdx+0x0],dh
   100009026:	add    BYTE PTR gs:[rbx+0x0],dh
   10000902a:	add    BYTE PTR gs:[rdx+0x0],dh
   10000902e:	jbe    0x100009030
   100009030:	add    BYTE PTR gs:[rcx],ch
   100009033:	add    BYTE PTR [rip+0xa00],cl        # 0x100009a39
   100009039:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000903f:	nop
   100009040:	or     DWORD PTR [rax],eax
   100009042:	pop    rbx
   100009043:	add    BYTE PTR [rip+0x20006b00],ch        # 0x12000fb49
   100009049:	add    BYTE PTR [rax+rax*1],bh
   10000904c:	add    BYTE PTR fs:[rbp+0x0],ah
   100009050:	movsxd eax,DWORD PTR [rax]
   100009052:	imul   eax,DWORD PTR [rax],0x61006d
   100009058:	ins    BYTE PTR es:[rdi],dx
   100009059:	add    BYTE PTR [rax],ah
   10000905b:	add    BYTE PTR [rsi+0x0],ch
   10000905e:	jne    0x100009060
   100009060:	ins    DWORD PTR es:[rdi],dx
   100009061:	add    BYTE PTR [rdx+0x0],ah
   100009064:	add    BYTE PTR gs:[rdx+0x0],dh
   100009068:	add    BYTE PTR ds:[rbp+0x0],bl
   10000906c:	and    BYTE PTR [rax],al
   10000906e:	sub    BYTE PTR [rax],al
   100009070:	movsxd eax,DWORD PTR [rax]
   100009072:	push   0x63006500
   100009077:	add    BYTE PTR [rbx+0x0],ch
   10000907a:	jo     0x10000907c
   10000907c:	outs   dx,DWORD PTR ds:[rsi]
   10000907d:	add    BYTE PTR [rcx+0x0],ch
   100009080:	outs   dx,BYTE PTR ds:[rsi]
   100009081:	add    BYTE PTR [rax+rax*1+0x20],dh
   100009085:	add    BYTE PTR [rbx+0x0],dh
   100009088:	jo     0x10000908a
   10000908a:	add    BYTE PTR gs:[rbp+0x0],ah
   10000908e:	add    BYTE PTR fs:[rax],ah
   100009091:	add    BYTE PTR [rcx+0x0],ch
   100009094:	outs   dx,BYTE PTR ds:[rsi]
   100009095:	add    BYTE PTR [rax],ah
   100009097:	add    BYTE PTR [rbp+0x0],cl
   10000909a:	rex.X add BYTE PTR [rdi],bpl
   10000909d:	add    BYTE PTR [rbx+0x0],dh
   1000090a0:	add    BYTE PTR gs:[rbx+0x0],ah
   1000090a4:	sub    DWORD PTR [rax],eax
   1000090a6:	or     eax,0xa00
   1000090ab:	add    BYTE PTR [rax+0x9909090],dl
   1000090b1:	add    BYTE PTR [rbx+0x0],bl
   1000090b4:	sub    eax,0x5d006e00
   1000090b9:	add    BYTE PTR [rax],ah
   1000090bb:	add    BYTE PTR [rax],ch
   1000090bd:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1000090c1:	add    BYTE PTR [rax],ah
   1000090c3:	add    BYTE PTR [rsi+0x0],ch
   1000090c6:	outs   dx,DWORD PTR ds:[rsi]
   1000090c7:	add    BYTE PTR [rax+rax*1+0x20],dh
   1000090cb:	add    BYTE PTR [rbp+0x0],dh
   1000090ce:	jae    0x1000090d0
   1000090d0:	add    BYTE PTR gs:[rax],ah
   1000090d3:	add    BYTE PTR [rbp+0x0],ah
   1000090d6:	jbe    0x1000090d8
   1000090d8:	add    BYTE PTR gs:[rsi+0x0],ch
   1000090dc:	je     0x1000090de
   1000090de:	and    BYTE PTR [rax],al
   1000090e0:	ins    BYTE PTR es:[rdi],dx
   1000090e1:	add    BYTE PTR [rdi+0x0],ch
   1000090e4:	add    BYTE PTR [edi+0x0],ah
   1000090e8:	imul   eax,DWORD PTR [rax],0x67006e
   1000090ee:	sub    DWORD PTR [rax],eax
   1000090f0:	or     eax,0xa00
   1000090f5:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000090fb:	nop
   1000090fc:	nop
   1000090fd:	nop
   1000090fe:	nop
   1000090ff:	nop
   100009100:	or     DWORD PTR [rax],eax
   100009102:	pop    rbx
   100009103:	add    BYTE PTR [rip+0x20007300],ch        # 0x120010409
   100009109:	add    BYTE PTR [rsi+0x0],ch
   10000910c:	(bad)  
   10000910d:	add    BYTE PTR [rbp+0x0],ch
   100009110:	add    BYTE PTR gs:[rbp+0x0],bl
   100009114:	and    BYTE PTR [rax],al
   100009116:	sub    BYTE PTR [rax],al
   100009118:	(bad)  
   100009119:	add    BYTE PTR [rax+rax*1+0x74],ch
   10000911d:	add    BYTE PTR [rbp+0x0],ah
   100009120:	jb     0x100009122
   100009122:	outs   dx,BYTE PTR ds:[rsi]
   100009123:	add    BYTE PTR [rcx+0x0],ah
   100009126:	je     0x100009128
   100009128:	add    BYTE PTR gs:[rax],ah
   10000912b:	add    BYTE PTR [rdx+0x0],dh
   10000912e:	add    BYTE PTR gs:[rdi+0x0],ah
   100009132:	imul   eax,DWORD PTR [rax],0x740073
   100009138:	jb     0x10000913a
   10000913a:	jns    0x10000913c
   10000913c:	and    BYTE PTR [rax],al
   10000913e:	imul   eax,DWORD PTR [rax],0x65
   100009141:	add    BYTE PTR [rcx+0x0],bh
   100009144:	and    BYTE PTR [rax],al
   100009146:	outs   dx,BYTE PTR ds:[rsi]
   100009147:	add    BYTE PTR [rcx+0x0],ah
   10000914a:	ins    DWORD PTR es:[rdi],dx
   10000914b:	add    BYTE PTR [rbp+0x0],ah
   10000914e:	sub    DWORD PTR [rax],eax
   100009150:	or     eax,0xa00
   100009155:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000915b:	nop
   10000915c:	nop
   10000915d:	nop
   10000915e:	nop
   10000915f:	nop
   100009160:	or     DWORD PTR [rax],eax
   100009162:	pop    rbx
   100009163:	add    BYTE PTR [rip+0x20005400],ch        # 0x12000e569
   100009169:	add    BYTE PTR [rax+rax*1],bh
   10000916c:	outs   dx,BYTE PTR ds:[rsi]
   10000916d:	add    BYTE PTR [rbp+0x0],dh
   100009170:	ins    DWORD PTR es:[rdi],dx
   100009171:	add    BYTE PTR [rdx+0x0],ah
   100009174:	add    BYTE PTR gs:[rdx+0x0],dh
   100009178:	add    BYTE PTR ds:[rbp+0x0],bl
   10000917c:	and    BYTE PTR [rax],al
   10000917e:	sub    BYTE PTR [rax],al
   100009180:	je     0x100009182
   100009182:	jb     0x100009184
   100009184:	(bad)  
   100009185:	add    BYTE PTR [rbx+0x0],ah
   100009188:	add    BYTE PTR gs:[rax],ah
   10000918b:	add    BYTE PTR [rsi+0x0],ah
   10000918e:	ins    BYTE PTR es:[rdi],dx
   10000918f:	add    BYTE PTR [rcx+0x0],ah
   100009192:	add    BYTE PTR [eax],ah
   100009195:	add    BYTE PTR [rax+rax*1+0x75],dh
   100009199:	add    BYTE PTR [rdx+0x0],dh
   10000919c:	outs   dx,BYTE PTR ds:[rsi]
   10000919d:	add    BYTE PTR [rbp+0x0],ah
   1000091a0:	add    BYTE PTR fs:[rax],ah
   1000091a3:	add    BYTE PTR [rdi+0x0],ch
   1000091a6:	outs   dx,BYTE PTR ds:[rsi]
   1000091a7:	add    BYTE PTR [rax],ah
   1000091a9:	add    BYTE PTR [rcx+0x0],ah
   1000091ac:	je     0x1000091ae
   1000091ae:	and    BYTE PTR [rax],al
   1000091b0:	jae    0x1000091b2
   1000091b2:	je     0x1000091b4
   1000091b4:	(bad)  
   1000091b5:	add    BYTE PTR [rdx+0x0],dh
   1000091b8:	je     0x1000091ba
   1000091ba:	jne    0x1000091bc
   1000091bc:	jo     0x1000091be
   1000091be:	sub    DWORD PTR [rax],eax
   1000091c0:	or     eax,0xa00
   1000091c5:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000091cb:	nop
   1000091cc:	nop
   1000091cd:	nop
   1000091ce:	nop
   1000091cf:	nop
   1000091d0:	or     DWORD PTR [rax],eax
   1000091d2:	pop    rbx
   1000091d3:	add    BYTE PTR [rip+0x5d007800],ch        # 0x15d0109d9
   1000091d9:	add    BYTE PTR [rax],ah
   1000091db:	add    BYTE PTR [rax],ch
   1000091dd:	add    BYTE PTR [rsi+0x0],ch
   1000091e0:	outs   dx,DWORD PTR ds:[rsi]
   1000091e1:	add    BYTE PTR [rax],ah
   1000091e3:	add    BYTE PTR [rbx+0x0],dh
   1000091e6:	je     0x1000091e8
   1000091e8:	(bad)  
   1000091e9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1000091ed:	add    BYTE PTR [rbx+0x0],dh
   1000091f0:	je     0x1000091f2
   1000091f2:	imul   eax,DWORD PTR [rax],0x730063
   1000091f8:	and    BYTE PTR [rax],al
   1000091fa:	je     0x1000091fc
   1000091fc:	jb     0x1000091fe
   1000091fe:	(bad)  
   1000091ff:	add    BYTE PTR [rbx+0x0],ah
   100009202:	imul   eax,DWORD PTR [rax],0x69
   100009205:	add    BYTE PTR [rsi+0x0],ch
   100009208:	add    BYTE PTR [ecx],ch
   10000920b:	add    BYTE PTR [rip+0xa00],cl        # 0x100009c11
   100009211:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100009217:	nop
   100009218:	nop
   100009219:	nop
   10000921a:	nop
   10000921b:	nop
   10000921c:	nop
   10000921d:	nop
   10000921e:	nop
   10000921f:	nop
   100009220:	or     DWORD PTR [rax],eax
   100009222:	pop    rbx
   100009223:	add    BYTE PTR [rip+0x20007900],ch        # 0x120010b29
   100009229:	add    BYTE PTR [rsi+0x0],ch
   10000922c:	jne    0x10000922e
   10000922e:	ins    DWORD PTR es:[rdi],dx
   10000922f:	add    BYTE PTR [rdx+0x0],ah
   100009232:	add    BYTE PTR gs:[rdx+0x0],dh
   100009236:	pop    rbp
   100009237:	add    BYTE PTR [rax],ah
   100009239:	add    BYTE PTR [rax],ch
   10000923b:	add    BYTE PTR [rbx+0x0],dh
   10000923e:	je     0x100009240
   100009240:	(bad)  
   100009241:	add    BYTE PTR [rbx+0x0],ah
   100009244:	imul   eax,DWORD PTR [rax],0x20
   100009247:	add    BYTE PTR [rax+rax*1+0x75],ah
   10000924b:	add    BYTE PTR [rbp+0x0],ch
   10000924e:	jo     0x100009250
   100009250:	and    BYTE PTR [rax],al
   100009252:	outs   dx,DWORD PTR ds:[rsi]
   100009253:	add    BYTE PTR [rsi+0x0],ch
   100009256:	and    BYTE PTR [rax],al
   100009258:	je     0x10000925a
   10000925a:	push   0x73006900
   10000925f:	add    BYTE PTR [rax],ah
   100009261:	add    BYTE PTR [rbp+0x0],ah
   100009264:	jb     0x100009266
   100009266:	jb     0x100009268
   100009268:	outs   dx,DWORD PTR ds:[rsi]
   100009269:	add    BYTE PTR [rdx+0x0],dh
   10000926c:	sub    DWORD PTR [rax],eax
   10000926e:	or     eax,0xa00
   100009273:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100009279:	nop
   10000927a:	nop
   10000927b:	nop
   10000927c:	nop
   10000927d:	nop
   10000927e:	nop
   10000927f:	nop
   100009280:	or     DWORD PTR [rax],eax
   100009282:	pop    rbx
   100009283:	add    BYTE PTR [rip+0x5d004200],ch        # 0x15d00d489
   100009289:	add    BYTE PTR [rax],ah
   10000928b:	add    BYTE PTR [rax],ch
   10000928d:	add    BYTE PTR [rdx+0x0],ah
   100009290:	jb     0x100009292
   100009292:	add    BYTE PTR gs:[rcx+0x0],ah
   100009296:	imul   eax,DWORD PTR [rax],0x70
   100009299:	add    BYTE PTR [rdi+0x0],ch
   10000929c:	imul   eax,DWORD PTR [rax],0x74006e
   1000092a2:	and    BYTE PTR [rax],al
   1000092a4:	outs   dx,DWORD PTR ds:[rsi]
   1000092a5:	add    BYTE PTR [rsi+0x0],ch
   1000092a8:	and    BYTE PTR [rax],al
   1000092aa:	add    BYTE PTR gs:[rdx+0x0],dh
   1000092ae:	jb     0x1000092b0
   1000092b0:	outs   dx,DWORD PTR ds:[rsi]
   1000092b1:	add    BYTE PTR [rdx+0x0],dh
   1000092b4:	and    BYTE PTR [rax],al
   1000092b6:	sub    BYTE PTR [rax],al
   1000092b8:	jne    0x1000092ba
   1000092ba:	jae    0x1000092bc
   1000092bc:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1000092c1:	add    BYTE PTR [rdi+0x0],dh
   1000092c4:	imul   eax,DWORD PTR [rax],0x680074
   1000092ca:	and    BYTE PTR [rax],al
   1000092cc:	sub    eax,0x29007900
   1000092d1:	add    BYTE PTR [rcx],ch
   1000092d3:	add    BYTE PTR [rip+0xa00],cl        # 0x100009cd9
   1000092d9:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000092df:	nop
   1000092e0:	or     DWORD PTR [rax],eax
   1000092e2:	pop    rbx
   1000092e3:	add    BYTE PTR [rip+0x5d004b00],ch        # 0x15d00dde9
   1000092e9:	add    BYTE PTR [rax],ah
   1000092eb:	add    BYTE PTR [rax],ch
   1000092ed:	add    BYTE PTR [rsi+0x0],ah
   1000092f0:	outs   dx,DWORD PTR ds:[rsi]
   1000092f1:	add    BYTE PTR [rdx+0x0],dh
   1000092f4:	movsxd eax,DWORD PTR [rax]
   1000092f6:	add    BYTE PTR gs:[rax],ah
   1000092f9:	add    BYTE PTR [rdx+0x0],dh
   1000092fc:	add    BYTE PTR gs:[rdi+0x0],ah
   100009300:	add    BYTE PTR gs:[rsi+0x0],ch
   100009304:	add    BYTE PTR gs:[rdx+0x0],dh
   100009308:	(bad)  
   100009309:	add    BYTE PTR [rax+rax*1+0x69],dh
   10000930d:	add    BYTE PTR [rdi+0x0],ch
   100009310:	outs   dx,BYTE PTR ds:[rsi]
   100009311:	add    BYTE PTR [rax],ah
   100009313:	add    BYTE PTR [rdi+0x0],ch
   100009316:	data16 add BYTE PTR [rax],ah
   100009319:	add    BYTE PTR [rbx+0x0],dh
   10000931c:	add    BYTE PTR gs:[rdx+0x0],dh
   100009320:	jbe    0x100009322
   100009322:	imul   eax,DWORD PTR [rax],0x650063
   100009328:	and    BYTE PTR [rax],al
   10000932a:	ins    DWORD PTR es:[rdi],dx
   10000932b:	add    BYTE PTR [rcx+0x0],ah
   10000932e:	jae    0x100009330
   100009330:	je     0x100009332
   100009332:	add    BYTE PTR gs:[rdx+0x0],dh
   100009336:	and    BYTE PTR [rax],al
   100009338:	imul   eax,DWORD PTR [rax],0x65
   10000933b:	add    BYTE PTR [rcx+0x0],bh
   10000933e:	and    BYTE PTR [rax],al
   100009340:	sub    BYTE PTR [rax],al
   100009342:	imul   eax,DWORD PTR [rax],0x200066
   100009348:	add    BYTE PTR gs:[rax+0x0],bh
   10000934c:	imul   eax,DWORD PTR [rax],0x740073
   100009352:	jae    0x100009354
   100009354:	sub    DWORD PTR [rax],eax
   100009356:	sub    DWORD PTR [rax],eax
   100009358:	or     eax,0xa00
   10000935d:	add    BYTE PTR [rax+0x5b000990],dl
   100009363:	add    BYTE PTR [rip+0x5d007600],ch        # 0x15d010969
   100009369:	add    BYTE PTR [rax],ah
   10000936b:	add    BYTE PTR [rax],ch
   10000936d:	add    BYTE PTR [rax+rax*1+0x69],ch
   100009371:	add    BYTE PTR [rbx+0x0],dh
   100009374:	je     0x100009376
   100009376:	and    BYTE PTR [rax],al
   100009378:	jbe    0x10000937a
   10000937a:	add    BYTE PTR gs:[rdx+0x0],dh
   10000937e:	jae    0x100009380
   100009380:	imul   eax,DWORD PTR [rax],0x6e006f
   100009386:	and    BYTE PTR [rax],al
   100009388:	imul   eax,DWORD PTR [rax],0x66006e
   10000938e:	outs   dx,DWORD PTR ds:[rsi]
   10000938f:	add    BYTE PTR [rdx+0x0],dh
   100009392:	ins    DWORD PTR es:[rdi],dx
   100009393:	add    BYTE PTR [rcx+0x0],ah
   100009396:	je     0x100009398
   100009398:	imul   eax,DWORD PTR [rax],0x6e006f
   10000939e:	sub    DWORD PTR [rax],eax
   1000093a0:	or     eax,0xa00
   1000093a5:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000093ab:	nop
   1000093ac:	nop
   1000093ad:	nop
   1000093ae:	nop
   1000093af:	nop
   1000093b0:	or     eax,0x53000a00
   1000093b5:	add    BYTE PTR [rbp+0x0],ah
   1000093b8:	add    BYTE PTR gs:[rax],ah
   1000093bb:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1000093bf:	add    BYTE PTR [rbx+0x0],ah
   1000093c2:	jne    0x1000093c4
   1000093c4:	ins    DWORD PTR es:[rdi],dx
   1000093c5:	add    BYTE PTR [rbp+0x0],ah
   1000093c8:	outs   dx,BYTE PTR ds:[rsi]
   1000093c9:	add    BYTE PTR [rax+rax*1+0x61],dh
   1000093cd:	add    BYTE PTR [rax+rax*1+0x69],dh
   1000093d1:	add    BYTE PTR [rdi+0x0],ch
   1000093d4:	outs   dx,BYTE PTR ds:[rsi]
   1000093d5:	add    BYTE PTR [rax],ah
   1000093d7:	add    BYTE PTR [rsi+0x0],ah
   1000093da:	outs   dx,DWORD PTR ds:[rsi]
   1000093db:	add    BYTE PTR [rdx+0x0],dh
   1000093de:	and    BYTE PTR [rax],al
   1000093e0:	add    BYTE PTR fs:[rbp+0x0],ah
   1000093e4:	je     0x1000093e6
   1000093e6:	(bad)  
   1000093e7:	add    BYTE PTR [rcx+0x0],ch
   1000093ea:	ins    BYTE PTR es:[rdi],dx
   1000093eb:	add    BYTE PTR [rbx+0x0],dh
   1000093ee:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x100009df5
   1000093f5:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000093fb:	nop
   1000093fc:	nop
   1000093fd:	nop
   1000093fe:	nop
   1000093ff:	nop
   100009400:	mov    rax,QWORD PTR [rip+0x2f509]        # 0x100038910
   100009407:	cmp    DWORD PTR [rax+0x49c4],0x0
   10000940e:	je     0x100009423
   100009410:	mov    edx,DWORD PTR [rcx+0x18]
   100009413:	cmp    edx,0xffff
   100009419:	ja     0x100009423
   10000941b:	mov    WORD PTR [rax+0x4370],dx
   100009422:	ret    
   100009423:	mov    DWORD PTR [rcx+0x40],0x3
   10000942a:	mov    QWORD PTR [rcx+0x48],0x0
   100009432:	ret    
   100009433:	nop
   100009434:	nop
   100009435:	nop
   100009436:	nop
   100009437:	nop
   100009438:	nop
   100009439:	nop
   10000943a:	nop
   10000943b:	nop
   10000943c:	nop
   10000943d:	nop
   10000943e:	nop
   10000943f:	nop
   100009440:	mov    rax,QWORD PTR [rip+0x2f4c9]        # 0x100038910
   100009447:	mov    DWORD PTR [rax+0x49d4],0x1
   100009451:	ret    
   100009452:	nop
   100009453:	nop
   100009454:	nop
   100009455:	nop
   100009456:	nop
   100009457:	nop
   100009458:	nop
   100009459:	nop
   10000945a:	nop
   10000945b:	nop
   10000945c:	nop
   10000945d:	nop
   10000945e:	nop
   10000945f:	nop
   100009460:	mov    rax,QWORD PTR [rip+0x2f4a9]        # 0x100038910
   100009467:	mov    DWORD PTR [rax+0x7fa8],0x0
   100009471:	ret    
   100009472:	nop
   100009473:	nop
   100009474:	nop
   100009475:	nop
   100009476:	nop
   100009477:	nop
   100009478:	nop
   100009479:	nop
   10000947a:	nop
   10000947b:	nop
   10000947c:	nop
   10000947d:	nop
   10000947e:	nop
   10000947f:	nop
   100009480:	mov    rax,QWORD PTR [rip+0x2f489]        # 0x100038910
   100009487:	mov    r9,QWORD PTR [rcx+0x28]
   10000948b:	xor    r11d,r11d
   10000948e:	mov    rdx,QWORD PTR [rax+0x4580]
   100009495:	mov    r8d,0x105
   10000949b:	mov    r10d,r11d
   10000949e:	xchg   ax,ax
   1000094a0:	lea    rax,[r8+0x7ffffef9]
   1000094a7:	test   rax,rax
   1000094aa:	je     0x1000094c7
   1000094ac:	movzx  eax,WORD PTR [r9]
   1000094b0:	test   ax,ax
   1000094b3:	je     0x1000094c7
   1000094b5:	mov    WORD PTR [rdx],ax
   1000094b8:	add    rdx,0x2
   1000094bc:	add    r9,0x2
   1000094c0:	dec    r8
   1000094c3:	jne    0x1000094a0
   1000094c5:	jmp    0x1000094cc
   1000094c7:	test   r8,r8
   1000094ca:	jne    0x1000094d6
   1000094cc:	sub    rdx,0x2
   1000094d0:	mov    r10d,0x8007007a
   1000094d6:	mov    WORD PTR [rdx],r11w
   1000094da:	test   r10d,r10d
   1000094dd:	jns    0x1000094f5
   1000094df:	lea    rax,[rip+0x1a]        # 0x100009500
   1000094e6:	mov    DWORD PTR [rcx+0x50],r10d
   1000094ea:	mov    DWORD PTR [rcx+0x40],0x3
   1000094f1:	mov    QWORD PTR [rcx+0x48],rax
   1000094f5:	repz ret 
   1000094f7:	nop
   1000094f8:	nop
   1000094f9:	nop
   1000094fa:	nop
   1000094fb:	nop
   1000094fc:	nop
   1000094fd:	nop
   1000094fe:	nop
   1000094ff:	nop
   100009500:	push   rbx
   100009501:	add    BYTE PTR [rax+rax*1+0x72],dh
   100009505:	add    BYTE PTR [rcx+0x0],ch
   100009508:	outs   dx,BYTE PTR ds:[rsi]
   100009509:	add    BYTE PTR [rdi+0x0],ah
   10000950c:	and    BYTE PTR [rax],al
   10000950e:	rex.XB add BYTE PTR [r15+0x0],bpl
   100009512:	jo     0x100009514
   100009514:	jns    0x100009516
   100009516:	and    BYTE PTR [rax],al
   100009518:	add    BYTE PTR [r10+0x0],r14b
   10000951c:	jb     0x10000951e
   10000951e:	outs   dx,DWORD PTR ds:[rsi]
   10000951f:	add    BYTE PTR [rdx+0x0],dh
   100009522:	and    BYTE PTR [rax],al
   100009524:	sub    BYTE PTR [rax],al
   100009526:	ins    DWORD PTR es:[rdi],dx
   100009527:	add    BYTE PTR [rcx+0x0],ah
   10000952a:	jae    0x10000952c
   10000952c:	je     0x10000952e
   10000952e:	add    BYTE PTR gs:[rdx+0x0],dh
   100009532:	and    BYTE PTR [rax],al
   100009534:	add    BYTE PTR fs:[rcx+0x0],ah
   100009538:	je     0x10000953a
   10000953a:	(bad)  
   10000953b:	add    BYTE PTR [rax],ah
   10000953d:	add    BYTE PTR [rsi+0x0],ah
   100009540:	imul   eax,DWORD PTR [rax],0x65006c
   100009546:	and    BYTE PTR [rax],al
   100009548:	jo     0x10000954a
   10000954a:	(bad)  
   10000954b:	add    BYTE PTR [rax+rax*1+0x68],dh
   10000954f:	add    BYTE PTR [rcx],ch
   100009551:	add    BYTE PTR [rax],al
   100009553:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100009559:	nop
   10000955a:	nop
   10000955b:	nop
   10000955c:	nop
   10000955d:	nop
   10000955e:	nop
   10000955f:	nop
   100009560:	cmp    BYTE PTR [rcx+0x44],0x0
   100009564:	je     0x10000956b
   100009566:	mov    ecx,DWORD PTR [rcx+0x18]
   100009569:	jmp    0x100009570
   10000956b:	mov    ecx,0x40
   100009570:	mov    eax,0x1
   100009575:	cmp    ecx,eax
   100009577:	cmovb  ecx,eax
   10000957a:	mov    eax,0x400
   10000957f:	cmp    ecx,eax
   100009581:	cmova  ecx,eax
   100009584:	rex.W jmp QWORD PTR [rip+0xffffffffffff80d5]        # 0x100001660
   10000958b:	nop
   10000958c:	nop
   10000958d:	nop
   10000958e:	nop
   10000958f:	nop
   100009590:	nop
   100009591:	nop
   100009592:	nop
   100009593:	nop
   100009594:	nop
   100009595:	nop
   100009596:	nop
   100009597:	nop
   100009598:	nop
   100009599:	nop
   10000959a:	nop
   10000959b:	nop
   10000959c:	nop
   10000959d:	nop
   10000959e:	nop
   10000959f:	nop
   1000095a0:	push   rbx
   1000095a2:	sub    rsp,0x20
   1000095a6:	mov    rbx,QWORD PTR [rcx+0x28]
   1000095aa:	call   QWORD PTR [rip+0xffffffffffff8658]        # 0x100001c08
   1000095b0:	mov    rdx,rbx
   1000095b3:	mov    rcx,rax
   1000095b6:	add    rsp,0x20
   1000095ba:	pop    rbx
   1000095bb:	rex.W jmp QWORD PTR [rip+0xffffffffffff831e]        # 0x1000018e0
   1000095c2:	nop
   1000095c3:	nop
   1000095c4:	nop
   1000095c5:	nop
   1000095c6:	nop
   1000095c7:	nop
   1000095c8:	nop
   1000095c9:	nop
   1000095ca:	nop
   1000095cb:	nop
   1000095cc:	nop
   1000095cd:	nop
   1000095ce:	nop
   1000095cf:	nop
   1000095d0:	mov    rax,QWORD PTR [rip+0x2f339]        # 0x100038910
   1000095d7:	or     DWORD PTR [rax+0x943c],0x21
   1000095de:	ret    
   1000095df:	nop
   1000095e0:	nop
   1000095e1:	nop
   1000095e2:	nop
   1000095e3:	nop
   1000095e4:	nop
   1000095e5:	nop
   1000095e6:	nop
   1000095e7:	nop
   1000095e8:	nop
   1000095e9:	nop
   1000095ea:	nop
   1000095eb:	nop
   1000095ec:	nop
   1000095ed:	nop
   1000095ee:	nop
   1000095ef:	nop
   1000095f0:	cmp    BYTE PTR [rcx+0x44],0x0
   1000095f4:	je     0x1000095ff
   1000095f6:	mov    eax,DWORD PTR [rcx+0x18]
   1000095f9:	mov    DWORD PTR [rip+0x1fca9],eax        # 0x1000292a8
   1000095ff:	repz ret 
   100009601:	nop
   100009602:	nop
   100009603:	nop
   100009604:	nop
   100009605:	nop
   100009606:	nop
   100009607:	nop
   100009608:	nop
   100009609:	nop
   10000960a:	nop
   10000960b:	nop
   10000960c:	nop
   10000960d:	nop
   10000960e:	nop
   10000960f:	nop
   100009610:	mov    rax,QWORD PTR [rip+0x2f2f9]        # 0x100038910
   100009617:	or     DWORD PTR [rax+0x943c],0x10
   10000961e:	ret    
   10000961f:	nop
   100009620:	nop
   100009621:	nop
   100009622:	nop
   100009623:	nop
   100009624:	nop
   100009625:	nop
   100009626:	nop
   100009627:	nop
   100009628:	nop
   100009629:	nop
   10000962a:	nop
   10000962b:	nop
   10000962c:	nop
   10000962d:	nop
   10000962e:	nop
   10000962f:	nop
   100009630:	sub    rsp,0x28
   100009634:	cmp    BYTE PTR [rcx+0x44],0x0
   100009638:	je     0x100009645
   10000963a:	movsd  xmm0,QWORD PTR [rcx+0x20]
   10000963f:	call   QWORD PTR [rip+0xffffffffffff8013]        # 0x100001658
   100009645:	add    rsp,0x28
   100009649:	ret    
   10000964a:	nop
   10000964b:	nop
   10000964c:	nop
   10000964d:	nop
   10000964e:	nop
   10000964f:	nop
   100009650:	mov    rax,QWORD PTR [rip+0x2f2b9]        # 0x100038910
   100009657:	mov    DWORD PTR [rax+0x49e0],0x1
   100009661:	ret    
   100009662:	nop
   100009663:	nop
   100009664:	nop
   100009665:	nop
   100009666:	nop
   100009667:	nop
   100009668:	nop
   100009669:	nop
   10000966a:	nop
   10000966b:	nop
   10000966c:	nop
   10000966d:	nop
   10000966e:	nop
   10000966f:	nop
   100009670:	mov    rax,QWORD PTR [rip+0x2f299]        # 0x100038910
   100009677:	mov    r9,QWORD PTR [rcx+0x28]
   10000967b:	xor    r11d,r11d
   10000967e:	mov    rdx,QWORD PTR [rax+0x49b0]
   100009685:	mov    r8d,0x105
   10000968b:	mov    r10d,r11d
   10000968e:	xchg   ax,ax
   100009690:	lea    rax,[r8+0x7ffffef9]
   100009697:	test   rax,rax
   10000969a:	je     0x1000096b7
   10000969c:	movzx  eax,WORD PTR [r9]
   1000096a0:	test   ax,ax
   1000096a3:	je     0x1000096b7
   1000096a5:	mov    WORD PTR [rdx],ax
   1000096a8:	add    rdx,0x2
   1000096ac:	add    r9,0x2
   1000096b0:	dec    r8
   1000096b3:	jne    0x100009690
   1000096b5:	jmp    0x1000096bc
   1000096b7:	test   r8,r8
   1000096ba:	jne    0x1000096c6
   1000096bc:	sub    rdx,0x2
   1000096c0:	mov    r10d,0x8007007a
   1000096c6:	mov    WORD PTR [rdx],r11w
   1000096ca:	test   r10d,r10d
   1000096cd:	jns    0x1000096e5
   1000096cf:	lea    rax,[rip+0x1a]        # 0x1000096f0
   1000096d6:	mov    DWORD PTR [rcx+0x50],r10d
   1000096da:	mov    DWORD PTR [rcx+0x40],0x3
   1000096e1:	mov    QWORD PTR [rcx+0x48],rax
   1000096e5:	repz ret 
   1000096e7:	nop
   1000096e8:	nop
   1000096e9:	nop
   1000096ea:	nop
   1000096eb:	nop
   1000096ec:	nop
   1000096ed:	nop
   1000096ee:	nop
   1000096ef:	nop
   1000096f0:	push   rbx
   1000096f1:	add    BYTE PTR [rax+rax*1+0x72],dh
   1000096f5:	add    BYTE PTR [rcx+0x0],ch
   1000096f8:	outs   dx,BYTE PTR ds:[rsi]
   1000096f9:	add    BYTE PTR [rdi+0x0],ah
   1000096fc:	and    BYTE PTR [rax],al
   1000096fe:	rex.XB add BYTE PTR [r15+0x0],bpl
   100009702:	jo     0x100009704
   100009704:	jns    0x100009706
   100009706:	and    BYTE PTR [rax],al
   100009708:	add    BYTE PTR [r10+0x0],r14b
   10000970c:	jb     0x10000970e
   10000970e:	outs   dx,DWORD PTR ds:[rsi]
   10000970f:	add    BYTE PTR [rdx+0x0],dh
   100009712:	and    BYTE PTR [rax],al
   100009714:	sub    BYTE PTR [rax],al
   100009716:	ins    DWORD PTR es:[rdi],dx
   100009717:	add    BYTE PTR [rcx+0x0],ah
   10000971a:	jae    0x10000971c
   10000971c:	je     0x10000971e
   10000971e:	add    BYTE PTR gs:[rdx+0x0],dh
   100009722:	and    BYTE PTR [rax],al
   100009724:	ins    BYTE PTR es:[rdi],dx
   100009725:	add    BYTE PTR [rdi+0x0],ch
   100009728:	add    BYTE PTR [eax],ah
   10000972b:	add    BYTE PTR [rsi+0x0],ah
   10000972e:	imul   eax,DWORD PTR [rax],0x65006c
   100009734:	and    BYTE PTR [rax],al
   100009736:	jo     0x100009738
   100009738:	(bad)  
   100009739:	add    BYTE PTR [rax+rax*1+0x68],dh
   10000973d:	add    BYTE PTR [rcx],ch
   10000973f:	add    BYTE PTR [rax],al
   100009741:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100009747:	nop
   100009748:	nop
   100009749:	nop
   10000974a:	nop
   10000974b:	nop
   10000974c:	nop
   10000974d:	nop
   10000974e:	nop
   10000974f:	nop
   100009750:	push   rbx
   100009752:	sub    rsp,0x20
   100009756:	mov    rax,QWORD PTR [rip+0x2f1b3]        # 0x100038910
   10000975d:	mov    rbx,rcx
   100009760:	or     DWORD PTR [rax+0x943c],0x1
   100009767:	cmp    BYTE PTR [rcx+0x44],0x0
   10000976b:	je     0x100009790
   10000976d:	mov    rcx,QWORD PTR [rcx+0x28]
   100009771:	call   QWORD PTR [rip+0xffffffffffff8161]        # 0x1000018d8
   100009777:	test   eax,eax
   100009779:	jns    0x100009790
   10000977b:	mov    DWORD PTR [rbx+0x50],eax
   10000977e:	lea    rax,[rip+0x1b]        # 0x1000097a0
   100009785:	mov    DWORD PTR [rbx+0x40],0x3
   10000978c:	mov    QWORD PTR [rbx+0x48],rax
   100009790:	add    rsp,0x20
   100009794:	pop    rbx
   100009795:	ret    
   100009796:	nop
   100009797:	nop
   100009798:	nop
   100009799:	nop
   10000979a:	nop
   10000979b:	nop
   10000979c:	nop
   10000979d:	nop
   10000979e:	nop
   10000979f:	nop
   1000097a0:	push   rbx
   1000097a1:	add    BYTE PTR [rax+rax*1+0x72],dh
   1000097a5:	add    BYTE PTR [rcx+0x0],ch
   1000097a8:	outs   dx,BYTE PTR ds:[rsi]
   1000097a9:	add    BYTE PTR [rdi+0x0],ah
   1000097ac:	and    BYTE PTR [rax],al
   1000097ae:	rex.XB add BYTE PTR [r15+0x0],bpl
   1000097b2:	jo     0x1000097b4
   1000097b4:	jns    0x1000097b6
   1000097b6:	and    BYTE PTR [rax],al
   1000097b8:	add    BYTE PTR [r10+0x0],r14b
   1000097bc:	jb     0x1000097be
   1000097be:	outs   dx,DWORD PTR ds:[rsi]
   1000097bf:	add    BYTE PTR [rdx+0x0],dh
   1000097c2:	and    BYTE PTR [rax],al
   1000097c4:	sub    BYTE PTR [rax],al
   1000097c6:	jb     0x1000097c8
   1000097c8:	add    BYTE PTR gs:[rbx+0x0],dh
   1000097cc:	je     0x1000097ce
   1000097ce:	jb     0x1000097d0
   1000097d0:	imul   eax,DWORD PTR [rax],0x740063
   1000097d6:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1000097db:	add    BYTE PTR [rcx+0x0],ah
   1000097de:	jo     0x1000097e0
   1000097e0:	jo     0x1000097e2
   1000097e2:	ins    BYTE PTR es:[rdi],dx
   1000097e3:	add    BYTE PTR [rcx+0x0],ch
   1000097e6:	movsxd eax,DWORD PTR [rax]
   1000097e8:	(bad)  
   1000097e9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1000097ed:	add    BYTE PTR [rdi+0x0],ch
   1000097f0:	outs   dx,BYTE PTR ds:[rsi]
   1000097f1:	add    BYTE PTR [rax],ah
   1000097f3:	add    BYTE PTR [rsi+0x0],ch
   1000097f6:	(bad)  
   1000097f7:	add    BYTE PTR [rbp+0x0],ch
   1000097fa:	add    BYTE PTR gs:[rcx],ch
   1000097fd:	add    BYTE PTR [rax],al
   1000097ff:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100009805:	nop
   100009806:	nop
   100009807:	nop
   100009808:	nop
   100009809:	nop
   10000980a:	nop
   10000980b:	nop
   10000980c:	nop
   10000980d:	nop
   10000980e:	nop
   10000980f:	nop
   100009810:	sub    rsp,0x28
   100009814:	cmp    DWORD PTR [rcx+0x34],0x0
   100009818:	jge    0x10000982c
   10000981a:	mov    rax,QWORD PTR [rcx+0x10]
   10000981e:	cmp    DWORD PTR [rax+0x8],0x2
   100009822:	jne    0x10000982c
   100009824:	mov    rax,QWORD PTR [rax]
   100009827:	movzx  ecx,WORD PTR [rax]
   10000982a:	jmp    0x10000982e
   10000982c:	xor    ecx,ecx
   10000982e:	movzx  edx,cx
   100009831:	mov    ecx,0x42e3
   100009836:	call   0x1000182d0
   10000983b:	call   QWORD PTR [rip+0xffffffffffff83c7]        # 0x100001c08
   100009841:	xor    edx,edx
   100009843:	mov    rcx,rax
   100009846:	add    rsp,0x28
   10000984a:	rex.W jmp QWORD PTR [rip+0xffffffffffff807f]        # 0x1000018d0
   100009851:	nop
   100009852:	nop
   100009853:	nop
   100009854:	nop
   100009855:	nop
   100009856:	nop
   100009857:	nop
   100009858:	nop
   100009859:	nop
   10000985a:	nop
   10000985b:	nop
   10000985c:	nop
   10000985d:	nop
   10000985e:	nop
   10000985f:	nop
   100009860:	mov    r11,rsp
   100009863:	push   rbx
   100009864:	sub    rsp,0xb0
   10000986b:	mov    rax,QWORD PTR [rip+0x1f97e]        # 0x1000291f0
   100009872:	xor    rax,rsp
   100009875:	mov    QWORD PTR [rsp+0xa0],rax
   10000987d:	mov    rax,QWORD PTR [rip+0xffffffffffff829c]        # 0x100001b20
   100009884:	mov    rbx,rcx
   100009887:	mov    rdx,QWORD PTR [rax]
   10000988a:	cmp    DWORD PTR [rdx+0x10],0x2
   10000988e:	jne    0x10000998e
   100009894:	mov    QWORD PTR [r11+0x10],rbp
   100009898:	mov    QWORD PTR [r11+0x20],rdi
   10000989c:	mov    edi,DWORD PTR [rcx+0x18]
   10000989f:	lea    rcx,[rsp+0x20]
   1000098a4:	call   QWORD PTR [rip+0xffffffffffff83c6]        # 0x100001c70
   1000098aa:	lea    rcx,[rsp+0x20]
   1000098af:	call   QWORD PTR [rip+0xffffffffffff83c3]        # 0x100001c78
   1000098b5:	test   rdi,rdi
   1000098b8:	je     0x100009971
   1000098be:	lea    rcx,[rsp+0x20]
   1000098c3:	call   QWORD PTR [rip+0xffffffffffff83b7]        # 0x100001c80
   1000098c9:	mov    r11d,eax
   1000098cc:	cmp    rdi,r11
   1000098cf:	ja     0x100009971
   1000098d5:	xor    ebp,ebp
   1000098d7:	mov    QWORD PTR [rsp+0xd0],rsi
   1000098df:	movzx  esi,bp
   1000098e2:	test   rdi,rdi
   1000098e5:	je     0x100009944
   1000098e7:	call   QWORD PTR [rip+0xffffffffffff839b]        # 0x100001c88
   1000098ed:	cmp    si,ax
   1000098f0:	jae    0x100009944
   1000098f2:	or     rbx,0xffffffffffffffff
   1000098f6:	cmp    rdi,0x40
   1000098fa:	jae    0x10000990a
   1000098fc:	mov    rcx,rdi
   1000098ff:	mov    ebx,0x1
   100009904:	shl    rbx,cl
   100009907:	dec    rbx
   10000990a:	lea    rcx,[rip+0x2363f]        # 0x10002cf50
   100009911:	mov    r9,rbx
   100009914:	movzx  r8d,si
   100009918:	movzx  edx,si
   10000991b:	call   QWORD PTR [rip+0xffffffffffff836f]        # 0x100001c90
   100009921:	mov    rdx,rbp
   100009924:	test   rbx,rbx
   100009927:	je     0x10000993c
   100009929:	nop    DWORD PTR [rax+0x0]
   100009930:	lea    rax,[rbx-0x1]
   100009934:	inc    rdx
   100009937:	and    rbx,rax
   10000993a:	jne    0x100009930
   10000993c:	inc    si
   10000993f:	sub    rdi,rdx
   100009942:	jne    0x1000098e7
   100009944:	mov    rax,QWORD PTR [rip+0x23605]        # 0x10002cf50
   10000994b:	lea    rcx,[rip+0x235fe]        # 0x10002cf50
   100009952:	call   QWORD PTR [rax+0x68]
   100009955:	mov    r11,QWORD PTR [rip+0x2efb4]        # 0x100038910
   10000995c:	mov    rsi,QWORD PTR [rsp+0xd0]
   100009964:	or     DWORD PTR [r11+0x943c],0x80
   10000996f:	jmp    0x10000997e
   100009971:	xor    ebp,ebp
   100009973:	mov    DWORD PTR [rbx+0x40],0x3
   10000997a:	mov    QWORD PTR [rbx+0x48],rbp
   10000997e:	mov    rbp,QWORD PTR [rsp+0xc8]
   100009986:	mov    rdi,QWORD PTR [rsp+0xd8]
   10000998e:	mov    rcx,QWORD PTR [rsp+0xa0]
   100009996:	xor    rcx,rsp
   100009999:	call   0x100002610
   10000999e:	add    rsp,0xb0
   1000099a5:	pop    rbx
   1000099a6:	ret    
   1000099a7:	nop
   1000099a8:	nop
   1000099a9:	nop
   1000099aa:	nop
   1000099ab:	nop
   1000099ac:	nop
   1000099ad:	nop
   1000099ae:	nop
   1000099af:	nop
   1000099b0:	mov    rax,QWORD PTR [rip+0x2ef59]        # 0x100038910
   1000099b7:	or     DWORD PTR [rax+0x943c],0x9
   1000099be:	ret    
   1000099bf:	nop
   1000099c0:	nop
   1000099c1:	nop
   1000099c2:	nop
   1000099c3:	nop
   1000099c4:	nop
   1000099c5:	nop
   1000099c6:	nop
   1000099c7:	nop
   1000099c8:	nop
   1000099c9:	nop
   1000099ca:	nop
   1000099cb:	nop
   1000099cc:	nop
   1000099cd:	nop
   1000099ce:	nop
   1000099cf:	nop
   1000099d0:	mov    QWORD PTR [rsp+0x10],rbx
   1000099d5:	push   rdi
   1000099d6:	sub    rsp,0x150
   1000099dd:	mov    rax,QWORD PTR [rip+0x1f80c]        # 0x1000291f0
   1000099e4:	xor    rax,rsp
   1000099e7:	mov    QWORD PTR [rsp+0x140],rax
   1000099ef:	mov    rbx,rcx
   1000099f2:	mov    rcx,QWORD PTR [rcx+0x28]
   1000099f6:	xor    edi,edi
   1000099f8:	lea    rax,[rsp+0x30]
   1000099fd:	mov    r8d,0x81
   100009a03:	lea    rdx,[rsp+0x30]
   100009a08:	sub    rcx,rax
   100009a0b:	mov    r9d,edi
   100009a0e:	xchg   ax,ax
   100009a10:	lea    rax,[r8+0x7fffff7d]
   100009a17:	test   rax,rax
   100009a1a:	je     0x100009a33
   100009a1c:	movzx  eax,WORD PTR [rcx+rdx*1]
   100009a20:	test   ax,ax
   100009a23:	je     0x100009a33
   100009a25:	mov    WORD PTR [rdx],ax
   100009a28:	add    rdx,0x2
   100009a2c:	dec    r8
   100009a2f:	jne    0x100009a10
   100009a31:	jmp    0x100009a38
   100009a33:	test   r8,r8
   100009a36:	jne    0x100009a42
   100009a38:	sub    rdx,0x2
   100009a3c:	mov    r9d,0x8007007a
   100009a42:	mov    WORD PTR [rdx],di
   100009a45:	test   r9d,r9d
   100009a48:	jns    0x100009a5b
   100009a4a:	lea    rax,[rip+0x9f]        # 0x100009af0
   100009a51:	mov    DWORD PTR [rbx+0x50],r9d
   100009a55:	mov    QWORD PTR [rbx+0x48],rax
   100009a59:	jmp    0x100009ac2
   100009a5b:	lea    rcx,[rsp+0x30]
   100009a60:	or     rax,0xffffffffffffffff
   100009a64:	inc    rax
   100009a67:	cmp    WORD PTR [rcx+rax*2],di
   100009a6b:	jne    0x100009a64
   100009a6d:	lea    edx,[rax+rax*1]
   100009a70:	lea    r8,[rsp+0x20]
   100009a75:	lea    rcx,[rsp+0x30]
   100009a7a:	call   QWORD PTR [rip+0xffffffffffff7f70]        # 0x1000019f0
   100009a80:	test   eax,eax
   100009a82:	je     0x100009abe
   100009a84:	movzx  ecx,BYTE PTR [rsp+0x20]
   100009a89:	and    cl,0x7f
   100009a8c:	call   QWORD PTR [rip+0xffffffffffff7f56]        # 0x1000019e8
   100009a92:	test   al,al
   100009a94:	jne    0x100009abe
   100009a96:	mov    ecx,DWORD PTR [rsp+0x20]
   100009a9a:	call   QWORD PTR [rip+0xffffffffffff7f40]        # 0x1000019e0
   100009aa0:	test   al,al
   100009aa2:	je     0x100009abe
   100009aa4:	mov    rax,QWORD PTR [rip+0x2ee65]        # 0x100038910
   100009aab:	or     DWORD PTR [rax+0x943c],0x5
   100009ab2:	mov    ecx,DWORD PTR [rsp+0x20]
   100009ab6:	call   QWORD PTR [rip+0xffffffffffff7b8c]        # 0x100001648
   100009abc:	jmp    0x100009ac9
   100009abe:	mov    QWORD PTR [rbx+0x48],rdi
   100009ac2:	mov    DWORD PTR [rbx+0x40],0x3
   100009ac9:	mov    rcx,QWORD PTR [rsp+0x140]
   100009ad1:	xor    rcx,rsp
   100009ad4:	call   0x100002610
   100009ad9:	mov    rbx,QWORD PTR [rsp+0x168]
   100009ae1:	add    rsp,0x150
   100009ae8:	pop    rdi
   100009ae9:	ret    
   100009aea:	nop
   100009aeb:	nop
   100009aec:	nop
   100009aed:	nop
   100009aee:	nop
   100009aef:	nop
   100009af0:	push   rbx
   100009af1:	add    BYTE PTR [rax+rax*1+0x72],dh
   100009af5:	add    BYTE PTR [rcx+0x0],ch
   100009af8:	outs   dx,BYTE PTR ds:[rsi]
   100009af9:	add    BYTE PTR [rdi+0x0],ah
   100009afc:	and    BYTE PTR [rax],al
   100009afe:	rex.XB add BYTE PTR [r15+0x0],bpl
   100009b02:	jo     0x100009b04
   100009b04:	jns    0x100009b06
   100009b06:	and    BYTE PTR [rax],al
   100009b08:	add    BYTE PTR [r10+0x0],r14b
   100009b0c:	jb     0x100009b0e
   100009b0e:	outs   dx,DWORD PTR ds:[rsi]
   100009b0f:	add    BYTE PTR [rdx+0x0],dh
   100009b12:	and    BYTE PTR [rax],al
   100009b14:	sub    BYTE PTR [rax],al
   100009b16:	movsxd eax,DWORD PTR [rax]
   100009b18:	outs   dx,DWORD PTR ds:[rsi]
   100009b19:	add    BYTE PTR [rax+rax*1+0x6c],ch
   100009b1d:	add    BYTE PTR [rcx+0x0],ah
   100009b20:	je     0x100009b22
   100009b22:	imul   eax,DWORD PTR [rax],0x6e006f
   100009b28:	and    BYTE PTR [rax],al
   100009b2a:	outs   dx,BYTE PTR ds:[rsi]
   100009b2b:	add    BYTE PTR [rcx+0x0],ah
   100009b2e:	ins    DWORD PTR es:[rdi],dx
   100009b2f:	add    BYTE PTR [rbp+0x0],ah
   100009b32:	sub    DWORD PTR [rax],eax
   100009b34:	add    BYTE PTR [rax],al
   100009b36:	nop
   100009b37:	nop
   100009b38:	nop
   100009b39:	nop
   100009b3a:	nop
   100009b3b:	nop
   100009b3c:	nop
   100009b3d:	nop
   100009b3e:	nop
   100009b3f:	nop
   100009b40:	sub    rsp,0x28
   100009b44:	mov    r9,QWORD PTR [rcx+0x28]
   100009b48:	xor    r11d,r11d
   100009b4b:	mov    r8d,0x105
   100009b51:	mov    r10d,r11d
   100009b54:	lea    rdx,[rip+0x227a5]        # 0x10002c300
   100009b5b:	nop    DWORD PTR [rax+rax*1+0x0]
   100009b60:	lea    rax,[r8+0x7ffffef9]
   100009b67:	test   rax,rax
   100009b6a:	je     0x100009b87
   100009b6c:	movzx  eax,WORD PTR [r9]
   100009b70:	test   ax,ax
   100009b73:	je     0x100009b87
   100009b75:	mov    WORD PTR [rdx],ax
   100009b78:	add    rdx,0x2
   100009b7c:	add    r9,0x2
   100009b80:	dec    r8
   100009b83:	jne    0x100009b60
   100009b85:	jmp    0x100009b8c
   100009b87:	test   r8,r8
   100009b8a:	jne    0x100009b96
   100009b8c:	sub    rdx,0x2
   100009b90:	mov    r10d,0x8007007a
   100009b96:	mov    WORD PTR [rdx],r11w
   100009b9a:	test   r10d,r10d
   100009b9d:	jns    0x100009bba
   100009b9f:	lea    rax,[rip+0x3a]        # 0x100009be0
   100009ba6:	mov    DWORD PTR [rcx+0x50],r10d
   100009baa:	mov    DWORD PTR [rcx+0x40],0x3
   100009bb1:	mov    QWORD PTR [rcx+0x48],rax
   100009bb5:	add    rsp,0x28
   100009bb9:	ret    
   100009bba:	call   QWORD PTR [rip+0xffffffffffff8078]        # 0x100001c38
   100009bc0:	lea    rcx,[rip+0x22739]        # 0x10002c300
   100009bc7:	mov    rdx,rax
   100009bca:	add    rsp,0x28
   100009bce:	rex.W jmp QWORD PTR [rip+0xffffffffffff783b]        # 0x100001410
   100009bd5:	nop
   100009bd6:	nop
   100009bd7:	nop
   100009bd8:	nop
   100009bd9:	nop
   100009bda:	nop
   100009bdb:	nop
   100009bdc:	nop
   100009bdd:	nop
   100009bde:	nop
   100009bdf:	nop
   100009be0:	push   rbx
   100009be1:	add    BYTE PTR [rax+rax*1+0x72],dh
   100009be5:	add    BYTE PTR [rcx+0x0],ch
   100009be8:	outs   dx,BYTE PTR ds:[rsi]
   100009be9:	add    BYTE PTR [rdi+0x0],ah
   100009bec:	and    BYTE PTR [rax],al
   100009bee:	movsxd eax,DWORD PTR [rax]
   100009bf0:	outs   dx,DWORD PTR ds:[rsi]
   100009bf1:	add    BYTE PTR [rax+0x0],dh
   100009bf4:	jns    0x100009bf6
   100009bf6:	and    BYTE PTR [rax],al
   100009bf8:	data16 add BYTE PTR [rcx+0x0],ah
   100009bfc:	imul   eax,DWORD PTR [rax],0x75006c
   100009c02:	jb     0x100009c04
   100009c04:	add    BYTE PTR gs:[rax],ah
   100009c07:	add    BYTE PTR [rax],ch
   100009c09:	add    BYTE PTR [rax+0x0],dh
   100009c0c:	(bad)  
   100009c0d:	add    BYTE PTR [rdx+0x0],dh
   100009c10:	add    BYTE PTR gs:[rsi+0x0],ch
   100009c14:	je     0x100009c16
   100009c16:	and    BYTE PTR [rax],al
   100009c18:	imul   eax,DWORD PTR [rax],0x73006e
   100009c1e:	je     0x100009c20
   100009c20:	(bad)  
   100009c21:	add    BYTE PTR [rsi+0x0],ch
   100009c24:	movsxd eax,DWORD PTR [rax]
   100009c26:	add    BYTE PTR gs:[rax],ah
   100009c29:	add    BYTE PTR [rsi+0x0],ch
   100009c2c:	(bad)  
   100009c2d:	add    BYTE PTR [rbp+0x0],ch
   100009c30:	add    BYTE PTR gs:[rcx],ch
   100009c33:	add    BYTE PTR [rax],al
   100009c35:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100009c3b:	nop
   100009c3c:	nop
   100009c3d:	nop
   100009c3e:	nop
   100009c3f:	nop
   100009c40:	sub    rsp,0x28
   100009c44:	mov    rdx,QWORD PTR [rip+0x2ecc5]        # 0x100038910
   100009c4b:	mov    r9,QWORD PTR [rcx+0x28]
   100009c4f:	mov    r8d,0x105
   100009c55:	add    rdx,0x7fc0
   100009c5c:	xor    r11d,r11d
   100009c5f:	mov    r10d,r11d
   100009c62:	lea    rax,[r8+0x7ffffef9]
   100009c69:	test   rax,rax
   100009c6c:	je     0x100009c89
   100009c6e:	movzx  eax,WORD PTR [r9]
   100009c72:	test   ax,ax
   100009c75:	je     0x100009c89
   100009c77:	mov    WORD PTR [rdx],ax
   100009c7a:	add    rdx,0x2
   100009c7e:	add    r9,0x2
   100009c82:	dec    r8
   100009c85:	jne    0x100009c62
   100009c87:	jmp    0x100009c8e
   100009c89:	test   r8,r8
   100009c8c:	jne    0x100009c98
   100009c8e:	sub    rdx,0x2
   100009c92:	mov    r10d,0x8007007a
   100009c98:	mov    WORD PTR [rdx],r11w
   100009c9c:	test   r10d,r10d
   100009c9f:	jns    0x100009cbc
   100009ca1:	lea    rax,[rip+0x48]        # 0x100009cf0
   100009ca8:	mov    DWORD PTR [rcx+0x50],r10d
   100009cac:	mov    DWORD PTR [rcx+0x40],0x3
   100009cb3:	mov    QWORD PTR [rcx+0x48],rax
   100009cb7:	add    rsp,0x28
   100009cbb:	ret    
   100009cbc:	mov    QWORD PTR [rsp+0x20],rbx
   100009cc1:	mov    rbx,QWORD PTR [rip+0x2ec48]        # 0x100038910
   100009cc8:	call   QWORD PTR [rip+0xffffffffffff7f6a]        # 0x100001c38
   100009cce:	lea    rcx,[rbx+0x7fc0]
   100009cd5:	mov    rdx,rax
   100009cd8:	mov    rbx,QWORD PTR [rsp+0x20]
   100009cdd:	add    rsp,0x28
   100009ce1:	rex.W jmp QWORD PTR [rip+0xffffffffffff7728]        # 0x100001410
   100009ce8:	nop
   100009ce9:	nop
   100009cea:	nop
   100009ceb:	nop
   100009cec:	nop
   100009ced:	nop
   100009cee:	nop
   100009cef:	nop
   100009cf0:	push   rbx
   100009cf1:	add    BYTE PTR [rax+rax*1+0x72],dh
   100009cf5:	add    BYTE PTR [rcx+0x0],ch
   100009cf8:	outs   dx,BYTE PTR ds:[rsi]
   100009cf9:	add    BYTE PTR [rdi+0x0],ah
   100009cfc:	and    BYTE PTR [rax],al
   100009cfe:	movsxd eax,DWORD PTR [rax]
   100009d00:	outs   dx,DWORD PTR ds:[rsi]
   100009d01:	add    BYTE PTR [rax+0x0],dh
   100009d04:	jns    0x100009d06
   100009d06:	and    BYTE PTR [rax],al
   100009d08:	data16 add BYTE PTR [rcx+0x0],ah
   100009d0c:	imul   eax,DWORD PTR [rax],0x75006c
   100009d12:	jb     0x100009d14
   100009d14:	add    BYTE PTR gs:[rax],ah
   100009d17:	add    BYTE PTR [rax],ch
   100009d19:	add    BYTE PTR [rbx+0x0],dh
   100009d1c:	add    BYTE PTR gs:[rdx+0x0],dh
   100009d20:	jbe    0x100009d22
   100009d22:	add    BYTE PTR gs:[rdx+0x0],dh
   100009d26:	and    BYTE PTR [rax],al
   100009d28:	imul   eax,DWORD PTR [rax],0x73006e
   100009d2e:	je     0x100009d30
   100009d30:	(bad)  
   100009d31:	add    BYTE PTR [rsi+0x0],ch
   100009d34:	movsxd eax,DWORD PTR [rax]
   100009d36:	add    BYTE PTR gs:[rcx],ch
   100009d39:	add    BYTE PTR [rax],al
   100009d3b:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100009d41:	nop
   100009d42:	nop
   100009d43:	nop
   100009d44:	nop
   100009d45:	nop
   100009d46:	nop
   100009d47:	nop
   100009d48:	nop
   100009d49:	nop
   100009d4a:	nop
   100009d4b:	nop
   100009d4c:	nop
   100009d4d:	nop
   100009d4e:	nop
   100009d4f:	nop
   100009d50:	push   rbx
   100009d52:	sub    rsp,0x20
   100009d56:	mov    rbx,rcx
   100009d59:	mov    ecx,DWORD PTR [rcx+0x18]
   100009d5c:	cmp    ecx,0xffff
   100009d62:	ja     0x100009d9e
   100009d64:	mov    rax,QWORD PTR [rip+0x2eba5]        # 0x100038910
   100009d6b:	cmp    DWORD PTR [rax+0x49c4],0x0
   100009d72:	jne    0x100009d93
   100009d74:	movzx  edx,cx
   100009d77:	mov    eax,0x51eb851f
   100009d7c:	imul   edx
   100009d7e:	sar    edx,0x5
   100009d81:	mov    eax,edx
   100009d83:	shr    eax,0x1f
   100009d86:	add    edx,eax
   100009d88:	imul   edx,edx,0x64
   100009d8b:	cmp    edx,0x2580
   100009d91:	je     0x100009d9e
   100009d93:	mov    rcx,rbx
   100009d96:	call   QWORD PTR [rip+0xffffffffffff7efc]        # 0x100001c98
   100009d9c:	jmp    0x100009dad
   100009d9e:	mov    QWORD PTR [rbx+0x48],0x0
   100009da6:	mov    DWORD PTR [rbx+0x40],0x2
   100009dad:	cmp    DWORD PTR [rbx+0x40],0x2
   100009db1:	jne    0x100009dc0
   100009db3:	mov    edx,DWORD PTR [rbx+0x18]
   100009db6:	mov    ecx,0x4315
   100009dbb:	call   0x1000182d0
   100009dc0:	add    rsp,0x20
   100009dc4:	pop    rbx
   100009dc5:	ret    
   100009dc6:	nop
   100009dc7:	nop
   100009dc8:	nop
   100009dc9:	nop
   100009dca:	nop
   100009dcb:	nop
   100009dcc:	nop
   100009dcd:	nop
   100009dce:	nop
   100009dcf:	nop
   100009dd0:	mov    QWORD PTR [rsp+0x8],rbx
   100009dd5:	mov    rax,QWORD PTR [rip+0x2eb34]        # 0x100038910
   100009ddc:	mov    r10,QWORD PTR [rcx+0x28]
   100009de0:	mov    r9d,0x105
   100009de6:	mov    rdx,QWORD PTR [rax+0x4798]
   100009ded:	xor    ebx,ebx
   100009def:	mov    r11,rcx
   100009df2:	mov    r8d,r9d
   100009df5:	mov    ecx,ebx
   100009df7:	nop    WORD PTR [rax+rax*1+0x0]
   100009e00:	lea    rax,[r8+0x7ffffef9]
   100009e07:	test   rax,rax
   100009e0a:	je     0x100009e27
   100009e0c:	movzx  eax,WORD PTR [r10]
   100009e10:	test   ax,ax
   100009e13:	je     0x100009e27
   100009e15:	mov    WORD PTR [rdx],ax
   100009e18:	add    rdx,0x2
   100009e1c:	add    r10,0x2
   100009e20:	dec    r8
   100009e23:	jne    0x100009e00
   100009e25:	jmp    0x100009e2c
   100009e27:	test   r8,r8
   100009e2a:	jne    0x100009e35
   100009e2c:	sub    rdx,0x2
   100009e30:	mov    ecx,0x8007007a
   100009e35:	mov    WORD PTR [rdx],bx
   100009e38:	test   ecx,ecx
   100009e3a:	jns    0x100009e45
   100009e3c:	mov    DWORD PTR [r11+0x50],ecx
   100009e40:	jmp    0x100009eff
   100009e45:	mov    rax,QWORD PTR [rip+0x2eac4]        # 0x100038910
   100009e4c:	mov    r10,QWORD PTR [rax+0x4798]
   100009e53:	cmp    WORD PTR [r10+0x208],0x5c
   100009e5c:	je     0x100009f12
   100009e62:	mov    rcx,r9
   100009e65:	mov    rax,r10
   100009e68:	mov    r8d,ebx
   100009e6b:	nop    DWORD PTR [rax+rax*1+0x0]
   100009e70:	cmp    WORD PTR [rax],bx
   100009e73:	je     0x100009e89
   100009e75:	add    rax,0x2
   100009e79:	dec    rcx
   100009e7c:	jne    0x100009e70
   100009e7e:	mov    r8d,0x80070057
   100009e84:	mov    rdx,rbx
   100009e87:	jmp    0x100009e9f
   100009e89:	test   rcx,rcx
   100009e8c:	jne    0x100009e99
   100009e8e:	mov    r8d,0x80070057
   100009e94:	mov    rdx,rbx
   100009e97:	jmp    0x100009e9f
   100009e99:	mov    rdx,r9
   100009e9c:	sub    rdx,rcx
   100009e9f:	test   r8d,r8d
   100009ea2:	js     0x100009efb
   100009ea4:	lea    rax,[r10+rdx*2]
   100009ea8:	mov    r8d,ebx
   100009eab:	sub    r9,rdx
   100009eae:	je     0x100009ee9
   100009eb0:	lea    rcx,[rdx+0x7ffffefa]
   100009eb7:	lea    r10,[rip+0xffffffffffff9546]        # 0x100003404
   100009ebe:	add    rcx,r9
   100009ec1:	sub    r10,rax
   100009ec4:	test   rcx,rcx
   100009ec7:	je     0x100009ee4
   100009ec9:	movzx  edx,WORD PTR [r10+rax*1]
   100009ece:	test   dx,dx
   100009ed1:	je     0x100009ee4
   100009ed3:	mov    WORD PTR [rax],dx
   100009ed6:	add    rax,0x2
   100009eda:	dec    rcx
   100009edd:	dec    r9
   100009ee0:	jne    0x100009ec4
   100009ee2:	jmp    0x100009ee9
   100009ee4:	test   r9,r9
   100009ee7:	jne    0x100009ef3
   100009ee9:	sub    rax,0x2
   100009eed:	mov    r8d,0x8007007a
   100009ef3:	mov    WORD PTR [rax],bx
   100009ef6:	test   r8d,r8d
   100009ef9:	jns    0x100009f12
   100009efb:	mov    DWORD PTR [r11+0x50],r8d
   100009eff:	lea    rax,[rip+0x1a]        # 0x100009f20
   100009f06:	mov    DWORD PTR [r11+0x40],0x3
   100009f0e:	mov    QWORD PTR [r11+0x48],rax
   100009f12:	mov    rbx,QWORD PTR [rsp+0x8]
   100009f17:	ret    
   100009f18:	nop
   100009f19:	nop
   100009f1a:	nop
   100009f1b:	nop
   100009f1c:	nop
   100009f1d:	nop
   100009f1e:	nop
   100009f1f:	nop
   100009f20:	push   rbx
   100009f21:	add    BYTE PTR [rax+rax*1+0x72],dh
   100009f25:	add    BYTE PTR [rcx+0x0],ch
   100009f28:	outs   dx,BYTE PTR ds:[rsi]
   100009f29:	add    BYTE PTR [rdi+0x0],ah
   100009f2c:	and    BYTE PTR [rax],al
   100009f2e:	rex.XB add BYTE PTR [r15+0x0],bpl
   100009f32:	jo     0x100009f34
   100009f34:	jns    0x100009f36
   100009f36:	and    BYTE PTR [rax],al
   100009f38:	add    BYTE PTR [r10+0x0],r14b
   100009f3c:	jb     0x100009f3e
   100009f3e:	outs   dx,DWORD PTR ds:[rsi]
   100009f3f:	add    BYTE PTR [rdx+0x0],dh
   100009f42:	and    BYTE PTR [rax],al
   100009f44:	sub    BYTE PTR [rax],al
   100009f46:	jne    0x100009f48
   100009f48:	jae    0x100009f4a
   100009f4a:	add    BYTE PTR gs:[rdx+0x0],dh
   100009f4e:	sub    eax,0x6e006900
   100009f53:	add    BYTE PTR [rbx+0x0],dh
   100009f56:	je     0x100009f58
   100009f58:	(bad)  
   100009f59:	add    BYTE PTR [rsi+0x0],ch
   100009f5c:	movsxd eax,DWORD PTR [rax]
   100009f5e:	add    BYTE PTR gs:[rax],ah
   100009f61:	add    BYTE PTR [rax+rax*1+0x65],dh
   100009f65:	add    BYTE PTR [rbp+0x0],ch
   100009f68:	jo     0x100009f6a
   100009f6a:	ins    BYTE PTR es:[rdi],dx
   100009f6b:	add    BYTE PTR [rcx+0x0],ah
   100009f6e:	je     0x100009f70
   100009f70:	add    BYTE PTR gs:[rax],ah
   100009f73:	add    BYTE PTR [rax+rax*1+0x61],ah
   100009f77:	add    BYTE PTR [rax+rax*1+0x61],dh
   100009f7b:	add    BYTE PTR [rax],ah
   100009f7d:	add    BYTE PTR [rax+0x0],dh
   100009f80:	(bad)  
   100009f81:	add    BYTE PTR [rax+rax*1+0x68],dh
   100009f85:	add    BYTE PTR [rcx],ch
   100009f87:	add    BYTE PTR [rax],al
   100009f89:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100009f8f:	nop
   100009f90:	mov    r11,rsp
   100009f93:	push   rdi
   100009f94:	sub    rsp,0x240
   100009f9b:	mov    rax,QWORD PTR [rip+0x1f24e]        # 0x1000291f0
   100009fa2:	xor    rax,rsp
   100009fa5:	mov    QWORD PTR [rsp+0x230],rax
   100009fad:	mov    rax,QWORD PTR [rip+0x2e95c]        # 0x100038910
   100009fb4:	mov    rdi,rcx
   100009fb7:	cmp    DWORD PTR [rax+0x49c0],0x0
   100009fbe:	je     0x10000a063
   100009fc4:	mov    QWORD PTR [r11+0x10],rbx
   100009fc8:	mov    QWORD PTR [r11+0x18],rbp
   100009fcc:	mov    rbp,QWORD PTR [rcx+0x28]
   100009fd0:	mov    edx,0x3d
   100009fd5:	mov    rcx,rbp
   100009fd8:	mov    QWORD PTR [r11+0x20],rsi
   100009fdc:	call   QWORD PTR [rip+0xffffffffffff7426]        # 0x100001408
   100009fe2:	mov    rsi,rax
   100009fe5:	test   rax,rax
   100009fe8:	je     0x10000a039
   100009fea:	mov    rbx,rax
   100009fed:	sub    rbx,rbp
   100009ff0:	sar    rbx,1
   100009ff3:	cmp    rbx,0x104
   100009ffa:	jae    0x10000a039
   100009ffc:	lea    r8d,[rbx+rbx*1]
   10000a000:	lea    rcx,[rsp+0x20]
   10000a005:	mov    rdx,rbp
   10000a008:	call   0x10001f75c
   10000a00d:	add    rbx,rbx
   10000a010:	cmp    rbx,0x208
   10000a017:	jae    0x10000a031
   10000a019:	xor    eax,eax
   10000a01b:	lea    rdx,[rsi+0x2]
   10000a01f:	lea    rcx,[rsp+0x20]
   10000a024:	mov    WORD PTR [rsp+rbx*1+0x20],ax
   10000a029:	call   QWORD PTR [rip+0xffffffffffff7049]        # 0x100001078
   10000a02f:	jmp    0x10000a04b
   10000a031:	xor    ecx,ecx
   10000a033:	call   0x100003850
   10000a038:	int3   
   10000a039:	lea    rax,[rip+0x40]        # 0x10000a080
   10000a040:	mov    DWORD PTR [rdi+0x40],0x3
   10000a047:	mov    QWORD PTR [rdi+0x48],rax
   10000a04b:	mov    rbp,QWORD PTR [rsp+0x260]
   10000a053:	mov    rbx,QWORD PTR [rsp+0x258]
   10000a05b:	mov    rsi,QWORD PTR [rsp+0x268]
   10000a063:	mov    rcx,QWORD PTR [rsp+0x230]
   10000a06b:	xor    rcx,rsp
   10000a06e:	call   0x100002610
   10000a073:	add    rsp,0x240
   10000a07a:	pop    rdi
   10000a07b:	ret    
   10000a07c:	nop
   10000a07d:	nop
   10000a07e:	nop
   10000a07f:	nop
   10000a080:	push   rdi
   10000a081:	add    BYTE PTR [rdx+0x0],dh
   10000a084:	outs   dx,DWORD PTR ds:[rsi]
   10000a085:	add    BYTE PTR [rsi+0x0],ch
   10000a088:	add    BYTE PTR [eax],ah
   10000a08b:	add    BYTE PTR [rbx+0x0],dh
   10000a08e:	jns    0x10000a090
   10000a090:	outs   dx,BYTE PTR ds:[rsi]
   10000a091:	add    BYTE PTR [rax+rax*1+0x61],dh
   10000a095:	add    BYTE PTR [rax+0x0],bh
   10000a098:	add    BYTE PTR cs:[rax],ah
   10000a09b:	add    BYTE PTR [rbp+0x0],dl
   10000a09e:	jae    0x10000a0a0
   10000a0a0:	add    BYTE PTR gs:[rdx],bh
   10000a0a3:	add    BYTE PTR [rax],ah
   10000a0a5:	add    BYTE PTR [rip+0x20005600],ch        # 0x12000f6ab
   10000a0ab:	add    BYTE PTR [rdx],ah
   10000a0ad:	add    BYTE PTR [rsi+0x0],dh
   10000a0b0:	(bad)  
   10000a0b1:	add    BYTE PTR [rdx+0x0],dh
   10000a0b4:	imul   eax,DWORD PTR [rax],0x620061
   10000a0ba:	ins    BYTE PTR es:[rdi],dx
   10000a0bb:	add    BYTE PTR [rbp+0x0],ah
   10000a0be:	cmp    eax,0x61007600
   10000a0c3:	add    BYTE PTR [rax+rax*1+0x75],ch
   10000a0c7:	add    BYTE PTR [rbp+0x0],ah
   10000a0ca:	and    al,BYTE PTR [rax]
   10000a0cc:	add    BYTE PTR [rax],al
   10000a0ce:	nop
   10000a0cf:	nop
   10000a0d0:	nop
   10000a0d1:	nop
   10000a0d2:	nop
   10000a0d3:	nop
   10000a0d4:	nop
   10000a0d5:	nop
   10000a0d6:	nop
   10000a0d7:	nop
   10000a0d8:	nop
   10000a0d9:	nop
   10000a0da:	nop
   10000a0db:	nop
   10000a0dc:	nop
   10000a0dd:	nop
   10000a0de:	nop
   10000a0df:	nop
   10000a0e0:	sub    rsp,0x28
   10000a0e4:	cmp    DWORD PTR [rcx+0x34],0x0
   10000a0e8:	jge    0x10000a0fc
   10000a0ea:	mov    rax,QWORD PTR [rcx+0x10]
   10000a0ee:	cmp    DWORD PTR [rax+0x8],0x2
   10000a0f2:	jne    0x10000a0fc
   10000a0f4:	mov    rax,QWORD PTR [rax]
   10000a0f7:	movzx  ecx,WORD PTR [rax]
   10000a0fa:	jmp    0x10000a0fe
   10000a0fc:	xor    ecx,ecx
   10000a0fe:	movzx  edx,cx
   10000a101:	mov    ecx,0x42e3
   10000a106:	call   0x1000182d0
   10000a10b:	call   QWORD PTR [rip+0xffffffffffff7af7]        # 0x100001c08
   10000a111:	xor    edx,edx
   10000a113:	mov    rcx,rax
   10000a116:	call   QWORD PTR [rip+0xffffffffffff77b4]        # 0x1000018d0
   10000a11c:	call   QWORD PTR [rip+0xffffffffffff7ae6]        # 0x100001c08
   10000a122:	xor    edx,edx
   10000a124:	mov    rcx,rax
   10000a127:	call   QWORD PTR [rip+0xffffffffffff779b]        # 0x1000018c8
   10000a12d:	call   QWORD PTR [rip+0xffffffffffff7ad5]        # 0x100001c08
   10000a133:	mov    rcx,rax
   10000a136:	call   QWORD PTR [rip+0xffffffffffff7784]        # 0x1000018c0
   10000a13c:	mov    r11,QWORD PTR [rip+0x2e7cd]        # 0x100038910
   10000a143:	xor    ecx,ecx
   10000a145:	mov    DWORD PTR [r11+0x7fa8],0x0
   10000a150:	add    rsp,0x28
   10000a154:	rex.W jmp QWORD PTR [rip+0xffffffffffff79dd]        # 0x100001b38
   10000a15b:	nop
   10000a15c:	nop
   10000a15d:	nop
   10000a15e:	nop
   10000a15f:	nop
   10000a160:	nop
   10000a161:	nop
   10000a162:	nop
   10000a163:	nop
   10000a164:	nop
   10000a165:	nop
   10000a166:	nop
   10000a167:	nop
   10000a168:	nop
   10000a169:	nop
   10000a16a:	nop
   10000a16b:	nop
   10000a16c:	nop
   10000a16d:	nop
   10000a16e:	nop
   10000a16f:	nop
   10000a170:	mov    rax,QWORD PTR [rip+0x2e799]        # 0x100038910
   10000a177:	mov    edx,DWORD PTR [rcx+0x18]
   10000a17a:	mov    DWORD PTR [rax+0x9434],edx
   10000a180:	mov    rax,QWORD PTR [rip+0x2e789]        # 0x100038910
   10000a187:	or     DWORD PTR [rax+0x943c],0x40
   10000a18e:	ret    
   10000a18f:	nop
   10000a190:	nop
   10000a191:	nop
   10000a192:	nop
   10000a193:	nop
   10000a194:	nop
   10000a195:	nop
   10000a196:	nop
   10000a197:	nop
   10000a198:	nop
   10000a199:	nop
   10000a19a:	nop
   10000a19b:	nop
   10000a19c:	nop
   10000a19d:	nop
   10000a19e:	nop
   10000a19f:	nop
   10000a1a0:	mov    rax,QWORD PTR [rip+0x2e769]        # 0x100038910
   10000a1a7:	or     DWORD PTR [rax+0x943c],0x2
   10000a1ae:	ret    
   10000a1af:	nop
   10000a1b0:	nop
   10000a1b1:	nop
   10000a1b2:	nop
   10000a1b3:	nop
   10000a1b4:	nop
   10000a1b5:	nop
   10000a1b6:	nop
   10000a1b7:	nop
   10000a1b8:	nop
   10000a1b9:	nop
   10000a1ba:	nop
   10000a1bb:	nop
   10000a1bc:	nop
   10000a1bd:	nop
   10000a1be:	nop
   10000a1bf:	nop
   10000a1c0:	mov    rax,QWORD PTR [rip+0x2e749]        # 0x100038910
   10000a1c7:	mov    DWORD PTR [rax+0x7fa8],0x0
   10000a1d1:	jmp    0x100008c40
   10000a1d6:	nop
   10000a1d7:	nop
   10000a1d8:	nop
   10000a1d9:	nop
   10000a1da:	nop
   10000a1db:	nop
   10000a1dc:	nop
   10000a1dd:	nop
   10000a1de:	nop
   10000a1df:	nop
   10000a1e0:	mov    rax,QWORD PTR [rip+0x2e729]        # 0x100038910
   10000a1e7:	mov    DWORD PTR [rax+0x49c4],0x1
   10000a1f1:	ret    
   10000a1f2:	nop
   10000a1f3:	nop
   10000a1f4:	nop
   10000a1f5:	nop
   10000a1f6:	nop
   10000a1f7:	nop
   10000a1f8:	nop
   10000a1f9:	nop
   10000a1fa:	nop
   10000a1fb:	nop
   10000a1fc:	nop
   10000a1fd:	nop
   10000a1fe:	nop
   10000a1ff:	nop
   10000a200:	mov    rax,QWORD PTR [rip+0x2e709]        # 0x100038910
   10000a207:	mov    DWORD PTR [rax+0x49c0],0x1
   10000a211:	ret    
   10000a212:	nop
   10000a213:	nop
   10000a214:	nop
   10000a215:	nop
   10000a216:	nop
   10000a217:	nop
   10000a218:	nop
   10000a219:	nop
   10000a21a:	nop
   10000a21b:	nop
   10000a21c:	nop
   10000a21d:	nop
   10000a21e:	nop
   10000a21f:	nop
   10000a220:	cmp    r9d,0x1
   10000a224:	sete   r9b
   10000a228:	cmp    edx,0x1
   10000a22b:	sete   dl
   10000a22e:	rex.W jmp QWORD PTR [rip+0xffffffffffff7683]        # 0x1000018b8
   10000a235:	nop
   10000a236:	nop
   10000a237:	nop
   10000a238:	nop
   10000a239:	nop
   10000a23a:	nop
   10000a23b:	nop
   10000a23c:	nop
   10000a23d:	nop
   10000a23e:	nop
   10000a23f:	nop
   10000a240:	sub    rsp,0x28
   10000a244:	mov    rax,QWORD PTR [rip+0x2e6c5]        # 0x100038910
   10000a24b:	cmp    DWORD PTR [rax+0x49d4],0x0
   10000a252:	lea    rcx,[rax+0x7fc0]
   10000a259:	je     0x10000a262
   10000a25b:	call   0x10000cc10
   10000a260:	jmp    0x10000a278
   10000a262:	cmp    WORD PTR [rip+0x22096],0x0        # 0x10002c300
   10000a26a:	je     0x10000a273
   10000a26c:	call   0x10000c820
   10000a271:	jmp    0x10000a278
   10000a273:	call   0x10000c5e0
   10000a278:	mov    rax,QWORD PTR [rip+0x2e691]        # 0x100038910
   10000a27f:	mov    rcx,QWORD PTR [rax+0x3ce0]
   10000a286:	mov    QWORD PTR [rax+0x3cd8],rcx
   10000a28d:	mov    rax,QWORD PTR [rip+0x2e67c]        # 0x100038910
   10000a294:	mov    ecx,DWORD PTR [rax+0x3ce8]
   10000a29a:	mov    DWORD PTR [rax+0x3cd4],ecx
   10000a2a0:	mov    rax,QWORD PTR [rip+0xffffffffffff7cd9]        # 0x100001f80
   10000a2a7:	lea    rcx,[rip+0xffffffffffffff72]        # 0x10000a220
   10000a2ae:	mov    QWORD PTR [rax],rcx
   10000a2b1:	call   QWORD PTR [rip+0xffffffffffff7951]        # 0x100001c08
   10000a2b7:	mov    rdx,QWORD PTR [rax]
   10000a2ba:	mov    rcx,rax
   10000a2bd:	call   QWORD PTR [rdx+0x38]
   10000a2c0:	test   rax,rax
   10000a2c3:	je     0x10000a2d6
   10000a2c5:	call   QWORD PTR [rip+0xffffffffffff793d]        # 0x100001c08
   10000a2cb:	mov    rcx,rax
   10000a2ce:	mov    rdx,QWORD PTR [rax]
   10000a2d1:	call   QWORD PTR [rdx+0x40]
   10000a2d4:	jmp    0x10000a2e5
   10000a2d6:	call   QWORD PTR [rip+0xffffffffffff792c]        # 0x100001c08
   10000a2dc:	mov    rcx,rax
   10000a2df:	call   QWORD PTR [rip+0xffffffffffff75cb]        # 0x1000018b0
   10000a2e5:	call   QWORD PTR [rip+0xffffffffffff791d]        # 0x100001c08
   10000a2eb:	mov    rcx,rax
   10000a2ee:	mov    rdx,QWORD PTR [rax]
   10000a2f1:	call   QWORD PTR [rdx+0x30]
   10000a2f4:	test   al,al
   10000a2f6:	jne    0x10000a2fd
   10000a2f8:	call   0x100007100
   10000a2fd:	add    rsp,0x28
   10000a301:	ret    
   10000a302:	nop
   10000a303:	nop
   10000a304:	nop
   10000a305:	nop
   10000a306:	nop
   10000a307:	nop
   10000a308:	nop
   10000a309:	nop
   10000a30a:	nop
   10000a30b:	nop
   10000a30c:	nop
   10000a30d:	nop
   10000a30e:	nop
   10000a30f:	nop
   10000a310:	mov    r11,rsp
   10000a313:	sub    rsp,0xc8
   10000a31a:	mov    rax,QWORD PTR [rip+0x1eecf]        # 0x1000291f0
   10000a321:	xor    rax,rsp
   10000a324:	mov    QWORD PTR [rsp+0xb0],rax
   10000a32c:	mov    rax,QWORD PTR [rip+0xffffffffffff7c65]        # 0x100001f98
   10000a333:	cmp    DWORD PTR [rax],0x1
   10000a336:	jne    0x10000a3b3
   10000a338:	mov    rcx,QWORD PTR [rip+0xffffffffffff7cd1]        # 0x100002010
   10000a33f:	mov    QWORD PTR [r11+0x8],rbx
   10000a343:	lea    rdx,[rsp+0x30]
   10000a348:	mov    QWORD PTR [r11-0x8],rdi
   10000a34c:	call   QWORD PTR [rip+0xffffffffffff7cb6]        # 0x100002008
   10000a352:	mov    r11,QWORD PTR [rip+0xffffffffffff7c87]        # 0x100001fe0
   10000a359:	movzx  edi,WORD PTR [r11+0x18]
   10000a35e:	xor    ebx,ebx
   10000a360:	cmp    bx,di
   10000a363:	jae    0x10000a3a3
   10000a365:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   10000a370:	lea    rdx,[rsp+0x20]
   10000a375:	lea    rcx,[rsp+0x30]
   10000a37a:	movzx  r8d,bx
   10000a37e:	call   QWORD PTR [rip+0xffffffffffff791c]        # 0x100001ca0
   10000a384:	movzx  edx,bx
   10000a387:	mov    ecx,0x4301
   10000a38c:	mov    r9,QWORD PTR [rax+0x8]
   10000a390:	mov    r8d,0x10
   10000a396:	call   0x1000182d0
   10000a39b:	inc    bx
   10000a39e:	cmp    bx,di
   10000a3a1:	jb     0x10000a370
   10000a3a3:	mov    rbx,QWORD PTR [rsp+0xd0]
   10000a3ab:	mov    rdi,QWORD PTR [rsp+0xc0]
   10000a3b3:	mov    rax,QWORD PTR [rip+0x2e556]        # 0x100038910
   10000a3ba:	mov    r8d,DWORD PTR [rax+0x7ac4]
   10000a3c1:	mov    eax,DWORD PTR [rax+0x7aa0]
   10000a3c7:	shl    r8,0x20
   10000a3cb:	or     r8,rax
   10000a3ce:	je     0x10000a3df
   10000a3d0:	mov    edx,0x10
   10000a3d5:	mov    ecx,0x4303
   10000a3da:	call   0x1000182d0
   10000a3df:	mov    rcx,QWORD PTR [rsp+0xb0]
   10000a3e7:	xor    rcx,rsp
   10000a3ea:	call   0x100002610
   10000a3ef:	add    rsp,0xc8
   10000a3f6:	ret    
   10000a3f7:	nop
   10000a3f8:	nop
   10000a3f9:	nop
   10000a3fa:	nop
   10000a3fb:	nop
   10000a3fc:	nop
   10000a3fd:	nop
   10000a3fe:	nop
   10000a3ff:	nop
   10000a400:	push   rbx
   10000a402:	sub    rsp,0x490
   10000a409:	mov    rax,QWORD PTR [rip+0x1ede0]        # 0x1000291f0
   10000a410:	xor    rax,rsp
   10000a413:	mov    QWORD PTR [rsp+0x480],rax
   10000a41b:	call   QWORD PTR [rip+0xffffffffffff6cf7]        # 0x100001118
   10000a421:	lea    r8,[rsp+0x60]
   10000a426:	mov    r9d,0x104
   10000a42c:	mov    rcx,rax
   10000a42f:	xor    edx,edx
   10000a431:	call   QWORD PTR [rip+0x1ebf1]        # 0x100029028
   10000a437:	mov    ebx,eax
   10000a439:	mov    eax,eax
   10000a43b:	add    rax,rax
   10000a43e:	cmp    rax,0x20a
   10000a444:	jae    0x10000a608
   10000a44a:	mov    QWORD PTR [rsp+0x4a0],rdi
   10000a452:	xor    edi,edi
   10000a454:	lea    rcx,[rsp+0x60]
   10000a459:	lea    r8d,[rdi+0x1]
   10000a45d:	xor    edx,edx
   10000a45f:	mov    WORD PTR [rsp+rax*1+0x60],di
   10000a464:	call   QWORD PTR [rip+0xffffffffffff743e]        # 0x1000018a8
   10000a46a:	test   eax,eax
   10000a46c:	je     0x10000a5c3
   10000a472:	mov    QWORD PTR [rsp+0x40],rdi
   10000a477:	mov    QWORD PTR [rsp+0x38],rdi
   10000a47c:	mov    QWORD PTR [rsp+0x30],rdi
   10000a481:	lea    r9,[rsp+0x270]
   10000a489:	lea    r8d,[rdi+0x4]
   10000a48d:	lea    rdx,[rsp+0x50]
   10000a492:	lea    rcx,[rsp+0x60]
   10000a497:	mov    QWORD PTR [rsp+0x28],rdi
   10000a49c:	mov    QWORD PTR [rsp+0x20],0x101
   10000a4a5:	call   QWORD PTR [rip+0xffffffffffff6f8d]        # 0x100001438
   10000a4ab:	call   QWORD PTR [rip+0xffffffffffff7787]        # 0x100001c38
   10000a4b1:	lea    r8,[rip+0xffffffffffff8f28]        # 0x1000033e0
   10000a4b8:	mov    r9,rax
   10000a4bb:	lea    rax,[rip+0xffffffffffff8e66]        # 0x100003328
   10000a4c2:	lea    rcx,[rsp+0x60]
   10000a4c7:	mov    QWORD PTR [rsp+0x30],rax
   10000a4cc:	lea    rax,[rsp+0x270]
   10000a4d4:	mov    edx,0x105
   10000a4d9:	mov    QWORD PTR [rsp+0x28],rax
   10000a4de:	lea    rax,[rsp+0x50]
   10000a4e3:	mov    QWORD PTR [rsp+0x20],rax
   10000a4e8:	call   0x100005bb0
   10000a4ed:	lea    rdx,[rip+0xffffffffffff8efc]        # 0x1000033f0
   10000a4f4:	mov    ecx,eax
   10000a4f6:	call   0x100015f20
   10000a4fb:	or     rdi,0xffffffffffffffff
   10000a4ff:	lea    r11,[rsp+0x60]
   10000a504:	mov    rbx,rdi
   10000a507:	nop    WORD PTR [rax+rax*1+0x0]
   10000a510:	inc    rbx
   10000a513:	cmp    WORD PTR [r11+rbx*2],0x0
   10000a519:	jne    0x10000a510
   10000a51b:	xor    edx,edx
   10000a51d:	lea    rcx,[rsp+0x60]
   10000a522:	lea    r8d,[rdx+0x1]
   10000a526:	call   QWORD PTR [rip+0xffffffffffff737c]        # 0x1000018a8
   10000a52c:	test   eax,eax
   10000a52e:	je     0x10000a5c3
   10000a534:	call   QWORD PTR [rip+0xffffffffffff76fe]        # 0x100001c38
   10000a53a:	lea    r8,[rip+0xffffffffffff8e9f]        # 0x1000033e0
   10000a541:	lea    rcx,[rsp+0x60]
   10000a546:	mov    r9,rax
   10000a549:	lea    rax,[rip+0xffffffffffff8df0]        # 0x100003340
   10000a550:	mov    edx,0x105
   10000a555:	mov    QWORD PTR [rsp+0x30],rax
   10000a55a:	lea    rax,[rsp+0x270]
   10000a562:	mov    QWORD PTR [rsp+0x28],rax
   10000a567:	lea    rax,[rsp+0x50]
   10000a56c:	mov    QWORD PTR [rsp+0x20],rax
   10000a571:	call   0x100005bb0
   10000a576:	lea    rdx,[rip+0xffffffffffff8e73]        # 0x1000033f0
   10000a57d:	mov    ecx,eax
   10000a57f:	call   0x100015f20
   10000a584:	lea    r11,[rsp+0x60]
   10000a589:	nop    DWORD PTR [rax+0x0]
   10000a590:	inc    rdi
   10000a593:	cmp    WORD PTR [r11+rdi*2],0x0
   10000a599:	jne    0x10000a590
   10000a59b:	xor    edx,edx
   10000a59d:	lea    rcx,[rsp+0x60]
   10000a5a2:	mov    ebx,edi
   10000a5a4:	lea    r8d,[rdx+0x1]
   10000a5a8:	call   QWORD PTR [rip+0xffffffffffff72fa]        # 0x1000018a8
   10000a5ae:	test   eax,eax
   10000a5b0:	je     0x10000a5c3
   10000a5b2:	mov    rax,QWORD PTR [rip+0x2e357]        # 0x100038910
   10000a5b9:	mov    DWORD PTR [rax+0x49e8],0x1
   10000a5c3:	mov    rax,QWORD PTR [rip+0x2e346]        # 0x100038910
   10000a5ca:	mov    rdi,QWORD PTR [rsp+0x4a0]
   10000a5d2:	cmp    DWORD PTR [rax+0x49e8],0x0
   10000a5d9:	jne    0x10000a5ef
   10000a5db:	mov    edx,ebx
   10000a5dd:	lea    r8,[rsp+0x60]
   10000a5e2:	mov    ecx,0x8144
   10000a5e7:	add    rdx,rdx
   10000a5ea:	call   0x1000182d0
   10000a5ef:	mov    rcx,QWORD PTR [rsp+0x480]
   10000a5f7:	xor    rcx,rsp
   10000a5fa:	call   0x100002610
   10000a5ff:	add    rsp,0x490
   10000a606:	pop    rbx
   10000a607:	ret    
   10000a608:	xor    ecx,ecx
   10000a60a:	call   0x100003850
   10000a60f:	int3   
   10000a610:	nop
   10000a611:	nop
   10000a612:	nop
   10000a613:	nop
   10000a614:	nop
   10000a615:	nop
   10000a616:	nop
   10000a617:	nop
   10000a618:	nop
   10000a619:	nop
   10000a61a:	nop
   10000a61b:	nop
   10000a61c:	nop
   10000a61d:	nop
   10000a61e:	nop
   10000a61f:	nop
   10000a620:	mov    QWORD PTR [rsp+0x8],rbx
   10000a625:	push   rdi
   10000a626:	mov    eax,0x2070
   10000a62b:	call   0x100002630
   10000a630:	sub    rsp,rax
   10000a633:	mov    rax,QWORD PTR [rip+0x1ebb6]        # 0x1000291f0
   10000a63a:	xor    rax,rsp
   10000a63d:	mov    QWORD PTR [rsp+0x2060],rax
   10000a645:	mov    rax,QWORD PTR [rip+0x2e2c4]        # 0x100038910
   10000a64c:	mov    edi,0x2
   10000a651:	cmp    BYTE PTR [rax+0x7ade],0x0
   10000a658:	je     0x10000a6d2
   10000a65a:	call   QWORD PTR [rip+0xffffffffffff6ab8]        # 0x100001118
   10000a660:	lea    edx,[rdi+0x7e]
   10000a663:	mov    rcx,rax
   10000a666:	call   QWORD PTR [rip+0xffffffffffff6a14]        # 0x100001080
   10000a66c:	test   eax,eax
   10000a66e:	je     0x10000a685
   10000a670:	call   QWORD PTR [rip+0xffffffffffff6a12]        # 0x100001088
   10000a676:	mov    edx,edi
   10000a678:	mov    rcx,rax
   10000a67b:	call   QWORD PTR [rip+0xffffffffffff6adf]        # 0x100001160
   10000a681:	test   eax,eax
   10000a683:	jne    0x10000a6c6
   10000a685:	call   QWORD PTR [rip+0xffffffffffff6aa5]        # 0x100001130
   10000a68b:	lea    rdx,[rsp+0x60]
   10000a690:	xor    r9d,r9d
   10000a693:	xor    r8d,r8d
   10000a696:	mov    ecx,eax
   10000a698:	call   QWORD PTR [rip+0xffffffffffff74fa]        # 0x100001b98
   10000a69e:	lea    rdx,[rip+0x10b]        # 0x10000a7b0
   10000a6a5:	mov    ecx,0x429d
   10000a6aa:	mov    r8,rax
   10000a6ad:	call   0x1000182d0
   10000a6b2:	mov    edx,0x429d
   10000a6b7:	mov    r8d,0x42a
   10000a6bd:	or     ecx,0xffffffff
   10000a6c0:	call   QWORD PTR [rip+0xffffffffffff74ea]        # 0x100001bb0
   10000a6c6:	mov    ebx,0x80
   10000a6cb:	mov    ecx,0x430b
   10000a6d0:	jmp    0x10000a749
   10000a6d2:	call   QWORD PTR [rip+0xffffffffffff6a40]        # 0x100001118
   10000a6d8:	mov    rcx,rax
   10000a6db:	call   QWORD PTR [rip+0xffffffffffff69af]        # 0x100001090
   10000a6e1:	mov    ebx,eax
   10000a6e3:	cmp    eax,0x100
   10000a6e8:	jne    0x10000a736
   10000a6ea:	mov    rcx,QWORD PTR [rip+0xffffffffffff732f]        # 0x100001a20
   10000a6f1:	mov    ecx,DWORD PTR [rcx]
   10000a6f3:	cmp    ecx,0x1
   10000a6f6:	jne    0x10000a744
   10000a6f8:	call   QWORD PTR [rip+0xffffffffffff6a1a]        # 0x100001118
   10000a6fe:	lea    edx,[rbx-0x80]
   10000a701:	mov    rcx,rax
   10000a704:	call   QWORD PTR [rip+0xffffffffffff6976]        # 0x100001080
   10000a70a:	test   eax,eax
   10000a70c:	je     0x10000a723
   10000a70e:	call   QWORD PTR [rip+0xffffffffffff6974]        # 0x100001088
   10000a714:	mov    edx,edi
   10000a716:	mov    rcx,rax
   10000a719:	call   QWORD PTR [rip+0xffffffffffff6a41]        # 0x100001160
   10000a71f:	test   eax,eax
   10000a721:	jne    0x10000a6c6
   10000a723:	call   QWORD PTR [rip+0xffffffffffff6a07]        # 0x100001130
   10000a729:	lea    rdx,[rsp+0x1060]
   10000a731:	jmp    0x10000a690
   10000a736:	cmp    eax,0x80
   10000a73b:	jne    0x10000a744
   10000a73d:	mov    ecx,0x430b
   10000a742:	jmp    0x10000a749
   10000a744:	mov    ecx,0x430a
   10000a749:	call   0x1000182d0
   10000a74e:	lea    rcx,[rsp+0x20]
   10000a753:	mov    DWORD PTR [rsp+0x20],0x40
   10000a75b:	call   QWORD PTR [rip+0xffffffffffff6937]        # 0x100001098
   10000a761:	mov    rdx,QWORD PTR [rsp+0x28]
   10000a766:	mov    ecx,0xc2ef
   10000a76b:	shr    rdx,0x14
   10000a76f:	call   0x1000182d0
   10000a774:	mov    rax,QWORD PTR [rip+0xffffffffffff72fd]        # 0x100001a78
   10000a77b:	xor    r11d,r11d
   10000a77e:	cmp    ebx,0x80
   10000a784:	cmove  r11d,edi
   10000a788:	mov    DWORD PTR [rax],r11d
   10000a78b:	mov    rcx,QWORD PTR [rsp+0x2060]
   10000a793:	xor    rcx,rsp
   10000a796:	call   0x100002610
   10000a79b:	mov    rbx,QWORD PTR [rsp+0x2080]
   10000a7a3:	add    rsp,0x2070
   10000a7aa:	pop    rdi
   10000a7ab:	ret    
   10000a7ac:	nop
   10000a7ad:	nop
   10000a7ae:	nop
   10000a7af:	nop
   10000a7b0:	push   rbx
   10000a7b1:	add    BYTE PTR [rax+rax*1+0x61],dh
   10000a7b5:	add    BYTE PTR [rdx+0x0],dh
   10000a7b8:	je     0x10000a7ba
   10000a7ba:	push   rbp
   10000a7bb:	add    BYTE PTR [rax+0x0],dh
   10000a7be:	cmp    al,BYTE PTR [rax]
   10000a7c0:	cmp    al,BYTE PTR [rax]
   10000a7c2:	rex.X add BYTE PTR [rdi+0x0],bpl
   10000a7c6:	outs   dx,DWORD PTR ds:[rsi]
   10000a7c7:	add    BYTE PTR [rbx+0x0],dh
   10000a7ca:	je     0x10000a7cc
   10000a7cc:	push   rax
   10000a7cd:	add    BYTE PTR [rdx+0x0],dh
   10000a7d0:	imul   eax,DWORD PTR [rax],0x72006f
   10000a7d6:	imul   eax,DWORD PTR [rax],0x790074
   10000a7dc:	add    BYTE PTR [rax],al
   10000a7de:	nop
   10000a7df:	nop
   10000a7e0:	nop
   10000a7e1:	nop
   10000a7e2:	nop
   10000a7e3:	nop
   10000a7e4:	nop
   10000a7e5:	nop
   10000a7e6:	nop
   10000a7e7:	nop
   10000a7e8:	nop
   10000a7e9:	nop
   10000a7ea:	nop
   10000a7eb:	nop
   10000a7ec:	nop
   10000a7ed:	nop
   10000a7ee:	nop
   10000a7ef:	nop
   10000a7f0:	sub    rsp,0x28
   10000a7f4:	call   QWORD PTR [rip+0xffffffffffff6e46]        # 0x100001640
   10000a7fa:	add    rsp,0x28
   10000a7fe:	rex.W jmp QWORD PTR [rip+0xffffffffffff709b]        # 0x1000018a0
   10000a805:	nop
   10000a806:	nop
   10000a807:	nop
   10000a808:	nop
   10000a809:	nop
   10000a80a:	nop
   10000a80b:	nop
   10000a80c:	nop
   10000a80d:	nop
   10000a80e:	nop
   10000a80f:	nop
   10000a810:	rex.W jmp QWORD PTR [rip+0xffffffffffff6e21]        # 0x100001638
   10000a817:	nop
   10000a818:	nop
   10000a819:	nop
   10000a81a:	nop
   10000a81b:	nop
   10000a81c:	nop
   10000a81d:	nop
   10000a81e:	nop
   10000a81f:	nop
   10000a820:	sub    rsp,0x28
   10000a824:	mov    rax,QWORD PTR [rip+0x2e0e5]        # 0x100038910
   10000a82b:	mov    ecx,DWORD PTR [rax+0x7b3e]
   10000a831:	call   QWORD PTR [rip+0xffffffffffff71a1]        # 0x1000019d8
   10000a837:	xor    eax,eax
   10000a839:	add    rsp,0x28
   10000a83d:	ret    
   10000a83e:	nop
   10000a83f:	nop
   10000a840:	nop
   10000a841:	nop
   10000a842:	nop
   10000a843:	nop
   10000a844:	nop
   10000a845:	nop
   10000a846:	nop
   10000a847:	nop
   10000a848:	nop
   10000a849:	nop
   10000a84a:	nop
   10000a84b:	nop
   10000a84c:	nop
   10000a84d:	nop
   10000a84e:	nop
   10000a84f:	nop
   10000a850:	push   rbx
   10000a852:	sub    rsp,0x50
   10000a856:	mov    rdx,QWORD PTR [rip+0xffffffffffff6fb3]        # 0x100001810
   10000a85d:	mov    rcx,QWORD PTR [rip+0xffffffffffff6fa4]        # 0x100001808
   10000a864:	mov    rbx,QWORD PTR [rip+0x2e0a5]        # 0x100038910
   10000a86b:	call   QWORD PTR [rip+0xffffffffffff6dbf]        # 0x100001630
   10000a871:	lea    rcx,[rip+0x21d18]        # 0x10002c590
   10000a878:	call   QWORD PTR [rip+0xffffffffffff6f82]        # 0x100001800
   10000a87e:	lea    rcx,[rip+0x21d0b]        # 0x10002c590
   10000a885:	call   QWORD PTR [rip+0xffffffffffff6c8d]        # 0x100001518
   10000a88b:	call   QWORD PTR [rip+0xffffffffffff6d97]        # 0x100001628
   10000a891:	mov    r9,QWORD PTR [rip+0x2e078]        # 0x100038910
   10000a898:	mov    edx,DWORD PTR [rbx+0x7b3e]
   10000a89e:	mov    ecx,DWORD PTR [rbx+0x7ae4]
   10000a8a4:	lea    rax,[rip+0xffffffffffffff45]        # 0x10000a7f0
   10000a8ab:	mov    QWORD PTR [rsp+0x38],rax
   10000a8b0:	mov    rax,QWORD PTR [rip+0xffffffffffff6fe1]        # 0x100001898
   10000a8b7:	lea    r11,[rip+0xffffffffffffff52]        # 0x10000a810
   10000a8be:	lea    r8,[rsp+0x30]
   10000a8c3:	add    r9,0x4a80
   10000a8ca:	mov    QWORD PTR [rsp+0x30],r11
   10000a8cf:	mov    QWORD PTR [rsp+0x40],rax
   10000a8d4:	call   QWORD PTR [rip+0xffffffffffff6f1e]        # 0x1000017f8
   10000a8da:	call   QWORD PTR [rip+0xffffffffffff6f10]        # 0x1000017f0
   10000a8e0:	mov    ecx,DWORD PTR [rbx+0x7b3e]
   10000a8e6:	mov    rdx,rax
   10000a8e9:	mov    rax,QWORD PTR [rip+0x21888]        # 0x10002c178
   10000a8f0:	lea    r8,[rip+0x1e9c9]        # 0x1000292c0
   10000a8f7:	mov    r9d,0x7f
   10000a8fd:	mov    QWORD PTR [rsp+0x20],rax
   10000a902:	call   QWORD PTR [rip+0xffffffffffff6d18]        # 0x100001620
   10000a908:	add    rsp,0x50
   10000a90c:	pop    rbx
   10000a90d:	rex.W jmp QWORD PTR [rip+0xffffffffffff7394]        # 0x100001ca8
   10000a914:	nop
   10000a915:	nop
   10000a916:	nop
   10000a917:	nop
   10000a918:	nop
   10000a919:	nop
   10000a91a:	nop
   10000a91b:	nop
   10000a91c:	nop
   10000a91d:	nop
   10000a91e:	nop
   10000a91f:	nop
   10000a920:	push   rbx
   10000a922:	sub    rsp,0x20
   10000a926:	call   0x10000e9e0
   10000a92b:	mov    rcx,rax
   10000a92e:	mov    rbx,rax
   10000a931:	call   QWORD PTR [rip+0xffffffffffff6eb1]        # 0x1000017e8
   10000a937:	test   eax,eax
   10000a939:	jne    0x10000a944
   10000a93b:	mov    rcx,rbx
   10000a93e:	call   QWORD PTR [rip+0xffffffffffff6cd4]        # 0x100001618
   10000a944:	add    rsp,0x20
   10000a948:	pop    rbx
   10000a949:	ret    
   10000a94a:	nop
   10000a94b:	nop
   10000a94c:	nop
   10000a94d:	nop
   10000a94e:	nop
   10000a94f:	nop
   10000a950:	mov    QWORD PTR [rsp+0x8],rbx
   10000a955:	mov    QWORD PTR [rsp+0x10],rsi
   10000a95a:	mov    QWORD PTR [rsp+0x18],rdi
   10000a95f:	mov    QWORD PTR [rsp+0x20],r14
   10000a964:	push   rbp
   10000a965:	lea    rbp,[rsp-0x380]
   10000a96d:	sub    rsp,0x480
   10000a974:	mov    rax,QWORD PTR [rip+0x1e875]        # 0x1000291f0
   10000a97b:	xor    rax,rsp
   10000a97e:	mov    QWORD PTR [rbp+0x370],rax
   10000a985:	mov    rcx,QWORD PTR [rip+0x2df84]        # 0x100038910
   10000a98c:	add    rcx,0x4a90
   10000a993:	call   QWORD PTR [rip+0xffffffffffff6c77]        # 0x100001610
   10000a999:	mov    r11,QWORD PTR [rip+0x2df70]        # 0x100038910
   10000a9a0:	mov    eax,DWORD PTR [r11+0x943c]
   10000a9a7:	test   al,0x1
   10000a9a9:	jne    0x10000a9bd
   10000a9ab:	test   al,0x2
   10000a9ad:	jne    0x10000a9bd
   10000a9af:	cmp    DWORD PTR [r11+0x49d4],0x0
   10000a9b7:	jne    0x10000a9bd
   10000a9b9:	mov    cl,0x1
   10000a9bb:	jmp    0x10000a9bf
   10000a9bd:	xor    cl,cl
   10000a9bf:	mov    rax,QWORD PTR [rip+0xffffffffffff714a]        # 0x100001b10
   10000a9c6:	mov    BYTE PTR [rax],cl
   10000a9c8:	mov    rax,QWORD PTR [rip+0xffffffffffff7059]        # 0x100001a28
   10000a9cf:	lea    rcx,[rip+0xffffffffffffff4a]        # 0x10000a920
   10000a9d6:	mov    QWORD PTR [rax],rcx
   10000a9d9:	mov    rax,QWORD PTR [rip+0xffffffffffff7050]        # 0x100001a30
   10000a9e0:	lea    rcx,[rip+0xfffffffffffffe39]        # 0x10000a820
   10000a9e7:	mov    QWORD PTR [rax],rcx
   10000a9ea:	call   0x10000bb70
   10000a9ef:	call   0x10000a620
   10000a9f4:	call   QWORD PTR [rip+0xffffffffffff72b6]        # 0x100001cb0
   10000a9fa:	call   QWORD PTR [rip+0xffffffffffff72b8]        # 0x100001cb8
   10000aa00:	call   QWORD PTR [rip+0xffffffffffff72ba]        # 0x100001cc0
   10000aa06:	mov    r11,QWORD PTR [rip+0x1e6bb]        # 0x1000290c8
   10000aa0d:	test   BYTE PTR [r11+0x1c9],0x1
   10000aa15:	je     0x10000aa2f
   10000aa17:	mov    rax,QWORD PTR [rip+0xffffffffffff750a]        # 0x100001f28
   10000aa1e:	mov    rcx,QWORD PTR [rip+0xffffffffffff6dbb]        # 0x1000017e0
   10000aa25:	mov    QWORD PTR [rax],rcx
   10000aa28:	mov    r11,QWORD PTR [rip+0x1e699]        # 0x1000290c8
   10000aa2f:	mov    rax,QWORD PTR [rip+0xffffffffffff70ea]        # 0x100001b20
   10000aa36:	mov    rdx,QWORD PTR [rip+0xffffffffffff7583]        # 0x100001fc0
   10000aa3d:	mov    rcx,QWORD PTR [rax]
   10000aa40:	mov    eax,DWORD PTR [rcx+0x10]
   10000aa43:	test   eax,eax
   10000aa45:	je     0x10000aa52
   10000aa47:	cmp    eax,0x3
   10000aa4a:	je     0x10000aa52
   10000aa4c:	cmp    DWORD PTR [rcx+0x14],0x2
   10000aa50:	jne    0x10000aa67
   10000aa52:	test   BYTE PTR [r11+0x1c8],0x40
   10000aa5a:	jne    0x10000aa67
   10000aa5c:	mov    eax,DWORD PTR [rdx]
   10000aa5e:	mov    ecx,eax
   10000aa60:	xor    ecx,0x4
   10000aa63:	and    ecx,eax
   10000aa65:	mov    DWORD PTR [rdx],ecx
   10000aa67:	mov    rax,QWORD PTR [rip+0x2dea2]        # 0x100038910
   10000aa6e:	cmp    DWORD PTR [rax+0x49c4],0x0
   10000aa75:	je     0x10000aa7a
   10000aa77:	or     DWORD PTR [rdx],0x8
   10000aa7a:	mov    rax,QWORD PTR [rip+0xffffffffffff74e7]        # 0x100001f68
   10000aa81:	lea    rcx,[rip+0xffffffffffffc2d8]        # 0x100006d60
   10000aa88:	lea    rbx,[rsp+0x70]
   10000aa8d:	mov    QWORD PTR [rax],rcx
   10000aa90:	mov    rax,QWORD PTR [rip+0xffffffffffff7481]        # 0x100001f18
   10000aa97:	lea    rcx,[rip+0xd832]        # 0x1000182d0
   10000aa9e:	mov    QWORD PTR [rax],rcx
   10000aaa1:	mov    rax,QWORD PTR [rip+0xffffffffffff7478]        # 0x100001f20
   10000aaa8:	lea    rcx,[rip+0xd8b1]        # 0x100018360
   10000aaaf:	mov    QWORD PTR [rax],rcx
   10000aab2:	mov    rax,QWORD PTR [rip+0xffffffffffff6fdf]        # 0x100001a98
   10000aab9:	lea    rcx,[rip+0x3ed0]        # 0x10000e990
   10000aac0:	mov    QWORD PTR [rax],rcx
   10000aac3:	mov    rax,QWORD PTR [rip+0xffffffffffff7466]        # 0x100001f30
   10000aaca:	mov    rcx,QWORD PTR [rip+0xffffffffffff6cff]        # 0x1000017d0
   10000aad1:	mov    QWORD PTR [rax],rcx
   10000aad4:	mov    rax,QWORD PTR [rip+0xffffffffffff746d]        # 0x100001f48
   10000aadb:	lea    rcx,[rip+0xffffffffffff785e]        # 0x100002340
   10000aae2:	mov    QWORD PTR [rax],rcx
   10000aae5:	mov    rax,QWORD PTR [rip+0xffffffffffff7464]        # 0x100001f50
   10000aaec:	mov    rcx,QWORD PTR [rip+0xffffffffffff6ccd]        # 0x1000017c0
   10000aaf3:	mov    QWORD PTR [rax],rcx
   10000aaf6:	mov    rax,QWORD PTR [rip+0xffffffffffff7463]        # 0x100001f60
   10000aafd:	lea    rcx,[rip+0xdb4c]        # 0x100018650
   10000ab04:	mov    QWORD PTR [rax],rcx
   10000ab07:	mov    rax,QWORD PTR [rip+0xffffffffffff744a]        # 0x100001f58
   10000ab0e:	lea    rcx,[rip+0xd73b]        # 0x100018250
   10000ab15:	mov    QWORD PTR [rax],rcx
   10000ab18:	mov    rax,QWORD PTR [rip+0xffffffffffff7419]        # 0x100001f38
   10000ab1f:	mov    rcx,QWORD PTR [rip+0xffffffffffff6c92]        # 0x1000017b8
   10000ab26:	mov    QWORD PTR [rax],rcx
   10000ab29:	mov    rax,QWORD PTR [rip+0xffffffffffff7410]        # 0x100001f40
   10000ab30:	mov    rcx,QWORD PTR [rip+0xffffffffffff6c79]        # 0x1000017b0
   10000ab37:	mov    QWORD PTR [rax],rcx
   10000ab3a:	mov    rax,QWORD PTR [rip+0xffffffffffff6f4f]        # 0x100001a90
   10000ab41:	lea    rcx,[rip+0x24e8]        # 0x10000d030
   10000ab48:	mov    QWORD PTR [rax],rcx
   10000ab4b:	mov    rax,QWORD PTR [rip+0xffffffffffff6ec6]        # 0x100001a18
   10000ab52:	mov    rcx,QWORD PTR [rip+0xffffffffffff6fdf]        # 0x100001b38
   10000ab59:	mov    QWORD PTR [rax],rcx
   10000ab5c:	mov    rax,QWORD PTR [rip+0xffffffffffff73a5]        # 0x100001f08
   10000ab63:	mov    rcx,QWORD PTR [rip+0xffffffffffff6c3e]        # 0x1000017a8
   10000ab6a:	mov    QWORD PTR [rax],rcx
   10000ab6d:	mov    rax,QWORD PTR [rip+0xffffffffffff739c]        # 0x100001f10
   10000ab74:	lea    rcx,[rip+0x90e5]        # 0x100013c60
   10000ab7b:	mov    QWORD PTR [rax],rcx
   10000ab7e:	mov    edi,0x3f
   10000ab83:	mov    rcx,rbx
   10000ab86:	call   QWORD PTR [rip+0xffffffffffff713c]        # 0x100001cc8
   10000ab8c:	add    rbx,0x10
   10000ab90:	dec    edi
   10000ab92:	jns    0x10000ab83
   10000ab94:	mov    rax,QWORD PTR [rip+0x2dd75]        # 0x100038910
   10000ab9b:	xor    r14d,r14d
   10000ab9e:	movzx  edx,r14w
   10000aba2:	mov    WORD PTR [rsp+0x24],dx
   10000aba7:	cmp    DWORD PTR [rax+0x49d4],r14d
   10000abae:	jne    0x10000abde
   10000abb0:	cmp    DWORD PTR [rax+0x49d8],r14d
   10000abb7:	jne    0x10000abd5
   10000abb9:	lea    rdx,[rsp+0x24]
   10000abbe:	lea    rcx,[rsp+0x70]
   10000abc3:	call   QWORD PTR [rip+0xffffffffffff6a3f]        # 0x100001608
   10000abc9:	movzx  edx,WORD PTR [rsp+0x24]
   10000abce:	mov    rax,QWORD PTR [rip+0x2dd3b]        # 0x100038910
   10000abd5:	cmp    DWORD PTR [rax+0x49d4],r14d
   10000abdc:	je     0x10000abe6
   10000abde:	mov    WORD PTR [rsp+0x24],r14w
   10000abe4:	jmp    0x10000abfd
   10000abe6:	test   dx,dx
   10000abe9:	je     0x10000abfd
   10000abeb:	lea    rcx,[rsp+0x70]
   10000abf0:	call   QWORD PTR [rip+0xffffffffffff70da]        # 0x100001cd0
   10000abf6:	mov    rax,QWORD PTR [rip+0x2dd13]        # 0x100038910
   10000abfd:	mov    rcx,QWORD PTR [rip+0xffffffffffff6f1c]        # 0x100001b20
   10000ac04:	lea    rdi,[rax+0x7a9c]
   10000ac0b:	mov    ebx,0x1
   10000ac10:	mov    rdx,QWORD PTR [rcx]
   10000ac13:	mov    ecx,DWORD PTR [rdx+0x10]
   10000ac16:	test   ecx,ecx
   10000ac18:	je     0x10000ac6e
   10000ac1a:	cmp    ecx,0x3
   10000ac1d:	je     0x10000ac6e
   10000ac1f:	test   BYTE PTR [rax+0x943c],0x20
   10000ac26:	jne    0x10000ac6e
   10000ac28:	mov    rcx,QWORD PTR [rip+0x1e499]        # 0x1000290c8
   10000ac2f:	test   BYTE PTR [rcx+0xc9],0x20
   10000ac36:	jne    0x10000ac62
   10000ac38:	cmp    WORD PTR [rdi+0x92],r14w
   10000ac40:	je     0x10000ac6e
   10000ac42:	call   0x10000e950
   10000ac47:	test   eax,eax
   10000ac49:	je     0x10000ac67
   10000ac4b:	mov    rax,QWORD PTR [rip+0x1e476]        # 0x1000290c8
   10000ac52:	test   BYTE PTR [rax+0xc9],0x80
   10000ac59:	jne    0x10000ac67
   10000ac5b:	mov    rax,QWORD PTR [rip+0x2dcae]        # 0x100038910
   10000ac62:	mov    DWORD PTR [rax+0x2c],ebx
   10000ac65:	jmp    0x10000ac72
   10000ac67:	mov    rax,QWORD PTR [rip+0x2dca2]        # 0x100038910
   10000ac6e:	mov    DWORD PTR [rax+0x2c],r14d
   10000ac72:	mov    rax,QWORD PTR [rip+0x2dc97]        # 0x100038910
   10000ac79:	test   BYTE PTR [rax+0x943c],0x20
   10000ac80:	je     0x10000acac
   10000ac82:	xor    r9d,r9d
   10000ac85:	mov    ecx,0x1f4f
   10000ac8a:	xor    r8d,r8d
   10000ac8d:	lea    edx,[r9-0x2]
   10000ac91:	call   QWORD PTR [rip+0xffffffffffff7049]        # 0x100001ce0
   10000ac97:	xor    r9d,r9d
   10000ac9a:	mov    ecx,0x342
   10000ac9f:	lea    edx,[r9-0x2]
   10000aca3:	xor    r8d,r8d
   10000aca6:	call   QWORD PTR [rip+0xffffffffffff703c]        # 0x100001ce8
   10000acac:	mov    rax,QWORD PTR [rip+0xffffffffffff6e6d]        # 0x100001b20
   10000acb3:	mov    rcx,QWORD PTR [rax]
   10000acb6:	cmp    DWORD PTR [rcx+0x10],0x2
   10000acba:	jne    0x10000ad20
   10000acbc:	mov    rax,QWORD PTR [rip+0xffffffffffff7315]        # 0x100001fd8
   10000acc3:	cmp    QWORD PTR [rax],r14
   10000acc6:	je     0x10000ad20
   10000acc8:	xor    eax,eax
   10000acca:	lea    rcx,[rsp+0x30]
   10000accf:	mov    QWORD PTR [rsp+0x30],rax
   10000acd4:	mov    DWORD PTR [rsp+0x30],0x40
   10000acdc:	mov    QWORD PTR [rsp+0x38],rax
   10000ace1:	mov    QWORD PTR [rsp+0x40],rax
   10000ace6:	mov    QWORD PTR [rsp+0x48],rax
   10000aceb:	mov    QWORD PTR [rsp+0x50],rax
   10000acf0:	mov    QWORD PTR [rsp+0x58],rax
   10000acf5:	mov    QWORD PTR [rsp+0x60],rax
   10000acfa:	mov    QWORD PTR [rsp+0x68],rax
   10000acff:	call   QWORD PTR [rip+0xffffffffffff6393]        # 0x100001098
   10000ad05:	movabs r11,0x200000000
   10000ad0f:	cmp    QWORD PTR [rsp+0x38],r11
   10000ad14:	jb     0x10000ad20
   10000ad16:	mov    rax,QWORD PTR [rip+0xffffffffffff7293]        # 0x100001fb0
   10000ad1d:	or     DWORD PTR [rax],0x10
   10000ad20:	call   QWORD PTR [rip+0xffffffffffff68da]        # 0x100001600
   10000ad26:	mov    rcx,QWORD PTR [rip+0xffffffffffff6df3]        # 0x100001b20
   10000ad2d:	mov    r8,QWORD PTR [rip+0xffffffffffff727c]        # 0x100001fb0
   10000ad34:	mov    rdx,QWORD PTR [rcx]
   10000ad37:	mov    rcx,QWORD PTR [rip+0x1e38a]        # 0x1000290c8
   10000ad3e:	cmp    DWORD PTR [rdx+0x10],0x2
   10000ad42:	jne    0x10000ad59
   10000ad44:	test   BYTE PTR [rcx+0x68],0x4
   10000ad48:	je     0x10000ad59
   10000ad4a:	test   BYTE PTR [r8],0x10
   10000ad4e:	je     0x10000ad59
   10000ad50:	mov    esi,ebx
   10000ad52:	mov    ecx,0x350
   10000ad57:	jmp    0x10000ad82
   10000ad59:	test   DWORD PTR [r8],0x800
   10000ad60:	je     0x10000ad78
   10000ad62:	test   BYTE PTR [rcx+0x68],0x8
   10000ad66:	jne    0x10000ad78
   10000ad68:	test   eax,eax
   10000ad6a:	je     0x10000ad78
   10000ad6c:	mov    esi,0x2
   10000ad71:	mov    ecx,0x351
   10000ad76:	jmp    0x10000ad82
   10000ad78:	mov    esi,0x3
   10000ad7d:	mov    ecx,0x354
   10000ad82:	call   0x1000182d0
   10000ad87:	mov    rax,QWORD PTR [rip+0xffffffffffff7172]        # 0x100001f00
   10000ad8e:	mov    DWORD PTR [rax],esi
   10000ad90:	mov    rax,QWORD PTR [rip+0x1e331]        # 0x1000290c8
   10000ad97:	test   BYTE PTR [rax+0x65],0x8
   10000ad9b:	je     0x10000adaa
   10000ad9d:	mov    rax,QWORD PTR [rip+0xffffffffffff720c]        # 0x100001fb0
   10000ada4:	or     DWORD PTR [rax],0x2000
   10000adaa:	mov    rax,QWORD PTR [rip+0xffffffffffff6caf]        # 0x100001a60
   10000adb1:	mov    ecx,0x8
   10000adb6:	mov    esi,0x7
   10000adbb:	mov    WORD PTR [rax],cx
   10000adbe:	mov    rax,QWORD PTR [rip+0xffffffffffff6c93]        # 0x100001a58
   10000adc5:	mov    rcx,QWORD PTR [rip+0xffffffffffff682c]        # 0x1000015f8
   10000adcc:	mov    WORD PTR [rax],si
   10000adcf:	mov    rax,QWORD PTR [rip+0xffffffffffff721a]        # 0x100001ff0
   10000add6:	mov    DWORD PTR [rax+0x4],0x3
   10000addd:	mov    rax,QWORD PTR [rip+0xffffffffffff720c]        # 0x100001ff0
   10000ade4:	mov    DWORD PTR [rax+0x8],ebx
   10000ade7:	mov    rax,QWORD PTR [rip+0xffffffffffff7202]        # 0x100001ff0
   10000adee:	mov    QWORD PTR [rax+0x10],rcx
   10000adf2:	mov    rax,QWORD PTR [rip+0xffffffffffff71f7]        # 0x100001ff0
   10000adf9:	mov    rcx,QWORD PTR [rip+0xffffffffffff67f0]        # 0x1000015f0
   10000ae00:	mov    QWORD PTR [rax+0x18],rcx
   10000ae04:	lea    rcx,[rip+0x9965]        # 0x100014770
   10000ae0b:	call   QWORD PTR [rip+0xffffffffffff6edf]        # 0x100001cf0
   10000ae11:	mov    r11,QWORD PTR [rip+0xffffffffffff7158]        # 0x100001f70
   10000ae18:	mov    DWORD PTR [r11],esi
   10000ae1b:	movzx  ecx,WORD PTR [rdi+0xaa]
   10000ae22:	call   0x100018100
   10000ae27:	test   eax,eax
   10000ae29:	jne    0x10000ae46
   10000ae2b:	mov    rax,QWORD PTR [rip+0xffffffffffff6c1e]        # 0x100001a50
   10000ae32:	movzx  edx,WORD PTR [rdi+0xaa]
   10000ae39:	mov    ecx,0xc2ed
   10000ae3e:	mov    r8d,DWORD PTR [rax]
   10000ae41:	call   0x1000182d0
   10000ae46:	mov    DWORD PTR [rsp+0x28],ebx
   10000ae4a:	mov    ecx,DWORD PTR [rsp+0x28]
   10000ae4e:	mov    rax,QWORD PTR [rip+0xffffffffffff6c13]        # 0x100001a68
   10000ae55:	mov    DWORD PTR [rax],ecx
   10000ae57:	mov    rax,QWORD PTR [rip+0xffffffffffff6ca2]        # 0x100001b00
   10000ae5e:	mov    ecx,0xdbba0
   10000ae63:	test   BYTE PTR [rax+0xbc],0x20
   10000ae6a:	mov    eax,0x493e0
   10000ae6f:	cmovne ecx,eax
   10000ae72:	call   0x1000181d0
   10000ae77:	mov    rax,QWORD PTR [rip+0x2da92]        # 0x100038910
   10000ae7e:	mov    r8d,r14d
   10000ae81:	cmp    DWORD PTR [rax+0x2c],r14d
   10000ae85:	mov    rax,QWORD PTR [rip+0xffffffffffff6c14]        # 0x100001aa0
   10000ae8c:	lea    rcx,[rip+0xffffffffffff738d]        # 0x100002220
   10000ae93:	sete   r8b
   10000ae97:	mov    DWORD PTR [rax],r8d
   10000ae9a:	mov    rax,QWORD PTR [rip+0xffffffffffff6bcf]        # 0x100001a70
   10000aea1:	mov    QWORD PTR [rax],0x2710
   10000aea8:	mov    rax,QWORD PTR [rip+0xffffffffffff6b59]        # 0x100001a08
   10000aeaf:	mov    QWORD PTR [rax],rcx
   10000aeb2:	mov    rax,QWORD PTR [rip+0xffffffffffff6b57]        # 0x100001a10
   10000aeb9:	lea    rcx,[rip+0xb5c0]        # 0x100016480
   10000aec0:	mov    QWORD PTR [rax],rcx
   10000aec3:	lea    rcx,[rip+0xffffffffffff85c6]        # 0x100003490
   10000aeca:	call   QWORD PTR [rip+0xffffffffffff61d0]        # 0x1000010a0
   10000aed0:	lea    rdx,[rip+0x501]        # 0x10000b3d8
   10000aed7:	mov    rcx,rax
   10000aeda:	call   QWORD PTR [rip+0xffffffffffff6368]        # 0x100001248
   10000aee0:	mov    rcx,QWORD PTR [rip+0xffffffffffff70a9]        # 0x100001f90
   10000aee7:	lea    rdx,[rip+0x226fa]        # 0x10002d5e8
   10000aeee:	mov    QWORD PTR [rcx],rax
   10000aef1:	mov    rcx,QWORD PTR [rip+0xffffffffffff6be8]        # 0x100001ae0
   10000aef8:	mov    rax,QWORD PTR [rcx+0x8]
   10000aefc:	mov    QWORD PTR [rip+0x226ed],rax        # 0x10002d5f0
   10000af03:	mov    rax,QWORD PTR [rcx+0x8]
   10000af07:	mov    QWORD PTR [rax],rdx
   10000af0a:	mov    QWORD PTR [rcx+0x8],rdx
   10000af0e:	mov    QWORD PTR [rip+0x226d3],rcx        # 0x10002d5e8
   10000af15:	mov    rcx,QWORD PTR [rip+0xffffffffffff6bbc]        # 0x100001ad8
   10000af1c:	lea    rdx,[rip+0x1e955]        # 0x100029878
   10000af23:	mov    rax,QWORD PTR [rcx+0x8]
   10000af27:	mov    QWORD PTR [rip+0x1e952],rax        # 0x100029880
   10000af2e:	mov    rax,QWORD PTR [rcx+0x8]
   10000af32:	mov    QWORD PTR [rax],rdx
   10000af35:	mov    QWORD PTR [rcx+0x8],rdx
   10000af39:	mov    QWORD PTR [rip+0x1e938],rcx        # 0x100029878
   10000af40:	mov    rcx,QWORD PTR [rip+0xffffffffffff6b89]        # 0x100001ad0
   10000af47:	lea    rdx,[rip+0x1e942]        # 0x100029890
   10000af4e:	mov    rax,QWORD PTR [rcx+0x8]
   10000af52:	mov    QWORD PTR [rip+0x1e93f],rax        # 0x100029898
   10000af59:	mov    rax,QWORD PTR [rcx+0x8]
   10000af5d:	mov    QWORD PTR [rax],rdx
   10000af60:	mov    QWORD PTR [rcx+0x8],rdx
   10000af64:	mov    QWORD PTR [rip+0x1e925],rcx        # 0x100029890
   10000af6b:	mov    rcx,QWORD PTR [rip+0xffffffffffff6b56]        # 0x100001ac8
   10000af72:	lea    rdx,[rip+0x1e92f]        # 0x1000298a8
   10000af79:	mov    rax,QWORD PTR [rcx+0x8]
   10000af7d:	mov    QWORD PTR [rip+0x1e92c],rax        # 0x1000298b0
   10000af84:	mov    rax,QWORD PTR [rcx+0x8]
   10000af88:	mov    QWORD PTR [rax],rdx
   10000af8b:	mov    QWORD PTR [rcx+0x8],rdx
   10000af8f:	mov    QWORD PTR [rip+0x1e912],rcx        # 0x1000298a8
   10000af96:	mov    rcx,QWORD PTR [rip+0xffffffffffff6b1b]        # 0x100001ab8
   10000af9d:	lea    rdx,[rip+0x1e91c]        # 0x1000298c0
   10000afa4:	mov    rax,QWORD PTR [rcx+0x8]
   10000afa8:	mov    QWORD PTR [rip+0x1e919],rax        # 0x1000298c8
   10000afaf:	mov    rax,QWORD PTR [rcx+0x8]
   10000afb3:	mov    QWORD PTR [rax],rdx
   10000afb6:	mov    QWORD PTR [rcx+0x8],rdx
   10000afba:	mov    QWORD PTR [rip+0x1e8ff],rcx        # 0x1000298c0
   10000afc1:	mov    rcx,QWORD PTR [rip+0xffffffffffff6af0]        # 0x100001ab8
   10000afc8:	lea    rdx,[rip+0x22649]        # 0x10002d618
   10000afcf:	mov    rax,QWORD PTR [rcx+0x8]
   10000afd3:	mov    QWORD PTR [rip+0x22646],rax        # 0x10002d620
   10000afda:	mov    rax,QWORD PTR [rcx+0x8]
   10000afde:	mov    QWORD PTR [rax],rdx
   10000afe1:	mov    QWORD PTR [rcx+0x8],rdx
   10000afe5:	mov    QWORD PTR [rip+0x2262c],rcx        # 0x10002d618
   10000afec:	mov    rcx,QWORD PTR [rip+0xffffffffffff6abd]        # 0x100001ab0
   10000aff3:	mov    rax,QWORD PTR [rcx+0x8]
   10000aff7:	mov    QWORD PTR [rip+0x1e0da],rax        # 0x1000290d8
   10000affe:	mov    rax,QWORD PTR [rcx+0x8]
   10000b002:	lea    rdx,[rip+0x1e0c7]        # 0x1000290d0
   10000b009:	mov    QWORD PTR [rax],rdx
   10000b00c:	mov    QWORD PTR [rcx+0x8],rdx
   10000b010:	mov    QWORD PTR [rip+0x1e0b9],rcx        # 0x1000290d0
   10000b017:	mov    rcx,QWORD PTR [rip+0xffffffffffff6a8a]        # 0x100001aa8
   10000b01e:	lea    rdx,[rip+0x1e8bb]        # 0x1000298e0
   10000b025:	mov    rax,QWORD PTR [rcx+0x8]
   10000b029:	mov    QWORD PTR [rip+0x1e8b8],rax        # 0x1000298e8
   10000b030:	mov    rax,QWORD PTR [rcx+0x8]
   10000b034:	mov    QWORD PTR [rax],rdx
   10000b037:	mov    QWORD PTR [rcx+0x8],rdx
   10000b03b:	mov    QWORD PTR [rip+0x1e89e],rcx        # 0x1000298e0
   10000b042:	lea    rcx,[rip+0x1e8af]        # 0x1000298f8
   10000b049:	call   QWORD PTR [rip+0xffffffffffff6ca9]        # 0x100001cf8
   10000b04f:	lea    rcx,[rip+0x225da]        # 0x10002d630
   10000b056:	call   QWORD PTR [rip+0xffffffffffff6ca4]        # 0x100001d00
   10000b05c:	mov    r11,QWORD PTR [rip+0xffffffffffff6a5d]        # 0x100001ac0
   10000b063:	lea    rcx,[rip+0x1e8a6]        # 0x100029910
   10000b06a:	mov    rax,QWORD PTR [r11+0x8]
   10000b06e:	lea    rdx,[rip+0x2258b]        # 0x10002d600
   10000b075:	mov    QWORD PTR [rip+0x1e89c],rax        # 0x100029918
   10000b07c:	mov    rax,QWORD PTR [r11+0x8]
   10000b080:	mov    QWORD PTR [rax],rcx
   10000b083:	mov    QWORD PTR [r11+0x8],rcx
   10000b087:	mov    rcx,QWORD PTR [rip+0xffffffffffff6a4a]        # 0x100001ad8
   10000b08e:	mov    QWORD PTR [rip+0x1e87b],r11        # 0x100029910
   10000b095:	mov    rax,QWORD PTR [rcx+0x8]
   10000b099:	mov    QWORD PTR [rip+0x22568],rax        # 0x10002d608
   10000b0a0:	mov    rax,QWORD PTR [rcx+0x8]
   10000b0a4:	mov    QWORD PTR [rax],rdx
   10000b0a7:	mov    QWORD PTR [rcx+0x8],rdx
   10000b0ab:	mov    rax,QWORD PTR [rip+0xffffffffffff6ed6]        # 0x100001f88
   10000b0b2:	mov    QWORD PTR [rip+0x22547],rcx        # 0x10002d600
   10000b0b9:	lea    rcx,[rip+0x7110]        # 0x1000121d0
   10000b0c0:	mov    QWORD PTR [rax],rcx
   10000b0c3:	mov    rax,QWORD PTR [rip+0x2d846]        # 0x100038910
   10000b0ca:	cmp    DWORD PTR [rax+0x49d4],r14d
   10000b0d1:	jne    0x10000b0f3
   10000b0d3:	mov    rax,QWORD PTR [rip+0xffffffffffff6a46]        # 0x100001b20
   10000b0da:	mov    rcx,QWORD PTR [rax]
   10000b0dd:	mov    rax,QWORD PTR [rcx]
   10000b0e0:	call   QWORD PTR [rax+0xd0]
   10000b0e6:	mov    rcx,rax
   10000b0e9:	call   QWORD PTR [rip+0xffffffffffff66b1]        # 0x1000017a0
   10000b0ef:	test   eax,eax
   10000b0f1:	jne    0x10000b105
   10000b0f3:	mov    rdx,QWORD PTR [rip+0xffffffffffff6eb6]        # 0x100001fb0
   10000b0fa:	mov    eax,DWORD PTR [rdx]
   10000b0fc:	mov    ecx,eax
   10000b0fe:	xor    ecx,0x8
   10000b101:	and    ecx,eax
   10000b103:	mov    DWORD PTR [rdx],ecx
   10000b105:	cmp    BYTE PTR [rdi+0xf5],bl
   10000b10b:	jne    0x10000b120
   10000b10d:	mov    rax,QWORD PTR [rip+0xffffffffffff69d4]        # 0x100001ae8
   10000b114:	mov    ecx,0x42d2
   10000b119:	mov    DWORD PTR [rax],ebx
   10000b11b:	call   0x1000182d0
   10000b120:	mov    rcx,QWORD PTR [rip+0x1dfa1]        # 0x1000290c8
   10000b127:	test   BYTE PTR [rcx+0x3ec],bl
   10000b12d:	je     0x10000b13c
   10000b12f:	call   QWORD PTR [rip+0xffffffffffff6bd3]        # 0x100001d08
   10000b135:	mov    rcx,QWORD PTR [rip+0x1df8c]        # 0x1000290c8
   10000b13c:	mov    rax,QWORD PTR [rip+0x2d7cd]        # 0x100038910
   10000b143:	cmp    DWORD PTR [rax+0x2c],r14d
   10000b147:	jne    0x10000b16a
   10000b149:	test   BYTE PTR [rcx+0x3ee],0x8
   10000b150:	jne    0x10000b16a
   10000b152:	call   QWORD PTR [rip+0xffffffffffff5fc0]        # 0x100001118
   10000b158:	mov    edx,ebx
   10000b15a:	mov    rcx,rax
   10000b15d:	call   QWORD PTR [rip+0xffffffffffff5f45]        # 0x1000010a8
   10000b163:	mov    rax,QWORD PTR [rip+0x2d7a6]        # 0x100038910
   10000b16a:	test   BYTE PTR [rax+0x943c],0x21
   10000b171:	je     0x10000b18f
   10000b173:	xor    r9d,r9d
   10000b176:	mov    ecx,0x1f68
   10000b17b:	xor    r8d,r8d
   10000b17e:	lea    edx,[r9-0x2]
   10000b182:	call   QWORD PTR [rip+0xffffffffffff6b58]        # 0x100001ce0
   10000b188:	mov    rax,QWORD PTR [rip+0x2d781]        # 0x100038910
   10000b18f:	mov    rdx,QWORD PTR [rip+0xffffffffffff698a]        # 0x100001b20
   10000b196:	cmp    DWORD PTR [rax+0x49d4],r14d
   10000b19d:	jne    0x10000b1b2
   10000b19f:	mov    rax,QWORD PTR [rdx]
   10000b1a2:	cmp    DWORD PTR [rax+0x10],0x2
   10000b1a6:	je     0x10000b1b2
   10000b1a8:	mov    rax,QWORD PTR [rip+0xffffffffffff6e21]        # 0x100001fd0
   10000b1af:	mov    DWORD PTR [rax],r14d
   10000b1b2:	mov    rax,QWORD PTR [rip+0xffffffffffff6dbf]        # 0x100001f78
   10000b1b9:	mov    rcx,QWORD PTR [rip+0xffffffffffff6428]        # 0x1000015e8
   10000b1c0:	mov    QWORD PTR [rax],rcx
   10000b1c3:	mov    rax,QWORD PTR [rdx]
   10000b1c6:	mov    ecx,r14d
   10000b1c9:	cmp    DWORD PTR [rax+0x10],0x2
   10000b1cd:	mov    rax,QWORD PTR [rip+0xffffffffffff68b4]        # 0x100001a88
   10000b1d4:	sete   cl
   10000b1d7:	mov    DWORD PTR [rax],ecx
   10000b1d9:	mov    rax,QWORD PTR [rdx]
   10000b1dc:	cmp    DWORD PTR [rax+0x10],ebx
   10000b1df:	jne    0x10000b20c
   10000b1e1:	call   QWORD PTR [rip+0xffffffffffff63f9]        # 0x1000015e0
   10000b1e7:	test   eax,eax
   10000b1e9:	je     0x10000b205
   10000b1eb:	mov    rax,QWORD PTR [rip+0xffffffffffff6dbe]        # 0x100001fb0
   10000b1f2:	test   DWORD PTR [rax],0x4000
   10000b1f8:	jne    0x10000b205
   10000b1fa:	mov    rdx,QWORD PTR [rip+0xffffffffffff691f]        # 0x100001b20
   10000b201:	mov    ecx,ebx
   10000b203:	jmp    0x10000b20f
   10000b205:	mov    rdx,QWORD PTR [rip+0xffffffffffff6914]        # 0x100001b20
   10000b20c:	mov    ecx,r14d
   10000b20f:	mov    rax,QWORD PTR [rdx]
   10000b212:	cmp    DWORD PTR [rax+0x10],0x2
   10000b216:	je     0x10000b21f
   10000b218:	test   ecx,ecx
   10000b21a:	jne    0x10000b21f
   10000b21c:	mov    ebx,r14d
   10000b21f:	mov    rax,QWORD PTR [rip+0xffffffffffff685a]        # 0x100001a80
   10000b226:	mov    DWORD PTR [rax],ebx
   10000b228:	mov    rax,QWORD PTR [rdx]
   10000b22b:	mov    ecx,DWORD PTR [rax+0x10]
   10000b22e:	cmp    ecx,0x3
   10000b231:	je     0x10000b237
   10000b233:	test   ecx,ecx
   10000b235:	jne    0x10000b249
   10000b237:	mov    rdx,QWORD PTR [rip+0xffffffffffff6d82]        # 0x100001fc0
   10000b23e:	mov    eax,DWORD PTR [rdx]
   10000b240:	mov    ecx,eax
   10000b242:	xor    ecx,0x1
   10000b245:	and    ecx,eax
   10000b247:	mov    DWORD PTR [rdx],ecx
   10000b249:	call   QWORD PTR [rip+0xffffffffffff6ac1]        # 0x100001d10
   10000b24f:	test   eax,eax
   10000b251:	je     0x10000b26a
   10000b253:	dec    eax
   10000b255:	jne    0x10000b261
   10000b257:	mov    ecx,0x4333
   10000b25c:	call   0x1000182d0
   10000b261:	or     ecx,0xffffffff
   10000b264:	call   QWORD PTR [rip+0xffffffffffff68ce]        # 0x100001b38
   10000b26a:	call   QWORD PTR [rip+0xffffffffffff6360]        # 0x1000015d0
   10000b270:	mov    rcx,rax
   10000b273:	call   QWORD PTR [rip+0xffffffffffff635f]        # 0x1000015d8
   10000b279:	xor    ecx,ecx
   10000b27b:	mov    DWORD PTR [rsp+0x20],r14d
   10000b280:	call   QWORD PTR [rip+0xffffffffffff5e2a]        # 0x1000010b0
   10000b286:	lea    rdx,[rsp+0x20]
   10000b28b:	mov    rcx,rax
   10000b28e:	call   QWORD PTR [rip+0xffffffffffff6a84]        # 0x100001d18
   10000b294:	cmp    DWORD PTR [rsp+0x20],r14d
   10000b299:	je     0x10000b320
   10000b29f:	lea    rdx,[rip+0x112]        # 0x10000b3b8
   10000b2a6:	mov    ecx,0x42f3
   10000b2ab:	call   0x1000182d0
   10000b2b0:	lea    rcx,[rip+0xffffffffffff8071]        # 0x100003328
   10000b2b7:	mov    DWORD PTR [rsp+0x20],r14d
   10000b2bc:	call   QWORD PTR [rip+0xffffffffffff5dde]        # 0x1000010a0
   10000b2c2:	lea    rdx,[rsp+0x20]
   10000b2c7:	mov    rcx,rax
   10000b2ca:	call   QWORD PTR [rip+0xffffffffffff6a48]        # 0x100001d18
   10000b2d0:	cmp    DWORD PTR [rsp+0x20],r14d
   10000b2d5:	je     0x10000b2e8
   10000b2d7:	lea    rdx,[rip+0xffffffffffff804a]        # 0x100003328
   10000b2de:	mov    ecx,0x42f3
   10000b2e3:	call   0x1000182d0
   10000b2e8:	lea    rcx,[rip+0xffffffffffff8051]        # 0x100003340
   10000b2ef:	mov    DWORD PTR [rsp+0x20],r14d
   10000b2f4:	call   QWORD PTR [rip+0xffffffffffff5da6]        # 0x1000010a0
   10000b2fa:	lea    rdx,[rsp+0x20]
   10000b2ff:	mov    rcx,rax
   10000b302:	call   QWORD PTR [rip+0xffffffffffff6a10]        # 0x100001d18
   10000b308:	cmp    DWORD PTR [rsp+0x20],r14d
   10000b30d:	je     0x10000b320
   10000b30f:	lea    rdx,[rip+0xffffffffffff802a]        # 0x100003340
   10000b316:	mov    ecx,0x42f3
   10000b31b:	call   0x1000182d0
   10000b320:	mov    rax,QWORD PTR [rip+0x2d5e9]        # 0x100038910
   10000b327:	cmp    DWORD PTR [rax+0x2c],r14d
   10000b32b:	je     0x10000b334
   10000b32d:	mov    ecx,0x42e4
   10000b332:	jmp    0x10000b348
   10000b334:	mov    rax,QWORD PTR [rip+0xffffffffffff6c75]        # 0x100001fb0
   10000b33b:	test   DWORD PTR [rax],0x1000
   10000b341:	je     0x10000b34d
   10000b343:	mov    ecx,0x43ff
   10000b348:	call   0x1000182d0
   10000b34d:	mov    rax,QWORD PTR [rip+0x1dd6c]        # 0x1000290c0
   10000b354:	mov    rdx,QWORD PTR gs:0x30
   10000b35d:	add    rdx,rax
   10000b360:	cmp    rax,0x1480
   10000b366:	jge    0x10000b373
   10000b368:	mov    ecx,eax
   10000b36a:	call   QWORD PTR [rip+0xffffffffffff5db0]        # 0x100001120
   10000b370:	mov    rdx,rax
   10000b373:	mov    rax,QWORD PTR [rdx+0xd8]
   10000b37a:	mov    QWORD PTR [rdx+0x8],r14
   10000b37e:	mov    rax,QWORD PTR [rax+0x38]
   10000b382:	mov    QWORD PTR [rax+0x8],r14
   10000b386:	call   0x10000e800
   10000b38b:	mov    rcx,QWORD PTR [rbp+0x370]
   10000b392:	xor    rcx,rsp
   10000b395:	call   0x100002610
   10000b39a:	lea    r11,[rsp+0x480]
   10000b3a2:	mov    rbx,QWORD PTR [r11+0x10]
   10000b3a6:	mov    rsi,QWORD PTR [r11+0x18]
   10000b3aa:	mov    rdi,QWORD PTR [r11+0x20]
   10000b3ae:	mov    r14,QWORD PTR [r11+0x28]
   10000b3b2:	mov    rsp,r11
   10000b3b5:	pop    rbp
   10000b3b6:	ret    
   10000b3b7:	nop
   10000b3b8:	jae    0x10000b3ba
   10000b3ba:	jno    0x10000b3bc
   10000b3bc:	ins    BYTE PTR es:[rdi],dx
   10000b3bd:	add    BYTE PTR [rbx+0x0],dh
   10000b3c0:	add    BYTE PTR gs:[rdx+0x0],dh
   10000b3c4:	jbe    0x10000b3c6
   10000b3c6:	jb     0x10000b3c8
   10000b3c8:	add    BYTE PTR cs:[rbp+0x0],ah
   10000b3cc:	js     0x10000b3ce
   10000b3ce:	add    BYTE PTR gs:[rax],al
   10000b3d1:	add    BYTE PTR [rax],al
   10000b3d3:	add    BYTE PTR [rax+0x48909090],dl
   10000b3d9:	gs (bad) 
   10000b3db:	jo     0x10000b42e
   10000b3dd:	jne    0x10000b444
   10000b3df:	jb     0x10000b45a
   10000b3e1:	rex.WB outs dx,BYTE PTR ds:[rsi]
   10000b3e3:	outs   dx,WORD PTR ds:[rsi]
   10000b3e5:	jb     0x10000b454
   10000b3e7:	(bad)  
   10000b3e8:	je     0x10000b453
   10000b3ea:	outs   dx,DWORD PTR ds:[rsi]
   10000b3eb:	outs   dx,BYTE PTR ds:[rsi]
   10000b3ec:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000b3f2:	nop
   10000b3f3:	nop
   10000b3f4:	nop
   10000b3f5:	nop
   10000b3f6:	nop
   10000b3f7:	nop
   10000b3f8:	nop
   10000b3f9:	nop
   10000b3fa:	nop
   10000b3fb:	nop
   10000b3fc:	nop
   10000b3fd:	nop
   10000b3fe:	nop
   10000b3ff:	nop
   10000b400:	sub    rsp,0x28
   10000b404:	mov    rcx,QWORD PTR [rip+0x1dcb5]        # 0x1000290c0
   10000b40b:	mov    rax,QWORD PTR gs:0x30
   10000b414:	add    rax,rcx
   10000b417:	cmp    rcx,0x1480
   10000b41e:	jge    0x10000b426
   10000b420:	call   QWORD PTR [rip+0xffffffffffff5cfa]        # 0x100001120
   10000b426:	cmp    QWORD PTR [rax],0x0
   10000b42a:	je     0x10000b4c7
   10000b430:	mov    rcx,QWORD PTR [rip+0x1dc89]        # 0x1000290c0
   10000b437:	mov    rax,QWORD PTR gs:0x30
   10000b440:	add    rax,rcx
   10000b443:	cmp    rcx,0x1480
   10000b44a:	jge    0x10000b452
   10000b44c:	call   QWORD PTR [rip+0xffffffffffff5cce]        # 0x100001120
   10000b452:	mov    rax,QWORD PTR [rax]
   10000b455:	cmp    QWORD PTR [rax+0x40],0x0
   10000b45a:	je     0x10000b4c7
   10000b45c:	mov    rcx,QWORD PTR [rip+0x1dc5d]        # 0x1000290c0
   10000b463:	mov    rax,QWORD PTR gs:0x30
   10000b46c:	add    rax,rcx
   10000b46f:	cmp    rcx,0x1480
   10000b476:	jge    0x10000b47e
   10000b478:	call   QWORD PTR [rip+0xffffffffffff5ca2]        # 0x100001120
   10000b47e:	mov    rax,QWORD PTR [rax]
   10000b481:	mov    rcx,QWORD PTR [rax+0x10]
   10000b485:	cmp    QWORD PTR [rcx],0x0
   10000b489:	je     0x10000b4c7
   10000b48b:	mov    rcx,QWORD PTR [rip+0x1dc2e]        # 0x1000290c0
   10000b492:	mov    rax,QWORD PTR gs:0x30
   10000b49b:	add    rax,rcx
   10000b49e:	cmp    rcx,0x1480
   10000b4a5:	jge    0x10000b4ad
   10000b4a7:	call   QWORD PTR [rip+0xffffffffffff5c73]        # 0x100001120
   10000b4ad:	mov    rax,QWORD PTR [rax]
   10000b4b0:	mov    rcx,QWORD PTR [rax+0x10]
   10000b4b4:	mov    rax,QWORD PTR [rcx]
   10000b4b7:	movzx  ecx,WORD PTR [rax+0x10]
   10000b4bb:	call   QWORD PTR [rip+0xffffffffffff650f]        # 0x1000019d0
   10000b4c1:	cwde   
   10000b4c2:	add    rsp,0x28
   10000b4c6:	ret    
   10000b4c7:	mov    rax,QWORD PTR [rip+0xffffffffffff6652]        # 0x100001b20
   10000b4ce:	mov    rcx,QWORD PTR [rax]
   10000b4d1:	mov    rax,QWORD PTR [rcx+0x8]
   10000b4d5:	test   rax,rax
   10000b4d8:	je     0x10000b4ed
   10000b4da:	movzx  ecx,WORD PTR [rax+0x9a]
   10000b4e1:	call   QWORD PTR [rip+0xffffffffffff64e9]        # 0x1000019d0
   10000b4e7:	cwde   
   10000b4e8:	add    rsp,0x28
   10000b4ec:	ret    
   10000b4ed:	mov    eax,0x409
   10000b4f2:	add    rsp,0x28
   10000b4f6:	ret    
   10000b4f7:	nop
   10000b4f8:	nop
   10000b4f9:	nop
   10000b4fa:	nop
   10000b4fb:	nop
   10000b4fc:	nop
   10000b4fd:	nop
   10000b4fe:	nop
   10000b4ff:	nop
   10000b500:	push   rbx
   10000b502:	sub    rsp,0x60
   10000b506:	call   0x100018660
   10000b50b:	test   eax,eax
   10000b50d:	je     0x10000b654
   10000b513:	mov    rax,QWORD PTR [rip+0x2d3f6]        # 0x100038910
   10000b51a:	cmp    DWORD PTR [rax+0x2c],0x0
   10000b51e:	je     0x10000b54c
   10000b520:	call   QWORD PTR [rip+0xffffffffffff67b2]        # 0x100001cd8
   10000b526:	cmp    DWORD PTR [rax+0x4],0x5
   10000b52a:	ja     0x10000b54c
   10000b52c:	call   QWORD PTR [rip+0xffffffffffff67a6]        # 0x100001cd8
   10000b532:	cmp    DWORD PTR [rax+0x4],0x5
   10000b536:	jne    0x10000b64a
   10000b53c:	call   QWORD PTR [rip+0xffffffffffff6796]        # 0x100001cd8
   10000b542:	cmp    DWORD PTR [rax+0x8],0x2
   10000b546:	jb     0x10000b64a
   10000b54c:	call   0x100003970
   10000b551:	mov    rcx,rax
   10000b554:	call   QWORD PTR [rip+0xffffffffffff623e]        # 0x100001798
   10000b55a:	mov    rbx,rax
   10000b55d:	test   rax,rax
   10000b560:	je     0x10000b645
   10000b566:	mov    rcx,QWORD PTR [rip+0xffffffffffff6223]        # 0x100001790
   10000b56d:	mov    eax,0xa
   10000b572:	mov    QWORD PTR [rsp+0x40],rbx
   10000b577:	mov    QWORD PTR [rsp+0x28],rcx
   10000b57c:	mov    rcx,QWORD PTR [rip+0xffffffffffff6205]        # 0x100001788
   10000b583:	mov    WORD PTR [rsp+0x20],ax
   10000b588:	mov    QWORD PTR [rsp+0x30],rcx
   10000b58d:	mov    rcx,QWORD PTR [rip+0xffffffffffff6034]        # 0x1000015c8
   10000b594:	lea    rax,[rip+0xfffffffffffffe65]        # 0x10000b400
   10000b59b:	mov    QWORD PTR [rsp+0x38],rcx
   10000b5a0:	mov    rcx,QWORD PTR [rip+0xffffffffffff61d9]        # 0x100001780
   10000b5a7:	mov    QWORD PTR [rsp+0x50],rax
   10000b5ac:	mov    QWORD PTR [rsp+0x48],rcx
   10000b5b1:	lea    rcx,[rsp+0x20]
   10000b5b6:	call   QWORD PTR [rip+0x217f4]        # 0x10002cdb0
   10000b5bc:	test   eax,eax
   10000b5be:	je     0x10000b60f
   10000b5c0:	mov    rax,QWORD PTR [rip+0x1db01]        # 0x1000290c8
   10000b5c7:	mov    ecx,0x1
   10000b5cc:	lea    rdx,[rsp+0x70]
   10000b5d1:	test   BYTE PTR [rax+0x4bd],cl
   10000b5d7:	mov    eax,0x9
   10000b5dc:	cmovne ecx,eax
   10000b5df:	call   QWORD PTR [rip+0x2190b]        # 0x10002cef0
   10000b5e5:	test   eax,eax
   10000b5e7:	je     0x10000b609
   10000b5e9:	mov    rax,QWORD PTR [rip+0xffffffffffff6520]        # 0x100001b10
   10000b5f0:	cmp    BYTE PTR [rax],0x0
   10000b5f3:	je     0x10000b65e
   10000b5f5:	lea    rdx,[rsp+0x78]
   10000b5fa:	mov    ecx,0xe
   10000b5ff:	call   QWORD PTR [rip+0x218e3]        # 0x10002cee8
   10000b605:	test   eax,eax
   10000b607:	jne    0x10000b65e
   10000b609:	call   QWORD PTR [rip+0x217b1]        # 0x10002cdc0
   10000b60f:	mov    rcx,rbx
   10000b612:	call   QWORD PTR [rip+0xffffffffffff6160]        # 0x100001778
   10000b618:	mov    rax,rbx
   10000b61b:	and    rax,0xffffffffffffe000
   10000b621:	mov    rax,QWORD PTR [rax+0x8]
   10000b625:	mov    rcx,QWORD PTR [rax+0x10]
   10000b629:	dec    rcx
   10000b62c:	not    rcx
   10000b62f:	and    rcx,rbx
   10000b632:	mov    rcx,QWORD PTR [rcx+0x8]
   10000b636:	test   BYTE PTR [rcx+0x28],0x8
   10000b63a:	jne    0x10000b645
   10000b63c:	mov    rax,QWORD PTR [rcx]
   10000b63f:	mov    rdx,rbx
   10000b642:	call   QWORD PTR [rax+0x28]
   10000b645:	call   0x100018920
   10000b64a:	mov    ecx,0x6406
   10000b64f:	call   0x1000182d0
   10000b654:	mov    ecx,0x6407
   10000b659:	call   0x1000182d0
   10000b65e:	add    rsp,0x60
   10000b662:	pop    rbx
   10000b663:	ret    
   10000b664:	nop
   10000b665:	nop
   10000b666:	nop
   10000b667:	nop
   10000b668:	nop
   10000b669:	nop
   10000b66a:	nop
   10000b66b:	nop
   10000b66c:	nop
   10000b66d:	nop
   10000b66e:	nop
   10000b66f:	nop
   10000b670:	mov    QWORD PTR [rsp+0x8],rbx
   10000b675:	push   rdi
   10000b676:	sub    rsp,0x240
   10000b67d:	mov    rax,QWORD PTR [rip+0x1db6c]        # 0x1000291f0
   10000b684:	xor    rax,rsp
   10000b687:	mov    QWORD PTR [rsp+0x230],rax
   10000b68f:	lea    rcx,[rip+0x1e2ca]        # 0x100029960
   10000b696:	mov    edx,0x100
   10000b69b:	call   QWORD PTR [rip+0xffffffffffff675f]        # 0x100001e00
   10000b6a1:	mov    ebx,eax
   10000b6a3:	test   eax,eax
   10000b6a5:	je     0x10000b6ba
   10000b6a7:	call   0x10000a240
   10000b6ac:	lea    rdx,[rip+0x1e2ad]        # 0x100029960
   10000b6b3:	mov    ecx,ebx
   10000b6b5:	call   0x10000f690
   10000b6ba:	mov    rax,QWORD PTR [rip+0x2d24f]        # 0x100038910
   10000b6c1:	cmp    DWORD PTR [rax+0x49d4],0x0
   10000b6c8:	lea    rcx,[rax+0x7fc0]
   10000b6cf:	je     0x10000b6d8
   10000b6d1:	call   0x10000cc10
   10000b6d6:	jmp    0x10000b6ee
   10000b6d8:	cmp    WORD PTR [rip+0x20c20],0x0        # 0x10002c300
   10000b6e0:	je     0x10000b6e9
   10000b6e2:	call   0x10000c820
   10000b6e7:	jmp    0x10000b6ee
   10000b6e9:	call   0x10000c5e0
   10000b6ee:	mov    rax,QWORD PTR [rip+0x2d21b]        # 0x100038910
   10000b6f5:	mov    rcx,QWORD PTR [rax+0x3ce0]
   10000b6fc:	mov    QWORD PTR [rax+0x3cd8],rcx
   10000b703:	mov    rax,QWORD PTR [rip+0x2d206]        # 0x100038910
   10000b70a:	mov    ecx,DWORD PTR [rax+0x3ce8]
   10000b710:	mov    DWORD PTR [rax+0x3cd4],ecx
   10000b716:	call   QWORD PTR [rip+0xffffffffffff6604]        # 0x100001d20
   10000b71c:	test   eax,eax
   10000b71e:	je     0x10000b73b
   10000b720:	mov    ecx,0x42af
   10000b725:	call   0x100003c70
   10000b72a:	xor    ecx,ecx
   10000b72c:	call   QWORD PTR [rip+0xffffffffffff6476]        # 0x100001ba8
   10000b732:	or     ecx,0xffffffff
   10000b735:	call   QWORD PTR [rip+0xffffffffffff63fd]        # 0x100001b38
   10000b73b:	call   QWORD PTR [rip+0xffffffffffff602f]        # 0x100001770
   10000b741:	call   QWORD PTR [rip+0xffffffffffff65e1]        # 0x100001d28
   10000b747:	call   QWORD PTR [rip+0xffffffffffff5c9b]        # 0x1000013e8
   10000b74d:	mov    ebx,eax
   10000b74f:	test   al,0x1c
   10000b751:	je     0x10000b764
   10000b753:	call   QWORD PTR [rip+0xffffffffffff5c97]        # 0x1000013f0
   10000b759:	test   bl,0x10
   10000b75c:	je     0x10000b764
   10000b75e:	call   QWORD PTR [rip+0xffffffffffff5c94]        # 0x1000013f8
   10000b764:	mov    edx,0xb031f
   10000b769:	mov    ecx,0x9001f
   10000b76e:	call   QWORD PTR [rip+0xffffffffffff5c8c]        # 0x100001400
   10000b774:	mov    rax,QWORD PTR [rip+0x2d195]        # 0x100038910
   10000b77b:	xor    edi,edi
   10000b77d:	mov    rcx,QWORD PTR [rax+0x4580]
   10000b784:	lea    r11,[rip+0x325]        # 0x10000bab0
   10000b78b:	mov    edx,0x105
   10000b790:	mov    ebx,edi
   10000b792:	lea    rax,[rdx+0x7ffffef9]
   10000b799:	test   rax,rax
   10000b79c:	je     0x10000b7b9
   10000b79e:	movzx  eax,WORD PTR [r11]
   10000b7a2:	test   ax,ax
   10000b7a5:	je     0x10000b7b9
   10000b7a7:	mov    WORD PTR [rcx],ax
   10000b7aa:	add    rcx,0x2
   10000b7ae:	add    r11,0x2
   10000b7b2:	dec    rdx
   10000b7b5:	jne    0x10000b792
   10000b7b7:	jmp    0x10000b7be
   10000b7b9:	test   rdx,rdx
   10000b7bc:	jne    0x10000b7c7
   10000b7be:	sub    rcx,0x2
   10000b7c2:	mov    ebx,0x8007007a
   10000b7c7:	mov    WORD PTR [rcx],di
   10000b7ca:	test   ebx,ebx
   10000b7cc:	jns    0x10000b816
   10000b7ce:	mov    ecx,ebx
   10000b7d0:	call   QWORD PTR [rip+0xffffffffffff5ee2]        # 0x1000016b8
   10000b7d6:	call   QWORD PTR [rip+0xffffffffffff645c]        # 0x100001c38
   10000b7dc:	mov    DWORD PTR [rsp+0x28],ebx
   10000b7e0:	lea    rbx,[rip+0x2e1]        # 0x10000bac8
   10000b7e7:	lea    r8,[rip+0xffffffffffff7fd2]        # 0x1000037c0
   10000b7ee:	lea    rcx,[rsp+0x30]
   10000b7f3:	mov    r9,rax
   10000b7f6:	mov    edx,0x200
   10000b7fb:	mov    QWORD PTR [rsp+0x20],rbx
   10000b800:	call   0x10000eb40
   10000b805:	mov    rcx,rbx
   10000b808:	test   eax,eax
   10000b80a:	js     0x10000b811
   10000b80c:	lea    rcx,[rsp+0x30]
   10000b811:	call   0x100015fc0
   10000b816:	call   QWORD PTR [rip+0xffffffffffff61ac]        # 0x1000019c8
   10000b81c:	call   QWORD PTR [rip+0xffffffffffff619e]        # 0x1000019c0
   10000b822:	mov    rax,QWORD PTR [rip+0xffffffffffff6757]        # 0x100001f80
   10000b829:	lea    r11,[rip+0xffffffffffffe9f0]        # 0x10000a220
   10000b830:	mov    QWORD PTR [rax],r11
   10000b833:	call   QWORD PTR [rip+0xffffffffffff5d87]        # 0x1000015c0
   10000b839:	call   QWORD PTR [rip+0xffffffffffff63c9]        # 0x100001c08
   10000b83f:	mov    rcx,rax
   10000b842:	call   QWORD PTR [rip+0xffffffffffff6068]        # 0x1000018b0
   10000b848:	call   0x100007100
   10000b84d:	call   QWORD PTR [rip+0xffffffffffff63b5]        # 0x100001c08
   10000b853:	mov    rcx,rax
   10000b856:	call   QWORD PTR [rip+0xffffffffffff608c]        # 0x1000018e8
   10000b85c:	call   0x10000fae0
   10000b861:	mov    rcx,QWORD PTR [rip+0xffffffffffff62b8]        # 0x100001b20
   10000b868:	mov    rax,QWORD PTR [rcx]
   10000b86b:	cmp    DWORD PTR [rax+0x10],0x2
   10000b86f:	jne    0x10000b8e5
   10000b871:	mov    rax,QWORD PTR [rip+0x1d850]        # 0x1000290c8
   10000b878:	test   BYTE PTR [rax+0x4e2],0x1
   10000b87f:	jne    0x10000b8cd
   10000b881:	mov    rcx,QWORD PTR [rip+0x1d838]        # 0x1000290c0
   10000b888:	mov    rax,QWORD PTR gs:0x30
   10000b891:	add    rax,rcx
   10000b894:	cmp    rcx,0x1480
   10000b89b:	jge    0x10000b8a3
   10000b89d:	call   QWORD PTR [rip+0xffffffffffff587d]        # 0x100001120
   10000b8a3:	mov    rax,QWORD PTR [rax]
   10000b8a6:	test   rax,rax
   10000b8a9:	je     0x10000b8e5
   10000b8ab:	mov    rax,QWORD PTR [rax+0x8]
   10000b8af:	mov    rcx,QWORD PTR [rax]
   10000b8b2:	test   rcx,rcx
   10000b8b5:	je     0x10000b8e5
   10000b8b7:	mov    edx,0x2710
   10000b8bc:	call   QWORD PTR [rip+0xffffffffffff646e]        # 0x100001d30
   10000b8c2:	test   eax,eax
   10000b8c4:	je     0x10000b8e5
   10000b8c6:	mov    rcx,QWORD PTR [rip+0xffffffffffff6253]        # 0x100001b20
   10000b8cd:	mov    rcx,QWORD PTR [rcx]
   10000b8d0:	mov    rax,QWORD PTR [rcx]
   10000b8d3:	call   QWORD PTR [rax+0x120]
   10000b8d9:	cmp    eax,0x2523
   10000b8de:	jne    0x10000b8e5
   10000b8e0:	mov    edi,0x1
   10000b8e5:	mov    rax,QWORD PTR [rip+0x2d024]        # 0x100038910
   10000b8ec:	mov    DWORD PTR [rax+0x49d0],edi
   10000b8f2:	call   QWORD PTR [rip+0xffffffffffff6310]        # 0x100001c08
   10000b8f8:	mov    edx,0x1
   10000b8fd:	mov    rcx,rax
   10000b900:	call   QWORD PTR [rip+0xffffffffffff5e62]        # 0x100001768
   10000b906:	call   QWORD PTR [rip+0xffffffffffff62fc]        # 0x100001c08
   10000b90c:	mov    rcx,rax
   10000b90f:	call   QWORD PTR [rip+0xffffffffffff5fab]        # 0x1000018c0
   10000b915:	call   0x10000efb0
   10000b91a:	call   0x1000040d0
   10000b91f:	mov    r11,QWORD PTR [rip+0xffffffffffff61fa]        # 0x100001b20
   10000b926:	mov    rax,QWORD PTR [r11]
   10000b929:	cmp    DWORD PTR [rax+0x14],0x1
   10000b92d:	je     0x10000b934
   10000b92f:	call   0x10000a400
   10000b934:	mov    edx,DWORD PTR [rip+0x2094e]        # 0x10002c288
   10000b93a:	cmp    edx,0xffffff00
   10000b940:	jne    0x10000b965
   10000b942:	mov    ecx,0x429b
   10000b947:	call   0x1000182d0
   10000b94c:	mov    edx,0x429b
   10000b951:	xor    ecx,ecx
   10000b953:	mov    r8d,0x42a
   10000b959:	call   QWORD PTR [rip+0xffffffffffff6251]        # 0x100001bb0
   10000b95f:	mov    edx,DWORD PTR [rip+0x20923]        # 0x10002c288
   10000b965:	cmp    edx,0xb
   10000b968:	jge    0x10000b978
   10000b96a:	test   edx,edx
   10000b96c:	je     0x10000b978
   10000b96e:	mov    ecx,0x42a0
   10000b973:	call   0x1000182d0
   10000b978:	mov    rcx,QWORD PTR [rip+0x2cf91]        # 0x100038910
   10000b97f:	call   QWORD PTR [rip+0xffffffffffff5c33]        # 0x1000015b8
   10000b985:	mov    r11,QWORD PTR [rip+0x2cf84]        # 0x100038910
   10000b98c:	cmp    DWORD PTR [r11+0x7fa8],0x0
   10000b994:	je     0x10000b99b
   10000b996:	call   0x100005670
   10000b99b:	call   0x10000a950
   10000b9a0:	call   QWORD PTR [rip+0xffffffffffff6392]        # 0x100001d38
   10000b9a6:	test   eax,eax
   10000b9a8:	je     0x10000b9c4
   10000b9aa:	lea    rdx,[rip+0x13f]        # 0x10000baf0
   10000b9b1:	mov    ecx,0x42f2
   10000b9b6:	call   0x1000182d0
   10000b9bb:	or     ecx,0xffffffff
   10000b9be:	call   QWORD PTR [rip+0xffffffffffff6174]        # 0x100001b38
   10000b9c4:	call   QWORD PTR [rip+0xffffffffffff5be6]        # 0x1000015b0
   10000b9ca:	call   0x10000a310
   10000b9cf:	lea    rcx,[rip+0x21e6a]        # 0x10002d840
   10000b9d6:	call   0x100013c70
   10000b9db:	test   eax,eax
   10000b9dd:	je     0x10000b9f0
   10000b9df:	lea    rdx,[rip+0x122]        # 0x10000bb08
   10000b9e6:	mov    ecx,0x42f2
   10000b9eb:	call   0x1000182d0
   10000b9f0:	lea    rcx,[rip+0xffffffffffff7949]        # 0x100003340
   10000b9f7:	call   0x100006d70
   10000b9fc:	lea    rcx,[rip+0xffffffffffff7925]        # 0x100003328
   10000ba03:	call   0x100006d70
   10000ba08:	call   0x10000b500
   10000ba0d:	call   QWORD PTR [rip+0xffffffffffff5d4d]        # 0x100001760
   10000ba13:	call   QWORD PTR [rip+0xffffffffffff5b8f]        # 0x1000015a8
   10000ba19:	call   0x10000a850
   10000ba1e:	mov    r11,QWORD PTR [rip+0x2ceeb]        # 0x100038910
   10000ba25:	cmp    DWORD PTR [r11+0x49c4],0x0
   10000ba2d:	je     0x10000ba63
   10000ba2f:	mov    rax,QWORD PTR [rip+0x1d692]        # 0x1000290c8
   10000ba36:	test   BYTE PTR [rax+0x4b7],0x2
   10000ba3d:	je     0x10000ba63
   10000ba3f:	call   QWORD PTR [rip+0x1d653]        # 0x100029098
   10000ba45:	test   al,al
   10000ba47:	jne    0x10000ba63
   10000ba49:	lea    rdx,[rip+0xf0]        # 0x10000bb40
   10000ba50:	mov    ecx,0x42f2
   10000ba55:	call   0x1000182d0
   10000ba5a:	or     ecx,0xffffffff
   10000ba5d:	call   QWORD PTR [rip+0xffffffffffff60d5]        # 0x100001b38
   10000ba63:	mov    rax,QWORD PTR [rip+0x2cea6]        # 0x100038910
   10000ba6a:	cmp    DWORD PTR [rax+0x49c4],0x0
   10000ba71:	je     0x10000ba79
   10000ba73:	call   QWORD PTR [rip+0xffffffffffff5cdf]        # 0x100001758
   10000ba79:	call   QWORD PTR [rip+0xffffffffffff5cd1]        # 0x100001750
   10000ba7f:	lea    rcx,[rip+0x1dea2]        # 0x100029928
   10000ba86:	call   0x100006a50
   10000ba8b:	mov    rcx,QWORD PTR [rsp+0x230]
   10000ba93:	xor    rcx,rsp
   10000ba96:	call   0x100002610
   10000ba9b:	mov    rbx,QWORD PTR [rsp+0x250]
   10000baa3:	add    rsp,0x240
   10000baaa:	pop    rdi
   10000baab:	ret    
   10000baac:	nop
   10000baad:	nop
   10000baae:	nop
   10000baaf:	nop
   10000bab0:	ins    DWORD PTR es:[rdi],dx
   10000bab1:	add    BYTE PTR [rcx+0x0],ah
   10000bab4:	jae    0x10000bab6
   10000bab6:	je     0x10000bab8
   10000bab8:	add    BYTE PTR gs:[rdx+0x0],dh
   10000babc:	add    BYTE PTR cs:[rbp+0x0],ch
   10000bac0:	add    BYTE PTR fs:[rsi+0x0],ah
   10000bac4:	add    BYTE PTR [rax],al
   10000bac6:	nop
   10000bac7:	nop
   10000bac8:	push   rbx
   10000bac9:	je     0x10000bb3d
   10000bacb:	imul   ebp,DWORD PTR [rsi+0x67],0x706f6320
   10000bad2:	jns    0x10000baf4
   10000bad4:	data16 (bad) 
   10000bad6:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6d282065
   10000bade:	(bad)  
   10000badf:	jae    0x10000bb55
   10000bae1:	gs jb  0x10000bb12
   10000bae4:	ins    DWORD PTR es:[rdi],dx
   10000bae5:	sub    WORD PTR fs:[rax],ax
   10000bae9:	nop
   10000baea:	nop
   10000baeb:	nop
   10000baec:	nop
   10000baed:	nop
   10000baee:	nop
   10000baef:	nop
   10000baf0:	push   rbx
   10000baf1:	add    BYTE PTR [rcx+0x0],dl
   10000baf4:	rex.WR add BYTE PTR [rax],r12b
   10000baf7:	add    BYTE PTR [rdi+0x0],cl
   10000bafa:	push   rbx
   10000bafb:	add    BYTE PTR [rax],ah
   10000bafd:	add    BYTE PTR [rdx+0x0],al
   10000bb00:	outs   dx,DWORD PTR ds:[rsi]
   10000bb01:	add    BYTE PTR [rdi+0x0],ch
   10000bb04:	je     0x10000bb06
   10000bb06:	add    BYTE PTR [rax],al
   10000bb08:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   10000bb0c:	outs   dx,BYTE PTR ds:[rsi]
   10000bb0d:	add    BYTE PTR [rip+0x69007900],ch        # 0x169013413
   10000bb13:	add    BYTE PTR [rbp+0x0],ah
   10000bb16:	ins    BYTE PTR es:[rdi],dx
   10000bb17:	add    BYTE PTR [rax+rax*1+0x20],ah
   10000bb1b:	add    BYTE PTR [rcx+0x0],ah
   10000bb1e:	outs   dx,BYTE PTR ds:[rsi]
   10000bb1f:	add    BYTE PTR [rcx+0x0],ah
   10000bb22:	ins    BYTE PTR es:[rdi],dx
   10000bb23:	add    BYTE PTR [rcx+0x0],bh
   10000bb26:	jae    0x10000bb28
   10000bb28:	imul   eax,DWORD PTR [rax],0x200073
   10000bb2e:	outs   dx,DWORD PTR ds:[rsi]
   10000bb2f:	add    BYTE PTR [rdx+0x0],ah
   10000bb32:	push   0x0
   10000bb34:	add    BYTE PTR gs:[rbx+0x0],ah
   10000bb38:	je     0x10000bb3a
   10000bb3a:	add    BYTE PTR [rax],al
   10000bb3c:	nop
   10000bb3d:	nop
   10000bb3e:	nop
   10000bb3f:	nop
   10000bb40:	push   rbx
   10000bb41:	add    BYTE PTR [rcx+0x0],dl
   10000bb44:	rex.WR add BYTE PTR [rax],r12b
   10000bb47:	add    BYTE PTR [rcx+0x0],al
   10000bb4a:	jp     0x10000bb4c
   10000bb4c:	jne    0x10000bb4e
   10000bb4e:	jb     0x10000bb50
   10000bb50:	add    BYTE PTR gs:[rax],ah
   10000bb53:	add    BYTE PTR [rsi+0x0],al
   10000bb56:	jne    0x10000bb58
   10000bb58:	outs   dx,BYTE PTR ds:[rsi]
   10000bb59:	add    BYTE PTR [rbx+0x0],ah
   10000bb5c:	je     0x10000bb5e
   10000bb5e:	imul   eax,DWORD PTR [rax],0x6e006f
   10000bb64:	jae    0x10000bb66
   10000bb66:	add    BYTE PTR [rax],al
   10000bb68:	nop
   10000bb69:	nop
   10000bb6a:	nop
   10000bb6b:	nop
   10000bb6c:	nop
   10000bb6d:	nop
   10000bb6e:	nop
   10000bb6f:	nop
   10000bb70:	mov    r11,rsp
   10000bb73:	push   rdi
   10000bb74:	sub    rsp,0x800
   10000bb7b:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   10000bb84:	mov    QWORD PTR [r11+0x8],rbx
   10000bb88:	mov    QWORD PTR [r11+0x10],rsi
   10000bb8c:	mov    rax,QWORD PTR [rip+0x1d65d]        # 0x1000291f0
   10000bb93:	xor    rax,rsp
   10000bb96:	mov    QWORD PTR [rsp+0x7f0],rax
   10000bb9e:	lea    rcx,[r11-0x598]
   10000bba5:	call   QWORD PTR [rip+0xffffffffffff60c5]        # 0x100001c70
   10000bbab:	lea    rcx,[rsp+0x2f0]
   10000bbb3:	call   QWORD PTR [rip+0xffffffffffff60b7]        # 0x100001c70
   10000bbb9:	lea    rcx,[rsp+0x370]
   10000bbc1:	call   QWORD PTR [rip+0xffffffffffff60a9]        # 0x100001c70
   10000bbc7:	lea    rbx,[rsp+0x3f0]
   10000bbcf:	mov    edi,0x3f
   10000bbd4:	mov    rcx,rbx
   10000bbd7:	call   QWORD PTR [rip+0xffffffffffff60eb]        # 0x100001cc8
   10000bbdd:	add    rbx,0x10
   10000bbe1:	dec    edi
   10000bbe3:	jns    0x10000bbd4
   10000bbe5:	mov    rax,QWORD PTR [rip+0xffffffffffff5f34]        # 0x100001b20
   10000bbec:	mov    rcx,QWORD PTR [rax]
   10000bbef:	cmp    DWORD PTR [rcx+0x10],0x3
   10000bbf3:	jne    0x10000bc0a
   10000bbf5:	mov    ecx,0x1f51
   10000bbfa:	xor    r9d,r9d
   10000bbfd:	xor    r8d,r8d
   10000bc00:	lea    edx,[r9-0x2]
   10000bc04:	call   QWORD PTR [rip+0xffffffffffff60d6]        # 0x100001ce0
   10000bc0a:	call   QWORD PTR [rip+0xffffffffffff5990]        # 0x1000015a0
   10000bc10:	mov    rdx,QWORD PTR [rip+0x2ccf9]        # 0x100038910
   10000bc17:	test   BYTE PTR [rdx+0x943c],0x81
   10000bc1e:	je     0x10000bc3b
   10000bc20:	lea    rcx,[rdx+0x7ba0]
   10000bc27:	xor    edx,edx
   10000bc29:	mov    r8d,0x400
   10000bc2f:	call   0x10001f80c
   10000bc34:	mov    rdx,QWORD PTR [rip+0x2ccd5]        # 0x100038910
   10000bc3b:	movups xmm0,XMMWORD PTR [rdx+0x7ba0]
   10000bc42:	movaps XMMWORD PTR [rsp+0x40],xmm0
   10000bc47:	movups xmm1,XMMWORD PTR [rdx+0x7bb0]
   10000bc4e:	movaps XMMWORD PTR [rsp+0x50],xmm1
   10000bc53:	movups xmm0,XMMWORD PTR [rdx+0x7bc0]
   10000bc5a:	movaps XMMWORD PTR [rsp+0x60],xmm0
   10000bc5f:	movups xmm1,XMMWORD PTR [rdx+0x7bd0]
   10000bc66:	movaps XMMWORD PTR [rsp+0x70],xmm1
   10000bc6b:	movups xmm0,XMMWORD PTR [rdx+0x7be0]
   10000bc72:	movaps XMMWORD PTR [rsp+0x80],xmm0
   10000bc7a:	movups xmm1,XMMWORD PTR [rdx+0x7bf0]
   10000bc81:	movaps XMMWORD PTR [rsp+0x90],xmm1
   10000bc89:	movups xmm0,XMMWORD PTR [rdx+0x7c00]
   10000bc90:	movaps XMMWORD PTR [rsp+0xa0],xmm0
   10000bc98:	movups xmm1,XMMWORD PTR [rdx+0x7c10]
   10000bc9f:	movaps XMMWORD PTR [rsp+0xb0],xmm1
   10000bca7:	add    rdx,0x4a90
   10000bcae:	lea    rcx,[rsp+0x40]
   10000bcb3:	call   QWORD PTR [rip+0xffffffffffff58df]        # 0x100001598
   10000bcb9:	test   eax,eax
   10000bcbb:	je     0x10000bce6
   10000bcbd:	xor    ebx,ebx
   10000bcbf:	mov    ecx,0x42e9
   10000bcc4:	call   0x1000182d0
   10000bcc9:	mov    r11,QWORD PTR [rip+0x2cc40]        # 0x100038910
   10000bcd0:	mov    DWORD PTR [r11+0x7aa0],ebx
   10000bcd7:	mov    rax,QWORD PTR [rip+0x2cc32]        # 0x100038910
   10000bcde:	mov    DWORD PTR [rax+0x7ac4],ebx
   10000bce4:	jmp    0x10000bcf8
   10000bce6:	lea    rcx,[rsp+0x40]
   10000bceb:	call   QWORD PTR [rip+0xffffffffffff604f]        # 0x100001d40
   10000bcf1:	xor    ebx,ebx
   10000bcf3:	test   eax,eax
   10000bcf5:	sete   bl
   10000bcf8:	neg    ebx
   10000bcfa:	sbb    r8d,r8d
   10000bcfd:	add    r8d,0x2
   10000bd01:	lea    rdx,[rsp+0x40]
   10000bd06:	lea    rcx,[rsp+0x150]
   10000bd0e:	call   QWORD PTR [rip+0xffffffffffff587c]        # 0x100001590
   10000bd14:	nop
   10000bd15:	lea    rcx,[rsp+0x150]
   10000bd1d:	call   QWORD PTR [rip+0xffffffffffff585d]        # 0x100001580
   10000bd23:	lea    rcx,[rsp+0x150]
   10000bd2b:	call   QWORD PTR [rip+0xffffffffffff5847]        # 0x100001578
   10000bd31:	mov    r11,QWORD PTR [rip+0x2cbd8]        # 0x100038910
   10000bd38:	mov    rax,QWORD PTR [rip+0xffffffffffff5ce1]        # 0x100001a20
   10000bd3f:	mov    eax,DWORD PTR [rax]
   10000bd41:	cmp    DWORD PTR [r11+0x407c],eax
   10000bd48:	jae    0x10000bd59
   10000bd4a:	mov    rax,QWORD PTR [rip+0x2cbbf]        # 0x100038910
   10000bd51:	mov    ebx,DWORD PTR [rax+0x407c]
   10000bd57:	jmp    0x10000bd62
   10000bd59:	mov    rax,QWORD PTR [rip+0xffffffffffff5cc0]        # 0x100001a20
   10000bd60:	mov    ebx,DWORD PTR [rax]
   10000bd62:	mov    rax,QWORD PTR [rip+0xffffffffffff5cb7]        # 0x100001a20
   10000bd69:	mov    r11d,DWORD PTR [rax]
   10000bd6c:	mov    rax,QWORD PTR [rip+0xffffffffffff622d]        # 0x100001fa0
   10000bd73:	mov    r10d,DWORD PTR [rax]
   10000bd76:	mov    rax,QWORD PTR [rip+0xffffffffffff622b]        # 0x100001fa8
   10000bd7d:	mov    r8d,DWORD PTR [rax]
   10000bd80:	mov    rax,QWORD PTR [rip+0xffffffffffff5c99]        # 0x100001a20
   10000bd87:	mov    r9d,DWORD PTR [rax]
   10000bd8a:	mov    rcx,QWORD PTR [rip+0xffffffffffff620f]        # 0x100001fa0
   10000bd91:	xor    edx,edx
   10000bd93:	mov    eax,r10d
   10000bd96:	div    r8d
   10000bd99:	mov    r8d,eax
   10000bd9c:	xor    edx,edx
   10000bd9e:	mov    eax,r9d
   10000bda1:	div    DWORD PTR [rcx]
   10000bda3:	mov    edx,eax
   10000bda5:	mov    DWORD PTR [rsp+0x28],ebx
   10000bda9:	mov    DWORD PTR [rsp+0x20],r11d
   10000bdae:	mov    r9d,r10d
   10000bdb1:	mov    ecx,0x430c
   10000bdb6:	call   0x1000182d0
   10000bdbb:	mov    r11,QWORD PTR [rip+0xffffffffffff5d5e]        # 0x100001b20
   10000bdc2:	mov    rax,QWORD PTR [r11]
   10000bdc5:	mov    rcx,QWORD PTR [rax+0x8]
   10000bdc9:	add    rcx,0x104
   10000bdd0:	call   QWORD PTR [rip+0xffffffffffff5eaa]        # 0x100001c80
   10000bdd6:	test   eax,eax
   10000bdd8:	je     0x10000be42
   10000bdda:	call   QWORD PTR [rip+0xffffffffffff5f68]        # 0x100001d48
   10000bde0:	mov    rsi,rax
   10000bde3:	lea    rdx,[rsp+0xd0]
   10000bdeb:	mov    rcx,QWORD PTR [rip+0xffffffffffff621e]        # 0x100002010
   10000bdf2:	call   QWORD PTR [rip+0xffffffffffff6210]        # 0x100002008
   10000bdf8:	mov    rdi,QWORD PTR [rsi]
   10000bdfb:	lea    rdx,[rsp+0xc0]
   10000be03:	lea    rcx,[rsp+0xd0]
   10000be0b:	call   QWORD PTR [rip+0xffffffffffff5f3f]        # 0x100001d50
   10000be11:	mov    rbx,rax
   10000be14:	call   QWORD PTR [rip+0xffffffffffff526e]        # 0x100001088
   10000be1a:	mov    rdx,rax
   10000be1d:	xor    r9d,r9d
   10000be20:	mov    r8,rbx
   10000be23:	mov    rcx,rsi
   10000be26:	call   QWORD PTR [rdi+0x30]
   10000be29:	test   eax,eax
   10000be2b:	jne    0x10000be42
   10000be2d:	call   QWORD PTR [rip+0xffffffffffff52fd]        # 0x100001130
   10000be33:	mov    edx,eax
   10000be35:	lea    rcx,[rip+0x3c]        # 0x10000be78
   10000be3c:	call   0x100018500
   10000be41:	nop
   10000be42:	lea    rcx,[rsp+0x150]
   10000be4a:	call   QWORD PTR [rip+0xffffffffffff5738]        # 0x100001588
   10000be50:	mov    rcx,QWORD PTR [rsp+0x7f0]
   10000be58:	xor    rcx,rsp
   10000be5b:	call   0x100002610
   10000be60:	lea    r11,[rsp+0x800]
   10000be68:	mov    rbx,QWORD PTR [r11+0x10]
   10000be6c:	mov    rsi,QWORD PTR [r11+0x18]
   10000be70:	mov    rsp,r11
   10000be73:	pop    rdi
   10000be74:	ret    
   10000be75:	nop
   10000be76:	nop
   10000be77:	nop
   10000be78:	push   rbx
   10000be79:	add    BYTE PTR [rbp+0x0],ah
   10000be7c:	je     0x10000be7e
   10000be7e:	push   rsp
   10000be7f:	add    BYTE PTR [rax+0x0],ch
   10000be82:	jb     0x10000be84
   10000be84:	add    BYTE PTR gs:[rcx+0x0],ah
   10000be88:	add    BYTE PTR fs:[rcx+0x0],al
   10000be8c:	data16 add BYTE PTR [rsi+0x0],ah
   10000be90:	imul   eax,DWORD PTR [rax],0x69006e
   10000be96:	je     0x10000be98
   10000be98:	jns    0x10000be9a
   10000be9a:	and    BYTE PTR [rax],al
   10000be9c:	data16 add BYTE PTR [rcx+0x0],ah
   10000bea0:	imul   eax,DWORD PTR [rax],0x65006c
   10000bea6:	add    BYTE PTR fs:[rdx],bh
   10000bea9:	add    BYTE PTR [rax],ah
   10000beab:	add    BYTE PTR [rip+0xa006400],ah        # 0x10a0122b1
   10000beb1:	add    BYTE PTR [rax],al
   10000beb3:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000beb9:	nop
   10000beba:	nop
   10000bebb:	nop
   10000bebc:	nop
   10000bebd:	nop
   10000bebe:	nop
   10000bebf:	nop
   10000bec0:	mov    r11,rsp
   10000bec3:	push   rbx
   10000bec4:	sub    rsp,0x1d0
   10000becb:	mov    QWORD PTR [r11-0x50],0xfffffffffffffffe
   10000bed3:	lea    rax,[rsp+0x48]
   10000bed8:	mov    QWORD PTR [rsp+0x50],rax
   10000bedd:	lea    rax,[rsp+0x48]
   10000bee2:	mov    QWORD PTR [rsp+0x48],rax
   10000bee7:	xor    ebx,ebx
   10000bee9:	mov    DWORD PTR [rsp+0x60],ebx
   10000beed:	mov    DWORD PTR [rsp+0x40],ebx
   10000bef1:	mov    DWORD PTR [rsp+0x44],0x2
   10000bef9:	mov    QWORD PTR [rsp+0x58],rbx
   10000befe:	mov    DWORD PTR [rsp+0xd0],0x4000a1
   10000bf09:	mov    QWORD PTR [r11-0x100],rbx
   10000bf10:	mov    QWORD PTR [r11-0xf0],rbx
   10000bf17:	mov    QWORD PTR [r11-0xf8],rbx
   10000bf1e:	mov    QWORD PTR [r11-0xe8],rbx
   10000bf25:	lea    rax,[rsp+0x40]
   10000bf2a:	mov    QWORD PTR [rip+0x201d7],rax        # 0x10002c108
   10000bf31:	mov    rdx,QWORD PTR [rip+0xffffffffffff5e20]        # 0x100001d58
   10000bf38:	lea    rcx,[r11-0x48]
   10000bf3c:	call   0x100002090
   10000bf41:	nop
   10000bf42:	mov    rax,QWORD PTR [rip+0x1d177]        # 0x1000290c0
   10000bf49:	mov    QWORD PTR [rsp+0x88],rax
   10000bf51:	mov    rax,QWORD PTR gs:0x30
   10000bf5a:	mov    QWORD PTR [rsp+0x180],rax
   10000bf62:	mov    rcx,QWORD PTR [rsp+0x88]
   10000bf6a:	add    rax,rcx
   10000bf6d:	mov    QWORD PTR [rsp+0x98],rax
   10000bf75:	cmp    rcx,0x1480
   10000bf7c:	jge    0x10000bf8c
   10000bf7e:	call   QWORD PTR [rip+0xffffffffffff519c]        # 0x100001120
   10000bf84:	mov    QWORD PTR [rsp+0x98],rax
   10000bf8c:	mov    QWORD PTR [rsp+0xf8],rax
   10000bf94:	mov    QWORD PTR [rsp+0x108],rax
   10000bf9c:	mov    rcx,QWORD PTR [rax+0x50]
   10000bfa0:	mov    QWORD PTR [rsp+0x178],rcx
   10000bfa8:	mov    QWORD PTR [rsp+0x118],rcx
   10000bfb0:	call   QWORD PTR [rip+0xffffffffffff5792]        # 0x100001748
   10000bfb6:	mov    r11,QWORD PTR [rip+0x1d103]        # 0x1000290c0
   10000bfbd:	mov    QWORD PTR [rsp+0xa8],r11
   10000bfc5:	mov    rax,QWORD PTR gs:0x30
   10000bfce:	mov    QWORD PTR [rsp+0x160],rax
   10000bfd6:	mov    rcx,QWORD PTR [rsp+0xa8]
   10000bfde:	add    rax,rcx
   10000bfe1:	mov    QWORD PTR [rsp+0xb8],rax
   10000bfe9:	cmp    rcx,0x1480
   10000bff0:	jge    0x10000c000
   10000bff2:	call   QWORD PTR [rip+0xffffffffffff5128]        # 0x100001120
   10000bff8:	mov    QWORD PTR [rsp+0xb8],rax
   10000c000:	mov    QWORD PTR [rsp+0x128],rax
   10000c008:	mov    QWORD PTR [rsp+0x168],rax
   10000c010:	mov    rax,QWORD PTR [rax+0x50]
   10000c014:	mov    QWORD PTR [rsp+0x138],rax
   10000c01c:	mov    QWORD PTR [rsp+0x170],rax
   10000c024:	mov    ecx,0x1b
   10000c029:	mov    WORD PTR [rax+0x7c],cx
   10000c02d:	nop    DWORD PTR [rax]
   10000c030:	call   QWORD PTR [rip+0xffffffffffff5b9a]        # 0x100001bd0
   10000c036:	cmp    eax,0x3
   10000c039:	je     0x10000c05b
   10000c03b:	call   QWORD PTR [rip+0xffffffffffff5b8f]        # 0x100001bd0
   10000c041:	test   eax,eax
   10000c043:	jne    0x10000c070
   10000c045:	mov    rax,QWORD PTR [rip+0x2c8c4]        # 0x100038910
   10000c04c:	test   BYTE PTR [rax+0x28],0x20
   10000c050:	jne    0x10000c070
   10000c052:	cmp    DWORD PTR [rax+0x49f4],0x0
   10000c059:	jne    0x10000c070
   10000c05b:	lea    r8,[rsp+0xd0]
   10000c063:	or     edx,0xffffffff
   10000c066:	lea    rcx,[rsp+0x40]
   10000c06b:	call   0x10000ec50
   10000c070:	call   0x100005510
   10000c075:	call   QWORD PTR [rip+0xffffffffffff5ce5]        # 0x100001d60
   10000c07b:	test   eax,eax
   10000c07d:	jne    0x10000c0bc
   10000c07f:	mov    rax,QWORD PTR [rip+0x2c88a]        # 0x100038910
   10000c086:	cmp    DWORD PTR [rax+0x49f0],0x0
   10000c08d:	je     0x10000c0bc
   10000c08f:	mov    ecx,DWORD PTR [rax+0x7fa8]
   10000c095:	mov    DWORD PTR [rsp+0xc4],ecx
   10000c09c:	test   ecx,ecx
   10000c09e:	je     0x10000c0bc
   10000c0a0:	call   QWORD PTR [rip+0xffffffffffff5b2a]        # 0x100001bd0
   10000c0a6:	cmp    eax,0x1
   10000c0a9:	je     0x10000c0b6
   10000c0ab:	call   QWORD PTR [rip+0xffffffffffff5b1f]        # 0x100001bd0
   10000c0b1:	cmp    eax,0x2
   10000c0b4:	jne    0x10000c0bc
   10000c0b6:	call   QWORD PTR [rip+0xffffffffffff54b4]        # 0x100001570
   10000c0bc:	call   QWORD PTR [rip+0xffffffffffff5b0e]        # 0x100001bd0
   10000c0c2:	cmp    eax,0x1
   10000c0c5:	jne    0x10000c0e6
   10000c0c7:	mov    rax,QWORD PTR [rip+0x2c842]        # 0x100038910
   10000c0ce:	mov    rcx,QWORD PTR [rax+0x7fb8]
   10000c0d5:	mov    rax,QWORD PTR [rcx]
   10000c0d8:	mov    edx,0x2
   10000c0dd:	call   QWORD PTR [rax]
   10000c0df:	mov    ecx,0x450c
   10000c0e4:	jmp    0x10000c114
   10000c0e6:	call   QWORD PTR [rip+0xffffffffffff5ae4]        # 0x100001bd0
   10000c0ec:	cmp    eax,0x2
   10000c0ef:	jne    0x10000c19a
   10000c0f5:	mov    rcx,QWORD PTR [rip+0x2c814]        # 0x100038910
   10000c0fc:	mov    rcx,QWORD PTR [rcx+0x18]
   10000c100:	call   QWORD PTR [rip+0xffffffffffff5462]        # 0x100001568
   10000c106:	cmp    DWORD PTR [rip+0x1fff3],0x0        # 0x10002c100
   10000c10d:	jne    0x10000c119
   10000c10f:	mov    ecx,0x42fc
   10000c114:	call   0x1000182d0
   10000c119:	xor    ecx,ecx
   10000c11b:	call   QWORD PTR [rip+0xffffffffffff5a17]        # 0x100001b38
   10000c121:	lea    rax,[rsp+0x60]
   10000c126:	mov    QWORD PTR [rsp+0x148],rax
   10000c12e:	call   QWORD PTR [rip+0xffffffffffff5a44]        # 0x100001b78
   10000c134:	mov    r11d,eax
   10000c137:	mov    DWORD PTR [rsp+0x1e8],eax
   10000c13e:	mov    DWORD PTR [rsp+0xc8],ebx
   10000c145:	xor    eax,eax
   10000c147:	lock cmpxchg DWORD PTR [rsp+0x60],r11d
   10000c14e:	mov    DWORD PTR [rsp+0x70],eax
   10000c152:	mov    eax,ebx
   10000c154:	sete   al
   10000c157:	mov    DWORD PTR [rsp+0xa0],eax
   10000c15e:	test   eax,eax
   10000c160:	jne    0x10000c17b
   10000c162:	mov    DWORD PTR [rsp+0x78],0x1
   10000c16a:	mov    edx,DWORD PTR [rsp+0x1e8]
   10000c171:	lea    rcx,[rsp+0x60]
   10000c176:	call   0x100006880
   10000c17b:	mov    DWORD PTR [rsp+0x40],ebx
   10000c17f:	mov    QWORD PTR [rsp+0x58],rbx
   10000c184:	lea    rax,[rsp+0x60]
   10000c189:	mov    QWORD PTR [rsp+0x100],rax
   10000c191:	mov    DWORD PTR [rsp+0x60],ebx
   10000c195:	jmp    0x10000c030
   10000c19a:	mov    rax,QWORD PTR [rip+0x2c76f]        # 0x100038910
   10000c1a1:	mov    ecx,DWORD PTR [rax+0x49f4]
   10000c1a7:	cmp    ecx,0x1
   10000c1aa:	jne    0x10000c268
   10000c1b0:	lea    rax,[rsp+0x60]
   10000c1b5:	mov    QWORD PTR [rsp+0x110],rax
   10000c1bd:	call   QWORD PTR [rip+0xffffffffffff59b5]        # 0x100001b78
   10000c1c3:	mov    r11d,eax
   10000c1c6:	mov    DWORD PTR [rsp+0x1f0],eax
   10000c1cd:	mov    DWORD PTR [rsp+0xc0],ebx
   10000c1d4:	xor    eax,eax
   10000c1d6:	lock cmpxchg DWORD PTR [rsp+0x60],r11d
   10000c1dd:	mov    DWORD PTR [rsp+0x80],eax
   10000c1e4:	mov    eax,ebx
   10000c1e6:	sete   al
   10000c1e9:	mov    DWORD PTR [rsp+0xb0],eax
   10000c1f0:	test   eax,eax
   10000c1f2:	jne    0x10000c210
   10000c1f4:	mov    DWORD PTR [rsp+0x90],0x1
   10000c1ff:	mov    edx,DWORD PTR [rsp+0x1f0]
   10000c206:	lea    rcx,[rsp+0x60]
   10000c20b:	call   0x100006880
   10000c210:	mov    DWORD PTR [rsp+0x40],ebx
   10000c214:	mov    QWORD PTR [rsp+0x58],rbx
   10000c219:	lea    rax,[rsp+0x60]
   10000c21e:	mov    QWORD PTR [rsp+0x120],rax
   10000c226:	mov    DWORD PTR [rsp+0x60],ebx
   10000c22a:	mov    QWORD PTR [rsp+0x38],rbx
   10000c22f:	mov    DWORD PTR [rsp+0x30],ebx
   10000c233:	mov    DWORD PTR [rsp+0x28],0x1
   10000c23b:	mov    DWORD PTR [rsp+0x20],ebx
   10000c23f:	mov    r9d,0x1
   10000c245:	xor    r8d,r8d
   10000c248:	xor    edx,edx
   10000c24a:	mov    ecx,0x53505353
   10000c24f:	call   QWORD PTR [rip+0xffffffffffff54eb]        # 0x100001740
   10000c255:	mov    r11,QWORD PTR [rip+0x2c6b4]        # 0x100038910
   10000c25c:	mov    DWORD PTR [r11+0x49f4],ebx
   10000c263:	jmp    0x10000c030
   10000c268:	cmp    ecx,0x2
   10000c26b:	jne    0x10000c31d
   10000c271:	lea    rax,[rsp+0x60]
   10000c276:	mov    QWORD PTR [rsp+0x130],rax
   10000c27e:	call   QWORD PTR [rip+0xffffffffffff58f4]        # 0x100001b78
   10000c284:	mov    r11d,eax
   10000c287:	mov    DWORD PTR [rsp+0x1f8],eax
   10000c28e:	mov    DWORD PTR [rsp+0x68],ebx
   10000c292:	xor    eax,eax
   10000c294:	lock cmpxchg DWORD PTR [rsp+0x60],r11d
   10000c29b:	mov    DWORD PTR [rsp+0x6c],eax
   10000c29f:	mov    eax,ebx
   10000c2a1:	sete   al
   10000c2a4:	mov    DWORD PTR [rsp+0x74],eax
   10000c2a8:	test   eax,eax
   10000c2aa:	jne    0x10000c2c5
   10000c2ac:	mov    DWORD PTR [rsp+0x7c],0x1
   10000c2b4:	mov    edx,DWORD PTR [rsp+0x1f8]
   10000c2bb:	lea    rcx,[rsp+0x60]
   10000c2c0:	call   0x100006880
   10000c2c5:	mov    DWORD PTR [rsp+0x40],ebx
   10000c2c9:	mov    QWORD PTR [rsp+0x58],rbx
   10000c2ce:	lea    rax,[rsp+0x60]
   10000c2d3:	mov    QWORD PTR [rsp+0x140],rax
   10000c2db:	mov    DWORD PTR [rsp+0x60],ebx
   10000c2df:	mov    QWORD PTR [rsp+0x38],rbx
   10000c2e4:	mov    DWORD PTR [rsp+0x30],ebx
   10000c2e8:	mov    DWORD PTR [rsp+0x28],0x1
   10000c2f0:	mov    DWORD PTR [rsp+0x20],ebx
   10000c2f4:	mov    r9d,0x1
   10000c2fa:	xor    r8d,r8d
   10000c2fd:	xor    edx,edx
   10000c2ff:	mov    ecx,0x4e435353
   10000c304:	call   QWORD PTR [rip+0xffffffffffff5436]        # 0x100001740
   10000c30a:	mov    r11,QWORD PTR [rip+0x2c5ff]        # 0x100038910
   10000c311:	mov    DWORD PTR [r11+0x49f4],ebx
   10000c318:	jmp    0x10000c030
   10000c31d:	lea    rcx,[rsp+0x190]
   10000c325:	call   0x100002030
   10000c32a:	nop
   10000c32b:	mov    rcx,QWORD PTR [rip+0x1cd8e]        # 0x1000290c0
   10000c332:	mov    rax,QWORD PTR gs:0x30
   10000c33b:	add    rax,rcx
   10000c33e:	cmp    rcx,0x1480
   10000c345:	jge    0x10000c34d
   10000c347:	call   QWORD PTR [rip+0xffffffffffff4dd3]        # 0x100001120
   10000c34d:	test   rax,rax
   10000c350:	je     0x10000c35e
   10000c352:	mov    rcx,QWORD PTR [rax+0xd8]
   10000c359:	test   rcx,rcx
   10000c35c:	jne    0x10000c390
   10000c35e:	call   QWORD PTR [rip+0xffffffffffff57ec]        # 0x100001b50
   10000c364:	mov    r11,QWORD PTR [rip+0x1cd55]        # 0x1000290c0
   10000c36b:	mov    rax,QWORD PTR gs:0x30
   10000c374:	add    rax,r11
   10000c377:	cmp    r11,0x1480
   10000c37e:	jge    0x10000c389
   10000c380:	mov    ecx,r11d
   10000c383:	call   QWORD PTR [rip+0xffffffffffff4d97]        # 0x100001120
   10000c389:	mov    rcx,QWORD PTR [rax+0xd8]
   10000c390:	cmp    DWORD PTR [rcx+0x204],0x0
   10000c397:	je     0x10000c39f
   10000c399:	call   QWORD PTR [rip+0xffffffffffff5881]        # 0x100001c20
   10000c39f:	xor    ecx,ecx
   10000c3a1:	call   QWORD PTR [rip+0xffffffffffff5791]        # 0x100001b38
   10000c3a7:	add    rsp,0x1d0
   10000c3ae:	pop    rbx
   10000c3af:	ret    
   10000c3b0:	nop
   10000c3b1:	nop
   10000c3b2:	nop
   10000c3b3:	nop
   10000c3b4:	nop
   10000c3b5:	nop
   10000c3b6:	nop
   10000c3b7:	nop
   10000c3b8:	nop
   10000c3b9:	nop
   10000c3ba:	nop
   10000c3bb:	nop
   10000c3bc:	nop
   10000c3bd:	nop
   10000c3be:	nop
   10000c3bf:	nop
   10000c3c0:	sub    rsp,0x28
   10000c3c4:	mov    r8,QWORD PTR [rip+0x2c545]        # 0x100038910
   10000c3cb:	lea    r9,[rsp+0x30]
   10000c3d0:	lea    rcx,[rip+0x20139]        # 0x10002c510
   10000c3d7:	xor    edx,edx
   10000c3d9:	add    r8,0x83d4
   10000c3e0:	mov    DWORD PTR [rsp+0x30],0x105
   10000c3e8:	call   QWORD PTR [rip+0x1cc5a]        # 0x100029048
   10000c3ee:	test   eax,eax
   10000c3f0:	jne    0x10000c3fe
   10000c3f2:	lea    rcx,[rip+0xff]        # 0x10000c4f8
   10000c3f9:	call   0x100015fc0
   10000c3fe:	mov    r8,QWORD PTR [rip+0x2c50b]        # 0x100038910
   10000c405:	lea    r9,[rsp+0x30]
   10000c40a:	lea    rcx,[rip+0x200ff]        # 0x10002c510
   10000c411:	mov    edx,0x4
   10000c416:	add    r8,0x8e06
   10000c41d:	mov    DWORD PTR [rsp+0x30],0x105
   10000c425:	call   QWORD PTR [rip+0x1cc1d]        # 0x100029048
   10000c42b:	test   eax,eax
   10000c42d:	jne    0x10000c43b
   10000c42f:	lea    rcx,[rip+0xf2]        # 0x10000c528
   10000c436:	call   0x100015fc0
   10000c43b:	mov    r8,QWORD PTR [rip+0x2c4ce]        # 0x100038910
   10000c442:	lea    r9,[rsp+0x30]
   10000c447:	lea    rcx,[rip+0x200c2]        # 0x10002c510
   10000c44e:	mov    edx,0x6
   10000c453:	add    r8,0x85de
   10000c45a:	mov    DWORD PTR [rsp+0x30],0x105
   10000c462:	call   QWORD PTR [rip+0x1cbe0]        # 0x100029048
   10000c468:	test   eax,eax
   10000c46a:	jne    0x10000c478
   10000c46c:	lea    rcx,[rip+0xe5]        # 0x10000c558
   10000c473:	call   0x100015fc0
   10000c478:	mov    r8,QWORD PTR [rip+0x2c491]        # 0x100038910
   10000c47f:	lea    r9,[rsp+0x30]
   10000c484:	lea    rcx,[rip+0x20085]        # 0x10002c510
   10000c48b:	mov    edx,0x7
   10000c490:	add    r8,0x9010
   10000c497:	mov    DWORD PTR [rsp+0x30],0x105
   10000c49f:	call   QWORD PTR [rip+0x1cba3]        # 0x100029048
   10000c4a5:	test   eax,eax
   10000c4a7:	jne    0x10000c4b5
   10000c4a9:	lea    rcx,[rip+0xd0]        # 0x10000c580
   10000c4b0:	call   0x100015fc0
   10000c4b5:	mov    rdx,QWORD PTR [rip+0x2c454]        # 0x100038910
   10000c4bc:	lea    r8,[rsp+0x30]
   10000c4c1:	lea    rcx,[rip+0x20048]        # 0x10002c510
   10000c4c8:	add    rdx,0x921a
   10000c4cf:	mov    DWORD PTR [rsp+0x30],0x105
   10000c4d7:	call   QWORD PTR [rip+0x1cb73]        # 0x100029050
   10000c4dd:	test   eax,eax
   10000c4df:	jne    0x10000c4ed
   10000c4e1:	lea    rcx,[rip+0xc8]        # 0x10000c5b0
   10000c4e8:	call   0x100015fc0
   10000c4ed:	add    rsp,0x28
   10000c4f1:	ret    
   10000c4f2:	nop
   10000c4f3:	nop
   10000c4f4:	nop
   10000c4f5:	nop
   10000c4f6:	nop
   10000c4f7:	nop
   10000c4f8:	rex.RB jb 0x10000c56d
   10000c4fb:	outs   dx,DWORD PTR ds:[rsi]
   10000c4fc:	jb     0x10000c51e
   10000c4fe:	addr32 gs je 0x10000c576
   10000c502:	imul   ebp,DWORD PTR [rsi+0x67],0x72657320
   10000c509:	jbe    0x10000c574
   10000c50b:	movsxd esp,DWORD PTR [rbp+0x20]
   10000c50e:	jb     0x10000c575
   10000c510:	imul   esi,DWORD PTR [ebx+0x74],0x62207972
   10000c518:	(bad)  
   10000c519:	jae    0x10000c580
   10000c51b:	and    BYTE PTR [rbx+0x65],ch
   10000c51e:	jns    0x10000c54e
   10000c520:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000c526:	nop
   10000c527:	nop
   10000c528:	rex.RB jb 0x10000c59d
   10000c52b:	outs   dx,DWORD PTR ds:[rsi]
   10000c52c:	jb     0x10000c54e
   10000c52e:	addr32 gs je 0x10000c5a6
   10000c532:	imul   ebp,DWORD PTR [rsi+0x67],0x756c6320
   10000c539:	jae    0x10000c5af
   10000c53b:	gs jb  0x10000c55e
   10000c53e:	jb     0x10000c5a5
   10000c540:	imul   esi,DWORD PTR [ebx+0x74],0x62207972
   10000c548:	(bad)  
   10000c549:	jae    0x10000c5b0
   10000c54b:	and    BYTE PTR [rbx+0x65],ch
   10000c54e:	jns    0x10000c57e
   10000c550:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000c556:	nop
   10000c557:	nop
   10000c558:	rex.RB jb 0x10000c5cd
   10000c55b:	outs   dx,DWORD PTR ds:[rsi]
   10000c55c:	jb     0x10000c57e
   10000c55e:	addr32 gs je 0x10000c5d6
   10000c562:	imul   ebp,DWORD PTR [rsi+0x67],0x74657320
   10000c569:	jne    0x10000c5db
   10000c56b:	and    BYTE PTR [rdx+0x65],dh
   10000c56e:	imul   esi,DWORD PTR [ebx+0x74],0x62207972
   10000c576:	(bad)  
   10000c577:	jae    0x10000c5de
   10000c579:	and    BYTE PTR [rbx+0x65],ch
   10000c57c:	jns    0x10000c5ac
   10000c57e:	add    BYTE PTR [rax+0x6f727245],dl
   10000c584:	jb     0x10000c5a6
   10000c586:	addr32 gs je 0x10000c5fe
   10000c58a:	imul   ebp,DWORD PTR [rsi+0x67],0x6f727020
   10000c591:	jbe    0x10000c5fc
   10000c593:	fs gs jb 0x10000c60a
   10000c597:	and    BYTE PTR [rdx+0x65],dh
   10000c59a:	imul   esi,DWORD PTR [ebx+0x74],0x62207972
   10000c5a2:	(bad)  
   10000c5a3:	jae    0x10000c60a
   10000c5a5:	and    BYTE PTR [rbx+0x65],ch
   10000c5a8:	jns    0x10000c5d8
   10000c5aa:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000c5b0:	rex.RB jb 0x10000c625
   10000c5b3:	outs   dx,DWORD PTR ds:[rsi]
   10000c5b4:	jb     0x10000c5d6
   10000c5b6:	addr32 gs je 0x10000c62e
   10000c5ba:	imul   ebp,DWORD PTR [rsi+0x67],0x67657220
   10000c5c1:	imul   esi,DWORD PTR [rbx+0x74],0x62207972
   10000c5c8:	(bad)  
   10000c5c9:	jae    0x10000c630
   10000c5cb:	and    BYTE PTR [rbx+0x65],ch
   10000c5ce:	jns    0x10000c5fe
   10000c5d0:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000c5d6:	nop
   10000c5d7:	nop
   10000c5d8:	nop
   10000c5d9:	nop
   10000c5da:	nop
   10000c5db:	nop
   10000c5dc:	nop
   10000c5dd:	nop
   10000c5de:	nop
   10000c5df:	nop
   10000c5e0:	mov    QWORD PTR [rsp+0x10],rbx
   10000c5e5:	push   rdi
   10000c5e6:	sub    rsp,0x50
   10000c5ea:	mov    rax,QWORD PTR [rip+0x1cbff]        # 0x1000291f0
   10000c5f1:	xor    rax,rsp
   10000c5f4:	mov    QWORD PTR [rsp+0x48],rax
   10000c5f9:	or     rbx,0xffffffffffffffff
   10000c5fd:	mov    rdi,rcx
   10000c600:	test   rcx,rcx
   10000c603:	je     0x10000c6ac
   10000c609:	mov    rax,QWORD PTR [rip+0xffffffffffff5510]        # 0x100001b20
   10000c610:	mov    rcx,QWORD PTR [rax]
   10000c613:	mov    eax,DWORD PTR [rcx+0x14]
   10000c616:	cmp    eax,0x2
   10000c619:	je     0x10000c625
   10000c61b:	cmp    eax,0x1
   10000c61e:	je     0x10000c625
   10000c620:	call   0x10001b060
   10000c625:	mov    rax,rbx
   10000c628:	nop    DWORD PTR [rax+rax*1+0x0]
   10000c630:	inc    rax
   10000c633:	cmp    WORD PTR [rdi+rax*2],0x0
   10000c638:	jne    0x10000c630
   10000c63a:	cmp    eax,0x10
   10000c63d:	jbe    0x10000c64b
   10000c63f:	lea    rcx,[rip+0xffffffffffff6e6a]        # 0x1000034b0
   10000c646:	call   0x100015fc0
   10000c64b:	lea    r8,[rip+0x1febe]        # 0x10002c510
   10000c652:	xor    edx,edx
   10000c654:	mov    rcx,rdi
   10000c657:	call   QWORD PTR [rip+0x1c9fb]        # 0x100029058
   10000c65d:	test   eax,eax
   10000c65f:	jne    0x10000c66d
   10000c661:	lea    rcx,[rip+0xffffffffffff6e78]        # 0x1000034e0
   10000c668:	call   0x100015fc0
   10000c66d:	mov    rdx,QWORD PTR [rip+0x2c29c]        # 0x100038910
   10000c674:	lea    r8,[rsp+0x20]
   10000c679:	lea    rcx,[rip+0x1fe90]        # 0x10002c510
   10000c680:	add    rdx,0x81ca
   10000c687:	mov    DWORD PTR [rsp+0x20],0x105
   10000c68f:	call   QWORD PTR [rip+0x1c9cb]        # 0x100029060
   10000c695:	test   eax,eax
   10000c697:	jne    0x10000c6a5
   10000c699:	lea    rcx,[rip+0xffffffffffff6e68]        # 0x100003508
   10000c6a0:	call   0x100015fc0
   10000c6a5:	call   0x10000c3c0
   10000c6aa:	jmp    0x10000c6b8
   10000c6ac:	lea    rcx,[rip+0xfd]        # 0x10000c7b0
   10000c6b3:	call   0x100015fc0
   10000c6b8:	lea    rdx,[rsp+0x24]
   10000c6bd:	lea    rcx,[rsp+0x28]
   10000c6c2:	mov    DWORD PTR [rsp+0x24],0x10
   10000c6ca:	call   QWORD PTR [rip+0xffffffffffff49e8]        # 0x1000010b8
   10000c6d0:	test   eax,eax
   10000c6d2:	je     0x10000c751
   10000c6d4:	mov    rdx,QWORD PTR [rip+0x2c235]        # 0x100038910
   10000c6db:	lea    r9,[rsp+0x20]
   10000c6e0:	lea    rcx,[rsp+0x28]
   10000c6e5:	lea    r8,[rdx+0x87e8]
   10000c6ec:	add    rdx,0x81ca
   10000c6f3:	mov    DWORD PTR [rsp+0x20],0x105
   10000c6fb:	call   QWORD PTR [rip+0x1c967]        # 0x100029068
   10000c701:	test   eax,eax
   10000c703:	jne    0x10000c711
   10000c705:	lea    rcx,[rip+0xe4]        # 0x10000c7f0
   10000c70c:	call   0x100015fc0
   10000c711:	mov    rax,QWORD PTR [rip+0x2c1f8]        # 0x100038910
   10000c718:	xor    ecx,ecx
   10000c71a:	mov    WORD PTR [rax+0x89f0],cx
   10000c721:	mov    rax,QWORD PTR [rip+0x2c1e8]        # 0x100038910
   10000c728:	lea    rcx,[rax+0x87e8]
   10000c72f:	mov    QWORD PTR [rax+0x3ce0],rcx
   10000c736:	inc    rbx
   10000c739:	cmp    WORD PTR [rcx+rbx*2],0x0
   10000c73e:	jne    0x10000c736
   10000c740:	mov    rax,QWORD PTR [rip+0x2c1c9]        # 0x100038910
   10000c747:	add    ebx,ebx
   10000c749:	mov    DWORD PTR [rax+0x3ce8],ebx
   10000c74f:	jmp    0x10000c75d
   10000c751:	lea    rcx,[rip+0xffffffffffff6dd8]        # 0x100003530
   10000c758:	call   0x100015fc0
   10000c75d:	mov    r8,QWORD PTR [rip+0x2c1ac]        # 0x100038910
   10000c764:	lea    r9,[rsp+0x20]
   10000c769:	lea    rcx,[rip+0x1fda0]        # 0x10002c510
   10000c770:	xor    edx,edx
   10000c772:	add    r8,0x8bfc
   10000c779:	mov    DWORD PTR [rsp+0x20],0x105
   10000c781:	call   QWORD PTR [rip+0x1c8e9]        # 0x100029070
   10000c787:	test   eax,eax
   10000c789:	jne    0x10000c797
   10000c78b:	lea    rcx,[rip+0xffffffffffff6de6]        # 0x100003578
   10000c792:	call   0x100015fc0
   10000c797:	mov    rcx,QWORD PTR [rsp+0x48]
   10000c79c:	xor    rcx,rsp
   10000c79f:	call   0x100002610
   10000c7a4:	mov    rbx,QWORD PTR [rsp+0x68]
   10000c7a9:	add    rsp,0x50
   10000c7ad:	pop    rdi
   10000c7ae:	ret    
   10000c7af:	nop
   10000c7b0:	push   rbx
   10000c7b1:	push   rcx
   10000c7b2:	rex.WR and BYTE PTR [rbx+0x65],r10b
   10000c7b6:	jb     0x10000c82e
   10000c7b8:	gs jb  0x10000c7db
   10000c7bb:	rex.WB outs dx,BYTE PTR ds:[rsi]
   10000c7bd:	jae    0x10000c833
   10000c7bf:	(bad)  
   10000c7c0:	outs   dx,BYTE PTR ds:[rsi]
   10000c7c1:	movsxd esp,DWORD PTR [rbp+0x20]
   10000c7c4:	rex.WRX (bad) 
   10000c7c6:	ins    DWORD PTR es:[rdi],dx
   10000c7c7:	and    BYTE PTR gs:[rsi+0x6f],ch
   10000c7cb:	je     0x10000c7ed
   10000c7cd:	jae    0x10000c834
   10000c7cf:	je     0x10000c7ff
   10000c7d1:	and    BYTE PTR [rcx+0x62],al
   10000c7d4:	outs   dx,DWORD PTR ds:[rsi]
   10000c7d5:	jb     0x10000c84b
   10000c7d7:	imul   ebp,DWORD PTR [rsi+0x67],0x696e4920
   10000c7de:	je     0x10000c849
   10000c7e0:	(bad)  
   10000c7e1:	ins    BYTE PTR es:[rdi],dx
   10000c7e2:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   10000c7e9:	add    BYTE PTR cs:[rax-0x6f6f6f70],dl
   10000c7f0:	push   rbp
   10000c7f1:	outs   dx,BYTE PTR ds:[rsi]
   10000c7f2:	(bad)  
   10000c7f3:	(bad)  
   10000c7f4:	ins    BYTE PTR es:[rdi],dx
   10000c7f5:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   10000c7fa:	fs gs je 0x10000c863
   10000c7fe:	jb     0x10000c86d
   10000c800:	imul   ebp,DWORD PTR [rsi+0x65],0x72657320
   10000c807:	jbe    0x10000c872
   10000c809:	movsxd esp,DWORD PTR [rbp+0x20]
   10000c80c:	outs   dx,BYTE PTR ds:[rsi]
   10000c80d:	(bad)  
   10000c80e:	ins    DWORD PTR es:[rdi],dx
   10000c80f:	gs add BYTE PTR cs:[rax-0x6f6f6f70],dl
   10000c817:	nop
   10000c818:	nop
   10000c819:	nop
   10000c81a:	nop
   10000c81b:	nop
   10000c81c:	nop
   10000c81d:	nop
   10000c81e:	nop
   10000c81f:	nop
   10000c820:	mov    QWORD PTR [rsp+0x10],rbx
   10000c825:	mov    QWORD PTR [rsp+0x18],rbp
   10000c82a:	mov    QWORD PTR [rsp+0x20],rsi
   10000c82f:	push   rdi
   10000c830:	sub    rsp,0x270
   10000c837:	mov    rax,QWORD PTR [rip+0x1c9b2]        # 0x1000291f0
   10000c83e:	xor    rax,rsp
   10000c841:	mov    QWORD PTR [rsp+0x260],rax
   10000c849:	mov    rbx,rcx
   10000c84c:	test   rcx,rcx
   10000c84f:	jne    0x10000c85d
   10000c851:	lea    rcx,[rip+0x2c8]        # 0x10000cb20
   10000c858:	call   0x100015fc0
   10000c85d:	mov    rax,QWORD PTR [rip+0x2c0ac]        # 0x100038910
   10000c864:	lea    rbp,[rip+0x1fa95]        # 0x10002c300
   10000c86b:	mov    edx,0x2e
   10000c870:	mov    rcx,rbp
   10000c873:	mov    DWORD PTR [rax+0x49d8],0x1
   10000c87d:	call   QWORD PTR [rip+0xffffffffffff4b5d]        # 0x1000013e0
   10000c883:	mov    rdi,rax
   10000c886:	test   rax,rax
   10000c889:	je     0x10000c8b1
   10000c88b:	call   QWORD PTR [rip+0xffffffffffff53a7]        # 0x100001c38
   10000c891:	lea    rdx,[rip+0x2c8]        # 0x10000cb60
   10000c898:	mov    rcx,rdi
   10000c89b:	mov    r8,rax
   10000c89e:	call   QWORD PTR [rip+0xffffffffffff4b34]        # 0x1000013d8
   10000c8a4:	xor    r9d,r9d
   10000c8a7:	test   eax,eax
   10000c8a9:	mov    ecx,r9d
   10000c8ac:	sete   cl
   10000c8af:	jmp    0x10000c8b7
   10000c8b1:	xor    r9d,r9d
   10000c8b4:	mov    ecx,r9d
   10000c8b7:	mov    rax,QWORD PTR [rip+0x2c052]        # 0x100038910
   10000c8be:	mov    r8,rbx
   10000c8c1:	mov    edx,0x105
   10000c8c6:	mov    DWORD PTR [rax+0x49dc],ecx
   10000c8cc:	mov    rcx,QWORD PTR [rip+0x2c03d]        # 0x100038910
   10000c8d3:	mov    edi,r9d
   10000c8d6:	add    rcx,0x81ca
   10000c8dd:	nop    DWORD PTR [rax]
   10000c8e0:	lea    rax,[rdx+0x7ffffef9]
   10000c8e7:	test   rax,rax
   10000c8ea:	je     0x10000c907
   10000c8ec:	movzx  eax,WORD PTR [r8]
   10000c8f0:	test   ax,ax
   10000c8f3:	je     0x10000c907
   10000c8f5:	mov    WORD PTR [rcx],ax
   10000c8f8:	add    rcx,0x2
   10000c8fc:	add    r8,0x2
   10000c900:	dec    rdx
   10000c903:	jne    0x10000c8e0
   10000c905:	jmp    0x10000c90c
   10000c907:	test   rdx,rdx
   10000c90a:	jne    0x10000c915
   10000c90c:	sub    rcx,0x2
   10000c910:	mov    edi,0x8007007a
   10000c915:	mov    WORD PTR [rcx],r9w
   10000c919:	test   edi,edi
   10000c91b:	jns    0x10000c965
   10000c91d:	mov    ecx,edi
   10000c91f:	call   QWORD PTR [rip+0xffffffffffff4d93]        # 0x1000016b8
   10000c925:	call   QWORD PTR [rip+0xffffffffffff530d]        # 0x100001c38
   10000c92b:	mov    DWORD PTR [rsp+0x28],edi
   10000c92f:	lea    rdi,[rip+0x242]        # 0x10000cb78
   10000c936:	lea    r8,[rip+0xffffffffffff6e83]        # 0x1000037c0
   10000c93d:	lea    rcx,[rsp+0x60]
   10000c942:	mov    r9,rax
   10000c945:	mov    edx,0x200
   10000c94a:	mov    QWORD PTR [rsp+0x20],rdi
   10000c94f:	call   0x10000eb40
   10000c954:	mov    rcx,rdi
   10000c957:	test   eax,eax
   10000c959:	js     0x10000c960
   10000c95b:	lea    rcx,[rsp+0x60]
   10000c960:	call   0x100015fc0
   10000c965:	call   0x10001b060
   10000c96a:	or     rsi,0xffffffffffffffff
   10000c96e:	mov    rax,rsi
   10000c971:	inc    rax
   10000c974:	cmp    WORD PTR [rbx+rax*2],0x0
   10000c979:	jne    0x10000c971
   10000c97b:	cmp    eax,0x10
   10000c97e:	jbe    0x10000c98c
   10000c980:	lea    rcx,[rip+0xffffffffffff6b29]        # 0x1000034b0
   10000c987:	call   0x100015fc0
   10000c98c:	mov    rax,rsi
   10000c98f:	nop
   10000c990:	inc    rax
   10000c993:	cmp    WORD PTR [rbp+rax*2+0x0],0x0
   10000c999:	jne    0x10000c990
   10000c99b:	cmp    eax,0x10
   10000c99e:	jbe    0x10000c9ac
   10000c9a0:	lea    rcx,[rip+0x1f9]        # 0x10000cba0
   10000c9a7:	call   0x100015fc0
   10000c9ac:	lea    r8,[rip+0x1fb5d]        # 0x10002c510
   10000c9b3:	xor    edx,edx
   10000c9b5:	mov    rcx,rbp
   10000c9b8:	call   QWORD PTR [rip+0x1c69a]        # 0x100029058
   10000c9be:	test   eax,eax
   10000c9c0:	jne    0x10000c9ce
   10000c9c2:	lea    rcx,[rip+0xffffffffffff6b17]        # 0x1000034e0
   10000c9c9:	call   0x100015fc0
   10000c9ce:	mov    rdx,QWORD PTR [rip+0x2bf3b]        # 0x100038910
   10000c9d5:	lea    r8,[rsp+0x30]
   10000c9da:	lea    rcx,[rip+0x1fb2f]        # 0x10002c510
   10000c9e1:	add    rdx,0x89f2
   10000c9e8:	mov    DWORD PTR [rsp+0x30],0x105
   10000c9f0:	call   QWORD PTR [rip+0x1c66a]        # 0x100029060
   10000c9f6:	test   eax,eax
   10000c9f8:	jne    0x10000ca06
   10000c9fa:	lea    rcx,[rip+0xffffffffffff6b07]        # 0x100003508
   10000ca01:	call   0x100015fc0
   10000ca06:	call   0x10000c3c0
   10000ca0b:	lea    rdx,[rsp+0x34]
   10000ca10:	lea    rcx,[rsp+0x38]
   10000ca15:	mov    DWORD PTR [rsp+0x34],0x10
   10000ca1d:	call   QWORD PTR [rip+0xffffffffffff4695]        # 0x1000010b8
   10000ca23:	test   eax,eax
   10000ca25:	je     0x10000caab
   10000ca2b:	mov    rdi,QWORD PTR [rip+0x2bede]        # 0x100038910
   10000ca32:	lea    rbx,[rdi+0x81ca]
   10000ca39:	call   QWORD PTR [rip+0xffffffffffff51f9]        # 0x100001c38
   10000ca3f:	lea    rcx,[rdi+0x87e8]
   10000ca46:	mov    r9,rax
   10000ca49:	lea    rax,[rsp+0x38]
   10000ca4e:	lea    r8,[rip+0xffffffffffff6b43]        # 0x100003598
   10000ca55:	mov    edx,0x105
   10000ca5a:	mov    QWORD PTR [rsp+0x28],rbx
   10000ca5f:	mov    QWORD PTR [rsp+0x20],rax
   10000ca64:	call   0x100005bb0
   10000ca69:	lea    rdx,[rip+0x168]        # 0x10000cbd8
   10000ca70:	mov    ecx,eax
   10000ca72:	call   0x100015f20
   10000ca77:	mov    r11,QWORD PTR [rip+0x2be92]        # 0x100038910
   10000ca7e:	lea    rax,[r11+0x87e8]
   10000ca85:	mov    QWORD PTR [r11+0x3ce0],rax
   10000ca8c:	nop    DWORD PTR [rax+0x0]
   10000ca90:	inc    rsi
   10000ca93:	cmp    WORD PTR [rax+rsi*2],0x0
   10000ca98:	jne    0x10000ca90
   10000ca9a:	mov    rax,QWORD PTR [rip+0x2be6f]        # 0x100038910
   10000caa1:	add    esi,esi
   10000caa3:	mov    DWORD PTR [rax+0x3ce8],esi
   10000caa9:	jmp    0x10000cab7
   10000caab:	lea    rcx,[rip+0xffffffffffff6a7e]        # 0x100003530
   10000cab2:	call   0x100015fc0
   10000cab7:	mov    rcx,QWORD PTR [rip+0x2be52]        # 0x100038910
   10000cabe:	lea    r9,[rsp+0x30]
   10000cac3:	xor    edx,edx
   10000cac5:	lea    r8,[rcx+0x8bfc]
   10000cacc:	add    rcx,0x81ca
   10000cad3:	mov    DWORD PTR [rsp+0x30],0x105
   10000cadb:	call   QWORD PTR [rip+0x1c597]        # 0x100029078
   10000cae1:	test   eax,eax
   10000cae3:	jne    0x10000caf1
   10000cae5:	lea    rcx,[rip+0xffffffffffff6a8c]        # 0x100003578
   10000caec:	call   0x100015fc0
   10000caf1:	mov    rcx,QWORD PTR [rsp+0x260]
   10000caf9:	xor    rcx,rsp
   10000cafc:	call   0x100002610
   10000cb01:	lea    r11,[rsp+0x270]
   10000cb09:	mov    rbx,QWORD PTR [r11+0x18]
   10000cb0d:	mov    rbp,QWORD PTR [r11+0x20]
   10000cb11:	mov    rsi,QWORD PTR [r11+0x28]
   10000cb15:	mov    rsp,r11
   10000cb18:	pop    rdi
   10000cb19:	ret    
   10000cb1a:	nop
   10000cb1b:	nop
   10000cb1c:	nop
   10000cb1d:	nop
   10000cb1e:	nop
   10000cb1f:	nop
   10000cb20:	push   rbx
   10000cb21:	push   rcx
   10000cb22:	rex.WR and BYTE PTR [rbx+0x65],r10b
   10000cb26:	jb     0x10000cb9e
   10000cb28:	gs jb  0x10000cb4b
   10000cb2b:	push   rbp
   10000cb2c:	jae    0x10000cb93
   10000cb2e:	jb     0x10000cb50
   10000cb30:	rex.WB outs dx,BYTE PTR ds:[rsi]
   10000cb32:	jae    0x10000cba8
   10000cb34:	(bad)  
   10000cb35:	outs   dx,BYTE PTR ds:[rsi]
   10000cb36:	movsxd esp,DWORD PTR [rbp+0x20]
   10000cb39:	rex.WRX (bad) 
   10000cb3b:	ins    DWORD PTR es:[rdi],dx
   10000cb3c:	and    BYTE PTR gs:[rsi+0x6f],ch
   10000cb40:	je     0x10000cb62
   10000cb42:	jae    0x10000cba9
   10000cb44:	je     0x10000cb74
   10000cb46:	and    BYTE PTR [rcx+0x62],al
   10000cb49:	outs   dx,DWORD PTR ds:[rsi]
   10000cb4a:	jb     0x10000cbc0
   10000cb4c:	imul   ebp,DWORD PTR [rsi+0x67],0x696e4920
   10000cb53:	je     0x10000cbbe
   10000cb55:	(bad)  
   10000cb56:	ins    BYTE PTR es:[rdi],dx
   10000cb57:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   10000cb5e:	add    BYTE PTR cs:[rsi],ch
   10000cb61:	add    BYTE PTR [rax+rax*1+0x4f],cl
   10000cb65:	add    BYTE PTR [rbx+0x0],al
   10000cb68:	add    BYTE PTR [r8+rax*1+0x44],cl
   10000cb6d:	add    BYTE PTR [rdx+0x0],al
   10000cb70:	add    BYTE PTR [rax],al
   10000cb72:	nop
   10000cb73:	nop
   10000cb74:	nop
   10000cb75:	nop
   10000cb76:	nop
   10000cb77:	nop
   10000cb78:	push   rbx
   10000cb79:	je     0x10000cbed
   10000cb7b:	imul   ebp,DWORD PTR [rsi+0x67],0x706f4320
   10000cb82:	jns    0x10000cba4
   10000cb84:	rex.RX (bad) 
   10000cb86:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x69282065
   10000cb8e:	outs   dx,BYTE PTR ds:[rsi]
   10000cb8f:	jae    0x10000cc05
   10000cb91:	(bad)  
   10000cb92:	outs   dx,BYTE PTR ds:[rsi]
   10000cb93:	movsxd esp,DWORD PTR [rbp+0x20]
   10000cb96:	outs   dx,BYTE PTR ds:[rsi]
   10000cb97:	(bad)  
   10000cb98:	ins    DWORD PTR es:[rdi],dx
   10000cb99:	sub    DWORD PTR gs:[rax],eax
   10000cb9c:	nop
   10000cb9d:	nop
   10000cb9e:	nop
   10000cb9f:	nop
   10000cba0:	rex.RB jb 0x10000cc15
   10000cba3:	outs   dx,DWORD PTR ds:[rsi]
   10000cba4:	jb     0x10000cbe0
   10000cba6:	and    BYTE PTR [rax+0x61],dl
   10000cba9:	jb     0x10000cc10
   10000cbab:	outs   dx,BYTE PTR ds:[rsi]
   10000cbac:	je     0x10000cbce
   10000cbae:	imul   ecx,DWORD PTR [rcx+0x6e],0x6e617473
   10000cbb5:	movsxd esp,DWORD PTR [rbp+0x20]
   10000cbb8:	outs   dx,BYTE PTR ds:[rsi]
   10000cbb9:	(bad)  
   10000cbba:	ins    DWORD PTR es:[rdi],dx
   10000cbbb:	and    BYTE PTR gs:[rbp+0x78],ah
   10000cbbf:	movsxd esp,DWORD PTR [rbp+0x65]
   10000cbc2:	fs jae 0x10000cbe5
   10000cbc5:	ins    DWORD PTR es:[rdi],dx
   10000cbc6:	(bad)  
   10000cbc7:	js     0x10000cc32
   10000cbc9:	ins    DWORD PTR es:[rdi],dx
   10000cbca:	jne    0x10000cc39
   10000cbcc:	and    BYTE PTR [rbp+riz*2+0x6e],ch
   10000cbd0:	addr32 je 0x10000cc3b
   10000cbd3:	add    BYTE PTR cs:[rax+0x74539090],dl
   10000cbda:	jb     0x10000cc45
   10000cbdc:	outs   dx,BYTE PTR ds:[rsi]
   10000cbdd:	and    BYTE PTR [esi+0x6f],al
   10000cbe1:	jb     0x10000cc50
   10000cbe3:	(bad)  
   10000cbe4:	je     0x10000cc06
   10000cbe6:	rex.RX (bad) 
   10000cbe8:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x66282065
   10000cbf0:	jne    0x10000cc5e
   10000cbf2:	ins    BYTE PTR es:[rdi],dx
   10000cbf3:	and    BYTE PTR [rcx+0x6e],ch
   10000cbf6:	jae    0x10000cc6c
   10000cbf8:	(bad)  
   10000cbf9:	outs   dx,BYTE PTR ds:[rsi]
   10000cbfa:	movsxd esp,DWORD PTR [rbp+0x20]
   10000cbfd:	outs   dx,BYTE PTR ds:[rsi]
   10000cbfe:	(bad)  
   10000cbff:	ins    DWORD PTR es:[rdi],dx
   10000cc00:	sub    DWORD PTR gs:[rax],eax
   10000cc03:	nop
   10000cc04:	nop
   10000cc05:	nop
   10000cc06:	nop
   10000cc07:	nop
   10000cc08:	nop
   10000cc09:	nop
   10000cc0a:	nop
   10000cc0b:	nop
   10000cc0c:	nop
   10000cc0d:	nop
   10000cc0e:	nop
   10000cc0f:	nop
   10000cc10:	mov    QWORD PTR [rsp+0x8],rbx
   10000cc15:	mov    QWORD PTR [rsp+0x10],rbp
   10000cc1a:	mov    QWORD PTR [rsp+0x18],rsi
   10000cc1f:	mov    QWORD PTR [rsp+0x20],rdi
   10000cc24:	push   r14
   10000cc26:	sub    rsp,0x290
   10000cc2d:	mov    rax,QWORD PTR [rip+0x1c5bc]        # 0x1000291f0
   10000cc34:	xor    rax,rsp
   10000cc37:	mov    QWORD PTR [rsp+0x280],rax
   10000cc3f:	mov    rcx,QWORD PTR [rip+0x2bcca]        # 0x100038910
   10000cc46:	lea    rbx,[rip+0x323]        # 0x10000cf70
   10000cc4d:	mov    DWORD PTR [rsp+0x30],0x1d
   10000cc55:	add    rcx,0x7fc0
   10000cc5c:	xor    r14d,r14d
   10000cc5f:	mov    r8,rbx
   10000cc62:	mov    edi,r14d
   10000cc65:	mov    edx,0x105
   10000cc6a:	nop    WORD PTR [rax+rax*1+0x0]
   10000cc70:	lea    rax,[rdx+0x7ffffef9]
   10000cc77:	test   rax,rax
   10000cc7a:	je     0x10000cc97
   10000cc7c:	movzx  eax,WORD PTR [r8]
   10000cc80:	test   ax,ax
   10000cc83:	je     0x10000cc97
   10000cc85:	mov    WORD PTR [rcx],ax
   10000cc88:	add    rcx,0x2
   10000cc8c:	add    r8,0x2
   10000cc90:	dec    rdx
   10000cc93:	jne    0x10000cc70
   10000cc95:	jmp    0x10000cc9c
   10000cc97:	test   rdx,rdx
   10000cc9a:	jne    0x10000cca5
   10000cc9c:	sub    rcx,0x2
   10000cca0:	mov    edi,0x8007007a
   10000cca5:	mov    WORD PTR [rcx],r14w
   10000cca9:	test   edi,edi
   10000ccab:	jns    0x10000ccfb
   10000ccad:	mov    ecx,edi
   10000ccaf:	call   QWORD PTR [rip+0xffffffffffff4a03]        # 0x1000016b8
   10000ccb5:	call   QWORD PTR [rip+0xffffffffffff4f7d]        # 0x100001c38
   10000ccbb:	mov    DWORD PTR [rsp+0x28],edi
   10000ccbf:	lea    rdi,[rip+0xffffffffffff6692]        # 0x100003358
   10000ccc6:	lea    r8,[rip+0xffffffffffff6af3]        # 0x1000037c0
   10000cccd:	lea    rcx,[rsp+0x80]
   10000ccd5:	mov    r9,rax
   10000ccd8:	mov    edx,0x200
   10000ccdd:	mov    QWORD PTR [rsp+0x20],rdi
   10000cce2:	call   0x10000eb40
   10000cce7:	mov    rcx,rdi
   10000ccea:	test   eax,eax
   10000ccec:	js     0x10000ccf6
   10000ccee:	lea    rcx,[rsp+0x80]
   10000ccf6:	call   0x100015fc0
   10000ccfb:	lea    rbp,[rip+0x1f80e]        # 0x10002c510
   10000cd02:	mov    r8,rbx
   10000cd05:	mov    edx,0x27
   10000cd0a:	mov    rcx,rbp
   10000cd0d:	sub    r8,rbp
   10000cd10:	mov    edi,r14d
   10000cd13:	lea    rax,[rdx+0x7fffffd7]
   10000cd1a:	test   rax,rax
   10000cd1d:	je     0x10000cd37
   10000cd1f:	movzx  eax,WORD PTR [r8+rcx*1]
   10000cd24:	test   ax,ax
   10000cd27:	je     0x10000cd37
   10000cd29:	mov    WORD PTR [rcx],ax
   10000cd2c:	add    rcx,0x2
   10000cd30:	dec    rdx
   10000cd33:	jne    0x10000cd13
   10000cd35:	jmp    0x10000cd3c
   10000cd37:	test   rdx,rdx
   10000cd3a:	jne    0x10000cd45
   10000cd3c:	sub    rcx,0x2
   10000cd40:	mov    edi,0x8007007a
   10000cd45:	mov    WORD PTR [rcx],r14w
   10000cd49:	test   edi,edi
   10000cd4b:	jns    0x10000cd9b
   10000cd4d:	mov    ecx,edi
   10000cd4f:	call   QWORD PTR [rip+0xffffffffffff4963]        # 0x1000016b8
   10000cd55:	call   QWORD PTR [rip+0xffffffffffff4edd]        # 0x100001c38
   10000cd5b:	mov    DWORD PTR [rsp+0x28],edi
   10000cd5f:	lea    rdi,[rip+0x21a]        # 0x10000cf80
   10000cd66:	lea    r8,[rip+0xffffffffffff6a53]        # 0x1000037c0
   10000cd6d:	lea    rcx,[rsp+0x80]
   10000cd75:	mov    r9,rax
   10000cd78:	mov    edx,0x200
   10000cd7d:	mov    QWORD PTR [rsp+0x20],rdi
   10000cd82:	call   0x10000eb40
   10000cd87:	mov    rcx,rdi
   10000cd8a:	test   eax,eax
   10000cd8c:	js     0x10000cd96
   10000cd8e:	lea    rcx,[rsp+0x80]
   10000cd96:	call   0x100015fc0
   10000cd9b:	or     rsi,0xffffffffffffffff
   10000cd9f:	mov    rax,rsi
   10000cda2:	inc    rax
   10000cda5:	cmp    WORD PTR [rbp+rax*2+0x0],r14w
   10000cdab:	jne    0x10000cda2
   10000cdad:	mov    rcx,QWORD PTR [rip+0x2bb5c]        # 0x100038910
   10000cdb4:	mov    DWORD PTR [rip+0x1f7a6],eax        # 0x10002c560
   10000cdba:	mov    edx,0x105
   10000cdbf:	add    rcx,0x81ca
   10000cdc6:	mov    edi,r14d
   10000cdc9:	nop    DWORD PTR [rax+0x0]
   10000cdd0:	lea    rax,[rdx+0x7ffffef9]
   10000cdd7:	test   rax,rax
   10000cdda:	je     0x10000cdf6
   10000cddc:	movzx  eax,WORD PTR [rbx]
   10000cddf:	test   ax,ax
   10000cde2:	je     0x10000cdf6
   10000cde4:	mov    WORD PTR [rcx],ax
   10000cde7:	add    rcx,0x2
   10000cdeb:	add    rbx,0x2
   10000cdef:	dec    rdx
   10000cdf2:	jne    0x10000cdd0
   10000cdf4:	jmp    0x10000cdfb
   10000cdf6:	test   rdx,rdx
   10000cdf9:	jne    0x10000ce04
   10000cdfb:	sub    rcx,0x2
   10000cdff:	mov    edi,0x8007007a
   10000ce04:	mov    WORD PTR [rcx],r14w
   10000ce08:	test   edi,edi
   10000ce0a:	jns    0x10000ce5a
   10000ce0c:	mov    ecx,edi
   10000ce0e:	call   QWORD PTR [rip+0xffffffffffff48a4]        # 0x1000016b8
   10000ce14:	call   QWORD PTR [rip+0xffffffffffff4e1e]        # 0x100001c38
   10000ce1a:	lea    rbx,[rip+0x187]        # 0x10000cfa8
   10000ce21:	lea    r8,[rip+0xffffffffffff6998]        # 0x1000037c0
   10000ce28:	lea    rcx,[rsp+0x80]
   10000ce30:	mov    r9,rax
   10000ce33:	mov    edx,0x200
   10000ce38:	mov    DWORD PTR [rsp+0x28],edi
   10000ce3c:	mov    QWORD PTR [rsp+0x20],rbx
   10000ce41:	call   0x10000eb40
   10000ce46:	mov    rcx,rbx
   10000ce49:	test   eax,eax
   10000ce4b:	js     0x10000ce55
   10000ce4d:	lea    rcx,[rsp+0x80]
   10000ce55:	call   0x100015fc0
   10000ce5a:	lea    rdx,[rsp+0x30]
   10000ce5f:	lea    rcx,[rsp+0x38]
   10000ce64:	call   QWORD PTR [rip+0xffffffffffff424e]        # 0x1000010b8
   10000ce6a:	test   eax,eax
   10000ce6c:	je     0x10000ceec
   10000ce6e:	mov    rdi,QWORD PTR [rip+0x2ba9b]        # 0x100038910
   10000ce75:	lea    rbx,[rdi+0x81ca]
   10000ce7c:	call   QWORD PTR [rip+0xffffffffffff4db6]        # 0x100001c38
   10000ce82:	lea    rcx,[rdi+0x87e8]
   10000ce89:	mov    r9,rax
   10000ce8c:	lea    rax,[rsp+0x38]
   10000ce91:	lea    r8,[rip+0xffffffffffff6700]        # 0x100003598
   10000ce98:	mov    edx,0x105
   10000ce9d:	mov    QWORD PTR [rsp+0x28],rbx
   10000cea2:	mov    QWORD PTR [rsp+0x20],rax
   10000cea7:	call   QWORD PTR [rip+0xffffffffffff4523]        # 0x1000013d0
   10000cead:	mov    rax,QWORD PTR [rip+0x2ba5c]        # 0x100038910
   10000ceb4:	mov    WORD PTR [rax+0x89f0],r14w
   10000cebc:	mov    rax,QWORD PTR [rip+0x2ba4d]        # 0x100038910
   10000cec3:	lea    rcx,[rax+0x87e8]
   10000ceca:	mov    QWORD PTR [rax+0x3ce0],rcx
   10000ced1:	inc    rsi
   10000ced4:	cmp    WORD PTR [rcx+rsi*2],r14w
   10000ced9:	jne    0x10000ced1
   10000cedb:	mov    rax,QWORD PTR [rip+0x2ba2e]        # 0x100038910
   10000cee2:	add    esi,esi
   10000cee4:	mov    DWORD PTR [rax+0x3ce8],esi
   10000ceea:	jmp    0x10000cf0c
   10000ceec:	call   QWORD PTR [rip+0xffffffffffff423e]        # 0x100001130
   10000cef2:	test   eax,eax
   10000cef4:	jle    0x10000cefe
   10000cef6:	movzx  eax,ax
   10000cef9:	or     eax,0x80070000
   10000cefe:	lea    rdx,[rip+0xdb]        # 0x10000cfe0
   10000cf05:	mov    ecx,eax
   10000cf07:	call   0x100015f20
   10000cf0c:	mov    rcx,QWORD PTR [rip+0x2b9fd]        # 0x100038910
   10000cf13:	mov    edx,0x105
   10000cf18:	lea    r8,[rcx+0x81ca]
   10000cf1f:	add    rcx,0x8bfc
   10000cf26:	mov    r9d,edx
   10000cf29:	call   QWORD PTR [rip+0xffffffffffff4499]        # 0x1000013c8
   10000cf2f:	mov    rax,QWORD PTR [rip+0x2b9da]        # 0x100038910
   10000cf36:	mov    WORD PTR [rax+0x8e04],r14w
   10000cf3e:	mov    rcx,QWORD PTR [rsp+0x280]
   10000cf46:	xor    rcx,rsp
   10000cf49:	call   0x100002610
   10000cf4e:	lea    r11,[rsp+0x290]
   10000cf56:	mov    rbx,QWORD PTR [r11+0x10]
   10000cf5a:	mov    rbp,QWORD PTR [r11+0x18]
   10000cf5e:	mov    rsi,QWORD PTR [r11+0x20]
   10000cf62:	mov    rdi,QWORD PTR [r11+0x28]
   10000cf66:	mov    rsp,r11
   10000cf69:	pop    r14
   10000cf6b:	ret    
   10000cf6c:	nop
   10000cf6d:	nop
   10000cf6e:	nop
   10000cf6f:	nop
   10000cf70:	rex.WRB add BYTE PTR [r11+0x0],r9b
   10000cf74:	rex.WRB add BYTE PTR [r9+0x0],r8b
   10000cf78:	push   rbx
   10000cf79:	add    BYTE PTR [rax+rax*1+0x52],dl
   10000cf7d:	add    BYTE PTR [rax],al
   10000cf7f:	add    BYTE PTR [rbx+0x74],dl
   10000cf82:	jb     0x10000cfed
   10000cf84:	outs   dx,BYTE PTR ds:[rsi]
   10000cf85:	and    BYTE PTR [ebx+0x6f],ah
   10000cf89:	jo     0x10000d004
   10000cf8b:	and    BYTE PTR [rsi+0x61],ah
   10000cf8e:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x62282065
   10000cf96:	jne    0x10000d001
   10000cf98:	ins    BYTE PTR es:[rdi],dx
   10000cf99:	and    BYTE PTR fs:[rcx+0x6e],ch
   10000cf9d:	jae    0x10000d013
   10000cf9f:	(bad)  
   10000cfa0:	outs   dx,BYTE PTR ds:[rsi]
   10000cfa1:	movsxd esp,DWORD PTR [rbp+0x20]
   10000cfa4:	rex.WB
   10000cfa5:	sub    DWORD PTR [rax],r8d
   10000cfa8:	push   rbx
   10000cfa9:	je     0x10000d01d
   10000cfab:	imul   ebp,DWORD PTR [rsi+0x67],0x706f6320
   10000cfb2:	jns    0x10000cfd4
   10000cfb4:	data16 (bad) 
   10000cfb6:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x62282065
   10000cfbe:	jne    0x10000d029
   10000cfc0:	ins    BYTE PTR es:[rdi],dx
   10000cfc1:	and    BYTE PTR fs:[rcx+0x6e],ch
   10000cfc5:	jae    0x10000d03b
   10000cfc7:	(bad)  
   10000cfc8:	outs   dx,BYTE PTR ds:[rsi]
   10000cfc9:	movsxd esp,DWORD PTR [rbp+0x20]
   10000cfcc:	outs   dx,BYTE PTR ds:[rsi]
   10000cfcd:	(bad)  
   10000cfce:	ins    DWORD PTR es:[rdi],dx
   10000cfcf:	sub    DWORD PTR gs:[rax],eax
   10000cfd2:	nop
   10000cfd3:	nop
   10000cfd4:	nop
   10000cfd5:	nop
   10000cfd6:	nop
   10000cfd7:	nop
   10000cfd8:	nop
   10000cfd9:	nop
   10000cfda:	nop
   10000cfdb:	nop
   10000cfdc:	nop
   10000cfdd:	nop
   10000cfde:	nop
   10000cfdf:	nop
   10000cfe0:	rex.RXB
   10000cfe1:	gs je  0x10000d027
   10000cfe4:	outs   dx,DWORD PTR ds:[rsi]
   10000cfe5:	ins    DWORD PTR es:[rdi],dx
   10000cfe6:	jo     0x10000d05d
   10000cfe8:	je     0x10000d04f
   10000cfea:	jb     0x10000d03a
   10000cfec:	(bad)  
   10000cfed:	ins    DWORD PTR es:[rdi],dx
   10000cfee:	sub    BYTE PTR gs:[rcx],ch
   10000cff1:	and    BYTE PTR [rcx+0x6e],ch
   10000cff4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   10000cffc:	je     0x10000d067
   10000cffe:	outs   dx,DWORD PTR ds:[rsi]
   10000cfff:	outs   dx,BYTE PTR ds:[rsi]
   10000d000:	and    BYTE PTR [rsi+0x61],ah
   10000d003:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6241202e
   10000d00b:	outs   dx,DWORD PTR ds:[rsi]
   10000d00c:	jb     0x10000d082
   10000d00e:	imul   ebp,DWORD PTR [rsi+0x67],0x696e4920
   10000d015:	je     0x10000d080
   10000d017:	ins    BYTE PTR es:[rdi],dx
   10000d018:	imul   esp,DWORD PTR [rcx+0x6c],0x74617a69
   10000d01f:	imul   ebp,DWORD PTR [rdi+0x6e],0x90909000
   10000d026:	nop
   10000d027:	nop
   10000d028:	nop
   10000d029:	nop
   10000d02a:	nop
   10000d02b:	nop
   10000d02c:	nop
   10000d02d:	nop
   10000d02e:	nop
   10000d02f:	nop
   10000d030:	sub    rsp,0x38
   10000d034:	mov    ecx,0x74
   10000d039:	call   QWORD PTR [rip+0xffffffffffff46f9]        # 0x100001738
   10000d03f:	lea    r8,[rip+0x2dfda]        # 0x10003b020
   10000d046:	lea    rdx,[rip+0x2e013]        # 0x10003b060
   10000d04d:	mov    r9d,0x102a
   10000d053:	mov    ecx,0x1
   10000d058:	mov    QWORD PTR [rsp+0x20],0x0
   10000d061:	call   QWORD PTR [rip+0xffffffffffff4af1]        # 0x100001b58
   10000d067:	xor    eax,eax
   10000d069:	add    rsp,0x38
   10000d06d:	ret    
   10000d06e:	nop
   10000d06f:	nop
   10000d070:	nop
   10000d071:	nop
   10000d072:	nop
   10000d073:	nop
   10000d074:	nop
   10000d075:	nop
   10000d076:	nop
   10000d077:	nop
   10000d078:	nop
   10000d079:	nop
   10000d07a:	nop
   10000d07b:	nop
   10000d07c:	nop
   10000d07d:	nop
   10000d07e:	nop
   10000d07f:	nop
   10000d080:	push   rbx
   10000d082:	sub    rsp,0x20
   10000d086:	mov    rbx,rcx
   10000d089:	lea    rcx,[rip+0x328]        # 0x10000d3b8
   10000d090:	call   QWORD PTR [rip+0xffffffffffff400a]        # 0x1000010a0
   10000d096:	lea    rdx,[rip+0x30b]        # 0x10000d3a8
   10000d09d:	mov    rcx,rax
   10000d0a0:	call   QWORD PTR [rip+0xffffffffffff41a2]        # 0x100001248
   10000d0a6:	mov    QWORD PTR [rbx+0x10],rax
   10000d0aa:	test   rax,rax
   10000d0ad:	jne    0x10000d0b5
   10000d0af:	add    rsp,0x20
   10000d0b3:	pop    rbx
   10000d0b4:	ret    
   10000d0b5:	lea    rcx,[rip+0xffffffffffff64ec]        # 0x1000035a8
   10000d0bc:	mov    QWORD PTR [rsp+0x30],rdi
   10000d0c1:	call   0x1000161b0
   10000d0c6:	mov    rdi,rax
   10000d0c9:	test   rax,rax
   10000d0cc:	je     0x10000d39a
   10000d0d2:	lea    rdx,[rip+0x2ff]        # 0x10000d3d8
   10000d0d9:	mov    rcx,rax
   10000d0dc:	call   QWORD PTR [rip+0xffffffffffff4166]        # 0x100001248
   10000d0e2:	mov    QWORD PTR [rbx+0x18],rax
   10000d0e6:	test   rax,rax
   10000d0e9:	je     0x10000d39a
   10000d0ef:	lea    rdx,[rip+0x2f2]        # 0x10000d3e8
   10000d0f6:	mov    rcx,rdi
   10000d0f9:	call   QWORD PTR [rip+0xffffffffffff4149]        # 0x100001248
   10000d0ff:	mov    QWORD PTR [rbx+0x20],rax
   10000d103:	test   rax,rax
   10000d106:	je     0x10000d39a
   10000d10c:	lea    rdx,[rip+0x2e5]        # 0x10000d3f8
   10000d113:	mov    rcx,rdi
   10000d116:	call   QWORD PTR [rip+0xffffffffffff412c]        # 0x100001248
   10000d11c:	mov    QWORD PTR [rbx+0x40],rax
   10000d120:	test   rax,rax
   10000d123:	je     0x10000d39a
   10000d129:	lea    rdx,[rip+0x2e0]        # 0x10000d410
   10000d130:	mov    rcx,rdi
   10000d133:	call   QWORD PTR [rip+0xffffffffffff410f]        # 0x100001248
   10000d139:	mov    QWORD PTR [rbx+0x48],rax
   10000d13d:	test   rax,rax
   10000d140:	je     0x10000d39a
   10000d146:	lea    rdx,[rip+0x2db]        # 0x10000d428
   10000d14d:	mov    rcx,rdi
   10000d150:	call   QWORD PTR [rip+0xffffffffffff40f2]        # 0x100001248
   10000d156:	mov    QWORD PTR [rbx+0x50],rax
   10000d15a:	test   rax,rax
   10000d15d:	je     0x10000d39a
   10000d163:	lea    rdx,[rip+0x2d6]        # 0x10000d440
   10000d16a:	mov    rcx,rdi
   10000d16d:	call   QWORD PTR [rip+0xffffffffffff40d5]        # 0x100001248
   10000d173:	mov    QWORD PTR [rbx+0x58],rax
   10000d177:	test   rax,rax
   10000d17a:	je     0x10000d39a
   10000d180:	lea    rdx,[rip+0x2d1]        # 0x10000d458
   10000d187:	mov    rcx,rdi
   10000d18a:	call   QWORD PTR [rip+0xffffffffffff40b8]        # 0x100001248
   10000d190:	mov    QWORD PTR [rbx+0x60],rax
   10000d194:	test   rax,rax
   10000d197:	je     0x10000d39a
   10000d19d:	lea    rdx,[rip+0x2cc]        # 0x10000d470
   10000d1a4:	mov    rcx,rdi
   10000d1a7:	call   QWORD PTR [rip+0xffffffffffff409b]        # 0x100001248
   10000d1ad:	mov    QWORD PTR [rbx+0x68],rax
   10000d1b1:	test   rax,rax
   10000d1b4:	je     0x10000d39a
   10000d1ba:	lea    rdx,[rip+0x2bf]        # 0x10000d480
   10000d1c1:	mov    rcx,rdi
   10000d1c4:	call   QWORD PTR [rip+0xffffffffffff407e]        # 0x100001248
   10000d1ca:	mov    QWORD PTR [rbx+0x70],rax
   10000d1ce:	test   rax,rax
   10000d1d1:	je     0x10000d39a
   10000d1d7:	lea    rdx,[rip+0x2b2]        # 0x10000d490
   10000d1de:	mov    rcx,rdi
   10000d1e1:	call   QWORD PTR [rip+0xffffffffffff4061]        # 0x100001248
   10000d1e7:	mov    QWORD PTR [rbx+0x78],rax
   10000d1eb:	test   rax,rax
   10000d1ee:	je     0x10000d39a
   10000d1f4:	lea    rdx,[rip+0x2ad]        # 0x10000d4a8
   10000d1fb:	mov    rcx,rdi
   10000d1fe:	call   QWORD PTR [rip+0xffffffffffff4044]        # 0x100001248
   10000d204:	mov    QWORD PTR [rbx+0x80],rax
   10000d20b:	test   rax,rax
   10000d20e:	je     0x10000d39a
   10000d214:	lea    rdx,[rip+0x2a5]        # 0x10000d4c0
   10000d21b:	mov    rcx,rdi
   10000d21e:	call   QWORD PTR [rip+0xffffffffffff4024]        # 0x100001248
   10000d224:	mov    QWORD PTR [rbx+0x88],rax
   10000d22b:	test   rax,rax
   10000d22e:	je     0x10000d39a
   10000d234:	lea    rdx,[rip+0x29d]        # 0x10000d4d8
   10000d23b:	mov    rcx,rdi
   10000d23e:	call   QWORD PTR [rip+0xffffffffffff4004]        # 0x100001248
   10000d244:	mov    QWORD PTR [rbx+0x90],rax
   10000d24b:	test   rax,rax
   10000d24e:	je     0x10000d39a
   10000d254:	lea    rdx,[rip+0x29d]        # 0x10000d4f8
   10000d25b:	mov    rcx,rdi
   10000d25e:	call   QWORD PTR [rip+0xffffffffffff3fe4]        # 0x100001248
   10000d264:	mov    QWORD PTR [rbx+0x98],rax
   10000d26b:	test   rax,rax
   10000d26e:	je     0x10000d39a
   10000d274:	lea    rdx,[rip+0x295]        # 0x10000d510
   10000d27b:	mov    rcx,rdi
   10000d27e:	call   QWORD PTR [rip+0xffffffffffff3fc4]        # 0x100001248
   10000d284:	mov    QWORD PTR [rbx+0xa8],rax
   10000d28b:	test   rax,rax
   10000d28e:	je     0x10000d39a
   10000d294:	lea    rdx,[rip+0x285]        # 0x10000d520
   10000d29b:	mov    rcx,rdi
   10000d29e:	call   QWORD PTR [rip+0xffffffffffff3fa4]        # 0x100001248
   10000d2a4:	mov    QWORD PTR [rbx+0xb0],rax
   10000d2ab:	test   rax,rax
   10000d2ae:	je     0x10000d39a
   10000d2b4:	lea    rdx,[rip+0xffffffffffff62fd]        # 0x1000035b8
   10000d2bb:	mov    rcx,rdi
   10000d2be:	call   QWORD PTR [rip+0xffffffffffff3f84]        # 0x100001248
   10000d2c4:	mov    QWORD PTR [rbx+0xb8],rax
   10000d2cb:	test   rax,rax
   10000d2ce:	je     0x10000d39a
   10000d2d4:	lea    rdx,[rip+0x25d]        # 0x10000d538
   10000d2db:	mov    rcx,rdi
   10000d2de:	call   QWORD PTR [rip+0xffffffffffff3f64]        # 0x100001248
   10000d2e4:	mov    QWORD PTR [rbx+0xc0],rax
   10000d2eb:	test   rax,rax
   10000d2ee:	je     0x10000d39a
   10000d2f4:	lea    rdx,[rip+0x255]        # 0x10000d550
   10000d2fb:	mov    rcx,rdi
   10000d2fe:	call   QWORD PTR [rip+0xffffffffffff3f44]        # 0x100001248
   10000d304:	mov    QWORD PTR [rbx+0xc8],rax
   10000d30b:	test   rax,rax
   10000d30e:	je     0x10000d39a
   10000d314:	lea    rdx,[rip+0x24d]        # 0x10000d568
   10000d31b:	mov    rcx,rdi
   10000d31e:	call   QWORD PTR [rip+0xffffffffffff3f24]        # 0x100001248
   10000d324:	mov    QWORD PTR [rbx+0xd0],rax
   10000d32b:	test   rax,rax
   10000d32e:	je     0x10000d39a
   10000d330:	lea    rdx,[rip+0x249]        # 0x10000d580
   10000d337:	mov    rcx,rdi
   10000d33a:	call   QWORD PTR [rip+0xffffffffffff3f08]        # 0x100001248
   10000d340:	mov    QWORD PTR [rbx+0xd8],rax
   10000d347:	test   rax,rax
   10000d34a:	je     0x10000d39a
   10000d34c:	lea    rcx,[rip+0xffffffffffff627d]        # 0x1000035d0
   10000d353:	mov    QWORD PTR [rbx],rdi
   10000d356:	call   0x1000161b0
   10000d35b:	mov    rdi,rax
   10000d35e:	test   rax,rax
   10000d361:	je     0x10000d39a
   10000d363:	lea    rdx,[rip+0x22e]        # 0x10000d598
   10000d36a:	mov    rcx,rax
   10000d36d:	call   QWORD PTR [rip+0xffffffffffff3ed5]        # 0x100001248
   10000d373:	mov    QWORD PTR [rbx+0xa0],rax
   10000d37a:	test   rax,rax
   10000d37d:	je     0x10000d39a
   10000d37f:	or     DWORD PTR [rbx+0x258],0x1
   10000d386:	mov    QWORD PTR [rbx+0x8],rdi
   10000d38a:	mov    rdi,QWORD PTR [rsp+0x30]
   10000d38f:	mov    eax,0x1
   10000d394:	add    rsp,0x20
   10000d398:	pop    rbx
   10000d399:	ret    
   10000d39a:	xor    eax,eax
   10000d39c:	mov    rdi,QWORD PTR [rsp+0x30]
   10000d3a1:	add    rsp,0x20
   10000d3a5:	pop    rbx
   10000d3a6:	ret    
   10000d3a7:	nop
   10000d3a8:	rex.RXB
   10000d3a9:	gs je  0x10000d400
   10000d3ac:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   10000d3b3:	je     0x10000d3eb
   10000d3b5:	xor    al,0x0
   10000d3b7:	nop
   10000d3b8:	rex.WXB add BYTE PTR [r13+0x0],al
   10000d3bc:	push   rdx
   10000d3bd:	add    BYTE PTR [rsi+0x0],cl
   10000d3c0:	add    BYTE PTR [r8+rax*1+0x33],r9b
   10000d3c5:	add    BYTE PTR [rdx],dh
   10000d3c7:	add    BYTE PTR [rsi],ch
   10000d3c9:	add    BYTE PTR [rax+rax*1+0x4c],al
   10000d3cd:	add    BYTE PTR [rax+rax*1+0x0],cl
   10000d3d1:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000d3d7:	nop
   10000d3d8:	rex.WRXB jo 0x10000d440
   10000d3db:	outs   dx,BYTE PTR ds:[rsi]
   10000d3dc:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d3de:	jne    0x10000d453
   10000d3e0:	je     0x10000d447
   10000d3e2:	jb     0x10000d3e4
   10000d3e4:	nop
   10000d3e5:	nop
   10000d3e6:	nop
   10000d3e7:	nop
   10000d3e8:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d3ea:	outs   dx,DWORD PTR ds:[rsi]
   10000d3eb:	jae    0x10000d452
   10000d3ed:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d3ef:	jne    0x10000d464
   10000d3f1:	je     0x10000d458
   10000d3f3:	jb     0x10000d3f5
   10000d3f5:	nop
   10000d3f6:	nop
   10000d3f7:	nop
   10000d3f8:	rex.WRXB jo 0x10000d460
   10000d3fb:	outs   dx,BYTE PTR ds:[rsi]
   10000d3fc:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d3fe:	jne    0x10000d473
   10000d400:	je     0x10000d467
   10000d402:	jb     0x10000d44b
   10000d404:	jb     0x10000d475
   10000d406:	jne    0x10000d478
   10000d408:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000d40e:	nop
   10000d40f:	nop
   10000d410:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d412:	outs   dx,DWORD PTR ds:[rsi]
   10000d413:	jae    0x10000d47a
   10000d415:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d417:	jne    0x10000d48c
   10000d419:	je     0x10000d480
   10000d41b:	jb     0x10000d464
   10000d41d:	jb     0x10000d48e
   10000d41f:	jne    0x10000d491
   10000d421:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000d427:	nop
   10000d428:	rex.WRXB jo 0x10000d490
   10000d42b:	outs   dx,BYTE PTR ds:[rsi]
   10000d42c:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d42e:	jne    0x10000d4a3
   10000d430:	je     0x10000d497
   10000d432:	jb     0x10000d486
   10000d434:	gs jae 0x10000d4a6
   10000d437:	jne    0x10000d4ab
   10000d439:	movsxd esp,DWORD PTR [rbp+0x0]
   10000d43c:	nop
   10000d43d:	nop
   10000d43e:	nop
   10000d43f:	nop
   10000d440:	rex.RXB
   10000d441:	gs je  0x10000d487
   10000d444:	ins    BYTE PTR es:[rdi],dx
   10000d445:	jne    0x10000d4ba
   10000d447:	je     0x10000d4ae
   10000d449:	jb     0x10000d49d
   10000d44b:	gs jae 0x10000d4bd
   10000d44e:	jne    0x10000d4c2
   10000d450:	movsxd esp,DWORD PTR [rbp+0x53]
   10000d453:	je     0x10000d4b6
   10000d455:	je     0x10000d4bc
   10000d457:	add    BYTE PTR [rbx+0x6c],al
   10000d45a:	outs   dx,DWORD PTR ds:[rsi]
   10000d45b:	jae    0x10000d4c2
   10000d45d:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d45f:	jne    0x10000d4d4
   10000d461:	je     0x10000d4c8
   10000d463:	jb     0x10000d4b7
   10000d465:	gs jae 0x10000d4d7
   10000d468:	jne    0x10000d4dc
   10000d46a:	movsxd esp,DWORD PTR [rbp+0x0]
   10000d46d:	nop
   10000d46e:	nop
   10000d46f:	nop
   10000d470:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d472:	jne    0x10000d4e7
   10000d474:	je     0x10000d4db
   10000d476:	jb     0x10000d4c7
   10000d478:	jo     0x10000d4df
   10000d47a:	outs   dx,BYTE PTR ds:[rsi]
   10000d47b:	rex.RB outs dx,BYTE PTR ds:[rsi]
   10000d47d:	jne    0x10000d4ec
   10000d47f:	add    BYTE PTR [rbx+0x6c],al
   10000d482:	jne    0x10000d4f7
   10000d484:	je     0x10000d4eb
   10000d486:	jb     0x10000d4cd
   10000d488:	outs   dx,BYTE PTR ds:[rsi]
   10000d489:	jne    0x10000d4f8
   10000d48b:	add    BYTE PTR [rax+0x43909090],dl
   10000d491:	ins    BYTE PTR es:[rdi],dx
   10000d492:	jne    0x10000d507
   10000d494:	je     0x10000d4fb
   10000d496:	jb     0x10000d4db
   10000d498:	ins    BYTE PTR es:[rdi],dx
   10000d499:	outs   dx,DWORD PTR ds:[rsi]
   10000d49a:	jae    0x10000d501
   10000d49c:	rex.RB outs dx,BYTE PTR ds:[rsi]
   10000d49e:	jne    0x10000d50d
   10000d4a0:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000d4a6:	nop
   10000d4a7:	nop
   10000d4a8:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d4aa:	jne    0x10000d51f
   10000d4ac:	je     0x10000d513
   10000d4ae:	jb     0x10000d502
   10000d4b0:	gs jae 0x10000d522
   10000d4b3:	jne    0x10000d527
   10000d4b5:	movsxd esp,DWORD PTR [rbp+0x4f]
   10000d4b8:	jo     0x10000d51f
   10000d4ba:	outs   dx,BYTE PTR ds:[rsi]
   10000d4bb:	rex.RB outs dx,BYTE PTR ds:[rsi]
   10000d4bd:	jne    0x10000d52c
   10000d4bf:	add    BYTE PTR [rbx+0x6c],al
   10000d4c2:	jne    0x10000d537
   10000d4c4:	je     0x10000d52b
   10000d4c6:	jb     0x10000d51a
   10000d4c8:	gs jae 0x10000d53a
   10000d4cb:	jne    0x10000d53f
   10000d4cd:	movsxd esp,DWORD PTR [rbp+0x45]
   10000d4d0:	outs   dx,BYTE PTR ds:[rsi]
   10000d4d1:	jne    0x10000d540
   10000d4d3:	add    BYTE PTR [rax+0x43909090],dl
   10000d4d9:	ins    BYTE PTR es:[rdi],dx
   10000d4da:	jne    0x10000d54f
   10000d4dc:	je     0x10000d543
   10000d4de:	jb     0x10000d532
   10000d4e0:	gs jae 0x10000d552
   10000d4e3:	jne    0x10000d557
   10000d4e5:	movsxd esp,DWORD PTR [rbp+0x43]
   10000d4e8:	ins    BYTE PTR es:[rdi],dx
   10000d4e9:	outs   dx,DWORD PTR ds:[rsi]
   10000d4ea:	jae    0x10000d551
   10000d4ec:	rex.RB outs dx,BYTE PTR ds:[rsi]
   10000d4ee:	jne    0x10000d55d
   10000d4f0:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000d4f6:	nop
   10000d4f7:	nop
   10000d4f8:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d4fa:	jne    0x10000d56f
   10000d4fc:	je     0x10000d563
   10000d4fe:	jb     0x10000d552
   10000d500:	gs jae 0x10000d572
   10000d503:	jne    0x10000d577
   10000d505:	movsxd esp,DWORD PTR [rbp+0x43]
   10000d508:	outs   dx,DWORD PTR ds:[rsi]
   10000d509:	outs   dx,BYTE PTR ds:[rsi]
   10000d50a:	je     0x10000d57e
   10000d50c:	outs   dx,DWORD PTR ds:[rsi]
   10000d50d:	ins    BYTE PTR es:[rdi],dx
   10000d50e:	add    BYTE PTR [rax+0x6e65704f],dl
   10000d514:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d516:	jne    0x10000d58b
   10000d518:	je     0x10000d57f
   10000d51a:	jb     0x10000d56a
   10000d51c:	outs   dx,DWORD PTR ds:[rsi]
   10000d51d:	fs add BYTE PTR gs:[rbx+0x6c],al
   10000d522:	outs   dx,DWORD PTR ds:[rsi]
   10000d523:	jae    0x10000d58a
   10000d525:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d527:	jne    0x10000d59c
   10000d529:	je     0x10000d590
   10000d52b:	jb     0x10000d57b
   10000d52d:	outs   dx,DWORD PTR ds:[rsi]
   10000d52e:	fs add BYTE PTR gs:[rax-0x6f6f6f70],dl
   10000d536:	nop
   10000d537:	nop
   10000d538:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d53a:	jne    0x10000d5af
   10000d53c:	je     0x10000d5a3
   10000d53e:	jb     0x10000d592
   10000d540:	gs addr32 rex.WRXB jo 0x10000d5aa
   10000d545:	outs   dx,BYTE PTR ds:[rsi]
   10000d546:	rex.WXB
   10000d547:	gs jns 0x10000d54a
   10000d54a:	nop
   10000d54b:	nop
   10000d54c:	nop
   10000d54d:	nop
   10000d54e:	nop
   10000d54f:	nop
   10000d550:	rex.RXB
   10000d551:	gs je  0x10000d597
   10000d554:	ins    BYTE PTR es:[rdi],dx
   10000d555:	jne    0x10000d5ca
   10000d557:	je     0x10000d5be
   10000d559:	jb     0x10000d5ad
   10000d55b:	gs jae 0x10000d5cd
   10000d55e:	jne    0x10000d5d2
   10000d560:	movsxd esp,DWORD PTR [rbp+0x4b]
   10000d563:	gs jns 0x10000d566
   10000d566:	nop
   10000d567:	nop
   10000d568:	rex.XB ins BYTE PTR es:[rdi],dx
   10000d56a:	jne    0x10000d5df
   10000d56c:	je     0x10000d5d3
   10000d56e:	jb     0x10000d5c2
   10000d570:	gs addr32 push rcx
   10000d573:	jne    0x10000d5da
   10000d575:	jb     0x10000d5f0
   10000d577:	push   rsi
   10000d578:	(bad)  
   10000d579:	ins    BYTE PTR es:[rdi],dx
   10000d57a:	jne    0x10000d5e1
   10000d57c:	add    BYTE PTR [rax+0x6c439090],dl
   10000d582:	jne    0x10000d5f7
   10000d584:	je     0x10000d5eb
   10000d586:	jb     0x10000d5da
   10000d588:	gs rex.XB ins BYTE PTR es:[edi],dx
   10000d58c:	outs   dx,DWORD PTR ds:[rsi]
   10000d58d:	jae    0x10000d5f4
   10000d58f:	rex.WXB
   10000d590:	gs jns 0x10000d593
   10000d593:	nop
   10000d594:	nop
   10000d595:	nop
   10000d596:	nop
   10000d597:	nop
   10000d598:	push   rdx
   10000d599:	gs jae 0x10000d5f1
   10000d59c:	je     0x10000d607
   10000d59e:	ins    BYTE PTR es:[rdi],dx
   10000d59f:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x72507a53
   10000d5a7:	outs   dx,DWORD PTR ds:[rsi]
   10000d5a8:	jo     0x10000d60f
   10000d5aa:	jb     0x10000d620
   10000d5ac:	jns    0x10000d5ae
   10000d5ae:	nop
   10000d5af:	nop
   10000d5b0:	nop
   10000d5b1:	nop
   10000d5b2:	nop
   10000d5b3:	nop
   10000d5b4:	nop
   10000d5b5:	nop
   10000d5b6:	nop
   10000d5b7:	nop
   10000d5b8:	nop
   10000d5b9:	nop
   10000d5ba:	nop
   10000d5bb:	nop
   10000d5bc:	nop
   10000d5bd:	nop
   10000d5be:	nop
   10000d5bf:	nop
   10000d5c0:	mov    ecx,edx
   10000d5c2:	jmp    0x100005170
   10000d5c7:	nop
   10000d5c8:	nop
   10000d5c9:	nop
   10000d5ca:	nop
   10000d5cb:	nop
   10000d5cc:	nop
   10000d5cd:	nop
   10000d5ce:	nop
   10000d5cf:	nop
   10000d5d0:	mov    QWORD PTR [rsp+0x8],rbx
   10000d5d5:	push   rdi
   10000d5d6:	sub    rsp,0x20
   10000d5da:	mov    ecx,r8d
   10000d5dd:	mov    ebx,r9d
   10000d5e0:	mov    edi,edx
   10000d5e2:	call   QWORD PTR [rip+0xffffffffffff40d8]        # 0x1000016c0
   10000d5e8:	mov    ecx,ebx
   10000d5ea:	call   QWORD PTR [rip+0xffffffffffff40c8]        # 0x1000016b8
   10000d5f0:	mov    ecx,edi
   10000d5f2:	mov    rbx,QWORD PTR [rsp+0x30]
   10000d5f7:	add    rsp,0x20
   10000d5fb:	pop    rdi
   10000d5fc:	rex.W jmp QWORD PTR [rip+0xffffffffffff4535]        # 0x100001b38
   10000d603:	nop
   10000d604:	nop
   10000d605:	nop
   10000d606:	nop
   10000d607:	nop
   10000d608:	nop
   10000d609:	nop
   10000d60a:	nop
   10000d60b:	nop
   10000d60c:	nop
   10000d60d:	nop
   10000d60e:	nop
   10000d60f:	nop
   10000d610:	mov    ecx,edx
   10000d612:	jmp    0x1000052c0
   10000d617:	nop
   10000d618:	nop
   10000d619:	nop
   10000d61a:	nop
   10000d61b:	nop
   10000d61c:	nop
   10000d61d:	nop
   10000d61e:	nop
   10000d61f:	nop
   10000d620:	mov    ecx,edx
   10000d622:	jmp    0x100005340
   10000d627:	nop
   10000d628:	nop
   10000d629:	nop
   10000d62a:	nop
   10000d62b:	nop
   10000d62c:	nop
   10000d62d:	nop
   10000d62e:	nop
   10000d62f:	nop
   10000d630:	mov    eax,DWORD PTR [rip+0x1eb36]        # 0x10002c16c
   10000d636:	ret    
   10000d637:	nop
   10000d638:	nop
   10000d639:	nop
   10000d63a:	nop
   10000d63b:	nop
   10000d63c:	nop
   10000d63d:	nop
   10000d63e:	nop
   10000d63f:	nop
   10000d640:	mov    rax,QWORD PTR [rip+0x2b2c9]        # 0x100038910
   10000d647:	mov    DWORD PTR [rip+0x1eb1f],edx        # 0x10002c16c
   10000d64d:	or     DWORD PTR [rax+0x28],0x20
   10000d651:	ret    
   10000d652:	nop
   10000d653:	nop
   10000d654:	nop
   10000d655:	nop
   10000d656:	nop
   10000d657:	nop
   10000d658:	nop
   10000d659:	nop
   10000d65a:	nop
   10000d65b:	nop
   10000d65c:	nop
   10000d65d:	nop
   10000d65e:	nop
   10000d65f:	nop
   10000d660:	sub    rsp,0x58
   10000d664:	mov    rax,QWORD PTR [rip+0xffffffffffff4945]        # 0x100001fb0
   10000d66b:	mov    ecx,DWORD PTR [rax]
   10000d66d:	not    ecx
   10000d66f:	test   cl,0x1
   10000d672:	je     0x10000d687
   10000d674:	mov    rcx,QWORD PTR [rip+0xffffffffffff4385]        # 0x100001a00
   10000d67b:	or     edx,0xffffffff
   10000d67e:	mov    rcx,QWORD PTR [rcx]
   10000d681:	call   QWORD PTR [rip+0xffffffffffff3b01]        # 0x100001188
   10000d687:	xor    eax,eax
   10000d689:	lea    r8,[rsp+0x20]
   10000d68e:	lea    rcx,[rip+0x1c293]        # 0x100029928
   10000d695:	or     edx,0xffffffff
   10000d698:	mov    DWORD PTR [rsp+0x20],0x4002dd
   10000d6a0:	mov    QWORD PTR [rsp+0x28],rax
   10000d6a5:	mov    QWORD PTR [rsp+0x38],rax
   10000d6aa:	mov    QWORD PTR [rsp+0x30],rax
   10000d6af:	mov    QWORD PTR [rsp+0x40],rax
   10000d6b4:	call   0x10000ec50
   10000d6b9:	add    rsp,0x58
   10000d6bd:	ret    
   10000d6be:	nop
   10000d6bf:	nop
   10000d6c0:	nop
   10000d6c1:	nop
   10000d6c2:	nop
   10000d6c3:	nop
   10000d6c4:	nop
   10000d6c5:	nop
   10000d6c6:	nop
   10000d6c7:	nop
   10000d6c8:	nop
   10000d6c9:	nop
   10000d6ca:	nop
   10000d6cb:	nop
   10000d6cc:	nop
   10000d6cd:	nop
   10000d6ce:	nop
   10000d6cf:	nop
   10000d6d0:	jmp    0x100006c70
   10000d6d5:	nop
   10000d6d6:	nop
   10000d6d7:	nop
   10000d6d8:	nop
   10000d6d9:	nop
   10000d6da:	nop
   10000d6db:	nop
   10000d6dc:	nop
   10000d6dd:	nop
   10000d6de:	nop
   10000d6df:	nop
   10000d6e0:	jmp    0x100005070
   10000d6e5:	nop
   10000d6e6:	nop
   10000d6e7:	nop
   10000d6e8:	nop
   10000d6e9:	nop
   10000d6ea:	nop
   10000d6eb:	nop
   10000d6ec:	nop
   10000d6ed:	nop
   10000d6ee:	nop
   10000d6ef:	nop
   10000d6f0:	push   rbx
   10000d6f2:	sub    rsp,0x20
   10000d6f6:	mov    rax,QWORD PTR [rdx]
   10000d6f9:	mov    rbx,rdx
   10000d6fc:	lea    rdx,[rip+0x1f28d]        # 0x10002c990
   10000d703:	mov    r8d,0x258
   10000d709:	mov    rcx,rbx
   10000d70c:	call   QWORD PTR [rax+0x50]
   10000d70f:	mov    r11,QWORD PTR [rip+0xffffffffffff440a]        # 0x100001b20
   10000d716:	lea    rdx,[rsp+0x38]
   10000d71b:	mov    rcx,QWORD PTR [r11]
   10000d71e:	mov    rax,QWORD PTR [rcx]
   10000d721:	call   QWORD PTR [rax+0xa8]
   10000d727:	test   al,al
   10000d729:	je     0x10000d73f
   10000d72b:	mov    rax,QWORD PTR [rbx]
   10000d72e:	mov    rdx,QWORD PTR [rsp+0x38]
   10000d733:	mov    r8d,0x80
   10000d739:	mov    rcx,rbx
   10000d73c:	call   QWORD PTR [rax+0x50]
   10000d73f:	mov    rax,QWORD PTR [rip+0xffffffffffff43da]        # 0x100001b20
   10000d746:	lea    rdx,[rsp+0x40]
   10000d74b:	mov    rcx,QWORD PTR [rax]
   10000d74e:	mov    rax,QWORD PTR [rcx]
   10000d751:	call   QWORD PTR [rax+0xb0]
   10000d757:	test   al,al
   10000d759:	je     0x10000d76f
   10000d75b:	mov    rax,QWORD PTR [rbx]
   10000d75e:	mov    rdx,QWORD PTR [rsp+0x40]
   10000d763:	mov    r8d,0x80
   10000d769:	mov    rcx,rbx
   10000d76c:	call   QWORD PTR [rax+0x50]
   10000d76f:	mov    rax,QWORD PTR [rbx]
   10000d772:	lea    rdx,[rip+0x200c7]        # 0x10002d840
   10000d779:	mov    r8d,0xb0d0
   10000d77f:	mov    rcx,rbx
   10000d782:	call   QWORD PTR [rax+0x50]
   10000d785:	add    rsp,0x20
   10000d789:	pop    rbx
   10000d78a:	ret    
   10000d78b:	nop
   10000d78c:	nop
   10000d78d:	nop
   10000d78e:	nop
   10000d78f:	nop
   10000d790:	nop
   10000d791:	nop
   10000d792:	nop
   10000d793:	nop
   10000d794:	nop
   10000d795:	nop
   10000d796:	nop
   10000d797:	nop
   10000d798:	nop
   10000d799:	nop
   10000d79a:	nop
   10000d79b:	nop
   10000d79c:	nop
   10000d79d:	nop
   10000d79e:	nop
   10000d79f:	nop
   10000d7a0:	sub    rsp,0x28
   10000d7a4:	mov    rcx,QWORD PTR [rip+0x1e95d]        # 0x10002c108
   10000d7ab:	test   rcx,rcx
   10000d7ae:	jne    0x10000d7b7
   10000d7b0:	xor    al,al
   10000d7b2:	add    rsp,0x28
   10000d7b6:	ret    
   10000d7b7:	call   0x100006a50
   10000d7bc:	mov    al,0x1
   10000d7be:	add    rsp,0x28
   10000d7c2:	ret    
   10000d7c3:	nop
   10000d7c4:	nop
   10000d7c5:	nop
   10000d7c6:	nop
   10000d7c7:	nop
   10000d7c8:	nop
   10000d7c9:	nop
   10000d7ca:	nop
   10000d7cb:	nop
   10000d7cc:	nop
   10000d7cd:	nop
   10000d7ce:	nop
   10000d7cf:	nop
   10000d7d0:	mov    QWORD PTR [rsp+0x8],rbx
   10000d7d5:	push   rdi
   10000d7d6:	sub    rsp,0x20
   10000d7da:	mov    rbx,rcx
   10000d7dd:	lea    rcx,[rip+0xffffffffffff5dc4]        # 0x1000035a8
   10000d7e4:	call   0x1000161b0
   10000d7e9:	mov    rdi,rax
   10000d7ec:	test   rax,rax
   10000d7ef:	je     0x10000de5e
   10000d7f5:	lea    rdx,[rip+0x674]        # 0x10000de70
   10000d7fc:	mov    rcx,rax
   10000d7ff:	call   QWORD PTR [rip+0xffffffffffff3a43]        # 0x100001248
   10000d805:	mov    QWORD PTR [rbx+0xe0],rax
   10000d80c:	test   rax,rax
   10000d80f:	je     0x10000de5e
   10000d815:	lea    rdx,[rip+0xffffffffffff5d9c]        # 0x1000035b8
   10000d81c:	mov    rcx,rdi
   10000d81f:	call   QWORD PTR [rip+0xffffffffffff3a23]        # 0x100001248
   10000d825:	mov    QWORD PTR [rbx+0xb8],rax
   10000d82c:	test   rax,rax
   10000d82f:	je     0x10000de5e
   10000d835:	lea    rdx,[rip+0x64c]        # 0x10000de88
   10000d83c:	mov    rcx,rdi
   10000d83f:	call   QWORD PTR [rip+0xffffffffffff3a03]        # 0x100001248
   10000d845:	mov    QWORD PTR [rbx+0x28],rax
   10000d849:	test   rax,rax
   10000d84c:	je     0x10000de5e
   10000d852:	lea    rdx,[rip+0x647]        # 0x10000dea0
   10000d859:	mov    rcx,rdi
   10000d85c:	call   QWORD PTR [rip+0xffffffffffff39e6]        # 0x100001248
   10000d862:	mov    QWORD PTR [rbx+0x30],rax
   10000d866:	test   rax,rax
   10000d869:	je     0x10000de5e
   10000d86f:	lea    rdx,[rip+0x64a]        # 0x10000dec0
   10000d876:	mov    rcx,rdi
   10000d879:	call   QWORD PTR [rip+0xffffffffffff39c9]        # 0x100001248
   10000d87f:	mov    QWORD PTR [rbx+0x38],rax
   10000d883:	test   rax,rax
   10000d886:	je     0x10000de5e
   10000d88c:	lea    rdx,[rip+0x63d]        # 0x10000ded0
   10000d893:	mov    rcx,rdi
   10000d896:	call   QWORD PTR [rip+0xffffffffffff39ac]        # 0x100001248
   10000d89c:	mov    QWORD PTR [rbx+0xe8],rax
   10000d8a3:	test   rax,rax
   10000d8a6:	je     0x10000de5e
   10000d8ac:	lea    rdx,[rip+0x635]        # 0x10000dee8
   10000d8b3:	mov    rcx,rdi
   10000d8b6:	call   QWORD PTR [rip+0xffffffffffff398c]        # 0x100001248
   10000d8bc:	mov    QWORD PTR [rbx+0xf0],rax
   10000d8c3:	test   rax,rax
   10000d8c6:	je     0x10000de5e
   10000d8cc:	lea    rdx,[rip+0x62d]        # 0x10000df00
   10000d8d3:	mov    rcx,rdi
   10000d8d6:	call   QWORD PTR [rip+0xffffffffffff396c]        # 0x100001248
   10000d8dc:	mov    QWORD PTR [rbx+0xf8],rax
   10000d8e3:	test   rax,rax
   10000d8e6:	je     0x10000de5e
   10000d8ec:	lea    rdx,[rip+0x625]        # 0x10000df18
   10000d8f3:	mov    rcx,rdi
   10000d8f6:	call   QWORD PTR [rip+0xffffffffffff394c]        # 0x100001248
   10000d8fc:	mov    QWORD PTR [rbx+0x100],rax
   10000d903:	test   rax,rax
   10000d906:	je     0x10000de5e
   10000d90c:	lea    rdx,[rip+0x61d]        # 0x10000df30
   10000d913:	mov    rcx,rdi
   10000d916:	call   QWORD PTR [rip+0xffffffffffff392c]        # 0x100001248
   10000d91c:	mov    QWORD PTR [rbx+0x108],rax
   10000d923:	test   rax,rax
   10000d926:	je     0x10000de5e
   10000d92c:	lea    rdx,[rip+0x615]        # 0x10000df48
   10000d933:	mov    rcx,rdi
   10000d936:	call   QWORD PTR [rip+0xffffffffffff390c]        # 0x100001248
   10000d93c:	mov    QWORD PTR [rbx+0x110],rax
   10000d943:	test   rax,rax
   10000d946:	je     0x10000de5e
   10000d94c:	lea    rdx,[rip+0x60d]        # 0x10000df60
   10000d953:	mov    rcx,rdi
   10000d956:	call   QWORD PTR [rip+0xffffffffffff38ec]        # 0x100001248
   10000d95c:	mov    QWORD PTR [rbx+0x118],rax
   10000d963:	test   rax,rax
   10000d966:	je     0x10000de5e
   10000d96c:	lea    rdx,[rip+0x60d]        # 0x10000df80
   10000d973:	mov    rcx,rdi
   10000d976:	call   QWORD PTR [rip+0xffffffffffff38cc]        # 0x100001248
   10000d97c:	mov    QWORD PTR [rbx+0x120],rax
   10000d983:	test   rax,rax
   10000d986:	je     0x10000de5e
   10000d98c:	lea    rdx,[rip+0x60d]        # 0x10000dfa0
   10000d993:	mov    rcx,rdi
   10000d996:	call   QWORD PTR [rip+0xffffffffffff38ac]        # 0x100001248
   10000d99c:	mov    QWORD PTR [rbx+0x128],rax
   10000d9a3:	test   rax,rax
   10000d9a6:	je     0x10000de5e
   10000d9ac:	lea    rdx,[rip+0x605]        # 0x10000dfb8
   10000d9b3:	mov    rcx,rdi
   10000d9b6:	call   QWORD PTR [rip+0xffffffffffff388c]        # 0x100001248
   10000d9bc:	mov    QWORD PTR [rbx+0x130],rax
   10000d9c3:	test   rax,rax
   10000d9c6:	je     0x10000de5e
   10000d9cc:	lea    rdx,[rip+0x5fd]        # 0x10000dfd0
   10000d9d3:	mov    rcx,rdi
   10000d9d6:	call   QWORD PTR [rip+0xffffffffffff386c]        # 0x100001248
   10000d9dc:	mov    QWORD PTR [rbx+0x138],rax
   10000d9e3:	test   rax,rax
   10000d9e6:	je     0x10000de5e
   10000d9ec:	lea    rdx,[rip+0x5f5]        # 0x10000dfe8
   10000d9f3:	mov    rcx,rdi
   10000d9f6:	call   QWORD PTR [rip+0xffffffffffff384c]        # 0x100001248
   10000d9fc:	mov    QWORD PTR [rbx+0x140],rax
   10000da03:	test   rax,rax
   10000da06:	je     0x10000de5e
   10000da0c:	lea    rdx,[rip+0x5ed]        # 0x10000e000
   10000da13:	mov    rcx,rdi
   10000da16:	call   QWORD PTR [rip+0xffffffffffff382c]        # 0x100001248
   10000da1c:	mov    QWORD PTR [rbx+0x148],rax
   10000da23:	test   rax,rax
   10000da26:	je     0x10000de5e
   10000da2c:	lea    rdx,[rip+0x5e5]        # 0x10000e018
   10000da33:	mov    rcx,rdi
   10000da36:	call   QWORD PTR [rip+0xffffffffffff380c]        # 0x100001248
   10000da3c:	mov    QWORD PTR [rbx+0x150],rax
   10000da43:	test   rax,rax
   10000da46:	je     0x10000de5e
   10000da4c:	lea    rdx,[rip+0x5dd]        # 0x10000e030
   10000da53:	mov    rcx,rdi
   10000da56:	call   QWORD PTR [rip+0xffffffffffff37ec]        # 0x100001248
   10000da5c:	mov    QWORD PTR [rbx+0x158],rax
   10000da63:	test   rax,rax
   10000da66:	je     0x10000de5e
   10000da6c:	lea    rdx,[rip+0x5d5]        # 0x10000e048
   10000da73:	mov    rcx,rdi
   10000da76:	call   QWORD PTR [rip+0xffffffffffff37cc]        # 0x100001248
   10000da7c:	mov    QWORD PTR [rbx+0x160],rax
   10000da83:	test   rax,rax
   10000da86:	je     0x10000de5e
   10000da8c:	lea    rdx,[rip+0x5cd]        # 0x10000e060
   10000da93:	mov    rcx,rdi
   10000da96:	call   QWORD PTR [rip+0xffffffffffff37ac]        # 0x100001248
   10000da9c:	mov    QWORD PTR [rbx+0x168],rax
   10000daa3:	test   rax,rax
   10000daa6:	je     0x10000de5e
   10000daac:	lea    rdx,[rip+0x5cd]        # 0x10000e080
   10000dab3:	mov    rcx,rdi
   10000dab6:	call   QWORD PTR [rip+0xffffffffffff378c]        # 0x100001248
   10000dabc:	mov    QWORD PTR [rbx+0x170],rax
   10000dac3:	test   rax,rax
   10000dac6:	je     0x10000de5e
   10000dacc:	lea    rdx,[rip+0x5cd]        # 0x10000e0a0
   10000dad3:	mov    rcx,rdi
   10000dad6:	call   QWORD PTR [rip+0xffffffffffff376c]        # 0x100001248
   10000dadc:	mov    QWORD PTR [rbx+0x178],rax
   10000dae3:	test   rax,rax
   10000dae6:	je     0x10000de5e
   10000daec:	lea    rdx,[rip+0x5d5]        # 0x10000e0c8
   10000daf3:	mov    rcx,rdi
   10000daf6:	call   QWORD PTR [rip+0xffffffffffff374c]        # 0x100001248
   10000dafc:	mov    QWORD PTR [rbx+0x180],rax
   10000db03:	test   rax,rax
   10000db06:	je     0x10000de5e
   10000db0c:	lea    rdx,[rip+0x5dd]        # 0x10000e0f0
   10000db13:	mov    rcx,rdi
   10000db16:	call   QWORD PTR [rip+0xffffffffffff372c]        # 0x100001248
   10000db1c:	mov    QWORD PTR [rbx+0x188],rax
   10000db23:	test   rax,rax
   10000db26:	je     0x10000de5e
   10000db2c:	lea    rdx,[rip+0x5d5]        # 0x10000e108
   10000db33:	mov    rcx,rdi
   10000db36:	call   QWORD PTR [rip+0xffffffffffff370c]        # 0x100001248
   10000db3c:	mov    QWORD PTR [rbx+0x190],rax
   10000db43:	test   rax,rax
   10000db46:	je     0x10000de5e
   10000db4c:	lea    rdx,[rip+0x5cd]        # 0x10000e120
   10000db53:	mov    rcx,rdi
   10000db56:	call   QWORD PTR [rip+0xffffffffffff36ec]        # 0x100001248
   10000db5c:	mov    QWORD PTR [rbx+0x198],rax
   10000db63:	test   rax,rax
   10000db66:	je     0x10000de5e
   10000db6c:	lea    rdx,[rip+0x5c5]        # 0x10000e138
   10000db73:	mov    rcx,rdi
   10000db76:	call   QWORD PTR [rip+0xffffffffffff36cc]        # 0x100001248
   10000db7c:	mov    QWORD PTR [rbx+0x1a0],rax
   10000db83:	test   rax,rax
   10000db86:	je     0x10000de5e
   10000db8c:	lea    rdx,[rip+0x5bd]        # 0x10000e150
   10000db93:	mov    rcx,rdi
   10000db96:	call   QWORD PTR [rip+0xffffffffffff36ac]        # 0x100001248
   10000db9c:	mov    QWORD PTR [rbx+0x1a8],rax
   10000dba3:	test   rax,rax
   10000dba6:	je     0x10000de5e
   10000dbac:	lea    rdx,[rip+0x5b5]        # 0x10000e168
   10000dbb3:	mov    rcx,rdi
   10000dbb6:	call   QWORD PTR [rip+0xffffffffffff368c]        # 0x100001248
   10000dbbc:	mov    QWORD PTR [rbx+0x1b0],rax
   10000dbc3:	test   rax,rax
   10000dbc6:	je     0x10000de5e
   10000dbcc:	lea    rdx,[rip+0x5ad]        # 0x10000e180
   10000dbd3:	mov    rcx,rdi
   10000dbd6:	call   QWORD PTR [rip+0xffffffffffff366c]        # 0x100001248
   10000dbdc:	mov    QWORD PTR [rbx+0x1b8],rax
   10000dbe3:	test   rax,rax
   10000dbe6:	je     0x10000de5e
   10000dbec:	lea    rdx,[rip+0x59d]        # 0x10000e190
   10000dbf3:	mov    rcx,rdi
   10000dbf6:	call   QWORD PTR [rip+0xffffffffffff364c]        # 0x100001248
   10000dbfc:	mov    QWORD PTR [rbx+0x1c0],rax
   10000dc03:	test   rax,rax
   10000dc06:	je     0x10000de5e
   10000dc0c:	lea    rdx,[rip+0x595]        # 0x10000e1a8
   10000dc13:	mov    rcx,rdi
   10000dc16:	call   QWORD PTR [rip+0xffffffffffff362c]        # 0x100001248
   10000dc1c:	mov    QWORD PTR [rbx+0x1c8],rax
   10000dc23:	test   rax,rax
   10000dc26:	je     0x10000de5e
   10000dc2c:	lea    rdx,[rip+0x58d]        # 0x10000e1c0
   10000dc33:	mov    rcx,rdi
   10000dc36:	call   QWORD PTR [rip+0xffffffffffff360c]        # 0x100001248
   10000dc3c:	mov    QWORD PTR [rbx+0x1d0],rax
   10000dc43:	test   rax,rax
   10000dc46:	je     0x10000de5e
   10000dc4c:	lea    rdx,[rip+0x585]        # 0x10000e1d8
   10000dc53:	mov    rcx,rdi
   10000dc56:	call   QWORD PTR [rip+0xffffffffffff35ec]        # 0x100001248
   10000dc5c:	mov    QWORD PTR [rbx+0x1d8],rax
   10000dc63:	test   rax,rax
   10000dc66:	je     0x10000de5e
   10000dc6c:	lea    rdx,[rip+0x57d]        # 0x10000e1f0
   10000dc73:	mov    rcx,rdi
   10000dc76:	call   QWORD PTR [rip+0xffffffffffff35cc]        # 0x100001248
   10000dc7c:	mov    QWORD PTR [rbx+0x1e0],rax
   10000dc83:	test   rax,rax
   10000dc86:	je     0x10000de5e
   10000dc8c:	lea    rdx,[rip+0x575]        # 0x10000e208
   10000dc93:	mov    rcx,rdi
   10000dc96:	call   QWORD PTR [rip+0xffffffffffff35ac]        # 0x100001248
   10000dc9c:	mov    QWORD PTR [rbx+0x1e8],rax
   10000dca3:	test   rax,rax
   10000dca6:	je     0x10000de5e
   10000dcac:	lea    rdx,[rip+0x56d]        # 0x10000e220
   10000dcb3:	mov    rcx,rdi
   10000dcb6:	call   QWORD PTR [rip+0xffffffffffff358c]        # 0x100001248
   10000dcbc:	mov    QWORD PTR [rbx+0x1f0],rax
   10000dcc3:	test   rax,rax
   10000dcc6:	je     0x10000de5e
   10000dccc:	lea    rdx,[rip+0x565]        # 0x10000e238
   10000dcd3:	mov    rcx,rdi
   10000dcd6:	call   QWORD PTR [rip+0xffffffffffff356c]        # 0x100001248
   10000dcdc:	mov    QWORD PTR [rbx+0x1f8],rax
   10000dce3:	test   rax,rax
   10000dce6:	je     0x10000de5e
   10000dcec:	lea    rdx,[rip+0x55d]        # 0x10000e250
   10000dcf3:	mov    rcx,rdi
   10000dcf6:	call   QWORD PTR [rip+0xffffffffffff354c]        # 0x100001248
   10000dcfc:	mov    QWORD PTR [rbx+0x200],rax
   10000dd03:	test   rax,rax
   10000dd06:	je     0x10000de5e
   10000dd0c:	lea    rdx,[rip+0x555]        # 0x10000e268
   10000dd13:	mov    rcx,rdi
   10000dd16:	call   QWORD PTR [rip+0xffffffffffff352c]        # 0x100001248
   10000dd1c:	mov    QWORD PTR [rbx+0x208],rax
   10000dd23:	test   rax,rax
   10000dd26:	je     0x10000de5e
   10000dd2c:	lea    rdx,[rip+0x54d]        # 0x10000e280
   10000dd33:	mov    rcx,rdi
   10000dd36:	call   QWORD PTR [rip+0xffffffffffff350c]        # 0x100001248
   10000dd3c:	mov    QWORD PTR [rbx+0x210],rax
   10000dd43:	test   rax,rax
   10000dd46:	je     0x10000de5e
   10000dd4c:	lea    rdx,[rip+0x545]        # 0x10000e298
   10000dd53:	mov    rcx,rdi
   10000dd56:	call   QWORD PTR [rip+0xffffffffffff34ec]        # 0x100001248
   10000dd5c:	mov    QWORD PTR [rbx+0x218],rax
   10000dd63:	test   rax,rax
   10000dd66:	je     0x10000de5e
   10000dd6c:	lea    rdx,[rip+0x535]        # 0x10000e2a8
   10000dd73:	mov    rcx,rdi
   10000dd76:	call   QWORD PTR [rip+0xffffffffffff34cc]        # 0x100001248
   10000dd7c:	mov    QWORD PTR [rbx+0x220],rax
   10000dd83:	test   rax,rax
   10000dd86:	je     0x10000de5e
   10000dd8c:	lea    rdx,[rip+0x52d]        # 0x10000e2c0
   10000dd93:	mov    rcx,rdi
   10000dd96:	call   QWORD PTR [rip+0xffffffffffff34ac]        # 0x100001248
   10000dd9c:	mov    QWORD PTR [rbx+0x228],rax
   10000dda3:	test   rax,rax
   10000dda6:	je     0x10000de5e
   10000ddac:	lea    rdx,[rip+0x525]        # 0x10000e2d8
   10000ddb3:	mov    rcx,rdi
   10000ddb6:	call   QWORD PTR [rip+0xffffffffffff348c]        # 0x100001248
   10000ddbc:	mov    QWORD PTR [rbx+0x230],rax
   10000ddc3:	test   rax,rax
   10000ddc6:	je     0x10000de5e
   10000ddcc:	lea    rdx,[rip+0x525]        # 0x10000e2f8
   10000ddd3:	mov    rcx,rdi
   10000ddd6:	call   QWORD PTR [rip+0xffffffffffff346c]        # 0x100001248
   10000dddc:	mov    QWORD PTR [rbx+0x238],rax
   10000dde3:	test   rax,rax
   10000dde6:	je     0x10000de5e
   10000dde8:	lea    rcx,[rip+0xffffffffffff57e1]        # 0x1000035d0
   10000ddef:	mov    QWORD PTR [rbx],rdi
   10000ddf2:	call   0x1000161b0
   10000ddf7:	mov    rdi,rax
   10000ddfa:	test   rax,rax
   10000ddfd:	je     0x10000de5e
   10000ddff:	lea    rdx,[rip+0x512]        # 0x10000e318
   10000de06:	mov    rcx,rax
   10000de09:	call   QWORD PTR [rip+0xffffffffffff3439]        # 0x100001248
   10000de0f:	mov    QWORD PTR [rbx+0x240],rax
   10000de16:	test   rax,rax
   10000de19:	je     0x10000de5e
   10000de1b:	lea    rdx,[rip+0x516]        # 0x10000e338
   10000de22:	mov    rcx,rdi
   10000de25:	call   QWORD PTR [rip+0xffffffffffff341d]        # 0x100001248
   10000de2b:	mov    QWORD PTR [rbx+0x248],rax
   10000de32:	test   rax,rax
   10000de35:	je     0x10000de5e
   10000de37:	lea    rdx,[rip+0x51a]        # 0x10000e358
   10000de3e:	mov    rcx,rdi
   10000de41:	call   QWORD PTR [rip+0xffffffffffff3401]        # 0x100001248
   10000de47:	mov    QWORD PTR [rbx+0x250],rax
   10000de4e:	test   rax,rax
   10000de51:	je     0x10000de5e
   10000de53:	or     DWORD PTR [rbx+0x258],0x2
   10000de5a:	mov    QWORD PTR [rbx+0x8],rdi
   10000de5e:	xor    eax,eax
   10000de60:	mov    rbx,QWORD PTR [rsp+0x30]
   10000de65:	add    rsp,0x20
   10000de69:	pop    rdi
   10000de6a:	ret    
   10000de6b:	nop
   10000de6c:	nop
   10000de6d:	nop
   10000de6e:	nop
   10000de6f:	nop
   10000de70:	rex.RXB
   10000de71:	gs je  0x10000deb7
   10000de74:	ins    BYTE PTR es:[rdi],dx
   10000de75:	jne    0x10000deea
   10000de77:	je     0x10000dede
   10000de79:	jb     0x10000dec9
   10000de7b:	outs   dx,DWORD PTR ds:[rsi]
   10000de7c:	fs gs rex.WB
   10000de7f:	add    BYTE PTR fs:[rax-0x6f6f6f70],dl
   10000de86:	nop
   10000de87:	nop
   10000de88:	rex.RXB
   10000de89:	gs je  0x10000decf
   10000de8c:	ins    BYTE PTR es:[rdi],dx
   10000de8d:	jne    0x10000df02
   10000de8f:	je     0x10000def6
   10000de91:	jb     0x10000dedc
   10000de93:	outs   dx,BYTE PTR ds:[rsi]
   10000de94:	outs   dx,WORD PTR ds:[rsi]
   10000de96:	jb     0x10000df05
   10000de98:	(bad)  
   10000de99:	je     0x10000df04
   10000de9b:	outs   dx,DWORD PTR ds:[rsi]
   10000de9c:	outs   dx,BYTE PTR ds:[rsi]
   10000de9d:	add    BYTE PTR [rax+0x74654790],dl
   10000dea3:	rex.XB ins BYTE PTR es:[rdi],dx
   10000dea5:	jne    0x10000df1a
   10000dea7:	je     0x10000df0e
   10000dea9:	jb     0x10000defc
   10000deab:	jne    0x10000df1c
   10000dead:	jb     0x10000df24
   10000deaf:	ins    DWORD PTR es:[rdi],dx
   10000deb0:	push   rdx
   10000deb1:	gs jae 0x10000df23
   10000deb4:	jne    0x10000df28
   10000deb6:	movsxd esp,DWORD PTR [rbp+0x0]
   10000deb9:	nop
   10000deba:	nop
   10000debb:	nop
   10000debc:	nop
   10000debd:	nop
   10000debe:	nop
   10000debf:	nop
   10000dec0:	rex.XB ins BYTE PTR es:[rdi],dx
   10000dec2:	jne    0x10000df37
   10000dec4:	je     0x10000df2b
   10000dec6:	jb     0x10000df0b
   10000dec8:	outs   dx,DWORD PTR ds:[rsi]
   10000dec9:	outs   dx,BYTE PTR ds:[rsi]
   10000deca:	je     0x10000df3e
   10000decc:	outs   dx,DWORD PTR ds:[rsi]
   10000decd:	ins    BYTE PTR es:[rdi],dx
   10000dece:	add    BYTE PTR [rax+0x696c6e4f],dl
   10000ded4:	outs   dx,BYTE PTR ds:[rsi]
   10000ded5:	gs rex.XB ins BYTE PTR es:[rdi],dx
   10000ded8:	jne    0x10000df4d
   10000deda:	je     0x10000df41
   10000dedc:	jb     0x10000df25
   10000dede:	jb     0x10000df4f
   10000dee0:	jne    0x10000df52
   10000dee2:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000dee8:	rex.WRXB
   10000dee9:	data16 data16 ins BYTE PTR es:[rdi],dx
   10000deec:	imul   ebp,DWORD PTR [rsi+0x65],0x73756c43
   10000def3:	je     0x10000df5a
   10000def5:	jb     0x10000df3e
   10000def7:	jb     0x10000df68
   10000def9:	jne    0x10000df6b
   10000defb:	add    BYTE PTR [rax+0x4d909090],dl
   10000df01:	outs   dx,DWORD PTR ds:[rsi]
   10000df02:	jbe    0x10000df69
   10000df04:	rex.XB ins BYTE PTR es:[rdi],dx
   10000df06:	jne    0x10000df7b
   10000df08:	je     0x10000df6f
   10000df0a:	jb     0x10000df53
   10000df0c:	jb     0x10000df7d
   10000df0e:	jne    0x10000df80
   10000df10:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000df16:	nop
   10000df17:	nop
   10000df18:	rex.R
   10000df19:	gs jae 0x10000df90
   10000df1c:	jb     0x10000df8d
   10000df1e:	jns    0x10000df63
   10000df20:	ins    BYTE PTR es:[rdi],dx
   10000df21:	jne    0x10000df96
   10000df23:	je     0x10000df8a
   10000df25:	jb     0x10000df6e
   10000df27:	jb     0x10000df98
   10000df29:	jne    0x10000df9b
   10000df2b:	add    BYTE PTR [rax+0x47909090],dl
   10000df31:	gs je  0x10000df77
   10000df34:	ins    BYTE PTR es:[rdi],dx
   10000df35:	jne    0x10000dfaa
   10000df37:	je     0x10000df9e
   10000df39:	jb     0x10000df82
   10000df3b:	jb     0x10000dfac
   10000df3d:	jne    0x10000dfaf
   10000df3f:	push   rbx
   10000df40:	je     0x10000dfa3
   10000df42:	je     0x10000dfa9
   10000df44:	add    BYTE PTR [rax+0x6c439090],dl
   10000df4a:	jne    0x10000dfbf
   10000df4c:	je     0x10000dfb3
   10000df4e:	jb     0x10000df97
   10000df50:	gs je  0x10000df98
   10000df53:	outs   dx,BYTE PTR ds:[rsi]
   10000df54:	jne    0x10000dfc3
   10000df56:	rex.XB outs dx,DWORD PTR ds:[rsi]
   10000df58:	jne    0x10000dfc8
   10000df5a:	je     0x10000df5c
   10000df5c:	nop
   10000df5d:	nop
   10000df5e:	nop
   10000df5f:	nop
   10000df60:	rex.XB ins BYTE PTR es:[rdi],dx
   10000df62:	jne    0x10000dfd7
   10000df64:	je     0x10000dfcb
   10000df66:	jb     0x10000dfba
   10000df68:	gs jae 0x10000dfda
   10000df6b:	jne    0x10000dfdf
   10000df6d:	movsxd esp,DWORD PTR [rbp+0x47]
   10000df70:	gs je  0x10000dfb8
   10000df73:	outs   dx,BYTE PTR ds:[rsi]
   10000df74:	jne    0x10000dfe3
   10000df76:	rex.XB outs dx,DWORD PTR ds:[rsi]
   10000df78:	jne    0x10000dfe8
   10000df7a:	je     0x10000df7c
   10000df7c:	nop
   10000df7d:	nop
   10000df7e:	nop
   10000df7f:	nop
   10000df80:	push   rdx
   10000df81:	gs ins DWORD PTR es:[rdi],dx
   10000df83:	outs   dx,DWORD PTR ds:[rsi]
   10000df84:	jbe    0x10000dfeb
   10000df86:	rex.XB ins BYTE PTR es:[rdi],dx
   10000df88:	jne    0x10000dffd
   10000df8a:	je     0x10000dff1
   10000df8c:	jb     0x10000dfe0
   10000df8e:	gs jae 0x10000e000
   10000df91:	jne    0x10000e005
   10000df93:	movsxd esp,DWORD PTR [rbp+0x4e]
   10000df96:	outs   dx,DWORD PTR ds:[rsi]
   10000df97:	fs add BYTE PTR gs:[rax-0x6f6f6f70],dl
   10000df9f:	nop
   10000dfa0:	rex.B
   10000dfa1:	fs fs rex.XB ins BYTE PTR es:[rdi],dx
   10000dfa5:	jne    0x10000e01a
   10000dfa7:	je     0x10000e00e
   10000dfa9:	jb     0x10000dffd
   10000dfab:	gs jae 0x10000e01d
   10000dfae:	jne    0x10000e022
   10000dfb0:	movsxd esp,DWORD PTR [rbp+0x4e]
   10000dfb3:	outs   dx,DWORD PTR ds:[rsi]
   10000dfb4:	fs add BYTE PTR gs:[rax+0x43746553],dl
   10000dfbc:	ins    BYTE PTR es:[rdi],dx
   10000dfbd:	jne    0x10000e032
   10000dfbf:	je     0x10000e026
   10000dfc1:	jb     0x10000e00a
   10000dfc3:	jb     0x10000e034
   10000dfc5:	jne    0x10000e037
   10000dfc7:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   10000dfc9:	fs imul r14,QWORD PTR gs:[rbx+0x74],0x65724300
   10000dfd3:	(bad)  
   10000dfd4:	je     0x10000e03b
   10000dfd6:	rex.XB ins BYTE PTR es:[rdi],dx
   10000dfd8:	jne    0x10000e04d
   10000dfda:	je     0x10000e041
   10000dfdc:	jb     0x10000e025
   10000dfde:	jb     0x10000e04f
   10000dfe0:	jne    0x10000e052
   10000dfe2:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000dfe8:	rex.XB jb 0x10000e050
   10000dfeb:	(bad)  
   10000dfec:	je     0x10000e053
   10000dfee:	rex.XB ins BYTE PTR es:[rdi],dx
   10000dff0:	jne    0x10000e065
   10000dff2:	je     0x10000e059
   10000dff4:	jb     0x10000e048
   10000dff6:	gs jae 0x10000e068
   10000dff9:	jne    0x10000e06d
   10000dffb:	movsxd esp,DWORD PTR [rbp+0x0]
   10000dffe:	nop
   10000dfff:	nop
   10000e000:	rex.R
   10000e001:	gs ins BYTE PTR es:[rdi],dx
   10000e003:	gs je  0x10000e06b
   10000e006:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e008:	jne    0x10000e07d
   10000e00a:	je     0x10000e071
   10000e00c:	jb     0x10000e060
   10000e00e:	gs jae 0x10000e080
   10000e011:	jne    0x10000e085
   10000e013:	movsxd esp,DWORD PTR [rbp+0x0]
   10000e016:	nop
   10000e017:	nop
   10000e018:	rex.RX (bad) 
   10000e01a:	imul   ebp,DWORD PTR [rbx+rax*2+0x6c],0x65747375
   10000e022:	jb     0x10000e076
   10000e024:	gs jae 0x10000e096
   10000e027:	jne    0x10000e09b
   10000e029:	movsxd esp,DWORD PTR [rbp+0x0]
   10000e02c:	nop
   10000e02d:	nop
   10000e02e:	nop
   10000e02f:	nop
   10000e030:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   10000e032:	ins    BYTE PTR es:[rdi],dx
   10000e033:	imul   ebp,DWORD PTR [rsi+0x65],0x73756c43
   10000e03a:	je     0x10000e0a1
   10000e03c:	jb     0x10000e090
   10000e03e:	gs jae 0x10000e0b0
   10000e041:	jne    0x10000e0b5
   10000e043:	movsxd esp,DWORD PTR [rbp+0x0]
   10000e046:	nop
   10000e047:	nop
   10000e048:	rex.WRXB
   10000e049:	data16 data16 ins BYTE PTR es:[rdi],dx
   10000e04c:	imul   ebp,DWORD PTR [rsi+0x65],0x73756c43
   10000e053:	je     0x10000e0ba
   10000e055:	jb     0x10000e0a9
   10000e057:	gs jae 0x10000e0c9
   10000e05a:	jne    0x10000e0ce
   10000e05c:	movsxd esp,DWORD PTR [rbp+0x0]
   10000e05f:	nop
   10000e060:	rex.B
   10000e061:	fs fs rex.XB ins BYTE PTR es:[rdi],dx
   10000e065:	jne    0x10000e0da
   10000e067:	je     0x10000e0ce
   10000e069:	jb     0x10000e0bd
   10000e06b:	gs jae 0x10000e0dd
   10000e06e:	jne    0x10000e0e2
   10000e070:	movsxd esp,DWORD PTR [rbp+0x44]
   10000e073:	gs jo  0x10000e0db
   10000e076:	outs   dx,BYTE PTR ds:[rsi]
   10000e077:	fs outs dx,BYTE PTR gs:[rsi]
   10000e07a:	movsxd edi,DWORD PTR [rcx+0x0]
   10000e07d:	nop
   10000e07e:	nop
   10000e07f:	nop
   10000e080:	push   rdx
   10000e081:	gs ins DWORD PTR es:[rdi],dx
   10000e083:	outs   dx,DWORD PTR ds:[rsi]
   10000e084:	jbe    0x10000e0eb
   10000e086:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e088:	jne    0x10000e0fd
   10000e08a:	je     0x10000e0f1
   10000e08c:	jb     0x10000e0e0
   10000e08e:	gs jae 0x10000e100
   10000e091:	jne    0x10000e105
   10000e093:	movsxd esp,DWORD PTR [rbp+0x44]
   10000e096:	gs jo  0x10000e0fe
   10000e099:	outs   dx,BYTE PTR ds:[rsi]
   10000e09a:	fs outs dx,BYTE PTR gs:[rsi]
   10000e09d:	movsxd edi,DWORD PTR [rcx+0x0]
   10000e0a0:	push   rbx
   10000e0a1:	gs je  0x10000e0e7
   10000e0a4:	ins    BYTE PTR es:[rdi],dx
   10000e0a5:	jne    0x10000e11a
   10000e0a7:	je     0x10000e10e
   10000e0a9:	jb     0x10000e0fd
   10000e0ab:	gs jae 0x10000e11d
   10000e0ae:	jne    0x10000e122
   10000e0b0:	movsxd esp,DWORD PTR [rbp+0x44]
   10000e0b3:	gs jo  0x10000e11b
   10000e0b6:	outs   dx,BYTE PTR ds:[rsi]
   10000e0b7:	fs outs dx,BYTE PTR gs:[rsi]
   10000e0ba:	movsxd edi,DWORD PTR [rcx+0x45]
   10000e0bd:	js     0x10000e12f
   10000e0bf:	jb     0x10000e126
   10000e0c1:	jae    0x10000e136
   10000e0c3:	imul   ebp,DWORD PTR [rdi+0x6e],0x65479000
   10000e0ca:	je     0x10000e10f
   10000e0cc:	ins    BYTE PTR es:[rdi],dx
   10000e0cd:	jne    0x10000e142
   10000e0cf:	je     0x10000e136
   10000e0d1:	jb     0x10000e125
   10000e0d3:	gs jae 0x10000e145
   10000e0d6:	jne    0x10000e14a
   10000e0d8:	movsxd esp,DWORD PTR [rbp+0x44]
   10000e0db:	gs jo  0x10000e143
   10000e0de:	outs   dx,BYTE PTR ds:[rsi]
   10000e0df:	fs outs dx,BYTE PTR gs:[rsi]
   10000e0e2:	movsxd edi,DWORD PTR [rcx+0x45]
   10000e0e5:	js     0x10000e157
   10000e0e7:	jb     0x10000e14e
   10000e0e9:	jae    0x10000e15e
   10000e0eb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c439000
   10000e0f2:	jne    0x10000e167
   10000e0f4:	je     0x10000e15b
   10000e0f6:	jb     0x10000e13f
   10000e0f8:	jb     0x10000e169
   10000e0fa:	jne    0x10000e16c
   10000e0fc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   10000e0fe:	outs   dx,BYTE PTR ds:[rsi]
   10000e0ff:	je     0x10000e173
   10000e101:	outs   dx,DWORD PTR ds:[rsi]
   10000e102:	ins    BYTE PTR es:[rdi],dx
   10000e103:	add    BYTE PTR [rax+0x43909090],dl
   10000e109:	ins    BYTE PTR es:[rdi],dx
   10000e10a:	jne    0x10000e17f
   10000e10c:	je     0x10000e173
   10000e10e:	jb     0x10000e15e
   10000e110:	outs   dx,DWORD PTR ds:[rsi]
   10000e111:	fs rex.XB outs dx,DWORD PTR gs:[rsi]
   10000e115:	outs   dx,BYTE PTR ds:[rsi]
   10000e116:	je     0x10000e18a
   10000e118:	outs   dx,DWORD PTR ds:[rsi]
   10000e119:	ins    BYTE PTR es:[rdi],dx
   10000e11a:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000e120:	rex.XB jb 0x10000e188
   10000e123:	(bad)  
   10000e124:	je     0x10000e18b
   10000e126:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e128:	jne    0x10000e19d
   10000e12a:	je     0x10000e191
   10000e12c:	jb     0x10000e17c
   10000e12e:	outs   dx,DWORD PTR ds:[rsi]
   10000e12f:	je     0x10000e19a
   10000e131:	data16 jns 0x10000e184
   10000e134:	outs   dx,DWORD PTR ds:[rsi]
   10000e135:	jb     0x10000e1ab
   10000e137:	add    BYTE PTR [rdx+0x65],dl
   10000e13a:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   10000e142:	jne    0x10000e1b7
   10000e144:	je     0x10000e1ab
   10000e146:	jb     0x10000e196
   10000e148:	outs   dx,DWORD PTR ds:[rsi]
   10000e149:	je     0x10000e1b4
   10000e14b:	data16 jns 0x10000e14e
   10000e14e:	nop
   10000e14f:	nop
   10000e150:	rex.RXB
   10000e151:	gs je  0x10000e197
   10000e154:	ins    BYTE PTR es:[rdi],dx
   10000e155:	jne    0x10000e1ca
   10000e157:	je     0x10000e1be
   10000e159:	jb     0x10000e1a9
   10000e15b:	outs   dx,DWORD PTR ds:[rsi]
   10000e15c:	je     0x10000e1c7
   10000e15e:	data16 jns 0x10000e161
   10000e161:	nop
   10000e162:	nop
   10000e163:	nop
   10000e164:	nop
   10000e165:	nop
   10000e166:	nop
   10000e167:	nop
   10000e168:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e16a:	outs   dx,DWORD PTR ds:[rsi]
   10000e16b:	jae    0x10000e1d2
   10000e16d:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e16f:	jne    0x10000e1e4
   10000e171:	je     0x10000e1d8
   10000e173:	jb     0x10000e1c3
   10000e175:	outs   dx,DWORD PTR ds:[rsi]
   10000e176:	je     0x10000e1e1
   10000e178:	data16 jns 0x10000e1cb
   10000e17b:	outs   dx,DWORD PTR ds:[rsi]
   10000e17c:	jb     0x10000e1f2
   10000e17e:	add    BYTE PTR [rax+0x43746547],dl
   10000e184:	ins    BYTE PTR es:[rdi],dx
   10000e185:	jne    0x10000e1fa
   10000e187:	je     0x10000e1ee
   10000e189:	jb     0x10000e1d6
   10000e18b:	gs jns 0x10000e18e
   10000e18e:	nop
   10000e18f:	nop
   10000e190:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e192:	jne    0x10000e207
   10000e194:	je     0x10000e1fb
   10000e196:	jb     0x10000e1ea
   10000e198:	gs addr32 rex.XB jb 0x10000e202
   10000e19d:	(bad)  
   10000e19e:	je     0x10000e205
   10000e1a0:	rex.WXB
   10000e1a1:	gs jns 0x10000e1a4
   10000e1a4:	nop
   10000e1a5:	nop
   10000e1a6:	nop
   10000e1a7:	nop
   10000e1a8:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e1aa:	jne    0x10000e21f
   10000e1ac:	je     0x10000e213
   10000e1ae:	jb     0x10000e202
   10000e1b0:	gs addr32 rex.R
   10000e1b3:	gs ins BYTE PTR es:[rdi],dx
   10000e1b5:	gs je  0x10000e21d
   10000e1b8:	rex.WXB
   10000e1b9:	gs jns 0x10000e1bc
   10000e1bc:	nop
   10000e1bd:	nop
   10000e1be:	nop
   10000e1bf:	nop
   10000e1c0:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e1c2:	jne    0x10000e237
   10000e1c4:	je     0x10000e22b
   10000e1c6:	jb     0x10000e21a
   10000e1c8:	rex.RB outs dx,BYTE PTR gs:[esi]
   10000e1cc:	jne    0x10000e23b
   10000e1ce:	rex.WXB
   10000e1cf:	gs jns 0x10000e1d2
   10000e1d2:	nop
   10000e1d3:	nop
   10000e1d4:	nop
   10000e1d5:	nop
   10000e1d6:	nop
   10000e1d7:	nop
   10000e1d8:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e1da:	jne    0x10000e24f
   10000e1dc:	je     0x10000e243
   10000e1de:	jb     0x10000e232
   10000e1e0:	gs addr32 push rbx
   10000e1e3:	gs je  0x10000e23c
   10000e1e6:	(bad)  
   10000e1e7:	ins    BYTE PTR es:[rdi],dx
   10000e1e8:	jne    0x10000e24f
   10000e1ea:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000e1f0:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e1f2:	jne    0x10000e267
   10000e1f4:	je     0x10000e25b
   10000e1f6:	jb     0x10000e24a
   10000e1f8:	rex.RB outs dx,BYTE PTR gs:[esi]
   10000e1fc:	jne    0x10000e26b
   10000e1fe:	push   rsi
   10000e1ff:	(bad)  
   10000e200:	ins    BYTE PTR es:[rdi],dx
   10000e201:	jne    0x10000e268
   10000e203:	add    BYTE PTR [rax+0x43909090],dl
   10000e209:	ins    BYTE PTR es:[rdi],dx
   10000e20a:	jne    0x10000e27f
   10000e20c:	je     0x10000e273
   10000e20e:	jb     0x10000e262
   10000e210:	gs addr32 rex.R
   10000e213:	gs ins BYTE PTR es:[rdi],dx
   10000e215:	gs je  0x10000e27d
   10000e218:	push   rsi
   10000e219:	(bad)  
   10000e21a:	ins    BYTE PTR es:[rdi],dx
   10000e21b:	jne    0x10000e282
   10000e21d:	add    BYTE PTR [rax+0x65704f90],dl
   10000e223:	outs   dx,BYTE PTR ds:[rsi]
   10000e224:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e226:	jne    0x10000e29b
   10000e228:	je     0x10000e28f
   10000e22a:	jb     0x10000e27a
   10000e22c:	gs je  0x10000e2a6
   10000e22f:	outs   dx,DWORD PTR ds:[rsi]
   10000e230:	jb     0x10000e29d
   10000e232:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000e238:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e23a:	outs   dx,DWORD PTR ds:[rsi]
   10000e23b:	jae    0x10000e2a2
   10000e23d:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e23f:	jne    0x10000e2b4
   10000e241:	je     0x10000e2a8
   10000e243:	jb     0x10000e293
   10000e245:	gs je  0x10000e2bf
   10000e248:	outs   dx,DWORD PTR ds:[rsi]
   10000e249:	jb     0x10000e2b6
   10000e24b:	add    BYTE PTR [rax+0x43909090],dl
   10000e251:	ins    BYTE PTR es:[rdi],dx
   10000e252:	jne    0x10000e2c7
   10000e254:	je     0x10000e2bb
   10000e256:	jb     0x10000e2a6
   10000e258:	gs je  0x10000e2d2
   10000e25b:	outs   dx,DWORD PTR ds:[rsi]
   10000e25c:	jb     0x10000e2c9
   10000e25e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   10000e260:	outs   dx,BYTE PTR ds:[rsi]
   10000e261:	je     0x10000e2d5
   10000e263:	outs   dx,DWORD PTR ds:[rsi]
   10000e264:	ins    BYTE PTR es:[rdi],dx
   10000e265:	add    BYTE PTR [rax+0x74654790],dl
   10000e26b:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e26d:	jne    0x10000e2e2
   10000e26f:	je     0x10000e2d6
   10000e271:	jb     0x10000e2c1
   10000e273:	gs je  0x10000e2ed
   10000e276:	outs   dx,DWORD PTR ds:[rsi]
   10000e277:	jb     0x10000e2e4
   10000e279:	push   rbx
   10000e27a:	je     0x10000e2dd
   10000e27c:	je     0x10000e2e3
   10000e27e:	add    BYTE PTR [rax+0x73756c43],dl
   10000e284:	je     0x10000e2eb
   10000e286:	jb     0x10000e2d6
   10000e288:	outs   dx,DWORD PTR ds:[rsi]
   10000e289:	fs gs rex.WRXB jo 0x10000e2f3
   10000e28e:	outs   dx,BYTE PTR ds:[rsi]
   10000e28f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   10000e291:	jne    0x10000e300
   10000e293:	add    BYTE PTR [rax+0x43909090],dl
   10000e299:	ins    BYTE PTR es:[rdi],dx
   10000e29a:	jne    0x10000e30f
   10000e29c:	je     0x10000e303
   10000e29e:	jb     0x10000e2ee
   10000e2a0:	outs   dx,DWORD PTR ds:[rsi]
   10000e2a1:	fs rex.RB outs dx,BYTE PTR gs:[rsi]
   10000e2a5:	jne    0x10000e314
   10000e2a7:	add    BYTE PTR [rbx+0x6c],al
   10000e2aa:	jne    0x10000e31f
   10000e2ac:	je     0x10000e313
   10000e2ae:	jb     0x10000e2fe
   10000e2b0:	outs   dx,DWORD PTR ds:[rsi]
   10000e2b1:	fs gs rex.XB ins BYTE PTR es:[rdi],dx
   10000e2b5:	outs   dx,DWORD PTR ds:[rsi]
   10000e2b6:	jae    0x10000e31d
   10000e2b8:	rex.RB outs dx,BYTE PTR ds:[rsi]
   10000e2ba:	jne    0x10000e329
   10000e2bc:	add    BYTE PTR [rax+0x704f9090],dl
   10000e2c2:	outs   dx,BYTE PTR gs:[rsi]
   10000e2c4:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e2c6:	jne    0x10000e33b
   10000e2c8:	je     0x10000e32f
   10000e2ca:	jb     0x10000e31a
   10000e2cc:	gs je  0x10000e318
   10000e2cf:	outs   dx,BYTE PTR ds:[rsi]
   10000e2d0:	je     0x10000e337
   10000e2d2:	jb     0x10000e33a
   10000e2d4:	(bad)  
   10000e2d5:	movsxd esp,DWORD PTR [rbp+0x0]
   10000e2d8:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e2da:	outs   dx,DWORD PTR ds:[rsi]
   10000e2db:	jae    0x10000e342
   10000e2dd:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e2df:	jne    0x10000e354
   10000e2e1:	je     0x10000e348
   10000e2e3:	jb     0x10000e333
   10000e2e5:	gs je  0x10000e331
   10000e2e8:	outs   dx,BYTE PTR ds:[rsi]
   10000e2e9:	je     0x10000e350
   10000e2eb:	jb     0x10000e353
   10000e2ed:	(bad)  
   10000e2ee:	movsxd esp,DWORD PTR [rbp+0x0]
   10000e2f1:	nop
   10000e2f2:	nop
   10000e2f3:	nop
   10000e2f4:	nop
   10000e2f5:	nop
   10000e2f6:	nop
   10000e2f7:	nop
   10000e2f8:	rex.XB ins BYTE PTR es:[rdi],dx
   10000e2fa:	jne    0x10000e36f
   10000e2fc:	je     0x10000e363
   10000e2fe:	jb     0x10000e34e
   10000e300:	gs je  0x10000e34c
   10000e303:	outs   dx,BYTE PTR ds:[rsi]
   10000e304:	je     0x10000e36b
   10000e306:	jb     0x10000e36e
   10000e308:	(bad)  
   10000e309:	movsxd esp,DWORD PTR [rbp+0x43]
   10000e30c:	outs   dx,DWORD PTR ds:[rsi]
   10000e30d:	outs   dx,BYTE PTR ds:[rsi]
   10000e30e:	je     0x10000e382
   10000e310:	outs   dx,DWORD PTR ds:[rsi]
   10000e311:	ins    BYTE PTR es:[rdi],dx
   10000e312:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000e318:	push   rdx
   10000e319:	gs jae 0x10000e371
   10000e31c:	je     0x10000e387
   10000e31e:	ins    BYTE PTR es:[rdi],dx
   10000e31f:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x746c754d
   10000e327:	imul   edx,DWORD PTR [rbx+0x7a],0x706f7250
   10000e32e:	gs jb  0x10000e3a5
   10000e331:	jns    0x10000e333
   10000e333:	nop
   10000e334:	nop
   10000e335:	nop
   10000e336:	nop
   10000e337:	nop
   10000e338:	push   rdx
   10000e339:	gs jae 0x10000e391
   10000e33c:	je     0x10000e3a7
   10000e33e:	ins    BYTE PTR es:[rdi],dx
   10000e33f:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x726f7744
   10000e347:	fs push rax
   10000e349:	jb     0x10000e3ba
   10000e34b:	jo     0x10000e3b2
   10000e34d:	jb     0x10000e3c3
   10000e34f:	jns    0x10000e351
   10000e351:	nop
   10000e352:	nop
   10000e353:	nop
   10000e354:	nop
   10000e355:	nop
   10000e356:	nop
   10000e357:	nop
   10000e358:	push   rdx
   10000e359:	gs jae 0x10000e3b1
   10000e35c:	je     0x10000e3c7
   10000e35e:	ins    BYTE PTR es:[rdi],dx
   10000e35f:	push   rdx
   10000e360:	gs jae 0x10000e3d2
   10000e363:	jne    0x10000e3d7
   10000e365:	movsxd esp,DWORD PTR [rbp+0x54]
   10000e368:	jns    0x10000e3da
   10000e36a:	gs jae 0x10000e3b2
   10000e36d:	jno    0x10000e3e4
   10000e36f:	(bad)  
   10000e370:	ins    BYTE PTR es:[rdi],dx
   10000e371:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000e377:	nop
   10000e378:	nop
   10000e379:	nop
   10000e37a:	nop
   10000e37b:	nop
   10000e37c:	nop
   10000e37d:	nop
   10000e37e:	nop
   10000e37f:	nop
   10000e380:	mov    rcx,QWORD PTR [rip+0x1f269]        # 0x10002d5f0
   10000e387:	test   rcx,rcx
   10000e38a:	je     0x10000e3aa
   10000e38c:	mov    rax,QWORD PTR [rip+0x1f255]        # 0x10002d5e8
   10000e393:	mov    QWORD PTR [rax+0x8],rcx
   10000e397:	mov    QWORD PTR [rcx],rax
   10000e39a:	xor    eax,eax
   10000e39c:	mov    QWORD PTR [rip+0x1f24d],rax        # 0x10002d5f0
   10000e3a3:	mov    QWORD PTR [rip+0x1f23e],rax        # 0x10002d5e8
   10000e3aa:	repz ret 
   10000e3ac:	nop
   10000e3ad:	nop
   10000e3ae:	nop
   10000e3af:	nop
   10000e3b0:	nop
   10000e3b1:	nop
   10000e3b2:	nop
   10000e3b3:	nop
   10000e3b4:	nop
   10000e3b5:	nop
   10000e3b6:	nop
   10000e3b7:	nop
   10000e3b8:	nop
   10000e3b9:	nop
   10000e3ba:	nop
   10000e3bb:	nop
   10000e3bc:	nop
   10000e3bd:	nop
   10000e3be:	nop
   10000e3bf:	nop
   10000e3c0:	mov    rdx,QWORD PTR [rcx+0x8]
   10000e3c4:	test   rdx,rdx
   10000e3c7:	je     0x10000e3dc
   10000e3c9:	mov    rax,QWORD PTR [rcx]
   10000e3cc:	mov    QWORD PTR [rax+0x8],rdx
   10000e3d0:	mov    QWORD PTR [rdx],rax
   10000e3d3:	xor    eax,eax
   10000e3d5:	mov    QWORD PTR [rcx+0x8],rax
   10000e3d9:	mov    QWORD PTR [rcx],rax
   10000e3dc:	repz ret 
   10000e3de:	nop
   10000e3df:	nop
   10000e3e0:	nop
   10000e3e1:	nop
   10000e3e2:	nop
   10000e3e3:	nop
   10000e3e4:	nop
   10000e3e5:	nop
   10000e3e6:	nop
   10000e3e7:	nop
   10000e3e8:	nop
   10000e3e9:	nop
   10000e3ea:	nop
   10000e3eb:	nop
   10000e3ec:	nop
   10000e3ed:	nop
   10000e3ee:	nop
   10000e3ef:	nop
   10000e3f0:	mov    rcx,QWORD PTR [rip+0x1b4a1]        # 0x100029898
   10000e3f7:	test   rcx,rcx
   10000e3fa:	je     0x10000e41a
   10000e3fc:	mov    rax,QWORD PTR [rip+0x1b48d]        # 0x100029890
   10000e403:	mov    QWORD PTR [rax+0x8],rcx
   10000e407:	mov    QWORD PTR [rcx],rax
   10000e40a:	xor    eax,eax
   10000e40c:	mov    QWORD PTR [rip+0x1b485],rax        # 0x100029898
   10000e413:	mov    QWORD PTR [rip+0x1b476],rax        # 0x100029890
   10000e41a:	repz ret 
   10000e41c:	nop
   10000e41d:	nop
   10000e41e:	nop
   10000e41f:	nop
   10000e420:	nop
   10000e421:	nop
   10000e422:	nop
   10000e423:	nop
   10000e424:	nop
   10000e425:	nop
   10000e426:	nop
   10000e427:	nop
   10000e428:	nop
   10000e429:	nop
   10000e42a:	nop
   10000e42b:	nop
   10000e42c:	nop
   10000e42d:	nop
   10000e42e:	nop
   10000e42f:	nop
   10000e430:	mov    rcx,QWORD PTR [rip+0x1b479]        # 0x1000298b0
   10000e437:	test   rcx,rcx
   10000e43a:	je     0x10000e45a
   10000e43c:	mov    rax,QWORD PTR [rip+0x1b465]        # 0x1000298a8
   10000e443:	mov    QWORD PTR [rax+0x8],rcx
   10000e447:	mov    QWORD PTR [rcx],rax
   10000e44a:	xor    eax,eax
   10000e44c:	mov    QWORD PTR [rip+0x1b45d],rax        # 0x1000298b0
   10000e453:	mov    QWORD PTR [rip+0x1b44e],rax        # 0x1000298a8
   10000e45a:	repz ret 
   10000e45c:	nop
   10000e45d:	nop
   10000e45e:	nop
   10000e45f:	nop
   10000e460:	nop
   10000e461:	nop
   10000e462:	nop
   10000e463:	nop
   10000e464:	nop
   10000e465:	nop
   10000e466:	nop
   10000e467:	nop
   10000e468:	nop
   10000e469:	nop
   10000e46a:	nop
   10000e46b:	nop
   10000e46c:	nop
   10000e46d:	nop
   10000e46e:	nop
   10000e46f:	nop
   10000e470:	mov    rdx,QWORD PTR [rcx+0x8]
   10000e474:	test   rdx,rdx
   10000e477:	je     0x10000e48c
   10000e479:	mov    rax,QWORD PTR [rcx]
   10000e47c:	mov    QWORD PTR [rax+0x8],rdx
   10000e480:	mov    QWORD PTR [rdx],rax
   10000e483:	xor    eax,eax
   10000e485:	mov    QWORD PTR [rcx+0x8],rax
   10000e489:	mov    QWORD PTR [rcx],rax
   10000e48c:	repz ret 
   10000e48e:	nop
   10000e48f:	nop
   10000e490:	nop
   10000e491:	nop
   10000e492:	nop
   10000e493:	nop
   10000e494:	nop
   10000e495:	nop
   10000e496:	nop
   10000e497:	nop
   10000e498:	nop
   10000e499:	nop
   10000e49a:	nop
   10000e49b:	nop
   10000e49c:	nop
   10000e49d:	nop
   10000e49e:	nop
   10000e49f:	nop
   10000e4a0:	mov    rcx,QWORD PTR [rip+0x1ac31]        # 0x1000290d8
   10000e4a7:	test   rcx,rcx
   10000e4aa:	je     0x10000e4ca
   10000e4ac:	mov    rax,QWORD PTR [rip+0x1ac1d]        # 0x1000290d0
   10000e4b3:	mov    QWORD PTR [rax+0x8],rcx
   10000e4b7:	mov    QWORD PTR [rcx],rax
   10000e4ba:	xor    eax,eax
   10000e4bc:	mov    QWORD PTR [rip+0x1ac15],rax        # 0x1000290d8
   10000e4c3:	mov    QWORD PTR [rip+0x1ac06],rax        # 0x1000290d0
   10000e4ca:	repz ret 
   10000e4cc:	nop
   10000e4cd:	nop
   10000e4ce:	nop
   10000e4cf:	nop
   10000e4d0:	nop
   10000e4d1:	nop
   10000e4d2:	nop
   10000e4d3:	nop
   10000e4d4:	nop
   10000e4d5:	nop
   10000e4d6:	nop
   10000e4d7:	nop
   10000e4d8:	nop
   10000e4d9:	nop
   10000e4da:	nop
   10000e4db:	nop
   10000e4dc:	nop
   10000e4dd:	nop
   10000e4de:	nop
   10000e4df:	nop
   10000e4e0:	mov    rcx,QWORD PTR [rip+0x1b401]        # 0x1000298e8
   10000e4e7:	test   rcx,rcx
   10000e4ea:	je     0x10000e50a
   10000e4ec:	mov    rax,QWORD PTR [rip+0x1b3ed]        # 0x1000298e0
   10000e4f3:	mov    QWORD PTR [rax+0x8],rcx
   10000e4f7:	mov    QWORD PTR [rcx],rax
   10000e4fa:	xor    eax,eax
   10000e4fc:	mov    QWORD PTR [rip+0x1b3e5],rax        # 0x1000298e8
   10000e503:	mov    QWORD PTR [rip+0x1b3d6],rax        # 0x1000298e0
   10000e50a:	repz ret 
   10000e50c:	nop
   10000e50d:	nop
   10000e50e:	nop
   10000e50f:	nop
   10000e510:	nop
   10000e511:	nop
   10000e512:	nop
   10000e513:	nop
   10000e514:	nop
   10000e515:	nop
   10000e516:	nop
   10000e517:	nop
   10000e518:	nop
   10000e519:	nop
   10000e51a:	nop
   10000e51b:	nop
   10000e51c:	nop
   10000e51d:	nop
   10000e51e:	nop
   10000e51f:	nop
   10000e520:	mov    rcx,QWORD PTR [rip+0x1b3d9]        # 0x100029900
   10000e527:	test   rcx,rcx
   10000e52a:	je     0x10000e54a
   10000e52c:	mov    rax,QWORD PTR [rip+0x1b3c5]        # 0x1000298f8
   10000e533:	mov    QWORD PTR [rax+0x8],rcx
   10000e537:	mov    QWORD PTR [rcx],rax
   10000e53a:	xor    eax,eax
   10000e53c:	mov    QWORD PTR [rip+0x1b3bd],rax        # 0x100029900
   10000e543:	mov    QWORD PTR [rip+0x1b3ae],rax        # 0x1000298f8
   10000e54a:	repz ret 
   10000e54c:	nop
   10000e54d:	nop
   10000e54e:	nop
   10000e54f:	nop
   10000e550:	nop
   10000e551:	nop
   10000e552:	nop
   10000e553:	nop
   10000e554:	nop
   10000e555:	nop
   10000e556:	nop
   10000e557:	nop
   10000e558:	nop
   10000e559:	nop
   10000e55a:	nop
   10000e55b:	nop
   10000e55c:	nop
   10000e55d:	nop
   10000e55e:	nop
   10000e55f:	nop
   10000e560:	mov    rcx,QWORD PTR [rip+0x1f0d1]        # 0x10002d638
   10000e567:	test   rcx,rcx
   10000e56a:	je     0x10000e58a
   10000e56c:	mov    rax,QWORD PTR [rip+0x1f0bd]        # 0x10002d630
   10000e573:	mov    QWORD PTR [rax+0x8],rcx
   10000e577:	mov    QWORD PTR [rcx],rax
   10000e57a:	xor    eax,eax
   10000e57c:	mov    QWORD PTR [rip+0x1f0b5],rax        # 0x10002d638
   10000e583:	mov    QWORD PTR [rip+0x1f0a6],rax        # 0x10002d630
   10000e58a:	repz ret 
   10000e58c:	nop
   10000e58d:	nop
   10000e58e:	nop
   10000e58f:	nop
   10000e590:	nop
   10000e591:	nop
   10000e592:	nop
   10000e593:	nop
   10000e594:	nop
   10000e595:	nop
   10000e596:	nop
   10000e597:	nop
   10000e598:	nop
   10000e599:	nop
   10000e59a:	nop
   10000e59b:	nop
   10000e59c:	nop
   10000e59d:	nop
   10000e59e:	nop
   10000e59f:	nop
   10000e5a0:	mov    rcx,QWORD PTR [rip+0x1b371]        # 0x100029918
   10000e5a7:	test   rcx,rcx
   10000e5aa:	je     0x10000e5ca
   10000e5ac:	mov    rax,QWORD PTR [rip+0x1b35d]        # 0x100029910
   10000e5b3:	mov    QWORD PTR [rax+0x8],rcx
   10000e5b7:	mov    QWORD PTR [rcx],rax
   10000e5ba:	xor    eax,eax
   10000e5bc:	mov    QWORD PTR [rip+0x1b355],rax        # 0x100029918
   10000e5c3:	mov    QWORD PTR [rip+0x1b346],rax        # 0x100029910
   10000e5ca:	repz ret 
   10000e5cc:	nop
   10000e5cd:	nop
   10000e5ce:	nop
   10000e5cf:	nop
   10000e5d0:	nop
   10000e5d1:	nop
   10000e5d2:	nop
   10000e5d3:	nop
   10000e5d4:	nop
   10000e5d5:	nop
   10000e5d6:	nop
   10000e5d7:	nop
   10000e5d8:	nop
   10000e5d9:	nop
   10000e5da:	nop
   10000e5db:	nop
   10000e5dc:	nop
   10000e5dd:	nop
   10000e5de:	nop
   10000e5df:	nop
   10000e5e0:	sub    rsp,0x28
   10000e5e4:	mov    rdx,QWORD PTR [rcx]
   10000e5e7:	test   rdx,rdx
   10000e5ea:	je     0x10000e616
   10000e5ec:	mov    rax,rdx
   10000e5ef:	and    rax,0xffffffffffffe000
   10000e5f5:	mov    rax,QWORD PTR [rax+0x8]
   10000e5f9:	mov    rcx,QWORD PTR [rax+0x10]
   10000e5fd:	dec    rcx
   10000e600:	not    rcx
   10000e603:	and    rcx,rdx
   10000e606:	mov    rcx,QWORD PTR [rcx+0x8]
   10000e60a:	test   BYTE PTR [rcx+0x28],0x8
   10000e60e:	jne    0x10000e616
   10000e610:	mov    rax,QWORD PTR [rcx]
   10000e613:	call   QWORD PTR [rax+0x28]
   10000e616:	add    rsp,0x28
   10000e61a:	ret    
   10000e61b:	nop
   10000e61c:	nop
   10000e61d:	nop
   10000e61e:	nop
   10000e61f:	nop
   10000e620:	nop
   10000e621:	nop
   10000e622:	nop
   10000e623:	nop
   10000e624:	nop
   10000e625:	nop
   10000e626:	nop
   10000e627:	nop
   10000e628:	nop
   10000e629:	nop
   10000e62a:	nop
   10000e62b:	nop
   10000e62c:	nop
   10000e62d:	nop
   10000e62e:	nop
   10000e62f:	nop
   10000e630:	mov    QWORD PTR [rsp+0x8],rbx
   10000e635:	mov    QWORD PTR [rsp+0x10],rbp
   10000e63a:	mov    QWORD PTR [rsp+0x20],rsi
   10000e63f:	push   rdi
   10000e640:	sub    rsp,0x50
   10000e644:	mov    rdi,rcx
   10000e647:	mov    rcx,QWORD PTR [rip+0x1aa72]        # 0x1000290c0
   10000e64e:	mov    DWORD PTR [rsp+0x20],0xbb
   10000e656:	mov    rax,QWORD PTR gs:0x30
   10000e65f:	mov    esi,edx
   10000e661:	add    rax,rcx
   10000e664:	cmp    rcx,0x1480
   10000e66b:	jge    0x10000e673
   10000e66d:	call   QWORD PTR [rip+0xffffffffffff2aad]        # 0x100001120
   10000e673:	test   rax,rax
   10000e676:	je     0x10000e684
   10000e678:	mov    rax,QWORD PTR [rax+0xd8]
   10000e67f:	test   rax,rax
   10000e682:	jne    0x10000e6b6
   10000e684:	call   QWORD PTR [rip+0xffffffffffff34c6]        # 0x100001b50
   10000e68a:	mov    r11,QWORD PTR [rip+0x1aa2f]        # 0x1000290c0
   10000e691:	mov    rax,QWORD PTR gs:0x30
   10000e69a:	add    rax,r11
   10000e69d:	cmp    r11,0x1480
   10000e6a4:	jge    0x10000e6af
   10000e6a6:	mov    ecx,r11d
   10000e6a9:	call   QWORD PTR [rip+0xffffffffffff2a71]        # 0x100001120
   10000e6af:	mov    rax,QWORD PTR [rax+0xd8]
   10000e6b6:	mov    QWORD PTR [rsp+0x28],rax
   10000e6bb:	test   rax,rax
   10000e6be:	je     0x10000e6c9
   10000e6c0:	mov    rdx,QWORD PTR [rax+0x388]
   10000e6c7:	jmp    0x10000e6cb
   10000e6c9:	xor    edx,edx
   10000e6cb:	mov    rax,QWORD PTR [rip+0xffffffffffff38e6]        # 0x100001fb8
   10000e6d2:	xor    ecx,ecx
   10000e6d4:	mov    QWORD PTR [rsp+0x30],rdx
   10000e6d9:	mov    QWORD PTR [rsp+0x38],rcx
   10000e6de:	mov    DWORD PTR [rsp+0x40],ecx
   10000e6e2:	test   BYTE PTR [rax],0x1
   10000e6e5:	je     0x10000e763
   10000e6e7:	test   rdx,rdx
   10000e6ea:	je     0x10000e763
   10000e6ec:	lea    rcx,[rdx+0x6b8]
   10000e6f3:	mov    QWORD PTR [rsp+0x38],rcx
   10000e6f8:	test   rcx,rcx
   10000e6fb:	je     0x10000e763
   10000e6fd:	inc    QWORD PTR [rcx+0x1768]
   10000e704:	mov    rcx,QWORD PTR [rsp+0x38]
   10000e709:	mov    edx,0xbb
   10000e70e:	call   QWORD PTR [rip+0xffffffffffff345c]        # 0x100001b70
   10000e714:	mov    rcx,QWORD PTR [rsp+0x38]
   10000e719:	mov    edx,0xbb
   10000e71e:	mov    rbx,rax
   10000e721:	call   QWORD PTR [rip+0xffffffffffff3441]        # 0x100001b68
   10000e727:	mov    r11,rax
   10000e72a:	test   rbx,rbx
   10000e72d:	je     0x10000e75e
   10000e72f:	test   rax,rax
   10000e732:	je     0x10000e75e
   10000e734:	mov    rcx,QWORD PTR [rsp+0x38]
   10000e739:	xor    edx,edx
   10000e73b:	mov    rax,rbx
   10000e73e:	div    r11
   10000e741:	mov    edx,0xfa
   10000e746:	mov    ebx,0x61a8
   10000e74b:	shr    rax,1
   10000e74e:	cmp    rax,rdx
   10000e751:	cmova  rdx,rax
   10000e755:	cmp    rdx,rbx
   10000e758:	cmovb  rbx,rdx
   10000e75c:	jmp    0x10000e768
   10000e75e:	mov    rcx,QWORD PTR [rsp+0x38]
   10000e763:	mov    ebx,0xfa
   10000e768:	mov    ebp,0x3b9aca00
   10000e76d:	nop    DWORD PTR [rax]
   10000e770:	xor    edx,edx
   10000e772:	test   rbx,rbx
   10000e775:	je     0x10000e78c
   10000e777:	mov    rax,rbx
   10000e77a:	mov    rdx,rbx
   10000e77d:	nop    DWORD PTR [rax]
   10000e780:	pause  
   10000e782:	dec    rax
   10000e785:	jne    0x10000e780
   10000e787:	mov    rcx,QWORD PTR [rsp+0x38]
   10000e78c:	test   rcx,rcx
   10000e78f:	je     0x10000e798
   10000e791:	add    QWORD PTR [rcx+0x1760],rdx
   10000e798:	xor    eax,eax
   10000e79a:	lock cmpxchg DWORD PTR [rdi],esi
   10000e79e:	je     0x10000e7de
   10000e7a0:	mov    rcx,QWORD PTR [rsp+0x38]
   10000e7a5:	lea    rax,[rbx+rbx*1]
   10000e7a9:	cmp    rax,rbp
   10000e7ac:	mov    rbx,rax
   10000e7af:	cmova  rbx,rbp
   10000e7b3:	inc    DWORD PTR [rsp+0x40]
   10000e7b7:	test   rcx,rcx
   10000e7ba:	je     0x10000e7c9
   10000e7bc:	movsxd rax,DWORD PTR [rsp+0x20]
   10000e7c1:	shl    rax,0x5
   10000e7c5:	inc    DWORD PTR [rax+rcx*1+0x18]
   10000e7c9:	lea    rdx,[rsp+0x20]
   10000e7ce:	mov    rcx,rdi
   10000e7d1:	call   QWORD PTR [rip+0xffffffffffff3389]        # 0x100001b60
   10000e7d7:	mov    rcx,QWORD PTR [rsp+0x38]
   10000e7dc:	jmp    0x10000e770
   10000e7de:	mov    rbx,QWORD PTR [rsp+0x60]
   10000e7e3:	mov    rbp,QWORD PTR [rsp+0x68]
   10000e7e8:	mov    rsi,QWORD PTR [rsp+0x78]
   10000e7ed:	add    rsp,0x50
   10000e7f1:	pop    rdi
   10000e7f2:	ret    
   10000e7f3:	nop
   10000e7f4:	nop
   10000e7f5:	nop
   10000e7f6:	nop
   10000e7f7:	nop
   10000e7f8:	nop
   10000e7f9:	nop
   10000e7fa:	nop
   10000e7fb:	nop
   10000e7fc:	nop
   10000e7fd:	nop
   10000e7fe:	nop
   10000e7ff:	nop
   10000e800:	push   rbx
   10000e802:	sub    rsp,0x20
   10000e806:	mov    rcx,QWORD PTR [rip+0x1a8b3]        # 0x1000290c0
   10000e80d:	mov    rax,QWORD PTR gs:0x30
   10000e816:	add    rax,rcx
   10000e819:	cmp    rcx,0x1480
   10000e820:	jge    0x10000e828
   10000e822:	call   QWORD PTR [rip+0xffffffffffff28f8]        # 0x100001120
   10000e828:	test   rax,rax
   10000e82b:	je     0x10000e839
   10000e82d:	mov    rcx,QWORD PTR [rax+0xd8]
   10000e834:	test   rcx,rcx
   10000e837:	jne    0x10000e86b
   10000e839:	call   QWORD PTR [rip+0xffffffffffff3311]        # 0x100001b50
   10000e83f:	mov    r11,QWORD PTR [rip+0x1a87a]        # 0x1000290c0
   10000e846:	mov    rax,QWORD PTR gs:0x30
   10000e84f:	add    rax,r11
   10000e852:	cmp    r11,0x1480
   10000e859:	jge    0x10000e864
   10000e85b:	mov    ecx,r11d
   10000e85e:	call   QWORD PTR [rip+0xffffffffffff28bc]        # 0x100001120
   10000e864:	mov    rcx,QWORD PTR [rax+0xd8]
   10000e86b:	mov    rbx,QWORD PTR [rcx+0x210]
   10000e872:	call   QWORD PTR [rip+0xffffffffffff3300]        # 0x100001b78
   10000e878:	mov    edx,eax
   10000e87a:	xor    eax,eax
   10000e87c:	lock cmpxchg DWORD PTR [rbx+0x90],edx
   10000e884:	je     0x10000e892
   10000e886:	lea    rcx,[rbx+0x90]
   10000e88d:	call   0x10000e630
   10000e892:	mov    rax,QWORD PTR [rip+0x1a827]        # 0x1000290c0
   10000e899:	mov    rdx,QWORD PTR gs:0x30
   10000e8a2:	add    rdx,rax
   10000e8a5:	cmp    rax,0x1480
   10000e8ab:	jge    0x10000e8b8
   10000e8ad:	mov    ecx,eax
   10000e8af:	call   QWORD PTR [rip+0xffffffffffff286b]        # 0x100001120
   10000e8b5:	mov    rdx,rax
   10000e8b8:	mov    rax,QWORD PTR [rdx+0xd8]
   10000e8bf:	xor    ebx,ebx
   10000e8c1:	mov    QWORD PTR [rdx+0x18],rbx
   10000e8c5:	mov    rax,QWORD PTR [rax+0x38]
   10000e8c9:	mov    QWORD PTR [rax+0x18],rbx
   10000e8cd:	mov    rcx,QWORD PTR [rip+0x1a7ec]        # 0x1000290c0
   10000e8d4:	mov    rax,QWORD PTR gs:0x30
   10000e8dd:	add    rax,rcx
   10000e8e0:	cmp    rcx,0x1480
   10000e8e7:	jge    0x10000e8ef
   10000e8e9:	call   QWORD PTR [rip+0xffffffffffff2831]        # 0x100001120
   10000e8ef:	test   rax,rax
   10000e8f2:	je     0x10000e900
   10000e8f4:	mov    rax,QWORD PTR [rax+0xd8]
   10000e8fb:	test   rax,rax
   10000e8fe:	jne    0x10000e932
   10000e900:	call   QWORD PTR [rip+0xffffffffffff324a]        # 0x100001b50
   10000e906:	mov    r11,QWORD PTR [rip+0x1a7b3]        # 0x1000290c0
   10000e90d:	mov    rax,QWORD PTR gs:0x30
   10000e916:	add    rax,r11
   10000e919:	cmp    r11,0x1480
   10000e920:	jge    0x10000e92b
   10000e922:	mov    ecx,r11d
   10000e925:	call   QWORD PTR [rip+0xffffffffffff27f5]        # 0x100001120
   10000e92b:	mov    rax,QWORD PTR [rax+0xd8]
   10000e932:	mov    rax,QWORD PTR [rax+0x210]
   10000e939:	mov    DWORD PTR [rax+0x90],ebx
   10000e93f:	add    rsp,0x20
   10000e943:	pop    rbx
   10000e944:	ret    
   10000e945:	nop
   10000e946:	nop
   10000e947:	nop
   10000e948:	nop
   10000e949:	nop
   10000e94a:	nop
   10000e94b:	nop
   10000e94c:	nop
   10000e94d:	nop
   10000e94e:	nop
   10000e94f:	nop
   10000e950:	sub    rsp,0x28
   10000e954:	call   QWORD PTR [rip+0xffffffffffff337e]        # 0x100001cd8
   10000e95a:	cmp    DWORD PTR [rax+0x4],0x5
   10000e95e:	ja     0x10000e97f
   10000e960:	call   QWORD PTR [rip+0xffffffffffff3372]        # 0x100001cd8
   10000e966:	cmp    DWORD PTR [rax+0x4],0x5
   10000e96a:	jne    0x10000e978
   10000e96c:	call   QWORD PTR [rip+0xffffffffffff3366]        # 0x100001cd8
   10000e972:	cmp    DWORD PTR [rax+0x8],0x2
   10000e976:	jae    0x10000e97f
   10000e978:	xor    eax,eax
   10000e97a:	add    rsp,0x28
   10000e97e:	ret    
   10000e97f:	mov    eax,0x1
   10000e984:	add    rsp,0x28
   10000e988:	ret    
   10000e989:	nop
   10000e98a:	nop
   10000e98b:	nop
   10000e98c:	nop
   10000e98d:	nop
   10000e98e:	nop
   10000e98f:	nop
   10000e990:	lea    rdx,[rip+0x9]        # 0x10000e9a0
   10000e997:	rex.W jmp QWORD PTR [rip+0xffffffffffff2e3a]        # 0x1000017d8
   10000e99e:	nop
   10000e99f:	nop
   10000e9a0:	push   rbx
   10000e9a1:	add    BYTE PTR [rcx+0x0],dh
   10000e9a4:	ins    BYTE PTR es:[rdi],dx
   10000e9a5:	add    BYTE PTR [rax+rax*1+0x75],al
   10000e9a9:	add    BYTE PTR [rbp+0x0],ch
   10000e9ac:	jo     0x10000e9ae
   10000e9ae:	add    BYTE PTR [r8+0x0],r15b
   10000e9b2:	movsxd eax,DWORD PTR [rax]
   10000e9b4:	add    BYTE PTR gs:[rax+0x0],dh
   10000e9b8:	je     0x10000e9ba
   10000e9ba:	imul   eax,DWORD PTR [rax],0x6e006f
   10000e9c0:	rex.W add BYTE PTR [rcx+0x0],spl
   10000e9c4:	outs   dx,BYTE PTR ds:[rsi]
   10000e9c5:	add    BYTE PTR [rax+rax*1+0x6c],ah
   10000e9c9:	add    BYTE PTR [rbp+0x0],ah
   10000e9cc:	jb     0x10000e9ce
   10000e9ce:	add    BYTE PTR [rax],al
   10000e9d0:	nop
   10000e9d1:	nop
   10000e9d2:	nop
   10000e9d3:	nop
   10000e9d4:	nop
   10000e9d5:	nop
   10000e9d6:	nop
   10000e9d7:	nop
   10000e9d8:	nop
   10000e9d9:	nop
   10000e9da:	nop
   10000e9db:	nop
   10000e9dc:	nop
   10000e9dd:	nop
   10000e9de:	nop
   10000e9df:	nop
   10000e9e0:	sub    rsp,0x28
   10000e9e4:	mov    rcx,QWORD PTR [rip+0x1a6d5]        # 0x1000290c0
   10000e9eb:	mov    rax,QWORD PTR gs:0x30
   10000e9f4:	add    rax,rcx
   10000e9f7:	cmp    rcx,0x1480
   10000e9fe:	jge    0x10000ea06
   10000ea00:	call   QWORD PTR [rip+0xffffffffffff271a]        # 0x100001120
   10000ea06:	test   rax,rax
   10000ea09:	je     0x10000ea17
   10000ea0b:	mov    rax,QWORD PTR [rax+0xd8]
   10000ea12:	test   rax,rax
   10000ea15:	jne    0x10000ea49
   10000ea17:	call   QWORD PTR [rip+0xffffffffffff3133]        # 0x100001b50
   10000ea1d:	mov    r11,QWORD PTR [rip+0x1a69c]        # 0x1000290c0
   10000ea24:	mov    rax,QWORD PTR gs:0x30
   10000ea2d:	add    rax,r11
   10000ea30:	cmp    r11,0x1480
   10000ea37:	jge    0x10000ea42
   10000ea39:	mov    ecx,r11d
   10000ea3c:	call   QWORD PTR [rip+0xffffffffffff26de]        # 0x100001120
   10000ea42:	mov    rax,QWORD PTR [rax+0xd8]
   10000ea49:	mov    rax,QWORD PTR [rax+0x388]
   10000ea50:	add    rsp,0x28
   10000ea54:	ret    
   10000ea55:	nop
   10000ea56:	nop
   10000ea57:	nop
   10000ea58:	nop
   10000ea59:	nop
   10000ea5a:	nop
   10000ea5b:	nop
   10000ea5c:	nop
   10000ea5d:	nop
   10000ea5e:	nop
   10000ea5f:	nop
   10000ea60:	mov    QWORD PTR [rsp+0x8],rbx
   10000ea65:	mov    QWORD PTR [rsp+0x10],rdi
   10000ea6a:	xor    edi,edi
   10000ea6c:	mov    r11,r8
   10000ea6f:	mov    r10,rdx
   10000ea72:	mov    rbx,rcx
   10000ea75:	mov    r9d,edi
   10000ea78:	test   rdx,rdx
   10000ea7b:	je     0x10000ea86
   10000ea7d:	cmp    rdx,0x7fffffff
   10000ea84:	jbe    0x10000ea8c
   10000ea86:	mov    r9d,0x80070057
   10000ea8c:	test   r9d,r9d
   10000ea8f:	js     0x10000eab4
   10000ea91:	mov    rcx,rdx
   10000ea94:	mov    rax,rbx
   10000ea97:	mov    r9d,edi
   10000ea9a:	test   rdx,rdx
   10000ea9d:	je     0x10000eaae
   10000ea9f:	nop
   10000eaa0:	cmp    WORD PTR [rax],di
   10000eaa3:	je     0x10000eb00
   10000eaa5:	add    rax,0x2
   10000eaa9:	dec    rcx
   10000eaac:	jne    0x10000eaa0
   10000eaae:	mov    r9d,0x80070057
   10000eab4:	mov    r8,rdi
   10000eab7:	test   r9d,r9d
   10000eaba:	js     0x10000eb1f
   10000eabc:	lea    rcx,[rbx+r8*2]
   10000eac0:	mov    r9d,edi
   10000eac3:	sub    rdx,r8
   10000eac6:	je     0x10000eb12
   10000eac8:	add    r8,0x7fffffff
   10000eacf:	mov    rax,rdx
   10000ead2:	sub    rax,r10
   10000ead5:	add    r8,rax
   10000ead8:	sub    r11,rcx
   10000eadb:	nop    DWORD PTR [rax+rax*1+0x0]
   10000eae0:	test   r8,r8
   10000eae3:	je     0x10000eb0d
   10000eae5:	movzx  eax,WORD PTR [r11+rcx*1]
   10000eaea:	test   ax,ax
   10000eaed:	je     0x10000eb0d
   10000eaef:	mov    WORD PTR [rcx],ax
   10000eaf2:	add    rcx,0x2
   10000eaf6:	dec    r8
   10000eaf9:	dec    rdx
   10000eafc:	jne    0x10000eae0
   10000eafe:	jmp    0x10000eb12
   10000eb00:	test   rcx,rcx
   10000eb03:	je     0x10000eaae
   10000eb05:	mov    r8,rdx
   10000eb08:	sub    r8,rcx
   10000eb0b:	jmp    0x10000eab7
   10000eb0d:	test   rdx,rdx
   10000eb10:	jne    0x10000eb1c
   10000eb12:	sub    rcx,0x2
   10000eb16:	mov    r9d,0x8007007a
   10000eb1c:	mov    WORD PTR [rcx],di
   10000eb1f:	mov    rbx,QWORD PTR [rsp+0x8]
   10000eb24:	mov    rdi,QWORD PTR [rsp+0x10]
   10000eb29:	mov    eax,r9d
   10000eb2c:	ret    
   10000eb2d:	nop
   10000eb2e:	nop
   10000eb2f:	nop
   10000eb30:	nop
   10000eb31:	nop
   10000eb32:	nop
   10000eb33:	nop
   10000eb34:	nop
   10000eb35:	nop
   10000eb36:	nop
   10000eb37:	nop
   10000eb38:	nop
   10000eb39:	nop
   10000eb3a:	nop
   10000eb3b:	nop
   10000eb3c:	nop
   10000eb3d:	nop
   10000eb3e:	nop
   10000eb3f:	nop
   10000eb40:	mov    QWORD PTR [rsp+0x20],r9
   10000eb45:	push   rsi
   10000eb46:	push   rdi
   10000eb47:	sub    rsp,0x38
   10000eb4b:	xor    edi,edi
   10000eb4d:	mov    rsi,rcx
   10000eb50:	mov    eax,edi
   10000eb52:	test   rdx,rdx
   10000eb55:	je     0x10000eb60
   10000eb57:	cmp    rdx,0x7fffffff
   10000eb5e:	jbe    0x10000eb65
   10000eb60:	mov    eax,0x80070057
   10000eb65:	test   eax,eax
   10000eb67:	js     0x10000ebb4
   10000eb69:	lea    rax,[rsp+0x70]
   10000eb6e:	mov    QWORD PTR [rsp+0x30],rbx
   10000eb73:	lea    rbx,[rdx-0x1]
   10000eb77:	mov    rdx,rbx
   10000eb7a:	mov    QWORD PTR [rsp+0x20],rax
   10000eb7f:	call   QWORD PTR [rip+0xffffffffffff28a3]        # 0x100001428
   10000eb85:	test   eax,eax
   10000eb87:	js     0x10000eba4
   10000eb89:	cdqe   
   10000eb8b:	cmp    rax,rbx
   10000eb8e:	ja     0x10000eba4
   10000eb90:	jne    0x10000ebad
   10000eb92:	mov    BYTE PTR [rbx+rsi*1],dil
   10000eb96:	mov    rbx,QWORD PTR [rsp+0x30]
   10000eb9b:	mov    eax,edi
   10000eb9d:	add    rsp,0x38
   10000eba1:	pop    rdi
   10000eba2:	pop    rsi
   10000eba3:	ret    
   10000eba4:	mov    BYTE PTR [rbx+rsi*1],dil
   10000eba8:	mov    edi,0x8007007a
   10000ebad:	mov    rbx,QWORD PTR [rsp+0x30]
   10000ebb2:	mov    eax,edi
   10000ebb4:	add    rsp,0x38
   10000ebb8:	pop    rdi
   10000ebb9:	pop    rsi
   10000ebba:	ret    
   10000ebbb:	nop
   10000ebbc:	nop
   10000ebbd:	nop
   10000ebbe:	nop
   10000ebbf:	nop
   10000ebc0:	nop
   10000ebc1:	nop
   10000ebc2:	nop
   10000ebc3:	nop
   10000ebc4:	nop
   10000ebc5:	nop
   10000ebc6:	nop
   10000ebc7:	nop
   10000ebc8:	nop
   10000ebc9:	nop
   10000ebca:	nop
   10000ebcb:	nop
   10000ebcc:	nop
   10000ebcd:	nop
   10000ebce:	nop
   10000ebcf:	nop
   10000ebd0:	sub    rsp,0x28
   10000ebd4:	mov    rcx,QWORD PTR [rip+0x1a4e5]        # 0x1000290c0
   10000ebdb:	mov    rax,QWORD PTR gs:0x30
   10000ebe4:	add    rax,rcx
   10000ebe7:	cmp    rcx,0x1480
   10000ebee:	jge    0x10000ebf6
   10000ebf0:	call   QWORD PTR [rip+0xffffffffffff252a]        # 0x100001120
   10000ebf6:	test   rax,rax
   10000ebf9:	je     0x10000ec07
   10000ebfb:	mov    rax,QWORD PTR [rax+0xd8]
   10000ec02:	test   rax,rax
   10000ec05:	jne    0x10000ec39
   10000ec07:	call   QWORD PTR [rip+0xffffffffffff2f43]        # 0x100001b50
   10000ec0d:	mov    r11,QWORD PTR [rip+0x1a4ac]        # 0x1000290c0
   10000ec14:	mov    rax,QWORD PTR gs:0x30
   10000ec1d:	add    rax,r11
   10000ec20:	cmp    r11,0x1480
   10000ec27:	jge    0x10000ec32
   10000ec29:	mov    ecx,r11d
   10000ec2c:	call   QWORD PTR [rip+0xffffffffffff24ee]        # 0x100001120
   10000ec32:	mov    rax,QWORD PTR [rax+0xd8]
   10000ec39:	mov    rax,QWORD PTR [rax+0x390]
   10000ec40:	add    rsp,0x28
   10000ec44:	ret    
   10000ec45:	nop
   10000ec46:	nop
   10000ec47:	nop
   10000ec48:	nop
   10000ec49:	nop
   10000ec4a:	nop
   10000ec4b:	nop
   10000ec4c:	nop
   10000ec4d:	nop
   10000ec4e:	nop
   10000ec4f:	nop
   10000ec50:	push   rbx
   10000ec52:	push   rbp
   10000ec53:	push   r15
   10000ec55:	sub    rsp,0x20
   10000ec59:	mov    rax,QWORD PTR gs:0x30
   10000ec62:	mov    rbx,rcx
   10000ec65:	mov    rcx,QWORD PTR [rip+0x1a454]        # 0x1000290c0
   10000ec6c:	add    rax,rcx
   10000ec6f:	mov    r15,r8
   10000ec72:	mov    ebp,edx
   10000ec74:	cmp    rcx,0x1480
   10000ec7b:	jge    0x10000ec83
   10000ec7d:	call   QWORD PTR [rip+0xffffffffffff249d]        # 0x100001120
   10000ec83:	mov    QWORD PTR [rsp+0x40],rsi
   10000ec88:	test   rax,rax
   10000ec8b:	je     0x10000ec99
   10000ec8d:	mov    rsi,QWORD PTR [rax+0xd8]
   10000ec94:	test   rsi,rsi
   10000ec97:	jne    0x10000eccb
   10000ec99:	call   QWORD PTR [rip+0xffffffffffff2eb1]        # 0x100001b50
   10000ec9f:	mov    r11,QWORD PTR [rip+0x1a41a]        # 0x1000290c0
   10000eca6:	mov    rax,QWORD PTR gs:0x30
   10000ecaf:	add    rax,r11
   10000ecb2:	cmp    r11,0x1480
   10000ecb9:	jge    0x10000ecc4
   10000ecbb:	mov    ecx,r11d
   10000ecbe:	call   QWORD PTR [rip+0xffffffffffff245c]        # 0x100001120
   10000ecc4:	mov    rsi,QWORD PTR [rax+0xd8]
   10000eccb:	test   ebp,ebp
   10000eccd:	je     0x10000ed18
   10000eccf:	mov    rcx,QWORD PTR [rsi+0x210]
   10000ecd6:	test   rcx,rcx
   10000ecd9:	je     0x10000ed18
   10000ecdb:	mov    eax,DWORD PTR [rcx+0xb4]
   10000ece1:	test   al,0x4
   10000ece3:	je     0x10000ed18
   10000ece5:	mov    rax,QWORD PTR [rcx+0x98]
   10000ecec:	test   BYTE PTR [rax+0x220],0x1
   10000ecf3:	jne    0x10000ed18
   10000ecf5:	mov    eax,DWORD PTR [rax+0x2d8]
   10000ecfb:	test   al,al
   10000ecfd:	js     0x10000ed18
   10000ecff:	bt     eax,0x8
   10000ed03:	jb     0x10000ed18
   10000ed05:	mov    eax,0x2
   10000ed0a:	mov    rsi,QWORD PTR [rsp+0x40]
   10000ed0f:	add    rsp,0x20
   10000ed13:	pop    r15
   10000ed15:	pop    rbp
   10000ed16:	pop    rbx
   10000ed17:	ret    
   10000ed18:	mov    r8,QWORD PTR [rsi+0x218]
   10000ed1f:	mov    QWORD PTR [rsp+0x50],rdi
   10000ed24:	xor    edi,edi
   10000ed26:	mov    QWORD PTR [rsp+0x58],r14
   10000ed2b:	test   r8,r8
   10000ed2e:	je     0x10000ee1b
   10000ed34:	rdtsc  
   10000ed36:	shl    rdx,0x20
   10000ed3a:	movabs r14,0x7fffffffffffffff
   10000ed44:	or     rax,rdx
   10000ed47:	mov    rdx,QWORD PTR [rsi+0x2f8]
   10000ed4e:	cmp    rax,rdx
   10000ed51:	ja     0x10000ed6f
   10000ed53:	mov    rcx,rdx
   10000ed56:	sub    rcx,rax
   10000ed59:	cmp    rcx,QWORD PTR [r8+0xab0]
   10000ed60:	jbe    0x10000ee1b
   10000ed66:	cmp    rdx,r14
   10000ed69:	je     0x10000ee1b
   10000ed6f:	cmp    DWORD PTR [rbx],0x1
   10000ed72:	jne    0x10000ee1b
   10000ed78:	test   ebp,ebp
   10000ed7a:	je     0x10000ee1b
   10000ed80:	mov    rcx,QWORD PTR [rip+0x1a339]        # 0x1000290c0
   10000ed87:	mov    rax,QWORD PTR gs:0x30
   10000ed90:	add    rax,rcx
   10000ed93:	cmp    rcx,0x1480
   10000ed9a:	jge    0x10000eda2
   10000ed9c:	call   QWORD PTR [rip+0xffffffffffff237e]        # 0x100001120
   10000eda2:	test   rax,rax
   10000eda5:	je     0x10000edb3
   10000eda7:	mov    rcx,QWORD PTR [rax+0xd8]
   10000edae:	test   rcx,rcx
   10000edb1:	jne    0x10000ede5
   10000edb3:	call   QWORD PTR [rip+0xffffffffffff2d97]        # 0x100001b50
   10000edb9:	mov    r11,QWORD PTR [rip+0x1a300]        # 0x1000290c0
   10000edc0:	mov    rax,QWORD PTR gs:0x30
   10000edc9:	add    rax,r11
   10000edcc:	cmp    r11,0x1480
   10000edd3:	jge    0x10000edde
   10000edd5:	mov    ecx,r11d
   10000edd8:	call   QWORD PTR [rip+0xffffffffffff2342]        # 0x100001120
   10000edde:	mov    rcx,QWORD PTR [rax+0xd8]
   10000ede5:	rdtsc  
   10000ede7:	mov    r8,QWORD PTR [rcx+0x2f8]
   10000edee:	shl    rdx,0x20
   10000edf2:	or     rax,rdx
   10000edf5:	cmp    rax,r8
   10000edf8:	ja     0x10000ee15
   10000edfa:	mov    rdx,r8
   10000edfd:	sub    rdx,rax
   10000ee00:	mov    rax,QWORD PTR [rcx+0x218]
   10000ee07:	cmp    rdx,QWORD PTR [rax+0xab0]
   10000ee0e:	jbe    0x10000ee1b
   10000ee10:	cmp    r8,r14
   10000ee13:	je     0x10000ee1b
   10000ee15:	call   QWORD PTR [rip+0xffffffffffff2e35]        # 0x100001c50
   10000ee1b:	lea    r14,[rbx+0x20]
   10000ee1f:	call   QWORD PTR [rip+0xffffffffffff2d53]        # 0x100001b78
   10000ee25:	mov    edx,eax
   10000ee27:	xor    eax,eax
   10000ee29:	lock cmpxchg DWORD PTR [r14],edx
   10000ee2e:	je     0x10000ee38
   10000ee30:	mov    rcx,r14
   10000ee33:	call   0x100006880
   10000ee38:	cmp    DWORD PTR [rbx],edi
   10000ee3a:	jne    0x10000ee95
   10000ee3c:	test   ebp,ebp
   10000ee3e:	je     0x10000ee8b
   10000ee40:	mov    rax,QWORD PTR [rbx+0x8]
   10000ee44:	lea    rdx,[rbx+0x8]
   10000ee48:	mov    rcx,r15
   10000ee4b:	mov    QWORD PTR [rsi],rax
   10000ee4e:	mov    rax,QWORD PTR [rdx]
   10000ee51:	mov    QWORD PTR [rax+0x8],rsi
   10000ee55:	mov    QWORD PTR [rdx],rsi
   10000ee58:	mov    QWORD PTR [rsi+0x8],rdx
   10000ee5c:	mov    QWORD PTR [rsi+0x290],rdx
   10000ee63:	mov    QWORD PTR [rsi+0x298],r14
   10000ee6a:	mov    DWORD PTR [r14],edi
   10000ee6d:	call   QWORD PTR [rip+0xffffffffffff2d7d]        # 0x100001bf0
   10000ee73:	mov    edx,ebp
   10000ee75:	mov    rcx,rsi
   10000ee78:	call   QWORD PTR [rip+0xffffffffffff2d6a]        # 0x100001be8
   10000ee7e:	mov    rcx,r15
   10000ee81:	mov    edi,eax
   10000ee83:	call   QWORD PTR [rip+0xffffffffffff2d57]        # 0x100001be0
   10000ee89:	jmp    0x10000eea9
   10000ee8b:	mov    DWORD PTR [r14],edi
   10000ee8e:	mov    edi,0x102
   10000ee93:	jmp    0x10000eea9
   10000ee95:	cmp    DWORD PTR [rbx+0x4],0x1
   10000ee99:	jne    0x10000eea6
   10000ee9b:	mov    eax,DWORD PTR [rbx]
   10000ee9d:	dec    QWORD PTR [rbx+0x18]
   10000eea1:	cmove  eax,edi
   10000eea4:	mov    DWORD PTR [rbx],eax
   10000eea6:	mov    DWORD PTR [r14],edi
   10000eea9:	mov    r14,QWORD PTR [rsp+0x58]
   10000eeae:	mov    rsi,QWORD PTR [rsp+0x40]
   10000eeb3:	mov    eax,edi
   10000eeb5:	mov    rdi,QWORD PTR [rsp+0x50]
   10000eeba:	add    rsp,0x20
   10000eebe:	pop    r15
   10000eec0:	pop    rbp
   10000eec1:	pop    rbx
   10000eec2:	ret    
   10000eec3:	nop
   10000eec4:	nop
   10000eec5:	nop
   10000eec6:	nop
   10000eec7:	nop
   10000eec8:	nop
   10000eec9:	nop
   10000eeca:	nop
   10000eecb:	nop
   10000eecc:	nop
   10000eecd:	nop
   10000eece:	nop
   10000eecf:	nop
   10000eed0:	mov    QWORD PTR [rsp+0x8],rcx
   10000eed5:	push   rbp
   10000eed6:	push   rsi
   10000eed7:	push   rdi
   10000eed8:	sub    rsp,0x30
   10000eedc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   10000eee5:	mov    QWORD PTR [rsp+0x60],rbx
   10000eeea:	mov    rsi,rcx
   10000eeed:	lea    rdi,[rcx+0x8]
   10000eef1:	cmp    QWORD PTR [rdi+0x8],rdi
   10000eef5:	je     0x10000ef56
   10000eef7:	xor    ebp,ebp
   10000eef9:	nop    DWORD PTR [rax+0x0]
   10000ef00:	mov    rbx,QWORD PTR [rdi+0x8]
   10000ef04:	cmp    rbx,rdi
   10000ef07:	je     0x10000ef50
   10000ef09:	test   rbx,rbx
   10000ef0c:	je     0x10000ef50
   10000ef0e:	mov    rcx,QWORD PTR [rbx+0x8]
   10000ef12:	mov    rax,QWORD PTR [rbx]
   10000ef15:	mov    QWORD PTR [rax+0x8],rcx
   10000ef19:	mov    QWORD PTR [rcx],rax
   10000ef1c:	mov    QWORD PTR [rbx+0x8],rbp
   10000ef20:	mov    QWORD PTR [rbx],rbp
   10000ef23:	mov    QWORD PTR [rsp+0x58],rbx
   10000ef28:	mov    rcx,QWORD PTR [rbx+0x38]
   10000ef2c:	test   rcx,rcx
   10000ef2f:	je     0x10000ef38
   10000ef31:	call   QWORD PTR [rip+0xffffffffffff2489]        # 0x1000013c0
   10000ef37:	nop
   10000ef38:	mov    rcx,QWORD PTR [rbx+0x28]
   10000ef3c:	test   rcx,rcx
   10000ef3f:	je     0x10000ef47
   10000ef41:	call   QWORD PTR [rip+0xffffffffffff2479]        # 0x1000013c0
   10000ef47:	mov    rcx,rbx
   10000ef4a:	call   QWORD PTR [rip+0xffffffffffff2470]        # 0x1000013c0
   10000ef50:	cmp    QWORD PTR [rdi+0x8],rdi
   10000ef54:	jne    0x10000ef00
   10000ef56:	mov    rcx,QWORD PTR [rsi+0x68]
   10000ef5a:	test   rcx,rcx
   10000ef5d:	je     0x10000ef66
   10000ef5f:	call   QWORD PTR [rip+0xffffffffffff245b]        # 0x1000013c0
   10000ef65:	nop
   10000ef66:	mov    rcx,QWORD PTR [rsi+0x40]
   10000ef6a:	test   rcx,rcx
   10000ef6d:	je     0x10000ef76
   10000ef6f:	call   QWORD PTR [rip+0xffffffffffff244b]        # 0x1000013c0
   10000ef75:	nop
   10000ef76:	mov    rcx,QWORD PTR [rsi+0x38]
   10000ef7a:	test   rcx,rcx
   10000ef7d:	je     0x10000ef86
   10000ef7f:	call   QWORD PTR [rip+0xffffffffffff243b]        # 0x1000013c0
   10000ef85:	nop
   10000ef86:	mov    rcx,QWORD PTR [rsi+0x30]
   10000ef8a:	test   rcx,rcx
   10000ef8d:	je     0x10000ef95
   10000ef8f:	call   QWORD PTR [rip+0xffffffffffff242b]        # 0x1000013c0
   10000ef95:	mov    rbx,QWORD PTR [rsp+0x60]
   10000ef9a:	add    rsp,0x30
   10000ef9e:	pop    rdi
   10000ef9f:	pop    rsi
   10000efa0:	pop    rbp
   10000efa1:	ret    
   10000efa2:	nop
   10000efa3:	nop
   10000efa4:	nop
   10000efa5:	nop
   10000efa6:	nop
   10000efa7:	nop
   10000efa8:	nop
   10000efa9:	nop
   10000efaa:	nop
   10000efab:	nop
   10000efac:	nop
   10000efad:	nop
   10000efae:	nop
   10000efaf:	nop
   10000efb0:	mov    QWORD PTR [rsp+0x8],rbx
   10000efb5:	mov    QWORD PTR [rsp+0x10],rsi
   10000efba:	mov    QWORD PTR [rsp+0x18],rdi
   10000efbf:	push   rbp
   10000efc0:	push   r12
   10000efc2:	push   r13
   10000efc4:	push   r14
   10000efc6:	push   r15
   10000efc8:	lea    rbp,[rsp-0x1140]
   10000efd0:	mov    eax,0x1240
   10000efd5:	call   0x100002630
   10000efda:	sub    rsp,rax
   10000efdd:	mov    rax,QWORD PTR [rip+0x1a20c]        # 0x1000291f0
   10000efe4:	xor    rax,rsp
   10000efe7:	mov    QWORD PTR [rbp+0x1130],rax
   10000efee:	xor    r12d,r12d
   10000eff1:	lea    r13,[rip+0x1a9f0]        # 0x1000299e8
   10000eff8:	lea    rcx,[rsp+0x30]
   10000effd:	mov    r15d,0x80004005
   10000f003:	mov    QWORD PTR [rsp+0x40],r13
   10000f008:	mov    DWORD PTR [rsp+0x38],r12d
   10000f00d:	mov    WORD PTR [rbp+0x170],r12w
   10000f015:	mov    QWORD PTR [rsp+0x30],r12
   10000f01a:	mov    edi,r15d
   10000f01d:	call   QWORD PTR [rip+0xffffffffffff2dad]        # 0x100001dd0
   10000f023:	mov    esi,0x7e0
   10000f028:	mov    r14,rax
   10000f02b:	test   rax,rax
   10000f02e:	je     0x10000f19a
   10000f034:	nop    WORD PTR [rax+rax*1]
   10000f039:	mov    eax,DWORD PTR [r14+0x40]
   10000f03d:	cmp    eax,0x2
   10000f040:	je     0x10000f139
   10000f046:	test   eax,eax
   10000f048:	je     0x10000f139
   10000f04e:	cmp    eax,0x3
   10000f051:	je     0x10000f139
   10000f057:	cmp    DWORD PTR [r14+0x34],r12d
   10000f05b:	jge    0x10000f139
   10000f061:	nop    DWORD PTR [rax+rax*1+0x0]
   10000f069:	nop    DWORD PTR [rax+0x0]
   10000f070:	mov    rcx,rsi
   10000f073:	lea    rax,[rbp+0x170]
   10000f07a:	nop    WORD PTR [rax+rax*1+0x0]
   10000f080:	cmp    WORD PTR [rax],r12w
   10000f084:	je     0x10000f094
   10000f086:	add    rax,0x2
   10000f08a:	dec    rcx
   10000f08d:	jne    0x10000f080
   10000f08f:	jmp    0x10000f19a
   10000f094:	test   rcx,rcx
   10000f097:	je     0x10000f19a
   10000f09d:	mov    rdi,rsi
   10000f0a0:	lea    rdx,[rsp+0x50]
   10000f0a5:	xor    r9d,r9d
   10000f0a8:	sub    rdi,rcx
   10000f0ab:	mov    rcx,r14
   10000f0ae:	mov    r8d,0x10e
   10000f0b4:	call   QWORD PTR [rip+0xffffffffffff2d2e]        # 0x100001de8
   10000f0ba:	lea    rbx,[rdi+rdi*1]
   10000f0be:	test   al,al
   10000f0c0:	je     0x10000f0d1
   10000f0c2:	call   QWORD PTR [rip+0xffffffffffff2b70]        # 0x100001c38
   10000f0c8:	lea    r8,[rip+0x589]        # 0x10000f658
   10000f0cf:	jmp    0x10000f0de
   10000f0d1:	call   QWORD PTR [rip+0xffffffffffff2b61]        # 0x100001c38
   10000f0d7:	lea    r8,[rip+0x58a]        # 0x10000f668
   10000f0de:	mov    r9,rax
   10000f0e1:	lea    rax,[rsp+0x50]
   10000f0e6:	lea    rcx,[rbp+0x170]
   10000f0ed:	mov    rdx,rsi
   10000f0f0:	add    rcx,rbx
   10000f0f3:	mov    QWORD PTR [rsp+0x20],rax
   10000f0f8:	sub    rdx,rdi
   10000f0fb:	call   0x100005bb0
   10000f100:	mov    edi,eax
   10000f102:	test   eax,eax
   10000f104:	jns    0x10000f139
   10000f106:	cmp    rbx,0xfc0
   10000f10d:	jae    0x10000f171
   10000f10f:	lea    r8,[rbp+0x170]
   10000f116:	mov    rdx,rbx
   10000f119:	mov    ecx,0x42d6
   10000f11e:	mov    WORD PTR [rbp+rbx*1+0x170],r12w
   10000f127:	call   0x1000182d0
   10000f12c:	mov    WORD PTR [rbp+0x170],r12w
   10000f134:	jmp    0x10000f070
   10000f139:	lea    rcx,[rsp+0x30]
   10000f13e:	call   QWORD PTR [rip+0xffffffffffff2c8c]        # 0x100001dd0
   10000f144:	mov    r14,rax
   10000f147:	test   rax,rax
   10000f14a:	jne    0x10000f039
   10000f150:	test   edi,edi
   10000f152:	js     0x10000f19a
   10000f154:	mov    rcx,rsi
   10000f157:	lea    rax,[rbp+0x170]
   10000f15e:	xchg   ax,ax
   10000f160:	cmp    WORD PTR [rax],r12w
   10000f164:	je     0x10000f179
   10000f166:	add    rax,0x2
   10000f16a:	dec    rcx
   10000f16d:	jne    0x10000f160
   10000f16f:	jmp    0x10000f19a
   10000f171:	xor    ecx,ecx
   10000f173:	call   0x100003850
   10000f178:	int3   
   10000f179:	test   rcx,rcx
   10000f17c:	je     0x10000f19a
   10000f17e:	mov    rdx,rsi
   10000f181:	sub    rdx,rcx
   10000f184:	je     0x10000f19a
   10000f186:	lea    r8,[rbp+0x170]
   10000f18d:	add    rdx,rdx
   10000f190:	mov    ecx,0x42d6
   10000f195:	call   0x1000182d0
   10000f19a:	lea    rax,[rip+0x1a7c7]        # 0x100029968
   10000f1a1:	lea    rcx,[rsp+0x30]
   10000f1a6:	mov    DWORD PTR [rsp+0x38],r12d
   10000f1ab:	mov    edi,r15d
   10000f1ae:	mov    WORD PTR [rbp+0x170],r12w
   10000f1b6:	mov    QWORD PTR [rsp+0x30],r12
   10000f1bb:	mov    QWORD PTR [rsp+0x40],rax
   10000f1c0:	call   QWORD PTR [rip+0xffffffffffff2c0a]        # 0x100001dd0
   10000f1c6:	mov    r14,rax
   10000f1c9:	test   rax,rax
   10000f1cc:	je     0x10000f32a
   10000f1d2:	mov    ecx,DWORD PTR [r14+0x40]
   10000f1d6:	cmp    ecx,0x2
   10000f1d9:	je     0x10000f2c9
   10000f1df:	test   ecx,ecx
   10000f1e1:	je     0x10000f2c9
   10000f1e7:	cmp    ecx,0x3
   10000f1ea:	je     0x10000f2c9
   10000f1f0:	cmp    DWORD PTR [r14+0x34],r12d
   10000f1f4:	jge    0x10000f2c9
   10000f1fa:	nop    WORD PTR [rax+rax*1+0x0]
   10000f200:	mov    rcx,rsi
   10000f203:	lea    rax,[rbp+0x170]
   10000f20a:	nop    WORD PTR [rax+rax*1+0x0]
   10000f210:	cmp    WORD PTR [rax],r12w
   10000f214:	je     0x10000f224
   10000f216:	add    rax,0x2
   10000f21a:	dec    rcx
   10000f21d:	jne    0x10000f210
   10000f21f:	jmp    0x10000f32a
   10000f224:	test   rcx,rcx
   10000f227:	je     0x10000f32a
   10000f22d:	mov    rdi,rsi
   10000f230:	lea    rdx,[rsp+0x50]
   10000f235:	mov    r9b,0x1
   10000f238:	sub    rdi,rcx
   10000f23b:	mov    rcx,r14
   10000f23e:	mov    r8d,0x10e
   10000f244:	call   QWORD PTR [rip+0xffffffffffff2b9e]        # 0x100001de8
   10000f24a:	lea    rbx,[rdi+rdi*1]
   10000f24e:	test   al,al
   10000f250:	je     0x10000f261
   10000f252:	call   QWORD PTR [rip+0xffffffffffff29e0]        # 0x100001c38
   10000f258:	lea    r8,[rip+0x3f9]        # 0x10000f658
   10000f25f:	jmp    0x10000f26e
   10000f261:	call   QWORD PTR [rip+0xffffffffffff29d1]        # 0x100001c38
   10000f267:	lea    r8,[rip+0x3fa]        # 0x10000f668
   10000f26e:	mov    r9,rax
   10000f271:	lea    rax,[rsp+0x50]
   10000f276:	lea    rcx,[rbp+0x170]
   10000f27d:	mov    rdx,rsi
   10000f280:	add    rcx,rbx
   10000f283:	mov    QWORD PTR [rsp+0x20],rax
   10000f288:	sub    rdx,rdi
   10000f28b:	call   0x100005bb0
   10000f290:	mov    edi,eax
   10000f292:	test   eax,eax
   10000f294:	jns    0x10000f2c9
   10000f296:	cmp    rbx,0xfc0
   10000f29d:	jae    0x10000f301
   10000f29f:	lea    r8,[rbp+0x170]
   10000f2a6:	mov    rdx,rbx
   10000f2a9:	mov    ecx,0x42db
   10000f2ae:	mov    WORD PTR [rbp+rbx*1+0x170],r12w
   10000f2b7:	call   0x1000182d0
   10000f2bc:	mov    WORD PTR [rbp+0x170],r12w
   10000f2c4:	jmp    0x10000f200
   10000f2c9:	lea    rcx,[rsp+0x30]
   10000f2ce:	call   QWORD PTR [rip+0xffffffffffff2afc]        # 0x100001dd0
   10000f2d4:	mov    r14,rax
   10000f2d7:	test   rax,rax
   10000f2da:	jne    0x10000f1d2
   10000f2e0:	test   edi,edi
   10000f2e2:	js     0x10000f32a
   10000f2e4:	mov    rcx,rsi
   10000f2e7:	lea    rax,[rbp+0x170]
   10000f2ee:	xchg   ax,ax
   10000f2f0:	cmp    WORD PTR [rax],r12w
   10000f2f4:	je     0x10000f309
   10000f2f6:	add    rax,0x2
   10000f2fa:	dec    rcx
   10000f2fd:	jne    0x10000f2f0
   10000f2ff:	jmp    0x10000f32a
   10000f301:	xor    ecx,ecx
   10000f303:	call   0x100003850
   10000f308:	int3   
   10000f309:	test   rcx,rcx
   10000f30c:	je     0x10000f32a
   10000f30e:	mov    rdx,rsi
   10000f311:	sub    rdx,rcx
   10000f314:	je     0x10000f32a
   10000f316:	lea    r8,[rbp+0x170]
   10000f31d:	add    rdx,rdx
   10000f320:	mov    ecx,0x42db
   10000f325:	call   0x1000182d0
   10000f32a:	lea    rcx,[rsp+0x30]
   10000f32f:	mov    DWORD PTR [rsp+0x38],r12d
   10000f334:	mov    QWORD PTR [rsp+0x40],r13
   10000f339:	mov    edi,r15d
   10000f33c:	mov    WORD PTR [rbp+0x170],r12w
   10000f344:	mov    QWORD PTR [rsp+0x30],r12
   10000f349:	call   QWORD PTR [rip+0xffffffffffff2a81]        # 0x100001dd0
   10000f34f:	mov    r14,rax
   10000f352:	test   rax,rax
   10000f355:	je     0x10000f4aa
   10000f35b:	nop    DWORD PTR [rax+rax*1+0x0]
   10000f360:	mov    ecx,DWORD PTR [r14+0x40]
   10000f364:	cmp    ecx,0x2
   10000f367:	je     0x10000f380
   10000f369:	test   ecx,ecx
   10000f36b:	je     0x10000f380
   10000f36d:	cmp    ecx,0x3
   10000f370:	je     0x10000f380
   10000f372:	cmp    DWORD PTR [r14+0x34],r12d
   10000f376:	jl     0x10000f449
   10000f37c:	nop    DWORD PTR [rax+0x0]
   10000f380:	mov    rcx,rsi
   10000f383:	lea    rax,[rbp+0x170]
   10000f38a:	nop    WORD PTR [rax+rax*1+0x0]
   10000f390:	cmp    WORD PTR [rax],r12w
   10000f394:	je     0x10000f3a4
   10000f396:	add    rax,0x2
   10000f39a:	dec    rcx
   10000f39d:	jne    0x10000f390
   10000f39f:	jmp    0x10000f4aa
   10000f3a4:	test   rcx,rcx
   10000f3a7:	je     0x10000f4aa
   10000f3ad:	mov    rdi,rsi
   10000f3b0:	lea    rdx,[rsp+0x50]
   10000f3b5:	xor    r9d,r9d
   10000f3b8:	sub    rdi,rcx
   10000f3bb:	mov    rcx,r14
   10000f3be:	mov    r8d,0x10e
   10000f3c4:	call   QWORD PTR [rip+0xffffffffffff2a1e]        # 0x100001de8
   10000f3ca:	lea    rbx,[rdi+rdi*1]
   10000f3ce:	test   al,al
   10000f3d0:	je     0x10000f3e1
   10000f3d2:	call   QWORD PTR [rip+0xffffffffffff2860]        # 0x100001c38
   10000f3d8:	lea    r8,[rip+0x279]        # 0x10000f658
   10000f3df:	jmp    0x10000f3ee
   10000f3e1:	call   QWORD PTR [rip+0xffffffffffff2851]        # 0x100001c38
   10000f3e7:	lea    r8,[rip+0x27a]        # 0x10000f668
   10000f3ee:	mov    r9,rax
   10000f3f1:	lea    rax,[rsp+0x50]
   10000f3f6:	lea    rcx,[rbp+0x170]
   10000f3fd:	mov    rdx,rsi
   10000f400:	add    rcx,rbx
   10000f403:	mov    QWORD PTR [rsp+0x20],rax
   10000f408:	sub    rdx,rdi
   10000f40b:	call   0x100005bb0
   10000f410:	mov    edi,eax
   10000f412:	test   eax,eax
   10000f414:	jns    0x10000f449
   10000f416:	cmp    rbx,0xfc0
   10000f41d:	jae    0x10000f481
   10000f41f:	lea    r8,[rbp+0x170]
   10000f426:	mov    rdx,rbx
   10000f429:	mov    ecx,0xc2f3
   10000f42e:	mov    WORD PTR [rbp+rbx*1+0x170],r12w
   10000f437:	call   0x1000182d0
   10000f43c:	mov    WORD PTR [rbp+0x170],r12w
   10000f444:	jmp    0x10000f380
   10000f449:	lea    rcx,[rsp+0x30]
   10000f44e:	call   QWORD PTR [rip+0xffffffffffff297c]        # 0x100001dd0
   10000f454:	mov    r14,rax
   10000f457:	test   rax,rax
   10000f45a:	jne    0x10000f360
   10000f460:	test   edi,edi
   10000f462:	js     0x10000f4aa
   10000f464:	mov    rcx,rsi
   10000f467:	lea    rax,[rbp+0x170]
   10000f46e:	xchg   ax,ax
   10000f470:	cmp    WORD PTR [rax],r12w
   10000f474:	je     0x10000f489
   10000f476:	add    rax,0x2
   10000f47a:	dec    rcx
   10000f47d:	jne    0x10000f470
   10000f47f:	jmp    0x10000f4aa
   10000f481:	xor    ecx,ecx
   10000f483:	call   0x100003850
   10000f488:	int3   
   10000f489:	test   rcx,rcx
   10000f48c:	je     0x10000f4aa
   10000f48e:	mov    rdx,rsi
   10000f491:	sub    rdx,rcx
   10000f494:	je     0x10000f4aa
   10000f496:	lea    r8,[rbp+0x170]
   10000f49d:	add    rdx,rdx
   10000f4a0:	mov    ecx,0xc2f3
   10000f4a5:	call   0x1000182d0
   10000f4aa:	lea    rax,[rip+0x1a4b7]        # 0x100029968
   10000f4b1:	lea    rcx,[rsp+0x30]
   10000f4b6:	mov    DWORD PTR [rsp+0x38],r12d
   10000f4bb:	mov    WORD PTR [rbp+0x170],r12w
   10000f4c3:	mov    QWORD PTR [rsp+0x30],r12
   10000f4c8:	mov    QWORD PTR [rsp+0x40],rax
   10000f4cd:	call   QWORD PTR [rip+0xffffffffffff28fd]        # 0x100001dd0
   10000f4d3:	mov    r14,rax
   10000f4d6:	test   rax,rax
   10000f4d9:	je     0x10000f628
   10000f4df:	nop
   10000f4e0:	mov    ecx,DWORD PTR [r14+0x40]
   10000f4e4:	cmp    ecx,0x2
   10000f4e7:	je     0x10000f500
   10000f4e9:	test   ecx,ecx
   10000f4eb:	je     0x10000f500
   10000f4ed:	cmp    ecx,0x3
   10000f4f0:	je     0x10000f500
   10000f4f2:	cmp    DWORD PTR [r14+0x34],r12d
   10000f4f6:	jl     0x10000f5ca
   10000f4fc:	nop    DWORD PTR [rax+0x0]
   10000f500:	mov    rcx,rsi
   10000f503:	lea    rax,[rbp+0x170]
   10000f50a:	nop    WORD PTR [rax+rax*1+0x0]
   10000f510:	cmp    WORD PTR [rax],r12w
   10000f514:	je     0x10000f524
   10000f516:	add    rax,0x2
   10000f51a:	dec    rcx
   10000f51d:	jne    0x10000f510
   10000f51f:	jmp    0x10000f628
   10000f524:	test   rcx,rcx
   10000f527:	je     0x10000f628
   10000f52d:	mov    rdi,rsi
   10000f530:	lea    rdx,[rsp+0x50]
   10000f535:	mov    r9b,0x1
   10000f538:	sub    rdi,rcx
   10000f53b:	mov    rcx,r14
   10000f53e:	mov    r8d,0x10e
   10000f544:	call   QWORD PTR [rip+0xffffffffffff289e]        # 0x100001de8
   10000f54a:	lea    rbx,[rdi+rdi*1]
   10000f54e:	test   al,al
   10000f550:	je     0x10000f561
   10000f552:	call   QWORD PTR [rip+0xffffffffffff26e0]        # 0x100001c38
   10000f558:	lea    r8,[rip+0xf9]        # 0x10000f658
   10000f55f:	jmp    0x10000f56e
   10000f561:	call   QWORD PTR [rip+0xffffffffffff26d1]        # 0x100001c38
   10000f567:	lea    r8,[rip+0xfa]        # 0x10000f668
   10000f56e:	mov    r9,rax
   10000f571:	lea    rax,[rsp+0x50]
   10000f576:	lea    rcx,[rbp+0x170]
   10000f57d:	mov    rdx,rsi
   10000f580:	add    rcx,rbx
   10000f583:	mov    QWORD PTR [rsp+0x20],rax
   10000f588:	sub    rdx,rdi
   10000f58b:	call   0x100005bb0
   10000f590:	mov    r15d,eax
   10000f593:	test   eax,eax
   10000f595:	jns    0x10000f5ca
   10000f597:	cmp    rbx,0xfc0
   10000f59e:	jae    0x10000f601
   10000f5a0:	lea    r8,[rbp+0x170]
   10000f5a7:	mov    rdx,rbx
   10000f5aa:	mov    ecx,0xc2f4
   10000f5af:	mov    WORD PTR [rbp+rbx*1+0x170],r12w
   10000f5b8:	call   0x1000182d0
   10000f5bd:	mov    WORD PTR [rbp+0x170],r12w
   10000f5c5:	jmp    0x10000f500
   10000f5ca:	lea    rcx,[rsp+0x30]
   10000f5cf:	call   QWORD PTR [rip+0xffffffffffff27fb]        # 0x100001dd0
   10000f5d5:	mov    r14,rax
   10000f5d8:	test   rax,rax
   10000f5db:	jne    0x10000f4e0
   10000f5e1:	test   r15d,r15d
   10000f5e4:	js     0x10000f628
   10000f5e6:	mov    rcx,rsi
   10000f5e9:	lea    rax,[rbp+0x170]
   10000f5f0:	cmp    WORD PTR [rax],r12w
   10000f5f4:	je     0x10000f609
   10000f5f6:	add    rax,0x2
   10000f5fa:	dec    rcx
   10000f5fd:	jne    0x10000f5f0
   10000f5ff:	jmp    0x10000f628
   10000f601:	xor    ecx,ecx
   10000f603:	call   0x100003850
   10000f608:	int3   
   10000f609:	test   rcx,rcx
   10000f60c:	je     0x10000f628
   10000f60e:	sub    rsi,rcx
   10000f611:	je     0x10000f628
   10000f613:	lea    rdx,[rsi+rsi*1]
   10000f617:	lea    r8,[rbp+0x170]
   10000f61e:	mov    ecx,0xc2f4
   10000f623:	call   0x1000182d0
   10000f628:	mov    rcx,QWORD PTR [rbp+0x1130]
   10000f62f:	xor    rcx,rsp
   10000f632:	call   0x100002610
   10000f637:	lea    r11,[rsp+0x1240]
   10000f63f:	mov    rbx,QWORD PTR [r11+0x30]
   10000f643:	mov    rsi,QWORD PTR [r11+0x38]
   10000f647:	mov    rdi,QWORD PTR [r11+0x40]
   10000f64b:	mov    rsp,r11
   10000f64e:	pop    r15
   10000f650:	pop    r14
   10000f652:	pop    r13
   10000f654:	pop    r12
   10000f656:	pop    rbp
   10000f657:	ret    
   10000f658:	or     eax,0x9000a00
   10000f65d:	add    BYTE PTR [rax],ah
   10000f65f:	add    BYTE PTR [rip+0x7300],ah        # 0x100016965
   10000f665:	add    BYTE PTR [rax+0xa000d90],dl
   10000f66b:	add    BYTE PTR [rcx],cl
   10000f66d:	add    BYTE PTR [rax],ah
   10000f66f:	add    BYTE PTR [rip+0x20007300],ah        # 0x120016975
   10000f675:	add    BYTE PTR [rsi],ch
   10000f677:	add    BYTE PTR [rsi],ch
   10000f679:	add    BYTE PTR [rsi],ch
   10000f67b:	add    BYTE PTR [rax],al
   10000f67d:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000f683:	nop
   10000f684:	nop
   10000f685:	nop
   10000f686:	nop
   10000f687:	nop
   10000f688:	nop
   10000f689:	nop
   10000f68a:	nop
   10000f68b:	nop
   10000f68c:	nop
   10000f68d:	nop
   10000f68e:	nop
   10000f68f:	nop
   10000f690:	push   rbx
   10000f692:	sub    rsp,0x40
   10000f696:	mov    rbx,rdx
   10000f699:	cmp    ecx,0xf
   10000f69c:	ja     0x10000f6eb
   10000f69e:	lea    rdx,[rip+0xffffffffffff095b]        # 0x100000000
   10000f6a5:	movsxd rax,ecx
   10000f6a8:	mov    r8d,DWORD PTR [rdx+rax*4+0xf770]
   10000f6b0:	add    r8,rdx
   10000f6b3:	jmp    r8
   10000f6b6:	mov    rdx,QWORD PTR [rbx+0x30]
   10000f6ba:	test   rdx,rdx
   10000f6bd:	je     0x10000f6eb
   10000f6bf:	mov    ecx,0x42d8
   10000f6c4:	call   0x1000182d0
   10000f6c9:	jmp    0x10000f6f7
   10000f6cb:	mov    rax,QWORD PTR [rbx+0x38]
   10000f6cf:	mov    edx,ecx
   10000f6d1:	lea    r8,[rip+0xffffffffffff3f60]        # 0x100003638
   10000f6d8:	test   rax,rax
   10000f6db:	mov    ecx,0xc2f1
   10000f6e0:	cmovne r8,rax
   10000f6e4:	call   0x1000182d0
   10000f6e9:	jmp    0x10000f6f7
   10000f6eb:	mov    edx,ecx
   10000f6ed:	mov    ecx,0xc2f2
   10000f6f2:	call   0x1000182d0
   10000f6f7:	lea    rax,[rbx+0x8]
   10000f6fb:	lea    rcx,[rsp+0x20]
   10000f700:	mov    DWORD PTR [rsp+0x28],0x0
   10000f708:	mov    QWORD PTR [rsp+0x30],rax
   10000f70d:	mov    QWORD PTR [rsp+0x20],0x0
   10000f716:	call   QWORD PTR [rip+0xffffffffffff26b4]        # 0x100001dd0
   10000f71c:	test   rax,rax
   10000f71f:	je     0x10000f74d
   10000f721:	cmp    DWORD PTR [rax+0x40],0x3
   10000f725:	je     0x10000f73f
   10000f727:	cmp    DWORD PTR [rax+0x34],0x0
   10000f72b:	jge    0x10000f73f
   10000f72d:	lea    rcx,[rsp+0x20]
   10000f732:	call   QWORD PTR [rip+0xffffffffffff2698]        # 0x100001dd0
   10000f738:	test   rax,rax
   10000f73b:	jne    0x10000f721
   10000f73d:	jmp    0x10000f74d
   10000f73f:	mov    rdx,QWORD PTR [rax+0x38]
   10000f743:	mov    ecx,0x42d8
   10000f748:	call   0x1000182d0
   10000f74d:	mov    rax,QWORD PTR [rip+0x291bc]        # 0x100038910
   10000f754:	mov    ecx,0xfffffffe
   10000f759:	mov    DWORD PTR [rax+0x7fa8],0x0
   10000f763:	call   QWORD PTR [rip+0xffffffffffff23cf]        # 0x100001b38
   10000f769:	add    rsp,0x40
   10000f76d:	pop    rbx
   10000f76e:	ret    
   10000f76f:	nop
   10000f770:	div    esi
   10000f772:	add    BYTE PTR [rax],al
   10000f774:	jmp    0x10000f76c
   10000f776:	add    BYTE PTR [rax],al
   10000f778:	retf   
   10000f779:	test   BYTE PTR [rax],0x0
   10000f77c:	jmp    0x10000f774
   10000f77e:	add    BYTE PTR [rax],al
   10000f780:	retf   
   10000f781:	test   BYTE PTR [rax],0x0
   10000f784:	jmp    0x10000f77c
   10000f786:	add    BYTE PTR [rax],al
   10000f788:	retf   
   10000f789:	test   BYTE PTR [rax],0x0
   10000f78c:	retf   
   10000f78d:	test   BYTE PTR [rax],0x0
   10000f790:	retf   
   10000f791:	test   BYTE PTR [rax],0x0
   10000f794:	jmp    0x10000f78c
   10000f796:	add    BYTE PTR [rax],al
   10000f798:	retf   
   10000f799:	test   BYTE PTR [rax],0x0
   10000f79c:	jmp    0x10000f794
   10000f79e:	add    BYTE PTR [rax],al
   10000f7a0:	mov    dh,0xf6
   10000f7a2:	add    BYTE PTR [rax],al
   10000f7a4:	div    esi
   10000f7a6:	add    BYTE PTR [rax],al
   10000f7a8:	mov    dh,0xf6
   10000f7aa:	add    BYTE PTR [rax],al
   10000f7ac:	mov    dh,0xf6
   10000f7ae:	add    BYTE PTR [rax],al
   10000f7b0:	nop
   10000f7b1:	nop
   10000f7b2:	nop
   10000f7b3:	nop
   10000f7b4:	nop
   10000f7b5:	nop
   10000f7b6:	nop
   10000f7b7:	nop
   10000f7b8:	nop
   10000f7b9:	nop
   10000f7ba:	nop
   10000f7bb:	nop
   10000f7bc:	nop
   10000f7bd:	nop
   10000f7be:	nop
   10000f7bf:	nop
   10000f7c0:	mov    QWORD PTR [rsp+0x8],rbx
   10000f7c5:	mov    QWORD PTR [rsp+0x10],rsi
   10000f7ca:	push   rdi
   10000f7cb:	sub    rsp,0x30
   10000f7cf:	lea    rax,[rip+0x1a192]        # 0x100029968
   10000f7d6:	mov    rdi,rdx
   10000f7d9:	mov    ebx,ecx
   10000f7db:	cmp    QWORD PTR [rip+0x1a18e],rax        # 0x100029970
   10000f7e2:	je     0x10000f80c
   10000f7e4:	lea    r8,[rip+0x2b8ed]        # 0x10003b0d8
   10000f7eb:	lea    rdx,[rip+0x2b8ce]        # 0x10003b0c0
   10000f7f2:	mov    r9d,0x283
   10000f7f8:	mov    ecx,0x1
   10000f7fd:	mov    QWORD PTR [rsp+0x20],0x0
   10000f806:	call   QWORD PTR [rip+0xffffffffffff234c]        # 0x100001b58
   10000f80c:	lea    rax,[rip+0x1a1d5]        # 0x1000299e8
   10000f813:	lea    rsi,[rip+0x19b36]        # 0x100029350
   10000f81a:	mov    DWORD PTR [rip+0x1a15c],0x21        # 0x100029980
   10000f824:	cmp    QWORD PTR [rip+0x1a1c5],rax        # 0x1000299f0
   10000f82b:	mov    QWORD PTR [rip+0x1a146],rsi        # 0x100029978
   10000f832:	je     0x10000f85c
   10000f834:	lea    r8,[rip+0x2b89d]        # 0x10003b0d8
   10000f83b:	lea    rdx,[rip+0x2b87e]        # 0x10003b0c0
   10000f842:	mov    r9d,0x283
   10000f848:	mov    ecx,0x1
   10000f84d:	mov    QWORD PTR [rsp+0x20],0x0
   10000f856:	call   QWORD PTR [rip+0xffffffffffff22fc]        # 0x100001b58
   10000f85c:	mov    QWORD PTR [rip+0x1a195],rsi        # 0x1000299f8
   10000f863:	mov    DWORD PTR [rip+0x1a193],0x21        # 0x100029a00
   10000f86d:	cmp    ebx,0x1
   10000f870:	jle    0x10000f89f
   10000f872:	lea    r8,[rdi+0x8]
   10000f876:	lea    edx,[rbx-0x1]
   10000f879:	lea    rcx,[rip+0x1a0e0]        # 0x100029960
   10000f880:	call   QWORD PTR [rip+0xffffffffffff256a]        # 0x100001df0
   10000f886:	mov    ebx,eax
   10000f888:	test   eax,eax
   10000f88a:	je     0x10000f89f
   10000f88c:	call   0x10000a240
   10000f891:	lea    rdx,[rip+0x1a0c8]        # 0x100029960
   10000f898:	mov    ecx,ebx
   10000f89a:	call   0x10000f690
   10000f89f:	mov    rbx,QWORD PTR [rsp+0x40]
   10000f8a4:	mov    rsi,QWORD PTR [rsp+0x48]
   10000f8a9:	add    rsp,0x30
   10000f8ad:	pop    rdi
   10000f8ae:	ret    
   10000f8af:	nop
   10000f8b0:	nop
   10000f8b1:	nop
   10000f8b2:	nop
   10000f8b3:	nop
   10000f8b4:	nop
   10000f8b5:	nop
   10000f8b6:	nop
   10000f8b7:	nop
   10000f8b8:	nop
   10000f8b9:	nop
   10000f8ba:	nop
   10000f8bb:	nop
   10000f8bc:	nop
   10000f8bd:	nop
   10000f8be:	nop
   10000f8bf:	nop
   10000f8c0:	mov    rax,rsp
   10000f8c3:	push   rdi
   10000f8c4:	sub    rsp,0x6b0
   10000f8cb:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   10000f8d4:	mov    QWORD PTR [rax+0x8],rbx
   10000f8d8:	mov    QWORD PTR [rax+0x10],rsi
   10000f8dc:	mov    rax,QWORD PTR [rip+0x1990d]        # 0x1000291f0
   10000f8e3:	xor    rax,rsp
   10000f8e6:	mov    QWORD PTR [rsp+0x6a0],rax
   10000f8ee:	xor    esi,esi
   10000f8f0:	mov    QWORD PTR [rsp+0x40],rsi
   10000f8f5:	mov    ebx,esi
   10000f8f7:	lea    rax,[rsp+0x40]
   10000f8fc:	mov    QWORD PTR [rsp+0x20],rax
   10000f901:	mov    r9d,0x20019
   10000f907:	xor    r8d,r8d
   10000f90a:	lea    rdx,[rip+0x14f]        # 0x10000fa60
   10000f911:	mov    rcx,0xffffffff80000002
   10000f918:	call   0x100019a90
   10000f91d:	test   eax,eax
   10000f91f:	jne    0x10000fa1c
   10000f925:	mov    edi,esi
   10000f927:	nop    WORD PTR [rax+rax*1+0x0]
   10000f930:	mov    DWORD PTR [rsp+0x50],0x104
   10000f938:	mov    DWORD PTR [rsp+0x58],0x208
   10000f940:	lea    rax,[rsp+0x58]
   10000f945:	mov    QWORD PTR [rsp+0x38],rax
   10000f94a:	lea    rax,[rsp+0x490]
   10000f952:	mov    QWORD PTR [rsp+0x30],rax
   10000f957:	mov    QWORD PTR [rsp+0x28],rsi
   10000f95c:	mov    QWORD PTR [rsp+0x20],rsi
   10000f961:	lea    r9,[rsp+0x50]
   10000f966:	lea    r8,[rsp+0x280]
   10000f96e:	mov    edx,edi
   10000f970:	mov    rcx,QWORD PTR [rsp+0x40]
   10000f975:	call   0x10001abe0
   10000f97a:	cmp    eax,0xea
   10000f97f:	je     0x10000f9f2
   10000f981:	test   eax,eax
   10000f983:	jne    0x10000fa1c
   10000f989:	mov    DWORD PTR [rsp+0x54],0x104
   10000f991:	lea    r9,[rsp+0x54]
   10000f996:	lea    r8,[rsp+0x70]
   10000f99b:	xor    edx,edx
   10000f99d:	lea    rcx,[rsp+0x280]
   10000f9a5:	call   QWORD PTR [rip+0x196d5]        # 0x100029080
   10000f9ab:	test   eax,eax
   10000f9ad:	je     0x10000f9f2
   10000f9af:	mov    QWORD PTR [rsp+0x48],rsi
   10000f9b4:	lea    rax,[rsp+0x48]
   10000f9b9:	mov    QWORD PTR [rsp+0x20],rax
   10000f9be:	mov    r9d,0x20019
   10000f9c4:	xor    r8d,r8d
   10000f9c7:	lea    rdx,[rsp+0x70]
   10000f9cc:	mov    rcx,0xffffffff80000002
   10000f9d3:	call   0x100019a90
   10000f9d8:	test   eax,eax
   10000f9da:	jne    0x10000f9e3
   10000f9dc:	inc    ebx
   10000f9de:	cmp    ebx,0x2
   10000f9e1:	jae    0x10000f9f9
   10000f9e3:	mov    rcx,QWORD PTR [rsp+0x48]
   10000f9e8:	test   rcx,rcx
   10000f9eb:	je     0x10000f9f2
   10000f9ed:	call   0x10001ab50
   10000f9f2:	inc    edi
   10000f9f4:	jmp    0x10000f930
   10000f9f9:	mov    rcx,QWORD PTR [rsp+0x48]
   10000f9fe:	test   rcx,rcx
   10000fa01:	je     0x10000fa09
   10000fa03:	call   0x10001ab50
   10000fa08:	nop
   10000fa09:	mov    rcx,QWORD PTR [rsp+0x40]
   10000fa0e:	test   rcx,rcx
   10000fa11:	je     0x10000fa18
   10000fa13:	call   0x10001ab50
   10000fa18:	mov    al,0x1
   10000fa1a:	jmp    0x10000fa2d
   10000fa1c:	mov    rcx,QWORD PTR [rsp+0x40]
   10000fa21:	test   rcx,rcx
   10000fa24:	je     0x10000fa2b
   10000fa26:	call   0x10001ab50
   10000fa2b:	xor    al,al
   10000fa2d:	mov    rcx,QWORD PTR [rsp+0x6a0]
   10000fa35:	xor    rcx,rsp
   10000fa38:	call   0x100002610
   10000fa3d:	lea    r11,[rsp+0x6b0]
   10000fa45:	mov    rbx,QWORD PTR [r11+0x10]
   10000fa49:	mov    rsi,QWORD PTR [r11+0x18]
   10000fa4d:	mov    rsp,r11
   10000fa50:	pop    rdi
   10000fa51:	ret    
   10000fa52:	nop
   10000fa53:	nop
   10000fa54:	nop
   10000fa55:	nop
   10000fa56:	nop
   10000fa57:	nop
   10000fa58:	nop
   10000fa59:	nop
   10000fa5a:	nop
   10000fa5b:	nop
   10000fa5c:	nop
   10000fa5d:	nop
   10000fa5e:	nop
   10000fa5f:	nop
   10000fa60:	push   rbx
   10000fa61:	add    BYTE PTR [rdi+0x0],cl
   10000fa64:	add    BYTE PTR [rax+r8*1+0x57],r10b
   10000fa69:	add    BYTE PTR [rcx+0x0],al
   10000fa6c:	push   rdx
   10000fa6d:	add    BYTE PTR [rbp+0x0],al
   10000fa70:	pop    rsp
   10000fa71:	add    BYTE PTR [rbp+0x0],cl
   10000fa74:	imul   eax,DWORD PTR [rax],0x720063
   10000fa7a:	outs   dx,DWORD PTR ds:[rsi]
   10000fa7b:	add    BYTE PTR [rbx+0x0],dh
   10000fa7e:	outs   dx,DWORD PTR ds:[rsi]
   10000fa7f:	add    BYTE PTR [rsi+0x0],ah
   10000fa82:	je     0x10000fa84
   10000fa84:	pop    rsp
   10000fa85:	add    BYTE PTR [rbp+0x0],cl
   10000fa88:	imul   eax,DWORD PTR [rax],0x720063
   10000fa8e:	outs   dx,DWORD PTR ds:[rsi]
   10000fa8f:	add    BYTE PTR [rbx+0x0],dh
   10000fa92:	outs   dx,DWORD PTR ds:[rsi]
   10000fa93:	add    BYTE PTR [rsi+0x0],ah
   10000fa96:	je     0x10000fa98
   10000fa98:	and    BYTE PTR [rax],al
   10000fa9a:	push   rbx
   10000fa9b:	add    BYTE PTR [rcx+0x0],dl
   10000fa9e:	rex.WR add BYTE PTR [rax],r12b
   10000faa1:	add    BYTE PTR [rbx+0x0],dl
   10000faa4:	add    BYTE PTR gs:[rdx+0x0],dh
   10000faa8:	jbe    0x10000faaa
   10000faaa:	add    BYTE PTR gs:[rdx+0x0],dh
   10000faae:	pop    rsp
   10000faaf:	add    BYTE PTR [rcx+0x0],cl
   10000fab2:	outs   dx,BYTE PTR ds:[rsi]
   10000fab3:	add    BYTE PTR [rbx+0x0],dh
   10000fab6:	je     0x10000fab8
   10000fab8:	(bad)  
   10000fab9:	add    BYTE PTR [rsi+0x0],ch
   10000fabc:	movsxd eax,DWORD PTR [rax]
   10000fabe:	add    BYTE PTR gs:[rax],ah
   10000fac1:	add    BYTE PTR [rsi+0x0],cl
   10000fac4:	(bad)  
   10000fac5:	add    BYTE PTR [rbp+0x0],ch
   10000fac8:	add    BYTE PTR gs:[rbx+0x0],dh
   10000facc:	pop    rsp
   10000facd:	add    BYTE PTR [rbx+0x0],dl
   10000fad0:	push   rcx
   10000fad1:	add    BYTE PTR [rax+rax*1+0x0],cl
   10000fad5:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10000fadb:	nop
   10000fadc:	nop
   10000fadd:	nop
   10000fade:	nop
   10000fadf:	nop
   10000fae0:	sub    rsp,0x28
   10000fae4:	mov    rax,QWORD PTR [rip+0xffffffffffff2035]        # 0x100001b20
   10000faeb:	mov    QWORD PTR [rsp+0x30],rbx
   10000faf0:	mov    QWORD PTR [rsp+0x38],rsi
   10000faf5:	mov    rcx,QWORD PTR [rax]
   10000faf8:	mov    QWORD PTR [rsp+0x40],rdi
   10000fafd:	mov    QWORD PTR [rsp+0x20],r14
   10000fb02:	mov    rax,QWORD PTR [rcx]
   10000fb05:	call   QWORD PTR [rax+0x38]
   10000fb08:	movsxd rdi,eax
   10000fb0b:	test   eax,eax
   10000fb0d:	jle    0x10000fb79
   10000fb0f:	mov    rcx,QWORD PTR [rip+0xffffffffffff200a]        # 0x100001b20
   10000fb16:	mov    rcx,QWORD PTR [rcx]
   10000fb19:	mov    rdx,QWORD PTR [rcx]
   10000fb1c:	call   QWORD PTR [rdx+0x40]
   10000fb1f:	xor    ebx,ebx
   10000fb21:	mov    rsi,rdi
   10000fb24:	mov    r14,rax
   10000fb27:	test   edi,edi
   10000fb29:	jle    0x10000fb52
   10000fb2b:	nop    DWORD PTR [rax+rax*1+0x0]
   10000fb30:	mov    rdx,QWORD PTR [r14+rbx*8]
   10000fb34:	lea    rcx,[rip+0x19ea5]        # 0x1000299e0
   10000fb3b:	xor    r8d,r8d
   10000fb3e:	call   QWORD PTR [rip+0xffffffffffff22c4]        # 0x100001e08
   10000fb44:	mov    edi,eax
   10000fb46:	test   eax,eax
   10000fb48:	jne    0x10000fb67
   10000fb4a:	inc    rbx
   10000fb4d:	cmp    rbx,rsi
   10000fb50:	jl     0x10000fb30
   10000fb52:	lea    rcx,[rip+0x19e87]        # 0x1000299e0
   10000fb59:	xor    edx,edx
   10000fb5b:	call   QWORD PTR [rip+0xffffffffffff229f]        # 0x100001e00
   10000fb61:	mov    edi,eax
   10000fb63:	test   eax,eax
   10000fb65:	je     0x10000fb79
   10000fb67:	lea    rdx,[rip+0x19e72]        # 0x1000299e0
   10000fb6e:	mov    ecx,edi
   10000fb70:	call   0x10000f690
   10000fb75:	test   edi,edi
   10000fb77:	jne    0x10000fb8e
   10000fb79:	lea    rcx,[rip+0x19de0]        # 0x100029960
   10000fb80:	xor    edx,edx
   10000fb82:	call   QWORD PTR [rip+0xffffffffffff2278]        # 0x100001e00
   10000fb88:	mov    edi,eax
   10000fb8a:	test   eax,eax
   10000fb8c:	je     0x10000fb9c
   10000fb8e:	lea    rdx,[rip+0x19dcb]        # 0x100029960
   10000fb95:	mov    ecx,edi
   10000fb97:	call   0x10000f690
   10000fb9c:	lea    rcx,[rip+0x19dbd]        # 0x100029960
   10000fba3:	mov    edx,0x73
   10000fba8:	call   QWORD PTR [rip+0xffffffffffff224a]        # 0x100001df8
   10000fbae:	mov    r14,QWORD PTR [rsp+0x20]
   10000fbb3:	mov    rdi,QWORD PTR [rsp+0x40]
   10000fbb8:	mov    rsi,QWORD PTR [rsp+0x38]
   10000fbbd:	mov    rbx,QWORD PTR [rsp+0x30]
   10000fbc2:	test   rax,rax
   10000fbc5:	jne    0x10000fc19
   10000fbc7:	mov    rax,QWORD PTR [rip+0x28d42]        # 0x100038910
   10000fbce:	cmp    DWORD PTR [rax+0x49d4],0x0
   10000fbd5:	jne    0x10000fc19
   10000fbd7:	cmp    DWORD PTR [rax+0x49c4],0x0
   10000fbde:	jne    0x10000fc19
   10000fbe0:	cmp    DWORD PTR [rax+0x49c0],0x0
   10000fbe7:	jne    0x10000fc19
   10000fbe9:	call   0x10000f8c0
   10000fbee:	test   al,al
   10000fbf0:	je     0x10000fc19
   10000fbf2:	mov    ecx,0xc2f5
   10000fbf7:	call   0x1000182d0
   10000fbfc:	mov    r11,QWORD PTR [rip+0x28d0d]        # 0x100038910
   10000fc03:	mov    ecx,0xfffffffe
   10000fc08:	mov    DWORD PTR [r11+0x7fa8],0x0
   10000fc13:	call   QWORD PTR [rip+0xffffffffffff1f1f]        # 0x100001b38
   10000fc19:	add    rsp,0x28
   10000fc1d:	ret    
   10000fc1e:	nop
   10000fc1f:	nop
   10000fc20:	nop
   10000fc21:	nop
   10000fc22:	nop
   10000fc23:	nop
   10000fc24:	nop
   10000fc25:	nop
   10000fc26:	nop
   10000fc27:	nop
   10000fc28:	nop
   10000fc29:	nop
   10000fc2a:	nop
   10000fc2b:	nop
   10000fc2c:	nop
   10000fc2d:	nop
   10000fc2e:	nop
   10000fc2f:	nop
   10000fc30:	sub    rsp,0x28
   10000fc34:	mov    rcx,QWORD PTR [rcx]
   10000fc37:	test   rcx,rcx
   10000fc3a:	je     0x10000fc42
   10000fc3c:	call   QWORD PTR [rip+0xffffffffffff177e]        # 0x1000013c0
   10000fc42:	add    rsp,0x28
   10000fc46:	ret    
   10000fc47:	nop
   10000fc48:	nop
   10000fc49:	nop
   10000fc4a:	nop
   10000fc4b:	nop
   10000fc4c:	nop
   10000fc4d:	nop
   10000fc4e:	nop
   10000fc4f:	nop
   10000fc50:	sub    rsp,0x28
   10000fc54:	mov    rcx,QWORD PTR [rcx]
   10000fc57:	test   rcx,rcx
   10000fc5a:	je     0x10000fc62
   10000fc5c:	call   QWORD PTR [rip+0xffffffffffff175e]        # 0x1000013c0
   10000fc62:	add    rsp,0x28
   10000fc66:	ret    
   10000fc67:	nop
   10000fc68:	nop
   10000fc69:	nop
   10000fc6a:	nop
   10000fc6b:	nop
   10000fc6c:	nop
   10000fc6d:	nop
   10000fc6e:	nop
   10000fc6f:	nop
   10000fc70:	sub    rsp,0x28
   10000fc74:	mov    rcx,QWORD PTR [rcx]
   10000fc77:	test   rcx,rcx
   10000fc7a:	je     0x10000fc81
   10000fc7c:	call   0x10001ab50
   10000fc81:	add    rsp,0x28
   10000fc85:	ret    
   10000fc86:	nop
   10000fc87:	nop
   10000fc88:	nop
   10000fc89:	nop
   10000fc8a:	nop
   10000fc8b:	nop
   10000fc8c:	nop
   10000fc8d:	nop
   10000fc8e:	nop
   10000fc8f:	nop
   10000fc90:	push   rdi
   10000fc92:	sub    rsp,0x270
   10000fc99:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   10000fca2:	mov    QWORD PTR [rsp+0x280],rbx
   10000fcaa:	mov    rax,QWORD PTR [rip+0x1953f]        # 0x1000291f0
   10000fcb1:	xor    rax,rsp
   10000fcb4:	mov    QWORD PTR [rsp+0x260],rax
   10000fcbc:	mov    rdi,rdx
   10000fcbf:	mov    DWORD PTR [rsp+0x38],r8d
   10000fcc4:	mov    QWORD PTR [rsp+0x30],0x0
   10000fccd:	mov    rbx,QWORD PTR [rip+0x28c3c]        # 0x100038910
   10000fcd4:	add    rbx,0x921a
   10000fcdb:	call   QWORD PTR [rip+0xffffffffffff1f57]        # 0x100001c38
   10000fce1:	mov    r9,rax
   10000fce4:	mov    QWORD PTR [rsp+0x20],rbx
   10000fce9:	lea    r8,[rip+0xb0]        # 0x10000fda0
   10000fcf0:	mov    edx,0x105
   10000fcf5:	lea    rcx,[rsp+0x50]
   10000fcfa:	call   0x100005bb0
   10000fcff:	test   eax,eax
   10000fd01:	jns    0x10000fd05
   10000fd03:	jmp    0x10000fd6a
   10000fd05:	lea    rax,[rsp+0x30]
   10000fd0a:	mov    QWORD PTR [rsp+0x20],rax
   10000fd0f:	mov    r9d,0x1
   10000fd15:	xor    r8d,r8d
   10000fd18:	lea    rdx,[rsp+0x50]
   10000fd1d:	mov    rcx,0xffffffff80000002
   10000fd24:	call   0x100019a90
   10000fd29:	test   eax,eax
   10000fd2b:	jne    0x10000fd6a
   10000fd2d:	lea    rax,[rsp+0x38]
   10000fd32:	mov    QWORD PTR [rsp+0x28],rax
   10000fd37:	mov    QWORD PTR [rsp+0x20],rdi
   10000fd3c:	xor    r9d,r9d
   10000fd3f:	xor    r8d,r8d
   10000fd42:	lea    rdx,[rip+0x6f]        # 0x10000fdb8
   10000fd49:	mov    rcx,QWORD PTR [rsp+0x30]
   10000fd4e:	call   0x100019dc0
   10000fd53:	test   eax,eax
   10000fd55:	jne    0x10000fd6a
   10000fd57:	mov    rcx,QWORD PTR [rsp+0x30]
   10000fd5c:	test   rcx,rcx
   10000fd5f:	je     0x10000fd66
   10000fd61:	call   0x10001ab50
   10000fd66:	mov    al,0x1
   10000fd68:	jmp    0x10000fd7b
   10000fd6a:	mov    rcx,QWORD PTR [rsp+0x30]
   10000fd6f:	test   rcx,rcx
   10000fd72:	je     0x10000fd79
   10000fd74:	call   0x10001ab50
   10000fd79:	xor    al,al
   10000fd7b:	mov    rcx,QWORD PTR [rsp+0x260]
   10000fd83:	xor    rcx,rsp
   10000fd86:	call   0x100002610
   10000fd8b:	mov    rbx,QWORD PTR [rsp+0x280]
   10000fd93:	add    rsp,0x270
   10000fd9a:	pop    rdi
   10000fd9b:	ret    
   10000fd9c:	nop
   10000fd9d:	nop
   10000fd9e:	nop
   10000fd9f:	nop
   10000fda0:	and    eax,0x73006c00
   10000fda5:	add    BYTE PTR [rax+rax*1+0x53],bl
   10000fda9:	add    BYTE PTR [rbp+0x0],ah
   10000fdac:	je     0x10000fdae
   10000fdae:	jne    0x10000fdb0
   10000fdb0:	jo     0x10000fdb2
   10000fdb2:	add    BYTE PTR [rax],al
   10000fdb4:	nop
   10000fdb5:	nop
   10000fdb6:	nop
   10000fdb7:	nop
   10000fdb8:	push   rbx
   10000fdb9:	add    BYTE PTR [rcx+0x0],dl
   10000fdbc:	rex.WR add BYTE PTR [rdx+0x0],r8b
   10000fdc0:	imul   eax,DWORD PTR [rax],0x52006e
   10000fdc6:	outs   dx,DWORD PTR ds:[rsi]
   10000fdc7:	add    BYTE PTR [rdi+0x0],ch
   10000fdca:	je     0x10000fdcc
   10000fdcc:	add    BYTE PTR [rax],al
   10000fdce:	nop
   10000fdcf:	nop
   10000fdd0:	nop
   10000fdd1:	nop
   10000fdd2:	nop
   10000fdd3:	nop
   10000fdd4:	nop
   10000fdd5:	nop
   10000fdd6:	nop
   10000fdd7:	nop
   10000fdd8:	nop
   10000fdd9:	nop
   10000fdda:	nop
   10000fddb:	nop
   10000fddc:	nop
   10000fddd:	nop
   10000fdde:	nop
   10000fddf:	nop
   10000fde0:	mov    QWORD PTR [rsp+0x18],rbx
   10000fde5:	mov    QWORD PTR [rsp+0x20],rsi
   10000fdea:	push   rdi
   10000fdeb:	sub    rsp,0x860
   10000fdf2:	mov    rax,QWORD PTR [rip+0x193f7]        # 0x1000291f0
   10000fdf9:	xor    rax,rsp
   10000fdfc:	mov    QWORD PTR [rsp+0x850],rax
   10000fe04:	mov    rax,QWORD PTR [rip+0x28b05]        # 0x100038910
   10000fe0b:	mov    esi,edx
   10000fe0d:	mov    rdi,rcx
   10000fe10:	cmp    DWORD PTR [rax+0x49d4],0x0
   10000fe17:	jne    0x10000fe93
   10000fe19:	call   QWORD PTR [rip+0x19269]        # 0x100029088
   10000fe1f:	test   eax,eax
   10000fe21:	je     0x10000fe93
   10000fe23:	or     rax,0xffffffffffffffff
   10000fe27:	nop    WORD PTR [rax+rax*1+0x0]
   10000fe30:	inc    rax
   10000fe33:	cmp    WORD PTR [rdi+rax*2],0x0
   10000fe38:	jne    0x10000fe30
   10000fe3a:	lea    ebx,[rax+rax*1]
   10000fe3d:	call   QWORD PTR [rip+0xffffffffffff1dc5]        # 0x100001c08
   10000fe43:	mov    DWORD PTR [rsp+0x40],esi
   10000fe47:	mov    QWORD PTR [rsp+0x38],rdi
   10000fe4c:	mov    DWORD PTR [rsp+0x30],ebx
   10000fe50:	lea    rbx,[rip+0xffffffffffff3881]        # 0x1000036d8
   10000fe57:	lea    r8,[rsp+0x50]
   10000fe5c:	mov    rcx,rax
   10000fe5f:	mov    r9d,0x400
   10000fe65:	mov    edx,0x48a6
   10000fe6a:	mov    QWORD PTR [rsp+0x28],rbx
   10000fe6f:	mov    DWORD PTR [rsp+0x20],0x14
   10000fe77:	call   0x1000121a0
   10000fe7c:	test   eax,eax
   10000fe7e:	jg     0x10000ff18
   10000fe84:	call   QWORD PTR [rip+0xffffffffffff1dae]        # 0x100001c38
   10000fe8a:	lea    r8,[rip+0xcf]        # 0x10000ff60
   10000fe91:	jmp    0x10000fefd
   10000fe93:	or     rax,0xffffffffffffffff
   10000fe97:	nop    WORD PTR [rax+rax*1+0x0]
   10000fea0:	inc    rax
   10000fea3:	cmp    WORD PTR [rdi+rax*2],0x0
   10000fea8:	jne    0x10000fea0
   10000feaa:	lea    ebx,[rax+rax*1]
   10000fead:	call   QWORD PTR [rip+0xffffffffffff1d55]        # 0x100001c08
   10000feb3:	mov    DWORD PTR [rsp+0x40],esi
   10000feb7:	mov    QWORD PTR [rsp+0x38],rdi
   10000febc:	mov    DWORD PTR [rsp+0x30],ebx
   10000fec0:	lea    rbx,[rip+0xffffffffffff3811]        # 0x1000036d8
   10000fec7:	lea    r8,[rsp+0x50]
   10000fecc:	mov    rcx,rax
   10000fecf:	mov    r9d,0x400
   10000fed5:	mov    edx,0x48a7
   10000feda:	mov    QWORD PTR [rsp+0x28],rbx
   10000fedf:	mov    DWORD PTR [rsp+0x20],0x14
   10000fee7:	call   0x1000121a0
   10000feec:	test   eax,eax
   10000feee:	jg     0x10000ff18
   10000fef0:	call   QWORD PTR [rip+0xffffffffffff1d42]        # 0x100001c38
   10000fef6:	lea    r8,[rip+0x293]        # 0x100010190
   10000fefd:	lea    rcx,[rsp+0x50]
   10000ff02:	mov    r9,rax
   10000ff05:	mov    edx,0x400
   10000ff0a:	mov    DWORD PTR [rsp+0x28],esi
   10000ff0e:	mov    QWORD PTR [rsp+0x20],rdi
   10000ff13:	call   0x100005bb0
   10000ff18:	lea    rdx,[rsp+0x50]
   10000ff1d:	mov    r9d,0x210010
   10000ff23:	mov    r8,rbx
   10000ff26:	xor    ecx,ecx
   10000ff28:	call   QWORD PTR [rip+0x1910a]        # 0x100029038
   10000ff2e:	mov    ecx,0x1
   10000ff33:	call   QWORD PTR [rip+0xffffffffffff1c6f]        # 0x100001ba8
   10000ff39:	mov    rcx,QWORD PTR [rsp+0x850]
   10000ff41:	xor    rcx,rsp
   10000ff44:	call   0x100002610
   10000ff49:	lea    r11,[rsp+0x860]
   10000ff51:	mov    rbx,QWORD PTR [r11+0x20]
   10000ff55:	mov    rsi,QWORD PTR [r11+0x28]
   10000ff59:	mov    rsp,r11
   10000ff5c:	pop    rdi
   10000ff5d:	ret    
   10000ff5e:	nop
   10000ff5f:	nop
   10000ff60:	push   rbx
   10000ff61:	add    BYTE PTR [rcx+0x0],dl
   10000ff64:	rex.WR add BYTE PTR [rax],r12b
   10000ff67:	add    BYTE PTR [rbx+0x0],dl
   10000ff6a:	add    BYTE PTR gs:[rdx+0x0],dh
   10000ff6e:	jbe    0x10000ff70
   10000ff70:	add    BYTE PTR gs:[rdx+0x0],dh
   10000ff74:	and    BYTE PTR [rax],al
   10000ff76:	movsxd eax,DWORD PTR [rax]
   10000ff78:	outs   dx,DWORD PTR ds:[rsi]
   10000ff79:	add    BYTE PTR [rbp+0x0],dh
   10000ff7c:	ins    BYTE PTR es:[rdi],dx
   10000ff7d:	add    BYTE PTR [rax+rax*1+0x20],ah
   10000ff81:	add    BYTE PTR [rsi+0x0],ch
   10000ff84:	outs   dx,DWORD PTR ds:[rsi]
   10000ff85:	add    BYTE PTR [rax+rax*1+0x20],dh
   10000ff89:	add    BYTE PTR [rsi+0x0],ah
   10000ff8c:	imul   eax,DWORD PTR [rax],0x64006e
   10000ff92:	and    BYTE PTR [rax],al
   10000ff94:	je     0x10000ff96
   10000ff96:	push   0x20006500
   10000ff9b:	add    BYTE PTR [rax+rax*1+0x65],ah
   10000ff9f:	add    BYTE PTR [rsi+0x0],ah
   10000ffa2:	(bad)  
   10000ffa3:	add    BYTE PTR [rbp+0x0],dh
   10000ffa6:	ins    BYTE PTR es:[rdi],dx
   10000ffa7:	add    BYTE PTR [rax+rax*1+0x20],dh
   10000ffab:	add    BYTE PTR [rcx+0x0],ch
   10000ffae:	outs   dx,BYTE PTR ds:[rsi]
   10000ffaf:	add    BYTE PTR [rbx+0x0],dh
   10000ffb2:	je     0x10000ffb4
   10000ffb4:	(bad)  
   10000ffb5:	add    BYTE PTR [rsi+0x0],ch
   10000ffb8:	movsxd eax,DWORD PTR [rax]
   10000ffba:	add    BYTE PTR gs:[rax],ah
   10000ffbd:	add    BYTE PTR [rax],ch
   10000ffbf:	add    BYTE PTR [rip+0x73006c00],ah        # 0x173016bc5
   10000ffc5:	add    BYTE PTR [rcx],ch
   10000ffc7:	add    BYTE PTR [rax],ah
   10000ffc9:	add    BYTE PTR [rip+0x65002000],ch        # 0x165011fcf
   10000ffcf:	add    BYTE PTR [rdx+0x0],dh
   10000ffd2:	jb     0x10000ffd4
   10000ffd4:	outs   dx,DWORD PTR ds:[rsi]
   10000ffd5:	add    BYTE PTR [rdx+0x0],dh
   10000ffd8:	and    BYTE PTR [rax],al
   10000ffda:	and    eax,0x2e006400
   10000ffdf:	add    BYTE PTR [rax+0x0],dl
   10000ffe2:	ins    BYTE PTR es:[rdi],dx
   10000ffe3:	add    BYTE PTR [rbp+0x0],ah
   10000ffe6:	(bad)  
   10000ffe7:	add    BYTE PTR [rbx+0x0],dh
   10000ffea:	add    BYTE PTR gs:[rax],ah
   10000ffed:	add    BYTE PTR [rbx+0x0],dh
   10000fff0:	jo     0x10000fff2
   10000fff2:	add    BYTE PTR gs:[rbx+0x0],ah
   10000fff6:	imul   eax,DWORD PTR [rax],0x790066
   10000fffc:	and    BYTE PTR [rax],al
   10000fffe:	je     0x100010000
   100010000:	push   0x20006500
   100010005:	add    BYTE PTR [rsi+0x0],ch
   100010008:	(bad)  
   100010009:	add    BYTE PTR [rbp+0x0],ch
   10001000c:	add    BYTE PTR gs:[rax],ah
   10001000f:	add    BYTE PTR [rdi+0x0],ch
   100010012:	data16 add BYTE PTR [rax],ah
   100010015:	add    BYTE PTR [rcx+0x0],ah
   100010018:	outs   dx,BYTE PTR ds:[rsi]
   100010019:	add    BYTE PTR [rax],ah
   10001001b:	add    BYTE PTR [rbp+0x0],ah
   10001001e:	js     0x100010020
   100010020:	imul   eax,DWORD PTR [rax],0x740073
   100010026:	imul   eax,DWORD PTR [rax],0x67006e
   10001002c:	and    BYTE PTR [rax],al
   10001002e:	imul   eax,DWORD PTR [rax],0x73006e
   100010034:	je     0x100010036
   100010036:	(bad)  
   100010037:	add    BYTE PTR [rsi+0x0],ch
   10001003a:	movsxd eax,DWORD PTR [rax]
   10001003c:	add    BYTE PTR gs:[rax],ah
   10001003f:	add    BYTE PTR [rdi+0x0],ch
   100010042:	outs   dx,BYTE PTR ds:[rsi]
   100010043:	add    BYTE PTR [rax],ah
   100010045:	add    BYTE PTR [rax+rax*1+0x68],dh
   100010049:	add    BYTE PTR [rbp+0x0],ah
   10001004c:	and    BYTE PTR [rax],al
   10001004e:	imul   eax,DWORD PTR [rax],0x76006e
   100010054:	outs   dx,DWORD PTR ds:[rsi]
   100010055:	add    BYTE PTR [rbx+0x0],ah
   100010058:	(bad)  
   100010059:	add    BYTE PTR [rax+rax*1+0x69],dh
   10001005d:	add    BYTE PTR [rdi+0x0],ch
   100010060:	outs   dx,BYTE PTR ds:[rsi]
   100010061:	add    BYTE PTR [rax],ah
   100010063:	add    BYTE PTR [rdi+0x0],ch
   100010066:	data16 add BYTE PTR [rax],ah
   100010069:	add    BYTE PTR [rbx+0x0],dh
   10001006c:	jno    0x10001006e
   10001006e:	ins    BYTE PTR es:[rdi],dx
   10001006f:	add    BYTE PTR [rbx+0x0],dh
   100010072:	add    BYTE PTR gs:[rdx+0x0],dh
   100010076:	jbe    0x100010078
   100010078:	jb     0x10001007a
   10001007a:	add    BYTE PTR cs:[rbp+0x0],ah
   10001007e:	js     0x100010080
   100010080:	add    BYTE PTR gs:[rsi],ch
   100010083:	add    BYTE PTR [rdx],cl
   100010085:	add    BYTE PTR [rdx],cl
   100010087:	add    BYTE PTR [rcx+0x0],cl
   10001008a:	data16 add BYTE PTR [rax],ah
   10001008d:	add    BYTE PTR [rcx+0x0],bh
   100010090:	outs   dx,DWORD PTR ds:[rsi]
   100010091:	add    BYTE PTR [rbp+0x0],dh
   100010094:	and    BYTE PTR [rax],al
   100010096:	(bad)  
   100010097:	add    BYTE PTR [rbp+0x0],ah
   10001009a:	ins    BYTE PTR es:[rdi],dx
   10001009b:	add    BYTE PTR [rcx+0x0],ch
   10001009e:	add    BYTE PTR gs:[rsi+0x0],dh
   1000100a2:	add    BYTE PTR gs:[rax],ah
   1000100a5:	add    BYTE PTR [rax+rax*1+0x68],dh
   1000100a9:	add    BYTE PTR [rcx+0x0],ah
   1000100ac:	je     0x1000100ae
   1000100ae:	and    BYTE PTR [rax],al
   1000100b0:	jns    0x1000100b2
   1000100b2:	outs   dx,DWORD PTR ds:[rsi]
   1000100b3:	add    BYTE PTR [rbp+0x0],dh
   1000100b6:	jb     0x1000100b8
   1000100b8:	and    BYTE PTR [rax],al
   1000100ba:	imul   eax,DWORD PTR [rax],0x73006e
   1000100c0:	je     0x1000100c2
   1000100c2:	(bad)  
   1000100c3:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1000100c7:	add    BYTE PTR [rcx+0x0],ah
   1000100ca:	je     0x1000100cc
   1000100cc:	imul   eax,DWORD PTR [rax],0x6e006f
   1000100d2:	and    BYTE PTR [rax],al
   1000100d4:	imul   eax,DWORD PTR [rax],0x200073
   1000100da:	movsxd eax,DWORD PTR [rax]
   1000100dc:	outs   dx,DWORD PTR ds:[rsi]
   1000100dd:	add    BYTE PTR [rdx+0x0],dh
   1000100e0:	jb     0x1000100e2
   1000100e2:	jne    0x1000100e4
   1000100e4:	jo     0x1000100e6
   1000100e6:	je     0x1000100e8
   1000100e8:	and    BYTE PTR [rax],al
   1000100ea:	outs   dx,DWORD PTR ds:[rsi]
   1000100eb:	add    BYTE PTR [rdx+0x0],dh
   1000100ee:	and    BYTE PTR [rax],al
   1000100f0:	push   0x73006100
   1000100f5:	add    BYTE PTR [rax],ah
   1000100f7:	add    BYTE PTR [rdx+0x0],ah
   1000100fa:	add    BYTE PTR gs:[rbp+0x0],ah
   1000100fe:	outs   dx,BYTE PTR ds:[rsi]
   1000100ff:	add    BYTE PTR [rax],ah
   100010101:	add    BYTE PTR [rax+rax*1+0x61],dh
   100010105:	add    BYTE PTR [rbp+0x0],ch
   100010108:	jo     0x10001010a
   10001010a:	add    BYTE PTR gs:[rdx+0x0],dh
   10001010e:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   100010113:	add    BYTE PTR [rdi+0x0],dh
   100010116:	imul   eax,DWORD PTR [rax],0x680074
   10001011c:	sub    al,0x0
   10001011e:	and    BYTE PTR [rax],al
   100010120:	jne    0x100010122
   100010122:	outs   dx,BYTE PTR ds:[rsi]
   100010123:	add    BYTE PTR [rcx+0x0],ch
   100010126:	outs   dx,BYTE PTR ds:[rsi]
   100010127:	add    BYTE PTR [rbx+0x0],dh
   10001012a:	je     0x10001012c
   10001012c:	(bad)  
   10001012d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   100010131:	add    BYTE PTR [rax],ah
   100010133:	add    BYTE PTR [rax+rax*1+0x68],dh
   100010137:	add    BYTE PTR [rbp+0x0],ah
   10001013a:	outs   dx,BYTE PTR ds:[rsi]
   10001013b:	add    BYTE PTR [rax],ah
   10001013d:	add    BYTE PTR [rdx+0x0],dh
   100010140:	add    BYTE PTR gs:[rip+0x75007200],ch        # 0x175017347
   100010147:	add    BYTE PTR [rsi+0x0],ch
   10001014a:	and    BYTE PTR [rax],al
   10001014c:	jae    0x10001014e
   10001014e:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   100010153:	add    BYTE PTR [rax+0x0],dh
   100010156:	and    BYTE PTR [rax],al
   100010158:	je     0x10001015a
   10001015a:	outs   dx,DWORD PTR ds:[rsi]
   10001015b:	add    BYTE PTR [rax],ah
   10001015d:	add    BYTE PTR [rbx+0x0],ah
   100010160:	outs   dx,DWORD PTR ds:[rsi]
   100010161:	add    BYTE PTR [rdx+0x0],dh
   100010164:	jb     0x100010166
   100010166:	add    BYTE PTR gs:[rbx+0x0],ah
   10001016a:	je     0x10001016c
   10001016c:	and    BYTE PTR [rax],al
   10001016e:	je     0x100010170
   100010170:	push   0x73006900
   100010175:	add    BYTE PTR [rax],ah
   100010177:	add    BYTE PTR [rax+0x0],dh
   10001017a:	jb     0x10001017c
   10001017c:	outs   dx,DWORD PTR ds:[rsi]
   10001017d:	add    BYTE PTR [rdx+0x0],ah
   100010180:	ins    BYTE PTR es:[rdi],dx
   100010181:	add    BYTE PTR [rbp+0x0],ah
   100010184:	ins    DWORD PTR es:[rdi],dx
   100010185:	add    BYTE PTR [rsi],ch
   100010187:	add    BYTE PTR [rax],al
   100010189:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001018f:	nop
   100010190:	push   rbx
   100010191:	add    BYTE PTR [rcx+0x0],dl
   100010194:	rex.WR add BYTE PTR [rax],r12b
   100010197:	add    BYTE PTR [rbx+0x0],dl
   10001019a:	add    BYTE PTR gs:[rdx+0x0],dh
   10001019e:	jbe    0x1000101a0
   1000101a0:	add    BYTE PTR gs:[rdx+0x0],dh
   1000101a4:	and    BYTE PTR [rax],al
   1000101a6:	movsxd eax,DWORD PTR [rax]
   1000101a8:	outs   dx,DWORD PTR ds:[rsi]
   1000101a9:	add    BYTE PTR [rbp+0x0],dh
   1000101ac:	ins    BYTE PTR es:[rdi],dx
   1000101ad:	add    BYTE PTR [rax+rax*1+0x20],ah
   1000101b1:	add    BYTE PTR [rsi+0x0],ch
   1000101b4:	outs   dx,DWORD PTR ds:[rsi]
   1000101b5:	add    BYTE PTR [rax+rax*1+0x20],dh
   1000101b9:	add    BYTE PTR [rsi+0x0],ah
   1000101bc:	imul   eax,DWORD PTR [rax],0x64006e
   1000101c2:	and    BYTE PTR [rax],al
   1000101c4:	je     0x1000101c6
   1000101c6:	push   0x20006500
   1000101cb:	add    BYTE PTR [rbx+0x0],dh
   1000101ce:	jo     0x1000101d0
   1000101d0:	add    BYTE PTR gs:[rbx+0x0],ah
   1000101d4:	imul   eax,DWORD PTR [rax],0x690066
   1000101da:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1000101df:	add    BYTE PTR [rsi+0x0],ch
   1000101e2:	(bad)  
   1000101e3:	add    BYTE PTR [rbp+0x0],ch
   1000101e6:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1000101eb:	add    BYTE PTR [rcx+0x0],ch
   1000101ee:	outs   dx,BYTE PTR ds:[rsi]
   1000101ef:	add    BYTE PTR [rbx+0x0],dh
   1000101f2:	je     0x1000101f4
   1000101f4:	(bad)  
   1000101f5:	add    BYTE PTR [rsi+0x0],ch
   1000101f8:	movsxd eax,DWORD PTR [rax]
   1000101fa:	add    BYTE PTR gs:[rax],ah
   1000101fd:	add    BYTE PTR [rax],ch
   1000101ff:	add    BYTE PTR [rip+0x73006c00],ah        # 0x173016e05
   100010205:	add    BYTE PTR [rcx],ch
   100010207:	add    BYTE PTR [rax],ah
   100010209:	add    BYTE PTR [rip+0x65002000],ch        # 0x16501220f
   10001020f:	add    BYTE PTR [rdx+0x0],dh
   100010212:	jb     0x100010214
   100010214:	outs   dx,DWORD PTR ds:[rsi]
   100010215:	add    BYTE PTR [rdx+0x0],dh
   100010218:	and    BYTE PTR [rax],al
   10001021a:	and    eax,0x70006400
   10001021f:	add    BYTE PTR [rax+rax*1+0x65],ch
   100010223:	add    BYTE PTR [rcx+0x0],ah
   100010226:	jae    0x100010228
   100010228:	add    BYTE PTR gs:[rax],ah
   10001022b:	add    BYTE PTR [rbx+0x0],dh
   10001022e:	jo     0x100010230
   100010230:	add    BYTE PTR gs:[rbx+0x0],ah
   100010234:	imul   eax,DWORD PTR [rax],0x790066
   10001023a:	and    BYTE PTR [rax],al
   10001023c:	je     0x10001023e
   10001023e:	push   0x20006500
   100010243:	add    BYTE PTR [rsi+0x0],ch
   100010246:	(bad)  
   100010247:	add    BYTE PTR [rbp+0x0],ch
   10001024a:	add    BYTE PTR gs:[rax],ah
   10001024d:	add    BYTE PTR [rdi+0x0],ch
   100010250:	data16 add BYTE PTR [rax],ah
   100010253:	add    BYTE PTR [rcx+0x0],ah
   100010256:	outs   dx,BYTE PTR ds:[rsi]
   100010257:	add    BYTE PTR [rax],ah
   100010259:	add    BYTE PTR [rbp+0x0],ah
   10001025c:	js     0x10001025e
   10001025e:	imul   eax,DWORD PTR [rax],0x740073
   100010264:	imul   eax,DWORD PTR [rax],0x67006e
   10001026a:	and    BYTE PTR [rax],al
   10001026c:	imul   eax,DWORD PTR [rax],0x73006e
   100010272:	je     0x100010274
   100010274:	(bad)  
   100010275:	add    BYTE PTR [rsi+0x0],ch
   100010278:	movsxd eax,DWORD PTR [rax]
   10001027a:	add    BYTE PTR gs:[rax],ah
   10001027d:	add    BYTE PTR [rdi+0x0],ch
   100010280:	outs   dx,BYTE PTR ds:[rsi]
   100010281:	add    BYTE PTR [rax],ah
   100010283:	add    BYTE PTR [rax+rax*1+0x68],dh
   100010287:	add    BYTE PTR [rbp+0x0],ah
   10001028a:	and    BYTE PTR [rax],al
   10001028c:	imul   eax,DWORD PTR [rax],0x76006e
   100010292:	outs   dx,DWORD PTR ds:[rsi]
   100010293:	add    BYTE PTR [rbx+0x0],ah
   100010296:	(bad)  
   100010297:	add    BYTE PTR [rax+rax*1+0x69],dh
   10001029b:	add    BYTE PTR [rdi+0x0],ch
   10001029e:	outs   dx,BYTE PTR ds:[rsi]
   10001029f:	add    BYTE PTR [rax],ah
   1000102a1:	add    BYTE PTR [rdi+0x0],ch
   1000102a4:	data16 add BYTE PTR [rax],ah
   1000102a7:	add    BYTE PTR [rbx+0x0],dh
   1000102aa:	jno    0x1000102ac
   1000102ac:	ins    BYTE PTR es:[rdi],dx
   1000102ad:	add    BYTE PTR [rbx+0x0],dh
   1000102b0:	add    BYTE PTR gs:[rdx+0x0],dh
   1000102b4:	jbe    0x1000102b6
   1000102b6:	jb     0x1000102b8
   1000102b8:	add    BYTE PTR cs:[rbp+0x0],ah
   1000102bc:	js     0x1000102be
   1000102be:	add    BYTE PTR gs:[rsi],ch
   1000102c1:	add    BYTE PTR [rdx],cl
   1000102c3:	add    BYTE PTR [rdx],cl
   1000102c5:	add    BYTE PTR [rcx+0x0],cl
   1000102c8:	data16 add BYTE PTR [rax],ah
   1000102cb:	add    BYTE PTR [rcx+0x0],bh
   1000102ce:	outs   dx,DWORD PTR ds:[rsi]
   1000102cf:	add    BYTE PTR [rbp+0x0],dh
   1000102d2:	and    BYTE PTR [rax],al
   1000102d4:	(bad)  
   1000102d5:	add    BYTE PTR [rbp+0x0],ah
   1000102d8:	ins    BYTE PTR es:[rdi],dx
   1000102d9:	add    BYTE PTR [rcx+0x0],ch
   1000102dc:	add    BYTE PTR gs:[rsi+0x0],dh
   1000102e0:	add    BYTE PTR gs:[rax],ah
   1000102e3:	add    BYTE PTR [rax+rax*1+0x68],dh
   1000102e7:	add    BYTE PTR [rcx+0x0],ah
   1000102ea:	je     0x1000102ec
   1000102ec:	and    BYTE PTR [rax],al
   1000102ee:	jns    0x1000102f0
   1000102f0:	outs   dx,DWORD PTR ds:[rsi]
   1000102f1:	add    BYTE PTR [rbp+0x0],dh
   1000102f4:	jb     0x1000102f6
   1000102f6:	and    BYTE PTR [rax],al
   1000102f8:	imul   eax,DWORD PTR [rax],0x73006e
   1000102fe:	je     0x100010300
   100010300:	(bad)  
   100010301:	add    BYTE PTR [rax+rax*1+0x6c],ch
   100010305:	add    BYTE PTR [rcx+0x0],ah
   100010308:	je     0x10001030a
   10001030a:	imul   eax,DWORD PTR [rax],0x6e006f
   100010310:	and    BYTE PTR [rax],al
   100010312:	imul   eax,DWORD PTR [rax],0x200073
   100010318:	movsxd eax,DWORD PTR [rax]
   10001031a:	outs   dx,DWORD PTR ds:[rsi]
   10001031b:	add    BYTE PTR [rdx+0x0],dh
   10001031e:	jb     0x100010320
   100010320:	jne    0x100010322
   100010322:	jo     0x100010324
   100010324:	je     0x100010326
   100010326:	and    BYTE PTR [rax],al
   100010328:	outs   dx,DWORD PTR ds:[rsi]
   100010329:	add    BYTE PTR [rdx+0x0],dh
   10001032c:	and    BYTE PTR [rax],al
   10001032e:	push   0x73006100
   100010333:	add    BYTE PTR [rax],ah
   100010335:	add    BYTE PTR [rdx+0x0],ah
   100010338:	add    BYTE PTR gs:[rbp+0x0],ah
   10001033c:	outs   dx,BYTE PTR ds:[rsi]
   10001033d:	add    BYTE PTR [rax],ah
   10001033f:	add    BYTE PTR [rax+rax*1+0x61],dh
   100010343:	add    BYTE PTR [rbp+0x0],ch
   100010346:	jo     0x100010348
   100010348:	add    BYTE PTR gs:[rdx+0x0],dh
   10001034c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   100010351:	add    BYTE PTR [rdi+0x0],dh
   100010354:	imul   eax,DWORD PTR [rax],0x680074
   10001035a:	sub    al,0x0
   10001035c:	and    BYTE PTR [rax],al
   10001035e:	jne    0x100010360
   100010360:	outs   dx,BYTE PTR ds:[rsi]
   100010361:	add    BYTE PTR [rcx+0x0],ch
   100010364:	outs   dx,BYTE PTR ds:[rsi]
   100010365:	add    BYTE PTR [rbx+0x0],dh
   100010368:	je     0x10001036a
   10001036a:	(bad)  
   10001036b:	add    BYTE PTR [rax+rax*1+0x6c],ch
   10001036f:	add    BYTE PTR [rax],ah
   100010371:	add    BYTE PTR [rax+rax*1+0x68],dh
   100010375:	add    BYTE PTR [rbp+0x0],ah
   100010378:	outs   dx,BYTE PTR ds:[rsi]
   100010379:	add    BYTE PTR [rax],ah
   10001037b:	add    BYTE PTR [rdx+0x0],dh
   10001037e:	add    BYTE PTR gs:[rip+0x75007200],ch        # 0x175017585
   100010385:	add    BYTE PTR [rsi+0x0],ch
   100010388:	and    BYTE PTR [rax],al
   10001038a:	jae    0x10001038c
   10001038c:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   100010391:	add    BYTE PTR [rax+0x0],dh
   100010394:	and    BYTE PTR [rax],al
   100010396:	je     0x100010398
   100010398:	outs   dx,DWORD PTR ds:[rsi]
   100010399:	add    BYTE PTR [rax],ah
   10001039b:	add    BYTE PTR [rbx+0x0],ah
   10001039e:	outs   dx,DWORD PTR ds:[rsi]
   10001039f:	add    BYTE PTR [rdx+0x0],dh
   1000103a2:	jb     0x1000103a4
   1000103a4:	add    BYTE PTR gs:[rbx+0x0],ah
   1000103a8:	je     0x1000103aa
   1000103aa:	and    BYTE PTR [rax],al
   1000103ac:	je     0x1000103ae
   1000103ae:	push   0x73006900
   1000103b3:	add    BYTE PTR [rax],ah
   1000103b5:	add    BYTE PTR [rax+0x0],dh
   1000103b8:	jb     0x1000103ba
   1000103ba:	outs   dx,DWORD PTR ds:[rsi]
   1000103bb:	add    BYTE PTR [rdx+0x0],ah
   1000103be:	ins    BYTE PTR es:[rdi],dx
   1000103bf:	add    BYTE PTR [rbp+0x0],ah
   1000103c2:	ins    DWORD PTR es:[rdi],dx
   1000103c3:	add    BYTE PTR [rsi],ch
   1000103c5:	add    BYTE PTR [rax],al
   1000103c7:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000103cd:	nop
   1000103ce:	nop
   1000103cf:	nop
   1000103d0:	mov    r11,rsp
   1000103d3:	push   rdi
   1000103d4:	sub    rsp,0x50
   1000103d8:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   1000103e0:	mov    QWORD PTR [r11+0x8],rbx
   1000103e4:	mov    QWORD PTR [r11+0x10],rsi
   1000103e8:	mov    rdi,r9
   1000103eb:	mov    rsi,r8
   1000103ee:	mov    rbx,rdx
   1000103f1:	xor    eax,eax
   1000103f3:	mov    QWORD PTR [r11-0x20],rax
   1000103f7:	mov    QWORD PTR [r11-0x28],rax
   1000103fb:	mov    rdx,QWORD PTR [rip+0x2850e]        # 0x100038910
   100010402:	add    rdx,0x83d4
   100010409:	lea    rax,[r11-0x20]
   10001040d:	mov    QWORD PTR [r11-0x38],rax
   100010411:	mov    r9d,0x20019
   100010417:	xor    r8d,r8d
   10001041a:	mov    rcx,0xffffffff80000002
   100010421:	call   0x100019a90
   100010426:	test   eax,eax
   100010428:	jne    0x10001049c
   10001042a:	lea    rax,[rsp+0x30]
   10001042f:	mov    QWORD PTR [rsp+0x20],rax
   100010434:	mov    r9d,0x20019
   10001043a:	xor    r8d,r8d
   10001043d:	lea    rdx,[rip+0x8c]        # 0x1000104d0
   100010444:	mov    rcx,QWORD PTR [rsp+0x38]
   100010449:	call   0x100019a90
   10001044e:	test   eax,eax
   100010450:	jne    0x100010491
   100010452:	mov    QWORD PTR [rsp+0x28],rdi
   100010457:	mov    QWORD PTR [rsp+0x20],rsi
   10001045c:	xor    r9d,r9d
   10001045f:	xor    r8d,r8d
   100010462:	lea    rdx,[rip+0x67]        # 0x1000104d0
   100010469:	mov    rcx,QWORD PTR [rsp+0x30]
   10001046e:	call   0x100019dc0
   100010473:	test   eax,eax
   100010475:	je     0x10001049c
   100010477:	jle    0x100010481
   100010479:	movzx  eax,ax
   10001047c:	or     eax,0x80070000
   100010481:	lea    rdx,[rip+0x68]        # 0x1000104f0
   100010488:	mov    ecx,eax
   10001048a:	call   0x100015f20
   10001048f:	jmp    0x10001049c
   100010491:	mov    edx,eax
   100010493:	mov    rcx,rbx
   100010496:	call   0x10000fde0
   10001049b:	nop
   10001049c:	mov    rcx,QWORD PTR [rsp+0x30]
   1000104a1:	test   rcx,rcx
   1000104a4:	je     0x1000104ac
   1000104a6:	call   0x10001ab50
   1000104ab:	nop
   1000104ac:	mov    rcx,QWORD PTR [rsp+0x38]
   1000104b1:	test   rcx,rcx
   1000104b4:	je     0x1000104bb
   1000104b6:	call   0x10001ab50
   1000104bb:	mov    rbx,QWORD PTR [rsp+0x60]
   1000104c0:	mov    rsi,QWORD PTR [rsp+0x68]
   1000104c5:	add    rsp,0x50
   1000104c9:	pop    rdi
   1000104ca:	ret    
   1000104cb:	nop
   1000104cc:	nop
   1000104cd:	nop
   1000104ce:	nop
   1000104cf:	nop
   1000104d0:	rex.XB add BYTE PTR [r13+0x0],sil
   1000104d4:	jb     0x1000104d6
   1000104d6:	jb     0x1000104d8
   1000104d8:	add    BYTE PTR gs:[rsi+0x0],ch
   1000104dc:	je     0x1000104de
   1000104de:	push   rsi
   1000104df:	add    BYTE PTR [rbp+0x0],ah
   1000104e2:	jb     0x1000104e4
   1000104e4:	jae    0x1000104e6
   1000104e6:	imul   eax,DWORD PTR [rax],0x6e006f
   1000104ec:	add    BYTE PTR [rax],al
   1000104ee:	nop
   1000104ef:	nop
   1000104f0:	push   rbx
   1000104f1:	push   rcx
   1000104f2:	rex.WR and BYTE PTR [rdx+0x65],r10b
   1000104f6:	imul   esi,DWORD PTR [ebx+0x74],0x43207972
   1000104fe:	jne    0x100010572
   100010500:	jb     0x100010567
   100010502:	outs   dx,BYTE PTR ds:[rsi]
   100010503:	je     0x10001055b
   100010505:	gs jb  0x10001057b
   100010508:	imul   ebp,DWORD PTR [rdi+0x6e],0x69614620
   10001050f:	ins    BYTE PTR es:[rdi],dx
   100010510:	jne    0x100010584
   100010512:	add    BYTE PTR gs:[rax-0x6f6f6f70],dl
   100010519:	nop
   10001051a:	nop
   10001051b:	nop
   10001051c:	nop
   10001051d:	nop
   10001051e:	nop
   10001051f:	nop
   100010520:	push   rdi
   100010522:	sub    rsp,0x40
   100010526:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   10001052f:	mov    QWORD PTR [rsp+0x50],rbx
   100010534:	xor    edi,edi
   100010536:	mov    QWORD PTR [rsp+0x68],rdi
   10001053b:	mov    DWORD PTR [rsp+0x58],edi
   10001053f:	mov    DWORD PTR [rsp+0x60],0x4
   100010547:	mov    rdx,QWORD PTR [rip+0x283c2]        # 0x100038910
   10001054e:	add    rdx,0x83d4
   100010555:	lea    rax,[rsp+0x68]
   10001055a:	mov    QWORD PTR [rsp+0x20],rax
   10001055f:	lea    r9d,[rdi+0x1]
   100010563:	xor    r8d,r8d
   100010566:	mov    rcx,0xffffffff80000002
   10001056d:	call   0x100019a90
   100010572:	test   eax,eax
   100010574:	jne    0x1000105b0
   100010576:	lea    rax,[rsp+0x60]
   10001057b:	mov    QWORD PTR [rsp+0x28],rax
   100010580:	lea    rax,[rsp+0x58]
   100010585:	mov    QWORD PTR [rsp+0x20],rax
   10001058a:	xor    r9d,r9d
   10001058d:	xor    r8d,r8d
   100010590:	lea    rdx,[rip+0x39]        # 0x1000105d0
   100010597:	mov    rcx,QWORD PTR [rsp+0x68]
   10001059c:	call   0x100019dc0
   1000105a1:	mov    ebx,DWORD PTR [rsp+0x58]
   1000105a5:	test   eax,eax
   1000105a7:	cmovne ebx,edi
   1000105aa:	mov    DWORD PTR [rsp+0x58],ebx
   1000105ae:	jmp    0x1000105b4
   1000105b0:	mov    ebx,DWORD PTR [rsp+0x58]
   1000105b4:	mov    rcx,QWORD PTR [rsp+0x68]
   1000105b9:	test   rcx,rcx
   1000105bc:	je     0x1000105c3
   1000105be:	call   0x10001ab50
   1000105c3:	mov    eax,ebx
   1000105c5:	mov    rbx,QWORD PTR [rsp+0x50]
   1000105ca:	add    rsp,0x40
   1000105ce:	pop    rdi
   1000105cf:	ret    
   1000105d0:	add    BYTE PTR [r13+0x0],bpl
   1000105d4:	push   0x63004100
   1000105d9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1000105dd:	add    BYTE PTR [rsi+0x0],dh
   1000105e0:	add    BYTE PTR gs:[rbx+0x0],dl
   1000105e4:	add    BYTE PTR gs:[rdx+0x0],dh
   1000105e8:	jbe    0x1000105ea
   1000105ea:	add    BYTE PTR gs:[rdx+0x0],dh
   1000105ee:	add    BYTE PTR [rax],al
   1000105f0:	nop
   1000105f1:	nop
   1000105f2:	nop
   1000105f3:	nop
   1000105f4:	nop
   1000105f5:	nop
   1000105f6:	nop
   1000105f7:	nop
   1000105f8:	nop
   1000105f9:	nop
   1000105fa:	nop
   1000105fb:	nop
   1000105fc:	nop
   1000105fd:	nop
   1000105fe:	nop
   1000105ff:	nop
   100010600:	push   rbx
   100010602:	sub    rsp,0x460
   100010609:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   100010612:	mov    rax,QWORD PTR [rip+0x18bd7]        # 0x1000291f0
   100010619:	xor    rax,rsp
   10001061c:	mov    QWORD PTR [rsp+0x450],rax
   100010624:	mov    rbx,QWORD PTR [rip+0x282e5]        # 0x100038910
   10001062b:	add    rbx,0x921a
   100010632:	call   QWORD PTR [rip+0xffffffffffff1600]        # 0x100001c38
   100010638:	mov    r9,rax
   10001063b:	lea    rax,[rip+0xd6]        # 0x100010718
   100010642:	mov    QWORD PTR [rsp+0x28],rax
   100010647:	mov    QWORD PTR [rsp+0x20],rbx
   10001064c:	lea    r8,[rip+0xffffffffffff309d]        # 0x1000036f0
   100010653:	mov    edx,0x105
   100010658:	lea    rcx,[rsp+0x240]
   100010660:	call   0x100005bb0
   100010665:	mov    ebx,eax
   100010667:	mov    QWORD PTR [rsp+0x30],0x0
   100010670:	test   eax,eax
   100010672:	jns    0x1000106bc
   100010674:	mov    ecx,eax
   100010676:	call   QWORD PTR [rip+0xffffffffffff103c]        # 0x1000016b8
   10001067c:	call   QWORD PTR [rip+0xffffffffffff15b6]        # 0x100001c38
   100010682:	mov    r9,rax
   100010685:	mov    DWORD PTR [rsp+0x28],ebx
   100010689:	lea    rbx,[rip+0xa0]        # 0x100010730
   100010690:	mov    QWORD PTR [rsp+0x20],rbx
   100010695:	lea    r8,[rip+0xffffffffffff3124]        # 0x1000037c0
   10001069c:	mov    edx,0x200
   1000106a1:	lea    rcx,[rsp+0x40]
   1000106a6:	call   0x10000eb40
   1000106ab:	test   eax,eax
   1000106ad:	mov    rcx,rbx
   1000106b0:	js     0x1000106b7
   1000106b2:	lea    rcx,[rsp+0x40]
   1000106b7:	call   0x100015fc0
   1000106bc:	lea    rax,[rsp+0x30]
   1000106c1:	mov    QWORD PTR [rsp+0x20],rax
   1000106c6:	mov    r9d,0x20019
   1000106cc:	xor    r8d,r8d
   1000106cf:	lea    rdx,[rsp+0x240]
   1000106d7:	mov    rcx,0xffffffff80000002
   1000106de:	call   0x100019a90
   1000106e3:	test   eax,eax
   1000106e5:	sete   bl
   1000106e8:	mov    rcx,QWORD PTR [rsp+0x30]
   1000106ed:	test   rcx,rcx
   1000106f0:	je     0x1000106f7
   1000106f2:	call   0x10001ab50
   1000106f7:	movzx  eax,bl
   1000106fa:	mov    rcx,QWORD PTR [rsp+0x450]
   100010702:	xor    rcx,rsp
   100010705:	call   0x100002610
   10001070a:	add    rsp,0x460
   100010711:	pop    rbx
   100010712:	ret    
   100010713:	nop
   100010714:	nop
   100010715:	nop
   100010716:	nop
   100010717:	nop
   100010718:	pop    rsp
   100010719:	add    BYTE PTR [rbx+0x0],al
   10001071c:	ins    BYTE PTR es:[rdi],dx
   10001071d:	add    BYTE PTR [rbp+0x0],dh
   100010720:	jae    0x100010722
   100010722:	je     0x100010724
   100010724:	add    BYTE PTR gs:[rdx+0x0],dh
   100010728:	add    BYTE PTR [rax],al
   10001072a:	nop
   10001072b:	nop
   10001072c:	nop
   10001072d:	nop
   10001072e:	nop
   10001072f:	nop
   100010730:	push   rbx
   100010731:	je     0x1000107a5
   100010733:	imul   ebp,DWORD PTR [rsi+0x67],0x726f4620
   10001073a:	ins    DWORD PTR es:[rdi],dx
   10001073b:	(bad)  
   10001073c:	je     0x10001075e
   10001073e:	rex.RB jb 0x1000107b3
   100010741:	outs   dx,DWORD PTR ds:[rsi]
   100010742:	jb     0x100010764
   100010744:	sub    BYTE PTR [rbx+0x6c],ah
   100010747:	jne    0x1000107bc
   100010749:	je     0x1000107b0
   10001074b:	jb     0x10001076d
   10001074d:	imul   esp,DWORD PTR [rbp+0x79],0x73
   100010751:	je     0x1000107c5
   100010753:	imul   ebp,DWORD PTR [rsi+0x67],0x90900029
   10001075a:	nop
   10001075b:	nop
   10001075c:	nop
   10001075d:	nop
   10001075e:	nop
   10001075f:	nop
   100010760:	push   rdi
   100010762:	sub    rsp,0x40
   100010766:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   10001076f:	mov    QWORD PTR [rsp+0x50],rbx
   100010774:	mov    QWORD PTR [rsp+0x68],rsi
   100010779:	mov    rdi,rdx
   10001077c:	mov    QWORD PTR [rsp+0x60],0x0
   100010785:	mov    DWORD PTR [rsp+0x58],0x4
   10001078d:	mov    rdx,QWORD PTR [rip+0x2817c]        # 0x100038910
   100010794:	add    rdx,0x83d4
   10001079b:	lea    rax,[rsp+0x60]
   1000107a0:	mov    QWORD PTR [rsp+0x20],rax
   1000107a5:	mov    esi,0x1
   1000107aa:	mov    r9d,esi
   1000107ad:	xor    r8d,r8d
   1000107b0:	mov    rcx,0xffffffff80000002
   1000107b7:	call   0x100019a90
   1000107bc:	mov    ebx,eax
   1000107be:	test   eax,eax
   1000107c0:	jne    0x1000107ea
   1000107c2:	lea    rax,[rsp+0x58]
   1000107c7:	mov    QWORD PTR [rsp+0x28],rax
   1000107cc:	mov    QWORD PTR [rsp+0x20],rdi
   1000107d1:	xor    r9d,r9d
   1000107d4:	xor    r8d,r8d
   1000107d7:	lea    rdx,[rip+0xffffffffffff2c32]        # 0x100003410
   1000107de:	mov    rcx,QWORD PTR [rsp+0x60]
   1000107e3:	call   0x100019dc0
   1000107e8:	mov    ebx,eax
   1000107ea:	mov    eax,DWORD PTR [rdi]
   1000107ec:	cmp    eax,0x2
   1000107ef:	cmovne eax,esi
   1000107f2:	mov    DWORD PTR [rdi],eax
   1000107f4:	mov    rcx,QWORD PTR [rsp+0x60]
   1000107f9:	test   rcx,rcx
   1000107fc:	je     0x100010803
   1000107fe:	call   0x10001ab50
   100010803:	mov    eax,ebx
   100010805:	mov    rbx,QWORD PTR [rsp+0x50]
   10001080a:	mov    rsi,QWORD PTR [rsp+0x68]
   10001080f:	add    rsp,0x40
   100010813:	pop    rdi
   100010814:	ret    
   100010815:	nop
   100010816:	nop
   100010817:	nop
   100010818:	nop
   100010819:	nop
   10001081a:	nop
   10001081b:	nop
   10001081c:	nop
   10001081d:	nop
   10001081e:	nop
   10001081f:	nop
   100010820:	push   rdi
   100010822:	sub    rsp,0x40
   100010826:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   10001082f:	mov    QWORD PTR [rsp+0x50],rbx
   100010834:	mov    QWORD PTR [rsp+0x58],rsi
   100010839:	mov    rdi,r8
   10001083c:	mov    rsi,rdx
   10001083f:	mov    QWORD PTR [rsp+0x68],0x0
   100010848:	mov    rdx,QWORD PTR [rip+0x280c1]        # 0x100038910
   10001084f:	add    rdx,0x83d4
   100010856:	lea    rax,[rsp+0x68]
   10001085b:	mov    QWORD PTR [rsp+0x20],rax
   100010860:	mov    r9d,0x1
   100010866:	xor    r8d,r8d
   100010869:	mov    rcx,0xffffffff80000002
   100010870:	call   0x100019a90
   100010875:	mov    ebx,eax
   100010877:	test   eax,eax
   100010879:	jne    0x1000108a1
   10001087b:	mov    QWORD PTR [rsp+0x28],rdi
   100010880:	mov    QWORD PTR [rsp+0x20],rsi
   100010885:	xor    r9d,r9d
   100010888:	xor    r8d,r8d
   10001088b:	lea    rdx,[rip+0xffffffffffff2b96]        # 0x100003428
   100010892:	mov    rcx,QWORD PTR [rsp+0x68]
   100010897:	call   0x100019dc0
   10001089c:	mov    ebx,eax
   10001089e:	add    DWORD PTR [rdi],0xfffffffe
   1000108a1:	mov    rcx,QWORD PTR [rsp+0x68]
   1000108a6:	test   rcx,rcx
   1000108a9:	je     0x1000108b0
   1000108ab:	call   0x10001ab50
   1000108b0:	mov    eax,ebx
   1000108b2:	mov    rbx,QWORD PTR [rsp+0x50]
   1000108b7:	mov    rsi,QWORD PTR [rsp+0x58]
   1000108bc:	add    rsp,0x40
   1000108c0:	pop    rdi
   1000108c1:	ret    
   1000108c2:	nop
   1000108c3:	nop
   1000108c4:	nop
   1000108c5:	nop
   1000108c6:	nop
   1000108c7:	nop
   1000108c8:	nop
   1000108c9:	nop
   1000108ca:	nop
   1000108cb:	nop
   1000108cc:	nop
   1000108cd:	nop
   1000108ce:	nop
   1000108cf:	nop
   1000108d0:	push   rdi
   1000108d2:	sub    rsp,0x40
   1000108d6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1000108df:	mov    QWORD PTR [rsp+0x50],rbx
   1000108e4:	mov    rdi,rdx
   1000108e7:	mov    QWORD PTR [rsp+0x68],0x0
   1000108f0:	mov    rdx,QWORD PTR [rip+0x28019]        # 0x100038910
   1000108f7:	add    rdx,0x83d4
   1000108fe:	lea    rax,[rsp+0x68]
   100010903:	mov    QWORD PTR [rsp+0x20],rax
   100010908:	mov    r9d,0x1
   10001090e:	xor    r8d,r8d
   100010911:	mov    rcx,0xffffffff80000002
   100010918:	call   0x100019a90
   10001091d:	mov    ebx,eax
   10001091f:	test   eax,eax
   100010921:	jne    0x100010953
   100010923:	mov    DWORD PTR [rsp+0x60],0x4
   10001092b:	lea    rax,[rsp+0x60]
   100010930:	mov    QWORD PTR [rsp+0x28],rax
   100010935:	mov    QWORD PTR [rsp+0x20],rdi
   10001093a:	xor    r9d,r9d
   10001093d:	xor    r8d,r8d
   100010940:	lea    rdx,[rip+0xffffffffffff2b01]        # 0x100003448
   100010947:	mov    rcx,QWORD PTR [rsp+0x68]
   10001094c:	call   0x100019dc0
   100010951:	mov    ebx,eax
   100010953:	mov    rcx,QWORD PTR [rsp+0x68]
   100010958:	test   rcx,rcx
   10001095b:	je     0x100010962
   10001095d:	call   0x10001ab50
   100010962:	mov    eax,ebx
   100010964:	mov    rbx,QWORD PTR [rsp+0x50]
   100010969:	add    rsp,0x40
   10001096d:	pop    rdi
   10001096e:	ret    
   10001096f:	nop
   100010970:	nop
   100010971:	nop
   100010972:	nop
   100010973:	nop
   100010974:	nop
   100010975:	nop
   100010976:	nop
   100010977:	nop
   100010978:	nop
   100010979:	nop
   10001097a:	nop
   10001097b:	nop
   10001097c:	nop
   10001097d:	nop
   10001097e:	nop
   10001097f:	nop
   100010980:	push   rbx
   100010982:	sub    rsp,0x40
   100010986:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   10001098f:	mov    rbx,rdx
   100010992:	mov    QWORD PTR [rsp+0x30],0x0
   10001099b:	mov    rdx,QWORD PTR [rip+0x27f6e]        # 0x100038910
   1000109a2:	add    rdx,0x83d4
   1000109a9:	lea    rax,[rsp+0x30]
   1000109ae:	mov    QWORD PTR [rsp+0x20],rax
   1000109b3:	mov    r9d,0x1
   1000109b9:	xor    r8d,r8d
   1000109bc:	mov    rcx,0xffffffff80000002
   1000109c3:	call   0x100019a90
   1000109c8:	test   eax,eax
   1000109ca:	jne    0x100010a8f
   1000109d0:	mov    DWORD PTR [rsp+0x60],0x2
   1000109d8:	lea    rax,[rsp+0x60]
   1000109dd:	mov    QWORD PTR [rsp+0x28],rax
   1000109e2:	lea    rax,[rsp+0x68]
   1000109e7:	mov    QWORD PTR [rsp+0x20],rax
   1000109ec:	xor    r9d,r9d
   1000109ef:	xor    r8d,r8d
   1000109f2:	lea    rdx,[rip+0xffffffffffff2a67]        # 0x100003460
   1000109f9:	mov    rcx,QWORD PTR [rsp+0x30]
   1000109fe:	call   0x100019dc0
   100010a03:	test   eax,eax
   100010a05:	jne    0x100010a0f
   100010a07:	movzx  eax,WORD PTR [rsp+0x68]
   100010a0c:	mov    WORD PTR [rbx],ax
   100010a0f:	mov    DWORD PTR [rsp+0x60],0x2
   100010a17:	lea    rax,[rsp+0x60]
   100010a1c:	mov    QWORD PTR [rsp+0x28],rax
   100010a21:	lea    rax,[rsp+0x68]
   100010a26:	mov    QWORD PTR [rsp+0x20],rax
   100010a2b:	xor    r9d,r9d
   100010a2e:	xor    r8d,r8d
   100010a31:	lea    rdx,[rip+0xffffffffffff2a38]        # 0x100003470
   100010a38:	mov    rcx,QWORD PTR [rsp+0x30]
   100010a3d:	call   0x100019dc0
   100010a42:	test   eax,eax
   100010a44:	jne    0x100010a4f
   100010a46:	movzx  eax,WORD PTR [rsp+0x68]
   100010a4b:	mov    WORD PTR [rbx+0x2],ax
   100010a4f:	mov    DWORD PTR [rsp+0x60],0x2
   100010a57:	lea    rax,[rsp+0x60]
   100010a5c:	mov    QWORD PTR [rsp+0x28],rax
   100010a61:	lea    rax,[rsp+0x68]
   100010a66:	mov    QWORD PTR [rsp+0x20],rax
   100010a6b:	xor    r9d,r9d
   100010a6e:	xor    r8d,r8d
   100010a71:	lea    rdx,[rip+0xffffffffffff2a08]        # 0x100003480
   100010a78:	mov    rcx,QWORD PTR [rsp+0x30]
   100010a7d:	call   0x100019dc0
   100010a82:	test   eax,eax
   100010a84:	jne    0x100010a8f
   100010a86:	movzx  eax,WORD PTR [rsp+0x68]
   100010a8b:	mov    WORD PTR [rbx+0x4],ax
   100010a8f:	mov    rcx,QWORD PTR [rsp+0x30]
   100010a94:	test   rcx,rcx
   100010a97:	je     0x100010a9e
   100010a99:	call   0x10001ab50
   100010a9e:	add    rsp,0x40
   100010aa2:	pop    rbx
   100010aa3:	ret    
   100010aa4:	nop
   100010aa5:	nop
   100010aa6:	nop
   100010aa7:	nop
   100010aa8:	nop
   100010aa9:	nop
   100010aaa:	nop
   100010aab:	nop
   100010aac:	nop
   100010aad:	nop
   100010aae:	nop
   100010aaf:	nop
   100010ab0:	mov    rax,rsp
   100010ab3:	push   rdi
   100010ab4:	push   r14
   100010ab6:	push   r15
   100010ab8:	sub    rsp,0x320
   100010abf:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   100010ac8:	mov    QWORD PTR [rax+0x10],rbx
   100010acc:	mov    QWORD PTR [rax+0x18],rbp
   100010ad0:	mov    QWORD PTR [rax+0x20],rsi
   100010ad4:	mov    rax,QWORD PTR [rip+0x18715]        # 0x1000291f0
   100010adb:	xor    rax,rsp
   100010ade:	mov    QWORD PTR [rsp+0x310],rax
   100010ae6:	mov    rsi,rcx
   100010ae9:	cmp    BYTE PTR [rcx+0x20],0x0
   100010aed:	jne    0x100010ca0
   100010af3:	mov    rax,QWORD PTR [rip+0x27e16]        # 0x100038910
   100010afa:	cmp    DWORD PTR [rax+0x49d4],0x0
   100010b01:	jne    0x100010ca0
   100010b07:	xor    r14d,r14d
   100010b0a:	mov    QWORD PTR [rsp+0x48],r14
   100010b0f:	mov    rbx,QWORD PTR [rip+0x27dfa]        # 0x100038910
   100010b16:	add    rbx,0x83d4
   100010b1d:	call   QWORD PTR [rip+0xffffffffffff1115]        # 0x100001c38
   100010b23:	mov    r9,rax
   100010b26:	lea    rax,[rip+0x1a3]        # 0x100010cd0
   100010b2d:	mov    QWORD PTR [rsp+0x28],rax
   100010b32:	mov    QWORD PTR [rsp+0x20],rbx
   100010b37:	lea    r8,[rip+0xffffffffffff2bb2]        # 0x1000036f0
   100010b3e:	mov    edx,0x105
   100010b43:	lea    rcx,[rsp+0x100]
   100010b4b:	call   QWORD PTR [rip+0xffffffffffff087f]        # 0x1000013d0
   100010b51:	mov    WORD PTR [rsp+0x308],r14w
   100010b5a:	mov    BYTE PTR [rsi+0x20],0x1
   100010b5e:	lea    rax,[rsp+0x48]
   100010b63:	mov    QWORD PTR [rsp+0x20],rax
   100010b68:	mov    r9d,0x20019
   100010b6e:	xor    r8d,r8d
   100010b71:	lea    rdx,[rsp+0x100]
   100010b79:	mov    rcx,0xffffffff80000002
   100010b80:	call   0x100019a90
   100010b85:	test   eax,eax
   100010b87:	jne    0x100010c91
   100010b8d:	mov    ebp,r14d
   100010b90:	mov    ebx,r14d
   100010b93:	lea    rdi,[rsi+0x28]
   100010b97:	mov    r15d,0x3fe
   100010b9d:	nop    DWORD PTR [rax]
   100010ba0:	mov    ecx,0x400
   100010ba5:	call   QWORD PTR [rip+0xffffffffffff080d]        # 0x1000013b8
   100010bab:	mov    QWORD PTR [rdi],rax
   100010bae:	test   rax,rax
   100010bb1:	je     0x100010c81
   100010bb7:	mov    DWORD PTR [rsp+0x40],0x400
   100010bbf:	mov    DWORD PTR [rsp+0x50],0x50
   100010bc7:	lea    rcx,[rsp+0x40]
   100010bcc:	mov    QWORD PTR [rsp+0x38],rcx
   100010bd1:	mov    QWORD PTR [rsp+0x30],rax
   100010bd6:	mov    QWORD PTR [rsp+0x28],r14
   100010bdb:	mov    QWORD PTR [rsp+0x20],r14
   100010be0:	lea    r9,[rsp+0x50]
   100010be5:	lea    r8,[rsp+0x60]
   100010bea:	mov    edx,ebx
   100010bec:	mov    rcx,QWORD PTR [rsp+0x48]
   100010bf1:	call   0x10001abe0
   100010bf6:	test   eax,eax
   100010bf8:	jne    0x100010c71
   100010bfa:	mov    eax,DWORD PTR [rsp+0x40]
   100010bfe:	test   eax,eax
   100010c00:	jne    0x100010c0d
   100010c02:	mov    rcx,QWORD PTR [rdi]
   100010c05:	call   QWORD PTR [rip+0xffffffffffff07b5]        # 0x1000013c0
   100010c0b:	jmp    0x100010c61
   100010c0d:	cmp    eax,0x1
   100010c10:	jae    0x100010c3a
   100010c12:	mov    QWORD PTR [rsp+0x20],r14
   100010c17:	mov    r9d,0x188
   100010c1d:	lea    r8,[rip+0x2a40c]        # 0x10003b030
   100010c24:	lea    rdx,[rip+0x2a4ed]        # 0x10003b118
   100010c2b:	mov    ecx,0x1
   100010c30:	call   QWORD PTR [rip+0xffffffffffff0f22]        # 0x100001b58
   100010c36:	mov    eax,DWORD PTR [rsp+0x40]
   100010c3a:	test   al,0x1
   100010c3c:	jne    0x100010c40
   100010c3e:	dec    eax
   100010c40:	cmp    eax,r15d
   100010c43:	cmova  eax,r15d
   100010c47:	mov    DWORD PTR [rsp+0x40],eax
   100010c4b:	mov    ecx,eax
   100010c4d:	shr    rcx,1
   100010c50:	mov    rax,QWORD PTR [rdi]
   100010c53:	mov    WORD PTR [rax+rcx*2],r14w
   100010c58:	inc    ebp
   100010c5a:	add    rdi,0x8
   100010c5e:	inc    DWORD PTR [rsi+0x24]
   100010c61:	inc    ebx
   100010c63:	cmp    ebx,0x80
   100010c69:	jl     0x100010ba0
   100010c6f:	jmp    0x100010c91
   100010c71:	movsxd rcx,ebp
   100010c74:	mov    rcx,QWORD PTR [rsi+rcx*8+0x28]
   100010c79:	call   QWORD PTR [rip+0xffffffffffff0741]        # 0x1000013c0
   100010c7f:	jmp    0x100010c91
   100010c81:	lea    rcx,[rip+0x60]        # 0x100010ce8
   100010c88:	call   QWORD PTR [rip+0xffffffffffff09ea]        # 0x100001678
   100010c8e:	nop
   100010c8f:	jmp    0x100010c91
   100010c91:	mov    rcx,QWORD PTR [rsp+0x48]
   100010c96:	test   rcx,rcx
   100010c99:	je     0x100010ca0
   100010c9b:	call   0x10001ab50
   100010ca0:	mov    rcx,QWORD PTR [rsp+0x310]
   100010ca8:	xor    rcx,rsp
   100010cab:	call   0x100002610
   100010cb0:	lea    r11,[rsp+0x320]
   100010cb8:	mov    rbx,QWORD PTR [r11+0x28]
   100010cbc:	mov    rbp,QWORD PTR [r11+0x30]
   100010cc0:	mov    rsi,QWORD PTR [r11+0x38]
   100010cc4:	mov    rsp,r11
   100010cc7:	pop    r15
   100010cc9:	pop    r14
   100010ccb:	pop    rdi
   100010ccc:	ret    
   100010ccd:	nop
   100010cce:	nop
   100010ccf:	nop
   100010cd0:	pop    rsp
   100010cd1:	add    BYTE PTR [rax+0x0],dl
   100010cd4:	(bad)  
   100010cd5:	add    BYTE PTR [rdx+0x0],dh
   100010cd8:	(bad)  
   100010cd9:	add    BYTE PTR [rbp+0x0],ch
   100010cdc:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   100010ce1:	add    BYTE PTR [rdx+0x0],dh
   100010ce4:	jae    0x100010ce6
   100010ce6:	add    BYTE PTR [rax],al
   100010ce8:	rex.RB jb 0x100010d5d
   100010ceb:	outs   dx,DWORD PTR ds:[rsi]
   100010cec:	jb     0x100010d28
   100010cee:	and    BYTE PTR [rbp+0x6e],dl
   100010cf1:	(bad)  
   100010cf2:	(bad)  
   100010cf3:	ins    BYTE PTR es:[rdi],dx
   100010cf4:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   100010cf9:	(bad)  
   100010cfa:	ins    BYTE PTR es:[rdi],dx
   100010cfb:	ins    BYTE PTR es:[rdi],dx
   100010cfc:	outs   dx,DWORD PTR ds:[rsi]
   100010cfd:	movsxd esp,DWORD PTR [rcx+0x74]
   100010d00:	and    BYTE PTR gs:[rdx+0x65],dh
   100010d04:	imul   esi,DWORD PTR [ebx+0x74],0x6d207972
   100010d0c:	gs ins DWORD PTR es:[rdi],dx
   100010d0e:	outs   dx,DWORD PTR ds:[rsi]
   100010d0f:	jb     0x100010d8a
   100010d11:	add    BYTE PTR cs:[rax-0x6f6f6f70],dl
   100010d18:	nop
   100010d19:	nop
   100010d1a:	nop
   100010d1b:	nop
   100010d1c:	nop
   100010d1d:	nop
   100010d1e:	nop
   100010d1f:	nop
   100010d20:	push   rbx
   100010d22:	sub    rsp,0x20
   100010d26:	mov    rbx,rcx
   100010d29:	call   0x100010ab0
   100010d2e:	mov    eax,DWORD PTR [rbx+0x24]
   100010d31:	add    rsp,0x20
   100010d35:	pop    rbx
   100010d36:	ret    
   100010d37:	nop
   100010d38:	nop
   100010d39:	nop
   100010d3a:	nop
   100010d3b:	nop
   100010d3c:	nop
   100010d3d:	nop
   100010d3e:	nop
   100010d3f:	nop
   100010d40:	push   rbx
   100010d42:	sub    rsp,0x20
   100010d46:	mov    rbx,rcx
   100010d49:	call   0x100010ab0
   100010d4e:	lea    rax,[rbx+0x28]
   100010d52:	add    rsp,0x20
   100010d56:	pop    rbx
   100010d57:	ret    
   100010d58:	nop
   100010d59:	nop
   100010d5a:	nop
   100010d5b:	nop
   100010d5c:	nop
   100010d5d:	nop
   100010d5e:	nop
   100010d5f:	nop
   100010d60:	push   rbp
   100010d62:	lea    rbp,[rsp-0x57]
   100010d67:	sub    rsp,0xe0
   100010d6e:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   100010d76:	mov    QWORD PTR [rsp+0xf0],rbx
   100010d7e:	mov    rax,QWORD PTR [rip+0x1846b]        # 0x1000291f0
   100010d85:	xor    rax,rsp
   100010d88:	mov    QWORD PTR [rbp+0x4f],rax
   100010d8c:	mov    ebx,edx
   100010d8e:	mov    DWORD PTR [rbp-0x39],0x0
   100010d95:	mov    rcx,QWORD PTR [rip+0x18324]        # 0x1000290c0
   100010d9c:	mov    rax,QWORD PTR gs:0x30
   100010da5:	add    rax,rcx
   100010da8:	cmp    rcx,0x1480
   100010daf:	jge    0x100010db7
   100010db1:	call   QWORD PTR [rip+0xffffffffffff0369]        # 0x100001120
   100010db7:	test   rax,rax
   100010dba:	je     0x100010dc8
   100010dbc:	mov    rcx,QWORD PTR [rax+0xd8]
   100010dc3:	test   rcx,rcx
   100010dc6:	jne    0x100010dfa
   100010dc8:	call   QWORD PTR [rip+0xffffffffffff0d82]        # 0x100001b50
   100010dce:	mov    r11,QWORD PTR [rip+0x182eb]        # 0x1000290c0
   100010dd5:	mov    rax,QWORD PTR gs:0x30
   100010dde:	add    rax,r11
   100010de1:	cmp    r11,0x1480
   100010de8:	jge    0x100010df3
   100010dea:	mov    ecx,r11d
   100010ded:	call   QWORD PTR [rip+0xffffffffffff032d]        # 0x100001120
   100010df3:	mov    rcx,QWORD PTR [rax+0xd8]
   100010dfa:	mov    QWORD PTR [rbp-0x31],rcx
   100010dfe:	mov    eax,DWORD PTR [rcx+0x220]
   100010e04:	and    eax,0x1
   100010e07:	xor    eax,0x1
   100010e0a:	or     DWORD PTR [rbp-0x39],eax
   100010e0d:	or     DWORD PTR [rcx+0x220],0x1
   100010e14:	lea    rcx,[rbp-0x29]
   100010e18:	call   0x100011fd0
   100010e1d:	nop
   100010e1e:	mov    QWORD PTR [rbp-0x59],0x0
   100010e26:	mov    rdx,QWORD PTR [rip+0x27ae3]        # 0x100038910
   100010e2d:	add    rdx,0x83d4
   100010e34:	lea    rax,[rbp-0x59]
   100010e38:	mov    QWORD PTR [rsp+0x20],rax
   100010e3d:	mov    r9d,0x20019
   100010e43:	xor    r8d,r8d
   100010e46:	mov    rcx,0xffffffff80000002
   100010e4d:	call   0x100019a90
   100010e52:	test   eax,eax
   100010e54:	jne    0x100010f18
   100010e5a:	mov    DWORD PTR [rbp-0x4d],0x20
   100010e61:	lea    rax,[rbp-0x4d]
   100010e65:	mov    QWORD PTR [rsp+0x28],rax
   100010e6a:	lea    rax,[rbp+0x2f]
   100010e6e:	mov    QWORD PTR [rsp+0x20],rax
   100010e73:	lea    r9,[rbp-0x51]
   100010e77:	xor    r8d,r8d
   100010e7a:	lea    rdx,[rip+0x117]        # 0x100010f98
   100010e81:	mov    rcx,QWORD PTR [rbp-0x59]
   100010e85:	call   0x100019ad0
   100010e8a:	test   eax,eax
   100010e8c:	jne    0x100010f18
   100010e92:	mov    eax,DWORD PTR [rbp-0x51]
   100010e95:	dec    eax
   100010e97:	je     0x100010edb
   100010e99:	cmp    eax,0x3
   100010e9c:	je     0x100010ebb
   100010e9e:	mov    rcx,QWORD PTR [rbp-0x59]
   100010ea2:	test   rcx,rcx
   100010ea5:	je     0x100010ead
   100010ea7:	call   0x10001ab50
   100010eac:	nop
   100010ead:	lea    rcx,[rbp-0x39]
   100010eb1:	call   0x100011e90
   100010eb6:	jmp    0x100010f79
   100010ebb:	mov    ebx,DWORD PTR [rbp+0x2f]
   100010ebe:	mov    rcx,QWORD PTR [rbp-0x59]
   100010ec2:	test   rcx,rcx
   100010ec5:	je     0x100010ecd
   100010ec7:	call   0x10001ab50
   100010ecc:	nop
   100010ecd:	lea    rcx,[rbp-0x39]
   100010ed1:	call   0x100011e90
   100010ed6:	jmp    0x100010f79
   100010edb:	mov    BYTE PTR [rbp+0x4e],0x0
   100010edf:	call   QWORD PTR [rip+0xffffffffffff0d53]        # 0x100001c38
   100010ee5:	mov    r9,rax
   100010ee8:	mov    r8d,0xa
   100010eee:	lea    rdx,[rbp-0x49]
   100010ef2:	lea    rcx,[rbp+0x2f]
   100010ef6:	call   QWORD PTR [rip+0xffffffffffff04b4]        # 0x1000013b0
   100010efc:	mov    ebx,eax
   100010efe:	mov    rcx,QWORD PTR [rbp-0x59]
   100010f02:	test   rcx,rcx
   100010f05:	je     0x100010f0d
   100010f07:	call   0x10001ab50
   100010f0c:	nop
   100010f0d:	lea    rcx,[rbp-0x39]
   100010f11:	call   0x100011e90
   100010f16:	jmp    0x100010f79
   100010f18:	mov    rcx,QWORD PTR [rbp-0x59]
   100010f1c:	test   rcx,rcx
   100010f1f:	je     0x100010f27
   100010f21:	call   0x10001ab50
   100010f26:	nop
   100010f27:	lea    rax,[rbp-0x29]
   100010f2b:	mov    QWORD PTR [rbp-0x49],rax
   100010f2f:	cmp    DWORD PTR [rbp-0x29],0x0
   100010f33:	je     0x100010f60
   100010f35:	cmp    DWORD PTR [rbp-0x25],0x0
   100010f39:	je     0x100010f4b
   100010f3b:	mov    rax,QWORD PTR [rbp-0x21]
   100010f3f:	or     DWORD PTR [rax+0x2d8],0x800
   100010f49:	jmp    0x100010f60
   100010f4b:	mov    rcx,QWORD PTR [rbp-0x19]
   100010f4f:	mov    rax,QWORD PTR [rcx]
   100010f52:	mov    r8d,0x1
   100010f58:	mov    rdx,QWORD PTR [rbp-0x21]
   100010f5c:	call   QWORD PTR [rax+0x10]
   100010f5f:	nop
   100010f60:	lea    rcx,[rbp-0x11]
   100010f64:	call   0x1000120b0
   100010f69:	nop
   100010f6a:	mov    rcx,QWORD PTR [rbp-0x31]
   100010f6e:	mov    eax,DWORD PTR [rbp-0x39]
   100010f71:	not    eax
   100010f73:	and    DWORD PTR [rcx+0x220],eax
   100010f79:	mov    eax,ebx
   100010f7b:	mov    rcx,QWORD PTR [rbp+0x4f]
   100010f7f:	xor    rcx,rsp
   100010f82:	call   0x100002610
   100010f87:	mov    rbx,QWORD PTR [rsp+0xf0]
   100010f8f:	add    rsp,0xe0
   100010f96:	pop    rbp
   100010f97:	ret    
   100010f98:	rex.WRX jne 0x100011008
   100010f9b:	rex.RB jb 0x100011010
   100010f9e:	outs   dx,DWORD PTR ds:[rsi]
   100010f9f:	jb     0x100010fed
   100010fa1:	outs   dx,DWORD PTR ds:[rsi]
   100010fa2:	addr32 jae 0x100010fa5
   100010fa5:	nop
   100010fa6:	nop
   100010fa7:	nop
   100010fa8:	nop
   100010fa9:	nop
   100010faa:	nop
   100010fab:	nop
   100010fac:	nop
   100010fad:	nop
   100010fae:	nop
   100010faf:	nop
   100010fb0:	push   rbp
   100010fb2:	lea    rbp,[rsp-0x57]
   100010fb7:	sub    rsp,0xe0
   100010fbe:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   100010fc6:	mov    QWORD PTR [rsp+0xf0],rbx
   100010fce:	mov    rax,QWORD PTR [rip+0x1821b]        # 0x1000291f0
   100010fd5:	xor    rax,rsp
   100010fd8:	mov    QWORD PTR [rbp+0x4f],rax
   100010fdc:	mov    ebx,edx
   100010fde:	mov    DWORD PTR [rbp-0x39],0x0
   100010fe5:	mov    rcx,QWORD PTR [rip+0x180d4]        # 0x1000290c0
   100010fec:	mov    rax,QWORD PTR gs:0x30
   100010ff5:	add    rax,rcx
   100010ff8:	cmp    rcx,0x1480
   100010fff:	jge    0x100011007
   100011001:	call   QWORD PTR [rip+0xffffffffffff0119]        # 0x100001120
   100011007:	test   rax,rax
   10001100a:	je     0x100011018
   10001100c:	mov    rcx,QWORD PTR [rax+0xd8]
   100011013:	test   rcx,rcx
   100011016:	jne    0x10001104a
   100011018:	call   QWORD PTR [rip+0xffffffffffff0b32]        # 0x100001b50
   10001101e:	mov    r11,QWORD PTR [rip+0x1809b]        # 0x1000290c0
   100011025:	mov    rax,QWORD PTR gs:0x30
   10001102e:	add    rax,r11
   100011031:	cmp    r11,0x1480
   100011038:	jge    0x100011043
   10001103a:	mov    ecx,r11d
   10001103d:	call   QWORD PTR [rip+0xffffffffffff00dd]        # 0x100001120
   100011043:	mov    rcx,QWORD PTR [rax+0xd8]
   10001104a:	mov    QWORD PTR [rbp-0x31],rcx
   10001104e:	mov    eax,DWORD PTR [rcx+0x220]
   100011054:	and    eax,0x1
   100011057:	xor    eax,0x1
   10001105a:	or     DWORD PTR [rbp-0x39],eax
   10001105d:	or     DWORD PTR [rcx+0x220],0x1
   100011064:	lea    rcx,[rbp-0x29]
   100011068:	call   0x100011fd0
   10001106d:	nop
   10001106e:	mov    QWORD PTR [rbp-0x59],0x0
   100011076:	mov    rdx,QWORD PTR [rip+0x27893]        # 0x100038910
   10001107d:	add    rdx,0x83d4
   100011084:	lea    rax,[rbp-0x59]
   100011088:	mov    QWORD PTR [rsp+0x20],rax
   10001108d:	mov    r9d,0x20019
   100011093:	xor    r8d,r8d
   100011096:	mov    rcx,0xffffffff80000002
   10001109d:	call   0x100019a90
   1000110a2:	test   eax,eax
   1000110a4:	jne    0x100011168
   1000110aa:	mov    DWORD PTR [rbp-0x4d],0x20
   1000110b1:	lea    rax,[rbp-0x4d]
   1000110b5:	mov    QWORD PTR [rsp+0x28],rax
   1000110ba:	lea    rax,[rbp+0x2f]
   1000110be:	mov    QWORD PTR [rsp+0x20],rax
   1000110c3:	lea    r9,[rbp-0x51]
   1000110c7:	xor    r8d,r8d
   1000110ca:	lea    rdx,[rip+0x117]        # 0x1000111e8
   1000110d1:	mov    rcx,QWORD PTR [rbp-0x59]
   1000110d5:	call   0x100019ad0
   1000110da:	test   eax,eax
   1000110dc:	jne    0x100011168
   1000110e2:	mov    eax,DWORD PTR [rbp-0x51]
   1000110e5:	dec    eax
   1000110e7:	je     0x10001112b
   1000110e9:	cmp    eax,0x3
   1000110ec:	je     0x10001110b
   1000110ee:	mov    rcx,QWORD PTR [rbp-0x59]
   1000110f2:	test   rcx,rcx
   1000110f5:	je     0x1000110fd
   1000110f7:	call   0x10001ab50
   1000110fc:	nop
   1000110fd:	lea    rcx,[rbp-0x39]
   100011101:	call   0x100011e90
   100011106:	jmp    0x1000111c9
   10001110b:	mov    ebx,DWORD PTR [rbp+0x2f]
   10001110e:	mov    rcx,QWORD PTR [rbp-0x59]
   100011112:	test   rcx,rcx
   100011115:	je     0x10001111d
   100011117:	call   0x10001ab50
   10001111c:	nop
   10001111d:	lea    rcx,[rbp-0x39]
   100011121:	call   0x100011e90
   100011126:	jmp    0x1000111c9
   10001112b:	mov    BYTE PTR [rbp+0x4e],0x0
   10001112f:	call   QWORD PTR [rip+0xffffffffffff0b03]        # 0x100001c38
   100011135:	mov    r9,rax
   100011138:	mov    r8d,0xa
   10001113e:	lea    rdx,[rbp-0x49]
   100011142:	lea    rcx,[rbp+0x2f]
   100011146:	call   QWORD PTR [rip+0xffffffffffff0264]        # 0x1000013b0
   10001114c:	mov    ebx,eax
   10001114e:	mov    rcx,QWORD PTR [rbp-0x59]
   100011152:	test   rcx,rcx
   100011155:	je     0x10001115d
   100011157:	call   0x10001ab50
   10001115c:	nop
   10001115d:	lea    rcx,[rbp-0x39]
   100011161:	call   0x100011e90
   100011166:	jmp    0x1000111c9
   100011168:	mov    rcx,QWORD PTR [rbp-0x59]
   10001116c:	test   rcx,rcx
   10001116f:	je     0x100011177
   100011171:	call   0x10001ab50
   100011176:	nop
   100011177:	lea    rax,[rbp-0x29]
   10001117b:	mov    QWORD PTR [rbp-0x49],rax
   10001117f:	cmp    DWORD PTR [rbp-0x29],0x0
   100011183:	je     0x1000111b0
   100011185:	cmp    DWORD PTR [rbp-0x25],0x0
   100011189:	je     0x10001119b
   10001118b:	mov    rax,QWORD PTR [rbp-0x21]
   10001118f:	or     DWORD PTR [rax+0x2d8],0x800
   100011199:	jmp    0x1000111b0
   10001119b:	mov    rcx,QWORD PTR [rbp-0x19]
   10001119f:	mov    rax,QWORD PTR [rcx]
   1000111a2:	mov    r8d,0x1
   1000111a8:	mov    rdx,QWORD PTR [rbp-0x21]
   1000111ac:	call   QWORD PTR [rax+0x10]
   1000111af:	nop
   1000111b0:	lea    rcx,[rbp-0x11]
   1000111b4:	call   0x1000120b0
   1000111b9:	nop
   1000111ba:	mov    rcx,QWORD PTR [rbp-0x31]
   1000111be:	mov    eax,DWORD PTR [rbp-0x39]
   1000111c1:	not    eax
   1000111c3:	and    DWORD PTR [rcx+0x220],eax
   1000111c9:	mov    eax,ebx
   1000111cb:	mov    rcx,QWORD PTR [rbp+0x4f]
   1000111cf:	xor    rcx,rsp
   1000111d2:	call   0x100002610
   1000111d7:	mov    rbx,QWORD PTR [rsp+0xf0]
   1000111df:	add    rsp,0xe0
   1000111e6:	pop    rbp
   1000111e7:	ret    
   1000111e8:	rex.RB jb 0x10001125d
   1000111eb:	outs   dx,DWORD PTR ds:[rsi]
   1000111ec:	jb     0x10001123a
   1000111ee:	outs   dx,DWORD PTR ds:[rsi]
   1000111ef:	addr32 push rbx
   1000111f1:	imul   edi,DWORD PTR [rdx+0x65],0x624b6e49
   1000111f8:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000111fe:	nop
   1000111ff:	nop
   100011200:	push   rdi
   100011202:	sub    rsp,0x40
   100011206:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   10001120f:	mov    QWORD PTR [rsp+0x50],rbx
   100011214:	mov    QWORD PTR [rsp+0x58],rsi
   100011219:	mov    rdi,r8
   10001121c:	mov    rsi,rdx
   10001121f:	mov    QWORD PTR [rsp+0x68],0x0
   100011228:	mov    rdx,QWORD PTR [rip+0x276e1]        # 0x100038910
   10001122f:	add    rdx,0x85de
   100011236:	lea    rax,[rsp+0x68]
   10001123b:	mov    QWORD PTR [rsp+0x20],rax
   100011240:	mov    r9d,0x1
   100011246:	xor    r8d,r8d
   100011249:	mov    rcx,0xffffffff80000002
   100011250:	call   0x100019a90
   100011255:	mov    ebx,eax
   100011257:	test   eax,eax
   100011259:	je     0x10001125d
   10001125b:	jmp    0x100011280
   10001125d:	mov    QWORD PTR [rsp+0x28],rdi
   100011262:	mov    QWORD PTR [rsp+0x20],rsi
   100011267:	xor    r9d,r9d
   10001126a:	xor    r8d,r8d
   10001126d:	lea    rdx,[rip+0x34]        # 0x1000112a8
   100011274:	mov    rcx,QWORD PTR [rsp+0x68]
   100011279:	call   0x100019dc0
   10001127e:	mov    ebx,eax
   100011280:	mov    rcx,QWORD PTR [rsp+0x68]
   100011285:	test   rcx,rcx
   100011288:	je     0x10001128f
   10001128a:	call   0x10001ab50
   10001128f:	mov    eax,ebx
   100011291:	mov    rbx,QWORD PTR [rsp+0x50]
   100011296:	mov    rsi,QWORD PTR [rsp+0x58]
   10001129b:	add    rsp,0x40
   10001129f:	pop    rdi
   1000112a0:	ret    
   1000112a1:	nop
   1000112a2:	nop
   1000112a3:	nop
   1000112a4:	nop
   1000112a5:	nop
   1000112a6:	nop
   1000112a7:	nop
   1000112a8:	push   rbx
   1000112a9:	add    BYTE PTR [rcx+0x0],dl
   1000112ac:	rex.WR add BYTE PTR [rax+0x0],r10b
   1000112b0:	(bad)  
   1000112b1:	add    BYTE PTR [rax+rax*1+0x68],dh
   1000112b5:	add    BYTE PTR [rax],al
   1000112b7:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000112bd:	nop
   1000112be:	nop
   1000112bf:	nop
   1000112c0:	push   rdi
   1000112c2:	sub    rsp,0x40
   1000112c6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1000112cf:	mov    QWORD PTR [rsp+0x50],rbx
   1000112d4:	mov    QWORD PTR [rsp+0x58],rsi
   1000112d9:	mov    rdi,r8
   1000112dc:	mov    rsi,rdx
   1000112df:	mov    QWORD PTR [rsp+0x68],0x0
   1000112e8:	mov    rdx,QWORD PTR [rip+0x27621]        # 0x100038910
   1000112ef:	add    rdx,0x85de
   1000112f6:	lea    rax,[rsp+0x68]
   1000112fb:	mov    QWORD PTR [rsp+0x20],rax
   100011300:	mov    r9d,0x1
   100011306:	xor    r8d,r8d
   100011309:	mov    rcx,0xffffffff80000002
   100011310:	call   0x100019a90
   100011315:	mov    ebx,eax
   100011317:	test   eax,eax
   100011319:	je     0x10001131d
   10001131b:	jmp    0x100011340
   10001131d:	mov    QWORD PTR [rsp+0x28],rdi
   100011322:	mov    QWORD PTR [rsp+0x20],rsi
   100011327:	xor    r9d,r9d
   10001132a:	xor    r8d,r8d
   10001132d:	lea    rdx,[rip+0x34]        # 0x100011368
   100011334:	mov    rcx,QWORD PTR [rsp+0x68]
   100011339:	call   0x100019dc0
   10001133e:	mov    ebx,eax
   100011340:	mov    rcx,QWORD PTR [rsp+0x68]
   100011345:	test   rcx,rcx
   100011348:	je     0x10001134f
   10001134a:	call   0x10001ab50
   10001134f:	mov    eax,ebx
   100011351:	mov    rbx,QWORD PTR [rsp+0x50]
   100011356:	mov    rsi,QWORD PTR [rsp+0x58]
   10001135b:	add    rsp,0x40
   10001135f:	pop    rdi
   100011360:	ret    
   100011361:	nop
   100011362:	nop
   100011363:	nop
   100011364:	nop
   100011365:	nop
   100011366:	nop
   100011367:	nop
   100011368:	push   rbx
   100011369:	add    BYTE PTR [rcx+0x0],dl
   10001136c:	rex.WR add BYTE PTR [rax+rax*1+0x61],r8b
   100011371:	add    BYTE PTR [rax+rax*1+0x61],dh
   100011375:	add    BYTE PTR [rdx+0x0],dl
   100011378:	outs   dx,DWORD PTR ds:[rsi]
   100011379:	add    BYTE PTR [rdi+0x0],ch
   10001137c:	je     0x10001137e
   10001137e:	add    BYTE PTR [rax],al
   100011380:	nop
   100011381:	nop
   100011382:	nop
   100011383:	nop
   100011384:	nop
   100011385:	nop
   100011386:	nop
   100011387:	nop
   100011388:	nop
   100011389:	nop
   10001138a:	nop
   10001138b:	nop
   10001138c:	nop
   10001138d:	nop
   10001138e:	nop
   10001138f:	nop
   100011390:	mov    rax,rsp
   100011393:	push   rdi
   100011394:	sub    rsp,0x270
   10001139b:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   1000113a4:	mov    QWORD PTR [rax+0x8],rbx
   1000113a8:	mov    QWORD PTR [rax+0x20],rsi
   1000113ac:	mov    rax,QWORD PTR [rip+0x17e3d]        # 0x1000291f0
   1000113b3:	xor    rax,rsp
   1000113b6:	mov    QWORD PTR [rsp+0x260],rax
   1000113be:	mov    rdi,r8
   1000113c1:	mov    rsi,rdx
   1000113c4:	xor    ebx,ebx
   1000113c6:	mov    QWORD PTR [rsp+0x38],rbx
   1000113cb:	mov    rdx,QWORD PTR [rip+0x2753e]        # 0x100038910
   1000113d2:	add    rdx,0x85de
   1000113d9:	lea    rax,[rsp+0x38]
   1000113de:	mov    QWORD PTR [rsp+0x20],rax
   1000113e3:	lea    r9d,[rbx+0x1]
   1000113e7:	xor    r8d,r8d
   1000113ea:	mov    rcx,0xffffffff80000002
   1000113f1:	call   0x100019a90
   1000113f6:	mov    ecx,DWORD PTR [rdi]
   1000113f8:	mov    DWORD PTR [rsp+0x30],ecx
   1000113fc:	test   eax,eax
   1000113fe:	jne    0x100011446
   100011400:	lea    rax,[rsp+0x30]
   100011405:	mov    QWORD PTR [rsp+0x28],rax
   10001140a:	mov    QWORD PTR [rsp+0x20],rsi
   10001140f:	xor    r9d,r9d
   100011412:	xor    r8d,r8d
   100011415:	lea    rdx,[rip+0x114]        # 0x100011530
   10001141c:	mov    rcx,QWORD PTR [rsp+0x38]
   100011421:	call   0x100019dc0
   100011426:	test   eax,eax
   100011428:	jne    0x100011446
   10001142a:	mov    eax,DWORD PTR [rsp+0x30]
   10001142e:	mov    DWORD PTR [rdi],eax
   100011430:	mov    rcx,QWORD PTR [rsp+0x38]
   100011435:	test   rcx,rcx
   100011438:	je     0x10001143f
   10001143a:	call   0x10001ab50
   10001143f:	xor    eax,eax
   100011441:	jmp    0x100011509
   100011446:	mov    QWORD PTR [rsp+0x40],rbx
   10001144b:	mov    rbx,QWORD PTR [rip+0x274be]        # 0x100038910
   100011452:	add    rbx,0x921a
   100011459:	call   QWORD PTR [rip+0xffffffffffff07d9]        # 0x100001c38
   10001145f:	mov    r9,rax
   100011462:	lea    rax,[rip+0xf7]        # 0x100011560
   100011469:	mov    QWORD PTR [rsp+0x28],rax
   10001146e:	mov    QWORD PTR [rsp+0x20],rbx
   100011473:	lea    r8,[rip+0xffffffffffff211e]        # 0x100003598
   10001147a:	mov    edx,0x105
   10001147f:	lea    rcx,[rsp+0x50]
   100011484:	call   0x100005bb0
   100011489:	lea    r11,[rsp+0x40]
   10001148e:	mov    QWORD PTR [rsp+0x20],r11
   100011493:	mov    r9d,0x1
   100011499:	xor    r8d,r8d
   10001149c:	lea    rdx,[rsp+0x50]
   1000114a1:	mov    rcx,0xffffffff80000002
   1000114a8:	call   0x100019a90
   1000114ad:	mov    ebx,eax
   1000114af:	test   eax,eax
   1000114b1:	je     0x1000114c5
   1000114b3:	mov    rcx,QWORD PTR [rsp+0x40]
   1000114b8:	test   rcx,rcx
   1000114bb:	je     0x1000114c3
   1000114bd:	call   0x10001ab50
   1000114c2:	nop
   1000114c3:	jmp    0x1000114f8
   1000114c5:	mov    QWORD PTR [rsp+0x28],rdi
   1000114ca:	mov    QWORD PTR [rsp+0x20],rsi
   1000114cf:	xor    r9d,r9d
   1000114d2:	xor    r8d,r8d
   1000114d5:	lea    rdx,[rip+0x8c]        # 0x100011568
   1000114dc:	mov    rcx,QWORD PTR [rsp+0x40]
   1000114e1:	call   0x100019dc0
   1000114e6:	mov    ebx,eax
   1000114e8:	mov    rcx,QWORD PTR [rsp+0x40]
   1000114ed:	test   rcx,rcx
   1000114f0:	je     0x1000114f8
   1000114f2:	call   0x10001ab50
   1000114f7:	nop
   1000114f8:	mov    rcx,QWORD PTR [rsp+0x38]
   1000114fd:	test   rcx,rcx
   100011500:	je     0x100011507
   100011502:	call   0x10001ab50
   100011507:	mov    eax,ebx
   100011509:	mov    rcx,QWORD PTR [rsp+0x260]
   100011511:	xor    rcx,rsp
   100011514:	call   0x100002610
   100011519:	lea    r11,[rsp+0x270]
   100011521:	mov    rbx,QWORD PTR [r11+0x10]
   100011525:	mov    rsi,QWORD PTR [r11+0x28]
   100011529:	mov    rsp,r11
   10001152c:	pop    rdi
   10001152d:	ret    
   10001152e:	nop
   10001152f:	nop
   100011530:	push   rbx
   100011531:	add    BYTE PTR [rcx+0x0],dl
   100011534:	rex.WR add BYTE PTR [rbp+0x0],r8b
   100011538:	js     0x10001153a
   10001153a:	movsxd eax,DWORD PTR [rax]
   10001153c:	add    BYTE PTR gs:[rax+0x0],dh
   100011540:	je     0x100011542
   100011542:	imul   eax,DWORD PTR [rax],0x6e006f
   100011548:	add    BYTE PTR [rbp+0x0],r14b
   10001154c:	ins    DWORD PTR es:[rdi],dx
   10001154d:	add    BYTE PTR [rax+0x0],dh
   100011550:	push   rax
   100011551:	add    BYTE PTR [rcx+0x0],ah
   100011554:	je     0x100011556
   100011556:	push   0xffffffff90000000
   10001155b:	nop
   10001155c:	nop
   10001155d:	nop
   10001155e:	nop
   10001155f:	nop
   100011560:	rex.XB add BYTE PTR [r8+0x0],dl
   100011564:	add    BYTE PTR [r8],r8b
   100011567:	add    BYTE PTR [rbp+0x0],al
   10001156a:	jb     0x10001156c
   10001156c:	jb     0x10001156e
   10001156e:	outs   dx,DWORD PTR ds:[rsi]
   10001156f:	add    BYTE PTR [rdx+0x0],dh
   100011572:	add    BYTE PTR [rbp+0x0],r14b
   100011576:	ins    DWORD PTR es:[rdi],dx
   100011577:	add    BYTE PTR [rax+0x0],dh
   10001157a:	add    BYTE PTR [rcx+0x0],r13b
   10001157e:	jb     0x100011580
   100011580:	add    BYTE PTR [rax],al
   100011582:	nop
   100011583:	nop
   100011584:	nop
   100011585:	nop
   100011586:	nop
   100011587:	nop
   100011588:	nop
   100011589:	nop
   10001158a:	nop
   10001158b:	nop
   10001158c:	nop
   10001158d:	nop
   10001158e:	nop
   10001158f:	nop
   100011590:	push   rdi
   100011592:	sub    rsp,0x40
   100011596:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   10001159f:	mov    QWORD PTR [rsp+0x50],rbx
   1000115a4:	mov    rdi,rdx
   1000115a7:	mov    DWORD PTR [rsp+0x60],0x4
   1000115af:	mov    QWORD PTR [rsp+0x68],0x0
   1000115b8:	mov    rdx,QWORD PTR [rip+0x27351]        # 0x100038910
   1000115bf:	add    rdx,0x85de
   1000115c6:	lea    rax,[rsp+0x68]
   1000115cb:	mov    QWORD PTR [rsp+0x20],rax
   1000115d0:	mov    r9d,0x1
   1000115d6:	xor    r8d,r8d
   1000115d9:	mov    rcx,0xffffffff80000002
   1000115e0:	call   0x100019a90
   1000115e5:	mov    ebx,eax
   1000115e7:	test   eax,eax
   1000115e9:	jne    0x100011613
   1000115eb:	lea    rax,[rsp+0x60]
   1000115f0:	mov    QWORD PTR [rsp+0x28],rax
   1000115f5:	mov    QWORD PTR [rsp+0x20],rdi
   1000115fa:	xor    r9d,r9d
   1000115fd:	xor    r8d,r8d
   100011600:	lea    rdx,[rip+0x29]        # 0x100011630
   100011607:	mov    rcx,QWORD PTR [rsp+0x68]
   10001160c:	call   0x100019dc0
   100011611:	mov    ebx,eax
   100011613:	mov    rcx,QWORD PTR [rsp+0x68]
   100011618:	test   rcx,rcx
   10001161b:	je     0x100011622
   10001161d:	call   0x10001ab50
   100011622:	mov    eax,ebx
   100011624:	mov    rbx,QWORD PTR [rsp+0x50]
   100011629:	add    rsp,0x40
   10001162d:	pop    rdi
   10001162e:	ret    
   10001162f:	nop
   100011630:	rex.WRB add BYTE PTR [r9+0x0],r12b
   100011634:	js     0x100011636
   100011636:	rex.RX add BYTE PTR [rbp+0x0],r14b
   10001163a:	ins    BYTE PTR es:[rdi],dx
   10001163b:	add    BYTE PTR [rax+rax*1+0x44],ch
   10001163f:	add    BYTE PTR [rbp+0x0],dh
   100011642:	ins    DWORD PTR es:[rdi],dx
   100011643:	add    BYTE PTR [rax+0x0],dh
   100011646:	jae    0x100011648
   100011648:	add    BYTE PTR [rax],al
   10001164a:	nop
   10001164b:	nop
   10001164c:	nop
   10001164d:	nop
   10001164e:	nop
   10001164f:	nop
   100011650:	push   rdi
   100011652:	sub    rsp,0x40
   100011656:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   10001165f:	mov    QWORD PTR [rsp+0x50],rbx
   100011664:	mov    rdi,rdx
   100011667:	mov    DWORD PTR [rsp+0x60],0x4
   10001166f:	mov    QWORD PTR [rsp+0x68],0x0
   100011678:	mov    rdx,QWORD PTR [rip+0x27291]        # 0x100038910
   10001167f:	add    rdx,0x85de
   100011686:	lea    rax,[rsp+0x68]
   10001168b:	mov    QWORD PTR [rsp+0x20],rax
   100011690:	mov    r9d,0x1
   100011696:	xor    r8d,r8d
   100011699:	mov    rcx,0xffffffff80000002
   1000116a0:	call   0x100019a90
   1000116a5:	mov    ebx,eax
   1000116a7:	test   eax,eax
   1000116a9:	jne    0x1000116d3
   1000116ab:	lea    rax,[rsp+0x60]
   1000116b0:	mov    QWORD PTR [rsp+0x28],rax
   1000116b5:	mov    QWORD PTR [rsp+0x20],rdi
   1000116ba:	xor    r9d,r9d
   1000116bd:	xor    r8d,r8d
   1000116c0:	lea    rdx,[rip+0x29]        # 0x1000116f0
   1000116c7:	mov    rcx,QWORD PTR [rsp+0x68]
   1000116cc:	call   0x100019dc0
   1000116d1:	mov    ebx,eax
   1000116d3:	mov    rcx,QWORD PTR [rsp+0x68]
   1000116d8:	test   rcx,rcx
   1000116db:	je     0x1000116e2
   1000116dd:	call   0x10001ab50
   1000116e2:	mov    eax,ebx
   1000116e4:	mov    rbx,QWORD PTR [rsp+0x50]
   1000116e9:	add    rsp,0x40
   1000116ed:	pop    rdi
   1000116ee:	ret    
   1000116ef:	nop
   1000116f0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1000116f4:	js     0x1000116f6
   1000116f6:	add    BYTE PTR [rbp+0x0],r14b
   1000116fa:	ins    DWORD PTR es:[rdi],dx
   1000116fb:	add    BYTE PTR [rax+0x0],dh
   1000116fe:	jae    0x100011700
   100011700:	add    BYTE PTR [rax],al
   100011702:	nop
   100011703:	nop
   100011704:	nop
   100011705:	nop
   100011706:	nop
   100011707:	nop
   100011708:	nop
   100011709:	nop
   10001170a:	nop
   10001170b:	nop
   10001170c:	nop
   10001170d:	nop
   10001170e:	nop
   10001170f:	nop
   100011710:	push   rdi
   100011712:	sub    rsp,0x40
   100011716:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   10001171f:	mov    QWORD PTR [rsp+0x50],rbx
   100011724:	mov    QWORD PTR [rsp+0x58],rsi
   100011729:	mov    rdi,r8
   10001172c:	mov    rsi,rdx
   10001172f:	mov    QWORD PTR [rsp+0x68],0x0
   100011738:	mov    rdx,QWORD PTR [rip+0x271d1]        # 0x100038910
   10001173f:	add    rdx,0x83d4
   100011746:	lea    rax,[rsp+0x68]
   10001174b:	mov    QWORD PTR [rsp+0x20],rax
   100011750:	mov    r9d,0x1
   100011756:	xor    r8d,r8d
   100011759:	mov    rcx,0xffffffff80000002
   100011760:	call   0x100019a90
   100011765:	mov    ebx,eax
   100011767:	test   eax,eax
   100011769:	je     0x10001176d
   10001176b:	jmp    0x100011790
   10001176d:	mov    QWORD PTR [rsp+0x28],rdi
   100011772:	mov    QWORD PTR [rsp+0x20],rsi
   100011777:	xor    r9d,r9d
   10001177a:	xor    r8d,r8d
   10001177d:	lea    rdx,[rip+0x34]        # 0x1000117b8
   100011784:	mov    rcx,QWORD PTR [rsp+0x68]
   100011789:	call   0x100019dc0
   10001178e:	mov    ebx,eax
   100011790:	mov    rcx,QWORD PTR [rsp+0x68]
   100011795:	test   rcx,rcx
   100011798:	je     0x10001179f
   10001179a:	call   0x10001ab50
   10001179f:	mov    eax,ebx
   1000117a1:	mov    rbx,QWORD PTR [rsp+0x50]
   1000117a6:	mov    rsi,QWORD PTR [rsp+0x58]
   1000117ab:	add    rsp,0x40
   1000117af:	pop    rdi
   1000117b0:	ret    
   1000117b1:	nop
   1000117b2:	nop
   1000117b3:	nop
   1000117b4:	nop
   1000117b5:	nop
   1000117b6:	nop
   1000117b7:	nop
   1000117b8:	add    BYTE PTR [rbp+0x0],r12b
   1000117bc:	data16 add BYTE PTR [rcx+0x0],ah
   1000117c0:	jne    0x1000117c2
   1000117c2:	ins    BYTE PTR es:[rdi],dx
   1000117c3:	add    BYTE PTR [rax+rax*1+0x44],dh
   1000117c7:	add    BYTE PTR [rcx+0x0],ah
   1000117ca:	je     0x1000117cc
   1000117cc:	(bad)  
   1000117cd:	add    BYTE PTR [rax],al
   1000117cf:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000117d5:	nop
   1000117d6:	nop
   1000117d7:	nop
   1000117d8:	nop
   1000117d9:	nop
   1000117da:	nop
   1000117db:	nop
   1000117dc:	nop
   1000117dd:	nop
   1000117de:	nop
   1000117df:	nop
   1000117e0:	push   rdi
   1000117e2:	sub    rsp,0x40
   1000117e6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1000117ef:	mov    QWORD PTR [rsp+0x50],rbx
   1000117f4:	mov    QWORD PTR [rsp+0x58],rsi
   1000117f9:	mov    rdi,r8
   1000117fc:	mov    rsi,rdx
   1000117ff:	mov    QWORD PTR [rsp+0x68],0x0
   100011808:	mov    rdx,QWORD PTR [rip+0x27101]        # 0x100038910
   10001180f:	add    rdx,0x83d4
   100011816:	lea    rax,[rsp+0x68]
   10001181b:	mov    QWORD PTR [rsp+0x20],rax
   100011820:	mov    r9d,0x1
   100011826:	xor    r8d,r8d
   100011829:	mov    rcx,0xffffffff80000002
   100011830:	call   0x100019a90
   100011835:	mov    ebx,eax
   100011837:	test   eax,eax
   100011839:	je     0x10001183d
   10001183b:	jmp    0x100011860
   10001183d:	mov    QWORD PTR [rsp+0x28],rdi
   100011842:	mov    QWORD PTR [rsp+0x20],rsi
   100011847:	xor    r9d,r9d
   10001184a:	xor    r8d,r8d
   10001184d:	lea    rdx,[rip+0x34]        # 0x100011888
   100011854:	mov    rcx,QWORD PTR [rsp+0x68]
   100011859:	call   0x100019dc0
   10001185e:	mov    ebx,eax
   100011860:	mov    rcx,QWORD PTR [rsp+0x68]
   100011865:	test   rcx,rcx
   100011868:	je     0x10001186f
   10001186a:	call   0x10001ab50
   10001186f:	mov    eax,ebx
   100011871:	mov    rbx,QWORD PTR [rsp+0x50]
   100011876:	mov    rsi,QWORD PTR [rsp+0x58]
   10001187b:	add    rsp,0x40
   10001187f:	pop    rdi
   100011880:	ret    
   100011881:	nop
   100011882:	nop
   100011883:	nop
   100011884:	nop
   100011885:	nop
   100011886:	nop
   100011887:	nop
   100011888:	add    BYTE PTR [rbp+0x0],r12b
   10001188c:	data16 add BYTE PTR [rcx+0x0],ah
   100011890:	jne    0x100011892
   100011892:	ins    BYTE PTR es:[rdi],dx
   100011893:	add    BYTE PTR [rax+rax*1+0x4c],dh
   100011897:	add    BYTE PTR [rdi+0x0],ch
   10001189a:	add    BYTE PTR [eax],al
   10001189d:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000118a3:	nop
   1000118a4:	nop
   1000118a5:	nop
   1000118a6:	nop
   1000118a7:	nop
   1000118a8:	nop
   1000118a9:	nop
   1000118aa:	nop
   1000118ab:	nop
   1000118ac:	nop
   1000118ad:	nop
   1000118ae:	nop
   1000118af:	nop
   1000118b0:	push   rbx
   1000118b2:	sub    rsp,0x40
   1000118b6:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1000118bf:	mov    QWORD PTR [rsp+0x30],0x0
   1000118c8:	mov    rdx,QWORD PTR [rip+0x27041]        # 0x100038910
   1000118cf:	add    rdx,0x83d4
   1000118d6:	lea    rax,[rsp+0x30]
   1000118db:	mov    QWORD PTR [rsp+0x20],rax
   1000118e0:	mov    r9d,0x1
   1000118e6:	xor    r8d,r8d
   1000118e9:	mov    rcx,0xffffffff80000002
   1000118f0:	call   0x100019a90
   1000118f5:	test   eax,eax
   1000118f7:	je     0x1000118fb
   1000118f9:	jmp    0x100011952
   1000118fb:	mov    DWORD PTR [rsp+0x58],0x4
   100011903:	lea    rax,[rsp+0x58]
   100011908:	mov    QWORD PTR [rsp+0x28],rax
   10001190d:	lea    rax,[rsp+0x68]
   100011912:	mov    QWORD PTR [rsp+0x20],rax
   100011917:	lea    r9,[rsp+0x60]
   10001191c:	xor    r8d,r8d
   10001191f:	lea    rdx,[rip+0x4a]        # 0x100011970
   100011926:	mov    rcx,QWORD PTR [rsp+0x30]
   10001192b:	call   0x100019dc0
   100011930:	test   eax,eax
   100011932:	jne    0x100011952
   100011934:	cmp    DWORD PTR [rsp+0x60],0x4
   100011939:	jne    0x100011952
   10001193b:	mov    ebx,DWORD PTR [rsp+0x68]
   10001193f:	mov    rcx,QWORD PTR [rsp+0x30]
   100011944:	test   rcx,rcx
   100011947:	je     0x10001194e
   100011949:	call   0x10001ab50
   10001194e:	mov    eax,ebx
   100011950:	jmp    0x100011963
   100011952:	mov    rcx,QWORD PTR [rsp+0x30]
   100011957:	test   rcx,rcx
   10001195a:	je     0x100011961
   10001195c:	call   0x10001ab50
   100011961:	xor    eax,eax
   100011963:	add    rsp,0x40
   100011967:	pop    rbx
   100011968:	ret    
   100011969:	nop
   10001196a:	nop
   10001196b:	nop
   10001196c:	nop
   10001196d:	nop
   10001196e:	nop
   10001196f:	nop
   100011970:	data16 add BYTE PTR [rcx+0x0],ch
   100011974:	jb     0x100011976
   100011976:	jae    0x100011978
   100011978:	je     0x10001197a
   10001197a:	jae    0x10001197c
   10001197c:	je     0x10001197e
   10001197e:	(bad)  
   10001197f:	add    BYTE PTR [rdx+0x0],dh
   100011982:	je     0x100011984
   100011984:	add    BYTE PTR [rax],al
   100011986:	nop
   100011987:	nop
   100011988:	nop
   100011989:	nop
   10001198a:	nop
   10001198b:	nop
   10001198c:	nop
   10001198d:	nop
   10001198e:	nop
   10001198f:	nop
   100011990:	sub    rsp,0x48
   100011994:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   10001199d:	mov    QWORD PTR [rsp+0x60],0x0
   1000119a6:	mov    rdx,QWORD PTR [rip+0x26f63]        # 0x100038910
   1000119ad:	add    rdx,0x83d4
   1000119b4:	lea    rax,[rsp+0x60]
   1000119b9:	mov    QWORD PTR [rsp+0x20],rax
   1000119be:	mov    r9d,0x3
   1000119c4:	xor    r8d,r8d
   1000119c7:	mov    rcx,0xffffffff80000002
   1000119ce:	call   0x100019a90
   1000119d3:	test   eax,eax
   1000119d5:	je     0x1000119d9
   1000119d7:	jmp    0x100011a49
   1000119d9:	mov    DWORD PTR [rsp+0x58],0x0
   1000119e1:	mov    DWORD PTR [rsp+0x28],0x4
   1000119e9:	lea    rax,[rsp+0x58]
   1000119ee:	mov    QWORD PTR [rsp+0x20],rax
   1000119f3:	mov    r9d,0x4
   1000119f9:	xor    r8d,r8d
   1000119fc:	lea    rdx,[rip+0x5d]        # 0x100011a60
   100011a03:	mov    rcx,QWORD PTR [rsp+0x60]
   100011a08:	call   0x10001b020
   100011a0d:	test   eax,eax
   100011a0f:	jne    0x100011a27
   100011a11:	mov    rcx,QWORD PTR [rsp+0x60]
   100011a16:	test   rcx,rcx
   100011a19:	je     0x100011a20
   100011a1b:	call   0x10001ab50
   100011a20:	mov    eax,0x1
   100011a25:	jmp    0x100011a5a
   100011a27:	mov    rdx,QWORD PTR [rip+0x26ee2]        # 0x100038910
   100011a2e:	add    rdx,0x83d4
   100011a35:	lea    r8,[rip+0x24]        # 0x100011a60
   100011a3c:	lea    rcx,[rip+0x2d]        # 0x100011a70
   100011a43:	call   0x100018500
   100011a48:	nop
   100011a49:	mov    rcx,QWORD PTR [rsp+0x60]
   100011a4e:	test   rcx,rcx
   100011a51:	je     0x100011a58
   100011a53:	call   0x10001ab50
   100011a58:	xor    eax,eax
   100011a5a:	add    rsp,0x48
   100011a5e:	ret    
   100011a5f:	nop
   100011a60:	imul   si,WORD PTR [rdx+0x73],0x7374
   100011a66:	je     0x100011ac9
   100011a68:	jb     0x100011ade
   100011a6a:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100011a70:	push   rdx
   100011a71:	add    BYTE PTR [rbp+0x0],ah
   100011a74:	add    BYTE PTR [ebx+0x0],dl
   100011a78:	add    BYTE PTR gs:[rax+rax*1+0x56],dh
   100011a7d:	add    BYTE PTR [rcx+0x0],ah
   100011a80:	ins    BYTE PTR es:[rdi],dx
   100011a81:	add    BYTE PTR [rbp+0x0],dh
   100011a84:	add    BYTE PTR gs:[rbp+0x0],al
   100011a88:	js     0x100011a8a
   100011a8a:	and    BYTE PTR [rax],al
   100011a8c:	outs   dx,DWORD PTR ds:[rsi]
   100011a8d:	add    BYTE PTR [rsi+0x0],ah
   100011a90:	and    BYTE PTR [rax],al
   100011a92:	and    al,BYTE PTR [rax]
   100011a94:	and    eax,0x73006c00
   100011a99:	add    BYTE PTR [rax+rax*1+0x5c],bl
   100011a9d:	add    BYTE PTR [rip+0x73006800],ah        # 0x1730182a3
   100011aa3:	add    BYTE PTR [rdx],ah
   100011aa5:	add    BYTE PTR [rax],ah
   100011aa7:	add    BYTE PTR [rsi+0x0],ah
   100011aaa:	(bad)  
   100011aab:	add    BYTE PTR [rcx+0x0],ch
   100011aae:	ins    BYTE PTR es:[rdi],dx
   100011aaf:	add    BYTE PTR [rbp+0x0],ah
   100011ab2:	add    BYTE PTR fs:[rsi],ch
   100011ab5:	add    BYTE PTR [rdx],cl
   100011ab7:	add    BYTE PTR [rax],al
   100011ab9:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100011abf:	nop
   100011ac0:	push   rdi
   100011ac2:	sub    rsp,0x290
   100011ac9:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   100011ad2:	mov    QWORD PTR [rsp+0x2a0],rbx
   100011ada:	mov    rax,QWORD PTR [rip+0x1770f]        # 0x1000291f0
   100011ae1:	xor    rax,rsp
   100011ae4:	mov    QWORD PTR [rsp+0x280],rax
   100011aec:	call   QWORD PTR [rip+0xfffffffffffef5ce]        # 0x1000010c0
   100011af2:	mov    edi,eax
   100011af4:	mov    ecx,DWORD PTR [rip+0x183be]        # 0x100029eb8
   100011afa:	cmp    ecx,0xffffffff
   100011afd:	je     0x100011b18
   100011aff:	sub    eax,DWORD PTR [rip+0x26fdb]        # 0x100038ae0
   100011b05:	cdq    
   100011b06:	xor    eax,edx
   100011b08:	sub    eax,edx
   100011b0a:	cmp    eax,0x7530
   100011b0f:	jge    0x100011b18
   100011b11:	mov    eax,ecx
   100011b13:	jmp    0x100011ca8
   100011b18:	mov    rbx,QWORD PTR [rip+0x26df1]        # 0x100038910
   100011b1f:	add    rbx,0x83d4
   100011b26:	call   QWORD PTR [rip+0xffffffffffff010c]        # 0x100001c38
   100011b2c:	mov    r9,rax
   100011b2f:	mov    QWORD PTR [rsp+0x20],rbx
   100011b34:	lea    r8,[rip+0xffffffffffff18cd]        # 0x100003408
   100011b3b:	mov    edx,0x104
   100011b40:	lea    rcx,[rsp+0x70]
   100011b45:	call   0x100005bb0
   100011b4a:	mov    ebx,0x1
   100011b4f:	test   eax,eax
   100011b51:	jns    0x100011b87
   100011b53:	mov    DWORD PTR [rsp+0x28],0x0
   100011b5b:	mov    QWORD PTR [rsp+0x20],0x0
   100011b64:	lea    r9d,[rbx+0x3e]
   100011b68:	lea    r8,[rip+0x161]        # 0x100011cd0
   100011b6f:	xor    edx,edx
   100011b71:	xor    ecx,ecx
   100011b73:	call   QWORD PTR [rip+0xfffffffffffefdcf]        # 0x100001948
   100011b79:	call   QWORD PTR [rip+0xffffffffffff02a1]        # 0x100001e20
   100011b7f:	mov    ecx,ebx
   100011b81:	call   QWORD PTR [rip+0xfffffffffffeffb1]        # 0x100001b38
   100011b87:	mov    QWORD PTR [rsp+0x30],0x0
   100011b90:	lea    rax,[rsp+0x30]
   100011b95:	mov    QWORD PTR [rsp+0x20],rax
   100011b9a:	mov    r9d,0x20019
   100011ba0:	xor    r8d,r8d
   100011ba3:	lea    rdx,[rsp+0x70]
   100011ba8:	mov    rcx,0xffffffff80000002
   100011baf:	call   0x100019a90
   100011bb4:	test   eax,eax
   100011bb6:	je     0x100011bda
   100011bb8:	mov    edi,DWORD PTR [rip+0x182fa]        # 0x100029eb8
   100011bbe:	cmp    edi,0xffffffff
   100011bc1:	cmove  edi,ebx
   100011bc4:	mov    rcx,QWORD PTR [rsp+0x30]
   100011bc9:	test   rcx,rcx
   100011bcc:	je     0x100011bd3
   100011bce:	call   0x10001ab50
   100011bd3:	mov    eax,edi
   100011bd5:	jmp    0x100011ca8
   100011bda:	mov    DWORD PTR [rsp+0x3c],0x20
   100011be2:	lea    rax,[rsp+0x3c]
   100011be7:	mov    QWORD PTR [rsp+0x28],rax
   100011bec:	lea    rax,[rsp+0x50]
   100011bf1:	mov    QWORD PTR [rsp+0x20],rax
   100011bf6:	lea    r9,[rsp+0x38]
   100011bfb:	xor    r8d,r8d
   100011bfe:	lea    rdx,[rip+0x10b]        # 0x100011d10
   100011c05:	mov    rcx,QWORD PTR [rsp+0x30]
   100011c0a:	call   0x100019dc0
   100011c0f:	test   eax,eax
   100011c11:	je     0x100011c32
   100011c13:	mov    edi,DWORD PTR [rip+0x1829f]        # 0x100029eb8
   100011c19:	cmp    edi,0xffffffff
   100011c1c:	cmove  edi,ebx
   100011c1f:	mov    rcx,QWORD PTR [rsp+0x30]
   100011c24:	test   rcx,rcx
   100011c27:	je     0x100011bd3
   100011c29:	call   0x10001ab50
   100011c2e:	mov    eax,edi
   100011c30:	jmp    0x100011ca8
   100011c32:	mov    eax,DWORD PTR [rsp+0x38]
   100011c36:	dec    eax
   100011c38:	je     0x100011c49
   100011c3a:	cmp    eax,0x3
   100011c3d:	je     0x100011c43
   100011c3f:	mov    eax,ebx
   100011c41:	jmp    0x100011c6d
   100011c43:	mov    eax,DWORD PTR [rsp+0x50]
   100011c47:	jmp    0x100011c6d
   100011c49:	mov    BYTE PTR [rsp+0x6f],0x0
   100011c4e:	call   QWORD PTR [rip+0xfffffffffffeffe4]        # 0x100001c38
   100011c54:	mov    r9,rax
   100011c57:	mov    r8d,0xa
   100011c5d:	lea    rdx,[rsp+0x48]
   100011c62:	lea    rcx,[rsp+0x50]
   100011c67:	call   QWORD PTR [rip+0xfffffffffffef73b]        # 0x1000013a8
   100011c6d:	test   eax,eax
   100011c6f:	je     0x100011c89
   100011c71:	dec    eax
   100011c73:	je     0x100011c8b
   100011c75:	dec    eax
   100011c77:	je     0x100011c82
   100011c79:	dec    eax
   100011c7b:	jne    0x100011c8b
   100011c7d:	lea    ebx,[rax+0x3]
   100011c80:	jmp    0x100011c8b
   100011c82:	mov    ebx,0x2
   100011c87:	jmp    0x100011c8b
   100011c89:	xor    ebx,ebx
   100011c8b:	mov    DWORD PTR [rip+0x18227],ebx        # 0x100029eb8
   100011c91:	mov    DWORD PTR [rip+0x26e49],edi        # 0x100038ae0
   100011c97:	mov    rcx,QWORD PTR [rsp+0x30]
   100011c9c:	test   rcx,rcx
   100011c9f:	je     0x100011ca6
   100011ca1:	call   0x10001ab50
   100011ca6:	mov    eax,ebx
   100011ca8:	mov    rcx,QWORD PTR [rsp+0x280]
   100011cb0:	xor    rcx,rsp
   100011cb3:	call   0x100002610
   100011cb8:	mov    rbx,QWORD PTR [rsp+0x2a0]
   100011cc0:	add    rsp,0x290
   100011cc7:	pop    rdi
   100011cc8:	ret    
   100011cc9:	nop
   100011cca:	nop
   100011ccb:	nop
   100011ccc:	nop
   100011ccd:	nop
   100011cce:	nop
   100011ccf:	nop
   100011cd0:	add    BYTE PTR [r11+0x0],sil
   100011cd4:	jae    0x100011cd6
   100011cd6:	add    BYTE PTR gs:[rdx+0x0],dh
   100011cda:	je     0x100011cdc
   100011cdc:	and    BYTE PTR [rax],al
   100011cde:	push   rbx
   100011cdf:	add    BYTE PTR [rax+rax*1+0x72],dh
   100011ce3:	add    BYTE PTR [rcx+0x0],ch
   100011ce6:	outs   dx,BYTE PTR ds:[rsi]
   100011ce7:	add    BYTE PTR [rdi+0x0],ah
   100011cea:	and    BYTE PTR [rax],al
   100011cec:	push   rdx
   100011ced:	add    BYTE PTR [rdi+0x0],ch
   100011cf0:	jne    0x100011cf2
   100011cf2:	je     0x100011cf4
   100011cf4:	imul   eax,DWORD PTR [rax],0x65006e
   100011cfa:	and    BYTE PTR [rax],al
   100011cfc:	rex.RX add BYTE PTR [rcx+0x0],r12b
   100011d00:	imul   eax,DWORD PTR [rax],0x75006c
   100011d06:	jb     0x100011d08
   100011d08:	add    BYTE PTR gs:[rax],al
   100011d0b:	add    BYTE PTR [rax+0x41909090],dl
   100011d11:	add    BYTE PTR [rbx+0x0],dh
   100011d14:	jae    0x100011d16
   100011d16:	add    BYTE PTR gs:[rdx+0x0],dh
   100011d1a:	je     0x100011d1c
   100011d1c:	rex.WR add BYTE PTR [rbp+0x0],r12b
   100011d20:	jbe    0x100011d22
   100011d22:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   100011d27:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100011d2d:	nop
   100011d2e:	nop
   100011d2f:	nop
   100011d30:	mov    rcx,rdx
   100011d33:	rex.W jmp QWORD PTR [rip+0xfffffffffffef81e]        # 0x100001558
   100011d3a:	nop
   100011d3b:	nop
   100011d3c:	nop
   100011d3d:	nop
   100011d3e:	nop
   100011d3f:	nop
   100011d40:	mov    rcx,rdx
   100011d43:	rex.W jmp QWORD PTR [rip+0xfffffffffffef806]        # 0x100001550
   100011d4a:	nop
   100011d4b:	nop
   100011d4c:	nop
   100011d4d:	nop
   100011d4e:	nop
   100011d4f:	nop
   100011d50:	mov    rax,QWORD PTR [rip+0x26d81]        # 0x100038ad8
   100011d57:	ret    
   100011d58:	nop
   100011d59:	nop
   100011d5a:	nop
   100011d5b:	nop
   100011d5c:	nop
   100011d5d:	nop
   100011d5e:	nop
   100011d5f:	nop
   100011d60:	lea    rax,[rip+0x1a529]        # 0x10002c290
   100011d67:	ret    
   100011d68:	nop
   100011d69:	nop
   100011d6a:	nop
   100011d6b:	nop
   100011d6c:	nop
   100011d6d:	nop
   100011d6e:	nop
   100011d6f:	nop
   100011d70:	mov    rax,QWORD PTR [rip+0x26b99]        # 0x100038910
   100011d77:	add    rax,0x81ca
   100011d7d:	ret    
   100011d7e:	nop
   100011d7f:	nop
   100011d80:	nop
   100011d81:	nop
   100011d82:	nop
   100011d83:	nop
   100011d84:	nop
   100011d85:	nop
   100011d86:	nop
   100011d87:	nop
   100011d88:	nop
   100011d89:	nop
   100011d8a:	nop
   100011d8b:	nop
   100011d8c:	nop
   100011d8d:	nop
   100011d8e:	nop
   100011d8f:	nop
   100011d90:	mov    rax,QWORD PTR [rip+0x26b79]        # 0x100038910
   100011d97:	add    rax,0x7fc0
   100011d9d:	ret    
   100011d9e:	nop
   100011d9f:	nop
   100011da0:	nop
   100011da1:	nop
   100011da2:	nop
   100011da3:	nop
   100011da4:	nop
   100011da5:	nop
   100011da6:	nop
   100011da7:	nop
   100011da8:	nop
   100011da9:	nop
   100011daa:	nop
   100011dab:	nop
   100011dac:	nop
   100011dad:	nop
   100011dae:	nop
   100011daf:	nop
   100011db0:	mov    rax,QWORD PTR [rip+0x26b59]        # 0x100038910
   100011db7:	add    rax,0x87e8
   100011dbd:	ret    
   100011dbe:	nop
   100011dbf:	nop
   100011dc0:	nop
   100011dc1:	nop
   100011dc2:	nop
   100011dc3:	nop
   100011dc4:	nop
   100011dc5:	nop
   100011dc6:	nop
   100011dc7:	nop
   100011dc8:	nop
   100011dc9:	nop
   100011dca:	nop
   100011dcb:	nop
   100011dcc:	nop
   100011dcd:	nop
   100011dce:	nop
   100011dcf:	nop
   100011dd0:	mov    rax,QWORD PTR [rip+0x26b39]        # 0x100038910
   100011dd7:	add    rax,0x89f2
   100011ddd:	ret    
   100011dde:	nop
   100011ddf:	nop
   100011de0:	nop
   100011de1:	nop
   100011de2:	nop
   100011de3:	nop
   100011de4:	nop
   100011de5:	nop
   100011de6:	nop
   100011de7:	nop
   100011de8:	nop
   100011de9:	nop
   100011dea:	nop
   100011deb:	nop
   100011dec:	nop
   100011ded:	nop
   100011dee:	nop
   100011def:	nop
   100011df0:	mov    rax,QWORD PTR [rip+0x1a489]        # 0x10002c280
   100011df7:	ret    
   100011df8:	nop
   100011df9:	nop
   100011dfa:	nop
   100011dfb:	nop
   100011dfc:	nop
   100011dfd:	nop
   100011dfe:	nop
   100011dff:	nop
   100011e00:	mov    QWORD PTR [rsp+0x8],rbx
   100011e05:	mov    QWORD PTR [rsp+0x10],rsi
   100011e0a:	push   rdi
   100011e0b:	sub    rsp,0x20
   100011e0f:	mov    rax,QWORD PTR [rdx]
   100011e12:	mov    rsi,rdx
   100011e15:	mov    rdi,rcx
   100011e18:	lea    rdx,[rip+0x1a461]        # 0x10002c280
   100011e1f:	mov    r8d,0x8
   100011e25:	mov    rcx,rsi
   100011e28:	call   QWORD PTR [rax+0x50]
   100011e2b:	mov    rax,QWORD PTR [rdi]
   100011e2e:	mov    rbx,QWORD PTR [rsi]
   100011e31:	mov    rcx,rdi
   100011e34:	call   QWORD PTR [rax+0x100]
   100011e3a:	mov    r8d,0x80
   100011e40:	mov    rcx,rsi
   100011e43:	mov    rdx,rax
   100011e46:	mov    rax,QWORD PTR [rbx+0x50]
   100011e4a:	mov    rbx,QWORD PTR [rsp+0x30]
   100011e4f:	mov    rsi,QWORD PTR [rsp+0x38]
   100011e54:	add    rsp,0x20
   100011e58:	pop    rdi
   100011e59:	rex.W jmp rax
   100011e5c:	nop
   100011e5d:	nop
   100011e5e:	nop
   100011e5f:	nop
   100011e60:	nop
   100011e61:	nop
   100011e62:	nop
   100011e63:	nop
   100011e64:	nop
   100011e65:	nop
   100011e66:	nop
   100011e67:	nop
   100011e68:	nop
   100011e69:	nop
   100011e6a:	nop
   100011e6b:	nop
   100011e6c:	nop
   100011e6d:	nop
   100011e6e:	nop
   100011e6f:	nop
   100011e70:	mov    rax,QWORD PTR [rip+0x1a2f9]        # 0x10002c170
   100011e77:	ret    
   100011e78:	nop
   100011e79:	nop
   100011e7a:	nop
   100011e7b:	nop
   100011e7c:	nop
   100011e7d:	nop
   100011e7e:	nop
   100011e7f:	nop
   100011e80:	lea    rax,[rip+0x1a689]        # 0x10002c510
   100011e87:	ret    
   100011e88:	nop
   100011e89:	nop
   100011e8a:	nop
   100011e8b:	nop
   100011e8c:	nop
   100011e8d:	nop
   100011e8e:	nop
   100011e8f:	nop
   100011e90:	mov    QWORD PTR [rsp+0x8],rcx
   100011e95:	push   rdi
   100011e96:	sub    rsp,0x30
   100011e9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100011ea3:	mov    QWORD PTR [rsp+0x50],rbx
   100011ea8:	mov    rdi,rcx
   100011eab:	lea    rbx,[rcx+0x10]
   100011eaf:	mov    QWORD PTR [rsp+0x48],rbx
   100011eb4:	cmp    DWORD PTR [rbx],0x0
   100011eb7:	je     0x100011ee4
   100011eb9:	cmp    DWORD PTR [rbx+0x4],0x0
   100011ebd:	je     0x100011ecf
   100011ebf:	mov    rax,QWORD PTR [rbx+0x8]
   100011ec3:	or     DWORD PTR [rax+0x2d8],0x800
   100011ecd:	jmp    0x100011ee4
   100011ecf:	mov    rcx,QWORD PTR [rbx+0x10]
   100011ed3:	mov    rax,QWORD PTR [rcx]
   100011ed6:	mov    r8d,0x1
   100011edc:	mov    rdx,QWORD PTR [rbx+0x8]
   100011ee0:	call   QWORD PTR [rax+0x10]
   100011ee3:	nop
   100011ee4:	lea    rcx,[rbx+0x18]
   100011ee8:	call   0x1000120b0
   100011eed:	nop
   100011eee:	mov    rcx,QWORD PTR [rdi+0x8]
   100011ef2:	mov    eax,DWORD PTR [rdi]
   100011ef4:	not    eax
   100011ef6:	and    DWORD PTR [rcx+0x220],eax
   100011efc:	mov    rbx,QWORD PTR [rsp+0x50]
   100011f01:	add    rsp,0x30
   100011f05:	pop    rdi
   100011f06:	ret    
   100011f07:	nop
   100011f08:	nop
   100011f09:	nop
   100011f0a:	nop
   100011f0b:	nop
   100011f0c:	nop
   100011f0d:	nop
   100011f0e:	nop
   100011f0f:	nop
   100011f10:	mov    QWORD PTR [rsp+0x8],rbx
   100011f15:	push   rdi
   100011f16:	sub    rsp,0x20
   100011f1a:	xor    edi,edi
   100011f1c:	mov    DWORD PTR [rcx],0x20000221
   100011f22:	mov    rbx,rcx
   100011f25:	mov    QWORD PTR [rcx+0x8],rdi
   100011f29:	mov    QWORD PTR [rcx+0x18],rdi
   100011f2d:	mov    QWORD PTR [rcx+0x10],rdi
   100011f31:	mov    QWORD PTR [rcx+0x20],rdi
   100011f35:	mov    DWORD PTR [rcx+0x30],edi
   100011f38:	mov    rcx,QWORD PTR [rip+0x17181]        # 0x1000290c0
   100011f3f:	mov    rax,QWORD PTR gs:0x30
   100011f48:	add    rax,rcx
   100011f4b:	cmp    rcx,0x1480
   100011f52:	jge    0x100011f5a
   100011f54:	call   QWORD PTR [rip+0xfffffffffffef1c6]        # 0x100001120
   100011f5a:	test   rax,rax
   100011f5d:	je     0x100011f6b
   100011f5f:	mov    rcx,QWORD PTR [rax+0xd8]
   100011f66:	test   rcx,rcx
   100011f69:	jne    0x100011f9d
   100011f6b:	call   QWORD PTR [rip+0xfffffffffffefbdf]        # 0x100001b50
   100011f71:	mov    r11,QWORD PTR [rip+0x17148]        # 0x1000290c0
   100011f78:	mov    rax,QWORD PTR gs:0x30
   100011f81:	add    rax,r11
   100011f84:	cmp    r11,0x1480
   100011f8b:	jge    0x100011f96
   100011f8d:	mov    ecx,r11d
   100011f90:	call   QWORD PTR [rip+0xfffffffffffef18a]        # 0x100001120
   100011f96:	mov    rcx,QWORD PTR [rax+0xd8]
   100011f9d:	mov    rcx,QWORD PTR [rcx+0x210]
   100011fa4:	mov    rdx,rbx
   100011fa7:	call   QWORD PTR [rip+0xfffffffffffefe6b]        # 0x100001e18
   100011fad:	test   eax,eax
   100011faf:	mov    rax,rbx
   100011fb2:	sete   dil
   100011fb6:	mov    DWORD PTR [rbx+0x30],edi
   100011fb9:	mov    rbx,QWORD PTR [rsp+0x30]
   100011fbe:	add    rsp,0x20
   100011fc2:	pop    rdi
   100011fc3:	ret    
   100011fc4:	nop
   100011fc5:	nop
   100011fc6:	nop
   100011fc7:	nop
   100011fc8:	nop
   100011fc9:	nop
   100011fca:	nop
   100011fcb:	nop
   100011fcc:	nop
   100011fcd:	nop
   100011fce:	nop
   100011fcf:	nop
   100011fd0:	mov    QWORD PTR [rsp+0x8],rcx
   100011fd5:	push   rbx
   100011fd6:	sub    rsp,0x30
   100011fda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100011fe3:	mov    rbx,rcx
   100011fe6:	add    rcx,0x18
   100011fea:	call   0x100011f10
   100011fef:	nop
   100011ff0:	mov    rcx,QWORD PTR [rip+0x170c9]        # 0x1000290c0
   100011ff7:	mov    rax,QWORD PTR gs:0x30
   100012000:	add    rax,rcx
   100012003:	cmp    rcx,0x1480
   10001200a:	jge    0x100012012
   10001200c:	call   QWORD PTR [rip+0xfffffffffffef10e]        # 0x100001120
   100012012:	test   rax,rax
   100012015:	je     0x100012023
   100012017:	mov    rdx,QWORD PTR [rax+0xd8]
   10001201e:	test   rdx,rdx
   100012021:	jne    0x100012055
   100012023:	call   QWORD PTR [rip+0xfffffffffffefb27]        # 0x100001b50
   100012029:	mov    r11,QWORD PTR [rip+0x17090]        # 0x1000290c0
   100012030:	mov    rax,QWORD PTR gs:0x30
   100012039:	add    rax,r11
   10001203c:	cmp    r11,0x1480
   100012043:	jge    0x10001204e
   100012045:	mov    ecx,r11d
   100012048:	call   QWORD PTR [rip+0xfffffffffffef0d2]        # 0x100001120
   10001204e:	mov    rdx,QWORD PTR [rax+0xd8]
   100012055:	mov    QWORD PTR [rbx+0x8],rdx
   100012059:	mov    eax,DWORD PTR [rdx+0x2d8]
   10001205f:	shr    eax,0xb
   100012062:	and    eax,0x1
   100012065:	mov    DWORD PTR [rbx+0x4],eax
   100012068:	jne    0x100012077
   10001206a:	test   BYTE PTR [rdx+0x2d8],0x4
   100012071:	je     0x100012077
   100012073:	xor    eax,eax
   100012075:	jmp    0x10001207c
   100012077:	mov    eax,0x1
   10001207c:	mov    DWORD PTR [rbx],eax
   10001207e:	test   eax,eax
   100012080:	je     0x100012096
   100012082:	mov    rcx,QWORD PTR [rdx+0x218]
   100012089:	mov    QWORD PTR [rbx+0x10],rcx
   10001208d:	mov    rax,QWORD PTR [rcx]
   100012090:	call   QWORD PTR [rax+0x8]
   100012093:	nop
   100012094:	jmp    0x100012096
   100012096:	mov    rax,rbx
   100012099:	add    rsp,0x30
   10001209d:	pop    rbx
   10001209e:	ret    
   10001209f:	nop
   1000120a0:	nop
   1000120a1:	nop
   1000120a2:	nop
   1000120a3:	nop
   1000120a4:	nop
   1000120a5:	nop
   1000120a6:	nop
   1000120a7:	nop
   1000120a8:	nop
   1000120a9:	nop
   1000120aa:	nop
   1000120ab:	nop
   1000120ac:	nop
   1000120ad:	nop
   1000120ae:	nop
   1000120af:	nop
   1000120b0:	sub    rsp,0x28
   1000120b4:	cmp    DWORD PTR [rcx+0x30],0x0
   1000120b8:	je     0x10001212c
   1000120ba:	mov    rcx,QWORD PTR [rip+0x16fff]        # 0x1000290c0
   1000120c1:	mov    rax,QWORD PTR gs:0x30
   1000120ca:	add    rax,rcx
   1000120cd:	cmp    rcx,0x1480
   1000120d4:	jge    0x1000120dc
   1000120d6:	call   QWORD PTR [rip+0xfffffffffffef044]        # 0x100001120
   1000120dc:	test   rax,rax
   1000120df:	je     0x1000120ed
   1000120e1:	mov    rcx,QWORD PTR [rax+0xd8]
   1000120e8:	test   rcx,rcx
   1000120eb:	jne    0x10001211f
   1000120ed:	call   QWORD PTR [rip+0xfffffffffffefa5d]        # 0x100001b50
   1000120f3:	mov    r11,QWORD PTR [rip+0x16fc6]        # 0x1000290c0
   1000120fa:	mov    rax,QWORD PTR gs:0x30
   100012103:	add    rax,r11
   100012106:	cmp    r11,0x1480
   10001210d:	jge    0x100012118
   10001210f:	mov    ecx,r11d
   100012112:	call   QWORD PTR [rip+0xfffffffffffef008]        # 0x100001120
   100012118:	mov    rcx,QWORD PTR [rax+0xd8]
   10001211f:	mov    rcx,QWORD PTR [rcx+0x210]
   100012126:	call   QWORD PTR [rip+0xfffffffffffefce4]        # 0x100001e10
   10001212c:	add    rsp,0x28
   100012130:	ret    
   100012131:	nop
   100012132:	nop
   100012133:	nop
   100012134:	nop
   100012135:	nop
   100012136:	nop
   100012137:	nop
   100012138:	nop
   100012139:	nop
   10001213a:	nop
   10001213b:	nop
   10001213c:	nop
   10001213d:	nop
   10001213e:	nop
   10001213f:	nop
   100012140:	mov    QWORD PTR [rsp+0x8],rcx
   100012145:	push   rbx
   100012146:	sub    rsp,0x30
   10001214a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100012153:	mov    rbx,rcx
   100012156:	cmp    DWORD PTR [rcx],0x0
   100012159:	je     0x100012186
   10001215b:	cmp    DWORD PTR [rcx+0x4],0x0
   10001215f:	je     0x100012171
   100012161:	mov    rax,QWORD PTR [rcx+0x8]
   100012165:	or     DWORD PTR [rax+0x2d8],0x800
   10001216f:	jmp    0x100012186
   100012171:	mov    rcx,QWORD PTR [rcx+0x10]
   100012175:	mov    rax,QWORD PTR [rcx]
   100012178:	mov    r8d,0x1
   10001217e:	mov    rdx,QWORD PTR [rbx+0x8]
   100012182:	call   QWORD PTR [rax+0x10]
   100012185:	nop
   100012186:	lea    rcx,[rbx+0x18]
   10001218a:	add    rsp,0x30
   10001218e:	pop    rbx
   10001218f:	jmp    0x1000120b0
   100012194:	nop
   100012195:	nop
   100012196:	nop
   100012197:	nop
   100012198:	nop
   100012199:	nop
   10001219a:	nop
   10001219b:	nop
   10001219c:	nop
   10001219d:	nop
   10001219e:	nop
   10001219f:	nop
   1000121a0:	mov    DWORD PTR [rsp+0x20],r9d
   1000121a5:	sub    rsp,0x38
   1000121a9:	mov    rax,QWORD PTR [rcx]
   1000121ac:	lea    r10,[rsp+0x60]
   1000121b1:	mov    QWORD PTR [rsp+0x20],r10
   1000121b6:	call   QWORD PTR [rax+0x8]
   1000121b9:	add    rsp,0x38
   1000121bd:	ret    
   1000121be:	nop
   1000121bf:	nop
   1000121c0:	nop
   1000121c1:	nop
   1000121c2:	nop
   1000121c3:	nop
   1000121c4:	nop
   1000121c5:	nop
   1000121c6:	nop
   1000121c7:	nop
   1000121c8:	nop
   1000121c9:	nop
   1000121ca:	nop
   1000121cb:	nop
   1000121cc:	nop
   1000121cd:	nop
   1000121ce:	nop
   1000121cf:	nop
   1000121d0:	push   rbx
   1000121d2:	sub    rsp,0x310
   1000121d9:	mov    QWORD PTR [rsp+0xa0],0xfffffffffffffffe
   1000121e5:	mov    rax,QWORD PTR [rip+0x17004]        # 0x1000291f0
   1000121ec:	xor    rax,rsp
   1000121ef:	mov    QWORD PTR [rsp+0x308],rax
   1000121f7:	call   QWORD PTR [rip+0xfffffffffffefc3b]        # 0x100001e38
   1000121fd:	nop
   1000121fe:	mov    rdx,QWORD PTR [rip+0xfffffffffffefc3b]        # 0x100001e40
   100012205:	lea    rcx,[rsp+0xc8]
   10001220d:	call   0x100002090
   100012212:	nop
   100012213:	xor    eax,eax
   100012215:	mov    QWORD PTR [rsp+0x40],rax
   10001221a:	mov    DWORD PTR [rsp+0x48],eax
   10001221e:	mov    edx,0x15c
   100012223:	mov    WORD PTR [rsp+0x4c],dx
   100012228:	lea    r8,[rip+0x209]        # 0x100012438
   10001222f:	mov    QWORD PTR [rsp+0x50],r8
   100012234:	xor    ecx,ecx
   100012236:	mov    rax,QWORD PTR [rip+0xfffffffffffef8eb]        # 0x100001b28
   10001223d:	call   QWORD PTR [rax]
   10001223f:	mov    QWORD PTR [rsp+0x40],rax
   100012244:	mov    r9,QWORD PTR [rax]
   100012247:	xor    r8d,r8d
   10001224a:	xor    edx,edx
   10001224c:	mov    rcx,rax
   10001224f:	call   QWORD PTR [r9+0x8]
   100012253:	call   0x10000e9e0
   100012258:	movzx  ecx,WORD PTR [rax+0x88]
   10001225f:	mov    DWORD PTR [rsp+0x28],ecx
   100012263:	mov    rax,QWORD PTR [rip+0x16e56]        # 0x1000290c0
   10001226a:	mov    QWORD PTR [rsp+0x58],rax
   10001226f:	mov    rax,QWORD PTR gs:0x30
   100012278:	mov    rcx,QWORD PTR [rsp+0x58]
   10001227d:	add    rax,rcx
   100012280:	cmp    rcx,0x1480
   100012287:	jge    0x10001228f
   100012289:	call   QWORD PTR [rip+0xfffffffffffeee91]        # 0x100001120
   10001228f:	mov    rax,QWORD PTR [rax+0x8]
   100012293:	mov    rcx,QWORD PTR [rax+0x80]
   10001229a:	mov    eax,DWORD PTR [rsp+0x28]
   10001229e:	mov    DWORD PTR [rcx+0x88],eax
   1000122a4:	nop    WORD PTR [rax+rax*1]
   1000122a9:	mov    DWORD PTR [rsp+0x20],0x1
   1000122b1:	mov    rdx,QWORD PTR [rip+0xfffffffffffefaa0]        # 0x100001d58
   1000122b8:	lea    rcx,[rsp+0xa8]
   1000122c0:	call   0x100002090
   1000122c5:	nop
   1000122c6:	xor    ecx,ecx
   1000122c8:	call   QWORD PTR [rip+0xfffffffffffefb7a]        # 0x100001e48
   1000122ce:	nop
   1000122cf:	lea    rcx,[rsp+0xa8]
   1000122d7:	call   0x100002030
   1000122dc:	nop
   1000122dd:	mov    rax,QWORD PTR [rip+0x16ddc]        # 0x1000290c0
   1000122e4:	mov    QWORD PTR [rsp+0x60],rax
   1000122e9:	mov    rax,QWORD PTR gs:0x30
   1000122f2:	mov    rcx,QWORD PTR [rsp+0x60]
   1000122f7:	add    rax,rcx
   1000122fa:	cmp    rcx,0x1480
   100012301:	jge    0x100012309
   100012303:	call   QWORD PTR [rip+0xfffffffffffeee17]        # 0x100001120
   100012309:	test   rax,rax
   10001230c:	je     0x10001231a
   10001230e:	mov    rax,QWORD PTR [rax+0xd8]
   100012315:	test   rax,rax
   100012318:	jne    0x100012353
   10001231a:	call   QWORD PTR [rip+0xfffffffffffef830]        # 0x100001b50
   100012320:	mov    r11,QWORD PTR [rip+0x16d99]        # 0x1000290c0
   100012327:	mov    QWORD PTR [rsp+0x38],r11
   10001232c:	mov    rax,QWORD PTR gs:0x30
   100012335:	mov    rcx,QWORD PTR [rsp+0x38]
   10001233a:	add    rax,rcx
   10001233d:	cmp    rcx,0x1480
   100012344:	jge    0x10001234c
   100012346:	call   QWORD PTR [rip+0xfffffffffffeedd4]        # 0x100001120
   10001234c:	mov    rax,QWORD PTR [rax+0xd8]
   100012353:	cmp    DWORD PTR [rax+0x204],0x0
   10001235a:	je     0x100012362
   10001235c:	call   QWORD PTR [rip+0xfffffffffffef8be]        # 0x100001c20
   100012362:	cmp    DWORD PTR [rsp+0x20],0x0
   100012367:	jne    0x1000122a9
   10001236d:	mov    rbx,QWORD PTR [rsp+0x40]
   100012372:	mov    rax,QWORD PTR [rbx]
   100012375:	xor    edx,edx
   100012377:	mov    rcx,rbx
   10001237a:	call   QWORD PTR [rax+0x10]
   10001237d:	nop
   10001237e:	mov    rax,QWORD PTR [rbx]
   100012381:	mov    edx,0x1
   100012386:	mov    rcx,rbx
   100012389:	call   QWORD PTR [rax]
   10001238b:	nop
   10001238c:	lea    rcx,[rsp+0xc8]
   100012394:	call   0x100002030
   100012399:	nop
   10001239a:	mov    rcx,QWORD PTR [rip+0x16d1f]        # 0x1000290c0
   1000123a1:	mov    rax,QWORD PTR gs:0x30
   1000123aa:	add    rax,rcx
   1000123ad:	cmp    rcx,0x1480
   1000123b4:	jge    0x1000123bc
   1000123b6:	call   QWORD PTR [rip+0xfffffffffffeed64]        # 0x100001120
   1000123bc:	test   rax,rax
   1000123bf:	je     0x1000123cd
   1000123c1:	mov    rcx,QWORD PTR [rax+0xd8]
   1000123c8:	test   rcx,rcx
   1000123cb:	jne    0x1000123ff
   1000123cd:	call   QWORD PTR [rip+0xfffffffffffef77d]        # 0x100001b50
   1000123d3:	mov    r11,QWORD PTR [rip+0x16ce6]        # 0x1000290c0
   1000123da:	mov    rax,QWORD PTR gs:0x30
   1000123e3:	add    rax,r11
   1000123e6:	cmp    r11,0x1480
   1000123ed:	jge    0x1000123f8
   1000123ef:	mov    ecx,r11d
   1000123f2:	call   QWORD PTR [rip+0xfffffffffffeed28]        # 0x100001120
   1000123f8:	mov    rcx,QWORD PTR [rax+0xd8]
   1000123ff:	cmp    DWORD PTR [rcx+0x204],0x0
   100012406:	je     0x10001240e
   100012408:	call   QWORD PTR [rip+0xfffffffffffef812]        # 0x100001c20
   10001240e:	or     ecx,0xffffffff
   100012411:	call   QWORD PTR [rip+0xfffffffffffef721]        # 0x100001b38
   100012417:	xor    eax,eax
   100012419:	mov    rcx,QWORD PTR [rsp+0x308]
   100012421:	xor    rcx,rsp
   100012424:	call   0x100002610
   100012429:	add    rsp,0x310
   100012430:	pop    rbx
   100012431:	ret    
   100012432:	nop
   100012433:	nop
   100012434:	nop
   100012435:	nop
   100012436:	nop
   100012437:	nop
   100012438:	push   rdx
   100012439:	add    BYTE PTR [rbp+0x0],ah
   10001243c:	jae    0x10001243e
   10001243e:	outs   dx,DWORD PTR ds:[rsi]
   10001243f:	add    BYTE PTR [rbp+0x0],dh
   100012442:	jb     0x100012444
   100012444:	movsxd eax,DWORD PTR [rax]
   100012446:	add    BYTE PTR gs:[rax],ah
   100012449:	add    BYTE PTR [rbp+0x0],cl
   10001244c:	outs   dx,DWORD PTR ds:[rsi]
   10001244d:	add    BYTE PTR [rsi+0x0],ch
   100012450:	imul   eax,DWORD PTR [rax],0x6f0074
   100012456:	jb     0x100012458
   100012458:	and    BYTE PTR [rax],al
   10001245a:	push   rsp
   10001245b:	add    BYTE PTR [rcx+0x0],ah
   10001245e:	jae    0x100012460
   100012460:	imul   eax,DWORD PTR [rax],0x0
   100012463:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100012469:	nop
   10001246a:	nop
   10001246b:	nop
   10001246c:	nop
   10001246d:	nop
   10001246e:	nop
   10001246f:	nop
   100012470:	mov    QWORD PTR [rsp+0x8],rcx
   100012475:	sub    rsp,0x38
   100012479:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100012482:	mov    rcx,QWORD PTR [rcx]
   100012485:	test   rcx,rcx
   100012488:	je     0x100012494
   10001248a:	mov    rax,QWORD PTR [rcx]
   10001248d:	mov    edx,0x1
   100012492:	call   QWORD PTR [rax]
   100012494:	add    rsp,0x38
   100012498:	ret    
   100012499:	nop
   10001249a:	nop
   10001249b:	nop
   10001249c:	nop
   10001249d:	nop
   10001249e:	nop
   10001249f:	nop
   1000124a0:	mov    QWORD PTR [rsp+0x8],rcx
   1000124a5:	push   rbx
   1000124a6:	push   rsi
   1000124a7:	push   rdi
   1000124a8:	sub    rsp,0x80
   1000124af:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1000124b8:	mov    rsi,rdx
   1000124bb:	mov    rbx,rcx
   1000124be:	xor    eax,eax
   1000124c0:	mov    DWORD PTR [rcx],eax
   1000124c2:	mov    QWORD PTR [rcx+0x8],rax
   1000124c6:	mov    WORD PTR [rcx+0x10],ax
   1000124ca:	mov    DWORD PTR [rcx+0x14],eax
   1000124cd:	mov    rcx,QWORD PTR [rip+0x16bec]        # 0x1000290c0
   1000124d4:	mov    rax,QWORD PTR gs:0x30
   1000124dd:	add    rax,rcx
   1000124e0:	cmp    rcx,0x1480
   1000124e7:	jge    0x1000124ef
   1000124e9:	call   QWORD PTR [rip+0xfffffffffffeec31]        # 0x100001120
   1000124ef:	test   rax,rax
   1000124f2:	je     0x100012500
   1000124f4:	mov    rcx,QWORD PTR [rax+0xd8]
   1000124fb:	test   rcx,rcx
   1000124fe:	jne    0x100012532
   100012500:	call   QWORD PTR [rip+0xfffffffffffef64a]        # 0x100001b50
   100012506:	mov    r11,QWORD PTR [rip+0x16bb3]        # 0x1000290c0
   10001250d:	mov    rax,QWORD PTR gs:0x30
   100012516:	add    rax,r11
   100012519:	cmp    r11,0x1480
   100012520:	jge    0x10001252b
   100012522:	mov    ecx,r11d
   100012525:	call   QWORD PTR [rip+0xfffffffffffeebf5]        # 0x100001120
   10001252b:	mov    rcx,QWORD PTR [rax+0xd8]
   100012532:	mov    rdi,QWORD PTR [rcx+0x400]
   100012539:	mov    QWORD PTR [rsp+0xb0],rdi
   100012541:	mov    rax,QWORD PTR [rip+0xfffffffffffef978]        # 0x100001ec0
   100012548:	mov    QWORD PTR [rcx+0x400],rax
   10001254f:	mov    QWORD PTR [rsp+0xb8],rdi
   100012557:	mov    rdx,QWORD PTR [rip+0xfffffffffffef6a2]        # 0x100001c00
   10001255e:	lea    rcx,[rsp+0x50]
   100012563:	call   0x100002090
   100012568:	nop
   100012569:	mov    rax,QWORD PTR [rsi+0x388]
   100012570:	movzx  ecx,WORD PTR [rax+0x88]
   100012577:	mov    WORD PTR [rbx+0x10],cx
   10001257b:	mov    rax,QWORD PTR [rsi+0x218]
   100012582:	mov    ecx,DWORD PTR [rax+0xabc]
   100012588:	mov    DWORD PTR [rbx+0x14],ecx
   10001258b:	mov    rsi,QWORD PTR [rsi+0x228]
   100012592:	test   rsi,rsi
   100012595:	je     0x1000125bf
   100012597:	mov    eax,DWORD PTR [rsi+0xf0]
   10001259d:	mov    DWORD PTR [rbx],eax
   10001259f:	mov    rax,QWORD PTR [rsi+0x100]
   1000125a6:	test   rax,rax
   1000125a9:	jne    0x1000125bb
   1000125ab:	mov    rcx,rsi
   1000125ae:	call   QWORD PTR [rip+0xfffffffffffef87c]        # 0x100001e30
   1000125b4:	mov    rax,QWORD PTR [rsi+0x100]
   1000125bb:	mov    QWORD PTR [rbx+0x8],rax
   1000125bf:	lea    rcx,[rsp+0x50]
   1000125c4:	call   0x100002030
   1000125c9:	nop
   1000125ca:	jmp    0x1000125dc
   1000125cc:	mov    rbx,QWORD PTR [rsp+0xa0]
   1000125d4:	mov    rdi,QWORD PTR [rsp+0xb0]
   1000125dc:	mov    rcx,QWORD PTR [rip+0x16add]        # 0x1000290c0
   1000125e3:	mov    rax,QWORD PTR gs:0x30
   1000125ec:	add    rax,rcx
   1000125ef:	cmp    rcx,0x1480
   1000125f6:	jge    0x1000125fe
   1000125f8:	call   QWORD PTR [rip+0xfffffffffffeeb22]        # 0x100001120
   1000125fe:	test   rax,rax
   100012601:	je     0x10001260f
   100012603:	mov    rax,QWORD PTR [rax+0xd8]
   10001260a:	test   rax,rax
   10001260d:	jne    0x100012641
   10001260f:	call   QWORD PTR [rip+0xfffffffffffef53b]        # 0x100001b50
   100012615:	mov    r11,QWORD PTR [rip+0x16aa4]        # 0x1000290c0
   10001261c:	mov    rax,QWORD PTR gs:0x30
   100012625:	add    rax,r11
   100012628:	cmp    r11,0x1480
   10001262f:	jge    0x10001263a
   100012631:	mov    ecx,r11d
   100012634:	call   QWORD PTR [rip+0xfffffffffffeeae6]        # 0x100001120
   10001263a:	mov    rax,QWORD PTR [rax+0xd8]
   100012641:	cmp    DWORD PTR [rax+0x204],0x0
   100012648:	je     0x100012651
   10001264a:	call   QWORD PTR [rip+0xfffffffffffef5d0]        # 0x100001c20
   100012650:	nop
   100012651:	mov    rcx,QWORD PTR [rip+0x16a68]        # 0x1000290c0
   100012658:	mov    rax,QWORD PTR gs:0x30
   100012661:	add    rax,rcx
   100012664:	cmp    rcx,0x1480
   10001266b:	jge    0x100012673
   10001266d:	call   QWORD PTR [rip+0xfffffffffffeeaad]        # 0x100001120
   100012673:	test   rax,rax
   100012676:	je     0x10001268d
   100012678:	mov    rcx,QWORD PTR [rax+0xd8]
   10001267f:	test   rcx,rcx
   100012682:	je     0x10001268d
   100012684:	mov    QWORD PTR [rcx+0x400],rdi
   10001268b:	jmp    0x1000126c6
   10001268d:	call   QWORD PTR [rip+0xfffffffffffef4bd]        # 0x100001b50
   100012693:	mov    r11,QWORD PTR [rip+0x16a26]        # 0x1000290c0
   10001269a:	mov    rax,QWORD PTR gs:0x30
   1000126a3:	add    rax,r11
   1000126a6:	cmp    r11,0x1480
   1000126ad:	jge    0x1000126b8
   1000126af:	mov    ecx,r11d
   1000126b2:	call   QWORD PTR [rip+0xfffffffffffeea68]        # 0x100001120
   1000126b8:	mov    rax,QWORD PTR [rax+0xd8]
   1000126bf:	mov    QWORD PTR [rax+0x400],rdi
   1000126c6:	mov    rax,rbx
   1000126c9:	add    rsp,0x80
   1000126d0:	pop    rdi
   1000126d1:	pop    rsi
   1000126d2:	pop    rbx
   1000126d3:	ret    
   1000126d4:	nop
   1000126d5:	nop
   1000126d6:	nop
   1000126d7:	nop
   1000126d8:	nop
   1000126d9:	nop
   1000126da:	nop
   1000126db:	nop
   1000126dc:	nop
   1000126dd:	nop
   1000126de:	nop
   1000126df:	nop
   1000126e0:	mov    QWORD PTR [rsp+0x8],rbx
   1000126e5:	mov    QWORD PTR [rsp+0x10],rbp
   1000126ea:	mov    QWORD PTR [rsp+0x18],rsi
   1000126ef:	push   rdi
   1000126f0:	push   r12
   1000126f2:	push   r13
   1000126f4:	push   r14
   1000126f6:	push   r15
   1000126f8:	sub    rsp,0x60
   1000126fc:	mov    rdi,QWORD PTR [rcx+0x228]
   100012703:	mov    rsi,QWORD PTR [rcx+0x220]
   10001270a:	mov    ebp,DWORD PTR [rcx+0x21c]
   100012710:	mov    r14d,DWORD PTR [rcx+0x10]
   100012714:	mov    r15,r9
   100012717:	mov    r12,r8
   10001271a:	mov    r13,rdx
   10001271d:	lea    rbx,[rcx+0x14]
   100012721:	call   QWORD PTR [rip+0xfffffffffffef511]        # 0x100001c38
   100012727:	mov    r9,QWORD PTR [rsp+0xb0]
   10001272f:	mov    QWORD PTR [rsp+0x58],rdi
   100012734:	mov    QWORD PTR [rsp+0x50],rsi
   100012739:	mov    DWORD PTR [rsp+0x48],ebp
   10001273d:	mov    QWORD PTR [rsp+0x40],rbx
   100012742:	mov    DWORD PTR [rsp+0x38],r14d
   100012747:	mov    QWORD PTR [rsp+0x30],rax
   10001274c:	lea    rax,[rip+0x3d]        # 0x100012790
   100012753:	mov    r8,r15
   100012756:	mov    QWORD PTR [rsp+0x28],rax
   10001275b:	mov    rdx,r12
   10001275e:	mov    rcx,r13
   100012761:	mov    QWORD PTR [rsp+0x20],0x0
   10001276a:	call   0x100015180
   10001276f:	lea    r11,[rsp+0x60]
   100012774:	mov    rbx,QWORD PTR [r11+0x30]
   100012778:	mov    rbp,QWORD PTR [r11+0x38]
   10001277c:	mov    rsi,QWORD PTR [r11+0x40]
   100012780:	mov    rsp,r11
   100012783:	pop    r15
   100012785:	pop    r14
   100012787:	pop    r13
   100012789:	pop    r12
   10001278b:	pop    rdi
   10001278c:	ret    
   10001278d:	nop
   10001278e:	nop
   10001278f:	nop
   100012790:	cmp    al,0x0
   100012792:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   100012796:	outs   dx,BYTE PTR ds:[rsi]
   100012797:	add    BYTE PTR [rcx+0x0],bl
   10001279a:	imul   eax,DWORD PTR [rax],0x6c0065
   1000127a0:	add    BYTE PTR fs:[rax+0x0],dl
   1000127a4:	jb     0x1000127a6
   1000127a6:	outs   dx,DWORD PTR ds:[rsi]
   1000127a7:	add    BYTE PTR [rbx+0x0],ah
   1000127aa:	add    BYTE PTR gs:[rbx+0x0],dh
   1000127ae:	jae    0x1000127b0
   1000127b0:	push   rsp
   1000127b1:	add    BYTE PTR [rcx+0x0],ah
   1000127b4:	(bad)  
   1000127b5:	add    BYTE PTR [rax+rax*1+0x65],ch
   1000127b9:	add    BYTE PTR [rsi],bh
   1000127bb:	add    BYTE PTR [rax+rax*1],bh
   1000127be:	push   rax
   1000127bf:	add    BYTE PTR [rdx+0x0],dh
   1000127c2:	outs   dx,DWORD PTR ds:[rsi]
   1000127c3:	add    BYTE PTR [rbx+0x0],ah
   1000127c6:	add    BYTE PTR gs:[rbx+0x0],dh
   1000127ca:	jae    0x1000127cc
   1000127cc:	rex.WB add BYTE PTR [r8+rax*1+0x3e],al
   1000127d1:	add    BYTE PTR [rip+0x3c006400],ah        # 0x13c018bd7
   1000127d7:	add    BYTE PTR [rdi],ch
   1000127d9:	add    BYTE PTR [rax+0x0],dl
   1000127dc:	jb     0x1000127de
   1000127de:	outs   dx,DWORD PTR ds:[rsi]
   1000127df:	add    BYTE PTR [rbx+0x0],ah
   1000127e2:	add    BYTE PTR gs:[rbx+0x0],dh
   1000127e6:	jae    0x1000127e8
   1000127e8:	rex.WB add BYTE PTR [r8+rax*1+0x3e],al
   1000127ed:	add    BYTE PTR [rax+rax*1],bh
   1000127f0:	push   rax
   1000127f1:	add    BYTE PTR [rdx+0x0],dh
   1000127f4:	outs   dx,DWORD PTR ds:[rsi]
   1000127f5:	add    BYTE PTR [rbx+0x0],ah
   1000127f8:	add    BYTE PTR gs:[rbx+0x0],dh
   1000127fc:	jae    0x1000127fe
   1000127fe:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   100012802:	ins    DWORD PTR es:[rdi],dx
   100012803:	add    BYTE PTR [rbp+0x0],ah
   100012806:	add    BYTE PTR ds:[rax+rax*1],bh
   10001280a:	and    DWORD PTR [rax],eax
   10001280c:	pop    rbx
   10001280d:	add    BYTE PTR [rbx+0x0],al
   100012810:	add    BYTE PTR [rcx+0x0],r8b
   100012814:	push   rsp
   100012815:	add    BYTE PTR [rcx+0x0],al
   100012818:	pop    rbx
   100012819:	add    BYTE PTR [rip+0x73006c00],ah        # 0x17301941f
   10001281f:	add    BYTE PTR [rbp+0x0],bl
   100012822:	pop    rbp
   100012823:	add    BYTE PTR [rsi],bh
   100012825:	add    BYTE PTR [rax+rax*1],bh
   100012828:	(bad)  
   100012829:	add    BYTE PTR [rax+0x0],dl
   10001282c:	jb     0x10001282e
   10001282e:	outs   dx,DWORD PTR ds:[rsi]
   10001282f:	add    BYTE PTR [rbx+0x0],ah
   100012832:	add    BYTE PTR gs:[rbx+0x0],dh
   100012836:	jae    0x100012838
   100012838:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   10001283c:	ins    DWORD PTR es:[rdi],dx
   10001283d:	add    BYTE PTR [rbp+0x0],ah
   100012840:	add    BYTE PTR ds:[rax+rax*1],bh
   100012844:	push   rax
   100012845:	add    BYTE PTR [rcx+0x0],ah
   100012848:	add    BYTE PTR [ebp+0x0],ah
   10001284c:	rex.RX add BYTE PTR [rcx+0x0],r12b
   100012850:	jne    0x100012852
   100012852:	ins    BYTE PTR es:[rdi],dx
   100012853:	add    BYTE PTR [rax+rax*1+0x43],dh
   100012857:	add    BYTE PTR [rdi+0x0],ch
   10001285a:	jne    0x10001285c
   10001285c:	outs   dx,BYTE PTR ds:[rsi]
   10001285d:	add    BYTE PTR [rax+rax*1+0x3e],dh
   100012861:	add    BYTE PTR [rip+0x3c006400],ah        # 0x13c018c67
   100012867:	add    BYTE PTR [rdi],ch
   100012869:	add    BYTE PTR [rax+0x0],dl
   10001286c:	(bad)  
   10001286d:	add    BYTE PTR [rdi+0x0],ah
   100012870:	add    BYTE PTR gs:[rsi+0x0],al
   100012874:	(bad)  
   100012875:	add    BYTE PTR [rbp+0x0],dh
   100012878:	ins    BYTE PTR es:[rdi],dx
   100012879:	add    BYTE PTR [rax+rax*1+0x43],dh
   10001287d:	add    BYTE PTR [rdi+0x0],ch
   100012880:	jne    0x100012882
   100012882:	outs   dx,BYTE PTR ds:[rsi]
   100012883:	add    BYTE PTR [rax+rax*1+0x3e],dh
   100012887:	add    BYTE PTR [rax+rax*1],bh
   10001288a:	push   rdi
   10001288b:	add    BYTE PTR [rdi+0x0],ch
   10001288e:	jb     0x100012890
   100012890:	imul   eax,DWORD PTR [rax],0x69
   100012893:	add    BYTE PTR [rsi+0x0],ch
   100012896:	add    BYTE PTR [ebx+0x0],dl
   10001289a:	add    BYTE PTR gs:[rax+rax*1+0x53],dh
   10001289f:	add    BYTE PTR [rcx+0x0],ch
   1000128a2:	jp     0x1000128a4
   1000128a4:	add    BYTE PTR gs:[rsi],bh
   1000128a7:	add    BYTE PTR [rip+0x64006c00],ah        # 0x1640194ad
   1000128ad:	add    BYTE PTR [rax+rax*1],bh
   1000128b0:	(bad)  
   1000128b1:	add    BYTE PTR [rdi+0x0],dl
   1000128b4:	outs   dx,DWORD PTR ds:[rsi]
   1000128b5:	add    BYTE PTR [rdx+0x0],dh
   1000128b8:	imul   eax,DWORD PTR [rax],0x69
   1000128bb:	add    BYTE PTR [rsi+0x0],ch
   1000128be:	add    BYTE PTR [ebx+0x0],dl
   1000128c2:	add    BYTE PTR gs:[rax+rax*1+0x53],dh
   1000128c7:	add    BYTE PTR [rcx+0x0],ch
   1000128ca:	jp     0x1000128cc
   1000128cc:	add    BYTE PTR gs:[rsi],bh
   1000128cf:	add    BYTE PTR [rax+rax*1],bh
   1000128d2:	push   rax
   1000128d3:	add    BYTE PTR [rdx+0x0],dh
   1000128d6:	imul   eax,DWORD PTR [rax],0x610076
   1000128dc:	je     0x1000128de
   1000128de:	add    BYTE PTR gs:[rbp+0x0],dl
   1000128e2:	jae    0x1000128e4
   1000128e4:	(bad)  
   1000128e5:	add    BYTE PTR [rdi+0x0],ah
   1000128e8:	add    BYTE PTR gs:[rsi],bh
   1000128eb:	add    BYTE PTR [rip+0x64006c00],ah        # 0x1640194f1
   1000128f1:	add    BYTE PTR [rax+rax*1],bh
   1000128f4:	(bad)  
   1000128f5:	add    BYTE PTR [rax+0x0],dl
   1000128f8:	jb     0x1000128fa
   1000128fa:	imul   eax,DWORD PTR [rax],0x610076
   100012900:	je     0x100012902
   100012902:	add    BYTE PTR gs:[rbp+0x0],dl
   100012906:	jae    0x100012908
   100012908:	(bad)  
   100012909:	add    BYTE PTR [rdi+0x0],ah
   10001290c:	add    BYTE PTR gs:[rsi],bh
   10001290f:	add    BYTE PTR [rax+rax*1],bh
   100012912:	(bad)  
   100012913:	add    BYTE PTR [rsi+0x0],cl
   100012916:	outs   dx,DWORD PTR ds:[rsi]
   100012917:	add    BYTE PTR [rsi+0x0],ch
   10001291a:	pop    rcx
   10001291b:	add    BYTE PTR [rcx+0x0],ch
   10001291e:	add    BYTE PTR gs:[rax+rax*1+0x64],ch
   100012923:	add    BYTE PTR [rax+0x0],dl
   100012926:	jb     0x100012928
   100012928:	outs   dx,DWORD PTR ds:[rsi]
   100012929:	add    BYTE PTR [rbx+0x0],ah
   10001292c:	add    BYTE PTR gs:[rbx+0x0],dh
   100012930:	jae    0x100012932
   100012932:	push   rsp
   100012933:	add    BYTE PTR [rcx+0x0],ah
   100012936:	(bad)  
   100012937:	add    BYTE PTR [rax+rax*1+0x65],ch
   10001293b:	add    BYTE PTR [rsi],bh
   10001293d:	add    BYTE PTR [rax],al
   10001293f:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100012945:	nop
   100012946:	nop
   100012947:	nop
   100012948:	nop
   100012949:	nop
   10001294a:	nop
   10001294b:	nop
   10001294c:	nop
   10001294d:	nop
   10001294e:	nop
   10001294f:	nop
   100012950:	mov    QWORD PTR [rsp+0x8],rbx
   100012955:	mov    QWORD PTR [rsp+0x18],rbp
   10001295a:	mov    QWORD PTR [rsp+0x20],rsi
   10001295f:	mov    QWORD PTR [rsp+0x10],rdx
   100012964:	push   rdi
   100012965:	push   r12
   100012967:	push   r13
   100012969:	push   r14
   10001296b:	push   r15
   10001296d:	sub    rsp,0x70
   100012971:	mov    rbx,QWORD PTR [rcx+0x30]
   100012975:	mov    rdi,QWORD PTR [rcx+0x28]
   100012979:	mov    rsi,QWORD PTR [rcx+0x20]
   10001297d:	mov    rbp,QWORD PTR [rcx+0x18]
   100012981:	mov    r14d,DWORD PTR [rcx+0x14]
   100012985:	mov    r15d,DWORD PTR [rcx+0x10]
   100012989:	mov    r12,r9
   10001298c:	mov    r13,r8
   10001298f:	call   QWORD PTR [rip+0xfffffffffffef2a3]        # 0x100001c38
   100012995:	mov    r9,QWORD PTR [rsp+0xc0]
   10001299d:	mov    rcx,QWORD PTR [rsp+0xa8]
   1000129a5:	mov    QWORD PTR [rsp+0x60],rbx
   1000129aa:	mov    QWORD PTR [rsp+0x58],rdi
   1000129af:	mov    QWORD PTR [rsp+0x50],rsi
   1000129b4:	mov    QWORD PTR [rsp+0x48],rbp
   1000129b9:	mov    DWORD PTR [rsp+0x40],r14d
   1000129be:	mov    DWORD PTR [rsp+0x38],r15d
   1000129c3:	mov    QWORD PTR [rsp+0x30],rax
   1000129c8:	lea    rax,[rip+0x41]        # 0x100012a10
   1000129cf:	mov    r8,r12
   1000129d2:	mov    rdx,r13
   1000129d5:	mov    QWORD PTR [rsp+0x28],rax
   1000129da:	mov    QWORD PTR [rsp+0x20],0x0
   1000129e3:	call   0x100015180
   1000129e8:	lea    r11,[rsp+0x70]
   1000129ed:	mov    rbx,QWORD PTR [r11+0x30]
   1000129f1:	mov    rbp,QWORD PTR [r11+0x40]
   1000129f5:	mov    rsi,QWORD PTR [r11+0x48]
   1000129f9:	mov    rsp,r11
   1000129fc:	pop    r15
   1000129fe:	pop    r14
   100012a00:	pop    r13
   100012a02:	pop    r12
   100012a04:	pop    rdi
   100012a05:	ret    
   100012a06:	nop
   100012a07:	nop
   100012a08:	nop
   100012a09:	nop
   100012a0a:	nop
   100012a0b:	nop
   100012a0c:	nop
   100012a0d:	nop
   100012a0e:	nop
   100012a0f:	nop
   100012a10:	cmp    al,0x0
   100012a12:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   100012a16:	outs   dx,BYTE PTR ds:[rsi]
   100012a17:	add    BYTE PTR [rcx+0x0],bl
   100012a1a:	imul   eax,DWORD PTR [rax],0x6c0065
   100012a20:	add    BYTE PTR fs:[rax+rax*1+0x68],dl
   100012a25:	add    BYTE PTR [rdx+0x0],dh
   100012a28:	add    BYTE PTR gs:[rcx+0x0],ah
   100012a2c:	add    BYTE PTR fs:[rax+rax*1+0x61],dl
   100012a31:	add    BYTE PTR [rdx+0x0],ah
   100012a34:	ins    BYTE PTR es:[rdi],dx
   100012a35:	add    BYTE PTR [rbp+0x0],ah
   100012a38:	add    BYTE PTR ds:[rax+rax*1],bh
   100012a3c:	push   rax
   100012a3d:	add    BYTE PTR [rdx+0x0],dh
   100012a40:	outs   dx,DWORD PTR ds:[rsi]
   100012a41:	add    BYTE PTR [rbx+0x0],ah
   100012a44:	add    BYTE PTR gs:[rbx+0x0],dh
   100012a48:	jae    0x100012a4a
   100012a4a:	rex.WB add BYTE PTR [r8+rax*1+0x3e],al
   100012a4f:	add    BYTE PTR [rip+0x3c006400],ah        # 0x13c018e55
   100012a55:	add    BYTE PTR [rdi],ch
   100012a57:	add    BYTE PTR [rax+0x0],dl
   100012a5a:	jb     0x100012a5c
   100012a5c:	outs   dx,DWORD PTR ds:[rsi]
   100012a5d:	add    BYTE PTR [rbx+0x0],ah
   100012a60:	add    BYTE PTR gs:[rbx+0x0],dh
   100012a64:	jae    0x100012a66
   100012a66:	rex.WB add BYTE PTR [r8+rax*1+0x3e],al
   100012a6b:	add    BYTE PTR [rax+rax*1],bh
   100012a6e:	push   rsp
   100012a6f:	add    BYTE PTR [rax+0x0],ch
   100012a72:	jb     0x100012a74
   100012a74:	add    BYTE PTR gs:[rcx+0x0],ah
   100012a78:	add    BYTE PTR fs:[rcx+0x0],cl
   100012a7c:	add    BYTE PTR [rsi],r15b
   100012a7f:	add    BYTE PTR [rip+0x3c006400],ah        # 0x13c018e85
   100012a85:	add    BYTE PTR [rdi],ch
   100012a87:	add    BYTE PTR [rax+rax*1+0x68],dl
   100012a8b:	add    BYTE PTR [rdx+0x0],dh
   100012a8e:	add    BYTE PTR gs:[rcx+0x0],ah
   100012a92:	add    BYTE PTR fs:[rcx+0x0],cl
   100012a96:	add    BYTE PTR [rsi],r15b
   100012a99:	add    BYTE PTR [rax+rax*1],bh
   100012a9c:	push   rbp
   100012a9d:	add    BYTE PTR [rbx+0x0],dh
   100012aa0:	add    BYTE PTR gs:[rdx+0x0],dh
   100012aa4:	push   rsp
   100012aa5:	add    BYTE PTR [rcx+0x0],ch
   100012aa8:	ins    DWORD PTR es:[rdi],dx
   100012aa9:	add    BYTE PTR [rbp+0x0],ah
   100012aac:	push   rbx
   100012aad:	add    BYTE PTR [rax+rax*1+0x61],dh
   100012ab1:	add    BYTE PTR [rdx+0x0],dh
   100012ab4:	je     0x100012ab6
   100012ab6:	add    BYTE PTR ds:[rip+0x36004900],ah        # 0x1360173bd
   100012abd:	add    BYTE PTR [rax+rax*1],dh
   100012ac0:	add    BYTE PTR fs:[rax+rax*1],bh
   100012ac4:	(bad)  
   100012ac5:	add    BYTE PTR [rbp+0x0],dl
   100012ac8:	jae    0x100012aca
   100012aca:	add    BYTE PTR gs:[rdx+0x0],dh
   100012ace:	push   rsp
   100012acf:	add    BYTE PTR [rcx+0x0],ch
   100012ad2:	ins    DWORD PTR es:[rdi],dx
   100012ad3:	add    BYTE PTR [rbp+0x0],ah
   100012ad6:	push   rbx
   100012ad7:	add    BYTE PTR [rax+rax*1+0x61],dh
   100012adb:	add    BYTE PTR [rdx+0x0],dh
   100012ade:	je     0x100012ae0
   100012ae0:	add    BYTE PTR ds:[rax+rax*1],bh
   100012ae4:	push   rbp
   100012ae5:	add    BYTE PTR [rbx+0x0],dh
   100012ae8:	add    BYTE PTR gs:[rdx+0x0],dh
   100012aec:	push   rsp
   100012aed:	add    BYTE PTR [rcx+0x0],ch
   100012af0:	ins    DWORD PTR es:[rdi],dx
   100012af1:	add    BYTE PTR [rbp+0x0],ah
   100012af4:	add    BYTE PTR [r14+0x0],r13b
   100012af8:	add    BYTE PTR fs:[rsi],bh
   100012afb:	add    BYTE PTR [rip+0x36004900],ah        # 0x136017401
   100012b01:	add    BYTE PTR [rax+rax*1],dh
   100012b04:	add    BYTE PTR fs:[rax+rax*1],bh
   100012b08:	(bad)  
   100012b09:	add    BYTE PTR [rbp+0x0],dl
   100012b0c:	jae    0x100012b0e
   100012b0e:	add    BYTE PTR gs:[rdx+0x0],dh
   100012b12:	push   rsp
   100012b13:	add    BYTE PTR [rcx+0x0],ch
   100012b16:	ins    DWORD PTR es:[rdi],dx
   100012b17:	add    BYTE PTR [rbp+0x0],ah
   100012b1a:	add    BYTE PTR [r14+0x0],r13b
   100012b1e:	add    BYTE PTR fs:[rsi],bh
   100012b21:	add    BYTE PTR [rax+rax*1],bh
   100012b24:	rex.WXB add BYTE PTR [r13+0x0],spl
   100012b28:	jb     0x100012b2a
   100012b2a:	outs   dx,BYTE PTR ds:[rsi]
   100012b2b:	add    BYTE PTR [rbp+0x0],ah
   100012b2e:	ins    BYTE PTR es:[rdi],dx
   100012b2f:	add    BYTE PTR [rax+rax*1+0x69],dl
   100012b33:	add    BYTE PTR [rbp+0x0],ch
   100012b36:	add    BYTE PTR gs:[rbx+0x0],dl
   100012b3a:	je     0x100012b3c
   100012b3c:	(bad)  
   100012b3d:	add    BYTE PTR [rdx+0x0],dh
   100012b40:	je     0x100012b42
   100012b42:	add    BYTE PTR ds:[rip+0x36004900],ah        # 0x136017449
   100012b49:	add    BYTE PTR [rax+rax*1],dh
   100012b4c:	add    BYTE PTR fs:[rax+rax*1],bh
   100012b50:	(bad)  
   100012b51:	add    BYTE PTR [rbx+0x0],cl
   100012b54:	add    BYTE PTR gs:[rdx+0x0],dh
   100012b58:	outs   dx,BYTE PTR ds:[rsi]
   100012b59:	add    BYTE PTR [rbp+0x0],ah
   100012b5c:	ins    BYTE PTR es:[rdi],dx
   100012b5d:	add    BYTE PTR [rax+rax*1+0x69],dl
   100012b61:	add    BYTE PTR [rbp+0x0],ch
   100012b64:	add    BYTE PTR gs:[rbx+0x0],dl
   100012b68:	je     0x100012b6a
   100012b6a:	(bad)  
   100012b6b:	add    BYTE PTR [rdx+0x0],dh
   100012b6e:	je     0x100012b70
   100012b70:	add    BYTE PTR ds:[rax+rax*1],bh
   100012b74:	rex.WXB add BYTE PTR [r13+0x0],spl
   100012b78:	jb     0x100012b7a
   100012b7a:	outs   dx,BYTE PTR ds:[rsi]
   100012b7b:	add    BYTE PTR [rbp+0x0],ah
   100012b7e:	ins    BYTE PTR es:[rdi],dx
   100012b7f:	add    BYTE PTR [rax+rax*1+0x69],dl
   100012b83:	add    BYTE PTR [rbp+0x0],ch
   100012b86:	add    BYTE PTR gs:[rbp+0x0],al
   100012b8a:	outs   dx,BYTE PTR ds:[rsi]
   100012b8b:	add    BYTE PTR [rax+rax*1+0x3e],ah
   100012b8f:	add    BYTE PTR [rip+0x36004900],ah        # 0x136017495
   100012b95:	add    BYTE PTR [rax+rax*1],dh
   100012b98:	add    BYTE PTR fs:[rax+rax*1],bh
   100012b9c:	(bad)  
   100012b9d:	add    BYTE PTR [rbx+0x0],cl
   100012ba0:	add    BYTE PTR gs:[rdx+0x0],dh
   100012ba4:	outs   dx,BYTE PTR ds:[rsi]
   100012ba5:	add    BYTE PTR [rbp+0x0],ah
   100012ba8:	ins    BYTE PTR es:[rdi],dx
   100012ba9:	add    BYTE PTR [rax+rax*1+0x69],dl
   100012bad:	add    BYTE PTR [rbp+0x0],ch
   100012bb0:	add    BYTE PTR gs:[rbp+0x0],al
   100012bb4:	outs   dx,BYTE PTR ds:[rsi]
   100012bb5:	add    BYTE PTR [rax+rax*1+0x3e],ah
   100012bb9:	add    BYTE PTR [rax+rax*1],bh
   100012bbc:	(bad)  
   100012bbd:	add    BYTE PTR [rsi+0x0],cl
   100012bc0:	outs   dx,DWORD PTR ds:[rsi]
   100012bc1:	add    BYTE PTR [rsi+0x0],ch
   100012bc4:	pop    rcx
   100012bc5:	add    BYTE PTR [rcx+0x0],ch
   100012bc8:	add    BYTE PTR gs:[rax+rax*1+0x64],ch
   100012bcd:	add    BYTE PTR [rax+rax*1+0x68],dl
   100012bd1:	add    BYTE PTR [rdx+0x0],dh
   100012bd4:	add    BYTE PTR gs:[rcx+0x0],ah
   100012bd8:	add    BYTE PTR fs:[rax+rax*1+0x61],dl
   100012bdd:	add    BYTE PTR [rdx+0x0],ah
   100012be0:	ins    BYTE PTR es:[rdi],dx
   100012be1:	add    BYTE PTR [rbp+0x0],ah
   100012be4:	add    BYTE PTR ds:[rax],al
   100012be7:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100012bed:	nop
   100012bee:	nop
   100012bef:	nop
   100012bf0:	mov    QWORD PTR [rsp+0x10],rdx
   100012bf5:	mov    QWORD PTR [rsp+0x8],rcx
   100012bfa:	push   rbp
   100012bfb:	push   rsi
   100012bfc:	push   rdi
   100012bfd:	push   r12
   100012bff:	push   r13
   100012c01:	push   r14
   100012c03:	push   r15
   100012c05:	sub    rsp,0x170
   100012c0c:	lea    rbp,[rsp+0x70]
   100012c11:	mov    QWORD PTR [rbp+0x80],0xfffffffffffffffe
   100012c1c:	mov    QWORD PTR [rbp+0x150],rbx
   100012c23:	mov    rax,QWORD PTR [rip+0x165c6]        # 0x1000291f0
   100012c2a:	xor    rax,rbp
   100012c2d:	mov    QWORD PTR [rbp+0xf0],rax
   100012c34:	mov    r14,rcx
   100012c37:	mov    rax,QWORD PTR [rbp+0x148]
   100012c3e:	mov    esi,DWORD PTR [rax]
   100012c40:	mov    rax,QWORD PTR [rbp+0x148]
   100012c47:	sub    esi,DWORD PTR [rax+0x190]
   100012c4d:	mov    DWORD PTR [rbp+0x18],esi
   100012c50:	mov    rax,QWORD PTR [rcx+0xa0]
   100012c57:	mov    DWORD PTR [rsp+0x20],0xc
   100012c5f:	mov    r9d,esi
   100012c62:	mov    r8,QWORD PTR [rax+0x1068]
   100012c69:	mov    rdx,QWORD PTR [rbp+0x148]
   100012c70:	lea    rcx,[rip+0x1abc9]        # 0x10002d840
   100012c77:	call   0x100013ff0
   100012c7c:	mov    r11,QWORD PTR [rip+0x16445]        # 0x1000290c8
   100012c83:	movzx  eax,BYTE PTR [r11+0x9d]
   100012c8b:	shr    al,0x6
   100012c8e:	movzx  r15d,al
   100012c92:	and    r15d,0x1
   100012c96:	mov    DWORD PTR [rbp+0x1c],r15d
   100012c9a:	jne    0x100012cad
   100012c9c:	mov    rax,QWORD PTR [rip+0xfffffffffffeee55]        # 0x100001af8
   100012ca3:	mov    ecx,DWORD PTR [rax]
   100012ca5:	test   ecx,ecx
   100012ca7:	jg     0x100013168
   100012cad:	mov    rax,QWORD PTR [rbp+0x148]
   100012cb4:	cmp    DWORD PTR [rax+0x190],0x0
   100012cbb:	je     0x100013168
   100012cc1:	mov    eax,0xaaaaaaab
   100012cc6:	mul    esi
   100012cc8:	shr    edx,0x3
   100012ccb:	lea    ecx,[rdx+rdx*2]
   100012cce:	shl    ecx,0x2
   100012cd1:	cmp    esi,ecx
   100012cd3:	jne    0x100013168
   100012cd9:	test   esi,esi
   100012cdb:	jne    0x100012ce6
   100012cdd:	test   r15d,r15d
   100012ce0:	je     0x100013168
   100012ce6:	xor    edi,edi
   100012ce8:	mov    DWORD PTR [rbp+0x8],edi
   100012ceb:	mov    DWORD PTR [rbp+0x10],edi
   100012cee:	mov    DWORD PTR [rbp+0xc],0xffffffff
   100012cf5:	mov    QWORD PTR [rbp+0x20],rdi
   100012cf9:	mov    DWORD PTR [rbp+0x0],edi
   100012cfc:	mov    DWORD PTR [rbp+0x4],edi
   100012cff:	mov    rcx,QWORD PTR [rip+0x163ba]        # 0x1000290c0
   100012d06:	mov    rax,QWORD PTR gs:0x30
   100012d0f:	add    rax,rcx
   100012d12:	cmp    rcx,0x1480
   100012d19:	jge    0x100012d21
   100012d1b:	call   QWORD PTR [rip+0xfffffffffffee3ff]        # 0x100001120
   100012d21:	test   rax,rax
   100012d24:	je     0x100012d32
   100012d26:	mov    rcx,QWORD PTR [rax+0xd8]
   100012d2d:	test   rcx,rcx
   100012d30:	jne    0x100012d64
   100012d32:	call   QWORD PTR [rip+0xfffffffffffeee18]        # 0x100001b50
   100012d38:	mov    r11,QWORD PTR [rip+0x16381]        # 0x1000290c0
   100012d3f:	mov    rax,QWORD PTR gs:0x30
   100012d48:	add    rax,r11
   100012d4b:	cmp    r11,0x1480
   100012d52:	jge    0x100012d5d
   100012d54:	mov    ecx,r11d
   100012d57:	call   QWORD PTR [rip+0xfffffffffffee3c3]        # 0x100001120
   100012d5d:	mov    rcx,QWORD PTR [rax+0xd8]
   100012d64:	mov    r12,QWORD PTR [rcx+0x400]
   100012d6b:	mov    QWORD PTR [rbp+0x58],r12
   100012d6f:	mov    rax,QWORD PTR [rip+0xfffffffffffef14a]        # 0x100001ec0
   100012d76:	mov    QWORD PTR [rcx+0x400],rax
   100012d7d:	mov    QWORD PTR [rbp+0x68],r12
   100012d81:	mov    rdx,QWORD PTR [rip+0xfffffffffffeee78]        # 0x100001c00
   100012d88:	lea    rcx,[rbp+0xb0]
   100012d8f:	call   0x100002090
   100012d94:	nop
   100012d95:	mov    rax,QWORD PTR [r14+0xa0]
   100012d9c:	mov    QWORD PTR [rbp+0x78],rax
   100012da0:	mov    eax,DWORD PTR [rax+0xabc]
   100012da6:	mov    DWORD PTR [rbp+0xc],eax
   100012da9:	mov    rax,QWORD PTR [r14+0x98]
   100012db0:	mov    QWORD PTR [rbp+0x20],rax
   100012db4:	mov    rcx,r14
   100012db7:	call   0x100014f20
   100012dbc:	mov    DWORD PTR [rbp+0x0],eax
   100012dbf:	lea    rbx,[r14+0x90]
   100012dc6:	mov    QWORD PTR [rbp+0x30],rbx
   100012dca:	mov    DWORD PTR [rbp+0x38],edi
   100012dcd:	mov    QWORD PTR [rbp+0xa0],rbx
   100012dd4:	call   QWORD PTR [rip+0xfffffffffffeed9e]        # 0x100001b78
   100012dda:	mov    r11d,eax
   100012ddd:	mov    DWORD PTR [rbp+0x14],eax
   100012de0:	mov    DWORD PTR [rbp+0x40],edi
   100012de3:	xor    eax,eax
   100012de5:	lock cmpxchg DWORD PTR [rbx],r11d
   100012dea:	mov    DWORD PTR [rbp+0x64],eax
   100012ded:	mov    eax,edi
   100012def:	sete   al
   100012df2:	mov    DWORD PTR [rbp+0x60],eax
   100012df5:	mov    rbx,QWORD PTR [rbp+0x30]
   100012df9:	test   eax,eax
   100012dfb:	jne    0x100012e0f
   100012dfd:	mov    DWORD PTR [rbp+0x50],0x1
   100012e04:	mov    edx,DWORD PTR [rbp+0x14]
   100012e07:	mov    rcx,rbx
   100012e0a:	call   0x10000e630
   100012e0f:	mov    DWORD PTR [rbp+0x38],0x1
   100012e16:	mov    rax,QWORD PTR [r14+0x98]
   100012e1d:	test   rax,rax
   100012e20:	je     0x100012e37
   100012e22:	mov    rax,QWORD PTR [rax+0x38]
   100012e26:	mov    rcx,QWORD PTR [rax+0x8]
   100012e2a:	mov    QWORD PTR [rbp+0x88],rcx
   100012e31:	mov    QWORD PTR [rbp+0x28],rcx
   100012e35:	jmp    0x100012e3b
   100012e37:	mov    QWORD PTR [rbp+0x28],rdi
   100012e3b:	test   rbx,rbx
   100012e3e:	je     0x100012e4d
   100012e40:	mov    QWORD PTR [rbp+0xa8],rbx
   100012e47:	mov    QWORD PTR [rbp+0x70],rbx
   100012e4b:	mov    DWORD PTR [rbx],edi
   100012e4d:	mov    rax,QWORD PTR [rip+0x1626c]        # 0x1000290c0
   100012e54:	mov    QWORD PTR [rbp+0x48],rax
   100012e58:	mov    rax,QWORD PTR gs:0x30
   100012e61:	mov    rcx,QWORD PTR [rbp+0x48]
   100012e65:	add    rax,rcx
   100012e68:	cmp    rcx,0x1480
   100012e6f:	jge    0x100012e77
   100012e71:	call   QWORD PTR [rip+0xfffffffffffee2a9]        # 0x100001120
   100012e77:	mov    r13,QWORD PTR [rax+0x50]
   100012e7b:	mov    rbx,QWORD PTR [rbp+0x28]
   100012e7f:	test   rbx,rbx
   100012e82:	je     0x100012e8f
   100012e84:	mov    rcx,rbx
   100012e87:	call   QWORD PTR [rip+0xfffffffffffee89b]        # 0x100001728
   100012e8d:	jmp    0x100012e91
   100012e8f:	mov    eax,edi
   100012e91:	mov    DWORD PTR [rbp+0x8],eax
   100012e94:	test   rbx,rbx
   100012e97:	je     0x100012e9e
   100012e99:	mov    eax,DWORD PTR [rbx+0x10]
   100012e9c:	jmp    0x100012ea0
   100012e9e:	mov    eax,edi
   100012ea0:	mov    DWORD PTR [rbp+0x10],eax
   100012ea3:	test   r13,r13
   100012ea6:	je     0x100012eae
   100012ea8:	mov    eax,DWORD PTR [r13+0x4c]
   100012eac:	jmp    0x100012eb0
   100012eae:	mov    eax,edi
   100012eb0:	mov    DWORD PTR [rbp+0x4],eax
   100012eb3:	lea    rcx,[rbp+0xb0]
   100012eba:	call   0x100002030
   100012ebf:	nop
   100012ec0:	jmp    0x100012ed6
   100012ec2:	xor    edi,edi
   100012ec4:	mov    r14,QWORD PTR [rbp+0x140]
   100012ecb:	mov    esi,DWORD PTR [rbp+0x18]
   100012ece:	mov    r15d,DWORD PTR [rbp+0x1c]
   100012ed2:	mov    r12,QWORD PTR [rbp+0x58]
   100012ed6:	mov    rcx,QWORD PTR [rip+0x161e3]        # 0x1000290c0
   100012edd:	mov    rax,QWORD PTR gs:0x30
   100012ee6:	add    rax,rcx
   100012ee9:	cmp    rcx,0x1480
   100012ef0:	jge    0x100012ef8
   100012ef2:	call   QWORD PTR [rip+0xfffffffffffee228]        # 0x100001120
   100012ef8:	test   rax,rax
   100012efb:	je     0x100012f09
   100012efd:	mov    rax,QWORD PTR [rax+0xd8]
   100012f04:	test   rax,rax
   100012f07:	jne    0x100012f3b
   100012f09:	call   QWORD PTR [rip+0xfffffffffffeec41]        # 0x100001b50
   100012f0f:	mov    r11,QWORD PTR [rip+0x161aa]        # 0x1000290c0
   100012f16:	mov    rax,QWORD PTR gs:0x30
   100012f1f:	add    rax,r11
   100012f22:	cmp    r11,0x1480
   100012f29:	jge    0x100012f34
   100012f2b:	mov    ecx,r11d
   100012f2e:	call   QWORD PTR [rip+0xfffffffffffee1ec]        # 0x100001120
   100012f34:	mov    rax,QWORD PTR [rax+0xd8]
   100012f3b:	cmp    DWORD PTR [rax+0x204],0x0
   100012f42:	je     0x100012f4b
   100012f44:	call   QWORD PTR [rip+0xfffffffffffeecd6]        # 0x100001c20
   100012f4a:	nop
   100012f4b:	mov    rcx,QWORD PTR [rip+0x1616e]        # 0x1000290c0
   100012f52:	mov    rax,QWORD PTR gs:0x30
   100012f5b:	add    rax,rcx
   100012f5e:	cmp    rcx,0x1480
   100012f65:	jge    0x100012f6d
   100012f67:	call   QWORD PTR [rip+0xfffffffffffee1b3]        # 0x100001120
   100012f6d:	test   rax,rax
   100012f70:	je     0x100012f7e
   100012f72:	mov    rcx,QWORD PTR [rax+0xd8]
   100012f79:	test   rcx,rcx
   100012f7c:	jne    0x100012fb0
   100012f7e:	call   QWORD PTR [rip+0xfffffffffffeebcc]        # 0x100001b50
   100012f84:	mov    r11,QWORD PTR [rip+0x16135]        # 0x1000290c0
   100012f8b:	mov    rax,QWORD PTR gs:0x30
   100012f94:	add    rax,r11
   100012f97:	cmp    r11,0x1480
   100012f9e:	jge    0x100012fa9
   100012fa0:	mov    ecx,r11d
   100012fa3:	call   QWORD PTR [rip+0xfffffffffffee177]        # 0x100001120
   100012fa9:	mov    rcx,QWORD PTR [rax+0xd8]
   100012fb0:	mov    QWORD PTR [rcx+0x400],r12
   100012fb7:	mov    rcx,QWORD PTR [rip+0x1610a]        # 0x1000290c8
   100012fbe:	test   BYTE PTR [rcx+0x3eb],0x1
   100012fc5:	je     0x100012ff4
   100012fc7:	mov    rcx,QWORD PTR [rbp+0x148]
   100012fce:	call   QWORD PTR [rip+0xfffffffffffeee7c]        # 0x100001e50
   100012fd4:	test   eax,eax
   100012fd6:	jne    0x100012fed
   100012fd8:	mov    rcx,QWORD PTR [rbp+0x148]
   100012fdf:	call   QWORD PTR [rip+0xfffffffffffeee73]        # 0x100001e58
   100012fe5:	test   eax,eax
   100012fe7:	jne    0x100013079
   100012fed:	mov    rcx,QWORD PTR [rip+0x160d4]        # 0x1000290c8
   100012ff4:	mov    eax,0xaaaaaaab
   100012ff9:	mul    esi
   100012ffb:	shr    edx,0x3
   100012ffe:	lea    eax,[rdx+rdx*2]
   100013001:	shl    eax,0x2
   100013004:	cmp    esi,eax
   100013006:	jne    0x100013079
   100013008:	cmp    DWORD PTR [rip+0x25af1],0x0        # 0x100038b00
   10001300f:	je     0x100013016
   100013011:	test   r15d,r15d
   100013014:	je     0x100013079
   100013016:	test   BYTE PTR [rcx+0x9d],0x10
   10001301d:	jne    0x100013079
   10001301f:	mov    DWORD PTR [rip+0x25ad7],0x1        # 0x100038b00
   100013029:	mov    eax,0x20010
   10001302e:	call   0x100002630
   100013033:	sub    rsp,rax
   100013036:	lea    rcx,[rsp+0x70]
   10001303b:	mov    r8d,DWORD PTR [rbp+0x0]
   10001303f:	lea    edx,[rax-0x10]
   100013042:	call   QWORD PTR [rip+0xfffffffffffee4f8]        # 0x100001540
   100013048:	mov    ebx,eax
   10001304a:	mov    DWORD PTR [rsp+0x28],0x100
   100013052:	mov    QWORD PTR [rsp+0x20],rdi
   100013057:	mov    r9d,0x6a0
   10001305d:	lea    r8,[rip+0x134]        # 0x100013198
   100013064:	xor    edx,edx
   100013066:	mov    rcx,r14
   100013069:	call   QWORD PTR [rip+0xfffffffffffee8d9]        # 0x100001948
   10001306f:	test   ebx,ebx
   100013071:	je     0x100013079
   100013073:	call   QWORD PTR [rip+0xfffffffffffee4bf]        # 0x100001538
   100013079:	mov    rcx,QWORD PTR [rbp+0x148]
   100013080:	mov    r9,QWORD PTR [rbp+0x148]
   100013087:	movabs r10,0x346dc5d63886594b
   100013091:	mov    rax,r10
   100013094:	imul   QWORD PTR [r9+0xa8]
   10001309b:	mov    r15,rdx
   10001309e:	sar    r15,0xb
   1000130a2:	mov    rax,r15
   1000130a5:	shr    rax,0x3f
   1000130a9:	add    r15,rax
   1000130ac:	mov    rax,r10
   1000130af:	imul   QWORD PTR [rcx+0x178]
   1000130b6:	mov    r14,rdx
   1000130b9:	sar    r14,0xb
   1000130bd:	mov    rax,r14
   1000130c0:	shr    rax,0x3f
   1000130c4:	add    r14,rax
   1000130c7:	mov    rax,r10
   1000130ca:	imul   QWORD PTR [rcx+0x170]
   1000130d1:	mov    rsi,rdx
   1000130d4:	sar    rsi,0xb
   1000130d8:	mov    r8,rsi
   1000130db:	shr    r8,0x3f
   1000130df:	add    rsi,r8
   1000130e2:	mov    r8,QWORD PTR [rbp+0x148]
   1000130e9:	mov    rax,r10
   1000130ec:	imul   QWORD PTR [r8+0x150]
   1000130f3:	mov    rdi,rdx
   1000130f6:	sar    rdi,0xb
   1000130fa:	mov    rax,rdi
   1000130fd:	shr    rax,0x3f
   100013101:	add    rdi,rax
   100013104:	lea    rcx,[r9+0x90]
   10001310b:	call   QWORD PTR [rip+0xfffffffffffeed4f]        # 0x100001e60
   100013111:	mov    ebx,eax
   100013113:	mov    rcx,QWORD PTR [rbp+0x148]
   10001311a:	call   QWORD PTR [rip+0xfffffffffffeed48]        # 0x100001e68
   100013120:	mov    QWORD PTR [rsp+0x60],r15
   100013125:	mov    DWORD PTR [rsp+0x58],ebx
   100013129:	mov    DWORD PTR [rsp+0x50],eax
   10001312d:	mov    QWORD PTR [rsp+0x48],r14
   100013132:	mov    QWORD PTR [rsp+0x40],rsi
   100013137:	mov    QWORD PTR [rsp+0x38],rdi
   10001313c:	mov    eax,DWORD PTR [rbp+0xc]
   10001313f:	mov    DWORD PTR [rsp+0x30],eax
   100013143:	mov    rax,QWORD PTR [rbp+0x20]
   100013147:	mov    QWORD PTR [rsp+0x28],rax
   10001314c:	mov    eax,DWORD PTR [rbp+0x0]
   10001314f:	mov    DWORD PTR [rsp+0x20],eax
   100013153:	mov    r9d,DWORD PTR [rbp+0x10]
   100013157:	mov    r8d,DWORD PTR [rbp+0x4]
   10001315b:	mov    edx,DWORD PTR [rbp+0x8]
   10001315e:	mov    ecx,0x45db
   100013163:	call   0x1000182d0
   100013168:	mov    rcx,QWORD PTR [rbp+0xf0]
   10001316f:	xor    rcx,rbp
   100013172:	call   0x100002610
   100013177:	mov    rbx,QWORD PTR [rbp+0x150]
   10001317e:	lea    rsp,[rbp+0x100]
   100013185:	pop    r15
   100013187:	pop    r14
   100013189:	pop    r13
   10001318b:	pop    r12
   10001318d:	pop    rdi
   10001318e:	pop    rsi
   10001318f:	pop    rbp
   100013190:	ret    
   100013191:	nop
   100013192:	nop
   100013193:	nop
   100013194:	nop
   100013195:	nop
   100013196:	nop
   100013197:	nop
   100013198:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   10001319c:	outs   dx,BYTE PTR ds:[rsi]
   10001319d:	add    BYTE PTR [rip+0x69007900],ch        # 0x16901aaa3
   1000131a3:	add    BYTE PTR [rbp+0x0],ah
   1000131a6:	ins    BYTE PTR es:[rdi],dx
   1000131a7:	add    BYTE PTR [rax+rax*1+0x69],ah
   1000131ab:	add    BYTE PTR [rsi+0x0],ch
   1000131ae:	add    BYTE PTR [eax],ah
   1000131b1:	add    BYTE PTR [rbx+0x0],dl
   1000131b4:	movsxd eax,DWORD PTR [rax]
   1000131b6:	push   0x64006500
   1000131bb:	add    BYTE PTR [rbp+0x0],dh
   1000131be:	ins    BYTE PTR es:[rdi],dx
   1000131bf:	add    BYTE PTR [rbp+0x0],ah
   1000131c2:	jb     0x1000131c4
   1000131c4:	add    BYTE PTR [rax],al
   1000131c6:	nop
   1000131c7:	nop
   1000131c8:	nop
   1000131c9:	nop
   1000131ca:	nop
   1000131cb:	nop
   1000131cc:	nop
   1000131cd:	nop
   1000131ce:	nop
   1000131cf:	nop
   1000131d0:	mov    QWORD PTR [rsp+0x18],rbp
   1000131d5:	mov    QWORD PTR [rsp+0x20],rsi
   1000131da:	push   rdi
   1000131db:	sub    rsp,0x60
   1000131df:	mov    r9d,DWORD PTR [r8]
   1000131e2:	mov    edi,edx
   1000131e4:	mov    eax,0x88888889
   1000131e9:	mov    rsi,r8
   1000131ec:	movzx  ebp,cx
   1000131ef:	mul    r9d
   1000131f2:	shr    edx,0x5
   1000131f5:	imul   edx,edx,0x3c
   1000131f8:	cmp    r9d,edx
   1000131fb:	jne    0x100013327
   100013201:	mov    QWORD PTR [rsp+0x70],rbx
   100013206:	mov    QWORD PTR [rsp+0x78],r14
   10001320b:	xor    r14d,r14d
   10001320e:	cmp    edi,0x400063
   100013214:	je     0x100013221
   100013216:	mov    ebx,r14d
   100013219:	cmp    edi,0x400101
   10001321f:	jne    0x100013226
   100013221:	mov    ebx,0x1
   100013226:	mov    rax,QWORD PTR [rip+0x15e9b]        # 0x1000290c8
   10001322d:	test   BYTE PTR [rax+0x26],0x80
   100013231:	jne    0x100013294
   100013233:	test   BYTE PTR [rax+0x9d],0x10
   10001323a:	jne    0x100013294
   10001323c:	test   ebx,ebx
   10001323e:	jne    0x10001325d
   100013240:	mov    rcx,r8
   100013243:	call   QWORD PTR [rip+0xfffffffffffeec0f]        # 0x100001e58
   100013249:	test   eax,eax
   10001324b:	jne    0x100013256
   10001324d:	cmp    DWORD PTR [rip+0x258a8],r14d        # 0x100038afc
   100013254:	je     0x100013266
   100013256:	mov    rax,QWORD PTR [rip+0x15e6b]        # 0x1000290c8
   10001325d:	test   BYTE PTR [rax+0x9d],0x40
   100013264:	je     0x100013294
   100013266:	lea    r8,[rip+0xd3]        # 0x100013340
   10001326d:	mov    r9d,0x4a0
   100013273:	xor    edx,edx
   100013275:	xor    ecx,ecx
   100013277:	mov    DWORD PTR [rsp+0x28],0x101
   10001327f:	mov    DWORD PTR [rip+0x25873],0x1        # 0x100038afc
   100013289:	mov    QWORD PTR [rsp+0x20],r14
   10001328e:	call   QWORD PTR [rip+0xfffffffffffee6b4]        # 0x100001948
   100013294:	test   ebx,ebx
   100013296:	jne    0x1000132dc
   100013298:	mov    ebx,DWORD PTR [rsi]
   10001329a:	lea    rcx,[rsi+0x90]
   1000132a1:	call   QWORD PTR [rip+0xfffffffffffeebb9]        # 0x100001e60
   1000132a7:	mov    rcx,rsi
   1000132aa:	mov    edi,eax
   1000132ac:	call   QWORD PTR [rip+0xfffffffffffeebb6]        # 0x100001e68
   1000132b2:	mov    ecx,0x45dc
   1000132b7:	mov    r9d,eax
   1000132ba:	imul   ebx,ebx,0x1388
   1000132c0:	mov    eax,0x10624dd3
   1000132c5:	mov    DWORD PTR [rsp+0x20],edi
   1000132c9:	mul    ebx
   1000132cb:	mov    r8d,edx
   1000132ce:	movzx  edx,bp
   1000132d1:	shr    r8d,0x6
   1000132d5:	call   0x1000182d0
   1000132da:	jmp    0x10001331d
   1000132dc:	mov    rcx,rsi
   1000132df:	mov    DWORD PTR [rsp+0x30],edi
   1000132e3:	mov    QWORD PTR [rsp+0x38],r14
   1000132e8:	mov    QWORD PTR [rsp+0x48],r14
   1000132ed:	mov    QWORD PTR [rsp+0x40],r14
   1000132f2:	mov    QWORD PTR [rsp+0x50],r14
   1000132f7:	call   QWORD PTR [rip+0xfffffffffffeeb6b]        # 0x100001e68
   1000132fd:	lea    rcx,[rsp+0x30]
   100013302:	mov    ebx,eax
   100013304:	call   QWORD PTR [rip+0xfffffffffffeeb66]        # 0x100001e70
   10001330a:	movzx  edx,bp
   10001330d:	mov    r9d,ebx
   100013310:	mov    ecx,0x45e0
   100013315:	mov    r8,rax
   100013318:	call   0x1000182d0
   10001331d:	mov    rbx,QWORD PTR [rsp+0x70]
   100013322:	mov    r14,QWORD PTR [rsp+0x78]
   100013327:	lea    r11,[rsp+0x60]
   10001332c:	mov    rbp,QWORD PTR [r11+0x20]
   100013330:	mov    rsi,QWORD PTR [r11+0x28]
   100013334:	mov    rsp,r11
   100013337:	pop    rdi
   100013338:	ret    
   100013339:	nop
   10001333a:	nop
   10001333b:	nop
   10001333c:	nop
   10001333d:	nop
   10001333e:	nop
   10001333f:	nop
   100013340:	add    BYTE PTR [rbp+0x0],r12b
   100013344:	(bad)  
   100013345:	add    BYTE PTR [rax+rax*1+0x6c],ah
   100013349:	add    BYTE PTR [rdi+0x0],ch
   10001334c:	movsxd eax,DWORD PTR [rax]
   10001334e:	imul   eax,DWORD PTR [rax],0x65
   100013351:	add    BYTE PTR [rax+rax*1+0x20],ah
   100013355:	add    BYTE PTR [rbx+0x0],dl
   100013358:	movsxd eax,DWORD PTR [rax]
   10001335a:	push   0x64006500
   10001335f:	add    BYTE PTR [rbp+0x0],dh
   100013362:	ins    BYTE PTR es:[rdi],dx
   100013363:	add    BYTE PTR [rbp+0x0],ah
   100013366:	jb     0x100013368
   100013368:	jae    0x10001336a
   10001336a:	add    BYTE PTR [rax],al
   10001336c:	nop
   10001336d:	nop
   10001336e:	nop
   10001336f:	nop
   100013370:	nop
   100013371:	nop
   100013372:	nop
   100013373:	nop
   100013374:	nop
   100013375:	nop
   100013376:	nop
   100013377:	nop
   100013378:	nop
   100013379:	nop
   10001337a:	nop
   10001337b:	nop
   10001337c:	nop
   10001337d:	nop
   10001337e:	nop
   10001337f:	nop
   100013380:	mov    QWORD PTR [rsp+0x8],rcx
   100013385:	push   rbp
   100013386:	sub    rsp,0x60
   10001338a:	lea    rbp,[rsp+0x40]
   10001338f:	mov    QWORD PTR [rbp+0x38],rbx
   100013393:	mov    rax,QWORD PTR [rip+0x15e56]        # 0x1000291f0
   10001339a:	xor    rax,rbp
   10001339d:	mov    QWORD PTR [rbp+0x18],rax
   1000133a1:	mov    rax,QWORD PTR [rbp+0x30]
   1000133a5:	mov    DWORD PTR [rsp+0x20],0x2
   1000133ad:	mov    r9d,DWORD PTR [rax]
   1000133b0:	mov    rax,QWORD PTR [rbp+0x30]
   1000133b4:	mov    rdx,QWORD PTR [rbp+0x30]
   1000133b8:	mov    rcx,QWORD PTR [rax+0x188]
   1000133bf:	mov    r8,QWORD PTR [rcx+0x388]
   1000133c6:	lea    rcx,[rip+0x1a473]        # 0x10002d840
   1000133cd:	call   0x100013ff0
   1000133d2:	mov    r11,QWORD PTR [rbp+0x30]
   1000133d6:	test   BYTE PTR [r11],0x1
   1000133da:	jne    0x100013504
   1000133e0:	mov    rdx,QWORD PTR [rbp+0x30]
   1000133e4:	lea    rcx,[rbp+0x0]
   1000133e8:	mov    rdx,QWORD PTR [rdx+0x188]
   1000133ef:	call   0x1000124a0
   1000133f4:	cmp    DWORD PTR [rip+0x256fd],0x0        # 0x100038af8
   1000133fb:	mov    r11,QWORD PTR [rip+0x15cc6]        # 0x1000290c8
   100013402:	je     0x10001340e
   100013404:	test   BYTE PTR [r11+0x9d],0x40
   10001340c:	je     0x100013475
   10001340e:	test   BYTE PTR [r11+0x9d],0x10
   100013416:	jne    0x100013475
   100013418:	mov    eax,0x20010
   10001341d:	mov    DWORD PTR [rip+0x256d1],0x1        # 0x100038af8
   100013427:	call   0x100002630
   10001342c:	mov    r8d,DWORD PTR [rbp+0x0]
   100013430:	sub    rsp,rax
   100013433:	lea    rcx,[rsp+0x40]
   100013438:	lea    edx,[rax-0x10]
   10001343b:	call   QWORD PTR [rip+0xfffffffffffee0ff]        # 0x100001540
   100013441:	lea    r8,[rip+0xd8]        # 0x100013520
   100013448:	mov    r9d,0x2a0
   10001344e:	xor    edx,edx
   100013450:	xor    ecx,ecx
   100013452:	mov    DWORD PTR [rsp+0x28],0x103
   10001345a:	mov    ebx,eax
   10001345c:	mov    QWORD PTR [rsp+0x20],0x0
   100013465:	call   QWORD PTR [rip+0xfffffffffffee4dd]        # 0x100001948
   10001346b:	test   ebx,ebx
   10001346d:	je     0x100013475
   10001346f:	call   QWORD PTR [rip+0xfffffffffffee0c3]        # 0x100001538
   100013475:	mov    r9,QWORD PTR [rbp+0x30]
   100013479:	mov    rax,QWORD PTR [rbp+0x30]
   10001347d:	mov    r8,QWORD PTR [rbp+0x30]
   100013481:	mov    rcx,QWORD PTR [rax+0xa8]
   100013488:	mov    r8,QWORD PTR [r8+0x188]
   10001348f:	movabs rbx,0x346dc5d63886594b
   100013499:	mov    rax,rbx
   10001349c:	imul   rcx
   10001349f:	mov    rax,rbx
   1000134a2:	mov    r11,rdx
   1000134a5:	imul   QWORD PTR [r9+0x178]
   1000134ac:	mov    rax,rbx
   1000134af:	sar    r11,0xb
   1000134b3:	mov    rcx,r11
   1000134b6:	shr    rcx,0x3f
   1000134ba:	mov    r10,rdx
   1000134bd:	add    r11,rcx
   1000134c0:	sar    r10,0xb
   1000134c4:	mov    QWORD PTR [rsp+0x30],r11
   1000134c9:	imul   QWORD PTR [r9+0x170]
   1000134d0:	movzx  r9d,WORD PTR [rbp+0x10]
   1000134d5:	sar    rdx,0xb
   1000134d9:	mov    rcx,r10
   1000134dc:	mov    rax,rdx
   1000134df:	shr    rcx,0x3f
   1000134e3:	add    r10,rcx
   1000134e6:	shr    rax,0x3f
   1000134ea:	mov    ecx,0x45df
   1000134ef:	add    rdx,rax
   1000134f2:	mov    QWORD PTR [rsp+0x28],r10
   1000134f7:	mov    QWORD PTR [rsp+0x20],rdx
   1000134fc:	mov    edx,DWORD PTR [rbp+0x0]
   1000134ff:	call   0x1000182d0
   100013504:	mov    rcx,QWORD PTR [rbp+0x18]
   100013508:	xor    rcx,rbp
   10001350b:	call   0x100002610
   100013510:	mov    rbx,QWORD PTR [rbp+0x38]
   100013514:	lea    rsp,[rbp+0x20]
   100013518:	pop    rbp
   100013519:	ret    
   10001351a:	nop
   10001351b:	nop
   10001351c:	nop
   10001351d:	nop
   10001351e:	nop
   10001351f:	nop
   100013520:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   100013524:	outs   dx,BYTE PTR ds:[rsi]
   100013525:	add    BYTE PTR [rip+0x69007900],ch        # 0x16901ae2b
   10001352b:	add    BYTE PTR [rbp+0x0],ah
   10001352e:	ins    BYTE PTR es:[rdi],dx
   10001352f:	add    BYTE PTR [rax+rax*1+0x69],ah
   100013533:	add    BYTE PTR [rsi+0x0],ch
   100013536:	add    BYTE PTR [eax],ah
   100013539:	add    BYTE PTR [rcx+0x0],cl
   10001353c:	rex.WRXB add BYTE PTR [r11+0x0],r8b
   100013540:	push   rax
   100013541:	add    BYTE PTR [rax],ah
   100013543:	add    BYTE PTR [rax+rax*1+0x69],cl
   100013547:	add    BYTE PTR [rbx+0x0],dh
   10001354a:	je     0x10001354c
   10001354c:	add    BYTE PTR gs:[rsi+0x0],ch
   100013550:	add    BYTE PTR gs:[rdx+0x0],dh
   100013554:	add    BYTE PTR [rax],al
   100013556:	nop
   100013557:	nop
   100013558:	nop
   100013559:	nop
   10001355a:	nop
   10001355b:	nop
   10001355c:	nop
   10001355d:	nop
   10001355e:	nop
   10001355f:	nop
   100013560:	push   rbx
   100013562:	sub    rsp,0x20
   100013566:	mov    rbx,rcx
   100013569:	call   QWORD PTR [rip+0xfffffffffffee1b1]        # 0x100001720
   10001356f:	cmp    eax,0x1
   100013572:	jne    0x10001357a
   100013574:	mov    DWORD PTR [rbx],0x0
   10001357a:	call   QWORD PTR [rip+0xfffffffffffee198]        # 0x100001718
   100013580:	test   eax,eax
   100013582:	jne    0x100013586
   100013584:	mov    DWORD PTR [rbx],eax
   100013586:	add    rsp,0x20
   10001358a:	pop    rbx
   10001358b:	ret    
   10001358c:	mov    rax,QWORD PTR [rip+0xfffffffffffee58d]        # 0x100001b20
   100013593:	mov    rbx,r8
   100013596:	mov    rsi,rcx
   100013599:	mov    rdx,QWORD PTR [rax]
   10001359c:	cmp    DWORD PTR [rdx+0x10],0x3
   1000135a0:	je     0x10001369b
   1000135a6:	movzx  edx,BYTE PTR [r8+0x4]
   1000135ab:	test   edx,edx
   1000135ad:	je     0x1000135bf
   1000135af:	dec    edx
   1000135b1:	je     0x100013667
   1000135b7:	dec    edx
   1000135b9:	jne    0x10001369b
   1000135bf:	cmp    DWORD PTR [rip+0x2552e],0x0        # 0x100038af4
   1000135c6:	mov    QWORD PTR [rsp+0x40],rdi
   1000135cb:	jne    0x100013609
   1000135cd:	cmp    DWORD PTR [r8],0x0
   1000135d1:	jne    0x100013609
   1000135d3:	mov    rax,QWORD PTR [rip+0x15aee]        # 0x1000290c8
   1000135da:	test   BYTE PTR [rax+0x9d],0x80
   1000135e1:	je     0x100013609
   1000135e3:	xor    eax,eax
   1000135e5:	lea    r8,[rip+0xbc]        # 0x1000136a8
   1000135ec:	mov    r9d,0x2a0
   1000135f2:	xor    edx,edx
   1000135f4:	xor    ecx,ecx
   1000135f6:	mov    DWORD PTR [rsp+0x28],0x106
   1000135fe:	mov    QWORD PTR [rsp+0x20],rax
   100013603:	call   QWORD PTR [rip+0xfffffffffffee33f]        # 0x100001948
   100013609:	mov    ecx,DWORD PTR [rbx]
   10001360b:	mov    DWORD PTR [rip+0x254df],0x1        # 0x100038af4
   100013615:	mov    edi,ecx
   100013617:	sub    edi,DWORD PTR [rip+0x254cf]        # 0x100038aec
   10001361d:	cmp    edi,DWORD PTR [rip+0x254cd]        # 0x100038af0
   100013623:	jb     0x100013696
   100013625:	mov    r9,QWORD PTR [rsi+0x8]
   100013629:	mov    r8,QWORD PTR [rsi]
   10001362c:	mov    eax,0x10624dd3
   100013631:	mul    ecx
   100013633:	mov    eax,DWORD PTR [rsi+0x10]
   100013636:	mov    ecx,0x45e2
   10001363b:	shr    edx,0x6
   10001363e:	mov    DWORD PTR [rsp+0x20],eax
   100013642:	call   0x1000182d0
   100013647:	test   edi,edi
   100013649:	jne    0x100013653
   10001364b:	mov    eax,DWORD PTR [rbx]
   10001364d:	mov    DWORD PTR [rip+0x25499],eax        # 0x100038aec
   100013653:	mov    eax,DWORD PTR [rip+0x25497]        # 0x100038af0
   100013659:	cmp    eax,0x1b7740
   10001365e:	jae    0x100013680
   100013660:	add    eax,0x493e0
   100013665:	jmp    0x100013690
   100013667:	xor    eax,eax
   100013669:	mov    DWORD PTR [rip+0x2547d],eax        # 0x100038aec
   10001366f:	mov    DWORD PTR [rip+0x2547b],eax        # 0x100038af0
   100013675:	mov    rbx,QWORD PTR [rsp+0x48]
   10001367a:	add    rsp,0x30
   10001367e:	pop    rsi
   10001367f:	ret    
   100013680:	cmp    eax,0x5265c00
   100013685:	jae    0x10001368b
   100013687:	add    eax,eax
   100013689:	jmp    0x100013690
   10001368b:	add    eax,0x5265c00
   100013690:	mov    DWORD PTR [rip+0x2545a],eax        # 0x100038af0
   100013696:	mov    rdi,QWORD PTR [rsp+0x40]
   10001369b:	mov    rbx,QWORD PTR [rsp+0x48]
   1000136a0:	jmp    0x100002325
   1000136a5:	nop
   1000136a6:	nop
   1000136a7:	nop
   1000136a8:	push   rdi
   1000136a9:	add    BYTE PTR [rdi+0x0],ch
   1000136ac:	jb     0x1000136ae
   1000136ae:	imul   eax,DWORD PTR [rax],0x69
   1000136b1:	add    BYTE PTR [rsi+0x0],ch
   1000136b4:	add    BYTE PTR [eax],ah
   1000136b7:	add    BYTE PTR [rbx+0x0],dl
   1000136ba:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   1000136bf:	add    BYTE PTR [rax+rax*1+0x72],dl
   1000136c3:	add    BYTE PTR [rcx+0x0],ch
   1000136c6:	ins    DWORD PTR es:[rdi],dx
   1000136c7:	add    BYTE PTR [rbp+0x0],ch
   1000136ca:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   1000136cf:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000136d5:	nop
   1000136d6:	nop
   1000136d7:	nop
   1000136d8:	nop
   1000136d9:	nop
   1000136da:	nop
   1000136db:	nop
   1000136dc:	nop
   1000136dd:	nop
   1000136de:	nop
   1000136df:	nop
   1000136e0:	mov    QWORD PTR [rsp+0x10],rdx
   1000136e5:	push   rbp
   1000136e6:	push   r14
   1000136e8:	push   r15
   1000136ea:	sub    rsp,0xb0
   1000136f1:	lea    rbp,[rsp+0x50]
   1000136f6:	mov    QWORD PTR [rbp+0x50],0xfffffffffffffffe
   1000136fe:	mov    QWORD PTR [rbp+0x80],rbx
   100013705:	mov    QWORD PTR [rbp+0x90],rsi
   10001370c:	mov    QWORD PTR [rbp+0x98],rdi
   100013713:	mov    rax,QWORD PTR [rip+0x15ad6]        # 0x1000291f0
   10001371a:	xor    rax,rbp
   10001371d:	mov    QWORD PTR [rbp+0x58],rax
   100013721:	mov    r15,rcx
   100013724:	mov    rax,QWORD PTR [rbp+0x88]
   10001372b:	mov    ebx,DWORD PTR [rax]
   10001372d:	mov    rax,QWORD PTR [rbp+0x88]
   100013734:	sub    ebx,DWORD PTR [rax+0x190]
   10001373a:	mov    rax,QWORD PTR [rip+0x15987]        # 0x1000290c8
   100013741:	movzx  edx,BYTE PTR [rax+0x9d]
   100013748:	shr    dl,0x6
   10001374b:	movzx  edi,dl
   10001374e:	mov    rax,QWORD PTR [rbp+0x88]
   100013755:	mov    rcx,QWORD PTR [rax+0x188]
   10001375c:	mov    DWORD PTR [rsp+0x20],0xc
   100013764:	mov    r9d,ebx
   100013767:	mov    r8,QWORD PTR [rcx+0x388]
   10001376e:	mov    rdx,QWORD PTR [rbp+0x88]
   100013775:	lea    rcx,[rip+0x1a0c4]        # 0x10002d840
   10001377c:	call   0x100013ff0
   100013781:	and    edi,0x1
   100013784:	jne    0x100013797
   100013786:	mov    rax,QWORD PTR [rip+0xfffffffffffee36b]        # 0x100001af8
   10001378d:	mov    ecx,DWORD PTR [rax]
   10001378f:	test   ecx,ecx
   100013791:	jg     0x100013959
   100013797:	mov    eax,0xaaaaaaab
   10001379c:	mul    ebx
   10001379e:	shr    edx,0x3
   1000137a1:	lea    eax,[rdx+rdx*2]
   1000137a4:	shl    eax,0x2
   1000137a7:	cmp    ebx,eax
   1000137a9:	jne    0x100013959
   1000137af:	mov    rax,QWORD PTR [rbp+0x88]
   1000137b6:	mov    rdx,QWORD PTR [rax+0x188]
   1000137bd:	lea    rcx,[rbp+0x38]
   1000137c1:	call   0x1000124a0
   1000137c6:	xor    esi,esi
   1000137c8:	cmp    DWORD PTR [rip+0x2531a],esi        # 0x100038ae8
   1000137ce:	je     0x1000137d4
   1000137d0:	test   edi,edi
   1000137d2:	je     0x100013843
   1000137d4:	mov    rax,QWORD PTR [rip+0x158ed]        # 0x1000290c8
   1000137db:	movzx  ecx,BYTE PTR [rax+0x9d]
   1000137e2:	shr    cl,0x4
   1000137e5:	test   cl,0x1
   1000137e8:	jne    0x100013843
   1000137ea:	mov    DWORD PTR [rip+0x252f4],0x1        # 0x100038ae8
   1000137f4:	mov    eax,0x20010
   1000137f9:	call   0x100002630
   1000137fe:	sub    rsp,rax
   100013801:	lea    rcx,[rsp+0x50]
   100013806:	mov    r8d,DWORD PTR [rbp+0x38]
   10001380a:	lea    edx,[rax-0x10]
   10001380d:	call   QWORD PTR [rip+0xfffffffffffedd2d]        # 0x100001540
   100013813:	mov    ebx,eax
   100013815:	mov    DWORD PTR [rsp+0x28],0x107
   10001381d:	mov    QWORD PTR [rsp+0x20],rsi
   100013822:	mov    r9d,0x2a0
   100013828:	lea    r8,[rip+0x159]        # 0x100013988
   10001382f:	xor    edx,edx
   100013831:	xor    ecx,ecx
   100013833:	call   QWORD PTR [rip+0xfffffffffffee10f]        # 0x100001948
   100013839:	test   ebx,ebx
   10001383b:	je     0x100013843
   10001383d:	call   QWORD PTR [rip+0xfffffffffffedcf5]        # 0x100001538
   100013843:	mov    rbx,QWORD PTR [rbp+0x88]
   10001384a:	mov    rdi,QWORD PTR [rbp+0x88]
   100013851:	mov    DWORD PTR [rbp+0x10],0x400000
   100013858:	mov    QWORD PTR [rbp+0x18],rsi
   10001385c:	mov    QWORD PTR [rbp+0x28],rsi
   100013860:	mov    QWORD PTR [rbp+0x20],rsi
   100013864:	mov    QWORD PTR [rbp+0x30],rsi
   100013868:	mov    rax,QWORD PTR [rbp+0x88]
   10001386f:	mov    rcx,QWORD PTR [rax+0x188]
   100013876:	mov    rcx,QWORD PTR [rcx+0x210]
   10001387d:	mov    QWORD PTR [rbp+0x0],rsi
   100013881:	mov    DWORD PTR [rbp+0x8],esi
   100013884:	lea    r8,[rbp+0x10]
   100013888:	lea    rdx,[rbp+0x0]
   10001388c:	call   0x100014dc0
   100013891:	nop
   100013892:	mov    rax,QWORD PTR [rbp+0x0]
   100013896:	test   rax,rax
   100013899:	je     0x1000138a3
   10001389b:	cmp    DWORD PTR [rbp+0x8],0x0
   10001389f:	je     0x1000138a3
   1000138a1:	mov    DWORD PTR [rax],esi
   1000138a3:	movabs r8,0x346dc5d63886594b
   1000138ad:	mov    rax,r8
   1000138b0:	imul   QWORD PTR [rdi+0xa8]
   1000138b7:	mov    r14,rdx
   1000138ba:	sar    r14,0xb
   1000138be:	mov    rcx,r14
   1000138c1:	shr    rcx,0x3f
   1000138c5:	add    r14,rcx
   1000138c8:	mov    rax,r8
   1000138cb:	imul   QWORD PTR [rbx+0x178]
   1000138d2:	mov    rsi,rdx
   1000138d5:	sar    rsi,0xb
   1000138d9:	mov    rcx,rsi
   1000138dc:	shr    rcx,0x3f
   1000138e0:	add    rsi,rcx
   1000138e3:	mov    rax,r8
   1000138e6:	imul   QWORD PTR [rbx+0x170]
   1000138ed:	mov    rdi,rdx
   1000138f0:	sar    rdi,0xb
   1000138f4:	mov    rax,rdi
   1000138f7:	shr    rax,0x3f
   1000138fb:	add    rdi,rax
   1000138fe:	mov    rax,QWORD PTR [rbp+0x88]
   100013905:	mov    rbx,QWORD PTR [rax+0x188]
   10001390c:	lea    rcx,[rbp+0x10]
   100013910:	call   QWORD PTR [rip+0xfffffffffffee55a]        # 0x100001e70
   100013916:	mov    r11,rax
   100013919:	mov    rax,r15
   10001391c:	cqo    
   10001391e:	and    edx,0x3ff
   100013924:	add    rax,rdx
   100013927:	sar    rax,0xa
   10001392b:	movzx  r9d,WORD PTR [rbp+0x48]
   100013930:	mov    QWORD PTR [rsp+0x40],r14
   100013935:	mov    QWORD PTR [rsp+0x38],rsi
   10001393a:	mov    QWORD PTR [rsp+0x30],rdi
   10001393f:	mov    QWORD PTR [rsp+0x28],r11
   100013944:	mov    QWORD PTR [rsp+0x20],rax
   100013949:	mov    r8,rbx
   10001394c:	mov    edx,DWORD PTR [rbp+0x38]
   10001394f:	mov    ecx,0x45e3
   100013954:	call   0x1000182d0
   100013959:	mov    rcx,QWORD PTR [rbp+0x58]
   10001395d:	xor    rcx,rbp
   100013960:	call   0x100002610
   100013965:	mov    rbx,QWORD PTR [rbp+0x80]
   10001396c:	mov    rsi,QWORD PTR [rbp+0x90]
   100013973:	mov    rdi,QWORD PTR [rbp+0x98]
   10001397a:	lea    rsp,[rbp+0x60]
   10001397e:	pop    r15
   100013980:	pop    r14
   100013982:	pop    rbp
   100013983:	ret    
   100013984:	nop
   100013985:	nop
   100013986:	nop
   100013987:	nop
   100013988:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   10001398c:	outs   dx,BYTE PTR ds:[rsi]
   10001398d:	add    BYTE PTR [rip+0x69007900],ch        # 0x16901b293
   100013993:	add    BYTE PTR [rbp+0x0],ah
   100013996:	ins    BYTE PTR es:[rdi],dx
   100013997:	add    BYTE PTR [rax+rax*1+0x69],ah
   10001399b:	add    BYTE PTR [rsi+0x0],ch
   10001399e:	add    BYTE PTR [eax],ah
   1000139a1:	add    BYTE PTR [rdx+0x0],dl
   1000139a4:	add    BYTE PTR gs:[rbx+0x0],dh
   1000139a8:	outs   dx,DWORD PTR ds:[rsi]
   1000139a9:	add    BYTE PTR [rbp+0x0],dh
   1000139ac:	jb     0x1000139ae
   1000139ae:	movsxd eax,DWORD PTR [rax]
   1000139b0:	add    BYTE PTR gs:[rax],ah
   1000139b3:	add    BYTE PTR [rbp+0x0],cl
   1000139b6:	outs   dx,DWORD PTR ds:[rsi]
   1000139b7:	add    BYTE PTR [rsi+0x0],ch
   1000139ba:	imul   eax,DWORD PTR [rax],0x6f0074
   1000139c0:	jb     0x1000139c2
   1000139c2:	add    BYTE PTR [rax],al
   1000139c4:	nop
   1000139c5:	nop
   1000139c6:	nop
   1000139c7:	nop
   1000139c8:	nop
   1000139c9:	nop
   1000139ca:	nop
   1000139cb:	nop
   1000139cc:	nop
   1000139cd:	nop
   1000139ce:	nop
   1000139cf:	nop
   1000139d0:	push   rbp
   1000139d2:	sub    rsp,0x90
   1000139d9:	lea    rbp,[rsp+0x50]
   1000139de:	mov    QWORD PTR [rbp+0x50],rbx
   1000139e2:	mov    QWORD PTR [rbp+0x58],rdi
   1000139e6:	mov    QWORD PTR [rbp+0x60],r14
   1000139ea:	mov    rax,QWORD PTR [rip+0x157ff]        # 0x1000291f0
   1000139f1:	xor    rax,rbp
   1000139f4:	mov    QWORD PTR [rbp+0x38],rax
   1000139f8:	mov    r14,rcx
   1000139fb:	call   QWORD PTR [rip+0xfffffffffffee47f]        # 0x100001e80
   100013a01:	mov    r9d,DWORD PTR [rax]
   100013a04:	mov    rdi,rax
   100013a07:	sub    r9d,DWORD PTR [rax+0x190]
   100013a0e:	mov    eax,0xaaaaaaab
   100013a13:	mul    r9d
   100013a16:	shr    edx,0x3
   100013a19:	lea    r8d,[rdx+rdx*2]
   100013a1d:	shl    r8d,0x2
   100013a21:	cmp    r9d,r8d
   100013a24:	jne    0x100013b6f
   100013a2a:	mov    rdx,QWORD PTR [rdi+0x188]
   100013a31:	lea    rcx,[rbp+0x0]
   100013a35:	call   0x1000124a0
   100013a3a:	cmp    DWORD PTR [rip+0x250a3],0x0        # 0x100038ae4
   100013a41:	mov    rax,QWORD PTR [rip+0x15680]        # 0x1000290c8
   100013a48:	je     0x100013a53
   100013a4a:	test   BYTE PTR [rax+0x9d],0x40
   100013a51:	je     0x100013ab9
   100013a53:	test   BYTE PTR [rax+0x9d],0x10
   100013a5a:	jne    0x100013ab9
   100013a5c:	mov    eax,0x20010
   100013a61:	mov    DWORD PTR [rip+0x25079],0x1        # 0x100038ae4
   100013a6b:	call   0x100002630
   100013a70:	mov    r8d,DWORD PTR [rbp+0x0]
   100013a74:	sub    rsp,rax
   100013a77:	lea    rcx,[rsp+0x50]
   100013a7c:	lea    edx,[rax-0x10]
   100013a7f:	call   QWORD PTR [rip+0xfffffffffffedabb]        # 0x100001540
   100013a85:	lea    r8,[rip+0x104]        # 0x100013b90
   100013a8c:	mov    r9d,0x2a0
   100013a92:	xor    edx,edx
   100013a94:	xor    ecx,ecx
   100013a96:	mov    DWORD PTR [rsp+0x28],0x108
   100013a9e:	mov    ebx,eax
   100013aa0:	mov    QWORD PTR [rsp+0x20],0x0
   100013aa9:	call   QWORD PTR [rip+0xfffffffffffede99]        # 0x100001948
   100013aaf:	test   ebx,ebx
   100013ab1:	je     0x100013ab9
   100013ab3:	call   QWORD PTR [rip+0xfffffffffffeda7f]        # 0x100001538
   100013ab9:	mov    rax,QWORD PTR [r14]
   100013abc:	mov    rcx,r14
   100013abf:	call   QWORD PTR [rax+0x8]
   100013ac2:	lea    rdx,[rbp+0x18]
   100013ac6:	mov    r8,QWORD PTR [rax]
   100013ac9:	mov    rcx,rax
   100013acc:	call   QWORD PTR [r8]
   100013acf:	movabs r9,0x346dc5d63886594b
   100013ad9:	mov    rax,r9
   100013adc:	imul   QWORD PTR [rdi+0xa8]
   100013ae3:	mov    rax,r9
   100013ae6:	mov    r8,rdx
   100013ae9:	imul   QWORD PTR [rdi+0x178]
   100013af0:	mov    rax,r9
   100013af3:	mov    r9,QWORD PTR [rbp+0x30]
   100013af7:	sar    r8,0xb
   100013afb:	mov    r10,rdx
   100013afe:	mov    rcx,r8
   100013b01:	shr    rcx,0x3f
   100013b05:	sar    r10,0xb
   100013b09:	add    r8,rcx
   100013b0c:	mov    rcx,r10
   100013b0f:	imul   QWORD PTR [rdi+0x170]
   100013b16:	sar    rdx,0xb
   100013b1a:	shr    rcx,0x3f
   100013b1e:	mov    rax,rdx
   100013b21:	add    r10,rcx
   100013b24:	movzx  ecx,WORD PTR [rbp+0x10]
   100013b28:	shr    rax,0x3f
   100013b2c:	add    rdx,rax
   100013b2f:	or     rax,0xffffffffffffffff
   100013b33:	inc    rax
   100013b36:	cmp    WORD PTR [r9+rax*2],0x0
   100013b3c:	jne    0x100013b33
   100013b3e:	mov    QWORD PTR [rsp+0x40],r8
   100013b43:	mov    QWORD PTR [rsp+0x38],r10
   100013b48:	mov    QWORD PTR [rsp+0x30],rdx
   100013b4d:	mov    edx,DWORD PTR [rbp+0x0]
   100013b50:	mov    DWORD PTR [rsp+0x28],ecx
   100013b54:	mov    rcx,QWORD PTR [rdi+0x188]
   100013b5b:	add    eax,eax
   100013b5d:	mov    QWORD PTR [rsp+0x20],rcx
   100013b62:	mov    ecx,0x45e6
   100013b67:	mov    r8d,eax
   100013b6a:	call   0x1000182d0
   100013b6f:	mov    rcx,QWORD PTR [rbp+0x38]
   100013b73:	xor    rcx,rbp
   100013b76:	call   0x100002610
   100013b7b:	mov    rbx,QWORD PTR [rbp+0x50]
   100013b7f:	mov    rdi,QWORD PTR [rbp+0x58]
   100013b83:	mov    r14,QWORD PTR [rbp+0x60]
   100013b87:	lea    rsp,[rbp+0x40]
   100013b8b:	pop    rbp
   100013b8c:	ret    
   100013b8d:	nop
   100013b8e:	nop
   100013b8f:	nop
   100013b90:	push   rbx
   100013b91:	add    BYTE PTR [rax+rax*1+0x61],dh
   100013b95:	add    BYTE PTR [rax+rax*1+0x6c],ch
   100013b99:	add    BYTE PTR [rbp+0x0],ah
   100013b9c:	add    BYTE PTR fs:[rax],ah
   100013b9f:	add    BYTE PTR [rax+rax*1+0x69],al
   100013ba3:	add    BYTE PTR [rbx+0x0],dh
   100013ba6:	jo     0x100013ba8
   100013ba8:	(bad)  
   100013ba9:	add    BYTE PTR [rax+rax*1+0x63],dh
   100013bad:	add    BYTE PTR [rax+0x0],ch
   100013bb0:	add    BYTE PTR gs:[rdx+0x0],dh
   100013bb4:	add    BYTE PTR [rax],al
   100013bb6:	nop
   100013bb7:	nop
   100013bb8:	nop
   100013bb9:	nop
   100013bba:	nop
   100013bbb:	nop
   100013bbc:	nop
   100013bbd:	nop
   100013bbe:	nop
   100013bbf:	nop
   100013bc0:	sub    rsp,0x38
   100013bc4:	test   ecx,ecx
   100013bc6:	je     0x100013c40
   100013bc8:	dec    ecx
   100013bca:	je     0x100013c32
   100013bcc:	dec    ecx
   100013bce:	je     0x100013c24
   100013bd0:	dec    ecx
   100013bd2:	je     0x100013c16
   100013bd4:	dec    ecx
   100013bd6:	je     0x100013c08
   100013bd8:	lea    rax,[rip+0x27569]        # 0x10003b148
   100013bdf:	lea    r8,[rip+0x2745a]        # 0x10003b040
   100013be6:	lea    rdx,[rip+0x27553]        # 0x10003b140
   100013bed:	mov    r9d,0x46c
   100013bf3:	mov    ecx,0x1
   100013bf8:	mov    QWORD PTR [rsp+0x20],rax
   100013bfd:	call   QWORD PTR [rip+0xfffffffffffedf55]        # 0x100001b58
   100013c03:	add    rsp,0x38
   100013c07:	ret    
   100013c08:	mov    ecx,0x4307
   100013c0d:	add    rsp,0x38
   100013c11:	jmp    0x1000182d0
   100013c16:	mov    ecx,0x43fc
   100013c1b:	add    rsp,0x38
   100013c1f:	jmp    0x1000182d0
   100013c24:	mov    ecx,0x43fb
   100013c29:	add    rsp,0x38
   100013c2d:	jmp    0x1000182d0
   100013c32:	mov    ecx,0x43fe
   100013c37:	add    rsp,0x38
   100013c3b:	jmp    0x1000182d0
   100013c40:	mov    ecx,0x43f9
   100013c45:	add    rsp,0x38
   100013c49:	jmp    0x1000182d0
   100013c4e:	nop
   100013c4f:	nop
   100013c50:	nop
   100013c51:	nop
   100013c52:	nop
   100013c53:	nop
   100013c54:	nop
   100013c55:	nop
   100013c56:	nop
   100013c57:	nop
   100013c58:	nop
   100013c59:	nop
   100013c5a:	nop
   100013c5b:	nop
   100013c5c:	nop
   100013c5d:	nop
   100013c5e:	nop
   100013c5f:	nop
   100013c60:	ret    0x0
   100013c63:	nop
   100013c64:	nop
   100013c65:	nop
   100013c66:	nop
   100013c67:	nop
   100013c68:	nop
   100013c69:	nop
   100013c6a:	nop
   100013c6b:	nop
   100013c6c:	nop
   100013c6d:	nop
   100013c6e:	nop
   100013c6f:	nop
   100013c70:	mov    r11,rsp
   100013c73:	mov    QWORD PTR [r11+0x8],rbx
   100013c77:	mov    QWORD PTR [r11+0x10],rbp
   100013c7b:	mov    QWORD PTR [r11+0x18],rsi
   100013c7f:	push   rdi
   100013c80:	push   r14
   100013c82:	push   r15
   100013c84:	sub    rsp,0x70
   100013c88:	lea    rax,[rip+0x201]        # 0x100013e90
   100013c8f:	xor    r14d,r14d
   100013c92:	mov    rsi,rcx
   100013c95:	mov    QWORD PTR [r11-0x58],rax
   100013c99:	lea    rax,[rip+0x1a0]        # 0x100013e40
   100013ca0:	mov    QWORD PTR [r11-0x50],rax
   100013ca4:	lea    rax,[rip+0x27d]        # 0x100013f28
   100013cab:	mov    QWORD PTR [r11-0x48],rax
   100013caf:	lea    rax,[rip+0x23a]        # 0x100013ef0
   100013cb6:	mov    QWORD PTR [r11-0x40],rax
   100013cba:	lea    rax,[rip+0x2bf]        # 0x100013f80
   100013cc1:	mov    QWORD PTR [r11-0x38],rax
   100013cc5:	lea    rax,[rip+0x284]        # 0x100013f50
   100013ccc:	mov    QWORD PTR [r11-0x30],rax
   100013cd0:	lea    rax,[rip+0x2d9]        # 0x100013fb0
   100013cd7:	mov    QWORD PTR [r11-0x28],rax
   100013cdb:	mov    rax,QWORD PTR [rip+0xfffffffffffee2fe]        # 0x100001fe0
   100013ce2:	mov    rbx,QWORD PTR [rax+0x20]
   100013ce6:	test   rbx,rbx
   100013ce9:	je     0x100013cf6
   100013ceb:	test   BYTE PTR [rbx+0x5a0],0x10
   100013cf2:	cmovne rbx,r14
   100013cf6:	mov    QWORD PTR [rcx+0x10],r14
   100013cfa:	mov    QWORD PTR [rcx+0xb0c0],0xffffffffffffffff
   100013d05:	call   0x100003970
   100013d0a:	mov    r8d,DWORD PTR [rip+0x1559f]        # 0x1000292b0
   100013d11:	mov    QWORD PTR [rsp+0x28],rax
   100013d16:	xor    r9d,r9d
   100013d19:	lea    rax,[rip+0xffffffffffffe9c0]        # 0x1000126e0
   100013d20:	lea    ecx,[r9+0x16]
   100013d24:	mov    edx,0x230
   100013d29:	mov    QWORD PTR [rsp+0x20],rax
   100013d2e:	call   QWORD PTR [rip+0xfffffffffffee154]        # 0x100001e88
   100013d34:	mov    rdi,rax
   100013d37:	test   rax,rax
   100013d3a:	je     0x100013d4f
   100013d3c:	lea    rcx,[rbx+0x58]
   100013d40:	mov    rdx,rax
   100013d43:	mov    QWORD PTR [rax],r14
   100013d46:	mov    QWORD PTR [rax+0x8],r14
   100013d4a:	call   0x100014d40
   100013d4f:	mov    ebp,r14d
   100013d52:	mov    r15d,0x80000000
   100013d58:	test   rdi,rdi
   100013d5b:	cmove  ebp,r15d
   100013d5f:	mov    QWORD PTR [rsi],rdi
   100013d62:	call   0x100003970
   100013d67:	mov    r8d,DWORD PTR [rip+0x1553e]        # 0x1000292ac
   100013d6e:	mov    QWORD PTR [rsp+0x28],rax
   100013d73:	xor    r9d,r9d
   100013d76:	lea    edx,[r9+0x38]
   100013d7a:	lea    rax,[rip+0xffffffffffffebcf]        # 0x100012950
   100013d81:	lea    ecx,[rdx-0x21]
   100013d84:	mov    QWORD PTR [rsp+0x20],rax
   100013d89:	call   QWORD PTR [rip+0xfffffffffffee0f9]        # 0x100001e88
   100013d8f:	mov    rdi,rax
   100013d92:	test   rax,rax
   100013d95:	je     0x100013daa
   100013d97:	lea    rcx,[rbx+0x58]
   100013d9b:	mov    rdx,rax
   100013d9e:	mov    QWORD PTR [rax],r14
   100013da1:	mov    QWORD PTR [rax+0x8],r14
   100013da5:	call   0x100014d40
   100013daa:	mov    QWORD PTR [rsi+0x8],rdi
   100013dae:	test   rdi,rdi
   100013db1:	jne    0x100013db6
   100013db3:	or     ebp,r15d
   100013db6:	mov    r9d,r14d
   100013db9:	lea    r10,[rsp+0x30]
   100013dbe:	xchg   ax,ax
   100013dc0:	mov    r8,QWORD PTR [r10]
   100013dc3:	movsxd rax,r9d
   100013dc6:	mov    edx,0x800
   100013dcb:	imul   rax,rax,0x1018
   100013dd2:	add    rax,0x30
   100013dd6:	add    rax,rsi
   100013dd9:	sub    r8,rax
   100013ddc:	nop    DWORD PTR [rax+0x0]
   100013de0:	lea    rcx,[rdx+0x7ffff7fe]
   100013de7:	test   rcx,rcx
   100013dea:	je     0x100013e04
   100013dec:	movzx  ecx,WORD PTR [r8+rax*1]
   100013df1:	test   cx,cx
   100013df4:	je     0x100013e04
   100013df6:	mov    WORD PTR [rax],cx
   100013df9:	add    rax,0x2
   100013dfd:	dec    rdx
   100013e00:	jne    0x100013de0
   100013e02:	jmp    0x100013e09
   100013e04:	test   rdx,rdx
   100013e07:	jne    0x100013e0d
   100013e09:	sub    rax,0x2
   100013e0d:	inc    r9d
   100013e10:	add    r10,0x8
   100013e14:	mov    WORD PTR [rax],r14w
   100013e18:	cmp    r9d,0x7
   100013e1c:	jb     0x100013dc0
   100013e1e:	lea    r11,[rsp+0x70]
   100013e23:	mov    eax,ebp
   100013e25:	mov    rbx,QWORD PTR [r11+0x20]
   100013e29:	mov    rbp,QWORD PTR [r11+0x28]
   100013e2d:	mov    rsi,QWORD PTR [r11+0x30]
   100013e31:	mov    rsp,r11
   100013e34:	pop    r15
   100013e36:	pop    r14
   100013e38:	pop    rdi
   100013e39:	ret    
   100013e3a:	nop
   100013e3b:	nop
   100013e3c:	nop
   100013e3d:	nop
   100013e3e:	nop
   100013e3f:	nop
   100013e40:	pop    rsp
   100013e41:	add    BYTE PTR [rax+0x0],dl
   100013e44:	push   0x73007900
   100013e49:	add    BYTE PTR [rcx+0x0],ch
   100013e4c:	movsxd eax,DWORD PTR [rax]
   100013e4e:	(bad)  
   100013e4f:	add    BYTE PTR [rax+rax*1+0x44],ch
   100013e53:	add    BYTE PTR [rcx+0x0],ch
   100013e56:	jae    0x100013e58
   100013e58:	imul   eax,DWORD PTR [rax],0x28
   100013e5b:	add    BYTE PTR [rdi+0x0],bl
   100013e5e:	push   rsp
   100013e5f:	add    BYTE PTR [rdi+0x0],ch
   100013e62:	je     0x100013e64
   100013e64:	(bad)  
   100013e65:	add    BYTE PTR [rax+rax*1+0x29],ch
   100013e69:	add    BYTE PTR [rax+rax*1+0x25],bl
   100013e6d:	add    BYTE PTR [rax],ah
   100013e6f:	add    BYTE PTR [rax+rax*1+0x69],al
   100013e73:	add    BYTE PTR [rbx+0x0],dh
   100013e76:	imul   eax,DWORD PTR [rax],0x20
   100013e79:	add    BYTE PTR [rax+rax*1+0x69],dl
   100013e7d:	add    BYTE PTR [rbp+0x0],ch
   100013e80:	add    BYTE PTR gs:[rax],al
   100013e83:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100013e89:	nop
   100013e8a:	nop
   100013e8b:	nop
   100013e8c:	nop
   100013e8d:	nop
   100013e8e:	nop
   100013e8f:	nop
   100013e90:	pop    rsp
   100013e91:	add    BYTE PTR [rax+0x0],dl
   100013e94:	push   0x73007900
   100013e99:	add    BYTE PTR [rcx+0x0],ch
   100013e9c:	movsxd eax,DWORD PTR [rax]
   100013e9e:	(bad)  
   100013e9f:	add    BYTE PTR [rax+rax*1+0x44],ch
   100013ea3:	add    BYTE PTR [rcx+0x0],ch
   100013ea6:	jae    0x100013ea8
   100013ea8:	imul   eax,DWORD PTR [rax],0x28
   100013eab:	add    BYTE PTR [rdi+0x0],bl
   100013eae:	push   rsp
   100013eaf:	add    BYTE PTR [rdi+0x0],ch
   100013eb2:	je     0x100013eb4
   100013eb4:	(bad)  
   100013eb5:	add    BYTE PTR [rax+rax*1+0x29],ch
   100013eb9:	add    BYTE PTR [rax+rax*1+0x41],bl
   100013ebd:	add    BYTE PTR [rsi+0x0],dh
   100013ec0:	add    BYTE PTR [esi],ch
   100013ec3:	add    BYTE PTR [rax],ah
   100013ec5:	add    BYTE PTR [rax+rax*1+0x69],al
   100013ec9:	add    BYTE PTR [rbx+0x0],dh
   100013ecc:	imul   eax,DWORD PTR [rax],0x20
   100013ecf:	add    BYTE PTR [rcx+0x0],dl
   100013ed2:	jne    0x100013ed4
   100013ed4:	add    BYTE PTR gs:[rbp+0x0],dh
   100013ed8:	add    BYTE PTR gs:[rax],ah
   100013edb:	add    BYTE PTR [rax+rax*1+0x65],cl
   100013edf:	add    BYTE PTR [rsi+0x0],ch
   100013ee2:	add    BYTE PTR [eax+eax*1+0x68],dh
   100013ee7:	add    BYTE PTR [rax],al
   100013ee9:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100013eef:	nop
   100013ef0:	pop    rsp
   100013ef1:	add    BYTE PTR [rbp+0x0],cl
   100013ef4:	add    BYTE PTR gs:[rbp+0x0],ch
   100013ef8:	outs   dx,DWORD PTR ds:[rsi]
   100013ef9:	add    BYTE PTR [rdx+0x0],dh
   100013efc:	jns    0x100013efe
   100013efe:	pop    rsp
   100013eff:	add    BYTE PTR [rax+0x0],dl
   100013f02:	(bad)  
   100013f03:	add    BYTE PTR [rdi+0x0],ah
   100013f06:	add    BYTE PTR gs:[rbx+0x0],dh
   100013f0a:	and    BYTE PTR [rax],al
   100013f0c:	rex.WRXB add BYTE PTR [r13+0x0],r14b
   100013f10:	je     0x100013f12
   100013f12:	jo     0x100013f14
   100013f14:	jne    0x100013f16
   100013f16:	je     0x100013f18
   100013f18:	(bad)  
   100013f19:	add    BYTE PTR [rbx+0x0],dh
   100013f1c:	add    BYTE PTR gs:[rbx+0x0],ah
   100013f20:	add    BYTE PTR [rax],al
   100013f22:	nop
   100013f23:	nop
   100013f24:	nop
   100013f25:	nop
   100013f26:	nop
   100013f27:	nop
   100013f28:	pop    rsp
   100013f29:	add    BYTE PTR [rbp+0x0],cl
   100013f2c:	add    BYTE PTR gs:[rbp+0x0],ch
   100013f30:	outs   dx,DWORD PTR ds:[rsi]
   100013f31:	add    BYTE PTR [rdx+0x0],dh
   100013f34:	jns    0x100013f36
   100013f36:	pop    rsp
   100013f37:	add    BYTE PTR [rax+0x0],dl
   100013f3a:	(bad)  
   100013f3b:	add    BYTE PTR [rdi+0x0],ah
   100013f3e:	add    BYTE PTR gs:[rbx+0x0],dh
   100013f42:	(bad)  
   100013f43:	add    BYTE PTR [rbx+0x0],dh
   100013f46:	add    BYTE PTR gs:[rbx+0x0],ah
   100013f4a:	add    BYTE PTR [rax],al
   100013f4c:	nop
   100013f4d:	nop
   100013f4e:	nop
   100013f4f:	nop
   100013f50:	pop    rsp
   100013f51:	add    BYTE PTR [rbp+0x0],cl
   100013f54:	add    BYTE PTR gs:[rbp+0x0],ch
   100013f58:	outs   dx,DWORD PTR ds:[rsi]
   100013f59:	add    BYTE PTR [rdx+0x0],dh
   100013f5c:	jns    0x100013f5e
   100013f5e:	pop    rsp
   100013f5f:	add    BYTE PTR [rcx+0x0],al
   100013f62:	jbe    0x100013f64
   100013f64:	(bad)  
   100013f65:	add    BYTE PTR [rcx+0x0],ch
   100013f68:	ins    BYTE PTR es:[rdi],dx
   100013f69:	add    BYTE PTR [rcx+0x0],ah
   100013f6c:	(bad)  
   100013f6d:	add    BYTE PTR [rax+rax*1+0x65],ch
   100013f71:	add    BYTE PTR [rax],ah
   100013f73:	add    BYTE PTR [rdx+0x0],al
   100013f76:	jns    0x100013f78
   100013f78:	je     0x100013f7a
   100013f7a:	add    BYTE PTR gs:[rbx+0x0],dh
   100013f7e:	add    BYTE PTR [rax],al
   100013f80:	pop    rsp
   100013f81:	add    BYTE PTR [rbp+0x0],cl
   100013f84:	add    BYTE PTR gs:[rbp+0x0],ch
   100013f88:	outs   dx,DWORD PTR ds:[rsi]
   100013f89:	add    BYTE PTR [rdx+0x0],dh
   100013f8c:	jns    0x100013f8e
   100013f8e:	pop    rsp
   100013f8f:	add    BYTE PTR [rax+0x0],dl
   100013f92:	(bad)  
   100013f93:	add    BYTE PTR [rdi+0x0],ah
   100013f96:	add    BYTE PTR gs:[rbx+0x0],dh
   100013f9a:	and    BYTE PTR [rax],al
   100013f9c:	rex.WB add BYTE PTR [r14+0x0],bpl
   100013fa0:	jo     0x100013fa2
   100013fa2:	jne    0x100013fa4
   100013fa4:	je     0x100013fa6
   100013fa6:	(bad)  
   100013fa7:	add    BYTE PTR [rbx+0x0],dh
   100013faa:	add    BYTE PTR gs:[rbx+0x0],ah
   100013fae:	add    BYTE PTR [rax],al
   100013fb0:	pop    rsp
   100013fb1:	add    BYTE PTR [rax+0x0],dl
   100013fb4:	(bad)  
   100013fb5:	add    BYTE PTR [rdi+0x0],ah
   100013fb8:	imul   eax,DWORD PTR [rax],0x67006e
   100013fbe:	and    BYTE PTR [rax],al
   100013fc0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   100013fc4:	ins    BYTE PTR es:[rdi],dx
   100013fc5:	add    BYTE PTR [rbp+0x0],ah
   100013fc8:	sub    BYTE PTR [rax],al
   100013fca:	pop    rdi
   100013fcb:	add    BYTE PTR [rax+rax*1+0x6f],dl
   100013fcf:	add    BYTE PTR [rax+rax*1+0x61],dh
   100013fd3:	add    BYTE PTR [rax+rax*1+0x29],ch
   100013fd7:	add    BYTE PTR [rax+rax*1+0x25],bl
   100013fdb:	add    BYTE PTR [rax],ah
   100013fdd:	add    BYTE PTR [rbp+0x0],dl
   100013fe0:	jae    0x100013fe2
   100013fe2:	(bad)  
   100013fe3:	add    BYTE PTR [rdi+0x0],ah
   100013fe6:	add    BYTE PTR gs:[rax],al
   100013fe9:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100013fef:	nop
   100013ff0:	push   rbp
   100013ff2:	push   rsi
   100013ff3:	push   rdi
   100013ff4:	push   r12
   100013ff6:	push   r13
   100013ff8:	push   r14
   100013ffa:	push   r15
   100013ffc:	lea    rbp,[rsp-0x620]
   100014004:	sub    rsp,0x720
   10001400b:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   100014013:	mov    QWORD PTR [rsp+0x768],rbx
   10001401b:	mov    rax,QWORD PTR [rip+0x151ce]        # 0x1000291f0
   100014022:	xor    rax,rsp
   100014025:	mov    QWORD PTR [rbp+0x610],rax
   10001402c:	mov    DWORD PTR [rsp+0x34],r9d
   100014031:	mov    rdi,rdx
   100014034:	mov    r15,rcx
   100014037:	mov    QWORD PTR [rsp+0x40],rcx
   10001403c:	mov    eax,DWORD PTR [rip+0x24ade]        # 0x100038b20
   100014042:	mov    r10d,DWORD PTR [rbp+0x680]
   100014049:	test   al,0x1
   10001404b:	jne    0x100014067
   10001404d:	or     eax,0x1
   100014050:	mov    DWORD PTR [rip+0x24aca],eax        # 0x100038b20
   100014056:	mov    eax,r10d
   100014059:	shr    eax,1
   10001405b:	mov    DWORD PTR [rip+0x24ac3],eax        # 0x100038b24
   100014061:	mov    eax,DWORD PTR [rip+0x24ab9]        # 0x100038b20
   100014067:	test   al,0x2
   100014069:	jne    0x10001407b
   10001406b:	or     eax,0x2
   10001406e:	mov    DWORD PTR [rip+0x24aac],eax        # 0x100038b20
   100014074:	mov    DWORD PTR [rip+0x24aad],r10d        # 0x100038b28
   10001407b:	xor    r10d,r10d
   10001407e:	mov    DWORD PTR [rsp+0x38],r10d
   100014083:	mov    ebx,r10d
   100014086:	mov    DWORD PTR [rsp+0x30],ebx
   10001408a:	lea    r14,[r8+0x2978]
   100014091:	mov    QWORD PTR [rsp+0x50],r14
   100014096:	mov    r12,QWORD PTR [r14]
   100014099:	mov    DWORD PTR [rbp+0x150],0x238
   1000140a3:	mov    DWORD PTR [rbp+0x130],0x1c
   1000140ad:	xor    edx,edx
   1000140af:	mov    eax,r9d
   1000140b2:	div    DWORD PTR [rip+0x24a6c]        # 0x100038b24
   1000140b8:	test   eax,eax
   1000140ba:	je     0x1000145ca
   1000140c0:	mov    rsi,QWORD PTR [rcx]
   1000140c3:	mov    r13,QWORD PTR [rcx+0x8]
   1000140c7:	test   rsi,rsi
   1000140ca:	jne    0x1000140d5
   1000140cc:	test   r13,r13
   1000140cf:	je     0x1000145ca
   1000140d5:	test   edx,edx
   1000140d7:	jne    0x100014151
   1000140d9:	cmp    QWORD PTR [r14+0x8],rbx
   1000140dd:	jne    0x100014151
   1000140df:	lea    rbx,[rcx+0xb0cc]
   1000140e6:	mov    QWORD PTR [rsp+0x70],rbx
   1000140eb:	mov    DWORD PTR [rsp+0x78],r10d
   1000140f0:	call   QWORD PTR [rip+0xfffffffffffeda82]        # 0x100001b78
   1000140f6:	mov    edx,eax
   1000140f8:	xor    eax,eax
   1000140fa:	lock cmpxchg DWORD PTR [rbx],edx
   1000140fe:	mov    r10d,0x0
   100014104:	mov    ecx,r10d
   100014107:	sete   cl
   10001410a:	mov    rbx,QWORD PTR [rsp+0x70]
   10001410f:	test   ecx,ecx
   100014111:	jne    0x10001411e
   100014113:	mov    rcx,rbx
   100014116:	call   0x100014910
   10001411b:	xor    r10d,r10d
   10001411e:	mov    DWORD PTR [rsp+0x78],0x1
   100014126:	mov    rax,QWORD PTR [r15+0x10]
   10001412a:	test   rax,rax
   10001412d:	je     0x100014136
   10001412f:	cmp    QWORD PTR [rax+0x8],0x0
   100014134:	jne    0x100014145
   100014136:	mov    QWORD PTR [r15+0x10],r14
   10001413a:	mov    rax,QWORD PTR [rdi+0x188]
   100014141:	mov    QWORD PTR [r14+0x8],rax
   100014145:	test   rbx,rbx
   100014148:	je     0x10001414d
   10001414a:	mov    DWORD PTR [rbx],r10d
   10001414d:	mov    ebx,DWORD PTR [rsp+0x30]
   100014151:	mov    rax,QWORD PTR [r14+0x8]
   100014155:	test   rax,rax
   100014158:	je     0x1000145ca
   10001415e:	cmp    rax,QWORD PTR [rdi+0x188]
   100014165:	jne    0x1000145ca
   10001416b:	mov    edx,0x1
   100014170:	mov    rcx,r14
   100014173:	call   QWORD PTR [rip+0xfffffffffffedd17]        # 0x100001e90
   100014179:	cmp    r12,0xffffffffffffffff
   10001417d:	jne    0x1000141bd
   10001417f:	xor    edx,edx
   100014181:	lea    ecx,[rdx+0x6]
   100014184:	call   QWORD PTR [rip+0xfffffffffffecf3e]        # 0x1000010c8
   10001418a:	mov    r12,rax
   10001418d:	cmp    rax,0xffffffffffffffff
   100014191:	je     0x1000145ca
   100014197:	mov    QWORD PTR [r14],rax
   10001419a:	test   rsi,rsi
   10001419d:	je     0x1000141a7
   10001419f:	mov    QWORD PTR [rsi+0x30],0x0
   1000141a7:	test   r13,r13
   1000141aa:	je     0x1000141b4
   1000141ac:	mov    QWORD PTR [r13+0x30],0x0
   1000141b4:	mov    ebx,0x1
   1000141b9:	mov    DWORD PTR [rsp+0x30],ebx
   1000141bd:	test   rsi,rsi
   1000141c0:	je     0x1000143a7
   1000141c6:	mov    rax,QWORD PTR [rip+0x14efb]        # 0x1000290c8
   1000141cd:	movzx  edi,BYTE PTR [rax+0x9e]
   1000141d4:	and    edi,0x1
   1000141d7:	lea    rdx,[rbp+0x150]
   1000141de:	mov    rcx,r12
   1000141e1:	call   QWORD PTR [rip+0xfffffffffffecee9]        # 0x1000010d0
   1000141e7:	test   eax,eax
   1000141e9:	je     0x1000143a7
   1000141ef:	xor    r15d,r15d
   1000141f2:	mov    r8d,DWORD PTR [rbp+0x158]
   1000141f9:	xor    edx,edx
   1000141fb:	mov    ecx,0x400
   100014200:	call   QWORD PTR [rip+0xfffffffffffeced2]        # 0x1000010d8
   100014206:	mov    rbx,rax
   100014209:	test   rax,rax
   10001420c:	je     0x100014386
   100014212:	mov    r8d,0x50
   100014218:	lea    rdx,[rbp+0x390]
   10001421f:	mov    rcx,rax
   100014222:	call   QWORD PTR [rip+0x14df8]        # 0x100029020
   100014228:	test   eax,eax
   10001422a:	je     0x10001437d
   100014230:	lea    r8,[rbp+0x17c]
   100014237:	test   edi,edi
   100014239:	cmove  r8,r15
   10001423d:	mov    DWORD PTR [rbp+0x3e0],r15d
   100014244:	xor    eax,eax
   100014246:	mov    QWORD PTR [rbp+0x3e0],rax
   10001424d:	mov    eax,DWORD PTR [rbp+0x158]
   100014253:	mov    DWORD PTR [rbp+0x3f0],eax
   100014259:	mov    eax,DWORD PTR [rbp+0x394]
   10001425f:	mov    DWORD PTR [rbp+0x5fc],eax
   100014265:	mov    rax,QWORD PTR [rbp+0x3a0]
   10001426c:	mov    QWORD PTR [rbp+0x600],rax
   100014273:	mov    rax,QWORD PTR [rbp+0x3d8]
   10001427a:	mov    QWORD PTR [rbp+0x608],rax
   100014281:	test   r8,r8
   100014284:	je     0x1000142d3
   100014286:	mov    edx,0x104
   10001428b:	lea    rax,[rbp+0x3f4]
   100014292:	lea    rcx,[rbp+0x3f4]
   100014299:	sub    r8,rcx
   10001429c:	nop    DWORD PTR [rax+0x0]
   1000142a0:	lea    rcx,[rdx+0x7ffffefa]
   1000142a7:	test   rcx,rcx
   1000142aa:	je     0x1000142c4
   1000142ac:	movzx  ecx,WORD PTR [r8+rax*1]
   1000142b1:	test   cx,cx
   1000142b4:	je     0x1000142c4
   1000142b6:	mov    WORD PTR [rax],cx
   1000142b9:	add    rax,0x2
   1000142bd:	dec    rdx
   1000142c0:	jne    0x1000142a0
   1000142c2:	jmp    0x1000142c9
   1000142c4:	test   rdx,rdx
   1000142c7:	jne    0x1000142cd
   1000142c9:	sub    rax,0x2
   1000142cd:	mov    WORD PTR [rax],r15w
   1000142d1:	jmp    0x1000142db
   1000142d3:	mov    WORD PTR [rbp+0x3f4],r15w
   1000142db:	mov    DWORD PTR [rbp+0x118],r15d
   1000142e2:	mov    QWORD PTR [rbp+0x120],r15
   1000142e9:	cmp    QWORD PTR [rsi+0x40],r15
   1000142ed:	je     0x100014366
   1000142ef:	xor    edx,edx
   1000142f1:	mov    r8d,0xa8
   1000142f7:	lea    rcx,[rbp+0x80]
   1000142fe:	call   0x10001f80c
   100014303:	mov    r11,QWORD PTR [rip+0xfffffffffffedc1e]        # 0x100001f28
   10001430a:	mov    rax,QWORD PTR [r11]
   10001430d:	lea    r9,[rbp+0x90]
   100014314:	lea    r8,[rbp+0x98]
   10001431b:	mov    edx,0x10
   100014320:	lea    ecx,[rdx-0xf]
   100014323:	call   rax
   100014325:	movzx  r11d,ax
   100014329:	mov    DWORD PTR [rbp+0x118],r11d
   100014330:	mov    ecx,DWORD PTR [rbp+0x90]
   100014336:	mov    eax,ecx
   100014338:	shl    eax,0xf
   10001433b:	not    eax
   10001433d:	add    ecx,eax
   10001433f:	mov    eax,ecx
   100014341:	shr    eax,0xa
   100014344:	xor    eax,ecx
   100014346:	lea    ecx,[rax+rax*8]
   100014349:	mov    eax,ecx
   10001434b:	shr    eax,0x6
   10001434e:	xor    ecx,eax
   100014350:	mov    eax,ecx
   100014352:	shl    eax,0xb
   100014355:	not    eax
   100014357:	add    ecx,eax
   100014359:	mov    eax,ecx
   10001435b:	shr    eax,0x10
   10001435e:	xor    ecx,eax
   100014360:	mov    DWORD PTR [rbp+0x90],ecx
   100014366:	lea    r8,[rbp+0x80]
   10001436d:	lea    rdx,[rbp+0x3e0]
   100014374:	mov    rcx,rsi
   100014377:	call   QWORD PTR [rip+0xfffffffffffedb23]        # 0x100001ea0
   10001437d:	mov    rcx,rbx
   100014380:	call   QWORD PTR [rip+0xfffffffffffecda2]        # 0x100001128
   100014386:	lea    rdx,[rbp+0x150]
   10001438d:	mov    rcx,r12
   100014390:	call   QWORD PTR [rip+0xfffffffffffecd4a]        # 0x1000010e0
   100014396:	test   eax,eax
   100014398:	jne    0x1000141f2
   10001439e:	mov    r15,QWORD PTR [rsp+0x40]
   1000143a3:	mov    ebx,DWORD PTR [rsp+0x30]
   1000143a7:	test   r13,r13
   1000143aa:	je     0x1000145ca
   1000143b0:	test   ebx,ebx
   1000143b2:	jne    0x1000143c8
   1000143b4:	xor    edx,edx
   1000143b6:	mov    eax,DWORD PTR [rsp+0x34]
   1000143ba:	div    DWORD PTR [rip+0x24768]        # 0x100038b28
   1000143c0:	test   edx,edx
   1000143c2:	jne    0x1000145ca
   1000143c8:	lea    rdx,[rbp+0x130]
   1000143cf:	mov    rcx,r12
   1000143d2:	call   QWORD PTR [rip+0xfffffffffffecd10]        # 0x1000010e8
   1000143d8:	test   eax,eax
   1000143da:	je     0x100014563
   1000143e0:	movsxd r15,ebx
   1000143e3:	mov    rbx,QWORD PTR [rsp+0x40]
   1000143e8:	add    rbx,0x70c0
   1000143ef:	xor    r14d,r14d
   1000143f2:	nop    WORD PTR [rax+rax*1]
   1000143f7:	mov    rdi,r14
   1000143fa:	mov    rsi,r14
   1000143fd:	mov    r8d,DWORD PTR [rbp+0x138]
   100014404:	xor    edx,edx
   100014406:	lea    ecx,[rdx+0x40]
   100014409:	call   QWORD PTR [rip+0xfffffffffffecce1]        # 0x1000010f0
   10001440f:	mov    r14,rax
   100014412:	test   rax,rax
   100014415:	je     0x10001444e
   100014417:	lea    rax,[rsp+0x58]
   10001441c:	mov    QWORD PTR [rsp+0x20],rax
   100014421:	lea    r9,[rsp+0x48]
   100014426:	lea    r8,[rbp-0x48]
   10001442a:	lea    rdx,[rbp-0x38]
   10001442e:	mov    rcx,r14
   100014431:	call   QWORD PTR [rip+0xfffffffffffeccc1]        # 0x1000010f8
   100014437:	test   eax,eax
   100014439:	je     0x10001444e
   10001443b:	mov    rdi,QWORD PTR [rsp+0x48]
   100014440:	mov    rsi,QWORD PTR [rsp+0x58]
   100014445:	mov    rcx,r14
   100014448:	call   QWORD PTR [rip+0xfffffffffffeccda]        # 0x100001128
   10001444e:	xor    r14d,r14d
   100014451:	test   r15,r15
   100014454:	je     0x100014465
   100014456:	mov    QWORD PTR [rbx],rdi
   100014459:	mov    QWORD PTR [rbx+0x2000],rsi
   100014460:	jmp    0x10001451f
   100014465:	mov    DWORD PTR [rbp-0x80],r14d
   100014469:	xor    eax,eax
   10001446b:	mov    QWORD PTR [rbp-0x80],rax
   10001446f:	mov    eax,DWORD PTR [rbp+0x13c]
   100014475:	mov    DWORD PTR [rbp-0x70],eax
   100014478:	mov    eax,DWORD PTR [rbp+0x138]
   10001447e:	mov    DWORD PTR [rbp-0x6c],eax
   100014481:	mov    rax,QWORD PTR [rbx+0x2000]
   100014488:	mov    QWORD PTR [rbp-0x68],rax
   10001448c:	mov    QWORD PTR [rbp-0x60],rsi
   100014490:	mov    rax,QWORD PTR [rbx]
   100014493:	mov    QWORD PTR [rbp-0x58],rax
   100014497:	mov    QWORD PTR [rbp-0x50],rdi
   10001449b:	mov    DWORD PTR [rbp+0x68],r14d
   10001449f:	mov    QWORD PTR [rbp+0x70],r14
   1000144a3:	cmp    QWORD PTR [r13+0x40],r14
   1000144a7:	je     0x10001450e
   1000144a9:	xor    edx,edx
   1000144ab:	mov    r8d,0xa8
   1000144b1:	lea    rcx,[rbp-0x30]
   1000144b5:	call   0x10001f80c
   1000144ba:	mov    r11,QWORD PTR [rip+0xfffffffffffeda67]        # 0x100001f28
   1000144c1:	mov    rax,QWORD PTR [r11]
   1000144c4:	lea    r9,[rbp-0x20]
   1000144c8:	lea    r8,[rbp-0x18]
   1000144cc:	mov    edx,0x10
   1000144d1:	lea    ecx,[rdx-0xf]
   1000144d4:	call   rax
   1000144d6:	movzx  r11d,ax
   1000144da:	mov    DWORD PTR [rbp+0x68],r11d
   1000144de:	mov    ecx,DWORD PTR [rbp-0x20]
   1000144e1:	mov    eax,ecx
   1000144e3:	shl    eax,0xf
   1000144e6:	not    eax
   1000144e8:	add    ecx,eax
   1000144ea:	mov    eax,ecx
   1000144ec:	shr    eax,0xa
   1000144ef:	xor    eax,ecx
   1000144f1:	lea    ecx,[rax+rax*8]
   1000144f4:	mov    eax,ecx
   1000144f6:	shr    eax,0x6
   1000144f9:	xor    ecx,eax
   1000144fb:	mov    eax,ecx
   1000144fd:	shl    eax,0xb
   100014500:	not    eax
   100014502:	add    ecx,eax
   100014504:	mov    eax,ecx
   100014506:	shr    eax,0x10
   100014509:	xor    ecx,eax
   10001450b:	mov    DWORD PTR [rbp-0x20],ecx
   10001450e:	lea    r8,[rbp-0x30]
   100014512:	lea    rdx,[rbp-0x80]
   100014516:	mov    rcx,r13
   100014519:	call   QWORD PTR [rip+0xfffffffffffed981]        # 0x100001ea0
   10001451f:	mov    edi,DWORD PTR [rsp+0x38]
   100014523:	inc    edi
   100014525:	mov    DWORD PTR [rsp+0x38],edi
   100014529:	add    rbx,0x8
   10001452d:	lea    rdx,[rbp+0x130]
   100014534:	mov    rcx,r12
   100014537:	call   QWORD PTR [rip+0xfffffffffffecbc3]        # 0x100001100
   10001453d:	test   eax,eax
   10001453f:	je     0x10001454d
   100014541:	cmp    edi,0x400
   100014547:	jb     0x1000143f7
   10001454d:	mov    edx,DWORD PTR [rsp+0x30]
   100014551:	mov    r15,QWORD PTR [rsp+0x40]
   100014556:	mov    rcx,r15
   100014559:	call   0x100014630
   10001455e:	mov    r14,QWORD PTR [rsp+0x50]
   100014563:	xor    edx,edx
   100014565:	mov    eax,DWORD PTR [rsp+0x34]
   100014569:	div    DWORD PTR [rip+0x245b9]        # 0x100038b28
   10001456f:	test   edx,edx
   100014571:	jne    0x1000145ca
   100014573:	xor    edx,edx
   100014575:	mov    rcx,r14
   100014578:	call   QWORD PTR [rip+0xfffffffffffed91a]        # 0x100001e98
   10001457e:	lea    rbx,[r15+0xb0cc]
   100014585:	mov    QWORD PTR [rsp+0x60],rbx
   10001458a:	xor    edi,edi
   10001458c:	mov    DWORD PTR [rsp+0x68],edi
   100014590:	call   QWORD PTR [rip+0xfffffffffffed5e2]        # 0x100001b78
   100014596:	mov    edx,eax
   100014598:	xor    eax,eax
   10001459a:	lock cmpxchg DWORD PTR [rbx],edx
   10001459e:	mov    ecx,edi
   1000145a0:	sete   cl
   1000145a3:	mov    rbx,QWORD PTR [rsp+0x60]
   1000145a8:	test   ecx,ecx
   1000145aa:	jne    0x1000145b4
   1000145ac:	mov    rcx,rbx
   1000145af:	call   0x100014910
   1000145b4:	mov    DWORD PTR [rsp+0x68],0x1
   1000145bc:	mov    QWORD PTR [rip+0x1928d],rdi        # 0x10002d850
   1000145c3:	test   rbx,rbx
   1000145c6:	je     0x1000145ca
   1000145c8:	mov    DWORD PTR [rbx],edi
   1000145ca:	mov    rcx,QWORD PTR [rbp+0x610]
   1000145d1:	xor    rcx,rsp
   1000145d4:	call   0x100002610
   1000145d9:	mov    rbx,QWORD PTR [rsp+0x768]
   1000145e1:	add    rsp,0x720
   1000145e8:	pop    r15
   1000145ea:	pop    r14
   1000145ec:	pop    r13
   1000145ee:	pop    r12
   1000145f0:	pop    rdi
   1000145f1:	pop    rsi
   1000145f2:	pop    rbp
   1000145f3:	ret    
   1000145f4:	nop
   1000145f5:	nop
   1000145f6:	nop
   1000145f7:	nop
   1000145f8:	nop
   1000145f9:	nop
   1000145fa:	nop
   1000145fb:	nop
   1000145fc:	nop
   1000145fd:	nop
   1000145fe:	nop
   1000145ff:	nop
   100014600:	mov    QWORD PTR [rsp+0x8],rcx
   100014605:	sub    rsp,0x18
   100014609:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   100014611:	mov    rax,QWORD PTR [rcx]
   100014614:	test   rax,rax
   100014617:	je     0x100014625
   100014619:	cmp    DWORD PTR [rcx+0x8],0x0
   10001461d:	je     0x100014625
   10001461f:	mov    DWORD PTR [rax],0x0
   100014625:	add    rsp,0x18
   100014629:	ret    
   10001462a:	nop
   10001462b:	nop
   10001462c:	nop
   10001462d:	nop
   10001462e:	nop
   10001462f:	nop
   100014630:	mov    QWORD PTR [rsp+0x8],rbx
   100014635:	mov    QWORD PTR [rsp+0x10],rbp
   10001463a:	mov    QWORD PTR [rsp+0x18],rsi
   10001463f:	push   rdi
   100014640:	sub    rsp,0x20
   100014644:	mov    ebp,edx
   100014646:	mov    rdi,rcx
   100014649:	test   edx,edx
   10001464b:	je     0x1000146e0
   100014651:	mov    rcx,QWORD PTR [rcx+0xb0c0]
   100014658:	cmp    rcx,0xffffffffffffffff
   10001465c:	je     0x10001466a
   10001465e:	call   QWORD PTR [rip+0xfffffffffffecea4]        # 0x100001508
   100014664:	mov    DWORD PTR [rdi+0xb0c8],eax
   10001466a:	lea    r8,[rdi+0xb0c0]
   100014671:	xor    edx,edx
   100014673:	xor    ecx,ecx
   100014675:	call   QWORD PTR [rip+0xfffffffffffece85]        # 0x100001500
   10001467b:	mov    DWORD PTR [rdi+0xb0c8],eax
   100014681:	test   eax,eax
   100014683:	jne    0x1000146e0
   100014685:	xor    ebx,ebx
   100014687:	nop    WORD PTR [rax+rax*1+0x0]
   100014690:	mov    rcx,QWORD PTR [rdi+0xb0c0]
   100014697:	movsxd rax,ebx
   10001469a:	lea    r9,[rdi+0x18]
   10001469e:	imul   rax,rax,0x1018
   1000146a5:	add    r9,rax
   1000146a8:	xor    r8d,r8d
   1000146ab:	lea    rdx,[r9+0x18]
   1000146af:	call   QWORD PTR [rip+0xfffffffffffece33]        # 0x1000014e8
   1000146b5:	mov    DWORD PTR [rdi+0xb0c8],eax
   1000146bb:	test   eax,eax
   1000146bd:	jne    0x1000146c8
   1000146bf:	inc    ebx
   1000146c1:	cmp    ebx,0x7
   1000146c4:	jb     0x100014690
   1000146c6:	jmp    0x1000146e0
   1000146c8:	mov    rcx,QWORD PTR [rdi+0xb0c0]
   1000146cf:	call   QWORD PTR [rip+0xfffffffffffece33]        # 0x100001508
   1000146d5:	mov    QWORD PTR [rdi+0xb0c0],0xffffffffffffffff
   1000146e0:	cmp    DWORD PTR [rdi+0xb0c8],0x0
   1000146e7:	jne    0x10001474f
   1000146e9:	mov    rcx,QWORD PTR [rdi+0xb0c0]
   1000146f0:	call   QWORD PTR [rip+0xfffffffffffecdfa]        # 0x1000014f0
   1000146f6:	mov    DWORD PTR [rdi+0xb0c8],eax
   1000146fc:	test   ebp,ebp
   1000146fe:	jne    0x10001474f
   100014700:	test   eax,eax
   100014702:	jne    0x100014737
   100014704:	lea    rbx,[rdi+0x18]
   100014708:	lea    esi,[rax+0x7]
   10001470b:	nop    DWORD PTR [rax+rax*1+0x0]
   100014710:	mov    rcx,QWORD PTR [rbx]
   100014713:	lea    r9,[rbx+0x8]
   100014717:	xor    r8d,r8d
   10001471a:	mov    edx,0x200
   10001471f:	call   QWORD PTR [rip+0xfffffffffffecdd3]        # 0x1000014f8
   100014725:	add    rbx,0x1018
   10001472c:	mov    DWORD PTR [rdi+0xb0c8],eax
   100014732:	dec    rsi
   100014735:	jne    0x100014710
   100014737:	mov    rcx,QWORD PTR [rdi+0xb0c0]
   10001473e:	call   QWORD PTR [rip+0xfffffffffffecdc4]        # 0x100001508
   100014744:	mov    QWORD PTR [rdi+0xb0c0],0xffffffffffffffff
   10001474f:	mov    rbx,QWORD PTR [rsp+0x30]
   100014754:	mov    rbp,QWORD PTR [rsp+0x38]
   100014759:	mov    rsi,QWORD PTR [rsp+0x40]
   10001475e:	add    rsp,0x20
   100014762:	pop    rdi
   100014763:	ret    
   100014764:	nop
   100014765:	nop
   100014766:	nop
   100014767:	nop
   100014768:	nop
   100014769:	nop
   10001476a:	nop
   10001476b:	nop
   10001476c:	nop
   10001476d:	nop
   10001476e:	nop
   10001476f:	nop
   100014770:	mov    ecx,0xc2ee
   100014775:	jmp    0x1000182d0
   10001477a:	nop
   10001477b:	nop
   10001477c:	nop
   10001477d:	nop
   10001477e:	nop
   10001477f:	nop
   100014780:	sub    rsp,0x28
   100014784:	mov    rcx,QWORD PTR [rcx]
   100014787:	test   rcx,rcx
   10001478a:	je     0x100014796
   10001478c:	mov    rax,QWORD PTR [rcx]
   10001478f:	mov    edx,0x1
   100014794:	call   QWORD PTR [rax]
   100014796:	add    rsp,0x28
   10001479a:	ret    
   10001479b:	nop
   10001479c:	nop
   10001479d:	nop
   10001479e:	nop
   10001479f:	nop
   1000147a0:	nop
   1000147a1:	nop
   1000147a2:	nop
   1000147a3:	nop
   1000147a4:	nop
   1000147a5:	nop
   1000147a6:	nop
   1000147a7:	nop
   1000147a8:	nop
   1000147a9:	nop
   1000147aa:	nop
   1000147ab:	nop
   1000147ac:	nop
   1000147ad:	nop
   1000147ae:	nop
   1000147af:	nop
   1000147b0:	mov    rax,QWORD PTR [rcx]
   1000147b3:	test   rax,rax
   1000147b6:	je     0x1000147c4
   1000147b8:	cmp    DWORD PTR [rcx+0x8],0x0
   1000147bc:	je     0x1000147c4
   1000147be:	mov    DWORD PTR [rax],0x0
   1000147c4:	repz ret 
   1000147c6:	nop
   1000147c7:	nop
   1000147c8:	nop
   1000147c9:	nop
   1000147ca:	nop
   1000147cb:	nop
   1000147cc:	nop
   1000147cd:	nop
   1000147ce:	nop
   1000147cf:	nop
   1000147d0:	push   rbp
   1000147d2:	push   rsi
   1000147d3:	push   rdi
   1000147d4:	sub    rsp,0x40
   1000147d8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1000147e1:	mov    QWORD PTR [rsp+0x68],rbx
   1000147e6:	mov    rsi,rdx
   1000147e9:	mov    rdi,rcx
   1000147ec:	xor    ebp,ebp
   1000147ee:	mov    QWORD PTR [rcx],rbp
   1000147f1:	mov    DWORD PTR [rcx+0x8],ebp
   1000147f4:	lea    rcx,[rsp+0x60]
   1000147f9:	call   0x100014cb0
   1000147fe:	lea    rbx,[rsp+0x60]
   100014803:	test   eax,eax
   100014805:	cmovs  rbx,rbp
   100014809:	mov    QWORD PTR [rsp+0x70],rbx
   10001480e:	js     0x100014822
   100014810:	mov    rdx,QWORD PTR [rsi+0x10]
   100014814:	mov    rcx,QWORD PTR [rsi]
   100014817:	call   QWORD PTR [rsi+0x8]
   10001481a:	mov    DWORD PTR [rdi],0x5
   100014820:	jmp    0x10001483b
   100014822:	mov    edx,eax
   100014824:	lea    rcx,[rsp+0x28]
   100014829:	call   0x1000148f0
   10001482e:	mov    ecx,DWORD PTR [rax]
   100014830:	mov    DWORD PTR [rdi],ecx
   100014832:	mov    ecx,DWORD PTR [rax+0x4]
   100014835:	mov    DWORD PTR [rdi+0x4],ecx
   100014838:	mov    eax,DWORD PTR [rax+0x8]
   10001483b:	mov    DWORD PTR [rdi+0x8],eax
   10001483e:	test   rbx,rbx
   100014841:	je     0x10001484a
   100014843:	mov    ecx,DWORD PTR [rbx]
   100014845:	call   0x100014c00
   10001484a:	mov    rax,rdi
   10001484d:	mov    rbx,QWORD PTR [rsp+0x68]
   100014852:	add    rsp,0x40
   100014856:	pop    rdi
   100014857:	pop    rsi
   100014858:	pop    rbp
   100014859:	ret    
   10001485a:	nop
   10001485b:	nop
   10001485c:	nop
   10001485d:	nop
   10001485e:	nop
   10001485f:	nop
   100014860:	push   rbp
   100014862:	push   rsi
   100014863:	push   rdi
   100014864:	sub    rsp,0x40
   100014868:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100014871:	mov    QWORD PTR [rsp+0x68],rbx
   100014876:	mov    rsi,rdx
   100014879:	mov    rdi,rcx
   10001487c:	xor    ebp,ebp
   10001487e:	mov    QWORD PTR [rcx],rbp
   100014881:	mov    DWORD PTR [rcx+0x8],ebp
   100014884:	lea    rcx,[rsp+0x60]
   100014889:	call   0x100014cb0
   10001488e:	lea    rbx,[rsp+0x60]
   100014893:	test   eax,eax
   100014895:	cmovs  rbx,rbp
   100014899:	mov    QWORD PTR [rsp+0x70],rbx
   10001489e:	js     0x1000148ae
   1000148a0:	mov    rcx,QWORD PTR [rsi]
   1000148a3:	call   QWORD PTR [rsi+0x8]
   1000148a6:	mov    DWORD PTR [rdi],0x5
   1000148ac:	jmp    0x1000148c7
   1000148ae:	mov    edx,eax
   1000148b0:	lea    rcx,[rsp+0x28]
   1000148b5:	call   0x1000148f0
   1000148ba:	mov    ecx,DWORD PTR [rax]
   1000148bc:	mov    DWORD PTR [rdi],ecx
   1000148be:	mov    ecx,DWORD PTR [rax+0x4]
   1000148c1:	mov    DWORD PTR [rdi+0x4],ecx
   1000148c4:	mov    eax,DWORD PTR [rax+0x8]
   1000148c7:	mov    DWORD PTR [rdi+0x8],eax
   1000148ca:	test   rbx,rbx
   1000148cd:	je     0x1000148d6
   1000148cf:	mov    ecx,DWORD PTR [rbx]
   1000148d1:	call   0x100014c00
   1000148d6:	mov    rax,rdi
   1000148d9:	mov    rbx,QWORD PTR [rsp+0x68]
   1000148de:	add    rsp,0x40
   1000148e2:	pop    rdi
   1000148e3:	pop    rsi
   1000148e4:	pop    rbp
   1000148e5:	ret    
   1000148e6:	nop
   1000148e7:	nop
   1000148e8:	nop
   1000148e9:	nop
   1000148ea:	nop
   1000148eb:	nop
   1000148ec:	nop
   1000148ed:	nop
   1000148ee:	nop
   1000148ef:	nop
   1000148f0:	mov    DWORD PTR [rcx+0x8],0x0
   1000148f7:	mov    rax,rcx
   1000148fa:	mov    DWORD PTR [rcx],0x1
   100014900:	mov    DWORD PTR [rcx+0x4],edx
   100014903:	ret    
   100014904:	nop
   100014905:	nop
   100014906:	nop
   100014907:	nop
   100014908:	nop
   100014909:	nop
   10001490a:	nop
   10001490b:	nop
   10001490c:	nop
   10001490d:	nop
   10001490e:	nop
   10001490f:	nop
   100014910:	mov    QWORD PTR [rsp+0x8],rbx
   100014915:	mov    QWORD PTR [rsp+0x10],rbp
   10001491a:	mov    QWORD PTR [rsp+0x20],rsi
   10001491f:	push   rdi
   100014920:	sub    rsp,0x50
   100014924:	mov    rdi,rcx
   100014927:	mov    rcx,QWORD PTR [rip+0x14792]        # 0x1000290c0
   10001492e:	mov    DWORD PTR [rsp+0x20],0x100
   100014936:	mov    rax,QWORD PTR gs:0x30
   10001493f:	mov    esi,edx
   100014941:	add    rax,rcx
   100014944:	cmp    rcx,0x1480
   10001494b:	jge    0x100014953
   10001494d:	call   QWORD PTR [rip+0xfffffffffffec7cd]        # 0x100001120
   100014953:	test   rax,rax
   100014956:	je     0x100014964
   100014958:	mov    rax,QWORD PTR [rax+0xd8]
   10001495f:	test   rax,rax
   100014962:	jne    0x100014996
   100014964:	call   QWORD PTR [rip+0xfffffffffffed1e6]        # 0x100001b50
   10001496a:	mov    r11,QWORD PTR [rip+0x1474f]        # 0x1000290c0
   100014971:	mov    rax,QWORD PTR gs:0x30
   10001497a:	add    rax,r11
   10001497d:	cmp    r11,0x1480
   100014984:	jge    0x10001498f
   100014986:	mov    ecx,r11d
   100014989:	call   QWORD PTR [rip+0xfffffffffffec791]        # 0x100001120
   10001498f:	mov    rax,QWORD PTR [rax+0xd8]
   100014996:	mov    QWORD PTR [rsp+0x28],rax
   10001499b:	test   rax,rax
   10001499e:	je     0x1000149a9
   1000149a0:	mov    rdx,QWORD PTR [rax+0x388]
   1000149a7:	jmp    0x1000149ab
   1000149a9:	xor    edx,edx
   1000149ab:	mov    rax,QWORD PTR [rip+0xfffffffffffed606]        # 0x100001fb8
   1000149b2:	xor    ecx,ecx
   1000149b4:	mov    QWORD PTR [rsp+0x30],rdx
   1000149b9:	mov    QWORD PTR [rsp+0x38],rcx
   1000149be:	mov    DWORD PTR [rsp+0x40],ecx
   1000149c2:	test   BYTE PTR [rax],0x1
   1000149c5:	je     0x100014a43
   1000149c7:	test   rdx,rdx
   1000149ca:	je     0x100014a43
   1000149cc:	lea    rcx,[rdx+0x6b8]
   1000149d3:	mov    QWORD PTR [rsp+0x38],rcx
   1000149d8:	test   rcx,rcx
   1000149db:	je     0x100014a43
   1000149dd:	inc    QWORD PTR [rcx+0x2008]
   1000149e4:	mov    rcx,QWORD PTR [rsp+0x38]
   1000149e9:	mov    edx,0x100
   1000149ee:	call   QWORD PTR [rip+0xfffffffffffed17c]        # 0x100001b70
   1000149f4:	mov    rcx,QWORD PTR [rsp+0x38]
   1000149f9:	mov    edx,0x100
   1000149fe:	mov    rbx,rax
   100014a01:	call   QWORD PTR [rip+0xfffffffffffed161]        # 0x100001b68
   100014a07:	mov    r11,rax
   100014a0a:	test   rbx,rbx
   100014a0d:	je     0x100014a3e
   100014a0f:	test   rax,rax
   100014a12:	je     0x100014a3e
   100014a14:	mov    rcx,QWORD PTR [rsp+0x38]
   100014a19:	xor    edx,edx
   100014a1b:	mov    rax,rbx
   100014a1e:	div    r11
   100014a21:	mov    edx,0xfa
   100014a26:	mov    ebx,0x61a8
   100014a2b:	shr    rax,1
   100014a2e:	cmp    rax,rdx
   100014a31:	cmova  rdx,rax
   100014a35:	cmp    rdx,rbx
   100014a38:	cmovb  rbx,rdx
   100014a3c:	jmp    0x100014a48
   100014a3e:	mov    rcx,QWORD PTR [rsp+0x38]
   100014a43:	mov    ebx,0xfa
   100014a48:	mov    ebp,0x3b9aca00
   100014a4d:	nop    DWORD PTR [rax]
   100014a50:	xor    edx,edx
   100014a52:	test   rbx,rbx
   100014a55:	je     0x100014a6c
   100014a57:	mov    rax,rbx
   100014a5a:	mov    rdx,rbx
   100014a5d:	nop    DWORD PTR [rax]
   100014a60:	pause  
   100014a62:	dec    rax
   100014a65:	jne    0x100014a60
   100014a67:	mov    rcx,QWORD PTR [rsp+0x38]
   100014a6c:	test   rcx,rcx
   100014a6f:	je     0x100014a78
   100014a71:	add    QWORD PTR [rcx+0x2000],rdx
   100014a78:	xor    eax,eax
   100014a7a:	lock cmpxchg DWORD PTR [rdi],esi
   100014a7e:	je     0x100014abe
   100014a80:	mov    rcx,QWORD PTR [rsp+0x38]
   100014a85:	lea    rax,[rbx+rbx*1]
   100014a89:	cmp    rax,rbp
   100014a8c:	mov    rbx,rax
   100014a8f:	cmova  rbx,rbp
   100014a93:	inc    DWORD PTR [rsp+0x40]
   100014a97:	test   rcx,rcx
   100014a9a:	je     0x100014aa9
   100014a9c:	movsxd rax,DWORD PTR [rsp+0x20]
   100014aa1:	shl    rax,0x5
   100014aa5:	inc    DWORD PTR [rax+rcx*1+0x18]
   100014aa9:	lea    rdx,[rsp+0x20]
   100014aae:	mov    rcx,rdi
   100014ab1:	call   QWORD PTR [rip+0xfffffffffffed0a9]        # 0x100001b60
   100014ab7:	mov    rcx,QWORD PTR [rsp+0x38]
   100014abc:	jmp    0x100014a50
   100014abe:	mov    rbx,QWORD PTR [rsp+0x60]
   100014ac3:	mov    rbp,QWORD PTR [rsp+0x68]
   100014ac8:	mov    rsi,QWORD PTR [rsp+0x78]
   100014acd:	add    rsp,0x50
   100014ad1:	pop    rdi
   100014ad2:	ret    
   100014ad3:	nop
   100014ad4:	nop
   100014ad5:	nop
   100014ad6:	nop
   100014ad7:	nop
   100014ad8:	nop
   100014ad9:	nop
   100014ada:	nop
   100014adb:	nop
   100014adc:	nop
   100014add:	nop
   100014ade:	nop
   100014adf:	nop
   100014ae0:	mov    rax,QWORD PTR [rcx]
   100014ae3:	jmp    QWORD PTR [rax+0x20]
   100014ae6:	nop
   100014ae7:	nop
   100014ae8:	nop
   100014ae9:	nop
   100014aea:	nop
   100014aeb:	nop
   100014aec:	nop
   100014aed:	nop
   100014aee:	nop
   100014aef:	nop
   100014af0:	mov    rax,QWORD PTR [rcx]
   100014af3:	jmp    QWORD PTR [rax+0x18]
   100014af6:	nop
   100014af7:	nop
   100014af8:	nop
   100014af9:	nop
   100014afa:	nop
   100014afb:	nop
   100014afc:	nop
   100014afd:	nop
   100014afe:	nop
   100014aff:	nop
   100014b00:	mov    QWORD PTR [rsp+0x8],rcx
   100014b05:	sub    rsp,0x38
   100014b09:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100014b12:	mov    rax,QWORD PTR [rcx]
   100014b15:	test   rax,rax
   100014b18:	je     0x100014b21
   100014b1a:	mov    ecx,DWORD PTR [rax]
   100014b1c:	call   0x100014c00
   100014b21:	add    rsp,0x38
   100014b25:	ret    
   100014b26:	nop
   100014b27:	nop
   100014b28:	nop
   100014b29:	nop
   100014b2a:	nop
   100014b2b:	nop
   100014b2c:	nop
   100014b2d:	nop
   100014b2e:	nop
   100014b2f:	nop
   100014b30:	sub    rsp,0x28
   100014b34:	mov    rax,QWORD PTR [rcx]
   100014b37:	test   rax,rax
   100014b3a:	je     0x100014b43
   100014b3c:	mov    ecx,DWORD PTR [rax]
   100014b3e:	call   0x100014c00
   100014b43:	add    rsp,0x28
   100014b47:	ret    
   100014b48:	nop
   100014b49:	nop
   100014b4a:	nop
   100014b4b:	nop
   100014b4c:	nop
   100014b4d:	nop
   100014b4e:	nop
   100014b4f:	nop
   100014b50:	mov    QWORD PTR [rsp+0x8],rcx
   100014b55:	sub    rsp,0x38
   100014b59:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100014b62:	mov    rax,QWORD PTR [rcx]
   100014b65:	test   rax,rax
   100014b68:	je     0x100014b71
   100014b6a:	mov    ecx,DWORD PTR [rax]
   100014b6c:	call   0x100014c00
   100014b71:	add    rsp,0x38
   100014b75:	ret    
   100014b76:	nop
   100014b77:	nop
   100014b78:	nop
   100014b79:	nop
   100014b7a:	nop
   100014b7b:	nop
   100014b7c:	nop
   100014b7d:	nop
   100014b7e:	nop
   100014b7f:	nop
   100014b80:	sub    rsp,0x28
   100014b84:	mov    rcx,QWORD PTR [rip+0x14535]        # 0x1000290c0
   100014b8b:	mov    rax,QWORD PTR gs:0x30
   100014b94:	add    rax,rcx
   100014b97:	cmp    rcx,0x1480
   100014b9e:	jge    0x100014ba6
   100014ba0:	call   QWORD PTR [rip+0xfffffffffffec57a]        # 0x100001120
   100014ba6:	test   rax,rax
   100014ba9:	je     0x100014bb7
   100014bab:	mov    rcx,QWORD PTR [rax+0xd8]
   100014bb2:	test   rcx,rcx
   100014bb5:	jne    0x100014be9
   100014bb7:	call   QWORD PTR [rip+0xfffffffffffecf93]        # 0x100001b50
   100014bbd:	mov    r11,QWORD PTR [rip+0x144fc]        # 0x1000290c0
   100014bc4:	mov    rax,QWORD PTR gs:0x30
   100014bcd:	add    rax,r11
   100014bd0:	cmp    r11,0x1480
   100014bd7:	jge    0x100014be2
   100014bd9:	mov    ecx,r11d
   100014bdc:	call   QWORD PTR [rip+0xfffffffffffec53e]        # 0x100001120
   100014be2:	mov    rcx,QWORD PTR [rax+0xd8]
   100014be9:	mov    eax,DWORD PTR [rcx+0x220]
   100014bef:	shr    eax,0x9
   100014bf2:	and    eax,0x1
   100014bf5:	add    rsp,0x28
   100014bf9:	ret    
   100014bfa:	nop
   100014bfb:	nop
   100014bfc:	nop
   100014bfd:	nop
   100014bfe:	nop
   100014bff:	nop
   100014c00:	push   rbx
   100014c02:	sub    rsp,0x20
   100014c06:	mov    rax,QWORD PTR gs:0x30
   100014c0f:	mov    ebx,ecx
   100014c11:	mov    rcx,QWORD PTR [rip+0x144a8]        # 0x1000290c0
   100014c18:	add    rax,rcx
   100014c1b:	cmp    rcx,0x1480
   100014c22:	jge    0x100014c2a
   100014c24:	call   QWORD PTR [rip+0xfffffffffffec4f6]        # 0x100001120
   100014c2a:	test   rax,rax
   100014c2d:	je     0x100014c3b
   100014c2f:	mov    rdx,QWORD PTR [rax+0xd8]
   100014c36:	test   rdx,rdx
   100014c39:	jne    0x100014c6d
   100014c3b:	call   QWORD PTR [rip+0xfffffffffffecf0f]        # 0x100001b50
   100014c41:	mov    r11,QWORD PTR [rip+0x14478]        # 0x1000290c0
   100014c48:	mov    rax,QWORD PTR gs:0x30
   100014c51:	add    rax,r11
   100014c54:	cmp    r11,0x1480
   100014c5b:	jge    0x100014c66
   100014c5d:	mov    ecx,r11d
   100014c60:	call   QWORD PTR [rip+0xfffffffffffec4ba]        # 0x100001120
   100014c66:	mov    rdx,QWORD PTR [rax+0xd8]
   100014c6d:	test   ebx,ebx
   100014c6f:	je     0x100014c81
   100014c71:	or     DWORD PTR [rdx+0x220],0x200
   100014c7b:	add    rsp,0x20
   100014c7f:	pop    rbx
   100014c80:	ret    
   100014c81:	mov    eax,DWORD PTR [rdx+0x220]
   100014c87:	mov    ecx,eax
   100014c89:	btc    ecx,0x9
   100014c8d:	and    ecx,eax
   100014c8f:	mov    DWORD PTR [rdx+0x220],ecx
   100014c95:	add    rsp,0x20
   100014c99:	pop    rbx
   100014c9a:	ret    
   100014c9b:	nop
   100014c9c:	nop
   100014c9d:	nop
   100014c9e:	nop
   100014c9f:	nop
   100014ca0:	nop
   100014ca1:	nop
   100014ca2:	nop
   100014ca3:	nop
   100014ca4:	nop
   100014ca5:	nop
   100014ca6:	nop
   100014ca7:	nop
   100014ca8:	nop
   100014ca9:	nop
   100014caa:	nop
   100014cab:	nop
   100014cac:	nop
   100014cad:	nop
   100014cae:	nop
   100014caf:	nop
   100014cb0:	push   rbx
   100014cb2:	sub    rsp,0x20
   100014cb6:	mov    rbx,rcx
   100014cb9:	call   0x100014b80
   100014cbe:	mov    rcx,QWORD PTR [rip+0x143fb]        # 0x1000290c0
   100014cc5:	mov    DWORD PTR [rbx],eax
   100014cc7:	mov    rax,QWORD PTR gs:0x30
   100014cd0:	add    rax,rcx
   100014cd3:	cmp    rcx,0x1480
   100014cda:	jge    0x100014ce2
   100014cdc:	call   QWORD PTR [rip+0xfffffffffffec43e]        # 0x100001120
   100014ce2:	test   rax,rax
   100014ce5:	je     0x100014cf3
   100014ce7:	mov    rax,QWORD PTR [rax+0xd8]
   100014cee:	test   rax,rax
   100014cf1:	jne    0x100014d25
   100014cf3:	call   QWORD PTR [rip+0xfffffffffffece57]        # 0x100001b50
   100014cf9:	mov    r11,QWORD PTR [rip+0x143c0]        # 0x1000290c0
   100014d00:	mov    rax,QWORD PTR gs:0x30
   100014d09:	add    rax,r11
   100014d0c:	cmp    r11,0x1480
   100014d13:	jge    0x100014d1e
   100014d15:	mov    ecx,r11d
   100014d18:	call   QWORD PTR [rip+0xfffffffffffec402]        # 0x100001120
   100014d1e:	mov    rax,QWORD PTR [rax+0xd8]
   100014d25:	or     DWORD PTR [rax+0x220],0x200
   100014d2f:	xor    eax,eax
   100014d31:	add    rsp,0x20
   100014d35:	pop    rbx
   100014d36:	ret    
   100014d37:	nop
   100014d38:	nop
   100014d39:	nop
   100014d3a:	nop
   100014d3b:	nop
   100014d3c:	nop
   100014d3d:	nop
   100014d3e:	nop
   100014d3f:	nop
   100014d40:	mov    QWORD PTR [rsp+0x10],rbx
   100014d45:	mov    QWORD PTR [rsp+0x18],rsi
   100014d4a:	mov    QWORD PTR [rsp+0x20],rdi
   100014d4f:	push   r14
   100014d51:	sub    rsp,0x20
   100014d55:	mov    rdi,rdx
   100014d58:	mov    rbx,rcx
   100014d5b:	test   rcx,rcx
   100014d5e:	je     0x100014d66
   100014d60:	lea    rsi,[rcx-0x58]
   100014d64:	jmp    0x100014d68
   100014d66:	xor    esi,esi
   100014d68:	call   QWORD PTR [rip+0xfffffffffffece0a]        # 0x100001b78
   100014d6e:	mov    edx,eax
   100014d70:	xor    eax,eax
   100014d72:	lock cmpxchg DWORD PTR [rbx+0x10],edx
   100014d77:	je     0x100014d82
   100014d79:	lea    rcx,[rbx+0x10]
   100014d7d:	call   0x100006260
   100014d82:	mov    rax,QWORD PTR [rbx]
   100014d85:	mov    QWORD PTR [rdi],rax
   100014d88:	mov    rax,QWORD PTR [rbx]
   100014d8b:	mov    QWORD PTR [rax+0x8],rdi
   100014d8f:	mov    QWORD PTR [rbx],rdi
   100014d92:	mov    QWORD PTR [rdi+0x8],rbx
   100014d96:	inc    DWORD PTR [rbx+0x14]
   100014d99:	mov    QWORD PTR [rdi+0x18],rsi
   100014d9d:	mov    rsi,QWORD PTR [rsp+0x40]
   100014da2:	mov    rdi,QWORD PTR [rsp+0x48]
   100014da7:	mov    DWORD PTR [rbx+0x10],0x0
   100014dae:	mov    rbx,QWORD PTR [rsp+0x38]
   100014db3:	add    rsp,0x20
   100014db7:	pop    r14
   100014db9:	ret    
   100014dba:	nop
   100014dbb:	nop
   100014dbc:	nop
   100014dbd:	nop
   100014dbe:	nop
   100014dbf:	nop
   100014dc0:	mov    QWORD PTR [rsp+0x18],rbx
   100014dc5:	mov    QWORD PTR [rsp+0x20],rdi
   100014dca:	push   r14
   100014dcc:	sub    rsp,0x20
   100014dd0:	mov    eax,DWORD PTR [rcx+0xb0]
   100014dd6:	mov    rbx,r8
   100014dd9:	mov    r14,rdx
   100014ddc:	mov    rdi,rcx
   100014ddf:	test   eax,eax
   100014de1:	jne    0x100014e10
   100014de3:	call   QWORD PTR [rip+0xfffffffffffed08f]        # 0x100001e78
   100014de9:	mov    rcx,QWORD PTR [rax]
   100014dec:	mov    QWORD PTR [rbx],rcx
   100014def:	mov    rcx,QWORD PTR [rax+0x8]
   100014df3:	mov    QWORD PTR [rbx+0x8],rcx
   100014df7:	mov    rcx,QWORD PTR [rax+0x10]
   100014dfb:	mov    QWORD PTR [rbx+0x10],rcx
   100014dff:	mov    rcx,QWORD PTR [rax+0x18]
   100014e03:	mov    QWORD PTR [rbx+0x18],rcx
   100014e07:	mov    rax,QWORD PTR [rax+0x20]
   100014e0b:	jmp    0x100014eac
   100014e10:	mov    QWORD PTR [rsp+0x38],rsi
   100014e15:	lea    rsi,[rcx+0x90]
   100014e1c:	mov    QWORD PTR [rdx],rsi
   100014e1f:	call   QWORD PTR [rip+0xfffffffffffecd53]        # 0x100001b78
   100014e25:	mov    edx,eax
   100014e27:	xor    eax,eax
   100014e29:	lock cmpxchg DWORD PTR [rsi],edx
   100014e2d:	je     0x100014e37
   100014e2f:	mov    rcx,rsi
   100014e32:	call   0x10000e630
   100014e37:	mov    rsi,QWORD PTR [rsp+0x38]
   100014e3c:	mov    DWORD PTR [r14+0x8],0x1
   100014e44:	mov    eax,DWORD PTR [rdi+0xb0]
   100014e4a:	cmp    eax,0x2
   100014e4d:	jne    0x100014e65
   100014e4f:	mov    eax,0x80000000
   100014e54:	mov    rbx,QWORD PTR [rsp+0x40]
   100014e59:	mov    rdi,QWORD PTR [rsp+0x48]
   100014e5e:	add    rsp,0x20
   100014e62:	pop    r14
   100014e64:	ret    
   100014e65:	mov    rcx,QWORD PTR [rdi+0xc0]
   100014e6c:	test   rcx,rcx
   100014e6f:	jne    0x100014e8a
   100014e71:	mov    rcx,QWORD PTR [rdi+0xf8]
   100014e78:	test   rcx,rcx
   100014e7b:	je     0x100014e4f
   100014e7d:	mov    rcx,QWORD PTR [rdi+rcx*8+0xc0]
   100014e85:	test   rcx,rcx
   100014e88:	je     0x100014e4f
   100014e8a:	mov    rax,QWORD PTR [rcx]
   100014e8d:	mov    QWORD PTR [rbx],rax
   100014e90:	mov    rax,QWORD PTR [rcx+0x8]
   100014e94:	mov    QWORD PTR [rbx+0x8],rax
   100014e98:	mov    rax,QWORD PTR [rcx+0x10]
   100014e9c:	mov    QWORD PTR [rbx+0x10],rax
   100014ea0:	mov    rax,QWORD PTR [rcx+0x18]
   100014ea4:	mov    QWORD PTR [rbx+0x18],rax
   100014ea8:	mov    rax,QWORD PTR [rcx+0x20]
   100014eac:	mov    rdi,QWORD PTR [rsp+0x48]
   100014eb1:	mov    QWORD PTR [rbx+0x20],rax
   100014eb5:	mov    rbx,QWORD PTR [rsp+0x40]
   100014eba:	xor    eax,eax
   100014ebc:	add    rsp,0x20
   100014ec0:	pop    r14
   100014ec2:	ret    
   100014ec3:	nop
   100014ec4:	nop
   100014ec5:	nop
   100014ec6:	nop
   100014ec7:	nop
   100014ec8:	nop
   100014ec9:	nop
   100014eca:	nop
   100014ecb:	nop
   100014ecc:	nop
   100014ecd:	nop
   100014ece:	nop
   100014ecf:	nop
   100014ed0:	mov    rax,QWORD PTR [rcx]
   100014ed3:	test   rax,rax
   100014ed6:	je     0x100014ee4
   100014ed8:	cmp    DWORD PTR [rcx+0x8],0x0
   100014edc:	je     0x100014ee4
   100014ede:	mov    DWORD PTR [rax],0x0
   100014ee4:	repz ret 
   100014ee6:	nop
   100014ee7:	nop
   100014ee8:	nop
   100014ee9:	nop
   100014eea:	nop
   100014eeb:	nop
   100014eec:	nop
   100014eed:	nop
   100014eee:	nop
   100014eef:	nop
   100014ef0:	mov    QWORD PTR [rsp+0x8],rcx
   100014ef5:	sub    rsp,0x18
   100014ef9:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   100014f01:	mov    rax,QWORD PTR [rcx]
   100014f04:	test   rax,rax
   100014f07:	je     0x100014f15
   100014f09:	cmp    DWORD PTR [rcx+0x8],0x0
   100014f0d:	je     0x100014f15
   100014f0f:	mov    DWORD PTR [rax],0x0
   100014f15:	add    rsp,0x18
   100014f19:	ret    
   100014f1a:	nop
   100014f1b:	nop
   100014f1c:	nop
   100014f1d:	nop
   100014f1e:	nop
   100014f1f:	nop
   100014f20:	mov    rax,rsp
   100014f23:	push   rdi
   100014f24:	sub    rsp,0x90
   100014f2b:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   100014f33:	mov    QWORD PTR [rax+0x20],rbx
   100014f37:	mov    rdi,rcx
   100014f3a:	lea    rbx,[rcx+0x90]
   100014f41:	mov    QWORD PTR [rax-0x68],rbx
   100014f45:	mov    DWORD PTR [rax-0x60],0x0
   100014f4c:	call   QWORD PTR [rip+0xfffffffffffecc26]        # 0x100001b78
   100014f52:	mov    edx,eax
   100014f54:	xor    eax,eax
   100014f56:	lock cmpxchg DWORD PTR [rbx],edx
   100014f5a:	mov    ecx,0x0
   100014f5f:	sete   cl
   100014f62:	mov    rbx,QWORD PTR [rsp+0x30]
   100014f67:	test   ecx,ecx
   100014f69:	jne    0x100014f73
   100014f6b:	mov    rcx,rbx
   100014f6e:	call   0x10000e630
   100014f73:	mov    DWORD PTR [rsp+0x38],0x1
   100014f7b:	mov    rdi,QWORD PTR [rdi+0x98]
   100014f82:	xor    eax,eax
   100014f84:	mov    DWORD PTR [rsp+0x20],eax
   100014f88:	test   rdi,rdi
   100014f8b:	je     0x100015152
   100014f91:	cmp    QWORD PTR [rdi+0x228],rax
   100014f98:	je     0x100015152
   100014f9e:	mov    rcx,QWORD PTR [rip+0x1411b]        # 0x1000290c0
   100014fa5:	mov    rax,QWORD PTR gs:0x30
   100014fae:	add    rax,rcx
   100014fb1:	cmp    rcx,0x1480
   100014fb8:	jge    0x100014fc0
   100014fba:	call   QWORD PTR [rip+0xfffffffffffec160]        # 0x100001120
   100014fc0:	test   rax,rax
   100014fc3:	je     0x100014fd1
   100014fc5:	mov    rcx,QWORD PTR [rax+0xd8]
   100014fcc:	test   rcx,rcx
   100014fcf:	jne    0x100015003
   100014fd1:	call   QWORD PTR [rip+0xfffffffffffecb79]        # 0x100001b50
   100014fd7:	mov    r11,QWORD PTR [rip+0x140e2]        # 0x1000290c0
   100014fde:	mov    rax,QWORD PTR gs:0x30
   100014fe7:	add    rax,r11
   100014fea:	cmp    r11,0x1480
   100014ff1:	jge    0x100014ffc
   100014ff3:	mov    ecx,r11d
   100014ff6:	call   QWORD PTR [rip+0xfffffffffffec124]        # 0x100001120
   100014ffc:	mov    rcx,QWORD PTR [rax+0xd8]
   100015003:	mov    rbx,QWORD PTR [rcx+0x400]
   10001500a:	mov    QWORD PTR [rsp+0xa0],rbx
   100015012:	mov    rax,QWORD PTR [rip+0xfffffffffffecea7]        # 0x100001ec0
   100015019:	mov    QWORD PTR [rcx+0x400],rax
   100015020:	mov    QWORD PTR [rsp+0xa8],rbx
   100015028:	mov    rdx,QWORD PTR [rip+0xfffffffffffecbd1]        # 0x100001c00
   10001502f:	lea    rcx,[rsp+0x68]
   100015034:	call   0x100002090
   100015039:	nop
   10001503a:	mov    rax,QWORD PTR [rdi+0x228]
   100015041:	mov    QWORD PTR [rsp+0xb0],rax
   100015049:	mov    eax,DWORD PTR [rax+0xf0]
   10001504f:	mov    DWORD PTR [rsp+0x20],eax
   100015053:	lea    rcx,[rsp+0x68]
   100015058:	call   0x100002030
   10001505d:	nop
   10001505e:	jmp    0x100015068
   100015060:	mov    rbx,QWORD PTR [rsp+0xa0]
   100015068:	mov    rcx,QWORD PTR [rip+0x14051]        # 0x1000290c0
   10001506f:	mov    rax,QWORD PTR gs:0x30
   100015078:	add    rax,rcx
   10001507b:	cmp    rcx,0x1480
   100015082:	jge    0x10001508a
   100015084:	call   QWORD PTR [rip+0xfffffffffffec096]        # 0x100001120
   10001508a:	test   rax,rax
   10001508d:	je     0x10001509b
   10001508f:	mov    rax,QWORD PTR [rax+0xd8]
   100015096:	test   rax,rax
   100015099:	jne    0x1000150cd
   10001509b:	call   QWORD PTR [rip+0xfffffffffffecaaf]        # 0x100001b50
   1000150a1:	mov    r11,QWORD PTR [rip+0x14018]        # 0x1000290c0
   1000150a8:	mov    rax,QWORD PTR gs:0x30
   1000150b1:	add    rax,r11
   1000150b4:	cmp    r11,0x1480
   1000150bb:	jge    0x1000150c6
   1000150bd:	mov    ecx,r11d
   1000150c0:	call   QWORD PTR [rip+0xfffffffffffec05a]        # 0x100001120
   1000150c6:	mov    rax,QWORD PTR [rax+0xd8]
   1000150cd:	cmp    DWORD PTR [rax+0x204],0x0
   1000150d4:	je     0x1000150dd
   1000150d6:	call   QWORD PTR [rip+0xfffffffffffecb44]        # 0x100001c20
   1000150dc:	nop
   1000150dd:	mov    rcx,QWORD PTR [rip+0x13fdc]        # 0x1000290c0
   1000150e4:	mov    rax,QWORD PTR gs:0x30
   1000150ed:	add    rax,rcx
   1000150f0:	cmp    rcx,0x1480
   1000150f7:	jge    0x1000150ff
   1000150f9:	call   QWORD PTR [rip+0xfffffffffffec021]        # 0x100001120
   1000150ff:	test   rax,rax
   100015102:	je     0x100015110
   100015104:	mov    rax,QWORD PTR [rax+0xd8]
   10001510b:	test   rax,rax
   10001510e:	jne    0x100015142
   100015110:	call   QWORD PTR [rip+0xfffffffffffeca3a]        # 0x100001b50
   100015116:	mov    r11,QWORD PTR [rip+0x13fa3]        # 0x1000290c0
   10001511d:	mov    rax,QWORD PTR gs:0x30
   100015126:	add    rax,r11
   100015129:	cmp    r11,0x1480
   100015130:	jge    0x10001513b
   100015132:	mov    ecx,r11d
   100015135:	call   QWORD PTR [rip+0xfffffffffffebfe5]        # 0x100001120
   10001513b:	mov    rax,QWORD PTR [rax+0xd8]
   100015142:	mov    QWORD PTR [rax+0x400],rbx
   100015149:	mov    rbx,QWORD PTR [rsp+0x30]
   10001514e:	mov    eax,DWORD PTR [rsp+0x20]
   100015152:	test   rbx,rbx
   100015155:	je     0x10001515d
   100015157:	mov    DWORD PTR [rbx],0x0
   10001515d:	mov    rbx,QWORD PTR [rsp+0xb8]
   100015165:	add    rsp,0x90
   10001516c:	pop    rdi
   10001516d:	ret    
   10001516e:	nop
   10001516f:	nop
   100015170:	nop
   100015171:	nop
   100015172:	nop
   100015173:	nop
   100015174:	nop
   100015175:	nop
   100015176:	nop
   100015177:	nop
   100015178:	nop
   100015179:	nop
   10001517a:	nop
   10001517b:	nop
   10001517c:	nop
   10001517d:	nop
   10001517e:	nop
   10001517f:	nop
   100015180:	mov    QWORD PTR [rsp+0x20],r9
   100015185:	mov    QWORD PTR [rsp+0x18],r8
   10001518a:	push   rbp
   10001518b:	push   rsi
   10001518c:	push   r13
   10001518e:	push   r15
   100015190:	sub    rsp,0x58
   100015194:	mov    r13d,DWORD PTR [rsp+0xa0]
   10001519c:	mov    rsi,rcx
   10001519f:	mov    r15,rdx
   1000151a2:	xor    edx,edx
   1000151a4:	mov    ecx,r13d
   1000151a7:	mov    rbp,r8
   1000151aa:	mov    eax,edx
   1000151ac:	mov    r10d,0x80070057
   1000151b2:	and    ecx,0x100
   1000151b8:	je     0x1000151c6
   1000151ba:	test   rsi,rsi
   1000151bd:	jne    0x1000151cb
   1000151bf:	test   r15,r15
   1000151c2:	jne    0x1000151d4
   1000151c4:	jmp    0x1000151cb
   1000151c6:	test   r15,r15
   1000151c9:	je     0x1000151d4
   1000151cb:	cmp    r15,0x7fffffff
   1000151d2:	jbe    0x1000151d7
   1000151d4:	mov    eax,r10d
   1000151d7:	test   eax,eax
   1000151d9:	js     0x100015388
   1000151df:	mov    QWORD PTR [rsp+0x48],rdi
   1000151e4:	mov    QWORD PTR [rsp+0x40],r12
   1000151e9:	mov    QWORD PTR [rsp+0x38],r14
   1000151ee:	mov    r14,r15
   1000151f1:	mov    r12,rsi
   1000151f4:	test   ecx,ecx
   1000151f6:	je     0x100015210
   1000151f8:	mov    rax,QWORD PTR [rsp+0xa8]
   100015200:	lea    r8,[rip+0xfffffffffffee431]        # 0x100003638
   100015207:	test   rax,rax
   10001520a:	cmovne r8,rax
   10001520e:	jmp    0x100015218
   100015210:	mov    r8,QWORD PTR [rsp+0xa8]
   100015218:	mov    QWORD PTR [rsp+0x50],rbx
   10001521d:	mov    edi,edx
   10001521f:	test   r13d,0xffffe000
   100015226:	je     0x1000152bd
   10001522c:	mov    edi,r10d
   10001522f:	test   r15,r15
   100015232:	je     0x100015237
   100015234:	mov    WORD PTR [rsi],dx
   100015237:	test   r13d,0x1c00
   10001523e:	je     0x1000152a2
   100015240:	test   r15,r15
   100015243:	je     0x1000152a2
   100015245:	lea    r8,[r15+r15*1]
   100015249:	mov    rbp,r8
   10001524c:	shr    rbp,1
   10001524f:	je     0x100015261
   100015251:	bt     r13d,0xc
   100015256:	jae    0x100015261
   100015258:	mov    r12,rsi
   10001525b:	mov    r14,rbp
   10001525e:	mov    WORD PTR [rsi],dx
   100015261:	bt     r13d,0xa
   100015266:	jae    0x100015283
   100015268:	movzx  edx,r13b
   10001526c:	mov    rcx,rsi
   10001526f:	call   0x10001f80c
   100015274:	test   r13b,r13b
   100015277:	jne    0x100015393
   10001527d:	mov    r12,rsi
   100015280:	mov    r14,rbp
   100015283:	xor    eax,eax
   100015285:	test   rbp,rbp
   100015288:	je     0x10001529a
   10001528a:	bt     r13d,0xb
   10001528f:	jae    0x10001529a
   100015291:	mov    r12,rsi
   100015294:	mov    r14,rbp
   100015297:	mov    WORD PTR [rsi],ax
   10001529a:	mov    rbp,QWORD PTR [rsp+0x90]
   1000152a2:	test   edi,edi
   1000152a4:	jns    0x100015359
   1000152aa:	cmp    edi,0x8007007a
   1000152b0:	je     0x100015359
   1000152b6:	mov    eax,edi
   1000152b8:	jmp    0x100015374
   1000152bd:	test   r15,r15
   1000152c0:	jne    0x1000152dd
   1000152c2:	cmp    WORD PTR [r8],dx
   1000152c6:	je     0x100015361
   1000152cc:	mov    edi,0x8007007a
   1000152d1:	test   rsi,rsi
   1000152d4:	cmove  edi,r10d
   1000152d8:	jmp    0x100015237
   1000152dd:	mov    r9,QWORD PTR [rsp+0xb0]
   1000152e5:	lea    rax,[rsp+0xb8]
   1000152ed:	lea    rbx,[r15-0x1]
   1000152f1:	mov    rdx,rbx
   1000152f4:	mov    rcx,rsi
   1000152f7:	mov    QWORD PTR [rsp+0x20],rax
   1000152fc:	call   QWORD PTR [rip+0xfffffffffffec13e]        # 0x100001440
   100015302:	test   eax,eax
   100015304:	js     0x100015316
   100015306:	cdqe   
   100015308:	cmp    rax,rbx
   10001530b:	ja     0x100015316
   10001530d:	je     0x10001531b
   10001530f:	mov    rbx,rax
   100015312:	xor    edx,edx
   100015314:	jmp    0x100015321
   100015316:	mov    edi,0x8007007a
   10001531b:	xor    edx,edx
   10001531d:	mov    WORD PTR [rsi+rbx*2],dx
   100015321:	sub    r14,rbx
   100015324:	lea    r12,[rsi+rbx*2]
   100015328:	test   edi,edi
   10001532a:	js     0x100015237
   100015330:	bt     r13d,0x9
   100015335:	jae    0x100015359
   100015337:	cmp    r14,0x1
   10001533b:	jbe    0x100015359
   10001533d:	lea    r8,[r14+r14*1]
   100015341:	cmp    r8,0x2
   100015345:	jbe    0x100015359
   100015347:	lea    rcx,[r12+0x2]
   10001534c:	add    r8,0xfffffffffffffffe
   100015350:	movzx  edx,r13b
   100015354:	call   0x10001f80c
   100015359:	mov    r9,QWORD PTR [rsp+0x98]
   100015361:	test   rbp,rbp
   100015364:	je     0x10001536a
   100015366:	mov    QWORD PTR [rbp+0x0],r12
   10001536a:	mov    eax,edi
   10001536c:	test   r9,r9
   10001536f:	je     0x100015374
   100015371:	mov    QWORD PTR [r9],r14
   100015374:	mov    rbx,QWORD PTR [rsp+0x50]
   100015379:	mov    rdi,QWORD PTR [rsp+0x48]
   10001537e:	mov    r12,QWORD PTR [rsp+0x40]
   100015383:	mov    r14,QWORD PTR [rsp+0x38]
   100015388:	add    rsp,0x58
   10001538c:	pop    r15
   10001538e:	pop    r13
   100015390:	pop    rsi
   100015391:	pop    rbp
   100015392:	ret    
   100015393:	test   rbp,rbp
   100015396:	je     0x10001529a
   10001539c:	xor    eax,eax
   10001539e:	lea    r12,[rsi-0x2]
   1000153a2:	lea    r12,[r12+rbp*2]
   1000153a6:	lea    r14d,[rax+0x1]
   1000153aa:	mov    WORD PTR [r12],ax
   1000153af:	jmp    0x100015285
   1000153b4:	nop
   1000153b5:	nop
   1000153b6:	nop
   1000153b7:	nop
   1000153b8:	nop
   1000153b9:	nop
   1000153ba:	nop
   1000153bb:	nop
   1000153bc:	nop
   1000153bd:	nop
   1000153be:	nop
   1000153bf:	nop
   1000153c0:	mov    QWORD PTR [rsp+0x10],rbx
   1000153c5:	mov    QWORD PTR [rsp+0x18],rbp
   1000153ca:	mov    QWORD PTR [rsp+0x20],rsi
   1000153cf:	push   rdi
   1000153d0:	push   r12
   1000153d2:	push   r13
   1000153d4:	push   r14
   1000153d6:	push   r15
   1000153d8:	sub    rsp,0x200
   1000153df:	mov    rax,QWORD PTR [rip+0x13e0a]        # 0x1000291f0
   1000153e6:	xor    rax,rsp
   1000153e9:	mov    QWORD PTR [rsp+0x1f0],rax
   1000153f1:	mov    r15,rcx
   1000153f4:	call   QWORD PTR [rip+0xfffffffffffec83e]        # 0x100001c38
   1000153fa:	lea    r12,[rip+0x1758f]        # 0x10002c990
   100015401:	mov    r9,rax
   100015404:	lea    rax,[rip+0xfffffffffffee315]        # 0x100003720
   10001540b:	mov    r14d,0x12c
   100015411:	mov    QWORD PTR [rsp+0x40],rax
   100015416:	lea    rax,[rip+0xfffffffffffee2e3]        # 0x100003700
   10001541d:	lea    r8,[rip+0x8d4]        # 0x100015cf8
   100015424:	mov    QWORD PTR [rsp+0x38],rax
   100015429:	lea    rax,[rip+0xfffffffffffee338]        # 0x100003768
   100015430:	mov    edx,r14d
   100015433:	mov    QWORD PTR [rsp+0x30],rax
   100015438:	lea    rax,[rip+0x85d]        # 0x100015c9c
   10001543f:	mov    rcx,r12
   100015442:	mov    QWORD PTR [rsp+0x28],rax
   100015447:	lea    rax,[rip+0x852]        # 0x100015ca0
   10001544e:	mov    QWORD PTR [rsp+0x20],rax
   100015453:	call   0x100005bb0
   100015458:	lea    r13,[rip+0xfffffffffffee321]        # 0x100003780
   10001545f:	test   eax,eax
   100015461:	jns    0x10001548a
   100015463:	mov    edx,0x7
   100015468:	mov    DWORD PTR [rsp+0x30],eax
   10001546c:	mov    DWORD PTR [rsp+0x28],0x87
   100015474:	lea    ecx,[rdx-0x3]
   100015477:	lea    r9d,[rdx-0x6]
   10001547b:	lea    r8d,[rdx+0x9]
   10001547f:	mov    QWORD PTR [rsp+0x20],r13
   100015484:	call   QWORD PTR [rip+0xfffffffffffec6be]        # 0x100001b48
   10001548a:	lea    rcx,[rsp+0x50]
   10001548f:	mov    edx,0xa
   100015494:	call   QWORD PTR [rip+0xfffffffffffeca0e]        # 0x100001ea8
   10001549a:	call   QWORD PTR [rip+0xfffffffffffec838]        # 0x100001cd8
   1000154a0:	lea    rbp,[rax+0x14]
   1000154a4:	call   QWORD PTR [rip+0xfffffffffffec82e]        # 0x100001cd8
   1000154aa:	movzx  ebx,WORD PTR [rax+0xc]
   1000154ae:	call   QWORD PTR [rip+0xfffffffffffec824]        # 0x100001cd8
   1000154b4:	mov    rdi,rax
   1000154b7:	call   QWORD PTR [rip+0xfffffffffffec81b]        # 0x100001cd8
   1000154bd:	mov    rsi,rax
   1000154c0:	call   QWORD PTR [rip+0xfffffffffffec772]        # 0x100001c38
   1000154c6:	mov    ecx,DWORD PTR [rdi+0x8]
   1000154c9:	mov    QWORD PTR [rsp+0x40],rbp
   1000154ce:	mov    r9,rax
   1000154d1:	lea    rax,[rsp+0x50]
   1000154d6:	mov    DWORD PTR [rsp+0x38],ebx
   1000154da:	mov    QWORD PTR [rsp+0x30],rax
   1000154df:	mov    eax,DWORD PTR [rsi+0x4]
   1000154e2:	mov    DWORD PTR [rsp+0x28],ecx
   1000154e6:	lea    r8,[rip+0x84b]        # 0x100015d38
   1000154ed:	lea    rcx,[rsp+0x70]
   1000154f2:	mov    edx,0xc0
   1000154f7:	mov    DWORD PTR [rsp+0x20],eax
   1000154fb:	call   0x100005bb0
   100015500:	test   eax,eax
   100015502:	jns    0x10001552b
   100015504:	mov    edx,0x7
   100015509:	mov    DWORD PTR [rsp+0x30],eax
   10001550d:	mov    DWORD PTR [rsp+0x28],0x9b
   100015515:	lea    ecx,[rdx-0x3]
   100015518:	lea    r9d,[rdx-0x6]
   10001551c:	lea    r8d,[rdx+0x9]
   100015520:	mov    QWORD PTR [rsp+0x20],r13
   100015525:	call   QWORD PTR [rip+0xfffffffffffec61d]        # 0x100001b48
   10001552b:	xor    ebx,ebx
   10001552d:	mov    DWORD PTR [r15],0xb000834
   100015534:	mov    rcx,r14
   100015537:	mov    r10d,ebx
   10001553a:	mov    rax,r12
   10001553d:	nop    DWORD PTR [rax]
   100015540:	cmp    WORD PTR [rax],bx
   100015543:	je     0x100015559
   100015545:	add    rax,0x2
   100015549:	dec    rcx
   10001554c:	jne    0x100015540
   10001554e:	mov    r10d,0x80070057
   100015554:	mov    rdx,rbx
   100015557:	jmp    0x10001556f
   100015559:	test   rcx,rcx
   10001555c:	jne    0x100015569
   10001555e:	mov    r10d,0x80070057
   100015564:	mov    rdx,rbx
   100015567:	jmp    0x10001556f
   100015569:	mov    rdx,r14
   10001556c:	sub    rdx,rcx
   10001556f:	test   r10d,r10d
   100015572:	js     0x1000155d0
   100015574:	mov    rcx,r14
   100015577:	lea    rax,[r12+rdx*2]
   10001557b:	mov    r10d,ebx
   10001557e:	sub    rcx,rdx
   100015581:	je     0x1000155be
   100015583:	add    rdx,0x7ffffed3
   10001558a:	lea    r9,[rip+0x79f]        # 0x100015d30
   100015591:	add    rdx,rcx
   100015594:	sub    r9,rax
   100015597:	test   rdx,rdx
   10001559a:	je     0x1000155b9
   10001559c:	movzx  r8d,WORD PTR [r9+rax*1]
   1000155a1:	test   r8w,r8w
   1000155a5:	je     0x1000155b9
   1000155a7:	mov    WORD PTR [rax],r8w
   1000155ab:	add    rax,0x2
   1000155af:	dec    rdx
   1000155b2:	dec    rcx
   1000155b5:	jne    0x100015597
   1000155b7:	jmp    0x1000155be
   1000155b9:	test   rcx,rcx
   1000155bc:	jne    0x1000155c8
   1000155be:	sub    rax,0x2
   1000155c2:	mov    r10d,0x8007007a
   1000155c8:	mov    WORD PTR [rax],bx
   1000155cb:	test   r10d,r10d
   1000155ce:	jns    0x1000155f8
   1000155d0:	mov    edx,0x7
   1000155d5:	mov    DWORD PTR [rsp+0x30],r10d
   1000155da:	mov    DWORD PTR [rsp+0x28],0xa8
   1000155e2:	lea    ecx,[rdx-0x3]
   1000155e5:	lea    r9d,[rdx-0x6]
   1000155e9:	lea    r8d,[rdx+0x9]
   1000155ed:	mov    QWORD PTR [rsp+0x20],r13
   1000155f2:	call   QWORD PTR [rip+0xfffffffffffec550]        # 0x100001b48
   1000155f8:	mov    rax,QWORD PTR [rip+0xfffffffffffec521]        # 0x100001b20
   1000155ff:	mov    rcx,QWORD PTR [rax]
   100015602:	mov    rax,QWORD PTR [rcx]
   100015605:	call   QWORD PTR [rax+0x100]
   10001560b:	mov    rdx,r14
   10001560e:	mov    rcx,r12
   100015611:	mov    r11,rax
   100015614:	mov    r9d,ebx
   100015617:	cmp    WORD PTR [rcx],bx
   10001561a:	je     0x100015630
   10001561c:	add    rcx,0x2
   100015620:	dec    rdx
   100015623:	jne    0x100015617
   100015625:	mov    r9d,0x80070057
   10001562b:	mov    r8,rbx
   10001562e:	jmp    0x100015646
   100015630:	test   rdx,rdx
   100015633:	jne    0x100015640
   100015635:	mov    r9d,0x80070057
   10001563b:	mov    r8,rbx
   10001563e:	jmp    0x100015646
   100015640:	mov    r8,r14
   100015643:	sub    r8,rdx
   100015646:	test   r9d,r9d
   100015649:	js     0x1000156a0
   10001564b:	mov    rcx,r14
   10001564e:	lea    rax,[r12+r8*2]
   100015652:	mov    r9d,ebx
   100015655:	sub    rcx,r8
   100015658:	je     0x10001568e
   10001565a:	lea    rdx,[r8+0x7ffffed3]
   100015661:	add    rdx,rcx
   100015664:	sub    r11,rax
   100015667:	test   rdx,rdx
   10001566a:	je     0x100015689
   10001566c:	movzx  r8d,WORD PTR [r11+rax*1]
   100015671:	test   r8w,r8w
   100015675:	je     0x100015689
   100015677:	mov    WORD PTR [rax],r8w
   10001567b:	add    rax,0x2
   10001567f:	dec    rdx
   100015682:	dec    rcx
   100015685:	jne    0x100015667
   100015687:	jmp    0x10001568e
   100015689:	test   rcx,rcx
   10001568c:	jne    0x100015698
   10001568e:	sub    rax,0x2
   100015692:	mov    r9d,0x8007007a
   100015698:	mov    WORD PTR [rax],bx
   10001569b:	test   r9d,r9d
   10001569e:	jns    0x1000156c8
   1000156a0:	mov    edx,0x7
   1000156a5:	mov    DWORD PTR [rsp+0x30],r9d
   1000156aa:	mov    DWORD PTR [rsp+0x28],0xad
   1000156b2:	lea    ecx,[rdx-0x3]
   1000156b5:	lea    r9d,[rdx-0x6]
   1000156b9:	lea    r8d,[rdx+0x9]
   1000156bd:	mov    QWORD PTR [rsp+0x20],r13
   1000156c2:	call   QWORD PTR [rip+0xfffffffffffec480]        # 0x100001b48
   1000156c8:	mov    rcx,r14
   1000156cb:	mov    rax,r12
   1000156ce:	mov    r10d,ebx
   1000156d1:	cmp    WORD PTR [rax],bx
   1000156d4:	je     0x1000156ea
   1000156d6:	add    rax,0x2
   1000156da:	dec    rcx
   1000156dd:	jne    0x1000156d1
   1000156df:	mov    r10d,0x80070057
   1000156e5:	mov    rdx,rbx
   1000156e8:	jmp    0x100015700
   1000156ea:	test   rcx,rcx
   1000156ed:	jne    0x1000156fa
   1000156ef:	mov    r10d,0x80070057
   1000156f5:	mov    rdx,rbx
   1000156f8:	jmp    0x100015700
   1000156fa:	mov    rdx,r14
   1000156fd:	sub    rdx,rcx
   100015700:	test   r10d,r10d
   100015703:	js     0x100015761
   100015705:	mov    rcx,r14
   100015708:	lea    rax,[r12+rdx*2]
   10001570c:	mov    r10d,ebx
   10001570f:	sub    rcx,rdx
   100015712:	je     0x10001574f
   100015714:	add    rdx,0x7ffffed3
   10001571b:	lea    r9,[rip+0x66e]        # 0x100015d90
   100015722:	add    rdx,rcx
   100015725:	sub    r9,rax
   100015728:	test   rdx,rdx
   10001572b:	je     0x10001574a
   10001572d:	movzx  r8d,WORD PTR [r9+rax*1]
   100015732:	test   r8w,r8w
   100015736:	je     0x10001574a
   100015738:	mov    WORD PTR [rax],r8w
   10001573c:	add    rax,0x2
   100015740:	dec    rdx
   100015743:	dec    rcx
   100015746:	jne    0x100015728
   100015748:	jmp    0x10001574f
   10001574a:	test   rcx,rcx
   10001574d:	jne    0x100015759
   10001574f:	sub    rax,0x2
   100015753:	mov    r10d,0x8007007a
   100015759:	mov    WORD PTR [rax],bx
   10001575c:	test   r10d,r10d
   10001575f:	jns    0x100015789
   100015761:	mov    edx,0x7
   100015766:	mov    DWORD PTR [rsp+0x30],r10d
   10001576b:	mov    DWORD PTR [rsp+0x28],0xb2
   100015773:	lea    ecx,[rdx-0x3]
   100015776:	lea    r9d,[rdx-0x6]
   10001577a:	lea    r8d,[rdx+0x9]
   10001577e:	mov    QWORD PTR [rsp+0x20],r13
   100015783:	call   QWORD PTR [rip+0xfffffffffffec3bf]        # 0x100001b48
   100015789:	mov    rcx,r14
   10001578c:	mov    rax,r12
   10001578f:	mov    r10d,ebx
   100015792:	cmp    WORD PTR [rax],bx
   100015795:	je     0x1000157ab
   100015797:	add    rax,0x2
   10001579b:	dec    rcx
   10001579e:	jne    0x100015792
   1000157a0:	mov    r10d,0x80070057
   1000157a6:	mov    rdx,rbx
   1000157a9:	jmp    0x1000157c1
   1000157ab:	test   rcx,rcx
   1000157ae:	jne    0x1000157bb
   1000157b0:	mov    r10d,0x80070057
   1000157b6:	mov    rdx,rbx
   1000157b9:	jmp    0x1000157c1
   1000157bb:	mov    rdx,r14
   1000157be:	sub    rdx,rcx
   1000157c1:	test   r10d,r10d
   1000157c4:	js     0x100015829
   1000157c6:	mov    rcx,r14
   1000157c9:	lea    rax,[r12+rdx*2]
   1000157cd:	mov    r10d,ebx
   1000157d0:	sub    rcx,rdx
   1000157d3:	je     0x100015817
   1000157d5:	add    rdx,0x7ffffed3
   1000157dc:	lea    r9,[rip+0x595]        # 0x100015d78
   1000157e3:	add    rdx,rcx
   1000157e6:	sub    r9,rax
   1000157e9:	nop    DWORD PTR [rax+0x0]
   1000157f0:	test   rdx,rdx
   1000157f3:	je     0x100015812
   1000157f5:	movzx  r8d,WORD PTR [r9+rax*1]
   1000157fa:	test   r8w,r8w
   1000157fe:	je     0x100015812
   100015800:	mov    WORD PTR [rax],r8w
   100015804:	add    rax,0x2
   100015808:	dec    rdx
   10001580b:	dec    rcx
   10001580e:	jne    0x1000157f0
   100015810:	jmp    0x100015817
   100015812:	test   rcx,rcx
   100015815:	jne    0x100015821
   100015817:	sub    rax,0x2
   10001581b:	mov    r10d,0x8007007a
   100015821:	mov    WORD PTR [rax],bx
   100015824:	test   r10d,r10d
   100015827:	jns    0x100015851
   100015829:	mov    edx,0x7
   10001582e:	mov    DWORD PTR [rsp+0x30],r10d
   100015833:	mov    DWORD PTR [rsp+0x28],0xbe
   10001583b:	lea    ecx,[rdx-0x3]
   10001583e:	lea    r9d,[rdx-0x6]
   100015842:	lea    r8d,[rdx+0x9]
   100015846:	mov    QWORD PTR [rsp+0x20],r13
   10001584b:	call   QWORD PTR [rip+0xfffffffffffec2f7]        # 0x100001b48
   100015851:	mov    rcx,r14
   100015854:	mov    rax,r12
   100015857:	mov    r10d,ebx
   10001585a:	nop    WORD PTR [rax+rax*1+0x0]
   100015860:	cmp    WORD PTR [rax],bx
   100015863:	je     0x100015879
   100015865:	add    rax,0x2
   100015869:	dec    rcx
   10001586c:	jne    0x100015860
   10001586e:	mov    r10d,0x80070057
   100015874:	mov    rdx,rbx
   100015877:	jmp    0x10001588f
   100015879:	test   rcx,rcx
   10001587c:	jne    0x100015889
   10001587e:	mov    r10d,0x80070057
   100015884:	mov    rdx,rbx
   100015887:	jmp    0x10001588f
   100015889:	mov    rdx,r14
   10001588c:	sub    rdx,rcx
   10001588f:	test   r10d,r10d
   100015892:	js     0x1000158ee
   100015894:	mov    rcx,r14
   100015897:	lea    rax,[r12+rdx*2]
   10001589b:	mov    r10d,ebx
   10001589e:	sub    rcx,rdx
   1000158a1:	je     0x1000158dc
   1000158a3:	add    rdx,0x7ffffed3
   1000158aa:	lea    r9,[rsp+0x70]
   1000158af:	add    rdx,rcx
   1000158b2:	sub    r9,rax
   1000158b5:	test   rdx,rdx
   1000158b8:	je     0x1000158d7
   1000158ba:	movzx  r8d,WORD PTR [r9+rax*1]
   1000158bf:	test   r8w,r8w
   1000158c3:	je     0x1000158d7
   1000158c5:	mov    WORD PTR [rax],r8w
   1000158c9:	add    rax,0x2
   1000158cd:	dec    rdx
   1000158d0:	dec    rcx
   1000158d3:	jne    0x1000158b5
   1000158d5:	jmp    0x1000158dc
   1000158d7:	test   rcx,rcx
   1000158da:	jne    0x1000158e6
   1000158dc:	sub    rax,0x2
   1000158e0:	mov    r10d,0x8007007a
   1000158e6:	mov    WORD PTR [rax],bx
   1000158e9:	test   r10d,r10d
   1000158ec:	jns    0x100015916
   1000158ee:	mov    edx,0x7
   1000158f3:	mov    DWORD PTR [rsp+0x30],r10d
   1000158f8:	mov    DWORD PTR [rsp+0x28],0xc7
   100015900:	lea    ecx,[rdx-0x3]
   100015903:	lea    r9d,[rdx-0x6]
   100015907:	lea    r8d,[rdx+0x9]
   10001590b:	mov    QWORD PTR [rsp+0x20],r13
   100015910:	call   QWORD PTR [rip+0xfffffffffffec232]        # 0x100001b48
   100015916:	call   QWORD PTR [rip+0xfffffffffffec444]        # 0x100001d60
   10001591c:	test   eax,eax
   10001591e:	je     0x1000159e8
   100015924:	mov    rcx,r14
   100015927:	mov    rax,r12
   10001592a:	mov    r10d,ebx
   10001592d:	nop    DWORD PTR [rax]
   100015930:	cmp    WORD PTR [rax],bx
   100015933:	je     0x100015949
   100015935:	add    rax,0x2
   100015939:	dec    rcx
   10001593c:	jne    0x100015930
   10001593e:	mov    r10d,0x80070057
   100015944:	mov    rdx,rbx
   100015947:	jmp    0x10001595f
   100015949:	test   rcx,rcx
   10001594c:	jne    0x100015959
   10001594e:	mov    r10d,0x80070057
   100015954:	mov    rdx,rbx
   100015957:	jmp    0x10001595f
   100015959:	mov    rdx,r14
   10001595c:	sub    rdx,rcx
   10001595f:	test   r10d,r10d
   100015962:	js     0x1000159c0
   100015964:	mov    rcx,r14
   100015967:	lea    rax,[r12+rdx*2]
   10001596b:	mov    r10d,ebx
   10001596e:	sub    rcx,rdx
   100015971:	je     0x1000159ae
   100015973:	add    rdx,0x7ffffed3
   10001597a:	lea    r9,[rip+0x43f]        # 0x100015dc0
   100015981:	add    rdx,rcx
   100015984:	sub    r9,rax
   100015987:	test   rdx,rdx
   10001598a:	je     0x1000159a9
   10001598c:	movzx  r8d,WORD PTR [r9+rax*1]
   100015991:	test   r8w,r8w
   100015995:	je     0x1000159a9
   100015997:	mov    WORD PTR [rax],r8w
   10001599b:	add    rax,0x2
   10001599f:	dec    rdx
   1000159a2:	dec    rcx
   1000159a5:	jne    0x100015987
   1000159a7:	jmp    0x1000159ae
   1000159a9:	test   rcx,rcx
   1000159ac:	jne    0x1000159b8
   1000159ae:	sub    rax,0x2
   1000159b2:	mov    r10d,0x8007007a
   1000159b8:	mov    WORD PTR [rax],bx
   1000159bb:	test   r10d,r10d
   1000159be:	jns    0x1000159e8
   1000159c0:	mov    edx,0x7
   1000159c5:	mov    DWORD PTR [rsp+0x30],r10d
   1000159ca:	mov    DWORD PTR [rsp+0x28],0xd8
   1000159d2:	lea    ecx,[rdx-0x3]
   1000159d5:	lea    r9d,[rdx-0x6]
   1000159d9:	lea    r8d,[rdx+0x9]
   1000159dd:	mov    QWORD PTR [rsp+0x20],r13
   1000159e2:	call   QWORD PTR [rip+0xfffffffffffec160]        # 0x100001b48
   1000159e8:	call   QWORD PTR [rip+0xfffffffffffebbf2]        # 0x1000015e0
   1000159ee:	test   eax,eax
   1000159f0:	je     0x100015ba9
   1000159f6:	dec    eax
   1000159f8:	je     0x100015ae6
   1000159fe:	dec    eax
   100015a00:	je     0x100015a32
   100015a02:	lea    rax,[rip+0x2575f]        # 0x10003b168
   100015a09:	lea    r8,[rip+0x25640]        # 0x10003b050
   100015a10:	lea    rdx,[rip+0x25749]        # 0x10003b160
   100015a17:	mov    r9d,0xf5
   100015a1d:	mov    ecx,0x1
   100015a22:	mov    QWORD PTR [rsp+0x20],rax
   100015a27:	call   QWORD PTR [rip+0xfffffffffffec12b]        # 0x100001b58
   100015a2d:	jmp    0x100015ba9
   100015a32:	mov    rcx,r14
   100015a35:	mov    rax,r12
   100015a38:	mov    r10d,ebx
   100015a3b:	nop    DWORD PTR [rax+rax*1+0x0]
   100015a40:	cmp    WORD PTR [rax],bx
   100015a43:	je     0x100015a59
   100015a45:	add    rax,0x2
   100015a49:	dec    rcx
   100015a4c:	jne    0x100015a40
   100015a4e:	mov    r10d,0x80070057
   100015a54:	mov    rdx,rbx
   100015a57:	jmp    0x100015a6f
   100015a59:	test   rcx,rcx
   100015a5c:	jne    0x100015a69
   100015a5e:	mov    r10d,0x80070057
   100015a64:	mov    rdx,rbx
   100015a67:	jmp    0x100015a6f
   100015a69:	mov    rdx,r14
   100015a6c:	sub    rdx,rcx
   100015a6f:	test   r10d,r10d
   100015a72:	js     0x100015ad4
   100015a74:	mov    rcx,r14
   100015a77:	lea    rax,[r12+rdx*2]
   100015a7b:	mov    r10d,ebx
   100015a7e:	sub    rcx,rdx
   100015a81:	je     0x100015abe
   100015a83:	add    rdx,0x7ffffed3
   100015a8a:	lea    r9,[rip+0x347]        # 0x100015dd8
   100015a91:	add    rdx,rcx
   100015a94:	sub    r9,rax
   100015a97:	test   rdx,rdx
   100015a9a:	je     0x100015ab9
   100015a9c:	movzx  r8d,WORD PTR [r9+rax*1]
   100015aa1:	test   r8w,r8w
   100015aa5:	je     0x100015ab9
   100015aa7:	mov    WORD PTR [rax],r8w
   100015aab:	add    rax,0x2
   100015aaf:	dec    rdx
   100015ab2:	dec    rcx
   100015ab5:	jne    0x100015a97
   100015ab7:	jmp    0x100015abe
   100015ab9:	test   rcx,rcx
   100015abc:	jne    0x100015ac8
   100015abe:	sub    rax,0x2
   100015ac2:	mov    r10d,0x8007007a
   100015ac8:	mov    WORD PTR [rax],bx
   100015acb:	test   r10d,r10d
   100015ace:	jns    0x100015ba9
   100015ad4:	mov    DWORD PTR [rsp+0x30],r10d
   100015ad9:	mov    DWORD PTR [rsp+0x28],0xec
   100015ae1:	jmp    0x100015b8d
   100015ae6:	mov    rcx,r14
   100015ae9:	mov    rax,r12
   100015aec:	mov    r10d,ebx
   100015aef:	nop
   100015af0:	cmp    WORD PTR [rax],bx
   100015af3:	je     0x100015b09
   100015af5:	add    rax,0x2
   100015af9:	dec    rcx
   100015afc:	jne    0x100015af0
   100015afe:	mov    r10d,0x80070057
   100015b04:	mov    rdx,rbx
   100015b07:	jmp    0x100015b1f
   100015b09:	test   rcx,rcx
   100015b0c:	jne    0x100015b19
   100015b0e:	mov    r10d,0x80070057
   100015b14:	mov    rdx,rbx
   100015b17:	jmp    0x100015b1f
   100015b19:	mov    rdx,r14
   100015b1c:	sub    rdx,rcx
   100015b1f:	test   r10d,r10d
   100015b22:	js     0x100015b80
   100015b24:	mov    rcx,r14
   100015b27:	lea    rax,[r12+rdx*2]
   100015b2b:	mov    r10d,ebx
   100015b2e:	sub    rcx,rdx
   100015b31:	je     0x100015b6e
   100015b33:	add    rdx,0x7ffffed3
   100015b3a:	lea    r9,[rip+0x25f]        # 0x100015da0
   100015b41:	add    rdx,rcx
   100015b44:	sub    r9,rax
   100015b47:	test   rdx,rdx
   100015b4a:	je     0x100015b69
   100015b4c:	movzx  r8d,WORD PTR [r9+rax*1]
   100015b51:	test   r8w,r8w
   100015b55:	je     0x100015b69
   100015b57:	mov    WORD PTR [rax],r8w
   100015b5b:	add    rax,0x2
   100015b5f:	dec    rdx
   100015b62:	dec    rcx
   100015b65:	jne    0x100015b47
   100015b67:	jmp    0x100015b6e
   100015b69:	test   rcx,rcx
   100015b6c:	jne    0x100015b78
   100015b6e:	sub    rax,0x2
   100015b72:	mov    r10d,0x8007007a
   100015b78:	mov    WORD PTR [rax],bx
   100015b7b:	test   r10d,r10d
   100015b7e:	jns    0x100015ba9
   100015b80:	mov    DWORD PTR [rsp+0x30],r10d
   100015b85:	mov    DWORD PTR [rsp+0x28],0xe3
   100015b8d:	mov    r9d,0x1
   100015b93:	mov    QWORD PTR [rsp+0x20],r13
   100015b98:	lea    edx,[r9+0x6]
   100015b9c:	lea    r8d,[r9+0xf]
   100015ba0:	lea    ecx,[rdx-0x3]
   100015ba3:	call   QWORD PTR [rip+0xfffffffffffebf9f]        # 0x100001b48
   100015ba9:	mov    rcx,r14
   100015bac:	mov    rax,r12
   100015baf:	mov    r9d,ebx
   100015bb2:	cmp    WORD PTR [rax],bx
   100015bb5:	je     0x100015bcb
   100015bb7:	add    rax,0x2
   100015bbb:	dec    rcx
   100015bbe:	jne    0x100015bb2
   100015bc0:	mov    r9d,0x80070057
   100015bc6:	mov    rdx,rbx
   100015bc9:	jmp    0x100015be1
   100015bcb:	test   rcx,rcx
   100015bce:	jne    0x100015bdb
   100015bd0:	mov    r9d,0x80070057
   100015bd6:	mov    rdx,rbx
   100015bd9:	jmp    0x100015be1
   100015bdb:	mov    rdx,r14
   100015bde:	sub    rdx,rcx
   100015be1:	test   r9d,r9d
   100015be4:	js     0x100015c3d
   100015be6:	lea    rax,[r12+rdx*2]
   100015bea:	mov    r9d,ebx
   100015bed:	sub    r14,rdx
   100015bf0:	je     0x100015c2b
   100015bf2:	lea    rcx,[rdx+0x7ffffed3]
   100015bf9:	lea    r8,[rip+0x1d4]        # 0x100015dd4
   100015c00:	add    rcx,r14
   100015c03:	sub    r8,rax
   100015c06:	test   rcx,rcx
   100015c09:	je     0x100015c26
   100015c0b:	movzx  edx,WORD PTR [rax+r8*1]
   100015c10:	test   dx,dx
   100015c13:	je     0x100015c26
   100015c15:	mov    WORD PTR [rax],dx
   100015c18:	add    rax,0x2
   100015c1c:	dec    rcx
   100015c1f:	dec    r14
   100015c22:	jne    0x100015c06
   100015c24:	jmp    0x100015c2b
   100015c26:	test   r14,r14
   100015c29:	jne    0x100015c35
   100015c2b:	sub    rax,0x2
   100015c2f:	mov    r9d,0x8007007a
   100015c35:	mov    WORD PTR [rax],bx
   100015c38:	test   r9d,r9d
   100015c3b:	jns    0x100015c65
   100015c3d:	mov    edx,0x7
   100015c42:	mov    DWORD PTR [rsp+0x30],r9d
   100015c47:	mov    DWORD PTR [rsp+0x28],0xfd
   100015c4f:	lea    ecx,[rdx-0x3]
   100015c52:	lea    r9d,[rdx-0x6]
   100015c56:	lea    r8d,[rdx+0x9]
   100015c5a:	mov    QWORD PTR [rsp+0x20],r13
   100015c5f:	call   QWORD PTR [rip+0xfffffffffffebee3]        # 0x100001b48
   100015c65:	mov    rax,r12
   100015c68:	mov    rcx,QWORD PTR [rsp+0x1f0]
   100015c70:	xor    rcx,rsp
   100015c73:	call   0x100002610
   100015c78:	lea    r11,[rsp+0x200]
   100015c80:	mov    rbx,QWORD PTR [r11+0x38]
   100015c84:	mov    rbp,QWORD PTR [r11+0x40]
   100015c88:	mov    rsi,QWORD PTR [r11+0x48]
   100015c8c:	mov    rsp,r11
   100015c8f:	pop    r15
   100015c91:	pop    r14
   100015c93:	pop    r13
   100015c95:	pop    r12
   100015c97:	pop    rdi
   100015c98:	ret    
   100015c99:	nop
   100015c9a:	nop
   100015c9b:	nop
   100015c9c:	pop    rax
   100015c9d:	ss xor al,0x0
   100015ca0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   100015ca4:	movsxd eax,DWORD PTR [rax]
   100015ca6:	jb     0x100015ca8
   100015ca8:	outs   dx,DWORD PTR ds:[rsi]
   100015ca9:	add    BYTE PTR [rbx+0x0],dh
   100015cac:	outs   dx,DWORD PTR ds:[rsi]
   100015cad:	add    BYTE PTR [rsi+0x0],ah
   100015cb0:	je     0x100015cb2
   100015cb2:	and    BYTE PTR [rax],al
   100015cb4:	push   rbx
   100015cb5:	add    BYTE PTR [rcx+0x0],dl
   100015cb8:	rex.WR add BYTE PTR [rax],r12b
   100015cbb:	add    BYTE PTR [rbx+0x0],dl
   100015cbe:	add    BYTE PTR gs:[rdx+0x0],dh
   100015cc2:	jbe    0x100015cc4
   100015cc4:	add    BYTE PTR gs:[rdx+0x0],dh
   100015cc8:	and    BYTE PTR [rax],al
   100015cca:	xor    al,BYTE PTR [rax]
   100015ccc:	xor    BYTE PTR [rax],al
   100015cce:	xor    DWORD PTR [rax],eax
   100015cd0:	xor    al,BYTE PTR [rax]
   100015cd2:	and    BYTE PTR [rax],al
   100015cd4:	sub    eax,0x31002000
   100015cd9:	add    BYTE PTR [rcx],dh
   100015cdb:	add    BYTE PTR [rsi],ch
   100015cdd:	add    BYTE PTR [rax],dh
   100015cdf:	add    BYTE PTR [rsi],ch
   100015ce1:	add    BYTE PTR [rdx],dh
   100015ce3:	add    BYTE PTR [rcx],dh
   100015ce5:	add    BYTE PTR [rax],dh
   100015ce7:	add    BYTE PTR [rax],dh
   100015ce9:	add    BYTE PTR [rsi],ch
   100015ceb:	add    BYTE PTR [rsi],dh
   100015ced:	add    BYTE PTR [rax],dh
   100015cef:	add    BYTE PTR [rax],al
   100015cf1:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100015cf7:	nop
   100015cf8:	and    eax,0x73006c00
   100015cfd:	add    BYTE PTR [rax],ah
   100015cff:	add    BYTE PTR [rax],ch
   100015d01:	add    BYTE PTR [rip+0x73006800],ah        # 0x17301c507
   100015d07:	add    BYTE PTR [rcx],ch
   100015d09:	add    BYTE PTR [rax],ah
   100015d0b:	add    BYTE PTR [rdx],cl
   100015d0d:	add    BYTE PTR [rcx],cl
   100015d0f:	add    BYTE PTR [rip+0x73006c00],ah        # 0x17301c915
   100015d15:	add    BYTE PTR [rax],ah
   100015d17:	add    BYTE PTR [rip+0x73006c00],ah        # 0x17301c91d
   100015d1d:	add    BYTE PTR [rax],ah
   100015d1f:	add    BYTE PTR [rdx],cl
   100015d21:	add    BYTE PTR [rcx],cl
   100015d23:	add    BYTE PTR [rip+0x73006c00],ah        # 0x17301c929
   100015d29:	add    BYTE PTR [rdx],cl
   100015d2b:	add    BYTE PTR [rax],al
   100015d2d:	add    BYTE PTR [rax+0x990],dl
   100015d33:	add    BYTE PTR [rax+0x25909090],dl
   100015d39:	add    BYTE PTR [rax+rax*1+0x64],ch
   100015d3d:	add    BYTE PTR [rsi],ch
   100015d3f:	add    BYTE PTR [rip+0x64006c00],ah        # 0x16401c945
   100015d45:	add    BYTE PTR [rax],ah
   100015d47:	add    BYTE PTR [rax+rax*1],bh
   100015d4a:	and    eax,0x73006c00
   100015d4f:	add    BYTE PTR [rsi],bh
   100015d51:	add    BYTE PTR [rax],ah
   100015d53:	add    BYTE PTR [rax],ch
   100015d55:	add    BYTE PTR [rdx+0x0],al
   100015d58:	jne    0x100015d5a
   100015d5a:	imul   eax,DWORD PTR [rax],0x64006c
   100015d60:	and    BYTE PTR [rax],al
   100015d62:	and    eax,0x64006c00
   100015d67:	add    BYTE PTR [rdx],bh
   100015d69:	add    BYTE PTR [rax],ah
   100015d6b:	add    BYTE PTR [rip+0x73006c00],ah        # 0x17301c971
   100015d71:	add    BYTE PTR [rcx],ch
   100015d73:	add    BYTE PTR [rax],al
   100015d75:	add    BYTE PTR [rax+0x69005790],dl
   100015d7b:	add    BYTE PTR [rsi+0x0],ch
   100015d7e:	add    BYTE PTR fs:[rdi+0x0],ch
   100015d82:	ja     0x100015d84
   100015d84:	jae    0x100015d86
   100015d86:	and    BYTE PTR [rax],al
   100015d88:	rex.WRX add BYTE PTR [rax+r8*1+0x20],r10b
   100015d8d:	add    BYTE PTR [rax],al
   100015d8f:	add    BYTE PTR [rax],ah
   100015d91:	add    BYTE PTR [rdi+0x0],ch
   100015d94:	outs   dx,BYTE PTR ds:[rsi]
   100015d95:	add    BYTE PTR [rax],ah
   100015d97:	add    BYTE PTR [rax],al
   100015d99:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100015d9f:	nop
   100015da0:	and    BYTE PTR [rax],al
   100015da2:	sub    BYTE PTR [rax],al
   100015da4:	rex.W add BYTE PTR [rcx+0x0],dil
   100015da8:	jo     0x100015daa
   100015daa:	add    BYTE PTR gs:[rdx+0x0],dh
   100015dae:	jbe    0x100015db0
   100015db0:	imul   eax,DWORD PTR [rax],0x6f0073
   100015db6:	jb     0x100015db8
   100015db8:	sub    DWORD PTR [rax],eax
   100015dba:	add    BYTE PTR [rax],al
   100015dbc:	nop
   100015dbd:	nop
   100015dbe:	nop
   100015dbf:	nop
   100015dc0:	and    BYTE PTR [rax],al
   100015dc2:	sub    BYTE PTR [rax],al
   100015dc4:	push   rdi
   100015dc5:	add    BYTE PTR [rdi+0x0],cl
   100015dc8:	push   rdi
   100015dc9:	add    BYTE PTR [rsi],dh
   100015dcb:	add    BYTE PTR [rax+rax*1],dh
   100015dce:	sub    DWORD PTR [rax],eax
   100015dd0:	add    BYTE PTR [rax],al
   100015dd2:	nop
   100015dd3:	nop
   100015dd4:	or     al,BYTE PTR [rax]
   100015dd6:	add    BYTE PTR [rax],al
   100015dd8:	and    BYTE PTR [rax],al
   100015dda:	sub    BYTE PTR [rax],al
   100015ddc:	push   rsi
   100015ddd:	add    BYTE PTR [rbp+0x0],cl
   100015de0:	sub    DWORD PTR [rax],eax
   100015de2:	add    BYTE PTR [rax],al
   100015de4:	nop
   100015de5:	nop
   100015de6:	nop
   100015de7:	nop
   100015de8:	nop
   100015de9:	nop
   100015dea:	nop
   100015deb:	nop
   100015dec:	nop
   100015ded:	nop
   100015dee:	nop
   100015def:	nop
   100015df0:	push   rbx
   100015df2:	sub    rsp,0x40
   100015df6:	call   QWORD PTR [rip+0xfffffffffffebe3c]        # 0x100001c38
   100015dfc:	lea    rbx,[rip+0x1692d]        # 0x10002c730
   100015e03:	lea    r8,[rip+0x7e]        # 0x100015e88
   100015e0a:	mov    r9,rax
   100015e0d:	lea    rax,[rip+0xfffffffffffed90c]        # 0x100003720
   100015e14:	mov    edx,0x12c
   100015e19:	mov    QWORD PTR [rsp+0x38],rax
   100015e1e:	lea    rax,[rip+0xfffffffffffed8db]        # 0x100003700
   100015e25:	mov    rcx,rbx
   100015e28:	mov    QWORD PTR [rsp+0x30],rax
   100015e2d:	lea    rax,[rip+0xfffffffffffed934]        # 0x100003768
   100015e34:	mov    QWORD PTR [rsp+0x28],rax
   100015e39:	lea    rax,[rip+0x80]        # 0x100015ec0
   100015e40:	mov    QWORD PTR [rsp+0x20],rax
   100015e45:	call   0x100005bb0
   100015e4a:	test   eax,eax
   100015e4c:	jns    0x100015e7c
   100015e4e:	mov    edx,0x7
   100015e53:	mov    DWORD PTR [rsp+0x30],eax
   100015e57:	lea    rax,[rip+0xfffffffffffed922]        # 0x100003780
   100015e5e:	lea    r9d,[rdx-0x6]
   100015e62:	lea    r8d,[rdx+0x9]
   100015e66:	lea    ecx,[rdx-0x3]
   100015e69:	mov    DWORD PTR [rsp+0x28],0x11c
   100015e71:	mov    QWORD PTR [rsp+0x20],rax
   100015e76:	call   QWORD PTR [rip+0xfffffffffffebccc]        # 0x100001b48
   100015e7c:	mov    rax,rbx
   100015e7f:	add    rsp,0x40
   100015e83:	pop    rbx
   100015e84:	ret    
   100015e85:	nop
   100015e86:	nop
   100015e87:	nop
   100015e88:	and    eax,0x73006c00
   100015e8d:	add    BYTE PTR [rax],ah
   100015e8f:	add    BYTE PTR [rdx],cl
   100015e91:	add    BYTE PTR [rcx],cl
   100015e93:	add    BYTE PTR [rip+0x73006c00],ah        # 0x17301ca99
   100015e99:	add    BYTE PTR [rax],ah
   100015e9b:	add    BYTE PTR [rip+0x73006c00],ah        # 0x17301caa1
   100015ea1:	add    BYTE PTR [rax],ah
   100015ea3:	add    BYTE PTR [rdx],cl
   100015ea5:	add    BYTE PTR [rcx],cl
   100015ea7:	add    BYTE PTR [rip+0x73006c00],ah        # 0x17301caad
   100015ead:	add    BYTE PTR [rdx],cl
   100015eaf:	add    BYTE PTR [rax],al
   100015eb1:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100015eb7:	nop
   100015eb8:	nop
   100015eb9:	nop
   100015eba:	nop
   100015ebb:	nop
   100015ebc:	nop
   100015ebd:	nop
   100015ebe:	nop
   100015ebf:	nop
   100015ec0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   100015ec4:	movsxd eax,DWORD PTR [rax]
   100015ec6:	jb     0x100015ec8
   100015ec8:	outs   dx,DWORD PTR ds:[rsi]
   100015ec9:	add    BYTE PTR [rbx+0x0],dh
   100015ecc:	outs   dx,DWORD PTR ds:[rsi]
   100015ecd:	add    BYTE PTR [rsi+0x0],ah
   100015ed0:	je     0x100015ed2
   100015ed2:	and    BYTE PTR [rax],al
   100015ed4:	push   rbx
   100015ed5:	add    BYTE PTR [rcx+0x0],dl
   100015ed8:	rex.WR add BYTE PTR [rax],r12b
   100015edb:	add    BYTE PTR [rcx+0x0],al
   100015ede:	jp     0x100015ee0
   100015ee0:	jne    0x100015ee2
   100015ee2:	jb     0x100015ee4
   100015ee4:	add    BYTE PTR gs:[rax],ah
   100015ee7:	add    BYTE PTR [rax],ch
   100015ee9:	add    BYTE PTR [rdx+0x0],dl
   100015eec:	push   rsp
   100015eed:	add    BYTE PTR [rbp+0x0],cl
   100015ef0:	sub    DWORD PTR [rax],eax
   100015ef2:	and    BYTE PTR [rax],al
   100015ef4:	sub    eax,0x31002000
   100015ef9:	add    BYTE PTR [rcx],dh
   100015efb:	add    BYTE PTR [rsi],ch
   100015efd:	add    BYTE PTR [rax],dh
   100015eff:	add    BYTE PTR [rsi],ch
   100015f01:	add    BYTE PTR [rdx],dh
   100015f03:	add    BYTE PTR [rcx],dh
   100015f05:	add    BYTE PTR [rax],dh
   100015f07:	add    BYTE PTR [rax],dh
   100015f09:	add    BYTE PTR [rsi],ch
   100015f0b:	add    BYTE PTR [rsi],dh
   100015f0d:	add    BYTE PTR [rax],dh
   100015f0f:	add    BYTE PTR [rax],al
   100015f11:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100015f17:	nop
   100015f18:	nop
   100015f19:	nop
   100015f1a:	nop
   100015f1b:	nop
   100015f1c:	nop
   100015f1d:	nop
   100015f1e:	nop
   100015f1f:	nop
   100015f20:	test   ecx,ecx
   100015f22:	jns    0x100015fab
   100015f28:	mov    QWORD PTR [rsp+0x18],rbx
   100015f2d:	push   rdi
   100015f2e:	sub    rsp,0x240
   100015f35:	mov    rax,QWORD PTR [rip+0x132b4]        # 0x1000291f0
   100015f3c:	xor    rax,rsp
   100015f3f:	mov    QWORD PTR [rsp+0x230],rax
   100015f47:	mov    rdi,rdx
   100015f4a:	mov    ebx,ecx
   100015f4c:	call   QWORD PTR [rip+0xfffffffffffeb766]        # 0x1000016b8
   100015f52:	call   QWORD PTR [rip+0xfffffffffffebce0]        # 0x100001c38
   100015f58:	lea    r8,[rip+0xfffffffffffed861]        # 0x1000037c0
   100015f5f:	lea    rcx,[rsp+0x30]
   100015f64:	mov    edx,0x200
   100015f69:	mov    r9,rax
   100015f6c:	mov    DWORD PTR [rsp+0x28],ebx
   100015f70:	mov    QWORD PTR [rsp+0x20],rdi
   100015f75:	call   0x10000eb40
   100015f7a:	mov    rcx,rdi
   100015f7d:	test   eax,eax
   100015f7f:	js     0x100015f86
   100015f81:	lea    rcx,[rsp+0x30]
   100015f86:	call   0x100015fc0
   100015f8b:	mov    rcx,QWORD PTR [rsp+0x230]
   100015f93:	xor    rcx,rsp
   100015f96:	call   0x100002610
   100015f9b:	mov    rbx,QWORD PTR [rsp+0x260]
   100015fa3:	add    rsp,0x240
   100015faa:	pop    rdi
   100015fab:	repz ret 
   100015fad:	nop
   100015fae:	nop
   100015faf:	nop
   100015fb0:	nop
   100015fb1:	nop
   100015fb2:	nop
   100015fb3:	nop
   100015fb4:	nop
   100015fb5:	nop
   100015fb6:	nop
   100015fb7:	nop
   100015fb8:	nop
   100015fb9:	nop
   100015fba:	nop
   100015fbb:	nop
   100015fbc:	nop
   100015fbd:	nop
   100015fbe:	nop
   100015fbf:	nop
   100015fc0:	mov    QWORD PTR [rsp+0x10],rbx
   100015fc5:	push   rdi
   100015fc6:	sub    rsp,0x850
   100015fcd:	mov    rax,QWORD PTR [rip+0x1321c]        # 0x1000291f0
   100015fd4:	xor    rax,rsp
   100015fd7:	mov    QWORD PTR [rsp+0x840],rax
   100015fdf:	mov    rbx,rcx
   100015fe2:	call   QWORD PTR [rip+0xfffffffffffebc20]        # 0x100001c08
   100015fe8:	mov    QWORD PTR [rsp+0x30],rbx
   100015fed:	lea    rdi,[rip+0xfffffffffffed6e4]        # 0x1000036d8
   100015ff4:	lea    r8,[rsp+0x40]
   100015ff9:	mov    r9d,0x400
   100015fff:	mov    rcx,rax
   100016002:	mov    edx,0x48a5
   100016007:	mov    QWORD PTR [rsp+0x28],rdi
   10001600c:	mov    DWORD PTR [rsp+0x20],0x14
   100016014:	call   0x1000121a0
   100016019:	test   eax,eax
   10001601b:	jg     0x100016041
   10001601d:	call   QWORD PTR [rip+0xfffffffffffebc15]        # 0x100001c38
   100016023:	lea    r8,[rip+0x66]        # 0x100016090
   10001602a:	lea    rcx,[rsp+0x40]
   10001602f:	mov    edx,0x400
   100016034:	mov    r9,rax
   100016037:	mov    QWORD PTR [rsp+0x20],rbx
   10001603c:	call   0x100005bb0
   100016041:	lea    rdx,[rsp+0x40]
   100016046:	mov    r9d,0x210010
   10001604c:	mov    r8,rdi
   10001604f:	xor    ecx,ecx
   100016051:	call   QWORD PTR [rip+0x12fe1]        # 0x100029038
   100016057:	mov    ecx,0x1
   10001605c:	call   QWORD PTR [rip+0xfffffffffffebb46]        # 0x100001ba8
   100016062:	mov    rcx,QWORD PTR [rsp+0x840]
   10001606a:	xor    rcx,rsp
   10001606d:	call   0x100002610
   100016072:	mov    rbx,QWORD PTR [rsp+0x868]
   10001607a:	add    rsp,0x850
   100016081:	pop    rdi
   100016082:	ret    
   100016083:	nop
   100016084:	nop
   100016085:	nop
   100016086:	nop
   100016087:	nop
   100016088:	nop
   100016089:	nop
   10001608a:	nop
   10001608b:	nop
   10001608c:	nop
   10001608d:	nop
   10001608e:	nop
   10001608f:	nop
   100016090:	pop    rcx
   100016091:	add    BYTE PTR [rdi+0x0],ch
   100016094:	jne    0x100016096
   100016096:	jb     0x100016098
   100016098:	and    BYTE PTR [rax],al
   10001609a:	push   rbx
   10001609b:	add    BYTE PTR [rcx+0x0],dl
   10001609e:	rex.WR add BYTE PTR [rax],r12b
   1000160a1:	add    BYTE PTR [rbx+0x0],dl
   1000160a4:	add    BYTE PTR gs:[rdx+0x0],dh
   1000160a8:	jbe    0x1000160aa
   1000160aa:	add    BYTE PTR gs:[rdx+0x0],dh
   1000160ae:	and    BYTE PTR [rax],al
   1000160b0:	imul   eax,DWORD PTR [rax],0x73006e
   1000160b6:	je     0x1000160b8
   1000160b8:	(bad)  
   1000160b9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1000160bd:	add    BYTE PTR [rcx+0x0],ah
   1000160c0:	je     0x1000160c2
   1000160c2:	imul   eax,DWORD PTR [rax],0x6e006f
   1000160c8:	and    BYTE PTR [rax],al
   1000160ca:	imul   eax,DWORD PTR [rax],0x200073
   1000160d0:	add    BYTE PTR gs:[rcx+0x0],ch
   1000160d4:	je     0x1000160d6
   1000160d6:	push   0x72006500
   1000160db:	add    BYTE PTR [rax],ah
   1000160dd:	add    BYTE PTR [rbx+0x0],ah
   1000160e0:	outs   dx,DWORD PTR ds:[rsi]
   1000160e1:	add    BYTE PTR [rdx+0x0],dh
   1000160e4:	jb     0x1000160e6
   1000160e6:	jne    0x1000160e8
   1000160e8:	jo     0x1000160ea
   1000160ea:	je     0x1000160ec
   1000160ec:	and    BYTE PTR [rax],al
   1000160ee:	outs   dx,DWORD PTR ds:[rsi]
   1000160ef:	add    BYTE PTR [rdx+0x0],dh
   1000160f2:	and    BYTE PTR [rax],al
   1000160f4:	push   0x73006100
   1000160f9:	add    BYTE PTR [rax],ah
   1000160fb:	add    BYTE PTR [rdx+0x0],ah
   1000160fe:	add    BYTE PTR gs:[rbp+0x0],ah
   100016102:	outs   dx,BYTE PTR ds:[rsi]
   100016103:	add    BYTE PTR [rax],ah
   100016105:	add    BYTE PTR [rax+rax*1+0x61],dh
   100016109:	add    BYTE PTR [rbp+0x0],ch
   10001610c:	jo     0x10001610e
   10001610e:	add    BYTE PTR gs:[rdx+0x0],dh
   100016112:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   100016117:	add    BYTE PTR [rdi+0x0],dh
   10001611a:	imul   eax,DWORD PTR [rax],0x680074
   100016120:	and    BYTE PTR [rax],al
   100016122:	sub    BYTE PTR [rax],al
   100016124:	and    eax,0x73006800
   100016129:	add    BYTE PTR [rcx],ch
   10001612b:	add    BYTE PTR [rsi],ch
   10001612d:	add    BYTE PTR [rax],ah
   10001612f:	add    BYTE PTR [rax],ah
   100016131:	add    BYTE PTR [rax],ah
   100016133:	add    BYTE PTR [rax+0x0],dl
   100016136:	ins    BYTE PTR es:[rdi],dx
   100016137:	add    BYTE PTR [rbp+0x0],ah
   10001613a:	(bad)  
   10001613b:	add    BYTE PTR [rbx+0x0],dh
   10001613e:	add    BYTE PTR gs:[rax],ah
   100016141:	add    BYTE PTR [rbp+0x0],dh
   100016144:	outs   dx,BYTE PTR ds:[rsi]
   100016145:	add    BYTE PTR [rcx+0x0],ch
   100016148:	outs   dx,BYTE PTR ds:[rsi]
   100016149:	add    BYTE PTR [rbx+0x0],dh
   10001614c:	je     0x10001614e
   10001614e:	(bad)  
   10001614f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   100016153:	add    BYTE PTR [rax],ah
   100016155:	add    BYTE PTR [rax+rax*1+0x68],dh
   100016159:	add    BYTE PTR [rbp+0x0],ah
   10001615c:	outs   dx,BYTE PTR ds:[rsi]
   10001615d:	add    BYTE PTR [rax],ah
   10001615f:	add    BYTE PTR [rdx+0x0],dh
   100016162:	add    BYTE PTR gs:[rip+0x75007200],ch        # 0x17501d369
   100016169:	add    BYTE PTR [rsi+0x0],ch
   10001616c:	and    BYTE PTR [rax],al
   10001616e:	jae    0x100016170
   100016170:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   100016175:	add    BYTE PTR [rax+0x0],dh
   100016178:	and    BYTE PTR [rax],al
   10001617a:	je     0x10001617c
   10001617c:	outs   dx,DWORD PTR ds:[rsi]
   10001617d:	add    BYTE PTR [rax],ah
   10001617f:	add    BYTE PTR [rbx+0x0],ah
   100016182:	outs   dx,DWORD PTR ds:[rsi]
   100016183:	add    BYTE PTR [rdx+0x0],dh
   100016186:	jb     0x100016188
   100016188:	add    BYTE PTR gs:[rbx+0x0],ah
   10001618c:	je     0x10001618e
   10001618e:	and    BYTE PTR [rax],al
   100016190:	je     0x100016192
   100016192:	push   0x73006900
   100016197:	add    BYTE PTR [rax],ah
   100016199:	add    BYTE PTR [rax+0x0],dh
   10001619c:	jb     0x10001619e
   10001619e:	outs   dx,DWORD PTR ds:[rsi]
   10001619f:	add    BYTE PTR [rdx+0x0],ah
   1000161a2:	ins    BYTE PTR es:[rdi],dx
   1000161a3:	add    BYTE PTR [rbp+0x0],ah
   1000161a6:	ins    DWORD PTR es:[rdi],dx
   1000161a7:	add    BYTE PTR [rax],al
   1000161a9:	add    BYTE PTR [rax-0x6f6f6f70],dl
   1000161af:	nop
   1000161b0:	sub    rsp,0x258
   1000161b7:	mov    rax,QWORD PTR [rip+0x13032]        # 0x1000291f0
   1000161be:	xor    rax,rsp
   1000161c1:	mov    QWORD PTR [rsp+0x240],rax
   1000161c9:	mov    rdx,rcx
   1000161cc:	test   rcx,rcx
   1000161cf:	jne    0x1000161f6
   1000161d1:	mov    ecx,0x7b
   1000161d6:	call   QWORD PTR [rip+0xfffffffffffeb01c]        # 0x1000011f8
   1000161dc:	xor    eax,eax
   1000161de:	mov    rcx,QWORD PTR [rsp+0x240]
   1000161e6:	xor    rcx,rsp
   1000161e9:	call   0x100002610
   1000161ee:	add    rsp,0x258
   1000161f5:	ret    
   1000161f6:	mov    ecx,0x105
   1000161fb:	mov    rax,rdx
   1000161fe:	xchg   ax,ax
   100016200:	cmp    BYTE PTR [rax],0x0
   100016203:	je     0x10001620f
   100016205:	inc    rax
   100016208:	dec    rcx
   10001620b:	jne    0x100016200
   10001620d:	jmp    0x1000161d1
   10001620f:	test   rcx,rcx
   100016212:	je     0x1000161d1
   100016214:	lea    r9,[rsp+0x30]
   100016219:	or     r8d,0xffffffff
   10001621d:	xor    ecx,ecx
   10001621f:	mov    DWORD PTR [rsp+0x20],0x105
   100016227:	call   QWORD PTR [rip+0xfffffffffffeb783]        # 0x1000019b0
   10001622d:	xor    r9d,r9d
   100016230:	lea    rcx,[rsp+0x30]
   100016235:	lea    edx,[r9+0x1]
   100016239:	xor    r8d,r8d
   10001623c:	call   QWORD PTR [rip+0xfffffffffffebc76]        # 0x100001eb8
   100016242:	mov    rcx,QWORD PTR [rsp+0x240]
   10001624a:	xor    rcx,rsp
   10001624d:	call   0x100002610
   100016252:	add    rsp,0x258
   100016259:	ret    
   10001625a:	nop
   10001625b:	nop
   10001625c:	nop
   10001625d:	nop
   10001625e:	nop
   10001625f:	nop
   100016260:	push   rbx
   100016262:	sub    rsp,0x20
   100016266:	mov    rax,QWORD PTR gs:0x30
   10001626f:	mov    ebx,ecx
   100016271:	mov    rcx,QWORD PTR [rip+0x12e48]        # 0x1000290c0
   100016278:	add    rax,rcx
   10001627b:	cmp    rcx,0x1480
   100016282:	jge    0x10001628a
   100016284:	call   QWORD PTR [rip+0xfffffffffffeae96]        # 0x100001120
   10001628a:	mov    rax,QWORD PTR [rax+0x18]
   10001628e:	test   BYTE PTR [rax+0x8],0x1
   100016292:	je     0x10001629e
   100016294:	mov    edx,0x6
   100016299:	lea    ecx,[rdx+0x6]
   10001629c:	jmp    0x1000162de
   10001629e:	mov    rcx,QWORD PTR [rip+0x12e1b]        # 0x1000290c0
   1000162a5:	mov    rax,QWORD PTR gs:0x30
   1000162ae:	add    rax,rcx
   1000162b1:	cmp    rcx,0x1480
   1000162b8:	jge    0x1000162c0
   1000162ba:	call   QWORD PTR [rip+0xfffffffffffeae60]        # 0x100001120
   1000162c0:	mov    rax,QWORD PTR [rax+0x18]
   1000162c4:	test   BYTE PTR [rax+0x8],0x4
   1000162c8:	je     0x1000162d6
   1000162ca:	mov    edx,0xb
   1000162cf:	mov    ecx,0x11e
   1000162d4:	jmp    0x1000162de
   1000162d6:	mov    edx,0x26
   1000162db:	lea    ecx,[rdx+0x1]
   1000162de:	mov    r9d,ebx
   1000162e1:	mov    r8d,0x12
   1000162e7:	add    rsp,0x20
   1000162eb:	pop    rbx
   1000162ec:	rex.W jmp QWORD PTR [rip+0xfffffffffffeb855]        # 0x100001b48
   1000162f3:	nop
   1000162f4:	nop
   1000162f5:	nop
   1000162f6:	nop
   1000162f7:	nop
   1000162f8:	nop
   1000162f9:	nop
   1000162fa:	nop
   1000162fb:	nop
   1000162fc:	nop
   1000162fd:	nop
   1000162fe:	nop
   1000162ff:	nop
   100016300:	sub    rsp,0x28
   100016304:	add    ecx,0xfffffffe
   100016307:	cmp    ecx,0x68
   10001630a:	ja     0x1000163d9
   100016310:	lea    rdx,[rip+0xfffffffffffe9ce9]        # 0x100000000
   100016317:	movsxd rax,ecx
   10001631a:	movzx  eax,BYTE PTR [rdx+rax*1+0x1640c]
   100016322:	mov    ecx,DWORD PTR [rdx+rax*4+0x163e0]
   100016329:	add    rcx,rdx
   10001632c:	jmp    rcx
   10001632e:	mov    edx,0x4a
   100016333:	mov    ecx,0x191
   100016338:	lea    r9d,[rdx-0x47]
   10001633c:	lea    r8d,[rdx-0x3a]
   100016340:	call   QWORD PTR [rip+0xfffffffffffeb802]        # 0x100001b48
   100016346:	xor    eax,eax
   100016348:	add    rsp,0x28
   10001634c:	ret    
   10001634d:	mov    edx,0x4a
   100016352:	mov    ecx,0x191
   100016357:	lea    r9d,[rdx-0x46]
   10001635b:	lea    r8d,[rdx-0x3a]
   10001635f:	call   QWORD PTR [rip+0xfffffffffffeb7e3]        # 0x100001b48
   100016365:	xor    eax,eax
   100016367:	add    rsp,0x28
   10001636b:	ret    
   10001636c:	mov    edx,0x4a
   100016371:	mov    ecx,0x191
   100016376:	lea    r9d,[rdx-0x45]
   10001637a:	lea    r8d,[rdx-0x3a]
   10001637e:	call   QWORD PTR [rip+0xfffffffffffeb7c4]        # 0x100001b48
   100016384:	xor    eax,eax
   100016386:	add    rsp,0x28
   10001638a:	ret    
   10001638b:	mov    edx,0x32
   100016390:	jmp    0x1000163c2
   100016392:	mov    edx,0x33
   100016397:	jmp    0x1000163c2
   100016399:	mov    edx,0x34
   10001639e:	jmp    0x1000163c2
   1000163a0:	mov    edx,0x34
   1000163a5:	lea    r9d,[rdx-0x32]
   1000163a9:	jmp    0x1000163c8
   1000163ab:	mov    edx,0x31
   1000163b0:	jmp    0x1000163c2
   1000163b2:	mov    edx,0x31
   1000163b7:	lea    r9d,[rdx-0x2f]
   1000163bb:	jmp    0x1000163c8
   1000163bd:	mov    edx,0x35
   1000163c2:	mov    r9d,0x1
   1000163c8:	mov    ecx,0x195
   1000163cd:	mov    r8d,0x10
   1000163d3:	call   QWORD PTR [rip+0xfffffffffffeb76f]        # 0x100001b48
   1000163d9:	xor    eax,eax
   1000163db:	add    rsp,0x28
   1000163df:	ret    
   1000163e0:	movsxd eax,DWORD PTR cs:[rcx]
   1000163e3:	add    BYTE PTR [rbp+0x63],cl
   1000163e6:	add    DWORD PTR [rax],eax
   1000163e8:	ins    BYTE PTR es:[rdi],dx
   1000163e9:	movsxd eax,DWORD PTR [rcx]
   1000163eb:	add    BYTE PTR [rbx-0x54fffe9d],cl
   1000163f1:	movsxd eax,DWORD PTR [rcx]
   1000163f3:	add    BYTE PTR [rdx-0x6dfffe9d],dh
   1000163f9:	movsxd eax,DWORD PTR [rcx]
   1000163fb:	add    BYTE PTR [rcx-0x5ffffe9d],bl
   100016401:	movsxd eax,DWORD PTR [rcx]
   100016403:	add    BYTE PTR [rbp-0x26fffe9d],bh
   100016409:	movsxd eax,DWORD PTR [rcx]
   10001640b:	add    BYTE PTR [rax],al
   10001640d:	add    DWORD PTR [rdx],ecx
   10001640f:	add    cl,BYTE PTR [rdx]
   100016411:	or     cl,BYTE PTR [rdx]
   100016413:	or     cl,BYTE PTR [rdx]
   100016415:	or     cl,BYTE PTR [rdx]
   100016417:	or     cl,BYTE PTR [rdx]
   100016419:	or     cl,BYTE PTR [rdx]
   10001641b:	or     cl,BYTE PTR [rdx]
   10001641d:	or     cl,BYTE PTR [rdx]
   10001641f:	or     cl,BYTE PTR [rdx]
   100016421:	or     cl,BYTE PTR [rdx]
   100016423:	or     cl,BYTE PTR [rdx]
   100016425:	or     cl,BYTE PTR [rdx]
   100016427:	or     cl,BYTE PTR [rdx]
   100016429:	or     cl,BYTE PTR [rdx]
   10001642b:	or     cl,BYTE PTR [rdx]
   10001642d:	or     cl,BYTE PTR [rdx]
   10001642f:	or     cl,BYTE PTR [rdx]
   100016431:	or     cl,BYTE PTR [rdx]
   100016433:	or     cl,BYTE PTR [rdx]
   100016435:	or     cl,BYTE PTR [rdx]
   100016437:	or     cl,BYTE PTR [rdx]
   100016439:	or     cl,BYTE PTR [rdx]
   10001643b:	or     cl,BYTE PTR [rdx]
   10001643d:	or     cl,BYTE PTR [rdx]
   10001643f:	or     cl,BYTE PTR [rdx]
   100016441:	or     cl,BYTE PTR [rdx]
   100016443:	or     cl,BYTE PTR [rdx]
   100016445:	or     cl,BYTE PTR [rdx]
   100016447:	or     cl,BYTE PTR [rdx]
   100016449:	or     cl,BYTE PTR [rdx]
   10001644b:	or     cl,BYTE PTR [rdx]
   10001644d:	or     cl,BYTE PTR [rdx]
   10001644f:	or     cl,BYTE PTR [rdx]
   100016451:	or     cl,BYTE PTR [rdx]
   100016453:	or     cl,BYTE PTR [rdx]
   100016455:	or     cl,BYTE PTR [rdx]
   100016457:	or     cl,BYTE PTR [rdx]
   100016459:	or     cl,BYTE PTR [rdx]
   10001645b:	or     cl,BYTE PTR [rdx]
   10001645d:	or     cl,BYTE PTR [rdx]
   10001645f:	or     cl,BYTE PTR [rdx]
   100016461:	or     cl,BYTE PTR [rdx]
   100016463:	or     cl,BYTE PTR [rdx]
   100016465:	or     cl,BYTE PTR [rdx]
   100016467:	or     cl,BYTE PTR [rdx]
   100016469:	or     cl,BYTE PTR [rdx]
   10001646b:	or     cl,BYTE PTR [rdx]
   10001646d:	or     al,BYTE PTR [rbx]
   10001646f:	add    al,0x5
   100016471:	(bad)  
   100016472:	(bad)  
   100016473:	or     BYTE PTR [rcx],cl
   100016475:	nop
   100016476:	nop
   100016477:	nop
   100016478:	nop
   100016479:	nop
   10001647a:	nop
   10001647b:	nop
   10001647c:	nop
   10001647d:	nop
   10001647e:	nop
   10001647f:	nop
   100016480:	push   rbx
   100016482:	sub    rsp,0x20
   100016486:	mov    ebx,ecx
   100016488:	call   0x100016590
   10001648d:	test   eax,eax
   10001648f:	je     0x1000164e6
   100016491:	mov    rcx,QWORD PTR [rip+0x12c28]        # 0x1000290c0
   100016498:	mov    rax,QWORD PTR gs:0x30
   1000164a1:	add    rax,rcx
   1000164a4:	cmp    rcx,0x1480
   1000164ab:	jge    0x1000164b3
   1000164ad:	call   QWORD PTR [rip+0xfffffffffffeac6d]        # 0x100001120
   1000164b3:	mov    rax,QWORD PTR [rax]
   1000164b6:	test   rax,rax
   1000164b9:	je     0x1000164c5
   1000164bb:	mov    rcx,QWORD PTR [rax+0x8]
   1000164bf:	cmp    BYTE PTR [rcx+0x8],0x0
   1000164c3:	jne    0x1000164e6
   1000164c5:	call   0x100016620
   1000164ca:	test   eax,eax
   1000164cc:	jne    0x1000164e6
   1000164ce:	call   QWORD PTR [rip+0xfffffffffffeb054]        # 0x100001528
   1000164d4:	test   eax,eax
   1000164d6:	je     0x1000164df
   1000164d8:	mov    ecx,ebx
   1000164da:	call   0x100016260
   1000164df:	mov    edx,0x11
   1000164e4:	jmp    0x100016564
   1000164e6:	mov    rcx,QWORD PTR [rip+0x12bd3]        # 0x1000290c0
   1000164ed:	mov    rax,QWORD PTR gs:0x30
   1000164f6:	add    rax,rcx
   1000164f9:	cmp    rcx,0x1480
   100016500:	jge    0x100016508
   100016502:	call   QWORD PTR [rip+0xfffffffffffeac18]        # 0x100001120
   100016508:	mov    rax,QWORD PTR [rax]
   10001650b:	test   rax,rax
   10001650e:	je     0x100016577
   100016510:	mov    rcx,QWORD PTR [rax+0x8]
   100016514:	cmp    BYTE PTR [rcx+0x8],0x0
   100016518:	je     0x100016577
   10001651a:	call   0x100016620
   10001651f:	test   eax,eax
   100016521:	jne    0x100016577
   100016523:	mov    rcx,QWORD PTR [rip+0x12b96]        # 0x1000290c0
   10001652a:	mov    rax,QWORD PTR gs:0x30
   100016533:	add    rax,rcx
   100016536:	cmp    rcx,0x1480
   10001653d:	jge    0x100016545
   10001653f:	call   QWORD PTR [rip+0xfffffffffffeabdb]        # 0x100001120
   100016545:	mov    rax,QWORD PTR [rax]
   100016548:	test   rax,rax
   10001654b:	je     0x100016556
   10001654d:	mov    rcx,QWORD PTR [rax+0x8]
   100016551:	mov    ecx,DWORD PTR [rcx+0xc]
   100016554:	jmp    0x100016558
   100016556:	xor    ecx,ecx
   100016558:	call   0x100016300
   10001655d:	test   eax,eax
   10001655f:	jne    0x100016577
   100016561:	lea    edx,[rax+0x2]
   100016564:	mov    r8d,0x19
   10001656a:	mov    r9d,ebx
   10001656d:	lea    ecx,[r8+0xb]
   100016571:	call   QWORD PTR [rip+0xfffffffffffeb5d1]        # 0x100001b48
   100016577:	add    rsp,0x20
   10001657b:	pop    rbx
   10001657c:	ret    
   10001657d:	nop
   10001657e:	nop
   10001657f:	nop
   100016580:	nop
   100016581:	nop
   100016582:	nop
   100016583:	nop
   100016584:	nop
   100016585:	nop
   100016586:	nop
   100016587:	nop
   100016588:	nop
   100016589:	nop
   10001658a:	nop
   10001658b:	nop
   10001658c:	nop
   10001658d:	nop
   10001658e:	nop
   10001658f:	nop
   100016590:	sub    rsp,0x28
   100016594:	mov    rcx,QWORD PTR [rip+0x12b25]        # 0x1000290c0
   10001659b:	mov    rax,QWORD PTR gs:0x30
   1000165a4:	add    rax,rcx
   1000165a7:	cmp    rcx,0x1480
   1000165ae:	jge    0x1000165b6
   1000165b0:	call   QWORD PTR [rip+0xfffffffffffeab6a]        # 0x100001120
   1000165b6:	test   rax,rax
   1000165b9:	je     0x1000165c7
   1000165bb:	mov    rax,QWORD PTR [rax+0xd8]
   1000165c2:	test   rax,rax
   1000165c5:	jne    0x1000165f9
   1000165c7:	call   QWORD PTR [rip+0xfffffffffffeb583]        # 0x100001b50
   1000165cd:	mov    r11,QWORD PTR [rip+0x12aec]        # 0x1000290c0
   1000165d4:	mov    rax,QWORD PTR gs:0x30
   1000165dd:	add    rax,r11
   1000165e0:	cmp    r11,0x1480
   1000165e7:	jge    0x1000165f2
   1000165e9:	mov    ecx,r11d
   1000165ec:	call   QWORD PTR [rip+0xfffffffffffeab2e]        # 0x100001120
   1000165f2:	mov    rax,QWORD PTR [rax+0xd8]
   1000165f9:	mov    rax,QWORD PTR [rax+0x210]
   100016600:	mov    eax,DWORD PTR [rax+0xb4]
   100016606:	shr    eax,0x2
   100016609:	and    eax,0x1
   10001660c:	add    rsp,0x28
   100016610:	ret    
   100016611:	nop
   100016612:	nop
   100016613:	nop
   100016614:	nop
   100016615:	nop
   100016616:	nop
   100016617:	nop
   100016618:	nop
   100016619:	nop
   10001661a:	nop
   10001661b:	nop
   10001661c:	nop
   10001661d:	nop
   10001661e:	nop
   10001661f:	nop
   100016620:	sub    rsp,0x28
   100016624:	mov    rcx,QWORD PTR [rip+0x12a95]        # 0x1000290c0
   10001662b:	mov    rax,QWORD PTR gs:0x30
   100016634:	add    rax,rcx
   100016637:	cmp    rcx,0x1480
   10001663e:	jge    0x100016646
   100016640:	call   QWORD PTR [rip+0xfffffffffffeaada]        # 0x100001120
   100016646:	test   rax,rax
   100016649:	je     0x100016657
   10001664b:	mov    rcx,QWORD PTR [rax+0xd8]
   100016652:	test   rcx,rcx
   100016655:	jne    0x100016689
   100016657:	call   QWORD PTR [rip+0xfffffffffffeb4f3]        # 0x100001b50
   10001665d:	mov    r11,QWORD PTR [rip+0x12a5c]        # 0x1000290c0
   100016664:	mov    rax,QWORD PTR gs:0x30
   10001666d:	add    rax,r11
   100016670:	cmp    r11,0x1480
   100016677:	jge    0x100016682
   100016679:	mov    ecx,r11d
   10001667c:	call   QWORD PTR [rip+0xfffffffffffeaa9e]        # 0x100001120
   100016682:	mov    rcx,QWORD PTR [rax+0xd8]
   100016689:	test   BYTE PTR [rcx+0x220],0x1
   100016690:	jne    0x1000166a9
   100016692:	mov    eax,DWORD PTR [rcx+0x2d8]
   100016698:	test   al,al
   10001669a:	js     0x1000166a9
   10001669c:	bt     eax,0x8
   1000166a0:	jb     0x1000166a9
   1000166a2:	xor    eax,eax
   1000166a4:	add    rsp,0x28
   1000166a8:	ret    
   1000166a9:	mov    eax,0x1
   1000166ae:	add    rsp,0x28
   1000166b2:	ret    
   1000166b3:	nop
   1000166b4:	nop
   1000166b5:	nop
   1000166b6:	nop
   1000166b7:	nop
   1000166b8:	nop
   1000166b9:	nop
   1000166ba:	nop
   1000166bb:	nop
   1000166bc:	nop
   1000166bd:	nop
   1000166be:	nop
   1000166bf:	nop
   1000166c0:	mov    QWORD PTR [rsp+0x10],rbx
   1000166c5:	push   rsi
   1000166c6:	sub    rsp,0x30
   1000166ca:	xor    ebx,ebx
   1000166cc:	mov    rsi,rcx
   1000166cf:	mov    eax,ebx
   1000166d1:	test   rdx,rdx
   1000166d4:	je     0x1000166df
   1000166d6:	cmp    rdx,0x7fffffff
   1000166dd:	jbe    0x1000166e4
   1000166df:	mov    eax,0x80070057
   1000166e4:	test   eax,eax
   1000166e6:	js     0x100016737
   1000166e8:	mov    rax,QWORD PTR [rsp+0x60]
   1000166ed:	mov    QWORD PTR [rsp+0x40],rdi
   1000166f2:	lea    rdi,[rdx-0x1]
   1000166f6:	mov    rdx,rdi
   1000166f9:	mov    QWORD PTR [rsp+0x20],rax
   1000166fe:	call   QWORD PTR [rip+0xfffffffffffead3c]        # 0x100001440
   100016704:	test   eax,eax
   100016706:	js     0x100016727
   100016708:	cdqe   
   10001670a:	cmp    rax,rdi
   10001670d:	ja     0x100016727
   10001670f:	jne    0x100016730
   100016711:	mov    WORD PTR [rsi+rdi*2],bx
   100016715:	mov    rdi,QWORD PTR [rsp+0x40]
   10001671a:	mov    eax,ebx
   10001671c:	mov    rbx,QWORD PTR [rsp+0x48]
   100016721:	add    rsp,0x30
   100016725:	pop    rsi
   100016726:	ret    
   100016727:	mov    WORD PTR [rsi+rdi*2],bx
   10001672b:	mov    ebx,0x8007007a
   100016730:	mov    rdi,QWORD PTR [rsp+0x40]
   100016735:	mov    eax,ebx
   100016737:	mov    rbx,QWORD PTR [rsp+0x48]
   10001673c:	add    rsp,0x30
   100016740:	pop    rsi
   100016741:	ret    
   100016742:	nop
   100016743:	nop
   100016744:	nop
   100016745:	nop
   100016746:	nop
   100016747:	nop
   100016748:	nop
   100016749:	nop
   10001674a:	nop
   10001674b:	nop
   10001674c:	nop
   10001674d:	nop
   10001674e:	nop
   10001674f:	nop
   100016750:	and    BYTE PTR [rcx],0xc0
   100016753:	xor    edx,edx
   100016755:	xor    eax,eax
   100016757:	mov    DWORD PTR [rcx+0xc],0xe97e87f7
   10001675e:	mov    QWORD PTR [rcx+0x2c],0x1000
   100016766:	mov    DWORD PTR [rcx+0x34],0xffffffff
   10001676d:	mov    QWORD PTR [rcx+0x4],rdx
   100016771:	mov    WORD PTR [rcx+0x10],dx
   100016775:	mov    QWORD PTR [rcx+0x20],rdx
   100016779:	mov    DWORD PTR [rcx+0x28],edx
   10001677c:	mov    QWORD PTR [rcx+0x38],rdx
   100016780:	mov    QWORD PTR [rcx+0x40],rdx
   100016784:	mov    DWORD PTR [rcx+0x48],edx
   100016787:	mov    QWORD PTR [rcx+0x4c],0x2
   10001678f:	mov    QWORD PTR [rcx+0x14],rax
   100016793:	mov    DWORD PTR [rcx+0x1c],eax
   100016796:	mov    rax,rcx
   100016799:	ret    
   10001679a:	nop
   10001679b:	nop
   10001679c:	nop
   10001679d:	nop
   10001679e:	nop
   10001679f:	nop
   1000167a0:	push   rbx
   1000167a2:	sub    rsp,0x20
   1000167a6:	and    BYTE PTR [rcx],0xdf
   1000167a9:	test   BYTE PTR [rcx],0x1
   1000167ac:	mov    rbx,rcx
   1000167af:	je     0x1000167ba
   1000167b1:	call   QWORD PTR [rip+0xfffffffffffeb1f1]        # 0x1000019a8
   1000167b7:	and    BYTE PTR [rbx],0xfe
   1000167ba:	add    rsp,0x20
   1000167be:	pop    rbx
   1000167bf:	ret    
   1000167c0:	nop
   1000167c1:	nop
   1000167c2:	nop
   1000167c3:	nop
   1000167c4:	nop
   1000167c5:	nop
   1000167c6:	nop
   1000167c7:	nop
   1000167c8:	nop
   1000167c9:	nop
   1000167ca:	nop
   1000167cb:	nop
   1000167cc:	nop
   1000167cd:	nop
   1000167ce:	nop
   1000167cf:	nop
   1000167d0:	push   rbx
   1000167d2:	sub    rsp,0x20
   1000167d6:	mov    eax,DWORD PTR [rcx+0xc]
   1000167d9:	mov    rbx,rcx
   1000167dc:	not    eax
   1000167de:	test   eax,0x7eff7fff
   1000167e3:	jne    0x1000167f3
   1000167e5:	mov    eax,DWORD PTR [rcx+0x4]
   1000167e8:	and    eax,0x7eff7fff
   1000167ed:	add    rsp,0x20
   1000167f1:	pop    rbx
   1000167f2:	ret    
   1000167f3:	lea    rcx,[rsp+0x30]
   1000167f8:	mov    DWORD PTR [rsp+0x30],0x0
   100016800:	call   QWORD PTR [rip+0xfffffffffffeb19a]        # 0x1000019a0
   100016806:	test   al,al
   100016808:	mov    eax,DWORD PTR [rbx+0x4]
   10001680b:	je     0x10001681a
   10001680d:	mov    ecx,DWORD PTR [rbx+0xc]
   100016810:	and    eax,ecx
   100016812:	not    ecx
   100016814:	and    ecx,DWORD PTR [rsp+0x30]
   100016818:	or     eax,ecx
   10001681a:	and    eax,0x7eff7fff
   10001681f:	add    rsp,0x20
   100016823:	pop    rbx
   100016824:	ret    
   100016825:	nop
   100016826:	nop
   100016827:	nop
   100016828:	nop
   100016829:	nop
   10001682a:	nop
   10001682b:	nop
   10001682c:	nop
   10001682d:	nop
   10001682e:	nop
   10001682f:	nop
   100016830:	push   rbp
   100016832:	lea    rbp,[rsp-0x57]
   100016837:	sub    rsp,0x100
   10001683e:	mov    QWORD PTR [rbp-0x21],0xfffffffffffffffe
   100016846:	mov    rax,QWORD PTR [rip+0x129a3]        # 0x1000291f0
   10001684d:	xor    rax,rsp
   100016850:	mov    QWORD PTR [rbp+0x47],rax
   100016854:	lea    rax,[rbp-0x19]
   100016858:	mov    QWORD PTR [rbp-0x29],rax
   10001685c:	movzx  eax,BYTE PTR [rbp-0x19]
   100016860:	and    al,0xfe
   100016862:	mov    BYTE PTR [rbp-0x19],al
   100016865:	and    al,0xfd
   100016867:	mov    BYTE PTR [rbp-0x19],al
   10001686a:	and    al,0xfb
   10001686c:	mov    BYTE PTR [rbp-0x19],al
   10001686f:	and    al,0xf7
   100016871:	mov    BYTE PTR [rbp-0x19],al
   100016874:	and    al,0xef
   100016876:	mov    BYTE PTR [rbp-0x19],al
   100016879:	and    al,0xdf
   10001687b:	mov    BYTE PTR [rbp-0x19],al
   10001687e:	xor    ecx,ecx
   100016880:	mov    QWORD PTR [rbp-0x15],rcx
   100016884:	mov    DWORD PTR [rbp-0xd],0xe97e87f7
   10001688b:	mov    WORD PTR [rbp-0x9],cx
   10001688f:	xor    eax,eax
   100016891:	mov    QWORD PTR [rbp-0x5],rax
   100016895:	mov    QWORD PTR [rbp-0x1],rax
   100016899:	mov    QWORD PTR [rbp+0x7],rcx
   10001689d:	mov    DWORD PTR [rbp+0xf],ecx
   1000168a0:	mov    QWORD PTR [rbp+0x13],0x1000
   1000168a8:	mov    DWORD PTR [rbp+0x1b],0xffffffff
   1000168af:	mov    QWORD PTR [rbp+0x1f],rcx
   1000168b3:	mov    QWORD PTR [rbp+0x27],rcx
   1000168b7:	mov    DWORD PTR [rbp+0x2f],ecx
   1000168ba:	mov    QWORD PTR [rbp+0x33],0x2
   1000168c2:	mov    DWORD PTR [rbp-0x5],eax
   1000168c5:	mov    DWORD PTR [rbp+0x3],eax
   1000168c8:	mov    rax,QWORD PTR [rbp-0x19]
   1000168cc:	mov    QWORD PTR [rsp+0x70],rax
   1000168d1:	lea    rax,[rip+0x135e8]        # 0x100029ec0
   1000168d8:	mov    QWORD PTR [rsp+0x68],rax
   1000168dd:	lea    rax,[rip+0x40c]        # 0x100016cf0
   1000168e4:	mov    QWORD PTR [rsp+0x60],rax
   1000168e9:	lea    rax,[rip+0x3f0]        # 0x100016ce0
   1000168f0:	mov    QWORD PTR [rsp+0x58],rax
   1000168f5:	lea    rax,[rip+0x3d4]        # 0x100016cd0
   1000168fc:	mov    QWORD PTR [rsp+0x50],rax
   100016901:	lea    rax,[rip+0x3b8]        # 0x100016cc0
   100016908:	mov    QWORD PTR [rsp+0x48],rax
   10001690d:	lea    rax,[rip+0x6c]        # 0x100016980
   100016914:	mov    QWORD PTR [rsp+0x40],rax
   100016919:	lea    rax,[rip+0x110]        # 0x100016a30
   100016920:	mov    QWORD PTR [rsp+0x38],rax
   100016925:	lea    rax,[rip+0x64]        # 0x100016990
   10001692c:	mov    QWORD PTR [rsp+0x30],rax
   100016931:	mov    DWORD PTR [rsp+0x28],ecx
   100016935:	mov    QWORD PTR [rsp+0x20],0x8
   10001693e:	xor    r9d,r9d
   100016941:	mov    edx,0xcac00
   100016946:	lea    r8d,[rcx+0x58]
   10001694a:	lea    rcx,[rip+0x2225f]        # 0x100038bb0
   100016951:	call   QWORD PTR [rip+0xfffffffffffeb581]        # 0x100001ed8
   100016957:	lea    rax,[rip+0x22252]        # 0x100038bb0
   10001695e:	mov    rcx,QWORD PTR [rbp+0x47]
   100016962:	xor    rcx,rsp
   100016965:	call   0x100002610
   10001696a:	add    rsp,0x100
   100016971:	pop    rbp
   100016972:	ret    
   100016973:	nop
   100016974:	nop
   100016975:	nop
   100016976:	nop
   100016977:	nop
   100016978:	nop
   100016979:	nop
   10001697a:	nop
   10001697b:	nop
   10001697c:	nop
   10001697d:	nop
   10001697e:	nop
   10001697f:	nop
   100016980:	lea    rax,[rip+0x22229]        # 0x100038bb0
   100016987:	ret    
   100016988:	nop
   100016989:	nop
   10001698a:	nop
   10001698b:	nop
   10001698c:	nop
   10001698d:	nop
   10001698e:	nop
   10001698f:	nop
   100016990:	mov    QWORD PTR [rsp+0x8],rcx
   100016995:	push   rbx
   100016996:	sub    rsp,0x40
   10001699a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1000169a3:	mov    rax,QWORD PTR [rcx]
   1000169a6:	mov    BYTE PTR [rsp+0x20],0x6
   1000169ab:	mov    r9d,0x530
   1000169b1:	lea    r8,[rip+0xfffffffffffece20]        # 0x1000037d8
   1000169b8:	mov    edx,0x58
   1000169bd:	call   QWORD PTR [rax+0x48]
   1000169c0:	mov    rbx,rax
   1000169c3:	test   rax,rax
   1000169c6:	jne    0x1000169d0
   1000169c8:	lea    ecx,[rax+0x7b]
   1000169cb:	call   0x100003a00
   1000169d0:	mov    QWORD PTR [rsp+0x58],rbx
   1000169d5:	and    BYTE PTR [rbx],0xc0
   1000169d8:	xor    ecx,ecx
   1000169da:	mov    QWORD PTR [rbx+0x4],rcx
   1000169de:	mov    DWORD PTR [rbx+0xc],0xe97e87f7
   1000169e5:	mov    WORD PTR [rbx+0x10],cx
   1000169e9:	xor    eax,eax
   1000169eb:	mov    QWORD PTR [rbx+0x20],rcx
   1000169ef:	mov    DWORD PTR [rbx+0x28],ecx
   1000169f2:	mov    QWORD PTR [rbx+0x2c],0x1000
   1000169fa:	mov    DWORD PTR [rbx+0x34],0xffffffff
   100016a01:	mov    QWORD PTR [rbx+0x38],rcx
   100016a05:	mov    QWORD PTR [rbx+0x40],rcx
   100016a09:	mov    DWORD PTR [rbx+0x48],ecx
   100016a0c:	mov    QWORD PTR [rbx+0x4c],0x2
   100016a14:	mov    QWORD PTR [rbx+0x14],rax
   100016a18:	mov    DWORD PTR [rbx+0x1c],eax
   100016a1b:	mov    rax,rbx
   100016a1e:	add    rsp,0x40
   100016a22:	pop    rbx
   100016a23:	ret    
   100016a24:	nop
   100016a25:	nop
   100016a26:	nop
   100016a27:	nop
   100016a28:	nop
   100016a29:	nop
   100016a2a:	nop
   100016a2b:	nop
   100016a2c:	nop
   100016a2d:	nop
   100016a2e:	nop
   100016a2f:	nop
   100016a30:	mov    QWORD PTR [rsp+0x8],rbx
   100016a35:	mov    QWORD PTR [rsp+0x10],rsi
   100016a3a:	push   rdi
   100016a3b:	sub    rsp,0x30
   100016a3f:	movsxd rdi,ecx
   100016a42:	mov    eax,0x58
   100016a47:	mov    rsi,rdx
   100016a4a:	mul    rdi
   100016a4d:	mov    rbx,rax
   100016a50:	mov    rax,0xffffffffffffffff
   100016a57:	cmovo  rbx,rax
   100016a5b:	add    rbx,0x8
   100016a5f:	cmovb  rbx,rax
   100016a63:	cmp    rbx,rax
   100016a66:	jne    0x100016a70
   100016a68:	lea    ecx,[rax+0x20]
   100016a6b:	call   0x100003a00
   100016a70:	mov    rax,QWORD PTR [rsi]
   100016a73:	lea    r8,[rip+0xfffffffffffecd5e]        # 0x1000037d8
   100016a7a:	mov    r9d,0x535
   100016a80:	mov    rdx,rbx
   100016a83:	mov    rcx,rsi
   100016a86:	mov    BYTE PTR [rsp+0x20],0x6
   100016a8b:	call   QWORD PTR [rax+0x48]
   100016a8e:	mov    rbx,rax
   100016a91:	test   rax,rax
   100016a94:	jne    0x100016a9e
   100016a96:	lea    ecx,[rax+0x7b]
   100016a99:	call   0x100003a00
   100016a9e:	lea    rax,[rip+0xfffffffffffffcfb]        # 0x1000167a0
   100016aa5:	lea    r9,[rip+0xfffffffffffffca4]        # 0x100016750
   100016aac:	lea    rcx,[rbx+0x8]
   100016ab0:	mov    r8d,edi
   100016ab3:	mov    edx,0x58
   100016ab8:	mov    DWORD PTR [rbx],edi
   100016aba:	mov    QWORD PTR [rsp+0x20],rax
   100016abf:	call   0x10001f8a8
   100016ac4:	mov    rsi,QWORD PTR [rsp+0x48]
   100016ac9:	lea    rax,[rbx+0x8]
   100016acd:	mov    rbx,QWORD PTR [rsp+0x40]
   100016ad2:	add    rsp,0x30
   100016ad6:	pop    rdi
   100016ad7:	ret    
   100016ad8:	nop
   100016ad9:	nop
   100016ada:	nop
   100016adb:	nop
   100016adc:	nop
   100016add:	nop
   100016ade:	nop
   100016adf:	nop
   100016ae0:	mov    r9,QWORD PTR [rcx]
   100016ae3:	cmp    QWORD PTR [r9+0x10],0x4
   100016ae8:	jb     0x100016b17
   100016aea:	mov    rax,QWORD PTR [r9+0x8]
   100016aee:	mov    ecx,DWORD PTR [rax]
   100016af0:	mov    DWORD PTR [rdx],ecx
   100016af2:	movzx  eax,WORD PTR [r9+0x28]
   100016af7:	test   ax,ax
   100016afa:	je     0x100016b0c
   100016afc:	sub    ax,0x4
   100016b00:	mov    WORD PTR [r9+0x28],ax
   100016b05:	sete   al
   100016b08:	mov    BYTE PTR [r9+0x2a],al
   100016b0c:	add    QWORD PTR [r9+0x8],0x4
   100016b11:	add    QWORD PTR [r9+0x10],0xfffffffffffffffc
   100016b16:	ret    
   100016b17:	mov    rax,QWORD PTR [r9]
   100016b1a:	mov    r8d,0x4
   100016b20:	mov    rcx,r9
   100016b23:	rex.W jmp QWORD PTR [rax+0x8]
   100016b27:	nop
   100016b28:	nop
   100016b29:	nop
   100016b2a:	nop
   100016b2b:	nop
   100016b2c:	nop
   100016b2d:	nop
   100016b2e:	nop
   100016b2f:	nop
   100016b30:	mov    r9,QWORD PTR [rcx]
   100016b33:	cmp    QWORD PTR [r9+0x10],0x4
   100016b38:	jb     0x100016b67
   100016b3a:	mov    rax,QWORD PTR [r9+0x8]
   100016b3e:	mov    ecx,DWORD PTR [rax]
   100016b40:	mov    DWORD PTR [rdx],ecx
   100016b42:	movzx  eax,WORD PTR [r9+0x28]
   100016b47:	test   ax,ax
   100016b4a:	je     0x100016b5c
   100016b4c:	sub    ax,0x4
   100016b50:	mov    WORD PTR [r9+0x28],ax
   100016b55:	sete   al
   100016b58:	mov    BYTE PTR [r9+0x2a],al
   100016b5c:	add    QWORD PTR [r9+0x8],0x4
   100016b61:	add    QWORD PTR [r9+0x10],0xfffffffffffffffc
   100016b66:	ret    
   100016b67:	mov    rax,QWORD PTR [r9]
   100016b6a:	mov    r8d,0x4
   100016b70:	mov    rcx,r9
   100016b73:	rex.W jmp QWORD PTR [rax+0x8]
   100016b77:	nop
   100016b78:	nop
   100016b79:	nop
   100016b7a:	nop
   100016b7b:	nop
   100016b7c:	nop
   100016b7d:	nop
   100016b7e:	nop
   100016b7f:	nop
   100016b80:	mov    r9,QWORD PTR [rcx]
   100016b83:	cmp    QWORD PTR [r9+0x10],0x4
   100016b88:	jb     0x100016bb7
   100016b8a:	mov    rax,QWORD PTR [r9+0x8]
   100016b8e:	mov    ecx,DWORD PTR [rax]
   100016b90:	mov    DWORD PTR [rdx],ecx
   100016b92:	movzx  eax,WORD PTR [r9+0x28]
   100016b97:	test   ax,ax
   100016b9a:	je     0x100016bac
   100016b9c:	sub    ax,0x4
   100016ba0:	mov    WORD PTR [r9+0x28],ax
   100016ba5:	sete   al
   100016ba8:	mov    BYTE PTR [r9+0x2a],al
   100016bac:	add    QWORD PTR [r9+0x8],0x4
   100016bb1:	add    QWORD PTR [r9+0x10],0xfffffffffffffffc
   100016bb6:	ret    
   100016bb7:	mov    rax,QWORD PTR [r9]
   100016bba:	mov    r8d,0x4
   100016bc0:	mov    rcx,r9
   100016bc3:	rex.W jmp QWORD PTR [rax+0x8]
   100016bc7:	nop
   100016bc8:	nop
   100016bc9:	nop
   100016bca:	nop
   100016bcb:	nop
   100016bcc:	nop
   100016bcd:	nop
   100016bce:	nop
   100016bcf:	nop
   100016bd0:	mov    r9,QWORD PTR [rcx]
   100016bd3:	cmp    QWORD PTR [r9+0x10],0x4
   100016bd8:	jb     0x100016c07
   100016bda:	mov    rax,QWORD PTR [r9+0x8]
   100016bde:	mov    ecx,DWORD PTR [rax]
   100016be0:	mov    DWORD PTR [rdx],ecx
   100016be2:	movzx  eax,WORD PTR [r9+0x28]
   100016be7:	test   ax,ax
   100016bea:	je     0x100016bfc
   100016bec:	sub    ax,0x4
   100016bf0:	mov    WORD PTR [r9+0x28],ax
   100016bf5:	sete   al
   100016bf8:	mov    BYTE PTR [r9+0x2a],al
   100016bfc:	add    QWORD PTR [r9+0x8],0x4
   100016c01:	add    QWORD PTR [r9+0x10],0xfffffffffffffffc
   100016c06:	ret    
   100016c07:	mov    rax,QWORD PTR [r9]
   100016c0a:	mov    r8d,0x4
   100016c10:	mov    rcx,r9
   100016c13:	rex.W jmp QWORD PTR [rax+0x8]
   100016c17:	nop
   100016c18:	nop
   100016c19:	nop
   100016c1a:	nop
   100016c1b:	nop
   100016c1c:	nop
   100016c1d:	nop
   100016c1e:	nop
   100016c1f:	nop
   100016c20:	mov    r9,QWORD PTR [rcx]
   100016c23:	cmp    QWORD PTR [r9+0x10],0x4
   100016c28:	jb     0x100016c57
   100016c2a:	mov    rax,QWORD PTR [r9+0x8]
   100016c2e:	mov    ecx,DWORD PTR [rax]
   100016c30:	mov    DWORD PTR [rdx],ecx
   100016c32:	movzx  eax,WORD PTR [r9+0x28]
   100016c37:	test   ax,ax
   100016c3a:	je     0x100016c4c
   100016c3c:	sub    ax,0x4
   100016c40:	mov    WORD PTR [r9+0x28],ax
   100016c45:	sete   al
   100016c48:	mov    BYTE PTR [r9+0x2a],al
   100016c4c:	add    QWORD PTR [r9+0x8],0x4
   100016c51:	add    QWORD PTR [r9+0x10],0xfffffffffffffffc
   100016c56:	ret    
   100016c57:	mov    rax,QWORD PTR [r9]
   100016c5a:	mov    r8d,0x4
   100016c60:	mov    rcx,r9
   100016c63:	rex.W jmp QWORD PTR [rax+0x8]
   100016c67:	nop
   100016c68:	nop
   100016c69:	nop
   100016c6a:	nop
   100016c6b:	nop
   100016c6c:	nop
   100016c6d:	nop
   100016c6e:	nop
   100016c6f:	nop
   100016c70:	mov    r9,QWORD PTR [rcx]
   100016c73:	cmp    QWORD PTR [r9+0x10],0x4
   100016c78:	jb     0x100016ca7
   100016c7a:	mov    rax,QWORD PTR [r9+0x8]
   100016c7e:	mov    ecx,DWORD PTR [rax]
   100016c80:	mov    DWORD PTR [rdx],ecx
   100016c82:	movzx  eax,WORD PTR [r9+0x28]
   100016c87:	test   ax,ax
   100016c8a:	je     0x100016c9c
   100016c8c:	sub    ax,0x4
   100016c90:	mov    WORD PTR [r9+0x28],ax
   100016c95:	sete   al
   100016c98:	mov    BYTE PTR [r9+0x2a],al
   100016c9c:	add    QWORD PTR [r9+0x8],0x4
   100016ca1:	add    QWORD PTR [r9+0x10],0xfffffffffffffffc
   100016ca6:	ret    
   100016ca7:	mov    rax,QWORD PTR [r9]
   100016caa:	mov    r8d,0x4
   100016cb0:	mov    rcx,r9
   100016cb3:	rex.W jmp QWORD PTR [rax+0x8]
   100016cb7:	nop
   100016cb8:	nop
   100016cb9:	nop
   100016cba:	nop
   100016cbb:	nop
   100016cbc:	nop
   100016cbd:	nop
   100016cbe:	nop
   100016cbf:	nop
   100016cc0:	jmp    0x100017ae0
   100016cc5:	nop
   100016cc6:	nop
   100016cc7:	nop
   100016cc8:	nop
   100016cc9:	nop
   100016cca:	nop
   100016ccb:	nop
   100016ccc:	nop
   100016ccd:	nop
   100016cce:	nop
   100016ccf:	nop
   100016cd0:	jmp    0x1000175a0
   100016cd5:	nop
   100016cd6:	nop
   100016cd7:	nop
   100016cd8:	nop
   100016cd9:	nop
   100016cda:	nop
   100016cdb:	nop
   100016cdc:	nop
   100016cdd:	nop
   100016cde:	nop
   100016cdf:	nop
   100016ce0:	jmp    0x1000171c0
   100016ce5:	nop
   100016ce6:	nop
   100016ce7:	nop
   100016ce8:	nop
   100016ce9:	nop
   100016cea:	nop
   100016ceb:	nop
   100016cec:	nop
   100016ced:	nop
   100016cee:	nop
   100016cef:	nop
   100016cf0:	jmp    0x100016df0
   100016cf5:	nop
   100016cf6:	nop
   100016cf7:	nop
   100016cf8:	nop
   100016cf9:	nop
   100016cfa:	nop
   100016cfb:	nop
   100016cfc:	nop
   100016cfd:	nop
   100016cfe:	nop
   100016cff:	nop
   100016d00:	sub    rsp,0x28
   100016d04:	cmp    QWORD PTR [rdx+0x20],0x4
   100016d09:	mov    r9,rdx
   100016d0c:	jb     0x100016d2b
   100016d0e:	mov    eax,DWORD PTR [rcx]
   100016d10:	mov    r8,QWORD PTR [rdx+0x18]
   100016d14:	mov    DWORD PTR [r8],eax
   100016d17:	add    QWORD PTR [rdx+0x18],0x4
   100016d1c:	add    QWORD PTR [rdx+0x20],0xfffffffffffffffc
   100016d21:	mov    eax,0x1
   100016d26:	add    rsp,0x28
   100016d2a:	ret    
   100016d2b:	mov    rax,QWORD PTR [rdx]
   100016d2e:	mov    rdx,rcx
   100016d31:	mov    r8d,0x4
   100016d37:	mov    rcx,r9
   100016d3a:	call   QWORD PTR [rax]
   100016d3c:	mov    eax,0x1
   100016d41:	add    rsp,0x28
   100016d45:	ret    
   100016d46:	nop
   100016d47:	nop
   100016d48:	nop
   100016d49:	nop
   100016d4a:	nop
   100016d4b:	nop
   100016d4c:	nop
   100016d4d:	nop
   100016d4e:	nop
   100016d4f:	nop
   100016d50:	sub    rsp,0x28
   100016d54:	cmp    QWORD PTR [rdx+0x20],0x4
   100016d59:	mov    r9,rdx
   100016d5c:	jb     0x100016d7b
   100016d5e:	mov    eax,DWORD PTR [rcx]
   100016d60:	mov    r8,QWORD PTR [rdx+0x18]
   100016d64:	mov    DWORD PTR [r8],eax
   100016d67:	add    QWORD PTR [rdx+0x18],0x4
   100016d6c:	add    QWORD PTR [rdx+0x20],0xfffffffffffffffc
   100016d71:	mov    eax,0x1
   100016d76:	add    rsp,0x28
   100016d7a:	ret    
   100016d7b:	mov    rax,QWORD PTR [rdx]
   100016d7e:	mov    rdx,rcx
   100016d81:	mov    r8d,0x4
   100016d87:	mov    rcx,r9
   100016d8a:	call   QWORD PTR [rax]
   100016d8c:	mov    eax,0x1
   100016d91:	add    rsp,0x28
   100016d95:	ret    
   100016d96:	nop
   100016d97:	nop
   100016d98:	nop
   100016d99:	nop
   100016d9a:	nop
   100016d9b:	nop
   100016d9c:	nop
   100016d9d:	nop
   100016d9e:	nop
   100016d9f:	nop
   100016da0:	sub    rsp,0x28
   100016da4:	cmp    QWORD PTR [rdx+0x20],0x4
   100016da9:	mov    r9,rdx
   100016dac:	jb     0x100016dcb
   100016dae:	mov    eax,DWORD PTR [rcx]
   100016db0:	mov    r8,QWORD PTR [rdx+0x18]
   100016db4:	mov    DWORD PTR [r8],eax
   100016db7:	add    QWORD PTR [rdx+0x18],0x4
   100016dbc:	add    QWORD PTR [rdx+0x20],0xfffffffffffffffc
   100016dc1:	mov    eax,0x1
   100016dc6:	add    rsp,0x28
   100016dca:	ret    
   100016dcb:	mov    rax,QWORD PTR [rdx]
   100016dce:	mov    rdx,rcx
   100016dd1:	mov    r8d,0x4
   100016dd7:	mov    rcx,r9
   100016dda:	call   QWORD PTR [rax]
   100016ddc:	mov    eax,0x1
   100016de1:	add    rsp,0x28
   100016de5:	ret    
   100016de6:	nop
   100016de7:	nop
   100016de8:	nop
   100016de9:	nop
   100016dea:	nop
   100016deb:	nop
   100016dec:	nop
   100016ded:	nop
   100016dee:	nop
   100016def:	nop
   100016df0:	mov    QWORD PTR [rsp+0x20],rbx
   100016df5:	push   rdi
   100016df6:	sub    rsp,0x30
   100016dfa:	mov    rbx,rcx
   100016dfd:	mov    rcx,QWORD PTR [rdx]
   100016e00:	mov    rdi,rdx
   100016e03:	cmp    QWORD PTR [rcx+0x10],0x1
   100016e08:	jb     0x100016e37
   100016e0a:	mov    rax,QWORD PTR [rcx+0x8]
   100016e0e:	movzx  r8d,BYTE PTR [rax]
   100016e12:	mov    BYTE PTR [rsp+0x40],r8b
   100016e17:	movzx  eax,WORD PTR [rcx+0x28]
   100016e1b:	test   ax,ax
   100016e1e:	je     0x100016e2d
   100016e20:	dec    ax
   100016e23:	mov    WORD PTR [rcx+0x28],ax
   100016e27:	sete   al
   100016e2a:	mov    BYTE PTR [rcx+0x2a],al
   100016e2d:	inc    QWORD PTR [rcx+0x8]
   100016e31:	dec    QWORD PTR [rcx+0x10]
   100016e35:	jmp    0x100016e48
   100016e37:	mov    rax,QWORD PTR [rcx]
   100016e3a:	lea    rdx,[rsp+0x40]
   100016e3f:	mov    r8d,0x1
   100016e45:	call   QWORD PTR [rax+0x8]
   100016e48:	and    BYTE PTR [rbx],0xfd
   100016e4b:	movzx  eax,BYTE PTR [rsp+0x40]
   100016e50:	and    al,0x1
   100016e52:	add    al,al
   100016e54:	or     BYTE PTR [rbx],al
   100016e56:	mov    r9,QWORD PTR [rdi]
   100016e59:	cmp    QWORD PTR [r9+0x10],0x1
   100016e5e:	jb     0x100016e8e
   100016e60:	mov    rax,QWORD PTR [r9+0x8]
   100016e64:	movzx  ecx,BYTE PTR [rax]
   100016e67:	mov    BYTE PTR [rsp+0x40],cl
   100016e6b:	movzx  eax,WORD PTR [r9+0x28]
   100016e70:	test   ax,ax
   100016e73:	je     0x100016e84
   100016e75:	dec    ax
   100016e78:	mov    WORD PTR [r9+0x28],ax
   100016e7d:	sete   al
   100016e80:	mov    BYTE PTR [r9+0x2a],al
   100016e84:	inc    QWORD PTR [r9+0x8]
   100016e88:	dec    QWORD PTR [r9+0x10]
   100016e8c:	jmp    0x100016ea2
   100016e8e:	mov    rax,QWORD PTR [r9]
   100016e91:	lea    rdx,[rsp+0x40]
   100016e96:	mov    r8d,0x1
   100016e9c:	mov    rcx,r9
   100016e9f:	call   QWORD PTR [rax+0x8]
   100016ea2:	and    BYTE PTR [rbx],0xfb
   100016ea5:	movzx  eax,BYTE PTR [rsp+0x40]
   100016eaa:	and    al,0x1
   100016eac:	shl    al,0x2
   100016eaf:	or     BYTE PTR [rbx],al
   100016eb1:	mov    r9,QWORD PTR [rdi]
   100016eb4:	cmp    QWORD PTR [r9+0x10],0x1
   100016eb9:	jb     0x100016ee9
   100016ebb:	mov    rax,QWORD PTR [r9+0x8]
   100016ebf:	movzx  ecx,BYTE PTR [rax]
   100016ec2:	mov    BYTE PTR [rsp+0x40],cl
   100016ec6:	movzx  eax,WORD PTR [r9+0x28]
   100016ecb:	test   ax,ax
   100016ece:	je     0x100016edf
   100016ed0:	dec    ax
   100016ed3:	mov    WORD PTR [r9+0x28],ax
   100016ed8:	sete   al
   100016edb:	mov    BYTE PTR [r9+0x2a],al
   100016edf:	inc    QWORD PTR [r9+0x8]
   100016ee3:	dec    QWORD PTR [r9+0x10]
   100016ee7:	jmp    0x100016efd
   100016ee9:	mov    rax,QWORD PTR [r9]
   100016eec:	lea    rdx,[rsp+0x40]
   100016ef1:	mov    r8d,0x1
   100016ef7:	mov    rcx,r9
   100016efa:	call   QWORD PTR [rax+0x8]
   100016efd:	and    BYTE PTR [rbx],0xf7
   100016f00:	movzx  eax,BYTE PTR [rsp+0x40]
   100016f05:	lea    rdx,[rbx+0x10]
   100016f09:	and    al,0x1
   100016f0b:	shl    al,0x3
   100016f0e:	or     BYTE PTR [rbx],al
   100016f10:	mov    r9,QWORD PTR [rdi]
   100016f13:	cmp    QWORD PTR [r9+0x10],0x2
   100016f18:	jb     0x100016f4a
   100016f1a:	mov    rax,QWORD PTR [r9+0x8]
   100016f1e:	movzx  ecx,WORD PTR [rax]
   100016f21:	mov    WORD PTR [rdx],cx
   100016f24:	movzx  eax,WORD PTR [r9+0x28]
   100016f29:	test   ax,ax
   100016f2c:	je     0x100016f3e
   100016f2e:	sub    ax,0x2
   100016f32:	mov    WORD PTR [r9+0x28],ax
   100016f37:	sete   al
   100016f3a:	mov    BYTE PTR [r9+0x2a],al
   100016f3e:	add    QWORD PTR [r9+0x8],0x2
   100016f43:	add    QWORD PTR [r9+0x10],0xfffffffffffffffe
   100016f48:	jmp    0x100016f59
   100016f4a:	mov    rax,QWORD PTR [r9]
   100016f4d:	mov    r8d,0x2
   100016f53:	mov    rcx,r9
   100016f56:	call   QWORD PTR [rax+0x8]
   100016f59:	mov    rcx,QWORD PTR [rdi]
   100016f5c:	lea    rdx,[rbx+0x14]
   100016f60:	mov    r8d,0xc
   100016f66:	mov    rax,QWORD PTR [rcx]
   100016f69:	call   QWORD PTR [rax+0x8]
   100016f6c:	mov    r11,rax
   100016f6f:	movabs rax,0xaaaaaaaaaaaaaaab
   100016f79:	mul    r11
   100016f7c:	shr    rdx,0x3
   100016f80:	cmp    rdx,0x1
   100016f84:	je     0x100016faa
   100016f86:	xor    r9d,r9d
   100016f89:	mov    QWORD PTR [rsp+0x28],rdx
   100016f8e:	mov    ecx,0x155
   100016f93:	lea    edx,[r9+0x3]
   100016f97:	lea    r8d,[r9+0x10]
   100016f9b:	mov    QWORD PTR [rsp+0x20],0x1
   100016fa4:	call   QWORD PTR [rip+0xfffffffffffeab9e]        # 0x100001b48
   100016faa:	mov    r9,QWORD PTR [rdi]
   100016fad:	lea    rdx,[rbx+0x20]
   100016fb1:	cmp    QWORD PTR [r9+0x10],0x8
   100016fb6:	jb     0x100016fe8
   100016fb8:	mov    rax,QWORD PTR [r9+0x8]
   100016fbc:	mov    rcx,QWORD PTR [rax]
   100016fbf:	mov    QWORD PTR [rdx],rcx
   100016fc2:	movzx  eax,WORD PTR [r9+0x28]
   100016fc7:	test   ax,ax
   100016fca:	je     0x100016fdc
   100016fcc:	sub    ax,0x8
   100016fd0:	mov    WORD PTR [r9+0x28],ax
   100016fd5:	sete   al
   100016fd8:	mov    BYTE PTR [r9+0x2a],al
   100016fdc:	add    QWORD PTR [r9+0x8],0x8
   100016fe1:	add    QWORD PTR [r9+0x10],0xfffffffffffffff8
   100016fe6:	jmp    0x100016ff7
   100016fe8:	mov    rax,QWORD PTR [r9]
   100016feb:	mov    r8d,0x8
   100016ff1:	mov    rcx,r9
   100016ff4:	call   QWORD PTR [rax+0x8]
   100016ff7:	mov    r9,QWORD PTR [rdi]
   100016ffa:	lea    rdx,[rbx+0x28]
   100016ffe:	cmp    QWORD PTR [r9+0x10],0x4
   100017003:	jb     0x100017033
   100017005:	mov    rax,QWORD PTR [r9+0x8]
   100017009:	mov    ecx,DWORD PTR [rax]
   10001700b:	mov    DWORD PTR [rdx],ecx
   10001700d:	movzx  eax,WORD PTR [r9+0x28]
   100017012:	test   ax,ax
   100017015:	je     0x100017027
   100017017:	sub    ax,0x4
   10001701b:	mov    WORD PTR [r9+0x28],ax
   100017020:	sete   al
   100017023:	mov    BYTE PTR [r9+0x2a],al
   100017027:	add    QWORD PTR [r9+0x8],0x4
   10001702c:	add    QWORD PTR [r9+0x10],0xfffffffffffffffc
   100017031:	jmp    0x100017042
   100017033:	mov    rax,QWORD PTR [r9]
   100017036:	mov    r8d,0x4
   10001703c:	mov    rcx,r9
   10001703f:	call   QWORD PTR [rax+0x8]
   100017042:	mov    r9,QWORD PTR [rdi]
   100017045:	lea    rdx,[rbx+0x2c]
   100017049:	cmp    QWORD PTR [r9+0x10],0x4
   10001704e:	jb     0x10001707e
   100017050:	mov    rax,QWORD PTR [r9+0x8]
   100017054:	mov    ecx,DWORD PTR [rax]
   100017056:	mov    DWORD PTR [rdx],ecx
   100017058:	movzx  eax,WORD PTR [r9+0x28]
   10001705d:	test   ax,ax
   100017060:	je     0x100017072
   100017062:	sub    ax,0x4
   100017066:	mov    WORD PTR [r9+0x28],ax
   10001706b:	sete   al
   10001706e:	mov    BYTE PTR [r9+0x2a],al
   100017072:	add    QWORD PTR [r9+0x8],0x4
   100017077:	add    QWORD PTR [r9+0x10],0xfffffffffffffffc
   10001707c:	jmp    0x10001708d
   10001707e:	mov    rax,QWORD PTR [r9]
   100017081:	mov    r8d,0x4
   100017087:	mov    rcx,r9
   10001708a:	call   QWORD PTR [rax+0x8]
   10001708d:	lea    rdx,[rbx+0x30]
   100017091:	mov    rcx,rdi
   100017094:	call   0x100016ae0
   100017099:	lea    rdx,[rbx+0x34]
   10001709d:	mov    rcx,rdi
   1000170a0:	call   0x1000180b0
   1000170a5:	lea    rdx,[rbx+0x38]
   1000170a9:	mov    rcx,rdi
   1000170ac:	call   0x1000180b0
   1000170b1:	lea    rdx,[rbx+0x3c]
   1000170b5:	mov    rcx,rdi
   1000170b8:	call   0x1000180b0
   1000170bd:	lea    rdx,[rbx+0x40]
   1000170c1:	mov    rcx,rdi
   1000170c4:	call   0x100016b30
   1000170c9:	lea    rdx,[rbx+0x44]
   1000170cd:	mov    rcx,rdi
   1000170d0:	call   0x100016b80
   1000170d5:	lea    rdx,[rbx+0x48]
   1000170d9:	mov    rcx,rdi
   1000170dc:	call   0x100016bd0
   1000170e1:	lea    rdx,[rbx+0x4c]
   1000170e5:	mov    rcx,rdi
   1000170e8:	call   0x100016c20
   1000170ed:	lea    rdx,[rbx+0x50]
   1000170f1:	mov    rcx,rdi
   1000170f4:	call   0x100016c70
   1000170f9:	mov    r11,QWORD PTR [rdi]
   1000170fc:	cmp    QWORD PTR [r11+0x10],0x4
   100017101:	jb     0x100017133
   100017103:	mov    rax,QWORD PTR [r11+0x8]
   100017107:	mov    ecx,DWORD PTR [rax]
   100017109:	mov    DWORD PTR [rsp+0x48],ecx
   10001710d:	movzx  eax,WORD PTR [r11+0x28]
   100017112:	test   ax,ax
   100017115:	je     0x100017127
   100017117:	sub    ax,0x4
   10001711b:	mov    WORD PTR [r11+0x28],ax
   100017120:	sete   al
   100017123:	mov    BYTE PTR [r11+0x2a],al
   100017127:	add    QWORD PTR [r11+0x8],0x4
   10001712c:	add    QWORD PTR [r11+0x10],0xfffffffffffffffc
   100017131:	jmp    0x100017147
   100017133:	mov    rax,QWORD PTR [r11]
   100017136:	lea    rdx,[rsp+0x48]
   10001713b:	mov    r8d,0x4
   100017141:	mov    rcx,r11
   100017144:	call   QWORD PTR [rax+0x8]
   100017147:	mov    r9,QWORD PTR [rdi]
   10001714a:	cmp    QWORD PTR [r9+0x10],0x4
   10001714f:	jb     0x100017181
   100017151:	mov    rax,QWORD PTR [r9+0x8]
   100017155:	mov    ecx,DWORD PTR [rax]
   100017157:	mov    DWORD PTR [rsp+0x50],ecx
   10001715b:	movzx  eax,WORD PTR [r9+0x28]
   100017160:	test   ax,ax
   100017163:	je     0x100017175
   100017165:	sub    ax,0x4
   100017169:	mov    WORD PTR [r9+0x28],ax
   10001716e:	sete   al
   100017171:	mov    BYTE PTR [r9+0x2a],al
   100017175:	add    QWORD PTR [r9+0x8],0x4
   10001717a:	add    QWORD PTR [r9+0x10],0xfffffffffffffffc
   10001717f:	jmp    0x100017195
   100017181:	mov    rax,QWORD PTR [r9]
   100017184:	lea    rdx,[rsp+0x50]
   100017189:	mov    r8d,0x4
   10001718f:	mov    rcx,r9
   100017192:	call   QWORD PTR [rax+0x8]
   100017195:	mov    eax,DWORD PTR [rsp+0x48]
   100017199:	mov    DWORD PTR [rbx+0xc],0xffffffff
   1000171a0:	mov    DWORD PTR [rbx+0x4],eax
   1000171a3:	mov    eax,DWORD PTR [rsp+0x50]
   1000171a7:	mov    DWORD PTR [rbx+0x8],eax
   1000171aa:	mov    rbx,QWORD PTR [rsp+0x58]
   1000171af:	add    rsp,0x30
   1000171b3:	pop    rdi
   1000171b4:	ret    
   1000171b5:	nop
   1000171b6:	nop
   1000171b7:	nop
   1000171b8:	nop
   1000171b9:	nop
   1000171ba:	nop
   1000171bb:	nop
   1000171bc:	nop
   1000171bd:	nop
   1000171be:	nop
   1000171bf:	nop
   1000171c0:	mov    QWORD PTR [rsp+0x20],rbx
   1000171c5:	push   rdi
   1000171c6:	sub    rsp,0x30
   1000171ca:	mov    rbx,rdx
   1000171cd:	movzx  edx,BYTE PTR [rcx]
   1000171d0:	mov    rdi,rcx
   1000171d3:	mov    rcx,QWORD PTR [rbx]
   1000171d6:	shr    dl,1
   1000171d8:	and    dl,0x1
   1000171db:	mov    BYTE PTR [rsp+0x40],dl
   1000171df:	cmp    QWORD PTR [rcx+0x20],0x1
   1000171e4:	jb     0x1000171f6
   1000171e6:	mov    rax,QWORD PTR [rcx+0x18]
   1000171ea:	mov    BYTE PTR [rax],dl
   1000171ec:	inc    QWORD PTR [rcx+0x18]
   1000171f0:	dec    QWORD PTR [rcx+0x20]
   1000171f4:	jmp    0x100017206
   1000171f6:	mov    rax,QWORD PTR [rcx]
   1000171f9:	lea    rdx,[rsp+0x40]
   1000171fe:	mov    r8d,0x1
   100017204:	call   QWORD PTR [rax]
   100017206:	movzx  edx,BYTE PTR [rdi]
   100017209:	mov    rcx,QWORD PTR [rbx]
   10001720c:	shr    dl,0x2
   10001720f:	and    dl,0x1
   100017212:	mov    BYTE PTR [rsp+0x40],dl
   100017216:	cmp    QWORD PTR [rcx+0x20],0x1
   10001721b:	jb     0x10001722d
   10001721d:	mov    rax,QWORD PTR [rcx+0x18]
   100017221:	mov    BYTE PTR [rax],dl
   100017223:	inc    QWORD PTR [rcx+0x18]
   100017227:	dec    QWORD PTR [rcx+0x20]
   10001722b:	jmp    0x10001723d
   10001722d:	mov    rax,QWORD PTR [rcx]
   100017230:	lea    rdx,[rsp+0x40]
   100017235:	mov    r8d,0x1
   10001723b:	call   QWORD PTR [rax]
   10001723d:	movzx  edx,BYTE PTR [rdi]
   100017240:	mov    rcx,QWORD PTR [rbx]
   100017243:	shr    dl,0x3
   100017246:	and    dl,0x1
   100017249:	mov    BYTE PTR [rsp+0x40],dl
   10001724d:	cmp    QWORD PTR [rcx+0x20],0x1
   100017252:	jb     0x100017264
   100017254:	mov    rax,QWORD PTR [rcx+0x18]
   100017258:	mov    BYTE PTR [rax],dl
   10001725a:	inc    QWORD PTR [rcx+0x18]
   10001725e:	dec    QWORD PTR [rcx+0x20]
   100017262:	jmp    0x100017274
   100017264:	mov    rax,QWORD PTR [rcx]
   100017267:	lea    rdx,[rsp+0x40]
   10001726c:	mov    r8d,0x1
   100017272:	call   QWORD PTR [rax]
   100017274:	mov    r9,QWORD PTR [rbx]
   100017277:	lea    rdx,[rdi+0x10]
   10001727b:	cmp    QWORD PTR [r9+0x20],0x2
   100017280:	jb     0x100017298
   100017282:	movzx  eax,WORD PTR [rdx]
   100017285:	mov    rcx,QWORD PTR [r9+0x18]
   100017289:	mov    WORD PTR [rcx],ax
   10001728c:	add    QWORD PTR [r9+0x18],0x2
   100017291:	add    QWORD PTR [r9+0x20],0xfffffffffffffffe
   100017296:	jmp    0x1000172a6
   100017298:	mov    rax,QWORD PTR [r9]
   10001729b:	mov    r8d,0x2
   1000172a1:	mov    rcx,r9
   1000172a4:	call   QWORD PTR [rax]
   1000172a6:	mov    rcx,QWORD PTR [rbx]
   1000172a9:	lea    rdx,[rdi+0x14]
   1000172ad:	mov    r8d,0xc
   1000172b3:	mov    rax,QWORD PTR [rcx]
   1000172b6:	call   QWORD PTR [rax]
   1000172b8:	mov    r9,QWORD PTR [rbx]
   1000172bb:	lea    rdx,[rdi+0x20]
   1000172bf:	cmp    QWORD PTR [r9+0x20],0x8
   1000172c4:	jb     0x1000172dc
   1000172c6:	mov    rax,QWORD PTR [rdx]
   1000172c9:	mov    rcx,QWORD PTR [r9+0x18]
   1000172cd:	mov    QWORD PTR [rcx],rax
   1000172d0:	add    QWORD PTR [r9+0x18],0x8
   1000172d5:	add    QWORD PTR [r9+0x20],0xfffffffffffffff8
   1000172da:	jmp    0x1000172ea
   1000172dc:	mov    rax,QWORD PTR [r9]
   1000172df:	mov    r8d,0x8
   1000172e5:	mov    rcx,r9
   1000172e8:	call   QWORD PTR [rax]
   1000172ea:	mov    r9,QWORD PTR [rbx]
   1000172ed:	lea    rdx,[rdi+0x28]
   1000172f1:	cmp    QWORD PTR [r9+0x20],0x4
   1000172f6:	jb     0x10001730c
   1000172f8:	mov    eax,DWORD PTR [rdx]
   1000172fa:	mov    rcx,QWORD PTR [r9+0x18]
   1000172fe:	mov    DWORD PTR [rcx],eax
   100017300:	add    QWORD PTR [r9+0x18],0x4
   100017305:	add    QWORD PTR [r9+0x20],0xfffffffffffffffc
   10001730a:	jmp    0x10001731a
   10001730c:	mov    rax,QWORD PTR [r9]
   10001730f:	mov    r8d,0x4
   100017315:	mov    rcx,r9
   100017318:	call   QWORD PTR [rax]
   10001731a:	mov    r9,QWORD PTR [rbx]
   10001731d:	lea    rdx,[rdi+0x2c]
   100017321:	cmp    QWORD PTR [r9+0x20],0x4
   100017326:	jb     0x10001733c
   100017328:	mov    eax,DWORD PTR [rdx]
   10001732a:	mov    rcx,QWORD PTR [r9+0x18]
   10001732e:	mov    DWORD PTR [rcx],eax
   100017330:	add    QWORD PTR [r9+0x18],0x4
   100017335:	add    QWORD PTR [r9+0x20],0xfffffffffffffffc
   10001733a:	jmp    0x10001734a
   10001733c:	mov    rax,QWORD PTR [r9]
   10001733f:	mov    r8d,0x4
   100017345:	mov    rcx,r9
   100017348:	call   QWORD PTR [rax]
   10001734a:	mov    r9,QWORD PTR [rbx]
   10001734d:	lea    rdx,[rdi+0x30]
   100017351:	cmp    QWORD PTR [r9+0x20],0x4
   100017356:	jb     0x10001736c
   100017358:	mov    eax,DWORD PTR [rdx]
   10001735a:	mov    rcx,QWORD PTR [r9+0x18]
   10001735e:	mov    DWORD PTR [rcx],eax
   100017360:	add    QWORD PTR [r9+0x18],0x4
   100017365:	add    QWORD PTR [r9+0x20],0xfffffffffffffffc
   10001736a:	jmp    0x10001737a
   10001736c:	mov    rax,QWORD PTR [r9]
   10001736f:	mov    r8d,0x4
   100017375:	mov    rcx,r9
   100017378:	call   QWORD PTR [rax]
   10001737a:	mov    r9,QWORD PTR [rbx]
   10001737d:	lea    rdx,[rdi+0x34]
   100017381:	cmp    QWORD PTR [r9+0x20],0x4
   100017386:	jb     0x10001739c
   100017388:	mov    eax,DWORD PTR [rdx]
   10001738a:	mov    rcx,QWORD PTR [r9+0x18]
   10001738e:	mov    DWORD PTR [rcx],eax
   100017390:	add    QWORD PTR [r9+0x18],0x4
   100017395:	add    QWORD PTR [r9+0x20],0xfffffffffffffffc
   10001739a:	jmp    0x1000173aa
   10001739c:	mov    rax,QWORD PTR [r9]
   10001739f:	mov    r8d,0x4
   1000173a5:	mov    rcx,r9
   1000173a8:	call   QWORD PTR [rax]
   1000173aa:	mov    r9,QWORD PTR [rbx]
   1000173ad:	lea    rdx,[rdi+0x38]
   1000173b1:	cmp    QWORD PTR [r9+0x20],0x4
   1000173b6:	jb     0x1000173cc
   1000173b8:	mov    eax,DWORD PTR [rdx]
   1000173ba:	mov    rcx,QWORD PTR [r9+0x18]
   1000173be:	mov    DWORD PTR [rcx],eax
   1000173c0:	add    QWORD PTR [r9+0x18],0x4
   1000173c5:	add    QWORD PTR [r9+0x20],0xfffffffffffffffc
   1000173ca:	jmp    0x1000173da
   1000173cc:	mov    rax,QWORD PTR [r9]
   1000173cf:	mov    r8d,0x4
   1000173d5:	mov    rcx,r9
   1000173d8:	call   QWORD PTR [rax]
   1000173da:	mov    r9,QWORD PTR [rbx]
   1000173dd:	lea    rdx,[rdi+0x3c]
   1000173e1:	cmp    QWORD PTR [r9+0x20],0x4
   1000173e6:	jb     0x1000173fc
   1000173e8:	mov    eax,DWORD PTR [rdx]
   1000173ea:	mov    rcx,QWORD PTR [r9+0x18]
   1000173ee:	mov    DWORD PTR [rcx],eax
   1000173f0:	add    QWORD PTR [r9+0x18],0x4
   1000173f5:	add    QWORD PTR [r9+0x20],0xfffffffffffffffc
   1000173fa:	jmp    0x10001740a
   1000173fc:	mov    rax,QWORD PTR [r9]
   1000173ff:	mov    r8d,0x4
   100017405:	mov    rcx,r9
   100017408:	call   QWORD PTR [rax]
   10001740a:	mov    r9,QWORD PTR [rbx]
   10001740d:	lea    rdx,[rdi+0x40]
   100017411:	cmp    QWORD PTR [r9+0x20],0x4
   100017416:	jb     0x10001742c
   100017418:	mov    eax,DWORD PTR [rdx]
   10001741a:	mov    rcx,QWORD PTR [r9+0x18]
   10001741e:	mov    DWORD PTR [rcx],eax
   100017420:	add    QWORD PTR [r9+0x18],0x4
   100017425:	add    QWORD PTR [r9+0x20],0xfffffffffffffffc
   10001742a:	jmp    0x10001743a
   10001742c:	mov    rax,QWORD PTR [r9]
   10001742f:	mov    r8d,0x4
   100017435:	mov    rcx,r9
   100017438:	call   QWORD PTR [rax]
   10001743a:	mov    r9,QWORD PTR [rbx]
   10001743d:	lea    rdx,[rdi+0x44]
   100017441:	cmp    QWORD PTR [r9+0x20],0x4
   100017446:	jb     0x10001745c
   100017448:	mov    eax,DWORD PTR [rdx]
   10001744a:	mov    rcx,QWORD PTR [r9+0x18]
   10001744e:	mov    DWORD PTR [rcx],eax
   100017450:	add    QWORD PTR [r9+0x18],0x4
   100017455:	add    QWORD PTR [r9+0x20],0xfffffffffffffffc
   10001745a:	jmp    0x10001746a
   10001745c:	mov    rax,QWORD PTR [r9]
   10001745f:	mov    r8d,0x4
   100017465:	mov    rcx,r9
   100017468:	call   QWORD PTR [rax]
   10001746a:	mov    rdx,QWORD PTR [rbx]
   10001746d:	lea    rcx,[rdi+0x48]
   100017471:	call   0x100016d00
   100017476:	cmp    rax,0x1
   10001747a:	je     0x1000174a0
   10001747c:	xor    r9d,r9d
   10001747f:	mov    QWORD PTR [rsp+0x28],rax
   100017484:	mov    ecx,0x155
   100017489:	lea    edx,[r9+0x3]
   10001748d:	lea    r8d,[r9+0x10]
   100017491:	mov    QWORD PTR [rsp+0x20],0x1
   10001749a:	call   QWORD PTR [rip+0xfffffffffffea6a8]        # 0x100001b48
   1000174a0:	mov    rdx,QWORD PTR [rbx]
   1000174a3:	lea    rcx,[rdi+0x4c]
   1000174a7:	call   0x100016d50
   1000174ac:	cmp    rax,0x1
   1000174b0:	je     0x1000174d6
   1000174b2:	xor    r9d,r9d
   1000174b5:	mov    QWORD PTR [rsp+0x28],rax
   1000174ba:	mov    ecx,0x155
   1000174bf:	lea    edx,[r9+0x3]
   1000174c3:	lea    r8d,[r9+0x10]
   1000174c7:	mov    QWORD PTR [rsp+0x20],0x1
   1000174d0:	call   QWORD PTR [rip+0xfffffffffffea672]        # 0x100001b48
   1000174d6:	mov    rdx,QWORD PTR [rbx]
   1000174d9:	lea    rcx,[rdi+0x50]
   1000174dd:	call   0x100016da0
   1000174e2:	cmp    rax,0x1
   1000174e6:	je     0x10001750c
   1000174e8:	xor    r9d,r9d
   1000174eb:	mov    QWORD PTR [rsp+0x28],rax
   1000174f0:	mov    ecx,0x155
   1000174f5:	lea    edx,[r9+0x3]
   1000174f9:	lea    r8d,[r9+0x10]
   1000174fd:	mov    QWORD PTR [rsp+0x20],0x1
   100017506:	call   QWORD PTR [rip+0xfffffffffffea63c]        # 0x100001b48
   10001750c:	mov    rcx,rdi
   10001750f:	call   0x1000167d0
   100017514:	mov    ecx,DWORD PTR [rdi+0x8]
   100017517:	mov    r9,QWORD PTR [rbx]
   10001751a:	mov    DWORD PTR [rsp+0x48],ecx
   10001751e:	mov    DWORD PTR [rsp+0x50],eax
   100017522:	cmp    QWORD PTR [r9+0x20],0x4
   100017527:	jb     0x10001753b
   100017529:	mov    rcx,QWORD PTR [r9+0x18]
   10001752d:	mov    DWORD PTR [rcx],eax
   10001752f:	add    QWORD PTR [r9+0x18],0x4
   100017534:	add    QWORD PTR [r9+0x20],0xfffffffffffffffc
   100017539:	jmp    0x10001754e
   10001753b:	mov    rax,QWORD PTR [r9]
   10001753e:	lea    rdx,[rsp+0x50]
   100017543:	mov    r8d,0x4
   100017549:	mov    rcx,r9
   10001754c:	call   QWORD PTR [rax]
   10001754e:	mov    r9,QWORD PTR [rbx]
   100017551:	cmp    QWORD PTR [r9+0x20],0x4
   100017556:	jb     0x100017577
   100017558:	mov    eax,DWORD PTR [rsp+0x48]
   10001755c:	mov    rcx,QWORD PTR [r9+0x18]
   100017560:	mov    DWORD PTR [rcx],eax
   100017562:	add    QWORD PTR [r9+0x18],0x4
   100017567:	add    QWORD PTR [r9+0x20],0xfffffffffffffffc
   10001756c:	mov    rbx,QWORD PTR [rsp+0x58]
   100017571:	add    rsp,0x30
   100017575:	pop    rdi
   100017576:	ret    
   100017577:	mov    rax,QWORD PTR [r9]
   10001757a:	lea    rdx,[rsp+0x48]
   10001757f:	mov    r8d,0x4
   100017585:	mov    rcx,r9
   100017588:	call   QWORD PTR [rax]
   10001758a:	mov    rbx,QWORD PTR [rsp+0x58]
   10001758f:	add    rsp,0x30
   100017593:	pop    rdi
   100017594:	ret    
   100017595:	nop
   100017596:	nop
   100017597:	nop
   100017598:	nop
   100017599:	nop
   10001759a:	nop
   10001759b:	nop
   10001759c:	nop
   10001759d:	nop
   10001759e:	nop
   10001759f:	nop
   1000175a0:	mov    QWORD PTR [rsp+0x20],rbx
   1000175a5:	push   rdi
   1000175a6:	sub    rsp,0x30
   1000175aa:	mov    rdi,rdx
   1000175ad:	mov    rbx,rcx
   1000175b0:	lea    rdx,[rsp+0x40]
   1000175b5:	mov    rcx,QWORD PTR [rdi]
   1000175b8:	mov    r8d,0x1
   1000175be:	call   QWORD PTR [rip+0xfffffffffffea90c]        # 0x100001ed0
   1000175c4:	cmp    rax,0x1
   1000175c8:	je     0x1000175ee
   1000175ca:	xor    r9d,r9d
   1000175cd:	mov    QWORD PTR [rsp+0x28],rax
   1000175d2:	mov    ecx,0x155
   1000175d7:	lea    edx,[r9+0x3]
   1000175db:	lea    r8d,[r9+0x10]
   1000175df:	mov    QWORD PTR [rsp+0x20],0x1
   1000175e8:	call   QWORD PTR [rip+0xfffffffffffea55a]        # 0x100001b48
   1000175ee:	and    BYTE PTR [rbx],0xfd
   1000175f1:	movzx  eax,BYTE PTR [rsp+0x40]
   1000175f6:	lea    rdx,[rsp+0x40]
   1000175fb:	and    al,0x1
   1000175fd:	mov    r8d,0x1
   100017603:	add    al,al
   100017605:	or     BYTE PTR [rbx],al
   100017607:	mov    rcx,QWORD PTR [rdi]
   10001760a:	call   QWORD PTR [rip+0xfffffffffffea8c0]        # 0x100001ed0
   100017610:	cmp    rax,0x1
   100017614:	je     0x10001763a
   100017616:	xor    r9d,r9d
   100017619:	mov    QWORD PTR [rsp+0x28],rax
   10001761e:	mov    ecx,0x155
   100017623:	lea    edx,[r9+0x3]
   100017627:	lea    r8d,[r9+0x10]
   10001762b:	mov    QWORD PTR [rsp+0x20],0x1
   100017634:	call   QWORD PTR [rip+0xfffffffffffea50e]        # 0x100001b48
   10001763a:	and    BYTE PTR [rbx],0xfb
   10001763d:	movzx  eax,BYTE PTR [rsp+0x40]
   100017642:	lea    rdx,[rsp+0x40]
   100017647:	and    al,0x1
   100017649:	mov    r8d,0x1
   10001764f:	shl    al,0x2
   100017652:	or     BYTE PTR [rbx],al
   100017654:	mov    rcx,QWORD PTR [rdi]
   100017657:	call   QWORD PTR [rip+0xfffffffffffea873]        # 0x100001ed0
   10001765d:	cmp    rax,0x1
   100017661:	je     0x100017687
   100017663:	xor    r9d,r9d
   100017666:	mov    QWORD PTR [rsp+0x28],rax
   10001766b:	mov    ecx,0x155
   100017670:	lea    edx,[r9+0x3]
   100017674:	lea    r8d,[r9+0x10]
   100017678:	mov    QWORD PTR [rsp+0x20],0x1
   100017681:	call   QWORD PTR [rip+0xfffffffffffea4c1]        # 0x100001b48
   100017687:	and    BYTE PTR [rbx],0xf7
   10001768a:	movzx  eax,BYTE PTR [rsp+0x40]
   10001768f:	lea    rdx,[rbx+0x10]
   100017693:	and    al,0x1
   100017695:	mov    r8d,0x2
   10001769b:	shl    al,0x3
   10001769e:	or     BYTE PTR [rbx],al
   1000176a0:	mov    rcx,QWORD PTR [rdi]
   1000176a3:	call   QWORD PTR [rip+0xfffffffffffea827]        # 0x100001ed0
   1000176a9:	shr    rax,1
   1000176ac:	cmp    rax,0x1
   1000176b0:	je     0x1000176d6
   1000176b2:	xor    r9d,r9d
   1000176b5:	mov    QWORD PTR [rsp+0x28],rax
   1000176ba:	mov    ecx,0x155
   1000176bf:	lea    edx,[r9+0x3]
   1000176c3:	lea    r8d,[r9+0x10]
   1000176c7:	mov    QWORD PTR [rsp+0x20],0x1
   1000176d0:	call   QWORD PTR [rip+0xfffffffffffea472]        # 0x100001b48
   1000176d6:	mov    rcx,QWORD PTR [rdi]
   1000176d9:	lea    rdx,[rbx+0x14]
   1000176dd:	mov    r8d,0xc
   1000176e3:	call   QWORD PTR [rip+0xfffffffffffea7e7]        # 0x100001ed0
   1000176e9:	mov    r11,rax
   1000176ec:	movabs rax,0xaaaaaaaaaaaaaaab
   1000176f6:	mul    r11
   1000176f9:	shr    rdx,0x3
   1000176fd:	cmp    rdx,0x1
   100017701:	je     0x100017727
   100017703:	xor    r9d,r9d
   100017706:	mov    QWORD PTR [rsp+0x28],rdx
   10001770b:	mov    ecx,0x155
   100017710:	lea    edx,[r9+0x3]
   100017714:	lea    r8d,[r9+0x10]
   100017718:	mov    QWORD PTR [rsp+0x20],0x1
   100017721:	call   QWORD PTR [rip+0xfffffffffffea421]        # 0x100001b48
   100017727:	mov    rcx,QWORD PTR [rdi]
   10001772a:	lea    rdx,[rbx+0x20]
   10001772e:	mov    r8d,0x8
   100017734:	call   QWORD PTR [rip+0xfffffffffffea796]        # 0x100001ed0
   10001773a:	shr    rax,0x3
   10001773e:	cmp    rax,0x1
   100017742:	je     0x100017768
   100017744:	xor    r9d,r9d
   100017747:	mov    QWORD PTR [rsp+0x28],rax
   10001774c:	mov    ecx,0x155
   100017751:	lea    edx,[r9+0x3]
   100017755:	lea    r8d,[r9+0x10]
   100017759:	mov    QWORD PTR [rsp+0x20],0x1
   100017762:	call   QWORD PTR [rip+0xfffffffffffea3e0]        # 0x100001b48
   100017768:	mov    rcx,QWORD PTR [rdi]
   10001776b:	lea    rdx,[rbx+0x28]
   10001776f:	mov    r8d,0x4
   100017775:	call   QWORD PTR [rip+0xfffffffffffea755]        # 0x100001ed0
   10001777b:	shr    rax,0x2
   10001777f:	cmp    rax,0x1
   100017783:	je     0x1000177a9
   100017785:	xor    r9d,r9d
   100017788:	mov    QWORD PTR [rsp+0x28],rax
   10001778d:	mov    ecx,0x155
   100017792:	lea    edx,[r9+0x3]
   100017796:	lea    r8d,[r9+0x10]
   10001779a:	mov    QWORD PTR [rsp+0x20],0x1
   1000177a3:	call   QWORD PTR [rip+0xfffffffffffea39f]        # 0x100001b48
   1000177a9:	mov    rcx,QWORD PTR [rdi]
   1000177ac:	lea    rdx,[rbx+0x2c]
   1000177b0:	mov    r8d,0x4
   1000177b6:	call   QWORD PTR [rip+0xfffffffffffea714]        # 0x100001ed0
   1000177bc:	shr    rax,0x2
   1000177c0:	cmp    rax,0x1
   1000177c4:	je     0x1000177ea
   1000177c6:	xor    r9d,r9d
   1000177c9:	mov    QWORD PTR [rsp+0x28],rax
   1000177ce:	mov    ecx,0x155
   1000177d3:	lea    edx,[r9+0x3]
   1000177d7:	lea    r8d,[r9+0x10]
   1000177db:	mov    QWORD PTR [rsp+0x20],0x1
   1000177e4:	call   QWORD PTR [rip+0xfffffffffffea35e]        # 0x100001b48
   1000177ea:	mov    rcx,QWORD PTR [rdi]
   1000177ed:	lea    rdx,[rbx+0x30]
   1000177f1:	mov    r8d,0x4
   1000177f7:	call   QWORD PTR [rip+0xfffffffffffea6d3]        # 0x100001ed0
   1000177fd:	shr    rax,0x2
   100017801:	cmp    rax,0x1
   100017805:	je     0x10001782b
   100017807:	xor    r9d,r9d
   10001780a:	mov    QWORD PTR [rsp+0x28],rax
   10001780f:	mov    ecx,0x155
   100017814:	lea    edx,[r9+0x3]
   100017818:	lea    r8d,[r9+0x10]
   10001781c:	mov    QWORD PTR [rsp+0x20],0x1
   100017825:	call   QWORD PTR [rip+0xfffffffffffea31d]        # 0x100001b48
   10001782b:	mov    rcx,QWORD PTR [rdi]
   10001782e:	lea    rdx,[rbx+0x34]
   100017832:	mov    r8d,0x4
   100017838:	call   QWORD PTR [rip+0xfffffffffffea692]        # 0x100001ed0
   10001783e:	shr    rax,0x2
   100017842:	cmp    rax,0x1
   100017846:	je     0x10001786c
   100017848:	xor    r9d,r9d
   10001784b:	mov    QWORD PTR [rsp+0x28],rax
   100017850:	mov    ecx,0x155
   100017855:	lea    edx,[r9+0x3]
   100017859:	lea    r8d,[r9+0x10]
   10001785d:	mov    QWORD PTR [rsp+0x20],0x1
   100017866:	call   QWORD PTR [rip+0xfffffffffffea2dc]        # 0x100001b48
   10001786c:	mov    rcx,QWORD PTR [rdi]
   10001786f:	lea    rdx,[rbx+0x38]
   100017873:	mov    r8d,0x4
   100017879:	call   QWORD PTR [rip+0xfffffffffffea651]        # 0x100001ed0
   10001787f:	shr    rax,0x2
   100017883:	cmp    rax,0x1
   100017887:	je     0x1000178ad
   100017889:	xor    r9d,r9d
   10001788c:	mov    QWORD PTR [rsp+0x28],rax
   100017891:	mov    ecx,0x155
   100017896:	lea    edx,[r9+0x3]
   10001789a:	lea    r8d,[r9+0x10]
   10001789e:	mov    QWORD PTR [rsp+0x20],0x1
   1000178a7:	call   QWORD PTR [rip+0xfffffffffffea29b]        # 0x100001b48
   1000178ad:	mov    rcx,QWORD PTR [rdi]
   1000178b0:	lea    rdx,[rbx+0x3c]
   1000178b4:	mov    r8d,0x4
   1000178ba:	call   QWORD PTR [rip+0xfffffffffffea610]        # 0x100001ed0
   1000178c0:	shr    rax,0x2
   1000178c4:	cmp    rax,0x1
   1000178c8:	je     0x1000178ee
   1000178ca:	xor    r9d,r9d
   1000178cd:	mov    QWORD PTR [rsp+0x28],rax
   1000178d2:	mov    ecx,0x155
   1000178d7:	lea    edx,[r9+0x3]
   1000178db:	lea    r8d,[r9+0x10]
   1000178df:	mov    QWORD PTR [rsp+0x20],0x1
   1000178e8:	call   QWORD PTR [rip+0xfffffffffffea25a]        # 0x100001b48
   1000178ee:	mov    rcx,QWORD PTR [rdi]
   1000178f1:	lea    rdx,[rbx+0x40]
   1000178f5:	mov    r8d,0x4
   1000178fb:	call   QWORD PTR [rip+0xfffffffffffea5cf]        # 0x100001ed0
   100017901:	shr    rax,0x2
   100017905:	cmp    rax,0x1
   100017909:	je     0x10001792f
   10001790b:	xor    r9d,r9d
   10001790e:	mov    QWORD PTR [rsp+0x28],rax
   100017913:	mov    ecx,0x155
   100017918:	lea    edx,[r9+0x3]
   10001791c:	lea    r8d,[r9+0x10]
   100017920:	mov    QWORD PTR [rsp+0x20],0x1
   100017929:	call   QWORD PTR [rip+0xfffffffffffea219]        # 0x100001b48
   10001792f:	mov    rcx,QWORD PTR [rdi]
   100017932:	lea    rdx,[rbx+0x44]
   100017936:	mov    r8d,0x4
   10001793c:	call   QWORD PTR [rip+0xfffffffffffea58e]        # 0x100001ed0
   100017942:	shr    rax,0x2
   100017946:	cmp    rax,0x1
   10001794a:	je     0x100017970
   10001794c:	xor    r9d,r9d
   10001794f:	mov    QWORD PTR [rsp+0x28],rax
   100017954:	mov    ecx,0x155
   100017959:	lea    edx,[r9+0x3]
   10001795d:	lea    r8d,[r9+0x10]
   100017961:	mov    QWORD PTR [rsp+0x20],0x1
   10001796a:	call   QWORD PTR [rip+0xfffffffffffea1d8]        # 0x100001b48
   100017970:	mov    rcx,QWORD PTR [rdi]
   100017973:	lea    rdx,[rbx+0x48]
   100017977:	mov    r8d,0x4
   10001797d:	call   QWORD PTR [rip+0xfffffffffffea54d]        # 0x100001ed0
   100017983:	shr    rax,0x2
   100017987:	cmp    rax,0x1
   10001798b:	je     0x1000179b1
   10001798d:	xor    r9d,r9d
   100017990:	mov    QWORD PTR [rsp+0x28],rax
   100017995:	mov    ecx,0x155
   10001799a:	lea    edx,[r9+0x3]
   10001799e:	lea    r8d,[r9+0x10]
   1000179a2:	mov    QWORD PTR [rsp+0x20],0x1
   1000179ab:	call   QWORD PTR [rip+0xfffffffffffea197]        # 0x100001b48
   1000179b1:	mov    rcx,QWORD PTR [rdi]
   1000179b4:	lea    rdx,[rbx+0x4c]
   1000179b8:	mov    r8d,0x4
   1000179be:	call   QWORD PTR [rip+0xfffffffffffea50c]        # 0x100001ed0
   1000179c4:	shr    rax,0x2
   1000179c8:	cmp    rax,0x1
   1000179cc:	je     0x1000179f2
   1000179ce:	xor    r9d,r9d
   1000179d1:	mov    QWORD PTR [rsp+0x28],rax
   1000179d6:	mov    ecx,0x155
   1000179db:	lea    edx,[r9+0x3]
   1000179df:	lea    r8d,[r9+0x10]
   1000179e3:	mov    QWORD PTR [rsp+0x20],0x1
   1000179ec:	call   QWORD PTR [rip+0xfffffffffffea156]        # 0x100001b48
   1000179f2:	mov    rcx,QWORD PTR [rdi]
   1000179f5:	lea    rdx,[rbx+0x50]
   1000179f9:	mov    r8d,0x4
   1000179ff:	call   QWORD PTR [rip+0xfffffffffffea4cb]        # 0x100001ed0
   100017a05:	shr    rax,0x2
   100017a09:	cmp    rax,0x1
   100017a0d:	je     0x100017a33
   100017a0f:	xor    r9d,r9d
   100017a12:	mov    QWORD PTR [rsp+0x28],rax
   100017a17:	mov    ecx,0x155
   100017a1c:	lea    edx,[r9+0x3]
   100017a20:	lea    r8d,[r9+0x10]
   100017a24:	mov    QWORD PTR [rsp+0x20],0x1
   100017a2d:	call   QWORD PTR [rip+0xfffffffffffea115]        # 0x100001b48
   100017a33:	mov    rcx,QWORD PTR [rdi]
   100017a36:	lea    rdx,[rsp+0x48]
   100017a3b:	mov    r8d,0x4
   100017a41:	call   QWORD PTR [rip+0xfffffffffffea489]        # 0x100001ed0
   100017a47:	shr    rax,0x2
   100017a4b:	cmp    rax,0x1
   100017a4f:	je     0x100017a75
   100017a51:	xor    r9d,r9d
   100017a54:	mov    QWORD PTR [rsp+0x28],rax
   100017a59:	mov    ecx,0x155
   100017a5e:	lea    edx,[r9+0x3]
   100017a62:	lea    r8d,[r9+0x10]
   100017a66:	mov    QWORD PTR [rsp+0x20],0x1
   100017a6f:	call   QWORD PTR [rip+0xfffffffffffea0d3]        # 0x100001b48
   100017a75:	mov    rcx,QWORD PTR [rdi]
   100017a78:	lea    rdx,[rsp+0x50]
   100017a7d:	mov    r8d,0x4
   100017a83:	call   QWORD PTR [rip+0xfffffffffffea447]        # 0x100001ed0
   100017a89:	shr    rax,0x2
   100017a8d:	cmp    rax,0x1
   100017a91:	je     0x100017ab7
   100017a93:	xor    r9d,r9d
   100017a96:	mov    QWORD PTR [rsp+0x28],rax
   100017a9b:	mov    ecx,0x155
   100017aa0:	lea    edx,[r9+0x3]
   100017aa4:	lea    r8d,[r9+0x10]
   100017aa8:	mov    QWORD PTR [rsp+0x20],0x1
   100017ab1:	call   QWORD PTR [rip+0xfffffffffffea091]        # 0x100001b48
   100017ab7:	mov    eax,DWORD PTR [rsp+0x48]
   100017abb:	mov    DWORD PTR [rbx+0xc],0xffffffff
   100017ac2:	mov    DWORD PTR [rbx+0x4],eax
   100017ac5:	mov    eax,DWORD PTR [rsp+0x50]
   100017ac9:	mov    DWORD PTR [rbx+0x8],eax
   100017acc:	mov    rbx,QWORD PTR [rsp+0x58]
   100017ad1:	add    rsp,0x30
   100017ad5:	pop    rdi
   100017ad6:	ret    
   100017ad7:	nop
   100017ad8:	nop
   100017ad9:	nop
   100017ada:	nop
   100017adb:	nop
   100017adc:	nop
   100017add:	nop
   100017ade:	nop
   100017adf:	nop
   100017ae0:	mov    QWORD PTR [rsp+0x20],rbx
   100017ae5:	push   rdi
   100017ae6:	sub    rsp,0x30
   100017aea:	movzx  eax,BYTE PTR [rcx]
   100017aed:	mov    rdi,rdx
   100017af0:	mov    rbx,rcx
   100017af3:	mov    rcx,QWORD PTR [rdi]
   100017af6:	shr    al,1
   100017af8:	lea    rdx,[rsp+0x40]
   100017afd:	and    al,0x1
   100017aff:	mov    r8d,0x1
   100017b05:	mov    BYTE PTR [rsp+0x40],al
   100017b09:	call   QWORD PTR [rip+0xfffffffffffea3b9]        # 0x100001ec8
   100017b0f:	cmp    rax,0x1
   100017b13:	je     0x100017b39
   100017b15:	xor    r9d,r9d
   100017b18:	mov    QWORD PTR [rsp+0x28],rax
   100017b1d:	mov    ecx,0x155
   100017b22:	lea    edx,[r9+0x3]
   100017b26:	lea    r8d,[r9+0x10]
   100017b2a:	mov    QWORD PTR [rsp+0x20],0x1
   100017b33:	call   QWORD PTR [rip+0xfffffffffffea00f]        # 0x100001b48
   100017b39:	movzx  eax,BYTE PTR [rbx]
   100017b3c:	mov    rcx,QWORD PTR [rdi]
   100017b3f:	lea    rdx,[rsp+0x40]
   100017b44:	shr    al,0x2
   100017b47:	mov    r8d,0x1
   100017b4d:	and    al,0x1
   100017b4f:	mov    BYTE PTR [rsp+0x40],al
   100017b53:	call   QWORD PTR [rip+0xfffffffffffea36f]        # 0x100001ec8
   100017b59:	cmp    rax,0x1
   100017b5d:	je     0x100017b83
   100017b5f:	xor    r9d,r9d
   100017b62:	mov    QWORD PTR [rsp+0x28],rax
   100017b67:	mov    ecx,0x155
   100017b6c:	lea    edx,[r9+0x3]
   100017b70:	lea    r8d,[r9+0x10]
   100017b74:	mov    QWORD PTR [rsp+0x20],0x1
   100017b7d:	call   QWORD PTR [rip+0xfffffffffffe9fc5]        # 0x100001b48
   100017b83:	movzx  eax,BYTE PTR [rbx]
   100017b86:	mov    rcx,QWORD PTR [rdi]
   100017b89:	lea    rdx,[rsp+0x40]
   100017b8e:	shr    al,0x3
   100017b91:	mov    r8d,0x1
   100017b97:	and    al,0x1
   100017b99:	mov    BYTE PTR [rsp+0x40],al
   100017b9d:	call   QWORD PTR [rip+0xfffffffffffea325]        # 0x100001ec8
   100017ba3:	cmp    rax,0x1
   100017ba7:	je     0x100017bcd
   100017ba9:	xor    r9d,r9d
   100017bac:	mov    QWORD PTR [rsp+0x28],rax
   100017bb1:	mov    ecx,0x155
   100017bb6:	lea    edx,[r9+0x3]
   100017bba:	lea    r8d,[r9+0x10]
   100017bbe:	mov    QWORD PTR [rsp+0x20],0x1
   100017bc7:	call   QWORD PTR [rip+0xfffffffffffe9f7b]        # 0x100001b48
   100017bcd:	mov    rcx,QWORD PTR [rdi]
   100017bd0:	lea    rdx,[rbx+0x10]
   100017bd4:	mov    r8d,0x2
   100017bda:	call   QWORD PTR [rip+0xfffffffffffea2e8]        # 0x100001ec8
   100017be0:	shr    rax,1
   100017be3:	cmp    rax,0x1
   100017be7:	je     0x100017c0d
   100017be9:	xor    r9d,r9d
   100017bec:	mov    QWORD PTR [rsp+0x28],rax
   100017bf1:	mov    ecx,0x155
   100017bf6:	lea    edx,[r9+0x3]
   100017bfa:	lea    r8d,[r9+0x10]
   100017bfe:	mov    QWORD PTR [rsp+0x20],0x1
   100017c07:	call   QWORD PTR [rip+0xfffffffffffe9f3b]        # 0x100001b48
   100017c0d:	mov    rcx,QWORD PTR [rdi]
   100017c10:	lea    rdx,[rbx+0x14]
   100017c14:	mov    r8d,0xc
   100017c1a:	call   QWORD PTR [rip+0xfffffffffffea2a8]        # 0x100001ec8
   100017c20:	mov    r11,rax
   100017c23:	movabs rax,0xaaaaaaaaaaaaaaab
   100017c2d:	mul    r11
   100017c30:	shr    rdx,0x3
   100017c34:	cmp    rdx,0x1
   100017c38:	je     0x100017c5e
   100017c3a:	xor    r9d,r9d
   100017c3d:	mov    QWORD PTR [rsp+0x28],rdx
   100017c42:	mov    ecx,0x155
   100017c47:	lea    edx,[r9+0x3]
   100017c4b:	lea    r8d,[r9+0x10]
   100017c4f:	mov    QWORD PTR [rsp+0x20],0x1
   100017c58:	call   QWORD PTR [rip+0xfffffffffffe9eea]        # 0x100001b48
   100017c5e:	mov    rcx,QWORD PTR [rdi]
   100017c61:	lea    rdx,[rbx+0x20]
   100017c65:	mov    r8d,0x8
   100017c6b:	call   QWORD PTR [rip+0xfffffffffffea257]        # 0x100001ec8
   100017c71:	shr    rax,0x3
   100017c75:	cmp    rax,0x1
   100017c79:	je     0x100017c9f
   100017c7b:	xor    r9d,r9d
   100017c7e:	mov    QWORD PTR [rsp+0x28],rax
   100017c83:	mov    ecx,0x155
   100017c88:	lea    edx,[r9+0x3]
   100017c8c:	lea    r8d,[r9+0x10]
   100017c90:	mov    QWORD PTR [rsp+0x20],0x1
   100017c99:	call   QWORD PTR [rip+0xfffffffffffe9ea9]        # 0x100001b48
   100017c9f:	mov    rcx,QWORD PTR [rdi]
   100017ca2:	lea    rdx,[rbx+0x28]
   100017ca6:	mov    r8d,0x4
   100017cac:	call   QWORD PTR [rip+0xfffffffffffea216]        # 0x100001ec8
   100017cb2:	shr    rax,0x2
   100017cb6:	cmp    rax,0x1
   100017cba:	je     0x100017ce0
   100017cbc:	xor    r9d,r9d
   100017cbf:	mov    QWORD PTR [rsp+0x28],rax
   100017cc4:	mov    ecx,0x155
   100017cc9:	lea    edx,[r9+0x3]
   100017ccd:	lea    r8d,[r9+0x10]
   100017cd1:	mov    QWORD PTR [rsp+0x20],0x1
   100017cda:	call   QWORD PTR [rip+0xfffffffffffe9e68]        # 0x100001b48
   100017ce0:	mov    rcx,QWORD PTR [rdi]
   100017ce3:	lea    rdx,[rbx+0x2c]
   100017ce7:	mov    r8d,0x4
   100017ced:	call   QWORD PTR [rip+0xfffffffffffea1d5]        # 0x100001ec8
   100017cf3:	shr    rax,0x2
   100017cf7:	cmp    rax,0x1
   100017cfb:	je     0x100017d21
   100017cfd:	xor    r9d,r9d
   100017d00:	mov    QWORD PTR [rsp+0x28],rax
   100017d05:	mov    ecx,0x155
   100017d0a:	lea    edx,[r9+0x3]
   100017d0e:	lea    r8d,[r9+0x10]
   100017d12:	mov    QWORD PTR [rsp+0x20],0x1
   100017d1b:	call   QWORD PTR [rip+0xfffffffffffe9e27]        # 0x100001b48
   100017d21:	mov    rcx,QWORD PTR [rdi]
   100017d24:	lea    rdx,[rbx+0x30]
   100017d28:	mov    r8d,0x4
   100017d2e:	call   QWORD PTR [rip+0xfffffffffffea194]        # 0x100001ec8
   100017d34:	shr    rax,0x2
   100017d38:	cmp    rax,0x1
   100017d3c:	je     0x100017d62
   100017d3e:	xor    r9d,r9d
   100017d41:	mov    QWORD PTR [rsp+0x28],rax
   100017d46:	mov    ecx,0x155
   100017d4b:	lea    edx,[r9+0x3]
   100017d4f:	lea    r8d,[r9+0x10]
   100017d53:	mov    QWORD PTR [rsp+0x20],0x1
   100017d5c:	call   QWORD PTR [rip+0xfffffffffffe9de6]        # 0x100001b48
   100017d62:	mov    rcx,QWORD PTR [rdi]
   100017d65:	lea    rdx,[rbx+0x34]
   100017d69:	mov    r8d,0x4
   100017d6f:	call   QWORD PTR [rip+0xfffffffffffea153]        # 0x100001ec8
   100017d75:	shr    rax,0x2
   100017d79:	cmp    rax,0x1
   100017d7d:	je     0x100017da3
   100017d7f:	xor    r9d,r9d
   100017d82:	mov    QWORD PTR [rsp+0x28],rax
   100017d87:	mov    ecx,0x155
   100017d8c:	lea    edx,[r9+0x3]
   100017d90:	lea    r8d,[r9+0x10]
   100017d94:	mov    QWORD PTR [rsp+0x20],0x1
   100017d9d:	call   QWORD PTR [rip+0xfffffffffffe9da5]        # 0x100001b48
   100017da3:	mov    rcx,QWORD PTR [rdi]
   100017da6:	lea    rdx,[rbx+0x38]
   100017daa:	mov    r8d,0x4
   100017db0:	call   QWORD PTR [rip+0xfffffffffffea112]        # 0x100001ec8
   100017db6:	shr    rax,0x2
   100017dba:	cmp    rax,0x1
   100017dbe:	je     0x100017de4
   100017dc0:	xor    r9d,r9d
   100017dc3:	mov    QWORD PTR [rsp+0x28],rax
   100017dc8:	mov    ecx,0x155
   100017dcd:	lea    edx,[r9+0x3]
   100017dd1:	lea    r8d,[r9+0x10]
   100017dd5:	mov    QWORD PTR [rsp+0x20],0x1
   100017dde:	call   QWORD PTR [rip+0xfffffffffffe9d64]        # 0x100001b48
   100017de4:	mov    rcx,QWORD PTR [rdi]
   100017de7:	lea    rdx,[rbx+0x3c]
   100017deb:	mov    r8d,0x4
   100017df1:	call   QWORD PTR [rip+0xfffffffffffea0d1]        # 0x100001ec8
   100017df7:	shr    rax,0x2
   100017dfb:	cmp    rax,0x1
   100017dff:	je     0x100017e25
   100017e01:	xor    r9d,r9d
   100017e04:	mov    QWORD PTR [rsp+0x28],rax
   100017e09:	mov    ecx,0x155
   100017e0e:	lea    edx,[r9+0x3]
   100017e12:	lea    r8d,[r9+0x10]
   100017e16:	mov    QWORD PTR [rsp+0x20],0x1
   100017e1f:	call   QWORD PTR [rip+0xfffffffffffe9d23]        # 0x100001b48
   100017e25:	mov    rcx,QWORD PTR [rdi]
   100017e28:	lea    rdx,[rbx+0x40]
   100017e2c:	mov    r8d,0x4
   100017e32:	call   QWORD PTR [rip+0xfffffffffffea090]        # 0x100001ec8
   100017e38:	shr    rax,0x2
   100017e3c:	cmp    rax,0x1
   100017e40:	je     0x100017e66
   100017e42:	xor    r9d,r9d
   100017e45:	mov    QWORD PTR [rsp+0x28],rax
   100017e4a:	mov    ecx,0x155
   100017e4f:	lea    edx,[r9+0x3]
   100017e53:	lea    r8d,[r9+0x10]
   100017e57:	mov    QWORD PTR [rsp+0x20],0x1
   100017e60:	call   QWORD PTR [rip+0xfffffffffffe9ce2]        # 0x100001b48
   100017e66:	mov    rcx,QWORD PTR [rdi]
   100017e69:	lea    rdx,[rbx+0x44]
   100017e6d:	mov    r8d,0x4
   100017e73:	call   QWORD PTR [rip+0xfffffffffffea04f]        # 0x100001ec8
   100017e79:	shr    rax,0x2
   100017e7d:	cmp    rax,0x1
   100017e81:	je     0x100017ea7
   100017e83:	xor    r9d,r9d
   100017e86:	mov    QWORD PTR [rsp+0x28],rax
   100017e8b:	mov    ecx,0x155
   100017e90:	lea    edx,[r9+0x3]
   100017e94:	lea    r8d,[r9+0x10]
   100017e98:	mov    QWORD PTR [rsp+0x20],0x1
   100017ea1:	call   QWORD PTR [rip+0xfffffffffffe9ca1]        # 0x100001b48
   100017ea7:	mov    rcx,QWORD PTR [rdi]
   100017eaa:	lea    rdx,[rbx+0x48]
   100017eae:	mov    r8d,0x4
   100017eb4:	call   QWORD PTR [rip+0xfffffffffffea00e]        # 0x100001ec8
   100017eba:	shr    rax,0x2
   100017ebe:	cmp    rax,0x1
   100017ec2:	je     0x100017ee8
   100017ec4:	xor    r9d,r9d
   100017ec7:	mov    QWORD PTR [rsp+0x28],rax
   100017ecc:	mov    ecx,0x155
   100017ed1:	lea    edx,[r9+0x3]
   100017ed5:	lea    r8d,[r9+0x10]
   100017ed9:	mov    QWORD PTR [rsp+0x20],0x1
   100017ee2:	call   QWORD PTR [rip+0xfffffffffffe9c60]        # 0x100001b48
   100017ee8:	mov    rcx,QWORD PTR [rdi]
   100017eeb:	lea    rdx,[rbx+0x4c]
   100017eef:	mov    r8d,0x4
   100017ef5:	call   QWORD PTR [rip+0xfffffffffffe9fcd]        # 0x100001ec8
   100017efb:	shr    rax,0x2
   100017eff:	cmp    rax,0x1
   100017f03:	je     0x100017f29
   100017f05:	xor    r9d,r9d
   100017f08:	mov    QWORD PTR [rsp+0x28],rax
   100017f0d:	mov    ecx,0x155
   100017f12:	lea    edx,[r9+0x3]
   100017f16:	lea    r8d,[r9+0x10]
   100017f1a:	mov    QWORD PTR [rsp+0x20],0x1
   100017f23:	call   QWORD PTR [rip+0xfffffffffffe9c1f]        # 0x100001b48
   100017f29:	mov    rcx,QWORD PTR [rdi]
   100017f2c:	lea    rdx,[rbx+0x50]
   100017f30:	mov    r8d,0x4
   100017f36:	call   QWORD PTR [rip+0xfffffffffffe9f8c]        # 0x100001ec8
   100017f3c:	shr    rax,0x2
   100017f40:	cmp    rax,0x1
   100017f44:	je     0x100017f6a
   100017f46:	xor    r9d,r9d
   100017f49:	mov    QWORD PTR [rsp+0x28],rax
   100017f4e:	mov    ecx,0x155
   100017f53:	lea    edx,[r9+0x3]
   100017f57:	lea    r8d,[r9+0x10]
   100017f5b:	mov    QWORD PTR [rsp+0x20],0x1
   100017f64:	call   QWORD PTR [rip+0xfffffffffffe9bde]        # 0x100001b48
   100017f6a:	mov    eax,DWORD PTR [rbx+0xc]
   100017f6d:	not    eax
   100017f6f:	test   eax,0x7eff7fff
   100017f74:	je     0x100017f9f
   100017f76:	lea    rcx,[rsp+0x40]
   100017f7b:	mov    DWORD PTR [rsp+0x40],0x0
   100017f83:	call   QWORD PTR [rip+0xfffffffffffe9a17]        # 0x1000019a0
   100017f89:	test   al,al
   100017f8b:	je     0x100017f9f
   100017f8d:	mov    eax,DWORD PTR [rbx+0xc]
   100017f90:	mov    ecx,DWORD PTR [rbx+0x4]
   100017f93:	and    ecx,eax
   100017f95:	not    eax
   100017f97:	and    eax,DWORD PTR [rsp+0x40]
   100017f9b:	or     ecx,eax
   100017f9d:	jmp    0x100017fa2
   100017f9f:	mov    ecx,DWORD PTR [rbx+0x4]
   100017fa2:	mov    eax,DWORD PTR [rbx+0x8]
   100017fa5:	and    ecx,0x7eff7fff
   100017fab:	lea    rdx,[rsp+0x48]
   100017fb0:	mov    DWORD PTR [rsp+0x48],ecx
   100017fb4:	mov    rcx,QWORD PTR [rdi]
   100017fb7:	mov    r8d,0x4
   100017fbd:	mov    DWORD PTR [rsp+0x50],eax
   100017fc1:	call   QWORD PTR [rip+0xfffffffffffe9f01]        # 0x100001ec8
   100017fc7:	shr    rax,0x2
   100017fcb:	cmp    rax,0x1
   100017fcf:	je     0x100017ff5
   100017fd1:	xor    r9d,r9d
   100017fd4:	mov    QWORD PTR [rsp+0x28],rax
   100017fd9:	mov    ecx,0x155
   100017fde:	lea    edx,[r9+0x3]
   100017fe2:	lea    r8d,[r9+0x10]
   100017fe6:	mov    QWORD PTR [rsp+0x20],0x1
   100017fef:	call   QWORD PTR [rip+0xfffffffffffe9b53]        # 0x100001b48
   100017ff5:	mov    rcx,QWORD PTR [rdi]
   100017ff8:	lea    rdx,[rsp+0x50]
   100017ffd:	mov    r8d,0x4
   100018003:	call   QWORD PTR [rip+0xfffffffffffe9ebf]        # 0x100001ec8
   100018009:	shr    rax,0x2
   10001800d:	cmp    rax,0x1
   100018011:	je     0x100018037
   100018013:	xor    r9d,r9d
   100018016:	mov    QWORD PTR [rsp+0x28],rax
   10001801b:	mov    ecx,0x155
   100018020:	lea    edx,[r9+0x3]
   100018024:	lea    r8d,[r9+0x10]
   100018028:	mov    QWORD PTR [rsp+0x20],0x1
   100018031:	call   QWORD PTR [rip+0xfffffffffffe9b11]        # 0x100001b48
   100018037:	mov    rbx,QWORD PTR [rsp+0x58]
   10001803c:	add    rsp,0x30
   100018040:	pop    rdi
   100018041:	ret    
   100018042:	nop
   100018043:	nop
   100018044:	nop
   100018045:	nop
   100018046:	nop
   100018047:	nop
   100018048:	nop
   100018049:	nop
   10001804a:	nop
   10001804b:	nop
   10001804c:	nop
   10001804d:	nop
   10001804e:	nop
   10001804f:	nop
   100018050:	sub    rsp,0x28
   100018054:	test   rcx,rcx
   100018057:	je     0x10001808a
   100018059:	mov    rax,rcx
   10001805c:	and    rax,0xffffffffffffe000
   100018062:	mov    rax,QWORD PTR [rax+0x8]
   100018066:	mov    rdx,QWORD PTR [rax+0x10]
   10001806a:	dec    rdx
   10001806d:	not    rdx
   100018070:	and    rdx,rcx
   100018073:	mov    r8,QWORD PTR [rdx+0x8]
   100018077:	test   BYTE PTR [r8+0x28],0x8
   10001807c:	jne    0x10001808a
   10001807e:	mov    rax,QWORD PTR [r8]
   100018081:	mov    rdx,rcx
   100018084:	mov    rcx,r8
   100018087:	call   QWORD PTR [rax+0x28]
   10001808a:	add    rsp,0x28
   10001808e:	ret    
   10001808f:	nop
   100018090:	nop
   100018091:	nop
   100018092:	nop
   100018093:	nop
   100018094:	nop
   100018095:	nop
   100018096:	nop
   100018097:	nop
   100018098:	nop
   100018099:	nop
   10001809a:	nop
   10001809b:	nop
   10001809c:	nop
   10001809d:	nop
   10001809e:	nop
   10001809f:	nop
   1000180a0:	ret    0x0
   1000180a3:	nop
   1000180a4:	nop
   1000180a5:	nop
   1000180a6:	nop
   1000180a7:	nop
   1000180a8:	nop
   1000180a9:	nop
   1000180aa:	nop
   1000180ab:	nop
   1000180ac:	nop
   1000180ad:	nop
   1000180ae:	nop
   1000180af:	nop
   1000180b0:	mov    r9,QWORD PTR [rcx]
   1000180b3:	cmp    QWORD PTR [r9+0x10],0x4
   1000180b8:	jb     0x1000180e7
   1000180ba:	mov    rax,QWORD PTR [r9+0x8]
   1000180be:	mov    ecx,DWORD PTR [rax]
   1000180c0:	mov    DWORD PTR [rdx],ecx
   1000180c2:	movzx  eax,WORD PTR [r9+0x28]
   1000180c7:	test   ax,ax
   1000180ca:	je     0x1000180dc
   1000180cc:	sub    ax,0x4
   1000180d0:	mov    WORD PTR [r9+0x28],ax
   1000180d5:	sete   al
   1000180d8:	mov    BYTE PTR [r9+0x2a],al
   1000180dc:	add    QWORD PTR [r9+0x8],0x4
   1000180e1:	add    QWORD PTR [r9+0x10],0xfffffffffffffffc
   1000180e6:	ret    
   1000180e7:	mov    rax,QWORD PTR [r9]
   1000180ea:	mov    r8d,0x4
   1000180f0:	mov    rcx,r9
   1000180f3:	rex.W jmp QWORD PTR [rax+0x8]
   1000180f7:	nop
   1000180f8:	nop
   1000180f9:	nop
   1000180fa:	nop
   1000180fb:	nop
   1000180fc:	nop
   1000180fd:	nop
   1000180fe:	nop
   1000180ff:	nop
   100018100:	push   rbx
   100018102:	sub    rsp,0x20
   100018106:	mov    rax,QWORD PTR [rip+0xfffffffffffe9e63]        # 0x100001f70
   10001810d:	mov    r8d,DWORD PTR [rax]
   100018110:	mov    rax,QWORD PTR [rip+0xfffffffffffe9909]        # 0x100001a20
   100018117:	mov    edx,DWORD PTR [rax]
   100018119:	xor    ebx,ebx
   10001811b:	test   ecx,ecx
   10001811d:	jne    0x100018142
   10001811f:	call   QWORD PTR [rip+0xfffffffffffe991b]        # 0x100001a40
   100018125:	mov    r11d,eax
   100018128:	mov    rax,QWORD PTR [rip+0xfffffffffffe9921]        # 0x100001a50
   10001812f:	mov    DWORD PTR [rax],r11d
   100018132:	mov    rax,QWORD PTR [rip+0xfffffffffffe990f]        # 0x100001a48
   100018139:	mov    DWORD PTR [rax],ebx
   10001813b:	mov    ebx,0x1
   100018140:	jmp    0x100018176
   100018142:	imul   edx,r8d
   100018146:	cmp    ecx,edx
   100018148:	jb     0x10001815a
   10001814a:	mov    rax,QWORD PTR [rip+0xfffffffffffe98ff]        # 0x100001a50
   100018151:	mov    ebx,0x1
   100018156:	mov    DWORD PTR [rax],ecx
   100018158:	jmp    0x10001816d
   10001815a:	call   QWORD PTR [rip+0xfffffffffffe98e0]        # 0x100001a40
   100018160:	mov    r11d,eax
   100018163:	mov    rax,QWORD PTR [rip+0xfffffffffffe98e6]        # 0x100001a50
   10001816a:	mov    DWORD PTR [rax],r11d
   10001816d:	mov    rax,QWORD PTR [rip+0xfffffffffffe98d4]        # 0x100001a48
   100018174:	mov    DWORD PTR [rax],ebx
   100018176:	mov    rax,QWORD PTR [rip+0xfffffffffffe98bb]        # 0x100001a38
   10001817d:	mov    rcx,QWORD PTR [rip+0xfffffffffffe989c]        # 0x100001a20
   100018184:	mov    r9d,DWORD PTR [rax]
   100018187:	mov    edx,DWORD PTR [rcx]
   100018189:	mov    rcx,QWORD PTR [rip+0xfffffffffffe98c0]        # 0x100001a50
   100018190:	lea    r8d,[rdx+rdx*2]
   100018194:	mov    edx,DWORD PTR [rcx]
   100018196:	mov    rcx,QWORD PTR [rip+0xfffffffffffe989b]        # 0x100001a38
   10001819d:	sub    edx,r8d
   1000181a0:	mov    DWORD PTR [rcx],edx
   1000181a2:	mov    rcx,QWORD PTR [rip+0xfffffffffffe988f]        # 0x100001a38
   1000181a9:	mov    edx,DWORD PTR [rcx]
   1000181ab:	mov    rcx,QWORD PTR [rip+0xfffffffffffe9e16]        # 0x100001fc8
   1000181b2:	sub    edx,r9d
   1000181b5:	lock xadd DWORD PTR [rcx],edx
   1000181b9:	mov    eax,ebx
   1000181bb:	add    rsp,0x20
   1000181bf:	pop    rbx
   1000181c0:	ret    
   1000181c1:	nop
   1000181c2:	nop
   1000181c3:	nop
   1000181c4:	nop
   1000181c5:	nop
   1000181c6:	nop
   1000181c7:	nop
   1000181c8:	nop
   1000181c9:	nop
   1000181ca:	nop
   1000181cb:	nop
   1000181cc:	nop
   1000181cd:	nop
   1000181ce:	nop
   1000181cf:	nop
   1000181d0:	mov    rax,QWORD PTR [rip+0xfffffffffffe9959]        # 0x100001b30
   1000181d7:	mov    edx,ecx
   1000181d9:	mov    DWORD PTR [rax],ecx
   1000181db:	cmp    rdx,0xffffffffffffffff
   1000181df:	jne    0x1000181ec
   1000181e1:	mov    rax,QWORD PTR [rip+0xfffffffffffe9e18]        # 0x100002000
   1000181e8:	mov    QWORD PTR [rax],rdx
   1000181eb:	ret    
   1000181ec:	mov    rax,QWORD PTR [rip+0xfffffffffffe9cf5]        # 0x100001ee8
   1000181f3:	cmp    DWORD PTR [rax],0x0
   1000181f6:	je     0x100018232
   1000181f8:	mov    rax,QWORD PTR [rip+0xfffffffffffe9ce1]        # 0x100001ee0
   1000181ff:	mov    rcx,QWORD PTR [rax]
   100018202:	movabs rax,0x624dd2f1a9fbe77
   10001820c:	imul   rcx,rdx
   100018210:	add    rcx,0x3e7
   100018217:	mul    rcx
   10001821a:	mov    rax,QWORD PTR [rip+0xfffffffffffe9ddf]        # 0x100002000
   100018221:	sub    rcx,rdx
   100018224:	shr    rcx,1
   100018227:	add    rcx,rdx
   10001822a:	shr    rcx,0x9
   10001822e:	mov    QWORD PTR [rax],rcx
   100018231:	ret    
   100018232:	mov    rax,QWORD PTR [rip+0xfffffffffffe9dc7]        # 0x100002000
   100018239:	imul   rdx,rdx,0x2710
   100018240:	mov    QWORD PTR [rax],rdx
   100018243:	ret    
   100018244:	nop
   100018245:	nop
   100018246:	nop
   100018247:	nop
   100018248:	nop
   100018249:	nop
   10001824a:	nop
   10001824b:	nop
   10001824c:	nop
   10001824d:	nop
   10001824e:	nop
   10001824f:	nop
   100018250:	mov    rax,rsp
   100018253:	mov    DWORD PTR [rax+0x20],r9d
   100018257:	push   rbx
   100018258:	push   rdi
   100018259:	sub    rsp,0x88
   100018260:	xor    edi,edi
   100018262:	lea    rbx,[rax+0x28]
   100018266:	mov    DWORD PTR [rax-0x38],ecx
   100018269:	mov    DWORD PTR [rax-0x34],edx
   10001826c:	mov    DWORD PTR [rax-0x30],0xffffffff
   100018273:	mov    DWORD PTR [rax-0x2c],r8d
   100018277:	mov    DWORD PTR [rax-0x28],edi
   10001827a:	call   QWORD PTR [rip+0xfffffffffffe9988]        # 0x100001c08
   100018280:	mov    QWORD PTR [rsp+0x50],rbx
   100018285:	mov    r10,QWORD PTR [rax]
   100018288:	mov    QWORD PTR [rsp+0x48],rdi
   10001828d:	mov    DWORD PTR [rsp+0x40],0x1
   100018295:	mov    QWORD PTR [rsp+0x38],0xffffffffffffffff
   10001829e:	mov    QWORD PTR [rsp+0x30],rdi
   1000182a3:	lea    r9d,[rdi+0x1]
   1000182a7:	lea    r8d,[rdi+0x2]
   1000182ab:	lea    rdx,[rsp+0x60]
   1000182b0:	mov    rcx,rax
   1000182b3:	mov    DWORD PTR [rsp+0x28],edi
   1000182b7:	mov    QWORD PTR [rsp+0x20],rdi
   1000182bc:	call   QWORD PTR [r10]
   1000182bf:	add    rsp,0x88
   1000182c6:	pop    rdi
   1000182c7:	pop    rbx
   1000182c8:	ret    
   1000182c9:	nop
   1000182ca:	nop
   1000182cb:	nop
   1000182cc:	nop
   1000182cd:	nop
   1000182ce:	nop
   1000182cf:	nop
   1000182d0:	mov    rax,rsp
   1000182d3:	mov    DWORD PTR [rax+0x8],ecx
   1000182d6:	mov    QWORD PTR [rax+0x10],rdx
   1000182da:	mov    QWORD PTR [rax+0x18],r8
   1000182de:	mov    QWORD PTR [rax+0x20],r9
   1000182e2:	push   rbx
   1000182e3:	push   rdi
   1000182e4:	sub    rsp,0x88
   1000182eb:	lea    rdi,[rax+0x10]
   1000182ef:	mov    DWORD PTR [rax-0x38],ecx
   1000182f2:	mov    QWORD PTR [rax-0x34],0xffffffffffffffff
   1000182fa:	mov    QWORD PTR [rax-0x2c],0x1
   100018302:	xor    ebx,ebx
   100018304:	call   QWORD PTR [rip+0xfffffffffffe98fe]        # 0x100001c08
   10001830a:	mov    r10,QWORD PTR [rax]
   10001830d:	mov    QWORD PTR [rsp+0x50],rdi
   100018312:	mov    QWORD PTR [rsp+0x48],rbx
   100018317:	mov    DWORD PTR [rsp+0x40],0x1
   10001831f:	mov    QWORD PTR [rsp+0x38],0xffffffffffffffff
   100018328:	mov    QWORD PTR [rsp+0x30],rbx
   10001832d:	lea    r9d,[rbx+0xc]
   100018331:	lea    r8d,[rbx+0x2]
   100018335:	lea    rdx,[rsp+0x60]
   10001833a:	mov    rcx,rax
   10001833d:	mov    DWORD PTR [rsp+0x28],ebx
   100018341:	mov    QWORD PTR [rsp+0x20],rbx
   100018346:	call   QWORD PTR [r10]
   100018349:	add    rsp,0x88
   100018350:	pop    rdi
   100018351:	pop    rbx
   100018352:	ret    
   100018353:	nop
   100018354:	nop
   100018355:	nop
   100018356:	nop
   100018357:	nop
   100018358:	nop
   100018359:	nop
   10001835a:	nop
   10001835b:	nop
   10001835c:	nop
   10001835d:	nop
   10001835e:	nop
   10001835f:	nop
   100018360:	mov    QWORD PTR [rsp+0x8],rcx
   100018365:	mov    QWORD PTR [rsp+0x10],rdx
   10001836a:	mov    QWORD PTR [rsp+0x18],r8
   10001836f:	mov    QWORD PTR [rsp+0x20],r9
   100018374:	mov    eax,0x1038
   100018379:	call   0x100002630
   10001837e:	sub    rsp,rax
   100018381:	mov    rax,QWORD PTR [rip+0x10e68]        # 0x1000291f0
   100018388:	xor    rax,rsp
   10001838b:	mov    QWORD PTR [rsp+0x1020],rax
   100018393:	lea    r8,[rsp+0x1048]
   10001839b:	lea    rdx,[rsp+0x20]
   1000183a0:	call   0x1000183d0
   1000183a5:	mov    rcx,QWORD PTR [rsp+0x1020]
   1000183ad:	xor    rcx,rsp
   1000183b0:	call   0x100002610
   1000183b5:	add    rsp,0x1038
   1000183bc:	ret    
   1000183bd:	nop
   1000183be:	nop
   1000183bf:	nop
   1000183c0:	nop
   1000183c1:	nop
   1000183c2:	nop
   1000183c3:	nop
   1000183c4:	nop
   1000183c5:	nop
   1000183c6:	nop
   1000183c7:	nop
   1000183c8:	nop
   1000183c9:	nop
   1000183ca:	nop
   1000183cb:	nop
   1000183cc:	nop
   1000183cd:	nop
   1000183ce:	nop
   1000183cf:	nop
   1000183d0:	mov    QWORD PTR [rsp+0x8],rbx
   1000183d5:	mov    QWORD PTR [rsp+0x10],rbp
   1000183da:	mov    QWORD PTR [rsp+0x18],rsi
   1000183df:	push   rdi
   1000183e0:	push   r14
   1000183e2:	push   r15
   1000183e4:	sub    rsp,0x30
   1000183e8:	mov    rax,QWORD PTR [rip+0x10cd9]        # 0x1000290c8
   1000183ef:	xor    r15d,r15d
   1000183f2:	mov    rbp,r8
   1000183f5:	test   BYTE PTR [rax+0x1fd],0x1
   1000183fc:	mov    rdi,rdx
   1000183ff:	mov    r14,rcx
   100018402:	mov    esi,0x800
   100018407:	jne    0x100018438
   100018409:	test   BYTE PTR [rax+0x1fc],0x80
   100018410:	jne    0x100018438
   100018412:	call   QWORD PTR [rip+0xfffffffffffe97f0]        # 0x100001c08
   100018418:	lea    r9d,[r15+0x2]
   10001841c:	mov    r8d,esi
   10001841f:	mov    r10,QWORD PTR [rax]
   100018422:	mov    rdx,rdi
   100018425:	mov    rcx,rax
   100018428:	mov    DWORD PTR [rsp+0x20],0x1
   100018430:	call   QWORD PTR [r10+0x78]
   100018434:	mov    ebx,eax
   100018436:	jmp    0x10001843b
   100018438:	mov    ebx,r15d
   10001843b:	call   QWORD PTR [rip+0xfffffffffffe97f7]        # 0x100001c38
   100018441:	sub    esi,ebx
   100018443:	mov    r8,r14
   100018446:	mov    r9,rax
   100018449:	movsxd rax,ebx
   10001844c:	movsxd rdx,esi
   10001844f:	lea    rcx,[rdi+rax*2]
   100018453:	mov    QWORD PTR [rsp+0x20],rbp
   100018458:	call   0x1000166c0
   10001845d:	mov    edx,0xa
   100018462:	test   eax,eax
   100018464:	je     0x10001846d
   100018466:	cmp    eax,0x8007007a
   10001846b:	jne    0x10001848a
   10001846d:	test   rdi,rdi
   100018470:	jne    0x100018477
   100018472:	mov    ebx,r15d
   100018475:	jmp    0x1000184a4
   100018477:	or     rbx,0xffffffffffffffff
   10001847b:	nop    DWORD PTR [rax+rax*1+0x0]
   100018480:	inc    rbx
   100018483:	cmp    WORD PTR [rdi+rbx*2],r15w
   100018488:	jne    0x100018480
   10001848a:	test   ebx,ebx
   10001848c:	jle    0x10001849a
   10001848e:	movsxd rax,ebx
   100018491:	cmp    dx,WORD PTR [rdi+rax*2-0x2]
   100018496:	jne    0x10001849a
   100018498:	dec    ebx
   10001849a:	mov    eax,0x7fd
   10001849f:	cmp    ebx,eax
   1000184a1:	cmovge ebx,eax
   1000184a4:	movsxd rax,ebx
   1000184a7:	mov    ecx,0xd
   1000184ac:	inc    ebx
   1000184ae:	mov    WORD PTR [rdi+rax*2],cx
   1000184b2:	movsxd rax,ebx
   1000184b5:	inc    ebx
   1000184b7:	mov    WORD PTR [rdi+rax*2],dx
   1000184bb:	movsxd rax,ebx
   1000184be:	mov    WORD PTR [rdi+rax*2],r15w
   1000184c3:	call   QWORD PTR [rip+0xfffffffffffe973f]        # 0x100001c08
   1000184c9:	mov    r8d,ebx
   1000184cc:	mov    r9,QWORD PTR [rax]
   1000184cf:	mov    rdx,rdi
   1000184d2:	mov    rcx,rax
   1000184d5:	mov    rbx,QWORD PTR [rsp+0x50]
   1000184da:	mov    rbp,QWORD PTR [rsp+0x58]
   1000184df:	mov    rsi,QWORD PTR [rsp+0x60]
   1000184e4:	add    rsp,0x30
   1000184e8:	pop    r15
   1000184ea:	pop    r14
   1000184ec:	pop    rdi
   1000184ed:	rex.WB jmp QWORD PTR [r9+0x70]
   1000184f1:	nop
   1000184f2:	nop
   1000184f3:	nop
   1000184f4:	nop
   1000184f5:	nop
   1000184f6:	nop
   1000184f7:	nop
   1000184f8:	nop
   1000184f9:	nop
   1000184fa:	nop
   1000184fb:	nop
   1000184fc:	nop
   1000184fd:	nop
   1000184fe:	nop
   1000184ff:	nop
   100018500:	mov    QWORD PTR [rsp+0x8],rcx
   100018505:	mov    QWORD PTR [rsp+0x10],rdx
   10001850a:	mov    QWORD PTR [rsp+0x18],r8
   10001850f:	mov    QWORD PTR [rsp+0x20],r9
   100018514:	push   rbx
   100018515:	mov    eax,0x1050
   10001851a:	call   0x100002630
   10001851f:	sub    rsp,rax
   100018522:	mov    rax,QWORD PTR [rip+0x10cc7]        # 0x1000291f0
   100018529:	xor    rax,rsp
   10001852c:	mov    QWORD PTR [rsp+0x1040],rax
   100018534:	lea    rbx,[rsp+0x1068]
   10001853c:	call   QWORD PTR [rip+0xfffffffffffe96f6]        # 0x100001c38
   100018542:	mov    r8,QWORD PTR [rsp+0x1060]
   10001854a:	lea    rcx,[rsp+0x30]
   10001854f:	mov    r9,rax
   100018552:	mov    edx,0x801
   100018557:	mov    QWORD PTR [rsp+0x20],rbx
   10001855c:	call   QWORD PTR [rip+0xfffffffffffe8ede]        # 0x100001440
   100018562:	mov    ebx,eax
   100018564:	xor    eax,eax
   100018566:	mov    WORD PTR [rsp+0x1030],ax
   10001856e:	mov    eax,0x800
   100018573:	cmp    ebx,0xffffffff
   100018576:	cmove  ebx,eax
   100018579:	call   QWORD PTR [rip+0xfffffffffffe9689]        # 0x100001c08
   10001857f:	lea    rdx,[rsp+0x30]
   100018584:	mov    r10,QWORD PTR [rax]
   100018587:	mov    r9b,0x1
   10001858a:	mov    r8d,ebx
   10001858d:	mov    rcx,rax
   100018590:	call   QWORD PTR [r10+0x80]
   100018597:	mov    rcx,QWORD PTR [rsp+0x1040]
   10001859f:	xor    rcx,rsp
   1000185a2:	call   0x100002610
   1000185a7:	add    rsp,0x1050
   1000185ae:	pop    rbx
   1000185af:	ret    
   1000185b0:	nop
   1000185b1:	nop
   1000185b2:	nop
   1000185b3:	nop
   1000185b4:	nop
   1000185b5:	nop
   1000185b6:	nop
   1000185b7:	nop
   1000185b8:	nop
   1000185b9:	nop
   1000185ba:	nop
   1000185bb:	nop
   1000185bc:	nop
   1000185bd:	nop
   1000185be:	nop
   1000185bf:	nop
   1000185c0:	mov    QWORD PTR [rsp+0x8],rbx
   1000185c5:	push   rdi
   1000185c6:	sub    rsp,0x80
   1000185cd:	xor    edi,edi
   1000185cf:	mov    rbx,r9
   1000185d2:	mov    DWORD PTR [rsp+0x60],ecx
   1000185d6:	mov    DWORD PTR [rsp+0x64],edx
   1000185da:	mov    DWORD PTR [rsp+0x68],0xffffffff
   1000185e2:	mov    DWORD PTR [rsp+0x6c],r8d
   1000185e7:	mov    DWORD PTR [rsp+0x70],edi
   1000185eb:	call   QWORD PTR [rip+0xfffffffffffe9617]        # 0x100001c08
   1000185f1:	mov    QWORD PTR [rsp+0x50],rbx
   1000185f6:	mov    r10,QWORD PTR [rax]
   1000185f9:	mov    QWORD PTR [rsp+0x48],rdi
   1000185fe:	mov    DWORD PTR [rsp+0x40],0x9
   100018606:	mov    QWORD PTR [rsp+0x38],0xffffffffffffffff
   10001860f:	mov    QWORD PTR [rsp+0x30],rdi
   100018614:	lea    r9d,[rdi+0x1]
   100018618:	lea    r8d,[rdi+0x2]
   10001861c:	lea    rdx,[rsp+0x60]
   100018621:	mov    rcx,rax
   100018624:	mov    DWORD PTR [rsp+0x28],edi
   100018628:	mov    QWORD PTR [rsp+0x20],rdi
   10001862d:	call   QWORD PTR [r10]
   100018630:	mov    rbx,QWORD PTR [rsp+0x90]
   100018638:	add    rsp,0x80
   10001863f:	pop    rdi
   100018640:	ret    
   100018641:	nop
   100018642:	nop
   100018643:	nop
   100018644:	nop
   100018645:	nop
   100018646:	nop
   100018647:	nop
   100018648:	nop
   100018649:	nop
   10001864a:	nop
   10001864b:	nop
   10001864c:	nop
   10001864d:	nop
   10001864e:	nop
   10001864f:	nop
   100018650:	jmp    0x1000185c0
   100018655:	nop
   100018656:	nop
   100018657:	nop
   100018658:	nop
   100018659:	nop
   10001865a:	nop
   10001865b:	nop
   10001865c:	nop
   10001865d:	nop
   10001865e:	nop
   10001865f:	nop
   100018660:	sub    rsp,0x68
   100018664:	nop    WORD PTR [rax+rax*1]
   100018669:	mov    edx,DWORD PTR [rip+0x13ef5]        # 0x10002c564
   10001866f:	lea    ecx,[rdx+0x1]
   100018672:	test   edx,edx
   100018674:	js     0x100018688
   100018676:	or     ecx,0x80000000
   10001867c:	mov    eax,edx
   10001867e:	lock cmpxchg DWORD PTR [rip+0x13ede],ecx        # 0x10002c564
   100018686:	mov    ecx,eax
   100018688:	pause  
   10001868a:	cmp    ecx,edx
   10001868c:	jne    0x100018669
   10001868e:	test   ecx,ecx
   100018690:	jne    0x1000187a0
   100018696:	mov    ecx,0xa
   10001869b:	lea    rax,[rsp+0x78]
   1000186a0:	mov    QWORD PTR [rsp+0x78],0x0
   1000186a9:	mov    QWORD PTR [rsp+0x30],rax
   1000186ae:	lea    rax,[rsp+0x80]
   1000186b6:	mov    QWORD PTR [rsp+0x80],0x0
   1000186c2:	mov    QWORD PTR [rsp+0x40],rax
   1000186c7:	lea    rax,[rsp+0x88]
   1000186cf:	mov    QWORD PTR [rsp+0x88],0x0
   1000186db:	mov    DWORD PTR [rsp+0x20],0x38
   1000186e3:	mov    DWORD PTR [rsp+0x24],0xa000a
   1000186eb:	mov    WORD PTR [rsp+0x28],cx
   1000186f0:	mov    QWORD PTR [rsp+0x50],rax
   1000186f5:	mov    WORD PTR [rsp+0x38],cx
   1000186fa:	mov    WORD PTR [rsp+0x48],cx
   1000186ff:	call   0x1000187f0
   100018704:	lea    rdx,[rip+0xfffffffffffeb125]        # 0x100003830
   10001870b:	mov    rcx,rax
   10001870e:	call   QWORD PTR [rip+0xfffffffffffe8b34]        # 0x100001248
   100018714:	test   rax,rax
   100018717:	je     0x1000187a0
   10001871d:	lea    rcx,[rsp+0x20]
   100018722:	xor    edx,edx
   100018724:	call   rax
   100018726:	xor    ecx,ecx
   100018728:	test   eax,eax
   10001872a:	sete   cl
   10001872d:	test   ecx,ecx
   10001872f:	je     0x1000187a0
   100018731:	mov    rdx,QWORD PTR [rsp+0x78]
   100018736:	lea    rcx,[rip+0x14653]        # 0x10002cd90
   10001873d:	mov    r8d,0x1b8
   100018743:	call   0x10001f75c
   100018748:	mov    rdx,QWORD PTR [rsp+0x80]
   100018750:	lea    rcx,[rip+0x14499]        # 0x10002cbf0
   100018757:	mov    r8d,0x1a0
   10001875d:	call   0x10001f75c
   100018762:	mov    r11,QWORD PTR [rsp+0x88]
   10001876a:	mov    rax,QWORD PTR [r11]
   10001876d:	mov    QWORD PTR [rip+0x13df4],rax        # 0x10002c568
   100018774:	mov    rax,QWORD PTR [r11+0x8]
   100018778:	mov    QWORD PTR [rip+0x13df1],rax        # 0x10002c570
   10001877f:	mov    rax,QWORD PTR [r11+0x10]
   100018783:	mov    QWORD PTR [rip+0x13dee],rax        # 0x10002c578
   10001878a:	mov    rax,QWORD PTR [r11+0x18]
   10001878e:	mov    QWORD PTR [rip+0x13deb],rax        # 0x10002c580
   100018795:	mov    rax,QWORD PTR [r11+0x20]
   100018799:	mov    QWORD PTR [rip+0x13de8],rax        # 0x10002c588
   1000187a0:	mov    eax,DWORD PTR [rip+0x13dbe]        # 0x10002c564
   1000187a6:	mov    ecx,eax
   1000187a8:	btr    ecx,0x1f
   1000187ac:	lock cmpxchg DWORD PTR [rip+0x13db0],ecx        # 0x10002c564
   1000187b4:	pause  
   1000187b6:	jne    0x1000187a0
   1000187b8:	cmp    QWORD PTR [rip+0x145d8],0x0        # 0x10002cd98
   1000187c0:	je     0x1000187e0
   1000187c2:	cmp    QWORD PTR [rip+0x1442e],0x0        # 0x10002cbf8
   1000187ca:	je     0x1000187e0
   1000187cc:	cmp    QWORD PTR [rip+0x13d9c],0x0        # 0x10002c570
   1000187d4:	je     0x1000187e0
   1000187d6:	mov    eax,0x1
   1000187db:	add    rsp,0x68
   1000187df:	ret    
   1000187e0:	xor    eax,eax
   1000187e2:	add    rsp,0x68
   1000187e6:	ret    
   1000187e7:	nop
   1000187e8:	nop
   1000187e9:	nop
   1000187ea:	nop
   1000187eb:	nop
   1000187ec:	nop
   1000187ed:	nop
   1000187ee:	nop
   1000187ef:	nop
   1000187f0:	mov    QWORD PTR [rsp+0x8],rbx
   1000187f5:	mov    QWORD PTR [rsp+0x10],rbp
   1000187fa:	mov    QWORD PTR [rsp+0x18],rsi
   1000187ff:	push   rdi
   100018800:	sub    rsp,0x480
   100018807:	mov    rax,QWORD PTR [rip+0x109e2]        # 0x1000291f0
   10001880e:	xor    rax,rsp
   100018811:	mov    QWORD PTR [rsp+0x470],rax
   100018819:	xor    ebp,ebp
   10001881b:	lea    rax,[rip+0xde]        # 0x100018900
   100018822:	lea    rdi,[rsp+0x20]
   100018827:	mov    QWORD PTR [rsp+0x28],rax
   10001882c:	mov    QWORD PTR [rsp+0x20],rbp
   100018831:	mov    ebx,ebp
   100018833:	mov    rcx,QWORD PTR [rdi]
   100018836:	call   QWORD PTR [rip+0xfffffffffffe8864]        # 0x1000010a0
   10001883c:	mov    rsi,rax
   10001883f:	test   rax,rax
   100018842:	je     0x100018859
   100018844:	lea    rdx,[rip+0xfffffffffffeafe5]        # 0x100003830
   10001884b:	mov    rcx,rax
   10001884e:	call   QWORD PTR [rip+0xfffffffffffe89f4]        # 0x100001248
   100018854:	test   rax,rax
   100018857:	jne    0x1000188bd
   100018859:	inc    ebx
   10001885b:	add    rdi,0x8
   10001885f:	cmp    ebx,0x2
   100018862:	jb     0x100018833
   100018864:	xor    edx,edx
   100018866:	lea    ecx,[rdx+0x8]
   100018869:	call   QWORD PTR [rip+0xfffffffffffe8859]        # 0x1000010c8
   10001886f:	mov    rbx,rax
   100018872:	cmp    rax,0xffffffffffffffff
   100018876:	je     0x1000188d0
   100018878:	lea    rdx,[rsp+0x30]
   10001887d:	mov    rcx,rax
   100018880:	mov    DWORD PTR [rsp+0x30],0x438
   100018888:	call   QWORD PTR [rip+0xfffffffffffe8a4a]        # 0x1000012d8
   10001888e:	test   eax,eax
   100018890:	je     0x1000188c7
   100018892:	mov    rcx,QWORD PTR [rsp+0x58]
   100018897:	lea    rdx,[rip+0xfffffffffffeaf92]        # 0x100003830
   10001889e:	call   QWORD PTR [rip+0xfffffffffffe89a4]        # 0x100001248
   1000188a4:	test   rax,rax
   1000188a7:	jne    0x1000188c2
   1000188a9:	lea    rdx,[rsp+0x30]
   1000188ae:	mov    rcx,rbx
   1000188b1:	call   QWORD PTR [rip+0xfffffffffffe8a21]        # 0x1000012d8
   1000188b7:	test   eax,eax
   1000188b9:	jne    0x100018892
   1000188bb:	jmp    0x1000188c7
   1000188bd:	mov    rax,rsi
   1000188c0:	jmp    0x1000188d3
   1000188c2:	mov    rbp,QWORD PTR [rsp+0x58]
   1000188c7:	mov    rcx,rbx
   1000188ca:	call   QWORD PTR [rip+0xfffffffffffe8858]        # 0x100001128
   1000188d0:	mov    rax,rbp
   1000188d3:	mov    rcx,QWORD PTR [rsp+0x470]
   1000188db:	xor    rcx,rsp
   1000188de:	call   0x100002610
   1000188e3:	lea    r11,[rsp+0x480]
   1000188eb:	mov    rbx,QWORD PTR [r11+0x10]
   1000188ef:	mov    rbp,QWORD PTR [r11+0x18]
   1000188f3:	mov    rsi,QWORD PTR [r11+0x20]
   1000188f7:	mov    rsp,r11
   1000188fa:	pop    rdi
   1000188fb:	ret    
   1000188fc:	nop
   1000188fd:	nop
   1000188fe:	nop
   1000188ff:	nop
   100018900:	js     0x100018902
   100018902:	add    BYTE PTR gs:[rsi],ch
   100018905:	add    BYTE PTR [rax+rax*1+0x6c],ah
   100018909:	add    BYTE PTR [rax+rax*1+0x0],ch
   10001890d:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100018913:	nop
   100018914:	nop
   100018915:	nop
   100018916:	nop
   100018917:	nop
   100018918:	nop
   100018919:	nop
   10001891a:	nop
   10001891b:	nop
   10001891c:	nop
   10001891d:	nop
   10001891e:	nop
   10001891f:	nop
   100018920:	sub    rsp,0x28
   100018924:	nop    WORD PTR [rax+rax*1]
   100018929:	mov    edx,DWORD PTR [rip+0x13c35]        # 0x10002c564
   10001892f:	lea    ecx,[rdx-0x1]
   100018932:	test   edx,edx
   100018934:	js     0x100018948
   100018936:	or     ecx,0x80000000
   10001893c:	mov    eax,edx
   10001893e:	lock cmpxchg DWORD PTR [rip+0x13c1e],ecx        # 0x10002c564
   100018946:	mov    ecx,eax
   100018948:	pause  
   10001894a:	cmp    ecx,edx
   10001894c:	jne    0x100018929
   10001894e:	cmp    ecx,0x1
   100018951:	jne    0x1000189cb
   100018953:	lea    rcx,[rip+0x14436]        # 0x10002cd90
   10001895a:	lea    rdx,[rip+0xaf]        # 0x100018a10
   100018961:	mov    r8d,0x1b8
   100018967:	call   0x10001f75c
   10001896c:	lea    rcx,[rip+0x1427d]        # 0x10002cbf0
   100018973:	lea    rdx,[rip+0x256]        # 0x100018bd0
   10001897a:	mov    r8d,0x1a0
   100018980:	call   0x10001f75c
   100018985:	mov    rax,QWORD PTR [rip+0x64]        # 0x1000189f0
   10001898c:	mov    r11,QWORD PTR [rip+0x55]        # 0x1000189e8
   100018993:	mov    QWORD PTR [rip+0x13bd6],rax        # 0x10002c570
   10001899a:	mov    rax,QWORD PTR [rip+0x57]        # 0x1000189f8
   1000189a1:	mov    QWORD PTR [rip+0x13bc0],r11        # 0x10002c568
   1000189a8:	mov    QWORD PTR [rip+0x13bc9],rax        # 0x10002c578
   1000189af:	mov    rax,QWORD PTR [rip+0x4a]        # 0x100018a00
   1000189b6:	mov    QWORD PTR [rip+0x13bc3],rax        # 0x10002c580
   1000189bd:	mov    rax,QWORD PTR [rip+0x44]        # 0x100018a08
   1000189c4:	mov    QWORD PTR [rip+0x13bbd],rax        # 0x10002c588
   1000189cb:	mov    eax,DWORD PTR [rip+0x13b93]        # 0x10002c564
   1000189d1:	mov    ecx,eax
   1000189d3:	btr    ecx,0x1f
   1000189d7:	lock cmpxchg DWORD PTR [rip+0x13b85],ecx        # 0x10002c564
   1000189df:	pause  
   1000189e1:	jne    0x1000189cb
   1000189e3:	add    rsp,0x28
   1000189e7:	ret    
	...
   100018bc8:	nop
   100018bc9:	nop
   100018bca:	nop
   100018bcb:	nop
   100018bcc:	nop
   100018bcd:	nop
   100018bce:	nop
   100018bcf:	nop
	...
   100018d70:	nop
   100018d71:	nop
   100018d72:	nop
   100018d73:	nop
   100018d74:	nop
   100018d75:	nop
   100018d76:	nop
   100018d77:	nop
   100018d78:	sub    rsp,0x38
   100018d7c:	lea    rcx,[rip+0x805]        # 0x100019588
   100018d83:	call   0x1000194a0
   100018d88:	mov    r11d,DWORD PTR [rip+0x1116d]        # 0x100029efc
   100018d8f:	mov    r9d,DWORD PTR [rip+0x11162]        # 0x100029ef8
   100018d96:	lea    rax,[rip+0x1114f]        # 0x100029eec
   100018d9d:	lea    r8,[rip+0x11134]        # 0x100029ed8
   100018da4:	lea    rdx,[rip+0x11135]        # 0x100029ee0
   100018dab:	lea    rcx,[rip+0x1111e]        # 0x100029ed0
   100018db2:	mov    DWORD PTR [rip+0x11133],r11d        # 0x100029eec
   100018db9:	mov    QWORD PTR [rsp+0x20],rax
   100018dbe:	call   QWORD PTR [rip+0xfffffffffffe85d4]        # 0x100001398
   100018dc4:	mov    DWORD PTR [rip+0x1111e],eax        # 0x100029ee8
   100018dca:	test   eax,eax
   100018dcc:	jns    0x100018dd8
   100018dce:	mov    ecx,0x8
   100018dd3:	call   0x100019528
   100018dd8:	add    rsp,0x38
   100018ddc:	ret    
   100018ddd:	nop
   100018dde:	nop
   100018ddf:	nop
   100018de0:	nop
   100018de1:	nop
   100018de2:	nop
   100018de3:	nop
   100018de4:	mov    QWORD PTR [rsp+0x8],rbx
   100018de9:	push   rdi
   100018dea:	sub    rsp,0x20
   100018dee:	mov    rax,QWORD PTR gs:0x30
   100018df7:	mov    rbx,QWORD PTR [rax+0x8]
   100018dfb:	xor    edi,edi
   100018dfd:	xor    eax,eax
   100018dff:	lock cmpxchg QWORD PTR [rip+0x1fe30],rbx        # 0x100038c38
   100018e08:	je     0x100018e25
   100018e0a:	cmp    rax,rbx
   100018e0d:	jne    0x100018e18
   100018e0f:	mov    ebx,0x1
   100018e14:	mov    edi,ebx
   100018e16:	jmp    0x100018e2a
   100018e18:	mov    ecx,0x3e8
   100018e1d:	call   QWORD PTR [rip+0xfffffffffffe835d]        # 0x100001180
   100018e23:	jmp    0x100018dfd
   100018e25:	mov    ebx,0x1
   100018e2a:	mov    eax,DWORD PTR [rip+0x1fe00]        # 0x100038c30
   100018e30:	cmp    eax,ebx
   100018e32:	jne    0x100018e40
   100018e34:	mov    ecx,0x1f
   100018e39:	call   0x100019528
   100018e3e:	jmp    0x100018e77
   100018e40:	mov    eax,DWORD PTR [rip+0x1fdea]        # 0x100038c30
   100018e46:	test   eax,eax
   100018e48:	jne    0x100018e71
   100018e4a:	mov    DWORD PTR [rip+0x1fde0],ebx        # 0x100038c30
   100018e50:	lea    rdx,[rip+0x389]        # 0x1000191e0
   100018e57:	lea    rcx,[rip+0x36a]        # 0x1000191c8
   100018e5e:	call   0x1000196d4
   100018e63:	test   eax,eax
   100018e65:	je     0x100018e77
   100018e67:	mov    eax,0xff
   100018e6c:	jmp    0x100018f59
   100018e71:	mov    DWORD PTR [rip+0x1107d],ebx        # 0x100029ef4
   100018e77:	mov    eax,DWORD PTR [rip+0x1fdb3]        # 0x100038c30
   100018e7d:	cmp    eax,ebx
   100018e7f:	jne    0x100018e9e
   100018e81:	lea    rdx,[rip+0x338]        # 0x1000191c0
   100018e88:	lea    rcx,[rip+0xd9]        # 0x100018f68
   100018e8f:	call   0x1000196c8
   100018e94:	mov    DWORD PTR [rip+0x1fd92],0x2        # 0x100038c30
   100018e9e:	test   edi,edi
   100018ea0:	jne    0x100018eab
   100018ea2:	xor    eax,eax
   100018ea4:	xchg   QWORD PTR [rip+0x1fd8d],rax        # 0x100038c38
   100018eab:	cmp    QWORD PTR [rip+0x1fd9d],0x0        # 0x100038c50
   100018eb3:	je     0x100018ed4
   100018eb5:	lea    rcx,[rip+0x1fd94]        # 0x100038c50
   100018ebc:	call   0x100019680
   100018ec1:	test   eax,eax
   100018ec3:	je     0x100018ed4
   100018ec5:	xor    r8d,r8d
   100018ec8:	lea    edx,[r8+0x2]
   100018ecc:	xor    ecx,ecx
   100018ece:	call   QWORD PTR [rip+0x1fd7c]        # 0x100038c50
   100018ed4:	mov    rcx,QWORD PTR [rip+0xfffffffffffe848d]        # 0x100001368
   100018edb:	mov    rax,QWORD PTR [rip+0x10ff6]        # 0x100029ed8
   100018ee2:	mov    QWORD PTR [rcx],rax
   100018ee5:	mov    r8,QWORD PTR [rip+0x10fec]        # 0x100029ed8
   100018eec:	mov    rdx,QWORD PTR [rip+0x10fed]        # 0x100029ee0
   100018ef3:	mov    ecx,DWORD PTR [rip+0x10fd7]        # 0x100029ed0
   100018ef9:	call   0x100003cf0
   100018efe:	mov    DWORD PTR [rip+0x10fec],eax        # 0x100029ef0
   100018f04:	cmp    DWORD PTR [rip+0x10fc9],0x0        # 0x100029ed4
   100018f0b:	jne    0x100018f15
   100018f0d:	mov    ecx,eax
   100018f0f:	call   QWORD PTR [rip+0xfffffffffffe845b]        # 0x100001370
   100018f15:	cmp    DWORD PTR [rip+0x10fd8],0x0        # 0x100029ef4
   100018f1c:	jne    0x100018f2a
   100018f1e:	call   QWORD PTR [rip+0xfffffffffffe8454]        # 0x100001378
   100018f24:	mov    eax,DWORD PTR [rip+0x10fc6]        # 0x100029ef0
   100018f2a:	jmp    0x100018f59
   100018f2c:	mov    DWORD PTR [rip+0x10fbe],eax        # 0x100029ef0
   100018f32:	cmp    DWORD PTR [rip+0x10f9b],0x0        # 0x100029ed4
   100018f39:	jne    0x100018f44
   100018f3b:	mov    ecx,eax
   100018f3d:	call   QWORD PTR [rip+0xfffffffffffe843d]        # 0x100001380
   100018f43:	int3   
   100018f44:	cmp    DWORD PTR [rip+0x10fa9],0x0        # 0x100029ef4
   100018f4b:	jne    0x100018f59
   100018f4d:	call   QWORD PTR [rip+0xfffffffffffe8425]        # 0x100001378
   100018f53:	mov    eax,DWORD PTR [rip+0x10f97]        # 0x100029ef0
   100018f59:	mov    rbx,QWORD PTR [rsp+0x30]
   100018f5e:	add    rsp,0x20
   100018f62:	pop    rdi
   100018f63:	ret    
   100018f64:	nop
   100018f65:	nop
   100018f66:	nop
   100018f67:	nop
	...
   100018f70:	js     0x100018eff
   100018f72:	add    DWORD PTR [rax],eax
   100018f74:	add    DWORD PTR [rax],eax
   100018f76:	add    BYTE PTR [rax],al
   100018f78:	rcr    BYTE PTR [rbx],1
   100018f7a:	add    al,BYTE PTR [rax]
   100018f7c:	add    DWORD PTR [rax],eax
   100018f7e:	add    BYTE PTR [rax],al
   100018f80:	lock sbb eax,DWORD PTR [rdx]
   100018f83:	add    BYTE PTR [rcx],al
   100018f85:	add    BYTE PTR [rax],al
   100018f87:	add    al,ah
   100018f89:	sbb    al,BYTE PTR [rdx]
   100018f8b:	add    BYTE PTR [rcx],al
   100018f8d:	add    BYTE PTR [rax],al
   100018f8f:	add    BYTE PTR [rax+0x1000213],al
   100018f95:	add    BYTE PTR [rax],al
   100018f97:	add    al,dl
   100018f99:	adc    eax,DWORD PTR [rdx]
   100018f9b:	add    BYTE PTR [rcx],al
   100018f9d:	add    BYTE PTR [rax],al
   100018f9f:	add    BYTE PTR [rax],ah
   100018fa1:	adc    al,0x2
   100018fa3:	add    BYTE PTR [rcx],al
   100018fa5:	add    BYTE PTR [rax],al
   100018fa7:	add    BYTE PTR [rax],ah
   100018fa9:	sbb    eax,0x10002
   100018fae:	add    BYTE PTR [rax],al
   100018fb0:	ror    BYTE PTR [rdx+rax*1],0x0
   100018fb4:	add    DWORD PTR [rax],eax
   100018fb6:	add    BYTE PTR [rax],al
   100018fb8:	and    BYTE PTR [rip+0x10002],cl        # 0x100028fc0
   100018fbe:	add    BYTE PTR [rax],al
   100018fc0:	loopne 0x100018fcf
   100018fc2:	add    al,BYTE PTR [rax]
   100018fc4:	add    DWORD PTR [rax],eax
   100018fc6:	add    BYTE PTR [rax],al
   100018fc8:	and    BYTE PTR [rsi],cl
   100018fca:	add    al,BYTE PTR [rax]
   100018fcc:	add    DWORD PTR [rax],eax
   100018fce:	add    BYTE PTR [rax],al
   100018fd0:	(bad)  
   100018fd1:	(bad)  
   100018fd2:	add    al,BYTE PTR [rax]
   100018fd4:	add    DWORD PTR [rax],eax
   100018fd6:	add    BYTE PTR [rax],al
   100018fd8:	nop
   100018fd9:	(bad)  
   100018fda:	add    al,BYTE PTR [rax]
   100018fdc:	add    DWORD PTR [rax],eax
   100018fde:	add    BYTE PTR [rax],al
   100018fe0:	ror    BYTE PTR [rsi],0x2
   100018fe3:	add    BYTE PTR [rcx],al
   100018fe5:	add    BYTE PTR [rax],al
   100018fe7:	add    al,dh
   100018fe9:	(bad)  
   100018fea:	add    al,BYTE PTR [rax]
   100018fec:	add    DWORD PTR [rax],eax
   100018fee:	add    BYTE PTR [rax],al
   100018ff0:	and    BYTE PTR [rdi],cl
   100018ff2:	add    al,BYTE PTR [rax]
   100018ff4:	add    DWORD PTR [rax],eax
   100018ff6:	add    BYTE PTR [rax],al
   100018ff8:	(bad)  
   100018ff9:	lar    eax,WORD PTR [rax]
   100018ffc:	add    DWORD PTR [rax],eax
   100018ffe:	add    BYTE PTR [rax],al
   100019000:	nop
   100019001:	lar    eax,WORD PTR [rax]
   100019004:	add    DWORD PTR [rax],eax
   100019006:	add    BYTE PTR [rax],al
   100019008:	ror    BYTE PTR [rdi],0x2
   10001900b:	add    BYTE PTR [rcx],al
   10001900d:	add    BYTE PTR [rax],al
   10001900f:	add    al,dh
   100019011:	lar    eax,WORD PTR [rax]
   100019014:	add    DWORD PTR [rax],eax
   100019016:	add    BYTE PTR [rax],al
   100019018:	xor    BYTE PTR [rax],dl
   10001901a:	add    al,BYTE PTR [rax]
   10001901c:	add    DWORD PTR [rax],eax
   10001901e:	add    BYTE PTR [rax],al
   100019020:	(bad)  
   100019021:	adc    BYTE PTR [rdx],al
   100019023:	add    BYTE PTR [rcx],al
   100019025:	add    BYTE PTR [rax],al
   100019027:	add    BYTE PTR [rax+0x1000210],dl
   10001902d:	add    BYTE PTR [rax],al
   10001902f:	add    BYTE PTR [rax],dl
   100019031:	adc    DWORD PTR [rdx],eax
   100019033:	add    BYTE PTR [rcx],al
   100019035:	add    BYTE PTR [rax],al
   100019037:	add    BYTE PTR [rax+0x1000211],dl
   10001903d:	add    BYTE PTR [rax],al
   10001903f:	add    al,dl
   100019041:	adc    DWORD PTR [rdx],eax
   100019043:	add    BYTE PTR [rcx],al
   100019045:	add    BYTE PTR [rax],al
   100019047:	add    BYTE PTR [rax],dl
   100019049:	adc    al,BYTE PTR [rdx]
   10001904b:	add    BYTE PTR [rcx],al
   10001904d:	add    BYTE PTR [rax],al
   10001904f:	add    BYTE PTR [rax+0x12],dl
   100019052:	add    al,BYTE PTR [rax]
   100019054:	add    DWORD PTR [rax],eax
   100019056:	add    BYTE PTR [rax],al
   100019058:	jo     0x10001906c
   10001905a:	add    al,BYTE PTR [rax]
   10001905c:	add    DWORD PTR [rax],eax
   10001905e:	add    BYTE PTR [rax],al
   100019060:	mov    al,0x12
   100019062:	add    al,BYTE PTR [rax]
   100019064:	add    DWORD PTR [rax],eax
   100019066:	add    BYTE PTR [rax],al
   100019068:	lock adc al,BYTE PTR [rdx]
   10001906b:	add    BYTE PTR [rcx],al
   10001906d:	add    BYTE PTR [rax],al
   10001906f:	add    BYTE PTR [rax],dh
   100019071:	adc    eax,DWORD PTR [rdx]
   100019073:	add    BYTE PTR [rcx],al
   100019075:	add    BYTE PTR [rax],al
   100019077:	add    BYTE PTR [rax+0x13],ah
   10001907a:	add    al,BYTE PTR [rax]
   10001907c:	add    DWORD PTR [rax],eax
   10001907e:	add    BYTE PTR [rax],al
   100019080:	adc    al,0x2
   100019083:	add    BYTE PTR [rcx],al
   100019085:	add    BYTE PTR [rax],al
   100019087:	add    BYTE PTR [rax+0x1000214],al
   10001908d:	add    BYTE PTR [rax],al
   10001908f:	add    al,al
   100019091:	adc    al,0x2
   100019093:	add    BYTE PTR [rcx],al
   100019095:	add    BYTE PTR [rax],al
   100019097:	add    BYTE PTR [rax],al
   100019099:	adc    eax,0x10002
   10001909e:	add    BYTE PTR [rax],al
   1000190a0:	and    BYTE PTR [rip+0x10002],dl        # 0x1000290a8
   1000190a6:	add    BYTE PTR [rax],al
   1000190a8:	(bad)  
   1000190a9:	adc    eax,0x10002
   1000190ae:	add    BYTE PTR [rax],al
   1000190b0:	movabs al,ds:0xe000000001000215
   1000190b9:	adc    eax,0x10002
   1000190be:	add    BYTE PTR [rax],al
   1000190c0:	add    BYTE PTR [rsi],dl
   1000190c2:	add    al,BYTE PTR [rax]
   1000190c4:	add    DWORD PTR [rax],eax
   1000190c6:	add    BYTE PTR [rax],al
   1000190c8:	rex (bad) 
   1000190ca:	add    al,BYTE PTR [rax]
   1000190cc:	add    DWORD PTR [rax],eax
   1000190ce:	add    BYTE PTR [rax],al
   1000190d0:	adc    BYTE PTR [rsi],0x2
   1000190d3:	add    BYTE PTR [rcx],al
   1000190d5:	add    BYTE PTR [rax],al
   1000190d7:	add    al,al
   1000190d9:	(bad)  
   1000190da:	add    al,BYTE PTR [rax]
   1000190dc:	add    DWORD PTR [rax],eax
   1000190de:	add    BYTE PTR [rax],al
   1000190e0:	lock (bad) 
   1000190e2:	add    al,BYTE PTR [rax]
   1000190e4:	add    DWORD PTR [rax],eax
   1000190e6:	add    BYTE PTR [rax],al
   1000190e8:	xor    BYTE PTR [rdi],dl
   1000190ea:	add    al,BYTE PTR [rax]
   1000190ec:	add    DWORD PTR [rax],eax
   1000190ee:	add    BYTE PTR [rax],al
   1000190f0:	jo     0x100019109
   1000190f2:	add    al,BYTE PTR [rax]
   1000190f4:	add    DWORD PTR [rax],eax
   1000190f6:	add    BYTE PTR [rax],al
   1000190f8:	mov    al,0x17
   1000190fa:	add    al,BYTE PTR [rax]
   1000190fc:	add    DWORD PTR [rax],eax
   1000190fe:	add    BYTE PTR [rax],al
   100019100:	rcl    BYTE PTR [rdi],1
   100019102:	add    al,BYTE PTR [rax]
   100019104:	add    DWORD PTR [rax],eax
   100019106:	add    BYTE PTR [rax],al
   100019108:	adc    BYTE PTR [rax],bl
   10001910a:	add    al,BYTE PTR [rax]
   10001910c:	add    DWORD PTR [rax],eax
   10001910e:	add    BYTE PTR [rax],al
   100019110:	push   rax
   100019111:	sbb    BYTE PTR [rdx],al
   100019113:	add    BYTE PTR [rcx],al
   100019115:	add    BYTE PTR [rax],al
   100019117:	add    BYTE PTR [rax+0x1000218],dl
   10001911d:	add    BYTE PTR [rax],al
   10001911f:	add    BYTE PTR [rax+0x1000218],dh
   100019125:	add    BYTE PTR [rax],al
   100019127:	add    al,dh
   100019129:	sbb    BYTE PTR [rdx],al
   10001912b:	add    BYTE PTR [rcx],al
   10001912d:	add    BYTE PTR [rax],al
   10001912f:	add    BYTE PTR [rax],dh
   100019131:	sbb    DWORD PTR [rdx],eax
   100019133:	add    BYTE PTR [rcx],al
   100019135:	add    BYTE PTR [rax],al
   100019137:	add    BYTE PTR [rax+0x19],dh
   10001913a:	add    al,BYTE PTR [rax]
   10001913c:	add    DWORD PTR [rax],eax
   10001913e:	add    BYTE PTR [rax],al
   100019140:	nop
   100019141:	sbb    DWORD PTR [rdx],eax
   100019143:	add    BYTE PTR [rcx],al
   100019145:	add    BYTE PTR [rax],al
   100019147:	add    al,al
   100019149:	sbb    DWORD PTR [rdx],eax
   10001914b:	add    BYTE PTR [rcx],al
   10001914d:	add    BYTE PTR [rax],al
   10001914f:	add    al,dh
   100019151:	sbb    DWORD PTR [rdx],eax
   100019153:	add    BYTE PTR [rcx],al
   100019155:	add    BYTE PTR [rax],al
   100019157:	add    BYTE PTR [rax],ah
   100019159:	sbb    al,BYTE PTR [rdx]
   10001915b:	add    BYTE PTR [rcx],al
   10001915d:	add    BYTE PTR [rax],al
   10001915f:	add    BYTE PTR [rax+0x1a],dl
   100019162:	add    al,BYTE PTR [rax]
   100019164:	add    DWORD PTR [rax],eax
   100019166:	add    BYTE PTR [rax],al
   100019168:	sbb    BYTE PTR [rdx],0x2
   10001916b:	add    BYTE PTR [rcx],al
   10001916d:	add    BYTE PTR [rax],al
   10001916f:	add    BYTE PTR [rax+0x100021a],dh
   100019175:	add    BYTE PTR [rax],al
   100019177:	add    al,dh
   100019179:	sbb    al,BYTE PTR [rdx]
   10001917b:	add    BYTE PTR [rcx],al
   10001917d:	add    BYTE PTR [rax],al
   10001917f:	add    BYTE PTR [rax],dh
   100019181:	sbb    eax,DWORD PTR [rdx]
   100019183:	add    BYTE PTR [rcx],al
   100019185:	add    BYTE PTR [rax],al
   100019187:	add    BYTE PTR [rax+0x1b],dh
   10001918a:	add    al,BYTE PTR [rax]
   10001918c:	add    DWORD PTR [rax],eax
   10001918e:	add    BYTE PTR [rax],al
   100019190:	mov    al,0x1b
   100019192:	add    al,BYTE PTR [rax]
   100019194:	add    DWORD PTR [rax],eax
   100019196:	add    BYTE PTR [rax],al
   100019198:	adc    BYTE PTR [rdx+rax*1],bl
   10001919b:	add    BYTE PTR [rcx],al
   10001919d:	add    BYTE PTR [rax],al
   10001919f:	add    BYTE PTR [rax+0x1c],al
   1000191a2:	add    al,BYTE PTR [rax]
   1000191a4:	add    DWORD PTR [rax],eax
   1000191a6:	add    BYTE PTR [rax],al
   1000191a8:	(bad)  
   1000191a9:	sbb    al,0x2
   1000191ab:	add    BYTE PTR [rcx],al
   1000191ad:	add    BYTE PTR [rax],al
   1000191af:	add    BYTE PTR [rax+0x100021c],ah
   1000191b5:	add    BYTE PTR [rax],al
   1000191b7:	add    al,ah
   1000191b9:	sbb    al,0x2
   1000191bb:	add    BYTE PTR [rcx],al
	...
   1000191cd:	add    BYTE PTR [rax],al
   1000191cf:	add    al,dh
   1000191d1:	xchg   ecx,eax
   1000191d2:	add    DWORD PTR [rax],eax
   1000191d4:	add    DWORD PTR [rax],eax
   1000191d6:	add    BYTE PTR [rax],al
   1000191d8:	or     BYTE PTR [rbp+0x10001],dl
	...
   1000191e6:	add    BYTE PTR [rax],al
   1000191e8:	nop
   1000191e9:	nop
   1000191ea:	nop
   1000191eb:	nop
   1000191ec:	nop
   1000191ed:	nop
   1000191ee:	nop
   1000191ef:	nop
   1000191f0:	sub    rsp,0x28
   1000191f4:	mov    eax,0x5a4d
   1000191f9:	cmp    WORD PTR [rip+0xfffffffffffe6e00],ax        # 0x100000000
   100019200:	je     0x100019206
   100019202:	xor    ecx,ecx
   100019204:	jmp    0x10001923e
   100019206:	movsxd rax,DWORD PTR [rip+0xfffffffffffe6e2f]        # 0x10000003c
   10001920d:	lea    rcx,[rip+0xfffffffffffe6dec]        # 0x100000000
   100019214:	add    rax,rcx
   100019217:	cmp    DWORD PTR [rax],0x4550
   10001921d:	jne    0x100019202
   10001921f:	mov    ecx,0x20b
   100019224:	cmp    WORD PTR [rax+0x18],cx
   100019228:	jne    0x100019202
   10001922a:	xor    ecx,ecx
   10001922c:	cmp    DWORD PTR [rax+0x84],0xe
   100019233:	jbe    0x10001923e
   100019235:	cmp    DWORD PTR [rax+0xf8],ecx
   10001923b:	setne  cl
   10001923e:	mov    DWORD PTR [rip+0x10c90],ecx        # 0x100029ed4
   100019244:	mov    ecx,0x1
   100019249:	call   QWORD PTR [rip+0xfffffffffffe80e9]        # 0x100001338
   10001924f:	or     rcx,0xffffffffffffffff
   100019253:	call   QWORD PTR [rip+0xfffffffffffe7f67]        # 0x1000011c0
   100019259:	mov    rcx,QWORD PTR [rip+0xfffffffffffe80e0]        # 0x100001340
   100019260:	mov    QWORD PTR [rip+0x1f9d9],rax        # 0x100038c40
   100019267:	mov    QWORD PTR [rip+0x1f9da],rax        # 0x100038c48
   10001926e:	mov    eax,DWORD PTR [rip+0x10c90]        # 0x100029f04
   100019274:	mov    DWORD PTR [rcx],eax
   100019276:	mov    rdx,QWORD PTR [rip+0xfffffffffffe8213]        # 0x100001490
   10001927d:	mov    eax,DWORD PTR [rip+0x10c7d]        # 0x100029f00
   100019283:	mov    DWORD PTR [rdx],eax
   100019285:	call   0x100019534
   10001928a:	call   0x1000196ec
   10001928f:	cmp    DWORD PTR [rip+0xff8e],0x0        # 0x100029224
   100019296:	jne    0x1000192a5
   100019298:	lea    rcx,[rip+0x441]        # 0x1000196e0
   10001929f:	call   QWORD PTR [rip+0xfffffffffffe80a3]        # 0x100001348
   1000192a5:	cmp    DWORD PTR [rip+0xff74],0xffffffff        # 0x100029220
   1000192ac:	jne    0x1000192b7
   1000192ae:	or     ecx,0xffffffff
   1000192b1:	call   QWORD PTR [rip+0xfffffffffffe8099]        # 0x100001350
   1000192b7:	xor    eax,eax
   1000192b9:	add    rsp,0x28
   1000192bd:	ret    
   1000192be:	nop
   1000192bf:	nop
   1000192c0:	nop
   1000192c1:	nop
   1000192c2:	nop
   1000192c3:	nop
   1000192c4:	nop
   1000192c5:	nop
   1000192c6:	nop
   1000192c7:	nop
   1000192c8:	nop
   1000192c9:	nop
   1000192ca:	nop
   1000192cb:	nop
   1000192cc:	nop
   1000192cd:	nop
   1000192ce:	nop
   1000192cf:	nop
   1000192d0:	sub    rsp,0x28
   1000192d4:	call   0x1000196f8
   1000192d9:	add    rsp,0x28
   1000192dd:	jmp    0x100018de4
   1000192e2:	nop
   1000192e3:	nop
   1000192e4:	nop
   1000192e5:	nop
   1000192e6:	nop
   1000192e7:	nop
   1000192e8:	mov    QWORD PTR [rsp+0x8],rbx
   1000192ed:	mov    QWORD PTR [rsp+0x10],rsi
   1000192f2:	push   rdi
   1000192f3:	sub    rsp,0x20
   1000192f7:	mov    esi,edx
   1000192f9:	mov    rbx,rcx
   1000192fc:	test   dl,0x2
   1000192ff:	je     0x10001932b
   100019301:	mov    r8d,DWORD PTR [rcx-0x8]
   100019305:	lea    r9,[rip+0x58c]        # 0x100019898
   10001930c:	mov    edx,0x18
   100019311:	call   0x100019804
   100019316:	test   sil,0x1
   10001931a:	je     0x100019325
   10001931c:	lea    rcx,[rbx-0x8]
   100019320:	call   0x100003920
   100019325:	lea    rax,[rbx-0x8]
   100019329:	jmp    0x100019341
   10001932b:	call   0x100019898
   100019330:	test   sil,0x1
   100019334:	je     0x10001933e
   100019336:	mov    rcx,rbx
   100019339:	call   0x100003920
   10001933e:	mov    rax,rbx
   100019341:	mov    rbx,QWORD PTR [rsp+0x30]
   100019346:	mov    rsi,QWORD PTR [rsp+0x38]
   10001934b:	add    rsp,0x20
   10001934f:	pop    rdi
   100019350:	ret    
   100019351:	nop
   100019352:	nop
   100019353:	nop
   100019354:	nop
   100019355:	nop
   100019356:	nop
   100019357:	nop
   100019358:	push   0x1000193
   10001935d:	add    BYTE PTR [rax],al
   10001935f:	add    al,ch
   100019361:	xchg   edx,eax
   100019362:	add    DWORD PTR [rax],eax
   100019364:	add    DWORD PTR [rax],eax
   100019366:	add    BYTE PTR [rax],al
   100019368:	add    DWORD PTR [rax],eax
	...
   100019372:	add    BYTE PTR [rax],al
   100019374:	add    BYTE PTR [rdx-0x6c6ffffe],dl
   10001937a:	add    DWORD PTR [rax],eax
   10001937c:	push   0x193
	...
   100019389:	add    BYTE PTR [rax],al
   10001938b:	add    BYTE PTR [rax+0x909090],dl
   100019391:	add    BYTE PTR [rax],al
   100019393:	add    BYTE PTR [rax],al
   100019395:	add    BYTE PTR [rax],al
   100019397:	add    BYTE PTR [rcx],al
   100019399:	add    BYTE PTR [rax],al
   10001939b:	add    BYTE PTR [rax+0x193],ch
   1000193a1:	add    BYTE PTR [rax],al
   1000193a3:	add    BYTE PTR [rax-0x476f6f70],dl
   1000193a9:	xchg   ebx,eax
   1000193aa:	add    DWORD PTR [rax],eax
	...
   1000193b4:	nop
   1000193b5:	nop
   1000193b6:	nop
   1000193b7:	nop
   1000193b8:	add    BYTE PTR [rdx+0x2],dl
   1000193be:	add    BYTE PTR [rax],al
   1000193c0:	add    BYTE PTR [rax],al
   1000193c2:	add    BYTE PTR [rax],al
   1000193c4:	(bad)  
   1000193c5:	(bad)  
   1000193c6:	(bad)  
   1000193c7:	inc    DWORD PTR [rax]
   1000193c9:	add    BYTE PTR [rax],al
   1000193cb:	add    BYTE PTR [rax+0x0],al
   1000193ce:	add    BYTE PTR [rax],al
   1000193d0:	nop
   1000193d1:	xchg   ebx,eax
   1000193d2:	add    DWORD PTR [rax],eax
	...
   1000193dc:	nop
   1000193dd:	nop
   1000193de:	nop
   1000193df:	nop
   1000193e0:	nop
   1000193e1:	nop
   1000193e2:	nop
   1000193e3:	nop
   1000193e4:	push   rbx
   1000193e6:	sub    rsp,0x20
   1000193ea:	mov    rbx,rcx
   1000193ed:	mov    rcx,QWORD PTR [rip+0x1f854]        # 0x100038c48
   1000193f4:	call   QWORD PTR [rip+0xfffffffffffe7dce]        # 0x1000011c8
   1000193fa:	mov    QWORD PTR [rsp+0x38],rax
   1000193ff:	cmp    rax,0xffffffffffffffff
   100019403:	jne    0x100019410
   100019405:	mov    rcx,rbx
   100019408:	call   QWORD PTR [rip+0xfffffffffffe7f0a]        # 0x100001318
   10001940e:	jmp    0x10001948e
   100019410:	mov    ecx,0x8
   100019415:	call   0x100019880
   10001941a:	nop
   10001941b:	mov    rcx,QWORD PTR [rip+0x1f826]        # 0x100038c48
   100019422:	call   QWORD PTR [rip+0xfffffffffffe7da0]        # 0x1000011c8
   100019428:	mov    QWORD PTR [rsp+0x38],rax
   10001942d:	mov    rcx,QWORD PTR [rip+0x1f80c]        # 0x100038c40
   100019434:	call   QWORD PTR [rip+0xfffffffffffe7d8e]        # 0x1000011c8
   10001943a:	mov    QWORD PTR [rsp+0x40],rax
   10001943f:	mov    rcx,rbx
   100019442:	call   QWORD PTR [rip+0xfffffffffffe7d78]        # 0x1000011c0
   100019448:	mov    rcx,rax
   10001944b:	lea    r8,[rsp+0x40]
   100019450:	lea    rdx,[rsp+0x38]
   100019455:	call   0x100019874
   10001945a:	mov    rbx,rax
   10001945d:	mov    rcx,QWORD PTR [rsp+0x38]
   100019462:	call   QWORD PTR [rip+0xfffffffffffe7d58]        # 0x1000011c0
   100019468:	mov    QWORD PTR [rip+0x1f7d9],rax        # 0x100038c48
   10001946f:	mov    rcx,QWORD PTR [rsp+0x40]
   100019474:	call   QWORD PTR [rip+0xfffffffffffe7d46]        # 0x1000011c0
   10001947a:	mov    QWORD PTR [rip+0x1f7bf],rax        # 0x100038c40
   100019481:	mov    ecx,0x8
   100019486:	call   0x100019868
   10001948b:	mov    rax,rbx
   10001948e:	add    rsp,0x20
   100019492:	pop    rbx
   100019493:	ret    
   100019494:	nop
   100019495:	nop
   100019496:	nop
   100019497:	nop
   100019498:	nop
   100019499:	nop
   10001949a:	nop
   10001949b:	nop
   10001949c:	nop
   10001949d:	nop
   10001949e:	nop
   10001949f:	nop
   1000194a0:	sub    rsp,0x28
   1000194a4:	call   0x1000193e4
   1000194a9:	neg    rax
   1000194ac:	sbb    eax,eax
   1000194ae:	neg    eax
   1000194b0:	dec    eax
   1000194b2:	add    rsp,0x28
   1000194b6:	ret    
   1000194b7:	nop
   1000194b8:	nop
   1000194b9:	nop
   1000194ba:	nop
   1000194bb:	nop
   1000194bc:	nop
   1000194bd:	nop
   1000194be:	nop
   1000194bf:	nop
   1000194c0:	sub    rsp,0x28
   1000194c4:	mov    rax,QWORD PTR [rcx]
   1000194c7:	cmp    DWORD PTR [rax],0xe06d7363
   1000194cd:	jne    0x1000194fa
   1000194cf:	cmp    DWORD PTR [rax+0x18],0x4
   1000194d3:	jne    0x1000194fa
   1000194d5:	mov    eax,DWORD PTR [rax+0x20]
   1000194d8:	cmp    eax,0x19930520
   1000194dd:	je     0x1000194f4
   1000194df:	cmp    eax,0x19930521
   1000194e4:	je     0x1000194f4
   1000194e6:	cmp    eax,0x19930522
   1000194eb:	je     0x1000194f4
   1000194ed:	cmp    eax,0x1994000
   1000194f2:	jne    0x1000194fa
   1000194f4:	call   0x10001988c
   1000194f9:	int3   
   1000194fa:	xor    eax,eax
   1000194fc:	add    rsp,0x28
   100019500:	ret    
   100019501:	nop
   100019502:	nop
   100019503:	nop
   100019504:	nop
   100019505:	nop
   100019506:	nop
   100019507:	nop
   100019508:	sub    rsp,0x28
   10001950c:	lea    rcx,[rip+0xffffffffffffffad]        # 0x1000194c0
   100019513:	call   QWORD PTR [rip+0xfffffffffffe7d9f]        # 0x1000012b8
   100019519:	xor    eax,eax
   10001951b:	add    rsp,0x28
   10001951f:	ret    
   100019520:	nop
   100019521:	nop
   100019522:	nop
   100019523:	nop
   100019524:	nop
   100019525:	nop
   100019526:	nop
   100019527:	nop
   100019528:	jmp    QWORD PTR [rip+0xfffffffffffe7e72]        # 0x1000013a0
   10001952e:	nop
   10001952f:	nop
   100019530:	nop
   100019531:	nop
   100019532:	nop
   100019533:	nop
   100019534:	mov    QWORD PTR [rsp+0x8],rbx
   100019539:	push   rdi
   10001953a:	sub    rsp,0x20
   10001953e:	lea    rbx,[rip+0x33]        # 0x100019578
   100019545:	lea    rdi,[rip+0x2c]        # 0x100019578
   10001954c:	jmp    0x10001955c
   10001954e:	mov    rax,QWORD PTR [rbx]
   100019551:	test   rax,rax
   100019554:	je     0x100019558
   100019556:	call   rax
   100019558:	add    rbx,0x8
   10001955c:	cmp    rbx,rdi
   10001955f:	jb     0x10001954e
   100019561:	mov    rbx,QWORD PTR [rsp+0x30]
   100019566:	add    rsp,0x20
   10001956a:	pop    rdi
   10001956b:	ret    
   10001956c:	nop
   10001956d:	nop
   10001956e:	nop
   10001956f:	nop
	...
   100019580:	nop
   100019581:	nop
   100019582:	nop
   100019583:	nop
   100019584:	nop
   100019585:	nop
   100019586:	nop
   100019587:	nop
   100019588:	mov    QWORD PTR [rsp+0x8],rbx
   10001958d:	push   rdi
   10001958e:	sub    rsp,0x20
   100019592:	lea    rbx,[rip+0x2f]        # 0x1000195c8
   100019599:	lea    rdi,[rip+0x28]        # 0x1000195c8
   1000195a0:	jmp    0x1000195b0
   1000195a2:	mov    rax,QWORD PTR [rbx]
   1000195a5:	test   rax,rax
   1000195a8:	je     0x1000195ac
   1000195aa:	call   rax
   1000195ac:	add    rbx,0x8
   1000195b0:	cmp    rbx,rdi
   1000195b3:	jb     0x1000195a2
   1000195b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1000195ba:	add    rsp,0x20
   1000195be:	pop    rdi
   1000195bf:	ret    
	...
   1000195d0:	nop
   1000195d1:	nop
   1000195d2:	nop
   1000195d3:	nop
   1000195d4:	nop
   1000195d5:	nop
   1000195d6:	nop
   1000195d7:	nop
   1000195d8:	jmp    QWORD PTR [rip+0xfffffffffffe7db2]        # 0x100001390
   1000195de:	nop
   1000195df:	nop
   1000195e0:	nop
   1000195e1:	nop
   1000195e2:	nop
   1000195e3:	nop
   1000195e4:	jmp    QWORD PTR [rip+0xfffffffffffe7d9e]        # 0x100001388
   1000195ea:	nop
   1000195eb:	nop
   1000195ec:	nop
   1000195ed:	nop
   1000195ee:	nop
   1000195ef:	nop
   1000195f0:	mov    rax,rcx
   1000195f3:	mov    ecx,0x5a4d
   1000195f8:	cmp    WORD PTR [rax],cx
   1000195fb:	je     0x100019600
   1000195fd:	xor    eax,eax
   1000195ff:	ret    
   100019600:	movsxd rcx,DWORD PTR [rax+0x3c]
   100019604:	add    rcx,rax
   100019607:	xor    eax,eax
   100019609:	cmp    DWORD PTR [rcx],0x4550
   10001960f:	jne    0x10001961d
   100019611:	mov    edx,0x20b
   100019616:	cmp    WORD PTR [rcx+0x18],dx
   10001961a:	sete   al
   10001961d:	repz ret 
   10001961f:	nop
   100019620:	nop
   100019621:	nop
   100019622:	nop
   100019623:	nop
   100019624:	nop
   100019625:	nop
   100019626:	nop
   100019627:	nop
   100019628:	nop
   100019629:	nop
   10001962a:	nop
   10001962b:	nop
   10001962c:	nop
   10001962d:	nop
   10001962e:	nop
   10001962f:	nop
   100019630:	movsxd r8,DWORD PTR [rcx+0x3c]
   100019634:	xor    r9d,r9d
   100019637:	mov    r10,rdx
   10001963a:	add    r8,rcx
   10001963d:	movzx  eax,WORD PTR [r8+0x14]
   100019642:	movzx  r11d,WORD PTR [r8+0x6]
   100019647:	lea    rcx,[rax+r8*1+0x18]
   10001964c:	test   r11d,r11d
   10001964f:	je     0x10001966f
   100019651:	mov    edx,DWORD PTR [rcx+0xc]
   100019654:	cmp    r10,rdx
   100019657:	jb     0x100019663
   100019659:	mov    eax,DWORD PTR [rcx+0x8]
   10001965c:	add    eax,edx
   10001965e:	cmp    r10,rax
   100019661:	jb     0x100019672
   100019663:	inc    r9d
   100019666:	add    rcx,0x28
   10001966a:	cmp    r9d,r11d
   10001966d:	jb     0x100019651
   10001966f:	xor    eax,eax
   100019671:	ret    
   100019672:	mov    rax,rcx
   100019675:	ret    
   100019676:	nop
   100019677:	nop
   100019678:	nop
   100019679:	nop
   10001967a:	nop
   10001967b:	nop
   10001967c:	nop
   10001967d:	nop
   10001967e:	nop
   10001967f:	nop
   100019680:	sub    rsp,0x28
   100019684:	mov    r8,rcx
   100019687:	lea    r9,[rip+0xfffffffffffe6972]        # 0x100000000
   10001968e:	mov    rcx,r9
   100019691:	call   0x1000195f0
   100019696:	test   eax,eax
   100019698:	je     0x1000196bc
   10001969a:	sub    r8,r9
   10001969d:	mov    rdx,r8
   1000196a0:	mov    rcx,r9
   1000196a3:	call   0x100019630
   1000196a8:	test   rax,rax
   1000196ab:	je     0x1000196bc
   1000196ad:	mov    eax,DWORD PTR [rax+0x24]
   1000196b0:	shr    eax,0x1f
   1000196b3:	not    eax
   1000196b5:	and    eax,0x1
   1000196b8:	jmp    0x1000196bc
   1000196ba:	xor    eax,eax
   1000196bc:	add    rsp,0x28
   1000196c0:	ret    
   1000196c1:	nop
   1000196c2:	nop
   1000196c3:	nop
   1000196c4:	nop
   1000196c5:	nop
   1000196c6:	nop
   1000196c7:	nop
   1000196c8:	jmp    QWORD PTR [rip+0xfffffffffffe7c92]        # 0x100001360
   1000196ce:	nop
   1000196cf:	nop
   1000196d0:	nop
   1000196d1:	nop
   1000196d2:	nop
   1000196d3:	nop
   1000196d4:	jmp    QWORD PTR [rip+0xfffffffffffe7c7e]        # 0x100001358
   1000196da:	nop
   1000196db:	nop
   1000196dc:	nop
   1000196dd:	nop
   1000196de:	nop
   1000196df:	nop
   1000196e0:	xor    eax,eax
   1000196e2:	ret    
   1000196e3:	nop
   1000196e4:	nop
   1000196e5:	nop
   1000196e6:	nop
   1000196e7:	nop
   1000196e8:	nop
   1000196e9:	nop
   1000196ea:	nop
   1000196eb:	nop
   1000196ec:	xor    eax,eax
   1000196ee:	ret    
   1000196ef:	nop
   1000196f0:	nop
   1000196f1:	nop
   1000196f2:	nop
   1000196f3:	nop
   1000196f4:	nop
   1000196f5:	nop
   1000196f6:	nop
   1000196f7:	nop
   1000196f8:	mov    QWORD PTR [rsp+0x18],rbx
   1000196fd:	push   rdi
   1000196fe:	sub    rsp,0x20
   100019702:	mov    rax,QWORD PTR [rip+0xfae7]        # 0x1000291f0
   100019709:	and    QWORD PTR [rsp+0x30],0x0
   10001970f:	movabs rdi,0x2b992ddfa232
   100019719:	cmp    rax,rdi
   10001971c:	je     0x10001972a
   10001971e:	not    rax
   100019721:	mov    QWORD PTR [rip+0xfad0],rax        # 0x1000291f8
   100019728:	jmp    0x1000197a0
   10001972a:	lea    rcx,[rsp+0x30]
   10001972f:	call   QWORD PTR [rip+0xfffffffffffe7a63]        # 0x100001198
   100019735:	mov    rbx,QWORD PTR [rsp+0x30]
   10001973a:	call   QWORD PTR [rip+0xfffffffffffe7aa0]        # 0x1000011e0
   100019740:	mov    r11d,eax
   100019743:	xor    rbx,r11
   100019746:	call   QWORD PTR [rip+0xfffffffffffe7a8c]        # 0x1000011d8
   10001974c:	mov    r11d,eax
   10001974f:	xor    rbx,r11
   100019752:	call   QWORD PTR [rip+0xfffffffffffe7968]        # 0x1000010c0
   100019758:	lea    rcx,[rsp+0x38]
   10001975d:	mov    r11d,eax
   100019760:	xor    rbx,r11
   100019763:	call   QWORD PTR [rip+0xfffffffffffe7a67]        # 0x1000011d0
   100019769:	mov    r11,QWORD PTR [rsp+0x38]
   10001976e:	xor    r11,rbx
   100019771:	movabs rax,0xffffffffffff
   10001977b:	and    r11,rax
   10001977e:	movabs rax,0x2b992ddfa233
   100019788:	cmp    r11,rdi
   10001978b:	cmove  r11,rax
   10001978f:	mov    QWORD PTR [rip+0xfa5a],r11        # 0x1000291f0
   100019796:	not    r11
   100019799:	mov    QWORD PTR [rip+0xfa58],r11        # 0x1000291f8
   1000197a0:	mov    rbx,QWORD PTR [rsp+0x40]
   1000197a5:	add    rsp,0x20
   1000197a9:	pop    rdi
   1000197aa:	ret    
   1000197ab:	nop
   1000197ac:	nop
   1000197ad:	nop
   1000197ae:	nop
   1000197af:	nop
   1000197b0:	nop
   1000197b1:	nop
   1000197b2:	nop
   1000197b3:	nop
   1000197b4:	mov    QWORD PTR [rsp+0x10],rbx
   1000197b9:	mov    DWORD PTR [rsp+0x18],r8d
   1000197be:	mov    QWORD PTR [rsp+0x8],rcx
   1000197c3:	push   rsi
   1000197c4:	push   rdi
   1000197c5:	push   r12
   1000197c7:	sub    rsp,0x40
   1000197cb:	mov    rsi,r9
   1000197ce:	mov    edi,r8d
   1000197d1:	mov    r12,rdx
   1000197d4:	mov    rbx,rcx
   1000197d7:	dec    edi
   1000197d9:	mov    DWORD PTR [rsp+0x70],edi
   1000197dd:	js     0x1000197ee
   1000197df:	sub    rbx,r12
   1000197e2:	mov    QWORD PTR [rsp+0x60],rbx
   1000197e7:	mov    rcx,rbx
   1000197ea:	call   rsi
   1000197ec:	jmp    0x1000197d7
   1000197ee:	jmp    0x1000197f0
   1000197f0:	mov    rbx,QWORD PTR [rsp+0x68]
   1000197f5:	add    rsp,0x40
   1000197f9:	pop    r12
   1000197fb:	pop    rdi
   1000197fc:	pop    rsi
   1000197fd:	ret    
   1000197fe:	nop
   1000197ff:	nop
   100019800:	nop
   100019801:	nop
   100019802:	nop
   100019803:	nop
   100019804:	mov    rax,rsp
   100019807:	mov    QWORD PTR [rax+0x20],r9
   10001980b:	mov    DWORD PTR [rax+0x18],r8d
   10001980f:	mov    QWORD PTR [rax+0x10],rdx
   100019813:	push   rbx
   100019814:	push   rsi
   100019815:	push   rdi
   100019816:	push   r12
   100019818:	sub    rsp,0x38
   10001981c:	mov    r12,r9
   10001981f:	movsxd rdi,r8d
   100019822:	mov    rsi,rdx
   100019825:	and    DWORD PTR [rax-0x38],0x0
   100019829:	mov    rbx,rdi
   10001982c:	imul   rbx,rdx
   100019830:	add    rbx,rcx
   100019833:	mov    QWORD PTR [rax+0x8],rbx
   100019837:	dec    edi
   100019839:	mov    DWORD PTR [rsp+0x70],edi
   10001983d:	js     0x10001984f
   10001983f:	sub    rbx,rsi
   100019842:	mov    QWORD PTR [rsp+0x60],rbx
   100019847:	mov    rcx,rbx
   10001984a:	call   r12
   10001984d:	jmp    0x100019837
   10001984f:	mov    DWORD PTR [rsp+0x20],0x1
   100019857:	add    rsp,0x38
   10001985b:	pop    r12
   10001985d:	pop    rdi
   10001985e:	pop    rsi
   10001985f:	pop    rbx
   100019860:	ret    
   100019861:	nop
   100019862:	nop
   100019863:	nop
   100019864:	nop
   100019865:	nop
   100019866:	nop
   100019867:	nop
   100019868:	jmp    QWORD PTR [rip+0xfffffffffffe7ac2]        # 0x100001330
   10001986e:	nop
   10001986f:	nop
   100019870:	nop
   100019871:	nop
   100019872:	nop
   100019873:	nop
   100019874:	jmp    QWORD PTR [rip+0xfffffffffffe7aae]        # 0x100001328
   10001987a:	nop
   10001987b:	nop
   10001987c:	nop
   10001987d:	nop
   10001987e:	nop
   10001987f:	nop
   100019880:	jmp    QWORD PTR [rip+0xfffffffffffe7a9a]        # 0x100001320
   100019886:	nop
   100019887:	nop
   100019888:	nop
   100019889:	nop
   10001988a:	nop
   10001988b:	nop
   10001988c:	jmp    QWORD PTR [rip+0xfffffffffffe7a7e]        # 0x100001310
   100019892:	nop
   100019893:	nop
   100019894:	nop
   100019895:	nop
   100019896:	nop
   100019897:	nop
   100019898:	jmp    QWORD PTR [rip+0xfffffffffffe7a6a]        # 0x100001308
   10001989e:	nop
   10001989f:	nop
   1000198a0:	lea    rax,[rip+0xf769]        # 0x100029010
   1000198a7:	jmp    0x1000198ac
   1000198a9:	nop
   1000198aa:	nop
   1000198ab:	nop
   1000198ac:	mov    QWORD PTR [rsp+0x8],rcx
   1000198b1:	mov    QWORD PTR [rsp+0x10],rdx
   1000198b6:	mov    QWORD PTR [rsp+0x18],r8
   1000198bb:	mov    QWORD PTR [rsp+0x20],r9
   1000198c0:	sub    rsp,0x68
   1000198c4:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1000198ca:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1000198d0:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   1000198d6:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1000198dc:	mov    rdx,rax
   1000198df:	lea    rcx,[rip+0x8a36]        # 0x10002231c
   1000198e6:	call   0x10001f448
   1000198eb:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1000198f1:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1000198f7:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1000198fd:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   100019903:	mov    rcx,QWORD PTR [rsp+0x70]
   100019908:	mov    rdx,QWORD PTR [rsp+0x78]
   10001990d:	mov    r8,QWORD PTR [rsp+0x80]
   100019915:	mov    r9,QWORD PTR [rsp+0x88]
   10001991d:	add    rsp,0x68
   100019921:	jmp    0x100019923
   100019923:	jmp    rax
   100019925:	nop
   100019926:	nop
   100019927:	nop
   100019928:	lea    rax,[rip+0xf6d9]        # 0x100029008
   10001992f:	jmp    0x1000198ac
   100019934:	lea    rax,[rip+0xf6c5]        # 0x100029000
   10001993b:	jmp    0x1000198ac
   100019940:	lea    rax,[rip+0xf6e1]        # 0x100029028
   100019947:	jmp    0x10001994c
   100019949:	nop
   10001994a:	nop
   10001994b:	nop
   10001994c:	mov    QWORD PTR [rsp+0x8],rcx
   100019951:	mov    QWORD PTR [rsp+0x10],rdx
   100019956:	mov    QWORD PTR [rsp+0x18],r8
   10001995b:	mov    QWORD PTR [rsp+0x20],r9
   100019960:	sub    rsp,0x68
   100019964:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   10001996a:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   100019970:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   100019976:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   10001997c:	mov    rdx,rax
   10001997f:	lea    rcx,[rip+0x89b6]        # 0x10002233c
   100019986:	call   0x10001f448
   10001998b:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   100019991:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   100019997:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   10001999d:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1000199a3:	mov    rcx,QWORD PTR [rsp+0x70]
   1000199a8:	mov    rdx,QWORD PTR [rsp+0x78]
   1000199ad:	mov    r8,QWORD PTR [rsp+0x80]
   1000199b5:	mov    r9,QWORD PTR [rsp+0x88]
   1000199bd:	add    rsp,0x68
   1000199c1:	jmp    0x1000199c3
   1000199c3:	jmp    rax
   1000199c5:	nop
   1000199c6:	nop
   1000199c7:	nop
   1000199c8:	nop
   1000199c9:	nop
   1000199ca:	nop
   1000199cb:	nop
   1000199cc:	nop
   1000199cd:	nop
   1000199ce:	nop
   1000199cf:	nop
   1000199d0:	lea    rax,[rip+0xf649]        # 0x100029020
   1000199d7:	jmp    0x10001994c
   1000199dc:	lea    rax,[rip+0xf655]        # 0x100029038
   1000199e3:	jmp    0x1000199e8
   1000199e5:	nop
   1000199e6:	nop
   1000199e7:	nop
   1000199e8:	mov    QWORD PTR [rsp+0x8],rcx
   1000199ed:	mov    QWORD PTR [rsp+0x10],rdx
   1000199f2:	mov    QWORD PTR [rsp+0x18],r8
   1000199f7:	mov    QWORD PTR [rsp+0x20],r9
   1000199fc:	sub    rsp,0x68
   100019a00:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   100019a06:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   100019a0c:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   100019a12:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   100019a18:	mov    rdx,rax
   100019a1b:	lea    rcx,[rip+0x893a]        # 0x10002235c
   100019a22:	call   0x10001f448
   100019a27:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   100019a2d:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   100019a33:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   100019a39:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   100019a3f:	mov    rcx,QWORD PTR [rsp+0x70]
   100019a44:	mov    rdx,QWORD PTR [rsp+0x78]
   100019a49:	mov    r8,QWORD PTR [rsp+0x80]
   100019a51:	mov    r9,QWORD PTR [rsp+0x88]
   100019a59:	add    rsp,0x68
   100019a5d:	jmp    0x100019a5f
   100019a5f:	jmp    rax
   100019a61:	nop
   100019a62:	nop
   100019a63:	nop
   100019a64:	nop
   100019a65:	nop
   100019a66:	nop
   100019a67:	nop
   100019a68:	nop
   100019a69:	nop
   100019a6a:	nop
   100019a6b:	nop
   100019a6c:	nop
   100019a6d:	nop
   100019a6e:	nop
   100019a6f:	nop
   100019a70:	mov    QWORD PTR [rsp+0x8],rcx
   100019a75:	mov    QWORD PTR [rsp+0x10],rdx
   100019a7a:	mov    QWORD PTR [rsp+0x18],r8
   100019a7f:	mov    QWORD PTR [rsp+0x20],r9
   100019a84:	ret    
   100019a85:	nop
   100019a86:	nop
   100019a87:	nop
   100019a88:	nop
   100019a89:	nop
   100019a8a:	nop
   100019a8b:	nop
   100019a8c:	nop
   100019a8d:	nop
   100019a8e:	nop
   100019a8f:	nop
   100019a90:	sub    rsp,0x38
   100019a94:	cmp    DWORD PTR [rip+0x10485],0x0        # 0x100029f20
   100019a9b:	je     0x100019aab
   100019a9d:	mov    r8,QWORD PTR [rsp+0x60]
   100019aa2:	add    rsp,0x38
   100019aa6:	jmp    0x10001aef0
   100019aab:	mov    rax,QWORD PTR [rsp+0x60]
   100019ab0:	mov    QWORD PTR [rsp+0x20],rax
   100019ab5:	call   QWORD PTR [rip+0xfffffffffffe7575]        # 0x100001030
   100019abb:	add    rsp,0x38
   100019abf:	ret    
   100019ac0:	nop
   100019ac1:	nop
   100019ac2:	nop
   100019ac3:	nop
   100019ac4:	nop
   100019ac5:	nop
   100019ac6:	nop
   100019ac7:	nop
   100019ac8:	nop
   100019ac9:	nop
   100019aca:	nop
   100019acb:	nop
   100019acc:	nop
   100019acd:	nop
   100019ace:	nop
   100019acf:	nop
   100019ad0:	push   rdi
   100019ad2:	push   r12
   100019ad4:	push   r14
   100019ad6:	push   r15
   100019ad8:	sub    rsp,0x58
   100019adc:	cmp    DWORD PTR [rip+0x1043d],0x0        # 0x100029f20
   100019ae3:	mov    r14,r9
   100019ae6:	mov    r15,r8
   100019ae9:	mov    rdi,rdx
   100019aec:	mov    r12,rcx
   100019aef:	je     0x100019d83
   100019af5:	mov    QWORD PTR [rsp+0x90],rsi
   100019afd:	mov    QWORD PTR [rsp+0x50],r13
   100019b02:	xor    r13d,r13d
   100019b05:	test   rdx,rdx
   100019b08:	je     0x100019b1b
   100019b0a:	or     rax,0xffffffffffffffff
   100019b0e:	xchg   ax,ax
   100019b10:	inc    rax
   100019b13:	cmp    BYTE PTR [rdx+rax*1],r13b
   100019b17:	jne    0x100019b10
   100019b19:	jmp    0x100019b1e
   100019b1b:	mov    eax,r13d
   100019b1e:	mov    QWORD PTR [rsp+0x80],rbx
   100019b26:	mov    rsi,r13
   100019b29:	mov    QWORD PTR [rsp+0x88],rbp
   100019b31:	test   eax,eax
   100019b33:	je     0x100019bbd
   100019b39:	lea    ebp,[rax+0x1]
   100019b3c:	mov    ebx,ebp
   100019b3e:	add    rbx,rbx
   100019b41:	call   QWORD PTR [rip+0xfffffffffffe7521]        # 0x100001068
   100019b47:	mov    r8,rbx
   100019b4a:	mov    rcx,rax
   100019b4d:	xor    edx,edx
   100019b4f:	call   QWORD PTR [rip+0xfffffffffffe769b]        # 0x1000011f0
   100019b55:	mov    rsi,rax
   100019b58:	test   rax,rax
   100019b5b:	jne    0x100019b92
   100019b5d:	lea    ecx,[rax+0x8]
   100019b60:	call   QWORD PTR [rip+0xfffffffffffe7692]        # 0x1000011f8
   100019b66:	lea    eax,[rsi+0x8]
   100019b69:	mov    rbp,QWORD PTR [rsp+0x88]
   100019b71:	mov    rbx,QWORD PTR [rsp+0x80]
   100019b79:	mov    rsi,QWORD PTR [rsp+0x90]
   100019b81:	mov    r13,QWORD PTR [rsp+0x50]
   100019b86:	add    rsp,0x58
   100019b8a:	pop    r15
   100019b8c:	pop    r14
   100019b8e:	pop    r12
   100019b90:	pop    rdi
   100019b91:	ret    
   100019b92:	or     r9d,0xffffffff
   100019b96:	mov    r8,rdi
   100019b99:	xor    edx,edx
   100019b9b:	xor    ecx,ecx
   100019b9d:	mov    DWORD PTR [rsp+0x28],ebp
   100019ba1:	mov    QWORD PTR [rsp+0x20],rax
   100019ba6:	call   QWORD PTR [rip+0xfffffffffffe7674]        # 0x100001220
   100019bac:	test   eax,eax
   100019bae:	jne    0x100019bbd
   100019bb0:	call   QWORD PTR [rip+0xfffffffffffe757a]        # 0x100001130
   100019bb6:	mov    edi,eax
   100019bb8:	jmp    0x100019d5b
   100019bbd:	lea    rax,[rsp+0x40]
   100019bc2:	lea    r9,[rsp+0x44]
   100019bc7:	mov    r8,r15
   100019bca:	mov    QWORD PTR [rsp+0x28],rax
   100019bcf:	mov    rdx,rsi
   100019bd2:	mov    rcx,r12
   100019bd5:	mov    DWORD PTR [rsp+0x44],r13d
   100019bda:	mov    DWORD PTR [rsp+0x40],r13d
   100019bdf:	mov    QWORD PTR [rsp+0x20],r13
   100019be4:	call   0x100019dc0
   100019be9:	mov    edi,eax
   100019beb:	test   eax,eax
   100019bed:	jne    0x100019d5b
   100019bf3:	test   r14,r14
   100019bf6:	je     0x100019bff
   100019bf8:	mov    eax,DWORD PTR [rsp+0x44]
   100019bfc:	mov    DWORD PTR [r14],eax
   100019bff:	mov    ebx,DWORD PTR [rsp+0x40]
   100019c03:	call   QWORD PTR [rip+0xfffffffffffe745f]        # 0x100001068
   100019c09:	mov    r8d,ebx
   100019c0c:	mov    rcx,rax
   100019c0f:	xor    edx,edx
   100019c11:	call   QWORD PTR [rip+0xfffffffffffe75d9]        # 0x1000011f0
   100019c17:	mov    rbp,rax
   100019c1a:	test   rax,rax
   100019c1d:	je     0x100019d5b
   100019c23:	lea    rax,[rsp+0x40]
   100019c28:	lea    r9,[rsp+0x44]
   100019c2d:	mov    r8,r15
   100019c30:	mov    QWORD PTR [rsp+0x28],rax
   100019c35:	mov    rdx,rsi
   100019c38:	mov    rcx,r12
   100019c3b:	mov    QWORD PTR [rsp+0x20],rbp
   100019c40:	call   0x100019dc0
   100019c45:	mov    edi,eax
   100019c47:	test   eax,eax
   100019c49:	jne    0x100019d47
   100019c4f:	mov    eax,DWORD PTR [rsp+0x44]
   100019c53:	cmp    eax,0x1
   100019c56:	je     0x100019cbc
   100019c58:	cmp    eax,0x7
   100019c5b:	je     0x100019cbc
   100019c5d:	cmp    eax,0x2
   100019c60:	je     0x100019cbc
   100019c62:	mov    rcx,QWORD PTR [rsp+0xa0]
   100019c6a:	test   rcx,rcx
   100019c6d:	je     0x100019ca0
   100019c6f:	mov    r14,QWORD PTR [rsp+0xa8]
   100019c77:	mov    ebx,DWORD PTR [rsp+0x40]
   100019c7b:	cmp    DWORD PTR [r14],ebx
   100019c7e:	jb     0x100019c93
   100019c80:	mov    r8d,ebx
   100019c83:	mov    rdx,rbp
   100019c86:	call   0x10001f75c
   100019c8b:	mov    DWORD PTR [r14],ebx
   100019c8e:	jmp    0x100019d47
   100019c93:	mov    edi,0xea
   100019c98:	mov    DWORD PTR [r14],ebx
   100019c9b:	jmp    0x100019d47
   100019ca0:	mov    rcx,QWORD PTR [rsp+0xa8]
   100019ca8:	test   rcx,rcx
   100019cab:	je     0x100019d47
   100019cb1:	mov    eax,DWORD PTR [rsp+0x40]
   100019cb5:	mov    DWORD PTR [rcx],eax
   100019cb7:	jmp    0x100019d47
   100019cbc:	mov    r9d,DWORD PTR [rsp+0x40]
   100019cc1:	mov    QWORD PTR [rsp+0x38],r13
   100019cc6:	mov    QWORD PTR [rsp+0x30],r13
   100019ccb:	mov    r8,rbp
   100019cce:	xor    edx,edx
   100019cd0:	xor    ecx,ecx
   100019cd2:	shr    r9d,1
   100019cd5:	mov    DWORD PTR [rsp+0x28],r13d
   100019cda:	mov    QWORD PTR [rsp+0x20],r13
   100019cdf:	call   QWORD PTR [rip+0xfffffffffffe7543]        # 0x100001228
   100019ce5:	mov    rcx,QWORD PTR [rsp+0xa0]
   100019ced:	mov    r11d,eax
   100019cf0:	test   rcx,rcx
   100019cf3:	je     0x100019d37
   100019cf5:	mov    rbx,QWORD PTR [rsp+0xa8]
   100019cfd:	mov    eax,DWORD PTR [rbx]
   100019cff:	cmp    eax,r11d
   100019d02:	jb     0x100019d30
   100019d04:	mov    r9d,DWORD PTR [rsp+0x40]
   100019d09:	mov    QWORD PTR [rsp+0x38],r13
   100019d0e:	mov    QWORD PTR [rsp+0x30],r13
   100019d13:	mov    DWORD PTR [rsp+0x28],eax
   100019d17:	mov    QWORD PTR [rsp+0x20],rcx
   100019d1c:	mov    r8,rbp
   100019d1f:	shr    r9d,1
   100019d22:	xor    edx,edx
   100019d24:	xor    ecx,ecx
   100019d26:	call   QWORD PTR [rip+0xfffffffffffe74fc]        # 0x100001228
   100019d2c:	mov    DWORD PTR [rbx],eax
   100019d2e:	jmp    0x100019d47
   100019d30:	mov    edi,0xea
   100019d35:	jmp    0x100019d47
   100019d37:	mov    rax,QWORD PTR [rsp+0xa8]
   100019d3f:	test   rax,rax
   100019d42:	je     0x100019d47
   100019d44:	mov    DWORD PTR [rax],r11d
   100019d47:	call   QWORD PTR [rip+0xfffffffffffe731b]        # 0x100001068
   100019d4d:	mov    r8,rbp
   100019d50:	xor    edx,edx
   100019d52:	mov    rcx,rax
   100019d55:	call   QWORD PTR [rip+0xfffffffffffe7305]        # 0x100001060
   100019d5b:	test   rsi,rsi
   100019d5e:	je     0x100019d74
   100019d60:	call   QWORD PTR [rip+0xfffffffffffe7302]        # 0x100001068
   100019d66:	mov    r8,rsi
   100019d69:	xor    edx,edx
   100019d6b:	mov    rcx,rax
   100019d6e:	call   QWORD PTR [rip+0xfffffffffffe72ec]        # 0x100001060
   100019d74:	mov    ecx,edi
   100019d76:	call   QWORD PTR [rip+0xfffffffffffe747c]        # 0x1000011f8
   100019d7c:	mov    eax,edi
   100019d7e:	jmp    0x100019b69
   100019d83:	mov    rax,QWORD PTR [rsp+0xa8]
   100019d8b:	mov    QWORD PTR [rsp+0x28],rax
   100019d90:	mov    rax,QWORD PTR [rsp+0xa0]
   100019d98:	mov    QWORD PTR [rsp+0x20],rax
   100019d9d:	call   QWORD PTR [rip+0xfffffffffffe7295]        # 0x100001038
   100019da3:	add    rsp,0x58
   100019da7:	pop    r15
   100019da9:	pop    r14
   100019dab:	pop    r12
   100019dad:	pop    rdi
   100019dae:	ret    
   100019daf:	nop
   100019db0:	nop
   100019db1:	nop
   100019db2:	nop
   100019db3:	nop
   100019db4:	nop
   100019db5:	nop
   100019db6:	nop
   100019db7:	nop
   100019db8:	nop
   100019db9:	nop
   100019dba:	nop
   100019dbb:	nop
   100019dbc:	nop
   100019dbd:	nop
   100019dbe:	nop
   100019dbf:	nop
   100019dc0:	mov    QWORD PTR [rsp+0x20],r9
   100019dc5:	push   rbx
   100019dc6:	push   r14
   100019dc8:	sub    rsp,0x58
   100019dcc:	cmp    DWORD PTR [rip+0x1014d],0x0        # 0x100029f20
   100019dd3:	mov    r14,r9
   100019dd6:	mov    rbx,rdx
   100019dd9:	je     0x10001a0bb
   100019ddf:	mov    QWORD PTR [rsp+0x70],rbp
   100019de4:	mov    QWORD PTR [rsp+0x78],rsi
   100019de9:	call   0x10001a440
   100019dee:	test   rbx,rbx
   100019df1:	je     0x100019df9
   100019df3:	cmp    WORD PTR [rbx],0x0
   100019df7:	jne    0x100019e00
   100019df9:	lea    rbx,[rip+0x2e4]        # 0x10001a0e4
   100019e00:	mov    rdx,rbx
   100019e03:	mov    rcx,rax
   100019e06:	call   0x10001a980
   100019e0b:	mov    rsi,rax
   100019e0e:	test   rax,rax
   100019e11:	je     0x10001a09a
   100019e17:	mov    eax,0xffff
   100019e1c:	cmp    WORD PTR [rsi],ax
   100019e1f:	jne    0x100019e32
   100019e21:	cmp    WORD PTR [rsi+0x2],0x0
   100019e26:	jne    0x100019e32
   100019e28:	mov    ebp,0x2
   100019e2d:	jmp    0x10001a084
   100019e32:	mov    QWORD PTR [rsp+0x80],rdi
   100019e3a:	mov    QWORD PTR [rsp+0x50],r12
   100019e3f:	xor    ebp,ebp
   100019e41:	lea    r9,[rsp+0x30]
   100019e46:	lea    rdx,[rip+0x29b]        # 0x10001a0e8
   100019e4d:	xor    r8d,r8d
   100019e50:	mov    rcx,rsi
   100019e53:	mov    QWORD PTR [rsp+0x48],r13
   100019e58:	lea    r12d,[rbp+0x1]
   100019e5c:	mov    QWORD PTR [rsp+0x40],r15
   100019e61:	mov    DWORD PTR [rsp+0x30],ebp
   100019e65:	call   0x10001f750
   100019e6a:	lea    edi,[rbp+0x4]
   100019e6d:	cmp    eax,r12d
   100019e70:	jne    0x100019e7f
   100019e72:	mov    r12d,edi
   100019e75:	lea    r13,[rsp+0x30]
   100019e7a:	jmp    0x10001a033
   100019e7f:	lea    rax,[rip+0x27a]        # 0x10001a100
   100019e86:	mov    r9d,edi
   100019e89:	mov    r8,rsi
   100019e8c:	mov    edx,r12d
   100019e8f:	mov    ecx,0x400
   100019e94:	mov    DWORD PTR [rsp+0x28],edi
   100019e98:	mov    QWORD PTR [rsp+0x20],rax
   100019e9d:	call   QWORD PTR [rip+0xfffffffffffe738d]        # 0x100001230
   100019ea3:	cmp    eax,0x2
   100019ea6:	jne    0x100019eae
   100019ea8:	lea    r12d,[rax+0x1]
   100019eac:	jmp    0x100019f29
   100019eae:	lea    rax,[rip+0x25b]        # 0x10001a110
   100019eb5:	mov    r9d,edi
   100019eb8:	mov    r8,rsi
   100019ebb:	mov    edx,r12d
   100019ebe:	mov    ecx,0x400
   100019ec3:	mov    DWORD PTR [rsp+0x28],edi
   100019ec7:	mov    QWORD PTR [rsp+0x20],rax
   100019ecc:	call   QWORD PTR [rip+0xfffffffffffe735e]        # 0x100001230
   100019ed2:	cmp    eax,0x2
   100019ed5:	jne    0x10001a015
   100019edb:	lea    rbx,[rsi+0x8]
   100019edf:	lea    r9,[rsp+0x34]
   100019ee4:	lea    rdx,[rip+0x235]        # 0x10001a120
   100019eeb:	mov    rcx,rbx
   100019eee:	xor    r8d,r8d
   100019ef1:	call   0x10001f750
   100019ef6:	cmp    eax,r12d
   100019ef9:	jne    0x10001a015
   100019eff:	cmp    WORD PTR [rbx],0x3a
   100019f03:	je     0x100019f1c
   100019f05:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   100019f10:	add    rbx,0x2
   100019f14:	inc    edi
   100019f16:	cmp    WORD PTR [rbx],0x3a
   100019f1a:	jne    0x100019f10
   100019f1c:	mov    r12d,DWORD PTR [rsp+0x34]
   100019f21:	inc    edi
   100019f23:	je     0x10001a015
   100019f29:	movsxd r8,edi
   100019f2c:	or     rcx,0xffffffffffffffff
   100019f30:	inc    rcx
   100019f33:	cmp    WORD PTR [rsi+rcx*2],bp
   100019f37:	jne    0x100019f30
   100019f39:	sub    rcx,r8
   100019f3c:	lea    rbx,[rsi+r8*2]
   100019f40:	movabs rax,0xaaaaaaaaaaaaaaab
   100019f4a:	lea    r9,[rsp+0x30]
   100019f4f:	xor    r8d,r8d
   100019f52:	mov    r13,rsi
   100019f55:	mul    rcx
   100019f58:	mov    rdi,rdx
   100019f5b:	lea    rdx,[rip+0x1ce]        # 0x10001a130
   100019f62:	mov    rcx,rbx
   100019f65:	shr    rdi,1
   100019f68:	mov    r15d,ebp
   100019f6b:	inc    edi
   100019f6d:	call   0x10001f750
   100019f72:	cmp    eax,0x1
   100019f75:	jne    0x100019fe5
   100019f77:	mov    r14,rsi
   100019f7a:	nop    WORD PTR [rax+rax*1+0x0]
   100019f80:	movzx  eax,WORD PTR [rbx]
   100019f83:	cmp    ax,0x2c
   100019f87:	je     0x100019fa3
   100019f89:	nop    DWORD PTR [rax+0x0]
   100019f90:	test   ax,ax
   100019f93:	je     0x100019fa3
   100019f95:	movzx  eax,WORD PTR [rbx+0x2]
   100019f99:	add    rbx,0x2
   100019f9d:	cmp    ax,0x2c
   100019fa1:	jne    0x100019f90
   100019fa3:	movzx  eax,BYTE PTR [rsp+0x30]
   100019fa8:	inc    r14
   100019fab:	inc    r15d
   100019fae:	mov    BYTE PTR [r14-0x1],al
   100019fb2:	cmp    WORD PTR [rbx],0x2c
   100019fb6:	jne    0x100019fbc
   100019fb8:	add    rbx,0x2
   100019fbc:	cmp    WORD PTR [rbx],bp
   100019fbf:	je     0x100019fdd
   100019fc1:	lea    r9,[rsp+0x30]
   100019fc6:	lea    rdx,[rip+0x163]        # 0x10001a130
   100019fcd:	xor    r8d,r8d
   100019fd0:	mov    rcx,rbx
   100019fd3:	call   0x10001f750
   100019fd8:	cmp    eax,0x1
   100019fdb:	je     0x100019f80
   100019fdd:	mov    r14,QWORD PTR [rsp+0x88]
   100019fe5:	cmp    edi,r15d
   100019fe8:	jne    0x10001a00e
   100019fea:	cmp    r12d,0x1
   100019fee:	je     0x100019ffc
   100019ff0:	cmp    r12d,0x7
   100019ff4:	je     0x100019ffc
   100019ff6:	cmp    r12d,0x2
   100019ffa:	jne    0x10001a033
   100019ffc:	test   dil,0x1
   10001a000:	jne    0x10001a00e
   10001a002:	movsxd rax,r15d
   10001a005:	add    edi,0x2
   10001a008:	mov    WORD PTR [rax+rsi*1],bp
   10001a00c:	jmp    0x10001a033
   10001a00e:	mov    ebp,0xd
   10001a013:	jmp    0x10001a06d
   10001a015:	or     rcx,0xffffffffffffffff
   10001a019:	nop    DWORD PTR [rax+0x0]
   10001a020:	inc    rcx
   10001a023:	cmp    WORD PTR [rsi+rcx*2],bp
   10001a027:	jne    0x10001a020
   10001a029:	lea    edi,[rcx*2+0x2]
   10001a030:	mov    r13,rsi
   10001a033:	mov    rcx,QWORD PTR [rsp+0x90]
   10001a03b:	mov    rbx,QWORD PTR [rsp+0x98]
   10001a043:	test   rcx,rcx
   10001a046:	je     0x10001a05e
   10001a048:	cmp    DWORD PTR [rbx],edi
   10001a04a:	jb     0x10001a059
   10001a04c:	mov    r8d,edi
   10001a04f:	mov    rdx,r13
   10001a052:	call   0x10001f75c
   10001a057:	jmp    0x10001a05e
   10001a059:	mov    ebp,0xea
   10001a05e:	test   r14,r14
   10001a061:	je     0x10001a066
   10001a063:	mov    DWORD PTR [r14],r12d
   10001a066:	test   rbx,rbx
   10001a069:	je     0x10001a06d
   10001a06b:	mov    DWORD PTR [rbx],edi
   10001a06d:	mov    r13,QWORD PTR [rsp+0x48]
   10001a072:	mov    r12,QWORD PTR [rsp+0x50]
   10001a077:	mov    rdi,QWORD PTR [rsp+0x80]
   10001a07f:	mov    r15,QWORD PTR [rsp+0x40]
   10001a084:	call   QWORD PTR [rip+0xfffffffffffe6fde]        # 0x100001068
   10001a08a:	mov    r8,rsi
   10001a08d:	xor    edx,edx
   10001a08f:	mov    rcx,rax
   10001a092:	call   QWORD PTR [rip+0xfffffffffffe6fc8]        # 0x100001060
   10001a098:	jmp    0x10001a09f
   10001a09a:	mov    ebp,0x8
   10001a09f:	mov    ecx,ebp
   10001a0a1:	call   QWORD PTR [rip+0xfffffffffffe7151]        # 0x1000011f8
   10001a0a7:	mov    rsi,QWORD PTR [rsp+0x78]
   10001a0ac:	mov    eax,ebp
   10001a0ae:	mov    rbp,QWORD PTR [rsp+0x70]
   10001a0b3:	add    rsp,0x58
   10001a0b7:	pop    r14
   10001a0b9:	pop    rbx
   10001a0ba:	ret    
   10001a0bb:	mov    rax,QWORD PTR [rsp+0x98]
   10001a0c3:	mov    QWORD PTR [rsp+0x28],rax
   10001a0c8:	mov    rax,QWORD PTR [rsp+0x90]
   10001a0d0:	mov    QWORD PTR [rsp+0x20],rax
   10001a0d5:	call   QWORD PTR [rip+0xfffffffffffe6f65]        # 0x100001040
   10001a0db:	add    rsp,0x58
   10001a0df:	pop    r14
   10001a0e1:	pop    rbx
   10001a0e2:	ret    
   10001a0e3:	nop
   10001a0e4:	add    BYTE PTR [rax],al
   10001a0e7:	add    BYTE PTR [rax+rax*1+0x77],ah
   10001a0eb:	add    BYTE PTR [rdi+0x0],ch
   10001a0ee:	jb     0x10001a0f0
   10001a0f0:	add    BYTE PTR fs:[rdx],bh
   10001a0f3:	add    BYTE PTR [rip+0x38003000],ah        # 0x13801d0f9
   10001a0f9:	add    BYTE PTR [rax+0x0],bh
   10001a0fc:	add    BYTE PTR [rax],al
   10001a0fe:	nop
   10001a0ff:	nop
   10001a100:	push   0x78006500
   10001a105:	add    BYTE PTR [rdx],bh
   10001a107:	add    BYTE PTR [rax],al
   10001a109:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001a10f:	nop
   10001a110:	push   0x78006500
   10001a115:	add    BYTE PTR [rax],ch
   10001a117:	add    BYTE PTR [rax],al
   10001a119:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001a11f:	nop
   10001a120:	and    eax,0x29006400
   10001a125:	add    BYTE PTR [rdx],bh
   10001a127:	add    BYTE PTR [rax],al
   10001a129:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001a12f:	nop
   10001a130:	and    eax,0x38003000
   10001a135:	add    BYTE PTR [rax+0x0],bh
   10001a138:	add    BYTE PTR [rax],al
   10001a13a:	nop
   10001a13b:	nop
   10001a13c:	nop
   10001a13d:	nop
   10001a13e:	nop
   10001a13f:	nop
   10001a140:	push   rbx
   10001a142:	push   rsi
   10001a143:	push   r15
   10001a145:	sub    rsp,0x40
   10001a149:	cmp    DWORD PTR [rip+0xfdd0],0x0        # 0x100029f20
   10001a150:	mov    r15d,r8d
   10001a153:	mov    rbx,rdx
   10001a156:	je     0x10001a166
   10001a158:	mov    eax,0x1
   10001a15d:	add    rsp,0x40
   10001a161:	pop    r15
   10001a163:	pop    rsi
   10001a164:	pop    rbx
   10001a165:	ret    
   10001a166:	mov    QWORD PTR [rsp+0x68],rdi
   10001a16b:	mov    QWORD PTR [rsp+0x70],r12
   10001a170:	mov    QWORD PTR [rsp+0x30],r14
   10001a175:	call   0x100019a70
   10001a17a:	or     rdi,0xffffffffffffffff
   10001a17e:	test   rdx,rdx
   10001a181:	je     0x10001a192
   10001a183:	mov    rax,rdi
   10001a186:	inc    rax
   10001a189:	cmp    WORD PTR [rdx+rax*2],0x0
   10001a18e:	jne    0x10001a186
   10001a190:	jmp    0x10001a197
   10001a192:	mov    eax,0x3
   10001a197:	lea    r14d,[rax+0x1]
   10001a19b:	mov    r8d,0x104
   10001a1a1:	lea    r12,[rip+0xfd98]        # 0x100029f40
   10001a1a8:	sub    r8d,r14d
   10001a1ab:	mov    rdx,r12
   10001a1ae:	mov    QWORD PTR [rsp+0x60],rbp
   10001a1b3:	mov    QWORD PTR [rsp+0x38],r13
   10001a1b8:	call   QWORD PTR [rip+0xfffffffffffe6ffa]        # 0x1000011b8
   10001a1be:	mov    r11d,eax
   10001a1c1:	test   eax,eax
   10001a1c3:	je     0x10001a34f
   10001a1c9:	lea    rcx,[r12-0x2]
   10001a1ce:	lea    rcx,[rcx+r11*2]
   10001a1d2:	call   0x100019a70
   10001a1d7:	xor    r13d,r13d
   10001a1da:	mov    edx,r13d
   10001a1dd:	mov    r8d,r13d
   10001a1e0:	cmp    rcx,r12
   10001a1e3:	jbe    0x10001a208
   10001a1e5:	test   r8,r8
   10001a1e8:	jne    0x10001a1f5
   10001a1ea:	cmp    WORD PTR [rcx],0x2e
   10001a1ee:	jne    0x10001a1fd
   10001a1f0:	mov    r8,rcx
   10001a1f3:	jmp    0x10001a1fd
   10001a1f5:	cmp    WORD PTR [rcx],0x5c
   10001a1f9:	cmove  rdx,rcx
   10001a1fd:	sub    rcx,0x2
   10001a201:	test   rdx,rdx
   10001a204:	je     0x10001a1e0
   10001a206:	jmp    0x10001a211
   10001a208:	test   rdx,rdx
   10001a20b:	je     0x10001a34f
   10001a211:	lea    rcx,[rdx+0x2]
   10001a215:	lea    rbp,[r8+0x2]
   10001a219:	mov    esi,0x1
   10001a21e:	test   rbx,rbx
   10001a221:	je     0x10001a231
   10001a223:	lea    r8d,[r14+r14*1]
   10001a227:	mov    rdx,rbx
   10001a22a:	call   0x10001f75c
   10001a22f:	jmp    0x10001a286
   10001a231:	mov    r9d,DWORD PTR [rip+0xeff8]        # 0x100029230
   10001a238:	mov    r8,QWORD PTR [rip+0xefe9]        # 0x100029228
   10001a23f:	mov    rax,rcx
   10001a242:	sub    rax,r12
   10001a245:	mov    edx,esi
   10001a247:	sar    rax,1
   10001a24a:	sub    r11d,eax
   10001a24d:	mov    DWORD PTR [rsp+0x28],r11d
   10001a252:	mov    QWORD PTR [rsp+0x20],rcx
   10001a257:	mov    ecx,0x400
   10001a25c:	call   QWORD PTR [rip+0xfffffffffffe6fce]        # 0x100001230
   10001a262:	lea    r8d,[r14+r14*1]
   10001a266:	lea    rdx,[rip+0x11b]        # 0x10001a388
   10001a26d:	cmp    eax,0x2
   10001a270:	mov    ebx,r13d
   10001a273:	mov    rcx,rbp
   10001a276:	cmove  ebx,esi
   10001a279:	call   0x10001f75c
   10001a27e:	test   ebx,ebx
   10001a280:	jne    0x10001a34f
   10001a286:	mov    rcx,r12
   10001a289:	call   QWORD PTR [rip+0xfffffffffffe6f89]        # 0x100001218
   10001a28f:	cmp    eax,0xffffffff
   10001a292:	je     0x10001a34f
   10001a298:	lea    rbx,[rip+0x100c1]        # 0x10002a360
   10001a29f:	mov    rdx,r12
   10001a2a2:	mov    r8d,0x208
   10001a2a8:	mov    rcx,rbx
   10001a2ab:	call   0x10001f75c
   10001a2b0:	mov    rax,rdi
   10001a2b3:	inc    rax
   10001a2b6:	cmp    WORD PTR [rbx+rax*2],r13w
   10001a2bb:	jne    0x10001a2b3
   10001a2bd:	dec    rax
   10001a2c0:	cmp    WORD PTR [rbx+rax*2],0x5c
   10001a2c5:	lea    rax,[rbx+rax*2]
   10001a2c9:	je     0x10001a2df
   10001a2cb:	nop    DWORD PTR [rax+rax*1+0x0]
   10001a2d0:	cmp    rax,rbx
   10001a2d3:	jbe    0x10001a2df
   10001a2d5:	sub    rax,0x2
   10001a2d9:	cmp    WORD PTR [rax],0x5c
   10001a2dd:	jne    0x10001a2d0
   10001a2df:	mov    WORD PTR [rax],r13w
   10001a2e3:	sub    rax,rbx
   10001a2e6:	mov    rcx,rbx
   10001a2e9:	sar    rax,1
   10001a2ec:	inc    eax
   10001a2ee:	mov    DWORD PTR [rip+0xfc30],eax        # 0x100029f24
   10001a2f4:	call   0x100019a70
   10001a2f9:	lea    rbx,[rip+0xfe50]        # 0x10002a150
   10001a300:	mov    rcx,rbx
   10001a303:	mov    rdx,r12
   10001a306:	mov    r8d,0x208
   10001a30c:	call   0x10001f75c
   10001a311:	inc    rdi
   10001a314:	cmp    WORD PTR [rbx+rdi*2],r13w
   10001a319:	jne    0x10001a311
   10001a31b:	mov    eax,edi
   10001a31d:	mov    rcx,rbx
   10001a320:	lea    rdx,[rbx+rax*2]
   10001a324:	mov    rax,QWORD PTR [rip+0x4d]        # 0x10001a378
   10001a32b:	mov    QWORD PTR [rdx],rax
   10001a32e:	movzx  eax,WORD PTR [rip+0x4b]        # 0x10001a380
   10001a335:	mov    WORD PTR [rdx+0x8],ax
   10001a339:	call   0x100019a70
   10001a33e:	mov    DWORD PTR [rip+0xfbe3],r15d        # 0x100029f28
   10001a345:	mov    DWORD PTR [rip+0xfbd5],esi        # 0x100029f20
   10001a34b:	mov    eax,esi
   10001a34d:	jmp    0x10001a351
   10001a34f:	xor    eax,eax
   10001a351:	mov    r13,QWORD PTR [rsp+0x38]
   10001a356:	mov    rbp,QWORD PTR [rsp+0x60]
   10001a35b:	mov    rdi,QWORD PTR [rsp+0x68]
   10001a360:	mov    r12,QWORD PTR [rsp+0x70]
   10001a365:	mov    r14,QWORD PTR [rsp+0x30]
   10001a36a:	add    rsp,0x40
   10001a36e:	pop    r15
   10001a370:	pop    rsi
   10001a371:	pop    rbx
   10001a372:	ret    
   10001a373:	nop
   10001a374:	nop
   10001a375:	nop
   10001a376:	nop
   10001a377:	nop
   10001a378:	add    BYTE PTR cs:[rbp+0x0],ah
   10001a37c:	js     0x10001a37e
   10001a37e:	je     0x10001a380
   10001a380:	add    BYTE PTR [rax],al
   10001a382:	nop
   10001a383:	nop
   10001a384:	nop
   10001a385:	nop
   10001a386:	nop
   10001a387:	nop
   10001a388:	imul   eax,DWORD PTR [rax],0x69006e
   10001a38e:	add    BYTE PTR [rax],al
   10001a390:	nop
   10001a391:	nop
   10001a392:	nop
   10001a393:	nop
   10001a394:	nop
   10001a395:	nop
   10001a396:	nop
   10001a397:	nop
   10001a398:	nop
   10001a399:	nop
   10001a39a:	nop
   10001a39b:	nop
   10001a39c:	nop
   10001a39d:	nop
   10001a39e:	nop
   10001a39f:	nop
   10001a3a0:	sub    rsp,0x58
   10001a3a4:	lea    rdx,[rsp+0x20]
   10001a3a9:	lea    rcx,[rip+0xfffffffffffffff0]        # 0x10001a3a0
   10001a3b0:	mov    r8d,0x30
   10001a3b6:	call   QWORD PTR [rip+0xfffffffffffe6e2c]        # 0x1000011e8
   10001a3bc:	test   rax,rax
   10001a3bf:	jne    0x10001a3c6
   10001a3c1:	add    rsp,0x58
   10001a3c5:	ret    
   10001a3c6:	mov    QWORD PTR [rsp+0x50],rbx
   10001a3cb:	mov    rbx,QWORD PTR [rsp+0x28]
   10001a3d0:	xor    r8d,r8d
   10001a3d3:	mov    rcx,rbx
   10001a3d6:	xor    edx,edx
   10001a3d8:	call   0x10001a140
   10001a3dd:	test   eax,eax
   10001a3df:	jne    0x10001a402
   10001a3e1:	lea    r8d,[rax+0x1]
   10001a3e5:	lea    rdx,[rip+0x2c]        # 0x10001a418
   10001a3ec:	mov    rcx,rbx
   10001a3ef:	call   0x10001a140
   10001a3f4:	test   eax,eax
   10001a3f6:	jne    0x10001a402
   10001a3f8:	mov    rbx,QWORD PTR [rsp+0x50]
   10001a3fd:	add    rsp,0x58
   10001a401:	ret    
   10001a402:	mov    eax,0x1
   10001a407:	mov    rbx,QWORD PTR [rsp+0x50]
   10001a40c:	add    rsp,0x58
   10001a410:	ret    
   10001a411:	nop
   10001a412:	nop
   10001a413:	nop
   10001a414:	nop
   10001a415:	nop
   10001a416:	nop
   10001a417:	nop
   10001a418:	jae    0x10001a41a
   10001a41a:	jno    0x10001a41c
   10001a41c:	ins    BYTE PTR es:[rdi],dx
   10001a41d:	add    BYTE PTR [rbx+0x0],dh
   10001a420:	add    BYTE PTR gs:[rdx+0x0],dh
   10001a424:	jbe    0x10001a426
   10001a426:	jb     0x10001a428
   10001a428:	add    BYTE PTR cs:[rcx+0x0],ch
   10001a42c:	outs   dx,BYTE PTR ds:[rsi]
   10001a42d:	add    BYTE PTR [rcx+0x0],ch
   10001a430:	add    BYTE PTR [rax],al
   10001a432:	nop
   10001a433:	nop
   10001a434:	nop
   10001a435:	nop
   10001a436:	nop
   10001a437:	nop
   10001a438:	nop
   10001a439:	nop
   10001a43a:	nop
   10001a43b:	nop
   10001a43c:	nop
   10001a43d:	nop
   10001a43e:	nop
   10001a43f:	nop
   10001a440:	push   rbx
   10001a442:	sub    rsp,0x20
   10001a446:	cmp    DWORD PTR [rip+0xfad3],0x0        # 0x100029f20
   10001a44d:	mov    rbx,rcx
   10001a450:	jne    0x10001a458
   10001a452:	call   QWORD PTR [rip+0xfffffffffffe6da8]        # 0x100001200
   10001a458:	cmp    rbx,0xffffffff80000000
   10001a45f:	jne    0x10001a46e
   10001a461:	lea    rax,[rip+0x90]        # 0x10001a4f8
   10001a468:	add    rsp,0x20
   10001a46c:	pop    rbx
   10001a46d:	ret    
   10001a46e:	cmp    rbx,0xffffffff80000001
   10001a475:	jne    0x10001a484
   10001a477:	lea    rax,[rip+0xa2]        # 0x10001a520
   10001a47e:	add    rsp,0x20
   10001a482:	pop    rbx
   10001a483:	ret    
   10001a484:	cmp    rbx,0xffffffff80000002
   10001a48b:	jne    0x10001a49a
   10001a48d:	lea    rax,[rip+0xb4]        # 0x10001a548
   10001a494:	add    rsp,0x20
   10001a498:	pop    rbx
   10001a499:	ret    
   10001a49a:	cmp    rbx,0xffffffff80000003
   10001a4a1:	jne    0x10001a4b0
   10001a4a3:	lea    rax,[rip+0xc6]        # 0x10001a570
   10001a4aa:	add    rsp,0x20
   10001a4ae:	pop    rbx
   10001a4af:	ret    
   10001a4b0:	cmp    rbx,0xffffffff80000004
   10001a4b7:	jne    0x10001a4c6
   10001a4b9:	lea    rax,[rip+0xc8]        # 0x10001a588
   10001a4c0:	add    rsp,0x20
   10001a4c4:	pop    rbx
   10001a4c5:	ret    
   10001a4c6:	cmp    rbx,0xffffffff80000005
   10001a4cd:	jne    0x10001a4dc
   10001a4cf:	lea    rax,[rip+0xe2]        # 0x10001a5b8
   10001a4d6:	add    rsp,0x20
   10001a4da:	pop    rbx
   10001a4db:	ret    
   10001a4dc:	lea    rax,[rip+0xfd]        # 0x10001a5e0
   10001a4e3:	cmp    rbx,0xffffffff80000006
   10001a4ea:	je     0x10001a4ef
   10001a4ec:	mov    rax,rbx
   10001a4ef:	add    rsp,0x20
   10001a4f3:	pop    rbx
   10001a4f4:	ret    
   10001a4f5:	nop
   10001a4f6:	nop
   10001a4f7:	nop
   10001a4f8:	rex.W add BYTE PTR [rbx+0x0],cl
   10001a4fc:	add    BYTE PTR [r9+0x0],r11b
   10001a500:	pop    rdi
   10001a501:	add    BYTE PTR [rbx+0x0],al
   10001a504:	rex.WR add BYTE PTR [rcx+0x0],r8b
   10001a508:	push   rbx
   10001a509:	add    BYTE PTR [rbx+0x0],dl
   10001a50c:	add    BYTE PTR [r11+0x0],r10b
   10001a510:	pop    rdi
   10001a511:	add    BYTE PTR [rdx+0x0],dl
   10001a514:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   10001a518:	push   rsp
   10001a519:	add    BYTE PTR [rax],al
   10001a51b:	add    BYTE PTR [rax+0x48909090],dl
   10001a521:	add    BYTE PTR [rbx+0x0],cl
   10001a524:	add    BYTE PTR [r9+0x0],r11b
   10001a528:	pop    rdi
   10001a529:	add    BYTE PTR [rbx+0x0],al
   10001a52c:	push   rbp
   10001a52d:	add    BYTE PTR [rdx+0x0],dl
   10001a530:	push   rdx
   10001a531:	add    BYTE PTR [rbp+0x0],al
   10001a534:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   10001a539:	add    BYTE PTR [rbp+0x0],dl
   10001a53c:	push   rbx
   10001a53d:	add    BYTE PTR [rbp+0x0],al
   10001a540:	push   rdx
   10001a541:	add    BYTE PTR [rax],al
   10001a543:	add    BYTE PTR [rax+0x48909090],dl
   10001a549:	add    BYTE PTR [rbx+0x0],cl
   10001a54c:	add    BYTE PTR [r9+0x0],r11b
   10001a550:	pop    rdi
   10001a551:	add    BYTE PTR [rax+rax*1+0x4f],cl
   10001a555:	add    BYTE PTR [rbx+0x0],al
   10001a558:	add    BYTE PTR [r8+rax*1+0x5f],cl
   10001a55d:	add    BYTE PTR [rbp+0x0],cl
   10001a560:	add    BYTE PTR [r11+0x0],al
   10001a564:	rex.W add BYTE PTR [rcx+0x0],cl
   10001a568:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   10001a56c:	add    BYTE PTR [rax],al
   10001a56e:	nop
   10001a56f:	nop
   10001a570:	rex.W add BYTE PTR [rbx+0x0],cl
   10001a574:	add    BYTE PTR [r9+0x0],r11b
   10001a578:	pop    rdi
   10001a579:	add    BYTE PTR [rbp+0x0],dl
   10001a57c:	push   rbx
   10001a57d:	add    BYTE PTR [rbp+0x0],al
   10001a580:	push   rdx
   10001a581:	add    BYTE PTR [rbx+0x0],dl
   10001a584:	add    BYTE PTR [rax],al
   10001a586:	nop
   10001a587:	nop
   10001a588:	rex.W add BYTE PTR [rbx+0x0],cl
   10001a58c:	add    BYTE PTR [r9+0x0],r11b
   10001a590:	pop    rdi
   10001a591:	add    BYTE PTR [rax+0x0],dl
   10001a594:	add    BYTE PTR [r10+0x0],r10b
   10001a598:	rex.RX add BYTE PTR [rdi+0x0],r9b
   10001a59c:	push   rdx
   10001a59d:	add    BYTE PTR [rbp+0x0],cl
   10001a5a0:	add    BYTE PTR [r14+0x0],cl
   10001a5a4:	rex.XB add BYTE PTR [r13+0x0],al
   10001a5a8:	pop    rdi
   10001a5a9:	add    BYTE PTR [rax+rax*1+0x41],al
   10001a5ad:	add    BYTE PTR [rax+rax*1+0x41],dl
   10001a5b1:	add    BYTE PTR [rax],al
   10001a5b3:	add    BYTE PTR [rax+0x48909090],dl
   10001a5b9:	add    BYTE PTR [rbx+0x0],cl
   10001a5bc:	add    BYTE PTR [r9+0x0],r11b
   10001a5c0:	pop    rdi
   10001a5c1:	add    BYTE PTR [rbx+0x0],al
   10001a5c4:	push   rbp
   10001a5c5:	add    BYTE PTR [rdx+0x0],dl
   10001a5c8:	push   rdx
   10001a5c9:	add    BYTE PTR [rbp+0x0],al
   10001a5cc:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   10001a5d1:	add    BYTE PTR [rbx+0x0],al
   10001a5d4:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   10001a5d8:	rex.RX add BYTE PTR [rcx+0x0],r9b
   10001a5dc:	rex.RXB add BYTE PTR [r8],r8b
   10001a5df:	add    BYTE PTR [rax+0x0],cl
   10001a5e2:	rex.WXB add BYTE PTR [r13+0x0],al
   10001a5e6:	pop    rcx
   10001a5e7:	add    BYTE PTR [rdi+0x0],bl
   10001a5ea:	add    BYTE PTR [rcx+0x0],r11b
   10001a5ee:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   10001a5f2:	add    BYTE PTR [rcx+0x0],r8b
   10001a5f6:	push   rsp
   10001a5f7:	add    BYTE PTR [rcx+0x0],al
   10001a5fa:	add    BYTE PTR [rax],al
   10001a5fc:	nop
   10001a5fd:	nop
   10001a5fe:	nop
   10001a5ff:	nop
   10001a600:	nop
   10001a601:	nop
   10001a602:	nop
   10001a603:	nop
   10001a604:	nop
   10001a605:	nop
   10001a606:	nop
   10001a607:	nop
   10001a608:	nop
   10001a609:	nop
   10001a60a:	nop
   10001a60b:	nop
   10001a60c:	nop
   10001a60d:	nop
   10001a60e:	nop
   10001a60f:	nop
   10001a610:	mov    QWORD PTR [rsp+0x8],rbx
   10001a615:	mov    QWORD PTR [rsp+0x10],rbp
   10001a61a:	mov    QWORD PTR [rsp+0x18],rsi
   10001a61f:	push   rdi
   10001a620:	push   r14
   10001a622:	push   r15
   10001a624:	sub    rsp,0x20
   10001a628:	mov    rbp,rdx
   10001a62b:	call   0x10001a440
   10001a630:	or     rbx,0xffffffffffffffff
   10001a634:	mov    r14,rax
   10001a637:	mov    rsi,rbx
   10001a63a:	nop    WORD PTR [rax+rax*1+0x0]
   10001a640:	inc    rsi
   10001a643:	cmp    WORD PTR [rax+rsi*2],0x0
   10001a648:	jne    0x10001a640
   10001a64a:	add    rsi,rsi
   10001a64d:	nop    DWORD PTR [rax]
   10001a650:	inc    rbx
   10001a653:	cmp    WORD PTR [rbp+rbx*2+0x0],0x0
   10001a659:	jne    0x10001a650
   10001a65b:	add    rbx,rbx
   10001a65e:	lea    rdi,[rsi+0x4]
   10001a662:	call   QWORD PTR [rip+0xfffffffffffe6a00]        # 0x100001068
   10001a668:	lea    r8,[rdi+rbx*1]
   10001a66c:	xor    edx,edx
   10001a66e:	mov    rcx,rax
   10001a671:	call   QWORD PTR [rip+0xfffffffffffe6b79]        # 0x1000011f0
   10001a677:	mov    r15,rax
   10001a67a:	test   rax,rax
   10001a67d:	je     0x10001a6b8
   10001a67f:	mov    r8d,esi
   10001a682:	mov    rdx,r14
   10001a685:	mov    rcx,rax
   10001a688:	call   0x10001f75c
   10001a68d:	mov    eax,0x5c
   10001a692:	shr    rsi,1
   10001a695:	lea    rdi,[r15+rsi*2]
   10001a699:	mov    r8d,ebx
   10001a69c:	mov    rdx,rbp
   10001a69f:	lea    rcx,[rdi+0x2]
   10001a6a3:	mov    WORD PTR [rdi],ax
   10001a6a6:	call   0x10001f75c
   10001a6ab:	shr    rbx,1
   10001a6ae:	xor    eax,eax
   10001a6b0:	mov    WORD PTR [rdi+rbx*2+0x2],ax
   10001a6b5:	mov    rax,r15
   10001a6b8:	mov    rbx,QWORD PTR [rsp+0x40]
   10001a6bd:	mov    rbp,QWORD PTR [rsp+0x48]
   10001a6c2:	mov    rsi,QWORD PTR [rsp+0x50]
   10001a6c7:	add    rsp,0x20
   10001a6cb:	pop    r15
   10001a6cd:	pop    r14
   10001a6cf:	pop    rdi
   10001a6d0:	ret    
   10001a6d1:	nop
   10001a6d2:	nop
   10001a6d3:	nop
   10001a6d4:	nop
   10001a6d5:	nop
   10001a6d6:	nop
   10001a6d7:	nop
   10001a6d8:	nop
   10001a6d9:	nop
   10001a6da:	nop
   10001a6db:	nop
   10001a6dc:	nop
   10001a6dd:	nop
   10001a6de:	nop
   10001a6df:	nop
   10001a6e0:	mov    QWORD PTR [rsp+0x10],rbx
   10001a6e5:	mov    QWORD PTR [rsp+0x18],rbp
   10001a6ea:	mov    QWORD PTR [rsp+0x20],rsi
   10001a6ef:	push   rdi
   10001a6f0:	push   r14
   10001a6f2:	push   r15
   10001a6f4:	sub    rsp,0x30
   10001a6f8:	mov    r14,rcx
   10001a6fb:	mov    r15d,0x80
   10001a701:	or     rbx,0xffffffffffffffff
   10001a705:	inc    rbx
   10001a708:	cmp    WORD PTR [rcx+rbx*2],0x0
   10001a70d:	jne    0x10001a705
   10001a70f:	lea    esi,[rbx+0x80]
   10001a715:	mov    edi,esi
   10001a717:	add    rdi,rdi
   10001a71a:	call   QWORD PTR [rip+0xfffffffffffe6948]        # 0x100001068
   10001a720:	mov    r8,rdi
   10001a723:	mov    rcx,rax
   10001a726:	xor    edx,edx
   10001a728:	call   QWORD PTR [rip+0xfffffffffffe6ac2]        # 0x1000011f0
   10001a72e:	mov    rbp,rax
   10001a731:	test   rax,rax
   10001a734:	je     0x10001a7f6
   10001a73a:	mov    QWORD PTR [rsp+0x50],r12
   10001a73f:	lea    r12,[rip+0xca]        # 0x10001a810
   10001a746:	data16 nop WORD PTR [rax+rax*1+0x0]
   10001a750:	mov    r9d,ebx
   10001a753:	mov    r8,r14
   10001a756:	mov    edx,0x1
   10001a75b:	mov    ecx,0x400
   10001a760:	mov    DWORD PTR [rsp+0x28],0x5
   10001a768:	mov    QWORD PTR [rsp+0x20],r12
   10001a76d:	call   QWORD PTR [rip+0xfffffffffffe6abd]        # 0x100001230
   10001a773:	cmp    eax,0x2
   10001a776:	jne    0x10001a797
   10001a778:	mov    edi,DWORD PTR [rip+0xf7a6]        # 0x100029f24
   10001a77e:	cmp    edi,esi
   10001a780:	ja     0x10001a7aa
   10001a782:	lea    r8d,[rdi+rdi*1]
   10001a786:	lea    rdx,[rip+0xfbd3]        # 0x10002a360
   10001a78d:	mov    rcx,rbp
   10001a790:	call   0x10001f75c
   10001a795:	jmp    0x10001a7a8
   10001a797:	mov    r8d,esi
   10001a79a:	mov    rdx,rbp
   10001a79d:	mov    rcx,r14
   10001a7a0:	call   QWORD PTR [rip+0xfffffffffffe6a62]        # 0x100001208
   10001a7a6:	mov    edi,eax
   10001a7a8:	cmp    edi,esi
   10001a7aa:	jle    0x10001a7ee
   10001a7ac:	add    r15d,r15d
   10001a7af:	lea    esi,[rbx+r15*1]
   10001a7b3:	call   QWORD PTR [rip+0xfffffffffffe68af]        # 0x100001068
   10001a7b9:	mov    r8,rbp
   10001a7bc:	mov    rcx,rax
   10001a7bf:	xor    edx,edx
   10001a7c1:	call   QWORD PTR [rip+0xfffffffffffe6899]        # 0x100001060
   10001a7c7:	mov    edi,esi
   10001a7c9:	add    rdi,rdi
   10001a7cc:	call   QWORD PTR [rip+0xfffffffffffe6896]        # 0x100001068
   10001a7d2:	mov    r8,rdi
   10001a7d5:	mov    rcx,rax
   10001a7d8:	xor    edx,edx
   10001a7da:	call   QWORD PTR [rip+0xfffffffffffe6a10]        # 0x1000011f0
   10001a7e0:	mov    rbp,rax
   10001a7e3:	test   rax,rax
   10001a7e6:	jne    0x10001a750
   10001a7ec:	jmp    0x10001a7f1
   10001a7ee:	mov    rax,rbp
   10001a7f1:	mov    r12,QWORD PTR [rsp+0x50]
   10001a7f6:	mov    rbx,QWORD PTR [rsp+0x58]
   10001a7fb:	mov    rbp,QWORD PTR [rsp+0x60]
   10001a800:	mov    rsi,QWORD PTR [rsp+0x68]
   10001a805:	add    rsp,0x30
   10001a809:	pop    r15
   10001a80b:	pop    r14
   10001a80d:	pop    rdi
   10001a80e:	ret    
   10001a80f:	nop
   10001a810:	and    eax,0x64007e00
   10001a815:	add    BYTE PTR [rax+0x0],dh
   10001a818:	and    eax,0x90000000
   10001a81d:	nop
   10001a81e:	nop
   10001a81f:	nop
   10001a820:	nop
   10001a821:	nop
   10001a822:	nop
   10001a823:	nop
   10001a824:	nop
   10001a825:	nop
   10001a826:	nop
   10001a827:	nop
   10001a828:	nop
   10001a829:	nop
   10001a82a:	nop
   10001a82b:	nop
   10001a82c:	nop
   10001a82d:	nop
   10001a82e:	nop
   10001a82f:	nop
   10001a830:	mov    QWORD PTR [rsp+0x20],rbx
   10001a835:	push   rbp
   10001a836:	push   rsi
   10001a837:	push   rdi
   10001a838:	sub    rsp,0x30
   10001a83c:	mov    rsi,rdx
   10001a83f:	mov    rbp,rcx
   10001a842:	mov    edi,0x80
   10001a847:	call   QWORD PTR [rip+0xfffffffffffe681b]        # 0x100001068
   10001a84d:	xor    edx,edx
   10001a84f:	mov    r8d,0x100
   10001a855:	mov    rcx,rax
   10001a858:	call   QWORD PTR [rip+0xfffffffffffe6992]        # 0x1000011f0
   10001a85e:	mov    rbx,rax
   10001a861:	test   rax,rax
   10001a864:	je     0x10001a95b
   10001a86a:	mov    QWORD PTR [rsp+0x50],r12
   10001a86f:	mov    QWORD PTR [rsp+0x58],r14
   10001a874:	mov    QWORD PTR [rsp+0x60],r15
   10001a879:	lea    r15,[rip+0xf6c0]        # 0x100029f40
   10001a880:	lea    r12,[rip+0xf8c9]        # 0x10002a150
   10001a887:	mov    r14d,0xffff
   10001a88d:	nop    DWORD PTR [rax]
   10001a890:	test   rbp,rbp
   10001a893:	je     0x10001a8d5
   10001a895:	test   rsi,rsi
   10001a898:	je     0x10001a8d5
   10001a89a:	lea    r8,[rip+0xc7]        # 0x10001a968
   10001a8a1:	mov    r9,rbx
   10001a8a4:	mov    rdx,rsi
   10001a8a7:	mov    rcx,rbp
   10001a8aa:	mov    QWORD PTR [rsp+0x28],r12
   10001a8af:	mov    DWORD PTR [rsp+0x20],edi
   10001a8b3:	call   QWORD PTR [rip+0xfffffffffffe6957]        # 0x100001210
   10001a8b9:	lea    ecx,[rdi-0x1]
   10001a8bc:	mov    r11d,eax
   10001a8bf:	cmp    eax,ecx
   10001a8c1:	je     0x10001a8d0
   10001a8c3:	cmp    WORD PTR [rbx],r14w
   10001a8c7:	jne    0x10001a8d0
   10001a8c9:	cmp    WORD PTR [rbx+0x2],0x0
   10001a8ce:	je     0x10001a8d5
   10001a8d0:	cmp    eax,0xffffffff
   10001a8d3:	jne    0x10001a8f7
   10001a8d5:	lea    r8,[rip+0x8c]        # 0x10001a968
   10001a8dc:	mov    r9,rbx
   10001a8df:	mov    rdx,rsi
   10001a8e2:	mov    rcx,rbp
   10001a8e5:	mov    QWORD PTR [rsp+0x28],r15
   10001a8ea:	mov    DWORD PTR [rsp+0x20],edi
   10001a8ee:	call   QWORD PTR [rip+0xfffffffffffe691c]        # 0x100001210
   10001a8f4:	mov    r11d,eax
   10001a8f7:	test   rbp,rbp
   10001a8fa:	je     0x10001a904
   10001a8fc:	lea    eax,[rdi-0x1]
   10001a8ff:	test   rsi,rsi
   10001a902:	jne    0x10001a907
   10001a904:	lea    eax,[rdi-0x2]
   10001a907:	cmp    r11d,eax
   10001a90a:	jne    0x10001a949
   10001a90c:	add    edi,edi
   10001a90e:	call   QWORD PTR [rip+0xfffffffffffe6754]        # 0x100001068
   10001a914:	mov    r8,rbx
   10001a917:	mov    rcx,rax
   10001a91a:	xor    edx,edx
   10001a91c:	call   QWORD PTR [rip+0xfffffffffffe673e]        # 0x100001060
   10001a922:	mov    ebx,edi
   10001a924:	add    rbx,rbx
   10001a927:	call   QWORD PTR [rip+0xfffffffffffe673b]        # 0x100001068
   10001a92d:	mov    r8,rbx
   10001a930:	mov    rcx,rax
   10001a933:	xor    edx,edx
   10001a935:	call   QWORD PTR [rip+0xfffffffffffe68b5]        # 0x1000011f0
   10001a93b:	mov    rbx,rax
   10001a93e:	test   rax,rax
   10001a941:	jne    0x10001a890
   10001a947:	jmp    0x10001a94c
   10001a949:	mov    rax,rbx
   10001a94c:	mov    r14,QWORD PTR [rsp+0x58]
   10001a951:	mov    r12,QWORD PTR [rsp+0x50]
   10001a956:	mov    r15,QWORD PTR [rsp+0x60]
   10001a95b:	mov    rbx,QWORD PTR [rsp+0x68]
   10001a960:	add    rsp,0x30
   10001a964:	pop    rdi
   10001a965:	pop    rsi
   10001a966:	pop    rbp
   10001a967:	ret    
   10001a968:	(bad)  
   10001a969:	inc    DWORD PTR [rax]
   10001a96b:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001a971:	nop
   10001a972:	nop
   10001a973:	nop
   10001a974:	nop
   10001a975:	nop
   10001a976:	nop
   10001a977:	nop
   10001a978:	nop
   10001a979:	nop
   10001a97a:	nop
   10001a97b:	nop
   10001a97c:	nop
   10001a97d:	nop
   10001a97e:	nop
   10001a97f:	nop
   10001a980:	push   rdi
   10001a982:	push   r12
   10001a984:	push   r13
   10001a986:	sub    rsp,0x40
   10001a98a:	mov    r13,rdx
   10001a98d:	mov    r12,rcx
   10001a990:	call   0x10001a830
   10001a995:	mov    rdi,rax
   10001a998:	test   rax,rax
   10001a99b:	je     0x10001aaac
   10001a9a1:	test   r13,r13
   10001a9a4:	je     0x10001aaac
   10001a9aa:	test   r12,r12
   10001a9ad:	je     0x10001aaac
   10001a9b3:	mov    QWORD PTR [rsp+0x60],rbx
   10001a9b8:	mov    QWORD PTR [rsp+0x68],rbp
   10001a9bd:	mov    QWORD PTR [rsp+0x70],rsi
   10001a9c2:	mov    eax,0xffff
   10001a9c7:	mov    QWORD PTR [rsp+0x38],r14
   10001a9cc:	mov    QWORD PTR [rsp+0x30],r15
   10001a9d1:	cmp    WORD PTR [rdi],ax
   10001a9d4:	jne    0x10001aa5d
   10001a9da:	cmp    WORD PTR [rdi+0x2],0x0
   10001a9df:	jne    0x10001aa5d
   10001a9e1:	cmp    DWORD PTR [rip+0xf540],0x0        # 0x100029f28
   10001a9e8:	je     0x10001aa5d
   10001a9ea:	or     rbp,0xffffffffffffffff
   10001a9ee:	mov    rbx,rbp
   10001a9f1:	inc    rbx
   10001a9f4:	cmp    WORD PTR [r12+rbx*2],0x0
   10001a9fa:	jne    0x10001a9f1
   10001a9fc:	mov    rsi,rbp
   10001a9ff:	nop
   10001aa00:	inc    rsi
   10001aa03:	cmp    WORD PTR [r13+rsi*2+0x0],0x0
   10001aa0a:	jne    0x10001aa00
   10001aa0c:	xor    r14d,r14d
   10001aa0f:	lea    r15,[rip+0xe822]        # 0x100029238
   10001aa16:	data16 nop WORD PTR [rax+rax*1+0x0]
   10001aa20:	mov    rcx,QWORD PTR [r15]
   10001aa23:	mov    eax,DWORD PTR [r15+0x8]
   10001aa27:	mov    r9d,ebx
   10001aa2a:	mov    DWORD PTR [rsp+0x28],eax
   10001aa2e:	mov    QWORD PTR [rsp+0x20],rcx
   10001aa33:	mov    r8,r12
   10001aa36:	mov    ecx,0x400
   10001aa3b:	mov    edx,0x1
   10001aa40:	call   QWORD PTR [rip+0xfffffffffffe67ea]        # 0x100001230
   10001aa46:	cmp    eax,0x2
   10001aa49:	je     0x10001aab6
   10001aa4b:	inc    r14d
   10001aa4e:	add    r15,0x20
   10001aa52:	cmp    r14d,0x1
   10001aa56:	jb     0x10001aa20
   10001aa58:	mov    eax,0xffff
   10001aa5d:	test   rdi,rdi
   10001aa60:	je     0x10001aa90
   10001aa62:	cmp    WORD PTR [rdi],ax
   10001aa65:	jne    0x10001aa6e
   10001aa67:	cmp    WORD PTR [rdi+0x2],0x0
   10001aa6c:	je     0x10001aa90
   10001aa6e:	mov    rcx,rdi
   10001aa71:	call   0x10001a6e0
   10001aa76:	mov    rbx,rax
   10001aa79:	call   QWORD PTR [rip+0xfffffffffffe65e9]        # 0x100001068
   10001aa7f:	mov    r8,rdi
   10001aa82:	mov    rcx,rax
   10001aa85:	xor    edx,edx
   10001aa87:	call   QWORD PTR [rip+0xfffffffffffe65d3]        # 0x100001060
   10001aa8d:	mov    rdi,rbx
   10001aa90:	mov    r15,QWORD PTR [rsp+0x30]
   10001aa95:	mov    r14,QWORD PTR [rsp+0x38]
   10001aa9a:	mov    rsi,QWORD PTR [rsp+0x70]
   10001aa9f:	mov    rbp,QWORD PTR [rsp+0x68]
   10001aaa4:	mov    rbx,QWORD PTR [rsp+0x60]
   10001aaa9:	mov    rax,rdi
   10001aaac:	add    rsp,0x40
   10001aab0:	pop    r13
   10001aab2:	pop    r12
   10001aab4:	pop    rdi
   10001aab5:	ret    
   10001aab6:	lea    rcx,[rip+0xe77b]        # 0x100029238
   10001aabd:	movsxd rbx,r14d
   10001aac0:	shl    rbx,0x5
   10001aac4:	add    rbx,rcx
   10001aac7:	mov    rcx,QWORD PTR [rbx+0x10]
   10001aacb:	call   0x10001a6e0
   10001aad0:	test   rax,rax
   10001aad3:	je     0x10001ab2f
   10001aad5:	inc    rbp
   10001aad8:	cmp    WORD PTR [rax+rbp*2],0x0
   10001aadd:	jne    0x10001aad5
   10001aadf:	mov    r9d,ebp
   10001aae2:	mov    r8,rax
   10001aae5:	mov    edx,0x1
   10001aaea:	mov    ecx,0x400
   10001aaef:	mov    DWORD PTR [rsp+0x28],esi
   10001aaf3:	mov    QWORD PTR [rsp+0x20],r13
   10001aaf8:	call   QWORD PTR [rip+0xfffffffffffe6732]        # 0x100001230
   10001aafe:	cmp    eax,0x2
   10001ab01:	jne    0x10001aa58
   10001ab07:	call   QWORD PTR [rip+0xfffffffffffe655b]        # 0x100001068
   10001ab0d:	mov    r8,rdi
   10001ab10:	xor    edx,edx
   10001ab12:	mov    rcx,rax
   10001ab15:	call   QWORD PTR [rip+0xfffffffffffe6545]        # 0x100001060
   10001ab1b:	mov    rdx,QWORD PTR [rbx+0x10]
   10001ab1f:	mov    rcx,r12
   10001ab22:	call   0x10001a830
   10001ab27:	mov    rdi,rax
   10001ab2a:	jmp    0x10001aa58
   10001ab2f:	call   QWORD PTR [rip+0xfffffffffffe6533]        # 0x100001068
   10001ab35:	mov    r8,rdi
   10001ab38:	xor    edx,edx
   10001ab3a:	mov    rcx,rax
   10001ab3d:	call   QWORD PTR [rip+0xfffffffffffe651d]        # 0x100001060
   10001ab43:	xor    edi,edi
   10001ab45:	jmp    0x10001aa90
   10001ab4a:	nop
   10001ab4b:	nop
   10001ab4c:	nop
   10001ab4d:	nop
   10001ab4e:	nop
   10001ab4f:	nop
   10001ab50:	push   rbx
   10001ab52:	sub    rsp,0x20
   10001ab56:	cmp    DWORD PTR [rip+0xf3c3],0x0        # 0x100029f20
   10001ab5d:	mov    rbx,rcx
   10001ab60:	je     0x10001abc5
   10001ab62:	cmp    rcx,0xffffffff80000000
   10001ab69:	je     0x10001abb5
   10001ab6b:	cmp    rcx,0xffffffff80000001
   10001ab72:	je     0x10001abb5
   10001ab74:	cmp    rcx,0xffffffff80000002
   10001ab7b:	je     0x10001abb5
   10001ab7d:	cmp    rcx,0xffffffff80000003
   10001ab84:	je     0x10001abb5
   10001ab86:	cmp    rcx,0xffffffff80000004
   10001ab8d:	je     0x10001abb5
   10001ab8f:	cmp    rcx,0xffffffff80000005
   10001ab96:	je     0x10001abb5
   10001ab98:	cmp    rcx,0xffffffff80000006
   10001ab9f:	je     0x10001abb5
   10001aba1:	call   QWORD PTR [rip+0xfffffffffffe64c1]        # 0x100001068
   10001aba7:	mov    r8,rbx
   10001abaa:	xor    edx,edx
   10001abac:	mov    rcx,rax
   10001abaf:	call   QWORD PTR [rip+0xfffffffffffe64ab]        # 0x100001060
   10001abb5:	xor    ecx,ecx
   10001abb7:	call   QWORD PTR [rip+0xfffffffffffe663b]        # 0x1000011f8
   10001abbd:	xor    eax,eax
   10001abbf:	add    rsp,0x20
   10001abc3:	pop    rbx
   10001abc4:	ret    
   10001abc5:	add    rsp,0x20
   10001abc9:	pop    rbx
   10001abca:	rex.W jmp QWORD PTR [rip+0xfffffffffffe647f]        # 0x100001050
   10001abd1:	nop
   10001abd2:	nop
   10001abd3:	nop
   10001abd4:	nop
   10001abd5:	nop
   10001abd6:	nop
   10001abd7:	nop
   10001abd8:	nop
   10001abd9:	nop
   10001abda:	nop
   10001abdb:	nop
   10001abdc:	nop
   10001abdd:	nop
   10001abde:	nop
   10001abdf:	nop
   10001abe0:	mov    QWORD PTR [rsp+0x8],rcx
   10001abe5:	push   rbx
   10001abe6:	push   rbp
   10001abe7:	push   r12
   10001abe9:	push   r14
   10001abeb:	sub    rsp,0x48
   10001abef:	cmp    DWORD PTR [rip+0xf32a],0x0        # 0x100029f20
   10001abf6:	mov    r14,r9
   10001abf9:	mov    r12,r8
   10001abfc:	mov    ebp,edx
   10001abfe:	mov    rbx,rcx
   10001ac01:	je     0x10001ad8e
   10001ac07:	cmp    QWORD PTR [rsp+0x90],0x0
   10001ac10:	mov    QWORD PTR [rsp+0x40],r15
   10001ac15:	je     0x10001ac1d
   10001ac17:	call   QWORD PTR [rip+0xfffffffffffe65e3]        # 0x100001200
   10001ac1d:	mov    rcx,rbx
   10001ac20:	call   0x10001a440
   10001ac25:	xor    edx,edx
   10001ac27:	mov    rcx,rax
   10001ac2a:	call   0x10001a830
   10001ac2f:	mov    r15,rax
   10001ac32:	mov    rdx,rax
   10001ac35:	test   rax,rax
   10001ac38:	jne    0x10001ac57
   10001ac3a:	lea    ecx,[rax+0x8]
   10001ac3d:	call   QWORD PTR [rip+0xfffffffffffe65b5]        # 0x1000011f8
   10001ac43:	lea    eax,[r15+0x8]
   10001ac47:	mov    r15,QWORD PTR [rsp+0x40]
   10001ac4c:	add    rsp,0x48
   10001ac50:	pop    r14
   10001ac52:	pop    r12
   10001ac54:	pop    rbp
   10001ac55:	pop    rbx
   10001ac56:	ret    
   10001ac57:	movzx  ecx,WORD PTR [rax]
   10001ac5a:	xor    r8d,r8d
   10001ac5d:	mov    QWORD PTR [rsp+0x80],rdi
   10001ac65:	mov    edi,0x103
   10001ac6a:	test   cx,cx
   10001ac6d:	je     0x10001ad58
   10001ac73:	mov    QWORD PTR [rsp+0x78],rsi
   10001ac78:	nop    DWORD PTR [rax+rax*1+0x0]
   10001ac80:	mov    rsi,rdx
   10001ac83:	or     rax,0xffffffffffffffff
   10001ac87:	nop    WORD PTR [rax+rax*1+0x0]
   10001ac90:	inc    rax
   10001ac93:	cmp    WORD PTR [rdx+rax*2],0x0
   10001ac98:	jne    0x10001ac90
   10001ac9a:	mov    ebx,eax
   10001ac9c:	cmp    cx,0x40
   10001aca0:	jne    0x10001acb2
   10001aca2:	cmp    WORD PTR [rdx+0x2],0x0
   10001aca7:	jne    0x10001acb2
   10001aca9:	lea    rsi,[rip+0xfffffffffffe8988]        # 0x100003638
   10001acb0:	xor    ebx,ebx
   10001acb2:	cmp    r8d,ebp
   10001acb5:	je     0x10001accf
   10001acb7:	inc    r8d
   10001acba:	inc    eax
   10001acbc:	lea    rdx,[rdx+rax*2]
   10001acc0:	mov    ecx,eax
   10001acc2:	movzx  ecx,WORD PTR [rdx]
   10001acc5:	test   cx,cx
   10001acc8:	jne    0x10001ac80
   10001acca:	jmp    0x10001ad53
   10001accf:	test   r12,r12
   10001acd2:	je     0x10001ad01
   10001acd4:	lea    eax,[rbx+0x1]
   10001acd7:	cmp    DWORD PTR [r14],eax
   10001acda:	ja     0x10001ace3
   10001acdc:	mov    edi,0xea
   10001ace1:	jmp    0x10001acf8
   10001ace3:	lea    r8d,[rbx*2+0x2]
   10001aceb:	mov    rdx,rsi
   10001acee:	mov    rcx,r12
   10001acf1:	call   0x10001f75c
   10001acf6:	xor    edi,edi
   10001acf8:	mov    DWORD PTR [r14],ebx
   10001acfb:	test   edi,edi
   10001acfd:	jne    0x10001ad53
   10001acff:	jmp    0x10001ad0b
   10001ad01:	test   r14,r14
   10001ad04:	je     0x10001ad53
   10001ad06:	mov    DWORD PTR [r14],ebx
   10001ad09:	xor    edi,edi
   10001ad0b:	mov    r9,QWORD PTR [rsp+0x98]
   10001ad13:	mov    rax,QWORD PTR [rsp+0xa8]
   10001ad1b:	mov    rcx,QWORD PTR [rsp+0xa0]
   10001ad23:	test   r9,r9
   10001ad26:	jne    0x10001ad32
   10001ad28:	test   rcx,rcx
   10001ad2b:	jne    0x10001ad32
   10001ad2d:	test   rax,rax
   10001ad30:	je     0x10001ad53
   10001ad32:	mov    r8,QWORD PTR [rsp+0x90]
   10001ad3a:	mov    QWORD PTR [rsp+0x28],rax
   10001ad3f:	mov    QWORD PTR [rsp+0x20],rcx
   10001ad44:	mov    rcx,QWORD PTR [rsp+0x70]
   10001ad49:	mov    rdx,rsi
   10001ad4c:	call   0x100019dc0
   10001ad51:	mov    edi,eax
   10001ad53:	mov    rsi,QWORD PTR [rsp+0x78]
   10001ad58:	call   QWORD PTR [rip+0xfffffffffffe630a]        # 0x100001068
   10001ad5e:	mov    r8,r15
   10001ad61:	xor    edx,edx
   10001ad63:	mov    rcx,rax
   10001ad66:	call   QWORD PTR [rip+0xfffffffffffe62f4]        # 0x100001060
   10001ad6c:	mov    ecx,edi
   10001ad6e:	call   QWORD PTR [rip+0xfffffffffffe6484]        # 0x1000011f8
   10001ad74:	mov    r15,QWORD PTR [rsp+0x40]
   10001ad79:	mov    eax,edi
   10001ad7b:	mov    rdi,QWORD PTR [rsp+0x80]
   10001ad83:	add    rsp,0x48
   10001ad87:	pop    r14
   10001ad89:	pop    r12
   10001ad8b:	pop    rbp
   10001ad8c:	pop    rbx
   10001ad8d:	ret    
   10001ad8e:	mov    rax,QWORD PTR [rsp+0xa8]
   10001ad96:	mov    QWORD PTR [rsp+0x38],rax
   10001ad9b:	mov    rax,QWORD PTR [rsp+0xa0]
   10001ada3:	mov    QWORD PTR [rsp+0x30],rax
   10001ada8:	mov    rax,QWORD PTR [rsp+0x98]
   10001adb0:	mov    QWORD PTR [rsp+0x28],rax
   10001adb5:	mov    rax,QWORD PTR [rsp+0x90]
   10001adbd:	mov    QWORD PTR [rsp+0x20],rax
   10001adc2:	call   QWORD PTR [rip+0xfffffffffffe6258]        # 0x100001020
   10001adc8:	add    rsp,0x48
   10001adcc:	pop    r14
   10001adce:	pop    r12
   10001add0:	pop    rbp
   10001add1:	pop    rbx
   10001add2:	ret    
   10001add3:	nop
   10001add4:	nop
   10001add5:	nop
   10001add6:	nop
   10001add7:	nop
   10001add8:	nop
   10001add9:	nop
   10001adda:	nop
   10001addb:	nop
   10001addc:	nop
   10001addd:	nop
   10001adde:	nop
   10001addf:	nop
   10001ade0:	push   rdi
   10001ade2:	sub    rsp,0x20
   10001ade6:	mov    rdi,rdx
   10001ade9:	cmp    rcx,0xffffffff80000000
   10001adf0:	je     0x10001aecc
   10001adf6:	cmp    rcx,0xffffffff80000001
   10001adfd:	je     0x10001aecc
   10001ae03:	cmp    rcx,0xffffffff80000002
   10001ae0a:	je     0x10001aecc
   10001ae10:	cmp    rcx,0xffffffff80000003
   10001ae17:	je     0x10001aecc
   10001ae1d:	cmp    rcx,0xffffffff80000004
   10001ae24:	je     0x10001aecc
   10001ae2a:	cmp    rcx,0xffffffff80000005
   10001ae31:	je     0x10001aecc
   10001ae37:	cmp    rcx,0xffffffff80000006
   10001ae3e:	je     0x10001aecc
   10001ae44:	mov    QWORD PTR [rsp+0x30],rbx
   10001ae49:	mov    QWORD PTR [rsp+0x38],rbp
   10001ae4e:	mov    QWORD PTR [rsp+0x40],rsi
   10001ae53:	call   0x10001a440
   10001ae58:	or     rcx,0xffffffffffffffff
   10001ae5c:	mov    rbx,rax
   10001ae5f:	nop
   10001ae60:	inc    rcx
   10001ae63:	cmp    WORD PTR [rax+rcx*2],0x0
   10001ae68:	jne    0x10001ae60
   10001ae6a:	lea    rbp,[rcx*2+0x2]
   10001ae72:	call   QWORD PTR [rip+0xfffffffffffe61f0]        # 0x100001068
   10001ae78:	mov    r8,rbp
   10001ae7b:	mov    rcx,rax
   10001ae7e:	xor    edx,edx
   10001ae80:	call   QWORD PTR [rip+0xfffffffffffe636a]        # 0x1000011f0
   10001ae86:	mov    rsi,rax
   10001ae89:	test   rax,rax
   10001ae8c:	jne    0x10001aeaf
   10001ae8e:	lea    ecx,[rax+0x8]
   10001ae91:	call   QWORD PTR [rip+0xfffffffffffe6361]        # 0x1000011f8
   10001ae97:	lea    eax,[rsi+0x8]
   10001ae9a:	mov    rbp,QWORD PTR [rsp+0x38]
   10001ae9f:	mov    rbx,QWORD PTR [rsp+0x30]
   10001aea4:	mov    rsi,QWORD PTR [rsp+0x40]
   10001aea9:	add    rsp,0x20
   10001aead:	pop    rdi
   10001aeae:	ret    
   10001aeaf:	mov    r8d,ebp
   10001aeb2:	mov    rdx,rbx
   10001aeb5:	mov    rcx,rax
   10001aeb8:	call   0x10001f75c
   10001aebd:	xor    ecx,ecx
   10001aebf:	mov    QWORD PTR [rdi],rsi
   10001aec2:	call   QWORD PTR [rip+0xfffffffffffe6330]        # 0x1000011f8
   10001aec8:	xor    eax,eax
   10001aeca:	jmp    0x10001ae9a
   10001aecc:	mov    QWORD PTR [rdx],rcx
   10001aecf:	xor    ecx,ecx
   10001aed1:	call   QWORD PTR [rip+0xfffffffffffe6321]        # 0x1000011f8
   10001aed7:	xor    eax,eax
   10001aed9:	add    rsp,0x20
   10001aedd:	pop    rdi
   10001aede:	ret    
   10001aedf:	nop
   10001aee0:	nop
   10001aee1:	nop
   10001aee2:	nop
   10001aee3:	nop
   10001aee4:	nop
   10001aee5:	nop
   10001aee6:	nop
   10001aee7:	nop
   10001aee8:	nop
   10001aee9:	nop
   10001aeea:	nop
   10001aeeb:	nop
   10001aeec:	nop
   10001aeed:	nop
   10001aeee:	nop
   10001aeef:	nop
   10001aef0:	push   r14
   10001aef2:	sub    rsp,0x20
   10001aef6:	cmp    DWORD PTR [rip+0xf023],0x0        # 0x100029f20
   10001aefd:	mov    r14,r8
   10001af00:	je     0x10001b003
   10001af06:	test   rdx,rdx
   10001af09:	je     0x10001aff5
   10001af0f:	cmp    WORD PTR [rdx],0x0
   10001af13:	je     0x10001aff5
   10001af19:	mov    QWORD PTR [rsp+0x30],rbx
   10001af1e:	mov    QWORD PTR [rsp+0x38],rsi
   10001af23:	call   0x10001a610
   10001af28:	mov    rsi,rax
   10001af2b:	test   rax,rax
   10001af2e:	jne    0x10001af50
   10001af30:	mov    ebx,0x8
   10001af35:	mov    ecx,ebx
   10001af37:	call   QWORD PTR [rip+0xfffffffffffe62bb]        # 0x1000011f8
   10001af3d:	mov    rsi,QWORD PTR [rsp+0x38]
   10001af42:	mov    eax,ebx
   10001af44:	mov    rbx,QWORD PTR [rsp+0x30]
   10001af49:	add    rsp,0x20
   10001af4d:	pop    r14
   10001af4f:	ret    
   10001af50:	xor    edx,edx
   10001af52:	mov    rcx,rax
   10001af55:	mov    QWORD PTR [rsp+0x40],rdi
   10001af5a:	call   0x10001a830
   10001af5f:	mov    rdi,rax
   10001af62:	test   rax,rax
   10001af65:	je     0x10001afbc
   10001af67:	mov    eax,0xffff
   10001af6c:	cmp    WORD PTR [rdi],ax
   10001af6f:	jne    0x10001af7f
   10001af71:	cmp    WORD PTR [rdi+0x2],0x0
   10001af76:	jne    0x10001af7f
   10001af78:	mov    ebx,0x2
   10001af7d:	jmp    0x10001af81
   10001af7f:	xor    ebx,ebx
   10001af81:	call   QWORD PTR [rip+0xfffffffffffe60e1]        # 0x100001068
   10001af87:	mov    r8,rdi
   10001af8a:	xor    edx,edx
   10001af8c:	mov    rcx,rax
   10001af8f:	call   QWORD PTR [rip+0xfffffffffffe60cb]        # 0x100001060
   10001af95:	test   ebx,ebx
   10001af97:	jne    0x10001afc1
   10001af99:	mov    ecx,ebx
   10001af9b:	mov    QWORD PTR [r14],rsi
   10001af9e:	call   QWORD PTR [rip+0xfffffffffffe6254]        # 0x1000011f8
   10001afa4:	mov    rdi,QWORD PTR [rsp+0x40]
   10001afa9:	mov    rsi,QWORD PTR [rsp+0x38]
   10001afae:	mov    eax,ebx
   10001afb0:	mov    rbx,QWORD PTR [rsp+0x30]
   10001afb5:	add    rsp,0x20
   10001afb9:	pop    r14
   10001afbb:	ret    
   10001afbc:	mov    ebx,0x8
   10001afc1:	call   QWORD PTR [rip+0xfffffffffffe60a1]        # 0x100001068
   10001afc7:	mov    r8,rsi
   10001afca:	xor    edx,edx
   10001afcc:	mov    rcx,rax
   10001afcf:	call   QWORD PTR [rip+0xfffffffffffe608b]        # 0x100001060
   10001afd5:	mov    ecx,ebx
   10001afd7:	call   QWORD PTR [rip+0xfffffffffffe621b]        # 0x1000011f8
   10001afdd:	mov    rdi,QWORD PTR [rsp+0x40]
   10001afe2:	mov    rsi,QWORD PTR [rsp+0x38]
   10001afe7:	mov    eax,ebx
   10001afe9:	mov    rbx,QWORD PTR [rsp+0x30]
   10001afee:	add    rsp,0x20
   10001aff2:	pop    r14
   10001aff4:	ret    
   10001aff5:	mov    rdx,r8
   10001aff8:	add    rsp,0x20
   10001affc:	pop    r14
   10001affe:	jmp    0x10001ade0
   10001b003:	add    rsp,0x20
   10001b007:	pop    r14
   10001b009:	rex.W jmp QWORD PTR [rip+0xfffffffffffe6018]        # 0x100001028
   10001b010:	nop
   10001b011:	nop
   10001b012:	nop
   10001b013:	nop
   10001b014:	nop
   10001b015:	nop
   10001b016:	nop
   10001b017:	nop
   10001b018:	nop
   10001b019:	nop
   10001b01a:	nop
   10001b01b:	nop
   10001b01c:	nop
   10001b01d:	nop
   10001b01e:	nop
   10001b01f:	nop
   10001b020:	sub    rsp,0x38
   10001b024:	cmp    DWORD PTR [rip+0xeef5],0x0        # 0x100029f20
   10001b02b:	je     0x10001b03c
   10001b02d:	xor    ecx,ecx
   10001b02f:	call   QWORD PTR [rip+0xfffffffffffe61c3]        # 0x1000011f8
   10001b035:	xor    eax,eax
   10001b037:	add    rsp,0x38
   10001b03b:	ret    
   10001b03c:	mov    eax,DWORD PTR [rsp+0x68]
   10001b040:	mov    DWORD PTR [rsp+0x28],eax
   10001b044:	mov    rax,QWORD PTR [rsp+0x60]
   10001b049:	mov    QWORD PTR [rsp+0x20],rax
   10001b04e:	call   QWORD PTR [rip+0xfffffffffffe5ff4]        # 0x100001048
   10001b054:	add    rsp,0x38
   10001b058:	ret    
   10001b059:	nop
   10001b05a:	nop
   10001b05b:	nop
   10001b05c:	nop
   10001b05d:	nop
   10001b05e:	nop
   10001b05f:	nop
   10001b060:	sub    rsp,0x308
   10001b067:	mov    rax,QWORD PTR [rip+0xe182]        # 0x1000291f0
   10001b06e:	xor    rax,rsp
   10001b071:	mov    QWORD PTR [rsp+0x2f8],rax
   10001b079:	mov    QWORD PTR [rsp+0x280],0x0
   10001b085:	mov    DWORD PTR [rsp+0x250],0x104
   10001b090:	mov    DWORD PTR [rsp+0x25c],0x0
   10001b09b:	mov    QWORD PTR [rsp+0x278],0x0
   10001b0a7:	mov    QWORD PTR [rsp+0x260],0x0
   10001b0b3:	mov    QWORD PTR [rsp+0x268],0x0
   10001b0bf:	mov    QWORD PTR [rsp+0x288],0x0
   10001b0cb:	mov    DWORD PTR [rsp+0x258],0x0
   10001b0d6:	mov    DWORD PTR [rsp+0x274],0x0
   10001b0e1:	mov    DWORD PTR [rsp+0x254],0x409
   10001b0ec:	lea    rax,[rsp+0x280]
   10001b0f4:	mov    QWORD PTR [rsp+0x20],rax
   10001b0f9:	mov    r9d,0x20019
   10001b0ff:	xor    r8d,r8d
   10001b102:	lea    rdx,[rip+0x7f7]        # 0x10001b900
   10001b109:	mov    rcx,0xffffffff80000002
   10001b110:	call   0x100019a90
   10001b115:	mov    DWORD PTR [rsp+0x270],eax
   10001b11c:	cmp    DWORD PTR [rsp+0x270],0x0
   10001b124:	je     0x10001b12b
   10001b126:	jmp    0x10001b81c
   10001b12b:	lea    rax,[rsp+0x250]
   10001b133:	mov    QWORD PTR [rsp+0x28],rax
   10001b138:	lea    rax,[rsp+0x40]
   10001b13d:	mov    QWORD PTR [rsp+0x20],rax
   10001b142:	xor    r9d,r9d
   10001b145:	xor    r8d,r8d
   10001b148:	lea    rdx,[rip+0xfffffffffffe7759]        # 0x1000028a8
   10001b14f:	mov    rcx,QWORD PTR [rsp+0x280]
   10001b157:	call   0x100019dc0
   10001b15c:	mov    DWORD PTR [rsp+0x270],eax
   10001b163:	cmp    DWORD PTR [rsp+0x270],0x0
   10001b16b:	je     0x10001b172
   10001b16d:	jmp    0x10001b81c
   10001b172:	lea    rcx,[rip+0xfffffffffffe8317]        # 0x100003490
   10001b179:	call   QWORD PTR [rip+0xfffffffffffe5f21]        # 0x1000010a0
   10001b17f:	lea    rdx,[rip+0x75a]        # 0x10001b8e0
   10001b186:	mov    rcx,rax
   10001b189:	call   QWORD PTR [rip+0xfffffffffffe60b9]        # 0x100001248
   10001b18f:	mov    QWORD PTR [rsp+0x268],rax
   10001b197:	lea    rcx,[rip+0xfffffffffffe82f2]        # 0x100003490
   10001b19e:	call   QWORD PTR [rip+0xfffffffffffe5efc]        # 0x1000010a0
   10001b1a4:	lea    rdx,[rip+0x71d]        # 0x10001b8c8
   10001b1ab:	mov    rcx,rax
   10001b1ae:	call   QWORD PTR [rip+0xfffffffffffe6094]        # 0x100001248
   10001b1b4:	mov    QWORD PTR [rsp+0x288],rax
   10001b1bc:	cmp    QWORD PTR [rsp+0x268],0x0
   10001b1c5:	je     0x10001b1d2
   10001b1c7:	cmp    QWORD PTR [rsp+0x288],0x0
   10001b1d0:	jne    0x10001b1e2
   10001b1d2:	mov    DWORD PTR [rsp+0x274],0x1
   10001b1dd:	jmp    0x10001b3f7
   10001b1e2:	xor    edx,edx
   10001b1e4:	xor    ecx,ecx
   10001b1e6:	call   QWORD PTR [rsp+0x288]
   10001b1ed:	mov    DWORD PTR [rsp+0x25c],eax
   10001b1f4:	mov    eax,DWORD PTR [rsp+0x25c]
   10001b1fb:	mov    DWORD PTR [rsp+0x250],eax
   10001b202:	lea    rcx,[rsp+0x40]
   10001b207:	call   QWORD PTR [rip+0xfffffffffffe6043]        # 0x100001250
   10001b20d:	mov    ecx,DWORD PTR [rsp+0x250]
   10001b214:	lea    eax,[rcx+rax*1+0x2]
   10001b218:	mov    DWORD PTR [rsp+0x250],eax
   10001b21f:	cmp    QWORD PTR [rsp+0x278],0x0
   10001b228:	je     0x10001b2bf
   10001b22e:	mov    QWORD PTR [rsp+0x290],0x0
   10001b23a:	mov    eax,DWORD PTR [rsp+0x250]
   10001b241:	shl    rax,1
   10001b244:	mov    QWORD PTR [rsp+0x2c8],rax
   10001b24c:	call   QWORD PTR [rip+0xfffffffffffe5e16]        # 0x100001068
   10001b252:	mov    rcx,QWORD PTR [rsp+0x2c8]
   10001b25a:	mov    r9,rcx
   10001b25d:	mov    r8,QWORD PTR [rsp+0x278]
   10001b265:	mov    edx,0x8
   10001b26a:	mov    rcx,rax
   10001b26d:	call   QWORD PTR [rip+0xfffffffffffe5fcd]        # 0x100001240
   10001b273:	mov    QWORD PTR [rsp+0x290],rax
   10001b27b:	cmp    QWORD PTR [rsp+0x290],0x0
   10001b284:	jne    0x10001b2ad
   10001b286:	call   QWORD PTR [rip+0xfffffffffffe5ddc]        # 0x100001068
   10001b28c:	mov    r8,QWORD PTR [rsp+0x278]
   10001b294:	xor    edx,edx
   10001b296:	mov    rcx,rax
   10001b299:	call   QWORD PTR [rip+0xfffffffffffe5dc1]        # 0x100001060
   10001b29f:	mov    QWORD PTR [rsp+0x278],0x0
   10001b2ab:	jmp    0x10001b2bd
   10001b2ad:	mov    rax,QWORD PTR [rsp+0x290]
   10001b2b5:	mov    QWORD PTR [rsp+0x278],rax
   10001b2bd:	jmp    0x10001b2f8
   10001b2bf:	mov    eax,DWORD PTR [rsp+0x250]
   10001b2c6:	shl    rax,1
   10001b2c9:	mov    QWORD PTR [rsp+0x2d0],rax
   10001b2d1:	call   QWORD PTR [rip+0xfffffffffffe5d91]        # 0x100001068
   10001b2d7:	mov    rcx,QWORD PTR [rsp+0x2d0]
   10001b2df:	mov    r8,rcx
   10001b2e2:	mov    edx,0x8
   10001b2e7:	mov    rcx,rax
   10001b2ea:	call   QWORD PTR [rip+0xfffffffffffe5f00]        # 0x1000011f0
   10001b2f0:	mov    QWORD PTR [rsp+0x278],rax
   10001b2f8:	cmp    QWORD PTR [rsp+0x278],0x0
   10001b301:	je     0x10001b320
   10001b303:	mov    rdx,QWORD PTR [rsp+0x278]
   10001b30b:	mov    ecx,DWORD PTR [rsp+0x250]
   10001b312:	call   QWORD PTR [rsp+0x288]
   10001b319:	mov    DWORD PTR [rsp+0x25c],eax
   10001b320:	cmp    QWORD PTR [rsp+0x278],0x0
   10001b329:	je     0x10001b33f
   10001b32b:	mov    eax,DWORD PTR [rsp+0x250]
   10001b332:	cmp    DWORD PTR [rsp+0x25c],eax
   10001b339:	jae    0x10001b1e2
   10001b33f:	cmp    QWORD PTR [rsp+0x278],0x0
   10001b348:	je     0x10001b359
   10001b34a:	mov    rax,QWORD PTR [rsp+0x278]
   10001b352:	movzx  eax,WORD PTR [rax]
   10001b355:	test   eax,eax
   10001b357:	jne    0x10001b383
   10001b359:	lea    rcx,[rsp+0x40]
   10001b35e:	call   QWORD PTR [rsp+0x268]
   10001b365:	mov    DWORD PTR [rsp+0x258],eax
   10001b36c:	cmp    DWORD PTR [rsp+0x258],0x0
   10001b374:	jne    0x10001b381
   10001b376:	mov    DWORD PTR [rsp+0x274],0x1
   10001b381:	jmp    0x10001b3f7
   10001b383:	mov    DWORD PTR [rsp+0x28],0xffffffff
   10001b38b:	lea    rax,[rsp+0x40]
   10001b390:	mov    QWORD PTR [rsp+0x20],rax
   10001b395:	mov    r9d,0xffffffff
   10001b39b:	mov    r8,QWORD PTR [rsp+0x278]
   10001b3a3:	mov    edx,0x1
   10001b3a8:	mov    ecx,DWORD PTR [rsp+0x254]
   10001b3af:	call   QWORD PTR [rip+0xfffffffffffe5e7b]        # 0x100001230
   10001b3b5:	cmp    eax,0x2
   10001b3b8:	je     0x10001b3ec
   10001b3ba:	mov    DWORD PTR [rsp+0x274],0x1
   10001b3c5:	call   QWORD PTR [rip+0xfffffffffffe5c9d]        # 0x100001068
   10001b3cb:	mov    r8,QWORD PTR [rsp+0x278]
   10001b3d3:	xor    edx,edx
   10001b3d5:	mov    rcx,rax
   10001b3d8:	call   QWORD PTR [rip+0xfffffffffffe5c82]        # 0x100001060
   10001b3de:	mov    QWORD PTR [rsp+0x278],0x0
   10001b3ea:	jmp    0x10001b3f7
   10001b3ec:	mov    DWORD PTR [rsp+0x258],0x1
   10001b3f7:	cmp    DWORD PTR [rsp+0x274],0x0
   10001b3ff:	je     0x10001b81c
   10001b405:	xor    r8d,r8d
   10001b408:	xor    edx,edx
   10001b40a:	lea    rcx,[rip+0x4a7]        # 0x10001b8b8
   10001b411:	call   QWORD PTR [rip+0xfffffffffffe5e21]        # 0x100001238
   10001b417:	mov    DWORD PTR [rsp+0x25c],eax
   10001b41e:	mov    eax,DWORD PTR [rsp+0x25c]
   10001b425:	mov    DWORD PTR [rsp+0x250],eax
   10001b42c:	cmp    DWORD PTR [rsp+0x250],0x0
   10001b434:	jne    0x10001b454
   10001b436:	lea    rdx,[rsp+0x40]
   10001b43b:	lea    rcx,[rip+0x476]        # 0x10001b8b8
   10001b442:	call   QWORD PTR [rip+0xfffffffffffe5c30]        # 0x100001078
   10001b448:	mov    DWORD PTR [rsp+0x258],eax
   10001b44f:	jmp    0x10001b81c
   10001b454:	mov    DWORD PTR [rsp+0x2a8],0x0
   10001b45f:	mov    QWORD PTR [rsp+0x2a0],0x0
   10001b46b:	mov    DWORD PTR [rsp+0x298],0x0
   10001b476:	lea    rcx,[rsp+0x40]
   10001b47b:	call   QWORD PTR [rip+0xfffffffffffe5dcf]        # 0x100001250
   10001b481:	add    eax,0x1
   10001b484:	mov    DWORD PTR [rsp+0x29c],eax
   10001b48b:	mov    eax,DWORD PTR [rsp+0x25c]
   10001b492:	mov    DWORD PTR [rsp+0x250],eax
   10001b499:	lea    rcx,[rsp+0x40]
   10001b49e:	call   QWORD PTR [rip+0xfffffffffffe5dac]        # 0x100001250
   10001b4a4:	mov    ecx,DWORD PTR [rsp+0x250]
   10001b4ab:	lea    eax,[rcx+rax*1+0x2]
   10001b4af:	mov    DWORD PTR [rsp+0x250],eax
   10001b4b6:	cmp    QWORD PTR [rsp+0x278],0x0
   10001b4bf:	je     0x10001b556
   10001b4c5:	mov    QWORD PTR [rsp+0x2b0],0x0
   10001b4d1:	mov    eax,DWORD PTR [rsp+0x250]
   10001b4d8:	shl    rax,1
   10001b4db:	mov    QWORD PTR [rsp+0x2d8],rax
   10001b4e3:	call   QWORD PTR [rip+0xfffffffffffe5b7f]        # 0x100001068
   10001b4e9:	mov    rcx,QWORD PTR [rsp+0x2d8]
   10001b4f1:	mov    r9,rcx
   10001b4f4:	mov    r8,QWORD PTR [rsp+0x278]
   10001b4fc:	mov    edx,0x8
   10001b501:	mov    rcx,rax
   10001b504:	call   QWORD PTR [rip+0xfffffffffffe5d36]        # 0x100001240
   10001b50a:	mov    QWORD PTR [rsp+0x2b0],rax
   10001b512:	cmp    QWORD PTR [rsp+0x2b0],0x0
   10001b51b:	jne    0x10001b544
   10001b51d:	call   QWORD PTR [rip+0xfffffffffffe5b45]        # 0x100001068
   10001b523:	mov    r8,QWORD PTR [rsp+0x278]
   10001b52b:	xor    edx,edx
   10001b52d:	mov    rcx,rax
   10001b530:	call   QWORD PTR [rip+0xfffffffffffe5b2a]        # 0x100001060
   10001b536:	mov    QWORD PTR [rsp+0x278],0x0
   10001b542:	jmp    0x10001b554
   10001b544:	mov    rax,QWORD PTR [rsp+0x2b0]
   10001b54c:	mov    QWORD PTR [rsp+0x278],rax
   10001b554:	jmp    0x10001b58f
   10001b556:	mov    eax,DWORD PTR [rsp+0x250]
   10001b55d:	shl    rax,1
   10001b560:	mov    QWORD PTR [rsp+0x2e0],rax
   10001b568:	call   QWORD PTR [rip+0xfffffffffffe5afa]        # 0x100001068
   10001b56e:	mov    rcx,QWORD PTR [rsp+0x2e0]
   10001b576:	mov    r8,rcx
   10001b579:	mov    edx,0x8
   10001b57e:	mov    rcx,rax
   10001b581:	call   QWORD PTR [rip+0xfffffffffffe5c69]        # 0x1000011f0
   10001b587:	mov    QWORD PTR [rsp+0x278],rax
   10001b58f:	cmp    QWORD PTR [rsp+0x278],0x0
   10001b598:	je     0x10001b5be
   10001b59a:	mov    r8d,DWORD PTR [rsp+0x250]
   10001b5a2:	mov    rdx,QWORD PTR [rsp+0x278]
   10001b5aa:	lea    rcx,[rip+0x307]        # 0x10001b8b8
   10001b5b1:	call   QWORD PTR [rip+0xfffffffffffe5c81]        # 0x100001238
   10001b5b7:	mov    DWORD PTR [rsp+0x25c],eax
   10001b5be:	cmp    QWORD PTR [rsp+0x278],0x0
   10001b5c7:	je     0x10001b5dd
   10001b5c9:	mov    eax,DWORD PTR [rsp+0x250]
   10001b5d0:	cmp    DWORD PTR [rsp+0x25c],eax
   10001b5d7:	jae    0x10001b48b
   10001b5dd:	mov    rax,QWORD PTR [rsp+0x278]
   10001b5e5:	mov    QWORD PTR [rsp+0x2a0],rax
   10001b5ed:	mov    eax,DWORD PTR [rsp+0x25c]
   10001b5f4:	add    eax,0x1
   10001b5f7:	mov    DWORD PTR [rsp+0x298],eax
   10001b5fe:	cmp    DWORD PTR [rsp+0x2a8],0x0
   10001b606:	jne    0x10001b73a
   10001b60c:	mov    eax,DWORD PTR [rsp+0x29c]
   10001b613:	cmp    DWORD PTR [rsp+0x298],eax
   10001b61a:	jb     0x10001b73a
   10001b620:	mov    DWORD PTR [rsp+0x2bc],0x0
   10001b62b:	mov    DWORD PTR [rsp+0x2b8],0x0
   10001b636:	mov    WORD PTR [rsp+0x2c0],0x0
   10001b640:	mov    eax,DWORD PTR [rsp+0x2bc]
   10001b647:	mov    rcx,QWORD PTR [rsp+0x2a0]
   10001b64f:	movzx  eax,WORD PTR [rcx+rax*2]
   10001b653:	mov    WORD PTR [rsp+0x2c0],ax
   10001b65b:	movzx  eax,WORD PTR [rsp+0x2c0]
   10001b663:	mov    ecx,DWORD PTR [rsp+0x2bc]
   10001b66a:	movzx  ecx,WORD PTR [rsp+rcx*2+0x40]
   10001b66f:	cmp    eax,ecx
   10001b671:	jne    0x10001b680
   10001b673:	mov    DWORD PTR [rsp+0x2e8],0x1
   10001b67e:	jmp    0x10001b68b
   10001b680:	mov    DWORD PTR [rsp+0x2e8],0x0
   10001b68b:	mov    eax,DWORD PTR [rsp+0x2e8]
   10001b692:	mov    DWORD PTR [rsp+0x2b8],eax
   10001b699:	cmp    DWORD PTR [rsp+0x2b8],0x0
   10001b6a1:	je     0x10001b6ce
   10001b6a3:	mov    eax,DWORD PTR [rsp+0x29c]
   10001b6aa:	sub    eax,0x1
   10001b6ad:	cmp    DWORD PTR [rsp+0x2bc],eax
   10001b6b4:	jne    0x10001b6b8
   10001b6b6:	jmp    0x10001b6ce
   10001b6b8:	mov    eax,DWORD PTR [rsp+0x2bc]
   10001b6bf:	add    eax,0x1
   10001b6c2:	mov    DWORD PTR [rsp+0x2bc],eax
   10001b6c9:	jmp    0x10001b640
   10001b6ce:	cmp    DWORD PTR [rsp+0x2b8],0x0
   10001b6d6:	je     0x10001b6e5
   10001b6d8:	mov    DWORD PTR [rsp+0x2a8],0x1
   10001b6e3:	jmp    0x10001b710
   10001b6e5:	mov    eax,DWORD PTR [rsp+0x29c]
   10001b6ec:	sub    eax,0x1
   10001b6ef:	cmp    DWORD PTR [rsp+0x2bc],eax
   10001b6f6:	jne    0x10001b710
   10001b6f8:	movzx  eax,WORD PTR [rsp+0x2c0]
   10001b700:	cmp    eax,0x3b
   10001b703:	jne    0x10001b710
   10001b705:	mov    DWORD PTR [rsp+0x2a8],0x1
   10001b710:	mov    rax,QWORD PTR [rsp+0x2a0]
   10001b718:	add    rax,0x2
   10001b71c:	mov    QWORD PTR [rsp+0x2a0],rax
   10001b724:	mov    eax,DWORD PTR [rsp+0x298]
   10001b72b:	sub    eax,0x1
   10001b72e:	mov    DWORD PTR [rsp+0x298],eax
   10001b735:	jmp    0x10001b5fe
   10001b73a:	cmp    DWORD PTR [rsp+0x2a8],0x0
   10001b742:	je     0x10001b754
   10001b744:	mov    DWORD PTR [rsp+0x258],0x1
   10001b74f:	jmp    0x10001b81c
   10001b754:	mov    eax,DWORD PTR [rsp+0x250]
   10001b75b:	shl    rax,1
   10001b75e:	mov    QWORD PTR [rsp+0x2f0],rax
   10001b766:	call   QWORD PTR [rip+0xfffffffffffe58fc]        # 0x100001068
   10001b76c:	mov    rcx,QWORD PTR [rsp+0x2f0]
   10001b774:	mov    r8,rcx
   10001b777:	mov    edx,0x8
   10001b77c:	mov    rcx,rax
   10001b77f:	call   QWORD PTR [rip+0xfffffffffffe5a6b]        # 0x1000011f0
   10001b785:	mov    QWORD PTR [rsp+0x260],rax
   10001b78d:	cmp    QWORD PTR [rsp+0x278],0x0
   10001b796:	je     0x10001b81c
   10001b79c:	cmp    QWORD PTR [rsp+0x260],0x0
   10001b7a5:	je     0x10001b81c
   10001b7a7:	mov    eax,DWORD PTR [rsp+0x250]
   10001b7ae:	lea    r8,[rsp+0x40]
   10001b7b3:	mov    rdx,rax
   10001b7b6:	mov    rcx,QWORD PTR [rsp+0x260]
   10001b7be:	call   0x10001b9e0
   10001b7c3:	mov    eax,DWORD PTR [rsp+0x250]
   10001b7ca:	lea    r8,[rip+0xe3]        # 0x10001b8b4
   10001b7d1:	mov    rdx,rax
   10001b7d4:	mov    rcx,QWORD PTR [rsp+0x260]
   10001b7dc:	call   0x10001ba50
   10001b7e1:	mov    eax,DWORD PTR [rsp+0x250]
   10001b7e8:	mov    r8,QWORD PTR [rsp+0x278]
   10001b7f0:	mov    rdx,rax
   10001b7f3:	mov    rcx,QWORD PTR [rsp+0x260]
   10001b7fb:	call   0x10001ba50
   10001b800:	mov    rdx,QWORD PTR [rsp+0x260]
   10001b808:	lea    rcx,[rip+0xa9]        # 0x10001b8b8
   10001b80f:	call   QWORD PTR [rip+0xfffffffffffe5863]        # 0x100001078
   10001b815:	mov    DWORD PTR [rsp+0x258],eax
   10001b81c:	cmp    QWORD PTR [rsp+0x278],0x0
   10001b825:	je     0x10001b84c
   10001b827:	call   QWORD PTR [rip+0xfffffffffffe583b]        # 0x100001068
   10001b82d:	mov    r8,QWORD PTR [rsp+0x278]
   10001b835:	xor    edx,edx
   10001b837:	mov    rcx,rax
   10001b83a:	call   QWORD PTR [rip+0xfffffffffffe5820]        # 0x100001060
   10001b840:	mov    QWORD PTR [rsp+0x278],0x0
   10001b84c:	cmp    QWORD PTR [rsp+0x260],0x0
   10001b855:	je     0x10001b87c
   10001b857:	call   QWORD PTR [rip+0xfffffffffffe580b]        # 0x100001068
   10001b85d:	mov    r8,QWORD PTR [rsp+0x260]
   10001b865:	xor    edx,edx
   10001b867:	mov    rcx,rax
   10001b86a:	call   QWORD PTR [rip+0xfffffffffffe57f0]        # 0x100001060
   10001b870:	mov    QWORD PTR [rsp+0x260],0x0
   10001b87c:	cmp    QWORD PTR [rsp+0x280],0x0
   10001b885:	je     0x10001b894
   10001b887:	mov    rcx,QWORD PTR [rsp+0x280]
   10001b88f:	call   0x10001ab50
   10001b894:	mov    eax,DWORD PTR [rsp+0x258]
   10001b89b:	mov    rcx,QWORD PTR [rsp+0x2f8]
   10001b8a3:	xor    rcx,rsp
   10001b8a6:	call   0x100002610
   10001b8ab:	add    rsp,0x308
   10001b8b2:	ret    
   10001b8b3:	nop
   10001b8b4:	cmp    eax,DWORD PTR [rax]
   10001b8b6:	add    BYTE PTR [rax],al
   10001b8b8:	push   rax
   10001b8b9:	add    BYTE PTR [rcx+0x0],ah
   10001b8bc:	je     0x10001b8be
   10001b8be:	push   0xffffffff90000000
   10001b8c3:	nop
   10001b8c4:	nop
   10001b8c5:	nop
   10001b8c6:	nop
   10001b8c7:	nop
   10001b8c8:	rex.RXB
   10001b8c9:	gs je  0x10001b910
   10001b8cc:	ins    BYTE PTR es:[rdi],dx
   10001b8cd:	ins    BYTE PTR es:[rdi],dx
   10001b8ce:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   10001b8d6:	jns    0x10001b92f
   10001b8d8:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001b8de:	nop
   10001b8df:	nop
   10001b8e0:	push   rbx
   10001b8e1:	gs je  0x10001b928
   10001b8e4:	ins    BYTE PTR es:[rdi],dx
   10001b8e5:	ins    BYTE PTR es:[rdi],dx
   10001b8e6:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   10001b8ee:	jns    0x10001b947
   10001b8f0:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001b8f6:	nop
   10001b8f7:	nop
   10001b8f8:	nop
   10001b8f9:	nop
   10001b8fa:	nop
   10001b8fb:	nop
   10001b8fc:	nop
   10001b8fd:	nop
   10001b8fe:	nop
   10001b8ff:	nop
   10001b900:	push   rbx
   10001b901:	add    BYTE PTR [rdi+0x0],ch
   10001b904:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   10001b909:	add    BYTE PTR [rcx+0x0],ah
   10001b90c:	jb     0x10001b90e
   10001b90e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   10001b913:	add    BYTE PTR [rcx+0x0],ch
   10001b916:	movsxd eax,DWORD PTR [rax]
   10001b918:	jb     0x10001b91a
   10001b91a:	outs   dx,DWORD PTR ds:[rsi]
   10001b91b:	add    BYTE PTR [rbx+0x0],dh
   10001b91e:	outs   dx,DWORD PTR ds:[rsi]
   10001b91f:	add    BYTE PTR [rsi+0x0],ah
   10001b922:	je     0x10001b924
   10001b924:	pop    rsp
   10001b925:	add    BYTE PTR [rbp+0x0],cl
   10001b928:	imul   eax,DWORD PTR [rax],0x720063
   10001b92e:	outs   dx,DWORD PTR ds:[rsi]
   10001b92f:	add    BYTE PTR [rbx+0x0],dh
   10001b932:	outs   dx,DWORD PTR ds:[rsi]
   10001b933:	add    BYTE PTR [rsi+0x0],ah
   10001b936:	je     0x10001b938
   10001b938:	and    BYTE PTR [rax],al
   10001b93a:	push   rbx
   10001b93b:	add    BYTE PTR [rcx+0x0],dl
   10001b93e:	rex.WR add BYTE PTR [rax],r12b
   10001b941:	add    BYTE PTR [rbx+0x0],dl
   10001b944:	add    BYTE PTR gs:[rdx+0x0],dh
   10001b948:	jbe    0x10001b94a
   10001b94a:	add    BYTE PTR gs:[rdx+0x0],dh
   10001b94e:	pop    rsp
   10001b94f:	add    BYTE PTR [rcx],dh
   10001b951:	add    BYTE PTR [rcx],dh
   10001b953:	add    BYTE PTR [rax],dh
   10001b955:	add    BYTE PTR [rax],al
   10001b957:	add    BYTE PTR [rbp+0x48],dl
   10001b95a:	sub    esp,0x30
   10001b95d:	mov    rbp,rdx
   10001b960:	cmp    QWORD PTR [rbp+0x278],0x0
   10001b968:	je     0x10001b98d
   10001b96a:	call   QWORD PTR [rip+0xfffffffffffe56f8]        # 0x100001068
   10001b970:	mov    r8,QWORD PTR [rbp+0x278]
   10001b977:	xor    edx,edx
   10001b979:	mov    rcx,rax
   10001b97c:	call   QWORD PTR [rip+0xfffffffffffe56de]        # 0x100001060
   10001b982:	mov    QWORD PTR [rbp+0x278],0x0
   10001b98d:	cmp    QWORD PTR [rbp+0x260],0x0
   10001b995:	je     0x10001b9ba
   10001b997:	call   QWORD PTR [rip+0xfffffffffffe56cb]        # 0x100001068
   10001b99d:	mov    r8,QWORD PTR [rbp+0x260]
   10001b9a4:	xor    edx,edx
   10001b9a6:	mov    rcx,rax
   10001b9a9:	call   QWORD PTR [rip+0xfffffffffffe56b1]        # 0x100001060
   10001b9af:	mov    QWORD PTR [rbp+0x260],0x0
   10001b9ba:	cmp    QWORD PTR [rbp+0x280],0x0
   10001b9c2:	je     0x10001b9d0
   10001b9c4:	mov    rcx,QWORD PTR [rbp+0x280]
   10001b9cb:	call   0x10001ab50
   10001b9d0:	add    rsp,0x30
   10001b9d4:	pop    rbp
   10001b9d5:	ret    
   10001b9d6:	nop
   10001b9d7:	nop
   10001b9d8:	nop
   10001b9d9:	nop
   10001b9da:	nop
   10001b9db:	nop
   10001b9dc:	nop
   10001b9dd:	nop
   10001b9de:	nop
   10001b9df:	nop
   10001b9e0:	mov    QWORD PTR [rsp+0x18],r8
   10001b9e5:	mov    QWORD PTR [rsp+0x10],rdx
   10001b9ea:	mov    QWORD PTR [rsp+0x8],rcx
   10001b9ef:	sub    rsp,0x48
   10001b9f3:	mov    r8d,0x7fffffff
   10001b9f9:	mov    rdx,QWORD PTR [rsp+0x58]
   10001b9fe:	mov    rcx,QWORD PTR [rsp+0x50]
   10001ba03:	call   0x10001bae0
   10001ba08:	mov    DWORD PTR [rsp+0x30],eax
   10001ba0c:	cmp    DWORD PTR [rsp+0x30],0x0
   10001ba11:	jl     0x10001ba37
   10001ba13:	mov    QWORD PTR [rsp+0x20],0x7ffffffe
   10001ba1c:	mov    r9,QWORD PTR [rsp+0x60]
   10001ba21:	xor    r8d,r8d
   10001ba24:	mov    rdx,QWORD PTR [rsp+0x58]
   10001ba29:	mov    rcx,QWORD PTR [rsp+0x50]
   10001ba2e:	call   0x10001bc50
   10001ba33:	mov    DWORD PTR [rsp+0x30],eax
   10001ba37:	mov    eax,DWORD PTR [rsp+0x30]
   10001ba3b:	add    rsp,0x48
   10001ba3f:	ret    
   10001ba40:	nop
   10001ba41:	nop
   10001ba42:	nop
   10001ba43:	nop
   10001ba44:	nop
   10001ba45:	nop
   10001ba46:	nop
   10001ba47:	nop
   10001ba48:	nop
   10001ba49:	nop
   10001ba4a:	nop
   10001ba4b:	nop
   10001ba4c:	nop
   10001ba4d:	nop
   10001ba4e:	nop
   10001ba4f:	nop
   10001ba50:	mov    QWORD PTR [rsp+0x18],r8
   10001ba55:	mov    QWORD PTR [rsp+0x10],rdx
   10001ba5a:	mov    QWORD PTR [rsp+0x8],rcx
   10001ba5f:	sub    rsp,0x48
   10001ba63:	mov    r9d,0x7fffffff
   10001ba69:	lea    r8,[rsp+0x38]
   10001ba6e:	mov    rdx,QWORD PTR [rsp+0x58]
   10001ba73:	mov    rcx,QWORD PTR [rsp+0x50]
   10001ba78:	call   0x10001bb30
   10001ba7d:	mov    DWORD PTR [rsp+0x30],eax
   10001ba81:	cmp    DWORD PTR [rsp+0x30],0x0
   10001ba86:	jl     0x10001bac3
   10001ba88:	mov    rax,QWORD PTR [rsp+0x38]
   10001ba8d:	mov    rcx,QWORD PTR [rsp+0x58]
   10001ba92:	sub    rcx,rax
   10001ba95:	mov    rax,rcx
   10001ba98:	mov    rcx,QWORD PTR [rsp+0x50]
   10001ba9d:	mov    rdx,QWORD PTR [rsp+0x38]
   10001baa2:	lea    rcx,[rcx+rdx*2]
   10001baa6:	mov    QWORD PTR [rsp+0x20],0x7fffffff
   10001baaf:	mov    r9,QWORD PTR [rsp+0x60]
   10001bab4:	xor    r8d,r8d
   10001bab7:	mov    rdx,rax
   10001baba:	call   0x10001bc50
   10001babf:	mov    DWORD PTR [rsp+0x30],eax
   10001bac3:	mov    eax,DWORD PTR [rsp+0x30]
   10001bac7:	add    rsp,0x48
   10001bacb:	ret    
   10001bacc:	nop
   10001bacd:	nop
   10001bace:	nop
   10001bacf:	nop
   10001bad0:	nop
   10001bad1:	nop
   10001bad2:	nop
   10001bad3:	nop
   10001bad4:	nop
   10001bad5:	nop
   10001bad6:	nop
   10001bad7:	nop
   10001bad8:	nop
   10001bad9:	nop
   10001bada:	nop
   10001badb:	nop
   10001badc:	nop
   10001badd:	nop
   10001bade:	nop
   10001badf:	nop
   10001bae0:	mov    QWORD PTR [rsp+0x18],r8
   10001bae5:	mov    QWORD PTR [rsp+0x10],rdx
   10001baea:	mov    QWORD PTR [rsp+0x8],rcx
   10001baef:	sub    rsp,0x18
   10001baf3:	mov    DWORD PTR [rsp],0x0
   10001bafa:	cmp    QWORD PTR [rsp+0x28],0x0
   10001bb00:	je     0x10001bb0e
   10001bb02:	mov    rax,QWORD PTR [rsp+0x30]
   10001bb07:	cmp    QWORD PTR [rsp+0x28],rax
   10001bb0c:	jbe    0x10001bb15
   10001bb0e:	mov    DWORD PTR [rsp],0x80070057
   10001bb15:	mov    eax,DWORD PTR [rsp]
   10001bb18:	add    rsp,0x18
   10001bb1c:	ret    
   10001bb1d:	nop
   10001bb1e:	nop
   10001bb1f:	nop
   10001bb20:	nop
   10001bb21:	nop
   10001bb22:	nop
   10001bb23:	nop
   10001bb24:	nop
   10001bb25:	nop
   10001bb26:	nop
   10001bb27:	nop
   10001bb28:	nop
   10001bb29:	nop
   10001bb2a:	nop
   10001bb2b:	nop
   10001bb2c:	nop
   10001bb2d:	nop
   10001bb2e:	nop
   10001bb2f:	nop
   10001bb30:	mov    QWORD PTR [rsp+0x20],r9
   10001bb35:	mov    QWORD PTR [rsp+0x18],r8
   10001bb3a:	mov    QWORD PTR [rsp+0x10],rdx
   10001bb3f:	mov    QWORD PTR [rsp+0x8],rcx
   10001bb44:	sub    rsp,0x38
   10001bb48:	mov    r8,QWORD PTR [rsp+0x58]
   10001bb4d:	mov    rdx,QWORD PTR [rsp+0x48]
   10001bb52:	mov    rcx,QWORD PTR [rsp+0x40]
   10001bb57:	call   0x10001bae0
   10001bb5c:	mov    DWORD PTR [rsp+0x20],eax
   10001bb60:	cmp    DWORD PTR [rsp+0x20],0x0
   10001bb65:	jl     0x10001bb81
   10001bb67:	mov    r8,QWORD PTR [rsp+0x50]
   10001bb6c:	mov    rdx,QWORD PTR [rsp+0x48]
   10001bb71:	mov    rcx,QWORD PTR [rsp+0x40]
   10001bb76:	call   0x10001bba0
   10001bb7b:	mov    DWORD PTR [rsp+0x20],eax
   10001bb7f:	jmp    0x10001bb8d
   10001bb81:	mov    rax,QWORD PTR [rsp+0x50]
   10001bb86:	mov    QWORD PTR [rax],0x0
   10001bb8d:	mov    eax,DWORD PTR [rsp+0x20]
   10001bb91:	add    rsp,0x38
   10001bb95:	ret    
   10001bb96:	nop
   10001bb97:	nop
   10001bb98:	nop
   10001bb99:	nop
   10001bb9a:	nop
   10001bb9b:	nop
   10001bb9c:	nop
   10001bb9d:	nop
   10001bb9e:	nop
   10001bb9f:	nop
   10001bba0:	mov    QWORD PTR [rsp+0x18],r8
   10001bba5:	mov    QWORD PTR [rsp+0x10],rdx
   10001bbaa:	mov    QWORD PTR [rsp+0x8],rcx
   10001bbaf:	sub    rsp,0x18
   10001bbb3:	mov    DWORD PTR [rsp+0x8],0x0
   10001bbbb:	mov    rax,QWORD PTR [rsp+0x28]
   10001bbc0:	mov    QWORD PTR [rsp],rax
   10001bbc4:	cmp    QWORD PTR [rsp+0x28],0x0
   10001bbca:	je     0x10001bbf6
   10001bbcc:	mov    rax,QWORD PTR [rsp+0x20]
   10001bbd1:	movzx  eax,WORD PTR [rax]
   10001bbd4:	test   eax,eax
   10001bbd6:	je     0x10001bbf6
   10001bbd8:	mov    rax,QWORD PTR [rsp+0x20]
   10001bbdd:	add    rax,0x2
   10001bbe1:	mov    QWORD PTR [rsp+0x20],rax
   10001bbe6:	mov    rax,QWORD PTR [rsp+0x28]
   10001bbeb:	sub    rax,0x1
   10001bbef:	mov    QWORD PTR [rsp+0x28],rax
   10001bbf4:	jmp    0x10001bbc4
   10001bbf6:	cmp    QWORD PTR [rsp+0x28],0x0
   10001bbfc:	jne    0x10001bc06
   10001bbfe:	mov    DWORD PTR [rsp+0x8],0x80070057
   10001bc06:	cmp    QWORD PTR [rsp+0x30],0x0
   10001bc0c:	je     0x10001bc3a
   10001bc0e:	cmp    DWORD PTR [rsp+0x8],0x0
   10001bc13:	jl     0x10001bc2e
   10001bc15:	mov    rax,QWORD PTR [rsp+0x28]
   10001bc1a:	mov    rcx,QWORD PTR [rsp]
   10001bc1e:	sub    rcx,rax
   10001bc21:	mov    rax,rcx
   10001bc24:	mov    rcx,QWORD PTR [rsp+0x30]
   10001bc29:	mov    QWORD PTR [rcx],rax
   10001bc2c:	jmp    0x10001bc3a
   10001bc2e:	mov    rax,QWORD PTR [rsp+0x30]
   10001bc33:	mov    QWORD PTR [rax],0x0
   10001bc3a:	mov    eax,DWORD PTR [rsp+0x8]
   10001bc3e:	add    rsp,0x18
   10001bc42:	ret    
   10001bc43:	nop
   10001bc44:	nop
   10001bc45:	nop
   10001bc46:	nop
   10001bc47:	nop
   10001bc48:	nop
   10001bc49:	nop
   10001bc4a:	nop
   10001bc4b:	nop
   10001bc4c:	nop
   10001bc4d:	nop
   10001bc4e:	nop
   10001bc4f:	nop
   10001bc50:	mov    QWORD PTR [rsp+0x20],r9
   10001bc55:	mov    QWORD PTR [rsp+0x18],r8
   10001bc5a:	mov    QWORD PTR [rsp+0x10],rdx
   10001bc5f:	mov    QWORD PTR [rsp+0x8],rcx
   10001bc64:	sub    rsp,0x18
   10001bc68:	mov    DWORD PTR [rsp+0x8],0x0
   10001bc70:	mov    QWORD PTR [rsp],0x0
   10001bc78:	cmp    QWORD PTR [rsp+0x28],0x0
   10001bc7e:	je     0x10001bcea
   10001bc80:	cmp    QWORD PTR [rsp+0x40],0x0
   10001bc86:	je     0x10001bcea
   10001bc88:	mov    rax,QWORD PTR [rsp+0x38]
   10001bc8d:	movzx  eax,WORD PTR [rax]
   10001bc90:	test   eax,eax
   10001bc92:	je     0x10001bcea
   10001bc94:	mov    rax,QWORD PTR [rsp+0x20]
   10001bc99:	mov    rcx,QWORD PTR [rsp+0x38]
   10001bc9e:	movzx  ecx,WORD PTR [rcx]
   10001bca1:	mov    WORD PTR [rax],cx
   10001bca4:	mov    rax,QWORD PTR [rsp+0x20]
   10001bca9:	add    rax,0x2
   10001bcad:	mov    QWORD PTR [rsp+0x20],rax
   10001bcb2:	mov    rax,QWORD PTR [rsp+0x38]
   10001bcb7:	add    rax,0x2
   10001bcbb:	mov    QWORD PTR [rsp+0x38],rax
   10001bcc0:	mov    rax,QWORD PTR [rsp+0x28]
   10001bcc5:	sub    rax,0x1
   10001bcc9:	mov    QWORD PTR [rsp+0x28],rax
   10001bcce:	mov    rax,QWORD PTR [rsp+0x40]
   10001bcd3:	sub    rax,0x1
   10001bcd7:	mov    QWORD PTR [rsp+0x40],rax
   10001bcdc:	mov    rax,QWORD PTR [rsp]
   10001bce0:	add    rax,0x1
   10001bce4:	mov    QWORD PTR [rsp],rax
   10001bce8:	jmp    0x10001bc78
   10001bcea:	cmp    QWORD PTR [rsp+0x28],0x0
   10001bcf0:	jne    0x10001bd14
   10001bcf2:	mov    rax,QWORD PTR [rsp+0x20]
   10001bcf7:	sub    rax,0x2
   10001bcfb:	mov    QWORD PTR [rsp+0x20],rax
   10001bd00:	mov    rax,QWORD PTR [rsp]
   10001bd04:	sub    rax,0x1
   10001bd08:	mov    QWORD PTR [rsp],rax
   10001bd0c:	mov    DWORD PTR [rsp+0x8],0x8007007a
   10001bd14:	mov    rax,QWORD PTR [rsp+0x20]
   10001bd19:	mov    WORD PTR [rax],0x0
   10001bd1e:	cmp    QWORD PTR [rsp+0x30],0x0
   10001bd24:	je     0x10001bd32
   10001bd26:	mov    rax,QWORD PTR [rsp+0x30]
   10001bd2b:	mov    rcx,QWORD PTR [rsp]
   10001bd2f:	mov    QWORD PTR [rax],rcx
   10001bd32:	mov    eax,DWORD PTR [rsp+0x8]
   10001bd36:	add    rsp,0x18
   10001bd3a:	ret    
   10001bd3b:	nop
   10001bd3c:	lea    rax,[rip+0xd345]        # 0x100029088
   10001bd43:	jmp    0x10001bd48
   10001bd45:	nop
   10001bd46:	nop
   10001bd47:	nop
   10001bd48:	mov    QWORD PTR [rsp+0x8],rcx
   10001bd4d:	mov    QWORD PTR [rsp+0x10],rdx
   10001bd52:	mov    QWORD PTR [rsp+0x18],r8
   10001bd57:	mov    QWORD PTR [rsp+0x20],r9
   10001bd5c:	sub    rsp,0x68
   10001bd60:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   10001bd66:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   10001bd6c:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   10001bd72:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   10001bd78:	mov    rdx,rax
   10001bd7b:	lea    rcx,[rip+0x65fa]        # 0x10002237c
   10001bd82:	call   0x10001f448
   10001bd87:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   10001bd8d:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   10001bd93:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   10001bd99:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   10001bd9f:	mov    rcx,QWORD PTR [rsp+0x70]
   10001bda4:	mov    rdx,QWORD PTR [rsp+0x78]
   10001bda9:	mov    r8,QWORD PTR [rsp+0x80]
   10001bdb1:	mov    r9,QWORD PTR [rsp+0x88]
   10001bdb9:	add    rsp,0x68
   10001bdbd:	jmp    0x10001bdbf
   10001bdbf:	jmp    rax
   10001bdc1:	nop
   10001bdc2:	nop
   10001bdc3:	nop
   10001bdc4:	nop
   10001bdc5:	nop
   10001bdc6:	nop
   10001bdc7:	nop
   10001bdc8:	nop
   10001bdc9:	nop
   10001bdca:	nop
   10001bdcb:	nop
   10001bdcc:	nop
   10001bdcd:	nop
   10001bdce:	nop
   10001bdcf:	nop
   10001bdd0:	lea    rax,[rip+0xd271]        # 0x100029048
   10001bdd7:	jmp    0x10001bd48
   10001bddc:	lea    rax,[rip+0xd26d]        # 0x100029050
   10001bde3:	jmp    0x10001bd48
   10001bde8:	lea    rax,[rip+0xd269]        # 0x100029058
   10001bdef:	jmp    0x10001bd48
   10001bdf4:	lea    rax,[rip+0xd265]        # 0x100029060
   10001bdfb:	jmp    0x10001bd48
   10001be00:	lea    rax,[rip+0xd261]        # 0x100029068
   10001be07:	jmp    0x10001bd48
   10001be0c:	lea    rax,[rip+0xd25d]        # 0x100029070
   10001be13:	jmp    0x10001bd48
   10001be18:	lea    rax,[rip+0xd259]        # 0x100029078
   10001be1f:	jmp    0x10001bd48
   10001be24:	lea    rax,[rip+0xd255]        # 0x100029080
   10001be2b:	jmp    0x10001bd48
   10001be30:	nop
   10001be31:	nop
   10001be32:	nop
   10001be33:	nop
   10001be34:	nop
   10001be35:	nop
   10001be36:	nop
   10001be37:	nop
   10001be38:	nop
   10001be39:	nop
   10001be3a:	nop
   10001be3b:	nop
   10001be3c:	nop
   10001be3d:	nop
   10001be3e:	nop
   10001be3f:	nop
   10001be40:	mov    QWORD PTR [rsp+0x8],rbx
   10001be45:	push   rdi
   10001be46:	sub    rsp,0x20
   10001be4a:	mov    rdi,rcx
   10001be4d:	lea    rcx,[rip+0xe71c]        # 0x10002a570
   10001be54:	call   0x10001c260
   10001be59:	test   eax,eax
   10001be5b:	jne    0x10001bea2
   10001be5d:	lea    rcx,[rip+0xe70c]        # 0x10002a570
   10001be64:	call   0x10001c4f0
   10001be69:	test   eax,eax
   10001be6b:	je     0x10001bea2
   10001be6d:	lea    rcx,[rip+0xe70c]        # 0x10002a580
   10001be74:	xor    edx,edx
   10001be76:	mov    r8d,0x1b60
   10001be7c:	call   0x10001f80c
   10001be81:	lea    rcx,[rip+0xe6f8]        # 0x10002a580
   10001be88:	call   0x10001d230
   10001be8d:	lea    rcx,[rip+0xe6dc]        # 0x10002a570
   10001be94:	xor    edx,edx
   10001be96:	mov    QWORD PTR [rip+0xe6db],rax        # 0x10002a578
   10001be9d:	call   0x10001c550
   10001bea2:	lea    rcx,[rip+0xe6c7]        # 0x10002a570
   10001bea9:	call   0x10001c280
   10001beae:	test   eax,eax
   10001beb0:	mov    ebx,eax
   10001beb2:	js     0x10001bed1
   10001beb4:	mov    rcx,QWORD PTR [rip+0xe6bd]        # 0x10002a578
   10001bebb:	mov    QWORD PTR [rdi],rcx
   10001bebe:	mov    rdx,QWORD PTR [rcx]
   10001bec1:	call   QWORD PTR [rdx+0x8]
   10001bec4:	mov    eax,ebx
   10001bec6:	mov    rbx,QWORD PTR [rsp+0x30]
   10001becb:	add    rsp,0x20
   10001becf:	pop    rdi
   10001bed0:	ret    
   10001bed1:	mov    QWORD PTR [rdi],0x0
   10001bed8:	mov    rbx,QWORD PTR [rsp+0x30]
   10001bedd:	add    rsp,0x20
   10001bee1:	pop    rdi
   10001bee2:	ret    
   10001bee3:	nop
   10001bee4:	nop
   10001bee5:	nop
   10001bee6:	nop
   10001bee7:	nop
   10001bee8:	nop
   10001bee9:	nop
   10001beea:	nop
   10001beeb:	nop
   10001beec:	nop
   10001beed:	nop
   10001beee:	nop
   10001beef:	nop
   10001bef0:	mov    QWORD PTR [rsp+0x10],rsi
   10001bef5:	push   rdi
   10001bef6:	sub    rsp,0x20
   10001befa:	mov    rsi,rcx
   10001befd:	lea    rcx,[rip+0xe66c]        # 0x10002a570
   10001bf04:	call   0x10001c260
   10001bf09:	test   eax,eax
   10001bf0b:	jne    0x10001bf52
   10001bf0d:	lea    rcx,[rip+0xe65c]        # 0x10002a570
   10001bf14:	call   0x10001c4f0
   10001bf19:	test   eax,eax
   10001bf1b:	je     0x10001bf52
   10001bf1d:	lea    rcx,[rip+0xe65c]        # 0x10002a580
   10001bf24:	xor    edx,edx
   10001bf26:	mov    r8d,0x1b60
   10001bf2c:	call   0x10001f80c
   10001bf31:	lea    rcx,[rip+0xe648]        # 0x10002a580
   10001bf38:	call   0x10001d230
   10001bf3d:	lea    rcx,[rip+0xe62c]        # 0x10002a570
   10001bf44:	xor    edx,edx
   10001bf46:	mov    QWORD PTR [rip+0xe62b],rax        # 0x10002a578
   10001bf4d:	call   0x10001c550
   10001bf52:	lea    rcx,[rip+0xe617]        # 0x10002a570
   10001bf59:	mov    QWORD PTR [rsp+0x30],rbx
   10001bf5e:	call   0x10001c280
   10001bf63:	test   eax,eax
   10001bf65:	mov    edi,eax
   10001bf67:	js     0x10001bf7b
   10001bf69:	mov    rbx,QWORD PTR [rip+0xe608]        # 0x10002a578
   10001bf70:	mov    rcx,rbx
   10001bf73:	mov    rax,QWORD PTR [rbx]
   10001bf76:	call   QWORD PTR [rax+0x8]
   10001bf79:	jmp    0x10001bf7d
   10001bf7b:	xor    ebx,ebx
   10001bf7d:	test   edi,edi
   10001bf7f:	jne    0x10001bf97
   10001bf81:	mov    rdx,rsi
   10001bf84:	mov    rcx,rbx
   10001bf87:	call   0x10001ca00
   10001bf8c:	mov    rdx,QWORD PTR [rbx]
   10001bf8f:	mov    rcx,rbx
   10001bf92:	mov    edi,eax
   10001bf94:	call   QWORD PTR [rdx+0x10]
   10001bf97:	xor    edx,edx
   10001bf99:	mov    r8d,0x8000
   10001bf9f:	mov    rcx,rsi
   10001bfa2:	call   QWORD PTR [rip+0xfffffffffffe52b0]        # 0x100001258
   10001bfa8:	mov    rbx,QWORD PTR [rsp+0x30]
   10001bfad:	mov    rsi,QWORD PTR [rsp+0x38]
   10001bfb2:	mov    eax,edi
   10001bfb4:	add    rsp,0x20
   10001bfb8:	pop    rdi
   10001bfb9:	ret    
   10001bfba:	nop
   10001bfbb:	nop
   10001bfbc:	nop
   10001bfbd:	nop
   10001bfbe:	nop
   10001bfbf:	nop
   10001bfc0:	mov    QWORD PTR [rcx],0x0
   10001bfc7:	mov    rax,rcx
   10001bfca:	ret    
   10001bfcb:	nop
   10001bfcc:	nop
   10001bfcd:	nop
   10001bfce:	nop
   10001bfcf:	nop
   10001bfd0:	nop
   10001bfd1:	nop
   10001bfd2:	nop
   10001bfd3:	nop
   10001bfd4:	nop
   10001bfd5:	nop
   10001bfd6:	nop
   10001bfd7:	nop
   10001bfd8:	nop
   10001bfd9:	nop
   10001bfda:	nop
   10001bfdb:	nop
   10001bfdc:	nop
   10001bfdd:	nop
   10001bfde:	nop
   10001bfdf:	nop
   10001bfe0:	mov    QWORD PTR [rsp+0x8],rbx
   10001bfe5:	push   rdi
   10001bfe6:	sub    rsp,0x30
   10001bfea:	xor    edi,edi
   10001bfec:	mov    QWORD PTR [rsp+0x20],rdi
   10001bff1:	mov    ebx,edi
   10001bff3:	mov    r8,rdx
   10001bff6:	xor    edx,edx
   10001bff8:	mov    rcx,QWORD PTR [rcx]
   10001bffb:	call   QWORD PTR [rip+0xfffffffffffe51ef]        # 0x1000011f0
   10001c001:	mov    QWORD PTR [rsp+0x20],rax
   10001c006:	jmp    0x10001c028
   10001c008:	mov    ebx,eax
   10001c00a:	cmp    eax,0xc00000fd
   10001c00f:	jne    0x10001c017
   10001c011:	call   QWORD PTR [rip+0xfffffffffffe5441]        # 0x100001458
   10001c017:	mov    eax,0x80004005
   10001c01c:	test   ebx,ebx
   10001c01e:	cmovns ebx,eax
   10001c021:	xor    edi,edi
   10001c023:	mov    rax,QWORD PTR [rsp+0x20]
   10001c028:	test   ebx,ebx
   10001c02a:	cmovs  rax,rdi
   10001c02e:	mov    rbx,QWORD PTR [rsp+0x40]
   10001c033:	add    rsp,0x30
   10001c037:	pop    rdi
   10001c038:	ret    
   10001c039:	nop
   10001c03a:	nop
   10001c03b:	nop
   10001c03c:	nop
   10001c03d:	nop
   10001c03e:	nop
   10001c03f:	nop
   10001c040:	sub    rsp,0x28
   10001c044:	mov    r8,rdx
   10001c047:	xor    edx,edx
   10001c049:	mov    rcx,QWORD PTR [rcx]
   10001c04c:	call   QWORD PTR [rip+0xfffffffffffe500e]        # 0x100001060
   10001c052:	jmp    0x10001c062
   10001c054:	cmp    eax,0xc00000fd
   10001c059:	jne    0x10001c062
   10001c05b:	call   QWORD PTR [rip+0xfffffffffffe53f7]        # 0x100001458
   10001c061:	nop
   10001c062:	add    rsp,0x28
   10001c066:	ret    
   10001c067:	nop
   10001c068:	nop
   10001c069:	nop
   10001c06a:	nop
   10001c06b:	nop
   10001c06c:	nop
   10001c06d:	nop
   10001c06e:	nop
   10001c06f:	nop
   10001c070:	mov    QWORD PTR [rcx],0x0
   10001c077:	mov    rax,rcx
   10001c07a:	ret    
   10001c07b:	nop
   10001c07c:	nop
   10001c07d:	nop
   10001c07e:	nop
   10001c07f:	nop
   10001c080:	nop
   10001c081:	nop
   10001c082:	nop
   10001c083:	nop
   10001c084:	nop
   10001c085:	nop
   10001c086:	nop
   10001c087:	nop
   10001c088:	nop
   10001c089:	nop
   10001c08a:	nop
   10001c08b:	nop
   10001c08c:	nop
   10001c08d:	nop
   10001c08e:	nop
   10001c08f:	nop
   10001c090:	mov    QWORD PTR [rsp+0x10],rbx
   10001c095:	mov    QWORD PTR [rsp+0x8],rcx
   10001c09a:	push   rdi
   10001c09b:	sub    rsp,0x20
   10001c09f:	mov    rdi,rcx
   10001c0a2:	xor    ebx,ebx
   10001c0a4:	mov    rcx,QWORD PTR [rcx]
   10001c0a7:	test   rcx,rcx
   10001c0aa:	je     0x10001c0b2
   10001c0ac:	mov    rax,QWORD PTR [rcx]
   10001c0af:	call   QWORD PTR [rax+0x10]
   10001c0b2:	jmp    0x10001c0d2
   10001c0b4:	mov    ebx,eax
   10001c0b6:	cmp    eax,0xc00000fd
   10001c0bb:	jne    0x10001c0c3
   10001c0bd:	call   QWORD PTR [rip+0xfffffffffffe5395]        # 0x100001458
   10001c0c3:	mov    eax,0x80004005
   10001c0c8:	test   ebx,ebx
   10001c0ca:	cmovns ebx,eax
   10001c0cd:	mov    rdi,QWORD PTR [rsp+0x30]
   10001c0d2:	mov    QWORD PTR [rdi],0x0
   10001c0d9:	mov    eax,ebx
   10001c0db:	mov    rbx,QWORD PTR [rsp+0x38]
   10001c0e0:	add    rsp,0x20
   10001c0e4:	pop    rdi
   10001c0e5:	ret    
   10001c0e6:	nop
   10001c0e7:	nop
   10001c0e8:	nop
   10001c0e9:	nop
   10001c0ea:	nop
   10001c0eb:	nop
   10001c0ec:	nop
   10001c0ed:	nop
   10001c0ee:	nop
   10001c0ef:	nop
   10001c0f0:	mov    QWORD PTR [rsp+0x8],rbx
   10001c0f5:	mov    QWORD PTR [rsp+0x10],rsi
   10001c0fa:	push   rdi
   10001c0fb:	sub    rsp,0x20
   10001c0ff:	mov    rdi,rdx
   10001c102:	mov    rsi,rcx
   10001c105:	call   0x10001c090
   10001c10a:	xor    ebx,ebx
   10001c10c:	test   rdi,rdi
   10001c10f:	je     0x10001c11a
   10001c111:	mov    rax,QWORD PTR [rdi]
   10001c114:	mov    rcx,rdi
   10001c117:	call   QWORD PTR [rax+0x8]
   10001c11a:	mov    QWORD PTR [rsi],rdi
   10001c11d:	jmp    0x10001c138
   10001c11f:	mov    ebx,eax
   10001c121:	cmp    eax,0xc00000fd
   10001c126:	jne    0x10001c12e
   10001c128:	call   QWORD PTR [rip+0xfffffffffffe532a]        # 0x100001458
   10001c12e:	mov    eax,0x80004005
   10001c133:	test   ebx,ebx
   10001c135:	cmovns ebx,eax
   10001c138:	mov    eax,ebx
   10001c13a:	mov    rbx,QWORD PTR [rsp+0x30]
   10001c13f:	mov    rsi,QWORD PTR [rsp+0x38]
   10001c144:	add    rsp,0x20
   10001c148:	pop    rdi
   10001c149:	ret    
   10001c14a:	nop
   10001c14b:	nop
   10001c14c:	nop
   10001c14d:	nop
   10001c14e:	nop
   10001c14f:	nop
   10001c150:	mov    QWORD PTR [rcx],0x0
   10001c157:	ret    
   10001c158:	nop
   10001c159:	nop
   10001c15a:	nop
   10001c15b:	nop
   10001c15c:	nop
   10001c15d:	nop
   10001c15e:	nop
   10001c15f:	nop
   10001c160:	mov    rax,QWORD PTR [rcx]
   10001c163:	ret    
   10001c164:	nop
   10001c165:	nop
   10001c166:	nop
   10001c167:	nop
   10001c168:	nop
   10001c169:	nop
   10001c16a:	nop
   10001c16b:	nop
   10001c16c:	nop
   10001c16d:	nop
   10001c16e:	nop
   10001c16f:	nop
   10001c170:	or     r9d,0xffffffff
   10001c174:	test   rdx,rdx
   10001c177:	mov    r10,rcx
   10001c17a:	je     0x10001c1b2
   10001c17c:	lea    r11,[rip+0xfffffffffffe673d]        # 0x1000028c0
   10001c183:	nop    DWORD PTR [rax+0x0]
   10001c18a:	nop    WORD PTR [rax+rax*1+0x0]
   10001c190:	movzx  r8d,BYTE PTR [r10]
   10001c194:	mov    ecx,r9d
   10001c197:	add    r10,0x1
   10001c19b:	xor    r8b,r9b
   10001c19e:	shr    ecx,0x8
   10001c1a1:	movzx  eax,r8b
   10001c1a5:	mov    r9d,DWORD PTR [r11+rax*4]
   10001c1a9:	xor    r9d,ecx
   10001c1ac:	sub    rdx,0x1
   10001c1b0:	jne    0x10001c190
   10001c1b2:	mov    eax,r9d
   10001c1b5:	ret    
   10001c1b6:	nop
   10001c1b7:	nop
   10001c1b8:	nop
   10001c1b9:	nop
   10001c1ba:	nop
   10001c1bb:	nop
   10001c1bc:	nop
   10001c1bd:	nop
   10001c1be:	nop
   10001c1bf:	nop
   10001c1c0:	sub    rsp,0x8
   10001c1c4:	test   rcx,rcx
   10001c1c7:	mov    r8,rcx
   10001c1ca:	je     0x10001c22a
   10001c1cc:	mov    QWORD PTR [rsp],rdi
   10001c1d0:	or     rcx,0xffffffffffffffff
   10001c1d4:	xor    eax,eax
   10001c1d6:	mov    rdi,r8
   10001c1d9:	repnz scas ax,WORD PTR es:[rdi]
   10001c1dc:	mov    edi,0xffffffff
   10001c1e1:	not    rcx
   10001c1e4:	lea    r9,[rcx-0x1]
   10001c1e8:	add    r9,r9
   10001c1eb:	je     0x10001c21f
   10001c1ed:	lea    r10,[rip+0xfffffffffffe66cc]        # 0x1000028c0
   10001c1f4:	nop    WORD PTR [rax+rax*1+0x0]
   10001c1fa:	nop    WORD PTR [rax+rax*1+0x0]
   10001c200:	movzx  edx,BYTE PTR [r8]
   10001c204:	mov    eax,edi
   10001c206:	add    r8,0x1
   10001c20a:	xor    dl,dil
   10001c20d:	shr    eax,0x8
   10001c210:	movzx  ecx,dl
   10001c213:	mov    edi,DWORD PTR [r10+rcx*4]
   10001c217:	xor    edi,eax
   10001c219:	sub    r9,0x1
   10001c21d:	jne    0x10001c200
   10001c21f:	mov    eax,edi
   10001c221:	mov    rdi,QWORD PTR [rsp]
   10001c225:	add    rsp,0x8
   10001c229:	ret    
   10001c22a:	xor    eax,eax
   10001c22c:	add    rsp,0x8
   10001c230:	ret    
   10001c231:	nop
   10001c232:	nop
   10001c233:	nop
   10001c234:	nop
   10001c235:	nop
   10001c236:	nop
   10001c237:	nop
   10001c238:	nop
   10001c239:	nop
   10001c23a:	nop
   10001c23b:	nop
   10001c23c:	nop
   10001c23d:	nop
   10001c23e:	nop
   10001c23f:	nop
   10001c240:	xor    eax,eax
   10001c242:	mov    DWORD PTR [rcx],eax
   10001c244:	mov    DWORD PTR [rcx+0x4],eax
   10001c247:	mov    rax,rcx
   10001c24a:	ret    
   10001c24b:	nop
   10001c24c:	nop
   10001c24d:	nop
   10001c24e:	nop
   10001c24f:	nop
   10001c250:	nop
   10001c251:	nop
   10001c252:	nop
   10001c253:	nop
   10001c254:	nop
   10001c255:	nop
   10001c256:	nop
   10001c257:	nop
   10001c258:	nop
   10001c259:	nop
   10001c25a:	nop
   10001c25b:	nop
   10001c25c:	nop
   10001c25d:	nop
   10001c25e:	nop
   10001c25f:	nop
   10001c260:	mov    edx,DWORD PTR [rcx]
   10001c262:	xor    eax,eax
   10001c264:	cmp    edx,0x2
   10001c267:	sete   al
   10001c26a:	ret    
   10001c26b:	nop
   10001c26c:	nop
   10001c26d:	nop
   10001c26e:	nop
   10001c26f:	nop
   10001c270:	nop
   10001c271:	nop
   10001c272:	nop
   10001c273:	nop
   10001c274:	nop
   10001c275:	nop
   10001c276:	nop
   10001c277:	nop
   10001c278:	nop
   10001c279:	nop
   10001c27a:	nop
   10001c27b:	nop
   10001c27c:	nop
   10001c27d:	nop
   10001c27e:	nop
   10001c27f:	nop
   10001c280:	mov    eax,DWORD PTR [rcx+0x4]
   10001c283:	ret    
   10001c284:	nop
   10001c285:	nop
   10001c286:	nop
   10001c287:	nop
   10001c288:	nop
   10001c289:	nop
   10001c28a:	nop
   10001c28b:	nop
   10001c28c:	nop
   10001c28d:	nop
   10001c28e:	nop
   10001c28f:	nop
   10001c290:	push   rbx
   10001c292:	sub    rsp,0x50
   10001c296:	lea    rcx,[rip+0x63]        # 0x10001c300
   10001c29d:	call   QWORD PTR [rip+0xfffffffffffe4fc5]        # 0x100001268
   10001c2a3:	lea    rdx,[rip+0x3e]        # 0x10001c2e8
   10001c2aa:	mov    rcx,rax
   10001c2ad:	mov    rbx,rax
   10001c2b0:	call   QWORD PTR [rip+0xfffffffffffe4f92]        # 0x100001248
   10001c2b6:	test   rax,rax
   10001c2b9:	mov    QWORD PTR [rip+0xfe20],rax        # 0x10002c0e0
   10001c2c0:	jne    0x10001c2cb
   10001c2c2:	mov    rcx,rbx
   10001c2c5:	call   QWORD PTR [rip+0xfffffffffffe4da5]        # 0x100001070
   10001c2cb:	lea    rcx,[rsp+0x20]
   10001c2d0:	call   QWORD PTR [rip+0xfffffffffffe4f8a]        # 0x100001260
   10001c2d6:	mov    r11d,DWORD PTR [rsp+0x24]
   10001c2db:	mov    DWORD PTR [rip+0xfe06],r11d        # 0x10002c0e8
   10001c2e2:	add    rsp,0x50
   10001c2e6:	pop    rbx
   10001c2e7:	ret    
   10001c2e8:	push   rcx
   10001c2e9:	jne    0x10001c350
   10001c2eb:	jb     0x10001c366
   10001c2ed:	push   rdi
   10001c2ee:	outs   dx,DWORD PTR ds:[rsi]
   10001c2ef:	jb     0x10001c35c
   10001c2f1:	imul   ebp,DWORD PTR [rsi+0x67],0x45746553
   10001c2f8:	js     0x10001c2fa
   10001c2fa:	nop
   10001c2fb:	nop
   10001c2fc:	nop
   10001c2fd:	nop
   10001c2fe:	nop
   10001c2ff:	nop
   10001c300:	jo     0x10001c302
   10001c302:	jae    0x10001c304
   10001c304:	(bad)  
   10001c305:	add    BYTE PTR [rax+0x0],dh
   10001c308:	imul   eax,DWORD PTR [rax],0x64002e
   10001c30e:	ins    BYTE PTR es:[rdi],dx
   10001c30f:	add    BYTE PTR [rax+rax*1+0x0],ch
   10001c313:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001c319:	nop
   10001c31a:	nop
   10001c31b:	nop
   10001c31c:	nop
   10001c31d:	nop
   10001c31e:	nop
   10001c31f:	nop
   10001c320:	mov    QWORD PTR [rsp+0x18],rsi
   10001c325:	push   rdi
   10001c326:	sub    rsp,0x60
   10001c32a:	test   rcx,rcx
   10001c32d:	mov    rsi,rdx
   10001c330:	mov    rdi,rcx
   10001c333:	jne    0x10001c345
   10001c335:	xor    eax,eax
   10001c337:	mov    rsi,QWORD PTR [rsp+0x80]
   10001c33f:	add    rsp,0x60
   10001c343:	pop    rdi
   10001c344:	ret    
   10001c345:	mov    QWORD PTR [rsp+0x70],rbx
   10001c34a:	mov    QWORD PTR [rsp+0x78],rbp
   10001c34f:	mov    eax,0xee
   10001c354:	mov    ebp,0xcc
   10001c359:	test   r8d,r8d
   10001c35c:	mov    rbx,rcx
   10001c35f:	cmovne ebp,eax
   10001c362:	cmp    QWORD PTR [rip+0xfd76],0x0        # 0x10002c0e0
   10001c36a:	je     0x10001c3da
   10001c36c:	mov    QWORD PTR [rsp+0x20],rbx
   10001c371:	call   QWORD PTR [rip+0xfffffffffffe4da1]        # 0x100001118
   10001c377:	lea    rdx,[rsp+0x20]
   10001c37c:	mov    rcx,rax
   10001c37f:	mov    r8d,0x10
   10001c385:	call   QWORD PTR [rip+0xfd55]        # 0x10002c0e0
   10001c38b:	test   eax,eax
   10001c38d:	je     0x10001c3da
   10001c38f:	mov    rax,QWORD PTR [rsp+0x28]
   10001c394:	test   al,0x1
   10001c396:	je     0x10001c3da
   10001c398:	shr    rax,0x4
   10001c39c:	and    eax,0x7ff
   10001c3a1:	test   ebp,eax
   10001c3a3:	je     0x10001c43f
   10001c3a9:	mov    edx,DWORD PTR [rip+0xfd39]        # 0x10002c0e8
   10001c3af:	lea    ecx,[rdx-0x1]
   10001c3b2:	not    rcx
   10001c3b5:	and    rbx,rcx
   10001c3b8:	mov    rcx,rsi
   10001c3bb:	add    rbx,rdx
   10001c3be:	mov    rax,rbx
   10001c3c1:	sub    rax,rdi
   10001c3c4:	cmp    rax,rsi
   10001c3c7:	cmovb  rcx,rax
   10001c3cb:	add    rdi,rcx
   10001c3ce:	sub    rsi,rcx
   10001c3d1:	jne    0x10001c436
   10001c3d3:	mov    eax,0x1
   10001c3d8:	jmp    0x10001c441
   10001c3da:	lea    rdx,[rsp+0x30]
   10001c3df:	mov    r8d,0x30
   10001c3e5:	mov    rcx,rbx
   10001c3e8:	call   QWORD PTR [rip+0xfffffffffffe4dfa]        # 0x1000011e8
   10001c3ee:	cmp    rax,0x30
   10001c3f2:	jne    0x10001c43f
   10001c3f4:	mov    rcx,QWORD PTR [rsp+0x30]
   10001c3f9:	mov    rbx,QWORD PTR [rsp+0x48]
   10001c3fe:	add    rbx,rcx
   10001c401:	cmp    rdi,rbx
   10001c404:	jae    0x10001c436
   10001c406:	cmp    DWORD PTR [rsp+0x50],0x1000
   10001c40e:	jne    0x10001c43f
   10001c410:	mov    eax,DWORD PTR [rsp+0x54]
   10001c414:	test   ebp,eax
   10001c416:	je     0x10001c43f
   10001c418:	bt     eax,0x8
   10001c41c:	jb     0x10001c43f
   10001c41e:	mov    rcx,rsi
   10001c421:	mov    rax,rbx
   10001c424:	sub    rax,rdi
   10001c427:	cmp    rax,rsi
   10001c42a:	cmovb  rcx,rax
   10001c42e:	add    rdi,rcx
   10001c431:	sub    rsi,rcx
   10001c434:	je     0x10001c3d3
   10001c436:	cmp    rbx,rdi
   10001c439:	jbe    0x10001c362
   10001c43f:	xor    eax,eax
   10001c441:	mov    rbx,QWORD PTR [rsp+0x70]
   10001c446:	mov    rbp,QWORD PTR [rsp+0x78]
   10001c44b:	mov    rsi,QWORD PTR [rsp+0x80]
   10001c453:	add    rsp,0x60
   10001c457:	pop    rdi
   10001c458:	ret    
   10001c459:	nop
   10001c45a:	nop
   10001c45b:	nop
   10001c45c:	nop
   10001c45d:	nop
   10001c45e:	nop
   10001c45f:	nop
   10001c460:	mov    QWORD PTR [rsp+0x8],rbx
   10001c465:	mov    QWORD PTR [rsp+0x10],rsi
   10001c46a:	push   rdi
   10001c46b:	sub    rsp,0x30
   10001c46f:	mov    rsi,rcx
   10001c472:	xor    ebx,ebx
   10001c474:	mov    DWORD PTR [rsp+0x20],ebx
   10001c478:	mov    edi,ebx
   10001c47a:	cmp    QWORD PTR [rcx],rbx
   10001c47d:	jne    0x10001c4b0
   10001c47f:	xor    r8d,r8d
   10001c482:	mov    edx,0x10000
   10001c487:	xor    ecx,ecx
   10001c489:	call   QWORD PTR [rip+0xfffffffffffe4de1]        # 0x100001270
   10001c48f:	mov    QWORD PTR [rsi],rax
   10001c492:	test   rax,rax
   10001c495:	jne    0x10001c4b0
   10001c497:	call   QWORD PTR [rip+0xfffffffffffe4c93]        # 0x100001130
   10001c49d:	mov    ebx,eax
   10001c49f:	test   eax,eax
   10001c4a1:	jle    0x10001c4ac
   10001c4a3:	movzx  ebx,ax
   10001c4a6:	or     ebx,0x80070000
   10001c4ac:	mov    DWORD PTR [rsp+0x20],ebx
   10001c4b0:	jmp    0x10001c4cf
   10001c4b2:	mov    edi,eax
   10001c4b4:	cmp    eax,0xc00000fd
   10001c4b9:	jne    0x10001c4c1
   10001c4bb:	call   QWORD PTR [rip+0xfffffffffffe4f97]        # 0x100001458
   10001c4c1:	mov    eax,0x80004005
   10001c4c6:	test   edi,edi
   10001c4c8:	cmovns edi,eax
   10001c4cb:	mov    ebx,DWORD PTR [rsp+0x20]
   10001c4cf:	test   ebx,ebx
   10001c4d1:	cmovns ebx,edi
   10001c4d4:	mov    eax,ebx
   10001c4d6:	mov    rbx,QWORD PTR [rsp+0x40]
   10001c4db:	mov    rsi,QWORD PTR [rsp+0x48]
   10001c4e0:	add    rsp,0x30
   10001c4e4:	pop    rdi
   10001c4e5:	ret    
   10001c4e6:	nop
   10001c4e7:	nop
   10001c4e8:	nop
   10001c4e9:	nop
   10001c4ea:	nop
   10001c4eb:	nop
   10001c4ec:	nop
   10001c4ed:	nop
   10001c4ee:	nop
   10001c4ef:	nop
   10001c4f0:	mov    QWORD PTR [rsp+0x8],rbx
   10001c4f5:	push   rdi
   10001c4f6:	sub    rsp,0x20
   10001c4fa:	mov    rbx,rcx
   10001c4fd:	mov    edi,0x1
   10001c502:	xor    eax,eax
   10001c504:	lock cmpxchg DWORD PTR [rcx],edi
   10001c508:	jne    0x10001c517
   10001c50a:	mov    eax,edi
   10001c50c:	mov    rbx,QWORD PTR [rsp+0x30]
   10001c511:	add    rsp,0x20
   10001c515:	pop    rdi
   10001c516:	ret    
   10001c517:	mov    eax,DWORD PTR [rcx]
   10001c519:	cmp    eax,0x2
   10001c51c:	je     0x10001c531
   10001c51e:	xchg   ax,ax
   10001c520:	mov    ecx,edi
   10001c522:	call   QWORD PTR [rip+0xfffffffffffe4c58]        # 0x100001180
   10001c528:	mov    r11d,DWORD PTR [rbx]
   10001c52b:	cmp    r11d,0x2
   10001c52f:	jne    0x10001c520
   10001c531:	xor    eax,eax
   10001c533:	mov    rbx,QWORD PTR [rsp+0x30]
   10001c538:	add    rsp,0x20
   10001c53c:	pop    rdi
   10001c53d:	ret    
   10001c53e:	nop
   10001c53f:	nop
   10001c540:	nop
   10001c541:	nop
   10001c542:	nop
   10001c543:	nop
   10001c544:	nop
   10001c545:	nop
   10001c546:	nop
   10001c547:	nop
   10001c548:	nop
   10001c549:	nop
   10001c54a:	nop
   10001c54b:	nop
   10001c54c:	nop
   10001c54d:	nop
   10001c54e:	nop
   10001c54f:	nop
   10001c550:	mov    DWORD PTR [rcx+0x4],edx
   10001c553:	mov    eax,0x1
   10001c558:	mov    edx,0x2
   10001c55d:	lock cmpxchg DWORD PTR [rcx],edx
   10001c561:	ret    
   10001c562:	nop
   10001c563:	nop
   10001c564:	nop
   10001c565:	nop
   10001c566:	nop
   10001c567:	nop
   10001c568:	nop
   10001c569:	nop
   10001c56a:	nop
   10001c56b:	nop
   10001c56c:	nop
   10001c56d:	nop
   10001c56e:	nop
   10001c56f:	nop
   10001c570:	mov    QWORD PTR [rsp+0x8],rbx
   10001c575:	mov    QWORD PTR [rsp+0x18],rbp
   10001c57a:	mov    QWORD PTR [rsp+0x20],rsi
   10001c57f:	push   rdi
   10001c580:	sub    rsp,0x30
   10001c584:	xor    ebp,ebp
   10001c586:	test   rdx,rdx
   10001c589:	mov    rbx,r8
   10001c58c:	mov    rdi,rdx
   10001c58f:	mov    rsi,rcx
   10001c592:	mov    QWORD PTR [rsp+0x48],rbp
   10001c597:	je     0x10001c606
   10001c599:	test   rcx,rcx
   10001c59c:	je     0x10001c606
   10001c59e:	test   rbx,rbx
   10001c5a1:	je     0x10001c606
   10001c5a3:	lea    r8d,[rbp+0x1]
   10001c5a7:	mov    rdx,rbx
   10001c5aa:	mov    rcx,rdi
   10001c5ad:	call   0x10001c320
   10001c5b2:	test   eax,eax
   10001c5b4:	jne    0x10001c5bd
   10001c5b6:	mov    eax,0x800703e6
   10001c5bb:	jmp    0x10001c60b
   10001c5bd:	call   QWORD PTR [rip+0xfffffffffffe4b55]        # 0x100001118
   10001c5c3:	mov    r9,rbx
   10001c5c6:	mov    r8,rsi
   10001c5c9:	mov    rcx,rax
   10001c5cc:	lea    rax,[rsp+0x48]
   10001c5d1:	mov    rdx,rdi
   10001c5d4:	mov    QWORD PTR [rsp+0x20],rax
   10001c5d9:	call   QWORD PTR [rip+0xfffffffffffe4c99]        # 0x100001278
   10001c5df:	test   eax,eax
   10001c5e1:	je     0x10001c5f2
   10001c5e3:	cmp    QWORD PTR [rsp+0x48],rbx
   10001c5e8:	mov    eax,0x8007012b
   10001c5ed:	cmove  eax,ebp
   10001c5f0:	jmp    0x10001c60b
   10001c5f2:	call   QWORD PTR [rip+0xfffffffffffe4b38]        # 0x100001130
   10001c5f8:	test   eax,eax
   10001c5fa:	jle    0x10001c60b
   10001c5fc:	movzx  eax,ax
   10001c5ff:	or     eax,0x80070000
   10001c604:	jmp    0x10001c60b
   10001c606:	mov    eax,0x80070057
   10001c60b:	mov    rbx,QWORD PTR [rsp+0x40]
   10001c610:	mov    rbp,QWORD PTR [rsp+0x50]
   10001c615:	mov    rsi,QWORD PTR [rsp+0x58]
   10001c61a:	add    rsp,0x30
   10001c61e:	pop    rdi
   10001c61f:	ret    
   10001c620:	nop
   10001c621:	nop
   10001c622:	nop
   10001c623:	nop
   10001c624:	nop
   10001c625:	nop
   10001c626:	nop
   10001c627:	nop
   10001c628:	nop
   10001c629:	nop
   10001c62a:	nop
   10001c62b:	nop
   10001c62c:	nop
   10001c62d:	nop
   10001c62e:	nop
   10001c62f:	nop
   10001c630:	mov    QWORD PTR [rsp+0x18],r8
   10001c635:	mov    QWORD PTR [rsp+0x20],r9
   10001c63a:	push   rsi
   10001c63b:	push   rdi
   10001c63c:	sub    rsp,0x48
   10001c640:	cmp    rdx,0x7fffffff
   10001c647:	mov    rsi,rdx
   10001c64a:	mov    rdi,rcx
   10001c64d:	jbe    0x10001c65b
   10001c64f:	mov    eax,0x80070057
   10001c654:	add    rsp,0x48
   10001c658:	pop    rdi
   10001c659:	pop    rsi
   10001c65a:	ret    
   10001c65b:	test   rcx,rcx
   10001c65e:	mov    QWORD PTR [rsp+0x40],rbx
   10001c663:	je     0x10001c69b
   10001c665:	mov    rcx,rdx
   10001c668:	xor    edx,edx
   10001c66a:	test   rsi,rsi
   10001c66d:	mov    rax,rdi
   10001c670:	je     0x10001c681
   10001c672:	cmp    WORD PTR [rax],dx
   10001c675:	je     0x10001c68e
   10001c677:	add    rax,0x2
   10001c67b:	sub    rcx,0x1
   10001c67f:	jne    0x10001c672
   10001c681:	mov    edx,0x80070057
   10001c686:	xor    ebx,ebx
   10001c688:	test   edx,edx
   10001c68a:	jns    0x10001c6a2
   10001c68c:	jmp    0x10001c6a0
   10001c68e:	test   rcx,rcx
   10001c691:	je     0x10001c681
   10001c693:	mov    rbx,rsi
   10001c696:	sub    rbx,rcx
   10001c699:	jmp    0x10001c688
   10001c69b:	mov    edx,0x80070057
   10001c6a0:	xor    ebx,ebx
   10001c6a2:	test   edx,edx
   10001c6a4:	js     0x10001c74c
   10001c6aa:	mov    QWORD PTR [rsp+0x38],rbp
   10001c6af:	mov    QWORD PTR [rsp+0x30],r12
   10001c6b4:	lea    r12,[rsp+0x78]
   10001c6b9:	call   0x10001f30c
   10001c6be:	sub    rsi,rbx
   10001c6c1:	lea    rbp,[rdi+rbx*2]
   10001c6c5:	mov    edi,0x0
   10001c6ca:	je     0x10001c6d5
   10001c6cc:	cmp    rsi,0x7fffffff
   10001c6d3:	jbe    0x10001c6da
   10001c6d5:	mov    edi,0x80070057
   10001c6da:	test   edi,edi
   10001c6dc:	js     0x10001c734
   10001c6de:	mov    r8,QWORD PTR [rsp+0x70]
   10001c6e3:	lea    rbx,[rsi-0x1]
   10001c6e7:	mov    r9,rax
   10001c6ea:	mov    rcx,rbp
   10001c6ed:	mov    rdx,rbx
   10001c6f0:	xor    edi,edi
   10001c6f2:	mov    QWORD PTR [rsp+0x20],r12
   10001c6f7:	call   QWORD PTR [rip+0xfffffffffffe4d43]        # 0x100001440
   10001c6fd:	test   eax,eax
   10001c6ff:	js     0x10001c72a
   10001c701:	cdqe   
   10001c703:	cmp    rax,rbx
   10001c706:	ja     0x10001c72a
   10001c708:	cmp    rax,rbx
   10001c70b:	jne    0x10001c734
   10001c70d:	mov    r12,QWORD PTR [rsp+0x30]
   10001c712:	mov    WORD PTR [rbp+rbx*2+0x0],di
   10001c717:	mov    rbp,QWORD PTR [rsp+0x38]
   10001c71c:	mov    rbx,QWORD PTR [rsp+0x40]
   10001c721:	mov    eax,edi
   10001c723:	add    rsp,0x48
   10001c727:	pop    rdi
   10001c728:	pop    rsi
   10001c729:	ret    
   10001c72a:	mov    WORD PTR [rbp+rbx*2+0x0],di
   10001c72f:	mov    edi,0x8007007a
   10001c734:	mov    r12,QWORD PTR [rsp+0x30]
   10001c739:	mov    rbp,QWORD PTR [rsp+0x38]
   10001c73e:	mov    rbx,QWORD PTR [rsp+0x40]
   10001c743:	mov    eax,edi
   10001c745:	add    rsp,0x48
   10001c749:	pop    rdi
   10001c74a:	pop    rsi
   10001c74b:	ret    
   10001c74c:	mov    eax,edx
   10001c74e:	mov    rbx,QWORD PTR [rsp+0x40]
   10001c753:	add    rsp,0x48
   10001c757:	pop    rdi
   10001c758:	pop    rsi
   10001c759:	ret    
   10001c75a:	nop
   10001c75b:	nop
   10001c75c:	nop
   10001c75d:	nop
   10001c75e:	nop
   10001c75f:	nop
   10001c760:	mov    QWORD PTR [rsp+0x8],rbx
   10001c765:	mov    QWORD PTR [rsp+0x10],rbp
   10001c76a:	mov    QWORD PTR [rsp+0x18],rsi
   10001c76f:	push   rdi
   10001c770:	sub    rsp,0x40
   10001c774:	xor    ebx,ebx
   10001c776:	test   r9,r9
   10001c779:	lea    r10d,[r9+r9*1]
   10001c77d:	mov    rdi,r9
   10001c780:	mov    rsi,r8
   10001c783:	mov    r11,rdx
   10001c786:	mov    DWORD PTR [rsp+0x30],r10d
   10001c78b:	mov    rbp,rcx
   10001c78e:	mov    DWORD PTR [rsp+0x68],ebx
   10001c792:	je     0x10001c7e3
   10001c794:	cmp    r9,0x7fffffff
   10001c79b:	ja     0x10001c7e3
   10001c79d:	mov    r8,r9
   10001c7a0:	mov    ecx,0x7ffffffe
   10001c7a5:	mov    rdx,rsi
   10001c7a8:	sub    rcx,r9
   10001c7ab:	lea    r9,[rip+0xfffffffffffe6e86]        # 0x100003638
   10001c7b2:	sub    r9,rsi
   10001c7b5:	lea    rax,[rcx+r8*1]
   10001c7b9:	test   rax,rax
   10001c7bc:	je     0x10001c7d7
   10001c7be:	movzx  eax,WORD PTR [r9+rdx*1]
   10001c7c3:	test   ax,ax
   10001c7c6:	je     0x10001c7d7
   10001c7c8:	mov    WORD PTR [rdx],ax
   10001c7cb:	add    rdx,0x2
   10001c7cf:	sub    r8,0x1
   10001c7d3:	jne    0x10001c7b5
   10001c7d5:	jmp    0x10001c7dc
   10001c7d7:	test   r8,r8
   10001c7da:	jne    0x10001c7e0
   10001c7dc:	sub    rdx,0x2
   10001c7e0:	mov    WORD PTR [rdx],bx
   10001c7e3:	mov    eax,r10d
   10001c7e6:	cmp    rax,rdi
   10001c7e9:	jae    0x10001c7f2
   10001c7eb:	mov    eax,0x80070057
   10001c7f0:	jmp    0x10001c861
   10001c7f2:	lea    rax,[rsp+0x30]
   10001c7f7:	lea    r9,[rsp+0x68]
   10001c7fc:	xor    r8d,r8d
   10001c7ff:	mov    QWORD PTR [rsp+0x28],rax
   10001c804:	mov    rdx,r11
   10001c807:	mov    rcx,rbp
   10001c80a:	mov    QWORD PTR [rsp+0x20],rsi
   10001c80f:	call   QWORD PTR [rip+0xfffffffffffe482b]        # 0x100001040
   10001c815:	test   eax,eax
   10001c817:	jne    0x10001c850
   10001c819:	cmp    DWORD PTR [rsp+0x68],0x1
   10001c81e:	jne    0x10001c849
   10001c820:	mov    eax,DWORD PTR [rsp+0x30]
   10001c824:	test   al,0x1
   10001c826:	jne    0x10001c849
   10001c828:	cmp    eax,0x2
   10001c82b:	jb     0x10001c849
   10001c82d:	shr    rax,1
   10001c830:	cmp    WORD PTR [rsi+rax*2-0x2],bx
   10001c835:	je     0x10001c85f
   10001c837:	cmp    rax,rdi
   10001c83a:	jae    0x10001c842
   10001c83c:	mov    WORD PTR [rsi+rax*2],bx
   10001c840:	jmp    0x10001c85f
   10001c842:	mov    ebx,0x8007007a
   10001c847:	jmp    0x10001c85f
   10001c849:	mov    ebx,0x8007000b
   10001c84e:	jmp    0x10001c85f
   10001c850:	jg     0x10001c856
   10001c852:	mov    ebx,eax
   10001c854:	jmp    0x10001c85f
   10001c856:	movzx  ebx,ax
   10001c859:	or     ebx,0x80070000
   10001c85f:	mov    eax,ebx
   10001c861:	mov    rbx,QWORD PTR [rsp+0x50]
   10001c866:	mov    rbp,QWORD PTR [rsp+0x58]
   10001c86b:	mov    rsi,QWORD PTR [rsp+0x60]
   10001c870:	add    rsp,0x40
   10001c874:	pop    rdi
   10001c875:	ret    
   10001c876:	nop
   10001c877:	nop
   10001c878:	nop
   10001c879:	nop
   10001c87a:	nop
   10001c87b:	nop
   10001c87c:	nop
   10001c87d:	nop
   10001c87e:	nop
   10001c87f:	nop
   10001c880:	mov    rax,QWORD PTR [rcx]
   10001c883:	xor    edx,edx
   10001c885:	rex.W jmp QWORD PTR [rax+0x18]
   10001c889:	nop
   10001c88a:	nop
   10001c88b:	nop
   10001c88c:	nop
   10001c88d:	nop
   10001c88e:	nop
   10001c88f:	nop
   10001c890:	lea    rax,[rcx+0x10]
   10001c894:	ret    
   10001c895:	nop
   10001c896:	nop
   10001c897:	nop
   10001c898:	nop
   10001c899:	nop
   10001c89a:	nop
   10001c89b:	nop
   10001c89c:	nop
   10001c89d:	nop
   10001c89e:	nop
   10001c89f:	nop
   10001c8a0:	push   rbx
   10001c8a2:	sub    rsp,0x20
   10001c8a6:	mov    rax,rdx
   10001c8a9:	xor    ebx,ebx
   10001c8ab:	xor    edx,edx
   10001c8ad:	mov    rcx,rax
   10001c8b0:	call   0x10001c0f0
   10001c8b5:	jmp    0x10001c8d0
   10001c8b7:	mov    ebx,eax
   10001c8b9:	cmp    eax,0xc00000fd
   10001c8be:	jne    0x10001c8c6
   10001c8c0:	call   QWORD PTR [rip+0xfffffffffffe4b92]        # 0x100001458
   10001c8c6:	mov    eax,0x80004005
   10001c8cb:	test   ebx,ebx
   10001c8cd:	cmovns ebx,eax
   10001c8d0:	mov    eax,ebx
   10001c8d2:	add    rsp,0x20
   10001c8d6:	pop    rbx
   10001c8d7:	ret    
   10001c8d8:	nop
   10001c8d9:	nop
   10001c8da:	nop
   10001c8db:	nop
   10001c8dc:	nop
   10001c8dd:	nop
   10001c8de:	nop
   10001c8df:	nop
   10001c8e0:	push   rbx
   10001c8e2:	sub    rsp,0x20
   10001c8e6:	xor    r9d,r9d
   10001c8e9:	lea    rbx,[rip+0xfffffffffffe3710]        # 0x100000000
   10001c8f0:	mov    r10,r8
   10001c8f3:	mov    QWORD PTR [r8],r9
   10001c8f6:	mov    r11,QWORD PTR [rbx+0x2ce0]
   10001c8fd:	cmp    r11,QWORD PTR [rdx]
   10001c900:	jne    0x10001c914
   10001c902:	mov    r11,QWORD PTR [rbx+0x2ce8]
   10001c909:	cmp    r11,QWORD PTR [rdx+0x8]
   10001c90d:	jne    0x10001c914
   10001c90f:	mov    eax,r9d
   10001c912:	jmp    0x10001c919
   10001c914:	sbb    eax,eax
   10001c916:	sbb    eax,0xffffffff
   10001c919:	test   eax,eax
   10001c91b:	jne    0x10001c92e
   10001c91d:	mov    QWORD PTR [r8],rcx
   10001c920:	mov    rax,QWORD PTR [rcx]
   10001c923:	call   QWORD PTR [rax+0x8]
   10001c926:	xor    eax,eax
   10001c928:	add    rsp,0x20
   10001c92c:	pop    rbx
   10001c92d:	ret    
   10001c92e:	mov    r8,QWORD PTR [rbx+0x1c970]
   10001c935:	cmp    r8,QWORD PTR [rdx]
   10001c938:	jne    0x10001c947
   10001c93a:	mov    r8,QWORD PTR [rbx+0x1c978]
   10001c941:	cmp    r8,QWORD PTR [rdx+0x8]
   10001c945:	je     0x10001c94f
   10001c947:	sbb    eax,eax
   10001c949:	sbb    eax,0xffffffff
   10001c94c:	mov    r9d,eax
   10001c94f:	test   r9d,r9d
   10001c952:	jne    0x10001c965
   10001c954:	mov    QWORD PTR [r10],rcx
   10001c957:	mov    rax,QWORD PTR [rcx]
   10001c95a:	call   QWORD PTR [rax+0x8]
   10001c95d:	xor    eax,eax
   10001c95f:	add    rsp,0x20
   10001c963:	pop    rbx
   10001c964:	ret    
   10001c965:	mov    eax,0x80004002
   10001c96a:	add    rsp,0x20
   10001c96e:	pop    rbx
   10001c96f:	ret    
   10001c970:	ja     0x10001c95e
   10001c972:	enter  0x7bf4,0x7d
   10001c976:	mov    ecx,0x42cd8c4d
   10001c97b:	rex (bad) 
   10001c97d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   10001c97e:	pop    rdx
   10001c97f:	stc    
   10001c980:	nop
   10001c981:	nop
   10001c982:	nop
   10001c983:	nop
   10001c984:	nop
   10001c985:	nop
   10001c986:	nop
   10001c987:	nop
   10001c988:	nop
   10001c989:	nop
   10001c98a:	nop
   10001c98b:	nop
   10001c98c:	nop
   10001c98d:	nop
   10001c98e:	nop
   10001c98f:	nop
   10001c990:	mov    eax,0x1
   10001c995:	ret    
   10001c996:	nop
   10001c997:	nop
   10001c998:	nop
   10001c999:	nop
   10001c99a:	nop
   10001c99b:	nop
   10001c99c:	nop
   10001c99d:	nop
   10001c99e:	nop
   10001c99f:	nop
   10001c9a0:	mov    eax,0x1
   10001c9a5:	ret    
   10001c9a6:	nop
   10001c9a7:	nop
   10001c9a8:	nop
   10001c9a9:	nop
   10001c9aa:	nop
   10001c9ab:	nop
   10001c9ac:	nop
   10001c9ad:	nop
   10001c9ae:	nop
   10001c9af:	nop
   10001c9b0:	push   rbx
   10001c9b2:	sub    rsp,0x20
   10001c9b6:	add    rcx,0x8
   10001c9ba:	mov    rbx,rdx
   10001c9bd:	call   0x10001c260
   10001c9c2:	mov    DWORD PTR [rbx],eax
   10001c9c4:	xor    eax,eax
   10001c9c6:	add    rsp,0x20
   10001c9ca:	pop    rbx
   10001c9cb:	ret    
   10001c9cc:	nop
   10001c9cd:	nop
   10001c9ce:	nop
   10001c9cf:	nop
   10001c9d0:	nop
   10001c9d1:	nop
   10001c9d2:	nop
   10001c9d3:	nop
   10001c9d4:	nop
   10001c9d5:	nop
   10001c9d6:	nop
   10001c9d7:	nop
   10001c9d8:	nop
   10001c9d9:	nop
   10001c9da:	nop
   10001c9db:	nop
   10001c9dc:	nop
   10001c9dd:	nop
   10001c9de:	nop
   10001c9df:	nop
   10001c9e0:	mov    eax,DWORD PTR [rcx+0x1b50]
   10001c9e6:	ret    
   10001c9e7:	nop
   10001c9e8:	nop
   10001c9e9:	nop
   10001c9ea:	nop
   10001c9eb:	nop
   10001c9ec:	nop
   10001c9ed:	nop
   10001c9ee:	nop
   10001c9ef:	nop
   10001c9f0:	mov    QWORD PTR [rcx+0x1b58],rdx
   10001c9f7:	xor    eax,eax
   10001c9f9:	ret    
   10001c9fa:	nop
   10001c9fb:	nop
   10001c9fc:	nop
   10001c9fd:	nop
   10001c9fe:	nop
   10001c9ff:	nop
   10001ca00:	mov    rax,QWORD PTR [rcx+0x1b58]
   10001ca07:	test   rax,rax
   10001ca0a:	je     0x10001ca12
   10001ca0c:	mov    rcx,rdx
   10001ca0f:	rex.W jmp rax
   10001ca12:	mov    eax,0x80004001
   10001ca17:	ret    
   10001ca18:	nop
   10001ca19:	nop
   10001ca1a:	nop
   10001ca1b:	nop
   10001ca1c:	nop
   10001ca1d:	nop
   10001ca1e:	nop
   10001ca1f:	nop
   10001ca20:	lea    rax,[rcx+0x1740]
   10001ca27:	ret    
   10001ca28:	nop
   10001ca29:	nop
   10001ca2a:	nop
   10001ca2b:	nop
   10001ca2c:	nop
   10001ca2d:	nop
   10001ca2e:	nop
   10001ca2f:	nop
   10001ca30:	mov    QWORD PTR [rsp+0x8],rbx
   10001ca35:	mov    QWORD PTR [rsp+0x10],rsi
   10001ca3a:	push   rdi
   10001ca3b:	push   r12
   10001ca3d:	push   r13
   10001ca3f:	sub    rsp,0x30
   10001ca43:	mov    r12,r8
   10001ca46:	mov    r13,rdx
   10001ca49:	mov    rdi,rcx
   10001ca4c:	xor    esi,esi
   10001ca4e:	mov    ebx,esi
   10001ca50:	mov    DWORD PTR [rsp+0x20],ebx
   10001ca54:	mov    DWORD PTR [rsp+0x68],esi
   10001ca58:	call   0x10001c160
   10001ca5d:	test   rax,rax
   10001ca60:	je     0x10001cafa
   10001ca66:	mov    QWORD PTR [rsp+0x28],rsi
   10001ca6b:	mov    rcx,rdi
   10001ca6e:	call   0x10001c160
   10001ca73:	mov    r9,QWORD PTR [rax]
   10001ca76:	lea    r8,[rsp+0x28]
   10001ca7b:	lea    rdx,[rip+0xb6]        # 0x10001cb38
   10001ca82:	mov    rcx,rax
   10001ca85:	call   QWORD PTR [r9]
   10001ca88:	mov    ebx,eax
   10001ca8a:	mov    DWORD PTR [rsp+0x20],eax
   10001ca8e:	test   eax,eax
   10001ca90:	js     0x10001cafa
   10001ca92:	mov    rcx,QWORD PTR [rsp+0x28]
   10001ca97:	test   rcx,rcx
   10001ca9a:	je     0x10001caf1
   10001ca9c:	mov    edi,esi
   10001ca9e:	mov    DWORD PTR [rsp+0x24],esi
   10001caa2:	mov    rax,QWORD PTR [rcx]
   10001caa5:	mov    r8,r12
   10001caa8:	mov    rdx,r13
   10001caab:	call   QWORD PTR [rax+0x18]
   10001caae:	mov    ebx,eax
   10001cab0:	mov    DWORD PTR [rsp+0x20],eax
   10001cab4:	jmp    0x10001cadb
   10001cab6:	mov    edi,eax
   10001cab8:	cmp    eax,0xc00000fd
   10001cabd:	jne    0x10001cac5
   10001cabf:	call   QWORD PTR [rip+0xfffffffffffe4993]        # 0x100001458
   10001cac5:	mov    eax,0x80004005
   10001caca:	test   edi,edi
   10001cacc:	cmovns edi,eax
   10001cacf:	mov    DWORD PTR [rsp+0x24],edi
   10001cad3:	mov    ebx,DWORD PTR [rsp+0x20]
   10001cad7:	mov    esi,DWORD PTR [rsp+0x68]
   10001cadb:	test   ebx,ebx
   10001cadd:	cmovns ebx,edi
   10001cae0:	mov    DWORD PTR [rsp+0x20],ebx
   10001cae4:	mov    rcx,QWORD PTR [rsp+0x28]
   10001cae9:	mov    rax,QWORD PTR [rcx]
   10001caec:	call   QWORD PTR [rax+0x10]
   10001caef:	jmp    0x10001cafa
   10001caf1:	mov    ebx,0x80070057
   10001caf6:	mov    DWORD PTR [rsp+0x20],ebx
   10001cafa:	jmp    0x10001cb1b
   10001cafc:	mov    ebx,eax
   10001cafe:	cmp    eax,0xc00000fd
   10001cb03:	jne    0x10001cb0b
   10001cb05:	call   QWORD PTR [rip+0xfffffffffffe494d]        # 0x100001458
   10001cb0b:	mov    eax,0x80004005
   10001cb10:	test   ebx,ebx
   10001cb12:	cmovns ebx,eax
   10001cb15:	mov    esi,ebx
   10001cb17:	mov    ebx,DWORD PTR [rsp+0x20]
   10001cb1b:	test   ebx,ebx
   10001cb1d:	cmovns ebx,esi
   10001cb20:	mov    eax,ebx
   10001cb22:	mov    rbx,QWORD PTR [rsp+0x50]
   10001cb27:	mov    rsi,QWORD PTR [rsp+0x58]
   10001cb2c:	add    rsp,0x30
   10001cb30:	pop    r13
   10001cb32:	pop    r12
   10001cb34:	pop    rdi
   10001cb35:	ret    
   10001cb36:	nop
   10001cb37:	nop
   10001cb38:	xor    al,0x11
   10001cb3a:	sbb    ecx,esp
   10001cb3c:	jmp    0x10001cacd
   10001cb3e:	pop    rdi
   10001cb3f:	rex.WX cdqe 
   10001cb41:	xor    DWORD PTR [rax+0x60],esi
   10001cb44:	xchg   ecx,eax
   10001cb45:	rex.W jns 0x10001cb4f
   10001cb48:	nop
   10001cb49:	nop
   10001cb4a:	nop
   10001cb4b:	nop
   10001cb4c:	nop
   10001cb4d:	nop
   10001cb4e:	nop
   10001cb4f:	nop
   10001cb50:	mov    QWORD PTR [rsp+0x10],rbx
   10001cb55:	mov    QWORD PTR [rsp+0x18],rsi
   10001cb5a:	mov    QWORD PTR [rsp+0x20],rdi
   10001cb5f:	mov    QWORD PTR [rsp+0x8],rcx
   10001cb64:	push   r12
   10001cb66:	sub    rsp,0x30
   10001cb6a:	mov    r12,rdx
   10001cb6d:	mov    rsi,rcx
   10001cb70:	xor    edi,edi
   10001cb72:	mov    DWORD PTR [rsp+0x20],edi
   10001cb76:	add    rcx,0x8
   10001cb7a:	call   0x10001c260
   10001cb7f:	test   eax,eax
   10001cb81:	je     0x10001cc02
   10001cb83:	mov    edx,0x4e20
   10001cb88:	mov    rcx,QWORD PTR [rsi+0x18]
   10001cb8c:	call   QWORD PTR [rip+0xfffffffffffe45f6]        # 0x100001188
   10001cb92:	test   eax,eax
   10001cb94:	je     0x10001cbbc
   10001cb96:	cmp    eax,0x80
   10001cb9b:	je     0x10001cbbc
   10001cb9d:	call   QWORD PTR [rip+0xfffffffffffe458d]        # 0x100001130
   10001cba3:	mov    ebx,eax
   10001cba5:	test   eax,eax
   10001cba7:	jle    0x10001cbb2
   10001cba9:	movzx  ebx,ax
   10001cbac:	or     ebx,0x80070000
   10001cbb2:	mov    rcx,r12
   10001cbb5:	call   0x10001c150
   10001cbba:	jmp    0x10001cc0f
   10001cbbc:	mov    rdx,r12
   10001cbbf:	mov    rcx,rsi
   10001cbc2:	call   0x10001c8a0
   10001cbc7:	mov    ebx,eax
   10001cbc9:	mov    DWORD PTR [rsp+0x20],eax
   10001cbcd:	jmp    0x10001cbf1
   10001cbcf:	mov    edi,eax
   10001cbd1:	cmp    eax,0xc00000fd
   10001cbd6:	jne    0x10001cbde
   10001cbd8:	call   QWORD PTR [rip+0xfffffffffffe487a]        # 0x100001458
   10001cbde:	mov    eax,0x80004005
   10001cbe3:	test   edi,edi
   10001cbe5:	cmovns edi,eax
   10001cbe8:	mov    rsi,QWORD PTR [rsp+0x40]
   10001cbed:	mov    ebx,DWORD PTR [rsp+0x20]
   10001cbf1:	test   ebx,ebx
   10001cbf3:	cmovns ebx,edi
   10001cbf6:	mov    rcx,QWORD PTR [rsi+0x18]
   10001cbfa:	call   QWORD PTR [rip+0xfffffffffffe4680]        # 0x100001280
   10001cc00:	jmp    0x10001cc0f
   10001cc02:	mov    rdx,r12
   10001cc05:	mov    rcx,rsi
   10001cc08:	call   0x10001c8a0
   10001cc0d:	mov    ebx,eax
   10001cc0f:	mov    eax,ebx
   10001cc11:	mov    rbx,QWORD PTR [rsp+0x48]
   10001cc16:	mov    rsi,QWORD PTR [rsp+0x50]
   10001cc1b:	mov    rdi,QWORD PTR [rsp+0x58]
   10001cc20:	add    rsp,0x30
   10001cc24:	pop    r12
   10001cc26:	ret    
   10001cc27:	nop
   10001cc28:	nop
   10001cc29:	nop
   10001cc2a:	nop
   10001cc2b:	nop
   10001cc2c:	nop
   10001cc2d:	nop
   10001cc2e:	nop
   10001cc2f:	nop
   10001cc30:	mov    QWORD PTR [rsp+0x10],rbx
   10001cc35:	mov    QWORD PTR [rsp+0x18],rsi
   10001cc3a:	mov    QWORD PTR [rsp+0x8],rcx
   10001cc3f:	push   rdi
   10001cc40:	sub    rsp,0x30
   10001cc44:	mov    rsi,rcx
   10001cc47:	xor    ebx,ebx
   10001cc49:	mov    DWORD PTR [rsp+0x20],ebx
   10001cc4d:	lea    rax,[rcx+0xe8]
   10001cc54:	cmp    rdx,rax
   10001cc57:	jne    0x10001cc9e
   10001cc59:	mov    edi,ebx
   10001cc5b:	mov    rcx,rdx
   10001cc5e:	call   0x10001dde0
   10001cc63:	mov    ebx,eax
   10001cc65:	mov    DWORD PTR [rsp+0x20],eax
   10001cc69:	jmp    0x10001cc8d
   10001cc6b:	mov    edi,eax
   10001cc6d:	cmp    eax,0xc00000fd
   10001cc72:	jne    0x10001cc7a
   10001cc74:	call   QWORD PTR [rip+0xfffffffffffe47de]        # 0x100001458
   10001cc7a:	mov    eax,0x80004005
   10001cc7f:	test   edi,edi
   10001cc81:	cmovns edi,eax
   10001cc84:	mov    rsi,QWORD PTR [rsp+0x40]
   10001cc89:	mov    ebx,DWORD PTR [rsp+0x20]
   10001cc8d:	test   ebx,ebx
   10001cc8f:	cmovns ebx,edi
   10001cc92:	mov    rcx,QWORD PTR [rsi+0x20]
   10001cc96:	call   QWORD PTR [rip+0xfffffffffffe45e4]        # 0x100001280
   10001cc9c:	jmp    0x10001ccac
   10001cc9e:	test   rdx,rdx
   10001cca1:	je     0x10001ccac
   10001cca3:	add    rcx,0x10
   10001cca7:	call   0x10001c040
   10001ccac:	mov    eax,ebx
   10001ccae:	mov    rbx,QWORD PTR [rsp+0x48]
   10001ccb3:	mov    rsi,QWORD PTR [rsp+0x50]
   10001ccb8:	add    rsp,0x30
   10001ccbc:	pop    rdi
   10001ccbd:	ret    
   10001ccbe:	nop
   10001ccbf:	nop
   10001ccc0:	nop
   10001ccc1:	nop
   10001ccc2:	nop
   10001ccc3:	nop
   10001ccc4:	nop
   10001ccc5:	nop
   10001ccc6:	nop
   10001ccc7:	nop
   10001ccc8:	nop
   10001ccc9:	nop
   10001ccca:	nop
   10001cccb:	nop
   10001cccc:	nop
   10001cccd:	nop
   10001ccce:	nop
   10001cccf:	nop
   10001ccd0:	mov    rdx,QWORD PTR [rcx]
   10001ccd3:	test   rdx,rdx
   10001ccd6:	je     0x10001cd11
   10001ccd8:	mov    eax,DWORD PTR [rdx+0xc]
   10001ccdb:	cmp    QWORD PTR [rcx+0x8],rax
   10001ccdf:	jb     0x10001ccef
   10001cce1:	mov    rax,QWORD PTR [rdx]
   10001cce4:	mov    QWORD PTR [rcx+0x8],0x0
   10001ccec:	mov    QWORD PTR [rcx],rax
   10001ccef:	mov    rdx,QWORD PTR [rcx]
   10001ccf2:	test   rdx,rdx
   10001ccf5:	je     0x10001cd11
   10001ccf7:	mov    r8,QWORD PTR [rcx+0x8]
   10001ccfb:	mov    eax,DWORD PTR [rdx+0xc]
   10001ccfe:	cmp    r8,rax
   10001cd01:	jae    0x10001cd11
   10001cd03:	lea    rax,[r8+0x1]
   10001cd07:	mov    QWORD PTR [rcx+0x8],rax
   10001cd0b:	lea    rax,[rdx+r8*8+0x18]
   10001cd10:	ret    
   10001cd11:	xor    eax,eax
   10001cd13:	ret    
   10001cd14:	nop
   10001cd15:	nop
   10001cd16:	nop
   10001cd17:	nop
   10001cd18:	nop
   10001cd19:	nop
   10001cd1a:	nop
   10001cd1b:	nop
   10001cd1c:	nop
   10001cd1d:	nop
   10001cd1e:	nop
   10001cd1f:	nop
   10001cd20:	push   rdi
   10001cd22:	sub    rsp,0xab0
   10001cd29:	mov    rax,QWORD PTR [rip+0xc4c0]        # 0x1000291f0
   10001cd30:	xor    rax,rsp
   10001cd33:	mov    QWORD PTR [rsp+0xaa0],rax
   10001cd3b:	mov    rdi,rcx
   10001cd3e:	xor    ecx,ecx
   10001cd40:	call   QWORD PTR [rip+0xfffffffffffe435a]        # 0x1000010a0
   10001cd46:	lea    rdx,[rsp+0x260]
   10001cd4e:	mov    r8d,0x104
   10001cd54:	mov    rcx,rax
   10001cd57:	call   QWORD PTR [rip+0xfffffffffffe445b]        # 0x1000011b8
   10001cd5d:	test   eax,eax
   10001cd5f:	je     0x10001ce5b
   10001cd65:	mov    QWORD PTR [rsp+0x40],0x105
   10001cd6e:	lea    rax,[rsp+0x680]
   10001cd76:	lea    r9,[rsp+0x470]
   10001cd7e:	mov    QWORD PTR [rsp+0x38],rax
   10001cd83:	lea    rax,[rsp+0x890]
   10001cd8b:	mov    QWORD PTR [rsp+0x30],0x105
   10001cd94:	mov    QWORD PTR [rsp+0x28],rax
   10001cd99:	lea    rdx,[rsp+0x50]
   10001cd9e:	lea    rcx,[rsp+0x260]
   10001cda6:	mov    r8d,0x105
   10001cdac:	mov    QWORD PTR [rsp+0x20],0x105
   10001cdb5:	mov    QWORD PTR [rsp+0xac8],rbx
   10001cdbd:	mov    WORD PTR [rsp+0x468],0x0
   10001cdc7:	call   QWORD PTR [rip+0xfffffffffffe466b]        # 0x100001438
   10001cdcd:	lea    rbx,[rdi+0x1948]
   10001cdd4:	lea    r9,[rsp+0x470]
   10001cddc:	lea    r8,[rsp+0x50]
   10001cde1:	mov    rcx,rbx
   10001cde4:	mov    edx,0x104
   10001cde9:	mov    QWORD PTR [rsp+0x28],0x0
   10001cdf2:	mov    WORD PTR [rsp+0x56],0x0
   10001cdf9:	mov    WORD PTR [rsp+0x670],0x0
   10001ce03:	mov    WORD PTR [rbx],0x0
   10001ce08:	mov    QWORD PTR [rsp+0x20],0x0
   10001ce11:	call   QWORD PTR [rip+0xfffffffffffe44e1]        # 0x1000012f8
   10001ce17:	mov    WORD PTR [rdi+0x1b4e],0x0
   10001ce20:	call   0x10001f30c
   10001ce25:	mov    r9,rax
   10001ce28:	lea    rax,[rip+0xfffffffffffe5e91]        # 0x100002cc0
   10001ce2f:	lea    rcx,[rdi+0x1740]
   10001ce36:	mov    QWORD PTR [rsp+0x28],rax
   10001ce3b:	lea    r8,[rip+0xfffffffffffe6756]        # 0x100003598
   10001ce42:	mov    edx,0x104
   10001ce47:	mov    QWORD PTR [rsp+0x20],rbx
   10001ce4c:	call   0x100005bb0
   10001ce51:	mov    rbx,QWORD PTR [rsp+0xac8]
   10001ce59:	jmp    0x10001ce5d
   10001ce5b:	xor    eax,eax
   10001ce5d:	mov    rcx,QWORD PTR [rsp+0xaa0]
   10001ce65:	xor    rcx,rsp
   10001ce68:	call   0x100002610
   10001ce6d:	add    rsp,0xab0
   10001ce74:	pop    rdi
   10001ce75:	ret    
   10001ce76:	nop
   10001ce77:	nop
   10001ce78:	nop
   10001ce79:	nop
   10001ce7a:	nop
   10001ce7b:	nop
   10001ce7c:	nop
   10001ce7d:	nop
   10001ce7e:	nop
   10001ce7f:	nop
   10001ce80:	mov    QWORD PTR [rsp+0x10],rbx
   10001ce85:	mov    QWORD PTR [rsp+0x18],rsi
   10001ce8a:	mov    QWORD PTR [rsp+0x20],rdi
   10001ce8f:	mov    QWORD PTR [rsp+0x8],rcx
   10001ce94:	push   r12
   10001ce96:	sub    rsp,0x40
   10001ce9a:	mov    r12,rdx
   10001ce9d:	mov    rsi,rcx
   10001cea0:	xor    ebx,ebx
   10001cea2:	mov    DWORD PTR [rsp+0x20],ebx
   10001cea6:	mov    edx,0x4e20
   10001ceab:	mov    rcx,QWORD PTR [rcx+0x18]
   10001ceaf:	call   QWORD PTR [rip+0xfffffffffffe42d3]        # 0x100001188
   10001ceb5:	test   eax,eax
   10001ceb7:	je     0x10001ced7
   10001ceb9:	cmp    eax,0x80
   10001cebe:	je     0x10001ced7
   10001cec0:	call   QWORD PTR [rip+0xfffffffffffe426a]        # 0x100001130
   10001cec6:	mov    ebx,eax
   10001cec8:	test   eax,eax
   10001ceca:	jle    0x10001cf4b
   10001cecc:	movzx  ebx,ax
   10001cecf:	or     ebx,0x80070000
   10001ced5:	jmp    0x10001cf4b
   10001ced7:	mov    edi,ebx
   10001ced9:	lea    rax,[rsi+0x28]
   10001cedd:	mov    QWORD PTR [rsp+0x28],rax
   10001cee2:	mov    QWORD PTR [rsp+0x30],rbx
   10001cee7:	nop    WORD PTR [rax+rax*1+0x0]
   10001cef0:	lea    rcx,[rsp+0x28]
   10001cef5:	call   0x10001ccd0
   10001cefa:	test   rax,rax
   10001cefd:	je     0x10001cf18
   10001ceff:	mov    r8,r12
   10001cf02:	mov    rdx,rsi
   10001cf05:	mov    rcx,rax
   10001cf08:	call   0x10001ca30
   10001cf0d:	test   ebx,ebx
   10001cf0f:	cmovns ebx,eax
   10001cf12:	mov    DWORD PTR [rsp+0x20],ebx
   10001cf16:	jmp    0x10001cef0
   10001cf18:	jmp    0x10001cf3c
   10001cf1a:	mov    edi,eax
   10001cf1c:	cmp    eax,0xc00000fd
   10001cf21:	jne    0x10001cf29
   10001cf23:	call   QWORD PTR [rip+0xfffffffffffe452f]        # 0x100001458
   10001cf29:	mov    eax,0x80004005
   10001cf2e:	test   edi,edi
   10001cf30:	cmovns edi,eax
   10001cf33:	mov    rsi,QWORD PTR [rsp+0x50]
   10001cf38:	mov    ebx,DWORD PTR [rsp+0x20]
   10001cf3c:	mov    rcx,QWORD PTR [rsi+0x18]
   10001cf40:	call   QWORD PTR [rip+0xfffffffffffe433a]        # 0x100001280
   10001cf46:	test   ebx,ebx
   10001cf48:	cmovns ebx,edi
   10001cf4b:	mov    eax,ebx
   10001cf4d:	mov    rbx,QWORD PTR [rsp+0x58]
   10001cf52:	mov    rsi,QWORD PTR [rsp+0x60]
   10001cf57:	mov    rdi,QWORD PTR [rsp+0x68]
   10001cf5c:	add    rsp,0x40
   10001cf60:	pop    r12
   10001cf62:	ret    
   10001cf63:	nop
   10001cf64:	nop
   10001cf65:	nop
   10001cf66:	nop
   10001cf67:	nop
   10001cf68:	nop
   10001cf69:	nop
   10001cf6a:	nop
   10001cf6b:	nop
   10001cf6c:	nop
   10001cf6d:	nop
   10001cf6e:	nop
   10001cf6f:	nop
   10001cf70:	push   rbx
   10001cf72:	sub    rsp,0x30
   10001cf76:	test   rdx,rdx
   10001cf79:	mov    rbx,rcx
   10001cf7c:	je     0x10001d02a
   10001cf82:	mov    QWORD PTR [rsp+0x40],rdi
   10001cf87:	lea    rdi,[rcx+0x1948]
   10001cf8e:	xor    r10d,r10d
   10001cf91:	mov    r8,rdi
   10001cf94:	sub    rdx,rdi
   10001cf97:	mov    r9d,0x104
   10001cf9d:	nop    DWORD PTR [rax]
   10001cfa0:	lea    rax,[r9+0x7ffffefa]
   10001cfa7:	test   rax,rax
   10001cfaa:	je     0x10001cfc6
   10001cfac:	movzx  eax,WORD PTR [rdx+r8*1]
   10001cfb1:	test   ax,ax
   10001cfb4:	je     0x10001cfc6
   10001cfb6:	mov    WORD PTR [r8],ax
   10001cfba:	add    r8,0x2
   10001cfbe:	sub    r9,0x1
   10001cfc2:	jne    0x10001cfa0
   10001cfc4:	jmp    0x10001cfcb
   10001cfc6:	test   r9,r9
   10001cfc9:	jne    0x10001cfd5
   10001cfcb:	sub    r8,0x2
   10001cfcf:	mov    r10d,0x8007007a
   10001cfd5:	test   r10d,r10d
   10001cfd8:	mov    WORD PTR [r8],0x0
   10001cfde:	js     0x10001d01c
   10001cfe0:	call   0x10001f30c
   10001cfe5:	lea    rcx,[rbx+0x1740]
   10001cfec:	lea    r8,[rip+0xfffffffffffe65a5]        # 0x100003598
   10001cff3:	mov    r9,rax
   10001cff6:	lea    rax,[rip+0xfffffffffffe5cc3]        # 0x100002cc0
   10001cffd:	mov    edx,0x104
   10001d002:	mov    QWORD PTR [rsp+0x28],rax
   10001d007:	mov    QWORD PTR [rsp+0x20],rdi
   10001d00c:	call   0x100005bb0
   10001d011:	mov    rdi,QWORD PTR [rsp+0x40]
   10001d016:	add    rsp,0x30
   10001d01a:	pop    rbx
   10001d01b:	ret    
   10001d01c:	mov    eax,r10d
   10001d01f:	mov    rdi,QWORD PTR [rsp+0x40]
   10001d024:	add    rsp,0x30
   10001d028:	pop    rbx
   10001d029:	ret    
   10001d02a:	mov    eax,0x80070057
   10001d02f:	add    rsp,0x30
   10001d033:	pop    rbx
   10001d034:	ret    
   10001d035:	nop
   10001d036:	nop
   10001d037:	nop
   10001d038:	nop
   10001d039:	nop
   10001d03a:	nop
   10001d03b:	nop
   10001d03c:	nop
   10001d03d:	nop
   10001d03e:	nop
   10001d03f:	nop
   10001d040:	mov    QWORD PTR [rsp+0x20],rbx
   10001d045:	mov    QWORD PTR [rsp+0x10],rdx
   10001d04a:	mov    QWORD PTR [rsp+0x8],rcx
   10001d04f:	push   rsi
   10001d050:	push   rdi
   10001d051:	push   r12
   10001d053:	push   r13
   10001d055:	push   r14
   10001d057:	sub    rsp,0x20
   10001d05b:	mov    r14,rdx
   10001d05e:	mov    r13,rcx
   10001d061:	xor    esi,esi
   10001d063:	mov    r12,rsi
   10001d066:	mov    QWORD PTR [rsp+0x60],rsi
   10001d06b:	mov    QWORD PTR [rdx],rsi
   10001d06e:	add    rcx,0x8
   10001d072:	call   0x10001c260
   10001d077:	test   eax,eax
   10001d079:	je     0x10001d17f
   10001d07f:	lea    rcx,[r13+0x8]
   10001d083:	call   0x10001c280
   10001d088:	test   eax,eax
   10001d08a:	js     0x10001d17f
   10001d090:	call   QWORD PTR [rip+0xfffffffffffe43c2]        # 0x100001458
   10001d096:	mov    edx,0x7530
   10001d09b:	mov    rcx,QWORD PTR [r13+0x20]
   10001d09f:	call   QWORD PTR [rip+0xfffffffffffe40e3]        # 0x100001188
   10001d0a5:	mov    edi,eax
   10001d0a7:	test   eax,eax
   10001d0a9:	je     0x10001d0de
   10001d0ab:	cmp    eax,0x80
   10001d0b0:	je     0x10001d0de
   10001d0b2:	call   QWORD PTR [rip+0xfffffffffffe4078]        # 0x100001130
   10001d0b8:	mov    ebx,eax
   10001d0ba:	test   eax,eax
   10001d0bc:	jle    0x10001d0c7
   10001d0be:	movzx  ebx,ax
   10001d0c1:	or     ebx,0x80070000
   10001d0c7:	test   ebx,ebx
   10001d0c9:	js     0x10001d138
   10001d0cb:	test   edi,edi
   10001d0cd:	jg     0x10001d0d3
   10001d0cf:	mov    ebx,edi
   10001d0d1:	jmp    0x10001d138
   10001d0d3:	movzx  ebx,di
   10001d0d6:	or     ebx,0x80070000
   10001d0dc:	jmp    0x10001d138
   10001d0de:	mov    ebx,esi
   10001d0e0:	lea    rcx,[r13+0xe8]
   10001d0e7:	mov    r8d,0x4e20
   10001d0ed:	mov    rdx,r13
   10001d0f0:	call   0x10001f030
   10001d0f5:	jmp    0x10001d121
   10001d0f7:	mov    ebx,eax
   10001d0f9:	cmp    eax,0xc00000fd
   10001d0fe:	jne    0x10001d106
   10001d100:	call   QWORD PTR [rip+0xfffffffffffe4352]        # 0x100001458
   10001d106:	mov    eax,0x80004005
   10001d10b:	test   ebx,ebx
   10001d10d:	cmovns ebx,eax
   10001d110:	xor    esi,esi
   10001d112:	mov    r13,QWORD PTR [rsp+0x50]
   10001d117:	mov    r14,QWORD PTR [rsp+0x58]
   10001d11c:	mov    r12,QWORD PTR [rsp+0x60]
   10001d121:	test   ebx,ebx
   10001d123:	js     0x10001d12e
   10001d125:	lea    r12,[r13+0xe8]
   10001d12c:	jmp    0x10001d138
   10001d12e:	mov    rcx,QWORD PTR [r13+0x20]
   10001d132:	call   QWORD PTR [rip+0xfffffffffffe4148]        # 0x100001280
   10001d138:	test   r12,r12
   10001d13b:	jne    0x10001d178
   10001d13d:	lea    rcx,[r13+0x10]
   10001d141:	mov    edx,0x1658
   10001d146:	call   0x10001bfe0
   10001d14b:	test   rax,rax
   10001d14e:	je     0x10001d16b
   10001d150:	mov    r8d,0x4e20
   10001d156:	mov    rdx,r13
   10001d159:	mov    rcx,rax
   10001d15c:	call   0x10001e5b0
   10001d161:	mov    r12,rax
   10001d164:	test   rax,rax
   10001d167:	jne    0x10001d173
   10001d169:	jmp    0x10001d16e
   10001d16b:	mov    r12,rsi
   10001d16e:	mov    esi,0x8007000e
   10001d173:	test   esi,esi
   10001d175:	cmovns ebx,esi
   10001d178:	mov    QWORD PTR [r14],r12
   10001d17b:	mov    eax,ebx
   10001d17d:	jmp    0x10001d184
   10001d17f:	mov    eax,0x80004005
   10001d184:	mov    rbx,QWORD PTR [rsp+0x68]
   10001d189:	add    rsp,0x20
   10001d18d:	pop    r14
   10001d18f:	pop    r13
   10001d191:	pop    r12
   10001d193:	pop    rdi
   10001d194:	pop    rsi
   10001d195:	ret    
   10001d196:	nop
   10001d197:	nop
   10001d198:	nop
   10001d199:	nop
   10001d19a:	nop
   10001d19b:	nop
   10001d19c:	nop
   10001d19d:	nop
   10001d19e:	nop
   10001d19f:	nop
   10001d1a0:	mov    QWORD PTR [rsp+0x8],rbx
   10001d1a5:	push   rdi
   10001d1a6:	sub    rsp,0x20
   10001d1aa:	mov    rdx,QWORD PTR [rcx+0x20]
   10001d1ae:	mov    rbx,rcx
   10001d1b1:	mov    eax,DWORD PTR [rdx+0x10]
   10001d1b4:	cmp    DWORD PTR [rdx+0xc],eax
   10001d1b7:	jb     0x10001d1f0
   10001d1b9:	mov    rcx,QWORD PTR [rcx+0x10]
   10001d1bd:	test   rcx,rcx
   10001d1c0:	je     0x10001d216
   10001d1c2:	mov    rdi,QWORD PTR [rbx]
   10001d1c5:	lea    rdx,[rdi*8+0x18]
   10001d1cd:	call   0x10001bfe0
   10001d1d2:	test   rax,rax
   10001d1d5:	je     0x10001d216
   10001d1d7:	xor    ecx,ecx
   10001d1d9:	mov    DWORD PTR [rax+0x10],edi
   10001d1dc:	mov    QWORD PTR [rax],rcx
   10001d1df:	mov    DWORD PTR [rax+0x8],ecx
   10001d1e2:	mov    DWORD PTR [rax+0xc],ecx
   10001d1e5:	mov    rcx,QWORD PTR [rbx+0x20]
   10001d1e9:	mov    QWORD PTR [rcx],rax
   10001d1ec:	mov    QWORD PTR [rbx+0x20],rax
   10001d1f0:	mov    rcx,QWORD PTR [rbx+0x20]
   10001d1f4:	mov    edx,DWORD PTR [rcx+0xc]
   10001d1f7:	lea    eax,[rdx+0x1]
   10001d1fa:	mov    DWORD PTR [rcx+0xc],eax
   10001d1fd:	mov    rax,QWORD PTR [rbx+0x20]
   10001d201:	add    QWORD PTR [rbx+0x8],0x1
   10001d206:	lea    rax,[rax+rdx*8+0x18]
   10001d20b:	mov    rbx,QWORD PTR [rsp+0x30]
   10001d210:	add    rsp,0x20
   10001d214:	pop    rdi
   10001d215:	ret    
   10001d216:	xor    eax,eax
   10001d218:	mov    rbx,QWORD PTR [rsp+0x30]
   10001d21d:	add    rsp,0x20
   10001d221:	pop    rdi
   10001d222:	ret    
   10001d223:	nop
   10001d224:	nop
   10001d225:	nop
   10001d226:	nop
   10001d227:	nop
   10001d228:	nop
   10001d229:	nop
   10001d22a:	nop
   10001d22b:	nop
   10001d22c:	nop
   10001d22d:	nop
   10001d22e:	nop
   10001d22f:	nop
   10001d230:	mov    QWORD PTR [rsp+0x8],rbx
   10001d235:	mov    QWORD PTR [rsp+0x10],rsi
   10001d23a:	push   rdi
   10001d23b:	sub    rsp,0x20
   10001d23f:	lea    rax,[rip+0xea]        # 0x10001d330
   10001d246:	mov    rdi,rcx
   10001d249:	add    rcx,0x8
   10001d24d:	mov    QWORD PTR [rcx-0x8],rax
   10001d251:	call   0x10001c240
   10001d256:	lea    rcx,[rdi+0x10]
   10001d25a:	call   0x10001bfc0
   10001d25f:	lea    rbx,[rdi+0x28]
   10001d263:	xor    esi,esi
   10001d265:	mov    QWORD PTR [rdi+0x18],rsi
   10001d269:	mov    QWORD PTR [rdi+0x20],rsi
   10001d26d:	lea    rcx,[rbx+0x18]
   10001d271:	xor    edx,edx
   10001d273:	mov    r8d,0x80
   10001d279:	mov    QWORD PTR [rbx],rsi
   10001d27c:	mov    DWORD PTR [rbx+0x8],esi
   10001d27f:	mov    DWORD PTR [rbx+0xc],esi
   10001d282:	mov    DWORD PTR [rbx+0x10],0x10
   10001d289:	mov    DWORD PTR [rbx+0x14],esi
   10001d28c:	call   0x10001f80c
   10001d291:	lea    rcx,[rdi+0xe8]
   10001d298:	xor    edx,edx
   10001d29a:	mov    r8d,0x4e20
   10001d2a0:	mov    QWORD PTR [rdi+0xc0],0x10
   10001d2ab:	mov    QWORD PTR [rdi+0xc8],rsi
   10001d2b2:	mov    QWORD PTR [rdi+0xd0],rsi
   10001d2b9:	mov    QWORD PTR [rdi+0xd8],rbx
   10001d2c0:	mov    QWORD PTR [rdi+0xe0],rbx
   10001d2c7:	call   0x10001e5b0
   10001d2cc:	lea    rcx,[rdi+0x1740]
   10001d2d3:	xor    edx,edx
   10001d2d5:	mov    r8d,0x208
   10001d2db:	mov    DWORD PTR [rdi+0x1b50],esi
   10001d2e1:	mov    QWORD PTR [rdi+0x1b58],rsi
   10001d2e8:	call   0x10001f80c
   10001d2ed:	lea    rcx,[rdi+0x1948]
   10001d2f4:	xor    edx,edx
   10001d2f6:	mov    r8d,0x208
   10001d2fc:	call   0x10001f80c
   10001d301:	lea    rcx,[rdi+0xe8]
   10001d308:	mov    rdx,rdi
   10001d30b:	call   0x10001dc70
   10001d310:	mov    rbx,QWORD PTR [rsp+0x30]
   10001d315:	mov    rsi,QWORD PTR [rsp+0x38]
   10001d31a:	mov    rax,rdi
   10001d31d:	add    rsp,0x20
   10001d321:	pop    rdi
   10001d322:	ret    
   10001d323:	nop
   10001d324:	nop
   10001d325:	nop
   10001d326:	nop
   10001d327:	nop
   10001d328:	nop
   10001d329:	nop
   10001d32a:	nop
   10001d32b:	nop
   10001d32c:	nop
   10001d32d:	nop
   10001d32e:	nop
   10001d32f:	nop
   10001d330:	loopne 0x10001d2fa
   10001d332:	add    DWORD PTR [rax],eax
   10001d334:	add    DWORD PTR [rax],eax
   10001d336:	add    BYTE PTR [rax],al
   10001d338:	nop
   10001d339:	leave  
   10001d33a:	add    DWORD PTR [rax],eax
   10001d33c:	add    DWORD PTR [rax],eax
   10001d33e:	add    BYTE PTR [rax],al
   10001d340:	movabs al,ds:0xc0000000010001c9
   10001d349:	(bad)  
   10001d34a:	add    DWORD PTR [rax],eax
   10001d34c:	add    DWORD PTR [rax],eax
   10001d34e:	add    BYTE PTR [rax],al
   10001d350:	or     al,0x1
   10001d353:	add    BYTE PTR [rcx],al
   10001d355:	add    BYTE PTR [rax],al
   10001d357:	add    BYTE PTR [rax-0x30],al
   10001d35a:	add    DWORD PTR [rax],eax
   10001d35c:	add    DWORD PTR [rax],eax
   10001d35e:	add    BYTE PTR [rax],al
   10001d360:	adc    bh,0x1
   10001d363:	add    BYTE PTR [rcx],al
   10001d365:	add    BYTE PTR [rax],al
   10001d367:	add    BYTE PTR [rax-0x35],dl
   10001d36a:	add    DWORD PTR [rax],eax
   10001d36c:	add    DWORD PTR [rax],eax
   10001d36e:	add    BYTE PTR [rax],al
   10001d370:	mov    al,0xc9
   10001d372:	add    DWORD PTR [rax],eax
   10001d374:	add    DWORD PTR [rax],eax
   10001d376:	add    BYTE PTR [rax],al
   10001d378:	lock leave 
   10001d37a:	add    DWORD PTR [rax],eax
   10001d37c:	add    DWORD PTR [rax],eax
   10001d37e:	add    BYTE PTR [rax],al
   10001d380:	jo     0x10001d351
   10001d382:	add    DWORD PTR [rax],eax
   10001d384:	add    DWORD PTR [rax],eax
   10001d386:	add    BYTE PTR [rax],al
   10001d388:	nop
   10001d389:	nop
   10001d38a:	nop
   10001d38b:	nop
   10001d38c:	nop
   10001d38d:	nop
   10001d38e:	nop
   10001d38f:	nop
   10001d390:	mov    QWORD PTR [rsp+0x18],rbx
   10001d395:	push   rdi
   10001d396:	sub    rsp,0x30
   10001d39a:	test   rdx,rdx
   10001d39d:	mov    rdi,rcx
   10001d3a0:	mov    QWORD PTR [rsp+0x48],0x0
   10001d3a9:	je     0x10001d477
   10001d3af:	lea    rax,[rsp+0x48]
   10001d3b4:	mov    r9d,0x1
   10001d3ba:	xor    r8d,r8d
   10001d3bd:	mov    rcx,0xffffffff80000002
   10001d3c4:	mov    QWORD PTR [rsp+0x20],rax
   10001d3c9:	call   QWORD PTR [rip+0xfffffffffffe3c61]        # 0x100001030
   10001d3cf:	test   eax,eax
   10001d3d1:	jne    0x10001d46b
   10001d3d7:	mov    rcx,QWORD PTR [rsp+0x48]
   10001d3dc:	mov    QWORD PTR [rsp+0x40],rsi
   10001d3e1:	lea    rsi,[rdi+0x1948]
   10001d3e8:	lea    rdx,[rip+0xfffffffffffe54b9]        # 0x1000028a8
   10001d3ef:	mov    r8,rsi
   10001d3f2:	mov    r9d,0x104
   10001d3f8:	call   0x10001c760
   10001d3fd:	test   eax,eax
   10001d3ff:	mov    ebx,eax
   10001d401:	js     0x10001d448
   10001d403:	call   0x10001f30c
   10001d408:	lea    rcx,[rdi+0x1740]
   10001d40f:	lea    r8,[rip+0xfffffffffffe6182]        # 0x100003598
   10001d416:	mov    r9,rax
   10001d419:	lea    rax,[rip+0xfffffffffffe58a0]        # 0x100002cc0
   10001d420:	mov    edx,0x104
   10001d425:	mov    QWORD PTR [rsp+0x28],rax
   10001d42a:	mov    QWORD PTR [rsp+0x20],rsi
   10001d42f:	call   0x100005bb0
   10001d434:	mov    rcx,QWORD PTR [rsp+0x48]
   10001d439:	mov    ebx,eax
   10001d43b:	call   QWORD PTR [rip+0xfffffffffffe3c0f]        # 0x100001050
   10001d441:	mov    rsi,QWORD PTR [rsp+0x40]
   10001d446:	jmp    0x10001d47e
   10001d448:	cmp    eax,0x80070002
   10001d44d:	jne    0x10001d459
   10001d44f:	mov    rcx,rdi
   10001d452:	call   0x10001cd20
   10001d457:	mov    ebx,eax
   10001d459:	mov    rcx,QWORD PTR [rsp+0x48]
   10001d45e:	call   QWORD PTR [rip+0xfffffffffffe3bec]        # 0x100001050
   10001d464:	mov    rsi,QWORD PTR [rsp+0x40]
   10001d469:	jmp    0x10001d47e
   10001d46b:	mov    rcx,rdi
   10001d46e:	call   0x10001cd20
   10001d473:	mov    ebx,eax
   10001d475:	jmp    0x10001d47e
   10001d477:	call   0x10001cd20
   10001d47c:	mov    ebx,eax
   10001d47e:	test   ebx,ebx
   10001d480:	jns    0x10001d4aa
   10001d482:	lea    rcx,[rdi+0x1948]
   10001d489:	xor    edx,edx
   10001d48b:	mov    r8d,0x208
   10001d491:	call   0x10001f80c
   10001d496:	lea    rcx,[rdi+0x1740]
   10001d49d:	xor    edx,edx
   10001d49f:	mov    r8d,0x208
   10001d4a5:	call   0x10001f80c
   10001d4aa:	mov    eax,ebx
   10001d4ac:	mov    rbx,QWORD PTR [rsp+0x50]
   10001d4b1:	add    rsp,0x30
   10001d4b5:	pop    rdi
   10001d4b6:	ret    
   10001d4b7:	nop
   10001d4b8:	nop
   10001d4b9:	nop
   10001d4ba:	nop
   10001d4bb:	nop
   10001d4bc:	nop
   10001d4bd:	nop
   10001d4be:	nop
   10001d4bf:	nop
   10001d4c0:	mov    QWORD PTR [rsp+0x18],rbp
   10001d4c5:	push   rdi
   10001d4c6:	sub    rsp,0x20
   10001d4ca:	test   edx,edx
   10001d4cc:	mov    rdi,rcx
   10001d4cf:	je     0x10001d4db
   10001d4d1:	mov    DWORD PTR [rcx+0x1b50],0x1
   10001d4db:	add    rcx,0x8
   10001d4df:	call   0x10001c4f0
   10001d4e4:	test   eax,eax
   10001d4e6:	je     0x10001d606
   10001d4ec:	mov    QWORD PTR [rsp+0x30],rbx
   10001d4f1:	mov    QWORD PTR [rsp+0x38],rsi
   10001d4f6:	lea    rsi,[rdi+0x10]
   10001d4fa:	mov    rcx,rsi
   10001d4fd:	call   0x10001c460
   10001d502:	test   eax,eax
   10001d504:	mov    ebx,eax
   10001d506:	js     0x10001d5f1
   10001d50c:	xor    r8d,r8d
   10001d50f:	xor    edx,edx
   10001d511:	xor    ecx,ecx
   10001d513:	mov    QWORD PTR [rdi+0xd0],rsi
   10001d51a:	call   QWORD PTR [rip+0xfffffffffffe3d70]        # 0x100001290
   10001d520:	test   rax,rax
   10001d523:	mov    QWORD PTR [rdi+0x18],rax
   10001d527:	jne    0x10001d53e
   10001d529:	call   QWORD PTR [rip+0xfffffffffffe3c01]        # 0x100001130
   10001d52f:	test   eax,eax
   10001d531:	mov    ebx,eax
   10001d533:	jle    0x10001d53e
   10001d535:	movzx  ebx,ax
   10001d538:	or     ebx,0x80070000
   10001d53e:	test   ebx,ebx
   10001d540:	js     0x10001d5f1
   10001d546:	mov    rcx,QWORD PTR [rdi+0x18]
   10001d54a:	mov    edx,0x2
   10001d54f:	mov    r8d,edx
   10001d552:	call   QWORD PTR [rip+0xfffffffffffe3d30]        # 0x100001288
   10001d558:	test   eax,eax
   10001d55a:	jne    0x10001d571
   10001d55c:	call   QWORD PTR [rip+0xfffffffffffe3bce]        # 0x100001130
   10001d562:	test   eax,eax
   10001d564:	mov    ebx,eax
   10001d566:	jle    0x10001d571
   10001d568:	movzx  ebx,ax
   10001d56b:	or     ebx,0x80070000
   10001d571:	test   ebx,ebx
   10001d573:	js     0x10001d5f1
   10001d575:	xor    r8d,r8d
   10001d578:	xor    edx,edx
   10001d57a:	xor    ecx,ecx
   10001d57c:	call   QWORD PTR [rip+0xfffffffffffe3d0e]        # 0x100001290
   10001d582:	test   rax,rax
   10001d585:	mov    QWORD PTR [rdi+0x20],rax
   10001d589:	jne    0x10001d5a0
   10001d58b:	call   QWORD PTR [rip+0xfffffffffffe3b9f]        # 0x100001130
   10001d591:	test   eax,eax
   10001d593:	mov    ebx,eax
   10001d595:	jle    0x10001d5a0
   10001d597:	movzx  ebx,ax
   10001d59a:	or     ebx,0x80070000
   10001d5a0:	test   ebx,ebx
   10001d5a2:	js     0x10001d5f1
   10001d5a4:	mov    rcx,QWORD PTR [rdi+0x20]
   10001d5a8:	mov    edx,0x2
   10001d5ad:	mov    r8d,edx
   10001d5b0:	call   QWORD PTR [rip+0xfffffffffffe3cd2]        # 0x100001288
   10001d5b6:	test   eax,eax
   10001d5b8:	jne    0x10001d5cf
   10001d5ba:	call   QWORD PTR [rip+0xfffffffffffe3b70]        # 0x100001130
   10001d5c0:	test   eax,eax
   10001d5c2:	mov    ebx,eax
   10001d5c4:	jle    0x10001d5cf
   10001d5c6:	movzx  ebx,ax
   10001d5c9:	or     ebx,0x80070000
   10001d5cf:	test   ebx,ebx
   10001d5d1:	js     0x10001d5f1
   10001d5d3:	cmp    DWORD PTR [rdi+0x1b50],0x0
   10001d5da:	je     0x10001d5e0
   10001d5dc:	xor    edx,edx
   10001d5de:	jmp    0x10001d5e7
   10001d5e0:	lea    rdx,[rip+0x39]        # 0x10001d620
   10001d5e7:	mov    rcx,rdi
   10001d5ea:	call   0x10001d390
   10001d5ef:	mov    ebx,eax
   10001d5f1:	lea    rcx,[rdi+0x8]
   10001d5f5:	mov    edx,ebx
   10001d5f7:	call   0x10001c550
   10001d5fc:	mov    rsi,QWORD PTR [rsp+0x38]
   10001d601:	mov    rbx,QWORD PTR [rsp+0x30]
   10001d606:	call   0x10001c290
   10001d60b:	lea    rcx,[rdi+0x8]
   10001d60f:	mov    rbp,QWORD PTR [rsp+0x40]
   10001d614:	add    rsp,0x20
   10001d618:	pop    rdi
   10001d619:	jmp    0x10001c280
   10001d61e:	nop
   10001d61f:	nop
   10001d620:	push   rbx
   10001d621:	add    BYTE PTR [rdi+0x0],cl
   10001d624:	add    BYTE PTR [rax+r8*1+0x57],r10b
   10001d629:	add    BYTE PTR [rcx+0x0],al
   10001d62c:	push   rdx
   10001d62d:	add    BYTE PTR [rbp+0x0],al
   10001d630:	pop    rsp
   10001d631:	add    BYTE PTR [rbp+0x0],cl
   10001d634:	imul   eax,DWORD PTR [rax],0x720063
   10001d63a:	outs   dx,DWORD PTR ds:[rsi]
   10001d63b:	add    BYTE PTR [rbx+0x0],dh
   10001d63e:	outs   dx,DWORD PTR ds:[rsi]
   10001d63f:	add    BYTE PTR [rsi+0x0],ah
   10001d642:	je     0x10001d644
   10001d644:	pop    rsp
   10001d645:	add    BYTE PTR [rbp+0x0],cl
   10001d648:	imul   eax,DWORD PTR [rax],0x720063
   10001d64e:	outs   dx,DWORD PTR ds:[rsi]
   10001d64f:	add    BYTE PTR [rbx+0x0],dh
   10001d652:	outs   dx,DWORD PTR ds:[rsi]
   10001d653:	add    BYTE PTR [rsi+0x0],ah
   10001d656:	je     0x10001d658
   10001d658:	and    BYTE PTR [rax],al
   10001d65a:	push   rbx
   10001d65b:	add    BYTE PTR [rcx+0x0],dl
   10001d65e:	rex.WR add BYTE PTR [rax],r12b
   10001d661:	add    BYTE PTR [rbx+0x0],dl
   10001d664:	add    BYTE PTR gs:[rdx+0x0],dh
   10001d668:	jbe    0x10001d66a
   10001d66a:	add    BYTE PTR gs:[rdx+0x0],dh
   10001d66e:	pop    rsp
   10001d66f:	add    BYTE PTR [rcx],dh
   10001d671:	add    BYTE PTR [rcx],dh
   10001d673:	add    BYTE PTR [rax],dh
   10001d675:	add    BYTE PTR [rax],al
   10001d677:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001d67d:	nop
   10001d67e:	nop
   10001d67f:	nop
   10001d680:	mov    r11,rsp
   10001d683:	mov    QWORD PTR [r11+0x8],rbx
   10001d687:	mov    QWORD PTR [r11+0x10],rsi
   10001d68b:	mov    QWORD PTR [r11+0x20],rdi
   10001d68f:	mov    QWORD PTR [r11+0x18],r8
   10001d693:	push   r12
   10001d695:	push   r13
   10001d697:	push   r14
   10001d699:	sub    rsp,0x40
   10001d69d:	mov    r13,r8
   10001d6a0:	mov    r14,rdx
   10001d6a3:	mov    r12,rcx
   10001d6a6:	xor    esi,esi
   10001d6a8:	mov    DWORD PTR [rsp+0x20],esi
   10001d6ac:	mov    QWORD PTR [r11-0x30],rsi
   10001d6b0:	mov    edi,esi
   10001d6b2:	lea    rax,[rcx+0x28]
   10001d6b6:	mov    QWORD PTR [r11-0x28],rax
   10001d6ba:	mov    QWORD PTR [r11-0x20],rsi
   10001d6be:	xchg   ax,ax
   10001d6c0:	lea    rcx,[rsp+0x30]
   10001d6c5:	call   0x10001ccd0
   10001d6ca:	mov    rbx,rax
   10001d6cd:	test   rax,rax
   10001d6d0:	je     0x10001d6e1
   10001d6d2:	mov    rcx,rax
   10001d6d5:	call   0x10001c160
   10001d6da:	test   rax,rax
   10001d6dd:	je     0x10001d6e1
   10001d6df:	jmp    0x10001d6c0
   10001d6e1:	test   rbx,rbx
   10001d6e4:	jne    0x10001d6f6
   10001d6e6:	lea    rcx,[r12+0xc0]
   10001d6ee:	call   0x10001d1a0
   10001d6f3:	mov    rbx,rax
   10001d6f6:	test   rbx,rbx
   10001d6f9:	je     0x10001d721
   10001d6fb:	xor    eax,eax
   10001d6fd:	mov    QWORD PTR [rbx],rax
   10001d700:	mov    rcx,rbx
   10001d703:	call   0x10001c070
   10001d708:	mov    rdx,r14
   10001d70b:	mov    rcx,rbx
   10001d70e:	call   0x10001c0f0
   10001d713:	mov    DWORD PTR [rsp+0x20],eax
   10001d717:	mov    rsi,rbx
   10001d71a:	mov    QWORD PTR [rsp+0x28],rbx
   10001d71f:	jmp    0x10001d72a
   10001d721:	mov    eax,0x8007000e
   10001d726:	mov    DWORD PTR [rsp+0x20],eax
   10001d72a:	jmp    0x10001d753
   10001d72c:	mov    edi,eax
   10001d72e:	cmp    eax,0xc00000fd
   10001d733:	jne    0x10001d73b
   10001d735:	call   QWORD PTR [rip+0xfffffffffffe3d1d]        # 0x100001458
   10001d73b:	mov    eax,0x80004005
   10001d740:	test   edi,edi
   10001d742:	cmovns edi,eax
   10001d745:	mov    r13,QWORD PTR [rsp+0x70]
   10001d74a:	mov    eax,DWORD PTR [rsp+0x20]
   10001d74e:	mov    rsi,QWORD PTR [rsp+0x28]
   10001d753:	mov    QWORD PTR [r13+0x0],rsi
   10001d757:	test   eax,eax
   10001d759:	cmovns eax,edi
   10001d75c:	mov    rbx,QWORD PTR [rsp+0x60]
   10001d761:	mov    rsi,QWORD PTR [rsp+0x68]
   10001d766:	mov    rdi,QWORD PTR [rsp+0x78]
   10001d76b:	add    rsp,0x40
   10001d76f:	pop    r14
   10001d771:	pop    r13
   10001d773:	pop    r12
   10001d775:	ret    
   10001d776:	nop
   10001d777:	nop
   10001d778:	nop
   10001d779:	nop
   10001d77a:	nop
   10001d77b:	nop
   10001d77c:	nop
   10001d77d:	nop
   10001d77e:	nop
   10001d77f:	nop
   10001d780:	mov    QWORD PTR [rsp+0x10],rbx
   10001d785:	mov    QWORD PTR [rsp+0x18],r8
   10001d78a:	mov    QWORD PTR [rsp+0x8],rcx
   10001d78f:	push   rsi
   10001d790:	push   rdi
   10001d791:	push   r12
   10001d793:	sub    rsp,0x30
   10001d797:	mov    rsi,r8
   10001d79a:	mov    rbx,rdx
   10001d79d:	mov    rdi,rcx
   10001d7a0:	xor    r12d,r12d
   10001d7a3:	mov    DWORD PTR [rsp+0x20],r12d
   10001d7a8:	mov    QWORD PTR [rsp+0x68],r12
   10001d7ad:	add    rcx,0x8
   10001d7b1:	call   0x10001c260
   10001d7b6:	test   eax,eax
   10001d7b8:	je     0x10001d841
   10001d7be:	or     edx,0xffffffff
   10001d7c1:	mov    rcx,QWORD PTR [rdi+0x18]
   10001d7c5:	call   QWORD PTR [rip+0xfffffffffffe39bd]        # 0x100001188
   10001d7cb:	test   eax,eax
   10001d7cd:	je     0x10001d7ed
   10001d7cf:	cmp    eax,0x80
   10001d7d4:	je     0x10001d7ed
   10001d7d6:	call   QWORD PTR [rip+0xfffffffffffe3954]        # 0x100001130
   10001d7dc:	mov    ebx,eax
   10001d7de:	test   eax,eax
   10001d7e0:	jle    0x10001d853
   10001d7e2:	movzx  ebx,ax
   10001d7e5:	or     ebx,0x80070000
   10001d7eb:	jmp    0x10001d853
   10001d7ed:	lea    r8,[rsp+0x68]
   10001d7f2:	mov    rdx,rbx
   10001d7f5:	mov    rcx,rdi
   10001d7f8:	call   0x10001d680
   10001d7fd:	mov    ebx,eax
   10001d7ff:	mov    DWORD PTR [rsp+0x20],eax
   10001d803:	jmp    0x10001d82f
   10001d805:	mov    ebx,eax
   10001d807:	cmp    eax,0xc00000fd
   10001d80c:	jne    0x10001d814
   10001d80e:	call   QWORD PTR [rip+0xfffffffffffe3c44]        # 0x100001458
   10001d814:	mov    eax,0x80004005
   10001d819:	test   ebx,ebx
   10001d81b:	cmovns ebx,eax
   10001d81e:	mov    r12d,ebx
   10001d821:	mov    rdi,QWORD PTR [rsp+0x50]
   10001d826:	mov    rsi,QWORD PTR [rsp+0x60]
   10001d82b:	mov    ebx,DWORD PTR [rsp+0x20]
   10001d82f:	test   ebx,ebx
   10001d831:	cmovns ebx,r12d
   10001d835:	mov    rcx,QWORD PTR [rdi+0x18]
   10001d839:	call   QWORD PTR [rip+0xfffffffffffe3a41]        # 0x100001280
   10001d83f:	jmp    0x10001d853
   10001d841:	lea    r8,[rsp+0x68]
   10001d846:	mov    rdx,rbx
   10001d849:	mov    rcx,rdi
   10001d84c:	call   0x10001d680
   10001d851:	mov    ebx,eax
   10001d853:	mov    rcx,QWORD PTR [rsp+0x68]
   10001d858:	mov    QWORD PTR [rsi],rcx
   10001d85b:	mov    eax,ebx
   10001d85d:	mov    rbx,QWORD PTR [rsp+0x58]
   10001d862:	add    rsp,0x30
   10001d866:	pop    r12
   10001d868:	pop    rdi
   10001d869:	pop    rsi
   10001d86a:	ret    
   10001d86b:	nop
   10001d86c:	nop
   10001d86d:	nop
   10001d86e:	nop
   10001d86f:	nop
   10001d870:	nop
   10001d871:	nop
   10001d872:	nop
   10001d873:	nop
   10001d874:	nop
   10001d875:	nop
   10001d876:	nop
   10001d877:	nop
   10001d878:	nop
   10001d879:	nop
   10001d87a:	nop
   10001d87b:	nop
   10001d87c:	nop
   10001d87d:	nop
   10001d87e:	nop
   10001d87f:	nop
   10001d880:	mov    rax,r8
   10001d883:	mov    rcx,rdx
   10001d886:	mov    r8,r9
   10001d889:	mov    rdx,rax
   10001d88c:	jmp    0x10001c570
   10001d891:	nop
   10001d892:	nop
   10001d893:	nop
   10001d894:	nop
   10001d895:	nop
   10001d896:	nop
   10001d897:	nop
   10001d898:	nop
   10001d899:	nop
   10001d89a:	nop
   10001d89b:	nop
   10001d89c:	nop
   10001d89d:	nop
   10001d89e:	nop
   10001d89f:	nop
   10001d8a0:	mov    DWORD PTR [rcx+0x74],edx
   10001d8a3:	xor    eax,eax
   10001d8a5:	ret    
   10001d8a6:	nop
   10001d8a7:	nop
   10001d8a8:	nop
   10001d8a9:	nop
   10001d8aa:	nop
   10001d8ab:	nop
   10001d8ac:	nop
   10001d8ad:	nop
   10001d8ae:	nop
   10001d8af:	nop
   10001d8b0:	mov    QWORD PTR [rsp+0x8],rbx
   10001d8b5:	push   rdi
   10001d8b6:	sub    rsp,0x20
   10001d8ba:	cmp    DWORD PTR [rcx+0x74],0x0
   10001d8be:	mov    rdi,rdx
   10001d8c1:	mov    rbx,rcx
   10001d8c4:	je     0x10001d904
   10001d8c6:	mov    eax,DWORD PTR [rcx+0xac]
   10001d8cc:	not    eax
   10001d8ce:	and    eax,DWORD PTR [rcx+0xa8]
   10001d8d4:	test   al,0x20
   10001d8d6:	jne    0x10001d904
   10001d8d8:	call   QWORD PTR [rip+0xfffffffffffe38fa]        # 0x1000011d8
   10001d8de:	cmp    eax,DWORD PTR [rbx+0x74]
   10001d8e1:	je     0x10001d904
   10001d8e3:	call   QWORD PTR [rip+0xfffffffffffe38ef]        # 0x1000011d8
   10001d8e9:	cmp    eax,DWORD PTR [rbx+0xa4]
   10001d8ef:	je     0x10001d904
   10001d8f1:	mov    DWORD PTR [rdi],0x0
   10001d8f7:	xor    eax,eax
   10001d8f9:	mov    rbx,QWORD PTR [rsp+0x30]
   10001d8fe:	add    rsp,0x20
   10001d902:	pop    rdi
   10001d903:	ret    
   10001d904:	mov    rbx,QWORD PTR [rsp+0x30]
   10001d909:	mov    DWORD PTR [rdi],0x1
   10001d90f:	xor    eax,eax
   10001d911:	add    rsp,0x20
   10001d915:	pop    rdi
   10001d916:	ret    
   10001d917:	nop
   10001d918:	nop
   10001d919:	nop
   10001d91a:	nop
   10001d91b:	nop
   10001d91c:	nop
   10001d91d:	nop
   10001d91e:	nop
   10001d91f:	nop
   10001d920:	mov    DWORD PTR [rcx+0x13b0],edx
   10001d926:	xor    eax,eax
   10001d928:	ret    
   10001d929:	nop
   10001d92a:	nop
   10001d92b:	nop
   10001d92c:	nop
   10001d92d:	nop
   10001d92e:	nop
   10001d92f:	nop
   10001d930:	mov    QWORD PTR [rcx+0x90],rdx
   10001d937:	xor    eax,eax
   10001d939:	ret    
   10001d93a:	nop
   10001d93b:	nop
   10001d93c:	nop
   10001d93d:	nop
   10001d93e:	nop
   10001d93f:	nop
   10001d940:	mov    QWORD PTR [rcx+0x98],rdx
   10001d947:	mov    DWORD PTR [rcx+0xa0],r8d
   10001d94e:	xor    eax,eax
   10001d950:	ret    
   10001d951:	nop
   10001d952:	nop
   10001d953:	nop
   10001d954:	nop
   10001d955:	nop
   10001d956:	nop
   10001d957:	nop
   10001d958:	nop
   10001d959:	nop
   10001d95a:	nop
   10001d95b:	nop
   10001d95c:	nop
   10001d95d:	nop
   10001d95e:	nop
   10001d95f:	nop
   10001d960:	mov    DWORD PTR [rcx+0xb0],edx
   10001d966:	mov    DWORD PTR [rcx+0xb4],r8d
   10001d96d:	xor    eax,eax
   10001d96f:	ret    
   10001d970:	nop
   10001d971:	nop
   10001d972:	nop
   10001d973:	nop
   10001d974:	nop
   10001d975:	nop
   10001d976:	nop
   10001d977:	nop
   10001d978:	nop
   10001d979:	nop
   10001d97a:	nop
   10001d97b:	nop
   10001d97c:	nop
   10001d97d:	nop
   10001d97e:	nop
   10001d97f:	nop
   10001d980:	push   rbx
   10001d982:	sub    rsp,0x20
   10001d986:	mov    rbx,rcx
   10001d989:	mov    DWORD PTR [rcx+0xa8],edx
   10001d98f:	mov    DWORD PTR [rcx+0xac],r8d
   10001d996:	mov    rcx,QWORD PTR [rcx+0x10]
   10001d99a:	test   rcx,rcx
   10001d99d:	je     0x10001d9bc
   10001d99f:	call   0x10001c9e0
   10001d9a4:	test   eax,eax
   10001d9a6:	je     0x10001d9bc
   10001d9a8:	bt     DWORD PTR [rbx+0xac],0x11
   10001d9b0:	jb     0x10001d9bc
   10001d9b2:	or     DWORD PTR [rbx+0xa8],0x20000
   10001d9bc:	xor    eax,eax
   10001d9be:	add    rsp,0x20
   10001d9c2:	pop    rbx
   10001d9c3:	ret    
   10001d9c4:	nop
   10001d9c5:	nop
   10001d9c6:	nop
   10001d9c7:	nop
   10001d9c8:	nop
   10001d9c9:	nop
   10001d9ca:	nop
   10001d9cb:	nop
   10001d9cc:	nop
   10001d9cd:	nop
   10001d9ce:	nop
   10001d9cf:	nop
   10001d9d0:	mov    QWORD PTR [rcx+0x40],rdx
   10001d9d4:	xor    eax,eax
   10001d9d6:	ret    
   10001d9d7:	nop
   10001d9d8:	nop
   10001d9d9:	nop
   10001d9da:	nop
   10001d9db:	nop
   10001d9dc:	nop
   10001d9dd:	nop
   10001d9de:	nop
   10001d9df:	nop
   10001d9e0:	mov    QWORD PTR [rcx+0x38],rdx
   10001d9e4:	xor    eax,eax
   10001d9e6:	ret    
   10001d9e7:	nop
   10001d9e8:	nop
   10001d9e9:	nop
   10001d9ea:	nop
   10001d9eb:	nop
   10001d9ec:	nop
   10001d9ed:	nop
   10001d9ee:	nop
   10001d9ef:	nop
   10001d9f0:	mov    DWORD PTR [rcx+0xa4],edx
   10001d9f6:	mov    QWORD PTR [rcx+0x30],r8
   10001d9fa:	mov    QWORD PTR [rcx+0x28],r9
   10001d9fe:	xor    eax,eax
   10001da00:	ret    
   10001da01:	nop
   10001da02:	nop
   10001da03:	nop
   10001da04:	nop
   10001da05:	nop
   10001da06:	nop
   10001da07:	nop
   10001da08:	nop
   10001da09:	nop
   10001da0a:	nop
   10001da0b:	nop
   10001da0c:	nop
   10001da0d:	nop
   10001da0e:	nop
   10001da0f:	nop
   10001da10:	mov    QWORD PTR [rcx+0x80],rdx
   10001da17:	xor    eax,eax
   10001da19:	ret    
   10001da1a:	nop
   10001da1b:	nop
   10001da1c:	nop
   10001da1d:	nop
   10001da1e:	nop
   10001da1f:	nop
   10001da20:	mov    QWORD PTR [rcx+0x50],rdx
   10001da24:	xor    eax,eax
   10001da26:	ret    
   10001da27:	nop
   10001da28:	nop
   10001da29:	nop
   10001da2a:	nop
   10001da2b:	nop
   10001da2c:	nop
   10001da2d:	nop
   10001da2e:	nop
   10001da2f:	nop
   10001da30:	mov    QWORD PTR [rcx+0x48],rdx
   10001da34:	xor    eax,eax
   10001da36:	ret    
   10001da37:	nop
   10001da38:	nop
   10001da39:	nop
   10001da3a:	nop
   10001da3b:	nop
   10001da3c:	nop
   10001da3d:	nop
   10001da3e:	nop
   10001da3f:	nop
   10001da40:	mov    QWORD PTR [rcx+0x20],rdx
   10001da44:	xor    eax,eax
   10001da46:	ret    
   10001da47:	nop
   10001da48:	nop
   10001da49:	nop
   10001da4a:	nop
   10001da4b:	nop
   10001da4c:	nop
   10001da4d:	nop
   10001da4e:	nop
   10001da4f:	nop
   10001da50:	mov    QWORD PTR [rcx+0x58],rdx
   10001da54:	xor    eax,eax
   10001da56:	ret    
   10001da57:	nop
   10001da58:	nop
   10001da59:	nop
   10001da5a:	nop
   10001da5b:	nop
   10001da5c:	nop
   10001da5d:	nop
   10001da5e:	nop
   10001da5f:	nop
   10001da60:	mov    DWORD PTR [rcx+0x88],edx
   10001da66:	mov    DWORD PTR [rcx+0x8c],r8d
   10001da6d:	xor    eax,eax
   10001da6f:	ret    
   10001da70:	nop
   10001da71:	nop
   10001da72:	nop
   10001da73:	nop
   10001da74:	nop
   10001da75:	nop
   10001da76:	nop
   10001da77:	nop
   10001da78:	nop
   10001da79:	nop
   10001da7a:	nop
   10001da7b:	nop
   10001da7c:	nop
   10001da7d:	nop
   10001da7e:	nop
   10001da7f:	nop
   10001da80:	mov    QWORD PTR [rcx+0x60],rdx
   10001da84:	xor    eax,eax
   10001da86:	ret    
   10001da87:	nop
   10001da88:	nop
   10001da89:	nop
   10001da8a:	nop
   10001da8b:	nop
   10001da8c:	nop
   10001da8d:	nop
   10001da8e:	nop
   10001da8f:	nop
   10001da90:	mov    QWORD PTR [rcx+0x68],rdx
   10001da94:	xor    eax,eax
   10001da96:	ret    
   10001da97:	nop
   10001da98:	nop
   10001da99:	nop
   10001da9a:	nop
   10001da9b:	nop
   10001da9c:	nop
   10001da9d:	nop
   10001da9e:	nop
   10001da9f:	nop
   10001daa0:	mov    QWORD PTR [rcx+0x13c8],rdx
   10001daa7:	xor    eax,eax
   10001daa9:	ret    
   10001daaa:	nop
   10001daab:	nop
   10001daac:	nop
   10001daad:	nop
   10001daae:	nop
   10001daaf:	nop
   10001dab0:	cmp    DWORD PTR [rcx+0x13c0],0x0
   10001dab7:	je     0x10001dad6
   10001dab9:	cmp    DWORD PTR [rcx+0x13bc],0x0
   10001dac0:	jne    0x10001dad6
   10001dac2:	cmp    DWORD PTR [rcx+0x13b8],0x0
   10001dac9:	je     0x10001dad6
   10001dacb:	mov    eax,DWORD PTR [rcx+0x13b4]
   10001dad1:	mov    DWORD PTR [rdx],eax
   10001dad3:	xor    eax,eax
   10001dad5:	ret    
   10001dad6:	mov    eax,0x80004005
   10001dadb:	ret    
   10001dadc:	nop
   10001dadd:	nop
   10001dade:	nop
   10001dadf:	nop
   10001dae0:	nop
   10001dae1:	nop
   10001dae2:	nop
   10001dae3:	nop
   10001dae4:	nop
   10001dae5:	nop
   10001dae6:	nop
   10001dae7:	nop
   10001dae8:	nop
   10001dae9:	nop
   10001daea:	nop
   10001daeb:	nop
   10001daec:	nop
   10001daed:	nop
   10001daee:	nop
   10001daef:	nop
   10001daf0:	push   rbx
   10001daf2:	sub    rsp,0x20
   10001daf6:	xor    r9d,r9d
   10001daf9:	lea    rbx,[rip+0xfffffffffffe2500]        # 0x100000000
   10001db00:	mov    r10,r8
   10001db03:	mov    QWORD PTR [r8],r9
   10001db06:	mov    r11,QWORD PTR [rbx+0x2ce0]
   10001db0d:	cmp    r11,QWORD PTR [rdx]
   10001db10:	jne    0x10001db24
   10001db12:	mov    r11,QWORD PTR [rbx+0x2ce8]
   10001db19:	cmp    r11,QWORD PTR [rdx+0x8]
   10001db1d:	jne    0x10001db24
   10001db1f:	mov    eax,r9d
   10001db22:	jmp    0x10001db29
   10001db24:	sbb    eax,eax
   10001db26:	sbb    eax,0xffffffff
   10001db29:	test   eax,eax
   10001db2b:	jne    0x10001db3e
   10001db2d:	mov    QWORD PTR [r8],rcx
   10001db30:	mov    rax,QWORD PTR [rcx]
   10001db33:	call   QWORD PTR [rax+0x8]
   10001db36:	xor    eax,eax
   10001db38:	add    rsp,0x20
   10001db3c:	pop    rbx
   10001db3d:	ret    
   10001db3e:	mov    r8,QWORD PTR [rbx+0x1db80]
   10001db45:	cmp    r8,QWORD PTR [rdx]
   10001db48:	jne    0x10001db57
   10001db4a:	mov    r8,QWORD PTR [rbx+0x1db88]
   10001db51:	cmp    r8,QWORD PTR [rdx+0x8]
   10001db55:	je     0x10001db5f
   10001db57:	sbb    eax,eax
   10001db59:	sbb    eax,0xffffffff
   10001db5c:	mov    r9d,eax
   10001db5f:	test   r9d,r9d
   10001db62:	jne    0x10001db75
   10001db64:	mov    QWORD PTR [r10],rcx
   10001db67:	mov    rax,QWORD PTR [rcx]
   10001db6a:	call   QWORD PTR [rax+0x8]
   10001db6d:	xor    eax,eax
   10001db6f:	add    rsp,0x20
   10001db73:	pop    rbx
   10001db74:	ret    
   10001db75:	mov    eax,0x80004002
   10001db7a:	add    rsp,0x20
   10001db7e:	pop    rbx
   10001db7f:	ret    
   10001db80:	(bad)  
   10001db81:	(bad)  
   10001db82:	ret    
   10001db83:	sbb    edx,DWORD PTR [rcx-0x61b65b7b]
   10001db89:	movabs ds:0x9090e6b57640b44f,al
   10001db92:	nop
   10001db93:	nop
   10001db94:	nop
   10001db95:	nop
   10001db96:	nop
   10001db97:	nop
   10001db98:	nop
   10001db99:	nop
   10001db9a:	nop
   10001db9b:	nop
   10001db9c:	nop
   10001db9d:	nop
   10001db9e:	nop
   10001db9f:	nop
   10001dba0:	mov    eax,0x1
   10001dba5:	lock xadd DWORD PTR [rcx+0x8],eax
   10001dbaa:	add    eax,0x1
   10001dbad:	ret    
   10001dbae:	nop
   10001dbaf:	nop
   10001dbb0:	nop
   10001dbb1:	nop
   10001dbb2:	nop
   10001dbb3:	nop
   10001dbb4:	nop
   10001dbb5:	nop
   10001dbb6:	nop
   10001dbb7:	nop
   10001dbb8:	nop
   10001dbb9:	nop
   10001dbba:	nop
   10001dbbb:	nop
   10001dbbc:	nop
   10001dbbd:	nop
   10001dbbe:	nop
   10001dbbf:	nop
   10001dbc0:	push   rbx
   10001dbc2:	sub    rsp,0x20
   10001dbc6:	or     ebx,0xffffffff
   10001dbc9:	lock xadd DWORD PTR [rcx+0x8],ebx
   10001dbce:	add    ebx,0xffffffff
   10001dbd1:	jne    0x10001dbdf
   10001dbd3:	mov    rdx,rcx
   10001dbd6:	mov    rcx,QWORD PTR [rcx+0x10]
   10001dbda:	call   0x10001cc30
   10001dbdf:	mov    eax,ebx
   10001dbe1:	add    rsp,0x20
   10001dbe5:	pop    rbx
   10001dbe6:	ret    
   10001dbe7:	nop
   10001dbe8:	nop
   10001dbe9:	nop
   10001dbea:	nop
   10001dbeb:	nop
   10001dbec:	nop
   10001dbed:	nop
   10001dbee:	nop
   10001dbef:	nop
   10001dbf0:	mov    QWORD PTR [rsp+0x8],rbx
   10001dbf5:	mov    QWORD PTR [rsp+0x10],rbp
   10001dbfa:	mov    QWORD PTR [rsp+0x18],rsi
   10001dbff:	push   rdi
   10001dc00:	sub    rsp,0x20
   10001dc04:	mov    ebx,DWORD PTR [rcx+0x228]
   10001dc0a:	mov    edx,0x220
   10001dc0f:	mov    rbp,rcx
   10001dc12:	call   0x10001c170
   10001dc17:	xor    esi,esi
   10001dc19:	test   ebx,ebx
   10001dc1b:	lea    edi,[rbx+rax*1]
   10001dc1e:	je     0x10001dc47
   10001dc20:	mov    ecx,esi
   10001dc22:	mov    edx,0xb3c
   10001dc27:	imul   rcx,rcx,0xb3c
   10001dc2e:	add    rcx,QWORD PTR [rbp+0x220]
   10001dc35:	call   0x10001c170
   10001dc3a:	add    esi,0x1
   10001dc3d:	add    edi,eax
   10001dc3f:	cmp    esi,DWORD PTR [rbp+0x228]
   10001dc45:	jb     0x10001dc20
   10001dc47:	mov    rbx,QWORD PTR [rsp+0x30]
   10001dc4c:	mov    rbp,QWORD PTR [rsp+0x38]
   10001dc51:	mov    rsi,QWORD PTR [rsp+0x40]
   10001dc56:	mov    eax,edi
   10001dc58:	add    rsp,0x20
   10001dc5c:	pop    rdi
   10001dc5d:	ret    
   10001dc5e:	nop
   10001dc5f:	nop
   10001dc60:	nop
   10001dc61:	nop
   10001dc62:	nop
   10001dc63:	nop
   10001dc64:	nop
   10001dc65:	nop
   10001dc66:	nop
   10001dc67:	nop
   10001dc68:	nop
   10001dc69:	nop
   10001dc6a:	nop
   10001dc6b:	nop
   10001dc6c:	nop
   10001dc6d:	nop
   10001dc6e:	nop
   10001dc6f:	nop
   10001dc70:	mov    QWORD PTR [rsp+0x8],rbx
   10001dc75:	push   rdi
   10001dc76:	sub    rsp,0x20
   10001dc7a:	mov    rbx,rcx
   10001dc7d:	mov    rcx,QWORD PTR [rcx+0x10]
   10001dc81:	mov    rdi,rdx
   10001dc84:	test   rcx,rcx
   10001dc87:	je     0x10001dc97
   10001dc89:	mov    rax,QWORD PTR [rcx]
   10001dc8c:	call   QWORD PTR [rax+0x10]
   10001dc8f:	mov    QWORD PTR [rbx+0x10],0x0
   10001dc97:	mov    QWORD PTR [rbx+0x10],rdi
   10001dc9b:	mov    rax,QWORD PTR [rdi]
   10001dc9e:	mov    rcx,rdi
   10001dca1:	call   QWORD PTR [rax+0x8]
   10001dca4:	mov    rcx,QWORD PTR [rbx+0x10]
   10001dca8:	call   0x10001c890
   10001dcad:	mov    rcx,QWORD PTR [rbx+0x10]
   10001dcb1:	mov    QWORD PTR [rbx+0x1370],rax
   10001dcb8:	call   0x10001c890
   10001dcbd:	mov    QWORD PTR [rbx+0x1398],rax
   10001dcc4:	mov    rbx,QWORD PTR [rsp+0x30]
   10001dcc9:	add    rsp,0x20
   10001dccd:	pop    rdi
   10001dcce:	ret    
   10001dccf:	nop
   10001dcd0:	nop
   10001dcd1:	nop
   10001dcd2:	nop
   10001dcd3:	nop
   10001dcd4:	nop
   10001dcd5:	nop
   10001dcd6:	nop
   10001dcd7:	nop
   10001dcd8:	nop
   10001dcd9:	nop
   10001dcda:	nop
   10001dcdb:	nop
   10001dcdc:	nop
   10001dcdd:	nop
   10001dcde:	nop
   10001dcdf:	nop
   10001dce0:	test   rdx,rdx
   10001dce3:	jne    0x10001dceb
   10001dce5:	mov    eax,0x80070057
   10001dcea:	ret    
   10001dceb:	mov    eax,DWORD PTR [rcx+0xa4]
   10001dcf1:	test   eax,eax
   10001dcf3:	je     0x10001dcff
   10001dcf5:	bt     DWORD PTR [rcx+0xa8],0x15
   10001dcfd:	jae    0x10001dd02
   10001dcff:	mov    eax,DWORD PTR [rcx+0x74]
   10001dd02:	mov    DWORD PTR [rdx],eax
   10001dd04:	xor    eax,eax
   10001dd06:	ret    
   10001dd07:	nop
   10001dd08:	nop
   10001dd09:	nop
   10001dd0a:	nop
   10001dd0b:	nop
   10001dd0c:	nop
   10001dd0d:	nop
   10001dd0e:	nop
   10001dd0f:	nop
   10001dd10:	mov    QWORD PTR [rsp+0x18],rbx
   10001dd15:	mov    QWORD PTR [rsp+0x20],rsi
   10001dd1a:	mov    QWORD PTR [rsp+0x8],rcx
   10001dd1f:	push   rdi
   10001dd20:	push   r12
   10001dd22:	push   r13
   10001dd24:	sub    rsp,0x20
   10001dd28:	mov    rsi,rcx
   10001dd2b:	xor    r12d,r12d
   10001dd2e:	mov    ebx,r12d
   10001dd31:	mov    r13d,r12d
   10001dd34:	mov    rax,QWORD PTR [rcx+0x18]
   10001dd38:	mov    rdx,QWORD PTR [rax]
   10001dd3b:	nop    DWORD PTR [rax+rax*1+0x0]
   10001dd40:	test   rdx,rdx
   10001dd43:	je     0x10001dd56
   10001dd45:	mov    rdi,QWORD PTR [rdx]
   10001dd48:	mov    rcx,QWORD PTR [rsi+0x10]
   10001dd4c:	call   0x10001c040
   10001dd51:	mov    rdx,rdi
   10001dd54:	jmp    0x10001dd40
   10001dd56:	jmp    0x10001dd7f
   10001dd58:	mov    r13d,eax
   10001dd5b:	cmp    eax,0xc00000fd
   10001dd60:	jne    0x10001dd68
   10001dd62:	call   QWORD PTR [rip+0xfffffffffffe36f0]        # 0x100001458
   10001dd68:	mov    ecx,0x80004005
   10001dd6d:	test   r13d,r13d
   10001dd70:	cmovns r13d,ecx
   10001dd74:	xor    r12d,r12d
   10001dd77:	mov    rsi,QWORD PTR [rsp+0x40]
   10001dd7c:	mov    ebx,r12d
   10001dd7f:	test   ebx,ebx
   10001dd81:	cmovns ebx,r13d
   10001dd85:	mov    DWORD PTR [rsp+0x48],ebx
   10001dd89:	mov    rax,QWORD PTR [rsi+0x18]
   10001dd8d:	mov    QWORD PTR [rax],r12
   10001dd90:	mov    rax,QWORD PTR [rsi+0x18]
   10001dd94:	mov    QWORD PTR [rsi+0x20],rax
   10001dd98:	jmp    0x10001ddba
   10001dd9a:	mov    ebx,eax
   10001dd9c:	cmp    eax,0xc00000fd
   10001dda1:	jne    0x10001dda9
   10001dda3:	call   QWORD PTR [rip+0xfffffffffffe36af]        # 0x100001458
   10001dda9:	mov    ecx,0x80004005
   10001ddae:	test   ebx,ebx
   10001ddb0:	cmovns ebx,ecx
   10001ddb3:	mov    r12d,ebx
   10001ddb6:	mov    ebx,DWORD PTR [rsp+0x48]
   10001ddba:	test   ebx,ebx
   10001ddbc:	cmovns ebx,r12d
   10001ddc0:	mov    eax,ebx
   10001ddc2:	mov    rbx,QWORD PTR [rsp+0x50]
   10001ddc7:	mov    rsi,QWORD PTR [rsp+0x58]
   10001ddcc:	add    rsp,0x20
   10001ddd0:	pop    r13
   10001ddd2:	pop    r12
   10001ddd4:	pop    rdi
   10001ddd5:	ret    
   10001ddd6:	nop
   10001ddd7:	nop
   10001ddd8:	nop
   10001ddd9:	nop
   10001ddda:	nop
   10001dddb:	nop
   10001dddc:	nop
   10001dddd:	nop
   10001ddde:	nop
   10001dddf:	nop
   10001dde0:	push   rbx
   10001dde2:	sub    rsp,0x20
   10001dde6:	mov    rbx,rcx
   10001dde9:	add    rcx,0x1360
   10001ddf0:	call   0x10001dd10
   10001ddf5:	test   eax,eax
   10001ddf7:	jne    0x10001de05
   10001ddf9:	lea    rcx,[rbx+0x1388]
   10001de00:	call   0x10001dd10
   10001de05:	add    rsp,0x20
   10001de09:	pop    rbx
   10001de0a:	ret    
   10001de0b:	nop
   10001de0c:	nop
   10001de0d:	nop
   10001de0e:	nop
   10001de0f:	nop
   10001de10:	nop
   10001de11:	nop
   10001de12:	nop
   10001de13:	nop
   10001de14:	nop
   10001de15:	nop
   10001de16:	nop
   10001de17:	nop
   10001de18:	nop
   10001de19:	nop
   10001de1a:	nop
   10001de1b:	nop
   10001de1c:	nop
   10001de1d:	nop
   10001de1e:	nop
   10001de1f:	nop
   10001de20:	mov    QWORD PTR [rsp+0x8],rbx
   10001de25:	mov    DWORD PTR [rcx+0x22c],edx
   10001de2b:	lea    rdx,[rcx+0x14]
   10001de2f:	mov    rbx,r9
   10001de32:	xor    r11d,r11d
   10001de35:	mov    r9,rcx
   10001de38:	mov    r10d,0x105
   10001de3e:	sub    r8,rdx
   10001de41:	lea    rax,[r10+0x7ffffef9]
   10001de48:	test   rax,rax
   10001de4b:	je     0x10001de66
   10001de4d:	movzx  eax,WORD PTR [rdx+r8*1]
   10001de52:	test   ax,ax
   10001de55:	je     0x10001de66
   10001de57:	mov    WORD PTR [rdx],ax
   10001de5a:	add    rdx,0x2
   10001de5e:	sub    r10,0x1
   10001de62:	jne    0x10001de41
   10001de64:	jmp    0x10001de6b
   10001de66:	test   r10,r10
   10001de69:	jne    0x10001de75
   10001de6b:	sub    rdx,0x2
   10001de6f:	mov    r11d,0x8007007a
   10001de75:	test   r11d,r11d
   10001de78:	mov    WORD PTR [rdx],0x0
   10001de7d:	mov    eax,r11d
   10001de80:	jne    0x10001dea8
   10001de82:	mov    ecx,DWORD PTR [rbx]
   10001de84:	mov    DWORD PTR [r9],ecx
   10001de87:	mov    ecx,DWORD PTR [rbx+0x4]
   10001de8a:	mov    DWORD PTR [r9+0x4],ecx
   10001de8e:	mov    ecx,DWORD PTR [rbx+0x8]
   10001de91:	mov    DWORD PTR [r9+0x8],ecx
   10001de95:	mov    ecx,DWORD PTR [rbx+0xc]
   10001de98:	mov    DWORD PTR [r9+0xc],ecx
   10001de9c:	mov    rcx,QWORD PTR [rsp+0x28]
   10001dea1:	mov    QWORD PTR [r9+0x220],rcx
   10001dea8:	mov    rbx,QWORD PTR [rsp+0x8]
   10001dead:	ret    
   10001deae:	nop
   10001deaf:	nop
   10001deb0:	nop
   10001deb1:	nop
   10001deb2:	nop
   10001deb3:	nop
   10001deb4:	nop
   10001deb5:	nop
   10001deb6:	nop
   10001deb7:	nop
   10001deb8:	nop
   10001deb9:	nop
   10001deba:	nop
   10001debb:	nop
   10001debc:	nop
   10001debd:	nop
   10001debe:	nop
   10001debf:	nop
   10001dec0:	push   rsi
   10001dec2:	mov    eax,DWORD PTR [rcx+0x228]
   10001dec8:	movzx  esi,r9w
   10001decc:	mov    r11,r8
   10001decf:	cmp    eax,DWORD PTR [rcx+0x22c]
   10001ded5:	mov    r10,rdx
   10001ded8:	jne    0x10001dee1
   10001deda:	mov    eax,0x80004005
   10001dedf:	pop    rsi
   10001dee0:	ret    
   10001dee1:	mov    QWORD PTR [rsp+0x10],rbx
   10001dee6:	mov    QWORD PTR [rsp+0x18],rdi
   10001deeb:	mov    rdi,rax
   10001deee:	add    eax,0x1
   10001def1:	xor    ebx,ebx
   10001def3:	mov    edx,0x105
   10001def8:	imul   rdi,rdi,0xb3c
   10001deff:	add    rdi,QWORD PTR [rcx+0x220]
   10001df06:	mov    DWORD PTR [rcx+0x228],eax
   10001df0c:	mov    r8,rdx
   10001df0f:	lea    rcx,[rdi+0x6]
   10001df13:	mov    r9d,ebx
   10001df16:	sub    r10,rcx
   10001df19:	nop    DWORD PTR [rax+0x0]
   10001df20:	lea    rax,[r8+0x7ffffef9]
   10001df27:	test   rax,rax
   10001df2a:	je     0x10001df45
   10001df2c:	movzx  eax,WORD PTR [r10+rcx*1]
   10001df31:	test   ax,ax
   10001df34:	je     0x10001df45
   10001df36:	mov    WORD PTR [rcx],ax
   10001df39:	add    rcx,0x2
   10001df3d:	sub    r8,0x1
   10001df41:	jne    0x10001df20
   10001df43:	jmp    0x10001df4a
   10001df45:	test   r8,r8
   10001df48:	jne    0x10001df54
   10001df4a:	sub    rcx,0x2
   10001df4e:	mov    r9d,0x8007007a
   10001df54:	mov    WORD PTR [rcx],bx
   10001df57:	lea    rcx,[rdi+0x316]
   10001df5e:	sub    r11,rcx
   10001df61:	lea    rax,[rdx+0x7ffffef9]
   10001df68:	test   rax,rax
   10001df6b:	je     0x10001df86
   10001df6d:	movzx  eax,WORD PTR [r11+rcx*1]
   10001df72:	test   ax,ax
   10001df75:	je     0x10001df86
   10001df77:	mov    WORD PTR [rcx],ax
   10001df7a:	add    rcx,0x2
   10001df7e:	sub    rdx,0x1
   10001df82:	jne    0x10001df61
   10001df84:	jmp    0x10001df8b
   10001df86:	test   rdx,rdx
   10001df89:	jne    0x10001df94
   10001df8b:	sub    rcx,0x2
   10001df8f:	mov    ebx,0x8007007a
   10001df94:	test   r9d,r9d
   10001df97:	mov    WORD PTR [rcx],0x0
   10001df9c:	mov    WORD PTR [rdi+0x4],si
   10001dfa0:	mov    rdi,QWORD PTR [rsp+0x18]
   10001dfa5:	cmovns r9d,ebx
   10001dfa9:	mov    rbx,QWORD PTR [rsp+0x10]
   10001dfae:	mov    eax,r9d
   10001dfb1:	pop    rsi
   10001dfb2:	ret    
   10001dfb3:	nop
   10001dfb4:	nop
   10001dfb5:	nop
   10001dfb6:	nop
   10001dfb7:	nop
   10001dfb8:	nop
   10001dfb9:	nop
   10001dfba:	nop
   10001dfbb:	nop
   10001dfbc:	nop
   10001dfbd:	nop
   10001dfbe:	nop
   10001dfbf:	nop
   10001dfc0:	mov    QWORD PTR [rsp+0x8],rbx
   10001dfc5:	mov    QWORD PTR [rsp+0x10],rsi
   10001dfca:	mov    QWORD PTR [rsp+0x18],rdi
   10001dfcf:	mov    QWORD PTR [rsp+0x20],r12
   10001dfd4:	push   r13
   10001dfd6:	sub    rsp,0x40
   10001dfda:	mov    r12,r9
   10001dfdd:	mov    r13,r8
   10001dfe0:	mov    edi,edx
   10001dfe2:	mov    rsi,rcx
   10001dfe5:	xor    ebx,ebx
   10001dfe7:	mov    DWORD PTR [rsp+0x30],ebx
   10001dfeb:	mov    rcx,QWORD PTR [rcx+0x10]
   10001dfef:	call   0x10001c890
   10001dff4:	mov    rcx,rax
   10001dff7:	mov    eax,0xb3c
   10001dffc:	mul    rdi
   10001dfff:	mov    rdx,0xffffffffffffffff
   10001e006:	cmovo  rax,rdx
   10001e00a:	mov    rdx,rax
   10001e00d:	call   0x10001bfe0
   10001e012:	test   rax,rax
   10001e015:	jne    0x10001e022
   10001e017:	mov    eax,0x8007000e
   10001e01c:	mov    DWORD PTR [rsp+0x30],eax
   10001e020:	jmp    0x10001e03f
   10001e022:	lea    rcx,[rsi+0x1120]
   10001e029:	mov    QWORD PTR [rsp+0x20],rax
   10001e02e:	mov    r9,r12
   10001e031:	mov    r8,r13
   10001e034:	mov    edx,edi
   10001e036:	call   0x10001de20
   10001e03b:	mov    DWORD PTR [rsp+0x30],eax
   10001e03f:	jmp    0x10001e05e
   10001e041:	mov    ebx,eax
   10001e043:	cmp    eax,0xc00000fd
   10001e048:	jne    0x10001e050
   10001e04a:	call   QWORD PTR [rip+0xfffffffffffe3408]        # 0x100001458
   10001e050:	mov    eax,0x80004005
   10001e055:	test   ebx,ebx
   10001e057:	cmovns ebx,eax
   10001e05a:	mov    eax,DWORD PTR [rsp+0x30]
   10001e05e:	test   eax,eax
   10001e060:	cmovns eax,ebx
   10001e063:	mov    rbx,QWORD PTR [rsp+0x50]
   10001e068:	mov    rsi,QWORD PTR [rsp+0x58]
   10001e06d:	mov    rdi,QWORD PTR [rsp+0x60]
   10001e072:	mov    r12,QWORD PTR [rsp+0x68]
   10001e077:	add    rsp,0x40
   10001e07b:	pop    r13
   10001e07d:	ret    
   10001e07e:	nop
   10001e07f:	nop
   10001e080:	nop
   10001e081:	nop
   10001e082:	nop
   10001e083:	nop
   10001e084:	nop
   10001e085:	nop
   10001e086:	nop
   10001e087:	nop
   10001e088:	nop
   10001e089:	nop
   10001e08a:	nop
   10001e08b:	nop
   10001e08c:	nop
   10001e08d:	nop
   10001e08e:	nop
   10001e08f:	nop
   10001e090:	mov    QWORD PTR [rsp+0x18],rbp
   10001e095:	mov    QWORD PTR [rsp+0x20],rsi
   10001e09a:	push   rdi
   10001e09b:	sub    rsp,0x20
   10001e09f:	cmp    DWORD PTR [rcx+0x13b8],0x0
   10001e0a6:	mov    rsi,r8
   10001e0a9:	mov    rbp,rdx
   10001e0ac:	mov    rdi,rcx
   10001e0af:	jne    0x10001e0c3
   10001e0b1:	xor    eax,eax
   10001e0b3:	mov    rbp,QWORD PTR [rsp+0x40]
   10001e0b8:	mov    rsi,QWORD PTR [rsp+0x48]
   10001e0bd:	add    rsp,0x20
   10001e0c1:	pop    rdi
   10001e0c2:	ret    
   10001e0c3:	mov    r9d,DWORD PTR [rcx+0x13b4]
   10001e0ca:	lea    r8,[rip+0x2af]        # 0x10001e380
   10001e0d1:	mov    rdx,rsi
   10001e0d4:	mov    rcx,rbp
   10001e0d7:	call   0x10001c630
   10001e0dc:	test   eax,eax
   10001e0de:	mov    r11d,eax
   10001e0e1:	js     0x10001e191
   10001e0e7:	mov    eax,DWORD PTR [rdi+0x13b4]
   10001e0ed:	cmp    eax,0x20000001
   10001e0f2:	jne    0x10001e115
   10001e0f4:	lea    r8,[rip+0x225]        # 0x10001e320
   10001e0fb:	mov    rdx,rsi
   10001e0fe:	mov    rcx,rbp
   10001e101:	mov    rbp,QWORD PTR [rsp+0x40]
   10001e106:	mov    rsi,QWORD PTR [rsp+0x48]
   10001e10b:	add    rsp,0x20
   10001e10f:	pop    rdi
   10001e110:	jmp    0x10000ea60
   10001e115:	test   eax,eax
   10001e117:	jne    0x10001e13a
   10001e119:	lea    r8,[rip+0x170]        # 0x10001e290
   10001e120:	mov    rdx,rsi
   10001e123:	mov    rcx,rbp
   10001e126:	mov    rbp,QWORD PTR [rsp+0x40]
   10001e12b:	mov    rsi,QWORD PTR [rsp+0x48]
   10001e130:	add    rsp,0x20
   10001e134:	pop    rdi
   10001e135:	jmp    0x10000ea60
   10001e13a:	mov    QWORD PTR [rsp+0x30],rbx
   10001e13f:	mov    QWORD PTR [rsp+0x38],r12
   10001e144:	lea    r12,[rip+0x65]        # 0x10001e1b0
   10001e14b:	xor    ebx,ebx
   10001e14d:	nop    DWORD PTR [rax]
   10001e150:	mov    ecx,DWORD PTR [rbx+r12*1]
   10001e154:	mov    eax,ecx
   10001e156:	and    eax,DWORD PTR [rdi+0x13b4]
   10001e15c:	cmp    ecx,eax
   10001e15e:	jne    0x10001e177
   10001e160:	mov    r8,QWORD PTR [rbx+r12*1+0x8]
   10001e165:	mov    rdx,rsi
   10001e168:	mov    rcx,rbp
   10001e16b:	call   0x10000ea60
   10001e170:	test   eax,eax
   10001e172:	mov    r11d,eax
   10001e175:	js     0x10001e187
   10001e177:	add    rbx,0x10
   10001e17b:	cmp    rbx,0xe0
   10001e182:	jb     0x10001e150
   10001e184:	mov    eax,r11d
   10001e187:	mov    rbx,QWORD PTR [rsp+0x30]
   10001e18c:	mov    r12,QWORD PTR [rsp+0x38]
   10001e191:	mov    rbp,QWORD PTR [rsp+0x40]
   10001e196:	mov    rsi,QWORD PTR [rsp+0x48]
   10001e19b:	add    rsp,0x20
   10001e19f:	pop    rdi
   10001e1a0:	ret    
   10001e1a1:	nop
   10001e1a2:	nop
   10001e1a3:	nop
   10001e1a4:	nop
   10001e1a5:	nop
   10001e1a6:	nop
   10001e1a7:	nop
   10001e1a8:	nop
   10001e1a9:	nop
   10001e1aa:	nop
   10001e1ab:	nop
   10001e1ac:	nop
   10001e1ad:	nop
   10001e1ae:	nop
   10001e1af:	nop
   10001e1b0:	add    BYTE PTR [rax],dl
   10001e1b2:	add    BYTE PTR [rax],ah
   10001e1b4:	add    BYTE PTR [rax],al
   10001e1b6:	add    BYTE PTR [rax],al
   10001e1b8:	lock sub al,0x0
   10001e1bb:	add    BYTE PTR [rcx],al
   10001e1bd:	add    BYTE PTR [rax],al
   10001e1bf:	add    BYTE PTR [rdx],al
   10001e1c1:	add    BYTE PTR [rax],al
   10001e1c3:	and    BYTE PTR [rax],al
   10001e1c5:	add    BYTE PTR [rax],al
   10001e1c7:	add    BYTE PTR [rax+0x2d],al
   10001e1ca:	add    BYTE PTR [rax],al
   10001e1cc:	add    DWORD PTR [rax],eax
   10001e1ce:	add    BYTE PTR [rax],al
   10001e1d0:	add    al,0x0
   10001e1d2:	add    BYTE PTR [rax],ah
   10001e1d4:	add    BYTE PTR [rax],al
   10001e1d6:	add    BYTE PTR [rax],al
   10001e1d8:	nop
   10001e1d9:	sub    eax,0x10000
   10001e1de:	add    BYTE PTR [rax],al
   10001e1e0:	or     BYTE PTR [rax],al
   10001e1e2:	add    BYTE PTR [rax],ah
   10001e1e4:	add    BYTE PTR [rax],al
   10001e1e6:	add    BYTE PTR [rax],al
   10001e1e8:	lock sub eax,0x10000
   10001e1ee:	add    BYTE PTR [rax],al
   10001e1f0:	adc    BYTE PTR [rax],al
   10001e1f2:	add    BYTE PTR [rax],ah
   10001e1f4:	add    BYTE PTR [rax],al
   10001e1f6:	add    BYTE PTR [rax],al
   10001e1f8:	rex
   10001e1f9:	add    BYTE PTR cs:[rax],al
   10001e1fc:	add    DWORD PTR [rax],eax
   10001e1fe:	add    BYTE PTR [rax],al
   10001e200:	and    BYTE PTR [rax],al
   10001e202:	add    BYTE PTR [rax],ah
   10001e204:	add    BYTE PTR [rax],al
   10001e206:	add    BYTE PTR [rax],al
   10001e208:	movabs al,ds:0x400000000100002e
   10001e211:	add    BYTE PTR [rax],al
   10001e213:	and    BYTE PTR [rax],al
   10001e215:	add    BYTE PTR [rax],al
   10001e217:	add    al,dh
   10001e219:	add    BYTE PTR cs:[rax],al
   10001e21c:	add    DWORD PTR [rax],eax
   10001e21e:	add    BYTE PTR [rax],al
   10001e220:	add    BYTE PTR [rax],0x0
   10001e223:	and    BYTE PTR [rax],al
   10001e225:	add    BYTE PTR [rax],al
   10001e227:	add    BYTE PTR [rax+0x2f],dl
   10001e22a:	add    BYTE PTR [rax],al
   10001e22c:	add    DWORD PTR [rax],eax
   10001e22e:	add    BYTE PTR [rax],al
   10001e230:	add    BYTE PTR [rcx],al
   10001e232:	add    BYTE PTR [rax],ah
   10001e234:	add    BYTE PTR [rax],al
   10001e236:	add    BYTE PTR [rax],al
   10001e238:	mov    al,0x2f
   10001e23a:	add    BYTE PTR [rax],al
   10001e23c:	add    DWORD PTR [rax],eax
   10001e23e:	add    BYTE PTR [rax],al
   10001e240:	add    BYTE PTR [rdx],al
   10001e242:	add    BYTE PTR [rax],ah
   10001e244:	add    BYTE PTR [rax],al
   10001e246:	add    BYTE PTR [rax],al
   10001e248:	add    BYTE PTR [rax],dh
   10001e24a:	add    BYTE PTR [rax],al
   10001e24c:	add    DWORD PTR [rax],eax
   10001e24e:	add    BYTE PTR [rax],al
   10001e250:	add    BYTE PTR [rax+rax*1],al
   10001e253:	and    BYTE PTR [rax],al
   10001e255:	add    BYTE PTR [rax],al
   10001e257:	add    BYTE PTR [rax+0x30],dl
   10001e25a:	add    BYTE PTR [rax],al
   10001e25c:	add    DWORD PTR [rax],eax
   10001e25e:	add    BYTE PTR [rax],al
   10001e260:	add    BYTE PTR [rax],cl
   10001e262:	add    BYTE PTR [rax],ah
   10001e264:	add    BYTE PTR [rax],al
   10001e266:	add    BYTE PTR [rax],al
   10001e268:	mov    al,0x30
   10001e26a:	add    BYTE PTR [rax],al
   10001e26c:	add    DWORD PTR [rax],eax
   10001e26e:	add    BYTE PTR [rax],al
   10001e270:	add    BYTE PTR [rax],ah
   10001e272:	add    BYTE PTR [rax],ah
   10001e274:	add    BYTE PTR [rax],al
   10001e276:	add    BYTE PTR [rax],al
   10001e278:	adc    BYTE PTR [rcx],dh
   10001e27a:	add    BYTE PTR [rax],al
   10001e27c:	add    DWORD PTR [rax],eax
   10001e27e:	add    BYTE PTR [rax],al
   10001e280:	add    BYTE PTR [rax+0x2000],al
   10001e286:	add    BYTE PTR [rax],al
   10001e288:	movabs al,ds:0x4500000001000031
   10001e291:	add    BYTE PTR [rdx+0x0],dh
   10001e294:	jb     0x10001e296
   10001e296:	outs   dx,DWORD PTR ds:[rsi]
   10001e297:	add    BYTE PTR [rdx+0x0],dh
   10001e29a:	and    BYTE PTR [rax],al
   10001e29c:	sub    eax,0x44002000
   10001e2a1:	add    BYTE PTR [rbp+0x0],dh
   10001e2a4:	ins    DWORD PTR es:[rdi],dx
   10001e2a5:	add    BYTE PTR [rax+0x0],dh
   10001e2a8:	imul   eax,DWORD PTR [rax],0x67006e
   10001e2ae:	and    BYTE PTR [rax],al
   10001e2b0:	jo     0x10001e2b2
   10001e2b2:	jb     0x10001e2b4
   10001e2b4:	outs   dx,DWORD PTR ds:[rsi]
   10001e2b5:	add    BYTE PTR [rbx+0x0],ah
   10001e2b8:	add    BYTE PTR gs:[rbx+0x0],dh
   10001e2bc:	jae    0x10001e2be
   10001e2be:	and    BYTE PTR [rax],al
   10001e2c0:	ja     0x10001e2c2
   10001e2c2:	(bad)  
   10001e2c3:	add    BYTE PTR [rbx+0x0],dh
   10001e2c6:	and    BYTE PTR [rax],al
   10001e2c8:	outs   dx,BYTE PTR ds:[rsi]
   10001e2c9:	add    BYTE PTR [rdi+0x0],ch
   10001e2cc:	je     0x10001e2ce
   10001e2ce:	and    BYTE PTR [rax],al
   10001e2d0:	jae    0x10001e2d2
   10001e2d2:	je     0x10001e2d4
   10001e2d4:	(bad)  
   10001e2d5:	add    BYTE PTR [rdx+0x0],dh
   10001e2d8:	je     0x10001e2da
   10001e2da:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   10001e2df:	add    BYTE PTR [rdi+0x0],ch
   10001e2e2:	jb     0x10001e2e4
   10001e2e4:	and    BYTE PTR [rax],al
   10001e2e6:	je     0x10001e2e8
   10001e2e8:	add    BYTE PTR gs:[rdx+0x0],dh
   10001e2ec:	ins    DWORD PTR es:[rdi],dx
   10001e2ed:	add    BYTE PTR [rcx+0x0],ch
   10001e2f0:	outs   dx,BYTE PTR ds:[rsi]
   10001e2f1:	add    BYTE PTR [rcx+0x0],ah
   10001e2f4:	je     0x10001e2f6
   10001e2f6:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   10001e2fb:	add    BYTE PTR [rax+0x0],dh
   10001e2fe:	jb     0x10001e300
   10001e300:	add    BYTE PTR gs:[rbp+0x0],ch
   10001e304:	(bad)  
   10001e305:	add    BYTE PTR [rax+rax*1+0x75],dh
   10001e309:	add    BYTE PTR [rdx+0x0],dh
   10001e30c:	add    BYTE PTR gs:[rax+rax*1+0x79],ch
   10001e311:	add    BYTE PTR [rsi],ch
   10001e313:	add    BYTE PTR [rip+0xa00],cl        # 0x10001ed19
   10001e319:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001e31f:	nop
   10001e320:	add    BYTE PTR [r8+0x0],r15b
   10001e324:	je     0x10001e326
   10001e326:	add    BYTE PTR gs:[rdx+0x0],dh
   10001e32a:	outs   dx,BYTE PTR ds:[rsi]
   10001e32b:	add    BYTE PTR [rcx+0x0],ah
   10001e32e:	ins    BYTE PTR es:[rdi],dx
   10001e32f:	add    BYTE PTR [rax],ah
   10001e331:	add    BYTE PTR [rax+rax*1+0x75],ah
   10001e335:	add    BYTE PTR [rbp+0x0],ch
   10001e338:	jo     0x10001e33a
   10001e33a:	and    BYTE PTR [rax],al
   10001e33c:	jo     0x10001e33e
   10001e33e:	jb     0x10001e340
   10001e340:	outs   dx,DWORD PTR ds:[rsi]
   10001e341:	add    BYTE PTR [rbx+0x0],ah
   10001e344:	add    BYTE PTR gs:[rbx+0x0],dh
   10001e348:	jae    0x10001e34a
   10001e34a:	and    BYTE PTR [rax],al
   10001e34c:	jb     0x10001e34e
   10001e34e:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   10001e353:	add    BYTE PTR [rdx+0x0],dh
   10001e356:	outs   dx,BYTE PTR ds:[rsi]
   10001e357:	add    BYTE PTR [rbp+0x0],ah
   10001e35a:	add    BYTE PTR fs:[rax],ah
   10001e35d:	add    BYTE PTR [rsi+0x0],ch
   10001e360:	outs   dx,DWORD PTR ds:[rsi]
   10001e361:	add    BYTE PTR [rax],ah
   10001e363:	add    BYTE PTR [rbp+0x0],ah
   10001e366:	jb     0x10001e368
   10001e368:	jb     0x10001e36a
   10001e36a:	outs   dx,DWORD PTR ds:[rsi]
   10001e36b:	add    BYTE PTR [rdx+0x0],dh
   10001e36e:	jae    0x10001e370
   10001e370:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x10001ed77
   10001e377:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001e37d:	nop
   10001e37e:	nop
   10001e37f:	nop
   10001e380:	add    BYTE PTR [r8+0x0],r15b
   10001e384:	je     0x10001e386
   10001e386:	add    BYTE PTR gs:[rdx+0x0],dh
   10001e38a:	outs   dx,BYTE PTR ds:[rsi]
   10001e38b:	add    BYTE PTR [rcx+0x0],ah
   10001e38e:	ins    BYTE PTR es:[rdi],dx
   10001e38f:	add    BYTE PTR [rax],ah
   10001e391:	add    BYTE PTR [rax+rax*1+0x75],ah
   10001e395:	add    BYTE PTR [rbp+0x0],ch
   10001e398:	jo     0x10001e39a
   10001e39a:	and    BYTE PTR [rax],al
   10001e39c:	jo     0x10001e39e
   10001e39e:	jb     0x10001e3a0
   10001e3a0:	outs   dx,DWORD PTR ds:[rsi]
   10001e3a1:	add    BYTE PTR [rbx+0x0],ah
   10001e3a4:	add    BYTE PTR gs:[rbx+0x0],dh
   10001e3a8:	jae    0x10001e3aa
   10001e3aa:	and    BYTE PTR [rax],al
   10001e3ac:	jb     0x10001e3ae
   10001e3ae:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   10001e3b3:	add    BYTE PTR [rdx+0x0],dh
   10001e3b6:	outs   dx,BYTE PTR ds:[rsi]
   10001e3b7:	add    BYTE PTR [rax],ah
   10001e3b9:	add    BYTE PTR [rbx+0x0],ah
   10001e3bc:	outs   dx,DWORD PTR ds:[rsi]
   10001e3bd:	add    BYTE PTR [rax+rax*1+0x65],ah
   10001e3c1:	add    BYTE PTR [rax],ah
   10001e3c3:	add    BYTE PTR [rax],dh
   10001e3c5:	add    BYTE PTR [rax+0x0],bh
   10001e3c8:	and    eax,0x2e007800
   10001e3cd:	add    BYTE PTR [rip+0xa00],cl        # 0x10001edd3
   10001e3d3:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001e3d9:	nop
   10001e3da:	nop
   10001e3db:	nop
   10001e3dc:	nop
   10001e3dd:	nop
   10001e3de:	nop
   10001e3df:	nop
   10001e3e0:	mov    QWORD PTR [rsp+0x8],rbx
   10001e3e5:	push   rdi
   10001e3e6:	sub    rsp,0x30
   10001e3ea:	xor    edi,edi
   10001e3ec:	mov    rbx,QWORD PTR [rcx+0x18]
   10001e3f0:	mov    QWORD PTR [rsp+0x20],rbx
   10001e3f5:	test   rbx,rbx
   10001e3f8:	je     0x10001e41a
   10001e3fa:	lea    rcx,[rbx+0xc]
   10001e3fe:	mov    edx,DWORD PTR [rcx]
   10001e400:	shl    rdx,0x4
   10001e404:	add    rdx,0xc
   10001e408:	call   0x10001c170
   10001e40d:	mov    DWORD PTR [rbx+0x8],eax
   10001e410:	mov    rbx,QWORD PTR [rbx]
   10001e413:	mov    QWORD PTR [rsp+0x20],rbx
   10001e418:	jmp    0x10001e3f5
   10001e41a:	jmp    0x10001e435
   10001e41c:	mov    edi,eax
   10001e41e:	cmp    eax,0xc00000fd
   10001e423:	jne    0x10001e42b
   10001e425:	call   QWORD PTR [rip+0xfffffffffffe302d]        # 0x100001458
   10001e42b:	mov    eax,0x80004005
   10001e430:	test   edi,edi
   10001e432:	cmovns edi,eax
   10001e435:	mov    eax,edi
   10001e437:	mov    rbx,QWORD PTR [rsp+0x40]
   10001e43c:	add    rsp,0x30
   10001e440:	pop    rdi
   10001e441:	ret    
   10001e442:	nop
   10001e443:	nop
   10001e444:	nop
   10001e445:	nop
   10001e446:	nop
   10001e447:	nop
   10001e448:	nop
   10001e449:	nop
   10001e44a:	nop
   10001e44b:	nop
   10001e44c:	nop
   10001e44d:	nop
   10001e44e:	nop
   10001e44f:	nop
   10001e450:	mov    QWORD PTR [rsp+0x8],rbx
   10001e455:	push   rdi
   10001e456:	sub    rsp,0x20
   10001e45a:	xor    edi,edi
   10001e45c:	mov    DWORD PTR [rcx],0x2
   10001e462:	mov    rbx,rcx
   10001e465:	mov    DWORD PTR [rcx+0x4],edi
   10001e468:	mov    QWORD PTR [rcx+0x8],rdi
   10001e46c:	mov    QWORD PTR [rcx+0x10],rdi
   10001e470:	mov    QWORD PTR [rcx+0x18],rdi
   10001e474:	mov    QWORD PTR [rcx+0x20],rdi
   10001e478:	mov    QWORD PTR [rcx+0x28],rdi
   10001e47c:	mov    QWORD PTR [rcx+0x30],rdi
   10001e480:	mov    QWORD PTR [rcx+0x38],rdi
   10001e484:	mov    QWORD PTR [rcx+0x40],rdi
   10001e488:	mov    QWORD PTR [rcx+0x48],rdi
   10001e48c:	mov    QWORD PTR [rcx+0x50],rdi
   10001e490:	mov    DWORD PTR [rcx+0x58],edi
   10001e493:	mov    DWORD PTR [rcx+0x5c],edi
   10001e496:	mov    DWORD PTR [rcx+0x60],edi
   10001e499:	mov    DWORD PTR [rcx+0x64],edi
   10001e49c:	mov    QWORD PTR [rcx+0x68],rdi
   10001e4a0:	mov    QWORD PTR [rcx+0x78],rdi
   10001e4a4:	mov    QWORD PTR [rcx+0x80],rdi
   10001e4ab:	mov    DWORD PTR [rcx+0x88],edi
   10001e4b1:	mov    DWORD PTR [rcx+0x8c],edi
   10001e4b7:	mov    DWORD PTR [rcx+0x90],edi
   10001e4bd:	mov    DWORD PTR [rcx+0x94],edi
   10001e4c3:	mov    DWORD PTR [rcx+0x98],edi
   10001e4c9:	mov    DWORD PTR [rcx+0x9c],edi
   10001e4cf:	mov    DWORD PTR [rcx+0xa0],edi
   10001e4d5:	mov    DWORD PTR [rcx+0xa4],edi
   10001e4db:	mov    DWORD PTR [rcx+0xa8],edi
   10001e4e1:	mov    DWORD PTR [rcx+0xac],edi
   10001e4e7:	mov    DWORD PTR [rcx+0xb0],edi
   10001e4ed:	mov    DWORD PTR [rcx+0xb4],edi
   10001e4f3:	mov    DWORD PTR [rcx+0xb8],edi
   10001e4f9:	mov    DWORD PTR [rcx+0xbc],edi
   10001e4ff:	mov    DWORD PTR [rcx+0xc4],edi
   10001e505:	mov    DWORD PTR [rcx+0xc8],edi
   10001e50b:	mov    DWORD PTR [rcx+0xcc],edi
   10001e511:	mov    QWORD PTR [rcx+0xd0],rdi
   10001e518:	mov    DWORD PTR [rcx+0xd8],edi
   10001e51e:	mov    DWORD PTR [rcx+0xdc],edi
   10001e524:	mov    DWORD PTR [rcx+0xe0],0x80
   10001e52e:	mov    DWORD PTR [rcx+0xe4],edi
   10001e534:	add    rcx,0xe8
   10001e53b:	xor    edx,edx
   10001e53d:	mov    r8d,0x800
   10001e543:	call   0x10001f80c
   10001e548:	lea    rcx,[rbx+0x900]
   10001e54f:	xor    edx,edx
   10001e551:	mov    r8d,0x800
   10001e557:	mov    QWORD PTR [rbx+0x8e8],rdi
   10001e55e:	mov    DWORD PTR [rbx+0x8f0],edi
   10001e564:	mov    DWORD PTR [rbx+0x8f4],edi
   10001e56a:	mov    DWORD PTR [rbx+0x8f8],0x80
   10001e574:	mov    DWORD PTR [rbx+0x8fc],edi
   10001e57a:	call   0x10001f80c
   10001e57f:	lea    rcx,[rbx+0x1108]
   10001e586:	xor    edx,edx
   10001e588:	mov    r8d,0x230
   10001e58e:	call   0x10001f80c
   10001e593:	mov    DWORD PTR [rbx+0x70],edi
   10001e596:	mov    DWORD PTR [rbx+0x74],edi
   10001e599:	mov    rax,rbx
   10001e59c:	mov    rbx,QWORD PTR [rsp+0x30]
   10001e5a1:	add    rsp,0x20
   10001e5a5:	pop    rdi
   10001e5a6:	ret    
   10001e5a7:	nop
   10001e5a8:	nop
   10001e5a9:	nop
   10001e5aa:	nop
   10001e5ab:	nop
   10001e5ac:	nop
   10001e5ad:	nop
   10001e5ae:	nop
   10001e5af:	nop
   10001e5b0:	mov    QWORD PTR [rsp+0x8],rbx
   10001e5b5:	mov    QWORD PTR [rsp+0x10],rbp
   10001e5ba:	mov    QWORD PTR [rsp+0x18],rsi
   10001e5bf:	push   rdi
   10001e5c0:	sub    rsp,0x20
   10001e5c4:	lea    rax,[rip+0xfffffffffffe4c65]        # 0x100003230
   10001e5cb:	mov    rdi,rcx
   10001e5ce:	mov    DWORD PTR [rcx+0x8],0x1
   10001e5d5:	mov    QWORD PTR [rcx],rax
   10001e5d8:	xor    ebp,ebp
   10001e5da:	add    rcx,0x18
   10001e5de:	mov    QWORD PTR [rcx-0x8],rbp
   10001e5e2:	mov    ebx,r8d
   10001e5e5:	mov    rsi,rdx
   10001e5e8:	call   0x10001e450
   10001e5ed:	test   rsi,rsi
   10001e5f0:	mov    QWORD PTR [rdi+0x1360],0x200
   10001e5fb:	mov    QWORD PTR [rdi+0x1368],rbp
   10001e602:	mov    QWORD PTR [rdi+0x1370],rbp
   10001e609:	lea    r11,[rdi+0xe8]
   10001e610:	mov    QWORD PTR [rdi+0x1378],r11
   10001e617:	mov    QWORD PTR [rdi+0x1380],r11
   10001e61e:	mov    QWORD PTR [rdi+0x1388],0x200
   10001e629:	mov    QWORD PTR [rdi+0x1390],rbp
   10001e630:	mov    QWORD PTR [rdi+0x1398],rbp
   10001e637:	lea    rax,[rdi+0x900]
   10001e63e:	mov    QWORD PTR [rdi+0x13a0],rax
   10001e645:	mov    QWORD PTR [rdi+0x13a8],rax
   10001e64c:	mov    DWORD PTR [rdi+0x13b0],ebx
   10001e652:	mov    DWORD PTR [rdi+0x13b4],ebp
   10001e658:	mov    DWORD PTR [rdi+0x13b8],ebp
   10001e65e:	mov    DWORD PTR [rdi+0x13bc],ebp
   10001e664:	mov    DWORD PTR [rdi+0x13c0],ebp
   10001e66a:	mov    QWORD PTR [rdi+0x13c8],rbp
   10001e671:	je     0x10001e6b3
   10001e673:	mov    rcx,QWORD PTR [rdi+0x10]
   10001e677:	test   rcx,rcx
   10001e67a:	je     0x10001e686
   10001e67c:	mov    rax,QWORD PTR [rcx]
   10001e67f:	call   QWORD PTR [rax+0x10]
   10001e682:	mov    QWORD PTR [rdi+0x10],rbp
   10001e686:	mov    QWORD PTR [rdi+0x10],rsi
   10001e68a:	mov    rax,QWORD PTR [rsi]
   10001e68d:	mov    rcx,rsi
   10001e690:	call   QWORD PTR [rax+0x8]
   10001e693:	mov    rcx,QWORD PTR [rdi+0x10]
   10001e697:	call   0x10001c890
   10001e69c:	mov    rcx,QWORD PTR [rdi+0x10]
   10001e6a0:	mov    QWORD PTR [rdi+0x1370],rax
   10001e6a7:	call   0x10001c890
   10001e6ac:	mov    QWORD PTR [rdi+0x1398],rax
   10001e6b3:	call   QWORD PTR [rip+0xfffffffffffe2b1f]        # 0x1000011d8
   10001e6b9:	lea    rcx,[rdi+0x13d0]
   10001e6c0:	xor    edx,edx
   10001e6c2:	mov    r8d,0x208
   10001e6c8:	mov    DWORD PTR [rdi+0x74],eax
   10001e6cb:	call   0x10001f80c
   10001e6d0:	xor    edx,edx
   10001e6d2:	lea    rcx,[rdi+0x15d8]
   10001e6d9:	lea    r8d,[rdx+0x68]
   10001e6dd:	call   0x10001f80c
   10001e6e2:	mov    rbx,QWORD PTR [rsp+0x30]
   10001e6e7:	mov    rbp,QWORD PTR [rsp+0x38]
   10001e6ec:	mov    rsi,QWORD PTR [rsp+0x40]
   10001e6f1:	xor    eax,eax
   10001e6f3:	mov    QWORD PTR [rdi+0x1640],rax
   10001e6fa:	mov    QWORD PTR [rdi+0x1648],rax
   10001e701:	mov    QWORD PTR [rdi+0x1650],rax
   10001e708:	mov    rax,rdi
   10001e70b:	add    rsp,0x20
   10001e70f:	pop    rdi
   10001e710:	ret    
   10001e711:	nop
   10001e712:	nop
   10001e713:	nop
   10001e714:	nop
   10001e715:	nop
   10001e716:	nop
   10001e717:	nop
   10001e718:	nop
   10001e719:	nop
   10001e71a:	nop
   10001e71b:	nop
   10001e71c:	nop
   10001e71d:	nop
   10001e71e:	nop
   10001e71f:	nop
   10001e720:	mov    QWORD PTR [rsp+0x10],rbx
   10001e725:	mov    QWORD PTR [rsp+0x18],rbp
   10001e72a:	mov    QWORD PTR [rsp+0x20],rsi
   10001e72f:	push   rdi
   10001e730:	sub    rsp,0x20
   10001e734:	xor    ebx,ebx
   10001e736:	test   rdx,rdx
   10001e739:	mov    rsi,r8
   10001e73c:	mov    rbp,rdx
   10001e73f:	mov    rdi,rcx
   10001e742:	je     0x10001e7fa
   10001e748:	test   r8,r8
   10001e74b:	je     0x10001e7fa
   10001e751:	mov    r9,QWORD PTR [rcx+0x1380]
   10001e758:	mov    QWORD PTR [rsp+0x30],r12
   10001e75d:	mov    eax,DWORD PTR [r9+0x10]
   10001e761:	cmp    DWORD PTR [r9+0xc],eax
   10001e765:	jb     0x10001e7b0
   10001e767:	mov    rcx,QWORD PTR [rcx+0x1370]
   10001e76e:	test   rcx,rcx
   10001e771:	je     0x10001e7ec
   10001e773:	mov    r12,QWORD PTR [rdi+0x1360]
   10001e77a:	mov    rdx,r12
   10001e77d:	shl    rdx,0x4
   10001e781:	add    rdx,0x18
   10001e785:	call   0x10001bfe0
   10001e78a:	test   rax,rax
   10001e78d:	mov    r11,rax
   10001e790:	je     0x10001e7ec
   10001e792:	mov    QWORD PTR [rax],rbx
   10001e795:	mov    DWORD PTR [rax+0x8],ebx
   10001e798:	mov    DWORD PTR [rax+0xc],ebx
   10001e79b:	mov    DWORD PTR [rax+0x10],r12d
   10001e79f:	mov    rax,QWORD PTR [rdi+0x1380]
   10001e7a6:	mov    QWORD PTR [rax],r11
   10001e7a9:	mov    QWORD PTR [rdi+0x1380],r11
   10001e7b0:	mov    rcx,QWORD PTR [rdi+0x1380]
   10001e7b7:	mov    edx,DWORD PTR [rcx+0xc]
   10001e7ba:	lea    eax,[rdx+0x1]
   10001e7bd:	add    rdx,rdx
   10001e7c0:	mov    DWORD PTR [rcx+0xc],eax
   10001e7c3:	mov    rax,QWORD PTR [rdi+0x1380]
   10001e7ca:	add    QWORD PTR [rdi+0x1368],0x1
   10001e7d2:	lea    rcx,[rax+rdx*8+0x18]
   10001e7d7:	test   rcx,rcx
   10001e7da:	je     0x10001e7ec
   10001e7dc:	mov    r12,QWORD PTR [rsp+0x30]
   10001e7e1:	mov    QWORD PTR [rcx],rbp
   10001e7e4:	mov    QWORD PTR [rcx+0x8],rsi
   10001e7e8:	mov    eax,ebx
   10001e7ea:	jmp    0x10001e7fc
   10001e7ec:	mov    r12,QWORD PTR [rsp+0x30]
   10001e7f1:	mov    ebx,0x8007000e
   10001e7f6:	mov    eax,ebx
   10001e7f8:	jmp    0x10001e7fc
   10001e7fa:	xor    eax,eax
   10001e7fc:	mov    rbx,QWORD PTR [rsp+0x38]
   10001e801:	mov    rbp,QWORD PTR [rsp+0x40]
   10001e806:	mov    rsi,QWORD PTR [rsp+0x48]
   10001e80b:	add    rsp,0x20
   10001e80f:	pop    rdi
   10001e810:	ret    
   10001e811:	nop
   10001e812:	nop
   10001e813:	nop
   10001e814:	nop
   10001e815:	nop
   10001e816:	nop
   10001e817:	nop
   10001e818:	nop
   10001e819:	nop
   10001e81a:	nop
   10001e81b:	nop
   10001e81c:	nop
   10001e81d:	nop
   10001e81e:	nop
   10001e81f:	nop
   10001e820:	mov    QWORD PTR [rsp+0x10],rbx
   10001e825:	mov    QWORD PTR [rsp+0x18],rbp
   10001e82a:	mov    QWORD PTR [rsp+0x20],rsi
   10001e82f:	push   rdi
   10001e830:	sub    rsp,0x20
   10001e834:	xor    ebx,ebx
   10001e836:	test   rdx,rdx
   10001e839:	mov    rsi,r8
   10001e83c:	mov    rbp,rdx
   10001e83f:	mov    rdi,rcx
   10001e842:	je     0x10001e8fa
   10001e848:	test   r8,r8
   10001e84b:	je     0x10001e8fa
   10001e851:	mov    r9,QWORD PTR [rcx+0x13a8]
   10001e858:	mov    QWORD PTR [rsp+0x30],r12
   10001e85d:	mov    eax,DWORD PTR [r9+0x10]
   10001e861:	cmp    DWORD PTR [r9+0xc],eax
   10001e865:	jb     0x10001e8b0
   10001e867:	mov    rcx,QWORD PTR [rcx+0x1398]
   10001e86e:	test   rcx,rcx
   10001e871:	je     0x10001e8ec
   10001e873:	mov    r12,QWORD PTR [rdi+0x1388]
   10001e87a:	mov    rdx,r12
   10001e87d:	shl    rdx,0x4
   10001e881:	add    rdx,0x18
   10001e885:	call   0x10001bfe0
   10001e88a:	test   rax,rax
   10001e88d:	mov    r11,rax
   10001e890:	je     0x10001e8ec
   10001e892:	mov    QWORD PTR [rax],rbx
   10001e895:	mov    DWORD PTR [rax+0x8],ebx
   10001e898:	mov    DWORD PTR [rax+0xc],ebx
   10001e89b:	mov    DWORD PTR [rax+0x10],r12d
   10001e89f:	mov    rax,QWORD PTR [rdi+0x13a8]
   10001e8a6:	mov    QWORD PTR [rax],r11
   10001e8a9:	mov    QWORD PTR [rdi+0x13a8],r11
   10001e8b0:	mov    rcx,QWORD PTR [rdi+0x13a8]
   10001e8b7:	mov    edx,DWORD PTR [rcx+0xc]
   10001e8ba:	lea    eax,[rdx+0x1]
   10001e8bd:	add    rdx,rdx
   10001e8c0:	mov    DWORD PTR [rcx+0xc],eax
   10001e8c3:	mov    rax,QWORD PTR [rdi+0x13a8]
   10001e8ca:	add    QWORD PTR [rdi+0x1390],0x1
   10001e8d2:	lea    rcx,[rax+rdx*8+0x18]
   10001e8d7:	test   rcx,rcx
   10001e8da:	je     0x10001e8ec
   10001e8dc:	mov    r12,QWORD PTR [rsp+0x30]
   10001e8e1:	mov    QWORD PTR [rcx],rbp
   10001e8e4:	mov    QWORD PTR [rcx+0x8],rsi
   10001e8e8:	mov    eax,ebx
   10001e8ea:	jmp    0x10001e8fc
   10001e8ec:	mov    r12,QWORD PTR [rsp+0x30]
   10001e8f1:	mov    ebx,0x8007000e
   10001e8f6:	mov    eax,ebx
   10001e8f8:	jmp    0x10001e8fc
   10001e8fa:	xor    eax,eax
   10001e8fc:	mov    rbx,QWORD PTR [rsp+0x38]
   10001e901:	mov    rbp,QWORD PTR [rsp+0x40]
   10001e906:	mov    rsi,QWORD PTR [rsp+0x48]
   10001e90b:	add    rsp,0x20
   10001e90f:	pop    rdi
   10001e910:	ret    
   10001e911:	nop
   10001e912:	nop
   10001e913:	nop
   10001e914:	nop
   10001e915:	nop
   10001e916:	nop
   10001e917:	nop
   10001e918:	nop
   10001e919:	nop
   10001e91a:	nop
   10001e91b:	nop
   10001e91c:	nop
   10001e91d:	nop
   10001e91e:	nop
   10001e91f:	nop
   10001e920:	push   rbx
   10001e922:	sub    rsp,0x30
   10001e926:	xor    ebx,ebx
   10001e928:	mov    DWORD PTR [rsp+0x20],ebx
   10001e92c:	add    rcx,0x1120
   10001e933:	call   0x10001dec0
   10001e938:	mov    DWORD PTR [rsp+0x20],eax
   10001e93c:	jmp    0x10001e95b
   10001e93e:	mov    ebx,eax
   10001e940:	cmp    eax,0xc00000fd
   10001e945:	jne    0x10001e94d
   10001e947:	call   QWORD PTR [rip+0xfffffffffffe2b0b]        # 0x100001458
   10001e94d:	mov    eax,0x80004005
   10001e952:	test   ebx,ebx
   10001e954:	cmovns ebx,eax
   10001e957:	mov    eax,DWORD PTR [rsp+0x20]
   10001e95b:	test   eax,eax
   10001e95d:	cmovns eax,ebx
   10001e960:	add    rsp,0x30
   10001e964:	pop    rbx
   10001e965:	ret    
   10001e966:	nop
   10001e967:	nop
   10001e968:	nop
   10001e969:	nop
   10001e96a:	nop
   10001e96b:	nop
   10001e96c:	nop
   10001e96d:	nop
   10001e96e:	nop
   10001e96f:	nop
   10001e970:	mov    QWORD PTR [rsp+0x8],rbx
   10001e975:	mov    QWORD PTR [rsp+0x10],rsi
   10001e97a:	push   rdi
   10001e97b:	sub    rsp,0x30
   10001e97f:	mov    rsi,rcx
   10001e982:	xor    edi,edi
   10001e984:	mov    DWORD PTR [rsp+0x20],edi
   10001e988:	add    rcx,0x18
   10001e98c:	mov    edx,0xa0
   10001e991:	call   0x10001c170
   10001e996:	mov    DWORD PTR [rsi+0xb8],eax
   10001e99c:	mov    rcx,QWORD PTR [rsi+0x38]
   10001e9a0:	call   0x10001c1c0
   10001e9a5:	mov    DWORD PTR [rsi+0xc0],eax
   10001e9ab:	mov    rcx,QWORD PTR [rsi+0x40]
   10001e9af:	call   0x10001c1c0
   10001e9b4:	mov    DWORD PTR [rsi+0xc4],eax
   10001e9ba:	lea    rcx,[rsi+0x1360]
   10001e9c1:	call   0x10001e3e0
   10001e9c6:	mov    ebx,eax
   10001e9c8:	mov    DWORD PTR [rsp+0x20],eax
   10001e9cc:	test   eax,eax
   10001e9ce:	jne    0x10001e9e2
   10001e9d0:	lea    rcx,[rsi+0x1388]
   10001e9d7:	call   0x10001e3e0
   10001e9dc:	mov    ebx,eax
   10001e9de:	mov    DWORD PTR [rsp+0x20],eax
   10001e9e2:	mov    rcx,QWORD PTR [rsi+0x90]
   10001e9e9:	call   0x10001c1c0
   10001e9ee:	mov    DWORD PTR [rsi+0xd4],eax
   10001e9f4:	mov    rcx,QWORD PTR [rsi+0x98]
   10001e9fb:	call   0x10001c1c0
   10001ea00:	mov    DWORD PTR [rsi+0xd8],eax
   10001ea06:	mov    rcx,QWORD PTR [rsi+0x58]
   10001ea0a:	call   0x10001c1c0
   10001ea0f:	mov    DWORD PTR [rsi+0xd0],eax
   10001ea15:	mov    rcx,QWORD PTR [rsi+0x20]
   10001ea19:	call   0x10001c1c0
   10001ea1e:	mov    DWORD PTR [rsi+0xbc],eax
   10001ea24:	mov    rcx,QWORD PTR [rsi+0x48]
   10001ea28:	call   0x10001c1c0
   10001ea2d:	mov    DWORD PTR [rsi+0xc8],eax
   10001ea33:	mov    rcx,QWORD PTR [rsi+0x50]
   10001ea37:	call   0x10001c1c0
   10001ea3c:	mov    DWORD PTR [rsi+0xcc],eax
   10001ea42:	mov    rcx,QWORD PTR [rsi+0x60]
   10001ea46:	call   0x10001c1c0
   10001ea4b:	mov    DWORD PTR [rsi+0xdc],eax
   10001ea51:	mov    rcx,QWORD PTR [rsi+0x68]
   10001ea55:	call   0x10001c1c0
   10001ea5a:	mov    DWORD PTR [rsi+0xe0],eax
   10001ea60:	lea    rcx,[rsi+0x1120]
   10001ea67:	call   0x10001dbf0
   10001ea6c:	mov    DWORD PTR [rsi+0x1350],eax
   10001ea72:	jmp    0x10001ea91
   10001ea74:	mov    edi,eax
   10001ea76:	cmp    eax,0xc00000fd
   10001ea7b:	jne    0x10001ea83
   10001ea7d:	call   QWORD PTR [rip+0xfffffffffffe29d5]        # 0x100001458
   10001ea83:	mov    eax,0x80004005
   10001ea88:	test   edi,edi
   10001ea8a:	cmovns edi,eax
   10001ea8d:	mov    ebx,DWORD PTR [rsp+0x20]
   10001ea91:	test   ebx,ebx
   10001ea93:	cmovns ebx,edi
   10001ea96:	mov    eax,ebx
   10001ea98:	mov    rbx,QWORD PTR [rsp+0x40]
   10001ea9d:	mov    rsi,QWORD PTR [rsp+0x48]
   10001eaa2:	add    rsp,0x30
   10001eaa6:	pop    rdi
   10001eaa7:	ret    
   10001eaa8:	nop
   10001eaa9:	nop
   10001eaaa:	nop
   10001eaab:	nop
   10001eaac:	nop
   10001eaad:	nop
   10001eaae:	nop
   10001eaaf:	nop
   10001eab0:	mov    QWORD PTR [rsp+0x8],rcx
   10001eab5:	push   rbx
   10001eab6:	push   rsi
   10001eab7:	push   rdi
   10001eab8:	push   r12
   10001eaba:	push   r13
   10001eabc:	push   r14
   10001eabe:	push   r15
   10001eac0:	sub    rsp,0x60
   10001eac4:	mov    rsi,rcx
   10001eac7:	xor    r12d,r12d
   10001eaca:	mov    ebx,r12d
   10001eacd:	mov    DWORD PTR [rsp+0x50],ebx
   10001ead1:	call   QWORD PTR [rip+0xfffffffffffe25b1]        # 0x100001088
   10001ead7:	mov    rcx,rax
   10001eada:	call   QWORD PTR [rip+0xfffffffffffe27e8]        # 0x1000012c8
   10001eae0:	mov    r15d,eax
   10001eae3:	mov    DWORD PTR [rsp+0xa8],eax
   10001eaea:	cmp    eax,0x7fffffff
   10001eaef:	je     0x10001eb05
   10001eaf1:	call   QWORD PTR [rip+0xfffffffffffe2591]        # 0x100001088
   10001eaf7:	mov    rcx,rax
   10001eafa:	lea    edx,[r12+0x1]
   10001eaff:	call   QWORD PTR [rip+0xfffffffffffe265b]        # 0x100001160
   10001eb05:	mov    r13d,r12d
   10001eb08:	mov    edi,DWORD PTR [rsi+0xa4]
   10001eb0e:	call   QWORD PTR [rip+0xfffffffffffe26c4]        # 0x1000011d8
   10001eb14:	cmp    edi,eax
   10001eb16:	jne    0x10001eb24
   10001eb18:	mov    rax,QWORD PTR [rsi+0x30]
   10001eb1c:	cmp    DWORD PTR [rax],0xc00000fd
   10001eb22:	je     0x10001eb48
   10001eb24:	mov    eax,DWORD PTR [rsi+0xa8]
   10001eb2a:	bt     eax,0xc
   10001eb2e:	jb     0x10001eb48
   10001eb30:	bt     eax,0xf
   10001eb34:	jb     0x10001eb48
   10001eb36:	mov    rdx,rsi
   10001eb39:	mov    rcx,QWORD PTR [rsi+0x10]
   10001eb3d:	call   0x10001ce80
   10001eb42:	mov    ebx,eax
   10001eb44:	mov    DWORD PTR [rsp+0x50],eax
   10001eb48:	mov    rax,QWORD PTR [rsi]
   10001eb4b:	mov    r8d,0x1658
   10001eb51:	mov    rdx,rsi
   10001eb54:	mov    rcx,rsi
   10001eb57:	call   QWORD PTR [rax+0x50]
   10001eb5a:	test   ebx,ebx
   10001eb5c:	cmovns ebx,eax
   10001eb5f:	mov    DWORD PTR [rsp+0x50],ebx
   10001eb63:	mov    rdx,QWORD PTR [rsi+0x50]
   10001eb67:	test   rdx,rdx
   10001eb6a:	je     0x10001eb93
   10001eb6c:	mov    r9,QWORD PTR [rsi]
   10001eb6f:	xor    eax,eax
   10001eb71:	or     rcx,0xffffffffffffffff
   10001eb75:	mov    rdi,rdx
   10001eb78:	repnz scas ax,WORD PTR es:[rdi]
   10001eb7b:	not    rcx
   10001eb7e:	lea    r8,[rcx+rcx*1-0x2]
   10001eb83:	mov    rcx,rsi
   10001eb86:	call   QWORD PTR [r9+0x50]
   10001eb8a:	test   ebx,ebx
   10001eb8c:	cmovns ebx,eax
   10001eb8f:	mov    DWORD PTR [rsp+0x50],ebx
   10001eb93:	mov    rdx,QWORD PTR [rsi+0x48]
   10001eb97:	test   rdx,rdx
   10001eb9a:	je     0x10001ebc3
   10001eb9c:	mov    r9,QWORD PTR [rsi]
   10001eb9f:	xor    eax,eax
   10001eba1:	or     rcx,0xffffffffffffffff
   10001eba5:	mov    rdi,rdx
   10001eba8:	repnz scas ax,WORD PTR es:[rdi]
   10001ebab:	not    rcx
   10001ebae:	lea    r8,[rcx+rcx*1-0x2]
   10001ebb3:	mov    rcx,rsi
   10001ebb6:	call   QWORD PTR [r9+0x50]
   10001ebba:	test   ebx,ebx
   10001ebbc:	cmovns ebx,eax
   10001ebbf:	mov    DWORD PTR [rsp+0x50],ebx
   10001ebc3:	call   QWORD PTR [rip+0xfffffffffffe2617]        # 0x1000011e0
   10001ebc9:	mov    DWORD PTR [rsi+0x78],eax
   10001ebcc:	mov    rcx,rsi
   10001ebcf:	call   0x10001e970
   10001ebd4:	test   ebx,ebx
   10001ebd6:	cmovns ebx,eax
   10001ebd9:	mov    DWORD PTR [rsp+0x50],ebx
   10001ebdd:	lea    rdi,[rsi+0x18]
   10001ebe1:	call   0x10001f30c
   10001ebe6:	mov    r9,rax
   10001ebe9:	mov    QWORD PTR [rsp+0x30],rdi
   10001ebee:	mov    eax,DWORD PTR [rsi+0x78]
   10001ebf1:	mov    DWORD PTR [rsp+0x28],eax
   10001ebf5:	lea    rax,[rip+0x234]        # 0x10001ee30
   10001ebfc:	mov    QWORD PTR [rsp+0x20],rax
   10001ec01:	lea    r8,[rip+0x248]        # 0x10001ee50
   10001ec08:	mov    edx,0x104
   10001ec0d:	lea    rcx,[rsi+0x13d0]
   10001ec14:	call   0x100005bb0
   10001ec19:	test   eax,eax
   10001ec1b:	js     0x10001edca
   10001ec21:	lea    rdi,[rsi+0x15d8]
   10001ec28:	mov    rcx,rdi
   10001ec2b:	call   QWORD PTR [rip+0xfffffffffffe268f]        # 0x1000012c0
   10001ec31:	mov    QWORD PTR [rsi+0x15e0],r12
   10001ec38:	mov    QWORD PTR [rsi+0x15f0],r12
   10001ec3f:	lea    r14,[rsi+0x1640]
   10001ec46:	mov    rcx,QWORD PTR [rsi+0x10]
   10001ec4a:	call   0x10001ca20
   10001ec4f:	mov    rcx,rax
   10001ec52:	mov    QWORD PTR [rsp+0x48],r14
   10001ec57:	mov    QWORD PTR [rsp+0x40],rdi
   10001ec5c:	mov    QWORD PTR [rsp+0x38],r12
   10001ec61:	mov    QWORD PTR [rsp+0x30],r12
   10001ec66:	mov    DWORD PTR [rsp+0x28],0xc008010
   10001ec6e:	mov    DWORD PTR [rsp+0x20],r12d
   10001ec73:	xor    r9d,r9d
   10001ec76:	xor    r8d,r8d
   10001ec79:	lea    rdx,[rsi+0x13d0]
   10001ec80:	call   QWORD PTR [rip+0xfffffffffffe261a]        # 0x1000012a0
   10001ec86:	test   eax,eax
   10001ec88:	je     0x10001edad
   10001ec8e:	mov    edi,r12d
   10001ec91:	mov    DWORD PTR [rsp+0x54],r12d
   10001ec96:	call   QWORD PTR [rip+0xfffffffffffe2424]        # 0x1000010c0
   10001ec9c:	mov    DWORD PTR [rsp+0xb0],eax
   10001eca3:	nop    DWORD PTR [rax+0x0]
   10001ecaa:	nop    WORD PTR [rax+rax*1+0x0]
   10001ecb0:	mov    edx,0x64
   10001ecb5:	mov    rcx,QWORD PTR [r14]
   10001ecb8:	call   QWORD PTR [rip+0xfffffffffffe24ca]        # 0x100001188
   10001ecbe:	mov    r14d,eax
   10001ecc1:	cmp    eax,0x102
   10001ecc6:	jne    0x10001ecef
   10001ecc8:	cmp    DWORD PTR [rsi+0x13b0],0xffffffff
   10001eccf:	je     0x10001ece6
   10001ecd1:	call   QWORD PTR [rip+0xfffffffffffe23e9]        # 0x1000010c0
   10001ecd7:	sub    eax,DWORD PTR [rsp+0xb0]
   10001ecde:	cmp    eax,DWORD PTR [rsi+0x13b0]
   10001ece4:	jae    0x10001ecef
   10001ece6:	lea    r14,[rsi+0x1640]
   10001eced:	jmp    0x10001ecb0
   10001ecef:	mov    eax,r12d
   10001ecf2:	cmp    r14d,0x102
   10001ecf9:	sete   al
   10001ecfc:	mov    DWORD PTR [rsi+0x13bc],eax
   10001ed02:	mov    DWORD PTR [rsi+0x13c0],0x1
   10001ed0c:	lea    rdx,[rsi+0x13b4]
   10001ed13:	mov    rcx,QWORD PTR [rsi+0x1640]
   10001ed1a:	call   QWORD PTR [rip+0xfffffffffffe2578]        # 0x100001298
   10001ed20:	test   eax,eax
   10001ed22:	je     0x10001ed41
   10001ed24:	cmp    DWORD PTR [rsi+0x13b4],0x103
   10001ed2e:	je     0x10001ed41
   10001ed30:	mov    DWORD PTR [rsi+0x13b8],0x1
   10001ed3a:	mov    DWORD PTR [rsi+0x13bc],r12d
   10001ed41:	jmp    0x10001ed7a
   10001ed43:	mov    edi,eax
   10001ed45:	cmp    eax,0xc00000fd
   10001ed4a:	jne    0x10001ed52
   10001ed4c:	call   QWORD PTR [rip+0xfffffffffffe2706]        # 0x100001458
   10001ed52:	mov    eax,0x80004005
   10001ed57:	test   edi,edi
   10001ed59:	cmovns edi,eax
   10001ed5c:	mov    DWORD PTR [rsp+0x54],edi
   10001ed60:	xor    r12d,r12d
   10001ed63:	mov    rsi,QWORD PTR [rsp+0xa0]
   10001ed6b:	mov    ebx,DWORD PTR [rsp+0x50]
   10001ed6f:	mov    r15d,DWORD PTR [rsp+0xa8]
   10001ed77:	mov    r13d,r12d
   10001ed7a:	test   ebx,ebx
   10001ed7c:	cmovns ebx,edi
   10001ed7f:	mov    DWORD PTR [rsp+0x50],ebx
   10001ed83:	mov    rcx,QWORD PTR [rsi+0x1648]
   10001ed8a:	call   QWORD PTR [rip+0xfffffffffffe2398]        # 0x100001128
   10001ed90:	mov    QWORD PTR [rsi+0x1648],r12
   10001ed97:	mov    rcx,QWORD PTR [rsi+0x1640]
   10001ed9e:	call   QWORD PTR [rip+0xfffffffffffe2384]        # 0x100001128
   10001eda4:	mov    QWORD PTR [rsi+0x1640],r12
   10001edab:	jmp    0x10001edd3
   10001edad:	call   QWORD PTR [rip+0xfffffffffffe237d]        # 0x100001130
   10001edb3:	test   eax,eax
   10001edb5:	jle    0x10001edbf
   10001edb7:	movzx  eax,ax
   10001edba:	or     eax,0x80070000
   10001edbf:	test   ebx,ebx
   10001edc1:	cmovns ebx,eax
   10001edc4:	mov    DWORD PTR [rsp+0x50],ebx
   10001edc8:	jmp    0x10001edd3
   10001edca:	test   ebx,ebx
   10001edcc:	cmovns ebx,eax
   10001edcf:	mov    DWORD PTR [rsp+0x50],ebx
   10001edd3:	jmp    0x10001edfd
   10001edd5:	mov    r13d,eax
   10001edd8:	cmp    eax,0xc00000fd
   10001eddd:	jne    0x10001ede5
   10001eddf:	call   QWORD PTR [rip+0xfffffffffffe2673]        # 0x100001458
   10001ede5:	mov    eax,0x80004005
   10001edea:	test   r13d,r13d
   10001eded:	cmovns r13d,eax
   10001edf1:	mov    ebx,DWORD PTR [rsp+0x50]
   10001edf5:	mov    r15d,DWORD PTR [rsp+0xa8]
   10001edfd:	cmp    r15d,0x7fffffff
   10001ee04:	je     0x10001ee18
   10001ee06:	call   QWORD PTR [rip+0xfffffffffffe227c]        # 0x100001088
   10001ee0c:	mov    rcx,rax
   10001ee0f:	mov    edx,r15d
   10001ee12:	call   QWORD PTR [rip+0xfffffffffffe2348]        # 0x100001160
   10001ee18:	test   ebx,ebx
   10001ee1a:	cmovns ebx,r13d
   10001ee1e:	mov    eax,ebx
   10001ee20:	add    rsp,0x60
   10001ee24:	pop    r15
   10001ee26:	pop    r14
   10001ee28:	pop    r13
   10001ee2a:	pop    r12
   10001ee2c:	pop    rdi
   10001ee2d:	pop    rsi
   10001ee2e:	pop    rbx
   10001ee2f:	ret    
   10001ee30:	push   rbx
   10001ee31:	add    BYTE PTR [rcx+0x0],dl
   10001ee34:	rex.WR add BYTE PTR [rax+rax*1+0x55],r8b
   10001ee39:	add    BYTE PTR [rbp+0x0],cl
   10001ee3c:	push   rax
   10001ee3d:	add    BYTE PTR [rbp+0x0],al
   10001ee40:	push   rdx
   10001ee41:	add    BYTE PTR [rsi],ch
   10001ee43:	add    BYTE PTR [rbp+0x0],al
   10001ee46:	pop    rax
   10001ee47:	add    BYTE PTR [rbp+0x0],al
   10001ee4a:	add    BYTE PTR [rax],al
   10001ee4c:	nop
   10001ee4d:	nop
   10001ee4e:	nop
   10001ee4f:	nop
   10001ee50:	and    eax,0x73006c00
   10001ee55:	add    BYTE PTR [rax],ah
   10001ee57:	add    BYTE PTR [rip+0x64006c00],ah        # 0x164025a5d
   10001ee5d:	add    BYTE PTR [rax],ah
   10001ee5f:	add    BYTE PTR [rax],dh
   10001ee61:	add    BYTE PTR [rax],ah
   10001ee63:	add    BYTE PTR [rax],dh
   10001ee65:	add    BYTE PTR [rdx],bh
   10001ee67:	add    BYTE PTR [rax],dh
   10001ee69:	add    BYTE PTR [rax],ah
   10001ee6b:	add    BYTE PTR [rip+0x7000],ah        # 0x100025e71
   10001ee71:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001ee77:	nop
   10001ee78:	nop
   10001ee79:	nop
   10001ee7a:	nop
   10001ee7b:	nop
   10001ee7c:	nop
   10001ee7d:	nop
   10001ee7e:	nop
   10001ee7f:	nop
   10001ee80:	mov    QWORD PTR [rsp+0x8],rbx
   10001ee85:	mov    QWORD PTR [rsp+0x10],rsi
   10001ee8a:	mov    QWORD PTR [rsp+0x18],rdi
   10001ee8f:	push   r12
   10001ee91:	sub    rsp,0x30
   10001ee95:	mov    rsi,r8
   10001ee98:	mov    r12,rdx
   10001ee9b:	mov    rdi,rcx
   10001ee9e:	xor    ebx,ebx
   10001eea0:	mov    DWORD PTR [rsp+0x20],ebx
   10001eea4:	lea    r8,[rip+0xfffffffffffe478d]        # 0x100003638
   10001eeab:	mov    rdx,rsi
   10001eeae:	mov    rcx,r12
   10001eeb1:	call   0x100006b60
   10001eeb6:	mov    DWORD PTR [rsp+0x20],eax
   10001eeba:	test   eax,eax
   10001eebc:	js     0x10001ef54
   10001eec2:	cmp    DWORD PTR [rdi+0x1650],0x0
   10001eec9:	jne    0x10001eee5
   10001eecb:	lea    r8,[rip+0xfe]        # 0x10001efd0
   10001eed2:	mov    rdx,rsi
   10001eed5:	mov    rcx,r12
   10001eed8:	call   0x10000ea60
   10001eedd:	mov    DWORD PTR [rsp+0x20],eax
   10001eee1:	test   eax,eax
   10001eee3:	js     0x10001ef54
   10001eee5:	cmp    DWORD PTR [rdi+0x13c0],0x0
   10001eeec:	je     0x10001ef30
   10001eeee:	cmp    DWORD PTR [rdi+0x13bc],0x0
   10001eef5:	je     0x10001ef1a
   10001eef7:	mov    r9d,DWORD PTR [rdi+0x1650]
   10001eefe:	lea    r8,[rip+0x6b]        # 0x10001ef70
   10001ef05:	mov    rdx,rsi
   10001ef08:	mov    rcx,r12
   10001ef0b:	call   0x10001c630
   10001ef10:	mov    DWORD PTR [rsp+0x20],eax
   10001ef14:	test   eax,eax
   10001ef16:	jns    0x10001ef30
   10001ef18:	jmp    0x10001ef54
   10001ef1a:	mov    r8,rsi
   10001ef1d:	mov    rdx,r12
   10001ef20:	mov    rcx,rdi
   10001ef23:	call   0x10001e090
   10001ef28:	mov    DWORD PTR [rsp+0x20],eax
   10001ef2c:	test   eax,eax
   10001ef2e:	js     0x10001ef54
   10001ef30:	jmp    0x10001ef4f
   10001ef32:	mov    ebx,eax
   10001ef34:	cmp    eax,0xc00000fd
   10001ef39:	jne    0x10001ef41
   10001ef3b:	call   QWORD PTR [rip+0xfffffffffffe2517]        # 0x100001458
   10001ef41:	mov    eax,0x80004005
   10001ef46:	test   ebx,ebx
   10001ef48:	cmovns ebx,eax
   10001ef4b:	mov    eax,DWORD PTR [rsp+0x20]
   10001ef4f:	test   eax,eax
   10001ef51:	cmovns eax,ebx
   10001ef54:	mov    rbx,QWORD PTR [rsp+0x40]
   10001ef59:	mov    rsi,QWORD PTR [rsp+0x48]
   10001ef5e:	mov    rdi,QWORD PTR [rsp+0x50]
   10001ef63:	add    rsp,0x30
   10001ef67:	pop    r12
   10001ef69:	ret    
   10001ef6a:	nop
   10001ef6b:	nop
   10001ef6c:	nop
   10001ef6d:	nop
   10001ef6e:	nop
   10001ef6f:	nop
   10001ef70:	push   rsp
   10001ef71:	add    BYTE PTR [rcx+0x0],ch
   10001ef74:	ins    DWORD PTR es:[rdi],dx
   10001ef75:	add    BYTE PTR [rbp+0x0],ah
   10001ef78:	outs   dx,DWORD PTR ds:[rsi]
   10001ef79:	add    BYTE PTR [rbp+0x0],dh
   10001ef7c:	je     0x10001ef7e
   10001ef7e:	and    BYTE PTR [rax],al
   10001ef80:	ja     0x10001ef82
   10001ef82:	(bad)  
   10001ef83:	add    BYTE PTR [rcx+0x0],ch
   10001ef86:	je     0x10001ef88
   10001ef88:	imul   eax,DWORD PTR [rax],0x67006e
   10001ef8e:	and    BYTE PTR [rax],al
   10001ef90:	data16 add BYTE PTR [rdi+0x0],ch
   10001ef94:	jb     0x10001ef96
   10001ef96:	and    BYTE PTR [rax],al
   10001ef98:	add    BYTE PTR gs:[rax+0x0],bh
   10001ef9c:	je     0x10001ef9e
   10001ef9e:	add    BYTE PTR gs:[rdx+0x0],dh
   10001efa2:	outs   dx,BYTE PTR ds:[rsi]
   10001efa3:	add    BYTE PTR [rcx+0x0],ah
   10001efa6:	ins    BYTE PTR es:[rdi],dx
   10001efa7:	add    BYTE PTR [rax],ah
   10001efa9:	add    BYTE PTR [rax+rax*1+0x75],ah
   10001efad:	add    BYTE PTR [rbp+0x0],ch
   10001efb0:	jo     0x10001efb2
   10001efb2:	and    BYTE PTR [rax],al
   10001efb4:	jo     0x10001efb6
   10001efb6:	jb     0x10001efb8
   10001efb8:	outs   dx,DWORD PTR ds:[rsi]
   10001efb9:	add    BYTE PTR [rbx+0x0],ah
   10001efbc:	add    BYTE PTR gs:[rbx+0x0],dh
   10001efc0:	jae    0x10001efc2
   10001efc2:	and    BYTE PTR [rax],al
   10001efc4:	and    eax,0x2e006400
   10001efc9:	add    BYTE PTR [rip+0xa00],cl        # 0x10001f9cf
   10001efcf:	add    BYTE PTR [rbp+0x0],al
   10001efd2:	js     0x10001efd4
   10001efd4:	je     0x10001efd6
   10001efd6:	add    BYTE PTR gs:[rdx+0x0],dh
   10001efda:	outs   dx,BYTE PTR ds:[rsi]
   10001efdb:	add    BYTE PTR [rcx+0x0],ah
   10001efde:	ins    BYTE PTR es:[rdi],dx
   10001efdf:	add    BYTE PTR [rax],ah
   10001efe1:	add    BYTE PTR [rax+rax*1+0x75],ah
   10001efe5:	add    BYTE PTR [rbp+0x0],ch
   10001efe8:	jo     0x10001efea
   10001efea:	and    BYTE PTR [rax],al
   10001efec:	jo     0x10001efee
   10001efee:	jb     0x10001eff0
   10001eff0:	outs   dx,DWORD PTR ds:[rsi]
   10001eff1:	add    BYTE PTR [rbx+0x0],ah
   10001eff4:	add    BYTE PTR gs:[rbx+0x0],dh
   10001eff8:	jae    0x10001effa
   10001effa:	and    BYTE PTR [rax],al
   10001effc:	outs   dx,BYTE PTR ds:[rsi]
   10001effd:	add    BYTE PTR [rdi+0x0],ch
   10001f000:	je     0x10001f002
   10001f002:	and    BYTE PTR [rax],al
   10001f004:	add    BYTE PTR gs:[rax+0x0],bh
   10001f008:	add    BYTE PTR gs:[rbx+0x0],ah
   10001f00c:	jne    0x10001f00e
   10001f00e:	je     0x10001f010
   10001f010:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   10001f015:	add    BYTE PTR [rip+0xa00],cl        # 0x10001fa1b
   10001f01b:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001f021:	nop
   10001f022:	nop
   10001f023:	nop
   10001f024:	nop
   10001f025:	nop
   10001f026:	nop
   10001f027:	nop
   10001f028:	nop
   10001f029:	nop
   10001f02a:	nop
   10001f02b:	nop
   10001f02c:	nop
   10001f02d:	nop
   10001f02e:	nop
   10001f02f:	nop
   10001f030:	mov    QWORD PTR [rsp+0x8],rbx
   10001f035:	mov    QWORD PTR [rsp+0x10],rsi
   10001f03a:	push   rdi
   10001f03b:	sub    rsp,0x20
   10001f03f:	cmp    QWORD PTR [rcx+0x1340],0x0
   10001f047:	lea    rax,[rip+0xfffffffffffe41e2]        # 0x100003230
   10001f04e:	mov    edi,r8d
   10001f051:	mov    rsi,rdx
   10001f054:	mov    rbx,rcx
   10001f057:	mov    QWORD PTR [rcx],rax
   10001f05a:	je     0x10001f079
   10001f05c:	mov    rcx,QWORD PTR [rcx+0x10]
   10001f060:	call   0x10001c890
   10001f065:	mov    rdx,QWORD PTR [rbx+0x1340]
   10001f06c:	test   rdx,rdx
   10001f06f:	je     0x10001f079
   10001f071:	mov    rcx,rax
   10001f074:	call   0x10001c040
   10001f079:	mov    rcx,QWORD PTR [rbx+0x10]
   10001f07d:	test   rcx,rcx
   10001f080:	je     0x10001f090
   10001f082:	mov    rax,QWORD PTR [rcx]
   10001f085:	call   QWORD PTR [rax+0x10]
   10001f088:	mov    QWORD PTR [rbx+0x10],0x0
   10001f090:	lea    rcx,[rbx+0x1388]
   10001f097:	call   0x10001dd10
   10001f09c:	lea    rcx,[rbx+0x1360]
   10001f0a3:	call   0x10001dd10
   10001f0a8:	xor    edx,edx
   10001f0aa:	mov    r8d,0x1658
   10001f0b0:	mov    rcx,rbx
   10001f0b3:	call   0x10001f80c
   10001f0b8:	mov    r8d,edi
   10001f0bb:	mov    rdx,rsi
   10001f0be:	mov    rcx,rbx
   10001f0c1:	mov    rbx,QWORD PTR [rsp+0x30]
   10001f0c6:	mov    rsi,QWORD PTR [rsp+0x38]
   10001f0cb:	add    rsp,0x20
   10001f0cf:	pop    rdi
   10001f0d0:	jmp    0x10001e5b0
   10001f0d5:	nop
   10001f0d6:	nop
   10001f0d7:	nop
   10001f0d8:	nop
   10001f0d9:	nop
   10001f0da:	nop
   10001f0db:	nop
   10001f0dc:	nop
   10001f0dd:	nop
   10001f0de:	nop
   10001f0df:	nop
   10001f0e0:	mov    QWORD PTR [rsp+0x8],rbx
   10001f0e5:	mov    QWORD PTR [rsp+0x10],rbp
   10001f0ea:	mov    QWORD PTR [rsp+0x18],rsi
   10001f0ef:	push   rdi
   10001f0f0:	sub    rsp,0xc0
   10001f0f7:	mov    rdi,rdx
   10001f0fa:	mov    rdx,QWORD PTR [rdx]
   10001f0fd:	mov    rsi,rcx
   10001f100:	mov    rbp,r8
   10001f103:	lea    rcx,[rsp+0x20]
   10001f108:	mov    r8d,0x98
   10001f10e:	call   0x10001f75c
   10001f113:	mov    r11,QWORD PTR [rsi+0x13c8]
   10001f11a:	mov    rbx,QWORD PTR [rsi]
   10001f11d:	mov    QWORD PTR [rsp+0x30],r11
   10001f122:	call   QWORD PTR [rip+0xfffffffffffe20b0]        # 0x1000011d8
   10001f128:	mov    r9,QWORD PTR [rdi+0x8]
   10001f12c:	lea    r8,[rsp+0x20]
   10001f131:	mov    edx,eax
   10001f133:	mov    rcx,rsi
   10001f136:	call   QWORD PTR [rbx+0x40]
   10001f139:	mov    rcx,rsi
   10001f13c:	mov    DWORD PTR [rbp+0x0],eax
   10001f13f:	call   0x10001eab0
   10001f144:	lea    r11,[rsp+0xc0]
   10001f14c:	mov    rbx,QWORD PTR [r11+0x10]
   10001f150:	mov    rsi,QWORD PTR [r11+0x20]
   10001f154:	mov    DWORD PTR [rbp+0x0],eax
   10001f157:	mov    rbp,QWORD PTR [r11+0x18]
   10001f15b:	mov    eax,0x1
   10001f160:	mov    rsp,r11
   10001f163:	pop    rdi
   10001f164:	ret    
   10001f165:	nop
   10001f166:	nop
   10001f167:	nop
   10001f168:	nop
   10001f169:	nop
   10001f16a:	nop
   10001f16b:	nop
   10001f16c:	nop
   10001f16d:	nop
   10001f16e:	nop
   10001f16f:	nop
   10001f170:	mov    QWORD PTR [rsp+0x8],rcx
   10001f175:	push   rbx
   10001f176:	sub    rsp,0x30
   10001f17a:	mov    ebx,0x80004005
   10001f17f:	mov    DWORD PTR [rsp+0x20],ebx
   10001f183:	mov    rax,QWORD PTR [rsp+0x38]
   10001f188:	cmp    QWORD PTR [rcx+0x30],0x0
   10001f18d:	je     0x10001f198
   10001f18f:	call   0x10001eab0
   10001f194:	mov    ebx,eax
   10001f196:	jmp    0x10001f1c2
   10001f198:	cmp    QWORD PTR [rcx+0x13c8],0x0
   10001f1a0:	jne    0x10001f1a9
   10001f1a2:	mov    QWORD PTR [rcx+0x13c8],rax
   10001f1a9:	xor    r9d,r9d
   10001f1ac:	xor    r8d,r8d
   10001f1af:	xor    edx,edx
   10001f1b1:	mov    ecx,0x42ac
   10001f1b6:	call   QWORD PTR [rip+0xfffffffffffe2114]        # 0x1000012d0
   10001f1bc:	jmp    0x10001f1c2
   10001f1be:	mov    ebx,DWORD PTR [rsp+0x20]
   10001f1c2:	mov    eax,ebx
   10001f1c4:	add    rsp,0x30
   10001f1c8:	pop    rbx
   10001f1c9:	ret    
   10001f1ca:	nop
   10001f1cb:	nop
   10001f1cc:	nop
   10001f1cd:	nop
   10001f1ce:	nop
   10001f1cf:	nop
   10001f1d0:	push   rbp
   10001f1d2:	sub    rsp,0x20
   10001f1d6:	mov    rbp,rdx
   10001f1d9:	mov    rdx,rcx
   10001f1dc:	lea    r8,[rbp+0x20]
   10001f1e0:	mov    rcx,QWORD PTR [rbp+0x40]
   10001f1e4:	call   0x10001f0e0
   10001f1e9:	add    rsp,0x20
   10001f1ed:	pop    rbp
   10001f1ee:	ret    
   10001f1ef:	nop
   10001f1f0:	nop
   10001f1f1:	nop
   10001f1f2:	nop
   10001f1f3:	nop
   10001f1f4:	nop
   10001f1f5:	nop
   10001f1f6:	nop
   10001f1f7:	nop
   10001f1f8:	jmp    QWORD PTR [rip+0xfffffffffffe2452]        # 0x100001650
   10001f1fe:	nop
   10001f1ff:	nop
   10001f200:	nop
   10001f201:	nop
   10001f202:	nop
   10001f203:	nop
   10001f204:	jmp    QWORD PTR [rip+0xfffffffffffe2356]        # 0x100001560
   10001f20a:	nop
   10001f20b:	nop
   10001f20c:	nop
   10001f20d:	nop
   10001f20e:	nop
   10001f20f:	nop
   10001f210:	jmp    QWORD PTR [rip+0xfffffffffffe274a]        # 0x100001960
   10001f216:	nop
   10001f217:	nop
   10001f218:	nop
   10001f219:	nop
   10001f21a:	nop
   10001f21b:	nop
   10001f21c:	jmp    QWORD PTR [rip+0xfffffffffffe276e]        # 0x100001990
   10001f222:	nop
   10001f223:	nop
   10001f224:	nop
   10001f225:	nop
   10001f226:	nop
   10001f227:	nop
   10001f228:	jmp    QWORD PTR [rip+0xfffffffffffe275a]        # 0x100001988
   10001f22e:	nop
   10001f22f:	nop
   10001f230:	nop
   10001f231:	nop
   10001f232:	nop
   10001f233:	nop
   10001f234:	jmp    QWORD PTR [rip+0xfffffffffffe2746]        # 0x100001980
   10001f23a:	nop
   10001f23b:	nop
   10001f23c:	nop
   10001f23d:	nop
   10001f23e:	nop
   10001f23f:	nop
   10001f240:	jmp    QWORD PTR [rip+0xfffffffffffe264a]        # 0x100001890
   10001f246:	nop
   10001f247:	nop
   10001f248:	nop
   10001f249:	nop
   10001f24a:	nop
   10001f24b:	nop
   10001f24c:	jmp    QWORD PTR [rip+0xfffffffffffe2636]        # 0x100001888
   10001f252:	nop
   10001f253:	nop
   10001f254:	nop
   10001f255:	nop
   10001f256:	nop
   10001f257:	nop
   10001f258:	jmp    QWORD PTR [rip+0xfffffffffffe2622]        # 0x100001880
   10001f25e:	nop
   10001f25f:	nop
   10001f260:	nop
   10001f261:	nop
   10001f262:	nop
   10001f263:	nop
   10001f264:	jmp    QWORD PTR [rip+0xfffffffffffe260e]        # 0x100001878
   10001f26a:	nop
   10001f26b:	nop
   10001f26c:	nop
   10001f26d:	nop
   10001f26e:	nop
   10001f26f:	nop
   10001f270:	jmp    QWORD PTR [rip+0xfffffffffffe25fa]        # 0x100001870
   10001f276:	nop
   10001f277:	nop
   10001f278:	nop
   10001f279:	nop
   10001f27a:	nop
   10001f27b:	nop
   10001f27c:	jmp    QWORD PTR [rip+0xfffffffffffe25e6]        # 0x100001868
   10001f282:	nop
   10001f283:	nop
   10001f284:	nop
   10001f285:	nop
   10001f286:	nop
   10001f287:	nop
   10001f288:	jmp    QWORD PTR [rip+0xfffffffffffe25d2]        # 0x100001860
   10001f28e:	nop
   10001f28f:	nop
   10001f290:	nop
   10001f291:	nop
   10001f292:	nop
   10001f293:	nop
   10001f294:	jmp    QWORD PTR [rip+0xfffffffffffe25be]        # 0x100001858
   10001f29a:	nop
   10001f29b:	nop
   10001f29c:	nop
   10001f29d:	nop
   10001f29e:	nop
   10001f29f:	nop
   10001f2a0:	jmp    QWORD PTR [rip+0xfffffffffffe25aa]        # 0x100001850
   10001f2a6:	nop
   10001f2a7:	nop
   10001f2a8:	nop
   10001f2a9:	nop
   10001f2aa:	nop
   10001f2ab:	nop
   10001f2ac:	jmp    QWORD PTR [rip+0xfffffffffffe2596]        # 0x100001848
   10001f2b2:	nop
   10001f2b3:	nop
   10001f2b4:	nop
   10001f2b5:	nop
   10001f2b6:	nop
   10001f2b7:	nop
   10001f2b8:	jmp    QWORD PTR [rip+0xfffffffffffe2582]        # 0x100001840
   10001f2be:	nop
   10001f2bf:	nop
   10001f2c0:	nop
   10001f2c1:	nop
   10001f2c2:	nop
   10001f2c3:	nop
   10001f2c4:	jmp    QWORD PTR [rip+0xfffffffffffe256e]        # 0x100001838
   10001f2ca:	nop
   10001f2cb:	nop
   10001f2cc:	nop
   10001f2cd:	nop
   10001f2ce:	nop
   10001f2cf:	nop
   10001f2d0:	jmp    QWORD PTR [rip+0xfffffffffffe255a]        # 0x100001830
   10001f2d6:	nop
   10001f2d7:	nop
   10001f2d8:	nop
   10001f2d9:	nop
   10001f2da:	nop
   10001f2db:	nop
   10001f2dc:	jmp    QWORD PTR [rip+0xfffffffffffe2546]        # 0x100001828
   10001f2e2:	nop
   10001f2e3:	nop
   10001f2e4:	nop
   10001f2e5:	nop
   10001f2e6:	nop
   10001f2e7:	nop
   10001f2e8:	jmp    QWORD PTR [rip+0xfffffffffffe2532]        # 0x100001820
   10001f2ee:	nop
   10001f2ef:	nop
   10001f2f0:	nop
   10001f2f1:	nop
   10001f2f2:	nop
   10001f2f3:	nop
   10001f2f4:	jmp    QWORD PTR [rip+0xfffffffffffe251e]        # 0x100001818
   10001f2fa:	nop
   10001f2fb:	nop
   10001f2fc:	nop
   10001f2fd:	nop
   10001f2fe:	nop
   10001f2ff:	nop
   10001f300:	jmp    QWORD PTR [rip+0xfffffffffffe2832]        # 0x100001b38
   10001f306:	nop
   10001f307:	nop
   10001f308:	nop
   10001f309:	nop
   10001f30a:	nop
   10001f30b:	nop
   10001f30c:	jmp    QWORD PTR [rip+0xfffffffffffe2926]        # 0x100001c38
   10001f312:	nop
   10001f313:	nop
   10001f314:	nop
   10001f315:	nop
   10001f316:	nop
   10001f317:	nop
   10001f318:	jmp    QWORD PTR [rip+0xfffffffffffe2a52]        # 0x100001d70
   10001f31e:	nop
   10001f31f:	nop
   10001f320:	nop
   10001f321:	nop
   10001f322:	nop
   10001f323:	nop
   10001f324:	jmp    QWORD PTR [rip+0xfffffffffffe2a4e]        # 0x100001d78
   10001f32a:	nop
   10001f32b:	nop
   10001f32c:	nop
   10001f32d:	nop
   10001f32e:	nop
   10001f32f:	nop
   10001f330:	jmp    QWORD PTR [rip+0xfffffffffffe2a4a]        # 0x100001d80
   10001f336:	nop
   10001f337:	nop
   10001f338:	nop
   10001f339:	nop
   10001f33a:	nop
   10001f33b:	nop
   10001f33c:	jmp    QWORD PTR [rip+0xfffffffffffe2a46]        # 0x100001d88
   10001f342:	nop
   10001f343:	nop
   10001f344:	nop
   10001f345:	nop
   10001f346:	nop
   10001f347:	nop
   10001f348:	jmp    QWORD PTR [rip+0xfffffffffffe2a42]        # 0x100001d90
   10001f34e:	nop
   10001f34f:	nop
   10001f350:	nop
   10001f351:	nop
   10001f352:	nop
   10001f353:	nop
   10001f354:	jmp    QWORD PTR [rip+0xfffffffffffe2a3e]        # 0x100001d98
   10001f35a:	nop
   10001f35b:	nop
   10001f35c:	nop
   10001f35d:	nop
   10001f35e:	nop
   10001f35f:	nop
   10001f360:	jmp    QWORD PTR [rip+0xfffffffffffe2a3a]        # 0x100001da0
   10001f366:	nop
   10001f367:	nop
   10001f368:	nop
   10001f369:	nop
   10001f36a:	nop
   10001f36b:	nop
   10001f36c:	jmp    QWORD PTR [rip+0xfffffffffffe2a36]        # 0x100001da8
   10001f372:	nop
   10001f373:	nop
   10001f374:	nop
   10001f375:	nop
   10001f376:	nop
   10001f377:	nop
   10001f378:	jmp    QWORD PTR [rip+0xfffffffffffe2a32]        # 0x100001db0
   10001f37e:	nop
   10001f37f:	nop
   10001f380:	nop
   10001f381:	nop
   10001f382:	nop
   10001f383:	nop
   10001f384:	jmp    QWORD PTR [rip+0xfffffffffffe2a2e]        # 0x100001db8
   10001f38a:	nop
   10001f38b:	nop
   10001f38c:	nop
   10001f38d:	nop
   10001f38e:	nop
   10001f38f:	nop
   10001f390:	jmp    QWORD PTR [rip+0xfffffffffffe2a2a]        # 0x100001dc0
   10001f396:	nop
   10001f397:	nop
   10001f398:	nop
   10001f399:	nop
   10001f39a:	nop
   10001f39b:	nop
   10001f39c:	jmp    QWORD PTR [rip+0xfffffffffffe2a26]        # 0x100001dc8
   10001f3a2:	nop
   10001f3a3:	nop
   10001f3a4:	nop
   10001f3a5:	nop
   10001f3a6:	nop
   10001f3a7:	nop
   10001f3a8:	jmp    QWORD PTR [rip+0xfffffffffffe2a2a]        # 0x100001dd8
   10001f3ae:	nop
   10001f3af:	nop
   10001f3b0:	nop
   10001f3b1:	nop
   10001f3b2:	nop
   10001f3b3:	nop
   10001f3b4:	jmp    QWORD PTR [rip+0xfffffffffffe2a26]        # 0x100001de0
   10001f3ba:	nop
   10001f3bb:	nop
   10001f3bc:	lea    rax,[rip+0x9cd5]        # 0x100029098
   10001f3c3:	jmp    0x10001f3c8
   10001f3c5:	nop
   10001f3c6:	nop
   10001f3c7:	nop
   10001f3c8:	mov    QWORD PTR [rsp+0x8],rcx
   10001f3cd:	mov    QWORD PTR [rsp+0x10],rdx
   10001f3d2:	mov    QWORD PTR [rsp+0x18],r8
   10001f3d7:	mov    QWORD PTR [rsp+0x20],r9
   10001f3dc:	sub    rsp,0x68
   10001f3e0:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   10001f3e6:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   10001f3ec:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   10001f3f2:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   10001f3f8:	mov    rdx,rax
   10001f3fb:	lea    rcx,[rip+0x2f9a]        # 0x10002239c
   10001f402:	call   0x10001f448
   10001f407:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   10001f40d:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   10001f413:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   10001f419:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   10001f41f:	mov    rcx,QWORD PTR [rsp+0x70]
   10001f424:	mov    rdx,QWORD PTR [rsp+0x78]
   10001f429:	mov    r8,QWORD PTR [rsp+0x80]
   10001f431:	mov    r9,QWORD PTR [rsp+0x88]
   10001f439:	add    rsp,0x68
   10001f43d:	jmp    0x10001f43f
   10001f43f:	jmp    rax
   10001f441:	nop
   10001f442:	nop
   10001f443:	nop
   10001f444:	nop
   10001f445:	nop
   10001f446:	nop
   10001f447:	nop
   10001f448:	mov    r11,rsp
   10001f44b:	mov    QWORD PTR [r11+0x20],rbx
   10001f44f:	push   rbp
   10001f450:	push   rsi
   10001f451:	push   rdi
   10001f452:	push   r12
   10001f454:	push   r13
   10001f456:	push   r14
   10001f458:	push   r15
   10001f45a:	sub    rsp,0x70
   10001f45e:	mov    eax,DWORD PTR [rcx+0x4]
   10001f461:	mov    r9d,DWORD PTR [rcx]
   10001f464:	mov    r12d,DWORD PTR [rcx+0x8]
   10001f468:	mov    r10d,DWORD PTR [rcx+0xc]
   10001f46c:	mov    DWORD PTR [rsp+0x20],0x48
   10001f474:	mov    rsi,rcx
   10001f477:	mov    ecx,DWORD PTR [rcx+0x10]
   10001f47a:	mov    r14d,DWORD PTR [rsi+0x14]
   10001f47e:	mov    r15d,DWORD PTR [rsi+0x1c]
   10001f482:	mov    r13,rdx
   10001f485:	lea    rdx,[rip+0xfffffffffffe0b74]        # 0x100000000
   10001f48c:	mov    QWORD PTR [r11-0x80],rsi
   10001f490:	add    rax,rdx
   10001f493:	mov    QWORD PTR [r11-0x78],r13
   10001f497:	and    r9d,0x1
   10001f49b:	mov    QWORD PTR [r11-0x70],rax
   10001f49f:	and    DWORD PTR [rsp+0x40],0x0
   10001f4a4:	xor    eax,eax
   10001f4a6:	and    QWORD PTR [r11-0x58],rax
   10001f4aa:	and    QWORD PTR [r11-0x50],rax
   10001f4ae:	mov    QWORD PTR [r11-0x60],rax
   10001f4b2:	and    DWORD PTR [rsp+0x60],eax
   10001f4b6:	add    r12,rdx
   10001f4b9:	add    r10,rdx
   10001f4bc:	add    rcx,rdx
   10001f4bf:	add    r14,rdx
   10001f4c2:	test   r9b,r9b
   10001f4c5:	jne    0x10001f4ec
   10001f4c7:	xor    edx,edx
   10001f4c9:	lea    rax,[rsp+0x20]
   10001f4ce:	lea    r9,[r11+0x8]
   10001f4d2:	lea    r8d,[rdx+0x1]
   10001f4d6:	mov    ecx,0xc06d0057
   10001f4db:	mov    QWORD PTR [r11+0x8],rax
   10001f4df:	call   QWORD PTR [rip+0xfffffffffffe1deb]        # 0x1000012d0
   10001f4e5:	xor    eax,eax
   10001f4e7:	jmp    0x10001f71e
   10001f4ec:	mov    rdi,QWORD PTR [r12]
   10001f4f0:	movabs rax,0x8000000000000000
   10001f4fa:	mov    rbp,r13
   10001f4fd:	sub    rbp,r10
   10001f500:	sar    rbp,0x3
   10001f504:	mov    ebp,ebp
   10001f506:	test   QWORD PTR [rcx+rbp*8],rax
   10001f50a:	mov    eax,0x0
   10001f50f:	sete   al
   10001f512:	mov    DWORD PTR [rsp+0x40],eax
   10001f516:	test   eax,eax
   10001f518:	je     0x10001f52e
   10001f51a:	mov    eax,DWORD PTR [rcx+rbp*8]
   10001f51d:	lea    rcx,[rip+0xfffffffffffe0ade]        # 0x100000002
   10001f524:	add    rax,rcx
   10001f527:	mov    QWORD PTR [rsp+0x48],rax
   10001f52c:	jmp    0x10001f536
   10001f52e:	movzx  eax,WORD PTR [rcx+rbp*8]
   10001f532:	mov    DWORD PTR [rsp+0x48],eax
   10001f536:	mov    rax,QWORD PTR [rip+0x1fb]        # 0x10001f738
   10001f53d:	xor    ebx,ebx
   10001f53f:	test   rax,rax
   10001f542:	je     0x10001f560
   10001f544:	lea    rdx,[rsp+0x20]
   10001f549:	xor    ecx,ecx
   10001f54b:	call   rax
   10001f54d:	mov    rbx,rax
   10001f550:	test   rax,rax
   10001f553:	jne    0x10001f6f4
   10001f559:	mov    rax,QWORD PTR [rip+0x1d8]        # 0x10001f738
   10001f560:	test   rdi,rdi
   10001f563:	jne    0x10001f637
   10001f569:	test   rax,rax
   10001f56c:	je     0x10001f580
   10001f56e:	lea    rdx,[rsp+0x20]
   10001f573:	lea    ecx,[rdi+0x1]
   10001f576:	call   rax
   10001f578:	mov    rdi,rax
   10001f57b:	test   rax,rax
   10001f57e:	jne    0x10001f5eb
   10001f580:	mov    rcx,QWORD PTR [rsp+0x38]
   10001f585:	call   QWORD PTR [rip+0xfffffffffffe1d1d]        # 0x1000012a8
   10001f58b:	mov    rdi,rax
   10001f58e:	test   rax,rax
   10001f591:	jne    0x10001f5eb
   10001f593:	call   QWORD PTR [rip+0xfffffffffffe1b97]        # 0x100001130
   10001f599:	mov    DWORD PTR [rsp+0x60],eax
   10001f59d:	mov    rax,QWORD PTR [rip+0x19c]        # 0x10001f740
   10001f5a4:	test   rax,rax
   10001f5a7:	je     0x10001f5bb
   10001f5a9:	lea    rdx,[rsp+0x20]
   10001f5ae:	lea    ecx,[rdi+0x3]
   10001f5b1:	call   rax
   10001f5b3:	mov    rdi,rax
   10001f5b6:	test   rax,rax
   10001f5b9:	jne    0x10001f5eb
   10001f5bb:	xor    edx,edx
   10001f5bd:	lea    rax,[rsp+0x20]
   10001f5c2:	lea    r9,[rsp+0xb8]
   10001f5ca:	lea    r8d,[rdx+0x1]
   10001f5ce:	mov    ecx,0xc06d007e
   10001f5d3:	mov    QWORD PTR [rsp+0xb8],rax
   10001f5db:	call   QWORD PTR [rip+0xfffffffffffe1cef]        # 0x1000012d0
   10001f5e1:	mov    rax,QWORD PTR [rsp+0x58]
   10001f5e6:	jmp    0x10001f71e
   10001f5eb:	mov    rax,rdi
   10001f5ee:	xchg   QWORD PTR [r12],rax
   10001f5f2:	cmp    rax,rdi
   10001f5f5:	je     0x10001f627
   10001f5f7:	cmp    DWORD PTR [rsi+0x18],0x0
   10001f5fb:	je     0x10001f630
   10001f5fd:	mov    edx,0x10
   10001f602:	lea    ecx,[rdx+0x30]
   10001f605:	call   QWORD PTR [rip+0xfffffffffffe1ca5]        # 0x1000012b0
   10001f60b:	test   rax,rax
   10001f60e:	je     0x10001f630
   10001f610:	mov    QWORD PTR [rax+0x8],rsi
   10001f614:	mov    rcx,QWORD PTR [rip+0xcadd]        # 0x10002c0f8
   10001f61b:	mov    QWORD PTR [rax],rcx
   10001f61e:	mov    QWORD PTR [rip+0xcad3],rax        # 0x10002c0f8
   10001f625:	jmp    0x10001f630
   10001f627:	mov    rcx,rdi
   10001f62a:	call   QWORD PTR [rip+0xfffffffffffe1a40]        # 0x100001070
   10001f630:	mov    rax,QWORD PTR [rip+0x101]        # 0x10001f738
   10001f637:	mov    QWORD PTR [rsp+0x50],rdi
   10001f63c:	test   rax,rax
   10001f63f:	je     0x10001f650
   10001f641:	lea    rdx,[rsp+0x20]
   10001f646:	mov    ecx,0x2
   10001f64b:	call   rax
   10001f64d:	mov    rbx,rax
   10001f650:	test   rbx,rbx
   10001f653:	jne    0x10001f6f0
   10001f659:	cmp    DWORD PTR [rsi+0x14],ebx
   10001f65c:	je     0x10001f687
   10001f65e:	cmp    DWORD PTR [rsi+0x1c],ebx
   10001f661:	je     0x10001f687
   10001f663:	movsxd rax,DWORD PTR [rdi+0x3c]
   10001f667:	cmp    DWORD PTR [rax+rdi*1],0x4550
   10001f66e:	jne    0x10001f687
   10001f670:	cmp    DWORD PTR [rax+rdi*1+0x8],r15d
   10001f675:	jne    0x10001f687
   10001f677:	cmp    rdi,QWORD PTR [rax+rdi*1+0x30]
   10001f67c:	jne    0x10001f687
   10001f67e:	mov    rbx,QWORD PTR [r14+rbp*8]
   10001f682:	test   rbx,rbx
   10001f685:	jne    0x10001f6f0
   10001f687:	mov    rdx,QWORD PTR [rsp+0x48]
   10001f68c:	mov    rcx,rdi
   10001f68f:	call   QWORD PTR [rip+0xfffffffffffe1bb3]        # 0x100001248
   10001f695:	mov    rbx,rax
   10001f698:	test   rax,rax
   10001f69b:	jne    0x10001f6f0
   10001f69d:	call   QWORD PTR [rip+0xfffffffffffe1a8d]        # 0x100001130
   10001f6a3:	mov    DWORD PTR [rsp+0x60],eax
   10001f6a7:	mov    rax,QWORD PTR [rip+0x92]        # 0x10001f740
   10001f6ae:	test   rax,rax
   10001f6b1:	je     0x10001f6c0
   10001f6b3:	lea    rdx,[rsp+0x20]
   10001f6b8:	lea    ecx,[rbx+0x4]
   10001f6bb:	call   rax
   10001f6bd:	mov    rbx,rax
   10001f6c0:	test   rbx,rbx
   10001f6c3:	jne    0x10001f6f0
   10001f6c5:	lea    rax,[rsp+0x20]
   10001f6ca:	lea    r9,[rsp+0xc0]
   10001f6d2:	lea    r8d,[rbx+0x1]
   10001f6d6:	xor    edx,edx
   10001f6d8:	mov    ecx,0xc06d007f
   10001f6dd:	mov    QWORD PTR [rsp+0xc0],rax
   10001f6e5:	call   QWORD PTR [rip+0xfffffffffffe1be5]        # 0x1000012d0
   10001f6eb:	mov    rbx,QWORD PTR [rsp+0x58]
   10001f6f0:	mov    QWORD PTR [r13+0x0],rbx
   10001f6f4:	mov    rax,QWORD PTR [rip+0x3d]        # 0x10001f738
   10001f6fb:	test   rax,rax
   10001f6fe:	je     0x10001f71b
   10001f700:	and    DWORD PTR [rsp+0x60],0x0
   10001f705:	lea    rdx,[rsp+0x20]
   10001f70a:	mov    ecx,0x5
   10001f70f:	mov    QWORD PTR [rsp+0x50],rdi
   10001f714:	mov    QWORD PTR [rsp+0x58],rbx
   10001f719:	call   rax
   10001f71b:	mov    rax,rbx
   10001f71e:	mov    rbx,QWORD PTR [rsp+0xc8]
   10001f726:	add    rsp,0x70
   10001f72a:	pop    r15
   10001f72c:	pop    r14
   10001f72e:	pop    r13
   10001f730:	pop    r12
   10001f732:	pop    rdi
   10001f733:	pop    rsi
   10001f734:	pop    rbp
   10001f735:	ret    
   10001f736:	nop
   10001f737:	nop
	...
   10001f748:	nop
   10001f749:	nop
   10001f74a:	nop
   10001f74b:	nop
   10001f74c:	nop
   10001f74d:	nop
   10001f74e:	nop
   10001f74f:	nop
   10001f750:	jmp    QWORD PTR [rip+0xfffffffffffe1baa]        # 0x100001300
   10001f756:	nop
   10001f757:	nop
   10001f758:	nop
   10001f759:	nop
   10001f75a:	nop
   10001f75b:	nop
   10001f75c:	jmp    QWORD PTR [rip+0xfffffffffffe1b8e]        # 0x1000012f0
   10001f762:	nop
   10001f763:	nop
   10001f764:	nop
   10001f765:	nop
   10001f766:	nop
   10001f767:	nop
   10001f768:	nop
   10001f769:	nop
   10001f76a:	nop
   10001f76b:	nop
   10001f76c:	nop
   10001f76d:	nop
   10001f76e:	nop
   10001f76f:	nop
   10001f770:	mov    rax,rsp
   10001f773:	mov    QWORD PTR [rax+0x8],rbx
   10001f777:	mov    QWORD PTR [rax+0x10],rbp
   10001f77b:	mov    QWORD PTR [rax+0x18],rsi
   10001f77f:	mov    QWORD PTR [rax+0x20],rdi
   10001f783:	push   r12
   10001f785:	sub    rsp,0x20
   10001f789:	mov    r10,QWORD PTR [r9+0x38]
   10001f78d:	mov    rsi,rdx
   10001f790:	mov    r12,r8
   10001f793:	mov    eax,DWORD PTR [r10]
   10001f796:	mov    rbp,rcx
   10001f799:	mov    rdx,r9
   10001f79c:	add    rax,rax
   10001f79f:	mov    rcx,rsi
   10001f7a2:	mov    rdi,r9
   10001f7a5:	lea    rbx,[r10+rax*8+0x4]
   10001f7aa:	mov    r8,rbx
   10001f7ad:	call   0x10001f818
   10001f7b2:	mov    r11d,DWORD PTR [rbx]
   10001f7b5:	mov    r10d,DWORD PTR [rbp+0x4]
   10001f7b9:	mov    eax,r11d
   10001f7bc:	and    r11d,0x2
   10001f7c0:	mov    edx,0x1
   10001f7c5:	and    eax,edx
   10001f7c7:	and    r10b,0x66
   10001f7cb:	cmove  r11d,eax
   10001f7cf:	test   r11d,r11d
   10001f7d2:	je     0x10001f7e7
   10001f7d4:	mov    r9,rdi
   10001f7d7:	mov    r8,r12
   10001f7da:	mov    rdx,rsi
   10001f7dd:	mov    rcx,rbp
   10001f7e0:	call   0x1000195d8
   10001f7e5:	mov    edx,eax
   10001f7e7:	mov    rbx,QWORD PTR [rsp+0x30]
   10001f7ec:	mov    rbp,QWORD PTR [rsp+0x38]
   10001f7f1:	mov    rsi,QWORD PTR [rsp+0x40]
   10001f7f6:	mov    rdi,QWORD PTR [rsp+0x48]
   10001f7fb:	mov    eax,edx
   10001f7fd:	add    rsp,0x20
   10001f801:	pop    r12
   10001f803:	ret    
   10001f804:	nop
   10001f805:	nop
   10001f806:	nop
   10001f807:	nop
   10001f808:	nop
   10001f809:	nop
   10001f80a:	nop
   10001f80b:	nop
   10001f80c:	jmp    QWORD PTR [rip+0xfffffffffffe1ad6]        # 0x1000012e8
   10001f812:	nop
   10001f813:	nop
   10001f814:	nop
   10001f815:	nop
   10001f816:	nop
   10001f817:	nop
   10001f818:	push   rbx
   10001f81a:	sub    rsp,0x20
   10001f81e:	mov    r11d,DWORD PTR [r8]
   10001f821:	mov    rbx,rdx
   10001f824:	mov    r9,rcx
   10001f827:	and    r11d,0xfffffff8
   10001f82b:	test   BYTE PTR [r8],0x4
   10001f82f:	mov    r10,rcx
   10001f832:	je     0x10001f847
   10001f834:	mov    eax,DWORD PTR [r8+0x8]
   10001f838:	movsxd r10,DWORD PTR [r8+0x4]
   10001f83c:	neg    eax
   10001f83e:	add    r10,rcx
   10001f841:	movsxd rcx,eax
   10001f844:	and    r10,rcx
   10001f847:	movsxd rax,r11d
   10001f84a:	mov    rdx,QWORD PTR [rax+r10*1]
   10001f84e:	mov    rax,QWORD PTR [rbx+0x10]
   10001f852:	mov    ecx,DWORD PTR [rax+0x8]
   10001f855:	add    rcx,QWORD PTR [rbx+0x8]
   10001f859:	test   BYTE PTR [rcx+0x3],0xf
   10001f85d:	je     0x10001f86b
   10001f85f:	movzx  eax,BYTE PTR [rcx+0x3]
   10001f863:	and    eax,0xfffffff0
   10001f866:	cdqe   
   10001f868:	add    r9,rax
   10001f86b:	xor    r9,rdx
   10001f86e:	mov    rcx,r9
   10001f871:	add    rsp,0x20
   10001f875:	pop    rbx
   10001f876:	jmp    0x100002610
   10001f87b:	nop
   10001f87c:	nop
   10001f87d:	nop
   10001f87e:	nop
   10001f87f:	nop
   10001f880:	nop
   10001f881:	nop
   10001f882:	nop
   10001f883:	nop
   10001f884:	sub    rsp,0x28
   10001f888:	mov    r8,QWORD PTR [r9+0x38]
   10001f88c:	mov    rcx,rdx
   10001f88f:	mov    rdx,r9
   10001f892:	call   0x10001f818
   10001f897:	mov    eax,0x1
   10001f89c:	add    rsp,0x28
   10001f8a0:	ret    
   10001f8a1:	nop
   10001f8a2:	nop
   10001f8a3:	nop
   10001f8a4:	nop
   10001f8a5:	nop
   10001f8a6:	nop
   10001f8a7:	nop
   10001f8a8:	mov    rax,rsp
   10001f8ab:	mov    QWORD PTR [rax+0x18],rbx
   10001f8af:	mov    QWORD PTR [rax+0x20],rsi
   10001f8b3:	mov    QWORD PTR [rax+0x10],rdx
   10001f8b7:	mov    QWORD PTR [rax+0x8],rcx
   10001f8bb:	push   rdi
   10001f8bc:	push   r12
   10001f8be:	push   r13
   10001f8c0:	sub    rsp,0x30
   10001f8c4:	mov    r13,r9
   10001f8c7:	mov    r12d,r8d
   10001f8ca:	mov    rsi,rdx
   10001f8cd:	mov    rdi,rcx
   10001f8d0:	xor    ebx,ebx
   10001f8d2:	mov    DWORD PTR [rax-0x28],ebx
   10001f8d5:	mov    DWORD PTR [rsp+0x24],ebx
   10001f8d9:	cmp    ebx,r12d
   10001f8dc:	jge    0x10001f8f0
   10001f8de:	mov    rcx,rdi
   10001f8e1:	call   r13
   10001f8e4:	add    rdi,rsi
   10001f8e7:	mov    QWORD PTR [rsp+0x50],rdi
   10001f8ec:	inc    ebx
   10001f8ee:	jmp    0x10001f8d5
   10001f8f0:	mov    DWORD PTR [rsp+0x20],0x1
   10001f8f8:	mov    rbx,QWORD PTR [rsp+0x60]
   10001f8fd:	mov    rsi,QWORD PTR [rsp+0x68]
   10001f902:	add    rsp,0x30
   10001f906:	pop    r13
   10001f908:	pop    r12
   10001f90a:	pop    rdi
   10001f90b:	ret    
   10001f90c:	nop
   10001f90d:	nop
   10001f90e:	nop
   10001f90f:	nop
   10001f910:	nop
   10001f911:	nop
   10001f912:	nop
   10001f913:	nop
   10001f914:	jmp    QWORD PTR [rip+0xfffffffffffe1b7e]        # 0x100001498
   10001f91a:	nop
   10001f91b:	nop
   10001f91c:	nop
   10001f91d:	nop
   10001f91e:	nop
   10001f91f:	nop
   10001f920:	mov    rax,rsp
   10001f923:	mov    QWORD PTR [rax+0x8],rbx
   10001f927:	mov    QWORD PTR [rax+0x10],rbp
   10001f92b:	mov    QWORD PTR [rax+0x18],rsi
   10001f92f:	mov    QWORD PTR [rax+0x20],rdi
   10001f933:	push   r12
   10001f935:	sub    rsp,0x20
   10001f939:	mov    rbx,QWORD PTR [r9+0x38]
   10001f93d:	mov    rsi,rdx
   10001f940:	mov    r12,r8
   10001f943:	mov    rbp,rcx
   10001f946:	lea    r8,[rbx+0x4]
   10001f94a:	mov    rdx,r9
   10001f94d:	mov    rcx,rsi
   10001f950:	mov    rdi,r9
   10001f953:	call   0x10001f818
   10001f958:	mov    r11d,DWORD PTR [rbx+0x4]
   10001f95c:	mov    r10d,DWORD PTR [rbp+0x4]
   10001f960:	mov    eax,r11d
   10001f963:	and    r11d,0x2
   10001f967:	mov    r8d,0x1
   10001f96d:	and    eax,r8d
   10001f970:	and    r10b,0x66
   10001f974:	cmove  r11d,eax
   10001f978:	test   r11d,r11d
   10001f97b:	je     0x10001f991
   10001f97d:	mov    r9,rdi
   10001f980:	mov    r8,r12
   10001f983:	mov    rdx,rsi
   10001f986:	mov    rcx,rbp
   10001f989:	call   0x10001f914
   10001f98e:	mov    r8d,eax
   10001f991:	mov    rbx,QWORD PTR [rsp+0x30]
   10001f996:	mov    rbp,QWORD PTR [rsp+0x38]
   10001f99b:	mov    rsi,QWORD PTR [rsp+0x40]
   10001f9a0:	mov    rdi,QWORD PTR [rsp+0x48]
   10001f9a5:	mov    eax,r8d
   10001f9a8:	add    rsp,0x20
   10001f9ac:	pop    r12
   10001f9ae:	ret    
   10001f9af:	nop
   10001f9b0:	push   rbp
   10001f9b1:	sub    rsp,0x20
   10001f9b5:	mov    rbp,rdx
   10001f9b8:	mov    rax,QWORD PTR [rcx]
   10001f9bb:	mov    rdx,rcx
   10001f9be:	mov    ecx,DWORD PTR [rax]
   10001f9c0:	call   0x1000195e4
   10001f9c5:	nop
   10001f9c6:	add    rsp,0x20
   10001f9ca:	pop    rbp
   10001f9cb:	ret    
   10001f9cc:	push   rbp
   10001f9cd:	sub    rsp,0x20
   10001f9d1:	mov    rbp,rdx
   10001f9d4:	mov    ecx,0x8
   10001f9d9:	call   0x100019868
   10001f9de:	nop
   10001f9df:	add    rsp,0x20
   10001f9e3:	pop    rbp
   10001f9e4:	ret    
   10001f9e5:	nop
   10001f9e6:	nop
   10001f9e7:	nop
   10001f9e8:	push   rbp
   10001f9e9:	sub    rsp,0x20
   10001f9ed:	mov    rbp,rdx
   10001f9f0:	mov    rax,QWORD PTR [rcx]
   10001f9f3:	xor    ecx,ecx
   10001f9f5:	cmp    DWORD PTR [rax],0xc0000005
   10001f9fb:	sete   cl
   10001f9fe:	mov    eax,ecx
   10001fa00:	mov    eax,ecx
   10001fa02:	add    rsp,0x20
   10001fa06:	pop    rbp
   10001fa07:	ret    
   10001fa08:	nop
   10001fa09:	nop
   10001fa0a:	nop
   10001fa0b:	nop
   10001fa0c:	nop
   10001fa0d:	nop
   10001fa0e:	nop
   10001fa0f:	nop
   10001fa10:	push   rbp
   10001fa12:	sub    rsp,0x20
   10001fa16:	mov    rbp,rdx
   10001fa19:	mov    QWORD PTR [rbp+0x38],rcx
   10001fa1d:	mov    QWORD PTR [rbp+0x28],rcx
   10001fa21:	mov    rax,QWORD PTR [rbp+0x28]
   10001fa25:	mov    rcx,QWORD PTR [rax]
   10001fa28:	mov    QWORD PTR [rbp+0x30],rcx
   10001fa2c:	mov    rax,QWORD PTR [rbp+0x30]
   10001fa30:	cmp    DWORD PTR [rax],0xe06d7363
   10001fa36:	je     0x10001fa44
   10001fa38:	mov    DWORD PTR [rbp+0x20],0x0
   10001fa3f:	mov    eax,DWORD PTR [rbp+0x20]
   10001fa42:	jmp    0x10001fa4a
   10001fa44:	call   0x10001988c
   10001fa49:	nop
   10001fa4a:	add    rsp,0x20
   10001fa4e:	pop    rbp
   10001fa4f:	ret    
   10001fa50:	nop
   10001fa51:	nop
   10001fa52:	nop
   10001fa53:	nop
   10001fa54:	nop
   10001fa55:	nop
   10001fa56:	nop
   10001fa57:	nop
   10001fa58:	push   rbp
   10001fa5a:	sub    rsp,0x20
   10001fa5e:	mov    rbp,rdx
   10001fa61:	cmp    DWORD PTR [rbp+0x20],0x0
   10001fa65:	jne    0x10001fa7d
   10001fa67:	mov    r9,QWORD PTR [rbp+0x78]
   10001fa6b:	mov    r8d,DWORD PTR [rbp+0x70]
   10001fa6f:	mov    rdx,QWORD PTR [rbp+0x68]
   10001fa73:	mov    rcx,QWORD PTR [rbp+0x60]
   10001fa77:	call   0x1000197b4
   10001fa7c:	nop
   10001fa7d:	add    rsp,0x20
   10001fa81:	pop    rbp
   10001fa82:	ret    
   10001fa83:	nop
   10001fa84:	nop
   10001fa85:	nop
   10001fa86:	nop
   10001fa87:	nop
   10001fa88:	nop
   10001fa89:	nop
   10001fa8a:	nop
   10001fa8b:	nop
   10001fa8c:	push   rbp
   10001fa8e:	sub    rsp,0x20
   10001fa92:	mov    rbp,rdx
   10001fa95:	cmp    DWORD PTR [rbp+0x20],0x0
   10001fa99:	jne    0x10001fab1
   10001fa9b:	mov    r9,QWORD PTR [rbp+0x70]
   10001fa9f:	mov    r8d,DWORD PTR [rbp+0x24]
   10001faa3:	mov    rdx,QWORD PTR [rbp+0x58]
   10001faa7:	mov    rcx,QWORD PTR [rbp+0x50]
   10001faab:	call   0x1000197b4
   10001fab0:	nop
   10001fab1:	add    rsp,0x20
   10001fab5:	pop    rbp
   10001fab6:	ret    
   10001fab7:	nop
   10001fab8:	nop
   10001fab9:	nop
   10001faba:	nop
   10001fabb:	nop
   10001fabc:	nop
   10001fabd:	nop
   10001fabe:	nop
   10001fabf:	nop
   10001fac0:	lea    rcx,[rdx+0x60]
   10001fac4:	jmp    0x100002030
   10001fac9:	nop
   10001faca:	nop
   10001facb:	nop
   10001facc:	nop
   10001facd:	nop
   10001face:	nop
   10001facf:	nop
   10001fad0:	mov    QWORD PTR [rsp+0x10],rdx
   10001fad5:	push   rbp
   10001fad6:	sub    rsp,0x20
   10001fada:	mov    rbp,rdx
   10001fadd:	lea    rdx,[rbp+0x80]
   10001fae4:	lea    rcx,[rbp+0x48]
   10001fae8:	call   QWORD PTR [rip+0xfffffffffffe2122]        # 0x100001c10
   10001faee:	nop
   10001faef:	mov    rax,QWORD PTR [rip+0xfffffffffffe242a]        # 0x100001f20
   10001faf6:	mov    rcx,QWORD PTR [rax]
   10001faf9:	mov    QWORD PTR [rbp+0x30],rcx
   10001fafd:	lea    rax,[rip+0x3c]        # 0x10001fb40
   10001fb04:	mov    QWORD PTR [rbp+0x38],rax
   10001fb08:	lea    rdx,[rbp+0x30]
   10001fb0c:	lea    rcx,[rbp+0xc8]
   10001fb13:	call   0x100005ac0
   10001fb18:	nop
   10001fb19:	lea    rcx,[rbp+0x48]
   10001fb1d:	call   QWORD PTR [rip+0xfffffffffffe20f5]        # 0x100001c18
   10001fb23:	nop
   10001fb24:	lea    rax,[rip+0xfffffffffffe592d]        # 0x100005458
   10001fb2b:	add    rsp,0x20
   10001fb2f:	pop    rbp
   10001fb30:	ret    
   10001fb31:	nop
   10001fb32:	nop
   10001fb33:	nop
   10001fb34:	nop
   10001fb35:	nop
   10001fb36:	nop
   10001fb37:	nop
   10001fb38:	nop
   10001fb39:	nop
   10001fb3a:	nop
   10001fb3b:	nop
   10001fb3c:	nop
   10001fb3d:	nop
   10001fb3e:	nop
   10001fb3f:	nop
   10001fb40:	add    BYTE PTR [r8+0x0],r15b
   10001fb44:	movsxd eax,DWORD PTR [rax]
   10001fb46:	add    BYTE PTR gs:[rax+0x0],dh
   10001fb4a:	je     0x10001fb4c
   10001fb4c:	imul   eax,DWORD PTR [rax],0x6e006f
   10001fb52:	and    BYTE PTR [rax],al
   10001fb54:	jb     0x10001fb56
   10001fb56:	(bad)  
   10001fb57:	add    BYTE PTR [rcx+0x0],ch
   10001fb5a:	jae    0x10001fb5c
   10001fb5c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   10001fb61:	add    BYTE PTR [rcx+0x0],ch
   10001fb64:	outs   dx,BYTE PTR ds:[rsi]
   10001fb65:	add    BYTE PTR [rax],ah
   10001fb67:	add    BYTE PTR [rbx+0x0],dl
   10001fb6a:	push   rcx
   10001fb6b:	add    BYTE PTR [rax+rax*1+0x53],cl
   10001fb6f:	add    BYTE PTR [rax+0x0],ch
   10001fb72:	jne    0x10001fb74
   10001fb74:	je     0x10001fb76
   10001fb76:	add    BYTE PTR fs:[rdi+0x0],ch
   10001fb7a:	ja     0x10001fb7c
   10001fb7c:	outs   dx,BYTE PTR ds:[rsi]
   10001fb7d:	add    BYTE PTR [rsi],ch
   10001fb7f:	add    BYTE PTR [rdx],cl
   10001fb81:	add    BYTE PTR [rax],al
   10001fb83:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001fb89:	nop
   10001fb8a:	nop
   10001fb8b:	nop
   10001fb8c:	nop
   10001fb8d:	nop
   10001fb8e:	nop
   10001fb8f:	nop
   10001fb90:	lea    rcx,[rdx+0x48]
   10001fb94:	rex.W jmp QWORD PTR [rip+0xfffffffffffe207d]        # 0x100001c18
   10001fb9b:	nop
   10001fb9c:	nop
   10001fb9d:	nop
   10001fb9e:	nop
   10001fb9f:	nop
   10001fba0:	mov    QWORD PTR [rsp+0x10],rdx
   10001fba5:	push   rbp
   10001fba6:	sub    rsp,0x20
   10001fbaa:	mov    rbp,rdx
   10001fbad:	lea    rax,[rip+0xffffffffffffff70]        # 0x10001fb24
   10001fbb4:	add    rsp,0x20
   10001fbb8:	pop    rbp
   10001fbb9:	ret    
   10001fbba:	nop
   10001fbbb:	nop
   10001fbbc:	nop
   10001fbbd:	nop
   10001fbbe:	nop
   10001fbbf:	nop
   10001fbc0:	mov    QWORD PTR [rsp+0x10],rdx
   10001fbc5:	push   rbp
   10001fbc6:	sub    rsp,0x20
   10001fbca:	mov    rbp,rdx
   10001fbcd:	mov    rax,QWORD PTR [rip+0xfffffffffffe234c]        # 0x100001f20
   10001fbd4:	mov    rcx,QWORD PTR [rax]
   10001fbd7:	mov    QWORD PTR [rbp+0x20],rcx
   10001fbdb:	lea    rax,[rip+0x2e]        # 0x10001fc10
   10001fbe2:	mov    QWORD PTR [rbp+0x28],rax
   10001fbe6:	lea    rdx,[rbp+0x20]
   10001fbea:	lea    rcx,[rbp+0x58]
   10001fbee:	call   0x100005ac0
   10001fbf3:	nop
   10001fbf4:	lea    rax,[rip+0xfffffffffffe58ef]        # 0x1000054ea
   10001fbfb:	add    rsp,0x20
   10001fbff:	pop    rbp
   10001fc00:	ret    
   10001fc01:	nop
   10001fc02:	nop
   10001fc03:	nop
   10001fc04:	nop
   10001fc05:	nop
   10001fc06:	nop
   10001fc07:	nop
   10001fc08:	nop
   10001fc09:	nop
   10001fc0a:	nop
   10001fc0b:	nop
   10001fc0c:	nop
   10001fc0d:	nop
   10001fc0e:	nop
   10001fc0f:	nop
   10001fc10:	push   rbp
   10001fc11:	add    BYTE PTR [rsi+0x0],ch
   10001fc14:	imul   eax,DWORD PTR [rax],0x6e
   10001fc17:	add    BYTE PTR [rdi+0x0],ch
   10001fc1a:	ja     0x10001fc1c
   10001fc1c:	outs   dx,BYTE PTR ds:[rsi]
   10001fc1d:	add    BYTE PTR [rax],ah
   10001fc1f:	add    BYTE PTR [rbp+0x0],al
   10001fc22:	js     0x10001fc24
   10001fc24:	movsxd eax,DWORD PTR [rax]
   10001fc26:	add    BYTE PTR gs:[rax+0x0],dh
   10001fc2a:	je     0x10001fc2c
   10001fc2c:	imul   eax,DWORD PTR [rax],0x6e006f
   10001fc32:	and    BYTE PTR [rax],al
   10001fc34:	jb     0x10001fc36
   10001fc36:	(bad)  
   10001fc37:	add    BYTE PTR [rcx+0x0],ch
   10001fc3a:	jae    0x10001fc3c
   10001fc3c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   10001fc41:	add    BYTE PTR [rcx+0x0],ch
   10001fc44:	outs   dx,BYTE PTR ds:[rsi]
   10001fc45:	add    BYTE PTR [rax],ah
   10001fc47:	add    BYTE PTR [rbx+0x0],dl
   10001fc4a:	push   rcx
   10001fc4b:	add    BYTE PTR [rax+rax*1+0x53],cl
   10001fc4f:	add    BYTE PTR [rax+0x0],ch
   10001fc52:	jne    0x10001fc54
   10001fc54:	je     0x10001fc56
   10001fc56:	add    BYTE PTR fs:[rdi+0x0],ch
   10001fc5a:	ja     0x10001fc5c
   10001fc5c:	outs   dx,BYTE PTR ds:[rsi]
   10001fc5d:	add    BYTE PTR [rsi],ch
   10001fc5f:	add    BYTE PTR [rdx],cl
   10001fc61:	add    BYTE PTR [rax],al
   10001fc63:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10001fc69:	nop
   10001fc6a:	nop
   10001fc6b:	nop
   10001fc6c:	nop
   10001fc6d:	nop
   10001fc6e:	nop
   10001fc6f:	nop
   10001fc70:	mov    rcx,QWORD PTR [rdx+0x40]
   10001fc74:	jmp    0x100006550
   10001fc79:	nop
   10001fc7a:	nop
   10001fc7b:	nop
   10001fc7c:	nop
   10001fc7d:	nop
   10001fc7e:	nop
   10001fc7f:	nop
   10001fc80:	mov    rcx,QWORD PTR [rdx+0x40]
   10001fc84:	jmp    0x1000064b0
   10001fc89:	nop
   10001fc8a:	nop
   10001fc8b:	nop
   10001fc8c:	nop
   10001fc8d:	nop
   10001fc8e:	nop
   10001fc8f:	nop
   10001fc90:	lea    rcx,[rdx+0x28]
   10001fc94:	jmp    0x1000064b0
   10001fc99:	nop
   10001fc9a:	nop
   10001fc9b:	nop
   10001fc9c:	nop
   10001fc9d:	nop
   10001fc9e:	nop
   10001fc9f:	nop
   10001fca0:	lea    rcx,[rdx+0x28]
   10001fca4:	jmp    0x100006550
   10001fca9:	nop
   10001fcaa:	nop
   10001fcab:	nop
   10001fcac:	nop
   10001fcad:	nop
   10001fcae:	nop
   10001fcaf:	nop
   10001fcb0:	lea    rcx,[rdx+0x28]
   10001fcb4:	jmp    0x1000060d0
   10001fcb9:	nop
   10001fcba:	nop
   10001fcbb:	nop
   10001fcbc:	nop
   10001fcbd:	nop
   10001fcbe:	nop
   10001fcbf:	nop
   10001fcc0:	lea    rcx,[rdx+0x28]
   10001fcc4:	jmp    0x100006550
   10001fcc9:	nop
   10001fcca:	nop
   10001fccb:	nop
   10001fccc:	nop
   10001fccd:	nop
   10001fcce:	nop
   10001fccf:	nop
   10001fcd0:	lea    rcx,[rdx+0x28]
   10001fcd4:	jmp    0x1000064b0
   10001fcd9:	nop
   10001fcda:	nop
   10001fcdb:	nop
   10001fcdc:	nop
   10001fcdd:	nop
   10001fcde:	nop
   10001fcdf:	nop
   10001fce0:	lea    rcx,[rdx+0x28]
   10001fce4:	jmp    0x100006be0
   10001fce9:	nop
   10001fcea:	nop
   10001fceb:	nop
   10001fcec:	nop
   10001fced:	nop
   10001fcee:	nop
   10001fcef:	nop
   10001fcf0:	lea    rcx,[rdx+0x1050]
   10001fcf7:	rex.W jmp QWORD PTR [rip+0xfffffffffffe1e8a]        # 0x100001b88
   10001fcfe:	nop
   10001fcff:	nop
   10001fd00:	nop
   10001fd01:	nop
   10001fd02:	nop
   10001fd03:	nop
   10001fd04:	nop
   10001fd05:	nop
   10001fd06:	nop
   10001fd07:	nop
   10001fd08:	nop
   10001fd09:	nop
   10001fd0a:	nop
   10001fd0b:	nop
   10001fd0c:	nop
   10001fd0d:	nop
   10001fd0e:	nop
   10001fd0f:	nop
   10001fd10:	lea    rcx,[rdx+0x28]
   10001fd14:	jmp    0x100006600
   10001fd19:	nop
   10001fd1a:	nop
   10001fd1b:	nop
   10001fd1c:	nop
   10001fd1d:	nop
   10001fd1e:	nop
   10001fd1f:	nop
   10001fd20:	lea    rcx,[rdx+0x50]
   10001fd24:	rex.W jmp QWORD PTR [rip+0xfffffffffffe1e5d]        # 0x100001b88
   10001fd2b:	nop
   10001fd2c:	nop
   10001fd2d:	nop
   10001fd2e:	nop
   10001fd2f:	nop
   10001fd30:	nop
   10001fd31:	nop
   10001fd32:	nop
   10001fd33:	nop
   10001fd34:	nop
   10001fd35:	nop
   10001fd36:	nop
   10001fd37:	nop
   10001fd38:	nop
   10001fd39:	nop
   10001fd3a:	nop
   10001fd3b:	nop
   10001fd3c:	nop
   10001fd3d:	nop
   10001fd3e:	nop
   10001fd3f:	nop
   10001fd40:	lea    rcx,[rdx+0x50]
   10001fd44:	rex.W jmp QWORD PTR [rip+0xfffffffffffe1e3d]        # 0x100001b88
   10001fd4b:	nop
   10001fd4c:	nop
   10001fd4d:	nop
   10001fd4e:	nop
   10001fd4f:	nop
   10001fd50:	nop
   10001fd51:	nop
   10001fd52:	nop
   10001fd53:	nop
   10001fd54:	nop
   10001fd55:	nop
   10001fd56:	nop
   10001fd57:	nop
   10001fd58:	nop
   10001fd59:	nop
   10001fd5a:	nop
   10001fd5b:	nop
   10001fd5c:	nop
   10001fd5d:	nop
   10001fd5e:	nop
   10001fd5f:	nop
   10001fd60:	lea    rcx,[rdx+0x50]
   10001fd64:	rex.W jmp QWORD PTR [rip+0xfffffffffffe1e1d]        # 0x100001b88
   10001fd6b:	nop
   10001fd6c:	nop
   10001fd6d:	nop
   10001fd6e:	nop
   10001fd6f:	nop
   10001fd70:	nop
   10001fd71:	nop
   10001fd72:	nop
   10001fd73:	nop
   10001fd74:	nop
   10001fd75:	nop
   10001fd76:	nop
   10001fd77:	nop
   10001fd78:	nop
   10001fd79:	nop
   10001fd7a:	nop
   10001fd7b:	nop
   10001fd7c:	nop
   10001fd7d:	nop
   10001fd7e:	nop
   10001fd7f:	nop
   10001fd80:	push   rbp
   10001fd82:	sub    rsp,0x20
   10001fd86:	mov    rbp,rdx
   10001fd89:	call   QWORD PTR [rip+0xfffffffffffe1eb1]        # 0x100001c40
   10001fd8f:	nop
   10001fd90:	add    rsp,0x20
   10001fd94:	pop    rbp
   10001fd95:	ret    
   10001fd96:	nop
   10001fd97:	nop
   10001fd98:	nop
   10001fd99:	nop
   10001fd9a:	nop
   10001fd9b:	nop
   10001fd9c:	nop
   10001fd9d:	nop
   10001fd9e:	nop
   10001fd9f:	nop
   10001fda0:	lea    rcx,[rdx+0xa0]
   10001fda7:	rex.W jmp QWORD PTR [rip+0xfffffffffffe1dda]        # 0x100001b88
   10001fdae:	nop
   10001fdaf:	nop
   10001fdb0:	nop
   10001fdb1:	nop
   10001fdb2:	nop
   10001fdb3:	nop
   10001fdb4:	nop
   10001fdb5:	nop
   10001fdb6:	nop
   10001fdb7:	nop
   10001fdb8:	nop
   10001fdb9:	nop
   10001fdba:	nop
   10001fdbb:	nop
   10001fdbc:	nop
   10001fdbd:	nop
   10001fdbe:	nop
   10001fdbf:	nop
   10001fdc0:	lea    rcx,[rdx+0x190]
   10001fdc7:	jmp    0x100002030
   10001fdcc:	nop
   10001fdcd:	nop
   10001fdce:	nop
   10001fdcf:	nop
   10001fdd0:	mov    QWORD PTR [rsp+0x10],rdx
   10001fdd5:	push   rbp
   10001fdd6:	sub    rsp,0x40
   10001fdda:	mov    rbp,rdx
   10001fddd:	lea    rdx,[rbp+0x1b0]
   10001fde4:	lea    rcx,[rbp+0x150]
   10001fdeb:	call   QWORD PTR [rip+0xfffffffffffe1e1f]        # 0x100001c10
   10001fdf1:	nop
   10001fdf2:	call   QWORD PTR [rip+0xfffffffffffe1dd8]        # 0x100001bd0
   10001fdf8:	cmp    eax,0x1
   10001fdfb:	jne    0x10001fe05
   10001fdfd:	xor    ecx,ecx
   10001fdff:	call   QWORD PTR [rip+0xfffffffffffe1d33]        # 0x100001b38
   10001fe05:	call   QWORD PTR [rip+0xfffffffffffe1dc5]        # 0x100001bd0
   10001fe0b:	cmp    eax,0x2
   10001fe0e:	jne    0x10001fe19
   10001fe10:	xor    ecx,ecx
   10001fe12:	call   QWORD PTR [rip+0xfffffffffffe1d20]        # 0x100001b38
   10001fe18:	nop
   10001fe19:	lea    rcx,[rbp+0x150]
   10001fe20:	call   QWORD PTR [rip+0xfffffffffffe1df2]        # 0x100001c18
   10001fe26:	nop
   10001fe27:	lea    rax,[rip+0xfffffffffffec4fd]        # 0x10000c32b
   10001fe2e:	add    rsp,0x40
   10001fe32:	pop    rbp
   10001fe33:	ret    
   10001fe34:	nop
   10001fe35:	nop
   10001fe36:	nop
   10001fe37:	nop
   10001fe38:	nop
   10001fe39:	nop
   10001fe3a:	nop
   10001fe3b:	nop
   10001fe3c:	nop
   10001fe3d:	nop
   10001fe3e:	nop
   10001fe3f:	nop
   10001fe40:	lea    rcx,[rdx+0x150]
   10001fe47:	rex.W jmp QWORD PTR [rip+0xfffffffffffe1dca]        # 0x100001c18
   10001fe4e:	nop
   10001fe4f:	nop
   10001fe50:	mov    QWORD PTR [rsp+0x10],rdx
   10001fe55:	push   rbp
   10001fe56:	sub    rsp,0x40
   10001fe5a:	mov    rbp,rdx
   10001fe5d:	lea    rax,[rip+0xffffffffffffffc3]        # 0x10001fe27
   10001fe64:	add    rsp,0x40
   10001fe68:	pop    rbp
   10001fe69:	ret    
   10001fe6a:	nop
   10001fe6b:	nop
   10001fe6c:	nop
   10001fe6d:	nop
   10001fe6e:	nop
   10001fe6f:	nop
   10001fe70:	mov    rcx,QWORD PTR [rdx+0x40]
   10001fe74:	rex.W jmp QWORD PTR [rip+0xfffffffffffe1de5]        # 0x100001c60
   10001fe7b:	nop
   10001fe7c:	nop
   10001fe7d:	nop
   10001fe7e:	nop
   10001fe7f:	nop
   10001fe80:	nop
   10001fe81:	nop
   10001fe82:	nop
   10001fe83:	nop
   10001fe84:	nop
   10001fe85:	nop
   10001fe86:	nop
   10001fe87:	nop
   10001fe88:	nop
   10001fe89:	nop
   10001fe8a:	nop
   10001fe8b:	nop
   10001fe8c:	nop
   10001fe8d:	nop
   10001fe8e:	nop
   10001fe8f:	nop
   10001fe90:	lea    rcx,[rip+0xd769]        # 0x10002d600
   10001fe97:	jmp    0x10000e3c0
   10001fe9c:	nop
   10001fe9d:	nop
   10001fe9e:	nop
   10001fe9f:	nop
   10001fea0:	nop
   10001fea1:	nop
   10001fea2:	nop
   10001fea3:	nop
   10001fea4:	nop
   10001fea5:	nop
   10001fea6:	nop
   10001fea7:	nop
   10001fea8:	nop
   10001fea9:	nop
   10001feaa:	nop
   10001feab:	nop
   10001feac:	nop
   10001fead:	nop
   10001feae:	nop
   10001feaf:	nop
   10001feb0:	lea    rcx,[rip+0xd731]        # 0x10002d5e8
   10001feb7:	jmp    0x10000e380
   10001febc:	nop
   10001febd:	nop
   10001febe:	nop
   10001febf:	nop
   10001fec0:	nop
   10001fec1:	nop
   10001fec2:	nop
   10001fec3:	nop
   10001fec4:	nop
   10001fec5:	nop
   10001fec6:	nop
   10001fec7:	nop
   10001fec8:	nop
   10001fec9:	nop
   10001feca:	nop
   10001fecb:	nop
   10001fecc:	nop
   10001fecd:	nop
   10001fece:	nop
   10001fecf:	nop
   10001fed0:	lea    rcx,[rip+0x99b9]        # 0x100029890
   10001fed7:	jmp    0x10000e3f0
   10001fedc:	nop
   10001fedd:	nop
   10001fede:	nop
   10001fedf:	nop
   10001fee0:	nop
   10001fee1:	nop
   10001fee2:	nop
   10001fee3:	nop
   10001fee4:	nop
   10001fee5:	nop
   10001fee6:	nop
   10001fee7:	nop
   10001fee8:	nop
   10001fee9:	nop
   10001feea:	nop
   10001feeb:	nop
   10001feec:	nop
   10001feed:	nop
   10001feee:	nop
   10001feef:	nop
   10001fef0:	lea    rcx,[rip+0xd739]        # 0x10002d630
   10001fef7:	jmp    0x10000e560
   10001fefc:	nop
   10001fefd:	nop
   10001fefe:	nop
   10001feff:	nop
   10001ff00:	nop
   10001ff01:	nop
   10001ff02:	nop
   10001ff03:	nop
   10001ff04:	nop
   10001ff05:	nop
   10001ff06:	nop
   10001ff07:	nop
   10001ff08:	nop
   10001ff09:	nop
   10001ff0a:	nop
   10001ff0b:	nop
   10001ff0c:	nop
   10001ff0d:	nop
   10001ff0e:	nop
   10001ff0f:	nop
   10001ff10:	lea    rcx,[rip+0xd701]        # 0x10002d618
   10001ff17:	jmp    0x10000e470
   10001ff1c:	nop
   10001ff1d:	nop
   10001ff1e:	nop
   10001ff1f:	nop
   10001ff20:	nop
   10001ff21:	nop
   10001ff22:	nop
   10001ff23:	nop
   10001ff24:	nop
   10001ff25:	nop
   10001ff26:	nop
   10001ff27:	nop
   10001ff28:	nop
   10001ff29:	nop
   10001ff2a:	nop
   10001ff2b:	nop
   10001ff2c:	nop
   10001ff2d:	nop
   10001ff2e:	nop
   10001ff2f:	nop
   10001ff30:	lea    rcx,[rip+0x9989]        # 0x1000298c0
   10001ff37:	jmp    0x10000e470
   10001ff3c:	nop
   10001ff3d:	nop
   10001ff3e:	nop
   10001ff3f:	nop
   10001ff40:	nop
   10001ff41:	nop
   10001ff42:	nop
   10001ff43:	nop
   10001ff44:	nop
   10001ff45:	nop
   10001ff46:	nop
   10001ff47:	nop
   10001ff48:	nop
   10001ff49:	nop
   10001ff4a:	nop
   10001ff4b:	nop
   10001ff4c:	nop
   10001ff4d:	nop
   10001ff4e:	nop
   10001ff4f:	nop
   10001ff50:	lea    rcx,[rip+0x99b9]        # 0x100029910
   10001ff57:	jmp    0x10000e5a0
   10001ff5c:	nop
   10001ff5d:	nop
   10001ff5e:	nop
   10001ff5f:	nop
   10001ff60:	nop
   10001ff61:	nop
   10001ff62:	nop
   10001ff63:	nop
   10001ff64:	nop
   10001ff65:	nop
   10001ff66:	nop
   10001ff67:	nop
   10001ff68:	nop
   10001ff69:	nop
   10001ff6a:	nop
   10001ff6b:	nop
   10001ff6c:	nop
   10001ff6d:	nop
   10001ff6e:	nop
   10001ff6f:	nop
   10001ff70:	lea    rcx,[rip+0x9159]        # 0x1000290d0
   10001ff77:	jmp    0x10000e4a0
   10001ff7c:	nop
   10001ff7d:	nop
   10001ff7e:	nop
   10001ff7f:	nop
   10001ff80:	nop
   10001ff81:	nop
   10001ff82:	nop
   10001ff83:	nop
   10001ff84:	nop
   10001ff85:	nop
   10001ff86:	nop
   10001ff87:	nop
   10001ff88:	nop
   10001ff89:	nop
   10001ff8a:	nop
   10001ff8b:	nop
   10001ff8c:	nop
   10001ff8d:	nop
   10001ff8e:	nop
   10001ff8f:	nop
   10001ff90:	lea    rcx,[rip+0x9911]        # 0x1000298a8
   10001ff97:	jmp    0x10000e430
   10001ff9c:	nop
   10001ff9d:	nop
   10001ff9e:	nop
   10001ff9f:	nop
   10001ffa0:	nop
   10001ffa1:	nop
   10001ffa2:	nop
   10001ffa3:	nop
   10001ffa4:	nop
   10001ffa5:	nop
   10001ffa6:	nop
   10001ffa7:	nop
   10001ffa8:	nop
   10001ffa9:	nop
   10001ffaa:	nop
   10001ffab:	nop
   10001ffac:	nop
   10001ffad:	nop
   10001ffae:	nop
   10001ffaf:	nop
   10001ffb0:	lea    rcx,[rip+0x9929]        # 0x1000298e0
   10001ffb7:	jmp    0x10000e4e0
   10001ffbc:	nop
   10001ffbd:	nop
   10001ffbe:	nop
   10001ffbf:	nop
   10001ffc0:	nop
   10001ffc1:	nop
   10001ffc2:	nop
   10001ffc3:	nop
   10001ffc4:	nop
   10001ffc5:	nop
   10001ffc6:	nop
   10001ffc7:	nop
   10001ffc8:	nop
   10001ffc9:	nop
   10001ffca:	nop
   10001ffcb:	nop
   10001ffcc:	nop
   10001ffcd:	nop
   10001ffce:	nop
   10001ffcf:	nop
   10001ffd0:	lea    rcx,[rip+0x98a1]        # 0x100029878
   10001ffd7:	jmp    0x10000e3c0
   10001ffdc:	nop
   10001ffdd:	nop
   10001ffde:	nop
   10001ffdf:	nop
   10001ffe0:	nop
   10001ffe1:	nop
   10001ffe2:	nop
   10001ffe3:	nop
   10001ffe4:	nop
   10001ffe5:	nop
   10001ffe6:	nop
   10001ffe7:	nop
   10001ffe8:	nop
   10001ffe9:	nop
   10001ffea:	nop
   10001ffeb:	nop
   10001ffec:	nop
   10001ffed:	nop
   10001ffee:	nop
   10001ffef:	nop
   10001fff0:	lea    rcx,[rip+0x9901]        # 0x1000298f8
   10001fff7:	jmp    0x10000e520
   10001fffc:	nop
   10001fffd:	nop
   10001fffe:	nop
   10001ffff:	nop
   100020000:	nop
   100020001:	nop
   100020002:	nop
   100020003:	nop
   100020004:	nop
   100020005:	nop
   100020006:	nop
   100020007:	nop
   100020008:	nop
   100020009:	nop
   10002000a:	nop
   10002000b:	nop
   10002000c:	nop
   10002000d:	nop
   10002000e:	nop
   10002000f:	nop
   100020010:	lea    rcx,[rip+0xcf39]        # 0x10002cf50
   100020017:	rex.W jmp QWORD PTR [rip+0xfffffffffffe1c42]        # 0x100001c60
   10002001e:	nop
   10002001f:	nop
   100020020:	nop
   100020021:	nop
   100020022:	nop
   100020023:	nop
   100020024:	nop
   100020025:	nop
   100020026:	nop
   100020027:	nop
   100020028:	nop
   100020029:	nop
   10002002a:	nop
   10002002b:	nop
   10002002c:	nop
   10002002d:	nop
   10002002e:	nop
   10002002f:	nop
   100020030:	lea    rcx,[rip+0xd5c9]        # 0x10002d600
   100020037:	jmp    0x10000e3c0
   10002003c:	nop
   10002003d:	nop
   10002003e:	nop
   10002003f:	nop
   100020040:	nop
   100020041:	nop
   100020042:	nop
   100020043:	nop
   100020044:	nop
   100020045:	nop
   100020046:	nop
   100020047:	nop
   100020048:	nop
   100020049:	nop
   10002004a:	nop
   10002004b:	nop
   10002004c:	nop
   10002004d:	nop
   10002004e:	nop
   10002004f:	nop
   100020050:	lea    rcx,[rip+0xd591]        # 0x10002d5e8
   100020057:	jmp    0x10000e380
   10002005c:	nop
   10002005d:	nop
   10002005e:	nop
   10002005f:	nop
   100020060:	nop
   100020061:	nop
   100020062:	nop
   100020063:	nop
   100020064:	nop
   100020065:	nop
   100020066:	nop
   100020067:	nop
   100020068:	nop
   100020069:	nop
   10002006a:	nop
   10002006b:	nop
   10002006c:	nop
   10002006d:	nop
   10002006e:	nop
   10002006f:	nop
   100020070:	lea    rcx,[rip+0x9819]        # 0x100029890
   100020077:	jmp    0x10000e3f0
   10002007c:	nop
   10002007d:	nop
   10002007e:	nop
   10002007f:	nop
   100020080:	nop
   100020081:	nop
   100020082:	nop
   100020083:	nop
   100020084:	nop
   100020085:	nop
   100020086:	nop
   100020087:	nop
   100020088:	nop
   100020089:	nop
   10002008a:	nop
   10002008b:	nop
   10002008c:	nop
   10002008d:	nop
   10002008e:	nop
   10002008f:	nop
   100020090:	lea    rcx,[rip+0xd599]        # 0x10002d630
   100020097:	jmp    0x10000e560
   10002009c:	nop
   10002009d:	nop
   10002009e:	nop
   10002009f:	nop
   1000200a0:	nop
   1000200a1:	nop
   1000200a2:	nop
   1000200a3:	nop
   1000200a4:	nop
   1000200a5:	nop
   1000200a6:	nop
   1000200a7:	nop
   1000200a8:	nop
   1000200a9:	nop
   1000200aa:	nop
   1000200ab:	nop
   1000200ac:	nop
   1000200ad:	nop
   1000200ae:	nop
   1000200af:	nop
   1000200b0:	lea    rcx,[rip+0xd561]        # 0x10002d618
   1000200b7:	jmp    0x10000e470
   1000200bc:	nop
   1000200bd:	nop
   1000200be:	nop
   1000200bf:	nop
   1000200c0:	nop
   1000200c1:	nop
   1000200c2:	nop
   1000200c3:	nop
   1000200c4:	nop
   1000200c5:	nop
   1000200c6:	nop
   1000200c7:	nop
   1000200c8:	nop
   1000200c9:	nop
   1000200ca:	nop
   1000200cb:	nop
   1000200cc:	nop
   1000200cd:	nop
   1000200ce:	nop
   1000200cf:	nop
   1000200d0:	lea    rcx,[rip+0x97e9]        # 0x1000298c0
   1000200d7:	jmp    0x10000e470
   1000200dc:	nop
   1000200dd:	nop
   1000200de:	nop
   1000200df:	nop
   1000200e0:	nop
   1000200e1:	nop
   1000200e2:	nop
   1000200e3:	nop
   1000200e4:	nop
   1000200e5:	nop
   1000200e6:	nop
   1000200e7:	nop
   1000200e8:	nop
   1000200e9:	nop
   1000200ea:	nop
   1000200eb:	nop
   1000200ec:	nop
   1000200ed:	nop
   1000200ee:	nop
   1000200ef:	nop
   1000200f0:	lea    rcx,[rip+0x9819]        # 0x100029910
   1000200f7:	jmp    0x10000e5a0
   1000200fc:	nop
   1000200fd:	nop
   1000200fe:	nop
   1000200ff:	nop
   100020100:	nop
   100020101:	nop
   100020102:	nop
   100020103:	nop
   100020104:	nop
   100020105:	nop
   100020106:	nop
   100020107:	nop
   100020108:	nop
   100020109:	nop
   10002010a:	nop
   10002010b:	nop
   10002010c:	nop
   10002010d:	nop
   10002010e:	nop
   10002010f:	nop
   100020110:	lea    rcx,[rip+0x8fb9]        # 0x1000290d0
   100020117:	jmp    0x10000e4a0
   10002011c:	nop
   10002011d:	nop
   10002011e:	nop
   10002011f:	nop
   100020120:	nop
   100020121:	nop
   100020122:	nop
   100020123:	nop
   100020124:	nop
   100020125:	nop
   100020126:	nop
   100020127:	nop
   100020128:	nop
   100020129:	nop
   10002012a:	nop
   10002012b:	nop
   10002012c:	nop
   10002012d:	nop
   10002012e:	nop
   10002012f:	nop
   100020130:	lea    rcx,[rip+0x9771]        # 0x1000298a8
   100020137:	jmp    0x10000e430
   10002013c:	nop
   10002013d:	nop
   10002013e:	nop
   10002013f:	nop
   100020140:	nop
   100020141:	nop
   100020142:	nop
   100020143:	nop
   100020144:	nop
   100020145:	nop
   100020146:	nop
   100020147:	nop
   100020148:	nop
   100020149:	nop
   10002014a:	nop
   10002014b:	nop
   10002014c:	nop
   10002014d:	nop
   10002014e:	nop
   10002014f:	nop
   100020150:	lea    rcx,[rip+0x9789]        # 0x1000298e0
   100020157:	jmp    0x10000e4e0
   10002015c:	nop
   10002015d:	nop
   10002015e:	nop
   10002015f:	nop
   100020160:	nop
   100020161:	nop
   100020162:	nop
   100020163:	nop
   100020164:	nop
   100020165:	nop
   100020166:	nop
   100020167:	nop
   100020168:	nop
   100020169:	nop
   10002016a:	nop
   10002016b:	nop
   10002016c:	nop
   10002016d:	nop
   10002016e:	nop
   10002016f:	nop
   100020170:	lea    rcx,[rip+0x9701]        # 0x100029878
   100020177:	jmp    0x10000e3c0
   10002017c:	nop
   10002017d:	nop
   10002017e:	nop
   10002017f:	nop
   100020180:	nop
   100020181:	nop
   100020182:	nop
   100020183:	nop
   100020184:	nop
   100020185:	nop
   100020186:	nop
   100020187:	nop
   100020188:	nop
   100020189:	nop
   10002018a:	nop
   10002018b:	nop
   10002018c:	nop
   10002018d:	nop
   10002018e:	nop
   10002018f:	nop
   100020190:	lea    rcx,[rip+0x9761]        # 0x1000298f8
   100020197:	jmp    0x10000e520
   10002019c:	nop
   10002019d:	nop
   10002019e:	nop
   10002019f:	nop
   1000201a0:	nop
   1000201a1:	nop
   1000201a2:	nop
   1000201a3:	nop
   1000201a4:	nop
   1000201a5:	nop
   1000201a6:	nop
   1000201a7:	nop
   1000201a8:	nop
   1000201a9:	nop
   1000201aa:	nop
   1000201ab:	nop
   1000201ac:	nop
   1000201ad:	nop
   1000201ae:	nop
   1000201af:	nop
   1000201b0:	lea    rcx,[rip+0xd499]        # 0x10002d650
   1000201b7:	rex.W jmp QWORD PTR [rip+0xfffffffffffe12f2]        # 0x1000014b0
   1000201be:	nop
   1000201bf:	nop
   1000201c0:	nop
   1000201c1:	nop
   1000201c2:	nop
   1000201c3:	nop
   1000201c4:	nop
   1000201c5:	nop
   1000201c6:	nop
   1000201c7:	nop
   1000201c8:	nop
   1000201c9:	nop
   1000201ca:	nop
   1000201cb:	nop
   1000201cc:	nop
   1000201cd:	nop
   1000201ce:	nop
   1000201cf:	nop
   1000201d0:	lea    rcx,[rip+0xcd79]        # 0x10002cf50
   1000201d7:	rex.W jmp QWORD PTR [rip+0xfffffffffffe1a82]        # 0x100001c60
   1000201de:	nop
   1000201df:	nop
   1000201e0:	nop
   1000201e1:	nop
   1000201e2:	nop
   1000201e3:	nop
   1000201e4:	nop
   1000201e5:	nop
   1000201e6:	nop
   1000201e7:	nop
   1000201e8:	nop
   1000201e9:	nop
   1000201ea:	nop
   1000201eb:	nop
   1000201ec:	nop
   1000201ed:	nop
   1000201ee:	nop
   1000201ef:	nop
   1000201f0:	lea    rcx,[rdx+0x60]
   1000201f4:	jmp    0x10000e5e0
   1000201f9:	nop
   1000201fa:	nop
   1000201fb:	nop
   1000201fc:	nop
   1000201fd:	nop
   1000201fe:	nop
   1000201ff:	nop
   100020200:	lea    rcx,[rdx+0x150]
   100020207:	rex.W jmp QWORD PTR [rip+0xfffffffffffe137a]        # 0x100001588
   10002020e:	nop
   10002020f:	nop
   100020210:	nop
   100020211:	nop
   100020212:	nop
   100020213:	nop
   100020214:	nop
   100020215:	nop
   100020216:	nop
   100020217:	nop
   100020218:	nop
   100020219:	nop
   10002021a:	nop
   10002021b:	nop
   10002021c:	nop
   10002021d:	nop
   10002021e:	nop
   10002021f:	nop
   100020220:	mov    rcx,QWORD PTR [rdx+0x50]
   100020224:	add    rcx,0x30
   100020228:	jmp    0x10000fc30
   10002022d:	nop
   10002022e:	nop
   10002022f:	nop
   100020230:	mov    rcx,QWORD PTR [rdx+0x50]
   100020234:	add    rcx,0x38
   100020238:	jmp    0x10000fc30
   10002023d:	nop
   10002023e:	nop
   10002023f:	nop
   100020240:	mov    rcx,QWORD PTR [rdx+0x50]
   100020244:	add    rcx,0x40
   100020248:	jmp    0x10000fc30
   10002024d:	nop
   10002024e:	nop
   10002024f:	nop
   100020250:	mov    rcx,QWORD PTR [rdx+0x50]
   100020254:	add    rcx,0x68
   100020258:	jmp    0x10000fc50
   10002025d:	nop
   10002025e:	nop
   10002025f:	nop
   100020260:	mov    rcx,QWORD PTR [rdx+0x58]
   100020264:	add    rcx,0x28
   100020268:	jmp    0x10000fc30
   10002026d:	nop
   10002026e:	nop
   10002026f:	nop
   100020270:	mov    rcx,QWORD PTR [rdx+0x58]
   100020274:	add    rcx,0x38
   100020278:	jmp    0x10000fc30
   10002027d:	nop
   10002027e:	nop
   10002027f:	nop
   100020280:	nop
   100020281:	nop
   100020282:	nop
   100020283:	nop
   100020284:	nop
   100020285:	nop
   100020286:	nop
   100020287:	nop
   100020288:	nop
   100020289:	nop
   10002028a:	nop
   10002028b:	nop
   10002028c:	nop
   10002028d:	nop
   10002028e:	nop
   10002028f:	nop
   100020290:	lea    rcx,[rip+0x96c9]        # 0x100029960
   100020297:	add    rcx,0x30
   10002029b:	jmp    0x10000fc30
   1000202a0:	lea    rcx,[rip+0x96b9]        # 0x100029960
   1000202a7:	add    rcx,0x38
   1000202ab:	jmp    0x10000fc30
   1000202b0:	lea    rcx,[rip+0x96a9]        # 0x100029960
   1000202b7:	add    rcx,0x40
   1000202bb:	jmp    0x10000fc30
   1000202c0:	lea    rcx,[rip+0x9699]        # 0x100029960
   1000202c7:	add    rcx,0x68
   1000202cb:	jmp    0x10000fc50
   1000202d0:	nop
   1000202d1:	nop
   1000202d2:	nop
   1000202d3:	nop
   1000202d4:	nop
   1000202d5:	nop
   1000202d6:	nop
   1000202d7:	nop
   1000202d8:	nop
   1000202d9:	nop
   1000202da:	nop
   1000202db:	nop
   1000202dc:	nop
   1000202dd:	nop
   1000202de:	nop
   1000202df:	nop
   1000202e0:	lea    rcx,[rip+0x96f9]        # 0x1000299e0
   1000202e7:	add    rcx,0x30
   1000202eb:	jmp    0x10000fc30
   1000202f0:	lea    rcx,[rip+0x96e9]        # 0x1000299e0
   1000202f7:	add    rcx,0x38
   1000202fb:	jmp    0x10000fc30
   100020300:	lea    rcx,[rip+0x96d9]        # 0x1000299e0
   100020307:	add    rcx,0x40
   10002030b:	jmp    0x10000fc30
   100020310:	lea    rcx,[rip+0x96c9]        # 0x1000299e0
   100020317:	add    rcx,0x68
   10002031b:	jmp    0x10000fc50
   100020320:	nop
   100020321:	nop
   100020322:	nop
   100020323:	nop
   100020324:	nop
   100020325:	nop
   100020326:	nop
   100020327:	nop
   100020328:	nop
   100020329:	nop
   10002032a:	nop
   10002032b:	nop
   10002032c:	nop
   10002032d:	nop
   10002032e:	nop
   10002032f:	nop
   100020330:	lea    rcx,[rdx+0x40]
   100020334:	jmp    0x10000fc70
   100020339:	nop
   10002033a:	nop
   10002033b:	nop
   10002033c:	nop
   10002033d:	nop
   10002033e:	nop
   10002033f:	nop
   100020340:	lea    rcx,[rdx+0x48]
   100020344:	jmp    0x10000fc70
   100020349:	nop
   10002034a:	nop
   10002034b:	nop
   10002034c:	nop
   10002034d:	nop
   10002034e:	nop
   10002034f:	nop
   100020350:	mov    rcx,QWORD PTR [rdx+0x40]
   100020354:	add    rcx,0x18
   100020358:	jmp    0x1000120b0
   10002035d:	nop
   10002035e:	nop
   10002035f:	nop
   100020360:	nop
   100020361:	nop
   100020362:	nop
   100020363:	nop
   100020364:	nop
   100020365:	nop
   100020366:	nop
   100020367:	nop
   100020368:	nop
   100020369:	nop
   10002036a:	nop
   10002036b:	nop
   10002036c:	nop
   10002036d:	nop
   10002036e:	nop
   10002036f:	nop
   100020370:	mov    rcx,QWORD PTR [rdx+0x40]
   100020374:	add    rcx,0x18
   100020378:	jmp    0x1000120b0
   10002037d:	nop
   10002037e:	nop
   10002037f:	nop
   100020380:	nop
   100020381:	nop
   100020382:	nop
   100020383:	nop
   100020384:	nop
   100020385:	nop
   100020386:	nop
   100020387:	nop
   100020388:	nop
   100020389:	nop
   10002038a:	nop
   10002038b:	nop
   10002038c:	nop
   10002038d:	nop
   10002038e:	nop
   10002038f:	nop
   100020390:	mov    rcx,QWORD PTR [rdx+0x40]
   100020394:	jmp    0x100006be0
   100020399:	nop
   10002039a:	nop
   10002039b:	nop
   10002039c:	nop
   10002039d:	nop
   10002039e:	nop
   10002039f:	nop
   1000203a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1000203a4:	add    rcx,0x10
   1000203a8:	jmp    0x100012140
   1000203ad:	nop
   1000203ae:	nop
   1000203af:	nop
   1000203b0:	mov    rcx,QWORD PTR [rdx+0x48]
   1000203b4:	add    rcx,0x18
   1000203b8:	jmp    0x1000120b0
   1000203bd:	nop
   1000203be:	nop
   1000203bf:	nop
   1000203c0:	nop
   1000203c1:	nop
   1000203c2:	nop
   1000203c3:	nop
   1000203c4:	nop
   1000203c5:	nop
   1000203c6:	nop
   1000203c7:	nop
   1000203c8:	nop
   1000203c9:	nop
   1000203ca:	nop
   1000203cb:	nop
   1000203cc:	nop
   1000203cd:	nop
   1000203ce:	nop
   1000203cf:	nop
   1000203d0:	lea    rcx,[rdx+0x60]
   1000203d4:	jmp    0x10000fc70
   1000203d9:	nop
   1000203da:	nop
   1000203db:	nop
   1000203dc:	nop
   1000203dd:	nop
   1000203de:	nop
   1000203df:	nop
   1000203e0:	lea    rcx,[rdx+0x30]
   1000203e4:	jmp    0x10000fc70
   1000203e9:	nop
   1000203ea:	nop
   1000203eb:	nop
   1000203ec:	nop
   1000203ed:	nop
   1000203ee:	nop
   1000203ef:	nop
   1000203f0:	lea    rcx,[rdx+0x68]
   1000203f4:	jmp    0x10000fc70
   1000203f9:	nop
   1000203fa:	nop
   1000203fb:	nop
   1000203fc:	nop
   1000203fd:	nop
   1000203fe:	nop
   1000203ff:	nop
   100020400:	lea    rcx,[rdx+0x30]
   100020404:	jmp    0x10000fc70
   100020409:	nop
   10002040a:	nop
   10002040b:	nop
   10002040c:	nop
   10002040d:	nop
   10002040e:	nop
   10002040f:	nop
   100020410:	lea    rcx,[rdx+0x68]
   100020414:	jmp    0x10000fc70
   100020419:	nop
   10002041a:	nop
   10002041b:	nop
   10002041c:	nop
   10002041d:	nop
   10002041e:	nop
   10002041f:	nop
   100020420:	lea    rcx,[rdx+0x38]
   100020424:	jmp    0x10000fc70
   100020429:	nop
   10002042a:	nop
   10002042b:	nop
   10002042c:	nop
   10002042d:	nop
   10002042e:	nop
   10002042f:	nop
   100020430:	lea    rcx,[rdx+0x30]
   100020434:	jmp    0x10000fc70
   100020439:	nop
   10002043a:	nop
   10002043b:	nop
   10002043c:	nop
   10002043d:	nop
   10002043e:	nop
   10002043f:	nop
   100020440:	lea    rcx,[rdx+0x68]
   100020444:	jmp    0x10000fc70
   100020449:	nop
   10002044a:	nop
   10002044b:	nop
   10002044c:	nop
   10002044d:	nop
   10002044e:	nop
   10002044f:	nop
   100020450:	lea    rcx,[rdx+0x68]
   100020454:	jmp    0x10000fc70
   100020459:	nop
   10002045a:	nop
   10002045b:	nop
   10002045c:	nop
   10002045d:	nop
   10002045e:	nop
   10002045f:	nop
   100020460:	lea    rcx,[rdx+0x68]
   100020464:	jmp    0x10000fc70
   100020469:	nop
   10002046a:	nop
   10002046b:	nop
   10002046c:	nop
   10002046d:	nop
   10002046e:	nop
   10002046f:	nop
   100020470:	lea    rcx,[rdx+0x68]
   100020474:	jmp    0x10000fc70
   100020479:	nop
   10002047a:	nop
   10002047b:	nop
   10002047c:	nop
   10002047d:	nop
   10002047e:	nop
   10002047f:	nop
   100020480:	lea    rcx,[rdx+0x38]
   100020484:	jmp    0x10000fc70
   100020489:	nop
   10002048a:	nop
   10002048b:	nop
   10002048c:	nop
   10002048d:	nop
   10002048e:	nop
   10002048f:	nop
   100020490:	lea    rcx,[rdx+0x40]
   100020494:	jmp    0x10000fc70
   100020499:	nop
   10002049a:	nop
   10002049b:	nop
   10002049c:	nop
   10002049d:	nop
   10002049e:	nop
   10002049f:	nop
   1000204a0:	lea    rcx,[rdx+0x30]
   1000204a4:	jmp    0x10000fc70
   1000204a9:	nop
   1000204aa:	nop
   1000204ab:	nop
   1000204ac:	nop
   1000204ad:	nop
   1000204ae:	nop
   1000204af:	nop
   1000204b0:	lea    rcx,[rdx+0x60]
   1000204b4:	jmp    0x10000fc70
   1000204b9:	nop
   1000204ba:	nop
   1000204bb:	nop
   1000204bc:	nop
   1000204bd:	nop
   1000204be:	nop
   1000204bf:	nop
   1000204c0:	lea    rcx,[rdx+0x30]
   1000204c4:	jmp    0x10000fc70
   1000204c9:	nop
   1000204ca:	nop
   1000204cb:	nop
   1000204cc:	nop
   1000204cd:	nop
   1000204ce:	nop
   1000204cf:	nop
   1000204d0:	lea    rcx,[rdx+0x68]
   1000204d4:	jmp    0x10000fc70
   1000204d9:	nop
   1000204da:	nop
   1000204db:	nop
   1000204dc:	nop
   1000204dd:	nop
   1000204de:	nop
   1000204df:	nop
   1000204e0:	lea    rcx,[rdx+0x50]
   1000204e4:	jmp    0x100006be0
   1000204e9:	nop
   1000204ea:	nop
   1000204eb:	nop
   1000204ec:	nop
   1000204ed:	nop
   1000204ee:	nop
   1000204ef:	nop
   1000204f0:	lea    rcx,[rdx+0x50]
   1000204f4:	add    rcx,0x10
   1000204f8:	jmp    0x100012140
   1000204fd:	nop
   1000204fe:	nop
   1000204ff:	nop
   100020500:	lea    rcx,[rdx+0x50]
   100020504:	jmp    0x100011e90
   100020509:	nop
   10002050a:	nop
   10002050b:	nop
   10002050c:	nop
   10002050d:	nop
   10002050e:	nop
   10002050f:	nop
   100020510:	lea    rcx,[rdx+0x30]
   100020514:	jmp    0x10000fc70
   100020519:	nop
   10002051a:	nop
   10002051b:	nop
   10002051c:	nop
   10002051d:	nop
   10002051e:	nop
   10002051f:	nop
   100020520:	lea    rcx,[rdx+0x50]
   100020524:	jmp    0x100006be0
   100020529:	nop
   10002052a:	nop
   10002052b:	nop
   10002052c:	nop
   10002052d:	nop
   10002052e:	nop
   10002052f:	nop
   100020530:	lea    rcx,[rdx+0x50]
   100020534:	add    rcx,0x10
   100020538:	jmp    0x100012140
   10002053d:	nop
   10002053e:	nop
   10002053f:	nop
   100020540:	mov    rcx,QWORD PTR [rdx+0x40]
   100020544:	add    rcx,0x18
   100020548:	jmp    0x1000120b0
   10002054d:	nop
   10002054e:	nop
   10002054f:	nop
   100020550:	nop
   100020551:	nop
   100020552:	nop
   100020553:	nop
   100020554:	nop
   100020555:	nop
   100020556:	nop
   100020557:	nop
   100020558:	nop
   100020559:	nop
   10002055a:	nop
   10002055b:	nop
   10002055c:	nop
   10002055d:	nop
   10002055e:	nop
   10002055f:	nop
   100020560:	lea    rcx,[rdx+0x68]
   100020564:	jmp    0x10000fc70
   100020569:	nop
   10002056a:	nop
   10002056b:	nop
   10002056c:	nop
   10002056d:	nop
   10002056e:	nop
   10002056f:	nop
   100020570:	lea    rcx,[rdx+0x50]
   100020574:	jmp    0x100006be0
   100020579:	nop
   10002057a:	nop
   10002057b:	nop
   10002057c:	nop
   10002057d:	nop
   10002057e:	nop
   10002057f:	nop
   100020580:	lea    rcx,[rdx+0x50]
   100020584:	add    rcx,0x10
   100020588:	jmp    0x100012140
   10002058d:	nop
   10002058e:	nop
   10002058f:	nop
   100020590:	lea    rcx,[rdx+0x50]
   100020594:	jmp    0x100011e90
   100020599:	nop
   10002059a:	nop
   10002059b:	nop
   10002059c:	nop
   10002059d:	nop
   10002059e:	nop
   10002059f:	nop
   1000205a0:	lea    rcx,[rdx+0x30]
   1000205a4:	jmp    0x10000fc70
   1000205a9:	nop
   1000205aa:	nop
   1000205ab:	nop
   1000205ac:	nop
   1000205ad:	nop
   1000205ae:	nop
   1000205af:	nop
   1000205b0:	lea    rcx,[rdx+0x50]
   1000205b4:	jmp    0x100006be0
   1000205b9:	nop
   1000205ba:	nop
   1000205bb:	nop
   1000205bc:	nop
   1000205bd:	nop
   1000205be:	nop
   1000205bf:	nop
   1000205c0:	lea    rcx,[rdx+0x50]
   1000205c4:	add    rcx,0x10
   1000205c8:	jmp    0x100012140
   1000205cd:	nop
   1000205ce:	nop
   1000205cf:	nop
   1000205d0:	mov    rcx,QWORD PTR [rdx+0x40]
   1000205d4:	add    rcx,0x18
   1000205d8:	jmp    0x1000120b0
   1000205dd:	nop
   1000205de:	nop
   1000205df:	nop
   1000205e0:	nop
   1000205e1:	nop
   1000205e2:	nop
   1000205e3:	nop
   1000205e4:	nop
   1000205e5:	nop
   1000205e6:	nop
   1000205e7:	nop
   1000205e8:	nop
   1000205e9:	nop
   1000205ea:	nop
   1000205eb:	nop
   1000205ec:	nop
   1000205ed:	nop
   1000205ee:	nop
   1000205ef:	nop
   1000205f0:	lea    rcx,[rdx+0x68]
   1000205f4:	jmp    0x10000fc70
   1000205f9:	nop
   1000205fa:	nop
   1000205fb:	nop
   1000205fc:	nop
   1000205fd:	nop
   1000205fe:	nop
   1000205ff:	nop
   100020600:	lea    rcx,[rdx+0x30]
   100020604:	jmp    0x10000fc70
   100020609:	nop
   10002060a:	nop
   10002060b:	nop
   10002060c:	nop
   10002060d:	nop
   10002060e:	nop
   10002060f:	nop
   100020610:	lea    rcx,[rdx+0x48]
   100020614:	jmp    0x10000fc70
   100020619:	nop
   10002061a:	nop
   10002061b:	nop
   10002061c:	nop
   10002061d:	nop
   10002061e:	nop
   10002061f:	nop
   100020620:	lea    rcx,[rdx+0xb8]
   100020627:	jmp    0x100005b10
   10002062c:	nop
   10002062d:	nop
   10002062e:	nop
   10002062f:	nop
   100020630:	lea    rcx,[rdx+0x50]
   100020634:	jmp    0x100002030
   100020639:	nop
   10002063a:	nop
   10002063b:	nop
   10002063c:	nop
   10002063d:	nop
   10002063e:	nop
   10002063f:	nop
   100020640:	mov    QWORD PTR [rsp+0x10],rdx
   100020645:	push   rbp
   100020646:	sub    rsp,0x20
   10002064a:	mov    rbp,rdx
   10002064d:	lea    rdx,[rbp+0x38]
   100020651:	lea    rcx,[rbp+0x28]
   100020655:	call   QWORD PTR [rip+0xfffffffffffe15b5]        # 0x100001c10
   10002065b:	lea    rcx,[rbp+0x28]
   10002065f:	call   QWORD PTR [rip+0xfffffffffffe15b3]        # 0x100001c18
   100020665:	nop
   100020666:	lea    rax,[rip+0xffffffffffff1f5f]        # 0x1000125cc
   10002066d:	add    rsp,0x20
   100020671:	pop    rbp
   100020672:	ret    
   100020673:	nop
   100020674:	nop
   100020675:	nop
   100020676:	nop
   100020677:	nop
   100020678:	nop
   100020679:	nop
   10002067a:	nop
   10002067b:	nop
   10002067c:	nop
   10002067d:	nop
   10002067e:	nop
   10002067f:	nop
   100020680:	mov    QWORD PTR [rsp+0x10],rdx
   100020685:	push   rbp
   100020686:	sub    rsp,0x20
   10002068a:	mov    rbp,rdx
   10002068d:	lea    rax,[rip+0xffffffffffffffd2]        # 0x100020666
   100020694:	add    rsp,0x20
   100020698:	pop    rbp
   100020699:	ret    
   10002069a:	nop
   10002069b:	nop
   10002069c:	nop
   10002069d:	nop
   10002069e:	nop
   10002069f:	nop
   1000206a0:	lea    rcx,[rdx+0x30]
   1000206a4:	jmp    0x100014ed0
   1000206a9:	nop
   1000206aa:	nop
   1000206ab:	nop
   1000206ac:	nop
   1000206ad:	nop
   1000206ae:	nop
   1000206af:	nop
   1000206b0:	lea    rcx,[rdx+0x30]
   1000206b4:	jmp    0x100014ef0
   1000206b9:	nop
   1000206ba:	nop
   1000206bb:	nop
   1000206bc:	nop
   1000206bd:	nop
   1000206be:	nop
   1000206bf:	nop
   1000206c0:	lea    rcx,[rdx+0xa8]
   1000206c7:	jmp    0x100005b10
   1000206cc:	nop
   1000206cd:	nop
   1000206ce:	nop
   1000206cf:	nop
   1000206d0:	lea    rcx,[rdx+0x68]
   1000206d4:	jmp    0x100002030
   1000206d9:	nop
   1000206da:	nop
   1000206db:	nop
   1000206dc:	nop
   1000206dd:	nop
   1000206de:	nop
   1000206df:	nop
   1000206e0:	mov    QWORD PTR [rsp+0x10],rdx
   1000206e5:	push   rbp
   1000206e6:	sub    rsp,0x20
   1000206ea:	mov    rbp,rdx
   1000206ed:	lea    rdx,[rbp+0x50]
   1000206f1:	lea    rcx,[rbp+0x40]
   1000206f5:	call   QWORD PTR [rip+0xfffffffffffe1515]        # 0x100001c10
   1000206fb:	lea    rcx,[rbp+0x40]
   1000206ff:	call   QWORD PTR [rip+0xfffffffffffe1513]        # 0x100001c18
   100020705:	nop
   100020706:	lea    rax,[rip+0xffffffffffff4953]        # 0x100015060
   10002070d:	add    rsp,0x20
   100020711:	pop    rbp
   100020712:	ret    
   100020713:	nop
   100020714:	nop
   100020715:	nop
   100020716:	nop
   100020717:	nop
   100020718:	nop
   100020719:	nop
   10002071a:	nop
   10002071b:	nop
   10002071c:	nop
   10002071d:	nop
   10002071e:	nop
   10002071f:	nop
   100020720:	mov    QWORD PTR [rsp+0x10],rdx
   100020725:	push   rbp
   100020726:	sub    rsp,0x20
   10002072a:	mov    rbp,rdx
   10002072d:	lea    rax,[rip+0xffffffffffffffd2]        # 0x100020706
   100020734:	add    rsp,0x20
   100020738:	pop    rbp
   100020739:	ret    
   10002073a:	nop
   10002073b:	nop
   10002073c:	nop
   10002073d:	nop
   10002073e:	nop
   10002073f:	nop
   100020740:	lea    rcx,[rdx+0x30]
   100020744:	jmp    0x100014ed0
   100020749:	nop
   10002074a:	nop
   10002074b:	nop
   10002074c:	nop
   10002074d:	nop
   10002074e:	nop
   10002074f:	nop
   100020750:	lea    rcx,[rdx+0xd8]
   100020757:	jmp    0x100005b10
   10002075c:	nop
   10002075d:	nop
   10002075e:	nop
   10002075f:	nop
   100020760:	lea    rcx,[rdx+0x120]
   100020767:	jmp    0x100002030
   10002076c:	nop
   10002076d:	nop
   10002076e:	nop
   10002076f:	nop
   100020770:	lea    rcx,[rdx+0xa0]
   100020777:	jmp    0x100014ed0
   10002077c:	nop
   10002077d:	nop
   10002077e:	nop
   10002077f:	nop
   100020780:	lea    rcx,[rdx+0xa0]
   100020787:	jmp    0x100014ef0
   10002078c:	nop
   10002078d:	nop
   10002078e:	nop
   10002078f:	nop
   100020790:	lea    rcx,[rdx+0xa0]
   100020797:	jmp    0x100014ed0
   10002079c:	nop
   10002079d:	nop
   10002079e:	nop
   10002079f:	nop
   1000207a0:	mov    QWORD PTR [rsp+0x10],rdx
   1000207a5:	push   rbp
   1000207a6:	sub    rsp,0x70
   1000207aa:	lea    rbp,[rdx+0x70]
   1000207ae:	lea    rdx,[rbp+0xd0]
   1000207b5:	lea    rcx,[rbp+0x90]
   1000207bc:	call   QWORD PTR [rip+0xfffffffffffe144e]        # 0x100001c10
   1000207c2:	lea    rcx,[rbp+0x90]
   1000207c9:	call   QWORD PTR [rip+0xfffffffffffe1449]        # 0x100001c18
   1000207cf:	nop
   1000207d0:	lea    rax,[rip+0xffffffffffff26eb]        # 0x100012ec2
   1000207d7:	add    rsp,0x70
   1000207db:	pop    rbp
   1000207dc:	ret    
   1000207dd:	nop
   1000207de:	nop
   1000207df:	nop
   1000207e0:	mov    QWORD PTR [rsp+0x10],rdx
   1000207e5:	push   rbp
   1000207e6:	sub    rsp,0x70
   1000207ea:	lea    rbp,[rdx+0x70]
   1000207ee:	lea    rax,[rip+0xffffffffffffffdb]        # 0x1000207d0
   1000207f5:	add    rsp,0x70
   1000207f9:	pop    rbp
   1000207fa:	ret    
   1000207fb:	nop
   1000207fc:	nop
   1000207fd:	nop
   1000207fe:	nop
   1000207ff:	nop
   100020800:	nop
   100020801:	nop
   100020802:	nop
   100020803:	nop
   100020804:	nop
   100020805:	nop
   100020806:	nop
   100020807:	nop
   100020808:	nop
   100020809:	nop
   10002080a:	nop
   10002080b:	nop
   10002080c:	nop
   10002080d:	nop
   10002080e:	nop
   10002080f:	nop
   100020810:	lea    rcx,[rdx+0xc8]
   100020817:	jmp    0x100002030
   10002081c:	nop
   10002081d:	nop
   10002081e:	nop
   10002081f:	nop
   100020820:	lea    rcx,[rdx+0x40]
   100020824:	jmp    0x100014780
   100020829:	nop
   10002082a:	nop
   10002082b:	nop
   10002082c:	nop
   10002082d:	nop
   10002082e:	nop
   10002082f:	nop
   100020830:	lea    rcx,[rdx+0x40]
   100020834:	jmp    0x100012470
   100020839:	nop
   10002083a:	nop
   10002083b:	nop
   10002083c:	nop
   10002083d:	nop
   10002083e:	nop
   10002083f:	nop
   100020840:	lea    rcx,[rdx+0xa8]
   100020847:	jmp    0x100002030
   10002084c:	nop
   10002084d:	nop
   10002084e:	nop
   10002084f:	nop
   100020850:	mov    QWORD PTR [rsp+0x10],rdx
   100020855:	push   rbp
   100020856:	sub    rsp,0x20
   10002085a:	mov    rbp,rdx
   10002085d:	lea    rdx,[rbp+0x68]
   100020861:	lea    rcx,[rbp+0x80]
   100020868:	call   QWORD PTR [rip+0xfffffffffffe13a2]        # 0x100001c10
   10002086e:	nop
   10002086f:	mov    ecx,DWORD PTR [rbp+0x68]
   100020872:	mov    eax,0x51eb851f
   100020877:	imul   ecx
   100020879:	sar    edx,0x5
   10002087c:	mov    eax,edx
   10002087e:	shr    eax,0x1f
   100020881:	add    edx,eax
   100020883:	cmp    edx,0x1d
   100020886:	je     0x100020894
   100020888:	mov    DWORD PTR [rbp+0x20],0x1
   10002088f:	jmp    0x100020922
   100020894:	mov    DWORD PTR [rbp+0x20],0x0
   10002089b:	lea    eax,[rcx-0xb54]
   1000208a1:	cmp    eax,0x5
   1000208a4:	jne    0x1000208ec
   1000208a6:	mov    rax,QWORD PTR [rip+0x8813]        # 0x1000290c0
   1000208ad:	mov    QWORD PTR [rbp+0x30],rax
   1000208b1:	mov    rax,QWORD PTR gs:0x30
   1000208ba:	mov    rcx,QWORD PTR [rbp+0x30]
   1000208be:	add    rax,rcx
   1000208c1:	cmp    rcx,0x1480
   1000208c8:	jge    0x1000208d0
   1000208ca:	call   QWORD PTR [rip+0xfffffffffffe0850]        # 0x100001120
   1000208d0:	mov    rcx,QWORD PTR [rax+0x50]
   1000208d4:	movsx  r8d,WORD PTR [rcx+0x44]
   1000208d9:	lea    rdx,[rip+0x80]        # 0x100020960
   1000208e0:	mov    ecx,0x439c
   1000208e5:	call   0x1000182d0
   1000208ea:	jmp    0x100020922
   1000208ec:	mov    r9d,DWORD PTR [rbp+0x74]
   1000208f0:	lea    r8,[rip+0x49]        # 0x100020940
   1000208f7:	mov    edx,0x100
   1000208fc:	lea    rcx,[rbp+0x100]
   100020903:	call   QWORD PTR [rip+0xfffffffffffe10af]        # 0x1000019b8
   100020909:	lea    r8,[rbp+0x100]
   100020910:	lea    rdx,[rip+0x49]        # 0x100020960
   100020917:	mov    ecx,0x429d
   10002091c:	call   0x1000182d0
   100020921:	nop
   100020922:	lea    rcx,[rbp+0x80]
   100020929:	call   QWORD PTR [rip+0xfffffffffffe12e9]        # 0x100001c18
   10002092f:	nop
   100020930:	lea    rax,[rip+0xffffffffffff19a6]        # 0x1000122dd
   100020937:	add    rsp,0x20
   10002093b:	pop    rbp
   10002093c:	ret    
   10002093d:	nop
   10002093e:	nop
   10002093f:	nop
   100020940:	add    BYTE PTR [r8+0x0],r15b
   100020944:	movsxd eax,DWORD PTR [rax]
   100020946:	add    BYTE PTR gs:[rax+0x0],dh
   10002094a:	je     0x10002094c
   10002094c:	imul   eax,DWORD PTR [rax],0x6e006f
   100020952:	and    BYTE PTR [rax],al
   100020954:	xor    BYTE PTR [rax],al
   100020956:	js     0x100020958
   100020958:	and    eax,0x5800
   10002095d:	add    BYTE PTR [rax+0x65007290],dl
   100020963:	add    BYTE PTR [rbx+0x0],dh
   100020966:	outs   dx,DWORD PTR ds:[rsi]
   100020967:	add    BYTE PTR [rbp+0x0],dh
   10002096a:	jb     0x10002096c
   10002096c:	movsxd eax,DWORD PTR [rax]
   10002096e:	add    BYTE PTR gs:[rax],ah
   100020971:	add    BYTE PTR [rbp+0x0],ch
   100020974:	outs   dx,DWORD PTR ds:[rsi]
   100020975:	add    BYTE PTR [rsi+0x0],ch
   100020978:	imul   eax,DWORD PTR [rax],0x6f0074
   10002097e:	jb     0x100020980
   100020980:	add    BYTE PTR [rax],al
   100020982:	nop
   100020983:	nop
   100020984:	nop
   100020985:	nop
   100020986:	nop
   100020987:	nop
   100020988:	nop
   100020989:	nop
   10002098a:	nop
   10002098b:	nop
   10002098c:	nop
   10002098d:	nop
   10002098e:	nop
   10002098f:	nop
   100020990:	lea    rcx,[rdx+0x80]
   100020997:	rex.W jmp QWORD PTR [rip+0xfffffffffffe127a]        # 0x100001c18
   10002099e:	nop
   10002099f:	nop
   1000209a0:	mov    QWORD PTR [rsp+0x10],rdx
   1000209a5:	push   rbp
   1000209a6:	sub    rsp,0x20
   1000209aa:	mov    rbp,rdx
   1000209ad:	lea    rax,[rip+0xffffffffffffff7c]        # 0x100020930
   1000209b4:	add    rsp,0x20
   1000209b8:	pop    rbp
   1000209b9:	ret    
   1000209ba:	nop
   1000209bb:	nop
   1000209bc:	nop
   1000209bd:	nop
   1000209be:	nop
   1000209bf:	nop
   1000209c0:	lea    rcx,[rdx+0x40]
   1000209c4:	jmp    0x100014780
   1000209c9:	nop
   1000209ca:	nop
   1000209cb:	nop
   1000209cc:	nop
   1000209cd:	nop
   1000209ce:	nop
   1000209cf:	nop
   1000209d0:	mov    QWORD PTR [rsp+0x10],rdx
   1000209d5:	push   rbp
   1000209d6:	sub    rsp,0x20
   1000209da:	mov    rbp,rdx
   1000209dd:	lea    rdx,[rbp+0xe8]
   1000209e4:	lea    rcx,[rbp+0x90]
   1000209eb:	call   QWORD PTR [rip+0xfffffffffffe121f]        # 0x100001c10
   1000209f1:	lea    rcx,[rbp+0x90]
   1000209f8:	call   QWORD PTR [rip+0xfffffffffffe121a]        # 0x100001c18
   1000209fe:	nop
   1000209ff:	lea    rax,[rip+0xffffffffffff1994]        # 0x10001239a
   100020a06:	add    rsp,0x20
   100020a0a:	pop    rbp
   100020a0b:	ret    
   100020a0c:	nop
   100020a0d:	nop
   100020a0e:	nop
   100020a0f:	nop
   100020a10:	mov    QWORD PTR [rsp+0x10],rdx
   100020a15:	push   rbp
   100020a16:	sub    rsp,0x20
   100020a1a:	mov    rbp,rdx
   100020a1d:	lea    rax,[rip+0xffffffffffffffdb]        # 0x1000209ff
   100020a24:	add    rsp,0x20
   100020a28:	pop    rbp
   100020a29:	ret    
   100020a2a:	nop
   100020a2b:	nop
   100020a2c:	nop
   100020a2d:	nop
   100020a2e:	nop
   100020a2f:	nop
   100020a30:	lea    rcx,[rdx+0x80]
   100020a37:	jmp    0x100002030
   100020a3c:	nop
   100020a3d:	nop
   100020a3e:	nop
   100020a3f:	nop
   100020a40:	mov    QWORD PTR [rsp+0x10],rdx
   100020a45:	push   rbp
   100020a46:	sub    rsp,0x30
   100020a4a:	mov    rbp,rdx
   100020a4d:	lea    rdx,[rbp+0x68]
   100020a51:	lea    rcx,[rbp+0x58]
   100020a55:	call   QWORD PTR [rip+0xfffffffffffe11b5]        # 0x100001c10
   100020a5b:	lea    rcx,[rbp+0x58]
   100020a5f:	call   QWORD PTR [rip+0xfffffffffffe11b3]        # 0x100001c18
   100020a65:	nop
   100020a66:	lea    rax,[rip+0xfffffffffffe1833]        # 0x1000022a0
   100020a6d:	add    rsp,0x30
   100020a71:	pop    rbp
   100020a72:	ret    
   100020a73:	nop
   100020a74:	nop
   100020a75:	nop
   100020a76:	nop
   100020a77:	nop
   100020a78:	nop
   100020a79:	nop
   100020a7a:	nop
   100020a7b:	nop
   100020a7c:	nop
   100020a7d:	nop
   100020a7e:	nop
   100020a7f:	nop
   100020a80:	mov    QWORD PTR [rsp+0x10],rdx
   100020a85:	push   rbp
   100020a86:	sub    rsp,0x30
   100020a8a:	mov    rbp,rdx
   100020a8d:	lea    rax,[rip+0xffffffffffffffd2]        # 0x100020a66
   100020a94:	add    rsp,0x30
   100020a98:	pop    rbp
   100020a99:	ret    
   100020a9a:	nop
   100020a9b:	nop
   100020a9c:	nop
   100020a9d:	nop
   100020a9e:	nop
   100020a9f:	nop
   100020aa0:	lea    rcx,[rdx+0x70]
   100020aa4:	jmp    0x100014b30
   100020aa9:	nop
   100020aaa:	nop
   100020aab:	nop
   100020aac:	nop
   100020aad:	nop
   100020aae:	nop
   100020aaf:	nop
   100020ab0:	lea    rcx,[rdx+0x70]
   100020ab4:	jmp    0x100014b50
   100020ab9:	nop
   100020aba:	nop
   100020abb:	nop
   100020abc:	nop
   100020abd:	nop
   100020abe:	nop
   100020abf:	nop
   100020ac0:	lea    rcx,[rdx+0x70]
   100020ac4:	jmp    0x100014b00
   100020ac9:	nop
   100020aca:	nop
   100020acb:	nop
   100020acc:	nop
   100020acd:	nop
   100020ace:	nop
   100020acf:	nop
   100020ad0:	lea    rcx,[rdx+0x70]
   100020ad4:	jmp    0x100014b50
   100020ad9:	nop
   100020ada:	nop
   100020adb:	nop
   100020adc:	nop
   100020add:	nop
   100020ade:	nop
   100020adf:	nop
   100020ae0:	lea    rcx,[rdx+0x70]
   100020ae4:	jmp    0x100014b30
   100020ae9:	nop
   100020aea:	nop
   100020aeb:	nop
   100020aec:	nop
   100020aed:	nop
   100020aee:	nop
   100020aef:	nop
   100020af0:	lea    rcx,[rdx+0x70]
   100020af4:	jmp    0x100014b30
   100020af9:	nop
   100020afa:	nop
   100020afb:	nop
   100020afc:	nop
   100020afd:	nop
   100020afe:	nop
   100020aff:	nop
   100020b00:	lea    rcx,[rdx+0x70]
   100020b04:	jmp    0x100014b50
   100020b09:	nop
   100020b0a:	nop
   100020b0b:	nop
   100020b0c:	nop
   100020b0d:	nop
   100020b0e:	nop
   100020b0f:	nop
   100020b10:	lea    rcx,[rdx+0x70]
   100020b14:	jmp    0x100014b00
   100020b19:	nop
   100020b1a:	nop
   100020b1b:	nop
   100020b1c:	nop
   100020b1d:	nop
   100020b1e:	nop
   100020b1f:	nop
   100020b20:	lea    rcx,[rdx+0x70]
   100020b24:	jmp    0x100014b50
   100020b29:	nop
   100020b2a:	nop
   100020b2b:	nop
   100020b2c:	nop
   100020b2d:	nop
   100020b2e:	nop
   100020b2f:	nop
   100020b30:	lea    rcx,[rdx+0x70]
   100020b34:	jmp    0x100014b30
   100020b39:	nop
   100020b3a:	nop
   100020b3b:	nop
   100020b3c:	nop
   100020b3d:	nop
   100020b3e:	nop
   100020b3f:	nop
   100020b40:	mov    rcx,QWORD PTR [rdx+0x40]
   100020b44:	jmp    0x100014b30
   100020b49:	nop
   100020b4a:	nop
   100020b4b:	nop
   100020b4c:	nop
   100020b4d:	nop
   100020b4e:	nop
   100020b4f:	nop
   100020b50:	mov    rcx,QWORD PTR [rdx+0x20]
   100020b54:	jmp    0x1000147b0
   100020b59:	nop
   100020b5a:	nop
   100020b5b:	nop
   100020b5c:	nop
   100020b5d:	nop
   100020b5e:	nop
   100020b5f:	nop
   100020b60:	mov    rcx,QWORD PTR [rdx+0x20]
   100020b64:	jmp    0x100014ed0
   100020b69:	nop
   100020b6a:	nop
   100020b6b:	nop
   100020b6c:	nop
   100020b6d:	nop
   100020b6e:	nop
   100020b6f:	nop
   100020b70:	mov    rcx,QWORD PTR [rdx+0x40]
   100020b74:	jmp    0x100014b50
   100020b79:	nop
   100020b7a:	nop
   100020b7b:	nop
   100020b7c:	nop
   100020b7d:	nop
   100020b7e:	nop
   100020b7f:	nop
   100020b80:	mov    rcx,QWORD PTR [rdx+0x40]
   100020b84:	jmp    0x100014b30
   100020b89:	nop
   100020b8a:	nop
   100020b8b:	nop
   100020b8c:	nop
   100020b8d:	nop
   100020b8e:	nop
   100020b8f:	nop
   100020b90:	mov    rcx,QWORD PTR [rdx+0x40]
   100020b94:	jmp    0x100014780
   100020b99:	nop
   100020b9a:	nop
   100020b9b:	nop
   100020b9c:	nop
   100020b9d:	nop
   100020b9e:	nop
   100020b9f:	nop
   100020ba0:	lea    rcx,[rdx+0x50]
   100020ba4:	jmp    0x100014ed0
   100020ba9:	nop
   100020baa:	nop
   100020bab:	nop
   100020bac:	nop
   100020bad:	nop
   100020bae:	nop
   100020baf:	nop
   100020bb0:	push   rbp
   100020bb2:	mov    rbp,rdx
   100020bb5:	mov    eax,DWORD PTR [rip+0x17f65]        # 0x100038b20
   100020bbb:	and    eax,0xfffffffe
   100020bbe:	mov    DWORD PTR [rip+0x17f5c],eax        # 0x100038b20
   100020bc4:	pop    rbp
   100020bc5:	ret    
   100020bc6:	nop
   100020bc7:	nop
   100020bc8:	nop
   100020bc9:	nop
   100020bca:	nop
   100020bcb:	nop
   100020bcc:	nop
   100020bcd:	nop
   100020bce:	nop
   100020bcf:	nop
   100020bd0:	push   rbp
   100020bd2:	mov    rbp,rdx
   100020bd5:	mov    eax,DWORD PTR [rip+0x17f45]        # 0x100038b20
   100020bdb:	and    eax,0xfffffffd
   100020bde:	mov    DWORD PTR [rip+0x17f3c],eax        # 0x100038b20
   100020be4:	pop    rbp
   100020be5:	ret    
   100020be6:	nop
   100020be7:	nop
   100020be8:	nop
   100020be9:	nop
   100020bea:	nop
   100020beb:	nop
   100020bec:	nop
   100020bed:	nop
   100020bee:	nop
   100020bef:	nop
   100020bf0:	lea    rcx,[rdx+0x70]
   100020bf4:	jmp    0x1000147b0
   100020bf9:	nop
   100020bfa:	nop
   100020bfb:	nop
   100020bfc:	nop
   100020bfd:	nop
   100020bfe:	nop
   100020bff:	nop
   100020c00:	lea    rcx,[rdx+0x70]
   100020c04:	jmp    0x100014600
   100020c09:	nop
   100020c0a:	nop
   100020c0b:	nop
   100020c0c:	nop
   100020c0d:	nop
   100020c0e:	nop
   100020c0f:	nop
   100020c10:	lea    rcx,[rdx+0x70]
   100020c14:	jmp    0x1000147b0
   100020c19:	nop
   100020c1a:	nop
   100020c1b:	nop
   100020c1c:	nop
   100020c1d:	nop
   100020c1e:	nop
   100020c1f:	nop
   100020c20:	lea    rcx,[rdx+0x60]
   100020c24:	jmp    0x1000147b0
   100020c29:	nop
   100020c2a:	nop
   100020c2b:	nop
   100020c2c:	nop
   100020c2d:	nop
   100020c2e:	nop
   100020c2f:	nop
   100020c30:	lea    rcx,[rdx+0x60]
   100020c34:	jmp    0x100014600
   100020c39:	nop
   100020c3a:	nop
   100020c3b:	nop
   100020c3c:	nop
   100020c3d:	nop
   100020c3e:	nop
   100020c3f:	nop
   100020c40:	lea    rcx,[rdx+0x60]
   100020c44:	jmp    0x1000147b0
   100020c49:	nop
   100020c4a:	nop
   100020c4b:	nop
   100020c4c:	nop
   100020c4d:	nop
   100020c4e:	nop
   100020c4f:	nop
   100020c50:	push   rbp
   100020c52:	sub    rsp,0x20
   100020c56:	mov    rbp,rdx
   100020c59:	lea    rdx,[rbp+0x90]
   100020c60:	mov    rcx,QWORD PTR [rbp+0x80]
   100020c67:	call   0x1000180a0
   100020c6c:	add    rsp,0x20
   100020c70:	pop    rbp
   100020c71:	ret    
   100020c72:	nop
   100020c73:	nop
   100020c74:	nop
   100020c75:	nop
   100020c76:	nop
   100020c77:	nop
   100020c78:	nop
   100020c79:	nop
   100020c7a:	nop
   100020c7b:	nop
   100020c7c:	nop
   100020c7d:	nop
   100020c7e:	nop
   100020c7f:	nop
   100020c80:	push   rbp
   100020c82:	sub    rsp,0x30
   100020c86:	mov    rbp,rdx
   100020c89:	mov    BYTE PTR [rsp+0x20],0x6
   100020c8e:	mov    r9d,0x530
   100020c94:	lea    r8,[rip+0xfffffffffffe2b3d]        # 0x1000037d8
   100020c9b:	mov    rdx,QWORD PTR [rbp+0x50]
   100020c9f:	mov    rcx,QWORD PTR [rbp+0x58]
   100020ca3:	call   0x100018050
   100020ca8:	add    rsp,0x30
   100020cac:	pop    rbp
   100020cad:	ret    
   100020cae:	nop
   100020caf:	nop
   100020cb0:	nop
   100020cb1:	nop
   100020cb2:	nop
   100020cb3:	nop
   100020cb4:	nop
   100020cb5:	nop
   100020cb6:	nop
   100020cb7:	nop
   100020cb8:	nop
   100020cb9:	nop
   100020cba:	nop
   100020cbb:	nop
   100020cbc:	nop
   100020cbd:	nop
   100020cbe:	nop
   100020cbf:	nop
   100020cc0:	mov    rax,QWORD PTR [rip+0xfffffffffffe1221]        # 0x100001ee8
   100020cc7:	cmp    DWORD PTR [rax],0x0
   100020cca:	je     0x100020d06
   100020ccc:	mov    rcx,QWORD PTR [rip+0xfffffffffffe120d]        # 0x100001ee0
   100020cd3:	movabs rax,0x624dd2f1a9fbe77
   100020cdd:	mov    rcx,QWORD PTR [rcx]
   100020ce0:	imul   rcx,rcx,0x1388
   100020ce7:	add    rcx,0x3e7
   100020cee:	mul    rcx
   100020cf1:	sub    rcx,rdx
   100020cf4:	shr    rcx,1
   100020cf7:	add    rcx,rdx
   100020cfa:	shr    rcx,0x9
   100020cfe:	mov    QWORD PTR [rip+0x17e03],rcx        # 0x100038b08
   100020d05:	ret    
   100020d06:	mov    QWORD PTR [rip+0x17df7],0x2faf080        # 0x100038b08
   100020d11:	ret    
   100020d12:	nop
   100020d13:	nop
   100020d14:	nop
   100020d15:	nop
   100020d16:	nop
   100020d17:	nop
   100020d18:	nop
   100020d19:	nop
   100020d1a:	nop
   100020d1b:	nop
   100020d1c:	nop
   100020d1d:	nop
   100020d1e:	nop
   100020d1f:	nop
   100020d20:	sub    rsp,0x38
   100020d24:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020d2d:	lea    rcx,[rip+0xc21c]        # 0x10002cf50
   100020d34:	call   QWORD PTR [rip+0xfffffffffffe0f1e]        # 0x100001c58
   100020d3a:	nop
   100020d3b:	lea    rax,[rip+0x1e]        # 0x100020d60
   100020d42:	mov    QWORD PTR [rip+0xc207],rax        # 0x10002cf50
   100020d49:	lea    rcx,[rip+0xff0]        # 0x100021d40
   100020d50:	add    rsp,0x38
   100020d54:	jmp    0x1000194a0
   100020d59:	nop
   100020d5a:	nop
   100020d5b:	nop
   100020d5c:	nop
   100020d5d:	nop
   100020d5e:	nop
   100020d5f:	nop
   100020d60:	sbb    bl,dh
   100020d62:	add    DWORD PTR [rax],eax
   100020d64:	add    DWORD PTR [rax],eax
   100020d66:	add    BYTE PTR [rax],al
   100020d68:	and    al,0xf3
   100020d6a:	add    DWORD PTR [rax],eax
   100020d6c:	add    DWORD PTR [rax],eax
   100020d6e:	add    BYTE PTR [rax],al
   100020d70:	xor    bl,dh
   100020d72:	add    DWORD PTR [rax],eax
   100020d74:	add    DWORD PTR [rax],eax
   100020d76:	add    BYTE PTR [rax],al
   100020d78:	cmp    al,0xf3
   100020d7a:	add    DWORD PTR [rax],eax
   100020d7c:	add    DWORD PTR [rax],eax
   100020d7e:	add    BYTE PTR [rax],al
   100020d80:	rex.W
   100020d81:	repz add DWORD PTR [rax],eax
   100020d84:	add    DWORD PTR [rax],eax
   100020d86:	add    BYTE PTR [rax],al
   100020d88:	push   rsp
   100020d89:	repz add DWORD PTR [rax],eax
   100020d8c:	add    DWORD PTR [rax],eax
   100020d8e:	add    BYTE PTR [rax],al
   100020d90:	(bad)  
   100020d91:	repz add DWORD PTR [rax],eax
   100020d94:	add    DWORD PTR [rax],eax
   100020d96:	add    BYTE PTR [rax],al
   100020d98:	ins    BYTE PTR es:[rdi],dx
   100020d99:	repz add DWORD PTR [rax],eax
   100020d9c:	add    DWORD PTR [rax],eax
   100020d9e:	add    BYTE PTR [rax],al
   100020da0:	js     0x100020d95
   100020da2:	add    DWORD PTR [rax],eax
   100020da4:	add    DWORD PTR [rax],eax
   100020da6:	add    BYTE PTR [rax],al
   100020da8:	test   bl,dh
   100020daa:	add    DWORD PTR [rax],eax
   100020dac:	add    DWORD PTR [rax],eax
   100020dae:	add    BYTE PTR [rax],al
   100020db0:	nop
   100020db1:	repz add DWORD PTR [rax],eax
   100020db4:	add    DWORD PTR [rax],eax
   100020db6:	add    BYTE PTR [rax],al
   100020db8:	add    BYTE PTR [rax+rax*1+0x0],ch
   100020dbc:	add    DWORD PTR [rax],eax
   100020dbe:	add    BYTE PTR [rax],al
   100020dc0:	pushf  
   100020dc1:	repz add DWORD PTR [rax],eax
   100020dc4:	add    DWORD PTR [rax],eax
   100020dc6:	add    BYTE PTR [rax],al
   100020dc8:	clc    
   100020dc9:	icebp  
   100020dca:	add    DWORD PTR [rax],eax
   100020dcc:	add    DWORD PTR [rax],eax
   100020dce:	add    BYTE PTR [rax],al
   100020dd0:	add    al,0xf2
   100020dd2:	add    DWORD PTR [rax],eax
   100020dd4:	add    DWORD PTR [rax],eax
   100020dd6:	add    BYTE PTR [rax],al
   100020dd8:	nop
   100020dd9:	nop
   100020dda:	nop
   100020ddb:	nop
   100020ddc:	nop
   100020ddd:	nop
   100020dde:	nop
   100020ddf:	nop
   100020de0:	sub    rsp,0x38
   100020de4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020ded:	mov    rax,QWORD PTR [rip+0xfffffffffffe0b14]        # 0x100001908
   100020df4:	mov    QWORD PTR [rip+0xc7fd],rax        # 0x10002d5f8
   100020dfb:	lea    rcx,[rip+0xf6e]        # 0x100021d70
   100020e02:	add    rsp,0x38
   100020e06:	jmp    0x1000194a0
   100020e0b:	nop
   100020e0c:	nop
   100020e0d:	nop
   100020e0e:	nop
   100020e0f:	nop
   100020e10:	nop
   100020e11:	nop
   100020e12:	nop
   100020e13:	nop
   100020e14:	nop
   100020e15:	nop
   100020e16:	nop
   100020e17:	nop
   100020e18:	nop
   100020e19:	nop
   100020e1a:	nop
   100020e1b:	nop
   100020e1c:	nop
   100020e1d:	nop
   100020e1e:	nop
   100020e1f:	nop
   100020e20:	sub    rsp,0x38
   100020e24:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020e2d:	mov    rax,QWORD PTR [rip+0xfffffffffffe0acc]        # 0x100001900
   100020e34:	mov    QWORD PTR [rip+0xc7d5],rax        # 0x10002d610
   100020e3b:	lea    rcx,[rip+0xf7e]        # 0x100021dc0
   100020e42:	add    rsp,0x38
   100020e46:	jmp    0x1000194a0
   100020e4b:	nop
   100020e4c:	nop
   100020e4d:	nop
   100020e4e:	nop
   100020e4f:	nop
   100020e50:	nop
   100020e51:	nop
   100020e52:	nop
   100020e53:	nop
   100020e54:	nop
   100020e55:	nop
   100020e56:	nop
   100020e57:	nop
   100020e58:	nop
   100020e59:	nop
   100020e5a:	nop
   100020e5b:	nop
   100020e5c:	nop
   100020e5d:	nop
   100020e5e:	nop
   100020e5f:	nop
   100020e60:	sub    rsp,0x38
   100020e64:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020e6d:	lea    rcx,[rip+0xf9c]        # 0x100021e10
   100020e74:	add    rsp,0x38
   100020e78:	jmp    0x1000194a0
   100020e7d:	nop
   100020e7e:	nop
   100020e7f:	nop
   100020e80:	nop
   100020e81:	nop
   100020e82:	nop
   100020e83:	nop
   100020e84:	nop
   100020e85:	nop
   100020e86:	nop
   100020e87:	nop
   100020e88:	nop
   100020e89:	nop
   100020e8a:	nop
   100020e8b:	nop
   100020e8c:	nop
   100020e8d:	nop
   100020e8e:	nop
   100020e8f:	nop
   100020e90:	sub    rsp,0x38
   100020e94:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020e9d:	lea    rcx,[rip+0xfbc]        # 0x100021e60
   100020ea4:	add    rsp,0x38
   100020ea8:	jmp    0x1000194a0
   100020ead:	nop
   100020eae:	nop
   100020eaf:	nop
   100020eb0:	nop
   100020eb1:	nop
   100020eb2:	nop
   100020eb3:	nop
   100020eb4:	nop
   100020eb5:	nop
   100020eb6:	nop
   100020eb7:	nop
   100020eb8:	nop
   100020eb9:	nop
   100020eba:	nop
   100020ebb:	nop
   100020ebc:	nop
   100020ebd:	nop
   100020ebe:	nop
   100020ebf:	nop
   100020ec0:	sub    rsp,0x38
   100020ec4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020ecd:	lea    rcx,[rip+0xfdc]        # 0x100021eb0
   100020ed4:	add    rsp,0x38
   100020ed8:	jmp    0x1000194a0
   100020edd:	nop
   100020ede:	nop
   100020edf:	nop
   100020ee0:	nop
   100020ee1:	nop
   100020ee2:	nop
   100020ee3:	nop
   100020ee4:	nop
   100020ee5:	nop
   100020ee6:	nop
   100020ee7:	nop
   100020ee8:	nop
   100020ee9:	nop
   100020eea:	nop
   100020eeb:	nop
   100020eec:	nop
   100020eed:	nop
   100020eee:	nop
   100020eef:	nop
   100020ef0:	sub    rsp,0x38
   100020ef4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020efd:	lea    rcx,[rip+0xffc]        # 0x100021f00
   100020f04:	add    rsp,0x38
   100020f08:	jmp    0x1000194a0
   100020f0d:	nop
   100020f0e:	nop
   100020f0f:	nop
   100020f10:	nop
   100020f11:	nop
   100020f12:	nop
   100020f13:	nop
   100020f14:	nop
   100020f15:	nop
   100020f16:	nop
   100020f17:	nop
   100020f18:	nop
   100020f19:	nop
   100020f1a:	nop
   100020f1b:	nop
   100020f1c:	nop
   100020f1d:	nop
   100020f1e:	nop
   100020f1f:	nop
   100020f20:	sub    rsp,0x38
   100020f24:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020f2d:	mov    rax,QWORD PTR [rip+0xfffffffffffe09c4]        # 0x1000018f8
   100020f34:	mov    QWORD PTR [rip+0xc6ed],rax        # 0x10002d628
   100020f3b:	lea    rcx,[rip+0x100e]        # 0x100021f50
   100020f42:	add    rsp,0x38
   100020f46:	jmp    0x1000194a0
   100020f4b:	nop
   100020f4c:	nop
   100020f4d:	nop
   100020f4e:	nop
   100020f4f:	nop
   100020f50:	nop
   100020f51:	nop
   100020f52:	nop
   100020f53:	nop
   100020f54:	nop
   100020f55:	nop
   100020f56:	nop
   100020f57:	nop
   100020f58:	nop
   100020f59:	nop
   100020f5a:	nop
   100020f5b:	nop
   100020f5c:	nop
   100020f5d:	nop
   100020f5e:	nop
   100020f5f:	nop
   100020f60:	sub    rsp,0x38
   100020f64:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020f6d:	lea    rcx,[rip+0x102c]        # 0x100021fa0
   100020f74:	add    rsp,0x38
   100020f78:	jmp    0x1000194a0
   100020f7d:	nop
   100020f7e:	nop
   100020f7f:	nop
   100020f80:	nop
   100020f81:	nop
   100020f82:	nop
   100020f83:	nop
   100020f84:	nop
   100020f85:	nop
   100020f86:	nop
   100020f87:	nop
   100020f88:	nop
   100020f89:	nop
   100020f8a:	nop
   100020f8b:	nop
   100020f8c:	nop
   100020f8d:	nop
   100020f8e:	nop
   100020f8f:	nop
   100020f90:	sub    rsp,0x38
   100020f94:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020f9d:	lea    rcx,[rip+0x104c]        # 0x100021ff0
   100020fa4:	add    rsp,0x38
   100020fa8:	jmp    0x1000194a0
   100020fad:	nop
   100020fae:	nop
   100020faf:	nop
   100020fb0:	nop
   100020fb1:	nop
   100020fb2:	nop
   100020fb3:	nop
   100020fb4:	nop
   100020fb5:	nop
   100020fb6:	nop
   100020fb7:	nop
   100020fb8:	nop
   100020fb9:	nop
   100020fba:	nop
   100020fbb:	nop
   100020fbc:	nop
   100020fbd:	nop
   100020fbe:	nop
   100020fbf:	nop
   100020fc0:	sub    rsp,0x38
   100020fc4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020fcd:	lea    rcx,[rip+0x106c]        # 0x100022040
   100020fd4:	add    rsp,0x38
   100020fd8:	jmp    0x1000194a0
   100020fdd:	nop
   100020fde:	nop
   100020fdf:	nop
   100020fe0:	nop
   100020fe1:	nop
   100020fe2:	nop
   100020fe3:	nop
   100020fe4:	nop
   100020fe5:	nop
   100020fe6:	nop
   100020fe7:	nop
   100020fe8:	nop
   100020fe9:	nop
   100020fea:	nop
   100020feb:	nop
   100020fec:	nop
   100020fed:	nop
   100020fee:	nop
   100020fef:	nop
   100020ff0:	sub    rsp,0x38
   100020ff4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100020ffd:	mov    rax,QWORD PTR [rip+0xfffffffffffe08ec]        # 0x1000018f0
   100021004:	mov    QWORD PTR [rip+0xc635],rax        # 0x10002d640
   10002100b:	lea    rcx,[rip+0x107e]        # 0x100022090
   100021012:	add    rsp,0x38
   100021016:	jmp    0x1000194a0
   10002101b:	nop
   10002101c:	nop
   10002101d:	nop
   10002101e:	nop
   10002101f:	nop
   100021020:	nop
   100021021:	nop
   100021022:	nop
   100021023:	nop
   100021024:	nop
   100021025:	nop
   100021026:	nop
   100021027:	nop
   100021028:	nop
   100021029:	nop
   10002102a:	nop
   10002102b:	nop
   10002102c:	nop
   10002102d:	nop
   10002102e:	nop
   10002102f:	nop
   100021030:	sub    rsp,0x38
   100021034:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   10002103d:	lea    rcx,[rip+0x109c]        # 0x1000220e0
   100021044:	add    rsp,0x38
   100021048:	jmp    0x1000194a0
   10002104d:	nop
   10002104e:	nop
   10002104f:	nop
   100021050:	nop
   100021051:	nop
   100021052:	nop
   100021053:	nop
   100021054:	nop
   100021055:	nop
   100021056:	nop
   100021057:	nop
   100021058:	nop
   100021059:	nop
   10002105a:	nop
   10002105b:	nop
   10002105c:	nop
   10002105d:	nop
   10002105e:	nop
   10002105f:	nop
   100021060:	sub    rsp,0x28
   100021064:	mov    rdx,QWORD PTR [rip+0xfffffffffffe043d]        # 0x1000014a8
   10002106b:	lea    rcx,[rip+0xc5de]        # 0x10002d650
   100021072:	call   QWORD PTR [rip+0xfffffffffffe0bf0]        # 0x100001c68
   100021078:	lea    rcx,[rip+0x10b1]        # 0x100022130
   10002107f:	add    rsp,0x28
   100021083:	jmp    0x1000194a0
   100021088:	nop
   100021089:	nop
   10002108a:	nop
   10002108b:	nop
   10002108c:	nop
   10002108d:	nop
   10002108e:	nop
   10002108f:	nop
   100021090:	sub    rsp,0x38
   100021094:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   10002109d:	xor    eax,eax
   10002109f:	mov    QWORD PTR [rip+0x88f2],rax        # 0x100029998
   1000210a6:	mov    QWORD PTR [rip+0x88f3],rax        # 0x1000299a0
   1000210ad:	mov    QWORD PTR [rip+0x88f4],rax        # 0x1000299a8
   1000210b4:	mov    QWORD PTR [rip+0x88f5],rax        # 0x1000299b0
   1000210bb:	mov    QWORD PTR [rip+0x88f6],rax        # 0x1000299b8
   1000210c2:	mov    BYTE PTR [rip+0x88f7],0x1        # 0x1000299c0
   1000210c9:	mov    QWORD PTR [rip+0x88f8],rax        # 0x1000299c8
   1000210d0:	mov    QWORD PTR [rip+0x88f9],rax        # 0x1000299d0
   1000210d7:	lea    rax,[rip+0x888a]        # 0x100029968
   1000210de:	mov    QWORD PTR [rip+0x888b],rax        # 0x100029970
   1000210e5:	mov    QWORD PTR [rip+0x887c],rax        # 0x100029968
   1000210ec:	lea    rcx,[rip+0x106d]        # 0x100022160
   1000210f3:	add    rsp,0x38
   1000210f7:	jmp    0x1000194a0
   1000210fc:	nop
   1000210fd:	nop
   1000210fe:	nop
   1000210ff:	nop
   100021100:	nop
   100021101:	nop
   100021102:	nop
   100021103:	nop
   100021104:	nop
   100021105:	nop
   100021106:	nop
   100021107:	nop
   100021108:	nop
   100021109:	nop
   10002110a:	nop
   10002110b:	nop
   10002110c:	nop
   10002110d:	nop
   10002110e:	nop
   10002110f:	nop
   100021110:	sub    rsp,0x38
   100021114:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   10002111d:	xor    eax,eax
   10002111f:	mov    QWORD PTR [rip+0x88f2],rax        # 0x100029a18
   100021126:	mov    QWORD PTR [rip+0x88f3],rax        # 0x100029a20
   10002112d:	mov    QWORD PTR [rip+0x88f4],rax        # 0x100029a28
   100021134:	mov    QWORD PTR [rip+0x88f5],rax        # 0x100029a30
   10002113b:	mov    QWORD PTR [rip+0x88f6],rax        # 0x100029a38
   100021142:	mov    BYTE PTR [rip+0x88f7],0x1        # 0x100029a40
   100021149:	mov    QWORD PTR [rip+0x88f8],rax        # 0x100029a48
   100021150:	mov    QWORD PTR [rip+0x88f9],rax        # 0x100029a50
   100021157:	lea    rax,[rip+0x888a]        # 0x1000299e8
   10002115e:	mov    QWORD PTR [rip+0x888b],rax        # 0x1000299f0
   100021165:	mov    QWORD PTR [rip+0x887c],rax        # 0x1000299e8
   10002116c:	lea    rcx,[rip+0x100d]        # 0x100022180
   100021173:	add    rsp,0x38
   100021177:	jmp    0x1000194a0
   10002117c:	nop
   10002117d:	nop
   10002117e:	nop
   10002117f:	nop
   100021180:	nop
   100021181:	nop
   100021182:	nop
   100021183:	nop
   100021184:	nop
   100021185:	nop
   100021186:	nop
   100021187:	nop
   100021188:	nop
   100021189:	nop
   10002118a:	nop
   10002118b:	nop
   10002118c:	nop
   10002118d:	nop
   10002118e:	nop
   10002118f:	nop
   100021190:	mov    eax,DWORD PTR [rip+0xfffffffffffe1622]        # 0x1000027b8
   100021196:	mov    DWORD PTR [rip+0xc68c],eax        # 0x10002d828
   10002119c:	mov    eax,DWORD PTR [rip+0xfffffffffffe161a]        # 0x1000027bc
   1000211a2:	mov    DWORD PTR [rip+0xc684],eax        # 0x10002d82c
   1000211a8:	mov    eax,DWORD PTR [rip+0xfffffffffffe1612]        # 0x1000027c0
   1000211ae:	mov    DWORD PTR [rip+0xc67c],eax        # 0x10002d830
   1000211b4:	mov    eax,DWORD PTR [rip+0xfffffffffffe160a]        # 0x1000027c4
   1000211ba:	mov    DWORD PTR [rip+0xc674],eax        # 0x10002d834
   1000211c0:	ret    
   1000211c1:	nop
   1000211c2:	nop
   1000211c3:	nop
   1000211c4:	nop
   1000211c5:	nop
   1000211c6:	nop
   1000211c7:	nop
   1000211c8:	nop
   1000211c9:	nop
   1000211ca:	nop
   1000211cb:	nop
   1000211cc:	nop
   1000211cd:	nop
   1000211ce:	nop
   1000211cf:	nop
   1000211d0:	mov    eax,DWORD PTR [rip+0xfffffffffffe15e2]        # 0x1000027b8
   1000211d6:	mov    DWORD PTR [rip+0xc63c],eax        # 0x10002d818
   1000211dc:	mov    eax,DWORD PTR [rip+0xfffffffffffe15da]        # 0x1000027bc
   1000211e2:	mov    DWORD PTR [rip+0xc634],eax        # 0x10002d81c
   1000211e8:	mov    eax,DWORD PTR [rip+0xfffffffffffe15d2]        # 0x1000027c0
   1000211ee:	mov    DWORD PTR [rip+0xc62c],eax        # 0x10002d820
   1000211f4:	mov    eax,DWORD PTR [rip+0xfffffffffffe15ca]        # 0x1000027c4
   1000211fa:	mov    DWORD PTR [rip+0xc624],eax        # 0x10002d824
   100021200:	ret    
   100021201:	nop
   100021202:	nop
   100021203:	nop
   100021204:	nop
   100021205:	nop
   100021206:	nop
   100021207:	nop
   100021208:	nop
   100021209:	nop
   10002120a:	nop
   10002120b:	nop
   10002120c:	nop
   10002120d:	nop
   10002120e:	nop
   10002120f:	nop
   100021210:	mov    eax,DWORD PTR [rip+0xfffffffffffe15a2]        # 0x1000027b8
   100021216:	mov    DWORD PTR [rip+0xc5bc],eax        # 0x10002d7d8
   10002121c:	mov    eax,DWORD PTR [rip+0xfffffffffffe159a]        # 0x1000027bc
   100021222:	mov    DWORD PTR [rip+0xc5b4],eax        # 0x10002d7dc
   100021228:	mov    eax,DWORD PTR [rip+0xfffffffffffe1592]        # 0x1000027c0
   10002122e:	mov    DWORD PTR [rip+0xc5ac],eax        # 0x10002d7e0
   100021234:	mov    eax,DWORD PTR [rip+0xfffffffffffe158a]        # 0x1000027c4
   10002123a:	mov    DWORD PTR [rip+0xc5a4],eax        # 0x10002d7e4
   100021240:	ret    
   100021241:	nop
   100021242:	nop
   100021243:	nop
   100021244:	nop
   100021245:	nop
   100021246:	nop
   100021247:	nop
   100021248:	nop
   100021249:	nop
   10002124a:	nop
   10002124b:	nop
   10002124c:	nop
   10002124d:	nop
   10002124e:	nop
   10002124f:	nop
   100021250:	mov    eax,DWORD PTR [rip+0x8c32]        # 0x100029e88
   100021256:	add    eax,0x3
   100021259:	mov    DWORD PTR [rip+0xc5b1],eax        # 0x10002d810
   10002125f:	ret    
   100021260:	nop
   100021261:	nop
   100021262:	nop
   100021263:	nop
   100021264:	nop
   100021265:	nop
   100021266:	nop
   100021267:	nop
   100021268:	nop
   100021269:	nop
   10002126a:	nop
   10002126b:	nop
   10002126c:	nop
   10002126d:	nop
   10002126e:	nop
   10002126f:	nop
   100021270:	mov    eax,DWORD PTR [rip+0xfffffffffffe1542]        # 0x1000027b8
   100021276:	mov    DWORD PTR [rip+0xc56c],eax        # 0x10002d7e8
   10002127c:	mov    eax,DWORD PTR [rip+0xfffffffffffe153a]        # 0x1000027bc
   100021282:	mov    DWORD PTR [rip+0xc564],eax        # 0x10002d7ec
   100021288:	mov    eax,DWORD PTR [rip+0xfffffffffffe1532]        # 0x1000027c0
   10002128e:	mov    DWORD PTR [rip+0xc55c],eax        # 0x10002d7f0
   100021294:	mov    eax,DWORD PTR [rip+0xfffffffffffe152a]        # 0x1000027c4
   10002129a:	mov    DWORD PTR [rip+0xc554],eax        # 0x10002d7f4
   1000212a0:	ret    
   1000212a1:	nop
   1000212a2:	nop
   1000212a3:	nop
   1000212a4:	nop
   1000212a5:	nop
   1000212a6:	nop
   1000212a7:	nop
   1000212a8:	nop
   1000212a9:	nop
   1000212aa:	nop
   1000212ab:	nop
   1000212ac:	nop
   1000212ad:	nop
   1000212ae:	nop
   1000212af:	nop
   1000212b0:	mov    eax,DWORD PTR [rip+0xfffffffffffe1502]        # 0x1000027b8
   1000212b6:	mov    DWORD PTR [rip+0xc50c],eax        # 0x10002d7c8
   1000212bc:	mov    eax,DWORD PTR [rip+0xfffffffffffe14fa]        # 0x1000027bc
   1000212c2:	mov    DWORD PTR [rip+0xc504],eax        # 0x10002d7cc
   1000212c8:	mov    eax,DWORD PTR [rip+0xfffffffffffe14f2]        # 0x1000027c0
   1000212ce:	mov    DWORD PTR [rip+0xc4fc],eax        # 0x10002d7d0
   1000212d4:	mov    eax,DWORD PTR [rip+0xfffffffffffe14ea]        # 0x1000027c4
   1000212da:	mov    DWORD PTR [rip+0xc4f4],eax        # 0x10002d7d4
   1000212e0:	ret    
   1000212e1:	nop
   1000212e2:	nop
   1000212e3:	nop
   1000212e4:	nop
   1000212e5:	nop
   1000212e6:	nop
   1000212e7:	nop
   1000212e8:	nop
   1000212e9:	nop
   1000212ea:	nop
   1000212eb:	nop
   1000212ec:	nop
   1000212ed:	nop
   1000212ee:	nop
   1000212ef:	nop
   1000212f0:	mov    eax,DWORD PTR [rip+0xfffffffffffe14c2]        # 0x1000027b8
   1000212f6:	mov    DWORD PTR [rip+0xc504],eax        # 0x10002d800
   1000212fc:	mov    eax,DWORD PTR [rip+0xfffffffffffe14ba]        # 0x1000027bc
   100021302:	mov    DWORD PTR [rip+0xc4fc],eax        # 0x10002d804
   100021308:	mov    eax,DWORD PTR [rip+0xfffffffffffe14b2]        # 0x1000027c0
   10002130e:	mov    DWORD PTR [rip+0xc4f4],eax        # 0x10002d808
   100021314:	mov    eax,DWORD PTR [rip+0xfffffffffffe14aa]        # 0x1000027c4
   10002131a:	mov    DWORD PTR [rip+0xc4ec],eax        # 0x10002d80c
   100021320:	ret    
   100021321:	nop
   100021322:	nop
   100021323:	nop
   100021324:	nop
   100021325:	nop
   100021326:	nop
   100021327:	nop
   100021328:	nop
   100021329:	nop
   10002132a:	nop
   10002132b:	nop
   10002132c:	nop
   10002132d:	nop
   10002132e:	nop
   10002132f:	nop
   100021330:	lea    rcx,[rip+0x177d9]        # 0x100038b10
   100021337:	xor    r9d,r9d
   10002133a:	mov    edx,0x14a000
   10002133f:	mov    r8d,0x149c00
   100021345:	rex.W jmp QWORD PTR [rip+0xfffffffffffe0adc]        # 0x100001e28
   10002134c:	nop
   10002134d:	nop
   10002134e:	nop
   10002134f:	nop
   100021350:	nop
   100021351:	nop
   100021352:	nop
   100021353:	nop
   100021354:	nop
   100021355:	nop
   100021356:	nop
   100021357:	nop
   100021358:	nop
   100021359:	nop
   10002135a:	nop
   10002135b:	nop
   10002135c:	nop
   10002135d:	nop
   10002135e:	nop
   10002135f:	nop
   100021360:	lea    rcx,[rip+0xe39]        # 0x1000221a0
   100021367:	jmp    0x1000194a0
   10002136c:	nop
   10002136d:	nop
   10002136e:	nop
   10002136f:	nop
   100021370:	nop
   100021371:	nop
   100021372:	nop
   100021373:	nop
   100021374:	nop
   100021375:	nop
   100021376:	nop
   100021377:	nop
   100021378:	nop
   100021379:	nop
   10002137a:	nop
   10002137b:	nop
   10002137c:	nop
   10002137d:	nop
   10002137e:	nop
   10002137f:	nop
   100021380:	sub    rsp,0x28
   100021384:	lea    rcx,[rip+0xfffffffffffe2425]        # 0x1000037b0
   10002138b:	call   QWORD PTR [rip+0xfffffffffffdfd1f]        # 0x1000010b0
   100021391:	lea    rdx,[rip+0x18]        # 0x1000213b0
   100021398:	mov    rcx,rax
   10002139b:	call   QWORD PTR [rip+0xfffffffffffdfea7]        # 0x100001248
   1000213a1:	mov    QWORD PTR [rip+0x7d20],rax        # 0x1000290c8
   1000213a8:	add    rsp,0x28
   1000213ac:	ret    
   1000213ad:	nop
   1000213ae:	nop
   1000213af:	nop
   1000213b0:	addr32 pop rdi
   1000213b2:	jb     0x10002141b
   1000213b4:	push   rbp
   1000213b5:	ins    BYTE PTR es:[rdi],dx
   1000213b6:	push   rsp
   1000213b7:	jb     0x10002141a
   1000213b9:	movsxd esp,DWORD PTR [rbp+0x46]
   1000213bc:	ins    BYTE PTR es:[rdi],dx
   1000213bd:	(bad)  
   1000213be:	addr32 jae 0x1000213c1
   1000213c1:	nop
   1000213c2:	nop
   1000213c3:	nop
   1000213c4:	nop
   1000213c5:	nop
   1000213c6:	nop
   1000213c7:	nop
   1000213c8:	nop
   1000213c9:	nop
   1000213ca:	nop
   1000213cb:	nop
   1000213cc:	nop
   1000213cd:	nop
   1000213ce:	nop
   1000213cf:	nop
   1000213d0:	sub    rsp,0x28
   1000213d4:	lea    rcx,[rip+0xfffffffffffe23d5]        # 0x1000037b0
   1000213db:	call   QWORD PTR [rip+0xfffffffffffdfccf]        # 0x1000010b0
   1000213e1:	lea    rdx,[rip+0x18]        # 0x100021400
   1000213e8:	mov    rcx,rax
   1000213eb:	call   QWORD PTR [rip+0xfffffffffffdfe57]        # 0x100001248
   1000213f1:	mov    QWORD PTR [rip+0x17518],rax        # 0x100038910
   1000213f8:	add    rsp,0x28
   1000213fc:	ret    
   1000213fd:	nop
   1000213fe:	nop
   1000213ff:	nop
   100021400:	push   rdx
   100021401:	gs jae 0x100021473
   100021404:	jne    0x100021478
   100021406:	movsxd esp,DWORD PTR [rbp+0x53]
   100021409:	je     0x10002147d
   10002140b:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100021411:	nop
   100021412:	nop
   100021413:	nop
   100021414:	nop
   100021415:	nop
   100021416:	nop
   100021417:	nop
   100021418:	nop
   100021419:	nop
   10002141a:	nop
   10002141b:	nop
   10002141c:	nop
   10002141d:	nop
   10002141e:	nop
   10002141f:	nop
   100021420:	lea    rcx,[rip+0xc221]        # 0x10002d648
   100021427:	rex.W jmp QWORD PTR [rip+0xfffffffffffe0a82]        # 0x100001eb0
   10002142e:	nop
   10002142f:	nop
   100021430:	nop
   100021431:	nop
   100021432:	nop
   100021433:	nop
   100021434:	nop
   100021435:	nop
   100021436:	nop
   100021437:	nop
   100021438:	nop
   100021439:	nop
   10002143a:	nop
   10002143b:	nop
   10002143c:	nop
   10002143d:	nop
   10002143e:	nop
   10002143f:	nop
   100021440:	mov    eax,DWORD PTR [rip+0xfffffffffffe1372]        # 0x1000027b8
   100021446:	mov    DWORD PTR [rip+0x174f4],eax        # 0x100038940
   10002144c:	mov    eax,DWORD PTR [rip+0xfffffffffffe136a]        # 0x1000027bc
   100021452:	mov    DWORD PTR [rip+0x174ec],eax        # 0x100038944
   100021458:	mov    eax,DWORD PTR [rip+0xfffffffffffe1362]        # 0x1000027c0
   10002145e:	mov    DWORD PTR [rip+0x174e4],eax        # 0x100038948
   100021464:	mov    eax,DWORD PTR [rip+0xfffffffffffe135a]        # 0x1000027c4
   10002146a:	mov    DWORD PTR [rip+0x174dc],eax        # 0x10003894c
   100021470:	ret    
   100021471:	nop
   100021472:	nop
   100021473:	nop
   100021474:	nop
   100021475:	nop
   100021476:	nop
   100021477:	nop
   100021478:	nop
   100021479:	nop
   10002147a:	nop
   10002147b:	nop
   10002147c:	nop
   10002147d:	nop
   10002147e:	nop
   10002147f:	nop
   100021480:	mov    eax,DWORD PTR [rip+0xfffffffffffe1332]        # 0x1000027b8
   100021486:	mov    DWORD PTR [rip+0x174a4],eax        # 0x100038930
   10002148c:	mov    eax,DWORD PTR [rip+0xfffffffffffe132a]        # 0x1000027bc
   100021492:	mov    DWORD PTR [rip+0x1749c],eax        # 0x100038934
   100021498:	mov    eax,DWORD PTR [rip+0xfffffffffffe1322]        # 0x1000027c0
   10002149e:	mov    DWORD PTR [rip+0x17494],eax        # 0x100038938
   1000214a4:	mov    eax,DWORD PTR [rip+0xfffffffffffe131a]        # 0x1000027c4
   1000214aa:	mov    DWORD PTR [rip+0x1748c],eax        # 0x10003893c
   1000214b0:	ret    
   1000214b1:	nop
   1000214b2:	nop
   1000214b3:	nop
   1000214b4:	nop
   1000214b5:	nop
   1000214b6:	nop
   1000214b7:	nop
   1000214b8:	nop
   1000214b9:	nop
   1000214ba:	nop
   1000214bb:	nop
   1000214bc:	nop
   1000214bd:	nop
   1000214be:	nop
   1000214bf:	nop
   1000214c0:	mov    eax,DWORD PTR [rip+0xfffffffffffe12f2]        # 0x1000027b8
   1000214c6:	mov    DWORD PTR [rip+0x1744c],eax        # 0x100038918
   1000214cc:	mov    eax,DWORD PTR [rip+0xfffffffffffe12ea]        # 0x1000027bc
   1000214d2:	mov    DWORD PTR [rip+0x17444],eax        # 0x10003891c
   1000214d8:	mov    eax,DWORD PTR [rip+0xfffffffffffe12e2]        # 0x1000027c0
   1000214de:	mov    DWORD PTR [rip+0x1743c],eax        # 0x100038920
   1000214e4:	mov    eax,DWORD PTR [rip+0xfffffffffffe12da]        # 0x1000027c4
   1000214ea:	mov    DWORD PTR [rip+0x17434],eax        # 0x100038924
   1000214f0:	ret    
   1000214f1:	nop
   1000214f2:	nop
   1000214f3:	nop
   1000214f4:	nop
   1000214f5:	nop
   1000214f6:	nop
   1000214f7:	nop
   1000214f8:	nop
   1000214f9:	nop
   1000214fa:	nop
   1000214fb:	nop
   1000214fc:	nop
   1000214fd:	nop
   1000214fe:	nop
   1000214ff:	nop
   100021500:	mov    eax,DWORD PTR [rip+0x8986]        # 0x100029e8c
   100021506:	add    eax,0x3
   100021509:	mov    DWORD PTR [rip+0x17419],eax        # 0x100038928
   10002150f:	ret    
   100021510:	nop
   100021511:	nop
   100021512:	nop
   100021513:	nop
   100021514:	nop
   100021515:	nop
   100021516:	nop
   100021517:	nop
   100021518:	nop
   100021519:	nop
   10002151a:	nop
   10002151b:	nop
   10002151c:	nop
   10002151d:	nop
   10002151e:	nop
   10002151f:	nop
   100021520:	mov    eax,DWORD PTR [rip+0xfffffffffffe1292]        # 0x1000027b8
   100021526:	mov    DWORD PTR [rip+0x1747c],eax        # 0x1000389a8
   10002152c:	mov    eax,DWORD PTR [rip+0xfffffffffffe128a]        # 0x1000027bc
   100021532:	mov    DWORD PTR [rip+0x17474],eax        # 0x1000389ac
   100021538:	mov    eax,DWORD PTR [rip+0xfffffffffffe1282]        # 0x1000027c0
   10002153e:	mov    DWORD PTR [rip+0x1746c],eax        # 0x1000389b0
   100021544:	mov    eax,DWORD PTR [rip+0xfffffffffffe127a]        # 0x1000027c4
   10002154a:	mov    DWORD PTR [rip+0x17464],eax        # 0x1000389b4
   100021550:	ret    
   100021551:	nop
   100021552:	nop
   100021553:	nop
   100021554:	nop
   100021555:	nop
   100021556:	nop
   100021557:	nop
   100021558:	nop
   100021559:	nop
   10002155a:	nop
   10002155b:	nop
   10002155c:	nop
   10002155d:	nop
   10002155e:	nop
   10002155f:	nop
   100021560:	mov    eax,DWORD PTR [rip+0xfffffffffffe1252]        # 0x1000027b8
   100021566:	mov    DWORD PTR [rip+0x1742c],eax        # 0x100038998
   10002156c:	mov    eax,DWORD PTR [rip+0xfffffffffffe124a]        # 0x1000027bc
   100021572:	mov    DWORD PTR [rip+0x17424],eax        # 0x10003899c
   100021578:	mov    eax,DWORD PTR [rip+0xfffffffffffe1242]        # 0x1000027c0
   10002157e:	mov    DWORD PTR [rip+0x1741c],eax        # 0x1000389a0
   100021584:	mov    eax,DWORD PTR [rip+0xfffffffffffe123a]        # 0x1000027c4
   10002158a:	mov    DWORD PTR [rip+0x17414],eax        # 0x1000389a4
   100021590:	ret    
   100021591:	nop
   100021592:	nop
   100021593:	nop
   100021594:	nop
   100021595:	nop
   100021596:	nop
   100021597:	nop
   100021598:	nop
   100021599:	nop
   10002159a:	nop
   10002159b:	nop
   10002159c:	nop
   10002159d:	nop
   10002159e:	nop
   10002159f:	nop
   1000215a0:	mov    eax,DWORD PTR [rip+0xfffffffffffe1212]        # 0x1000027b8
   1000215a6:	mov    DWORD PTR [rip+0x173b4],eax        # 0x100038960
   1000215ac:	mov    eax,DWORD PTR [rip+0xfffffffffffe120a]        # 0x1000027bc
   1000215b2:	mov    DWORD PTR [rip+0x173ac],eax        # 0x100038964
   1000215b8:	mov    eax,DWORD PTR [rip+0xfffffffffffe1202]        # 0x1000027c0
   1000215be:	mov    DWORD PTR [rip+0x173a4],eax        # 0x100038968
   1000215c4:	mov    eax,DWORD PTR [rip+0xfffffffffffe11fa]        # 0x1000027c4
   1000215ca:	mov    DWORD PTR [rip+0x1739c],eax        # 0x10003896c
   1000215d0:	ret    
   1000215d1:	nop
   1000215d2:	nop
   1000215d3:	nop
   1000215d4:	nop
   1000215d5:	nop
   1000215d6:	nop
   1000215d7:	nop
   1000215d8:	nop
   1000215d9:	nop
   1000215da:	nop
   1000215db:	nop
   1000215dc:	nop
   1000215dd:	nop
   1000215de:	nop
   1000215df:	nop
   1000215e0:	mov    eax,DWORD PTR [rip+0x88aa]        # 0x100029e90
   1000215e6:	add    eax,0x3
   1000215e9:	mov    DWORD PTR [rip+0x173a1],eax        # 0x100038990
   1000215ef:	ret    
   1000215f0:	nop
   1000215f1:	nop
   1000215f2:	nop
   1000215f3:	nop
   1000215f4:	nop
   1000215f5:	nop
   1000215f6:	nop
   1000215f7:	nop
   1000215f8:	nop
   1000215f9:	nop
   1000215fa:	nop
   1000215fb:	nop
   1000215fc:	nop
   1000215fd:	nop
   1000215fe:	nop
   1000215ff:	nop
   100021600:	mov    eax,DWORD PTR [rip+0xfffffffffffe11b2]        # 0x1000027b8
   100021606:	mov    DWORD PTR [rip+0x17364],eax        # 0x100038970
   10002160c:	mov    eax,DWORD PTR [rip+0xfffffffffffe11aa]        # 0x1000027bc
   100021612:	mov    DWORD PTR [rip+0x1735c],eax        # 0x100038974
   100021618:	mov    eax,DWORD PTR [rip+0xfffffffffffe11a2]        # 0x1000027c0
   10002161e:	mov    DWORD PTR [rip+0x17354],eax        # 0x100038978
   100021624:	mov    eax,DWORD PTR [rip+0xfffffffffffe119a]        # 0x1000027c4
   10002162a:	mov    DWORD PTR [rip+0x1734c],eax        # 0x10003897c
   100021630:	ret    
   100021631:	nop
   100021632:	nop
   100021633:	nop
   100021634:	nop
   100021635:	nop
   100021636:	nop
   100021637:	nop
   100021638:	nop
   100021639:	nop
   10002163a:	nop
   10002163b:	nop
   10002163c:	nop
   10002163d:	nop
   10002163e:	nop
   10002163f:	nop
   100021640:	mov    eax,DWORD PTR [rip+0xfffffffffffe1172]        # 0x1000027b8
   100021646:	mov    DWORD PTR [rip+0x17304],eax        # 0x100038950
   10002164c:	mov    eax,DWORD PTR [rip+0xfffffffffffe116a]        # 0x1000027bc
   100021652:	mov    DWORD PTR [rip+0x172fc],eax        # 0x100038954
   100021658:	mov    eax,DWORD PTR [rip+0xfffffffffffe1162]        # 0x1000027c0
   10002165e:	mov    DWORD PTR [rip+0x172f4],eax        # 0x100038958
   100021664:	mov    eax,DWORD PTR [rip+0xfffffffffffe115a]        # 0x1000027c4
   10002166a:	mov    DWORD PTR [rip+0x172ec],eax        # 0x10003895c
   100021670:	ret    
   100021671:	nop
   100021672:	nop
   100021673:	nop
   100021674:	nop
   100021675:	nop
   100021676:	nop
   100021677:	nop
   100021678:	nop
   100021679:	nop
   10002167a:	nop
   10002167b:	nop
   10002167c:	nop
   10002167d:	nop
   10002167e:	nop
   10002167f:	nop
   100021680:	mov    eax,DWORD PTR [rip+0xfffffffffffe1132]        # 0x1000027b8
   100021686:	mov    DWORD PTR [rip+0x172f4],eax        # 0x100038980
   10002168c:	mov    eax,DWORD PTR [rip+0xfffffffffffe112a]        # 0x1000027bc
   100021692:	mov    DWORD PTR [rip+0x172ec],eax        # 0x100038984
   100021698:	mov    eax,DWORD PTR [rip+0xfffffffffffe1122]        # 0x1000027c0
   10002169e:	mov    DWORD PTR [rip+0x172e4],eax        # 0x100038988
   1000216a4:	mov    eax,DWORD PTR [rip+0xfffffffffffe111a]        # 0x1000027c4
   1000216aa:	mov    DWORD PTR [rip+0x172dc],eax        # 0x10003898c
   1000216b0:	ret    
   1000216b1:	nop
   1000216b2:	nop
   1000216b3:	nop
   1000216b4:	nop
   1000216b5:	nop
   1000216b6:	nop
   1000216b7:	nop
   1000216b8:	nop
   1000216b9:	nop
   1000216ba:	nop
   1000216bb:	nop
   1000216bc:	nop
   1000216bd:	nop
   1000216be:	nop
   1000216bf:	nop
   1000216c0:	lea    rcx,[rip+0x17469]        # 0x100038b30
   1000216c7:	xor    r9d,r9d
   1000216ca:	mov    edx,0x139000
   1000216cf:	mov    r8d,0x138c00
   1000216d5:	rex.W jmp QWORD PTR [rip+0xfffffffffffe074c]        # 0x100001e28
   1000216dc:	nop
   1000216dd:	nop
   1000216de:	nop
   1000216df:	nop
   1000216e0:	nop
   1000216e1:	nop
   1000216e2:	nop
   1000216e3:	nop
   1000216e4:	nop
   1000216e5:	nop
   1000216e6:	nop
   1000216e7:	nop
   1000216e8:	nop
   1000216e9:	nop
   1000216ea:	nop
   1000216eb:	nop
   1000216ec:	nop
   1000216ed:	nop
   1000216ee:	nop
   1000216ef:	nop
   1000216f0:	mov    eax,DWORD PTR [rip+0xfffffffffffe10c2]        # 0x1000027b8
   1000216f6:	mov    DWORD PTR [rip+0x172e4],eax        # 0x1000389e0
   1000216fc:	mov    eax,DWORD PTR [rip+0xfffffffffffe10ba]        # 0x1000027bc
   100021702:	mov    DWORD PTR [rip+0x172dc],eax        # 0x1000389e4
   100021708:	mov    eax,DWORD PTR [rip+0xfffffffffffe10b2]        # 0x1000027c0
   10002170e:	mov    DWORD PTR [rip+0x172d4],eax        # 0x1000389e8
   100021714:	mov    eax,DWORD PTR [rip+0xfffffffffffe10aa]        # 0x1000027c4
   10002171a:	mov    DWORD PTR [rip+0x172cc],eax        # 0x1000389ec
   100021720:	ret    
   100021721:	nop
   100021722:	nop
   100021723:	nop
   100021724:	nop
   100021725:	nop
   100021726:	nop
   100021727:	nop
   100021728:	nop
   100021729:	nop
   10002172a:	nop
   10002172b:	nop
   10002172c:	nop
   10002172d:	nop
   10002172e:	nop
   10002172f:	nop
   100021730:	mov    eax,DWORD PTR [rip+0xfffffffffffe1082]        # 0x1000027b8
   100021736:	mov    DWORD PTR [rip+0x17294],eax        # 0x1000389d0
   10002173c:	mov    eax,DWORD PTR [rip+0xfffffffffffe107a]        # 0x1000027bc
   100021742:	mov    DWORD PTR [rip+0x1728c],eax        # 0x1000389d4
   100021748:	mov    eax,DWORD PTR [rip+0xfffffffffffe1072]        # 0x1000027c0
   10002174e:	mov    DWORD PTR [rip+0x17284],eax        # 0x1000389d8
   100021754:	mov    eax,DWORD PTR [rip+0xfffffffffffe106a]        # 0x1000027c4
   10002175a:	mov    DWORD PTR [rip+0x1727c],eax        # 0x1000389dc
   100021760:	ret    
   100021761:	nop
   100021762:	nop
   100021763:	nop
   100021764:	nop
   100021765:	nop
   100021766:	nop
   100021767:	nop
   100021768:	nop
   100021769:	nop
   10002176a:	nop
   10002176b:	nop
   10002176c:	nop
   10002176d:	nop
   10002176e:	nop
   10002176f:	nop
   100021770:	mov    eax,DWORD PTR [rip+0xfffffffffffe1042]        # 0x1000027b8
   100021776:	mov    DWORD PTR [rip+0x1723c],eax        # 0x1000389b8
   10002177c:	mov    eax,DWORD PTR [rip+0xfffffffffffe103a]        # 0x1000027bc
   100021782:	mov    DWORD PTR [rip+0x17234],eax        # 0x1000389bc
   100021788:	mov    eax,DWORD PTR [rip+0xfffffffffffe1032]        # 0x1000027c0
   10002178e:	mov    DWORD PTR [rip+0x1722c],eax        # 0x1000389c0
   100021794:	mov    eax,DWORD PTR [rip+0xfffffffffffe102a]        # 0x1000027c4
   10002179a:	mov    DWORD PTR [rip+0x17224],eax        # 0x1000389c4
   1000217a0:	ret    
   1000217a1:	nop
   1000217a2:	nop
   1000217a3:	nop
   1000217a4:	nop
   1000217a5:	nop
   1000217a6:	nop
   1000217a7:	nop
   1000217a8:	nop
   1000217a9:	nop
   1000217aa:	nop
   1000217ab:	nop
   1000217ac:	nop
   1000217ad:	nop
   1000217ae:	nop
   1000217af:	nop
   1000217b0:	mov    eax,DWORD PTR [rip+0x86de]        # 0x100029e94
   1000217b6:	add    eax,0x3
   1000217b9:	mov    DWORD PTR [rip+0x17209],eax        # 0x1000389c8
   1000217bf:	ret    
   1000217c0:	nop
   1000217c1:	nop
   1000217c2:	nop
   1000217c3:	nop
   1000217c4:	nop
   1000217c5:	nop
   1000217c6:	nop
   1000217c7:	nop
   1000217c8:	nop
   1000217c9:	nop
   1000217ca:	nop
   1000217cb:	nop
   1000217cc:	nop
   1000217cd:	nop
   1000217ce:	nop
   1000217cf:	nop
   1000217d0:	mov    eax,DWORD PTR [rip+0xfffffffffffe0fe2]        # 0x1000027b8
   1000217d6:	mov    DWORD PTR [rip+0x1723c],eax        # 0x100038a18
   1000217dc:	mov    eax,DWORD PTR [rip+0xfffffffffffe0fda]        # 0x1000027bc
   1000217e2:	mov    DWORD PTR [rip+0x17234],eax        # 0x100038a1c
   1000217e8:	mov    eax,DWORD PTR [rip+0xfffffffffffe0fd2]        # 0x1000027c0
   1000217ee:	mov    DWORD PTR [rip+0x1722c],eax        # 0x100038a20
   1000217f4:	mov    eax,DWORD PTR [rip+0xfffffffffffe0fca]        # 0x1000027c4
   1000217fa:	mov    DWORD PTR [rip+0x17224],eax        # 0x100038a24
   100021800:	ret    
   100021801:	nop
   100021802:	nop
   100021803:	nop
   100021804:	nop
   100021805:	nop
   100021806:	nop
   100021807:	nop
   100021808:	nop
   100021809:	nop
   10002180a:	nop
   10002180b:	nop
   10002180c:	nop
   10002180d:	nop
   10002180e:	nop
   10002180f:	nop
   100021810:	mov    eax,DWORD PTR [rip+0xfffffffffffe0fa2]        # 0x1000027b8
   100021816:	mov    DWORD PTR [rip+0x171ec],eax        # 0x100038a08
   10002181c:	mov    eax,DWORD PTR [rip+0xfffffffffffe0f9a]        # 0x1000027bc
   100021822:	mov    DWORD PTR [rip+0x171e4],eax        # 0x100038a0c
   100021828:	mov    eax,DWORD PTR [rip+0xfffffffffffe0f92]        # 0x1000027c0
   10002182e:	mov    DWORD PTR [rip+0x171dc],eax        # 0x100038a10
   100021834:	mov    eax,DWORD PTR [rip+0xfffffffffffe0f8a]        # 0x1000027c4
   10002183a:	mov    DWORD PTR [rip+0x171d4],eax        # 0x100038a14
   100021840:	ret    
   100021841:	nop
   100021842:	nop
   100021843:	nop
   100021844:	nop
   100021845:	nop
   100021846:	nop
   100021847:	nop
   100021848:	nop
   100021849:	nop
   10002184a:	nop
   10002184b:	nop
   10002184c:	nop
   10002184d:	nop
   10002184e:	nop
   10002184f:	nop
   100021850:	mov    eax,DWORD PTR [rip+0xfffffffffffe0f62]        # 0x1000027b8
   100021856:	mov    DWORD PTR [rip+0x17194],eax        # 0x1000389f0
   10002185c:	mov    eax,DWORD PTR [rip+0xfffffffffffe0f5a]        # 0x1000027bc
   100021862:	mov    DWORD PTR [rip+0x1718c],eax        # 0x1000389f4
   100021868:	mov    eax,DWORD PTR [rip+0xfffffffffffe0f52]        # 0x1000027c0
   10002186e:	mov    DWORD PTR [rip+0x17184],eax        # 0x1000389f8
   100021874:	mov    eax,DWORD PTR [rip+0xfffffffffffe0f4a]        # 0x1000027c4
   10002187a:	mov    DWORD PTR [rip+0x1717c],eax        # 0x1000389fc
   100021880:	ret    
   100021881:	nop
   100021882:	nop
   100021883:	nop
   100021884:	nop
   100021885:	nop
   100021886:	nop
   100021887:	nop
   100021888:	nop
   100021889:	nop
   10002188a:	nop
   10002188b:	nop
   10002188c:	nop
   10002188d:	nop
   10002188e:	nop
   10002188f:	nop
   100021890:	mov    eax,DWORD PTR [rip+0x8602]        # 0x100029e98
   100021896:	add    eax,0x3
   100021899:	mov    DWORD PTR [rip+0x17161],eax        # 0x100038a00
   10002189f:	ret    
   1000218a0:	nop
   1000218a1:	nop
   1000218a2:	nop
   1000218a3:	nop
   1000218a4:	nop
   1000218a5:	nop
   1000218a6:	nop
   1000218a7:	nop
   1000218a8:	nop
   1000218a9:	nop
   1000218aa:	nop
   1000218ab:	nop
   1000218ac:	nop
   1000218ad:	nop
   1000218ae:	nop
   1000218af:	nop
   1000218b0:	mov    eax,DWORD PTR [rip+0xfffffffffffe0f02]        # 0x1000027b8
   1000218b6:	mov    DWORD PTR [rip+0x17194],eax        # 0x100038a50
   1000218bc:	mov    eax,DWORD PTR [rip+0xfffffffffffe0efa]        # 0x1000027bc
   1000218c2:	mov    DWORD PTR [rip+0x1718c],eax        # 0x100038a54
   1000218c8:	mov    eax,DWORD PTR [rip+0xfffffffffffe0ef2]        # 0x1000027c0
   1000218ce:	mov    DWORD PTR [rip+0x17184],eax        # 0x100038a58
   1000218d4:	mov    eax,DWORD PTR [rip+0xfffffffffffe0eea]        # 0x1000027c4
   1000218da:	mov    DWORD PTR [rip+0x1717c],eax        # 0x100038a5c
   1000218e0:	ret    
   1000218e1:	nop
   1000218e2:	nop
   1000218e3:	nop
   1000218e4:	nop
   1000218e5:	nop
   1000218e6:	nop
   1000218e7:	nop
   1000218e8:	nop
   1000218e9:	nop
   1000218ea:	nop
   1000218eb:	nop
   1000218ec:	nop
   1000218ed:	nop
   1000218ee:	nop
   1000218ef:	nop
   1000218f0:	mov    eax,DWORD PTR [rip+0xfffffffffffe0ec2]        # 0x1000027b8
   1000218f6:	mov    DWORD PTR [rip+0x17144],eax        # 0x100038a40
   1000218fc:	mov    eax,DWORD PTR [rip+0xfffffffffffe0eba]        # 0x1000027bc
   100021902:	mov    DWORD PTR [rip+0x1713c],eax        # 0x100038a44
   100021908:	mov    eax,DWORD PTR [rip+0xfffffffffffe0eb2]        # 0x1000027c0
   10002190e:	mov    DWORD PTR [rip+0x17134],eax        # 0x100038a48
   100021914:	mov    eax,DWORD PTR [rip+0xfffffffffffe0eaa]        # 0x1000027c4
   10002191a:	mov    DWORD PTR [rip+0x1712c],eax        # 0x100038a4c
   100021920:	ret    
   100021921:	nop
   100021922:	nop
   100021923:	nop
   100021924:	nop
   100021925:	nop
   100021926:	nop
   100021927:	nop
   100021928:	nop
   100021929:	nop
   10002192a:	nop
   10002192b:	nop
   10002192c:	nop
   10002192d:	nop
   10002192e:	nop
   10002192f:	nop
   100021930:	mov    eax,DWORD PTR [rip+0xfffffffffffe0e82]        # 0x1000027b8
   100021936:	mov    DWORD PTR [rip+0x170ec],eax        # 0x100038a28
   10002193c:	mov    eax,DWORD PTR [rip+0xfffffffffffe0e7a]        # 0x1000027bc
   100021942:	mov    DWORD PTR [rip+0x170e4],eax        # 0x100038a2c
   100021948:	mov    eax,DWORD PTR [rip+0xfffffffffffe0e72]        # 0x1000027c0
   10002194e:	mov    DWORD PTR [rip+0x170dc],eax        # 0x100038a30
   100021954:	mov    eax,DWORD PTR [rip+0xfffffffffffe0e6a]        # 0x1000027c4
   10002195a:	mov    DWORD PTR [rip+0x170d4],eax        # 0x100038a34
   100021960:	ret    
   100021961:	nop
   100021962:	nop
   100021963:	nop
   100021964:	nop
   100021965:	nop
   100021966:	nop
   100021967:	nop
   100021968:	nop
   100021969:	nop
   10002196a:	nop
   10002196b:	nop
   10002196c:	nop
   10002196d:	nop
   10002196e:	nop
   10002196f:	nop
   100021970:	mov    eax,DWORD PTR [rip+0x8526]        # 0x100029e9c
   100021976:	add    eax,0x3
   100021979:	mov    DWORD PTR [rip+0x170b9],eax        # 0x100038a38
   10002197f:	ret    
   100021980:	nop
   100021981:	nop
   100021982:	nop
   100021983:	nop
   100021984:	nop
   100021985:	nop
   100021986:	nop
   100021987:	nop
   100021988:	nop
   100021989:	nop
   10002198a:	nop
   10002198b:	nop
   10002198c:	nop
   10002198d:	nop
   10002198e:	nop
   10002198f:	nop
   100021990:	lea    rcx,[rip+0x171b9]        # 0x100038b50
   100021997:	mov    edx,0x33000
   10002199c:	mov    r9d,0x38
   1000219a2:	mov    r8d,0x33400
   1000219a8:	rex.W jmp QWORD PTR [rip+0xfffffffffffe0479]        # 0x100001e28
   1000219af:	nop
   1000219b0:	nop
   1000219b1:	nop
   1000219b2:	nop
   1000219b3:	nop
   1000219b4:	nop
   1000219b5:	nop
   1000219b6:	nop
   1000219b7:	nop
   1000219b8:	nop
   1000219b9:	nop
   1000219ba:	nop
   1000219bb:	nop
   1000219bc:	nop
   1000219bd:	nop
   1000219be:	nop
   1000219bf:	nop
   1000219c0:	lea    rcx,[rip+0x17179]        # 0x100038b40
   1000219c7:	xor    r9d,r9d
   1000219ca:	mov    edx,0x36400
   1000219cf:	mov    r8d,0x32000
   1000219d5:	rex.W jmp QWORD PTR [rip+0xfffffffffffe044c]        # 0x100001e28
   1000219dc:	nop
   1000219dd:	nop
   1000219de:	nop
   1000219df:	nop
   1000219e0:	nop
   1000219e1:	nop
   1000219e2:	nop
   1000219e3:	nop
   1000219e4:	nop
   1000219e5:	nop
   1000219e6:	nop
   1000219e7:	nop
   1000219e8:	nop
   1000219e9:	nop
   1000219ea:	nop
   1000219eb:	nop
   1000219ec:	nop
   1000219ed:	nop
   1000219ee:	nop
   1000219ef:	nop
   1000219f0:	lea    rcx,[rip+0x17199]        # 0x100038b90
   1000219f7:	mov    edx,0x36400
   1000219fc:	mov    r9d,0x98
   100021a02:	mov    r8d,0x36800
   100021a08:	rex.W jmp QWORD PTR [rip+0xfffffffffffe0419]        # 0x100001e28
   100021a0f:	nop
   100021a10:	nop
   100021a11:	nop
   100021a12:	nop
   100021a13:	nop
   100021a14:	nop
   100021a15:	nop
   100021a16:	nop
   100021a17:	nop
   100021a18:	nop
   100021a19:	nop
   100021a1a:	nop
   100021a1b:	nop
   100021a1c:	nop
   100021a1d:	nop
   100021a1e:	nop
   100021a1f:	nop
   100021a20:	lea    rcx,[rip+0x17159]        # 0x100038b80
   100021a27:	xor    r9d,r9d
   100021a2a:	mov    edx,0x34000
   100021a2f:	mov    r8d,0x32400
   100021a35:	rex.W jmp QWORD PTR [rip+0xfffffffffffe03ec]        # 0x100001e28
   100021a3c:	nop
   100021a3d:	nop
   100021a3e:	nop
   100021a3f:	nop
   100021a40:	nop
   100021a41:	nop
   100021a42:	nop
   100021a43:	nop
   100021a44:	nop
   100021a45:	nop
   100021a46:	nop
   100021a47:	nop
   100021a48:	nop
   100021a49:	nop
   100021a4a:	nop
   100021a4b:	nop
   100021a4c:	nop
   100021a4d:	nop
   100021a4e:	nop
   100021a4f:	nop
   100021a50:	lea    rcx,[rip+0x17149]        # 0x100038ba0
   100021a57:	xor    r9d,r9d
   100021a5a:	mov    edx,0x34400
   100021a5f:	mov    r8d,0x34000
   100021a65:	rex.W jmp QWORD PTR [rip+0xfffffffffffe03bc]        # 0x100001e28
   100021a6c:	nop
   100021a6d:	nop
   100021a6e:	nop
   100021a6f:	nop
   100021a70:	nop
   100021a71:	nop
   100021a72:	nop
   100021a73:	nop
   100021a74:	nop
   100021a75:	nop
   100021a76:	nop
   100021a77:	nop
   100021a78:	nop
   100021a79:	nop
   100021a7a:	nop
   100021a7b:	nop
   100021a7c:	nop
   100021a7d:	nop
   100021a7e:	nop
   100021a7f:	nop
   100021a80:	lea    rcx,[rip+0x170e9]        # 0x100038b70
   100021a87:	xor    r9d,r9d
   100021a8a:	mov    edx,0x34800
   100021a8f:	mov    r8d,0x34000
   100021a95:	rex.W jmp QWORD PTR [rip+0xfffffffffffe038c]        # 0x100001e28
   100021a9c:	nop
   100021a9d:	nop
   100021a9e:	nop
   100021a9f:	nop
   100021aa0:	nop
   100021aa1:	nop
   100021aa2:	nop
   100021aa3:	nop
   100021aa4:	nop
   100021aa5:	nop
   100021aa6:	nop
   100021aa7:	nop
   100021aa8:	nop
   100021aa9:	nop
   100021aaa:	nop
   100021aab:	nop
   100021aac:	nop
   100021aad:	nop
   100021aae:	nop
   100021aaf:	nop
   100021ab0:	lea    rcx,[rip+0x170a9]        # 0x100038b60
   100021ab7:	xor    r9d,r9d
   100021aba:	mov    edx,0x34c00
   100021abf:	mov    r8d,0x34000
   100021ac5:	rex.W jmp QWORD PTR [rip+0xfffffffffffe035c]        # 0x100001e28
   100021acc:	nop
   100021acd:	nop
   100021ace:	nop
   100021acf:	nop
   100021ad0:	nop
   100021ad1:	nop
   100021ad2:	nop
   100021ad3:	nop
   100021ad4:	nop
   100021ad5:	nop
   100021ad6:	nop
   100021ad7:	nop
   100021ad8:	nop
   100021ad9:	nop
   100021ada:	nop
   100021adb:	nop
   100021adc:	nop
   100021add:	nop
   100021ade:	nop
   100021adf:	nop
   100021ae0:	jmp    0x100016830
   100021ae5:	nop
   100021ae6:	nop
   100021ae7:	nop
   100021ae8:	nop
   100021ae9:	nop
   100021aea:	nop
   100021aeb:	nop
   100021aec:	nop
   100021aed:	nop
   100021aee:	nop
   100021aef:	nop
   100021af0:	mov    eax,DWORD PTR [rip+0xfffffffffffe0cc2]        # 0x1000027b8
   100021af6:	mov    DWORD PTR [rip+0x16f8c],eax        # 0x100038a88
   100021afc:	mov    eax,DWORD PTR [rip+0xfffffffffffe0cba]        # 0x1000027bc
   100021b02:	mov    DWORD PTR [rip+0x16f84],eax        # 0x100038a8c
   100021b08:	mov    eax,DWORD PTR [rip+0xfffffffffffe0cb2]        # 0x1000027c0
   100021b0e:	mov    DWORD PTR [rip+0x16f7c],eax        # 0x100038a90
   100021b14:	mov    eax,DWORD PTR [rip+0xfffffffffffe0caa]        # 0x1000027c4
   100021b1a:	mov    DWORD PTR [rip+0x16f74],eax        # 0x100038a94
   100021b20:	ret    
   100021b21:	nop
   100021b22:	nop
   100021b23:	nop
   100021b24:	nop
   100021b25:	nop
   100021b26:	nop
   100021b27:	nop
   100021b28:	nop
   100021b29:	nop
   100021b2a:	nop
   100021b2b:	nop
   100021b2c:	nop
   100021b2d:	nop
   100021b2e:	nop
   100021b2f:	nop
   100021b30:	mov    eax,DWORD PTR [rip+0xfffffffffffe0c82]        # 0x1000027b8
   100021b36:	mov    DWORD PTR [rip+0x16f3c],eax        # 0x100038a78
   100021b3c:	mov    eax,DWORD PTR [rip+0xfffffffffffe0c7a]        # 0x1000027bc
   100021b42:	mov    DWORD PTR [rip+0x16f34],eax        # 0x100038a7c
   100021b48:	mov    eax,DWORD PTR [rip+0xfffffffffffe0c72]        # 0x1000027c0
   100021b4e:	mov    DWORD PTR [rip+0x16f2c],eax        # 0x100038a80
   100021b54:	mov    eax,DWORD PTR [rip+0xfffffffffffe0c6a]        # 0x1000027c4
   100021b5a:	mov    DWORD PTR [rip+0x16f24],eax        # 0x100038a84
   100021b60:	ret    
   100021b61:	nop
   100021b62:	nop
   100021b63:	nop
   100021b64:	nop
   100021b65:	nop
   100021b66:	nop
   100021b67:	nop
   100021b68:	nop
   100021b69:	nop
   100021b6a:	nop
   100021b6b:	nop
   100021b6c:	nop
   100021b6d:	nop
   100021b6e:	nop
   100021b6f:	nop
   100021b70:	mov    eax,DWORD PTR [rip+0xfffffffffffe0c42]        # 0x1000027b8
   100021b76:	mov    DWORD PTR [rip+0x16ee4],eax        # 0x100038a60
   100021b7c:	mov    eax,DWORD PTR [rip+0xfffffffffffe0c3a]        # 0x1000027bc
   100021b82:	mov    DWORD PTR [rip+0x16edc],eax        # 0x100038a64
   100021b88:	mov    eax,DWORD PTR [rip+0xfffffffffffe0c32]        # 0x1000027c0
   100021b8e:	mov    DWORD PTR [rip+0x16ed4],eax        # 0x100038a68
   100021b94:	mov    eax,DWORD PTR [rip+0xfffffffffffe0c2a]        # 0x1000027c4
   100021b9a:	mov    DWORD PTR [rip+0x16ecc],eax        # 0x100038a6c
   100021ba0:	ret    
   100021ba1:	nop
   100021ba2:	nop
   100021ba3:	nop
   100021ba4:	nop
   100021ba5:	nop
   100021ba6:	nop
   100021ba7:	nop
   100021ba8:	nop
   100021ba9:	nop
   100021baa:	nop
   100021bab:	nop
   100021bac:	nop
   100021bad:	nop
   100021bae:	nop
   100021baf:	nop
   100021bb0:	mov    eax,DWORD PTR [rip+0x82ea]        # 0x100029ea0
   100021bb6:	add    eax,0x3
   100021bb9:	mov    DWORD PTR [rip+0x16eb1],eax        # 0x100038a70
   100021bbf:	ret    
   100021bc0:	nop
   100021bc1:	nop
   100021bc2:	nop
   100021bc3:	nop
   100021bc4:	nop
   100021bc5:	nop
   100021bc6:	nop
   100021bc7:	nop
   100021bc8:	nop
   100021bc9:	nop
   100021bca:	nop
   100021bcb:	nop
   100021bcc:	nop
   100021bcd:	nop
   100021bce:	nop
   100021bcf:	nop
   100021bd0:	mov    rax,QWORD PTR [rip+0xfffffffffffe0319]        # 0x100001ef0
   100021bd7:	mov    rcx,QWORD PTR [rax]
   100021bda:	mov    QWORD PTR [rip+0x74df],rcx        # 0x1000290c0
   100021be1:	ret    
   100021be2:	nop
   100021be3:	nop
   100021be4:	nop
   100021be5:	nop
   100021be6:	nop
   100021be7:	nop
   100021be8:	nop
   100021be9:	nop
   100021bea:	nop
   100021beb:	nop
   100021bec:	nop
   100021bed:	nop
   100021bee:	nop
   100021bef:	nop
   100021bf0:	mov    rax,QWORD PTR [rip+0xfffffffffffe0301]        # 0x100001ef8
   100021bf7:	mov    rcx,QWORD PTR [rax]
   100021bfa:	mov    QWORD PTR [rip+0x82c7],rcx        # 0x100029ec8
   100021c01:	ret    
   100021c02:	nop
   100021c03:	nop
   100021c04:	nop
   100021c05:	nop
   100021c06:	nop
   100021c07:	nop
   100021c08:	nop
   100021c09:	nop
   100021c0a:	nop
   100021c0b:	nop
   100021c0c:	nop
   100021c0d:	nop
   100021c0e:	nop
   100021c0f:	nop
   100021c10:	mov    eax,DWORD PTR [rip+0x8292]        # 0x100029ea8
   100021c16:	mov    DWORD PTR [rip+0x16e7c],eax        # 0x100038a98
   100021c1c:	movzx  eax,WORD PTR [rip+0x8289]        # 0x100029eac
   100021c23:	mov    WORD PTR [rip+0x16e72],ax        # 0x100038a9c
   100021c2a:	ret    
   100021c2b:	nop
   100021c2c:	nop
   100021c2d:	nop
   100021c2e:	nop
   100021c2f:	nop
   100021c30:	nop
   100021c31:	nop
   100021c32:	nop
   100021c33:	nop
   100021c34:	nop
   100021c35:	nop
   100021c36:	nop
   100021c37:	nop
   100021c38:	nop
   100021c39:	nop
   100021c3a:	nop
   100021c3b:	nop
   100021c3c:	nop
   100021c3d:	nop
   100021c3e:	nop
   100021c3f:	nop
   100021c40:	mov    rax,QWORD PTR [rip+0x8269]        # 0x100029eb0
   100021c47:	mov    QWORD PTR [rip+0x16e52],rax        # 0x100038aa0
   100021c4e:	ret    
   100021c4f:	nop
   100021c50:	nop
   100021c51:	nop
   100021c52:	nop
   100021c53:	nop
   100021c54:	nop
   100021c55:	nop
   100021c56:	nop
   100021c57:	nop
   100021c58:	nop
   100021c59:	nop
   100021c5a:	nop
   100021c5b:	nop
   100021c5c:	nop
   100021c5d:	nop
   100021c5e:	nop
   100021c5f:	nop
   100021c60:	mov    eax,DWORD PTR [rip+0xfffffffffffe0b52]        # 0x1000027b8
   100021c66:	mov    DWORD PTR [rip+0x16e5c],eax        # 0x100038ac8
   100021c6c:	mov    eax,DWORD PTR [rip+0xfffffffffffe0b4a]        # 0x1000027bc
   100021c72:	mov    DWORD PTR [rip+0x16e54],eax        # 0x100038acc
   100021c78:	mov    eax,DWORD PTR [rip+0xfffffffffffe0b42]        # 0x1000027c0
   100021c7e:	mov    DWORD PTR [rip+0x16e4c],eax        # 0x100038ad0
   100021c84:	mov    eax,DWORD PTR [rip+0xfffffffffffe0b3a]        # 0x1000027c4
   100021c8a:	mov    DWORD PTR [rip+0x16e44],eax        # 0x100038ad4
   100021c90:	ret    
   100021c91:	nop
   100021c92:	nop
   100021c93:	nop
   100021c94:	nop
   100021c95:	nop
   100021c96:	nop
   100021c97:	nop
   100021c98:	nop
   100021c99:	nop
   100021c9a:	nop
   100021c9b:	nop
   100021c9c:	nop
   100021c9d:	nop
   100021c9e:	nop
   100021c9f:	nop
   100021ca0:	mov    eax,DWORD PTR [rip+0xfffffffffffe0b12]        # 0x1000027b8
   100021ca6:	mov    DWORD PTR [rip+0x16e0c],eax        # 0x100038ab8
   100021cac:	mov    eax,DWORD PTR [rip+0xfffffffffffe0b0a]        # 0x1000027bc
   100021cb2:	mov    DWORD PTR [rip+0x16e04],eax        # 0x100038abc
   100021cb8:	mov    eax,DWORD PTR [rip+0xfffffffffffe0b02]        # 0x1000027c0
   100021cbe:	mov    DWORD PTR [rip+0x16dfc],eax        # 0x100038ac0
   100021cc4:	mov    eax,DWORD PTR [rip+0xfffffffffffe0afa]        # 0x1000027c4
   100021cca:	mov    DWORD PTR [rip+0x16df4],eax        # 0x100038ac4
   100021cd0:	ret    
   100021cd1:	nop
   100021cd2:	nop
   100021cd3:	nop
   100021cd4:	nop
   100021cd5:	nop
   100021cd6:	nop
   100021cd7:	nop
   100021cd8:	nop
   100021cd9:	nop
   100021cda:	nop
   100021cdb:	nop
   100021cdc:	nop
   100021cdd:	nop
   100021cde:	nop
   100021cdf:	nop
   100021ce0:	mov    eax,DWORD PTR [rip+0xfffffffffffe0ad2]        # 0x1000027b8
   100021ce6:	mov    DWORD PTR [rip+0x16dbc],eax        # 0x100038aa8
   100021cec:	mov    eax,DWORD PTR [rip+0xfffffffffffe0aca]        # 0x1000027bc
   100021cf2:	mov    DWORD PTR [rip+0x16db4],eax        # 0x100038aac
   100021cf8:	mov    eax,DWORD PTR [rip+0xfffffffffffe0ac2]        # 0x1000027c0
   100021cfe:	mov    DWORD PTR [rip+0x16dac],eax        # 0x100038ab0
   100021d04:	mov    eax,DWORD PTR [rip+0xfffffffffffe0aba]        # 0x1000027c4
   100021d0a:	mov    DWORD PTR [rip+0x16da4],eax        # 0x100038ab4
   100021d10:	ret    
   100021d11:	nop
   100021d12:	nop
   100021d13:	nop
   100021d14:	nop
   100021d15:	nop
   100021d16:	nop
   100021d17:	nop
   100021d18:	nop
   100021d19:	nop
   100021d1a:	nop
   100021d1b:	nop
   100021d1c:	nop
   100021d1d:	nop
   100021d1e:	nop
   100021d1f:	nop
   100021d20:	sub    rsp,0x28
   100021d24:	call   0x10001a3a0
   100021d29:	mov    DWORD PTR [rip+0x81fd],eax        # 0x100029f2c
   100021d2f:	add    rsp,0x28
   100021d33:	ret    
   100021d34:	nop
   100021d35:	nop
   100021d36:	nop
   100021d37:	nop
   100021d38:	nop
   100021d39:	nop
   100021d3a:	nop
   100021d3b:	nop
   100021d3c:	nop
   100021d3d:	nop
   100021d3e:	nop
   100021d3f:	nop
   100021d40:	sub    rsp,0x38
   100021d44:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   100021d4d:	lea    rcx,[rip+0xb1fc]        # 0x10002cf50
   100021d54:	add    rsp,0x38
   100021d58:	rex.W jmp QWORD PTR [rip+0xfffffffffffdff01]        # 0x100001c60
   100021d5f:	nop
   100021d60:	nop
   100021d61:	nop
   100021d62:	nop
   100021d63:	nop
   100021d64:	nop
   100021d65:	nop
   100021d66:	nop
   100021d67:	nop
   100021d68:	nop
   100021d69:	nop
   100021d6a:	nop
   100021d6b:	nop
   100021d6c:	nop
   100021d6d:	nop
   100021d6e:	nop
   100021d6f:	nop
   100021d70:	sub    rsp,0x18
   100021d74:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   100021d7c:	mov    rcx,QWORD PTR [rip+0xb86d]        # 0x10002d5f0
   100021d83:	test   rcx,rcx
   100021d86:	je     0x100021da6
   100021d88:	mov    rax,QWORD PTR [rip+0xb859]        # 0x10002d5e8
   100021d8f:	mov    QWORD PTR [rax+0x8],rcx
   100021d93:	mov    QWORD PTR [rcx],rax
   100021d96:	xor    eax,eax
   100021d98:	mov    QWORD PTR [rip+0xb851],rax        # 0x10002d5f0
   100021d9f:	mov    QWORD PTR [rip+0xb842],rax        # 0x10002d5e8
   100021da6:	add    rsp,0x18
   100021daa:	ret    
   100021dab:	nop
   100021dac:	nop
   100021dad:	nop
   100021dae:	nop
   100021daf:	nop
   100021db0:	nop
   100021db1:	nop
   100021db2:	nop
   100021db3:	nop
   100021db4:	nop
   100021db5:	nop
   100021db6:	nop
   100021db7:	nop
   100021db8:	nop
   100021db9:	nop
   100021dba:	nop
   100021dbb:	nop
   100021dbc:	nop
   100021dbd:	nop
   100021dbe:	nop
   100021dbf:	nop
   100021dc0:	sub    rsp,0x18
   100021dc4:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   100021dcc:	mov    rcx,QWORD PTR [rip+0xb835]        # 0x10002d608
   100021dd3:	test   rcx,rcx
   100021dd6:	je     0x100021df6
   100021dd8:	mov    rax,QWORD PTR [rip+0xb821]        # 0x10002d600
   100021ddf:	mov    QWORD PTR [rax+0x8],rcx
   100021de3:	mov    QWORD PTR [rcx],rax
   100021de6:	xor    eax,eax
   100021de8:	mov    QWORD PTR [rip+0xb819],rax        # 0x10002d608
   100021def:	mov    QWORD PTR [rip+0xb80a],rax        # 0x10002d600
   100021df6:	add    rsp,0x18
   100021dfa:	ret    
   100021dfb:	nop
   100021dfc:	nop
   100021dfd:	nop
   100021dfe:	nop
   100021dff:	nop
   100021e00:	nop
   100021e01:	nop
   100021e02:	nop
   100021e03:	nop
   100021e04:	nop
   100021e05:	nop
   100021e06:	nop
   100021e07:	nop
   100021e08:	nop
   100021e09:	nop
   100021e0a:	nop
   100021e0b:	nop
   100021e0c:	nop
   100021e0d:	nop
   100021e0e:	nop
   100021e0f:	nop
   100021e10:	sub    rsp,0x18
   100021e14:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   100021e1c:	mov    rcx,QWORD PTR [rip+0x7a5d]        # 0x100029880
   100021e23:	test   rcx,rcx
   100021e26:	je     0x100021e46
   100021e28:	mov    rax,QWORD PTR [rip+0x7a49]        # 0x100029878
   100021e2f:	mov    QWORD PTR [rax+0x8],rcx
   100021e33:	mov    QWORD PTR [rcx],rax
   100021e36:	xor    eax,eax
   100021e38:	mov    QWORD PTR [rip+0x7a41],rax        # 0x100029880
   100021e3f:	mov    QWORD PTR [rip+0x7a32],rax        # 0x100029878
   100021e46:	add    rsp,0x18
   100021e4a:	ret    
   100021e4b:	nop
   100021e4c:	nop
   100021e4d:	nop
   100021e4e:	nop
   100021e4f:	nop
   100021e50:	nop
   100021e51:	nop
   100021e52:	nop
   100021e53:	nop
   100021e54:	nop
   100021e55:	nop
   100021e56:	nop
   100021e57:	nop
   100021e58:	nop
   100021e59:	nop
   100021e5a:	nop
   100021e5b:	nop
   100021e5c:	nop
   100021e5d:	nop
   100021e5e:	nop
   100021e5f:	nop
   100021e60:	sub    rsp,0x18
   100021e64:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   100021e6c:	mov    rcx,QWORD PTR [rip+0x7a25]        # 0x100029898
   100021e73:	test   rcx,rcx
   100021e76:	je     0x100021e96
   100021e78:	mov    rax,QWORD PTR [rip+0x7a11]        # 0x100029890
   100021e7f:	mov    QWORD PTR [rax+0x8],rcx
   100021e83:	mov    QWORD PTR [rcx],rax
   100021e86:	xor    eax,eax
   100021e88:	mov    QWORD PTR [rip+0x7a09],rax        # 0x100029898
   100021e8f:	mov    QWORD PTR [rip+0x79fa],rax        # 0x100029890
   100021e96:	add    rsp,0x18
   100021e9a:	ret    
   100021e9b:	nop
   100021e9c:	nop
   100021e9d:	nop
   100021e9e:	nop
   100021e9f:	nop
   100021ea0:	nop
   100021ea1:	nop
   100021ea2:	nop
   100021ea3:	nop
   100021ea4:	nop
   100021ea5:	nop
   100021ea6:	nop
   100021ea7:	nop
   100021ea8:	nop
   100021ea9:	nop
   100021eaa:	nop
   100021eab:	nop
   100021eac:	nop
   100021ead:	nop
   100021eae:	nop
   100021eaf:	nop
   100021eb0:	sub    rsp,0x18
   100021eb4:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   100021ebc:	mov    rcx,QWORD PTR [rip+0x79ed]        # 0x1000298b0
   100021ec3:	test   rcx,rcx
   100021ec6:	je     0x100021ee6
   100021ec8:	mov    rax,QWORD PTR [rip+0x79d9]        # 0x1000298a8
   100021ecf:	mov    QWORD PTR [rax+0x8],rcx
   100021ed3:	mov    QWORD PTR [rcx],rax
   100021ed6:	xor    eax,eax
   100021ed8:	mov    QWORD PTR [rip+0x79d1],rax        # 0x1000298b0
   100021edf:	mov    QWORD PTR [rip+0x79c2],rax        # 0x1000298a8
   100021ee6:	add    rsp,0x18
   100021eea:	ret    
   100021eeb:	nop
   100021eec:	nop
   100021eed:	nop
   100021eee:	nop
   100021eef:	nop
   100021ef0:	nop
   100021ef1:	nop
   100021ef2:	nop
   100021ef3:	nop
   100021ef4:	nop
   100021ef5:	nop
   100021ef6:	nop
   100021ef7:	nop
   100021ef8:	nop
   100021ef9:	nop
   100021efa:	nop
   100021efb:	nop
   100021efc:	nop
   100021efd:	nop
   100021efe:	nop
   100021eff:	nop
   100021f00:	sub    rsp,0x18
   100021f04:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   100021f0c:	mov    rcx,QWORD PTR [rip+0x79b5]        # 0x1000298c8
   100021f13:	test   rcx,rcx
   100021f16:	je     0x100021f36
   100021f18:	mov    rax,QWORD PTR [rip+0x79a1]        # 0x1000298c0
   100021f1f:	mov    QWORD PTR [rax+0x8],rcx
   100021f23:	mov    QWORD PTR [rcx],rax
   100021f26:	xor    eax,eax
   100021f28:	mov    QWORD PTR [rip+0x7999],rax        # 0x1000298c8
   100021f2f:	mov    QWORD PTR [rip+0x798a],rax        # 0x1000298c0
   100021f36:	add    rsp,0x18
   100021f3a:	ret    
   100021f3b:	nop
   100021f3c:	nop
   100021f3d:	nop
   100021f3e:	nop
   100021f3f:	nop
   100021f40:	nop
   100021f41:	nop
   100021f42:	nop
   100021f43:	nop
   100021f44:	nop
   100021f45:	nop
   100021f46:	nop
   100021f47:	nop
   100021f48:	nop
   100021f49:	nop
   100021f4a:	nop
   100021f4b:	nop
   100021f4c:	nop
   100021f4d:	nop
   100021f4e:	nop
   100021f4f:	nop
   100021f50:	sub    rsp,0x18
   100021f54:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   100021f5c:	mov    rcx,QWORD PTR [rip+0xb6bd]        # 0x10002d620
   100021f63:	test   rcx,rcx
   100021f66:	je     0x100021f86
   100021f68:	mov    rax,QWORD PTR [rip+0xb6a9]        # 0x10002d618
   100021f6f:	mov    QWORD PTR [rax+0x8],rcx
   100021f73:	mov    QWORD PTR [rcx],rax
   100021f76:	xor    eax,eax
   100021f78:	mov    QWORD PTR [rip+0xb6a1],rax        # 0x10002d620
   100021f7f:	mov    QWORD PTR [rip+0xb692],rax        # 0x10002d618
   100021f86:	add    rsp,0x18
   100021f8a:	ret    
   100021f8b:	nop
   100021f8c:	nop
   100021f8d:	nop
   100021f8e:	nop
   100021f8f:	nop
   100021f90:	nop
   100021f91:	nop
   100021f92:	nop
   100021f93:	nop
   100021f94:	nop
   100021f95:	nop
   100021f96:	nop
   100021f97:	nop
   100021f98:	nop
   100021f99:	nop
   100021f9a:	nop
   100021f9b:	nop
   100021f9c:	nop
   100021f9d:	nop
   100021f9e:	nop
   100021f9f:	nop
   100021fa0:	sub    rsp,0x18
   100021fa4:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   100021fac:	mov    rcx,QWORD PTR [rip+0x7125]        # 0x1000290d8
   100021fb3:	test   rcx,rcx
   100021fb6:	je     0x100021fd6
   100021fb8:	mov    rax,QWORD PTR [rip+0x7111]        # 0x1000290d0
   100021fbf:	mov    QWORD PTR [rax+0x8],rcx
   100021fc3:	mov    QWORD PTR [rcx],rax
   100021fc6:	xor    eax,eax
   100021fc8:	mov    QWORD PTR [rip+0x7109],rax        # 0x1000290d8
   100021fcf:	mov    QWORD PTR [rip+0x70fa],rax        # 0x1000290d0
   100021fd6:	add    rsp,0x18
   100021fda:	ret    
   100021fdb:	nop
   100021fdc:	nop
   100021fdd:	nop
   100021fde:	nop
   100021fdf:	nop
   100021fe0:	nop
   100021fe1:	nop
   100021fe2:	nop
   100021fe3:	nop
   100021fe4:	nop
   100021fe5:	nop
   100021fe6:	nop
   100021fe7:	nop
   100021fe8:	nop
   100021fe9:	nop
   100021fea:	nop
   100021feb:	nop
   100021fec:	nop
   100021fed:	nop
   100021fee:	nop
   100021fef:	nop
   100021ff0:	sub    rsp,0x18
   100021ff4:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   100021ffc:	mov    rcx,QWORD PTR [rip+0x78e5]        # 0x1000298e8
   100022003:	test   rcx,rcx
   100022006:	je     0x100022026
   100022008:	mov    rax,QWORD PTR [rip+0x78d1]        # 0x1000298e0
   10002200f:	mov    QWORD PTR [rax+0x8],rcx
   100022013:	mov    QWORD PTR [rcx],rax
   100022016:	xor    eax,eax
   100022018:	mov    QWORD PTR [rip+0x78c9],rax        # 0x1000298e8
   10002201f:	mov    QWORD PTR [rip+0x78ba],rax        # 0x1000298e0
   100022026:	add    rsp,0x18
   10002202a:	ret    
   10002202b:	nop
   10002202c:	nop
   10002202d:	nop
   10002202e:	nop
   10002202f:	nop
   100022030:	nop
   100022031:	nop
   100022032:	nop
   100022033:	nop
   100022034:	nop
   100022035:	nop
   100022036:	nop
   100022037:	nop
   100022038:	nop
   100022039:	nop
   10002203a:	nop
   10002203b:	nop
   10002203c:	nop
   10002203d:	nop
   10002203e:	nop
   10002203f:	nop
   100022040:	sub    rsp,0x18
   100022044:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   10002204c:	mov    rcx,QWORD PTR [rip+0x78ad]        # 0x100029900
   100022053:	test   rcx,rcx
   100022056:	je     0x100022076
   100022058:	mov    rax,QWORD PTR [rip+0x7899]        # 0x1000298f8
   10002205f:	mov    QWORD PTR [rax+0x8],rcx
   100022063:	mov    QWORD PTR [rcx],rax
   100022066:	xor    eax,eax
   100022068:	mov    QWORD PTR [rip+0x7891],rax        # 0x100029900
   10002206f:	mov    QWORD PTR [rip+0x7882],rax        # 0x1000298f8
   100022076:	add    rsp,0x18
   10002207a:	ret    
   10002207b:	nop
   10002207c:	nop
   10002207d:	nop
   10002207e:	nop
   10002207f:	nop
   100022080:	nop
   100022081:	nop
   100022082:	nop
   100022083:	nop
   100022084:	nop
   100022085:	nop
   100022086:	nop
   100022087:	nop
   100022088:	nop
   100022089:	nop
   10002208a:	nop
   10002208b:	nop
   10002208c:	nop
   10002208d:	nop
   10002208e:	nop
   10002208f:	nop
   100022090:	sub    rsp,0x18
   100022094:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   10002209c:	mov    rcx,QWORD PTR [rip+0xb595]        # 0x10002d638
   1000220a3:	test   rcx,rcx
   1000220a6:	je     0x1000220c6
   1000220a8:	mov    rax,QWORD PTR [rip+0xb581]        # 0x10002d630
   1000220af:	mov    QWORD PTR [rax+0x8],rcx
   1000220b3:	mov    QWORD PTR [rcx],rax
   1000220b6:	xor    eax,eax
   1000220b8:	mov    QWORD PTR [rip+0xb579],rax        # 0x10002d638
   1000220bf:	mov    QWORD PTR [rip+0xb56a],rax        # 0x10002d630
   1000220c6:	add    rsp,0x18
   1000220ca:	ret    
   1000220cb:	nop
   1000220cc:	nop
   1000220cd:	nop
   1000220ce:	nop
   1000220cf:	nop
   1000220d0:	nop
   1000220d1:	nop
   1000220d2:	nop
   1000220d3:	nop
   1000220d4:	nop
   1000220d5:	nop
   1000220d6:	nop
   1000220d7:	nop
   1000220d8:	nop
   1000220d9:	nop
   1000220da:	nop
   1000220db:	nop
   1000220dc:	nop
   1000220dd:	nop
   1000220de:	nop
   1000220df:	nop
   1000220e0:	sub    rsp,0x18
   1000220e4:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   1000220ec:	mov    rcx,QWORD PTR [rip+0x7825]        # 0x100029918
   1000220f3:	test   rcx,rcx
   1000220f6:	je     0x100022116
   1000220f8:	mov    rax,QWORD PTR [rip+0x7811]        # 0x100029910
   1000220ff:	mov    QWORD PTR [rax+0x8],rcx
   100022103:	mov    QWORD PTR [rcx],rax
   100022106:	xor    eax,eax
   100022108:	mov    QWORD PTR [rip+0x7809],rax        # 0x100029918
   10002210f:	mov    QWORD PTR [rip+0x77fa],rax        # 0x100029910
   100022116:	add    rsp,0x18
   10002211a:	ret    
   10002211b:	nop
   10002211c:	nop
   10002211d:	nop
   10002211e:	nop
   10002211f:	nop
   100022120:	nop
   100022121:	nop
   100022122:	nop
   100022123:	nop
   100022124:	nop
   100022125:	nop
   100022126:	nop
   100022127:	nop
   100022128:	nop
   100022129:	nop
   10002212a:	nop
   10002212b:	nop
   10002212c:	nop
   10002212d:	nop
   10002212e:	nop
   10002212f:	nop
   100022130:	sub    rsp,0x38
   100022134:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   10002213d:	lea    rcx,[rip+0xb50c]        # 0x10002d650
   100022144:	add    rsp,0x38
   100022148:	rex.W jmp QWORD PTR [rip+0xfffffffffffdf361]        # 0x1000014b0
   10002214f:	nop
   100022150:	nop
   100022151:	nop
   100022152:	nop
   100022153:	nop
   100022154:	nop
   100022155:	nop
   100022156:	nop
   100022157:	nop
   100022158:	nop
   100022159:	nop
   10002215a:	nop
   10002215b:	nop
   10002215c:	nop
   10002215d:	nop
   10002215e:	nop
   10002215f:	nop
   100022160:	lea    rcx,[rip+0x77f9]        # 0x100029960
   100022167:	jmp    0x10000eed0
   10002216c:	nop
   10002216d:	nop
   10002216e:	nop
   10002216f:	nop
   100022170:	nop
   100022171:	nop
   100022172:	nop
   100022173:	nop
   100022174:	nop
   100022175:	nop
   100022176:	nop
   100022177:	nop
   100022178:	nop
   100022179:	nop
   10002217a:	nop
   10002217b:	nop
   10002217c:	nop
   10002217d:	nop
   10002217e:	nop
   10002217f:	nop
   100022180:	lea    rcx,[rip+0x7859]        # 0x1000299e0
   100022187:	jmp    0x10000eed0
   10002218c:	nop
   10002218d:	nop
   10002218e:	nop
   10002218f:	nop
   100022190:	nop
   100022191:	nop
   100022192:	nop
   100022193:	nop
   100022194:	nop
   100022195:	nop
   100022196:	nop
   100022197:	nop
   100022198:	nop
   100022199:	nop
   10002219a:	nop
   10002219b:	nop
   10002219c:	nop
   10002219d:	nop
   10002219e:	nop
   10002219f:	nop
   1000221a0:	sub    rsp,0x28
   1000221a4:	mov    rcx,QWORD PTR [rip+0x16755]        # 0x100038900
   1000221ab:	cmp    rcx,0xffffffffffffffff
   1000221af:	je     0x1000221bd
   1000221b1:	call   QWORD PTR [rip+0xfffffffffffdf351]        # 0x100001508
   1000221b7:	mov    DWORD PTR [rip+0x1674b],eax        # 0x100038908
   1000221bd:	add    rsp,0x28
   1000221c1:	ret    
   1000221c2:	nop
   1000221c3:	nop
   1000221c4:	add    BYTE PTR [rax],al
   1000221c6:	add    BYTE PTR [rax],al
   1000221c8:	outs   dx,BYTE PTR ds:[rsi]
   1000221c9:	rex.WB
   1000221ca:	rex.WRXB add BYTE PTR ss:[r8],r8b
   1000221ce:	add    BYTE PTR [rax],al
   1000221d0:	pop    rsp
   1000221d1:	and    al,BYTE PTR [rdx]
   1000221d3:	add    BYTE PTR [rcx],al
   1000221d5:	add    BYTE PTR [rax],al
   1000221d7:	add    BYTE PTR [rax],cl
   1000221d9:	add    BYTE PTR [rax],al
   1000221db:	add    BYTE PTR [rax],cl
   1000221dd:	add    BYTE PTR [rax],al
   1000221df:	add    ah,ch
   1000221e1:	and    DWORD PTR [rdx],eax
   1000221e3:	add    BYTE PTR [rdx+riz*1],cl
   1000221e6:	add    al,BYTE PTR [rax]
   1000221e8:	rex.WR and r8b,BYTE PTR [rdx]
   1000221eb:	add    BYTE PTR [rax],al
   1000221ed:	repz add DWORD PTR [rax],eax
   1000221f0:	rex mov esi,0xbef00001
   1000221f6:	add    DWORD PTR [rax],eax
   1000221f8:	adc    dl,dh
   1000221fa:	add    DWORD PTR [rax],eax
   1000221fc:	sbb    al,0xf2
   1000221fe:	add    DWORD PTR [rax],eax
   100022200:	sub    dl,dh
   100022202:	add    DWORD PTR [rax],eax
   100022204:	xor    al,0xf2
   100022206:	add    DWORD PTR [rax],eax
   100022208:	mov    al,0x5a
   10002220a:	add    BYTE PTR [rax],al
   10002220c:	imul   esp,DWORD PTR [rdx],0x227a0002
   100022212:	add    al,BYTE PTR [rax]
   100022214:	lea    esp,[rdx]
   100022216:	add    al,BYTE PTR [rax]
   100022218:	movabs ds:0xc8000222b8000222,al
   100022221:	and    al,BYTE PTR [rdx]
   100022223:	add    bh,bl
   100022225:	and    al,BYTE PTR [rdx]
   100022227:	add    dh,dh
   100022229:	and    al,BYTE PTR [rdx]
	...
   10002224b:	add    BYTE PTR [rax],al
   10002224d:	add    BYTE PTR [rcx],al
   10002224f:	add    BYTE PTR [rdx],al
   100022251:	add    BYTE PTR [rbx],al
   100022253:	add    BYTE PTR [rax+rax*1],al
   100022256:	add    eax,0x7000600
   10002225b:	add    BYTE PTR [rbx+0x71],dh
   10002225e:	ins    BYTE PTR es:[rdi],dx
   10002225f:	jae    0x1000222c6
   100022261:	jb     0x1000222d9
   100022263:	jb     0x100022293
   100022265:	gs js  0x1000222cd
   100022268:	add    BYTE PTR [rdi],bh
   10002226a:	push   rbx
   10002226b:	push   rcx
   10002226c:	rex.WR
   10002226d:	rex.RB js 0x1000222d9
   100022270:	je     0x1000222b2
   100022272:	rex pop rcx
   100022274:	pop    r8
   100022276:	rex.WXB
   100022277:	rex pop rdx
   100022279:	add    BYTE PTR [rbp+rbp*2+0x70],al
   10002227d:	rex.RXB
   10002227e:	gs je  0x1000222c4
   100022281:	ins    BYTE PTR es:[rdi],dx
   100022282:	imul   esp,DWORD PTR [rbp+0x6e],0x70784574
   100022289:	outs   dx,DWORD PTR ds:[rsi]
   10002228a:	jb     0x100022300
   10002228c:	add    BYTE PTR [rbp+rbp*2+0x70],al
   100022290:	push   rdx
   100022291:	gs ins DWORD PTR es:[rdi],dx
   100022293:	outs   dx,DWORD PTR ds:[rsi]
   100022294:	je     0x1000222fb
   100022296:	rex.R jne 0x100022306
   100022299:	jo     0x1000222ed
   10002229b:	gs jno 0x100022313
   10002229e:	gs jae 0x100022315
   1000222a1:	add    BYTE PTR [rdi+0x65],al
   1000222a4:	je     0x1000222ef
   1000222a6:	rex.WRB (bad) 
   1000222a8:	ins    BYTE PTR es:[rdi],dx
   1000222a9:	ins    BYTE PTR es:[rdi],dx
   1000222aa:	outs   dx,DWORD PTR ds:[rsi]
   1000222ab:	movsxd eax,DWORD PTR [rsi+0x6f]
   1000222ae:	jb     0x1000222fd
   1000222b0:	jae    0x10002232a
   1000222b2:	ins    DWORD PTR es:[rdi],dx
   1000222b3:	ins    BYTE PTR es:[rdi],dx
   1000222b4:	push   rbx
   1000222b5:	push   rcx
   1000222b6:	rex.WR add BYTE PTR [rdi+0x65],r8b
   1000222ba:	je     0x100022305
   1000222bc:	push   rbp
   1000222bd:	rex.WRB push r11
   1000222bf:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1000222c1:	jb     0x100022310
   1000222c3:	jae    0x10002233d
   1000222c5:	ins    DWORD PTR es:[rdi],dx
   1000222c6:	ins    BYTE PTR es:[rdi],dx
   1000222c7:	add    BYTE PTR [rsp+rbp*2+0x73],dl
   1000222cb:	rex.RXB
   1000222cc:	gs je  0x100022325
   1000222cf:	(bad)  
   1000222d0:	ins    BYTE PTR es:[rdi],dx
   1000222d1:	jne    0x100022338
   1000222d3:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1000222d5:	jb     0x100022324
   1000222d7:	jae    0x100022351
   1000222d9:	ins    DWORD PTR es:[rdi],dx
   1000222da:	ins    BYTE PTR es:[rdi],dx
   1000222db:	push   rbx
   1000222dc:	push   rcx
   1000222dd:	rex.WR add BYTE PTR [rsp+rbp*2+0x73],r10b
   1000222e2:	push   rbx
   1000222e3:	gs je  0x10002233c
   1000222e6:	(bad)  
   1000222e7:	ins    BYTE PTR es:[rdi],dx
   1000222e8:	jne    0x10002234f
   1000222ea:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1000222ec:	jb     0x10002233b
   1000222ee:	jae    0x100022368
   1000222f0:	ins    DWORD PTR es:[rdi],dx
   1000222f1:	ins    BYTE PTR es:[rdi],dx
   1000222f2:	push   rbx
   1000222f3:	push   rcx
   1000222f4:	rex.WR add BYTE PTR [rdi+0x5f],r11b
   1000222f8:	pop    rdi
   1000222f9:	pop    rdi
   1000222fa:	pop    rdi
   1000222fb:	pop    rdi
   1000222fc:	push   rbx
   1000222fd:	push   rcx
   1000222fe:	rex.WR pop rdi
   100022300:	pop    rdi
   100022301:	pop    rdi
   100022302:	pop    rdi
   100022303:	pop    rdi
   100022304:	pop    rdi
   100022305:	push   rax
   100022306:	jb     0x100022377
   100022308:	movsxd esp,DWORD PTR [rbp+0x73]
   10002230b:	jae    0x10002236c
   10002230d:	pop    rdi
   10002230e:	pop    rdi
   10002230f:	pop    rdi
   100022310:	pop    rdi
   100022311:	pop    rdi
   100022312:	rex.B jbe 0x100022376
   100022315:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x100656c
   10002231d:	add    BYTE PTR [rax],al
   10002231f:	add    al,ah
   100022321:	and    eax,DWORD PTR [rdx]
   100022323:	add    BYTE PTR [rax],cl
   100022325:	lahf   
   100022326:	add    al,BYTE PTR [rax]
   100022328:	add    BYTE PTR [rax+0x24500002],dl
   10002232e:	add    al,BYTE PTR [rax]
	...
   10002233c:	add    DWORD PTR [rax],eax
   10002233e:	add    BYTE PTR [rax],al
   100022340:	lock and eax,DWORD PTR [rdx]
   100022343:	add    BYTE PTR [rax],dl
   100022345:	lahf   
   100022346:	add    al,BYTE PTR [rax]
   100022348:	and    BYTE PTR [rax+0x24700002],dl
   10002234e:	add    al,BYTE PTR [rax]
	...
   10002235c:	add    DWORD PTR [rax],eax
   10002235e:	add    BYTE PTR [rax],al
   100022360:	add    BYTE PTR [rdx+rax*1],ah
   100022363:	add    BYTE PTR [rax],bl
   100022365:	lahf   
   100022366:	add    al,BYTE PTR [rax]
   100022368:	cmp    BYTE PTR [rax+0x24880002],dl
   10002236e:	add    al,BYTE PTR [rax]
	...
   10002237c:	add    DWORD PTR [rax],eax
   10002237e:	add    BYTE PTR [rax],al
   100022380:	adc    BYTE PTR [rdx+rax*1],ah
   100022383:	add    BYTE PTR [rax-0x5b],ch
   100022386:	add    al,BYTE PTR [rax]
   100022388:	rex.W nop
   10002238a:	add    al,BYTE PTR [rax]
   10002238c:	cwde   
   10002238d:	and    al,0x2
	...
   10002239b:	add    BYTE PTR [rcx],al
   10002239d:	add    BYTE PTR [rax],al
   10002239f:	add    BYTE PTR [rax+0x24],al
   1000223a2:	add    al,BYTE PTR [rax]
   1000223a4:	lock rol BYTE PTR [rdx],0x0
   1000223a8:	cwde   
   1000223a9:	nop
   1000223aa:	add    al,BYTE PTR [rax]
   1000223ac:	call   0x1000225d5
	...
   1000223d9:	add    BYTE PTR [rax],al
   1000223db:	add    BYTE PTR [rax+0x56909090],dl
   1000223e1:	rex.RB push r10
   1000223e3:	push   rbx
   1000223e4:	rex.WB
   1000223e5:	rex.WRXB
   1000223e6:	rex.WRX
   1000223e7:	cs fs ins BYTE PTR es:[rdi],dx
   1000223ea:	ins    BYTE PTR es:[rdi],dx
   1000223eb:	add    BYTE PTR [rax+0x50909090],dl
   1000223f1:	push   rbx
   1000223f2:	push   r8
   1000223f4:	rex.WB
   1000223f5:	cs rex.R
   1000223f7:	rex.WR
   1000223f8:	rex.WR add BYTE PTR [rax-0x6f6f6f70],r10b
   1000223ff:	nop
   100022400:	push   rbp
   100022401:	push   rbx
   100022402:	rex.RB push r10
   100022404:	xor    esi,DWORD PTR [rdx]
   100022406:	cs fs ins BYTE PTR es:[rdi],dx
   100022409:	ins    BYTE PTR es:[rdi],dx
   10002240a:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100022410:	imul   ebp,DWORD PTR [rsi+0x73],0x69706174
   100022417:	xor    DWORD PTR [rcx],esi
   100022419:	xor    BYTE PTR [rsi],ch
   10002241b:	fs ins BYTE PTR es:[rdi],dx
   10002241d:	ins    BYTE PTR es:[rdi],dx
   10002241e:	add    BYTE PTR [rax-0x6f6f6f70],dl
   100022424:	nop
   100022425:	nop
   100022426:	nop
   100022427:	nop
   100022428:	nop
   100022429:	nop
   10002242a:	nop
   10002242b:	nop
   10002242c:	nop
   10002242d:	nop
   10002242e:	nop
   10002242f:	nop
   100022430:	nop
   100022431:	nop
   100022432:	nop
   100022433:	nop
   100022434:	nop
   100022435:	nop
   100022436:	nop
   100022437:	nop
   100022438:	nop
   100022439:	nop
   10002243a:	nop
   10002243b:	nop
   10002243c:	nop
   10002243d:	nop
   10002243e:	nop
   10002243f:	nop
   100022440:	rex.XB
   100022441:	rex.WR
   100022442:	rex.WRXB push r13
   100022444:	rex.R
   100022445:	rex.R
   100022446:	rex.X
   100022447:	rex.RB pop r8
   100022449:	push   rsp
   10002244a:	cs fs ins BYTE PTR es:[rdi],dx
   10002244d:	ins    BYTE PTR es:[rdi],dx
   10002244e:	add    BYTE PTR [rax+0x224f8],dl
   100022454:	add    BYTE PTR [rax],al
   100022456:	add    BYTE PTR [rax],al
   100022458:	or     ah,BYTE PTR [rip+0x2]        # 0x100022460
   10002245e:	add    BYTE PTR [rax],al
   100022460:	and    BYTE PTR [rip+0x2],ah        # 0x100022468
	...
   10002246e:	add    BYTE PTR [rax],al
   100022470:	cmp    ah,BYTE PTR [rip+0x2]        # 0x100022478
   100022476:	add    BYTE PTR [rax],al
   100022478:	push   rdx
   100022479:	and    eax,0x2
	...
   100022486:	add    BYTE PTR [rax],al
   100022488:	push   0x25
   10002248a:	add    al,BYTE PTR [rax]
	...
   100022498:	js     0x1000224bf
   10002249a:	add    al,BYTE PTR [rax]
   10002249c:	add    BYTE PTR [rax],al
   10002249e:	add    BYTE PTR [rax],al
   1000224a0:	mov    fs,WORD PTR [rip+0x2]        # 0x1000224a8
   1000224a6:	add    BYTE PTR [rax],al
   1000224a8:	test   al,0x25
   1000224aa:	add    al,BYTE PTR [rax]
   1000224ac:	add    BYTE PTR [rax],al
   1000224ae:	add    BYTE PTR [rax],al
   1000224b0:	(bad)  
   1000224b1:	and    eax,0x2
   1000224b6:	add    BYTE PTR [rax],al
   1000224b8:	fsub   QWORD PTR [rip+0x2]        # 0x1000224c0
   1000224be:	add    BYTE PTR [rax],al
   1000224c0:	repnz and eax,0x2
   1000224c6:	add    BYTE PTR [rax],al
   1000224c8:	(bad)  
   1000224c9:	add    al,BYTE PTR es:[rax]
   1000224cc:	add    BYTE PTR [rax],al
   1000224ce:	add    BYTE PTR [rax],al
   1000224d0:	sbb    al,0x26
   1000224d2:	add    al,BYTE PTR [rax]
   1000224d4:	add    BYTE PTR [rax],al
   1000224d6:	add    BYTE PTR [rax],al
   1000224d8:	cmp    ah,BYTE PTR [rsi]
   1000224da:	add    al,BYTE PTR [rax]
	...
   1000224e8:	push   rdx
   1000224e9:	add    al,BYTE PTR es:[rax]
	...
   1000224f8:	add    BYTE PTR [rax],al
   1000224fa:	push   rsi
   1000224fb:	gs jb  0x10002254f
   1000224fe:	jne    0x100022565
   100022500:	jb     0x10002257b
   100022502:	push   rsi
   100022503:	(bad)  
   100022504:	ins    BYTE PTR es:[rdi],dx
   100022505:	jne    0x10002256c
   100022507:	push   rdi
   100022508:	add    BYTE PTR [rax],al
   10002250a:	add    BYTE PTR [rax],al
   10002250c:	rex.RXB
   10002250d:	gs je  0x100022556
   100022510:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   100022518:	outs   dx,DWORD PTR ds:[rsi]
   100022519:	outs   dx,BYTE PTR ds:[rsi]
   10002251a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   10002251c:	outs   dx,WORD PTR ds:[rsi]
   10002251e:	push   rdi
   10002251f:	add    BYTE PTR [rax],al
   100022521:	add    BYTE PTR [rdi+0x65],al
   100022524:	je     0x10002256c
   100022526:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   10002252e:	outs   dx,DWORD PTR ds:[rsi]
   10002252f:	outs   dx,BYTE PTR ds:[rsi]
   100022530:	rex.WB outs dx,BYTE PTR ds:[rsi]
   100022532:	outs   dx,WORD PTR ds:[rsi]
   100022534:	push   rbx
   100022535:	imul   edi,DWORD PTR [rdx+0x65],0x57
   10002253c:	rex.RXB
   10002253d:	gs je  0x100022590
   100022540:	jb     0x1000225b1
   100022542:	movsxd esp,DWORD PTR [rbp+0x73]
   100022545:	jae    0x100022594
   100022547:	gs ins DWORD PTR es:[rdi],dx
   100022549:	outs   dx,DWORD PTR ds:[rsi]
   10002254a:	jb     0x1000225c5
   10002254c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   10002254e:	outs   dx,WORD PTR ds:[rsi]
   100022550:	add    BYTE PTR [rax+0x0],dl
   100022553:	add    BYTE PTR [rdi+0x65],al
   100022556:	je     0x1000225a5
   100022558:	outs   dx,DWORD PTR ds:[rsi]
   100022559:	fs jne 0x1000225c8
   10002255c:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x45656d61
   100022566:	js     0x1000225bf
   100022568:	add    BYTE PTR [rax+0x0],dl
   10002256b:	add    BYTE PTR [rbp+0x65],cl
   10002256e:	jae    0x1000225e3
   100022570:	(bad)  
   100022571:	rex.X outs dx,DWORD PTR gs:[esi]
   100022575:	js     0x1000225ce
   100022577:	add    BYTE PTR [rax],al
   100022579:	add    BYTE PTR [rdi+0x65],al
   10002257c:	je     0x1000225c7
   10002257e:	outs   dx,BYTE PTR ds:[rsi]
   10002257f:	jae    0x1000225f5
   100022581:	push   rdx
   100022582:	gs addr32 push rax
   100022585:	(bad)  
   100022586:	je     0x1000225f0
   100022588:	rex.X jns 0x1000225d4
   10002258b:	add    BYTE PTR [rsi+0x0],r13b
   10002258f:	add    BYTE PTR [rdi+0x65],al
   100022592:	je     0x1000225dd
   100022594:	outs   dx,BYTE PTR ds:[rsi]
   100022595:	jae    0x10002260b
   100022597:	push   rdx
   100022598:	outs   dx,DWORD PTR ds:[rsi]
   100022599:	outs   dx,DWORD PTR ds:[rsi]
   10002259a:	je     0x1000225ee
   10002259c:	gs addr32 push rax
   10002259f:	(bad)  
   1000225a0:	je     0x10002260a
   1000225a2:	rex.X jns 0x1000225ee
   1000225a5:	add    BYTE PTR [rax+0x0],r14b
   1000225a9:	add    BYTE PTR [rdi+0x65],al
   1000225ac:	je     0x100022601
   1000225ae:	jbe    0x100022613
   1000225b0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1000225b2:	jae    0x100022628
   1000225b4:	(bad)  
   1000225b5:	outs   dx,BYTE PTR ds:[rsi]
   1000225b6:	movsxd esp,DWORD PTR [rbp+0x49]
   1000225b9:	rex.R
   1000225ba:	rex.RX jb 0x10002262c
   1000225bd:	ins    DWORD PTR es:[rdi],dx
   1000225be:	rex.WRX (bad) 
   1000225c0:	ins    DWORD PTR es:[rdi],dx
   1000225c1:	add    BYTE PTR gs:[rcx],dh
   1000225c4:	add    BYTE PTR [rax],al
   1000225c6:	rex.RXB
   1000225c7:	gs je  0x100022613
   1000225ca:	outs   dx,BYTE PTR ds:[rsi]
   1000225cb:	jae    0x100022641
   1000225cd:	(bad)  
   1000225ce:	outs   dx,BYTE PTR ds:[rsi]
   1000225cf:	movsxd esp,DWORD PTR [rbp+0x4e]
   1000225d2:	(bad)  
   1000225d3:	ins    DWORD PTR es:[rdi],dx
   1000225d4:	gs rex.RX jb 0x100022647
   1000225d8:	ins    DWORD PTR es:[rdi],dx
   1000225d9:	rex.WB
   1000225da:	add    BYTE PTR [rax],r8b
   1000225dd:	add    BYTE PTR [rdi+0x65],al
   1000225e0:	je     0x100022635
   1000225e2:	push   rcx
   1000225e3:	rex.WR push rbx
   1000225e5:	gs jb  0x10002265e
   1000225e8:	gs jb  0x10002262d
   1000225eb:	jns    0x10002263b
   1000225ed:	(bad)  
   1000225ee:	ins    DWORD PTR es:[rdi],dx
   1000225ef:	add    BYTE PTR gs:[rsi+0x0],ch
   1000225f3:	add    BYTE PTR [rdi+0x65],al
   1000225f6:	je     0x10002264b
   1000225f8:	push   rcx
   1000225f9:	rex.WR push rbx
   1000225fb:	gs jb  0x100022674
   1000225fe:	imul   esp,DWORD PTR [rbx+0x65],0x44497942
   100022605:	add    BYTE PTR [rax],al
   100022607:	add    BYTE PTR [rdi+0x65],al
   10002260a:	je     0x10002265f
   10002260c:	push   rcx
   10002260d:	rex.WR push rbx
   10002260f:	gs jb  0x100022688
   100022612:	imul   esp,DWORD PTR [rbx+0x65],0x614e7942
   100022619:	ins    DWORD PTR es:[rdi],dx
   10002261a:	add    BYTE PTR gs:[rax],al
   10002261d:	add    BYTE PTR [rdi+0x65],al
   100022620:	je     0x100022675
   100022622:	jbe    0x100022687
   100022624:	rex.WB outs dx,BYTE PTR ds:[rsi]
   100022626:	jae    0x10002269c
   100022628:	push   rdx
   100022629:	outs   dx,DWORD PTR ds:[rsi]
   10002262a:	outs   dx,DWORD PTR ds:[rsi]
   10002262b:	je     0x10002267f
   10002262d:	gs addr32 push rax
   100022630:	(bad)  
   100022631:	je     0x10002269b
   100022633:	rex.X jns 0x100022684
   100022636:	(bad)  
   100022637:	ins    DWORD PTR es:[rdi],dx
   100022638:	add    BYTE PTR gs:[rax],al
   10002263b:	add    BYTE PTR [rcx+0x73],cl
   10002263e:	rex.R
   10002263f:	gs data16 (bad) 
   100022642:	jne    0x1000226b0
   100022644:	je     0x10002268f
   100022646:	outs   dx,BYTE PTR ds:[rsi]
   100022647:	jae    0x1000226bd
   100022649:	(bad)  
   10002264a:	outs   dx,BYTE PTR ds:[rsi]
   10002264b:	movsxd esp,DWORD PTR [rbp+0x4e]
   10002264e:	(bad)  
   10002264f:	ins    DWORD PTR es:[rdi],dx
   100022650:	add    BYTE PTR gs:[rax],al
   100022653:	add    BYTE PTR [rcx+0x6e],cl
   100022656:	imul   esi,DWORD PTR [rsi+rax*2+0x75],0x6974636e
   10002265e:	outs   dx,DWORD PTR ds:[rsi]
   10002265f:	outs   dx,BYTE PTR ds:[rsi]
   100022660:	jae    0x100022662
   100022662:	nop
   100022663:	nop
   100022664:	adc    BYTE PTR [rax],ch
   100022666:	add    al,BYTE PTR [rax]
	...
   100022670:	cld    
   100022671:	(bad)  
   100022672:	add    al,BYTE PTR [rax]
   100022674:	add    BYTE PTR [rax],dl
   100022676:	add    BYTE PTR [rax],al
   100022678:	jo     0x1000226a2
   10002267a:	add    al,BYTE PTR [rax]
	...
   100022684:	in     al,dx
   100022685:	(bad)  
   100022686:	add    al,BYTE PTR [rax]
   100022688:	(bad)  
   100022689:	adc    BYTE PTR [rax],al
   10002268b:	add    al,bh
   10002268d:	sub    al,BYTE PTR [rdx]
	...
   100022697:	add    ah,bl
   100022699:	(bad)  
   10002269a:	add    al,BYTE PTR [rax]
   10002269c:	call   0xb80226b3
   1000226a1:	sub    al,0x2
	...
   1000226ab:	add    ah,cl
   1000226ad:	(bad)  
   1000226ae:	add    al,BYTE PTR [rax]
   1000226b0:	test   al,0x14
   1000226b2:	add    BYTE PTR [rax],al
   1000226b4:	shr    BYTE PTR [rdx+rax*1],1
	...
   1000226bf:	add    al,al
   1000226c1:	(bad)  
   1000226c2:	add    al,BYTE PTR [rax]
   1000226c4:	rcl    BYTE PTR [rax+rax*1],0x0
   1000226c8:	loopne 0x1000226f6
   1000226ca:	add    al,BYTE PTR [rax]
	...
   1000226d4:	mov    al,0x27
   1000226d6:	add    al,BYTE PTR [rax]
   1000226d8:	rcl    BYTE PTR [rax+rax*1],1
   1000226db:	add    al,bh
   1000226dd:	sub    al,0x2
	...
   1000226e7:	add    BYTE PTR [rax-0x17fffdd9],ch
   1000226ed:	adc    al,0x0
   1000226ef:	add    BYTE PTR [rax],ch
   1000226f1:	sub    eax,0x2
   1000226f6:	add    BYTE PTR [rax],al
   1000226f8:	add    BYTE PTR [rax],al
   1000226fa:	add    BYTE PTR [rax],al
   1000226fc:	cwde   
   1000226fd:	(bad)  
   1000226fe:	add    al,BYTE PTR [rax]
   100022700:	sbb    BYTE PTR [rip+0x2d380000],dl        # 0x12d3a2706
   100022706:	add    al,BYTE PTR [rax]
	...
   100022710:	mov    WORD PTR [rdi],fs
   100022712:	add    al,BYTE PTR [rax]
   100022714:	sub    BYTE PTR [rip+0x2f180000],dl        # 0x12f1a271a
   10002271a:	add    al,BYTE PTR [rax]
	...
   100022724:	and    BYTE PTR [rdi],0x2
   100022727:	add    BYTE PTR [rax],cl
   100022729:	(bad)  
   10002272a:	add    BYTE PTR [rax],al
   10002272c:	mov    al,0x31
   10002272e:	add    al,BYTE PTR [rax]
	...
   100022738:	je     0x100022761
   10002273a:	add    al,BYTE PTR [rax]
   10002273c:	movabs al,ds:0x23210000019
   100022745:	add    BYTE PTR [rax],al
   100022747:	add    BYTE PTR [rax],al
   100022749:	add    BYTE PTR [rax],al
   10002274b:	add    BYTE PTR [rax+0x27],ch
   10002274e:	add    al,BYTE PTR [rax]
   100022750:	add    BYTE PTR [rdx],bl
	...
   100022766:	add    BYTE PTR [rax],al
   100022768:	jae    0x1000227db
   10002276a:	ins    BYTE PTR es:[rdi],dx
   10002276b:	imul   ebp,DWORD PTR fs:[rsi],0x64
   10002276f:	ins    BYTE PTR es:[rdi],dx
   100022770:	ins    BYTE PTR es:[rdi],dx
   100022771:	add    BYTE PTR [rax+0x6c717390],dl
   100022777:	push   rsp
   100022778:	jae    0x1000227bf
   10002277a:	jae    0x1000227aa
   10002277c:	fs ins BYTE PTR es:[rdi],dx
   10002277e:	ins    BYTE PTR es:[rdi],dx
   10002277f:	add    BYTE PTR [rbx+0x71],dh
   100022782:	ins    BYTE PTR es:[rdi],dx
   100022783:	ins    BYTE PTR es:[rdi],dx
   100022784:	(bad)  
   100022785:	outs   dx,BYTE PTR ds:[rsi]
   100022786:	cs fs ins BYTE PTR es:[edi],dx
   10002278a:	ins    BYTE PTR es:[rdi],dx
   10002278b:	add    BYTE PTR [rbx+0x71],dh
   10002278e:	ins    BYTE PTR es:[rdi],dx
   10002278f:	ins    DWORD PTR es:[rdi],dx
   100022790:	imul   ebp,DWORD PTR [rsi+0x2e],0x6c6c64
   100022797:	nop
   100022798:	outs   dx,DWORD PTR ds:[rsi]
   100022799:	jo     0x100022800
   10002279b:	outs   dx,BYTE PTR ds:[rsi]
   10002279c:	fs jae 0x1000227d5
   10002279f:	xor    BYTE PTR [rsi],ch
   1000227a1:	fs ins BYTE PTR es:[rdi],dx
   1000227a3:	ins    BYTE PTR es:[rdi],dx
   1000227a4:	add    BYTE PTR [rax+0x64709090],dl
   1000227aa:	push   0x6c6c642e
   1000227af:	add    BYTE PTR [rsi+0x45],cl
   1000227b2:	push   rsp
   1000227b3:	push   r8
   1000227b5:	xor    rsi,QWORD PTR [r10]
   1000227b8:	cs fs ins BYTE PTR es:[rdi],dx
   1000227bb:	ins    BYTE PTR es:[rdi],dx
   1000227bc:	add    BYTE PTR [rax+0x71739090],dl
   1000227c2:	ins    BYTE PTR es:[rdi],dx
   1000227c3:	outs   dx,DWORD PTR ds:[rsi]
   1000227c4:	jae    0x1000227f4
   1000227c6:	fs ins BYTE PTR es:[rdi],dx
   1000227c8:	ins    BYTE PTR es:[rdi],dx
   1000227c9:	add    BYTE PTR [rax+0x56534d90],dl
   1000227cf:	rex.XB push r8
   1000227d1:	xor    DWORD PTR [rax],esi
   1000227d3:	xor    BYTE PTR [rsi],ch
   1000227d5:	fs ins BYTE PTR es:[rdi],dx
   1000227d7:	ins    BYTE PTR es:[rdi],dx
   1000227d8:	add    BYTE PTR [rax+0x534d9090],dl
   1000227de:	push   rsi
   1000227df:	rex.XB push r10
   1000227e1:	xor    DWORD PTR [rax],esi
   1000227e3:	xor    BYTE PTR [rsi],ch
   1000227e5:	fs ins BYTE PTR es:[rdi],dx
   1000227e7:	ins    BYTE PTR es:[rdi],dx
   1000227e8:	add    BYTE PTR [rax+0x454b9090],dl
   1000227ee:	push   rdx
   1000227ef:	rex.WRX
   1000227f0:	rex.RB
   1000227f1:	xor    r14,QWORD PTR [rdx]
   1000227f4:	cs fs ins BYTE PTR es:[rdi],dx
   1000227f7:	ins    BYTE PTR es:[rdi],dx
   1000227f8:	add    BYTE PTR [rax+0x44419090],dl
   1000227fe:	push   rsi
   1000227ff:	push   r8
   100022801:	xor    rsi,QWORD PTR [r10]
   100022804:	cs fs ins BYTE PTR es:[rdi],dx
   100022807:	ins    BYTE PTR es:[rdi],dx
   100022808:	add    BYTE PTR [rax-0x6f6f6f70],dl
   10002280e:	nop
   10002280f:	nop
   100022810:	xor    BYTE PTR [rax],bh
   100022812:	add    al,BYTE PTR [rax]
   100022814:	add    BYTE PTR [rax],al
   100022816:	add    BYTE PTR [rax],al
   100022818:	rex.WRX cmp BYTE PTR [rdx],r8b
   10002281b:	add    BYTE PTR [rax],al
   10002281d:	add    BYTE PTR [rax],al
   10002281f:	add    BYTE PTR [rax+rdi*1+0x2],ch
   100022823:	add    BYTE PTR [rax],al
   100022825:	add    BYTE PTR [rax],al
   100022827:	add    BYTE PTR [rsi+0x38],bh
   10002282a:	add    al,BYTE PTR [rax]
   10002282c:	add    BYTE PTR [rax],al
   10002282e:	add    BYTE PTR [rax],al
   100022830:	xchg   edx,eax
   100022831:	cmp    BYTE PTR [rdx],al
   100022833:	add    BYTE PTR [rax],al
   100022835:	add    BYTE PTR [rax],al
   100022837:	add    BYTE PTR [rdx+0x238],ah
   10002283d:	add    BYTE PTR [rax],al
   10002283f:	add    BYTE PTR [rax+0x238],dh
   100022845:	add    BYTE PTR [rax],al
   100022847:	add    al,al
   100022849:	cmp    BYTE PTR [rdx],al
   10002284b:	add    BYTE PTR [rax],al
   10002284d:	add    BYTE PTR [rax],al
   10002284f:	add    ah,dl
   100022851:	cmp    BYTE PTR [rdx],al
   100022853:	add    BYTE PTR [rax],al
   100022855:	add    BYTE PTR [rax],al
   100022857:	add    al,ch
   100022859:	cmp    BYTE PTR [rdx],al
   10002285b:	add    BYTE PTR [rax],al
   10002285d:	add    BYTE PTR [rax],al
   10002285f:	add    dl,bh
   100022861:	cmp    BYTE PTR [rdx],al
	...
   10002286f:	add    BYTE PTR [rax],cl
   100022871:	cmp    DWORD PTR [rdx],eax
   100022873:	add    BYTE PTR [rax],al
   100022875:	add    BYTE PTR [rax],al
   100022877:	add    BYTE PTR [rcx+rdi*1],dl
   10002287a:	add    al,BYTE PTR [rax]
   10002287c:	add    BYTE PTR [rax],al
   10002287e:	add    BYTE PTR [rax],al
   100022880:	cmp    DWORD PTR es:[rdx],eax
   100022883:	add    BYTE PTR [rax],al
   100022885:	add    BYTE PTR [rax],al
   100022887:	add    BYTE PTR [rcx+rdi*1],dh
   10002288a:	add    al,BYTE PTR [rax]
   10002288c:	add    BYTE PTR [rax],al
   10002288e:	add    BYTE PTR [rax],al
   100022890:	rex.WRX cmp QWORD PTR [rdx],r8
   100022893:	add    BYTE PTR [rax],al
   100022895:	add    BYTE PTR [rax],al
   100022897:	add    BYTE PTR [rdx+0x39],ah
   10002289a:	add    al,BYTE PTR [rax]
   10002289c:	add    BYTE PTR [rax],al
   10002289e:	add    BYTE PTR [rax],al
   1000228a0:	jbe    0x1000228db
   1000228a2:	add    al,BYTE PTR [rax]
   1000228a4:	add    BYTE PTR [rax],al
   1000228a6:	add    BYTE PTR [rax],al
   1000228a8:	mov    bh,BYTE PTR [rcx]
   1000228aa:	add    al,BYTE PTR [rax]
   1000228ac:	add    BYTE PTR [rax],al
   1000228ae:	add    BYTE PTR [rax],al
   1000228b0:	movabs ds:0xb600000000000239,al
   1000228b9:	cmp    DWORD PTR [rdx],eax
   1000228bb:	add    BYTE PTR [rax],al
   1000228bd:	add    BYTE PTR [rax],al
   1000228bf:	add    al,dl
   1000228c1:	cmp    DWORD PTR [rdx],eax
   1000228c3:	add    BYTE PTR [rax],al
   1000228c5:	add    BYTE PTR [rax],al
   1000228c7:	add    ah,ah
   1000228c9:	cmp    DWORD PTR [rdx],eax
   1000228cb:	add    BYTE PTR [rax],al
   1000228cd:	add    BYTE PTR [rax],al
   1000228cf:	add    al,bh
   1000228d1:	cmp    DWORD PTR [rdx],eax
   1000228d3:	add    BYTE PTR [rax],al
   1000228d5:	add    BYTE PTR [rax],al
   1000228d7:	add    BYTE PTR [rax],cl
   1000228d9:	cmp    al,BYTE PTR [rdx]
   1000228db:	add    BYTE PTR [rax],al
   1000228dd:	add    BYTE PTR [rax],al
   1000228df:	add    BYTE PTR [rdx+rdi*1],ah
   1000228e2:	add    al,BYTE PTR [rax]
   1000228e4:	add    BYTE PTR [rax],al
   1000228e6:	add    BYTE PTR [rax],al
   1000228e8:	cmp    al,BYTE PTR ss:[rdx]
   1000228eb:	add    BYTE PTR [rax],al
   1000228ed:	add    BYTE PTR [rax],al
   1000228ef:	add    BYTE PTR [rdx+rdi*1+0x2],al
   1000228f3:	add    BYTE PTR [rax],al
   1000228f5:	add    BYTE PTR [rax],al
   1000228f7:	add    BYTE PTR [rsi+0x3a],dl
   1000228fa:	add    al,BYTE PTR [rax]
   1000228fc:	add    BYTE PTR [rax],al
   1000228fe:	add    BYTE PTR [rax],al
   100022900:	data16 cmp al,BYTE PTR [rdx]
   100022903:	add    BYTE PTR [rax],al
   100022905:	add    BYTE PTR [rax],al
   100022907:	add    BYTE PTR [rdx+rdi*1+0x2],dh
   10002290b:	add    BYTE PTR [rax],al
   10002290d:	add    BYTE PTR [rax],al
   10002290f:	add    BYTE PTR [rsi+0x23a],al
   100022915:	add    BYTE PTR [rax],al
   100022917:	add    BYTE PTR [rsi+0x23a],dl
   10002291d:	add    BYTE PTR [rax],al
   10002291f:	add    BYTE PTR [rdx+0x23a],dh
   100022925:	add    BYTE PTR [rax],al
   100022927:	add    dh,al
   100022929:	cmp    al,BYTE PTR [rdx]
   10002292b:	add    BYTE PTR [rax],al
   10002292d:	add    BYTE PTR [rax],al
   10002292f:	add    dl,bl
   100022931:	cmp    al,BYTE PTR [rdx]
   100022933:	add    BYTE PTR [rax],al
   100022935:	add    BYTE PTR [rax],al
   100022937:	add    al,ch
   100022939:	cmp    al,BYTE PTR [rdx]
   10002293b:	add    BYTE PTR [rax],al
   10002293d:	add    BYTE PTR [rax],al
   10002293f:	add    dh,dh
   100022941:	cmp    al,BYTE PTR [rdx]
   100022943:	add    BYTE PTR [rax],al
   100022945:	add    BYTE PTR [rax],al
   100022947:	add    BYTE PTR [rsi],al
   100022949:	cmp    eax,DWORD PTR [rdx]
   10002294b:	add    BYTE PTR [rax],al
   10002294d:	add    BYTE PTR [rax],al
   10002294f:	add    BYTE PTR [rsi],bl
   100022951:	cmp    eax,DWORD PTR [rdx]
   100022953:	add    BYTE PTR [rax],al
   100022955:	add    BYTE PTR [rax],al
   100022957:	add    BYTE PTR [rdx],bh
   100022959:	cmp    eax,DWORD PTR [rdx]
   10002295b:	add    BYTE PTR [rax],al
   10002295d:	add    BYTE PTR [rax],al
   10002295f:	add    BYTE PTR [rdx+0x3b],dl
   100022962:	add    al,BYTE PTR [rax]
   100022964:	add    BYTE PTR [rax],al
   100022966:	add    BYTE PTR [rax],al
   100022968:	(bad)  
   100022969:	cmp    eax,DWORD PTR [rdx]
   10002296b:	add    BYTE PTR [rax],al
   10002296d:	add    BYTE PTR [rax],al
   10002296f:	add    BYTE PTR [rdx+0x3b],bh
   100022972:	add    al,BYTE PTR [rax]
   100022974:	add    BYTE PTR [rax],al
   100022976:	add    BYTE PTR [rax],al
   100022978:	mov    ?,WORD PTR [rbx]
   10002297a:	add    al,BYTE PTR [rax]
   10002297c:	add    BYTE PTR [rax],al
   10002297e:	add    BYTE PTR [rax],al
   100022980:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   100022981:	cmp    eax,DWORD PTR [rdx]
   100022983:	add    BYTE PTR [rax],al
   100022985:	add    BYTE PTR [rax],al
   100022987:	add    BYTE PTR [rsi+0x23b],dh
   10002298d:	add    BYTE PTR [rax],al
   10002298f:	add    dh,al
   100022991:	cmp    eax,DWORD PTR [rdx]
   100022993:	add    BYTE PTR [rax],al
   100022995:	add    BYTE PTR [rax],al
   100022997:	add    dh,cl
   100022999:	cmp    eax,DWORD PTR [rdx]
   10002299b:	add    BYTE PTR [rax],al
   10002299d:	add    BYTE PTR [rax],al
   10002299f:	add    ah,ah
   1000229a1:	cmp    eax,DWORD PTR [rdx]
   1000229a3:	add    BYTE PTR [rax],al
   1000229a5:	add    BYTE PTR [rax],al
   1000229a7:	add    al,dh
   1000229a9:	cmp    eax,DWORD PTR [rdx]
   1000229ab:	add    BYTE PTR [rax],al
   1000229ad:	add    BYTE PTR [rax],al
   1000229af:	add    BYTE PTR [rdx],cl
   1000229b1:	cmp    al,0x2
   1000229b3:	add    BYTE PTR [rax],al
   1000229b5:	add    BYTE PTR [rax],al
   1000229b7:	add    BYTE PTR [rsi],bl
   1000229b9:	cmp    al,0x2
   1000229bb:	add    BYTE PTR [rax],al
   1000229bd:	add    BYTE PTR [rax],al
   1000229bf:	add    BYTE PTR [rsp+rdi*1],dh
   1000229c2:	add    al,BYTE PTR [rax]
   1000229c4:	add    BYTE PTR [rax],al
   1000229c6:	add    BYTE PTR [rax],al
   1000229c8:	rex.R cmp al,0x2
   1000229cb:	add    BYTE PTR [rax],al
   1000229cd:	add    BYTE PTR [rax],al
   1000229cf:	add    BYTE PTR [rdx+0x3c],bl
   1000229d2:	add    al,BYTE PTR [rax]
   1000229d4:	add    BYTE PTR [rax],al
   1000229d6:	add    BYTE PTR [rax],al
   1000229d8:	push   0x3c
   1000229da:	add    al,BYTE PTR [rax]
   1000229dc:	add    BYTE PTR [rax],al
   1000229de:	add    BYTE PTR [rax],al
   1000229e0:	jp     0x100022a1e
   1000229e2:	add    al,BYTE PTR [rax]
   1000229e4:	add    BYTE PTR [rax],al
   1000229e6:	add    BYTE PTR [rax],al
   1000229e8:	xchg   esp,eax
   1000229e9:	cmp    al,0x2
   1000229eb:	add    BYTE PTR [rax],al
   1000229ed:	add    BYTE PTR [rax],al
   1000229ef:	add    BYTE PTR [rdx+0x23c],ch
   1000229f5:	add    BYTE PTR [rax],al
   1000229f7:	add    al,al
   1000229f9:	cmp    al,0x2
   1000229fb:	add    BYTE PTR [rax],al
   1000229fd:	add    BYTE PTR [rax],al
   1000229ff:	add    al,dl
   100022a01:	cmp    al,0x2
   100022a03:	add    BYTE PTR [rax],al
   100022a05:	add    BYTE PTR [rax],al
   100022a07:	add    ah,bl
   100022a09:	cmp    al,0x2
   100022a0b:	add    BYTE PTR [rax],al
   100022a0d:	add    BYTE PTR [rax],al
   100022a0f:	add    ah,ch
   100022a11:	cmp    al,0x2
   100022a13:	add    BYTE PTR [rax],al
   100022a15:	add    BYTE PTR [rax],al
   100022a17:	add    dl,bh
   100022a19:	cmp    al,0x2
   100022a1b:	add    BYTE PTR [rax],al
   100022a1d:	add    BYTE PTR [rax],al
   100022a1f:	add    BYTE PTR [rsi],dl
   100022a21:	cmp    eax,0x2
   100022a26:	add    BYTE PTR [rax],al
   100022a28:	xor    bh,BYTE PTR [rip+0x2]        # 0x100022a30
   100022a2e:	add    BYTE PTR [rax],al
   100022a30:	cmp    rax,0x2
   100022a36:	add    BYTE PTR [rax],al
   100022a38:	pop    rsi
   100022a39:	cmp    eax,0x2
   100022a3e:	add    BYTE PTR [rax],al
   100022a40:	je     0x100022a7f
   100022a42:	add    al,BYTE PTR [rax]
   100022a44:	add    BYTE PTR [rax],al
   100022a46:	add    BYTE PTR [rax],al
   100022a48:	xchg   BYTE PTR [rip+0x2],bh        # 0x100022a50
   100022a4e:	add    BYTE PTR [rax],al
   100022a50:	movabs al,ds:0xae0000000000023d
   100022a59:	cmp    eax,0x2
   100022a5e:	add    BYTE PTR [rax],al
   100022a60:	sar    BYTE PTR [rip+0x2],0x0        # 0x100022a69
   100022a67:	add    ah,cl
   100022a69:	cmp    eax,0x2
   100022a6e:	add    BYTE PTR [rax],al
   100022a70:	fidivr DWORD PTR [rip+0x2]        # 0x100022a78
   100022a76:	add    BYTE PTR [rax],al
   100022a78:	(bad)  
   100022a79:	cmp    eax,0x2
   100022a7e:	add    BYTE PTR [rax],al
   100022a80:	cli    
   100022a81:	cmp    eax,0x2
   100022a86:	add    BYTE PTR [rax],al
   100022a88:	or     BYTE PTR [rsi],bh
   100022a8a:	add    al,BYTE PTR [rax]
   100022a8c:	add    BYTE PTR [rax],al
   100022a8e:	add    BYTE PTR [rax],al
   100022a90:	sbb    al,0x3e
   100022a92:	add    al,BYTE PTR [rax]
   100022a94:	add    BYTE PTR [rax],al
   100022a96:	add    BYTE PTR [rax],al
   100022a98:	sub    al,0x3e
   100022a9a:	add    al,BYTE PTR [rax]
   100022a9c:	add    BYTE PTR [rax],al
   100022a9e:	add    BYTE PTR [rax],al
   100022aa0:	rex.R
   100022aa1:	add    al,BYTE PTR ds:[rax]
   100022aa4:	add    BYTE PTR [rax],al
   100022aa6:	add    BYTE PTR [rax],al
   100022aa8:	push   rsp
   100022aa9:	add    al,BYTE PTR ds:[rax]
   100022aac:	add    BYTE PTR [rax],al
   100022aae:	add    BYTE PTR [rax],al
   100022ab0:	push   0x3e
   100022ab2:	add    al,BYTE PTR [rax]
   100022ab4:	add    BYTE PTR [rax],al
   100022ab6:	add    BYTE PTR [rax],al
   100022ab8:	jl     0x100022af8
   100022aba:	add    al,BYTE PTR [rax]
   100022abc:	add    BYTE PTR [rax],al
   100022abe:	add    BYTE PTR [rax],al
   100022ac0:	mov    WORD PTR [rsi],?
   100022ac2:	add    al,BYTE PTR [rax]
   100022ac4:	add    BYTE PTR [rax],al
   100022ac6:	add    BYTE PTR [rax],al
   100022ac8:	(bad)  
   100022ac9:	add    al,BYTE PTR ds:[rax]
   100022acc:	add    BYTE PTR [rax],al
   100022ace:	add    BYTE PTR [rax],al
   100022ad0:	mov    eax,0x23e
   100022ad5:	add    BYTE PTR [rax],al
   100022ad7:	add    dl,cl
   100022ad9:	add    al,BYTE PTR ds:[rax]
   100022adc:	add    BYTE PTR [rax],al
   100022ade:	add    BYTE PTR [rax],al
   100022ae0:	fidivr WORD PTR [rsi]
   100022ae2:	add    al,BYTE PTR [rax]
   100022ae4:	add    BYTE PTR [rax],al
   100022ae6:	add    BYTE PTR [rax],al
   100022ae8:	lock add al,BYTE PTR ds:[rax]
	...
   100022af8:	add    BYTE PTR [rdi],bh
   100022afa:	add    al,BYTE PTR [rax]
   100022afc:	add    BYTE PTR [rax],al
   100022afe:	add    BYTE PTR [rax],al
   100022b00:	or     bh,BYTE PTR [rdi]
   100022b02:	add    al,BYTE PTR [rax]
   100022b04:	add    BYTE PTR [rax],al
   100022b06:	add    BYTE PTR [rax],al
   100022b08:	adc    al,0x3f
   100022b0a:	add    al,BYTE PTR [rax]
   100022b0c:	add    BYTE PTR [rax],al
   100022b0e:	add    BYTE PTR [rax],al
   100022b10:	and    al,0x3f
   100022b12:	add    al,BYTE PTR [rax]
   100022b14:	add    BYTE PTR [rax],al
   100022b16:	add    BYTE PTR [rax],al
   100022b18:	xor    al,0x3f
   100022b1a:	add    al,BYTE PTR [rax]
   100022b1c:	add    BYTE PTR [rax],al
   100022b1e:	add    BYTE PTR [rax],al
   100022b20:	push   0x3f
   100022b22:	add    al,BYTE PTR [rax]
   100022b24:	add    BYTE PTR [rax],al
   100022b26:	add    BYTE PTR [rax],al
   100022b28:	jle    0x100022b69
   100022b2a:	add    al,BYTE PTR [rax]
   100022b2c:	add    BYTE PTR [rax],al
   100022b2e:	add    BYTE PTR [rax],al
   100022b30:	mov    BYTE PTR [rdi],bh
   100022b32:	add    al,BYTE PTR [rax]
   100022b34:	add    BYTE PTR [rax],al
   100022b36:	add    BYTE PTR [rax],al
   100022b38:	nop
   100022b39:	(bad)  
   100022b3a:	add    al,BYTE PTR [rax]
   100022b3c:	add    BYTE PTR [rax],al
   100022b3e:	add    BYTE PTR [rax],al
   100022b40:	sahf   
   100022b41:	(bad)  
   100022b42:	add    al,BYTE PTR [rax]
   100022b44:	add    BYTE PTR [rax],al
   100022b46:	add    BYTE PTR [rax],al
   100022b48:	test   al,0x3f
   100022b4a:	add    al,BYTE PTR [rax]
   100022b4c:	add    BYTE PTR [rax],al
   100022b4e:	add    BYTE PTR [rax],al
   100022b50:	mov    edx,0x23f
   100022b55:	add    BYTE PTR [rax],al
   100022b57:	add    ah,al
   100022b59:	(bad)  
   100022b5a:	add    al,BYTE PTR [rax]
   100022b5c:	add    BYTE PTR [rax],al
   100022b5e:	add    BYTE PTR [rax],al
   100022b60:	fdivr  DWORD PTR [rdi]
   100022b62:	add    al,BYTE PTR [rax]
   100022b64:	add    BYTE PTR [rax],al
   100022b66:	add    BYTE PTR [rax],al
   100022b68:	out    dx,al
   100022b69:	(bad)  
   100022b6a:	add    al,BYTE PTR [rax]
   100022b6c:	add    BYTE PTR [rax],al
   100022b6e:	add    BYTE PTR [rax],al
   100022b70:	cld    
   100022b71:	(bad)  
   100022b72:	add    al,BYTE PTR [rax]
   100022b74:	add    BYTE PTR [rax],al
   100022b76:	add    BYTE PTR [rax],al
   100022b78:	or     BYTE PTR [rax+0x2],al
   100022b7b:	add    BYTE PTR [rax],al
   100022b7d:	add    BYTE PTR [rax],al
   100022b7f:	add    BYTE PTR [rsi],dl
   100022b81:	add    al,BYTE PTR [rax]
   100022b84:	add    BYTE PTR [rax],al
   100022b86:	add    BYTE PTR [rax],al
   100022b88:	(bad)  
   100022b89:	add    al,BYTE PTR [rax]
   100022b8c:	add    BYTE PTR [rax],al
   100022b8e:	add    BYTE PTR [rax],al
   100022b90:	sub    BYTE PTR [rax+0x2],al
   100022b93:	add    BYTE PTR [rax],al
   100022b95:	add    BYTE PTR [rax],al
   100022b97:	add    BYTE PTR [rax],dh
   100022b99:	add    al,BYTE PTR [rax]
   100022b9c:	add    BYTE PTR [rax],al
   100022b9e:	add    BYTE PTR [rax],al
   100022ba0:	add    al,BYTE PTR ds:[rax]
   100022ba4:	add    BYTE PTR [rax],al
   100022ba6:	add    BYTE PTR [rax],al
   100022ba8:	push   rsi
   100022ba9:	add    al,BYTE PTR [rax]
   100022bac:	add    BYTE PTR [rax],al
   100022bae:	add    BYTE PTR [rax],al
   100022bb0:	push   0x240
   100022bb5:	add    BYTE PTR [rax],al
   100022bb7:	add    BYTE PTR [rsi+0x40],dh
   100022bba:	add    al,BYTE PTR [rax]
   100022bbc:	add    BYTE PTR [rax],al
   100022bbe:	add    BYTE PTR [rax],al
   100022bc0:	(bad)  
   100022bc1:	add    al,BYTE PTR [rax]
   100022bc4:	add    BYTE PTR [rax],al
   100022bc6:	add    BYTE PTR [rax],al
   100022bc8:	mov    es,WORD PTR [rax+0x2]
   100022bcb:	add    BYTE PTR [rax],al
   100022bcd:	add    BYTE PTR [rax],al
   100022bcf:	add    BYTE PTR [rax+0x240],bl
   100022bd5:	add    BYTE PTR [rax],al
   100022bd7:	add    BYTE PTR [rax+0x240],ah
   100022bdd:	add    BYTE PTR [rax],al
   100022bdf:	add    BYTE PTR [rax+rax*2+0x2],ch
   100022be6:	add    BYTE PTR [rax],al
   100022be8:	mov    esp,0x240
   100022bed:	add    BYTE PTR [rax],al
   100022bef:	add    dl,cl
   100022bf1:	add    al,BYTE PTR [rax]
   100022bf4:	add    BYTE PTR [rax],al
   100022bf6:	add    BYTE PTR [rax],al
   100022bf8:	(bad)  
   100022bf9:	add    al,BYTE PTR [rax]
   100022bfc:	add    BYTE PTR [rax],al
   100022bfe:	add    BYTE PTR [rax],al
   100022c00:	loopne 0x100022c42
   100022c02:	add    al,BYTE PTR [rax]
   100022c04:	add    BYTE PTR [rax],al
   100022c06:	add    BYTE PTR [rax],al
   100022c08:	in     al,dx
   100022c09:	add    al,BYTE PTR [rax]
   100022c0c:	add    BYTE PTR [rax],al
   100022c0e:	add    BYTE PTR [rax],al
   100022c10:	clc    
   100022c11:	add    al,BYTE PTR [rax]
   100022c14:	add    BYTE PTR [rax],al
   100022c16:	add    BYTE PTR [rax],al
   100022c18:	(bad)  
   100022c19:	add    al,BYTE PTR [r8]
   100022c1c:	add    BYTE PTR [rax],al
   100022c1e:	add    BYTE PTR [rax],al
   100022c20:	adc    BYTE PTR [rcx+0x2],al
   100022c23:	add    BYTE PTR [rax],al
   100022c25:	add    BYTE PTR [rax],al
   100022c27:	add    BYTE PTR [rcx+rax*2],bl
   100022c2a:	add    al,BYTE PTR [rax]
   100022c2c:	add    BYTE PTR [rax],al
   100022c2e:	add    BYTE PTR [rax],al
   100022c30:	sub    al,BYTE PTR [rcx+0x2]
   100022c33:	add    BYTE PTR [rax],al
   100022c35:	add    BYTE PTR [rax],al
   100022c37:	add    BYTE PTR [rsi],dh
   100022c39:	add    al,BYTE PTR [r8]
   100022c3c:	add    BYTE PTR [rax],al
   100022c3e:	add    BYTE PTR [rax],al
   100022c40:	rex.RX
   100022c41:	add    al,BYTE PTR [r8]
   100022c44:	add    BYTE PTR [rax],al
   100022c46:	add    BYTE PTR [rax],al
   100022c48:	push   rax
   100022c49:	add    al,BYTE PTR [r8]
   100022c4c:	add    BYTE PTR [rax],al
   100022c4e:	add    BYTE PTR [rax],al
   100022c50:	(bad)  
   100022c51:	add    al,BYTE PTR [r8]
   100022c54:	add    BYTE PTR [rax],al
   100022c56:	add    BYTE PTR [rax],al
   100022c58:	jo     0x100022c9b
   100022c5a:	add    al,BYTE PTR [rax]
   100022c5c:	add    BYTE PTR [rax],al
   100022c5e:	add    BYTE PTR [rax],al
   100022c60:	jl     0x100022ca3
   100022c62:	add    al,BYTE PTR [rax]
   100022c64:	add    BYTE PTR [rax],al
   100022c66:	add    BYTE PTR [rax],al
   100022c68:	mov    WORD PTR [rcx+0x2],es
   100022c6b:	add    BYTE PTR [rax],al
   100022c6d:	add    BYTE PTR [rax],al
   100022c6f:	add    BYTE PTR [rcx+rax*2+0x2],bl
   100022c76:	add    BYTE PTR [rax],al
   100022c78:	test   al,0x41
   100022c7a:	add    al,BYTE PTR [rax]
   100022c7c:	add    BYTE PTR [rax],al
   100022c7e:	add    BYTE PTR [rax],al
   100022c80:	mov    dl,0x41
   100022c82:	add    al,BYTE PTR [rax]
   100022c84:	add    BYTE PTR [rax],al
   100022c86:	add    BYTE PTR [rax],al
   100022c88:	mov    esp,0x241
   100022c8d:	add    BYTE PTR [rax],al
   100022c8f:	add    dh,al
   100022c91:	add    al,BYTE PTR [r8]
   100022c94:	add    BYTE PTR [rax],al
   100022c96:	add    BYTE PTR [rax],al
   100022c98:	fadd   DWORD PTR [rcx+0x2]
   100022c9b:	add    BYTE PTR [rax],al
   100022c9d:	add    BYTE PTR [rax],al
   100022c9f:	add    dh,ah
   100022ca1:	add    al,BYTE PTR [r8]
   100022ca4:	add    BYTE PTR [rax],al
   100022ca6:	add    BYTE PTR [rax],al
   100022ca8:	repnz add al,BYTE PTR [r8]
	...
   100022cb8:	or     BYTE PTR [rdx+0x2],al
   100022cbb:	add    BYTE PTR [rax],al
   100022cbd:	add    BYTE PTR [rax],al
   100022cbf:	add    BYTE PTR [rdx+rax*2+0x2],al
	...
   100022ccf:	add    BYTE PTR [rax+0x242],al
	...
   100022cdd:	add    BYTE PTR [rax],al
   100022cdf:	add    BYTE PTR [rdx+0x242],dl
   100022ce5:	add    BYTE PTR [rax],al
   100022ce7:	add    BYTE PTR [rdx+rax*2+0x2],ah
	...
   100022cf6:	add    BYTE PTR [rax],al
   100022cf8:	mov    eax,0x242
   100022cfd:	add    BYTE PTR [rax],al
   100022cff:	add    dl,cl
   100022d01:	rex.X add al,BYTE PTR [rax]
   100022d04:	add    BYTE PTR [rax],al
   100022d06:	add    BYTE PTR [rax],al
   100022d08:	loopne 0x100022d4c
   100022d0a:	add    al,BYTE PTR [rax]
   100022d0c:	add    BYTE PTR [rax],al
   100022d0e:	add    BYTE PTR [rax],al
   100022d10:	inc    BYTE PTR [rdx+0x2]
   100022d13:	add    BYTE PTR [rax],al
   100022d15:	add    BYTE PTR [rax],al
   100022d17:	add    BYTE PTR [rsi],cl
   100022d19:	rex.XB add al,BYTE PTR [r8]
	...
   100022d28:	jb     0x100022d2a
   100022d2a:	add    BYTE PTR [rax],al
   100022d2c:	add    BYTE PTR [rax],al
   100022d2e:	add    BYTE PTR [rax+0x0],al
   100022d34:	add    BYTE PTR [rax],al
   100022d36:	add    BYTE PTR [rax],al
   100022d38:	cmp    eax,DWORD PTR [rbx]
   100022d3a:	add    BYTE PTR [rax],al
   100022d3c:	add    BYTE PTR [rax],al
   100022d3e:	add    BYTE PTR [rax+0x465],al
   100022d44:	add    BYTE PTR [rax],al
   100022d46:	add    BYTE PTR [rax+0x119],al
   100022d4c:	add    BYTE PTR [rax],al
   100022d4e:	add    BYTE PTR [rax+0x136],al
   100022d54:	add    BYTE PTR [rax],al
   100022d56:	add    BYTE PTR [rax+0x2a3],al
   100022d5c:	add    BYTE PTR [rax],al
   100022d5e:	add    BYTE PTR [rax+0x2b4],al
   100022d64:	add    BYTE PTR [rax],al
   100022d66:	add    BYTE PTR [rax+0x2b3],al
   100022d6c:	add    BYTE PTR [rax],al
   100022d6e:	add    BYTE PTR [rax+0x17c],al
   100022d74:	add    BYTE PTR [rax],al
   100022d76:	add    BYTE PTR [rax+0x4cb],al
   100022d7c:	add    BYTE PTR [rax],al
   100022d7e:	add    BYTE PTR [rax+0x4c9],al
   100022d84:	add    BYTE PTR [rax],al
   100022d86:	add    BYTE PTR [rax+0x3a0],al
   100022d8c:	add    BYTE PTR [rax],al
   100022d8e:	add    BYTE PTR [rax+0xd1],al
   100022d94:	add    BYTE PTR [rax],al
   100022d96:	add    BYTE PTR [rax+0x75],al
   100022d9c:	add    BYTE PTR [rax],al
   100022d9e:	add    BYTE PTR [rax+0x2e],al
   100022da4:	add    BYTE PTR [rax],al
   100022da6:	add    BYTE PTR [rax+0x52c],al
   100022dac:	add    BYTE PTR [rax],al
   100022dae:	add    BYTE PTR [rax+0xf3],al
   100022db4:	add    BYTE PTR [rax],al
   100022db6:	add    BYTE PTR [rax+0x31e],al
   100022dbc:	add    BYTE PTR [rax],al
   100022dbe:	add    BYTE PTR [rax+0x320],al
   100022dc4:	add    BYTE PTR [rax],al
   100022dc6:	add    BYTE PTR [rax+0x308],al
   100022dcc:	add    BYTE PTR [rax],al
   100022dce:	add    BYTE PTR [rax+0x4c6],al
   100022dd4:	add    BYTE PTR [rax],al
   100022dd6:	add    BYTE PTR [rax+0x164],al
   100022ddc:	add    BYTE PTR [rax],al
   100022dde:	add    BYTE PTR [rax+0x246],al
   100022de4:	add    BYTE PTR [rax],al
   100022de6:	add    BYTE PTR [rax+0x402],al
   100022dec:	add    BYTE PTR [rax],al
   100022dee:	add    BYTE PTR [rax+0x2bb],al
   100022df4:	add    BYTE PTR [rax],al
   100022df6:	add    BYTE PTR [rax+0x535],al
   100022dfc:	add    BYTE PTR [rax],al
   100022dfe:	add    BYTE PTR [rax+0x2d9],al
   100022e04:	add    BYTE PTR [rax],al
   100022e06:	add    BYTE PTR [rax+0x1b9],al
   100022e0c:	add    BYTE PTR [rax],al
   100022e0e:	add    BYTE PTR [rax+0x326],al
   100022e14:	add    BYTE PTR [rax],al
   100022e16:	add    BYTE PTR [rax+0x404],al
   100022e1c:	add    BYTE PTR [rax],al
   100022e1e:	add    BYTE PTR [rax+0xec],al
   100022e24:	add    BYTE PTR [rax],al
   100022e26:	add    BYTE PTR [rax+0x469],al
   100022e2c:	add    BYTE PTR [rax],al
   100022e2e:	add    BYTE PTR [rax+0x468],al
   100022e34:	add    BYTE PTR [rax],al
   100022e36:	add    BYTE PTR [rax+0x321],al
   100022e3c:	add    BYTE PTR [rax],al
   100022e3e:	add    BYTE PTR [rax+0x49c],al
   100022e44:	add    BYTE PTR [rax],al
   100022e46:	add    BYTE PTR [rax+0x166],al
   100022e4c:	add    BYTE PTR [rax],al
   100022e4e:	add    BYTE PTR [rax+0x46a],al
   100022e54:	add    BYTE PTR [rax],al
   100022e56:	add    BYTE PTR [rax+0x316],al
   100022e5c:	add    BYTE PTR [rax],al
   100022e5e:	add    BYTE PTR [rax+0xda],al
   100022e64:	add    BYTE PTR [rax],al
   100022e66:	add    BYTE PTR [rax+0x477],al
   100022e6c:	add    BYTE PTR [rax],al
   100022e6e:	add    BYTE PTR [rax+0x484],al
   100022e74:	add    BYTE PTR [rax],al
   100022e76:	add    BYTE PTR [rax+0x509],al
   100022e7c:	add    BYTE PTR [rax],al
   100022e7e:	add    BYTE PTR [rax+0x312],al
   100022e84:	add    BYTE PTR [rax],al
   100022e86:	add    BYTE PTR [rax+0x1de],al
   100022e8c:	add    BYTE PTR [rax],al
   100022e8e:	add    BYTE PTR [rax+0x377],al
   100022e94:	add    BYTE PTR [rax],al
   100022e96:	add    BYTE PTR [rax+0x261],al
   100022e9c:	add    BYTE PTR [rax],al
   100022e9e:	add    BYTE PTR [rax+0x4ca],al
   100022ea4:	add    BYTE PTR [rax],al
   100022ea6:	add    BYTE PTR [rax+0x290],al
   100022eac:	add    BYTE PTR [rax],al
   100022eae:	add    BYTE PTR [rax+0x2be],al
   100022eb4:	add    BYTE PTR [rax],al
   100022eb6:	add    BYTE PTR [rax+0x11a],al
   100022ebc:	add    BYTE PTR [rax],al
   100022ebe:	add    BYTE PTR [rax+0x239],al
   100022ec4:	add    BYTE PTR [rax],al
   100022ec6:	add    BYTE PTR [rax+0x4b0],al
   100022ecc:	add    BYTE PTR [rax],al
   100022ece:	add    BYTE PTR [rax+0x4a0],al
   100022ed4:	add    BYTE PTR [rax],al
   100022ed6:	add    BYTE PTR [rax+0x329],al
   100022edc:	add    BYTE PTR [rax],al
   100022ede:	add    BYTE PTR [rax+0x19b],al
   100022ee4:	add    BYTE PTR [rax],al
   100022ee6:	add    BYTE PTR [rax+0x19c],al
   100022eec:	add    BYTE PTR [rax],al
   100022eee:	add    BYTE PTR [rax+0x525],al
   100022ef4:	add    BYTE PTR [rax],al
   100022ef6:	add    BYTE PTR [rax+0x527],al
   100022efc:	add    BYTE PTR [rax],al
   100022efe:	add    BYTE PTR [rax+0x526],al
   100022f04:	add    BYTE PTR [rax],al
   100022f06:	add    BYTE PTR [rax+0x47a],al
   100022f0c:	add    BYTE PTR [rax],al
   100022f0e:	add    BYTE PTR [rax+0x0],al
   100022f14:	add    BYTE PTR [rax],al
   100022f16:	add    BYTE PTR [rax],al
   100022f18:	xor    BYTE PTR [rdx],al
   100022f1a:	add    BYTE PTR [rax],al
   100022f1c:	add    BYTE PTR [rax],al
   100022f1e:	add    BYTE PTR [rax+0xf3],al
   100022f24:	add    BYTE PTR [rax],al
   100022f26:	add    BYTE PTR [rax+0x334],al
   100022f2c:	add    BYTE PTR [rax],al
   100022f2e:	add    BYTE PTR [rax+0x193],al
   100022f34:	add    BYTE PTR [rax],al
   100022f36:	add    BYTE PTR [rax+0x40e],al
   100022f3c:	add    BYTE PTR [rax],al
   100022f3e:	add    BYTE PTR [rax+0xd0],al
   100022f44:	add    BYTE PTR [rax],al
   100022f46:	add    BYTE PTR [rax+0x4e7],al
   100022f4c:	add    BYTE PTR [rax],al
   100022f4e:	add    BYTE PTR [rax+0xf5],al
   100022f54:	add    BYTE PTR [rax],al
   100022f56:	add    BYTE PTR [rax+0x402],al
   100022f5c:	add    BYTE PTR [rax],al
   100022f5e:	add    BYTE PTR [rax+0x30e],al
   100022f64:	add    BYTE PTR [rax],al
   100022f66:	add    BYTE PTR [rax+0x31d],al
   100022f6c:	add    BYTE PTR [rax],al
   100022f6e:	add    BYTE PTR [rax+0x316],al
   100022f74:	add    BYTE PTR [rax],al
   100022f76:	add    BYTE PTR [rax+0x2fc],al
   100022f7c:	add    BYTE PTR [rax],al
   100022f7e:	add    BYTE PTR [rax+0x30d],al
   100022f84:	add    BYTE PTR [rax],al
   100022f86:	add    BYTE PTR [rax+0xa3],al
   100022f8c:	add    BYTE PTR [rax],al
   100022f8e:	add    BYTE PTR [rax+0x4d7],al
   100022f94:	add    BYTE PTR [rax],al
   100022f96:	add    BYTE PTR [rax+0x4d8],al
   100022f9c:	add    BYTE PTR [rax],al
   100022f9e:	add    BYTE PTR [rax+0x4d9],al
   100022fa4:	add    BYTE PTR [rax],al
   100022fa6:	add    BYTE PTR [rax+0x130],al
   100022fac:	add    BYTE PTR [rax],al
   100022fae:	add    BYTE PTR [rax+0x1a1],al
   100022fb4:	add    BYTE PTR [rax],al
   100022fb6:	add    BYTE PTR [rax+0x494],al
   100022fbc:	add    BYTE PTR [rax],al
   100022fbe:	add    BYTE PTR [rax+0x4e5],al
   100022fc4:	add    BYTE PTR [rax],al
   100022fc6:	add    BYTE PTR [rax+0x4e6],al
   100022fcc:	add    BYTE PTR [rax],al
   100022fce:	add    BYTE PTR [rax+0x502],al
   100022fd4:	add    BYTE PTR [rax],al
   100022fd6:	add    BYTE PTR [rax+0x1cd],al
   100022fdc:	add    BYTE PTR [rax],al
   100022fde:	add    BYTE PTR [rax+0x4e8],al
   100022fe4:	add    BYTE PTR [rax],al
   100022fe6:	add    BYTE PTR [rax+0x503],al
   100022fec:	add    BYTE PTR [rax],al
   100022fee:	add    BYTE PTR [rax+0x158],al
   100022ff4:	add    BYTE PTR [rax],al
   100022ff6:	add    BYTE PTR [rax+0x410],al
   100022ffc:	add    BYTE PTR [rax],al
   100022ffe:	add    BYTE PTR [rax+0x26f],al
   100023004:	add    BYTE PTR [rax],al
   100023006:	add    BYTE PTR [rax+0x40f],al
   10002300c:	add    BYTE PTR [rax],al
   10002300e:	add    BYTE PTR [rax+0x470],al
   100023014:	add    BYTE PTR [rax],al
   100023016:	add    BYTE PTR [rax+0x496],al
   10002301c:	add    BYTE PTR [rax],al
   10002301e:	add    BYTE PTR [rax+0x497],al
   100023024:	add    BYTE PTR [rax],al
   100023026:	add    BYTE PTR [rax+0x3e5],al
   10002302c:	add    BYTE PTR [rax],al
   10002302e:	add    BYTE PTR [rax+0x505],al
   100023034:	add    BYTE PTR [rax],al
   100023036:	add    BYTE PTR [rax+0xb8],al
   10002303c:	add    BYTE PTR [rax],al
   10002303e:	add    BYTE PTR [rax+0x495],al
   100023044:	add    BYTE PTR [rax],al
   100023046:	add    BYTE PTR [rax+0x344],al
   10002304c:	add    BYTE PTR [rax],al
   10002304e:	add    BYTE PTR [rax+0x134],al
   100023054:	add    BYTE PTR [rax],al
   100023056:	add    BYTE PTR [rax+0x14d],al
   10002305c:	add    BYTE PTR [rax],al
   10002305e:	add    BYTE PTR [rax+0x31f],al
   100023064:	add    BYTE PTR [rax],al
   100023066:	add    BYTE PTR [rax+0x45e],al
   10002306c:	add    BYTE PTR [rax],al
   10002306e:	add    BYTE PTR [rax+0x31c],al
   100023074:	add    BYTE PTR [rax],al
   100023076:	add    BYTE PTR [rax+0x1f3],al
   10002307c:	add    BYTE PTR [rax],al
   10002307e:	add    BYTE PTR [rax+0xca],al
   100023084:	add    BYTE PTR [rax],al
   100023086:	add    BYTE PTR [rax+0x307],al
   10002308c:	add    BYTE PTR [rax],al
   10002308e:	add    BYTE PTR [rax+0x306],al
   100023094:	add    BYTE PTR [rax],al
   100023096:	add    BYTE PTR [rax+0x178],al
   10002309c:	add    BYTE PTR [rax],al
   10002309e:	add    BYTE PTR [rax+0x35f],al
   1000230a4:	add    BYTE PTR [rax],al
   1000230a6:	add    BYTE PTR [rax+0x125],al
   1000230ac:	add    BYTE PTR [rax],al
   1000230ae:	add    BYTE PTR [rax+0x411],al
   1000230b4:	add    BYTE PTR [rax],al
   1000230b6:	add    BYTE PTR [rax+0x4cf],al
   1000230bc:	add    BYTE PTR [rax],al
   1000230be:	add    BYTE PTR [rax+0x2fd],al
   1000230c4:	add    BYTE PTR [rax],al
   1000230c6:	add    BYTE PTR [rax+0x155],al
   1000230cc:	add    BYTE PTR [rax],al
   1000230ce:	add    BYTE PTR [rax+0x347],al
   1000230d4:	add    BYTE PTR [rax],al
   1000230d6:	add    BYTE PTR [rax+0x44b],al
   1000230dc:	add    BYTE PTR [rax],al
   1000230de:	add    BYTE PTR [rax+0x44f],al
   1000230e4:	add    BYTE PTR [rax],al
   1000230e6:	add    BYTE PTR [rax+0x2e9],al
   1000230ec:	add    BYTE PTR [rax],al
   1000230ee:	add    BYTE PTR [rax+0x44a],al
   1000230f4:	add    BYTE PTR [rax],al
   1000230f6:	add    BYTE PTR [rax+0x45c],al
   1000230fc:	add    BYTE PTR [rax],al
   1000230fe:	add    BYTE PTR [rax+0x412],al
   100023104:	add    BYTE PTR [rax],al
   100023106:	add    BYTE PTR [rax+0x2ec],al
   10002310c:	add    BYTE PTR [rax],al
   10002310e:	add    BYTE PTR [rax+0x10a],al
   100023114:	add    BYTE PTR [rax],al
   100023116:	add    BYTE PTR [rax+0xaa],al
   10002311c:	add    BYTE PTR [rax],al
   10002311e:	add    BYTE PTR [rax+0x107],al
   100023124:	add    BYTE PTR [rax],al
   100023126:	add    BYTE PTR [rax+0x48a],al
   10002312c:	add    BYTE PTR [rax],al
   10002312e:	add    BYTE PTR [rax+0x471],al
   100023134:	add    BYTE PTR [rax],al
   100023136:	add    BYTE PTR [rax+0x210],al
   10002313c:	add    BYTE PTR [rax],al
   10002313e:	add    BYTE PTR [rax+0x211],al
   100023144:	add    BYTE PTR [rax],al
   100023146:	add    BYTE PTR [rax+0x475],al
   10002314c:	add    BYTE PTR [rax],al
   10002314e:	add    BYTE PTR [rax+0x474],al
   100023154:	add    BYTE PTR [rax],al
   100023156:	add    BYTE PTR [rax+0x501],al
   10002315c:	add    BYTE PTR [rax],al
   10002315e:	add    BYTE PTR [rax+0x500],al
   100023164:	add    BYTE PTR [rax],al
   100023166:	add    BYTE PTR [rax+0x36b],al
   10002316c:	add    BYTE PTR [rax],al
   10002316e:	add    BYTE PTR [rax+0x50a],al
   100023174:	add    BYTE PTR [rax],al
   100023176:	add    BYTE PTR [rax+0x2d3],al
   10002317c:	add    BYTE PTR [rax],al
   10002317e:	add    BYTE PTR [rax+0x320],al
   100023184:	add    BYTE PTR [rax],al
   100023186:	add    BYTE PTR [rax+0x531],al
   10002318c:	add    BYTE PTR [rax],al
   10002318e:	add    BYTE PTR [rax+0x52f],al
   100023194:	add    BYTE PTR [rax],al
   100023196:	add    BYTE PTR [rax+0x52e],al
   10002319c:	add    BYTE PTR [rax],al
   10002319e:	add    BYTE PTR [rax+0x50b],al
   1000231a4:	add    BYTE PTR [rax],al
   1000231a6:	add    BYTE PTR [rax+0x0],al
   1000231ac:	add    BYTE PTR [rax],al
   1000231ae:	add    BYTE PTR [rax],al
   1000231b0:	(bad)  
   1000231b1:	add    BYTE PTR [rax],al
   1000231b3:	add    BYTE PTR [rax],al
   1000231b5:	add    BYTE PTR [rax],al
   1000231b7:	and    BYTE PTR [rdi+0x0],0x0
   1000231be:	add    BYTE PTR [rax+0x184],al
   1000231c4:	add    BYTE PTR [rax],al
   1000231c6:	add    BYTE PTR [rax+0x219],al
   1000231cc:	add    BYTE PTR [rax],al
   1000231ce:	add    BYTE PTR [rax+0x216],al
   1000231d4:	add    BYTE PTR [rax],al
   1000231d6:	add    BYTE PTR [rax+0x217],al
   1000231dc:	add    BYTE PTR [rax],al
   1000231de:	add    BYTE PTR [rax+0x2a2],al
   1000231e4:	add    BYTE PTR [rax],al
   1000231e6:	add    BYTE PTR [rax+0x1e5],al
   1000231ec:	add    BYTE PTR [rax],al
   1000231ee:	add    BYTE PTR [rax+0x132],al
   1000231f4:	add    BYTE PTR [rax],al
   1000231f6:	add    BYTE PTR [rax+0x174],al
   1000231fc:	add    BYTE PTR [rax],al
   1000231fe:	add    BYTE PTR [rax+0x167],al
   100023204:	add    BYTE PTR [rax],al
   100023206:	add    BYTE PTR [rax+0x0],al
   10002320c:	add    BYTE PTR [rax],al
   10002320e:	add    BYTE PTR [rax],al
   100023210:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100023211:	add    eax,DWORD PTR [rax]
   100023213:	add    BYTE PTR [rax],al
   100023215:	add    BYTE PTR [rax],al
   100023217:	sbb    dh,0x3
   10002321a:	add    BYTE PTR [rax],al
   10002321c:	add    BYTE PTR [rax],al
   10002321e:	add    BYTE PTR [rax+0x3d4],al
   100023224:	add    BYTE PTR [rax],al
   100023226:	add    BYTE PTR [rax+0x3b0],al
   10002322c:	add    BYTE PTR [rax],al
   10002322e:	add    BYTE PTR [rax+0x3e7],al
   100023234:	add    BYTE PTR [rax],al
   100023236:	add    BYTE PTR [rax+0x3c7],al
   10002323c:	add    BYTE PTR [rax],al
   10002323e:	add    BYTE PTR [rax+0x3a5],al
   100023244:	add    BYTE PTR [rax],al
   100023246:	add    BYTE PTR [rax+0x3e5],al
   10002324c:	add    BYTE PTR [rax],al
   10002324e:	add    BYTE PTR [rax+0x175],al
   100023254:	add    BYTE PTR [rax],al
   100023256:	add    BYTE PTR [rax+0x3bd],al
   10002325c:	add    BYTE PTR [rax],al
   10002325e:	add    BYTE PTR [rax+0x3bc],al
   100023264:	add    BYTE PTR [rax],al
   100023266:	add    BYTE PTR [rax+0x3d9],al
   10002326c:	add    BYTE PTR [rax],al
   10002326e:	add    BYTE PTR [rax+0x3c8],al
   100023274:	add    BYTE PTR [rax],al
   100023276:	add    BYTE PTR [rax+0x3c4],al
   10002327c:	add    BYTE PTR [rax],al
   10002327e:	add    BYTE PTR [rax+0x3dc],al
   100023284:	add    BYTE PTR [rax],al
   100023286:	add    BYTE PTR [rax+0x3d0],al
   10002328c:	add    BYTE PTR [rax],al
   10002328e:	add    BYTE PTR [rax+0x3b9],al
   100023294:	add    BYTE PTR [rax],al
   100023296:	add    BYTE PTR [rax+0x3b8],al
   10002329c:	add    BYTE PTR [rax],al
   10002329e:	add    BYTE PTR [rax+0x3cf],al
   1000232a4:	add    BYTE PTR [rax],al
   1000232a6:	add    BYTE PTR [rax+0x3af],al
   1000232ac:	add    BYTE PTR [rax],al
   1000232ae:	add    BYTE PTR [rax+0x3e4],al
   1000232b4:	add    BYTE PTR [rax],al
   1000232b6:	add    BYTE PTR [rax+0x3cb],al
   1000232bc:	add    BYTE PTR [rax],al
   1000232be:	add    BYTE PTR [rax+0x3c1],al
   1000232c4:	add    BYTE PTR [rax],al
   1000232c6:	add    BYTE PTR [rax+0x3b4],al
   1000232cc:	add    BYTE PTR [rax],al
   1000232ce:	add    BYTE PTR [rax+0x3b5],al
   1000232d4:	add    BYTE PTR [rax],al
   1000232d6:	add    BYTE PTR [rax+0x3ca],al
   1000232dc:	add    BYTE PTR [rax],al
   1000232de:	add    BYTE PTR [rax+0x3ae],al
   1000232e4:	add    BYTE PTR [rax],al
   1000232e6:	add    BYTE PTR [rax+0x3cc],al
   1000232ec:	add    BYTE PTR [rax],al
   1000232ee:	add    BYTE PTR [rax+0x3db],al
   1000232f4:	add    BYTE PTR [rax],al
   1000232f6:	add    BYTE PTR [rax+0x3a9],al
   1000232fc:	add    BYTE PTR [rax],al
   1000232fe:	add    BYTE PTR [rax+0x3ee],al
   100023304:	add    BYTE PTR [rax],al
   100023306:	add    BYTE PTR [rax+0x3ab],al
   10002330c:	add    BYTE PTR [rax],al
   10002330e:	add    BYTE PTR [rax+0x3fb],al
   100023314:	add    BYTE PTR [rax],al
   100023316:	add    BYTE PTR [rax+0x3ec],al
   10002331c:	add    BYTE PTR [rax],al
   10002331e:	add    BYTE PTR [rax+0x39d],al
   100023324:	add    BYTE PTR [rax],al
   100023326:	add    BYTE PTR [rax+0x39e],al
   10002332c:	add    BYTE PTR [rax],al
   10002332e:	add    BYTE PTR [rax+0x3a1],al
   100023334:	add    BYTE PTR [rax],al
   100023336:	add    BYTE PTR [rax+0x397],al
   10002333c:	add    BYTE PTR [rax],al
   10002333e:	add    BYTE PTR [rax+0x3b6],al
   100023344:	add    BYTE PTR [rax],al
   100023346:	add    BYTE PTR [rax+0x2f5],al
   10002334c:	add    BYTE PTR [rax],al
   10002334e:	add    BYTE PTR [rax+0x383],al
   100023354:	add    BYTE PTR [rax],al
   100023356:	add    BYTE PTR [rax+0x38c],al
   10002335c:	add    BYTE PTR [rax],al
   10002335e:	add    BYTE PTR [rax+0x7],al
   100023364:	add    BYTE PTR [rax],al
   100023366:	add    BYTE PTR [rax+0x3fd],al
   10002336c:	add    BYTE PTR [rax],al
   10002336e:	add    BYTE PTR [rax+0xbb],al
   100023374:	add    BYTE PTR [rax],al
   100023376:	add    BYTE PTR [rax+0x165],al
   10002337c:	add    BYTE PTR [rax],al
   10002337e:	add    BYTE PTR [rax+0x1db],al
   100023384:	add    BYTE PTR [rax],al
   100023386:	add    BYTE PTR [rax+0x16a],al
   10002338c:	add    BYTE PTR [rax],al
   10002338e:	add    BYTE PTR [rax+0x2c],al
   100023394:	add    BYTE PTR [rax],al
   100023396:	add    BYTE PTR [rax+0x63],al
   10002339c:	add    BYTE PTR [rax],al
   10002339e:	add    BYTE PTR [rax+0xf4],al
   1000233a4:	add    BYTE PTR [rax],al
   1000233a6:	add    BYTE PTR [rax+0x1bd],al
   1000233ac:	add    BYTE PTR [rax],al
   1000233ae:	add    BYTE PTR [rax+0x276],al
   1000233b4:	add    BYTE PTR [rax],al
   1000233b6:	add    BYTE PTR [rax+0x24b],al
   1000233bc:	add    BYTE PTR [rax],al
   1000233be:	add    BYTE PTR [rax+0x2f6],al
   1000233c4:	add    BYTE PTR [rax],al
   1000233c6:	add    BYTE PTR [rax+0x384],al
   1000233cc:	add    BYTE PTR [rax],al
   1000233ce:	add    BYTE PTR [rax+0x326],al
   1000233d4:	add    BYTE PTR [rax],al
   1000233d6:	add    BYTE PTR [rax+0x2bb],al
   1000233dc:	add    BYTE PTR [rax],al
   1000233de:	add    BYTE PTR [rax+0x1d8],al
   1000233e4:	add    BYTE PTR [rax],al
   1000233e6:	add    BYTE PTR [rax+0x2f7],al
   1000233ec:	add    BYTE PTR [rax],al
   1000233ee:	add    BYTE PTR [rax+0x274],al
   1000233f4:	add    BYTE PTR [rax],al
   1000233f6:	add    BYTE PTR [rax+0x34b],al
   1000233fc:	add    BYTE PTR [rax],al
   1000233fe:	add    BYTE PTR [rax+0x277],al
   100023404:	add    BYTE PTR [rax],al
   100023406:	add    BYTE PTR [rax+0x2f8],al
   10002340c:	add    BYTE PTR [rax],al
   10002340e:	add    BYTE PTR [rax+0x333],al
   100023414:	add    BYTE PTR [rax],al
   100023416:	add    BYTE PTR [rax+0x16],al
   10002341c:	add    BYTE PTR [rax],al
   10002341e:	add    BYTE PTR [rax+0x3e],al
   100023424:	add    BYTE PTR [rax],al
   100023426:	add    BYTE PTR [rax+0x6d],al
   10002342c:	add    BYTE PTR [rax],al
   10002342e:	add    BYTE PTR [rax+0x130],al
   100023434:	add    BYTE PTR [rax],al
   100023436:	add    BYTE PTR [rax+0x292],al
   10002343c:	add    BYTE PTR [rax],al
   10002343e:	add    BYTE PTR [rax+0x37c],al
   100023444:	add    BYTE PTR [rax],al
   100023446:	add    BYTE PTR [rax+0x174],al
   10002344c:	add    BYTE PTR [rax],al
   10002344e:	add    BYTE PTR [rax+0x2c2],al
   100023454:	add    BYTE PTR [rax],al
   100023456:	add    BYTE PTR [rax+0x2b4],al
   10002345c:	add    BYTE PTR [rax],al
   10002345e:	add    BYTE PTR [rax+0x26f],al
   100023464:	add    BYTE PTR [rax],al
   100023466:	add    BYTE PTR [rax+0x3f],al
   10002346c:	add    BYTE PTR [rax],al
   10002346e:	add    BYTE PTR [rax+0x6e],al
   100023474:	add    BYTE PTR [rax],al
   100023476:	add    BYTE PTR [rax+0x46],al
   10002347c:	add    BYTE PTR [rax],al
   10002347e:	add    BYTE PTR [rax+0x54],al
   100023484:	add    BYTE PTR [rax],al
   100023486:	add    BYTE PTR [rax+0x305],al
   10002348c:	add    BYTE PTR [rax],al
   10002348e:	add    BYTE PTR [rax+0x159],al
   100023494:	add    BYTE PTR [rax],al
   100023496:	add    BYTE PTR [rax+0x18f],al
   10002349c:	add    BYTE PTR [rax],al
   10002349e:	add    BYTE PTR [rax+0x31a],al
   1000234a4:	add    BYTE PTR [rax],al
   1000234a6:	add    BYTE PTR [rax+0xdf],al
   1000234ac:	add    BYTE PTR [rax],al
   1000234ae:	add    BYTE PTR [rax+0x1b3],al
   1000234b4:	add    BYTE PTR [rax],al
   1000234b6:	add    BYTE PTR [rax+0x280],al
   1000234bc:	add    BYTE PTR [rax],al
   1000234be:	add    BYTE PTR [rax+0x32c],al
   1000234c4:	add    BYTE PTR [rax],al
   1000234c6:	add    BYTE PTR [rax+0x313],al
   1000234cc:	add    BYTE PTR [rax],al
   1000234ce:	add    BYTE PTR [rax+0x304],al
   1000234d4:	add    BYTE PTR [rax],al
   1000234d6:	add    BYTE PTR [rax+0x42],al
   1000234dc:	add    BYTE PTR [rax],al
   1000234de:	add    BYTE PTR [rax+0x31b],al
   1000234e4:	add    BYTE PTR [rax],al
   1000234e6:	add    BYTE PTR [rax+0x1be],al
   1000234ec:	add    BYTE PTR [rax],al
   1000234ee:	add    BYTE PTR [rax+0x35d],al
   1000234f4:	add    BYTE PTR [rax],al
   1000234f6:	add    BYTE PTR [rax+0x358],al
   1000234fc:	add    BYTE PTR [rax],al
   1000234fe:	add    BYTE PTR [rax+0x318],al
   100023504:	add    BYTE PTR [rax],al
   100023506:	add    BYTE PTR [rax+0x9a],al
   10002350c:	add    BYTE PTR [rax],al
   10002350e:	add    BYTE PTR [rax+0x94],al
   100023514:	add    BYTE PTR [rax],al
   100023516:	add    BYTE PTR [rax+0x306],al
   10002351c:	add    BYTE PTR [rax],al
   10002351e:	add    BYTE PTR [rax+0xcc],al
   100023524:	add    BYTE PTR [rax],al
   100023526:	add    BYTE PTR [rax+0x233],al
   10002352c:	add    BYTE PTR [rax],al
   10002352e:	add    BYTE PTR [rax+0x275],al
   100023534:	add    BYTE PTR [rax],al
   100023536:	add    BYTE PTR [rax+0x225],al
   10002353c:	add    BYTE PTR [rax],al
   10002353e:	add    BYTE PTR [rax+0x15],al
   100023544:	add    BYTE PTR [rax],al
   100023546:	add    BYTE PTR [rax+0xbe],al
   10002354c:	add    BYTE PTR [rax],al
   10002354e:	add    BYTE PTR [rax+0x22e],al
   100023554:	add    BYTE PTR [rax],al
   100023556:	add    BYTE PTR [rax+0x22b],al
   10002355c:	add    BYTE PTR [rax],al
   10002355e:	add    BYTE PTR [rax+0x189],al
   100023564:	add    BYTE PTR [rax],al
   100023566:	add    BYTE PTR [rax+0x39b],al
   10002356c:	add    BYTE PTR [rax],al
   10002356e:	add    BYTE PTR [rax+0x24a],al
   100023574:	add    BYTE PTR [rax],al
   100023576:	add    BYTE PTR [rax+0x327],al
   10002357c:	add    BYTE PTR [rax],al
   10002357e:	add    BYTE PTR [rax+0x1e1],al
   100023584:	add    BYTE PTR [rax],al
   100023586:	add    BYTE PTR [rax+0x1b7],al
   10002358c:	add    BYTE PTR [rax],al
   10002358e:	add    BYTE PTR [rax+0x1b8],al
   100023594:	add    BYTE PTR [rax],al
   100023596:	add    BYTE PTR [rax+0x1e0],al
   10002359c:	add    BYTE PTR [rax],al
   10002359e:	add    BYTE PTR [rax+0x1d0],al
   1000235a4:	add    BYTE PTR [rax],al
   1000235a6:	add    BYTE PTR [rax+0x1f2],al
   1000235ac:	add    BYTE PTR [rax],al
   1000235ae:	add    BYTE PTR [rax+0x329],al
   1000235b4:	add    BYTE PTR [rax],al
   1000235b6:	add    BYTE PTR [rax+0x32a],al
   1000235bc:	add    BYTE PTR [rax],al
   1000235be:	add    BYTE PTR [rax+0x19e],al
   1000235c4:	add    BYTE PTR [rax],al
   1000235c6:	add    BYTE PTR [rax+0x19f],al
   1000235cc:	add    BYTE PTR [rax],al
   1000235ce:	add    BYTE PTR [rax+0x19b],al
   1000235d4:	add    BYTE PTR [rax],al
   1000235d6:	add    BYTE PTR [rax+0x217],al
   1000235dc:	add    BYTE PTR [rax],al
   1000235de:	add    BYTE PTR [rax+0x1ae],al
   1000235e4:	add    BYTE PTR [rax],al
   1000235e6:	add    BYTE PTR [rax+0xde],al
   1000235ec:	add    BYTE PTR [rax],al
   1000235ee:	add    BYTE PTR [rax+0xe0],al
   1000235f4:	add    BYTE PTR [rax],al
   1000235f6:	add    BYTE PTR [rax+0x355],al
   1000235fc:	add    BYTE PTR [rax],al
   1000235fe:	add    BYTE PTR [rax+0x27b],al
   100023604:	add    BYTE PTR [rax],al
   100023606:	add    BYTE PTR [rax+0x1ca],al
   10002360c:	add    BYTE PTR [rax],al
   10002360e:	add    BYTE PTR [rax+0x134],al
   100023614:	add    BYTE PTR [rax],al
   100023616:	add    BYTE PTR [rax+0x27a],al
   10002361c:	add    BYTE PTR [rax],al
   10002361e:	add    BYTE PTR [rax+0x273],al
   100023624:	add    BYTE PTR [rax],al
   100023626:	add    BYTE PTR [rax+0x27e],al
   10002362c:	add    BYTE PTR [rax],al
   10002362e:	add    BYTE PTR [rax+0x108],al
   100023634:	add    BYTE PTR [rax],al
   100023636:	add    BYTE PTR [rax+0x2f],al
   10002363c:	add    BYTE PTR [rax],al
   10002363e:	add    BYTE PTR [rax+0x102],al
   100023644:	add    BYTE PTR [rax],al
   100023646:	add    BYTE PTR [rax+0x377],al
   10002364c:	add    BYTE PTR [rax],al
   10002364e:	add    BYTE PTR [rax+0x39a],al
   100023654:	add    BYTE PTR [rax],al
   100023656:	add    BYTE PTR [rax+0x2b9],al
   10002365c:	add    BYTE PTR [rax],al
   10002365e:	add    BYTE PTR [rax+0x249],al
   100023664:	add    BYTE PTR [rax],al
   100023666:	add    BYTE PTR [rax+0x242],al
   10002366c:	add    BYTE PTR [rax],al
   10002366e:	add    BYTE PTR [rax+0x194],al
   100023674:	add    BYTE PTR [rax],al
   100023676:	add    BYTE PTR [rax+0x1d2],al
   10002367c:	add    BYTE PTR [rax],al
   10002367e:	add    BYTE PTR [rax+0x209],al
   100023684:	add    BYTE PTR [rax],al
   100023686:	add    BYTE PTR [rax+0x37b],al
   10002368c:	add    BYTE PTR [rax],al
   10002368e:	add    BYTE PTR [rax+0x1fe],al
   100023694:	add    BYTE PTR [rax],al
   100023696:	add    BYTE PTR [rax+0xee],al
   10002369c:	add    BYTE PTR [rax],al
   10002369e:	add    BYTE PTR [rax+0x369],al
   1000236a4:	add    BYTE PTR [rax],al
   1000236a6:	add    BYTE PTR [rax+0x2b3],al
   1000236ac:	add    BYTE PTR [rax],al
   1000236ae:	add    BYTE PTR [rax+0x349],al
   1000236b4:	add    BYTE PTR [rax],al
   1000236b6:	add    BYTE PTR [rax+0x399],al
   1000236bc:	add    BYTE PTR [rax],al
   1000236be:	add    BYTE PTR [rax+0x33],al
   1000236c4:	add    BYTE PTR [rax],al
   1000236c6:	add    BYTE PTR [rax+0x2c4],al
   1000236cc:	add    BYTE PTR [rax],al
   1000236ce:	add    BYTE PTR [rax+0x393],al
   1000236d4:	add    BYTE PTR [rax],al
   1000236d6:	add    BYTE PTR [rax+0x3fe],al
   1000236dc:	add    BYTE PTR [rax],al
   1000236de:	add    BYTE PTR [rax+0x3a0],al
   1000236e4:	add    BYTE PTR [rax],al
   1000236e6:	add    BYTE PTR [rax+0x30],al
   1000236ec:	add    BYTE PTR [rax],al
   1000236ee:	add    BYTE PTR [rax+0x3d3],al
   1000236f4:	add    BYTE PTR [rax],al
   1000236f6:	add    BYTE PTR [rax+0x3ed],al
   1000236fc:	add    BYTE PTR [rax],al
   1000236fe:	add    BYTE PTR [rax+0x3e1],al
   100023704:	add    BYTE PTR [rax],al
   100023706:	add    BYTE PTR [rax+0x3dd],al
   10002370c:	add    BYTE PTR [rax],al
   10002370e:	add    BYTE PTR [rax+0x2de],al
   100023714:	add    BYTE PTR [rax],al
   100023716:	add    BYTE PTR [rax+0x2e8],al
   10002371c:	add    BYTE PTR [rax],al
   10002371e:	add    BYTE PTR [rax+0x2cb],al
   100023724:	add    BYTE PTR [rax],al
   100023726:	add    BYTE PTR [rax+0x2d0],al
   10002372c:	add    BYTE PTR [rax],al
   10002372e:	add    BYTE PTR [rax+0x2db],al
   100023734:	add    BYTE PTR [rax],al
   100023736:	add    BYTE PTR [rax+0x2e6],al
   10002373c:	add    BYTE PTR [rax],al
   10002373e:	add    BYTE PTR [rax+0x2d1],al
   100023744:	add    BYTE PTR [rax],al
   100023746:	add    BYTE PTR [rax+0x2d3],al
   10002374c:	add    BYTE PTR [rax],al
   10002374e:	add    BYTE PTR [rax+0x2d2],al
   100023754:	add    BYTE PTR [rax],al
   100023756:	add    BYTE PTR [rax+0x2e5],al
   10002375c:	add    BYTE PTR [rax],al
   10002375e:	add    BYTE PTR [rax+0x2e7],al
   100023764:	add    BYTE PTR [rax],al
   100023766:	add    BYTE PTR [rax+0x2ed],al
   10002376c:	add    BYTE PTR [rax],al
   10002376e:	add    BYTE PTR [rax+0x2d4],al
   100023774:	add    BYTE PTR [rax],al
   100023776:	add    BYTE PTR [rax+0x2ca],al
   10002377c:	add    BYTE PTR [rax],al
   10002377e:	add    BYTE PTR [rax+0x2dd],al
   100023784:	add    BYTE PTR [rax],al
   100023786:	add    BYTE PTR [rax+0x2ee],al
   10002378c:	add    BYTE PTR [rax],al
   10002378e:	add    BYTE PTR [rax+0x2da],al
   100023794:	add    BYTE PTR [rax],al
   100023796:	add    BYTE PTR [rax+0x2e3],al
   10002379c:	add    BYTE PTR [rax],al
   10002379e:	add    BYTE PTR [rax+0x2d6],al
   1000237a4:	add    BYTE PTR [rax],al
   1000237a6:	add    BYTE PTR [rax+0x2c9],al
   1000237ac:	add    BYTE PTR [rax],al
   1000237ae:	add    BYTE PTR [rax+0x2d8],al
   1000237b4:	add    BYTE PTR [rax],al
   1000237b6:	add    BYTE PTR [rax+0x2d7],al
   1000237bc:	add    BYTE PTR [rax],al
   1000237be:	add    BYTE PTR [rax+0x3f7],al
   1000237c4:	add    BYTE PTR [rax],al
   1000237c6:	add    BYTE PTR [rax+0x3f6],al
   1000237cc:	add    BYTE PTR [rax],al
   1000237ce:	add    BYTE PTR [rax+0x3f5],al
   1000237d4:	add    BYTE PTR [rax],al
   1000237d6:	add    BYTE PTR [rax+0x2f1],al
   1000237dc:	add    BYTE PTR [rax],al
   1000237de:	add    BYTE PTR [rax+0x2f2],al
   1000237e4:	add    BYTE PTR [rax],al
   1000237e6:	add    BYTE PTR [rax+0x25a],al
   1000237ec:	add    BYTE PTR [rax],al
   1000237ee:	add    BYTE PTR [rax+0x3c9],al
   1000237f4:	add    BYTE PTR [rax],al
   1000237f6:	add    BYTE PTR [rax+0x3e3],al
   1000237fc:	add    BYTE PTR [rax],al
   1000237fe:	add    BYTE PTR [rax+0x3d5],al
   100023804:	add    BYTE PTR [rax],al
   100023806:	add    BYTE PTR [rax+0x3f4],al
   10002380c:	add    BYTE PTR [rax],al
   10002380e:	add    BYTE PTR [rax+0x3b7],al
   100023814:	add    BYTE PTR [rax],al
   100023816:	add    BYTE PTR [rax+0x2f9],al
   10002381c:	add    BYTE PTR [rax],al
   10002381e:	add    BYTE PTR [rax+0x3a3],al
   100023824:	add    BYTE PTR [rax],al
   100023826:	add    BYTE PTR [rax+0x0],al
   10002382c:	add    BYTE PTR [rax],al
   10002382e:	add    BYTE PTR [rax],al
   100023830:	enter  0x5302,0x74
   100023834:	(bad)  
   100023835:	jb     0x1000238ab
   100023837:	push   rbx
   100023838:	gs jb  0x1000238b1
   10002383b:	imul   esp,DWORD PTR [rbx+0x65],0x6c727443
   100023842:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   10002384a:	gs jb  0x1000238a4
   10002384d:	add    BYTE PTR [rbp+0x67655202],al
   100023853:	imul   esi,DWORD PTR [rbx+0x74],0x65537265
   10002385a:	jb     0x1000238d2
   10002385c:	imul   esp,DWORD PTR [rbx+0x65],0x6c727443
   100023863:	rex.W (bad) 
   100023865:	outs   dx,BYTE PTR ds:[rsi]
   100023866:	fs ins BYTE PTR es:[rdi],dx
   100023868:	gs jb  0x1000238ac
   10002386b:	add    BYTE PTR [rsi+0x74655302],bh
   100023871:	push   rbx
   100023872:	gs jb  0x1000238eb
   100023875:	imul   esp,DWORD PTR [rbx+0x65],0x73746942
   10002387c:	add    BYTE PTR [rax],al
   10002387e:	rol    BYTE PTR [rdx],0x53
   100023881:	gs je  0x1000238d7
   100023884:	gs jb  0x1000238fd
   100023887:	imul   esp,DWORD PTR [rbx+0x65],0x74617453
   10002388e:	jne    0x100023903
   100023890:	add    BYTE PTR [rax],al
   100023892:	push   rdx
   100023893:	add    dl,BYTE PTR [rdx+0x65]
   100023896:	rex.RB outs dx,BYTE PTR ds:[esi]
   100023899:	jne    0x100023908
   10002389b:	push   rsi
   10002389c:	(bad)  
   10002389d:	ins    BYTE PTR es:[rdi],dx
   10002389e:	jne    0x100023905
   1000238a0:	push   rdi
   1000238a1:	add    BYTE PTR [rdx+rax*1+0x52],ah
   1000238a5:	gs addr32 rex.WRXB jo 0x10002390f
   1000238aa:	outs   dx,BYTE PTR ds:[rsi]
   1000238ab:	rex.WXB
   1000238ac:	gs jns 0x100023906
   1000238af:	add    BYTE PTR [rcx+0x2],ah
   1000238b2:	push   rdx
   1000238b3:	gs addr32 rex.WRXB jo 0x10002391d
   1000238b8:	outs   dx,BYTE PTR ds:[rsi]
   1000238b9:	rex.WXB
   1000238ba:	gs jns 0x100023902
   1000238bd:	js     0x100023916
   1000238bf:	add    BYTE PTR [rbp+0x2],ch
   1000238c2:	push   rdx
   1000238c3:	gs addr32 push rcx
   1000238c6:	jne    0x10002392d
   1000238c8:	jb     0x100023943
   1000238ca:	push   rsi
   1000238cb:	(bad)  
   1000238cc:	ins    BYTE PTR es:[rdi],dx
   1000238cd:	jne    0x100023934
   1000238cf:	rex.RB js 0x100023913
   1000238d2:	add    BYTE PTR [rax],al
   1000238d4:	outs   dx,BYTE PTR ds:[rsi]
   1000238d5:	add    dl,BYTE PTR [rdx+0x65]
   1000238d8:	addr32 push rcx
   1000238da:	jne    0x100023941
   1000238dc:	jb     0x100023957
   1000238de:	push   rsi
   1000238df:	(bad)  
   1000238e0:	ins    BYTE PTR es:[rdi],dx
   1000238e1:	jne    0x100023948
   1000238e3:	rex.RB js 0x10002393d
   1000238e6:	add    BYTE PTR [rax],al
   1000238e8:	jge    0x1000238ec
   1000238ea:	push   rdx
   1000238eb:	gs addr32 push rbx
   1000238ee:	gs je  0x100023947
   1000238f1:	(bad)  
   1000238f2:	ins    BYTE PTR es:[rdi],dx
   1000238f3:	jne    0x10002395a
   1000238f5:	rex.RB js 0x100023939
   1000238f8:	add    BYTE PTR [rax],al
   1000238fa:	xor    BYTE PTR [rdx],al
   1000238fc:	push   rdx
   1000238fd:	gs rex.XB ins BYTE PTR es:[edi],dx
   100023901:	outs   dx,DWORD PTR ds:[rsi]
   100023902:	jae    0x100023969
   100023904:	rex.WXB
   100023905:	gs jns 0x100023908
   100023908:	xlat   BYTE PTR ds:[rbx]
   100023909:	add    cl,BYTE PTR [rax+0x65]
   10002390c:	(bad)  
   10002390d:	jo     0x100023955
   10002390f:	jb     0x100023976
   100023911:	add    BYTE PTR gs:[rax],al
   100023914:	push   rcx
   100023915:	add    al,BYTE PTR [rdi+0x65]
   100023918:	je     0x10002396a
   10002391a:	jb     0x10002398b
   10002391c:	movsxd esp,DWORD PTR [rbp+0x73]
   10002391f:	jae    0x100023969
   100023921:	gs (bad) 
   100023923:	jo     0x100023925
   100023925:	add    BYTE PTR [rax+0x1],ch
   100023928:	rex.RX jb 0x100023990
   10002392b:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   100023934:	gs add al,0x53
   100023937:	gs je  0x10002397f
   10002393a:	outs   dx,BYTE PTR ds:[rsi]
   10002393b:	jbe    0x1000239a6
   10002393d:	jb     0x1000239ae
   10002393f:	outs   dx,BYTE PTR ds:[rsi]
   100023940:	ins    DWORD PTR es:[rdi],dx
   100023941:	outs   dx,BYTE PTR gs:[rsi]
   100023943:	je     0x10002399b
   100023945:	(bad)  
   100023946:	jb     0x1000239b1
   100023948:	(bad)  
   100023949:	(bad)  
   10002394a:	ins    BYTE PTR es:[rdi],dx
   10002394b:	gs push rdi
   10002394d:	add    BYTE PTR [rdx+0x74655304],cl
   100023953:	push   rax
   100023954:	jb     0x1000239bf
   100023956:	outs   dx,DWORD PTR ds:[rsi]
   100023957:	jb     0x1000239c2
   100023959:	je     0x1000239d4
   10002395b:	rex.XB ins BYTE PTR es:[rdi],dx
   10002395d:	(bad)  
   10002395e:	jae    0x1000239d3
   100023960:	add    BYTE PTR [rax],al
   100023962:	retf   0x4701
   100023965:	gs je  0x1000239ab
   100023968:	jne    0x1000239dc
   10002396a:	jb     0x1000239d1
   10002396c:	outs   dx,BYTE PTR ds:[rsi]
   10002396d:	je     0x1000239c3
   10002396f:	push   0x64616572
   100023974:	add    BYTE PTR [rax],al
   100023976:	add    al,BYTE PTR [r15+0x65]
   10002397a:	je     0x1000239cc
   10002397c:	jb     0x1000239e7
   10002397e:	outs   dx,DWORD PTR ds:[rsi]
   10002397f:	jb     0x1000239ea
   100023981:	je     0x1000239fc
   100023983:	rex.XB ins BYTE PTR es:[rdi],dx
   100023985:	(bad)  
   100023986:	jae    0x1000239fb
   100023988:	add    BYTE PTR [rax],al
   10002398a:	enter  0x4702,0x6c
   10002398e:	outs   dx,DWORD PTR ds:[rsi]
   10002398f:	(bad)
   100023994:	ins    DWORD PTR es:[rdi],dx
   100023995:	outs   dx,DWORD PTR ds:[rsi]
   100023996:	jb     0x100023a11
   100023998:	push   rbx
   100023999:	je     0x1000239fc
   10002399b:	je     0x100023a12
   10002399d:	jae    0x1000239e4
   10002399f:	js     0x1000239a1
   1000239a1:	add    BYTE PTR [rsi],bl
   1000239a3:	add    al,BYTE PTR [rdi+0x65]
   1000239a6:	je     0x1000239f5
   1000239a8:	outs   dx,DWORD PTR ds:[rsi]
   1000239a9:	fs jne 0x100023a18
   1000239ac:	gs rex.W (bad) 
   1000239af:	outs   dx,BYTE PTR ds:[rsi]
   1000239b0:	fs ins BYTE PTR es:[rdi],dx
   1000239b2:	gs push rdi
   1000239b4:	add    BYTE PTR [rax],al
   1000239b6:	pop    QWORD PTR [rbx+rdx*2]
   1000239b9:	gs je  0x100023a0c
   1000239bc:	jb     0x100023a2d
   1000239be:	movsxd esp,DWORD PTR [rbp+0x73]
   1000239c1:	jae    0x100023a13
   1000239c3:	jb     0x100023a2e
   1000239c5:	outs   dx,DWORD PTR ds:[rsi]
   1000239c6:	jb     0x100023a31
   1000239c8:	je     0x100023a43
   1000239ca:	rex.X outs dx,DWORD PTR ds:[rsi]
   1000239cc:	outs   dx,DWORD PTR ds:[rsi]
   1000239cd:	jae    0x100023a43
   1000239cf:	add    BYTE PTR [rbx],bl
   1000239d1:	add    al,BYTE PTR [rdi+0x65]
   1000239d4:	je     0x100023a23
   1000239d6:	outs   dx,DWORD PTR ds:[rsi]
   1000239d7:	fs jne 0x100023a46
   1000239da:	gs rex.W (bad) 
   1000239dd:	outs   dx,BYTE PTR ds:[rsi]
   1000239de:	fs ins BYTE PTR es:[rdi],dx
   1000239e0:	add    BYTE PTR gs:[r8],al
   1000239e4:	xchg   ebp,eax
   1000239e5:	add    DWORD PTR [rdi+0x65],eax
   1000239e8:	je     0x100023a2d
   1000239ea:	outs   dx,DWORD PTR ds:[rsi]
   1000239eb:	ins    DWORD PTR es:[rdi],dx
   1000239ec:	jo     0x100023a63
   1000239ee:	je     0x100023a55
   1000239f0:	jb     0x100023a40
   1000239f2:	(bad)  
   1000239f3:	ins    DWORD PTR es:[rdi],dx
   1000239f4:	gs push rdi
   1000239f6:	add    BYTE PTR [rax],al
   1000239f8:	(bad)  
   1000239f9:	add    al,BYTE PTR [rdi+0x65]
   1000239fc:	je     0x100023a52
   1000239fe:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   100023a05:	je     0x100023a07
   100023a07:	add    BYTE PTR [rbp+0x65724300],bh
   100023a0d:	(bad)  
   100023a0e:	je     0x100023a75
   100023a10:	push   rsp
   100023a11:	outs   dx,DWORD PTR ds:[rsi]
   100023a12:	outs   dx,DWORD PTR ds:[rsi]
   100023a13:	ins    BYTE PTR es:[rdi],dx
   100023a14:	push   0x33706c65
   100023a19:	xor    dl,BYTE PTR [rbx+0x6e]
   100023a1c:	(bad)  
   100023a1d:	jo     0x100023a92
   100023a1f:	push   0x746f
   100023a24:	cwde   
   100023a25:	add    edx,DWORD PTR [rax+0x72]
   100023a28:	outs   dx,DWORD PTR ds:[rsi]
   100023a29:	movsxd esp,DWORD PTR [rbp+0x73]
   100023a2c:	jae    0x100023a61
   100023a2e:	xor    al,BYTE PTR [rsi+0x69]
   100023a31:	jb     0x100023aa6
   100023a33:	je     0x100023a8c
   100023a35:	add    BYTE PTR [rdx+0x65704f03],al
   100023a3b:	outs   dx,BYTE PTR ds:[rsi]
   100023a3c:	push   rax
   100023a3d:	jb     0x100023aae
   100023a3f:	movsxd esp,DWORD PTR [rbp+0x73]
   100023a42:	jae    0x100023a44
   100023a44:	(bad)  
   100023a45:	add    edx,DWORD PTR [rax+0x72]
   100023a48:	outs   dx,DWORD PTR ds:[rsi]
   100023a49:	movsxd esp,DWORD PTR [rbp+0x73]
   100023a4c:	jae    0x100023a81
   100023a4e:	xor    cl,BYTE PTR [rsi+0x65]
   100023a51:	js     0x100023ac7
   100023a53:	push   rdi
   100023a54:	add    BYTE PTR [rax],al
   100023a56:	rol    DWORD PTR [rsp+rdx*2],1
   100023a59:	push   0x64616572
   100023a5e:	xor    esi,DWORD PTR [rdx]
   100023a60:	rex.RX imul r14d,DWORD PTR [rdx+0x73],0x3870074
   100023a68:	rex.WRXB jo 0x100023ad0
   100023a6b:	outs   dx,BYTE PTR ds:[rsi]
   100023a6c:	push   rsp
   100023a6d:	push   0x64616572
   100023a72:	add    BYTE PTR [rax],al
   100023a74:	cwde   
   100023a75:	add    al,BYTE PTR [rdi+0x65]
   100023a78:	je     0x100023ace
   100023a7a:	push   0x64616572
   100023a7f:	push   rsp
   100023a80:	imul   ebp,DWORD PTR [rbp+0x65],0xd2000073
   100023a87:	add    al,0x54
   100023a89:	push   0x64616572
   100023a8e:	xor    esi,DWORD PTR [rdx]
   100023a90:	rex.WRX
   100023a91:	gs js  0x100023b08
   100023a94:	add    BYTE PTR [rax],al
   100023a96:	loop   0x100023a9c
   100023a98:	push   rbp
   100023a99:	outs   dx,BYTE PTR ds:[rsi]
   100023a9a:	push   0x6c646e61
   100023a9f:	gs fs rex.RB js 0x100023b07
   100023aa4:	gs jo  0x100023b1b
   100023aa7:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   100023aae:	gs jb  0x100023ab1
   100023ab1:	add    dh,cl
   100023ab3:	add    al,0x54
   100023ab5:	gs jb  0x100023b25
   100023ab8:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   100023abf:	outs   dx,DWORD PTR ds:[rsi]
   100023ac0:	movsxd esp,DWORD PTR [rbp+0x73]
   100023ac3:	jae    0x100023ac5
   100023ac5:	add    dh,al
   100023ac7:	add    DWORD PTR [rdi+0x65],eax
   100023aca:	je     0x100023b0f
   100023acc:	jne    0x100023b40
   100023ace:	jb     0x100023b35
   100023ad0:	outs   dx,BYTE PTR ds:[rsi]
   100023ad1:	je     0x100023b23
   100023ad3:	jb     0x100023b44
   100023ad5:	movsxd esp,DWORD PTR [rbp+0x73]
   100023ad8:	jae    0x100023ada
   100023ada:	(bad)  
   100023adb:	add    al,0x54
   100023add:	ins    BYTE PTR es:[rdi],dx
   100023ade:	jae    0x100023b27
   100023ae0:	gs je  0x100023b39
   100023ae3:	(bad)  
   100023ae4:	ins    BYTE PTR es:[rdi],dx
   100023ae5:	jne    0x100023b4c
   100023ae7:	add    BYTE PTR [rdx+0x0],dl
   100023aea:	rex.XB ins BYTE PTR es:[rdi],dx
   100023aec:	outs   dx,DWORD PTR ds:[rsi]
   100023aed:	jae    0x100023b54
   100023aef:	rex.W (bad) 
   100023af1:	outs   dx,BYTE PTR ds:[rsi]
   100023af2:	fs ins BYTE PTR es:[rdi],dx
   100023af4:	add    BYTE PTR gs:[rax],cl
   100023af7:	add    al,BYTE PTR [rdi+0x65]
   100023afa:	je     0x100023b48
   100023afc:	(bad)  
   100023afd:	jae    0x100023b73
   100023aff:	rex.RB jb 0x100023b74
   100023b02:	outs   dx,DWORD PTR ds:[rsi]
   100023b03:	jb     0x100023b05
   100023b05:	add    BYTE PTR [rbx],bh
   100023b07:	add    al,0x53
   100023b09:	gs je  0x100023b4f
   100023b0c:	outs   dx,DWORD PTR ds:[rsi]
   100023b0d:	outs   dx,BYTE PTR ds:[rsi]
   100023b0e:	jae    0x100023b7f
   100023b10:	ins    BYTE PTR es:[rdi],dx
   100023b11:	gs rex.XB je 0x100023b87
   100023b15:	ins    BYTE PTR es:[rdi],dx
   100023b16:	rex.W (bad) 
   100023b18:	outs   dx,BYTE PTR ds:[rsi]
   100023b19:	fs ins BYTE PTR es:[rdi],dx
   100023b1b:	gs jb  0x100023b1e
   100023b1e:	(bad)  
   100023b1f:	add    cl,BYTE PTR [rcx+0x6e]
   100023b22:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   100023b2a:	rex.XB jb 0x100023b96
   100023b2d:	je     0x100023b98
   100023b2f:	movsxd esp,DWORD PTR [rcx+0x6c]
   100023b32:	push   rbx
   100023b33:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   100023b38:	outs   dx,BYTE PTR ds:[rsi]
   100023b39:	add    dl,dh
   100023b3b:	add    BYTE PTR [rbp+0x6e],al
   100023b3e:	je     0x100023ba5
   100023b40:	jb     0x100023b85
   100023b42:	jb     0x100023bad
   100023b44:	je     0x100023baf
   100023b46:	movsxd esp,DWORD PTR [rcx+0x6c]
   100023b49:	push   rbx
   100023b4a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   100023b4f:	outs   dx,BYTE PTR ds:[rsi]
   100023b50:	add    BYTE PTR [rax],al
   100023b52:	(bad)  
   100023b53:	add    BYTE PTR [rbx+0x72],al
   100023b56:	gs (bad) 
   100023b58:	je     0x100023bbf
   100023b5a:	rex.RB jbe 0x100023bc2
   100023b5d:	outs   dx,BYTE PTR ds:[rsi]
   100023b5e:	je     0x100023ba1
   100023b60:	add    BYTE PTR [rax],al
   100023b62:	cmp    eax,DWORD PTR [rbx]
   100023b64:	rex.WR
   100023b65:	gs (bad) 
   100023b67:	jbe    0x100023bce
   100023b69:	rex.XB jb 0x100023bd5
   100023b6c:	je     0x100023bd7
   100023b6e:	movsxd esp,DWORD PTR [rcx+0x6c]
   100023b71:	push   rbx
   100023b72:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   100023b77:	outs   dx,BYTE PTR ds:[rsi]
   100023b78:	add    BYTE PTR [rax],al
   100023b7a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   100023b7b:	add    al,0x53
   100023b7d:	gs je  0x100023bd4
   100023b80:	push   0x64616572
   100023b85:	push   rax
   100023b86:	jb     0x100023bf1
   100023b88:	outs   dx,DWORD PTR ds:[rsi]
   100023b89:	jb     0x100023bf4
   100023b8b:	je     0x100023c06
   100023b8d:	add    BYTE PTR [rbp+0x74655304],bl
   100023b93:	push   rsp
   100023b94:	push   0x64616572
   100023b99:	rex.B
   100023b9a:	data16 imul bp,WORD PTR [rsi+0x69],0x7974
   100023ba1:	rex.WRB (bad) 
   100023ba3:	jae    0x100023c10
   100023ba5:	add    BYTE PTR [rsi+0x4],ah
   100023ba8:	push   rbx
   100023ba9:	gs je  0x100023bf1
   100023bac:	jb     0x100023c20
   100023bae:	outs   dx,DWORD PTR ds:[rsi]
   100023baf:	jb     0x100023bfe
   100023bb1:	outs   dx,DWORD PTR ds:[rsi]
   100023bb2:	fs add BYTE PTR gs:[rax],al
   100023bb6:	(bad)  
   100023bb7:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   100023bbb:	(bad)  
   100023bbc:	jo     0x100023c11
   100023bbe:	je     0x100023c32
   100023bc0:	imul   ebp,DWORD PTR [rsi+0x67],0xc0000057
   100023bc7:	add    al,0x53
   100023bc9:	ins    BYTE PTR es:[rdi],dx
   100023bca:	gs gs jo 0x100023bce
   100023bce:	or     BYTE PTR [rip+0x74696157],al        # 0x1746b9d2b
   100023bd4:	rex.RX outs dx,DWORD PTR ds:[rsi]
   100023bd6:	jb     0x100023c2b
   100023bd8:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   100023bdf:	push   0x65
   100023be1:	movsxd esi,DWORD PTR [rax+rax*1+0x67]
   100023be5:	add    al,0x53
   100023be7:	gs je  0x100023c2f
   100023bea:	jbe    0x100023c51
   100023bec:	outs   dx,BYTE PTR ds:[rsi]
   100023bed:	je     0x100023bef
   100023bef:	add    BYTE PTR [rax+0x74654702],al
   100023bf5:	push   rbx
   100023bf6:	jns    0x100023c6b
   100023bf8:	je     0x100023c5f
   100023bfa:	ins    DWORD PTR es:[rdi],dx
   100023bfb:	push   rsp
   100023bfc:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   100023c03:	ins    BYTE PTR es:[rdi],dx
   100023c04:	gs push rsp
   100023c06:	imul   ebp,DWORD PTR [rbp+0x65],0x4f037b00
   100023c0d:	jo     0x100023c74
   100023c0f:	outs   dx,BYTE PTR ds:[rsi]
   100023c10:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   100023c19:	outs   dx,BYTE PTR ds:[rsi]
   100023c1a:	addr32 push rdi
   100023c1c:	add    BYTE PTR [rax],al
   100023c1e:	mov    WORD PTR [rax],es
   100023c20:	rex.XB jb 0x100023c88
   100023c23:	(bad)  
   100023c24:	je     0x100023c8b
   100023c26:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   100023c2f:	outs   dx,BYTE PTR ds:[rsi]
   100023c30:	addr32 push rdi
   100023c32:	add    BYTE PTR [rax],al
   100023c34:	pop    rcx
   100023c35:	add    ecx,DWORD PTR [rbp+0x61]
   100023c38:	jo     0x100023c90
   100023c3a:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   100023c41:	ins    BYTE PTR es:[rdi],dx
   100023c42:	add    BYTE PTR gs:[rdx],bl
   100023c45:	add    al,BYTE PTR [rdi+0x65]
   100023c48:	je     0x100023c97
   100023c4a:	outs   dx,DWORD PTR ds:[rsi]
   100023c4b:	fs jne 0x100023cba
   100023c4e:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   100023c58:	add    BYTE PTR [rax],al
   100023c5a:	out    dx,al
   100023c5b:	add    BYTE PTR [rbp+0x6e],al
   100023c5e:	movsxd ebp,DWORD PTR [rdi+0x64]
   100023c61:	gs push rax
   100023c63:	outs   dx,DWORD PTR ds:[rsi]
   100023c64:	imul   ebp,DWORD PTR [rsi+0x74],0xcb007265
   100023c6b:	add    BYTE PTR [rbp+riz*2+0x63],al
   100023c6f:	outs   dx,DWORD PTR ds:[rsi]
   100023c70:	fs gs push rax
   100023c73:	outs   dx,DWORD PTR ds:[rsi]
   100023c74:	imul   ebp,DWORD PTR [rsi+0x74],0xa9007265
   100023c7b:	add    edx,DWORD PTR [rcx+0x75]
   100023c7e:	gs jb  0x100023cfa
   100023c81:	push   rax
   100023c82:	gs jb  0x100023ceb
   100023c85:	outs   dx,DWORD PTR ds:[rsi]
   100023c86:	jb     0x100023cf5
   100023c88:	(bad)  
   100023c89:	outs   dx,BYTE PTR ds:[rsi]
   100023c8a:	movsxd esp,DWORD PTR [rbp+0x43]
   100023c8d:	outs   dx,DWORD PTR ds:[rsi]
   100023c8e:	jne    0x100023cfe
   100023c90:	je     0x100023cf7
   100023c92:	jb     0x100023c94
   100023c94:	retf   
   100023c95:	add    DWORD PTR [rdi+0x65],eax
   100023c98:	je     0x100023cdd
   100023c9a:	jne    0x100023d0e
   100023c9c:	jb     0x100023d03
   100023c9e:	outs   dx,BYTE PTR ds:[rsi]
   100023c9f:	je     0x100023cf5
   100023ca1:	push   0x64616572
   100023ca6:	rex.WB
   100023ca7:	add    BYTE PTR fs:[rax],al
   100023caa:	mov    DWORD PTR [rcx],0x43746547
   100023cb0:	jne    0x100023d24
   100023cb2:	jb     0x100023d19
   100023cb4:	outs   dx,BYTE PTR ds:[rsi]
   100023cb5:	je     0x100023d07
   100023cb7:	jb     0x100023d28
   100023cb9:	movsxd esp,DWORD PTR [rbp+0x73]
   100023cbc:	jae    0x100023d07
   100023cbe:	add    BYTE PTR fs:[rax],al
   100023cc1:	add    eax,0x74726956
   100023cc6:	jne    0x100023d29
   100023cc8:	ins    BYTE PTR es:[rdi],dx
   100023cc9:	push   rcx
   100023cca:	jne    0x100023d31
   100023ccc:	jb     0x100023d47
   100023cce:	add    BYTE PTR [rax],al
   100023cd0:	rol    DWORD PTR [rdx],cl
   100023cd2:	rex.W
   100023cd3:	gs (bad) 
   100023cd5:	jo     0x100023d18
   100023cd7:	ins    BYTE PTR es:[rdi],dx
   100023cd8:	ins    BYTE PTR es:[rdi],dx
   100023cd9:	outs   dx,DWORD PTR ds:[rsi]
   100023cda:	movsxd eax,DWORD PTR [rax]
   100023cdc:	add    BYTE PTR [rbx+rdx*2],0x65
   100023ce0:	je     0x100023d2e
   100023ce2:	(bad)  
   100023ce3:	jae    0x100023d59
   100023ce5:	rex.RB jb 0x100023d5a
   100023ce8:	outs   dx,DWORD PTR ds:[rsi]
   100023ce9:	jb     0x100023ceb
   100023ceb:	add    al,cl
   100023ced:	add    BYTE PTR [rbp+riz*2+0x62],al
   100023cf1:	jne    0x100023d5a
   100023cf3:	rex.X jb 0x100023d5b
   100023cf6:	(bad)  
   100023cf7:	imul   eax,DWORD PTR [rax],0x0
   100023cfa:	and    eax,DWORD PTR [rcx]
   100023cfc:	rex.RB js 0x100023d6f
   100023cff:	(bad)  
   100023d00:	outs   dx,BYTE PTR ds:[rsi]
   100023d01:	rex.RB outs dx,BYTE PTR fs:[rsi]
   100023d04:	jbe    0x100023d6f
   100023d06:	jb     0x100023d77
   100023d08:	outs   dx,BYTE PTR ds:[rsi]
   100023d09:	ins    DWORD PTR es:[rdi],dx
   100023d0a:	outs   dx,BYTE PTR gs:[rsi]
   100023d0c:	je     0x100023d61
   100023d0e:	je     0x100023d82
   100023d10:	imul   ebp,DWORD PTR [rsi+0x67],0x49005773
   100023d17:	add    al,BYTE PTR [rdi+0x65]
   100023d1a:	je     0x100023d6c
   100023d1c:	jb     0x100023d87
   100023d1e:	jbe    0x100023d81
   100023d20:	je     0x100023d87
   100023d22:	push   rax
   100023d23:	jb     0x100023d94
   100023d25:	imul   bp,WORD PTR [rbp+riz*2+0x53],0x7274
   100023d2c:	imul   ebp,DWORD PTR [rsi+0x67],0xf1000057
   100023d33:	add    DWORD PTR [rdi+0x65],eax
   100023d36:	je     0x100023d7e
   100023d38:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   100023d40:	(bad)  
   100023d41:	jne    0x100023db7
   100023d43:	gs jae 0x100023d9d
   100023d46:	add    BYTE PTR [rax],al
   100023d48:	imul   eax,DWORD PTR [rbx],0x746c754d
   100023d4e:	imul   eax,DWORD PTR [rdx+0x79],0x6f546574
   100023d55:	push   rdi
   100023d56:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   100023d5e:	and    BYTE PTR [rip+0x65646957],al        # 0x16566a6bb
   100023d64:	rex.XB push 0x6f547261
   100023d6a:	rex.WRB jne 0x100023dd9
   100023d6d:	je     0x100023dd8
   100023d6f:	rex.X jns 0x100023de6
   100023d72:	add    BYTE PTR gs:[rax+rax*1+0x43],ah
   100023d77:	outs   dx,DWORD PTR ds:[rsi]
   100023d78:	ins    DWORD PTR es:[rdi],dx
   100023d79:	jo     0x100023ddc
   100023d7b:	jb     0x100023de2
   100023d7d:	push   rbx
   100023d7e:	je     0x100023df2
   100023d80:	imul   ebp,DWORD PTR [rsi+0x67],0xe3000057
   100023d87:	add    DWORD PTR [rdi+0x65],eax
   100023d8a:	je     0x100023dd1
   100023d8c:	outs   dx,BYTE PTR ds:[rsi]
   100023d8d:	jbe    0x100023df8
   100023d8f:	jb     0x100023e00
   100023d91:	outs   dx,BYTE PTR ds:[rsi]
   100023d92:	ins    DWORD PTR es:[rdi],dx
   100023d93:	outs   dx,BYTE PTR gs:[rsi]
   100023d95:	je     0x100023ded
   100023d97:	(bad)  
   100023d98:	jb     0x100023e03
   100023d9a:	(bad)  
   100023d9b:	(bad)  
   100023d9c:	ins    BYTE PTR es:[rdi],dx
   100023d9d:	gs push rdi
   100023d9f:	add    dl,bl
   100023da1:	add    cl,BYTE PTR [rax+0x65]
   100023da4:	(bad)  
   100023da5:	jo     0x100023df9
   100023da7:	gs rex.B ins BYTE PTR es:[rdi],dx
   100023daa:	ins    BYTE PTR es:[rdi],dx
   100023dab:	outs   dx,DWORD PTR ds:[rsi]
   100023dac:	movsxd eax,DWORD PTR [rax]
   100023dae:	rex.WR add r8b,BYTE PTR [rdi+0x65]
   100023db2:	je     0x100023e04
   100023db4:	jb     0x100023e25
   100023db6:	movsxd eax,DWORD PTR [rcx+0x64]
   100023db9:	fs jb  0x100023e21
   100023dbc:	jae    0x100023e31
   100023dbe:	add    BYTE PTR [rax],al
   100023dc0:	(bad)  
   100023dc1:	add    eax,0x7274736c
   100023dc6:	ins    BYTE PTR es:[rdi],dx
   100023dc7:	outs   dx,BYTE PTR gs:[rsi]
   100023dc9:	push   rdi
   100023dca:	add    BYTE PTR [rax],al
   100023dcc:	sti    
   100023dcd:	add    al,0x56
   100023dcf:	imul   esi,DWORD PTR [rdx+0x74],0x466c6175
   100023dd6:	jb     0x100023e3d
   100023dd8:	add    BYTE PTR gs:[rdx+0x2],bh
   100023ddc:	rex.RXB
   100023ddd:	gs je  0x100023e33
   100023de0:	jns    0x100023e55
   100023de2:	je     0x100023e49
   100023de4:	ins    DWORD PTR es:[rdi],dx
   100023de5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   100023de7:	outs   dx,WORD PTR ds:[rsi]
   100023de9:	add    BYTE PTR [rcx+0x3],al
   100023dec:	rex.WR outs dx,DWORD PTR ds:[rsi]
   100023dee:	(bad)  
   100023def:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   100023df8:	add    BYTE PTR [rax],al
   100023dfa:	(bad)  
   100023dfb:	add    cl,BYTE PTR [rax+0x65]
   100023dfe:	(bad)  
   100023dff:	jo     0x100023e44
   100023e01:	jb     0x100023e68
   100023e03:	(bad)  
   100023e04:	je     0x100023e6b
   100023e06:	add    BYTE PTR [rax],al
   100023e08:	mov    BYTE PTR [rbx],0x52
   100023e0b:	gs (bad) 
   100023e0d:	fs push rax
   100023e0f:	jb     0x100023e80
   100023e11:	movsxd esp,DWORD PTR [rbp+0x73]
   100023e14:	jae    0x100023e63
   100023e16:	gs ins DWORD PTR es:[rdi],dx
   100023e18:	outs   dx,DWORD PTR ds:[rsi]
   100023e19:	jb     0x100023e94
   100023e1b:	add    ch,bh
   100023e1d:	add    edx,DWORD PTR [rdx+0x65]
   100023e20:	ins    BYTE PTR es:[rdi],dx
   100023e21:	gs (bad) 
   100023e23:	jae    0x100023e8a
   100023e25:	rex.WRB jne 0x100023e9c
   100023e28:	gs js  0x100023e2b
   100023e2b:	add    BYTE PTR [rbp+0x4],bh
   100023e2e:	push   rbx
   100023e2f:	gs je  0x100023e7a
   100023e32:	(bad)  
   100023e33:	outs   dx,BYTE PTR ds:[rsi]
   100023e34:	fs ins BYTE PTR es:[rdi],dx
   100023e36:	rex.WB outs dx,BYTE PTR gs:[rsi]
   100023e39:	outs   dx,WORD PTR ds:[rsi]
   100023e3b:	jb     0x100023eaa
   100023e3d:	(bad)  
   100023e3e:	je     0x100023ea9
   100023e40:	outs   dx,DWORD PTR ds:[rsi]
   100023e41:	outs   dx,BYTE PTR ds:[rsi]
   100023e42:	add    BYTE PTR [rax],al
   100023e44:	sahf   
   100023e45:	add    BYTE PTR [rbx+0x72],al
   100023e48:	gs (bad) 
   100023e4a:	je     0x100023eb1
   100023e4c:	rex.WRB jne 0x100023ec3
   100023e4f:	gs js  0x100023ea9
   100023e52:	add    BYTE PTR [rax],al
   100023e54:	out    0x1,al
   100023e56:	rex.RXB
   100023e57:	gs je  0x100023e9f
   100023e5a:	js     0x100023ec5
   100023e5c:	je     0x100023ea1
   100023e5e:	outs   dx,DWORD PTR ds:[rsi]
   100023e5f:	fs gs push rax
   100023e62:	jb     0x100023ed3
   100023e64:	movsxd esp,DWORD PTR [rbp+0x73]
   100023e67:	jae    0x100023e69
   100023e69:	add    BYTE PTR [rax+0x65724300],ch
   100023e6f:	(bad)  
   100023e70:	je     0x100023ed7
   100023e72:	push   rax
   100023e73:	jb     0x100023ee4
   100023e75:	movsxd esp,DWORD PTR [rbp+0x73]
   100023e78:	jae    0x100023ed1
   100023e7a:	add    BYTE PTR [rax],al
   100023e7c:	add    ecx,DWORD PTR ds:[rdi+rbp*2+0x61]
   100023e81:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   100023e8a:	add    BYTE PTR [rax],al
   100023e8c:	add    r9d,DWORD PTR [rdi+r13*2+0x63]
   100023e91:	(bad)  
   100023e92:	ins    BYTE PTR es:[rdi],dx
   100023e93:	rex.B ins BYTE PTR es:[rdi],dx
   100023e95:	ins    BYTE PTR es:[rdi],dx
   100023e96:	outs   dx,DWORD PTR ds:[rsi]
   100023e97:	movsxd eax,DWORD PTR [rax]
   100023e99:	add    BYTE PTR [rbx+0x74655304],dh
   100023e9f:	push   rbp
   100023ea0:	outs   dx,BYTE PTR ds:[rsi]
   100023ea1:	push   0x6c646e61
   100023ea6:	gs fs rex.RB js 0x100023f0e
   100023eab:	gs jo  0x100023f22
   100023eae:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   100023eb5:	gs jb  0x100023eb8
   100023eb8:	push   0x2
   100023eba:	rex.RXB
   100023ebb:	gs je  0x100023f11
   100023ebe:	je     0x100023f21
   100023ec0:	jb     0x100023f36
   100023ec2:	jne    0x100023f34
   100023ec4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   100023ec6:	outs   dx,WORD PTR ds:[rsi]
   100023ec8:	push   rdi
   100023ec9:	add    BYTE PTR [rbp+0x74654702],dl
   100023ecf:	push   rsp
   100023ed0:	push   0x64616572
   100023ed5:	push   rax
   100023ed6:	jb     0x100023f41
   100023ed8:	outs   dx,DWORD PTR ds:[rsi]
   100023ed9:	jb     0x100023f44
   100023edb:	je     0x100023f56
   100023edd:	add    BYTE PTR [rbx+rax*1+0x73696152],dh
   100023ee4:	gs rex.RB js 0x100023f4b
   100023ee8:	gs jo  0x100023f5f
   100023eeb:	imul   ebp,DWORD PTR [rdi+0x6e],0x35f0000
   100023ef2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   100023ef4:	fs jne 0x100023f63
   100023ef7:	xor    esi,DWORD PTR gs:[rdx]
   100023efa:	rex.WRX
   100023efb:	gs js  0x100023f72
   100023efe:	push   rdi
   100023eff:	add    BYTE PTR [rbp+0x6d656d05],ch
   100023f05:	jae    0x100023f6c
   100023f07:	je     0x100023f09
   100023f09:	add    BYTE PTR [rcx+0x6d656d05],ch
   100023f0f:	movsxd esi,DWORD PTR [rax+0x79]
   100023f12:	add    BYTE PTR [rax],al
   100023f14:	in     eax,dx
   100023f15:	add    al,0x5f
   100023f17:	ja     0x100023f86
   100023f19:	(bad)  
   100023f1a:	imul   esp,DWORD PTR [rbp+0x70],0x61
   100023f1e:	je     0x100023f88
   100023f20:	pop    rdi
   100023f21:	jae    0x100023f23
   100023f23:	add    BYTE PTR [rax],bh
   100023f25:	add    al,0x5f
   100023f27:	jae    0x100023fa0
   100023f29:	jae    0x100023f8e
   100023f2b:	(bad)  
   100023f2c:	outs   dx,BYTE PTR ds:[rsi]
   100023f2d:	pop    di
   100023f2f:	jae    0x100023f90
   100023f31:	ins    BYTE PTR es:[rdi],dx
   100023f32:	add    BYTE PTR [rax],al
   100023f34:	out    dx,al
   100023f35:	add    BYTE PTR [rdi],bh
   100023f37:	pop    rdi
   100023f38:	je     0x100023fb3
   100023f3a:	jo     0x100023fa1
   100023f3c:	pop    rdi
   100023f3d:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   100023f44:	outs   dx,DWORD PTR ds:[rsi]
   100023f45:	jb     0x100023fa6
   100023f47:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   100023f4e:	ins    BYTE PTR es:[rdi],dx
   100023f4f:	pop    rdi
   100023f50:	ins    DWORD PTR es:[rdi],dx
   100023f51:	gs je  0x100023fbc
   100023f54:	outs   dx,DWORD PTR ds:[rsi]
   100023f55:	fs rex je 0x100023fd2
   100023f59:	jo     0x100023fc0
   100023f5b:	pop    rdi
   100023f5c:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   100023f63:	rex.RB
   100023f64:	rex.B
   100023f65:	pop    r8
   100023f67:	pop    rax
   100023f68:	pop    rdx
   100023f69:	add    BYTE PTR [rax],al
   100023f6b:	add    DWORD PTR [rdi],edi
   100023f6d:	je     0x100023fd4
   100023f6f:	jb     0x100023fde
   100023f71:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   100023f78:	pop    rcx
   100023f79:	pop    r8
   100023f7b:	pop    rax
   100023f7c:	pop    rdx
   100023f7d:	add    BYTE PTR [rbp+0x6e6f5f03],bl
   100023f83:	gs js  0x100023fef
   100023f86:	je     0x100023f88
   100023f88:	test   BYTE PTR [rdx],0x5f
   100023f8b:	ins    BYTE PTR es:[rdi],dx
   100023f8c:	outs   dx,DWORD PTR ds:[rsi]
   100023f8d:	movsxd ebp,DWORD PTR [rbx+0x0]
   100023f90:	add    QWORD PTR [rdi+0x5f],rbx
   100023f94:	fs ins BYTE PTR es:[rdi],dx
   100023f96:	ins    BYTE PTR es:[rdi],dx
   100023f97:	outs   dx,DWORD PTR ds:[rsi]
   100023f98:	outs   dx,BYTE PTR ds:[rsi]
   100023f99:	gs js  0x100024005
   100023f9c:	je     0x100023f9e
   100023f9e:	pop    rbx
   100023f9f:	add    al,0x5f
   100023fa1:	jne    0x100024011
   100023fa3:	ins    BYTE PTR es:[rdi],dx
   100023fa4:	outs   dx,DWORD PTR ds:[rsi]
   100023fa5:	movsxd ebp,DWORD PTR [rbx+0x0]
   100023fa8:	jns    0x100023fab
   100023faa:	pop    rdi
   100023fab:	pop    rdi
   100023fac:	jae    0x100024013
   100023fae:	je     0x10002400f
   100023fb0:	(bad)  
   100023fb1:	jo     0x100024023
   100023fb3:	pop    rdi
   100023fb4:	je     0x10002402f
   100023fb6:	jo     0x10002401d
   100023fb8:	add    BYTE PTR [rax],al
   100023fba:	sbb    al,0x2
   100023fbc:	pop    rdi
   100023fbd:	ins    WORD PTR es:[rdi],dx
   100023fbf:	outs   dx,DWORD PTR ds:[rsi]
   100023fc0:	fs add BYTE PTR gs:[rax],al
   100023fc4:	jl     0x100023fc7
   100023fc6:	pop    rdi
   100023fc7:	pop    rdi
   100023fc8:	jae    0x10002402f
   100023fca:	je     0x100024041
   100023fcc:	jae    0x100024033
   100023fce:	jb     0x10002403d
   100023fd0:	(bad)  
   100023fd1:	je     0x10002403b
   100023fd3:	gs jb  0x100024048
   100023fd6:	add    BYTE PTR [rax],al
   100023fd8:	vmaxpd xmm12,xmm15,XMMWORD PTR [rbx+0x6f]
   100023fdd:	outs   dx,BYTE PTR ds:[rsi]
   100023fde:	imul   sp,WORD PTR [rdi+0x74],0x7268
   100023fe4:	gs (bad) 
   100023fe6:	fs ins BYTE PTR es:[rdi],dx
   100023fe8:	outs   dx,DWORD PTR ds:[rsi]
   100023fe9:	movsxd esp,DWORD PTR [rcx+0x6c]
   100023fec:	add    BYTE PTR gs:[rdi+0x6e695f02],al
   100023ff3:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   100023ffb:	add    BYTE PTR [rsi+0x6e695f02],al
   100024001:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x91006d72
   100024009:	add    DWORD PTR [rdi+0x5f],ebx
   10002400c:	ja     0x100024077
   10002400e:	outs   dx,BYTE PTR ds:[rsi]
   10002400f:	imul   esi,DWORD PTR [rbp+riz*2+0x6e],0x48000076
   100024017:	add    eax,0x74697865
   10002401c:	add    BYTE PTR [rax],al
   10002401e:	mov    ch,0x1
   100024020:	pop    rdi
   100024021:	movsxd esp,DWORD PTR [rbp+0x78]
   100024024:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x655f0200
   10002402c:	js     0x100024097
   10002402e:	je     0x100024030
   100024030:	sbb    al,BYTE PTR [rcx]
   100024032:	pop    rdi
   100024033:	pop    rax
   100024034:	movsxd esi,DWORD PTR [rax+0x74]
   100024037:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x11e0072
   100024040:	pop    rdi
   100024041:	pop    rdi
   100024042:	rex.XB pop r15
   100024044:	jae    0x1000240b6
   100024046:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   10002404a:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   100024051:	ins    BYTE PTR es:[rdi],dx
   100024052:	gs jb  0x100024055
   100024055:	add    BYTE PTR [rax+0x775f5f01],dl
   10002405b:	addr32 gs je 0x1000240cc
   10002405f:	(bad)  
   100024060:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   100024067:	add    BYTE PTR [rsi+0x6d615f01],bl
   10002406d:	jae    0x1000240d6
   10002406f:	pop    rdi
   100024070:	gs js  0x1000240dc
   100024073:	je     0x100024075
   100024075:	add    BYTE PTR [rsp+rax*1+0x7363775f],bh
   10002407c:	je     0x1000240ed
   10002407e:	ins    BYTE PTR es:[rdi],dx
   10002407f:	pop    rdi
   100024080:	ins    BYTE PTR es:[rdi],dx
   100024081:	add    BYTE PTR [rdi],ah
   100024083:	add    al,0x5f
   100024085:	jae    0x1000240fb
   100024087:	jb     0x1000240fd
   100024089:	outs   dx,DWORD PTR ds:[rsi]
   10002408a:	ins    BYTE PTR es:[rdi],dx
   10002408b:	pop    rdi
   10002408c:	ins    BYTE PTR es:[rdi],dx
   10002408d:	add    BYTE PTR [rsi+0x6c616d05],bl
   100024093:	ins    BYTE PTR es:[rdi],dx
   100024094:	outs   dx,DWORD PTR ds:[rsi]
   100024095:	movsxd eax,DWORD PTR [rax]
   100024097:	add    BYTE PTR [rbx+0x5],ah
   10002409a:	data16 jb 0x100024102
   10002409d:	add    BYTE PTR gs:[rax],al
   1000240a0:	(bad)  
   1000240a1:	(bad)  
   1000240a2:	ja     0x100024107
   1000240a4:	jae    0x100024114
   1000240a6:	movsxd esi,DWORD PTR [rax+0x79]
   1000240a9:	pop    rdi
   1000240aa:	jae    0x1000240ac
   1000240ac:	(bad)  
   1000240ad:	add    ebx,DWORD PTR [rdi+0x73]
   1000240b0:	outs   dx,BYTE PTR ds:[rsi]
   1000240b1:	ja     0x100024123
   1000240b3:	jb     0x10002411e
   1000240b5:	outs   dx,BYTE PTR ds:[rsi]
   1000240b6:	je     0x10002411e
   1000240b8:	pop    rdi
   1000240b9:	ins    BYTE PTR es:[rdi],dx
   1000240ba:	add    BYTE PTR [rax],al
   1000240bc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1000240bd:	add    al,0x5f
   1000240bf:	ja     0x100024124
   1000240c1:	jae    0x10002412c
   1000240c3:	movsxd ebp,DWORD PTR [rbp+0x70]
   1000240c6:	pop    rdi
   1000240c7:	ins    BYTE PTR es:[rdi],dx
   1000240c8:	add    BYTE PTR [rax],al
   1000240ca:	and    DWORD PTR [rsi],eax
   1000240cc:	ja     0x100024131
   1000240ce:	jae    0x100024142
   1000240d0:	movsxd ebp,DWORD PTR [rax+0x72]
   1000240d3:	add    BYTE PTR [rdi],al
   1000240d5:	add    al,0x5f
   1000240d7:	jae    0x10002414d
   1000240d9:	(bad)  
   1000240da:	je     0x100024151
   1000240dc:	jae    0x100024144
   1000240de:	jo     0x1000240e0
   1000240e0:	rol    DWORD PTR [rcx],0x5f
   1000240e3:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   1000240e7:	jb     0x10002414f
   1000240e9:	jo     0x1000240eb
   1000240eb:	add    BYTE PTR [rax],ah
   1000240ed:	add    bl,BYTE PTR [rdi+0x66]
   1000240f0:	jo     0x100024164
   1000240f2:	gs jae 0x10002415a
   1000240f5:	je     0x1000240f7
   1000240f7:	add    bh,al
   1000240f9:	add    DWORD PTR [rdi+0x63],ebx
   1000240fc:	outs   dx,DWORD PTR ds:[rsi]
   1000240fd:	outs   dx,BYTE PTR ds:[rsi]
   1000240fe:	je     0x100024172
   100024100:	outs   dx,DWORD PTR ds:[rsi]
   100024101:	ins    BYTE PTR es:[rdi],dx
   100024102:	data16 jo 0x100024105
   100024105:	add    BYTE PTR [rdx],dl
   100024107:	(bad)  
   100024108:	ja     0x10002416d
   10002410a:	jae    0x10002416f
   10002410c:	push   0xffffffffc3000072
   100024111:	add    al,0x5f
   100024113:	ja     0x100024178
   100024115:	jae    0x10002418c
   100024117:	jo     0x10002418b
   100024119:	pop    rdi
   10002411a:	ins    BYTE PTR es:[rdi],dx
   10002411b:	add    ch,dh
   10002411d:	add    al,0x5f
   10002411f:	ja     0x100024191
   100024121:	jb     0x10002418c
   100024123:	outs   dx,BYTE PTR ds:[rsi]
   100024124:	je     0x10002418c
   100024126:	pop    rdi
   100024127:	ins    BYTE PTR es:[rdi],dx
   100024128:	add    BYTE PTR [rax],al
   10002412a:	(bad)  
   10002412b:	(bad)  
   10002412c:	ja     0x100024191
   10002412e:	jae    0x100024193
   100024130:	jo     0x1000241ab
   100024132:	pop    rdi
   100024133:	jae    0x100024135
   100024135:	add    BYTE PTR [rdx+0x73765f04],al
   10002413b:	outs   dx,BYTE PTR ds:[rsi]
   10002413c:	jo     0x1000241b0
   10002413e:	imul   ebp,DWORD PTR [rsi+0x74],0x6c5f66
   100024145:	add    BYTE PTR [rsi+rax*1],bl
   100024148:	ja     0x1000241ad
   10002414a:	jae    0x1000241ba
   10002414c:	movsxd ebp,DWORD PTR [rbp+0x70]
   10002414f:	add    BYTE PTR [rdi],cl
   100024151:	add    eax,0x7073775f
   100024156:	ins    BYTE PTR es:[rdi],dx
   100024157:	imul   esi,DWORD PTR [rax+rsi*2+0x61],0x735f6874
   10002415f:	add    BYTE PTR [rsi+0x73765f04],al
   100024165:	outs   dx,BYTE PTR ds:[rsi]
   100024166:	ja     0x1000241d8
   100024168:	jb     0x1000241d3
   10002416a:	outs   dx,BYTE PTR ds:[rsi]
   10002416b:	je     0x1000241d3
   10002416d:	pop    rdi
   10002416e:	ins    BYTE PTR es:[rdi],dx
   10002416f:	add    BYTE PTR [rbx],bl
   100024171:	add    bl,BYTE PTR [rdi+0x66]
   100024174:	ins    BYTE PTR es:[rdi],dx
   100024175:	jne    0x1000241ea
   100024177:	push   0x6c6c61
   10002417c:	hlt    
   10002417d:	add    DWORD PTR [rdi+0x65],ebx
   100024180:	outs   dx,BYTE PTR ds:[rsi]
   100024181:	fs je  0x1000241ec
   100024184:	jb     0x1000241eb
   100024186:	(bad)  
   100024187:	fs gs js 0x10002418b
   10002418b:	add    BYTE PTR [rdi+0x65725f03],dh
   100024191:	jae    0x1000241f8
   100024193:	je     0x100024208
   100024195:	je     0x100024202
   100024197:	outs   dx,DWORD PTR ds:[rsi]
   100024198:	data16 ins BYTE PTR es:[rdi],dx
   10002419a:	ja     0x10002419c
   10002419c:	jno    0x1000241a0
   10002419e:	pop    rdi
   10002419f:	addr32 gs je 0x10002421a
   1000241a3:	movsxd ebp,DWORD PTR [rax+0x65]
   1000241a6:	add    BYTE PTR [rax],al
   1000241a8:	outs   dx,DWORD PTR ds:[rsi]
   1000241a9:	add    bl,BYTE PTR [rdi+0x67]
   1000241ac:	gs je  0x100024226
   1000241af:	movsxd ebp,DWORD PTR [rax+0x0]
   1000241b2:	in     eax,dx
   1000241b3:	add    bl,BYTE PTR [rdi+0x6b]
   1000241b6:	(bad)  
   1000241b7:	push   0x7469
   1000241bc:	rol    DWORD PTR [rcx],1
   1000241be:	pop    rdi
   1000241bf:	movsxd esi,DWORD PTR [rax+0x75]
   1000241c2:	je     0x100024237
   1000241c4:	add    BYTE PTR [rax],al
   1000241c6:	lods   eax,DWORD PTR ds:[rsi]
   1000241c7:	add    DWORD PTR [rdi+0x62],ebx
   1000241ca:	imul   ebp,DWORD PTR gs:[esi+0x74],0x61657268
   1000241d3:	fs gs js 0x1000241d7
   1000241d7:	add    bl,dh
   1000241d9:	add    DWORD PTR [rdi+0x65],ebx
   1000241dc:	outs   dx,BYTE PTR ds:[rsi]
   1000241dd:	fs je  0x100024248
   1000241e0:	jb     0x100024247
   1000241e2:	(bad)  
   1000241e3:	add    BYTE PTR fs:[rax],al
   1000241e6:	(bad)
   1000241ea:	outs   dx,DWORD PTR ds:[rsi]
   1000241eb:	ins    DWORD PTR es:[rdi],dx
   1000241ec:	ins    DWORD PTR es:[rdi],dx
   1000241ed:	outs   dx,DWORD PTR ds:[rsi]
   1000241ee:	fs add BYTE PTR gs:[rax],al
   1000241f2:	sub    BYTE PTR [rcx],al
   1000241f4:	pop    rdi
   1000241f5:	pop    rdi
   1000241f6:	rex.XB js 0x100024271
   1000241f9:	rex.RX jb 0x10002425d
   1000241fc:	ins    DWORD PTR es:[rdi],dx
   1000241fd:	gs rex.W (bad) 
   100024200:	outs   dx,BYTE PTR ds:[rsi]
   100024201:	fs ins BYTE PTR es:[rdi],dx
   100024203:	gs jb  0x100024239
   100024206:	add    BYTE PTR [rax],al
   100024208:	xchg   ebp,eax
   100024209:	add    bh,BYTE PTR [rdi]
   10002420b:	movsxd esp,DWORD PTR [rbp+0x72]
   10002420e:	jb     0x100024250
   100024210:	jae    0x100024286
   100024212:	fs rex
   100024214:	rex xor edx,DWORD PTR [rsi+0x3f]
   100024218:	and    al,0x62
   10002421a:	(bad)  
   10002421b:	jae    0x100024286
   10002421d:	movsxd ebx,DWORD PTR [rdi+0x6f]
   100024220:	jae    0x100024296
   100024222:	jb     0x100024289
   100024224:	(bad)  
   100024225:	ins    DWORD PTR es:[rdi],dx
   100024226:	rex
   100024227:	rex.R push rbp
   100024229:	(bad)  
   10002422a:	and    al,0x63
   10002422c:	push   0x745f7261
   100024231:	jb     0x100024294
   100024233:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   10002423b:	fs rex
   10002423d:	rex
   10002423e:	rex xor DWORD PTR [rax+0x41],eax
   100024242:	add    BYTE PTR [rax],al
   100024244:	add    DWORD PTR [rax],0x3f313f3f
   10002424a:	and    al,0x62
   10002424c:	(bad)  
   10002424d:	jae    0x1000242b8
   10002424f:	movsxd ebx,DWORD PTR [rdi+0x73]
   100024252:	je     0x1000242c6
   100024254:	gs (bad) 
   100024256:	ins    DWORD PTR es:[rdi],dx
   100024257:	(bad)  
   100024258:	jne    0x1000242c0
   10002425a:	rex
   10002425b:	rex.R push rbp
   10002425d:	(bad)  
   10002425e:	and    al,0x63
   100024260:	push   0x745f7261
   100024265:	jb     0x1000242c8
   100024267:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   10002426f:	fs rex
   100024271:	rex
   100024272:	rex jae 0x1000242e9
   100024275:	fs rex
   100024277:	rex push rbp
   100024279:	rex.RB
   10002427a:	rex.B
   10002427b:	rex.B
   10002427c:	rex pop rax
   10002427e:	pop    rdx
   10002427f:	add    BYTE PTR [rcx],al
   100024281:	add    BYTE PTR [rdi+0x65],al
   100024284:	je     0x1000242da
   100024286:	ins    BYTE PTR es:[rdi],dx
   100024287:	jae    0x1000242dc
   100024289:	ins    BYTE PTR es:[rdi],dx
   10002428a:	outs   dx,DWORD PTR ds:[rsi]
   10002428b:	je     0x1000242d6
   10002428d:	outs   dx,BYTE PTR ds:[rsi]
   10002428e:	outs   dx,WORD PTR ds:[rsi]
   100024290:	add    BYTE PTR [rax],al
   100024292:	or     BYTE PTR [rcx],al
   100024294:	rex.WRX
   100024295:	gs je  0x1000242ef
   100024298:	imul   esi,DWORD PTR [rbx+0x74],0x61
   10002429c:	rex.RXB
   10002429d:	gs je  0x1000242e9
   1000242a0:	outs   dx,BYTE PTR ds:[rsi]
   1000242a1:	outs   dx,WORD PTR ds:[rsi]
   1000242a3:	add    BYTE PTR [rbp+0x0],ah
   1000242a6:	rex.WRX
   1000242a7:	gs je  0x1000242eb
   1000242aa:	jo     0x100024315
   1000242ac:	rex.X jne 0x100024315
   1000242af:	data16 gs jb 0x1000242f9
   1000242b3:	jb     0x10002431a
   1000242b5:	add    BYTE PTR gs:[rax],al
   1000242b8:	add    eax,DWORD PTR [rax]
   1000242ba:	push   rax
   1000242bb:	fs push 0x43646441
   1000242c1:	outs   dx,DWORD PTR ds:[rsi]
   1000242c2:	jne    0x100024332
   1000242c4:	je     0x10002432b
   1000242c6:	jb     0x10002431f
   1000242c8:	add    BYTE PTR [rax],al
   1000242ca:	adc    BYTE PTR [rax],al
   1000242cc:	push   rax
   1000242cd:	fs push 0x6c6c6f43
   1000242d3:	movsxd esi,DWORD PTR gs:[rcx+rdx*2+0x75]
   1000242d8:	gs jb  0x100024354
   1000242db:	rex.R (bad) 
   1000242dd:	je     0x100024340
   1000242df:	add    BYTE PTR [rdi],bh
   1000242e1:	add    BYTE PTR [rax+0x64],dl
   1000242e4:	push   0x46746547
   1000242e9:	outs   dx,DWORD PTR ds:[rsi]
   1000242ea:	jb     0x100024359
   1000242ec:	(bad)  
   1000242ed:	je     0x100024363
   1000242ef:	gs rex.XB outs dx,DWORD PTR fs:[rsi]
   1000242f3:	jne    0x100024363
   1000242f5:	je     0x10002435c
   1000242f7:	jb     0x10002434f
   1000242f9:	(bad)  
   1000242fa:	ins    BYTE PTR es:[rdi],dx
   1000242fb:	jne    0x100024362
   1000242fd:	add    BYTE PTR [rbp+0x0],dl
   100024300:	push   rax
   100024301:	fs push 0x6e65704f
   100024307:	push   rcx
   100024308:	jne    0x10002436f
   10002430a:	jb     0x100024385
   10002430c:	push   rdi
   10002430d:	add    BYTE PTR [rdi],cl
   10002430f:	add    BYTE PTR [rax+0x64],dl
   100024312:	push   0x736f6c43
   100024317:	gs push rcx
   100024319:	jne    0x100024380
   10002431b:	jb     0x100024396
   10002431d:	add    BYTE PTR [rax+0x90],dl
   100024323:	add    BYTE PTR [rsi+0x49],ch
   100024326:	rex.WRXB add BYTE PTR ss:[r8],r8b
   10002432a:	add    BYTE PTR [rax],al
   10002432c:	add    al,BYTE PTR [rax]
   10002432e:	add    BYTE PTR [rax],al
   100024330:	and    eax,0x5c000000
   100024335:	rex.XB add al,BYTE PTR [r8]
   100024338:	pop    rsp
   100024339:	(bad)  
   10002433a:	add    al,BYTE PTR [rax]
   10002433c:	add    BYTE PTR [rax],al
   10002433e:	add    BYTE PTR [rax],al
   100024340:	outs   dx,BYTE PTR ds:[rsi]
   100024341:	rex.WB
   100024342:	ss rex.WRXB xor rax,0xa1b5c02
   100024349:	add    BYTE PTR [rax],al
   10002434b:	add    BYTE PTR [rax+rax*1],al
   10002434e:	add    BYTE PTR [rax],al
   100024350:	pop    rax
   100024351:	rex.XB add al,BYTE PTR [r8]
   100024354:	pop    rax
   100024355:	(bad)  
   100024356:	add    al,BYTE PTR [rax]
   100024358:	pop    rsp
   100024359:	sbb    eax,DWORD PTR [rcx]
   10002435b:	mov    ebx,0x53445352
   100024360:	xor    ecx,DWORD PTR [rbp+0x37995f80]
   100024366:	sub    cl,BYTE PTR [rax+rsi*4+0x3a]
   10002436a:	push   rsi
   10002436b:	sar    BYTE PTR [rdx],1
   10002436d:	or     BYTE PTR [rcx+0x219],bh
   100024373:	add    BYTE PTR [rbx+0x71],dh
   100024376:	ins    BYTE PTR es:[rdi],dx
   100024377:	jae    0x1000243de
   100024379:	jb     0x1000243f1
   10002437b:	jb     0x1000243ab
   10002437d:	jo     0x1000243e3
   10002437f:	(bad)  
	...
   100024390:	add    DWORD PTR [rdi],eax
   100024392:	add    al,BYTE PTR [rax]
   100024394:	(bad)  
   100024395:	add    DWORD PTR [rbp+0x1040100],esi
   10002439b:	add    BYTE PTR [rdx+rax*2],al
   10002439e:	add    BYTE PTR [rax],al
   1000243a0:	add    DWORD PTR [rsi],eax
   1000243a2:	add    al,BYTE PTR [rax]
   1000243a4:	(bad)  
   1000243a5:	push   rdx
   1000243a6:	add    dh,BYTE PTR [rax]
   1000243a8:	sbb    DWORD PTR [rsi],edi
   1000243aa:	or     al,BYTE PTR [rbp+0x2d]
   1000243ad:	fs push rbp
   1000243af:	add    ah,BYTE PTR [rsi]
   1000243b1:	xor    al,0x54
   1000243b3:	add    dl,BYTE PTR [rdi]
   1000243b5:	rex.XB adc al,BYTE PTR [r9]
   1000243b8:	rex.WRX add r8b,BYTE PTR [rip+0x27003e0]        # 0x10272479f
   1000243bf:	push   rax
   1000243c0:	and    cl,bh
   1000243c2:	add    DWORD PTR [rax],eax
   1000243c4:	cwde   
   1000243c5:	(bad)  
   1000243c6:	add    al,BYTE PTR [rax]
   1000243c8:	(bad)  
   1000243ca:	add    BYTE PTR [rax],al
   1000243cc:	sbb    DWORD PTR [rip+0x34130005],esp        # 0x1341543d7
   1000243d2:	or     BYTE PTR [rdx],al
   1000243d4:	adc    eax,DWORD PTR [rcx]
   1000243d6:	(bad)  
   1000243d7:	add    al,BYTE PTR [rsi]
   1000243d9:	jo     0x1000243db
   1000243db:	add    BYTE PTR [rax+rdi*8+0x10200001],al
	...
   1000243ea:	add    BYTE PTR [rax],al
   1000243ec:	sbb    DWORD PTR [rsi],edi
   1000243ee:	or     al,BYTE PTR [rbp+0x2d]
   1000243f1:	fs lahf 
   1000243f3:	add    ah,BYTE PTR [rsi]
   1000243f5:	xor    al,0x9e
   1000243f7:	add    dl,BYTE PTR [rdi]
   1000243f9:	rex.XB adc al,BYTE PTR [r9]
   1000243fc:	cwde   
   1000243fd:	add    al,BYTE PTR [rip+0x27003e0]        # 0x1027247e3
   100024403:	push   rax
   100024404:	and    cl,bh
   100024406:	add    DWORD PTR [rax],eax
   100024408:	loopne 0x10002446b
   10002440a:	add    al,BYTE PTR [rax]
   10002440c:	mov    dl,0x14
   10002440e:	add    BYTE PTR [rax],al
   100024410:	sbb    DWORD PTR [rdi],ebx
   100024412:	add    al,BYTE PTR [rax]
   100024414:	or     eax,0x84020b01
   100024419:	clc    
   10002441a:	add    DWORD PTR [rax],eax
   10002441c:	adc    BYTE PTR [rax],al
	...
   100024427:	add    BYTE PTR [rcx],ah
   100024429:	or     BYTE PTR [rdx],al
   10002442b:	add    BYTE PTR [rax],cl
   10002442d:	je     0x100024439
   10002442f:	add    dl,al
   100024431:	add    BYTE PTR [rax],al
   100024434:	test   BYTE PTR [rax+0x0],0x0
   100024438:	adc    BYTE PTR [rdx+rax*1+0x0],al
   10002443c:	and    DWORD PTR [rax],ecx
   10002443e:	add    al,BYTE PTR [rax]
   100024440:	or     BYTE PTR [rsp+rcx*1],dh
   100024443:	add    dh,dh
   100024445:	add    BYTE PTR [rax],al
   100024448:	(bad)  
   100024449:	add    BYTE PTR [r8],al
   10002444c:	sub    BYTE PTR [rdx+rax*1+0x0],al
   100024450:	and    DWORD PTR [rax],eax
   100024452:	add    BYTE PTR [rax],al
   100024454:	test   BYTE PTR [rax+0x0],0x0
   100024458:	(bad)  
   100024459:	add    BYTE PTR [r8],al
   10002445c:	sub    BYTE PTR [rdx+rax*1+0x0],al
   100024460:	and    DWORD PTR [rax],eax
   100024462:	add    BYTE PTR [rax],al
   100024464:	rol    BYTE PTR [rax+0x0],1
   100024467:	add    dh,dh
   100024469:	add    BYTE PTR [rax],al
   10002446c:	adc    BYTE PTR [rdx+rax*1+0x0],al
   100024470:	or     DWORD PTR [rdx],ecx
   100024472:	add    al,0x0
   100024474:	or     dh,BYTE PTR [rcx+rcx*1]
   100024477:	add    BYTE PTR [rdx],cl
   100024479:	push   rdx
   10002447a:	(bad)  
   10002447b:	jo     0x100024455
   10002447d:	xchg   ebp,eax
   10002447e:	add    DWORD PTR [rax],eax
   100024480:	add    al,BYTE PTR [rax]
   100024482:	add    BYTE PTR [rax],al
   100024484:	push   0xffffffffab000044
   100024489:	add    BYTE PTR [rax],r8b
   10002448c:	add    DWORD PTR [rax],eax
   10002448e:	add    BYTE PTR [rax],al
   100024490:	lea    eax,[rsi+0x0]
   100024493:	add    BYTE PTR [rbx-0x72ffffbc],ch
   100024499:	rex.RX add BYTE PTR [rax],r8b
   10002449c:	add    DWORD PTR [rax],eax
   10002449e:	add    BYTE PTR [rax],al
   1000244a0:	lea    eax,[rsi+0x0]
   1000244a3:	add    BYTE PTR [rcx],bl
   1000244a5:	xor    al,0x6
   1000244a7:	and    r14d,DWORD PTR [r8+rdx*2]
   1000244ab:	add    dl,BYTE PTR [rbx+rax*2]
   1000244ae:	sidt   [rsi+0x2]
   1000244b2:	add    dl,BYTE PTR [rax+0x20]
   1000244b5:	stc    
   1000244b6:	add    DWORD PTR [rax],eax
   1000244b8:	cmp    BYTE PTR [rdx+0x2],ah
   1000244bb:	add    BYTE PTR [rdx+0x12],ah
   1000244be:	add    BYTE PTR [rax],al
   1000244c0:	sbb    DWORD PTR [rbx],edi
   1000244c2:	or     BYTE PTR [rbp+0x2a],al
   1000244c5:	je     0x100024519
   1000244c7:	add    al,0x23
   1000244c9:	xor    al,0x51
   1000244cb:	add    al,0x14
   1000244cd:	rex.XB sidt [r14+0x4]
   1000244d2:	add    dl,BYTE PTR [rax+0x20]
   1000244d5:	stc    
   1000244d6:	add    DWORD PTR [rax],eax
   1000244d8:	and    BYTE PTR [rdx+0x2],0x0
   1000244dc:	(bad)  
   1000244de:	add    BYTE PTR [rax],al
   1000244e0:	sbb    DWORD PTR [rdx+0xa],eax
   1000244e3:	xor    DWORD PTR [r10+rdx*2+0x2],r14d
   1000244e8:	sub    ah,BYTE PTR [rcx+rdx*2+0x2]
   1000244ec:	and    esi,DWORD PTR [rax+rdx*2]
   1000244ef:	add    dl,BYTE PTR [rbx+rax*2]
   1000244f2:	sidt   [rsi+0x2]
   1000244f6:	add    dl,BYTE PTR [rax+0x20]
   1000244f9:	stc    
   1000244fa:	add    DWORD PTR [rax],eax
   1000244fc:	enter  0x262,0x0
   100024500:	(bad)  
   100024502:	add    BYTE PTR [rax],al
   100024504:	sbb    DWORD PTR [rdi],ebx
   100024506:	add    al,BYTE PTR [rax]
   100024508:	or     eax,0x84020701
   10002450d:	clc    
   10002450e:	add    DWORD PTR [rax],eax
   100024510:	and    BYTE PTR [rax],dl
	...
   10002451a:	add    BYTE PTR [rax],al
   10002451c:	adc    DWORD PTR [rcx],ebx
   10002451e:	(bad)  
   10002451f:	add    BYTE PTR [rcx],bl
   100024521:	lldt   WORD PTR fs:[rsp+rsi*1]
   100024526:	(bad)  
   100024527:	add    BYTE PTR [rsi],al
   100024529:	mov    dl,0x2
   10002452b:	jo     0x100024541
   10002452d:	stc    
   10002452e:	add    DWORD PTR [rax],eax
   100024530:	adc    BYTE PTR [rbx+0x2],ah
   100024533:	add    BYTE PTR [rcx],bl
   100024535:	adc    al,0x2
   100024537:	add    BYTE PTR [rbx],cl
   100024539:	add    DWORD PTR [rip+0x1f91400],edx        # 0x101fb593f
   10002453f:	add    BYTE PTR [rax+0x63],bl
   100024542:	add    al,BYTE PTR [rax]
   100024544:	adc    DWORD PTR [rsp+rax*1],edx
   100024547:	add    BYTE PTR [rsp+rsi*1],dl
   10002454a:	or     eax,0x4920800
   10002454f:	jo     0x100024565
   100024551:	stc    
   100024552:	add    DWORD PTR [rax],eax
   100024554:	movabs al,ds:0x900031b19000264
   10002455d:	add    DWORD PTR [rdx+0x300200],ecx
   100024563:	add    BYTE PTR [rax+rdi*8+0x4400001],al
	...
   100024572:	add    BYTE PTR [rax],al
   100024574:	or     DWORD PTR [rdx],ecx
   100024576:	add    al,BYTE PTR [rax]
   100024578:	or     dh,BYTE PTR [rdx]
   10002457a:	(bad)  
   10002457b:	xor    al,bl
   10002457d:	xchg   ebp,eax
   10002457e:	add    DWORD PTR [rax],eax
   100024580:	add    DWORD PTR [rax],eax
   100024582:	add    BYTE PTR [rax],al
   100024584:	rcr    BYTE PTR [rdx+0x0],cl
   100024587:	add    al,ah
   100024589:	pop    rdx
   10002458a:	add    BYTE PTR [rax],al
   10002458c:	cmp    ch,0x1
   10002458f:	add    al,ah
   100024591:	pop    rdx
   100024592:	add    BYTE PTR [rax],al
   100024594:	add    DWORD PTR [rsi],eax
   100024596:	add    al,BYTE PTR [rax]
   100024598:	(bad)  
   100024599:	xor    al,BYTE PTR [rdx]
   10002459b:	xor    BYTE PTR [rcx],al
   10002459d:	or     eax,DWORD PTR [rbx]
   10002459f:	add    BYTE PTR [rbx],cl
   1000245a1:	(bad)  
   1000245a2:	(bad)  
   1000245a3:	(bad)  
   1000245a4:	(bad)  
   1000245a5:	xor    BYTE PTR [rax],al
   1000245a7:	add    BYTE PTR [rcx],ah
   1000245a9:	add    eax,0x74050002
   1000245ae:	(bad)  
   1000245af:	add    BYTE PTR [rax-0x21ffffa5],dh
   1000245b5:	pop    rbx
   1000245b6:	add    BYTE PTR [rax],al
   1000245b8:	pushf  
   1000245b9:	add    r8b,BYTE PTR [r8]
   1000245bc:	and    DWORD PTR [rax],eax
   1000245be:	add    al,BYTE PTR [rax]
   1000245c0:	add    BYTE PTR [rsi+rax*1+0x0],dh
   1000245c4:	mov    al,0x5b
   1000245c6:	add    BYTE PTR [rax],al
   1000245c8:	ficomp WORD PTR [rbx+0x0]
   1000245cb:	add    BYTE PTR [rbp+rax*2+0x210002],bl
   1000245d2:	add    BYTE PTR [rax],al
   1000245d4:	mov    al,0x5b
   1000245d6:	add    BYTE PTR [rax],al
   1000245d8:	ficomp WORD PTR [rbx+0x0]
   1000245db:	add    BYTE PTR [rbp+rax*2+0x11010002],bl
   1000245e2:	or     BYTE PTR [rax],al
   1000245e4:	adc    DWORD PTR [rsp+rcx*1],esi
   1000245e7:	add    BYTE PTR [rcx],dl
   1000245e9:	xor    cl,BYTE PTR [rip+0x9e00bf0]        # 0x109e251df
   1000245ef:	rol    BYTE PTR [rdi],0x70
   1000245f2:	(bad)  
   1000245f3:	(bad)  
   1000245f4:	and    DWORD PTR [rip+0x54050002],eax        # 0x1540745fc
   1000245fa:	or     al,BYTE PTR [rax]
   1000245fc:	rex pop rsp
   1000245fe:	add    BYTE PTR [rax],al
   100024600:	(bad)  
   100024601:	pop    rsp
   100024602:	add    BYTE PTR [rax],al
   100024604:	loopne 0x10002464b
   100024606:	add    al,BYTE PTR [rax]
   100024608:	and    DWORD PTR [rax],eax
   10002460a:	add    BYTE PTR [rax],al
   10002460c:	rex pop rsp
   10002460e:	add    BYTE PTR [rax],al
   100024610:	(bad)  
   100024611:	pop    rsp
   100024612:	add    BYTE PTR [rax],al
   100024614:	loopne 0x10002465b
   100024616:	add    al,BYTE PTR [rax]
   100024618:	add    DWORD PTR [rax],ecx
   10002461a:	add    eax,DWORD PTR [rax]
   10002461c:	or     BYTE PTR [rdx+0x4],al
   10002461f:	lock add dh,BYTE PTR [rax]
   100024622:	add    BYTE PTR [rax],al
   100024624:	and    DWORD PTR [rax+rcx*1],edx
   100024627:	add    BYTE PTR [rsp+riz*8],dl
   10002462a:	add    al,0x0
   10002462c:	pcmpeqb mm1,QWORD PTR [rbx]
   10002462f:	add    BYTE PTR [rdx],cl
   100024631:	or     DWORD PTR fs:[rax],eax
   100024634:	add    eax,0x90000854
   100024639:	pop    rsi
   10002463a:	add    BYTE PTR [rax],al
   10002463c:	lods   al,BYTE PTR ds:[rsi]
   10002463d:	pop    rsi
   10002463e:	add    BYTE PTR [rax],al
   100024640:	sbb    BYTE PTR [rsi+0x2],al
   100024643:	add    BYTE PTR [rcx],ah
   100024645:	add    BYTE PTR [rax],al
   100024647:	add    BYTE PTR [rax-0x53ffffa2],dl
   10002464d:	pop    rsi
   10002464e:	add    BYTE PTR [rax],al
   100024650:	sbb    BYTE PTR [rsi+0x2],al
   100024653:	add    BYTE PTR [rcx],dl
   100024655:	adc    al,BYTE PTR [rcx]
   100024657:	add    BYTE PTR [rcx],cl
   100024659:	(bad)  
   10002465a:	add    BYTE PTR [rax],al
   10002465c:	adc    al,0xf9
   10002465e:	add    DWORD PTR [rax],eax
   100024660:	adc    BYTE PTR [rbp+0x2],ah
   100024663:	add    BYTE PTR [rcx],al
   100024665:	or     al,BYTE PTR [rax+rax*1]
   100024668:	or     dh,BYTE PTR [rdi+rax*1]
   10002466b:	add    BYTE PTR [rdx],cl
   10002466d:	xor    al,BYTE PTR [rsi]
   10002466f:	jo     0x100024672
   100024671:	adc    al,0x8
   100024673:	add    BYTE PTR [rsp+riz*2],dl
   100024676:	lldt   WORD PTR [rsp+rdx*2]
   10002467a:	or     eax,0xc341400
   10002467f:	add    BYTE PTR [rdx+rdx*4],dl
   100024682:	adc    BYTE PTR [rax+0x1],dh
   100024685:	adc    al,0x8
   100024687:	add    BYTE PTR [rsp+riz*2],dl
   10002468a:	or     DWORD PTR [rax],eax
   10002468c:	adc    al,0x54
   10002468e:	or     BYTE PTR [rax],al
   100024690:	adc    al,0x34
   100024692:	(bad)  
   100024693:	add    BYTE PTR [rdx+rsi*1],dl
   100024696:	adc    BYTE PTR [rax+0x1],dh
   100024699:	clts   
   10002469b:	add    BYTE PTR [rdi],cl
   10002469d:	or     BYTE PTR fs:[rax],al
   1000246a0:	sysenter 
   1000246a2:	(bad)  
   1000246a3:	add    BYTE PTR [rdi],cl
   1000246a5:	xor    cl,BYTE PTR [rbx]
   1000246a7:	jo     0x1000246ba
   1000246a9:	sbb    eax,0x641d0006
   1000246ae:	or     al,BYTE PTR [rax]
   1000246b0:	sbb    BYTE PTR [rcx+rcx*1],dh
   1000246b3:	add    BYTE PTR [rdx],cl
   1000246b5:	push   rdx
   1000246b6:	(bad)  
   1000246b7:	jo     0x1000246cd
   1000246b9:	stc    
   1000246ba:	add    DWORD PTR [rax],eax
   1000246bc:	rex.W
   1000246bd:	add    al,BYTE PTR gs:[rax]
   1000246c0:	adc    DWORD PTR [rbx],esp
   1000246c2:	or     al,BYTE PTR [rax]
   1000246c4:	and    esi,DWORD PTR [rbp+rcx*1+0x0]
   1000246c8:	(bad)  
   1000246c9:	fs or  al,0x0
   1000246cc:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   1000246d0:	adc    al,0x34
   1000246d2:	or     al,BYTE PTR [rax]
   1000246d4:	(bad)  
   1000246d5:	jb     0x1000246d9
   1000246d7:	loopne 0x1000246ed
   1000246d9:	stc    
   1000246da:	add    DWORD PTR [rax],eax
   1000246dc:	and    BYTE PTR [rbp+0x2],0x0
   1000246e0:	add    DWORD PTR [rdx],ecx
   1000246e2:	add    al,0x0
   1000246e4:	or     dh,BYTE PTR [rcx+rcx*1]
   1000246e7:	add    BYTE PTR [rdx],cl
   1000246e9:	push   rdx
   1000246ea:	(bad)  
   1000246eb:	jo     0x1000246fe
   1000246ed:	sbb    BYTE PTR [rax+rax*1],al
   1000246f0:	sbb    BYTE PTR [rcx+rcx*1],dh
   1000246f3:	add    BYTE PTR [rdx],cl
   1000246f5:	push   rdx
   1000246f6:	(bad)  
   1000246f7:	jo     0x10002470d
   1000246f9:	stc    
   1000246fa:	add    DWORD PTR [rax],eax
   1000246fc:	enter  0x265,0x0
   100024700:	add    DWORD PTR [rdx],ecx
   100024702:	add    al,0x0
   100024704:	or     dh,BYTE PTR [rcx*1+0x6920a00]
   10002470b:	jo     0x100024726
   10002470d:	or     r8,QWORD PTR [r8]
   100024710:	cmp    al,0x74
   100024712:	(bad)  
   100024713:	add    esi,DWORD PTR [rsp+riz*2]
   100024716:	(bad)  
   100024717:	add    ebp,DWORD PTR [rsp+rsi*1]
   10002471a:	sbb    eax,0x18011b03
   10002471f:	add    eax,DWORD PTR [rsi]
   100024721:	lock add al,0xe0
   100024724:	add    dl,BYTE PTR [rax+0x0]
   100024727:	add    BYTE PTR [rax],ah
   100024729:	stc    
   10002472a:	add    DWORD PTR [rax],eax
   10002472c:	add    BYTE PTR [rsi+0x2],ah
   10002472f:	add    BYTE PTR [rdx+0x19000018],dh
   100024735:	sbb    eax,DWORD PTR [rbx]
   100024737:	add    BYTE PTR [rcx],cl
   100024739:	add    DWORD PTR [rax+0x0],ecx
   10002473c:	add    dh,BYTE PTR [rax]
   10002473e:	add    BYTE PTR [rax],al
   100024740:	test   al,bh
   100024742:	add    DWORD PTR [rax],eax
   100024744:	xor    BYTE PTR [rdx],al
	...
   10002474e:	add    BYTE PTR [rax],al
   100024750:	sbb    DWORD PTR [rbx],ebx
   100024752:	add    eax,DWORD PTR [rax]
   100024754:	or     DWORD PTR [rcx],eax
   100024756:	data16 add BYTE PTR [rdx],al
   100024759:	xor    BYTE PTR [rax],al
   10002475b:	add    BYTE PTR [rax+rdi*8+0x3200001],al
	...
   10002476a:	add    BYTE PTR [rax],al
   10002476c:	add    DWORD PTR [rcx],edx
   10002476e:	or     DWORD PTR [rax],eax
   100024770:	adc    DWORD PTR [rdx-0x1ff40ff3],eax
   100024776:	or     eax,edx
   100024778:	(bad)  
   100024779:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x103624bf0
   100024780:	add    dh,BYTE PTR [rax]
   100024782:	add    BYTE PTR [rax],al
   100024784:	sbb    DWORD PTR [rax],edi
   100024786:	or     eax,0xaa742700
   10002478b:	add    BYTE PTR [rdi],ah
   10002478d:	fs test eax,0xa8342700
   100024793:	add    BYTE PTR [rdi],ah
   100024795:	add    DWORD PTR [rdx+0x16f01800],esp
   10002479b:	loopne 0x1000247b1
   10002479d:	rcl    BYTE PTR [rdx],1
   10002479f:	rcl    BYTE PTR [rax],0x50
   1000247a2:	add    BYTE PTR [rax],al
   1000247a4:	test   al,bh
   1000247a6:	add    DWORD PTR [rax],eax
   1000247a8:	add    BYTE PTR [rip+0x0],al        # 0x1000247ae
   1000247ae:	add    BYTE PTR [rax],al
   1000247b0:	add    BYTE PTR [rax],al
   1000247b2:	add    BYTE PTR [rax],al
   1000247b4:	sbb    DWORD PTR [rip+0x10b0003],ebx        # 0x1010d47bd
   1000247ba:	(bad)  
   1000247bb:	add    BYTE PTR [rax+rsi*1],al
   1000247be:	add    BYTE PTR [rax],al
   1000247c0:	test   al,bh
   1000247c2:	add    DWORD PTR [rax],eax
   1000247c4:	movabs al,ds:0x0
   1000247cd:	add    BYTE PTR [rax],al
   1000247cf:	add    BYTE PTR [rcx],ah
   1000247d1:	or     BYTE PTR [rax+rax*1],al
   1000247d4:	or     BYTE PTR [rbx+rbx*1+0x0],dh
   1000247d8:	add    al,0x54
   1000247da:	sbb    DWORD PTR [rax],eax
   1000247dc:	(bad)  
   1000247dd:	cwde   
   1000247de:	add    BYTE PTR [rax],al
   1000247e0:	xchg   esp,eax
   1000247e1:	cwde   
   1000247e2:	add    BYTE PTR [rax],al
   1000247e4:	mov    ah,0x47
   1000247e6:	add    al,BYTE PTR [rax]
   1000247e8:	and    DWORD PTR [rax],ecx
   1000247ea:	add    al,BYTE PTR [rax]
   1000247ec:	or     BYTE PTR [rdx+rbx*1+0x0],ah
   1000247f0:	xchg   esp,eax
   1000247f1:	cwde   
   1000247f2:	add    BYTE PTR [rax],al
   1000247f4:	xlat   BYTE PTR ds:[rbx]
   1000247f5:	cwde   
   1000247f6:	add    BYTE PTR [rax],al
   1000247f8:	rol    BYTE PTR [rdi+0x2],1
   1000247fb:	add    BYTE PTR [rcx],ah
   1000247fd:	add    BYTE PTR [rax],al
   1000247ff:	add    BYTE PTR [rax+rbx*4-0x67290000],dl
   100024806:	add    BYTE PTR [rax],al
   100024808:	rol    BYTE PTR [rdi+0x2],1
   10002480b:	add    BYTE PTR [rcx],ah
   10002480d:	add    BYTE PTR [rax],al
   10002480f:	add    BYTE PTR [rax-0x68],ah
   100024812:	add    BYTE PTR [rax],al
   100024814:	xchg   esp,eax
   100024815:	cwde   
   100024816:	add    BYTE PTR [rax],al
   100024818:	mov    ah,0x47
   10002481a:	add    al,BYTE PTR [rax]
   10002481c:	sbb    DWORD PTR [rdi],ebx
   10002481e:	add    eax,0x2d340d00
   100024823:	add    BYTE PTR [rip+0x6002a01],cl        # 0x10602722a
   100024829:	jo     0x10002482b
   10002482b:	add    BYTE PTR [rax+rdi*8+0x1400001],al
	...
   10002483a:	add    BYTE PTR [rax],al
   10002483c:	add    DWORD PTR [rcx+0x34810003],eax
   100024842:	add    al,0x0
   100024844:	add    al,0x42
   100024846:	add    BYTE PTR [rax],al
   100024848:	add    DWORD PTR [rip+0x34050002],eax        # 0x134074850
   10002484e:	add    DWORD PTR [rax],eax
   100024850:	sbb    DWORD PTR [rip+0x10b0003],ebx        # 0x1010d4859
   100024856:	rex.W add BYTE PTR [rax+rsi*2],al
   10002485a:	add    BYTE PTR [rax],al
   10002485c:	test   al,bh
   10002485e:	add    DWORD PTR [rax],eax
   100024860:	xor    BYTE PTR [rdx],al
	...
   10002486a:	add    BYTE PTR [rax],al
   10002486c:	and    DWORD PTR [rax],ebx
   10002486e:	(bad)  
   10002486f:	add    BYTE PTR [rax],bl
   100024871:	rex.WRB add BYTE PTR fs:[r8],r9b
   100024875:	push   rsp
   100024876:	rex.WR add BYTE PTR [rsp+rsi*1],r8b
   10002487a:	rex.WXB add BYTE PTR [r8-0x3bffff61],dl
   100024881:	lahf   
   100024882:	add    BYTE PTR [rax],al
   100024884:	push   rax
   100024885:	rex.W add al,BYTE PTR [rax]
   100024888:	and    DWORD PTR [rax],eax
   10002488a:	add    BYTE PTR [rax],al
   10002488c:	nop
   10002488d:	lahf   
   10002488e:	add    BYTE PTR [rax],al
   100024890:	(bad)  
   100024891:	lahf   
   100024892:	add    BYTE PTR [rax],al
   100024894:	push   rax
   100024895:	rex.W add al,BYTE PTR [rax]
   100024898:	sbb    DWORD PTR [rdx+rax*1],ebx
   10002489b:	add    BYTE PTR [rdx],cl
   10002489d:	add    DWORD PTR [rcx],ebx
   10002489f:	add    BYTE PTR [rax+rdi*8+0xb00001],al
	...
   1000248ae:	add    BYTE PTR [rax],al
   1000248b0:	and    DWORD PTR [rip+0x740d0004],ecx        # 0x1740f48ba
   1000248b6:	sbb    BYTE PTR [rax],al
   1000248b8:	add    al,0x34
   1000248ba:	sbb    al,BYTE PTR [rax]
   1000248bc:	adc    BYTE PTR [rbx-0x5cc10000],ah
   1000248c2:	add    BYTE PTR [rax],al
   1000248c4:	cwde   
   1000248c5:	rex.W add al,BYTE PTR [rax]
   1000248c8:	and    DWORD PTR [rax],eax
   1000248ca:	add    BYTE PTR [rax],al
   1000248cc:	adc    BYTE PTR [rbx-0x5cc10000],ah
   1000248d2:	add    BYTE PTR [rax],al
   1000248d4:	cwde   
   1000248d5:	rex.W add al,BYTE PTR [rax]
   1000248d8:	sbb    DWORD PTR [rbx],ebx
   1000248da:	add    eax,DWORD PTR [rax]
   1000248dc:	or     DWORD PTR [rcx],eax
   1000248de:	xchg   edx,eax
   1000248df:	add    BYTE PTR [rdx],al
   1000248e1:	xor    BYTE PTR [rax],al
   1000248e3:	add    BYTE PTR [rax+rdi*8+0x4800001],al
	...
   1000248f2:	add    BYTE PTR [rax],al
   1000248f4:	and    DWORD PTR [rax],ecx
   1000248f6:	add    al,BYTE PTR [rax]
   1000248f8:	or     BYTE PTR [rsp+rdx*4+0x0],dh
   1000248fc:	add    BYTE PTR [rax+rax*1+0xa44a00],ah
   100024903:	add    al,bl
   100024905:	rex.W add al,BYTE PTR [rax]
   100024908:	and    DWORD PTR [rax],eax
   10002490a:	add    BYTE PTR [rax],al
   10002490c:	add    BYTE PTR [rax+rax*1+0xa44a00],ah
   100024913:	add    al,bl
   100024915:	rex.W add al,BYTE PTR [rax]
   100024918:	sbb    DWORD PTR [rip+0x34130005],esp        # 0x134154923
   10002491e:	adc    BYTE PTR [rbx+rdx*1],al
   100024921:	add    DWORD PTR [rsi],ecx
   100024923:	add    al,0x6
   100024925:	jo     0x100024927
   100024927:	add    BYTE PTR [rax+rdi*8+0x20600001],al
	...
   100024936:	add    BYTE PTR [rax],al
   100024938:	add    DWORD PTR [rsi],eax
   10002493a:	add    al,BYTE PTR [rax]
   10002493c:	(bad)  
   10002493d:	xchg   edx,eax
   10002493e:	add    dh,BYTE PTR [rax]
   100024940:	sbb    DWORD PTR [rip+0xffffffffe424000b],esi        # 0xe4264951
   100024946:	xchg   ebp,eax
   100024947:	add    BYTE PTR [rsp+rsi*2],ah
   10002494a:	xchg   esp,eax
   10002494b:	add    BYTE PTR [rsp+riz*2],ah
   10002494e:	xchg   ebx,eax
   10002494f:	add    BYTE PTR [rsp+rsi*1],ah
   100024952:	xchg   edx,eax
   100024953:	add    BYTE PTR [rcx+rax*1],ah
   100024956:	nop
   100024957:	add    BYTE PTR [rip+0xffffffff84000050],dl        # 0x840249ad
   10002495d:	clc    
   10002495e:	add    DWORD PTR [rax],eax
   100024960:	jo     0x100024966
	...
   10002496a:	add    BYTE PTR [rax],al
   10002496c:	add    DWORD PTR [rsi],eax
   10002496e:	add    al,BYTE PTR [rax]
   100024970:	(bad)  
   100024971:	mov    dl,0x2
   100024973:	xor    BYTE PTR [rcx],bl
   100024975:	(bad)  
   100024976:	add    eax,0x4a340d00
   10002497b:	add    BYTE PTR [rip+0x6004801],cl        # 0x106029182
   100024981:	jo     0x100024983
   100024983:	add    BYTE PTR [rax+rdi*8+0x2300001],al
	...
   100024992:	add    BYTE PTR [rax],al
   100024994:	sbb    DWORD PTR [rsi],ebp
   100024996:	(bad)  
   100024997:	add    BYTE PTR [rsp+riz*2],bl
   10002499a:	add    eax,DWORD PTR [rcx]
   10002499c:	sbb    BYTE PTR [rdx+rax*1],dh
   10002499f:	add    DWORD PTR [rbx],ecx
   1000249a1:	add    DWORD PTR [rax],eax
   1000249a3:	add    DWORD PTR [rax+rsi*2],eax
   1000249a6:	add    BYTE PTR [rax],al
   1000249a8:	and    cl,bh
   1000249aa:	add    DWORD PTR [rax],eax
   1000249ac:	rex.W
   1000249ad:	data16 add al,BYTE PTR [rax]
   1000249b0:	repnz (bad) 
   1000249b2:	add    BYTE PTR [rax],al
   1000249b4:	sbb    DWORD PTR [rbx],edx
   1000249b6:	add    eax,DWORD PTR [rax]
   1000249b8:	or     eax,DWORD PTR [rcx]
   1000249ba:	cmp    al,BYTE PTR [rax]
   1000249bc:	add    al,0x30
   1000249be:	add    BYTE PTR [rax],al
   1000249c0:	adc    al,0xf9
   1000249c2:	add    DWORD PTR [rax],eax
   1000249c4:	nop
   1000249c5:	data16 add al,BYTE PTR [rax]
   1000249c8:	sbb    DWORD PTR [rcx],ebx
   1000249ca:	add    al,0x0
   1000249cc:	or     dh,BYTE PTR [rcx*1+0x6920a00]
   1000249d3:	jo     0x100024959
   1000249d5:	clc    
   1000249d6:	add    DWORD PTR [rax],eax
   1000249d8:	rex.W add BYTE PTR [rax],al
	...
   1000249e3:	add    BYTE PTR [rcx],bl
   1000249e5:	sub    DWORD PTR [rcx],ecx
   1000249e7:	add    BYTE PTR [rdi],dl
   1000249e9:	fs push rbx
   1000249eb:	add    BYTE PTR [rdi],dl
   1000249ed:	push   rsp
   1000249ee:	push   rdx
   1000249ef:	add    BYTE PTR [rdi],dl
   1000249f1:	xor    al,0x51
   1000249f3:	add    BYTE PTR [rdi],dl
   1000249f5:	add    DWORD PTR [rsi+0x0],ecx
   1000249f8:	adc    BYTE PTR [rax+0x0],dh
   1000249fb:	add    BYTE PTR [rax+rdi*8+0x2600001],al
	...
   100024a0a:	add    BYTE PTR [rax],al
   100024a0c:	sbb    DWORD PTR [rdi],ebp
   100024a0e:	or     eax,DWORD PTR [rax]
   100024a10:	sbb    eax,0x1d005774
   100024a15:	fs push rsi
   100024a17:	add    BYTE PTR [rip+0x1d005554],bl        # 0x11d029f71
   100024a1d:	xor    al,0x54
   100024a1f:	add    BYTE PTR [rip+0x16005201],bl        # 0x116029c26
   100024a25:	loopne 0x100024a27
   100024a27:	add    BYTE PTR [rax+rdi*8+0x2800001],al
	...
   100024a36:	add    BYTE PTR [rax],al
   100024a38:	add    DWORD PTR [rcx+rax*1],eax
   100024a3b:	add    BYTE PTR [rdx+riz*2],al
   100024a3e:	add    BYTE PTR [rax],al
   100024a40:	and    DWORD PTR [rip+0x74050002],eax        # 0x174074a48
   100024a46:	(bad)  
   100024a47:	add    BYTE PTR [rax-0x43ffff30],al
   100024a4d:	rol    BYTE PTR [rax],1
   100024a4f:	add    BYTE PTR [rbp+rax*2+0x210002],dl
   100024a56:	add    al,BYTE PTR [rax]
   100024a58:	add    BYTE PTR [rsi+rax*1+0x0],dh
   100024a5c:	adc    al,0x0
   100024a5f:	add    BYTE PTR [rax+rdx*8+0x45940000],bh
   100024a66:	add    al,BYTE PTR [rax]
   100024a68:	add    DWORD PTR [rdx],ecx
   100024a6a:	add    al,0x0
   100024a6c:	or     dh,BYTE PTR [rsi+rax*1]
   100024a6f:	add    BYTE PTR [rdx],cl
   100024a71:	xor    al,BYTE PTR [rsi]
   100024a73:	jo     0x100024a76
   100024a75:	add    al,0x1
   100024a77:	add    BYTE PTR [rdx+riz*4],al
   100024a7a:	add    BYTE PTR [rax],al
   100024a7c:	add    DWORD PTR [rdx],ecx
   100024a7e:	add    al,0x0
   100024a80:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   100024a84:	add    eax,0x1000134
   100024a89:	or     eax,DWORD PTR [rbx]
   100024a8b:	add    BYTE PTR [rbx],cl
   100024a8d:	(bad)  
   100024a8e:	(bad)  
   100024a8f:	jo     0x100024a97
   100024a91:	(bad)  
   100024a92:	add    BYTE PTR [rax],al
   100024a94:	and    DWORD PTR [rip+0x34050002],eax        # 0x134074a9c
   100024a9a:	(bad)  
   100024a9b:	add    BYTE PTR [rax-0x15],al
   100024a9e:	add    BYTE PTR [rax],al
   100024aa0:	outs   dx,BYTE PTR ds:[rsi]
   100024aa1:	jmp    0x100024aa3
   100024aa3:	add    BYTE PTR [rax+0x2100024a],cl
   100024aa9:	add    BYTE PTR [rdx],al
   100024aab:	add    BYTE PTR [rax],al
   100024aad:	xor    al,0x6
   100024aaf:	add    BYTE PTR [rax-0x15],al
   100024ab2:	add    BYTE PTR [rax],al
   100024ab4:	outs   dx,BYTE PTR ds:[rsi]
   100024ab5:	jmp    0x100024ab7
   100024ab7:	add    BYTE PTR [rax+0x2100024a],cl
   100024abd:	add    BYTE PTR [rax],al
   100024abf:	add    BYTE PTR [rax-0x15],al
   100024ac2:	add    BYTE PTR [rax],al
   100024ac4:	outs   dx,BYTE PTR ds:[rsi]
   100024ac5:	jmp    0x100024ac7
   100024ac7:	add    BYTE PTR [rax+0x100024a],cl
   100024acd:	fisttp DWORD PTR [rdx]
   100024acf:	add    bl,bl
   100024ad1:	in     al,0xb
   100024ad3:	add    ah,dl
   100024ad5:	je     0x100024ae1
   100024ad7:	add    BYTE PTR [rax],bh
   100024ad9:	or     BYTE PTR fs:[rax],al
   100024adc:	or     DWORD PTR [rdx],esi
   100024ade:	add    eax,0x25003f0
   100024ae3:	xor    BYTE PTR [rcx],dl
   100024ae5:	sbb    al,BYTE PTR [rsi]
   100024ae7:	add    BYTE PTR [rdx],bl
   100024ae9:	xor    al,0xc
   100024aeb:	add    BYTE PTR [rdx+rdx*2],cl
   100024aee:	or     BYTE PTR [rax+0x7],dh
   100024af1:	(bad)  
   100024af2:	(bad)  
   100024af3:	push   rax
   100024af4:	adc    al,0xf9
   100024af6:	add    DWORD PTR [rax],eax
   100024af8:	mov    BYTE PTR [rdi+0x2],ah
   100024afb:	add    BYTE PTR [rcx],bl
   100024afd:	ds or  eax,0x50742d00
   100024b03:	add    ch,BYTE PTR [rip+0x2d024f64]        # 0x12d049a6d
   100024b09:	xor    al,0x4e
   100024b0b:	add    ch,BYTE PTR [rip+0x18024801]        # 0x118049312
   100024b11:	lock (bad) 
   100024b13:	loopne 0x100024b29
   100024b15:	rcl    BYTE PTR [rdx],1
   100024b17:	rcl    BYTE PTR [rax],0x50
   100024b1a:	add    BYTE PTR [rax],al
   100024b1c:	test   al,bh
   100024b1e:	add    DWORD PTR [rax],eax
   100024b20:	xor    BYTE PTR [rdx],dl
	...
   100024b2a:	add    BYTE PTR [rax],al
   100024b2c:	add    DWORD PTR [rsi],eax
   100024b2e:	add    al,BYTE PTR [rax]
   100024b30:	(bad)  
   100024b31:	jb     0x100024b35
   100024b33:	xor    BYTE PTR [rcx],al
   100024b35:	clts   
   100024b37:	add    BYTE PTR [rdi],cl
   100024b39:	or     DWORD PTR fs:[rax],eax
   100024b3c:	sysenter 
   100024b3e:	or     BYTE PTR [rax],al
   100024b40:	rsqrtps xmm1,XMMWORD PTR [rbx]
   100024b43:	jo     0x100024b5e
   100024b45:	cs (bad) 
   100024b47:	add    BYTE PTR [rsp+riz*2],bl
   100024b4a:	fld    DWORD PTR [rax]
   100024b4c:	sbb    BYTE PTR [rax+rbx*8],dh
   100024b4f:	add    BYTE PTR [rbx],cl
   100024b51:	add    esi,edx
   100024b53:	add    BYTE PTR [rax+rsi*2],al
   100024b56:	add    BYTE PTR [rax],al
   100024b58:	and    cl,bh
   100024b5a:	add    DWORD PTR [rax],eax
   100024b5c:	and    BYTE PTR [rax+0x2],ch
   100024b5f:	add    BYTE PTR [rdx+0x21000006],ah
   100024b65:	(bad)  
   100024b66:	or     BYTE PTR [rax],al
   100024b68:	(bad)  
   100024b69:	in     al,0x4
   100024b6b:	add    BYTE PTR [rdx],dl
   100024b6d:	je     0x100024b77
   100024b6f:	add    BYTE PTR [rdx],cl
   100024b71:	fs (bad) 
   100024b73:	add    BYTE PTR [rip+0xffffffffe0000634],al        # 0xe00251ad
   100024b79:	cli    
   100024b7a:	add    BYTE PTR [rax],al
   100024b7c:	jmp    0x100024b78
   100024b7e:	add    BYTE PTR [rax],al
   100024b80:	cwde   
   100024b81:	rex.XB add al,BYTE PTR [r8]
   100024b84:	and    DWORD PTR [rax],eax
   100024b86:	add    BYTE PTR [rax],al
   100024b88:	loopne 0x100024b84
   100024b8a:	add    BYTE PTR [rax],al
   100024b8c:	jmp    0x100024b88
   100024b8e:	add    BYTE PTR [rax],al
   100024b90:	cwde   
   100024b91:	rex.XB add al,BYTE PTR [r8]
   100024b94:	sbb    DWORD PTR [rax*1+0x50341a00],ebp
   100024b9b:	add    BYTE PTR [rcx],cl
   100024b9d:	add    DWORD PTR [rsi+0x0],ecx
   100024ba0:	add    dh,BYTE PTR [rax+0x0]
   100024ba3:	add    BYTE PTR [rax],ah
   100024ba5:	stc    
   100024ba6:	add    DWORD PTR [rax],eax
   100024ba8:	sub    BYTE PTR [rax+0x2],0x0
   100024bac:	(bad)  
   100024bae:	add    BYTE PTR [rax],al
   100024bb0:	sbb    DWORD PTR [rdi+rax*1],esp
   100024bb3:	add    BYTE PTR [rdx],dl
   100024bb5:	adc    DWORD PTR fs:[rcx],eax
   100024bb8:	adc    dh,BYTE PTR [rax+rdx*1]
   100024bbb:	add    DWORD PTR [rdx],edx
   100024bbd:	add    DWORD PTR [rcx+rax*1],ecx
   100024bc0:	or     esi,DWORD PTR [rax+0x0]
   100024bc3:	add    BYTE PTR [rax+rdi*8+0x8500001],al
	...
   100024bd2:	add    BYTE PTR [rax],al
   100024bd4:	adc    DWORD PTR [rax],ebx
   100024bd6:	(bad)  
   100024bd7:	add    BYTE PTR [rax],bl
   100024bd9:	fs or  eax,0xc341400
   100024bdf:	add    BYTE PTR [rax],cl
   100024be1:	xchg   edx,eax
   100024be2:	add    al,0x70
   100024be4:	adc    al,0xf9
   100024be6:	add    DWORD PTR [rax],eax
   100024be8:	fsubr  DWORD PTR [rax+0x2]
   100024beb:	add    BYTE PTR [rcx],dl
   100024bed:	adc    al,0x4
   100024bef:	add    BYTE PTR [rsp+rsi*1],dl
   100024bf2:	or     al,BYTE PTR [rax]
   100024bf4:	(bad)  
   100024bf5:	jb     0x100024bf9
   100024bf7:	jo     0x100024c0d
   100024bf9:	stc    
   100024bfa:	add    DWORD PTR [rax],eax
   100024bfc:	cmp    BYTE PTR [rcx+0x2],ch
   100024bff:	add    BYTE PTR [rcx],bl
   100024c01:	and    al,0x3
   100024c03:	add    BYTE PTR [rcx],cl
   100024c05:	add    DWORD PTR [rax+rax*1+0x3002],ecx
   100024c0c:	and    cl,bh
   100024c0e:	add    DWORD PTR [rax],eax
   100024c10:	sub    BYTE PTR [rcx+0x2],0x0
   100024c14:	push   rdx
   100024c15:	add    al,0x0
   100024c17:	add    BYTE PTR [rcx],dl
   100024c19:	sbb    DWORD PTR [rsi],eax
   100024c1b:	add    BYTE PTR [rcx],bl
   100024c1d:	fs or  eax,0xa341400
   100024c23:	add    BYTE PTR [rsi],al
   100024c25:	jb     0x100024c29
   100024c27:	jo     0x100024c3d
   100024c29:	stc    
   100024c2a:	add    DWORD PTR [rax],eax
   100024c2c:	enter  0x269,0x0
   100024c30:	adc    DWORD PTR [rcx],ebx
   100024c32:	(bad)  
   100024c33:	add    BYTE PTR [rcx],bl
   100024c35:	or     eax,DWORD PTR fs:[rax]
   100024c38:	adc    al,0x34
   100024c3a:	or     al,BYTE PTR [rax]
   100024c3c:	(bad)  
   100024c3d:	jb     0x100024c41
   100024c3f:	jo     0x100024c55
   100024c41:	stc    
   100024c42:	add    DWORD PTR [rax],eax
   100024c44:	adc    BYTE PTR [rdx+0x2],ch
   100024c47:	add    BYTE PTR [rcx],dl
   100024c49:	adc    al,0x4
   100024c4b:	add    BYTE PTR [rsp+rsi*1],dl
   100024c4e:	or     al,BYTE PTR [rax]
   100024c50:	(bad)  
   100024c51:	jb     0x100024c55
   100024c53:	jo     0x100024c69
   100024c55:	stc    
   100024c56:	add    DWORD PTR [rax],eax
   100024c58:	pop    rax
   100024c59:	push   0x2
   100024c5b:	add    BYTE PTR [rcx],dl
   100024c5d:	lar    eax,WORD PTR [rax]
   100024c60:	(bad)  
   100024c61:	jb     0x100024c65
   100024c63:	xor    BYTE PTR [rcx+rdi*8],dl
   100024c66:	add    DWORD PTR [rax],eax
   100024c68:	movabs al,ds:0x24000b361900026a
   100024c71:	imul   eax,DWORD PTR fs:[rax],0x20
   100024c75:	push   rsp
   100024c76:	push   0x0
   100024c78:	sbb    al,0x34
   100024c7a:	imul   eax,DWORD PTR [rax],0x64010f
   100024c80:	or     al,dh
   100024c82:	(bad)  
   100024c83:	loopne 0x100024c89
   100024c85:	jo     0x100024c87
   100024c87:	add    BYTE PTR [rax],ah
   100024c89:	stc    
   100024c8a:	add    DWORD PTR [rax],eax
   100024c8c:	call   0x112024efb
   100024c91:	add    eax,DWORD PTR [rax]
   100024c93:	add    BYTE PTR [rcx],bl
   100024c95:	sub    al,0x5
   100024c97:	add    BYTE PTR [rsi],bl
   100024c99:	xor    al,0x1e
   100024c9b:	add    BYTE PTR [rsi],cl
   100024c9d:	add    DWORD PTR [rax+rax*1],ebx
   100024ca0:	add    dl,BYTE PTR [rax+0x0]
   100024ca3:	add    BYTE PTR [rax],ah
   100024ca5:	stc    
   100024ca6:	add    DWORD PTR [rax],eax
   100024ca8:	xor    BYTE PTR [rbx+0x2],ch
   100024cab:	add    dl,bl
   100024cad:	add    BYTE PTR [rax],al
   100024caf:	add    BYTE PTR [rcx],bl
   100024cb1:	sub    al,0x5
   100024cb3:	add    BYTE PTR [rsi],bl
   100024cb5:	xor    al,0x1e
   100024cb7:	add    BYTE PTR [rsi],cl
   100024cb9:	add    DWORD PTR [rax+rax*1],ebx
   100024cbc:	add    dl,BYTE PTR [rax+0x0]
   100024cbf:	add    BYTE PTR [rax],ah
   100024cc1:	stc    
   100024cc2:	add    DWORD PTR [rax],eax
   100024cc4:	sbb    BYTE PTR [rdx+rax*1+0x0],ch
   100024cc8:	fiadd  DWORD PTR [rax]
   100024cca:	add    BYTE PTR [rax],al
   100024ccc:	adc    DWORD PTR [rcx],ebx
   100024cce:	(bad)  
   100024ccf:	add    BYTE PTR [rcx],bl
   100024cd1:	or     eax,DWORD PTR fs:[rax]
   100024cd4:	adc    al,0x34
   100024cd6:	or     al,BYTE PTR [rax]
   100024cd8:	(bad)  
   100024cd9:	jb     0x100024cdd
   100024cdb:	jo     0x100024cf1
   100024cdd:	stc    
   100024cde:	add    DWORD PTR [rax],eax
   100024ce0:	add    BYTE PTR [rbp+0x2],ch
   100024ce3:	add    BYTE PTR [rcx],dl
   100024ce5:	sbb    DWORD PTR [rsi],eax
   100024ce7:	add    BYTE PTR [rcx],bl
   100024ce9:	or     eax,DWORD PTR fs:[rax]
   100024cec:	adc    al,0x34
   100024cee:	or     al,BYTE PTR [rax]
   100024cf0:	(bad)  
   100024cf1:	jb     0x100024cf5
   100024cf3:	jo     0x100024d09
   100024cf5:	stc    
   100024cf6:	add    DWORD PTR [rax],eax
   100024cf8:	pop    rax
   100024cf9:	ins    DWORD PTR es:[rdi],dx
   100024cfa:	add    al,BYTE PTR [rax]
   100024cfc:	sbb    DWORD PTR [rsi],ebp
   100024cfe:	(bad)  
   100024cff:	add    BYTE PTR [rsp+riz*2],bl
   100024d02:	push   rbx
   100024d03:	add    BYTE PTR [rax],bl
   100024d05:	xor    al,0x50
   100024d07:	add    BYTE PTR [rbx],cl
   100024d09:	add    DWORD PTR [rsi+0x0],ecx
   100024d0c:	add    al,0x70
   100024d0e:	add    BYTE PTR [rax],al
   100024d10:	and    cl,bh
   100024d12:	add    DWORD PTR [rax],eax
   100024d14:	mov    al,0x6d
   100024d16:	add    al,BYTE PTR [rax]
   100024d18:	(bad)  
   100024d1a:	add    BYTE PTR [rax],al
   100024d1c:	adc    DWORD PTR [rsp+rax*1],edx
   100024d1f:	add    BYTE PTR [rsp+rsi*1],dl
   100024d22:	or     al,BYTE PTR [rax]
   100024d24:	(bad)  
   100024d25:	jb     0x100024d29
   100024d27:	jo     0x100024d3d
   100024d29:	stc    
   100024d2a:	add    DWORD PTR [rax],eax
   100024d2c:	cmp    BYTE PTR [rsi+0x2],ch
   100024d2f:	add    BYTE PTR [rcx],dl
   100024d31:	adc    al,0x4
   100024d33:	add    BYTE PTR [rsp+rsi*1],dl
   100024d36:	or     al,BYTE PTR [rax]
   100024d38:	(bad)  
   100024d39:	jb     0x100024d3d
   100024d3b:	jo     0x100024d51
   100024d3d:	stc    
   100024d3e:	add    DWORD PTR [rax],eax
   100024d40:	sub    BYTE PTR [rsi+0x2],0x0
   100024d44:	adc    DWORD PTR [rcx],ebx
   100024d46:	(bad)  
   100024d47:	add    BYTE PTR [rcx],bl
   100024d49:	or     eax,DWORD PTR fs:[rax]
   100024d4c:	adc    al,0x34
   100024d4e:	or     al,BYTE PTR [rax]
   100024d50:	(bad)  
   100024d51:	jb     0x100024d55
   100024d53:	jo     0x100024d69
   100024d55:	stc    
   100024d56:	add    DWORD PTR [rax],eax
   100024d58:	enter  0x26e,0x0
   100024d5c:	adc    DWORD PTR [rcx],ebx
   100024d5e:	(bad)  
   100024d5f:	add    BYTE PTR [rcx],bl
   100024d61:	or     eax,DWORD PTR fs:[rax]
   100024d64:	adc    al,0x34
   100024d66:	or     al,BYTE PTR [rax]
   100024d68:	(bad)  
   100024d69:	jb     0x100024d6d
   100024d6b:	jo     0x100024d81
   100024d6d:	stc    
   100024d6e:	add    DWORD PTR [rax],eax
   100024d70:	and    BYTE PTR [rdi+0x2],ch
   100024d73:	add    BYTE PTR [rcx],dl
   100024d75:	lar    eax,WORD PTR [rax]
   100024d78:	(bad)  
   100024d79:	jb     0x100024d7d
   100024d7b:	xor    BYTE PTR [rcx+rdi*8],dl
   100024d7e:	add    DWORD PTR [rax],eax
   100024d80:	js     0x100024df1
   100024d82:	add    al,BYTE PTR [rax]
   100024d84:	adc    DWORD PTR [rip+0xffffffff82040001],ecx        # 0x82064d8b
   100024d8a:	add    BYTE PTR [rax],al
   100024d8c:	adc    al,0xf9
   100024d8e:	add    DWORD PTR [rax],eax
   100024d90:	shr    BYTE PTR [rdi+0x2],1
   100024d93:	add    BYTE PTR [rcx],bl
   100024d95:	sub    al,0x5
   100024d97:	add    BYTE PTR [rdx],bl
   100024d99:	xor    al,0x54
   100024d9b:	add    BYTE PTR [rcx],cl
   100024d9d:	add    DWORD PTR [rdx+0x0],edx
   100024da0:	add    dh,BYTE PTR [rax+0x0]
   100024da3:	add    BYTE PTR [rax],ah
   100024da5:	stc    
   100024da6:	add    DWORD PTR [rax],eax
   100024da8:	cmp    BYTE PTR [rax+0x2],dh
   100024dab:	add    BYTE PTR [rdx+0x1000002],al
   100024db1:	clts   
   100024db3:	add    BYTE PTR [rdi],cl
   100024db5:	fs (bad) 
   100024db7:	add    BYTE PTR [rdi],cl
   100024db9:	xor    al,0x6
   100024dbb:	add    BYTE PTR [rdi],cl
   100024dbd:	xor    cl,BYTE PTR [rbx]
   100024dbf:	jo     0x100024dd2
   100024dc1:	sbb    BYTE PTR [rax+rax*1],al
   100024dc4:	sbb    BYTE PTR [rdx+rcx*1],dh
   100024dc7:	add    BYTE PTR [rdx],cl
   100024dc9:	push   rdx
   100024dca:	(bad)  
   100024dcb:	jo     0x100024de1
   100024dcd:	stc    
   100024dce:	add    DWORD PTR [rax],eax
   100024dd0:	movabs al,ds:0xa00021311000270
   100024dd9:	push   rdx
   100024dda:	(bad)  
   100024ddb:	xor    BYTE PTR [rcx+rdi*8],dl
   100024dde:	add    DWORD PTR [rax],eax
   100024de0:	or     BYTE PTR [rcx+0x2],dh
   100024de3:	add    BYTE PTR [rcx],dl
   100024de5:	adc    eax,DWORD PTR [rdx]
   100024de7:	add    BYTE PTR [rdx],cl
   100024de9:	push   rdx
   100024dea:	(bad)  
   100024deb:	xor    BYTE PTR [rcx+rdi*8],dl
   100024dee:	add    DWORD PTR [rax],eax
   100024df0:	push   rax
   100024df1:	jno    0x100024df5
   100024df3:	add    BYTE PTR [rcx],al
   100024df5:	or     DWORD PTR [rcx],eax
   100024df7:	add    BYTE PTR [rcx],cl
   100024df9:	(bad)  
   100024dfa:	add    BYTE PTR [rax],al
   100024dfc:	add    DWORD PTR [rdx],ecx
   100024dfe:	add    al,0x0
   100024e00:	or     dh,BYTE PTR [rsp+rcx*1]
   100024e03:	add    BYTE PTR [rdx],cl
   100024e05:	xchg   edx,eax
   100024e06:	(bad)  
   100024e07:	jo     0x100024e22
   100024e09:	(bad)  
   100024e0a:	add    eax,DWORD PTR [rax]
   100024e0c:	or     DWORD PTR [rcx],eax
   100024e0e:	(bad)  
   100024e0f:	add    BYTE PTR [rdx],al
   100024e11:	xor    BYTE PTR [rax],al
   100024e13:	add    BYTE PTR [rax],ah
   100024e15:	stc    
   100024e16:	add    DWORD PTR [rax],eax
   100024e18:	cwde   
   100024e19:	jno    0x100024e1d
   100024e1b:	add    BYTE PTR [rbx],cl
   100024e1d:	add    eax,DWORD PTR [rax]
   100024e1f:	add    BYTE PTR [rcx],dl
   100024e21:	adc    al,BYTE PTR [rcx]
   100024e23:	add    BYTE PTR [rcx],cl
   100024e25:	(bad)  
   100024e26:	add    BYTE PTR [rax],al
   100024e28:	adc    al,0xf9
   100024e2a:	add    DWORD PTR [rax],eax
   100024e2c:	push   0x19000273
   100024e31:	sbb    BYTE PTR [rax+rax*1],al
   100024e34:	pslld  mm1,QWORD PTR [rax]
   100024e37:	jo     0x100024e40
   100024e39:	(bad)  
   100024e3a:	(bad)  
   100024e3b:	xor    BYTE PTR [rcx+rdi*8],dl
   100024e3e:	add    DWORD PTR [rax],eax
   100024e40:	movabs al,ds:0x1c000c1c01000273
   100024e49:	fs adc al,0x0
   100024e4c:	sbb    al,0x54
   100024e4e:	adc    eax,DWORD PTR [rax]
   100024e50:	sbb    al,0x34
   100024e52:	adc    al,BYTE PTR [rax]
   100024e54:	sbb    al,0xb2
   100024e56:	sbb    al,dh
   100024e58:	(bad)  
   100024e59:	loopne 0x100024e6f
   100024e5b:	rcl    BYTE PTR [rdx],1
   100024e5d:	rcl    BYTE PTR [rax],0x70
   100024e60:	add    DWORD PTR [rcx],esp
   100024e62:	or     al,0x0
   100024e64:	and    DWORD PTR [rdi+rdx*1+0x0],esp
   100024e68:	and    DWORD PTR [rsi+rdx*1+0x0],edx
   100024e6c:	and    DWORD PTR [rsp+rdx*1],esi
   100024e6f:	add    BYTE PTR [rcx],ah
   100024e71:	rcr    BYTE PTR [rip+0x19e01bf0],cl        # 0x119e26a67
   100024e77:	rcl    BYTE PTR [rdi],1
   100024e79:	rcl    BYTE PTR [rip+0xc441970],0x75        # 0x10c4667f0
   100024e80:	xor    esi,DWORD PTR [rax+rdi*1]
   100024e83:	add    BYTE PTR [rcx],ah
   100024e85:	jae    0x100024ea3
   100024e87:	add    DWORD PTR [rsi],ebp
   100024e89:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x111e2627f
   100024e8f:	ror    BYTE PTR [rdi],1
   100024e91:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x10b625b08
   100024e98:	and    cl,bh
   100024e9a:	add    DWORD PTR [rax],eax
   100024e9c:	nop
   100024e9d:	je     0x100024ea1
   100024e9f:	add    BYTE PTR [rbx+0x1],ah
   100024ea2:	add    BYTE PTR [rax],al
   100024ea4:	add    DWORD PTR [rdi],ecx
   100024ea6:	(bad)  
   100024ea7:	add    BYTE PTR [rdi],cl
   100024ea9:	adc    DWORD PTR fs:[rax],eax
   100024eac:	andps  xmm2,XMMWORD PTR [rax]
   100024eaf:	add    BYTE PTR [rdi],cl
   100024eb1:	mov    dl,0xb
   100024eb3:	jo     0x100024ed6
   100024eb5:	or     al,BYTE PTR [rax+rax*1]
   100024eb8:	or     ah,ah
   100024eba:	sldt   WORD PTR [rip+0xffffffffd0000e34]        # 0xd0025cf5
   100024ec1:	xor    DWORD PTR [rcx],eax
   100024ec3:	add    BYTE PTR [rcx],al
   100024ec5:	xor    al,BYTE PTR [rcx]
   100024ec7:	add    BYTE PTR [rsi+rcx*2+0x210002],ah
   100024ece:	add    BYTE PTR [rax],al
   100024ed0:	shl    BYTE PTR [rcx],1
   100024ed2:	add    DWORD PTR [rax],eax
   100024ed4:	add    DWORD PTR [rdx],esi
   100024ed6:	add    DWORD PTR [rax],eax
   100024ed8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100024ed9:	rex.WRX add r8b,BYTE PTR [rax]
   100024edc:	sbb    DWORD PTR [rcx],esp
   100024ede:	add    eax,0xf341345
   100024ee3:	add    BYTE PTR [rdi],cl
   100024ee5:	rex.XB or sil,BYTE PTR [r10+0x5006]
   100024eec:	test   al,bh
   100024eee:	add    DWORD PTR [rax],eax
   100024ef0:	pop    rax
	...
   100024ef9:	add    BYTE PTR [rax],al
   100024efb:	add    BYTE PTR [rcx],al
   100024efd:	(bad)  
   100024efe:	add    al,0x0
   100024f00:	adc    dh,BYTE PTR [rcx+rcx*1]
   100024f03:	add    BYTE PTR [rdx],dl
   100024f05:	push   rdx
   100024f06:	(bad)  
   100024f07:	(bad)  
   100024f08:	and    DWORD PTR [rip+0x74050002],eax        # 0x174074f10
   100024f0e:	or     BYTE PTR [rax],al
   100024f10:	lock and eax,0x26070000
   100024f16:	add    BYTE PTR [rax],al
   100024f18:	cld    
   100024f19:	rex.WRX add r8b,BYTE PTR [rax]
   100024f1c:	and    DWORD PTR [rax],eax
   100024f1e:	add    BYTE PTR [rax],al
   100024f20:	lock and eax,0x26070000
   100024f26:	add    BYTE PTR [rax],al
   100024f28:	cld    
   100024f29:	rex.WRX add r8b,BYTE PTR [rax]
   100024f2c:	and    DWORD PTR [rax],eax
   100024f2e:	add    al,BYTE PTR [rax]
   100024f30:	add    BYTE PTR [rax+rcx*1+0x0],dh
   100024f34:	lock and eax,0x26070000
   100024f3a:	add    BYTE PTR [rax],al
   100024f3c:	cld    
   100024f3d:	rex.WRX add r8b,BYTE PTR [rax]
   100024f40:	and    DWORD PTR [rax],eax
   100024f42:	add    BYTE PTR [rax],al
   100024f44:	lock and eax,0x26070000
   100024f4a:	add    BYTE PTR [rax],al
   100024f4c:	cld    
   100024f4d:	rex.WRX add r8b,BYTE PTR [rax]
   100024f50:	sbb    DWORD PTR [rcx+0xc],eax
   100024f53:	push   rbp
   100024f54:	xor    esi,DWORD PTR [rbp+rbx*1+0x0]
   100024f58:	sub    al,0x64
   100024f5a:	sbb    al,0x0
   100024f5c:	and    eax,0x16001a34
   100024f61:	push   rbx
   100024f62:	adc    DWORD PTR [rcx],eax
   100024f64:	(bad)  
   100024f65:	add    BYTE PTR [rdx],cl
   100024f67:	lock or al,ah
   100024f6a:	(bad)  
   100024f6b:	push   rax
   100024f6c:	and    cl,bh
   100024f6e:	add    DWORD PTR [rax],eax
   100024f70:	mov    al,0x75
   100024f72:	add    al,BYTE PTR [rax]
   100024f74:	stos   BYTE PTR es:[rdi],al
   100024f75:	add    BYTE PTR [rax],al
   100024f77:	add    BYTE PTR [rcx],bl
   100024f79:	sub    BYTE PTR [rdx],cl
   100024f7b:	push   rbp
   100024f7c:	sbb    ah,ah
   100024f7e:	(bad)  
   100024f7f:	add    BYTE PTR [rsi],dl
   100024f81:	je     0x100024f98
   100024f83:	add    BYTE PTR [rdx],dl
   100024f85:	xor    al,0x14
   100024f87:	add    BYTE PTR [rsi],cl
   100024f89:	push   rbx
   100024f8a:	or     DWORD PTR [rcx],eax
   100024f8c:	adc    al,BYTE PTR [rax]
   100024f8e:	add    dl,BYTE PTR [rax-0x7c]
   100024f91:	clc    
   100024f92:	add    DWORD PTR [rax],eax
   100024f94:	mov    BYTE PTR [rax],al
	...
   100024f9e:	add    BYTE PTR [rax],al
   100024fa0:	add    DWORD PTR [rax],ebx
   100024fa2:	or     al,BYTE PTR [rax]
   100024fa4:	sbb    BYTE PTR [rsp+rdx*1+0x0],ah
   100024fa8:	sbb    BYTE PTR [rbx+rdx*1+0x0],dl
   100024fac:	sbb    BYTE PTR [rdx+rdx*1],dh
   100024faf:	add    BYTE PTR [rax],bl
   100024fb1:	rcl    BYTE PTR [rax+rsi*8],cl
   100024fb4:	adc    ah,al
   100024fb6:	adc    BYTE PTR [rax+0x19],dh
   100024fb9:	cmp    al,0xb
   100024fbb:	add    BYTE PTR [rbx],ch
   100024fbd:	xor    al,0xed
   100024fbf:	add    BYTE PTR [rbx],bl
   100024fc1:	add    esp,esp
   100024fc3:	add    BYTE PTR [rax+rsi*8],cl
   100024fc6:	or     ah,al
   100024fc8:	or     al,dl
   100024fca:	(bad)  
   100024fcb:	rol    BYTE PTR [rax+rsi*2],0x3
   100024fcf:	(bad)  
   100024fd0:	add    dl,BYTE PTR [rax+0x0]
   100024fd3:	add    BYTE PTR [rax],ah
   100024fd5:	stc    
   100024fd6:	add    DWORD PTR [rax],eax
   100024fd8:	clc    
   100024fd9:	jne    0x100024fdd
   100024fdb:	add    BYTE PTR [rdx],dl
   100024fdd:	(bad)  
   100024fde:	add    BYTE PTR [rax],al
   100024fe0:	adc    DWORD PTR [rcx],edx
   100024fe2:	add    DWORD PTR [rax],eax
   100024fe4:	or     DWORD PTR [rdx],esp
   100024fe6:	add    BYTE PTR [rax],al
   100024fe8:	adc    al,0xf9
   100024fea:	add    DWORD PTR [rax],eax
   100024fec:	mov    eax,0x1000276
   100024ff1:	adc    al,0x8
   100024ff3:	add    BYTE PTR [rsp+riz*2],dl
   100024ff6:	or     BYTE PTR [rax],al
   100024ff8:	adc    al,0x54
   100024ffa:	(bad)  
   100024ffb:	add    BYTE PTR [rsp+rsi*1],dl
   100024ffe:	(bad)  
   100024fff:	add    BYTE PTR [rdx+rsi*1],dl
   100025002:	adc    BYTE PTR [rax+0x19],dh
   100025005:	sbb    al,BYTE PTR [rip+0x18341a00]        # 0x118366a0b
   10002500b:	add    BYTE PTR [rcx],cl
   10002500d:	add    DWORD PTR [rsi],edx
   10002500f:	add    BYTE PTR [rdx],al
   100025011:	jo     0x100025013
   100025013:	add    BYTE PTR [rcx+rdi*8],dl
   100025016:	add    DWORD PTR [rax],eax
   100025018:	mov    BYTE PTR [rax+0x2],ah
   10002501b:	add    BYTE PTR [rcx],dl
   10002501d:	(bad)  
   10002501e:	(bad)  
   10002501f:	add    BYTE PTR [rsi],dl
   100025021:	xor    al,0xd
   100025023:	add    BYTE PTR [rax],cl
   100025025:	jb     0x10002502b
   100025027:	jo     0x10002502c
   100025029:	(bad)  
   10002502a:	add    dl,BYTE PTR [rax+0x14]
   10002502d:	stc    
   10002502e:	add    DWORD PTR [rax],eax
   100025030:	lock jbe 0x100025035
   100025033:	add    BYTE PTR [rcx],dl
   100025035:	(bad)  
   100025036:	(bad)  
   100025037:	add    BYTE PTR [rsi],dl
   100025039:	xor    al,0xd
   10002503b:	add    BYTE PTR [rax],cl
   10002503d:	jb     0x100025043
   10002503f:	jo     0x100025044
   100025041:	(bad)  
   100025042:	add    dl,BYTE PTR [rax+0x14]
   100025045:	stc    
   100025046:	add    DWORD PTR [rax],eax
   100025048:	pop    rax
   100025049:	ja     0x10002504d
   10002504b:	add    BYTE PTR [rcx],dl
   10002504d:	adc    al,BYTE PTR [rcx]
   10002504f:	add    BYTE PTR [rcx],cl
   100025051:	(bad)  
   100025052:	add    BYTE PTR [rax],al
   100025054:	adc    al,0xf9
   100025056:	add    DWORD PTR [rax],eax
   100025058:	shl    BYTE PTR [rdi+0x2],0x0
   10002505c:	adc    DWORD PTR [rdx],edx
   10002505e:	add    DWORD PTR [rax],eax
   100025060:	or     DWORD PTR [rdx+0x0],esp
   100025063:	add    BYTE PTR [rcx+rdi*8],dl
   100025066:	add    DWORD PTR [rax],eax
   100025068:	add    BYTE PTR [rax+0x2],bh
   10002506b:	add    BYTE PTR [rcx],al
   10002506d:	adc    eax,0x74150008
   100025072:	or     DWORD PTR [rax],eax
   100025074:	adc    eax,0x15000864
   100025079:	xor    al,0x7
   10002507b:	add    BYTE PTR [rip+0x1e01132],dl        # 0x101e261b3
   100025081:	adc    BYTE PTR [rsi],al
   100025083:	add    BYTE PTR [rax],dl
   100025085:	je     0x100025090
   100025087:	add    BYTE PTR [rax],dl
   100025089:	xor    al,0x8
   10002508b:	add    BYTE PTR [rax],dl
   10002508d:	xor    cl,BYTE PTR [rax+riz*8]
   100025090:	and    DWORD PTR [rip+0x64050002],eax        # 0x164075098
   100025096:	(bad)  
   100025097:	add    al,al
   100025099:	add    QWORD PTR [r8],r8
   10002509c:	adc    BYTE PTR [rsi+0x1],cl
   10002509f:	add    BYTE PTR [rax+0x21000250],al
   1000250a5:	add    BYTE PTR [rax],al
   1000250a7:	add    al,al
   1000250a9:	add    QWORD PTR [r8],r8
   1000250ac:	adc    BYTE PTR [rsi+0x1],cl
   1000250af:	add    BYTE PTR [rax+0x11000250],al
   1000250b5:	adc    DWORD PTR [rcx],eax
   1000250b7:	add    BYTE PTR [rcx],cl
   1000250b9:	and    al,BYTE PTR [rax]
   1000250bb:	add    BYTE PTR [rcx+rdi*8],dl
   1000250be:	add    DWORD PTR [rax],eax
   1000250c0:	cmp    BYTE PTR [rax+0x2],bh
   1000250c3:	add    BYTE PTR [rcx],bl
   1000250c5:	(bad)  
   1000250c6:	add    eax,0x17341700
   1000250cb:	add    BYTE PTR [rbx],cl
   1000250cd:	add    DWORD PTR [rdx],edx
   1000250cf:	add    BYTE PTR [rax+rsi*2],al
   1000250d2:	add    BYTE PTR [rax],al
   1000250d4:	adc    al,0xf9
   1000250d6:	add    DWORD PTR [rax],eax
   1000250d8:	jo     0x100025152
   1000250da:	add    al,BYTE PTR [rax]
   1000250dc:	add    DWORD PTR [rax*1+0x10a21400],edx
   1000250e3:	lock (bad) 
   1000250e5:	ror    BYTE PTR [rax+riz*2],1
   1000250e8:	or     edx,DWORD PTR [rax+0x0]
   1000250eb:	add    BYTE PTR [rcx],ah
   1000250ed:	or     BYTE PTR ds:[rax],al
   1000250f0:	ds xor al,0xa
   1000250f3:	add    BYTE PTR [rdi],cl
   1000250f5:	in     al,0x7
   1000250f7:	add    BYTE PTR [rdx],cl
   1000250f9:	(bad)  
   1000250fa:	or     BYTE PTR [rax],al
   1000250fc:	add    eax,0x80000974
   100025101:	push   rcx
   100025102:	add    DWORD PTR [rax],eax
   100025104:	fist   WORD PTR [rcx+0x1]
   100025107:	add    ah,bl
   100025109:	push   rax
   10002510a:	add    al,BYTE PTR [rax]
   10002510c:	and    DWORD PTR [rax],eax
   10002510e:	add    BYTE PTR [rax],al
   100025110:	adc    BYTE PTR [rcx+0x1],0x0
   100025114:	fist   WORD PTR [rcx+0x1]
   100025117:	add    ah,bl
   100025119:	push   rax
   10002511a:	add    al,BYTE PTR [rax]
   10002511c:	and    DWORD PTR [rax],eax
   10002511e:	or     BYTE PTR [rax],al
   100025120:	add    ah,ah
   100025122:	(bad)  
   100025123:	add    BYTE PTR [rax],al
   100025125:	(bad)  
   100025126:	or     BYTE PTR [rax],al
   100025128:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   10002512c:	add    BYTE PTR [rdx+rcx*1],dh
   10002512f:	add    BYTE PTR [rax-0x20fffeaf],al
   100025135:	push   rcx
   100025136:	add    DWORD PTR [rax],eax
   100025138:	fcom   QWORD PTR [rax+0x2]
   10002513b:	add    BYTE PTR [rcx],bl
   10002513d:	xor    DWORD PTR [rip+0x49641f00],ecx        # 0x149667043
   100025143:	add    BYTE PTR [rdi],bl
   100025145:	push   rsp
   100025146:	rex.W add BYTE PTR [rdi],bl
   100025149:	xor    al,0x47
   10002514b:	add    BYTE PTR [rdi],bl
   10002514d:	add    DWORD PTR [rax+0x0],eax
   100025150:	sbb    al,dh
   100025152:	(bad)  
   100025153:	loopne 0x100025169
   100025155:	rcl    BYTE PTR [rdx],1
   100025157:	rcl    BYTE PTR [rax],0x70
   10002515a:	add    BYTE PTR [rax],al
   10002515c:	test   al,bh
   10002515e:	add    DWORD PTR [rax],eax
   100025160:	lock add DWORD PTR [rax],eax
	...
   10002516b:	add    BYTE PTR [rcx],bl
   10002516d:	(bad)  
   10002516e:	add    eax,0x4c341500
   100025173:	add    BYTE PTR [rip+0xe004801],dl        # 0x10e02997a
   100025179:	jo     0x10002517b
   10002517b:	add    BYTE PTR [rax+rdi*8+0x2300001],al
	...
   10002518a:	add    BYTE PTR [rax],al
   10002518c:	sbb    DWORD PTR [rdi],ebx
   10002518e:	add    eax,0xd340d00
   100025193:	add    DWORD PTR [rip+0x6010a01],ecx        # 0x106035b9a
   100025199:	jo     0x10002519b
   10002519b:	add    BYTE PTR [rax+rdi*8+0x8400001],al
	...
   1000251aa:	add    BYTE PTR [rax],al
   1000251ac:	sbb    DWORD PTR [rcx],ebx
   1000251ae:	add    al,BYTE PTR [rax]
   1000251b0:	(bad)  
   1000251b1:	add    DWORD PTR [rbx+0x0],ecx
   1000251b4:	test   al,bh
   1000251b6:	add    DWORD PTR [rax],eax
   1000251b8:	add    al,BYTE PTR [rax]
	...
   1000251c3:	add    BYTE PTR [rcx],al
   1000251c5:	or     al,BYTE PTR [rax+rax*1]
   1000251c8:	or     dh,BYTE PTR [rcx+rcx*1]
   1000251cb:	add    BYTE PTR [rdx],cl
   1000251cd:	push   rdx
   1000251ce:	(bad)  
   1000251cf:	(bad)  
   1000251d0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1740751d8
   1000251d6:	or     BYTE PTR [rax],al
   1000251d8:	shl    BYTE PTR [rsi+0x1],0x0
   1000251dc:	in     eax,dx
   1000251dd:	add    WORD PTR [rax],ax
   1000251e0:	(bad)  
   1000251e1:	push   rcx
   1000251e2:	add    al,BYTE PTR [rax]
   1000251e4:	and    DWORD PTR [rax],eax
   1000251e6:	add    al,BYTE PTR [rax]
   1000251e8:	add    BYTE PTR [rax+rcx*1+0x0],dh
   1000251ec:	shl    BYTE PTR [rsi+0x1],0x0
   1000251f0:	in     eax,dx
   1000251f1:	add    WORD PTR [rax],ax
   1000251f4:	(bad)  
   1000251f5:	push   rcx
   1000251f6:	add    al,BYTE PTR [rax]
   1000251f8:	and    DWORD PTR [rax],eax
   1000251fa:	add    BYTE PTR [rax],al
   1000251fc:	shl    BYTE PTR [rsi+0x1],0x0
   100025200:	in     eax,dx
   100025201:	add    WORD PTR [rax],ax
   100025204:	(bad)  
   100025205:	push   rcx
   100025206:	add    al,BYTE PTR [rax]
   100025208:	sbb    DWORD PTR [rbx+rax*1],esp
   10002520b:	add    BYTE PTR [rsi],cl
   10002520d:	add    DWORD PTR [rax],esp
   10002520f:	add    BYTE PTR [rdx],al
   100025211:	push   rax
   100025212:	add    BYTE PTR [rax],al
   100025214:	and    cl,bh
   100025216:	add    DWORD PTR [rax],eax
   100025218:	nop
   100025219:	jns    0x10002521d
   10002521b:	add    dl,dh
   10002521d:	add    BYTE PTR [rax],al
   10002521f:	add    BYTE PTR [rcx],dl
   100025221:	adc    eax,DWORD PTR [rdx]
   100025223:	add    BYTE PTR [rdx],cl
   100025225:	jb     0x10002522d
   100025227:	xor    BYTE PTR [rcx+rdi*8],dl
   10002522a:	add    DWORD PTR [rax],eax
   10002522c:	fdivr  DWORD PTR [rcx+0x2]
   10002522f:	add    BYTE PTR [rcx],al
   100025231:	or     al,BYTE PTR [rax+rax*1]
   100025234:	or     dh,BYTE PTR [rbx+rcx*1]
   100025237:	add    BYTE PTR [rdx],cl
   100025239:	push   rdx
   10002523a:	(bad)  
   10002523b:	jo     0x10002523e
   10002523d:	adc    BYTE PTR [rax+rax*1],al
   100025240:	adc    BYTE PTR [rcx],al
   100025242:	adc    DWORD PTR [rax],eax
   100025244:	or     DWORD PTR [rax+0x8],esi
   100025247:	xor    BYTE PTR [rcx],al
   100025249:	sbb    eax,DWORD PTR [rax+rax*1]
   10002524c:	sbb    eax,DWORD PTR [rcx]
   10002524e:	adc    DWORD PTR [rax],eax
   100025250:	adc    al,0x70
   100025252:	adc    esi,DWORD PTR [rax]
   100025254:	sbb    DWORD PTR [rbx],esi
   100025256:	add    al,BYTE PTR [rax]
   100025258:	and    DWORD PTR [rcx],eax
   10002525a:	(bad)  
   10002525b:	add    al,BYTE PTR [rax+rdi*8+0x10200001]
	...
   10002526a:	add    BYTE PTR [rax],al
   10002526c:	add    DWORD PTR [rax],ebx
   10002526e:	or     al,BYTE PTR [rax]
   100025270:	sbb    BYTE PTR [rsp+rcx*1+0x0],ah
   100025274:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   100025278:	sbb    BYTE PTR [rdx+rcx*1],dh
   10002527b:	add    BYTE PTR [rax],bl
   10002527d:	push   rdx
   10002527e:	adc    al,0xf0
   100025280:	adc    ah,al
   100025282:	adc    BYTE PTR [rax+0x19],dh
   100025285:	xor    al,0x3
   100025287:	add    BYTE PTR [rdx],ah
   100025289:	add    DWORD PTR [rdx],ecx
   10002528b:	add    dl,BYTE PTR [rip+0xffffffff84000030]        # 0x840252c1
   100025291:	clc    
   100025292:	add    DWORD PTR [rax],eax
   100025294:	adc    BYTE PTR [rax],al
	...
   10002529f:	add    BYTE PTR [rcx],al
   1000252a1:	or     eax,0x340d0004
   1000252a6:	adc    al,BYTE PTR [rax]
   1000252a8:	or     eax,0x17006f2
   1000252ad:	add    al,0x1
   1000252af:	add    BYTE PTR [rdx+rax*8],al
   1000252b2:	add    BYTE PTR [rax],al
   1000252b4:	sbb    DWORD PTR [rcx],ebp
   1000252b6:	or     DWORD PTR [rax],eax
   1000252b8:	(bad)  
   1000252b9:	fs xchg esp,eax
   1000252bb:	add    BYTE PTR [rdi],dl
   1000252bd:	push   rsp
   1000252be:	xchg   ebx,eax
   1000252bf:	add    BYTE PTR [rdi],dl
   1000252c1:	xor    al,0x92
   1000252c3:	add    BYTE PTR [rdi],dl
   1000252c5:	add    DWORD PTR [rax+0x701000],edx
   1000252cb:	add    BYTE PTR [rax+rdi*8+0x4700001],al
	...
   1000252da:	add    BYTE PTR [rax],al
   1000252dc:	or     DWORD PTR [rdx],ecx
   1000252de:	add    al,0x0
   1000252e0:	or     dh,BYTE PTR [rsi+rax*1]
   1000252e3:	add    BYTE PTR [rdx],cl
   1000252e5:	xor    al,BYTE PTR [rsi]
   1000252e7:	jo     0x1000252c1
   1000252e9:	xchg   ebp,eax
   1000252ea:	add    DWORD PTR [rax],eax
   1000252ec:	add    DWORD PTR [rax],eax
   1000252ee:	add    BYTE PTR [rax],al
   1000252f0:	out    dx,al
   1000252f1:	lea    eax,[rcx]
   1000252f3:	add    BYTE PTR [rdi+rcx*4],ch
   1000252f6:	add    DWORD PTR [rax],eax
   1000252f8:	mov    al,0xf9
   1000252fa:	add    DWORD PTR [rax],eax
   1000252fc:	sub    al,0x8f
   1000252fe:	add    DWORD PTR [rax],eax
   100025300:	add    DWORD PTR [rax],eax
   100025302:	add    BYTE PTR [rax],al
   100025304:	adc    DWORD PTR [rsi],eax
   100025306:	add    al,BYTE PTR [rax]
   100025308:	(bad)  
   100025309:	xor    al,BYTE PTR [rdx]
   10002530b:	xor    al,bl
   10002530d:	xchg   ebp,eax
   10002530e:	add    DWORD PTR [rax],eax
   100025310:	add    DWORD PTR [rax],eax
   100025312:	add    BYTE PTR [rax],al
   100025314:	sbb    edx,DWORD PTR [rcx+rax*1+0x1948100]
   10002531b:	add    ah,cl
   10002531d:	stc    
   10002531e:	add    DWORD PTR [rax],eax
   100025320:	add    BYTE PTR [rax],al
   100025322:	add    BYTE PTR [rax],al
   100025324:	or     DWORD PTR [rcx+rax*1],eax
   100025327:	add    BYTE PTR [rdx+rax*2],al
   10002532a:	add    BYTE PTR [rax],al
   10002532c:	fcom   DWORD PTR [rbp+0x10001]
   100025332:	add    BYTE PTR [rax],al
   100025334:	xchg   DWORD PTR [rsi-0x6945ffff],edx
   10002533a:	add    DWORD PTR [rax],eax
   10002533c:	call   0xba02553a
   100025341:	xchg   esi,eax
   100025342:	add    DWORD PTR [rax],eax
   100025344:	add    DWORD PTR [rdx],ecx
   100025346:	add    al,0x0
   100025348:	or     dh,BYTE PTR [rax+rcx*1]
   10002534b:	add    BYTE PTR [rdx],cl
   10002534d:	xor    al,BYTE PTR [rsi]
   10002534f:	jo     0x10002535a
   100025351:	(bad)  
   100025352:	(bad)  
   100025353:	add    BYTE PTR [rdi],dl
   100025355:	xor    al,0xd
   100025357:	add    BYTE PTR [rdi],dl
   100025359:	jb     0x10002536e
   10002535b:	rcl    BYTE PTR [rcx],0x70
   10002535e:	adc    BYTE PTR [rax-0x28],ah
   100025361:	xchg   ebp,eax
   100025362:	add    DWORD PTR [rax],eax
   100025364:	add    DWORD PTR [rax],eax
   100025366:	add    BYTE PTR [rax],al
   100025368:	xlat   BYTE PTR ds:[rbx]
   100025369:	xchg   edi,eax
   10002536a:	add    DWORD PTR [rax],eax
   10002536c:	lock xchg edi,eax
   10002536e:	add    DWORD PTR [rax],eax
   100025370:	adc    dl,bh
   100025372:	add    DWORD PTR [rax],eax
   100025374:	lock xchg edi,eax
   100025376:	add    DWORD PTR [rax],eax
   100025378:	adc    DWORD PTR [rax],ebx
   10002537a:	add    eax,0x14621800
   10002537f:	rcl    BYTE PTR [rdx],0x70
   100025382:	adc    DWORD PTR [rax+0x10],esp
   100025385:	xor    BYTE PTR [rax],al
   100025387:	add    al,bl
   100025389:	xchg   ebp,eax
   10002538a:	add    DWORD PTR [rax],eax
   10002538c:	add    DWORD PTR [rax],eax
   10002538e:	add    BYTE PTR [rax],al
   100025390:	(bad)  
   100025391:	cwde   
   100025392:	add    DWORD PTR [rax],eax
   100025394:	push   rdi
   100025395:	cwde   
   100025396:	add    DWORD PTR [rax],eax
   100025398:	pop    rax
   100025399:	cli    
   10002539a:	add    DWORD PTR [rax],eax
   10002539c:	add    BYTE PTR [rax],al
   10002539e:	add    BYTE PTR [rax],al
   1000253a0:	add    DWORD PTR [rax],ebx
   1000253a2:	add    DWORD PTR [rax],eax
   1000253a4:	sbb    dl,al
   1000253a6:	add    BYTE PTR [rax],al
   1000253a8:	add    DWORD PTR [rax*1+0x8a20c00],ecx
   1000253af:	lock (bad) 
   1000253b1:	loopne 0x1000253b7
   1000253b3:	rol    BYTE PTR [rdx],0x70
   1000253b6:	add    BYTE PTR [rax],al
   1000253b8:	and    DWORD PTR [rax+rcx*1],edi
   1000253bb:	add    BYTE PTR [rsp+rdx*2],bh
   1000253be:	adc    DWORD PTR [rax],eax
   1000253c0:	xor    DWORD PTR [rax+rdx*1],esi
   1000253c3:	add    BYTE PTR [rip+0x8000ad4],cl        # 0x108025e9d
   1000253c9:	adc    al,BYTE PTR fs:[rax]
   1000253cc:	rcr    BYTE PTR [rdx-0x650affff],1
   1000253d2:	add    DWORD PTR [rax],eax
   1000253d4:	test   al,0x53
   1000253d6:	add    al,BYTE PTR [rax]
   1000253d8:	and    DWORD PTR [rax],eax
   1000253da:	or     BYTE PTR [rax],al
   1000253dc:	add    ah,dl
   1000253de:	or     al,BYTE PTR [rax]
   1000253e0:	add    BYTE PTR [rdx+rdx*1+0x0],ah
   1000253e4:	add    BYTE PTR [rcx+rdx*1+0x0],dl
   1000253e8:	add    BYTE PTR [rax+rdx*1],dh
   1000253eb:	add    al,dl
   1000253ed:	(bad)  
   1000253ee:	add    DWORD PTR [rax],eax
   1000253f0:	cmc    
   1000253f1:	(bad)  
   1000253f2:	add    DWORD PTR [rax],eax
   1000253f4:	test   al,0x53
   1000253f6:	add    al,BYTE PTR [rax]
   1000253f8:	and    DWORD PTR [rax],eax
   1000253fa:	add    BYTE PTR [rax],al
   1000253fc:	rcr    BYTE PTR [rdx-0x650affff],1
   100025402:	add    DWORD PTR [rax],eax
   100025404:	test   al,0x53
   100025406:	add    al,BYTE PTR [rax]
   100025408:	add    DWORD PTR [rbx+rax*1],ecx
   10002540b:	add    BYTE PTR [rdx+riz*4],cl
   10002540e:	or     al,ah
   100025410:	(bad)  
   100025411:	xor    BYTE PTR [rax],al
   100025413:	add    BYTE PTR [rcx],ah
   100025415:	or     al,BYTE PTR [rax+rax*1]
   100025418:	or     ah,BYTE PTR [rdi+rcx*1+0x0]
   10002541c:	add    eax,0xc0000e54
   100025421:	popf   
   100025422:	add    DWORD PTR [rax],eax
   100025424:	fistp  WORD PTR [rbp+0x54080001]
   10002542a:	add    al,BYTE PTR [rax]
   10002542c:	and    DWORD PTR [rdi],ebp
   10002542e:	or     BYTE PTR [rax],al
   100025430:	(bad)  
   100025431:	hlt    
   100025432:	or     BYTE PTR [rax],al
   100025434:	es (bad) 
   100025436:	or     DWORD PTR [rax],eax
   100025438:	or     eax,0x8000ac4
   10002543d:	je     0x10002544f
   10002543f:	add    bh,bl
   100025441:	popf   
   100025442:	add    DWORD PTR [rax],eax
   100025444:	xor    bl,BYTE PTR [rsi+0x54140001]
   10002544a:	add    al,BYTE PTR [rax]
   10002544c:	and    DWORD PTR [rax],eax
   10002544e:	add    BYTE PTR [rax],al
   100025450:	fistp  WORD PTR [rbp-0x61cdffff]
   100025456:	add    DWORD PTR [rax],eax
   100025458:	adc    al,0x54
   10002545a:	add    al,BYTE PTR [rax]
   10002545c:	and    DWORD PTR [rax],eax
   10002545e:	add    BYTE PTR [rax],al
   100025460:	rcr    BYTE PTR [rbp-0x6220ffff],0x1
   100025467:	add    BYTE PTR [rax],cl
   100025469:	push   rsp
   10002546a:	add    al,BYTE PTR [rax]
   10002546c:	add    DWORD PTR [rax+0xe],edi
   10002546f:	add    BYTE PTR [rax-0x2c],bh
   100025472:	(bad)  
   100025473:	add    BYTE PTR [rbx+0x54],dh
   100025476:	or     al,0x0
   100025478:	xor    eax,0x300006e4
   10002547d:	(bad)  
   10002547e:	(bad)  
   10002547f:	add    BYTE PTR [rbx],ch
   100025481:	je     0x100025490
   100025483:	add    BYTE PTR [rcx],cl
   100025485:	jb     0x10002548c
   100025487:	lock add esp,DWORD PTR [rax+0x2]
   10002548b:	xor    BYTE PTR [rcx],ah
   10002548d:	add    eax,0x34050002
   100025492:	or     al,BYTE PTR [rax]
   100025494:	movabs al,ds:0x740001a3c60001a3
   10002549d:	rex.WX add al,BYTE PTR [rax]
   1000254a0:	and    DWORD PTR [rax],eax
   1000254a2:	add    al,BYTE PTR [rax]
   1000254a4:	add    BYTE PTR [rdx+rcx*1],dh
   1000254a7:	add    BYTE PTR [rax-0x39fffe5d],ah
   1000254ad:	movabs ds:0x180100024a740001,eax
   1000254b6:	or     al,BYTE PTR [rax]
   1000254b8:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   1000254bc:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1000254c0:	sbb    BYTE PTR [rax+rcx*1],dh
   1000254c3:	add    BYTE PTR [rax],bl
   1000254c5:	xor    dl,BYTE PTR [rax+rsi*8]
   1000254c8:	adc    ah,al
   1000254ca:	adc    BYTE PTR [rax+0x1],dh
   1000254cd:	sbb    BYTE PTR [rdx],cl
   1000254cf:	add    BYTE PTR [rax],bl
   1000254d1:	fs or  eax,0xc541800
   1000254d7:	add    BYTE PTR [rax],bl
   1000254d9:	xor    al,0xb
   1000254db:	add    BYTE PTR [rax],bl
   1000254dd:	push   rdx
   1000254de:	adc    al,0xf0
   1000254e0:	adc    ah,al
   1000254e2:	adc    BYTE PTR [rax+0x21],dh
   1000254e5:	add    eax,0xc4050002
   1000254ea:	or     al,BYTE PTR [rax]
   1000254ec:	loopne 0x100025494
   1000254ee:	add    DWORD PTR [rax],eax
   1000254f0:	cmp    ah,BYTE PTR [rdi+0x54cc0001]
   1000254f6:	add    al,BYTE PTR [rax]
   1000254f8:	and    DWORD PTR [rax],eax
   1000254fa:	add    BYTE PTR [rax],al
   1000254fc:	loopne 0x1000254a4
   1000254fe:	add    DWORD PTR [rax],eax
   100025500:	cmp    ah,BYTE PTR [rdi+0x54cc0001]
   100025506:	add    al,BYTE PTR [rax]
   100025508:	add    DWORD PTR [rsi+rax*1],ecx
   10002550b:	add    BYTE PTR [rsp+rsi*1],cl
   10002550e:	or     eax,0x8520c00
   100025513:	jo     0x10002551c
   100025515:	(bad)  
   100025516:	(bad)  
   100025517:	push   rax
   100025518:	and    DWORD PTR [rdi],ecx
   10002551a:	(bad)  
   10002551b:	add    BYTE PTR [rdi],cl
   10002551d:	hlt    
   10002551e:	or     al,0x0
   100025520:	or     ah,ah
   100025522:	or     eax,DWORD PTR [rax]
   100025524:	add    eax,0x30000ac4
   100025529:	test   al,0x1
   10002552b:	add    BYTE PTR [rdx-0x58],ch
   10002552e:	add    DWORD PTR [rax],eax
   100025530:	or     BYTE PTR [rbp+0x2],dl
   100025533:	add    BYTE PTR [rcx],ah
   100025535:	add    BYTE PTR [rax],al
   100025537:	add    BYTE PTR [rax],dh
   100025539:	test   al,0x1
   10002553b:	add    BYTE PTR [rdx-0x58],ch
   10002553e:	add    DWORD PTR [rax],eax
   100025540:	or     BYTE PTR [rbp+0x2],dl
   100025543:	add    BYTE PTR [rcx],al
   100025545:	or     al,BYTE PTR [rax+rax*1]
   100025548:	or     dh,BYTE PTR [rdx+0x6]
   10002554b:	rol    BYTE PTR [rax+rax*8],1
   10002554e:	add    dh,BYTE PTR [rax+0x21]
   100025551:	(bad)  
   100025552:	or     al,BYTE PTR [rax]
   100025554:	(bad)  
   100025555:	hlt    
   100025556:	(bad)  
   100025557:	add    BYTE PTR [rcx],bl
   100025559:	in     al,0x7
   10002555b:	add    BYTE PTR [rdi],cl
   10002555d:	fs (bad) 
   10002555f:	add    BYTE PTR [rdx],cl
   100025561:	push   rsp
   100025562:	or     eax,0xc340500
   100025567:	add    BYTE PTR [rax-0x4cfffe57],al
   10002556d:	test   eax,0x55440001
   100025572:	add    al,BYTE PTR [rax]
   100025574:	and    DWORD PTR [rax],eax
   100025576:	add    BYTE PTR [rax],al
   100025578:	sub    BYTE PTR [rcx-0x564cffff],0x1
   10002557f:	add    BYTE PTR [rbp+rdx*2+0x2],al
   100025583:	add    BYTE PTR [rcx],ah
   100025585:	add    BYTE PTR [rdx],cl
   100025587:	add    BYTE PTR [rax],al
   100025589:	hlt    
   10002558a:	(bad)  
   10002558b:	add    BYTE PTR [rax],al
   10002558d:	in     al,0x7
   10002558f:	add    BYTE PTR [rax],al
   100025591:	fs (bad) 
   100025593:	add    BYTE PTR [rax],al
   100025595:	push   rsp
   100025596:	or     eax,0xc340000
   10002559b:	add    BYTE PTR [rax-0x4cfffe57],al
   1000255a1:	test   eax,0x55440001
   1000255a6:	add    al,BYTE PTR [rax]
   1000255a8:	add    DWORD PTR [rdi],ecx
   1000255aa:	add    eax,0xb820f00
   1000255af:	loopne 0x1000255ba
   1000255b1:	rol    BYTE PTR [rdi],0x50
   1000255b4:	(bad)  
   1000255b5:	xor    BYTE PTR [rax],al
   1000255b7:	add    BYTE PTR [rcx],ah
   1000255b9:	add    eax,0xf4050002
   1000255be:	or     BYTE PTR [rax],al
   1000255c0:	loopne 0x10002556d
   1000255c2:	add    DWORD PTR [rax],eax
   1000255c4:	adc    BYTE PTR [rcx+rax*1+0x255a800],ch
   1000255cb:	add    BYTE PTR [rcx],ah
   1000255cd:	(bad)  
   1000255ce:	add    al,0x0
   1000255d0:	(bad)  
   1000255d1:	je     0x1000255e3
   1000255d3:	add    BYTE PTR [rax],al
   1000255d5:	hlt    
   1000255d6:	or     BYTE PTR [rax],al
   1000255d8:	loopne 0x100025585
   1000255da:	add    DWORD PTR [rax],eax
   1000255dc:	adc    BYTE PTR [rcx+rax*1+0x255a800],ch
   1000255e3:	add    BYTE PTR [rcx],ah
   1000255e5:	add    eax,0x64050002
   1000255ea:	lldt   WORD PTR [rdi-0x54]
   1000255ee:	add    DWORD PTR [rax],eax
   1000255f0:	jae    0x10002559e
   1000255f2:	add    DWORD PTR [rax],eax
   1000255f4:	int3   
   1000255f5:	push   rbp
   1000255f6:	add    al,BYTE PTR [rax]
   1000255f8:	and    DWORD PTR [rax],eax
   1000255fa:	add    BYTE PTR [rax],al
   1000255fc:	push   rdi
   1000255fd:	lods   al,BYTE PTR ds:[rsi]
   1000255fe:	add    DWORD PTR [rax],eax
   100025600:	jae    0x1000255ae
   100025602:	add    DWORD PTR [rax],eax
   100025604:	int3   
   100025605:	push   rbp
   100025606:	add    al,BYTE PTR [rax]
   100025608:	and    DWORD PTR [rax],eax
   10002560a:	add    BYTE PTR [rax],al
   10002560c:	loopne 0x1000255b9
   10002560e:	add    DWORD PTR [rax],eax
   100025610:	adc    BYTE PTR [rcx+rax*1+0x255a800],ch
   100025617:	add    BYTE PTR [rcx],al
   100025619:	(bad)  
   10002561a:	add    al,BYTE PTR [rax]
   10002561c:	(bad)  
   10002561d:	xor    al,BYTE PTR [rdx]
   10002561f:	jo     0x100025642
   100025621:	clts   
   100025623:	add    BYTE PTR [rdi],cl
   100025625:	or     BYTE PTR fs:[rax],al
   100025628:	or     dl,BYTE PTR [rdi+rax*1+0x0]
   10002562c:	add    eax,0xe0000634
   100025631:	lods   eax,DWORD PTR ds:[rsi]
   100025632:	add    DWORD PTR [rax],eax
   100025634:	rex.R scas al,BYTE PTR es:[rdi]
   100025636:	add    DWORD PTR [rax],eax
   100025638:	sbb    BYTE PTR [rsi+0x2],dl
   10002563b:	add    BYTE PTR [rcx],ah
   10002563d:	add    BYTE PTR [rsi],al
   10002563f:	add    BYTE PTR [rax],al
   100025641:	or     BYTE PTR fs:[rax],al
   100025644:	add    BYTE PTR [rdi+rax*1+0x0],dl
   100025648:	add    BYTE PTR [rsi+rax*1],dh
   10002564b:	add    al,ah
   10002564d:	lods   eax,DWORD PTR ds:[rsi]
   10002564e:	add    DWORD PTR [rax],eax
   100025650:	rex.R scas al,BYTE PTR es:[rdi]
   100025652:	add    DWORD PTR [rax],eax
   100025654:	sbb    BYTE PTR [rsi+0x2],dl
   100025657:	add    BYTE PTR [rcx],ah
   100025659:	add    BYTE PTR [rax],al
   10002565b:	add    al,ah
   10002565d:	lods   eax,DWORD PTR ds:[rsi]
   10002565e:	add    DWORD PTR [rax],eax
   100025660:	rex.R scas al,BYTE PTR es:[rdi]
   100025662:	add    DWORD PTR [rax],eax
   100025664:	sbb    BYTE PTR [rsi+0x2],dl
   100025667:	add    BYTE PTR [rcx],al
   100025669:	(bad)  
   10002566a:	add    al,BYTE PTR [rax]
   10002566c:	(bad)  
   10002566d:	xor    al,BYTE PTR [rdx]
   10002566f:	loopne 0x100025692
   100025671:	or     al,BYTE PTR [rax+rax*1]
   100025674:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   100025678:	add    eax,0xf0000634
   10002567d:	scas   al,BYTE PTR es:[rdi]
   10002567e:	add    DWORD PTR [rax],eax
   100025680:	sbb    DWORD PTR [rdi+0x56680001],ebp
   100025686:	add    al,BYTE PTR [rax]
   100025688:	and    DWORD PTR [rdx],ecx
   10002568a:	(bad)  
   10002568b:	add    BYTE PTR [rdx],cl
   10002568d:	je     0x100025697
   10002568f:	add    BYTE PTR [rax],al
   100025691:	fs (bad) 
   100025693:	add    BYTE PTR [rax],al
   100025695:	xor    al,0x6
   100025697:	add    al,dh
   100025699:	scas   al,BYTE PTR es:[rdi]
   10002569a:	add    DWORD PTR [rax],eax
   10002569c:	sbb    DWORD PTR [rdi+0x56680001],ebp
   1000256a2:	add    al,BYTE PTR [rax]
   1000256a4:	and    DWORD PTR [rax],eax
   1000256a6:	(bad)  
   1000256a7:	add    BYTE PTR [rax],al
   1000256a9:	je     0x1000256b3
   1000256ab:	add    BYTE PTR [rax],al
   1000256ad:	fs (bad) 
   1000256af:	add    BYTE PTR [rax],al
   1000256b1:	xor    al,0x6
   1000256b3:	add    al,dh
   1000256b5:	scas   al,BYTE PTR es:[rdi]
   1000256b6:	add    DWORD PTR [rax],eax
   1000256b8:	sbb    DWORD PTR [rdi+0x56680001],ebp
   1000256be:	add    al,BYTE PTR [rax]
   1000256c0:	and    DWORD PTR [rax],eax
   1000256c2:	add    BYTE PTR [rax],al
   1000256c4:	lock scas al,BYTE PTR es:[rdi]
   1000256c6:	add    DWORD PTR [rax],eax
   1000256c8:	sbb    DWORD PTR [rdi+0x56680001],ebp
   1000256ce:	add    al,BYTE PTR [rax]
   1000256d0:	sbb    DWORD PTR [rcx],ebx
   1000256d2:	add    al,BYTE PTR [rax]
   1000256d4:	(bad)  
   1000256d5:	add    DWORD PTR [rcx+0x0],esp
   1000256d8:	jo     0x1000256d1
   1000256da:	add    DWORD PTR [rax],eax
   1000256dc:	add    DWORD PTR [rax],eax
   1000256de:	add    BYTE PTR [rax],al
   1000256e0:	in     al,dx
   1000256e1:	mov    al,0x1
   1000256e3:	add    BYTE PTR [rax+rdi*4],bl
   1000256e6:	add    DWORD PTR [rax],eax
   1000256e8:	pop    rax
   1000256e9:	mov    ecx,0x1
   1000256ee:	add    BYTE PTR [rax],al
   1000256f0:	cli    
   1000256f1:	add    al,BYTE PTR [rax]
   1000256f3:	add    BYTE PTR [rcx],al
   1000256f5:	add    eax,0x52050002
   1000256fa:	add    DWORD PTR [rax+0x1],edx
   1000256fd:	adc    eax,DWORD PTR [rcx]
   1000256ff:	add    BYTE PTR [rbx],dl
   100025701:	(bad)  
   100025702:	add    BYTE PTR [rax],al
   100025704:	add    DWORD PTR [rbx],edx
   100025706:	add    DWORD PTR [rax],eax
   100025708:	adc    esp,DWORD PTR [rdx]
   10002570a:	add    BYTE PTR [rax],al
   10002570c:	add    DWORD PTR [rax],ebx
   10002570e:	add    DWORD PTR [rax],eax
   100025710:	sbb    BYTE PTR [rdx+0x0],ah
   100025713:	add    BYTE PTR [rcx],al
   100025715:	sbb    BYTE PTR [rcx],al
   100025717:	add    BYTE PTR [rax],bl
   100025719:	and    al,BYTE PTR [rax]
   10002571b:	add    BYTE PTR [rcx],al
   10002571d:	outs   dx,BYTE PTR ds:[rsi]
   10002571e:	(bad)  
   10002571f:	add    BYTE PTR [rsi+0x34],ch
   100025722:	(bad)  
   100025723:	add    BYTE PTR [rdx],cl
   100025725:	fs (bad) 
   100025727:	add    BYTE PTR [rdx],cl
   100025729:	xor    al,BYTE PTR [rsi]
   10002572b:	jo     0x100025736
   10002572d:	or     al,BYTE PTR [rax+rax*1]
   100025730:	or     dh,BYTE PTR [rax+rcx*1]
   100025733:	add    BYTE PTR [rdx],cl
   100025735:	push   rdx
   100025736:	(bad)  
   100025737:	jo     0x100025711
   100025739:	xchg   ebp,eax
   10002573a:	add    DWORD PTR [rax],eax
   10002573c:	add    DWORD PTR [rax],eax
   10002573e:	add    BYTE PTR [rax],al
   100025740:	repz mov edi,0xc0080001
   100025746:	add    DWORD PTR [rax],eax
   100025748:	add    DWORD PTR [rax],eax
   10002574a:	add    BYTE PTR [rax],al
   10002574c:	or     al,al
   10002574e:	add    DWORD PTR [rax],eax
   100025750:	or     DWORD PTR [rcx+rax*1],eax
   100025753:	add    BYTE PTR [rdx+rax*2],al
   100025756:	add    BYTE PTR [rax],al
   100025758:	fcom   DWORD PTR [rbp+0x10001]
   10002575e:	add    BYTE PTR [rax],al
   100025760:	rex.R rol BYTE PTR [rcx],0x0
   100025764:	push   rsp
   100025765:	rol    BYTE PTR [rcx],0x0
   100025768:	add    DWORD PTR [rax],eax
   10002576a:	add    BYTE PTR [rax],al
   10002576c:	push   rsp
   10002576d:	rol    BYTE PTR [rcx],0x0
   100025770:	or     DWORD PTR [rdi],ecx
   100025772:	add    al,0x0
   100025774:	sysenter 
   100025776:	(bad)  
   100025777:	add    BYTE PTR [rdi],cl
   100025779:	xor    cl,BYTE PTR [rbx]
   10002577b:	jo     0x100025755
   10002577d:	xchg   ebp,eax
   10002577e:	add    DWORD PTR [rax],eax
   100025780:	add    DWORD PTR [rax],eax
   100025782:	add    BYTE PTR [rax],al
   100025784:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100025785:	rol    BYTE PTR [rcx],0x0
   100025788:	mov    ah,0xc0
   10002578a:	add    DWORD PTR [rax],eax
   10002578c:	add    DWORD PTR [rax],eax
   10002578e:	add    BYTE PTR [rax],al
   100025790:	mov    ah,0xc0
   100025792:	add    DWORD PTR [rax],eax
   100025794:	or     DWORD PTR [rdi],ecx
   100025796:	(bad)  
   100025797:	add    BYTE PTR [rdi],cl
   100025799:	fs (bad) 
   10002579b:	add    BYTE PTR [rdi],cl
   10002579d:	xor    al,0x6
   10002579f:	add    BYTE PTR [rdi],cl
   1000257a1:	xor    cl,BYTE PTR [rbx]
   1000257a3:	jo     0x10002577d
   1000257a5:	xchg   ebp,eax
   1000257a6:	add    DWORD PTR [rax],eax
   1000257a8:	add    DWORD PTR [rax],eax
   1000257aa:	add    BYTE PTR [rax],al
   1000257ac:	or     al,0xc1
   1000257ae:	add    DWORD PTR [rax],eax
   1000257b0:	(bad)  
   1000257b1:	rol    DWORD PTR [rcx],0x0
   1000257b4:	add    DWORD PTR [rax],eax
   1000257b6:	add    BYTE PTR [rax],al
   1000257b8:	(bad)  
   1000257b9:	rol    DWORD PTR [rcx],0x0
   1000257bc:	add    DWORD PTR [rcx+rax*1],eax
   1000257bf:	add    BYTE PTR [rdx+rax*1],al
   1000257c2:	add    BYTE PTR [rax],al
   1000257c4:	and    DWORD PTR [rdx+rax*1],eax
   1000257c7:	add    BYTE PTR [rsp+rsi*2],al
   1000257ca:	add    BYTE PTR [rax],al
   1000257cc:	rol    cl,0x1
   1000257cf:	add    ah,cl
   1000257d1:	rol    DWORD PTR [rcx],0x0
   1000257d4:	mov    esp,0x21000257
   1000257d9:	add    BYTE PTR [rax],al
   1000257db:	add    al,al
   1000257dd:	rol    DWORD PTR [rcx],0x0
   1000257e0:	int3   
   1000257e1:	rol    DWORD PTR [rcx],0x0
   1000257e4:	mov    esp,0x1000257
   1000257e9:	(bad)  
   1000257ea:	or     BYTE PTR [rax],al
   1000257ec:	(bad)  
   1000257ed:	push   rsp
   1000257ee:	verw   WORD PTR [rdx]
   1000257f1:	xor    al,0xe
   1000257f3:	add    BYTE PTR [rdx],cl
   1000257f5:	adc    BYTE PTR fs:[rax],al
   1000257f8:	or     dh,BYTE PTR [rdx+0xf097006]
   1000257fe:	(bad)  
   1000257ff:	add    BYTE PTR [rdi],cl
   100025801:	or     DWORD PTR fs:[rax],eax
   100025804:	sysenter 
   100025806:	or     BYTE PTR [rax],al
   100025808:	rsqrtps xmm1,XMMWORD PTR [rbx]
   10002580b:	jo     0x1000257e5
   10002580d:	xchg   ebp,eax
   10002580e:	add    DWORD PTR [rax],eax
   100025810:	add    DWORD PTR [rax],eax
   100025812:	add    BYTE PTR [rax],al
   100025814:	jp     0x1000257da
   100025816:	add    DWORD PTR [rax],eax
   100025818:	mov    dl,0xc4
   10002581a:	add    DWORD PTR [rax],eax
   10002581c:	add    DWORD PTR [rax],eax
   10002581e:	add    BYTE PTR [rax],al
   100025820:	mov    dl,0xc4
   100025822:	add    DWORD PTR [rax],eax
   100025824:	add    DWORD PTR [rax+rcx*1],edx
   100025827:	add    BYTE PTR [rsp+riz*2],dl
   10002582a:	or     eax,DWORD PTR [rax]
   10002582c:	adc    al,0x54
   10002582e:	or     al,BYTE PTR [rax]
   100025830:	adc    al,0x34
   100025832:	or     BYTE PTR [rax],al
   100025834:	adc    al,0x52
   100025836:	adc    BYTE PTR [rax+0x1],dh
   100025839:	adc    BYTE PTR [rbx],al
   10002583b:	add    BYTE PTR [rax],dl
   10002583d:	(bad)  
   10002583e:	or     al,0x70
   100025840:	or     esp,DWORD PTR [rax+0x0]
   100025843:	add    BYTE PTR [rcx],ah
   100025845:	push   rsi
   100025846:	(bad)  
   100025847:	add    BYTE PTR [rsi-0x3c],dl
   10002584a:	(bad)  
   10002584b:	add    BYTE PTR [rcx+0x54],dl
   10002584e:	(bad)  
   10002584f:	add    BYTE PTR [rip+0x30000834],al        # 0x130026089
   100025855:	mov    BYTE PTR [rcx],0x0
   100025858:	pop    rsi
   100025859:	mov    BYTE PTR [rcx],0x0
   10002585c:	cmp    BYTE PTR [rax+0x2],bl
   10002585f:	add    BYTE PTR [rcx],ah
   100025861:	add    BYTE PTR [rsi],al
   100025863:	add    BYTE PTR [rax],al
   100025865:	(bad)  
   100025866:	(bad)  
   100025867:	add    BYTE PTR [rax],al
   100025869:	push   rsp
   10002586a:	(bad)  
   10002586b:	add    BYTE PTR [rax],al
   10002586d:	xor    al,0x8
   10002586f:	add    BYTE PTR [rax],dh
   100025871:	mov    BYTE PTR [rcx],0x0
   100025874:	pop    rsi
   100025875:	mov    BYTE PTR [rcx],0x0
   100025878:	cmp    BYTE PTR [rax+0x2],bl
   10002587b:	add    BYTE PTR [rcx],ah
   10002587d:	add    BYTE PTR [rdx],al
   10002587f:	add    BYTE PTR [rax],al
   100025881:	xor    al,0x8
   100025883:	add    BYTE PTR [rax],dh
   100025885:	mov    BYTE PTR [rcx],0x0
   100025888:	pop    rsi
   100025889:	mov    BYTE PTR [rcx],0x0
   10002588c:	cmp    BYTE PTR [rax+0x2],bl
   10002588f:	add    BYTE PTR [rcx],al
   100025891:	adc    al,0x8
   100025893:	add    BYTE PTR [rsp+riz*2],dl
   100025896:	or     al,0x0
   100025898:	adc    al,0x54
   10002589a:	or     eax,DWORD PTR [rax]
   10002589c:	adc    al,0x34
   10002589e:	or     al,BYTE PTR [rax]
   1000258a0:	adc    al,0x72
   1000258a2:	adc    BYTE PTR [rax+0x9],dh
   1000258a5:	(bad)  
   1000258a6:	add    al,BYTE PTR [rax]
   1000258a8:	(bad)  
   1000258a9:	xor    al,BYTE PTR [rdx]
   1000258ab:	xor    al,bl
   1000258ad:	xchg   ebp,eax
   1000258ae:	add    DWORD PTR [rax],eax
   1000258b0:	add    DWORD PTR [rax],eax
   1000258b2:	add    BYTE PTR [rax],al
   1000258b4:	stos   DWORD PTR es:[rdi],eax
   1000258b5:	enter  0x1,0xb7
   1000258b9:	enter  0x1,0x1
   1000258bd:	add    BYTE PTR [rax],al
   1000258bf:	add    BYTE PTR [rdi+0x90001c8],dh
   1000258c5:	adc    ecx,DWORD PTR [rax]
   1000258c7:	add    BYTE PTR [rbx],dl
   1000258c9:	or     eax,DWORD PTR fs:[rax]
   1000258cc:	adc    esi,DWORD PTR [rdx+rcx*1]
   1000258cf:	add    BYTE PTR [rbx],dl
   1000258d1:	push   rdx
   1000258d2:	(bad)  
   1000258d4:	or     eax,0xd8700bc0
   1000258d9:	xchg   ebp,eax
   1000258da:	add    DWORD PTR [rax],eax
   1000258dc:	add    al,BYTE PTR [rax]
   1000258de:	add    BYTE PTR [rax],al
   1000258e0:	movabs ds:0x10001cab60001ca,al
   1000258e9:	add    BYTE PTR [rax],al
   1000258eb:	add    BYTE PTR [rsi+0x580001ca],dh
   1000258f1:	retf   0x1
   1000258f4:	cld    
   1000258f5:	retf   0x1
   1000258f8:	add    DWORD PTR [rax],eax
   1000258fa:	add    BYTE PTR [rax],al
   1000258fc:	cld    
   1000258fd:	retf   0x1
   100025900:	or     DWORD PTR [rdx],ebx
   100025902:	or     BYTE PTR [rax],al
   100025904:	sbb    dh,BYTE PTR [rbx+rcx*1+0x0]
   100025908:	sbb    ah,BYTE PTR [rdx+rcx*1+0x0]
   10002590c:	sbb    dh,BYTE PTR [rcx+rcx*1]
   10002590f:	add    BYTE PTR [rdx],bl
   100025911:	push   rdx
   100025912:	(bad)  
   100025913:	rcr    al,0x95
   100025916:	add    DWORD PTR [rax],eax
   100025918:	add    DWORD PTR [rax],eax
   10002591a:	add    BYTE PTR [rax],al
   10002591c:	mov    esp,0xcf0001cb
   100025921:	retf   
   100025922:	add    DWORD PTR [rax],eax
   100025924:	add    DWORD PTR [rax],eax
   100025926:	add    BYTE PTR [rax],al
   100025928:	iret   
   100025929:	retf   
   10002592a:	add    DWORD PTR [rax],eax
   10002592c:	or     DWORD PTR [rsi+rax*1],edx
   10002592f:	add    BYTE PTR [rsp+riz*2],dl
   100025932:	or     al,BYTE PTR [rax]
   100025934:	adc    al,0x34
   100025936:	or     DWORD PTR [rax],eax
   100025938:	adc    al,0x52
   10002593a:	adc    BYTE PTR [rax-0x28],dh
   10002593d:	xchg   ebp,eax
   10002593e:	add    DWORD PTR [rax],eax
   100025940:	add    DWORD PTR [rax],eax
   100025942:	add    BYTE PTR [rax],al
   100025944:	pop    rbx
   100025945:	int3   
   100025946:	add    DWORD PTR [rax],eax
   100025948:	imul   ecx,esp,0x1
   10002594b:	add    BYTE PTR [rcx],al
   10002594d:	add    BYTE PTR [rax],al
   10002594f:	add    BYTE PTR [rbx-0x34],ch
   100025952:	add    DWORD PTR [rax],eax
   100025954:	sbb    DWORD PTR [rbx],ebx
   100025956:	add    eax,DWORD PTR [rax]
   100025958:	or     DWORD PTR [rcx],eax
   10002595a:	push   rsi
   10002595b:	add    DWORD PTR [rdx],eax
   10002595d:	jo     0x10002595f
   10002595f:	add    BYTE PTR [rax+rdi*8+0xaa00001],al
	...
   10002596e:	add    BYTE PTR [rax],al
   100025970:	and    DWORD PTR [rax],ecx
   100025972:	add    al,BYTE PTR [rax]
   100025974:	or     BYTE PTR [rcx+rbx*2],dh
   100025977:	add    DWORD PTR [rax],esp
   100025979:	int    0x1
   10002597b:	add    BYTE PTR [rbp+0x540001cd],dh
   100025981:	pop    rcx
   100025982:	add    al,BYTE PTR [rax]
   100025984:	and    DWORD PTR [rax],eax
   100025986:	add    BYTE PTR [rax],al
   100025988:	and    ch,cl
   10002598a:	add    DWORD PTR [rax],eax
   10002598c:	mov    ch,0xcd
   10002598e:	add    DWORD PTR [rax],eax
   100025990:	push   rsp
   100025991:	pop    rcx
   100025992:	add    al,BYTE PTR [rax]
   100025994:	or     DWORD PTR [rdx],ebx
   100025996:	or     BYTE PTR [rax],al
   100025998:	sbb    dh,BYTE PTR [rbp+rcx*1+0x0]
   10002599c:	sbb    ah,BYTE PTR [rsp+rcx*1+0x0]
   1000259a0:	sbb    dh,BYTE PTR [rbx+rcx*1]
   1000259a3:	add    BYTE PTR [rdx],bl
   1000259a5:	jb     0x1000259bd
   1000259a7:	rcr    al,0x95
   1000259aa:	add    DWORD PTR [rax],eax
   1000259ac:	add    DWORD PTR [rax],eax
   1000259ae:	add    BYTE PTR [rax],al
   1000259b0:	fxch   st(6)
   1000259b2:	add    DWORD PTR [rax],eax
   1000259b4:	sbb    cl,bh
   1000259b6:	add    DWORD PTR [rax],eax
   1000259b8:	add    DWORD PTR [rax],eax
   1000259ba:	add    BYTE PTR [rax],al
   1000259bc:	sbb    cl,bh
   1000259be:	add    DWORD PTR [rax],eax
   1000259c0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1740759c8
   1000259c6:	or     BYTE PTR [rax],al
   1000259c8:	jo     0x100025999
   1000259ca:	add    DWORD PTR [rax],eax
   1000259cc:	(bad)  
   1000259cd:	iret   
   1000259ce:	add    DWORD PTR [rax],eax
   1000259d0:	movabs al,ds:0x20021000243
   1000259d9:	je     0x1000259e3
   1000259db:	add    BYTE PTR [rax-0x31],dh
   1000259de:	add    DWORD PTR [rax],eax
   1000259e0:	(bad)  
   1000259e1:	iret   
   1000259e2:	add    DWORD PTR [rax],eax
   1000259e4:	movabs al,ds:0x7000000021000243
   1000259ed:	iret   
   1000259ee:	add    DWORD PTR [rax],eax
   1000259f0:	(bad)  
   1000259f1:	iret   
   1000259f2:	add    DWORD PTR [rax],eax
   1000259f4:	movabs al,ds:0x1b00081b09000243
   1000259fd:	xor    al,0xd
   1000259ff:	add    BYTE PTR [rbx],bl
   100025a01:	xor    dl,BYTE PTR [rdi]
   100025a03:	loopne 0x100025a1a
   100025a05:	rcl    BYTE PTR [rbx],1
   100025a07:	rcl    BYTE PTR [rcx],0x70
   100025a0a:	adc    BYTE PTR [rax-0x28],ah
   100025a0d:	xchg   ebp,eax
   100025a0e:	add    DWORD PTR [rax],eax
   100025a10:	add    DWORD PTR [rax],eax
   100025a12:	add    BYTE PTR [rax],al
   100025a14:	loopne 0x1000259e6
   100025a16:	add    DWORD PTR [rax],eax
   100025a18:	not    eax
   100025a1a:	add    DWORD PTR [rax],eax
   100025a1c:	add    DWORD PTR [rax],eax
   100025a1e:	add    BYTE PTR [rax],al
   100025a20:	not    eax
   100025a22:	add    DWORD PTR [rax],eax
   100025a24:	add    DWORD PTR [rdx],ecx
   100025a26:	add    al,0x0
   100025a28:	or     dh,BYTE PTR [rdx+rcx*1]
   100025a2b:	add    BYTE PTR [rdx],cl
   100025a2d:	push   rdx
   100025a2e:	(bad)  
   100025a2f:	jo     0x100025a52
   100025a31:	add    eax,0x64050002
   100025a36:	or     BYTE PTR [rax],al
   100025a38:	nop
   100025a39:	rol    DWORD PTR [rcx],cl
   100025a3b:	add    ah,bl
   100025a3d:	rol    DWORD PTR [rcx],cl
   100025a3f:	add    BYTE PTR [rdx+rbx*2],ah
   100025a42:	add    al,BYTE PTR [rax]
   100025a44:	and    DWORD PTR [rax],eax
   100025a46:	add    al,BYTE PTR [rax]
   100025a48:	add    BYTE PTR [rax+rcx*1+0x0],ah
   100025a4c:	nop
   100025a4d:	rol    DWORD PTR [rcx],cl
   100025a4f:	add    ah,bl
   100025a51:	rol    DWORD PTR [rcx],cl
   100025a53:	add    BYTE PTR [rdx+rbx*2],ah
   100025a56:	add    al,BYTE PTR [rax]
   100025a58:	and    DWORD PTR [rax],eax
   100025a5a:	add    BYTE PTR [rax],al
   100025a5c:	nop
   100025a5d:	rol    DWORD PTR [rcx],cl
   100025a5f:	add    ah,bl
   100025a61:	rol    DWORD PTR [rcx],cl
   100025a63:	add    BYTE PTR [rdx+rbx*2],ah
   100025a66:	add    al,BYTE PTR [rax]
   100025a68:	add    DWORD PTR [rdx],ecx
   100025a6a:	add    al,0x0
   100025a6c:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   100025a70:	or     dh,BYTE PTR [rdx]
   100025a72:	(bad)  
   100025a73:	jo     0x100025a96
   100025a75:	or     al,BYTE PTR [rax+rax*1]
   100025a78:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   100025a7c:	add    eax,0xc0000634
   100025a81:	(bad)  
   100025a82:	add    DWORD PTR [rax],eax
   100025a84:	in     al,dx
   100025a85:	(bad)  
   100025a86:	add    DWORD PTR [rax],eax
   100025a88:	push   0x2100025a
   100025a8d:	add    BYTE PTR [rax],al
   100025a8f:	add    al,al
   100025a91:	(bad)  
   100025a92:	add    DWORD PTR [rax],eax
   100025a94:	in     al,dx
   100025a95:	(bad)  
   100025a96:	add    DWORD PTR [rax],eax
   100025a98:	push   0x900025a
   100025a9d:	sbb    eax,0x741d000a
   100025aa2:	ltr    WORD PTR [rip+0x1d000d64]        # 0x11d02680d
   100025aa9:	xor    al,0xc
   100025aab:	add    BYTE PTR [rip+0x17e01972],bl        # 0x117e27423
   100025ab1:	rcl    BYTE PTR [rip+0x195d8c0],1        # 0x101983377
   100025ab7:	add    BYTE PTR [rcx],al
   100025ab9:	add    BYTE PTR [rax],al
   100025abb:	add    BYTE PTR [rdx+0x2c0001d6],dh
   100025ac1:	xlat   BYTE PTR ds:[rbx]
   100025ac2:	add    DWORD PTR [rax],eax
   100025ac4:	add    DWORD PTR [rax],eax
   100025ac6:	add    BYTE PTR [rax],al
   100025ac8:	sub    al,0xd7
   100025aca:	add    DWORD PTR [rax],eax
   100025acc:	or     DWORD PTR [rdi],edx
   100025ace:	(bad)  
   100025acf:	add    BYTE PTR [rdi],dl
   100025ad1:	xor    al,0xb
   100025ad3:	add    BYTE PTR [rdi],dl
   100025ad5:	push   rdx
   100025ad6:	adc    eax,eax
   100025ad8:	adc    DWORD PTR [rax+0x10],esi
   100025adb:	(bad)  
   100025adc:	fcom   DWORD PTR [rbp+0x10001]
   100025ae2:	add    BYTE PTR [rax],al
   100025ae4:	in     eax,dx
   100025ae5:	xlat   BYTE PTR ds:[rbx]
   100025ae6:	add    DWORD PTR [rax],eax
   100025ae8:	add    eax,0x10001d8
   100025aed:	add    BYTE PTR [rax],al
   100025aef:	add    BYTE PTR [rip+0x90001d8],al        # 0x109025ccd
   100025af5:	sbb    BYTE PTR [rax],cl
   100025af7:	add    BYTE PTR [rax],bl
   100025af9:	or     eax,DWORD PTR fs:[rax]
   100025afc:	sbb    BYTE PTR [rdx+rcx*1],dh
   100025aff:	add    BYTE PTR [rax],bl
   100025b01:	xor    dl,BYTE PTR [rax+rdx*8]
   100025b04:	adc    al,al
   100025b06:	adc    BYTE PTR [rax-0x28],dh
   100025b09:	xchg   ebp,eax
   100025b0a:	add    DWORD PTR [rax],eax
   100025b0c:	add    al,BYTE PTR [rax]
   100025b0e:	add    BYTE PTR [rax],al
   100025b10:	xor    al,0xdd
   100025b12:	add    DWORD PTR [rax],eax
   100025b14:	pop    rax
   100025b15:	fld    QWORD PTR [rcx]
   100025b17:	add    BYTE PTR [rcx],al
   100025b19:	add    BYTE PTR [rax],al
   100025b1b:	add    BYTE PTR [rax-0x23],bl
   100025b1e:	add    DWORD PTR [rax],eax
   100025b20:	mov    ebp,ebx
   100025b22:	add    DWORD PTR [rax],eax
   100025b24:	(bad)  
   100025b25:	fld    QWORD PTR [rcx]
   100025b27:	add    BYTE PTR [rcx],al
   100025b29:	add    BYTE PTR [rax],al
   100025b2b:	add    BYTE PTR [rdx+0x10001dd],bl
   100025b31:	sub    eax,DWORD PTR [rip+0x3742b00]        # 0x103768637
   100025b37:	add    BYTE PTR [rsi],ah
   100025b39:	xor    al,0x2
   100025b3b:	add    BYTE PTR [rdx],al
   100025b3d:	(bad)  
   100025b3e:	add    BYTE PTR [rax],al
   100025b40:	or     DWORD PTR [rdx],ebx
   100025b42:	or     al,BYTE PTR [rax]
   100025b44:	sbb    al,ah
   100025b46:	or     eax,0xc741a00
   100025b4b:	add    BYTE PTR [rdx],bl
   100025b4d:	or     eax,DWORD PTR fs:[rax]
   100025b50:	sbb    dh,BYTE PTR [rdx+rcx*1]
   100025b53:	add    BYTE PTR [rdx],bl
   100025b55:	jb     0x100025b6d
   100025b57:	rcr    al,1
   100025b59:	xchg   ebp,eax
   100025b5a:	add    DWORD PTR [rax],eax
   100025b5c:	add    DWORD PTR [rax],eax
   100025b5e:	add    BYTE PTR [rax],al
   100025b60:	jmp    0x100025b41
   100025b62:	add    DWORD PTR [rax],eax
   100025b64:	rex.B loopne 0x100025b68
   100025b67:	add    BYTE PTR [rcx],al
   100025b69:	add    BYTE PTR [rax],al
   100025b6b:	add    BYTE PTR [rcx-0x20],al
   100025b6e:	add    DWORD PTR [rax],eax
   100025b70:	add    DWORD PTR [rdi],ecx
   100025b72:	(bad)  
   100025b73:	add    BYTE PTR [rdi],cl
   100025b75:	or     DWORD PTR fs:[rax],eax
   100025b78:	andps  xmm1,XMMWORD PTR [rax]
   100025b7b:	add    BYTE PTR [rdi],cl
   100025b7d:	xor    cl,BYTE PTR [rbx]
   100025b7f:	jo     0x100025ba2
   100025b81:	or     al,BYTE PTR [rax+rax*1]
   100025b84:	or     al,ah
   100025b86:	(bad)  
   100025b87:	add    BYTE PTR [rip+0xffffffff90000634],al        # 0x900261c1
   100025b8d:	loopne 0x100025b90
   100025b8f:	add    BYTE PTR [rdx],bh
   100025b91:	loope  0x100025b94
   100025b93:	add    BYTE PTR [rax+0x5b],dh
   100025b96:	add    al,BYTE PTR [rax]
   100025b98:	and    DWORD PTR [rax],eax
   100025b9a:	add    BYTE PTR [rax],al
   100025b9c:	nop
   100025b9d:	loopne 0x100025ba0
   100025b9f:	add    BYTE PTR [rdx],bh
   100025ba1:	loope  0x100025ba4
   100025ba3:	add    BYTE PTR [rax+0x5b],dh
   100025ba6:	add    al,BYTE PTR [rax]
   100025ba8:	or     DWORD PTR [rdx],ecx
   100025baa:	add    al,0x0
   100025bac:	or     dh,BYTE PTR [rax+rcx*1]
   100025baf:	add    BYTE PTR [rdx],cl
   100025bb1:	push   rdx
   100025bb2:	(bad)  
   100025bb3:	jo     0x100025b8d
   100025bb5:	xchg   ebp,eax
   100025bb6:	add    DWORD PTR [rax],eax
   100025bb8:	add    DWORD PTR [rax],eax
   100025bba:	add    BYTE PTR [rax],al
   100025bbc:	in     al,dx
   100025bbd:	jrcxz  0x100025bc0
   100025bbf:	add    BYTE PTR [rsp+riz*8],bl
   100025bc2:	add    DWORD PTR [rax],eax
   100025bc4:	add    DWORD PTR [rax],eax
   100025bc6:	add    BYTE PTR [rax],al
   100025bc8:	sbb    al,0xe4
   100025bca:	add    DWORD PTR [rax],eax
   100025bcc:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0xc4075bd4
   100025bd2:	(bad)  
   100025bd3:	add    BYTE PTR [rax],ah
   100025bd5:	out    0x1,eax
   100025bd7:	add    BYTE PTR [rax-0x19],bl
   100025bda:	add    DWORD PTR [rax],eax
   100025bdc:	test   BYTE PTR [rsi+0x2],al
   100025bdf:	add    BYTE PTR [rcx],ah
   100025be1:	add    BYTE PTR [rdx],al
   100025be3:	add    BYTE PTR [rax],al
   100025be5:	(bad)  
   100025be6:	(bad)  
   100025be7:	add    BYTE PTR [rax],ah
   100025be9:	out    0x1,eax
   100025beb:	add    BYTE PTR [rax-0x19],bl
   100025bee:	add    DWORD PTR [rax],eax
   100025bf0:	test   BYTE PTR [rsi+0x2],al
   100025bf3:	add    BYTE PTR [rcx],ah
   100025bf5:	add    BYTE PTR [rax],al
   100025bf7:	add    BYTE PTR [rax],ah
   100025bf9:	out    0x1,eax
   100025bfb:	add    BYTE PTR [rax-0x19],bl
   100025bfe:	add    DWORD PTR [rax],eax
   100025c00:	test   BYTE PTR [rsi+0x2],al
   100025c03:	add    BYTE PTR [rcx],ah
   100025c05:	add    eax,0xc4050002
   100025c0a:	(bad)  
   100025c0b:	add    BYTE PTR [rax],ah
   100025c0d:	call   0xe85a5c13
   100025c12:	add    DWORD PTR [rax],eax
   100025c14:	test   BYTE PTR [rsi+0x2],al
   100025c17:	add    BYTE PTR [rcx],ah
   100025c19:	add    BYTE PTR [rdx],al
   100025c1b:	add    BYTE PTR [rax],al
   100025c1d:	(bad)  
   100025c1e:	(bad)  
   100025c1f:	add    BYTE PTR [rax],ah
   100025c21:	call   0xe85a5c27
   100025c26:	add    DWORD PTR [rax],eax
   100025c28:	test   BYTE PTR [rsi+0x2],al
   100025c2b:	add    BYTE PTR [rcx],ah
   100025c2d:	add    BYTE PTR [rax],al
   100025c2f:	add    BYTE PTR [rax],ah
   100025c31:	call   0xe85a5c37
   100025c36:	add    DWORD PTR [rax],eax
   100025c38:	test   BYTE PTR [rsi+0x2],al
   100025c3b:	add    BYTE PTR [rcx],cl
   100025c3d:	(bad)  
   100025c3e:	add    al,BYTE PTR [rax]
   100025c40:	(bad)  
   100025c41:	push   rdx
   100025c42:	add    dh,BYTE PTR [rax]
   100025c44:	fcom   DWORD PTR [rbp+0x10001]
   100025c4a:	add    BYTE PTR [rax],al
   100025c4c:	sub    al,0xe9
   100025c4e:	add    DWORD PTR [rax],eax
   100025c50:	ds jmp 0x100035c57
   100025c56:	add    BYTE PTR [rax],al
   100025c58:	ds jmp 0x10f0b5c5f
   100025c5e:	(bad)  
   100025c5f:	add    BYTE PTR [rdi],cl
   100025c61:	or     DWORD PTR fs:[rax],eax
   100025c64:	sysenter 
   100025c66:	or     BYTE PTR [rax],al
   100025c68:	rsqrtps xmm1,XMMWORD PTR [rbx]
   100025c6b:	jo     0x100025c45
   100025c6d:	xchg   ebp,eax
   100025c6e:	add    DWORD PTR [rax],eax
   100025c70:	add    DWORD PTR [rax],eax
   100025c72:	add    BYTE PTR [rax],al
   100025c74:	mov    cl,ch
   100025c76:	add    DWORD PTR [rax],eax
   100025c78:	je     0x100025c64
   100025c7a:	add    DWORD PTR [rax],eax
   100025c7c:	add    DWORD PTR [rax],eax
   100025c7e:	add    BYTE PTR [rax],al
   100025c80:	je     0x100025c6c
   100025c82:	add    DWORD PTR [rax],eax
   100025c84:	or     DWORD PTR [rax+rcx*1],edx
   100025c87:	add    BYTE PTR [rdx+rsi*4],dl
   100025c8a:	adc    al,dh
   100025c8c:	(bad)  
   100025c8d:	loopne 0x100025c9b
   100025c8f:	ror    BYTE PTR [rdx],1
   100025c91:	ror    BYTE PTR [rax],0x70
   100025c94:	(bad)  
   100025c95:	(bad)  
   100025c96:	(bad)  
   100025c97:	xor    al,bl
   100025c99:	xchg   ebp,eax
   100025c9a:	add    DWORD PTR [rax],eax
   100025c9c:	add    al,BYTE PTR [rax]
   100025c9e:	add    BYTE PTR [rax],al
   100025ca0:	xchg   esi,eax
   100025ca1:	in     al,dx
   100025ca2:	add    DWORD PTR [rax],eax
   100025ca4:	rex.XB in eax,dx
   100025ca6:	add    DWORD PTR [rax],eax
   100025ca8:	add    DWORD PTR [rax],eax
   100025caa:	add    BYTE PTR [rax],al
   100025cac:	rex.XB in eax,dx
   100025cae:	add    DWORD PTR [rax],eax
   100025cb0:	or     bl,ch
   100025cb2:	add    DWORD PTR [rax],eax
   100025cb4:	(bad)  
   100025cb5:	in     eax,dx
   100025cb6:	add    DWORD PTR [rax],eax
   100025cb8:	add    DWORD PTR [rax],eax
   100025cba:	add    BYTE PTR [rax],al
   100025cbc:	(bad)  
   100025cbd:	in     eax,dx
   100025cbe:	add    DWORD PTR [rax],eax
   100025cc0:	or     DWORD PTR [rip+0x74150008],edx        # 0x174175cce
   100025cc6:	or     al,BYTE PTR [rax]
   100025cc8:	adc    eax,0x15000964
   100025ccd:	xor    al,0x8
   100025ccf:	add    BYTE PTR [rip+0xffffffffd8c01152],dl        # 0xd8c26e27
   100025cd5:	xchg   ebp,eax
   100025cd6:	add    DWORD PTR [rax],eax
   100025cd8:	add    DWORD PTR [rax],eax
   100025cda:	add    BYTE PTR [rax],al
   100025cdc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100025cdd:	out    dx,al
   100025cde:	add    DWORD PTR [rax],eax
   100025ce0:	xor    ch,bh
   100025ce2:	add    DWORD PTR [rax],eax
   100025ce4:	add    DWORD PTR [rax],eax
   100025ce6:	add    BYTE PTR [rax],al
   100025ce8:	xor    ch,bh
   100025cea:	add    DWORD PTR [rax],eax
   100025cec:	add    DWORD PTR [rdi],edx
   100025cee:	or     DWORD PTR [rax],eax
   100025cf0:	(bad)  
   100025cf1:	fs sbb al,0x0
   100025cf4:	(bad)  
   100025cf5:	push   rsp
   100025cf6:	sbb    eax,DWORD PTR [rax]
   100025cf8:	(bad)  
   100025cf9:	xor    al,0x1a
   100025cfb:	add    BYTE PTR [rdi],dl
   100025cfd:	add    DWORD PTR [rax],ebx
   100025cff:	add    BYTE PTR [rax],dl
   100025d01:	jo     0x100025d03
   100025d03:	add    BYTE PTR [rcx],cl
   100025d05:	or     al,BYTE PTR [rdx]
   100025d07:	add    BYTE PTR [rdx],cl
   100025d09:	push   rdx
   100025d0a:	(bad)  
   100025d0b:	xor    al,bl
   100025d0d:	xchg   ebp,eax
   100025d0e:	add    DWORD PTR [rax],eax
   100025d10:	add    DWORD PTR [rax],eax
   100025d12:	add    BYTE PTR [rax],al
   100025d14:	cwde   
   100025d15:	icebp  
   100025d16:	add    DWORD PTR [rax],eax
   100025d18:	mov    esi,0xd00001f1
   100025d1d:	icebp  
   100025d1e:	add    DWORD PTR [rax],eax
   100025d20:	mov    esi,0x10001f1
   100025d25:	(bad)  
   100025d26:	add    al,BYTE PTR [rax]
   100025d28:	(bad)  
   100025d29:	xor    al,BYTE PTR [rdx]
   100025d2b:	push   rax
   100025d2c:	add    DWORD PTR [rsi],edx
   100025d2e:	or     al,BYTE PTR [rax]
   100025d30:	(bad)  
   100025d31:	xor    al,0x19
   100025d33:	add    BYTE PTR [rsi],dl
   100025d35:	rcl    BYTE PTR [rdx],cl
   100025d37:	lock adc al,ah
   100025d3a:	(bad)  
   100025d3b:	ror    BYTE PTR [rax+rax*8],1
   100025d3e:	or     dh,BYTE PTR [rax+0x9]
   100025d41:	(bad)  
   100025d42:	or     BYTE PTR [rax+0x1],dl
   100025d45:	sbb    DWORD PTR [rdx],ecx
   100025d47:	add    BYTE PTR [rcx],bl
   100025d49:	je     0x100025d54
   100025d4b:	add    BYTE PTR [rcx],bl
   100025d4d:	or     BYTE PTR fs:[rax],al
   100025d50:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   100025d54:	sbb    DWORD PTR [rsi+rax*1],esi
   100025d57:	add    BYTE PTR [rcx],bl
   100025d59:	xor    dl,BYTE PTR [rip+0x81c11c0]        # 0x1081e6f1f
   100025d5f:	add    BYTE PTR [rsp+riz*2],bl
   100025d62:	or     eax,0xc341c00
   100025d67:	add    BYTE PTR [rdx+rdx*2],bl
   100025d6a:	sbb    al,dl
   100025d6c:	(bad)  
   100025d6d:	rcl    BYTE PTR [rax+rsi*2],0xd8
   100025d71:	xchg   ebp,eax
   100025d72:	add    DWORD PTR [rax],eax
   100025d74:	add    DWORD PTR [rax],eax
   100025d76:	add    BYTE PTR [rax],al
   100025d78:	(bad)  
   100025d79:	clc    
   100025d7a:	add    DWORD PTR [rax],eax
   100025d7c:	clc    
   100025d7d:	clc    
   100025d7e:	add    DWORD PTR [rax],eax
   100025d80:	mov    edx,?
   100025d82:	add    DWORD PTR [rax],eax
   100025d84:	add    BYTE PTR [rax],al
   100025d86:	add    BYTE PTR [rax],al
   100025d88:	add    DWORD PTR [rcx+rax*1],eax
   100025d8b:	add    BYTE PTR [rdx+rdx*1],al
   100025d8e:	add    BYTE PTR [rax],al
   100025d90:	add    DWORD PTR [rip+0x32050002],eax        # 0x132075d98
   100025d96:	add    DWORD PTR [rax+0x19],edx
   100025d99:	or     al,BYTE PTR [rdx]
   100025d9b:	add    BYTE PTR [rdx],cl
   100025d9d:	xor    al,BYTE PTR [rsi]
   100025d9f:	push   rax
   100025da0:	adc    al,0xf9
   100025da2:	add    DWORD PTR [rax],eax
   100025da4:	pop    rax
   100025da5:	movsxd eax,DWORD PTR [rdx]
   100025da7:	add    BYTE PTR [rcx],bl
   100025da9:	or     al,BYTE PTR [rdx]
   100025dab:	add    BYTE PTR [rdx],cl
   100025dad:	xor    al,BYTE PTR [rsi]
   100025daf:	push   rax
   100025db0:	adc    al,0xf9
   100025db2:	add    DWORD PTR [rax],eax
   100025db4:	pop    rax
   100025db5:	movsxd eax,DWORD PTR [rdx]
   100025db7:	add    BYTE PTR [rcx],bl
   100025db9:	or     al,BYTE PTR [rdx]
   100025dbb:	add    BYTE PTR [rdx],cl
   100025dbd:	xor    al,BYTE PTR [rsi]
   100025dbf:	push   rax
   100025dc0:	adc    al,0xf9
   100025dc2:	add    DWORD PTR [rax],eax
   100025dc4:	pop    rax
   100025dc5:	movsxd eax,DWORD PTR [rdx]
   100025dc7:	add    BYTE PTR [rcx],bl
   100025dc9:	or     al,BYTE PTR [rdx]
   100025dcb:	add    BYTE PTR [rdx],cl
   100025dcd:	jb     0x100025dd5
   100025dcf:	push   rax
   100025dd0:	adc    al,0xf9
   100025dd2:	add    DWORD PTR [rax],eax
   100025dd4:	nop
   100025dd5:	data16 add al,BYTE PTR [rax]
   100025dd8:	sbb    DWORD PTR [rdx],ecx
   100025dda:	add    al,BYTE PTR [rax]
   100025ddc:	or     dh,BYTE PTR [rdx+0x6]
   100025ddf:	push   rax
   100025de0:	adc    al,0xf9
   100025de2:	add    DWORD PTR [rax],eax
   100025de4:	nop
   100025de5:	data16 add al,BYTE PTR [rax]
   100025de8:	sbb    DWORD PTR [rdx],ecx
   100025dea:	add    al,BYTE PTR [rax]
   100025dec:	or     dh,BYTE PTR [rdx]
   100025dee:	(bad)  
   100025def:	push   rax
   100025df0:	adc    al,0xf9
   100025df2:	add    DWORD PTR [rax],eax
   100025df4:	movabs al,ds:0xa00020a19000273
   100025dfd:	xor    al,BYTE PTR [rsi]
   100025dff:	push   rax
   100025e00:	adc    al,0xf9
   100025e02:	add    DWORD PTR [rax],eax
   100025e04:	movabs al,ds:0xa00020a19000273
   100025e0d:	xor    al,BYTE PTR [rsi]
   100025e0f:	push   rax
   100025e10:	adc    al,0xf9
   100025e12:	add    DWORD PTR [rax],eax
   100025e14:	jo     0x100025e8e
   100025e16:	add    al,BYTE PTR [rax]
   100025e18:	sbb    DWORD PTR [rdx],ecx
   100025e1a:	add    al,BYTE PTR [rax]
   100025e1c:	or     dh,BYTE PTR [rdx]
   100025e1e:	(bad)  
   100025e1f:	push   rax
   100025e20:	adc    al,0xf9
   100025e22:	add    DWORD PTR [rax],eax
   100025e24:	jo     0x100025e9e
   100025e26:	add    al,BYTE PTR [rax]
   100025e28:	sbb    DWORD PTR [rdx],ecx
   100025e2a:	add    al,BYTE PTR [rax]
   100025e2c:	or     dl,dl
   100025e2e:	(bad)  
   100025e2f:	push   rax
   100025e30:	adc    al,0xf9
   100025e32:	add    DWORD PTR [rax],eax
   100025e34:	nop
   100025e35:	je     0x100025e39
   100025e37:	add    BYTE PTR [rcx],bl
   100025e39:	or     al,BYTE PTR [rdx]
   100025e3b:	add    BYTE PTR [rdx],cl
   100025e3d:	rol    BYTE PTR [rsi],cl
   100025e3f:	push   rax
   100025e40:	adc    al,0xf9
   100025e42:	add    DWORD PTR [rax],eax
   100025e44:	nop
   100025e45:	je     0x100025e49
   100025e47:	add    BYTE PTR [rcx],bl
   100025e49:	or     al,BYTE PTR [rdx]
   100025e4b:	add    BYTE PTR [rdx],cl
   100025e4d:	xor    al,BYTE PTR [rsi]
   100025e4f:	push   rax
   100025e50:	adc    al,0xf9
   100025e52:	add    DWORD PTR [rax],eax
   100025e54:	cwde   
   100025e55:	jno    0x100025e59
   100025e57:	add    BYTE PTR [rcx],bl
   100025e59:	or     al,BYTE PTR [rdx]
   100025e5b:	add    BYTE PTR [rdx],cl
   100025e5d:	xor    al,BYTE PTR [rsi]
   100025e5f:	push   rax
   100025e60:	adc    al,0xf9
   100025e62:	add    DWORD PTR [rax],eax
   100025e64:	cwde   
   100025e65:	jno    0x100025e69
   100025e67:	add    BYTE PTR [rcx],bl
   100025e69:	or     al,BYTE PTR [rdx]
   100025e6b:	add    BYTE PTR [rdx],cl
   100025e6d:	xor    al,BYTE PTR [rsi]
   100025e6f:	push   rax
   100025e70:	adc    al,0xf9
   100025e72:	add    DWORD PTR [rax],eax
   100025e74:	cwde   
   100025e75:	jno    0x100025e79
   100025e77:	add    BYTE PTR [rcx],bl
   100025e79:	or     al,BYTE PTR [rdx]
   100025e7b:	add    BYTE PTR [rdx],cl
   100025e7d:	xor    al,BYTE PTR [rsi]
   100025e7f:	push   rax
   100025e80:	adc    al,0xf9
   100025e82:	add    DWORD PTR [rax],eax
   100025e84:	cwde   
   100025e85:	jno    0x100025e89
   100025e87:	add    BYTE PTR [rcx],bl
   100025e89:	or     al,BYTE PTR [rdx]
   100025e8b:	add    BYTE PTR [rdx],cl
   100025e8d:	push   rdx
   100025e8e:	(bad)  
   100025e8f:	push   rax
   100025e90:	adc    al,0xf9
   100025e92:	add    DWORD PTR [rax],eax
   100025e94:	mov    BYTE PTR [rax+0x2],ah
   100025e97:	add    BYTE PTR [rcx],bl
   100025e99:	or     al,BYTE PTR [rdx]
   100025e9b:	add    BYTE PTR [rdx],cl
   100025e9d:	push   rdx
   100025e9e:	(bad)  
   100025e9f:	push   rax
   100025ea0:	adc    al,0xf9
   100025ea2:	add    DWORD PTR [rax],eax
   100025ea4:	mov    BYTE PTR [rax+0x2],ah
   100025ea7:	add    BYTE PTR [rcx],al
   100025ea9:	add    al,BYTE PTR [rcx]
   100025eab:	add    BYTE PTR [rdx],al
   100025ead:	push   rax
   100025eae:	add    BYTE PTR [rax],al
   100025eb0:	add    DWORD PTR [rsi],eax
   100025eb2:	add    al,BYTE PTR [rax]
   100025eb4:	(bad)  
   100025eb5:	push   rdx
   100025eb6:	add    dl,BYTE PTR [rax+0x11]
   100025eb9:	or     eax,0x62040001
   100025ebe:	add    BYTE PTR [rax],al
   100025ec0:	adc    al,0xf9
   100025ec2:	add    DWORD PTR [rax],eax
   100025ec4:	and    BYTE PTR [rdx+0x2],bh
   100025ec7:	add    BYTE PTR [rcx],dl
   100025ec9:	or     eax,0x62040001
   100025ece:	add    BYTE PTR [rax],al
   100025ed0:	adc    al,0xf9
   100025ed2:	add    DWORD PTR [rax],eax
   100025ed4:	push   0x1100027a
   100025ed9:	or     eax,0x62040001
   100025ede:	add    BYTE PTR [rax],al
   100025ee0:	adc    al,0xf9
   100025ee2:	add    DWORD PTR [rax],eax
   100025ee4:	movabs al,ds:0x400010d1100027a
   100025eed:	(bad)  
   100025eee:	add    BYTE PTR [rax],al
   100025ef0:	adc    al,0xf9
   100025ef2:	add    DWORD PTR [rax],eax
   100025ef4:	fdivr  DWORD PTR [rdx+0x2]
   100025ef7:	add    BYTE PTR [rcx],dl
   100025ef9:	or     eax,0x62040001
   100025efe:	add    BYTE PTR [rax],al
   100025f00:	adc    al,0xf9
   100025f02:	add    DWORD PTR [rax],eax
   100025f04:	adc    BYTE PTR [rbx+0x2],bh
   100025f07:	add    BYTE PTR [rcx],dl
   100025f09:	or     eax,0x62040001
   100025f0e:	add    BYTE PTR [rax],al
   100025f10:	adc    al,0xf9
   100025f12:	add    DWORD PTR [rax],eax
   100025f14:	rex.W jnp 0x100025f19
   100025f17:	add    BYTE PTR [rcx],dl
   100025f19:	or     eax,0x62040001
   100025f1e:	add    BYTE PTR [rax],al
   100025f20:	adc    al,0xf9
   100025f22:	add    DWORD PTR [rax],eax
   100025f24:	cmp    BYTE PTR [rbx+0x2],0x0
   100025f28:	adc    DWORD PTR [rip+0x62040001],ecx        # 0x162065f2f
   100025f2e:	add    BYTE PTR [rax],al
   100025f30:	adc    al,0xf9
   100025f32:	add    DWORD PTR [rax],eax
   100025f34:	mov    eax,0x1100027b
   100025f39:	or     eax,0x62040001
   100025f3e:	add    BYTE PTR [rax],al
   100025f40:	adc    al,0xf9
   100025f42:	add    DWORD PTR [rax],eax
   100025f44:	lock jnp 0x100025f49
   100025f47:	add    BYTE PTR [rcx],dl
   100025f49:	or     eax,0x62040001
   100025f4e:	add    BYTE PTR [rax],al
   100025f50:	adc    al,0xf9
   100025f52:	add    DWORD PTR [rax],eax
   100025f54:	sub    BYTE PTR [rdx+rax*1+0x0],bh
   100025f58:	adc    DWORD PTR [rip+0x62040001],ecx        # 0x162065f5f
   100025f5e:	add    BYTE PTR [rax],al
   100025f60:	adc    al,0xf9
   100025f62:	add    DWORD PTR [rax],eax
   100025f64:	(bad)  
   100025f65:	jl     0x100025f69
   100025f67:	add    BYTE PTR [rcx],dl
   100025f69:	or     eax,0x62040001
   100025f6e:	add    BYTE PTR [rax],al
   100025f70:	adc    al,0xf9
   100025f72:	add    DWORD PTR [rax],eax
   100025f74:	cwde   
   100025f75:	jl     0x100025f79
   100025f77:	add    BYTE PTR [rcx],dl
   100025f79:	or     eax,0x62040001
   100025f7e:	add    BYTE PTR [rax],al
   100025f80:	adc    al,0xf9
   100025f82:	add    DWORD PTR [rax],eax
   100025f84:	sar    BYTE PTR [rdx+rax*1+0x0],1
   100025f88:	adc    DWORD PTR [rip+0x62040001],ecx        # 0x162065f8f
   100025f8e:	add    BYTE PTR [rax],al
   100025f90:	adc    al,0xf9
   100025f92:	add    DWORD PTR [rax],eax
   100025f94:	or     BYTE PTR [rbp+0x2],bh
   100025f97:	add    BYTE PTR [rcx],dl
   100025f99:	or     eax,0x62040001
   100025f9e:	add    BYTE PTR [rax],al
   100025fa0:	adc    al,0xf9
   100025fa2:	add    DWORD PTR [rax],eax
   100025fa4:	cmp    BYTE PTR [rbp+0x2],0x0
   100025fa8:	adc    DWORD PTR [rip+0x62040001],ecx        # 0x162065faf
   100025fae:	add    BYTE PTR [rax],al
   100025fb0:	adc    al,0xf9
   100025fb2:	add    DWORD PTR [rax],eax
   100025fb4:	clc    
   100025fb5:	jge    0x100025fb9
   100025fb7:	add    BYTE PTR [rcx],dl
   100025fb9:	or     al,0x1
   100025fbb:	add    BYTE PTR [rdx+riz*1],al
   100025fbe:	add    BYTE PTR [rax],al
   100025fc0:	adc    al,0xf9
   100025fc2:	add    DWORD PTR [rax],eax
   100025fc4:	xor    BYTE PTR [rsi+0x2],bh
   100025fc7:	add    BYTE PTR [rcx],dl
   100025fc9:	or     al,0x1
   100025fcb:	add    BYTE PTR [rdx+riz*1],al
   100025fce:	add    BYTE PTR [rax],al
   100025fd0:	adc    al,0xf9
   100025fd2:	add    DWORD PTR [rax],eax
   100025fd4:	push   0x1100027e
   100025fd9:	or     al,0x1
   100025fdb:	add    BYTE PTR [rdx+riz*1],al
   100025fde:	add    BYTE PTR [rax],al
   100025fe0:	adc    al,0xf9
   100025fe2:	add    DWORD PTR [rax],eax
   100025fe4:	movabs al,ds:0x400010c1100027e
   100025fed:	and    al,BYTE PTR [rax]
   100025fef:	add    BYTE PTR [rcx+rdi*8],dl
   100025ff2:	add    DWORD PTR [rax],eax
   100025ff4:	fdivr  DWORD PTR [rsi+0x2]
   100025ff7:	add    BYTE PTR [rcx],dl
   100025ff9:	or     al,0x1
   100025ffb:	add    BYTE PTR [rdx+riz*1],al
   100025ffe:	add    BYTE PTR [rax],al
   100026000:	adc    al,0xf9
   100026002:	add    DWORD PTR [rax],eax
   100026004:	adc    BYTE PTR [rdi+0x2],bh
   100026007:	add    BYTE PTR [rcx],dl
   100026009:	or     al,0x1
   10002600b:	add    BYTE PTR [rdx+riz*1],al
   10002600e:	add    BYTE PTR [rax],al
   100026010:	adc    al,0xf9
   100026012:	add    DWORD PTR [rax],eax
   100026014:	rex.W jg 0x100026019
   100026017:	add    BYTE PTR [rcx],dl
   100026019:	or     al,0x1
   10002601b:	add    BYTE PTR [rdx+riz*1],al
   10002601e:	add    BYTE PTR [rax],al
   100026020:	adc    al,0xf9
   100026022:	add    DWORD PTR [rax],eax
   100026024:	cmp    BYTE PTR [rdi+0x2],0x0
   100026028:	adc    DWORD PTR [rcx+rax*1],ecx
   10002602b:	add    BYTE PTR [rdx+riz*1],al
   10002602e:	add    BYTE PTR [rax],al
   100026030:	adc    al,0xf9
   100026032:	add    DWORD PTR [rax],eax
   100026034:	mov    eax,0x1100027f
   100026039:	or     al,0x1
   10002603b:	add    BYTE PTR [rdx+riz*1],al
   10002603e:	add    BYTE PTR [rax],al
   100026040:	adc    al,0xf9
   100026042:	add    DWORD PTR [rax],eax
   100026044:	lock jg 0x100026049
   100026047:	add    BYTE PTR [rcx],dl
   100026049:	or     al,0x1
   10002604b:	add    BYTE PTR [rdx+riz*1],al
   10002604e:	add    BYTE PTR [rax],al
   100026050:	adc    al,0xf9
   100026052:	add    DWORD PTR [rax],eax
   100026054:	sub    BYTE PTR [rax+0xc110002],al
   10002605a:	add    DWORD PTR [rax],eax
   10002605c:	add    al,0x22
   10002605e:	add    BYTE PTR [rax],al
   100026060:	adc    al,0xf9
   100026062:	add    DWORD PTR [rax],eax
   100026064:	(bad)  
   100026065:	add    BYTE PTR [rdx],0x0
   100026068:	adc    DWORD PTR [rcx+rax*1],ecx
   10002606b:	add    BYTE PTR [rdx+riz*1],al
   10002606e:	add    BYTE PTR [rax],al
   100026070:	adc    al,0xf9
   100026072:	add    DWORD PTR [rax],eax
   100026074:	cwde   
   100026075:	add    BYTE PTR [rdx],0x0
   100026078:	adc    DWORD PTR [rip+0x62040001],ecx        # 0x16206607f
   10002607e:	add    BYTE PTR [rax],al
   100026080:	adc    al,0xf9
   100026082:	add    DWORD PTR [rax],eax
   100026084:	rol    BYTE PTR [rax+0x5220002],1
   10002608a:	xchg   ebx,eax
   10002608b:	sbb    DWORD PTR [rip+0xffffffffb0000000],eax        # 0xb0026091
   100026091:	(bad)  
   100026092:	add    al,BYTE PTR [rax]
   100026094:	add    al,BYTE PTR [rax]
   100026096:	add    BYTE PTR [rax],al
   100026098:	rex.W (bad) 
   10002609a:	add    al,BYTE PTR [rax]
   10002609c:	(bad)  
   10002609d:	add    BYTE PTR [rax],al
   10002609f:	add    al,bl
   1000260a1:	(bad)  
   1000260a2:	add    al,BYTE PTR [rax]
   1000260a4:	xor    BYTE PTR [rax],al
	...
   1000260ae:	add    BYTE PTR [rax],al
   1000260b0:	(bad)  
   1000260b1:	(bad)  
   1000260b2:	(bad)  
   1000260b3:	inc    DWORD PTR [rax]
   1000260b5:	add    BYTE PTR [rax],al
   1000260b7:	add    BYTE PTR [rax],al
   1000260b9:	add    BYTE PTR [rax],al
   1000260bb:	add    BYTE PTR [rax],dh
   1000260bd:	or     al,BYTE PTR [rdx]
   1000260bf:	add    bh,bh
   1000260c1:	(bad)  
   1000260c2:	(bad)  
   1000260c3:	inc    DWORD PTR [rax]
   1000260c5:	add    BYTE PTR [rax],al
   1000260c7:	add    BYTE PTR [rdx],al
   1000260c9:	add    BYTE PTR [rax],al
   1000260cb:	add    BYTE PTR [rax],al
   1000260cd:	add    BYTE PTR [rax],al
   1000260cf:	add    BYTE PTR [rdx],al
   1000260d1:	add    BYTE PTR [rax],al
   1000260d3:	add    BYTE PTR [rax],al
   1000260d5:	add    BYTE PTR [rax],al
   1000260d7:	add    BYTE PTR [rdx],cl
   1000260d9:	and    DWORD PTR [rax],eax
   1000260db:	add    bh,bh
   1000260dd:	(bad)  
   1000260de:	(bad)  
   1000260df:	call   QWORD PTR [rsi]
   1000260e1:	and    DWORD PTR [rax],eax
   1000260e3:	add    BYTE PTR [rcx],al
   1000260e5:	add    BYTE PTR [rax],al
   1000260e7:	add    BYTE PTR [rax-0xffffdf],al
   1000260ed:	(bad)  
   1000260ee:	(bad)  
   1000260ef:	call   rax
   1000260f1:	and    DWORD PTR [rax],eax
   1000260f3:	add    BYTE PTR [rax],al
   1000260f5:	add    BYTE PTR [rax],al
   1000260f7:	add    ah,ch
   1000260f9:	and    DWORD PTR [rax],eax
   1000260fb:	add    BYTE PTR [rcx],al
   1000260fd:	add    BYTE PTR [rax],al
   1000260ff:	add    BYTE PTR [rax],ah
   100026101:	and    al,BYTE PTR [rax]
   100026103:	add    bh,bh
   100026105:	(bad)  
   100026106:	(bad)  
   100026107:	jmp    QWORD PTR [rcx+0x22]
   10002610a:	add    BYTE PTR [rax],al
   10002610c:	add    BYTE PTR [rax],al
   10002610e:	add    BYTE PTR [rax],al
   100026110:	jbe    0x100026134
   100026112:	add    BYTE PTR [rax],al
   100026114:	add    DWORD PTR [rax],eax
   100026116:	add    BYTE PTR [rax],al
   100026118:	nop
   100026119:	and    al,BYTE PTR [rax]
   10002611b:	add    BYTE PTR [rax],al
   10002611d:	add    BYTE PTR [rax],al
   10002611f:	add    BYTE PTR [rax-0xffffde],ah
   100026125:	(bad)  
   100026126:	(bad)  
   100026127:	push   rdi
   100026129:	and    al,BYTE PTR [rax]
   10002612b:	add    BYTE PTR [rcx],al
   10002612d:	add    BYTE PTR [rax],al
   10002612f:	add    BYTE PTR [rax+0xa],al
   100026132:	add    al,BYTE PTR [rax]
   100026134:	add    BYTE PTR [rax],al
   100026136:	add    BYTE PTR [rax],al
   100026138:	rex.WRB or r8b,BYTE PTR [r10]
   10002613b:	add    BYTE PTR [rbx],al
   10002613d:	add    BYTE PTR [rax],al
   10002613f:	add    BYTE PTR [rsi+0xa],ah
   100026142:	add    al,BYTE PTR [rax]
	...
   10002614c:	add    DWORD PTR [rax],eax
   10002614e:	add    BYTE PTR [rax],al
   100026150:	add    al,0x0
   100026152:	add    BYTE PTR [rax],al
   100026154:	add    DWORD PTR [rax],eax
   100026156:	add    BYTE PTR [rax],al
   100026158:	jo     0x1000261bb
   10002615a:	add    al,BYTE PTR [rax]
   10002615c:	add    eax,DWORD PTR [rax]
   10002615e:	add    BYTE PTR [rax],al
   100026160:	add    eax,DWORD PTR [rax]
   100026162:	add    BYTE PTR [rax],al
   100026164:	add    al,0x0
   100026166:	add    BYTE PTR [rax],al
   100026168:	add    DWORD PTR [rax],eax
   10002616a:	add    BYTE PTR [rax],al
   10002616c:	test   BYTE PTR [rcx+0x2],ah
   10002616f:	add    BYTE PTR [rax],al
   100026171:	add    BYTE PTR [rax],al
   100026173:	add    BYTE PTR [rax+0x68000292],cl
   100026179:	add    BYTE PTR [rax],al
   10002617b:	add    BYTE PTR [rax+0xa],al
   10002617e:	add    al,BYTE PTR [rax]
   100026180:	rex.W add BYTE PTR [rax],al
   100026183:	add    BYTE PTR [rax],al
   100026185:	add    BYTE PTR [rax],al
   100026187:	add    BYTE PTR [rax-0x6e],bl
   10002618a:	add    al,BYTE PTR [rax]
   10002618c:	movabs al,ds:0x4800020a80000000
   100026195:	add    BYTE PTR [rax],al
   100026197:	add    BYTE PTR [rdx],ah
   100026199:	add    eax,0x11993
   10002619e:	add    BYTE PTR [rax],al
   1000261a0:	shl    BYTE PTR [rcx+0x2],0x0
	...
   1000261ac:	add    eax,DWORD PTR [rax]
   1000261ae:	add    BYTE PTR [rax],al
   1000261b0:	enter  0x261,0x0
   1000261b4:	add    BYTE PTR [rax],al
	...
   1000261bf:	add    bh,bh
   1000261c1:	(bad)  
   1000261c2:	(bad)  
   1000261c3:	jmp    QWORD PTR [rax-0x3]
   1000261c6:	add    DWORD PTR [rax],eax
   1000261c8:	mov    al,0x3a
   1000261ca:	add    BYTE PTR [rax],al
   1000261cc:	(bad)  
   1000261cd:	(bad)  
   1000261ce:	(bad)  
   1000261cf:	call   QWORD PTR [rcx+0x3b]
   1000261d2:	add    BYTE PTR [rax],al
   1000261d4:	add    BYTE PTR [rax],al
   1000261d6:	add    BYTE PTR [rax],al
   1000261d8:	sub    DWORD PTR [rax+rax*1],edi
   1000261db:	add    bh,bh
   1000261dd:	(bad)  
   1000261de:	(bad)  
   1000261df:	jmp    QWORD PTR [rdx]
   1000261e1:	add    eax,0x11993
   1000261e6:	add    BYTE PTR [rax],al
   1000261e8:	or     BYTE PTR [rdx+0x2],ah
	...
   1000261f3:	add    BYTE PTR [rip+0x10000000],al        # 0x1100261f9
   1000261f9:	(bad)  
   1000261fb:	add    BYTE PTR [rax+0x0],al
   100026201:	add    BYTE PTR [rax],al
   100026203:	add    BYTE PTR [rax],al
   100026205:	add    BYTE PTR [rax],al
   100026207:	add    bh,bh
   100026209:	(bad)  
   10002620a:	(bad)  
   10002620b:	jmp    QWORD PTR [rax-0xffffe03]
   100026211:	cmp    al,0x0
   100026213:	add    bh,bh
   100026215:	(bad)  
   100026216:	(bad)  
   100026217:	(bad)  
   100026218:	mov    edx,0x3e
   10002621d:	add    BYTE PTR [rax],al
   10002621f:	add    BYTE PTR [rax],dl
   100026221:	add    BYTE PTR [rax],al
   100026224:	(bad)  
   100026225:	(bad)  
   100026226:	(bad)  
   100026227:	call   FWORD PTR [rax+rax*2]
   10002622a:	add    BYTE PTR [rax],al
   10002622c:	add    BYTE PTR [rax],al
   10002622e:	add    BYTE PTR [rax],al
   100026230:	cmp    BYTE PTR [rax+0x0],al
   100026233:	add    bh,bh
   100026235:	(bad)  
   100026236:	(bad)  
   100026237:	jmp    QWORD PTR [rdx]
   100026239:	add    eax,0x11993
   10002623e:	add    BYTE PTR [rax],al
   100026240:	(bad)  
   100026241:	(bad)  
	...
   10002624b:	add    BYTE PTR [rbx],al
   10002624d:	add    BYTE PTR [rax],al
   10002624f:	add    BYTE PTR [rax+0x62],ch
   100026252:	add    al,BYTE PTR [rax]
   100026254:	add    BYTE PTR [rax],al
	...
   10002625f:	add    bh,bh
   100026261:	(bad)  
   100026262:	(bad)  
   100026263:	jmp    QWORD PTR [rax]
   100026265:	std    
   100026266:	add    DWORD PTR [rax],eax
   100026268:	(bad)  
   100026269:	rex.W add BYTE PTR [rax],al
   10002626c:	(bad)  
   10002626d:	(bad)  
   10002626e:	(bad)  
   10002626f:	push   rcx
   100026271:	rex.W add BYTE PTR [rax],al
   100026274:	add    BYTE PTR [rax],al
   100026276:	add    BYTE PTR [rax],al
   100026278:	cli    
   100026279:	rex.W add BYTE PTR [rax],al
   10002627c:	(bad)  
   10002627d:	(bad)  
   10002627e:	(bad)  
   10002627f:	jmp    QWORD PTR [rdx]
   100026281:	add    eax,0x11993
   100026286:	add    BYTE PTR [rax],al
   100026288:	test   al,0x62
   10002628a:	add    al,BYTE PTR [rax]
	...
   100026294:	add    eax,DWORD PTR [rax]
   100026296:	add    BYTE PTR [rax],al
   100026298:	mov    al,0x62
   10002629a:	add    al,BYTE PTR [rax]
   10002629c:	rex.W add BYTE PTR [rax],al
	...
   1000262a7:	add    bh,bh
   1000262a9:	(bad)  
   1000262aa:	(bad)  
   1000262ab:	push   rax
   1000262ad:	cld    
   1000262ae:	add    DWORD PTR [rax],eax
   1000262b0:	xor    BYTE PTR [rcx+0x0],cl
   1000262b3:	add    bh,bh
   1000262b5:	(bad)  
   1000262b6:	(bad)  
   1000262b7:	(bad)  
   1000262b8:	cld    
   1000262b9:	rex.WB add BYTE PTR [r8],al
   1000262bc:	add    BYTE PTR [rax],al
   1000262be:	add    BYTE PTR [rax],al
   1000262c0:	rex.RX
   1000262c1:	rex.WRX add BYTE PTR [rax],r8b
   1000262c4:	(bad)  
   1000262c5:	(bad)  
   1000262c6:	(bad)  
   1000262c7:	jmp    QWORD PTR [rdx]
   1000262c9:	add    eax,0x11993
   1000262ce:	add    BYTE PTR [rax],al
   1000262d0:	lock (bad) 
	...
   1000262db:	add    BYTE PTR [rbx],al
   1000262dd:	add    BYTE PTR [rax],al
   1000262df:	add    al,bh
   1000262e1:	(bad)  
   1000262e3:	add    BYTE PTR [rax+0x0],al
	...
   1000262ee:	add    BYTE PTR [rax],al
   1000262f0:	(bad)  
   1000262f1:	(bad)  
   1000262f2:	(bad)  
   1000262f3:	inc    DWORD PTR [rax-0x3]
   1000262f6:	add    DWORD PTR [rax],eax
   1000262f8:	ror    BYTE PTR [rsi+0x0],0x0
   1000262fc:	(bad)  
   1000262fd:	(bad)  
   1000262fe:	(bad)  
   1000262ff:	jmp    QWORD PTR [rax+0x4f]
   100026302:	add    BYTE PTR [rax],al
   100026304:	add    BYTE PTR [rax],al
   100026306:	add    BYTE PTR [rax],al
   100026308:	sub    BYTE PTR [rax+0x0],dl
   10002630b:	add    bh,bh
   10002630d:	(bad)  
   10002630e:	(bad)  
   10002630f:	jmp    QWORD PTR [rdx]
   100026311:	add    eax,0x11993
   100026316:	add    BYTE PTR [rax],al
   100026318:	cmp    BYTE PTR [rbx+0x2],ah
	...
   100026323:	add    BYTE PTR [rbx],al
   100026325:	add    BYTE PTR [rax],al
   100026327:	add    BYTE PTR [rax+0x63],al
   10002632a:	add    al,BYTE PTR [rax]
   10002632c:	and    BYTE PTR [rax],al
	...
   100026336:	add    BYTE PTR [rax],al
   100026338:	(bad)  
   100026339:	(bad)  
   10002633a:	(bad)  
   10002633b:	jmp    rax
   10002633d:	cld    
   10002633e:	add    DWORD PTR [rax],eax
   100026340:	jo     0x100026393
   100026342:	add    BYTE PTR [rax],al
   100026344:	(bad)  
   100026345:	(bad)  
   100026346:	(bad)  
   100026347:	push   QWORD PTR [rdi+0x52]
   10002634a:	add    BYTE PTR [rax],al
   10002634c:	add    BYTE PTR [rax],al
   10002634e:	add    BYTE PTR [rax],al
   100026350:	sahf   
   100026351:	push   rdx
   100026352:	add    BYTE PTR [rax],al
   100026354:	(bad)  
   100026355:	(bad)  
   100026356:	(bad)  
   100026357:	jmp    QWORD PTR [rdx]
   100026359:	add    eax,0x81993
   10002635e:	add    BYTE PTR [rax],al
   100026360:	and    BYTE PTR [rbx+0x2],0x0
   100026364:	add    eax,DWORD PTR [rax]
   100026366:	add    BYTE PTR [rax],al
   100026368:	sub    BYTE PTR [rdx+rax*1+0x0],ah
   10002636c:	or     eax,0xc0000000
   100026371:	movsxd eax,DWORD PTR [rdx]
   100026373:	add    BYTE PTR [rax+0x0],al
	...
   10002637e:	add    BYTE PTR [rax],al
   100026380:	(bad)  
   100026381:	(bad)  
   100026382:	(bad)  
   100026383:	inc    DWORD PTR [rax]
	...
   10002638d:	add    BYTE PTR [rax],al
   10002638f:	add    BYTE PTR [rcx],al
   100026391:	add    BYTE PTR [rax],al
   100026393:	add    al,al
   100026395:	cli    
   100026396:	add    DWORD PTR [rax],eax
	...
   1000263a0:	add    eax,DWORD PTR [rax]
   1000263a2:	add    BYTE PTR [rax],al
   1000263a4:	add    BYTE PTR [rax],al
   1000263a6:	add    BYTE PTR [rax],al
   1000263a8:	add    al,0x0
   1000263aa:	add    BYTE PTR [rax],al
   1000263ac:	nop
   1000263ad:	sti    
   1000263ae:	add    DWORD PTR [rax],eax
   1000263b0:	add    eax,DWORD PTR [rax]
   1000263b2:	add    BYTE PTR [rax],al
   1000263b4:	add    BYTE PTR [rax],al
   1000263b6:	add    BYTE PTR [rax],al
   1000263b8:	(bad)  
   1000263b9:	(bad)  
   1000263ba:	(bad)  
   1000263bb:	inc    DWORD PTR [rax]
   1000263bd:	add    BYTE PTR [rax],al
   1000263bf:	add    BYTE PTR [rax+0x53],al
   1000263c2:	add    BYTE PTR [rax],al
   1000263c4:	(bad)  
   1000263c5:	(bad)  
   1000263c6:	(bad)  
   1000263c7:	call   QWORD PTR [rbx+rdx*2+0x0]
   1000263cb:	add    BYTE PTR [rcx],al
   1000263cd:	add    BYTE PTR [rax],al
   1000263cf:	add    BYTE PTR [rsi+0x53],ah
   1000263d2:	add    BYTE PTR [rax],al
   1000263d4:	add    al,BYTE PTR [rax]
   1000263d6:	add    BYTE PTR [rax],al
   1000263d8:	rex.WRB push r12
   1000263da:	add    BYTE PTR [rax],al
   1000263dc:	add    DWORD PTR [rax],eax
   1000263de:	add    BYTE PTR [rax],al
   1000263e0:	pop    rax
   1000263e1:	push   rsp
   1000263e2:	add    BYTE PTR [rax],al
   1000263e4:	add    BYTE PTR [rax],al
   1000263e6:	add    BYTE PTR [rax],al
   1000263e8:	(bad)  
   1000263e9:	push   rsp
   1000263ea:	add    BYTE PTR [rax],al
   1000263ec:	(bad)  
   1000263ed:	(bad)  
   1000263ee:	(bad)  
   1000263ef:	call   rax
   1000263f1:	cli    
   1000263f2:	add    DWORD PTR [rax],eax
   1000263f4:	add    BYTE PTR [rax],al
   1000263f6:	add    BYTE PTR [rax],al
   1000263f8:	(bad)  
   1000263fa:	add    DWORD PTR [rax],eax
   1000263fc:	add    al,0x0
   1000263fe:	add    BYTE PTR [rax],al
   100026400:	out    dx,eax
   100026401:	cli    
   100026402:	add    DWORD PTR [rax],eax
   100026404:	add    eax,0x19000000
   100026409:	sti    
   10002640a:	add    DWORD PTR [rax],eax
   10002640c:	add    al,0x0
   10002640e:	add    BYTE PTR [rax],al
   100026410:	and    al,0xfb
   100026412:	add    DWORD PTR [rax],eax
   100026414:	add    BYTE PTR [rax],al
   100026416:	add    BYTE PTR [rax],al
   100026418:	int    0xfb
   10002641a:	add    DWORD PTR [rax],eax
   10002641c:	(bad)  
   10002641d:	add    BYTE PTR [rax],al
   10002641f:	add    ah,dh
   100026421:	sti    
   100026422:	add    DWORD PTR [rax],eax
   100026424:	add    BYTE PTR [rax],al
   100026426:	add    BYTE PTR [rax],al
   100026428:	add    DWORD PTR [rax],eax
   10002642a:	add    BYTE PTR [rax],al
   10002642c:	add    al,BYTE PTR [rax]
   10002642e:	add    BYTE PTR [rax],al
   100026430:	(bad)  
   100026431:	add    BYTE PTR [rax],al
   100026433:	add    BYTE PTR [rcx],al
   100026435:	add    BYTE PTR [rax],al
   100026437:	add    BYTE PTR [rsp+riz*2+0x2],ah
   10002643b:	add    BYTE PTR [rax+rax*1],al
   10002643e:	add    BYTE PTR [rax],al
   100026440:	add    eax,0x6000000
   100026445:	add    BYTE PTR [rax],al
   100026447:	add    BYTE PTR [rcx],al
   100026449:	add    BYTE PTR [rax],al
   10002644b:	add    BYTE PTR [rax+0x64],bh
   10002644e:	add    al,BYTE PTR [rax]
   100026450:	add    BYTE PTR [rax],al
   100026452:	add    BYTE PTR [rax],al
   100026454:	(bad)  
   100026455:	add    BYTE PTR [rax],al
   100026457:	add    BYTE PTR [rdi],al
   100026459:	add    BYTE PTR [rax],al
   10002645b:	add    BYTE PTR [rcx],al
   10002645d:	add    BYTE PTR [rax],al
   10002645f:	add    BYTE PTR [rsp+riz*2+0x2],cl
   100026466:	add    BYTE PTR [rax],al
   100026468:	mov    BYTE PTR [rdx+0x800002],dl
   10002646e:	add    BYTE PTR [rax],al
   100026470:	sar    dl,1
   100026472:	add    DWORD PTR [rax],eax
   100026474:	cmp    BYTE PTR [rax],al
   100026476:	add    BYTE PTR [rax],al
   100026478:	add    BYTE PTR [rax],al
   10002647a:	add    BYTE PTR [rax],al
   10002647c:	pop    rax
   10002647d:	xchg   edx,eax
   10002647e:	add    al,BYTE PTR [rax]
   100026480:	cwde   
   100026481:	add    BYTE PTR [rax],al
   100026483:	add    BYTE PTR [rax+0x380001fb],ah
	...
   100026495:	add    BYTE PTR [rax],al
   100026497:	add    al,al
   100026499:	sti    
   10002649a:	add    DWORD PTR [rax],eax
   10002649c:	cmp    BYTE PTR [rax],al
   10002649e:	add    BYTE PTR [rax],al
   1000264a0:	and    al,BYTE PTR [rip+0x61993]        # 0x100087e39
   1000264a6:	add    BYTE PTR [rax],al
   1000264a8:	enter  0x264,0x0
	...
   1000264b4:	add    eax,DWORD PTR [rax]
   1000264b6:	add    BYTE PTR [rax],al
   1000264b8:	clc    
   1000264b9:	add    al,BYTE PTR fs:[rax]
   1000264bc:	and    BYTE PTR [rax],al
	...
   1000264c6:	add    BYTE PTR [rax],al
   1000264c8:	(bad)  
   1000264c9:	(bad)  
   1000264ca:	(bad)  
   1000264cb:	inc    DWORD PTR [rax]
   1000264cd:	add    BYTE PTR [rax],al
   1000264cf:	add    bh,bh
   1000264d1:	(bad)  
   1000264d2:	(bad)  
   1000264d3:	call   QWORD PTR [rax-0xfffe04]
   1000264d9:	(bad)  
   1000264da:	(bad)  
   1000264db:	jmp    QWORD PTR [rax-0xfffe04]
   1000264e1:	(bad)  
   1000264e2:	(bad)  
   1000264e3:	push   QWORD PTR [rax-0xfffe04]
   1000264e9:	(bad)  
   1000264ea:	(bad)  
   1000264eb:	inc    eax
   1000264ed:	cld    
   1000264ee:	add    DWORD PTR [rax],eax
   1000264f0:	(bad)  
   1000264f1:	(bad)  
   1000264f2:	(bad)  
   1000264f3:	call   rax
   1000264f5:	cld    
   1000264f6:	add    DWORD PTR [rax],eax
   1000264f8:	adc    BYTE PTR [rbp+0x0],dl
   1000264fb:	add    bh,bh
   1000264fd:	(bad)  
   1000264fe:	(bad)  
   1000264ff:	jmp    FWORD PTR [rdi+0x55]
   100026502:	add    BYTE PTR [rax],al
   100026504:	add    eax,DWORD PTR [rax]
   100026506:	add    BYTE PTR [rax],al
   100026508:	call   0xff026562
   10002650d:	(bad)  
   10002650e:	(bad)  
   10002650f:	jmp    QWORD PTR [rdx]
   100026511:	add    eax,0x11993
   100026516:	add    BYTE PTR [rax],al
   100026518:	cmp    BYTE PTR [rbp+0x2],ah
	...
   100026523:	add    BYTE PTR [rcx],al
   100026525:	add    BYTE PTR [rax],al
   100026527:	add    BYTE PTR [rax+0x65],al
   10002652a:	add    al,BYTE PTR [rax]
   10002652c:	and    BYTE PTR [rax],al
	...
   100026536:	add    BYTE PTR [rax],al
   100026538:	(bad)  
   100026539:	(bad)  
   10002653a:	(bad)  
   10002653b:	push   QWORD PTR [rax-0x4]
   10002653e:	add    DWORD PTR [rax],eax
   100026540:	shl    BYTE PTR [rax+0x0],1
   100026543:	add    bh,bh
   100026545:	(bad)  
   100026546:	(bad)  
   100026547:	jmp    QWORD PTR [rdx]
   100026549:	add    eax,0x11993
   10002654e:	add    BYTE PTR [rax],al
   100026550:	jo     0x1000265b7
   100026552:	add    al,BYTE PTR [rax]
	...
   10002655c:	add    DWORD PTR [rax],eax
   10002655e:	add    BYTE PTR [rax],al
   100026560:	js     0x1000265c7
   100026562:	add    al,BYTE PTR [rax]
   100026564:	and    BYTE PTR [rax],al
	...
   10002656e:	add    BYTE PTR [rax],al
   100026570:	(bad)  
   100026571:	(bad)  
   100026572:	(bad)  
   100026573:	inc    DWORD PTR [rax+0x500001fc]
   100026579:	add    BYTE PTR gs:[rax],al
   10002657c:	(bad)  
   10002657d:	(bad)  
   10002657e:	(bad)  
   10002657f:	jmp    QWORD PTR [rdx]
   100026581:	add    eax,0x11993
   100026586:	add    BYTE PTR [rax],al
   100026588:	test   al,0x65
   10002658a:	add    al,BYTE PTR [rax]
	...
   100026594:	add    eax,DWORD PTR [rax]
   100026596:	add    BYTE PTR [rax],al
   100026598:	mov    al,0x65
   10002659a:	add    al,BYTE PTR [rax]
   10002659c:	and    BYTE PTR [rax],al
	...
   1000265a6:	add    BYTE PTR [rax],al
   1000265a8:	(bad)  
   1000265a9:	(bad)  
   1000265aa:	(bad)  
   1000265ab:	call   QWORD PTR [rax]
   1000265ad:	std    
   1000265ae:	add    DWORD PTR [rax],eax
   1000265b0:	xor    BYTE PTR [rsi+0x0],ah
   1000265b3:	add    bh,bh
   1000265b5:	(bad)  
   1000265b6:	(bad)  
   1000265b7:	jmp    QWORD PTR [rcx+0x67]
   1000265bd:	add    BYTE PTR [rax],al
   1000265bf:	add    dl,al
   1000265c1:	add    BYTE PTR [eax],al
   1000265c4:	(bad)  
   1000265c5:	(bad)  
   1000265c6:	(bad)  
   1000265c7:	jmp    QWORD PTR [rdx]
   1000265c9:	add    eax,0x11993
   1000265ce:	add    BYTE PTR [rax],al
   1000265d0:	lock add al,BYTE PTR gs:[rax]
	...
   1000265dc:	add    DWORD PTR [rax],eax
   1000265de:	add    BYTE PTR [rax],al
   1000265e0:	clc    
   1000265e1:	add    al,BYTE PTR gs:[rax]
   1000265e4:	and    BYTE PTR [rax],al
	...
   1000265ee:	add    BYTE PTR [rax],al
   1000265f0:	(bad)  
   1000265f1:	(bad)  
   1000265f2:	(bad)  
   1000265f3:	push   QWORD PTR [rax-0x2]
   1000265f6:	add    DWORD PTR [rax],eax
   1000265f8:	add    BYTE PTR [rax+rax*1+0x0],ch
   1000265fc:	(bad)  
   1000265fd:	(bad)  
   1000265fe:	(bad)  
   1000265ff:	jmp    QWORD PTR [rdx]
   100026601:	add    eax,0x11993
   100026606:	add    BYTE PTR [rax],al
   100026608:	sub    BYTE PTR [rsi+0x2],ah
	...
   100026613:	add    BYTE PTR [rbx],al
   100026615:	add    BYTE PTR [rax],al
   100026617:	add    BYTE PTR [rax],dh
   100026619:	data16 add al,BYTE PTR [rax]
   10002661c:	push   0x0
   100026621:	add    BYTE PTR [rax],al
   100026623:	add    BYTE PTR [rax],al
   100026625:	add    BYTE PTR [rax],al
   100026627:	add    bh,bh
   100026629:	(bad)  
   10002662a:	(bad)  
   10002662b:	push   rax
   10002662d:	add    DWORD PTR [rdx],eax
   10002662f:	add    BYTE PTR [rax+0x6d],dh
   100026632:	add    BYTE PTR [rax],al
   100026634:	(bad)  
   100026635:	(bad)  
   100026636:	(bad)  
   100026637:	jmp    FWORD PTR [rdi+0x6f]
   10002663a:	add    BYTE PTR [rax],al
   10002663c:	add    BYTE PTR [rax],al
   10002663e:	add    BYTE PTR [rax],al
   100026640:	imul   esi,DWORD PTR [rax+0x0],0x0
   100026644:	(bad)  
   100026645:	(bad)  
   100026646:	(bad)  
   100026647:	jmp    QWORD PTR [rdx]
   100026649:	add    eax,0x11993
   10002664e:	add    BYTE PTR [rax],al
   100026650:	jo     0x1000266b8
   100026652:	add    al,BYTE PTR [rax]
	...
   10002665c:	add    eax,DWORD PTR [rax]
   10002665e:	add    BYTE PTR [rax],al
   100026660:	js     0x1000266c8
   100026662:	add    al,BYTE PTR [rax]
   100026664:	xor    BYTE PTR [rax],al
	...
   10002666e:	add    BYTE PTR [rax],al
   100026670:	(bad)  
   100026671:	(bad)  
   100026672:	(bad)  
   100026673:	inc    DWORD PTR [rax]
   100026675:	add    al,BYTE PTR [rdx]
   100026677:	add    BYTE PTR [rax-0x45],dh
   10002667a:	add    BYTE PTR [rax],al
   10002667c:	(bad)  
   10002667d:	(bad)  
   10002667e:	(bad)  
   10002667f:	call   QWORD PTR [rip+0xbd]        # 0x100026742
   100026685:	add    BYTE PTR [rax],al
   100026687:	add    BYTE PTR [rdx-0x42],al
   10002668a:	add    BYTE PTR [rax],al
   10002668c:	(bad)  
   10002668d:	(bad)  
   10002668e:	(bad)  
   10002668f:	jmp    QWORD PTR [rdx]
   100026691:	add    eax,0x61993
   100026696:	add    BYTE PTR [rax],al
   100026698:	mov    eax,0x2000266
   10002669d:	add    BYTE PTR [rax],al
   10002669f:	add    BYTE PTR [rax],bh
   1000266a1:	add    al,BYTE PTR [eax]
   1000266a4:	or     al,BYTE PTR [rax]
   1000266a6:	add    BYTE PTR [rax],al
   1000266a8:	call   0x88026913
   1000266ad:	add    DWORD PTR [rax],eax
	...
   1000266b7:	add    bh,bh
   1000266b9:	(bad)  
   1000266ba:	(bad)  
   1000266bb:	inc    DWORD PTR [rax]
   1000266bd:	add    BYTE PTR [rax],al
   1000266bf:	add    BYTE PTR [rax],al
   1000266c1:	add    BYTE PTR [rax],al
   1000266c3:	add    al,al
   1000266c5:	std    
   1000266c6:	add    DWORD PTR [rax],eax
   1000266c8:	(bad)  
   1000266c9:	(bad)  
   1000266ca:	(bad)  
   1000266cb:	inc    DWORD PTR [rax]
   1000266cd:	add    BYTE PTR [rax],al
   1000266cf:	add    BYTE PTR [rdx],al
   1000266d1:	add    BYTE PTR [rax],al
   1000266d3:	add    BYTE PTR [rax],al
   1000266d5:	add    BYTE PTR [rax],al
   1000266d7:	add    BYTE PTR [rbx],al
   1000266d9:	add    BYTE PTR [rax],al
   1000266db:	add    BYTE PTR [rax-0x2],al
   1000266de:	add    DWORD PTR [rax],eax
   1000266e0:	add    al,BYTE PTR [rax]
   1000266e2:	add    BYTE PTR [rax],al
   1000266e4:	add    BYTE PTR [rax],al
   1000266e6:	add    BYTE PTR [rax],al
   1000266e8:	sar    BYTE PTR [rsi-0x10000],0xff
   1000266ef:	push   QWORD PTR [rcx]
   1000266f1:	mov    edi,0x0
   1000266f6:	add    BYTE PTR [rax],al
   1000266f8:	rex.X mov edi,0x10000
   1000266fe:	add    BYTE PTR [rax],al
   100026700:	sbb    eax,0xc3
   100026705:	add    BYTE PTR [rax],al
   100026707:	add    BYTE PTR [rbx],ch
   100026709:	ret    
   10002670a:	add    BYTE PTR [rax],al
   10002670c:	(bad)  
   10002670d:	(bad)  
   10002670e:	(bad)  
   10002670f:	call   rax
   100026711:	std    
   100026712:	add    DWORD PTR [rax],eax
   100026714:	add    BYTE PTR [rax],al
   100026716:	add    BYTE PTR [rax],al
   100026718:	(bad)  
   10002671a:	add    DWORD PTR [rax],eax
   10002671c:	add    eax,DWORD PTR [rax]
   10002671e:	add    BYTE PTR [rax],al
   100026720:	repnz std 
   100026722:	add    DWORD PTR [rax],eax
   100026724:	add    al,0x0
   100026726:	add    BYTE PTR [rax],al
   100026728:	sbb    esi,edi
   10002672a:	add    DWORD PTR [rax],eax
   10002672c:	add    eax,DWORD PTR [rax]
   10002672e:	add    BYTE PTR [rax],al
   100026730:	(bad)  
   100026731:	inc    BYTE PTR [rcx]
	...
   10002673b:	add    BYTE PTR [rcx],al
   10002673d:	add    BYTE PTR [rax],al
   10002673f:	add    BYTE PTR [rip+0x1000000],al        # 0x101026745
   100026745:	add    BYTE PTR [rax],al
   100026747:	add    BYTE PTR [rax+0x67],ah
   10002674a:	add    al,BYTE PTR [rax]
   10002674c:	add    eax,DWORD PTR [rax]
   10002674e:	add    BYTE PTR [rax],al
   100026750:	add    al,0x0
   100026752:	add    BYTE PTR [rax],al
   100026754:	add    eax,0x1000000
   100026759:	add    BYTE PTR [rax],al
   10002675b:	add    BYTE PTR [rdi+riz*2+0x2],dh
   10002675f:	add    BYTE PTR [rax],al
   100026761:	add    BYTE PTR [rax],al
   100026763:	add    BYTE PTR [rax-0x4ffffd6e],cl
   100026769:	add    DWORD PTR [rax],eax
   10002676b:	add    al,dl
   10002676d:	std    
   10002676e:	add    DWORD PTR [rax],eax
   100026770:	pop    rax
   100026771:	add    BYTE PTR [rax],al
   100026773:	add    BYTE PTR [rax],al
   100026775:	add    BYTE PTR [rax],al
   100026777:	add    BYTE PTR [rax-0x6e],bl
   10002677a:	add    al,BYTE PTR [rax]
   10002677c:	enter  0x1,0x0
   100026780:	push   rax
   100026781:	inc    BYTE PTR [rcx]
   100026783:	add    BYTE PTR [rax+0x0],bl
   100026786:	add    BYTE PTR [rax],al
   100026788:	and    al,BYTE PTR [rip+0x61993]        # 0x100088121
   10002678e:	add    BYTE PTR [rax],al
   100026790:	mov    al,0x67
   100026792:	add    al,BYTE PTR [rax]
	...
   10002679c:	or     BYTE PTR [rax],al
   10002679e:	add    BYTE PTR [rax],al
   1000267a0:	loopne 0x100026809
   1000267a2:	add    al,BYTE PTR [rax]
   1000267a4:	and    BYTE PTR [rax],al
	...
   1000267ae:	add    BYTE PTR [rax],al
   1000267b0:	(bad)  
   1000267b1:	(bad)  
   1000267b2:	(bad)  
   1000267b3:	jmp    QWORD PTR [rax]
   1000267b5:	add    al,BYTE PTR [rdx]
   1000267b7:	add    BYTE PTR [rax],al
   1000267b9:	add    BYTE PTR [rax],al
   1000267bb:	add    BYTE PTR [rax],dh
   1000267bd:	add    al,BYTE PTR [rdx]
   1000267bf:	add    BYTE PTR [rcx],al
   1000267c1:	add    BYTE PTR [rax],al
   1000267c3:	add    BYTE PTR [rax+0x2],al
   1000267c6:	add    al,BYTE PTR [rax]
   1000267c8:	add    al,BYTE PTR [rax]
   1000267ca:	add    BYTE PTR [rax],al
   1000267cc:	push   rax
   1000267cd:	add    al,BYTE PTR [rdx]
   1000267cf:	add    BYTE PTR [rbx],al
   1000267d1:	add    BYTE PTR [rax],al
   1000267d3:	add    BYTE PTR [rax+0x2],ah
   1000267d6:	add    al,BYTE PTR [rax]
   1000267d8:	add    al,0x0
   1000267da:	add    BYTE PTR [rax],al
   1000267dc:	jo     0x1000267e0
   1000267de:	add    al,BYTE PTR [rax]
   1000267e0:	shr    dh,1
   1000267e2:	add    BYTE PTR [rax],al
   1000267e4:	(bad)  
   1000267e5:	(bad)  
   1000267e6:	(bad)  
   1000267e7:	(bad)  
   1000267e8:	in     eax,dx
   1000267e9:	out    dx,al
   1000267ea:	add    BYTE PTR [rax],al
   1000267ec:	add    eax,DWORD PTR [rax]
   1000267ee:	add    BYTE PTR [rax],al
   1000267f0:	sub    bh,ch
   1000267f2:	add    BYTE PTR [rax],al
   1000267f4:	add    al,0x0
   1000267f6:	add    BYTE PTR [rax],al
   1000267f8:	cmp    bh,ch
   1000267fa:	add    BYTE PTR [rax],al
   1000267fc:	add    eax,DWORD PTR [rax]
   1000267fe:	add    BYTE PTR [rax],al
   100026800:	push   rsi
   100026801:	out    dx,eax
   100026802:	add    BYTE PTR [rax],al
   100026804:	add    al,BYTE PTR [rax]
   100026806:	add    BYTE PTR [rax],al
   100026808:	out    dx,ax
   10002680a:	add    BYTE PTR [rax],al
   10002680c:	add    DWORD PTR [rax],eax
   10002680e:	add    BYTE PTR [rax],al
   100026810:	jbe    0x100026801
   100026812:	add    BYTE PTR [rax],al
   100026814:	add    BYTE PTR [rax],al
   100026816:	add    BYTE PTR [rax],al
   100026818:	xchg   bh,ch
   10002681a:	add    BYTE PTR [rax],al
   10002681c:	(bad)  
   10002681d:	(bad)  
   10002681e:	(bad)  
   10002681f:	jmp    QWORD PTR [rdx]
   100026821:	add    eax,0x21993
   100026826:	add    BYTE PTR [rax],al
   100026828:	rex.W push 0x2
   10002682e:	add    BYTE PTR [rax],al
   100026830:	add    BYTE PTR [rax],al
   100026832:	add    BYTE PTR [rax],al
   100026834:	add    eax,0x58000000
   100026839:	push   0x600002
	...
   100026846:	add    BYTE PTR [rax],al
   100026848:	(bad)  
   100026849:	(bad)  
   10002684a:	(bad)  
   10002684b:	push   QWORD PTR [rax]
   10002684d:	add    eax,DWORD PTR [rdx]
   10002684f:	add    BYTE PTR [rax],al
   100026851:	add    BYTE PTR [rax],al
   100026853:	add    BYTE PTR [rax+0x3],al
   100026856:	add    al,BYTE PTR [rax]
   100026858:	sar    al,0x0
   10002685b:	add    bh,bh
   10002685d:	(bad)  
   10002685e:	(bad)  
   10002685f:	push   rbp
   100026861:	clc    
   100026862:	add    BYTE PTR [rax],al
   100026864:	add    BYTE PTR [rax],al
   100026866:	add    BYTE PTR [rax],al
   100026868:	mov    ah,0xf9
   10002686a:	add    BYTE PTR [rax],al
   10002686c:	add    DWORD PTR [rax],eax
   10002686e:	add    BYTE PTR [rax],al
   100026870:	jrcxz  0x10002686b
   100026872:	add    BYTE PTR [rax],al
   100026874:	add    BYTE PTR [rax],al
   100026876:	add    BYTE PTR [rax],al
   100026878:	or     edx,edi
   10002687a:	add    BYTE PTR [rax],al
   10002687c:	(bad)  
   10002687d:	(bad)  
   10002687e:	(bad)  
   10002687f:	jmp    QWORD PTR [rdx]
   100026881:	add    eax,0x11993
   100026886:	add    BYTE PTR [rax],al
   100026888:	test   al,0x68
   10002688a:	add    al,BYTE PTR [rax]
	...
   100026894:	add    eax,0xb0000000
   100026899:	push   0x400002
	...
   1000268a6:	add    BYTE PTR [rax],al
   1000268a8:	(bad)  
   1000268a9:	(bad)  
   1000268aa:	(bad)  
   1000268ab:	inc    DWORD PTR [rax]
   1000268ad:	(bad)  
   1000268ae:	add    al,BYTE PTR [rax]
   1000268b0:	nop
   1000268b1:	cld    
   1000268b2:	add    BYTE PTR [rax],al
   1000268b4:	(bad)  
   1000268b5:	(bad)  
   1000268b6:	(bad)  
   1000268b7:	dec    ebp
   1000268b9:	cld    
   1000268ba:	add    BYTE PTR [rax],al
   1000268bc:	add    BYTE PTR [rax],al
   1000268be:	add    BYTE PTR [rax],al
   1000268c0:	add    edi,ebp
   1000268c2:	add    BYTE PTR [rax],al
   1000268c4:	(bad)  
   1000268c5:	(bad)  
   1000268c6:	(bad)  
   1000268c7:	inc    DWORD PTR [rip+0xfd]        # 0x1000269ca
   1000268cd:	add    BYTE PTR [rax],al
   1000268cf:	add    BYTE PTR [rdi-0x3],dl
   1000268d2:	add    BYTE PTR [rax],al
   1000268d4:	(bad)  
   1000268d5:	(bad)  
   1000268d6:	(bad)  
   1000268d7:	jmp    QWORD PTR [rdx]
   1000268d9:	add    eax,0x21993
   1000268de:	add    BYTE PTR [rax],al
   1000268e0:	add    BYTE PTR [rcx+0x2],ch
	...
   1000268eb:	add    BYTE PTR [rip+0x10000000],al        # 0x1100268f1
   1000268f1:	imul   eax,DWORD PTR [rdx],0x4000
	...
   1000268ff:	add    bh,bh
   100026901:	(bad)  
   100026902:	(bad)  
   100026903:	jmp    QWORD PTR [rax]
   100026905:	add    al,0x2
   100026907:	add    BYTE PTR [rax],al
   100026909:	add    BYTE PTR [rax],al
   10002690b:	add    BYTE PTR [rax],dh
   10002690d:	add    al,0x2
   10002690f:	add    al,dl
   100026911:	add    eax,DWORD PTR [rcx]
   100026913:	add    bh,bh
   100026915:	(bad)  
   100026916:	(bad)  
   100026917:	push   rdi
   100026919:	add    eax,DWORD PTR [rcx]
   10002691b:	add    BYTE PTR [rax],al
   10002691d:	add    BYTE PTR [rax],al
   10002691f:	add    bl,bh
   100026921:	add    eax,DWORD PTR [rcx]
   100026923:	add    BYTE PTR [rcx],al
   100026925:	add    BYTE PTR [rax],al
   100026927:	add    BYTE PTR [rsp+rax*1+0x1],bl
   10002692e:	add    BYTE PTR [rax],al
   100026930:	lods   al,BYTE PTR ds:[rsi]
   100026931:	add    al,0x1
   100026933:	add    bh,bh
   100026935:	(bad)  
   100026936:	(bad)  
   100026937:	jmp    QWORD PTR [rdx]
   100026939:	add    eax,0x11993
   10002693e:	add    BYTE PTR [rax],al
   100026940:	(bad)  
   100026941:	imul   eax,DWORD PTR [rdx],0x0
   100026947:	add    BYTE PTR [rax],al
   100026949:	add    BYTE PTR [rax],al
   10002694b:	add    BYTE PTR [rbx],al
   10002694d:	add    BYTE PTR [rax],al
   10002694f:	add    BYTE PTR [rax+0x69],ch
   100026952:	add    al,BYTE PTR [rax]
   100026954:	xor    BYTE PTR [rax],al
	...
   10002695e:	add    BYTE PTR [rax],al
   100026960:	(bad)  
   100026961:	(bad)  
   100026962:	(bad)  
   100026963:	push   rax
   100026965:	add    eax,DWORD PTR [rdx]
   100026967:	add    BYTE PTR [rax],ah
   100026969:	add    eax,0xffff0001
   10002696e:	(bad)  
   10002696f:	(bad)  
   100026970:	cmp    eax,DWORD PTR [rip+0x1]        # 0x100026977
   100026976:	add    BYTE PTR [rax],al
   100026978:	mov    ah,0x5
   10002697a:	add    DWORD PTR [rax],eax
   10002697c:	(bad)  
   10002697d:	(bad)  
   10002697e:	(bad)  
   10002697f:	jmp    QWORD PTR [rdx]
   100026981:	add    eax,0x11993
   100026986:	add    BYTE PTR [rax],al
   100026988:	test   al,0x69
   10002698a:	add    al,BYTE PTR [rax]
	...
   100026994:	add    eax,DWORD PTR [rax]
   100026996:	add    BYTE PTR [rax],al
   100026998:	mov    al,0x69
   10002699a:	add    al,BYTE PTR [rax]
   10002699c:	cmp    BYTE PTR [rax],al
	...
   1000269a6:	add    BYTE PTR [rax],al
   1000269a8:	(bad)  
   1000269a9:	(bad)  
   1000269aa:	(bad)  
   1000269ab:	jmp    rax
   1000269ad:	add    eax,DWORD PTR [rdx]
   1000269af:	add    BYTE PTR [rax],al
   1000269b1:	(bad)  
   1000269b2:	add    DWORD PTR [rax],eax
   1000269b4:	(bad)  
   1000269b5:	(bad)  
   1000269b6:	(bad)  
   1000269b7:	push   QWORD PTR [rax+0x6]
   1000269ba:	add    DWORD PTR [rax],eax
   1000269bc:	add    BYTE PTR [rax],al
   1000269be:	add    BYTE PTR [rax],al
   1000269c0:	call   0xff026acb
   1000269c5:	(bad)  
   1000269c6:	(bad)  
   1000269c7:	jmp    QWORD PTR [rdx]
   1000269c9:	add    eax,0x11993
   1000269ce:	add    BYTE PTR [rax],al
   1000269d0:	lock imul eax,DWORD PTR [rdx],0x0
   1000269d7:	add    BYTE PTR [rax],al
   1000269d9:	add    BYTE PTR [rax],al
   1000269db:	add    BYTE PTR [rbx],al
   1000269dd:	add    BYTE PTR [rax],al
   1000269df:	add    al,bh
   1000269e1:	imul   eax,DWORD PTR [rdx],0x3000
	...
   1000269ef:	add    bh,bh
   1000269f1:	(bad)  
   1000269f2:	(bad)  
   1000269f3:	push   QWORD PTR [rax+0x60000204]
   1000269f9:	(bad)  
   1000269fa:	add    DWORD PTR [rax],eax
   1000269fc:	(bad)  
   1000269fd:	(bad)  
   1000269fe:	(bad)  
   1000269ff:	inc    DWORD PTR [rbp+0x107]
   100026a05:	add    BYTE PTR [rax],al
   100026a07:	add    ah,dh
   100026a09:	(bad)  
   100026a0a:	add    DWORD PTR [rax],eax
   100026a0c:	(bad)  
   100026a0d:	(bad)  
   100026a0e:	(bad)  
   100026a0f:	jmp    QWORD PTR [rdx]
   100026a11:	add    eax,0x11993
   100026a16:	add    BYTE PTR [rax],al
   100026a18:	cmp    BYTE PTR [rdx+0x2],ch
	...
   100026a23:	add    BYTE PTR [rbx],al
   100026a25:	add    BYTE PTR [rax],al
   100026a27:	add    BYTE PTR [rax+0x6a],al
   100026a2a:	add    al,BYTE PTR [rax]
   100026a2c:	xor    BYTE PTR [rax],al
	...
   100026a36:	add    BYTE PTR [rax],al
   100026a38:	(bad)  
   100026a39:	(bad)  
   100026a3a:	(bad)  
   100026a3b:	push   QWORD PTR [rax+0x4]
   100026a3e:	add    al,BYTE PTR [rax]
   100026a40:	and    BYTE PTR [rax],cl
   100026a42:	add    DWORD PTR [rax],eax
   100026a44:	(bad)  
   100026a45:	(bad)  
   100026a46:	(bad)  
   100026a47:	dec    DWORD PTR [rax+0x8]
   100026a4a:	add    DWORD PTR [rax],eax
   100026a4c:	add    BYTE PTR [rax],al
   100026a4e:	add    BYTE PTR [rax],al
   100026a50:	movabs eax,ds:0x22ffffffff000108
   100026a59:	add    eax,0x11993
   100026a5e:	add    BYTE PTR [rax],al
   100026a60:	sub    BYTE PTR [rdx+0x2],0x0
	...
   100026a6c:	add    eax,DWORD PTR [rax]
   100026a6e:	add    BYTE PTR [rax],al
   100026a70:	mov    BYTE PTR [rdx+0x2],ch
   100026a73:	add    BYTE PTR [rax],dh
	...
   100026a7d:	add    BYTE PTR [rax],al
   100026a7f:	add    bh,bh
   100026a81:	(bad)  
   100026a82:	(bad)  
   100026a83:	call   QWORD PTR [rax]
   100026a85:	add    al,0x2
   100026a87:	add    al,dl
   100026a89:	or     BYTE PTR [rcx],al
   100026a8b:	add    bh,bh
   100026a8d:	(bad)  
   100026a8e:	(bad)  
   100026a8f:	push   rax
   100026a91:	or     BYTE PTR [rcx],al
   100026a93:	add    BYTE PTR [rax],al
   100026a95:	add    BYTE PTR [rax],al
   100026a97:	add    BYTE PTR [rbx+0x9],dl
   100026a9a:	add    DWORD PTR [rax],eax
   100026a9c:	(bad)  
   100026a9d:	(bad)  
   100026a9e:	(bad)  
   100026a9f:	jmp    QWORD PTR [rdx]
   100026aa1:	add    eax,0x11993
   100026aa6:	add    BYTE PTR [rax],al
   100026aa8:	enter  0x26a,0x0
	...
   100026ab4:	add    eax,DWORD PTR [rax]
   100026ab6:	add    BYTE PTR [rax],al
   100026ab8:	shr    BYTE PTR [rdx+0x2],1
   100026abb:	add    BYTE PTR [rax],bh
	...
   100026ac5:	add    BYTE PTR [rax],al
   100026ac7:	add    bh,bh
   100026ac9:	(bad)  
   100026aca:	(bad)  
   100026acb:	inc    eax
   100026acd:	add    al,0x2
   100026acf:	add    BYTE PTR [rax-0xfffef7],al
   100026ad5:	(bad)  
   100026ad6:	(bad)  
   100026ad7:	call   FWORD PTR [rbx+0x109]
   100026add:	add    BYTE PTR [rax],al
   100026adf:	add    BYTE PTR [rdi-0xfffef6],cl
   100026ae5:	(bad)  
   100026ae6:	(bad)  
   100026ae7:	jmp    QWORD PTR [rdx]
   100026ae9:	add    eax,0x11993
   100026aee:	add    BYTE PTR [rax],al
   100026af0:	adc    BYTE PTR [rbx+0x2],ch
	...
   100026afb:	add    BYTE PTR [rbx],al
   100026afd:	add    BYTE PTR [rax],al
   100026aff:	add    BYTE PTR [rax],bl
   100026b01:	imul   eax,DWORD PTR [rdx],0x0
   100026b04:	pop    rax
	...
   100026b0d:	add    BYTE PTR [rax],al
   100026b0f:	add    bh,bh
   100026b11:	(bad)  
   100026b12:	(bad)  
   100026b13:	call   QWORD PTR [rax]
   100026b15:	(bad)  
   100026b16:	add    al,BYTE PTR [rax]
   100026b18:	mov    al,0xa
   100026b1a:	add    DWORD PTR [rax],eax
   100026b1c:	(bad)  
   100026b1d:	(bad)  
   100026b1e:	(bad)  
   100026b1f:	dec    DWORD PTR [rdi]
   100026b21:	or     eax,DWORD PTR [rcx]
   100026b23:	add    BYTE PTR [rax],al
   100026b25:	add    BYTE PTR [rax],al
   100026b27:	add    BYTE PTR [rdi-0xfffef4],cl
   100026b2d:	(bad)  
   100026b2e:	(bad)  
   100026b2f:	jmp    QWORD PTR [rdx]
   100026b31:	add    eax,0x71993
   100026b36:	add    BYTE PTR [rax],al
   100026b38:	pop    rax
   100026b39:	imul   eax,DWORD PTR [rdx],0x0
	...
   100026b44:	adc    DWORD PTR [rax],eax
   100026b46:	add    BYTE PTR [rax],al
   100026b48:	nop
   100026b49:	imul   eax,DWORD PTR [rdx],0x0
   100026b4c:	mov    al,0x0
	...
   100026b56:	add    BYTE PTR [rax],al
   100026b58:	(bad)  
   100026b59:	(bad)  
   100026b5a:	(bad)  
   100026b5b:	push   QWORD PTR [rax+0x5]
   100026b5e:	add    al,BYTE PTR [rax]
   100026b60:	add    BYTE PTR [rax],al
   100026b62:	add    BYTE PTR [rax],al
   100026b64:	add    BYTE PTR [rip+0xffffffffffff0002],0xff        # 0x100016b6d
   100026b6b:	call   QWORD PTR [rax+0x2000205]
   100026b71:	add    BYTE PTR [rax],al
   100026b73:	add    BYTE PTR [rax-0xfffdfb],ah
   100026b79:	(bad)  
   100026b7a:	(bad)  
   100026b7b:	push   QWORD PTR [rax+0x4000205]
   100026b81:	add    BYTE PTR [rax],al
   100026b83:	add    al,al
   100026b85:	add    eax,0x40002
   100026b8a:	add    BYTE PTR [rax],al
   100026b8c:	rol    BYTE PTR [rip+0xd600002],1        # 0x10d626b94
   100026b92:	add    DWORD PTR [rax],eax
   100026b94:	(bad)  
   100026b95:	(bad)  
   100026b96:	(bad)  
   100026b97:	call   QWORD PTR [rsi+rcx*1]
   100026b9a:	add    DWORD PTR [rax],eax
   100026b9c:	add    BYTE PTR [rax],al
   100026b9e:	add    BYTE PTR [rax],al
   100026ba0:	(bad)  
   100026ba1:	(bad)  
   100026ba2:	add    DWORD PTR [rax],eax
   100026ba4:	add    al,BYTE PTR [rax]
   100026ba6:	add    BYTE PTR [rax],al
   100026ba8:	es (bad) 
   100026baa:	add    DWORD PTR [rax],eax
   100026bac:	add    eax,DWORD PTR [rax]
   100026bae:	add    BYTE PTR [rax],al
   100026bb0:	sahf   
   100026bb1:	(bad)  
   100026bb2:	add    DWORD PTR [rax],eax
   100026bb4:	add    al,BYTE PTR [rax]
   100026bb6:	add    BYTE PTR [rax],al
   100026bb8:	lods   eax,DWORD PTR ds:[rsi]
   100026bb9:	(bad)  
   100026bba:	add    DWORD PTR [rax],eax
   100026bbc:	(bad)  
   100026bbd:	(bad)  
   100026bbe:	(bad)  
   100026bbf:	(bad)  
   100026bc0:	mov    ebx,0x300010e
   100026bc5:	add    BYTE PTR [rax],al
   100026bc7:	add    BYTE PTR [rsi+0x200010e],bh
   100026bcd:	add    BYTE PTR [rax],al
   100026bcf:	add    ch,cl
   100026bd1:	(bad)  
   100026bd2:	add    DWORD PTR [rax],eax
   100026bd4:	(bad)  
   100026bd5:	(bad)  
   100026bd6:	(bad)  
   100026bd7:	(bad)  
   100026bd8:	fisttp DWORD PTR [rsi]
   100026bda:	add    DWORD PTR [rax],eax
   100026bdc:	add    eax,DWORD PTR [rax]
   100026bde:	add    BYTE PTR [rax],al
   100026be0:	dec    BYTE PTR [rsi]
   100026be2:	add    DWORD PTR [rax],eax
   100026be4:	add    al,BYTE PTR [rax]
   100026be6:	add    BYTE PTR [rax],al
   100026be8:	or     eax,0xff00010f
   100026bed:	(bad)  
   100026bee:	(bad)  
   100026bef:	call   FWORD PTR [rax]
   100026bf1:	sgdt   [rax]
   100026bf4:	add    al,BYTE PTR [rax]
   100026bf6:	add    BYTE PTR [rax],al
   100026bf8:	(bad)  
   100026bf9:	sgdt   [rax]
   100026bfc:	add    al,0x0
   100026bfe:	add    BYTE PTR [rax],al
   100026c00:	(bad)  
   100026c01:	sgdt   [rax]
   100026c04:	(bad)  
   100026c05:	add    BYTE PTR [rax],al
   100026c07:	add    BYTE PTR [rax+0xf],ah
   100026c0a:	add    DWORD PTR [rax],eax
   100026c0c:	add    al,0x0
   100026c0e:	add    BYTE PTR [rax],al
   100026c10:	push   0xf
   100026c12:	add    DWORD PTR [rax],eax
   100026c14:	(bad)  
   100026c15:	(bad)  
   100026c16:	(bad)  
   100026c17:	jmp    QWORD PTR [rdx]
   100026c19:	add    eax,0x71993
   100026c1e:	add    BYTE PTR [rax],al
   100026c20:	rex ins BYTE PTR es:[rdi],dx
   100026c22:	add    al,BYTE PTR [rax]
	...
   100026c2c:	adc    DWORD PTR [rax],eax
   100026c2e:	add    BYTE PTR [rax],al
   100026c30:	js     0x100026c9e
   100026c32:	add    al,BYTE PTR [rax]
   100026c34:	mov    al,0x0
	...
   100026c3e:	add    BYTE PTR [rax],al
   100026c40:	(bad)  
   100026c41:	(bad)  
   100026c42:	(bad)  
   100026c43:	jmp    rax
   100026c45:	add    al,0x2
   100026c47:	add    BYTE PTR [rax],al
   100026c49:	add    BYTE PTR [rax],al
   100026c4b:	add    al,dh
   100026c4d:	add    al,0x2
   100026c4f:	add    bh,bh
   100026c51:	(bad)  
   100026c52:	(bad)  
   100026c53:	inc    DWORD PTR [rax]
   100026c55:	add    eax,0x20002
   100026c5a:	add    BYTE PTR [rax],al
   100026c5c:	adc    BYTE PTR [rip+0xffffffffffff0002],al        # 0x100016c64
   100026c62:	(bad)  
   100026c63:	jmp    QWORD PTR [rax]
   100026c65:	add    eax,0x40002
   100026c6a:	add    BYTE PTR [rax],al
   100026c6c:	xor    BYTE PTR [rip+0x40002],al        # 0x100066c74
   100026c72:	add    BYTE PTR [rax],al
   100026c74:	rex add eax,0xfb00002
   100026c7a:	add    DWORD PTR [rax],eax
   100026c7c:	(bad)  
   100026c7d:	(bad)  
   100026c7e:	(bad)  
   100026c7f:	jmp    QWORD PTR [rax+rdx*1+0x1]
   100026c83:	add    BYTE PTR [rax],al
   100026c85:	add    BYTE PTR [rax],al
   100026c87:	add    BYTE PTR [rsi+0x10],ch
   100026c8a:	add    DWORD PTR [rax],eax
   100026c8c:	add    al,BYTE PTR [rax]
   100026c8e:	add    BYTE PTR [rax],al
   100026c90:	jbe    0x100026ca2
   100026c92:	add    DWORD PTR [rax],eax
   100026c94:	add    eax,DWORD PTR [rax]
   100026c96:	add    BYTE PTR [rax],al
   100026c98:	out    dx,al
   100026c99:	adc    BYTE PTR [rcx],al
   100026c9b:	add    BYTE PTR [rdx],al
   100026c9d:	add    BYTE PTR [rax],al
   100026c9f:	add    ch,bh
   100026ca1:	adc    BYTE PTR [rcx],al
   100026ca3:	add    bh,bh
   100026ca5:	(bad)  
   100026ca6:	(bad)  
   100026ca7:	dec    DWORD PTR [rbx]
   100026ca9:	adc    DWORD PTR [rcx],eax
   100026cab:	add    BYTE PTR [rbx],al
   100026cad:	add    BYTE PTR [rax],al
   100026caf:	add    BYTE PTR [rsi],cl
   100026cb1:	adc    DWORD PTR [rcx],eax
   100026cb3:	add    BYTE PTR [rdx],al
   100026cb5:	add    BYTE PTR [rax],al
   100026cb7:	add    BYTE PTR [rip+0xffffffffff000111],bl        # 0xff026dce
   100026cbd:	(bad)  
   100026cbe:	(bad)  
   100026cbf:	jmp    FWORD PTR [rbx]
   100026cc1:	adc    DWORD PTR [rcx],eax
   100026cc3:	add    BYTE PTR [rbx],al
   100026cc5:	add    BYTE PTR [rax],al
   100026cc7:	add    BYTE PTR [rsi+0x11],cl
   100026cca:	add    DWORD PTR [rax],eax
   100026ccc:	add    al,BYTE PTR [rax]
   100026cce:	add    BYTE PTR [rax],al
   100026cd0:	pop    rbp
   100026cd1:	adc    DWORD PTR [rcx],eax
   100026cd3:	add    bh,bh
   100026cd5:	(bad)  
   100026cd6:	(bad)  
   100026cd7:	jmp    FWORD PTR [rax+0x11]
   100026cda:	add    DWORD PTR [rax],eax
   100026cdc:	add    al,BYTE PTR [rax]
   100026cde:	add    BYTE PTR [rax],al
   100026ce0:	ja     0x100026cf3
   100026ce2:	add    DWORD PTR [rax],eax
   100026ce4:	add    al,0x0
   100026ce6:	add    BYTE PTR [rax],al
   100026ce8:	jg     0x100026cfb
   100026cea:	add    DWORD PTR [rax],eax
   100026cec:	(bad)  
   100026ced:	add    BYTE PTR [rax],al
   100026cef:	add    BYTE PTR [rax+0x4000111],dh
   100026cf5:	add    BYTE PTR [rax],al
   100026cf7:	add    BYTE PTR [rdx-0xfffeef],bh
   100026cfd:	(bad)  
   100026cfe:	(bad)  
   100026cff:	jmp    QWORD PTR [rdx]
   100026d01:	add    eax,0x11993
   100026d06:	add    BYTE PTR [rax],al
   100026d08:	sub    BYTE PTR [rbp+0x2],ch
	...
   100026d13:	add    BYTE PTR [rip+0x30000000],al        # 0x130026d19
   100026d19:	ins    DWORD PTR es:[rdi],dx
   100026d1a:	add    al,BYTE PTR [rax]
   100026d1c:	xor    BYTE PTR [rax],al
	...
   100026d26:	add    BYTE PTR [rax],al
   100026d28:	(bad)  
   100026d29:	(bad)  
   100026d2a:	(bad)  
   100026d2b:	push   rax
   100026d2d:	add    eax,0x12000002
   100026d32:	add    DWORD PTR [rax],eax
   100026d34:	(bad)  
   100026d35:	(bad)  
   100026d36:	(bad)  
   100026d37:	jmp    FWORD PTR [rax]
   100026d39:	adc    al,BYTE PTR [rcx]
   100026d3b:	add    BYTE PTR [rax],al
   100026d3d:	add    BYTE PTR [rax],al
   100026d3f:	add    BYTE PTR [rbx+0x12],bl
   100026d42:	add    DWORD PTR [rax],eax
   100026d44:	(bad)  
   100026d45:	(bad)  
   100026d46:	(bad)  
   100026d47:	call   FWORD PTR [rbp+0x12]
   100026d4a:	add    DWORD PTR [rax],eax
   100026d4c:	add    BYTE PTR [rax],al
   100026d4e:	add    BYTE PTR [rax],al
   100026d50:	adc    BYTE PTR [rdx],0x1
   100026d53:	add    bh,bh
   100026d55:	(bad)  
   100026d56:	(bad)  
   100026d57:	jmp    QWORD PTR [rdx]
   100026d59:	add    eax,0x11993
   100026d5e:	add    BYTE PTR [rax],al
   100026d60:	sub    BYTE PTR [rbp+0x2],0x0
	...
   100026d6c:	add    eax,0x88000000
   100026d71:	ins    DWORD PTR es:[rdi],dx
   100026d72:	add    al,BYTE PTR [rax]
   100026d74:	xor    BYTE PTR [rax],al
	...
   100026d7e:	add    BYTE PTR [rax],al
   100026d80:	(bad)  
   100026d81:	(bad)  
   100026d82:	(bad)  
   100026d83:	inc    DWORD PTR [rax+0x4]
   100026d86:	add    al,BYTE PTR [rax]
   100026d88:	rcl    BYTE PTR [rdx],0x1
   100026d8b:	add    bh,bh
   100026d8d:	(bad)  
   100026d8e:	(bad)  
   100026d8f:	(bad)  
   100026d90:	call   0x100026ea7
   100026d95:	add    BYTE PTR [rax],al
   100026d97:	add    BYTE PTR [rbx],bl
   100026d99:	adc    eax,DWORD PTR [rcx]
   100026d9b:	add    bh,bh
   100026d9d:	(bad)  
   100026d9e:	(bad)  
   100026d9f:	call   FWORD PTR [rip+0x113]        # 0x100026eb8
   100026da5:	add    BYTE PTR [rax],al
   100026da7:	add    BYTE PTR [rax+0x13],al
   100026daa:	add    DWORD PTR [rax],eax
   100026dac:	(bad)  
   100026dad:	(bad)  
   100026dae:	(bad)  
   100026daf:	jmp    QWORD PTR [rdx]
   100026db1:	add    eax,0x21993
   100026db6:	add    BYTE PTR [rax],al
   100026db8:	fsubr  DWORD PTR [rbp+0x2]
	...
   100026dc3:	add    BYTE PTR [rdx],cl
   100026dc5:	add    BYTE PTR [rax],al
   100026dc7:	add    al,ch
   100026dc9:	ins    DWORD PTR es:[rdi],dx
   100026dca:	add    al,BYTE PTR [rax]
   100026dcc:	rex.W add BYTE PTR [rax],al
	...
   100026dd7:	add    bh,bh
   100026dd9:	(bad)  
   100026dda:	(bad)  
   100026ddb:	inc    DWORD PTR [rax+0x204]
   100026de1:	add    BYTE PTR [rax],al
   100026de3:	add    BYTE PTR [rax-0x6ffffdfc],dl
   100026de9:	adc    eax,DWORD PTR [rcx]
   100026deb:	add    bh,bh
   100026ded:	(bad)  
   100026dee:	(bad)  
   100026def:	dec    ebx
   100026df1:	adc    eax,DWORD PTR [rcx]
   100026df3:	add    BYTE PTR [rax],al
   100026df5:	add    BYTE PTR [rax],al
   100026df7:	add    BYTE PTR [rax],dh
   100026df9:	adc    al,0x1
   100026dfb:	add    bh,bh
   100026dfd:	(bad)  
   100026dfe:	(bad)  
   100026dff:	inc    DWORD PTR [rsi+0x14]
   100026e02:	add    DWORD PTR [rax],eax
   100026e04:	add    BYTE PTR [rax],al
   100026e06:	add    BYTE PTR [rax],al
   100026e08:	rex.WXB adc al,0x1
   100026e0b:	add    BYTE PTR [rcx],al
   100026e0d:	add    BYTE PTR [rax],al
   100026e0f:	add    BYTE PTR [rbx+0x114],dh
   100026e15:	add    BYTE PTR [rax],al
   100026e17:	add    bl,al
   100026e19:	adc    al,0x1
   100026e1b:	add    bh,bh
   100026e1d:	(bad)  
   100026e1e:	(bad)  
   100026e1f:	inc    ebp
   100026e21:	adc    al,0x1
   100026e23:	add    BYTE PTR [rcx],al
   100026e25:	add    BYTE PTR [rax],al
   100026e27:	add    al,ch
   100026e29:	adc    al,0x1
   100026e2b:	add    BYTE PTR [rax],al
   100026e2d:	add    BYTE PTR [rax],al
   100026e2f:	add    al,bh
   100026e31:	adc    al,0x1
   100026e33:	add    bh,bh
   100026e35:	(bad)  
   100026e36:	(bad)  
   100026e37:	jmp    QWORD PTR [rdx]
   100026e39:	add    eax,0x11993
   100026e3e:	add    BYTE PTR [rax],al
   100026e40:	(bad)  
   100026e41:	outs   dx,BYTE PTR ds:[rsi]
   100026e42:	add    al,BYTE PTR [rax]
	...
   100026e4c:	add    eax,DWORD PTR [rax]
   100026e4e:	add    BYTE PTR [rax],al
   100026e50:	push   0x3000026e
	...
   100026e5d:	add    BYTE PTR [rax],al
   100026e5f:	add    bh,bh
   100026e61:	(bad)  
   100026e62:	(bad)  
   100026e63:	jmp    QWORD PTR [rax+0x5]
   100026e66:	add    al,BYTE PTR [rax]
   100026e68:	nop
   100026e69:	adc    eax,0xffff0001
   100026e6e:	(bad)  
   100026e6f:	(bad)  
   100026e70:	mov    eax,0x115
   100026e75:	add    BYTE PTR [rax],al
   100026e77:	add    BYTE PTR [rbx],dl
   100026e79:	(bad)  
   100026e7a:	add    DWORD PTR [rax],eax
   100026e7c:	(bad)  
   100026e7d:	(bad)  
   100026e7e:	(bad)  
   100026e7f:	jmp    QWORD PTR [rdx]
   100026e81:	add    eax,0x11993
   100026e86:	add    BYTE PTR [rax],al
   100026e88:	test   al,0x6e
   100026e8a:	add    al,BYTE PTR [rax]
	...
   100026e94:	add    eax,DWORD PTR [rax]
   100026e96:	add    BYTE PTR [rax],al
   100026e98:	mov    al,0x6e
   100026e9a:	add    al,BYTE PTR [rax]
   100026e9c:	xor    BYTE PTR [rax],al
	...
   100026ea6:	add    BYTE PTR [rax],al
   100026ea8:	(bad)  
   100026ea9:	(bad)  
   100026eaa:	(bad)  
   100026eab:	call   rax
   100026ead:	add    al,0x2
   100026eaf:	add    BYTE PTR [rax+0x16],dl
   100026eb2:	add    DWORD PTR [rax],eax
   100026eb4:	(bad)  
   100026eb5:	(bad)  
   100026eb6:	(bad)  
   100026eb7:	(bad)  
   100026eb8:	js     0x100026ed0
   100026eba:	add    DWORD PTR [rax],eax
   100026ebc:	add    BYTE PTR [rax],al
   100026ebe:	add    BYTE PTR [rax],al
   100026ec0:	rcl    DWORD PTR [rsi],cl
   100026ec2:	add    DWORD PTR [rax],eax
   100026ec4:	(bad)  
   100026ec5:	(bad)  
   100026ec6:	(bad)  
   100026ec7:	jmp    QWORD PTR [rdx]
   100026ec9:	add    eax,0x11993
   100026ece:	add    BYTE PTR [rax],al
   100026ed0:	lock outs dx,BYTE PTR ds:[rsi]
   100026ed2:	add    al,BYTE PTR [rax]
	...
   100026edc:	add    eax,0xf8000000
   100026ee1:	outs   dx,BYTE PTR ds:[rsi]
   100026ee2:	add    al,BYTE PTR [rax]
   100026ee4:	xor    BYTE PTR [rax],al
	...
   100026eee:	add    BYTE PTR [rax],al
   100026ef0:	(bad)  
   100026ef1:	(bad)  
   100026ef2:	(bad)  
   100026ef3:	call   QWORD PTR [rax+0x4]
   100026ef6:	add    al,BYTE PTR [rax]
   100026ef8:	adc    BYTE PTR [rdi],dl
   100026efa:	add    DWORD PTR [rax],eax
   100026efc:	(bad)  
   100026efd:	(bad)  
   100026efe:	(bad)  
   100026eff:	(bad)  
   100026f00:	cmp    BYTE PTR [rdi],dl
   100026f02:	add    DWORD PTR [rax],eax
   100026f04:	add    BYTE PTR [rax],al
   100026f06:	add    BYTE PTR [rax],al
   100026f08:	imul   edx,DWORD PTR [rdi],0x1
   100026f0b:	add    bh,bh
   100026f0d:	(bad)  
   100026f0e:	(bad)  
   100026f0f:	jmp    FWORD PTR [rbp+0x17]
   100026f12:	add    DWORD PTR [rax],eax
   100026f14:	add    BYTE PTR [rax],al
   100026f16:	add    BYTE PTR [rax],al
   100026f18:	nop
   100026f19:	(bad)  
   100026f1a:	add    DWORD PTR [rax],eax
   100026f1c:	(bad)  
   100026f1d:	(bad)  
   100026f1e:	(bad)  
   100026f1f:	jmp    QWORD PTR [rdx]
   100026f21:	add    eax,0x11993
   100026f26:	add    BYTE PTR [rax],al
   100026f28:	rex.W outs dx,DWORD PTR ds:[rsi]
   100026f2a:	add    al,BYTE PTR [rax]
	...
   100026f34:	add    eax,0x50000000
   100026f39:	outs   dx,DWORD PTR ds:[rsi]
   100026f3a:	add    al,BYTE PTR [rax]
   100026f3c:	xor    BYTE PTR [rax],al
	...
   100026f46:	add    BYTE PTR [rax],al
   100026f48:	(bad)  
   100026f49:	(bad)  
   100026f4a:	(bad)  
   100026f4b:	jmp    QWORD PTR [rax+0x4]
   100026f4e:	add    al,BYTE PTR [rax]
   100026f50:	loopne 0x100026f69
   100026f52:	add    DWORD PTR [rax],eax
   100026f54:	(bad)  
   100026f55:	(bad)  
   100026f56:	(bad)  
   100026f57:	dec    DWORD PTR [rax]
   100026f59:	sbb    BYTE PTR [rcx],al
   100026f5b:	add    BYTE PTR [rax],al
   100026f5d:	add    BYTE PTR [rax],al
   100026f5f:	add    BYTE PTR [rbx],bh
   100026f61:	sbb    BYTE PTR [rcx],al
   100026f63:	add    bh,bh
   100026f65:	(bad)  
   100026f66:	(bad)  
   100026f67:	(bad)  
   100026f68:	cmp    eax,0x118
   100026f6d:	add    BYTE PTR [rax],al
   100026f6f:	add    BYTE PTR [rax+0x18],ah
   100026f72:	add    DWORD PTR [rax],eax
   100026f74:	(bad)  
   100026f75:	(bad)  
   100026f76:	(bad)  
   100026f77:	jmp    QWORD PTR [rdx]
   100026f79:	add    eax,0x11993
   100026f7e:	add    BYTE PTR [rax],al
   100026f80:	movabs al,ds:0x26f
   100026f89:	add    BYTE PTR [rax],al
   100026f8b:	add    BYTE PTR [rip+0xffffffffa8000000],al        # 0xa8026f91
   100026f91:	outs   dx,DWORD PTR ds:[rsi]
   100026f92:	add    al,BYTE PTR [rax]
   100026f94:	cmp    BYTE PTR [rax],al
	...
   100026f9e:	add    BYTE PTR [rax],al
   100026fa0:	(bad)  
   100026fa1:	(bad)  
   100026fa2:	(bad)  
   100026fa3:	jmp    QWORD PTR [rax-0x4ffffdfc]
   100026fa9:	sbb    BYTE PTR [rcx],al
   100026fab:	add    bh,bh
   100026fad:	(bad)  
   100026fae:	(bad)  
   100026faf:	dec    eax
   100026fb1:	sbb    BYTE PTR [rcx],al
   100026fb3:	add    BYTE PTR [rax],al
   100026fb5:	add    BYTE PTR [rax],al
   100026fb7:	add    cl,bh
   100026fb9:	sbb    BYTE PTR [rcx],al
   100026fbb:	add    bh,bh
   100026fbd:	(bad)  
   100026fbe:	(bad)  
   100026fbf:	(bad)  
   100026fc0:	sti    
   100026fc1:	sbb    BYTE PTR [rcx],al
   100026fc3:	add    BYTE PTR [rax],al
   100026fc5:	add    BYTE PTR [rax],al
   100026fc7:	add    BYTE PTR [rdi],bh
   100026fc9:	sbb    DWORD PTR [rcx],eax
   100026fcb:	add    bh,bh
   100026fcd:	(bad)  
   100026fce:	(bad)  
   100026fcf:	jmp    QWORD PTR [rdx]
   100026fd1:	add    eax,0x11993
   100026fd6:	add    BYTE PTR [rax],al
   100026fd8:	clc    
   100026fd9:	outs   dx,DWORD PTR ds:[rsi]
   100026fda:	add    al,BYTE PTR [rax]
	...
   100026fe4:	(bad)  
   100026fe5:	add    BYTE PTR [rax],al
   100026fe7:	add    BYTE PTR [rax],al
   100026fe9:	jo     0x100026fed
   100026feb:	add    BYTE PTR [rax],dh
	...
   100026ff5:	add    BYTE PTR [rax],al
   100026ff7:	add    bh,bh
   100026ff9:	(bad)  
   100026ffa:	(bad)  
   100026ffb:	call   rax
   100026ffd:	add    eax,DWORD PTR [rdx]
   100026fff:	add    BYTE PTR [rax-0xfffee7],dl
   100027005:	(bad)  
   100027006:	(bad)  
   100027007:	jmp    QWORD PTR [rsi+0x119]
   10002700d:	add    BYTE PTR [rax],al
   10002700f:	add    bh,dl
   100027011:	sbb    DWORD PTR [rcx],eax
   100027013:	add    bh,bh
   100027015:	(bad)  
   100027016:	(bad)  
   100027017:	(bad)  
   100027018:	fstp   DWORD PTR [rcx]
   10002701a:	add    DWORD PTR [rax],eax
   10002701c:	add    BYTE PTR [rax],al
   10002701e:	add    BYTE PTR [rax],al
   100027020:	adc    DWORD PTR [rdx],ebx
   100027022:	add    DWORD PTR [rax],eax
   100027024:	(bad)  
   100027025:	(bad)  
   100027026:	(bad)  
   100027027:	jmp    QWORD PTR [rdi]
   100027029:	sbb    al,BYTE PTR [rcx]
   10002702b:	add    BYTE PTR [rax],al
   10002702d:	add    BYTE PTR [rax],al
   10002702f:	add    BYTE PTR [rcx+0x1a],cl
   100027032:	add    DWORD PTR [rax],eax
   100027034:	(bad)  
   100027035:	(bad)  
   100027036:	(bad)  
   100027037:	jmp    QWORD PTR [rdx]
   100027039:	add    eax,0x11993
   10002703e:	add    BYTE PTR [rax],al
   100027040:	(bad)  
   100027041:	jo     0x100027045
	...
   10002704b:	add    BYTE PTR [rdi],al
   10002704d:	add    BYTE PTR [rax],al
   10002704f:	add    BYTE PTR [rax+0x70],ch
   100027052:	add    al,BYTE PTR [rax]
   100027054:	add    BYTE PTR [rax],al
	...
   10002705f:	add    bh,bh
   100027061:	(bad)  
   100027062:	(bad)  
   100027063:	inc    DWORD PTR [rax]
   100027065:	add    al,0x2
   100027067:	add    al,al
   100027069:	sbb    al,BYTE PTR [rcx]
   10002706b:	add    bh,bh
   10002706d:	(bad)  
   10002706e:	(bad)  
   10002706f:	call   QWORD PTR [rax+0x11b]
   100027075:	add    BYTE PTR [rax],al
   100027077:	add    ah,al
   100027079:	sbb    eax,DWORD PTR [rcx]
   10002707b:	add    bh,bh
   10002707d:	(bad)  
   10002707e:	(bad)  
   10002707f:	(bad)  
   100027080:	ficomp DWORD PTR [rbx]
   100027082:	add    DWORD PTR [rax],eax
   100027084:	add    BYTE PTR [rax],al
   100027086:	add    BYTE PTR [rax],al
   100027088:	(bad)  
   100027089:	sbb    al,0x1
   10002708b:	add    bh,bh
   10002708d:	(bad)  
   10002708e:	(bad)  
   10002708f:	push   QWORD PTR [rdx]
   100027091:	sbb    al,0x1
   100027093:	add    BYTE PTR [rax],al
   100027095:	add    BYTE PTR [rax],al
   100027097:	add    BYTE PTR [rdi-0xfffee4],dl
   10002709d:	(bad)  
   10002709e:	(bad)  
   10002709f:	jmp    QWORD PTR [rdx]
   1000270a1:	add    eax,0x31993
   1000270a6:	add    BYTE PTR [rax],al
   1000270a8:	enter  0x270,0x0
	...
   1000270b4:	add    eax,0xe0000000
   1000270b9:	jo     0x1000270bd
   1000270bb:	add    BYTE PTR [rax],ah
	...
   1000270c5:	add    BYTE PTR [rax],al
   1000270c7:	add    bh,bh
   1000270c9:	(bad)  
   1000270ca:	(bad)  
   1000270cb:	call   QWORD PTR [rax+0x203]
   1000270d1:	add    BYTE PTR [rax],al
   1000270d3:	add    BYTE PTR [rax+0x203],ah
   1000270d9:	add    BYTE PTR [rax],al
   1000270db:	add    BYTE PTR [rax-0x6ffffdfd],dh
   1000270e1:	(bad)  
   1000270e2:	add    DWORD PTR [rax],eax
   1000270e4:	(bad)  
   1000270e5:	(bad)  
   1000270e6:	(bad)  
   1000270e7:	jmp    FWORD PTR [rbx+0x11e]
   1000270ed:	add    BYTE PTR [rax],al
   1000270ef:	add    BYTE PTR [rsi+rbx*1+0x20001],dh
   1000270f6:	add    BYTE PTR [rax],al
   1000270f8:	in     al,0x1e
   1000270fa:	add    DWORD PTR [rax],eax
   1000270fc:	add    BYTE PTR [rax],al
   1000270fe:	add    BYTE PTR [rax],al
   100027100:	out    dx,al
   100027101:	(bad)  
   100027102:	add    DWORD PTR [rax],eax
   100027104:	(bad)  
   100027105:	(bad)  
   100027106:	(bad)  
   100027107:	jmp    QWORD PTR [rdx]
   100027109:	add    eax,0x11993
   10002710e:	add    BYTE PTR [rax],al
   100027110:	xor    BYTE PTR [rcx+0x2],dh
	...
   10002711b:	add    BYTE PTR [rbx],al
   10002711d:	add    BYTE PTR [rax],al
   10002711f:	add    BYTE PTR [rax],bh
   100027121:	jno    0x100027125
   100027123:	add    BYTE PTR [rax],ah
	...
   10002712d:	add    BYTE PTR [rax],al
   10002712f:	add    bh,bh
   100027131:	(bad)  
   100027132:	(bad)  
   100027133:	call   QWORD PTR [rax+0x3]
   100027136:	add    al,BYTE PTR [rax]
   100027138:	rcr    BYTE PTR [rdi],1
   10002713a:	add    DWORD PTR [rax],eax
   10002713c:	(bad)  
   10002713d:	(bad)  
   10002713e:	(bad)  
   10002713f:	push   rax
   100027141:	(bad)  
   100027142:	add    DWORD PTR [rax],eax
   100027144:	add    BYTE PTR [rax],al
   100027146:	add    BYTE PTR [rax],al
   100027148:	xchg   esp,eax
   100027149:	and    BYTE PTR [rcx],al
   10002714b:	add    bh,bh
   10002714d:	(bad)  
   10002714e:	(bad)  
   10002714f:	jmp    QWORD PTR [rdx]
   100027151:	add    eax,0x11993
   100027156:	add    BYTE PTR [rax],al
   100027158:	js     0x1000271cb
   10002715a:	add    al,BYTE PTR [rax]
	...
   100027164:	add    eax,DWORD PTR [rax]
   100027166:	add    BYTE PTR [rax],al
   100027168:	xor    BYTE PTR [rcx+0x2],0x0
   10002716c:	and    BYTE PTR [rax],al
	...
   100027176:	add    BYTE PTR [rax],al
   100027178:	(bad)  
   100027179:	(bad)  
   10002717a:	(bad)  
   10002717b:	push   QWORD PTR [rax+0x3]
   10002717e:	add    al,BYTE PTR [rax]
   100027180:	rex and DWORD PTR [rcx],eax
   100027183:	add    bh,bh
   100027185:	(bad)  
   100027186:	(bad)  
   100027187:	call   QWORD PTR [rsi+0x21]
   10002718a:	add    DWORD PTR [rax],eax
   10002718c:	add    BYTE PTR [rax],al
   10002718e:	add    BYTE PTR [rax],al
   100027190:	xchg   BYTE PTR [rcx],ah
   100027192:	add    DWORD PTR [rax],eax
   100027194:	(bad)  
   100027195:	(bad)  
   100027196:	(bad)  
   100027197:	jmp    QWORD PTR [rdx]
   100027199:	add    eax,0xe1993
   10002719e:	add    BYTE PTR [rax],al
   1000271a0:	shl    BYTE PTR [rcx+0x2],0x0
   1000271a4:	add    al,0x0
   1000271a6:	add    BYTE PTR [rax],al
   1000271a8:	enter  0x272,0x0
   1000271ac:	adc    eax,DWORD PTR [rax]
   1000271ae:	add    BYTE PTR [rax],al
   1000271b0:	xor    BYTE PTR [rdx+0x2],dh
   1000271b3:	add    BYTE PTR [rax+0x0],ah
   1000271b9:	add    BYTE PTR [rax],al
   1000271bb:	add    BYTE PTR [rax],al
   1000271bd:	add    BYTE PTR [rax],al
   1000271bf:	add    bh,bh
   1000271c1:	(bad)  
   1000271c2:	(bad)  
   1000271c3:	inc    DWORD PTR [rax]
   1000271c5:	add    BYTE PTR [rax],al
   1000271c7:	add    BYTE PTR [rax],al
   1000271c9:	add    BYTE PTR [rax],al
   1000271cb:	add    BYTE PTR [rax],dl
   1000271cd:	or     BYTE PTR [rdx],al
   1000271cf:	add    BYTE PTR [rcx],al
   1000271d1:	add    BYTE PTR [rax],al
   1000271d3:	add    BYTE PTR [rax],ah
   1000271d5:	or     BYTE PTR [rdx],al
   1000271d7:	add    BYTE PTR [rcx],al
   1000271d9:	add    BYTE PTR [rax],al
   1000271db:	add    BYTE PTR [rax],dh
   1000271dd:	or     BYTE PTR [rdx],al
   1000271df:	add    BYTE PTR [rbx],al
   1000271e1:	add    BYTE PTR [rax],al
   1000271e3:	add    BYTE PTR [rax],al
   1000271e5:	add    BYTE PTR [rax],al
   1000271e7:	add    BYTE PTR [rax+rax*1],al
   1000271ea:	add    BYTE PTR [rax],al
   1000271ec:	or     BYTE PTR [rdx],al
   1000271ef:	add    BYTE PTR [rbx],al
   1000271f1:	add    BYTE PTR [rax],al
   1000271f3:	add    BYTE PTR [rax],al
   1000271f5:	add    BYTE PTR [rax],al
   1000271f7:	add    BYTE PTR [rsi],al
   1000271f9:	add    BYTE PTR [rax],al
   1000271fb:	add    BYTE PTR [rax],al
   1000271fd:	add    BYTE PTR [rax],al
   1000271ff:	add    BYTE PTR [rdi],al
   100027201:	add    BYTE PTR [rax],al
   100027203:	add    BYTE PTR [rax+0x6000209],dl
   100027209:	add    BYTE PTR [rax],al
   10002720b:	add    BYTE PTR [rax],al
   10002720d:	add    BYTE PTR [rax],al
   10002720f:	add    BYTE PTR [rcx],al
   100027211:	add    BYTE PTR [rax],al
   100027213:	add    al,al
   100027215:	or     DWORD PTR [rdx],eax
   100027217:	add    bh,bh
   100027219:	(bad)  
   10002721a:	(bad)  
   10002721b:	inc    DWORD PTR [rax]
   10002721d:	add    BYTE PTR [rax],al
   10002721f:	add    BYTE PTR [rbx],cl
   100027221:	add    BYTE PTR [rax],al
   100027223:	add    BYTE PTR [rax],al
   100027225:	add    BYTE PTR [rax],al
   100027227:	add    BYTE PTR [rbx],cl
   100027229:	add    BYTE PTR [rax],al
   10002722b:	add    BYTE PTR [rax],al
   10002722d:	add    BYTE PTR [rax],al
   10002722f:	add    al,dl
   100027231:	and    DWORD PTR [rcx],eax
   100027233:	add    bh,bh
   100027235:	(bad)  
   100027236:	(bad)  
   100027237:	(bad)  
   100027238:	(bad)  
   100027239:	and    DWORD PTR [rcx],eax
   10002723b:	add    BYTE PTR [rax],al
   10002723d:	add    BYTE PTR [rax],al
   10002723f:	add    BYTE PTR [rbx],dl
   100027241:	and    al,BYTE PTR [rcx]
   100027243:	add    BYTE PTR [rcx],al
   100027245:	add    BYTE PTR [rax],al
   100027247:	add    BYTE PTR [rdx],bl
   100027249:	and    al,BYTE PTR [rcx]
   10002724b:	add    BYTE PTR [rdx],al
   10002724d:	add    BYTE PTR [rax],al
   10002724f:	add    BYTE PTR [rdx+riz*1],dh
   100027252:	add    DWORD PTR [rax],eax
   100027254:	add    eax,DWORD PTR [rax]
   100027256:	add    BYTE PTR [rax],al
   100027258:	mov    cl,0x22
   10002725a:	add    DWORD PTR [rax],eax
   10002725c:	add    al,0x0
   10002725e:	add    BYTE PTR [rax],al
   100027260:	(bad)  
   100027261:	and    al,BYTE PTR [rcx]
   100027263:	add    BYTE PTR [rip+0xffffffffcf000000],al        # 0xcf027269
   100027269:	and    al,BYTE PTR [rcx]
   10002726b:	add    BYTE PTR [rax+rax*1],al
   10002726e:	add    BYTE PTR [rax],al
   100027270:	frstor [rdx]
   100027272:	add    DWORD PTR [rax],eax
   100027274:	add    eax,DWORD PTR [rax]
   100027276:	add    BYTE PTR [rax],al
   100027278:	jle    0x10002729d
   10002727a:	add    DWORD PTR [rax],eax
   10002727c:	add    DWORD PTR [rax],eax
   10002727e:	add    BYTE PTR [rax],al
   100027280:	mov    WORD PTR [rbx],fs
   100027282:	add    DWORD PTR [rax],eax
   100027284:	add    BYTE PTR [rax],al
   100027286:	add    BYTE PTR [rax],al
   100027288:	(bad)  
   100027289:	and    eax,DWORD PTR [rcx]
   10002728b:	add    bh,bh
   10002728d:	(bad)  
   10002728e:	(bad)  
   10002728f:	call   QWORD PTR [rax+0x8]
   100027292:	add    al,BYTE PTR [rax]
   100027294:	add    BYTE PTR [rax],al
   100027296:	add    BYTE PTR [rax],al
   100027298:	pop    rbp
   100027299:	or     BYTE PTR [rdx],al
   10002729b:	add    BYTE PTR [rdi],al
   10002729d:	add    BYTE PTR [rax],al
   10002729f:	add    BYTE PTR [rdi+0x8],ch
   1000272a2:	add    al,BYTE PTR [rax]
   1000272a4:	or     BYTE PTR [rax],al
   1000272a6:	add    BYTE PTR [rax],al
   1000272a8:	and    cl,BYTE PTR [rcx]
   1000272aa:	add    al,BYTE PTR [rax]
   1000272ac:	(bad)  
   1000272ad:	add    BYTE PTR [rax],al
   1000272af:	add    BYTE PTR [rax],dh
   1000272b1:	or     DWORD PTR [rdx],eax
   1000272b3:	add    BYTE PTR [rax],al
   1000272b5:	add    BYTE PTR [rax],al
   1000272b7:	add    ch,bl
   1000272b9:	or     DWORD PTR [rdx],eax
   1000272bb:	add    BYTE PTR [rax+rax*1],cl
   1000272be:	add    BYTE PTR [rax],al
   1000272c0:	dec    DWORD PTR [rcx]
   1000272c2:	add    al,BYTE PTR [rax]
   1000272c4:	add    BYTE PTR [rax],al
   1000272c6:	add    BYTE PTR [rax],al
   1000272c8:	add    al,0x0
   1000272ca:	add    BYTE PTR [rax],al
   1000272cc:	add    eax,0x9000000
   1000272d1:	add    BYTE PTR [rax],al
   1000272d3:	add    BYTE PTR [rcx],al
   1000272d5:	add    BYTE PTR [rax],al
   1000272d7:	add    BYTE PTR [rax],bl
   1000272d9:	jae    0x1000272dd
   1000272db:	add    BYTE PTR [rdi],al
   1000272dd:	add    BYTE PTR [rax],al
   1000272df:	add    BYTE PTR [rax],cl
   1000272e1:	add    BYTE PTR [rax],al
   1000272e3:	add    BYTE PTR [rcx],cl
   1000272e5:	add    BYTE PTR [rax],al
   1000272e7:	add    BYTE PTR [rcx],al
   1000272e9:	add    BYTE PTR [rax],al
   1000272eb:	add    BYTE PTR [rbx+rsi*2],ch
   1000272ee:	add    al,BYTE PTR [rax]
   1000272f0:	add    BYTE PTR [rax],al
   1000272f2:	add    BYTE PTR [rax],al
   1000272f4:	or     al,BYTE PTR [rax]
   1000272f6:	add    BYTE PTR [rax],al
   1000272f8:	or     eax,0x1000000
   1000272fd:	add    BYTE PTR [rax],al
   1000272ff:	add    BYTE PTR [rax+0x73],al
   100027302:	add    al,BYTE PTR [rax]
   100027304:	or     al,0x0
   100027306:	add    BYTE PTR [rax],al
   100027308:	or     al,0x0
   10002730a:	add    BYTE PTR [rax],al
   10002730c:	or     eax,0x1000000
   100027311:	add    BYTE PTR [rax],al
   100027313:	add    BYTE PTR [rbx+rsi*2+0x2],dl
   100027317:	add    BYTE PTR [rax],al
   100027319:	add    BYTE PTR [rax],al
   10002731b:	add    BYTE PTR [rax+0x68000292],cl
   100027321:	add    BYTE PTR [rax],al
   100027323:	add    BYTE PTR [rax+0x8],dl
   100027326:	add    al,BYTE PTR [rax]
   100027328:	cmp    BYTE PTR [rax],al
   10002732a:	add    BYTE PTR [rax],al
   10002732c:	add    BYTE PTR [rax],al
   10002732e:	add    BYTE PTR [rax],al
   100027330:	pop    rax
   100027331:	xchg   edx,eax
   100027332:	add    al,BYTE PTR [rax]
   100027334:	add    BYTE PTR [rbx],al
   100027336:	add    BYTE PTR [rax],al
   100027338:	movabs al,ds:0x38000209
   100027341:	add    BYTE PTR [rax],al
   100027343:	add    BYTE PTR [rax-0x17fffd6e],cl
   100027349:	add    BYTE PTR [rax],al
   10002734b:	add    al,dl
   10002734d:	or     DWORD PTR [rdx],eax
   10002734f:	add    BYTE PTR [rax],bh
   100027351:	add    BYTE PTR [rax],al
   100027353:	add    BYTE PTR [rax],al
   100027355:	add    BYTE PTR [rax],al
   100027357:	add    BYTE PTR [rax-0x6e],bl
   10002735a:	add    al,BYTE PTR [rax]
   10002735c:	add    DWORD PTR [rbx],eax
   10002735e:	add    BYTE PTR [rax],al
   100027360:	adc    BYTE PTR [rdx],cl
   100027362:	add    al,BYTE PTR [rax]
   100027364:	cmp    BYTE PTR [rax],al
   100027366:	add    BYTE PTR [rax],al
   100027368:	and    al,BYTE PTR [rip+0x11993]        # 0x100038d01
   10002736e:	add    BYTE PTR [rax],al
   100027370:	nop
   100027371:	jae    0x100027375
	...
   10002737b:	add    BYTE PTR [rcx],al
   10002737d:	add    BYTE PTR [rax],al
   10002737f:	add    BYTE PTR [rax+0x20000273],bl
	...
   10002738d:	add    BYTE PTR [rax],al
   10002738f:	add    bh,bh
   100027391:	(bad)  
   100027392:	(bad)  
   100027393:	call   QWORD PTR [rax+0x7000020b]
   100027399:	and    al,0x1
   10002739b:	add    bh,bh
   10002739d:	(bad)  
   10002739e:	(bad)  
   10002739f:	jmp    QWORD PTR [rdx]
   1000273a1:	add    eax,0x61993
   1000273a6:	add    BYTE PTR [rax],al
   1000273a8:	enter  0x273,0x0
   1000273ac:	add    al,BYTE PTR [rax]
   1000273ae:	add    BYTE PTR [rax],al
   1000273b0:	rex je 0x1000273b5
   1000273b3:	add    BYTE PTR [rcx],cl
   1000273b5:	add    BYTE PTR [rax],al
   1000273b7:	add    al,bh
   1000273b9:	jae    0x1000273bd
   1000273bb:	add    BYTE PTR [rax],ah
	...
   1000273c5:	add    BYTE PTR [rax],al
   1000273c7:	add    bh,bh
   1000273c9:	(bad)  
   1000273ca:	(bad)  
   1000273cb:	jmp    QWORD PTR [rax]
   1000273cd:	(bad)  
   1000273ce:	add    al,BYTE PTR [rax]
	...
   1000273d8:	add    DWORD PTR [rax],eax
   1000273da:	add    BYTE PTR [rax],al
   1000273dc:	xor    BYTE PTR [rsi],al
   1000273de:	add    al,BYTE PTR [rax]
	...
   1000273e8:	add    eax,DWORD PTR [rax]
   1000273ea:	add    BYTE PTR [rax],al
   1000273ec:	add    BYTE PTR [rax],al
   1000273ee:	add    BYTE PTR [rax],al
   1000273f0:	add    eax,DWORD PTR [rax]
   1000273f2:	add    BYTE PTR [rax],al
   1000273f4:	add    BYTE PTR [rax],al
   1000273f6:	add    BYTE PTR [rax],al
   1000273f8:	movabs al,ds:0x57ffffffff000124
   100027401:	and    eax,0x10001
   100027406:	add    BYTE PTR [rax],al
   100027408:	imul   esp,DWORD PTR [rip+0x20001],0x25bf0000        # 0x100047413
   100027412:	add    DWORD PTR [rax],eax
   100027414:	add    DWORD PTR [rax],eax
   100027416:	add    BYTE PTR [rax],al
   100027418:	retf   0x125
   10002741b:	add    BYTE PTR [rax],al
   10002741d:	add    BYTE PTR [rax],al
   10002741f:	add    BYTE PTR [rcx+0x26],dl
   100027422:	add    DWORD PTR [rax],eax
   100027424:	(bad)  
   100027425:	(bad)  
   100027426:	(bad)  
   100027427:	inc    DWORD PTR [rax+0x6]
   10002742a:	add    al,BYTE PTR [rax]
   10002742c:	add    BYTE PTR [rax],al
   10002742e:	add    BYTE PTR [rax],al
   100027430:	rex.WRB (bad) 
   100027432:	add    al,BYTE PTR [rax]
   100027434:	add    al,0x0
   100027436:	add    BYTE PTR [rax],al
   100027438:	data16 (bad) 
   10002743a:	add    al,BYTE PTR [rax]
   10002743c:	add    BYTE PTR [rax],al
   10002743e:	add    BYTE PTR [rax],al
   100027440:	add    DWORD PTR [rax],eax
   100027442:	add    BYTE PTR [rax],al
   100027444:	add    al,BYTE PTR [rax]
   100027446:	add    BYTE PTR [rax],al
   100027448:	add    eax,0x1000000
   10002744d:	add    BYTE PTR [rax],al
   10002744f:	add    BYTE PTR [rax+0x74],ch
   100027452:	add    al,BYTE PTR [rax]
   100027454:	add    al,0x0
   100027456:	add    BYTE PTR [rax],al
   100027458:	add    al,0x0
   10002745a:	add    BYTE PTR [rax],al
   10002745c:	add    eax,0x1000000
   100027461:	add    BYTE PTR [rax],al
   100027463:	add    BYTE PTR [rsp+rsi*2+0x2],bh
   100027467:	add    BYTE PTR [rax],al
   100027469:	add    BYTE PTR [rax],al
   10002746b:	add    BYTE PTR [rax+0x38000292],cl
   100027471:	add    BYTE PTR [rax],al
   100027473:	add    BYTE PTR [rax+0x6],al
   100027476:	add    al,BYTE PTR [rax]
   100027478:	cmp    BYTE PTR [rax],al
   10002747a:	add    BYTE PTR [rax],al
   10002747c:	add    BYTE PTR [rax],al
   10002747e:	add    BYTE PTR [rax],al
   100027480:	pop    rax
   100027481:	xchg   edx,eax
   100027482:	add    al,BYTE PTR [rax]
   100027484:	jo     0x100027486
   100027486:	add    BYTE PTR [rax],al
   100027488:	add    BYTE PTR [rsi],0x2
   10002748b:	add    BYTE PTR [rax],bh
   10002748d:	add    BYTE PTR [rax],al
   10002748f:	add    BYTE PTR [rdx],ah
   100027491:	add    eax,0x91993
   100027496:	add    BYTE PTR [rax],al
   100027498:	mov    eax,0x2000274
   10002749d:	add    BYTE PTR [rax],al
   10002749f:	add    BYTE PTR [rax+0x75],ah
   1000274a2:	add    al,BYTE PTR [rax]
   1000274a4:	or     al,0x0
   1000274a6:	add    BYTE PTR [rax],al
   1000274a8:	add    BYTE PTR [rbp+0x2],dh
   1000274ab:	add    al,dh
	...
   1000274b5:	add    BYTE PTR [rax],al
   1000274b7:	add    bh,bh
   1000274b9:	(bad)  
   1000274ba:	(bad)  
   1000274bb:	call   QWORD PTR [rax+0x7]
   1000274be:	add    al,BYTE PTR [rax]
	...
   1000274c8:	add    DWORD PTR [rax],eax
   1000274ca:	add    BYTE PTR [rax],al
   1000274cc:	(bad)  
   1000274cd:	(bad)  
   1000274ce:	add    al,BYTE PTR [rax]
   1000274d0:	add    al,BYTE PTR [rax]
   1000274d2:	add    BYTE PTR [rax],al
   1000274d4:	jo     0x1000274dd
   1000274d6:	add    al,BYTE PTR [rax]
   1000274d8:	add    al,BYTE PTR [rax]
   1000274da:	add    BYTE PTR [rax],al
   1000274dc:	add    BYTE PTR [rdi],0x2
   1000274df:	add    BYTE PTR [rdx],al
   1000274e1:	add    BYTE PTR [rax],al
   1000274e3:	add    BYTE PTR [rax+0x207],dl
   1000274e9:	add    BYTE PTR [rax],al
   1000274eb:	add    BYTE PTR [rax],al
   1000274ed:	add    BYTE PTR [rax],al
   1000274ef:	add    BYTE PTR [rsi],al
   1000274f1:	add    BYTE PTR [rax],al
   1000274f3:	add    BYTE PTR [rax],al
   1000274f5:	add    BYTE PTR [rax],al
   1000274f7:	add    BYTE PTR [rsi],al
   1000274f9:	add    BYTE PTR [rax],al
   1000274fb:	add    BYTE PTR [rax],al
   1000274fd:	add    BYTE PTR [rax],al
   1000274ff:	add    al,dh
   100027501:	sub    eax,DWORD PTR [rcx]
   100027503:	add    bh,bh
   100027505:	(bad)  
   100027506:	(bad)  
   100027507:	inc    DWORD PTR [rcx+0x100012d]
   10002750d:	add    BYTE PTR [rax],al
   10002750f:	add    BYTE PTR [rbp+0x200012d],dl
   100027515:	add    BYTE PTR [rax],al
   100027517:	add    ch,cl
   100027519:	sub    eax,0x30001
   10002751e:	add    BYTE PTR [rax],al
   100027520:	(bad)  
   100027521:	add    DWORD PTR cs:[rax],eax
   100027524:	add    al,0x0
   100027526:	add    BYTE PTR [rax],al
   100027528:	cmp    ebp,DWORD PTR [rsi]
   10002752a:	add    DWORD PTR [rax],eax
   10002752c:	add    al,BYTE PTR [rax]
   10002752e:	add    BYTE PTR [rax],al
   100027530:	mov    bl,0x2e
   100027532:	add    DWORD PTR [rax],eax
   100027534:	add    DWORD PTR [rax],eax
   100027536:	add    BYTE PTR [rax],al
   100027538:	shr    BYTE PTR [rsi],0x1
   10002753b:	add    BYTE PTR [rax],al
   10002753d:	add    BYTE PTR [rax],al
   10002753f:	add    BYTE PTR [rbx+0x2f],cl
   100027542:	add    DWORD PTR [rax],eax
   100027544:	(bad)  
   100027545:	(bad)  
   100027546:	(bad)  
   100027547:	jmp    QWORD PTR [rax+0x207]
   10002754d:	add    BYTE PTR [rax],al
   10002754f:	add    BYTE PTR [rsi+0x7000207],ch
   100027555:	add    BYTE PTR [rax],al
   100027557:	add    al,dl
   100027559:	(bad)  
   10002755a:	add    al,BYTE PTR [rax]
   10002755c:	add    BYTE PTR [rax],al
   10002755e:	add    BYTE PTR [rax],al
   100027560:	add    DWORD PTR [rax],eax
   100027562:	add    BYTE PTR [rax],al
   100027564:	add    eax,0x8000000
   100027569:	add    BYTE PTR [rax],al
   10002756b:	add    BYTE PTR [rcx],al
   10002756d:	add    BYTE PTR [rax],al
   10002756f:	add    BYTE PTR [rax+0x7000275],cl
   100027575:	add    BYTE PTR [rax],al
   100027577:	add    BYTE PTR [rdi],al
   100027579:	add    BYTE PTR [rax],al
   10002757b:	add    BYTE PTR [rax],cl
   10002757d:	add    BYTE PTR [rax],al
   10002757f:	add    BYTE PTR [rcx],al
   100027581:	add    BYTE PTR [rax],al
   100027583:	add    BYTE PTR [rbp+rsi*2+0x2],bl
   10002758a:	add    BYTE PTR [rax],al
   10002758c:	mov    BYTE PTR [rdx+0x1400002],dl
   100027592:	add    BYTE PTR [rax],al
   100027594:	movabs al,ds:0x88000207
   10002759d:	add    BYTE PTR [rax],al
   10002759f:	add    BYTE PTR [rax-0x6e],bl
   1000275a2:	add    al,BYTE PTR [rax]
   1000275a4:	pop    rax
   1000275a5:	add    DWORD PTR [rax],eax
   1000275a7:	add    al,ah
   1000275a9:	(bad)  
   1000275aa:	add    al,BYTE PTR [rax]
   1000275ac:	mov    BYTE PTR [rax],al
   1000275ae:	add    BYTE PTR [rax],al
   1000275b0:	and    al,BYTE PTR [rip+0x11993]        # 0x100038f49
   1000275b6:	add    BYTE PTR [rax],al
   1000275b8:	fdiv   DWORD PTR [rbp+0x2]
	...
   1000275c3:	add    BYTE PTR [rbx],al
   1000275c5:	add    BYTE PTR [rax],al
   1000275c7:	add    al,ah
   1000275c9:	jne    0x1000275cd
   1000275cb:	add    BYTE PTR [rax+0x0],ah
   1000275d1:	add    BYTE PTR [rax],al
   1000275d3:	add    BYTE PTR [rax],al
   1000275d5:	add    BYTE PTR [rax],al
   1000275d7:	add    bh,bh
   1000275d9:	(bad)  
   1000275da:	(bad)  
   1000275db:	jmp    QWORD PTR [rax-0x1ffffdf5]
   1000275e1:	add    DWORD PTR ss:[rax],eax
   1000275e4:	(bad)  
   1000275e5:	(bad)  
   1000275e6:	(bad)  
   1000275e7:	inc    DWORD PTR [rax+rdi*1+0x1]
   1000275ee:	add    BYTE PTR [rax],al
   1000275f0:	xchg   edx,eax
   1000275f1:	cmp    BYTE PTR [rcx],al
   1000275f3:	add    bh,bh
   1000275f5:	(bad)  
   1000275f6:	(bad)  
   1000275f7:	jmp    QWORD PTR [rdx]
   1000275f9:	add    eax,0x81993
   1000275fe:	add    BYTE PTR [rax],al
   100027600:	and    BYTE PTR [rsi+0x2],dh
	...
   10002760b:	add    BYTE PTR [rbx],cl
   10002760d:	add    BYTE PTR [rax],al
   10002760f:	add    BYTE PTR [rax+0x76],ah
   100027612:	add    al,BYTE PTR [rax]
   100027614:	rol    BYTE PTR [rax],0x0
	...
   10002761f:	add    bh,bh
   100027621:	(bad)  
   100027622:	(bad)  
   100027623:	push   QWORD PTR [rax-0xfffdf5]
   100027629:	(bad)  
   10002762a:	(bad)  
   10002762b:	call   rax
   10002762d:	or     eax,DWORD PTR [rdx]
   10002762f:	add    bh,bh
   100027631:	(bad)  
   100027632:	(bad)  
   100027633:	push   rax
   100027635:	or     eax,DWORD PTR [rdx]
   100027637:	add    bh,bh
   100027639:	(bad)  
   10002763a:	(bad)  
   10002763b:	inc    DWORD PTR [rax]
   10002763d:	or     al,0x2
   10002763f:	add    bh,bh
   100027641:	(bad)  
   100027642:	(bad)  
   100027643:	call   QWORD PTR [rax]
   100027645:	or     al,0x2
   100027647:	add    bh,bh
   100027649:	(bad)  
   10002764a:	(bad)  
   10002764b:	jmp    QWORD PTR [rax]
   10002764d:	or     al,0x2
   10002764f:	add    bh,bh
   100027651:	(bad)  
   100027652:	(bad)  
   100027653:	push   QWORD PTR [rax]
   100027655:	or     al,0x2
   100027657:	add    bh,bh
   100027659:	(bad)  
   10002765a:	(bad)  
   10002765b:	inc    DWORD PTR [rax+0xc]
   10002765e:	add    al,BYTE PTR [rax]
   100027660:	lock (bad) 
   100027662:	add    DWORD PTR [rax],eax
   100027664:	(bad)  
   100027665:	(bad)  
   100027666:	(bad)  
   100027667:	call   QWORD PTR [rsi+0x40]
   10002766a:	add    DWORD PTR [rax],eax
   10002766c:	add    BYTE PTR [rax],al
   10002766e:	add    BYTE PTR [rax],al
   100027670:	(bad)  
   100027671:	rex add DWORD PTR [rax],eax
   100027674:	(bad)  
   100027675:	(bad)  
   100027676:	(bad)  
   100027677:	push   QWORD PTR [rax+rax*2+0x1]
   10002767b:	add    BYTE PTR [rcx],al
   10002767d:	add    BYTE PTR [rax],al
   10002767f:	add    BYTE PTR [rbx+0x40],bh
   100027682:	add    DWORD PTR [rax],eax
   100027684:	(bad)  
   100027685:	(bad)  
   100027686:	(bad)  
   100027687:	push   rax
   100027689:	rex add DWORD PTR [rax],eax
   10002768c:	add    al,BYTE PTR [rax]
   10002768e:	add    BYTE PTR [rax],al
   100027690:	add    DWORD PTR es:[r8],eax
   100027694:	add    eax,DWORD PTR [rax]
   100027696:	add    BYTE PTR [rax],al
   100027698:	rex.RB
   100027699:	add    DWORD PTR [r8],eax
   10002769c:	(bad)  
   10002769d:	(bad)  
   10002769e:	(bad)  
   10002769f:	call   QWORD PTR [rax+0x5000145]
   1000276a5:	add    BYTE PTR [rax],al
   1000276a7:	add    BYTE PTR [rbp+rax*2+0x60001],bh
   1000276ae:	add    BYTE PTR [rax],al
   1000276b0:	ret    
   1000276b1:	add    DWORD PTR [r8],r8d
   1000276b4:	(bad)  
   1000276b5:	(bad)  
   1000276b6:	(bad)  
   1000276b7:	jmp    QWORD PTR [rdx]
   1000276b9:	add    eax,0x11993
   1000276be:	add    BYTE PTR [rax],al
   1000276c0:	loopne 0x100027738
   1000276c2:	add    al,BYTE PTR [rax]
	...
   1000276cc:	add    DWORD PTR [rax],eax
   1000276ce:	add    BYTE PTR [rax],al
   1000276d0:	call   0x10002794b
	...
   1000276dd:	add    BYTE PTR [rax],al
   1000276df:	add    bh,bh
   1000276e1:	(bad)  
   1000276e2:	(bad)  
   1000276e3:	call   QWORD PTR [rax+0xb]
   1000276e6:	add    al,BYTE PTR [rax]
   1000276e8:	add    BYTE PTR [rsi+0x1],al
   1000276eb:	add    bh,bh
   1000276ed:	(bad)  
   1000276ee:	(bad)  
   1000276ef:	jmp    QWORD PTR [rdx]
   1000276f1:	add    eax,0x51993
   1000276f6:	add    BYTE PTR [rax],al
   1000276f8:	sbb    BYTE PTR [rdi+0x2],dh
	...
   100027703:	add    BYTE PTR [rbx],al
   100027705:	add    BYTE PTR [rax],al
   100027707:	add    BYTE PTR [rax+0x77],al
   10002770a:	add    al,BYTE PTR [rax]
   10002770c:	and    BYTE PTR [rax],al
	...
   100027716:	add    BYTE PTR [rax],al
   100027718:	(bad)  
   100027719:	(bad)  
   10002771a:	(bad)  
   10002771b:	push   rax
   10002771d:	or     al,BYTE PTR [rdx]
   10002771f:	add    bh,bh
   100027721:	(bad)  
   100027722:	(bad)  
   100027723:	inc    DWORD PTR [rax]
   100027725:	or     eax,DWORD PTR [rdx]
   100027727:	add    bh,bh
   100027729:	(bad)  
   10002772a:	(bad)  
   10002772b:	call   QWORD PTR [rax]
   10002772d:	or     eax,DWORD PTR [rdx]
   10002772f:	add    bh,bh
   100027731:	(bad)  
   100027732:	(bad)  
   100027733:	jmp    QWORD PTR [rax]
   100027735:	or     eax,DWORD PTR [rdx]
   100027737:	add    bh,bh
   100027739:	(bad)  
   10002773a:	(bad)  
   10002773b:	push   QWORD PTR [rax]
   10002773d:	or     eax,DWORD PTR [rdx]
   10002773f:	add    al,dl
   100027741:	rex.RXB add DWORD PTR [r8],r8d
   100027744:	(bad)  
   100027745:	(bad)  
   100027746:	(bad)  
   100027747:	dec    DWORD PTR [rsi]
   100027749:	add    QWORD PTR [rax],rax
   10002774c:	add    al,BYTE PTR [rax]
   10002774e:	add    BYTE PTR [rax],al
   100027750:	add    QWORD PTR ds:[rax],rax
   100027754:	(bad)  
   100027755:	(bad)  
   100027756:	(bad)  
   100027757:	jmp    QWORD PTR [rdx]
   100027759:	add    eax,0x51993
   10002775e:	add    BYTE PTR [rax],al
   100027760:	xor    BYTE PTR [rdi+0x2],0x0
	...
   10002776c:	add    eax,DWORD PTR [rax]
   10002776e:	add    BYTE PTR [rax],al
   100027770:	test   al,0x77
   100027772:	add    al,BYTE PTR [rax]
   100027774:	and    BYTE PTR [rax],al
	...
   10002777e:	add    BYTE PTR [rax],al
   100027780:	(bad)  
   100027781:	(bad)  
   100027782:	(bad)  
   100027783:	jmp    QWORD PTR [rax-0xfffdf6]
   100027789:	(bad)  
   10002778a:	(bad)  
   10002778b:	push   QWORD PTR [rax-0xfffdf6]
   100027791:	(bad)  
   100027792:	(bad)  
   100027793:	inc    eax
   100027795:	or     al,BYTE PTR [rdx]
   100027797:	add    bh,bh
   100027799:	(bad)  
   10002779a:	(bad)  
   10002779b:	call   rax
   10002779d:	or     al,BYTE PTR [rdx]
   10002779f:	add    bh,bh
   1000277a1:	(bad)  
   1000277a2:	(bad)  
   1000277a3:	jmp    rax
   1000277a5:	or     al,BYTE PTR [rdx]
   1000277a7:	add    BYTE PTR [rax+0x48],ah
   1000277aa:	add    DWORD PTR [rax],eax
   1000277ac:	(bad)  
   1000277ad:	(bad)  
   1000277ae:	(bad)  
   1000277af:	call   FWORD PTR [rsi+0x2000148]
   1000277b5:	add    BYTE PTR [rax],al
   1000277b7:	add    dl,cl
   1000277b9:	add    QWORD PTR [rax],rax
   1000277bc:	(bad)  
   1000277bd:	(bad)  
   1000277be:	(bad)  
   1000277bf:	jmp    QWORD PTR [rdx]
   1000277c1:	add    eax,0x21993
   1000277c6:	add    BYTE PTR [rax],al
   1000277c8:	call   0x100027a44
   1000277cd:	add    BYTE PTR [rax],al
   1000277cf:	add    BYTE PTR [rax],al
   1000277d1:	add    BYTE PTR [rax],al
   1000277d3:	add    BYTE PTR [rcx],al
   1000277d5:	add    BYTE PTR [rax],al
   1000277d7:	add    al,bh
   1000277d9:	ja     0x1000277dd
   1000277db:	add    BYTE PTR [rax],ah
	...
   1000277e5:	add    BYTE PTR [rax],al
   1000277e7:	add    bh,bh
   1000277e9:	(bad)  
   1000277ea:	(bad)  
   1000277eb:	push   QWORD PTR [rax+0xb]
   1000277ee:	add    al,BYTE PTR [rax]
   1000277f0:	(bad)  
   1000277f1:	(bad)  
   1000277f2:	(bad)  
   1000277f3:	inc    DWORD PTR [rax+0x20b]
   1000277f9:	rex.WXB add QWORD PTR [r8],rax
   1000277fc:	(bad)  
   1000277fd:	(bad)  
   1000277fe:	(bad)  
   1000277ff:	jmp    QWORD PTR [rdx]
   100027801:	add    eax,0x11993
   100027806:	add    BYTE PTR [rax],al
   100027808:	sub    BYTE PTR [rax+0x2],bh
	...
   100027813:	add    BYTE PTR [rcx],al
   100027815:	add    BYTE PTR [rax],al
   100027817:	add    BYTE PTR [rax],dh
   100027819:	js     0x10002781d
   10002781b:	add    BYTE PTR [rax],ah
	...
   100027825:	add    BYTE PTR [rax],al
   100027827:	add    bh,bh
   100027829:	(bad)  
   10002782a:	(bad)  
   10002782b:	inc    DWORD PTR [rax+0xb]
   10002782e:	add    al,BYTE PTR [rax]
   100027830:	push   rax
   100027831:	rex.WXB add QWORD PTR [r8],rax
   100027834:	(bad)  
   100027835:	(bad)  
   100027836:	(bad)  
   100027837:	jmp    QWORD PTR [rdx]
   100027839:	add    eax,0x11993
   10002783e:	add    BYTE PTR [rax],al
   100027840:	(bad)  
   100027841:	js     0x100027845
	...
   10002784b:	add    BYTE PTR [rcx],al
   10002784d:	add    BYTE PTR [rax],al
   10002784f:	add    BYTE PTR [rax+0x78],ch
   100027852:	add    al,BYTE PTR [rax]
	...
   100027860:	(bad)  
   100027861:	(bad)  
   100027862:	(bad)  
   100027863:	jmp    QWORD PTR [rax+0xb]
   100027866:	add    al,BYTE PTR [rax]
   100027868:	lock rex.WRX add QWORD PTR [rax],r8
   10002786c:	(bad)  
   10002786d:	(bad)  
   10002786e:	(bad)  
   10002786f:	jmp    QWORD PTR [rdx]
   100027871:	add    eax,0x91993
   100027876:	add    BYTE PTR [rax],al
   100027878:	cwde   
   100027879:	js     0x10002787d
   10002787b:	add    BYTE PTR [rdx],al
   10002787d:	add    BYTE PTR [rax],al
   10002787f:	add    BYTE PTR [rax+0x79],al
   100027882:	add    al,BYTE PTR [rax]
   100027884:	or     al,0x0
   100027886:	add    BYTE PTR [rax],al
   100027888:	loopne 0x100027902
   10002788a:	add    al,BYTE PTR [rax]
   10002788c:	sub    BYTE PTR [rax],al
	...
   100027896:	add    BYTE PTR [rax],al
   100027898:	(bad)  
   100027899:	(bad)  
   10002789a:	(bad)  
   10002789b:	jmp    QWORD PTR [rax-0xfffdfa]
   1000278a1:	(bad)  
   1000278a2:	(bad)  
   1000278a3:	push   QWORD PTR [rax+0x1000206]
   1000278a9:	add    BYTE PTR [rax],al
   1000278ab:	add    al,al
   1000278ad:	(bad)  
   1000278ae:	add    al,BYTE PTR [rax]
   1000278b0:	add    al,BYTE PTR [rax]
   1000278b2:	add    BYTE PTR [rax],al
   1000278b4:	add    BYTE PTR [rax],al
   1000278b6:	add    BYTE PTR [rax],al
   1000278b8:	add    eax,DWORD PTR [rax]
   1000278ba:	add    BYTE PTR [rax],al
   1000278bc:	rol    BYTE PTR [rsi],1
   1000278be:	add    al,BYTE PTR [rax]
   1000278c0:	add    al,BYTE PTR [rax]
   1000278c2:	add    BYTE PTR [rax],al
   1000278c4:	add    BYTE PTR [rax],al
   1000278c6:	add    BYTE PTR [rax],al
   1000278c8:	add    eax,0x0
   1000278cd:	add    BYTE PTR [rax],al
   1000278cf:	add    BYTE PTR [rip+0x0],al        # 0x1000278d5
   1000278d5:	add    BYTE PTR [rax],al
   1000278d7:	add    bh,bh
   1000278d9:	(bad)  
   1000278da:	(bad)  
   1000278db:	inc    DWORD PTR [rax+0x7]
   1000278de:	add    al,BYTE PTR [rax]
   1000278e0:	and    BYTE PTR [rdi+0x1],cl
   1000278e3:	add    bh,bh
   1000278e5:	(bad)  
   1000278e6:	(bad)  
   1000278e7:	dec    DWORD PTR [rdi+rcx*2+0x1]
   1000278eb:	add    BYTE PTR [rax],al
   1000278ed:	add    BYTE PTR [rax],al
   1000278ef:	add    BYTE PTR [rbx+0x4f],bh
   1000278f2:	add    DWORD PTR [rax],eax
   1000278f4:	add    DWORD PTR [rax],eax
   1000278f6:	add    BYTE PTR [rax],al
   1000278f8:	sub    BYTE PTR [rax+0x1],dl
   1000278fb:	add    BYTE PTR [rbx],al
   1000278fd:	add    BYTE PTR [rax],al
   1000278ff:	add    BYTE PTR [rdx],bh
   100027901:	push   rax
   100027902:	add    DWORD PTR [rax],eax
   100027904:	add    al,0x0
   100027906:	add    BYTE PTR [rax],al
   100027908:	push   rbx
   100027909:	push   rax
   10002790a:	add    DWORD PTR [rax],eax
   10002790c:	add    eax,DWORD PTR [rax]
   10002790e:	add    BYTE PTR [rax],al
   100027910:	pop    rsi
   100027911:	push   rax
   100027912:	add    DWORD PTR [rax],eax
   100027914:	add    al,BYTE PTR [rax]
   100027916:	add    BYTE PTR [rax],al
   100027918:	fst    QWORD PTR [rax+0x1]
   10002791b:	add    BYTE PTR [rcx],al
   10002791d:	add    BYTE PTR [rax],al
   10002791f:	add    BYTE PTR [rdx+0x51],dl
   100027922:	add    DWORD PTR [rax],eax
   100027924:	(bad)  
   100027925:	(bad)  
   100027926:	(bad)  
   100027927:	jmp    rax
   100027929:	(bad)  
   10002792a:	add    al,BYTE PTR [rax]
   10002792c:	add    BYTE PTR [rax],al
   10002792e:	add    BYTE PTR [rax],al
   100027930:	in     eax,dx
   100027931:	(bad)  
   100027932:	add    al,BYTE PTR [rax]
   100027934:	(bad)  
   100027935:	add    BYTE PTR [rax],al
   100027937:	add    BYTE PTR [rsi],al
   100027939:	(bad)  
   10002793a:	add    al,BYTE PTR [rax]
   10002793c:	add    BYTE PTR [rax],al
   10002793e:	add    BYTE PTR [rax],al
   100027940:	add    eax,DWORD PTR [rax]
   100027942:	add    BYTE PTR [rax],al
   100027944:	add    al,0x0
   100027946:	add    BYTE PTR [rax],al
   100027948:	(bad)  
   100027949:	add    BYTE PTR [rax],al
   10002794b:	add    BYTE PTR [rcx],al
   10002794d:	add    BYTE PTR [rax],al
   10002794f:	add    BYTE PTR [rax+0x79],ch
   100027952:	add    al,BYTE PTR [rax]
   100027954:	(bad)  
   100027955:	add    BYTE PTR [rax],al
   100027957:	add    BYTE PTR [rsi],al
   100027959:	add    BYTE PTR [rax],al
   10002795b:	add    BYTE PTR [rdi],al
   10002795d:	add    BYTE PTR [rax],al
   10002795f:	add    BYTE PTR [rcx],al
   100027961:	add    BYTE PTR [rax],al
   100027963:	add    BYTE PTR [rcx+rdi*2+0x2],bh
   100027967:	add    BYTE PTR [rax],al
   100027969:	add    BYTE PTR [rax],al
   10002796b:	add    BYTE PTR [rax+0x50000292],cl
   100027971:	add    BYTE PTR [rax],al
   100027973:	add    al,ah
   100027975:	(bad)  
   100027976:	add    al,BYTE PTR [rax]
   100027978:	cmp    BYTE PTR [rax],al
   10002797a:	add    BYTE PTR [rax],al
   10002797c:	add    BYTE PTR [rax],al
   10002797e:	add    BYTE PTR [rax],al
   100027980:	pop    rax
   100027981:	xchg   edx,eax
   100027982:	add    al,BYTE PTR [rax]
   100027984:	mov    BYTE PTR [rax],al
   100027986:	add    BYTE PTR [rax],al
   100027988:	and    BYTE PTR [rdi],al
   10002798a:	add    al,BYTE PTR [rax]
   10002798c:	cmp    BYTE PTR [rax],al
   10002798e:	add    BYTE PTR [rax],al
   100027990:	and    al,BYTE PTR [rip+0x11993]        # 0x100039329
   100027996:	add    BYTE PTR [rax],al
   100027998:	mov    eax,0x279
   10002799d:	add    BYTE PTR [rax],al
   10002799f:	add    BYTE PTR [rax],al
   1000279a1:	add    BYTE PTR [rax],al
   1000279a3:	add    BYTE PTR [rbx],al
   1000279a5:	add    BYTE PTR [rax],al
   1000279a7:	add    al,al
   1000279a9:	jns    0x1000279ad
   1000279ab:	add    BYTE PTR [rax+0x0],cl
   1000279b1:	add    BYTE PTR [rax],al
   1000279b3:	add    BYTE PTR [rax],al
   1000279b5:	add    BYTE PTR [rax],al
   1000279b7:	add    bh,bh
   1000279b9:	(bad)  
   1000279ba:	(bad)  
   1000279bb:	call   QWORD PTR [rax+0xc]
   1000279be:	add    al,BYTE PTR [rax]
   1000279c0:	xor    BYTE PTR [rax+0x1],ch
   1000279c3:	add    bh,bh
   1000279c5:	(bad)  
   1000279c6:	(bad)  
   1000279c7:	call   FWORD PTR [rax+rbp*2+0x1]
   1000279cb:	add    BYTE PTR [rax],al
   1000279cd:	add    BYTE PTR [rax],al
   1000279cf:	add    al,cl
   1000279d1:	push   0xffffffffffff0001
   1000279d6:	(bad)  
   1000279d7:	jmp    QWORD PTR [rdx]
   1000279d9:	add    eax,0x11993
   1000279de:	add    BYTE PTR [rax],al
   1000279e0:	add    BYTE PTR [rdx+0x2],bh
	...
   1000279eb:	add    BYTE PTR [rbx],al
   1000279ed:	add    BYTE PTR [rax],al
   1000279ef:	add    BYTE PTR [rax],cl
   1000279f1:	jp     0x1000279f5
   1000279f3:	add    BYTE PTR [rax],dh
	...
   1000279fd:	add    BYTE PTR [rax],al
   1000279ff:	add    bh,bh
   100027a01:	(bad)  
   100027a02:	(bad)  
   100027a03:	inc    DWORD PTR [rax-0x6ffffdf4]
   100027a09:	imul   eax,DWORD PTR [rcx],0xffffff00
   100027a0f:	call   rbp
   100027a11:	imul   eax,DWORD PTR [rcx],0x0
   100027a17:	add    BYTE PTR [rbx],bl
   100027a19:	push   0x1
   100027a1b:	add    bh,bh
   100027a1d:	(bad)  
   100027a1e:	(bad)  
   100027a1f:	jmp    QWORD PTR [rdx]
   100027a21:	add    eax,0x11993
   100027a26:	add    BYTE PTR [rax],al
   100027a28:	rex.W jp 0x100027a2d
	...
   100027a33:	add    BYTE PTR [rbx],al
   100027a35:	add    BYTE PTR [rax],al
   100027a37:	add    BYTE PTR [rax+0x7a],dl
   100027a3a:	add    al,BYTE PTR [rax]
   100027a3c:	and    BYTE PTR [rax],al
	...
   100027a46:	add    BYTE PTR [rax],al
   100027a48:	(bad)  
   100027a49:	(bad)  
   100027a4a:	(bad)  
   100027a4b:	call   QWORD PTR [rax]
   100027a4d:	add    BYTE PTR [rdx],al
   100027a4f:	add    BYTE PTR [rax],ah
   100027a51:	or     eax,0xffff0002
   100027a56:	(bad)  
   100027a57:	(bad)  
   100027a58:	cmp    ecx,DWORD PTR [rip+0x2]        # 0x100027a60
   100027a5e:	add    BYTE PTR [rax],al
   100027a60:	rex.WB or rax,0xffffffffffff0002
   100027a66:	(bad)  
   100027a67:	jmp    QWORD PTR [rdx]
   100027a69:	add    eax,0x11993
   100027a6e:	add    BYTE PTR [rax],al
   100027a70:	nop
   100027a71:	jp     0x100027a75
	...
   100027a7b:	add    BYTE PTR [rcx],al
   100027a7d:	add    BYTE PTR [rax],al
   100027a7f:	add    BYTE PTR [rax+0x2000027a],bl
	...
   100027a8d:	add    BYTE PTR [rax],al
   100027a8f:	add    bh,bh
   100027a91:	(bad)  
   100027a92:	(bad)  
   100027a93:	push   QWORD PTR [rax-0x1ffffe02]
   100027a99:	or     eax,0xffff0002
   100027a9e:	(bad)  
   100027a9f:	jmp    QWORD PTR [rdx]
   100027aa1:	add    eax,0x11993
   100027aa6:	add    BYTE PTR [rax],al
   100027aa8:	enter  0x27a,0x0
	...
   100027ab4:	add    DWORD PTR [rax],eax
   100027ab6:	add    BYTE PTR [rax],al
   100027ab8:	sar    BYTE PTR [rdx+0x2],1
   100027abb:	add    BYTE PTR [rax],ah
	...
   100027ac5:	add    BYTE PTR [rax],al
   100027ac7:	add    bh,bh
   100027ac9:	(bad)  
   100027aca:	(bad)  
   100027acb:	call   QWORD PTR [rax+0x200001fe]
   100027ad1:	(bad)  
   100027ad2:	add    al,BYTE PTR [rax]
   100027ad4:	(bad)  
   100027ad5:	(bad)  
   100027ad6:	(bad)  
   100027ad7:	jmp    QWORD PTR [rdx]
   100027ad9:	add    eax,0x11993
   100027ade:	add    BYTE PTR [rax],al
   100027ae0:	add    BYTE PTR [rbx+0x2],bh
	...
   100027aeb:	add    BYTE PTR [rcx],al
   100027aed:	add    BYTE PTR [rax],al
   100027aef:	add    BYTE PTR [rax],cl
   100027af1:	jnp    0x100027af5
   100027af3:	add    BYTE PTR [rax],ah
	...
   100027afd:	add    BYTE PTR [rax],al
   100027aff:	add    bh,bh
   100027b01:	(bad)  
   100027b02:	(bad)  
   100027b03:	call   rax
   100027b05:	inc    DWORD PTR [rcx]
   100027b07:	add    BYTE PTR [rax+0xe],ah
   100027b0a:	add    al,BYTE PTR [rax]
   100027b0c:	(bad)  
   100027b0d:	(bad)  
   100027b0e:	(bad)  
   100027b0f:	jmp    QWORD PTR [rdx]
   100027b11:	add    eax,0x11993
   100027b16:	add    BYTE PTR [rax],al
   100027b18:	cmp    BYTE PTR [rbx+0x2],bh
	...
   100027b23:	add    BYTE PTR [rcx],al
   100027b25:	add    BYTE PTR [rax],al
   100027b27:	add    BYTE PTR [rax+0x7b],al
   100027b2a:	add    al,BYTE PTR [rax]
   100027b2c:	and    BYTE PTR [rax],al
	...
   100027b36:	add    BYTE PTR [rax],al
   100027b38:	(bad)  
   100027b39:	(bad)  
   100027b3a:	(bad)  
   100027b3b:	call   rax
   100027b3d:	inc    BYTE PTR [rcx]
   100027b3f:	add    BYTE PTR [rax-0xfffdf2],dl
   100027b45:	(bad)  
   100027b46:	(bad)  
   100027b47:	jmp    QWORD PTR [rdx]
   100027b49:	add    eax,0x11993
   100027b4e:	add    BYTE PTR [rax],al
   100027b50:	jo     0x100027bcd
   100027b52:	add    al,BYTE PTR [rax]
	...
   100027b5c:	add    DWORD PTR [rax],eax
   100027b5e:	add    BYTE PTR [rax],al
   100027b60:	js     0x100027bdd
   100027b62:	add    al,BYTE PTR [rax]
   100027b64:	and    BYTE PTR [rax],al
	...
   100027b6e:	add    BYTE PTR [rax],al
   100027b70:	(bad)  
   100027b71:	(bad)  
   100027b72:	(bad)  
   100027b73:	call   QWORD PTR [rax-0x3ffffe01]
   100027b79:	(bad)  
   100027b7a:	add    al,BYTE PTR [rax]
   100027b7c:	(bad)  
   100027b7d:	(bad)  
   100027b7e:	(bad)  
   100027b7f:	jmp    QWORD PTR [rdx]
   100027b81:	add    eax,0x11993
   100027b86:	add    BYTE PTR [rax],al
   100027b88:	test   al,0x7b
   100027b8a:	add    al,BYTE PTR [rax]
	...
   100027b94:	add    DWORD PTR [rax],eax
   100027b96:	add    BYTE PTR [rax],al
   100027b98:	mov    al,0x7b
   100027b9a:	add    al,BYTE PTR [rax]
   100027b9c:	and    BYTE PTR [rax],al
	...
   100027ba6:	add    BYTE PTR [rax],al
   100027ba8:	(bad)  
   100027ba9:	(bad)  
   100027baa:	(bad)  
   100027bab:	push   QWORD PTR [rax]
   100027bad:	inc    DWORD PTR [rcx]
   100027baf:	add    al,dh
   100027bb1:	(bad)  
   100027bb2:	add    al,BYTE PTR [rax]
   100027bb4:	(bad)  
   100027bb5:	(bad)  
   100027bb6:	(bad)  
   100027bb7:	jmp    QWORD PTR [rdx]
   100027bb9:	add    eax,0x11993
   100027bbe:	add    BYTE PTR [rax],al
   100027bc0:	loopne 0x100027c3d
   100027bc2:	add    al,BYTE PTR [rax]
	...
   100027bcc:	add    DWORD PTR [rax],eax
   100027bce:	add    BYTE PTR [rax],al
   100027bd0:	call   0x120027e50
	...
   100027bdd:	add    BYTE PTR [rax],al
   100027bdf:	add    bh,bh
   100027be1:	(bad)  
   100027be2:	(bad)  
   100027be3:	call   QWORD PTR [rax]
   100027be5:	inc    DWORD PTR [rcx]
   100027be7:	add    BYTE PTR [rax],ah
   100027be9:	lar    eax,WORD PTR [rax]
   100027bec:	(bad)  
   100027bed:	(bad)  
   100027bee:	(bad)  
   100027bef:	jmp    QWORD PTR [rdx]
   100027bf1:	add    eax,0x11993
   100027bf6:	add    BYTE PTR [rax],al
   100027bf8:	sbb    BYTE PTR [rdx+rax*1+0x0],bh
	...
   100027c04:	add    DWORD PTR [rax],eax
   100027c06:	add    BYTE PTR [rax],al
   100027c08:	and    BYTE PTR [rdx+rax*1+0x0],bh
   100027c0c:	and    BYTE PTR [rax],al
	...
   100027c16:	add    BYTE PTR [rax],al
   100027c18:	(bad)  
   100027c19:	(bad)  
   100027c1a:	(bad)  
   100027c1b:	push   QWORD PTR [rax-0x1]
   100027c1e:	add    DWORD PTR [rax],eax
   100027c20:	(bad)  
   100027c21:	lar    eax,WORD PTR [rax]
   100027c24:	(bad)  
   100027c25:	(bad)  
   100027c26:	(bad)  
   100027c27:	jmp    QWORD PTR [rdx]
   100027c29:	add    eax,0x11993
   100027c2e:	add    BYTE PTR [rax],al
   100027c30:	push   rax
   100027c31:	jl     0x100027c35
	...
   100027c3b:	add    BYTE PTR [rcx],al
   100027c3d:	add    BYTE PTR [rax],al
   100027c3f:	add    BYTE PTR [rax+0x7c],bl
   100027c42:	add    al,BYTE PTR [rax]
   100027c44:	and    BYTE PTR [rax],al
	...
   100027c4e:	add    BYTE PTR [rax],al
   100027c50:	(bad)  
   100027c51:	(bad)  
   100027c52:	(bad)  
   100027c53:	push   QWORD PTR [rax-0x6ffffe01]
   100027c59:	lar    eax,WORD PTR [rax]
   100027c5c:	(bad)  
   100027c5d:	(bad)  
   100027c5e:	(bad)  
   100027c5f:	jmp    QWORD PTR [rdx]
   100027c61:	add    eax,0x11993
   100027c66:	add    BYTE PTR [rax],al
   100027c68:	mov    BYTE PTR [rdx+rax*1+0x0],bh
	...
   100027c74:	add    DWORD PTR [rax],eax
   100027c76:	add    BYTE PTR [rax],al
   100027c78:	nop
   100027c79:	jl     0x100027c7d
   100027c7b:	add    BYTE PTR [rax],ah
	...
   100027c85:	add    BYTE PTR [rax],al
   100027c87:	add    bh,bh
   100027c89:	(bad)  
   100027c8a:	(bad)  
   100027c8b:	push   rax
   100027c8d:	inc    DWORD PTR [rcx]
   100027c8f:	add    al,al
   100027c91:	lar    eax,WORD PTR [rax]
   100027c94:	(bad)  
   100027c95:	(bad)  
   100027c96:	(bad)  
   100027c97:	jmp    QWORD PTR [rdx]
   100027c99:	add    eax,0x11993
   100027c9e:	add    BYTE PTR [rax],al
   100027ca0:	sar    BYTE PTR [rdx+rax*1+0x0],0x0
   100027ca5:	add    BYTE PTR [rax],al
   100027ca7:	add    BYTE PTR [rax],al
   100027ca9:	add    BYTE PTR [rax],al
   100027cab:	add    BYTE PTR [rcx],al
   100027cad:	add    BYTE PTR [rax],al
   100027caf:	add    al,cl
   100027cb1:	jl     0x100027cb5
   100027cb3:	add    BYTE PTR [rax],ah
	...
   100027cbd:	add    BYTE PTR [rax],al
   100027cbf:	add    bh,bh
   100027cc1:	(bad)  
   100027cc2:	(bad)  
   100027cc3:	push   rax
   100027cc5:	inc    BYTE PTR [rcx]
   100027cc7:	add    al,dh
   100027cc9:	lar    eax,WORD PTR [rax]
   100027ccc:	(bad)  
   100027ccd:	(bad)  
   100027cce:	(bad)  
   100027ccf:	jmp    QWORD PTR [rdx]
   100027cd1:	add    eax,0x11993
   100027cd6:	add    BYTE PTR [rax],al
   100027cd8:	clc    
   100027cd9:	jl     0x100027cdd
	...
   100027ce3:	add    BYTE PTR [rcx],al
   100027ce5:	add    BYTE PTR [rax],al
   100027ce7:	add    BYTE PTR [rax],al
   100027ce9:	jge    0x100027ced
   100027ceb:	add    BYTE PTR [rax],ah
	...
   100027cf5:	add    BYTE PTR [rax],al
   100027cf7:	add    bh,bh
   100027cf9:	(bad)  
   100027cfa:	(bad)  
   100027cfb:	call   QWORD PTR [rax-0x1]
   100027cfe:	add    DWORD PTR [rax],eax
   100027d00:	xor    BYTE PTR [rax],dl
   100027d02:	add    al,BYTE PTR [rax]
   100027d04:	(bad)  
   100027d05:	(bad)  
   100027d06:	(bad)  
   100027d07:	jmp    QWORD PTR [rdx]
   100027d09:	add    eax,0x41993
   100027d0e:	add    BYTE PTR [rax],al
   100027d10:	xor    BYTE PTR [rbp+0x2],bh
	...
   100027d1b:	add    BYTE PTR [rsi],al
   100027d1d:	add    BYTE PTR [rax],al
   100027d1f:	add    BYTE PTR [rax+0x7d],dl
   100027d22:	add    al,BYTE PTR [rax]
   100027d24:	and    BYTE PTR [rax],al
	...
   100027d2e:	add    BYTE PTR [rax],al
   100027d30:	(bad)  
   100027d31:	(bad)  
   100027d32:	(bad)  
   100027d33:	call   QWORD PTR [rax+0x202]
   100027d39:	add    BYTE PTR [rax],al
   100027d3b:	add    BYTE PTR [rax+0x1000202],ah
   100027d41:	add    BYTE PTR [rax],al
   100027d43:	add    BYTE PTR [rax+0x2000202],dh
   100027d49:	add    BYTE PTR [rax],al
   100027d4b:	add    al,al
   100027d4d:	add    al,BYTE PTR [rdx]
   100027d4f:	add    BYTE PTR [rax-0xfffdf0],dl
   100027d55:	(bad)  
   100027d56:	(bad)  
   100027d57:	call   FWORD PTR [rbp+0x210]
   100027d5d:	add    BYTE PTR [rax],al
   100027d5f:	add    BYTE PTR [rsi+0x1000210],ah
   100027d65:	add    BYTE PTR [rax],al
   100027d67:	add    BYTE PTR [rbp+0x2000210],ch
   100027d6d:	add    BYTE PTR [rax],al
   100027d6f:	add    al,dl
   100027d71:	adc    BYTE PTR [rdx],al
   100027d73:	add    BYTE PTR [rbx],al
   100027d75:	add    BYTE PTR [rax],al
   100027d77:	add    ah,ch
   100027d79:	adc    BYTE PTR [rdx],al
   100027d7b:	add    bh,bh
   100027d7d:	(bad)  
   100027d7e:	(bad)  
   100027d7f:	jmp    QWORD PTR [rdx]
   100027d81:	add    eax,0x41993
   100027d86:	add    BYTE PTR [rax],al
   100027d88:	test   al,0x7d
   100027d8a:	add    al,BYTE PTR [rax]
	...
   100027d94:	(bad)  
   100027d95:	add    BYTE PTR [rax],al
   100027d97:	add    al,cl
   100027d99:	jge    0x100027d9d
   100027d9b:	add    BYTE PTR [rax],ah
	...
   100027da5:	add    BYTE PTR [rax],al
   100027da7:	add    bh,bh
   100027da9:	(bad)  
   100027daa:	(bad)  
   100027dab:	jmp    rax
   100027dad:	add    al,BYTE PTR [rdx]
   100027daf:	add    BYTE PTR [rax],al
   100027db1:	add    BYTE PTR [rax],al
   100027db3:	add    al,dh
   100027db5:	add    al,BYTE PTR [rdx]
   100027db7:	add    BYTE PTR [rcx],al
   100027db9:	add    BYTE PTR [rax],al
   100027dbb:	add    BYTE PTR [rax],al
   100027dbd:	add    eax,DWORD PTR [rdx]
   100027dbf:	add    BYTE PTR [rdx],al
   100027dc1:	add    BYTE PTR [rax],al
   100027dc3:	add    BYTE PTR [rax],dl
   100027dc5:	add    eax,DWORD PTR [rdx]
   100027dc7:	add    BYTE PTR [rax],dl
   100027dc9:	adc    DWORD PTR [rdx],eax
   100027dcb:	add    bh,bh
   100027dcd:	(bad)  
   100027dce:	(bad)  
   100027dcf:	call   FWORD PTR [rip+0x211]        # 0x100027fe6
   100027dd5:	add    BYTE PTR [rax],al
   100027dd7:	add    BYTE PTR [rsi],ah
   100027dd9:	adc    DWORD PTR [rdx],eax
   100027ddb:	add    BYTE PTR [rcx],al
   100027ddd:	add    BYTE PTR [rax],al
   100027ddf:	add    BYTE PTR [rip+0x2000211],ch        # 0x102027ff6
   100027de5:	add    BYTE PTR [rax],al
   100027de7:	add    BYTE PTR [rax+0x11],dl
   100027dea:	add    al,BYTE PTR [rax]
   100027dec:	add    eax,DWORD PTR [rax]
   100027dee:	add    BYTE PTR [rax],al
   100027df0:	ins    BYTE PTR es:[rdi],dx
   100027df1:	adc    DWORD PTR [rdx],eax
   100027df3:	add    bh,bh
   100027df5:	(bad)  
   100027df6:	(bad)  
   100027df7:	jmp    QWORD PTR [rdx]
   100027df9:	add    eax,0x11993
   100027dfe:	add    BYTE PTR [rax],al
   100027e00:	and    BYTE PTR [rsi+0x2],bh
	...
   100027e0b:	add    BYTE PTR [rcx],al
   100027e0d:	add    BYTE PTR [rax],al
   100027e0f:	add    BYTE PTR [rax],ch
   100027e11:	jle    0x100027e15
   100027e13:	add    BYTE PTR [rax],ah
	...
   100027e1d:	add    BYTE PTR [rax],al
   100027e1f:	add    bh,bh
   100027e21:	(bad)  
   100027e22:	(bad)  
   100027e23:	call   rax
   100027e25:	add    DWORD PTR [rdx],eax
   100027e27:	add    BYTE PTR [rax+0x1d],al
   100027e2a:	add    al,BYTE PTR [rax]
   100027e2c:	(bad)  
   100027e2d:	(bad)  
   100027e2e:	(bad)  
   100027e2f:	jmp    QWORD PTR [rdx]
   100027e31:	add    eax,0x11993
   100027e36:	add    BYTE PTR [rax],al
   100027e38:	pop    rax
   100027e39:	jle    0x100027e3d
	...
   100027e43:	add    BYTE PTR [rcx],al
   100027e45:	add    BYTE PTR [rax],al
   100027e47:	add    BYTE PTR [rax+0x7e],ah
   100027e4a:	add    al,BYTE PTR [rax]
	...
   100027e58:	(bad)  
   100027e59:	(bad)  
   100027e5a:	(bad)  
   100027e5b:	call   QWORD PTR [rax+0x0]
   100027e5e:	add    al,BYTE PTR [rax]
   100027e60:	jo     0x100027e7f
   100027e62:	add    al,BYTE PTR [rax]
   100027e64:	(bad)  
   100027e65:	(bad)  
   100027e66:	(bad)  
   100027e67:	jmp    QWORD PTR [rdx]
   100027e69:	add    eax,0x11993
   100027e6e:	add    BYTE PTR [rax],al
   100027e70:	nop
   100027e71:	jle    0x100027e75
	...
   100027e7b:	add    BYTE PTR [rcx],al
   100027e7d:	add    BYTE PTR [rax],al
   100027e7f:	add    BYTE PTR [rax+0x27e],bl
	...
   100027e8d:	add    BYTE PTR [rax],al
   100027e8f:	add    bh,bh
   100027e91:	(bad)  
   100027e92:	(bad)  
   100027e93:	push   QWORD PTR [rax]
   100027e95:	add    BYTE PTR [rdx],al
   100027e97:	add    al,al
   100027e99:	sbb    eax,0xffff0002
   100027e9e:	(bad)  
   100027e9f:	jmp    QWORD PTR [rdx]
   100027ea1:	add    eax,0x11993
   100027ea6:	add    BYTE PTR [rax],al
   100027ea8:	enter  0x27e,0x0
	...
   100027eb4:	add    DWORD PTR [rax],eax
   100027eb6:	add    BYTE PTR [rax],al
   100027eb8:	sar    BYTE PTR [rsi+0x2],1
	...
   100027ec7:	add    bh,bh
   100027ec9:	(bad)  
   100027eca:	(bad)  
   100027ecb:	push   QWORD PTR [rax+0x1]
   100027ece:	add    al,BYTE PTR [rax]
   100027ed0:	adc    BYTE PTR [rsi],bl
   100027ed2:	add    al,BYTE PTR [rax]
   100027ed4:	(bad)  
   100027ed5:	(bad)  
   100027ed6:	(bad)  
   100027ed7:	jmp    QWORD PTR [rdx]
   100027ed9:	add    eax,0x11993
   100027ede:	add    BYTE PTR [rax],al
   100027ee0:	add    BYTE PTR [rdi+0x2],bh
	...
   100027eeb:	add    BYTE PTR [rcx],al
   100027eed:	add    BYTE PTR [rax],al
   100027eef:	add    BYTE PTR [rax],cl
   100027ef1:	jg     0x100027ef5
	...
   100027eff:	add    bh,bh
   100027f01:	(bad)  
   100027f02:	(bad)  
   100027f03:	push   QWORD PTR [rax+0x0]
   100027f06:	add    al,BYTE PTR [rax]
   100027f08:	(bad)  
   100027f09:	(bad)  
   100027f0a:	add    al,BYTE PTR [rax]
   100027f0c:	(bad)  
   100027f0d:	(bad)  
   100027f0e:	(bad)  
   100027f0f:	jmp    QWORD PTR [rdx]
   100027f11:	add    eax,0x11993
   100027f16:	add    BYTE PTR [rax],al
   100027f18:	cmp    BYTE PTR [rdi+0x2],bh
	...
   100027f23:	add    BYTE PTR [rcx],al
   100027f25:	add    BYTE PTR [rax],al
   100027f27:	add    BYTE PTR [rax+0x7f],al
   100027f2a:	add    al,BYTE PTR [rax]
	...
   100027f38:	(bad)  
   100027f39:	(bad)  
   100027f3a:	(bad)  
   100027f3b:	push   QWORD PTR [rax]
   100027f3d:	add    DWORD PTR [rdx],eax
   100027f3f:	add    BYTE PTR [rax-0xfffde2],dh
   100027f45:	(bad)  
   100027f46:	(bad)  
   100027f47:	jmp    QWORD PTR [rdx]
   100027f49:	add    eax,0x11993
   100027f4e:	add    BYTE PTR [rax],al
   100027f50:	jo     0x100027fd1
   100027f52:	add    al,BYTE PTR [rax]
	...
   100027f5c:	add    DWORD PTR [rax],eax
   100027f5e:	add    BYTE PTR [rax],al
   100027f60:	js     0x100027fe1
   100027f62:	add    al,BYTE PTR [rax]
	...
   100027f70:	(bad)  
   100027f71:	(bad)  
   100027f72:	(bad)  
   100027f73:	call   rax
   100027f75:	add    BYTE PTR [rdx],al
   100027f77:	add    BYTE PTR [rax],al
   100027f79:	(bad)  
   100027f7a:	add    al,BYTE PTR [rax]
   100027f7c:	(bad)  
   100027f7d:	(bad)  
   100027f7e:	(bad)  
   100027f7f:	jmp    QWORD PTR [rdx]
   100027f81:	add    eax,0x11993
   100027f86:	add    BYTE PTR [rax],al
   100027f88:	test   al,0x7f
   100027f8a:	add    al,BYTE PTR [rax]
	...
   100027f94:	add    DWORD PTR [rax],eax
   100027f96:	add    BYTE PTR [rax],al
   100027f98:	mov    al,0x7f
   100027f9a:	add    al,BYTE PTR [rax]
	...
   100027fa8:	(bad)  
   100027fa9:	(bad)  
   100027faa:	(bad)  
   100027fab:	push   QWORD PTR [rax+0x50000200]
   100027fb1:	(bad)  
   100027fb2:	add    al,BYTE PTR [rax]
   100027fb4:	(bad)  
   100027fb5:	(bad)  
   100027fb6:	(bad)  
   100027fb7:	jmp    QWORD PTR [rdx]
   100027fb9:	add    eax,0x11993
   100027fbe:	add    BYTE PTR [rax],al
   100027fc0:	loopne 0x100028041
   100027fc2:	add    al,BYTE PTR [rax]
	...
   100027fcc:	add    DWORD PTR [rax],eax
   100027fce:	add    BYTE PTR [rax],al
   100027fd0:	call   0x100028254
	...
   100027fdd:	add    BYTE PTR [rax],al
   100027fdf:	add    bh,bh
   100027fe1:	(bad)  
   100027fe2:	(bad)  
   100027fe3:	call   QWORD PTR [rax]
   100027fe5:	add    DWORD PTR [rdx],eax
   100027fe7:	add    BYTE PTR [rax-0xfffde1],ah
   100027fed:	(bad)  
   100027fee:	(bad)  
   100027fef:	jmp    QWORD PTR [rdx]
   100027ff1:	add    eax,0x11993
   100027ff6:	add    BYTE PTR [rax],al
   100027ff8:	sbb    BYTE PTR [rax+0x2],al
   100027ffe:	add    BYTE PTR [rax],al
   100028000:	add    BYTE PTR [rax],al
   100028002:	add    BYTE PTR [rax],al
   100028004:	add    DWORD PTR [rax],eax
   100028006:	add    BYTE PTR [rax],al
   100028008:	and    BYTE PTR [rax+0x2],al
	...
   100028016:	add    BYTE PTR [rax],al
   100028018:	(bad)  
   100028019:	(bad)  
   10002801a:	(bad)  
   10002801b:	call   QWORD PTR [rax+0x1]
   10002801e:	add    al,BYTE PTR [rax]
   100028020:	lock (bad) 
   100028022:	add    al,BYTE PTR [rax]
   100028024:	(bad)  
   100028025:	(bad)  
   100028026:	(bad)  
   100028027:	jmp    QWORD PTR [rdx]
   100028029:	add    eax,0x11993
   10002802e:	add    BYTE PTR [rax],al
   100028030:	push   rax
   100028031:	add    BYTE PTR [rdx],0x0
	...
   10002803c:	add    DWORD PTR [rax],eax
   10002803e:	add    BYTE PTR [rax],al
   100028040:	pop    rax
   100028041:	add    BYTE PTR [rdx],0x0
	...
   100028050:	(bad)  
   100028051:	(bad)  
   100028052:	(bad)  
   100028053:	call   QWORD PTR [rax+0x40000201]
   100028059:	and    BYTE PTR [rdx],al
   10002805b:	add    bh,bh
   10002805d:	(bad)  
   10002805e:	(bad)  
   10002805f:	jmp    QWORD PTR [rdx]
   100028061:	add    eax,0x11993
   100028066:	add    BYTE PTR [rax],al
   100028068:	mov    BYTE PTR [rax+0x2],al
   10002806e:	add    BYTE PTR [rax],al
   100028070:	add    BYTE PTR [rax],al
   100028072:	add    BYTE PTR [rax],al
   100028074:	add    DWORD PTR [rax],eax
   100028076:	add    BYTE PTR [rax],al
   100028078:	nop
   100028079:	add    BYTE PTR [rdx],0x0
	...
   100028088:	(bad)  
   100028089:	(bad)  
   10002808a:	(bad)  
   10002808b:	call   QWORD PTR [rax-0x6ffffe00]
   100028091:	and    BYTE PTR [rdx],al
   100028093:	add    bh,bh
   100028095:	(bad)  
   100028096:	(bad)  
   100028097:	jmp    QWORD PTR [rdx]
   100028099:	add    eax,0x11993
   10002809e:	add    BYTE PTR [rax],al
   1000280a0:	rol    BYTE PTR [rax+0x2],0x0
   1000280a7:	add    BYTE PTR [rax],al
   1000280a9:	add    BYTE PTR [rax],al
   1000280ab:	add    BYTE PTR [rcx],al
   1000280ad:	add    BYTE PTR [rax],al
   1000280af:	add    al,cl
   1000280b1:	add    BYTE PTR [rdx],0x0
	...
   1000280c0:	(bad)  
   1000280c1:	(bad)  
   1000280c2:	(bad)  
   1000280c3:	push   rax
   1000280c5:	add    BYTE PTR [rdx],al
   1000280c7:	add    al,ah
   1000280c9:	and    BYTE PTR [rdx],al
   1000280cb:	add    bh,bh
   1000280cd:	(bad)  
   1000280ce:	(bad)  
   1000280cf:	jmp    QWORD PTR [rdx]
   1000280d1:	add    eax,0x11993
   1000280d6:	add    BYTE PTR [rax],al
   1000280d8:	clc    
   1000280d9:	add    BYTE PTR [rdx],0x0
	...
   1000280e4:	add    DWORD PTR [rax],eax
   1000280e6:	add    BYTE PTR [rax],al
   1000280e8:	add    BYTE PTR [rcx+0x200002],al
	...
   1000280f6:	add    BYTE PTR [rax],al
   1000280f8:	(bad)  
   1000280f9:	(bad)  
   1000280fa:	(bad)  
   1000280fb:	push   QWORD PTR [rax+0x30000201]
   100028101:	and    DWORD PTR [rdx],eax
   100028103:	add    bh,bh
   100028105:	(bad)  
   100028106:	(bad)  
   100028107:	.byte 0xff

Disassembly of section .data:

0000000100029000 <.data>:
   100029000:	xor    al,0x99
   100029002:	add    DWORD PTR [rax],eax
   100029004:	add    DWORD PTR [rax],eax
   100029006:	add    BYTE PTR [rax],al
   100029008:	sub    BYTE PTR [rcx+0x10001],bl
   10002900e:	add    BYTE PTR [rax],al
   100029010:	movabs al,ds:0x1000198
   100029019:	add    BYTE PTR [rax],al
   10002901b:	add    BYTE PTR [rax],al
   10002901d:	add    BYTE PTR [rax],al
   10002901f:	add    al,dl
   100029021:	cdq    
   100029022:	add    DWORD PTR [rax],eax
   100029024:	add    DWORD PTR [rax],eax
   100029026:	add    BYTE PTR [rax],al
   100029028:	rex cdq 
   10002902a:	add    DWORD PTR [rax],eax
   10002902c:	add    DWORD PTR [rax],eax
	...
   100029036:	add    BYTE PTR [rax],al
   100029038:	fcomp  QWORD PTR [rcx+0x10001]
	...
   100029046:	add    BYTE PTR [rax],al
   100029048:	sar    BYTE PTR [rbp+0x10001],1
   10002904e:	add    BYTE PTR [rax],al
   100029050:	fdivr  QWORD PTR [rbp+0x10001]
   100029056:	add    BYTE PTR [rax],al
   100029058:	call   0x10102921a
   10002905d:	add    BYTE PTR [rax],al
   10002905f:	add    ah,dh
   100029061:	mov    ebp,0x10001
   100029066:	add    BYTE PTR [rax],al
   100029068:	add    BYTE PTR [rsi+0x10001],bh
   10002906e:	add    BYTE PTR [rax],al
   100029070:	or     al,0xbe
   100029072:	add    DWORD PTR [rax],eax
   100029074:	add    DWORD PTR [rax],eax
   100029076:	add    BYTE PTR [rax],al
   100029078:	sbb    BYTE PTR [rsi+0x10001],bh
   10002907e:	add    BYTE PTR [rax],al
   100029080:	and    al,0xbe
   100029082:	add    DWORD PTR [rax],eax
   100029084:	add    DWORD PTR [rax],eax
   100029086:	add    BYTE PTR [rax],al
   100029088:	cmp    al,0xbd
   10002908a:	add    DWORD PTR [rax],eax
   10002908c:	add    DWORD PTR [rax],eax
	...
   100029096:	add    BYTE PTR [rax],al
   100029098:	mov    esp,0x10001f3
	...
   1000290dd:	add    BYTE PTR [rax],al
   1000290df:	add    al,dh
   1000290e1:	and    eax,0x10000
	...
   1000290f2:	add    BYTE PTR [rax],al
   1000290f4:	add    BYTE PTR [rcx],al
	...
   1000291ee:	add    BYTE PTR [rax],al
   1000291f0:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   1000291f6:	add    BYTE PTR [rax],al
   1000291f8:	int    0x5d
   1000291fa:	and    dl,dl
   1000291fc:	data16 (bad) 
   1000291fe:	(bad)  
   1000291ff:	jmp    QWORD PTR [rax-0x6d]
   100029202:	add    DWORD PTR [rax],eax
   100029204:	add    DWORD PTR [rax],eax
	...
   10002920e:	add    BYTE PTR [rax],al
   100029210:	cs (bad) 
   100029212:	push   r14
   100029214:	je     0x10002928f
   100029216:	jo     0x10002927d
   100029218:	pop    rdi
   100029219:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   100029220:	(bad)  
   100029221:	(bad)  
   100029222:	(bad)  
   100029223:	inc    DWORD PTR [rcx]
   100029225:	add    BYTE PTR [rax],al
   100029227:	add    al,cl
   100029229:	(bad)  
   10002922a:	add    BYTE PTR [rax],al
   10002922c:	add    DWORD PTR [rax],eax
   10002922e:	add    BYTE PTR [rax],al
   100029230:	or     eax,DWORD PTR [rax]
   100029232:	add    BYTE PTR [rax],al
   100029234:	add    BYTE PTR [rax],al
   100029236:	add    BYTE PTR [rax],al
   100029238:	loopne 0x100029261
   10002923a:	add    BYTE PTR [rax],al
   10002923c:	add    DWORD PTR [rax],eax
   10002923e:	add    BYTE PTR [rax],al
   100029240:	rex.WRB add BYTE PTR [r8],r8b
   100029243:	add    BYTE PTR [rax],al
   100029245:	add    BYTE PTR [rax],al
   100029247:	add    BYTE PTR [rax+0x1000028],al
   10002924d:	add    BYTE PTR [rax],al
   10002924f:	add    BYTE PTR [rbx],dl
   100029251:	add    BYTE PTR [rax],al
   100029253:	add    BYTE PTR [rax],al
   100029255:	add    BYTE PTR [rax],al
   100029257:	add    BYTE PTR [rax-0x6d],ah
   10002925a:	add    DWORD PTR [rax],eax
   10002925c:	add    DWORD PTR [rax],eax
	...
   100029266:	add    BYTE PTR [rax],al
   100029268:	cs (bad) 
   10002926a:	push   r14
   10002926c:	push   rbx
   10002926d:	push   0x5374726f
   100029272:	je     0x1000292d5
   100029274:	movsxd ebp,DWORD PTR [rbx+0x45]
   100029277:	js     0x1000292dc
   100029279:	gs jo  0x1000292f0
   10002927c:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   100029283:	add    BYTE PTR [rax],al
   100029285:	add    BYTE PTR [rax],al
   100029287:	add    BYTE PTR [rax-0x6d],ah
   10002928a:	add    DWORD PTR [rax],eax
   10002928c:	add    DWORD PTR [rax],eax
	...
   100029296:	add    BYTE PTR [rax],al
   100029298:	cs (bad) 
   10002929a:	push   r14
   10002929c:	push   rbx
   10002929d:	push   rcx
   10002929e:	rex.WR
   10002929f:	rex.RB jb 0x100029314
   1000292a2:	outs   dx,DWORD PTR ds:[rsi]
   1000292a3:	jb     0x1000292e5
   1000292a5:	add    BYTE PTR [rax],al
   1000292a8:	add    BYTE PTR [rcx],al
   1000292aa:	add    BYTE PTR [rax],al
   1000292ac:	add    BYTE PTR [rax+rax*1],al
   1000292af:	add    BYTE PTR [rax],al
   1000292b1:	add    al,0x0
	...
   1000292bf:	add    BYTE PTR [rax-0xe],al
   1000292c2:	add    DWORD PTR [rax],eax
   1000292c4:	add    DWORD PTR [rax],eax
   1000292c6:	add    BYTE PTR [rax],al
   1000292c8:	rex.WR
   1000292c9:	repnz add DWORD PTR [rax],eax
   1000292cc:	add    DWORD PTR [rax],eax
   1000292ce:	add    BYTE PTR [rax],al
   1000292d0:	pop    rax
   1000292d1:	repnz add DWORD PTR [rax],eax
   1000292d4:	add    DWORD PTR [rax],eax
   1000292d6:	add    BYTE PTR [rax],al
   1000292d8:	repnz add DWORD PTR fs:[rax],eax
   1000292dc:	add    DWORD PTR [rax],eax
   1000292de:	add    BYTE PTR [rax],al
   1000292e0:	jo     0x1000292d4
   1000292e2:	add    DWORD PTR [rax],eax
   1000292e4:	add    DWORD PTR [rax],eax
   1000292e6:	add    BYTE PTR [rax],al
   1000292e8:	jl     0x1000292dc
   1000292ea:	add    DWORD PTR [rax],eax
   1000292ec:	add    DWORD PTR [rax],eax
   1000292ee:	add    BYTE PTR [rax],al
   1000292f0:	mov    dl,dh
   1000292f2:	add    DWORD PTR [rax],eax
   1000292f4:	add    DWORD PTR [rax],eax
   1000292f6:	add    BYTE PTR [rax],al
   1000292f8:	xchg   esp,eax
   1000292f9:	repnz add DWORD PTR [rax],eax
   1000292fc:	add    DWORD PTR [rax],eax
   1000292fe:	add    BYTE PTR [rax],al
   100029300:	movabs al,ds:0xac000000010001f2
   100029309:	repnz add DWORD PTR [rax],eax
   10002930c:	add    DWORD PTR [rax],eax
   10002930e:	add    BYTE PTR [rax],al
   100029310:	mov    eax,0x10001f2
   100029315:	add    BYTE PTR [rax],al
   100029317:	add    ah,al
   100029319:	repnz add DWORD PTR [rax],eax
   10002931c:	add    DWORD PTR [rax],eax
   10002931e:	add    BYTE PTR [rax],al
   100029320:	shl    dl,1
   100029322:	add    DWORD PTR [rax],eax
   100029324:	add    DWORD PTR [rax],eax
   100029326:	add    BYTE PTR [rax],al
   100029328:	fdivr  st(2),st
   10002932a:	add    DWORD PTR [rax],eax
   10002932c:	add    DWORD PTR [rax],eax
   10002932e:	add    BYTE PTR [rax],al
   100029330:	sar    BYTE PTR [rsi+0x10000],0x0
   100029337:	add    al,ch
   100029339:	repnz add DWORD PTR [rax],eax
   10002933c:	add    DWORD PTR [rax],eax
   10002933e:	add    BYTE PTR [rax],al
   100029340:	hlt    
   100029341:	repnz add DWORD PTR [rax],eax
   100029344:	add    DWORD PTR [rax],eax
	...
   10002934e:	add    BYTE PTR [rax],al
   100029350:	cmp    al,0x36
   100029352:	add    BYTE PTR [rax],al
   100029354:	add    DWORD PTR [rax],eax
   100029356:	add    BYTE PTR [rax],al
   100029358:	add    al,BYTE PTR [rax]
   10002935a:	add    BYTE PTR [rax],al
   10002935c:	add    BYTE PTR [rax],al
   10002935e:	add    BYTE PTR [rax],al
   100029360:	rex xchg esp,eax
   100029362:	add    BYTE PTR [rax],al
   100029364:	add    DWORD PTR [rax],eax
   100029366:	add    BYTE PTR [rax],al
   100029368:	add    BYTE PTR [rcx],al
	...
   100029376:	add    BYTE PTR [rax],al
   100029378:	rex
   100029379:	add    BYTE PTR ss:[rax],al
   10002937c:	add    DWORD PTR [rax],eax
   10002937e:	add    BYTE PTR [rax],al
   100029380:	add    al,BYTE PTR [rax]
   100029382:	add    BYTE PTR [rax],al
   100029384:	add    BYTE PTR [rax],al
   100029386:	add    BYTE PTR [rax],al
   100029388:	(bad)  
   100029389:	xchg   esp,eax
   10002938a:	add    BYTE PTR [rax],al
   10002938c:	add    DWORD PTR [rax],eax
   10002938e:	add    BYTE PTR [rax],al
   100029390:	add    BYTE PTR [rcx],al
	...
   10002939e:	add    BYTE PTR [rax],al
   1000293a0:	rex.R
   1000293a1:	add    BYTE PTR ss:[rax],al
   1000293a4:	add    DWORD PTR [rax],eax
   1000293a6:	add    BYTE PTR [rax],al
   1000293a8:	add    al,BYTE PTR [rax]
   1000293aa:	add    BYTE PTR [rax],al
   1000293ac:	add    BYTE PTR [rax],al
   1000293ae:	add    BYTE PTR [rax],al
   1000293b0:	shl    BYTE PTR [rcx+0x10000],0x0
   1000293b7:	add    BYTE PTR [rax],al
   1000293b9:	add    DWORD PTR [rax],eax
	...
   1000293c7:	add    BYTE PTR [rax+0x36],cl
   1000293ca:	add    BYTE PTR [rax],al
   1000293cc:	add    DWORD PTR [rax],eax
   1000293ce:	add    BYTE PTR [rax],al
   1000293d0:	add    al,BYTE PTR [rax]
   1000293d2:	add    BYTE PTR [rax],al
   1000293d4:	add    BYTE PTR [rax],al
   1000293d6:	add    BYTE PTR [rax],al
   1000293d8:	rex
   1000293d9:	fwait
   1000293da:	add    BYTE PTR [rax],al
   1000293dc:	add    DWORD PTR [rax],eax
   1000293de:	add    BYTE PTR [rax],al
   1000293e0:	or     BYTE PTR [rcx],al
	...
   1000293ee:	add    BYTE PTR [rax],al
   1000293f0:	rex.WR
   1000293f1:	add    BYTE PTR ss:[rax],al
   1000293f4:	add    DWORD PTR [rax],eax
   1000293f6:	add    BYTE PTR [rax],al
   1000293f8:	add    al,BYTE PTR [rax]
   1000293fa:	add    BYTE PTR [rax],al
   1000293fc:	add    BYTE PTR [rax],al
   1000293fe:	add    BYTE PTR [rax],al
   100029400:	rex pushf 
   100029402:	add    BYTE PTR [rax],al
   100029404:	add    DWORD PTR [rax],eax
   100029406:	add    BYTE PTR [rax],al
   100029408:	or     BYTE PTR [rcx],al
	...
   100029416:	add    BYTE PTR [rax],al
   100029418:	push   rax
   100029419:	add    BYTE PTR ss:[rax],al
   10002941c:	add    DWORD PTR [rax],eax
   10002941e:	add    BYTE PTR [rax],al
   100029420:	add    al,BYTE PTR [rax]
   100029422:	add    BYTE PTR [rax],al
   100029424:	add    BYTE PTR [rax],al
   100029426:	add    BYTE PTR [rax],al
   100029428:	nop
   100029429:	lahf   
   10002942a:	add    BYTE PTR [rax],al
   10002942c:	add    DWORD PTR [rax],eax
   10002942e:	add    BYTE PTR [rax],al
   100029430:	mov    BYTE PTR [rcx],al
	...
   10002943e:	add    BYTE PTR [rax],al
   100029440:	pop    rax
   100029441:	add    BYTE PTR ss:[rax],al
   100029444:	add    DWORD PTR [rax],eax
   100029446:	add    BYTE PTR [rax],al
   100029448:	or     BYTE PTR [rax],al
   10002944a:	add    BYTE PTR [rax],al
   10002944c:	add    BYTE PTR [rax],al
   10002944e:	add    BYTE PTR [rax],al
   100029450:	loopne 0x1000293f3
   100029452:	add    BYTE PTR [rax],al
   100029454:	add    DWORD PTR [rax],eax
   100029456:	add    BYTE PTR [rax],al
   100029458:	add    DWORD PTR [rcx],eax
	...
   100029466:	add    BYTE PTR [rax],al
   100029468:	push   0x1000036
   10002946d:	add    BYTE PTR [rax],al
   10002946f:	add    BYTE PTR [rsi],al
	...
   100029479:	movabs ds:0x101000000010000,al
	...
   10002948e:	add    BYTE PTR [rax],al
   100029490:	je     0x1000294c8
   100029492:	add    BYTE PTR [rax],al
   100029494:	add    DWORD PTR [rax],eax
   100029496:	add    BYTE PTR [rax],al
   100029498:	add    al,BYTE PTR [rax]
   10002949a:	add    BYTE PTR [rax],al
   10002949c:	add    BYTE PTR [rax],al
   10002949e:	add    BYTE PTR [rax],al
   1000294a0:	add    BYTE PTR [rax+rax*1+0x100],dl
   1000294a7:	add    BYTE PTR [rax+rax*1],al
	...
   1000294b6:	add    BYTE PTR [rax],al
   1000294b8:	js     0x1000294f0
   1000294ba:	add    BYTE PTR [rax],al
   1000294bc:	add    DWORD PTR [rax],eax
   1000294be:	add    BYTE PTR [rax],al
   1000294c0:	add    al,BYTE PTR [rax]
   1000294c2:	add    BYTE PTR [rax],al
   1000294c4:	add    BYTE PTR [rax],al
   1000294c6:	add    BYTE PTR [rax],al
   1000294c8:	test   al,0xf3
   1000294ca:	add    DWORD PTR [rax],eax
   1000294cc:	add    DWORD PTR [rax],eax
	...
   1000294de:	add    BYTE PTR [rax],al
   1000294e0:	jl     0x100029518
   1000294e2:	add    BYTE PTR [rax],al
   1000294e4:	add    DWORD PTR [rax],eax
   1000294e6:	add    BYTE PTR [rax],al
   1000294e8:	add    al,BYTE PTR [rax]
   1000294ea:	add    BYTE PTR [rax],al
   1000294ec:	add    BYTE PTR [rax],al
   1000294ee:	add    BYTE PTR [rax],al
   1000294f0:	adc    BYTE PTR [rax+rax*1+0x100],0x0
   1000294f8:	or     BYTE PTR [rax],al
	...
   100029506:	add    BYTE PTR [rax],al
   100029508:	xor    BYTE PTR [rsi],0x0
   10002950b:	add    BYTE PTR [rcx],al
   10002950d:	add    BYTE PTR [rax],al
   10002950f:	add    BYTE PTR [rdx],al
   100029511:	add    BYTE PTR [rax],al
   100029513:	add    BYTE PTR [rax],al
   100029515:	add    BYTE PTR [rax],al
   100029517:	add    BYTE PTR [rax-0x6b],ah
   10002951a:	add    BYTE PTR [rax],al
   10002951c:	add    DWORD PTR [rax],eax
   10002951e:	add    BYTE PTR [rax],al
   100029520:	(bad)  
	...
   10002952d:	add    BYTE PTR [rax],al
   10002952f:	add    BYTE PTR [rsi+rsi*1+0x10000],al
   100029536:	add    BYTE PTR [rax],al
   100029538:	add    al,BYTE PTR [rax]
   10002953a:	add    BYTE PTR [rax],al
   10002953c:	add    BYTE PTR [rax],al
   10002953e:	add    BYTE PTR [rax],al
   100029540:	movabs al,ds:0x800000001000095
	...
   100029555:	add    BYTE PTR [rax],al
   100029557:	add    BYTE PTR [rax+0x1000036],cl
   10002955d:	add    BYTE PTR [rax],al
   10002955f:	add    BYTE PTR [rdx],al
   100029561:	add    BYTE PTR [rax],al
   100029563:	add    BYTE PTR [rax],al
   100029565:	add    BYTE PTR [rax],al
   100029567:	add    al,dl
   100029569:	xchg   ebp,eax
   10002956a:	add    BYTE PTR [rax],al
   10002956c:	add    DWORD PTR [rax],eax
	...
   10002957e:	add    BYTE PTR [rax],al
   100029580:	mov    WORD PTR [rsi],?
   100029582:	add    BYTE PTR [rax],al
   100029584:	add    DWORD PTR [rax],eax
   100029586:	add    BYTE PTR [rax],al
   100029588:	add    al,BYTE PTR [rax]
   10002958a:	add    BYTE PTR [rax],al
   10002958c:	add    BYTE PTR [rax],al
   10002958e:	add    BYTE PTR [rax],al
   100029590:	lock xchg ebp,eax
   100029592:	add    BYTE PTR [rax],al
   100029594:	add    DWORD PTR [rax],eax
   100029596:	add    BYTE PTR [rax],al
   100029598:	(bad)  
	...
   1000295a5:	add    BYTE PTR [rax],al
   1000295a7:	add    BYTE PTR [rax+0x1000036],dl
   1000295ad:	add    BYTE PTR [rax],al
   1000295af:	add    BYTE PTR [rdx],al
   1000295b1:	add    BYTE PTR [rax],al
   1000295b3:	add    BYTE PTR [rax],al
   1000295b5:	add    BYTE PTR [rax],al
   1000295b7:	add    BYTE PTR [rax],dl
   1000295b9:	xchg   esi,eax
   1000295ba:	add    BYTE PTR [rax],al
   1000295bc:	add    DWORD PTR [rax],eax
	...
   1000295ce:	add    BYTE PTR [rax],al
   1000295d0:	xchg   esp,eax
   1000295d1:	add    BYTE PTR ss:[rax],al
   1000295d4:	add    DWORD PTR [rax],eax
   1000295d6:	add    BYTE PTR [rax],al
   1000295d8:	add    al,BYTE PTR [rax]
   1000295da:	add    BYTE PTR [rax],al
   1000295dc:	add    BYTE PTR [rax],al
   1000295de:	add    BYTE PTR [rax],al
   1000295e0:	push   rax
   1000295e1:	xchg   esi,eax
   1000295e2:	add    BYTE PTR [rax],al
   1000295e4:	add    DWORD PTR [rax],eax
	...
   1000295f6:	add    BYTE PTR [rax],al
   1000295f8:	cwde   
   1000295f9:	add    BYTE PTR ss:[rax],al
   1000295fc:	add    DWORD PTR [rax],eax
   1000295fe:	add    BYTE PTR [rax],al
   100029600:	add    al,BYTE PTR [rax]
   100029602:	add    BYTE PTR [rax],al
   100029604:	add    BYTE PTR [rax],al
   100029606:	add    BYTE PTR [rax],al
   100029608:	xor    BYTE PTR [rsi+0x10000],dl
   10002960e:	add    BYTE PTR [rax],al
   100029610:	adc    al,BYTE PTR [rax]
	...
   10002961e:	add    BYTE PTR [rax],al
   100029620:	pushf  
   100029621:	add    BYTE PTR ss:[rax],al
   100029624:	add    DWORD PTR [rax],eax
   100029626:	add    BYTE PTR [rax],al
   100029628:	add    al,BYTE PTR [rax]
   10002962a:	add    BYTE PTR [rax],al
   10002962c:	add    BYTE PTR [rax],al
   10002962e:	add    BYTE PTR [rax],al
   100029630:	jo     0x1000295c8
   100029632:	add    BYTE PTR [rax],al
   100029634:	add    DWORD PTR [rax],eax
   100029636:	add    BYTE PTR [rax],al
   100029638:	or     BYTE PTR [rax],al
	...
   100029646:	add    BYTE PTR [rax],al
   100029648:	movabs al,ds:0x200000001000036
   100029651:	add    BYTE PTR [rax],al
   100029653:	add    BYTE PTR [rax],al
   100029655:	add    BYTE PTR [rax],al
   100029657:	add    BYTE PTR [rax-0x69],dl
   10002965a:	add    BYTE PTR [rax],al
   10002965c:	add    DWORD PTR [rax],eax
   10002965e:	add    BYTE PTR [rax],al
   100029660:	or     al,BYTE PTR [rax]
	...
   10002966e:	add    BYTE PTR [rax],al
   100029670:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100029671:	add    BYTE PTR ss:[rax],al
   100029674:	add    DWORD PTR [rax],eax
   100029676:	add    BYTE PTR [rax],al
   100029678:	add    al,BYTE PTR [rax]
	...
   100029686:	add    BYTE PTR [rax],al
   100029688:	add    BYTE PTR [rax],al
	...
   100029697:	add    BYTE PTR [rax+0x1000036],ch
   10002969d:	add    BYTE PTR [rax],al
   10002969f:	add    BYTE PTR [rdx],al
   1000296a1:	add    BYTE PTR [rax],al
   1000296a3:	add    BYTE PTR [rax],al
   1000296a5:	add    BYTE PTR [rax],al
   1000296a7:	add    BYTE PTR [rax],dl
   1000296a9:	cwde   
   1000296aa:	add    BYTE PTR [rax],al
   1000296ac:	add    DWORD PTR [rax],eax
	...
   1000296be:	add    BYTE PTR [rax],al
   1000296c0:	lods   al,BYTE PTR ds:[rsi]
   1000296c1:	add    BYTE PTR ss:[rax],al
   1000296c4:	add    DWORD PTR [rax],eax
   1000296c6:	add    BYTE PTR [rax],al
   1000296c8:	add    al,BYTE PTR [rax]
	...
   1000296d6:	add    BYTE PTR [rax],al
   1000296d8:	add    BYTE PTR [rax],al
	...
   1000296e7:	add    BYTE PTR [rax+0x1000036],dh
   1000296ed:	add    BYTE PTR [rax],al
   1000296ef:	add    BYTE PTR [rdx],al
   1000296f1:	add    BYTE PTR [rax],al
   1000296f3:	add    BYTE PTR [rax],al
   1000296f5:	add    BYTE PTR [rax],al
   1000296f7:	add    BYTE PTR [rax-0x68],ah
   1000296fa:	add    BYTE PTR [rax],al
   1000296fc:	add    DWORD PTR [rax],eax
   1000296fe:	add    BYTE PTR [rax],al
   100029700:	add    al,0x0
	...
   10002970e:	add    BYTE PTR [rax],al
   100029710:	mov    ah,0x36
   100029712:	add    BYTE PTR [rax],al
   100029714:	add    DWORD PTR [rax],eax
   100029716:	add    BYTE PTR [rax],al
   100029718:	add    al,BYTE PTR [rax]
	...
   100029726:	add    BYTE PTR [rax],al
   100029728:	add    BYTE PTR [rax],al
	...
   100029737:	add    BYTE PTR [rax+0x1000036],bh
   10002973d:	add    BYTE PTR [rax],al
   10002973f:	add    BYTE PTR [rdx],al
   100029741:	add    BYTE PTR [rax],al
   100029743:	add    BYTE PTR [rax],al
   100029745:	add    BYTE PTR [rax],al
   100029747:	add    BYTE PTR [rax+0x1000099],dh
	...
   10002975d:	add    BYTE PTR [rax],al
   10002975f:	add    BYTE PTR [rsi+rsi*1+0x10000],bh
   100029766:	add    BYTE PTR [rax],al
   100029768:	add    al,BYTE PTR [rax]
   10002976a:	add    BYTE PTR [rax],al
   10002976c:	add    BYTE PTR [rax],al
   10002976e:	add    BYTE PTR [rax],al
   100029770:	rcr    BYTE PTR [rcx+0x10000],1
   100029776:	add    BYTE PTR [rax],al
   100029778:	or     BYTE PTR [rax],al
	...
   100029786:	add    BYTE PTR [rax],al
   100029788:	shl    BYTE PTR [rsi],0x0
   10002978b:	add    BYTE PTR [rcx],al
   10002978d:	add    BYTE PTR [rax],al
   10002978f:	add    BYTE PTR [rdx],al
   100029791:	add    BYTE PTR [rax],al
   100029793:	add    BYTE PTR [rax],al
   100029795:	add    BYTE PTR [rax],al
   100029797:	add    BYTE PTR [rax-0x63],dl
   10002979a:	add    BYTE PTR [rax],al
   10002979c:	add    DWORD PTR [rax],eax
   10002979e:	add    BYTE PTR [rax],al
   1000297a0:	(bad)  
	...
   1000297ad:	add    BYTE PTR [rax],al
   1000297af:	add    ah,al
   1000297b1:	add    BYTE PTR ss:[rax],al
   1000297b4:	add    DWORD PTR [rax],eax
   1000297b6:	add    BYTE PTR [rax],al
   1000297b8:	add    al,BYTE PTR [rax]
   1000297ba:	add    BYTE PTR [rax],al
   1000297bc:	add    BYTE PTR [rax],al
   1000297be:	add    BYTE PTR [rax],al
   1000297c0:	rcr    BYTE PTR [rbp+0x10000],1
   1000297c6:	add    BYTE PTR [rax],al
   1000297c8:	or     BYTE PTR [rax],al
	...
   1000297d6:	add    BYTE PTR [rax],al
   1000297d8:	enter  0x36,0x0
   1000297dc:	add    DWORD PTR [rax],eax
   1000297de:	add    BYTE PTR [rax],al
   1000297e0:	add    al,BYTE PTR [rax]
   1000297e2:	add    BYTE PTR [rax],al
   1000297e4:	add    BYTE PTR [rax],al
   1000297e6:	add    BYTE PTR [rax],al
   1000297e8:	loopne 0x10002978a
   1000297ea:	add    BYTE PTR [rax],al
   1000297ec:	add    DWORD PTR [rax],eax
	...
   1000297fe:	add    BYTE PTR [rax],al
   100029800:	int3   
   100029801:	add    BYTE PTR ss:[rax],al
   100029804:	add    DWORD PTR [rax],eax
   100029806:	add    BYTE PTR [rax],al
   100029808:	add    al,BYTE PTR [rax]
   10002980a:	add    BYTE PTR [rax],al
   10002980c:	add    BYTE PTR [rax],al
   10002980e:	add    BYTE PTR [rax],al
   100029810:	jo     0x1000297b3
   100029812:	add    BYTE PTR [rax],al
   100029814:	add    DWORD PTR [rax],eax
   100029816:	add    BYTE PTR [rax],al
   100029818:	add    al,0x0
	...
   100029826:	add    BYTE PTR [rax],al
   100029828:	shl    BYTE PTR [rsi],1
   10002982a:	add    BYTE PTR [rax],al
   10002982c:	add    DWORD PTR [rax],eax
   10002982e:	add    BYTE PTR [rax],al
   100029830:	add    al,BYTE PTR [rax]
   100029832:	add    BYTE PTR [rax],al
   100029834:	add    BYTE PTR [rax],al
   100029836:	add    BYTE PTR [rax],al
   100029838:	mov    ah,0xf3
   10002983a:	add    DWORD PTR [rax],eax
   10002983c:	add    DWORD PTR [rax],eax
   10002983e:	add    BYTE PTR [rax],al
   100029840:	(bad)  
	...
   10002984d:	add    BYTE PTR [rax],al
   10002984f:	add    ah,dl
   100029851:	add    BYTE PTR ss:[rax],al
   100029854:	add    DWORD PTR [rax],eax
   100029856:	add    BYTE PTR [rax],al
   100029858:	add    al,BYTE PTR [rax]
   10002985a:	add    BYTE PTR [rax],al
   10002985c:	add    BYTE PTR [rax],al
   10002985e:	add    BYTE PTR [rax],al
   100029860:	movabs al,ds:0x10000a1
	...
   100029885:	add    BYTE PTR [rax],al
   100029887:	add    al,dh
   100029889:	sub    eax,DWORD PTR [rcx]
   10002988b:	add    BYTE PTR [rcx],al
	...
   10002989d:	add    BYTE PTR [rax],al
   10002989f:	add    al,dl
   1000298a1:	xor    DWORD PTR [rcx],eax
   1000298a3:	add    BYTE PTR [rcx],al
	...
   1000298b5:	add    BYTE PTR [rax],al
   1000298b7:	add    BYTE PTR [rax+0x1000133],al
	...
   1000298cd:	add    BYTE PTR [rax],al
   1000298cf:	add    BYTE PTR [rax+0x35],ah
   1000298d2:	add    DWORD PTR [rax],eax
   1000298d4:	add    DWORD PTR [rax],eax
	...
   1000298ee:	add    BYTE PTR [rax],al
   1000298f0:	loopne 0x100029928
   1000298f2:	add    DWORD PTR [rax],eax
   1000298f4:	add    DWORD PTR [rax],eax
	...
   100029906:	add    BYTE PTR [rax],al
   100029908:	sar    BYTE PTR [rcx],1
   10002990a:	add    DWORD PTR [rax],eax
   10002990c:	add    DWORD PTR [rax],eax
	...
   10002991e:	add    BYTE PTR [rax],al
   100029920:	sar    BYTE PTR [rbx],0x1
   100029923:	add    BYTE PTR [rcx],al
   100029925:	add    BYTE PTR [rax],al
   100029927:	add    BYTE PTR [rax],al
   100029929:	add    BYTE PTR [rax],al
   10002992b:	add    BYTE PTR [rdx],al
   10002992d:	add    BYTE PTR [rax],al
   10002992f:	add    BYTE PTR [rax],dh
   100029931:	cdq    
   100029932:	add    al,BYTE PTR [rax]
   100029934:	add    DWORD PTR [rax],eax
   100029936:	add    BYTE PTR [rax],al
   100029938:	xor    BYTE PTR [rcx+0x10002],bl
	...
   10002994e:	add    BYTE PTR [rax],al
   100029950:	loopne 0x100029987
   100029952:	add    BYTE PTR [rax],al
   100029954:	add    DWORD PTR [rax],eax
	...
   100029966:	add    BYTE PTR [rax],al
   100029968:	push   0x1000299
   10002996d:	add    BYTE PTR [rax],al
   10002996f:	add    BYTE PTR [rax-0x67],ch
   100029972:	add    al,BYTE PTR [rax]
   100029974:	add    DWORD PTR [rax],eax
	...
   1000299e6:	add    BYTE PTR [rax],al
   1000299e8:	call   0x101029c86
   1000299ed:	add    BYTE PTR [rax],al
   1000299ef:	add    al,ch
   1000299f1:	cdq    
   1000299f2:	add    al,BYTE PTR [rax]
   1000299f4:	add    DWORD PTR [rax],eax
	...
   100029a5e:	add    BYTE PTR [rax],al
   100029a60:	jo     0x100029a85
   100029a62:	add    BYTE PTR [rax],al
   100029a64:	add    DWORD PTR [rax],eax
	...
   100029a6e:	add    BYTE PTR [rax],al
   100029a70:	add    DWORD PTR [rax],eax
	...
   100029e86:	add    BYTE PTR [rax],al
   100029e88:	or     BYTE PTR [rax],al
   100029e8a:	add    BYTE PTR [rax],al
   100029e8c:	or     BYTE PTR [rax],al
   100029e8e:	add    BYTE PTR [rax],al
   100029e90:	or     BYTE PTR [rax],al
   100029e92:	add    BYTE PTR [rax],al
   100029e94:	or     BYTE PTR [rax],al
   100029e96:	add    BYTE PTR [rax],al
   100029e98:	or     BYTE PTR [rax],al
   100029e9a:	add    BYTE PTR [rax],al
   100029e9c:	or     BYTE PTR [rax],al
   100029e9e:	add    BYTE PTR [rax],al
   100029ea0:	or     BYTE PTR [rax],al
	...
   100029eaa:	add    BYTE PTR [rax+0x0],ah
   100029ead:	add    BYTE PTR [rax],al
   100029eaf:	add    BYTE PTR [rax],al
   100029eb1:	add    BYTE PTR [rax],al
   100029eb3:	(bad)  
   100029eb4:	add    BYTE PTR [rax],al
   100029eb6:	add    BYTE PTR [rax],al
   100029eb8:	(bad)  
   100029eb9:	(bad)  
   100029eba:	(bad)  
   100029ebb:	inc    DWORD PTR [rax]
   100029ebd:	add    BYTE PTR [rax],al
   100029ebf:	add    BYTE PTR [rax],dl
   100029ec1:	cmp    BYTE PTR [rax],al
   100029ec3:	add    BYTE PTR [rcx],al
	...

Disassembly of section .pdata:

0000000100039000 <.pdata>:
   100039000:	xor    BYTE PTR [rax],ah
   100039002:	add    BYTE PTR [rax],al
   100039004:	and    DWORD PTR [rax],0x0
   100039007:	add    BYTE PTR [rbp+rax*2+0x20900002],dl
   10003900e:	add    BYTE PTR [rax],al
   100039010:	or     ah,BYTE PTR [rcx]
   100039012:	add    BYTE PTR [rax],al
   100039014:	xchg   esp,eax
   100039015:	add    r8b,BYTE PTR [r8]
   100039018:	or     ah,BYTE PTR [rcx]
   10003901a:	add    BYTE PTR [rax],al
   10003901c:	iret   
   10003901d:	and    DWORD PTR [rax],eax
   10003901f:	add    BYTE PTR [rcx],dh
   100039021:	nop
   100039022:	add    eax,DWORD PTR [rax]
   100039024:	shl    BYTE PTR [rcx],1
   100039026:	add    BYTE PTR [rax],al
   100039028:	(bad)  
   100039029:	and    al,BYTE PTR [rax]
   10003902b:	add    BYTE PTR [rcx],dh
   10003902d:	nop
   10003902e:	add    eax,DWORD PTR [rax]
   100039030:	and    BYTE PTR [rdx],ah
   100039032:	add    BYTE PTR [rax],al
   100039034:	and    eax,0x4000023
   100039039:	push   rax
   10003903a:	add    al,BYTE PTR [rax]
   10003903c:	and    eax,0x2c000023
   100039041:	and    eax,DWORD PTR [rax]
   100039043:	add    BYTE PTR [rcx],al
   100039045:	cdq    
   100039046:	add    eax,DWORD PTR [rax]
   100039048:	rex and eax,DWORD PTR [rax]
   10003904b:	add    BYTE PTR [rbp+0x23],ch
   10003904e:	add    BYTE PTR [rax],al
   100039050:	push   0x400024a
   100039055:	and    eax,0x25330000
   10003905a:	add    BYTE PTR [rax],al
   10003905c:	xor    DWORD PTR [rax+0x25400003],edx
   100039062:	add    BYTE PTR [rax],al
   100039064:	xchg   BYTE PTR [rip+0x4dfc0000],ah        # 0x14dff906a
   10003906a:	add    al,BYTE PTR [rax]
   10003906c:	nop
   10003906d:	and    eax,0x25de0000
   100039072:	add    BYTE PTR [rax],al
   100039074:	cwde   
   100039075:	rex.XB add al,BYTE PTR [r8]
   100039078:	lock and eax,0x26070000
   10003907e:	add    BYTE PTR [rax],al
   100039080:	cld    
   100039081:	rex.WRX add r8b,BYTE PTR [rax]
   100039084:	adc    BYTE PTR [rsi],ah
   100039086:	add    BYTE PTR [rax],al
   100039088:	(bad)  
   100039089:	add    BYTE PTR es:[rax],al
   10003908c:	add    BYTE PTR [rbx+0x2],dl
   10003908f:	add    BYTE PTR [rax],dh
   100039091:	add    BYTE PTR es:[rax],al
   100039094:	jle    0x1000390bc
   100039096:	add    BYTE PTR [rax],al
   100039098:	mov    BYTE PTR [rbp+0x2],bl
   10003909b:	add    BYTE PTR [rsi+0x26],bh
   10003909e:	add    BYTE PTR [rax],al
   1000390a0:	int    0x26
   1000390a2:	add    BYTE PTR [rax],al
   1000390a4:	add    DWORD PTR [rax+0x26cd0003],edx
   1000390aa:	add    BYTE PTR [rax],al
   1000390ac:	adc    BYTE PTR [rdi],ah
   1000390ae:	add    BYTE PTR [rax],al
   1000390b0:	or     eax,0x10000390
   1000390b5:	(bad)  
   1000390b6:	add    BYTE PTR [rax],al
   1000390b8:	push   rbx
   1000390b9:	(bad)  
   1000390ba:	add    BYTE PTR [rax],al
   1000390bc:	ins    DWORD PTR es:[rdi],dx
   1000390bd:	nop
   1000390be:	add    eax,DWORD PTR [rax]
   1000390c0:	push   rbx
   1000390c1:	(bad)  
   1000390c2:	add    BYTE PTR [rax],al
   1000390c4:	mov    bl,0x27
   1000390c6:	add    BYTE PTR [rax],al
   1000390c8:	(bad)  
   1000390c9:	nop
   1000390ca:	add    eax,DWORD PTR [rax]
   1000390cc:	push   rax
   1000390cd:	cmp    BYTE PTR [rax],al
   1000390cf:	add    BYTE PTR [rsi],cl
   1000390d1:	cmp    DWORD PTR [rax],eax
   1000390d3:	add    BYTE PTR [rax+0x20000243],dl
   1000390d9:	cmp    DWORD PTR [rax],eax
   1000390db:	add    BYTE PTR [rdi+0x39],bl
   1000390de:	add    BYTE PTR [rax],al
   1000390e0:	cwde   
   1000390e1:	rex.XB add al,BYTE PTR [r8]
   1000390e4:	jo     0x10003911f
   1000390e6:	add    BYTE PTR [rax],al
   1000390e8:	in     al,dx
   1000390e9:	cmp    DWORD PTR [rax],eax
   1000390eb:	add    BYTE PTR [rax+0x243],bl
   1000390f1:	cmp    al,BYTE PTR [rax]
   1000390f3:	add    BYTE PTR [rdx-0x5fffffc6],ah
   1000390f9:	rex.XB add al,BYTE PTR [r8]
   1000390fc:	mov    al,0x3a
   1000390fe:	add    BYTE PTR [rax],al
   100039100:	(bad)  
   100039101:	cmp    al,0x0
   100039103:	add    BYTE PTR [rax+0x70000243],ch
   100039109:	cmp    al,0x0
   10003910b:	add    dl,ah
   10003910d:	cmp    al,0x0
   10003910f:	add    ah,cl
   100039111:	rex.XB add al,BYTE PTR [r8]
   100039114:	lock cmp al,0x0
   100039117:	add    BYTE PTR [rbx+0x40],dh
   10003911a:	add    BYTE PTR [rax],al
   10003911c:	in     al,dx
   10003911d:	rex.XB add al,BYTE PTR [r8]
   100039120:	rol    BYTE PTR [rax+0x0],1
   100039123:	add    dh,dh
   100039125:	add    BYTE PTR [rax],al
   100039128:	adc    BYTE PTR [rdx+rax*1+0x0],al
   10003912c:	test   BYTE PTR [rax+0x0],0x0
   100039130:	(bad)  
   100039131:	add    BYTE PTR [r8],al
   100039134:	sub    BYTE PTR [rdx+rax*1+0x0],al
   100039138:	(bad)  
   100039139:	add    BYTE PTR [r8],al
   10003913c:	and    al,BYTE PTR [rbx+0x0]
   10003913f:	add    BYTE PTR [rsp+rax*2],bh
   100039142:	add    al,BYTE PTR [rax]
   100039144:	and    al,BYTE PTR [rbx+0x0]
   100039147:	add    BYTE PTR [rax+0x43],cl
   10003914a:	add    BYTE PTR [rax],al
   10003914c:	push   rax
   10003914d:	add    r8b,BYTE PTR [rax]
   100039150:	rex.W
   100039151:	rex.XB add BYTE PTR [r8],al
   100039154:	imul   eax,DWORD PTR [rbx+0x0],0x2446000
   10003915b:	add    BYTE PTR [rax-0x47ffffbd],ah
   100039161:	rex.RX add BYTE PTR [rax],r8b
   100039164:	jo     0x1000391aa
   100039166:	add    al,BYTE PTR [rax]
   100039168:	(bad)  
   100039169:	rex.W add BYTE PTR [rax],al
   10003916c:	and    eax,0xa4000049
   100039171:	add    r8b,BYTE PTR [rax]
   100039174:	xor    BYTE PTR [rcx+0x0],cl
   100039177:	add    BYTE PTR [rcx+0x4e],bh
   10003917a:	add    BYTE PTR [rax],al
   10003917c:	rol    BYTE PTR [rdx+rax*1+0x0],0xc0
   100039181:	rex.WRX add BYTE PTR [rax],r8b
   100039184:	imul   edx,DWORD PTR [rax+0x0],0x244e000
   10003918b:	add    BYTE PTR [rax+0x50],dh
   10003918e:	add    BYTE PTR [rax],al
   100039190:	rex.W push rcx
   100039192:	add    BYTE PTR [rax],al
   100039194:	add    al,0x45
   100039196:	add    al,BYTE PTR [rax]
   100039198:	jo     0x1000391eb
   10003919a:	add    BYTE PTR [rax],al
   10003919c:	mov    dh,0x52
   10003919e:	add    BYTE PTR [rax],al
   1000391a0:	sbb    al,0x45
   1000391a2:	add    al,BYTE PTR [rax]
   1000391a4:	rcl    BYTE PTR [rdx+0x0],0x0
   1000391a8:	xor    DWORD PTR [rbx+0x0],edx
   1000391ab:	add    BYTE PTR [rax+0x40000243],ah
   1000391b1:	push   rbx
   1000391b2:	add    BYTE PTR [rax],al
   1000391b4:	call   QWORD PTR [rax+rax*1+0x0]
   1000391b8:	xor    al,0x45
   1000391ba:	add    al,BYTE PTR [rax]
   1000391bc:	adc    BYTE PTR [rbp+0x0],dl
   1000391bf:	add    BYTE PTR [rdx+0x56],ch
   1000391c2:	add    BYTE PTR [rax],al
   1000391c4:	rex.R
   1000391c5:	add    r8b,BYTE PTR [r8]
   1000391c8:	jo     0x100039220
   1000391ca:	add    BYTE PTR [rax],al
   1000391cc:	rex.W pop rax
   1000391ce:	add    BYTE PTR [rax],al
   1000391d0:	pop    rax
   1000391d1:	add    r8b,BYTE PTR [r8]
   1000391d4:	movabs al,ds:0x5800005a50000058
   1000391dd:	add    r8b,BYTE PTR [r8]
   1000391e0:	rcr    BYTE PTR [rdx+0x0],0x0
   1000391e4:	add    eax,0x7400005b
   1000391e9:	add    r8b,BYTE PTR [r8]
   1000391ec:	adc    BYTE PTR [rbx+0x0],bl
   1000391ef:	add    BYTE PTR [rsi-0x6bffffa5],bl
   1000391f5:	add    r8b,BYTE PTR [r8]
   1000391f8:	mov    al,0x5b
   1000391fa:	add    BYTE PTR [rax],al
   1000391fc:	ficomp WORD PTR [rbx+0x0]
   1000391ff:	add    BYTE PTR [rbp+rax*2+0x5bde0002],bl
   100039206:	add    BYTE PTR [rax],al
   100039208:	adc    al,0x5c
   10003920a:	add    BYTE PTR [rax],al
   10003920c:	test   al,0x45
   10003920e:	add    al,BYTE PTR [rax]
   100039210:	adc    al,0x5c
   100039212:	add    BYTE PTR [rax],al
   100039214:	and    al,0x5c
   100039216:	add    BYTE PTR [rax],al
   100039218:	mov    esp,0x24000245
   10003921d:	pop    rsp
   10003921e:	add    BYTE PTR [rax],al
   100039220:	sub    ebx,DWORD PTR [rax+rax*1+0x0]
   100039224:	rol    BYTE PTR [rbp+0x2],1
   100039227:	add    BYTE PTR [rax+0x5c],al
   10003922a:	add    BYTE PTR [rax],al
   10003922c:	(bad)  
   10003922d:	pop    rsp
   10003922e:	add    BYTE PTR [rax],al
   100039230:	loopne 0x100039277
   100039232:	add    al,BYTE PTR [rax]
   100039234:	(bad)  
   100039235:	pop    rsp
   100039236:	add    BYTE PTR [rax],al
   100039238:	and    BYTE PTR [rbp+0x0],bl
   10003923b:	add    ah,dh
   10003923d:	add    r8b,BYTE PTR [r8]
   100039240:	and    BYTE PTR [rbp+0x0],bl
   100039243:	add    BYTE PTR [rsi+rbx*2+0x0],bh
   100039247:	add    BYTE PTR [rax],cl
   100039249:	rex.RX add r8b,BYTE PTR [rax]
   10003924c:	nop
   10003924d:	pop    rsi
   10003924e:	add    BYTE PTR [rax],al
   100039250:	lods   al,BYTE PTR ds:[rsi]
   100039251:	pop    rsi
   100039252:	add    BYTE PTR [rax],al
   100039254:	sbb    BYTE PTR [rsi+0x2],al
   100039257:	add    BYTE PTR [rsi+rbx*2+0x60b50000],ch
   10003925e:	add    BYTE PTR [rax],al
   100039260:	and    al,0x46
   100039262:	add    al,BYTE PTR [rax]
   100039264:	mov    ch,0x60
   100039266:	add    BYTE PTR [rax],al
   100039268:	mov    ebp,0x44000060
   10003926d:	rex.RX add r8b,BYTE PTR [rax]
   100039270:	shl    BYTE PTR [rax+0x0],1
   100039273:	add    bl,ch
   100039275:	(bad)  
   100039276:	add    BYTE PTR [rax],al
   100039278:	push   rsp
   100039279:	rex.RX add r8b,BYTE PTR [rax]
   10003927c:	add    BYTE PTR [rcx+0x0],ah
   10003927f:	add    BYTE PTR [rsi+0x64000061],bl
   100039285:	rex.RX add r8b,BYTE PTR [rax]
   100039288:	mov    al,0x61
   10003928a:	add    BYTE PTR [rax],al
   10003928c:	rex.WRX (bad) 
   10003928e:	add    BYTE PTR [rax],al
   100039290:	rex.RX add r8b,BYTE PTR fs:[rax]
   100039294:	(bad)  
   100039295:	(bad)  
   100039296:	add    BYTE PTR [rax],al
   100039298:	and    esp,DWORD PTR [rax+rax*1+0x0]
   10003929c:	jo     0x1000392e4
   10003929e:	add    al,BYTE PTR [rax]
   1000392a0:	xor    BYTE PTR [rax+rax*1+0x0],ah
   1000392a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1000392a5:	add    BYTE PTR fs:[rax],al
   1000392a8:	test   BYTE PTR [rsi+0x2],al
   1000392ab:	add    BYTE PTR [rax+0x3e000064],dh
   1000392b1:	add    BYTE PTR gs:[rax],al
   1000392b4:	cwde   
   1000392b5:	rex.RX add r8b,BYTE PTR [rax]
   1000392b8:	push   rax
   1000392b9:	add    BYTE PTR gs:[rax],al
   1000392bc:	in     al,dx
   1000392bd:	add    BYTE PTR gs:[rax],al
   1000392c0:	test   al,0x46
   1000392c2:	add    al,BYTE PTR [rax]
   1000392c4:	add    BYTE PTR [rsi+0x0],ah
   1000392c7:	add    BYTE PTR [rdi],bl
   1000392c9:	data16 add BYTE PTR [rax],al
   1000392cc:	cwde   
   1000392cd:	rex.XB add al,BYTE PTR [r8]
   1000392d0:	xor    BYTE PTR [rsi+0x0],ah
   1000392d3:	add    al,dh
   1000392d5:	add    BYTE PTR [eax],al
   1000392d8:	rol    BYTE PTR [rsi+0x2],0x0
   1000392dc:	add    BYTE PTR [rax+0x0],ch
   1000392df:	add    BYTE PTR [rdx+0x68],bh
   1000392e2:	add    BYTE PTR [rax],al
   1000392e4:	cwde   
   1000392e5:	rex.XB add al,BYTE PTR [r8]
   1000392e8:	sub    BYTE PTR [rax+0x0],0x0
   1000392ec:	rex.XB push 0x0
   1000392ef:	add    BYTE PTR [rax+0x46],dh
   1000392f2:	add    al,BYTE PTR [rax]
   1000392f4:	push   rax
   1000392f5:	push   0x0
   1000392f7:	add    BYTE PTR [rbx+rbp*2+0x0],dl
   1000392fb:	add    al,ah
   1000392fd:	rex.RX add r8b,BYTE PTR [rax]
   100039300:	add    BYTE PTR [rax+rax*1+0x0],ch
   100039304:	push   0xffffffffec00006c
   100039309:	rex.RX add r8b,BYTE PTR [rax]
   10003930c:	jo     0x10003937a
   10003930e:	add    BYTE PTR [rax],al
   100039310:	push   rsp
   100039311:	ins    DWORD PTR es:[rdi],dx
   100039312:	add    BYTE PTR [rax],al
   100039314:	add    BYTE PTR [rdi+0x2],al
   100039317:	add    BYTE PTR [rax+0x6d],dh
   10003931a:	add    BYTE PTR [rax],al
   10003931c:	(bad)  
   10003931d:	jo     0x10003931f
   10003931f:	add    BYTE PTR [rdi+rax*2],cl
   100039322:	add    al,BYTE PTR [rax]
   100039324:	add    BYTE PTR [rcx+0x0],dh
   100039327:	add    BYTE PTR [rbx+0x72],bl
   10003932a:	add    BYTE PTR [rax],al
   10003932c:	xor    al,0x47
   10003932e:	add    al,BYTE PTR [rax]
   100039330:	nop
   100039331:	jb     0x100039333
   100039333:	add    BYTE PTR [rbx+0x73],al
   100039336:	add    BYTE PTR [rax],al
   100039338:	push   rax
   100039339:	rex.RXB add r8b,BYTE PTR [r8]
   10003933c:	mov    al,0x73
   10003933e:	add    BYTE PTR [rax],al
   100039340:	in     al,dx
   100039341:	jge    0x100039343
   100039343:	add    BYTE PTR [rdi+rax*2+0x2],ch
   100039347:	add    BYTE PTR [rax],ah
   100039349:	add    BYTE PTR [rax],0x0
   10003934c:	call   0x840393d9
   100039351:	rex.RXB add r8b,BYTE PTR [r8]
   100039354:	ror    BYTE PTR [rdx-0x73d20000],1
   10003935a:	add    BYTE PTR [rax],al
   10003935c:	xchg   esp,eax
   10003935d:	add    r8b,BYTE PTR [r8]
   100039360:	rex mov WORD PTR [rax],es
   100039363:	add    ch,bl
   100039365:	lea    eax,[rax]
   100039367:	add    BYTE PTR [rax-0x5ffffdbd],bl
   10003936d:	xchg   ebp,eax
   10003936e:	add    BYTE PTR [rax],al
   100039370:	ret    0x95
   100039373:	add    BYTE PTR [rbp+rax*2-0x69cffffe],dl
   10003937a:	add    BYTE PTR [rax],al
   10003937c:	rex.WX xchg rsi,rax
   10003937e:	add    BYTE PTR [rax],al
   100039380:	cwde   
   100039381:	rex.XB add al,BYTE PTR [r8]
   100039384:	push   rax
   100039385:	xchg   edi,eax
   100039386:	add    BYTE PTR [rax],al
   100039388:	xchg   esi,eax
   100039389:	xchg   edi,eax
   10003938a:	add    BYTE PTR [rax],al
   10003938c:	xchg   esp,eax
   10003938d:	add    r8b,BYTE PTR [r8]
   100039390:	adc    BYTE PTR [rax-0x67af0000],bl
   100039396:	add    BYTE PTR [rax],al
   100039398:	cwde   
   100039399:	rex.XB add al,BYTE PTR [r8]
   10003939c:	(bad)  
   10003939d:	cwde   
   10003939e:	add    BYTE PTR [rax],al
   1000393a0:	xchg   esp,eax
   1000393a1:	cwde   
   1000393a2:	add    BYTE PTR [rax],al
   1000393a4:	mov    ah,0x47
   1000393a6:	add    al,BYTE PTR [rax]
   1000393a8:	xchg   esp,eax
   1000393a9:	cwde   
   1000393aa:	add    BYTE PTR [rax],al
   1000393ac:	xlat   BYTE PTR ds:[rbx]
   1000393ad:	cwde   
   1000393ae:	add    BYTE PTR [rax],al
   1000393b0:	rol    BYTE PTR [rdi+0x2],1
   1000393b3:	add    bh,dl
   1000393b5:	cwde   
   1000393b6:	add    BYTE PTR [rax],al
   1000393b8:	jno    0x100039353
   1000393ba:	add    BYTE PTR [rax],al
   1000393bc:	call   0x171039608
   1000393c1:	cdq    
   1000393c2:	add    BYTE PTR [rax],al
   1000393c4:	mov    ds,WORD PTR [rcx+0x47fc0000]
   1000393ca:	add    al,BYTE PTR [rax]
   1000393cc:	mov    ds,WORD PTR [rcx-0x66590000]
   1000393d2:	add    BYTE PTR [rax],al
   1000393d4:	or     al,0x48
   1000393d6:	add    al,BYTE PTR [rax]
   1000393d8:	rcr    BYTE PTR [rcx-0x65160000],1
   1000393de:	add    BYTE PTR [rax],al
   1000393e0:	sbb    al,0x48
   1000393e2:	add    al,BYTE PTR [rax]
   1000393e4:	rex
   1000393e5:	fwait
   1000393e6:	add    BYTE PTR [rax],al
   1000393e8:	(bad)  
   1000393e9:	fwait
   1000393ea:	add    BYTE PTR [rax],al
   1000393ec:	cwde   
   1000393ed:	rex.XB add al,BYTE PTR [r8]
   1000393f0:	rex pushf 
   1000393f2:	add    BYTE PTR [rax],al
   1000393f4:	call   0x13c039495
   1000393f9:	rex.W add al,BYTE PTR [rax]
   1000393fc:	push   rax
   1000393fd:	popf   
   1000393fe:	add    BYTE PTR [rax],al
   100039400:	(bad)  
   100039401:	popf   
   100039402:	add    BYTE PTR [rax],al
   100039404:	xchg   esp,eax
   100039405:	add    r8b,BYTE PTR [r8]
   100039408:	rcr    BYTE PTR [rbp-0x60e80000],1
   10003940e:	add    BYTE PTR [rax],al
   100039410:	rex.W
   100039411:	rex.W add al,BYTE PTR [rax]
   100039414:	nop
   100039415:	lahf   
   100039416:	add    BYTE PTR [rax],al
   100039418:	(bad)  
   100039419:	lahf   
   10003941a:	add    BYTE PTR [rax],al
   10003941c:	push   rax
   10003941d:	rex.W add al,BYTE PTR [rax]
   100039420:	(bad)  
   100039421:	lahf   
   100039422:	add    BYTE PTR [rax],al
   100039424:	movsxd esp,DWORD PTR [rax+0x486c0000]
   10003942a:	add    al,BYTE PTR [rax]
   10003942c:	movsxd esp,DWORD PTR [rax-0x5f840000]
   100039432:	add    BYTE PTR [rax],al
   100039434:	mov    BYTE PTR [rax+0x2],cl
   100039437:	add    al,ah
   100039439:	movabs al,ds:0x43980000a15b0000
   100039442:	add    al,BYTE PTR [rax]
   100039444:	movabs ds:0x43980000a3020000,al
   10003944e:	add    al,BYTE PTR [rax]
   100039450:	adc    BYTE PTR [rbx-0x5cc10000],ah
   100039456:	add    BYTE PTR [rax],al
   100039458:	cwde   
   100039459:	rex.W add al,BYTE PTR [rax]
   10003945c:	(bad)  
   10003945d:	movabs ds:0x48b00000a3b30000,eax
   100039466:	add    al,BYTE PTR [rax]
   100039468:	mov    bl,0xa3
   10003946a:	add    BYTE PTR [rax],al
   10003946c:	mul    DWORD PTR [rbx+0x48c80000]
   100039472:	add    al,BYTE PTR [rax]
   100039474:	add    BYTE PTR [rax+rax*1+0xa44a00],ah
   10003947b:	add    al,bl
   10003947d:	rex.W add al,BYTE PTR [rax]
   100039480:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100039482:	add    BYTE PTR [rax],al
   100039484:	(bad)  [rbp+0x48f40000]
   10003948a:	add    al,BYTE PTR [rax]
   10003948c:	(bad)  [rbp-0x59f00000]
   100039492:	add    BYTE PTR [rax],al
   100039494:	or     BYTE PTR [rcx+0x2],cl
   100039497:	add    BYTE PTR [rax],ah
   100039499:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   10003949a:	add    BYTE PTR [rax],al
   10003949c:	lods   al,BYTE PTR ds:[rsi]
   10003949d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   10003949e:	add    BYTE PTR [rax],al
   1000394a0:	sbb    BYTE PTR [rcx+0x2],cl
   1000394a3:	add    al,dh
   1000394a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1000394a6:	add    BYTE PTR [rax],al
   1000394a8:	add    eax,0x980000a8
   1000394ad:	rex.XB add al,BYTE PTR [r8]
   1000394b0:	and    BYTE PTR [rax-0x57c20000],ch
   1000394b6:	add    BYTE PTR [rax],al
   1000394b8:	cwde   
   1000394b9:	rex.XB add al,BYTE PTR [r8]
   1000394bc:	push   rax
   1000394bd:	test   al,0x0
   1000394bf:	add    BYTE PTR [rcx+rbp*4],dl
   1000394c2:	add    BYTE PTR [rax],al
   1000394c4:	cmp    BYTE PTR [rcx+0x2],cl
   1000394c7:	add    BYTE PTR [rax],ah
   1000394c9:	test   eax,0xa94a0000
   1000394ce:	add    BYTE PTR [rax],al
   1000394d0:	xchg   esp,eax
   1000394d1:	add    r8b,BYTE PTR [r8]
   1000394d4:	push   rax
   1000394d5:	test   eax,0xb3b70000
   1000394da:	add    BYTE PTR [rax],al
   1000394dc:	rex
   1000394dd:	rex.WB add al,BYTE PTR [r8]
   1000394e0:	add    BYTE PTR [rax+rax*1+0xb4f700],dh
   1000394e7:	add    BYTE PTR [rax+0x243],bl
   1000394ed:	mov    ch,0x0
   1000394ef:	add    BYTE PTR [rsi+rsi*4+0x0],ah
   1000394f3:	add    BYTE PTR [rcx+rcx*2+0x2],ch
   1000394f7:	add    BYTE PTR [rax-0x4a],dh
   1000394fa:	add    BYTE PTR [rax],al
   1000394fc:	lods   al,BYTE PTR ds:[rsi]
   1000394fd:	mov    edx,0x49740000
   100039502:	add    al,BYTE PTR [rax]
   100039504:	jo     0x1000394c1
   100039506:	add    BYTE PTR [rax],al
   100039508:	jne    0x1000394c8
   10003950a:	add    BYTE PTR [rax],al
   10003950c:	xchg   esp,eax
   10003950d:	rex.WB add al,BYTE PTR [r8]
   100039510:	sar    BYTE PTR [rsi-0x3c500000],0x0
   100039517:	add    BYTE PTR [rcx+rcx*2-0x3c3ffffe],dh
   10003951e:	add    BYTE PTR [rax],al
   100039520:	repnz (bad) 
   100039522:	add    BYTE PTR [rax],al
   100039524:	cwde   
   100039525:	rex.XB add al,BYTE PTR [r8]
   100039528:	loopne 0x1000394ef
   10003952a:	add    BYTE PTR [rax],al
   10003952c:	scas   eax,DWORD PTR es:[rdi]
   10003952d:	mov    DWORD PTR [rax],0x249c800
   100039533:	add    BYTE PTR [rax],ah
   100039535:	enter  0x0,0x1a
   100039539:	retf   
   10003953a:	add    BYTE PTR [rax],al
   10003953c:	in     al,0x49
   10003953e:	add    al,BYTE PTR [rax]
   100039540:	adc    ah,cl
   100039542:	add    BYTE PTR [rax],al
   100039544:	ins    BYTE PTR es:[rdi],dx
   100039545:	iret   
   100039546:	add    BYTE PTR [rax],al
   100039548:	or     al,0x4a
   10003954a:	add    al,BYTE PTR [rax]
   10003954c:	xor    al,dl
   10003954e:	add    BYTE PTR [rax],al
   100039550:	outs   dx,BYTE PTR ds:[rsi]
   100039551:	rol    BYTE PTR [rax],1
   100039553:	add    BYTE PTR [rax],bh
   100039555:	rex.WX add al,BYTE PTR [rax]
   100039558:	adc    al,0x0
   10003955b:	add    BYTE PTR [rax+rdx*8+0x45940000],bh
   100039562:	add    al,BYTE PTR [rax]
   100039564:	mov    esp,0x9a0000d0
   100039569:	rol    DWORD PTR [rax],cl
   10003956b:	add    BYTE PTR [rax+0x4a],al
   10003956e:	add    al,BYTE PTR [rax]
   100039570:	(bad)  
   100039571:	rol    DWORD PTR [rax],cl
   100039573:	add    BYTE PTR [rdi+0x540000d3],ah
   100039579:	rex.WX add al,BYTE PTR [rax]
   10003957c:	rcl    ch,1
   10003957e:	add    BYTE PTR [rax],al
   100039580:	add    edx,esi
   100039582:	add    BYTE PTR [rax],al
   100039584:	push   0x6000024a
   100039589:	(bad)  
   10003958a:	add    BYTE PTR [rax],al
   10003958c:	mov    esi,0x740000d6
   100039591:	rex.WX add al,BYTE PTR [rax]
   100039594:	lock (bad) 
   100039596:	add    BYTE PTR [rax],al
   100039598:	mov    edx,edi
   10003959a:	add    BYTE PTR [rax],al
   10003959c:	xchg   esp,eax
   10003959d:	add    r8b,BYTE PTR [r8]
   1000395a0:	movabs al,ds:0x980000d7c30000d7
   1000395a9:	rex.XB add al,BYTE PTR [r8]
   1000395ac:	rcl    bh,1
   1000395ae:	add    BYTE PTR [rax],al
   1000395b0:	imul   ebx,esi,0x0
   1000395b3:	add    BYTE PTR [rax+0x4a],ch
   1000395b6:	add    al,BYTE PTR [rax]
   1000395b8:	loopne 0x10003959f
   1000395ba:	add    BYTE PTR [rax],al
   1000395bc:	sbb    esp,esi
   1000395be:	add    BYTE PTR [rax],al
   1000395c0:	cwde   
   1000395c1:	rex.XB add al,BYTE PTR [r8]
   1000395c4:	xor    dh,ah
   1000395c6:	add    BYTE PTR [rax],al
   1000395c8:	repz out 0x0,eax
   1000395cb:	add    BYTE PTR [rax+0x46],dh
   1000395ce:	add    al,BYTE PTR [rax]
   1000395d0:	add    al,ch
   1000395d2:	add    BYTE PTR [rax],al
   1000395d4:	rex.RB jmp 0x1459795da
   1000395da:	add    al,BYTE PTR [rax]
   1000395dc:	push   rax
   1000395dd:	jmp    0xe98c95e2
   1000395e2:	add    BYTE PTR [rax],al
   1000395e4:	cwde   
   1000395e5:	rex.XB add al,BYTE PTR [r8]
   1000395e8:	loopne 0x1000395d3
   1000395ea:	add    BYTE PTR [rax],al
   1000395ec:	push   rbp
   1000395ed:	(bad)  
   1000395ee:	add    BYTE PTR [rax],al
   1000395f0:	cwde   
   1000395f1:	rex.XB add al,BYTE PTR [r8]
   1000395f4:	(bad)  
   1000395f5:	(bad)  
   1000395f6:	add    BYTE PTR [rax],al
   1000395f8:	sub    eax,0x7c0000eb
   1000395fd:	rex.WX add al,BYTE PTR [rax]
   100039600:	rex jmp 0x100039603
   100039603:	add    BYTE PTR [rsi-0x15],ch
   100039606:	add    BYTE PTR [rax],al
   100039608:	mov    BYTE PTR [rdx+0x2],cl
   10003960b:	add    BYTE PTR [rsi-0x15],ch
   10003960e:	add    BYTE PTR [rax],al
   100039610:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100039611:	jmp    0x100039613
   100039613:	add    BYTE PTR [rdx+rcx*2-0x145bfffe],dl
   10003961a:	add    BYTE PTR [rax],al
   10003961c:	mov    ah,0xeb
   10003961e:	add    BYTE PTR [rax],al
   100039620:	test   al,0x4a
   100039622:	add    al,BYTE PTR [rax]
   100039624:	mov    ah,0xeb
   100039626:	add    BYTE PTR [rax],al
   100039628:	mov    ebx,0xbc0000eb
   10003962d:	rex.WX add al,BYTE PTR [rax]
   100039630:	shr    bl,1
   100039632:	add    BYTE PTR [rax],al
   100039634:	rex.RB in al,dx
   100039636:	add    BYTE PTR [rax],al
   100039638:	cwde   
   100039639:	rex.XB add al,BYTE PTR [r8]
   10003963c:	push   rax
   10003963d:	in     al,dx
   10003963e:	add    BYTE PTR [rax],al
   100039640:	ret    
   100039641:	out    dx,al
   100039642:	add    BYTE PTR [rax],al
   100039644:	int3   
   100039645:	rex.WX add al,BYTE PTR [rax]
   100039648:	shr    dh,1
   10003964a:	add    BYTE PTR [rax],al
   10003964c:	movabs ds:0xb000024ae40000ef,al
   100039655:	out    dx,eax
   100039656:	add    BYTE PTR [rax],al
   100039658:	pop    rax
   100039659:	test   BYTE PTR [rax],0x0
   10003965c:	cld    
   10003965d:	rex.WX add al,BYTE PTR [rax]
   100039660:	nop
   100039661:	test   BYTE PTR [rax],0x0
   100039664:	outs   dx,DWORD PTR ds:[rsi]
   100039665:	test   DWORD PTR [rax],0x24b2c00
   10003966b:	add    BYTE PTR [rax-0x9],dh
   10003966e:	add    BYTE PTR [rax],al
   100039670:	mov    al,0xf7
   100039672:	add    BYTE PTR [rax],al
   100039674:	(bad)  
   100039675:	xchg   esi,eax
   100039676:	add    eax,DWORD PTR [rax]
   100039678:	shl    bh,0x0
   10003967b:	add    BYTE PTR [rdi+0x340000f8],ch
   100039681:	rex.WXB add al,BYTE PTR [r8]
   100039684:	sar    al,0x0
   100039687:	add    BYTE PTR [rdx-0x6],dl
   10003968a:	add    BYTE PTR [rax],al
   10003968c:	rex.R
   10003968d:	rex.WXB add al,BYTE PTR [r8]
   100039690:	loopne 0x10003968c
   100039692:	add    BYTE PTR [rax],al
   100039694:	jmp    0x100039690
   100039696:	add    BYTE PTR [rax],al
   100039698:	cwde   
   100039699:	rex.XB add al,BYTE PTR [r8]
   10003969c:	jmp    0x100039698
   10003969e:	add    BYTE PTR [rax],al
   1000396a0:	(bad)  
   1000396a1:	sti    
   1000396a2:	add    BYTE PTR [rax],al
   1000396a4:	rex.WXB add al,BYTE PTR fs:[r8]
   1000396a8:	(bad)  
   1000396a9:	sti    
   1000396aa:	add    BYTE PTR [rax],al
   1000396ac:	(bad)  
   1000396ad:	cld    
   1000396ae:	add    BYTE PTR [rax],al
   1000396b0:	test   BYTE PTR [rbx+0x2],cl
   1000396b3:	add    BYTE PTR [rax],dh
   1000396b5:	cld    
   1000396b6:	add    BYTE PTR [rax],al
   1000396b8:	rex.RXB cld 
   1000396ba:	add    BYTE PTR [rax],al
   1000396bc:	cwde   
   1000396bd:	rex.XB add al,BYTE PTR [r8]
   1000396c0:	push   rax
   1000396c1:	cld    
   1000396c2:	add    BYTE PTR [rax],al
   1000396c4:	addr32 cld 
   1000396c6:	add    BYTE PTR [rax],al
   1000396c8:	cwde   
   1000396c9:	rex.XB add al,BYTE PTR [r8]
   1000396cc:	jo     0x1000396ca
   1000396ce:	add    BYTE PTR [rax],al
   1000396d0:	xchg   ah,bh
   1000396d2:	add    BYTE PTR [rax],al
   1000396d4:	cwde   
   1000396d5:	rex.XB add al,BYTE PTR [r8]
   1000396d8:	nop
   1000396d9:	cld    
   1000396da:	add    BYTE PTR [rax],al
   1000396dc:	pushf  
   1000396dd:	std    
   1000396de:	add    BYTE PTR [rax],al
   1000396e0:	xchg   esp,eax
   1000396e1:	rex.WXB add al,BYTE PTR [r8]
   1000396e4:	loopne 0x1000396e3
   1000396e6:	add    BYTE PTR [rax],al
   1000396e8:	pop    rsi
   1000396e9:	inc    DWORD PTR [rax]
   1000396eb:	add    BYTE PTR [rax-0x2ffffdb5],dh
   1000396f1:	add    eax,DWORD PTR [rcx]
   1000396f3:	add    bl,cl
   1000396f5:	add    al,0x1
   1000396f7:	add    ah,dl
   1000396f9:	rex.WXB add al,BYTE PTR [r8]
   1000396fc:	and    BYTE PTR [rip+0x5d00001],al        # 0x105d39703
   100039702:	add    DWORD PTR [rax],eax
   100039704:	in     al,dx
   100039705:	rex.WXB add al,BYTE PTR [r8]
   100039708:	add    BYTE PTR [rsi],al
   10003970a:	add    DWORD PTR [rax],eax
   10003970c:	adc    eax,DWORD PTR [rdi]
   10003970e:	add    DWORD PTR [rax],eax
   100039710:	add    BYTE PTR [rdx+rax*1+0x0],cl
   100039714:	(bad)  
   100039715:	(bad)  
   100039716:	add    DWORD PTR [rax],eax
   100039718:	adc    eax,0x18000108
   10003971d:	rex.WR add r8b,BYTE PTR [rax]
   100039720:	and    BYTE PTR [rax],cl
   100039722:	add    DWORD PTR [rax],eax
   100039724:	ret    0x108
   100039727:	add    BYTE PTR [rax],dh
   100039729:	rex.WR add r8b,BYTE PTR [rax]
   10003972c:	ror    BYTE PTR [rax],1
   10003972e:	add    DWORD PTR [rax],eax
   100039730:	outs   dx,DWORD PTR ds:[rsi]
   100039731:	or     DWORD PTR [rcx],eax
   100039733:	add    BYTE PTR [rax+0x4c],cl
   100039736:	add    al,BYTE PTR [rax]
   100039738:	or     BYTE PTR [rcx],0x1
   10003973b:	add    BYTE PTR [rdx+rcx*1+0x4c5c0001],ah
   100039742:	add    al,BYTE PTR [rax]
   100039744:	mov    al,0xa
   100039746:	add    DWORD PTR [rax],eax
   100039748:	int    0xc
   10003974a:	add    DWORD PTR [rax],eax
   10003974c:	ins    BYTE PTR es:[rdi],dx
   10003974d:	rex.WR add r8b,BYTE PTR [rax]
   100039750:	and    BYTE PTR [rip+0xd370001],cl        # 0x10d3a9757
   100039756:	add    DWORD PTR [rax],eax
   100039758:	xchg   esp,eax
   100039759:	add    r8b,BYTE PTR [r8]
   10003975c:	rex or eax,0xd580001
   100039762:	add    DWORD PTR [rax],eax
   100039764:	xchg   esp,eax
   100039765:	add    r8b,BYTE PTR [r8]
   100039768:	(bad)  
   100039769:	or     eax,0xf980001
   10003976e:	add    DWORD PTR [rax],eax
   100039770:	xchg   esp,eax
   100039771:	rex.WR add r8b,BYTE PTR [rax]
   100039774:	mov    al,0xf
   100039776:	add    DWORD PTR [rax],eax
   100039778:	call   0xb003988e
   10003977d:	rex.WR add r8b,BYTE PTR [rax]
   100039780:	add    BYTE PTR [rdx],dl
   100039782:	add    DWORD PTR [rax],eax
   100039784:	movabs eax,ds:0xc000024ccc000112
   10003978d:	adc    al,BYTE PTR [rcx]
   10003978f:	add    BYTE PTR [rcx+0x13],ah
   100039792:	add    DWORD PTR [rax],eax
   100039794:	in     al,0x4c
   100039796:	add    al,BYTE PTR [rax]
   100039798:	nop
   100039799:	adc    eax,DWORD PTR [rcx]
   10003979b:	add    BYTE PTR [rsi],ch
   10003979d:	adc    eax,0x4cfc0001
   1000397a2:	add    al,BYTE PTR [rax]
   1000397a4:	nop
   1000397a5:	adc    eax,0x162f0001
   1000397aa:	add    DWORD PTR [rax],eax
   1000397ac:	sbb    al,0x4d
   1000397ae:	add    al,BYTE PTR [rax]
   1000397b0:	push   rax
   1000397b1:	(bad)  
   1000397b2:	add    DWORD PTR [rax],eax
   1000397b4:	out    dx,eax
   1000397b5:	(bad)  
   1000397b6:	add    DWORD PTR [rax],eax
   1000397b8:	xor    BYTE PTR [rbp+0x2],cl
   1000397bb:	add    BYTE PTR [rax],dl
   1000397bd:	(bad)  
   1000397be:	add    DWORD PTR [rax],eax
   1000397c0:	mov    cl,0x17
   1000397c2:	add    DWORD PTR [rax],eax
   1000397c4:	rex.R
   1000397c5:	rex.WRB add r8b,BYTE PTR [r8]
   1000397c8:	loopne 0x1000397e1
   1000397ca:	add    DWORD PTR [rax],eax
   1000397cc:	sbb    DWORD PTR [rax],0x4d5c0001
   1000397d2:	add    al,BYTE PTR [rax]
   1000397d4:	mov    al,0x18
   1000397d6:	add    DWORD PTR [rax],eax
   1000397d8:	imul   ebx,DWORD PTR [rcx],0x4d740001
   1000397de:	add    al,BYTE PTR [rax]
   1000397e0:	nop
   1000397e1:	sbb    DWORD PTR [rcx],eax
   1000397e3:	add    BYTE PTR [rdi+0x1a],bl
   1000397e6:	add    DWORD PTR [rax],eax
   1000397e8:	test   BYTE PTR [rbp+0x2],cl
   1000397eb:	add    al,al
   1000397ed:	sbb    al,BYTE PTR [rcx]
   1000397ef:	add    cl,cl
   1000397f1:	sbb    al,0x1
   1000397f3:	add    BYTE PTR [rbp+rcx*2+0x1e000002],dl
   1000397fa:	add    DWORD PTR [rax],eax
   1000397fc:	pop    rsp
   1000397fd:	(bad)  
   1000397fe:	add    DWORD PTR [rax],eax
   100039800:	mov    al,0x4d
   100039802:	add    al,BYTE PTR [rax]
   100039804:	nop
   100039805:	(bad)  
   100039806:	add    DWORD PTR [rax],eax
   100039808:	(bad)  
   100039809:	(bad)  
   10003980a:	add    DWORD PTR [rax],eax
   10003980c:	ror    BYTE PTR [rbp+0x2],0x0
   100039810:	adc    BYTE PTR [rdi],bl
   100039812:	add    DWORD PTR [rax],eax
   100039814:	(bad)  
   100039815:	(bad)  
   100039816:	add    DWORD PTR [rax],eax
   100039818:	push   0xffffffffd000024a
   10003981d:	(bad)  
   10003981e:	add    DWORD PTR [rax],eax
   100039820:	lahf   
   100039821:	and    BYTE PTR [rcx],al
   100039823:	add    ah,dl
   100039825:	rex.WRB add r8b,BYTE PTR [r8]
   100039828:	mov    al,0x20
   10003982a:	add    DWORD PTR [rax],eax
   10003982c:	xor    DWORD PTR [rcx],esp
   10003982e:	add    DWORD PTR [rax],eax
   100039830:	cwde   
   100039831:	rex.XB add al,BYTE PTR [r8]
   100039834:	rex and DWORD PTR [rcx],eax
   100039837:	add    BYTE PTR [rcx+riz*1+0x4de40001],dl
   10003983e:	add    al,BYTE PTR [rax]
   100039840:	movabs al,ds:0xf4000121be000121
   100039849:	rex.WRB add r8b,BYTE PTR [r8]
   10003984c:	shl    BYTE PTR [rcx],1
   10003984e:	add    DWORD PTR [rax],eax
   100039850:	xor    ah,BYTE PTR [rcx+rax*1]
   100039853:	add    BYTE PTR [rax],cl
   100039855:	rex.WRX add r8b,BYTE PTR [rax]
   100039858:	jo     0x10003987e
   10003985a:	add    DWORD PTR [rax],eax
   10003985c:	cdq    
   10003985d:	and    al,0x1
   10003985f:	add    BYTE PTR [rax],ah
   100039861:	rex.WRX add r8b,BYTE PTR [rax]
   100039864:	movabs al,ds:0x30000126d4000124
   10003986d:	rex.WRX add r8b,BYTE PTR [rax]
   100039870:	loopne 0x100039898
   100039872:	add    DWORD PTR [rax],eax
   100039874:	lea    esp,[rdi]
   100039876:	add    DWORD PTR [rax],eax
   100039878:	rex.R
   100039879:	rex.WRX add r8b,BYTE PTR [rax]
   10003987c:	push   rax
   10003987d:	sub    DWORD PTR [rcx],eax
   10003987f:	add    BYTE PTR [rsi],al
   100039881:	sub    al,BYTE PTR [rcx]
   100039883:	add    BYTE PTR [rax+0x4e],ah
   100039886:	add    al,BYTE PTR [rax]
   100039888:	lock sub eax,DWORD PTR [rcx]
   10003988b:	add    BYTE PTR [rcx+0x7c000131],dl
   100039891:	rex.WRX add r8b,BYTE PTR [rax]
   100039894:	shl    BYTE PTR [rcx],1
   100039896:	add    DWORD PTR [rax],eax
   100039898:	add    DWORD PTR [rdx],esi
   10003989a:	add    DWORD PTR [rax],eax
   10003989c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003989d:	rex.WRX add r8b,BYTE PTR [rax]
   1000398a0:	add    DWORD PTR [rdx],esi
   1000398a2:	add    DWORD PTR [rax],eax
   1000398a4:	(bad)  
   1000398a5:	xor    eax,DWORD PTR [rcx]
   1000398a7:	add    BYTE PTR [rsi+rcx*2+0x33270002],dh
   1000398ae:	add    DWORD PTR [rax],eax
   1000398b0:	cmp    DWORD PTR [rbx],esi
   1000398b2:	add    DWORD PTR [rax],eax
   1000398b4:	int3   
   1000398b5:	rex.WRX add r8b,BYTE PTR [rax]
   1000398b8:	xor    BYTE PTR [rbx],0x1
   1000398bb:	add    BYTE PTR [rdx],bl
   1000398bd:	xor    eax,0x4edc0001
   1000398c2:	add    al,BYTE PTR [rax]
   1000398c4:	(bad)  
   1000398c5:	xor    eax,0x358c0001
   1000398ca:	add    DWORD PTR [rax],eax
   1000398cc:	xchg   esp,eax
   1000398cd:	add    r8b,BYTE PTR [r8]
   1000398d0:	mov    WORD PTR [rip+0x35c60001],?        # 0x135c998d7
   1000398d6:	add    DWORD PTR [rax],eax
   1000398d8:	jns    0x10003986a
   1000398da:	add    eax,DWORD PTR [rax]
   1000398dc:	(bad)  
   1000398dd:	xor    eax,0x36670001
   1000398e2:	add    DWORD PTR [rax],eax
   1000398e4:	or     BYTE PTR [rdi+0x2],cl
   1000398e7:	add    BYTE PTR [rdi+0x36],ah
   1000398ea:	add    DWORD PTR [rax],eax
   1000398ec:	xor    BYTE PTR [rsi],0x1
   1000398ef:	add    BYTE PTR [rdi+rcx*2],bl
   1000398f2:	add    al,BYTE PTR [rax]
   1000398f4:	xor    BYTE PTR [rsi],0x1
   1000398f7:	add    BYTE PTR [rbx+0x2c000136],bl
   1000398fd:	rex.WRXB add r8b,BYTE PTR [r8]
   100039900:	fwait
   100039901:	add    DWORD PTR ss:[rax],eax
   100039904:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   100039905:	add    DWORD PTR ss:[rax],eax
   100039908:	rex
   100039909:	rex.WRXB add r8b,BYTE PTR [r8]
   10003990c:	loopne 0x100039944
   10003990e:	add    DWORD PTR [rax],eax
   100039910:	test   BYTE PTR [rcx],bh
   100039912:	add    DWORD PTR [rax],eax
   100039914:	push   rax
   100039915:	rex.WRXB add r8b,BYTE PTR [r8]
   100039918:	sar    BYTE PTR [rcx],1
   10003991a:	add    DWORD PTR [rax],eax
   10003991c:	lea    edi,[rbx]
   10003991e:	add    DWORD PTR [rax],eax
   100039920:	js     0x100039971
   100039922:	add    al,BYTE PTR [rax]
   100039924:	sar    BYTE PTR [rbx],0x1
   100039927:	add    BYTE PTR [rsi+0x3c],cl
   10003992a:	add    DWORD PTR [rax],eax
   10003992c:	cmp    BYTE PTR [rdx+0x2],cl
   10003992f:	add    BYTE PTR [rax+0x3c],dh
   100039932:	add    DWORD PTR [rax],eax
   100039934:	cmp    bh,BYTE PTR [rsi]
   100039936:	add    DWORD PTR [rax],eax
   100039938:	movabs al,ds:0xf400013ff000024f
   100039941:	add    DWORD PTR [r8],r8d
   100039944:	mov    eax,0x24f
   100039949:	rex.RX add DWORD PTR [rax],r8d
   10003994c:	sub    al,BYTE PTR [rsi+0x1]
   10003994f:	add    al,ah
   100039951:	rex.WRXB add r8b,BYTE PTR [r8]
   100039954:	xor    BYTE PTR [rsi+0x1],al
   100039957:	add    BYTE PTR [rdi+rax*2+0x1],ah
   10003995b:	add    al,dh
   10003995d:	rex.WRXB add r8b,BYTE PTR [r8]
   100039960:	add    BYTE PTR [rdi+0x1],0x0
   100039964:	fwait
   100039965:	rex.RXB add DWORD PTR [r8],r8d
   100039968:	cwde   
   100039969:	rex.XB add al,BYTE PTR [r8]
   10003996c:	rol    BYTE PTR [rdi+0x1],1
   10003996f:	add    BYTE PTR [rdx+0x48],bl
   100039972:	add    DWORD PTR [rax],eax
   100039974:	sbb    al,0x50
   100039976:	add    al,BYTE PTR [rax]
   100039978:	(bad)  
   100039979:	add    QWORD PTR [rax],rax
   10003997c:	out    0x48,al
   10003997e:	add    DWORD PTR [rax],eax
   100039980:	xor    al,0x50
   100039982:	add    al,BYTE PTR [rax]
   100039984:	adc    BYTE PTR [rcx+0x1],cl
   100039987:	add    bl,dl
   100039989:	rex.WX add QWORD PTR [rax],rax
   10003998c:	jo     0x1000399d4
   10003998e:	add    al,BYTE PTR [rax]
   100039990:	add    BYTE PTR [rbx+0x1],cl
   100039993:	add    BYTE PTR [rsi],ah
   100039995:	rex.WXB add QWORD PTR [r8],rax
   100039998:	rex.WR push rax
   10003999a:	add    al,BYTE PTR [rax]
   10003999c:	xor    BYTE PTR [rbx+0x1],cl
   10003999f:	add    BYTE PTR [rax+0x4b],cl
   1000399a2:	add    DWORD PTR [rax],eax
   1000399a4:	cwde   
   1000399a5:	rex.XB add al,BYTE PTR [r8]
   1000399a8:	push   rax
   1000399a9:	rex.WXB add QWORD PTR [r8],rax
   1000399ac:	jbe    0x1000399f9
   1000399ae:	add    DWORD PTR [rax],eax
   1000399b0:	pop    rsp
   1000399b1:	push   rax
   1000399b2:	add    al,BYTE PTR [rax]
   1000399b4:	or     BYTE PTR [rbx+0x1],0x0
   1000399b8:	cli    
   1000399b9:	rex.WXB add QWORD PTR [r8],rax
   1000399bc:	cwde   
   1000399bd:	rex.XB add al,BYTE PTR [r8]
   1000399c0:	add    BYTE PTR [rcx+rax*1+0x0],cl
   1000399c4:	fwait
   1000399c5:	add    QWORD PTR [rax],r8
   1000399c8:	xchg   esp,eax
   1000399c9:	add    r8b,BYTE PTR [r8]
   1000399cc:	mov    al,0x4c
   1000399ce:	add    DWORD PTR [rax],eax
   1000399d0:	(bad)  
   1000399d1:	add    QWORD PTR [r8],r8
   1000399d4:	xchg   esp,eax
   1000399d5:	add    r8b,BYTE PTR [r8]
   1000399d8:	rex
   1000399d9:	add    QWORD PTR [r8],r8
   1000399dc:	mov    edx,0x6c00014d
   1000399e1:	push   rax
   1000399e2:	add    al,BYTE PTR [rax]
   1000399e4:	ror    BYTE PTR [rbp+0x1],0x0
   1000399e8:	adc    BYTE PTR [rsi+0x1],cl
   1000399eb:	add    BYTE PTR [rax+0x10000250],al
   1000399f1:	rex.WRX add QWORD PTR [rax],r8
   1000399f4:	rex.WRXB
   1000399f5:	rex.WRX add QWORD PTR [rax],r8
   1000399f8:	nop
   1000399f9:	push   rax
   1000399fa:	add    al,BYTE PTR [rax]
   1000399fc:	rex.WRXB
   1000399fd:	rex.WRX add QWORD PTR [rax],r8
   100039a00:	ret    
   100039a01:	rex.WRX add QWORD PTR [rax],r8
   100039a04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100039a05:	push   rax
   100039a06:	add    al,BYTE PTR [rax]
   100039a08:	lock rex.WRX add QWORD PTR [rax],r8
   100039a0c:	sbb    cl,BYTE PTR [rdi+0x1]
   100039a0f:	add    BYTE PTR [rax+rdx*2+0x4f200002],dh
   100039a16:	add    DWORD PTR [rax],eax
   100039a18:	outs   dx,BYTE PTR ds:[rsi]
   100039a19:	push   rcx
   100039a1a:	add    DWORD PTR [rax],eax
   100039a1c:	(bad)  
   100039a1d:	push   rax
   100039a1e:	add    al,BYTE PTR [rax]
   100039a20:	adc    BYTE PTR [rcx+0x1],0x0
   100039a24:	fist   WORD PTR [rcx+0x1]
   100039a27:	add    ah,bl
   100039a29:	push   rax
   100039a2a:	add    al,BYTE PTR [rax]
   100039a2c:	fist   WORD PTR [rcx+0x1]
   100039a2f:	add    BYTE PTR [rax-0x13fffead],cl
   100039a35:	push   rax
   100039a36:	add    al,BYTE PTR [rax]
   100039a38:	mov    BYTE PTR [rbx+0x1],dl
   100039a3b:	add    BYTE PTR [rbx+0xc000153],dl
   100039a41:	push   rcx
   100039a42:	add    al,BYTE PTR [rax]
   100039a44:	xchg   ebx,eax
   100039a45:	push   rbx
   100039a46:	add    DWORD PTR [rax],eax
   100039a48:	mov    ah,0x53
   100039a4a:	add    DWORD PTR [rax],eax
   100039a4c:	sbb    al,0x51
   100039a4e:	add    al,BYTE PTR [rax]
   100039a50:	rcl    BYTE PTR [rbx+0x1],0x0
   100039a54:	cdq    
   100039a55:	pop    rsp
   100039a56:	add    DWORD PTR [rax],eax
   100039a58:	cmp    al,0x51
   100039a5a:	add    al,BYTE PTR [rax]
   100039a5c:	lock pop rbp
   100039a5e:	add    DWORD PTR [rax],eax
   100039a60:	test   DWORD PTR [rsi+0x1],ebx
   100039a63:	add    BYTE PTR [rbx+rcx*2],ch
   100039a66:	add    al,BYTE PTR [rax]
   100039a68:	and    BYTE PTR [rdi+0x1],bl
   100039a6b:	add    BYTE PTR [rbp+0x6c00015f],ch
   100039a71:	push   rcx
   100039a72:	add    al,BYTE PTR [rax]
   100039a74:	rcr    BYTE PTR [rdi+0x1],0x0
   100039a78:	and    DWORD PTR [rax+0x1],0x0
   100039a7c:	mov    WORD PTR [rcx+0x2],ss
   100039a7f:	add    BYTE PTR [rax+0x5a000161],dh
   100039a85:	(bad)  
   100039a87:	add    BYTE PTR [rcx+rdx*2+0x62600002],ch
   100039a8e:	add    DWORD PTR [rax],eax
   100039a90:	repz (bad) 
   100039a93:	add    BYTE PTR [rbp+rax*2+0x63000002],dl
   100039a9a:	add    DWORD PTR [rax],eax
   100039a9c:	jne    0x100039b02
   100039a9e:	add    DWORD PTR [rax],eax
   100039aa0:	cwde   
   100039aa1:	rex.XB add al,BYTE PTR [r8]
   100039aa4:	and    BYTE PTR [rcx+rax*1+0x0],0x7d
   100039aa9:	add    DWORD PTR gs:[rax],eax
   100039aac:	xchg   esp,eax
   100039aad:	add    r8b,BYTE PTR [r8]
   100039ab0:	nop
   100039ab1:	add    DWORD PTR gs:[rax],eax
   100039ab4:	adc    DWORD PTR [rsi+0x1],esp
   100039ab7:	add    BYTE PTR [rax+0x20000243],bl
   100039abd:	add    WORD PTR [rax],ax
   100039ac0:	mov    bl,0x66
   100039ac2:	add    DWORD PTR [rax],eax
   100039ac4:	cwde   
   100039ac5:	rex.XB add al,BYTE PTR [r8]
   100039ac8:	shl    BYTE PTR [rsi+0x1],0x0
   100039acc:	in     eax,dx
   100039acd:	add    WORD PTR [rax],ax
   100039ad0:	(bad)  
   100039ad1:	push   rcx
   100039ad2:	add    al,BYTE PTR [rax]
   100039ad4:	in     eax,dx
   100039ad5:	add    WORD PTR [rax],ax
   100039ad8:	(bad)  
   100039ad9:	add    DWORD PTR [eax],eax
   100039adc:	rcl    BYTE PTR [rcx+0x2],1
   100039adf:	add    BYTE PTR [rdi],ah
   100039ae1:	add    DWORD PTR [eax],eax
   100039ae4:	(bad)  
   100039ae5:	add    DWORD PTR [eax],eax
   100039ae8:	in     al,0x51
   100039aea:	add    al,BYTE PTR [rax]
   100039aec:	(bad)  
   100039aed:	add    DWORD PTR [eax],eax
   100039af0:	rex.X
   100039af1:	add    DWORD PTR [eax],eax
   100039af4:	clc    
   100039af5:	push   rcx
   100039af6:	add    al,BYTE PTR [rax]
   100039af8:	movabs al,ds:0x94000167c0000167
   100039b01:	add    r8b,BYTE PTR [r8]
   100039b04:	shl    BYTE PTR [rdi+0x1],1
   100039b07:	add    BYTE PTR [rip+0xffffffff94000168],ah        # 0x94039c75
   100039b0d:	add    r8b,BYTE PTR [r8]
   100039b10:	xor    BYTE PTR [rax+0x1],ch
   100039b13:	add    BYTE PTR [rbx+0x69],dh
   100039b16:	add    DWORD PTR [rax],eax
   100039b18:	or     BYTE PTR [rdx+0x2],dl
   100039b1b:	add    BYTE PTR [rax+0x24000169],dl
   100039b21:	push   0x1
   100039b23:	add    BYTE PTR [rax],ah
   100039b25:	push   rdx
   100039b26:	add    al,BYTE PTR [rax]
   100039b28:	xor    BYTE PTR [rdx+0x1],ch
   100039b2b:	add    al,bl
   100039b2d:	push   0x1
   100039b2f:	add    BYTE PTR [rbx+rcx*2],dh
   100039b32:	add    al,BYTE PTR [rax]
   100039b34:	add    BYTE PTR [rbp+0x1],ch
   100039b37:	add    BYTE PTR [rsi+0x6d],al
   100039b3a:	add    DWORD PTR [rax],eax
   100039b3c:	cwde   
   100039b3d:	rex.XB add al,BYTE PTR [r8]
   100039b40:	push   rax
   100039b41:	ins    DWORD PTR es:[rdi],dx
   100039b42:	add    DWORD PTR [rax],eax
   100039b44:	xchg   esi,eax
   100039b45:	ins    DWORD PTR es:[rdi],dx
   100039b46:	add    DWORD PTR [rax],eax
   100039b48:	cwde   
   100039b49:	rex.XB add al,BYTE PTR [r8]
   100039b4c:	movabs al,ds:0x9800016de600016d
   100039b55:	rex.XB add al,BYTE PTR [r8]
   100039b58:	lock ins DWORD PTR es:[rdi],dx
   100039b5a:	add    DWORD PTR [rax],eax
   100039b5c:	mov    ch,0x71
   100039b5e:	add    DWORD PTR [rax],eax
   100039b60:	xor    BYTE PTR [rdx+0x2],dl
   100039b63:	add    al,al
   100039b65:	jno    0x100039b68
   100039b67:	add    BYTE PTR [rbp+0x30000175],dl
   100039b6d:	push   rdx
   100039b6e:	add    al,BYTE PTR [rax]
   100039b70:	movabs al,ds:0x3000017ad7000175
   100039b79:	push   rdx
   100039b7a:	add    al,BYTE PTR [rax]
   100039b7c:	loopne 0x100039bf8
   100039b7e:	add    DWORD PTR [rax],eax
   100039b80:	rex.X add BYTE PTR [rcx],0x0
   100039b84:	xor    BYTE PTR [rdx+0x2],dl
   100039b87:	add    BYTE PTR [rax-0x80],dl
   100039b8a:	add    DWORD PTR [rax],eax
   100039b8c:	pop    QWORD PTR [rax+0x43980001]
   100039b92:	add    al,BYTE PTR [rax]
   100039b94:	add    BYTE PTR [rcx-0x7e3effff],al
   100039b9a:	add    DWORD PTR [rax],eax
   100039b9c:	xchg   esp,eax
   100039b9d:	add    r8b,BYTE PTR [r8]
   100039ba0:	push   rax
   100039ba1:	(bad)  
   100039ba2:	add    DWORD PTR [rax],eax
   100039ba4:	leave  
   100039ba5:	(bad)  
   100039ba6:	add    DWORD PTR [rax],eax
   100039ba8:	cmp    al,0x52
   100039baa:	add    al,BYTE PTR [rax]
   100039bac:	rol    BYTE PTR [rdx-0x7cacffff],1
   100039bb2:	add    DWORD PTR [rax],eax
   100039bb4:	rex.W push rdx
   100039bb6:	add    al,BYTE PTR [rax]
   100039bb8:	(bad)  
   100039bb9:	add    DWORD PTR [rcx],0x0
   100039bbc:	mov    ebp,0x54000183
   100039bc1:	push   rdx
   100039bc2:	add    al,BYTE PTR [rax]
   100039bc4:	rol    BYTE PTR [rbx-0x7b0effff],1
   100039bca:	add    DWORD PTR [rax],eax
   100039bcc:	ins    BYTE PTR es:[rdi],dx
   100039bcd:	push   rdx
   100039bce:	add    al,BYTE PTR [rax]
   100039bd0:	add    BYTE PTR [rbp-0x7a4fffff],al
   100039bd6:	add    DWORD PTR [rax],eax
   100039bd8:	test   BYTE PTR [rdx+0x2],dl
   100039bdb:	add    al,al
   100039bdd:	test   DWORD PTR [rcx],eax
   100039bdf:	add    BYTE PTR [rcx-0x7a],al
   100039be2:	add    DWORD PTR [rax],eax
   100039be4:	movabs al,ds:0xe700018660000252
   100039bed:	xchg   DWORD PTR [rcx],eax
   100039bef:	add    BYTE PTR [rdx+rdx*2-0x780ffffe],ch
   100039bf6:	add    DWORD PTR [rax],eax
   100039bf8:	cld    
   100039bf9:	mov    BYTE PTR [rcx],al
   100039bfb:	add    BYTE PTR [rdx+rdx*2-0x76dffffe],dh
   100039c02:	add    DWORD PTR [rax],eax
   100039c04:	call   0x98039d92
   100039c09:	rex.XB add al,BYTE PTR [r8]
   100039c0c:	js     0x100039b9b
   100039c0e:	add    DWORD PTR [rax],eax
   100039c10:	fisttp QWORD PTR [rbp+0x4a380001]
   100039c16:	add    al,BYTE PTR [rax]
   100039c18:	in     al,0x8d
   100039c1a:	add    DWORD PTR [rax],eax
   100039c1c:	pop    QWORD PTR fs:[rcx]
   100039c1f:	add    ah,bl
   100039c21:	push   rdx
   100039c22:	add    al,BYTE PTR [rax]
   100039c24:	lock xchg ecx,eax
   100039c26:	add    DWORD PTR [rax],eax
   100039c28:	mov    esi,0x98000192
   100039c2d:	rex.XB add al,BYTE PTR [r8]
   100039c30:	rcl    BYTE PTR [rdx-0x6d1dffff],1
   100039c36:	add    DWORD PTR [rax],eax
   100039c38:	cwde   
   100039c39:	rex.XB add al,BYTE PTR [r8]
   100039c3c:	call   0x151039dd3
   100039c41:	xchg   ebx,eax
   100039c42:	add    DWORD PTR [rax],eax
   100039c44:	mov    al,0x4d
   100039c46:	add    al,BYTE PTR [rax]
   100039c48:	in     al,0x93
   100039c4a:	add    DWORD PTR [rax],eax
   100039c4c:	xchg   esp,eax
   100039c4d:	xchg   esp,eax
   100039c4e:	add    DWORD PTR [rax],eax
   100039c50:	add    al,0x53
   100039c52:	add    al,BYTE PTR [rax]
   100039c54:	movabs al,ds:0x98000194b7000194
   100039c5d:	rex.XB add al,BYTE PTR [r8]
   100039c60:	rcl    BYTE PTR [rcx+rax*1+0x1950100],0x0
   100039c68:	cwde   
   100039c69:	rex.XB add al,BYTE PTR [r8]
   100039c6c:	or     BYTE PTR [rbp-0x6adfffff],dl
   100039c72:	add    DWORD PTR [rax],eax
   100039c74:	cwde   
   100039c75:	rex.XB add al,BYTE PTR [r8]
   100039c78:	xor    al,0x95
   100039c7a:	add    DWORD PTR [rax],eax
   100039c7c:	ins    BYTE PTR es:[rdi],dx
   100039c7d:	xchg   ebp,eax
   100039c7e:	add    DWORD PTR [rax],eax
   100039c80:	push   0xffffffff8800024a
   100039c85:	xchg   ebp,eax
   100039c86:	add    DWORD PTR [rax],eax
   100039c88:	rcl    BYTE PTR [rbp+0x4a680001],0x2
   100039c8f:	add    BYTE PTR [rax-0x3efffe6a],al
   100039c95:	xchg   esi,eax
   100039c96:	add    DWORD PTR [rax],eax
   100039c98:	and    al,0x53
   100039c9a:	add    al,BYTE PTR [rax]
   100039c9c:	clc    
   100039c9d:	xchg   esi,eax
   100039c9e:	add    DWORD PTR [rax],eax
   100039ca0:	stos   DWORD PTR es:[rdi],eax
   100039ca1:	xchg   edi,eax
   100039ca2:	add    DWORD PTR [rax],eax
   100039ca4:	rex.R push rbx
   100039ca6:	add    al,BYTE PTR [rax]
   100039ca8:	mov    ah,0x97
   100039caa:	add    DWORD PTR [rax],eax
   100039cac:	(bad)  
   100039cad:	xchg   edi,eax
   100039cae:	add    DWORD PTR [rax],eax
   100039cb0:	push   rax
   100039cb1:	push   rbx
   100039cb2:	add    al,BYTE PTR [rax]
   100039cb4:	add    al,0x98
   100039cb6:	add    DWORD PTR [rax],eax
   100039cb8:	(bad)  
   100039cb9:	cwde   
   100039cba:	add    DWORD PTR [rax],eax
   100039cbc:	js     0x100039d11
   100039cbe:	add    al,BYTE PTR [rax]
   100039cc0:	lods   al,BYTE PTR ds:[rsi]
   100039cc1:	cwde   
   100039cc2:	add    DWORD PTR [rax],eax
   100039cc4:	and    ebx,DWORD PTR [rcx+0x53a00001]
   100039cca:	add    al,BYTE PTR [rax]
   100039ccc:	rex.WR cqo 
   100039cce:	add    DWORD PTR [rax],eax
   100039cd0:	ret    
   100039cd1:	cdq    
   100039cd2:	add    DWORD PTR [rax],eax
   100039cd4:	movabs al,ds:0x5f000199e8000253
   100039cdd:	(bad)  
   100039cde:	add    DWORD PTR [rax],eax
   100039ce0:	movabs al,ds:0xc000019a90000253
   100039ce9:	(bad)  
   100039cea:	add    DWORD PTR [rax],eax
   100039cec:	cmp    BYTE PTR [rdx+0x2],cl
   100039cef:	add    al,dl
   100039cf1:	(bad)  
   100039cf2:	add    DWORD PTR [rax],eax
   100039cf4:	cmc    
   100039cf5:	(bad)  
   100039cf6:	add    DWORD PTR [rax],eax
   100039cf8:	test   al,0x53
   100039cfa:	add    al,BYTE PTR [rax]
   100039cfc:	cmc    
   100039cfd:	(bad)  
   100039cfe:	add    DWORD PTR [rax],eax
   100039d00:	xchg   edx,eax
   100039d01:	fwait
   100039d02:	add    DWORD PTR [rax],eax
   100039d04:	mov    eax,0x92000253
   100039d09:	fwait
   100039d0a:	add    DWORD PTR [rax],eax
   100039d0c:	sbb    DWORD PTR [rbp+0x53d80001],0x2
   100039d13:	add    BYTE PTR [rbx-0x50fffe63],al
   100039d19:	popf   
   100039d1a:	add    DWORD PTR [rax],eax
   100039d1c:	clc    
   100039d1d:	push   rbx
   100039d1e:	add    al,BYTE PTR [rax]
   100039d20:	rcr    BYTE PTR [rbp-0x6220ffff],0x1
   100039d27:	add    BYTE PTR [rax],cl
   100039d29:	push   rsp
   100039d2a:	add    al,BYTE PTR [rax]
   100039d2c:	fistp  WORD PTR [rbp-0x61cdffff]
   100039d32:	add    DWORD PTR [rax],eax
   100039d34:	adc    al,0x54
   100039d36:	add    al,BYTE PTR [rax]
   100039d38:	xor    bl,BYTE PTR [rsi-0x5f7bffff]
   100039d3e:	add    DWORD PTR [rax],eax
   100039d40:	sub    al,0x54
   100039d42:	add    al,BYTE PTR [rax]
   100039d44:	test   BYTE PTR [rax-0x5f44ffff],ah
   100039d4a:	add    DWORD PTR [rax],eax
   100039d4c:	rex.WR push rsp
   100039d4e:	add    al,BYTE PTR [rax]
   100039d50:	mov    ebx,0xe30001a0
   100039d55:	movabs al,ds:0xa1400002545c0001
   100039d5e:	add    DWORD PTR [rax],eax
   100039d60:	jae    0x100039d05
   100039d62:	add    DWORD PTR [rax],eax
   100039d64:	ins    BYTE PTR es:[rdi],dx
   100039d65:	push   rsp
   100039d66:	add    al,BYTE PTR [rax]
   100039d68:	movabs al,ds:0x740001a3c60001a3
   100039d71:	rex.WX add al,BYTE PTR [rax]
   100039d74:	(bad)  
   100039d75:	movabs ds:0x548c0001a4020001,eax
   100039d7e:	add    al,BYTE PTR [rax]
   100039d80:	add    ah,BYTE PTR [rcx+rax*1+0x1a41100]
   100039d87:	add    BYTE PTR [rax+0x40000254],ah
   100039d8d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100039d8e:	add    DWORD PTR [rax],eax
   100039d90:	cmc    
   100039d91:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100039d92:	add    DWORD PTR [rax],eax
   100039d94:	xchg   esp,eax
   100039d95:	add    r8b,BYTE PTR [r8]
   100039d98:	adc    BYTE PTR [rsi-0x592effff],ah
   100039d9e:	add    DWORD PTR [rax],eax
   100039da0:	mov    ah,0x54
   100039da2:	add    al,BYTE PTR [rax]
   100039da4:	loopne 0x100039d4c
   100039da6:	add    DWORD PTR [rax],eax
   100039da8:	cmp    ah,BYTE PTR [rdi+0x54cc0001]
   100039dae:	add    al,BYTE PTR [rax]
   100039db0:	cmp    ah,BYTE PTR [rdi-0x5809ffff]
   100039db6:	add    DWORD PTR [rax],eax
   100039db8:	in     al,0x54
   100039dba:	add    al,BYTE PTR [rax]
   100039dbc:	mul    BYTE PTR [rdi-0x57f0ffff]
   100039dc2:	add    DWORD PTR [rax],eax
   100039dc4:	clc    
   100039dc5:	push   rsp
   100039dc6:	add    al,BYTE PTR [rax]
   100039dc8:	xor    BYTE PTR [rax-0x5795ffff],ch
   100039dce:	add    DWORD PTR [rax],eax
   100039dd0:	or     BYTE PTR [rbp+0x2],dl
   100039dd3:	add    BYTE PTR [rdx-0x58],ch
   100039dd6:	add    DWORD PTR [rax],eax
   100039dd8:	pop    rbx
   100039dd9:	test   eax,0x55180001
   100039dde:	add    al,BYTE PTR [rax]
   100039de0:	pop    rbx
   100039de1:	test   eax,0xa9680001
   100039de6:	add    DWORD PTR [rax],eax
   100039de8:	xor    al,0x55
   100039dea:	add    al,BYTE PTR [rax]
   100039dec:	sub    BYTE PTR [rcx-0x564cffff],0x1
   100039df3:	add    BYTE PTR [rbp+rdx*2+0x2],al
   100039df7:	add    BYTE PTR [rbx-0x53fffe57],dh
   100039dfd:	stos   BYTE PTR es:[rdi],al
   100039dfe:	add    DWORD PTR [rax],eax
   100039e00:	push   rax
   100039e01:	push   rbp
   100039e02:	add    al,BYTE PTR [rax]
   100039e04:	lods   al,BYTE PTR ds:[rsi]
   100039e05:	stos   BYTE PTR es:[rdi],al
   100039e06:	add    DWORD PTR [rax],eax
   100039e08:	mov    dh,0xaa
   100039e0a:	add    DWORD PTR [rax],eax
   100039e0c:	je     0x100039e63
   100039e0e:	add    al,BYTE PTR [rax]
   100039e10:	mov    dh,0xaa
   100039e12:	add    DWORD PTR [rax],eax
   100039e14:	rex.WX stos QWORD PTR es:[rdi],rax
   100039e16:	add    DWORD PTR [rax],eax
   100039e18:	test   BYTE PTR [rbp+0x2],dl
   100039e1b:	add    BYTE PTR [rax-0x55],dl
   100039e1e:	add    DWORD PTR [rax],eax
   100039e20:	shr    DWORD PTR [rbx+0x45940001],1
   100039e26:	add    al,BYTE PTR [rax]
   100039e28:	loopne 0x100039dd5
   100039e2a:	add    DWORD PTR [rax],eax
   100039e2c:	adc    BYTE PTR [rcx+rax*1+0x255a800],ch
   100039e33:	add    BYTE PTR [rax],dl
   100039e35:	lods   al,BYTE PTR ds:[rsi]
   100039e36:	add    DWORD PTR [rax],eax
   100039e38:	push   rdi
   100039e39:	lods   al,BYTE PTR ds:[rsi]
   100039e3a:	add    DWORD PTR [rax],eax
   100039e3c:	mov    eax,0x57000255
   100039e41:	lods   al,BYTE PTR ds:[rsi]
   100039e42:	add    DWORD PTR [rax],eax
   100039e44:	jae    0x100039df2
   100039e46:	add    DWORD PTR [rax],eax
   100039e48:	int3   
   100039e49:	push   rbp
   100039e4a:	add    al,BYTE PTR [rax]
   100039e4c:	jae    0x100039dfa
   100039e4e:	add    DWORD PTR [rax],eax
   100039e50:	pop    rax
   100039e51:	lods   eax,DWORD PTR ds:[rsi]
   100039e52:	add    DWORD PTR [rax],eax
   100039e54:	in     al,0x55
   100039e56:	add    al,BYTE PTR [rax]
   100039e58:	pop    rax
   100039e59:	lods   eax,DWORD PTR ds:[rsi]
   100039e5a:	add    DWORD PTR [rax],eax
   100039e5c:	mov    gs,WORD PTR [rbp+0x55f80001]
   100039e62:	add    al,BYTE PTR [rax]
   100039e64:	mov    gs,WORD PTR [rbp-0x522cffff]
   100039e6a:	add    DWORD PTR [rax],eax
   100039e6c:	or     BYTE PTR [rsi+0x2],dl
   100039e6f:	add    al,ah
   100039e71:	lods   eax,DWORD PTR ds:[rsi]
   100039e72:	add    DWORD PTR [rax],eax
   100039e74:	rex.R scas al,BYTE PTR es:[rdi]
   100039e76:	add    DWORD PTR [rax],eax
   100039e78:	sbb    BYTE PTR [rsi+0x2],dl
   100039e7b:	add    BYTE PTR [rsi+rbp*4+0x1],al
   100039e7f:	add    BYTE PTR [rdi+0x200001ae],ch
   100039e85:	push   rsi
   100039e86:	add    al,BYTE PTR [rax]
   100039e88:	scas   eax,DWORD PTR es:[rdi]
   100039e89:	scas   al,BYTE PTR es:[rdi]
   100039e8a:	add    DWORD PTR [rax],eax
   100039e8c:	int3   
   100039e8d:	scas   al,BYTE PTR es:[rdi]
   100039e8e:	add    DWORD PTR [rax],eax
   100039e90:	cmp    al,0x56
   100039e92:	add    al,BYTE PTR [rax]
   100039e94:	int3   
   100039e95:	scas   al,BYTE PTR es:[rdi]
   100039e96:	add    DWORD PTR [rax],eax
   100039e98:	fild   QWORD PTR [rsi+0x56580001]
   100039e9e:	add    al,BYTE PTR [rax]
   100039ea0:	lock scas al,BYTE PTR es:[rdi]
   100039ea2:	add    DWORD PTR [rax],eax
   100039ea4:	sbb    DWORD PTR [rdi+0x56680001],ebp
   100039eaa:	add    al,BYTE PTR [rax]
   100039eac:	sbb    DWORD PTR [rdi-0x50afffff],ebp
   100039eb2:	add    DWORD PTR [rax],eax
   100039eb4:	jo     0x100039f0c
   100039eb6:	add    al,BYTE PTR [rax]
   100039eb8:	push   rax
   100039eb9:	scas   eax,DWORD PTR es:[rdi]
   100039eba:	add    DWORD PTR [rax],eax
   100039ebc:	mov    esp,0x880001af
   100039ec1:	push   rsi
   100039ec2:	add    al,BYTE PTR [rax]
   100039ec4:	mov    esp,0xf50001af
   100039ec9:	scas   eax,DWORD PTR es:[rdi]
   100039eca:	add    DWORD PTR [rax],eax
   100039ecc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   100039ecd:	push   rsi
   100039ece:	add    al,BYTE PTR [rax]
   100039ed0:	cmc    
   100039ed1:	scas   eax,DWORD PTR es:[rdi]
   100039ed2:	add    DWORD PTR [rax],eax
   100039ed4:	adc    BYTE PTR [rax+0x56c00001],dh
   100039eda:	add    al,BYTE PTR [rax]
   100039edc:	and    BYTE PTR [rax-0x4fa6ffff],dh
   100039ee2:	add    DWORD PTR [rax],eax
   100039ee4:	cmp    BYTE PTR [rdx+0x2],cl
   100039ee7:	add    BYTE PTR [rax-0x50],ah
   100039eea:	add    DWORD PTR [rax],eax
   100039eec:	mov    bl,0xb8
   100039eee:	add    DWORD PTR [rax],eax
   100039ef0:	rcl    BYTE PTR [rsi+0x2],1
   100039ef3:	add    BYTE PTR [rax-0x47],bl
   100039ef6:	add    DWORD PTR [rax],eax
   100039ef8:	(bad)  
   100039ef9:	mov    ecx,0x56f40001
   100039efe:	add    al,BYTE PTR [rax]
   100039f00:	loopne 0x100039ebb
   100039f02:	add    DWORD PTR [rax],eax
   100039f04:	rex mov edx,0x56fc0001
   100039f0a:	add    al,BYTE PTR [rax]
   100039f0c:	push   rax
   100039f0d:	mov    edx,0xbacc0001
   100039f12:	add    DWORD PTR [rax],eax
   100039f14:	cld    
   100039f15:	push   rsi
   100039f16:	add    al,BYTE PTR [rax]
   100039f18:	loopne 0x100039ed4
   100039f1a:	add    DWORD PTR [rax],eax
   100039f1c:	sbb    eax,0x40001bb
   100039f21:	push   rdi
   100039f22:	add    al,BYTE PTR [rax]
   100039f24:	xor    BYTE PTR [rbx-0x4469ffff],bh
   100039f2a:	add    DWORD PTR [rax],eax
   100039f2c:	or     al,0x57
   100039f2e:	add    al,BYTE PTR [rax]
   100039f30:	movabs al,ds:0x40001bc430001bb
   100039f39:	push   rdi
   100039f3a:	add    al,BYTE PTR [rax]
   100039f3c:	push   rax
   100039f3d:	mov    esp,0xbd3b0001
   100039f42:	add    DWORD PTR [rax],eax
   100039f44:	adc    al,0x57
   100039f46:	add    al,BYTE PTR [rax]
   100039f48:	movabs rbp,0x53a00001bdbf0001
   100039f52:	add    al,BYTE PTR [rax]
   100039f54:	rex mov esi,0xbee30001
   100039f5a:	add    DWORD PTR [rax],eax
   100039f5c:	push   0xfffffffff000024a
   100039f61:	mov    esi,0xbfba0001
   100039f66:	add    DWORD PTR [rax],eax
   100039f68:	sbb    al,0x57
   100039f6a:	add    al,BYTE PTR [rax]
   100039f6c:	loopne 0x100039f2d
   100039f6e:	add    DWORD PTR [rax],eax
   100039f70:	cmp    eax,eax
   100039f72:	add    DWORD PTR [rax],eax
   100039f74:	sub    al,0x57
   100039f76:	add    al,BYTE PTR [rax]
   100039f78:	rex rol BYTE PTR [rcx],0x0
   100039f7c:	rol    BYTE PTR [ecx],0x0
   100039f80:	push   rax
   100039f81:	push   rdi
   100039f82:	add    al,BYTE PTR [rax]
   100039f84:	nop
   100039f85:	rol    BYTE PTR [rcx],0x0
   100039f88:	out    0xc0,al
   100039f8a:	add    DWORD PTR [rax],eax
   100039f8c:	jo     0x100039fe5
   100039f8e:	add    al,BYTE PTR [rax]
   100039f90:	lock rol BYTE PTR [rcx],0x0
   100039f94:	rex.WX rol QWORD PTR [rcx],0x0
   100039f98:	xchg   esp,eax
   100039f99:	push   rdi
   100039f9a:	add    al,BYTE PTR [rax]
   100039f9c:	rol    cl,0x1
   100039f9f:	add    ah,cl
   100039fa1:	rol    DWORD PTR [rcx],0x0
   100039fa4:	mov    esp,0xcc000257
   100039fa9:	rol    DWORD PTR [rcx],0x0
   100039fac:	sub    al,dl
   100039fae:	add    DWORD PTR [rax],eax
   100039fb0:	(bad)  
   100039fb1:	push   rdi
   100039fb2:	add    al,BYTE PTR [rax]
   100039fb4:	sub    al,dl
   100039fb6:	add    DWORD PTR [rax],eax
   100039fb8:	xor    edx,eax
   100039fba:	add    DWORD PTR [rax],eax
   100039fbc:	fcom   DWORD PTR [rdi+0x2]
   100039fbf:	add    BYTE PTR [rax-0x17fffe3e],dl
   100039fc5:	ret    0x1
   100039fc8:	cmp    BYTE PTR [rcx+0x2],cl
   100039fcb:	add    BYTE PTR [rax],ah
   100039fcd:	ret    
   100039fce:	add    DWORD PTR [rax],eax
   100039fd0:	pop    rcx
   100039fd1:	(bad)
   100039fd5:	push   rdi
   100039fd6:	add    al,BYTE PTR [rax]
   100039fd8:	(bad)  
   100039fd9:	(bad)
   100039fdd:	(bad)
   100039fe1:	push   rdi
   100039fe2:	add    al,BYTE PTR [rax]
   100039fe4:	(bad)
   100039fe9:	(bad)
   100039fec:	push   0x7000024a
   100039ff1:	(bad)
   100039ff4:	and    dh,al
   100039ff6:	add    DWORD PTR [rax],eax
   100039ff8:	and    al,0x58
   100039ffa:	add    al,BYTE PTR [rax]
   100039ffc:	xor    dh,al
   100039ffe:	add    DWORD PTR [rax],eax
   10003a000:	pop    rsi
   10003a001:	mov    BYTE PTR [rcx],0x0
   10003a004:	cmp    BYTE PTR [rax+0x2],bl
   10003a007:	add    BYTE PTR [rsi-0x3a],bl
   10003a00a:	add    DWORD PTR [rax],eax
   10003a00c:	sub    al,bh
   10003a00e:	add    DWORD PTR [rax],eax
   10003a010:	rex.R pop rax
   10003a012:	add    al,BYTE PTR [rax]
   10003a014:	sub    al,bh
   10003a016:	add    DWORD PTR [rax],eax
   10003a018:	rex.WR mov QWORD PTR [rcx],0x2586000
   10003a01f:	add    BYTE PTR [rdi+rax*8+0x1],cl
   10003a023:	add    BYTE PTR [rdx-0x39],bl
   10003a026:	add    DWORD PTR [rax],eax
   10003a028:	jl     0x10003a082
   10003a02a:	add    al,BYTE PTR [rax]
   10003a02c:	(bad)  
   10003a02d:	mov    DWORD PTR [rcx],0x1c87600
   10003a033:	add    BYTE PTR [rax-0x5ffffda8],dl
   10003a039:	enter  0x1,0xd8
   10003a03d:	enter  0x1,0xa4
   10003a041:	pop    rax
   10003a042:	add    al,BYTE PTR [rax]
   10003a044:	loopne 0x10003a00e
   10003a046:	add    DWORD PTR [rax],eax
   10003a048:	jo     0x10003a013
   10003a04a:	add    DWORD PTR [rax],eax
   10003a04c:	xchg   esp,eax
   10003a04d:	add    r8b,BYTE PTR [r8]
   10003a050:	mov    al,0xc9
   10003a052:	add    DWORD PTR [rax],eax
   10003a054:	int3   
   10003a055:	leave  
   10003a056:	add    DWORD PTR [rax],eax
   10003a058:	xchg   esp,eax
   10003a059:	add    r8b,BYTE PTR [r8]
   10003a05c:	xor    dl,cl
   10003a05e:	add    DWORD PTR [rax],eax
   10003a060:	ss retf 
   10003a062:	add    DWORD PTR [rax],eax
   10003a064:	(bad)  
   10003a065:	pop    rax
   10003a066:	add    al,BYTE PTR [rax]
   10003a068:	push   rax
   10003a069:	retf   
   10003a06a:	add    DWORD PTR [rax],eax
   10003a06c:	(bad)  
   10003a06d:	int3   
   10003a06e:	add    DWORD PTR [rax],eax
   10003a070:	add    BYTE PTR [rcx+0x2],bl
   10003a073:	add    BYTE PTR [rax],dh
   10003a075:	int3   
   10003a076:	add    DWORD PTR [rax],eax
   10003a078:	mov    esi,0x2c0001cc
   10003a07d:	pop    rcx
   10003a07e:	add    al,BYTE PTR [rax]
   10003a080:	and    ch,cl
   10003a082:	add    DWORD PTR [rax],eax
   10003a084:	mov    ch,0xcd
   10003a086:	add    DWORD PTR [rax],eax
   10003a088:	push   rsp
   10003a089:	pop    rcx
   10003a08a:	add    al,BYTE PTR [rax]
   10003a08c:	mov    ch,0xcd
   10003a08e:	add    DWORD PTR [rax],eax
   10003a090:	pop    rbx
   10003a091:	(bad)  
   10003a092:	add    DWORD PTR [rax],eax
   10003a094:	jo     0x10003a0ef
   10003a096:	add    al,BYTE PTR [rax]
   10003a098:	pop    rbx
   10003a099:	(bad)  
   10003a09a:	add    DWORD PTR [rax],eax
   10003a09c:	jbe    0x10003a06c
   10003a09e:	add    DWORD PTR [rax],eax
   10003a0a0:	test   BYTE PTR [rcx+0x2],bl
   10003a0a3:	add    BYTE PTR [rax+0x630001ce],al
   10003a0a9:	iret   
   10003a0aa:	add    DWORD PTR [rax],eax
   10003a0ac:	xchg   esp,eax
   10003a0ad:	pop    rcx
   10003a0ae:	add    al,BYTE PTR [rax]
   10003a0b0:	jo     0x10003a081
   10003a0b2:	add    DWORD PTR [rax],eax
   10003a0b4:	(bad)  
   10003a0b5:	iret   
   10003a0b6:	add    DWORD PTR [rax],eax
   10003a0b8:	movabs al,ds:0x1c0001cf82000243
   10003a0c1:	rol    BYTE PTR [rcx],1
   10003a0c3:	add    al,al
   10003a0c5:	pop    rcx
   10003a0c6:	add    al,BYTE PTR [rax]
   10003a0c8:	sbb    al,0xd0
   10003a0ca:	add    DWORD PTR [rax],eax
   10003a0cc:	sub    dl,al
   10003a0ce:	add    DWORD PTR [rax],eax
   10003a0d0:	(bad)  
   10003a0d1:	pop    rcx
   10003a0d2:	add    al,BYTE PTR [rax]
   10003a0d4:	sub    dl,al
   10003a0d6:	add    DWORD PTR [rax],eax
   10003a0d8:	xor    eax,0xe80001d0
   10003a0dd:	pop    rcx
   10003a0de:	add    al,BYTE PTR [rax]
   10003a0e0:	rex rol BYTE PTR [rcx],1
   10003a0e3:	add    BYTE PTR [rsi-0x7fffe2f],dl
   10003a0e9:	pop    rcx
   10003a0ea:	add    al,BYTE PTR [rax]
   10003a0ec:	movabs al,ds:0x680001d2230001d1
   10003a0f5:	rex.WX add al,BYTE PTR [rax]
   10003a0f8:	xor    dl,dl
   10003a0fa:	add    DWORD PTR [rax],eax
   10003a0fc:	and    edx,ebx
   10003a0fe:	add    DWORD PTR [rax],eax
   10003a100:	mov    al,0x4d
   10003a102:	add    al,BYTE PTR [rax]
   10003a104:	nop
   10003a105:	rol    DWORD PTR [rcx],cl
   10003a107:	add    ah,bl
   10003a109:	rol    DWORD PTR [rcx],cl
   10003a10b:	add    BYTE PTR [rdx+rbx*2],ah
   10003a10e:	add    al,BYTE PTR [rax]
   10003a110:	(bad)  
   10003a112:	add    DWORD PTR [rax],eax
   10003a114:	rex.W (bad) 
   10003a116:	add    DWORD PTR [rax],eax
   10003a118:	xor    BYTE PTR [rdx+0x2],bl
   10003a11b:	add    BYTE PTR [rax-0x2c],cl
   10003a11e:	add    DWORD PTR [rax],eax
   10003a120:	imul   edx,esp,0x1
   10003a123:	add    BYTE PTR [rdx+rbx*2+0x2],al
   10003a127:	add    BYTE PTR [rbx-0x2c],ch
   10003a12a:	add    DWORD PTR [rax],eax
   10003a12c:	mov    bh,0xd4
   10003a12e:	add    DWORD PTR [rax],eax
   10003a130:	pop    rax
   10003a131:	pop    rdx
   10003a132:	add    al,BYTE PTR [rax]
   10003a134:	rcl    ah,0x1
   10003a137:	add    ah,ch
   10003a139:	(bad)  
   10003a13a:	add    DWORD PTR [rax],eax
   10003a13c:	push   0xffffffffec00025a
   10003a141:	(bad)  
   10003a142:	add    DWORD PTR [rax],eax
   10003a144:	(bad)  
   10003a145:	(bad)  
   10003a146:	add    DWORD PTR [rax],eax
   10003a148:	je     0x10003a1a4
   10003a14a:	add    al,BYTE PTR [rax]
   10003a14c:	(bad)  
   10003a14d:	(bad)  
   10003a14e:	add    DWORD PTR [rax],eax
   10003a150:	(bad)  
   10003a151:	(bad)  
   10003a152:	add    DWORD PTR [rax],eax
   10003a154:	mov    WORD PTR [rdx+0x2],ds
   10003a157:	add    BYTE PTR [rax+0x760001d6],al
   10003a15d:	xlat   BYTE PTR ds:[rbx]
   10003a15e:	add    DWORD PTR [rax],eax
   10003a160:	pushf  
   10003a161:	pop    rdx
   10003a162:	add    al,BYTE PTR [rax]
   10003a164:	adc    bh,0x1
   10003a167:	add    BYTE PTR [rbx-0x28],ch
   10003a16a:	add    DWORD PTR [rax],eax
   10003a16c:	int3   
   10003a16d:	pop    rdx
   10003a16e:	add    al,BYTE PTR [rax]
   10003a170:	mov    al,0xd8
   10003a172:	add    DWORD PTR [rax],eax
   10003a174:	(bad)  
   10003a175:	fld    DWORD PTR [rcx]
   10003a177:	add    BYTE PTR [rax+0x4a],ch
   10003a17a:	add    al,BYTE PTR [rax]
   10003a17c:	sbb    cl,0x1
   10003a17f:	add    ah,al
   10003a181:	fld    DWORD PTR [rcx]
   10003a183:	add    BYTE PTR [rbp+rax*2-0x250ffffe],dl
   10003a18a:	add    DWORD PTR [rax],eax
   10003a18c:	sbb    bl,0x1
   10003a18f:	add    BYTE PTR [rbp+rax*2-0x243ffffe],dl
   10003a196:	add    DWORD PTR [rax],eax
   10003a198:	out    0xdb,eax
   10003a19a:	add    DWORD PTR [rax],eax
   10003a19c:	xchg   esp,eax
   10003a19d:	add    r8b,BYTE PTR [r8]
   10003a1a0:	lock fild DWORD PTR [rcx]
   10003a1a3:	add    BYTE PTR [rsi-0x24],bl
   10003a1a6:	add    DWORD PTR [rax],eax
   10003a1a8:	lock rex.WRXB add r8b,BYTE PTR [r8]
   10003a1ac:	jo     0x10003a18a
   10003a1ae:	add    DWORD PTR [rax],eax
   10003a1b0:	iret   
   10003a1b1:	fadd   QWORD PTR [rcx]
   10003a1b3:	add    BYTE PTR [rax+0x4a],ch
   10003a1b6:	add    al,BYTE PTR [rax]
   10003a1b8:	adc    ch,bl
   10003a1ba:	add    DWORD PTR [rax],eax
   10003a1bc:	(bad)  
   10003a1bd:	fld    QWORD PTR [rcx]
   10003a1bf:	add    ah,dh
   10003a1c1:	pop    rdx
   10003a1c2:	add    al,BYTE PTR [rax]
   10003a1c4:	loopne 0x10003a1a3
   10003a1c6:	add    DWORD PTR [rax],eax
   10003a1c8:	or     ebx,esi
   10003a1ca:	add    DWORD PTR [rax],eax
   10003a1cc:	xchg   esp,eax
   10003a1cd:	add    r8b,BYTE PTR [r8]
   10003a1d0:	and    dh,bl
   10003a1d2:	add    DWORD PTR [rax],eax
   10003a1d4:	scas   al,BYTE PTR es:[rdi]
   10003a1d5:	fiadd  WORD PTR [rcx]
   10003a1d7:	add    BYTE PTR [rax+0x48],cl
   10003a1da:	add    al,BYTE PTR [rax]
   10003a1dc:	rcr    dh,0x1
   10003a1df:	add    BYTE PTR [rbx+0x300001df],dh
   10003a1e5:	pop    rbx
   10003a1e6:	add    al,BYTE PTR [rax]
   10003a1e8:	rcr    bh,0x1
   10003a1eb:	add    BYTE PTR [rsi-0x20],bh
   10003a1ee:	add    DWORD PTR [rax],eax
   10003a1f0:	rex pop rbx
   10003a1f2:	add    al,BYTE PTR [rax]
   10003a1f4:	nop
   10003a1f5:	loopne 0x10003a1f8
   10003a1f7:	add    BYTE PTR [rdx],bh
   10003a1f9:	loope  0x10003a1fc
   10003a1fb:	add    BYTE PTR [rax+0x5b],dh
   10003a1fe:	add    al,BYTE PTR [rax]
   10003a200:	cmp    ah,cl
   10003a202:	add    DWORD PTR [rax],eax
   10003a204:	xchg   ecx,eax
   10003a205:	loope  0x10003a208
   10003a207:	add    BYTE PTR [rax-0x6efffda5],al
   10003a20d:	loope  0x10003a210
   10003a20f:	add    BYTE PTR [rcx-0x67fffe1f],ah
   10003a215:	pop    rbx
   10003a216:	add    al,BYTE PTR [rax]
   10003a218:	loopne 0x10003a1fd
   10003a21a:	add    DWORD PTR [rax],eax
   10003a21c:	rex.X in al,0x1
   10003a21f:	add    BYTE PTR [rax+0x5000025b],ch
   10003a225:	in     al,0x1
   10003a227:	add    BYTE PTR [rdi+0x680001e5],ah
   10003a22d:	rex.WX add al,BYTE PTR [rax]
   10003a230:	mov    al,0xe5
   10003a232:	add    DWORD PTR [rax],eax
   10003a234:	adc    edi,esp
   10003a236:	add    DWORD PTR [rax],eax
   10003a238:	lock rex.WRXB add r8b,BYTE PTR [r8]
   10003a23c:	and    bh,ah
   10003a23e:	add    DWORD PTR [rax],eax
   10003a240:	pop    rax
   10003a241:	out    0x1,eax
   10003a243:	add    BYTE PTR [rsi+rax*2-0x18a7fffe],al
   10003a24a:	add    DWORD PTR [rax],eax
   10003a24c:	in     al,dx
   10003a24d:	out    0x1,eax
   10003a24f:	add    ah,cl
   10003a251:	pop    rbx
   10003a252:	add    al,BYTE PTR [rax]
   10003a254:	in     al,dx
   10003a255:	out    0x1,eax
   10003a257:	add    dl,bh
   10003a259:	out    0x1,eax
   10003a25b:	add    al,ah
   10003a25d:	pop    rbx
   10003a25e:	add    al,BYTE PTR [rax]
   10003a260:	cli    
   10003a261:	out    0x1,eax
   10003a263:	add    BYTE PTR [rcx],dl
   10003a265:	call   0x15bf7a26b
   10003a26a:	add    al,BYTE PTR [rax]
   10003a26c:	and    al,ch
   10003a26e:	add    DWORD PTR [rax],eax
   10003a270:	pop    rax
   10003a271:	call   0x14687a277
   10003a276:	add    al,BYTE PTR [rax]
   10003a278:	pop    rax
   10003a279:	call   0xe8efa27f
   10003a27e:	add    DWORD PTR [rax],eax
   10003a280:	add    al,0x5c
   10003a282:	add    al,BYTE PTR [rax]
   10003a284:	in     al,dx
   10003a285:	call   0xe8fda28b
   10003a28a:	add    DWORD PTR [rax],eax
   10003a28c:	sbb    BYTE PTR [rdx+rax*1+0x0],bl
   10003a290:	cli    
   10003a291:	call   0xe914a297
   10003a296:	add    DWORD PTR [rax],eax
   10003a298:	sub    al,0x5c
   10003a29a:	add    al,BYTE PTR [rax]
   10003a29c:	and    cl,ch
   10003a29e:	add    DWORD PTR [rax],eax
   10003a2a0:	jmp    0xa2a5
   10003a2a4:	cmp    al,0x5c
   10003a2a6:	add    al,BYTE PTR [rax]
   10003a2a8:	jo     0x10003a293
   10003a2aa:	add    DWORD PTR [rax],eax
   10003a2ac:	test   al,0xea
   10003a2ae:	add    DWORD PTR [rax],eax
   10003a2b0:	pop    rsp
   10003a2b1:	pop    rsp
   10003a2b2:	add    al,BYTE PTR [rax]
   10003a2b4:	mov    al,0xea
   10003a2b6:	add    DWORD PTR [rax],eax
   10003a2b8:	xor    dh,ch
   10003a2ba:	add    DWORD PTR [rax],eax
   10003a2bc:	test   BYTE PTR [rdx+rax*1+0x0],bl
   10003a2c0:	sub    dh,0x1
   10003a2c3:	add    BYTE PTR [rdx-0x11],ch
   10003a2c6:	add    DWORD PTR [rax],eax
   10003a2c8:	rcr    BYTE PTR [rdx+rax*1+0x0],0x30
   10003a2cd:	lock add DWORD PTR [rax],eax
   10003a2d0:	(bad)  
   10003a2d1:	lock add DWORD PTR [rax],eax
   10003a2d4:	mov    al,0x4d
   10003a2d6:	add    al,BYTE PTR [rax]
   10003a2d8:	loopne 0x10003a2ca
   10003a2da:	add    DWORD PTR [rax],eax
   10003a2dc:	gs icebp 
   10003a2de:	add    DWORD PTR [rax],eax
   10003a2e0:	in     al,dx
   10003a2e1:	pop    rsp
   10003a2e2:	add    al,BYTE PTR [rax]
   10003a2e4:	jo     0x10003a2d7
   10003a2e6:	add    DWORD PTR [rax],eax
   10003a2e8:	retf   0x1f1
   10003a2eb:	add    BYTE PTR [rbx*2-0xe2ffffe],al
   10003a2f2:	add    DWORD PTR [rax],eax
   10003a2f4:	out    dx,eax
   10003a2f5:	icebp  
   10003a2f6:	add    DWORD PTR [rax],eax
   10003a2f8:	and    al,0x5d
   10003a2fa:	add    al,BYTE PTR [rax]
   10003a2fc:	enter  0x1f3,0x0
   10003a300:	(bad)  
   10003a301:	hlt    
   10003a302:	add    DWORD PTR [rax],eax
   10003a304:	movabs al,ds:0x360001f448000253
   10003a30d:	test   DWORD PTR [rcx],0x25d2c00
   10003a313:	add    BYTE PTR [rax-0x9],dh
   10003a316:	add    DWORD PTR [rax],eax
   10003a318:	add    al,0xf8
   10003a31a:	add    DWORD PTR [rax],eax
   10003a31c:	rex.R pop rbp
   10003a31e:	add    al,BYTE PTR [rax]
   10003a320:	sbb    al,bh
   10003a322:	add    DWORD PTR [rax],eax
   10003a324:	jnp    0x10003a31e
   10003a326:	add    DWORD PTR [rax],eax
   10003a328:	xchg   esp,eax
   10003a329:	add    r8b,BYTE PTR [r8]
   10003a32c:	test   al,bh
   10003a32e:	add    DWORD PTR [rax],eax
   10003a330:	movabs eax,ds:0xa8000243980001f8
   10003a339:	clc    
   10003a33a:	add    DWORD PTR [rax],eax
   10003a33c:	or     al,0xf9
   10003a33e:	add    DWORD PTR [rax],eax
   10003a340:	pop    rsp
   10003a341:	pop    rbp
   10003a342:	add    al,BYTE PTR [rax]
   10003a344:	and    cl,bh
   10003a346:	add    DWORD PTR [rax],eax
   10003a348:	scas   eax,DWORD PTR es:[rdi]
   10003a349:	stc    
   10003a34a:	add    DWORD PTR [rax],eax
   10003a34c:	rex.R pop rbp
   10003a34e:	add    al,BYTE PTR [rax]
   10003a350:	mov    al,0xf9
   10003a352:	add    DWORD PTR [rax],eax
   10003a354:	int3   
   10003a355:	stc    
   10003a356:	add    DWORD PTR [rax],eax
   10003a358:	nop
   10003a359:	pop    rbp
   10003a35a:	add    al,BYTE PTR [rax]
   10003a35c:	int3   
   10003a35d:	stc    
   10003a35e:	add    DWORD PTR [rax],eax
   10003a360:	in     eax,0xf9
   10003a362:	add    DWORD PTR [rax],eax
   10003a364:	nop
   10003a365:	pop    rbp
   10003a366:	add    al,BYTE PTR [rax]
   10003a368:	call   0x10803a566
   10003a36d:	cli    
   10003a36e:	add    DWORD PTR [rax],eax
   10003a370:	nop
   10003a371:	pop    rbp
   10003a372:	add    al,BYTE PTR [rax]
   10003a374:	adc    dl,bh
   10003a376:	add    DWORD PTR [rax],eax
   10003a378:	push   rax
   10003a379:	cli    
   10003a37a:	add    DWORD PTR [rax],eax
   10003a37c:	and    al,0x5d
   10003a37e:	add    al,BYTE PTR [rax]
   10003a380:	pop    rax
   10003a381:	cli    
   10003a382:	add    DWORD PTR [rax],eax
   10003a384:	cmp    edx,0x1
   10003a387:	add    BYTE PTR [rbx*2-0x573fffe],ah
   10003a38e:	add    DWORD PTR [rax],eax
   10003a390:	mov    bh,0xfa
   10003a392:	add    DWORD PTR [rax],eax
   10003a394:	and    al,0x5d
   10003a396:	add    al,BYTE PTR [rax]
   10003a398:	sar    dl,1
   10003a39a:	add    DWORD PTR [rax],eax
   10003a39c:	xor    ebx,edi
   10003a39e:	add    DWORD PTR [rax],eax
   10003a3a0:	cwde   
   10003a3a1:	pop    rbp
   10003a3a2:	add    al,BYTE PTR [rax]
   10003a3a4:	movabs al,ds:0xa80001fbba0001fb
   10003a3ad:	pop    rbp
   10003a3ae:	add    al,BYTE PTR [rax]
   10003a3b0:	sar    bl,0x1
   10003a3b3:	add    BYTE PTR [rcx],al
   10003a3b5:	cld    
   10003a3b6:	add    DWORD PTR [rax],eax
   10003a3b8:	mov    eax,0x8000025d
   10003a3bd:	std    
   10003a3be:	add    DWORD PTR [rax],eax
   10003a3c0:	xchg   esi,eax
   10003a3c1:	std    
   10003a3c2:	add    DWORD PTR [rax],eax
   10003a3c4:	and    al,0x5d
   10003a3c6:	add    al,BYTE PTR [rax]
   10003a3c8:	sar    ch,1
   10003a3ca:	add    DWORD PTR [rax],eax
   10003a3cc:	xor    al,0xfe
   10003a3ce:	add    DWORD PTR [rax],eax
   10003a3d0:	enter  0x25d,0x0
   10003a3d4:	push   rax
   10003a3d5:	inc    BYTE PTR [rcx]
   10003a3d7:	add    BYTE PTR [rdx-0x2],ch
   10003a3da:	add    DWORD PTR [rax],eax
   10003a3dc:	fcomp  DWORD PTR [rbp+0x2]
   10003a3df:	add    BYTE PTR [rax+0x6],al
   10003a3e2:	add    al,BYTE PTR [rax]
   10003a3e4:	jae    0x10003a3ec
   10003a3e6:	add    al,BYTE PTR [rax]
   10003a3e8:	call   0x8003a64a
   10003a3ed:	(bad)  
   10003a3ee:	add    al,BYTE PTR [rax]
   10003a3f0:	(bad)  
   10003a3f1:	(bad)  
   10003a3f2:	add    al,BYTE PTR [rax]
   10003a3f4:	clc    
   10003a3f5:	pop    rbp
   10003a3f6:	add    al,BYTE PTR [rax]
   10003a3f8:	loopne 0x10003a400
   10003a3fa:	add    al,BYTE PTR [rax]
   10003a3fc:	adc    eax,DWORD PTR [rdi]
   10003a3fe:	add    al,BYTE PTR [rax]
   10003a400:	or     BYTE PTR [rsi+0x2],bl
   10003a403:	add    BYTE PTR [rax],ah
   10003a405:	(bad)  
   10003a406:	add    al,BYTE PTR [rax]
   10003a408:	cmp    al,BYTE PTR [rdi]
   10003a40a:	add    al,BYTE PTR [rax]
   10003a40c:	sbb    BYTE PTR [rsi+0x2],bl
   10003a40f:	add    BYTE PTR [rax-0x22fffdf9],ah
   10003a415:	(bad)  
   10003a416:	add    al,BYTE PTR [rax]
   10003a418:	sub    BYTE PTR [rsi+0x2],bl
   10003a41b:	add    al,ah
   10003a41d:	(bad)  
   10003a41e:	add    al,BYTE PTR [rax]
   10003a420:	sti    
   10003a421:	(bad)  
   10003a422:	add    al,BYTE PTR [rax]
   10003a424:	cmp    BYTE PTR [rsi+0x2],bl
   10003a427:	add    BYTE PTR [rax+0x8],dl
   10003a42a:	add    al,BYTE PTR [rax]
   10003a42c:	cmp    eax,0x48000209
   10003a431:	pop    rsi
   10003a432:	add    al,BYTE PTR [rax]
   10003a434:	movabs al,ds:0x58000209ba000209
   10003a43d:	pop    rsi
   10003a43e:	add    al,BYTE PTR [rax]
   10003a440:	ror    BYTE PTR [rcx],1
   10003a442:	add    al,BYTE PTR [rax]
   10003a444:	or     al,0xa
   10003a446:	add    al,BYTE PTR [rax]
   10003a448:	push   0x1000025e
   10003a44d:	or     al,BYTE PTR [rdx]
   10003a44f:	add    BYTE PTR [rdx],ch
   10003a451:	or     al,BYTE PTR [rdx]
   10003a453:	add    BYTE PTR [rax+0x5e],bh
   10003a456:	add    al,BYTE PTR [rax]
   10003a458:	or     al,BYTE PTR [rdx]
   10003a45b:	add    BYTE PTR [rbx+0xa],dh
   10003a45e:	add    al,BYTE PTR [rax]
   10003a460:	mov    BYTE PTR [rsi+0x2],bl
   10003a463:	add    BYTE PTR [rax-0x65fffdf6],al
   10003a469:	or     al,BYTE PTR [rdx]
   10003a46b:	add    BYTE PTR [rax-0x4ffffda2],bl
   10003a471:	or     eax,DWORD PTR [rdx]
   10003a473:	add    dh,al
   10003a475:	or     eax,DWORD PTR [rdx]
   10003a477:	add    BYTE PTR [rax-0x2ffffda2],ch
   10003a47d:	or     eax,DWORD PTR [rdx]
   10003a47f:	add    dh,ah
   10003a481:	or     eax,DWORD PTR [rdx]
   10003a483:	add    BYTE PTR [rax+0x5000025e],ch
   10003a489:	or     al,0x2
   10003a48b:	add    BYTE PTR [rdx+0xc],dh
   10003a48e:	add    al,BYTE PTR [rax]
   10003a490:	and    al,0x5d
   10003a492:	add    al,BYTE PTR [rax]
   10003a494:	or     BYTE PTR [rdx+rax*1],0x0
   10003a498:	scas   al,BYTE PTR es:[rdi]
   10003a499:	or     al,0x2
   10003a49b:	add    BYTE PTR [rax+0x2000025e],dh
   10003a4a1:	or     eax,0xd590002
   10003a4a6:	add    al,BYTE PTR [rax]
   10003a4a8:	mov    eax,0xe000025e
   10003a4ad:	or     eax,0xe0b0002
   10003a4b2:	add    al,BYTE PTR [rax]
   10003a4b4:	enter  0x25e,0x0
   10003a4b8:	and    BYTE PTR [rsi],cl
   10003a4ba:	add    al,BYTE PTR [rax]
   10003a4bc:	rex.WXB (bad) 
   10003a4be:	add    al,BYTE PTR [rax]
   10003a4c0:	fcomp  DWORD PTR [rsi+0x2]
   10003a4c3:	add    BYTE PTR [rax+0xe],ah
   10003a4c6:	add    al,BYTE PTR [rax]
   10003a4c8:	jge    0x10003a4d8
   10003a4ca:	add    al,BYTE PTR [rax]
   10003a4cc:	call   0x9003a72f
   10003a4d1:	(bad)  
   10003a4d2:	add    al,BYTE PTR [rax]
   10003a4d4:	lods   eax,DWORD PTR ds:[rsi]
   10003a4d5:	(bad)  
   10003a4d6:	add    al,BYTE PTR [rax]
   10003a4d8:	clc    
   10003a4d9:	pop    rsi
   10003a4da:	add    al,BYTE PTR [rax]
   10003a4dc:	ror    BYTE PTR [rsi],0x2
   10003a4df:	add    ch,bl
   10003a4e1:	(bad)  
   10003a4e2:	add    al,BYTE PTR [rax]
   10003a4e4:	or     BYTE PTR [rdi+0x2],bl
   10003a4e7:	add    al,dh
   10003a4e9:	(bad)  
   10003a4ea:	add    al,BYTE PTR [rax]
   10003a4ec:	or     eax,0x1800020f
   10003a4f1:	pop    rdi
   10003a4f2:	add    al,BYTE PTR [rax]
   10003a4f4:	and    BYTE PTR [rdi],cl
   10003a4f6:	add    al,BYTE PTR [rax]
   10003a4f8:	rex.WXB lar rax,WORD PTR [r8]
   10003a4fc:	sub    BYTE PTR [rdi+0x2],bl
   10003a4ff:	add    BYTE PTR [rax+0xf],ah
   10003a502:	add    al,BYTE PTR [rax]
   10003a504:	jge    0x10003a515
   10003a506:	add    al,BYTE PTR [rax]
   10003a508:	cmp    BYTE PTR [rdi+0x2],bl
   10003a50b:	add    BYTE PTR [rax-0x52fffdf1],dl
   10003a511:	lar    eax,WORD PTR [rax]
   10003a514:	rex.W pop rdi
   10003a516:	add    al,BYTE PTR [rax]
   10003a518:	ror    BYTE PTR [rdi],0x2
   10003a51b:	add    ch,bl
   10003a51d:	lar    eax,WORD PTR [rax]
   10003a520:	pop    rax
   10003a521:	pop    rdi
   10003a522:	add    al,BYTE PTR [rax]
   10003a524:	lock lar eax,WORD PTR [rax]
   10003a528:	sbb    edx,DWORD PTR [rax]
   10003a52a:	add    al,BYTE PTR [rax]
   10003a52c:	push   0x3000025f
   10003a531:	adc    BYTE PTR [rdx],al
   10003a533:	add    BYTE PTR [rbp+0x10],cl
   10003a536:	add    al,BYTE PTR [rax]
   10003a538:	js     0x10003a599
   10003a53a:	add    al,BYTE PTR [rax]
   10003a53c:	(bad)  
   10003a53d:	adc    BYTE PTR [rdx],al
   10003a53f:	add    BYTE PTR [rax-0x67fffdf0],cl
   10003a545:	rex.XB add al,BYTE PTR [r8]
   10003a548:	nop
   10003a549:	adc    BYTE PTR [rdx],al
   10003a54b:	add    ah,bh
   10003a54d:	adc    BYTE PTR [rdx],al
   10003a54f:	add    BYTE PTR [rax+0x1000025f],cl
   10003a555:	adc    DWORD PTR [rdx],eax
   10003a557:	add    BYTE PTR [rcx+rdx*1+0x2],bh
   10003a55b:	add    BYTE PTR [rax-0x7ffffda1],bl
   10003a561:	adc    eax,DWORD PTR [rdx]
   10003a563:	add    BYTE PTR [rbp-0x67fffded],ch
   10003a569:	rex.XB add al,BYTE PTR [r8]
   10003a56c:	rcl    BYTE PTR [rbx],1
   10003a56e:	add    al,BYTE PTR [rax]
   10003a570:	std    
   10003a571:	adc    eax,DWORD PTR [rdx]
   10003a573:	add    BYTE PTR [rax+0x20000243],bl
   10003a579:	sbb    eax,0x1d340002
   10003a57e:	add    al,BYTE PTR [rax]
   10003a580:	cwde   
   10003a581:	rex.XB add al,BYTE PTR [r8]
   10003a584:	rex sbb eax,0x1d5f0002
   10003a58a:	add    al,BYTE PTR [rax]
   10003a58c:	test   al,0x5f
   10003a58e:	add    al,BYTE PTR [rax]
   10003a590:	jo     0x10003a5af
   10003a592:	add    al,BYTE PTR [rax]
   10003a594:	stos   DWORD PTR es:[rdi],eax
   10003a595:	sbb    eax,0x5fb80002
   10003a59a:	add    al,BYTE PTR [rax]
   10003a59c:	rcr    BYTE PTR [rip+0x1dfb0002],0x2        # 0x11dfea5a5
   10003a5a3:	add    al,cl
   10003a5a5:	pop    rdi
   10003a5a6:	add    al,BYTE PTR [rax]
   10003a5a8:	adc    BYTE PTR [rsi],bl
   10003a5aa:	add    al,BYTE PTR [rax]
   10003a5ac:	rex.WXB (bad) 
   10003a5ae:	add    al,BYTE PTR [rax]
   10003a5b0:	fcomp  DWORD PTR [rdi+0x2]
   10003a5b3:	add    BYTE PTR [rax+0x1e],ah
   10003a5b6:	add    al,BYTE PTR [rax]
   10003a5b8:	fwait
   10003a5b9:	(bad)  
   10003a5ba:	add    al,BYTE PTR [rax]
   10003a5bc:	call   0xb003a820
   10003a5c1:	(bad)  
   10003a5c2:	add    al,BYTE PTR [rax]
   10003a5c4:	jmp    0x10003a5e4
   10003a5c6:	add    al,BYTE PTR [rax]
   10003a5c8:	clc    
   10003a5c9:	pop    rdi
   10003a5ca:	add    al,BYTE PTR [rax]
   10003a5cc:	add    BYTE PTR [rdi],bl
   10003a5ce:	add    al,BYTE PTR [rax]
   10003a5d0:	cmp    ebx,DWORD PTR [rdi]
   10003a5d2:	add    al,BYTE PTR [rax]
   10003a5d4:	or     BYTE PTR [rax+0x2],ah
   10003a5d7:	add    BYTE PTR [rax+0x1f],dl
   10003a5da:	add    al,BYTE PTR [rax]
   10003a5dc:	mov    ebx,DWORD PTR [rdi]
   10003a5de:	add    al,BYTE PTR [rax]
   10003a5e0:	sbb    BYTE PTR [rax+0x2],ah
   10003a5e3:	add    BYTE PTR [rax-0x24fffde1],ah
   10003a5e9:	(bad)  
   10003a5ea:	add    al,BYTE PTR [rax]
   10003a5ec:	sub    BYTE PTR [rax+0x2],ah
   10003a5ef:	add    al,dh
   10003a5f1:	(bad)  
   10003a5f2:	add    al,BYTE PTR [rax]
   10003a5f4:	sub    esp,DWORD PTR [rax]
   10003a5f6:	add    al,BYTE PTR [rax]
   10003a5f8:	cmp    BYTE PTR [rax+0x2],ah
   10003a5fb:	add    BYTE PTR [rax+0x20],al
   10003a5fe:	add    al,BYTE PTR [rax]
   10003a600:	jnp    0x10003a622
   10003a602:	add    al,BYTE PTR [rax]
   10003a604:	rex.W (bad) 
   10003a606:	add    al,BYTE PTR [rax]
   10003a608:	nop
   10003a609:	and    BYTE PTR [rdx],al
   10003a60b:	add    bl,cl
   10003a60d:	and    BYTE PTR [rdx],al
   10003a60f:	add    BYTE PTR [rax+0x60],bl
   10003a612:	add    al,BYTE PTR [rax]
   10003a614:	loopne 0x10003a636
   10003a616:	add    al,BYTE PTR [rax]
   10003a618:	sbb    esp,DWORD PTR [rcx]
   10003a61a:	add    al,BYTE PTR [rax]
   10003a61c:	push   0x30000260
   10003a621:	and    DWORD PTR [rdx],eax
   10003a623:	add    BYTE PTR [rdi+0x21],cl
   10003a626:	add    al,BYTE PTR [rax]
   10003a628:	js     0x10003a68a
   10003a62a:	add    al,BYTE PTR [rax]
   10003a62c:	movabs al,ds:0x98000221c2000221
   10003a635:	rex.XB add al,BYTE PTR [r8]

Disassembly of section AssertDa:

000000010003b000 <AssertDa>:
   10003b000:	rex.RXB
   10003b001:	gs je  0x10003b057
   10003b004:	jb     0x10003b07c
   10003b006:	rex.XB je 0x10003b07b
   10003b009:	rex.WRB (bad) 
   10003b00b:	outs   dx,BYTE PTR ds:[rsi]
   10003b00c:	sub    BYTE PTR [rcx],ch
   10003b00e:	add    BYTE PTR [rax],al
   10003b010:	fs (bad) 
   10003b013:	imul   esp,DWORD PTR [rdi+0x6e],0x632e6c61
   10003b01a:	jo     0x10003b08c
   10003b01c:	add    BYTE PTR [rax],al
   10003b01e:	add    BYTE PTR [rax],al
   10003b020:	jae    0x10003b087
   10003b022:	jb     0x10003b09a
   10003b024:	gs jb  0x10003b094
   10003b027:	(bad)  
   10003b028:	movsxd esi,DWORD PTR cs:[rax+0x70]
   10003b02c:	add    BYTE PTR [rax],al
   10003b02e:	add    BYTE PTR [rax],al
   10003b030:	jae    0x10003b0a3
   10003b032:	ins    BYTE PTR es:[rdi],dx
   10003b033:	outs   dx,BYTE PTR gs:[rsi]
   10003b035:	movsxd ebp,DWORD PTR [edi+0x6e]
   10003b039:	movsxd si,DWORD PTR cs:[rax+0x70]
   10003b03e:	add    BYTE PTR [rax],al
   10003b040:	jae    0x10003b0b3
   10003b042:	ins    BYTE PTR es:[rdi],dx
   10003b043:	jae    0x10003b0b4
   10003b045:	jae    0x10003b075
   10003b047:	movsxd esi,DWORD PTR [rax+0x70]
   10003b04a:	add    BYTE PTR [rax],al
   10003b04c:	add    BYTE PTR [rax],al
   10003b04e:	add    BYTE PTR [rax],al
   10003b050:	jbe    0x10003b0b7
   10003b052:	jb     0x10003b0c7
   10003b054:	imul   ebp,DWORD PTR [rdi+0x6e],0x7070632e
   10003b05b:	add    BYTE PTR [rax],al
   10003b05d:	add    BYTE PTR [rax],al
   10003b05f:	add    BYTE PTR [rsi+0x41],al
   10003b062:	rex.WR push rbx
   10003b064:	add    BYTE PTR [r8],r8b
	...
   10003b06f:	add    BYTE PTR [rcx+0x53],cl
   10003b072:	pop    rdi
   10003b073:	rex.WRXB
   10003b074:	rex.WRX pop rdi
   10003b076:	push   rbx
   10003b077:	rex.B
   10003b078:	rex.RX
   10003b079:	and    BYTE PTR [r8],r13b
   10003b07c:	rex.X
   10003b07d:	push   r11
   10003b07f:	rex.WB
   10003b080:	rex.XB pop r15
   10003b082:	rex.XB
   10003b083:	rex.WR push rbp
   10003b085:	push   rbx
   10003b086:	push   r8
   10003b088:	rex.WB pop r15
   10003b08a:	rex.WR
   10003b08b:	rex.WRXB
   10003b08c:	rex.B
   10003b08d:	rex.R
   10003b08e:	rex.RB
   10003b08f:	rex.R sub al,0x20
   10003b092:	push   rdx
   10003b093:	gs jae 0x10003b105
   10003b096:	jne    0x10003b10a
   10003b098:	movsxd esp,DWORD PTR [rbp+0x2d]
   10003b09b:	movsxd ebp,DWORD PTR ds:[rbp+rsi*2+0x73]
   10003b0a0:	je     0x10003b107
   10003b0a2:	jb     0x10003b103
   10003b0a4:	imul   ebp,DWORD PTR [rsi+0x66],0x6c632e6f
   10003b0ab:	jne    0x10003b120
   10003b0ad:	(bad)  
   10003b0ae:	jo     0x10003b119
   10003b0b0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   10003b0b2:	(bad)  
   10003b0b3:	fs push rbx
   10003b0b5:	je     0x10003b118
   10003b0b7:	je     0x10003b12e
   10003b0b9:	jae    0x10003b0e4
   10003b0bb:	add    BYTE PTR [rax],al
   10003b0bd:	add    BYTE PTR [rax],al
   10003b0bf:	add    BYTE PTR [rbp+0x5f],ch
   10003b0c2:	ins    BYTE PTR es:[rdi],dx
   10003b0c3:	imul   esi,DWORD PTR [rbx+0x74],0x4573492e
   10003b0ca:	ins    DWORD PTR es:[rdi],dx
   10003b0cb:	jo     0x10003b141
   10003b0cd:	jns    0x10003b0ef
   10003b0cf:	sub    BYTE PTR [rcx],ch
   10003b0d1:	add    BYTE PTR [rax],al
   10003b0d3:	add    BYTE PTR [rax],al
   10003b0d5:	add    BYTE PTR [rax],al
   10003b0d7:	add    BYTE PTR [rbp+0x3a],ah
   10003b0da:	pop    rsp
   10003b0db:	jae    0x10003b14e
   10003b0dd:	ins    BYTE PTR es:[rdi],dx
   10003b0de:	xor    DWORD PTR [rcx],esi
   10003b0e0:	pop    rdi
   10003b0e1:	ins    DWORD PTR es:[rdi],dx
   10003b0e2:	(bad)  
   10003b0e3:	imul   ebp,DWORD PTR [rsi+0x5f],0x71735c74
   10003b0ea:	ins    BYTE PTR es:[rdi],dx
   10003b0eb:	pop    rsp
   10003b0ec:	outs   dx,BYTE PTR ds:[rsi]
   10003b0ed:	je     0x10003b153
   10003b0ef:	(bad)  
   10003b0f0:	ins    DWORD PTR es:[rdi],dx
   10003b0f1:	jae    0x10003b14f
   10003b0f3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   10003b0f6:	ins    DWORD PTR es:[rdi],dx
   10003b0f7:	outs   dx,DWORD PTR ds:[rsi]
   10003b0f8:	outs   dx,BYTE PTR ds:[rsi]
   10003b0f9:	pop    rsp
   10003b0fa:	imul   ebp,DWORD PTR [rsi+0x63],0x646d635c
   10003b101:	ins    BYTE PTR es:[rdi],dx
   10003b102:	imul   ebp,DWORD PTR [rsi+0x65],0x61726170
   10003b109:	ins    DWORD PTR es:[rdi],dx
   10003b10a:	gs je  0x10003b172
   10003b10d:	jb     0x10003b182
   10003b10f:	cs push 0x0
   10003b115:	add    BYTE PTR [rax],al
   10003b117:	add    BYTE PTR [rbx+0x62],ah
   10003b11a:	and    BYTE PTR [rsi],bh
   10003b11c:	cmp    eax,0x49003120
   10003b121:	outs   dx,BYTE PTR ds:[rsi]
   10003b122:	jbe    0x10003b185
   10003b124:	ins    BYTE PTR es:[rdi],dx
   10003b125:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x63746977
   10003b12d:	push   0x6c617620
   10003b132:	jne    0x10003b199
   10003b134:	add    BYTE PTR [rax],al
   10003b136:	add    BYTE PTR [rax],al
   10003b138:	rex.RX
   10003b139:	rex.B
   10003b13a:	rex.WR push rbx
   10003b13c:	add    BYTE PTR [r8],r8b
   10003b13f:	add    BYTE PTR [rsi+0x41],al
   10003b142:	rex.WR push rbx
   10003b144:	add    BYTE PTR [r8],r8b
   10003b147:	add    BYTE PTR [rcx+0x6e],cl
   10003b14a:	jbe    0x10003b1ad
   10003b14c:	ins    BYTE PTR es:[rdi],dx
   10003b14d:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x63746977
   10003b155:	push   0x6c617620
   10003b15a:	jne    0x10003b1c1
   10003b15c:	add    BYTE PTR [rax],al
   10003b15e:	add    BYTE PTR [rax],al
   10003b160:	rex.RX
   10003b161:	rex.B
   10003b162:	rex.WR push rbx
   10003b164:	add    BYTE PTR [r8],r8b
   10003b167:	add    BYTE PTR [rcx+0x6e],cl
   10003b16a:	jbe    0x10003b1cd
   10003b16c:	ins    BYTE PTR es:[rdi],dx
   10003b16d:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x63746977
   10003b175:	push   0x6c617620
   10003b17a:	jne    0x10003b1e1
	...

Disassembly of section .rsrc:

000000010003c000 <.rsrc>:
	...
   10003c008:	add    al,0x0
   10003c00a:	add    BYTE PTR [rax],al
   10003c00c:	add    DWORD PTR [rax],eax
   10003c00e:	add    al,BYTE PTR [rax]
   10003c010:	call   0x12883c015
   10003c015:	add    BYTE PTR [rax],al
   10003c017:	adc    BYTE PTR [rax],0x0
   10003c01a:	add    BYTE PTR [rax],al
   10003c01c:	add    BYTE PTR [rax],al
   10003c01f:	sbb    BYTE PTR [rax],0x0
   10003c022:	add    BYTE PTR [rax],al
   10003c024:	pop    rax
   10003c025:	add    BYTE PTR [rax],al
   10003c027:	add    BYTE PTR [rax],0x0
   10003c02a:	add    BYTE PTR [rax],al
   10003c02c:	add    BYTE PTR [rax],al
   10003c02e:	add    BYTE PTR [rax],al
   10003c030:	add    al,0x0
   10003c032:	add    BYTE PTR [rax],al
   10003c034:	add    BYTE PTR [rax],al
   10003c036:	add    DWORD PTR [rax],eax
   10003c038:	add    BYTE PTR fs:[rax],al
   10003c03b:	add    BYTE PTR [rax+0x0],dh
   10003c03e:	add    BYTE PTR [rax+0x0],al
   10003c044:	add    BYTE PTR [rax],al
   10003c046:	add    BYTE PTR [rax],al
   10003c048:	add    al,0x0
   10003c04a:	add    BYTE PTR [rax],al
   10003c04c:	add    BYTE PTR [rax],al
   10003c04e:	add    DWORD PTR [rax],eax
   10003c050:	add    DWORD PTR [rax],eax
   10003c052:	add    BYTE PTR [rax],al
   10003c054:	mov    BYTE PTR [rax],al
   10003c056:	add    BYTE PTR [rax+0x0],al
   10003c05c:	add    BYTE PTR [rax],al
   10003c05e:	add    BYTE PTR [rax],al
   10003c060:	add    al,0x0
   10003c062:	add    BYTE PTR [rax],al
   10003c064:	add    BYTE PTR [rax],al
   10003c066:	add    DWORD PTR [rax],eax
   10003c068:	add    DWORD PTR [rax],eax
   10003c06a:	add    BYTE PTR [rax],al
   10003c06c:	movabs al,ds:0x800000
   10003c075:	add    BYTE PTR [rax],al
   10003c077:	add    BYTE PTR [rax+rax*1],al
   10003c07a:	add    BYTE PTR [rax],al
   10003c07c:	add    BYTE PTR [rax],al
   10003c07e:	add    DWORD PTR [rax],eax
   10003c080:	or     DWORD PTR [rax+rax*1],eax
   10003c083:	add    BYTE PTR [rax+0x0],bh
   10003c089:	add    BYTE PTR [rax],al
   10003c08b:	add    BYTE PTR [rax],al
   10003c08d:	add    BYTE PTR [rax],al
   10003c08f:	add    BYTE PTR [rax+rax*1],al
   10003c092:	add    BYTE PTR [rax],al
   10003c094:	add    BYTE PTR [rax],al
   10003c096:	add    DWORD PTR [rax],eax
   10003c098:	or     DWORD PTR [rax+rax*1],eax
   10003c09b:	add    al,cl
	...
   10003c0a5:	add    BYTE PTR [rax],al
   10003c0a7:	add    BYTE PTR [rax+rax*1],al
   10003c0aa:	add    BYTE PTR [rax],al
   10003c0ac:	add    BYTE PTR [rax],al
   10003c0ae:	add    DWORD PTR [rax],eax
   10003c0b0:	or     DWORD PTR [rax+rax*1],eax
   10003c0b3:	add    al,bl
   10003c0b5:	add    BYTE PTR [rax],al
   10003c0b7:	add    ah,bh
   10003c0b9:	rol    BYTE PTR [rbx],0x0
   10003c0bc:	xor    eax,DWORD PTR [rcx]
   10003c0be:	add    BYTE PTR [rax],al
   10003c0c0:	in     al,0x4
   10003c0c2:	add    BYTE PTR [rax],al
   10003c0c4:	add    BYTE PTR [rax],al
   10003c0c6:	add    BYTE PTR [rax],al
   10003c0c8:	xor    dl,al
   10003c0ca:	add    eax,DWORD PTR [rax]
   10003c0cc:	lods   al,BYTE PTR ds:[rsi]
   10003c0cd:	add    al,0x0
   10003c0cf:	add    ah,ah
   10003c0d1:	add    al,0x0
   10003c0d3:	add    BYTE PTR [rax],al
   10003c0d5:	add    BYTE PTR [rax],al
   10003c0d7:	add    ah,bl
   10003c0d9:	mov    BYTE PTR [rbx],0x0
   10003c0dc:	pop    rdx
   10003c0dd:	add    DWORD PTR [rax],eax
   10003c0df:	add    ah,ah
   10003c0e1:	add    al,0x0
   10003c0e3:	add    BYTE PTR [rax],al
   10003c0e5:	add    BYTE PTR [rax],al
   10003c0e7:	add    BYTE PTR [rax],cl
   10003c0e9:	add    BYTE PTR [rdx+0x0],dl
   10003c0ec:	add    BYTE PTR [r15+0x0],r8b
   10003c0f0:	rex.WB add BYTE PTR [r11+0x0],dl
   10003c0f4:	push   rsp
   10003c0f5:	add    BYTE PTR [rdx+0x0],dl
   10003c0f8:	pop    rcx
   10003c0f9:	add    BYTE PTR [rax],al
   10003c0fb:	add    BYTE PTR [rax+0x4b],cl
   10003c0fe:	rex.WR
   10003c0ff:	rex.WRB or rax,0xa0d7b0a
   10003c105:	or     DWORD PTR [rsi+0x6f],ecx
   10003c108:	push   rdx
   10003c109:	gs ins DWORD PTR es:[rdi],dx
   10003c10b:	outs   dx,DWORD PTR ds:[rsi]
   10003c10c:	jbe    0x10003c173
   10003c10e:	and    BYTE PTR [rbx+0x4f],dl
   10003c111:	rex.RX push rsp
   10003c113:	push   rdi
   10003c114:	push   r10
   10003c116:	rex.RB or eax,0xd7b090a
   10003c11c:	or     cl,BYTE PTR [rcx]
   10003c11e:	or     DWORD PTR [rsi+0x6f],ecx
   10003c121:	push   rdx
   10003c122:	gs ins DWORD PTR es:[rdi],dx
   10003c124:	outs   dx,DWORD PTR ds:[rsi]
   10003c125:	jbe    0x10003c18c
   10003c127:	and    BYTE PTR [rbx+0x6c],al
   10003c12a:	(bad)  
   10003c12b:	jae    0x10003c1a0
   10003c12d:	gs jae 0x10003c13d
   10003c130:	or     cl,BYTE PTR [rcx]
   10003c132:	or     DWORD PTR [rbx+0xd],edi
   10003c135:	or     cl,BYTE PTR [rcx]
   10003c137:	or     DWORD PTR [rcx],ecx
   10003c139:	rex.RX outs dx,DWORD PTR ds:[rsi]
   10003c13b:	jb     0x10003c1a0
   10003c13d:	gs push rdx
   10003c13f:	gs ins DWORD PTR es:[rdi],dx
   10003c141:	outs   dx,DWORD PTR ds:[rsi]
   10003c142:	jbe    0x10003c1a9
   10003c144:	and    BYTE PTR [rdi],ah
   10003c146:	cs ins DWORD PTR es:[rdi],dx
   10003c148:	fs data16 (bad) 
   10003c14b:	or     eax,0x2020090a
   10003c150:	and    BYTE PTR [rax],ah
   10003c152:	or     DWORD PTR [rcx],ecx
   10003c154:	jnp    0x10003c163
   10003c156:	or     cl,BYTE PTR [rcx]
   10003c158:	or     DWORD PTR [rcx],ecx
   10003c15a:	or     DWORD PTR [rsi+0x61],esi
   10003c15d:	ins    BYTE PTR es:[rdi],dx
   10003c15e:	and    BYTE PTR [rdi],ah
   10003c160:	(bad)  
   10003c161:	and    BYTE PTR [rip+0x27207320],bh        # 0x127243487
   10003c167:	rex.R (bad) 
   10003c169:	je     0x10003c1cc
   10003c16b:	(bad)  
   10003c16d:	jae    0x10003c1d4
   10003c16f:	and    BYTE PTR [rax+0x72],dl
   10003c172:	imul   ebp,DWORD PTR [rbp+0x61],0x46207972
   10003c179:	imul   ebp,DWORD PTR [rbp+riz*2+0x27],0x9090a0d
   10003c181:	or     DWORD PTR [rbp+0xd],edi
   10003c184:	or     cl,BYTE PTR [rcx]
   10003c186:	or     DWORD PTR [rcx],ecx
   10003c188:	rex.RX outs dx,DWORD PTR ds:[rsi]
   10003c18a:	jb     0x10003c1ef
   10003c18c:	gs push rdx
   10003c18e:	gs ins DWORD PTR es:[rdi],dx
   10003c190:	outs   dx,DWORD PTR ds:[rsi]
   10003c191:	jbe    0x10003c1f8
   10003c193:	and    BYTE PTR [rdi],ah
   10003c195:	outs   dx,BYTE PTR cs:[rsi]
   10003c197:	fs data16 (bad) 
   10003c19a:	or     eax,0x2020090a
   10003c19f:	and    BYTE PTR [rax],ah
   10003c1a1:	or     DWORD PTR [rcx],ecx
   10003c1a3:	jnp    0x10003c1b2
   10003c1a5:	or     cl,BYTE PTR [rcx]
   10003c1a7:	or     DWORD PTR [rcx],ecx
   10003c1a9:	or     DWORD PTR [rsi+0x61],esi
   10003c1ac:	ins    BYTE PTR es:[rdi],dx
   10003c1ad:	and    BYTE PTR [rdi],ah
   10003c1af:	(bad)  
   10003c1b0:	and    BYTE PTR [rip+0x27207320],bh        # 0x1272434d6
   10003c1b6:	rex.R (bad) 
   10003c1b8:	je     0x10003c21b
   10003c1ba:	(bad)  
   10003c1bc:	jae    0x10003c223
   10003c1be:	and    BYTE PTR [rbx+0x65],dl
   10003c1c1:	movsxd ebp,DWORD PTR [rdi+0x6e]
   10003c1c4:	fs (bad) 
   10003c1c6:	jb     0x10003c241
   10003c1c8:	and    BYTE PTR [rsi+0x69],al
   10003c1cb:	ins    BYTE PTR es:[rdi],dx
   10003c1cc:	gs (bad) 
   10003c1ce:	or     eax,0x909090a
   10003c1d3:	jge    0x10003c1e2
   10003c1d5:	or     cl,BYTE PTR [rcx]
   10003c1d7:	or     DWORD PTR [rcx],ecx
   10003c1d9:	rex.RX outs dx,DWORD PTR ds:[rsi]
   10003c1db:	jb     0x10003c240
   10003c1dd:	gs push rdx
   10003c1df:	gs ins DWORD PTR es:[rdi],dx
   10003c1e1:	outs   dx,DWORD PTR ds:[rsi]
   10003c1e2:	jbe    0x10003c249
   10003c1e4:	and    BYTE PTR [rdi],ah
   10003c1e6:	cs ins BYTE PTR es:[rdi],dx
   10003c1e8:	fs data16 (bad) 
   10003c1eb:	or     eax,0x2020090a
   10003c1f0:	and    BYTE PTR [rax],ah
   10003c1f2:	or     DWORD PTR [rcx],ecx
   10003c1f4:	jnp    0x10003c203
   10003c1f6:	or     cl,BYTE PTR [rcx]
   10003c1f8:	or     DWORD PTR [rcx],ecx
   10003c1fa:	or     DWORD PTR [rsi+0x61],esi
   10003c1fd:	ins    BYTE PTR es:[rdi],dx
   10003c1fe:	and    BYTE PTR [rdi],ah
   10003c200:	(bad)  
   10003c201:	and    BYTE PTR [rip+0x27207320],bh        # 0x127243527
   10003c207:	rex.R (bad) 
   10003c209:	je     0x10003c26c
   10003c20b:	(bad)  
   10003c20d:	jae    0x10003c274
   10003c20f:	and    BYTE PTR [rdi+rbp*2+0x67],cl
   10003c213:	and    BYTE PTR [rsi+0x69],al
   10003c216:	ins    BYTE PTR es:[rdi],dx
   10003c217:	gs (bad) 
   10003c219:	or     eax,0x909090a
   10003c21e:	jge    0x10003c22d
   10003c220:	or     cl,BYTE PTR [rcx]
   10003c222:	or     DWORD PTR [rbp+0xd],edi
   10003c225:	or     cl,BYTE PTR [rcx]
   10003c227:	jge    0x10003c236
   10003c229:	or     bh,BYTE PTR [rbp+0xd]
   10003c22c:	or     cl,BYTE PTR [rip+0x4ac500a]        # 0x104b0123c
   10003c232:	xor    al,0x0
   10003c234:	add    BYTE PTR [rax],al
   10003c236:	push   rsi
   10003c237:	add    BYTE PTR [rbx+0x0],dl
   10003c23a:	pop    rdi
   10003c23b:	add    BYTE PTR [rsi+0x0],dl
   10003c23e:	add    BYTE PTR [r10+0x0],r10b
   10003c242:	push   rbx
   10003c243:	add    BYTE PTR [rcx+0x0],cl
   10003c246:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   10003c24a:	pop    rdi
   10003c24b:	add    BYTE PTR [rcx+0x0],cl
   10003c24e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   10003c252:	rex.WRXB add BYTE PTR [r8],r8b
   10003c255:	add    BYTE PTR [rax],al
   10003c257:	add    BYTE PTR [rbp+0xfeef04],bh
   10003c25d:	add    BYTE PTR [rcx],al
   10003c25f:	add    BYTE PTR [rsi+0x0],ch
   10003c262:	fild   DWORD PTR [rdi]
   10003c264:	cmp    al,0x0
   10003c266:	xor    al,0x8
   10003c268:	add    BYTE PTR [rax],al
   10003c26a:	or     eax,DWORD PTR [rax]
   10003c26c:	cmp    al,0x0
   10003c26e:	xor    al,0x8
   10003c270:	(bad)  
	...
   10003c279:	add    BYTE PTR [rax+rax*1],al
   10003c27c:	add    DWORD PTR [rax],eax
	...
   10003c28a:	add    BYTE PTR [rax],al
   10003c28c:	or     al,BYTE PTR [rax+rax*1]
   10003c28f:	add    BYTE PTR [rcx],al
   10003c291:	add    BYTE PTR [rbx+0x0],dl
   10003c294:	je     0x10003c296
   10003c296:	jb     0x10003c298
   10003c298:	imul   eax,DWORD PTR [rax],0x67006e
   10003c29e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   10003c2a2:	ins    BYTE PTR es:[rdi],dx
   10003c2a3:	add    BYTE PTR [rbp+0x0],ah
   10003c2a6:	rex.WB add BYTE PTR [r14+0x0],bpl
   10003c2aa:	data16 add BYTE PTR [rdi+0x0],ch
   10003c2ae:	add    BYTE PTR [rax],al
   10003c2b0:	out    0x3,al
   10003c2b2:	add    BYTE PTR [rax],al
   10003c2b4:	add    DWORD PTR [rax],eax
   10003c2b6:	xor    BYTE PTR [rax],al
   10003c2b8:	xor    al,0x0
   10003c2ba:	xor    BYTE PTR [rax],al
   10003c2bc:	cmp    DWORD PTR [rax],eax
   10003c2be:	xor    BYTE PTR [rax],al
   10003c2c0:	xor    al,0x0
   10003c2c2:	rex.X add BYTE PTR [rax],sil
   10003c2c5:	add    BYTE PTR [rax],al
   10003c2c7:	add    BYTE PTR [rsi],ah
   10003c2c9:	add    BYTE PTR [rdi],al
   10003c2cb:	add    BYTE PTR [rcx],al
   10003c2cd:	add    BYTE PTR [rax+0x0],dl
   10003c2d0:	ins    BYTE PTR es:[rdi],dx
   10003c2d1:	add    BYTE PTR [rcx+0x0],ah
   10003c2d4:	je     0x10003c2d6
   10003c2d6:	data16 add BYTE PTR [rdi+0x0],ch
   10003c2da:	jb     0x10003c2dc
   10003c2dc:	ins    DWORD PTR es:[rdi],dx
   10003c2dd:	add    BYTE PTR [rax],al
   10003c2df:	add    BYTE PTR [rsi+0x0],cl
   10003c2e2:	push   rsp
   10003c2e3:	add    BYTE PTR [rax],ah
   10003c2e5:	add    BYTE PTR [rax+0x0],bh
   10003c2e8:	add    BYTE PTR ss:[rax+rax*1],dh
   10003c2ec:	add    BYTE PTR [rax],al
   10003c2ee:	add    BYTE PTR [rax],al
   10003c2f0:	mov    edx,0x1004900
   10003c2f5:	add    BYTE PTR [rax+rax*1+0x65],cl
   10003c2f9:	add    BYTE PTR [rdi+0x0],ah
   10003c2fc:	(bad)  
   10003c2fd:	add    BYTE PTR [rax+rax*1+0x54],ch
   10003c301:	add    BYTE PTR [rdx+0x0],dh
   10003c304:	(bad)  
   10003c305:	add    BYTE PTR [rax+rax*1+0x65],ah
   10003c309:	add    BYTE PTR [rbp+0x0],ch
   10003c30c:	(bad)  
   10003c30d:	add    BYTE PTR [rdx+0x0],dh
   10003c310:	imul   eax,DWORD PTR [rax],0x73
   10003c313:	add    BYTE PTR [rax],al
   10003c315:	add    BYTE PTR [rax],al
   10003c317:	add    BYTE PTR [rbp+0x0],cl
   10003c31a:	imul   eax,DWORD PTR [rax],0x720063
   10003c320:	outs   dx,DWORD PTR ds:[rsi]
   10003c321:	add    BYTE PTR [rbx+0x0],dh
   10003c324:	outs   dx,DWORD PTR ds:[rsi]
   10003c325:	add    BYTE PTR [rsi+0x0],ah
   10003c328:	je     0x10003c32a
   10003c32a:	and    BYTE PTR [rax],al
   10003c32c:	push   rbx
   10003c32d:	add    BYTE PTR [rcx+0x0],dl
   10003c330:	rex.WR add BYTE PTR [rax],r12b
   10003c333:	add    BYTE PTR [rbx+0x0],dl
   10003c336:	add    BYTE PTR gs:[rdx+0x0],dh
   10003c33a:	jbe    0x10003c33c
   10003c33c:	add    BYTE PTR gs:[rdx+0x0],dh
   10003c340:	and    BYTE PTR [rax],al
   10003c342:	imul   eax,DWORD PTR [rax],0x200073
   10003c348:	(bad)  
   10003c349:	add    BYTE PTR [rax],ah
   10003c34b:	add    BYTE PTR [rdx+0x0],dh
   10003c34e:	add    BYTE PTR gs:[rdi+0x0],ah
   10003c352:	imul   eax,DWORD PTR [rax],0x740073
   10003c358:	add    BYTE PTR gs:[rdx+0x0],dh
   10003c35c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   10003c361:	add    BYTE PTR [rax+rax*1+0x72],dh
   10003c365:	add    BYTE PTR [rcx+0x0],ah
   10003c368:	add    BYTE PTR fs:[rbp+0x0],ah
   10003c36c:	ins    DWORD PTR es:[rdi],dx
   10003c36d:	add    BYTE PTR [rcx+0x0],ah
   10003c370:	jb     0x10003c372
   10003c372:	imul   eax,DWORD PTR [rax],0x20
   10003c375:	add    BYTE PTR [rdi+0x0],ch
   10003c378:	data16 add BYTE PTR [rax],ah
   10003c37b:	add    BYTE PTR [rbp+0x0],cl
   10003c37e:	imul   eax,DWORD PTR [rax],0x720063
   10003c384:	outs   dx,DWORD PTR ds:[rsi]
   10003c385:	add    BYTE PTR [rbx+0x0],dh
   10003c388:	outs   dx,DWORD PTR ds:[rsi]
   10003c389:	add    BYTE PTR [rsi+0x0],ah
   10003c38c:	je     0x10003c38e
   10003c38e:	and    BYTE PTR [rax],al
   10003c390:	rex.XB add BYTE PTR [r15+0x0],bpl
   10003c394:	jb     0x10003c396
   10003c396:	jo     0x10003c398
   10003c398:	outs   dx,DWORD PTR ds:[rsi]
   10003c399:	add    BYTE PTR [rdx+0x0],dh
   10003c39c:	(bad)  
   10003c39d:	add    BYTE PTR [rax+rax*1+0x69],dh
   10003c3a1:	add    BYTE PTR [rdi+0x0],ch
   10003c3a4:	outs   dx,BYTE PTR ds:[rsi]
   10003c3a5:	add    BYTE PTR [rsi],ch
   10003c3a7:	add    BYTE PTR [rax],al
   10003c3a9:	add    BYTE PTR [rax],al
   10003c3ab:	add    BYTE PTR [rax],ah
   10003c3ad:	add    BYTE PTR [rax+rax*1],al
   10003c3b0:	add    DWORD PTR [rax],eax
   10003c3b2:	rex.XB add BYTE PTR [r15+0x0],bpl
   10003c3b6:	ins    DWORD PTR es:[rdi],dx
   10003c3b7:	add    BYTE PTR [rbp+0x0],ch
   10003c3ba:	add    BYTE PTR gs:[rsi+0x0],ch
   10003c3be:	je     0x10003c3c0
   10003c3c0:	jae    0x10003c3c2
   10003c3c2:	add    BYTE PTR [rax],al
   10003c3c4:	push   rbx
   10003c3c5:	add    BYTE PTR [rcx+0x0],dl
   10003c3c8:	rex.WR add BYTE PTR [rax],r8b
   10003c3cb:	add    BYTE PTR [rsi],ah
   10003c3cd:	add    BYTE PTR [rip+0x47000100],al        # 0x14703c4d3
   10003c3d3:	add    BYTE PTR [rdi+0x0],ch
   10003c3d6:	ins    BYTE PTR es:[rdi],dx
   10003c3d7:	add    BYTE PTR [rax+rax*1+0x65],ah
   10003c3db:	add    BYTE PTR [rsi+0x0],ch
   10003c3de:	rex.X add BYTE PTR [rcx+0x0],bpl
   10003c3e2:	je     0x10003c3e4
   10003c3e4:	jae    0x10003c3e6
   10003c3e6:	add    BYTE PTR [rax],al
   10003c3e8:	push   rsp
   10003c3e9:	add    BYTE PTR [rdx+0x0],dh
   10003c3ec:	jne    0x10003c3ee
   10003c3ee:	add    BYTE PTR gs:[rax],al
   10003c3f1:	add    BYTE PTR [rax],al
   10003c3f3:	add    BYTE PTR [rax+rax*1+0x16],cl
   10003c3f7:	add    BYTE PTR [rcx],al
   10003c3f9:	add    BYTE PTR [rbx+0x0],al
   10003c3fc:	outs   dx,DWORD PTR ds:[rsi]
   10003c3fd:	add    BYTE PTR [rbp+0x0],ch
   10003c400:	jo     0x10003c402
   10003c402:	(bad)  
   10003c403:	add    BYTE PTR [rsi+0x0],ch
   10003c406:	jns    0x10003c408
   10003c408:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   10003c40c:	ins    DWORD PTR es:[rdi],dx
   10003c40d:	add    BYTE PTR [rbp+0x0],ah
   10003c410:	add    BYTE PTR [rax],al
   10003c412:	add    BYTE PTR [rax],al
   10003c414:	rex.WRB add BYTE PTR [r9+0x0],r13b
   10003c418:	movsxd eax,DWORD PTR [rax]
   10003c41a:	jb     0x10003c41c
   10003c41c:	outs   dx,DWORD PTR ds:[rsi]
   10003c41d:	add    BYTE PTR [rbx+0x0],dh
   10003c420:	outs   dx,DWORD PTR ds:[rsi]
   10003c421:	add    BYTE PTR [rsi+0x0],ah
   10003c424:	je     0x10003c426
   10003c426:	and    BYTE PTR [rax],al
   10003c428:	rex.XB add BYTE PTR [r15+0x0],bpl
   10003c42c:	jb     0x10003c42e
   10003c42e:	jo     0x10003c430
   10003c430:	outs   dx,DWORD PTR ds:[rsi]
   10003c431:	add    BYTE PTR [rdx+0x0],dh
   10003c434:	(bad)  
   10003c435:	add    BYTE PTR [rax+rax*1+0x69],dh
   10003c439:	add    BYTE PTR [rdi+0x0],ch
   10003c43c:	outs   dx,BYTE PTR ds:[rsi]
   10003c43d:	add    BYTE PTR [rax],al
   10003c43f:	add    BYTE PTR [rsi+0x0],ah
   10003c442:	(bad)  
   10003c443:	add    BYTE PTR [rcx],al
   10003c445:	add    BYTE PTR [rsi+0x0],al
   10003c448:	imul   eax,DWORD PTR [rax],0x65006c
   10003c44e:	add    BYTE PTR [rbp+0x0],r12b
   10003c452:	jae    0x10003c454
   10003c454:	movsxd eax,DWORD PTR [rax]
   10003c456:	jb     0x10003c458
   10003c458:	imul   eax,DWORD PTR [rax],0x740070
   10003c45e:	imul   eax,DWORD PTR [rax],0x6e006f
   10003c464:	add    BYTE PTR [rax],al
   10003c466:	add    BYTE PTR [rax],al
   10003c468:	push   rbx
   10003c469:	add    BYTE PTR [rcx+0x0],dl
   10003c46c:	rex.WR add BYTE PTR [rax],r12b
   10003c46f:	add    BYTE PTR [rbx+0x0],dl
   10003c472:	add    BYTE PTR gs:[rdx+0x0],dh
   10003c476:	jbe    0x10003c478
   10003c478:	add    BYTE PTR gs:[rdx+0x0],dh
   10003c47c:	and    BYTE PTR [rax],al
   10003c47e:	push   rdi
   10003c47f:	add    BYTE PTR [rcx+0x0],ch
   10003c482:	outs   dx,BYTE PTR ds:[rsi]
   10003c483:	add    BYTE PTR [rax+rax*1+0x6f],ah
   10003c487:	add    BYTE PTR [rdi+0x0],dh
   10003c48a:	jae    0x10003c48c
   10003c48c:	and    BYTE PTR [rax],al
   10003c48e:	rex.WRX add BYTE PTR [rax+r8*1+0x20],r10b
   10003c493:	add    BYTE PTR [rip+0x36002000],ch        # 0x13603e499
   10003c499:	add    BYTE PTR [rax+rax*1],dh
   10003c49c:	and    BYTE PTR [rax],al
   10003c49e:	rex.X add BYTE PTR [rcx+0x0],bpl
   10003c4a2:	je     0x10003c4a4
   10003c4a4:	add    BYTE PTR [rax],al
   10003c4a6:	add    BYTE PTR [rax],al
   10003c4a8:	jl     0x10003c4aa
   10003c4aa:	add    BYTE PTR cs:[rcx],al
   10003c4ad:	add    BYTE PTR [rsi+0x0],al
   10003c4b0:	imul   eax,DWORD PTR [rax],0x65006c
   10003c4b6:	push   rsi
   10003c4b7:	add    BYTE PTR [rbp+0x0],ah
   10003c4ba:	jb     0x10003c4bc
   10003c4bc:	jae    0x10003c4be
   10003c4be:	imul   eax,DWORD PTR [rax],0x6e006f
   10003c4c4:	add    BYTE PTR [rax],al
   10003c4c6:	add    BYTE PTR [rax],al
   10003c4c8:	xor    al,BYTE PTR [rax]
   10003c4ca:	xor    BYTE PTR [rax],al
   10003c4cc:	xor    DWORD PTR [rax],eax
   10003c4ce:	xor    DWORD PTR [rax],eax
   10003c4d0:	add    BYTE PTR cs:[rax],dh
   10003c4d3:	add    BYTE PTR [rcx],dh
   10003c4d5:	add    BYTE PTR [rcx],dh
   10003c4d7:	add    BYTE PTR [rax],dh
   10003c4d9:	add    BYTE PTR [rsi],ch
   10003c4db:	add    BYTE PTR [rdx],dh
   10003c4dd:	add    BYTE PTR [rcx],dh
   10003c4df:	add    BYTE PTR [rax],dh
   10003c4e1:	add    BYTE PTR [rax],dh
   10003c4e3:	add    BYTE PTR [rsi],ch
   10003c4e5:	add    BYTE PTR [rax],dh
   10003c4e7:	add    BYTE PTR [rsi],dh
   10003c4e9:	add    BYTE PTR [rax],dh
   10003c4eb:	add    BYTE PTR [rax],ah
   10003c4ed:	add    BYTE PTR [rax],ch
   10003c4ef:	add    BYTE PTR [rax],ch
   10003c4f1:	add    BYTE PTR [rbx+0x0],dl
   10003c4f4:	push   rcx
   10003c4f5:	add    BYTE PTR [rax+rax*1+0x31],cl
   10003c4f9:	add    BYTE PTR [rcx],dh
   10003c4fb:	add    BYTE PTR [rdi+0x0],bl
   10003c4fe:	push   rdx
   10003c4ff:	add    BYTE PTR [rax+rax*1+0x4d],dl
   10003c503:	add    BYTE PTR [rcx],ch
   10003c505:	add    BYTE PTR [rsi],ch
   10003c507:	add    BYTE PTR [rcx],dh
   10003c509:	add    BYTE PTR [rdx],dh
   10003c50b:	add    BYTE PTR [rax],dh
   10003c50d:	add    BYTE PTR [rdx],dh
   10003c50f:	add    BYTE PTR [rcx],dh
   10003c511:	add    BYTE PTR [rax],dh
   10003c513:	add    BYTE PTR [rip+0x39003100],ch        # 0x13903f619
   10003c519:	add    BYTE PTR [rcx],dh
   10003c51b:	add    BYTE PTR [rdi],dh
   10003c51d:	add    BYTE PTR [rax],ah
   10003c51f:	add    BYTE PTR [rcx],ch
   10003c521:	add    BYTE PTR [rax],al
   10003c523:	add    BYTE PTR [rdx],dh
   10003c525:	add    BYTE PTR [rcx],cl
   10003c527:	add    BYTE PTR [rcx],al
   10003c529:	add    BYTE PTR [rcx+0x0],cl
   10003c52c:	outs   dx,BYTE PTR ds:[rsi]
   10003c52d:	add    BYTE PTR [rax+rax*1+0x65],dh
   10003c531:	add    BYTE PTR [rdx+0x0],dh
   10003c534:	outs   dx,BYTE PTR ds:[rsi]
   10003c535:	add    BYTE PTR [rcx+0x0],ah
   10003c538:	ins    BYTE PTR es:[rdi],dx
   10003c539:	add    BYTE PTR [rsi+0x0],cl
   10003c53c:	(bad)  
   10003c53d:	add    BYTE PTR [rbp+0x0],ch
   10003c540:	add    BYTE PTR gs:[rax],al
   10003c543:	add    BYTE PTR [rbx+0x0],dl
   10003c546:	push   rcx
   10003c547:	add    BYTE PTR [rax+rax*1+0x53],cl
   10003c54b:	add    BYTE PTR [rbp+0x0],al
   10003c54e:	push   rdx
   10003c54f:	add    BYTE PTR [rsi+0x0],dl
   10003c552:	push   rdx
   10003c553:	add    BYTE PTR [rax],al
   10003c555:	add    BYTE PTR [rax],al
   10003c557:	add    BYTE PTR [rsi+0x0],ch
   10003c55a:	and    eax,0x4c000100
   10003c55f:	add    BYTE PTR [rbp+0x0],ah
   10003c562:	add    BYTE PTR [ecx+0x0],ah
   10003c566:	ins    BYTE PTR es:[rdi],dx
   10003c567:	add    BYTE PTR [rbx+0x0],al
   10003c56a:	outs   dx,DWORD PTR ds:[rsi]
   10003c56b:	add    BYTE PTR [rax+0x0],dh
   10003c56e:	jns    0x10003c570
   10003c570:	jb     0x10003c572
   10003c572:	imul   eax,DWORD PTR [rax],0x680067
   10003c578:	je     0x10003c57a
   10003c57a:	add    BYTE PTR [rax],al
   10003c57c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   10003c580:	movsxd eax,DWORD PTR [rax]
   10003c582:	jb     0x10003c584
   10003c584:	outs   dx,DWORD PTR ds:[rsi]
   10003c585:	add    BYTE PTR [rbx+0x0],dh
   10003c588:	outs   dx,DWORD PTR ds:[rsi]
   10003c589:	add    BYTE PTR [rsi+0x0],ah
   10003c58c:	je     0x10003c58e
   10003c58e:	and    BYTE PTR [rax],al
   10003c590:	rex.XB add BYTE PTR [r15+0x0],bpl
   10003c594:	jb     0x10003c596
   10003c596:	jo     0x10003c598
   10003c598:	add    BYTE PTR cs:[rax],ah
   10003c59b:	add    BYTE PTR [rcx+0x0],al
   10003c59e:	ins    BYTE PTR es:[rdi],dx
   10003c59f:	add    BYTE PTR [rax+rax*1+0x20],ch
   10003c5a3:	add    BYTE PTR [rdx+0x0],dh
   10003c5a6:	imul   eax,DWORD PTR [rax],0x680067
   10003c5ac:	je     0x10003c5ae
   10003c5ae:	jae    0x10003c5b0
   10003c5b0:	and    BYTE PTR [rax],al
   10003c5b2:	jb     0x10003c5b4
   10003c5b4:	add    BYTE PTR gs:[rbx+0x0],dh
   10003c5b8:	add    BYTE PTR gs:[rdx+0x0],dh
   10003c5bc:	jbe    0x10003c5be
   10003c5be:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   10003c5c3:	add    BYTE PTR [rax],al
   10003c5c5:	add    BYTE PTR [rax],al
   10003c5c7:	add    BYTE PTR [rdx+0x0],al
   10003c5ca:	or     eax,0x4f000100
   10003c5cf:	add    BYTE PTR [rdx+0x0],dh
   10003c5d2:	imul   eax,DWORD PTR [rax],0x690067
   10003c5d8:	outs   dx,BYTE PTR ds:[rsi]
   10003c5d9:	add    BYTE PTR [rcx+0x0],ah
   10003c5dc:	ins    BYTE PTR es:[rdi],dx
   10003c5dd:	add    BYTE PTR [rsi+0x0],al
   10003c5e0:	imul   eax,DWORD PTR [rax],0x65006c
   10003c5e6:	outs   dx,BYTE PTR ds:[rsi]
   10003c5e7:	add    BYTE PTR [rcx+0x0],ah
   10003c5ea:	ins    DWORD PTR es:[rdi],dx
   10003c5eb:	add    BYTE PTR [rbp+0x0],ah
   10003c5ee:	add    BYTE PTR [rax],al
   10003c5f0:	push   rbx
   10003c5f1:	add    BYTE PTR [rcx+0x0],dl
   10003c5f4:	rex.WR add BYTE PTR [rbx+0x0],r10b
   10003c5f8:	add    BYTE PTR [r10+0x0],r10b
   10003c5fc:	push   rsi
   10003c5fd:	add    BYTE PTR [rdx+0x0],dl
   10003c600:	add    BYTE PTR cs:[rbp+0x0],al
   10003c604:	pop    rax
   10003c605:	add    BYTE PTR [rbp+0x0],al
   10003c608:	add    BYTE PTR [rax],al
   10003c60a:	add    BYTE PTR [rax],al
   10003c60c:	rex.WX add BYTE PTR [rip+0x50000100],dl        # 0x15003c713
   10003c613:	add    BYTE PTR [rdx+0x0],dh
   10003c616:	outs   dx,DWORD PTR ds:[rsi]
   10003c617:	add    BYTE PTR [rax+rax*1+0x75],ah
   10003c61b:	add    BYTE PTR [rbx+0x0],ah
   10003c61e:	je     0x10003c620
   10003c620:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   10003c624:	ins    DWORD PTR es:[rdi],dx
   10003c625:	add    BYTE PTR [rbp+0x0],ah
   10003c628:	add    BYTE PTR [rax],al
   10003c62a:	add    BYTE PTR [rax],al
   10003c62c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   10003c630:	movsxd eax,DWORD PTR [rax]
   10003c632:	jb     0x10003c634
   10003c634:	outs   dx,DWORD PTR ds:[rsi]
   10003c635:	add    BYTE PTR [rbx+0x0],dh
   10003c638:	outs   dx,DWORD PTR ds:[rsi]
   10003c639:	add    BYTE PTR [rsi+0x0],ah
   10003c63c:	je     0x10003c63e
   10003c63e:	and    BYTE PTR [rax],al
   10003c640:	push   rbx
   10003c641:	add    BYTE PTR [rcx+0x0],dl
   10003c644:	rex.WR add BYTE PTR [rax],r12b
   10003c647:	add    BYTE PTR [rbx+0x0],dl
   10003c64a:	add    BYTE PTR gs:[rdx+0x0],dh
   10003c64e:	jbe    0x10003c650
   10003c650:	add    BYTE PTR gs:[rdx+0x0],dh
   10003c654:	add    BYTE PTR [rax],al
   10003c656:	add    BYTE PTR [rax],al
   10003c658:	add    BYTE PTR ds:[rip+0x50000100],cl        # 0x15003c75f
   10003c65f:	add    BYTE PTR [rdx+0x0],dh
   10003c662:	outs   dx,DWORD PTR ds:[rsi]
   10003c663:	add    BYTE PTR [rax+rax*1+0x75],ah
   10003c667:	add    BYTE PTR [rbx+0x0],ah
   10003c66a:	je     0x10003c66c
   10003c66c:	push   rsi
   10003c66d:	add    BYTE PTR [rbp+0x0],ah
   10003c670:	jb     0x10003c672
   10003c672:	jae    0x10003c674
   10003c674:	imul   eax,DWORD PTR [rax],0x6e006f
   10003c67a:	add    BYTE PTR [rax],al
   10003c67c:	xor    DWORD PTR [rax],eax
   10003c67e:	xor    DWORD PTR [rax],eax
   10003c680:	add    BYTE PTR cs:[rax],dh
   10003c683:	add    BYTE PTR [rsi],ch
   10003c685:	add    BYTE PTR [rdx],dh
   10003c687:	add    BYTE PTR [rcx],dh
   10003c689:	add    BYTE PTR [rax],dh
   10003c68b:	add    BYTE PTR [rax],dh
   10003c68d:	add    BYTE PTR [rsi],ch
   10003c68f:	add    BYTE PTR [rsi],dh
   10003c691:	add    BYTE PTR [rax],dh
   10003c693:	add    BYTE PTR [rax],al
   10003c695:	add    BYTE PTR [rax],al
   10003c697:	add    BYTE PTR [rax+rax*1+0x0],al
   10003c69b:	add    BYTE PTR [rcx],al
   10003c69d:	add    BYTE PTR [rsi+0x0],dl
   10003c6a0:	(bad)  
   10003c6a1:	add    BYTE PTR [rdx+0x0],dh
   10003c6a4:	rex.RX add BYTE PTR [rcx+0x0],r13b
   10003c6a8:	ins    BYTE PTR es:[rdi],dx
   10003c6a9:	add    BYTE PTR [rbp+0x0],ah
   10003c6ac:	rex.WB add BYTE PTR [r14+0x0],bpl
   10003c6b0:	data16 add BYTE PTR [rdi+0x0],ch
   10003c6b4:	add    BYTE PTR [rax],al
   10003c6b6:	add    BYTE PTR [rax],al
   10003c6b8:	and    al,0x0
   10003c6ba:	add    al,0x0
   10003c6bc:	add    BYTE PTR [rax],al
   10003c6be:	push   rsp
   10003c6bf:	add    BYTE PTR [rdx+0x0],dh
   10003c6c2:	(bad)  
   10003c6c3:	add    BYTE PTR [rsi+0x0],ch
   10003c6c6:	jae    0x10003c6c8
   10003c6c8:	ins    BYTE PTR es:[rdi],dx
   10003c6c9:	add    BYTE PTR [rcx+0x0],ah
   10003c6cc:	je     0x10003c6ce
   10003c6ce:	imul   eax,DWORD PTR [rax],0x6e006f
   10003c6d4:	add    BYTE PTR [rax],al
   10003c6d6:	add    BYTE PTR [rax],al
   10003c6d8:	or     DWORD PTR [rax+rsi*4],eax
   10003c6db:	add    al,0x3c
   10003c6dd:	(bad)  
   10003c6de:	jae    0x10003c753
   10003c6e0:	gs ins DWORD PTR es:[rdi],dx
   10003c6e2:	(bad)  
   10003c6e3:	ins    BYTE PTR es:[rdi],dx
   10003c6e4:	jns    0x10003c706
   10003c6e6:	js     0x10003c755
   10003c6e8:	ins    BYTE PTR es:[rdi],dx
   10003c6e9:	outs   dx,BYTE PTR ds:[rsi]
   10003c6ea:	jae    0x10003c729
   10003c6ec:	and    dh,BYTE PTR [rbp+0x72]
   10003c6ef:	outs   dx,BYTE PTR ds:[rsi]
   10003c6f0:	cmp    dh,BYTE PTR [rbx+0x63]
   10003c6f3:	push   0x73616d65
   10003c6f8:	sub    eax,0x7263696d
   10003c6fd:	outs   dx,DWORD PTR ds:[rsi]
   10003c6fe:	jae    0x10003c76f
   10003c700:	data16 je 0x10003c730
   10003c703:	movsxd ebp,DWORD PTR [rdi+0x6d]
   10003c706:	cmp    ah,BYTE PTR [rcx+0x73]
   10003c709:	ins    DWORD PTR es:[rdi],dx
   10003c70a:	cs jbe 0x10003c73e
   10003c70d:	and    ah,BYTE PTR [rax]
   10003c70f:	ins    DWORD PTR es:[rdi],dx
   10003c710:	(bad)  
   10003c711:	outs   dx,BYTE PTR ds:[rsi]
   10003c712:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   10003c719:	jb     0x10003c78e
   10003c71b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   10003c722:	xor    BYTE PTR [rdx],ah
   10003c724:	ds or  eax,0x3c20200a
   10003c72a:	je     0x10003c79e
   10003c72c:	jne    0x10003c7a1
   10003c72e:	je     0x10003c779
   10003c730:	outs   dx,BYTE PTR ds:[rsi]
   10003c731:	outs   dx,WORD PTR ds:[rsi]
   10003c733:	and    BYTE PTR [rax+0x6d],bh
   10003c736:	ins    BYTE PTR es:[rdi],dx
   10003c737:	outs   dx,BYTE PTR ds:[rsi]
   10003c738:	jae    0x10003c777
   10003c73a:	and    dh,BYTE PTR [rbp+0x72]
   10003c73d:	outs   dx,BYTE PTR ds:[rsi]
   10003c73e:	cmp    dh,BYTE PTR [rbx+0x63]
   10003c741:	push   0x73616d65
   10003c746:	sub    eax,0x7263696d
   10003c74b:	outs   dx,DWORD PTR ds:[rsi]
   10003c74c:	jae    0x10003c7bd
   10003c74e:	data16 je 0x10003c77e
   10003c751:	movsxd ebp,DWORD PTR [rdi+0x6d]
   10003c754:	cmp    ah,BYTE PTR [rcx+0x73]
   10003c757:	ins    DWORD PTR es:[rdi],dx
   10003c758:	cs jbe 0x10003c78e
   10003c75b:	and    bh,BYTE PTR [rsi]
   10003c75d:	or     eax,0x2020200a
   10003c762:	and    BYTE PTR [rbx+rsi*2],bh
   10003c765:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   10003c769:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   10003c771:	and    BYTE PTR [rax],ah
   10003c773:	and    BYTE PTR [rax],ah
   10003c775:	cmp    al,0x72
   10003c777:	gs jno 0x10003c7ef
   10003c77a:	gs jae 0x10003c7f1
   10003c77d:	gs fs push rax
   10003c780:	jb     0x10003c7eb
   10003c782:	jbe    0x10003c7ed
   10003c784:	ins    BYTE PTR es:[rdi],dx
   10003c785:	gs addr32 gs jae 0x10003c7c8
   10003c78a:	or     eax,0x2020200a
   10003c78f:	and    BYTE PTR [rax],ah
   10003c791:	and    BYTE PTR [rax],ah
   10003c793:	and    BYTE PTR [rdx+rsi*2],bh
   10003c796:	gs jno 0x10003c80e
   10003c799:	gs jae 0x10003c810
   10003c79c:	gs fs rex.RB js 0x10003c806
   10003c7a1:	movsxd esi,DWORD PTR [rbp+0x74]
   10003c7a4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   10003c7ab:	ins    BYTE PTR es:[rdi],dx
   10003c7ac:	and    BYTE PTR [rbp+riz*2+0x76],ch
   10003c7b0:	gs ins BYTE PTR es:[rdi],dx
   10003c7b2:	cmp    eax,0x49736122
   10003c7b7:	outs   dx,BYTE PTR ds:[rsi]
   10003c7b8:	jbe    0x10003c829
   10003c7ba:	imul   esp,DWORD PTR [rbp+0x72],0x22
   10003c7be:	and    BYTE PTR [rbp+0x69],dh
   10003c7c1:	movsxd esp,DWORD PTR [r11+0x65]
   10003c7c5:	jae    0x10003c83a
   10003c7c7:	cmp    eax,0x6c616622
   10003c7cc:	jae    0x10003c833
   10003c7ce:	and    bh,BYTE PTR [rsi]
   10003c7d0:	cmp    al,0x2f
   10003c7d2:	jb     0x10003c839
   10003c7d4:	jno    0x10003c84b
   10003c7d6:	gs jae 0x10003c84d
   10003c7d9:	gs fs rex.RB js 0x10003c843
   10003c7de:	movsxd esi,DWORD PTR [rbp+0x74]
   10003c7e1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   10003c7e8:	ins    BYTE PTR es:[rdi],dx
   10003c7e9:	ds or  eax,0x2020200a
   10003c7ef:	and    BYTE PTR [rax],ah
   10003c7f1:	and    BYTE PTR [rdi+rbp*1],bh
   10003c7f4:	jb     0x10003c85b
   10003c7f6:	jno    0x10003c86d
   10003c7f8:	gs jae 0x10003c86f
   10003c7fb:	gs fs push rax
   10003c7fe:	jb     0x10003c869
   10003c800:	jbe    0x10003c86b
   10003c802:	ins    BYTE PTR es:[rdi],dx
   10003c803:	gs addr32 gs jae 0x10003c846
   10003c808:	or     eax,0x2020200a
   10003c80d:	and    BYTE PTR [rdi+rbp*1],bh
   10003c810:	jae    0x10003c877
   10003c812:	movsxd esi,DWORD PTR [rbp+0x72]
   10003c815:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   10003c81d:	cmp    al,0x2f
   10003c81f:	je     0x10003c893
   10003c821:	jne    0x10003c896
   10003c823:	je     0x10003c86e
   10003c825:	outs   dx,BYTE PTR ds:[rsi]
   10003c826:	outs   dx,WORD PTR ds:[rsi]
   10003c828:	ds or  eax,0x612f3c0a
   10003c82e:	jae    0x10003c8a3
   10003c830:	gs ins DWORD PTR es:[rdi],dx
   10003c832:	(bad)  
   10003c833:	ins    BYTE PTR es:[rdi],dx
   10003c834:	jns    0x10003c874
   10003c836:	push   rax
   10003c837:	rex.B

Disassembly of section .reloc:

000000010003d000 <.reloc>:
   10003d000:	add    BYTE PTR [rax],ah
   10003d002:	add    BYTE PTR [rax],al
   10003d004:	push   rsp
   10003d005:	add    BYTE PTR [rax],al
   10003d007:	add    BYTE PTR [rax-0x5d],dh
   10003d00a:	js     0x10003cfaf
   10003d00c:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   10003d013:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   10003d01c:	shl    BYTE PTR [rbx-0x5c2f5c38],0xd8
   10003d023:	movabs ds:0xa3f8a3f0a3e8a3e0,eax
   10003d02c:	add    BYTE PTR [rax+rcx*1+0x18a410a4],ah
   10003d033:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003d034:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   10003d03b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003d03c:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003d03e:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003d040:	push   rax
   10003d041:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003d042:	pop    rax
   10003d043:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003d044:	(bad)  
   10003d045:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003d046:	push   0x78a470a4
   10003d04b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003d04c:	and    BYTE PTR [rax+rcx*4+0xa490a4],0x0
   10003d054:	add    BYTE PTR [rax],dh
   10003d056:	add    BYTE PTR [rax],al
   10003d058:	pop    rsp
   10003d059:	add    BYTE PTR [rax],al
   10003d05b:	add    BYTE PTR [rax],dh
   10003d05d:	movabs ds:0xa250a248a240a238,al
   10003d066:	pop    rax
   10003d067:	movabs ds:0xa278a270a268a260,al
   10003d070:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   10003d077:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   10003d080:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   10003d087:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   10003d090:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   10003d096:	sbb    BYTE PTR [rbx-0x5a1f5ce0],ah
   10003d09c:	call   0xf8a9c146
   10003d0a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   10003d0a2:	add    BYTE PTR [rsi-0x59ef59f8],ah
   10003d0a8:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   10003d0ae:	xor    BYTE PTR [rsi+0x18000],ah
   10003d0b4:	sub    al,0x0
   10003d0b6:	add    BYTE PTR [rax],al
   10003d0b8:	jo     0x10003d069
   10003d0ba:	js     0x10003d06b
   10003d0bc:	sub    BYTE PTR [rdi-0x506f5078],0x98
   10003d0c3:	scas   eax,DWORD PTR es:[rdi]
   10003d0c4:	movabs al,ds:0xc0afb8afb0afa8af
   10003d0cd:	scas   eax,DWORD PTR es:[rdi]
   10003d0ce:	enter  0xd0af,0xaf
   10003d0d2:	fsubr  DWORD PTR [rdi-0x50175020]
   10003d0d8:	lock scas eax,DWORD PTR es:[rdi]
   10003d0da:	clc    
   10003d0db:	scas   eax,DWORD PTR es:[rdi]
   10003d0dc:	add    BYTE PTR [rax+0x800001],dl
   10003d0e2:	add    BYTE PTR [rax],al
   10003d0e4:	add    BYTE PTR [rax-0x5fef5ff8],ah
   10003d0ea:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   10003d0f0:	xor    BYTE PTR [rax-0x5fbf5fc8],ah
   10003d0f6:	rex.W movabs al,ds:0xa068a060a058a050
   10003d100:	jo     0x10003d0a2
   10003d102:	js     0x10003d0a4
   10003d104:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   10003d10b:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   10003d114:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   10003d11b:	movabs al,ds:0xa0f8a0f0a0e8a0e0
   10003d124:	add    BYTE PTR [rcx-0x5eef5ef8],ah
   10003d12a:	sbb    BYTE PTR [rcx-0x5ed75ee0],ah
   10003d130:	xor    BYTE PTR [rcx-0x5ebf5ec8],ah
   10003d136:	movabs rax,ds:0xa168a160a158a150
   10003d140:	jo     0x10003d0e3
   10003d142:	js     0x10003d0e5
   10003d144:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   10003d14b:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   10003d154:	shl    BYTE PTR [rcx-0x5ca75e28],1
   10003d15a:	(bad)  
   10003d15b:	movabs ds:0x200001d000,eax
   10003d164:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   10003d16a:	movabs ds:0xa368a360a358a350,rax
   10003d174:	jo     0x10003d119
   10003d176:	js     0x10003d11b
   10003d178:	and    BYTE PTR [rbx-0x20000000],0x1
   10003d17f:	add    BYTE PTR [rax+rax*1],ah
   10003d182:	add    BYTE PTR [rax],al
   10003d184:	mov    eax,0xd8a1c8a1
   10003d189:	movabs eax,ds:0xa218a208a1f8a1e8
   10003d192:	sub    BYTE PTR [rdx-0x5db75dc8],ah
   10003d198:	pop    rax
   10003d199:	movabs ds:0xa288a278a268,al
   10003d1a2:	add    al,BYTE PTR [rax]
   10003d1a4:	sub    BYTE PTR [rax],al
   10003d1a6:	add    BYTE PTR [rax],al
   10003d1a8:	(bad)  
   10003d1a9:	lods   eax,DWORD PTR ds:[rsi]
   10003d1aa:	push   0x78ad70ad
   10003d1af:	lods   eax,DWORD PTR ds:[rsi]
   10003d1b0:	sub    BYTE PTR [rbp-0x526f5278],0x98
   10003d1b7:	lods   eax,DWORD PTR ds:[rsi]
   10003d1b8:	movabs al,ds:0xc0adb8adb0ada8ad
   10003d1c1:	lods   eax,DWORD PTR ds:[rsi]
   10003d1c2:	enter  0xd0ad,0xad
   10003d1c6:	add    BYTE PTR [rax],al
   10003d1c8:	add    BYTE PTR [rax+0xf80002],dl
   10003d1ce:	add    BYTE PTR [rax],al
   10003d1d0:	add    BYTE PTR [rax-0x5fef5ff8],ah
   10003d1d6:	and    BYTE PTR [rax-0x5fc75fd8],ah
   10003d1dc:	rex.W movabs al,ds:0xa068a060a058a050
   10003d1e6:	jo     0x10003d188
   10003d1e8:	js     0x10003d18a
   10003d1ea:	and    BYTE PTR [rax-0x5f675f78],0xe0
   10003d1f1:	movabs al,ds:0xa248a238a228a200
   10003d1fa:	pop    rax
   10003d1fb:	movabs ds:0xa2d0a2c8a2c0a288,al
   10003d204:	fsub   DWORD PTR [rdx-0x5d175d20]
   10003d20a:	lock movabs ds:0xa310a308a300a2f8,al
   10003d214:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   10003d21a:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   10003d220:	push   rax
   10003d221:	movabs ds:0xa3a0a388a378a360,eax
   10003d22a:	mov    al,0xa3
   10003d22c:	enter  0xd8a3,0xa3
   10003d230:	lock movabs ds:0xa440a428a418a400,eax
   10003d23a:	push   rax
   10003d23b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003d23c:	push   0xffffffff90a478a4
   10003d241:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003d242:	movabs al,ds:0xf0a4e0a4c8a4b8a4
   10003d24b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10003d24c:	or     BYTE PTR [rbp-0x5acf5ae8],ah
   10003d252:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   10003d254:	pop    rax
   10003d255:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   10003d256:	push   0xffffffff90a580a5
   10003d25b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   10003d25c:	test   al,0xa5
   10003d25e:	mov    eax,0xe0a5d0a5
   10003d263:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   10003d264:	clc    
   10003d265:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   10003d266:	or     BYTE PTR [rsi-0x59cf59e0],ah
   10003d26c:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   10003d26e:	pop    rax
   10003d26f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   10003d270:	jo     0x10003d218
   10003d272:	cwde   
   10003d273:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   10003d274:	test   al,0xa6
   10003d276:	shl    BYTE PTR [rsi-0x59075918],0x10
   10003d27d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   10003d27e:	cmp    BYTE PTR [rdi-0x589f58b8],ah
   10003d284:	jo     0x10003d22d
   10003d286:	mov    BYTE PTR [rdi-0x584f5868],ah
   10003d28c:	shl    BYTE PTR [rdi-0x58175828],0x0
   10003d293:	test   al,0x10
   10003d295:	test   al,0x28
   10003d297:	test   al,0x38
   10003d299:	test   al,0x50
   10003d29b:	test   al,0x60
   10003d29d:	test   al,0x88
   10003d29f:	test   al,0xa0
   10003d2a1:	test   al,0xb8
   10003d2a3:	test   al,0xd0
   10003d2a5:	test   al,0xf0
   10003d2a7:	test   al,0x8
   10003d2a9:	test   eax,0xa930a920
   10003d2ae:	cmp    BYTE PTR [rcx-0x569756b0],ch
   10003d2b4:	jo     0x10003d25f
   10003d2b6:	call   0x160adc364
   10003d2bb:	stos   BYTE PTR es:[rdi],al
   10003d2bc:	.byte 0xc0
   10003d2bd:	scas   al,BYTE PTR es:[rdi]
	...
