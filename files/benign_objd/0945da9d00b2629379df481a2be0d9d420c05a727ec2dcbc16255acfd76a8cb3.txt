
0945da9d00b2629379df481a2be0d9d420c05a727ec2dcbc16255acfd76a8cb3.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x48d5]        # 4058f0 <_head_lib64_libkernel32_a-0x3710>
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x48d6]        # 405900 <_head_lib64_libkernel32_a-0x3700>
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x48d9]        # 405910 <_head_lib64_libkernel32_a-0x36f0>
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x489c]        # 4058e0 <_head_lib64_libkernel32_a-0x3720>
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x472f]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     4010d0 <_head_lib64_libkernel32_a-0x7f30>
  401058:	mov    rax,QWORD PTR [rip+0x4871]        # 4058d0 <_head_lib64_libkernel32_a-0x3730>
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 408008 <_head_lib64_libkernel32_a-0xff8>
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     4010c2 <_head_lib64_libkernel32_a-0x7f3e>
  40106b:	mov    ecx,0x2
  401070:	call   402ef8 <_head_lib64_libkernel32_a-0x6108>
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   401ec0 <_head_lib64_libkernel32_a-0x7140>
  401081:	mov    rdx,QWORD PTR [rip+0x47a8]        # 405830 <_head_lib64_libkernel32_a-0x37d0>
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x478e]        # 405820 <_head_lib64_libkernel32_a-0x37e0>
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x47f4]        # 405890 <_head_lib64_libkernel32_a-0x3770>
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x472b]        # 4057d0 <_head_lib64_libkernel32_a-0x3830>
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   401aa0 <_head_lib64_libkernel32_a-0x7560>
  4010af:	mov    rax,QWORD PTR [rip+0x467a]        # 405730 <_head_lib64_libkernel32_a-0x38d0>
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     401120 <_head_lib64_libkernel32_a-0x7ee0>
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   402ef8 <_head_lib64_libkernel32_a-0x6108>
  4010cc:	jmp    401075 <_head_lib64_libkernel32_a-0x7f8b>
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    401058 <_head_lib64_libkernel32_a-0x7fa8>
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     401133 <_head_lib64_libkernel32_a-0x7ecd>
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    401058 <_head_lib64_libkernel32_a-0x7fa8>
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    401058 <_head_lib64_libkernel32_a-0x7fa8>
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    401058 <_head_lib64_libkernel32_a-0x7fa8>
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xc79]        # 401da0 <_head_lib64_libkernel32_a-0x7260>
  401127:	call   401d90 <_head_lib64_libkernel32_a-0x7270>
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    401058 <_head_lib64_libkernel32_a-0x7fa8>
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    401058 <_head_lib64_libkernel32_a-0x7fa8>
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4755]        # 4058c0 <_head_lib64_libkernel32_a-0x3740>
  40116b:	lea    r8,[rip+0x6ea6]        # 408018 <_head_lib64_libkernel32_a-0xfe8>
  401172:	lea    rdx,[rip+0x6ea7]        # 408020 <_head_lib64_libkernel32_a-0xfe0>
  401179:	lea    rcx,[rip+0x6ea8]        # 408028 <_head_lib64_libkernel32_a-0xfd8>
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 408000 <_head_lib64_libkernel32_a-0x1000>
  401188:	lea    rax,[rip+0x6e71]        # 408000 <_head_lib64_libkernel32_a-0x1000>
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x46e5]        # 405880 <_head_lib64_libkernel32_a-0x3780>
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   402f10 <_head_lib64_libkernel32_a-0x60f0>
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 408010 <_head_lib64_libkernel32_a-0xff0>
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x470a]        # 4058d0 <_head_lib64_libkernel32_a-0x3730>
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    401490 <_head_lib64_libkernel32_a-0x7b70>
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x460b]        # 405800 <_head_lib64_libkernel32_a-0x3800>
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x8192]        # 409394 <__imp_Sleep>
  401202:	jmp    401215 <_head_lib64_libkernel32_a-0x7deb>
  401204:	cmp    rsi,rax
  401207:	je     401430 <_head_lib64_libkernel32_a-0x7bd0>
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    401204 <_head_lib64_libkernel32_a-0x7dfc>
  401222:	mov    rsi,QWORD PTR [rip+0x45e7]        # 405810 <_head_lib64_libkernel32_a-0x37f0>
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     401447 <_head_lib64_libkernel32_a-0x7bb9>
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     4014a0 <_head_lib64_libkernel32_a-0x7b60>
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 408004 <_head_lib64_libkernel32_a-0xffc>
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     40145c <_head_lib64_libkernel32_a-0x7ba4>
  401255:	test   edi,edi
  401257:	je     401480 <_head_lib64_libkernel32_a-0x7b80>
  40125d:	mov    rax,QWORD PTR [rip+0x450c]        # 405770 <_head_lib64_libkernel32_a-0x3890>
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     401278 <_head_lib64_libkernel32_a-0x7d88>
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   4020b0 <_head_lib64_libkernel32_a-0x6f50>
  40127d:	lea    rcx,[rip+0x13cc]        # 402650 <_head_lib64_libkernel32_a-0x69b0>
  401284:	call   QWORD PTR [rip+0x8102]        # 40938c <__imp_SetUnhandledExceptionFilter>
  40128a:	mov    rdx,QWORD PTR [rip+0x455f]        # 4057f0 <_head_lib64_libkernel32_a-0x3810>
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   402560 <_head_lib64_libkernel32_a-0x6aa0>
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 401000 <_head_lib64_libkernel32_a-0x8000>
  4012a0:	call   402f40 <_head_lib64_libkernel32_a-0x60c0>
  4012a5:	call   401ea0 <_head_lib64_libkernel32_a-0x7160>
  4012aa:	mov    rax,QWORD PTR [rip+0x44cf]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  4012b1:	mov    QWORD PTR [rip+0x77d0],rax        # 408a88 <_head_lib64_libkernel32_a-0x578>
  4012b8:	mov    rax,QWORD PTR [rip+0x4501]        # 4057c0 <_head_lib64_libkernel32_a-0x3840>
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     401317 <_head_lib64_libkernel32_a-0x7ce9>
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    4012e2 <_head_lib64_libkernel32_a-0x7d1e>
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     401310 <_head_lib64_libkernel32_a-0x7cf0>
  4012d4:	and    ecx,0x1
  4012d7:	je     401304 <_head_lib64_libkernel32_a-0x7cfc>
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    4012d0 <_head_lib64_libkernel32_a-0x7d30>
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    4012de <_head_lib64_libkernel32_a-0x7d22>
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     401310 <_head_lib64_libkernel32_a-0x7cf0>
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    401300 <_head_lib64_libkernel32_a-0x7d00>
  401310:	mov    QWORD PTR [rip+0x7769],rax        # 408a80 <_head_lib64_libkernel32_a-0x580>
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     401336 <_head_lib64_libkernel32_a-0x7cca>
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    401421 <_head_lib64_libkernel32_a-0x7bdf>
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 404000 <_head_lib64_libkernel32_a-0x5000>
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 408028 <_head_lib64_libkernel32_a-0xfd8>
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   402e88 <_head_lib64_libkernel32_a-0x6178>
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 408020 <_head_lib64_libkernel32_a-0xfe0>
  40135e:	jle    4014be <_head_lib64_libkernel32_a-0x7b42>
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   402e70 <_head_lib64_libkernel32_a-0x6190>
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   402e88 <_head_lib64_libkernel32_a-0x6178>
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   402e80 <_head_lib64_libkernel32_a-0x6180>
  40139d:	cmp    r12d,ebx
  4013a0:	jg     401370 <_head_lib64_libkernel32_a-0x7c90>
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 408020 <_head_lib64_libkernel32_a-0xfe0>
  4013b6:	call   401a70 <_head_lib64_libkernel32_a-0x7590>
  4013bb:	mov    rax,QWORD PTR [rip+0x43ee]        # 4057b0 <_head_lib64_libkernel32_a-0x3850>
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 408018 <_head_lib64_libkernel32_a-0xfe8>
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 408028 <_head_lib64_libkernel32_a-0xfd8>
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 408018 <_head_lib64_libkernel32_a-0xfe8>
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 408020 <_head_lib64_libkernel32_a-0xfe0>
  4013e3:	call   403040 <_head_lib64_libkernel32_a-0x5fc0>
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 408008 <_head_lib64_libkernel32_a-0xff8>
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 40800c <_head_lib64_libkernel32_a-0xff4>
  4013f4:	test   ecx,ecx
  4013f6:	je     4014c6 <_head_lib64_libkernel32_a-0x7b3a>
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 408004 <_head_lib64_libkernel32_a-0xffc>
  401402:	test   edx,edx
  401404:	jne    401411 <_head_lib64_libkernel32_a-0x7bef>
  401406:	call   402ee0 <_head_lib64_libkernel32_a-0x6120>
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 40800c <_head_lib64_libkernel32_a-0xff4>
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    401330 <_head_lib64_libkernel32_a-0x7cd0>
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x43d9]        # 405810 <_head_lib64_libkernel32_a-0x37f0>
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    401236 <_head_lib64_libkernel32_a-0x7dca>
  401447:	mov    ecx,0x1f
  40144c:	call   402ee8 <_head_lib64_libkernel32_a-0x6118>
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    401255 <_head_lib64_libkernel32_a-0x7dab>
  40145c:	mov    rdx,QWORD PTR [rip+0x43ed]        # 405850 <_head_lib64_libkernel32_a-0x37b0>
  401463:	mov    rcx,QWORD PTR [rip+0x43d6]        # 405840 <_head_lib64_libkernel32_a-0x37c0>
  40146a:	call   402ed8 <_head_lib64_libkernel32_a-0x6128>
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    40125d <_head_lib64_libkernel32_a-0x7da3>
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    40125d <_head_lib64_libkernel32_a-0x7da3>
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7ea3]        # 40933c <__imp_GetStartupInfoA>
  401499:	jmp    4011e5 <_head_lib64_libkernel32_a-0x7e1b>
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x43c9]        # 405870 <_head_lib64_libkernel32_a-0x3790>
  4014a7:	mov    rcx,QWORD PTR [rip+0x43b2]        # 405860 <_head_lib64_libkernel32_a-0x37a0>
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   402ed8 <_head_lib64_libkernel32_a-0x6128>
  4014b9:	jmp    40124a <_head_lib64_libkernel32_a-0x7db6>
  4014be:	xor    r13d,r13d
  4014c1:	jmp    4013a6 <_head_lib64_libkernel32_a-0x7c5a>
  4014c6:	mov    ecx,eax
  4014c8:	call   402ea8 <_head_lib64_libkernel32_a-0x6158>
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x43f5]        # 4058d0 <_head_lib64_libkernel32_a-0x3730>
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   401ab0 <_head_lib64_libkernel32_a-0x7550>
  4014e6:	call   4011b0 <_head_lib64_libkernel32_a-0x7e50>
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x43c5]        # 4058d0 <_head_lib64_libkernel32_a-0x3730>
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   401ab0 <_head_lib64_libkernel32_a-0x7550>
  401516:	call   4011b0 <_head_lib64_libkernel32_a-0x7e50>
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	mov    rbp,rsp
  401534:	pop    rbp
  401535:	ret    
  401536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401540:	push   rbp
  401541:	mov    rbp,rsp
  401544:	sub    rsp,0x20
  401548:	cmp    QWORD PTR [rip+0x2b40],0x0        # 404090 <_head_lib64_libkernel32_a-0x4f70>
  401550:	je     401582 <_head_lib64_libkernel32_a-0x7a7e>
  401552:	lea    rcx,[rip+0x3aa7]        # 405000 <_head_lib64_libkernel32_a-0x4000>
  401559:	call   QWORD PTR [rip+0x7dcd]        # 40932c <__imp_GetModuleHandleA>
  40155f:	test   rax,rax
  401562:	je     401593 <_head_lib64_libkernel32_a-0x7a6d>
  401564:	lea    rdx,[rip+0x3aa3]        # 40500e <_head_lib64_libkernel32_a-0x3ff2>
  40156b:	mov    rcx,rax
  40156e:	call   QWORD PTR [rip+0x7dc0]        # 409334 <__imp_GetProcAddress>
  401574:	test   rax,rax
  401577:	je     401582 <_head_lib64_libkernel32_a-0x7a7e>
  401579:	lea    rcx,[rip+0x2b10]        # 404090 <_head_lib64_libkernel32_a-0x4f70>
  401580:	call   rax
  401582:	lea    rcx,[rip+0x17]        # 4015a0 <_head_lib64_libkernel32_a-0x7a60>
  401589:	add    rsp,0x20
  40158d:	pop    rbp
  40158e:	jmp    4019b0 <_head_lib64_libkernel32_a-0x7650>
  401593:	lea    rax,[rip+0xffffffffffffff96]        # 401530 <_head_lib64_libkernel32_a-0x7ad0>
  40159a:	jmp    401579 <_head_lib64_libkernel32_a-0x7a87>
  40159c:	nop    DWORD PTR [rax+0x0]
  4015a0:	push   rbp
  4015a1:	mov    rbp,rsp
  4015a4:	pop    rbp
  4015a5:	ret    
  4015a6:	nop
  4015a7:	nop
  4015a8:	nop
  4015a9:	nop
  4015aa:	nop
  4015ab:	nop
  4015ac:	nop
  4015ad:	nop
  4015ae:	nop
  4015af:	nop
  4015b0:	push   rdi
  4015b1:	push   rsi
  4015b2:	push   rbx
  4015b3:	sub    rsp,0x40
  4015b7:	lea    rcx,[rip+0x6a82]        # 408040 <_head_lib64_libkernel32_a-0xfc0>
  4015be:	mov    rax,QWORD PTR [rsp+0x80]
  4015c6:	mov    DWORD PTR [r9],0x1
  4015cd:	mov    rdi,r8
  4015d0:	mov    rsi,r9
  4015d3:	mov    ebx,edx
  4015d5:	mov    QWORD PTR [rax],rcx
  4015d8:	mov    QWORD PTR [rsp+0x38],0x0
  4015e1:	call   4018d0 <_head_lib64_libkernel32_a-0x7730>
  4015e6:	lea    rcx,[rip+0x3a53]        # 405040 <_head_lib64_libkernel32_a-0x3fc0>
  4015ed:	mov    rdx,rax
  4015f0:	call   4018f0 <_head_lib64_libkernel32_a-0x7710>
  4015f5:	lea    rdx,[rip+0x3a58]        # 405054 <_head_lib64_libkernel32_a-0x3fac>
  4015fc:	lea    rcx,[rip+0x3a3d]        # 405040 <_head_lib64_libkernel32_a-0x3fc0>
  401603:	call   4018f8 <_head_lib64_libkernel32_a-0x7708>
  401608:	lea    rcx,[rip+0x3a31]        # 405040 <_head_lib64_libkernel32_a-0x3fc0>
  40160f:	call   4018e0 <_head_lib64_libkernel32_a-0x7720>
  401614:	cmp    ebx,0x1
  401617:	mov    edx,0x1
  40161c:	je     401640 <_head_lib64_libkernel32_a-0x79c0>
  40161e:	mov    DWORD PTR [rip+0x6a18],0x15        # 408040 <_head_lib64_libkernel32_a-0xfc0>
  401628:	mov    DWORD PTR [rip+0x6a1a],edx        # 408048 <_head_lib64_libkernel32_a-0xfb8>
  40162e:	add    rsp,0x40
  401632:	pop    rbx
  401633:	pop    rsi
  401634:	pop    rdi
  401635:	ret    
  401636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401640:	mov    rdi,QWORD PTR [rdi+0x8]
  401644:	test   rdi,rdi
  401647:	je     40161e <_head_lib64_libkernel32_a-0x79e2>
  401649:	cmp    BYTE PTR [rdi],0x0
  40164c:	mov    edx,ebx
  40164e:	je     40161e <_head_lib64_libkernel32_a-0x79e2>
  401650:	call   QWORD PTR [rip+0x7e7e]        # 4094d4 <__imp_GetDesktopWindow>
  401656:	xor    r9d,r9d
  401659:	mov    DWORD PTR [rsp+0x28],0x5
  401661:	mov    r8,rdi
  401664:	lea    rdx,[rip+0x39ef]        # 40505a <_head_lib64_libkernel32_a-0x3fa6>
  40166b:	mov    rcx,rax
  40166e:	mov    QWORD PTR [rsp+0x20],0x0
  401677:	call   QWORD PTR [rip+0x7e47]        # 4094c4 <__imp_ShellExecuteA>
  40167d:	mov    edx,0x3
  401682:	cmp    eax,0x20
  401685:	jg     40161e <_head_lib64_libkernel32_a-0x79e2>
  401687:	ja     4017e9 <_head_lib64_libkernel32_a-0x7817>
  40168d:	lea    rdx,[rip+0x3c70]        # 405304 <_head_lib64_libkernel32_a-0x3cfc>
  401694:	mov    eax,eax
  401696:	movsxd rax,DWORD PTR [rdx+rax*4]
  40169a:	add    rdx,rax
  40169d:	jmp    rdx
  40169f:	lea    rcx,[rip+0x3b5a]        # 405200 <_head_lib64_libkernel32_a-0x3e00>
  4016a6:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  4016ab:	mov    rbx,rax
  4016ae:	xchg   ax,ax
  4016b0:	lea    rcx,[rip+0x3c32]        # 4052e9 <_head_lib64_libkernel32_a-0x3d17>
  4016b7:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  4016bc:	xor    edx,edx
  4016be:	mov    QWORD PTR [rsp+0x28],rbx
  4016c3:	xor    r8d,r8d
  4016c6:	lea    rcx,[rsp+0x38]
  4016cb:	mov    r9,rax
  4016ce:	mov    QWORD PTR [rsp+0x20],rdi
  4016d3:	call   4018d8 <_head_lib64_libkernel32_a-0x7728>
  4016d8:	mov    rax,QWORD PTR [rsp+0x38]
  4016dd:	mov    DWORD PTR [rsi],0x2
  4016e3:	xor    edx,edx
  4016e5:	mov    DWORD PTR [rip+0x6979],0x4        # 408068 <_head_lib64_libkernel32_a-0xf98>
  4016ef:	mov    rax,QWORD PTR [rax+0x8]
  4016f3:	mov    QWORD PTR [rip+0x6976],rax        # 408070 <_head_lib64_libkernel32_a-0xf90>
  4016fa:	jmp    40161e <_head_lib64_libkernel32_a-0x79e2>
  4016ff:	lea    rcx,[rip+0x3b22]        # 405228 <_head_lib64_libkernel32_a-0x3dd8>
  401706:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  40170b:	mov    rbx,rax
  40170e:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  401710:	lea    rcx,[rip+0x3a95]        # 4051ac <_head_lib64_libkernel32_a-0x3e54>
  401717:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  40171c:	mov    rbx,rax
  40171f:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  401721:	lea    rcx,[rip+0x3a99]        # 4051c1 <_head_lib64_libkernel32_a-0x3e3f>
  401728:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  40172d:	mov    rbx,rax
  401730:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  401735:	lea    rcx,[rip+0x3aa4]        # 4051e0 <_head_lib64_libkernel32_a-0x3e20>
  40173c:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  401741:	mov    rbx,rax
  401744:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  401749:	lea    rcx,[rip+0x3a28]        # 405178 <_head_lib64_libkernel32_a-0x3e88>
  401750:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  401755:	mov    rbx,rax
  401758:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  40175d:	lea    rcx,[rip+0x3b43]        # 4052a7 <_head_lib64_libkernel32_a-0x3d59>
  401764:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  401769:	mov    rbx,rax
  40176c:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  401771:	lea    rcx,[rip+0x3970]        # 4050e8 <_head_lib64_libkernel32_a-0x3f18>
  401778:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  40177d:	mov    rbx,rax
  401780:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  401785:	lea    rcx,[rip+0x3ae4]        # 405270 <_head_lib64_libkernel32_a-0x3d90>
  40178c:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  401791:	mov    rbx,rax
  401794:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  401799:	lea    rcx,[rip+0x3998]        # 405138 <_head_lib64_libkernel32_a-0x3ec8>
  4017a0:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  4017a5:	mov    rbx,rax
  4017a8:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  4017ad:	lea    rcx,[rip+0x390c]        # 4050c0 <_head_lib64_libkernel32_a-0x3f40>
  4017b4:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  4017b9:	mov    rbx,rax
  4017bc:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  4017c1:	lea    rcx,[rip+0x38d0]        # 405098 <_head_lib64_libkernel32_a-0x3f68>
  4017c8:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  4017cd:	mov    rbx,rax
  4017d0:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  4017d5:	lea    rcx,[rip+0x3884]        # 405060 <_head_lib64_libkernel32_a-0x3fa0>
  4017dc:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  4017e1:	mov    rbx,rax
  4017e4:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  4017e9:	lea    rcx,[rip+0x3ad8]        # 4052c8 <_head_lib64_libkernel32_a-0x3d38>
  4017f0:	call   4018e8 <_head_lib64_libkernel32_a-0x7718>
  4017f5:	mov    rbx,rax
  4017f8:	jmp    4016b0 <_head_lib64_libkernel32_a-0x7950>
  4017fd:	nop    DWORD PTR [rax]
  401800:	sub    rsp,0x78
  401804:	lea    rax,[rip+0x3c45]        # 405450 <_head_lib64_libkernel32_a-0x3bb0>
  40180b:	lea    r9,[rip+0x3b76]        # 405388 <_head_lib64_libkernel32_a-0x3c78>
  401812:	lea    r8,[rip+0x3b97]        # 4053b0 <_head_lib64_libkernel32_a-0x3c50>
  401819:	lea    rdx,[rip+0x3bc8]        # 4053e8 <_head_lib64_libkernel32_a-0x3c18>
  401820:	lea    rcx,[rip+0x3bef]        # 405416 <_head_lib64_libkernel32_a-0x3bea>
  401827:	mov    QWORD PTR [rsp+0x58],rax
  40182c:	lea    rax,[rip+0x3bf7]        # 40542a <_head_lib64_libkernel32_a-0x3bd6>
  401833:	mov    QWORD PTR [rsp+0x28],rax
  401838:	lea    rax,[rip+0x3bf6]        # 405435 <_head_lib64_libkernel32_a-0x3bcb>
  40183f:	mov    QWORD PTR [rsp+0x60],0x0
  401848:	mov    DWORD PTR [rsp+0x50],0x0
  401850:	mov    DWORD PTR [rsp+0x48],0x1
  401858:	mov    DWORD PTR [rsp+0x40],0x1
  401860:	mov    QWORD PTR [rsp+0x38],0x0
  401869:	mov    QWORD PTR [rsp+0x30],0x0
  401872:	mov    QWORD PTR [rsp+0x20],rax
  401877:	call   4018c8 <_head_lib64_libkernel32_a-0x7738>
  40187c:	nop
  40187d:	add    rsp,0x78
  401881:	ret    
  401882:	nop    DWORD PTR [rax+0x0]
  401886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401890:	mov    rax,QWORD PTR [rip+0x3f09]        # 4057a0 <_head_lib64_libkernel32_a-0x3860>
  401897:	lea    rcx,[rip+0x3be2]        # 405480 <_head_lib64_libkernel32_a-0x3b80>
  40189e:	mov    rdx,QWORD PTR [rax]
  4018a1:	mov    rax,QWORD PTR [rip+0x3ee8]        # 405790 <_head_lib64_libkernel32_a-0x3870>
  4018a8:	mov    r8,QWORD PTR [rdx]
  4018ab:	mov    rax,QWORD PTR [rax]
  4018ae:	mov    edx,DWORD PTR [rax]
  4018b0:	jmp    4018c0 <_head_lib64_libkernel32_a-0x7740>
  4018b5:	nop
  4018b6:	nop
  4018b7:	nop
  4018b8:	nop
  4018b9:	nop
  4018ba:	nop
  4018bb:	nop
  4018bc:	nop
  4018bd:	nop
  4018be:	nop
  4018bf:	nop
  4018c0:	jmp    QWORD PTR [rip+0x7c26]        # 4094ec <__imp_gimp_main>
  4018c6:	nop
  4018c7:	nop
  4018c8:	jmp    QWORD PTR [rip+0x7c16]        # 4094e4 <__imp_gimp_install_procedure>
  4018ce:	nop
  4018cf:	nop
  4018d0:	jmp    QWORD PTR [rip+0x7c26]        # 4094fc <__imp_gimp_locale_directory>
  4018d6:	nop
  4018d7:	nop
  4018d8:	jmp    QWORD PTR [rip+0x7c2e]        # 40950c <__imp_g_set_error>
  4018de:	nop
  4018df:	nop
  4018e0:	jmp    QWORD PTR [rip+0x7c4e]        # 409534 <__imp_libintl_textdomain>
  4018e6:	nop
  4018e7:	nop
  4018e8:	jmp    QWORD PTR [rip+0x7c3e]        # 40952c <__imp_libintl_gettext>
  4018ee:	nop
  4018ef:	nop
  4018f0:	jmp    QWORD PTR [rip+0x7c2e]        # 409524 <__imp_libintl_bindtextdomain>
  4018f6:	nop
  4018f7:	nop
  4018f8:	jmp    QWORD PTR [rip+0x7c1e]        # 40951c <__imp_libintl_bind_textdomain_codeset>
  4018fe:	nop
  4018ff:	nop
  401900:	push   rbx
  401901:	sub    rsp,0x30
  401905:	mov    rbx,rcx
  401908:	mov    rcx,QWORD PTR [rip+0x7181]        # 408a90 <_head_lib64_libkernel32_a-0x570>
  40190f:	call   401eb0 <_head_lib64_libkernel32_a-0x7150>
  401914:	cmp    rax,0xffffffffffffffff
  401918:	mov    QWORD PTR [rsp+0x20],rax
  40191d:	je     401995 <_head_lib64_libkernel32_a-0x766b>
  40191f:	mov    ecx,0x8
  401924:	call   402ed0 <_head_lib64_libkernel32_a-0x6130>
  401929:	mov    rcx,QWORD PTR [rip+0x7160]        # 408a90 <_head_lib64_libkernel32_a-0x570>
  401930:	call   401eb0 <_head_lib64_libkernel32_a-0x7150>
  401935:	mov    rcx,QWORD PTR [rip+0x715c]        # 408a98 <_head_lib64_libkernel32_a-0x568>
  40193c:	mov    QWORD PTR [rsp+0x20],rax
  401941:	call   401eb0 <_head_lib64_libkernel32_a-0x7150>
  401946:	lea    rdx,[rsp+0x20]
  40194b:	lea    r8,[rsp+0x28]
  401950:	mov    rcx,rbx
  401953:	mov    QWORD PTR [rsp+0x28],rax
  401958:	call   402f18 <_head_lib64_libkernel32_a-0x60e8>
  40195d:	mov    rcx,QWORD PTR [rsp+0x20]
  401962:	mov    rbx,rax
  401965:	call   401ec0 <_head_lib64_libkernel32_a-0x7140>
  40196a:	mov    rcx,QWORD PTR [rsp+0x28]
  40196f:	mov    QWORD PTR [rip+0x711a],rax        # 408a90 <_head_lib64_libkernel32_a-0x570>
  401976:	call   401ec0 <_head_lib64_libkernel32_a-0x7140>
  40197b:	mov    ecx,0x8
  401980:	mov    QWORD PTR [rip+0x7111],rax        # 408a98 <_head_lib64_libkernel32_a-0x568>
  401987:	call   402ec0 <_head_lib64_libkernel32_a-0x6140>
  40198c:	mov    rax,rbx
  40198f:	add    rsp,0x30
  401993:	pop    rbx
  401994:	ret    
  401995:	mov    rax,QWORD PTR [rip+0x3e44]        # 4057e0 <_head_lib64_libkernel32_a-0x3820>
  40199c:	mov    rcx,rbx
  40199f:	call   QWORD PTR [rax]
  4019a1:	add    rsp,0x30
  4019a5:	pop    rbx
  4019a6:	ret    
  4019a7:	nop    WORD PTR [rax+rax*1+0x0]
  4019b0:	sub    rsp,0x28
  4019b4:	call   401900 <_head_lib64_libkernel32_a-0x7700>
  4019b9:	test   rax,rax
  4019bc:	sete   al
  4019bf:	movzx  eax,al
  4019c2:	neg    eax
  4019c4:	add    rsp,0x28
  4019c8:	ret    
  4019c9:	nop
  4019ca:	nop
  4019cb:	nop
  4019cc:	nop
  4019cd:	nop
  4019ce:	nop
  4019cf:	nop
  4019d0:	sub    rsp,0x28
  4019d4:	mov    rax,QWORD PTR [rip+0x2635]        # 404010 <_head_lib64_libkernel32_a-0x4ff0>
  4019db:	mov    rax,QWORD PTR [rax]
  4019de:	test   rax,rax
  4019e1:	je     401a00 <_head_lib64_libkernel32_a-0x7600>
  4019e3:	call   rax
  4019e5:	mov    rax,QWORD PTR [rip+0x2624]        # 404010 <_head_lib64_libkernel32_a-0x4ff0>
  4019ec:	lea    rdx,[rax+0x8]
  4019f0:	mov    rax,QWORD PTR [rax+0x8]
  4019f4:	mov    QWORD PTR [rip+0x2615],rdx        # 404010 <_head_lib64_libkernel32_a-0x4ff0>
  4019fb:	test   rax,rax
  4019fe:	jne    4019e3 <_head_lib64_libkernel32_a-0x761d>
  401a00:	add    rsp,0x28
  401a04:	ret    
  401a05:	nop
  401a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a10:	push   rsi
  401a11:	push   rbx
  401a12:	sub    rsp,0x28
  401a16:	mov    rsi,QWORD PTR [rip+0x3d23]        # 405740 <_head_lib64_libkernel32_a-0x38c0>
  401a1d:	mov    rax,QWORD PTR [rsi]
  401a20:	cmp    eax,0xffffffff
  401a23:	mov    ebx,eax
  401a25:	je     401a50 <_head_lib64_libkernel32_a-0x75b0>
  401a27:	test   ebx,ebx
  401a29:	je     401a3a <_head_lib64_libkernel32_a-0x75c6>
  401a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  401a30:	mov    eax,ebx
  401a32:	call   QWORD PTR [rsi+rax*8]
  401a35:	sub    ebx,0x1
  401a38:	jne    401a30 <_head_lib64_libkernel32_a-0x75d0>
  401a3a:	lea    rcx,[rip+0xffffffffffffff8f]        # 4019d0 <_head_lib64_libkernel32_a-0x7630>
  401a41:	add    rsp,0x28
  401a45:	pop    rbx
  401a46:	pop    rsi
  401a47:	jmp    4019b0 <_head_lib64_libkernel32_a-0x7650>
  401a4c:	nop    DWORD PTR [rax+0x0]
  401a50:	xor    ebx,ebx
  401a52:	jmp    401a56 <_head_lib64_libkernel32_a-0x75aa>
  401a54:	mov    ebx,eax
  401a56:	lea    edx,[rbx+0x1]
  401a59:	cmp    QWORD PTR [rsi+rdx*8],0x0
  401a5e:	mov    rax,rdx
  401a61:	jne    401a54 <_head_lib64_libkernel32_a-0x75ac>
  401a63:	jmp    401a27 <_head_lib64_libkernel32_a-0x75d9>
  401a65:	nop
  401a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a70:	mov    eax,DWORD PTR [rip+0x662a]        # 4080a0 <_head_lib64_libkernel32_a-0xf60>
  401a76:	test   eax,eax
  401a78:	je     401a80 <_head_lib64_libkernel32_a-0x7580>
  401a7a:	repz ret 
  401a7c:	nop    DWORD PTR [rax+0x0]
  401a80:	mov    DWORD PTR [rip+0x6616],0x1        # 4080a0 <_head_lib64_libkernel32_a-0xf60>
  401a8a:	jmp    401a10 <_head_lib64_libkernel32_a-0x75f0>
  401a8c:	nop
  401a8d:	nop
  401a8e:	nop
  401a8f:	nop
  401a90:	mov    rax,QWORD PTR [rip+0x796d]        # 409404 <__imp___lconv_init>
  401a97:	rex.W jmp rax
  401a9a:	nop
  401a9b:	nop
  401a9c:	nop
  401a9d:	nop
  401a9e:	nop
  401a9f:	nop
  401aa0:	xor    eax,eax
  401aa2:	ret    
  401aa3:	nop
  401aa4:	nop
  401aa5:	nop
  401aa6:	nop
  401aa7:	nop
  401aa8:	nop
  401aa9:	nop
  401aaa:	nop
  401aab:	nop
  401aac:	nop
  401aad:	nop
  401aae:	nop
  401aaf:	nop
  401ab0:	push   r12
  401ab2:	push   rbp
  401ab3:	push   rdi
  401ab4:	push   rsi
  401ab5:	push   rbx
  401ab6:	sub    rsp,0x40
  401aba:	mov    rbx,QWORD PTR [rip+0x25af]        # 404070 <_head_lib64_libkernel32_a-0x4f90>
  401ac1:	movabs rax,0x2b992ddfa232
  401acb:	mov    QWORD PTR [rsp+0x20],0x0
  401ad4:	cmp    rbx,rax
  401ad7:	je     401af0 <_head_lib64_libkernel32_a-0x7510>
  401ad9:	not    rbx
  401adc:	mov    QWORD PTR [rip+0x259d],rbx        # 404080 <_head_lib64_libkernel32_a-0x4f80>
  401ae3:	add    rsp,0x40
  401ae7:	pop    rbx
  401ae8:	pop    rsi
  401ae9:	pop    rdi
  401aea:	pop    rbp
  401aeb:	pop    r12
  401aed:	ret    
  401aee:	xchg   ax,ax
  401af0:	lea    rcx,[rsp+0x20]
  401af5:	call   QWORD PTR [rip+0x7849]        # 409344 <__imp_GetSystemTimeAsFileTime>
  401afb:	mov    r12,QWORD PTR [rsp+0x20]
  401b00:	call   QWORD PTR [rip+0x780e]        # 409314 <__imp_GetCurrentProcessId>
  401b06:	mov    ebp,eax
  401b08:	call   QWORD PTR [rip+0x780e]        # 40931c <__imp_GetCurrentThreadId>
  401b0e:	mov    edi,eax
  401b10:	call   QWORD PTR [rip+0x7836]        # 40934c <__imp_GetTickCount>
  401b16:	lea    rcx,[rsp+0x30]
  401b1b:	mov    esi,eax
  401b1d:	call   QWORD PTR [rip+0x7841]        # 409364 <__imp_QueryPerformanceCounter>
  401b23:	xor    r12,QWORD PTR [rsp+0x30]
  401b28:	mov    edx,edi
  401b2a:	movabs rax,0xffffffffffff
  401b34:	xor    rbp,r12
  401b37:	mov    rdi,rbp
  401b3a:	xor    rdi,rdx
  401b3d:	mov    edx,esi
  401b3f:	xor    rdi,rdx
  401b42:	mov    rsi,rdi
  401b45:	and    rsi,rax
  401b48:	cmp    rsi,rbx
  401b4b:	je     401b70 <_head_lib64_libkernel32_a-0x7490>
  401b4d:	mov    rax,rsi
  401b50:	not    rax
  401b53:	mov    QWORD PTR [rip+0x2516],rsi        # 404070 <_head_lib64_libkernel32_a-0x4f90>
  401b5a:	mov    QWORD PTR [rip+0x251f],rax        # 404080 <_head_lib64_libkernel32_a-0x4f80>
  401b61:	add    rsp,0x40
  401b65:	pop    rbx
  401b66:	pop    rsi
  401b67:	pop    rdi
  401b68:	pop    rbp
  401b69:	pop    r12
  401b6b:	ret    
  401b6c:	nop    DWORD PTR [rax+0x0]
  401b70:	movabs rax,0xffffd466d2205dcc
  401b7a:	movabs rsi,0x2b992ddfa233
  401b84:	jmp    401b53 <_head_lib64_libkernel32_a-0x74ad>
  401b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b90:	push   rbp
  401b91:	push   rsi
  401b92:	push   rbx
  401b93:	mov    rbp,rsp
  401b96:	sub    rsp,0x70
  401b9a:	mov    rsi,rcx
  401b9d:	lea    rcx,[rip+0x655c]        # 408100 <_head_lib64_libkernel32_a-0xf00>
  401ba4:	call   QWORD PTR [rip+0x77ca]        # 409374 <__imp_RtlCaptureContext>
  401baa:	mov    rbx,QWORD PTR [rip+0x6647]        # 4081f8 <_head_lib64_libkernel32_a-0xe08>
  401bb1:	xor    r8d,r8d
  401bb4:	lea    rdx,[rbp-0x28]
  401bb8:	mov    rcx,rbx
  401bbb:	call   QWORD PTR [rip+0x77bb]        # 40937c <__imp_RtlLookupFunctionEntry>
  401bc1:	test   rax,rax
  401bc4:	mov    r9,rax
  401bc7:	je     401c70 <_head_lib64_libkernel32_a-0x7390>
  401bcd:	lea    rax,[rbp-0x20]
  401bd1:	mov    QWORD PTR [rsp+0x38],0x0
  401bda:	mov    r8,rbx
  401bdd:	mov    rdx,QWORD PTR [rbp-0x28]
  401be1:	xor    ecx,ecx
  401be3:	mov    QWORD PTR [rsp+0x30],rax
  401be8:	lea    rax,[rbp-0x18]
  401bec:	mov    QWORD PTR [rsp+0x28],rax
  401bf1:	lea    rax,[rip+0x6508]        # 408100 <_head_lib64_libkernel32_a-0xf00>
  401bf8:	mov    QWORD PTR [rsp+0x20],rax
  401bfd:	call   QWORD PTR [rip+0x7781]        # 409384 <__imp_RtlVirtualUnwind>
  401c03:	mov    rax,QWORD PTR [rip+0x65ee]        # 4081f8 <_head_lib64_libkernel32_a-0xe08>
  401c0a:	xor    ecx,ecx
  401c0c:	mov    QWORD PTR [rip+0x656d],rsi        # 408180 <_head_lib64_libkernel32_a-0xe80>
  401c13:	mov    DWORD PTR [rip+0x69e3],0xc0000409        # 408600 <_head_lib64_libkernel32_a-0xa00>
  401c1d:	mov    DWORD PTR [rip+0x69dd],0x1        # 408604 <_head_lib64_libkernel32_a-0x9fc>
  401c27:	mov    QWORD PTR [rip+0x69e2],rax        # 408610 <_head_lib64_libkernel32_a-0x9f0>
  401c2e:	mov    rax,QWORD PTR [rip+0x243b]        # 404070 <_head_lib64_libkernel32_a-0x4f90>
  401c35:	mov    QWORD PTR [rbp-0x10],rax
  401c39:	mov    rax,QWORD PTR [rip+0x2440]        # 404080 <_head_lib64_libkernel32_a-0x4f80>
  401c40:	mov    QWORD PTR [rbp-0x8],rax
  401c44:	call   QWORD PTR [rip+0x7742]        # 40938c <__imp_SetUnhandledExceptionFilter>
  401c4a:	lea    rcx,[rip+0x384f]        # 4054a0 <_head_lib64_libkernel32_a-0x3b60>
  401c51:	call   QWORD PTR [rip+0x7755]        # 4093ac <__imp_UnhandledExceptionFilter>
  401c57:	call   QWORD PTR [rip+0x76af]        # 40930c <__imp_GetCurrentProcess>
  401c5d:	mov    edx,0xc0000409
  401c62:	mov    rcx,rax
  401c65:	call   QWORD PTR [rip+0x7731]        # 40939c <__imp_TerminateProcess>
  401c6b:	call   402eb8 <_head_lib64_libkernel32_a-0x6148>
  401c70:	mov    rax,QWORD PTR [rbp+0x18]
  401c74:	mov    QWORD PTR [rip+0x657d],rax        # 4081f8 <_head_lib64_libkernel32_a-0xe08>
  401c7b:	lea    rax,[rbp+0x8]
  401c7f:	mov    QWORD PTR [rip+0x6512],rax        # 408198 <_head_lib64_libkernel32_a-0xe68>
  401c86:	jmp    401c03 <_head_lib64_libkernel32_a-0x73fd>
  401c8b:	nop
  401c8c:	nop
  401c8d:	nop
  401c8e:	nop
  401c8f:	nop
  401c90:	sub    rsp,0x28
  401c94:	test   edx,edx
  401c96:	je     401cb0 <_head_lib64_libkernel32_a-0x7350>
  401c98:	cmp    edx,0x3
  401c9b:	je     401cb0 <_head_lib64_libkernel32_a-0x7350>
  401c9d:	mov    eax,0x1
  401ca2:	add    rsp,0x28
  401ca6:	ret    
  401ca7:	nop    WORD PTR [rax+rax*1+0x0]
  401cb0:	call   4029a0 <_head_lib64_libkernel32_a-0x6660>
  401cb5:	mov    eax,0x1
  401cba:	add    rsp,0x28
  401cbe:	ret    
  401cbf:	nop
  401cc0:	push   rsi
  401cc1:	push   rbx
  401cc2:	sub    rsp,0x28
  401cc6:	mov    rax,QWORD PTR [rip+0x3a53]        # 405720 <_head_lib64_libkernel32_a-0x38e0>
  401ccd:	cmp    DWORD PTR [rax],0x2
  401cd0:	je     401cd8 <_head_lib64_libkernel32_a-0x7328>
  401cd2:	mov    DWORD PTR [rax],0x2
  401cd8:	cmp    edx,0x2
  401cdb:	je     401cf0 <_head_lib64_libkernel32_a-0x7310>
  401cdd:	cmp    edx,0x1
  401ce0:	je     401d22 <_head_lib64_libkernel32_a-0x72de>
  401ce2:	mov    eax,0x1
  401ce7:	add    rsp,0x28
  401ceb:	pop    rbx
  401cec:	pop    rsi
  401ced:	ret    
  401cee:	xchg   ax,ax
  401cf0:	lea    rbx,[rip+0x8369]        # 40a060 <libintl_8_dll_iname+0x554>
  401cf7:	lea    rsi,[rip+0x8362]        # 40a060 <libintl_8_dll_iname+0x554>
  401cfe:	cmp    rbx,rsi
  401d01:	je     401ce2 <_head_lib64_libkernel32_a-0x731e>
  401d03:	mov    rax,QWORD PTR [rbx]
  401d06:	test   rax,rax
  401d09:	je     401d0d <_head_lib64_libkernel32_a-0x72f3>
  401d0b:	call   rax
  401d0d:	add    rbx,0x8
  401d11:	cmp    rbx,rsi
  401d14:	jne    401d03 <_head_lib64_libkernel32_a-0x72fd>
  401d16:	mov    eax,0x1
  401d1b:	add    rsp,0x28
  401d1f:	pop    rbx
  401d20:	pop    rsi
  401d21:	ret    
  401d22:	call   4029a0 <_head_lib64_libkernel32_a-0x6660>
  401d27:	jmp    401ce2 <_head_lib64_libkernel32_a-0x731e>
  401d29:	nop    DWORD PTR [rax+0x0]
  401d30:	xor    eax,eax
  401d32:	ret    
  401d33:	nop
  401d34:	nop
  401d35:	nop
  401d36:	nop
  401d37:	nop
  401d38:	nop
  401d39:	nop
  401d3a:	nop
  401d3b:	nop
  401d3c:	nop
  401d3d:	nop
  401d3e:	nop
  401d3f:	nop
  401d40:	sub    rsp,0x58
  401d44:	mov    rax,QWORD PTR [rip+0x6995]        # 4086e0 <_head_lib64_libkernel32_a-0x920>
  401d4b:	test   rax,rax
  401d4e:	je     401d7c <_head_lib64_libkernel32_a-0x7284>
  401d50:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401d59:	mov    DWORD PTR [rsp+0x20],ecx
  401d5d:	lea    rcx,[rsp+0x20]
  401d62:	mov    QWORD PTR [rsp+0x28],rdx
  401d67:	movsd  QWORD PTR [rsp+0x30],xmm2
  401d6d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401d73:	movsd  QWORD PTR [rsp+0x40],xmm0
  401d79:	call   rax
  401d7b:	nop
  401d7c:	add    rsp,0x58
  401d80:	ret    
  401d81:	nop    DWORD PTR [rax+rax*1+0x0]
  401d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d90:	mov    QWORD PTR [rip+0x6949],rcx        # 4086e0 <_head_lib64_libkernel32_a-0x920>
  401d97:	jmp    402ef0 <_head_lib64_libkernel32_a-0x6110>
  401d9c:	nop    DWORD PTR [rax+0x0]
  401da0:	push   rsi
  401da1:	push   rbx
  401da2:	sub    rsp,0x78
  401da6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401dab:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401db0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401db6:	cmp    DWORD PTR [rcx],0x6
  401db9:	ja     401e90 <_head_lib64_libkernel32_a-0x7170>
  401dbf:	mov    edx,DWORD PTR [rcx]
  401dc1:	lea    rax,[rip+0x381c]        # 4055e4 <_head_lib64_libkernel32_a-0x3a1c>
  401dc8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401dcc:	add    rax,rdx
  401dcf:	jmp    rax
  401dd1:	lea    rbx,[rip+0x36e8]        # 4054c0 <_head_lib64_libkernel32_a-0x3b40>
  401dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  401de0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401de6:	mov    rsi,QWORD PTR [rcx+0x8]
  401dea:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401def:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401df4:	call   402f08 <_head_lib64_libkernel32_a-0x60f8>
  401df9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401e00:	lea    rcx,[rax+0x60]
  401e04:	lea    rdx,[rip+0x37ad]        # 4055b8 <_head_lib64_libkernel32_a-0x3a48>
  401e0b:	movsd  QWORD PTR [rsp+0x28],xmm7
  401e11:	mov    r9,rsi
  401e14:	mov    r8,rbx
  401e17:	movsd  QWORD PTR [rsp+0x20],xmm6
  401e1d:	call   402ea0 <_head_lib64_libkernel32_a-0x6160>
  401e22:	nop
  401e23:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401e28:	xor    eax,eax
  401e2a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401e2f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401e35:	add    rsp,0x78
  401e39:	pop    rbx
  401e3a:	pop    rsi
  401e3b:	ret    
  401e3c:	nop    DWORD PTR [rax+0x0]
  401e40:	lea    rbx,[rip+0x3698]        # 4054df <_head_lib64_libkernel32_a-0x3b21>
  401e47:	jmp    401de0 <_head_lib64_libkernel32_a-0x7220>
  401e49:	nop    DWORD PTR [rax+0x0]
  401e50:	lea    rbx,[rip+0x36a9]        # 405500 <_head_lib64_libkernel32_a-0x3b00>
  401e57:	jmp    401de0 <_head_lib64_libkernel32_a-0x7220>
  401e59:	nop    DWORD PTR [rax+0x0]
  401e60:	lea    rbx,[rip+0x3709]        # 405570 <_head_lib64_libkernel32_a-0x3a90>
  401e67:	jmp    401de0 <_head_lib64_libkernel32_a-0x7220>
  401e6c:	nop    DWORD PTR [rax+0x0]
  401e70:	lea    rbx,[rip+0x36d1]        # 405548 <_head_lib64_libkernel32_a-0x3ab8>
  401e77:	jmp    401de0 <_head_lib64_libkernel32_a-0x7220>
  401e7c:	nop    DWORD PTR [rax+0x0]
  401e80:	lea    rbx,[rip+0x3699]        # 405520 <_head_lib64_libkernel32_a-0x3ae0>
  401e87:	jmp    401de0 <_head_lib64_libkernel32_a-0x7220>
  401e8c:	nop    DWORD PTR [rax+0x0]
  401e90:	lea    rbx,[rip+0x370f]        # 4055a6 <_head_lib64_libkernel32_a-0x3a5a>
  401e97:	jmp    401de0 <_head_lib64_libkernel32_a-0x7220>
  401e9c:	nop
  401e9d:	nop
  401e9e:	nop
  401e9f:	nop
  401ea0:	fninit 
  401ea2:	ret    
  401ea3:	nop
  401ea4:	nop
  401ea5:	nop
  401ea6:	nop
  401ea7:	nop
  401ea8:	nop
  401ea9:	nop
  401eaa:	nop
  401eab:	nop
  401eac:	nop
  401ead:	nop
  401eae:	nop
  401eaf:	nop
  401eb0:	mov    rax,rcx
  401eb3:	ret    
  401eb4:	xchg   ax,ax
  401eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ec0:	mov    rax,rcx
  401ec3:	ret    
  401ec4:	nop
  401ec5:	nop
  401ec6:	nop
  401ec7:	nop
  401ec8:	nop
  401ec9:	nop
  401eca:	nop
  401ecb:	nop
  401ecc:	nop
  401ecd:	nop
  401ece:	nop
  401ecf:	nop
  401ed0:	push   rsi
  401ed1:	push   rbx
  401ed2:	sub    rsp,0x38
  401ed6:	lea    rax,[rsp+0x58]
  401edb:	mov    rbx,rcx
  401ede:	mov    QWORD PTR [rsp+0x58],rdx
  401ee3:	mov    QWORD PTR [rsp+0x60],r8
  401ee8:	mov    QWORD PTR [rsp+0x68],r9
  401eed:	mov    QWORD PTR [rsp+0x28],rax
  401ef2:	call   402f08 <_head_lib64_libkernel32_a-0x60f8>
  401ef7:	lea    rcx,[rip+0x3702]        # 405600 <_head_lib64_libkernel32_a-0x3a00>
  401efe:	lea    r9,[rax+0x60]
  401f02:	mov    r8d,0x1b
  401f08:	mov    edx,0x1
  401f0d:	call   402e90 <_head_lib64_libkernel32_a-0x6170>
  401f12:	mov    rsi,QWORD PTR [rsp+0x28]
  401f17:	call   402f08 <_head_lib64_libkernel32_a-0x60f8>
  401f1c:	lea    rcx,[rax+0x60]
  401f20:	mov    rdx,rbx
  401f23:	mov    r8,rsi
  401f26:	call   402e60 <_head_lib64_libkernel32_a-0x61a0>
  401f2b:	call   402eb8 <_head_lib64_libkernel32_a-0x6148>
  401f30:	nop
  401f31:	nop    DWORD PTR [rax+rax*1+0x0]
  401f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f40:	push   r13
  401f42:	push   r12
  401f44:	push   rbp
  401f45:	push   rdi
  401f46:	push   rsi
  401f47:	push   rbx
  401f48:	sub    rsp,0x58
  401f4c:	movsxd rbp,DWORD PTR [rip+0x67b1]        # 408704 <_head_lib64_libkernel32_a-0x8fc>
  401f53:	mov    rbx,rcx
  401f56:	mov    rsi,rdx
  401f59:	mov    rdi,r8
  401f5c:	test   ebp,ebp
  401f5e:	jle    40205a <_head_lib64_libkernel32_a-0x6fa6>
  401f64:	mov    rax,QWORD PTR [rip+0x679d]        # 408708 <_head_lib64_libkernel32_a-0x8f8>
  401f6b:	xor    r9d,r9d
  401f6e:	add    rax,0x8
  401f72:	mov    r10,QWORD PTR [rax]
  401f75:	cmp    rbx,r10
  401f78:	jb     401f8e <_head_lib64_libkernel32_a-0x7072>
  401f7a:	mov    rdx,QWORD PTR [rax+0x8]
  401f7e:	mov    r11d,DWORD PTR [rdx+0x8]
  401f82:	add    r10,r11
  401f85:	cmp    rbx,r10
  401f88:	jb     402040 <_head_lib64_libkernel32_a-0x6fc0>
  401f8e:	add    r9d,0x1
  401f92:	add    rax,0x18
  401f96:	cmp    r9d,ebp
  401f99:	jne    401f72 <_head_lib64_libkernel32_a-0x708e>
  401f9b:	mov    rcx,rbx
  401f9e:	call   402bb0 <_head_lib64_libkernel32_a-0x6450>
  401fa3:	test   rax,rax
  401fa6:	mov    r12,rax
  401fa9:	je     402092 <_head_lib64_libkernel32_a-0x6f6e>
  401faf:	lea    rbp,[rbp+rbp*2+0x0]
  401fb4:	shl    rbp,0x3
  401fb8:	mov    r13,rbp
  401fbb:	add    r13,QWORD PTR [rip+0x6746]        # 408708 <_head_lib64_libkernel32_a-0x8f8>
  401fc2:	mov    QWORD PTR [r13+0x10],rax
  401fc6:	mov    DWORD PTR [r13+0x0],0x0
  401fce:	call   402cd0 <_head_lib64_libkernel32_a-0x6330>
  401fd3:	mov    edx,DWORD PTR [r12+0xc]
  401fd8:	mov    r8d,0x30
  401fde:	add    rax,rdx
  401fe1:	lea    rdx,[rsp+0x20]
  401fe6:	mov    QWORD PTR [r13+0x8],rax
  401fea:	mov    rax,QWORD PTR [rip+0x6717]        # 408708 <_head_lib64_libkernel32_a-0x8f8>
  401ff1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401ff6:	call   QWORD PTR [rip+0x73c0]        # 4093bc <__imp_VirtualQuery>
  401ffc:	test   rax,rax
  401fff:	je     402075 <_head_lib64_libkernel32_a-0x6f8b>
  402001:	mov    eax,DWORD PTR [rsp+0x44]
  402005:	lea    edx,[rax-0x4]
  402008:	and    edx,0xfffffffb
  40200b:	je     402039 <_head_lib64_libkernel32_a-0x6fc7>
  40200d:	sub    eax,0x40
  402010:	and    eax,0xffffffbf
  402013:	je     402039 <_head_lib64_libkernel32_a-0x6fc7>
  402015:	mov    r9,rbp
  402018:	add    r9,QWORD PTR [rip+0x66e9]        # 408708 <_head_lib64_libkernel32_a-0x8f8>
  40201f:	mov    r8d,0x40
  402025:	mov    rdx,QWORD PTR [rsp+0x38]
  40202a:	mov    rcx,QWORD PTR [rsp+0x20]
  40202f:	call   QWORD PTR [rip+0x737f]        # 4093b4 <__imp_VirtualProtect>
  402035:	test   eax,eax
  402037:	je     402061 <_head_lib64_libkernel32_a-0x6f9f>
  402039:	add    DWORD PTR [rip+0x66c4],0x1        # 408704 <_head_lib64_libkernel32_a-0x8fc>
  402040:	mov    r8,rdi
  402043:	mov    rdx,rsi
  402046:	mov    rcx,rbx
  402049:	add    rsp,0x58
  40204d:	pop    rbx
  40204e:	pop    rsi
  40204f:	pop    rdi
  402050:	pop    rbp
  402051:	pop    r12
  402053:	pop    r13
  402055:	jmp    402e80 <_head_lib64_libkernel32_a-0x6180>
  40205a:	xor    ebp,ebp
  40205c:	jmp    401f9b <_head_lib64_libkernel32_a-0x7065>
  402061:	call   QWORD PTR [rip+0x72bd]        # 409324 <__imp_GetLastError>
  402067:	lea    rcx,[rip+0x360a]        # 405678 <_head_lib64_libkernel32_a-0x3988>
  40206e:	mov    edx,eax
  402070:	call   401ed0 <_head_lib64_libkernel32_a-0x7130>
  402075:	mov    rax,QWORD PTR [rip+0x668c]        # 408708 <_head_lib64_libkernel32_a-0x8f8>
  40207c:	mov    edx,DWORD PTR [r12+0x8]
  402081:	lea    rcx,[rip+0x35b8]        # 405640 <_head_lib64_libkernel32_a-0x39c0>
  402088:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40208d:	call   401ed0 <_head_lib64_libkernel32_a-0x7130>
  402092:	lea    rcx,[rip+0x3587]        # 405620 <_head_lib64_libkernel32_a-0x39e0>
  402099:	mov    rdx,rbx
  40209c:	call   401ed0 <_head_lib64_libkernel32_a-0x7130>
  4020a1:	nop
  4020a2:	nop    DWORD PTR [rax+0x0]
  4020a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020b0:	push   rbp
  4020b1:	push   r14
  4020b3:	push   r13
  4020b5:	push   r12
  4020b7:	push   rdi
  4020b8:	push   rsi
  4020b9:	push   rbx
  4020ba:	mov    rbp,rsp
  4020bd:	sub    rsp,0x60
  4020c1:	mov    ebx,DWORD PTR [rip+0x6639]        # 408700 <_head_lib64_libkernel32_a-0x900>
  4020c7:	test   ebx,ebx
  4020c9:	je     4020e0 <_head_lib64_libkernel32_a-0x6f20>
  4020cb:	mov    rsp,rbp
  4020ce:	pop    rbx
  4020cf:	pop    rsi
  4020d0:	pop    rdi
  4020d1:	pop    r12
  4020d3:	pop    r13
  4020d5:	pop    r14
  4020d7:	pop    rbp
  4020d8:	ret    
  4020d9:	nop    DWORD PTR [rax+0x0]
  4020e0:	mov    DWORD PTR [rip+0x6616],0x1        # 408700 <_head_lib64_libkernel32_a-0x900>
  4020ea:	call   402c00 <_head_lib64_libkernel32_a-0x6400>
  4020ef:	cdqe   
  4020f1:	lea    rax,[rax+rax*2]
  4020f5:	lea    rax,[rax*8+0x1e]
  4020fd:	and    rax,0xfffffffffffffff0
  402101:	call   402e20 <_head_lib64_libkernel32_a-0x61e0>
  402106:	mov    rsi,QWORD PTR [rip+0x3643]        # 405750 <_head_lib64_libkernel32_a-0x38b0>
  40210d:	mov    rbx,QWORD PTR [rip+0x364c]        # 405760 <_head_lib64_libkernel32_a-0x38a0>
  402114:	sub    rsp,rax
  402117:	mov    DWORD PTR [rip+0x65e3],0x0        # 408704 <_head_lib64_libkernel32_a-0x8fc>
  402121:	lea    rax,[rsp+0x20]
  402126:	mov    QWORD PTR [rip+0x65db],rax        # 408708 <_head_lib64_libkernel32_a-0x8f8>
  40212d:	mov    rax,rsi
  402130:	sub    rax,rbx
  402133:	cmp    rax,0x7
  402137:	jle    4020cb <_head_lib64_libkernel32_a-0x6f35>
  402139:	cmp    rax,0xb
  40213d:	jle    402165 <_head_lib64_libkernel32_a-0x6e9b>
  40213f:	mov    r11d,DWORD PTR [rbx]
  402142:	test   r11d,r11d
  402145:	jne    402290 <_head_lib64_libkernel32_a-0x6d70>
  40214b:	mov    r10d,DWORD PTR [rbx+0x4]
  40214f:	test   r10d,r10d
  402152:	jne    402290 <_head_lib64_libkernel32_a-0x6d70>
  402158:	mov    r9d,DWORD PTR [rbx+0x8]
  40215c:	test   r9d,r9d
  40215f:	jne    40217c <_head_lib64_libkernel32_a-0x6e84>
  402161:	add    rbx,0xc
  402165:	mov    r8d,DWORD PTR [rbx]
  402168:	test   r8d,r8d
  40216b:	jne    402290 <_head_lib64_libkernel32_a-0x6d70>
  402171:	mov    ecx,DWORD PTR [rbx+0x4]
  402174:	test   ecx,ecx
  402176:	jne    402290 <_head_lib64_libkernel32_a-0x6d70>
  40217c:	mov    edx,DWORD PTR [rbx+0x8]
  40217f:	cmp    edx,0x1
  402182:	jne    40239c <_head_lib64_libkernel32_a-0x6c64>
  402188:	add    rbx,0xc
  40218c:	cmp    rbx,rsi
  40218f:	jae    4020cb <_head_lib64_libkernel32_a-0x6f35>
  402195:	mov    r12,QWORD PTR [rip+0x35e4]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  40219c:	lea    r13,[rbp-0x30]
  4021a0:	movabs r14,0xffffffff00000000
  4021aa:	mov    ecx,DWORD PTR [rbx+0x4]
  4021ad:	mov    eax,DWORD PTR [rbx]
  4021af:	movzx  edx,BYTE PTR [rbx+0x8]
  4021b3:	add    rax,r12
  4021b6:	add    rcx,r12
  4021b9:	cmp    edx,0x10
  4021bc:	mov    r8,QWORD PTR [rax]
  4021bf:	je     402306 <_head_lib64_libkernel32_a-0x6cfa>
  4021c5:	jbe    4022cd <_head_lib64_libkernel32_a-0x6d33>
  4021cb:	cmp    edx,0x20
  4021ce:	je     40234f <_head_lib64_libkernel32_a-0x6cb1>
  4021d4:	cmp    edx,0x40
  4021d7:	jne    40233b <_head_lib64_libkernel32_a-0x6cc5>
  4021dd:	sub    r8,rax
  4021e0:	mov    rdx,r13
  4021e3:	mov    rdi,r13
  4021e6:	mov    rax,r8
  4021e9:	add    rax,QWORD PTR [rcx]
  4021ec:	mov    r8d,0x8
  4021f2:	mov    QWORD PTR [rbp-0x30],rax
  4021f6:	call   401f40 <_head_lib64_libkernel32_a-0x70c0>
  4021fb:	add    rbx,0xc
  4021ff:	cmp    rbx,rsi
  402202:	jb     4021aa <_head_lib64_libkernel32_a-0x6e56>
  402204:	mov    eax,DWORD PTR [rip+0x64fa]        # 408704 <_head_lib64_libkernel32_a-0x8fc>
  40220a:	xor    ebx,ebx
  40220c:	xor    esi,esi
  40220e:	test   eax,eax
  402210:	jle    4020cb <_head_lib64_libkernel32_a-0x6f35>
  402216:	mov    r14,QWORD PTR [rip+0x719f]        # 4093bc <__imp_VirtualQuery>
  40221d:	lea    r13,[rbp-0x34]
  402221:	mov    r12,QWORD PTR [rip+0x718c]        # 4093b4 <__imp_VirtualProtect>
  402228:	jmp    402243 <_head_lib64_libkernel32_a-0x6dbd>
  40222a:	nop    WORD PTR [rax+rax*1+0x0]
  402230:	add    esi,0x1
  402233:	add    rbx,0x18
  402237:	cmp    esi,DWORD PTR [rip+0x64c7]        # 408704 <_head_lib64_libkernel32_a-0x8fc>
  40223d:	jge    4020cb <_head_lib64_libkernel32_a-0x6f35>
  402243:	mov    rax,rbx
  402246:	add    rax,QWORD PTR [rip+0x64bb]        # 408708 <_head_lib64_libkernel32_a-0x8f8>
  40224d:	mov    edx,DWORD PTR [rax]
  40224f:	test   edx,edx
  402251:	je     402230 <_head_lib64_libkernel32_a-0x6dd0>
  402253:	mov    rcx,QWORD PTR [rax+0x8]
  402257:	mov    r8d,0x30
  40225d:	mov    rdx,rdi
  402260:	call   r14
  402263:	test   rax,rax
  402266:	je     40237e <_head_lib64_libkernel32_a-0x6c82>
  40226c:	mov    rax,QWORD PTR [rip+0x6495]        # 408708 <_head_lib64_libkernel32_a-0x8f8>
  402273:	mov    r9,r13
  402276:	mov    rdx,QWORD PTR [rbp-0x18]
  40227a:	mov    rcx,QWORD PTR [rbp-0x30]
  40227e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402282:	call   r12
  402285:	jmp    402230 <_head_lib64_libkernel32_a-0x6dd0>
  402287:	nop    WORD PTR [rax+rax*1+0x0]
  402290:	cmp    rbx,rsi
  402293:	jae    4020cb <_head_lib64_libkernel32_a-0x6f35>
  402299:	mov    r12,QWORD PTR [rip+0x34e0]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  4022a0:	lea    rdi,[rbp-0x30]
  4022a4:	mov    ecx,DWORD PTR [rbx+0x4]
  4022a7:	mov    eax,DWORD PTR [rbx]
  4022a9:	mov    r8d,0x4
  4022af:	mov    rdx,rdi
  4022b2:	add    rbx,0x8
  4022b6:	add    rcx,r12
  4022b9:	add    eax,DWORD PTR [rcx]
  4022bb:	mov    DWORD PTR [rbp-0x30],eax
  4022be:	call   401f40 <_head_lib64_libkernel32_a-0x70c0>
  4022c3:	cmp    rbx,rsi
  4022c6:	jb     4022a4 <_head_lib64_libkernel32_a-0x6d5c>
  4022c8:	jmp    402204 <_head_lib64_libkernel32_a-0x6dfc>
  4022cd:	cmp    edx,0x8
  4022d0:	jne    40233b <_head_lib64_libkernel32_a-0x6cc5>
  4022d2:	movzx  edx,BYTE PTR [rcx]
  4022d5:	mov    rdi,r13
  4022d8:	mov    r10,rdx
  4022db:	or     r10,0xffffffffffffff00
  4022e2:	test   dl,dl
  4022e4:	cmovs  rdx,r10
  4022e8:	sub    rdx,rax
  4022eb:	lea    rax,[r8+rdx*1]
  4022ef:	mov    r8d,0x1
  4022f5:	mov    rdx,r13
  4022f8:	mov    QWORD PTR [rbp-0x30],rax
  4022fc:	call   401f40 <_head_lib64_libkernel32_a-0x70c0>
  402301:	jmp    4021fb <_head_lib64_libkernel32_a-0x6e05>
  402306:	movzx  edx,WORD PTR [rcx]
  402309:	mov    rdi,r13
  40230c:	mov    r10,rdx
  40230f:	or     r10,0xffffffffffff0000
  402316:	test   dx,dx
  402319:	cmovs  rdx,r10
  40231d:	sub    rdx,rax
  402320:	lea    rax,[r8+rdx*1]
  402324:	mov    r8d,0x2
  40232a:	mov    rdx,r13
  40232d:	mov    QWORD PTR [rbp-0x30],rax
  402331:	call   401f40 <_head_lib64_libkernel32_a-0x70c0>
  402336:	jmp    4021fb <_head_lib64_libkernel32_a-0x6e05>
  40233b:	lea    rcx,[rip+0x3396]        # 4056d8 <_head_lib64_libkernel32_a-0x3928>
  402342:	mov    QWORD PTR [rbp-0x30],0x0
  40234a:	call   401ed0 <_head_lib64_libkernel32_a-0x7130>
  40234f:	mov    edx,DWORD PTR [rcx]
  402351:	mov    rdi,r13
  402354:	mov    r10,rdx
  402357:	or     r10,r14
  40235a:	test   edx,edx
  40235c:	cmovs  rdx,r10
  402360:	sub    rdx,rax
  402363:	lea    rax,[r8+rdx*1]
  402367:	mov    r8d,0x4
  40236d:	mov    rdx,r13
  402370:	mov    QWORD PTR [rbp-0x30],rax
  402374:	call   401f40 <_head_lib64_libkernel32_a-0x70c0>
  402379:	jmp    4021fb <_head_lib64_libkernel32_a-0x6e05>
  40237e:	add    rbx,QWORD PTR [rip+0x6383]        # 408708 <_head_lib64_libkernel32_a-0x8f8>
  402385:	lea    rcx,[rip+0x32b4]        # 405640 <_head_lib64_libkernel32_a-0x39c0>
  40238c:	mov    rax,QWORD PTR [rbx+0x10]
  402390:	mov    r8,QWORD PTR [rbx+0x8]
  402394:	mov    edx,DWORD PTR [rax+0x8]
  402397:	call   401ed0 <_head_lib64_libkernel32_a-0x7130>
  40239c:	lea    rcx,[rip+0x32fd]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  4023a3:	call   401ed0 <_head_lib64_libkernel32_a-0x7130>
  4023a8:	nop
  4023a9:	nop
  4023aa:	nop
  4023ab:	nop
  4023ac:	nop
  4023ad:	nop
  4023ae:	nop
  4023af:	nop
  4023b0:	sub    rsp,0x28
  4023b4:	mov    eax,DWORD PTR [rcx]
  4023b6:	cmp    eax,0xc0000091
  4023bb:	ja     402420 <_head_lib64_libkernel32_a-0x6be0>
  4023bd:	cmp    eax,0xc000008d
  4023c2:	jae    40243f <_head_lib64_libkernel32_a-0x6bc1>
  4023c4:	cmp    eax,0xc0000008
  4023c9:	je     4024e0 <_head_lib64_libkernel32_a-0x6b20>
  4023cf:	ja     4024b0 <_head_lib64_libkernel32_a-0x6b50>
  4023d5:	cmp    eax,0x80000002
  4023da:	je     4024e0 <_head_lib64_libkernel32_a-0x6b20>
  4023e0:	cmp    eax,0xc0000005
  4023e5:	jne    4024be <_head_lib64_libkernel32_a-0x6b42>
  4023eb:	xor    edx,edx
  4023ed:	mov    ecx,0xb
  4023f2:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  4023f7:	cmp    rax,0x1
  4023fb:	je     402540 <_head_lib64_libkernel32_a-0x6ac0>
  402401:	test   rax,rax
  402404:	je     402520 <_head_lib64_libkernel32_a-0x6ae0>
  40240a:	mov    ecx,0xb
  40240f:	call   rax
  402411:	xor    eax,eax
  402413:	add    rsp,0x28
  402417:	ret    
  402418:	nop    DWORD PTR [rax+rax*1+0x0]
  402420:	cmp    eax,0xc0000094
  402425:	je     4024f0 <_head_lib64_libkernel32_a-0x6b10>
  40242b:	ja     402470 <_head_lib64_libkernel32_a-0x6b90>
  40242d:	cmp    eax,0xc0000092
  402432:	je     4024e0 <_head_lib64_libkernel32_a-0x6b20>
  402438:	cmp    eax,0xc0000093
  40243d:	jne    4024be <_head_lib64_libkernel32_a-0x6b42>
  40243f:	xor    edx,edx
  402441:	mov    ecx,0x8
  402446:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  40244b:	cmp    rax,0x1
  40244f:	mov    rdx,rax
  402452:	je     4024c8 <_head_lib64_libkernel32_a-0x6b38>
  402454:	test   rdx,rdx
  402457:	mov    eax,0x1
  40245c:	je     402413 <_head_lib64_libkernel32_a-0x6bed>
  40245e:	mov    ecx,0x8
  402463:	call   rdx
  402465:	xor    eax,eax
  402467:	add    rsp,0x28
  40246b:	ret    
  40246c:	nop    DWORD PTR [rax+0x0]
  402470:	cmp    eax,0xc0000095
  402475:	je     4024e0 <_head_lib64_libkernel32_a-0x6b20>
  402477:	cmp    eax,0xc0000096
  40247c:	jne    4024be <_head_lib64_libkernel32_a-0x6b42>
  40247e:	xor    edx,edx
  402480:	mov    ecx,0x4
  402485:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  40248a:	cmp    rax,0x1
  40248e:	je     40252a <_head_lib64_libkernel32_a-0x6ad6>
  402494:	test   rax,rax
  402497:	je     402520 <_head_lib64_libkernel32_a-0x6ae0>
  40249d:	mov    ecx,0x4
  4024a2:	call   rax
  4024a4:	xor    eax,eax
  4024a6:	jmp    402413 <_head_lib64_libkernel32_a-0x6bed>
  4024ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4024b0:	cmp    eax,0xc000001d
  4024b5:	je     40247e <_head_lib64_libkernel32_a-0x6b82>
  4024b7:	cmp    eax,0xc000008c
  4024bc:	je     4024e0 <_head_lib64_libkernel32_a-0x6b20>
  4024be:	mov    eax,0x1
  4024c3:	add    rsp,0x28
  4024c7:	ret    
  4024c8:	mov    edx,0x1
  4024cd:	mov    ecx,0x8
  4024d2:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  4024d7:	call   401ea0 <_head_lib64_libkernel32_a-0x7160>
  4024dc:	nop    DWORD PTR [rax+0x0]
  4024e0:	xor    eax,eax
  4024e2:	add    rsp,0x28
  4024e6:	ret    
  4024e7:	nop    WORD PTR [rax+rax*1+0x0]
  4024f0:	xor    edx,edx
  4024f2:	mov    ecx,0x8
  4024f7:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  4024fc:	cmp    rax,0x1
  402500:	mov    rdx,rax
  402503:	jne    402454 <_head_lib64_libkernel32_a-0x6bac>
  402509:	mov    edx,0x1
  40250e:	mov    ecx,0x8
  402513:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  402518:	xor    eax,eax
  40251a:	jmp    402413 <_head_lib64_libkernel32_a-0x6bed>
  40251f:	nop
  402520:	mov    eax,0x4
  402525:	add    rsp,0x28
  402529:	ret    
  40252a:	mov    edx,0x1
  40252f:	mov    ecx,0x4
  402534:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  402539:	xor    eax,eax
  40253b:	jmp    402413 <_head_lib64_libkernel32_a-0x6bed>
  402540:	mov    edx,0x1
  402545:	mov    ecx,0xb
  40254a:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  40254f:	xor    eax,eax
  402551:	jmp    402413 <_head_lib64_libkernel32_a-0x6bed>
  402556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402560:	push   r12
  402562:	push   rbp
  402563:	push   rdi
  402564:	push   rsi
  402565:	push   rbx
  402566:	sub    rsp,0x20
  40256a:	call   402cd0 <_head_lib64_libkernel32_a-0x6330>
  40256f:	mov    rbp,rax
  402572:	mov    eax,DWORD PTR [rip+0x61d0]        # 408748 <_head_lib64_libkernel32_a-0x8b8>
  402578:	test   eax,eax
  40257a:	jne    4025a1 <_head_lib64_libkernel32_a-0x6a5f>
  40257c:	test   rbp,rbp
  40257f:	je     4025a1 <_head_lib64_libkernel32_a-0x6a5f>
  402581:	lea    rcx,[rip+0x3188]        # 405710 <_head_lib64_libkernel32_a-0x38f0>
  402588:	mov    DWORD PTR [rip+0x61b6],0x1        # 408748 <_head_lib64_libkernel32_a-0x8b8>
  402592:	call   402b10 <_head_lib64_libkernel32_a-0x64f0>
  402597:	test   rax,rax
  40259a:	je     4025b0 <_head_lib64_libkernel32_a-0x6a50>
  40259c:	mov    eax,0x1
  4025a1:	add    rsp,0x20
  4025a5:	pop    rbx
  4025a6:	pop    rsi
  4025a7:	pop    rdi
  4025a8:	pop    rbp
  4025a9:	pop    r12
  4025ab:	ret    
  4025ac:	nop    DWORD PTR [rax+0x0]
  4025b0:	lea    rbx,[rip+0x62c9]        # 408880 <_head_lib64_libkernel32_a-0x780>
  4025b7:	mov    ecx,0x30
  4025bc:	lea    rdx,[rip+0x61bd]        # 408780 <_head_lib64_libkernel32_a-0x880>
  4025c3:	lea    r12,[rip+0xfffffffffffffde6]        # 4023b0 <_head_lib64_libkernel32_a-0x6c50>
  4025ca:	xor    esi,esi
  4025cc:	mov    rdi,rbx
  4025cf:	rep stos QWORD PTR es:[rdi],rax
  4025d2:	mov    rdi,rdx
  4025d5:	sub    r12,rbp
  4025d8:	mov    cl,0x20
  4025da:	rep stos QWORD PTR es:[rdi],rax
  4025dd:	mov    rdi,rdx
  4025e0:	jmp    402610 <_head_lib64_libkernel32_a-0x69f0>
  4025e2:	mov    BYTE PTR [rdi],0x9
  4025e5:	mov    DWORD PTR [rdi+0x4],r12d
  4025e9:	add    rsi,0x1
  4025ed:	mov    edx,DWORD PTR [rax+0xc]
  4025f0:	add    rbx,0xc
  4025f4:	mov    DWORD PTR [rbx-0xc],edx
  4025f7:	add    edx,DWORD PTR [rax+0x8]
  4025fa:	mov    rax,rdi
  4025fd:	sub    rax,rbp
  402600:	add    rdi,0x8
  402604:	mov    DWORD PTR [rbx-0x4],eax
  402607:	mov    DWORD PTR [rbx-0x8],edx
  40260a:	cmp    rsi,0x20
  40260e:	je     402645 <_head_lib64_libkernel32_a-0x69bb>
  402610:	mov    rcx,rsi
  402613:	call   402c40 <_head_lib64_libkernel32_a-0x63c0>
  402618:	test   rax,rax
  40261b:	jne    4025e2 <_head_lib64_libkernel32_a-0x6a1e>
  40261d:	test   rsi,rsi
  402620:	je     40259c <_head_lib64_libkernel32_a-0x6a64>
  402626:	mov    edx,esi
  402628:	nop    DWORD PTR [rax+rax*1+0x0]
  402630:	mov    r8,rbp
  402633:	lea    rcx,[rip+0x6246]        # 408880 <_head_lib64_libkernel32_a-0x780>
  40263a:	call   QWORD PTR [rip+0x6d2c]        # 40936c <__imp_RtlAddFunctionTable>
  402640:	jmp    40259c <_head_lib64_libkernel32_a-0x6a64>
  402645:	mov    edx,0x20
  40264a:	jmp    402630 <_head_lib64_libkernel32_a-0x69d0>
  40264c:	nop    DWORD PTR [rax+0x0]
  402650:	push   rbx
  402651:	sub    rsp,0x20
  402655:	mov    rdx,QWORD PTR [rcx]
  402658:	mov    eax,DWORD PTR [rdx]
  40265a:	mov    r8d,eax
  40265d:	and    r8d,0x20ffffff
  402664:	cmp    r8d,0x20474343
  40266b:	je     402770 <_head_lib64_libkernel32_a-0x6890>
  402671:	cmp    eax,0xc0000091
  402676:	mov    rbx,rcx
  402679:	ja     402700 <_head_lib64_libkernel32_a-0x6900>
  40267f:	cmp    eax,0xc000008d
  402684:	jae    402717 <_head_lib64_libkernel32_a-0x68e9>
  40268a:	cmp    eax,0xc0000008
  40268f:	je     4026c3 <_head_lib64_libkernel32_a-0x693d>
  402691:	ja     4026d0 <_head_lib64_libkernel32_a-0x6930>
  402693:	cmp    eax,0x80000002
  402698:	je     4026c3 <_head_lib64_libkernel32_a-0x693d>
  40269a:	cmp    eax,0xc0000005
  40269f:	jne    4026e2 <_head_lib64_libkernel32_a-0x691e>
  4026a1:	xor    edx,edx
  4026a3:	mov    ecx,0xb
  4026a8:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  4026ad:	cmp    rax,0x1
  4026b1:	je     4027e0 <_head_lib64_libkernel32_a-0x6820>
  4026b7:	test   rax,rax
  4026ba:	je     4026e2 <_head_lib64_libkernel32_a-0x691e>
  4026bc:	mov    ecx,0xb
  4026c1:	call   rax
  4026c3:	mov    eax,0xffffffff
  4026c8:	add    rsp,0x20
  4026cc:	pop    rbx
  4026cd:	ret    
  4026ce:	xchg   ax,ax
  4026d0:	cmp    eax,0xc000001d
  4026d5:	je     402796 <_head_lib64_libkernel32_a-0x686a>
  4026db:	cmp    eax,0xc000008c
  4026e0:	je     4026c3 <_head_lib64_libkernel32_a-0x693d>
  4026e2:	mov    rax,QWORD PTR [rip+0x6057]        # 408740 <_head_lib64_libkernel32_a-0x8c0>
  4026e9:	test   rax,rax
  4026ec:	je     4026c8 <_head_lib64_libkernel32_a-0x6938>
  4026ee:	mov    rcx,rbx
  4026f1:	add    rsp,0x20
  4026f5:	pop    rbx
  4026f6:	rex.W jmp rax
  4026f9:	nop    DWORD PTR [rax+0x0]
  402700:	cmp    eax,0xc0000094
  402705:	je     402742 <_head_lib64_libkernel32_a-0x68be>
  402707:	ja     402780 <_head_lib64_libkernel32_a-0x6880>
  402709:	cmp    eax,0xc0000092
  40270e:	je     4026c3 <_head_lib64_libkernel32_a-0x693d>
  402710:	cmp    eax,0xc0000093
  402715:	jne    4026e2 <_head_lib64_libkernel32_a-0x691e>
  402717:	xor    edx,edx
  402719:	mov    ecx,0x8
  40271e:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  402723:	cmp    rax,0x1
  402727:	jne    402754 <_head_lib64_libkernel32_a-0x68ac>
  402729:	mov    edx,0x1
  40272e:	mov    ecx,0x8
  402733:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  402738:	call   401ea0 <_head_lib64_libkernel32_a-0x7160>
  40273d:	jmp    4026c3 <_head_lib64_libkernel32_a-0x693d>
  402742:	xor    edx,edx
  402744:	mov    ecx,0x8
  402749:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  40274e:	cmp    rax,0x1
  402752:	je     4027c2 <_head_lib64_libkernel32_a-0x683e>
  402754:	test   rax,rax
  402757:	je     4026e2 <_head_lib64_libkernel32_a-0x691e>
  402759:	mov    ecx,0x8
  40275e:	call   rax
  402760:	mov    eax,0xffffffff
  402765:	jmp    4026c8 <_head_lib64_libkernel32_a-0x6938>
  40276a:	nop    WORD PTR [rax+rax*1+0x0]
  402770:	test   BYTE PTR [rdx+0x4],0x1
  402774:	jne    402671 <_head_lib64_libkernel32_a-0x698f>
  40277a:	jmp    4026c3 <_head_lib64_libkernel32_a-0x693d>
  40277f:	nop
  402780:	cmp    eax,0xc0000095
  402785:	je     4026c3 <_head_lib64_libkernel32_a-0x693d>
  40278b:	cmp    eax,0xc0000096
  402790:	jne    4026e2 <_head_lib64_libkernel32_a-0x691e>
  402796:	xor    edx,edx
  402798:	mov    ecx,0x4
  40279d:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  4027a2:	cmp    rax,0x1
  4027a6:	je     4027f4 <_head_lib64_libkernel32_a-0x680c>
  4027a8:	test   rax,rax
  4027ab:	je     4026e2 <_head_lib64_libkernel32_a-0x691e>
  4027b1:	mov    ecx,0x4
  4027b6:	call   rax
  4027b8:	mov    eax,0xffffffff
  4027bd:	jmp    4026c8 <_head_lib64_libkernel32_a-0x6938>
  4027c2:	mov    edx,0x1
  4027c7:	mov    ecx,0x8
  4027cc:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  4027d1:	jmp    4026c3 <_head_lib64_libkernel32_a-0x693d>
  4027d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027e0:	mov    edx,0x1
  4027e5:	mov    ecx,0xb
  4027ea:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  4027ef:	jmp    4026c3 <_head_lib64_libkernel32_a-0x693d>
  4027f4:	mov    edx,0x1
  4027f9:	mov    ecx,0x4
  4027fe:	call   402e78 <_head_lib64_libkernel32_a-0x6188>
  402803:	jmp    4026c3 <_head_lib64_libkernel32_a-0x693d>
  402808:	nop
  402809:	nop
  40280a:	nop
  40280b:	nop
  40280c:	nop
  40280d:	nop
  40280e:	nop
  40280f:	nop
  402810:	push   rbp
  402811:	push   rdi
  402812:	push   rsi
  402813:	push   rbx
  402814:	sub    rsp,0x28
  402818:	lea    rcx,[rip+0x6201]        # 408a20 <_head_lib64_libkernel32_a-0x5e0>
  40281f:	call   QWORD PTR [rip+0x6adf]        # 409304 <__imp_EnterCriticalSection>
  402825:	mov    rbx,QWORD PTR [rip+0x61d4]        # 408a00 <_head_lib64_libkernel32_a-0x600>
  40282c:	test   rbx,rbx
  40282f:	je     402864 <_head_lib64_libkernel32_a-0x679c>
  402831:	mov    rbp,QWORD PTR [rip+0x6b6c]        # 4093a4 <__imp_TlsGetValue>
  402838:	mov    rdi,QWORD PTR [rip+0x6ae5]        # 409324 <__imp_GetLastError>
  40283f:	nop
  402840:	mov    ecx,DWORD PTR [rbx]
  402842:	call   rbp
  402844:	mov    rsi,rax
  402847:	call   rdi
  402849:	test   eax,eax
  40284b:	jne    40285b <_head_lib64_libkernel32_a-0x67a5>
  40284d:	test   rsi,rsi
  402850:	je     40285b <_head_lib64_libkernel32_a-0x67a5>
  402852:	mov    rax,QWORD PTR [rbx+0x8]
  402856:	mov    rcx,rsi
  402859:	call   rax
  40285b:	mov    rbx,QWORD PTR [rbx+0x10]
  40285f:	test   rbx,rbx
  402862:	jne    402840 <_head_lib64_libkernel32_a-0x67c0>
  402864:	mov    rax,QWORD PTR [rip+0x6af1]        # 40935c <__imp_LeaveCriticalSection>
  40286b:	lea    rcx,[rip+0x61ae]        # 408a20 <_head_lib64_libkernel32_a-0x5e0>
  402872:	add    rsp,0x28
  402876:	pop    rbx
  402877:	pop    rsi
  402878:	pop    rdi
  402879:	pop    rbp
  40287a:	rex.W jmp rax
  40287d:	nop    DWORD PTR [rax]
  402880:	push   rdi
  402881:	push   rsi
  402882:	push   rbx
  402883:	sub    rsp,0x20
  402887:	mov    eax,DWORD PTR [rip+0x617b]        # 408a08 <_head_lib64_libkernel32_a-0x5f8>
  40288d:	test   eax,eax
  40288f:	jne    4028a0 <_head_lib64_libkernel32_a-0x6760>
  402891:	add    rsp,0x20
  402895:	pop    rbx
  402896:	pop    rsi
  402897:	pop    rdi
  402898:	ret    
  402899:	nop    DWORD PTR [rax+0x0]
  4028a0:	mov    rsi,rdx
  4028a3:	mov    edi,ecx
  4028a5:	mov    edx,0x18
  4028aa:	mov    ecx,0x1
  4028af:	call   402eb0 <_head_lib64_libkernel32_a-0x6150>
  4028b4:	test   rax,rax
  4028b7:	mov    rbx,rax
  4028ba:	je     4028f8 <_head_lib64_libkernel32_a-0x6708>
  4028bc:	mov    DWORD PTR [rax],edi
  4028be:	mov    QWORD PTR [rax+0x8],rsi
  4028c2:	lea    rcx,[rip+0x6157]        # 408a20 <_head_lib64_libkernel32_a-0x5e0>
  4028c9:	call   QWORD PTR [rip+0x6a35]        # 409304 <__imp_EnterCriticalSection>
  4028cf:	mov    rax,QWORD PTR [rip+0x612a]        # 408a00 <_head_lib64_libkernel32_a-0x600>
  4028d6:	lea    rcx,[rip+0x6143]        # 408a20 <_head_lib64_libkernel32_a-0x5e0>
  4028dd:	mov    QWORD PTR [rip+0x611c],rbx        # 408a00 <_head_lib64_libkernel32_a-0x600>
  4028e4:	mov    QWORD PTR [rbx+0x10],rax
  4028e8:	call   QWORD PTR [rip+0x6a6e]        # 40935c <__imp_LeaveCriticalSection>
  4028ee:	xor    eax,eax
  4028f0:	add    rsp,0x20
  4028f4:	pop    rbx
  4028f5:	pop    rsi
  4028f6:	pop    rdi
  4028f7:	ret    
  4028f8:	mov    eax,0xffffffff
  4028fd:	jmp    402891 <_head_lib64_libkernel32_a-0x676f>
  4028ff:	nop
  402900:	push   rbx
  402901:	sub    rsp,0x20
  402905:	mov    eax,DWORD PTR [rip+0x60fd]        # 408a08 <_head_lib64_libkernel32_a-0x5f8>
  40290b:	test   eax,eax
  40290d:	jne    402920 <_head_lib64_libkernel32_a-0x66e0>
  40290f:	xor    eax,eax
  402911:	add    rsp,0x20
  402915:	pop    rbx
  402916:	ret    
  402917:	nop    WORD PTR [rax+rax*1+0x0]
  402920:	mov    ebx,ecx
  402922:	lea    rcx,[rip+0x60f7]        # 408a20 <_head_lib64_libkernel32_a-0x5e0>
  402929:	call   QWORD PTR [rip+0x69d5]        # 409304 <__imp_EnterCriticalSection>
  40292f:	mov    rdx,QWORD PTR [rip+0x60ca]        # 408a00 <_head_lib64_libkernel32_a-0x600>
  402936:	test   rdx,rdx
  402939:	je     402957 <_head_lib64_libkernel32_a-0x66a9>
  40293b:	mov    eax,DWORD PTR [rdx]
  40293d:	cmp    eax,ebx
  40293f:	jne    40294e <_head_lib64_libkernel32_a-0x66b2>
  402941:	jmp    40298f <_head_lib64_libkernel32_a-0x6671>
  402943:	mov    r8d,DWORD PTR [rax]
  402946:	cmp    r8d,ebx
  402949:	je     402970 <_head_lib64_libkernel32_a-0x6690>
  40294b:	mov    rdx,rax
  40294e:	mov    rax,QWORD PTR [rdx+0x10]
  402952:	test   rax,rax
  402955:	jne    402943 <_head_lib64_libkernel32_a-0x66bd>
  402957:	lea    rcx,[rip+0x60c2]        # 408a20 <_head_lib64_libkernel32_a-0x5e0>
  40295e:	call   QWORD PTR [rip+0x69f8]        # 40935c <__imp_LeaveCriticalSection>
  402964:	xor    eax,eax
  402966:	add    rsp,0x20
  40296a:	pop    rbx
  40296b:	ret    
  40296c:	nop    DWORD PTR [rax+0x0]
  402970:	mov    rcx,rax
  402973:	mov    rax,QWORD PTR [rax+0x10]
  402977:	mov    QWORD PTR [rdx+0x10],rax
  40297b:	call   402e98 <_head_lib64_libkernel32_a-0x6168>
  402980:	lea    rcx,[rip+0x6099]        # 408a20 <_head_lib64_libkernel32_a-0x5e0>
  402987:	call   QWORD PTR [rip+0x69cf]        # 40935c <__imp_LeaveCriticalSection>
  40298d:	jmp    402964 <_head_lib64_libkernel32_a-0x669c>
  40298f:	mov    rax,QWORD PTR [rdx+0x10]
  402993:	mov    rcx,rdx
  402996:	mov    QWORD PTR [rip+0x6063],rax        # 408a00 <_head_lib64_libkernel32_a-0x600>
  40299d:	jmp    40297b <_head_lib64_libkernel32_a-0x6685>
  40299f:	nop
  4029a0:	push   rbx
  4029a1:	sub    rsp,0x20
  4029a5:	cmp    edx,0x1
  4029a8:	je     402a40 <_head_lib64_libkernel32_a-0x65c0>
  4029ae:	jb     4029e0 <_head_lib64_libkernel32_a-0x6620>
  4029b0:	cmp    edx,0x2
  4029b3:	je     4029d0 <_head_lib64_libkernel32_a-0x6630>
  4029b5:	cmp    edx,0x3
  4029b8:	jne    4029d5 <_head_lib64_libkernel32_a-0x662b>
  4029ba:	mov    eax,DWORD PTR [rip+0x6048]        # 408a08 <_head_lib64_libkernel32_a-0x5f8>
  4029c0:	test   eax,eax
  4029c2:	je     4029d5 <_head_lib64_libkernel32_a-0x662b>
  4029c4:	call   402810 <_head_lib64_libkernel32_a-0x67f0>
  4029c9:	jmp    4029d5 <_head_lib64_libkernel32_a-0x662b>
  4029cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4029d0:	call   401ea0 <_head_lib64_libkernel32_a-0x7160>
  4029d5:	mov    eax,0x1
  4029da:	add    rsp,0x20
  4029de:	pop    rbx
  4029df:	ret    
  4029e0:	mov    eax,DWORD PTR [rip+0x6022]        # 408a08 <_head_lib64_libkernel32_a-0x5f8>
  4029e6:	test   eax,eax
  4029e8:	jne    402a70 <_head_lib64_libkernel32_a-0x6590>
  4029ee:	mov    eax,DWORD PTR [rip+0x6014]        # 408a08 <_head_lib64_libkernel32_a-0x5f8>
  4029f4:	cmp    eax,0x1
  4029f7:	jne    4029d5 <_head_lib64_libkernel32_a-0x662b>
  4029f9:	mov    rcx,QWORD PTR [rip+0x6000]        # 408a00 <_head_lib64_libkernel32_a-0x600>
  402a00:	test   rcx,rcx
  402a03:	je     402a16 <_head_lib64_libkernel32_a-0x65ea>
  402a05:	mov    rbx,QWORD PTR [rcx+0x10]
  402a09:	call   402e98 <_head_lib64_libkernel32_a-0x6168>
  402a0e:	test   rbx,rbx
  402a11:	mov    rcx,rbx
  402a14:	jne    402a05 <_head_lib64_libkernel32_a-0x65fb>
  402a16:	lea    rcx,[rip+0x6003]        # 408a20 <_head_lib64_libkernel32_a-0x5e0>
  402a1d:	mov    QWORD PTR [rip+0x5fd8],0x0        # 408a00 <_head_lib64_libkernel32_a-0x600>
  402a28:	mov    DWORD PTR [rip+0x5fd6],0x0        # 408a08 <_head_lib64_libkernel32_a-0x5f8>
  402a32:	call   QWORD PTR [rip+0x68c4]        # 4092fc <__IAT_start__>
  402a38:	jmp    4029d5 <_head_lib64_libkernel32_a-0x662b>
  402a3a:	nop    WORD PTR [rax+rax*1+0x0]
  402a40:	mov    eax,DWORD PTR [rip+0x5fc2]        # 408a08 <_head_lib64_libkernel32_a-0x5f8>
  402a46:	test   eax,eax
  402a48:	je     402a60 <_head_lib64_libkernel32_a-0x65a0>
  402a4a:	mov    eax,0x1
  402a4f:	mov    DWORD PTR [rip+0x5faf],0x1        # 408a08 <_head_lib64_libkernel32_a-0x5f8>
  402a59:	add    rsp,0x20
  402a5d:	pop    rbx
  402a5e:	ret    
  402a5f:	nop
  402a60:	lea    rcx,[rip+0x5fb9]        # 408a20 <_head_lib64_libkernel32_a-0x5e0>
  402a67:	call   QWORD PTR [rip+0x68e7]        # 409354 <__imp_InitializeCriticalSection>
  402a6d:	jmp    402a4a <_head_lib64_libkernel32_a-0x65b6>
  402a6f:	nop
  402a70:	call   402810 <_head_lib64_libkernel32_a-0x67f0>
  402a75:	jmp    4029ee <_head_lib64_libkernel32_a-0x6612>
  402a7a:	nop
  402a7b:	nop
  402a7c:	nop
  402a7d:	nop
  402a7e:	nop
  402a7f:	nop
  402a80:	movsxd rax,DWORD PTR [rcx+0x3c]
  402a84:	add    rcx,rax
  402a87:	xor    eax,eax
  402a89:	cmp    DWORD PTR [rcx],0x4550
  402a8f:	je     402a93 <_head_lib64_libkernel32_a-0x656d>
  402a91:	repz ret 
  402a93:	xor    eax,eax
  402a95:	cmp    WORD PTR [rcx+0x18],0x20b
  402a9b:	sete   al
  402a9e:	ret    
  402a9f:	nop
  402aa0:	cmp    WORD PTR [rcx],0x5a4d
  402aa5:	je     402ab0 <_head_lib64_libkernel32_a-0x6550>
  402aa7:	xor    eax,eax
  402aa9:	ret    
  402aaa:	nop    WORD PTR [rax+rax*1+0x0]
  402ab0:	jmp    402a80 <_head_lib64_libkernel32_a-0x6580>
  402ab2:	nop    DWORD PTR [rax+0x0]
  402ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ac0:	movsxd rax,DWORD PTR [rcx+0x3c]
  402ac4:	add    rcx,rax
  402ac7:	movzx  eax,WORD PTR [rcx+0x14]
  402acb:	lea    rax,[rcx+rax*1+0x18]
  402ad0:	movzx  ecx,WORD PTR [rcx+0x6]
  402ad4:	test   ecx,ecx
  402ad6:	je     402b01 <_head_lib64_libkernel32_a-0x64ff>
  402ad8:	sub    ecx,0x1
  402adb:	lea    rcx,[rcx+rcx*4]
  402adf:	lea    r9,[rax+rcx*8+0x28]
  402ae4:	mov    r8d,DWORD PTR [rax+0xc]
  402ae8:	cmp    r8,rdx
  402aeb:	mov    rcx,r8
  402aee:	ja     402af8 <_head_lib64_libkernel32_a-0x6508>
  402af0:	add    ecx,DWORD PTR [rax+0x8]
  402af3:	cmp    rdx,rcx
  402af6:	jb     402b03 <_head_lib64_libkernel32_a-0x64fd>
  402af8:	add    rax,0x28
  402afc:	cmp    rax,r9
  402aff:	jne    402ae4 <_head_lib64_libkernel32_a-0x651c>
  402b01:	xor    eax,eax
  402b03:	repz ret 
  402b05:	nop
  402b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b10:	push   rdi
  402b11:	push   rsi
  402b12:	push   rbx
  402b13:	sub    rsp,0x20
  402b17:	mov    rsi,rcx
  402b1a:	call   402e70 <_head_lib64_libkernel32_a-0x6190>
  402b1f:	cmp    rax,0x8
  402b23:	ja     402b40 <_head_lib64_libkernel32_a-0x64c0>
  402b25:	mov    rbx,QWORD PTR [rip+0x2c54]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  402b2c:	xor    edi,edi
  402b2e:	cmp    WORD PTR [rbx],0x5a4d
  402b33:	je     402b50 <_head_lib64_libkernel32_a-0x64b0>
  402b35:	mov    rax,rdi
  402b38:	add    rsp,0x20
  402b3c:	pop    rbx
  402b3d:	pop    rsi
  402b3e:	pop    rdi
  402b3f:	ret    
  402b40:	xor    edi,edi
  402b42:	mov    rax,rdi
  402b45:	add    rsp,0x20
  402b49:	pop    rbx
  402b4a:	pop    rsi
  402b4b:	pop    rdi
  402b4c:	ret    
  402b4d:	nop    DWORD PTR [rax]
  402b50:	mov    rcx,rbx
  402b53:	call   402a80 <_head_lib64_libkernel32_a-0x6580>
  402b58:	test   eax,eax
  402b5a:	je     402b35 <_head_lib64_libkernel32_a-0x64cb>
  402b5c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402b60:	add    rdx,rbx
  402b63:	movzx  eax,WORD PTR [rdx+0x14]
  402b67:	lea    rbx,[rdx+rax*1+0x18]
  402b6c:	movzx  eax,WORD PTR [rdx+0x6]
  402b70:	test   eax,eax
  402b72:	je     402b35 <_head_lib64_libkernel32_a-0x64cb>
  402b74:	sub    eax,0x1
  402b77:	lea    rax,[rax+rax*4]
  402b7b:	lea    rdi,[rbx+rax*8+0x28]
  402b80:	jmp    402b8b <_head_lib64_libkernel32_a-0x6475>
  402b82:	add    rbx,0x28
  402b86:	cmp    rbx,rdi
  402b89:	je     402b40 <_head_lib64_libkernel32_a-0x64c0>
  402b8b:	mov    r8d,0x8
  402b91:	mov    rdx,rsi
  402b94:	mov    rcx,rbx
  402b97:	call   402e68 <_head_lib64_libkernel32_a-0x6198>
  402b9c:	test   eax,eax
  402b9e:	jne    402b82 <_head_lib64_libkernel32_a-0x647e>
  402ba0:	mov    rdi,rbx
  402ba3:	mov    rax,rdi
  402ba6:	add    rsp,0x20
  402baa:	pop    rbx
  402bab:	pop    rsi
  402bac:	pop    rdi
  402bad:	ret    
  402bae:	xchg   ax,ax
  402bb0:	push   rsi
  402bb1:	push   rbx
  402bb2:	sub    rsp,0x28
  402bb6:	mov    rbx,QWORD PTR [rip+0x2bc3]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  402bbd:	cmp    WORD PTR [rbx],0x5a4d
  402bc2:	je     402bd0 <_head_lib64_libkernel32_a-0x6430>
  402bc4:	xor    eax,eax
  402bc6:	add    rsp,0x28
  402bca:	pop    rbx
  402bcb:	pop    rsi
  402bcc:	ret    
  402bcd:	nop    DWORD PTR [rax]
  402bd0:	mov    rsi,rcx
  402bd3:	mov    rcx,rbx
  402bd6:	call   402a80 <_head_lib64_libkernel32_a-0x6580>
  402bdb:	test   eax,eax
  402bdd:	je     402bc4 <_head_lib64_libkernel32_a-0x643c>
  402bdf:	sub    rsi,rbx
  402be2:	mov    rcx,rbx
  402be5:	mov    rdx,rsi
  402be8:	add    rsp,0x28
  402bec:	pop    rbx
  402bed:	pop    rsi
  402bee:	jmp    402ac0 <_head_lib64_libkernel32_a-0x6540>
  402bf3:	nop    DWORD PTR [rax]
  402bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c00:	push   rbx
  402c01:	sub    rsp,0x20
  402c05:	mov    rbx,QWORD PTR [rip+0x2b74]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  402c0c:	xor    eax,eax
  402c0e:	cmp    WORD PTR [rbx],0x5a4d
  402c13:	je     402c20 <_head_lib64_libkernel32_a-0x63e0>
  402c15:	add    rsp,0x20
  402c19:	pop    rbx
  402c1a:	ret    
  402c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c20:	mov    rcx,rbx
  402c23:	call   402a80 <_head_lib64_libkernel32_a-0x6580>
  402c28:	test   eax,eax
  402c2a:	je     402c15 <_head_lib64_libkernel32_a-0x63eb>
  402c2c:	movsxd rax,DWORD PTR [rbx+0x3c]
  402c30:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402c35:	add    rsp,0x20
  402c39:	pop    rbx
  402c3a:	ret    
  402c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c40:	push   rdi
  402c41:	push   rsi
  402c42:	push   rbx
  402c43:	sub    rsp,0x20
  402c47:	mov    rsi,QWORD PTR [rip+0x2b32]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  402c4e:	xor    edi,edi
  402c50:	mov    rbx,rcx
  402c53:	cmp    WORD PTR [rsi],0x5a4d
  402c58:	je     402c65 <_head_lib64_libkernel32_a-0x639b>
  402c5a:	mov    rax,rdi
  402c5d:	add    rsp,0x20
  402c61:	pop    rbx
  402c62:	pop    rsi
  402c63:	pop    rdi
  402c64:	ret    
  402c65:	mov    rcx,rsi
  402c68:	call   402a80 <_head_lib64_libkernel32_a-0x6580>
  402c6d:	test   eax,eax
  402c6f:	je     402c5a <_head_lib64_libkernel32_a-0x63a6>
  402c71:	movsxd rax,DWORD PTR [rsi+0x3c]
  402c75:	add    rsi,rax
  402c78:	movzx  eax,WORD PTR [rsi+0x14]
  402c7c:	lea    rdx,[rsi+rax*1+0x18]
  402c81:	movzx  eax,WORD PTR [rsi+0x6]
  402c85:	test   eax,eax
  402c87:	je     402c5a <_head_lib64_libkernel32_a-0x63a6>
  402c89:	sub    eax,0x1
  402c8c:	lea    rax,[rax+rax*4]
  402c90:	lea    rax,[rdx+rax*8+0x28]
  402c95:	test   BYTE PTR [rdx+0x27],0x20
  402c99:	je     402ca4 <_head_lib64_libkernel32_a-0x635c>
  402c9b:	test   rbx,rbx
  402c9e:	je     402cc0 <_head_lib64_libkernel32_a-0x6340>
  402ca0:	sub    rbx,0x1
  402ca4:	add    rdx,0x28
  402ca8:	cmp    rdx,rax
  402cab:	jne    402c95 <_head_lib64_libkernel32_a-0x636b>
  402cad:	xor    edi,edi
  402caf:	mov    rax,rdi
  402cb2:	add    rsp,0x20
  402cb6:	pop    rbx
  402cb7:	pop    rsi
  402cb8:	pop    rdi
  402cb9:	ret    
  402cba:	nop    WORD PTR [rax+rax*1+0x0]
  402cc0:	mov    rdi,rdx
  402cc3:	mov    rax,rdi
  402cc6:	add    rsp,0x20
  402cca:	pop    rbx
  402ccb:	pop    rsi
  402ccc:	pop    rdi
  402ccd:	ret    
  402cce:	xchg   ax,ax
  402cd0:	push   rsi
  402cd1:	push   rbx
  402cd2:	sub    rsp,0x28
  402cd6:	mov    rsi,QWORD PTR [rip+0x2aa3]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  402cdd:	xor    ebx,ebx
  402cdf:	cmp    WORD PTR [rsi],0x5a4d
  402ce4:	je     402cf0 <_head_lib64_libkernel32_a-0x6310>
  402ce6:	mov    rax,rbx
  402ce9:	add    rsp,0x28
  402ced:	pop    rbx
  402cee:	pop    rsi
  402cef:	ret    
  402cf0:	mov    rcx,rsi
  402cf3:	call   402a80 <_head_lib64_libkernel32_a-0x6580>
  402cf8:	test   eax,eax
  402cfa:	cmovne rbx,rsi
  402cfe:	mov    rax,rbx
  402d01:	add    rsp,0x28
  402d05:	pop    rbx
  402d06:	pop    rsi
  402d07:	ret    
  402d08:	nop    DWORD PTR [rax+rax*1+0x0]
  402d10:	push   rsi
  402d11:	push   rbx
  402d12:	sub    rsp,0x28
  402d16:	mov    rbx,QWORD PTR [rip+0x2a63]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  402d1d:	xor    eax,eax
  402d1f:	cmp    WORD PTR [rbx],0x5a4d
  402d24:	je     402d30 <_head_lib64_libkernel32_a-0x62d0>
  402d26:	add    rsp,0x28
  402d2a:	pop    rbx
  402d2b:	pop    rsi
  402d2c:	ret    
  402d2d:	nop    DWORD PTR [rax]
  402d30:	mov    rsi,rcx
  402d33:	mov    rcx,rbx
  402d36:	call   402a80 <_head_lib64_libkernel32_a-0x6580>
  402d3b:	test   eax,eax
  402d3d:	je     402d26 <_head_lib64_libkernel32_a-0x62da>
  402d3f:	sub    rsi,rbx
  402d42:	mov    rcx,rbx
  402d45:	mov    rdx,rsi
  402d48:	call   402ac0 <_head_lib64_libkernel32_a-0x6540>
  402d4d:	test   rax,rax
  402d50:	je     402d61 <_head_lib64_libkernel32_a-0x629f>
  402d52:	mov    eax,DWORD PTR [rax+0x24]
  402d55:	not    eax
  402d57:	shr    eax,0x1f
  402d5a:	add    rsp,0x28
  402d5e:	pop    rbx
  402d5f:	pop    rsi
  402d60:	ret    
  402d61:	xor    eax,eax
  402d63:	jmp    402d26 <_head_lib64_libkernel32_a-0x62da>
  402d65:	nop
  402d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d70:	push   rbp
  402d71:	push   rdi
  402d72:	push   rsi
  402d73:	push   rbx
  402d74:	sub    rsp,0x28
  402d78:	mov    rdi,QWORD PTR [rip+0x2a01]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  402d7f:	xor    ebp,ebp
  402d81:	mov    esi,ecx
  402d83:	cmp    WORD PTR [rdi],0x5a4d
  402d88:	je     402da0 <_head_lib64_libkernel32_a-0x6260>
  402d8a:	mov    rax,rbp
  402d8d:	add    rsp,0x28
  402d91:	pop    rbx
  402d92:	pop    rsi
  402d93:	pop    rdi
  402d94:	pop    rbp
  402d95:	ret    
  402d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402da0:	mov    rcx,rdi
  402da3:	call   402a80 <_head_lib64_libkernel32_a-0x6580>
  402da8:	test   eax,eax
  402daa:	je     402d8a <_head_lib64_libkernel32_a-0x6276>
  402dac:	movsxd rax,DWORD PTR [rdi+0x3c]
  402db0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402db7:	test   edx,edx
  402db9:	je     402d8a <_head_lib64_libkernel32_a-0x6276>
  402dbb:	mov    ebx,edx
  402dbd:	mov    rcx,rdi
  402dc0:	mov    rdx,rbx
  402dc3:	call   402ac0 <_head_lib64_libkernel32_a-0x6540>
  402dc8:	test   rax,rax
  402dcb:	je     402d8a <_head_lib64_libkernel32_a-0x6276>
  402dcd:	add    rbx,rdi
  402dd0:	mov    rdx,rbx
  402dd3:	jne    402de7 <_head_lib64_libkernel32_a-0x6219>
  402dd5:	jmp    402d8a <_head_lib64_libkernel32_a-0x6276>
  402dd7:	nop    WORD PTR [rax+rax*1+0x0]
  402de0:	sub    esi,0x1
  402de3:	add    rdx,0x14
  402de7:	mov    ecx,DWORD PTR [rdx+0x4]
  402dea:	test   ecx,ecx
  402dec:	jne    402df5 <_head_lib64_libkernel32_a-0x620b>
  402dee:	mov    eax,DWORD PTR [rdx+0xc]
  402df1:	test   eax,eax
  402df3:	je     402e10 <_head_lib64_libkernel32_a-0x61f0>
  402df5:	test   esi,esi
  402df7:	jg     402de0 <_head_lib64_libkernel32_a-0x6220>
  402df9:	mov    ebp,DWORD PTR [rdx+0xc]
  402dfc:	add    rbp,rdi
  402dff:	mov    rax,rbp
  402e02:	add    rsp,0x28
  402e06:	pop    rbx
  402e07:	pop    rsi
  402e08:	pop    rdi
  402e09:	pop    rbp
  402e0a:	ret    
  402e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e10:	xor    ebp,ebp
  402e12:	mov    rax,rbp
  402e15:	add    rsp,0x28
  402e19:	pop    rbx
  402e1a:	pop    rsi
  402e1b:	pop    rdi
  402e1c:	pop    rbp
  402e1d:	ret    
  402e1e:	nop
  402e1f:	nop
  402e20:	push   rcx
  402e21:	push   rax
  402e22:	cmp    rax,0x1000
  402e28:	lea    rcx,[rsp+0x18]
  402e2d:	jb     402e48 <_head_lib64_libkernel32_a-0x61b8>
  402e2f:	sub    rcx,0x1000
  402e36:	or     QWORD PTR [rcx],0x0
  402e3a:	sub    rax,0x1000
  402e40:	cmp    rax,0x1000
  402e46:	ja     402e2f <_head_lib64_libkernel32_a-0x61d1>
  402e48:	sub    rcx,rax
  402e4b:	or     QWORD PTR [rcx],0x0
  402e4f:	pop    rax
  402e50:	pop    rcx
  402e51:	ret    
  402e52:	nop
  402e53:	nop
  402e54:	nop
  402e55:	nop
  402e56:	nop
  402e57:	nop
  402e58:	nop
  402e59:	nop
  402e5a:	nop
  402e5b:	nop
  402e5c:	nop
  402e5d:	nop
  402e5e:	nop
  402e5f:	nop
  402e60:	jmp    QWORD PTR [rip+0x664e]        # 4094b4 <__imp_vfprintf>
  402e66:	nop
  402e67:	nop
  402e68:	jmp    QWORD PTR [rip+0x663e]        # 4094ac <__imp_strncmp>
  402e6e:	nop
  402e6f:	nop
  402e70:	jmp    QWORD PTR [rip+0x662e]        # 4094a4 <__imp_strlen>
  402e76:	nop
  402e77:	nop
  402e78:	jmp    QWORD PTR [rip+0x661e]        # 40949c <__imp_signal>
  402e7e:	nop
  402e7f:	nop
  402e80:	jmp    QWORD PTR [rip+0x660e]        # 409494 <__imp_memcpy>
  402e86:	nop
  402e87:	nop
  402e88:	jmp    QWORD PTR [rip+0x65fe]        # 40948c <__imp_malloc>
  402e8e:	nop
  402e8f:	nop
  402e90:	jmp    QWORD PTR [rip+0x65ee]        # 409484 <__imp_fwrite>
  402e96:	nop
  402e97:	nop
  402e98:	jmp    QWORD PTR [rip+0x65de]        # 40947c <__imp_free>
  402e9e:	nop
  402e9f:	nop
  402ea0:	jmp    QWORD PTR [rip+0x65ce]        # 409474 <__imp_fprintf>
  402ea6:	nop
  402ea7:	nop
  402ea8:	jmp    QWORD PTR [rip+0x65be]        # 40946c <__imp_exit>
  402eae:	nop
  402eaf:	nop
  402eb0:	jmp    QWORD PTR [rip+0x65ae]        # 409464 <__imp_calloc>
  402eb6:	nop
  402eb7:	nop
  402eb8:	jmp    QWORD PTR [rip+0x659e]        # 40945c <__imp_abort>
  402ebe:	nop
  402ebf:	nop
  402ec0:	jmp    QWORD PTR [rip+0x658e]        # 409454 <__imp__unlock>
  402ec6:	nop
  402ec7:	nop
  402ec8:	jmp    QWORD PTR [rip+0x657e]        # 40944c <__imp__onexit>
  402ece:	nop
  402ecf:	nop
  402ed0:	jmp    QWORD PTR [rip+0x656e]        # 409444 <__imp__lock>
  402ed6:	nop
  402ed7:	nop
  402ed8:	jmp    QWORD PTR [rip+0x655e]        # 40943c <__imp__initterm>
  402ede:	nop
  402edf:	nop
  402ee0:	jmp    QWORD PTR [rip+0x6546]        # 40942c <__imp__cexit>
  402ee6:	nop
  402ee7:	nop
  402ee8:	jmp    QWORD PTR [rip+0x6536]        # 409424 <__imp__amsg_exit>
  402eee:	nop
  402eef:	nop
  402ef0:	jmp    QWORD PTR [rip+0x651e]        # 409414 <__imp___setusermatherr>
  402ef6:	nop
  402ef7:	nop
  402ef8:	jmp    QWORD PTR [rip+0x650e]        # 40940c <__imp___set_app_type>
  402efe:	nop
  402eff:	nop
  402f00:	jmp    QWORD PTR [rip+0x64fe]        # 409404 <__imp___lconv_init>
  402f06:	nop
  402f07:	nop
  402f08:	jmp    QWORD PTR [rip+0x64ee]        # 4093fc <__imp___iob_func>
  402f0e:	nop
  402f0f:	nop
  402f10:	jmp    QWORD PTR [rip+0x64d6]        # 4093ec <__imp___getmainargs>
  402f16:	nop
  402f17:	nop
  402f18:	jmp    QWORD PTR [rip+0x64c6]        # 4093e4 <__imp___dllonexit>
  402f1e:	nop
  402f1f:	nop
  402f20:	jmp    QWORD PTR [rip+0x64a6]        # 4093cc <__imp___C_specific_handler>
  402f26:	nop
  402f27:	nop
  402f28:	nop    DWORD PTR [rax+rax*1+0x0]
  402f30:	mov    rax,QWORD PTR [rip+0x5b39]        # 408a70 <_head_lib64_libkernel32_a-0x590>
  402f37:	ret    
  402f38:	nop    DWORD PTR [rax+rax*1+0x0]
  402f40:	mov    rax,rcx
  402f43:	xchg   QWORD PTR [rip+0x5b26],rax        # 408a70 <_head_lib64_libkernel32_a-0x590>
  402f4a:	ret    
  402f4b:	nop
  402f4c:	nop
  402f4d:	nop
  402f4e:	nop
  402f4f:	nop
  402f50:	jmp    QWORD PTR [rip+0x656e]        # 4094c4 <__imp_ShellExecuteA>
  402f56:	nop
  402f57:	nop
  402f58:	nop    DWORD PTR [rax+rax*1+0x0]
  402f60:	jmp    QWORD PTR [rip+0x656e]        # 4094d4 <__imp_GetDesktopWindow>
  402f66:	nop
  402f67:	nop
  402f68:	nop    DWORD PTR [rax+rax*1+0x0]
  402f70:	jmp    QWORD PTR [rip+0x6446]        # 4093bc <__imp_VirtualQuery>
  402f76:	nop
  402f77:	nop
  402f78:	jmp    QWORD PTR [rip+0x6436]        # 4093b4 <__imp_VirtualProtect>
  402f7e:	nop
  402f7f:	nop
  402f80:	jmp    QWORD PTR [rip+0x6426]        # 4093ac <__imp_UnhandledExceptionFilter>
  402f86:	nop
  402f87:	nop
  402f88:	jmp    QWORD PTR [rip+0x6416]        # 4093a4 <__imp_TlsGetValue>
  402f8e:	nop
  402f8f:	nop
  402f90:	jmp    QWORD PTR [rip+0x6406]        # 40939c <__imp_TerminateProcess>
  402f96:	nop
  402f97:	nop
  402f98:	jmp    QWORD PTR [rip+0x63f6]        # 409394 <__imp_Sleep>
  402f9e:	nop
  402f9f:	nop
  402fa0:	jmp    QWORD PTR [rip+0x63e6]        # 40938c <__imp_SetUnhandledExceptionFilter>
  402fa6:	nop
  402fa7:	nop
  402fa8:	jmp    QWORD PTR [rip+0x63d6]        # 409384 <__imp_RtlVirtualUnwind>
  402fae:	nop
  402faf:	nop
  402fb0:	jmp    QWORD PTR [rip+0x63c6]        # 40937c <__imp_RtlLookupFunctionEntry>
  402fb6:	nop
  402fb7:	nop
  402fb8:	jmp    QWORD PTR [rip+0x63b6]        # 409374 <__imp_RtlCaptureContext>
  402fbe:	nop
  402fbf:	nop
  402fc0:	jmp    QWORD PTR [rip+0x63a6]        # 40936c <__imp_RtlAddFunctionTable>
  402fc6:	nop
  402fc7:	nop
  402fc8:	jmp    QWORD PTR [rip+0x6396]        # 409364 <__imp_QueryPerformanceCounter>
  402fce:	nop
  402fcf:	nop
  402fd0:	jmp    QWORD PTR [rip+0x6386]        # 40935c <__imp_LeaveCriticalSection>
  402fd6:	nop
  402fd7:	nop
  402fd8:	jmp    QWORD PTR [rip+0x6376]        # 409354 <__imp_InitializeCriticalSection>
  402fde:	nop
  402fdf:	nop
  402fe0:	jmp    QWORD PTR [rip+0x6366]        # 40934c <__imp_GetTickCount>
  402fe6:	nop
  402fe7:	nop
  402fe8:	jmp    QWORD PTR [rip+0x6356]        # 409344 <__imp_GetSystemTimeAsFileTime>
  402fee:	nop
  402fef:	nop
  402ff0:	jmp    QWORD PTR [rip+0x6346]        # 40933c <__imp_GetStartupInfoA>
  402ff6:	nop
  402ff7:	nop
  402ff8:	jmp    QWORD PTR [rip+0x6336]        # 409334 <__imp_GetProcAddress>
  402ffe:	nop
  402fff:	nop
  403000:	jmp    QWORD PTR [rip+0x6326]        # 40932c <__imp_GetModuleHandleA>
  403006:	nop
  403007:	nop
  403008:	jmp    QWORD PTR [rip+0x6316]        # 409324 <__imp_GetLastError>
  40300e:	nop
  40300f:	nop
  403010:	jmp    QWORD PTR [rip+0x6306]        # 40931c <__imp_GetCurrentThreadId>
  403016:	nop
  403017:	nop
  403018:	jmp    QWORD PTR [rip+0x62f6]        # 409314 <__imp_GetCurrentProcessId>
  40301e:	nop
  40301f:	nop
  403020:	jmp    QWORD PTR [rip+0x62e6]        # 40930c <__imp_GetCurrentProcess>
  403026:	nop
  403027:	nop
  403028:	jmp    QWORD PTR [rip+0x62d6]        # 409304 <__imp_EnterCriticalSection>
  40302e:	nop
  40302f:	nop
  403030:	jmp    QWORD PTR [rip+0x62c6]        # 4092fc <__IAT_start__>
  403036:	nop
  403037:	nop
  403038:	nop    DWORD PTR [rax+rax*1+0x0]
  403040:	sub    rsp,0x28
  403044:	call   401a70 <_head_lib64_libkernel32_a-0x7590>
  403049:	mov    rax,QWORD PTR [rip+0x2750]        # 4057a0 <_head_lib64_libkernel32_a-0x3860>
  403050:	lea    rcx,[rip+0x2429]        # 405480 <_head_lib64_libkernel32_a-0x3b80>
  403057:	mov    rdx,QWORD PTR [rax]
  40305a:	mov    rax,QWORD PTR [rip+0x272f]        # 405790 <_head_lib64_libkernel32_a-0x3870>
  403061:	mov    r8,QWORD PTR [rdx]
  403064:	mov    rax,QWORD PTR [rax]
  403067:	mov    edx,DWORD PTR [rax]
  403069:	add    rsp,0x28
  40306d:	jmp    4018c0 <_head_lib64_libkernel32_a-0x7740>
  403072:	nop
  403073:	nop
  403074:	nop
  403075:	nop
  403076:	nop
  403077:	nop
  403078:	nop
  403079:	nop
  40307a:	nop
  40307b:	nop
  40307c:	nop
  40307d:	nop
  40307e:	nop
  40307f:	nop
  403080:	push   rbp
  403081:	mov    rbp,rsp
  403084:	pop    rbp
  403085:	jmp    401540 <_head_lib64_libkernel32_a-0x7ac0>
  40308a:	nop
  40308b:	nop
  40308c:	nop
  40308d:	nop
  40308e:	nop
  40308f:	nop
  403090:	(bad)  
  403091:	(bad)  
  403092:	(bad)  
  403093:	(bad)  
  403094:	(bad)  
  403095:	(bad)  
  403096:	(bad)  
  403097:	inc    DWORD PTR [rax+0x4030]
	...
  4030a5:	add    BYTE PTR [rax],al
  4030a7:	add    bh,bh
  4030a9:	(bad)  
  4030aa:	(bad)  
  4030ab:	(bad)  
  4030ac:	(bad)  
  4030ad:	(bad)  
  4030ae:	(bad)  
  4030af:	inc    DWORD PTR [rax]
  4030b1:	add    BYTE PTR [rax],al
  4030b3:	add    BYTE PTR [rax],al
  4030b5:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	mov    al,0x30
  404012:	add    BYTE PTR [rax],al
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    BYTE PTR [rax],dh
  404061:	(bad)  
  404062:	add    BYTE PTR [rax],al
  404065:	add    BYTE PTR [rax],al
  404067:	add    BYTE PTR [rax+0x2f],al
  40406a:	add    BYTE PTR [rax],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rdx],dh
  404071:	movabs ds:0x2b992ddf,al
  40407a:	add    BYTE PTR [rax],al
  40407c:	add    BYTE PTR [rax],al
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	ins    BYTE PTR es:[rdi],dx
  405001:	imul   esp,DWORD PTR [rdx+0x67],0x312d6a63
  405008:	ss cs fs ins BYTE PTR es:[rdi],dx
  40500c:	ins    BYTE PTR es:[rdi],dx
  40500d:	add    BYTE PTR [rdi+0x4a],bl
  405010:	jbe    405071 <_head_lib64_libkernel32_a-0x3f8f>
  405012:	push   rdx
  405013:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
  40501c:	(bad)  
  40501d:	jae    405092 <_head_lib64_libkernel32_a-0x3f6e>
  40501f:	gs jae 405022 <_head_lib64_libkernel32_a-0x3fde>
	...
  40503e:	add    BYTE PTR [rax],al
  405040:	imul   ebp,DWORD PTR [ebp+0x70],0x732d3032
  405048:	je     4050ae <_head_lib64_libkernel32_a-0x3f52>
  40504a:	sub    eax,0x67756c70
  40504f:	sub    eax,0x736e69
  405054:	push   rbp
  405055:	push   rsp
  405056:	rex.RX sub eax,0x706f0038
  40505c:	outs   dx,BYTE PTR gs:[rsi]
  40505e:	add    BYTE PTR [rax],al
  405060:	push   rsp
  405061:	push   0x706f2065
  405066:	gs jb  4050ca <_head_lib64_libkernel32_a-0x3f36>
  405069:	je     4050d4 <_head_lib64_libkernel32_a-0x3f2c>
  40506b:	outs   dx,BYTE PTR ds:[rsi]
  40506c:	and    BYTE PTR [ebx+0x79],dh
  405070:	jae    4050e6 <_head_lib64_libkernel32_a-0x3f1a>
  405072:	gs ins DWORD PTR es:[rdi],dx
  405074:	and    BYTE PTR [rcx+0x73],ch
  405077:	and    BYTE PTR [rdi+0x75],ch
  40507a:	je     40509c <_head_lib64_libkernel32_a-0x3f64>
  40507c:	outs   dx,DWORD PTR ds:[rsi]
  40507d:	data16 and BYTE PTR [rbp+0x65],ch
  405081:	ins    DWORD PTR es:[rdi],dx
  405082:	outs   dx,DWORD PTR ds:[rsi]
  405083:	jb     4050fe <_head_lib64_libkernel32_a-0x3f02>
  405085:	and    BYTE PTR [rdi+0x72],ch
  405088:	and    BYTE PTR [rdx+0x65],dh
  40508b:	jae    4050fc <_head_lib64_libkernel32_a-0x3f04>
  40508d:	jne    405101 <_head_lib64_libkernel32_a-0x3eff>
  40508f:	movsxd esp,DWORD PTR [rbp+0x73]
  405092:	add    BYTE PTR cs:[rax],al
  405095:	add    BYTE PTR [rax],al
  405097:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40509b:	and    BYTE PTR [rbx+0x70],dh
  40509e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4050a2:	imul   esp,DWORD PTR [rbp+0x64],0x6c696620
  4050a9:	and    BYTE PTR gs:[rdi+0x61],dh
  4050ad:	jae    4050cf <_head_lib64_libkernel32_a-0x3f31>
  4050af:	outs   dx,BYTE PTR ds:[rsi]
  4050b0:	outs   dx,DWORD PTR ds:[rsi]
  4050b1:	je     4050d3 <_head_lib64_libkernel32_a-0x3f2d>
  4050b3:	outs   dx,WORD PTR ds:[rsi]
  4050b5:	jne    405125 <_head_lib64_libkernel32_a-0x3edb>
  4050b7:	fs add BYTE PTR cs:[rax],al
  4050bb:	add    BYTE PTR [rax],al
  4050bd:	add    BYTE PTR [rax],al
  4050bf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4050c3:	and    BYTE PTR [rbx+0x70],dh
  4050c6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4050ca:	imul   esp,DWORD PTR [rbp+0x64],0x74617020
  4050d1:	push   0x73617720
  4050d6:	and    BYTE PTR [rsi+0x6f],ch
  4050d9:	je     4050fb <_head_lib64_libkernel32_a-0x3f05>
  4050db:	outs   dx,WORD PTR ds:[rsi]
  4050dd:	jne    40514d <_head_lib64_libkernel32_a-0x3eb3>
  4050df:	fs add BYTE PTR cs:[rax],al
  4050e3:	add    BYTE PTR [rax],al
  4050e5:	add    BYTE PTR [rax],al
  4050e7:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4050eb:	and    BYTE PTR [rsi],ch
  4050ed:	gs js  405155 <_head_lib64_libkernel32_a-0x3eab>
  4050f0:	and    BYTE PTR [rsi+0x69],ah
  4050f3:	ins    BYTE PTR es:[rdi],dx
  4050f4:	and    BYTE PTR gs:[rcx+0x73],ch
  4050f8:	and    BYTE PTR [rcx+0x6e],ch
  4050fb:	jbe    40515e <_head_lib64_libkernel32_a-0x3ea2>
  4050fd:	ins    BYTE PTR es:[rdi],dx
  4050fe:	imul   esp,DWORD PTR [rax+riz*1+0x28],0x2d6e6f6e
  405106:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  40510e:	je     405130 <_head_lib64_libkernel32_a-0x3ed0>
  405110:	push   rdi
  405111:	imul   ebp,DWORD PTR [rsi+0x33],0x652e2032
  405118:	js     40517f <_head_lib64_libkernel32_a-0x3e81>
  40511a:	and    BYTE PTR [rdi+0x72],ch
  40511d:	and    BYTE PTR [rbp+0x72],ah
  405120:	jb     405191 <_head_lib64_libkernel32_a-0x3e6f>
  405122:	jb     405144 <_head_lib64_libkernel32_a-0x3ebc>
  405124:	imul   ebp,DWORD PTR [rsi+0x20],0x6578652e
  40512b:	and    BYTE PTR [rcx+0x6d],ch
  40512e:	(bad)  
  40512f:	sub    DWORD PTR gs:[esi],ebp
  405133:	add    BYTE PTR [rax],al
  405135:	add    BYTE PTR [rax],al
  405137:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40513b:	and    BYTE PTR [rdi+0x70],ch
  40513e:	gs jb  4051a2 <_head_lib64_libkernel32_a-0x3e5e>
  405141:	je     4051ac <_head_lib64_libkernel32_a-0x3e54>
  405143:	outs   dx,BYTE PTR ds:[rsi]
  405144:	and    BYTE PTR [ebx+0x79],dh
  405148:	jae    4051be <_head_lib64_libkernel32_a-0x3e42>
  40514a:	gs ins DWORD PTR es:[rdi],dx
  40514c:	and    BYTE PTR [rbp+riz*2+0x6e],ah
  405150:	imul   esp,DWORD PTR [rbp+0x64],0x63636120
  405157:	gs jae 4051cd <_head_lib64_libkernel32_a-0x3e33>
  40515a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40515e:	je     4051c8 <_head_lib64_libkernel32_a-0x3e38>
  405160:	and    BYTE PTR gs:[rbx+0x70],dh
  405164:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  405168:	imul   esp,DWORD PTR [rbp+0x64],0x6c696620
  40516f:	gs add BYTE PTR cs:[rax],al
  405173:	add    BYTE PTR [rax],al
  405175:	add    BYTE PTR [rax],al
  405177:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40517b:	and    BYTE PTR [rsi+0x69],ah
  40517e:	ins    BYTE PTR es:[rdi],dx
  40517f:	and    BYTE PTR gs:[rsi+0x61],ch
  405183:	ins    DWORD PTR es:[rdi],dx
  405184:	and    BYTE PTR gs:[rcx+0x73],ah
  405188:	jae    4051f9 <_head_lib64_libkernel32_a-0x3e07>
  40518a:	movsxd ebp,DWORD PTR [rcx+0x61]
  40518d:	je     4051f8 <_head_lib64_libkernel32_a-0x3e08>
  40518f:	outs   dx,DWORD PTR ds:[rsi]
  405190:	outs   dx,BYTE PTR ds:[rsi]
  405191:	and    BYTE PTR [rcx+0x73],ch
  405194:	and    BYTE PTR [rcx+0x6e],ch
  405197:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40519a:	jo     405208 <_head_lib64_libkernel32_a-0x3df8>
  40519c:	gs je  405204 <_head_lib64_libkernel32_a-0x3dfc>
  40519f:	and    BYTE PTR [rdi+0x72],ch
  4051a2:	and    BYTE PTR [rcx+0x6e],ch
  4051a5:	jbe    405208 <_head_lib64_libkernel32_a-0x3df8>
  4051a7:	ins    BYTE PTR es:[rdi],dx
  4051a8:	imul   esp,DWORD PTR [rsi+rbp*1+0x0],0x20454444
  4051b0:	je     405224 <_head_lib64_libkernel32_a-0x3ddc>
  4051b2:	(bad)  
  4051b3:	outs   dx,BYTE PTR ds:[rsi]
  4051b4:	jae    405217 <_head_lib64_libkernel32_a-0x3de9>
  4051b6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4051ba:	outs   dx,BYTE PTR ds:[rsi]
  4051bb:	and    BYTE PTR [rdx+0x75],ah
  4051be:	jae    405239 <_head_lib64_libkernel32_a-0x3dc7>
  4051c0:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4051c4:	and    BYTE PTR [rsp+rax*2+0x45],al
  4051c8:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4051cc:	outs   dx,BYTE PTR ds:[rsi]
  4051cd:	jae    405230 <_head_lib64_libkernel32_a-0x3dd0>
  4051cf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4051d3:	outs   dx,BYTE PTR ds:[rsi]
  4051d4:	and    BYTE PTR [rsi+0x61],ah
  4051d7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e
  4051df:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4051e3:	and    BYTE PTR [rsp+rax*2+0x45],al
  4051e7:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4051eb:	outs   dx,BYTE PTR ds:[rsi]
  4051ec:	jae    40524f <_head_lib64_libkernel32_a-0x3db1>
  4051ee:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4051f2:	outs   dx,BYTE PTR ds:[rsi]
  4051f3:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  4051f7:	gs and BYTE PTR fs:[rdi+0x75],ch
  4051fc:	je     40522c <_head_lib64_libkernel32_a-0x3dd4>
  4051fe:	add    BYTE PTR [rax],al
  405200:	push   rsp
  405201:	push   0x70732065
  405206:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40520a:	imul   esp,DWORD PTR [rbp+0x64],0x4c4c4420
  405211:	and    BYTE PTR [rdi+0x61],dh
  405214:	jae    405236 <_head_lib64_libkernel32_a-0x3dca>
  405216:	outs   dx,BYTE PTR ds:[rsi]
  405217:	outs   dx,DWORD PTR ds:[rsi]
  405218:	je     40523a <_head_lib64_libkernel32_a-0x3dc6>
  40521a:	outs   dx,WORD PTR ds:[rsi]
  40521c:	jne    40528c <_head_lib64_libkernel32_a-0x3d74>
  40521e:	fs add BYTE PTR cs:[rax],al
  405222:	add    BYTE PTR [rax],al
  405224:	add    BYTE PTR [rax],al
  405226:	add    BYTE PTR [rax],al
  405228:	push   rsp
  405229:	push   0x20657265
  40522e:	imul   esi,DWORD PTR [rbx+0x20],0x61206f6e
  405235:	jo     4052a7 <_head_lib64_libkernel32_a-0x3d59>
  405237:	ins    BYTE PTR es:[rdi],dx
  405238:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40523f:	and    BYTE PTR [rcx+0x73],ah
  405242:	jae    4052b3 <_head_lib64_libkernel32_a-0x3d4d>
  405244:	movsxd ebp,DWORD PTR [rcx+0x61]
  405247:	je     4052ae <_head_lib64_libkernel32_a-0x3d52>
  405249:	and    BYTE PTR fs:[rdi+0x69],dh
  40524d:	je     4052b7 <_head_lib64_libkernel32_a-0x3d49>
  40524f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  405253:	and    BYTE PTR [rdi+0x69],ah
  405256:	jbe    4052bd <_head_lib64_libkernel32_a-0x3d43>
  405258:	outs   dx,BYTE PTR ds:[rsi]
  405259:	and    BYTE PTR [rsi+0x69],ah
  40525c:	ins    BYTE PTR es:[rdi],dx
  40525d:	and    BYTE PTR gs:[rsi+0x61],ch
  405261:	ins    DWORD PTR es:[rdi],dx
  405262:	and    BYTE PTR gs:[rbp+0x78],ah
  405266:	je     4052cd <_head_lib64_libkernel32_a-0x3d33>
  405268:	outs   dx,BYTE PTR ds:[rsi]
  405269:	jae    4052d4 <_head_lib64_libkernel32_a-0x3d2c>
  40526b:	outs   dx,DWORD PTR ds:[rsi]
  40526c:	outs   dx,BYTE PTR ds:[rsi]
  40526d:	add    BYTE PTR cs:[rax],al
  405270:	push   rsp
  405271:	push   0x20657265
  405276:	ja     4052d9 <_head_lib64_libkernel32_a-0x3d27>
  405278:	jae    40529a <_head_lib64_libkernel32_a-0x3d66>
  40527a:	outs   dx,BYTE PTR ds:[rsi]
  40527b:	outs   dx,DWORD PTR ds:[rsi]
  40527c:	je     40529e <_head_lib64_libkernel32_a-0x3d62>
  40527e:	outs   dx,BYTE PTR gs:[rsi]
  405280:	outs   dx,DWORD PTR ds:[rsi]
  405281:	jne    4052ea <_head_lib64_libkernel32_a-0x3d16>
  405283:	push   0x6d656d20
  405288:	outs   dx,DWORD PTR ds:[rsi]
  405289:	jb     405304 <_head_lib64_libkernel32_a-0x3cfc>
  40528b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40528f:	movsxd ebp,DWORD PTR [rdi+0x6d]
  405292:	jo     405300 <_head_lib64_libkernel32_a-0x3d00>
  405294:	gs je  4052fc <_head_lib64_libkernel32_a-0x3d04>
  405297:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40529b:	and    BYTE PTR [rdi+0x70],ch
  40529e:	gs jb  405302 <_head_lib64_libkernel32_a-0x3cfe>
  4052a1:	je     40530c <_head_lib64_libkernel32_a-0x3cf4>
  4052a3:	outs   dx,DWORD PTR ds:[rsi]
  4052a4:	outs   dx,BYTE PTR ds:[rsi]
  4052a5:	add    BYTE PTR cs:[rcx+0x20],al
  4052a9:	jae    405313 <_head_lib64_libkernel32_a-0x3ced>
  4052ab:	(bad)  
  4052ac:	jb     405317 <_head_lib64_libkernel32_a-0x3ce9>
  4052ae:	outs   dx,BYTE PTR ds:[rsi]
  4052af:	and    BYTE PTR [esi+0x69],dh
  4052b3:	outs   dx,DWORD PTR ds:[rsi]
  4052b4:	ins    BYTE PTR es:[rdi],dx
  4052b5:	(bad)  
  4052b6:	je     405321 <_head_lib64_libkernel32_a-0x3cdf>
  4052b8:	outs   dx,DWORD PTR ds:[rsi]
  4052b9:	outs   dx,BYTE PTR ds:[rsi]
  4052ba:	and    BYTE PTR [rdi+0x63],ch
  4052bd:	movsxd esi,DWORD PTR [rbp+0x72]
  4052c0:	jb     405327 <_head_lib64_libkernel32_a-0x3cd9>
  4052c2:	fs add BYTE PTR cs:[rax],al
  4052c6:	add    BYTE PTR [rax],al
  4052c8:	push   rbp
  4052c9:	outs   dx,BYTE PTR ds:[rsi]
  4052ca:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4052ce:	outs   dx,BYTE PTR ds:[rsi]
  4052cf:	and    BYTE PTR [rbp+0x69],cl
  4052d2:	movsxd esi,DWORD PTR [rdx+0x6f]
  4052d5:	jae    405346 <_head_lib64_libkernel32_a-0x3cba>
  4052d7:	data16 je 4052fa <_head_lib64_libkernel32_a-0x3d06>
  4052da:	push   rdi
  4052db:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
  4052e2:	gs jb  405357 <_head_lib64_libkernel32_a-0x3ca9>
  4052e5:	outs   dx,DWORD PTR ds:[rsi]
  4052e6:	jb     405316 <_head_lib64_libkernel32_a-0x3cea>
  4052e8:	add    BYTE PTR [rsi+0x61],al
  4052eb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4052f3:	outs   dx,DWORD PTR ds:[rsi]
  4052f4:	jo     40535b <_head_lib64_libkernel32_a-0x3ca5>
  4052f6:	outs   dx,BYTE PTR ds:[rsi]
  4052f7:	and    BYTE PTR [rdi],ah
  4052f9:	and    eax,0x203a2773
  4052fe:	and    eax,0x73
  405303:	add    cl,dl
  405305:	(bad)  
  405306:	(bad)  
  405307:	jmp    rbp
  405309:	(bad)  
  40530a:	(bad)  
  40530b:	(bad)  
  40530c:	mov    ebp,0xa9ffffc4
  405311:	(bad)  
  405312:	(bad)  
  405313:	jmp    rbp
  405315:	(bad)  
  405316:	(bad)  
  405317:	call   QWORD PTR [rbp-0x1a00003c]
  40531d:	(bad)  
  40531e:	(bad)  
  40531f:	jmp    rbp
  405321:	(bad)  
  405322:	(bad)  
  405323:	inc    DWORD PTR [rcx-0x1a00003c]
  405329:	(bad)  
  40532a:	(bad)  
  40532b:	jmp    rbp
  40532d:	(bad)  
  40532e:	(bad)  
  40532f:	jmp    FWORD PTR [rbp-0x3c]
  405332:	(bad)  
  405333:	jmp    rbp
  405335:	(bad)  
  405336:	(bad)  
  405337:	jmp    rbp
  405339:	(bad)  
  40533a:	(bad)  
  40533b:	jmp    rbp
  40533d:	(bad)  
  40533e:	(bad)  
  40533f:	jmp    rbp
  405341:	(bad)  
  405342:	(bad)  
  405343:	jmp    rbp
  405345:	(bad)  
  405346:	(bad)  
  405347:	jmp    rbp
  405349:	(bad)  
  40534a:	(bad)  
  40534b:	jmp    rbp
  40534d:	(bad)  
  40534e:	(bad)  
  40534f:	jmp    rbp
  405351:	(bad)  
  405352:	(bad)  
  405353:	jmp    rbp
  405355:	(bad)  
  405356:	(bad)  
  405357:	jmp    rbp
  405359:	(bad)  
  40535a:	(bad)  
  40535b:	jmp    rbp
  40535d:	(bad)  
  40535e:	(bad)  
  40535f:	jmp    rbp
  405361:	(bad)  
  405362:	(bad)  
  405363:	jmp    rbp
  405365:	(bad)  
  405366:	(bad)  
  405367:	jmp    rbp
  405369:	(bad)  
  40536a:	(bad)  
  40536b:	call   FWORD PTR [rcx-0x3c]
  40536e:	(bad)  
  40536f:	inc    DWORD PTR [rbp-0x3c]
  405372:	(bad)  
  405373:	push   QWORD PTR [rcx]
  405375:	(bad)  
  405376:	(bad)  
  405377:	call   FWORD PTR [rip+0xcffffc4]        # d405341 <libintl_8_dll_iname+0xcffb835>
  40537d:	(bad)  
  40537e:	(bad)  
  40537f:	(bad)  
  405380:	sti    
  405381:	ret    
  405382:	(bad)  
  405383:	call   FWORD PTR [rbx+0x48ffffc3]
  405389:	outs   dx,BYTE PTR gs:[rsi]
  40538b:	jb     4053f6 <_head_lib64_libkernel32_a-0x3c0a>
  40538d:	imul   esp,DWORD PTR [rax],0x42
  405390:	jb     4053fb <_head_lib64_libkernel32_a-0x3c05>
  405392:	js     4053b4 <_head_lib64_libkernel32_a-0x3c4c>
  405394:	rex.B outs dx,BYTE PTR ds:[rsi]
  405396:	fs gs jb 40540d <_head_lib64_libkernel32_a-0x3bf3>
  40539a:	outs   dx,BYTE PTR gs:[rsi]
  40539c:	and    BYTE PTR [rdx+riz*2],bh
  40539f:	jb     40540a <_head_lib64_libkernel32_a-0x3bf6>
  4053a1:	js     4053e3 <_head_lib64_libkernel32_a-0x3c1d>
  4053a3:	imul   ebp,DWORD PTR [ebp+0x70],0x67726f2e
  4053ab:	add    BYTE PTR ds:[rax],al
  4053ae:	add    BYTE PTR [rax],al
  4053b0:	rex.WRXB jo 405418 <_head_lib64_libkernel32_a-0x3be8>
  4053b3:	outs   dx,BYTE PTR ds:[rsi]
  4053b4:	jae    4053d6 <_head_lib64_libkernel32_a-0x3c2a>
  4053b6:	je     405420 <_head_lib64_libkernel32_a-0x3be0>
  4053b8:	and    BYTE PTR gs:[rdi+0x69],ah
  4053bc:	jbe    405423 <_head_lib64_libkernel32_a-0x3bdd>
  4053be:	outs   dx,BYTE PTR ds:[rsi]
  4053bf:	and    BYTE PTR [rbp+0x52],dl
  4053c2:	rex.WR and BYTE PTR [rcx+0x6e],r13b
  4053c6:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4053ca:	and    BYTE PTR [rbp+0x73],dh
  4053cd:	gs jb  4053f0 <_head_lib64_libkernel32_a-0x3c10>
  4053d0:	jae    405442 <_head_lib64_libkernel32_a-0x3bbe>
  4053d2:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4053d6:	imul   esp,DWORD PTR [rbp+0x64],0x62657720
  4053dd:	and    BYTE PTR [rdx+0x72],ah
  4053e0:	outs   dx,DWORD PTR ds:[rsi]
  4053e1:	ja     405456 <_head_lib64_libkernel32_a-0x3baa>
  4053e3:	gs jb  405414 <_head_lib64_libkernel32_a-0x3bec>
  4053e6:	add    BYTE PTR [rax],al
  4053e8:	rex.WRXB jo 405450 <_head_lib64_libkernel32_a-0x3bb0>
  4053eb:	outs   dx,BYTE PTR ds:[rsi]
  4053ec:	and    BYTE PTR [rcx+0x6e],ah
  4053ef:	and    BYTE PTR [rbp+0x52],dl
  4053f2:	rex.WR and BYTE PTR [rcx+0x6e],r13b
  4053f6:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4053fa:	and    BYTE PTR [rbp+0x73],dh
  4053fd:	gs jb  405420 <_head_lib64_libkernel32_a-0x3be0>
  405400:	jae    405472 <_head_lib64_libkernel32_a-0x3b8e>
  405402:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  405406:	imul   esp,DWORD PTR [rbp+0x64],0x62657720
  40540d:	and    BYTE PTR [rdx+0x72],ah
  405410:	outs   dx,DWORD PTR ds:[rsi]
  405411:	ja     405486 <_head_lib64_libkernel32_a-0x3b7a>
  405413:	gs jb  405416 <_head_lib64_libkernel32_a-0x3bea>
  405416:	jo     405484 <_head_lib64_libkernel32_a-0x3b7c>
  405418:	jne    405481 <_head_lib64_libkernel32_a-0x3b7f>
  40541a:	sub    eax,0x772d6e69
  40541f:	gs (bad) 
  405421:	sub    eax,0x776f7262
  405426:	jae    40548d <_head_lib64_libkernel32_a-0x3b73>
  405428:	jb     40542a <_head_lib64_libkernel32_a-0x3bd6>
  40542a:	xor    dh,BYTE PTR [rax]
  40542c:	xor    BYTE PTR [rbx],dh
  40542e:	(bad)  
  40542f:	xor    BYTE PTR [rcx],bh
  405431:	(bad)  
  405432:	xor    DWORD PTR [rsi],esi
  405434:	add    BYTE PTR [rdx],dh
  405436:	xor    BYTE PTR [rax],dh
  405438:	xor    eax,DWORD PTR [rax]
  40543a:	jne    4054ae <_head_lib64_libkernel32_a-0x3b52>
  40543c:	ins    BYTE PTR es:[rdi],dx
  40543d:	add    BYTE PTR [rbp+0x52],dl
  405440:	rex.WR and BYTE PTR [rdi+rbp*2+0x20],r14b
  405445:	outs   dx,DWORD PTR ds:[rsi]
  405446:	jo     4054ad <_head_lib64_libkernel32_a-0x3b53>
  405448:	outs   dx,BYTE PTR ds:[rsi]
  405449:	add    BYTE PTR [rax],al
  40544b:	add    BYTE PTR [rax],al
  40544d:	add    BYTE PTR [rax],al
  40544f:	add    BYTE PTR [rax+rax*1],al
  405452:	add    BYTE PTR [rax],al
  405454:	add    BYTE PTR [rax],al
  405456:	add    BYTE PTR [rax],al
  405458:	cmp    dl,BYTE PTR [rax+rax*2+0x0]
  40545c:	add    BYTE PTR [rax],al
  40545e:	add    BYTE PTR [rax],al
  405460:	ds push rsp
  405462:	add    BYTE PTR [rax],al
	...
  405491:	sbb    BYTE PTR [rax+0x0],al
  405494:	add    BYTE PTR [rax],al
  405496:	add    BYTE PTR [rax],al
  405498:	mov    al,0x15
  40549a:	add    BYTE PTR [rax],al
  40549d:	add    BYTE PTR [rax],al
  40549f:	add    BYTE PTR [rax],al
  4054a1:	xchg   BYTE PTR [rax+0x0],al
  4054a4:	add    BYTE PTR [rax],al
  4054a6:	add    BYTE PTR [rax],al
  4054a8:	add    BYTE PTR [rcx+0x40],al
  4054ae:	add    BYTE PTR [rax],al
  4054b0:	rcr    BYTE PTR [rax+rax*2],0x0
	...
  4054c0:	rex.B jb 40552a <_head_lib64_libkernel32_a-0x3ad6>
  4054c3:	jne    405532 <_head_lib64_libkernel32_a-0x3ace>
  4054c5:	outs   dx,BYTE PTR gs:[rsi]
  4054c7:	je     4054e9 <_head_lib64_libkernel32_a-0x3b17>
  4054c9:	outs   dx,DWORD PTR fs:[rsi]
  4054cb:	ins    DWORD PTR es:[rdi],dx
  4054cc:	(bad)  
  4054cd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4054d4:	jb     4054f6 <_head_lib64_libkernel32_a-0x3b0a>
  4054d6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4054da:	rex.B
  4054db:	rex.WB
  4054dc:	rex.WRX sub QWORD PTR [rax],r8
  4054df:	rex.B jb 405549 <_head_lib64_libkernel32_a-0x3ab7>
  4054e2:	jne    405551 <_head_lib64_libkernel32_a-0x3aaf>
  4054e4:	outs   dx,BYTE PTR gs:[rsi]
  4054e6:	je     405508 <_head_lib64_libkernel32_a-0x3af8>
  4054e8:	jae    405553 <_head_lib64_libkernel32_a-0x3aad>
  4054ea:	outs   dx,BYTE PTR ds:[rsi]
  4054eb:	addr32 jne 40555a <_head_lib64_libkernel32_a-0x3aa6>
  4054ee:	(bad)  
  4054ef:	jb     40555a <_head_lib64_libkernel32_a-0x3aa6>
  4054f1:	je     40556c <_head_lib64_libkernel32_a-0x3a94>
  4054f3:	and    BYTE PTR [rax],ch
  4054f5:	push   rbx
  4054f6:	rex.WB
  4054f7:	rex.RXB
  4054f8:	rex.WRX sub QWORD PTR [rax],r8
  4054fb:	add    BYTE PTR [rax],al
  4054fd:	add    BYTE PTR [rax],al
  4054ff:	add    BYTE PTR [rdi+0x76],cl
  405502:	gs jb  40556b <_head_lib64_libkernel32_a-0x3a95>
  405505:	ins    BYTE PTR es:[rdi],dx
  405506:	outs   dx,DWORD PTR ds:[rsi]
  405507:	ja     405529 <_head_lib64_libkernel32_a-0x3ad7>
  405509:	jb     40556c <_head_lib64_libkernel32_a-0x3a94>
  40550b:	outs   dx,BYTE PTR ds:[rsi]
  40550c:	and    BYTE PTR gs:[ebp+0x72],ah
  405511:	jb     405582 <_head_lib64_libkernel32_a-0x3a7e>
  405513:	jb     405535 <_head_lib64_libkernel32_a-0x3acb>
  405515:	sub    BYTE PTR [rdi+0x56],cl
  405518:	rex.RB push r10
  40551a:	rex.RX
  40551b:	rex.WR
  40551c:	rex.WRXB push r15
  40551e:	sub    DWORD PTR [rax],eax
  405520:	push   rax
  405521:	(bad)  
  405522:	jb     405598 <_head_lib64_libkernel32_a-0x3a68>
  405524:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40552b:	jae    40554d <_head_lib64_libkernel32_a-0x3ab3>
  40552d:	outs   dx,DWORD PTR ds:[rsi]
  40552e:	data16 and BYTE PTR [rbx+0x69],dh
  405532:	outs   dx,BYTE PTR ds:[esi]
  405534:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40553b:	and    BYTE PTR gs:[rax],ch
  40553e:	push   rax
  40553f:	rex.WR
  405540:	rex.WRXB push r11
  405542:	push   rbx
  405543:	sub    DWORD PTR [rax],eax
  405545:	add    BYTE PTR [rax],al
  405547:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40554b:	(bad)  
  40554c:	ins    BYTE PTR es:[rdi],dx
  40554d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405551:	jae    405573 <_head_lib64_libkernel32_a-0x3a8d>
  405553:	outs   dx,DWORD PTR ds:[rsi]
  405554:	data16 and BYTE PTR [rbx+0x69],dh
  405558:	outs   dx,BYTE PTR ds:[esi]
  40555a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405561:	and    BYTE PTR gs:[rax],ch
  405564:	push   rsp
  405565:	rex.WR
  405566:	rex.WRXB push r11
  405568:	push   rbx
  405569:	sub    DWORD PTR [rax],eax
  40556b:	add    BYTE PTR [rax],al
  40556d:	add    BYTE PTR [rax],al
  40556f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405573:	and    BYTE PTR [rdx+0x65],dh
  405576:	jae    4055ed <_head_lib64_libkernel32_a-0x3a13>
  405578:	ins    BYTE PTR es:[rdi],dx
  405579:	je     40559b <_head_lib64_libkernel32_a-0x3a65>
  40557b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405582:	jae    4055f1 <_head_lib64_libkernel32_a-0x3a0f>
  405584:	(bad)  
  405585:	ins    BYTE PTR es:[rdi],dx
  405586:	ins    BYTE PTR es:[rdi],dx
  405587:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40558b:	(bad)  
  40558c:	and    BYTE PTR gs:[rdx+0x65],dh
  405590:	jo     405604 <_head_lib64_libkernel32_a-0x39fc>
  405592:	gs jae 4055fa <_head_lib64_libkernel32_a-0x3a06>
  405595:	outs   dx,BYTE PTR ds:[rsi]
  405596:	je     4055fd <_head_lib64_libkernel32_a-0x3a03>
  405598:	and    BYTE PTR fs:[rax],ch
  40559b:	push   rbp
  40559c:	rex.WRX
  40559d:	rex.R
  40559e:	rex.RB push r10
  4055a0:	rex.RX
  4055a1:	rex.WR
  4055a2:	rex.WRXB push r15
  4055a4:	sub    DWORD PTR [rax],eax
  4055a6:	push   rbp
  4055a7:	outs   dx,BYTE PTR ds:[rsi]
  4055a8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4055ac:	outs   dx,BYTE PTR ds:[rsi]
  4055ad:	and    BYTE PTR [rbp+0x72],ah
  4055b0:	jb     405621 <_head_lib64_libkernel32_a-0x39df>
  4055b2:	jb     4055b4 <_head_lib64_libkernel32_a-0x3a4c>
  4055b4:	add    BYTE PTR [rax],al
  4055b6:	add    BYTE PTR [rax],al
  4055b8:	pop    rdi
  4055b9:	ins    DWORD PTR es:[rdi],dx
  4055ba:	(bad)  
  4055bb:	je     405625 <_head_lib64_libkernel32_a-0x39db>
  4055bd:	gs jb  405632 <_head_lib64_libkernel32_a-0x39ce>
  4055c0:	sub    BYTE PTR [rcx],ch
  4055c2:	cmp    ah,BYTE PTR [rax]
  4055c4:	and    eax,0x6e692073
  4055c9:	and    BYTE PTR [rip+0x67252873],ah        # 67657e42 <libintl_8_dll_iname+0x6724e336>
  4055cf:	sub    al,0x20
  4055d1:	and    eax,0x20202967
  4055d6:	sub    BYTE PTR [rdx+0x65],dh
  4055d9:	je     405651 <_head_lib64_libkernel32_a-0x39af>
  4055db:	(bad)  
  4055dc:	ins    BYTE PTR es:[rdi],dx
  4055dd:	cmp    eax,0xa296725
  4055e2:	add    BYTE PTR [rax],al
  4055e4:	lods   al,BYTE PTR ds:[rsi]
  4055e5:	enter  0xffff,0xed
  4055e9:	(bad)  
  4055ea:	(bad)  
  4055eb:	call   FWORD PTR [rax+rcx*8-0x1]
  4055ef:	jmp    FWORD PTR [rax+rcx*8-0x1]
  4055f3:	(bad)  
  4055f4:	jl     4055be <_head_lib64_libkernel32_a-0x3a42>
  4055f6:	(bad)  
  4055f7:	dec    DWORD PTR [rax+rcx*8-0x37630001]
  4055fe:	(bad)  
  4055ff:	dec    DWORD PTR [rbp+0x69]
  405602:	outs   dx,BYTE PTR ds:[rsi]
  405603:	addr32 ja 405633 <_head_lib64_libkernel32_a-0x39cd>
  405606:	ja     40563e <_head_lib64_libkernel32_a-0x39c2>
  405608:	xor    al,0x20
  40560a:	jb     405681 <_head_lib64_libkernel32_a-0x397f>
  40560c:	outs   dx,BYTE PTR ds:[rsi]
  40560d:	je     405678 <_head_lib64_libkernel32_a-0x3988>
  40560f:	ins    DWORD PTR es:[rdi],dx
  405610:	and    BYTE PTR gs:[rsi+0x61],ah
  405614:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40561c:	add    BYTE PTR [rax],al
  40561e:	add    BYTE PTR [rax],al
  405620:	rex.B
  405621:	fs fs jb 40568a <_head_lib64_libkernel32_a-0x3976>
  405625:	jae    40569a <_head_lib64_libkernel32_a-0x3966>
  405627:	and    BYTE PTR [rip+0x61682070],ah        # 61a8769d <libintl_8_dll_iname+0x6167db91>
  40562d:	jae    40564f <_head_lib64_libkernel32_a-0x39b1>
  40562f:	outs   dx,BYTE PTR ds:[rsi]
  405630:	outs   dx,DWORD PTR ds:[rsi]
  405631:	and    BYTE PTR [rcx+0x6d],ch
  405634:	(bad)  
  405635:	addr32 gs sub eax,0x74636573
  40563c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405643:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40564a:	jne    4056b1 <_head_lib64_libkernel32_a-0x394f>
  40564c:	jb     4056c7 <_head_lib64_libkernel32_a-0x3939>
  40564e:	and    BYTE PTR [rsi+0x61],ah
  405651:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405659:	and    BYTE PTR [rip+0x79622064],ah        # 79a276c3 <libintl_8_dll_iname+0x7961dbb7>
  40565f:	je     4056c6 <_head_lib64_libkernel32_a-0x393a>
  405661:	jae    405683 <_head_lib64_libkernel32_a-0x397d>
  405663:	(bad)  
  405664:	je     405686 <_head_lib64_libkernel32_a-0x397a>
  405666:	(bad)  
  405667:	fs fs jb 4056d0 <_head_lib64_libkernel32_a-0x3930>
  40566b:	jae    4056e0 <_head_lib64_libkernel32_a-0x3920>
  40566d:	and    BYTE PTR [rip+0x70],ah        # 4056e3 <_head_lib64_libkernel32_a-0x391d>
  405673:	add    BYTE PTR [rax],al
  405675:	add    BYTE PTR [rax],al
  405677:	add    BYTE PTR [rax],ah
  405679:	and    BYTE PTR [rsi+0x69],dl
  40567c:	jb     4056f2 <_head_lib64_libkernel32_a-0x390e>
  40567e:	jne    4056e1 <_head_lib64_libkernel32_a-0x391f>
  405680:	ins    BYTE PTR es:[rdi],dx
  405681:	push   rax
  405682:	jb     4056f3 <_head_lib64_libkernel32_a-0x390d>
  405684:	je     4056eb <_head_lib64_libkernel32_a-0x3915>
  405686:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40568a:	(bad)  
  40568b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405693:	push   0x646f6320
  405698:	and    BYTE PTR gs:[rax],dh
  40569b:	js     4056c2 <_head_lib64_libkernel32_a-0x393e>
  40569d:	js     40569f <_head_lib64_libkernel32_a-0x3961>
  40569f:	add    BYTE PTR [rax],ah
  4056a1:	and    BYTE PTR [rbp+0x6e],dl
  4056a4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4056a8:	outs   dx,BYTE PTR ds:[rsi]
  4056a9:	and    BYTE PTR [rax+0x73],dh
  4056ac:	gs jne 405713 <_head_lib64_libkernel32_a-0x38ed>
  4056af:	outs   dx,DWORD PTR ds:[rsi]
  4056b0:	and    BYTE PTR [rdx+0x65],dh
  4056b3:	ins    BYTE PTR es:[rdi],dx
  4056b4:	outs   dx,DWORD PTR ds:[rsi]
  4056b5:	movsxd esp,DWORD PTR [rcx+0x74]
  4056b8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4056bf:	je     405730 <_head_lib64_libkernel32_a-0x38d0>
  4056c1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4056c4:	and    BYTE PTR [rsi+0x65],dh
  4056c7:	jb     40573c <_head_lib64_libkernel32_a-0x38c4>
  4056c9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4056d0:	or     al,BYTE PTR [rax]
  4056d2:	add    BYTE PTR [rax],al
  4056d4:	add    BYTE PTR [rax],al
  4056d6:	add    BYTE PTR [rax],al
  4056d8:	and    BYTE PTR [rax],ah
  4056da:	push   rbp
  4056db:	outs   dx,BYTE PTR ds:[rsi]
  4056dc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4056e0:	outs   dx,BYTE PTR ds:[rsi]
  4056e1:	and    BYTE PTR [rax+0x73],dh
  4056e4:	gs jne 40574b <_head_lib64_libkernel32_a-0x38b5>
  4056e7:	outs   dx,DWORD PTR ds:[rsi]
  4056e8:	and    BYTE PTR [rdx+0x65],dh
  4056eb:	ins    BYTE PTR es:[rdi],dx
  4056ec:	outs   dx,DWORD PTR ds:[rsi]
  4056ed:	movsxd esp,DWORD PTR [rcx+0x74]
  4056f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4056f7:	and    BYTE PTR [rbx+0x69],dh
  4056fa:	jp     405761 <_head_lib64_libkernel32_a-0x389f>
  4056fc:	and    BYTE PTR [rip+0xa2e64],ah        # 4a8566 <libintl_8_dll_iname+0x9ea5a>
	...
  40570e:	add    BYTE PTR [rax],al
  405710:	cs jo  405777 <_head_lib64_libkernel32_a-0x3889>
  405713:	(bad)  
  405714:	je     405777 <_head_lib64_libkernel32_a-0x3889>
	...
  40571e:	add    BYTE PTR [rax],al
  405720:	rex
  405721:	rex
  405722:	add    BYTE PTR [rax],al
	...
  40572d:	add    BYTE PTR [rax],al
  40572f:	add    BYTE PTR [rax+0x40],dl
  405732:	add    BYTE PTR [rax],al
	...
  40573d:	add    BYTE PTR [rax],al
  40573f:	add    BYTE PTR [rax+0x4030],dl
	...
  40574d:	add    BYTE PTR [rax],al
  40574f:	add    BYTE PTR [rax],dh
  405751:	pop    rsi
  405752:	add    BYTE PTR [rax],al
	...
  40575d:	add    BYTE PTR [rax],al
  40575f:	add    BYTE PTR [rax],dh
  405761:	pop    rsi
  405762:	add    BYTE PTR [rax],al
	...
  40576d:	add    BYTE PTR [rax],al
  40576f:	add    BYTE PTR [rax+0x4054],dh
	...
  405781:	add    BYTE PTR [rax+0x0],al
	...
  405790:	(bad)  
  405791:	xchg   ebx,eax
  405792:	add    BYTE PTR [rax],al
	...
  40579d:	add    BYTE PTR [rax],al
  40579f:	add    ah,bl
  4057a1:	xchg   ebx,eax
  4057a2:	add    BYTE PTR [rax],al
	...
  4057ad:	add    BYTE PTR [rax],al
  4057af:	add    ah,dh
  4057b1:	xchg   ebx,eax
  4057b2:	add    BYTE PTR [rax],al
	...
  4057bd:	add    BYTE PTR [rax],al
  4057bf:	add    BYTE PTR [rsp+rdx*4],bl
  4057c2:	add    BYTE PTR [rax],al
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    BYTE PTR [rsp+rdx*4],dh
  4057d2:	add    BYTE PTR [rax],al
	...
  4057dd:	add    BYTE PTR [rax],al
  4057df:	add    BYTE PTR [rsp+rdx*4+0x40],cl
	...
  4057ef:	add    BYTE PTR [rax-0x79],al
  4057f2:	add    BYTE PTR [rax],al
	...
  4057fd:	add    BYTE PTR [rax],al
  4057ff:	add    BYTE PTR [rax+0x408a],ch
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rax+0x408a],ah
	...
  40581d:	add    BYTE PTR [rax],al
  40581f:	add    BYTE PTR [rax+0x408a],dl
	...
  40582d:	add    BYTE PTR [rax],al
  40582f:	add    BYTE PTR [rax+0x408a],bl
	...
  405841:	movabs al,ds:0x40
  40584a:	add    BYTE PTR [rax],al
  40584c:	add    BYTE PTR [rax],al
  40584e:	add    BYTE PTR [rax],al
  405850:	adc    BYTE PTR [rax+0x40],ah
	...
  40585e:	add    BYTE PTR [rax],al
  405860:	sbb    BYTE PTR [rax+0x40],ah
	...
  40586e:	add    BYTE PTR [rax],al
  405870:	xor    BYTE PTR [rax+0x40],ah
	...
  40587e:	add    BYTE PTR [rax],al
  405880:	mov    al,0x80
  405882:	add    BYTE PTR [rax],al
	...
  40588d:	add    BYTE PTR [rax],al
  40588f:	add    BYTE PTR [rax],dl
  405891:	xchg   DWORD PTR [rax+0x0],eax
	...
  4058a0:	push   rax
  4058a1:	add    BYTE PTR es:[rax],al
	...
  4058ad:	add    BYTE PTR [rax],al
  4058af:	add    BYTE PTR [rax+0x401d],ah
	...
  4058bd:	add    BYTE PTR [rax],al
  4058bf:	add    al,al
  4058c1:	xchg   BYTE PTR [rax+0x0],al
	...
  4058d0:	lock xchg BYTE PTR [rax+0x0],al
	...
  4058e0:	rol    BYTE PTR [rax+0x40],0x0
	...
  4058ef:	add    al,bl
  4058f1:	xchg   BYTE PTR [rax+0x0],al
	...
  405900:	(bad)  
  405901:	xchg   BYTE PTR [rax+0x0],al
	...
  405910:	rol    BYTE PTR [rsi+0x40],1
	...
  40591e:	add    BYTE PTR [rax],al
  405920:	rex.RXB
  405921:	rex.XB
  405922:	rex.XB cmp spl,BYTE PTR [r8]
  405925:	sub    BYTE PTR [rdi+0x65],al
  405928:	outs   dx,BYTE PTR ds:[rsi]
  405929:	je     40599a <_head_lib64_libkernel32_a-0x3666>
  40592b:	outs   dx,DWORD PTR ds:[rsi]
  40592c:	and    BYTE PTR [rsi+rbp*1],dh
  40592f:	cmp    DWORD PTR [rsi],ebp
  405931:	xor    esp,DWORD PTR [rax]
  405933:	jo     405966 <_head_lib64_libkernel32_a-0x369a>
  405935:	xor    BYTE PTR cs:[rax+riz*1],ch
  405939:	jo     4059a4 <_head_lib64_libkernel32_a-0x365c>
  40593b:	gs sub eax,0x2e362e30
  405941:	xor    ch,BYTE PTR [rcx]
  405943:	and    BYTE PTR [rsi+rbp*1],dh
  405946:	cmp    DWORD PTR [rsi],ebp
  405948:	xor    eax,DWORD PTR [rax]
  40594a:	add    BYTE PTR [rax],al
  40594c:	add    BYTE PTR [rax],al
  40594e:	add    BYTE PTR [rax],al
  405950:	rex.RXB
  405951:	rex.XB
  405952:	rex.XB cmp spl,BYTE PTR [r8]
  405955:	sub    BYTE PTR [rdi+0x65],al
  405958:	outs   dx,BYTE PTR ds:[rsi]
  405959:	je     4059ca <_head_lib64_libkernel32_a-0x3636>
  40595b:	outs   dx,DWORD PTR ds:[rsi]
  40595c:	and    BYTE PTR [rip+0x302e342e],dh        # 306e8d90 <libintl_8_dll_iname+0x302df284>
  405962:	sub    eax,0x70203372
  405967:	xor    DWORD PTR [rsi],ebp
  405969:	xor    ebp,DWORD PTR [rax+riz*1]
  40596c:	jo     4059d7 <_head_lib64_libkernel32_a-0x3629>
  40596e:	gs sub eax,0x2e362e30
  405974:	xor    eax,0x2e352029
  405979:	xor    al,0x2e
  40597b:	xor    BYTE PTR [rax],al
  40597d:	add    BYTE PTR [rax],al
  40597f:	add    BYTE PTR [rdi+0x43],al
  405982:	rex.XB cmp spl,BYTE PTR [r8]
  405985:	sub    BYTE PTR [rdi+0x65],al
  405988:	outs   dx,BYTE PTR ds:[rsi]
  405989:	je     4059fa <_head_lib64_libkernel32_a-0x3606>
  40598b:	outs   dx,DWORD PTR ds:[rsi]
  40598c:	and    BYTE PTR [rip+0x302e342e],dh        # 306e8dc0 <libintl_8_dll_iname+0x302df2b4>
  405992:	sub    eax,0x70203372
  405997:	xor    DWORD PTR [rsi],ebp
  405999:	xor    ebp,DWORD PTR [rax+riz*1]
  40599c:	jo     405a07 <_head_lib64_libkernel32_a-0x35f9>
  40599e:	gs sub eax,0x2e362e30
  4059a4:	xor    eax,0x2e352029
  4059a9:	xor    al,0x2e
  4059ab:	xor    BYTE PTR [rax],al
  4059ad:	add    BYTE PTR [rax],al
  4059af:	add    BYTE PTR [rdi+0x43],al
  4059b2:	rex.XB cmp spl,BYTE PTR [r8]
  4059b5:	sub    BYTE PTR [rdi+0x65],al
  4059b8:	outs   dx,BYTE PTR ds:[rsi]
  4059b9:	je     405a2a <_head_lib64_libkernel32_a-0x35d6>
  4059bb:	outs   dx,DWORD PTR ds:[rsi]
  4059bc:	and    BYTE PTR [rsi+rbp*1],dh
  4059bf:	cmp    DWORD PTR [rsi],ebp
  4059c1:	xor    esp,DWORD PTR [rax]
  4059c3:	jo     4059f6 <_head_lib64_libkernel32_a-0x360a>
  4059c5:	xor    BYTE PTR cs:[rax+riz*1],ch
  4059c9:	jo     405a34 <_head_lib64_libkernel32_a-0x35cc>
  4059cb:	gs sub eax,0x2e362e30
  4059d1:	xor    ch,BYTE PTR [rcx]
  4059d3:	and    BYTE PTR [rsi+rbp*1],dh
  4059d6:	cmp    DWORD PTR [rsi],ebp
  4059d8:	xor    eax,DWORD PTR [rax]
  4059da:	add    BYTE PTR [rax],al
  4059dc:	add    BYTE PTR [rax],al
  4059de:	add    BYTE PTR [rax],al
  4059e0:	rex.RXB
  4059e1:	rex.XB
  4059e2:	rex.XB cmp spl,BYTE PTR [r8]
  4059e5:	sub    BYTE PTR [rdi+0x65],al
  4059e8:	outs   dx,BYTE PTR ds:[rsi]
  4059e9:	je     405a5a <_head_lib64_libkernel32_a-0x35a6>
  4059eb:	outs   dx,DWORD PTR ds:[rsi]
  4059ec:	and    BYTE PTR [rsi+rbp*1],dh
  4059ef:	cmp    DWORD PTR [rsi],ebp
  4059f1:	xor    esp,DWORD PTR [rax]
  4059f3:	jo     405a26 <_head_lib64_libkernel32_a-0x35da>
  4059f5:	xor    BYTE PTR cs:[rax+riz*1],ch
  4059f9:	jo     405a64 <_head_lib64_libkernel32_a-0x359c>
  4059fb:	gs sub eax,0x2e362e30
  405a01:	xor    ch,BYTE PTR [rcx]
  405a03:	and    BYTE PTR [rsi+rbp*1],dh
  405a06:	cmp    DWORD PTR [rsi],ebp
  405a08:	xor    eax,DWORD PTR [rax]
  405a0a:	add    BYTE PTR [rax],al
  405a0c:	add    BYTE PTR [rax],al
  405a0e:	add    BYTE PTR [rax],al
  405a10:	rex.RXB
  405a11:	rex.XB
  405a12:	rex.XB cmp spl,BYTE PTR [r8]
  405a15:	sub    BYTE PTR [rdi+0x65],al
  405a18:	outs   dx,BYTE PTR ds:[rsi]
  405a19:	je     405a8a <_head_lib64_libkernel32_a-0x3576>
  405a1b:	outs   dx,DWORD PTR ds:[rsi]
  405a1c:	and    BYTE PTR [rsi+rbp*1],dh
  405a1f:	cmp    DWORD PTR [rsi],ebp
  405a21:	xor    esp,DWORD PTR [rax]
  405a23:	jo     405a56 <_head_lib64_libkernel32_a-0x35aa>
  405a25:	xor    BYTE PTR cs:[rax+riz*1],ch
  405a29:	jo     405a94 <_head_lib64_libkernel32_a-0x356c>
  405a2b:	gs sub eax,0x2e362e30
  405a31:	xor    ch,BYTE PTR [rcx]
  405a33:	and    BYTE PTR [rsi+rbp*1],dh
  405a36:	cmp    DWORD PTR [rsi],ebp
  405a38:	xor    eax,DWORD PTR [rax]
  405a3a:	add    BYTE PTR [rax],al
  405a3c:	add    BYTE PTR [rax],al
  405a3e:	add    BYTE PTR [rax],al
  405a40:	rex.RXB
  405a41:	rex.XB
  405a42:	rex.XB cmp spl,BYTE PTR [r8]
  405a45:	sub    BYTE PTR [rdi+0x65],al
  405a48:	outs   dx,BYTE PTR ds:[rsi]
  405a49:	je     405aba <_head_lib64_libkernel32_a-0x3546>
  405a4b:	outs   dx,DWORD PTR ds:[rsi]
  405a4c:	and    BYTE PTR [rsi+rbp*1],dh
  405a4f:	cmp    DWORD PTR [rsi],ebp
  405a51:	xor    esp,DWORD PTR [rax]
  405a53:	jo     405a86 <_head_lib64_libkernel32_a-0x357a>
  405a55:	xor    BYTE PTR cs:[rax+riz*1],ch
  405a59:	jo     405ac4 <_head_lib64_libkernel32_a-0x353c>
  405a5b:	gs sub eax,0x2e362e30
  405a61:	xor    ch,BYTE PTR [rcx]
  405a63:	and    BYTE PTR [rsi+rbp*1],dh
  405a66:	cmp    DWORD PTR [rsi],ebp
  405a68:	xor    eax,DWORD PTR [rax]
  405a6a:	add    BYTE PTR [rax],al
  405a6c:	add    BYTE PTR [rax],al
  405a6e:	add    BYTE PTR [rax],al
  405a70:	rex.RXB
  405a71:	rex.XB
  405a72:	rex.XB cmp spl,BYTE PTR [r8]
  405a75:	sub    BYTE PTR [rdi+0x65],al
  405a78:	outs   dx,BYTE PTR ds:[rsi]
  405a79:	je     405aea <_head_lib64_libkernel32_a-0x3516>
  405a7b:	outs   dx,DWORD PTR ds:[rsi]
  405a7c:	and    BYTE PTR [rsi+rbp*1],dh
  405a7f:	cmp    DWORD PTR [rsi],ebp
  405a81:	xor    esp,DWORD PTR [rax]
  405a83:	jo     405ab6 <_head_lib64_libkernel32_a-0x354a>
  405a85:	xor    BYTE PTR cs:[rax+riz*1],ch
  405a89:	jo     405af4 <_head_lib64_libkernel32_a-0x350c>
  405a8b:	gs sub eax,0x2e362e30
  405a91:	xor    ch,BYTE PTR [rcx]
  405a93:	and    BYTE PTR [rsi+rbp*1],dh
  405a96:	cmp    DWORD PTR [rsi],ebp
  405a98:	xor    eax,DWORD PTR [rax]
  405a9a:	add    BYTE PTR [rax],al
  405a9c:	add    BYTE PTR [rax],al
  405a9e:	add    BYTE PTR [rax],al
  405aa0:	rex.RXB
  405aa1:	rex.XB
  405aa2:	rex.XB cmp spl,BYTE PTR [r8]
  405aa5:	sub    BYTE PTR [rdi+0x65],al
  405aa8:	outs   dx,BYTE PTR ds:[rsi]
  405aa9:	je     405b1a <_head_lib64_libkernel32_a-0x34e6>
  405aab:	outs   dx,DWORD PTR ds:[rsi]
  405aac:	and    BYTE PTR [rsi+rbp*1],dh
  405aaf:	cmp    DWORD PTR [rsi],ebp
  405ab1:	xor    esp,DWORD PTR [rax]
  405ab3:	jo     405ae6 <_head_lib64_libkernel32_a-0x351a>
  405ab5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405ab9:	jo     405b24 <_head_lib64_libkernel32_a-0x34dc>
  405abb:	gs sub eax,0x2e362e30
  405ac1:	xor    ch,BYTE PTR [rcx]
  405ac3:	and    BYTE PTR [rsi+rbp*1],dh
  405ac6:	cmp    DWORD PTR [rsi],ebp
  405ac8:	xor    eax,DWORD PTR [rax]
  405aca:	add    BYTE PTR [rax],al
  405acc:	add    BYTE PTR [rax],al
  405ace:	add    BYTE PTR [rax],al
  405ad0:	rex.RXB
  405ad1:	rex.XB
  405ad2:	rex.XB cmp spl,BYTE PTR [r8]
  405ad5:	sub    BYTE PTR [rdi+0x65],al
  405ad8:	outs   dx,BYTE PTR ds:[rsi]
  405ad9:	je     405b4a <_head_lib64_libkernel32_a-0x34b6>
  405adb:	outs   dx,DWORD PTR ds:[rsi]
  405adc:	and    BYTE PTR [rsi+rbp*1],dh
  405adf:	cmp    DWORD PTR [rsi],ebp
  405ae1:	xor    esp,DWORD PTR [rax]
  405ae3:	jo     405b16 <_head_lib64_libkernel32_a-0x34ea>
  405ae5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405ae9:	jo     405b54 <_head_lib64_libkernel32_a-0x34ac>
  405aeb:	gs sub eax,0x2e362e30
  405af1:	xor    ch,BYTE PTR [rcx]
  405af3:	and    BYTE PTR [rsi+rbp*1],dh
  405af6:	cmp    DWORD PTR [rsi],ebp
  405af8:	xor    eax,DWORD PTR [rax]
  405afa:	add    BYTE PTR [rax],al
  405afc:	add    BYTE PTR [rax],al
  405afe:	add    BYTE PTR [rax],al
  405b00:	rex.RXB
  405b01:	rex.XB
  405b02:	rex.XB cmp spl,BYTE PTR [r8]
  405b05:	sub    BYTE PTR [rdi+0x65],al
  405b08:	outs   dx,BYTE PTR ds:[rsi]
  405b09:	je     405b7a <_head_lib64_libkernel32_a-0x3486>
  405b0b:	outs   dx,DWORD PTR ds:[rsi]
  405b0c:	and    BYTE PTR [rsi+rbp*1],dh
  405b0f:	cmp    DWORD PTR [rsi],ebp
  405b11:	xor    esp,DWORD PTR [rax]
  405b13:	jo     405b46 <_head_lib64_libkernel32_a-0x34ba>
  405b15:	xor    BYTE PTR cs:[rax+riz*1],ch
  405b19:	jo     405b84 <_head_lib64_libkernel32_a-0x347c>
  405b1b:	gs sub eax,0x2e362e30
  405b21:	xor    ch,BYTE PTR [rcx]
  405b23:	and    BYTE PTR [rsi+rbp*1],dh
  405b26:	cmp    DWORD PTR [rsi],ebp
  405b28:	xor    eax,DWORD PTR [rax]
  405b2a:	add    BYTE PTR [rax],al
  405b2c:	add    BYTE PTR [rax],al
  405b2e:	add    BYTE PTR [rax],al
  405b30:	rex.RXB
  405b31:	rex.XB
  405b32:	rex.XB cmp spl,BYTE PTR [r8]
  405b35:	sub    BYTE PTR [rdi+0x65],al
  405b38:	outs   dx,BYTE PTR ds:[rsi]
  405b39:	je     405baa <_head_lib64_libkernel32_a-0x3456>
  405b3b:	outs   dx,DWORD PTR ds:[rsi]
  405b3c:	and    BYTE PTR [rsi+rbp*1],dh
  405b3f:	cmp    DWORD PTR [rsi],ebp
  405b41:	xor    esp,DWORD PTR [rax]
  405b43:	jo     405b76 <_head_lib64_libkernel32_a-0x348a>
  405b45:	xor    BYTE PTR cs:[rax+riz*1],ch
  405b49:	jo     405bb4 <_head_lib64_libkernel32_a-0x344c>
  405b4b:	gs sub eax,0x2e362e30
  405b51:	xor    ch,BYTE PTR [rcx]
  405b53:	and    BYTE PTR [rsi+rbp*1],dh
  405b56:	cmp    DWORD PTR [rsi],ebp
  405b58:	xor    eax,DWORD PTR [rax]
  405b5a:	add    BYTE PTR [rax],al
  405b5c:	add    BYTE PTR [rax],al
  405b5e:	add    BYTE PTR [rax],al
  405b60:	rex.RXB
  405b61:	rex.XB
  405b62:	rex.XB cmp spl,BYTE PTR [r8]
  405b65:	sub    BYTE PTR [rdi+0x65],al
  405b68:	outs   dx,BYTE PTR ds:[rsi]
  405b69:	je     405bda <_head_lib64_libkernel32_a-0x3426>
  405b6b:	outs   dx,DWORD PTR ds:[rsi]
  405b6c:	and    BYTE PTR [rsi+rbp*1],dh
  405b6f:	cmp    DWORD PTR [rsi],ebp
  405b71:	xor    esp,DWORD PTR [rax]
  405b73:	jo     405ba6 <_head_lib64_libkernel32_a-0x345a>
  405b75:	xor    BYTE PTR cs:[rax+riz*1],ch
  405b79:	jo     405be4 <_head_lib64_libkernel32_a-0x341c>
  405b7b:	gs sub eax,0x2e362e30
  405b81:	xor    ch,BYTE PTR [rcx]
  405b83:	and    BYTE PTR [rsi+rbp*1],dh
  405b86:	cmp    DWORD PTR [rsi],ebp
  405b88:	xor    eax,DWORD PTR [rax]
  405b8a:	add    BYTE PTR [rax],al
  405b8c:	add    BYTE PTR [rax],al
  405b8e:	add    BYTE PTR [rax],al
  405b90:	rex.RXB
  405b91:	rex.XB
  405b92:	rex.XB cmp spl,BYTE PTR [r8]
  405b95:	sub    BYTE PTR [rdi+0x65],al
  405b98:	outs   dx,BYTE PTR ds:[rsi]
  405b99:	je     405c0a <_head_lib64_libkernel32_a-0x33f6>
  405b9b:	outs   dx,DWORD PTR ds:[rsi]
  405b9c:	and    BYTE PTR [rsi+rbp*1],dh
  405b9f:	cmp    DWORD PTR [rsi],ebp
  405ba1:	xor    esp,DWORD PTR [rax]
  405ba3:	jo     405bd6 <_head_lib64_libkernel32_a-0x342a>
  405ba5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405ba9:	jo     405c14 <_head_lib64_libkernel32_a-0x33ec>
  405bab:	gs sub eax,0x2e362e30
  405bb1:	xor    ch,BYTE PTR [rcx]
  405bb3:	and    BYTE PTR [rsi+rbp*1],dh
  405bb6:	cmp    DWORD PTR [rsi],ebp
  405bb8:	xor    eax,DWORD PTR [rax]
  405bba:	add    BYTE PTR [rax],al
  405bbc:	add    BYTE PTR [rax],al
  405bbe:	add    BYTE PTR [rax],al
  405bc0:	rex.RXB
  405bc1:	rex.XB
  405bc2:	rex.XB cmp spl,BYTE PTR [r8]
  405bc5:	sub    BYTE PTR [rdi+0x65],al
  405bc8:	outs   dx,BYTE PTR ds:[rsi]
  405bc9:	je     405c3a <_head_lib64_libkernel32_a-0x33c6>
  405bcb:	outs   dx,DWORD PTR ds:[rsi]
  405bcc:	and    BYTE PTR [rsi+rbp*1],dh
  405bcf:	cmp    DWORD PTR [rsi],ebp
  405bd1:	xor    esp,DWORD PTR [rax]
  405bd3:	jo     405c06 <_head_lib64_libkernel32_a-0x33fa>
  405bd5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405bd9:	jo     405c44 <_head_lib64_libkernel32_a-0x33bc>
  405bdb:	gs sub eax,0x2e362e30
  405be1:	xor    ch,BYTE PTR [rcx]
  405be3:	and    BYTE PTR [rsi+rbp*1],dh
  405be6:	cmp    DWORD PTR [rsi],ebp
  405be8:	xor    eax,DWORD PTR [rax]
  405bea:	add    BYTE PTR [rax],al
  405bec:	add    BYTE PTR [rax],al
  405bee:	add    BYTE PTR [rax],al
  405bf0:	rex.RXB
  405bf1:	rex.XB
  405bf2:	rex.XB cmp spl,BYTE PTR [r8]
  405bf5:	sub    BYTE PTR [rdi+0x65],al
  405bf8:	outs   dx,BYTE PTR ds:[rsi]
  405bf9:	je     405c6a <_head_lib64_libkernel32_a-0x3396>
  405bfb:	outs   dx,DWORD PTR ds:[rsi]
  405bfc:	and    BYTE PTR [rsi+rbp*1],dh
  405bff:	cmp    DWORD PTR [rsi],ebp
  405c01:	xor    esp,DWORD PTR [rax]
  405c03:	jo     405c36 <_head_lib64_libkernel32_a-0x33ca>
  405c05:	xor    BYTE PTR cs:[rax+riz*1],ch
  405c09:	jo     405c74 <_head_lib64_libkernel32_a-0x338c>
  405c0b:	gs sub eax,0x2e362e30
  405c11:	xor    ch,BYTE PTR [rcx]
  405c13:	and    BYTE PTR [rsi+rbp*1],dh
  405c16:	cmp    DWORD PTR [rsi],ebp
  405c18:	xor    eax,DWORD PTR [rax]
  405c1a:	add    BYTE PTR [rax],al
  405c1c:	add    BYTE PTR [rax],al
  405c1e:	add    BYTE PTR [rax],al
  405c20:	rex.RXB
  405c21:	rex.XB
  405c22:	rex.XB cmp spl,BYTE PTR [r8]
  405c25:	sub    BYTE PTR [rdi+0x65],al
  405c28:	outs   dx,BYTE PTR ds:[rsi]
  405c29:	je     405c9a <_head_lib64_libkernel32_a-0x3366>
  405c2b:	outs   dx,DWORD PTR ds:[rsi]
  405c2c:	and    BYTE PTR [rsi+rbp*1],dh
  405c2f:	cmp    DWORD PTR [rsi],ebp
  405c31:	xor    esp,DWORD PTR [rax]
  405c33:	jo     405c66 <_head_lib64_libkernel32_a-0x339a>
  405c35:	xor    BYTE PTR cs:[rax+riz*1],ch
  405c39:	jo     405ca4 <_head_lib64_libkernel32_a-0x335c>
  405c3b:	gs sub eax,0x2e362e30
  405c41:	xor    ch,BYTE PTR [rcx]
  405c43:	and    BYTE PTR [rsi+rbp*1],dh
  405c46:	cmp    DWORD PTR [rsi],ebp
  405c48:	xor    eax,DWORD PTR [rax]
  405c4a:	add    BYTE PTR [rax],al
  405c4c:	add    BYTE PTR [rax],al
  405c4e:	add    BYTE PTR [rax],al
  405c50:	rex.RXB
  405c51:	rex.XB
  405c52:	rex.XB cmp spl,BYTE PTR [r8]
  405c55:	sub    BYTE PTR [rdi+0x65],al
  405c58:	outs   dx,BYTE PTR ds:[rsi]
  405c59:	je     405cca <_head_lib64_libkernel32_a-0x3336>
  405c5b:	outs   dx,DWORD PTR ds:[rsi]
  405c5c:	and    BYTE PTR [rsi+rbp*1],dh
  405c5f:	cmp    DWORD PTR [rsi],ebp
  405c61:	xor    esp,DWORD PTR [rax]
  405c63:	jo     405c96 <_head_lib64_libkernel32_a-0x336a>
  405c65:	xor    BYTE PTR cs:[rax+riz*1],ch
  405c69:	jo     405cd4 <_head_lib64_libkernel32_a-0x332c>
  405c6b:	gs sub eax,0x2e362e30
  405c71:	xor    ch,BYTE PTR [rcx]
  405c73:	and    BYTE PTR [rsi+rbp*1],dh
  405c76:	cmp    DWORD PTR [rsi],ebp
  405c78:	xor    eax,DWORD PTR [rax]
  405c7a:	add    BYTE PTR [rax],al
  405c7c:	add    BYTE PTR [rax],al
  405c7e:	add    BYTE PTR [rax],al
  405c80:	rex.RXB
  405c81:	rex.XB
  405c82:	rex.XB cmp spl,BYTE PTR [r8]
  405c85:	sub    BYTE PTR [rdi+0x65],al
  405c88:	outs   dx,BYTE PTR ds:[rsi]
  405c89:	je     405cfa <_head_lib64_libkernel32_a-0x3306>
  405c8b:	outs   dx,DWORD PTR ds:[rsi]
  405c8c:	and    BYTE PTR [rsi+rbp*1],dh
  405c8f:	cmp    DWORD PTR [rsi],ebp
  405c91:	xor    esp,DWORD PTR [rax]
  405c93:	jo     405cc6 <_head_lib64_libkernel32_a-0x333a>
  405c95:	xor    BYTE PTR cs:[rax+riz*1],ch
  405c99:	jo     405d04 <_head_lib64_libkernel32_a-0x32fc>
  405c9b:	gs sub eax,0x2e362e30
  405ca1:	xor    ch,BYTE PTR [rcx]
  405ca3:	and    BYTE PTR [rsi+rbp*1],dh
  405ca6:	cmp    DWORD PTR [rsi],ebp
  405ca8:	xor    eax,DWORD PTR [rax]
  405caa:	add    BYTE PTR [rax],al
  405cac:	add    BYTE PTR [rax],al
  405cae:	add    BYTE PTR [rax],al
  405cb0:	rex.RXB
  405cb1:	rex.XB
  405cb2:	rex.XB cmp spl,BYTE PTR [r8]
  405cb5:	sub    BYTE PTR [rdi+0x65],al
  405cb8:	outs   dx,BYTE PTR ds:[rsi]
  405cb9:	je     405d2a <_head_lib64_libkernel32_a-0x32d6>
  405cbb:	outs   dx,DWORD PTR ds:[rsi]
  405cbc:	and    BYTE PTR [rsi+rbp*1],dh
  405cbf:	cmp    DWORD PTR [rsi],ebp
  405cc1:	xor    esp,DWORD PTR [rax]
  405cc3:	jo     405cf6 <_head_lib64_libkernel32_a-0x330a>
  405cc5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405cc9:	jo     405d34 <_head_lib64_libkernel32_a-0x32cc>
  405ccb:	gs sub eax,0x2e362e30
  405cd1:	xor    ch,BYTE PTR [rcx]
  405cd3:	and    BYTE PTR [rsi+rbp*1],dh
  405cd6:	cmp    DWORD PTR [rsi],ebp
  405cd8:	xor    eax,DWORD PTR [rax]
  405cda:	add    BYTE PTR [rax],al
  405cdc:	add    BYTE PTR [rax],al
  405cde:	add    BYTE PTR [rax],al
  405ce0:	rex.RXB
  405ce1:	rex.XB
  405ce2:	rex.XB cmp spl,BYTE PTR [r8]
  405ce5:	sub    BYTE PTR [rdi+0x65],al
  405ce8:	outs   dx,BYTE PTR ds:[rsi]
  405ce9:	je     405d5a <_head_lib64_libkernel32_a-0x32a6>
  405ceb:	outs   dx,DWORD PTR ds:[rsi]
  405cec:	and    BYTE PTR [rsi+rbp*1],dh
  405cef:	cmp    DWORD PTR [rsi],ebp
  405cf1:	xor    esp,DWORD PTR [rax]
  405cf3:	jo     405d26 <_head_lib64_libkernel32_a-0x32da>
  405cf5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405cf9:	jo     405d64 <_head_lib64_libkernel32_a-0x329c>
  405cfb:	gs sub eax,0x2e362e30
  405d01:	xor    ch,BYTE PTR [rcx]
  405d03:	and    BYTE PTR [rsi+rbp*1],dh
  405d06:	cmp    DWORD PTR [rsi],ebp
  405d08:	xor    eax,DWORD PTR [rax]
  405d0a:	add    BYTE PTR [rax],al
  405d0c:	add    BYTE PTR [rax],al
  405d0e:	add    BYTE PTR [rax],al
  405d10:	rex.RXB
  405d11:	rex.XB
  405d12:	rex.XB cmp spl,BYTE PTR [r8]
  405d15:	sub    BYTE PTR [rdi+0x65],al
  405d18:	outs   dx,BYTE PTR ds:[rsi]
  405d19:	je     405d8a <_head_lib64_libkernel32_a-0x3276>
  405d1b:	outs   dx,DWORD PTR ds:[rsi]
  405d1c:	and    BYTE PTR [rsi+rbp*1],dh
  405d1f:	cmp    DWORD PTR [rsi],ebp
  405d21:	xor    esp,DWORD PTR [rax]
  405d23:	jo     405d56 <_head_lib64_libkernel32_a-0x32aa>
  405d25:	xor    BYTE PTR cs:[rax+riz*1],ch
  405d29:	jo     405d94 <_head_lib64_libkernel32_a-0x326c>
  405d2b:	gs sub eax,0x2e362e30
  405d31:	xor    ch,BYTE PTR [rcx]
  405d33:	and    BYTE PTR [rsi+rbp*1],dh
  405d36:	cmp    DWORD PTR [rsi],ebp
  405d38:	xor    eax,DWORD PTR [rax]
  405d3a:	add    BYTE PTR [rax],al
  405d3c:	add    BYTE PTR [rax],al
  405d3e:	add    BYTE PTR [rax],al
  405d40:	rex.RXB
  405d41:	rex.XB
  405d42:	rex.XB cmp spl,BYTE PTR [r8]
  405d45:	sub    BYTE PTR [rdi+0x65],al
  405d48:	outs   dx,BYTE PTR ds:[rsi]
  405d49:	je     405dba <_head_lib64_libkernel32_a-0x3246>
  405d4b:	outs   dx,DWORD PTR ds:[rsi]
  405d4c:	and    BYTE PTR [rsi+rbp*1],dh
  405d4f:	cmp    DWORD PTR [rsi],ebp
  405d51:	xor    esp,DWORD PTR [rax]
  405d53:	jo     405d86 <_head_lib64_libkernel32_a-0x327a>
  405d55:	xor    BYTE PTR cs:[rax+riz*1],ch
  405d59:	jo     405dc4 <_head_lib64_libkernel32_a-0x323c>
  405d5b:	gs sub eax,0x2e362e30
  405d61:	xor    ch,BYTE PTR [rcx]
  405d63:	and    BYTE PTR [rsi+rbp*1],dh
  405d66:	cmp    DWORD PTR [rsi],ebp
  405d68:	xor    eax,DWORD PTR [rax]
  405d6a:	add    BYTE PTR [rax],al
  405d6c:	add    BYTE PTR [rax],al
  405d6e:	add    BYTE PTR [rax],al
  405d70:	rex.RXB
  405d71:	rex.XB
  405d72:	rex.XB cmp spl,BYTE PTR [r8]
  405d75:	sub    BYTE PTR [rdi+0x65],al
  405d78:	outs   dx,BYTE PTR ds:[rsi]
  405d79:	je     405dea <_head_lib64_libkernel32_a-0x3216>
  405d7b:	outs   dx,DWORD PTR ds:[rsi]
  405d7c:	and    BYTE PTR [rip+0x302e342e],dh        # 306e91b0 <libintl_8_dll_iname+0x302df6a4>
  405d82:	sub    eax,0x70203372
  405d87:	xor    DWORD PTR [rsi],ebp
  405d89:	xor    ebp,DWORD PTR [rax+riz*1]
  405d8c:	jo     405df7 <_head_lib64_libkernel32_a-0x3209>
  405d8e:	gs sub eax,0x2e362e30
  405d94:	xor    eax,0x2e352029
  405d99:	xor    al,0x2e
  405d9b:	xor    BYTE PTR [rax],al
  405d9d:	add    BYTE PTR [rax],al
  405d9f:	add    BYTE PTR [rdi+0x43],al
  405da2:	rex.XB cmp spl,BYTE PTR [r8]
  405da5:	sub    BYTE PTR [rdi+0x65],al
  405da8:	outs   dx,BYTE PTR ds:[rsi]
  405da9:	je     405e1a <_head_lib64_libkernel32_a-0x31e6>
  405dab:	outs   dx,DWORD PTR ds:[rsi]
  405dac:	and    BYTE PTR [rsi+rbp*1],dh
  405daf:	cmp    DWORD PTR [rsi],ebp
  405db1:	xor    esp,DWORD PTR [rax]
  405db3:	jo     405de6 <_head_lib64_libkernel32_a-0x321a>
  405db5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405db9:	jo     405e24 <_head_lib64_libkernel32_a-0x31dc>
  405dbb:	gs sub eax,0x2e362e30
  405dc1:	xor    ch,BYTE PTR [rcx]
  405dc3:	and    BYTE PTR [rsi+rbp*1],dh
  405dc6:	cmp    DWORD PTR [rsi],ebp
  405dc8:	xor    eax,DWORD PTR [rax]
  405dca:	add    BYTE PTR [rax],al
  405dcc:	add    BYTE PTR [rax],al
  405dce:	add    BYTE PTR [rax],al
  405dd0:	rex.RXB
  405dd1:	rex.XB
  405dd2:	rex.XB cmp spl,BYTE PTR [r8]
  405dd5:	sub    BYTE PTR [rdi+0x65],al
  405dd8:	outs   dx,BYTE PTR ds:[rsi]
  405dd9:	je     405e4a <_head_lib64_libkernel32_a-0x31b6>
  405ddb:	outs   dx,DWORD PTR ds:[rsi]
  405ddc:	and    BYTE PTR [rsi+rbp*1],dh
  405ddf:	cmp    DWORD PTR [rsi],ebp
  405de1:	xor    esp,DWORD PTR [rax]
  405de3:	jo     405e16 <_head_lib64_libkernel32_a-0x31ea>
  405de5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405de9:	jo     405e54 <_head_lib64_libkernel32_a-0x31ac>
  405deb:	gs sub eax,0x2e362e30
  405df1:	xor    ch,BYTE PTR [rcx]
  405df3:	and    BYTE PTR [rsi+rbp*1],dh
  405df6:	cmp    DWORD PTR [rsi],ebp
  405df8:	xor    eax,DWORD PTR [rax]
  405dfa:	add    BYTE PTR [rax],al
  405dfc:	add    BYTE PTR [rax],al
  405dfe:	add    BYTE PTR [rax],al
  405e00:	rex.RXB
  405e01:	rex.XB
  405e02:	rex.XB cmp spl,BYTE PTR [r8]
  405e05:	sub    BYTE PTR [rdi+0x65],al
  405e08:	outs   dx,BYTE PTR ds:[rsi]
  405e09:	je     405e7a <_head_lib64_libkernel32_a-0x3186>
  405e0b:	outs   dx,DWORD PTR ds:[rsi]
  405e0c:	and    BYTE PTR [rip+0x302e342e],dh        # 306e9240 <libintl_8_dll_iname+0x302df734>
  405e12:	sub    eax,0x70203372
  405e17:	xor    DWORD PTR [rsi],ebp
  405e19:	xor    ebp,DWORD PTR [rax+riz*1]
  405e1c:	jo     405e87 <_head_lib64_libkernel32_a-0x3179>
  405e1e:	gs sub eax,0x2e362e30
  405e24:	xor    eax,0x2e352029
  405e29:	xor    al,0x2e
  405e2b:	xor    BYTE PTR [rax],al
  405e2d:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     406023 <_head_lib64_libkernel32_a-0x2fdd>
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     40603b <_head_lib64_libkernel32_a-0x2fc5>
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 406047 <_head_lib64_libkernel32_a-0x2fb9>
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x15360000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0x40000070
  406055:	adc    eax,0x159c0000
  40605a:	add    BYTE PTR [rax],al
  40605c:	jo     4060ce <_head_lib64_libkernel32_a-0x2f32>
  40605e:	add    BYTE PTR [rax],al
  406060:	movabs al,ds:0x7c000015a6000015
  406069:	jo     40606b <_head_lib64_libkernel32_a-0x2f95>
  40606b:	add    BYTE PTR [rax-0x2ffffeb],dh
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	test   BYTE PTR [rax+0x0],dh
  406077:	add    BYTE PTR [rax],al
  406079:	sbb    BYTE PTR [rax],al
  40607b:	add    BYTE PTR [rdx-0x6fffffe8],al
  406081:	jo     406083 <_head_lib64_libkernel32_a-0x2f7d>
  406083:	add    BYTE PTR [rax-0x4affffe8],dl
  406089:	sbb    BYTE PTR [rax],al
  40608b:	add    BYTE PTR [rax+0x70],bl
  406091:	sbb    DWORD PTR [rax],eax
  406093:	add    BYTE PTR [rdi-0x5bffffe7],ah
  406099:	jo     40609b <_head_lib64_libkernel32_a-0x2f65>
  40609b:	add    BYTE PTR [rax-0x36ffffe7],dh
  4060a1:	sbb    DWORD PTR [rax],eax
  4060a3:	add    BYTE PTR [rax+rsi*2+0x19d00000],ch
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	add    eax,0xb400001a
  4060b1:	jo     4060b3 <_head_lib64_libkernel32_a-0x2f4d>
  4060b3:	add    BYTE PTR [rax],dl
  4060b5:	sbb    al,BYTE PTR [rax]
  4060b7:	add    BYTE PTR [rbp+0x1a],ah
  4060ba:	add    BYTE PTR [rax],al
  4060bc:	mov    esp,0x70000070
  4060c1:	sbb    al,BYTE PTR [rax]
  4060c3:	add    BYTE PTR [rdx+rbx*1+0x70c80000],cl
  4060ca:	add    BYTE PTR [rax],al
  4060cc:	nop
  4060cd:	sbb    al,BYTE PTR [rax]
  4060cf:	add    BYTE PTR [rdx-0x33ffffe6],bl
  4060d5:	jo     4060d7 <_head_lib64_libkernel32_a-0x2f29>
  4060d7:	add    BYTE PTR [rax-0x5cffffe6],ah
  4060dd:	sbb    al,BYTE PTR [rax]
  4060df:	add    al,dl
  4060e1:	jo     4060e3 <_head_lib64_libkernel32_a-0x2f1d>
  4060e3:	add    BYTE PTR [rax-0x79ffffe6],dh
  4060e9:	sbb    eax,DWORD PTR [rax]
  4060eb:	add    ah,dl
  4060ed:	jo     4060ef <_head_lib64_libkernel32_a-0x2f11>
  4060ef:	add    BYTE PTR [rax-0x74ffffe5],dl
  4060f5:	sbb    al,0x0
  4060f7:	add    ah,ah
  4060f9:	jo     4060fb <_head_lib64_libkernel32_a-0x2f05>
  4060fb:	add    BYTE PTR [rax-0x40ffffe4],dl
  406101:	sbb    al,0x0
  406103:	add    ah,dh
  406105:	jo     406107 <_head_lib64_libkernel32_a-0x2ef9>
  406107:	add    al,al
  406109:	sbb    al,0x0
  40610b:	add    BYTE PTR [rcx],ch
  40610d:	sbb    eax,0x70fc0000
  406112:	add    BYTE PTR [rax],al
  406114:	xor    BYTE PTR [rip+0x1d330000],bl        # 1d73611a <libintl_8_dll_iname+0x1d32c60e>
  40611a:	add    BYTE PTR [rax],al
  40611c:	or     BYTE PTR [rcx+0x0],dh
  40611f:	add    BYTE PTR [rax+0x1d],al
  406122:	add    BYTE PTR [rax],al
  406124:	sbb    DWORD PTR [rip+0x710c0000],0x1d900000        # 714c612e <libintl_8_dll_iname+0x710bc622>
  40612e:	add    BYTE PTR [rax],al
  406130:	pushf  
  406131:	sbb    eax,0x71140000
  406136:	add    BYTE PTR [rax],al
  406138:	movabs al,ds:0x1800001e9c00001d
  406141:	jno    406143 <_head_lib64_libkernel32_a-0x2ebd>
  406143:	add    BYTE PTR [rax-0x5cffffe2],ah
  406149:	(bad)  
  40614a:	add    BYTE PTR [rax],al
  40614c:	xor    BYTE PTR [rcx+0x0],dh
  40614f:	add    BYTE PTR [rax-0x4bffffe2],dh
  406155:	(bad)  
  406156:	add    BYTE PTR [rax],al
  406158:	xor    al,0x71
  40615a:	add    BYTE PTR [rax],al
  40615c:	rcr    BYTE PTR [rsi],0x0
  40615f:	add    ah,al
  406161:	(bad)  
  406162:	add    BYTE PTR [rax],al
  406164:	cmp    BYTE PTR [rcx+0x0],dh
  406167:	add    al,dl
  406169:	(bad)  
  40616a:	add    BYTE PTR [rax],al
  40616c:	xor    DWORD PTR [rdi],ebx
  40616e:	add    BYTE PTR [rax],al
  406170:	cmp    al,0x71
  406172:	add    BYTE PTR [rax],al
  406174:	rex (bad) 
  406176:	add    BYTE PTR [rax],al
  406178:	movabs ds:0xb000007148000020,al
  406181:	and    BYTE PTR [rax],al
  406183:	add    BYTE PTR [rcx+0x5c000023],ch
  406189:	jno    40618b <_head_lib64_libkernel32_a-0x2e75>
  40618b:	add    BYTE PTR [rax+0x56000023],dh
  406191:	and    eax,0x71740000
  406196:	add    BYTE PTR [rax],al
  406198:	(bad)  
  406199:	and    eax,0x264c0000
  40619e:	add    BYTE PTR [rax],al
  4061a0:	jl     406213 <_head_lib64_libkernel32_a-0x2ded>
  4061a2:	add    BYTE PTR [rax],al
  4061a4:	push   rax
  4061a5:	add    BYTE PTR es:[rax],al
  4061a8:	or     BYTE PTR [rax],ch
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	mov    WORD PTR [rcx+0x0],?
  4061af:	add    BYTE PTR [rax],dl
  4061b1:	sub    BYTE PTR [rax],al
  4061b3:	add    BYTE PTR [rbp+0x28],bh
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	xchg   esp,eax
  4061b9:	jno    4061bb <_head_lib64_libkernel32_a-0x2e45>
  4061bb:	add    BYTE PTR [rax-0xffffd8],al
  4061c1:	sub    BYTE PTR [rax],al
  4061c3:	add    BYTE PTR [rcx+rsi*2+0x29000000],ah
  4061ca:	add    BYTE PTR [rax],al
  4061cc:	lahf   
  4061cd:	sub    DWORD PTR [rax],eax
  4061cf:	add    BYTE PTR [rax-0x5fffff8f],dh
  4061d5:	sub    DWORD PTR [rax],eax
  4061d7:	add    BYTE PTR [rdx+0x2a],bh
  4061da:	add    BYTE PTR [rax],al
  4061dc:	mov    eax,0x80000071
  4061e1:	sub    al,BYTE PTR [rax]
  4061e3:	add    BYTE PTR [rdi-0x3fffffd6],bl
  4061e9:	jno    4061eb <_head_lib64_libkernel32_a-0x2e15>
  4061eb:	add    BYTE PTR [rax-0x4dffffd6],ah
  4061f1:	sub    al,BYTE PTR [rax]
  4061f3:	add    ah,al
  4061f5:	jno    4061f7 <_head_lib64_libkernel32_a-0x2e09>
  4061f7:	add    al,al
  4061f9:	sub    al,BYTE PTR [rax]
  4061fb:	add    BYTE PTR [rip+0xffffffffc800002b],al        # ffffffffc840622c <libintl_8_dll_iname+0xffffffffc7ffc720>
  406201:	jno    406203 <_head_lib64_libkernel32_a-0x2dfd>
  406203:	add    BYTE PTR [rax],dl
  406205:	sub    eax,DWORD PTR [rax]
  406207:	add    BYTE PTR [rsi-0x33ffffd5],ch
  40620d:	jno    40620f <_head_lib64_libkernel32_a-0x2df1>
  40620f:	add    BYTE PTR [rax-0xcffffd5],dh
  406215:	sub    eax,DWORD PTR [rax]
  406217:	add    al,bl
  406219:	jno    40621b <_head_lib64_libkernel32_a-0x2de5>
  40621b:	add    BYTE PTR [rax],al
  40621d:	sub    al,0x0
  40621f:	add    BYTE PTR [rbx],bh
  406221:	sub    al,0x0
  406223:	add    ah,ah
  406225:	jno    406227 <_head_lib64_libkernel32_a-0x2dd9>
  406227:	add    BYTE PTR [rax+0x2c],al
  40622a:	add    BYTE PTR [rax],al
  40622c:	(bad)  
  40622d:	sub    al,0x0
  40622f:	add    ah,ch
  406231:	jno    406233 <_head_lib64_libkernel32_a-0x2dcd>
  406233:	add    al,dl
  406235:	sub    al,0x0
  406237:	add    BYTE PTR [rax],cl
  406239:	sub    eax,0x71f80000
  40623e:	add    BYTE PTR [rax],al
  406240:	adc    BYTE PTR [rip+0x2d650000],ch        # 2da56246 <libintl_8_dll_iname+0x2d64c73a>
  406246:	add    BYTE PTR [rax],al
  406248:	add    al,0x72
  40624a:	add    BYTE PTR [rax],al
  40624c:	jo     40627b <_head_lib64_libkernel32_a-0x2d85>
  40624e:	add    BYTE PTR [rax],al
  406250:	(bad)  
  406251:	add    BYTE PTR cs:[rax],al
  406254:	adc    BYTE PTR [rdx+0x0],dh
  406257:	add    BYTE PTR [rax],dh
  406259:	(bad)  
  40625a:	add    BYTE PTR [rax],al
  40625c:	cmp    BYTE PTR [rdi],ch
  40625e:	add    BYTE PTR [rax],al
  406260:	and    BYTE PTR [rdx+0x0],dh
  406263:	add    BYTE PTR [rax+0x2f],al
  406266:	add    BYTE PTR [rax],al
  406268:	rex.WXB (bad) 
  40626a:	add    BYTE PTR [rax],al
  40626c:	and    al,0x72
  40626e:	add    BYTE PTR [rax],al
  406270:	xor    BYTE PTR [rax],al
  406273:	add    BYTE PTR [rdx+0x30],dh
  406276:	add    BYTE PTR [rax],al
  406278:	pushf  
  406279:	jo     40627b <_head_lib64_libkernel32_a-0x2d85>
  40627b:	add    BYTE PTR [rax-0x75ffffd0],al
  406281:	xor    BYTE PTR [rax],al
  406283:	add    BYTE PTR [rax],ch
  406285:	jb     406287 <_head_lib64_libkernel32_a-0x2d79>
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     407028 <_head_lib64_libkernel32_a-0x1fd8>
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	and    BYTE PTR [rdi],ch
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	(bad)  
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax+0x26],dl
  407042:	add    BYTE PTR [rax],al
  407044:	in     al,dx
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	and    BYTE PTR [rdi],ch
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	add    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	sbb    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	push   rax
  407061:	add    BYTE PTR es:[rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rdx+rax*1],eax
  40706b:	add    eax,0x50010304
  407070:	add    DWORD PTR [rax],ecx
  407072:	add    eax,DWORD PTR [rip+0x3043208]        # 344a280 <libintl_8_dll_iname+0x3040774>
  407078:	add    DWORD PTR [rax+0x0],edx
  40707b:	add    BYTE PTR [rcx],al
  40707d:	add    al,0x2
  40707f:	add    eax,0x50010304
  407084:	add    DWORD PTR [rdi],eax
  407086:	add    al,0x0
  407088:	(bad)  
  407089:	jb     40708e <_head_lib64_libkernel32_a-0x1f72>
  40708b:	xor    BYTE PTR [rdx],al
  40708d:	(bad)  
  40708e:	add    DWORD PTR [rax+0x1],esi
  407091:	add    al,0x1
  407093:	add    BYTE PTR [rdx+riz*8],al
  407096:	add    BYTE PTR [rax],al
  407098:	add    DWORD PTR [rax],eax
  40709a:	add    BYTE PTR [rax],al
  40709c:	add    DWORD PTR [rcx+rax*1],eax
  40709f:	add    BYTE PTR [rdx+rax*2],al
  4070a2:	add    BYTE PTR [rax],al
  4070a4:	add    DWORD PTR [rip+0x52050002],eax        # 524570ac <libintl_8_dll_iname+0x5204d5a0>
  4070aa:	add    DWORD PTR [rax],esi
  4070ac:	add    DWORD PTR [rcx+rax*1],eax
  4070af:	add    BYTE PTR [rdx+rax*2],al
  4070b2:	add    BYTE PTR [rax],al
  4070b4:	add    DWORD PTR [rcx+rax*1],eax
  4070b7:	add    BYTE PTR [rdx+rax*2],al
  4070ba:	add    BYTE PTR [rax],al
  4070bc:	add    DWORD PTR [rsi],eax
  4070be:	add    eax,DWORD PTR [rax]
  4070c0:	(bad)  
  4070c1:	rex.X add sil,BYTE PTR [rax]
  4070c4:	add    DWORD PTR [rax+0x0],esp
  4070c7:	add    BYTE PTR [rcx],al
  4070c9:	add    BYTE PTR [rax],al
  4070cb:	add    BYTE PTR [rcx],al
  4070cd:	add    BYTE PTR [rax],al
  4070cf:	add    BYTE PTR [rcx],al
  4070d1:	add    BYTE PTR [rax],al
  4070d3:	add    BYTE PTR [rcx],al
  4070d5:	or     al,BYTE PTR [rsi]
  4070d7:	add    BYTE PTR [rdx],cl
  4070d9:	jb     4070e1 <_head_lib64_libkernel32_a-0x1f1f>
  4070db:	xor    BYTE PTR [rip+0x3700460],al        # 3b07541 <libintl_8_dll_iname+0x36fda35>
  4070e1:	push   rax
  4070e2:	add    al,al
  4070e4:	add    DWORD PTR [rdx],ecx
  4070e6:	add    eax,0x6d20a05
  4070eb:	add    eax,DWORD PTR [rbx]
  4070ed:	xor    BYTE PTR [rdx],al
  4070ef:	(bad)  
  4070f0:	add    DWORD PTR [rax+0x0],edx
  4070f3:	add    BYTE PTR [rcx],al
  4070f5:	add    al,0x1
  4070f7:	add    BYTE PTR [rdx+rax*2],al
  4070fa:	add    BYTE PTR [rax],al
  4070fc:	add    DWORD PTR [rsi],eax
  4070fe:	add    eax,DWORD PTR [rax]
  407100:	(bad)  
  407101:	rex.X add sil,BYTE PTR [rax]
  407104:	add    DWORD PTR [rax+0x0],esp
  407107:	add    BYTE PTR [rcx],al
  407109:	add    BYTE PTR [rax],al
  40710b:	add    BYTE PTR [rcx],al
  40710d:	add    al,0x1
  40710f:	add    BYTE PTR [rdx+riz*4],al
  407112:	add    BYTE PTR [rax],al
  407114:	add    DWORD PTR [rax],eax
  407116:	add    BYTE PTR [rax],al
  407118:	add    DWORD PTR [rsi],edx
  40711a:	or     DWORD PTR [rax],eax
  40711c:	(bad)  
  40711d:	mov    BYTE PTR [rsi],al
  40711f:	add    BYTE PTR [rax],dl
  407121:	js     407128 <_head_lib64_libkernel32_a-0x1ed8>
  407123:	add    BYTE PTR [rbx],cl
  407125:	push   0xffffffffe2060004
  40712a:	add    dh,BYTE PTR [rax]
  40712c:	add    DWORD PTR [rax+0x0],esp
  40712f:	add    BYTE PTR [rcx],al
  407131:	add    BYTE PTR [rax],al
  407133:	add    BYTE PTR [rcx],al
  407135:	add    BYTE PTR [rax],al
  407137:	add    BYTE PTR [rcx],al
  407139:	add    BYTE PTR [rax],al
  40713b:	add    BYTE PTR [rcx],al
  40713d:	(bad)  
  40713e:	add    eax,DWORD PTR [rax]
  407140:	(bad)  
  407141:	(bad)  
  407143:	xor    BYTE PTR [rcx],al
  407145:	(bad)  
  407146:	add    BYTE PTR [rax],al
  407148:	add    DWORD PTR [rdi+rax*1],ecx
  40714b:	add    BYTE PTR [rdx+riz*4],cl
  40714e:	or     BYTE PTR [rax],dh
  407150:	(bad)  
  407151:	(bad)  
  407152:	(bad)  
  407153:	jo     40715a <_head_lib64_libkernel32_a-0x1ea6>
  407155:	push   rax
  407156:	add    al,0xc0
  407158:	add    dl,al
  40715a:	add    BYTE PTR [rax],al
  40715c:	add    DWORD PTR [rcx],edx
  40715e:	or     DWORD PTR [rip+0x30db211],eax        # 34e2375 <libintl_8_dll_iname+0x30d8869>
  407164:	or     dh,BYTE PTR [rax]
  407166:	or     DWORD PTR [rax+0x8],esp
  407169:	jo     407172 <_head_lib64_libkernel32_a-0x1e8e>
  40716b:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 2207542 <libintl_8_dll_iname+0x1dfda36>
  407172:	add    BYTE PTR [rax],al
  407174:	add    DWORD PTR [rcx+rax*1],eax
  407177:	add    BYTE PTR [rdx+rax*2],al
  40717a:	add    BYTE PTR [rax],al
  40717c:	add    DWORD PTR [rdx],ecx
  40717e:	(bad)  
  40717f:	add    BYTE PTR [rdx],cl
  407181:	xor    al,BYTE PTR [rsi]
  407183:	xor    BYTE PTR [rip+0x3700460],al        # 3b075e9 <libintl_8_dll_iname+0x36fdadd>
  407189:	push   rax
  40718a:	add    al,al
  40718c:	add    DWORD PTR [rip+0x32050002],eax        # 32457194 <libintl_8_dll_iname+0x3204d688>
  407192:	add    DWORD PTR [rax],esi
  407194:	add    DWORD PTR [rax],ecx
  407196:	add    eax,0x4420800
  40719b:	xor    BYTE PTR [rbx],al
  40719d:	(bad)  
  40719e:	add    dh,BYTE PTR [rax+0x1]
  4071a1:	push   rax
  4071a2:	add    BYTE PTR [rax],al
  4071a4:	add    DWORD PTR [rdi],eax
  4071a6:	add    al,0x0
  4071a8:	(bad)  
  4071a9:	xor    al,BYTE PTR [rbx]
  4071ab:	xor    BYTE PTR [rdx],al
  4071ad:	(bad)  
  4071ae:	add    DWORD PTR [rax+0x1],esi
  4071b1:	add    eax,0x32050002
  4071b6:	add    DWORD PTR [rax],esi
  4071b8:	add    DWORD PTR [rip+0x32050002],eax        # 324571c0 <libintl_8_dll_iname+0x3204d6b4>
  4071be:	add    DWORD PTR [rax],esi
  4071c0:	add    DWORD PTR [rax],eax
  4071c2:	add    BYTE PTR [rax],al
  4071c4:	add    DWORD PTR [rax],eax
  4071c6:	add    BYTE PTR [rax],al
  4071c8:	add    DWORD PTR [rax],eax
  4071ca:	add    BYTE PTR [rax],al
  4071cc:	add    DWORD PTR [rdi],eax
  4071ce:	add    al,0x0
  4071d0:	(bad)  
  4071d1:	xor    al,BYTE PTR [rbx]
  4071d3:	xor    BYTE PTR [rdx],al
  4071d5:	(bad)  
  4071d6:	add    DWORD PTR [rax+0x1],esi
  4071d9:	(bad)  
  4071da:	add    eax,DWORD PTR [rax]
  4071dc:	(bad)  
  4071dd:	rex.X add sil,BYTE PTR [rax]
  4071e0:	add    DWORD PTR [rax+0x0],esp
  4071e3:	add    BYTE PTR [rcx],al
  4071e5:	add    eax,0x32050002
  4071ea:	add    DWORD PTR [rax],esi
  4071ec:	add    DWORD PTR [rdi],eax
  4071ee:	add    al,0x0
  4071f0:	(bad)  
  4071f1:	xor    al,BYTE PTR [rbx]
  4071f3:	xor    BYTE PTR [rdx],al
  4071f5:	(bad)  
  4071f6:	add    DWORD PTR [rax+0x1],esi
  4071f9:	(bad)  
  4071fa:	add    eax,DWORD PTR [rax]
  4071fc:	(bad)  
  4071fd:	rex.X add sil,BYTE PTR [rax]
  407200:	add    DWORD PTR [rax+0x0],esp
  407203:	add    BYTE PTR [rcx],al
  407205:	(bad)  
  407206:	add    eax,DWORD PTR [rax]
  407208:	(bad)  
  407209:	rex.X add sil,BYTE PTR [rax]
  40720c:	add    DWORD PTR [rax+0x0],esp
  40720f:	add    BYTE PTR [rcx],al
  407211:	or     BYTE PTR [rip+0x4420800],al        # 4827a17 <libintl_8_dll_iname+0x441df0b>
  407217:	xor    BYTE PTR [rbx],al
  407219:	(bad)  
  40721a:	add    dh,BYTE PTR [rax+0x1]
  40721d:	push   rax
  40721e:	add    BYTE PTR [rax],al
  407220:	add    DWORD PTR [rax],eax
  407222:	add    BYTE PTR [rax],al
  407224:	add    DWORD PTR [rax],eax
  407226:	add    BYTE PTR [rax],al
  407228:	add    DWORD PTR [rdx+rax*1],eax
  40722b:	add    eax,0x50010304

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <_head_lib64_libkernel32_a>:
  409000:	mov    ah,0x90
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	clc    
  40900d:	cdq    
  40900e:	add    BYTE PTR [rax],al
  409010:	cld    
  409011:	xchg   edx,eax
	...

0000000000409014 <_head_lib64_libmsvcrt_a>:
  409014:	test   BYTE PTR [rcx+0x0],dl
  40901a:	add    BYTE PTR [rax],al
  40901c:	add    BYTE PTR [rax],al
  40901e:	add    BYTE PTR [rax],al
  409020:	sbb    BYTE PTR [rdx-0x6c340000],0x0
	...

0000000000409028 <_head_lib64_libshell32_a>:
  409028:	jl     408fbc <_head_lib64_libkernel32_a-0x44>
	...
  409032:	add    BYTE PTR [rax],al
  409034:	nop
  409035:	(bad)  
  409036:	add    BYTE PTR [rax],al
  409038:	(bad)  
  409039:	xchg   esp,eax
	...

000000000040903c <_head_lib64_libuser32_a>:
  40903c:	mov    WORD PTR [rdx+0x0],ss
  409042:	add    BYTE PTR [rax],al
  409044:	add    BYTE PTR [rax],al
  409046:	add    BYTE PTR [rax],al
  409048:	movabs al,ds:0x9c000094d400009a

0000000000409050 <_head_libgimp_2_0_0_dll>:
  409050:	pushf  
  409051:	xchg   edx,eax
	...
  40905a:	add    BYTE PTR [rax],al
  40905c:	mov    ah,0x9a
  40905e:	add    BYTE PTR [rax],al
  409060:	in     al,0x94
	...

0000000000409064 <_head_libgimpbase_2_0_0_dll>:
  409064:	mov    ah,0x92
	...
  40906e:	add    BYTE PTR [rax],al
  409070:	int3   
  409071:	(bad)  
  409072:	add    BYTE PTR [rax],al
  409074:	cld    
  409075:	xchg   esp,eax
	...

0000000000409078 <_head_libglib_2_0_0_dll>:
  409078:	(bad)  
  409079:	xchg   edx,eax
	...
  409082:	add    BYTE PTR [rax],al
  409084:	call   c409123 <libintl_8_dll_iname+0xbfff617>
  409089:	xchg   ebp,eax
	...

000000000040908c <_head_libintl_8_dll>:
  40908c:	(bad)  
  40908d:	xchg   edx,eax
	...
  409096:	add    BYTE PTR [rax],al
  409098:	or     al,0x9b
  40909a:	add    BYTE PTR [rax],al
  40909c:	sbb    al,0x95
	...
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	rex.R xchg ebp,eax
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	add    BYTE PTR [rax],al
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	pop    rsp
  4090bd:	xchg   ebp,eax
  4090be:	add    BYTE PTR [rax],al
  4090c0:	add    BYTE PTR [rax],al
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	je     40905b <_head_libgimp_2_0_0_dll+0xb>
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	add    BYTE PTR [rax],al
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	mov    BYTE PTR [rbp+0x0],dl
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	sahf   
  4090d5:	xchg   ebp,eax
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	add    BYTE PTR [rax],al
  4090da:	add    BYTE PTR [rax],al
  4090dc:	mov    ah,0x95
  4090de:	add    BYTE PTR [rax],al
  4090e0:	add    BYTE PTR [rax],al
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	(bad)  
  4090e5:	xchg   ebp,eax
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	add    BYTE PTR [rax],al
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	fcom   DWORD PTR [rbp+0x0]
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	(bad)  
  4090f5:	xchg   ebp,eax
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	add    BYTE PTR [rax],al
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	cld    
  4090fd:	xchg   ebp,eax
  4090fe:	add    BYTE PTR [rax],al
  409100:	add    BYTE PTR [rax],al
  409102:	add    BYTE PTR [rax],al
  409104:	(bad)  
  409105:	xchg   esi,eax
  409106:	add    BYTE PTR [rax],al
  409108:	add    BYTE PTR [rax],al
  40910a:	add    BYTE PTR [rax],al
  40910c:	es xchg esi,eax
  40910e:	add    BYTE PTR [rax],al
  409110:	add    BYTE PTR [rax],al
  409112:	add    BYTE PTR [rax],al
  409114:	rex.X xchg esi,eax
  409116:	add    BYTE PTR [rax],al
  409118:	add    BYTE PTR [rax],al
  40911a:	add    BYTE PTR [rax],al
  40911c:	pop    rdx
  40911d:	xchg   esi,eax
  40911e:	add    BYTE PTR [rax],al
  409120:	add    BYTE PTR [rax],al
  409122:	add    BYTE PTR [rax],al
  409124:	je     4090bc <_head_libintl_8_dll+0x30>
  409126:	add    BYTE PTR [rax],al
  409128:	add    BYTE PTR [rax],al
  40912a:	add    BYTE PTR [rax],al
  40912c:	mov    dl,BYTE PTR [rsi+0x0]
  409132:	add    BYTE PTR [rax],al
  409134:	sahf   
  409135:	xchg   esi,eax
  409136:	add    BYTE PTR [rax],al
  409138:	add    BYTE PTR [rax],al
  40913a:	add    BYTE PTR [rax],al
  40913c:	mov    eax,0x96
  409141:	add    BYTE PTR [rax],al
  409143:	add    ah,cl
  409145:	xchg   esi,eax
  409146:	add    BYTE PTR [rax],al
  409148:	add    BYTE PTR [rax],al
  40914a:	add    BYTE PTR [rax],al
  40914c:	(bad)  
  40914d:	xchg   esi,eax
  40914e:	add    BYTE PTR [rax],al
  409150:	add    BYTE PTR [rax],al
  409152:	add    BYTE PTR [rax],al
  409154:	repnz xchg esi,eax
  409156:	add    BYTE PTR [rax],al
  409158:	add    BYTE PTR [rax],al
  40915a:	add    BYTE PTR [rax],al
  40915c:	(bad)  
  40915d:	xchg   edi,eax
  40915e:	add    BYTE PTR [rax],al
  409160:	add    BYTE PTR [rax],al
  409162:	add    BYTE PTR [rax],al
  409164:	adc    al,0x97
  409166:	add    BYTE PTR [rax],al
  409168:	add    BYTE PTR [rax],al
  40916a:	add    BYTE PTR [rax],al
  40916c:	xor    BYTE PTR [rdi+0x0],dl
  409172:	add    BYTE PTR [rax],al
  409174:	rex.X xchg edi,eax
	...
  409182:	add    BYTE PTR [rax],al
  409184:	push   rdx
  409185:	xchg   edi,eax
  409186:	add    BYTE PTR [rax],al
  409188:	add    BYTE PTR [rax],al
  40918a:	add    BYTE PTR [rax],al
  40918c:	push   0xffffffffffffff97
  40918e:	add    BYTE PTR [rax],al
  409190:	add    BYTE PTR [rax],al
  409192:	add    BYTE PTR [rax],al
  409194:	je     40912d <_head_libintl_8_dll+0xa1>
  409196:	add    BYTE PTR [rax],al
  409198:	add    BYTE PTR [rax],al
  40919a:	add    BYTE PTR [rax],al
  40919c:	jle    409135 <_head_libintl_8_dll+0xa9>
  40919e:	add    BYTE PTR [rax],al
  4091a0:	add    BYTE PTR [rax],al
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	mov    WORD PTR [rdi+0x0],ss
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	pushf  
  4091ad:	xchg   edi,eax
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	add    BYTE PTR [rax],al
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	test   al,0x97
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	add    BYTE PTR [rax],al
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	mov    dh,0x97
  4091be:	add    BYTE PTR [rax],al
  4091c0:	add    BYTE PTR [rax],al
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	(bad)  
  4091c5:	xchg   edi,eax
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	add    BYTE PTR [rax],al
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	fcom   DWORD PTR [rdi+0x0]
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	in     al,dx
  4091d5:	xchg   edi,eax
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	add    BYTE PTR [rax],al
  4091da:	add    BYTE PTR [rax],al
  4091dc:	not    BYTE PTR [rdi+0x0]
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	add    al,0x98
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	add    BYTE PTR [rax],al
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	(bad)  
  4091ed:	cwde   
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	add    BYTE PTR [rax],al
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	sbb    BYTE PTR [rax+0x0],bl
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	and    al,0x98
  4091fe:	add    BYTE PTR [rax],al
  409200:	add    BYTE PTR [rax],al
  409202:	add    BYTE PTR [rax],al
  409204:	sub    al,0x98
  409206:	add    BYTE PTR [rax],al
  409208:	add    BYTE PTR [rax],al
  40920a:	add    BYTE PTR [rax],al
  40920c:	ss cwde 
  40920e:	add    BYTE PTR [rax],al
  409210:	add    BYTE PTR [rax],al
  409212:	add    BYTE PTR [rax],al
  409214:	rex cwde 
  409216:	add    BYTE PTR [rax],al
  409218:	add    BYTE PTR [rax],al
  40921a:	add    BYTE PTR [rax],al
  40921c:	cdqe   
  40921e:	add    BYTE PTR [rax],al
  409220:	add    BYTE PTR [rax],al
  409222:	add    BYTE PTR [rax],al
  409224:	push   rdx
  409225:	cwde   
  409226:	add    BYTE PTR [rax],al
  409228:	add    BYTE PTR [rax],al
  40922a:	add    BYTE PTR [rax],al
  40922c:	pop    rdx
  40922d:	cwde   
  40922e:	add    BYTE PTR [rax],al
  409230:	add    BYTE PTR [rax],al
  409232:	add    BYTE PTR [rax],al
  409234:	fs cwde 
  409236:	add    BYTE PTR [rax],al
  409238:	add    BYTE PTR [rax],al
  40923a:	add    BYTE PTR [rax],al
  40923c:	ins    BYTE PTR es:[rdi],dx
  40923d:	cwde   
  40923e:	add    BYTE PTR [rax],al
  409240:	add    BYTE PTR [rax],al
  409242:	add    BYTE PTR [rax],al
  409244:	jbe    4091de <_head_libintl_8_dll+0x152>
  409246:	add    BYTE PTR [rax],al
  409248:	add    BYTE PTR [rax],al
  40924a:	add    BYTE PTR [rax],al
  40924c:	sbb    BYTE PTR [rax+0x0],0x0
  409253:	add    BYTE PTR [rdx+0x98],cl
  409259:	add    BYTE PTR [rax],al
  40925b:	add    BYTE PTR [rax+rbx*4+0x0],dl
  409262:	add    BYTE PTR [rax],al
  409264:	sahf   
  409265:	cwde   
  409266:	add    BYTE PTR [rax],al
  409268:	add    BYTE PTR [rax],al
  40926a:	add    BYTE PTR [rax],al
  40926c:	test   al,0x98
	...
  40927a:	add    BYTE PTR [rax],al
  40927c:	mov    ah,0x98
	...
  40928a:	add    BYTE PTR [rax],al
  40928c:	(bad)  
  40928d:	cwde   
	...
  40929a:	add    BYTE PTR [rax],al
  40929c:	fcomp  DWORD PTR [rax+0x0]
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	hlt    
  4092a5:	cwde   
	...
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	add    BYTE PTR [rcx+0x0],bl
	...
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	sbb    BYTE PTR [rcx+0x0],bl
	...
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	sub    BYTE PTR [rcx+0x0],bl
  4092da:	add    BYTE PTR [rax],al
  4092dc:	rex.WR cqo 
  4092de:	add    BYTE PTR [rax],al
  4092e0:	add    BYTE PTR [rax],al
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	push   0x99
  4092e9:	add    BYTE PTR [rax],al
  4092eb:	add    BYTE PTR [rcx+rbx*4+0x0],bh
	...

00000000004092fc <__IAT_start__>:
  4092fc:	rex.R xchg ebp,eax
  4092fe:	add    BYTE PTR [rax],al
  409300:	add    BYTE PTR [rax],al
	...

0000000000409304 <__imp_EnterCriticalSection>:
  409304:	pop    rsp
  409305:	xchg   ebp,eax
  409306:	add    BYTE PTR [rax],al
  409308:	add    BYTE PTR [rax],al
	...

000000000040930c <__imp_GetCurrentProcess>:
  40930c:	je     4092a3 <_head_libintl_8_dll+0x217>
  40930e:	add    BYTE PTR [rax],al
  409310:	add    BYTE PTR [rax],al
	...

0000000000409314 <__imp_GetCurrentProcessId>:
  409314:	mov    BYTE PTR [rbp+0x0],dl
	...

000000000040931c <__imp_GetCurrentThreadId>:
  40931c:	sahf   
  40931d:	xchg   ebp,eax
  40931e:	add    BYTE PTR [rax],al
  409320:	add    BYTE PTR [rax],al
	...

0000000000409324 <__imp_GetLastError>:
  409324:	mov    ah,0x95
  409326:	add    BYTE PTR [rax],al
  409328:	add    BYTE PTR [rax],al
	...

000000000040932c <__imp_GetModuleHandleA>:
  40932c:	(bad)  
  40932d:	xchg   ebp,eax
  40932e:	add    BYTE PTR [rax],al
  409330:	add    BYTE PTR [rax],al
	...

0000000000409334 <__imp_GetProcAddress>:
  409334:	fcom   DWORD PTR [rbp+0x0]
	...

000000000040933c <__imp_GetStartupInfoA>:
  40933c:	(bad)  
  40933d:	xchg   ebp,eax
  40933e:	add    BYTE PTR [rax],al
  409340:	add    BYTE PTR [rax],al
	...

0000000000409344 <__imp_GetSystemTimeAsFileTime>:
  409344:	cld    
  409345:	xchg   ebp,eax
  409346:	add    BYTE PTR [rax],al
  409348:	add    BYTE PTR [rax],al
	...

000000000040934c <__imp_GetTickCount>:
  40934c:	(bad)  
  40934d:	xchg   esi,eax
  40934e:	add    BYTE PTR [rax],al
  409350:	add    BYTE PTR [rax],al
	...

0000000000409354 <__imp_InitializeCriticalSection>:
  409354:	es xchg esi,eax
  409356:	add    BYTE PTR [rax],al
  409358:	add    BYTE PTR [rax],al
	...

000000000040935c <__imp_LeaveCriticalSection>:
  40935c:	rex.X xchg esi,eax
  40935e:	add    BYTE PTR [rax],al
  409360:	add    BYTE PTR [rax],al
	...

0000000000409364 <__imp_QueryPerformanceCounter>:
  409364:	pop    rdx
  409365:	xchg   esi,eax
  409366:	add    BYTE PTR [rax],al
  409368:	add    BYTE PTR [rax],al
	...

000000000040936c <__imp_RtlAddFunctionTable>:
  40936c:	je     409304 <__imp_EnterCriticalSection>
  40936e:	add    BYTE PTR [rax],al
  409370:	add    BYTE PTR [rax],al
	...

0000000000409374 <__imp_RtlCaptureContext>:
  409374:	mov    dl,BYTE PTR [rsi+0x0]
	...

000000000040937c <__imp_RtlLookupFunctionEntry>:
  40937c:	sahf   
  40937d:	xchg   esi,eax
  40937e:	add    BYTE PTR [rax],al
  409380:	add    BYTE PTR [rax],al
	...

0000000000409384 <__imp_RtlVirtualUnwind>:
  409384:	mov    eax,0x96
  409389:	add    BYTE PTR [rax],al
	...

000000000040938c <__imp_SetUnhandledExceptionFilter>:
  40938c:	int3   
  40938d:	xchg   esi,eax
  40938e:	add    BYTE PTR [rax],al
  409390:	add    BYTE PTR [rax],al
	...

0000000000409394 <__imp_Sleep>:
  409394:	(bad)  
  409395:	xchg   esi,eax
  409396:	add    BYTE PTR [rax],al
  409398:	add    BYTE PTR [rax],al
	...

000000000040939c <__imp_TerminateProcess>:
  40939c:	repnz xchg esi,eax
  40939e:	add    BYTE PTR [rax],al
  4093a0:	add    BYTE PTR [rax],al
	...

00000000004093a4 <__imp_TlsGetValue>:
  4093a4:	(bad)  
  4093a5:	xchg   edi,eax
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	add    BYTE PTR [rax],al
	...

00000000004093ac <__imp_UnhandledExceptionFilter>:
  4093ac:	adc    al,0x97
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	add    BYTE PTR [rax],al
	...

00000000004093b4 <__imp_VirtualProtect>:
  4093b4:	xor    BYTE PTR [rdi+0x0],dl
	...

00000000004093bc <__imp_VirtualQuery>:
  4093bc:	rex.X xchg edi,eax
	...

00000000004093cc <__imp___C_specific_handler>:
  4093cc:	push   rdx
  4093cd:	xchg   edi,eax
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	add    BYTE PTR [rax],al
	...

00000000004093d4 <__imp___argc>:
  4093d4:	push   0xffffffffffffff97
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	add    BYTE PTR [rax],al
	...

00000000004093dc <__imp___argv>:
  4093dc:	je     409375 <__imp_RtlCaptureContext+0x1>
  4093de:	add    BYTE PTR [rax],al
  4093e0:	add    BYTE PTR [rax],al
	...

00000000004093e4 <__imp___dllonexit>:
  4093e4:	jle    40937d <__imp_RtlLookupFunctionEntry+0x1>
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	add    BYTE PTR [rax],al
	...

00000000004093ec <__imp___getmainargs>:
  4093ec:	mov    WORD PTR [rdi+0x0],ss
	...

00000000004093f4 <__imp___initenv>:
  4093f4:	pushf  
  4093f5:	xchg   edi,eax
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	add    BYTE PTR [rax],al
	...

00000000004093fc <__imp___iob_func>:
  4093fc:	test   al,0x97
  4093fe:	add    BYTE PTR [rax],al
  409400:	add    BYTE PTR [rax],al
	...

0000000000409404 <__imp___lconv_init>:
  409404:	mov    dh,0x97
  409406:	add    BYTE PTR [rax],al
  409408:	add    BYTE PTR [rax],al
	...

000000000040940c <__imp___set_app_type>:
  40940c:	(bad)  
  40940d:	xchg   edi,eax
  40940e:	add    BYTE PTR [rax],al
  409410:	add    BYTE PTR [rax],al
	...

0000000000409414 <__imp___setusermatherr>:
  409414:	fcom   DWORD PTR [rdi+0x0]
	...

000000000040941c <__imp__acmdln>:
  40941c:	in     al,dx
  40941d:	xchg   edi,eax
  40941e:	add    BYTE PTR [rax],al
  409420:	add    BYTE PTR [rax],al
	...

0000000000409424 <__imp__amsg_exit>:
  409424:	not    BYTE PTR [rdi+0x0]
	...

000000000040942c <__imp__cexit>:
  40942c:	add    al,0x98
  40942e:	add    BYTE PTR [rax],al
  409430:	add    BYTE PTR [rax],al
	...

0000000000409434 <__imp__fmode>:
  409434:	(bad)  
  409435:	cwde   
  409436:	add    BYTE PTR [rax],al
  409438:	add    BYTE PTR [rax],al
	...

000000000040943c <__imp__initterm>:
  40943c:	sbb    BYTE PTR [rax+0x0],bl
	...

0000000000409444 <__imp__lock>:
  409444:	and    al,0x98
  409446:	add    BYTE PTR [rax],al
  409448:	add    BYTE PTR [rax],al
	...

000000000040944c <__imp__onexit>:
  40944c:	sub    al,0x98
  40944e:	add    BYTE PTR [rax],al
  409450:	add    BYTE PTR [rax],al
	...

0000000000409454 <__imp__unlock>:
  409454:	ss cwde 
  409456:	add    BYTE PTR [rax],al
  409458:	add    BYTE PTR [rax],al
	...

000000000040945c <__imp_abort>:
  40945c:	rex cwde 
  40945e:	add    BYTE PTR [rax],al
  409460:	add    BYTE PTR [rax],al
	...

0000000000409464 <__imp_calloc>:
  409464:	cdqe   
  409466:	add    BYTE PTR [rax],al
  409468:	add    BYTE PTR [rax],al
	...

000000000040946c <__imp_exit>:
  40946c:	push   rdx
  40946d:	cwde   
  40946e:	add    BYTE PTR [rax],al
  409470:	add    BYTE PTR [rax],al
	...

0000000000409474 <__imp_fprintf>:
  409474:	pop    rdx
  409475:	cwde   
  409476:	add    BYTE PTR [rax],al
  409478:	add    BYTE PTR [rax],al
	...

000000000040947c <__imp_free>:
  40947c:	fs cwde 
  40947e:	add    BYTE PTR [rax],al
  409480:	add    BYTE PTR [rax],al
	...

0000000000409484 <__imp_fwrite>:
  409484:	ins    BYTE PTR es:[rdi],dx
  409485:	cwde   
  409486:	add    BYTE PTR [rax],al
  409488:	add    BYTE PTR [rax],al
	...

000000000040948c <__imp_malloc>:
  40948c:	jbe    409426 <__imp__amsg_exit+0x2>
  40948e:	add    BYTE PTR [rax],al
  409490:	add    BYTE PTR [rax],al
	...

0000000000409494 <__imp_memcpy>:
  409494:	sbb    BYTE PTR [rax+0x0],0x0
	...

000000000040949c <__imp_signal>:
  40949c:	mov    bl,BYTE PTR [rax+0x0]
	...

00000000004094a4 <__imp_strlen>:
  4094a4:	xchg   esp,eax
  4094a5:	cwde   
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	add    BYTE PTR [rax],al
	...

00000000004094ac <__imp_strncmp>:
  4094ac:	sahf   
  4094ad:	cwde   
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	add    BYTE PTR [rax],al
	...

00000000004094b4 <__imp_vfprintf>:
  4094b4:	test   al,0x98
	...

00000000004094c4 <__imp_ShellExecuteA>:
  4094c4:	mov    ah,0x98
	...

00000000004094d4 <__imp_GetDesktopWindow>:
  4094d4:	(bad)  
  4094d5:	cwde   
	...

00000000004094e4 <__imp_gimp_install_procedure>:
  4094e4:	fcomp  DWORD PTR [rax+0x0]
	...

00000000004094ec <__imp_gimp_main>:
  4094ec:	hlt    
  4094ed:	cwde   
	...

00000000004094fc <__imp_gimp_locale_directory>:
  4094fc:	add    BYTE PTR [rcx+0x0],bl
	...

000000000040950c <__imp_g_set_error>:
  40950c:	sbb    BYTE PTR [rcx+0x0],bl
	...

000000000040951c <__imp_libintl_bind_textdomain_codeset>:
  40951c:	sub    BYTE PTR [rcx+0x0],bl
	...

0000000000409524 <__imp_libintl_bindtextdomain>:
  409524:	rex.WR cqo 
  409526:	add    BYTE PTR [rax],al
  409528:	add    BYTE PTR [rax],al
	...

000000000040952c <__imp_libintl_gettext>:
  40952c:	push   0x99
  409531:	add    BYTE PTR [rax],al
	...

0000000000409534 <__imp_libintl_textdomain>:
  409534:	jl     4094cf <__imp_ShellExecuteA+0xb>
	...

0000000000409544 <__IAT_end__>:
  409544:	fadd   DWORD PTR [rax]
  409546:	rex.R
  409547:	gs ins BYTE PTR es:[rdi],dx
  409549:	gs je  4095b1 <__IAT_end__+0x6d>
  40954c:	rex.XB jb 4095b8 <__IAT_end__+0x74>
  40954f:	je     4095ba <__IAT_end__+0x76>
  409551:	movsxd esp,DWORD PTR [rcx+0x6c]
  409554:	push   rbx
  409555:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40955a:	outs   dx,BYTE PTR ds:[rsi]
  40955b:	add    cl,bh
  40955d:	add    BYTE PTR [rbp+0x6e],al
  409560:	je     4095c7 <__IAT_end__+0x83>
  409562:	jb     4095a7 <__IAT_end__+0x63>
  409564:	jb     4095cf <__IAT_end__+0x8b>
  409566:	je     4095d1 <__IAT_end__+0x8d>
  409568:	movsxd esp,DWORD PTR [rcx+0x6c]
  40956b:	push   rbx
  40956c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409571:	outs   dx,BYTE PTR ds:[rsi]
  409572:	add    BYTE PTR [rax],al
  409574:	(bad)  
  409575:	add    DWORD PTR [rdi+0x65],eax
  409578:	je     4095bd <__IAT_end__+0x79>
  40957a:	jne    4095ee <__IAT_end__+0xaa>
  40957c:	jb     4095e3 <__IAT_end__+0x9f>
  40957e:	outs   dx,BYTE PTR ds:[rsi]
  40957f:	je     4095d1 <__IAT_end__+0x8d>
  409581:	jb     4095f2 <__IAT_end__+0xae>
  409583:	movsxd esp,DWORD PTR [rbp+0x73]
  409586:	jae    409588 <__IAT_end__+0x44>
  409588:	iret   
  409589:	add    DWORD PTR [rdi+0x65],eax
  40958c:	je     4095d1 <__IAT_end__+0x8d>
  40958e:	jne    409602 <__IAT_end__+0xbe>
  409590:	jb     4095f7 <__IAT_end__+0xb3>
  409592:	outs   dx,BYTE PTR ds:[rsi]
  409593:	je     4095e5 <__IAT_end__+0xa1>
  409595:	jb     409606 <__IAT_end__+0xc2>
  409597:	movsxd esp,DWORD PTR [rbp+0x73]
  40959a:	jae    4095e5 <__IAT_end__+0xa1>
  40959c:	fs add bl,dl
  40959f:	add    DWORD PTR [rdi+0x65],eax
  4095a2:	je     4095e7 <__IAT_end__+0xa3>
  4095a4:	jne    409618 <__IAT_end__+0xd4>
  4095a6:	jb     40960d <__IAT_end__+0xc9>
  4095a8:	outs   dx,BYTE PTR ds:[rsi]
  4095a9:	je     4095ff <__IAT_end__+0xbb>
  4095ab:	push   0x64616572
  4095b0:	rex.WB
  4095b1:	add    BYTE PTR fs:[rax],al
  4095b4:	adc    DWORD PTR [rdx],eax
  4095b6:	rex.RXB
  4095b7:	gs je  409606 <__IAT_end__+0xc2>
  4095ba:	(bad)  
  4095bb:	jae    409631 <__IAT_end__+0xed>
  4095bd:	rex.RB jb 409632 <__IAT_end__+0xee>
  4095c0:	outs   dx,DWORD PTR ds:[rsi]
  4095c1:	jb     4095c3 <__IAT_end__+0x7f>
  4095c3:	add    BYTE PTR [rip+0x74654702],ah        # 74a5dccb <libintl_8_dll_iname+0x746541bf>
  4095c9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  4095cb:	fs jne 40963a <__IAT_end__+0xf6>
  4095ce:	gs rex.W (bad) 
  4095d1:	outs   dx,BYTE PTR ds:[rsi]
  4095d2:	fs ins BYTE PTR es:[rdi],dx
  4095d4:	add    BYTE PTR gs:[r8],al
  4095d8:	push   rdi
  4095d9:	add    al,BYTE PTR [rdi+0x65]
  4095dc:	je     40962e <__IAT_end__+0xea>
  4095de:	jb     40964f <__IAT_end__+0x10b>
  4095e0:	movsxd eax,DWORD PTR [rcx+0x64]
  4095e3:	fs jb  40964b <__IAT_end__+0x107>
  4095e6:	jae    40965b <__IAT_end__+0x117>
  4095e8:	add    BYTE PTR [rax],al
  4095ea:	je     4095ee <__IAT_end__+0xaa>
  4095ec:	rex.RXB
  4095ed:	gs je  409643 <__IAT_end__+0xff>
  4095f0:	je     409653 <__IAT_end__+0x10f>
  4095f2:	jb     409668 <__IAT_end__+0x124>
  4095f4:	jne    409666 <__IAT_end__+0x122>
  4095f6:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4095f8:	outs   dx,WORD PTR ds:[rsi]
  4095fa:	add    BYTE PTR [r11+0x74654702],cl
  409601:	push   rbx
  409602:	jns    409677 <__IAT_end__+0x133>
  409604:	je     40966b <__IAT_end__+0x127>
  409606:	ins    DWORD PTR es:[rdi],dx
  409607:	push   rsp
  409608:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40960f:	ins    BYTE PTR es:[rdi],dx
  409610:	gs push rsp
  409612:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a600
  409619:	gs je  409670 <__IAT_end__+0x12c>
  40961c:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  409623:	je     409625 <__IAT_end__+0xe1>
  409625:	add    dl,bh
  409627:	add    cl,BYTE PTR [rcx+0x6e]
  40962a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  409632:	rex.XB jb 40969e <__IAT_end__+0x15a>
  409635:	je     4096a0 <__IAT_end__+0x15c>
  409637:	movsxd esp,DWORD PTR [rcx+0x6c]
  40963a:	push   rbx
  40963b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409640:	outs   dx,BYTE PTR ds:[rsi]
  409641:	add    BYTE PTR [rbx+rax*1+0x4c],cl
  409645:	gs (bad) 
  409647:	jbe    4096ae <__IAT_end__+0x16a>
  409649:	rex.XB jb 4096b5 <__IAT_end__+0x171>
  40964c:	je     4096b7 <__IAT_end__+0x173>
  40964e:	movsxd esp,DWORD PTR [rcx+0x6c]
  409651:	push   rbx
  409652:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409657:	outs   dx,BYTE PTR ds:[rsi]
  409658:	add    BYTE PTR [rax],al
  40965a:	mov    esi,0x65755103
  40965f:	jb     4096da <__IAT_end__+0x196>
  409661:	push   rax
  409662:	gs jb  4096cb <__IAT_end__+0x187>
  409665:	outs   dx,DWORD PTR ds:[rsi]
  409666:	jb     4096d5 <__IAT_end__+0x191>
  409668:	(bad)  
  409669:	outs   dx,BYTE PTR ds:[rsi]
  40966a:	movsxd esp,DWORD PTR [rbp+0x43]
  40966d:	outs   dx,DWORD PTR ds:[rsi]
  40966e:	jne    4096de <__IAT_end__+0x19a>
  409670:	je     4096d7 <__IAT_end__+0x193>
  409672:	jb     409674 <__IAT_end__+0x130>
  409674:	add    eax,0x6c745204
  409679:	rex.B
  40967a:	fs fs rex.RX jne 4096ed <__IAT_end__+0x1a9>
  40967f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409683:	outs   dx,BYTE PTR ds:[rsi]
  409684:	push   rsp
  409685:	(bad)  
  409686:	(bad)  
  409687:	ins    BYTE PTR es:[rdi],dx
  409688:	add    BYTE PTR gs:[rsi],al
  40968b:	add    al,0x52
  40968d:	je     4096fb <__IAT_end__+0x1b7>
  40968f:	rex.XB (bad) 
  409691:	jo     409707 <__IAT_end__+0x1c3>
  409693:	jne    409707 <__IAT_end__+0x1c3>
  409695:	rex.XB outs dx,DWORD PTR gs:[rsi]
  409698:	outs   dx,BYTE PTR ds:[rsi]
  409699:	je     409700 <__IAT_end__+0x1bc>
  40969b:	js     409711 <__IAT_end__+0x1cd>
  40969d:	add    BYTE PTR [rip+0x6c745204],cl        # 6cb4e8a7 <libintl_8_dll_iname+0x6c744d9b>
  4096a3:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4096a5:	outs   dx,DWORD PTR ds:[rsi]
  4096a6:	imul   esi,DWORD PTR [rbp+0x70],0x46
  4096aa:	jne    40971a <__IAT_end__+0x1d6>
  4096ac:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4096b0:	outs   dx,BYTE PTR ds:[rsi]
  4096b1:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4096b3:	je     409727 <__IAT_end__+0x1e3>
  4096b5:	jns    4096b7 <__IAT_end__+0x173>
  4096b7:	add    BYTE PTR [rsp+rax*1],dl
  4096ba:	push   rdx
  4096bb:	je     409729 <__IAT_end__+0x1e5>
  4096bd:	push   rsi
  4096be:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4096c5:	outs   dx,BYTE PTR ds:[rsi]
  4096c6:	ja     409731 <__IAT_end__+0x1ed>
  4096c8:	outs   dx,BYTE PTR ds:[rsi]
  4096c9:	add    BYTE PTR fs:[rax],al
  4096cc:	movabs ds:0x61686e5574655304,eax
  4096d5:	outs   dx,BYTE PTR ds:[rsi]
  4096d6:	fs ins BYTE PTR es:[rdi],dx
  4096d8:	gs fs rex.RB js 409740 <__IAT_end__+0x1fc>
  4096dd:	gs jo  409754 <__IAT_end__+0x210>
  4096e0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4096e7:	gs jb  4096ea <__IAT_end__+0x1a6>
  4096ea:	mov    al,0x4
  4096ec:	push   rbx
  4096ed:	ins    BYTE PTR es:[rdi],dx
  4096ee:	gs gs jo 4096f2 <__IAT_end__+0x1ae>
  4096f2:	mov    esi,0x72655404
  4096f7:	ins    DWORD PTR es:[rdi],dx
  4096f8:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4096ff:	outs   dx,DWORD PTR ds:[rsi]
  409700:	movsxd esp,DWORD PTR [rbp+0x73]
  409703:	jae    409705 <__IAT_end__+0x1c1>
  409705:	add    ch,al
  409707:	add    al,0x54
  409709:	ins    BYTE PTR es:[rdi],dx
  40970a:	jae    409753 <__IAT_end__+0x20f>
  40970c:	gs je  409765 <__IAT_end__+0x221>
  40970f:	(bad)  
  409710:	ins    BYTE PTR es:[rdi],dx
  409711:	jne    409778 <__IAT_end__+0x234>
  409713:	add    dl,dl
  409715:	add    al,0x55
  409717:	outs   dx,BYTE PTR ds:[rsi]
  409718:	push   0x6c646e61
  40971d:	gs fs rex.RB js 409785 <__IAT_end__+0x241>
  409722:	gs jo  409799 <__IAT_end__+0x255>
  409725:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40972c:	gs jb  40972f <__IAT_end__+0x1eb>
  40972f:	add    al,dh
  409731:	add    al,0x56
  409733:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40973a:	jb     4097ab <__IAT_end__+0x267>
  40973c:	je     4097a3 <__IAT_end__+0x25f>
  40973e:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  409742:	repnz add al,0x56
  409745:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40974c:	jne    4097b3 <__IAT_end__+0x26f>
  40974e:	jb     4097c9 <__IAT_end__+0x285>
  409750:	add    BYTE PTR [rax],al
  409752:	(bad)  
  409753:	add    BYTE PTR [rdi+0x5f],bl
  409756:	rex.XB pop r15
  409758:	jae    4097ca <__IAT_end__+0x286>
  40975a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40975e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409765:	ins    BYTE PTR es:[rdi],dx
  409766:	gs jb  409769 <__IAT_end__+0x225>
  409769:	add    BYTE PTR [rbp+0x0],al
  40976c:	pop    rdi
  40976d:	pop    rdi
  40976e:	(bad)  
  40976f:	jb     4097d8 <__IAT_end__+0x294>
  409771:	movsxd eax,DWORD PTR [rax]
  409773:	add    BYTE PTR [rsi+0x0],al
  409776:	pop    rdi
  409777:	pop    rdi
  409778:	(bad)  
  409779:	jb     4097e2 <__IAT_end__+0x29e>
  40977b:	jbe    40977d <__IAT_end__+0x239>
  40977d:	add    BYTE PTR [rsi+0x0],cl
  409780:	pop    rdi
  409781:	pop    rdi
  409782:	fs ins BYTE PTR es:[rdi],dx
  409784:	ins    BYTE PTR es:[rdi],dx
  409785:	outs   dx,DWORD PTR ds:[rsi]
  409786:	outs   dx,BYTE PTR ds:[rsi]
  409787:	gs js  4097f3 <__IAT_end__+0x2af>
  40978a:	je     40978c <__IAT_end__+0x248>
  40978c:	push   rcx
  40978d:	add    BYTE PTR [rdi+0x5f],bl
  409790:	addr32 gs je 409801 <__IAT_end__+0x2bd>
  409794:	(bad)  
  409795:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40979c:	push   rdx
  40979d:	add    BYTE PTR [rdi+0x5f],bl
  4097a0:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  4097a7:	add    BYTE PTR [rbx+0x0],dl
  4097aa:	pop    rdi
  4097ab:	pop    rdi
  4097ac:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4097b3:	movsxd eax,DWORD PTR [rax]
  4097b5:	add    BYTE PTR [rdx+0x0],bl
  4097b8:	pop    rdi
  4097b9:	pop    rdi
  4097ba:	ins    BYTE PTR es:[rdi],dx
  4097bb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4097be:	jbe    40981f <__IAT_end__+0x2db>
  4097c0:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  4097c7:	add    BYTE PTR [rdi+0x5f],bl
  4097ca:	jae    409831 <__IAT_end__+0x2ed>
  4097cc:	je     40982d <__IAT_end__+0x2e9>
  4097ce:	(bad)  
  4097cf:	jo     409841 <__IAT_end__+0x2fd>
  4097d1:	pop    rdi
  4097d2:	je     40984d <__IAT_end__+0x309>
  4097d4:	jo     40983b <__IAT_end__+0x2f7>
  4097d6:	add    BYTE PTR [rax],al
  4097d8:	(bad)  
  4097d9:	add    BYTE PTR [rdi+0x5f],bl
  4097dc:	jae    409843 <__IAT_end__+0x2ff>
  4097de:	je     409855 <__IAT_end__+0x311>
  4097e0:	jae    409847 <__IAT_end__+0x303>
  4097e2:	jb     409851 <__IAT_end__+0x30d>
  4097e4:	(bad)  
  4097e5:	je     40984f <__IAT_end__+0x30b>
  4097e7:	gs jb  40985c <__IAT_end__+0x318>
  4097ea:	add    BYTE PTR [rax],al
  4097ec:	jno    4097ee <__IAT_end__+0x2aa>
  4097ee:	pop    rdi
  4097ef:	(bad)  
  4097f0:	movsxd ebp,DWORD PTR [rbp+0x64]
  4097f3:	ins    BYTE PTR es:[rdi],dx
  4097f4:	outs   dx,BYTE PTR ds:[rsi]
  4097f5:	add    BYTE PTR [rax+0x0],bh
  4097f8:	pop    rdi
  4097f9:	(bad)  
  4097fa:	ins    DWORD PTR es:[rdi],dx
  4097fb:	jae    409864 <__IAT_end__+0x320>
  4097fd:	pop    rdi
  4097fe:	gs js  40986a <__IAT_end__+0x326>
  409801:	je     409803 <__IAT_end__+0x2bf>
  409803:	add    BYTE PTR [rdx+0x65635f00],cl
  409809:	js     409874 <__IAT_end__+0x330>
  40980b:	je     40980d <__IAT_end__+0x2c9>
  40980d:	add    dl,bl
  40980f:	add    BYTE PTR [rdi+0x66],bl
  409812:	ins    DWORD PTR es:[rdi],dx
  409813:	outs   dx,DWORD PTR ds:[rsi]
  409814:	fs add BYTE PTR gs:[rax],al
  409818:	sbb    al,BYTE PTR [rcx]
  40981a:	pop    rdi
  40981b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  409822:	ins    DWORD PTR es:[rdi],dx
  409823:	add    BYTE PTR [rax+0x6f6c5f01],al
  409829:	movsxd ebp,DWORD PTR [rbx+0x0]
  40982c:	and    eax,0x6e6f5f02
  409831:	gs js  40989d <__IAT_end__+0x359>
  409834:	je     409836 <__IAT_end__+0x2f2>
  409836:	leave  
  409837:	add    bl,BYTE PTR [rdi+0x75]
  40983a:	outs   dx,BYTE PTR ds:[rsi]
  40983b:	ins    BYTE PTR es:[rdi],dx
  40983c:	outs   dx,DWORD PTR ds:[rsi]
  40983d:	movsxd ebp,DWORD PTR [rbx+0x0]
  409840:	test   DWORD PTR [rbx],eax
  409842:	(bad)  
  409843:	(bad)  
  409844:	outs   dx,DWORD PTR ds:[rsi]
  409845:	jb     4098bb <__IAT_end__+0x377>
  409847:	add    BYTE PTR [rsi+0x6c616303],dl
  40984d:	ins    BYTE PTR es:[rdi],dx
  40984e:	outs   dx,DWORD PTR ds:[rsi]
  40984f:	movsxd eax,DWORD PTR [rax]
  409851:	add    BYTE PTR [rbx+0x69786503],ah
  409857:	je     409859 <__IAT_end__+0x315>
  409859:	add    BYTE PTR [rsi+0x72706603],dh
  40985f:	imul   ebp,DWORD PTR [rsi+0x74],0x3bd0066
  409866:	data16 jb 4098ce <__IAT_end__+0x38a>
  409869:	add    BYTE PTR gs:[rax],al
  40986c:	enter  0x6603,0x77
  409870:	jb     4098db <__IAT_end__+0x397>
  409872:	je     4098d9 <__IAT_end__+0x395>
  409874:	add    BYTE PTR [rax],al
  409876:	test   BYTE PTR [rbx],0x6d
  409879:	(bad)  
  40987a:	ins    BYTE PTR es:[rdi],dx
  40987b:	ins    BYTE PTR es:[rdi],dx
  40987c:	outs   dx,DWORD PTR ds:[rsi]
  40987d:	movsxd eax,DWORD PTR [rax]
  40987f:	add    dh,bh
  409881:	add    ebp,DWORD PTR [rbp+0x65]
  409884:	ins    DWORD PTR es:[rdi],dx
  409885:	movsxd esi,DWORD PTR [rax+0x79]
  409888:	add    BYTE PTR [rax],al
  40988a:	sbb    al,0x4
  40988c:	jae    4098f7 <__IAT_end__+0x3b3>
  40988e:	outs   dx,BYTE PTR ds:[esi]
  409890:	(bad)  
  409891:	ins    BYTE PTR es:[rdi],dx
  409892:	add    BYTE PTR [rax],al
  409894:	xor    DWORD PTR [rbx+rsi*2],eax
  409897:	je     40990b <__IAT_end__+0x3c7>
  409899:	ins    BYTE PTR es:[rdi],dx
  40989a:	outs   dx,BYTE PTR gs:[rsi]
  40989c:	add    BYTE PTR [rax],al
  40989e:	xor    al,0x4
  4098a0:	jae    409916 <__IAT_end__+0x3d2>
  4098a2:	jb     409912 <__IAT_end__+0x3ce>
  4098a4:	movsxd ebp,DWORD PTR [rbp+0x70]
  4098a7:	add    BYTE PTR [rsp+rax*1+0x76],dl
  4098ab:	data16 jo 409920 <__IAT_end__+0x3dc>
  4098ae:	imul   ebp,DWORD PTR [rsi+0x74],0x41000066
  4098b5:	add    DWORD PTR [rbx+0x68],edx
  4098b8:	gs ins BYTE PTR es:[rdi],dx
  4098ba:	ins    BYTE PTR es:[rdi],dx
  4098bb:	rex.RB js 409923 <__IAT_end__+0x3df>
  4098be:	movsxd esi,DWORD PTR [rbp+0x74]
  4098c1:	add    BYTE PTR gs:[r9+rax*1],dl
  4098c6:	rex.RXB
  4098c7:	gs je  40990e <__IAT_end__+0x3ca>
  4098ca:	gs jae 409938 <__IAT_end__+0x3f4>
  4098cd:	je     40993e <__IAT_end__+0x3fa>
  4098cf:	jo     409928 <__IAT_end__+0x3e4>
  4098d1:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
  4098d8:	in     al,dx
  4098d9:	add    DWORD PTR [rdi+0x69],esp
  4098dc:	ins    DWORD PTR es:[rdi],dx
  4098dd:	jo     40993e <__IAT_end__+0x3fa>
  4098df:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  4098e6:	pop    rdi
  4098e7:	jo     40995b <__IAT_end__+0x417>
  4098e9:	outs   dx,DWORD PTR ds:[rsi]
  4098ea:	movsxd esp,DWORD PTR [rbp+0x64]
  4098ed:	jne    409961 <__IAT_end__+0x41d>
  4098ef:	add    BYTE PTR gs:[rax],al
  4098f2:	add    BYTE PTR [rax],al
  4098f4:	cmp    al,BYTE PTR [rdx]
  4098f6:	imul   ebp,DWORD PTR [ebp+0x70],0x69616d5f
  4098fe:	outs   dx,BYTE PTR ds:[rsi]
  4098ff:	add    BYTE PTR [rax+rax*1],ch
  409902:	imul   ebp,DWORD PTR [ebp+0x70],0x636f6c5f
  40990a:	(bad)  
  40990b:	ins    BYTE PTR es:[rdi],dx
  40990c:	gs pop rdi
  40990e:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  409916:	jns    409918 <__IAT_end__+0x3d4>
  409918:	cld    
  409919:	add    esp,DWORD PTR [rdi+0x5f]
  40991c:	jae    409983 <__IAT_end__+0x43f>
  40991e:	je     40997f <__IAT_end__+0x43b>
  409920:	gs jb  409995 <__IAT_end__+0x451>
  409923:	outs   dx,DWORD PTR ds:[rsi]
  409924:	jb     409926 <__IAT_end__+0x3e2>
  409926:	add    BYTE PTR [rax],al
  409928:	sbb    al,0x0
  40992a:	ins    BYTE PTR es:[rdi],dx
  40992b:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  409932:	(bad)  
  409933:	imul   ebp,DWORD PTR [rsi+0x64],0x7865745f
  40993a:	je     4099a0 <__IAT_end__+0x45c>
  40993c:	outs   dx,DWORD PTR ds:[rsi]
  40993d:	ins    DWORD PTR es:[rdi],dx
  40993e:	(bad)  
  40993f:	imul   ebp,DWORD PTR [rsi+0x5f],0x65646f63
  409946:	jae    4099ad <__IAT_end__+0x469>
  409948:	je     40994a <__IAT_end__+0x406>
  40994a:	add    BYTE PTR [rax],al
  40994c:	sbb    eax,0x62696c00
  409951:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  409958:	outs   dx,BYTE PTR ds:[rsi]
  409959:	fs je  4099c1 <__IAT_end__+0x47d>
  40995c:	js     4099d2 <__IAT_end__+0x48e>
  40995e:	outs   dx,DWORD PTR fs:[rsi]
  409960:	ins    DWORD PTR es:[rdi],dx
  409961:	(bad)  
  409962:	imul   ebp,DWORD PTR [rsi+0x0],0x25000000
  409969:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40996d:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  409974:	je     4099ea <__IAT_end__+0x4a6>
  409976:	gs js  4099ed <__IAT_end__+0x4a9>
  409979:	add    BYTE PTR [rax],al
  40997b:	add    BYTE PTR [rbp+0x0],al
  40997e:	ins    BYTE PTR es:[rdi],dx
  40997f:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  409986:	je     4099ed <__IAT_end__+0x4a9>
  409988:	js     4099fe <__lib64_libkernel32_a_iname+0x6>
  40998a:	outs   dx,DWORD PTR fs:[rsi]
  40998c:	ins    DWORD PTR es:[rdi],dx
  40998d:	(bad)  
  40998e:	imul   ebp,DWORD PTR [rsi+0x0],0x0
  409995:	nop
  409996:	add    BYTE PTR [rax],al
  409998:	add    BYTE PTR [rax-0x70000000],dl
  40999e:	add    BYTE PTR [rax],al
  4099a0:	add    BYTE PTR [rax-0x70000000],dl
  4099a6:	add    BYTE PTR [rax],al
  4099a8:	add    BYTE PTR [rax-0x70000000],dl
  4099ae:	add    BYTE PTR [rax],al
  4099b0:	add    BYTE PTR [rax-0x70000000],dl
  4099b6:	add    BYTE PTR [rax],al
  4099b8:	add    BYTE PTR [rax-0x70000000],dl
  4099be:	add    BYTE PTR [rax],al
  4099c0:	add    BYTE PTR [rax-0x70000000],dl
  4099c6:	add    BYTE PTR [rax],al
  4099c8:	add    BYTE PTR [rax-0x70000000],dl
  4099ce:	add    BYTE PTR [rax],al
  4099d0:	add    BYTE PTR [rax-0x70000000],dl
  4099d6:	add    BYTE PTR [rax],al
  4099d8:	add    BYTE PTR [rax-0x70000000],dl
  4099de:	add    BYTE PTR [rax],al
  4099e0:	add    BYTE PTR [rax-0x70000000],dl
  4099e6:	add    BYTE PTR [rax],al
  4099e8:	add    BYTE PTR [rax-0x70000000],dl
  4099ee:	add    BYTE PTR [rax],al
  4099f0:	add    BYTE PTR [rax-0x70000000],dl
	...

00000000004099f8 <__lib64_libkernel32_a_iname>:
  4099f8:	rex.WXB
  4099f9:	rex.RB push r10
  4099fb:	rex.WRX
  4099fc:	rex.RB
  4099fd:	xor    r14,QWORD PTR [rdx]
  409a00:	cs fs ins BYTE PTR es:[rdi],dx
  409a03:	ins    BYTE PTR es:[rdi],dx
  409a04:	add    BYTE PTR [rax],al
  409a06:	add    BYTE PTR [rax],al
  409a08:	adc    al,0x90
  409a0a:	add    BYTE PTR [rax],al
  409a0c:	adc    al,0x90
  409a0e:	add    BYTE PTR [rax],al
  409a10:	adc    al,0x90
  409a12:	add    BYTE PTR [rax],al
  409a14:	adc    al,0x90
  409a16:	add    BYTE PTR [rax],al
  409a18:	adc    al,0x90
  409a1a:	add    BYTE PTR [rax],al
  409a1c:	adc    al,0x90
  409a1e:	add    BYTE PTR [rax],al
  409a20:	adc    al,0x90
  409a22:	add    BYTE PTR [rax],al
  409a24:	adc    al,0x90
  409a26:	add    BYTE PTR [rax],al
  409a28:	adc    al,0x90
  409a2a:	add    BYTE PTR [rax],al
  409a2c:	adc    al,0x90
  409a2e:	add    BYTE PTR [rax],al
  409a30:	adc    al,0x90
  409a32:	add    BYTE PTR [rax],al
  409a34:	adc    al,0x90
  409a36:	add    BYTE PTR [rax],al
  409a38:	adc    al,0x90
  409a3a:	add    BYTE PTR [rax],al
  409a3c:	adc    al,0x90
  409a3e:	add    BYTE PTR [rax],al
  409a40:	adc    al,0x90
  409a42:	add    BYTE PTR [rax],al
  409a44:	adc    al,0x90
  409a46:	add    BYTE PTR [rax],al
  409a48:	adc    al,0x90
  409a4a:	add    BYTE PTR [rax],al
  409a4c:	adc    al,0x90
  409a4e:	add    BYTE PTR [rax],al
  409a50:	adc    al,0x90
  409a52:	add    BYTE PTR [rax],al
  409a54:	adc    al,0x90
  409a56:	add    BYTE PTR [rax],al
  409a58:	adc    al,0x90
  409a5a:	add    BYTE PTR [rax],al
  409a5c:	adc    al,0x90
  409a5e:	add    BYTE PTR [rax],al
  409a60:	adc    al,0x90
  409a62:	add    BYTE PTR [rax],al
  409a64:	adc    al,0x90
  409a66:	add    BYTE PTR [rax],al
  409a68:	adc    al,0x90
  409a6a:	add    BYTE PTR [rax],al
  409a6c:	adc    al,0x90
  409a6e:	add    BYTE PTR [rax],al
  409a70:	adc    al,0x90
  409a72:	add    BYTE PTR [rax],al
  409a74:	adc    al,0x90
  409a76:	add    BYTE PTR [rax],al
  409a78:	adc    al,0x90
  409a7a:	add    BYTE PTR [rax],al
  409a7c:	adc    al,0x90
	...

0000000000409a80 <__lib64_libmsvcrt_a_iname>:
  409a80:	ins    DWORD PTR es:[rdi],dx
  409a81:	jae    409af9 <libglib_2_0_0_dll_iname+0x11>
  409a83:	movsxd esi,DWORD PTR [rdx+0x74]
  409a86:	cs fs ins BYTE PTR es:[rdi],dx
  409a89:	ins    BYTE PTR es:[rdi],dx
  409a8a:	add    BYTE PTR [rax],al
  409a8c:	sub    BYTE PTR [rax+0x48530000],dl

0000000000409a90 <__lib64_libshell32_a_iname>:
  409a90:	push   rbx
  409a91:	rex.W
  409a92:	rex.RB
  409a93:	rex.WR
  409a94:	xor    r14,QWORD PTR [rdx]
  409a97:	cs fs ins BYTE PTR es:[rdi],dx
  409a9a:	ins    BYTE PTR es:[rdi],dx
  409a9b:	add    BYTE PTR [rax+rdx*4],bh
	...

0000000000409aa0 <__lib64_libuser32_a_iname>:
  409aa0:	push   rbp
  409aa1:	push   rbx
  409aa2:	rex.RB push r10
  409aa4:	xor    esi,DWORD PTR [rdx]
  409aa6:	cs fs ins BYTE PTR es:[rdi],dx
  409aa9:	ins    BYTE PTR es:[rdi],dx
  409aaa:	add    BYTE PTR [rax],al
  409aac:	push   rax
  409aad:	nop
  409aae:	add    BYTE PTR [rax],al
  409ab0:	push   rax
  409ab1:	nop
	...

0000000000409ab4 <libgimp_2_0_0_dll_iname>:
  409ab4:	ins    BYTE PTR es:[rdi],dx
  409ab5:	imul   esp,DWORD PTR [rdx+0x67],0x2d706d69
  409abc:	xor    ch,BYTE PTR [rsi]
  409abe:	xor    BYTE PTR [rip+0x6c642e30],ch        # 6ca4c8f4 <libintl_8_dll_iname+0x6c642de8>
  409ac4:	ins    BYTE PTR es:[rdi],dx
  409ac5:	add    BYTE PTR [rax],al
  409ac7:	add    BYTE PTR [rax+rdx*4+0x0],ah
	...

0000000000409acc <libgimpbase_2_0_0_dll_iname>:
  409acc:	ins    BYTE PTR es:[rdi],dx
  409acd:	imul   esp,DWORD PTR [rdx+0x67],0x62706d69
  409ad4:	(bad)  
  409ad5:	jae    409b3c <libintl_8_dll_iname+0x30>
  409ad7:	sub    eax,0x2d302e32
  409adc:	xor    BYTE PTR [rsi],ch
  409ade:	fs ins BYTE PTR es:[rdi],dx
  409ae0:	ins    BYTE PTR es:[rdi],dx
  409ae1:	add    BYTE PTR [rax],al
  409ae3:	add    BYTE PTR [rax-0x70],bh
	...

0000000000409ae8 <libglib_2_0_0_dll_iname>:
  409ae8:	ins    BYTE PTR es:[rdi],dx
  409ae9:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  409af0:	xor    ch,BYTE PTR [rsi]
  409af2:	xor    BYTE PTR [rip+0x6c642e30],ch        # 6ca4c928 <libintl_8_dll_iname+0x6c642e1c>
  409af8:	ins    BYTE PTR es:[rdi],dx
  409af9:	add    BYTE PTR [rax],al
  409afb:	add    BYTE PTR [rax+rdx*4-0x6f740000],cl
  409b02:	add    BYTE PTR [rax],al
  409b04:	mov    WORD PTR [rax-0x6f740000],ss
	...

0000000000409b0c <libintl_8_dll_iname>:
  409b0c:	ins    BYTE PTR es:[rdi],dx
  409b0d:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  409b14:	cmp    BYTE PTR [rsi],ch
  409b16:	fs ins BYTE PTR es:[rdi],dx
  409b18:	ins    BYTE PTR es:[rdi],dx
  409b19:	add    BYTE PTR [rax],al
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax+0x401a],dl
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    al,al
  40a041:	sbb    al,0x40
  40a043:	add    BYTE PTR [rax],al
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax+0x401c],dl
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    ah,bl
  40b031:	xchg   BYTE PTR [rax+0x0],al
  40b034:	add    BYTE PTR [rax],al
  40b036:	add    BYTE PTR [rax],al
  40b038:	movabs al,ds:0x40
	...

Disassembly of section .rsrc:

000000000040c000 <.rsrc>:
	...
  40c00c:	add    BYTE PTR [rax],al
  40c00e:	add    al,0x0
  40c010:	add    eax,DWORD PTR [rax]
  40c012:	add    BYTE PTR [rax],al
  40c014:	xor    BYTE PTR [rax],al
  40c016:	add    BYTE PTR [rax+0xe],al
  40c01c:	add    BYTE PTR [rax],0x0
  40c01f:	adc    BYTE PTR [rax],0x0
  40c022:	add    BYTE PTR [rax],al
  40c024:	mov    al,0x0
  40c026:	add    BYTE PTR [rax+0x18],al
  40c02c:	loopne 40c02e <libintl_8_dll_iname+0x2522>
  40c02e:	add    BYTE PTR [rax+0x0],al
	...
  40c03c:	add    BYTE PTR [rax],al
  40c03e:	add    al,BYTE PTR [rax]
  40c040:	add    DWORD PTR [rax],eax
  40c042:	add    BYTE PTR [rax],al
  40c044:	push   rax
  40c045:	add    BYTE PTR [rax],al
  40c047:	add    BYTE PTR [rdx],0x0
  40c04a:	add    BYTE PTR [rax],al
  40c04c:	push   0x800000
	...
  40c05d:	add    BYTE PTR [rcx],al
  40c05f:	add    BYTE PTR [rcx],cl
  40c061:	add    al,0x0
  40c063:	add    BYTE PTR [rax],dl
  40c065:	add    DWORD PTR [rax],eax
	...
  40c073:	add    BYTE PTR [rax],al
  40c075:	add    BYTE PTR [rcx],al
  40c077:	add    BYTE PTR [rcx],cl
  40c079:	add    al,0x0
  40c07b:	add    BYTE PTR [rax],ah
  40c07d:	add    DWORD PTR [rax],eax
	...
  40c08b:	add    BYTE PTR [rax],al
  40c08d:	add    BYTE PTR [rcx],al
  40c08f:	add    BYTE PTR [rcx],al
  40c091:	add    BYTE PTR [rax],al
  40c093:	add    BYTE PTR [rax+0x800000],bl
	...
  40c0a5:	add    BYTE PTR [rcx],al
  40c0a7:	add    BYTE PTR [rcx],cl
  40c0a9:	add    al,0x0
  40c0ab:	add    BYTE PTR [rax],dh
  40c0ad:	add    DWORD PTR [rax],eax
	...
  40c0bb:	add    BYTE PTR [rax],al
  40c0bd:	add    BYTE PTR [rcx],al
  40c0bf:	add    BYTE PTR [rcx],al
  40c0c1:	add    BYTE PTR [rax],al
  40c0c3:	add    al,cl
  40c0c5:	add    BYTE PTR [rax],al
  40c0c7:	add    BYTE PTR [rax],0x0
	...
  40c0d6:	add    DWORD PTR [rax],eax
  40c0d8:	or     DWORD PTR [rax+rax*1],eax
  40c0db:	add    BYTE PTR [rax+0x1],al
	...
  40c0ee:	add    DWORD PTR [rax],eax
  40c0f0:	add    DWORD PTR [rax],eax
  40c0f2:	add    BYTE PTR [rax],al
  40c0f4:	clc    
  40c0f5:	add    BYTE PTR [rax],al
  40c0f7:	add    BYTE PTR [rax],0x0
	...
  40c106:	add    DWORD PTR [rax],eax
  40c108:	or     DWORD PTR [rax+rax*1],eax
  40c10b:	add    BYTE PTR [rax+0x1],dl
  40c10e:	add    BYTE PTR [rax],al
  40c110:	(bad)  
  40c111:	rol    DWORD PTR [rax],0x0
  40c114:	push   0x5
  40c119:	add    BYTE PTR [rax],al
  40c11b:	add    BYTE PTR [rax],al
  40c11d:	add    BYTE PTR [rax],al
  40c11f:	add    al,cl
  40c121:	mov    BYTE PTR [rax],0x0
  40c124:	push   0x4
  40c129:	add    BYTE PTR [rax],al
  40c12b:	add    BYTE PTR [rax],al
  40c12d:	add    BYTE PTR [rax],al
  40c12f:	add    BYTE PTR [rax],dh
  40c131:	retf   
  40c132:	add    BYTE PTR [rax],al
  40c134:	and    al,BYTE PTR [rax]
	...
  40c13e:	add    BYTE PTR [rax],al
  40c140:	pop    rax
  40c141:	retf   
  40c142:	add    BYTE PTR [rax],al
  40c144:	test   BYTE PTR [rbx],al
	...
  40c14e:	add    BYTE PTR [rax],al
  40c150:	loopne 40c120 <libintl_8_dll_iname+0x2614>
  40c152:	add    BYTE PTR [rax],al
  40c154:	test   eax,0x4
  40c159:	add    BYTE PTR [rax],al
  40c15b:	add    BYTE PTR [rax],al
  40c15d:	add    BYTE PTR [rax],al
  40c15f:	add    BYTE PTR [rax],ch
  40c161:	add    BYTE PTR [rax],al
  40c163:	add    BYTE PTR [rax],dl
  40c165:	add    BYTE PTR [rax],al
  40c167:	add    BYTE PTR [rax],ah
  40c169:	add    BYTE PTR [rax],al
  40c16b:	add    BYTE PTR [rcx],al
  40c16d:	add    BYTE PTR [rax],cl
  40c16f:	add    BYTE PTR [rax],al
  40c171:	add    BYTE PTR [rax],al
  40c173:	add    BYTE PTR [rax+0x1],al
	...
  40c18a:	add    BYTE PTR [rax],al
  40c18c:	addr32 jbe 40c20c <libintl_8_dll_iname+0x2700>
  40c18f:	add    BYTE PTR [rcx-0x80],dh
  40c192:	xchg   BYTE PTR [rax],al
  40c194:	(bad)  
  40c195:	(bad)  
  40c196:	inc    DWORD PTR [rax]
  40c198:	push   rdx
  40c199:	movsxd ebp,DWORD PTR [rbx+0x0]
  40c19c:	(bad)  
  40c19d:	femms  
  40c19f:	add    dh,dh
  40c1a1:	div    dh
  40c1a3:	add    bh,dh
  40c1a5:	div    edi
  40c1a7:	add    BYTE PTR [rbp+0x5d],cl
  40c1aa:	add    BYTE PTR fs:[rip+0xffffffff95002526],ah        # ffffffff9540e6d7 <libintl_8_dll_iname+0xffffffff95004bcb>
  40c1b1:	pushf  
  40c1b2:	pushf  
  40c1b3:	add    BYTE PTR [rdx-0x58ff4344],dh
  40c1b9:	mov    dl,0xb3
  40c1bb:	add    BYTE PTR [rax+rbp*4-0x616eff56],bl
  40c1c2:	movabs eax,ds:0x4b4b4600f4f4f400
  40c1cb:	add    BYTE PTR [rax],bh
  40c1cd:	cmp    DWORD PTR [rdi],esi
  40c1cf:	add    BYTE PTR [rsp+rbp*2+0x74],bl
  40c1d3:	add    BYTE PTR [rdi],ah
  40c1d5:	sub    BYTE PTR [rax],ch
  40c1d7:	add    BYTE PTR [rsi+0x68],ah
  40c1da:	add    BYTE PTR [edx-0x5dff6b6c],dl
  40c1e1:	movabs ds:0x959300a2a4a000a2,eax
  40c1ea:	xchg   esp,eax
  40c1eb:	add    BYTE PTR [rdx+rdx*4+0x65630091],cl
  40c1f2:	add    BYTE PTR fs:[rbp+0x5a],dl
  40c1f6:	pop    rbx
  40c1f7:	add    BYTE PTR [rcx+rdx*2+0x52],cl
  40c1fb:	add    bh,ah
  40c1fd:	out    dx,eax
  40c1fe:	out    dx,eax
  40c1ff:	add    BYTE PTR [rsi+0x60],cl
  40c202:	push   0x6b696300
  40c207:	add    BYTE PTR [rax-0x32ff5c5d],ah
  40c20d:	(bad)  
  40c20e:	(bad)  
  40c20f:	add    BYTE PTR [rax+rbp*4-0x3d40ff59],ah
  40c216:	rol    DWORD PTR [rax],0xe3
  40c219:	in     eax,0xe6
  40c21b:	add    BYTE PTR [rbp+0x6a009695],cl
  40c221:	je     40c29b <libintl_8_dll_iname+0x278f>
  40c223:	add    BYTE PTR [rdx],bh
  40c225:	rex
  40c226:	rex.X add bl,spl
  40c229:	(bad)  
  40c22a:	jmp    40c22c <libintl_8_dll_iname+0x2720>
  40c22c:	rex.WXB pop r13
  40c22e:	add    BYTE PTR gs:[rbp+0x67],ah
  40c232:	addr32 add bl,ch
  40c235:	in     al,dx
  40c236:	in     al,dx
  40c237:	add    bl,bl
  40c239:	fcmovnu st,st(3)
  40c23b:	add    BYTE PTR [rax-0x10ff4345],bh
  40c241:	out    dx,eax
  40c242:	out    dx,eax
  40c243:	add    dl,dl
  40c245:	rcl    dl,cl
  40c247:	add    BYTE PTR [rbp+0x6400c2c1],bh
  40c24d:	jo     40c2c3 <libintl_8_dll_iname+0x27b7>
  40c24f:	add    BYTE PTR [rbx],bh
  40c251:	rex
  40c252:	rex.XB add r8b,spl
  40c255:	out    0xe8,al
  40c257:	add    BYTE PTR [rdi+0x5a],al
  40c25a:	(bad)  
  40c25b:	add    bl,al
  40c25d:	ret    
  40c25e:	rol    DWORD PTR [rax],0x70
  40c261:	jo     40c2d1 <libintl_8_dll_iname+0x27c5>
  40c263:	add    al,bl
  40c265:	fcomp  st(0)
  40c267:	add    BYTE PTR [rbx+riz*2+0x62],ah
  40c26b:	add    BYTE PTR [rax+rsi*4-0x5150ff4f],ch
  40c272:	scas   al,BYTE PTR es:[rdi]
  40c273:	add    BYTE PTR [rbx],bh
  40c275:	cmp    bh,BYTE PTR [rdx]
  40c277:	add    BYTE PTR [rsi+0x6200c3c2],bh
  40c27d:	outs   dx,BYTE PTR ds:[rsi]
  40c27e:	jae    40c280 <libintl_8_dll_iname+0x2774>
  40c280:	ds rex.R
  40c282:	rex.RXB add r12b,r11b
  40c285:	loop   40c26b <libintl_8_dll_iname+0x275f>
  40c287:	add    BYTE PTR [rdi+rdx*2+0x5f],al
  40c28b:	add    BYTE PTR [rdx+0x5800a8aa],ch
  40c291:	pop    rax
  40c292:	push   rbp
  40c293:	add    BYTE PTR [rbp+0x72],ch
  40c296:	je     40c298 <libintl_8_dll_iname+0x278c>
  40c298:	mov    bl,0xb9
  40c29a:	mov    edx,0xa3a29900
  40c29f:	add    BYTE PTR [rbx-0x3dff4e4f],ch
  40c2a5:	(bad)  
  40c2a6:	(bad)  
  40c2a7:	add    BYTE PTR [rcx+0x6500bcbb],bh
  40c2ad:	outs   dx,BYTE PTR ds:[rsi]
  40c2ae:	jb     40c2b0 <libintl_8_dll_iname+0x27a4>
  40c2b0:	push   rdi
  40c2b1:	(bad)  
  40c2b2:	data16 add BYTE PTR [rcx+0x45],al
  40c2b6:	add    r9b,r11b
  40c2b9:	fsubrp st(1),st
  40c2bb:	add    dh,dl
  40c2bd:	(bad)  
  40c2bf:	add    BYTE PTR [rax],bl
  40c2c1:	(bad)  
  40c2c2:	(bad)  
  40c2c4:	xor    DWORD PTR [rax+0x46],eax
  40c2c7:	add    BYTE PTR [rcx+0x5a],al
  40c2ca:	add    BYTE PTR fs:[rdx],bh
  40c2cd:	rex.WR push rsp
  40c2cf:	add    BYTE PTR [rbx+0x4f],al
  40c2d2:	push   rsp
  40c2d3:	add    BYTE PTR [rsi+0x53],al
  40c2d6:	pop    rax
  40c2d7:	add    BYTE PTR [rbx+0x51],al
  40c2da:	push   rsi
  40c2db:	add    BYTE PTR [rbx+0x50],al
  40c2de:	push   rsi
  40c2df:	add    BYTE PTR [rcx+0x57],dl
  40c2e2:	pop    rcx
  40c2e3:	add    BYTE PTR [rax+0x50],dl
  40c2e6:	rex.WRX add sil,r10b
  40c2e9:	fcmovu st,st(6)
  40c2eb:	add    BYTE PTR [rcx],ch
  40c2ed:	rex.X
  40c2ee:	rex.WX add BYTE PTR [rip+0x2a001516],dl        # 2a40d80b <libintl_8_dll_iname+0x2a003cff>
  40c2f5:	sub    al,0x2b
  40c2f7:	add    BYTE PTR [rcx+0x5b],dl
  40c2fa:	pop    rsi
  40c2fb:	add    BYTE PTR [rsi+0x6c],bl
  40c2fe:	jb     40c300 <libintl_8_dll_iname+0x27f4>
  40c300:	rex.WRXB pop r14
  40c302:	add    BYTE PTR fs:[rdi],bh
  40c305:	rex.WRX push rbp
  40c307:	add    BYTE PTR [rcx+rax*2],dh
  40c30a:	rex.W add BYTE PTR [rdx+rax*2],sil
  40c30e:	rex.WB add BYTE PTR [r13+0x60],dl
  40c312:	add    BYTE PTR gs:[rdx+0x46],al
  40c316:	rex.RXB add BYTE PTR [r8-0x2dff6367],r11b
  40c31d:	(bad)  
  40c31e:	fiadd  DWORD PTR [rax]
  40c320:	cmp    DWORD PTR [rdi+0x57],ecx
  40c323:	add    BYTE PTR [rdi],ch
  40c325:	rex.RXB
  40c326:	rex.WRX add BYTE PTR [r11*1+0x554f001c],r11b
  40c32e:	push   rsp
  40c32f:	add    BYTE PTR [rdi+0x5d],dl
  40c332:	pop    rdi
  40c333:	add    BYTE PTR [rbp+rbx*2+0x61],dl
  40c337:	add    BYTE PTR [rcx+0x63],bl
  40c33a:	push   0x67635a00
  40c33f:	add    BYTE PTR [rsi+0x54],cl
  40c342:	push   rsi
  40c343:	add    BYTE PTR [rbx+0x4f],cl
  40c346:	rex.WRXB add BYTE PTR [r11-0x30ff7172],r9b
  40c34d:	rcl    bh,cl
  40c34f:	add    BYTE PTR [rsi],dh
  40c351:	rex.WR push rsp
  40c353:	add    BYTE PTR [rdx-0x78],bh
  40c356:	mov    BYTE PTR [rax],al
  40c358:	mov    ch,0xc5
  40c35b:	add    BYTE PTR [rsi-0x68ff5150],ch
  40c361:	xchg   edi,eax
  40c362:	xchg   esi,eax
  40c363:	add    BYTE PTR [rbx+0x3d009494],dl
  40c369:	rex.WX
  40c36a:	rex.WXB add BYTE PTR [rip+0xffffffffc5004c47],sil        # ffffffffc5410fb8 <libintl_8_dll_iname+0xffffffffc50074ac>
  40c371:	int    0xcd
  40c373:	add    ah,cl
  40c375:	(bad)  
  40c376:	(bad)  
  40c377:	add    BYTE PTR [rbx],dh
  40c379:	rex.WX push rdx
  40c37b:	add    BYTE PTR [rax-0x79],bh
  40c37e:	xchg   DWORD PTR [rax],eax
  40c380:	out    dx,al
  40c381:	out    dx,al
  40c382:	out    dx,al
  40c383:	add    dl,ch
  40c385:	out    dx,al
  40c386:	out    dx,al
  40c387:	add    dh,bl
  40c389:	in     al,0xe4
  40c38b:	add    BYTE PTR [rsp+rax*2],ch
  40c38e:	rex.WR add al,r9b
  40c391:	leave  
  40c392:	rol    BYTE PTR [rax],1
  40c394:	leave  
  40c395:	retf   0xd1
  40c398:	(bad)  
  40c399:	rex.RXB
  40c39a:	rex.WRXB add BYTE PTR [r9-0x7f],r14b
  40c39e:	add    DWORD PTR [rax],0xdedede
  40c3a4:	mov    dh,0xce
  40c3a7:	add    BYTE PTR [rbx+0x7b],ch
  40c3aa:	jnp    40c3ac <libintl_8_dll_iname+0x28a0>
  40c3ac:	fs jne 40c425 <libintl_8_dll_iname+0x2919>
  40c3af:	add    BYTE PTR [rbp+0x6f],bl
  40c3b2:	jno    40c3b4 <libintl_8_dll_iname+0x28a8>
  40c3b4:	push   rdi
  40c3b5:	imul   ebp,DWORD PTR [rax+rax*1+0x50],0x3c006763
  40c3bd:	push   rdx
  40c3be:	pop    rax
  40c3bf:	add    BYTE PTR [rsi],dh
  40c3c1:	rex.WRB push r11
	...
  40c587:	add    BYTE PTR [rax],al
  40c589:	add    BYTE PTR [rax-0x73747577],cl
  40c58f:	add    BYTE PTR [rax],al
  40c591:	lea    ecx,[rsi+0x5967]
  40c597:	add    BYTE PTR [rax],al
  40c599:	add    BYTE PTR [rbp+0x594d4d86],al
  40c59f:	add    BYTE PTR [rax],al
  40c5a1:	test   DWORD PTR [rdi+0x8187],eax
  40c5a7:	add    BYTE PTR [rax],al
  40c5a9:	add    BYTE PTR [rbp+0x7e],bh
  40c5ac:	jg     40c52e <libintl_8_dll_iname+0x2a22>
  40c5ae:	add    DWORD PTR [rax],0x83827d00
  40c5b4:	test   BYTE PTR [rax],al
  40c5b6:	add    BYTE PTR [rax],al
  40c5b8:	add    BYTE PTR [rax],al
  40c5ba:	jae    40c630 <libintl_8_dll_iname+0x2b24>
  40c5bc:	jne    40c634 <libintl_8_dll_iname+0x2b28>
  40c5be:	ja     40c638 <libintl_8_dll_iname+0x2b2c>
  40c5c0:	jns    40c63c <libintl_8_dll_iname+0x2b30>
  40c5c2:	jnp    40c63f <libintl_8_dll_iname+0x2b33>
  40c5c4:	jl     40c5c6 <libintl_8_dll_iname+0x2aba>
  40c5c6:	add    BYTE PTR [rax],al
  40c5c8:	add    BYTE PTR [rax],al
  40c5ca:	imul   ebp,DWORD PTR [rdx+0x6b],0x6f6e6d6c
  40c5d1:	jo     40c644 <libintl_8_dll_iname+0x2b38>
  40c5d3:	jno    40c647 <libintl_8_dll_iname+0x2b3b>
  40c5d5:	add    BYTE PTR [rax],al
  40c5d7:	add    BYTE PTR [rax],al
  40c5d9:	pop    rbx
  40c5da:	pop    rsp
  40c5db:	pop    rbp
  40c5dc:	pop    rsi
  40c5dd:	pop    rdi
  40c5de:	(bad)  
  40c5df:	(bad)  
  40c5e0:	(bad)
  40c5e5:	addr32 pop rcx
  40c5e7:	add    BYTE PTR [rax],al
  40c5e9:	rex.WRX
  40c5ea:	rex.WRXB push r8
  40c5ec:	push   rcx
  40c5ed:	push   rdx
  40c5ee:	push   rbx
  40c5ef:	push   rsp
  40c5f0:	push   rbp
  40c5f1:	push   rsi
  40c5f2:	push   rdi
  40c5f3:	pop    rax
  40c5f4:	rex.WRB
  40c5f5:	rex.WRB
  40c5f6:	rex.WRB pop r9
  40c5f8:	rex.B
  40c5f9:	rex.X
  40c5fa:	rex.XB
  40c5fb:	rex.R
  40c5fc:	rex.RB
  40c5fd:	rex.RX
  40c5fe:	rex.RXB
  40c5ff:	rex.W
  40c600:	rex.WB
  40c601:	rex.WX
  40c602:	rex.WXB
  40c603:	rex.WR
  40c604:	rex.WRB
  40c605:	rex.WRB
  40c606:	rex.WRB add al,0x35
  40c609:	ss (bad) 
  40c60b:	cmp    BYTE PTR [rcx],bh
  40c60d:	(bad)  
  40c60e:	cmp    bh,BYTE PTR [rbx]
  40c610:	cmp    al,0x3d
  40c612:	ds (bad) 
  40c614:	adc    al,BYTE PTR [rax+rax*1]
  40c618:	add    BYTE PTR [rdx],ch
  40c61a:	sub    ebp,DWORD PTR [rbp*1+0x302f2e06]
  40c621:	xor    DWORD PTR [rdx],esi
  40c623:	xor    esi,DWORD PTR [rax+rax*1]
  40c626:	add    BYTE PTR [rax],al
  40c628:	add    BYTE PTR [rdi],bl
  40c62a:	and    BYTE PTR [rcx],ah
  40c62c:	and    ah,BYTE PTR [rbx]
  40c62e:	add    esp,DWORD PTR ds:0x29282726
  40c635:	add    BYTE PTR [rax],al
  40c637:	add    BYTE PTR [rax],al
  40c639:	sbb    al,0x14
  40c63b:	adc    eax,0x19181716
  40c640:	sbb    bl,BYTE PTR [rbx]
  40c642:	sbb    al,0x1d
  40c644:	(bad)  
  40c645:	add    BYTE PTR [rax],al
  40c647:	add    BYTE PTR [rax],al
  40c649:	adc    DWORD PTR [rdx],ecx
  40c64b:	or     ecx,DWORD PTR [rcx*1+0x100f070e]
  40c652:	adc    DWORD PTR [rdx],edx
  40c654:	add    al,0x0
	...
  40c65e:	add    al,BYTE PTR [rsi]
  40c660:	(bad)  
  40c661:	or     BYTE PTR [rcx],cl
	...
  40c66b:	add    BYTE PTR [rax],al
  40c66d:	add    BYTE PTR [rdx],al
  40c66f:	add    eax,DWORD PTR [rbx]
  40c671:	add    al,0x0
	...
  40c67f:	add    DWORD PTR [rcx],eax
  40c681:	add    BYTE PTR [rax],al
  40c683:	add    BYTE PTR [rax],al
  40c685:	add    BYTE PTR [rax],al
  40c687:	add    cl,al
  40c689:	xchg   DWORD PTR [rax],eax
  40c68b:	add    cl,al
  40c68d:	xchg   DWORD PTR [rax],eax
  40c68f:	add    cl,al
  40c691:	xchg   DWORD PTR [rax],eax
  40c693:	add    al,al
  40c695:	(bad)  
  40c696:	add    BYTE PTR [rax],al
  40c698:	rol    BYTE PTR [rdi],0x0
  40c69b:	add    BYTE PTR [rax+0x1],al
	...
  40c6a9:	add    DWORD PTR [rax],eax
  40c6ab:	add    BYTE PTR [rax-0x7ffffff9],al
  40c6b1:	(bad)  
  40c6b2:	add    BYTE PTR [rax],al
  40c6b4:	add    BYTE PTR [rdi],0x0
  40c6b7:	add    BYTE PTR [rax-0x3fffff9],al
  40c6bd:	(bad)  
  40c6be:	add    BYTE PTR [rax],al
  40c6c0:	cld    
  40c6c1:	(bad)  
  40c6c2:	add    BYTE PTR [rax],al
  40c6c4:	(bad)  
  40c6c5:	jg     40c6c7 <libintl_8_dll_iname+0x2bbb>
  40c6c7:	add    BYTE PTR [rax],ch
  40c6c9:	add    BYTE PTR [rax],al
  40c6cb:	add    BYTE PTR [rax],dl
  40c6cd:	add    BYTE PTR [rax],al
  40c6cf:	add    BYTE PTR [rax],ah
  40c6d1:	add    BYTE PTR [rax],al
  40c6d3:	add    BYTE PTR [rcx],al
  40c6d5:	add    BYTE PTR [rax],ah
  40c6d7:	add    BYTE PTR [rax],al
  40c6d9:	add    BYTE PTR [rax],al
  40c6db:	add    BYTE PTR [rax+0x4],al
	...
  40c6f6:	add    BYTE PTR [rax],al
  40c6f8:	imul   edi,DWORD PTR [rbx+0x7b],0xffffffff
  40c6fc:	fs jne 40c775 <libintl_8_dll_iname+0x2c69>
  40c6ff:	call   FWORD PTR [rbp+0x6f]
  40c702:	jno    40c703 <libintl_8_dll_iname+0x2bf7>
  40c704:	push   rdi
  40c705:	imul   ebp,DWORD PTR [rdi+rdi*8+0x50],0xff6763
  40c70d:	add    BYTE PTR [rax],al
  40c70f:	add    BYTE PTR [rax],al
  40c711:	add    BYTE PTR [rax],al
  40c713:	add    BYTE PTR [rdx+rdx*2],bh
  40c716:	pop    rax
  40c717:	push   QWORD PTR [rsi]
  40c719:	rex.WRB push r11
  40c71b:	jmp    FWORD PTR [rdi]
  40c71d:	rex.RXB
  40c71e:	rex.WRX jmp FWORD PTR [rcx]
  40c721:	rex.X
  40c722:	rex.WX inc QWORD PTR [rax]
	...
  40c735:	add    BYTE PTR [rax],al
  40c737:	add    BYTE PTR [rcx-0x7f],dh
  40c73a:	cmp    edi,0xffdedede
  40c740:	(bad)  
  40c741:	(bad)  
  40c743:	call   rsi
  40c745:	(bad)  
  40c747:	jmp    FWORD PTR [rcx]
  40c749:	rex.X
  40c74a:	rex.WX inc QWORD PTR [rax]
  40c74d:	add    BYTE PTR [rax],al
  40c74f:	add    BYTE PTR [rax],al
  40c751:	add    BYTE PTR [rax],al
  40c753:	add    BYTE PTR [rcx-0x7f],dh
  40c756:	cmp    edi,0xffcec6c6
  40c75c:	mov    dh,0xce
  40c75f:	jmp    FWORD PTR [rsp+rax*2]
  40c762:	rex.WR inc QWORD PTR [rax]
	...
  40c775:	add    BYTE PTR [rax],al
  40c777:	add    BYTE PTR [rax-0x79],bh
  40c77a:	xchg   edi,edi
  40c77c:	out    dx,al
  40c77d:	out    dx,al
  40c77e:	out    dx,al
  40c77f:	(bad)  
  40c780:	(bad)  
  40c781:	out    dx,al
  40c782:	out    dx,al
  40c783:	(bad)  
  40c784:	fsubrp st(4),st
  40c786:	in     al,0xff
  40c788:	sub    al,0x44
  40c78a:	rex.WR inc QWORD PTR [rax]
  40c78d:	add    BYTE PTR [rax],al
  40c78f:	add    BYTE PTR [rax],al
  40c791:	add    BYTE PTR [rax],al
  40c793:	add    BYTE PTR [rax-0x79],bh
  40c796:	xchg   edi,edi
  40c798:	enter  0xd0c9,0xff
  40c79c:	leave  
  40c79d:	retf   0xffd1
  40c7a0:	(bad)  
  40c7a1:	rex.RXB
  40c7a2:	rex.WRXB inc QWORD PTR [r8]
	...
  40c7b5:	add    BYTE PTR [rax],al
  40c7b7:	add    BYTE PTR [rdx-0x78],bh
  40c7ba:	mov    bh,bh
  40c7bc:	mov    ch,0xc5
  40c7bf:	jmp    FWORD PTR [rsi-0x68005150]
  40c7c5:	xchg   edi,eax
  40c7c6:	xchg   esi,eax
  40c7c7:	call   QWORD PTR [rbx+0x3dff9494]
  40c7cd:	rex.WX
  40c7ce:	rex.WXB push QWORD PTR [rip+0xffffffffc5ff4c47]        # ffffffffc640141c <libintl_8_dll_iname+0xffffffffc5ff7910>
  40c7d5:	int    0xcd
  40c7d7:	dec    esp
  40c7d9:	(bad)  
  40c7da:	(bad)  
  40c7db:	dec    esp
  40c7dd:	(bad)  
  40c7de:	(bad)  
  40c7df:	push   QWORD PTR [rbx]
  40c7e1:	rex.WX push rdx
  40c7e3:	inc    DWORD PTR [rax]
	...
  40c7f1:	add    BYTE PTR [rax],al
  40c7f3:	add    BYTE PTR [rbx*1+0x554f261c],bl
  40c7fa:	push   rsp
  40c7fb:	call   QWORD PTR [rdi+0x5d]
  40c7fe:	pop    rdi
  40c7ff:	call   QWORD PTR [rbp+rbx*2+0x61]
  40c803:	call   FWORD PTR [rcx+0x63]
  40c806:	push   0x67635aff
  40c80b:	dec    DWORD PTR [rsi+0x54]
  40c80e:	push   rsi
  40c80f:	dec    DWORD PTR [rbx+0x4f]
  40c812:	rex.WRXB dec QWORD PTR [r11-0x30007172]
  40c819:	rcl    bh,cl
  40c81b:	dec    edi
  40c81d:	rcl    bh,cl
  40c81f:	push   QWORD PTR [rsi]
  40c821:	rex.WR push rsp
  40c823:	inc    DWORD PTR [rax]
	...
  40c82d:	add    BYTE PTR [rax],al
  40c82f:	add    BYTE PTR [rip+0x2a461516],dl        # 2a86dd4b <libintl_8_dll_iname+0x2a46423f>
  40c835:	sub    al,0x2b
  40c837:	loopne 40c88a <libintl_8_dll_iname+0x2d7e>
  40c839:	pop    rbx
  40c83a:	pop    rsi
  40c83b:	call   FWORD PTR [rsi+0x6c]
  40c83e:	jb     40c83f <libintl_8_dll_iname+0x2d33>
  40c840:	rex.WRXB pop r14
  40c842:	fs (bad) 
  40c844:	(bad)  
  40c845:	rex.WRX push rbp
  40c847:	push   QWORD PTR [rcx+rax*2]
  40c84a:	rex.W push QWORD PTR [rdx+rax*2]
  40c84e:	rex.WB call QWORD PTR [r13+0x60]
  40c852:	inc    DWORD PTR gs:[rdx+0x46]
  40c856:	rex.RXB call FWORD PTR [r8-0x2d006367]
  40c85d:	(bad)  
  40c85e:	(bad)  
  40c860:	cmp    DWORD PTR [rdi+0x57],ecx
  40c863:	jmp    FWORD PTR [rdi]
  40c865:	rex.RXB
  40c866:	rex.WRX jmp FWORD PTR [rcx]
  40c869:	rex.X
  40c86a:	rex.WX inc QWORD PTR [rax]
  40c86d:	add    BYTE PTR [rax],al
  40c86f:	add    BYTE PTR [rax],al
  40c871:	add    BYTE PTR [rax],al
  40c873:	jmp    40c88d <libintl_8_dll_iname+0x2d81>
  40c875:	(bad)  
  40c876:	ud0    esi,DWORD PTR [rcx]
  40c879:	rex
  40c87a:	rex.RX inc DWORD PTR [rcx+0x5a]
  40c87e:	fs (bad) 
  40c880:	cmp    cl,BYTE PTR [rsp+rdx*2-0x1]
  40c884:	rex.XB
  40c885:	rex.WRXB push r12
  40c887:	inc    DWORD PTR [rsi+0x53]
  40c88a:	pop    rax
  40c88b:	inc    DWORD PTR [rbx+0x51]
  40c88e:	push   rsi
  40c88f:	inc    DWORD PTR [rbx+0x50]
  40c892:	push   rsi
  40c893:	call   QWORD PTR [rcx+0x57]
  40c896:	pop    rcx
  40c897:	call   QWORD PTR [rax+0x50]
  40c89a:	rex.WRX call rsi
  40c89d:	fcmovu st,st(6)
  40c89f:	call   rsi
  40c8a1:	(bad)  
  40c8a3:	call   rsi
  40c8a5:	(bad)  
  40c8a7:	call   rsi
  40c8a9:	(bad)  
  40c8ab:	jmp    FWORD PTR [rcx]
  40c8ad:	rex.X
  40c8ae:	rex.WX jmp FWORD PTR [rdx+0x58ffa8aa]
  40c8b5:	pop    rax
  40c8b6:	push   rbp
  40c8b7:	jmp    FWORD PTR [rbp+0x72]
  40c8ba:	je     40c8bb <libintl_8_dll_iname+0x2daf>
  40c8bc:	mov    bl,0xb9
  40c8be:	mov    edx,0xa3a299ff
  40c8c3:	jmp    FWORD PTR [rbx-0x3d004e4f]
  40c8c9:	(bad)  
  40c8ca:	(bad)  
  40c8cb:	(bad)  
  40c8cc:	mov    ecx,0x65ffbcbb
  40c8d1:	outs   dx,BYTE PTR ds:[rsi]
  40c8d2:	jb     40c8d3 <libintl_8_dll_iname+0x2dc7>
  40c8d4:	push   rdi
  40c8d5:	(bad)  
  40c8d6:	inc    WORD PTR [rcx+0x45]
  40c8da:	rex.RB (bad) 
  40c8dc:	(bad)  
  40c8de:	loope  40c8df <libintl_8_dll_iname+0x2dd3>
  40c8e0:	(bad)  
  40c8e1:	(bad)  
  40c8e3:	call   rsi
  40c8e5:	(bad)  
  40c8e7:	call   rsi
  40c8e9:	(bad)  
  40c8eb:	call   QWORD PTR [rdx+0x63]
  40c8ee:	imul   edi,edi,0xffffffc3
  40c8f1:	ret    
  40c8f2:	sar    edi,0x70
  40c8f5:	jo     40c965 <libintl_8_dll_iname+0x2e59>
  40c8f7:	(bad)  
  40c8f8:	fcomp  st(0)
  40c8fa:	fdivr  st,st(7)
  40c8fc:	movsxd esp,DWORD PTR fs:[rdx-0x1]
  40c900:	lods   al,BYTE PTR ds:[rsi]
  40c901:	mov    al,0xb1
  40c903:	push   rsi
  40c905:	div    dh
  40c907:	jmp    FWORD PTR [rdi+0x3bffaeae]
  40c90d:	cmp    bh,BYTE PTR [rdx]
  40c90f:	(bad)  
  40c910:	mov    esi,0x62ffc3c2
  40c915:	outs   dx,BYTE PTR ds:[rsi]
  40c916:	jae    40c917 <libintl_8_dll_iname+0x2e0b>
  40c918:	ds rex.R
  40c91a:	rex.RXB (bad) 
  40c91c:	fsubr  st(2),st
  40c91e:	in     al,0xff
  40c920:	rex.R push rdi
  40c922:	pop    rdi
  40c923:	call   FWORD PTR [rsp+rbp*2+0x74]
  40c927:	call   QWORD PTR [rdx+0x63]
  40c92a:	imul   edi,edi,0x0
  40c92d:	add    BYTE PTR [rax],al
  40c92f:	add    BYTE PTR [rax],al
  40c931:	add    BYTE PTR [rax],al
  40c933:	data16 gs addr32 addr32 (bad) 
  40c938:	jmp    40c926 <libintl_8_dll_iname+0x2e1a>
  40c93a:	in     al,dx
  40c93b:	(bad)  
  40c93c:	fcmovnu st,st(3)
  40c93e:	(bad)  
  40c940:	mov    eax,0xf6ffbcbb
  40c945:	div    dh
  40c947:	(bad)  
  40c948:	out    dx,eax
  40c949:	out    dx,eax
  40c94a:	out    dx,eax
  40c94b:	call   rdx
  40c94d:	rcl    dl,cl
  40c94f:	(bad)  
  40c950:	mov    ebp,0x64ffc2c1
  40c955:	jo     40c9cb <libintl_8_dll_iname+0x2ebf>
  40c957:	(bad)  
  40c958:	cmp    eax,DWORD PTR [rax+0x43]
  40c95b:	jmp    rax
  40c95d:	out    0xe8,al
  40c95f:	inc    DWORD PTR [rdi+0x5a]
  40c962:	(bad)  
  40c963:	inc    DWORD PTR [rax]
	...
  40c971:	add    BYTE PTR [rax],al
  40c973:	add    BYTE PTR [rbx+0x69],ah
  40c976:	imul   ebp,DWORD PTR [rax-0x5c5c60],0xffffffcd
  40c97d:	(bad)  
  40c97e:	(bad)  
  40c97f:	jmp    QWORD PTR [rax+rbp*4-0x3d400059]
  40c986:	sar    edi,0xff
  40c989:	(bad)  
  40c98a:	(bad)  
  40c98b:	jmp    rbx
  40c98d:	in     eax,0xe6
  40c98f:	dec    DWORD PTR [rbp+0x6aff9695]
  40c995:	je     40ca0f <libintl_8_dll_iname+0x2f03>
  40c997:	(bad)  
  40c998:	cmp    al,BYTE PTR [rax+0x42]
  40c99b:	jmp    rbx
  40c99d:	(bad)  
  40c99e:	jmp    40c99f <libintl_8_dll_iname+0x2e93>
  40c9a0:	rex.WXB pop r13
  40c9a2:	inc    DWORD PTR gs:[rax]
	...
  40c9b1:	add    BYTE PTR [rax],al
  40c9b3:	add    BYTE PTR [rdi],ah
  40c9b5:	sub    BYTE PTR [rax],ch
  40c9b7:	test   eax,0xff676866
  40c9bc:	xchg   edx,eax
  40c9bd:	xchg   esp,eax
  40c9be:	xchg   esp,eax
  40c9bf:	jmp    QWORD PTR [rdx-0x5f005d5d]
  40c9c5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c9c6:	movabs ds:0x91928cff949593ff,al
  40c9cf:	jmp    QWORD PTR [rbx+0x65]
  40c9d2:	call   QWORD PTR fs:[rbp+0x5a]
  40c9d6:	pop    rbx
  40c9d7:	dec    DWORD PTR [rcx+rdx*2+0x52]
  40c9db:	jmp    rdi
  40c9dd:	out    dx,eax
  40c9de:	out    dx,eax
  40c9df:	dec    DWORD PTR [rsi+0x60]
  40c9e2:	push   0xff
	...
  40c9f3:	add    BYTE PTR [rip+0xffffffff95832526],ah        # ffffffff95c3ef1f <libintl_8_dll_iname+0xffffffff95835413>
  40c9f9:	pushf  
  40c9fa:	pushf  
  40c9fb:	push   QWORD PTR [rdx-0x58004344]
  40ca01:	mov    dl,0xb3
  40ca03:	call   FWORD PTR [rax+rbp*4-0x616e0056]
  40ca0a:	movabs eax,ds:0xf4f4f4fff7f7f7ff
  40ca13:	inc    DWORD PTR [rsi+0x4b]
  40ca16:	rex.WXB (bad) 
  40ca18:	cmp    BYTE PTR [rcx],bh
  40ca1a:	(bad)  
  40ca1b:	call   FWORD PTR [rsp+rbp*2+0x74]
  40ca1f:	call   QWORD PTR [rdx+0x63]
  40ca22:	imul   edi,edi,0x0
	...
  40ca31:	add    BYTE PTR [rax],al
  40ca33:	add    BYTE PTR [rsi],cl
  40ca35:	femms  
  40ca37:	(bad)  
	...
  40ca48:	jno    40c9ca <libintl_8_dll_iname+0x2ebe>
  40ca4a:	xchg   bh,bh
  40ca4c:	div    dh
  40ca4e:	idiv   bh
  40ca50:	div    edi
  40ca52:	idiv   edi
  40ca54:	rex.WRB pop r13
  40ca56:	jmp    QWORD PTR fs:[rip+0xb62526]        # f6ef83 <libintl_8_dll_iname+0xb65477>
	...
  40ca85:	add    BYTE PTR [rax],al
  40ca87:	add    BYTE PTR [rcx-0x80],dh
  40ca8a:	xchg   bh,bh
  40ca8c:	(bad)  
  40ca8d:	(bad)  
  40ca8e:	(bad)  
  40ca8f:	(bad)  
  40ca90:	(bad)  
  40ca91:	(bad)  
  40ca92:	(bad)  
  40ca93:	call   QWORD PTR [rdx+0x63]
  40ca96:	imul   edi,edi,0x0
	...
  40cac9:	add    BYTE PTR [rax],al
  40cacb:	add    BYTE PTR [rdi+0x76],ah
  40cace:	jge    40cacf <libintl_8_dll_iname+0x2fc3>
  40cad0:	addr32 jbe 40cb50 <libintl_8_dll_iname+0x3044>
  40cad3:	inc    DWORD PTR [rax]
	...
  40caed:	add    BYTE PTR [rax],al
  40caef:	add    cl,al
  40caf1:	xchg   edi,edi
  40caf3:	inc    ecx
  40caf5:	xchg   edi,edi
  40caf7:	inc    ecx
  40caf9:	xchg   edi,edi
  40cafb:	inc    eax
  40cafd:	(bad)  
  40cafe:	(bad)  
  40caff:	inc    DWORD PTR [rax+0xffff07]
  40cb05:	add    edi,edi
  40cb07:	inc    DWORD PTR [rax]
  40cb09:	add    bh,bh
  40cb0b:	inc    DWORD PTR [rax]
  40cb0d:	add    bh,bh
  40cb0f:	inc    DWORD PTR [rax]
  40cb11:	add    edi,edi
  40cb13:	inc    DWORD PTR [rax]
  40cb15:	(bad)  
  40cb16:	(bad)  
  40cb17:	inc    DWORD PTR [rax-0x7f0000f9]
  40cb1d:	(bad)  
  40cb1e:	(bad)  
  40cb1f:	inc    DWORD PTR [rax-0x430000f9]
  40cb25:	(bad)  
  40cb26:	(bad)  
  40cb27:	(bad)  
  40cb28:	cld    
  40cb29:	(bad)  
  40cb2a:	(bad)  
  40cb2b:	(bad)  
  40cb2c:	(bad)  
  40cb2d:	jg     40cb2e <libintl_8_dll_iname+0x3022>
  40cb2f:	inc    DWORD PTR [rax]
  40cb31:	add    BYTE PTR [rcx],al
  40cb33:	add    BYTE PTR [rdx],al
  40cb35:	add    BYTE PTR [rax],dl
  40cb37:	adc    BYTE PTR [rax],al
  40cb39:	add    BYTE PTR [rcx],al
  40cb3b:	add    BYTE PTR [rax],cl
  40cb3d:	add    BYTE PTR [rax+0x5],ch
  40cb40:	add    BYTE PTR [rax],al
  40cb42:	add    DWORD PTR [rax],eax
  40cb44:	adc    BYTE PTR [rax],dl
  40cb46:	add    BYTE PTR [rax],al
  40cb48:	add    DWORD PTR [rax],eax
  40cb4a:	and    BYTE PTR [rax],al
  40cb4c:	push   0x2000004
  40cb51:	add    BYTE PTR [rax],al
  40cb53:	add    BYTE PTR [rax],al
  40cb55:	add    BYTE PTR [rax],al
  40cb57:	add    BYTE PTR [rbx+rax*1+0x34],al
  40cb5e:	push   rsi
  40cb5f:	add    BYTE PTR [rbx+0x0],dl
  40cb62:	pop    rdi
  40cb63:	add    BYTE PTR [rsi+0x0],dl
  40cb66:	add    BYTE PTR [r10+0x0],r10b
  40cb6a:	push   rbx
  40cb6b:	add    BYTE PTR [rcx+0x0],cl
  40cb6e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
  40cb72:	pop    rdi
  40cb73:	add    BYTE PTR [rcx+0x0],cl
  40cb76:	rex.WRX add BYTE PTR [rsi+0x0],r8b
  40cb7a:	rex.WRXB add BYTE PTR [r8],r8b
  40cb7d:	add    BYTE PTR [rax],al
  40cb7f:	add    BYTE PTR [rbp+0xfeef04],bh
  40cb85:	add    BYTE PTR [rcx],al
  40cb87:	add    BYTE PTR [rax],cl
  40cb89:	add    BYTE PTR [rdx],al
  40cb8b:	add    BYTE PTR [rax],al
  40cb8d:	add    BYTE PTR [rsi],dl
  40cb8f:	add    BYTE PTR [rax],cl
  40cb91:	add    BYTE PTR [rdx],al
  40cb93:	add    BYTE PTR [rax],al
  40cb95:	add    BYTE PTR [rsi],dl
  40cb97:	add    BYTE PTR [rdi],bh
  40cb99:	add    BYTE PTR [rax],al
  40cb9b:	add    BYTE PTR [rax],al
  40cb9d:	add    BYTE PTR [rax],al
  40cb9f:	add    BYTE PTR [rax+rax*1],al
  40cba2:	add    BYTE PTR [rax],al
  40cba4:	add    DWORD PTR [rax],eax
	...
  40cbb2:	add    BYTE PTR [rax],al
  40cbb4:	in     al,0x2
  40cbb6:	add    BYTE PTR [rax],al
  40cbb8:	add    DWORD PTR [rax],eax
  40cbba:	push   rbx
  40cbbb:	add    BYTE PTR [rax+rax*1+0x72],dh
  40cbbf:	add    BYTE PTR [rcx+0x0],ch
  40cbc2:	outs   dx,BYTE PTR ds:[rsi]
  40cbc3:	add    BYTE PTR [rdi+0x0],ah
  40cbc6:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40cbca:	ins    BYTE PTR es:[rdi],dx
  40cbcb:	add    BYTE PTR [rbp+0x0],ah
  40cbce:	rex.WB add BYTE PTR [r14+0x0],bpl
  40cbd2:	data16 add BYTE PTR [rdi+0x0],ch
  40cbd6:	add    BYTE PTR [rax],al
  40cbd8:	rol    BYTE PTR [rdx],0x0
  40cbdb:	add    BYTE PTR [rcx],al
  40cbdd:	add    BYTE PTR [rax],dh
  40cbdf:	add    BYTE PTR [rax+rax*1],dh
  40cbe2:	xor    BYTE PTR [rax],al
  40cbe4:	cmp    DWORD PTR [rax],eax
  40cbe6:	xor    BYTE PTR [rax],al
  40cbe8:	xor    al,0x0
  40cbea:	rex.X add BYTE PTR [rax],sil
  40cbed:	add    BYTE PTR [rax],al
  40cbef:	add    BYTE PTR [rax+0x1003c00],bl
  40cbf5:	add    BYTE PTR [rbx+0x0],al
  40cbf8:	outs   dx,DWORD PTR ds:[rsi]
  40cbf9:	add    BYTE PTR [rbp+0x0],ch
  40cbfc:	jo     40cbfe <libintl_8_dll_iname+0x30f2>
  40cbfe:	(bad)  
  40cbff:	add    BYTE PTR [rsi+0x0],ch
  40cc02:	jns    40cc04 <libintl_8_dll_iname+0x30f8>
  40cc04:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40cc08:	ins    DWORD PTR es:[rdi],dx
  40cc09:	add    BYTE PTR [rbp+0x0],ah
  40cc0c:	add    BYTE PTR [rax],al
  40cc0e:	add    BYTE PTR [rax],al
  40cc10:	push   rbx
  40cc11:	add    BYTE PTR [rax+0x0],dh
  40cc14:	add    BYTE PTR gs:[rsi+0x0],ch
  40cc18:	movsxd eax,DWORD PTR [rax]
  40cc1a:	add    BYTE PTR gs:[rdx+0x0],dh
  40cc1e:	and    BYTE PTR [rax],al
  40cc20:	rex.WXB add BYTE PTR [r9+0x0],bpl
  40cc24:	ins    DWORD PTR es:[rdi],dx
  40cc25:	add    BYTE PTR [rdx+0x0],ah
  40cc28:	(bad)  
  40cc29:	add    BYTE PTR [rax+rax*1+0x6c],ch
  40cc2d:	add    BYTE PTR [rax+rax*1],ch
  40cc30:	and    BYTE PTR [rax],al
  40cc32:	push   rax
  40cc33:	add    BYTE PTR [rbp+0x0],ah
  40cc36:	je     40cc38 <libintl_8_dll_iname+0x312c>
  40cc38:	add    BYTE PTR gs:[rdx+0x0],dh
  40cc3c:	and    BYTE PTR [rax],al
  40cc3e:	rex.WRB add BYTE PTR [r9+0x0],r12b
  40cc42:	je     40cc44 <libintl_8_dll_iname+0x3138>
  40cc44:	je     40cc46 <libintl_8_dll_iname+0x313a>
  40cc46:	imul   eax,DWORD PTR [rax],0x200073
  40cc4c:	(bad)  
  40cc4d:	add    BYTE PTR [rsi+0x0],ch
  40cc50:	add    BYTE PTR fs:[rax],ah
  40cc53:	add    BYTE PTR [rax+rax*1+0x68],dh
  40cc57:	add    BYTE PTR [rbp+0x0],ah
  40cc5a:	and    BYTE PTR [rax],al
  40cc5c:	rex.RXB add BYTE PTR [r9+0x0],r9b
  40cc60:	rex.WRB add BYTE PTR [r8+0x0],r10b
  40cc64:	and    BYTE PTR [rax],al
  40cc66:	add    BYTE PTR [rbp+0x0],r12b
  40cc6a:	jbe    40cc6c <libintl_8_dll_iname+0x3160>
  40cc6c:	add    BYTE PTR gs:[rax+rax*1+0x6f],ch
  40cc71:	add    BYTE PTR [rax+0x0],dh
  40cc74:	ins    DWORD PTR es:[rdi],dx
  40cc75:	add    BYTE PTR [rbp+0x0],ah
  40cc78:	outs   dx,BYTE PTR ds:[rsi]
  40cc79:	add    BYTE PTR [rax+rax*1+0x20],dh
  40cc7d:	add    BYTE PTR [rax+rax*1+0x65],dl
  40cc81:	add    BYTE PTR [rcx+0x0],ah
  40cc84:	ins    DWORD PTR es:[rdi],dx
  40cc85:	add    BYTE PTR [rax],al
  40cc87:	add    BYTE PTR [rsi+0x0],dh
  40cc8a:	(bad)  
  40cc8b:	add    BYTE PTR [rcx],al
  40cc8d:	add    BYTE PTR [rsi+0x0],al
  40cc90:	imul   eax,DWORD PTR [rax],0x65006c
  40cc96:	add    BYTE PTR [rbp+0x0],r12b
  40cc9a:	jae    40cc9c <libintl_8_dll_iname+0x3190>
  40cc9c:	movsxd eax,DWORD PTR [rax]
  40cc9e:	jb     40cca0 <libintl_8_dll_iname+0x3194>
  40cca0:	imul   eax,DWORD PTR [rax],0x740070
  40cca6:	imul   eax,DWORD PTR [rax],0x6e006f
  40ccac:	add    BYTE PTR [rax],al
  40ccae:	add    BYTE PTR [rax],al
  40ccb0:	rex.RXB add BYTE PTR [r14+0x0],r9b
  40ccb4:	push   rbp
  40ccb5:	add    BYTE PTR [rax],ah
  40ccb7:	add    BYTE PTR [rcx+0x0],cl
  40ccba:	ins    DWORD PTR es:[rdi],dx
  40ccbb:	add    BYTE PTR [rcx+0x0],ah
  40ccbe:	add    BYTE PTR [ebp+0x0],ah
  40ccc2:	and    BYTE PTR [rax],al
  40ccc4:	rex.WRB add BYTE PTR [r9+0x0],r12b
  40ccc8:	outs   dx,BYTE PTR ds:[rsi]
  40ccc9:	add    BYTE PTR [rcx+0x0],ch
  40cccc:	jo     40ccce <libintl_8_dll_iname+0x31c2>
  40ccce:	jne    40ccd0 <libintl_8_dll_iname+0x31c4>
  40ccd0:	ins    BYTE PTR es:[rdi],dx
  40ccd1:	add    BYTE PTR [rcx+0x0],ah
  40ccd4:	je     40ccd6 <libintl_8_dll_iname+0x31ca>
  40ccd6:	imul   eax,DWORD PTR [rax],0x6e006f
  40ccdc:	and    BYTE PTR [rax],al
  40ccde:	push   rax
  40ccdf:	add    BYTE PTR [rdx+0x0],dh
  40cce2:	outs   dx,DWORD PTR ds:[rsi]
  40cce3:	add    BYTE PTR [rdi+0x0],ah
  40cce6:	jb     40cce8 <libintl_8_dll_iname+0x31dc>
  40cce8:	(bad)  
  40cce9:	add    BYTE PTR [rbp+0x0],ch
  40ccec:	and    BYTE PTR [rax],al
  40ccee:	push   rax
  40ccef:	add    BYTE PTR [rax+rax*1+0x75],ch
  40ccf3:	add    BYTE PTR [rdi+0x0],ah
  40ccf6:	sub    eax,0x6e004900
  40ccfb:	add    BYTE PTR [rax],al
  40ccfd:	add    BYTE PTR [rax],al
  40ccff:	add    BYTE PTR [rdx],dh
  40cd01:	add    BYTE PTR [rcx],cl
  40cd03:	add    BYTE PTR [rcx],al
  40cd05:	add    BYTE PTR [rsi+0x0],al
  40cd08:	imul   eax,DWORD PTR [rax],0x65006c
  40cd0e:	push   rsi
  40cd0f:	add    BYTE PTR [rbp+0x0],ah
  40cd12:	jb     40cd14 <libintl_8_dll_iname+0x3208>
  40cd14:	jae    40cd16 <libintl_8_dll_iname+0x320a>
  40cd16:	imul   eax,DWORD PTR [rax],0x6e006f
  40cd1c:	add    BYTE PTR [rax],al
  40cd1e:	add    BYTE PTR [rax],al
  40cd20:	xor    al,BYTE PTR [rax]
  40cd22:	add    BYTE PTR cs:[rax],bh
  40cd25:	add    BYTE PTR [rsi],ch
  40cd27:	add    BYTE PTR [rdx],dh
  40cd29:	add    BYTE PTR [rdx],dh
  40cd2b:	add    BYTE PTR [rsi],ch
  40cd2d:	add    BYTE PTR [rax],dh
  40cd2f:	add    BYTE PTR [rax],al
  40cd31:	add    BYTE PTR [rax],al
  40cd33:	add    BYTE PTR [rax],bh
  40cd35:	add    BYTE PTR [rax+rax*1],cl
  40cd38:	add    DWORD PTR [rax],eax
  40cd3a:	rex.WB add BYTE PTR [r14+0x0],bpl
  40cd3e:	je     40cd40 <libintl_8_dll_iname+0x3234>
  40cd40:	add    BYTE PTR gs:[rdx+0x0],dh
  40cd44:	outs   dx,BYTE PTR ds:[rsi]
  40cd45:	add    BYTE PTR [rcx+0x0],ah
  40cd48:	ins    BYTE PTR es:[rdi],dx
  40cd49:	add    BYTE PTR [rsi+0x0],cl
  40cd4c:	(bad)  
  40cd4d:	add    BYTE PTR [rbp+0x0],ch
  40cd50:	add    BYTE PTR gs:[rax],al
  40cd53:	add    BYTE PTR [rdi+0x0],dh
  40cd56:	add    BYTE PTR gs:[rdx+0x0],ah
  40cd5a:	sub    eax,0x72006200
  40cd5f:	add    BYTE PTR [rdi+0x0],ch
  40cd62:	ja     40cd64 <libintl_8_dll_iname+0x3258>
  40cd64:	jae    40cd66 <libintl_8_dll_iname+0x325a>
  40cd66:	add    BYTE PTR gs:[rdx+0x0],dh
  40cd6a:	add    BYTE PTR [rax],al
  40cd6c:	rex.W add BYTE PTR [rax],dl
  40cd6f:	add    BYTE PTR [rcx],al
  40cd71:	add    BYTE PTR [rdi+0x0],cl
  40cd74:	jb     40cd76 <libintl_8_dll_iname+0x326a>
  40cd76:	imul   eax,DWORD PTR [rax],0x690067
  40cd7c:	outs   dx,BYTE PTR ds:[rsi]
  40cd7d:	add    BYTE PTR [rcx+0x0],ah
  40cd80:	ins    BYTE PTR es:[rdi],dx
  40cd81:	add    BYTE PTR [rsi+0x0],al
  40cd84:	imul   eax,DWORD PTR [rax],0x65006c
  40cd8a:	outs   dx,BYTE PTR ds:[rsi]
  40cd8b:	add    BYTE PTR [rcx+0x0],ah
  40cd8e:	ins    DWORD PTR es:[rdi],dx
  40cd8f:	add    BYTE PTR [rbp+0x0],ah
  40cd92:	add    BYTE PTR [rax],al
  40cd94:	ja     40cd96 <libintl_8_dll_iname+0x328a>
  40cd96:	add    BYTE PTR gs:[rdx+0x0],ah
  40cd9a:	sub    eax,0x72006200
  40cd9f:	add    BYTE PTR [rdi+0x0],ch
  40cda2:	ja     40cda4 <libintl_8_dll_iname+0x3298>
  40cda4:	jae    40cda6 <libintl_8_dll_iname+0x329a>
  40cda6:	add    BYTE PTR gs:[rdx+0x0],dh
  40cdaa:	add    BYTE PTR cs:[rbp+0x0],ah
  40cdae:	js     40cdb0 <libintl_8_dll_iname+0x32a4>
  40cdb0:	add    BYTE PTR gs:[rax],al
  40cdb3:	add    BYTE PTR [rsi+0x0],bl
  40cdb6:	(bad)  
  40cdb7:	add    BYTE PTR [rcx],al
  40cdb9:	add    BYTE PTR [rax+0x0],dl
  40cdbc:	jb     40cdbe <libintl_8_dll_iname+0x32b2>
  40cdbe:	outs   dx,DWORD PTR ds:[rsi]
  40cdbf:	add    BYTE PTR [rax+rax*1+0x75],ah
  40cdc3:	add    BYTE PTR [rbx+0x0],ah
  40cdc6:	je     40cdc8 <libintl_8_dll_iname+0x32bc>
  40cdc8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40cdcc:	ins    DWORD PTR es:[rdi],dx
  40cdcd:	add    BYTE PTR [rbp+0x0],ah
  40cdd0:	add    BYTE PTR [rax],al
  40cdd2:	add    BYTE PTR [rax],al
  40cdd4:	rex.RXB add BYTE PTR [r14+0x0],r9b
  40cdd8:	push   rbp
  40cdd9:	add    BYTE PTR [rax],ah
  40cddb:	add    BYTE PTR [rcx+0x0],cl
  40cdde:	ins    DWORD PTR es:[rdi],dx
  40cddf:	add    BYTE PTR [rcx+0x0],ah
  40cde2:	add    BYTE PTR [ebp+0x0],ah
  40cde6:	and    BYTE PTR [rax],al
  40cde8:	rex.WRB add BYTE PTR [r9+0x0],r12b
  40cdec:	outs   dx,BYTE PTR ds:[rsi]
  40cded:	add    BYTE PTR [rcx+0x0],ch
  40cdf0:	jo     40cdf2 <libintl_8_dll_iname+0x32e6>
  40cdf2:	jne    40cdf4 <libintl_8_dll_iname+0x32e8>
  40cdf4:	ins    BYTE PTR es:[rdi],dx
  40cdf5:	add    BYTE PTR [rcx+0x0],ah
  40cdf8:	je     40cdfa <libintl_8_dll_iname+0x32ee>
  40cdfa:	imul   eax,DWORD PTR [rax],0x6e006f
  40ce00:	and    BYTE PTR [rax],al
  40ce02:	push   rax
  40ce03:	add    BYTE PTR [rdx+0x0],dh
  40ce06:	outs   dx,DWORD PTR ds:[rsi]
  40ce07:	add    BYTE PTR [rdi+0x0],ah
  40ce0a:	jb     40ce0c <libintl_8_dll_iname+0x3300>
  40ce0c:	(bad)  
  40ce0d:	add    BYTE PTR [rbp+0x0],ch
  40ce10:	add    BYTE PTR [rax],al
  40ce12:	add    BYTE PTR [rax],al
  40ce14:	xor    al,BYTE PTR [rax]
  40ce16:	(bad)  
  40ce17:	add    BYTE PTR [rcx],al
  40ce19:	add    BYTE PTR [rax+0x0],dl
  40ce1c:	jb     40ce1e <libintl_8_dll_iname+0x3312>
  40ce1e:	outs   dx,DWORD PTR ds:[rsi]
  40ce1f:	add    BYTE PTR [rax+rax*1+0x75],ah
  40ce23:	add    BYTE PTR [rbx+0x0],ah
  40ce26:	je     40ce28 <libintl_8_dll_iname+0x331c>
  40ce28:	push   rsi
  40ce29:	add    BYTE PTR [rbp+0x0],ah
  40ce2c:	jb     40ce2e <libintl_8_dll_iname+0x3322>
  40ce2e:	jae    40ce30 <libintl_8_dll_iname+0x3324>
  40ce30:	imul   eax,DWORD PTR [rax],0x6e006f
  40ce36:	add    BYTE PTR [rax],al
  40ce38:	xor    al,BYTE PTR [rax]
  40ce3a:	add    BYTE PTR cs:[rax],bh
  40ce3d:	add    BYTE PTR [rsi],ch
  40ce3f:	add    BYTE PTR [rdx],dh
  40ce41:	add    BYTE PTR [rdx],dh
  40ce43:	add    BYTE PTR [rax],al
  40ce45:	add    BYTE PTR [rax],al
  40ce47:	add    BYTE PTR [rax+0x0],dl
  40ce4a:	(bad)  
  40ce4b:	add    BYTE PTR [rcx],al
  40ce4d:	add    BYTE PTR [rax+rax*1+0x65],cl
  40ce51:	add    BYTE PTR [rdi+0x0],ah
  40ce54:	(bad)  
  40ce55:	add    BYTE PTR [rax+rax*1+0x43],ch
  40ce59:	add    BYTE PTR [rdi+0x0],ch
  40ce5c:	jo     40ce5e <libintl_8_dll_iname+0x3352>
  40ce5e:	jns    40ce60 <libintl_8_dll_iname+0x3354>
  40ce60:	jb     40ce62 <libintl_8_dll_iname+0x3356>
  40ce62:	imul   eax,DWORD PTR [rax],0x680067
  40ce68:	je     40ce6a <libintl_8_dll_iname+0x335e>
  40ce6a:	add    BYTE PTR [rax],al
  40ce6c:	rex.XB add BYTE PTR [r15+0x0],bpl
  40ce70:	jo     40ce72 <libintl_8_dll_iname+0x3366>
  40ce72:	jns    40ce74 <libintl_8_dll_iname+0x3368>
  40ce74:	jb     40ce76 <libintl_8_dll_iname+0x336a>
  40ce76:	imul   eax,DWORD PTR [rax],0x680067
  40ce7c:	je     40ce7e <libintl_8_dll_iname+0x3372>
  40ce7e:	and    BYTE PTR [rax],al
  40ce80:	test   eax,0x31002000
  40ce85:	add    BYTE PTR [rcx],bh
  40ce87:	add    BYTE PTR [rcx],bh
  40ce89:	add    BYTE PTR [rip+0x32002d00],dh        # 3240fb8f <libintl_8_dll_iname+0x32006083>
  40ce8f:	add    BYTE PTR [rax],dh
  40ce91:	add    BYTE PTR [rcx],dh
  40ce93:	add    BYTE PTR [rdi],dh
  40ce95:	add    BYTE PTR [rax],al
  40ce97:	add    BYTE PTR [rax+rax*1+0x0],al
  40ce9b:	add    BYTE PTR [rcx],al
  40ce9d:	add    BYTE PTR [rsi+0x0],dl
  40cea0:	(bad)  
  40cea1:	add    BYTE PTR [rdx+0x0],dh
  40cea4:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40cea8:	ins    BYTE PTR es:[rdi],dx
  40cea9:	add    BYTE PTR [rbp+0x0],ah
  40ceac:	rex.WB add BYTE PTR [r14+0x0],bpl
  40ceb0:	data16 add BYTE PTR [rdi+0x0],ch
  40ceb4:	add    BYTE PTR [rax],al
  40ceb6:	add    BYTE PTR [rax],al
  40ceb8:	and    al,0x0
  40ceba:	add    al,0x0
  40cebc:	add    BYTE PTR [rax],al
  40cebe:	push   rsp
  40cebf:	add    BYTE PTR [rdx+0x0],dh
  40cec2:	(bad)  
  40cec3:	add    BYTE PTR [rsi+0x0],ch
  40cec6:	jae    40cec8 <libintl_8_dll_iname+0x33bc>
  40cec8:	ins    BYTE PTR es:[rdi],dx
  40cec9:	add    BYTE PTR [rcx+0x0],ah
  40cecc:	je     40cece <libintl_8_dll_iname+0x33c2>
  40cece:	imul   eax,DWORD PTR [rax],0x6e006f
  40ced4:	add    BYTE PTR [rax],al
  40ced6:	add    BYTE PTR [rax],al
  40ced8:	or     DWORD PTR [rax+rsi*4],eax
  40cedb:	add    al,0x0
  40cedd:	add    BYTE PTR [rax],al
  40cedf:	add    BYTE PTR [rdi+rdi*1],bh
  40cee2:	js     40cf51 <libintl_8_dll_iname+0x3445>
  40cee4:	ins    BYTE PTR es:[rdi],dx
  40cee5:	and    BYTE PTR [rsi+0x65],dh
  40cee8:	jb     40cf5d <libintl_8_dll_iname+0x3451>
  40ceea:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  40cef1:	xor    BYTE PTR [rdx],ah
  40cef3:	and    BYTE PTR [rbp+0x6e],ah
  40cef6:	movsxd ebp,DWORD PTR [rdi+0x64]
  40cef9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
  40cf00:	rex.RX sub eax,0x73202238
  40cf06:	je     40cf69 <libintl_8_dll_iname+0x345d>
  40cf08:	outs   dx,BYTE PTR ds:[rsi]
  40cf09:	fs (bad) 
  40cf0b:	ins    BYTE PTR es:[rdi],dx
  40cf0c:	outs   dx,DWORD PTR ds:[rsi]
  40cf0d:	outs   dx,BYTE PTR ds:[rsi]
  40cf0e:	gs cmp eax,0x73657922
  40cf14:	and    bh,BYTE PTR [rdi]
  40cf16:	or     bh,BYTE PTR ds:[rcx+riz*2]
  40cf1a:	jae    40cf8f <libintl_8_dll_iname+0x3483>
  40cf1c:	gs ins DWORD PTR es:[rdi],dx
  40cf1e:	(bad)  
  40cf1f:	ins    BYTE PTR es:[rdi],dx
  40cf20:	jns    40cf42 <libintl_8_dll_iname+0x3436>
  40cf22:	js     40cf91 <libintl_8_dll_iname+0x3485>
  40cf24:	ins    BYTE PTR es:[rdi],dx
  40cf25:	outs   dx,BYTE PTR ds:[rsi]
  40cf26:	jae    40cf65 <libintl_8_dll_iname+0x3459>
  40cf28:	and    dh,BYTE PTR [rbp+0x72]
  40cf2b:	outs   dx,BYTE PTR ds:[rsi]
  40cf2c:	cmp    dh,BYTE PTR [rbx+0x63]
  40cf2f:	push   0x73616d65
  40cf34:	sub    eax,0x7263696d
  40cf39:	outs   dx,DWORD PTR ds:[rsi]
  40cf3a:	jae    40cfab <libintl_8_dll_iname+0x349f>
  40cf3c:	data16 je 40cf6c <libintl_8_dll_iname+0x3460>
  40cf3f:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40cf42:	cmp    ah,BYTE PTR [rcx+0x73]
  40cf45:	ins    DWORD PTR es:[rdi],dx
  40cf46:	cs jbe 40cf7a <libintl_8_dll_iname+0x346e>
  40cf49:	and    ah,BYTE PTR [rax]
  40cf4b:	ins    DWORD PTR es:[rdi],dx
  40cf4c:	(bad)  
  40cf4d:	outs   dx,BYTE PTR ds:[rsi]
  40cf4e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
  40cf55:	jb     40cfca <libintl_8_dll_iname+0x34be>
  40cf57:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  40cf5e:	xor    BYTE PTR [rdx],ah
  40cf60:	and    BYTE PTR [rax+0x6d],bh
  40cf63:	ins    BYTE PTR es:[rdi],dx
  40cf64:	outs   dx,BYTE PTR ds:[rsi]
  40cf65:	jae    40cfa1 <libintl_8_dll_iname+0x3495>
  40cf67:	(bad)  
  40cf68:	jae    40cfd7 <libintl_8_dll_iname+0x34cb>
  40cf6a:	jbe    40cf9f <libintl_8_dll_iname+0x3493>
  40cf6c:	cmp    eax,0x6e727522
  40cf71:	cmp    dh,BYTE PTR [rbx+0x63]
  40cf74:	push   0x73616d65
  40cf79:	sub    eax,0x7263696d
  40cf7e:	outs   dx,DWORD PTR ds:[rsi]
  40cf7f:	jae    40cff0 <libintl_8_dll_iname+0x34e4>
  40cf81:	data16 je 40cfb1 <libintl_8_dll_iname+0x34a5>
  40cf84:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40cf87:	cmp    ah,BYTE PTR [rcx+0x73]
  40cf8a:	ins    DWORD PTR es:[rdi],dx
  40cf8b:	cs jbe 40cfc1 <libintl_8_dll_iname+0x34b5>
  40cf8e:	and    bh,BYTE PTR [rsi]
  40cf90:	or     cl,BYTE PTR [rcx]
  40cf92:	cmp    al,0x61
  40cf94:	jae    40d009 <libintl_8_dll_iname+0x34fd>
  40cf96:	gs ins DWORD PTR es:[rdi],dx
  40cf98:	(bad)  
  40cf99:	ins    BYTE PTR es:[rdi],dx
  40cf9a:	jns    40cfe5 <libintl_8_dll_iname+0x34d9>
  40cf9c:	fs outs dx,BYTE PTR gs:[rsi]
  40cf9f:	je     40d00a <libintl_8_dll_iname+0x34fe>
  40cfa1:	je     40d01c <libintl_8_dll_iname+0x3510>
  40cfa3:	and    BYTE PTR [rsi+0x65],dh
  40cfa6:	jb     40d01b <libintl_8_dll_iname+0x350f>
  40cfa8:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e32223d
  40cfaf:	xor    BYTE PTR [rsi],ch
  40cfb1:	xor    BYTE PTR [rsi],ch
  40cfb3:	xor    BYTE PTR [rdx],ah
  40cfb5:	and    BYTE PTR [rsi+0x61],ch
  40cfb8:	ins    DWORD PTR es:[rdi],dx
  40cfb9:	gs cmp eax,0x756e6722
  40cfbf:	outs   dx,BYTE PTR cs:[esi]
  40cfc2:	outs   dx,DWORD PTR ds:[rsi]
  40cfc3:	ins    DWORD PTR es:[rdi],dx
  40cfc4:	gs imul ebp,DWORD PTR cs:[ebp+0x70],0x79742022
  40cfce:	jo     40d035 <libintl_8_dll_iname+0x3529>
  40cfd0:	cmp    eax,0x6e697722
  40cfd5:	xor    esi,DWORD PTR [rdx]
  40cfd7:	and    ch,BYTE PTR [rdi]
  40cfd9:	or     cl,BYTE PTR ds:[rcx]
  40cfdc:	cmp    al,0x64
  40cfde:	gs jae 40d044 <libintl_8_dll_iname+0x3538>
  40cfe1:	jb     40d04c <libintl_8_dll_iname+0x3540>
  40cfe3:	jo     40d059 <libintl_8_dll_iname+0x354d>
  40cfe5:	imul   ebp,DWORD PTR [rdi+0x6e],0x4d49473e
  40cfec:	push   rax
  40cfed:	cmp    al,0x2f
  40cfef:	fs gs jae 40d056 <libintl_8_dll_iname+0x354a>
  40cff3:	jb     40d05e <libintl_8_dll_iname+0x3552>
  40cff5:	jo     40d06b <libintl_8_dll_iname+0x355f>
  40cff7:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c090a3e
  40cffe:	je     40d072 <libintl_8_dll_iname+0x3566>
  40d000:	jne    40d075 <libintl_8_dll_iname+0x3569>
  40d002:	je     40d04d <libintl_8_dll_iname+0x3541>
  40d004:	outs   dx,BYTE PTR ds:[rsi]
  40d005:	outs   dx,WORD PTR ds:[rsi]
  40d007:	and    BYTE PTR [rax+0x6d],bh
  40d00a:	ins    BYTE PTR es:[rdi],dx
  40d00b:	outs   dx,BYTE PTR ds:[rsi]
  40d00c:	jae    40d04b <libintl_8_dll_iname+0x353f>
  40d00e:	and    dh,BYTE PTR [rbp+0x72]
  40d011:	outs   dx,BYTE PTR ds:[rsi]
  40d012:	cmp    dh,BYTE PTR [rbx+0x63]
  40d015:	push   0x73616d65
  40d01a:	sub    eax,0x7263696d
  40d01f:	outs   dx,DWORD PTR ds:[rsi]
  40d020:	jae    40d091 <libintl_8_dll_iname+0x3585>
  40d022:	data16 je 40d052 <libintl_8_dll_iname+0x3546>
  40d025:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40d028:	cmp    ah,BYTE PTR [rcx+0x73]
  40d02b:	ins    DWORD PTR es:[rdi],dx
  40d02c:	cs jbe 40d062 <libintl_8_dll_iname+0x3556>
  40d02f:	and    bh,BYTE PTR [rsi]
  40d031:	or     cl,BYTE PTR [rcx]
  40d033:	or     DWORD PTR [rbx+rsi*2],edi
  40d036:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  40d03a:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x909090a
  40d042:	cmp    al,0x72
  40d044:	gs jno 40d0bc <libintl_8_dll_iname+0x35b0>
  40d047:	gs jae 40d0be <libintl_8_dll_iname+0x35b2>
  40d04a:	gs fs push rax
  40d04d:	jb     40d0b8 <libintl_8_dll_iname+0x35ac>
  40d04f:	jbe    40d0ba <libintl_8_dll_iname+0x35ae>
  40d051:	ins    BYTE PTR es:[rdi],dx
  40d052:	gs addr32 gs jae 40d095 <libintl_8_dll_iname+0x3589>
  40d057:	or     cl,BYTE PTR [rcx]
  40d059:	or     DWORD PTR [rcx],ecx
  40d05b:	or     DWORD PTR [rdx+rsi*2],edi
  40d05e:	gs jno 40d0d6 <libintl_8_dll_iname+0x35ca>
  40d061:	gs jae 40d0d8 <libintl_8_dll_iname+0x35cc>
  40d064:	gs fs rex.RB js 40d0ce <libintl_8_dll_iname+0x35c2>
  40d069:	movsxd esi,DWORD PTR [rbp+0x74]
  40d06c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
  40d073:	ins    BYTE PTR es:[rdi],dx
  40d074:	and    BYTE PTR [rbp+riz*2+0x76],ch
  40d078:	gs ins BYTE PTR es:[rdi],dx
  40d07a:	cmp    eax,0x49736122
  40d07f:	outs   dx,BYTE PTR ds:[rsi]
  40d080:	jbe    40d0f1 <libintl_8_dll_iname+0x35e5>
  40d082:	imul   esp,DWORD PTR [rbp+0x72],0x22
  40d086:	and    BYTE PTR [rbp+0x69],dh
  40d089:	movsxd esp,DWORD PTR [r11+0x65]
  40d08d:	jae    40d102 <libintl_8_dll_iname+0x35f6>
  40d08f:	cmp    eax,0x6c616622
  40d094:	jae    40d0fb <libintl_8_dll_iname+0x35ef>
  40d096:	and    ch,BYTE PTR [rdi]
  40d098:	or     cl,BYTE PTR ds:[rcx]
  40d09b:	or     DWORD PTR [rcx],ecx
  40d09d:	cmp    al,0x2f
  40d09f:	jb     40d106 <libintl_8_dll_iname+0x35fa>
  40d0a1:	jno    40d118 <libintl_8_dll_iname+0x360c>
  40d0a3:	gs jae 40d11a <libintl_8_dll_iname+0x360e>
  40d0a6:	gs fs push rax
  40d0a9:	jb     40d114 <libintl_8_dll_iname+0x3608>
  40d0ab:	jbe    40d116 <libintl_8_dll_iname+0x360a>
  40d0ad:	ins    BYTE PTR es:[rdi],dx
  40d0ae:	gs addr32 gs jae 40d0f1 <libintl_8_dll_iname+0x35e5>
  40d0b3:	or     cl,BYTE PTR [rcx]
  40d0b5:	or     DWORD PTR [rdi+rbp*1],edi
  40d0b8:	jae    40d11f <libintl_8_dll_iname+0x3613>
  40d0ba:	movsxd esi,DWORD PTR [rbp+0x72]
  40d0bd:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c090a
  40d0c5:	je     40d139 <libintl_8_dll_iname+0x362d>
  40d0c7:	jne    40d13c <libintl_8_dll_iname+0x3630>
  40d0c9:	je     40d114 <libintl_8_dll_iname+0x3608>
  40d0cb:	outs   dx,BYTE PTR ds:[rsi]
  40d0cc:	outs   dx,WORD PTR ds:[rsi]
  40d0ce:	or     cl,BYTE PTR ds:[rcx]
  40d0d1:	cmp    al,0x63
  40d0d3:	outs   dx,DWORD PTR ds:[rsi]
  40d0d4:	ins    DWORD PTR es:[rdi],dx
  40d0d5:	jo     40d138 <libintl_8_dll_iname+0x362c>
  40d0d7:	je     40d142 <libintl_8_dll_iname+0x3636>
  40d0d9:	(bad)  
  40d0da:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
  40d0e2:	ins    BYTE PTR es:[rdi],dx
  40d0e3:	outs   dx,BYTE PTR ds:[rsi]
  40d0e4:	jae    40d123 <libintl_8_dll_iname+0x3617>
  40d0e6:	and    dh,BYTE PTR [rbp+0x72]
  40d0e9:	outs   dx,BYTE PTR ds:[rsi]
  40d0ea:	cmp    dh,BYTE PTR [rbx+0x63]
  40d0ed:	push   0x73616d65
  40d0f2:	sub    eax,0x7263696d
  40d0f7:	outs   dx,DWORD PTR ds:[rsi]
  40d0f8:	jae    40d169 <libintl_8_dll_iname+0x365d>
  40d0fa:	data16 je 40d12a <libintl_8_dll_iname+0x361e>
  40d0fd:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40d100:	cmp    ah,BYTE PTR [rbx+0x6f]
  40d103:	ins    DWORD PTR es:[rdi],dx
  40d104:	jo     40d167 <libintl_8_dll_iname+0x365b>
  40d106:	je     40d171 <libintl_8_dll_iname+0x3665>
  40d108:	(bad)  
  40d109:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
  40d111:	and    bh,BYTE PTR [rsi]
  40d113:	or     cl,BYTE PTR [rcx]
  40d115:	or     DWORD PTR [rcx+riz*2],edi
  40d118:	jo     40d18a <libintl_8_dll_iname+0x367e>
  40d11a:	ins    BYTE PTR es:[rdi],dx
  40d11b:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40d122:	or     cl,BYTE PTR ds:[rcx]
  40d125:	or     DWORD PTR [rcx],ecx
  40d127:	cmp    al,0x73
  40d129:	jne    40d19b <libintl_8_dll_iname+0x368f>
  40d12b:	jo     40d19c <libintl_8_dll_iname+0x3690>
  40d12d:	jb     40d1a3 <libintl_8_dll_iname+0x3697>
  40d12f:	gs fs rex.WRXB push r11
  40d133:	and    BYTE PTR [rcx+0x64],cl
  40d136:	cmp    eax,0x32657b22
  40d13b:	xor    BYTE PTR [rcx],dh
  40d13d:	xor    DWORD PTR [rsi*1+0x35312d37],esi
  40d144:	xor    al,0x36
  40d146:	sub    eax,0x35633334
  40d14b:	sub    eax,0x65663561
  40d150:	sub    eax,0x64383030
  40d155:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
  40d15c:	xor    BYTE PTR [rbp+0x22],bh
  40d15f:	(bad)  
  40d160:	ds cmp al,0x21
  40d163:	sub    eax,0x6956202d
  40d168:	jae    40d1de <libintl_8_dll_iname+0x36d2>
  40d16a:	(bad)  
  40d16b:	and    BYTE PTR [rip+0x90a3e2d],ch        # 94b0f9e <libintl_8_dll_iname+0x90a7492>
  40d171:	or     DWORD PTR [rcx],ecx
  40d173:	cmp    al,0x73
  40d175:	jne    40d1e7 <libintl_8_dll_iname+0x36db>
  40d177:	jo     40d1e8 <libintl_8_dll_iname+0x36dc>
  40d179:	jb     40d1ef <libintl_8_dll_iname+0x36e3>
  40d17b:	gs fs rex.WRXB push r11
  40d17f:	and    BYTE PTR [rcx+0x64],cl
  40d182:	cmp    eax,0x35337b22
  40d187:	xor    DWORD PTR [rbx],esi
  40d189:	cmp    BYTE PTR [rdx+0x39],ah
  40d18c:	(bad)  
  40d18d:	sub    eax,0x36396435
  40d192:	sub    eax,0x64626634
  40d197:	sub    eax,0x64326538
  40d19c:	sub    eax,0x34343261
  40d1a1:	xor    BYTE PTR [rdx],dh
  40d1a3:	xor    dh,BYTE PTR [rip+0x61333966]        # 61740b0f <libintl_8_dll_iname+0x61337003>
  40d1a9:	jge    40d1cd <libintl_8_dll_iname+0x36c1>
  40d1ab:	(bad)  
  40d1ac:	ds cmp al,0x21
  40d1af:	sub    eax,0x6957202d
  40d1b4:	outs   dx,BYTE PTR ds:[rsi]
  40d1b5:	(bad)  
  40d1b6:	and    BYTE PTR [rip+0x90a3e2d],ch        # 94b0fe9 <libintl_8_dll_iname+0x90a74dd>
  40d1bc:	or     DWORD PTR [rcx],ecx
  40d1be:	cmp    al,0x73
  40d1c0:	jne    40d232 <libintl_8_dll_iname+0x3726>
  40d1c2:	jo     40d233 <libintl_8_dll_iname+0x3727>
  40d1c4:	jb     40d23a <libintl_8_dll_iname+0x372e>
  40d1c6:	gs fs rex.WRXB push r11
  40d1ca:	and    BYTE PTR [rcx+0x64],cl
  40d1cd:	cmp    eax,0x61347b22
  40d1d2:	xor    ah,BYTE PTR [rsi+0x32]
  40d1d5:	cmp    BYTE PTR [rbp+0x33],ah
  40d1d8:	sub    eax,0x39623335
  40d1dd:	sub    eax,0x31343434
  40d1e2:	sub    eax,0x63396162
  40d1e7:	sub    eax,0x64393664
  40d1ec:	xor    al,0x61
  40d1ee:	xor    al,0x61
  40d1f0:	ss xor edi,DWORD PTR gs:[rax]
  40d1f4:	jge    40d218 <libintl_8_dll_iname+0x370c>
  40d1f6:	(bad)  
  40d1f7:	ds cmp al,0x21
  40d1fa:	sub    eax,0x6957202d
  40d1ff:	outs   dx,BYTE PTR ds:[rsi]
  40d200:	cmp    BYTE PTR [rax],ah
  40d202:	sub    eax,0x90a3e2d
  40d207:	or     DWORD PTR [rcx],ecx
  40d209:	cmp    al,0x73
  40d20b:	jne    40d27d <libintl_8_dll_iname+0x3771>
  40d20d:	jo     40d27e <libintl_8_dll_iname+0x3772>
  40d20f:	jb     40d285 <libintl_8_dll_iname+0x3779>
  40d211:	gs fs rex.WRXB push r11
  40d215:	and    BYTE PTR [rcx+0x64],cl
  40d218:	cmp    eax,0x66317b22
  40d21d:	ss (bad) 
  40d21f:	movsxd esi,DWORD PTR ss:[rdi]
  40d222:	ss sub eax,0x31653038
  40d228:	sub    eax,0x39333234
  40d22d:	sub    eax,0x62623539
  40d232:	sub    eax,0x30643338
  40d237:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
  40d23e:	cmp    BYTE PTR [rbp+0x22],bh
  40d241:	(bad)  
  40d242:	ds cmp al,0x21
  40d245:	sub    eax,0x6957202d
  40d24a:	outs   dx,BYTE PTR ds:[rsi]
  40d24b:	cmp    BYTE PTR [rsi],ch
  40d24d:	xor    DWORD PTR [rax],esp
  40d24f:	sub    eax,0x90a3e2d
  40d254:	or     DWORD PTR [rcx],ecx
  40d256:	cmp    al,0x73
  40d258:	jne    40d2ca <libintl_8_dll_iname+0x37be>
  40d25a:	jo     40d2cb <libintl_8_dll_iname+0x37bf>
  40d25c:	jb     40d2d2 <libintl_8_dll_iname+0x37c6>
  40d25e:	gs fs rex.WRXB push r11
  40d262:	and    BYTE PTR [rcx+0x64],cl
  40d265:	cmp    eax,0x65387b22
  40d26a:	xor    BYTE PTR [rsi+0x37],ah
  40d26d:	(bad)  
  40d26e:	xor    DWORD PTR [rdx],esi
  40d270:	sub    eax,0x33626662
  40d275:	sub    eax,0x38656634
  40d27a:	sub    eax,0x35613962
  40d27f:	sub    eax,0x64663834
  40d284:	xor    eax,0x35316130
  40d289:	(bad)  
  40d28a:	cmp    DWORD PTR [rcx+0x7d],esp
  40d28d:	and    ch,BYTE PTR [rdi]
  40d28f:	ds cmp al,0x21
  40d292:	sub    eax,0x6957202d
  40d297:	outs   dx,BYTE PTR ds:[rsi]
  40d298:	xor    DWORD PTR [rax],esi
  40d29a:	and    BYTE PTR [rip+0x90a3e2d],ch        # 94b10cd <libintl_8_dll_iname+0x90a75c1>
  40d2a0:	or     DWORD PTR [rdi+rbp*1],edi
  40d2a3:	(bad)  
  40d2a4:	jo     40d316 <libintl_8_dll_iname+0x380a>
  40d2a6:	ins    BYTE PTR es:[rdi],dx
  40d2a7:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40d2ae:	or     cl,BYTE PTR ds:[rcx]
  40d2b1:	cmp    al,0x2f
  40d2b3:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40d2b6:	jo     40d319 <libintl_8_dll_iname+0x380d>
  40d2b8:	je     40d323 <libintl_8_dll_iname+0x3817>
  40d2ba:	(bad)  
  40d2bb:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x90a3e79
  40d2c3:	cmp    al,0x61
  40d2c5:	jae    40d334 <libintl_8_dll_iname+0x3828>
  40d2c7:	jbe    40d2fc <libintl_8_dll_iname+0x37f0>
  40d2c9:	cmp    ah,BYTE PTR [rcx+0x70]
  40d2cc:	jo     40d33a <libintl_8_dll_iname+0x382e>
  40d2ce:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40d2d5:	or     cl,BYTE PTR ds:[rcx]
  40d2d8:	or     DWORD PTR [rcx+riz*2],edi
  40d2db:	jae    40d34a <libintl_8_dll_iname+0x383e>
  40d2dd:	jbe    40d312 <libintl_8_dll_iname+0x3806>
  40d2df:	cmp    dh,BYTE PTR [rdi+0x69]
  40d2e2:	outs   dx,BYTE PTR ds:[rsi]
  40d2e3:	outs   dx,DWORD PTR fs:[rsi]
  40d2e5:	ja     40d35a <libintl_8_dll_iname+0x384e>
  40d2e7:	push   rbx
  40d2e8:	gs je  40d35f <libintl_8_dll_iname+0x3853>
  40d2eb:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
  40d2f2:	ins    BYTE PTR es:[rdi],dx
  40d2f3:	outs   dx,BYTE PTR ds:[rsi]
  40d2f4:	jae    40d333 <libintl_8_dll_iname+0x3827>
  40d2f6:	and    ch,BYTE PTR [rax+0x74]
  40d2f9:	je     40d36b <libintl_8_dll_iname+0x385f>
  40d2fb:	cmp    ch,BYTE PTR [rdi]
  40d2fd:	(bad)  
  40d2fe:	jae    40d363 <libintl_8_dll_iname+0x3857>
  40d300:	push   0x73616d65
  40d305:	cs ins DWORD PTR es:[rdi],dx
  40d307:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  40d30e:	je     40d33e <libintl_8_dll_iname+0x3832>
  40d310:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40d313:	(bad)  
  40d314:	push   rbx
  40d315:	rex.WRB
  40d316:	rex.WB (bad) 
  40d318:	xor    dh,BYTE PTR [rax]
  40d31a:	xor    BYTE PTR [rip+0x6e69572f],dh        # 6eaa2a4f <libintl_8_dll_iname+0x6e698f43>
  40d320:	outs   dx,DWORD PTR fs:[rsi]
  40d322:	ja     40d397 <libintl_8_dll_iname+0x388b>
  40d324:	push   rbx
  40d325:	gs je  40d39c <libintl_8_dll_iname+0x3890>
  40d328:	imul   ebp,DWORD PTR [rsi+0x67],0xa3e2273
  40d32f:	or     DWORD PTR [rcx],ecx
  40d331:	or     DWORD PTR [rsp+riz*2],edi
  40d334:	jo     40d39f <libintl_8_dll_iname+0x3893>
  40d336:	rex.B ja 40d39a <libintl_8_dll_iname+0x388e>
  40d339:	jb     40d3a0 <libintl_8_dll_iname+0x3894>
  40d33b:	ds je  40d3b0 <libintl_8_dll_iname+0x38a4>
  40d33e:	jne    40d3a5 <libintl_8_dll_iname+0x3899>
  40d340:	cmp    al,0x2f
  40d342:	fs jo  40d3ae <libintl_8_dll_iname+0x38a2>
  40d345:	rex.B ja 40d3a9 <libintl_8_dll_iname+0x389d>
  40d348:	jb     40d3af <libintl_8_dll_iname+0x38a3>
  40d34a:	or     cl,BYTE PTR ds:[rcx]
  40d34d:	or     DWORD PTR [rdi+rbp*1],edi
  40d350:	(bad)  
  40d351:	jae    40d3c0 <libintl_8_dll_iname+0x38b4>
  40d353:	jbe    40d388 <libintl_8_dll_iname+0x387c>
  40d355:	cmp    dh,BYTE PTR [rdi+0x69]
  40d358:	outs   dx,BYTE PTR ds:[rsi]
  40d359:	outs   dx,DWORD PTR fs:[rsi]
  40d35b:	ja     40d3d0 <libintl_8_dll_iname+0x38c4>
  40d35d:	push   rbx
  40d35e:	gs je  40d3d5 <libintl_8_dll_iname+0x38c9>
  40d361:	imul   ebp,DWORD PTR [rsi+0x67],0x90a3e73
  40d368:	cmp    al,0x2f
  40d36a:	(bad)  
  40d36b:	jae    40d3da <libintl_8_dll_iname+0x38ce>
  40d36d:	jbe    40d3a2 <libintl_8_dll_iname+0x3896>
  40d36f:	cmp    ah,BYTE PTR [rcx+0x70]
  40d372:	jo     40d3e0 <libintl_8_dll_iname+0x38d4>
  40d374:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40d37b:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  40d37f:	(bad)  
  40d380:	jae    40d3f5 <libintl_8_dll_iname+0x38e9>
  40d382:	gs ins DWORD PTR es:[rdi],dx
  40d384:	(bad)  
  40d385:	ins    BYTE PTR es:[rdi],dx
  40d386:	jns    40d3c6 <libintl_8_dll_iname+0x38ba>
  40d388:	or     al,BYTE PTR [rax]
  40d38a:	add    BYTE PTR [rax],al
  40d38c:	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu_debuglink:

000000000040e000 <.gnu_debuglink>:
  40e000:	ja     40e067 <libintl_8_dll_iname+0x455b>
  40e002:	(bad)  
  40e003:	sub    eax,0x776f7262
  40e008:	jae    40e06f <libintl_8_dll_iname+0x4563>
  40e00a:	jb     40e03a <libintl_8_dll_iname+0x452e>
  40e00c:	gs js  40e074 <libintl_8_dll_iname+0x4568>
  40e00f:	cs fs gs (bad) 
  40e013:	jne    40e07c <libintl_8_dll_iname+0x4570>
  40e015:	add    BYTE PTR [rax],al
  40e017:	add    ch,ah
  40e019:	mov    ah,0x6c
  40e01b:	rex.B
