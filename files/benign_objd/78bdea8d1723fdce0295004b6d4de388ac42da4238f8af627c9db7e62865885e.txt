
78bdea8d1723fdce0295004b6d4de388ac42da4238f8af627c9db7e62865885e.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x8],rbx
   14000100d:	xor    ebx,ebx
   14000100f:	lea    rax,[rdx-0x1]
   140001013:	mov    r10d,0x7ffffffe
   140001019:	mov    r9d,ebx
   14000101c:	cmp    rax,r10
   14000101f:	mov    r11d,0x80070057
   140001025:	cmova  r9d,r11d
   140001029:	test   r9d,r9d
   14000102c:	js     0x14000106d
   14000102e:	mov    r9d,ebx
   140001031:	test   rdx,rdx
   140001034:	je     0x140001061
   140001036:	sub    r10,rdx
   140001039:	sub    r8,rcx
   14000103c:	lea    rax,[r10+rdx*1]
   140001040:	test   rax,rax
   140001043:	je     0x14000105c
   140001045:	movzx  eax,WORD PTR [r8+rcx*1]
   14000104a:	test   ax,ax
   14000104d:	je     0x14000105c
   14000104f:	mov    WORD PTR [rcx],ax
   140001052:	add    rcx,0x2
   140001056:	sub    rdx,0x1
   14000105a:	jne    0x14000103c
   14000105c:	test   rdx,rdx
   14000105f:	jne    0x140001072
   140001061:	sub    rcx,0x2
   140001065:	mov    r9d,0x8007007a
   14000106b:	jmp    0x140001072
   14000106d:	test   rdx,rdx
   140001070:	je     0x140001075
   140001072:	mov    WORD PTR [rcx],bx
   140001075:	mov    rbx,QWORD PTR [rsp+0x8]
   14000107a:	mov    eax,r9d
   14000107d:	ret    
   14000107e:	int3   
   14000107f:	int3   
   140001080:	int3   
   140001081:	int3   
   140001082:	int3   
   140001083:	int3   
   140001084:	mov    QWORD PTR [rsp+0x18],r8
   140001089:	mov    QWORD PTR [rsp+0x20],r9
   14000108e:	push   rbx
   14000108f:	push   rbp
   140001090:	push   rsi
   140001091:	push   rdi
   140001092:	sub    rsp,0x28
   140001096:	xor    ebp,ebp
   140001098:	lea    rax,[rdx-0x1]
   14000109c:	cmp    rax,0x7ffffffe
   1400010a2:	mov    rsi,rcx
   1400010a5:	mov    edi,ebp
   1400010a7:	mov    ecx,0x80070057
   1400010ac:	cmova  edi,ecx
   1400010af:	test   edi,edi
   1400010b1:	js     0x1400010e8
   1400010b3:	lea    rbx,[rdx-0x1]
   1400010b7:	mov    rcx,rsi
   1400010ba:	mov    rdx,rbx
   1400010bd:	lea    r9,[rsp+0x68]
   1400010c2:	mov    edi,ebp
   1400010c4:	call   QWORD PTR [rip+0x810e]        # 0x1400091d8
   1400010ca:	test   eax,eax
   1400010cc:	js     0x1400010dd
   1400010ce:	cdqe   
   1400010d0:	cmp    rax,rbx
   1400010d3:	ja     0x1400010dd
   1400010d5:	jne    0x1400010f0
   1400010d7:	mov    WORD PTR [rsi+rbx*2],bp
   1400010db:	jmp    0x1400010f0
   1400010dd:	mov    WORD PTR [rsi+rbx*2],bp
   1400010e1:	mov    edi,0x8007007a
   1400010e6:	jmp    0x1400010f0
   1400010e8:	test   rdx,rdx
   1400010eb:	je     0x1400010f0
   1400010ed:	mov    WORD PTR [rsi],bp
   1400010f0:	mov    eax,edi
   1400010f2:	add    rsp,0x28
   1400010f6:	pop    rdi
   1400010f7:	pop    rsi
   1400010f8:	pop    rbp
   1400010f9:	pop    rbx
   1400010fa:	ret    
   1400010fb:	int3   
   1400010fc:	int3   
   1400010fd:	int3   
   1400010fe:	int3   
   1400010ff:	int3   
   140001100:	int3   
   140001101:	int3   
   140001102:	int3   
   140001103:	int3   
   140001104:	sub    rsp,0x28
   140001108:	mov    ecx,0x2774
   14000110d:	call   0x14000263c
   140001112:	or     ecx,0xffffffff
   140001115:	call   QWORD PTR [rip+0x80ad]        # 0x1400091c8
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	int3   
   140001121:	int3   
   140001122:	int3   
   140001123:	int3   
   140001124:	mov    rax,rsp
   140001127:	mov    QWORD PTR [rax+0x8],rbx
   14000112b:	mov    QWORD PTR [rax+0x10],rsi
   14000112f:	push   rdi
   140001130:	sub    rsp,0x40
   140001134:	xor    esi,esi
   140001136:	mov    rdi,rdx
   140001139:	mov    QWORD PTR [rax-0x18],rsi
   14000113d:	xor    r9d,r9d
   140001140:	mov    DWORD PTR [rax-0x20],esi
   140001143:	xor    edx,edx
   140001145:	mov    QWORD PTR [rax+0x18],rsi
   140001149:	mov    ecx,0x900
   14000114e:	mov    QWORD PTR [rax+0x20],rsi
   140001152:	lea    rax,[rax+0x18]
   140001156:	mov    r8d,0x272c
   14000115c:	mov    QWORD PTR [rsp+0x20],rax
   140001161:	mov    bl,sil
   140001164:	call   QWORD PTR [rip+0x7f6e]        # 0x1400090d8
   14000116a:	test   eax,eax
   14000116c:	je     0x140001235
   140001172:	mov    QWORD PTR [rsp+0x30],rsi
   140001177:	lea    rax,[rsp+0x68]
   14000117c:	mov    DWORD PTR [rsp+0x28],esi
   140001180:	xor    r9d,r9d
   140001183:	xor    edx,edx
   140001185:	mov    QWORD PTR [rsp+0x20],rax
   14000118a:	mov    ecx,0x900
   14000118f:	mov    r8d,0x272d
   140001195:	call   QWORD PTR [rip+0x7f3d]        # 0x1400090d8
   14000119b:	test   eax,eax
   14000119d:	je     0x140001235
   1400011a3:	mov    rdx,QWORD PTR [rsp+0x60]
   1400011a8:	or     rcx,0xffffffffffffffff
   1400011ac:	mov    rax,rcx
   1400011af:	inc    rax
   1400011b2:	cmp    WORD PTR [rdx+rax*2],si
   1400011b6:	jne    0x1400011af
   1400011b8:	test   rax,rax
   1400011bb:	je     0x1400011e7
   1400011bd:	mov    rax,rcx
   1400011c0:	inc    rax
   1400011c3:	cmp    WORD PTR [rdx+rax*2],si
   1400011c7:	jne    0x1400011c0
   1400011c9:	lea    rax,[rdx+rax*2]
   1400011cd:	lea    rax,[rax-0x2]
   1400011d1:	cmp    WORD PTR [rax],0xd
   1400011d5:	je     0x1400011dd
   1400011d7:	cmp    WORD PTR [rax],0xa
   1400011db:	jne    0x1400011e2
   1400011dd:	mov    WORD PTR [rax],si
   1400011e0:	jmp    0x1400011cd
   1400011e2:	mov    rdx,QWORD PTR [rsp+0x60]
   1400011e7:	mov    r8,QWORD PTR [rsp+0x68]
   1400011ec:	mov    rax,rcx
   1400011ef:	inc    rax
   1400011f2:	cmp    WORD PTR [r8+rax*2],si
   1400011f7:	jne    0x1400011ef
   1400011f9:	test   rax,rax
   1400011fc:	je     0x14000122b
   1400011fe:	inc    rcx
   140001201:	cmp    WORD PTR [r8+rcx*2],si
   140001206:	jne    0x1400011fe
   140001208:	lea    rax,[r8+rcx*2]
   14000120c:	lea    rax,[rax-0x2]
   140001210:	cmp    WORD PTR [rax],0xd
   140001214:	je     0x14000121c
   140001216:	cmp    WORD PTR [rax],0xa
   14000121a:	jne    0x140001221
   14000121c:	mov    WORD PTR [rax],si
   14000121f:	jmp    0x14000120c
   140001221:	mov    rdx,QWORD PTR [rsp+0x60]
   140001226:	mov    r8,QWORD PTR [rsp+0x68]
   14000122b:	mov    r9,rdi
   14000122e:	call   0x1400022b8
   140001233:	mov    bl,al
   140001235:	mov    rcx,QWORD PTR [rsp+0x60]
   14000123a:	test   rcx,rcx
   14000123d:	je     0x140001245
   14000123f:	call   QWORD PTR [rip+0x7de3]        # 0x140009028
   140001245:	mov    rcx,QWORD PTR [rsp+0x68]
   14000124a:	test   rcx,rcx
   14000124d:	je     0x140001255
   14000124f:	call   QWORD PTR [rip+0x7dd3]        # 0x140009028
   140001255:	mov    rsi,QWORD PTR [rsp+0x58]
   14000125a:	mov    al,bl
   14000125c:	mov    rbx,QWORD PTR [rsp+0x50]
   140001261:	add    rsp,0x40
   140001265:	pop    rdi
   140001266:	ret    
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	mov    rax,QWORD PTR [rcx]
   140001273:	mov    r8,QWORD PTR [rdx]
   140001276:	sub    r8,rax
   140001279:	movzx  ecx,WORD PTR [rax]
   14000127c:	cmp    cx,WORD PTR [rax+r8*1]
   140001281:	jne    0x14000128f
   140001283:	add    rax,0x2
   140001287:	test   cx,cx
   14000128a:	jne    0x140001279
   14000128c:	xor    eax,eax
   14000128e:	ret    
   14000128f:	sbb    eax,eax
   140001291:	or     eax,0x1
   140001294:	ret    
   140001295:	int3   
   140001296:	int3   
   140001297:	int3   
   140001298:	int3   
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	rex push rbp
   14000129e:	push   rbx
   14000129f:	push   rsi
   1400012a0:	push   rdi
   1400012a1:	push   r12
   1400012a3:	push   r13
   1400012a5:	push   r14
   1400012a7:	push   r15
   1400012a9:	lea    rbp,[rsp-0x1f]
   1400012ae:	sub    rsp,0x98
   1400012b5:	mov    rax,QWORD PTR [rip+0xad5c]        # 0x14000c018
   1400012bc:	xor    rax,rsp
   1400012bf:	mov    QWORD PTR [rbp+0x7],rax
   1400012c3:	xor    r13d,r13d
   1400012c6:	mov    QWORD PTR [rbp-0x21],r9
   1400012ca:	mov    QWORD PTR [rsp+0x30],r13
   1400012cf:	xor    r9d,r9d
   1400012d2:	mov    QWORD PTR [rbp-0x29],r8
   1400012d6:	mov    edi,0x80004005
   1400012db:	mov    QWORD PTR [rbp-0x19],rdx
   1400012df:	xor    r8d,r8d
   1400012e2:	mov    DWORD PTR [rsp+0x28],0x80
   1400012ea:	mov    edx,0x80000000
   1400012ef:	mov    DWORD PTR [rsp+0x20],0x3
   1400012f7:	mov    r14d,r13d
   1400012fa:	mov    r12d,r13d
   1400012fd:	mov    DWORD PTR [rbp-0x35],r13d
   140001301:	mov    r15d,r13d
   140001304:	call   QWORD PTR [rip+0x7cf6]        # 0x140009000
   14000130a:	mov    rbx,rax
   14000130d:	or     rax,0xffffffffffffffff
   140001311:	cmp    rbx,rax
   140001314:	jne    0x140001325
   140001316:	mov    ecx,0x2714
   14000131b:	call   0x14000263c
   140001320:	jmp    0x14000164e
   140001325:	lea    rdx,[rbp-0x2d]
   140001329:	mov    rcx,rbx
   14000132c:	call   QWORD PTR [rip+0x7dbe]        # 0x1400090f0
   140001332:	mov    esi,eax
   140001334:	cmp    DWORD PTR [rbp-0x2d],r13d
   140001338:	je     0x140001344
   14000133a:	mov    ecx,0x2716
   14000133f:	jmp    0x140001617
   140001344:	cmp    eax,0x2
   140001347:	jae    0x140001353
   140001349:	mov    ecx,0x2715
   14000134e:	jmp    0x140001617
   140001353:	lea    r9,[rbp-0x39]
   140001357:	mov    QWORD PTR [rsp+0x20],r13
   14000135c:	mov    r8d,0x2
   140001362:	lea    rdx,[rbp-0x35]
   140001366:	mov    rcx,rbx
   140001369:	call   QWORD PTR [rip+0x7cf1]        # 0x140009060
   14000136f:	test   eax,eax
   140001371:	je     0x1400015fe
   140001377:	cmp    DWORD PTR [rbp-0x39],0x2
   14000137b:	jne    0x1400015fe
   140001381:	cmp    DWORD PTR [rbp-0x35],0xfeff
   140001388:	jne    0x1400015fe
   14000138e:	add    esi,0xfffffffe
   140001391:	mov    eax,0x2
   140001396:	mov    r13d,esi
   140001399:	shr    r13d,1
   14000139c:	lea    ecx,[r13+0x1]
   1400013a0:	mul    rcx
   1400013a3:	mov    rcx,0xffffffffffffffff
   1400013aa:	cmovo  rax,rcx
   1400013ae:	mov    rcx,rax
   1400013b1:	call   0x140008340
   1400013b6:	mov    r14,rax
   1400013b9:	xor    eax,eax
   1400013bb:	test   r14,r14
   1400013be:	jne    0x1400013d7
   1400013c0:	mov    ecx,0x2716
   1400013c5:	call   0x14000263c
   1400013ca:	xor    r13d,r13d
   1400013cd:	mov    edi,0x8007000e
   1400013d2:	jmp    0x14000161c
   1400013d7:	lea    r9,[rbp-0x39]
   1400013db:	mov    QWORD PTR [rsp+0x20],rax
   1400013e0:	mov    r8d,esi
   1400013e3:	mov    rdx,r14
   1400013e6:	mov    rcx,rbx
   1400013e9:	call   QWORD PTR [rip+0x7c71]        # 0x140009060
   1400013ef:	test   eax,eax
   1400013f1:	je     0x1400015ee
   1400013f7:	cmp    DWORD PTR [rbp-0x39],esi
   1400013fa:	jne    0x1400015ee
   140001400:	mov    rcx,rbx
   140001403:	call   QWORD PTR [rip+0x7c17]        # 0x140009020
   140001409:	xor    ebx,ebx
   14000140b:	lea    eax,[r13-0x1]
   14000140f:	mov    WORD PTR [r14+r13*2],bx
   140001414:	mov    rcx,r14
   140001417:	lea    rsi,[r14+rax*2]
   14000141b:	lea    r13d,[rbx+0x1]
   14000141f:	mov    DWORD PTR [rbp-0x31],r13d
   140001423:	cmp    r14,rsi
   140001426:	jae    0x140001450
   140001428:	lea    edi,[rbx+0xa]
   14000142b:	mov    edx,edi
   14000142d:	call   QWORD PTR [rip+0x7dd5]        # 0x140009208
   140001433:	mov    rcx,rax
   140001436:	test   rax,rax
   140001439:	je     0x140001447
   14000143b:	inc    r13d
   14000143e:	add    rcx,0x2
   140001442:	cmp    rcx,rsi
   140001445:	jb     0x14000142b
   140001447:	mov    DWORD PTR [rbp-0x31],r13d
   14000144b:	mov    edi,0x80004005
   140001450:	mov    ecx,r13d
   140001453:	mov    eax,0x8
   140001458:	mul    rcx
   14000145b:	mov    rcx,0xffffffffffffffff
   140001462:	cmovo  rax,rcx
   140001466:	mov    rcx,rax
   140001469:	call   0x140008340
   14000146e:	xor    edx,edx
   140001470:	mov    r12,rax
   140001473:	test   rax,rax
   140001476:	jne    0x14000148f
   140001478:	mov    ecx,0x2716
   14000147d:	call   0x14000263c
   140001482:	xor    r13d,r13d
   140001485:	mov    edi,0x8007000e
   14000148a:	jmp    0x14000162e
   14000148f:	mov    rbx,r14
   140001492:	cmp    r14,rsi
   140001495:	jae    0x1400015ea
   14000149b:	cmp    WORD PTR [rbx],dx
   14000149e:	je     0x1400015ba
   1400014a4:	cmp    r15d,r13d
   1400014a7:	jae    0x1400015ba
   1400014ad:	movzx  ecx,WORD PTR [rbx]
   1400014b0:	test   cx,cx
   1400014b3:	je     0x1400014dc
   1400014b5:	call   QWORD PTR [rip+0x7d15]        # 0x1400091d0
   1400014bb:	xor    edx,edx
   1400014bd:	test   eax,eax
   1400014bf:	jne    0x1400014d0
   1400014c1:	movzx  ecx,WORD PTR [rbx]
   1400014c4:	call   QWORD PTR [rip+0x7d2e]        # 0x1400091f8
   1400014ca:	xor    edx,edx
   1400014cc:	test   eax,eax
   1400014ce:	je     0x1400014dc
   1400014d0:	mov    WORD PTR [rbx],dx
   1400014d3:	add    rbx,0x2
   1400014d7:	cmp    rbx,rsi
   1400014da:	jb     0x1400014ad
   1400014dc:	mov    r13d,r15d
   1400014df:	mov    QWORD PTR [r12+r13*8],rbx
   1400014e3:	cmp    WORD PTR [rbx],dx
   1400014e6:	je     0x14000153d
   1400014e8:	cmp    rbx,rsi
   1400014eb:	jae    0x14000153d
   1400014ed:	jmp    0x1400014f9
   1400014ef:	cmp    rbx,rsi
   1400014f2:	jae    0x14000153d
   1400014f4:	cmp    WORD PTR [rbx],cx
   1400014f7:	je     0x14000150c
   1400014f9:	add    rbx,0x2
   1400014fd:	movzx  ecx,WORD PTR [rbx]
   140001500:	call   QWORD PTR [rip+0x7cf2]        # 0x1400091f8
   140001506:	xor    ecx,ecx
   140001508:	test   eax,eax
   14000150a:	je     0x1400014ef
   14000150c:	cmp    rbx,rsi
   14000150f:	jae    0x14000153d
   140001511:	mov    eax,0xa
   140001516:	cmp    WORD PTR [rbx],cx
   140001519:	je     0x14000152c
   14000151b:	cmp    WORD PTR [rbx],ax
   14000151e:	je     0x14000152c
   140001520:	mov    WORD PTR [rbx],cx
   140001523:	add    rbx,0x2
   140001527:	cmp    rbx,rsi
   14000152a:	jb     0x140001516
   14000152c:	cmp    rbx,rsi
   14000152f:	jae    0x14000153d
   140001531:	cmp    WORD PTR [rbx],cx
   140001534:	je     0x14000153d
   140001536:	mov    WORD PTR [rbx],cx
   140001539:	add    rbx,0x2
   14000153d:	mov    rax,QWORD PTR [r12+r13*8]
   140001541:	xor    r13d,r13d
   140001544:	test   rax,rax
   140001547:	je     0x140001578
   140001549:	mov    edx,0x80
   14000154e:	mov    ecx,edx
   140001550:	cmp    WORD PTR [rax],r13w
   140001554:	je     0x140001560
   140001556:	add    rax,0x2
   14000155a:	sub    rcx,0x1
   14000155e:	jne    0x140001550
   140001560:	test   rcx,rcx
   140001563:	je     0x140001588
   140001565:	mov    rax,rdx
   140001568:	sub    rax,rcx
   14000156b:	cmp    rax,rdx
   14000156e:	jae    0x140001588
   140001570:	test   rax,rax
   140001573:	je     0x140001578
   140001575:	inc    r15d
   140001578:	cmp    rbx,rsi
   14000157b:	jae    0x1400015bd
   14000157d:	mov    r13d,DWORD PTR [rbp-0x31]
   140001581:	xor    edx,edx
   140001583:	jmp    0x14000149b
   140001588:	mov    r9d,0x7f
   14000158e:	lea    r8,[rip+0x8237]        # 0x1400097cc
   140001595:	lea    rcx,[rbp-0x11]
   140001599:	lea    edx,[r9-0x75]
   14000159d:	call   0x140001084
   1400015a2:	test   eax,eax
   1400015a4:	jne    0x14000162e
   1400015aa:	mov    ecx,0x271e
   1400015af:	lea    rdx,[rbp-0x11]
   1400015b3:	call   0x14000263c
   1400015b8:	jmp    0x14000162e
   1400015ba:	xor    r13d,r13d
   1400015bd:	mov    r9d,0x2dc6c0
   1400015c3:	cmp    r15d,r9d
   1400015c6:	jbe    0x1400015e8
   1400015c8:	lea    r8,[rip+0x81fd]        # 0x1400097cc
   1400015cf:	mov    edx,0xa
   1400015d4:	lea    rcx,[rbp-0x11]
   1400015d8:	call   0x140001084
   1400015dd:	test   eax,eax
   1400015df:	jne    0x14000162e
   1400015e1:	mov    ecx,0x271f
   1400015e6:	jmp    0x1400015af
   1400015e8:	xor    edx,edx
   1400015ea:	mov    edi,edx
   1400015ec:	jmp    0x140001651
   1400015ee:	call   QWORD PTR [rip+0x7a14]        # 0x140009008
   1400015f4:	xor    r13d,r13d
   1400015f7:	mov    ecx,0x271d
   1400015fc:	jmp    0x140001609
   1400015fe:	call   QWORD PTR [rip+0x7a04]        # 0x140009008
   140001604:	mov    ecx,0x2719
   140001609:	movzx  edi,ax
   14000160c:	or     edi,0x80070000
   140001612:	test   eax,eax
   140001614:	cmovle edi,eax
   140001617:	call   0x14000263c
   14000161c:	test   rbx,rbx
   14000161f:	je     0x14000162a
   140001621:	mov    rcx,rbx
   140001624:	call   QWORD PTR [rip+0x79f6]        # 0x140009020
   14000162a:	test   edi,edi
   14000162c:	jns    0x140001651
   14000162e:	test   r14,r14
   140001631:	je     0x14000163e
   140001633:	mov    rcx,r14
   140001636:	call   0x1400083ec
   14000163b:	mov    r14,r13
   14000163e:	test   r12,r12
   140001641:	je     0x14000164e
   140001643:	mov    rcx,r12
   140001646:	call   0x1400083ec
   14000164b:	mov    r12,r13
   14000164e:	mov    r15d,r13d
   140001651:	mov    rax,QWORD PTR [rbp-0x19]
   140001655:	mov    QWORD PTR [rax],r14
   140001658:	mov    rax,QWORD PTR [rbp-0x29]
   14000165c:	mov    QWORD PTR [rax],r12
   14000165f:	mov    rax,QWORD PTR [rbp-0x21]
   140001663:	mov    DWORD PTR [rax],r15d
   140001666:	mov    eax,edi
   140001668:	mov    rcx,QWORD PTR [rbp+0x7]
   14000166c:	xor    rcx,rsp
   14000166f:	call   0x140008740
   140001674:	add    rsp,0x98
   14000167b:	pop    r15
   14000167d:	pop    r14
   14000167f:	pop    r13
   140001681:	pop    r12
   140001683:	pop    rdi
   140001684:	pop    rsi
   140001685:	pop    rbx
   140001686:	pop    rbp
   140001687:	ret    
   140001688:	int3   
   140001689:	int3   
   14000168a:	int3   
   14000168b:	int3   
   14000168c:	int3   
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	mov    rax,rsp
   140001693:	mov    QWORD PTR [rax+0x8],rbx
   140001697:	mov    QWORD PTR [rax+0x10],rbp
   14000169b:	mov    QWORD PTR [rax+0x18],rsi
   14000169f:	mov    QWORD PTR [rax+0x20],rdi
   1400016a3:	push   r12
   1400016a5:	push   r14
   1400016a7:	push   r15
   1400016a9:	sub    rsp,0x20
   1400016ad:	xor    r12d,r12d
   1400016b0:	lea    r9,[rip+0xfffffffffffffbb9]        # 0x140001270
   1400016b7:	mov    rsi,rdx
   1400016ba:	mov    r15,rcx
   1400016bd:	mov    edx,DWORD PTR [rdx]
   1400016bf:	mov    ebx,r12d
   1400016c2:	lea    r8d,[r12+0x8]
   1400016c7:	call   QWORD PTR [rip+0x7b1b]        # 0x1400091e8
   1400016cd:	lea    edi,[r12+0x1]
   1400016d2:	cmp    DWORD PTR [rsi],edi
   1400016d4:	jbe    0x14000173c
   1400016d6:	lea    r14d,[r12+0x2]
   1400016db:	mov    ebp,r12d
   1400016de:	mov    eax,edi
   1400016e0:	lea    r9,[r15+rax*8]
   1400016e4:	mov    eax,ebp
   1400016e6:	mov    r8,QWORD PTR [r9]
   1400016e9:	mov    rcx,QWORD PTR [r15+rax*8]
   1400016ed:	sub    r8,rcx
   1400016f0:	movzx  eax,WORD PTR [rcx]
   1400016f3:	movzx  edx,WORD PTR [rcx+r8*1]
   1400016f8:	sub    eax,edx
   1400016fa:	jne    0x140001704
   1400016fc:	add    rcx,0x2
   140001700:	test   edx,edx
   140001702:	jne    0x1400016f0
   140001704:	test   eax,eax
   140001706:	jne    0x140001731
   140001708:	mov    r8d,DWORD PTR [rsi]
   14000170b:	mov    rcx,r9
   14000170e:	sub    r8d,edi
   140001711:	mov    eax,r14d
   140001714:	dec    r8d
   140001717:	shl    r8,0x3
   14000171b:	lea    rdx,[r15+rax*8]
   14000171f:	call   QWORD PTR [rip+0x7acb]        # 0x1400091f0
   140001725:	or     edx,0xffffffff
   140001728:	add    DWORD PTR [rsi],edx
   14000172a:	add    edi,edx
   14000172c:	add    ebp,edx
   14000172e:	add    r14d,edx
   140001731:	inc    edi
   140001733:	inc    ebp
   140001735:	inc    r14d
   140001738:	cmp    edi,DWORD PTR [rsi]
   14000173a:	jb     0x1400016de
   14000173c:	mov    edx,r12d
   14000173f:	cmp    DWORD PTR [rsi],r12d
   140001742:	jbe    0x1400017b5
   140001744:	mov    r10d,0x80070057
   14000174a:	mov    eax,edx
   14000174c:	mov    r8,QWORD PTR [r15+rax*8]
   140001750:	test   r8,r8
   140001753:	je     0x140001779
   140001755:	mov    ecx,0x80
   14000175a:	mov    rax,r8
   14000175d:	mov    ebx,r12d
   140001760:	cmp    WORD PTR [rax],r12w
   140001764:	je     0x140001770
   140001766:	add    rax,0x2
   14000176a:	sub    rcx,0x1
   14000176e:	jne    0x140001760
   140001770:	test   rcx,rcx
   140001773:	cmove  ebx,r10d
   140001777:	jmp    0x14000177c
   140001779:	mov    ebx,r10d
   14000177c:	test   ebx,ebx
   14000177e:	js     0x1400017b5
   140001780:	test   edx,edx
   140001782:	je     0x1400017af
   140001784:	lea    eax,[rdx-0x1]
   140001787:	mov    rax,QWORD PTR [r15+rax*8]
   14000178b:	sub    r8,rax
   14000178e:	movzx  r9d,WORD PTR [rax]
   140001792:	movzx  ecx,WORD PTR [rax+r8*1]
   140001797:	sub    r9d,ecx
   14000179a:	jne    0x1400017a4
   14000179c:	add    rax,0x2
   1400017a0:	test   ecx,ecx
   1400017a2:	jne    0x14000178e
   1400017a4:	test   r9d,r9d
   1400017a7:	mov    eax,0x80004005
   1400017ac:	cmovns ebx,eax
   1400017af:	inc    edx
   1400017b1:	cmp    edx,DWORD PTR [rsi]
   1400017b3:	jb     0x14000174a
   1400017b5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400017ba:	mov    eax,ebx
   1400017bc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400017c1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400017c6:	mov    rdi,QWORD PTR [rsp+0x58]
   1400017cb:	add    rsp,0x20
   1400017cf:	pop    r15
   1400017d1:	pop    r14
   1400017d3:	pop    r12
   1400017d5:	ret    
   1400017d6:	int3   
   1400017d7:	int3   
   1400017d8:	int3   
   1400017d9:	int3   
   1400017da:	int3   
   1400017db:	int3   
   1400017dc:	rex push rbp
   1400017de:	push   rbx
   1400017df:	push   rsi
   1400017e0:	push   rdi
   1400017e1:	push   r12
   1400017e3:	push   r14
   1400017e5:	push   r15
   1400017e7:	lea    rbp,[rsp-0x1f]
   1400017ec:	sub    rsp,0xe0
   1400017f3:	mov    rax,QWORD PTR [rip+0xa81e]        # 0x14000c018
   1400017fa:	xor    rax,rsp
   1400017fd:	mov    QWORD PTR [rbp+0xf],rax
   140001801:	xor    r15d,r15d
   140001804:	mov    DWORD PTR [rbp-0x79],r9d
   140001808:	mov    r14,r8
   14000180b:	mov    rsi,rdx
   14000180e:	mov    rdi,rcx
   140001811:	mov    ebx,r15d
   140001814:	mov    DWORD PTR [rsp+0x40],r15d
   140001819:	lea    r12d,[r15+0x4]
   14000181d:	cmp    BYTE PTR [rbp+0x7f],r15b
   140001821:	jne    0x1400018cf
   140001827:	lea    r9,[rbp-0x7d]
   14000182b:	mov    QWORD PTR [rsp+0x20],r15
   140001830:	lea    r8d,[r15+0x8]
   140001834:	lea    rdx,[rip+0x7f9d]        # 0x1400097d8
   14000183b:	call   QWORD PTR [rip+0x78a7]        # 0x1400090e8
   140001841:	mov    ecx,eax
   140001843:	test   eax,eax
   140001845:	je     0x140001ada
   14000184b:	xor    eax,eax
   14000184d:	mov    WORD PTR [rbp-0x71],r15w
   140001852:	mov    QWORD PTR [rbp-0x6f],rax
   140001856:	lea    r8d,[r15+0xd]
   14000185a:	mov    QWORD PTR [rbp-0x67],rax
   14000185e:	lea    rdx,[rbp-0x71]
   140001862:	mov    QWORD PTR [rbp-0x5f],rax
   140001866:	lea    rax,[rbp-0x71]
   14000186a:	sub    rsi,rax
   14000186d:	lea    rax,[r8+0x7ffffff1]
   140001874:	test   rax,rax
   140001877:	je     0x14000188f
   140001879:	movzx  eax,WORD PTR [rsi+rdx*1]
   14000187d:	test   ax,ax
   140001880:	je     0x14000188f
   140001882:	mov    WORD PTR [rdx],ax
   140001885:	add    rdx,0x2
   140001889:	sub    r8,0x1
   14000188d:	jne    0x14000186d
   14000188f:	test   r8,r8
   140001892:	jne    0x14000189d
   140001894:	sub    rdx,0x2
   140001898:	mov    ebx,0x8007007a
   14000189d:	mov    WORD PTR [rdx],r15w
   1400018a1:	test   ebx,ebx
   1400018a3:	js     0x1400018c3
   1400018a5:	lea    r9,[rbp-0x7d]
   1400018a9:	mov    QWORD PTR [rsp+0x20],r15
   1400018ae:	mov    r8d,0x18
   1400018b4:	lea    rdx,[rbp-0x71]
   1400018b8:	mov    rcx,rdi
   1400018bb:	call   QWORD PTR [rip+0x7827]        # 0x1400090e8
   1400018c1:	mov    ecx,eax
   1400018c3:	test   ecx,ecx
   1400018c5:	je     0x140001ad2
   1400018cb:	test   ebx,ebx
   1400018cd:	js     0x1400018ed
   1400018cf:	lea    r9,[rbp-0x7d]
   1400018d3:	mov    QWORD PTR [rsp+0x20],r15
   1400018d8:	mov    r8d,r12d
   1400018db:	lea    rdx,[rip+0x7f02]        # 0x1400097e4
   1400018e2:	mov    rcx,rdi
   1400018e5:	call   QWORD PTR [rip+0x77fd]        # 0x1400090e8
   1400018eb:	mov    ecx,eax
   1400018ed:	test   ecx,ecx
   1400018ef:	je     0x140001ad2
   1400018f5:	test   ebx,ebx
   1400018f7:	js     0x14000191d
   1400018f9:	lea    r9,[rbp-0x7d]
   1400018fd:	mov    DWORD PTR [rsp+0x40],0x1
   140001905:	mov    r8d,r12d
   140001908:	mov    QWORD PTR [rsp+0x20],r15
   14000190d:	lea    rdx,[rsp+0x40]
   140001912:	mov    rcx,rdi
   140001915:	call   QWORD PTR [rip+0x77cd]        # 0x1400090e8
   14000191b:	mov    ecx,eax
   14000191d:	test   ecx,ecx
   14000191f:	je     0x140001ad2
   140001925:	mov    esi,0x40
   14000192a:	test   ebx,ebx
   14000192c:	js     0x14000198e
   14000192e:	xor    edx,edx
   140001930:	mov    BYTE PTR [rbp-0x51],r15b
   140001934:	lea    r8d,[rsi+0x17]
   140001938:	lea    rcx,[rbp-0x50]
   14000193c:	call   0x140008e9e
   140001941:	test   r14,r14
   140001944:	je     0x140001970
   140001946:	mov    QWORD PTR [rsp+0x38],r15
   14000194b:	lea    rax,[rbp-0x51]
   14000194f:	mov    QWORD PTR [rsp+0x30],r15
   140001954:	mov    r9d,esi
   140001957:	mov    DWORD PTR [rsp+0x28],esi
   14000195b:	mov    r8,r14
   14000195e:	mov    edx,0x400
   140001963:	mov    QWORD PTR [rsp+0x20],rax
   140001968:	xor    ecx,ecx
   14000196a:	call   QWORD PTR [rip+0x7770]        # 0x1400090e0
   140001970:	lea    r9,[rbp-0x7d]
   140001974:	mov    QWORD PTR [rsp+0x20],r15
   140001979:	mov    r8d,0x58
   14000197f:	lea    rdx,[rbp-0x51]
   140001983:	mov    rcx,rdi
   140001986:	call   QWORD PTR [rip+0x775c]        # 0x1400090e8
   14000198c:	mov    ecx,eax
   14000198e:	test   ecx,ecx
   140001990:	je     0x140001ad2
   140001996:	test   ebx,ebx
   140001998:	js     0x1400019be
   14000199a:	lea    r9,[rbp-0x7d]
   14000199e:	mov    DWORD PTR [rsp+0x40],0x1
   1400019a6:	mov    r8d,r12d
   1400019a9:	mov    QWORD PTR [rsp+0x20],r15
   1400019ae:	lea    rdx,[rsp+0x40]
   1400019b3:	mov    rcx,rdi
   1400019b6:	call   QWORD PTR [rip+0x772c]        # 0x1400090e8
   1400019bc:	mov    ecx,eax
   1400019be:	test   ecx,ecx
   1400019c0:	je     0x140001ad2
   1400019c6:	test   ebx,ebx
   1400019c8:	js     0x1400019ee
   1400019ca:	lea    r9,[rbp-0x7d]
   1400019ce:	mov    DWORD PTR [rsp+0x40],0x1
   1400019d6:	mov    r8d,r12d
   1400019d9:	mov    QWORD PTR [rsp+0x20],r15
   1400019de:	lea    rdx,[rsp+0x40]
   1400019e3:	mov    rcx,rdi
   1400019e6:	call   QWORD PTR [rip+0x76fc]        # 0x1400090e8
   1400019ec:	mov    ecx,eax
   1400019ee:	test   ecx,ecx
   1400019f0:	je     0x140001ad2
   1400019f6:	test   ebx,ebx
   1400019f8:	js     0x140001a2e
   1400019fa:	xor    eax,eax
   1400019fc:	mov    BYTE PTR [rbp-0x71],r15b
   140001a00:	lea    r9,[rbp-0x7d]
   140001a04:	mov    QWORD PTR [rbp-0x70],rax
   140001a08:	lea    rdx,[rbp-0x71]
   140001a0c:	mov    QWORD PTR [rbp-0x68],rax
   140001a10:	mov    rcx,rdi
   140001a13:	mov    DWORD PTR [rbp-0x60],eax
   140001a16:	lea    r8d,[rax+0x18]
   140001a1a:	mov    WORD PTR [rbp-0x5c],ax
   140001a1e:	mov    BYTE PTR [rbp-0x5a],al
   140001a21:	mov    QWORD PTR [rsp+0x20],r15
   140001a26:	call   QWORD PTR [rip+0x76bc]        # 0x1400090e8
   140001a2c:	mov    ecx,eax
   140001a2e:	test   ecx,ecx
   140001a30:	je     0x140001ad2
   140001a36:	test   ebx,ebx
   140001a38:	js     0x140001a5e
   140001a3a:	lea    r9,[rbp-0x7d]
   140001a3e:	mov    DWORD PTR [rsp+0x40],0x1
   140001a46:	mov    r8d,r12d
   140001a49:	mov    QWORD PTR [rsp+0x20],r15
   140001a4e:	lea    rdx,[rsp+0x40]
   140001a53:	mov    rcx,rdi
   140001a56:	call   QWORD PTR [rip+0x768c]        # 0x1400090e8
   140001a5c:	mov    ecx,eax
   140001a5e:	test   ecx,ecx
   140001a60:	je     0x140001ad2
   140001a62:	test   ebx,ebx
   140001a64:	js     0x140001a86
   140001a66:	lea    r9,[rbp-0x7d]
   140001a6a:	mov    DWORD PTR [rsp+0x40],esi
   140001a6e:	mov    r8d,r12d
   140001a71:	mov    QWORD PTR [rsp+0x20],r15
   140001a76:	lea    rdx,[rsp+0x40]
   140001a7b:	mov    rcx,rdi
   140001a7e:	call   QWORD PTR [rip+0x7664]        # 0x1400090e8
   140001a84:	mov    ecx,eax
   140001a86:	test   ecx,ecx
   140001a88:	je     0x140001ad2
   140001a8a:	test   ebx,ebx
   140001a8c:	js     0x140001aa9
   140001a8e:	lea    r9,[rbp-0x7d]
   140001a92:	mov    QWORD PTR [rsp+0x20],r15
   140001a97:	mov    r8d,r12d
   140001a9a:	lea    rdx,[rbp-0x79]
   140001a9e:	mov    rcx,rdi
   140001aa1:	call   QWORD PTR [rip+0x7641]        # 0x1400090e8
   140001aa7:	mov    ecx,eax
   140001aa9:	test   ecx,ecx
   140001aab:	je     0x140001ad2
   140001aad:	test   ebx,ebx
   140001aaf:	js     0x140001ad6
   140001ab1:	lea    r9,[rbp-0x7d]
   140001ab5:	mov    DWORD PTR [rsp+0x40],r15d
   140001aba:	mov    r8d,r12d
   140001abd:	mov    QWORD PTR [rsp+0x20],r15
   140001ac2:	lea    rdx,[rsp+0x40]
   140001ac7:	mov    rcx,rdi
   140001aca:	call   QWORD PTR [rip+0x7618]        # 0x1400090e8
   140001ad0:	mov    ecx,eax
   140001ad2:	test   ebx,ebx
   140001ad4:	jns    0x140001ada
   140001ad6:	mov    eax,ebx
   140001ad8:	jmp    0x140001ae5
   140001ada:	neg    ecx
   140001adc:	sbb    eax,eax
   140001ade:	not    eax
   140001ae0:	and    eax,0x80004005
   140001ae5:	mov    rcx,QWORD PTR [rbp+0xf]
   140001ae9:	xor    rcx,rsp
   140001aec:	call   0x140008740
   140001af1:	add    rsp,0xe0
   140001af8:	pop    r15
   140001afa:	pop    r14
   140001afc:	pop    r12
   140001afe:	pop    rdi
   140001aff:	pop    rsi
   140001b00:	pop    rbx
   140001b01:	pop    rbp
   140001b02:	ret    
   140001b03:	int3   
   140001b04:	int3   
   140001b05:	int3   
   140001b06:	int3   
   140001b07:	int3   
   140001b08:	int3   
   140001b09:	int3   
   140001b0a:	int3   
   140001b0b:	int3   
   140001b0c:	mov    rax,rsp
   140001b0f:	mov    QWORD PTR [rax+0x10],rbx
   140001b13:	mov    QWORD PTR [rax+0x18],rsi
   140001b17:	mov    QWORD PTR [rax+0x20],rdi
   140001b1b:	push   rbp
   140001b1c:	push   r14
   140001b1e:	push   r15
   140001b20:	lea    rbp,[rax-0x2f]
   140001b24:	sub    rsp,0x90
   140001b2b:	mov    rax,QWORD PTR [rip+0xa4e6]        # 0x14000c018
   140001b32:	xor    rax,rsp
   140001b35:	mov    QWORD PTR [rbp+0xf],rax
   140001b39:	mov    r14,QWORD PTR [rbp+0x57]
   140001b3d:	lea    r9,[rbp+0x7]
   140001b41:	mov    r15,QWORD PTR [rbp+0x67]
   140001b45:	lea    r8,[rbp-0x29]
   140001b49:	and    QWORD PTR [rbp-0x21],0x0
   140001b4e:	lea    rdx,[rbp-0x21]
   140001b52:	and    QWORD PTR [rbp-0x29],0x0
   140001b57:	and    DWORD PTR [rbp+0x7],0x0
   140001b5b:	call   0x14000129c
   140001b60:	mov    ebx,eax
   140001b62:	test   eax,eax
   140001b64:	js     0x140001b80
   140001b66:	cmp    DWORD PTR [rbp+0x7],0x0
   140001b6a:	jne    0x140001b80
   140001b6c:	mov    ecx,0x2711
   140001b71:	call   0x14000263c
   140001b76:	or     ecx,0xffffffff
   140001b79:	call   QWORD PTR [rip+0x7649]        # 0x1400091c8
   140001b7f:	int3   
   140001b80:	cmp    BYTE PTR [rbp+0x7f],0x0
   140001b84:	mov    rsi,QWORD PTR [rbp-0x29]
   140001b88:	jne    0x140001cb8
   140001b8e:	test   eax,eax
   140001b90:	js     0x140001cb8
   140001b96:	and    QWORD PTR [rsp+0x30],0x0
   140001b9c:	xor    r9d,r9d
   140001b9f:	mov    DWORD PTR [rsp+0x28],0x80
   140001ba7:	xor    r8d,r8d
   140001baa:	mov    edx,0x40000000
   140001baf:	mov    DWORD PTR [rsp+0x20],0x2
   140001bb7:	mov    rcx,r14
   140001bba:	call   QWORD PTR [rip+0x7440]        # 0x140009000
   140001bc0:	mov    rdi,rax
   140001bc3:	cmp    rax,0xffffffffffffffff
   140001bc7:	jne    0x140001c24
   140001bc9:	mov    ebx,0x80004005
   140001bce:	call   QWORD PTR [rip+0x7434]        # 0x140009008
   140001bd4:	cmp    eax,0x50
   140001bd7:	jne    0x140001cfe
   140001bdd:	mov    rdx,r14
   140001be0:	call   0x140001124
   140001be5:	test   al,al
   140001be7:	je     0x140001cb8
   140001bed:	and    QWORD PTR [rsp+0x30],0x0
   140001bf3:	xor    r9d,r9d
   140001bf6:	mov    DWORD PTR [rsp+0x28],0x80
   140001bfe:	xor    r8d,r8d
   140001c01:	mov    edx,0x40000000
   140001c06:	mov    DWORD PTR [rsp+0x20],0x2
   140001c0e:	mov    rcx,r14
   140001c11:	call   QWORD PTR [rip+0x73e9]        # 0x140009000
   140001c17:	mov    rdi,rax
   140001c1a:	cmp    rax,0xffffffffffffffff
   140001c1e:	je     0x140001cb8
   140001c24:	mov    al,BYTE PTR [rbp+0x77]
   140001c27:	mov    r8,r15
   140001c2a:	mov    r9d,DWORD PTR [rbp+0x6f]
   140001c2e:	mov    rcx,rdi
   140001c31:	mov    rdx,QWORD PTR [rbp+0x5f]
   140001c35:	mov    BYTE PTR [rsp+0x20],al
   140001c39:	call   0x1400017dc
   140001c3e:	mov    ebx,eax
   140001c40:	test   eax,eax
   140001c42:	js     0x140001ca9
   140001c44:	lea    rdx,[rbp+0x7]
   140001c48:	mov    rcx,rsi
   140001c4b:	call   0x140001690
   140001c50:	mov    ebx,eax
   140001c52:	test   eax,eax
   140001c54:	js     0x140001ca9
   140001c56:	mov    ebx,DWORD PTR [rbp+0x7]
   140001c59:	xor    ecx,ecx
   140001c5b:	cmp    ebx,0x186a0
   140001c61:	seta   cl
   140001c64:	add    ecx,0x272a
   140001c6a:	call   0x14000263c
   140001c6f:	xor    eax,eax
   140001c71:	mov    BYTE PTR [rbp+0x7],0x0
   140001c75:	and    QWORD PTR [rbp-0x19],rax
   140001c79:	lea    rcx,[rbp-0x19]
   140001c7d:	mov    QWORD PTR [rbp-0x1],rax
   140001c81:	mov    rdx,rdi
   140001c84:	mov    DWORD PTR [rbp+0x8],eax
   140001c87:	mov    WORD PTR [rbp+0xc],ax
   140001c8b:	mov    BYTE PTR [rbp+0xe],al
   140001c8e:	mov    QWORD PTR [rbp-0x11],rax
   140001c92:	lea    rax,[rbp+0x7]
   140001c96:	mov    QWORD PTR [rsp+0x20],rax
   140001c9b:	mov    DWORD PTR [rbp+0x3],ebx
   140001c9e:	mov    QWORD PTR [rbp-0x9],rsi
   140001ca2:	call   0x140002e90
   140001ca7:	mov    ebx,eax
   140001ca9:	cmp    rdi,0xffffffffffffffff
   140001cad:	je     0x140001cb8
   140001caf:	mov    rcx,rdi
   140001cb2:	call   QWORD PTR [rip+0x7368]        # 0x140009020
   140001cb8:	mov    rcx,QWORD PTR [rbp-0x21]
   140001cbc:	test   rcx,rcx
   140001cbf:	je     0x140001cc6
   140001cc1:	call   0x1400083ec
   140001cc6:	test   rsi,rsi
   140001cc9:	je     0x140001cd3
   140001ccb:	mov    rcx,rsi
   140001cce:	call   0x1400083ec
   140001cd3:	mov    eax,ebx
   140001cd5:	mov    rcx,QWORD PTR [rbp+0xf]
   140001cd9:	xor    rcx,rsp
   140001cdc:	call   0x140008740
   140001ce1:	lea    r11,[rsp+0x90]
   140001ce9:	mov    rbx,QWORD PTR [r11+0x28]
   140001ced:	mov    rsi,QWORD PTR [r11+0x30]
   140001cf1:	mov    rdi,QWORD PTR [r11+0x38]
   140001cf5:	mov    rsp,r11
   140001cf8:	pop    r15
   140001cfa:	pop    r14
   140001cfc:	pop    rbp
   140001cfd:	ret    
   140001cfe:	mov    ecx,0x2713
   140001d03:	call   0x14000263c
   140001d08:	or     ecx,0xffffffff
   140001d0b:	call   QWORD PTR [rip+0x74b7]        # 0x1400091c8
   140001d11:	int3   
   140001d12:	int3   
   140001d13:	int3   
   140001d14:	int3   
   140001d15:	int3   
   140001d16:	int3   
   140001d17:	int3   
   140001d18:	mov    rax,rsp
   140001d1b:	mov    QWORD PTR [rax+0x8],rbx
   140001d1f:	mov    QWORD PTR [rax+0x18],rsi
   140001d23:	mov    QWORD PTR [rax+0x20],rdi
   140001d27:	push   rbp
   140001d28:	push   r12
   140001d2a:	push   r13
   140001d2c:	push   r14
   140001d2e:	push   r15
   140001d30:	lea    rbp,[rax-0x248]
   140001d37:	sub    rsp,0x320
   140001d3e:	mov    rax,QWORD PTR [rip+0xa2d3]        # 0x14000c018
   140001d45:	xor    rax,rsp
   140001d48:	mov    QWORD PTR [rbp+0x210],rax
   140001d4f:	xor    ebx,ebx
   140001d51:	mov    rdi,rdx
   140001d54:	mov    r14d,ecx
   140001d57:	mov    BYTE PTR [rsp+0x51],bl
   140001d5b:	xor    edx,edx
   140001d5d:	mov    WORD PTR [rbp-0x80],bx
   140001d61:	lea    rcx,[rbp-0x7e]
   140001d65:	lea    r8d,[rbx+0x7e]
   140001d69:	call   0x140008e9e
   140001d6e:	xor    edx,edx
   140001d70:	mov    WORD PTR [rbp+0x0],bx
   140001d74:	mov    r8d,0x206
   140001d7a:	lea    rcx,[rbp+0x2]
   140001d7e:	call   0x140008e9e
   140001d83:	lea    rcx,[rip+0x77b6]        # 0x140009540
   140001d8a:	mov    BYTE PTR [rsp+0x50],bl
   140001d8e:	call   0x1400023f0
   140001d93:	lea    edx,[rbx+0x10]
   140001d96:	mov    r12d,eax
   140001d99:	lea    rcx,[rsp+0x58]
   140001d9e:	lea    r13,[rsp+0x58]
   140001da3:	call   QWORD PTR [rip+0x7267]        # 0x140009010
   140001da9:	test   eax,eax
   140001dab:	jne    0x140001dc2
   140001dad:	mov    ecx,0x2720
   140001db2:	call   0x14000263c
   140001db7:	or     rcx,0xffffffffffffffff
   140001dbb:	call   QWORD PTR [rip+0x7407]        # 0x1400091c8
   140001dc1:	int3   
   140001dc2:	dec    r14d
   140001dc5:	add    rdi,0x8
   140001dc9:	or     rsi,0xffffffffffffffff
   140001dcd:	movsxd r8,r14d
   140001dd0:	mov    rcx,rbx
   140001dd3:	test   r14d,r14d
   140001dd6:	jle    0x140001e1f
   140001dd8:	mov    rdx,QWORD PTR [rdi+rcx*8]
   140001ddc:	mov    rax,rsi
   140001ddf:	inc    rax
   140001de2:	cmp    WORD PTR [rdx+rax*2],bx
   140001de6:	jne    0x140001ddf
   140001de8:	cmp    rax,0x2
   140001dec:	jne    0x140001e17
   140001dee:	movzx  eax,WORD PTR [rdx]
   140001df1:	mov    r9d,0xfffd
   140001df7:	sub    ax,0x2d
   140001dfb:	test   r9w,ax
   140001dff:	jne    0x140001e17
   140001e01:	cmp    WORD PTR [rdx+0x2],0x68
   140001e06:	je     0x14000229f
   140001e0c:	cmp    WORD PTR [rdx+0x2],0x3f
   140001e11:	je     0x14000229f
   140001e17:	inc    rcx
   140001e1a:	cmp    rcx,r8
   140001e1d:	jl     0x140001dd8
   140001e1f:	mov    r15d,0x104
   140001e25:	cmp    r14d,0x1
   140001e29:	jle    0x140001ff0
   140001e2f:	mov    rcx,QWORD PTR [rdi]
   140001e32:	cmp    WORD PTR [rcx],0x2d
   140001e36:	jne    0x140001fec
   140001e3c:	add    rcx,0x2
   140001e40:	lea    rdx,[rip+0x79a9]        # 0x1400097f0
   140001e47:	call   QWORD PTR [rip+0x73b3]        # 0x140009200
   140001e4d:	test   eax,eax
   140001e4f:	jne    0x140001e82
   140001e51:	add    rdi,0x8
   140001e55:	xor    edx,edx
   140001e57:	dec    r14d
   140001e5a:	mov    r13,QWORD PTR [rdi]
   140001e5d:	mov    rcx,r13
   140001e60:	call   QWORD PTR [rip+0x71b2]        # 0x140009018
   140001e66:	test   ax,ax
   140001e69:	jne    0x140001fcd
   140001e6f:	mov    ecx,0x2721
   140001e74:	call   0x14000263c
   140001e79:	mov    ecx,esi
   140001e7b:	call   QWORD PTR [rip+0x7347]        # 0x1400091c8
   140001e81:	int3   
   140001e82:	mov    rcx,QWORD PTR [rdi]
   140001e85:	lea    rdx,[rip+0x7974]        # 0x140009800
   140001e8c:	add    rcx,0x2
   140001e90:	call   QWORD PTR [rip+0x736a]        # 0x140009200
   140001e96:	test   eax,eax
   140001e98:	jne    0x140001ed5
   140001e9a:	add    rdi,0x8
   140001e9e:	sub    r14d,0x1
   140001ea2:	je     0x140001eb9
   140001ea4:	mov    rcx,QWORD PTR [rdi]
   140001ea7:	test   rcx,rcx
   140001eaa:	je     0x140001eb9
   140001eac:	cmp    WORD PTR [rcx],bx
   140001eaf:	je     0x140001eb9
   140001eb1:	call   0x1400023f0
   140001eb6:	mov    r12d,eax
   140001eb9:	test   r12d,r12d
   140001ebc:	jne    0x140001fcd
   140001ec2:	mov    ecx,0x2722
   140001ec7:	call   0x14000263c
   140001ecc:	mov    ecx,esi
   140001ece:	call   QWORD PTR [rip+0x72f4]        # 0x1400091c8
   140001ed4:	int3   
   140001ed5:	mov    rcx,QWORD PTR [rdi]
   140001ed8:	lea    rdx,[rip+0x7931]        # 0x140009810
   140001edf:	add    rcx,0x2
   140001ee3:	call   QWORD PTR [rip+0x7317]        # 0x140009200
   140001ee9:	test   eax,eax
   140001eeb:	jne    0x140001ef7
   140001eed:	mov    BYTE PTR [rsp+0x51],0x1
   140001ef2:	jmp    0x140001fcd
   140001ef7:	mov    rcx,QWORD PTR [rdi]
   140001efa:	lea    rdx,[rip+0x791f]        # 0x140009820
   140001f01:	add    rcx,0x2
   140001f05:	call   QWORD PTR [rip+0x72f5]        # 0x140009200
   140001f0b:	test   eax,eax
   140001f0d:	jne    0x140001f19
   140001f0f:	mov    BYTE PTR [rsp+0x50],0x1
   140001f14:	jmp    0x140001fcd
   140001f19:	mov    rcx,QWORD PTR [rdi]
   140001f1c:	lea    rdx,[rip+0x7915]        # 0x140009838
   140001f23:	add    rcx,0x2
   140001f27:	call   QWORD PTR [rip+0x72d3]        # 0x140009200
   140001f2d:	test   eax,eax
   140001f2f:	jne    0x140001f6e
   140001f31:	add    rdi,0x8
   140001f35:	lea    edx,[rax+0x40]
   140001f38:	dec    r14d
   140001f3b:	lea    rax,[rbp-0x80]
   140001f3f:	lea    rcx,[rbp-0x80]
   140001f43:	mov    r8,QWORD PTR [rdi]
   140001f46:	sub    r8,rax
   140001f49:	lea    rax,[rdx+0x7fffffbe]
   140001f50:	test   rax,rax
   140001f53:	je     0x140001fc1
   140001f55:	movzx  eax,WORD PTR [r8+rcx*1]
   140001f5a:	test   ax,ax
   140001f5d:	je     0x140001fc1
   140001f5f:	mov    WORD PTR [rcx],ax
   140001f62:	add    rcx,0x2
   140001f66:	sub    rdx,0x1
   140001f6a:	jne    0x140001f49
   140001f6c:	jmp    0x140001fc1
   140001f6e:	mov    rcx,QWORD PTR [rdi]
   140001f71:	lea    rdx,[rip+0x78d0]        # 0x140009848
   140001f78:	add    rcx,0x2
   140001f7c:	call   QWORD PTR [rip+0x727e]        # 0x140009200
   140001f82:	test   eax,eax
   140001f84:	jne    0x140001fd9
   140001f86:	add    rdi,0x8
   140001f8a:	lea    rax,[rbp+0x0]
   140001f8e:	dec    r14d
   140001f91:	lea    rcx,[rbp+0x0]
   140001f95:	mov    rdx,r15
   140001f98:	mov    r8,QWORD PTR [rdi]
   140001f9b:	sub    r8,rax
   140001f9e:	lea    rax,[rdx+0x7ffffefa]
   140001fa5:	test   rax,rax
   140001fa8:	je     0x140001fc1
   140001faa:	movzx  eax,WORD PTR [r8+rcx*1]
   140001faf:	test   ax,ax
   140001fb2:	je     0x140001fc1
   140001fb4:	mov    WORD PTR [rcx],ax
   140001fb7:	add    rcx,0x2
   140001fbb:	sub    rdx,0x1
   140001fbf:	jne    0x140001f9e
   140001fc1:	test   rdx,rdx
   140001fc4:	jne    0x140001fca
   140001fc6:	sub    rcx,0x2
   140001fca:	mov    WORD PTR [rcx],bx
   140001fcd:	add    rdi,0x8
   140001fd1:	dec    r14d
   140001fd4:	jmp    0x140001e25
   140001fd9:	mov    ecx,0x2723
   140001fde:	call   0x14000263c
   140001fe3:	mov    ecx,esi
   140001fe5:	call   QWORD PTR [rip+0x71dd]        # 0x1400091c8
   140001feb:	int3   
   140001fec:	cmp    r14d,0x1
   140001ff0:	jne    0x1400022a5
   140001ff6:	mov    r14,QWORD PTR [rdi]
   140001ff9:	cmp    WORD PTR [rbp+0x0],bx
   140001ffd:	jne    0x14000206d
   140001fff:	lea    rax,[rbp+0x0]
   140002003:	mov    r8,r14
   140002006:	sub    r8,rax
   140002009:	lea    rcx,[rbp+0x0]
   14000200d:	mov    rdx,r15
   140002010:	lea    rax,[rdx+0x7ffffefa]
   140002017:	test   rax,rax
   14000201a:	je     0x140002033
   14000201c:	movzx  eax,WORD PTR [r8+rcx*1]
   140002021:	test   ax,ax
   140002024:	je     0x140002033
   140002026:	mov    WORD PTR [rcx],ax
   140002029:	add    rcx,0x2
   14000202d:	sub    rdx,0x1
   140002031:	jne    0x140002010
   140002033:	test   rdx,rdx
   140002036:	jne    0x14000203c
   140002038:	sub    rcx,0x2
   14000203c:	mov    WORD PTR [rcx],bx
   14000203f:	mov    edx,0x2e
   140002044:	lea    rcx,[rbp+0x0]
   140002048:	call   QWORD PTR [rip+0x7192]        # 0x1400091e0
   14000204e:	mov    rdi,rax
   140002051:	test   rax,rax
   140002054:	je     0x14000206d
   140002056:	lea    rdx,[rip+0x77f3]        # 0x140009850
   14000205d:	mov    rcx,rax
   140002060:	call   QWORD PTR [rip+0x719a]        # 0x140009200
   140002066:	test   eax,eax
   140002068:	jne    0x14000206d
   14000206a:	mov    WORD PTR [rdi],bx
   14000206d:	mov    edx,0x2e
   140002072:	lea    rcx,[rbp+0x0]
   140002076:	call   QWORD PTR [rip+0x7164]        # 0x1400091e0
   14000207c:	lea    r8,[rip+0x77dd]        # 0x140009860
   140002083:	lea    rdi,[rip+0x77e6]        # 0x140009870
   14000208a:	test   rax,rax
   14000208d:	je     0x1400020b2
   14000208f:	cmp    BYTE PTR [rsp+0x50],bl
   140002093:	mov    rdx,rdi
   140002096:	mov    rcx,rax
   140002099:	cmovne rdx,r8
   14000209d:	call   QWORD PTR [rip+0x715d]        # 0x140009200
   1400020a3:	test   eax,eax
   1400020a5:	je     0x140002135
   1400020ab:	lea    r8,[rip+0x77ae]        # 0x140009860
   1400020b2:	mov    rax,r15
   1400020b5:	lea    rcx,[rbp+0x0]
   1400020b9:	cmp    WORD PTR [rcx],bx
   1400020bc:	je     0x1400020c8
   1400020be:	add    rcx,0x2
   1400020c2:	sub    rax,0x1
   1400020c6:	jne    0x1400020b9
   1400020c8:	test   rax,rax
   1400020cb:	je     0x14000228c
   1400020d1:	mov    rcx,r15
   1400020d4:	sub    rcx,rax
   1400020d7:	lea    rax,[rbp+0x0]
   1400020db:	cmp    BYTE PTR [rsp+0x50],bl
   1400020df:	cmovne rdi,r8
   1400020e3:	mov    r8d,ebx
   1400020e6:	lea    rax,[rax+rcx*2]
   1400020ea:	sub    r15,rcx
   1400020ed:	je     0x14000211f
   1400020ef:	add    rcx,0x7ffffefa
   1400020f6:	add    rcx,r15
   1400020f9:	sub    rdi,rax
   1400020fc:	test   rcx,rcx
   1400020ff:	je     0x14000211a
   140002101:	movzx  edx,WORD PTR [rdi+rax*1]
   140002105:	test   dx,dx
   140002108:	je     0x14000211a
   14000210a:	mov    WORD PTR [rax],dx
   14000210d:	dec    rcx
   140002110:	add    rax,0x2
   140002114:	sub    r15,0x1
   140002118:	jne    0x1400020fc
   14000211a:	test   r15,r15
   14000211d:	jne    0x140002129
   14000211f:	sub    rax,0x2
   140002123:	mov    r8d,0x8007007a
   140002129:	mov    WORD PTR [rax],bx
   14000212c:	test   r8d,r8d
   14000212f:	jne    0x14000228c
   140002135:	test   r13,r13
   140002138:	je     0x140002279
   14000213e:	test   r12d,r12d
   140002141:	je     0x140002266
   140002147:	test   r14,r14
   14000214a:	je     0x14000223a
   140002150:	cmp    WORD PTR [rbp+0x0],bx
   140002154:	je     0x140002235
   14000215a:	mov    dil,BYTE PTR [rsp+0x51]
   14000215f:	mov    al,dil
   140002162:	neg    al
   140002164:	sbb    ecx,ecx
   140002166:	neg    ecx
   140002168:	add    ecx,0x2726
   14000216e:	call   0x14000263c
   140002173:	lea    rax,[rbp-0x80]
   140002177:	inc    rsi
   14000217a:	cmp    WORD PTR [rax+rsi*2],bx
   14000217e:	jne    0x140002177
   140002180:	test   rsi,rsi
   140002183:	je     0x140002193
   140002185:	lea    rdx,[rbp-0x80]
   140002189:	mov    ecx,0x2728
   14000218e:	call   0x14000263c
   140002193:	lea    r9,[rip+0x9e96]        # 0x14000c030
   14000219a:	mov    eax,ebx
   14000219c:	mov    rcx,r9
   14000219f:	cmp    DWORD PTR [rcx],r12d
   1400021a2:	je     0x1400021b4
   1400021a4:	inc    eax
   1400021a6:	add    rcx,0x10
   1400021aa:	cmp    eax,0x14
   1400021ad:	jb     0x14000219f
   1400021af:	mov    r9,rbx
   1400021b2:	jmp    0x1400021bc
   1400021b4:	add    rax,rax
   1400021b7:	mov    r9,QWORD PTR [r9+rax*8+0x8]
   1400021bc:	mov    r8,r13
   1400021bf:	lea    rdx,[rbp+0x0]
   1400021c3:	mov    ecx,0x2729
   1400021c8:	call   0x14000263c
   1400021cd:	mov    al,BYTE PTR [rsp+0x50]
   1400021d1:	mov    rcx,r14
   1400021d4:	mov    BYTE PTR [rsp+0x48],dil
   1400021d9:	mov    BYTE PTR [rsp+0x40],al
   1400021dd:	lea    rax,[rbp-0x80]
   1400021e1:	mov    DWORD PTR [rsp+0x38],r12d
   1400021e6:	mov    QWORD PTR [rsp+0x30],rax
   1400021eb:	lea    rax,[rbp+0x0]
   1400021ef:	mov    QWORD PTR [rsp+0x28],r13
   1400021f4:	mov    QWORD PTR [rsp+0x20],rax
   1400021f9:	call   0x140001b0c
   1400021fe:	test   eax,eax
   140002200:	sets   bl
   140002203:	mov    eax,ebx
   140002205:	mov    rcx,QWORD PTR [rbp+0x210]
   14000220c:	xor    rcx,rsp
   14000220f:	call   0x140008740
   140002214:	lea    r11,[rsp+0x320]
   14000221c:	mov    rbx,QWORD PTR [r11+0x30]
   140002220:	mov    rsi,QWORD PTR [r11+0x40]
   140002224:	mov    rdi,QWORD PTR [r11+0x48]
   140002228:	mov    rsp,r11
   14000222b:	pop    r15
   14000222d:	pop    r14
   14000222f:	pop    r13
   140002231:	pop    r12
   140002233:	pop    rbp
   140002234:	ret    
   140002235:	test   r14,r14
   140002238:	jne    0x14000224d
   14000223a:	mov    ecx,0x271c
   14000223f:	call   0x14000263c
   140002244:	mov    ecx,esi
   140002246:	call   QWORD PTR [rip+0x6f7c]        # 0x1400091c8
   14000224c:	int3   
   14000224d:	cmp    WORD PTR [rbp+0x0],bx
   140002251:	je     0x1400022ab
   140002253:	mov    ecx,0x2725
   140002258:	call   0x14000263c
   14000225d:	mov    ecx,esi
   14000225f:	call   QWORD PTR [rip+0x6f63]        # 0x1400091c8
   140002265:	int3   
   140002266:	mov    ecx,0x271b
   14000226b:	call   0x14000263c
   140002270:	mov    ecx,esi
   140002272:	call   QWORD PTR [rip+0x6f50]        # 0x1400091c8
   140002278:	int3   
   140002279:	mov    ecx,0x271a
   14000227e:	call   0x14000263c
   140002283:	mov    ecx,esi
   140002285:	call   QWORD PTR [rip+0x6f3d]        # 0x1400091c8
   14000228b:	int3   
   14000228c:	mov    ecx,0x2724
   140002291:	call   0x14000263c
   140002296:	mov    ecx,esi
   140002298:	call   QWORD PTR [rip+0x6f2a]        # 0x1400091c8
   14000229e:	int3   
   14000229f:	call   0x140001104
   1400022a4:	int3   
   1400022a5:	call   0x140001104
   1400022aa:	int3   
   1400022ab:	call   0x140001104
   1400022b0:	int3   
   1400022b1:	int3   
   1400022b2:	int3   
   1400022b3:	int3   
   1400022b4:	int3   
   1400022b5:	int3   
   1400022b6:	int3   
   1400022b7:	int3   
   1400022b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400022bd:	mov    QWORD PTR [rsp+0x18],rbp
   1400022c2:	mov    DWORD PTR [rsp+0x8],ecx
   1400022c6:	push   rsi
   1400022c7:	push   rdi
   1400022c8:	push   r14
   1400022ca:	sub    rsp,0x40
   1400022ce:	mov    ecx,0xfffffff6
   1400022d3:	mov    rbp,r9
   1400022d6:	mov    rdi,r8
   1400022d9:	mov    rsi,rdx
   1400022dc:	call   QWORD PTR [rip+0x6d56]        # 0x140009038
   1400022e2:	mov    rbx,rax
   1400022e5:	cmp    rax,0xffffffffffffffff
   1400022e9:	je     0x14000239c
   1400022ef:	mov    r14d,0x1
   1400022f5:	test   rbx,rbx
   1400022f8:	je     0x14000239c
   1400022fe:	mov    ecx,0x2712
   140002303:	test   rbp,rbp
   140002306:	jne    0x140002315
   140002308:	mov    r8,rdi
   14000230b:	mov    rdx,rsi
   14000230e:	call   0x14000263c
   140002313:	jmp    0x140002323
   140002315:	mov    r9,rdi
   140002318:	mov    r8,rsi
   14000231b:	mov    rdx,rbp
   14000231e:	call   0x14000263c
   140002323:	and    QWORD PTR [rsp+0x20],0x0
   140002329:	lea    r9,[rsp+0x30]
   14000232e:	mov    r8d,r14d
   140002331:	lea    rdx,[rsp+0x60]
   140002336:	mov    rcx,rbx
   140002339:	call   QWORD PTR [rip+0x6d19]        # 0x140009058
   14000233f:	test   eax,eax
   140002341:	jne    0x14000234e
   140002343:	cmp    DWORD PTR [rsp+0x30],r14d
   140002348:	je     0x1400023d5
   14000234e:	mov    DWORD PTR [rsp+0x28],r14d
   140002353:	lea    r8,[rsp+0x60]
   140002358:	mov    r9d,r14d
   14000235b:	mov    QWORD PTR [rsp+0x20],rsi
   140002360:	mov    edx,0x10001
   140002365:	mov    ecx,0x7f
   14000236a:	call   QWORD PTR [rip+0x6cd0]        # 0x140009040
   140002370:	cmp    eax,0x2
   140002373:	je     0x1400023e2
   140002375:	mov    DWORD PTR [rsp+0x28],r14d
   14000237a:	lea    r8,[rsp+0x60]
   14000237f:	mov    r9d,r14d
   140002382:	mov    QWORD PTR [rsp+0x20],rdi
   140002387:	mov    edx,0x10001
   14000238c:	mov    ecx,0x7f
   140002391:	call   QWORD PTR [rip+0x6ca9]        # 0x140009040
   140002397:	cmp    eax,0x2
   14000239a:	jne    0x1400023d5
   14000239c:	xor    al,al
   14000239e:	mov    rbx,QWORD PTR [rsp+0x68]
   1400023a3:	mov    rbp,QWORD PTR [rsp+0x70]
   1400023a8:	add    rsp,0x40
   1400023ac:	pop    r14
   1400023ae:	pop    rdi
   1400023af:	pop    rsi
   1400023b0:	ret    
   1400023b1:	and    QWORD PTR [rsp+0x20],0x0
   1400023b7:	lea    r9,[rsp+0x30]
   1400023bc:	mov    r8d,r14d
   1400023bf:	lea    rdx,[rsp+0x60]
   1400023c4:	mov    rcx,rbx
   1400023c7:	call   QWORD PTR [rip+0x6c8b]        # 0x140009058
   1400023cd:	test   eax,eax
   1400023cf:	je     0x1400022f5
   1400023d5:	cmp    WORD PTR [rsp+0x60],0xa
   1400023db:	jne    0x1400023b1
   1400023dd:	jmp    0x1400022f5
   1400023e2:	mov    al,r14b
   1400023e5:	jmp    0x14000239e
   1400023e7:	int3   
   1400023e8:	int3   
   1400023e9:	int3   
   1400023ea:	int3   
   1400023eb:	int3   
   1400023ec:	int3   
   1400023ed:	int3   
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400023f5:	mov    QWORD PTR [rsp+0x18],rbp
   1400023fa:	push   rsi
   1400023fb:	push   r12
   1400023fd:	push   r13
   1400023ff:	push   r14
   140002401:	push   r15
   140002403:	sub    rsp,0x20
   140002407:	xor    r12d,r12d
   14000240a:	mov    r15,rcx
   14000240d:	mov    r13d,0x7fffffff
   140002413:	test   rcx,rcx
   140002416:	je     0x140002443
   140002418:	mov    eax,r13d
   14000241b:	mov    rdx,rcx
   14000241e:	mov    r8d,r12d
   140002421:	cmp    WORD PTR [rdx],r12w
   140002425:	je     0x140002431
   140002427:	add    rdx,0x2
   14000242b:	sub    rax,0x1
   14000242f:	jne    0x140002421
   140002431:	test   rax,rax
   140002434:	jne    0x14000243b
   140002436:	mov    rsi,r12
   140002439:	jmp    0x140002448
   14000243b:	mov    rsi,r13
   14000243e:	sub    rsi,rax
   140002441:	jmp    0x14000244e
   140002443:	mov    rsi,QWORD PTR [rsp+0x50]
   140002448:	mov    r8d,0x80070057
   14000244e:	test   r8d,r8d
   140002451:	js     0x1400024c1
   140002453:	mov    rbx,QWORD PTR [rsp+0x50]
   140002458:	lea    r14,[rip+0x9bd9]        # 0x14000c038
   14000245f:	mov    ebp,r12d
   140002462:	cmp    QWORD PTR [r14],r12
   140002465:	je     0x140002488
   140002467:	mov    rcx,QWORD PTR [r14]
   14000246a:	mov    rax,r13
   14000246d:	mov    edx,r12d
   140002470:	cmp    WORD PTR [rcx],r12w
   140002474:	je     0x140002480
   140002476:	add    rcx,0x2
   14000247a:	sub    rax,0x1
   14000247e:	jne    0x140002470
   140002480:	test   rax,rax
   140002483:	jne    0x140002496
   140002485:	mov    rbx,r12
   140002488:	mov    edx,0x80070057
   14000248d:	test   edx,edx
   14000248f:	jns    0x14000249e
   140002491:	mov    rbx,r12
   140002494:	jmp    0x1400024b6
   140002496:	mov    rbx,r13
   140002499:	sub    rbx,rax
   14000249c:	jmp    0x14000248d
   14000249e:	cmp    rsi,rbx
   1400024a1:	jne    0x1400024b6
   1400024a3:	mov    rcx,QWORD PTR [r14]
   1400024a6:	mov    r8,rbx
   1400024a9:	mov    rdx,r15
   1400024ac:	call   QWORD PTR [rip+0x6d5e]        # 0x140009210
   1400024b2:	test   eax,eax
   1400024b4:	je     0x1400024db
   1400024b6:	inc    ebp
   1400024b8:	add    r14,0x10
   1400024bc:	cmp    ebp,0x14
   1400024bf:	jb     0x140002462
   1400024c1:	xor    eax,eax
   1400024c3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400024c8:	mov    rbp,QWORD PTR [rsp+0x60]
   1400024cd:	add    rsp,0x20
   1400024d1:	pop    r15
   1400024d3:	pop    r14
   1400024d5:	pop    r13
   1400024d7:	pop    r12
   1400024d9:	pop    rsi
   1400024da:	ret    
   1400024db:	mov    eax,ebp
   1400024dd:	lea    rcx,[rip+0x9b4c]        # 0x14000c030
   1400024e4:	add    rax,rax
   1400024e7:	mov    eax,DWORD PTR [rcx+rax*8]
   1400024ea:	jmp    0x1400024c3
   1400024ec:	int3   
   1400024ed:	int3   
   1400024ee:	int3   
   1400024ef:	int3   
   1400024f0:	int3   
   1400024f1:	int3   
   1400024f2:	int3   
   1400024f3:	int3   
   1400024f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400024f9:	push   rbp
   1400024fa:	push   rsi
   1400024fb:	push   rdi
   1400024fc:	push   r14
   1400024fe:	push   r15
   140002500:	sub    rsp,0x40
   140002504:	mov    rbp,rcx
   140002507:	mov    ecx,0xfffffff5
   14000250c:	call   QWORD PTR [rip+0x6b26]        # 0x140009038
   140002512:	or     rbx,0xffffffffffffffff
   140002516:	mov    rdi,rax
   140002519:	xor    r15d,r15d
   14000251c:	inc    rbx
   14000251f:	cmp    WORD PTR [rbp+rbx*2+0x0],r15w
   140002525:	jne    0x14000251c
   140002527:	cmp    rbx,0x186a0
   14000252e:	jbe    0x14000253a
   140002530:	mov    eax,0x8
   140002535:	jmp    0x140002625
   14000253a:	test   rbx,rbx
   14000253d:	je     0x140002623
   140002543:	mov    rcx,rax
   140002546:	call   QWORD PTR [rip+0x6ae4]        # 0x140009030
   14000254c:	btr    eax,0xf
   140002550:	cmp    eax,0x2
   140002553:	jne    0x14000259f
   140002555:	lea    rdx,[rsp+0x80]
   14000255d:	mov    rcx,rdi
   140002560:	call   QWORD PTR [rip+0x6aea]        # 0x140009050
   140002566:	test   eax,eax
   140002568:	je     0x14000259f
   14000256a:	lea    r9,[rsp+0x78]
   14000256f:	mov    QWORD PTR [rsp+0x20],r15
   140002574:	mov    r8d,ebx
   140002577:	mov    rdx,rbp
   14000257a:	mov    rcx,rdi
   14000257d:	call   QWORD PTR [rip+0x6ac5]        # 0x140009048
   140002583:	test   eax,eax
   140002585:	jne    0x140002623
   14000258b:	call   QWORD PTR [rip+0x6a77]        # 0x140009008
   140002591:	cmp    eax,0x6
   140002594:	je     0x140002623
   14000259a:	jmp    0x140002625
   14000259f:	mov    QWORD PTR [rsp+0x38],r15
   1400025a4:	xor    edx,edx
   1400025a6:	mov    QWORD PTR [rsp+0x30],r15
   1400025ab:	mov    r9d,ebx
   1400025ae:	mov    DWORD PTR [rsp+0x28],r15d
   1400025b3:	mov    r8,rbp
   1400025b6:	mov    QWORD PTR [rsp+0x20],r15
   1400025bb:	lea    ecx,[rdx+0x1]
   1400025be:	call   QWORD PTR [rip+0x6b1c]        # 0x1400090e0
   1400025c4:	movsxd r14,eax
   1400025c7:	mov    rcx,r14
   1400025ca:	call   QWORD PTR [rip+0x6be8]        # 0x1400091b8
   1400025d0:	mov    rsi,rax
   1400025d3:	test   rax,rax
   1400025d6:	je     0x140002623
   1400025d8:	mov    QWORD PTR [rsp+0x38],r15
   1400025dd:	xor    edx,edx
   1400025df:	mov    QWORD PTR [rsp+0x30],r15
   1400025e4:	mov    r9d,ebx
   1400025e7:	mov    DWORD PTR [rsp+0x28],r14d
   1400025ec:	mov    r8,rbp
   1400025ef:	mov    QWORD PTR [rsp+0x20],rax
   1400025f4:	lea    ecx,[rdx+0x1]
   1400025f7:	call   QWORD PTR [rip+0x6ae3]        # 0x1400090e0
   1400025fd:	test   eax,eax
   1400025ff:	je     0x14000261a
   140002601:	lea    r9,[rsp+0x78]
   140002606:	mov    QWORD PTR [rsp+0x20],r15
   14000260b:	mov    r8d,eax
   14000260e:	mov    rdx,rsi
   140002611:	mov    rcx,rdi
   140002614:	call   QWORD PTR [rip+0x6ace]        # 0x1400090e8
   14000261a:	mov    rcx,rsi
   14000261d:	call   QWORD PTR [rip+0x6b9d]        # 0x1400091c0
   140002623:	xor    eax,eax
   140002625:	mov    rbx,QWORD PTR [rsp+0x70]
   14000262a:	add    rsp,0x40
   14000262e:	pop    r15
   140002630:	pop    r14
   140002632:	pop    rdi
   140002633:	pop    rsi
   140002634:	pop    rbp
   140002635:	ret    
   140002636:	int3   
   140002637:	int3   
   140002638:	int3   
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	mov    DWORD PTR [rsp+0x8],ecx
   140002640:	mov    r11,rsp
   140002643:	mov    QWORD PTR [r11+0x10],rdx
   140002647:	mov    QWORD PTR [r11+0x18],r8
   14000264b:	mov    QWORD PTR [r11+0x20],r9
   14000264f:	sub    rsp,0x58
   140002653:	and    QWORD PTR [r11-0x18],0x0
   140002658:	lea    rax,[r11+0x10]
   14000265c:	mov    QWORD PTR [r11-0x10],rax
   140002660:	mov    r8d,ecx
   140002663:	lea    rax,[r11-0x10]
   140002667:	xor    r9d,r9d
   14000266a:	mov    QWORD PTR [r11-0x28],rax
   14000266e:	xor    edx,edx
   140002670:	and    DWORD PTR [rsp+0x28],0x0
   140002675:	lea    rax,[r11-0x18]
   140002679:	mov    ecx,0x900
   14000267e:	mov    QWORD PTR [r11-0x38],rax
   140002682:	call   QWORD PTR [rip+0x6a50]        # 0x1400090d8
   140002688:	test   eax,eax
   14000268a:	je     0x140002696
   14000268c:	mov    rcx,QWORD PTR [rsp+0x40]
   140002691:	call   0x1400024f4
   140002696:	mov    rcx,QWORD PTR [rsp+0x40]
   14000269b:	test   rcx,rcx
   14000269e:	je     0x1400026a6
   1400026a0:	call   QWORD PTR [rip+0x6982]        # 0x140009028
   1400026a6:	add    rsp,0x58
   1400026aa:	ret    
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	int3   
   1400026b1:	int3   
   1400026b2:	int3   
   1400026b3:	int3   
   1400026b4:	xor    r10d,r10d
   1400026b7:	mov    DWORD PTR [rdx],r10d
   1400026ba:	test   rcx,rcx
   1400026bd:	je     0x1400026ea
   1400026bf:	mov    r8d,0x80
   1400026c5:	mov    eax,r10d
   1400026c8:	mov    r9d,r8d
   1400026cb:	cmp    WORD PTR [rcx],r10w
   1400026cf:	je     0x1400026db
   1400026d1:	add    rcx,0x2
   1400026d5:	sub    r9,0x1
   1400026d9:	jne    0x1400026cb
   1400026db:	test   r9,r9
   1400026de:	jne    0x1400026e5
   1400026e0:	mov    r8,r10
   1400026e3:	jmp    0x1400026ef
   1400026e5:	sub    r8,r9
   1400026e8:	jmp    0x1400026f4
   1400026ea:	mov    r8,QWORD PTR [rsp+0x8]
   1400026ef:	mov    eax,0x80070057
   1400026f4:	test   eax,eax
   1400026f6:	js     0x1400026fb
   1400026f8:	mov    DWORD PTR [rdx],r8d
   1400026fb:	ret    
   1400026fc:	int3   
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	int3   
   140002701:	int3   
   140002702:	int3   
   140002703:	int3   
   140002704:	mov    QWORD PTR [rsp+0x10],rbx
   140002709:	mov    DWORD PTR [rsp+0x18],r8d
   14000270e:	push   rbp
   14000270f:	push   rsi
   140002710:	push   rdi
   140002711:	push   r12
   140002713:	push   r13
   140002715:	push   r14
   140002717:	push   r15
   140002719:	mov    rbp,rsp
   14000271c:	sub    rsp,0x20
   140002720:	mov    esi,DWORD PTR [rbp+0x68]
   140002723:	mov    r13,r9
   140002726:	xor    r9d,r9d
   140002729:	mov    r15,rdx
   14000272c:	mov    DWORD PTR [rbp+0x50],r9d
   140002730:	mov    r12,rcx
   140002733:	mov    WORD PTR [rdx],r9w
   140002737:	mov    edi,r9d
   14000273a:	test   esi,esi
   14000273c:	je     0x1400027cd
   140002742:	mov    r14,QWORD PTR [rbp+0x60]
   140002746:	cmp    esi,0x4
   140002749:	jb     0x14000279f
   14000274b:	lea    eax,[rsi-0x1]
   14000274e:	lea    rdx,[rax+r14*1]
   140002752:	lea    rax,[rax*4+0x0]
   14000275a:	add    rax,r13
   14000275d:	cmp    r14,rax
   140002760:	ja     0x140002767
   140002762:	cmp    rdx,r13
   140002765:	jae    0x14000279f
   140002767:	mov    eax,esi
   140002769:	mov    ecx,esi
   14000276b:	and    eax,0x3
   14000276e:	sub    ecx,eax
   140002770:	add    edi,0x4
   140002773:	cmp    edi,ecx
   140002775:	jb     0x140002770
   140002777:	lea    ebx,[rcx+0x3]
   14000277a:	xor    edx,edx
   14000277c:	and    rbx,0xfffffffffffffffc
   140002780:	mov    rcx,r13
   140002783:	mov    r8,rbx
   140002786:	shl    r8,0x2
   14000278a:	call   0x140008e9e
   14000278f:	mov    r8,rbx
   140002792:	xor    edx,edx
   140002794:	mov    rcx,r14
   140002797:	call   0x140008e9e
   14000279c:	xor    r9d,r9d
   14000279f:	cmp    edi,esi
   1400027a1:	jae    0x1400027cd
   1400027a3:	mov    eax,edi
   1400027a5:	mov    r8d,esi
   1400027a8:	lea    rdx,[rax*4+0x0]
   1400027b0:	add    rdx,r13
   1400027b3:	lea    rcx,[rax+r14*1]
   1400027b7:	sub    r8d,edi
   1400027ba:	mov    DWORD PTR [rdx],r9d
   1400027bd:	lea    rdx,[rdx+0x4]
   1400027c1:	mov    BYTE PTR [rcx],r9b
   1400027c4:	inc    rcx
   1400027c7:	sub    r8,0x1
   1400027cb:	jne    0x1400027ba
   1400027cd:	cmp    QWORD PTR [r12],r9
   1400027d1:	jne    0x1400027de
   1400027d3:	cmp    QWORD PTR [r12+0x10],r9
   1400027d8:	je     0x14000288c
   1400027de:	lea    eax,[rsi-0x1]
   1400027e1:	cmp    eax,0x6
   1400027e4:	jbe    0x14000288c
   1400027ea:	mov    rbx,QWORD PTR [rbp+0x40]
   1400027ee:	mov    QWORD PTR [rbp+0x40],rbx
   1400027f2:	mov    r14d,0x9
   1400027f8:	mov    r8,QWORD PTR [r12]
   1400027fc:	test   r8,r8
   1400027ff:	je     0x1400028ad
   140002805:	mov    edx,0x3e8
   14000280a:	mov    rcx,r15
   14000280d:	call   QWORD PTR [rip+0x6a15]        # 0x140009228
   140002813:	xor    edi,edi
   140002815:	test   rax,rax
   140002818:	je     0x14000288c
   14000281a:	cmp    BYTE PTR [r12+0xc],dil
   14000281f:	jne    0x1400028d7
   140002825:	mov    eax,0xfeff
   14000282a:	cmp    ax,WORD PTR [r15]
   14000282e:	jne    0x1400028d7
   140002834:	lea    r8,[r15+0x2]
   140002838:	test   r8,r8
   14000283b:	je     0x14000285e
   14000283d:	mov    eax,0x3e8
   140002842:	mov    rcx,r8
   140002845:	mov    edx,edi
   140002847:	cmp    WORD PTR [rcx],di
   14000284a:	je     0x140002856
   14000284c:	add    rcx,0x2
   140002850:	sub    rax,0x1
   140002854:	jne    0x140002847
   140002856:	test   rax,rax
   140002859:	jne    0x1400028a3
   14000285b:	mov    rbx,rdi
   14000285e:	mov    edx,0x80070057
   140002863:	test   edx,edx
   140002865:	js     0x14000288c
   140002867:	inc    rbx
   14000286a:	mov    QWORD PTR [rbp+0x40],rbx
   14000286e:	cmp    ebx,0x3e8
   140002874:	jge    0x14000288c
   140002876:	lea    r9,[rbx+rbx*1]
   14000287a:	mov    edx,0x7d0
   14000287f:	mov    rcx,r15
   140002882:	call   QWORD PTR [rip+0x6990]        # 0x140009218
   140002888:	test   eax,eax
   14000288a:	je     0x1400028d7
   14000288c:	xor    eax,eax
   14000288e:	mov    rbx,QWORD PTR [rsp+0x68]
   140002893:	add    rsp,0x20
   140002897:	pop    r15
   140002899:	pop    r14
   14000289b:	pop    r13
   14000289d:	pop    r12
   14000289f:	pop    rdi
   1400028a0:	pop    rsi
   1400028a1:	pop    rbp
   1400028a2:	ret    
   1400028a3:	mov    ebx,0x3e8
   1400028a8:	sub    rbx,rax
   1400028ab:	jmp    0x140002863
   1400028ad:	mov    edx,DWORD PTR [r12+0x18]
   1400028b2:	cmp    edx,DWORD PTR [r12+0x1c]
   1400028b7:	jae    0x14000288c
   1400028b9:	mov    rax,QWORD PTR [r12+0x10]
   1400028be:	mov    rcx,r15
   1400028c1:	mov    r8,QWORD PTR [rax+rdx*8]
   1400028c5:	lea    eax,[rdx+0x1]
   1400028c8:	mov    edx,0x3e8
   1400028cd:	mov    DWORD PTR [r12+0x18],eax
   1400028d2:	call   0x140001008
   1400028d7:	lea    rdx,[rbp+0x50]
   1400028db:	mov    rcx,r15
   1400028de:	call   0x1400026b4
   1400028e3:	xor    r9d,r9d
   1400028e6:	test   eax,eax
   1400028e8:	jns    0x1400028f3
   1400028ea:	mov    DWORD PTR [rbp+0x50],r9d
   1400028ee:	jmp    0x1400027f8
   1400028f3:	movsxd rdi,DWORD PTR [rbp+0x50]
   1400028f7:	test   edi,edi
   1400028f9:	jle    0x140002934
   1400028fb:	mov    rax,rdi
   1400028fe:	movzx  eax,WORD PTR [r15+rax*2-0x2]
   140002904:	cmp    ax,0xa
   140002908:	je     0x140002923
   14000290a:	cmp    ax,0xd
   14000290e:	je     0x140002923
   140002910:	cmp    BYTE PTR [r12+0xd],r9b
   140002915:	jne    0x14000291d
   140002917:	cmp    ax,0x20
   14000291b:	je     0x140002923
   14000291d:	cmp    ax,r14w
   140002921:	jne    0x140002931
   140002923:	dec    edi
   140002925:	movsxd rax,edi
   140002928:	mov    WORD PTR [r15+rax*2],r9w
   14000292d:	test   edi,edi
   14000292f:	jg     0x1400028fe
   140002931:	mov    DWORD PTR [rbp+0x50],edi
   140002934:	mov    r14d,r9d
   140002937:	test   esi,esi
   140002939:	je     0x1400029d7
   14000293f:	mov    rdx,QWORD PTR [rbp+0x60]
   140002943:	cmp    esi,0x4
   140002946:	jb     0x1400029a7
   140002948:	lea    eax,[rsi-0x1]
   14000294b:	lea    rcx,[rax+rdx*1]
   14000294f:	lea    rax,[rax*4+0x0]
   140002957:	add    rax,r13
   14000295a:	cmp    rdx,rax
   14000295d:	ja     0x140002964
   14000295f:	cmp    rcx,r13
   140002962:	jae    0x1400029a7
   140002964:	mov    eax,esi
   140002966:	mov    ecx,esi
   140002968:	and    eax,0x3
   14000296b:	sub    ecx,eax
   14000296d:	add    r14d,0x4
   140002971:	cmp    r14d,ecx
   140002974:	jb     0x14000296d
   140002976:	lea    ebx,[rcx+0x3]
   140002979:	xor    edx,edx
   14000297b:	and    rbx,0xfffffffffffffffc
   14000297f:	mov    rcx,r13
   140002982:	mov    r8,rbx
   140002985:	shl    r8,0x2
   140002989:	call   0x140008e9e
   14000298e:	mov    rcx,QWORD PTR [rbp+0x60]
   140002992:	mov    r8,rbx
   140002995:	xor    edx,edx
   140002997:	call   0x140008e9e
   14000299c:	mov    rdx,QWORD PTR [rbp+0x60]
   1400029a0:	xor    r9d,r9d
   1400029a3:	mov    rbx,QWORD PTR [rbp+0x40]
   1400029a7:	cmp    r14d,esi
   1400029aa:	jae    0x1400029d7
   1400029ac:	mov    eax,r14d
   1400029af:	mov    r8d,esi
   1400029b2:	lea    rcx,[rax+rdx*1]
   1400029b6:	lea    rdx,[rax*4+0x0]
   1400029be:	add    rdx,r13
   1400029c1:	sub    r8d,r14d
   1400029c4:	mov    DWORD PTR [rdx],r9d
   1400029c7:	lea    rdx,[rdx+0x4]
   1400029cb:	mov    BYTE PTR [rcx],r9b
   1400029ce:	inc    rcx
   1400029d1:	sub    r8,0x1
   1400029d5:	jne    0x1400029c4
   1400029d7:	mov    r14d,0x9
   1400029dd:	mov    rcx,r15
   1400029e0:	jmp    0x1400029f5
   1400029e2:	lea    rax,[r11+0x2]
   1400029e6:	cmp    WORD PTR [rax],0x7c
   1400029ea:	je     0x140002a41
   1400029ec:	cmp    WORD PTR [rax],0x23
   1400029f0:	je     0x140002a3d
   1400029f2:	mov    rcx,rax
   1400029f5:	mov    edx,r14d
   1400029f8:	call   QWORD PTR [rip+0x680a]        # 0x140009208
   1400029fe:	xor    r9d,r9d
   140002a01:	mov    r11,rax
   140002a04:	test   rax,rax
   140002a07:	jne    0x1400029e2
   140002a09:	mov    r14,QWORD PTR [rbp+0x70]
   140002a0d:	mov    r11d,r9d
   140002a10:	mov    BYTE PTR [r14],0x1
   140002a14:	test   r11,r11
   140002a17:	je     0x140002ad9
   140002a1d:	lea    rdx,[rbp+0x50]
   140002a21:	mov    WORD PTR [r11],r9w
   140002a25:	mov    rcx,r15
   140002a28:	call   0x1400026b4
   140002a2d:	xor    r9d,r9d
   140002a30:	test   eax,eax
   140002a32:	jns    0x140002a4d
   140002a34:	mov    DWORD PTR [rbp+0x50],r9d
   140002a38:	jmp    0x1400027f2
   140002a3d:	cmp    WORD PTR [rax],0x7c
   140002a41:	mov    r14,QWORD PTR [rbp+0x70]
   140002a45:	sete   al
   140002a48:	mov    BYTE PTR [r14],al
   140002a4b:	jmp    0x140002a14
   140002a4d:	cmp    BYTE PTR [r14],r9b
   140002a50:	je     0x140002a8f
   140002a52:	mov    edi,DWORD PTR [rbp+0x50]
   140002a55:	test   edi,edi
   140002a57:	jle    0x140002ab8
   140002a59:	mov    ecx,0x9
   140002a5e:	cmp    BYTE PTR [r12+0xd],r9b
   140002a63:	jne    0x140002a71
   140002a65:	movsxd rax,edi
   140002a68:	cmp    WORD PTR [r15+rax*2-0x2],0x20
   140002a6f:	je     0x140002a7c
   140002a71:	movsxd rax,edi
   140002a74:	cmp    WORD PTR [r15+rax*2-0x2],cx
   140002a7a:	jne    0x140002ab8
   140002a7c:	dec    edi
   140002a7e:	movsxd rax,edi
   140002a81:	mov    DWORD PTR [rbp+0x50],edi
   140002a84:	mov    WORD PTR [r15+rax*2],r9w
   140002a89:	test   edi,edi
   140002a8b:	jg     0x140002a5e
   140002a8d:	jmp    0x140002ab8
   140002a8f:	movsxd rdi,DWORD PTR [rbp+0x50]
   140002a93:	test   edi,edi
   140002a95:	jle    0x140002ab8
   140002a97:	mov    rax,rdi
   140002a9a:	mov    ecx,0x9
   140002a9f:	cmp    WORD PTR [r15+rax*2-0x2],cx
   140002aa5:	jne    0x140002ab5
   140002aa7:	dec    edi
   140002aa9:	movsxd rax,edi
   140002aac:	mov    WORD PTR [r15+rax*2],r9w
   140002ab1:	test   edi,edi
   140002ab3:	jg     0x140002a9f
   140002ab5:	mov    DWORD PTR [rbp+0x50],edi
   140002ab8:	test   r13,r13
   140002abb:	je     0x140002ad9
   140002abd:	mov    rax,QWORD PTR [rbp+0x60]
   140002ac1:	test   rax,rax
   140002ac4:	je     0x140002ad9
   140002ac6:	test   esi,esi
   140002ac8:	je     0x140002ad9
   140002aca:	mov    r8,rax
   140002acd:	lea    rcx,[r11+0x4]
   140002ad1:	mov    rdx,r13
   140002ad4:	call   0x140006bc4
   140002ad9:	test   edi,edi
   140002adb:	je     0x1400027f2
   140002ae1:	mov    BYTE PTR [r12+0xc],0x1
   140002ae7:	mov    eax,edi
   140002ae9:	jmp    0x14000288e
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	int3   
   140002af1:	int3   
   140002af2:	int3   
   140002af3:	int3   
   140002af4:	mov    QWORD PTR [rsp+0x18],rbx
   140002af9:	push   rbp
   140002afa:	push   rsi
   140002afb:	push   rdi
   140002afc:	push   r12
   140002afe:	push   r13
   140002b00:	push   r14
   140002b02:	push   r15
   140002b04:	lea    rbp,[rsp-0x1110]
   140002b0c:	mov    eax,0x1210
   140002b11:	call   0x140008ee0
   140002b16:	sub    rsp,rax
   140002b19:	mov    rax,QWORD PTR [rip+0x94f8]        # 0x14000c018
   140002b20:	xor    rax,rsp
   140002b23:	mov    QWORD PTR [rbp+0x1100],rax
   140002b2a:	mov    rbx,rdx
   140002b2d:	mov    QWORD PTR [rsp+0x50],rcx
   140002b32:	mov    r15,rcx
   140002b35:	xor    r13d,r13d
   140002b38:	xor    edx,edx
   140002b3a:	mov    DWORD PTR [rsp+0x60],r13d
   140002b3f:	lea    rcx,[rsp+0x64]
   140002b44:	mov    r8d,0x1fc
   140002b4a:	call   0x140008e9e
   140002b4f:	lea    rax,[rsp+0x40]
   140002b54:	mov    WORD PTR [rbp+0x160],r13w
   140002b5c:	mov    QWORD PTR [rsp+0x30],rax
   140002b61:	lea    rdx,[rbp+0x930]
   140002b68:	and    DWORD PTR [rsp+0x28],r13d
   140002b6d:	lea    rsi,[rbp+0x930]
   140002b74:	mov    edi,r13d
   140002b77:	mov    BYTE PTR [rsp+0x41],r13b
   140002b7c:	and    QWORD PTR [rsp+0x20],rdi
   140002b81:	lea    r12,[rbp+0x160]
   140002b88:	xor    r9d,r9d
   140002b8b:	mov    BYTE PTR [rsp+0x40],0x1
   140002b90:	mov    rcx,r15
   140002b93:	mov    r14d,r13d
   140002b96:	call   0x140002704
   140002b9b:	xor    r11d,r11d
   140002b9e:	mov    DWORD PTR [rsp+0x44],eax
   140002ba2:	mov    r9d,eax
   140002ba5:	test   eax,eax
   140002ba7:	jle    0x140002db1
   140002bad:	mov    r15d,r11d
   140002bb0:	lea    ecx,[r9*2+0x2]
   140002bb8:	movsxd rdx,ecx
   140002bbb:	add    QWORD PTR [rbx+0x8],rdx
   140002bbf:	cmp    BYTE PTR [rsp+0x40],r11b
   140002bc4:	je     0x140002bd3
   140002bc6:	inc    QWORD PTR [rbx]
   140002bc9:	cmp    r9d,DWORD PTR [rbx+0x10]
   140002bcd:	jle    0x140002bd3
   140002bcf:	mov    DWORD PTR [rbx+0x10],r9d
   140002bd3:	cmp    r9d,0x80
   140002bda:	jg     0x140002e55
   140002be0:	mov    r8,r12
   140002be3:	mov    rax,rsi
   140002be6:	sub    r8,rsi
   140002be9:	movzx  ecx,WORD PTR [rax]
   140002bec:	movzx  edx,WORD PTR [rax+r8*1]
   140002bf1:	sub    ecx,edx
   140002bf3:	jne    0x140002bfd
   140002bf5:	add    rax,0x2
   140002bf9:	test   edx,edx
   140002bfb:	jne    0x140002be9
   140002bfd:	test   ecx,ecx
   140002bff:	je     0x140002e33
   140002c05:	js     0x140002e20
   140002c0b:	cmp    BYTE PTR [rsp+0x41],r11b
   140002c10:	je     0x140002c32
   140002c12:	cmp    r9d,r13d
   140002c15:	jle    0x140002deb
   140002c1b:	mov    r8,r13
   140002c1e:	mov    rdx,r12
   140002c21:	mov    rcx,rsi
   140002c24:	call   QWORD PTR [rip+0x6616]        # 0x140009240
   140002c2a:	test   eax,eax
   140002c2c:	jne    0x140002deb
   140002c32:	cmp    WORD PTR [rsi],0x20
   140002c36:	je     0x140002e04
   140002c3c:	cmp    WORD PTR [rsi],0x9
   140002c40:	je     0x140002e04
   140002c46:	lea    rdx,[rsp+0x4c]
   140002c4b:	mov    rcx,rsi
   140002c4e:	call   0x1400026b4
   140002c53:	test   eax,eax
   140002c55:	js     0x140002e80
   140002c5b:	mov    edx,DWORD PTR [rsp+0x4c]
   140002c5f:	lea    eax,[rdx+0x1]
   140002c62:	movsxd rcx,eax
   140002c65:	add    rcx,rcx
   140002c68:	add    QWORD PTR [rbx+0x8],rcx
   140002c6c:	cmp    edx,DWORD PTR [rbx+0x10]
   140002c6f:	jle    0x140002c74
   140002c71:	mov    DWORD PTR [rbx+0x10],edx
   140002c74:	movzx  eax,WORD PTR [rsi]
   140002c77:	mov    r11,rsi
   140002c7a:	mov    rcx,r12
   140002c7d:	cmp    WORD PTR [r12],ax
   140002c82:	jne    0x140002c95
   140002c84:	add    r11,0x2
   140002c88:	add    rcx,0x2
   140002c8c:	movzx  eax,WORD PTR [r11]
   140002c90:	cmp    WORD PTR [rcx],ax
   140002c93:	je     0x140002c84
   140002c95:	lea    rdx,[rsp+0x48]
   140002c9a:	call   0x1400026b4
   140002c9f:	mov    eax,DWORD PTR [rsp+0x48]
   140002ca3:	xor    ecx,ecx
   140002ca5:	test   eax,eax
   140002ca7:	jle    0x140002d0a
   140002ca9:	sub    eax,0x1
   140002cac:	je     0x140002cdd
   140002cae:	mov    edx,DWORD PTR [rbx+0x24]
   140002cb1:	add    edx,eax
   140002cb3:	dec    edi
   140002cb5:	dec    r15
   140002cb8:	cmp    edi,0x80
   140002cbe:	jge    0x140002cd3
   140002cc0:	mov    ecx,DWORD PTR [rsp+r15*4+0x60]
   140002cc5:	add    DWORD PTR [rbx+0x20],ecx
   140002cc8:	cmp    ecx,DWORD PTR [rbx+0x14]
   140002ccb:	jle    0x140002cd0
   140002ccd:	mov    DWORD PTR [rbx+0x14],ecx
   140002cd0:	sub    r14d,ecx
   140002cd3:	sub    eax,0x1
   140002cd6:	jne    0x140002cb3
   140002cd8:	mov    DWORD PTR [rbx+0x24],edx
   140002cdb:	xor    ecx,ecx
   140002cdd:	lea    eax,[rdi-0x1]
   140002ce0:	cmp    eax,0x7f
   140002ce3:	ja     0x140002d03
   140002ce5:	inc    DWORD PTR [rsp+r15*4+0x5c]
   140002cea:	jmp    0x140002d03
   140002cec:	cmp    r15,0x80
   140002cf3:	jge    0x140002d03
   140002cf5:	inc    edi
   140002cf7:	mov    DWORD PTR [rsp+r15*4+0x60],0x1
   140002d00:	inc    r15
   140002d03:	inc    r14d
   140002d06:	add    r11,0x2
   140002d0a:	cmp    WORD PTR [r11],cx
   140002d0e:	jne    0x140002cec
   140002d10:	cmp    r14d,DWORD PTR [rbx+0x18]
   140002d14:	jle    0x140002d1a
   140002d16:	mov    DWORD PTR [rbx+0x18],r14d
   140002d1a:	mov    rdx,r12
   140002d1d:	mov    r12,rsi
   140002d20:	mov    rsi,rdx
   140002d23:	cmp    BYTE PTR [rsp+0x40],cl
   140002d27:	je     0x140002d32
   140002d29:	mov    BYTE PTR [rsp+0x41],cl
   140002d2d:	mov    r13,rcx
   140002d30:	jmp    0x140002d3c
   140002d32:	movsxd r13,DWORD PTR [rsp+0x44]
   140002d37:	mov    BYTE PTR [rsp+0x41],0x1
   140002d3c:	lea    rax,[rsp+0x40]
   140002d41:	xor    r9d,r9d
   140002d44:	mov    QWORD PTR [rsp+0x30],rax
   140002d49:	mov    DWORD PTR [rsp+0x28],ecx
   140002d4d:	mov    QWORD PTR [rsp+0x20],rcx
   140002d52:	mov    rcx,QWORD PTR [rsp+0x50]
   140002d57:	call   0x140002704
   140002d5c:	xor    r11d,r11d
   140002d5f:	mov    DWORD PTR [rsp+0x44],eax
   140002d63:	mov    r9d,eax
   140002d66:	test   eax,eax
   140002d68:	jg     0x140002bb0
   140002d6e:	test   edi,edi
   140002d70:	jle    0x140002da8
   140002d72:	mov    ecx,DWORD PTR [rbx+0x24]
   140002d75:	lea    rdx,[rsp+0x60]
   140002d7a:	movsxd rax,edi
   140002d7d:	add    ecx,edi
   140002d7f:	lea    rdx,[rdx+rax*4]
   140002d83:	dec    edi
   140002d85:	lea    rdx,[rdx-0x4]
   140002d89:	cmp    edi,0x80
   140002d8f:	jge    0x140002da1
   140002d91:	mov    eax,DWORD PTR [rdx]
   140002d93:	sub    r14d,eax
   140002d96:	add    DWORD PTR [rbx+0x20],eax
   140002d99:	cmp    eax,DWORD PTR [rbx+0x14]
   140002d9c:	jle    0x140002da1
   140002d9e:	mov    DWORD PTR [rbx+0x14],eax
   140002da1:	test   edi,edi
   140002da3:	jg     0x140002d83
   140002da5:	mov    DWORD PTR [rbx+0x24],ecx
   140002da8:	test   r14d,r14d
   140002dab:	jne    0x140002e80
   140002db1:	mov    eax,DWORD PTR [rbx+0x20]
   140002db4:	shl    rax,0x6
   140002db8:	mov    QWORD PTR [rbx+0x170],rax
   140002dbf:	xor    eax,eax
   140002dc1:	mov    rcx,QWORD PTR [rbp+0x1100]
   140002dc8:	xor    rcx,rsp
   140002dcb:	call   0x140008740
   140002dd0:	mov    rbx,QWORD PTR [rsp+0x1260]
   140002dd8:	add    rsp,0x1210
   140002ddf:	pop    r15
   140002de1:	pop    r14
   140002de3:	pop    r13
   140002de5:	pop    r12
   140002de7:	pop    rdi
   140002de8:	pop    rsi
   140002de9:	pop    rbp
   140002dea:	ret    
   140002deb:	mov    ecx,0x2
   140002df0:	call   0x140008dc8
   140002df5:	mov    r9,rsi
   140002df8:	lea    rdx,[rip+0x6bf1]        # 0x1400099f0
   140002dff:	mov    r8,r12
   140002e02:	jmp    0x140002e4a
   140002e04:	mov    ecx,0x2
   140002e09:	call   0x140008dc8
   140002e0e:	mov    rcx,rax
   140002e11:	lea    rdx,[rip+0x6c78]        # 0x140009a90
   140002e18:	call   QWORD PTR [rip+0x6402]        # 0x140009220
   140002e1e:	jmp    0x140002e80
   140002e20:	mov    ecx,0x2
   140002e25:	call   0x140008dc8
   140002e2a:	lea    rdx,[rip+0x6b4f]        # 0x140009980
   140002e31:	jmp    0x140002e44
   140002e33:	mov    ecx,0x2
   140002e38:	call   0x140008dc8
   140002e3d:	lea    rdx,[rip+0x6acc]        # 0x140009910
   140002e44:	mov    r8,rsi
   140002e47:	mov    r9,r12
   140002e4a:	mov    rcx,rax
   140002e4d:	call   QWORD PTR [rip+0x63cd]        # 0x140009220
   140002e53:	jmp    0x140002e80
   140002e55:	mov    ecx,0x2
   140002e5a:	call   0x140008dc8
   140002e5f:	mov    rcx,rax
   140002e62:	lea    rdx,[rip+0x6a27]        # 0x140009890
   140002e69:	mov    eax,DWORD PTR [rsp+0x44]
   140002e6d:	mov    r9,rsi
   140002e70:	mov    r8d,0x80
   140002e76:	mov    DWORD PTR [rsp+0x20],eax
   140002e7a:	call   QWORD PTR [rip+0x63a0]        # 0x140009220
   140002e80:	mov    eax,0x80004005
   140002e85:	jmp    0x140002dc1
   140002e8a:	int3   
   140002e8b:	int3   
   140002e8c:	int3   
   140002e8d:	int3   
   140002e8e:	int3   
   140002e8f:	int3   
   140002e90:	mov    QWORD PTR [rsp+0x18],rbx
   140002e95:	push   rbp
   140002e96:	push   rsi
   140002e97:	push   rdi
   140002e98:	push   r13
   140002e9a:	push   r14
   140002e9c:	lea    rbp,[rsp-0x110]
   140002ea4:	sub    rsp,0x210
   140002eab:	mov    rax,QWORD PTR [rip+0x9166]        # 0x14000c018
   140002eb2:	xor    rax,rsp
   140002eb5:	mov    QWORD PTR [rbp+0x100],rax
   140002ebc:	mov    rsi,rdx
   140002ebf:	mov    rdi,rcx
   140002ec2:	xor    edx,edx
   140002ec4:	lea    rcx,[rsp+0x40]
   140002ec9:	mov    r8d,0x188
   140002ecf:	call   0x140008e9e
   140002ed4:	mov    rcx,QWORD PTR [rbp+0x160]
   140002edb:	lea    r8,[rbp-0x60]
   140002edf:	xor    r14d,r14d
   140002ee2:	sub    r8,rcx
   140002ee5:	mov    rdx,rcx
   140002ee8:	mov    DWORD PTR [rsp+0x5c],r14d
   140002eed:	neg    rdx
   140002ef0:	lea    rax,[rdx+rcx*1]
   140002ef4:	cmp    rax,0x8
   140002ef8:	jae    0x140002f15
   140002efa:	mov    al,BYTE PTR [rcx]
   140002efc:	mov    BYTE PTR [r8+rcx*1],al
   140002f00:	test   al,al
   140002f02:	je     0x140002f08
   140002f04:	inc    DWORD PTR [rsp+0x5c]
   140002f08:	inc    rcx
   140002f0b:	lea    rax,[rdx+rcx*1]
   140002f0f:	cmp    rax,0x8
   140002f13:	jb     0x140002ef0
   140002f15:	mov    al,BYTE PTR [rdi+0xe]
   140002f18:	lea    rdx,[rsp+0x40]
   140002f1d:	mov    rcx,rdi
   140002f20:	mov    BYTE PTR [rbp+0xc0],al
   140002f26:	call   0x140002af4
   140002f2b:	mov    ebx,eax
   140002f2d:	mov    r13d,0x80004005
   140002f33:	mov    eax,0xffffffff
   140002f38:	test   ebx,ebx
   140002f3a:	js     0x14000321c
   140002f40:	cmp    BYTE PTR [rbp+0xc0],r14b
   140002f47:	je     0x140002f72
   140002f49:	cmp    QWORD PTR [rsp+0x40],rax
   140002f4e:	jbe    0x140002f72
   140002f50:	mov    ecx,0x2
   140002f55:	call   0x140008dc8
   140002f5a:	mov    r8,QWORD PTR [rsp+0x40]
   140002f5f:	lea    rdx,[rip+0x6ba2]        # 0x140009b08
   140002f66:	mov    rcx,rax
   140002f69:	call   QWORD PTR [rip+0x62c9]        # 0x140009238
   140002f6f:	mov    ebx,r13d
   140002f72:	test   ebx,ebx
   140002f74:	js     0x14000316a
   140002f7a:	mov    rcx,QWORD PTR [rdi]
   140002f7d:	test   rcx,rcx
   140002f80:	je     0x140002f94
   140002f82:	mov    edx,DWORD PTR [rdi+0x8]
   140002f85:	xor    r8d,r8d
   140002f88:	call   QWORD PTR [rip+0x62ba]        # 0x140009248
   140002f8e:	test   eax,eax
   140002f90:	cmovne ebx,r13d
   140002f94:	mov    BYTE PTR [rdi+0xc],r14b
   140002f98:	mov    DWORD PTR [rdi+0x18],r14d
   140002f9c:	test   ebx,ebx
   140002f9e:	js     0x14000316a
   140002fa4:	lea    rdx,[rsp+0x40]
   140002fa9:	mov    rcx,rdi
   140002fac:	call   0x140003bec
   140002fb1:	mov    ebx,eax
   140002fb3:	test   eax,eax
   140002fb5:	js     0x14000316a
   140002fbb:	mov    ecx,DWORD PTR [rsp+0x60]
   140002fbf:	mov    r8,QWORD PTR [rbp+0xb8]
   140002fc6:	test   ecx,ecx
   140002fc8:	je     0x140002fe0
   140002fca:	mov    edx,r14d
   140002fcd:	mov    eax,DWORD PTR [r8+0x4]
   140002fd1:	inc    edx
   140002fd3:	add    r8,0x40
   140002fd7:	and    eax,0x2
   140002fda:	je     0x140002fcd
   140002fdc:	sub    ecx,edx
   140002fde:	jne    0x140002fca
   140002fe0:	lea    rcx,[rsp+0x40]
   140002fe5:	call   0x140007610
   140002fea:	mov    ebx,eax
   140002fec:	test   eax,eax
   140002fee:	js     0x14000316a
   140002ff4:	lea    rcx,[rsp+0x40]
   140002ff9:	call   0x140003f60
   140002ffe:	mov    ebx,eax
   140003000:	test   eax,eax
   140003002:	js     0x14000316a
   140003008:	lea    rcx,[rsp+0x40]
   14000300d:	call   0x14000647c
   140003012:	mov    ebx,eax
   140003014:	test   eax,eax
   140003016:	js     0x14000316a
   14000301c:	mov    ebx,DWORD PTR [rsp+0x60]
   140003020:	cmp    ebx,0xaaaaaaa
   140003026:	ja     0x14000303a
   140003028:	mov    ecx,ebx
   14000302a:	mov    edx,0xc
   14000302f:	call   QWORD PTR [rip+0x622b]        # 0x140009260
   140003035:	mov    r8,rax
   140003038:	jmp    0x14000303d
   14000303a:	mov    r8,r14
   14000303d:	test   r8,r8
   140003040:	je     0x140003165
   140003046:	test   ebx,ebx
   140003048:	je     0x140003082
   14000304a:	mov    rdx,QWORD PTR [rbp+0xb8]
   140003051:	mov    r9,rbx
   140003054:	add    rdx,0x4
   140003058:	test   BYTE PTR [rdx],0x80
   14000305b:	je     0x140003068
   14000305d:	mov    eax,DWORD PTR [rdx+0x14]
   140003060:	lea    rcx,[rax+rax*2]
   140003064:	inc    DWORD PTR [r8+rcx*4]
   140003068:	test   BYTE PTR [rdx],0x20
   14000306b:	je     0x140003078
   14000306d:	mov    eax,DWORD PTR [rdx+0x18]
   140003070:	lea    rcx,[rax+rax*2]
   140003074:	inc    DWORD PTR [r8+rcx*4]
   140003078:	add    rdx,0x40
   14000307c:	sub    r9,0x1
   140003080:	jne    0x140003058
   140003082:	mov    DWORD PTR [rbp-0x6c],r14d
   140003086:	mov    rdi,r14
   140003089:	test   ebx,ebx
   14000308b:	je     0x1400030d8
   14000308d:	mov    rdx,QWORD PTR [rbp+0xb8]
   140003094:	mov    r10,rbx
   140003097:	add    rdx,0x4
   14000309b:	mov    ecx,DWORD PTR [rdx]
   14000309d:	test   cl,cl
   14000309f:	jns    0x1400030ce
   1400030a1:	mov    r9d,DWORD PTR [rdx+0x14]
   1400030a5:	lea    rax,[r9+r9*2]
   1400030a9:	cmp    DWORD PTR [r8+rax*4],0x3
   1400030ae:	ja     0x1400030ce
   1400030b0:	cmp    r9d,0x3b8260
   1400030b7:	jae    0x1400030cb
   1400030b9:	btr    ecx,0x7
   1400030bd:	bts    ecx,0x8
   1400030c1:	mov    DWORD PTR [rdx],ecx
   1400030c3:	dec    DWORD PTR [rbp-0x70]
   1400030c6:	inc    DWORD PTR [rbp-0x6c]
   1400030c9:	jmp    0x1400030ce
   1400030cb:	inc    rdi
   1400030ce:	add    rdx,0x40
   1400030d2:	sub    r10,0x1
   1400030d6:	jne    0x14000309b
   1400030d8:	mov    rcx,r8
   1400030db:	call   QWORD PTR [rip+0x60df]        # 0x1400091c0
   1400030e1:	test   rdi,rdi
   1400030e4:	je     0x1400030f6
   1400030e6:	mov    rdx,rdi
   1400030e9:	lea    rcx,[rip+0x6b50]        # 0x140009c40
   1400030f0:	call   QWORD PTR [rip+0x613a]        # 0x140009230
   1400030f6:	mov    ecx,DWORD PTR [rsp+0x60]
   1400030fa:	mov    r8d,r14d
   1400030fd:	test   ecx,ecx
   1400030ff:	je     0x140003142
   140003101:	mov    rdx,QWORD PTR [rbp+0xb8]
   140003108:	add    rdx,0x4
   14000310c:	mov    r9d,DWORD PTR [rdx]
   14000310f:	mov    eax,r9d
   140003112:	and    eax,0x1d0
   140003117:	cmp    eax,0x10
   14000311a:	jne    0x140003136
   14000311c:	lea    eax,[r8+0x1]
   140003120:	cmp    DWORD PTR [rdx+0x14],eax
   140003123:	jne    0x140003136
   140003125:	or     r9d,0x40
   140003129:	mov    DWORD PTR [rdx],r9d
   14000312c:	dec    DWORD PTR [rbp-0x74]
   14000312f:	inc    DWORD PTR [rbp-0x78]
   140003132:	mov    ecx,DWORD PTR [rsp+0x60]
   140003136:	add    rdx,0x40
   14000313a:	inc    r8d
   14000313d:	cmp    r8d,ecx
   140003140:	jb     0x14000310c
   140003142:	cmp    ecx,0x2aaaaaa
   140003148:	ja     0x14000315b
   14000314a:	mov    edx,0x30
   14000314f:	call   QWORD PTR [rip+0x610b]        # 0x140009260
   140003155:	mov    QWORD PTR [rbp-0x58],rax
   140003159:	jmp    0x14000315f
   14000315b:	mov    QWORD PTR [rbp-0x58],r14
   14000315f:	cmp    QWORD PTR [rbp-0x58],r14
   140003163:	jne    0x140003174
   140003165:	mov    ebx,0x8007000e
   14000316a:	mov    edi,0xffffffff
   14000316f:	jmp    0x14000321f
   140003174:	lea    rcx,[rsp+0x40]
   140003179:	call   0x1400044bc
   14000317e:	mov    ebx,eax
   140003180:	test   eax,eax
   140003182:	js     0x14000316a
   140003184:	mov    ecx,DWORD PTR [rsp+0x60]
   140003188:	mov    edi,0xffffffff
   14000318d:	mov    DWORD PTR [rbp+0xa8],r14d
   140003194:	test   ecx,ecx
   140003196:	je     0x1400031ce
   140003198:	mov    rdx,QWORD PTR [rbp-0x58]
   14000319c:	mov    rax,QWORD PTR [rbp+0xb8]
   1400031a3:	add    rdx,0x10
   1400031a7:	add    rax,0x4
   1400031ab:	add    ecx,edi
   1400031ad:	test   DWORD PTR [rax],0x100
   1400031b3:	je     0x1400031c2
   1400031b5:	mov    DWORD PTR [rdx],0x3
   1400031bb:	add    DWORD PTR [rbp+0xa8],0x3
   1400031c2:	add    rax,0x40
   1400031c6:	add    rdx,0x30
   1400031ca:	test   ecx,ecx
   1400031cc:	jne    0x1400031ab
   1400031ce:	lea    rcx,[rsp+0x40]
   1400031d3:	call   0x140006c84
   1400031d8:	mov    ebx,eax
   1400031da:	test   eax,eax
   1400031dc:	js     0x14000321f
   1400031de:	lea    rcx,[rsp+0x40]
   1400031e3:	call   0x14000686c
   1400031e8:	mov    ebx,eax
   1400031ea:	test   eax,eax
   1400031ec:	js     0x14000321f
   1400031ee:	lea    rcx,[rsp+0x40]
   1400031f3:	call   0x1400048b8
   1400031f8:	mov    ebx,eax
   1400031fa:	test   eax,eax
   1400031fc:	js     0x14000321f
   1400031fe:	lea    rcx,[rsp+0x40]
   140003203:	call   0x140005e64
   140003208:	mov    ebx,eax
   14000320a:	test   eax,eax
   14000320c:	js     0x14000321f
   14000320e:	lea    rcx,[rsp+0x40]
   140003213:	call   0x140004f44
   140003218:	mov    ebx,eax
   14000321a:	jmp    0x14000321f
   14000321c:	mov    rdi,rax
   14000321f:	cmp    QWORD PTR [rbp+0xb0],rdi
   140003226:	jbe    0x140003245
   140003228:	mov    ecx,0x2
   14000322d:	call   0x140008dc8
   140003232:	mov    rcx,rax
   140003235:	lea    rdx,[rip+0x6904]        # 0x140009b40
   14000323c:	call   QWORD PTR [rip+0x5ff6]        # 0x140009238
   140003242:	mov    ebx,r13d
   140003245:	test   ebx,ebx
   140003247:	js     0x1400032e3
   14000324d:	mov    eax,DWORD PTR [rbp+0xb0]
   140003253:	lea    rcx,[rbp+0xd1]
   14000325a:	xor    edx,edx
   14000325c:	mov    DWORD PTR [rsp+0x34],eax
   140003260:	mov    BYTE PTR [rbp+0xd0],r14b
   140003267:	lea    r8d,[rdx+0x2b]
   14000326b:	call   0x140008e9e
   140003270:	lea    r9,[rsp+0x30]
   140003275:	mov    QWORD PTR [rsp+0x20],r14
   14000327a:	mov    r8d,0x4
   140003280:	lea    rdx,[rsp+0x34]
   140003285:	mov    rcx,rsi
   140003288:	mov    ebx,r13d
   14000328b:	call   QWORD PTR [rip+0x5e57]        # 0x1400090e8
   140003291:	test   eax,eax
   140003293:	je     0x1400032e3
   140003295:	lea    r9,[rsp+0x30]
   14000329a:	mov    QWORD PTR [rsp+0x20],r14
   14000329f:	mov    r8d,0x2c
   1400032a5:	lea    rdx,[rbp+0xd0]
   1400032ac:	mov    rcx,rsi
   1400032af:	call   QWORD PTR [rip+0x5e33]        # 0x1400090e8
   1400032b5:	test   eax,eax
   1400032b7:	je     0x1400032e3
   1400032b9:	mov    r8d,DWORD PTR [rbp+0xb0]
   1400032c0:	lea    r9,[rsp+0x30]
   1400032c5:	mov    rdx,QWORD PTR [rbp+0xb8]
   1400032cc:	mov    rcx,rsi
   1400032cf:	mov    ebx,r14d
   1400032d2:	mov    QWORD PTR [rsp+0x20],r14
   1400032d7:	call   QWORD PTR [rip+0x5e0b]        # 0x1400090e8
   1400032dd:	test   eax,eax
   1400032df:	cmove  ebx,r13d
   1400032e3:	mov    rcx,QWORD PTR [rbp-0x58]
   1400032e7:	call   QWORD PTR [rip+0x5ed3]        # 0x1400091c0
   1400032ed:	mov    rcx,QWORD PTR [rbp-0x40]
   1400032f1:	call   QWORD PTR [rip+0x5ec9]        # 0x1400091c0
   1400032f7:	mov    rcx,QWORD PTR [rbp-0x38]
   1400032fb:	call   QWORD PTR [rip+0x5ebf]        # 0x1400091c0
   140003301:	mov    rcx,QWORD PTR [rbp-0x30]
   140003305:	call   QWORD PTR [rip+0x5eb5]        # 0x1400091c0
   14000330b:	mov    rcx,QWORD PTR [rbp-0x28]
   14000330f:	call   QWORD PTR [rip+0x5eab]        # 0x1400091c0
   140003315:	mov    rcx,QWORD PTR [rbp-0x18]
   140003319:	call   QWORD PTR [rip+0x5ea1]        # 0x1400091c0
   14000331f:	cmp    DWORD PTR [rbp+0x70],r14d
   140003323:	je     0x140003363
   140003325:	mov    rcx,QWORD PTR [rbp+0x78]
   140003329:	call   QWORD PTR [rip+0x5e91]        # 0x1400091c0
   14000332f:	mov    rcx,QWORD PTR [rbp+0x80]
   140003336:	call   QWORD PTR [rip+0x5e84]        # 0x1400091c0
   14000333c:	mov    rcx,QWORD PTR [rbp+0x88]
   140003343:	call   QWORD PTR [rip+0x5e77]        # 0x1400091c0
   140003349:	mov    rcx,QWORD PTR [rbp+0x90]
   140003350:	call   QWORD PTR [rip+0x5e6a]        # 0x1400091c0
   140003356:	mov    rcx,QWORD PTR [rbp+0xa0]
   14000335d:	call   QWORD PTR [rip+0x5e5d]        # 0x1400091c0
   140003363:	cmp    DWORD PTR [rbp-0x10],r14d
   140003367:	je     0x14000339b
   140003369:	mov    rcx,QWORD PTR [rbp-0x8]
   14000336d:	call   QWORD PTR [rip+0x5e4d]        # 0x1400091c0
   140003373:	mov    rcx,QWORD PTR [rbp+0x0]
   140003377:	call   QWORD PTR [rip+0x5e43]        # 0x1400091c0
   14000337d:	mov    rcx,QWORD PTR [rbp+0x8]
   140003381:	call   QWORD PTR [rip+0x5e39]        # 0x1400091c0
   140003387:	mov    rcx,QWORD PTR [rbp+0x10]
   14000338b:	call   QWORD PTR [rip+0x5e2f]        # 0x1400091c0
   140003391:	mov    rcx,QWORD PTR [rbp+0x20]
   140003395:	call   QWORD PTR [rip+0x5e25]        # 0x1400091c0
   14000339b:	mov    rcx,QWORD PTR [rbp+0x40]
   14000339f:	call   QWORD PTR [rip+0x5e1b]        # 0x1400091c0
   1400033a5:	mov    rcx,QWORD PTR [rbp+0x48]
   1400033a9:	call   QWORD PTR [rip+0x5e11]        # 0x1400091c0
   1400033af:	mov    rcx,QWORD PTR [rbp+0x50]
   1400033b3:	call   QWORD PTR [rip+0x5e07]        # 0x1400091c0
   1400033b9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400033bd:	call   QWORD PTR [rip+0x5dfd]        # 0x1400091c0
   1400033c3:	mov    rcx,QWORD PTR [rbp+0x68]
   1400033c7:	call   QWORD PTR [rip+0x5df3]        # 0x1400091c0
   1400033cd:	mov    rcx,QWORD PTR [rbp+0xb8]
   1400033d4:	call   QWORD PTR [rip+0x5de6]        # 0x1400091c0
   1400033da:	mov    eax,ebx
   1400033dc:	mov    rcx,QWORD PTR [rbp+0x100]
   1400033e3:	xor    rcx,rsp
   1400033e6:	call   0x140008740
   1400033eb:	mov    rbx,QWORD PTR [rsp+0x250]
   1400033f3:	add    rsp,0x210
   1400033fa:	pop    r14
   1400033fc:	pop    r13
   1400033fe:	pop    rdi
   1400033ff:	pop    rsi
   140003400:	pop    rbp
   140003401:	ret    
   140003402:	int3   
   140003403:	int3   
   140003404:	int3   
   140003405:	int3   
   140003406:	int3   
   140003407:	int3   
   140003408:	rex push rbp
   14000340a:	lea    rbp,[rsp-0x30]
   14000340f:	sub    rsp,0x130
   140003416:	mov    rax,QWORD PTR [rip+0x8bfb]        # 0x14000c018
   14000341d:	xor    rax,rsp
   140003420:	mov    QWORD PTR [rbp+0x20],rax
   140003424:	and    DWORD PTR [rsp],0x0
   140003428:	mov    r8,rcx
   14000342b:	and    DWORD PTR [rbp-0x70],0x0
   14000342f:	mov    ecx,0x7ffff
   140003434:	or     DWORD PTR [rbp+0x10],0xffffffff
   140003438:	mov    eax,0x7fffffff
   14000343d:	mov    DWORD PTR [rsp+0x7c],eax
   140003441:	mov    r9d,0x1ffff
   140003447:	mov    DWORD PTR [rbp+0xc],eax
   14000344a:	mov    r11d,0x7f
   140003450:	mov    rax,QWORD PTR [r8+0x10]
   140003454:	mov    r10d,0x1fff
   14000345a:	mov    DWORD PTR [rsp+0x4c],ecx
   14000345e:	mov    DWORD PTR [rsp+0x44],r9d
   140003463:	mov    DWORD PTR [rbp-0x24],ecx
   140003466:	movsxd rcx,edx
   140003469:	mov    DWORD PTR [rbp-0x2c],r9d
   14000346d:	xor    r9d,r9d
   140003470:	mov    DWORD PTR [rsp+0x4],0x1
   140003478:	mov    DWORD PTR [rsp+0x8],0x3
   140003480:	mov    edx,DWORD PTR [rax+rcx*4]
   140003483:	mov    eax,DWORD PTR [r8+0x8]
   140003487:	shl    rdx,0x6
   14000348b:	add    rdx,QWORD PTR [r8+0x20]
   14000348f:	inc    eax
   140003491:	mov    DWORD PTR [rsp+0xc],0x7
   140003499:	mov    DWORD PTR [rsp+0x10],0xd
   1400034a1:	mov    DWORD PTR [rsp+0x14],0x1f
   1400034a9:	mov    DWORD PTR [rsp+0x18],0x3d
   1400034b1:	mov    DWORD PTR [rsp+0x1c],r11d
   1400034b6:	mov    DWORD PTR [rsp+0x20],0xfb
   1400034be:	mov    DWORD PTR [rsp+0x24],0x1fd
   1400034c6:	mov    DWORD PTR [rsp+0x28],0x3fd
   1400034ce:	mov    DWORD PTR [rsp+0x2c],0x7f7
   1400034d6:	mov    DWORD PTR [rsp+0x30],0xffd
   1400034de:	mov    DWORD PTR [rsp+0x34],r10d
   1400034e3:	mov    DWORD PTR [rsp+0x38],0x3ffd
   1400034eb:	mov    DWORD PTR [rsp+0x3c],0x7fed
   1400034f3:	mov    DWORD PTR [rsp+0x40],0xfff1
   1400034fb:	mov    DWORD PTR [rsp+0x48],0x3fffb
   140003503:	mov    DWORD PTR [rsp+0x50],0xffffd
   14000350b:	mov    DWORD PTR [rsp+0x54],0x1ffff7
   140003513:	mov    DWORD PTR [rsp+0x58],0x3ffffd
   14000351b:	mov    DWORD PTR [rsp+0x5c],0x7ffff1
   140003523:	mov    DWORD PTR [rsp+0x60],0xfffffd
   14000352b:	mov    DWORD PTR [rsp+0x64],0x1ffffd9
   140003533:	mov    DWORD PTR [rsp+0x68],0x3fffffb
   14000353b:	mov    DWORD PTR [rsp+0x6c],0x7ffffd9
   140003543:	mov    DWORD PTR [rsp+0x70],0xfffffc7
   14000354b:	mov    DWORD PTR [rsp+0x74],0x1ffffffd
   140003553:	mov    DWORD PTR [rsp+0x78],0x3fffffdd
   14000355b:	mov    DWORD PTR [rbp-0x80],0xfffffffb
   140003562:	mov    r8d,DWORD PTR [rsp+rax*4]
   140003566:	mov    DWORD PTR [rbp-0x6c],0x1
   14000356d:	mov    DWORD PTR [rbp-0x68],0x3
   140003574:	mov    DWORD PTR [rbp-0x64],0x7
   14000357b:	mov    DWORD PTR [rbp-0x60],0xf
   140003582:	mov    DWORD PTR [rbp-0x5c],0x1f
   140003589:	mov    DWORD PTR [rbp-0x58],0x3f
   140003590:	mov    DWORD PTR [rbp-0x54],r11d
   140003594:	mov    DWORD PTR [rbp-0x50],0xff
   14000359b:	mov    DWORD PTR [rbp-0x4c],0x1ff
   1400035a2:	mov    DWORD PTR [rbp-0x48],0x3ff
   1400035a9:	mov    DWORD PTR [rbp-0x44],0x7ff
   1400035b0:	mov    DWORD PTR [rbp-0x40],0xfff
   1400035b7:	mov    DWORD PTR [rbp-0x3c],r10d
   1400035bb:	mov    DWORD PTR [rbp-0x38],0x3fff
   1400035c2:	mov    DWORD PTR [rbp-0x34],0x7fff
   1400035c9:	mov    DWORD PTR [rbp-0x30],0xffff
   1400035d0:	mov    DWORD PTR [rbp-0x28],0x3ffff
   1400035d7:	mov    DWORD PTR [rbp-0x20],0xfffff
   1400035de:	mov    DWORD PTR [rbp-0x1c],0x1fffff
   1400035e5:	mov    DWORD PTR [rbp-0x18],0x3fffff
   1400035ec:	mov    DWORD PTR [rbp-0x14],0x7fffff
   1400035f3:	mov    DWORD PTR [rbp-0x10],0xffffff
   1400035fa:	mov    DWORD PTR [rbp-0xc],0x1ffffff
   140003601:	mov    DWORD PTR [rbp-0x8],0x3ffffff
   140003608:	mov    DWORD PTR [rbp-0x4],0x7ffffff
   14000360f:	mov    DWORD PTR [rbp+0x0],0xfffffff
   140003616:	mov    DWORD PTR [rbp+0x4],0x1fffffff
   14000361d:	mov    DWORD PTR [rbp+0x8],0x3fffffff
   140003624:	mov    r10d,DWORD PTR [rbp+rax*4-0x70]
   140003629:	add    r9d,DWORD PTR [rdx]
   14000362c:	mov    ecx,DWORD PTR [rdx+0x4]
   14000362f:	imul   r9d,r8d
   140003633:	and    r9d,r10d
   140003636:	add    r9d,ecx
   140003639:	imul   r9d,r8d
   14000363d:	and    r9d,r10d
   140003640:	test   cl,0x10
   140003643:	je     0x140003650
   140003645:	add    r9d,DWORD PTR [rdx+0x18]
   140003649:	imul   r9d,r8d
   14000364d:	and    r9d,r10d
   140003650:	add    rdx,0x40
   140003654:	and    cl,0x2
   140003657:	je     0x140003629
   140003659:	mov    eax,r9d
   14000365c:	mov    rcx,QWORD PTR [rbp+0x20]
   140003660:	xor    rcx,rsp
   140003663:	call   0x140008740
   140003668:	add    rsp,0x130
   14000366f:	pop    rbp
   140003670:	ret    
   140003671:	int3   
   140003672:	int3   
   140003673:	int3   
   140003674:	int3   
   140003675:	int3   
   140003676:	int3   
   140003677:	int3   
   140003678:	mov    QWORD PTR [rsp+0x20],rbx
   14000367d:	mov    DWORD PTR [rsp+0x10],edx
   140003681:	push   rbp
   140003682:	push   rsi
   140003683:	push   rdi
   140003684:	push   r12
   140003686:	push   r13
   140003688:	push   r14
   14000368a:	push   r15
   14000368c:	sub    rsp,0x20
   140003690:	movsxd rbp,edx
   140003693:	mov    rbx,rcx
   140003696:	mov    edx,ebp
   140003698:	call   0x140003408
   14000369d:	mov    r15,QWORD PTR [rbx+0x238]
   1400036a4:	xor    r9d,r9d
   1400036a7:	movsxd rdi,eax
   1400036aa:	mov    esi,r9d
   1400036ad:	mov    r14,rdi
   1400036b0:	cmp    DWORD PTR [r15+rdi*4],0xffffffff
   1400036b5:	je     0x1400037bf
   1400036bb:	mov    rdx,QWORD PTR [rbx+0x10]
   1400036bf:	mov    r8d,DWORD PTR [rdx+rbp*4]
   1400036c3:	mov    eax,r8d
   1400036c6:	mov    QWORD PTR [rsp+0x60],r8
   1400036cb:	shl    rax,0x6
   1400036cf:	add    rax,QWORD PTR [rbx+0x20]
   1400036d3:	mov    QWORD PTR [rsp+0x70],rax
   1400036d8:	mov    r13,rax
   1400036db:	movsxd rax,DWORD PTR [r15+r14*4]
   1400036df:	mov    ecx,DWORD PTR [rdx+rax*4]
   1400036e2:	lea    r12,[r13+0x18]
   1400036e6:	sub    rcx,r8
   1400036e9:	shl    rcx,0x6
   1400036ed:	add    r12,rcx
   1400036f0:	mov    ecx,DWORD PTR [r12-0x18]
   1400036f5:	mov    edx,r9d
   1400036f8:	cmp    DWORD PTR [r13+0x0],ecx
   1400036fc:	mov    eax,r9d
   1400036ff:	seta   dl
   140003702:	cmp    DWORD PTR [r13+0x0],ecx
   140003706:	setb   al
   140003709:	sub    edx,eax
   14000370b:	jne    0x140003785
   14000370d:	mov    ebp,DWORD PTR [r13+0x4]
   140003711:	mov    edx,r9d
   140003714:	cmp    ebp,DWORD PTR [r12-0x14]
   140003719:	mov    eax,r9d
   14000371c:	seta   dl
   14000371f:	cmp    ebp,DWORD PTR [r12-0x14]
   140003724:	setb   al
   140003727:	sub    edx,eax
   140003729:	jne    0x140003785
   14000372b:	test   bpl,0x10
   14000372f:	je     0x14000374d
   140003731:	mov    ecx,DWORD PTR [r12]
   140003735:	mov    edx,r9d
   140003738:	cmp    DWORD PTR [r13+0x18],ecx
   14000373c:	mov    eax,r9d
   14000373f:	seta   dl
   140003742:	cmp    DWORD PTR [r13+0x18],ecx
   140003746:	setb   al
   140003749:	sub    edx,eax
   14000374b:	jne    0x140003785
   14000374d:	test   bpl,0x8
   140003751:	je     0x140003770
   140003753:	lea    rdx,[r12+0x8]
   140003758:	mov    r8d,0x20
   14000375e:	lea    rcx,[r13+0x20]
   140003762:	call   0x140008e86
   140003767:	xor    r9d,r9d
   14000376a:	mov    edx,eax
   14000376c:	test   eax,eax
   14000376e:	jne    0x140003785
   140003770:	add    r13,0x40
   140003774:	add    r12,0x40
   140003778:	and    bpl,0x2
   14000377c:	je     0x1400036f0
   140003782:	mov    edx,r9d
   140003785:	test   edx,edx
   140003787:	je     0x140003811
   14000378d:	inc    esi
   14000378f:	inc    edi
   140003791:	inc    r14
   140003794:	cmp    edi,DWORD PTR [rbx+0x240]
   14000379a:	jl     0x1400037a2
   14000379c:	mov    edi,r9d
   14000379f:	mov    r14,r9
   1400037a2:	cmp    DWORD PTR [r15+r14*4],0xffffffff
   1400037a7:	mov    rdx,QWORD PTR [rbx+0x10]
   1400037ab:	mov    r8,QWORD PTR [rsp+0x60]
   1400037b0:	mov    rax,QWORD PTR [rsp+0x70]
   1400037b5:	jne    0x1400036d8
   1400037bb:	mov    ebp,DWORD PTR [rsp+0x68]
   1400037bf:	movsxd rax,edi
   1400037c2:	mov    DWORD PTR [r15+rax*4],ebp
   1400037c6:	mov    rcx,QWORD PTR [rbx+0x238]
   1400037cd:	cmp    DWORD PTR [rcx+rax*4],0xffffffff
   1400037d1:	je     0x1400037ec
   1400037d3:	movsxd rdx,DWORD PTR [rbx+0x240]
   1400037da:	inc    rax
   1400037dd:	inc    esi
   1400037df:	cmp    rax,rdx
   1400037e2:	cmovge rax,r9
   1400037e6:	cmp    DWORD PTR [rcx+rax*4],0xffffffff
   1400037ea:	jne    0x1400037da
   1400037ec:	cmp    esi,DWORD PTR [rbx+0x244]
   1400037f2:	jle    0x1400037fa
   1400037f4:	mov    DWORD PTR [rbx+0x244],esi
   1400037fa:	mov    eax,ebp
   1400037fc:	mov    rbx,QWORD PTR [rsp+0x78]
   140003801:	add    rsp,0x20
   140003805:	pop    r15
   140003807:	pop    r14
   140003809:	pop    r13
   14000380b:	pop    r12
   14000380d:	pop    rdi
   14000380e:	pop    rsi
   14000380f:	pop    rbp
   140003810:	ret    
   140003811:	movsxd rax,edi
   140003814:	mov    eax,DWORD PTR [r15+rax*4]
   140003818:	jmp    0x1400037fc
   14000381a:	int3   
   14000381b:	int3   
   14000381c:	int3   
   14000381d:	int3   
   14000381e:	int3   
   14000381f:	int3   
   140003820:	mov    QWORD PTR [rsp+0x8],rbx
   140003825:	mov    QWORD PTR [rsp+0x10],rsi
   14000382a:	push   rdi
   14000382b:	sub    rsp,0x20
   14000382f:	mov    rdi,rcx
   140003832:	xor    ebx,ebx
   140003834:	mov    rcx,QWORD PTR [rcx+0x238]
   14000383b:	test   rcx,rcx
   14000383e:	je     0x14000384d
   140003840:	call   QWORD PTR [rip+0x597a]        # 0x1400091c0
   140003846:	mov    QWORD PTR [rdi+0x238],rbx
   14000384d:	mov    esi,DWORD PTR [rdi]
   14000384f:	add    esi,esi
   140003851:	mov    DWORD PTR [rdi+0x240],esi
   140003857:	cmp    esi,0x1fffffff
   14000385d:	ja     0x14000386c
   14000385f:	mov    ecx,esi
   140003861:	shl    ecx,0x2
   140003864:	call   QWORD PTR [rip+0x594e]        # 0x1400091b8
   14000386a:	jmp    0x14000386f
   14000386c:	mov    rax,rbx
   14000386f:	mov    QWORD PTR [rdi+0x238],rax
   140003876:	test   rax,rax
   140003879:	jne    0x140003882
   14000387b:	mov    eax,0x8007000e
   140003880:	jmp    0x1400038b2
   140003882:	movsxd r8,esi
   140003885:	or     edx,0xffffffff
   140003888:	shl    r8,0x2
   14000388c:	mov    rcx,rax
   14000388f:	call   0x140008e9e
   140003894:	mov    DWORD PTR [rdi+0x244],ebx
   14000389a:	cmp    DWORD PTR [rdi+0x4],ebx
   14000389d:	jle    0x1400038b0
   14000389f:	mov    edx,ebx
   1400038a1:	mov    rcx,rdi
   1400038a4:	call   0x140003678
   1400038a9:	inc    ebx
   1400038ab:	cmp    ebx,DWORD PTR [rdi+0x4]
   1400038ae:	jl     0x14000389f
   1400038b0:	xor    eax,eax
   1400038b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038b7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400038bc:	add    rsp,0x20
   1400038c0:	pop    rdi
   1400038c1:	ret    
   1400038c2:	int3   
   1400038c3:	int3   
   1400038c4:	int3   
   1400038c5:	int3   
   1400038c6:	int3   
   1400038c7:	int3   
   1400038c8:	int3   
   1400038c9:	int3   
   1400038ca:	int3   
   1400038cb:	int3   
   1400038cc:	int3   
   1400038cd:	int3   
   1400038ce:	int3   
   1400038cf:	int3   
   1400038d0:	mov    r8d,DWORD PTR [rdx]
   1400038d3:	xor    edx,edx
   1400038d5:	cmp    DWORD PTR [rcx],r8d
   1400038d8:	mov    eax,edx
   1400038da:	seta   al
   1400038dd:	cmp    DWORD PTR [rcx],r8d
   1400038e0:	setb   dl
   1400038e3:	sub    eax,edx
   1400038e5:	ret    
   1400038e6:	int3   
   1400038e7:	int3   
   1400038e8:	int3   
   1400038e9:	int3   
   1400038ea:	int3   
   1400038eb:	int3   
   1400038ec:	mov    rax,rsp
   1400038ef:	mov    QWORD PTR [rax+0x8],rbx
   1400038f3:	mov    QWORD PTR [rax+0x10],rbp
   1400038f7:	mov    QWORD PTR [rax+0x18],rsi
   1400038fb:	mov    QWORD PTR [rax+0x20],rdi
   1400038ff:	push   r12
   140003901:	push   r14
   140003903:	push   r15
   140003905:	sub    rsp,0x30
   140003909:	mov    rbx,rcx
   14000390c:	mov    rcx,QWORD PTR [rcx+0x28]
   140003910:	call   QWORD PTR [rip+0x58aa]        # 0x1400091c0
   140003916:	mov    rcx,QWORD PTR [rbx+0x238]
   14000391d:	and    QWORD PTR [rbx+0x28],0x0
   140003922:	call   QWORD PTR [rip+0x5898]        # 0x1400091c0
   140003928:	and    QWORD PTR [rbx+0x238],0x0
   140003930:	mov    eax,DWORD PTR [rbx+0x1c]
   140003933:	cmp    eax,0x1ffffff
   140003938:	ja     0x14000394a
   14000393a:	shl    eax,0x6
   14000393d:	mov    ecx,eax
   14000393f:	call   QWORD PTR [rip+0x5873]        # 0x1400091b8
   140003945:	mov    rdi,rax
   140003948:	jmp    0x14000394c
   14000394a:	xor    edi,edi
   14000394c:	test   rdi,rdi
   14000394f:	jne    0x140003958
   140003951:	xor    eax,eax
   140003953:	jmp    0x140003a72
   140003958:	mov    esi,DWORD PTR [rbx+0x4]
   14000395b:	cmp    esi,0x1fffffff
   140003961:	ja     0x140003973
   140003963:	mov    ecx,esi
   140003965:	shl    ecx,0x2
   140003968:	call   QWORD PTR [rip+0x584a]        # 0x1400091b8
   14000396e:	mov    r14,rax
   140003971:	jmp    0x140003976
   140003973:	xor    r14d,r14d
   140003976:	test   r14,r14
   140003979:	jne    0x140003986
   14000397b:	mov    rcx,rdi
   14000397e:	call   QWORD PTR [rip+0x583c]        # 0x1400091c0
   140003984:	jmp    0x140003951
   140003986:	xor    r8d,r8d
   140003989:	mov    r9,rdi
   14000398c:	test   esi,esi
   14000398e:	jle    0x1400039f2
   140003990:	mov    eax,DWORD PTR [rbx+0x4]
   140003993:	sub    eax,r8d
   140003996:	dec    eax
   140003998:	movsxd rcx,eax
   14000399b:	mov    rax,QWORD PTR [rbx+0x10]
   14000399f:	mov    edx,DWORD PTR [rax+rcx*4]
   1400039a2:	mov    rax,r9
   1400039a5:	shl    rdx,0x6
   1400039a9:	sub    rax,rdi
   1400039ac:	add    rdx,QWORD PTR [rbx+0x20]
   1400039b0:	sar    rax,0x6
   1400039b4:	mov    DWORD PTR [r14+rcx*4],eax
   1400039b8:	movups xmm0,XMMWORD PTR [rdx]
   1400039bb:	lea    rdx,[rdx+0x40]
   1400039bf:	movups XMMWORD PTR [r9],xmm0
   1400039c3:	movups xmm1,XMMWORD PTR [rdx-0x30]
   1400039c7:	movups XMMWORD PTR [r9+0x10],xmm1
   1400039cc:	movups xmm0,XMMWORD PTR [rdx-0x20]
   1400039d0:	movups XMMWORD PTR [r9+0x20],xmm0
   1400039d5:	movups xmm1,XMMWORD PTR [rdx-0x10]
   1400039d9:	movups XMMWORD PTR [r9+0x30],xmm1
   1400039de:	mov    eax,DWORD PTR [rdx-0x3c]
   1400039e1:	add    r9,0x40
   1400039e5:	and    al,0x2
   1400039e7:	je     0x1400039b8
   1400039e9:	inc    r8d
   1400039ec:	cmp    r8d,DWORD PTR [rbx+0x4]
   1400039f0:	jl     0x140003990
   1400039f2:	mov    rcx,QWORD PTR [rbx+0x20]
   1400039f6:	call   QWORD PTR [rip+0x57c4]        # 0x1400091c0
   1400039fc:	and    QWORD PTR [rbx+0x20],0x0
   140003a01:	mov    ebp,DWORD PTR [rbx+0x1c]
   140003a04:	mov    r15,QWORD PTR [rbx+0x10]
   140003a08:	mov    r12d,DWORD PTR [rbx+0x4]
   140003a0c:	test   ebp,ebp
   140003a0e:	je     0x140003a57
   140003a10:	lea    rsi,[rdi+0x18]
   140003a14:	dec    ebp
   140003a16:	test   BYTE PTR [rsi-0x14],0x10
   140003a1a:	je     0x140003a4f
   140003a1c:	lea    rax,[rip+0xfffffffffffffead]        # 0x1400038d0
   140003a23:	mov    r8,r12
   140003a26:	mov    r9d,0x4
   140003a2c:	mov    QWORD PTR [rsp+0x20],rax
   140003a31:	mov    rdx,r15
   140003a34:	mov    rcx,rsi
   140003a37:	call   QWORD PTR [rip+0x5813]        # 0x140009250
   140003a3d:	test   rax,rax
   140003a40:	je     0x140003a91
   140003a42:	sub    rax,r15
   140003a45:	sar    rax,0x2
   140003a49:	mov    eax,DWORD PTR [r14+rax*4]
   140003a4d:	mov    DWORD PTR [rsi],eax
   140003a4f:	add    rsi,0x40
   140003a53:	test   ebp,ebp
   140003a55:	jne    0x140003a14
   140003a57:	mov    rcx,QWORD PTR [rbx+0x10]
   140003a5b:	call   QWORD PTR [rip+0x575f]        # 0x1400091c0
   140003a61:	and    QWORD PTR [rbx+0x10],0x0
   140003a66:	mov    rcx,r14
   140003a69:	call   QWORD PTR [rip+0x5751]        # 0x1400091c0
   140003a6f:	mov    rax,rdi
   140003a72:	mov    rbx,QWORD PTR [rsp+0x50]
   140003a77:	mov    rbp,QWORD PTR [rsp+0x58]
   140003a7c:	mov    rsi,QWORD PTR [rsp+0x60]
   140003a81:	mov    rdi,QWORD PTR [rsp+0x68]
   140003a86:	add    rsp,0x30
   140003a8a:	pop    r15
   140003a8c:	pop    r14
   140003a8e:	pop    r12
   140003a90:	ret    
   140003a91:	mov    ecx,0x1
   140003a96:	call   QWORD PTR [rip+0x572c]        # 0x1400091c8
   140003a9c:	int3   
   140003a9d:	int3   
   140003a9e:	int3   
   140003a9f:	int3   
   140003aa0:	int3   
   140003aa1:	int3   
   140003aa2:	int3   
   140003aa3:	int3   
   140003aa4:	mov    QWORD PTR [rsp+0x8],rbx
   140003aa9:	mov    QWORD PTR [rsp+0x10],rsi
   140003aae:	push   rdi
   140003aaf:	sub    rsp,0x20
   140003ab3:	dec    DWORD PTR [rcx+0x30]
   140003ab6:	mov    rbx,rcx
   140003ab9:	movsxd r8,DWORD PTR [rcx+0x30]
   140003abd:	mov    eax,DWORD PTR [rcx+r8*4+0x38]
   140003ac2:	sub    DWORD PTR [rcx+0x34],eax
   140003ac5:	movsxd rax,DWORD PTR [rcx+r8*4+0x38]
   140003aca:	movsxd rdx,DWORD PTR [rcx+0x34]
   140003ace:	add    rdx,rax
   140003ad1:	mov    rax,QWORD PTR [rcx+0x28]
   140003ad5:	shl    rdx,0x6
   140003ad9:	or     DWORD PTR [rdx+rax*1-0x3c],0x2
   140003ade:	mov    edx,DWORD PTR [rcx+0x18]
   140003ae1:	movsxd rax,DWORD PTR [rcx+0x30]
   140003ae5:	mov    ecx,DWORD PTR [rcx+rax*4+0x38]
   140003ae9:	add    ecx,DWORD PTR [rbx+0x1c]
   140003aec:	cmp    edx,ecx
   140003aee:	jae    0x140003b12
   140003af0:	add    edx,edx
   140003af2:	lea    rcx,[rbx+0x20]
   140003af6:	mov    r8d,0x40
   140003afc:	mov    DWORD PTR [rbx+0x18],edx
   140003aff:	call   0x140008204
   140003b04:	test   eax,eax
   140003b06:	jne    0x140003b12
   140003b08:	mov    eax,0x8007000e
   140003b0d:	jmp    0x140003bd3
   140003b12:	movsxd rax,DWORD PTR [rbx+0x30]
   140003b16:	movsxd rdx,DWORD PTR [rbx+0x34]
   140003b1a:	mov    ecx,DWORD PTR [rbx+0x1c]
   140003b1d:	shl    rdx,0x6
   140003b21:	movsxd r8,DWORD PTR [rbx+rax*4+0x38]
   140003b26:	add    rdx,QWORD PTR [rbx+0x28]
   140003b2a:	shl    rcx,0x6
   140003b2e:	add    rcx,QWORD PTR [rbx+0x20]
   140003b32:	shl    r8,0x6
   140003b36:	call   0x140008e92
   140003b3b:	movsxd rdx,DWORD PTR [rbx+0x4]
   140003b3f:	lea    rdi,[rbx+0x10]
   140003b43:	mov    rcx,QWORD PTR [rdi]
   140003b46:	mov    eax,DWORD PTR [rbx+0x1c]
   140003b49:	mov    DWORD PTR [rcx+rdx*4],eax
   140003b4c:	mov    rcx,rbx
   140003b4f:	mov    edx,DWORD PTR [rbx+0x4]
   140003b52:	call   0x140003678
   140003b57:	mov    r8d,DWORD PTR [rbx+0x4]
   140003b5b:	movsxd rsi,eax
   140003b5e:	cmp    esi,r8d
   140003b61:	jne    0x140003ba4
   140003b63:	movsxd rcx,DWORD PTR [rbx+0x30]
   140003b67:	mov    edx,DWORD PTR [rbx+rcx*4+0x38]
   140003b6b:	lea    ecx,[r8+0x1]
   140003b6f:	add    DWORD PTR [rbx+0x1c],edx
   140003b72:	mov    edx,DWORD PTR [rbx]
   140003b74:	mov    DWORD PTR [rbx+0x4],ecx
   140003b77:	cmp    edx,ecx
   140003b79:	jg     0x140003ba4
   140003b7b:	inc    DWORD PTR [rbx+0x8]
   140003b7e:	add    edx,edx
   140003b80:	mov    r8d,0x4
   140003b86:	mov    DWORD PTR [rbx],edx
   140003b88:	mov    rcx,rdi
   140003b8b:	call   0x140008204
   140003b90:	test   eax,eax
   140003b92:	je     0x140003b08
   140003b98:	mov    rcx,rbx
   140003b9b:	call   0x140003820
   140003ba0:	test   eax,eax
   140003ba2:	js     0x140003bd3
   140003ba4:	cmp    DWORD PTR [rbx+0x34],0x0
   140003ba8:	jle    0x140003bd1
   140003baa:	mov    rax,QWORD PTR [rdi]
   140003bad:	movsxd rdx,DWORD PTR [rbx+0x34]
   140003bb1:	mov    rcx,QWORD PTR [rbx+0x28]
   140003bb5:	shl    rdx,0x6
   140003bb9:	mov    eax,DWORD PTR [rax+rsi*4]
   140003bbc:	mov    DWORD PTR [rdx+rcx*1-0x28],eax
   140003bc0:	movsxd rcx,DWORD PTR [rbx+0x34]
   140003bc4:	mov    rax,QWORD PTR [rbx+0x28]
   140003bc8:	shl    rcx,0x6
   140003bcc:	or     DWORD PTR [rcx+rax*1-0x3c],0x10
   140003bd1:	xor    eax,eax
   140003bd3:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bd8:	mov    rsi,QWORD PTR [rsp+0x38]
   140003bdd:	add    rsp,0x20
   140003be1:	pop    rdi
   140003be2:	ret    
   140003be3:	int3   
   140003be4:	int3   
   140003be5:	int3   
   140003be6:	int3   
   140003be7:	int3   
   140003be8:	int3   
   140003be9:	int3   
   140003bea:	int3   
   140003beb:	int3   
   140003bec:	mov    QWORD PTR [rsp+0x18],rbx
   140003bf1:	push   rbp
   140003bf2:	push   rsi
   140003bf3:	push   rdi
   140003bf4:	push   r12
   140003bf6:	push   r13
   140003bf8:	push   r14
   140003bfa:	push   r15
   140003bfc:	lea    rbp,[rsp-0x1180]
   140003c04:	mov    eax,0x1280
   140003c09:	call   0x140008ee0
   140003c0e:	sub    rsp,rax
   140003c11:	mov    rax,QWORD PTR [rip+0x8400]        # 0x14000c018
   140003c18:	xor    rax,rsp
   140003c1b:	mov    QWORD PTR [rbp+0x1170],rax
   140003c22:	mov    r14,rdx
   140003c25:	mov    QWORD PTR [rsp+0x48],rcx
   140003c2a:	mov    rbx,rcx
   140003c2d:	xor    edx,edx
   140003c2f:	lea    rcx,[rsp+0x50]
   140003c34:	mov    r8d,0x248
   140003c3a:	call   0x140008e9e
   140003c3f:	mov    ecx,0x1000
   140003c44:	mov    DWORD PTR [rsp+0x58],0xa
   140003c4c:	mov    DWORD PTR [rsp+0x50],0x400
   140003c54:	call   QWORD PTR [rip+0x555e]        # 0x1400091b8
   140003c5a:	xor    r15d,r15d
   140003c5d:	mov    QWORD PTR [rsp+0x60],rax
   140003c62:	test   rax,rax
   140003c65:	je     0x140003f0a
   140003c6b:	mov    ecx,0x20000
   140003c70:	mov    DWORD PTR [rsp+0x68],0x800
   140003c78:	call   QWORD PTR [rip+0x553a]        # 0x1400091b8
   140003c7e:	mov    QWORD PTR [rsp+0x70],rax
   140003c83:	test   rax,rax
   140003c86:	je     0x140003f0a
   140003c8c:	cmp    DWORD PTR [r14+0x18],0x1ffffff
   140003c94:	ja     0x140003ca6
   140003c96:	mov    ecx,DWORD PTR [r14+0x18]
   140003c9a:	lea    edx,[r15+0x40]
   140003c9e:	call   QWORD PTR [rip+0x55bc]        # 0x140009260
   140003ca4:	jmp    0x140003ca9
   140003ca6:	mov    rax,r15
   140003ca9:	mov    QWORD PTR [rsp+0x78],rax
   140003cae:	test   rax,rax
   140003cb1:	je     0x140003f0a
   140003cb7:	lea    rcx,[rsp+0x50]
   140003cbc:	call   0x140003820
   140003cc1:	test   eax,eax
   140003cc3:	js     0x140003f30
   140003cc9:	lea    rax,[rsp+0x40]
   140003cce:	mov    WORD PTR [rbp+0x1d0],r15w
   140003cd6:	mov    QWORD PTR [rsp+0x30],rax
   140003cdb:	lea    r9,[rbp+0x1a0]
   140003ce2:	lea    rax,[rbp+0x1c0]
   140003ce9:	mov    DWORD PTR [rsp+0x28],0x8
   140003cf1:	lea    rdx,[rbp+0x9a0]
   140003cf8:	mov    QWORD PTR [rsp+0x20],rax
   140003cfd:	mov    rcx,rbx
   140003d00:	mov    BYTE PTR [rsp+0x40],0x1
   140003d05:	lea    r12,[rbp+0x9a0]
   140003d0c:	lea    r13,[rbp+0x1d0]
   140003d13:	call   0x140002704
   140003d18:	test   eax,eax
   140003d1a:	jle    0x140003eee
   140003d20:	mov    edi,DWORD PTR [rbp-0x7c]
   140003d23:	mov    rbx,QWORD PTR [rsp+0x78]
   140003d28:	movzx  eax,WORD PTR [r12]
   140003d2d:	mov    rsi,r12
   140003d30:	mov    rcx,r13
   140003d33:	cmp    WORD PTR [r13+0x0],ax
   140003d38:	jne    0x140003d4a
   140003d3a:	add    rsi,0x2
   140003d3e:	add    rcx,0x2
   140003d42:	movzx  eax,WORD PTR [rsi]
   140003d45:	cmp    WORD PTR [rcx],ax
   140003d48:	je     0x140003d3a
   140003d4a:	lea    rdx,[rsp+0x44]
   140003d4f:	call   0x1400026b4
   140003d54:	mov    r15d,DWORD PTR [rsp+0x44]
   140003d59:	test   r15d,r15d
   140003d5c:	jle    0x140003db9
   140003d5e:	sub    r15d,0x1
   140003d62:	je     0x140003d84
   140003d64:	lea    rcx,[rsp+0x50]
   140003d69:	call   0x140003aa4
   140003d6e:	test   eax,eax
   140003d70:	js     0x140003f30
   140003d76:	sub    r15d,0x1
   140003d7a:	jne    0x140003d64
   140003d7c:	mov    edi,DWORD PTR [rbp-0x7c]
   140003d7f:	mov    rbx,QWORD PTR [rsp+0x78]
   140003d84:	movzx  eax,WORD PTR [rsi]
   140003d87:	xor    r15d,r15d
   140003d8a:	movsxd rcx,edi
   140003d8d:	shl    rcx,0x6
   140003d91:	mov    DWORD PTR [rcx+rbx*1],eax
   140003d94:	movsxd rax,DWORD PTR [rbp-0x80]
   140003d98:	mov    DWORD PTR [rcx+rbx*1+0x4],r15d
   140003d9d:	mov    DWORD PTR [rcx+rbx*1+0x18],r15d
   140003da2:	inc    DWORD PTR [rbp+rax*4-0x7c]
   140003da6:	mov    edi,DWORD PTR [rbp-0x7c]
   140003da9:	inc    edi
   140003dab:	add    rsi,0x2
   140003daf:	mov    rbx,QWORD PTR [rsp+0x78]
   140003db4:	mov    DWORD PTR [rbp-0x7c],edi
   140003db7:	jmp    0x140003dbc
   140003db9:	xor    r15d,r15d
   140003dbc:	movzx  eax,WORD PTR [rsi]
   140003dbf:	test   ax,ax
   140003dc2:	je     0x140003df9
   140003dc4:	movsxd rcx,edi
   140003dc7:	lea    rsi,[rsi+0x2]
   140003dcb:	shl    rcx,0x6
   140003dcf:	movzx  eax,ax
   140003dd2:	mov    DWORD PTR [rcx+rbx*1],eax
   140003dd5:	movsxd rax,DWORD PTR [rbp-0x80]
   140003dd9:	mov    DWORD PTR [rcx+rbx*1+0x4],r15d
   140003dde:	mov    QWORD PTR [rcx+rbx*1+0x18],0x0
   140003de7:	mov    DWORD PTR [rbp+rax*4-0x78],0x1
   140003def:	inc    DWORD PTR [rbp-0x80]
   140003df2:	mov    edi,DWORD PTR [rbp-0x7c]
   140003df5:	inc    edi
   140003df7:	jmp    0x140003daf
   140003df9:	cmp    BYTE PTR [rsp+0x40],r15b
   140003dfe:	je     0x140003e0c
   140003e00:	movsxd rax,edi
   140003e03:	shl    rax,0x6
   140003e07:	or     DWORD PTR [rax+rbx*1-0x3c],0x1
   140003e0c:	lea    eax,[rdi-0x1]
   140003e0f:	xor    edx,edx
   140003e11:	movsxd rcx,eax
   140003e14:	mov    esi,r15d
   140003e17:	shl    rcx,0x6
   140003e1b:	add    rcx,0x20
   140003e1f:	add    rcx,rbx
   140003e22:	lea    r8d,[rdx+0x20]
   140003e26:	call   0x140008e9e
   140003e2b:	lea    rax,[rbp+0x1c0]
   140003e32:	mov    r10,r14
   140003e35:	sub    r10,rax
   140003e38:	mov    r9d,r15d
   140003e3b:	mov    r8,r15
   140003e3e:	lea    rax,[rbp+0x1c0]
   140003e45:	add    rax,r8
   140003e48:	cmp    BYTE PTR [r10+rax*1+0x60],r15b
   140003e4d:	je     0x140003e87
   140003e4f:	cmp    BYTE PTR [rax],r15b
   140003e52:	je     0x140003e87
   140003e54:	mov    eax,DWORD PTR [rbp+r8*4+0x1a0]
   140003e5c:	mov    esi,0x1
   140003e61:	movsxd rdx,edi
   140003e64:	dec    rdx
   140003e67:	mov    rcx,rdx
   140003e6a:	shl    rdx,0x6
   140003e6e:	shl    rcx,0x4
   140003e72:	add    rcx,r8
   140003e75:	mov    DWORD PTR [rbx+rcx*4+0x20],eax
   140003e79:	mov    ecx,r9d
   140003e7c:	mov    eax,0x10000
   140003e81:	shl    eax,cl
   140003e83:	or     DWORD PTR [rdx+rbx*1+0x4],eax
   140003e87:	inc    r9d
   140003e8a:	inc    r8
   140003e8d:	cmp    r9d,0x8
   140003e91:	jl     0x140003e3e
   140003e93:	test   esi,esi
   140003e95:	je     0x140003ea3
   140003e97:	movsxd rax,edi
   140003e9a:	shl    rax,0x6
   140003e9e:	or     DWORD PTR [rax+rbx*1-0x3c],0x8
   140003ea3:	mov    rcx,QWORD PTR [rsp+0x48]
   140003ea8:	lea    rax,[rsp+0x40]
   140003ead:	mov    QWORD PTR [rsp+0x30],rax
   140003eb2:	lea    r9,[rbp+0x1a0]
   140003eb9:	mov    rdx,r13
   140003ebc:	mov    DWORD PTR [rsp+0x28],0x8
   140003ec4:	lea    rax,[rbp+0x1c0]
   140003ecb:	mov    r13,r12
   140003ece:	mov    QWORD PTR [rsp+0x20],rax
   140003ed3:	mov    r12,rdx
   140003ed6:	call   0x140002704
   140003edb:	test   eax,eax
   140003edd:	jg     0x140003d28
   140003ee3:	jmp    0x140003eee
   140003ee5:	call   0x140003aa4
   140003eea:	test   eax,eax
   140003eec:	js     0x140003f30
   140003eee:	lea    rcx,[rsp+0x50]
   140003ef3:	cmp    DWORD PTR [rbp-0x80],r15d
   140003ef7:	jne    0x140003ee5
   140003ef9:	call   0x1400038ec
   140003efe:	mov    QWORD PTR [r14+0x178],rax
   140003f05:	test   rax,rax
   140003f08:	jne    0x140003f11
   140003f0a:	mov    eax,0x8007000e
   140003f0f:	jmp    0x140003f30
   140003f11:	mov    ecx,DWORD PTR [rsp+0x6c]
   140003f15:	mov    eax,DWORD PTR [rsp+0x54]
   140003f19:	mov    DWORD PTR [r14+0x24],eax
   140003f1d:	mov    eax,ecx
   140003f1f:	shl    rax,0x6
   140003f23:	mov    QWORD PTR [r14+0x170],rax
   140003f2a:	xor    eax,eax
   140003f2c:	mov    DWORD PTR [r14+0x20],ecx
   140003f30:	mov    rcx,QWORD PTR [rbp+0x1170]
   140003f37:	xor    rcx,rsp
   140003f3a:	call   0x140008740
   140003f3f:	mov    rbx,QWORD PTR [rsp+0x12d0]
   140003f47:	add    rsp,0x1280
   140003f4e:	pop    r15
   140003f50:	pop    r14
   140003f52:	pop    r13
   140003f54:	pop    r12
   140003f56:	pop    rdi
   140003f57:	pop    rsi
   140003f58:	pop    rbp
   140003f59:	ret    
   140003f5a:	int3   
   140003f5b:	int3   
   140003f5c:	int3   
   140003f5d:	int3   
   140003f5e:	int3   
   140003f5f:	int3   
   140003f60:	mov    QWORD PTR [rsp+0x8],rbx
   140003f65:	mov    QWORD PTR [rsp+0x10],rbp
   140003f6a:	mov    QWORD PTR [rsp+0x18],rsi
   140003f6f:	push   rdi
   140003f70:	push   r14
   140003f72:	push   r15
   140003f74:	sub    rsp,0x20
   140003f78:	mov    edi,DWORD PTR [rcx+0x20]
   140003f7b:	xor    r14d,r14d
   140003f7e:	mov    rbx,rcx
   140003f81:	cmp    edi,0xaaaaaaa
   140003f87:	ja     0x140003f9a
   140003f89:	mov    ecx,edi
   140003f8b:	lea    edx,[r14+0xc]
   140003f8f:	call   QWORD PTR [rip+0x52cb]        # 0x140009260
   140003f95:	mov    r8,rax
   140003f98:	jmp    0x140003f9d
   140003f9a:	mov    r8,r14
   140003f9d:	test   r8,r8
   140003fa0:	jne    0x140003fac
   140003fa2:	mov    eax,0x8007000e
   140003fa7:	jmp    0x140004297
   140003fac:	mov    rdx,QWORD PTR [rbx+0x178]
   140003fb3:	mov    sil,0x10
   140003fb6:	mov    QWORD PTR [rbx+0x40],r14
   140003fba:	mov    r15d,0x1
   140003fc0:	mov    DWORD PTR [rbx+0x58],r14d
   140003fc4:	test   edi,edi
   140003fc6:	je     0x140004025
   140003fc8:	add    rdx,0x1c
   140003fcc:	mov    r9,rdi
   140003fcf:	test   BYTE PTR [rdx-0x18],sil
   140003fd3:	je     0x140003fe4
   140003fd5:	add    DWORD PTR [rbx+0x44],r15d
   140003fd9:	mov    eax,DWORD PTR [rdx-0x4]
   140003fdc:	lea    rcx,[rax+rax*2]
   140003fe0:	add    DWORD PTR [r8+rcx*4],r15d
   140003fe4:	test   BYTE PTR [rdx-0x18],0x20
   140003fe8:	je     0x140003ff9
   140003fea:	add    DWORD PTR [rbx+0x58],r15d
   140003fee:	mov    eax,DWORD PTR [rdx]
   140003ff0:	lea    rcx,[rax+rax*2]
   140003ff4:	add    DWORD PTR [r8+rcx*4+0x4],r15d
   140003ff9:	mov    ecx,0x10000
   140003ffe:	mov    rax,r14
   140004001:	test   DWORD PTR [rdx-0x18],ecx
   140004004:	je     0x140004011
   140004006:	cmp    BYTE PTR [rax+rbx*1+0x60],r14b
   14000400b:	je     0x140004011
   14000400d:	add    DWORD PTR [rbx+0x40],r15d
   140004011:	add    ecx,ecx
   140004013:	add    rax,r15
   140004016:	cmp    rax,0x8
   14000401a:	jb     0x140004001
   14000401c:	add    rdx,0x40
   140004020:	sub    r9,r15
   140004023:	jne    0x140003fcf
   140004025:	mov    QWORD PTR [rbx+0x28],r15
   140004029:	mov    DWORD PTR [rbx+0x30],r14d
   14000402d:	mov    DWORD PTR [rbx+0xb0],r14d
   140004034:	test   edi,edi
   140004036:	je     0x140004080
   140004038:	mov    rax,r8
   14000403b:	mov    rcx,rdi
   14000403e:	cmp    DWORD PTR [rax],r14d
   140004041:	je     0x140004061
   140004043:	cmp    DWORD PTR [rax+0x4],r14d
   140004047:	je     0x14000404d
   140004049:	add    DWORD PTR [rbx+0x30],r15d
   14000404d:	cmp    DWORD PTR [rax],r14d
   140004050:	je     0x140004061
   140004052:	cmp    DWORD PTR [rax+0x4],r14d
   140004056:	jne    0x14000405c
   140004058:	add    DWORD PTR [rbx+0x28],r15d
   14000405c:	cmp    DWORD PTR [rax],r14d
   14000405f:	jne    0x14000406b
   140004061:	cmp    DWORD PTR [rax+0x4],r14d
   140004065:	je     0x14000406b
   140004067:	add    DWORD PTR [rbx+0x2c],r15d
   14000406b:	cmp    DWORD PTR [rax],r15d
   14000406e:	jbe    0x140004077
   140004070:	add    DWORD PTR [rbx+0xb0],r15d
   140004077:	add    rax,0xc
   14000407b:	sub    rcx,r15
   14000407e:	jne    0x14000403e
   140004080:	mov    rcx,QWORD PTR [rbx+0x178]
   140004087:	mov    edx,r14d
   14000408a:	mov    QWORD PTR [rbx+0x4c],r14
   14000408e:	test   edi,edi
   140004090:	je     0x1400040cd
   140004092:	add    rcx,0x4
   140004096:	mov    r9d,DWORD PTR [rcx]
   140004099:	test   sil,r9b
   14000409c:	je     0x1400040c2
   14000409e:	mov    eax,DWORD PTR [rcx+0x14]
   1400040a1:	lea    r10,[rax+rax*2]
   1400040a5:	cmp    DWORD PTR [r8+r10*4],r15d
   1400040a9:	jbe    0x1400040b9
   1400040ab:	bts    r9d,0x7
   1400040b0:	mov    DWORD PTR [rcx],r9d
   1400040b3:	add    DWORD PTR [rbx+0x50],r15d
   1400040b7:	jmp    0x1400040c2
   1400040b9:	mov    DWORD PTR [r8+r10*4+0x8],edx
   1400040be:	add    DWORD PTR [rbx+0x4c],r15d
   1400040c2:	add    rcx,0x40
   1400040c6:	add    edx,r15d
   1400040c9:	cmp    edx,edi
   1400040cb:	jb     0x140004096
   1400040cd:	mov    r10,QWORD PTR [rbx+0x178]
   1400040d4:	mov    r11d,r14d
   1400040d7:	test   edi,edi
   1400040d9:	je     0x140004174
   1400040df:	mov    r9,r14
   1400040e2:	mov    rcx,r14
   1400040e5:	mov    dl,r14b
   1400040e8:	mov    eax,DWORD PTR [r10+0x4]
   1400040ec:	shr    eax,1
   1400040ee:	and    al,r15b
   1400040f1:	test   BYTE PTR [r10+0x4],sil
   1400040f5:	je     0x140004109
   1400040f7:	test   BYTE PTR [r10+0x4],0x80
   1400040fc:	je     0x140004106
   1400040fe:	mov    r9,r10
   140004101:	add    rcx,r15
   140004104:	jmp    0x140004109
   140004106:	mov    dl,r15b
   140004109:	add    r10,0x40
   14000410d:	add    r11d,r15d
   140004110:	test   al,al
   140004112:	je     0x1400040e8
   140004114:	test   dl,dl
   140004116:	jne    0x14000416b
   140004118:	cmp    rcx,r15
   14000411b:	jne    0x14000416b
   14000411d:	test   r9,r9
   140004120:	je     0x14000416b
   140004122:	mov    eax,DWORD PTR [r9+0x18]
   140004126:	lea    rcx,[rax+rax*2]
   14000412a:	cmp    DWORD PTR [r8+rcx*4],r14d
   14000412e:	je     0x14000416b
   140004130:	cmp    DWORD PTR [r8+rcx*4+0x8],r14d
   140004135:	jne    0x14000416b
   140004137:	dec    DWORD PTR [rbx+0x50]
   14000413a:	mov    rdx,r10
   14000413d:	add    DWORD PTR [rbx+0x4c],r15d
   140004141:	mov    eax,DWORD PTR [r9+0x18]
   140004145:	btr    DWORD PTR [r9+0x4],0x7
   14000414b:	lea    rcx,[rax+rax*2]
   14000414f:	mov    DWORD PTR [r8+rcx*4],r14d
   140004153:	mov    eax,DWORD PTR [r9+0x18]
   140004157:	sub    rdx,QWORD PTR [rbx+0x178]
   14000415e:	sar    rdx,0x6
   140004162:	lea    rcx,[rax+rax*2]
   140004166:	mov    DWORD PTR [r8+rcx*4+0x8],edx
   14000416b:	cmp    r11d,edi
   14000416e:	jb     0x1400040df
   140004174:	mov    r9,QWORD PTR [rbx+0x178]
   14000417b:	mov    ebp,r14d
   14000417e:	test   edi,edi
   140004180:	je     0x140004225
   140004186:	mov    r11,r14
   140004189:	mov    r10,r14
   14000418c:	mov    sil,r14b
   14000418f:	mov    edx,DWORD PTR [r9+0x4]
   140004193:	shr    edx,1
   140004195:	and    dl,r15b
   140004198:	test   BYTE PTR [r9+0x4],0x10
   14000419d:	je     0x1400041bf
   14000419f:	test   BYTE PTR [r9+0x4],0x80
   1400041a4:	je     0x1400041bc
   1400041a6:	mov    eax,DWORD PTR [r9+0x18]
   1400041aa:	lea    rcx,[rax+rax*2]
   1400041ae:	cmp    DWORD PTR [r8+rcx*4],r14d
   1400041b2:	je     0x1400041bf
   1400041b4:	mov    r11,r9
   1400041b7:	add    r10,r15
   1400041ba:	jmp    0x1400041bf
   1400041bc:	mov    sil,r15b
   1400041bf:	add    r9,0x40
   1400041c3:	add    ebp,r15d
   1400041c6:	test   dl,dl
   1400041c8:	je     0x14000418f
   1400041ca:	test   sil,sil
   1400041cd:	jne    0x14000421d
   1400041cf:	test   r10,r10
   1400041d2:	je     0x14000421d
   1400041d4:	mov    eax,DWORD PTR [r11+0x18]
   1400041d8:	lea    rcx,[rax+rax*2]
   1400041dc:	cmp    DWORD PTR [r8+rcx*4],r14d
   1400041e0:	je     0x14000421d
   1400041e2:	cmp    DWORD PTR [r8+rcx*4+0x8],r14d
   1400041e7:	jne    0x14000421d
   1400041e9:	dec    DWORD PTR [rbx+0x50]
   1400041ec:	mov    rdx,r9
   1400041ef:	add    DWORD PTR [rbx+0x4c],r15d
   1400041f3:	mov    eax,DWORD PTR [r11+0x18]
   1400041f7:	btr    DWORD PTR [r11+0x4],0x7
   1400041fd:	lea    rcx,[rax+rax*2]
   140004201:	mov    DWORD PTR [r8+rcx*4],r14d
   140004205:	mov    eax,DWORD PTR [r11+0x18]
   140004209:	sub    rdx,QWORD PTR [rbx+0x178]
   140004210:	sar    rdx,0x6
   140004214:	lea    rcx,[rax+rax*2]
   140004218:	mov    DWORD PTR [r8+rcx*4+0x8],edx
   14000421d:	cmp    ebp,edi
   14000421f:	jb     0x140004186
   140004225:	mov    r9,QWORD PTR [rbx+0x178]
   14000422c:	test   edi,edi
   14000422e:	je     0x14000428c
   140004230:	mov    r10,rdi
   140004233:	test   BYTE PTR [r9+0x4],0x80
   140004238:	je     0x140004283
   14000423a:	mov    eax,DWORD PTR [r9+0x18]
   14000423e:	lea    rcx,[rax+rax*2]
   140004242:	cmp    DWORD PTR [r8+rcx*4],r14d
   140004246:	je     0x140004283
   140004248:	cmp    DWORD PTR [r8+rcx*4+0x8],r14d
   14000424d:	jne    0x140004283
   14000424f:	dec    DWORD PTR [rbx+0x50]
   140004252:	mov    rdx,r9
   140004255:	add    DWORD PTR [rbx+0x4c],r15d
   140004259:	mov    eax,DWORD PTR [r9+0x18]
   14000425d:	btr    DWORD PTR [r9+0x4],0x7
   140004263:	lea    rcx,[rax+rax*2]
   140004267:	mov    DWORD PTR [r8+rcx*4],r14d
   14000426b:	mov    eax,DWORD PTR [r9+0x18]
   14000426f:	sub    rdx,QWORD PTR [rbx+0x178]
   140004276:	sar    rdx,0x6
   14000427a:	lea    rcx,[rax+rax*2]
   14000427e:	mov    DWORD PTR [r8+rcx*4+0x8],edx
   140004283:	add    r9,0x40
   140004287:	sub    r10,r15
   14000428a:	jne    0x140004233
   14000428c:	mov    rcx,r8
   14000428f:	call   QWORD PTR [rip+0x4f2b]        # 0x1400091c0
   140004295:	xor    eax,eax
   140004297:	mov    rbx,QWORD PTR [rsp+0x40]
   14000429c:	mov    rbp,QWORD PTR [rsp+0x48]
   1400042a1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400042a6:	add    rsp,0x20
   1400042aa:	pop    r15
   1400042ac:	pop    r14
   1400042ae:	pop    rdi
   1400042af:	ret    
   1400042b0:	int3   
   1400042b1:	int3   
   1400042b2:	int3   
   1400042b3:	int3   
   1400042b4:	int3   
   1400042b5:	int3   
   1400042b6:	int3   
   1400042b7:	int3   
   1400042b8:	int3   
   1400042b9:	int3   
   1400042ba:	int3   
   1400042bb:	int3   
   1400042bc:	int3   
   1400042bd:	int3   
   1400042be:	int3   
   1400042bf:	int3   
   1400042c0:	mov    r8d,DWORD PTR [rdx]
   1400042c3:	xor    edx,edx
   1400042c5:	cmp    DWORD PTR [rcx],r8d
   1400042c8:	mov    eax,edx
   1400042ca:	setg   al
   1400042cd:	cmp    DWORD PTR [rcx],r8d
   1400042d0:	setl   dl
   1400042d3:	sub    eax,edx
   1400042d5:	ret    
   1400042d6:	int3   
   1400042d7:	int3   
   1400042d8:	int3   
   1400042d9:	int3   
   1400042da:	int3   
   1400042db:	int3   
   1400042dc:	int3   
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	mov    r8d,DWORD PTR [rcx]
   1400042e3:	xor    ecx,ecx
   1400042e5:	cmp    DWORD PTR [rdx],r8d
   1400042e8:	mov    eax,ecx
   1400042ea:	seta   al
   1400042ed:	cmp    DWORD PTR [rdx],r8d
   1400042f0:	setb   cl
   1400042f3:	sub    eax,ecx
   1400042f5:	ret    
   1400042f6:	int3   
   1400042f7:	int3   
   1400042f8:	int3   
   1400042f9:	int3   
   1400042fa:	int3   
   1400042fb:	int3   
   1400042fc:	int3   
   1400042fd:	int3   
   1400042fe:	int3   
   1400042ff:	int3   
   140004300:	mov    eax,DWORD PTR [rdx]
   140004302:	mov    edx,DWORD PTR [rcx+rax*4]
   140004305:	mov    eax,DWORD PTR [r8]
   140004308:	xor    r8d,r8d
   14000430b:	mov    r9d,r8d
   14000430e:	cmp    DWORD PTR [rcx+rax*4],edx
   140004311:	seta   r9b
   140004315:	cmp    DWORD PTR [rcx+rax*4],edx
   140004318:	setb   r8b
   14000431c:	sub    r9d,r8d
   14000431f:	mov    eax,r9d
   140004322:	ret    
   140004323:	int3   
   140004324:	int3   
   140004325:	int3   
   140004326:	int3   
   140004327:	int3   
   140004328:	int3   
   140004329:	int3   
   14000432a:	int3   
   14000432b:	int3   
   14000432c:	mov    QWORD PTR [rsp+0x8],rbx
   140004331:	mov    DWORD PTR [rsp+0x10],edx
   140004335:	push   rdi
   140004336:	sub    rsp,0x30
   14000433a:	mov    rdx,QWORD PTR [rcx+0xb8]
   140004341:	lea    rax,[rip+0xfffffffffffff588]        # 0x1400038d0
   140004348:	mov    rdi,r8
   14000434b:	mov    QWORD PTR [rsp+0x20],rax
   140004350:	movsxd r8,DWORD PTR [rcx+0xb0]
   140004357:	mov    rbx,rcx
   14000435a:	lea    rcx,[rsp+0x48]
   14000435f:	mov    r9d,0x4
   140004365:	call   QWORD PTR [rip+0x4ee5]        # 0x140009250
   14000436b:	test   rax,rax
   14000436e:	jne    0x140004394
   140004370:	lea    ecx,[rax+0x2]
   140004373:	call   0x140008dc8
   140004378:	mov    rcx,rax
   14000437b:	lea    rdx,[rip+0x57ee]        # 0x140009b70
   140004382:	call   QWORD PTR [rip+0x4eb0]        # 0x140009238
   140004388:	mov    ecx,0x1
   14000438d:	call   QWORD PTR [rip+0x4e35]        # 0x1400091c8
   140004393:	int3   
   140004394:	sub    rax,QWORD PTR [rbx+0xb8]
   14000439b:	mov    r8,rdi
   14000439e:	mov    rdx,QWORD PTR [rbx+0xd0]
   1400043a5:	sar    rax,0x2
   1400043a9:	mov    ecx,eax
   1400043ab:	mov    rax,QWORD PTR [rbx+0xc8]
   1400043b2:	mov    ecx,DWORD PTR [rax+rcx*4]
   1400043b5:	call   0x140007ff0
   1400043ba:	mov    rbx,QWORD PTR [rsp+0x40]
   1400043bf:	add    rsp,0x30
   1400043c3:	pop    rdi
   1400043c4:	ret    
   1400043c5:	int3   
   1400043c6:	int3   
   1400043c7:	int3   
   1400043c8:	int3   
   1400043c9:	int3   
   1400043ca:	int3   
   1400043cb:	int3   
   1400043cc:	mov    rax,rsp
   1400043cf:	mov    QWORD PTR [rax+0x8],rbx
   1400043d3:	mov    QWORD PTR [rax+0x10],rbp
   1400043d7:	mov    QWORD PTR [rax+0x18],rsi
   1400043db:	mov    QWORD PTR [rax+0x20],rdi
   1400043df:	push   r14
   1400043e1:	sub    rsp,0x20
   1400043e5:	mov    eax,DWORD PTR [rcx+0xd8]
   1400043eb:	mov    rdi,rcx
   1400043ee:	cmp    eax,0x7fffffff
   1400043f3:	ja     0x140004402
   1400043f5:	mov    ecx,eax
   1400043f7:	call   QWORD PTR [rip+0x4dbb]        # 0x1400091b8
   1400043fd:	mov    rbx,rax
   140004400:	jmp    0x140004404
   140004402:	xor    ebx,ebx
   140004404:	mov    QWORD PTR [rdi+0xe0],rbx
   14000440b:	test   rbx,rbx
   14000440e:	jne    0x14000441a
   140004410:	mov    eax,0x8007000e
   140004415:	jmp    0x14000449b
   14000441a:	mov    ebp,DWORD PTR [rdi+0x20]
   14000441d:	mov    rsi,QWORD PTR [rdi+0x178]
   140004424:	mov    r14,QWORD PTR [rdi+0x68]
   140004428:	test   ebp,ebp
   14000442a:	je     0x140004480
   14000442c:	add    r14,0xc
   140004430:	add    rsi,0x4
   140004434:	mov    eax,DWORD PTR [rsi]
   140004436:	dec    ebp
   140004438:	and    eax,0x220
   14000443d:	cmp    eax,0x20
   140004440:	jne    0x140004459
   140004442:	mov    edx,DWORD PTR [rsi+0x18]
   140004445:	mov    r8,rbx
   140004448:	mov    rcx,rdi
   14000444b:	call   0x14000432c
   140004450:	mov    DWORD PTR [r14+0x10],eax
   140004454:	cdqe   
   140004456:	add    rbx,rax
   140004459:	test   BYTE PTR [rsi],0x80
   14000445c:	je     0x140004474
   14000445e:	mov    edx,DWORD PTR [rsi+0x14]
   140004461:	mov    r8,rbx
   140004464:	mov    rcx,rdi
   140004467:	call   0x14000432c
   14000446c:	mov    DWORD PTR [r14],eax
   14000446f:	cdqe   
   140004471:	add    rbx,rax
   140004474:	add    r14,0x30
   140004478:	add    rsi,0x40
   14000447c:	test   ebp,ebp
   14000447e:	jne    0x140004434
   140004480:	sub    rbx,QWORD PTR [rdi+0xe0]
   140004487:	movsxd rax,DWORD PTR [rdi+0xd8]
   14000448e:	sub    rbx,rax
   140004491:	neg    rbx
   140004494:	sbb    eax,eax
   140004496:	and    eax,0x80004005
   14000449b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400044a0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400044a5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400044aa:	mov    rdi,QWORD PTR [rsp+0x48]
   1400044af:	add    rsp,0x20
   1400044b3:	pop    r14
   1400044b5:	ret    
   1400044b6:	int3   
   1400044b7:	int3   
   1400044b8:	int3   
   1400044b9:	int3   
   1400044ba:	int3   
   1400044bb:	int3   
   1400044bc:	mov    QWORD PTR [rsp+0x20],rbx
   1400044c1:	push   rbp
   1400044c2:	push   rsi
   1400044c3:	push   rdi
   1400044c4:	push   r12
   1400044c6:	push   r13
   1400044c8:	push   r14
   1400044ca:	push   r15
   1400044cc:	mov    rbp,rsp
   1400044cf:	sub    rsp,0x30
   1400044d3:	mov    ebx,DWORD PTR [rcx+0x58]
   1400044d6:	mov    rsi,rcx
   1400044d9:	mov    r15,QWORD PTR [rcx+0x178]
   1400044e0:	mov    edi,DWORD PTR [rcx+0x20]
   1400044e3:	add    ebx,DWORD PTR [rcx+0x50]
   1400044e6:	jne    0x1400044f5
   1400044e8:	and    DWORD PTR [rcx+0xb0],ebx
   1400044ee:	xor    eax,eax
   1400044f0:	jmp    0x140004614
   1400044f5:	xor    r14d,r14d
   1400044f8:	xor    r12d,r12d
   1400044fb:	mov    QWORD PTR [rbp+0x40],r14
   1400044ff:	mov    QWORD PTR [rbp+0x48],r12
   140004503:	cmp    ebx,0x1fffffff
   140004509:	ja     0x14000451b
   14000450b:	mov    ecx,ebx
   14000450d:	shl    ecx,0x2
   140004510:	call   QWORD PTR [rip+0x4ca2]        # 0x1400091b8
   140004516:	mov    r13,rax
   140004519:	jmp    0x14000451e
   14000451b:	xor    r13d,r13d
   14000451e:	test   r13,r13
   140004521:	je     0x140004719
   140004527:	mov    rdx,r13
   14000452a:	test   edi,edi
   14000452c:	je     0x14000455f
   14000452e:	lea    rcx,[r15+0x4]
   140004532:	dec    edi
   140004534:	test   BYTE PTR [rcx],0x80
   140004537:	je     0x140004542
   140004539:	mov    eax,DWORD PTR [rcx+0x14]
   14000453c:	mov    DWORD PTR [rdx],eax
   14000453e:	add    rdx,0x4
   140004542:	mov    eax,DWORD PTR [rcx]
   140004544:	and    eax,0x220
   140004549:	cmp    eax,0x20
   14000454c:	jne    0x140004557
   14000454e:	mov    eax,DWORD PTR [rcx+0x18]
   140004551:	mov    DWORD PTR [rdx],eax
   140004553:	add    rdx,0x4
   140004557:	add    rcx,0x40
   14000455b:	test   edi,edi
   14000455d:	jne    0x140004532
   14000455f:	movsxd rbx,ebx
   140004562:	lea    r9,[rip+0xfffffffffffff367]        # 0x1400038d0
   140004569:	mov    rdx,rbx
   14000456c:	mov    r8d,0x4
   140004572:	mov    rcx,r13
   140004575:	call   QWORD PTR [rip+0x4c6d]        # 0x1400091e8
   14000457b:	test   rbx,rbx
   14000457e:	jne    0x140004587
   140004580:	xor    edi,edi
   140004582:	jmp    0x140004634
   140004587:	lea    rax,[rbp+0x50]
   14000458b:	mov    rdx,rbx
   14000458e:	mov    QWORD PTR [rsp+0x28],rax
   140004593:	lea    r9,[rbp+0x40]
   140004597:	lea    rax,[rbp+0x48]
   14000459b:	mov    rcx,r13
   14000459e:	lea    r8,[rip+0x24b]        # 0x1400047f0
   1400045a5:	mov    QWORD PTR [rsp+0x20],rax
   1400045aa:	call   0x140008040
   1400045af:	mov    ebx,eax
   1400045b1:	test   eax,eax
   1400045b3:	js     0x1400045e1
   1400045b5:	mov    rdi,QWORD PTR [rbp+0x50]
   1400045b9:	cmp    rdi,0x7fffffff
   1400045c0:	jbe    0x14000462c
   1400045c2:	mov    ecx,0x2
   1400045c7:	call   0x140008dc8
   1400045cc:	mov    rcx,rax
   1400045cf:	lea    rdx,[rip+0x55ea]        # 0x140009bc0
   1400045d6:	call   QWORD PTR [rip+0x4c5c]        # 0x140009238
   1400045dc:	mov    ebx,0x80004005
   1400045e1:	mov    r12,QWORD PTR [rbp+0x48]
   1400045e5:	mov    r14,QWORD PTR [rbp+0x40]
   1400045e9:	mov    rcx,r14
   1400045ec:	call   QWORD PTR [rip+0x4bce]        # 0x1400091c0
   1400045f2:	mov    rcx,r12
   1400045f5:	call   QWORD PTR [rip+0x4bc5]        # 0x1400091c0
   1400045fb:	mov    rcx,r13
   1400045fe:	call   QWORD PTR [rip+0x4bbc]        # 0x1400091c0
   140004604:	test   ebx,ebx
   140004606:	js     0x140004612
   140004608:	mov    rcx,rsi
   14000460b:	call   0x1400043cc
   140004610:	mov    ebx,eax
   140004612:	mov    eax,ebx
   140004614:	mov    rbx,QWORD PTR [rsp+0x88]
   14000461c:	add    rsp,0x30
   140004620:	pop    r15
   140004622:	pop    r14
   140004624:	pop    r13
   140004626:	pop    r12
   140004628:	pop    rdi
   140004629:	pop    rsi
   14000462a:	pop    rbp
   14000462b:	ret    
   14000462c:	mov    r14,QWORD PTR [rbp+0x40]
   140004630:	mov    r12,QWORD PTR [rbp+0x48]
   140004634:	mov    r15d,0x1fffffff
   14000463a:	mov    DWORD PTR [rsi+0xb0],edi
   140004640:	cmp    edi,r15d
   140004643:	ja     0x140004655
   140004645:	mov    ecx,edi
   140004647:	shl    ecx,0x2
   14000464a:	call   QWORD PTR [rip+0x4b68]        # 0x1400091b8
   140004650:	mov    rbx,rax
   140004653:	jmp    0x140004657
   140004655:	xor    ebx,ebx
   140004657:	mov    QWORD PTR [rsi+0xb8],rbx
   14000465e:	cmp    edi,r15d
   140004661:	ja     0x140004673
   140004663:	mov    ecx,edi
   140004665:	shl    ecx,0x2
   140004668:	call   QWORD PTR [rip+0x4b4a]        # 0x1400091b8
   14000466e:	mov    r15,rax
   140004671:	jmp    0x140004676
   140004673:	xor    r15d,r15d
   140004676:	mov    QWORD PTR [rsi+0xc0],r15
   14000467d:	test   rbx,rbx
   140004680:	je     0x140004719
   140004686:	test   r15,r15
   140004689:	je     0x140004719
   14000468f:	xor    edx,edx
   140004691:	test   rdi,rdi
   140004694:	je     0x1400046bd
   140004696:	mov    r8,r12
   140004699:	mov    r9,r15
   14000469c:	sub    r8,rbx
   14000469f:	sub    r9,rbx
   1400046a2:	mov    eax,DWORD PTR [r8+rbx*1]
   1400046a6:	mov    ecx,DWORD PTR [r13+rax*4+0x0]
   1400046ab:	mov    DWORD PTR [rbx],ecx
   1400046ad:	mov    DWORD PTR [r9+rbx*1],edx
   1400046b1:	inc    rdx
   1400046b4:	lea    rbx,[rbx+0x4]
   1400046b8:	cmp    rdx,rdi
   1400046bb:	jb     0x1400046a2
   1400046bd:	mov    ebx,0x4
   1400046c2:	mov    QWORD PTR [rsp+0x20],r14
   1400046c7:	mov    r8d,ebx
   1400046ca:	lea    r9,[rip+0xfffffffffffffc2f]        # 0x140004300
   1400046d1:	mov    rdx,rdi
   1400046d4:	mov    rcx,r15
   1400046d7:	call   QWORD PTR [rip+0x4b7b]        # 0x140009258
   1400046dd:	lea    r9,[rip+0xfffffffffffffbfc]        # 0x1400042e0
   1400046e4:	mov    r8d,ebx
   1400046e7:	mov    rdx,rdi
   1400046ea:	mov    rcx,r14
   1400046ed:	call   QWORD PTR [rip+0x4af5]        # 0x1400091e8
   1400046f3:	cmp    edi,0x1fffffff
   1400046f9:	ja     0x14000470b
   1400046fb:	mov    ecx,edi
   1400046fd:	shl    ecx,0x2
   140004700:	call   QWORD PTR [rip+0x4ab2]        # 0x1400091b8
   140004706:	mov    rdx,rax
   140004709:	jmp    0x14000470d
   14000470b:	xor    edx,edx
   14000470d:	mov    QWORD PTR [rsi+0xc8],rdx
   140004714:	test   rdx,rdx
   140004717:	jne    0x140004723
   140004719:	mov    ebx,0x8007000e
   14000471e:	jmp    0x1400045e9
   140004723:	xor    ecx,ecx
   140004725:	test   rdi,rdi
   140004728:	je     0x140004739
   14000472a:	mov    eax,DWORD PTR [r15+rcx*4]
   14000472e:	mov    DWORD PTR [rdx+rax*4],ecx
   140004731:	inc    rcx
   140004734:	cmp    rcx,rdi
   140004737:	jb     0x14000472a
   140004739:	xor    r9d,r9d
   14000473c:	mov    QWORD PTR [rbp+0x48],r9
   140004740:	cmp    rdi,0x1
   140004744:	jb     0x140004765
   140004746:	lea    r9,[rbp+0x40]
   14000474a:	mov    rdx,r14
   14000474d:	lea    r8,[rbp+0x48]
   140004751:	mov    rcx,rdi
   140004754:	call   0x140007b84
   140004759:	mov    r9,QWORD PTR [rbp+0x48]
   14000475d:	mov    ebx,eax
   14000475f:	mov    r8d,DWORD PTR [rbp+0x40]
   140004763:	jmp    0x14000476a
   140004765:	xor    r8d,r8d
   140004768:	xor    ebx,ebx
   14000476a:	test   ebx,ebx
   14000476c:	js     0x1400045e9
   140004772:	cmp    BYTE PTR [rsi+0x180],0x0
   140004779:	je     0x140004798
   14000477b:	xor    ecx,ecx
   14000477d:	test   r8d,r8d
   140004780:	jle    0x140004798
   140004782:	mov    rax,r9
   140004785:	cmp    DWORD PTR [rax],0xffff
   14000478b:	ja     0x1400047bc
   14000478d:	inc    ecx
   14000478f:	add    rax,0x4
   140004793:	cmp    ecx,r8d
   140004796:	jl     0x140004785
   140004798:	mov    rdx,r14
   14000479b:	mov    DWORD PTR [rsi+0xb4],r8d
   1400047a2:	mov    rcx,rdi
   1400047a5:	mov    QWORD PTR [rsi+0xd0],r9
   1400047ac:	call   0x140007f44
   1400047b1:	mov    DWORD PTR [rsi+0xd8],eax
   1400047b7:	jmp    0x1400045e9
   1400047bc:	mov    ecx,0x2
   1400047c1:	call   0x140008dc8
   1400047c6:	mov    rcx,rax
   1400047c9:	lea    rdx,[rip+0x5420]        # 0x140009bf0
   1400047d0:	call   QWORD PTR [rip+0x4a62]        # 0x140009238
   1400047d6:	mov    ebx,0x80004005
   1400047db:	jmp    0x1400045e9
   1400047e0:	int3   
   1400047e1:	int3   
   1400047e2:	int3   
   1400047e3:	int3   
   1400047e4:	int3   
   1400047e5:	int3   
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	int3   
   1400047e9:	int3   
   1400047ea:	int3   
   1400047eb:	int3   
   1400047ec:	int3   
   1400047ed:	int3   
   1400047ee:	int3   
   1400047ef:	int3   
   1400047f0:	mov    ecx,DWORD PTR [r8]
   1400047f3:	xor    r8d,r8d
   1400047f6:	cmp    DWORD PTR [rdx],ecx
   1400047f8:	mov    eax,r8d
   1400047fb:	seta   al
   1400047fe:	cmp    DWORD PTR [rdx],ecx
   140004800:	setb   r8b
   140004804:	sub    eax,r8d
   140004807:	ret    
   140004808:	int3   
   140004809:	int3   
   14000480a:	int3   
   14000480b:	int3   
   14000480c:	int3   
   14000480d:	int3   
   14000480e:	int3   
   14000480f:	int3   
   140004810:	movzx  r8d,WORD PTR [rdx]
   140004814:	xor    r10d,r10d
   140004817:	cmp    WORD PTR [rcx],r8w
   14000481b:	mov    r9d,r10d
   14000481e:	mov    eax,r10d
   140004821:	seta   r9b
   140004825:	cmp    WORD PTR [rcx],r8w
   140004829:	setb   al
   14000482c:	sub    r9d,eax
   14000482f:	jne    0x14000484b
   140004831:	movzx  edx,WORD PTR [rdx+0x2]
   140004835:	mov    r9d,r10d
   140004838:	movzx  ecx,WORD PTR [rcx+0x2]
   14000483c:	cmp    ecx,edx
   14000483e:	setg   r9b
   140004842:	cmp    ecx,edx
   140004844:	setl   r10b
   140004848:	sub    r9d,r10d
   14000484b:	mov    eax,r9d
   14000484e:	ret    
   14000484f:	int3   
   140004850:	int3   
   140004851:	int3   
   140004852:	int3   
   140004853:	int3   
   140004854:	int3   
   140004855:	int3   
   140004856:	int3   
   140004857:	int3   
   140004858:	int3   
   140004859:	int3   
   14000485a:	int3   
   14000485b:	int3   
   14000485c:	int3   
   14000485d:	int3   
   14000485e:	int3   
   14000485f:	int3   
   140004860:	mov    r10d,DWORD PTR [r8]
   140004863:	xor    r9d,r9d
   140004866:	mov    r11d,DWORD PTR [rdx]
   140004869:	mov    r8d,r9d
   14000486c:	shl    r10,0x6
   140004870:	mov    eax,r9d
   140004873:	shl    r11,0x6
   140004877:	add    r10,rcx
   14000487a:	add    r11,rcx
   14000487d:	mov    ecx,DWORD PTR [r10]
   140004880:	cmp    DWORD PTR [r11],ecx
   140004883:	seta   r8b
   140004887:	cmp    DWORD PTR [r11],ecx
   14000488a:	setb   al
   14000488d:	sub    r8d,eax
   140004890:	jne    0x1400048ae
   140004892:	movzx  edx,WORD PTR [r10+0x4]
   140004897:	mov    r8d,r9d
   14000489a:	movzx  ecx,WORD PTR [r11+0x4]
   14000489f:	cmp    ecx,edx
   1400048a1:	seta   r8b
   1400048a5:	cmp    ecx,edx
   1400048a7:	setb   r9b
   1400048ab:	sub    r8d,r9d
   1400048ae:	mov    eax,r8d
   1400048b1:	ret    
   1400048b2:	int3   
   1400048b3:	int3   
   1400048b4:	int3   
   1400048b5:	int3   
   1400048b6:	int3   
   1400048b7:	int3   
   1400048b8:	mov    QWORD PTR [rsp+0x8],rcx
   1400048bd:	push   rbp
   1400048be:	push   rbx
   1400048bf:	push   rsi
   1400048c0:	push   rdi
   1400048c1:	push   r12
   1400048c3:	push   r13
   1400048c5:	push   r14
   1400048c7:	push   r15
   1400048c9:	lea    rbp,[rsp-0x1f]
   1400048ce:	sub    rsp,0x98
   1400048d5:	and    QWORD PTR [rbp+0x77],0x0
   1400048da:	mov    r12d,0x1fffffff
   1400048e0:	and    QWORD PTR [rbp+0x6f],0x0
   1400048e5:	mov    rdi,rcx
   1400048e8:	mov    rax,QWORD PTR [rcx+0x178]
   1400048ef:	mov    ebx,DWORD PTR [rcx+0x20]
   1400048f2:	mov    QWORD PTR [rbp-0x39],rax
   1400048f6:	cmp    ebx,r12d
   1400048f9:	ja     0x14000490b
   1400048fb:	mov    ecx,ebx
   1400048fd:	shl    ecx,0x2
   140004900:	call   QWORD PTR [rip+0x48b2]        # 0x1400091b8
   140004906:	mov    r13,rax
   140004909:	jmp    0x14000490e
   14000490b:	xor    r13d,r13d
   14000490e:	mov    QWORD PTR [rbp-0x49],r13
   140004912:	mov    r14d,0x1
   140004918:	test   r13,r13
   14000491b:	je     0x140004b0f
   140004921:	xor    ecx,ecx
   140004923:	test   ebx,ebx
   140004925:	je     0x140004934
   140004927:	mov    DWORD PTR [r13+rcx*4+0x0],ecx
   14000492c:	add    ecx,r14d
   14000492f:	cmp    ecx,DWORD PTR [rdi+0x20]
   140004932:	jb     0x140004927
   140004934:	mov    rax,QWORD PTR [rdi+0x178]
   14000493b:	lea    r9,[rip+0xffffffffffffff1e]        # 0x140004860
   140004942:	mov    edx,DWORD PTR [rdi+0x20]
   140004945:	mov    r8d,0x4
   14000494b:	mov    rcx,r13
   14000494e:	mov    QWORD PTR [rsp+0x20],rax
   140004953:	call   QWORD PTR [rip+0x48ff]        # 0x140009258
   140004959:	mov    r15d,DWORD PTR [rdi+0x20]
   14000495d:	mov    rax,QWORD PTR [rdi+0x178]
   140004964:	mov    QWORD PTR [rbp-0x41],rax
   140004968:	test   r15,r15
   14000496b:	jne    0x14000497f
   14000496d:	xor    r12d,r12d
   140004970:	and    QWORD PTR [rbp+0x6f],r12
   140004974:	xor    esi,esi
   140004976:	mov    QWORD PTR [rbp+0x77],r12
   14000497a:	jmp    0x140004ad3
   14000497f:	cmp    r15,r14
   140004982:	ja     0x14000498d
   140004984:	mov    rsi,r15
   140004987:	mov    QWORD PTR [rbp+0x7f],r15
   14000498b:	jmp    0x1400049df
   14000498d:	mov    QWORD PTR [rbp+0x7f],r14
   140004991:	mov    rsi,r14
   140004994:	mov    rbx,r14
   140004997:	cmp    r14,r15
   14000499a:	jae    0x1400049df
   14000499c:	xor    r14d,r14d
   14000499f:	mov    rdi,rax
   1400049a2:	mov    r12,rbx
   1400049a5:	lea    rdx,[r14+r13*1]
   1400049a9:	shl    r12,0x2
   1400049ad:	mov    rcx,rdi
   1400049b0:	lea    r8,[r12+r13*1]
   1400049b4:	call   0x140004860
   1400049b9:	test   eax,eax
   1400049bb:	je     0x1400049c3
   1400049bd:	inc    rsi
   1400049c0:	mov    r14,r12
   1400049c3:	inc    rbx
   1400049c6:	cmp    rbx,r15
   1400049c9:	jb     0x1400049a2
   1400049cb:	mov    rdi,QWORD PTR [rbp+0x67]
   1400049cf:	mov    r14d,0x1
   1400049d5:	mov    QWORD PTR [rbp+0x7f],rsi
   1400049d9:	mov    r12d,0x1fffffff
   1400049df:	cmp    esi,r12d
   1400049e2:	ja     0x1400049f4
   1400049e4:	mov    ecx,esi
   1400049e6:	shl    ecx,0x2
   1400049e9:	call   QWORD PTR [rip+0x47c9]        # 0x1400091b8
   1400049ef:	mov    rbx,rax
   1400049f2:	jmp    0x1400049f6
   1400049f4:	xor    ebx,ebx
   1400049f6:	test   rbx,rbx
   1400049f9:	je     0x140004b0f
   1400049ff:	cmp    esi,r12d
   140004a02:	ja     0x140004a14
   140004a04:	mov    ecx,esi
   140004a06:	shl    ecx,0x2
   140004a09:	call   QWORD PTR [rip+0x47a9]        # 0x1400091b8
   140004a0f:	mov    r12,rax
   140004a12:	jmp    0x140004a17
   140004a14:	xor    r12d,r12d
   140004a17:	test   r12,r12
   140004a1a:	jne    0x140004a2a
   140004a1c:	mov    rcx,rbx
   140004a1f:	call   QWORD PTR [rip+0x479b]        # 0x1400091c0
   140004a25:	jmp    0x140004b0f
   140004a2a:	and    DWORD PTR [r12],0x0
   140004a2f:	and    QWORD PTR [rbp+0x6f],0x0
   140004a34:	mov    DWORD PTR [rbx],r14d
   140004a37:	cmp    r14,r15
   140004a3a:	jae    0x140004a98
   140004a3c:	mov    rdi,QWORD PTR [rbp+0x6f]
   140004a40:	mov    r13,rbx
   140004a43:	xor    esi,esi
   140004a45:	mov    rcx,QWORD PTR [rbp-0x49]
   140004a49:	mov    r8,r14
   140004a4c:	shl    r8,0x2
   140004a50:	add    r8,rcx
   140004a53:	lea    rdx,[rsi+rcx*1]
   140004a57:	mov    rcx,QWORD PTR [rbp-0x41]
   140004a5b:	call   0x140004860
   140004a60:	test   eax,eax
   140004a62:	je     0x140004a80
   140004a64:	inc    rdi
   140004a67:	mov    rsi,r14
   140004a6a:	shl    rsi,0x2
   140004a6e:	lea    r13,[rbx+rdi*4]
   140004a72:	mov    DWORD PTR [r12+rdi*4],r14d
   140004a76:	mov    DWORD PTR [r13+0x0],0x1
   140004a7e:	jmp    0x140004a84
   140004a80:	inc    DWORD PTR [r13+0x0]
   140004a84:	inc    r14
   140004a87:	cmp    r14,r15
   140004a8a:	jb     0x140004a45
   140004a8c:	mov    rdi,QWORD PTR [rbp+0x67]
   140004a90:	mov    rsi,QWORD PTR [rbp+0x7f]
   140004a94:	mov    r13,QWORD PTR [rbp-0x49]
   140004a98:	mov    QWORD PTR [rbp+0x77],rbx
   140004a9c:	mov    QWORD PTR [rbp+0x6f],r12
   140004aa0:	cmp    rsi,0x7fffffff
   140004aa7:	jbe    0x140004ad0
   140004aa9:	mov    ecx,0x2
   140004aae:	call   0x140008dc8
   140004ab3:	mov    rcx,rax
   140004ab6:	lea    rdx,[rip+0x520b]        # 0x140009cc8
   140004abd:	call   QWORD PTR [rip+0x4775]        # 0x140009238
   140004ac3:	mov    ebx,0x80004005
   140004ac8:	mov    r15,r12
   140004acb:	jmp    0x140004c5d
   140004ad0:	mov    r12,rbx
   140004ad3:	lea    rbx,[rdi+0x80]
   140004ada:	mov    DWORD PTR [rdi+0x74],esi
   140004add:	mov    rcx,rbx
   140004ae0:	mov    r8d,0x4
   140004ae6:	mov    edx,esi
   140004ae8:	call   0x140008204
   140004aed:	test   eax,eax
   140004aef:	je     0x140004b0f
   140004af1:	mov    r14,QWORD PTR [rbx]
   140004af4:	mov    r8d,0x4
   140004afa:	lea    rbx,[rdi+0x88]
   140004b01:	mov    edx,esi
   140004b03:	mov    rcx,rbx
   140004b06:	call   0x140008204
   140004b0b:	test   eax,eax
   140004b0d:	jne    0x140004b1d
   140004b0f:	mov    r15,QWORD PTR [rbp+0x6f]
   140004b13:	mov    ebx,0x8007000e
   140004b18:	jmp    0x140004c5d
   140004b1d:	mov    rbx,QWORD PTR [rbx]
   140004b20:	xor    r9d,r9d
   140004b23:	test   rsi,rsi
   140004b26:	je     0x140004b67
   140004b28:	mov    rdx,QWORD PTR [rbp+0x6f]
   140004b2c:	mov    r8,rbx
   140004b2f:	mov    r15,QWORD PTR [rbp-0x39]
   140004b33:	sub    rdx,rbx
   140004b36:	mov    eax,DWORD PTR [r8+rdx*1]
   140004b3a:	mov    ecx,DWORD PTR [r13+rax*4+0x0]
   140004b3f:	shl    rcx,0x6
   140004b43:	mov    rax,QWORD PTR [rcx+r15*1]
   140004b47:	mov    WORD PTR [r14],ax
   140004b4b:	lea    r14,[r14+0x4]
   140004b4f:	shr    rax,0x20
   140004b53:	mov    WORD PTR [r14-0x2],ax
   140004b58:	mov    DWORD PTR [r8],r9d
   140004b5b:	inc    r9
   140004b5e:	lea    r8,[r8+0x4]
   140004b62:	cmp    r9,rsi
   140004b65:	jb     0x140004b36
   140004b67:	mov    r15,QWORD PTR [rbp+0x6f]
   140004b6b:	lea    r9,[rip+0xfffffffffffff78e]        # 0x140004300
   140004b72:	mov    r8d,0x4
   140004b78:	mov    QWORD PTR [rsp+0x20],r12
   140004b7d:	mov    rdx,rsi
   140004b80:	mov    rcx,rbx
   140004b83:	call   QWORD PTR [rip+0x46cf]        # 0x140009258
   140004b89:	lea    r9,[rip+0xfffffffffffff750]        # 0x1400042e0
   140004b90:	mov    r8d,0x4
   140004b96:	mov    rdx,rsi
   140004b99:	mov    rcx,r12
   140004b9c:	call   QWORD PTR [rip+0x4646]        # 0x1400091e8
   140004ba2:	lea    r14,[rdi+0x90]
   140004ba9:	mov    r8d,0x4
   140004baf:	mov    rcx,r14
   140004bb2:	mov    edx,esi
   140004bb4:	call   0x140008204
   140004bb9:	test   eax,eax
   140004bbb:	jne    0x140004bc7
   140004bbd:	mov    ebx,0x8007000e
   140004bc2:	jmp    0x140004c5d
   140004bc7:	mov    rdx,QWORD PTR [r14]
   140004bca:	xor    ecx,ecx
   140004bcc:	test   rsi,rsi
   140004bcf:	je     0x140004be2
   140004bd1:	xor    eax,eax
   140004bd3:	mov    eax,DWORD PTR [rbx+rax*4]
   140004bd6:	mov    DWORD PTR [rdx+rax*4],ecx
   140004bd9:	inc    ecx
   140004bdb:	mov    eax,ecx
   140004bdd:	cmp    rax,rsi
   140004be0:	jb     0x140004bd3
   140004be2:	xor    r9d,r9d
   140004be5:	and    DWORD PTR [rbp+0x67],r9d
   140004be9:	mov    QWORD PTR [rbp+0x6f],r9
   140004bed:	cmp    rsi,0x1
   140004bf1:	jb     0x140004c12
   140004bf3:	lea    r9,[rbp+0x67]
   140004bf7:	mov    rdx,r12
   140004bfa:	lea    r8,[rbp+0x6f]
   140004bfe:	mov    rcx,rsi
   140004c01:	call   0x140007b84
   140004c06:	mov    r9,QWORD PTR [rbp+0x6f]
   140004c0a:	mov    ebx,eax
   140004c0c:	mov    r8d,DWORD PTR [rbp+0x67]
   140004c10:	jmp    0x140004c17
   140004c12:	xor    r8d,r8d
   140004c15:	xor    ebx,ebx
   140004c17:	test   ebx,ebx
   140004c19:	js     0x140004c5d
   140004c1b:	cmp    BYTE PTR [rdi+0x180],0x0
   140004c22:	je     0x140004c41
   140004c24:	xor    ecx,ecx
   140004c26:	test   r8d,r8d
   140004c29:	jle    0x140004c41
   140004c2b:	mov    rax,r9
   140004c2e:	cmp    DWORD PTR [rax],0xffff
   140004c34:	ja     0x140004caa
   140004c36:	inc    ecx
   140004c38:	add    rax,0x4
   140004c3c:	cmp    ecx,r8d
   140004c3f:	jl     0x140004c2e
   140004c41:	mov    rdx,r12
   140004c44:	mov    DWORD PTR [rdi+0x78],r8d
   140004c48:	mov    rcx,rsi
   140004c4b:	mov    QWORD PTR [rdi+0x98],r9
   140004c52:	call   0x140007f44
   140004c57:	mov    DWORD PTR [rdi+0xa0],eax
   140004c5d:	mov    rcx,QWORD PTR [rbp+0x77]
   140004c61:	call   QWORD PTR [rip+0x4559]        # 0x1400091c0
   140004c67:	mov    rcx,r15
   140004c6a:	call   QWORD PTR [rip+0x4550]        # 0x1400091c0
   140004c70:	mov    rcx,r13
   140004c73:	call   QWORD PTR [rip+0x4547]        # 0x1400091c0
   140004c79:	test   ebx,ebx
   140004c7b:	js     0x140004d73
   140004c81:	mov    edx,DWORD PTR [rdi+0xa0]
   140004c87:	lea    rsi,[rdi+0xa8]
   140004c8e:	mov    rcx,rsi
   140004c91:	mov    r8d,0x1
   140004c97:	call   0x140008204
   140004c9c:	test   eax,eax
   140004c9e:	jne    0x140004ccb
   140004ca0:	mov    ebx,0x8007000e
   140004ca5:	jmp    0x140004d73
   140004caa:	mov    ecx,0x2
   140004caf:	call   0x140008dc8
   140004cb4:	mov    rcx,rax
   140004cb7:	lea    rdx,[rip+0x5032]        # 0x140009cf0
   140004cbe:	call   QWORD PTR [rip+0x4574]        # 0x140009238
   140004cc4:	mov    ebx,0x80004005
   140004cc9:	jmp    0x140004c5d
   140004ccb:	mov    r15,QWORD PTR [rdi+0x178]
   140004cd2:	mov    r12,QWORD PTR [rdi+0x68]
   140004cd6:	mov    rbx,QWORD PTR [rsi]
   140004cd9:	mov    r14d,DWORD PTR [rdi+0x20]
   140004cdd:	jmp    0x140004d56
   140004cdf:	movzx  eax,WORD PTR [r15]
   140004ce3:	lea    rcx,[rbp+0x67]
   140004ce7:	movsxd r8,DWORD PTR [rdi+0x74]
   140004ceb:	mov    r9d,0x4
   140004cf1:	mov    rdx,QWORD PTR [rdi+0x80]
   140004cf8:	dec    r14d
   140004cfb:	mov    WORD PTR [rbp+0x67],ax
   140004cff:	movzx  eax,WORD PTR [r15+0x4]
   140004d04:	mov    WORD PTR [rbp+0x69],ax
   140004d08:	lea    rax,[rip+0xfffffffffffffb01]        # 0x140004810
   140004d0f:	mov    QWORD PTR [rsp+0x20],rax
   140004d14:	call   QWORD PTR [rip+0x4536]        # 0x140009250
   140004d1a:	test   rax,rax
   140004d1d:	je     0x140004d89
   140004d1f:	sub    rax,QWORD PTR [rdi+0x80]
   140004d26:	mov    r8,rbx
   140004d29:	mov    rdx,QWORD PTR [rdi+0x98]
   140004d30:	sar    rax,0x2
   140004d34:	mov    ecx,eax
   140004d36:	mov    rax,QWORD PTR [rdi+0x90]
   140004d3d:	mov    ecx,DWORD PTR [rax+rcx*4]
   140004d40:	call   0x140007ff0
   140004d45:	mov    DWORD PTR [r12],eax
   140004d49:	add    r15,0x40
   140004d4d:	cdqe   
   140004d4f:	add    rbx,rax
   140004d52:	add    r12,0x30
   140004d56:	test   r14d,r14d
   140004d59:	jne    0x140004cdf
   140004d5b:	sub    rbx,QWORD PTR [rsi]
   140004d5e:	movsxd rax,DWORD PTR [rdi+0xa0]
   140004d65:	sub    rbx,rax
   140004d68:	neg    rbx
   140004d6b:	sbb    ebx,ebx
   140004d6d:	and    ebx,0x80004005
   140004d73:	mov    eax,ebx
   140004d75:	add    rsp,0x98
   140004d7c:	pop    r15
   140004d7e:	pop    r14
   140004d80:	pop    r13
   140004d82:	pop    r12
   140004d84:	pop    rdi
   140004d85:	pop    rsi
   140004d86:	pop    rbx
   140004d87:	pop    rbp
   140004d88:	ret    
   140004d89:	mov    ecx,0x2
   140004d8e:	call   0x140008dc8
   140004d93:	mov    rcx,rax
   140004d96:	lea    rdx,[rip+0x4ee3]        # 0x140009c80
   140004d9d:	call   QWORD PTR [rip+0x4495]        # 0x140009238
   140004da3:	mov    ecx,0x1
   140004da8:	call   QWORD PTR [rip+0x441a]        # 0x1400091c8
   140004dae:	int3   
   140004daf:	int3   
   140004db0:	int3   
   140004db1:	int3   
   140004db2:	int3   
   140004db3:	int3   
   140004db4:	int3   
   140004db5:	int3   
   140004db6:	int3   
   140004db7:	int3   
   140004db8:	sub    rsp,0x28
   140004dbc:	xor    r9d,r9d
   140004dbf:	movsxd r10,r8d
   140004dc2:	test   r8d,r8d
   140004dc5:	jle    0x140004de3
   140004dc7:	cmp    DWORD PTR [rdx+r9*4],0xffff
   140004dcf:	ja     0x140004df4
   140004dd1:	movzx  eax,WORD PTR [rdx+r9*4]
   140004dd6:	mov    WORD PTR [rcx+r9*2],ax
   140004ddb:	inc    r9
   140004dde:	cmp    r9,r10
   140004de1:	jl     0x140004dc7
   140004de3:	test   r8b,0x1
   140004de7:	je     0x140004dec
   140004de9:	inc    r8d
   140004dec:	mov    eax,r8d
   140004def:	add    rsp,0x28
   140004df3:	ret    
   140004df4:	mov    ecx,0x2
   140004df9:	call   0x140008dc8
   140004dfe:	mov    rcx,rax
   140004e01:	lea    rdx,[rip+0x4f30]        # 0x140009d38
   140004e08:	call   QWORD PTR [rip+0x442a]        # 0x140009238
   140004e0e:	mov    ecx,0x1
   140004e13:	call   QWORD PTR [rip+0x43af]        # 0x1400091c8
   140004e19:	int3   
   140004e1a:	int3   
   140004e1b:	int3   
   140004e1c:	int3   
   140004e1d:	int3   
   140004e1e:	int3   
   140004e1f:	int3   
   140004e20:	rex push rbx
   140004e22:	sub    rsp,0x20
   140004e26:	mov    rbx,rdx
   140004e29:	cmp    rdx,0x1fffff
   140004e30:	jbe    0x140004e5b
   140004e32:	mov    ecx,0x2
   140004e37:	call   0x140008dc8
   140004e3c:	mov    rcx,rax
   140004e3f:	lea    rdx,[rip+0x4f3a]        # 0x140009d80
   140004e46:	mov    r8,rbx
   140004e49:	call   QWORD PTR [rip+0x43e9]        # 0x140009238
   140004e4f:	mov    ecx,0x1
   140004e54:	call   QWORD PTR [rip+0x436e]        # 0x1400091c8
   140004e5a:	int3   
   140004e5b:	mov    rdx,rcx
   140004e5e:	cmp    rbx,0x4000
   140004e65:	jb     0x140004e75
   140004e67:	mov    rax,rbx
   140004e6a:	shr    rax,0xf
   140004e6e:	or     al,0xc0
   140004e70:	mov    BYTE PTR [rcx],al
   140004e72:	inc    rcx
   140004e75:	cmp    rbx,0x80
   140004e7c:	jb     0x140004e8c
   140004e7e:	mov    rax,rbx
   140004e81:	shr    rax,0x8
   140004e85:	or     al,0x80
   140004e87:	mov    BYTE PTR [rcx],al
   140004e89:	inc    rcx
   140004e8c:	mov    BYTE PTR [rcx],bl
   140004e8e:	sub    rcx,rdx
   140004e91:	lea    rax,[rcx+0x1]
   140004e95:	add    rsp,0x20
   140004e99:	pop    rbx
   140004e9a:	ret    
   140004e9b:	int3   
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	int3   
   140004ea1:	int3   
   140004ea2:	int3   
   140004ea3:	int3   
   140004ea4:	rex push rbx
   140004ea6:	sub    rsp,0x20
   140004eaa:	cmp    QWORD PTR [rip+0x5547],rdx        # 0x14000a3f8
   140004eb1:	mov    rbx,rdx
   140004eb4:	mov    r8,rcx
   140004eb7:	jae    0x140004ee2
   140004eb9:	mov    ecx,0x2
   140004ebe:	call   0x140008dc8
   140004ec3:	mov    rcx,rax
   140004ec6:	lea    rdx,[rip+0x4f03]        # 0x140009dd0
   140004ecd:	mov    r8,rbx
   140004ed0:	call   QWORD PTR [rip+0x4362]        # 0x140009238
   140004ed6:	mov    ecx,0x1
   140004edb:	call   QWORD PTR [rip+0x42e7]        # 0x1400091c8
   140004ee1:	int3   
   140004ee2:	xor    edx,edx
   140004ee4:	xor    ecx,ecx
   140004ee6:	mov    eax,0x80
   140004eeb:	cmp    rbx,rax
   140004eee:	jb     0x140004f12
   140004ef0:	xor    r9d,r9d
   140004ef3:	sub    rbx,rax
   140004ef6:	shl    rcx,0x8
   140004efa:	add    rcx,rax
   140004efd:	inc    r9
   140004f00:	lea    rax,[rip+0x5249]        # 0x14000a150
   140004f07:	inc    edx
   140004f09:	mov    rax,QWORD PTR [rax+r9*8]
   140004f0d:	cmp    rbx,rax
   140004f10:	jae    0x140004ef3
   140004f12:	inc    edx
   140004f14:	shl    rcx,0x8
   140004f18:	movsxd rax,edx
   140004f1b:	add    rcx,rbx
   140004f1e:	add    r8,rax
   140004f21:	mov    eax,edx
   140004f23:	test   edx,edx
   140004f25:	je     0x140004f36
   140004f27:	dec    r8
   140004f2a:	mov    BYTE PTR [r8],cl
   140004f2d:	shr    rcx,0x8
   140004f31:	sub    eax,0x1
   140004f34:	jne    0x140004f27
   140004f36:	mov    eax,edx
   140004f38:	add    rsp,0x20
   140004f3c:	pop    rbx
   140004f3d:	ret    
   140004f3e:	int3   
   140004f3f:	int3   
   140004f40:	int3   
   140004f41:	int3   
   140004f42:	int3   
   140004f43:	int3   
   140004f44:	rex push rbx
   140004f46:	push   rbp
   140004f47:	push   rsi
   140004f48:	push   rdi
   140004f49:	push   r12
   140004f4b:	push   r13
   140004f4d:	push   r14
   140004f4f:	push   r15
   140004f51:	sub    rsp,0x48
   140004f55:	mov    eax,DWORD PTR [rcx+0xb0]
   140004f5b:	mov    rdi,rcx
   140004f5e:	add    eax,DWORD PTR [rcx+0x74]
   140004f61:	mov    edx,0x1
   140004f66:	add    eax,DWORD PTR [rcx+0xe8]
   140004f6c:	add    eax,DWORD PTR [rcx+0x130]
   140004f72:	mov    r14d,DWORD PTR [rdi+0xb4]
   140004f79:	mov    r13d,DWORD PTR [rdi+0x78]
   140004f7d:	mov    r12d,DWORD PTR [rdi+0xfc]
   140004f84:	mov    ebx,DWORD PTR [rdi+0x134]
   140004f8a:	lea    ecx,[rax*4+0x30]
   140004f91:	lea    eax,[r14+r13*1]
   140004f95:	add    eax,r12d
   140004f98:	add    eax,ebx
   140004f9a:	cmp    BYTE PTR [rdi+0x180],0x0
   140004fa1:	je     0x140004fcc
   140004fa3:	lea    r15d,[rcx+rax*2]
   140004fa7:	test   dl,r13b
   140004faa:	je     0x140004fb0
   140004fac:	add    r15d,0x2
   140004fb0:	test   dl,bl
   140004fb2:	je     0x140004fb8
   140004fb4:	add    r15d,0x2
   140004fb8:	test   dl,r14b
   140004fbb:	je     0x140004fc1
   140004fbd:	add    r15d,0x2
   140004fc1:	test   dl,r12b
   140004fc4:	je     0x140004fd0
   140004fc6:	add    r15d,0x2
   140004fca:	jmp    0x140004fd0
   140004fcc:	lea    r15d,[rcx+rax*4]
   140004fd0:	mov    ebp,DWORD PTR [rdi+0x16c]
   140004fd6:	add    ebp,DWORD PTR [rdi+0x168]
   140004fdc:	add    ebp,r15d
   140004fdf:	add    ebp,DWORD PTR [rdi+0x158]
   140004fe5:	add    ebp,DWORD PTR [rdi+0x120]
   140004feb:	add    ebp,DWORD PTR [rdi+0xd8]
   140004ff1:	add    ebp,DWORD PTR [rdi+0xa0]
   140004ff7:	mov    eax,ebp
   140004ff9:	mov    ecx,ebp
   140004ffb:	mov    QWORD PTR [rdi+0x170],rax
   140005002:	call   QWORD PTR [rip+0x4258]        # 0x140009260
   140005008:	xor    edx,edx
   14000500a:	mov    rsi,rax
   14000500d:	test   rax,rax
   140005010:	jne    0x140005028
   140005012:	mov    eax,0x8007000e
   140005017:	add    rsp,0x48
   14000501b:	pop    r15
   14000501d:	pop    r14
   14000501f:	pop    r13
   140005021:	pop    r12
   140005023:	pop    rdi
   140005024:	pop    rsi
   140005025:	pop    rbp
   140005026:	pop    rbx
   140005027:	ret    
   140005028:	cmp    BYTE PTR [rdi+0x180],dl
   14000502e:	je     0x140005143
   140005034:	mov    r14d,0x1
   14000503a:	mov    WORD PTR [rax],r14w
   14000503e:	mov    ecx,r14d
   140005041:	mov    al,BYTE PTR [rdi+0x1c]
   140005044:	mov    BYTE PTR [rsi+0x7],al
   140005047:	movzx  eax,WORD PTR [rdi+0x10]
   14000504b:	mov    WORD PTR [rsi+0x8],ax
   14000504f:	mov    eax,DWORD PTR [rdi]
   140005051:	mov    DWORD PTR [rsi+0x14],eax
   140005054:	movzx  eax,WORD PTR [rdi+0x14]
   140005058:	mov    WORD PTR [rsi+0xa],ax
   14000505c:	mov    eax,DWORD PTR [rdi+0x74]
   14000505f:	mov    DWORD PTR [rsi+0x1c],eax
   140005062:	movzx  eax,WORD PTR [rdi+0x78]
   140005066:	mov    WORD PTR [rsi+0xc],ax
   14000506a:	mov    eax,DWORD PTR [rdi+0x130]
   140005070:	mov    DWORD PTR [rsi+0x20],eax
   140005073:	movzx  eax,WORD PTR [rdi+0x134]
   14000507a:	mov    WORD PTR [rsi+0xe],ax
   14000507e:	mov    eax,DWORD PTR [rdi+0xb0]
   140005084:	mov    DWORD PTR [rsi+0x24],eax
   140005087:	movzx  eax,WORD PTR [rdi+0xb4]
   14000508e:	mov    WORD PTR [rsi+0x10],ax
   140005092:	mov    eax,DWORD PTR [rdi+0xe8]
   140005098:	mov    DWORD PTR [rsi+0x18],eax
   14000509b:	movzx  eax,WORD PTR [rdi+0xfc]
   1400050a2:	mov    WORD PTR [rsi+0x12],ax
   1400050a6:	mov    rax,rdx
   1400050a9:	mov    DWORD PTR [rsi+0x28],r15d
   1400050ad:	mov    WORD PTR [rsi+0x4],dx
   1400050b1:	mov    BYTE PTR [rsi+0x6],dl
   1400050b4:	cmp    BYTE PTR [rdi+rax*1+0x60],dl
   1400050b8:	je     0x1400050bd
   1400050ba:	or     BYTE PTR [rsi+0x6],cl
   1400050bd:	add    rcx,rcx
   1400050c0:	add    rax,r14
   1400050c3:	cmp    rax,0x8
   1400050c7:	jb     0x1400050b4
   1400050c9:	mov    r8d,DWORD PTR [rdi+0x78]
   1400050cd:	lea    rbx,[rsi+0x30]
   1400050d1:	mov    rdx,QWORD PTR [rdi+0x98]
   1400050d8:	mov    rcx,rbx
   1400050db:	call   0x140004db8
   1400050e0:	mov    r8d,DWORD PTR [rdi+0x134]
   1400050e7:	mov    rdx,QWORD PTR [rdi+0x150]
   1400050ee:	movsxd rcx,eax
   1400050f1:	lea    rbx,[rbx+rcx*2]
   1400050f5:	mov    rcx,rbx
   1400050f8:	call   0x140004db8
   1400050fd:	mov    r8d,DWORD PTR [rdi+0xb4]
   140005104:	mov    rdx,QWORD PTR [rdi+0xd0]
   14000510b:	movsxd rcx,eax
   14000510e:	lea    rbx,[rbx+rcx*2]
   140005112:	mov    rcx,rbx
   140005115:	call   0x140004db8
   14000511a:	mov    r8d,DWORD PTR [rdi+0xfc]
   140005121:	mov    rdx,QWORD PTR [rdi+0x118]
   140005128:	movsxd rcx,eax
   14000512b:	lea    rbx,[rbx+rcx*2]
   14000512f:	mov    rcx,rbx
   140005132:	call   0x140004db8
   140005137:	movsxd rcx,eax
   14000513a:	lea    rbx,[rbx+rcx*2]
   14000513e:	jmp    0x14000529c
   140005143:	mov    eax,0xff
   140005148:	cmp    r13d,eax
   14000514b:	jg     0x140005823
   140005151:	cmp    ebx,eax
   140005153:	jg     0x140005823
   140005159:	cmp    r14d,eax
   14000515c:	jg     0x140005823
   140005162:	cmp    r12d,eax
   140005165:	jg     0x140005823
   14000516b:	mov    eax,0x3
   140005170:	mov    r14d,0x1
   140005176:	mov    WORD PTR [rsi],ax
   140005179:	mov    ecx,r14d
   14000517c:	mov    al,BYTE PTR [rdi+0x1c]
   14000517f:	mov    BYTE PTR [rsi+0x3],al
   140005182:	movzx  eax,WORD PTR [rdi+0x10]
   140005186:	mov    WORD PTR [rsi+0x4],ax
   14000518a:	mov    rax,QWORD PTR [rdi]
   14000518d:	mov    QWORD PTR [rsi+0x8],rax
   140005191:	movzx  eax,WORD PTR [rdi+0x14]
   140005195:	mov    WORD PTR [rsi+0x6],ax
   140005199:	mov    eax,DWORD PTR [rdi+0x74]
   14000519c:	mov    DWORD PTR [rsi+0x18],eax
   14000519f:	mov    al,BYTE PTR [rdi+0x78]
   1400051a2:	mov    BYTE PTR [rsi+0x10],al
   1400051a5:	mov    eax,DWORD PTR [rdi+0x130]
   1400051ab:	mov    DWORD PTR [rsi+0x1c],eax
   1400051ae:	mov    al,BYTE PTR [rdi+0x134]
   1400051b4:	mov    BYTE PTR [rsi+0x11],al
   1400051b7:	mov    eax,DWORD PTR [rdi+0xb0]
   1400051bd:	mov    DWORD PTR [rsi+0x20],eax
   1400051c0:	mov    al,BYTE PTR [rdi+0xb4]
   1400051c6:	mov    BYTE PTR [rsi+0x12],al
   1400051c9:	mov    eax,DWORD PTR [rdi+0xe8]
   1400051cf:	mov    DWORD PTR [rsi+0x14],eax
   1400051d2:	mov    al,BYTE PTR [rdi+0xfc]
   1400051d8:	mov    BYTE PTR [rsi+0x13],al
   1400051db:	mov    rax,rdx
   1400051de:	mov    DWORD PTR [rsi+0x24],r15d
   1400051e2:	mov    BYTE PTR [rsi+0x2],dl
   1400051e5:	cmp    BYTE PTR [rdi+rax*1+0x60],dl
   1400051e9:	je     0x1400051ee
   1400051eb:	or     BYTE PTR [rsi+0x2],cl
   1400051ee:	add    rcx,rcx
   1400051f1:	add    rax,r14
   1400051f4:	cmp    rax,0x8
   1400051f8:	jb     0x1400051e5
   1400051fa:	movsxd rdx,DWORD PTR [rdi+0x78]
   1400051fe:	lea    rbx,[rsi+0x30]
   140005202:	mov    r8,QWORD PTR [rdi+0x98]
   140005209:	mov    rcx,rbx
   14000520c:	shl    rdx,0x2
   140005210:	mov    r9,rdx
   140005213:	call   QWORD PTR [rip+0x404f]        # 0x140009268
   140005219:	movsxd rax,DWORD PTR [rdi+0x78]
   14000521d:	movsxd rdx,DWORD PTR [rdi+0x134]
   140005224:	mov    r8,QWORD PTR [rdi+0x150]
   14000522b:	shl    rdx,0x2
   14000522f:	lea    rbx,[rbx+rax*4]
   140005233:	mov    r9,rdx
   140005236:	mov    rcx,rbx
   140005239:	call   QWORD PTR [rip+0x4029]        # 0x140009268
   14000523f:	movsxd rax,DWORD PTR [rdi+0x134]
   140005246:	movsxd rdx,DWORD PTR [rdi+0xb4]
   14000524d:	mov    r8,QWORD PTR [rdi+0xd0]
   140005254:	shl    rdx,0x2
   140005258:	lea    rbx,[rbx+rax*4]
   14000525c:	mov    r9,rdx
   14000525f:	mov    rcx,rbx
   140005262:	call   QWORD PTR [rip+0x4000]        # 0x140009268
   140005268:	movsxd rax,DWORD PTR [rdi+0xb4]
   14000526f:	movsxd rdx,DWORD PTR [rdi+0xfc]
   140005276:	mov    r8,QWORD PTR [rdi+0x118]
   14000527d:	shl    rdx,0x2
   140005281:	lea    rbx,[rbx+rax*4]
   140005285:	mov    r9,rdx
   140005288:	mov    rcx,rbx
   14000528b:	call   QWORD PTR [rip+0x3fd7]        # 0x140009268
   140005291:	movsxd rax,DWORD PTR [rdi+0xfc]
   140005298:	lea    rbx,[rbx+rax*4]
   14000529c:	xor    r11d,r11d
   14000529f:	mov    r8d,r11d
   1400052a2:	cmp    DWORD PTR [rdi+0x74],r11d
   1400052a6:	jle    0x1400052d2
   1400052a8:	mov    edx,r11d
   1400052ab:	mov    rax,QWORD PTR [rdi+0x88]
   1400052b2:	add    r8d,r14d
   1400052b5:	mov    ecx,DWORD PTR [rdx+rax*1]
   1400052b8:	lea    rdx,[rdx+0x4]
   1400052bc:	mov    rax,QWORD PTR [rdi+0x80]
   1400052c3:	mov    ecx,DWORD PTR [rax+rcx*4]
   1400052c6:	mov    DWORD PTR [rbx],ecx
   1400052c8:	add    rbx,0x4
   1400052cc:	cmp    r8d,DWORD PTR [rdi+0x74]
   1400052d0:	jl     0x1400052ab
   1400052d2:	mov    r8d,r11d
   1400052d5:	cmp    DWORD PTR [rdi+0x130],r11d
   1400052dc:	jle    0x14000530b
   1400052de:	mov    rdx,r11
   1400052e1:	mov    rax,QWORD PTR [rdi+0x140]
   1400052e8:	add    r8d,r14d
   1400052eb:	mov    ecx,DWORD PTR [rdx+rax*1]
   1400052ee:	lea    rdx,[rdx+0x4]
   1400052f2:	mov    rax,QWORD PTR [rdi+0x138]
   1400052f9:	mov    ecx,DWORD PTR [rax+rcx*4]
   1400052fc:	mov    DWORD PTR [rbx],ecx
   1400052fe:	add    rbx,0x4
   140005302:	cmp    r8d,DWORD PTR [rdi+0x130]
   140005309:	jl     0x1400052e1
   14000530b:	mov    edx,r11d
   14000530e:	mov    r10,QWORD PTR [rdi+0x68]
   140005312:	cmp    DWORD PTR [rdi+0xb0],r11d
   140005319:	jle    0x140005354
   14000531b:	mov    r8,r11
   14000531e:	mov    rax,QWORD PTR [rdi+0xc0]
   140005325:	add    edx,r14d
   140005328:	mov    ecx,DWORD PTR [r8+rax*1]
   14000532c:	lea    r8,[r8+0x4]
   140005330:	mov    rax,QWORD PTR [rdi+0xb8]
   140005337:	mov    ecx,DWORD PTR [rax+rcx*4]
   14000533a:	lea    rax,[rcx+rcx*2]
   14000533e:	add    rax,rax
   140005341:	mov    eax,DWORD PTR [r10+rax*8+0x28]
   140005346:	mov    DWORD PTR [rbx],eax
   140005348:	add    rbx,0x4
   14000534c:	cmp    edx,DWORD PTR [rdi+0xb0]
   140005352:	jl     0x14000531e
   140005354:	mov    r9d,r11d
   140005357:	cmp    DWORD PTR [rdi+0xe8],r11d
   14000535e:	jle    0x1400053a4
   140005360:	mov    r8,r11
   140005363:	mov    rax,QWORD PTR [rdi+0x108]
   14000536a:	mov    ecx,DWORD PTR [r8+rax*1]
   14000536e:	mov    rax,QWORD PTR [rdi+0x100]
   140005375:	movsxd rdx,DWORD PTR [rax+rcx*4]
   140005379:	test   edx,edx
   14000537b:	jns    0x14000538e
   14000537d:	lea    rcx,[rdx+rdx*2]
   140005381:	mov    rax,r10
   140005384:	shl    rcx,0x4
   140005388:	sub    rax,rcx
   14000538b:	mov    edx,DWORD PTR [rax+0x20]
   14000538e:	mov    DWORD PTR [rbx],edx
   140005390:	add    r9d,r14d
   140005393:	add    rbx,0x4
   140005397:	add    r8,0x4
   14000539b:	cmp    r9d,DWORD PTR [rdi+0xe8]
   1400053a2:	jl     0x140005363
   1400053a4:	mov    r12,QWORD PTR [rdi+0xa8]
   1400053ab:	mov    r9,QWORD PTR [rdi+0x160]
   1400053b2:	mov    r8,QWORD PTR [rdi+0xe0]
   1400053b9:	mov    rdx,QWORD PTR [rdi+0x128]
   1400053c0:	mov    eax,DWORD PTR [rdi+0x20]
   1400053c3:	mov    r14,QWORD PTR [rdi+0x68]
   1400053c7:	mov    r13,QWORD PTR [rdi+0x178]
   1400053ce:	mov    QWORD PTR [rsp+0x30],r12
   1400053d3:	mov    QWORD PTR [rsp+0xa8],r9
   1400053db:	mov    QWORD PTR [rsp+0x98],r8
   1400053e3:	mov    QWORD PTR [rsp+0xa0],rdx
   1400053eb:	test   eax,eax
   1400053ed:	je     0x140005660
   1400053f3:	dec    eax
   1400053f5:	mov    ecx,r11d
   1400053f8:	mov    DWORD PTR [rsp+0x90],eax
   1400053ff:	cmp    DWORD PTR [r14],r11d
   140005402:	jle    0x14000541c
   140005404:	mov    al,BYTE PTR [r12]
   140005408:	inc    ecx
   14000540a:	mov    BYTE PTR [rbx],al
   14000540c:	inc    r12
   14000540f:	inc    rbx
   140005412:	cmp    ecx,DWORD PTR [r14]
   140005415:	jl     0x140005404
   140005417:	mov    QWORD PTR [rsp+0x30],r12
   14000541c:	test   DWORD PTR [r13+0x4],0x400
   140005424:	mov    r12d,r11d
   140005427:	je     0x140005450
   140005429:	mov    rcx,rbx
   14000542c:	mov    rdx,QWORD PTR [r13+0x10]
   140005430:	cmp    BYTE PTR [rdi+0x180],r11b
   140005437:	je     0x140005440
   140005439:	call   0x140004e20
   14000543e:	jmp    0x140005445
   140005440:	call   0x140004ea4
   140005445:	mov    r12d,eax
   140005448:	cdqe   
   14000544a:	add    rbx,rax
   14000544d:	xor    r11d,r11d
   140005450:	test   BYTE PTR [r13+0x4],0x4
   140005455:	je     0x14000547b
   140005457:	mov    rcx,rbx
   14000545a:	mov    rdx,QWORD PTR [r13+0x8]
   14000545e:	cmp    BYTE PTR [rdi+0x180],r11b
   140005465:	je     0x14000546e
   140005467:	call   0x140004e20
   14000546c:	jmp    0x140005473
   14000546e:	call   0x140004ea4
   140005473:	add    r12d,eax
   140005476:	cdqe   
   140005478:	add    rbx,rax
   14000547b:	cmp    r12d,DWORD PTR [r14+0x4]
   14000547f:	jne    0x140005618
   140005485:	mov    eax,DWORD PTR [r14+0x8]
   140005489:	xor    r11d,r11d
   14000548c:	mov    r9,QWORD PTR [rsp+0xa8]
   140005494:	lea    r10d,[r11+0x1]
   140005498:	test   eax,eax
   14000549a:	je     0x1400054bd
   14000549c:	mov    ecx,r11d
   14000549f:	jle    0x1400054bd
   1400054a1:	mov    al,BYTE PTR [r9]
   1400054a4:	add    ecx,r10d
   1400054a7:	mov    BYTE PTR [rbx],al
   1400054a9:	add    r9,r10
   1400054ac:	add    rbx,r10
   1400054af:	cmp    ecx,DWORD PTR [r14+0x8]
   1400054b3:	jl     0x1400054a1
   1400054b5:	mov    QWORD PTR [rsp+0xa8],r9
   1400054bd:	mov    eax,DWORD PTR [r14+0x1c]
   1400054c1:	test   eax,eax
   1400054c3:	je     0x1400054f0
   1400054c5:	mov    r8,QWORD PTR [rsp+0x98]
   1400054cd:	mov    ecx,r11d
   1400054d0:	jle    0x140005532
   1400054d2:	mov    al,BYTE PTR [r8]
   1400054d5:	add    ecx,r10d
   1400054d8:	mov    BYTE PTR [rbx],al
   1400054da:	add    r8,r10
   1400054dd:	add    rbx,r10
   1400054e0:	cmp    ecx,DWORD PTR [r14+0x1c]
   1400054e4:	jl     0x1400054d2
   1400054e6:	mov    QWORD PTR [rsp+0x98],r8
   1400054ee:	jmp    0x140005532
   1400054f0:	mov    eax,DWORD PTR [r14+0x18]
   1400054f4:	test   eax,eax
   1400054f6:	je     0x14000552a
   1400054f8:	mov    ecx,r11d
   1400054fb:	jle    0x14000552a
   1400054fd:	mov    rdx,QWORD PTR [rsp+0xa0]
   140005505:	mov    al,BYTE PTR [rdx]
   140005507:	add    ecx,r10d
   14000550a:	mov    BYTE PTR [rbx],al
   14000550c:	add    rdx,r10
   14000550f:	add    rbx,r10
   140005512:	cmp    ecx,DWORD PTR [r14+0x18]
   140005516:	jl     0x140005505
   140005518:	mov    r8,QWORD PTR [rsp+0x98]
   140005520:	mov    QWORD PTR [rsp+0xa0],rdx
   140005528:	jmp    0x14000553a
   14000552a:	mov    r8,QWORD PTR [rsp+0x98]
   140005532:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000553a:	mov    eax,DWORD PTR [r14+0xc]
   14000553e:	test   eax,eax
   140005540:	je     0x140005569
   140005542:	mov    ecx,r11d
   140005545:	jle    0x1400055d2
   14000554b:	mov    al,BYTE PTR [r8]
   14000554e:	add    ecx,r10d
   140005551:	mov    BYTE PTR [rbx],al
   140005553:	add    r8,r10
   140005556:	add    rbx,r10
   140005559:	cmp    ecx,DWORD PTR [r14+0xc]
   14000555d:	jl     0x14000554b
   14000555f:	mov    QWORD PTR [rsp+0x98],r8
   140005567:	jmp    0x1400055d2
   140005569:	mov    eax,DWORD PTR [r14+0x14]
   14000556d:	test   eax,eax
   14000556f:	je     0x140005593
   140005571:	mov    ecx,r11d
   140005574:	jle    0x1400055d2
   140005576:	mov    al,BYTE PTR [rdx]
   140005578:	add    ecx,r10d
   14000557b:	mov    BYTE PTR [rbx],al
   14000557d:	add    rdx,r10
   140005580:	add    rbx,r10
   140005583:	cmp    ecx,DWORD PTR [r14+0x14]
   140005587:	jl     0x140005576
   140005589:	mov    QWORD PTR [rsp+0xa0],rdx
   140005591:	jmp    0x1400055d2
   140005593:	cmp    DWORD PTR [r14+0x10],r11d
   140005597:	je     0x1400055d2
   140005599:	mov    eax,DWORD PTR [r13+0x18]
   14000559d:	lea    rcx,[rax+rax*2]
   1400055a1:	mov    rax,QWORD PTR [rdi+0x68]
   1400055a5:	add    rcx,rcx
   1400055a8:	mov    r12d,DWORD PTR [rax+rcx*8+0x28]
   1400055ad:	cmp    r12d,0xffffff
   1400055b4:	ja     0x1400055eb
   1400055b6:	mov    eax,r12d
   1400055b9:	shr    eax,0x10
   1400055bc:	mov    BYTE PTR [rbx],al
   1400055be:	add    rbx,r10
   1400055c1:	mov    eax,r12d
   1400055c4:	shr    eax,0x8
   1400055c7:	mov    BYTE PTR [rbx],al
   1400055c9:	add    rbx,r10
   1400055cc:	mov    BYTE PTR [rbx],r12b
   1400055cf:	add    rbx,r10
   1400055d2:	mov    eax,DWORD PTR [rsp+0x90]
   1400055d9:	add    r13,0x40
   1400055dd:	mov    r12,QWORD PTR [rsp+0x30]
   1400055e2:	add    r14,0x30
   1400055e6:	jmp    0x1400053eb
   1400055eb:	mov    ecx,0x2
   1400055f0:	call   0x140008dc8
   1400055f5:	mov    r8d,DWORD PTR [r13+0x18]
   1400055f9:	lea    rdx,[rip+0x4908]        # 0x140009f08
   140005600:	mov    rcx,rax
   140005603:	mov    r9d,r12d
   140005606:	call   QWORD PTR [rip+0x3c2c]        # 0x140009238
   14000560c:	mov    ecx,0x1
   140005611:	call   QWORD PTR [rip+0x3bb1]        # 0x1400091c8
   140005617:	int3   
   140005618:	mov    ebx,DWORD PTR [rdi+0x20]
   14000561b:	mov    ecx,0x2
   140005620:	sub    ebx,DWORD PTR [rsp+0x90]
   140005627:	call   0x140008dc8
   14000562c:	mov    rcx,rax
   14000562f:	lea    r8d,[rbx+0x1]
   140005633:	mov    rax,QWORD PTR [r13+0x8]
   140005637:	lea    rdx,[rip+0x4852]        # 0x140009e90
   14000563e:	mov    QWORD PTR [rsp+0x28],rax
   140005643:	mov    r9d,r12d
   140005646:	mov    eax,DWORD PTR [r14+0x4]
   14000564a:	mov    DWORD PTR [rsp+0x20],eax
   14000564e:	call   QWORD PTR [rip+0x3be4]        # 0x140009238
   140005654:	mov    ecx,0x1
   140005659:	call   QWORD PTR [rip+0x3b69]        # 0x1400091c8
   14000565f:	int3   
   140005660:	sub    r12,QWORD PTR [rdi+0xa8]
   140005667:	movsxd r14,DWORD PTR [rdi+0xa0]
   14000566e:	cmp    r12,r14
   140005671:	je     0x14000569f
   140005673:	mov    ecx,0x2
   140005678:	call   0x140008dc8
   14000567d:	mov    rcx,rax
   140005680:	lea    rdx,[rip+0x48c9]        # 0x140009f50
   140005687:	mov    r9d,r14d
   14000568a:	mov    r8,r12
   14000568d:	call   QWORD PTR [rip+0x3ba5]        # 0x140009238
   140005693:	mov    ecx,0x1
   140005698:	call   QWORD PTR [rip+0x3b2a]        # 0x1400091c8
   14000569e:	int3   
   14000569f:	sub    r9,QWORD PTR [rdi+0x160]
   1400056a6:	movsxd r14,DWORD PTR [rdi+0x158]
   1400056ad:	mov    QWORD PTR [rsp+0xa8],r9
   1400056b5:	cmp    r9,r14
   1400056b8:	je     0x1400056eb
   1400056ba:	mov    ecx,0x2
   1400056bf:	call   0x140008dc8
   1400056c4:	mov    r8,QWORD PTR [rsp+0xa8]
   1400056cc:	lea    rdx,[rip+0x48cd]        # 0x140009fa0
   1400056d3:	mov    rcx,rax
   1400056d6:	mov    r9d,r14d
   1400056d9:	call   QWORD PTR [rip+0x3b59]        # 0x140009238
   1400056df:	mov    ecx,0x1
   1400056e4:	call   QWORD PTR [rip+0x3ade]        # 0x1400091c8
   1400056ea:	int3   
   1400056eb:	sub    r8,QWORD PTR [rdi+0xe0]
   1400056f2:	movsxd r14,DWORD PTR [rdi+0xd8]
   1400056f9:	mov    QWORD PTR [rsp+0x98],r8
   140005701:	cmp    r8,r14
   140005704:	je     0x140005737
   140005706:	mov    ecx,0x2
   14000570b:	call   0x140008dc8
   140005710:	mov    r8,QWORD PTR [rsp+0x98]
   140005718:	lea    rdx,[rip+0x48d1]        # 0x140009ff0
   14000571f:	mov    rcx,rax
   140005722:	mov    r9d,r14d
   140005725:	call   QWORD PTR [rip+0x3b0d]        # 0x140009238
   14000572b:	mov    ecx,0x1
   140005730:	call   QWORD PTR [rip+0x3a92]        # 0x1400091c8
   140005736:	int3   
   140005737:	sub    rdx,QWORD PTR [rdi+0x128]
   14000573e:	movsxd r14,DWORD PTR [rdi+0x120]
   140005745:	mov    QWORD PTR [rsp+0xa0],rdx
   14000574d:	cmp    rdx,r14
   140005750:	je     0x140005783
   140005752:	mov    ecx,0x2
   140005757:	call   0x140008dc8
   14000575c:	mov    r8,QWORD PTR [rsp+0xa0]
   140005764:	lea    rdx,[rip+0x48e5]        # 0x14000a050
   14000576b:	mov    rcx,rax
   14000576e:	mov    r9d,r14d
   140005771:	call   QWORD PTR [rip+0x3ac1]        # 0x140009238
   140005777:	mov    ecx,0x1
   14000577c:	call   QWORD PTR [rip+0x3a46]        # 0x1400091c8
   140005782:	int3   
   140005783:	mov    eax,ebx
   140005785:	sub    eax,esi
   140005787:	cmp    ebp,eax
   140005789:	je     0x1400057ba
   14000578b:	mov    ecx,0x2
   140005790:	sub    rbx,rsi
   140005793:	call   0x140008dc8
   140005798:	mov    rcx,rax
   14000579b:	lea    rdx,[rip+0x490e]        # 0x14000a0b0
   1400057a2:	mov    r9,rbx
   1400057a5:	mov    r8d,ebp
   1400057a8:	call   QWORD PTR [rip+0x3a8a]        # 0x140009238
   1400057ae:	mov    ecx,0x1
   1400057b3:	call   QWORD PTR [rip+0x3a0f]        # 0x1400091c8
   1400057b9:	int3   
   1400057ba:	mov    rbx,QWORD PTR [rdi+0x170]
   1400057c1:	mov    eax,ebp
   1400057c3:	cmp    rax,rbx
   1400057c6:	je     0x1400057f4
   1400057c8:	mov    ecx,0x2
   1400057cd:	call   0x140008dc8
   1400057d2:	mov    rcx,rax
   1400057d5:	lea    rdx,[rip+0x4924]        # 0x14000a100
   1400057dc:	mov    r9,rbx
   1400057df:	mov    r8d,ebp
   1400057e2:	call   QWORD PTR [rip+0x3a50]        # 0x140009238
   1400057e8:	mov    ecx,0x1
   1400057ed:	call   QWORD PTR [rip+0x39d5]        # 0x1400091c8
   1400057f3:	int3   
   1400057f4:	sub    ebp,r15d
   1400057f7:	cmp    BYTE PTR [rdi+0x180],r11b
   1400057fe:	je     0x140005805
   140005800:	mov    DWORD PTR [rsi+0x2c],ebp
   140005803:	jmp    0x140005808
   140005805:	mov    DWORD PTR [rsi+0x28],ebp
   140005808:	mov    rcx,QWORD PTR [rdi+0x178]
   14000580f:	call   QWORD PTR [rip+0x39ab]        # 0x1400091c0
   140005815:	xor    eax,eax
   140005817:	mov    QWORD PTR [rdi+0x178],rsi
   14000581e:	jmp    0x140005017
   140005823:	mov    ecx,0x2
   140005828:	call   0x140008dc8
   14000582d:	mov    rcx,rax
   140005830:	mov    DWORD PTR [rsp+0x28],r12d
   140005835:	mov    r9d,ebx
   140005838:	mov    DWORD PTR [rsp+0x20],r14d
   14000583d:	mov    r8d,r13d
   140005840:	lea    rdx,[rip+0x45d9]        # 0x140009e20
   140005847:	call   QWORD PTR [rip+0x39eb]        # 0x140009238
   14000584d:	mov    ecx,0x1
   140005852:	call   QWORD PTR [rip+0x3970]        # 0x1400091c8
   140005858:	int3   
   140005859:	int3   
   14000585a:	int3   
   14000585b:	int3   
   14000585c:	int3   
   14000585d:	int3   
   14000585e:	int3   
   14000585f:	int3   
   140005860:	mov    r9d,DWORD PTR [rdx]
   140005863:	mov    edx,DWORD PTR [r8]
   140005866:	mov    r8d,DWORD PTR [rcx+r9*4]
   14000586a:	mov    r10d,DWORD PTR [rcx+rdx*4]
   14000586e:	xor    ecx,ecx
   140005870:	mov    eax,ecx
   140005872:	cmp    r10d,r8d
   140005875:	jne    0x140005882
   140005877:	cmp    r9d,edx
   14000587a:	seta   al
   14000587d:	cmp    r9d,edx
   140005880:	jmp    0x140005888
   140005882:	seta   al
   140005885:	cmp    r10d,r8d
   140005888:	setb   cl
   14000588b:	sub    eax,ecx
   14000588d:	ret    
   14000588e:	int3   
   14000588f:	int3   
   140005890:	int3   
   140005891:	int3   
   140005892:	int3   
   140005893:	int3   
   140005894:	mov    r8d,DWORD PTR [rcx+0x20]
   140005898:	xor    r9d,r9d
   14000589b:	mov    rdx,QWORD PTR [rcx+0x68]
   14000589f:	xor    eax,eax
   1400058a1:	jmp    0x1400058d3
   1400058a3:	dec    r8d
   1400058a6:	cmp    DWORD PTR [rdx+0x28],r9d
   1400058aa:	je     0x1400058b5
   1400058ac:	mov    DWORD PTR [rdx+0x28],r9d
   1400058b0:	mov    eax,0x1
   1400058b5:	mov    ecx,DWORD PTR [rdx+0x1c]
   1400058b8:	add    ecx,DWORD PTR [rdx+0x18]
   1400058bb:	add    ecx,DWORD PTR [rdx+0x14]
   1400058be:	add    ecx,DWORD PTR [rdx+0x10]
   1400058c1:	add    ecx,DWORD PTR [rdx+0xc]
   1400058c4:	add    ecx,DWORD PTR [rdx+0x8]
   1400058c7:	add    ecx,DWORD PTR [rdx+0x4]
   1400058ca:	add    ecx,DWORD PTR [rdx]
   1400058cc:	add    r9d,ecx
   1400058cf:	add    rdx,0x30
   1400058d3:	test   r8d,r8d
   1400058d6:	jne    0x1400058a3
   1400058d8:	ret    
   1400058d9:	int3   
   1400058da:	int3   
   1400058db:	int3   
   1400058dc:	int3   
   1400058dd:	int3   
   1400058de:	int3   
   1400058df:	int3   
   1400058e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400058e5:	mov    QWORD PTR [rsp+0x10],rdi
   1400058ea:	mov    r9d,DWORD PTR [rcx+0x20]
   1400058ee:	xor    edi,edi
   1400058f0:	mov    r10,QWORD PTR [rcx+0x178]
   1400058f7:	mov    r11,rcx
   1400058fa:	mov    rdx,QWORD PTR [rcx+0x68]
   1400058fe:	mov    ebx,edi
   140005900:	mov    r8b,dil
   140005903:	test   r9d,r9d
   140005906:	je     0x14000596e
   140005908:	add    r10,0x4
   14000590c:	add    rdx,0x2c
   140005910:	mov    eax,DWORD PTR [r10]
   140005913:	dec    r9d
   140005916:	and    eax,0x1d0
   14000591b:	cmp    eax,0x10
   14000591e:	jne    0x140005954
   140005920:	mov    eax,DWORD PTR [r10+0x14]
   140005924:	lea    rcx,[rax+rax*2]
   140005928:	mov    rax,QWORD PTR [r11+0x68]
   14000592c:	add    rcx,rcx
   14000592f:	mov    ecx,DWORD PTR [rax+rcx*8+0x28]
   140005933:	test   r8b,r8b
   140005936:	jne    0x14000593b
   140005938:	mov    ebx,DWORD PTR [rdx+0x2c]
   14000593b:	mov    eax,ecx
   14000593d:	sub    eax,ebx
   14000593f:	cmp    DWORD PTR [rdx-0xc],eax
   140005942:	je     0x140005949
   140005944:	or     DWORD PTR [rdx],0x1
   140005947:	jmp    0x14000594c
   140005949:	and    DWORD PTR [rdx],0xfffffffe
   14000594c:	mov    DWORD PTR [rdx-0xc],eax
   14000594f:	mov    ebx,ecx
   140005951:	mov    r8b,0x1
   140005954:	mov    al,BYTE PTR [r10]
   140005957:	and    al,0x2
   140005959:	movzx  r8d,r8b
   14000595d:	cmovne r8d,edi
   140005961:	add    rdx,0x30
   140005965:	add    r10,0x40
   140005969:	test   r9d,r9d
   14000596c:	jne    0x140005910
   14000596e:	mov    rbx,QWORD PTR [rsp+0x8]
   140005973:	mov    rdi,QWORD PTR [rsp+0x10]
   140005978:	ret    
   140005979:	int3   
   14000597a:	int3   
   14000597b:	int3   
   14000597c:	int3   
   14000597d:	int3   
   14000597e:	int3   
   14000597f:	int3   
   140005980:	mov    QWORD PTR [rsp+0x20],rbx
   140005985:	push   rbp
   140005986:	push   rsi
   140005987:	push   rdi
   140005988:	push   r12
   14000598a:	push   r13
   14000598c:	push   r14
   14000598e:	push   r15
   140005990:	sub    rsp,0x30
   140005994:	mov    r13,QWORD PTR [rcx+0xf0]
   14000599b:	lea    r9,[rip+0xffffffffffffe91e]        # 0x1400042c0
   1400059a2:	movsxd rdx,DWORD PTR [rcx+0xf8]
   1400059a9:	mov    r14,rcx
   1400059ac:	mov    rcx,r13
   1400059af:	mov    r8d,0x4
   1400059b5:	call   QWORD PTR [rip+0x382d]        # 0x1400091e8
   1400059bb:	movsxd rbp,DWORD PTR [r14+0xf8]
   1400059c2:	xor    ebx,ebx
   1400059c4:	mov    r12d,ebx
   1400059c7:	mov    r15d,ebx
   1400059ca:	lea    r11d,[rbx+0x1]
   1400059ce:	test   rbp,rbp
   1400059d1:	jne    0x140005a0c
   1400059d3:	mov    ebp,ebx
   1400059d5:	mov    QWORD PTR [rsp+0x78],rbx
   1400059da:	mov    esi,ebx
   1400059dc:	lea    rdi,[r14+0x100]
   1400059e3:	mov    DWORD PTR [r14+0xe8],esi
   1400059ea:	mov    rcx,rdi
   1400059ed:	mov    r8d,0x4
   1400059f3:	mov    edx,esi
   1400059f5:	call   0x140008204
   1400059fa:	test   eax,eax
   1400059fc:	jne    0x140005b44
   140005a02:	mov    edi,0x8007000e
   140005a07:	jmp    0x140005ca1
   140005a0c:	cmp    rbp,r11
   140005a0f:	ja     0x140005a16
   140005a11:	mov    rsi,rbp
   140005a14:	jmp    0x140005a53
   140005a16:	mov    rsi,r11
   140005a19:	mov    r8,r11
   140005a1c:	cmp    r11,rbp
   140005a1f:	jae    0x140005a53
   140005a21:	mov    r9,rbx
   140005a24:	mov    edx,ebx
   140005a26:	mov    eax,ebx
   140005a28:	mov    r10,r8
   140005a2b:	shl    r10,0x2
   140005a2f:	mov    ecx,DWORD PTR [r10+r13*1]
   140005a33:	cmp    DWORD PTR [r9+r13*1],ecx
   140005a37:	setg   dl
   140005a3a:	cmp    DWORD PTR [r9+r13*1],ecx
   140005a3e:	setl   al
   140005a41:	cmp    edx,eax
   140005a43:	je     0x140005a4b
   140005a45:	add    rsi,r11
   140005a48:	mov    r9,r10
   140005a4b:	add    r8,r11
   140005a4e:	cmp    r8,rbp
   140005a51:	jb     0x140005a24
   140005a53:	cmp    esi,0x1fffffff
   140005a59:	ja     0x140005a6b
   140005a5b:	mov    ecx,esi
   140005a5d:	shl    ecx,0x2
   140005a60:	call   QWORD PTR [rip+0x3752]        # 0x1400091b8
   140005a66:	mov    rdi,rax
   140005a69:	jmp    0x140005a6e
   140005a6b:	mov    rdi,rbx
   140005a6e:	test   rdi,rdi
   140005a71:	jne    0x140005a7d
   140005a73:	mov    edi,0x8007000e
   140005a78:	jmp    0x140005ca6
   140005a7d:	cmp    esi,0x1fffffff
   140005a83:	ja     0x140005a95
   140005a85:	mov    ecx,esi
   140005a87:	shl    ecx,0x2
   140005a8a:	call   QWORD PTR [rip+0x3728]        # 0x1400091b8
   140005a90:	mov    r9,rax
   140005a93:	jmp    0x140005a98
   140005a95:	mov    r9,rbx
   140005a98:	test   r9,r9
   140005a9b:	jne    0x140005aa8
   140005a9d:	mov    rcx,rdi
   140005aa0:	call   QWORD PTR [rip+0x371a]        # 0x1400091c0
   140005aa6:	jmp    0x140005a73
   140005aa8:	mov    r8d,0x1
   140005aae:	mov    DWORD PTR [r9],ebx
   140005ab1:	mov    DWORD PTR [rdi],0x1
   140005ab7:	mov    r11,rbx
   140005aba:	cmp    r8,rbp
   140005abd:	jae    0x140005b05
   140005abf:	mov    r10,rdi
   140005ac2:	mov    edx,ebx
   140005ac4:	mov    eax,ebx
   140005ac6:	mov    r12,r8
   140005ac9:	shl    r12,0x2
   140005acd:	mov    ecx,DWORD PTR [r12+r13*1]
   140005ad1:	cmp    DWORD PTR [r15+r13*1],ecx
   140005ad5:	setg   dl
   140005ad8:	cmp    DWORD PTR [r15+r13*1],ecx
   140005adc:	setl   al
   140005adf:	cmp    edx,eax
   140005ae1:	je     0x140005afa
   140005ae3:	inc    r11
   140005ae6:	mov    r15,r12
   140005ae9:	lea    r10,[rdi+r11*4]
   140005aed:	mov    DWORD PTR [r9+r11*4],r8d
   140005af1:	mov    DWORD PTR [r10],0x1
   140005af8:	jmp    0x140005afd
   140005afa:	inc    DWORD PTR [r10]
   140005afd:	inc    r8
   140005b00:	cmp    r8,rbp
   140005b03:	jb     0x140005ac2
   140005b05:	mov    QWORD PTR [rsp+0x78],r9
   140005b0a:	mov    r12,rdi
   140005b0d:	mov    rbp,r9
   140005b10:	cmp    rsi,0x7fffffff
   140005b17:	jbe    0x1400059dc
   140005b1d:	mov    ecx,0x2
   140005b22:	call   0x140008dc8
   140005b27:	mov    rcx,rax
   140005b2a:	lea    rdx,[rip+0x4647]        # 0x14000a178
   140005b31:	call   QWORD PTR [rip+0x3701]        # 0x140009238
   140005b37:	mov    edi,0x80004005
   140005b3c:	mov    r15,rbp
   140005b3f:	jmp    0x140005ca6
   140005b44:	lea    r15,[r14+0x108]
   140005b4b:	mov    r8d,0x4
   140005b51:	mov    rcx,r15
   140005b54:	mov    edx,esi
   140005b56:	call   0x140008204
   140005b5b:	test   eax,eax
   140005b5d:	je     0x140005a02
   140005b63:	mov    rdx,QWORD PTR [rdi]
   140005b66:	mov    r8,rbx
   140005b69:	mov    rdi,QWORD PTR [r15]
   140005b6c:	test   rsi,rsi
   140005b6f:	je     0x140005b98
   140005b71:	mov    r9,rbp
   140005b74:	mov    r10,rdi
   140005b77:	sub    r9,rdx
   140005b7a:	sub    r10,rdx
   140005b7d:	mov    eax,DWORD PTR [r9+rdx*1]
   140005b81:	mov    ecx,DWORD PTR [r13+rax*4+0x0]
   140005b86:	mov    DWORD PTR [rdx],ecx
   140005b88:	mov    DWORD PTR [r10+rdx*1],r8d
   140005b8c:	inc    r8
   140005b8f:	lea    rdx,[rdx+0x4]
   140005b93:	cmp    r8,rsi
   140005b96:	jb     0x140005b7d
   140005b98:	mov    r13d,0x4
   140005b9e:	mov    QWORD PTR [rsp+0x20],r12
   140005ba3:	mov    r8d,r13d
   140005ba6:	lea    r9,[rip+0xfffffffffffffcb3]        # 0x140005860
   140005bad:	mov    rdx,rsi
   140005bb0:	mov    rcx,rdi
   140005bb3:	call   QWORD PTR [rip+0x369f]        # 0x140009258
   140005bb9:	lea    r9,[rip+0xffffffffffffe720]        # 0x1400042e0
   140005bc0:	mov    r8d,r13d
   140005bc3:	mov    rdx,rsi
   140005bc6:	mov    rcx,r12
   140005bc9:	call   QWORD PTR [rip+0x3619]        # 0x1400091e8
   140005bcf:	lea    r15,[r14+0x110]
   140005bd6:	mov    r8d,r13d
   140005bd9:	mov    rcx,r15
   140005bdc:	mov    edx,esi
   140005bde:	call   0x140008204
   140005be3:	test   eax,eax
   140005be5:	je     0x140005a02
   140005beb:	mov    rdx,QWORD PTR [r15]
   140005bee:	mov    rcx,rbx
   140005bf1:	test   rsi,rsi
   140005bf4:	je     0x140005c04
   140005bf6:	mov    eax,DWORD PTR [rdi+rcx*4]
   140005bf9:	mov    DWORD PTR [rdx+rax*4],ecx
   140005bfc:	inc    rcx
   140005bff:	cmp    rcx,rsi
   140005c02:	jb     0x140005bf6
   140005c04:	mov    QWORD PTR [rsp+0x80],rbx
   140005c0c:	mov    rbp,rbx
   140005c0f:	mov    DWORD PTR [rsp+0x70],ebx
   140005c13:	cmp    rsi,0x1
   140005c17:	jb     0x140005c42
   140005c19:	lea    r9,[rsp+0x70]
   140005c1e:	mov    rdx,r12
   140005c21:	lea    r8,[rsp+0x80]
   140005c29:	mov    rcx,rsi
   140005c2c:	call   0x140007b84
   140005c31:	mov    rbp,QWORD PTR [rsp+0x80]
   140005c39:	mov    edi,eax
   140005c3b:	mov    r15d,DWORD PTR [rsp+0x70]
   140005c40:	jmp    0x140005c47
   140005c42:	mov    r15d,ebx
   140005c45:	mov    edi,ebx
   140005c47:	test   edi,edi
   140005c49:	js     0x140005ca1
   140005c4b:	cmp    BYTE PTR [r14+0x180],bl
   140005c52:	je     0x140005c6e
   140005c54:	test   r15d,r15d
   140005c57:	jle    0x140005c6e
   140005c59:	mov    rax,rbp
   140005c5c:	cmp    DWORD PTR [rax],0xffff
   140005c62:	ja     0x140005cd2
   140005c64:	inc    ebx
   140005c66:	add    rax,r13
   140005c69:	cmp    ebx,r15d
   140005c6c:	jl     0x140005c5c
   140005c6e:	mov    rcx,QWORD PTR [r14+0x118]
   140005c75:	mov    DWORD PTR [r14+0xfc],r15d
   140005c7c:	call   QWORD PTR [rip+0x353e]        # 0x1400091c0
   140005c82:	mov    r9,rbp
   140005c85:	mov    QWORD PTR [r14+0x118],rbp
   140005c8c:	mov    r8d,r15d
   140005c8f:	mov    rdx,r12
   140005c92:	mov    rcx,rsi
   140005c95:	call   0x140007f44
   140005c9a:	mov    DWORD PTR [r14+0x120],eax
   140005ca1:	mov    r15,QWORD PTR [rsp+0x78]
   140005ca6:	mov    rcx,r12
   140005ca9:	call   QWORD PTR [rip+0x3511]        # 0x1400091c0
   140005caf:	mov    rcx,r15
   140005cb2:	call   QWORD PTR [rip+0x3508]        # 0x1400091c0
   140005cb8:	mov    rbx,QWORD PTR [rsp+0x88]
   140005cc0:	mov    eax,edi
   140005cc2:	add    rsp,0x30
   140005cc6:	pop    r15
   140005cc8:	pop    r14
   140005cca:	pop    r13
   140005ccc:	pop    r12
   140005cce:	pop    rdi
   140005ccf:	pop    rsi
   140005cd0:	pop    rbp
   140005cd1:	ret    
   140005cd2:	mov    ecx,0x2
   140005cd7:	call   0x140008dc8
   140005cdc:	mov    rcx,rax
   140005cdf:	lea    rdx,[rip+0x44ca]        # 0x14000a1b0
   140005ce6:	call   QWORD PTR [rip+0x354c]        # 0x140009238
   140005cec:	mov    edi,0x80004005
   140005cf1:	jmp    0x140005ca1
   140005cf3:	int3   
   140005cf4:	int3   
   140005cf5:	int3   
   140005cf6:	int3   
   140005cf7:	int3   
   140005cf8:	int3   
   140005cf9:	int3   
   140005cfa:	int3   
   140005cfb:	int3   
   140005cfc:	mov    QWORD PTR [rsp+0x8],rbx
   140005d01:	mov    DWORD PTR [rsp+0x10],edx
   140005d05:	push   rdi
   140005d06:	sub    rsp,0x30
   140005d0a:	mov    rdx,QWORD PTR [rcx+0x100]
   140005d11:	lea    rax,[rip+0xffffffffffffe5a8]        # 0x1400042c0
   140005d18:	mov    rdi,r8
   140005d1b:	mov    QWORD PTR [rsp+0x20],rax
   140005d20:	movsxd r8,DWORD PTR [rcx+0xe8]
   140005d27:	mov    rbx,rcx
   140005d2a:	lea    rcx,[rsp+0x48]
   140005d2f:	mov    r9d,0x4
   140005d35:	call   QWORD PTR [rip+0x3515]        # 0x140009250
   140005d3b:	test   rax,rax
   140005d3e:	je     0x140005d66
   140005d40:	sub    rax,QWORD PTR [rbx+0x100]
   140005d47:	mov    r8,rdi
   140005d4a:	mov    rdx,QWORD PTR [rbx+0x118]
   140005d51:	sar    rax,0x2
   140005d55:	mov    ecx,eax
   140005d57:	mov    rax,QWORD PTR [rbx+0x110]
   140005d5e:	mov    ecx,DWORD PTR [rax+rcx*4]
   140005d61:	call   0x140007ff0
   140005d66:	mov    rbx,QWORD PTR [rsp+0x40]
   140005d6b:	add    rsp,0x30
   140005d6f:	pop    rdi
   140005d70:	ret    
   140005d71:	int3   
   140005d72:	int3   
   140005d73:	int3   
   140005d74:	int3   
   140005d75:	int3   
   140005d76:	int3   
   140005d77:	int3   
   140005d78:	mov    QWORD PTR [rsp+0x8],rbx
   140005d7d:	mov    QWORD PTR [rsp+0x10],rbp
   140005d82:	mov    QWORD PTR [rsp+0x18],rsi
   140005d87:	push   rdi
   140005d88:	push   r14
   140005d8a:	push   r15
   140005d8c:	sub    rsp,0x20
   140005d90:	mov    edx,DWORD PTR [rcx+0x120]
   140005d96:	lea    r15,[rcx+0x128]
   140005d9d:	mov    rdi,rcx
   140005da0:	mov    r8d,0x1
   140005da6:	mov    rcx,r15
   140005da9:	call   0x140008204
   140005dae:	test   eax,eax
   140005db0:	jne    0x140005dbc
   140005db2:	mov    eax,0x8007000e
   140005db7:	jmp    0x140005e45
   140005dbc:	mov    ebp,DWORD PTR [rdi+0x20]
   140005dbf:	mov    r14,QWORD PTR [rdi+0x178]
   140005dc6:	mov    rsi,QWORD PTR [rdi+0x68]
   140005dca:	mov    rbx,QWORD PTR [r15]
   140005dcd:	test   ebp,ebp
   140005dcf:	je     0x140005e2e
   140005dd1:	add    r14,0x4
   140005dd5:	mov    eax,DWORD PTR [r14]
   140005dd8:	dec    ebp
   140005dda:	and    eax,0x1d0
   140005ddf:	cmp    eax,0x10
   140005de2:	jne    0x140005e22
   140005de4:	test   BYTE PTR [rsi+0x2c],0x2
   140005de8:	mov    edx,DWORD PTR [rsi+0x20]
   140005deb:	je     0x140005e0f
   140005ded:	mov    rcx,QWORD PTR [rdi+0x68]
   140005df1:	movabs rax,0x2aaaaaaaaaaaaaab
   140005dfb:	sub    rcx,rsi
   140005dfe:	imul   rcx
   140005e01:	sar    rdx,0x3
   140005e05:	mov    rax,rdx
   140005e08:	shr    rax,0x3f
   140005e0c:	add    rdx,rax
   140005e0f:	mov    r8,rbx
   140005e12:	mov    rcx,rdi
   140005e15:	call   0x140005cfc
   140005e1a:	mov    DWORD PTR [rsi+0x14],eax
   140005e1d:	cdqe   
   140005e1f:	add    rbx,rax
   140005e22:	add    rsi,0x30
   140005e26:	add    r14,0x40
   140005e2a:	test   ebp,ebp
   140005e2c:	jne    0x140005dd5
   140005e2e:	sub    rbx,QWORD PTR [r15]
   140005e31:	movsxd rax,DWORD PTR [rdi+0x120]
   140005e38:	sub    rbx,rax
   140005e3b:	neg    rbx
   140005e3e:	sbb    eax,eax
   140005e40:	and    eax,0x80004005
   140005e45:	mov    rbx,QWORD PTR [rsp+0x40]
   140005e4a:	mov    rbp,QWORD PTR [rsp+0x48]
   140005e4f:	mov    rsi,QWORD PTR [rsp+0x50]
   140005e54:	add    rsp,0x20
   140005e58:	pop    r15
   140005e5a:	pop    r14
   140005e5c:	pop    rdi
   140005e5d:	ret    
   140005e5e:	int3   
   140005e5f:	int3   
   140005e60:	int3   
   140005e61:	int3   
   140005e62:	int3   
   140005e63:	int3   
   140005e64:	mov    QWORD PTR [rsp+0x10],rbx
   140005e69:	mov    QWORD PTR [rsp+0x18],rbp
   140005e6e:	mov    QWORD PTR [rsp+0x20],rsi
   140005e73:	push   rdi
   140005e74:	push   r12
   140005e76:	push   r13
   140005e78:	push   r14
   140005e7a:	push   r15
   140005e7c:	sub    rsp,0x40
   140005e80:	mov    rax,QWORD PTR [rip+0x6191]        # 0x14000c018
   140005e87:	xor    rax,rsp
   140005e8a:	mov    QWORD PTR [rsp+0x38],rax
   140005e8f:	mov    rbx,rcx
   140005e92:	mov    rcx,QWORD PTR [rcx+0x68]
   140005e96:	mov    edx,DWORD PTR [rbx+0x20]
   140005e99:	mov    r8,QWORD PTR [rbx+0x178]
   140005ea0:	test   edx,edx
   140005ea2:	je     0x140005ed2
   140005ea4:	add    rcx,0x14
   140005ea8:	add    r8,0x4
   140005eac:	dec    edx
   140005eae:	cmp    DWORD PTR [rcx],0x0
   140005eb1:	jne    0x140005ec6
   140005eb3:	mov    eax,DWORD PTR [r8]
   140005eb6:	and    eax,0x1d0
   140005ebb:	cmp    eax,0x10
   140005ebe:	jne    0x140005ec6
   140005ec0:	mov    DWORD PTR [rcx],0x1
   140005ec6:	add    rcx,0x30
   140005eca:	add    r8,0x40
   140005ece:	test   edx,edx
   140005ed0:	jne    0x140005eac
   140005ed2:	xor    r12d,r12d
   140005ed5:	mov    rcx,rbx
   140005ed8:	cmp    r12d,0x14
   140005edc:	jge    0x140005f14
   140005ede:	call   0x140005894
   140005ee3:	test   eax,eax
   140005ee5:	jne    0x140005f19
   140005ee7:	xor    eax,eax
   140005ee9:	mov    rcx,QWORD PTR [rsp+0x38]
   140005eee:	xor    rcx,rsp
   140005ef1:	call   0x140008740
   140005ef6:	lea    r11,[rsp+0x40]
   140005efb:	mov    rbx,QWORD PTR [r11+0x38]
   140005eff:	mov    rbp,QWORD PTR [r11+0x40]
   140005f03:	mov    rsi,QWORD PTR [r11+0x48]
   140005f07:	mov    rsp,r11
   140005f0a:	pop    r15
   140005f0c:	pop    r14
   140005f0e:	pop    r13
   140005f10:	pop    r12
   140005f12:	pop    rdi
   140005f13:	ret    
   140005f14:	call   0x140005894
   140005f19:	mov    eax,DWORD PTR [rbx+0x4c]
   140005f1c:	add    eax,DWORD PTR [rbx+0x5c]
   140005f1f:	mov    DWORD PTR [rbx+0xf8],eax
   140005f25:	je     0x1400060df
   140005f2b:	cmp    eax,0x1fffffff
   140005f30:	ja     0x140005f3f
   140005f32:	shl    eax,0x2
   140005f35:	mov    ecx,eax
   140005f37:	call   QWORD PTR [rip+0x327b]        # 0x1400091b8
   140005f3d:	jmp    0x140005f41
   140005f3f:	xor    eax,eax
   140005f41:	lea    r14,[rbx+0xf0]
   140005f48:	mov    QWORD PTR [r14],rax
   140005f4b:	test   rax,rax
   140005f4e:	je     0x1400060f1
   140005f54:	mov    rcx,rbx
   140005f57:	call   0x1400058e0
   140005f5c:	mov    edx,DWORD PTR [rbx+0x20]
   140005f5f:	xor    r10d,r10d
   140005f62:	mov    r11,QWORD PTR [r14]
   140005f65:	mov    r8,QWORD PTR [rbx+0x178]
   140005f6c:	mov    r9,QWORD PTR [rbx+0x68]
   140005f70:	test   edx,edx
   140005f72:	je     0x140005fa1
   140005f74:	add    r9,0x20
   140005f78:	add    r8,0x4
   140005f7c:	mov    eax,DWORD PTR [r8]
   140005f7f:	dec    edx
   140005f81:	and    eax,0x1d0
   140005f86:	cmp    eax,0x10
   140005f89:	jne    0x140005f95
   140005f8b:	mov    eax,DWORD PTR [r9]
   140005f8e:	mov    DWORD PTR [r11+r10*4],eax
   140005f92:	inc    r10d
   140005f95:	add    r9,0x30
   140005f99:	add    r8,0x40
   140005f9d:	test   edx,edx
   140005f9f:	jne    0x140005f7c
   140005fa1:	mov    rcx,rbx
   140005fa4:	call   0x140005980
   140005fa9:	cmp    r12d,0x14
   140005fad:	jl     0x1400060c2
   140005fb3:	mov    r15d,DWORD PTR [rbx+0x20]
   140005fb7:	mov    ebp,0x1
   140005fbc:	and    DWORD PTR [rsp+0x20],0x0
   140005fc1:	mov    edx,r15d
   140005fc4:	mov    ecx,DWORD PTR [rsp+0x20]
   140005fc8:	shl    rdx,0x6
   140005fcc:	lea    rdi,[r15+r15*2]
   140005fd0:	add    rdx,0x4
   140005fd4:	shl    rdi,0x4
   140005fd8:	add    rdi,0x14
   140005fdc:	add    rdi,QWORD PTR [rbx+0x68]
   140005fe0:	add    rdx,QWORD PTR [rbx+0x178]
   140005fe7:	mov    eax,r15d
   140005fea:	dec    r15d
   140005fed:	test   eax,eax
   140005fef:	je     0x14000608f
   140005ff5:	sub    rdx,0x40
   140005ff9:	sub    rdi,0x30
   140005ffd:	xor    esi,esi
   140005fff:	mov    QWORD PTR [rsp+0x28],rdx
   140006004:	mov    eax,DWORD PTR [rdx]
   140006006:	and    eax,0x1d0
   14000600b:	cmp    eax,0x10
   14000600e:	jne    0x140006080
   140006010:	mov    r13d,DWORD PTR [rdi+0xc]
   140006014:	lea    r8,[rsp+0x30]
   140006019:	mov    edx,r13d
   14000601c:	mov    rcx,rbx
   14000601f:	call   0x140005cfc
   140006024:	mov    esi,eax
   140006026:	test   eax,eax
   140006028:	jne    0x14000606f
   14000602a:	inc    DWORD PTR [rbx+0xf8]
   140006030:	lea    r8d,[rax+0x4]
   140006034:	mov    edx,DWORD PTR [rbx+0xf8]
   14000603a:	mov    rcx,r14
   14000603d:	xor    ebp,ebp
   14000603f:	call   0x140008204
   140006044:	test   eax,eax
   140006046:	je     0x1400060f1
   14000604c:	movsxd rcx,DWORD PTR [rbx+0xf8]
   140006053:	mov    rax,QWORD PTR [r14]
   140006056:	mov    DWORD PTR [rax+rcx*4-0x4],r13d
   14000605b:	mov    rcx,rbx
   14000605e:	call   0x140005980
   140006063:	test   eax,eax
   140006065:	js     0x1400060a0
   140006067:	mov    eax,DWORD PTR [rbx+0xfc]
   14000606d:	jmp    0x140006075
   14000606f:	cmp    eax,DWORD PTR [rdi]
   140006071:	je     0x140006077
   140006073:	xor    ebp,ebp
   140006075:	mov    DWORD PTR [rdi],eax
   140006077:	mov    ecx,DWORD PTR [rsp+0x20]
   14000607b:	mov    rdx,QWORD PTR [rsp+0x28]
   140006080:	add    ecx,esi
   140006082:	mov    DWORD PTR [rsp+0x20],ecx
   140006086:	test   ebp,ebp
   140006088:	je     0x140006099
   14000608a:	jmp    0x140005fe7
   14000608f:	test   ebp,ebp
   140006091:	je     0x140006099
   140006093:	mov    DWORD PTR [rbx+0x120],ecx
   140006099:	xor    eax,eax
   14000609b:	test   ebp,ebp
   14000609d:	sete   al
   1400060a0:	cmp    eax,0x1
   1400060a3:	jne    0x1400060ba
   1400060a5:	mov    rcx,rbx
   1400060a8:	call   0x140005894
   1400060ad:	mov    rcx,rbx
   1400060b0:	call   0x1400058e0
   1400060b5:	jmp    0x140005fb3
   1400060ba:	test   eax,eax
   1400060bc:	js     0x140005ee9
   1400060c2:	mov    rcx,rbx
   1400060c5:	call   0x140005d78
   1400060ca:	test   eax,eax
   1400060cc:	js     0x140005ee9
   1400060d2:	mov    rcx,QWORD PTR [r14]
   1400060d5:	call   QWORD PTR [rip+0x30e5]        # 0x1400091c0
   1400060db:	and    QWORD PTR [r14],0x0
   1400060df:	inc    r12d
   1400060e2:	cmp    r12d,0x28
   1400060e6:	jge    0x140005ee7
   1400060ec:	jmp    0x140005ed5
   1400060f1:	mov    eax,0x8007000e
   1400060f6:	jmp    0x140005ee9
   1400060fb:	int3   
   1400060fc:	int3   
   1400060fd:	int3   
   1400060fe:	int3   
   1400060ff:	int3   
   140006100:	int3   
   140006101:	int3   
   140006102:	int3   
   140006103:	int3   
   140006104:	int3   
   140006105:	int3   
   140006106:	int3   
   140006107:	int3   
   140006108:	int3   
   140006109:	int3   
   14000610a:	int3   
   14000610b:	int3   
   14000610c:	int3   
   14000610d:	int3   
   14000610e:	int3   
   14000610f:	int3   
   140006110:	mov    r8,QWORD PTR [rcx]
   140006113:	xor    ecx,ecx
   140006115:	cmp    QWORD PTR [rdx],r8
   140006118:	mov    eax,ecx
   14000611a:	seta   al
   14000611d:	cmp    QWORD PTR [rdx],r8
   140006120:	setb   cl
   140006123:	sub    eax,ecx
   140006125:	ret    
   140006126:	int3   
   140006127:	int3   
   140006128:	int3   
   140006129:	int3   
   14000612a:	int3   
   14000612b:	int3   
   14000612c:	mov    rax,rsp
   14000612f:	mov    QWORD PTR [rax+0x20],r9
   140006133:	mov    QWORD PTR [rax+0x18],r8
   140006137:	mov    DWORD PTR [rax+0x10],edx
   14000613a:	mov    QWORD PTR [rax+0x8],rcx
   14000613e:	push   rbx
   14000613f:	push   rbp
   140006140:	push   rsi
   140006141:	push   rdi
   140006142:	sub    rsp,0x48
   140006146:	mov    rdi,r8
   140006149:	movsxd rsi,edx
   14000614c:	mov    r8,QWORD PTR [rcx+0x178]
   140006153:	xor    r11d,r11d
   140006156:	and    DWORD PTR [rsp+0x28],r11d
   14000615b:	add    r8,0x4
   14000615f:	shl    rsi,0x6
   140006163:	xor    ebp,ebp
   140006165:	add    r8,rsi
   140006168:	mov    QWORD PTR [rsp+0x20],r11
   14000616d:	mov    eax,DWORD PTR [r8]
   140006170:	inc    ebp
   140006172:	lea    r8,[r8+0x40]
   140006176:	and    eax,0x2
   140006179:	je     0x14000616d
   14000617b:	cmp    ebp,0x7ffffff
   140006181:	ja     0x140006198
   140006183:	mov    ecx,ebp
   140006185:	shl    ecx,0x4
   140006188:	call   QWORD PTR [rip+0x302a]        # 0x1400091b8
   14000618e:	mov    r11,QWORD PTR [rsp+0x20]
   140006193:	mov    rbx,rax
   140006196:	jmp    0x14000619a
   140006198:	xor    ebx,ebx
   14000619a:	mov    QWORD PTR [rsp+0x30],rbx
   14000619f:	test   rbx,rbx
   1400061a2:	jne    0x1400061b1
   1400061a4:	mov    DWORD PTR [rsp+0x28],0x8007000e
   1400061ac:	jmp    0x14000645e
   1400061b1:	or     r9d,0xffffffff
   1400061b5:	movsxd rdx,ebp
   1400061b8:	xor    r10d,r10d
   1400061bb:	test   ebp,ebp
   1400061bd:	jle    0x140006267
   1400061c3:	mov    rdi,QWORD PTR [rsp+0x70]
   1400061c8:	lea    r8,[rbx+0x8]
   1400061cc:	mov    rcx,QWORD PTR [rdi+0x178]
   1400061d3:	mov    DWORD PTR [r8+0x4],r10d
   1400061d7:	mov    eax,DWORD PTR [rsi+rcx*1+0x4]
   1400061db:	mov    DWORD PTR [r8],eax
   1400061de:	mov    rax,QWORD PTR [rsi+rcx*1+0x8]
   1400061e3:	mov    QWORD PTR [r8-0x8],rax
   1400061e7:	mov    eax,DWORD PTR [rsi+rcx*1+0x4]
   1400061eb:	and    eax,0xfffffffd
   1400061ee:	bts    eax,0x1f
   1400061f2:	mov    DWORD PTR [rsi+rcx*1+0x4],eax
   1400061f6:	mov    eax,DWORD PTR [r8]
   1400061f9:	and    eax,0x1d0
   1400061fe:	cmp    eax,0x10
   140006201:	jne    0x140006215
   140006203:	test   r9d,r9d
   140006206:	js     0x14000620e
   140006208:	cmp    r11,QWORD PTR [r8-0x8]
   14000620c:	jbe    0x140006215
   14000620e:	mov    r11,QWORD PTR [r8-0x8]
   140006212:	mov    r9d,r10d
   140006215:	test   BYTE PTR [r8],0x20
   140006219:	je     0x140006221
   14000621b:	mov    r9d,r10d
   14000621e:	xor    r11d,r11d
   140006221:	inc    r10d
   140006224:	add    rsi,0x40
   140006228:	add    r8,0x10
   14000622c:	sub    rdx,0x1
   140006230:	jne    0x1400061cc
   140006232:	mov    rdi,QWORD PTR [rsp+0x80]
   14000623a:	movsxd rdx,ebp
   14000623d:	test   r9d,r9d
   140006240:	js     0x140006267
   140006242:	movsxd rcx,r9d
   140006245:	mov    rax,rdx
   140006248:	add    rcx,rcx
   14000624b:	add    rax,rax
   14000624e:	movups xmm1,XMMWORD PTR [rbx+rcx*8]
   140006252:	movups xmm0,XMMWORD PTR [rbx+rax*8-0x10]
   140006257:	movdqu XMMWORD PTR [rbx+rcx*8],xmm0
   14000625c:	movdqu XMMWORD PTR [rbx+rax*8-0x10],xmm1
   140006262:	lea    eax,[rbp-0x1]
   140006265:	jmp    0x140006269
   140006267:	mov    eax,ebp
   140006269:	test   eax,eax
   14000626b:	je     0x140006289
   14000626d:	movsxd rdx,eax
   140006270:	lea    r9,[rip+0xfffffffffffffe99]        # 0x140006110
   140006277:	mov    r8d,0x10
   14000627d:	mov    rcx,rbx
   140006280:	call   QWORD PTR [rip+0x2f62]        # 0x1400091e8
   140006286:	movsxd rdx,ebp
   140006289:	mov    r11,QWORD PTR [rsp+0x70]
   14000628e:	xor    esi,esi
   140006290:	test   rdx,rdx
   140006293:	jle    0x140006339
   140006299:	mov    rax,QWORD PTR [rip+0x64f8]        # 0x14000c798
   1400062a0:	lea    r9,[rsi-0x4]
   1400062a4:	movsxd r8,DWORD PTR [rsp+0x78]
   1400062a9:	lea    r10,[rbx+0xc]
   1400062ad:	sub    r9,QWORD PTR [rip+0x64dc]        # 0x14000c790
   1400062b4:	lea    ebx,[rbp-0x1]
   1400062b7:	lea    r8,[rax+r8*4]
   1400062bb:	mov    ecx,DWORD PTR [r10]
   1400062be:	add    ecx,DWORD PTR [rsp+0x78]
   1400062c2:	shl    rcx,0x6
   1400062c6:	add    rcx,QWORD PTR [r11+0x178]
   1400062cd:	movups xmm0,XMMWORD PTR [rcx]
   1400062d0:	movups XMMWORD PTR [rdi],xmm0
   1400062d3:	movups xmm1,XMMWORD PTR [rcx+0x10]
   1400062d7:	movups XMMWORD PTR [rdi+0x10],xmm1
   1400062db:	movups xmm0,XMMWORD PTR [rcx+0x20]
   1400062df:	movups XMMWORD PTR [rdi+0x20],xmm0
   1400062e3:	movups xmm1,XMMWORD PTR [rcx+0x30]
   1400062e7:	movups XMMWORD PTR [rdi+0x30],xmm1
   1400062eb:	btr    DWORD PTR [rdi+0x4],0x1f
   1400062f0:	mov    eax,DWORD PTR [rdi+0x4]
   1400062f3:	cmp    esi,ebx
   1400062f5:	jne    0x14000630f
   1400062f7:	btr    eax,0x9
   1400062fb:	or     eax,0x2
   1400062fe:	mov    DWORD PTR [rdi+0x4],eax
   140006301:	test   al,0x4
   140006303:	je     0x14000630f
   140006305:	and    eax,0xfffffffb
   140006308:	mov    DWORD PTR [rdi+0x4],eax
   14000630b:	dec    DWORD PTR [r11+0x3c]
   14000630f:	lea    rax,[r9+0x4]
   140006313:	inc    esi
   140006315:	add    rax,rdi
   140006318:	add    r10,0x10
   14000631c:	sar    rax,0x6
   140006320:	add    rdi,0x40
   140006324:	mov    DWORD PTR [r8],eax
   140006327:	add    r8,0x4
   14000632b:	sub    rdx,0x1
   14000632f:	jne    0x1400062bb
   140006331:	mov    rbx,QWORD PTR [rsp+0x30]
   140006336:	movsxd rdx,ebp
   140006339:	mov    r9d,DWORD PTR [rsp+0x78]
   14000633e:	add    rdx,rdx
   140006341:	mov    r8,QWORD PTR [r11+0x178]
   140006348:	mov    ecx,DWORD PTR [rbx+rdx*8-0x4]
   14000634c:	add    ecx,r9d
   14000634f:	shl    rcx,0x6
   140006353:	test   BYTE PTR [rcx+r8*1+0x4],0x10
   140006359:	je     0x1400063b0
   14000635b:	mov    eax,DWORD PTR [rcx+r8*1+0x18]
   140006360:	shl    rax,0x6
   140006364:	add    rax,r8
   140006367:	je     0x1400063b0
   140006369:	test   BYTE PTR [rcx+r8*1+0x4],0x80
   14000636f:	jne    0x1400063b0
   140006371:	sub    rax,r8
   140006374:	lea    r9,[rsp+0x20]
   140006379:	sar    rax,0x6
   14000637d:	mov    r8,rdi
   140006380:	mov    edx,eax
   140006382:	mov    rcx,r11
   140006385:	call   0x14000612c
   14000638a:	mov    DWORD PTR [rsp+0x28],eax
   14000638e:	test   eax,eax
   140006390:	js     0x14000645e
   140006396:	movsxd rcx,DWORD PTR [rsp+0x20]
   14000639b:	mov    r11,QWORD PTR [rsp+0x70]
   1400063a0:	mov    r9d,DWORD PTR [rsp+0x78]
   1400063a5:	shl    rcx,0x6
   1400063a9:	add    rdi,rcx
   1400063ac:	add    esi,DWORD PTR [rsp+0x20]
   1400063b0:	lea    ecx,[rbp-0x1]
   1400063b3:	xor    edx,edx
   1400063b5:	movsxd rax,ecx
   1400063b8:	mov    QWORD PTR [rsp+0x38],rax
   1400063bd:	mov    QWORD PTR [rsp+0x30],rdx
   1400063c2:	test   ecx,ecx
   1400063c4:	jle    0x140006454
   1400063ca:	lea    rbp,[rbx+0xc]
   1400063ce:	mov    ecx,DWORD PTR [rbp+0x0]
   1400063d1:	mov    r8,QWORD PTR [r11+0x178]
   1400063d8:	add    ecx,r9d
   1400063db:	shl    rcx,0x6
   1400063df:	test   BYTE PTR [rcx+r8*1+0x4],0x10
   1400063e5:	je     0x14000643d
   1400063e7:	mov    eax,DWORD PTR [rcx+r8*1+0x18]
   1400063ec:	shl    rax,0x6
   1400063f0:	add    rax,r8
   1400063f3:	je     0x14000643d
   1400063f5:	test   BYTE PTR [rcx+r8*1+0x4],0x80
   1400063fb:	jne    0x14000643d
   1400063fd:	sub    rax,r8
   140006400:	lea    r9,[rsp+0x20]
   140006405:	sar    rax,0x6
   140006409:	mov    r8,rdi
   14000640c:	mov    edx,eax
   14000640e:	mov    rcx,r11
   140006411:	call   0x14000612c
   140006416:	mov    DWORD PTR [rsp+0x28],eax
   14000641a:	test   eax,eax
   14000641c:	js     0x14000645e
   14000641e:	movsxd rax,DWORD PTR [rsp+0x20]
   140006423:	mov    rdx,QWORD PTR [rsp+0x30]
   140006428:	mov    r11,QWORD PTR [rsp+0x70]
   14000642d:	mov    r9d,DWORD PTR [rsp+0x78]
   140006432:	shl    rax,0x6
   140006436:	add    rdi,rax
   140006439:	add    esi,DWORD PTR [rsp+0x20]
   14000643d:	inc    rdx
   140006440:	add    rbp,0x10
   140006444:	mov    QWORD PTR [rsp+0x30],rdx
   140006449:	cmp    rdx,QWORD PTR [rsp+0x38]
   14000644e:	jl     0x1400063ce
   140006454:	mov    rax,QWORD PTR [rsp+0x88]
   14000645c:	mov    DWORD PTR [rax],esi
   14000645e:	mov    rcx,rbx
   140006461:	call   QWORD PTR [rip+0x2d59]        # 0x1400091c0
   140006467:	mov    eax,DWORD PTR [rsp+0x28]
   14000646b:	add    rsp,0x48
   14000646f:	pop    rdi
   140006470:	pop    rsi
   140006471:	pop    rbp
   140006472:	pop    rbx
   140006473:	ret    
   140006474:	int3   
   140006475:	int3   
   140006476:	int3   
   140006477:	int3   
   140006478:	int3   
   140006479:	int3   
   14000647a:	int3   
   14000647b:	int3   
   14000647c:	mov    QWORD PTR [rsp+0x10],rbx
   140006481:	mov    QWORD PTR [rsp+0x18],rbp
   140006486:	mov    QWORD PTR [rsp+0x20],rsi
   14000648b:	push   rdi
   14000648c:	push   r14
   14000648e:	push   r15
   140006490:	sub    rsp,0x20
   140006494:	mov    ebp,DWORD PTR [rcx+0x20]
   140006497:	mov    r15,rcx
   14000649a:	cmp    ebp,0x1ffffff
   1400064a0:	ja     0x1400064b9
   1400064a2:	mov    ecx,ebp
   1400064a4:	shl    ecx,0x6
   1400064a7:	call   QWORD PTR [rip+0x2d0b]        # 0x1400091b8
   1400064ad:	mov    rdi,rax
   1400064b0:	mov    QWORD PTR [rip+0x62d9],rax        # 0x14000c790
   1400064b7:	jmp    0x1400064c2
   1400064b9:	xor    edi,edi
   1400064bb:	mov    QWORD PTR [rip+0x62ce],rdi        # 0x14000c790
   1400064c2:	cmp    ebp,0x1fffffff
   1400064c8:	ja     0x1400064e4
   1400064ca:	mov    rcx,rbp
   1400064cd:	mov    edx,0x4
   1400064d2:	call   QWORD PTR [rip+0x2d88]        # 0x140009260
   1400064d8:	mov    rbx,rax
   1400064db:	mov    QWORD PTR [rip+0x62b6],rax        # 0x14000c798
   1400064e2:	jmp    0x1400064ed
   1400064e4:	xor    ebx,ebx
   1400064e6:	mov    QWORD PTR [rip+0x62ab],rbx        # 0x14000c798
   1400064ed:	test   rdi,rdi
   1400064f0:	je     0x140006642
   1400064f6:	test   rbx,rbx
   1400064f9:	je     0x140006642
   1400064ff:	lea    r9,[rsp+0x40]
   140006504:	mov    r8,rdi
   140006507:	xor    edx,edx
   140006509:	mov    rcx,r15
   14000650c:	call   0x14000612c
   140006511:	mov    rdi,QWORD PTR [rip+0x6278]        # 0x14000c790
   140006518:	mov    esi,eax
   14000651a:	test   eax,eax
   14000651c:	js     0x140006639
   140006522:	movsxd rbx,DWORD PTR [rsp+0x40]
   140006527:	xor    esi,esi
   140006529:	mov    rax,QWORD PTR [r15+0x178]
   140006530:	xor    r14d,r14d
   140006533:	shl    rbx,0x6
   140006537:	add    rbx,rdi
   14000653a:	cmp    DWORD PTR [r15+0x20],esi
   14000653e:	jbe    0x140006585
   140006540:	lea    rdi,[rax+0x4]
   140006544:	test   DWORD PTR [rdi],0x80000000
   14000654a:	jne    0x140006571
   14000654c:	lea    r9,[rsp+0x40]
   140006551:	mov    r8,rbx
   140006554:	mov    edx,r14d
   140006557:	mov    rcx,r15
   14000655a:	call   0x14000612c
   14000655f:	mov    esi,eax
   140006561:	test   eax,eax
   140006563:	js     0x14000657e
   140006565:	movsxd rax,DWORD PTR [rsp+0x40]
   14000656a:	shl    rax,0x6
   14000656e:	add    rbx,rax
   140006571:	add    rdi,0x40
   140006575:	inc    r14d
   140006578:	cmp    r14d,DWORD PTR [r15+0x20]
   14000657c:	jb     0x140006544
   14000657e:	mov    rdi,QWORD PTR [rip+0x620b]        # 0x14000c790
   140006585:	test   esi,esi
   140006587:	js     0x140006639
   14000658d:	cmp    ebp,0x7fffffff
   140006593:	ja     0x1400065a8
   140006595:	mov    rcx,rbp
   140006598:	mov    edx,0x1
   14000659d:	call   QWORD PTR [rip+0x2cbd]        # 0x140009260
   1400065a3:	mov    rcx,rax
   1400065a6:	jmp    0x1400065aa
   1400065a8:	xor    ecx,ecx
   1400065aa:	mov    rbx,QWORD PTR [rip+0x61e7]        # 0x14000c798
   1400065b1:	test   rcx,rcx
   1400065b4:	je     0x140006642
   1400065ba:	xor    r14d,r14d
   1400065bd:	test   ebp,ebp
   1400065bf:	jle    0x1400065d9
   1400065c1:	mov    rdx,rbx
   1400065c4:	mov    r14,rbp
   1400065c7:	mov    r8,rbp
   1400065ca:	mov    eax,DWORD PTR [rdx]
   1400065cc:	lea    rdx,[rdx+0x4]
   1400065d0:	inc    BYTE PTR [rax+rcx*1]
   1400065d3:	sub    r8,0x1
   1400065d7:	jne    0x1400065ca
   1400065d9:	call   QWORD PTR [rip+0x2be1]        # 0x1400091c0
   1400065df:	mov    rcx,QWORD PTR [r15+0x178]
   1400065e6:	call   QWORD PTR [rip+0x2bd4]        # 0x1400091c0
   1400065ec:	mov    QWORD PTR [r15+0x178],rdi
   1400065f3:	test   r14d,r14d
   1400065f6:	je     0x14000662f
   1400065f8:	add    rdi,0x18
   1400065fc:	dec    r14d
   1400065ff:	test   BYTE PTR [rdi-0x14],0x10
   140006603:	je     0x14000660e
   140006605:	mov    eax,DWORD PTR [rdi]
   140006607:	mov    ecx,DWORD PTR [rbx+rax*4]
   14000660a:	mov    DWORD PTR [rdi],ecx
   14000660c:	jmp    0x140006611
   14000660e:	and    DWORD PTR [rdi],0x0
   140006611:	test   BYTE PTR [rdi-0x14],0x20
   140006615:	je     0x140006622
   140006617:	mov    eax,DWORD PTR [rdi+0x4]
   14000661a:	mov    ecx,DWORD PTR [rbx+rax*4]
   14000661d:	mov    DWORD PTR [rdi+0x4],ecx
   140006620:	jmp    0x140006626
   140006622:	and    DWORD PTR [rdi+0x4],0x0
   140006626:	add    rdi,0x40
   14000662a:	test   r14d,r14d
   14000662d:	jne    0x1400065fc
   14000662f:	and    QWORD PTR [rip+0x6159],0x0        # 0x14000c790
   140006637:	jmp    0x140006655
   140006639:	mov    rbx,QWORD PTR [rip+0x6158]        # 0x14000c798
   140006640:	jmp    0x140006647
   140006642:	mov    esi,0x8007000e
   140006647:	test   rdi,rdi
   14000664a:	je     0x140006655
   14000664c:	mov    rcx,rdi
   14000664f:	call   QWORD PTR [rip+0x2b6b]        # 0x1400091c0
   140006655:	test   rbx,rbx
   140006658:	je     0x140006663
   14000665a:	mov    rcx,rbx
   14000665d:	call   QWORD PTR [rip+0x2b5d]        # 0x1400091c0
   140006663:	mov    rbx,QWORD PTR [rsp+0x48]
   140006668:	mov    eax,esi
   14000666a:	mov    rsi,QWORD PTR [rsp+0x58]
   14000666f:	mov    rbp,QWORD PTR [rsp+0x50]
   140006674:	add    rsp,0x20
   140006678:	pop    r15
   14000667a:	pop    r14
   14000667c:	pop    rdi
   14000667d:	ret    
   14000667e:	int3   
   14000667f:	int3   
   140006680:	int3   
   140006681:	int3   
   140006682:	int3   
   140006683:	int3   
   140006684:	mov    QWORD PTR [rsp+0x8],rbx
   140006689:	push   rdi
   14000668a:	sub    rsp,0x30
   14000668e:	mov    rbx,rcx
   140006691:	mov    rax,rdx
   140006694:	mov    rdi,r8
   140006697:	mov    r9d,0x4
   14000669d:	movsxd r8,DWORD PTR [rcx+0x130]
   1400066a4:	lea    rcx,[rip+0xffffffffffffd225]        # 0x1400038d0
   1400066ab:	mov    QWORD PTR [rsp+0x20],rcx
   1400066b0:	mov    rcx,rax
   1400066b3:	mov    rdx,QWORD PTR [rbx+0x138]
   1400066ba:	call   QWORD PTR [rip+0x2b90]        # 0x140009250
   1400066c0:	test   rax,rax
   1400066c3:	jne    0x1400066e9
   1400066c5:	lea    ecx,[rax+0x2]
   1400066c8:	call   0x140008dc8
   1400066cd:	mov    rcx,rax
   1400066d0:	lea    rdx,[rip+0x3b29]        # 0x14000a200
   1400066d7:	call   QWORD PTR [rip+0x2b5b]        # 0x140009238
   1400066dd:	mov    ecx,0x1
   1400066e2:	call   QWORD PTR [rip+0x2ae0]        # 0x1400091c8
   1400066e8:	int3   
   1400066e9:	sub    rax,QWORD PTR [rbx+0x138]
   1400066f0:	mov    r8,rdi
   1400066f3:	mov    rdx,QWORD PTR [rbx+0x150]
   1400066fa:	sar    rax,0x2
   1400066fe:	mov    ecx,eax
   140006700:	mov    rax,QWORD PTR [rbx+0x148]
   140006707:	mov    ecx,DWORD PTR [rax+rcx*4]
   14000670a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000670f:	add    rsp,0x30
   140006713:	pop    rdi
   140006714:	jmp    0x140007ff0
   140006719:	int3   
   14000671a:	int3   
   14000671b:	int3   
   14000671c:	int3   
   14000671d:	int3   
   14000671e:	int3   
   14000671f:	int3   
   140006720:	mov    QWORD PTR [rsp+0x10],rbx
   140006725:	mov    QWORD PTR [rsp+0x18],rbp
   14000672a:	mov    QWORD PTR [rsp+0x20],rsi
   14000672f:	push   rdi
   140006730:	push   r12
   140006732:	push   r13
   140006734:	push   r14
   140006736:	push   r15
   140006738:	sub    rsp,0x20
   14000673c:	mov    edx,DWORD PTR [rcx+0x158]
   140006742:	lea    r12,[rcx+0x160]
   140006749:	mov    rdi,rcx
   14000674c:	mov    r8d,0x1
   140006752:	mov    rcx,r12
   140006755:	call   0x140008204
   14000675a:	test   eax,eax
   14000675c:	jne    0x140006768
   14000675e:	mov    eax,0x8007000e
   140006763:	jmp    0x14000681b
   140006768:	mov    ebp,DWORD PTR [rdi+0x20]
   14000676b:	mov    rsi,QWORD PTR [rdi+0x178]
   140006772:	mov    r14,QWORD PTR [rdi+0x68]
   140006776:	mov    rbx,QWORD PTR [r12]
   14000677a:	test   ebp,ebp
   14000677c:	je     0x140006803
   140006782:	add    r14,0x8
   140006786:	add    rsi,0x4
   14000678a:	dec    ebp
   14000678c:	test   BYTE PTR [rsi],0x8
   14000678f:	je     0x1400067f0
   140006791:	cmp    DWORD PTR [rdi+0x1c],0x1
   140006795:	jle    0x1400067a6
   140006797:	mov    al,BYTE PTR [rsi+0x2]
   14000679a:	mov    BYTE PTR [rbx],al
   14000679c:	inc    rbx
   14000679f:	mov    DWORD PTR [r14],0x1
   1400067a6:	mov    r13d,0x10000
   1400067ac:	lea    r12,[rsi+0x1c]
   1400067b0:	xor    r15d,r15d
   1400067b3:	cmp    BYTE PTR [rdi+r15*1+0x60],0x0
   1400067b9:	je     0x1400067e0
   1400067bb:	test   DWORD PTR [rsi],r13d
   1400067be:	je     0x1400067e0
   1400067c0:	mov    eax,DWORD PTR [r12]
   1400067c4:	lea    rdx,[rsp+0x50]
   1400067c9:	mov    r8,rbx
   1400067cc:	mov    DWORD PTR [rsp+0x50],eax
   1400067d0:	mov    rcx,rdi
   1400067d3:	call   0x140006684
   1400067d8:	add    DWORD PTR [r14],eax
   1400067db:	cdqe   
   1400067dd:	add    rbx,rax
   1400067e0:	add    r13d,r13d
   1400067e3:	inc    r15
   1400067e6:	add    r12,0x4
   1400067ea:	cmp    r15,0x8
   1400067ee:	jb     0x1400067b3
   1400067f0:	add    rsi,0x40
   1400067f4:	add    r14,0x30
   1400067f8:	test   ebp,ebp
   1400067fa:	jne    0x14000678a
   1400067fc:	lea    r12,[rdi+0x160]
   140006803:	sub    rbx,QWORD PTR [r12]
   140006807:	movsxd rax,DWORD PTR [rdi+0x158]
   14000680e:	sub    rbx,rax
   140006811:	neg    rbx
   140006814:	sbb    eax,eax
   140006816:	and    eax,0x80004005
   14000681b:	mov    rbx,QWORD PTR [rsp+0x58]
   140006820:	mov    rbp,QWORD PTR [rsp+0x60]
   140006825:	mov    rsi,QWORD PTR [rsp+0x68]
   14000682a:	add    rsp,0x20
   14000682e:	pop    r15
   140006830:	pop    r14
   140006832:	pop    r13
   140006834:	pop    r12
   140006836:	pop    rdi
   140006837:	ret    
   140006838:	int3   
   140006839:	int3   
   14000683a:	int3   
   14000683b:	int3   
   14000683c:	int3   
   14000683d:	int3   
   14000683e:	int3   
   14000683f:	int3   
   140006840:	mov    edx,DWORD PTR [rcx+0x20]
   140006843:	xor    eax,eax
   140006845:	mov    r8,QWORD PTR [rcx+0x178]
   14000684c:	test   edx,edx
   14000684e:	je     0x140006865
   140006850:	lea    rcx,[r8+0x4]
   140006854:	dec    edx
   140006856:	test   BYTE PTR [rcx],0x8
   140006859:	je     0x14000685d
   14000685b:	inc    eax
   14000685d:	add    rcx,0x40
   140006861:	test   edx,edx
   140006863:	jne    0x140006854
   140006865:	ret    
   140006866:	int3   
   140006867:	int3   
   140006868:	int3   
   140006869:	int3   
   14000686a:	int3   
   14000686b:	int3   
   14000686c:	mov    QWORD PTR [rsp+0x20],rbx
   140006871:	push   rbp
   140006872:	push   rsi
   140006873:	push   rdi
   140006874:	push   r12
   140006876:	push   r13
   140006878:	push   r14
   14000687a:	push   r15
   14000687c:	mov    rbp,rsp
   14000687f:	sub    rsp,0x30
   140006883:	movsxd rbx,DWORD PTR [rcx+0x40]
   140006887:	mov    rsi,rcx
   14000688a:	mov    r15,QWORD PTR [rcx+0x178]
   140006891:	mov    edi,DWORD PTR [rcx+0x20]
   140006894:	test   ebx,ebx
   140006896:	jne    0x1400068a5
   140006898:	and    DWORD PTR [rcx+0x130],ebx
   14000689e:	xor    eax,eax
   1400068a0:	jmp    0x1400069d2
   1400068a5:	xor    r14d,r14d
   1400068a8:	xor    r12d,r12d
   1400068ab:	mov    QWORD PTR [rbp+0x40],r14
   1400068af:	mov    QWORD PTR [rbp+0x48],r12
   1400068b3:	cmp    ebx,0x1fffffff
   1400068b9:	ja     0x1400068cb
   1400068bb:	mov    ecx,ebx
   1400068bd:	shl    ecx,0x2
   1400068c0:	call   QWORD PTR [rip+0x28f2]        # 0x1400091b8
   1400068c6:	mov    r13,rax
   1400068c9:	jmp    0x1400068ce
   1400068cb:	xor    r13d,r13d
   1400068ce:	test   r13,r13
   1400068d1:	je     0x140006ad0
   1400068d7:	mov    r10,r13
   1400068da:	test   edi,edi
   1400068dc:	jle    0x140006920
   1400068de:	lea    rcx,[r15+0x4]
   1400068e2:	dec    edi
   1400068e4:	lea    r9,[rcx+0x1c]
   1400068e8:	xor    edx,edx
   1400068ea:	mov    r8d,0x10000
   1400068f0:	cmp    BYTE PTR [rsi+rdx*1+0x60],r12b
   1400068f5:	je     0x140006908
   1400068f7:	mov    eax,DWORD PTR [rcx]
   1400068f9:	test   r8,rax
   1400068fc:	je     0x140006908
   1400068fe:	mov    eax,DWORD PTR [r9]
   140006901:	mov    DWORD PTR [r10],eax
   140006904:	add    r10,0x4
   140006908:	add    r8,r8
   14000690b:	inc    rdx
   14000690e:	add    r9,0x4
   140006912:	cmp    rdx,0x8
   140006916:	jb     0x1400068f0
   140006918:	add    rcx,0x40
   14000691c:	test   edi,edi
   14000691e:	jg     0x1400068e2
   140006920:	lea    r9,[rip+0xffffffffffffcfa9]        # 0x1400038d0
   140006927:	mov    r8d,0x4
   14000692d:	mov    rdx,rbx
   140006930:	mov    rcx,r13
   140006933:	call   QWORD PTR [rip+0x28af]        # 0x1400091e8
   140006939:	test   rbx,rbx
   14000693c:	jne    0x140006945
   14000693e:	xor    edi,edi
   140006940:	jmp    0x1400069f2
   140006945:	lea    rax,[rbp+0x50]
   140006949:	mov    rdx,rbx
   14000694c:	mov    QWORD PTR [rsp+0x28],rax
   140006951:	lea    r9,[rbp+0x40]
   140006955:	lea    rax,[rbp+0x48]
   140006959:	mov    rcx,r13
   14000695c:	lea    r8,[rip+0xffffffffffffde8d]        # 0x1400047f0
   140006963:	mov    QWORD PTR [rsp+0x20],rax
   140006968:	call   0x140008040
   14000696d:	mov    ebx,eax
   14000696f:	test   eax,eax
   140006971:	js     0x14000699f
   140006973:	mov    rdi,QWORD PTR [rbp+0x50]
   140006977:	cmp    rdi,0x7fffffff
   14000697e:	jbe    0x1400069ea
   140006980:	mov    ecx,0x2
   140006985:	call   0x140008dc8
   14000698a:	mov    rcx,rax
   14000698d:	lea    rdx,[rip+0x38b4]        # 0x14000a248
   140006994:	call   QWORD PTR [rip+0x289e]        # 0x140009238
   14000699a:	mov    ebx,0x80004005
   14000699f:	mov    r12,QWORD PTR [rbp+0x48]
   1400069a3:	mov    r14,QWORD PTR [rbp+0x40]
   1400069a7:	mov    rcx,r14
   1400069aa:	call   QWORD PTR [rip+0x2810]        # 0x1400091c0
   1400069b0:	mov    rcx,r12
   1400069b3:	call   QWORD PTR [rip+0x2807]        # 0x1400091c0
   1400069b9:	mov    rcx,r13
   1400069bc:	call   QWORD PTR [rip+0x27fe]        # 0x1400091c0
   1400069c2:	test   ebx,ebx
   1400069c4:	js     0x1400069d0
   1400069c6:	mov    rcx,rsi
   1400069c9:	call   0x140006720
   1400069ce:	mov    ebx,eax
   1400069d0:	mov    eax,ebx
   1400069d2:	mov    rbx,QWORD PTR [rsp+0x88]
   1400069da:	add    rsp,0x30
   1400069de:	pop    r15
   1400069e0:	pop    r14
   1400069e2:	pop    r13
   1400069e4:	pop    r12
   1400069e6:	pop    rdi
   1400069e7:	pop    rsi
   1400069e8:	pop    rbp
   1400069e9:	ret    
   1400069ea:	mov    r14,QWORD PTR [rbp+0x40]
   1400069ee:	mov    r12,QWORD PTR [rbp+0x48]
   1400069f2:	mov    DWORD PTR [rsi+0x130],edi
   1400069f8:	cmp    edi,0x1fffffff
   1400069fe:	ja     0x140006a10
   140006a00:	mov    ecx,edi
   140006a02:	shl    ecx,0x2
   140006a05:	call   QWORD PTR [rip+0x27ad]        # 0x1400091b8
   140006a0b:	mov    rbx,rax
   140006a0e:	jmp    0x140006a12
   140006a10:	xor    ebx,ebx
   140006a12:	test   rbx,rbx
   140006a15:	je     0x140006ad0
   140006a1b:	mov    QWORD PTR [rsi+0x138],rbx
   140006a22:	cmp    edi,0x1fffffff
   140006a28:	ja     0x140006a3a
   140006a2a:	mov    ecx,edi
   140006a2c:	shl    ecx,0x2
   140006a2f:	call   QWORD PTR [rip+0x2783]        # 0x1400091b8
   140006a35:	mov    r15,rax
   140006a38:	jmp    0x140006a3d
   140006a3a:	xor    r15d,r15d
   140006a3d:	test   r15,r15
   140006a40:	je     0x140006ad0
   140006a46:	xor    edx,edx
   140006a48:	mov    QWORD PTR [rsi+0x140],r15
   140006a4f:	test   rdi,rdi
   140006a52:	je     0x140006a7b
   140006a54:	mov    r8,r12
   140006a57:	mov    r9,r15
   140006a5a:	sub    r8,rbx
   140006a5d:	sub    r9,rbx
   140006a60:	mov    eax,DWORD PTR [r8+rbx*1]
   140006a64:	mov    ecx,DWORD PTR [r13+rax*4+0x0]
   140006a69:	mov    DWORD PTR [rbx],ecx
   140006a6b:	mov    DWORD PTR [r9+rbx*1],edx
   140006a6f:	inc    rdx
   140006a72:	lea    rbx,[rbx+0x4]
   140006a76:	cmp    rdx,rdi
   140006a79:	jb     0x140006a60
   140006a7b:	mov    ebx,0x4
   140006a80:	mov    QWORD PTR [rsp+0x20],r14
   140006a85:	mov    r8d,ebx
   140006a88:	lea    r9,[rip+0xffffffffffffd871]        # 0x140004300
   140006a8f:	mov    rdx,rdi
   140006a92:	mov    rcx,r15
   140006a95:	call   QWORD PTR [rip+0x27bd]        # 0x140009258
   140006a9b:	lea    r9,[rip+0xffffffffffffd83e]        # 0x1400042e0
   140006aa2:	mov    r8d,ebx
   140006aa5:	mov    rdx,rdi
   140006aa8:	mov    rcx,r14
   140006aab:	call   QWORD PTR [rip+0x2737]        # 0x1400091e8
   140006ab1:	cmp    edi,0x1fffffff
   140006ab7:	ja     0x140006ac9
   140006ab9:	mov    ecx,edi
   140006abb:	shl    ecx,0x2
   140006abe:	call   QWORD PTR [rip+0x26f4]        # 0x1400091b8
   140006ac4:	mov    rdx,rax
   140006ac7:	jmp    0x140006acb
   140006ac9:	xor    edx,edx
   140006acb:	test   rdx,rdx
   140006ace:	jne    0x140006ada
   140006ad0:	mov    ebx,0x8007000e
   140006ad5:	jmp    0x1400069a7
   140006ada:	xor    ecx,ecx
   140006adc:	mov    QWORD PTR [rsi+0x148],rdx
   140006ae3:	test   rdi,rdi
   140006ae6:	je     0x140006af7
   140006ae8:	mov    eax,DWORD PTR [r15+rcx*4]
   140006aec:	mov    DWORD PTR [rdx+rax*4],ecx
   140006aef:	inc    rcx
   140006af2:	cmp    rcx,rdi
   140006af5:	jb     0x140006ae8
   140006af7:	xor    r9d,r9d
   140006afa:	mov    QWORD PTR [rbp+0x48],r9
   140006afe:	cmp    rdi,0x1
   140006b02:	jb     0x140006b23
   140006b04:	lea    r9,[rbp+0x40]
   140006b08:	mov    rdx,r14
   140006b0b:	lea    r8,[rbp+0x48]
   140006b0f:	mov    rcx,rdi
   140006b12:	call   0x140007b84
   140006b17:	mov    r9,QWORD PTR [rbp+0x48]
   140006b1b:	mov    ebx,eax
   140006b1d:	mov    r8d,DWORD PTR [rbp+0x40]
   140006b21:	jmp    0x140006b28
   140006b23:	xor    r8d,r8d
   140006b26:	xor    ebx,ebx
   140006b28:	test   ebx,ebx
   140006b2a:	js     0x1400069a7
   140006b30:	cmp    BYTE PTR [rsi+0x180],0x0
   140006b37:	je     0x140006b56
   140006b39:	xor    ecx,ecx
   140006b3b:	test   r8d,r8d
   140006b3e:	jle    0x140006b56
   140006b40:	mov    rax,r9
   140006b43:	cmp    DWORD PTR [rax],0xffff
   140006b49:	ja     0x140006b98
   140006b4b:	inc    ecx
   140006b4d:	add    rax,0x4
   140006b51:	cmp    ecx,r8d
   140006b54:	jl     0x140006b43
   140006b56:	mov    rdx,r14
   140006b59:	mov    DWORD PTR [rsi+0x134],r8d
   140006b60:	mov    rcx,rdi
   140006b63:	mov    QWORD PTR [rsi+0x150],r9
   140006b6a:	call   0x140007f44
   140006b6f:	cmp    DWORD PTR [rsi+0x1c],0x1
   140006b73:	mov    r9d,eax
   140006b76:	mov    DWORD PTR [rsi+0x158],eax
   140006b7c:	jle    0x1400069a7
   140006b82:	mov    rcx,rsi
   140006b85:	call   0x140006840
   140006b8a:	add    eax,r9d
   140006b8d:	mov    DWORD PTR [rsi+0x158],eax
   140006b93:	jmp    0x1400069a7
   140006b98:	mov    ecx,0x2
   140006b9d:	call   0x140008dc8
   140006ba2:	mov    rcx,rax
   140006ba5:	lea    rdx,[rip+0x36bc]        # 0x14000a268
   140006bac:	call   QWORD PTR [rip+0x2686]        # 0x140009238
   140006bb2:	mov    ebx,0x80004005
   140006bb7:	jmp    0x1400069a7
   140006bbc:	int3   
   140006bbd:	int3   
   140006bbe:	int3   
   140006bbf:	int3   
   140006bc0:	int3   
   140006bc1:	int3   
   140006bc2:	int3   
   140006bc3:	int3   
   140006bc4:	rex push rbx
   140006bc6:	push   rbp
   140006bc7:	push   rsi
   140006bc8:	push   rdi
   140006bc9:	push   r14
   140006bcb:	sub    rsp,0x30
   140006bcf:	mov    rax,QWORD PTR [rip+0x5442]        # 0x14000c018
   140006bd6:	xor    rax,rsp
   140006bd9:	mov    QWORD PTR [rsp+0x28],rax
   140006bde:	xor    eax,eax
   140006be0:	mov    rdi,r8
   140006be3:	mov    rsi,rdx
   140006be6:	mov    QWORD PTR [r8],rax
   140006be9:	mov    rbp,rcx
   140006bec:	xor    ebx,ebx
   140006bee:	lea    r14d,[rax+0x30]
   140006bf2:	mov    eax,DWORD PTR [rip+0x36ac]        # 0x14000a2a4
   140006bf8:	lea    rdx,[rsp+0x20]
   140006bfd:	mov    DWORD PTR [rsp+0x20],eax
   140006c01:	mov    rcx,rbp
   140006c04:	movzx  eax,WORD PTR [rip+0x369d]        # 0x14000a2a8
   140006c0b:	mov    WORD PTR [rsp+0x24],ax
   140006c10:	lea    eax,[r14+rbx*1]
   140006c14:	mov    WORD PTR [rsp+0x20],ax
   140006c19:	call   QWORD PTR [rip+0x2659]        # 0x140009278
   140006c1f:	test   rax,rax
   140006c22:	je     0x140006c5c
   140006c24:	cmp    r14w,WORD PTR [rax+0x4]
   140006c29:	jne    0x140006c43
   140006c2b:	movzx  ecx,WORD PTR [rax+0x6]
   140006c2f:	mov    edx,0xffdf
   140006c34:	sub    cx,0x58
   140006c38:	mov    r8d,0x10
   140006c3e:	test   dx,cx
   140006c41:	je     0x140006c49
   140006c43:	mov    r8d,0xa
   140006c49:	xor    edx,edx
   140006c4b:	lea    rcx,[rax+0x4]
   140006c4f:	call   QWORD PTR [rip+0x261b]        # 0x140009270
   140006c55:	mov    DWORD PTR [rsi+rbx*4],eax
   140006c58:	mov    BYTE PTR [rdi+rbx*1],0x1
   140006c5c:	inc    rbx
   140006c5f:	cmp    rbx,0x8
   140006c63:	jb     0x140006bf2
   140006c65:	mov    rcx,QWORD PTR [rsp+0x28]
   140006c6a:	xor    rcx,rsp
   140006c6d:	call   0x140008740
   140006c72:	add    rsp,0x30
   140006c76:	pop    r14
   140006c78:	pop    rdi
   140006c79:	pop    rsi
   140006c7a:	pop    rbp
   140006c7b:	pop    rbx
   140006c7c:	ret    
   140006c7d:	int3   
   140006c7e:	int3   
   140006c7f:	int3   
   140006c80:	int3   
   140006c81:	int3   
   140006c82:	int3   
   140006c83:	int3   
   140006c84:	mov    QWORD PTR [rsp+0x8],rdi
   140006c89:	and    DWORD PTR [rcx+0x16c],0x0
   140006c90:	cmp    BYTE PTR [rcx+0x180],0x0
   140006c97:	mov    rax,QWORD PTR [rcx+0x68]
   140006c9b:	mov    r8,QWORD PTR [rcx+0x178]
   140006ca2:	mov    r9d,DWORD PTR [rcx+0x20]
   140006ca6:	je     0x140006d23
   140006ca8:	test   r9d,r9d
   140006cab:	je     0x140006ddd
   140006cb1:	mov    r10d,0x80
   140006cb7:	lea    rdx,[rax+0x4]
   140006cbb:	add    r8,0x4
   140006cbf:	mov    edi,0x4000
   140006cc4:	lea    r11d,[r10-0x7f]
   140006cc8:	and    DWORD PTR [rdx],0x0
   140006ccb:	dec    r9d
   140006cce:	test   DWORD PTR [r8],0x400
   140006cd5:	je     0x140006ced
   140006cd7:	cmp    QWORD PTR [r8+0xc],r10
   140006cdb:	jae    0x140006ce2
   140006cdd:	mov    eax,r11d
   140006ce0:	jmp    0x140006ceb
   140006ce2:	cmp    QWORD PTR [r8+0xc],rdi
   140006ce6:	sbb    eax,eax
   140006ce8:	add    eax,0x3
   140006ceb:	mov    DWORD PTR [rdx],eax
   140006ced:	test   BYTE PTR [r8],0x4
   140006cf1:	je     0x140006d09
   140006cf3:	cmp    QWORD PTR [r8+0x4],r10
   140006cf7:	jae    0x140006cfe
   140006cf9:	mov    eax,r11d
   140006cfc:	jmp    0x140006d07
   140006cfe:	cmp    QWORD PTR [r8+0x4],rdi
   140006d02:	sbb    eax,eax
   140006d04:	add    eax,0x3
   140006d07:	add    DWORD PTR [rdx],eax
   140006d09:	mov    eax,DWORD PTR [rdx]
   140006d0b:	add    r8,0x40
   140006d0f:	add    DWORD PTR [rcx+0x16c],eax
   140006d15:	add    rdx,0x30
   140006d19:	test   r9d,r9d
   140006d1c:	jne    0x140006cc8
   140006d1e:	jmp    0x140006ddd
   140006d23:	test   r9d,r9d
   140006d26:	je     0x140006ddd
   140006d2c:	mov    r10d,0x80
   140006d32:	lea    rdx,[rax+0x4]
   140006d36:	add    r8,0x4
   140006d3a:	mov    edi,0x4080
   140006d3f:	lea    r11d,[r10-0x7f]
   140006d43:	and    DWORD PTR [rdx],0x0
   140006d46:	dec    r9d
   140006d49:	test   DWORD PTR [r8],0x400
   140006d50:	je     0x140006d88
   140006d52:	mov    rax,QWORD PTR [r8+0xc]
   140006d56:	cmp    rax,r10
   140006d59:	jae    0x140006d60
   140006d5b:	mov    eax,r11d
   140006d5e:	jmp    0x140006d86
   140006d60:	cmp    rax,rdi
   140006d63:	jae    0x140006d6c
   140006d65:	mov    eax,0x2
   140006d6a:	jmp    0x140006d86
   140006d6c:	cmp    rax,0x204080
   140006d72:	jae    0x140006d7b
   140006d74:	mov    eax,0x3
   140006d79:	jmp    0x140006d86
   140006d7b:	cmp    rax,0x10204080
   140006d81:	sbb    eax,eax
   140006d83:	add    eax,0x5
   140006d86:	mov    DWORD PTR [rdx],eax
   140006d88:	test   BYTE PTR [r8],0x4
   140006d8c:	je     0x140006dc4
   140006d8e:	mov    rax,QWORD PTR [r8+0x4]
   140006d92:	cmp    rax,r10
   140006d95:	jae    0x140006d9c
   140006d97:	mov    eax,r11d
   140006d9a:	jmp    0x140006dc2
   140006d9c:	cmp    rax,rdi
   140006d9f:	jae    0x140006da8
   140006da1:	mov    eax,0x2
   140006da6:	jmp    0x140006dc2
   140006da8:	cmp    rax,0x204080
   140006dae:	jae    0x140006db7
   140006db0:	mov    eax,0x3
   140006db5:	jmp    0x140006dc2
   140006db7:	cmp    rax,0x10204080
   140006dbd:	sbb    eax,eax
   140006dbf:	add    eax,0x5
   140006dc2:	add    DWORD PTR [rdx],eax
   140006dc4:	mov    eax,DWORD PTR [rdx]
   140006dc6:	add    r8,0x40
   140006dca:	add    DWORD PTR [rcx+0x16c],eax
   140006dd0:	add    rdx,0x30
   140006dd4:	test   r9d,r9d
   140006dd7:	jne    0x140006d43
   140006ddd:	mov    rdi,QWORD PTR [rsp+0x8]
   140006de2:	xor    eax,eax
   140006de4:	ret    
   140006de5:	int3   
   140006de6:	int3   
   140006de7:	int3   
   140006de8:	int3   
   140006de9:	int3   
   140006dea:	int3   
   140006deb:	int3   
   140006dec:	rex push rbx
   140006dee:	sub    rsp,0x20
   140006df2:	mov    r8,QWORD PTR [rdx]
   140006df5:	xor    ebx,ebx
   140006df7:	mov    r9,QWORD PTR [rcx]
   140006dfa:	mov    edx,ebx
   140006dfc:	mov    eax,ebx
   140006dfe:	mov    ecx,DWORD PTR [r8+0x8]
   140006e02:	cmp    DWORD PTR [r9+0x8],ecx
   140006e06:	seta   dl
   140006e09:	cmp    DWORD PTR [r9+0x8],ecx
   140006e0d:	setb   al
   140006e10:	sub    edx,eax
   140006e12:	jne    0x140006e5b
   140006e14:	mov    ecx,DWORD PTR [r8+0xc]
   140006e18:	mov    edx,ebx
   140006e1a:	cmp    DWORD PTR [r9+0xc],ecx
   140006e1e:	mov    eax,ebx
   140006e20:	seta   dl
   140006e23:	cmp    DWORD PTR [r9+0xc],ecx
   140006e27:	setb   al
   140006e2a:	sub    edx,eax
   140006e2c:	jne    0x140006e5b
   140006e2e:	mov    ecx,DWORD PTR [r8+0x10]
   140006e32:	mov    edx,ebx
   140006e34:	cmp    DWORD PTR [r9+0x10],ecx
   140006e38:	mov    eax,ebx
   140006e3a:	seta   dl
   140006e3d:	cmp    DWORD PTR [r9+0x10],ecx
   140006e41:	setb   al
   140006e44:	sub    edx,eax
   140006e46:	jne    0x140006e5b
   140006e48:	lea    rdx,[r8+0x14]
   140006e4c:	lea    r8d,[rbx+0x20]
   140006e50:	lea    rcx,[r9+0x14]
   140006e54:	call   0x140008e86
   140006e59:	mov    edx,eax
   140006e5b:	test   edx,edx
   140006e5d:	setle  al
   140006e60:	add    rsp,0x20
   140006e64:	pop    rbx
   140006e65:	ret    
   140006e66:	int3   
   140006e67:	int3   
   140006e68:	int3   
   140006e69:	int3   
   140006e6a:	int3   
   140006e6b:	int3   
   140006e6c:	mov    r9d,DWORD PTR [rdx+0x8]
   140006e70:	xor    r10d,r10d
   140006e73:	cmp    DWORD PTR [rcx],r9d
   140006e76:	mov    eax,r10d
   140006e79:	mov    r8d,r10d
   140006e7c:	seta   al
   140006e7f:	cmp    DWORD PTR [rcx],r9d
   140006e82:	setb   r8b
   140006e86:	sub    eax,r8d
   140006e89:	jne    0x140006eab
   140006e8b:	mov    edx,DWORD PTR [rdx+0xc]
   140006e8e:	mov    eax,0xff0019
   140006e93:	mov    ecx,DWORD PTR [rcx+0x4]
   140006e96:	and    edx,eax
   140006e98:	and    ecx,eax
   140006e9a:	mov    eax,r10d
   140006e9d:	cmp    ecx,edx
   140006e9f:	seta   al
   140006ea2:	cmp    ecx,edx
   140006ea4:	setb   r10b
   140006ea8:	sub    eax,r10d
   140006eab:	ret    
   140006eac:	int3   
   140006ead:	int3   
   140006eae:	int3   
   140006eaf:	int3   
   140006eb0:	int3   
   140006eb1:	int3   
   140006eb2:	int3   
   140006eb3:	int3   
   140006eb4:	mov    QWORD PTR [rsp+0x18],rbx
   140006eb9:	mov    QWORD PTR [rsp+0x10],rdx
   140006ebe:	mov    QWORD PTR [rsp+0x8],rcx
   140006ec3:	push   rbp
   140006ec4:	push   rsi
   140006ec5:	push   rdi
   140006ec6:	push   r12
   140006ec8:	push   r13
   140006eca:	push   r14
   140006ecc:	push   r15
   140006ece:	sub    rsp,0x20
   140006ed2:	mov    r14,QWORD PTR [rsp+0x80]
   140006eda:	mov    r13,r8
   140006edd:	mov    ebp,r9d
   140006ee0:	mov    r10,rdx
   140006ee3:	and    DWORD PTR [r14],0x0
   140006ee7:	test   r9d,r9d
   140006eea:	je     0x140006f2e
   140006eec:	mov    r9,QWORD PTR [rcx]
   140006eef:	mov    rdx,r8
   140006ef2:	mov    r8d,ebp
   140006ef5:	mov    eax,DWORD PTR [rdx]
   140006ef7:	mov    ecx,DWORD PTR [r9+rax*4]
   140006efb:	xor    eax,eax
   140006efd:	shl    rcx,0x6
   140006f01:	add    rcx,0x4
   140006f05:	add    rcx,QWORD PTR [r10+0x178]
   140006f0c:	test   DWORD PTR [rcx],0x80000000
   140006f12:	jne    0x140006f1c
   140006f14:	inc    DWORD PTR [r14]
   140006f17:	mov    eax,DWORD PTR [rcx]
   140006f19:	and    eax,0x2
   140006f1c:	add    rcx,0x40
   140006f20:	test   eax,eax
   140006f22:	je     0x140006f0c
   140006f24:	add    rdx,0x4
   140006f28:	sub    r8,0x1
   140006f2c:	jne    0x140006ef5
   140006f2e:	mov    ebx,DWORD PTR [r14]
   140006f31:	mov    DWORD PTR [rsp+0x78],ebx
   140006f35:	cmp    ebx,0x2762762
   140006f3b:	ja     0x140006f4b
   140006f3d:	imul   ecx,ebx,0x34
   140006f40:	call   QWORD PTR [rip+0x2272]        # 0x1400091b8
   140006f46:	mov    rsi,rax
   140006f49:	jmp    0x140006f4d
   140006f4b:	xor    esi,esi
   140006f4d:	test   rsi,rsi
   140006f50:	jne    0x140006f59
   140006f52:	xor    eax,eax
   140006f54:	jmp    0x140007106
   140006f59:	cmp    ebx,0xfffffff
   140006f5f:	ja     0x140006f71
   140006f61:	mov    ecx,ebx
   140006f63:	shl    ecx,0x3
   140006f66:	call   QWORD PTR [rip+0x224c]        # 0x1400091b8
   140006f6c:	mov    rdi,rax
   140006f6f:	jmp    0x140006f73
   140006f71:	xor    edi,edi
   140006f73:	test   rdi,rdi
   140006f76:	jne    0x140006f83
   140006f78:	mov    rcx,rsi
   140006f7b:	call   QWORD PTR [rip+0x223f]        # 0x1400091c0
   140006f81:	jmp    0x140006f52
   140006f83:	mov    QWORD PTR [rdi],rsi
   140006f86:	cmp    ebx,0x1
   140006f89:	jbe    0x140006fa7
   140006f8b:	lea    rcx,[rdi+0x8]
   140006f8f:	lea    edx,[rbx-0x1]
   140006f92:	mov    rax,QWORD PTR [rcx-0x8]
   140006f96:	add    rax,0x34
   140006f9a:	mov    QWORD PTR [rcx],rax
   140006f9d:	lea    rcx,[rcx+0x8]
   140006fa1:	sub    rdx,0x1
   140006fa5:	jne    0x140006f92
   140006fa7:	xor    r15d,r15d
   140006faa:	test   ebp,ebp
   140006fac:	je     0x140007088
   140006fb2:	mov    r14,QWORD PTR [rsp+0x68]
   140006fb7:	mov    r12,rbp
   140006fba:	mov    rbx,QWORD PTR [rsp+0x60]
   140006fbf:	mov    ecx,DWORD PTR [r13+0x0]
   140006fc3:	mov    rax,QWORD PTR [rbx]
   140006fc6:	mov    r11d,DWORD PTR [rax+rcx*4]
   140006fca:	mov    ecx,r11d
   140006fcd:	shl    rcx,0x6
   140006fd1:	add    rcx,QWORD PTR [r14+0x178]
   140006fd8:	xor    eax,eax
   140006fda:	test   DWORD PTR [rcx+0x4],0x80000000
   140006fe1:	jne    0x14000705f
   140006fe3:	mov    rdx,QWORD PTR [rdi+r15*8]
   140006fe7:	mov    DWORD PTR [rdx],r11d
   140006fea:	mov    eax,DWORD PTR [r13+0x0]
   140006fee:	mov    DWORD PTR [rdx+0x4],eax
   140006ff1:	mov    eax,DWORD PTR [rcx]
   140006ff3:	mov    DWORD PTR [rdx+0x8],eax
   140006ff6:	mov    eax,DWORD PTR [rcx+0x4]
   140006ff9:	and    eax,0xff0019
   140006ffe:	mov    DWORD PTR [rdx+0xc],eax
   140007001:	test   BYTE PTR [rcx+0x4],0x10
   140007005:	je     0x14000700d
   140007007:	mov    r8d,DWORD PTR [rcx+0x18]
   14000700b:	jmp    0x140007010
   14000700d:	xor    r8d,r8d
   140007010:	or     eax,0xffffffff
   140007013:	lea    r9,[rdx+0x14]
   140007017:	sub    eax,r8d
   14000701a:	mov    rbp,rcx
   14000701d:	xor    r8d,r8d
   140007020:	mov    DWORD PTR [rdx+0x10],eax
   140007023:	sub    rbp,rdx
   140007026:	mov    r10d,0x10000
   14000702c:	cmp    BYTE PTR [r14+r8*1+0x60],0x0
   140007032:	je     0x140007041
   140007034:	test   DWORD PTR [rcx+0x4],r10d
   140007038:	je     0x140007041
   14000703a:	mov    eax,DWORD PTR [r9+rbp*1+0xc]
   14000703f:	jmp    0x140007043
   140007041:	xor    eax,eax
   140007043:	mov    DWORD PTR [r9],eax
   140007046:	add    r10d,r10d
   140007049:	add    r9,0x4
   14000704d:	inc    r8
   140007050:	cmp    r8,0x8
   140007054:	jl     0x14000702c
   140007056:	mov    eax,DWORD PTR [rcx+0x4]
   140007059:	and    eax,0x2
   14000705c:	inc    r15d
   14000705f:	add    rcx,0x40
   140007063:	inc    r11d
   140007066:	test   eax,eax
   140007068:	je     0x140006fda
   14000706e:	add    r13,0x4
   140007072:	sub    r12,0x1
   140007076:	jne    0x140006fbf
   14000707c:	mov    ebx,DWORD PTR [rsp+0x78]
   140007080:	mov    r14,QWORD PTR [rsp+0x80]
   140007088:	mov    edx,ebx
   14000708a:	mov    rcx,rdi
   14000708d:	call   0x140007854
   140007092:	cmp    DWORD PTR [r14],0x2762762
   140007099:	ja     0x1400070aa
   14000709b:	imul   ecx,DWORD PTR [r14],0x34
   14000709f:	call   QWORD PTR [rip+0x2113]        # 0x1400091b8
   1400070a5:	mov    rbx,rax
   1400070a8:	jmp    0x1400070ac
   1400070aa:	xor    ebx,ebx
   1400070ac:	test   rbx,rbx
   1400070af:	je     0x140006f52
   1400070b5:	cmp    DWORD PTR [r14],0x0
   1400070b9:	jbe    0x1400070f1
   1400070bb:	mov    r8d,DWORD PTR [r14]
   1400070be:	mov    rcx,rbx
   1400070c1:	mov    rdx,rdi
   1400070c4:	mov    rax,QWORD PTR [rdx]
   1400070c7:	lea    rdx,[rdx+0x8]
   1400070cb:	movups xmm0,XMMWORD PTR [rax]
   1400070ce:	movups XMMWORD PTR [rcx],xmm0
   1400070d1:	lea    rcx,[rcx+0x34]
   1400070d5:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400070d9:	movups XMMWORD PTR [rcx-0x24],xmm1
   1400070dd:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400070e1:	movups XMMWORD PTR [rcx-0x14],xmm0
   1400070e5:	mov    eax,DWORD PTR [rax+0x30]
   1400070e8:	mov    DWORD PTR [rcx-0x4],eax
   1400070eb:	sub    r8,0x1
   1400070ef:	jne    0x1400070c4
   1400070f1:	mov    rcx,rsi
   1400070f4:	call   QWORD PTR [rip+0x20c6]        # 0x1400091c0
   1400070fa:	mov    rcx,rdi
   1400070fd:	call   QWORD PTR [rip+0x20bd]        # 0x1400091c0
   140007103:	mov    rax,rbx
   140007106:	mov    rbx,QWORD PTR [rsp+0x70]
   14000710b:	add    rsp,0x20
   14000710f:	pop    r15
   140007111:	pop    r14
   140007113:	pop    r13
   140007115:	pop    r12
   140007117:	pop    rdi
   140007118:	pop    rsi
   140007119:	pop    rbp
   14000711a:	ret    
   14000711b:	int3   
   14000711c:	int3   
   14000711d:	int3   
   14000711e:	int3   
   14000711f:	int3   
   140007120:	int3   
   140007121:	int3   
   140007122:	int3   
   140007123:	int3   
   140007124:	mov    rax,rsp
   140007127:	mov    QWORD PTR [rax+0x20],rbx
   14000712b:	mov    QWORD PTR [rax+0x18],r8
   14000712f:	mov    QWORD PTR [rax+0x10],rdx
   140007133:	mov    QWORD PTR [rax+0x8],rcx
   140007137:	push   rbp
   140007138:	push   rsi
   140007139:	push   rdi
   14000713a:	push   r12
   14000713c:	push   r13
   14000713e:	push   r14
   140007140:	push   r15
   140007142:	sub    rsp,0x70
   140007146:	mov    r13,QWORD PTR [rsp+0xd0]
   14000714e:	xor    r12d,r12d
   140007151:	xor    r15d,r15d
   140007154:	xor    r11d,r11d
   140007157:	mov    r14d,r9d
   14000715a:	mov    rbx,r8
   14000715d:	mov    rbp,rdx
   140007160:	test   r9d,r9d
   140007163:	je     0x1400071f0
   140007169:	mov    rax,QWORD PTR [rcx]
   14000716c:	mov    rsi,rbx
   14000716f:	mov    QWORD PTR [rsp+0x20],rax
   140007174:	mov    rax,QWORD PTR [rdx+0x178]
   14000717b:	mov    rbp,QWORD PTR [rsp+0x20]
   140007180:	mov    rbx,rax
   140007183:	mov    eax,DWORD PTR [rsi]
   140007185:	mov    rdx,r13
   140007188:	mov    edi,DWORD PTR [rbp+rax*4+0x0]
   14000718c:	shl    rdi,0x6
   140007190:	add    rdi,rbx
   140007193:	mov    rcx,rdi
   140007196:	call   0x140006e6c
   14000719b:	test   eax,eax
   14000719d:	jne    0x1400071ac
   14000719f:	test   BYTE PTR [rdi+0x4],0x2
   1400071a3:	je     0x1400071ac
   1400071a5:	lea    r15d,[rax+0x1]
   1400071a9:	mov    r12d,r11d
   1400071ac:	inc    r11d
   1400071af:	add    rsi,0x4
   1400071b3:	cmp    r11d,r14d
   1400071b6:	jb     0x140007183
   1400071b8:	mov    rbx,QWORD PTR [rsp+0xc0]
   1400071c0:	mov    rbp,QWORD PTR [rsp+0xb8]
   1400071c8:	test   r15d,r15d
   1400071cb:	je     0x1400071f0
   1400071cd:	mov    edx,DWORD PTR [rbx]
   1400071cf:	mov    r15,QWORD PTR [rsp+0xb0]
   1400071d7:	mov    ecx,r12d
   1400071da:	mov    eax,DWORD PTR [rbx+rcx*4]
   1400071dd:	mov    DWORD PTR [rbx],eax
   1400071df:	mov    DWORD PTR [rbx+rcx*4],edx
   1400071e2:	mov    ecx,DWORD PTR [rbx]
   1400071e4:	mov    rax,QWORD PTR [r15]
   1400071e7:	mov    r11d,DWORD PTR [rax+rcx*4]
   1400071eb:	jmp    0x1400072d1
   1400071f0:	mov    rdx,QWORD PTR [rbp+0x178]
   1400071f7:	mov    eax,DWORD PTR [r13+0x0]
   1400071fb:	mov    r15,QWORD PTR [rsp+0xb0]
   140007203:	mov    ecx,DWORD PTR [rbx]
   140007205:	shl    rax,0x6
   140007209:	movups xmm2,XMMWORD PTR [rax+rdx*1]
   14000720d:	movups xmm3,XMMWORD PTR [rax+rdx*1+0x10]
   140007212:	movups xmm4,XMMWORD PTR [rax+rdx*1+0x20]
   140007217:	movups xmm5,XMMWORD PTR [rax+rdx*1+0x30]
   14000721c:	mov    rax,QWORD PTR [r15]
   14000721f:	movaps XMMWORD PTR [rsp+0x30],xmm2
   140007224:	movaps XMMWORD PTR [rsp+0x40],xmm3
   140007229:	mov    r11d,DWORD PTR [rax+rcx*4]
   14000722d:	shl    r11,0x6
   140007231:	add    r11,rdx
   140007234:	xor    edi,edi
   140007236:	jmp    0x14000723f
   140007238:	mov    rdi,r11
   14000723b:	add    r11,0x40
   14000723f:	mov    rdx,r13
   140007242:	mov    rcx,r11
   140007245:	call   0x140006e6c
   14000724a:	test   eax,eax
   14000724c:	jne    0x140007238
   14000724e:	jmp    0x14000727e
   140007250:	movups xmm0,XMMWORD PTR [r11+0x40]
   140007255:	mov    rdi,r11
   140007258:	movups xmm1,XMMWORD PTR [r11+0x50]
   14000725d:	movups XMMWORD PTR [r11],xmm0
   140007261:	movups xmm0,XMMWORD PTR [r11+0x60]
   140007266:	movups XMMWORD PTR [r11+0x10],xmm1
   14000726b:	movups xmm1,XMMWORD PTR [r11+0x70]
   140007270:	movups XMMWORD PTR [r11+0x20],xmm0
   140007275:	movups XMMWORD PTR [r11+0x30],xmm1
   14000727a:	add    r11,0x40
   14000727e:	test   BYTE PTR [r11+0x4],0x2
   140007283:	je     0x140007250
   140007285:	test   BYTE PTR [r11+0x4],0x20
   14000728a:	je     0x1400072a3
   14000728c:	mov    eax,DWORD PTR [r11+0x1c]
   140007290:	or     DWORD PTR [rsp+0x34],0x20
   140007295:	movaps xmm2,XMMWORD PTR [rsp+0x30]
   14000729a:	mov    DWORD PTR [rsp+0x4c],eax
   14000729e:	movaps xmm3,XMMWORD PTR [rsp+0x40]
   1400072a3:	movups XMMWORD PTR [r11],xmm2
   1400072a7:	movups XMMWORD PTR [r11+0x10],xmm3
   1400072ac:	movups XMMWORD PTR [r11+0x20],xmm4
   1400072b1:	movups XMMWORD PTR [r11+0x30],xmm5
   1400072b6:	or     DWORD PTR [r11+0x4],0x2
   1400072bb:	sub    r11,QWORD PTR [rbp+0x178]
   1400072c2:	or     DWORD PTR [rdi+0x4],0x22
   1400072c6:	sar    r11,0x6
   1400072ca:	mov    DWORD PTR [rdi+0x1c],r11d
   1400072ce:	inc    DWORD PTR [rbp+0x58]
   1400072d1:	cmp    r14d,0x1
   1400072d5:	jbe    0x140007355
   1400072d7:	lea    rsi,[rbx+0x4]
   1400072db:	dec    r14d
   1400072de:	mov    ecx,DWORD PTR [rsi]
   1400072e0:	mov    rax,QWORD PTR [r15]
   1400072e3:	mov    ebx,DWORD PTR [rax+rcx*4]
   1400072e6:	shl    rbx,0x6
   1400072ea:	add    rbx,QWORD PTR [rbp+0x178]
   1400072f1:	xor    edi,edi
   1400072f3:	jmp    0x1400072fc
   1400072f5:	mov    rdi,rbx
   1400072f8:	add    rbx,0x40
   1400072fc:	mov    rdx,r13
   1400072ff:	mov    rcx,rbx
   140007302:	call   0x140006e6c
   140007307:	test   eax,eax
   140007309:	jne    0x1400072f5
   14000730b:	jmp    0x140007333
   14000730d:	movups xmm0,XMMWORD PTR [rbx+0x40]
   140007311:	mov    rdi,rbx
   140007314:	movups xmm1,XMMWORD PTR [rbx+0x50]
   140007318:	movups XMMWORD PTR [rbx],xmm0
   14000731b:	movups xmm0,XMMWORD PTR [rbx+0x60]
   14000731f:	movups XMMWORD PTR [rbx+0x10],xmm1
   140007323:	movups xmm1,XMMWORD PTR [rbx+0x70]
   140007327:	movups XMMWORD PTR [rbx+0x20],xmm0
   14000732b:	movups XMMWORD PTR [rbx+0x30],xmm1
   14000732f:	add    rbx,0x40
   140007333:	test   BYTE PTR [rbx+0x4],0x2
   140007337:	je     0x14000730d
   140007339:	or     DWORD PTR [rdi+0x4],0x22
   14000733d:	add    rsi,0x4
   140007341:	mov    DWORD PTR [rdi+0x1c],r11d
   140007345:	inc    DWORD PTR [rbp+0x58]
   140007348:	mov    DWORD PTR [rbx+0x4],0x80000000
   14000734f:	sub    r14,0x1
   140007353:	jne    0x1400072de
   140007355:	mov    rbx,QWORD PTR [rsp+0xc8]
   14000735d:	add    rsp,0x70
   140007361:	pop    r15
   140007363:	pop    r14
   140007365:	pop    r13
   140007367:	pop    r12
   140007369:	pop    rdi
   14000736a:	pop    rsi
   14000736b:	pop    rbp
   14000736c:	ret    
   14000736d:	int3   
   14000736e:	int3   
   14000736f:	int3   
   140007370:	int3   
   140007371:	int3   
   140007372:	int3   
   140007373:	int3   
   140007374:	test   r9d,r9d
   140007377:	je     0x140007608
   14000737d:	mov    QWORD PTR [rsp+0x10],rdx
   140007382:	mov    QWORD PTR [rsp+0x8],rcx
   140007387:	push   rbx
   140007388:	push   rbp
   140007389:	push   rsi
   14000738a:	push   rdi
   14000738b:	sub    rsp,0x58
   14000738f:	mov    ebx,r9d
   140007392:	mov    QWORD PTR [rsp+0x40],r8
   140007397:	mov    DWORD PTR [rsp+0x90],ebx
   14000739e:	mov    rsi,r8
   1400073a1:	mov    rbp,rdx
   1400073a4:	mov    rax,rcx
   1400073a7:	lea    rcx,[rsp+0x98]
   1400073af:	mov    r9d,ebx
   1400073b2:	mov    QWORD PTR [rsp+0x20],rcx
   1400073b7:	mov    r8,rsi
   1400073ba:	mov    rcx,rax
   1400073bd:	mov    rdx,rbp
   1400073c0:	call   0x140006eb4
   1400073c5:	mov    QWORD PTR [rsp+0x48],rax
   1400073ca:	test   rax,rax
   1400073cd:	je     0x140007600
   1400073d3:	mov    ecx,DWORD PTR [rsp+0x98]
   1400073da:	xor    esi,esi
   1400073dc:	xor    ebp,ebp
   1400073de:	mov    rdi,rax
   1400073e1:	lea    edx,[rcx-0x1]
   1400073e4:	mov    DWORD PTR [rsp+0x30],edx
   1400073e8:	test   edx,edx
   1400073ea:	je     0x1400074b1
   1400073f0:	lea    eax,[rsi+0x1]
   1400073f3:	mov    ebx,0x1
   1400073f8:	cmp    eax,ecx
   1400073fa:	jae    0x140007480
   140007400:	mov    r9d,DWORD PTR [rdi+0x8]
   140007404:	xor    edx,edx
   140007406:	mov    eax,ebx
   140007408:	imul   r8,rax,0x34
   14000740c:	add    r8,rdi
   14000740f:	cmp    r9d,DWORD PTR [r8+0x8]
   140007413:	seta   dl
   140007416:	xor    eax,eax
   140007418:	cmp    r9d,DWORD PTR [r8+0x8]
   14000741c:	setb   al
   14000741f:	sub    edx,eax
   140007421:	jne    0x14000746f
   140007423:	mov    ecx,DWORD PTR [r8+0xc]
   140007427:	cmp    DWORD PTR [rdi+0xc],ecx
   14000742a:	seta   dl
   14000742d:	xor    eax,eax
   14000742f:	cmp    DWORD PTR [rdi+0xc],ecx
   140007432:	setb   al
   140007435:	sub    edx,eax
   140007437:	jne    0x140007468
   140007439:	mov    ecx,DWORD PTR [r8+0x10]
   14000743d:	cmp    DWORD PTR [rdi+0x10],ecx
   140007440:	seta   dl
   140007443:	xor    eax,eax
   140007445:	cmp    DWORD PTR [rdi+0x10],ecx
   140007448:	setb   al
   14000744b:	sub    edx,eax
   14000744d:	jne    0x140007468
   14000744f:	lea    rdx,[r8+0x14]
   140007453:	mov    r8d,0x20
   140007459:	lea    rcx,[rdi+0x14]
   14000745d:	call   0x140008e86
   140007462:	mov    r9d,DWORD PTR [rdi+0x8]
   140007466:	mov    edx,eax
   140007468:	mov    ecx,DWORD PTR [rsp+0x98]
   14000746f:	test   edx,edx
   140007471:	jne    0x14000747c
   140007473:	inc    ebx
   140007475:	lea    eax,[rbx+rsi*1]
   140007478:	cmp    eax,ecx
   14000747a:	jb     0x140007404
   14000747c:	mov    edx,DWORD PTR [rsp+0x30]
   140007480:	cmp    ebx,ebp
   140007482:	jbe    0x14000748b
   140007484:	mov    ebp,ebx
   140007486:	mov    QWORD PTR [rsp+0x38],rdi
   14000748b:	mov    eax,ebx
   14000748d:	add    esi,ebx
   14000748f:	imul   rcx,rax,0x34
   140007493:	add    rdi,rcx
   140007496:	mov    ecx,DWORD PTR [rsp+0x98]
   14000749d:	cmp    esi,edx
   14000749f:	jb     0x1400073f0
   1400074a5:	mov    ebx,DWORD PTR [rsp+0x90]
   1400074ac:	mov    rax,QWORD PTR [rsp+0x48]
   1400074b1:	xor    edi,edi
   1400074b3:	cmp    ebp,DWORD PTR [rsp+0xa0]
   1400074ba:	cmovae edi,ebp
   1400074bd:	test   edi,edi
   1400074bf:	je     0x1400075f7
   1400074c5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400074ca:	mov    rbp,QWORD PTR [rsp+0x38]
   1400074cf:	cmp    ebx,edi
   1400074d1:	jbe    0x14000756f
   1400074d7:	test   edi,edi
   1400074d9:	je     0x14000756f
   1400074df:	mov    rcx,rsi
   1400074e2:	mov    ebx,edi
   1400074e4:	lea    r10,[rbp+0x4]
   1400074e8:	mov    r9d,DWORD PTR [r10]
   1400074eb:	mov    r8,rcx
   1400074ee:	mov    rdx,rcx
   1400074f1:	movd   xmm1,r9d
   1400074f6:	pshufd xmm1,xmm1,0x0
   1400074fb:	and    r8d,0xf
   1400074ff:	je     0x140007540
   140007501:	test   r8b,0x3
   140007505:	je     0x140007517
   140007507:	cmp    r9d,DWORD PTR [rcx]
   14000750a:	je     0x140007556
   14000750c:	add    rdx,0x4
   140007510:	cmp    r9d,DWORD PTR [rdx]
   140007513:	jne    0x14000750c
   140007515:	jmp    0x140007556
   140007517:	sub    rdx,r8
   14000751a:	mov    eax,0x10
   14000751f:	shr    r8,1
   140007522:	sub    eax,r8d
   140007525:	movdqu xmm0,XMMWORD PTR [rdx]
   140007529:	pcmpeqd xmm0,xmm1
   14000752d:	movmskps r11d,xmm0
   140007531:	and    r11d,eax
   140007534:	je     0x14000753c
   140007536:	bsf    eax,r11d
   14000753a:	jmp    0x140007552
   14000753c:	add    rdx,0x10
   140007540:	movdqu xmm0,XMMWORD PTR [rdx]
   140007544:	pcmpeqd xmm0,xmm1
   140007548:	movmskps eax,xmm0
   14000754b:	test   eax,eax
   14000754d:	je     0x14000753c
   14000754f:	bsf    eax,eax
   140007552:	lea    rdx,[rdx+rax*4]
   140007556:	mov    eax,DWORD PTR [rcx]
   140007558:	add    r10,0x34
   14000755c:	mov    DWORD PTR [rdx],eax
   14000755e:	mov    DWORD PTR [rcx],r9d
   140007561:	add    rcx,0x4
   140007565:	sub    rbx,0x1
   140007569:	jne    0x1400074e8
   14000756f:	mov    edx,edi
   140007571:	mov    rcx,rsi
   140007574:	call   0x140007a08
   140007579:	mov    rcx,QWORD PTR [rsp+0x80]
   140007581:	mov    r9d,edi
   140007584:	mov    QWORD PTR [rsp+0x20],rbp
   140007589:	mov    r8,rsi
   14000758c:	mov    rbp,QWORD PTR [rsp+0x88]
   140007594:	mov    rdx,rbp
   140007597:	call   0x140007124
   14000759c:	mov    rcx,QWORD PTR [rsp+0x48]
   1400075a1:	call   QWORD PTR [rip+0x1c19]        # 0x1400091c0
   1400075a7:	mov    eax,DWORD PTR [rsp+0xa0]
   1400075ae:	mov    r9d,edi
   1400075b1:	mov    rcx,QWORD PTR [rsp+0x80]
   1400075b9:	mov    r8,rsi
   1400075bc:	and    QWORD PTR [rsp+0x38],0x0
   1400075c2:	mov    rdx,rbp
   1400075c5:	mov    DWORD PTR [rsp+0x20],eax
   1400075c9:	call   0x140007374
   1400075ce:	mov    ebx,DWORD PTR [rsp+0x90]
   1400075d5:	lea    rsi,[rsi+rdi*4]
   1400075d9:	mov    rax,QWORD PTR [rsp+0x80]
   1400075e1:	sub    ebx,edi
   1400075e3:	mov    DWORD PTR [rsp+0x90],ebx
   1400075ea:	mov    QWORD PTR [rsp+0x40],rsi
   1400075ef:	jne    0x1400073a7
   1400075f5:	jmp    0x140007600
   1400075f7:	mov    rcx,rax
   1400075fa:	call   QWORD PTR [rip+0x1bc0]        # 0x1400091c0
   140007600:	add    rsp,0x58
   140007604:	pop    rdi
   140007605:	pop    rsi
   140007606:	pop    rbp
   140007607:	pop    rbx
   140007608:	ret    
   140007609:	int3   
   14000760a:	int3   
   14000760b:	int3   
   14000760c:	int3   
   14000760d:	int3   
   14000760e:	int3   
   14000760f:	int3   
   140007610:	mov    QWORD PTR [rsp+0x10],rbx
   140007615:	mov    QWORD PTR [rsp+0x18],rbp
   14000761a:	mov    QWORD PTR [rsp+0x20],rsi
   14000761f:	push   rdi
   140007620:	push   r12
   140007622:	push   r13
   140007624:	push   r14
   140007626:	push   r15
   140007628:	sub    rsp,0x30
   14000762c:	mov    r14d,DWORD PTR [rcx+0x20]
   140007630:	xor    ebx,ebx
   140007632:	mov    edi,DWORD PTR [rcx+0x24]
   140007635:	xor    r13d,r13d
   140007638:	xor    ebp,ebp
   14000763a:	mov    rsi,rcx
   14000763d:	cmp    r14d,0x1fffffff
   140007644:	ja     0x140007657
   140007646:	mov    ecx,r14d
   140007649:	shl    ecx,0x2
   14000764c:	call   QWORD PTR [rip+0x1b66]        # 0x1400091b8
   140007652:	mov    r15,rax
   140007655:	jmp    0x14000765a
   140007657:	xor    r15d,r15d
   14000765a:	cmp    edi,0x1fffffff
   140007660:	ja     0x140007672
   140007662:	mov    ecx,edi
   140007664:	shl    ecx,0x2
   140007667:	call   QWORD PTR [rip+0x1b4b]        # 0x1400091b8
   14000766d:	mov    r12,rax
   140007670:	jmp    0x140007675
   140007672:	xor    r12d,r12d
   140007675:	test   r15,r15
   140007678:	je     0x1400077e4
   14000767e:	test   r12,r12
   140007681:	je     0x1400077e4
   140007687:	mov    r9,QWORD PTR [rsi+0x178]
   14000768e:	xor    edx,edx
   140007690:	xor    r8d,r8d
   140007693:	test   r14d,r14d
   140007696:	je     0x1400076b7
   140007698:	mov    DWORD PTR [r12+r8*4],edx
   14000769c:	mov    ecx,DWORD PTR [r9+0x4]
   1400076a0:	add    r9,0x40
   1400076a4:	mov    DWORD PTR [r15+rdx*4],r8d
   1400076a8:	inc    edx
   1400076aa:	and    ecx,0x2
   1400076ad:	je     0x14000769c
   1400076af:	inc    r8d
   1400076b2:	cmp    edx,r14d
   1400076b5:	jb     0x140007698
   1400076b7:	mov    eax,DWORD PTR [rsi+0x24]
   1400076ba:	cmp    eax,0x1fffffff
   1400076bf:	ja     0x1400076cf
   1400076c1:	shl    eax,0x2
   1400076c4:	mov    ecx,eax
   1400076c6:	call   QWORD PTR [rip+0x1aec]        # 0x1400091b8
   1400076cc:	mov    rbp,rax
   1400076cf:	test   rbp,rbp
   1400076d2:	je     0x1400077e4
   1400076d8:	xor    eax,eax
   1400076da:	test   edi,edi
   1400076dc:	je     0x1400076ed
   1400076de:	mov    rcx,rbp
   1400076e1:	mov    DWORD PTR [rcx],eax
   1400076e3:	inc    eax
   1400076e5:	lea    rcx,[rcx+0x4]
   1400076e9:	cmp    eax,edi
   1400076eb:	jb     0x1400076e1
   1400076ed:	mov    r9d,edi
   1400076f0:	mov    QWORD PTR [rsp+0x60],r12
   1400076f5:	mov    r8,rbp
   1400076f8:	mov    DWORD PTR [rsp+0x20],0x5
   140007700:	mov    rdx,rsi
   140007703:	lea    rcx,[rsp+0x60]
   140007708:	call   0x140007374
   14000770d:	mov    rax,QWORD PTR [rsi+0x178]
   140007714:	xor    edi,edi
   140007716:	test   r14d,r14d
   140007719:	je     0x140007747
   14000771b:	add    rax,0x4
   14000771f:	mov    rcx,r15
   140007722:	mov    rdx,r14
   140007725:	mov    DWORD PTR [rcx],edi
   140007727:	test   DWORD PTR [rax],0x80000000
   14000772d:	jne    0x140007731
   14000772f:	inc    edi
   140007731:	add    rax,0x40
   140007735:	add    rcx,0x4
   140007739:	sub    rdx,0x1
   14000773d:	jne    0x140007725
   14000773f:	cmp    edi,0x1ffffff
   140007745:	ja     0x140007755
   140007747:	mov    ecx,edi
   140007749:	shl    ecx,0x6
   14000774c:	call   QWORD PTR [rip+0x1a66]        # 0x1400091b8
   140007752:	mov    r13,rax
   140007755:	test   r13,r13
   140007758:	je     0x1400077e4
   14000775e:	mov    rcx,QWORD PTR [rsi+0x178]
   140007765:	mov    eax,edi
   140007767:	shl    rax,0x6
   14000776b:	mov    DWORD PTR [rsi+0x20],edi
   14000776e:	mov    QWORD PTR [rsi+0x170],rax
   140007775:	test   r14d,r14d
   140007778:	je     0x1400077e9
   14000777a:	lea    rdx,[r13+0x1c]
   14000777e:	mov    r9,r14
   140007781:	test   DWORD PTR [rcx+0x4],0x80000000
   140007788:	jne    0x1400077d8
   14000778a:	movups xmm0,XMMWORD PTR [rcx]
   14000778d:	movups XMMWORD PTR [rdx-0x1c],xmm0
   140007791:	movups xmm1,XMMWORD PTR [rcx+0x10]
   140007795:	movups XMMWORD PTR [rdx-0xc],xmm1
   140007799:	movups xmm0,XMMWORD PTR [rcx+0x20]
   14000779d:	movups XMMWORD PTR [rdx+0x4],xmm0
   1400077a1:	movups xmm1,XMMWORD PTR [rcx+0x30]
   1400077a5:	movups XMMWORD PTR [rdx+0x14],xmm1
   1400077a9:	test   BYTE PTR [rcx+0x4],0x10
   1400077ad:	je     0x1400077b8
   1400077af:	mov    eax,DWORD PTR [rcx+0x18]
   1400077b2:	mov    r8d,DWORD PTR [r15+rax*4]
   1400077b6:	jmp    0x1400077bb
   1400077b8:	xor    r8d,r8d
   1400077bb:	mov    DWORD PTR [rdx-0x4],r8d
   1400077bf:	test   BYTE PTR [rcx+0x4],0x20
   1400077c3:	je     0x1400077ce
   1400077c5:	mov    eax,DWORD PTR [rcx+0x1c]
   1400077c8:	mov    r8d,DWORD PTR [r15+rax*4]
   1400077cc:	jmp    0x1400077d1
   1400077ce:	xor    r8d,r8d
   1400077d1:	mov    DWORD PTR [rdx],r8d
   1400077d4:	add    rdx,0x40
   1400077d8:	add    rcx,0x40
   1400077dc:	sub    r9,0x1
   1400077e0:	jne    0x140007781
   1400077e2:	jmp    0x1400077e9
   1400077e4:	mov    ebx,0x8007000e
   1400077e9:	mov    rcx,QWORD PTR [rsi+0x178]
   1400077f0:	test   rcx,rcx
   1400077f3:	je     0x1400077fb
   1400077f5:	call   QWORD PTR [rip+0x19c5]        # 0x1400091c0
   1400077fb:	mov    QWORD PTR [rsi+0x178],r13
   140007802:	test   rbp,rbp
   140007805:	je     0x140007810
   140007807:	mov    rcx,rbp
   14000780a:	call   QWORD PTR [rip+0x19b0]        # 0x1400091c0
   140007810:	test   r15,r15
   140007813:	je     0x14000781e
   140007815:	mov    rcx,r15
   140007818:	call   QWORD PTR [rip+0x19a2]        # 0x1400091c0
   14000781e:	test   r12,r12
   140007821:	je     0x14000782c
   140007823:	mov    rcx,r12
   140007826:	call   QWORD PTR [rip+0x1994]        # 0x1400091c0
   14000782c:	mov    rbp,QWORD PTR [rsp+0x70]
   140007831:	mov    eax,ebx
   140007833:	mov    rbx,QWORD PTR [rsp+0x68]
   140007838:	mov    rsi,QWORD PTR [rsp+0x78]
   14000783d:	add    rsp,0x30
   140007841:	pop    r15
   140007843:	pop    r14
   140007845:	pop    r13
   140007847:	pop    r12
   140007849:	pop    rdi
   14000784a:	ret    
   14000784b:	int3   
   14000784c:	int3   
   14000784d:	int3   
   14000784e:	int3   
   14000784f:	int3   
   140007850:	int3   
   140007851:	int3   
   140007852:	int3   
   140007853:	int3   
   140007854:	cmp    rdx,0x2
   140007858:	jb     0x1400079ff
   14000785e:	mov    QWORD PTR [rsp+0x18],rbx
   140007863:	push   rbp
   140007864:	push   rsi
   140007865:	push   rdi
   140007866:	push   r14
   140007868:	push   r15
   14000786a:	sub    rsp,0x450
   140007871:	mov    rax,QWORD PTR [rip+0x47a0]        # 0x14000c018
   140007878:	xor    rax,rsp
   14000787b:	mov    QWORD PTR [rsp+0x440],rax
   140007883:	lea    rdi,[rdx-0x1]
   140007887:	mov    rbx,rcx
   14000788a:	lea    rdi,[rcx+rdi*8]
   14000788e:	xor    ebp,ebp
   140007890:	mov    rdx,rdi
   140007893:	sub    rdx,rbx
   140007896:	sar    rdx,0x3
   14000789a:	inc    rdx
   14000789d:	cmp    rdx,0x8
   1400078a1:	ja     0x1400078ff
   1400078a3:	cmp    rdi,rbx
   1400078a6:	jbe    0x1400078e6
   1400078a8:	lea    r15,[rbx+0x8]
   1400078ac:	mov    rsi,rbx
   1400078af:	mov    r14,r15
   1400078b2:	cmp    r15,rdi
   1400078b5:	ja     0x1400078d1
   1400078b7:	mov    rdx,rsi
   1400078ba:	mov    rcx,r14
   1400078bd:	call   0x140006dec
   1400078c2:	test   al,al
   1400078c4:	cmove  rsi,r14
   1400078c8:	add    r14,0x8
   1400078cc:	cmp    r14,rdi
   1400078cf:	jbe    0x1400078b7
   1400078d1:	mov    rcx,QWORD PTR [rdi]
   1400078d4:	mov    rax,QWORD PTR [rsi]
   1400078d7:	mov    QWORD PTR [rsi],rcx
   1400078da:	mov    QWORD PTR [rdi],rax
   1400078dd:	sub    rdi,0x8
   1400078e1:	cmp    rdi,rbx
   1400078e4:	ja     0x1400078ac
   1400078e6:	sub    rbp,0x1
   1400078ea:	js     0x1400079d9
   1400078f0:	mov    rbx,QWORD PTR [rsp+rbp*8+0x20]
   1400078f5:	mov    rdi,QWORD PTR [rsp+rbp*8+0x230]
   1400078fd:	jmp    0x140007890
   1400078ff:	mov    rcx,QWORD PTR [rbx]
   140007902:	lea    rsi,[rdi+0x8]
   140007906:	shr    rdx,1
   140007909:	mov    r14,rbx
   14000790c:	mov    rax,QWORD PTR [rbx+rdx*8]
   140007910:	mov    QWORD PTR [rbx+rdx*8],rcx
   140007914:	mov    QWORD PTR [rbx],rax
   140007917:	add    r14,0x8
   14000791b:	cmp    r14,rdi
   14000791e:	ja     0x14000792f
   140007920:	mov    rdx,rbx
   140007923:	mov    rcx,r14
   140007926:	call   0x140006dec
   14000792b:	test   al,al
   14000792d:	jne    0x140007917
   14000792f:	sub    rsi,0x8
   140007933:	cmp    rsi,rbx
   140007936:	jbe    0x140007947
   140007938:	mov    rdx,rsi
   14000793b:	mov    rcx,rbx
   14000793e:	call   0x140006dec
   140007943:	test   al,al
   140007945:	jne    0x14000792f
   140007947:	mov    rcx,QWORD PTR [rsi]
   14000794a:	cmp    rsi,r14
   14000794d:	jb     0x14000795a
   14000794f:	mov    rax,QWORD PTR [r14]
   140007952:	mov    QWORD PTR [r14],rcx
   140007955:	mov    QWORD PTR [rsi],rax
   140007958:	jmp    0x140007917
   14000795a:	mov    rax,QWORD PTR [rbx]
   14000795d:	mov    QWORD PTR [rbx],rcx
   140007960:	mov    rcx,rsi
   140007963:	mov    QWORD PTR [rsi],rax
   140007966:	sub    rcx,rbx
   140007969:	sub    rcx,0x8
   14000796d:	mov    rax,rdi
   140007970:	sub    rax,r14
   140007973:	and    rcx,0xfffffffffffffff8
   140007977:	and    rax,0xfffffffffffffff8
   14000797b:	cmp    rcx,rax
   14000797e:	jl     0x1400079ae
   140007980:	lea    rax,[rbx+0x8]
   140007984:	cmp    rax,rsi
   140007987:	jae    0x14000799d
   140007989:	lea    rax,[rsi-0x8]
   14000798d:	mov    QWORD PTR [rsp+rbp*8+0x20],rbx
   140007992:	mov    QWORD PTR [rsp+rbp*8+0x230],rax
   14000799a:	inc    rbp
   14000799d:	cmp    r14,rdi
   1400079a0:	jae    0x1400078e6
   1400079a6:	mov    rbx,r14
   1400079a9:	jmp    0x140007890
   1400079ae:	cmp    r14,rdi
   1400079b1:	jae    0x1400079c3
   1400079b3:	mov    QWORD PTR [rsp+rbp*8+0x20],r14
   1400079b8:	mov    QWORD PTR [rsp+rbp*8+0x230],rdi
   1400079c0:	inc    rbp
   1400079c3:	lea    rax,[rbx+0x8]
   1400079c7:	cmp    rax,rsi
   1400079ca:	jae    0x1400078e6
   1400079d0:	lea    rdi,[rsi-0x8]
   1400079d4:	jmp    0x140007890
   1400079d9:	mov    rcx,QWORD PTR [rsp+0x440]
   1400079e1:	xor    rcx,rsp
   1400079e4:	call   0x140008740
   1400079e9:	mov    rbx,QWORD PTR [rsp+0x490]
   1400079f1:	add    rsp,0x450
   1400079f8:	pop    r15
   1400079fa:	pop    r14
   1400079fc:	pop    rdi
   1400079fd:	pop    rsi
   1400079fe:	pop    rbp
   1400079ff:	ret    
   140007a00:	int3   
   140007a01:	int3   
   140007a02:	int3   
   140007a03:	int3   
   140007a04:	int3   
   140007a05:	int3   
   140007a06:	int3   
   140007a07:	int3   
   140007a08:	cmp    rdx,0x2
   140007a0c:	jb     0x140007b7d
   140007a12:	sub    rsp,0x438
   140007a19:	mov    rax,QWORD PTR [rip+0x45f8]        # 0x14000c018
   140007a20:	xor    rax,rsp
   140007a23:	mov    QWORD PTR [rsp+0x420],rax
   140007a2b:	dec    rdx
   140007a2e:	mov    r8,rcx
   140007a31:	xor    r11d,r11d
   140007a34:	lea    rdx,[rcx+rdx*4]
   140007a38:	mov    r9,rdx
   140007a3b:	sub    r9,r8
   140007a3e:	sar    r9,0x2
   140007a42:	inc    r9
   140007a45:	cmp    r9,0x8
   140007a49:	ja     0x140007a9c
   140007a4b:	cmp    rdx,r8
   140007a4e:	jbe    0x140007a84
   140007a50:	lea    r10,[r8+0x4]
   140007a54:	mov    r9,r8
   140007a57:	mov    rcx,r10
   140007a5a:	cmp    r10,rdx
   140007a5d:	ja     0x140007a71
   140007a5f:	mov    eax,DWORD PTR [r9]
   140007a62:	cmp    DWORD PTR [rcx],eax
   140007a64:	cmova  r9,rcx
   140007a68:	add    rcx,0x4
   140007a6c:	cmp    rcx,rdx
   140007a6f:	jbe    0x140007a5f
   140007a71:	mov    eax,DWORD PTR [rdx]
   140007a73:	mov    ecx,DWORD PTR [r9]
   140007a76:	mov    DWORD PTR [r9],eax
   140007a79:	mov    DWORD PTR [rdx],ecx
   140007a7b:	sub    rdx,0x4
   140007a7f:	cmp    rdx,r8
   140007a82:	ja     0x140007a54
   140007a84:	sub    r11,0x1
   140007a88:	js     0x140007b66
   140007a8e:	mov    r8,QWORD PTR [rsp+r11*8]
   140007a92:	mov    rdx,QWORD PTR [rsp+r11*8+0x210]
   140007a9a:	jmp    0x140007a38
   140007a9c:	mov    eax,DWORD PTR [r8]
   140007a9f:	mov    r10,r8
   140007aa2:	shr    r9,1
   140007aa5:	mov    ecx,DWORD PTR [r8+r9*4]
   140007aa9:	mov    DWORD PTR [r8+r9*4],eax
   140007aad:	lea    r9,[rdx+0x4]
   140007ab1:	mov    DWORD PTR [r8],ecx
   140007ab4:	add    r10,0x4
   140007ab8:	cmp    r10,rdx
   140007abb:	ja     0x140007ac5
   140007abd:	mov    eax,DWORD PTR [r8]
   140007ac0:	cmp    DWORD PTR [r10],eax
   140007ac3:	jbe    0x140007ab4
   140007ac5:	sub    r9,0x4
   140007ac9:	cmp    r9,r8
   140007acc:	jbe    0x140007ad6
   140007ace:	mov    eax,DWORD PTR [r9]
   140007ad1:	cmp    DWORD PTR [r8],eax
   140007ad4:	jbe    0x140007ac5
   140007ad6:	mov    eax,DWORD PTR [r9]
   140007ad9:	cmp    r9,r10
   140007adc:	jb     0x140007ae9
   140007ade:	mov    ecx,DWORD PTR [r10]
   140007ae1:	mov    DWORD PTR [r10],eax
   140007ae4:	mov    DWORD PTR [r9],ecx
   140007ae7:	jmp    0x140007ab4
   140007ae9:	mov    ecx,DWORD PTR [r8]
   140007aec:	mov    DWORD PTR [r8],eax
   140007aef:	mov    rax,rdx
   140007af2:	mov    DWORD PTR [r9],ecx
   140007af5:	sub    rax,r10
   140007af8:	mov    rcx,r9
   140007afb:	and    rax,0xfffffffffffffffc
   140007aff:	sub    rcx,r8
   140007b02:	sub    rcx,0x4
   140007b06:	and    rcx,0xfffffffffffffffc
   140007b0a:	cmp    rcx,rax
   140007b0d:	jl     0x140007b3c
   140007b0f:	lea    rax,[r8+0x4]
   140007b13:	cmp    rax,r9
   140007b16:	jae    0x140007b2b
   140007b18:	lea    rax,[r9-0x4]
   140007b1c:	mov    QWORD PTR [rsp+r11*8],r8
   140007b20:	mov    QWORD PTR [rsp+r11*8+0x210],rax
   140007b28:	inc    r11
   140007b2b:	cmp    r10,rdx
   140007b2e:	jae    0x140007a84
   140007b34:	mov    r8,r10
   140007b37:	jmp    0x140007a38
   140007b3c:	cmp    r10,rdx
   140007b3f:	jae    0x140007b50
   140007b41:	mov    QWORD PTR [rsp+r11*8],r10
   140007b45:	mov    QWORD PTR [rsp+r11*8+0x210],rdx
   140007b4d:	inc    r11
   140007b50:	lea    rax,[r8+0x4]
   140007b54:	cmp    rax,r9
   140007b57:	jae    0x140007a84
   140007b5d:	lea    rdx,[r9-0x4]
   140007b61:	jmp    0x140007a38
   140007b66:	mov    rcx,QWORD PTR [rsp+0x420]
   140007b6e:	xor    rcx,rsp
   140007b71:	call   0x140008740
   140007b76:	add    rsp,0x438
   140007b7d:	ret    
   140007b7e:	int3   
   140007b7f:	int3   
   140007b80:	int3   
   140007b81:	int3   
   140007b82:	int3   
   140007b83:	int3   
   140007b84:	mov    rax,rsp
   140007b87:	mov    QWORD PTR [rax+0x8],rbx
   140007b8b:	mov    QWORD PTR [rax+0x10],rbp
   140007b8f:	mov    QWORD PTR [rax+0x18],rsi
   140007b93:	mov    QWORD PTR [rax+0x20],r9
   140007b97:	push   rdi
   140007b98:	push   r12
   140007b9a:	push   r13
   140007b9c:	push   r14
   140007b9e:	push   r15
   140007ba0:	sub    rsp,0x20
   140007ba4:	lea    r10,[rcx-0x1]
   140007ba8:	mov    r14,rdx
   140007bab:	mov    r15,r9
   140007bae:	mov    r13,r8
   140007bb1:	movabs r9,0x8080808080808081
   140007bbb:	mov    rsi,rcx
   140007bbe:	mov    rax,r9
   140007bc1:	mul    r10
   140007bc4:	shr    rdx,0x7
   140007bc8:	imul   rax,rdx,0xff
   140007bcf:	sub    r10,rax
   140007bd2:	jne    0x140007bda
   140007bd4:	cmp    rcx,0x1
   140007bd8:	jne    0x140007be5
   140007bda:	mov    ecx,0xff
   140007bdf:	sub    rcx,r10
   140007be2:	mov    r10,rcx
   140007be5:	lea    r12,[r10+rsi*1]
   140007be9:	mov    rax,r9
   140007bec:	lea    r8,[r12-0x1]
   140007bf1:	mov    rbx,r12
   140007bf4:	mul    r8
   140007bf7:	shr    rdx,0x7
   140007bfb:	imul   rax,rdx,0xff
   140007c02:	cmp    r8,rax
   140007c05:	je     0x140007c2d
   140007c07:	mov    ecx,0x2
   140007c0c:	call   0x140008dc8
   140007c11:	mov    rcx,rax
   140007c14:	lea    rdx,[rip+0x26f5]        # 0x14000a310
   140007c1b:	call   QWORD PTR [rip+0x1617]        # 0x140009238
   140007c21:	mov    ecx,0x1
   140007c26:	call   QWORD PTR [rip+0x159c]        # 0x1400091c8
   140007c2c:	int3   
   140007c2d:	cmp    ebx,0x7ffffff
   140007c33:	ja     0x140007c47
   140007c35:	mov    ecx,ebx
   140007c37:	mov    edx,0x10
   140007c3c:	call   QWORD PTR [rip+0x161e]        # 0x140009260
   140007c42:	mov    rbp,rax
   140007c45:	jmp    0x140007c49
   140007c47:	xor    ebp,ebp
   140007c49:	cmp    ebx,0xfffffff
   140007c4f:	ja     0x140007c61
   140007c51:	mov    ecx,ebx
   140007c53:	shl    ecx,0x3
   140007c56:	call   QWORD PTR [rip+0x155c]        # 0x1400091b8
   140007c5c:	mov    rdi,rax
   140007c5f:	jmp    0x140007c63
   140007c61:	xor    edi,edi
   140007c63:	xor    ecx,ecx
   140007c65:	test   rsi,rsi
   140007c68:	je     0x140007c83
   140007c6a:	mov    rdx,rbp
   140007c6d:	mov    eax,DWORD PTR [r14+rcx*4]
   140007c71:	mov    DWORD PTR [rdx],eax
   140007c73:	mov    QWORD PTR [rdi+rcx*8],rdx
   140007c77:	inc    rcx
   140007c7a:	add    rdx,0x10
   140007c7e:	cmp    rcx,rsi
   140007c81:	jb     0x140007c6d
   140007c83:	cmp    rcx,rbx
   140007c86:	jae    0x140007ca2
   140007c88:	mov    rax,rcx
   140007c8b:	shl    rax,0x4
   140007c8f:	add    rax,rbp
   140007c92:	mov    QWORD PTR [rdi+rcx*8],rax
   140007c96:	inc    rcx
   140007c99:	add    rax,0x10
   140007c9d:	cmp    rcx,rbx
   140007ca0:	jb     0x140007c92
   140007ca2:	cmp    rbx,0x1
   140007ca6:	jbe    0x140007e20
   140007cac:	mov    r15,rbx
   140007caf:	shl    r15,0x3
   140007cb3:	mov    r9,QWORD PTR [r15+rdi*1-0x800]
   140007cbb:	mov    rdx,QWORD PTR [r15+rdi*1-0x7f8]
   140007cc3:	mov    rax,QWORD PTR [r9+0x8]
   140007cc7:	movups xmm0,XMMWORD PTR [rdx]
   140007cca:	mov    QWORD PTR [rdx+0x8],rax
   140007cce:	xor    eax,eax
   140007cd0:	cmp    QWORD PTR [r9+0x8],rax
   140007cd4:	sete   al
   140007cd7:	mov    DWORD PTR [rdx],eax
   140007cd9:	movd   eax,xmm0
   140007cdd:	psrldq xmm0,0x8
   140007ce2:	movq   r8,xmm0
   140007ce7:	mov    QWORD PTR [r9+0x8],rdx
   140007ceb:	add    DWORD PTR [r9],eax
   140007cee:	test   r8,r8
   140007cf1:	jne    0x140007cf7
   140007cf3:	inc    DWORD PTR [rdx]
   140007cf5:	jmp    0x140007d20
   140007cf7:	mov    rcx,QWORD PTR [rdx+0x8]
   140007cfb:	jmp    0x140007d12
   140007cfd:	test   r8,r8
   140007d00:	je     0x140007d20
   140007d02:	mov    eax,DWORD PTR [r8]
   140007d05:	mov    rdx,rcx
   140007d08:	add    DWORD PTR [rcx],eax
   140007d0a:	mov    rcx,QWORD PTR [rcx+0x8]
   140007d0e:	mov    r8,QWORD PTR [r8+0x8]
   140007d12:	test   rcx,rcx
   140007d15:	jne    0x140007cfd
   140007d17:	test   r8,r8
   140007d1a:	je     0x140007d20
   140007d1c:	mov    QWORD PTR [rdx+0x8],r8
   140007d20:	lea    r10,[rbx-0x100]
   140007d27:	lea    r8,[r10+0x2]
   140007d2b:	jmp    0x140007d72
   140007d2d:	mov    rcx,QWORD PTR [rdi+r8*8]
   140007d31:	mov    eax,DWORD PTR [rcx]
   140007d33:	add    DWORD PTR [r9],eax
   140007d36:	mov    rdx,QWORD PTR [rcx+0x8]
   140007d3a:	mov    rax,QWORD PTR [r9+0x8]
   140007d3e:	test   rdx,rdx
   140007d41:	jne    0x140007d47
   140007d43:	inc    DWORD PTR [rax]
   140007d45:	jmp    0x140007d6f
   140007d47:	mov    rcx,QWORD PTR [rax+0x8]
   140007d4b:	jmp    0x140007d61
   140007d4d:	test   rdx,rdx
   140007d50:	je     0x140007d6f
   140007d52:	mov    eax,DWORD PTR [rdx]
   140007d54:	add    DWORD PTR [rcx],eax
   140007d56:	mov    rax,rcx
   140007d59:	mov    rcx,QWORD PTR [rcx+0x8]
   140007d5d:	mov    rdx,QWORD PTR [rdx+0x8]
   140007d61:	test   rcx,rcx
   140007d64:	jne    0x140007d4d
   140007d66:	test   rdx,rdx
   140007d69:	je     0x140007d6f
   140007d6b:	mov    QWORD PTR [rax+0x8],rdx
   140007d6f:	inc    r8
   140007d72:	cmp    r8,rbx
   140007d75:	jb     0x140007d2d
   140007d77:	add    r15,0xfffffffffffff808
   140007d7e:	lea    rbx,[r10+0x1]
   140007d82:	mov    eax,0x100
   140007d87:	mov    r14,QWORD PTR [r15+rdi*1-0x8]
   140007d8c:	mov    rcx,QWORD PTR [r14+0x8]
   140007d90:	test   rcx,rcx
   140007d93:	je     0x140007e93
   140007d99:	mov    edx,DWORD PTR [rcx]
   140007d9b:	cmp    rdx,rax
   140007d9e:	ja     0x140007e6d
   140007da4:	mov    rcx,QWORD PTR [rcx+0x8]
   140007da8:	sub    rax,rdx
   140007dab:	shl    rax,0x8
   140007daf:	test   rcx,rcx
   140007db2:	jne    0x140007d99
   140007db4:	test   rax,rax
   140007db7:	jne    0x140007e93
   140007dbd:	lea    edx,[rbx-0x2]
   140007dc0:	movsxd rsi,edx
   140007dc3:	test   edx,edx
   140007dc5:	js     0x140007dde
   140007dc7:	mov    r8d,DWORD PTR [r14]
   140007dca:	mov    rcx,rsi
   140007dcd:	mov    rax,QWORD PTR [rdi+rcx*8]
   140007dd1:	cmp    DWORD PTR [rax],r8d
   140007dd4:	jae    0x140007dde
   140007dd6:	dec    esi
   140007dd8:	sub    rcx,0x1
   140007ddc:	jns    0x140007dcd
   140007dde:	cmp    esi,edx
   140007de0:	jge    0x140007e09
   140007de2:	movsxd rax,esi
   140007de5:	mov    r8,rbx
   140007de8:	sub    r8,rax
   140007deb:	lea    rdx,[rax+0x1]
   140007def:	lea    rcx,[rax+0x2]
   140007df3:	lea    r8,[r8*8-0x10]
   140007dfb:	lea    rdx,[rdi+rdx*8]
   140007dff:	lea    rcx,[rdi+rcx*8]
   140007e03:	call   QWORD PTR [rip+0x13e7]        # 0x1400091f0
   140007e09:	movsxd rax,esi
   140007e0c:	mov    QWORD PTR [rdi+rax*8+0x8],r14
   140007e11:	cmp    rbx,0x1
   140007e15:	ja     0x140007cb3
   140007e1b:	mov    r15,QWORD PTR [rsp+0x68]
   140007e20:	mov    rax,QWORD PTR [rdi]
   140007e23:	xor    ecx,ecx
   140007e25:	xor    esi,esi
   140007e27:	mov    rbx,QWORD PTR [rax+0x8]
   140007e2b:	mov    rax,rbx
   140007e2e:	test   rbx,rbx
   140007e31:	je     0x140007e40
   140007e33:	add    ecx,DWORD PTR [rax]
   140007e35:	inc    esi
   140007e37:	mov    rax,QWORD PTR [rax+0x8]
   140007e3b:	test   rax,rax
   140007e3e:	jne    0x140007e33
   140007e40:	mov    eax,ecx
   140007e42:	cmp    rax,r12
   140007e45:	je     0x140007eb9
   140007e47:	mov    ecx,0x2
   140007e4c:	call   0x140008dc8
   140007e51:	mov    rcx,rax
   140007e54:	lea    rdx,[rip+0x2505]        # 0x14000a360
   140007e5b:	call   QWORD PTR [rip+0x13d7]        # 0x140009238
   140007e61:	mov    ecx,0x1
   140007e66:	call   QWORD PTR [rip+0x135c]        # 0x1400091c8
   140007e6c:	int3   
   140007e6d:	mov    ecx,0x2
   140007e72:	call   0x140008dc8
   140007e77:	mov    rcx,rax
   140007e7a:	lea    rdx,[rip+0x242f]        # 0x14000a2b0
   140007e81:	call   QWORD PTR [rip+0x13b1]        # 0x140009238
   140007e87:	mov    ecx,0x1
   140007e8c:	call   QWORD PTR [rip+0x1336]        # 0x1400091c8
   140007e92:	int3   
   140007e93:	mov    ecx,0x2
   140007e98:	call   0x140008dc8
   140007e9d:	mov    rcx,rax
   140007ea0:	lea    rdx,[rip+0x2439]        # 0x14000a2e0
   140007ea7:	call   QWORD PTR [rip+0x138b]        # 0x140009238
   140007ead:	mov    ecx,0x1
   140007eb2:	call   QWORD PTR [rip+0x1310]        # 0x1400091c8
   140007eb8:	int3   
   140007eb9:	cmp    esi,0x1fffffff
   140007ebf:	ja     0x140007ed1
   140007ec1:	mov    ecx,esi
   140007ec3:	shl    ecx,0x2
   140007ec6:	call   QWORD PTR [rip+0x12ec]        # 0x1400091b8
   140007ecc:	mov    rcx,rax
   140007ecf:	jmp    0x140007ed3
   140007ed1:	xor    ecx,ecx
   140007ed3:	test   rcx,rcx
   140007ed6:	jne    0x140007ef1
   140007ed8:	mov    rcx,rbp
   140007edb:	call   QWORD PTR [rip+0x12df]        # 0x1400091c0
   140007ee1:	mov    rcx,rdi
   140007ee4:	call   QWORD PTR [rip+0x12d6]        # 0x1400091c0
   140007eea:	mov    eax,0x8007000e
   140007eef:	jmp    0x140007f1f
   140007ef1:	mov    QWORD PTR [r13+0x0],rcx
   140007ef5:	jmp    0x140007f03
   140007ef7:	mov    eax,DWORD PTR [rbx]
   140007ef9:	mov    DWORD PTR [rcx],eax
   140007efb:	lea    rcx,[rcx+0x4]
   140007eff:	mov    rbx,QWORD PTR [rbx+0x8]
   140007f03:	test   rbx,rbx
   140007f06:	jne    0x140007ef7
   140007f08:	mov    rcx,rbp
   140007f0b:	call   QWORD PTR [rip+0x12af]        # 0x1400091c0
   140007f11:	mov    rcx,rdi
   140007f14:	call   QWORD PTR [rip+0x12a6]        # 0x1400091c0
   140007f1a:	xor    eax,eax
   140007f1c:	mov    DWORD PTR [r15],esi
   140007f1f:	mov    rbx,QWORD PTR [rsp+0x50]
   140007f24:	mov    rbp,QWORD PTR [rsp+0x58]
   140007f29:	mov    rsi,QWORD PTR [rsp+0x60]
   140007f2e:	add    rsp,0x20
   140007f32:	pop    r15
   140007f34:	pop    r14
   140007f36:	pop    r13
   140007f38:	pop    r12
   140007f3a:	pop    rdi
   140007f3b:	ret    
   140007f3c:	int3   
   140007f3d:	int3   
   140007f3e:	int3   
   140007f3f:	int3   
   140007f40:	int3   
   140007f41:	int3   
   140007f42:	int3   
   140007f43:	int3   
   140007f44:	rex push rbx
   140007f46:	sub    rsp,0x20
   140007f4a:	xor    r10d,r10d
   140007f4d:	xor    ebx,ebx
   140007f4f:	xor    r11d,r11d
   140007f52:	test   rcx,rcx
   140007f55:	je     0x140007fdf
   140007f5b:	dec    rcx
   140007f5e:	jmp    0x140007f71
   140007f60:	test   r8d,r8d
   140007f63:	je     0x140007fb9
   140007f65:	mov    r11d,DWORD PTR [r9]
   140007f68:	inc    ebx
   140007f6a:	add    r9,0x4
   140007f6e:	dec    r8d
   140007f71:	test   r11d,r11d
   140007f74:	je     0x140007f60
   140007f76:	mov    eax,DWORD PTR [rdx]
   140007f78:	dec    r11d
   140007f7b:	imul   eax,ebx
   140007f7e:	add    rdx,0x4
   140007f82:	add    r10d,eax
   140007f85:	test   rcx,rcx
   140007f88:	jne    0x140007f5b
   140007f8a:	cmp    r10d,0x7fffffff
   140007f91:	jbe    0x140007fdf
   140007f93:	mov    ecx,0x2
   140007f98:	call   0x140008dc8
   140007f9d:	mov    rcx,rax
   140007fa0:	lea    rdx,[rip+0x2431]        # 0x14000a3d8
   140007fa7:	call   QWORD PTR [rip+0x128b]        # 0x140009238
   140007fad:	mov    ecx,0x1
   140007fb2:	call   QWORD PTR [rip+0x1210]        # 0x1400091c8
   140007fb8:	int3   
   140007fb9:	mov    ecx,0x2
   140007fbe:	call   0x140008dc8
   140007fc3:	mov    rcx,rax
   140007fc6:	lea    rdx,[rip+0x23db]        # 0x14000a3a8
   140007fcd:	call   QWORD PTR [rip+0x1265]        # 0x140009238
   140007fd3:	mov    ecx,0x1
   140007fd8:	call   QWORD PTR [rip+0x11ea]        # 0x1400091c8
   140007fde:	int3   
   140007fdf:	mov    eax,r10d
   140007fe2:	add    rsp,0x20
   140007fe6:	pop    rbx
   140007fe7:	ret    
   140007fe8:	int3   
   140007fe9:	int3   
   140007fea:	int3   
   140007feb:	int3   
   140007fec:	int3   
   140007fed:	int3   
   140007fee:	int3   
   140007fef:	int3   
   140007ff0:	xor    r10d,r10d
   140007ff3:	xor    r9d,r9d
   140007ff6:	jmp    0x140008005
   140007ff8:	sub    rcx,rax
   140007ffb:	lea    rdx,[rdx+0x4]
   140007fff:	add    r9,rax
   140008002:	inc    r10d
   140008005:	mov    eax,DWORD PTR [rdx]
   140008007:	shl    r9,0x8
   14000800b:	cmp    rcx,rax
   14000800e:	jae    0x140007ff8
   140008010:	inc    r10d
   140008013:	add    r9,rcx
   140008016:	movsxd rax,r10d
   140008019:	add    r8,rax
   14000801c:	mov    eax,r10d
   14000801f:	test   r10d,r10d
   140008022:	je     0x140008033
   140008024:	dec    r8
   140008027:	mov    BYTE PTR [r8],r9b
   14000802a:	shr    r9,0x8
   14000802e:	sub    eax,0x1
   140008031:	jne    0x140008024
   140008033:	mov    eax,r10d
   140008036:	ret    
   140008037:	int3   
   140008038:	int3   
   140008039:	int3   
   14000803a:	int3   
   14000803b:	int3   
   14000803c:	int3   
   14000803d:	int3   
   14000803e:	int3   
   14000803f:	int3   
   140008040:	mov    QWORD PTR [rsp+0x20],r9
   140008045:	mov    QWORD PTR [rsp+0x18],r8
   14000804a:	mov    QWORD PTR [rsp+0x8],rcx
   14000804f:	push   rbx
   140008050:	push   rbp
   140008051:	push   rsi
   140008052:	push   rdi
   140008053:	push   r12
   140008055:	push   r13
   140008057:	push   r14
   140008059:	push   r15
   14000805b:	sub    rsp,0x38
   14000805f:	mov    r13,r8
   140008062:	mov    r15,rdx
   140008065:	mov    rdi,rcx
   140008068:	cmp    rdx,0x1
   14000806c:	ja     0x14000807b
   14000806e:	mov    rsi,rdx
   140008071:	mov    QWORD PTR [rsp+0x88],rdx
   140008079:	jmp    0x1400080d6
   14000807b:	mov    esi,0x1
   140008080:	mov    QWORD PTR [rsp+0x88],rsi
   140008088:	mov    ebp,esi
   14000808a:	cmp    rsi,rdx
   14000808d:	jae    0x1400080d6
   14000808f:	xor    r14d,r14d
   140008092:	mov    r12,rbp
   140008095:	mov    rcx,r13
   140008098:	shl    r12,0x2
   14000809c:	lea    rbx,[r12+rdi*1]
   1400080a0:	add    rdi,r14
   1400080a3:	call   QWORD PTR [rip+0x1207]        # 0x1400092b0
   1400080a9:	mov    r8,rbx
   1400080ac:	mov    rdx,rdi
   1400080af:	xor    ecx,ecx
   1400080b1:	call   r13
   1400080b4:	test   eax,eax
   1400080b6:	je     0x1400080be
   1400080b8:	inc    rsi
   1400080bb:	mov    r14,r12
   1400080be:	mov    rdi,QWORD PTR [rsp+0x80]
   1400080c6:	inc    rbp
   1400080c9:	cmp    rbp,r15
   1400080cc:	jb     0x140008092
   1400080ce:	mov    QWORD PTR [rsp+0x88],rsi
   1400080d6:	mov    ebx,0x1fffffff
   1400080db:	cmp    esi,ebx
   1400080dd:	ja     0x1400080ef
   1400080df:	mov    ecx,esi
   1400080e1:	shl    ecx,0x2
   1400080e4:	call   QWORD PTR [rip+0x10ce]        # 0x1400091b8
   1400080ea:	mov    r14,rax
   1400080ed:	jmp    0x1400080f2
   1400080ef:	xor    r14d,r14d
   1400080f2:	test   r14,r14
   1400080f5:	jne    0x140008101
   1400080f7:	mov    eax,0x8007000e
   1400080fc:	jmp    0x1400081ea
   140008101:	cmp    esi,ebx
   140008103:	ja     0x140008115
   140008105:	mov    ecx,esi
   140008107:	shl    ecx,0x2
   14000810a:	call   QWORD PTR [rip+0x10a8]        # 0x1400091b8
   140008110:	mov    rbp,rax
   140008113:	jmp    0x140008117
   140008115:	xor    ebp,ebp
   140008117:	test   rbp,rbp
   14000811a:	jne    0x140008127
   14000811c:	mov    rcx,r14
   14000811f:	call   QWORD PTR [rip+0x109b]        # 0x1400091c0
   140008125:	jmp    0x1400080f7
   140008127:	and    DWORD PTR [rbp+0x0],0x0
   14000812b:	mov    r12d,0x1
   140008131:	and    QWORD PTR [rsp+0x28],0x0
   140008137:	mov    DWORD PTR [r14],0x1
   14000813e:	cmp    r12,r15
   140008141:	jae    0x1400081c7
   140008147:	mov    rsi,QWORD PTR [rsp+0x28]
   14000814c:	xor    eax,eax
   14000814e:	mov    QWORD PTR [rsp+0x20],rax
   140008153:	mov    r13,r14
   140008156:	mov    rcx,QWORD PTR [rsp+0x90]
   14000815e:	mov    rbx,r12
   140008161:	shl    rbx,0x2
   140008165:	add    rbx,rdi
   140008168:	add    rdi,rax
   14000816b:	call   QWORD PTR [rip+0x113f]        # 0x1400092b0
   140008171:	mov    r8,rbx
   140008174:	mov    rdx,rdi
   140008177:	xor    ecx,ecx
   140008179:	call   QWORD PTR [rsp+0x90]
   140008180:	test   eax,eax
   140008182:	je     0x1400081a6
   140008184:	inc    rsi
   140008187:	mov    rax,r12
   14000818a:	shl    rax,0x2
   14000818e:	mov    QWORD PTR [rsp+0x20],rax
   140008193:	lea    r13,[r14+rsi*4]
   140008197:	mov    DWORD PTR [rbp+rsi*4+0x0],r12d
   14000819c:	mov    DWORD PTR [r13+0x0],0x1
   1400081a4:	jmp    0x1400081af
   1400081a6:	inc    DWORD PTR [r13+0x0]
   1400081aa:	mov    rax,QWORD PTR [rsp+0x20]
   1400081af:	mov    rdi,QWORD PTR [rsp+0x80]
   1400081b7:	inc    r12
   1400081ba:	cmp    r12,r15
   1400081bd:	jb     0x140008156
   1400081bf:	mov    rsi,QWORD PTR [rsp+0x88]
   1400081c7:	mov    rax,QWORD PTR [rsp+0x98]
   1400081cf:	mov    QWORD PTR [rax],r14
   1400081d2:	mov    rax,QWORD PTR [rsp+0xa0]
   1400081da:	mov    QWORD PTR [rax],rbp
   1400081dd:	mov    rax,QWORD PTR [rsp+0xa8]
   1400081e5:	mov    QWORD PTR [rax],rsi
   1400081e8:	xor    eax,eax
   1400081ea:	add    rsp,0x38
   1400081ee:	pop    r15
   1400081f0:	pop    r14
   1400081f2:	pop    r13
   1400081f4:	pop    r12
   1400081f6:	pop    rdi
   1400081f7:	pop    rsi
   1400081f8:	pop    rbp
   1400081f9:	pop    rbx
   1400081fa:	ret    
   1400081fb:	int3   
   1400081fc:	int3   
   1400081fd:	int3   
   1400081fe:	int3   
   1400081ff:	int3   
   140008200:	int3   
   140008201:	int3   
   140008202:	int3   
   140008203:	int3   
   140008204:	mov    QWORD PTR [rsp+0x8],rbx
   140008209:	mov    QWORD PTR [rsp+0x10],rsi
   14000820e:	push   rdi
   14000820f:	sub    rsp,0x20
   140008213:	mov    r9d,edx
   140008216:	mov    eax,0x7fffffff
   14000821b:	xor    edx,edx
   14000821d:	xor    ebx,ebx
   14000821f:	div    r8d
   140008222:	mov    rsi,rcx
   140008225:	cmp    eax,r9d
   140008228:	jb     0x14000826b
   14000822a:	imul   r9d,r8d
   14000822e:	mov    edi,ebx
   140008230:	test   rcx,rcx
   140008233:	je     0x14000826b
   140008235:	lea    eax,[r9-0x1]
   140008239:	cmp    eax,0x7ffffffd
   14000823e:	ja     0x140008254
   140008240:	mov    rcx,QWORD PTR [rcx]
   140008243:	mov    edx,r9d
   140008246:	call   QWORD PTR [rip+0x1034]        # 0x140009280
   14000824c:	mov    rdi,rax
   14000824f:	test   rax,rax
   140008252:	jne    0x140008262
   140008254:	cmp    QWORD PTR [rsi],rbx
   140008257:	je     0x140008262
   140008259:	mov    rcx,QWORD PTR [rsi]
   14000825c:	call   QWORD PTR [rip+0xf5e]        # 0x1400091c0
   140008262:	test   rdi,rdi
   140008265:	mov    QWORD PTR [rsi],rdi
   140008268:	setne  bl
   14000826b:	mov    rsi,QWORD PTR [rsp+0x38]
   140008270:	mov    eax,ebx
   140008272:	mov    rbx,QWORD PTR [rsp+0x30]
   140008277:	add    rsp,0x20
   14000827b:	pop    rdi
   14000827c:	ret    
   14000827d:	int3   
   14000827e:	int3   
   14000827f:	int3   
   140008280:	int3   
   140008281:	int3   
   140008282:	int3   
   140008283:	int3   
   140008284:	rex push rbx
   140008286:	sub    rsp,0x20
   14000828a:	mov    rbx,rcx
   14000828d:	call   0x140008832
   140008292:	lea    rax,[rip+0x10d7]        # 0x140009370
   140008299:	mov    QWORD PTR [rbx],rax
   14000829c:	mov    rax,rbx
   14000829f:	add    rsp,0x20
   1400082a3:	pop    rbx
   1400082a4:	ret    
   1400082a5:	int3   
   1400082a6:	int3   
   1400082a7:	int3   
   1400082a8:	int3   
   1400082a9:	int3   
   1400082aa:	int3   
   1400082ab:	int3   
   1400082ac:	rex push rbx
   1400082ae:	sub    rsp,0x20
   1400082b2:	mov    r8d,0x1
   1400082b8:	lea    rdx,[rip+0x3d41]        # 0x14000c000
   1400082bf:	mov    rbx,rcx
   1400082c2:	call   0x140008826
   1400082c7:	lea    rax,[rip+0x10a2]        # 0x140009370
   1400082ce:	mov    QWORD PTR [rbx],rax
   1400082d1:	mov    rax,rbx
   1400082d4:	add    rsp,0x20
   1400082d8:	pop    rbx
   1400082d9:	ret    
   1400082da:	int3   
   1400082db:	int3   
   1400082dc:	int3   
   1400082dd:	int3   
   1400082de:	int3   
   1400082df:	int3   
   1400082e0:	lea    rax,[rip+0x1089]        # 0x140009370
   1400082e7:	mov    QWORD PTR [rcx],rax
   1400082ea:	jmp    0x14000883e
   1400082ef:	int3   
   1400082f0:	int3   
   1400082f1:	int3   
   1400082f2:	int3   
   1400082f3:	int3   
   1400082f4:	int3   
   1400082f5:	int3   
   1400082f6:	int3   
   1400082f7:	int3   
   1400082f8:	int3   
   1400082f9:	int3   
   1400082fa:	int3   
   1400082fb:	int3   
   1400082fc:	int3   
   1400082fd:	int3   
   1400082fe:	int3   
   1400082ff:	int3   
   140008300:	mov    QWORD PTR [rsp+0x8],rbx
   140008305:	push   rdi
   140008306:	sub    rsp,0x20
   14000830a:	lea    rax,[rip+0x105f]        # 0x140009370
   140008311:	mov    ebx,edx
   140008313:	mov    QWORD PTR [rcx],rax
   140008316:	mov    rdi,rcx
   140008319:	call   0x14000883e
   14000831e:	test   bl,0x1
   140008321:	je     0x14000832b
   140008323:	mov    rcx,rdi
   140008326:	call   0x1400083ec
   14000832b:	mov    rax,rdi
   14000832e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008333:	add    rsp,0x20
   140008337:	pop    rdi
   140008338:	ret    
   140008339:	int3   
   14000833a:	int3   
   14000833b:	int3   
   14000833c:	int3   
   14000833d:	int3   
   14000833e:	int3   
   14000833f:	int3   
   140008340:	rex push rbx
   140008342:	sub    rsp,0x40
   140008346:	mov    rbx,rcx
   140008349:	jmp    0x14000835a
   14000834b:	mov    rcx,rbx
   14000834e:	call   0x14000885c
   140008353:	test   eax,eax
   140008355:	je     0x14000836b
   140008357:	mov    rcx,rbx
   14000835a:	call   QWORD PTR [rip+0xe58]        # 0x1400091b8
   140008360:	test   rax,rax
   140008363:	je     0x14000834b
   140008365:	add    rsp,0x40
   140008369:	pop    rbx
   14000836a:	ret    
   14000836b:	mov    eax,DWORD PTR [rip+0x3e67]        # 0x14000c1d8
   140008371:	test   al,0x1
   140008373:	jne    0x140008396
   140008375:	or     eax,0x1
   140008378:	lea    rcx,[rip+0x3e41]        # 0x14000c1c0
   14000837f:	mov    DWORD PTR [rip+0x3e53],eax        # 0x14000c1d8
   140008385:	call   0x1400082ac
   14000838a:	lea    rcx,[rip+0xc1f]        # 0x140008fb0
   140008391:	call   0x140008808
   140008396:	lea    rdx,[rip+0x3e23]        # 0x14000c1c0
   14000839d:	lea    rcx,[rsp+0x20]
   1400083a2:	call   0x140008284
   1400083a7:	lea    rdx,[rip+0x28b2]        # 0x14000ac60
   1400083ae:	lea    rcx,[rsp+0x20]
   1400083b3:	call   0x140008868
   1400083b8:	int3   
   1400083b9:	int3   
   1400083ba:	int3   
   1400083bb:	int3   
   1400083bc:	int3   
   1400083bd:	int3   
   1400083be:	int3   
   1400083bf:	int3   
   1400083c0:	sub    rsp,0x48
   1400083c4:	mov    rdx,rcx
   1400083c7:	lea    rcx,[rsp+0x20]
   1400083cc:	call   0x140008284
   1400083d1:	lea    rdx,[rip+0x2888]        # 0x14000ac60
   1400083d8:	lea    rcx,[rsp+0x20]
   1400083dd:	call   0x140008868
   1400083e2:	int3   
   1400083e3:	int3   
   1400083e4:	int3   
   1400083e5:	int3   
   1400083e6:	int3   
   1400083e7:	int3   
   1400083e8:	int3   
   1400083e9:	int3   
   1400083ea:	int3   
   1400083eb:	int3   
   1400083ec:	rex.W jmp QWORD PTR [rip+0xdcd]        # 0x1400091c0
   1400083f3:	int3   
   1400083f4:	int3   
   1400083f5:	int3   
   1400083f6:	int3   
   1400083f7:	int3   
   1400083f8:	int3   
   1400083f9:	int3   
   1400083fa:	int3   
   1400083fb:	int3   
   1400083fc:	int3   
   1400083fd:	int3   
   1400083fe:	int3   
   1400083ff:	int3   
   140008400:	sub    rsp,0x28
   140008404:	mov    eax,0x5a4d
   140008409:	cmp    WORD PTR [rip+0xffffffffffff7bf0],ax        # 0x140000000
   140008410:	je     0x140008416
   140008412:	xor    eax,eax
   140008414:	jmp    0x140008465
   140008416:	movsxd rcx,DWORD PTR [rip+0xffffffffffff7c1f]        # 0x14000003c
   14000841d:	lea    rax,[rip+0xffffffffffff7bdc]        # 0x140000000
   140008424:	add    rcx,rax
   140008427:	cmp    DWORD PTR [rcx],0x4550
   14000842d:	jne    0x140008412
   14000842f:	movzx  eax,WORD PTR [rcx+0x18]
   140008433:	cmp    eax,0x10b
   140008438:	je     0x140008454
   14000843a:	cmp    eax,0x20b
   14000843f:	jne    0x140008412
   140008441:	xor    eax,eax
   140008443:	cmp    DWORD PTR [rcx+0x84],0xe
   14000844a:	jbe    0x140008465
   14000844c:	cmp    DWORD PTR [rcx+0xf8],eax
   140008452:	jmp    0x140008462
   140008454:	xor    eax,eax
   140008456:	cmp    DWORD PTR [rcx+0x74],0xe
   14000845a:	jbe    0x140008465
   14000845c:	cmp    DWORD PTR [rcx+0xe8],eax
   140008462:	setne  al
   140008465:	mov    ecx,0x1
   14000846a:	mov    DWORD PTR [rip+0x3d90],eax        # 0x14000c200
   140008470:	call   0x140008988
   140008475:	mov    ecx,eax
   140008477:	call   QWORD PTR [rip+0xceb]        # 0x140009168
   14000847d:	mov    rcx,QWORD PTR [rip+0xcb4]        # 0x140009138
   140008484:	or     rax,0xffffffffffffffff
   140008488:	mov    QWORD PTR [rip+0x4321],rax        # 0x14000c7b0
   14000848f:	mov    QWORD PTR [rip+0x4322],rax        # 0x14000c7b8
   140008496:	mov    eax,DWORD PTR [rip+0x3d78]        # 0x14000c214
   14000849c:	mov    DWORD PTR [rcx],eax
   14000849e:	mov    rcx,QWORD PTR [rip+0xc5b]        # 0x140009100
   1400084a5:	mov    eax,DWORD PTR [rip+0x3d5d]        # 0x14000c208
   1400084ab:	mov    DWORD PTR [rcx],eax
   1400084ad:	call   0x1400089e0
   1400084b2:	cmp    DWORD PTR [rip+0x3b57],0x0        # 0x14000c010
   1400084b9:	jne    0x1400084c8
   1400084bb:	lea    rcx,[rip+0x51e]        # 0x1400089e0
   1400084c2:	call   QWORD PTR [rip+0xc88]        # 0x140009150
   1400084c8:	xor    eax,eax
   1400084ca:	add    rsp,0x28
   1400084ce:	ret    
   1400084cf:	int3   
   1400084d0:	int3   
   1400084d1:	int3   
   1400084d2:	int3   
   1400084d3:	int3   
   1400084d4:	int3   
   1400084d5:	int3   
   1400084d6:	int3   
   1400084d7:	int3   
   1400084d8:	int3   
   1400084d9:	int3   
   1400084da:	int3   
   1400084db:	int3   
   1400084dc:	int3   
   1400084dd:	int3   
   1400084de:	int3   
   1400084df:	int3   
   1400084e0:	sub    rsp,0x38
   1400084e4:	mov    eax,DWORD PTR [rip+0x3d26]        # 0x14000c210
   1400084ea:	lea    r8,[rip+0x3d07]        # 0x14000c1f8
   1400084f1:	mov    r9d,DWORD PTR [rip+0x3d14]        # 0x14000c20c
   1400084f8:	lea    rdx,[rip+0x3cf1]        # 0x14000c1f0
   1400084ff:	mov    DWORD PTR [rip+0x3cff],eax        # 0x14000c204
   140008505:	lea    rcx,[rip+0x3cdc]        # 0x14000c1e8
   14000850c:	lea    rax,[rip+0x3cf1]        # 0x14000c204
   140008513:	mov    QWORD PTR [rsp+0x20],rax
   140008518:	call   QWORD PTR [rip+0xc52]        # 0x140009170
   14000851e:	mov    DWORD PTR [rip+0x3cc8],eax        # 0x14000c1ec
   140008524:	add    rsp,0x38
   140008528:	ret    
   140008529:	int3   
   14000852a:	int3   
   14000852b:	int3   
   14000852c:	int3   
   14000852d:	int3   
   14000852e:	int3   
   14000852f:	int3   
   140008530:	mov    rax,rsp
   140008533:	mov    QWORD PTR [rax+0x8],rbx
   140008537:	mov    QWORD PTR [rax+0x10],rsi
   14000853b:	mov    QWORD PTR [rax+0x18],rdi
   14000853f:	mov    QWORD PTR [rax+0x20],r12
   140008543:	push   r14
   140008545:	sub    rsp,0x30
   140008549:	mov    rax,QWORD PTR gs:0x30
   140008552:	mov    rbx,QWORD PTR [rax+0x8]
   140008556:	xor    r14d,r14d
   140008559:	xor    eax,eax
   14000855b:	lock cmpxchg QWORD PTR [rip+0x423c],rbx        # 0x14000c7a0
   140008564:	je     0x140008582
   140008566:	cmp    rax,rbx
   140008569:	jne    0x140008575
   14000856b:	mov    ebx,0x1
   140008570:	mov    r14d,ebx
   140008573:	jmp    0x140008587
   140008575:	mov    ecx,0x3e8
   14000857a:	call   QWORD PTR [rip+0xb50]        # 0x1400090d0
   140008580:	jmp    0x140008559
   140008582:	mov    ebx,0x1
   140008587:	mov    eax,DWORD PTR [rip+0x421b]        # 0x14000c7a8
   14000858d:	cmp    eax,ebx
   14000858f:	jne    0x14000859d
   140008591:	mov    ecx,0x1f
   140008596:	call   0x1400089d4
   14000859b:	jmp    0x140008606
   14000859d:	mov    eax,DWORD PTR [rip+0x4205]        # 0x14000c7a8
   1400085a3:	test   eax,eax
   1400085a5:	jne    0x140008600
   1400085a7:	mov    DWORD PTR [rip+0x41fb],ebx        # 0x14000c7a8
   1400085ad:	lea    r12,[rip+0xd3c]        # 0x1400092f0
   1400085b4:	lea    rdi,[rip+0xd1d]        # 0x1400092d8
   1400085bb:	mov    QWORD PTR [rsp+0x28],rdi
   1400085c0:	mov    DWORD PTR [rsp+0x20],eax
   1400085c4:	cmp    rdi,r12
   1400085c7:	jae    0x1400085f2
   1400085c9:	test   eax,eax
   1400085cb:	jne    0x1400085f6
   1400085cd:	mov    rsi,QWORD PTR [rdi]
   1400085d0:	test   rsi,rsi
   1400085d3:	je     0x1400085e7
   1400085d5:	mov    rcx,rsi
   1400085d8:	mov    rax,QWORD PTR [rip+0xcd1]        # 0x1400092b0
   1400085df:	call   rax
   1400085e1:	call   rsi
   1400085e3:	mov    DWORD PTR [rsp+0x20],eax
   1400085e7:	add    rdi,0x8
   1400085eb:	mov    QWORD PTR [rsp+0x28],rdi
   1400085f0:	jmp    0x1400085c4
   1400085f2:	test   eax,eax
   1400085f4:	je     0x140008606
   1400085f6:	mov    eax,0xff
   1400085fb:	jmp    0x1400086e7
   140008600:	mov    DWORD PTR [rip+0x3bda],ebx        # 0x14000c1e0
   140008606:	mov    eax,DWORD PTR [rip+0x419c]        # 0x14000c7a8
   14000860c:	cmp    eax,ebx
   14000860e:	jne    0x14000862d
   140008610:	lea    rdx,[rip+0xcb9]        # 0x1400092d0
   140008617:	lea    rcx,[rip+0xca2]        # 0x1400092c0
   14000861e:	call   0x140008baa
   140008623:	mov    DWORD PTR [rip+0x417b],0x2        # 0x14000c7a8
   14000862d:	test   r14d,r14d
   140008630:	jne    0x14000863b
   140008632:	xor    eax,eax
   140008634:	xchg   QWORD PTR [rip+0x4165],rax        # 0x14000c7a0
   14000863b:	cmp    QWORD PTR [rip+0x417d],0x0        # 0x14000c7c0
   140008643:	je     0x140008673
   140008645:	lea    rcx,[rip+0x4174]        # 0x14000c7c0
   14000864c:	call   0x140008a40
   140008651:	test   eax,eax
   140008653:	je     0x140008673
   140008655:	mov    rbx,QWORD PTR [rip+0x4164]        # 0x14000c7c0
   14000865c:	mov    rcx,rbx
   14000865f:	mov    rax,QWORD PTR [rip+0xc4a]        # 0x1400092b0
   140008666:	call   rax
   140008668:	xor    r8d,r8d
   14000866b:	lea    edx,[r8+0x2]
   14000866f:	xor    ecx,ecx
   140008671:	call   rbx
   140008673:	mov    r8,QWORD PTR [rip+0x3b7e]        # 0x14000c1f8
   14000867a:	mov    rdx,QWORD PTR [rip+0x3b6f]        # 0x14000c1f0
   140008681:	mov    ecx,DWORD PTR [rip+0x3b61]        # 0x14000c1e8
   140008687:	call   0x140001d18
   14000868c:	mov    DWORD PTR [rip+0x3b4a],eax        # 0x14000c1dc
   140008692:	cmp    DWORD PTR [rip+0x3b67],0x0        # 0x14000c200
   140008699:	jne    0x1400086a3
   14000869b:	mov    ecx,eax
   14000869d:	call   QWORD PTR [rip+0xb25]        # 0x1400091c8
   1400086a3:	cmp    DWORD PTR [rip+0x3b36],0x0        # 0x14000c1e0
   1400086aa:	jne    0x1400086b8
   1400086ac:	call   QWORD PTR [rip+0xaa6]        # 0x140009158
   1400086b2:	mov    eax,DWORD PTR [rip+0x3b24]        # 0x14000c1dc
   1400086b8:	jmp    0x1400086e7
   1400086ba:	mov    DWORD PTR [rip+0x3b1c],eax        # 0x14000c1dc
   1400086c0:	cmp    DWORD PTR [rip+0x3b39],0x0        # 0x14000c200
   1400086c7:	jne    0x1400086d2
   1400086c9:	mov    ecx,eax
   1400086cb:	call   QWORD PTR [rip+0xa8f]        # 0x140009160
   1400086d1:	int3   
   1400086d2:	cmp    DWORD PTR [rip+0x3b07],0x0        # 0x14000c1e0
   1400086d9:	jne    0x1400086e7
   1400086db:	call   QWORD PTR [rip+0xa77]        # 0x140009158
   1400086e1:	mov    eax,DWORD PTR [rip+0x3af5]        # 0x14000c1dc
   1400086e7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400086ec:	mov    rsi,QWORD PTR [rsp+0x48]
   1400086f1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400086f6:	mov    r12,QWORD PTR [rsp+0x58]
   1400086fb:	add    rsp,0x30
   1400086ff:	pop    r14
   140008701:	ret    
   140008702:	int3   
   140008703:	int3   
   140008704:	int3   
   140008705:	int3   
   140008706:	int3   
   140008707:	int3   
   140008708:	int3   
   140008709:	int3   
   14000870a:	int3   
   14000870b:	int3   
   14000870c:	int3   
   14000870d:	int3   
   14000870e:	int3   
   14000870f:	int3   
   140008710:	sub    rsp,0x28
   140008714:	call   0x140008ad4
   140008719:	add    rsp,0x28
   14000871d:	jmp    0x140008530
   140008722:	int3   
   140008723:	int3   
   140008724:	int3   
   140008725:	int3   
   140008726:	int3   
   140008727:	int3   
   140008728:	int3   
   140008729:	int3   
   14000872a:	int3   
   14000872b:	int3   
   14000872c:	int3   
   14000872d:	int3   
   14000872e:	int3   
   14000872f:	int3   
   140008730:	int3   
   140008731:	int3   
   140008732:	int3   
   140008733:	int3   
   140008734:	int3   
   140008735:	int3   
   140008736:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008740:	cmp    rcx,QWORD PTR [rip+0x38d1]        # 0x14000c018
   140008747:	jne    0x140008759
   140008749:	rol    rcx,0x10
   14000874d:	test   cx,0xffff
   140008752:	jne    0x140008755
   140008754:	ret    
   140008755:	ror    rcx,0x10
   140008759:	jmp    0x140008c20
   14000875e:	int3   
   14000875f:	int3   
   140008760:	int3   
   140008761:	int3   
   140008762:	int3   
   140008763:	int3   
   140008764:	mov    QWORD PTR [rsp+0x8],rbx
   140008769:	push   rdi
   14000876a:	sub    rsp,0x20
   14000876e:	mov    rdi,rcx
   140008771:	mov    rax,QWORD PTR [rip+0x4040]        # 0x14000c7b8
   140008778:	mov    QWORD PTR [rsp+0x38],rax
   14000877d:	cmp    rax,0xffffffffffffffff
   140008781:	jne    0x14000879a
   140008783:	mov    rbx,QWORD PTR [rip+0x996]        # 0x140009120
   14000878a:	mov    rcx,rbx
   14000878d:	call   QWORD PTR [rip+0xb1d]        # 0x1400092b0
   140008793:	mov    rcx,rdi
   140008796:	call   rbx
   140008798:	jmp    0x1400087f7
   14000879a:	mov    ecx,0x8
   14000879f:	call   0x140008d98
   1400087a4:	nop
   1400087a5:	mov    rax,QWORD PTR [rip+0x400c]        # 0x14000c7b8
   1400087ac:	mov    QWORD PTR [rsp+0x38],rax
   1400087b1:	mov    rax,QWORD PTR [rip+0x3ff8]        # 0x14000c7b0
   1400087b8:	mov    QWORD PTR [rsp+0x40],rax
   1400087bd:	lea    r8,[rsp+0x40]
   1400087c2:	lea    rdx,[rsp+0x38]
   1400087c7:	mov    rcx,rdi
   1400087ca:	call   0x140008db0
   1400087cf:	mov    rbx,rax
   1400087d2:	mov    rdx,QWORD PTR [rsp+0x38]
   1400087d7:	mov    QWORD PTR [rip+0x3fda],rdx        # 0x14000c7b8
   1400087de:	mov    rdx,QWORD PTR [rsp+0x40]
   1400087e3:	mov    QWORD PTR [rip+0x3fc6],rdx        # 0x14000c7b0
   1400087ea:	mov    ecx,0x8
   1400087ef:	call   0x140008da4
   1400087f4:	mov    rax,rbx
   1400087f7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400087fc:	add    rsp,0x20
   140008800:	pop    rdi
   140008801:	ret    
   140008802:	int3   
   140008803:	int3   
   140008804:	int3   
   140008805:	int3   
   140008806:	int3   
   140008807:	int3   
   140008808:	sub    rsp,0x28
   14000880c:	call   0x140008764
   140008811:	neg    rax
   140008814:	sbb    eax,eax
   140008816:	neg    eax
   140008818:	dec    eax
   14000881a:	add    rsp,0x28
   14000881e:	ret    
   14000881f:	int3   
   140008820:	int3   
   140008821:	int3   
   140008822:	int3   
   140008823:	int3   
   140008824:	int3   
   140008825:	int3   
   140008826:	jmp    QWORD PTR [rip+0x984]        # 0x1400091b0
   14000882c:	int3   
   14000882d:	int3   
   14000882e:	int3   
   14000882f:	int3   
   140008830:	int3   
   140008831:	int3   
   140008832:	jmp    QWORD PTR [rip+0x970]        # 0x1400091a8
   140008838:	int3   
   140008839:	int3   
   14000883a:	int3   
   14000883b:	int3   
   14000883c:	int3   
   14000883d:	int3   
   14000883e:	jmp    QWORD PTR [rip+0x95c]        # 0x1400091a0
   140008844:	int3   
   140008845:	int3   
   140008846:	int3   
   140008847:	int3   
   140008848:	int3   
   140008849:	int3   
   14000884a:	int3   
   14000884b:	int3   
   14000884c:	int3   
   14000884d:	int3   
   14000884e:	int3   
   14000884f:	int3   
   140008850:	jmp    QWORD PTR [rip+0x942]        # 0x140009198
   140008856:	int3   
   140008857:	int3   
   140008858:	int3   
   140008859:	int3   
   14000885a:	int3   
   14000885b:	int3   
   14000885c:	jmp    QWORD PTR [rip+0x92e]        # 0x140009190
   140008862:	int3   
   140008863:	int3   
   140008864:	int3   
   140008865:	int3   
   140008866:	int3   
   140008867:	int3   
   140008868:	jmp    QWORD PTR [rip+0x91a]        # 0x140009188
   14000886e:	int3   
   14000886f:	int3   
   140008870:	int3   
   140008871:	int3   
   140008872:	int3   
   140008873:	int3   
   140008874:	int3   
   140008875:	int3   
   140008876:	int3   
   140008877:	int3   
   140008878:	int3   
   140008879:	int3   
   14000887a:	int3   
   14000887b:	int3   
   14000887c:	int3   
   14000887d:	int3   
   14000887e:	int3   
   14000887f:	int3   
   140008880:	mov    QWORD PTR [rsp+0x8],rbx
   140008885:	push   rdi
   140008886:	sub    rsp,0x20
   14000888a:	mov    ebx,edx
   14000888c:	mov    rdi,rcx
   14000888f:	call   QWORD PTR [rip+0x893]        # 0x140009128
   140008895:	test   bl,0x1
   140008898:	je     0x1400088a2
   14000889a:	mov    rcx,rdi
   14000889d:	call   0x1400083ec
   1400088a2:	mov    rax,rdi
   1400088a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400088aa:	add    rsp,0x20
   1400088ae:	pop    rdi
   1400088af:	ret    
   1400088b0:	int3   
   1400088b1:	int3   
   1400088b2:	int3   
   1400088b3:	int3   
   1400088b4:	int3   
   1400088b5:	int3   
   1400088b6:	int3   
   1400088b7:	int3   
   1400088b8:	int3   
   1400088b9:	int3   
   1400088ba:	int3   
   1400088bb:	int3   
   1400088bc:	int3   
   1400088bd:	int3   
   1400088be:	int3   
   1400088bf:	int3   
   1400088c0:	sub    rsp,0x28
   1400088c4:	mov    rax,QWORD PTR [rcx]
   1400088c7:	cmp    DWORD PTR [rax],0xe06d7363
   1400088cd:	jne    0x1400088f2
   1400088cf:	cmp    DWORD PTR [rax+0x18],0x4
   1400088d3:	jne    0x1400088f2
   1400088d5:	mov    ecx,DWORD PTR [rax+0x20]
   1400088d8:	lea    eax,[rcx-0x19930520]
   1400088de:	cmp    eax,0x2
   1400088e1:	jbe    0x1400088eb
   1400088e3:	cmp    ecx,0x1994000
   1400088e9:	jne    0x1400088f2
   1400088eb:	call   QWORD PTR [rip+0x83f]        # 0x140009130
   1400088f1:	int3   
   1400088f2:	xor    eax,eax
   1400088f4:	add    rsp,0x28
   1400088f8:	ret    
   1400088f9:	int3   
   1400088fa:	int3   
   1400088fb:	int3   
   1400088fc:	int3   
   1400088fd:	int3   
   1400088fe:	int3   
   1400088ff:	int3   
   140008900:	sub    rsp,0x28
   140008904:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400088c0
   14000890b:	call   QWORD PTR [rip+0x7b7]        # 0x1400090c8
   140008911:	xor    eax,eax
   140008913:	add    rsp,0x28
   140008917:	ret    
   140008918:	int3   
   140008919:	int3   
   14000891a:	int3   
   14000891b:	int3   
   14000891c:	int3   
   14000891d:	int3   
   14000891e:	jmp    QWORD PTR [rip+0x85c]        # 0x140009180
   140008924:	int3   
   140008925:	int3   
   140008926:	int3   
   140008927:	int3   
   140008928:	int3   
   140008929:	int3   
   14000892a:	int3   
   14000892b:	int3   
   14000892c:	sub    rsp,0x18
   140008930:	xor    edx,edx
   140008932:	lea    rax,[rcx-0x1]
   140008936:	cmp    rax,0xfffffffffffffffd
   14000893a:	ja     0x140008978
   14000893c:	mov    eax,0x5a4d
   140008941:	cmp    WORD PTR [rcx],ax
   140008944:	jne    0x140008970
   140008946:	cmp    DWORD PTR [rcx+0x3c],edx
   140008949:	jl     0x140008970
   14000894b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140008952:	jae    0x140008970
   140008954:	movsxd rax,DWORD PTR [rcx+0x3c]
   140008958:	add    rax,rcx
   14000895b:	mov    QWORD PTR [rsp],rax
   14000895f:	cmp    DWORD PTR [rax],0x4550
   140008965:	cmovne rax,rdx
   140008969:	mov    rdx,rax
   14000896c:	mov    QWORD PTR [rsp],rax
   140008970:	jmp    0x140008978
   140008972:	xor    edx,edx
   140008974:	mov    QWORD PTR [rsp],rdx
   140008978:	mov    rax,rdx
   14000897b:	add    rsp,0x18
   14000897f:	ret    
   140008980:	int3   
   140008981:	int3   
   140008982:	int3   
   140008983:	int3   
   140008984:	int3   
   140008985:	int3   
   140008986:	int3   
   140008987:	int3   
   140008988:	rex push rbx
   14000898a:	sub    rsp,0x20
   14000898e:	mov    ebx,ecx
   140008990:	xor    ecx,ecx
   140008992:	call   QWORD PTR [rip+0x728]        # 0x1400090c0
   140008998:	test   rax,rax
   14000899b:	je     0x1400089c5
   14000899d:	mov    rcx,rax
   1400089a0:	call   0x14000892c
   1400089a5:	test   rax,rax
   1400089a8:	je     0x1400089c5
   1400089aa:	mov    ecx,0x2
   1400089af:	cmp    WORD PTR [rax+0x5c],cx
   1400089b3:	jne    0x1400089b9
   1400089b5:	mov    eax,ecx
   1400089b7:	jmp    0x1400089c7
   1400089b9:	cmp    WORD PTR [rax+0x5c],0x3
   1400089be:	mov    eax,0x1
   1400089c3:	je     0x1400089c7
   1400089c5:	mov    eax,ebx
   1400089c7:	add    rsp,0x20
   1400089cb:	pop    rbx
   1400089cc:	ret    
   1400089cd:	int3   
   1400089ce:	int3   
   1400089cf:	int3   
   1400089d0:	int3   
   1400089d1:	int3   
   1400089d2:	int3   
   1400089d3:	int3   
   1400089d4:	jmp    QWORD PTR [rip+0x79e]        # 0x140009178
   1400089da:	int3   
   1400089db:	int3   
   1400089dc:	int3   
   1400089dd:	int3   
   1400089de:	int3   
   1400089df:	int3   
   1400089e0:	xor    eax,eax
   1400089e2:	ret    
   1400089e3:	int3   
   1400089e4:	int3   
   1400089e5:	int3   
   1400089e6:	int3   
   1400089e7:	int3   
   1400089e8:	int3   
   1400089e9:	int3   
   1400089ea:	int3   
   1400089eb:	int3   
   1400089ec:	int3   
   1400089ed:	int3   
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400089f4:	xor    r9d,r9d
   1400089f7:	add    r8,rcx
   1400089fa:	mov    r10,rdx
   1400089fd:	movzx  eax,WORD PTR [r8+0x14]
   140008a02:	movzx  r11d,WORD PTR [r8+0x6]
   140008a07:	add    rax,0x18
   140008a0b:	add    rax,r8
   140008a0e:	test   r11d,r11d
   140008a11:	je     0x140008a31
   140008a13:	mov    edx,DWORD PTR [rax+0xc]
   140008a16:	cmp    r10,rdx
   140008a19:	jb     0x140008a25
   140008a1b:	mov    ecx,DWORD PTR [rax+0x8]
   140008a1e:	add    ecx,edx
   140008a20:	cmp    r10,rcx
   140008a23:	jb     0x140008a33
   140008a25:	inc    r9d
   140008a28:	add    rax,0x28
   140008a2c:	cmp    r9d,r11d
   140008a2f:	jb     0x140008a13
   140008a31:	xor    eax,eax
   140008a33:	ret    
   140008a34:	int3   
   140008a35:	int3   
   140008a36:	int3   
   140008a37:	int3   
   140008a38:	int3   
   140008a39:	int3   
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	int3   
   140008a3d:	int3   
   140008a3e:	int3   
   140008a3f:	int3   
   140008a40:	mov    QWORD PTR [rsp+0x8],rbx
   140008a45:	push   rdi
   140008a46:	sub    rsp,0x20
   140008a4a:	mov    rbx,rcx
   140008a4d:	lea    rdi,[rip+0xffffffffffff75ac]        # 0x140000000
   140008a54:	mov    rcx,rdi
   140008a57:	call   0x140008aa0
   140008a5c:	test   eax,eax
   140008a5e:	je     0x140008a82
   140008a60:	sub    rbx,rdi
   140008a63:	mov    rdx,rbx
   140008a66:	mov    rcx,rdi
   140008a69:	call   0x1400089f0
   140008a6e:	test   rax,rax
   140008a71:	je     0x140008a82
   140008a73:	mov    eax,DWORD PTR [rax+0x24]
   140008a76:	shr    eax,0x1f
   140008a79:	not    eax
   140008a7b:	and    eax,0x1
   140008a7e:	jmp    0x140008a82
   140008a80:	xor    eax,eax
   140008a82:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a87:	add    rsp,0x20
   140008a8b:	pop    rdi
   140008a8c:	ret    
   140008a8d:	int3   
   140008a8e:	int3   
   140008a8f:	int3   
   140008a90:	int3   
   140008a91:	int3   
   140008a92:	int3   
   140008a93:	int3   
   140008a94:	int3   
   140008a95:	int3   
   140008a96:	int3   
   140008a97:	int3   
   140008a98:	int3   
   140008a99:	int3   
   140008a9a:	int3   
   140008a9b:	int3   
   140008a9c:	int3   
   140008a9d:	int3   
   140008a9e:	int3   
   140008a9f:	int3   
   140008aa0:	mov    rax,rcx
   140008aa3:	mov    ecx,0x5a4d
   140008aa8:	cmp    WORD PTR [rax],cx
   140008aab:	je     0x140008ab0
   140008aad:	xor    eax,eax
   140008aaf:	ret    
   140008ab0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140008ab4:	add    rcx,rax
   140008ab7:	xor    eax,eax
   140008ab9:	cmp    DWORD PTR [rcx],0x4550
   140008abf:	jne    0x140008acd
   140008ac1:	mov    edx,0x20b
   140008ac6:	cmp    WORD PTR [rcx+0x18],dx
   140008aca:	sete   al
   140008acd:	ret    
   140008ace:	int3   
   140008acf:	int3   
   140008ad0:	int3   
   140008ad1:	int3   
   140008ad2:	int3   
   140008ad3:	int3   
   140008ad4:	mov    QWORD PTR [rsp+0x20],rbx
   140008ad9:	push   rbp
   140008ada:	mov    rbp,rsp
   140008add:	sub    rsp,0x20
   140008ae1:	and    QWORD PTR [rbp+0x18],0x0
   140008ae6:	movabs rbx,0x2b992ddfa232
   140008af0:	mov    rax,QWORD PTR [rip+0x3521]        # 0x14000c018
   140008af7:	cmp    rax,rbx
   140008afa:	jne    0x140008b8f
   140008b00:	lea    rcx,[rbp+0x18]
   140008b04:	call   QWORD PTR [rip+0x596]        # 0x1400090a0
   140008b0a:	mov    rax,QWORD PTR [rbp+0x18]
   140008b0e:	mov    QWORD PTR [rbp+0x10],rax
   140008b12:	call   QWORD PTR [rip+0x598]        # 0x1400090b0
   140008b18:	mov    eax,eax
   140008b1a:	xor    QWORD PTR [rbp+0x10],rax
   140008b1e:	call   QWORD PTR [rip+0x584]        # 0x1400090a8
   140008b24:	mov    eax,eax
   140008b26:	xor    QWORD PTR [rbp+0x10],rax
   140008b2a:	call   QWORD PTR [rip+0x568]        # 0x140009098
   140008b30:	mov    eax,eax
   140008b32:	shl    rax,0x18
   140008b36:	xor    QWORD PTR [rbp+0x10],rax
   140008b3a:	call   QWORD PTR [rip+0x558]        # 0x140009098
   140008b40:	mov    eax,eax
   140008b42:	lea    rcx,[rbp+0x10]
   140008b46:	xor    rax,QWORD PTR [rbp+0x10]
   140008b4a:	xor    rax,rcx
   140008b4d:	lea    rcx,[rbp+0x20]
   140008b51:	mov    QWORD PTR [rbp+0x10],rax
   140008b55:	call   QWORD PTR [rip+0x55d]        # 0x1400090b8
   140008b5b:	mov    eax,DWORD PTR [rbp+0x20]
   140008b5e:	movabs rcx,0xffffffffffff
   140008b68:	shl    rax,0x20
   140008b6c:	xor    rax,QWORD PTR [rbp+0x20]
   140008b70:	xor    rax,QWORD PTR [rbp+0x10]
   140008b74:	and    rax,rcx
   140008b77:	movabs rcx,0x2b992ddfa233
   140008b81:	cmp    rax,rbx
   140008b84:	cmove  rax,rcx
   140008b88:	mov    QWORD PTR [rip+0x3489],rax        # 0x14000c018
   140008b8f:	mov    rbx,QWORD PTR [rsp+0x48]
   140008b94:	not    rax
   140008b97:	mov    QWORD PTR [rip+0x3482],rax        # 0x14000c020
   140008b9e:	add    rsp,0x20
   140008ba2:	pop    rbp
   140008ba3:	ret    
   140008ba4:	int3   
   140008ba5:	int3   
   140008ba6:	int3   
   140008ba7:	int3   
   140008ba8:	int3   
   140008ba9:	int3   
   140008baa:	jmp    QWORD PTR [rip+0x598]        # 0x140009148
   140008bb0:	int3   
   140008bb1:	int3   
   140008bb2:	int3   
   140008bb3:	int3   
   140008bb4:	int3   
   140008bb5:	int3   
   140008bb6:	jmp    QWORD PTR [rip+0x584]        # 0x140009140
   140008bbc:	int3   
   140008bbd:	int3   
   140008bbe:	int3   
   140008bbf:	int3   
   140008bc0:	int3   
   140008bc1:	int3   
   140008bc2:	int3   
   140008bc3:	int3   
   140008bc4:	int3   
   140008bc5:	int3   
   140008bc6:	int3   
   140008bc7:	int3   
   140008bc8:	int3   
   140008bc9:	int3   
   140008bca:	int3   
   140008bcb:	int3   
   140008bcc:	int3   
   140008bcd:	int3   
   140008bce:	int3   
   140008bcf:	int3   
   140008bd0:	ret    0x0
   140008bd3:	int3   
   140008bd4:	int3   
   140008bd5:	int3   
   140008bd6:	int3   
   140008bd7:	int3   
   140008bd8:	int3   
   140008bd9:	int3   
   140008bda:	int3   
   140008bdb:	int3   
   140008bdc:	rex push rbx
   140008bde:	sub    rsp,0x20
   140008be2:	mov    rbx,rcx
   140008be5:	xor    ecx,ecx
   140008be7:	call   QWORD PTR [rip+0x4db]        # 0x1400090c8
   140008bed:	mov    rcx,rbx
   140008bf0:	call   QWORD PTR [rip+0x482]        # 0x140009078
   140008bf6:	call   QWORD PTR [rip+0x474]        # 0x140009070
   140008bfc:	mov    rcx,rax
   140008bff:	mov    edx,0xc0000409
   140008c04:	add    rsp,0x20
   140008c08:	pop    rbx
   140008c09:	rex.W jmp QWORD PTR [rip+0x458]        # 0x140009068
   140008c10:	int3   
   140008c11:	int3   
   140008c12:	int3   
   140008c13:	int3   
   140008c14:	int3   
   140008c15:	int3   
   140008c16:	int3   
   140008c17:	int3   
   140008c18:	int3   
   140008c19:	int3   
   140008c1a:	int3   
   140008c1b:	int3   
   140008c1c:	int3   
   140008c1d:	int3   
   140008c1e:	int3   
   140008c1f:	int3   
   140008c20:	mov    QWORD PTR [rsp+0x8],rcx
   140008c25:	sub    rsp,0x88
   140008c2c:	lea    rcx,[rip+0x368d]        # 0x14000c2c0
   140008c33:	call   QWORD PTR [rip+0x457]        # 0x140009090
   140008c39:	mov    rax,QWORD PTR [rip+0x3778]        # 0x14000c3b8
   140008c40:	mov    QWORD PTR [rsp+0x48],rax
   140008c45:	xor    r8d,r8d
   140008c48:	lea    rdx,[rsp+0x50]
   140008c4d:	mov    rcx,QWORD PTR [rsp+0x48]
   140008c52:	call   QWORD PTR [rip+0x430]        # 0x140009088
   140008c58:	mov    QWORD PTR [rsp+0x40],rax
   140008c5d:	cmp    QWORD PTR [rsp+0x40],0x0
   140008c63:	je     0x140008ca7
   140008c65:	mov    QWORD PTR [rsp+0x38],0x0
   140008c6e:	lea    rax,[rsp+0x58]
   140008c73:	mov    QWORD PTR [rsp+0x30],rax
   140008c78:	lea    rax,[rsp+0x60]
   140008c7d:	mov    QWORD PTR [rsp+0x28],rax
   140008c82:	lea    rax,[rip+0x3637]        # 0x14000c2c0
   140008c89:	mov    QWORD PTR [rsp+0x20],rax
   140008c8e:	mov    r9,QWORD PTR [rsp+0x40]
   140008c93:	mov    r8,QWORD PTR [rsp+0x48]
   140008c98:	mov    rdx,QWORD PTR [rsp+0x50]
   140008c9d:	xor    ecx,ecx
   140008c9f:	call   QWORD PTR [rip+0x3db]        # 0x140009080
   140008ca5:	jmp    0x140008cca
   140008ca7:	mov    rax,QWORD PTR [rip+0x36aa]        # 0x14000c358
   140008cae:	mov    rax,QWORD PTR [rax]
   140008cb1:	mov    QWORD PTR [rip+0x3700],rax        # 0x14000c3b8
   140008cb8:	mov    rax,QWORD PTR [rip+0x3699]        # 0x14000c358
   140008cbf:	add    rax,0x8
   140008cc3:	mov    QWORD PTR [rip+0x368e],rax        # 0x14000c358
   140008cca:	mov    rax,QWORD PTR [rip+0x36e7]        # 0x14000c3b8
   140008cd1:	mov    QWORD PTR [rip+0x3558],rax        # 0x14000c230
   140008cd8:	mov    rax,QWORD PTR [rsp+0x90]
   140008ce0:	mov    QWORD PTR [rip+0x3659],rax        # 0x14000c340
   140008ce7:	mov    DWORD PTR [rip+0x352f],0xc0000409        # 0x14000c220
   140008cf1:	mov    DWORD PTR [rip+0x3529],0x1        # 0x14000c224
   140008cfb:	mov    DWORD PTR [rip+0x3533],0x3        # 0x14000c238
   140008d05:	mov    eax,0x8
   140008d0a:	imul   rax,rax,0x0
   140008d0e:	lea    rcx,[rip+0x352b]        # 0x14000c240
   140008d15:	mov    QWORD PTR [rcx+rax*1],0x2
   140008d1d:	mov    eax,0x8
   140008d22:	imul   rax,rax,0x1
   140008d26:	lea    rcx,[rip+0x3513]        # 0x14000c240
   140008d2d:	mov    rdx,QWORD PTR [rip+0x32e4]        # 0x14000c018
   140008d34:	mov    QWORD PTR [rcx+rax*1],rdx
   140008d38:	mov    eax,0x8
   140008d3d:	imul   rax,rax,0x2
   140008d41:	lea    rcx,[rip+0x34f8]        # 0x14000c240
   140008d48:	mov    rdx,QWORD PTR [rip+0x32d1]        # 0x14000c020
   140008d4f:	mov    QWORD PTR [rcx+rax*1],rdx
   140008d53:	mov    eax,0x8
   140008d58:	imul   rax,rax,0x0
   140008d5c:	mov    rcx,QWORD PTR [rip+0x32b5]        # 0x14000c018
   140008d63:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140008d68:	mov    eax,0x8
   140008d6d:	imul   rax,rax,0x1
   140008d71:	mov    rcx,QWORD PTR [rip+0x32a8]        # 0x14000c020
   140008d78:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140008d7d:	lea    rcx,[rip+0x60c]        # 0x140009390
   140008d84:	call   0x140008bdc
   140008d89:	add    rsp,0x88
   140008d90:	ret    
   140008d91:	int3   
   140008d92:	int3   
   140008d93:	int3   
   140008d94:	int3   
   140008d95:	int3   
   140008d96:	int3   
   140008d97:	int3   
   140008d98:	jmp    QWORD PTR [rip+0x36a]        # 0x140009108
   140008d9e:	int3   
   140008d9f:	int3   
   140008da0:	int3   
   140008da1:	int3   
   140008da2:	int3   
   140008da3:	int3   
   140008da4:	jmp    QWORD PTR [rip+0x366]        # 0x140009110
   140008daa:	int3   
   140008dab:	int3   
   140008dac:	int3   
   140008dad:	int3   
   140008dae:	int3   
   140008daf:	int3   
   140008db0:	jmp    QWORD PTR [rip+0x362]        # 0x140009118
   140008db6:	int3   
   140008db7:	int3   
   140008db8:	int3   
   140008db9:	int3   
   140008dba:	int3   
   140008dbb:	int3   
   140008dbc:	int3   
   140008dbd:	int3   
   140008dbe:	int3   
   140008dbf:	int3   
   140008dc0:	int3   
   140008dc1:	int3   
   140008dc2:	int3   
   140008dc3:	int3   
   140008dc4:	int3   
   140008dc5:	int3   
   140008dc6:	int3   
   140008dc7:	int3   
   140008dc8:	rex push rbx
   140008dca:	sub    rsp,0x20
   140008dce:	mov    ebx,ecx
   140008dd0:	call   0x140008dec
   140008dd5:	lea    rdx,[rbx+rbx*2]
   140008dd9:	shl    rdx,0x4
   140008ddd:	add    rax,rdx
   140008de0:	add    rsp,0x20
   140008de4:	pop    rbx
   140008de5:	ret    
   140008de6:	int3   
   140008de7:	int3   
   140008de8:	int3   
   140008de9:	int3   
   140008dea:	int3   
   140008deb:	int3   
   140008dec:	jmp    QWORD PTR [rip+0x496]        # 0x140009288
   140008df2:	int3   
   140008df3:	int3   
   140008df4:	int3   
   140008df5:	int3   
   140008df6:	int3   
   140008df7:	int3   
   140008df8:	sub    rsp,0x28
   140008dfc:	mov    r8,QWORD PTR [r9+0x38]
   140008e00:	mov    rcx,rdx
   140008e03:	mov    rdx,r9
   140008e06:	call   0x140008e1c
   140008e0b:	mov    eax,0x1
   140008e10:	add    rsp,0x28
   140008e14:	ret    
   140008e15:	int3   
   140008e16:	int3   
   140008e17:	int3   
   140008e18:	int3   
   140008e19:	int3   
   140008e1a:	int3   
   140008e1b:	int3   
   140008e1c:	rex push rbx
   140008e1e:	sub    rsp,0x20
   140008e22:	mov    r11d,DWORD PTR [r8]
   140008e25:	mov    rbx,rdx
   140008e28:	and    r11d,0xfffffff8
   140008e2c:	mov    r9,rcx
   140008e2f:	test   BYTE PTR [r8],0x4
   140008e33:	mov    r10,rcx
   140008e36:	je     0x140008e4b
   140008e38:	mov    eax,DWORD PTR [r8+0x8]
   140008e3c:	movsxd r10,DWORD PTR [r8+0x4]
   140008e40:	neg    eax
   140008e42:	add    r10,rcx
   140008e45:	movsxd rcx,eax
   140008e48:	and    r10,rcx
   140008e4b:	movsxd rax,r11d
   140008e4e:	mov    rdx,QWORD PTR [rax+r10*1]
   140008e52:	mov    rax,QWORD PTR [rbx+0x10]
   140008e56:	mov    ecx,DWORD PTR [rax+0x8]
   140008e59:	add    rcx,QWORD PTR [rbx+0x8]
   140008e5d:	test   BYTE PTR [rcx+0x3],0xf
   140008e61:	je     0x140008e6f
   140008e63:	movzx  eax,BYTE PTR [rcx+0x3]
   140008e67:	and    eax,0xfffffff0
   140008e6a:	cdqe   
   140008e6c:	add    r9,rax
   140008e6f:	xor    r9,rdx
   140008e72:	mov    rcx,r9
   140008e75:	add    rsp,0x20
   140008e79:	pop    rbx
   140008e7a:	jmp    0x140008740
   140008e7f:	int3   
   140008e80:	int3   
   140008e81:	int3   
   140008e82:	int3   
   140008e83:	int3   
   140008e84:	int3   
   140008e85:	int3   
   140008e86:	jmp    QWORD PTR [rip+0x404]        # 0x140009290
   140008e8c:	int3   
   140008e8d:	int3   
   140008e8e:	int3   
   140008e8f:	int3   
   140008e90:	int3   
   140008e91:	int3   
   140008e92:	jmp    QWORD PTR [rip+0x400]        # 0x140009298
   140008e98:	int3   
   140008e99:	int3   
   140008e9a:	int3   
   140008e9b:	int3   
   140008e9c:	int3   
   140008e9d:	int3   
   140008e9e:	jmp    QWORD PTR [rip+0x3fc]        # 0x1400092a0
   140008ea4:	int3   
   140008ea5:	int3   
   140008ea6:	int3   
   140008ea7:	int3   
   140008ea8:	int3   
   140008ea9:	int3   
   140008eaa:	int3   
   140008eab:	int3   
   140008eac:	int3   
   140008ead:	int3   
   140008eae:	int3   
   140008eaf:	int3   
   140008eb0:	int3   
   140008eb1:	int3   
   140008eb2:	int3   
   140008eb3:	int3   
   140008eb4:	int3   
   140008eb5:	int3   
   140008eb6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008ec0:	jmp    rax
   140008ec2:	int3   
   140008ec3:	int3   
   140008ec4:	int3   
   140008ec5:	int3   
   140008ec6:	int3   
   140008ec7:	int3   
   140008ec8:	int3   
   140008ec9:	int3   
   140008eca:	int3   
   140008ecb:	int3   
   140008ecc:	int3   
   140008ecd:	int3   
   140008ece:	int3   
   140008ecf:	int3   
   140008ed0:	int3   
   140008ed1:	int3   
   140008ed2:	int3   
   140008ed3:	int3   
   140008ed4:	int3   
   140008ed5:	int3   
   140008ed6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008ee0:	sub    rsp,0x10
   140008ee4:	mov    QWORD PTR [rsp],r10
   140008ee8:	mov    QWORD PTR [rsp+0x8],r11
   140008eed:	xor    r11,r11
   140008ef0:	lea    r10,[rsp+0x18]
   140008ef5:	sub    r10,rax
   140008ef8:	cmovb  r10,r11
   140008efc:	mov    r11,QWORD PTR gs:0x10
   140008f05:	cmp    r10,r11
   140008f08:	jae    0x140008f1f
   140008f0a:	and    r10w,0xf000
   140008f10:	lea    r11,[r11-0x1000]
   140008f17:	test   BYTE PTR [r11],r11b
   140008f1a:	cmp    r10,r11
   140008f1d:	jne    0x140008f10
   140008f1f:	mov    r10,QWORD PTR [rsp]
   140008f23:	mov    r11,QWORD PTR [rsp+0x8]
   140008f28:	add    rsp,0x10
   140008f2c:	ret    
   140008f2d:	int3   
   140008f2e:	int3   
   140008f2f:	int3   
   140008f30:	int3   
   140008f31:	int3   
   140008f32:	int3   
   140008f33:	int3   
   140008f34:	int3   
   140008f35:	int3   
   140008f36:	rex push rbp
   140008f38:	sub    rsp,0x20
   140008f3c:	mov    rbp,rdx
   140008f3f:	mov    rax,QWORD PTR [rcx]
   140008f42:	mov    rdx,rcx
   140008f45:	mov    ecx,DWORD PTR [rax]
   140008f47:	call   0x14000891e
   140008f4c:	nop
   140008f4d:	add    rsp,0x20
   140008f51:	pop    rbp
   140008f52:	ret    
   140008f53:	int3   
   140008f54:	int3   
   140008f55:	int3   
   140008f56:	int3   
   140008f57:	int3   
   140008f58:	int3   
   140008f59:	int3   
   140008f5a:	rex push rbp
   140008f5c:	sub    rsp,0x20
   140008f60:	mov    rbp,rdx
   140008f63:	mov    ecx,0x8
   140008f68:	call   0x140008da4
   140008f6d:	nop
   140008f6e:	add    rsp,0x20
   140008f72:	pop    rbp
   140008f73:	ret    
   140008f74:	int3   
   140008f75:	int3   
   140008f76:	int3   
   140008f77:	int3   
   140008f78:	int3   
   140008f79:	int3   
   140008f7a:	int3   
   140008f7b:	int3   
   140008f7c:	int3   
   140008f7d:	int3   
   140008f7e:	int3   
   140008f7f:	int3   
   140008f80:	rex push rbp
   140008f82:	sub    rsp,0x20
   140008f86:	mov    rbp,rdx
   140008f89:	mov    rax,QWORD PTR [rcx]
   140008f8c:	xor    ecx,ecx
   140008f8e:	cmp    DWORD PTR [rax],0xc0000005
   140008f94:	sete   cl
   140008f97:	mov    eax,ecx
   140008f99:	add    rsp,0x20
   140008f9d:	pop    rbp
   140008f9e:	ret    
   140008f9f:	int3   
   140008fa0:	int3   
   140008fa1:	int3   
   140008fa2:	int3   
   140008fa3:	int3   
   140008fa4:	int3   
   140008fa5:	int3   
   140008fa6:	int3   
   140008fa7:	int3   
   140008fa8:	int3   
   140008fa9:	int3   
   140008faa:	int3   
   140008fab:	int3   
   140008fac:	int3   
   140008fad:	int3   
   140008fae:	int3   
   140008faf:	int3   
   140008fb0:	lea    rax,[rip+0x3b9]        # 0x140009370
   140008fb7:	lea    rcx,[rip+0x3202]        # 0x14000c1c0
   140008fbe:	mov    QWORD PTR [rip+0x31fb],rax        # 0x14000c1c0
   140008fc5:	jmp    0x14000883e

Disassembly of section .rdata:

0000000140009000 <.rdata>:
   140009000:	imul   BYTE PTR [rdi+0x0]
   140009006:	add    BYTE PTR [rax],al
   140009008:	add    al,0xb0
   14000900a:	add    BYTE PTR [rax],al
   14000900c:	add    BYTE PTR [rax],al
   14000900e:	add    BYTE PTR [rax],al
   140009010:	adc    al,0xb0
   140009012:	add    BYTE PTR [rax],al
   140009014:	add    BYTE PTR [rax],al
   140009016:	add    BYTE PTR [rax],al
   140009018:	xor    dh,BYTE PTR [rax+0x0]
   14000901e:	add    BYTE PTR [rax],al
   140009020:	rex.RX mov al,0x0
   140009023:	add    BYTE PTR [rax],al
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    BYTE PTR [rax+rsi*4+0x0],dl
   14000902b:	add    BYTE PTR [rax],al
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    ah,bh
   140009031:	mov    bl,0x0
   140009033:	add    BYTE PTR [rax],al
   140009035:	add    BYTE PTR [rax],al
   140009037:	add    ah,ch
   140009039:	mov    bl,0x0
   14000903b:	add    BYTE PTR [rax],al
   14000903d:	add    BYTE PTR [rax],al
   14000903f:	add    dl,bl
   140009041:	mov    bl,0x0
   140009043:	add    BYTE PTR [rax],al
   140009045:	add    BYTE PTR [rax],al
   140009047:	add    dl,cl
   140009049:	mov    bl,0x0
   14000904b:	add    BYTE PTR [rax],al
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rax+0xb3],bh
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rax+0xb3],ch
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    dl,ch
   140009061:	scas   eax,DWORD PTR es:[rdi]
   140009062:	add    BYTE PTR [rax],al
   140009064:	add    BYTE PTR [rax],al
   140009066:	add    BYTE PTR [rax],al
   140009068:	xchg   esp,eax
   140009069:	mov    bl,0x0
   14000906b:	add    BYTE PTR [rax],al
   14000906d:	add    BYTE PTR [rax],al
   14000906f:	add    BYTE PTR [rax+0xb3],al
   140009075:	add    BYTE PTR [rax],al
   140009077:	add    BYTE PTR [rbx+rsi*4+0x0],ah
   14000907b:	add    BYTE PTR [rax],al
   14000907d:	add    BYTE PTR [rax],al
   14000907f:	add    BYTE PTR [rax-0x4d],dl
   140009082:	add    BYTE PTR [rax],al
   140009084:	add    BYTE PTR [rax],al
   140009086:	add    BYTE PTR [rax],al
   140009088:	ss mov bl,0x0
   14000908b:	add    BYTE PTR [rax],al
   14000908d:	add    BYTE PTR [rax],al
   14000908f:	add    BYTE PTR [rdx],ah
   140009091:	mov    bl,0x0
   140009093:	add    BYTE PTR [rax],al
   140009095:	add    BYTE PTR [rax],al
   140009097:	add    BYTE PTR [rdx],dl
   140009099:	mov    bl,0x0
   14000909b:	add    BYTE PTR [rax],al
   14000909d:	add    BYTE PTR [rax],al
   14000909f:	add    al,bh
   1400090a1:	mov    dl,0x0
   1400090a3:	add    BYTE PTR [rax],al
   1400090a5:	add    BYTE PTR [rax],al
   1400090a7:	add    dl,ah
   1400090a9:	mov    dl,0x0
   1400090ab:	add    BYTE PTR [rax],al
   1400090ad:	add    BYTE PTR [rax],al
   1400090af:	add    ah,cl
   1400090b1:	mov    dl,0x0
   1400090b3:	add    BYTE PTR [rax],al
   1400090b5:	add    BYTE PTR [rax],al
   1400090b7:	add    BYTE PTR [rdx+0xb2],dh
   1400090bd:	add    BYTE PTR [rax],al
   1400090bf:	add    BYTE PTR [rsi+0xb2],bl
   1400090c5:	add    BYTE PTR [rax],al
   1400090c7:	add    BYTE PTR [rax+0xb2],al
   1400090cd:	add    BYTE PTR [rax],al
   1400090cf:	add    BYTE PTR [rax-0x4e],bh
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	fsubr  DWORD PTR [rdi+0x0]
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	ret    0xaf
   1400090e3:	add    BYTE PTR [rax],al
   1400090e5:	add    BYTE PTR [rax],al
   1400090e7:	add    BYTE PTR [rsi+0xaf],dh
   1400090ed:	add    BYTE PTR [rax],al
   1400090ef:	add    BYTE PTR [rax+0xaf],ch
	...
   1400090fd:	add    BYTE PTR [rax],al
   1400090ff:	add    BYTE PTR [rdx],cl
   140009101:	mov    dl,0x0
   140009103:	add    BYTE PTR [rax],al
   140009105:	add    BYTE PTR [rax],al
   140009107:	add    BYTE PTR [rdx],ah
   140009109:	mov    dl,0x0
   14000910b:	add    BYTE PTR [rax],al
   14000910d:	add    BYTE PTR [rax],al
   14000910f:	add    BYTE PTR [rdx],ch
   140009111:	mov    dl,0x0
   140009113:	add    BYTE PTR [rax],al
   140009115:	add    BYTE PTR [rax],al
   140009117:	add    BYTE PTR [rdx+rsi*4],dh
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	add    BYTE PTR [rax],al
   14000911e:	add    BYTE PTR [rax],al
   140009120:	rex.X mov dl,0x0
   140009123:	add    BYTE PTR [rax],al
   140009125:	add    BYTE PTR [rax],al
   140009127:	add    BYTE PTR [rdx+rsi*4+0x0],cl
   14000912b:	add    BYTE PTR [rax],al
   14000912d:	add    BYTE PTR [rax],al
   14000912f:	add    BYTE PTR [rdx+rsi*4+0x0],ah
   140009133:	add    BYTE PTR [rax],al
   140009135:	add    BYTE PTR [rax],al
   140009137:	add    BYTE PTR [rax],al
   140009139:	mov    dl,0x0
   14000913b:	add    BYTE PTR [rax],al
   14000913d:	add    BYTE PTR [rax],al
   14000913f:	add    al,ch
   140009141:	mov    cl,0x0
   140009143:	add    BYTE PTR [rax],al
   140009145:	add    BYTE PTR [rax],al
   140009147:	add    ah,bl
   140009149:	mov    cl,0x0
   14000914b:	add    BYTE PTR [rax],al
   14000914d:	add    BYTE PTR [rax],al
   14000914f:	add    al,cl
   140009151:	mov    cl,0x0
   140009153:	add    BYTE PTR [rax],al
   140009155:	add    BYTE PTR [rax],al
   140009157:	add    BYTE PTR [rsi+0xb1],bh
   14000915d:	add    BYTE PTR [rax],al
   14000915f:	add    BYTE PTR [rsi+0xb1],dh
   140009165:	add    BYTE PTR [rax],al
   140009167:	add    BYTE PTR [rcx+rsi*4+0x0],ah
   14000916e:	add    BYTE PTR [rax],al
   140009170:	xchg   edx,eax
   140009171:	mov    cl,0x0
   140009173:	add    BYTE PTR [rax],al
   140009175:	add    BYTE PTR [rax],al
   140009177:	add    BYTE PTR [rcx+rsi*4+0x0],al
   14000917e:	add    BYTE PTR [rax],al
   140009180:	jbe    0x140009133
   140009182:	add    BYTE PTR [rax],al
   140009184:	add    BYTE PTR [rax],al
   140009186:	add    BYTE PTR [rax],al
   140009188:	(bad)  
   140009189:	mov    cl,0x0
   14000918b:	add    BYTE PTR [rax],al
   14000918d:	add    BYTE PTR [rax],al
   14000918f:	add    BYTE PTR [rcx+rsi*4+0x0],dl
   140009193:	add    BYTE PTR [rax],al
   140009195:	add    BYTE PTR [rax],al
   140009197:	add    BYTE PTR [rsi],dh
   140009199:	mov    cl,0x0
   14000919b:	add    BYTE PTR [rax],al
   14000919d:	add    BYTE PTR [rax],al
   14000919f:	add    BYTE PTR [rsi],bl
   1400091a1:	mov    cl,0x0
   1400091a3:	add    BYTE PTR [rax],al
   1400091a5:	add    BYTE PTR [rax],al
   1400091a7:	add    BYTE PTR [rax],al
   1400091a9:	mov    cl,0x0
   1400091ab:	add    BYTE PTR [rax],al
   1400091ad:	add    BYTE PTR [rax],al
   1400091af:	add    al,ah
   1400091b1:	mov    al,0x0
   1400091b3:	add    BYTE PTR [rax],al
   1400091b5:	add    BYTE PTR [rax],al
   1400091b7:	add    dh,dl
   1400091b9:	mov    al,0x0
   1400091bb:	add    BYTE PTR [rax],al
   1400091bd:	add    BYTE PTR [rax],al
   1400091bf:	add    dh,cl
   1400091c1:	mov    al,0x0
   1400091c3:	add    BYTE PTR [rax],al
   1400091c5:	add    BYTE PTR [rax],al
   1400091c7:	add    dh,al
   1400091c9:	mov    al,0x0
   1400091cb:	add    BYTE PTR [rax],al
   1400091cd:	add    BYTE PTR [rax],al
   1400091cf:	add    BYTE PTR [rdx+0xb0],bh
   1400091d5:	add    BYTE PTR [rax],al
   1400091d7:	add    BYTE PTR [rax+rsi*4+0x0],ch
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	movabs ds:0x9a000000000000b0,al
   1400091e9:	mov    al,0x0
   1400091eb:	add    BYTE PTR [rax],al
   1400091ed:	add    BYTE PTR [rax],al
   1400091ef:	add    BYTE PTR [rax+0xb0],dl
   1400091f5:	add    BYTE PTR [rax],al
   1400091f7:	add    BYTE PTR [rax+rsi*4+0x0],al
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	js     0x1400091b2
   140009202:	add    BYTE PTR [rax],al
   140009204:	add    BYTE PTR [rax],al
   140009206:	add    BYTE PTR [rax],al
   140009208:	outs   dx,BYTE PTR ds:[rsi]
   140009209:	mov    al,0x0
   14000920b:	add    BYTE PTR [rax],al
   14000920d:	add    BYTE PTR [rax],al
   14000920f:	add    BYTE PTR [rdx],cl
   140009211:	mov    ah,0x0
   140009213:	add    BYTE PTR [rax],al
   140009215:	add    BYTE PTR [rax],al
   140009217:	add    BYTE PTR [rsi],dl
   140009219:	mov    ah,0x0
   14000921b:	add    BYTE PTR [rax],al
   14000921d:	add    BYTE PTR [rax],al
   14000921f:	add    BYTE PTR [rdx],ah
   140009221:	mov    ah,0x0
   140009223:	add    BYTE PTR [rax],al
   140009225:	add    BYTE PTR [rax],al
   140009227:	add    BYTE PTR [rsi],ch
   140009229:	mov    ah,0x0
   14000922b:	add    BYTE PTR [rax],al
   14000922d:	add    BYTE PTR [rax],al
   14000922f:	add    BYTE PTR [rax],bh
   140009231:	mov    ah,0x0
   140009233:	add    BYTE PTR [rax],al
   140009235:	add    BYTE PTR [rax],al
   140009237:	add    BYTE PTR [rdx-0x4c],al
   14000923a:	add    BYTE PTR [rax],al
   14000923c:	add    BYTE PTR [rax],al
   14000923e:	add    BYTE PTR [rax],al
   140009240:	rex.WR mov spl,0x0
   140009243:	add    BYTE PTR [rax],al
   140009245:	add    BYTE PTR [rax],al
   140009247:	add    BYTE PTR [rsi-0x4c],dl
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	add    BYTE PTR [rax],al
   14000924e:	add    BYTE PTR [rax],al
   140009250:	pop    rsi
   140009251:	mov    ah,0x0
   140009253:	add    BYTE PTR [rax],al
   140009255:	add    BYTE PTR [rax],al
   140009257:	add    BYTE PTR [rax-0x4c],ch
   14000925a:	add    BYTE PTR [rax],al
   14000925c:	add    BYTE PTR [rax],al
   14000925e:	add    BYTE PTR [rax],al
   140009260:	jb     0x140009216
   140009262:	add    BYTE PTR [rax],al
   140009264:	add    BYTE PTR [rax],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	jl     0x14000921e
   14000926a:	add    BYTE PTR [rax],al
   14000926c:	add    BYTE PTR [rax],al
   14000926e:	add    BYTE PTR [rax],al
   140009270:	mov    BYTE PTR [rax+rax*1+0x0],dh
   140009277:	add    BYTE PTR [rdx+0xb4],dl
   14000927d:	add    BYTE PTR [rax],al
   14000927f:	add    BYTE PTR [rsp+rsi*4+0x0],bl
   140009286:	add    BYTE PTR [rax],al
   140009288:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009289:	mov    ah,0x0
   14000928b:	add    BYTE PTR [rax],al
   14000928d:	add    BYTE PTR [rax],al
   14000928f:	add    BYTE PTR [rsp+rsi*4+0x0],dh
   140009296:	add    BYTE PTR [rax],al
   140009298:	mov    esi,0xb4
   14000929d:	add    BYTE PTR [rax],al
   14000929f:	add    al,cl
   1400092a1:	mov    ah,0x0
	...
   1400092af:	add    al,dl
   1400092b1:	mov    eax,DWORD PTR [rax]
   1400092b3:	rex add DWORD PTR [rax],eax
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	ror    BYTE PTR [rsi+0x14000],0x0
	...
   1400092c7:	add    al,ah
   1400092c9:	test   BYTE PTR [rax],al
   1400092cb:	rex add DWORD PTR [rax],eax
	...
   1400092de:	add    BYTE PTR [rax],al
   1400092e0:	add    BYTE PTR [rax+rax*1+0x140],al
   1400092e7:	add    BYTE PTR [rax],al
   1400092e9:	mov    DWORD PTR [rax],eax
   1400092eb:	rex add DWORD PTR [rax],eax
	...
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	jo     0x14000930c
   1400092fa:	add    BYTE PTR [rax],al
   1400092fc:	sar    BYTE PTR [rax],1
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	rol    BYTE PTR [rdx+0x0],0x0
   140009304:	loopne 0x140009348
   140009306:	add    BYTE PTR [rax],al
   140009308:	add    BYTE PTR [rbx+0x0],al
   14000930b:	add    al,dh
   14000930d:	rex.RXB add BYTE PTR [r8],r8b
   140009310:	adc    BYTE PTR [rax+0x0],cl
   140009313:	add    BYTE PTR [rax+0x48],ah
   140009316:	add    BYTE PTR [rax],al
   140009318:	(bad)  
   140009319:	pop    rax
   14000931a:	add    BYTE PTR [rax],al
   14000931c:	adc    BYTE PTR [rcx+0x0],ah
   14000931f:	add    BYTE PTR [rax],al
   140009321:	add    DWORD PTR [rax],0x0
   140009324:	rol    BYTE PTR [rbx-0x7c000000],0x0
   14000932b:	add    al,ah
   14000932d:	test   BYTE PTR [rax],al
   14000932f:	add    BYTE PTR [rax],dl
   140009331:	xchg   DWORD PTR [rax],eax
   140009333:	add    BYTE PTR [rax-0x78],dl
   140009336:	add    BYTE PTR [rax],al
   140009338:	or     BYTE PTR [rax-0x77400000],0x0
   14000933f:	add    BYTE PTR [rax],al
   140009341:	mov    DWORD PTR [rax],eax
   140009343:	add    al,ah
   140009345:	mov    DWORD PTR [rax],eax
   140009347:	add    al,dl
   140009349:	mov    eax,DWORD PTR [rax]
   14000934b:	add    BYTE PTR [rax],ah
   14000934d:	mov    WORD PTR [rax],es
   14000934f:	add    BYTE PTR [rax+0x8f],dh
	...
   14000935d:	add    BYTE PTR [rax],al
   14000935f:	add    BYTE PTR [rdx+0x61],ah
   140009362:	and    BYTE PTR fs:[rcx+0x6c],ah
   140009366:	ins    BYTE PTR es:[rdi],dx
   140009367:	outs   dx,DWORD PTR ds:[rsi]
   140009368:	movsxd esp,DWORD PTR [rcx+0x74]
   14000936b:	imul   ebp,DWORD PTR [rdi+0x6e],0x83000000
   140009372:	add    BYTE PTR [rax+0x1],al
   140009375:	add    BYTE PTR [rax],al
   140009377:	add    BYTE PTR [rax-0x78],dl
   14000937a:	add    BYTE PTR [rax+0x1],al
   14000937d:	add    BYTE PTR [rax],al
   14000937f:	add    al,al
   140009381:	add    DWORD PTR [rax],0x40
   140009384:	add    DWORD PTR [rax],eax
   140009386:	add    BYTE PTR [rax],al
   140009388:	or     BYTE PTR [rax+0x14000],0x0
   14000938f:	add    BYTE PTR [rax],ah
   140009391:	ret    0x4000
   140009394:	add    DWORD PTR [rax],eax
   140009396:	add    BYTE PTR [rax],al
   140009398:	rol    dl,0x0
   14000939b:	rex add DWORD PTR [rax],eax
   14000939e:	add    BYTE PTR [rax],al
   1400093a0:	push   rax
   1400093a1:	add    BYTE PTR [rdx+0x0],dl
   1400093a4:	rex.WB add BYTE PTR [r13+0x0],cl
   1400093a8:	add    BYTE PTR [r10+0x0],dl
   1400093ac:	pop    rcx
   1400093ad:	add    BYTE PTR [rip+0x49004400],ch        # 0x18900d7b3
   1400093b3:	add    BYTE PTR [rbx+0x0],al
   1400093b6:	push   rsp
   1400093b7:	add    BYTE PTR [rcx+0x0],cl
   1400093ba:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400093be:	add    BYTE PTR [r10+0x0],dl
   1400093c2:	pop    rcx
   1400093c3:	add    BYTE PTR [rax],al
   1400093c5:	add    BYTE PTR [rax],al
   1400093c7:	add    BYTE PTR [rax+0x0],dl
   1400093ca:	push   rdx
   1400093cb:	add    BYTE PTR [rcx+0x0],cl
   1400093ce:	rex.WRB add BYTE PTR [r9+0x0],r8b
   1400093d2:	push   rdx
   1400093d3:	add    BYTE PTR [rcx+0x0],bl
   1400093d6:	sub    eax,0x49004700
   1400093db:	add    BYTE PTR [rsi+0x0],dl
   1400093de:	add    BYTE PTR [r14+0x0],r9b
   1400093e2:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   1400093e6:	rex.WRB add BYTE PTR [r13+0x0],r8b
   1400093ea:	sub    eax,0x49004c00
   1400093ef:	add    BYTE PTR [rbx+0x0],dl
   1400093f2:	push   rsp
   1400093f3:	add    BYTE PTR [rax],al
   1400093f5:	add    BYTE PTR [rax],al
   1400093f7:	add    BYTE PTR [rax+0x0],dl
   1400093fa:	push   rdx
   1400093fb:	add    BYTE PTR [rcx+0x0],cl
   1400093fe:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140009402:	push   rdx
   140009403:	add    BYTE PTR [rcx+0x0],bl
   140009406:	sub    eax,0x55005300
   14000940b:	add    BYTE PTR [rdx+0x0],dl
   14000940e:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   140009412:	rex.WRB add BYTE PTR [r13+0x0],r8b
   140009416:	sub    eax,0x49004c00
   14000941b:	add    BYTE PTR [rbx+0x0],dl
   14000941e:	push   rsp
	...
   140009427:	add    BYTE PTR [rax+0x0],dl
   14000942a:	push   rdx
   14000942b:	add    BYTE PTR [rcx+0x0],cl
   14000942e:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140009432:	push   rdx
   140009433:	add    BYTE PTR [rcx+0x0],bl
   140009436:	sub    eax,0x54005300
   14000943b:	add    BYTE PTR [rdx+0x0],dl
   14000943e:	add    BYTE PTR [r13+0x0],r8b
   140009442:	push   rsp
   140009443:	add    BYTE PTR [rsi+0x0],cl
   140009446:	add    BYTE PTR [r13+0x0],cl
   14000944a:	add    BYTE PTR [rip+0x49004c00],r13b        # 0x18900e051
   140009451:	add    BYTE PTR [rbx+0x0],dl
   140009454:	push   rsp
   140009455:	add    BYTE PTR [rax],al
   140009457:	add    BYTE PTR [rax+0x0],dl
   14000945a:	push   rdx
   14000945b:	add    BYTE PTR [rcx+0x0],cl
   14000945e:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140009462:	push   rdx
   140009463:	add    BYTE PTR [rcx+0x0],bl
   140009466:	sub    eax,0x54005300
   14000946b:	add    BYTE PTR [rcx+0x0],al
   14000946e:	push   rsp
   14000946f:	add    BYTE PTR [rbp+0x0],al
   140009472:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140009476:	push   rax
   140009477:	add    BYTE PTR [rdx+0x0],dl
   14000947a:	rex.WRXB add BYTE PTR [r14+0x0],r10b
   14000947e:	rex.WB add BYTE PTR [r14+0x0],cl
   140009482:	rex.XB add BYTE PTR [r13+0x0],al
   140009486:	sub    eax,0x49004c00
   14000948b:	add    BYTE PTR [rbx+0x0],dl
   14000948e:	push   rsp
	...
   140009497:	add    BYTE PTR [rax+0x0],dl
   14000949a:	push   rdx
   14000949b:	add    BYTE PTR [rcx+0x0],cl
   14000949e:	rex.WRB add BYTE PTR [r9+0x0],r8b
   1400094a2:	push   rdx
   1400094a3:	add    BYTE PTR [rcx+0x0],bl
   1400094a6:	sub    eax,0x49004300
   1400094ab:	add    BYTE PTR [rax+rax*1+0x59],dl
   1400094af:	add    BYTE PTR [rsi+0x0],cl
   1400094b2:	add    BYTE PTR [r13+0x0],cl
   1400094b6:	add    BYTE PTR [rip+0x49004c00],r13b        # 0x18900e0bd
   1400094bd:	add    BYTE PTR [rbx+0x0],dl
   1400094c0:	push   rsp
   1400094c1:	add    BYTE PTR [rax],al
   1400094c3:	add    BYTE PTR [rax],al
   1400094c5:	add    BYTE PTR [rax],al
   1400094c7:	add    BYTE PTR [rax+0x0],dl
   1400094ca:	push   rdx
   1400094cb:	add    BYTE PTR [rcx+0x0],cl
   1400094ce:	rex.WRB add BYTE PTR [r9+0x0],r8b
   1400094d2:	push   rdx
   1400094d3:	add    BYTE PTR [rcx+0x0],bl
   1400094d6:	sub    eax,0x4f004300
   1400094db:	add    BYTE PTR [rbp+0x0],dl
   1400094de:	rex.WRX add BYTE PTR [rax+r8*1+0x52],r10b
   1400094e3:	add    BYTE PTR [rcx+0x0],bl
   1400094e6:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   1400094ea:	rex.WRB add BYTE PTR [r13+0x0],r8b
   1400094ee:	sub    eax,0x49004c00
   1400094f3:	add    BYTE PTR [rbx+0x0],dl
   1400094f6:	push   rsp
	...
   1400094ff:	add    BYTE PTR [rax+0x0],dl
   140009502:	push   rdx
   140009503:	add    BYTE PTR [rcx+0x0],cl
   140009506:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000950a:	push   rdx
   14000950b:	add    BYTE PTR [rcx+0x0],bl
   14000950e:	sub    eax,0x4f004300
   140009513:	add    BYTE PTR [rbp+0x0],dl
   140009516:	rex.WRX add BYTE PTR [rax+r8*1+0x52],r10b
   14000951b:	add    BYTE PTR [rcx+0x0],bl
   14000951e:	push   rbx
   14000951f:	add    BYTE PTR [rax+0x0],cl
   140009522:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140009526:	push   rsp
   140009527:	add    BYTE PTR [rsi+0x0],cl
   14000952a:	add    BYTE PTR [r13+0x0],cl
   14000952e:	add    BYTE PTR [rip+0x49004c00],r13b        # 0x18900e135
   140009535:	add    BYTE PTR [rbx+0x0],dl
   140009538:	push   rsp
   140009539:	add    BYTE PTR [rax],al
   14000953b:	add    BYTE PTR [rax],al
   14000953d:	add    BYTE PTR [rax],al
   14000953f:	add    BYTE PTR [rbx+0x0],dl
   140009542:	add    BYTE PTR [r11+0x0],r8b
   140009546:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000954a:	add    BYTE PTR [rcx+0x0],r8b
   14000954e:	push   rdx
   14000954f:	add    BYTE PTR [rcx+0x0],bl
   140009552:	sub    eax,0x49004400
   140009557:	add    BYTE PTR [rbx+0x0],al
   14000955a:	push   rsp
   14000955b:	add    BYTE PTR [rcx+0x0],cl
   14000955e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140009562:	add    BYTE PTR [r10+0x0],dl
   140009566:	pop    rcx
	...
   14000956f:	add    BYTE PTR [rbx+0x0],dl
   140009572:	add    BYTE PTR [r11+0x0],r8b
   140009576:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000957a:	add    BYTE PTR [rcx+0x0],r8b
   14000957e:	push   rdx
   14000957f:	add    BYTE PTR [rcx+0x0],bl
   140009582:	sub    eax,0x49004700
   140009587:	add    BYTE PTR [rsi+0x0],dl
   14000958a:	add    BYTE PTR [r14+0x0],r9b
   14000958e:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   140009592:	rex.WRB add BYTE PTR [r13+0x0],r8b
   140009596:	sub    eax,0x49004c00
   14000959b:	add    BYTE PTR [rbx+0x0],dl
   14000959e:	push   rsp
	...
   1400095a7:	add    BYTE PTR [rbx+0x0],dl
   1400095aa:	add    BYTE PTR [r11+0x0],r8b
   1400095ae:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400095b2:	add    BYTE PTR [rcx+0x0],r8b
   1400095b6:	push   rdx
   1400095b7:	add    BYTE PTR [rcx+0x0],bl
   1400095ba:	sub    eax,0x55005300
   1400095bf:	add    BYTE PTR [rdx+0x0],dl
   1400095c2:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   1400095c6:	rex.WRB add BYTE PTR [r13+0x0],r8b
   1400095ca:	sub    eax,0x49004c00
   1400095cf:	add    BYTE PTR [rbx+0x0],dl
   1400095d2:	push   rsp
   1400095d3:	add    BYTE PTR [rax],al
   1400095d5:	add    BYTE PTR [rax],al
   1400095d7:	add    BYTE PTR [rbx+0x0],dl
   1400095da:	add    BYTE PTR [r11+0x0],r8b
   1400095de:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400095e2:	add    BYTE PTR [rcx+0x0],r8b
   1400095e6:	push   rdx
   1400095e7:	add    BYTE PTR [rcx+0x0],bl
   1400095ea:	sub    eax,0x54005300
   1400095ef:	add    BYTE PTR [rdx+0x0],dl
   1400095f2:	add    BYTE PTR [r13+0x0],r8b
   1400095f6:	push   rsp
   1400095f7:	add    BYTE PTR [rsi+0x0],cl
   1400095fa:	add    BYTE PTR [r13+0x0],cl
   1400095fe:	add    BYTE PTR [rip+0x49004c00],r13b        # 0x18900e205
   140009605:	add    BYTE PTR [rbx+0x0],dl
   140009608:	push   rsp
   140009609:	add    BYTE PTR [rax],al
   14000960b:	add    BYTE PTR [rax],al
   14000960d:	add    BYTE PTR [rax],al
   14000960f:	add    BYTE PTR [rbx+0x0],dl
   140009612:	add    BYTE PTR [r11+0x0],r8b
   140009616:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000961a:	add    BYTE PTR [rcx+0x0],r8b
   14000961e:	push   rdx
   14000961f:	add    BYTE PTR [rcx+0x0],bl
   140009622:	sub    eax,0x54005300
   140009627:	add    BYTE PTR [rcx+0x0],al
   14000962a:	push   rsp
   14000962b:	add    BYTE PTR [rbp+0x0],al
   14000962e:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140009632:	push   rax
   140009633:	add    BYTE PTR [rdx+0x0],dl
   140009636:	rex.WRXB add BYTE PTR [r14+0x0],r10b
   14000963a:	rex.WB add BYTE PTR [r14+0x0],cl
   14000963e:	rex.XB add BYTE PTR [r13+0x0],al
   140009642:	sub    eax,0x49004c00
   140009647:	add    BYTE PTR [rbx+0x0],dl
   14000964a:	push   rsp
   14000964b:	add    BYTE PTR [rax],al
   14000964d:	add    BYTE PTR [rax],al
   14000964f:	add    BYTE PTR [rbx+0x0],dl
   140009652:	add    BYTE PTR [r11+0x0],r8b
   140009656:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000965a:	add    BYTE PTR [rcx+0x0],r8b
   14000965e:	push   rdx
   14000965f:	add    BYTE PTR [rcx+0x0],bl
   140009662:	sub    eax,0x49004300
   140009667:	add    BYTE PTR [rax+rax*1+0x59],dl
   14000966b:	add    BYTE PTR [rsi+0x0],cl
   14000966e:	add    BYTE PTR [r13+0x0],cl
   140009672:	add    BYTE PTR [rip+0x49004c00],r13b        # 0x18900e279
   140009679:	add    BYTE PTR [rbx+0x0],dl
   14000967c:	push   rsp
   14000967d:	add    BYTE PTR [rax],al
   14000967f:	add    BYTE PTR [rbx+0x0],dl
   140009682:	add    BYTE PTR [r11+0x0],r8b
   140009686:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000968a:	add    BYTE PTR [rcx+0x0],r8b
   14000968e:	push   rdx
   14000968f:	add    BYTE PTR [rcx+0x0],bl
   140009692:	sub    eax,0x4f004300
   140009697:	add    BYTE PTR [rbp+0x0],dl
   14000969a:	rex.WRX add BYTE PTR [rax+r8*1+0x52],r10b
   14000969f:	add    BYTE PTR [rcx+0x0],bl
   1400096a2:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   1400096a6:	rex.WRB add BYTE PTR [r13+0x0],r8b
   1400096aa:	sub    eax,0x49004c00
   1400096af:	add    BYTE PTR [rbx+0x0],dl
   1400096b2:	push   rsp
	...
   1400096bf:	add    BYTE PTR [rbx+0x0],dl
   1400096c2:	add    BYTE PTR [r11+0x0],r8b
   1400096c6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400096ca:	add    BYTE PTR [rcx+0x0],r8b
   1400096ce:	push   rdx
   1400096cf:	add    BYTE PTR [rcx+0x0],bl
   1400096d2:	sub    eax,0x4f004300
   1400096d7:	add    BYTE PTR [rbp+0x0],dl
   1400096da:	rex.WRX add BYTE PTR [rax+r8*1+0x52],r10b
   1400096df:	add    BYTE PTR [rcx+0x0],bl
   1400096e2:	push   rbx
   1400096e3:	add    BYTE PTR [rax+0x0],cl
   1400096e6:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   1400096ea:	push   rsp
   1400096eb:	add    BYTE PTR [rsi+0x0],cl
   1400096ee:	add    BYTE PTR [r13+0x0],cl
   1400096f2:	add    BYTE PTR [rip+0x49004c00],r13b        # 0x18900e2f9
   1400096f9:	add    BYTE PTR [rbx+0x0],dl
   1400096fc:	push   rsp
   1400096fd:	add    BYTE PTR [rax],al
   1400096ff:	add    BYTE PTR [rbx+0x0],dl
   140009702:	add    BYTE PTR [r11+0x0],r8b
   140009706:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000970a:	add    BYTE PTR [rcx+0x0],r8b
   14000970e:	push   rdx
   14000970f:	add    BYTE PTR [rcx+0x0],bl
   140009712:	sub    eax,0x4d004500
   140009717:	add    BYTE PTR [rcx+0x0],al
   14000971a:	rex.WB add BYTE PTR [r8+rax*1+0x55],cl
   14000971f:	add    BYTE PTR [rbx+0x0],dl
   140009722:	add    BYTE PTR [r10+0x0],r10b
   140009726:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   14000972a:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14000972e:	sub    eax,0x49004c00
   140009733:	add    BYTE PTR [rbx+0x0],dl
   140009736:	push   rsp
	...
   14000973f:	add    BYTE PTR [rbx+0x0],dl
   140009742:	add    BYTE PTR [r11+0x0],r8b
   140009746:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000974a:	add    BYTE PTR [rcx+0x0],r8b
   14000974e:	push   rdx
   14000974f:	add    BYTE PTR [rcx+0x0],bl
   140009752:	sub    eax,0x4d004500
   140009757:	add    BYTE PTR [rcx+0x0],al
   14000975a:	rex.WB add BYTE PTR [r8+rax*1+0x53],cl
   14000975f:	add    BYTE PTR [rbp+0x0],cl
   140009762:	push   rsp
   140009763:	add    BYTE PTR [rax+0x0],dl
   140009766:	sub    eax,0x49004c00
   14000976b:	add    BYTE PTR [rbx+0x0],dl
   14000976e:	push   rsp
	...
   140009777:	add    BYTE PTR [rbx+0x0],dl
   14000977a:	add    BYTE PTR [r11+0x0],r8b
   14000977e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140009782:	add    BYTE PTR [rcx+0x0],r8b
   140009786:	push   rdx
   140009787:	add    BYTE PTR [rcx+0x0],bl
   14000978a:	sub    eax,0x52005500
   14000978f:	add    BYTE PTR [rax+rax*1+0x2d],cl
   140009793:	add    BYTE PTR [rax+rax*1+0x49],cl
   140009797:	add    BYTE PTR [rbx+0x0],dl
   14000979a:	push   rsp
   14000979b:	add    BYTE PTR [rax],al
   14000979d:	add    BYTE PTR [rax],al
   14000979f:	add    BYTE PTR [rax+rax*1+0x49],al
   1400097a3:	add    BYTE PTR [rbx+0x0],al
   1400097a6:	push   rsp
   1400097a7:	add    BYTE PTR [rip+0x52005400],ch        # 0x19200ebad
   1400097ad:	add    BYTE PTR [rbp+0x0],al
   1400097b0:	rex.WRX add BYTE PTR [rax+r8*1+0x49],r8b
   1400097b5:	add    BYTE PTR [rsi+0x0],cl
   1400097b8:	rex.RXB add BYTE PTR [rip+0x45004400],r13b        # 0x18500dbbf
   1400097bf:	add    BYTE PTR [rsi+0x0],al
   1400097c2:	add    BYTE PTR [r13+0x0],dl
   1400097c6:	rex.WR add BYTE PTR [rax+rax*1+0x0],r10b
   1400097cb:	add    BYTE PTR [rip+0x6400],ah        # 0x14000fbd1
   1400097d1:	add    BYTE PTR [rax],al
   1400097d3:	add    BYTE PTR [rax],al
   1400097d5:	add    BYTE PTR [rax],al
   1400097d7:	add    BYTE PTR [rax+0x57],cl
   1400097da:	push   rdx
   1400097db:	rex.WB pop r15
   1400097dd:	xor    BYTE PTR [rax],dh
   1400097df:	xor    DWORD PTR [rax],eax
   1400097e1:	add    BYTE PTR [rax],al
   1400097e3:	add    BYTE PTR [rax+0x57],cl
   1400097e6:	push   rdx
   1400097e7:	push   rbx
	...
   1400097f0:	ins    BYTE PTR es:[rdi],dx
   1400097f1:	add    BYTE PTR [rcx+0x0],ah
   1400097f4:	outs   dx,BYTE PTR ds:[rsi]
   1400097f5:	add    BYTE PTR [rdi+0x0],ah
	...
   140009800:	je     0x140009802
   140009802:	jns    0x140009804
   140009804:	jo     0x140009806
   140009806:	add    BYTE PTR gs:[rax],al
   140009809:	add    BYTE PTR [rax],al
   14000980b:	add    BYTE PTR [rax],al
   14000980d:	add    BYTE PTR [rax],al
   14000980f:	add    BYTE PTR [rbx+0x0],ah
   140009812:	push   0x63006500
   140009817:	add    BYTE PTR [rbx+0x0],ch
   14000981a:	add    BYTE PTR [rax],al
   14000981c:	add    BYTE PTR [rax],al
   14000981e:	add    BYTE PTR [rax],al
   140009820:	jb     0x140009822
   140009822:	add    BYTE PTR gs:[rbx+0x0],dh
   140009826:	outs   dx,DWORD PTR ds:[rsi]
   140009827:	add    BYTE PTR [rbp+0x0],dh
   14000982a:	jb     0x14000982c
   14000982c:	movsxd eax,DWORD PTR [rax]
   14000982e:	add    BYTE PTR gs:[rax],al
   140009831:	add    BYTE PTR [rax],al
   140009833:	add    BYTE PTR [rax],al
   140009835:	add    BYTE PTR [rax],al
   140009837:	add    BYTE PTR [rbx+0x0],ah
   14000983a:	outs   dx,DWORD PTR ds:[rsi]
   14000983b:	add    BYTE PTR [rbp+0x0],ch
   14000983e:	ins    DWORD PTR es:[rdi],dx
   14000983f:	add    BYTE PTR [rbp+0x0],ah
   140009842:	outs   dx,BYTE PTR ds:[rsi]
   140009843:	add    BYTE PTR [rax+rax*1+0x0],dh
   140009847:	add    BYTE PTR [rdi+0x0],ch
   14000984a:	add    BYTE PTR [rax],al
   14000984c:	add    BYTE PTR [rax],al
   14000984e:	add    BYTE PTR [rax],al
   140009850:	add    BYTE PTR cs:[rax+rax*1+0x78],dh
   140009855:	add    BYTE PTR [rax+rax*1+0x0],dh
   140009859:	add    BYTE PTR [rax],al
   14000985b:	add    BYTE PTR [rax],al
   14000985d:	add    BYTE PTR [rax],al
   14000985f:	add    BYTE PTR [rsi],ch
   140009861:	add    BYTE PTR [rax+rax*1+0x61],ah
   140009865:	add    BYTE PTR [rax+rax*1+0x0],dh
   140009869:	add    BYTE PTR [rax],al
   14000986b:	add    BYTE PTR [rax],al
   14000986d:	add    BYTE PTR [rax],al
   14000986f:	add    BYTE PTR [rsi],ch
   140009871:	add    BYTE PTR [rax+0x0],ch
   140009874:	ja     0x140009876
   140009876:	jb     0x140009878
   140009878:	add    BYTE PTR fs:[rcx+0x0],ch
   14000987c:	movsxd eax,DWORD PTR [rax]
   14000987e:	je     0x140009880
	...
   140009890:	add    BYTE PTR [r10+0x0],r10b
   140009894:	push   rdx
   140009895:	add    BYTE PTR [rdi+0x0],cl
   140009898:	push   rdx
   140009899:	add    BYTE PTR [rdx],bh
   14000989b:	add    BYTE PTR [rax],ah
   14000989d:	add    BYTE PTR [rax+rax*1+0x69],al
   1400098a1:	add    BYTE PTR [rbx+0x0],ah
   1400098a4:	je     0x1400098a6
   1400098a6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400098ac:	(bad)  
   1400098ad:	add    BYTE PTR [rdx+0x0],dh
   1400098b0:	jns    0x1400098b2
   1400098b2:	and    BYTE PTR [rax],al
   1400098b4:	ja     0x1400098b6
   1400098b6:	outs   dx,DWORD PTR ds:[rsi]
   1400098b7:	add    BYTE PTR [rdx+0x0],dh
   1400098ba:	add    BYTE PTR fs:[rax],ah
   1400098bd:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400098c1:	add    BYTE PTR [rdi+0x0],ch
   1400098c4:	and    BYTE PTR [rax],al
   1400098c6:	ins    BYTE PTR es:[rdi],dx
   1400098c7:	add    BYTE PTR [rdi+0x0],ch
   1400098ca:	outs   dx,BYTE PTR ds:[rsi]
   1400098cb:	add    BYTE PTR [rdi+0x0],ah
   1400098ce:	and    DWORD PTR [rax],eax
   1400098d0:	and    BYTE PTR [rax],al
   1400098d2:	and    BYTE PTR [rax],al
   1400098d4:	rex.WR add BYTE PTR [rcx+0x0],r13b
   1400098d8:	ins    DWORD PTR es:[rdi],dx
   1400098d9:	add    BYTE PTR [rcx+0x0],ch
   1400098dc:	je     0x1400098de
   1400098de:	and    BYTE PTR [rax],al
   1400098e0:	imul   eax,DWORD PTR [rax],0x200073
   1400098e6:	and    eax,0x2c006400
   1400098eb:	add    BYTE PTR [rax],ah
   1400098ed:	add    BYTE PTR [rdx+0x0],ah
   1400098f0:	jne    0x1400098f2
   1400098f2:	je     0x1400098f4
   1400098f4:	and    BYTE PTR [rax],al
   1400098f6:	(bad)  
   1400098f7:	add    BYTE PTR [rip+0x73006c00],ah        # 0x1b30104fd
   1400098fd:	add    BYTE PTR [rdi],ah
   1400098ff:	add    BYTE PTR [rax],ah
   140009901:	add    BYTE PTR [rcx+0x0],ch
   140009904:	jae    0x140009906
   140009906:	and    BYTE PTR [rax],al
   140009908:	and    eax,0xa006400
   14000990d:	add    BYTE PTR [rax],al
   14000990f:	add    BYTE PTR [rbp+0x0],al
   140009912:	push   rdx
   140009913:	add    BYTE PTR [rdx+0x0],dl
   140009916:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14000991a:	cmp    al,BYTE PTR [rax]
   14000991c:	and    BYTE PTR [rax],al
   14000991e:	add    BYTE PTR [rbp+0x0],r14b
   140009922:	jo     0x140009924
   140009924:	ins    BYTE PTR es:[rdi],dx
   140009925:	add    BYTE PTR [rcx+0x0],ch
   140009928:	movsxd eax,DWORD PTR [rax]
   14000992a:	(bad)  
   14000992b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000992f:	add    BYTE PTR [rax],ah
   140009931:	add    BYTE PTR [rbp+0x0],ah
   140009934:	outs   dx,BYTE PTR ds:[rsi]
   140009935:	add    BYTE PTR [rax+rax*1+0x72],dh
   140009939:	add    BYTE PTR [rcx+0x0],bh
   14000993c:	and    BYTE PTR [rax],al
   14000993e:	imul   eax,DWORD PTR [rax],0x20006e
   140009944:	add    BYTE PTR fs:[rcx+0x0],ch
   140009948:	movsxd eax,DWORD PTR [rax]
   14000994a:	je     0x14000994c
   14000994c:	imul   eax,DWORD PTR [rax],0x6e006f
   140009952:	(bad)  
   140009953:	add    BYTE PTR [rdx+0x0],dh
   140009956:	jns    0x140009958
   140009958:	and    DWORD PTR [rax],eax
   14000995a:	and    BYTE PTR [rax],al
   14000995c:	and    eax,0x73006c00
   140009961:	add    BYTE PTR [rax],ah
   140009963:	add    BYTE PTR [rip+0x20003d00],bh        # 0x16000d669
   140009969:	add    BYTE PTR [rip+0x73006c00],ah        # 0x1b301056f
   14000996f:	add    BYTE PTR [rdx],cl
	...
   14000997d:	add    BYTE PTR [rax],al
   14000997f:	add    BYTE PTR [rbp+0x0],al
   140009982:	push   rdx
   140009983:	add    BYTE PTR [rdx+0x0],dl
   140009986:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14000998a:	cmp    al,BYTE PTR [rax]
   14000998c:	and    BYTE PTR [rax],al
   14000998e:	add    BYTE PTR [rcx+0x0],r13b
   140009992:	movsxd eax,DWORD PTR [rax]
   140009994:	je     0x140009996
   140009996:	imul   eax,DWORD PTR [rax],0x6e006f
   14000999c:	(bad)  
   14000999d:	add    BYTE PTR [rdx+0x0],dh
   1400099a0:	jns    0x1400099a2
   1400099a2:	and    BYTE PTR [rax],al
   1400099a4:	outs   dx,BYTE PTR ds:[rsi]
   1400099a5:	add    BYTE PTR [rdi+0x0],ch
   1400099a8:	je     0x1400099aa
   1400099aa:	and    BYTE PTR [rax],al
   1400099ac:	(bad)  
   1400099ad:	add    BYTE PTR [rax+rax*1+0x70],ch
   1400099b1:	add    BYTE PTR [rax+0x0],ch
   1400099b4:	(bad)  
   1400099b5:	add    BYTE PTR [rdx+0x0],ah
   1400099b8:	add    BYTE PTR gs:[rax+rax*1+0x69],dh
   1400099bd:	add    BYTE PTR [rdx+0x0],bh
   1400099c0:	add    BYTE PTR gs:[rax+rax*1+0x21],ah
   1400099c5:	add    BYTE PTR [rax],ah
   1400099c7:	add    BYTE PTR [rax],ch
   1400099c9:	add    BYTE PTR [rip+0x73006c00],ah        # 0x1b30105cf
   1400099cf:	add    BYTE PTR [rax],ah
   1400099d1:	add    BYTE PTR [rax+rax*1],bh
   1400099d4:	and    BYTE PTR [rax],al
   1400099d6:	and    eax,0x73006c00
   1400099db:	add    BYTE PTR [rcx],ch
   1400099dd:	add    BYTE PTR [rdx],cl
	...
   1400099ef:	add    BYTE PTR [rbp+0x0],al
   1400099f2:	push   rdx
   1400099f3:	add    BYTE PTR [rdx+0x0],dl
   1400099f6:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   1400099fa:	cmp    al,BYTE PTR [rax]
   1400099fc:	and    BYTE PTR [rax],al
   1400099fe:	push   rbp
   1400099ff:	add    BYTE PTR [rsi+0x0],ch
   140009a02:	je     0x140009a04
   140009a04:	add    BYTE PTR gs:[rdx+0x0],dh
   140009a08:	ins    DWORD PTR es:[rdi],dx
   140009a09:	add    BYTE PTR [rcx+0x0],ch
   140009a0c:	outs   dx,BYTE PTR ds:[rsi]
   140009a0d:	add    BYTE PTR [rcx+0x0],ah
   140009a10:	je     0x140009a12
   140009a12:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140009a17:	add    BYTE PTR [rax+0x0],dh
   140009a1a:	jb     0x140009a1c
   140009a1c:	add    BYTE PTR gs:[rsi+0x0],ah
   140009a20:	imul   eax,DWORD PTR [rax],0x200078
   140009a26:	add    BYTE PTR gs:[rsi+0x0],ch
   140009a2a:	je     0x140009a2c
   140009a2c:	jb     0x140009a2e
   140009a2e:	jns    0x140009a30
   140009a30:	and    BYTE PTR [rax],al
   140009a32:	imul   eax,DWORD PTR [rax],0x20006e
   140009a38:	add    BYTE PTR fs:[rcx+0x0],ch
   140009a3c:	movsxd eax,DWORD PTR [rax]
   140009a3e:	je     0x140009a40
   140009a40:	imul   eax,DWORD PTR [rax],0x6e006f
   140009a46:	(bad)  
   140009a47:	add    BYTE PTR [rdx+0x0],dh
   140009a4a:	jns    0x140009a4c
   140009a4c:	and    DWORD PTR [rax],eax
   140009a4e:	and    BYTE PTR [rax],al
   140009a50:	and    eax,0x73006c00
   140009a55:	add    BYTE PTR [rax],ah
   140009a57:	add    BYTE PTR [rcx+0x0],ch
   140009a5a:	jae    0x140009a5c
   140009a5c:	and    BYTE PTR [rax],al
   140009a5e:	outs   dx,BYTE PTR ds:[rsi]
   140009a5f:	add    BYTE PTR [rdi+0x0],ch
   140009a62:	je     0x140009a64
   140009a64:	and    BYTE PTR [rax],al
   140009a66:	jo     0x140009a68
   140009a68:	jb     0x140009a6a
   140009a6a:	add    BYTE PTR gs:[rsi+0x0],ah
   140009a6e:	imul   eax,DWORD PTR [rax],0x200078
   140009a74:	outs   dx,DWORD PTR ds:[rsi]
   140009a75:	add    BYTE PTR [rsi+0x0],ah
   140009a78:	and    BYTE PTR [rax],al
   140009a7a:	and    eax,0x73006c00
   140009a7f:	add    BYTE PTR [rdx],cl
	...
   140009a8d:	add    BYTE PTR [rax],al
   140009a8f:	add    BYTE PTR [rbp+0x0],al
   140009a92:	push   rdx
   140009a93:	add    BYTE PTR [rdx+0x0],dl
   140009a96:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140009a9a:	cmp    al,BYTE PTR [rax]
   140009a9c:	and    BYTE PTR [rax],al
   140009a9e:	add    BYTE PTR [rcx+0x0],r13b
   140009aa2:	movsxd eax,DWORD PTR [rax]
   140009aa4:	je     0x140009aa6
   140009aa6:	imul   eax,DWORD PTR [rax],0x6e006f
   140009aac:	(bad)  
   140009aad:	add    BYTE PTR [rdx+0x0],dh
   140009ab0:	jns    0x140009ab2
   140009ab2:	and    BYTE PTR [rax],al
   140009ab4:	movsxd eax,DWORD PTR [rax]
   140009ab6:	outs   dx,DWORD PTR ds:[rsi]
   140009ab7:	add    BYTE PTR [rsi+0x0],ch
   140009aba:	je     0x140009abc
   140009abc:	(bad)  
   140009abd:	add    BYTE PTR [rcx+0x0],ch
   140009ac0:	outs   dx,BYTE PTR ds:[rsi]
   140009ac1:	add    BYTE PTR [rbx+0x0],dh
   140009ac4:	and    BYTE PTR [rax],al
   140009ac6:	ja     0x140009ac8
   140009ac8:	outs   dx,DWORD PTR ds:[rsi]
   140009ac9:	add    BYTE PTR [rdx+0x0],dh
   140009acc:	add    BYTE PTR fs:[rax],ah
   140009acf:	add    BYTE PTR [rbx+0x0],dh
   140009ad2:	je     0x140009ad4
   140009ad4:	(bad)  
   140009ad5:	add    BYTE PTR [rdx+0x0],dh
   140009ad8:	je     0x140009ada
   140009ada:	imul   eax,DWORD PTR [rax],0x67006e
   140009ae0:	and    BYTE PTR [rax],al
   140009ae2:	ja     0x140009ae4
   140009ae4:	imul   eax,DWORD PTR [rax],0x680074
   140009aea:	and    BYTE PTR [rax],al
   140009aec:	ja     0x140009aee
   140009aee:	push   0x74006900
   140009af3:	add    BYTE PTR [rbp+0x0],ah
   140009af6:	jae    0x140009af8
   140009af8:	jo     0x140009afa
   140009afa:	(bad)  
   140009afb:	add    BYTE PTR [rbx+0x0],ah
   140009afe:	add    BYTE PTR gs:[rdx],cl
   140009b01:	add    BYTE PTR [rax],al
   140009b03:	add    BYTE PTR [rax],al
   140009b05:	add    BYTE PTR [rax],al
   140009b07:	add    BYTE PTR [rbp+0x52],al
   140009b0a:	push   rdx
   140009b0b:	rex.WRXB push r10
   140009b0d:	cmp    ah,BYTE PTR [rax]
   140009b0f:	push   rdi
   140009b10:	outs   dx,DWORD PTR ds:[rsi]
   140009b11:	jb     0x140009b77
   140009b13:	and    BYTE PTR [rbx+0x6f],ah
   140009b16:	jne    0x140009b86
   140009b18:	je     0x140009b3a
   140009b1a:	sub    BYTE PTR [rip+0x75343649],ah        # 0x1b534d169
   140009b20:	sub    DWORD PTR [rax],esp
   140009b22:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
   140009b29:	ins    BYTE PTR es:[rdi],dx
   140009b2a:	(bad)  
   140009b2b:	jb     0x140009b94
   140009b2d:	and    BYTE PTR gs:[rsi+0x6f],ah
   140009b31:	jb     0x140009b53
   140009b33:	jbe    0x140009b66
   140009b35:	and    BYTE PTR [rsi+0x6f],ah
   140009b38:	jb     0x140009ba7
   140009b3a:	(bad)  
   140009b3b:	je     0x140009b6b
   140009b3d:	or     al,BYTE PTR [rax]
   140009b3f:	add    BYTE PTR [rbp+0x52],al
   140009b42:	push   rdx
   140009b43:	rex.WRXB push r10
   140009b45:	cmp    ah,BYTE PTR [rax]
   140009b47:	rex.RX imul r13d,DWORD PTR [rsi+0x61],0x6f63206c
   140009b4f:	ins    DWORD PTR es:[rdi],dx
   140009b50:	jo     0x140009bc4
   140009b52:	gs jae 0x140009bc8
   140009b55:	gs and BYTE PTR fs:[rdx+rsi*2+0x69],dh
   140009b5b:	and    BYTE PTR gs:[rcx+0x73],ch
   140009b5f:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   140009b63:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140009b67:	gs or  al,BYTE PTR cs:[eax]
   140009b6c:	add    BYTE PTR [rax],al
   140009b6e:	add    BYTE PTR [rax],al
   140009b70:	rex.RB push r10
   140009b72:	push   rdx
   140009b73:	rex.WRXB push r10
   140009b75:	cmp    ah,BYTE PTR [rax]
   140009b77:	push   rbp
   140009b78:	outs   dx,BYTE PTR ds:[rsi]
   140009b79:	(bad)  
   140009b7a:	(bad)  
   140009b7b:	ins    BYTE PTR es:[rdi],dx
   140009b7c:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140009b81:	imul   bp,WORD PTR [rsi+0x64],0x6120
   140009b87:	and    BYTE PTR [rbp+0x75],cl
   140009b8a:	ins    BYTE PTR es:[rdi],dx
   140009b8b:	je     0x140009bf6
   140009b8d:	sub    eax,0x20666552
   140009b92:	jo     0x140009c03
   140009b94:	imul   ebp,DWORD PTR [rsi+0x74],0x74207265
   140009b9b:	push   0x73207461
   140009ba0:	push   0x646c756f
   140009ba5:	and    BYTE PTR [rdx+0x65],ah
   140009ba8:	and    BYTE PTR [rcx+0x6e],ch
   140009bab:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140009baf:	and    BYTE PTR [rax+0x75],cl
   140009bb2:	data16 ins WORD PTR es:[rdi],dx
   140009bb5:	(bad)  
   140009bb6:	outs   dx,BYTE PTR ds:[rsi]
   140009bb7:	and    BYTE PTR [rcx+riz*2+0x62],dh
   140009bbb:	ins    BYTE PTR es:[rdi],dx
   140009bbc:	gs or  al,BYTE PTR cs:[rax]
   140009bc0:	rex.RB push r10
   140009bc2:	push   rdx
   140009bc3:	rex.WRXB push r10
   140009bc5:	cmp    ah,BYTE PTR [rax]
   140009bc7:	push   rsp
   140009bc8:	outs   dx,DWORD PTR ds:[rsi]
   140009bc9:	outs   dx,DWORD PTR ds:[rsi]
   140009bca:	and    BYTE PTR [rbp+0x61],ch
   140009bcd:	outs   dx,BYTE PTR ds:[rsi]
   140009bce:	jns    0x140009bf0
   140009bd0:	jne    0x140009c40
   140009bd2:	imul   esi,DWORD PTR [rcx+0x75],0x754d2065
   140009bd9:	ins    BYTE PTR es:[rdi],dx
   140009bda:	je     0x140009c45
   140009bdc:	sub    eax,0x20666572
   140009be1:	jo     0x140009c52
   140009be3:	imul   ebp,DWORD PTR [rsi+0x74],0x2e737265
   140009bea:	or     al,BYTE PTR [rax]
   140009bec:	add    BYTE PTR [rax],al
   140009bee:	add    BYTE PTR [rax],al
   140009bf0:	rex.RB push r10
   140009bf2:	push   rdx
   140009bf3:	rex.WRXB push r10
   140009bf5:	cmp    ah,BYTE PTR [rax]
   140009bf7:	rex.W jne 0x140009c60
   140009bfa:	ins    WORD PTR es:[rdi],dx
   140009bfc:	(bad)  
   140009bfd:	outs   dx,BYTE PTR ds:[rsi]
   140009bfe:	and    BYTE PTR [rcx+riz*2+0x62],dh
   140009c02:	ins    BYTE PTR es:[rdi],dx
   140009c03:	and    BYTE PTR gs:[rsi+0x6f],ah
   140009c07:	jb     0x140009c29
   140009c09:	ins    DWORD PTR es:[rdi],dx
   140009c0a:	jne    0x140009c78
   140009c0c:	je     0x140009c77
   140009c0e:	sub    eax,0x20666572
   140009c13:	jo     0x140009c84
   140009c15:	imul   ebp,DWORD PTR [rsi+0x74],0x20737265
   140009c1c:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
   140009c23:	ins    BYTE PTR es:[rdi],dx
   140009c24:	(bad)  
   140009c25:	jb     0x140009c8e
   140009c27:	and    BYTE PTR gs:[rsi+0x6f],ah
   140009c2b:	jb     0x140009c4d
   140009c2d:	jbe    0x140009c60
   140009c2f:	and    BYTE PTR [rsi+0x6f],ah
   140009c32:	jb     0x140009ca1
   140009c34:	(bad)  
   140009c35:	je     0x140009c65
   140009c37:	or     al,BYTE PTR [rax]
   140009c39:	add    BYTE PTR [rax],al
   140009c3b:	add    BYTE PTR [rax],al
   140009c3d:	add    BYTE PTR [rax],al
   140009c3f:	add    BYTE PTR [rcx+0x76],al
   140009c42:	outs   dx,DWORD PTR ds:[rsi]
   140009c43:	imul   esp,DWORD PTR [rbp+riz*2+0x64],0x6e6f6320
   140009c4b:	jbe    0x140009cb2
   140009c4d:	jb     0x140009cc2
   140009c4f:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
   140009c56:	and    eax,0x64207549
   140009c5b:	outs   dx,DWORD PTR ds:[rsi]
   140009c5c:	ja     0x140009ccc
   140009c5e:	and    BYTE PTR [rax+0x6f],dh
   140009c61:	imul   ebp,DWORD PTR [rsi+0x74],0x20737265
   140009c68:	je     0x140009cd9
   140009c6a:	and    BYTE PTR [rcx+0x62],ah
   140009c6d:	jae    0x140009cde
   140009c6f:	ins    BYTE PTR es:[rdi],dx
   140009c70:	jne    0x140009ce6
   140009c72:	and    BYTE PTR gs:[rcx+0x6d],ch
   140009c76:	ins    DWORD PTR es:[rdi],dx
   140009c77:	gs imul esp,DWORD PTR fs:[rcx+0x74],0xa2e65
   140009c80:	rex.RB push r10
   140009c82:	push   rdx
   140009c83:	rex.WRXB push r10
   140009c85:	cmp    ah,BYTE PTR [rax]
   140009c87:	push   rbp
   140009c88:	outs   dx,BYTE PTR ds:[rsi]
   140009c89:	(bad)  
   140009c8a:	(bad)  
   140009c8b:	ins    BYTE PTR es:[rdi],dx
   140009c8c:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140009c91:	imul   bp,WORD PTR [rsi+0x64],0x6120
   140009c97:	and    BYTE PTR [rbx+0x68],al
   140009c9a:	(bad)  
   140009c9b:	jb     0x140009ce3
   140009c9d:	ins    BYTE PTR es:[rdi],dx
   140009c9e:	(bad)  
   140009c9f:	addr32 jae 0x140009cc2
   140009ca2:	je     0x140009d0c
   140009ca4:	(bad)  
   140009ca5:	je     0x140009cc7
   140009ca7:	jae    0x140009d11
   140009ca9:	outs   dx,DWORD PTR ds:[rsi]
   140009caa:	jne    0x140009d18
   140009cac:	and    BYTE PTR fs:[rdx+0x65],ah
   140009cb0:	and    BYTE PTR [rcx+0x6e],ch
   140009cb3:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140009cb7:	and    BYTE PTR [rax+0x75],cl
   140009cba:	data16 ins WORD PTR es:[rdi],dx
   140009cbd:	(bad)  
   140009cbe:	outs   dx,BYTE PTR ds:[rsi]
   140009cbf:	and    BYTE PTR [rcx+riz*2+0x62],dh
   140009cc3:	ins    BYTE PTR es:[rdi],dx
   140009cc4:	gs or  al,BYTE PTR cs:[rax]
   140009cc8:	rex.RB push r10
   140009cca:	push   rdx
   140009ccb:	rex.WRXB push r10
   140009ccd:	cmp    ah,BYTE PTR [rax]
   140009ccf:	push   rsp
   140009cd0:	outs   dx,DWORD PTR ds:[rsi]
   140009cd1:	outs   dx,DWORD PTR ds:[rsi]
   140009cd2:	and    BYTE PTR [rbp+0x61],ch
   140009cd5:	outs   dx,BYTE PTR ds:[rsi]
   140009cd6:	jns    0x140009cf8
   140009cd8:	jne    0x140009d48
   140009cda:	imul   esi,DWORD PTR [rcx+0x75],0x68432065
   140009ce1:	(bad)  
   140009ce2:	jb     0x140009d2a
   140009ce4:	ins    BYTE PTR es:[rdi],dx
   140009ce5:	(bad)  
   140009ce6:	addr32 jae 0x140009d17
   140009ce9:	or     al,BYTE PTR [rax]
   140009ceb:	add    BYTE PTR [rax],al
   140009ced:	add    BYTE PTR [rax],al
   140009cef:	add    BYTE PTR [rbp+0x52],al
   140009cf2:	push   rdx
   140009cf3:	rex.WRXB push r10
   140009cf5:	cmp    ah,BYTE PTR [rax]
   140009cf7:	rex.W jne 0x140009d60
   140009cfa:	ins    WORD PTR es:[rdi],dx
   140009cfc:	(bad)  
   140009cfd:	outs   dx,BYTE PTR ds:[rsi]
   140009cfe:	and    BYTE PTR [rcx+riz*2+0x62],dh
   140009d02:	ins    BYTE PTR es:[rdi],dx
   140009d03:	and    BYTE PTR gs:[rsi+0x6f],ah
   140009d07:	jb     0x140009d29
   140009d09:	movsxd ebp,DWORD PTR [rax+0x61]
   140009d0c:	jb     0x140009d81
   140009d0e:	(bad)  
   140009d0f:	data16 ins BYTE PTR es:[rdi],dx
   140009d11:	(bad)  
   140009d12:	addr32 jae 0x140009d35
   140009d15:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
   140009d1c:	ins    BYTE PTR es:[rdi],dx
   140009d1d:	(bad)  
   140009d1e:	jb     0x140009d87
   140009d20:	and    BYTE PTR gs:[rsi+0x6f],ah
   140009d24:	jb     0x140009d46
   140009d26:	jbe    0x140009d59
   140009d28:	and    BYTE PTR [rsi+0x6f],ah
   140009d2b:	jb     0x140009d9a
   140009d2d:	(bad)  
   140009d2e:	je     0x140009d5e
   140009d30:	or     al,BYTE PTR [rax]
   140009d32:	add    BYTE PTR [rax],al
   140009d34:	add    BYTE PTR [rax],al
   140009d36:	add    BYTE PTR [rax],al
   140009d38:	rex.RB push r10
   140009d3a:	push   rdx
   140009d3b:	rex.WRXB push r10
   140009d3d:	cmp    ah,BYTE PTR [rax]
   140009d3f:	rex.W jne 0x140009da8
   140009d42:	ins    WORD PTR es:[rdi],dx
   140009d44:	(bad)  
   140009d45:	outs   dx,BYTE PTR ds:[rsi]
   140009d46:	and    BYTE PTR [rcx+riz*2+0x62],dh
   140009d4a:	ins    BYTE PTR es:[rdi],dx
   140009d4b:	and    BYTE PTR gs:[rcx+0x73],ch
   140009d4f:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   140009d53:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140009d57:	and    BYTE PTR gs:[esi+0x6f],ah
   140009d5c:	jb     0x140009d7e
   140009d5e:	(bad)  
   140009d5f:	imul   ebp,DWORD PTR [rsi+0x61],0x66207972
   140009d66:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x6d726f66
   140009d6e:	(bad)  
   140009d6f:	je     0x140009d9f
   140009d71:	or     al,BYTE PTR [rax]
	...
   140009d7f:	add    BYTE PTR [rbp+0x52],al
   140009d82:	push   rdx
   140009d83:	rex.WRXB push r10
   140009d85:	cmp    ah,BYTE PTR [rax]
   140009d87:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009d89:	jne    0x140009df8
   140009d8b:	gs jb  0x140009def
   140009d8e:	je     0x140009df9
   140009d90:	outs   dx,DWORD PTR ds:[rsi]
   140009d91:	outs   dx,BYTE PTR ds:[rsi]
   140009d92:	and    BYTE PTR [rbx+0x6f],ah
   140009d95:	jne    0x140009e05
   140009d97:	je     0x140009db9
   140009d99:	sub    BYTE PTR [rip+0x75343649],ah        # 0x1b534d3e8
   140009d9f:	sub    DWORD PTR [rax],esp
   140009da1:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
   140009da8:	ins    BYTE PTR es:[rdi],dx
   140009da9:	(bad)  
   140009daa:	jb     0x140009e13
   140009dac:	and    BYTE PTR gs:[rsi+0x6f],ah
   140009db0:	jb     0x140009dd2
   140009db2:	push   rsi
   140009db3:	xor    DWORD PTR [rax],esp
   140009db5:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009db8:	jo     0x140009e2c
   140009dba:	gs jae 0x140009e30
   140009dbd:	gs and BYTE PTR fs:[rsi+0x6f],ah
   140009dc2:	jb     0x140009e31
   140009dc4:	(bad)  
   140009dc5:	je     0x140009df5
   140009dc7:	or     al,BYTE PTR [rax]
   140009dc9:	add    BYTE PTR [rax],al
   140009dcb:	add    BYTE PTR [rax],al
   140009dcd:	add    BYTE PTR [rax],al
   140009dcf:	add    BYTE PTR [rbp+0x52],al
   140009dd2:	push   rdx
   140009dd3:	rex.WRXB push r10
   140009dd5:	cmp    ah,BYTE PTR [rax]
   140009dd7:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009dd9:	jne    0x140009e48
   140009ddb:	gs jb  0x140009e3f
   140009dde:	je     0x140009e49
   140009de0:	outs   dx,DWORD PTR ds:[rsi]
   140009de1:	outs   dx,BYTE PTR ds:[rsi]
   140009de2:	and    BYTE PTR [rbx+0x6f],ah
   140009de5:	jne    0x140009e55
   140009de7:	je     0x140009e09
   140009de9:	sub    BYTE PTR [rip+0x75343649],ah        # 0x1b534d438
   140009def:	sub    DWORD PTR [rax],esp
   140009df1:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
   140009df8:	ins    BYTE PTR es:[rdi],dx
   140009df9:	(bad)  
   140009dfa:	jb     0x140009e63
   140009dfc:	and    BYTE PTR gs:[rsi+0x6f],ah
   140009e00:	jb     0x140009e22
   140009e02:	push   rsi
   140009e03:	xor    esp,DWORD PTR [rax]
   140009e05:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009e08:	jo     0x140009e7c
   140009e0a:	gs jae 0x140009e80
   140009e0d:	gs and BYTE PTR fs:[rsi+0x6f],ah
   140009e12:	jb     0x140009e81
   140009e14:	(bad)  
   140009e15:	je     0x140009e45
   140009e17:	or     al,BYTE PTR [rax]
   140009e19:	add    BYTE PTR [rax],al
   140009e1b:	add    BYTE PTR [rax],al
   140009e1d:	add    BYTE PTR [rax],al
   140009e1f:	add    BYTE PTR [rax+0x75],cl
   140009e22:	data16 ins WORD PTR es:[rdi],dx
   140009e25:	(bad)  
   140009e26:	outs   dx,BYTE PTR ds:[rsi]
   140009e27:	and    BYTE PTR [rdx+0x79],ah
   140009e2a:	je     0x140009e91
   140009e2c:	and    BYTE PTR [rbx+0x6f],ah
   140009e2f:	jne    0x140009e9f
   140009e31:	je     0x140009e53
   140009e33:	gs js  0x140009e99
   140009e36:	gs gs fs jae 0x140009e5b
   140009e3b:	(bad)  
   140009e3c:	jns    0x140009eb2
   140009e3e:	and    BYTE PTR gs:[rbx+0x61],ah
   140009e42:	jo     0x140009ea5
   140009e44:	movsxd ebp,DWORD PTR [rcx+0x74]
   140009e47:	jns    0x140009e53
   140009e49:	rex.XB push 0x46207261
   140009e4f:	ins    BYTE PTR es:[rdi],dx
   140009e50:	(bad)  
   140009e51:	addr32 jae 0x140009e8e
   140009e54:	and    BYTE PTR [rip+0x61540a75],ah        # 0x1a154a8cf
   140009e5a:	addr32 jae 0x140009e97
   140009e5d:	and    BYTE PTR [rip+0x524d0a75],ah        # 0x1924da8d8
   140009e63:	and    BYTE PTR [rax+0x6f],dl
   140009e66:	imul   ebp,DWORD PTR [rsi+0x74],0x3a737265
   140009e6d:	and    BYTE PTR [rip+0x52530a75],ah        # 0x19253a8e8
   140009e73:	and    BYTE PTR [rdi+0x66],cl
   140009e76:	data16 jae 0x140009ede
   140009e79:	je     0x140009eee
   140009e7b:	cmp    ah,BYTE PTR [rax]
   140009e7d:	and    eax,0xa75
	...
   140009e8e:	add    BYTE PTR [rax],al
   140009e90:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009e92:	jne    0x140009f01
   140009e94:	gs jb  0x140009ef8
   140009e97:	je     0x140009f02
   140009e99:	outs   dx,DWORD PTR ds:[rsi]
   140009e9a:	outs   dx,BYTE PTR ds:[rsi]
   140009e9b:	and    BYTE PTR [rdx+0x79],ah
   140009e9e:	je     0x140009f05
   140009ea0:	and    BYTE PTR [rbx+0x6f],ah
   140009ea3:	jne    0x140009f13
   140009ea5:	je     0x140009ec7
   140009ea7:	imul   ebp,DWORD PTR [rsi+0x20],0x65646f6e
   140009eae:	and    BYTE PTR [rip+0x6f642075],ah        # 0x1af64bf29
   140009eb4:	gs jae 0x140009ed7
   140009eb7:	outs   dx,BYTE PTR ds:[rsi]
   140009eb8:	outs   dx,DWORD PTR ds:[rsi]
   140009eb9:	je     0x140009edb
   140009ebb:	ins    DWORD PTR es:[rdi],dx
   140009ebc:	(bad)  
   140009ebd:	je     0x140009f22
   140009ebf:	push   0x65727020
   140009ec4:	jbe    0x140009f2f
   140009ec6:	outs   dx,DWORD PTR ds:[rsi]
   140009ec7:	jne    0x140009f3c
   140009ec9:	ins    BYTE PTR es:[rdi],dx
   140009eca:	jns    0x140009eec
   140009ecc:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009ecf:	jo     0x140009f46
   140009ed1:	je     0x140009f38
   140009ed3:	and    BYTE PTR fs:[rsi+0x61],dh
   140009ed7:	ins    BYTE PTR es:[rdi],dx
   140009ed8:	jne    0x140009f3f
   140009eda:	cmp    ah,BYTE PTR [rax]
   140009edc:	and    eax,0x3d212064
   140009ee1:	and    BYTE PTR [rip+0x6e450a64],ah        # 0x1ae45a94b
   140009ee7:	jne    0x140009f56
   140009ee9:	gs jb  0x140009f4d
   140009eec:	je     0x140009f57
   140009eee:	outs   dx,DWORD PTR ds:[rsi]
   140009eef:	outs   dx,BYTE PTR ds:[rsi]
   140009ef0:	and    BYTE PTR [rbx+0x6f],ah
   140009ef3:	jne    0x140009f63
   140009ef5:	je     0x140009f17
   140009ef7:	ja     0x140009f5a
   140009ef9:	jae    0x140009f1b
   140009efb:	and    eax,0x75343649
   140009f00:	or     al,BYTE PTR [rax]
   140009f02:	add    BYTE PTR [rax],al
   140009f04:	add    BYTE PTR [rax],al
   140009f06:	add    BYTE PTR [rax],al
   140009f08:	(bad)
   140009f0e:	je     0x140009f75
   140009f10:	and    BYTE PTR [rdi+0x66],ch
   140009f13:	data16 jae 0x140009f7b
   140009f16:	je     0x140009f38
   140009f18:	outs   dx,WORD PTR ds:[rsi]
   140009f1a:	jb     0x140009f3c
   140009f1c:	imul   ebp,DWORD PTR [rsi+0x64],0x25207865
   140009f23:	jne    0x140009f45
   140009f25:	sub    BYTE PTR [rip+0x69202975],ah        # 0x1a920c8a0
   140009f2b:	jae    0x140009f4d
   140009f2d:	je     0x140009f9e
   140009f2f:	outs   dx,DWORD PTR ds:[rsi]
   140009f30:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140009f34:	and    BYTE PTR gs:[esi+0x6f],ah
   140009f39:	jb     0x140009f5b
   140009f3b:	xor    esp,DWORD PTR [rax]
   140009f3d:	(bad)  
   140009f3e:	jns    0x140009fb4
   140009f40:	gs jae 0x140009f71
   140009f43:	or     al,BYTE PTR [rax]
	...
   140009f4d:	add    BYTE PTR [rax],al
   140009f4f:	add    BYTE PTR [rdi+rbp*2+0x74],dl
   140009f53:	(bad)  
   140009f54:	ins    BYTE PTR es:[rdi],dx
   140009f55:	and    BYTE PTR [rbx+0x68],al
   140009f58:	(bad)  
   140009f59:	jb     0x140009fa1
   140009f5b:	ins    BYTE PTR es:[rdi],dx
   140009f5c:	(bad)  
   140009f5d:	addr32 jae 0x140009f80
   140009f60:	(bad)  
   140009f61:	jns    0x140009fd7
   140009f63:	and    BYTE PTR gs:[rbx+0x6f],ah
   140009f67:	jne    0x140009fd7
   140009f69:	je     0x140009f8b
   140009f6b:	outs   dx,DWORD PTR fs:[rsi]
   140009f6d:	gs jae 0x140009f90
   140009f70:	outs   dx,BYTE PTR ds:[rsi]
   140009f71:	outs   dx,DWORD PTR ds:[rsi]
   140009f72:	je     0x140009f94
   140009f74:	ins    DWORD PTR es:[rdi],dx
   140009f75:	(bad)  
   140009f76:	je     0x140009fdb
   140009f78:	push   0x65727020
   140009f7d:	jbe    0x140009fe8
   140009f7f:	outs   dx,DWORD PTR ds:[rsi]
   140009f80:	jne    0x140009ff5
   140009f82:	ins    BYTE PTR es:[rdi],dx
   140009f83:	jns    0x140009fa5
   140009f85:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009f88:	jo     0x140009fff
   140009f8a:	je     0x140009ff1
   140009f8c:	and    BYTE PTR fs:[rsi+0x61],dh
   140009f90:	ins    BYTE PTR es:[rdi],dx
   140009f91:	jne    0x140009ff8
   140009f93:	cmp    ah,BYTE PTR [rax]
   140009f95:	and    eax,0x3d212064
   140009f9a:	and    BYTE PTR [rip+0xa64],ah        # 0x14000aa04
   140009fa0:	push   rsp
   140009fa1:	outs   dx,DWORD PTR ds:[rsi]
   140009fa2:	je     0x14000a005
   140009fa4:	ins    BYTE PTR es:[rdi],dx
   140009fa5:	and    BYTE PTR [rbx+0x68],al
   140009fa8:	(bad)  
   140009fa9:	jb     0x140009ff1
   140009fab:	ins    BYTE PTR es:[rdi],dx
   140009fac:	(bad)  
   140009fad:	addr32 jae 0x140009fd0
   140009fb0:	(bad)  
   140009fb1:	jns    0x14000a027
   140009fb3:	and    BYTE PTR gs:[rbx+0x6f],ah
   140009fb7:	jne    0x14000a027
   140009fb9:	je     0x140009fdb
   140009fbb:	outs   dx,DWORD PTR fs:[rsi]
   140009fbd:	gs jae 0x140009fe0
   140009fc0:	outs   dx,BYTE PTR ds:[rsi]
   140009fc1:	outs   dx,DWORD PTR ds:[rsi]
   140009fc2:	je     0x140009fe4
   140009fc4:	ins    DWORD PTR es:[rdi],dx
   140009fc5:	(bad)  
   140009fc6:	je     0x14000a02b
   140009fc8:	push   0x65727020
   140009fcd:	jbe    0x14000a038
   140009fcf:	outs   dx,DWORD PTR ds:[rsi]
   140009fd0:	jne    0x14000a045
   140009fd2:	ins    BYTE PTR es:[rdi],dx
   140009fd3:	jns    0x140009ff5
   140009fd5:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009fd8:	jo     0x14000a04f
   140009fda:	je     0x14000a041
   140009fdc:	and    BYTE PTR fs:[rsi+0x61],dh
   140009fe0:	ins    BYTE PTR es:[rdi],dx
   140009fe1:	jne    0x14000a048
   140009fe3:	cmp    ah,BYTE PTR [rax]
   140009fe5:	and    eax,0x21206449
   140009fea:	cmp    eax,0xa642520
   140009fef:	add    BYTE PTR [rdi+rbp*2+0x74],dl
   140009ff3:	(bad)  
   140009ff4:	ins    BYTE PTR es:[rdi],dx
   140009ff5:	and    BYTE PTR [rbp+0x52],cl
   140009ff8:	and    BYTE PTR [rax+0x6f],dh
   140009ffb:	imul   ebp,DWORD PTR [rsi+0x74],0x20737265
   14000a002:	(bad)  
   14000a003:	jns    0x14000a079
   14000a005:	and    BYTE PTR gs:[rbx+0x6f],ah
   14000a009:	jne    0x14000a079
   14000a00b:	je     0x14000a02d
   14000a00d:	outs   dx,DWORD PTR fs:[rsi]
   14000a00f:	gs jae 0x14000a032
   14000a012:	outs   dx,BYTE PTR ds:[rsi]
   14000a013:	outs   dx,DWORD PTR ds:[rsi]
   14000a014:	je     0x14000a036
   14000a016:	ins    DWORD PTR es:[rdi],dx
   14000a017:	(bad)  
   14000a018:	je     0x14000a07d
   14000a01a:	push   0x65727020
   14000a01f:	jbe    0x14000a08a
   14000a021:	outs   dx,DWORD PTR ds:[rsi]
   14000a022:	jne    0x14000a097
   14000a024:	ins    BYTE PTR es:[rdi],dx
   14000a025:	jns    0x14000a047
   14000a027:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a02a:	jo     0x14000a0a1
   14000a02c:	je     0x14000a093
   14000a02e:	and    BYTE PTR fs:[rsi+0x61],dh
   14000a032:	ins    BYTE PTR es:[rdi],dx
   14000a033:	jne    0x14000a09a
   14000a035:	cmp    ah,BYTE PTR [rax]
   14000a037:	and    eax,0x21206449
   14000a03c:	cmp    eax,0xa642520
	...
   14000a04d:	add    BYTE PTR [rax],al
   14000a04f:	add    BYTE PTR [rdi+rbp*2+0x74],dl
   14000a053:	(bad)  
   14000a054:	ins    BYTE PTR es:[rdi],dx
   14000a055:	and    BYTE PTR [rbx+0x52],dl
   14000a058:	and    BYTE PTR [rdi+0x66],ch
   14000a05b:	data16 jae 0x14000a0c3
   14000a05e:	je     0x14000a0d3
   14000a060:	and    BYTE PTR [rdx+0x79],ah
   14000a063:	je     0x14000a0ca
   14000a065:	and    BYTE PTR [rbx+0x6f],ah
   14000a068:	jne    0x14000a0d8
   14000a06a:	je     0x14000a08c
   14000a06c:	outs   dx,DWORD PTR fs:[rsi]
   14000a06e:	gs jae 0x14000a091
   14000a071:	outs   dx,BYTE PTR ds:[rsi]
   14000a072:	outs   dx,DWORD PTR ds:[rsi]
   14000a073:	je     0x14000a095
   14000a075:	ins    DWORD PTR es:[rdi],dx
   14000a076:	(bad)  
   14000a077:	je     0x14000a0dc
   14000a079:	push   0x65727020
   14000a07e:	jbe    0x14000a0e9
   14000a080:	outs   dx,DWORD PTR ds:[rsi]
   14000a081:	jne    0x14000a0f6
   14000a083:	ins    BYTE PTR es:[rdi],dx
   14000a084:	jns    0x14000a0a6
   14000a086:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a089:	jo     0x14000a100
   14000a08b:	je     0x14000a0f2
   14000a08d:	and    BYTE PTR fs:[rsi+0x61],dh
   14000a091:	ins    BYTE PTR es:[rdi],dx
   14000a092:	jne    0x14000a0f9
   14000a094:	cmp    ah,BYTE PTR [rax]
   14000a096:	and    eax,0x21206449
   14000a09b:	cmp    eax,0xa642520
	...
   14000a0b0:	push   rsp
   14000a0b1:	outs   dx,DWORD PTR ds:[rsi]
   14000a0b2:	je     0x14000a115
   14000a0b4:	ins    BYTE PTR es:[rdi],dx
   14000a0b5:	and    BYTE PTR [rdx+rsi*2+0x69],dh
   14000a0b9:	and    BYTE PTR gs:[rdx+0x79],ah
   14000a0bd:	je     0x14000a124
   14000a0bf:	and    BYTE PTR [rbx+0x6f],ah
   14000a0c2:	jne    0x14000a132
   14000a0c4:	je     0x14000a0e6
   14000a0c6:	outs   dx,DWORD PTR fs:[rsi]
   14000a0c8:	gs jae 0x14000a0eb
   14000a0cb:	outs   dx,BYTE PTR ds:[rsi]
   14000a0cc:	outs   dx,DWORD PTR ds:[rsi]
   14000a0cd:	je     0x14000a0ef
   14000a0cf:	ins    DWORD PTR es:[rdi],dx
   14000a0d0:	(bad)  
   14000a0d1:	je     0x14000a136
   14000a0d3:	push   0x74636120
   14000a0d8:	jne    0x14000a13b
   14000a0da:	ins    BYTE PTR es:[rdi],dx
   14000a0db:	and    BYTE PTR [rdx+0x79],ah
   14000a0de:	je     0x14000a145
   14000a0e0:	and    BYTE PTR [rdi+0x75],ch
   14000a0e3:	je     0x14000a155
   14000a0e5:	jne    0x14000a15b
   14000a0e7:	jae    0x14000a123
   14000a0e9:	and    BYTE PTR [rip+0x3d212075],ah        # 0x17d21c164
   14000a0ef:	and    BYTE PTR [rip+0xa6449],ah        # 0x1400b053e
	...
   14000a0fd:	add    BYTE PTR [rax],al
   14000a0ff:	add    BYTE PTR [rdi+rbp*2+0x74],dl
   14000a103:	(bad)  
   14000a104:	ins    BYTE PTR es:[rdi],dx
   14000a105:	and    BYTE PTR [rdx+0x79],ah
   14000a108:	je     0x14000a16f
   14000a10a:	and    BYTE PTR [rbx+0x6f],ah
   14000a10d:	jne    0x14000a17d
   14000a10f:	je     0x14000a131
   14000a111:	outs   dx,DWORD PTR fs:[rsi]
   14000a113:	gs jae 0x14000a136
   14000a116:	outs   dx,BYTE PTR ds:[rsi]
   14000a117:	outs   dx,DWORD PTR ds:[rsi]
   14000a118:	je     0x14000a13a
   14000a11a:	ins    DWORD PTR es:[rdi],dx
   14000a11b:	(bad)  
   14000a11c:	je     0x14000a181
   14000a11e:	push   0x65727020
   14000a123:	jbe    0x14000a18e
   14000a125:	outs   dx,DWORD PTR ds:[rsi]
   14000a126:	jne    0x14000a19b
   14000a128:	ins    BYTE PTR es:[rdi],dx
   14000a129:	jns    0x14000a14b
   14000a12b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a12e:	jo     0x14000a1a5
   14000a130:	je     0x14000a197
   14000a132:	and    BYTE PTR fs:[rsi+0x61],dh
   14000a136:	ins    BYTE PTR es:[rdi],dx
   14000a137:	jne    0x14000a19e
   14000a139:	cmp    ah,BYTE PTR [rax]
   14000a13b:	and    eax,0x3d212075
   14000a140:	and    BYTE PTR [rip+0x75343649],ah        # 0x1b534d78f
   14000a146:	or     al,BYTE PTR [rax]
	...
   14000a150:	add    BYTE PTR [rax],0x0
   14000a153:	add    BYTE PTR [rax],al
   14000a155:	add    BYTE PTR [rax],al
   14000a157:	add    BYTE PTR [rax],al
   14000a159:	add    BYTE PTR [rax],al
   14000a15c:	add    BYTE PTR [rax],al
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	add    BYTE PTR [rax],al
   14000a162:	and    BYTE PTR [rax],al
   14000a164:	add    BYTE PTR [rax],al
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	add    BYTE PTR [rax],al
   14000a16a:	add    BYTE PTR [rax],dl
	...
   14000a174:	adc    BYTE PTR [rax],al
   14000a176:	add    BYTE PTR [rax],al
   14000a178:	rex.RB push r10
   14000a17a:	push   rdx
   14000a17b:	rex.WRXB push r10
   14000a17d:	cmp    ah,BYTE PTR [rax]
   14000a17f:	push   rsp
   14000a180:	outs   dx,DWORD PTR ds:[rsi]
   14000a181:	outs   dx,DWORD PTR ds:[rsi]
   14000a182:	and    BYTE PTR [rbp+0x61],ch
   14000a185:	outs   dx,BYTE PTR ds:[rsi]
   14000a186:	jns    0x14000a1a8
   14000a188:	jne    0x14000a1f8
   14000a18a:	imul   esi,DWORD PTR [rcx+0x75],0x69532065
   14000a191:	outs   dx,BYTE PTR ds:[rsi]
   14000a192:	ins    BYTE PTR es:[edi],dx
   14000a194:	gs sub eax,0x20666572
   14000a19a:	outs   dx,DWORD PTR ds:[rsi]
   14000a19b:	data16 data16 jae 0x14000a204
   14000a19f:	je     0x14000a214
   14000a1a1:	or     al,BYTE PTR cs:[rax]
	...
   14000a1b0:	rex.RB push r10
   14000a1b2:	push   rdx
   14000a1b3:	rex.WRXB push r10
   14000a1b5:	cmp    ah,BYTE PTR [rax]
   14000a1b7:	rex.W jne 0x14000a220
   14000a1ba:	ins    WORD PTR es:[rdi],dx
   14000a1bc:	(bad)  
   14000a1bd:	outs   dx,BYTE PTR ds:[rsi]
   14000a1be:	and    BYTE PTR [rcx+riz*2+0x62],dh
   14000a1c2:	ins    BYTE PTR es:[rdi],dx
   14000a1c3:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000a1c7:	jb     0x14000a1e9
   14000a1c9:	jae    0x14000a234
   14000a1cb:	outs   dx,BYTE PTR ds:[rsi]
   14000a1cc:	ins    BYTE PTR es:[edi],dx
   14000a1ce:	gs sub eax,0x20666572
   14000a1d4:	outs   dx,DWORD PTR ds:[rsi]
   14000a1d5:	data16 data16 jae 0x14000a23e
   14000a1d9:	je     0x14000a24e
   14000a1db:	and    BYTE PTR [rcx+0x73],ch
   14000a1de:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000a1e2:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14000a1e6:	and    BYTE PTR gs:[esi+0x6f],ah
   14000a1eb:	jb     0x14000a20d
   14000a1ed:	jbe    0x14000a220
   14000a1ef:	and    BYTE PTR [rsi+0x6f],ah
   14000a1f2:	jb     0x14000a261
   14000a1f4:	(bad)  
   14000a1f5:	je     0x14000a225
   14000a1f7:	or     al,BYTE PTR [rax]
   14000a1f9:	add    BYTE PTR [rax],al
   14000a1fb:	add    BYTE PTR [rax],al
   14000a1fd:	add    BYTE PTR [rax],al
   14000a1ff:	add    BYTE PTR [rbp+0x52],al
   14000a202:	push   rdx
   14000a203:	rex.WRXB push r10
   14000a205:	cmp    ah,BYTE PTR [rax]
   14000a207:	push   rbp
   14000a208:	outs   dx,BYTE PTR ds:[rsi]
   14000a209:	(bad)  
   14000a20a:	(bad)  
   14000a20b:	ins    BYTE PTR es:[rdi],dx
   14000a20c:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000a211:	imul   bp,WORD PTR [rsi+0x64],0x6120
   14000a217:	and    BYTE PTR [rcx+riz*2+0x67],dh
   14000a21b:	and    BYTE PTR [rax+rbp*2+0x61],dh
   14000a21f:	je     0x14000a241
   14000a221:	jae    0x14000a28b
   14000a223:	outs   dx,DWORD PTR ds:[rsi]
   14000a224:	jne    0x14000a292
   14000a226:	and    BYTE PTR fs:[rdx+0x65],ah
   14000a22a:	and    BYTE PTR [rcx+0x6e],ch
   14000a22d:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14000a231:	and    BYTE PTR [rax+0x75],cl
   14000a234:	data16 ins WORD PTR es:[rdi],dx
   14000a237:	(bad)  
   14000a238:	outs   dx,BYTE PTR ds:[rsi]
   14000a239:	and    BYTE PTR [rcx+riz*2+0x62],dh
   14000a23d:	ins    BYTE PTR es:[rdi],dx
   14000a23e:	gs or  al,BYTE PTR cs:[rax]
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	add    BYTE PTR [rax],al
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	rex.RB push r10
   14000a24a:	push   rdx
   14000a24b:	rex.WRXB push r10
   14000a24d:	cmp    ah,BYTE PTR [rax]
   14000a24f:	push   rsp
   14000a250:	outs   dx,DWORD PTR ds:[rsi]
   14000a251:	outs   dx,DWORD PTR ds:[rsi]
   14000a252:	and    BYTE PTR [rbp+0x61],ch
   14000a255:	outs   dx,BYTE PTR ds:[rsi]
   14000a256:	jns    0x14000a278
   14000a258:	jne    0x14000a2c8
   14000a25a:	imul   esi,DWORD PTR [rcx+0x75],0x61742065
   14000a261:	addr32 jae 0x14000a292
   14000a264:	or     al,BYTE PTR [rax]
   14000a266:	add    BYTE PTR [rax],al
   14000a268:	rex.RB push r10
   14000a26a:	push   rdx
   14000a26b:	rex.WRXB push r10
   14000a26d:	cmp    ah,BYTE PTR [rax]
   14000a26f:	rex.W jne 0x14000a2d8
   14000a272:	ins    WORD PTR es:[rdi],dx
   14000a274:	(bad)  
   14000a275:	outs   dx,BYTE PTR ds:[rsi]
   14000a276:	and    BYTE PTR [rcx+riz*2+0x62],dh
   14000a27a:	ins    BYTE PTR es:[rdi],dx
   14000a27b:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000a27f:	jb     0x14000a2a1
   14000a281:	je     0x14000a2e4
   14000a283:	addr32 jae 0x14000a2a6
   14000a286:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
   14000a28d:	ins    BYTE PTR es:[rdi],dx
   14000a28e:	(bad)  
   14000a28f:	jb     0x14000a2f8
   14000a291:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000a295:	jb     0x14000a2b7
   14000a297:	jbe    0x14000a2ca
   14000a299:	and    BYTE PTR [rsi+0x6f],ah
   14000a29c:	jb     0x14000a30b
   14000a29e:	(bad)  
   14000a29f:	je     0x14000a2cf
   14000a2a1:	or     al,BYTE PTR [rax]
   14000a2a3:	add    BYTE PTR [rax],dh
   14000a2a5:	add    BYTE PTR [rip+0x0],bh        # 0x14000a2ab
   14000a2ab:	add    BYTE PTR [rax],al
   14000a2ad:	add    BYTE PTR [rax],al
   14000a2af:	add    BYTE PTR [rbp+0x52],al
   14000a2b2:	push   rdx
   14000a2b3:	rex.WRXB push r10
   14000a2b5:	cmp    ah,BYTE PTR [rax]
   14000a2b7:	rex.X (bad) 
   14000a2b9:	and    BYTE PTR fs:[rax+0x75],ch
   14000a2bd:	data16 ins WORD PTR es:[rdi],dx
   14000a2c0:	(bad)  
   14000a2c1:	outs   dx,BYTE PTR ds:[rsi]
   14000a2c2:	and    BYTE PTR [rcx+rbp*2+0x73],ch
   14000a2c6:	je     0x14000a2e9
   14000a2c8:	and    BYTE PTR [rax],ah
   14000a2ca:	push   rsp
   14000a2cb:	outs   dx,DWORD PTR ds:[rsi]
   14000a2cc:	outs   dx,DWORD PTR ds:[rsi]
   14000a2cd:	and    BYTE PTR [rbp+0x61],ch
   14000a2d0:	outs   dx,BYTE PTR ds:[rsi]
   14000a2d1:	jns    0x14000a2f3
   14000a2d3:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000a2d6:	gs jae 0x14000a307
   14000a2d9:	or     al,BYTE PTR [rax]
   14000a2db:	add    BYTE PTR [rax],al
   14000a2dd:	add    BYTE PTR [rax],al
   14000a2df:	add    BYTE PTR [rbp+0x52],al
   14000a2e2:	push   rdx
   14000a2e3:	rex.WRXB push r10
   14000a2e5:	cmp    ah,BYTE PTR [rax]
   14000a2e7:	rex.X (bad) 
   14000a2e9:	and    BYTE PTR fs:[rax+0x75],ch
   14000a2ed:	data16 ins WORD PTR es:[rdi],dx
   14000a2f0:	(bad)  
   14000a2f1:	outs   dx,BYTE PTR ds:[rsi]
   14000a2f2:	and    BYTE PTR [rcx+rbp*2+0x73],ch
   14000a2f6:	je     0x14000a319
   14000a2f8:	and    BYTE PTR [rax],ah
   14000a2fa:	push   rsp
   14000a2fb:	outs   dx,DWORD PTR ds:[rsi]
   14000a2fc:	outs   dx,DWORD PTR ds:[rsi]
   14000a2fd:	and    BYTE PTR [rsi+0x65],ah
   14000a300:	ja     0x14000a322
   14000a302:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000a305:	gs jae 0x14000a336
   14000a308:	or     al,BYTE PTR [rax]
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	add    BYTE PTR [rax],al
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	rex.RB push r10
   14000a312:	push   rdx
   14000a313:	rex.WRXB push r10
   14000a315:	cmp    ah,BYTE PTR [rax]
   14000a317:	rex.W jne 0x14000a380
   14000a31a:	ins    WORD PTR es:[rdi],dx
   14000a31c:	(bad)  
   14000a31d:	outs   dx,BYTE PTR ds:[rsi]
   14000a31e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a320:	ins    DWORD PTR es:[rdi],dx
   14000a321:	jo     0x14000a398
   14000a323:	je     0x14000a38a
   14000a325:	push   rsp
   14000a326:	(bad)  
   14000a327:	(bad)  
   14000a328:	ins    BYTE PTR es:[rdi],dx
   14000a329:	sub    BYTE PTR gs:[rcx],ch
   14000a32c:	and    BYTE PTR [rax+0x61],ch
   14000a32f:	jae    0x14000a351
   14000a331:	ins    DWORD PTR es:[rdi],dx
   14000a332:	imul   esi,DWORD PTR [rbx+0x63],0x75636c61
   14000a339:	ins    BYTE PTR es:[rdi],dx
   14000a33a:	(bad)  
   14000a33b:	je     0x14000a3a2
   14000a33d:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
   14000a342:	and    BYTE PTR [rbx+0x6f],ah
   14000a345:	jne    0x14000a3b5
   14000a347:	je     0x14000a369
   14000a349:	outs   dx,DWORD PTR ds:[rsi]
   14000a34a:	data16 and BYTE PTR [rbp+0x6e],ah
   14000a34e:	je     0x14000a3c2
   14000a350:	imul   esp,DWORD PTR [rbp+0x73],0xa2e
	...
   14000a35f:	add    BYTE PTR [rbp+0x52],al
   14000a362:	push   rdx
   14000a363:	rex.WRXB push r10
   14000a365:	cmp    ah,BYTE PTR [rax]
   14000a367:	rex.W jne 0x14000a3d0
   14000a36a:	ins    WORD PTR es:[rdi],dx
   14000a36c:	(bad)  
   14000a36d:	outs   dx,BYTE PTR ds:[rsi]
   14000a36e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a370:	ins    DWORD PTR es:[rdi],dx
   14000a371:	jo     0x14000a3e8
   14000a373:	je     0x14000a3da
   14000a375:	push   rsp
   14000a376:	(bad)  
   14000a377:	(bad)  
   14000a378:	ins    BYTE PTR es:[rdi],dx
   14000a379:	sub    BYTE PTR gs:[rcx],ch
   14000a37c:	and    BYTE PTR [rax+0x61],ch
   14000a37f:	jae    0x14000a3a1
   14000a381:	ins    DWORD PTR es:[rdi],dx
   14000a382:	imul   esi,DWORD PTR [rbx+0x63],0x75636c61
   14000a389:	ins    BYTE PTR es:[rdi],dx
   14000a38a:	(bad)  
   14000a38b:	je     0x14000a3f2
   14000a38d:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
   14000a392:	and    BYTE PTR [rbx+0x6f],ah
   14000a395:	jne    0x14000a405
   14000a397:	je     0x14000a3b9
   14000a399:	outs   dx,DWORD PTR ds:[rsi]
   14000a39a:	data16 and BYTE PTR [rbx+0x6f],ah
   14000a39e:	fs gs jae 0x14000a3d0
   14000a3a2:	or     al,BYTE PTR [rax]
   14000a3a4:	add    BYTE PTR [rax],al
   14000a3a6:	add    BYTE PTR [rax],al
   14000a3a8:	rex.RB push r10
   14000a3aa:	push   rdx
   14000a3ab:	rex.WRXB push r10
   14000a3ad:	cmp    ah,BYTE PTR [rax]
   14000a3af:	rex.W jne 0x14000a418
   14000a3b2:	ins    WORD PTR es:[rdi],dx
   14000a3b4:	(bad)  
   14000a3b5:	outs   dx,BYTE PTR ds:[rsi]
   14000a3b6:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000a3b8:	je     0x14000a42c
   14000a3ba:	outs   dx,DWORD PTR ds:[rsi]
   14000a3bb:	jo     0x14000a436
   14000a3bd:	sub    BYTE PTR [rcx],ch
   14000a3bf:	and    BYTE PTR [rax+0x61],ch
   14000a3c2:	jae    0x14000a3e4
   14000a3c4:	ins    DWORD PTR es:[rdi],dx
   14000a3c5:	(bad)  
   14000a3c6:	outs   dx,BYTE PTR ds:[rsi]
   14000a3c7:	ins    BYTE PTR es:[edi],dx
   14000a3c9:	gs and BYTE PTR fs:[rcx+riz*2+0x62],dh
   14000a3cf:	ins    BYTE PTR es:[rdi],dx
   14000a3d0:	gs or  al,BYTE PTR cs:[rax]
   14000a3d4:	add    BYTE PTR [rax],al
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	rex.W jne 0x14000a441
   14000a3db:	ins    WORD PTR es:[rdi],dx
   14000a3dd:	(bad)  
   14000a3de:	outs   dx,BYTE PTR ds:[rsi]
   14000a3df:	and    BYTE PTR [rcx+riz*2+0x62],dh
   14000a3e3:	ins    BYTE PTR es:[rdi],dx
   14000a3e4:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   14000a3e9:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14000a3ed:	gs or  al,BYTE PTR cs:[eax]
   14000a3f2:	add    BYTE PTR [rax],al
   14000a3f4:	add    BYTE PTR [rax],al
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	add    BYTE PTR [rax+0x20],0x10
   14000a3fc:	adc    BYTE PTR [rax],al
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	add    BYTE PTR [rax],al
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	pop    rax
   14000a405:	cmp    bl,BYTE PTR [rdi+0x55]
   14000a40b:	add    BYTE PTR [rdx],al
   14000a40d:	add    BYTE PTR [rax],al
   14000a40f:	add    BYTE PTR [rax+rax*1],ah
   14000a412:	add    BYTE PTR [rax],al
   14000a414:	add    BYTE PTR [rbp-0x67000000],ah
   14000a41a:	add    BYTE PTR [rax],al
   14000a41c:	add    BYTE PTR [rax],al
   14000a41e:	add    BYTE PTR [rax],al
   14000a420:	pop    rax
   14000a421:	cmp    bl,BYTE PTR [rdi+0x55]
   14000a427:	add    BYTE PTR [rip+0x18000000],cl        # 0x15800a42d
   14000a42d:	add    al,BYTE PTR [rax]
   14000a42f:	add    BYTE PTR [rax],bh
   14000a431:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a432:	add    BYTE PTR [rax],al
   14000a434:	cmp    BYTE PTR [rcx+0x0],bl
	...
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	movabs al,ds:0x0
	...
   14000a4b5:	add    BYTE PTR [rax],al
   14000a4b7:	add    BYTE PTR [rax],bl
   14000a4b9:	rol    BYTE PTR [rax],0x40
   14000a4bc:	add    DWORD PTR [rax],eax
	...
   14000a4ce:	add    BYTE PTR [rax],al
   14000a4d0:	mov    al,0x92
   14000a4d2:	add    BYTE PTR [rax+0x1],al
   14000a4d5:	add    BYTE PTR [rax],al
   14000a4d7:	add    BYTE PTR [rax+0x1400092],bh
   14000a4dd:	add    BYTE PTR [rax],al
   14000a4df:	add    al,bh
   14000a4e1:	xchg   edx,eax
   14000a4e2:	add    BYTE PTR [rax+0x1],al
   14000a4e5:	add    BYTE PTR [rax],al
   14000a4e7:	add    BYTE PTR [rdi],dl
	...
   14000a4f1:	xor    eax,0x0
	...
   14000a4fe:	add    BYTE PTR [rax],al
   14000a500:	push   rdx
   14000a501:	push   rbx
   14000a502:	rex.R push rbx
   14000a504:	(bad)  
   14000a505:	jno    0x14000a4bc
   14000a507:	sub    DWORD PTR [rdi-0x60b1a8b8],eax
   14000a50d:	in     al,0xaf
   14000a50f:	(bad)  [rip+0x1597bc3]        # 0x1415a20d8
   14000a515:	add    BYTE PTR [rax],al
   14000a517:	add    BYTE PTR [rax+0x57],cl
   14000a51a:	push   rdx
   14000a51b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a51d:	ins    DWORD PTR es:[rdi],dx
   14000a51e:	jo     0x14000a54e
   14000a520:	jo     0x14000a586
   14000a522:	(bad)  
	...
   14000a537:	add    BYTE PTR [rdi+0x43],al
   14000a53a:	push   rsp
   14000a53b:	rex.WR add BYTE PTR [rax],r10b
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a541:	jle    0x14000a543
   14000a543:	add    BYTE PTR [rsi],ch
   14000a545:	je     0x14000a5ac
   14000a547:	js     0x14000a5bd
   14000a549:	and    al,0x6d
   14000a54b:	outs   dx,BYTE PTR ds:[rsi]
   14000a54c:	add    BYTE PTR [rax],al
   14000a54e:	add    BYTE PTR [rax],al
   14000a550:	mov    al,0x8e
   14000a552:	add    BYTE PTR [rax],al
   14000a554:	jge    0x14000a556
   14000a556:	add    BYTE PTR [rax],al
   14000a558:	cs je  0x14000a5c0
   14000a55b:	js     0x14000a5d1
   14000a55d:	and    al,0x6d
   14000a55f:	outs   dx,BYTE PTR ds:[rsi]
   14000a560:	and    al,0x30
   14000a562:	xor    BYTE PTR [rax],al
   14000a564:	xor    BYTE PTR [rdi+0x700000],cl
   14000a56a:	add    BYTE PTR [rax],al
   14000a56c:	cs je  0x14000a5d4
   14000a56f:	js     0x14000a5e5
   14000a571:	and    al,0x78
   14000a573:	add    BYTE PTR [rax+0x2a00008f],ah
   14000a579:	add    BYTE PTR [rax],al
   14000a57b:	add    BYTE PTR [rsi],ch
   14000a57d:	je     0x14000a5e4
   14000a57f:	js     0x14000a5f5
   14000a581:	and    al,0x79
   14000a583:	add    BYTE PTR fs:[rax],al
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	add    BYTE PTR [rax+0x2b00000],dl
   14000a58e:	add    BYTE PTR [rax],al
   14000a590:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000a599:	add    BYTE PTR [rax],al
   14000a59b:	add    BYTE PTR [rax+0x10000092],dh
   14000a5a1:	add    BYTE PTR [rax],al
   14000a5a3:	add    BYTE PTR [rsi],ch
   14000a5a5:	xor    BYTE PTR [rax],dh
   14000a5a7:	movsxd esp,DWORD PTR [rsi+0x67]
   14000a5aa:	add    BYTE PTR [rax],al
   14000a5ac:	rcl    BYTE PTR [rdx+0x80000],0x0
   14000a5b3:	add    BYTE PTR [rsi],ch
   14000a5b5:	rex.XB push r10
   14000a5b7:	push   rsp
   14000a5b8:	and    al,0x58
   14000a5ba:	rex.XB
   14000a5bb:	add    BYTE PTR [r8],al
   14000a5be:	add    BYTE PTR [rax],al
   14000a5c0:	enter  0x92,0x0
   14000a5c4:	or     BYTE PTR [rax],al
   14000a5c6:	add    BYTE PTR [rax],al
   14000a5c8:	cs rex.XB push r10
   14000a5cb:	push   rsp
   14000a5cc:	and    al,0x58
   14000a5ce:	rex.XB
   14000a5cf:	rex.B
   14000a5d0:	add    BYTE PTR [r8],al
   14000a5d3:	add    al,dl
   14000a5d5:	xchg   edx,eax
   14000a5d6:	add    BYTE PTR [rax],al
   14000a5d8:	or     BYTE PTR [rax],al
   14000a5da:	add    BYTE PTR [rax],al
   14000a5dc:	cs rex.XB push r10
   14000a5df:	push   rsp
   14000a5e0:	and    al,0x58
   14000a5e2:	rex.XB pop r10
   14000a5e4:	add    BYTE PTR [rax],al
   14000a5e6:	add    BYTE PTR [rax],al
   14000a5e8:	fcom   DWORD PTR [rdx+0x80000]
   14000a5ee:	add    BYTE PTR [rax],al
   14000a5f0:	cs rex.XB push r10
   14000a5f3:	push   rsp
   14000a5f4:	and    al,0x58
   14000a5f6:	rex.WB
   14000a5f7:	add    BYTE PTR [r8],al
   14000a5fa:	add    BYTE PTR [rax],al
   14000a5fc:	loopne 0x14000a590
   14000a5fe:	add    BYTE PTR [rax],al
   14000a600:	or     BYTE PTR [rax],al
   14000a602:	add    BYTE PTR [rax],al
   14000a604:	cs rex.XB push r10
   14000a607:	push   rsp
   14000a608:	and    al,0x58
   14000a60a:	rex.WB
   14000a60b:	rex.B
   14000a60c:	add    BYTE PTR [r8],al
   14000a60f:	add    al,ch
   14000a611:	xchg   edx,eax
   14000a612:	add    BYTE PTR [rax],al
   14000a614:	or     BYTE PTR [rax],al
   14000a616:	add    BYTE PTR [rax],al
   14000a618:	cs rex.XB push r10
   14000a61b:	push   rsp
   14000a61c:	and    al,0x58
   14000a61e:	rex.WB pop r9
   14000a620:	add    BYTE PTR [rax],al
   14000a622:	add    BYTE PTR [rax],al
   14000a624:	lock xchg edx,eax
   14000a626:	add    BYTE PTR [rax],al
   14000a628:	or     BYTE PTR [rax],al
   14000a62a:	add    BYTE PTR [rax],al
   14000a62c:	cs rex.XB push r10
   14000a62f:	push   rsp
   14000a630:	and    al,0x58
   14000a632:	rex.WB pop r10
   14000a634:	add    BYTE PTR [rax],al
   14000a636:	add    BYTE PTR [rax],al
   14000a638:	clc    
   14000a639:	xchg   edx,eax
   14000a63a:	add    BYTE PTR [rax],al
   14000a63c:	pop    rsp
   14000a63d:	add    BYTE PTR [rax],al
   14000a63f:	add    BYTE PTR [rsi],ch
   14000a641:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14000a649:	add    BYTE PTR [rax],al
   14000a64b:	add    BYTE PTR [rax-0x6d],ah
   14000a64e:	add    BYTE PTR [rax],al
   14000a650:	movabs al,ds:0x746164722e000011
   14000a659:	(bad)  
   14000a65a:	add    BYTE PTR [rax],al
   14000a65c:	add    BYTE PTR [rbp+0x2500000],ah
   14000a662:	add    BYTE PTR [rax],al
   14000a664:	cs jb  0x14000a6cb
   14000a667:	(bad)  
   14000a668:	je     0x14000a6cb
   14000a66a:	and    al,0x7a
   14000a66c:	jp     0x14000a6e8
   14000a66e:	fs (bad) 
   14000a670:	add    BYTE PTR [eax],al
   14000a673:	add    BYTE PTR [rax-0x59],dl
   14000a676:	add    BYTE PTR [rax],al
   14000a678:	call   0x16e00a681
   14000a67d:	js     0x14000a6e3
   14000a67f:	(bad)  
   14000a680:	je     0x14000a6e3
   14000a682:	add    BYTE PTR [rax],al
   14000a684:	cmp    BYTE PTR [rax+rax*1+0x8400],ch
   14000a68b:	add    BYTE PTR [rsi],ch
   14000a68d:	js     0x14000a6f3
   14000a68f:	(bad)  
   14000a690:	je     0x14000a6f3
   14000a692:	and    al,0x78
   14000a694:	add    BYTE PTR [rax],al
   14000a696:	add    BYTE PTR [rax],al
   14000a698:	mov    esp,0x280000ac
   14000a69d:	add    BYTE PTR [rax],al
   14000a69f:	add    BYTE PTR [rsi],ch
   14000a6a1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000a6a9:	add    BYTE PTR [rax],al
   14000a6ab:	add    ah,ah
   14000a6ad:	lods   al,BYTE PTR ds:[rsi]
   14000a6ae:	add    BYTE PTR [rax],al
   14000a6b0:	adc    al,0x0
   14000a6b2:	add    BYTE PTR [rax],al
   14000a6b4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000a6bd:	add    BYTE PTR [rax],al
   14000a6bf:	add    al,bh
   14000a6c1:	lods   al,BYTE PTR ds:[rsi]
   14000a6c2:	add    BYTE PTR [rax],al
   14000a6c4:	mov    al,0x2
   14000a6c6:	add    BYTE PTR [rax],al
   14000a6c8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   14000a6d1:	add    BYTE PTR [rax],al
   14000a6d3:	add    BYTE PTR [rax+0x2a0000af],ch
   14000a6d9:	add    eax,0x692e0000
   14000a6de:	fs (bad) 
   14000a6e0:	je     0x14000a743
   14000a6e2:	and    al,0x36
   14000a6e4:	add    BYTE PTR [rax],al
   14000a6e6:	add    BYTE PTR [rax],al
   14000a6e8:	add    al,al
   14000a6ea:	add    BYTE PTR [rax],al
   14000a6ec:	jo     0x14000a6ef
   14000a6ee:	add    BYTE PTR [rax],al
   14000a6f0:	cs fs (bad) 
   14000a6f3:	je     0x14000a756
   14000a6f5:	add    BYTE PTR [rax],al
   14000a6f7:	add    BYTE PTR [rax-0x3f],dh
   14000a6fa:	add    BYTE PTR [rax],al
   14000a6fc:	add    BYTE PTR [rax],r8b
   14000a6ff:	add    BYTE PTR [rsi],ch
   14000a701:	fs (bad) 
   14000a703:	je     0x14000a766
   14000a705:	and    al,0x72
   14000a707:	add    al,al
   14000a709:	rol    DWORD PTR [rax],0x0
   14000a70c:	or     BYTE PTR [rsi],al
   14000a70e:	add    BYTE PTR [rax],al
   14000a710:	cs (bad) 
   14000a713:	jae    0x14000a715
   14000a715:	add    BYTE PTR [rax],al
   14000a717:	add    BYTE PTR [rax],al
   14000a719:	rol    BYTE PTR [rax],1
   14000a71b:	add    ah,ah
   14000a71d:	add    eax,DWORD PTR [rax]
   14000a71f:	add    BYTE PTR [rsi],ch
   14000a721:	jo     0x14000a787
   14000a723:	(bad)  
   14000a724:	je     0x14000a787
   14000a726:	add    BYTE PTR [rax],al
   14000a728:	add    al,ah
   14000a72a:	add    BYTE PTR [rax],al
   14000a72c:	lock add BYTE PTR [rax],al
   14000a72f:	add    BYTE PTR [rsi],ch
   14000a731:	jb     0x14000a7a6
   14000a733:	jb     0x14000a798
   14000a735:	and    al,0x30
   14000a737:	xor    DWORD PTR [rax],eax
   14000a739:	add    BYTE PTR [rax],al
   14000a73b:	add    al,dh
   14000a73d:	loopne 0x14000a73f
   14000a73f:	add    BYTE PTR [rax],bl
   14000a741:	(bad)  
   14000a742:	add    BYTE PTR [rax],al
   14000a744:	cs jb  0x14000a7ba
   14000a747:	jb     0x14000a7ac
   14000a749:	and    al,0x30
   14000a74b:	xor    al,BYTE PTR [rax]
   14000a74d:	add    BYTE PTR [rax],al
   14000a74f:	add    BYTE PTR [rcx],al
   14000a751:	add    eax,0x34050002
   14000a756:	add    DWORD PTR [rax],eax
   14000a758:	add    DWORD PTR [rdx],edx
   14000a75a:	add    eax,0xe421200
   14000a75f:	jo     0x14000a76e
   14000a761:	(bad)  
   14000a762:	or     al,0x50
   14000a764:	or     esi,DWORD PTR [rax]
   14000a766:	add    BYTE PTR [rax],al
   14000a768:	add    DWORD PTR [rcx+rax*1],eax
   14000a76b:	add    BYTE PTR [rdx+rax*2],al
   14000a76e:	add    BYTE PTR [rax],al
   14000a770:	add    DWORD PTR [rax],edx
   14000a772:	(bad)  
   14000a773:	add    BYTE PTR [rax],dl
   14000a775:	or     eax,DWORD PTR fs:[rax]
   14000a778:	adc    BYTE PTR [rdx+rcx*1],dh
   14000a77b:	add    BYTE PTR [rax],dl
   14000a77d:	jb     0x14000a78b
   14000a77f:	jo     0x14000a79a
   14000a781:	(bad)  
   14000a782:	or     al,BYTE PTR [rax]
   14000a784:	sbb    DWORD PTR [rcx],eax
   14000a786:	adc    eax,DWORD PTR [rax]
   14000a788:	or     eax,0x9e00bf0
   14000a78d:	rol    BYTE PTR [rdi],1
   14000a78f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360ac06
   14000a796:	add    dl,BYTE PTR [rax-0x8]
   14000a799:	lea    eax,[rax]
   14000a79b:	add    BYTE PTR [rax+0x1000000],al
   14000a7a1:	sbb    eax,0x741d000c
   14000a7a6:	or     eax,DWORD PTR [rax]
   14000a7a8:	sbb    eax,0x1d000a64
   14000a7ad:	push   rsp
   14000a7ae:	or     DWORD PTR [rax],eax
   14000a7b0:	sbb    eax,0x1d000834
   14000a7b5:	xor    bl,BYTE PTR [rcx]
   14000a7b7:	lock (bad) 
   14000a7b9:	loopne 0x14000a7d0
   14000a7bb:	rcr    BYTE PTR [rcx],0x25
   14000a7be:	or     DWORD PTR [rax],eax
   14000a7c0:	(bad)  
   14000a7c1:	add    DWORD PTR [rax+rax*1],ebx
   14000a7c4:	or     esi,eax
   14000a7c6:	or     eax,esp
   14000a7c8:	(bad)  
   14000a7c9:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360ac40
   14000a7d0:	add    dl,BYTE PTR [rax+0x0]
   14000a7d3:	add    al,bh
   14000a7d5:	lea    eax,[rax]
   14000a7d7:	add    al,dl
   14000a7d9:	add    BYTE PTR [rax],al
   14000a7db:	add    BYTE PTR [rcx],bl
   14000a7dd:	sub    eax,0x741f000b
   14000a7e2:	sbb    DWORD PTR [rax],eax
   14000a7e4:	(bad)  
   14000a7e5:	sbb    BYTE PTR fs:[rax],al
   14000a7e8:	(bad)  
   14000a7e9:	xor    al,0x17
   14000a7eb:	add    BYTE PTR [rdi],bl
   14000a7ed:	add    DWORD PTR [rdx],edx
   14000a7ef:	add    BYTE PTR [rax+rsi*8],dl
   14000a7f2:	adc    ah,al
   14000a7f4:	adc    BYTE PTR [rax+0x0],dl
   14000a7f7:	add    al,bh
   14000a7f9:	lea    eax,[rax]
   14000a7fb:	add    BYTE PTR [rax+0x19000000],cl
   14000a801:	(bad)  
   14000a802:	or     eax,0x6d742600
   14000a807:	add    BYTE PTR [rsi],ah
   14000a809:	fs ins BYTE PTR es:[rdi],dx
   14000a80b:	add    BYTE PTR [rsi],ah
   14000a80d:	xor    al,0x6a
   14000a80f:	add    BYTE PTR [rsi],ah
   14000a811:	add    DWORD PTR [rax+rax*1+0x18],esp
   14000a815:	lock (bad) 
   14000a817:	loopne 0x14000a82d
   14000a819:	rcl    BYTE PTR [rdx],1
   14000a81b:	rcl    BYTE PTR [rax],0x50
   14000a81e:	add    BYTE PTR [rax],al
   14000a820:	clc    
   14000a821:	lea    eax,[rax]
   14000a823:	add    BYTE PTR [rax],dl
   14000a825:	add    eax,DWORD PTR [rax]
   14000a827:	add    BYTE PTR [rcx],al
   14000a829:	(bad)  
   14000a82a:	or     BYTE PTR [rax],al
   14000a82c:	(bad)  
   14000a82d:	push   rsp
   14000a82e:	(bad)  
   14000a82f:	add    BYTE PTR [rsi],dl
   14000a831:	xor    al,0xd
   14000a833:	add    BYTE PTR [rsi],dl
   14000a835:	jb     0x14000a849
   14000a837:	loopne 0x14000a849
   14000a839:	jo     0x14000a84a
   14000a83b:	(bad)  
   14000a83c:	add    DWORD PTR [rdi],edx
   14000a83e:	or     al,BYTE PTR [rax]
   14000a840:	(bad)  
   14000a841:	push   rsp
   14000a842:	or     al,0x0
   14000a844:	(bad)  
   14000a845:	xor    al,0xb
   14000a847:	add    BYTE PTR [rdi],dl
   14000a849:	xor    dl,BYTE PTR [rbx]
   14000a84b:	lock adc eax,esp
   14000a84e:	(bad)  
   14000a850:	or     eax,0x1600bc0
   14000a855:	adc    BYTE PTR [rax],cl
   14000a857:	add    BYTE PTR [rax],dl
   14000a859:	xor    al,0xe
   14000a85b:	add    BYTE PTR [rax],dl
   14000a85d:	jb     0x14000a86b
   14000a85f:	lock or ah,al
   14000a862:	or     BYTE PTR [rax+0x7],dh
   14000a865:	(bad)  
   14000a866:	(bad)  
   14000a867:	push   rax
   14000a868:	add    DWORD PTR [rdi],edx
   14000a86a:	add    DWORD PTR [rax],eax
   14000a86c:	(bad)  
   14000a86d:	movabs ds:0x341c000a1c010000,al
   14000a876:	or     eax,0x15321c00
   14000a87b:	lock adc esp,eax
   14000a87e:	adc    eax,edx
   14000a880:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b60b4f7
   14000a887:	push   rax
   14000a888:	sbb    DWORD PTR [rsi],esi
   14000a88a:	or     eax,DWORD PTR [rax]
   14000a88c:	and    eax,0x25024c34
   14000a891:	add    DWORD PTR [rdx+0x2],eax
   14000a894:	adc    al,dh
   14000a896:	(bad)  
   14000a897:	loopne 0x14000a8a5
   14000a899:	ror    BYTE PTR [rdx],1
   14000a89b:	ror    BYTE PTR [rax],0x70
   14000a89e:	(bad)  
   14000a89f:	(bad)  
   14000a8a0:	(bad)  
   14000a8a1:	push   rax
   14000a8a2:	add    BYTE PTR [rax],al
   14000a8a4:	clc    
   14000a8a5:	lea    eax,[rax]
   14000a8a7:	add    BYTE PTR [rax],al
   14000a8a9:	adc    al,BYTE PTR [rax]
   14000a8ab:	add    BYTE PTR [rcx],bl
   14000a8ad:	sub    al,0x9
   14000a8af:	add    BYTE PTR [rbx],bl
   14000a8b1:	xor    al,0x4a
   14000a8b3:	add    BYTE PTR [rbx],bl
   14000a8b5:	add    DWORD PTR [rdx+0x0],eax
   14000a8b8:	or     al,0xe0
   14000a8ba:	or     dl,al
   14000a8bc:	or     BYTE PTR [rax+0x7],dh
   14000a8bf:	(bad)  
   14000a8c0:	(bad)  
   14000a8c1:	push   rax
   14000a8c2:	add    BYTE PTR [rax],al
   14000a8c4:	clc    
   14000a8c5:	lea    eax,[rax]
   14000a8c7:	add    BYTE PTR [rax],al
   14000a8c9:	add    al,BYTE PTR [rax]
   14000a8cb:	add    BYTE PTR [rcx],bl
   14000a8cd:	sbb    al,0x3
   14000a8cf:	add    BYTE PTR [rsi],cl
   14000a8d1:	add    DWORD PTR [rsi],esp
   14000a8d3:	add    BYTE PTR [rdx],al
   14000a8d5:	push   rax
   14000a8d6:	add    BYTE PTR [rax],al
   14000a8d8:	clc    
   14000a8d9:	lea    eax,[rax]
   14000a8db:	add    BYTE PTR [rax],ah
   14000a8dd:	add    DWORD PTR [rax],eax
   14000a8df:	add    BYTE PTR [rcx],al
   14000a8e1:	sbb    BYTE PTR [rdx],cl
   14000a8e3:	add    BYTE PTR [rax],bl
   14000a8e5:	xor    al,0xf
   14000a8e7:	add    BYTE PTR [rax],bl
   14000a8e9:	xor    dl,BYTE PTR [rax+rsi*8]
   14000a8ec:	adc    ah,al
   14000a8ee:	adc    al,dl
   14000a8f0:	(bad)  
   14000a8f1:	ror    BYTE PTR [rax+rsi*2],0xb
   14000a8f5:	(bad)  
   14000a8f6:	or     dl,BYTE PTR [rax+0x1]
   14000a8f9:	clts   
   14000a8fb:	add    BYTE PTR [rdi],cl
   14000a8fd:	fs (bad) 
   14000a8ff:	add    BYTE PTR [rdi],cl
   14000a901:	xor    al,0x6
   14000a903:	add    BYTE PTR [rdi],cl
   14000a905:	xor    cl,BYTE PTR [rbx]
   14000a907:	jo     0x14000a90a
   14000a909:	sbb    eax,0x741d000c
   14000a90e:	or     eax,0xc641d00
   14000a913:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d00b46d
   14000a919:	xor    al,0xa
   14000a91b:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f0c273
   14000a921:	loopne 0x14000a938
   14000a923:	rcr    BYTE PTR [rcx],0x36
   14000a926:	or     eax,DWORD PTR [rax]
   14000a928:	and    eax,0x25025a34
   14000a92d:	add    DWORD PTR [rax+0x2],edx
   14000a930:	adc    al,dh
   14000a932:	(bad)  
   14000a933:	loopne 0x14000a941
   14000a935:	ror    BYTE PTR [rdx],1
   14000a937:	ror    BYTE PTR [rax],0x70
   14000a93a:	(bad)  
   14000a93b:	(bad)  
   14000a93c:	(bad)  
   14000a93d:	push   rax
   14000a93e:	add    BYTE PTR [rax],al
   14000a940:	clc    
   14000a941:	lea    eax,[rax]
   14000a943:	add    BYTE PTR [rax+0x12],dh
   14000a946:	add    BYTE PTR [rax],al
   14000a948:	add    DWORD PTR [rax],ebx
   14000a94a:	or     al,BYTE PTR [rax]
   14000a94c:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   14000a950:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000a954:	sbb    BYTE PTR [rax+rcx*1],dh
   14000a957:	add    BYTE PTR [rax],bl
   14000a959:	xor    dl,BYTE PTR [rax+rsi*8]
   14000a95c:	adc    ah,al
   14000a95e:	adc    BYTE PTR [rax+0x1],dh
   14000a961:	(bad)  
   14000a962:	add    al,0x0
   14000a964:	(bad)  
   14000a965:	xor    al,0x8
   14000a967:	add    BYTE PTR [rsi],cl
   14000a969:	push   rdx
   14000a96a:	or     dh,BYTE PTR [rax+0x1]
   14000a96d:	sbb    DWORD PTR [rdx],ecx
   14000a96f:	add    BYTE PTR [rcx],bl
   14000a971:	je     0x14000a97c
   14000a973:	add    BYTE PTR [rcx],bl
   14000a975:	or     BYTE PTR fs:[rax],al
   14000a978:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000a97c:	sbb    DWORD PTR [rsi+rax*1],esi
   14000a97f:	add    BYTE PTR [rcx],bl
   14000a981:	xor    dl,BYTE PTR [rip+0xa1701e0]        # 0x14a17ab67
   14000a987:	add    BYTE PTR [rdi],dl
   14000a989:	xor    al,0x11
   14000a98b:	add    BYTE PTR [rdi],dl
   14000a98d:	push   rdx
   14000a98e:	adc    al,dh
   14000a990:	(bad)  
   14000a991:	loopne 0x14000a99f
   14000a993:	ror    BYTE PTR [rdx],1
   14000a995:	ror    BYTE PTR [rax],0x70
   14000a998:	(bad)  
   14000a999:	(bad)  
   14000a99a:	(bad)  
   14000a99b:	push   rax
   14000a99c:	add    DWORD PTR [rip+0x11d000a],ebx        # 0x1411da9ac
   14000a9a2:	adc    eax,DWORD PTR [rax]
   14000a9a4:	adc    eax,esi
   14000a9a6:	pavgb  mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c0b57d
   14000a9ad:	jo     0x14000a9b7
   14000a9af:	(bad)  
   14000a9b0:	(bad)  
   14000a9b1:	xor    BYTE PTR [rsi],al
   14000a9b3:	push   rax
   14000a9b4:	add    DWORD PTR [rsi],eax
   14000a9b6:	add    al,BYTE PTR [rax]
   14000a9b8:	(bad)  
   14000a9b9:	xor    al,BYTE PTR [rdx]
   14000a9bb:	xor    BYTE PTR [rcx],al
   14000a9bd:	adc    DWORD PTR [rcx],ecx
   14000a9bf:	add    BYTE PTR [rcx],dl
   14000a9c1:	(bad)  
   14000a9c2:	or     eax,0x9e00bf0
   14000a9c7:	rol    BYTE PTR [rdi],1
   14000a9c9:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14360ae40
   14000a9d0:	add    dh,BYTE PTR [rax]
   14000a9d2:	add    BYTE PTR [rax],al
   14000a9d4:	add    DWORD PTR [rdx],ecx
   14000a9d6:	add    al,0x0
   14000a9d8:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   14000a9dc:	add    eax,0x1000134
   14000a9e1:	adc    al,0xa
   14000a9e3:	add    BYTE PTR [rsp+rsi*1],dl
   14000a9e6:	adc    DWORD PTR [rax],eax
   14000a9e8:	adc    al,0x52
   14000a9ea:	adc    al,dh
   14000a9ec:	(bad)  
   14000a9ed:	loopne 0x14000a9fb
   14000a9ef:	ror    BYTE PTR [rdx],1
   14000a9f1:	ror    BYTE PTR [rax],0x70
   14000a9f4:	(bad)  
   14000a9f5:	(bad)  
   14000a9f6:	(bad)  
   14000a9f7:	push   rax
   14000a9f8:	sbb    DWORD PTR [rbx],ebp
   14000a9fa:	or     al,0x0
   14000a9fc:	sbb    al,0x64
   14000a9fe:	adc    DWORD PTR [rax],eax
   14000aa00:	sbb    al,0x54
   14000aa02:	adc    BYTE PTR [rax],al
   14000aa04:	sbb    al,0x34
   14000aa06:	ltr    WORD PTR [rdx+rsi*2]
   14000aa0a:	sbb    al,dh
   14000aa0c:	(bad)  
   14000aa0d:	loopne 0x14000aa23
   14000aa0f:	rcl    BYTE PTR [rdx],1
   14000aa11:	rcl    BYTE PTR [rax],0x70
   14000aa14:	clc    
   14000aa15:	lea    eax,[rax]
   14000aa17:	add    BYTE PTR [rax],bh
   14000aa19:	add    BYTE PTR [rax],al
   14000aa1b:	add    BYTE PTR [rcx],al
   14000aa1d:	sbb    al,BYTE PTR [rip+0x16821a00]        # 0x15682c423
   14000aa23:	jo     0x14000aa3a
   14000aa25:	(bad)  
   14000aa26:	adc    al,0x50
   14000aa28:	adc    esi,DWORD PTR [rax]
   14000aa2a:	add    BYTE PTR [rax],al
   14000aa2c:	add    DWORD PTR [rax],ebx
   14000aa2e:	or     al,BYTE PTR [rax]
   14000aa30:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   14000aa34:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000aa38:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000aa3b:	add    BYTE PTR [rax],bl
   14000aa3d:	xor    dl,BYTE PTR [rax+rsi*8]
   14000aa40:	adc    ah,al
   14000aa42:	adc    BYTE PTR [rax+0x1],dh
   14000aa45:	or     al,BYTE PTR [rax+rax*1]
   14000aa48:	or     dh,BYTE PTR [rax+rcx*1]
   14000aa4b:	add    BYTE PTR [rdx],cl
   14000aa4d:	push   rdx
   14000aa4e:	(bad)  
   14000aa4f:	jo     0x14000aa52
   14000aa51:	sbb    al,0xc
   14000aa53:	add    BYTE PTR [rsp+riz*2],bl
   14000aa56:	or     eax,0xc541c00
   14000aa5b:	add    BYTE PTR [rsp+rsi*1],bl
   14000aa5e:	or     eax,DWORD PTR [rax]
   14000aa60:	sbb    al,0x32
   14000aa62:	sbb    al,dh
   14000aa64:	(bad)  
   14000aa65:	loopne 0x14000aa7b
   14000aa67:	rcl    BYTE PTR [rdx],1
   14000aa69:	rcl    BYTE PTR [rax],0x70
   14000aa6c:	sbb    DWORD PTR [rdx],ebx
   14000aa6e:	(bad)  
   14000aa6f:	add    BYTE PTR [rbx],cl
   14000aa71:	push   rdx
   14000aa72:	(bad)  
   14000aa73:	loopne 0x14000aa7a
   14000aa75:	jo     0x14000aa7b
   14000aa77:	(bad)  
   14000aa78:	add    edx,DWORD PTR [rax+0x2]
   14000aa7b:	xor    al,bh
   14000aa7d:	lea    eax,[rax]
   14000aa7f:	add    BYTE PTR [rax],ch
   14000aa81:	add    BYTE PTR [rax],al
   14000aa83:	add    BYTE PTR [rcx],al
   14000aa85:	add    eax,0x74050002
   14000aa8a:	add    DWORD PTR [rax],eax
   14000aa8c:	add    DWORD PTR [rsi],ebx
   14000aa8e:	or     al,BYTE PTR [rax]
   14000aa90:	(bad)  
   14000aa91:	xor    al,0xe
   14000aa93:	add    BYTE PTR [rsi],bl
   14000aa95:	xor    bl,BYTE PTR [rdx]
   14000aa97:	lock sbb al,ah
   14000aa9a:	(bad)  
   14000aa9b:	rcl    BYTE PTR [rax+rax*8],1
   14000aa9e:	adc    dh,BYTE PTR [rax+0x11]
   14000aaa1:	(bad)  
   14000aaa2:	adc    BYTE PTR [rax+0x1],dl
   14000aaa5:	and    cl,BYTE PTR [rdx]
   14000aaa7:	add    BYTE PTR [rdx],ah
   14000aaa9:	xor    al,0x19
   14000aaab:	add    BYTE PTR [rdx],ah
   14000aaad:	rcr    BYTE PTR [rsi],cl
   14000aaaf:	lock sbb al,0xe0
   14000aab2:	sbb    dl,al
   14000aab4:	sbb    al,al
   14000aab6:	(bad)  
   14000aab7:	jo     0x14000aace
   14000aab9:	(bad)  
   14000aaba:	adc    al,0x50
   14000aabc:	add    DWORD PTR [rbx],ebx
   14000aabe:	add    eax,0x17a21b00
   14000aac3:	jo     0x14000aadb
   14000aac5:	(bad)  
   14000aac6:	adc    eax,0x301450
   14000aacb:	add    BYTE PTR [rcx],al
   14000aacd:	sbb    al,0xc
   14000aacf:	add    BYTE PTR [rsp+riz*2],bl
   14000aad2:	ltr    WORD PTR [rsp+rdx*2]
   14000aad6:	(bad)  
   14000aad7:	add    BYTE PTR [rsp+rsi*1],bl
   14000aada:	or     eax,0x18521c00
   14000aadf:	lock (bad) 
   14000aae1:	loopne 0x14000aaf7
   14000aae3:	rcl    BYTE PTR [rdx],1
   14000aae5:	rcl    BYTE PTR [rax],0x70
   14000aae8:	sbb    DWORD PTR [rdi],ebp
   14000aaea:	or     DWORD PTR [rax],eax
   14000aaec:	sbb    eax,0x1d009234
   14000aaf1:	add    DWORD PTR [rdx+0x14f01600],ecx
   14000aaf7:	loopne 0x14000ab0b
   14000aaf9:	jo     0x14000ab0c
   14000aafb:	(bad)  
   14000aafc:	adc    BYTE PTR [rax+0x0],dl
   14000aaff:	add    al,bh
   14000ab01:	lea    eax,[rax]
   14000ab03:	add    BYTE PTR [rax+0x4],al
   14000ab06:	add    BYTE PTR [rax],al
   14000ab08:	sbb    DWORD PTR [rbx],esp
   14000ab0a:	add    al,BYTE PTR [rax]
   14000ab0c:	adc    DWORD PTR [rcx],eax
   14000ab0e:	xchg   DWORD PTR [rax],eax
   14000ab10:	clc    
   14000ab11:	lea    eax,[rax]
   14000ab13:	add    BYTE PTR [rax],ah
   14000ab15:	add    al,0x0
   14000ab17:	add    BYTE PTR [rcx],al
   14000ab19:	and    BYTE PTR [rax+rax*1],cl
   14000ab1c:	and    BYTE PTR [rsp+rcx*1+0x0],ah
   14000ab20:	and    BYTE PTR [rbx+rcx*1+0x0],dl
   14000ab24:	and    BYTE PTR [rdx+rcx*1],dh
   14000ab27:	add    BYTE PTR [rax],ah
   14000ab29:	xor    bl,BYTE PTR [rax+rsi*8]
   14000ab2c:	sbb    ah,al
   14000ab2e:	sbb    al,dl
   14000ab30:	(bad)  
   14000ab31:	rcl    BYTE PTR [rax+rsi*2],0x1
   14000ab35:	(bad)  
   14000ab36:	or     DWORD PTR [rax],eax
   14000ab38:	(bad)  
   14000ab39:	(bad)  
   14000ab3a:	sbb    esi,eax
   14000ab3c:	sbb    eax,esp
   14000ab3e:	(bad)  
   14000ab3f:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x15270bf05
   14000ab45:	(bad)  
   14000ab46:	adc    DWORD PTR [rax+0x10],edx
   14000ab49:	xor    BYTE PTR [rax],al
   14000ab4b:	add    BYTE PTR [rcx],al
   14000ab4d:	add    al,0x1
   14000ab4f:	add    BYTE PTR [rdx+rax*4],al
   14000ab52:	add    BYTE PTR [rax],al
   14000ab54:	add    DWORD PTR [rdx],ecx
   14000ab56:	add    al,0x0
   14000ab58:	or     dh,BYTE PTR [rsi+rax*1]
   14000ab5b:	add    BYTE PTR [rdx],cl
   14000ab5d:	xor    al,BYTE PTR [rsi]
   14000ab5f:	jo     0x14000ab62
   14000ab61:	(bad)  
   14000ab62:	add    al,BYTE PTR [rax]
   14000ab64:	(bad)  
   14000ab65:	jb     0x14000ab69
   14000ab67:	xor    BYTE PTR [rcx],al
   14000ab69:	add    al,0x1
   14000ab6b:	add    BYTE PTR [rdx+riz*2],al
   14000ab6e:	add    BYTE PTR [rax],al
   14000ab70:	or     DWORD PTR [rcx],ebx
   14000ab72:	or     al,BYTE PTR [rax]
   14000ab74:	sbb    esp,eax
   14000ab76:	or     eax,DWORD PTR [rax]
   14000ab78:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14000ab7c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14000ab80:	sbb    DWORD PTR [rax+rcx*1],esi
   14000ab83:	add    BYTE PTR [rcx],bl
   14000ab85:	push   rdx
   14000ab86:	adc    eax,0x8bb6e0
   14000ab8b:	add    BYTE PTR [rcx],al
   14000ab8d:	add    BYTE PTR [rax],al
   14000ab8f:	add    BYTE PTR [rcx-0x7b],cl
   14000ab92:	add    BYTE PTR [rax],al
   14000ab94:	mov    edx,0x36000086
   14000ab99:	pop    QWORD PTR [rax]
   14000ab9b:	add    BYTE PTR [rdx+0x1000086],bh
   14000aba1:	(bad)  
   14000aba2:	add    al,BYTE PTR [rax]
   14000aba4:	(bad)  
   14000aba5:	xor    al,BYTE PTR [rdx]
   14000aba7:	push   rax
   14000aba8:	add    DWORD PTR [rax],eax
   14000abaa:	add    BYTE PTR [rax],al
   14000abac:	adc    DWORD PTR [rdx],ecx
   14000abae:	add    al,0x0
   14000abb0:	or     dh,BYTE PTR [rsi+rax*1]
   14000abb3:	add    BYTE PTR [rdx],cl
   14000abb5:	xor    al,BYTE PTR [rsi]
   14000abb7:	jo     0x14000ab6f
   14000abb9:	mov    eax,DWORD PTR [rax]
   14000abbb:	add    BYTE PTR [rcx],al
   14000abbd:	add    BYTE PTR [rax],al
   14000abbf:	add    BYTE PTR [rbp-0x15ffff79],ah
   14000abc5:	xchg   DWORD PTR [rax],eax
   14000abc7:	add    BYTE PTR [rdx-0x71],bl
   14000abca:	add    BYTE PTR [rax],al
   14000abcc:	add    BYTE PTR [rax],al
   14000abce:	add    BYTE PTR [rax],al
   14000abd0:	or     DWORD PTR [rcx+rax*1],eax
   14000abd3:	add    BYTE PTR [rdx+riz*1],al
   14000abd6:	add    BYTE PTR [rax],al
   14000abd8:	mov    dh,0x8b
   14000abda:	add    BYTE PTR [rax],al
   14000abdc:	add    DWORD PTR [rax],eax
   14000abde:	add    BYTE PTR [rax],al
   14000abe0:	cmp    al,0x89
   14000abe2:	add    BYTE PTR [rax],al
   14000abe4:	jb     0x14000ab6f
   14000abe6:	add    BYTE PTR [rax],al
   14000abe8:	add    DWORD PTR [rax],eax
   14000abea:	add    BYTE PTR [rax],al
   14000abec:	jb     0x14000ab77
   14000abee:	add    BYTE PTR [rax],al
   14000abf0:	or     DWORD PTR [rdx],ecx
   14000abf2:	add    al,0x0
   14000abf4:	or     dh,BYTE PTR [rsi+rax*1]
   14000abf7:	add    BYTE PTR [rdx],cl
   14000abf9:	xor    al,BYTE PTR [rsi]
   14000abfb:	jo     0x14000abb3
   14000abfd:	mov    eax,DWORD PTR [rax]
   14000abff:	add    BYTE PTR [rcx],al
   14000ac01:	add    BYTE PTR [rax],al
   14000ac03:	add    BYTE PTR [rbp-0x76],cl
   14000ac06:	add    BYTE PTR [rax],al
   14000ac08:	or     BYTE PTR [rdx-0x70800000],0x0
   14000ac0f:	add    BYTE PTR [rax+0x100008a],al
   14000ac15:	or     eax,0x340d0004
   14000ac1a:	or     DWORD PTR [rax],eax
   14000ac1c:	or     eax,0x1500632
   14000ac21:	or     al,0x2
   14000ac23:	add    BYTE PTR [rcx+rax*1],cl
   14000ac26:	adc    DWORD PTR [rax],eax
   14000ac28:	add    DWORD PTR [rax],eax
   14000ac2a:	add    BYTE PTR [rax],al
   14000ac2c:	add    BYTE PTR [rax],al
   14000ac2e:	add    BYTE PTR [rax],al
   14000ac30:	add    DWORD PTR [rcx+rax*1],eax
   14000ac33:	add    BYTE PTR [rdx+rdx*1],al
   14000ac36:	add    BYTE PTR [rax],al
   14000ac38:	add    BYTE PTR [rax],al
   14000ac3a:	add    BYTE PTR [rax],al
   14000ac3c:	jo     0x14000abff
   14000ac3e:	add    BYTE PTR [rax],al
   14000ac40:	add    BYTE PTR [rax],al
   14000ac42:	add    BYTE PTR [rax],al
   14000ac44:	(bad)  
   14000ac45:	(bad)  
   14000ac46:	(bad)  
   14000ac47:	inc    DWORD PTR [rax]
   14000ac49:	add    BYTE PTR [rax],al
   14000ac4b:	add    BYTE PTR [rax],bl
   14000ac4d:	add    BYTE PTR [rax],al
   14000ac4f:	add    BYTE PTR [rdx],dh
   14000ac51:	mov    BYTE PTR [rax],al
	...
   14000ac63:	add    al,ah
   14000ac65:	(bad)  
   14000ac66:	add    BYTE PTR [rax],al
   14000ac68:	add    BYTE PTR [rax],al
   14000ac6a:	add    BYTE PTR [rax],al
   14000ac6c:	sub    BYTE PTR [rax+rax*1+0x0],0x0
	...
   14000ac80:	add    al,BYTE PTR [rax]
   14000ac82:	add    BYTE PTR [rax],al
   14000ac84:	cwde   
   14000ac85:	lods   al,BYTE PTR ds:[rsi]
   14000ac86:	add    BYTE PTR [rax],al
   14000ac88:	cmp    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000ac97:	add    BYTE PTR [rax],dl
   14000ac99:	add    BYTE PTR [rax],al
   14000ac9b:	add    BYTE PTR [rax+0xc1],dl
   14000aca1:	add    BYTE PTR [rax],al
   14000aca3:	add    bh,bh
   14000aca5:	(bad)  
   14000aca6:	(bad)  
   14000aca7:	inc    DWORD PTR [rax]
   14000aca9:	add    BYTE PTR [rax],al
   14000acab:	add    BYTE PTR [rax],bl
   14000acad:	add    BYTE PTR [rax],al
   14000acaf:	add    BYTE PTR [rdx+rax*4+0x0],al
   14000acb6:	add    BYTE PTR [rax],al
   14000acb8:	add    BYTE PTR [rax],al
   14000acba:	add    BYTE PTR [rax],al
   14000acbc:	clc    
   14000acbd:	lods   al,BYTE PTR ds:[rsi]
	...
   14000acc6:	add    BYTE PTR [rax],al
   14000acc8:	(bad)  
   14000acc9:	mov    al,0x0
   14000accb:	add    BYTE PTR [rax],al
   14000accd:	nop
   14000acce:	add    BYTE PTR [rax],al
   14000acd0:	clc    
   14000acd1:	lods   eax,DWORD PTR ds:[rsi]
	...
   14000acda:	add    BYTE PTR [rax],al
   14000acdc:	(bad)  
   14000acdd:	mov    dl,0x0
   14000acdf:	add    BYTE PTR [rax],al
   14000ace1:	xchg   ecx,eax
	...
   14000acf6:	add    BYTE PTR [rax],al
   14000acf8:	imul   BYTE PTR [rdi+0x0]
   14000acfe:	add    BYTE PTR [rax],al
   14000ad00:	add    al,0xb0
   14000ad02:	add    BYTE PTR [rax],al
   14000ad04:	add    BYTE PTR [rax],al
   14000ad06:	add    BYTE PTR [rax],al
   14000ad08:	adc    al,0xb0
   14000ad0a:	add    BYTE PTR [rax],al
   14000ad0c:	add    BYTE PTR [rax],al
   14000ad0e:	add    BYTE PTR [rax],al
   14000ad10:	xor    dh,BYTE PTR [rax+0x0]
   14000ad16:	add    BYTE PTR [rax],al
   14000ad18:	rex.RX mov al,0x0
   14000ad1b:	add    BYTE PTR [rax],al
   14000ad1d:	add    BYTE PTR [rax],al
   14000ad1f:	add    BYTE PTR [rax+rsi*4+0x0],dl
   14000ad23:	add    BYTE PTR [rax],al
   14000ad25:	add    BYTE PTR [rax],al
   14000ad27:	add    ah,bh
   14000ad29:	mov    bl,0x0
   14000ad2b:	add    BYTE PTR [rax],al
   14000ad2d:	add    BYTE PTR [rax],al
   14000ad2f:	add    ah,ch
   14000ad31:	mov    bl,0x0
   14000ad33:	add    BYTE PTR [rax],al
   14000ad35:	add    BYTE PTR [rax],al
   14000ad37:	add    dl,bl
   14000ad39:	mov    bl,0x0
   14000ad3b:	add    BYTE PTR [rax],al
   14000ad3d:	add    BYTE PTR [rax],al
   14000ad3f:	add    dl,cl
   14000ad41:	mov    bl,0x0
   14000ad43:	add    BYTE PTR [rax],al
   14000ad45:	add    BYTE PTR [rax],al
   14000ad47:	add    BYTE PTR [rax+0xb3],bh
   14000ad4d:	add    BYTE PTR [rax],al
   14000ad4f:	add    BYTE PTR [rax+0xb3],ch
   14000ad55:	add    BYTE PTR [rax],al
   14000ad57:	add    dl,ch
   14000ad59:	scas   eax,DWORD PTR es:[rdi]
   14000ad5a:	add    BYTE PTR [rax],al
   14000ad5c:	add    BYTE PTR [rax],al
   14000ad5e:	add    BYTE PTR [rax],al
   14000ad60:	xchg   esp,eax
   14000ad61:	mov    bl,0x0
   14000ad63:	add    BYTE PTR [rax],al
   14000ad65:	add    BYTE PTR [rax],al
   14000ad67:	add    BYTE PTR [rax+0xb3],al
   14000ad6d:	add    BYTE PTR [rax],al
   14000ad6f:	add    BYTE PTR [rbx+rsi*4+0x0],ah
   14000ad73:	add    BYTE PTR [rax],al
   14000ad75:	add    BYTE PTR [rax],al
   14000ad77:	add    BYTE PTR [rax-0x4d],dl
   14000ad7a:	add    BYTE PTR [rax],al
   14000ad7c:	add    BYTE PTR [rax],al
   14000ad7e:	add    BYTE PTR [rax],al
   14000ad80:	ss mov bl,0x0
   14000ad83:	add    BYTE PTR [rax],al
   14000ad85:	add    BYTE PTR [rax],al
   14000ad87:	add    BYTE PTR [rdx],ah
   14000ad89:	mov    bl,0x0
   14000ad8b:	add    BYTE PTR [rax],al
   14000ad8d:	add    BYTE PTR [rax],al
   14000ad8f:	add    BYTE PTR [rdx],dl
   14000ad91:	mov    bl,0x0
   14000ad93:	add    BYTE PTR [rax],al
   14000ad95:	add    BYTE PTR [rax],al
   14000ad97:	add    al,bh
   14000ad99:	mov    dl,0x0
   14000ad9b:	add    BYTE PTR [rax],al
   14000ad9d:	add    BYTE PTR [rax],al
   14000ad9f:	add    dl,ah
   14000ada1:	mov    dl,0x0
   14000ada3:	add    BYTE PTR [rax],al
   14000ada5:	add    BYTE PTR [rax],al
   14000ada7:	add    ah,cl
   14000ada9:	mov    dl,0x0
   14000adab:	add    BYTE PTR [rax],al
   14000adad:	add    BYTE PTR [rax],al
   14000adaf:	add    BYTE PTR [rdx+0xb2],dh
   14000adb5:	add    BYTE PTR [rax],al
   14000adb7:	add    BYTE PTR [rsi+0xb2],bl
   14000adbd:	add    BYTE PTR [rax],al
   14000adbf:	add    BYTE PTR [rax+0xb2],al
   14000adc5:	add    BYTE PTR [rax],al
   14000adc7:	add    BYTE PTR [rax-0x4e],bh
   14000adca:	add    BYTE PTR [rax],al
   14000adcc:	add    BYTE PTR [rax],al
   14000adce:	add    BYTE PTR [rax],al
   14000add0:	fsubr  DWORD PTR [rdi+0x0]
   14000add6:	add    BYTE PTR [rax],al
   14000add8:	ret    0xaf
   14000addb:	add    BYTE PTR [rax],al
   14000addd:	add    BYTE PTR [rax],al
   14000addf:	add    BYTE PTR [rsi+0xaf],dh
   14000ade5:	add    BYTE PTR [rax],al
   14000ade7:	add    BYTE PTR [rax+0xaf],ch
	...
   14000adf5:	add    BYTE PTR [rax],al
   14000adf7:	add    BYTE PTR [rdx],cl
   14000adf9:	mov    dl,0x0
   14000adfb:	add    BYTE PTR [rax],al
   14000adfd:	add    BYTE PTR [rax],al
   14000adff:	add    BYTE PTR [rdx],ah
   14000ae01:	mov    dl,0x0
   14000ae03:	add    BYTE PTR [rax],al
   14000ae05:	add    BYTE PTR [rax],al
   14000ae07:	add    BYTE PTR [rdx],ch
   14000ae09:	mov    dl,0x0
   14000ae0b:	add    BYTE PTR [rax],al
   14000ae0d:	add    BYTE PTR [rax],al
   14000ae0f:	add    BYTE PTR [rdx+rsi*4],dh
   14000ae12:	add    BYTE PTR [rax],al
   14000ae14:	add    BYTE PTR [rax],al
   14000ae16:	add    BYTE PTR [rax],al
   14000ae18:	rex.X mov dl,0x0
   14000ae1b:	add    BYTE PTR [rax],al
   14000ae1d:	add    BYTE PTR [rax],al
   14000ae1f:	add    BYTE PTR [rdx+rsi*4+0x0],cl
   14000ae23:	add    BYTE PTR [rax],al
   14000ae25:	add    BYTE PTR [rax],al
   14000ae27:	add    BYTE PTR [rdx+rsi*4+0x0],ah
   14000ae2b:	add    BYTE PTR [rax],al
   14000ae2d:	add    BYTE PTR [rax],al
   14000ae2f:	add    BYTE PTR [rax],al
   14000ae31:	mov    dl,0x0
   14000ae33:	add    BYTE PTR [rax],al
   14000ae35:	add    BYTE PTR [rax],al
   14000ae37:	add    al,ch
   14000ae39:	mov    cl,0x0
   14000ae3b:	add    BYTE PTR [rax],al
   14000ae3d:	add    BYTE PTR [rax],al
   14000ae3f:	add    ah,bl
   14000ae41:	mov    cl,0x0
   14000ae43:	add    BYTE PTR [rax],al
   14000ae45:	add    BYTE PTR [rax],al
   14000ae47:	add    al,cl
   14000ae49:	mov    cl,0x0
   14000ae4b:	add    BYTE PTR [rax],al
   14000ae4d:	add    BYTE PTR [rax],al
   14000ae4f:	add    BYTE PTR [rsi+0xb1],bh
   14000ae55:	add    BYTE PTR [rax],al
   14000ae57:	add    BYTE PTR [rsi+0xb1],dh
   14000ae5d:	add    BYTE PTR [rax],al
   14000ae5f:	add    BYTE PTR [rcx+rsi*4+0x0],ah
   14000ae66:	add    BYTE PTR [rax],al
   14000ae68:	xchg   edx,eax
   14000ae69:	mov    cl,0x0
   14000ae6b:	add    BYTE PTR [rax],al
   14000ae6d:	add    BYTE PTR [rax],al
   14000ae6f:	add    BYTE PTR [rcx+rsi*4+0x0],al
   14000ae76:	add    BYTE PTR [rax],al
   14000ae78:	jbe    0x14000ae2b
   14000ae7a:	add    BYTE PTR [rax],al
   14000ae7c:	add    BYTE PTR [rax],al
   14000ae7e:	add    BYTE PTR [rax],al
   14000ae80:	(bad)  
   14000ae81:	mov    cl,0x0
   14000ae83:	add    BYTE PTR [rax],al
   14000ae85:	add    BYTE PTR [rax],al
   14000ae87:	add    BYTE PTR [rcx+rsi*4+0x0],dl
   14000ae8b:	add    BYTE PTR [rax],al
   14000ae8d:	add    BYTE PTR [rax],al
   14000ae8f:	add    BYTE PTR [rsi],dh
   14000ae91:	mov    cl,0x0
   14000ae93:	add    BYTE PTR [rax],al
   14000ae95:	add    BYTE PTR [rax],al
   14000ae97:	add    BYTE PTR [rsi],bl
   14000ae99:	mov    cl,0x0
   14000ae9b:	add    BYTE PTR [rax],al
   14000ae9d:	add    BYTE PTR [rax],al
   14000ae9f:	add    BYTE PTR [rax],al
   14000aea1:	mov    cl,0x0
   14000aea3:	add    BYTE PTR [rax],al
   14000aea5:	add    BYTE PTR [rax],al
   14000aea7:	add    al,ah
   14000aea9:	mov    al,0x0
   14000aeab:	add    BYTE PTR [rax],al
   14000aead:	add    BYTE PTR [rax],al
   14000aeaf:	add    dh,dl
   14000aeb1:	mov    al,0x0
   14000aeb3:	add    BYTE PTR [rax],al
   14000aeb5:	add    BYTE PTR [rax],al
   14000aeb7:	add    dh,cl
   14000aeb9:	mov    al,0x0
   14000aebb:	add    BYTE PTR [rax],al
   14000aebd:	add    BYTE PTR [rax],al
   14000aebf:	add    dh,al
   14000aec1:	mov    al,0x0
   14000aec3:	add    BYTE PTR [rax],al
   14000aec5:	add    BYTE PTR [rax],al
   14000aec7:	add    BYTE PTR [rdx+0xb0],bh
   14000aecd:	add    BYTE PTR [rax],al
   14000aecf:	add    BYTE PTR [rax+rsi*4+0x0],ch
   14000aed6:	add    BYTE PTR [rax],al
   14000aed8:	movabs ds:0x9a000000000000b0,al
   14000aee1:	mov    al,0x0
   14000aee3:	add    BYTE PTR [rax],al
   14000aee5:	add    BYTE PTR [rax],al
   14000aee7:	add    BYTE PTR [rax+0xb0],dl
   14000aeed:	add    BYTE PTR [rax],al
   14000aeef:	add    BYTE PTR [rax+rsi*4+0x0],al
   14000aef6:	add    BYTE PTR [rax],al
   14000aef8:	js     0x14000aeaa
   14000aefa:	add    BYTE PTR [rax],al
   14000aefc:	add    BYTE PTR [rax],al
   14000aefe:	add    BYTE PTR [rax],al
   14000af00:	outs   dx,BYTE PTR ds:[rsi]
   14000af01:	mov    al,0x0
   14000af03:	add    BYTE PTR [rax],al
   14000af05:	add    BYTE PTR [rax],al
   14000af07:	add    BYTE PTR [rdx],cl
   14000af09:	mov    ah,0x0
   14000af0b:	add    BYTE PTR [rax],al
   14000af0d:	add    BYTE PTR [rax],al
   14000af0f:	add    BYTE PTR [rsi],dl
   14000af11:	mov    ah,0x0
   14000af13:	add    BYTE PTR [rax],al
   14000af15:	add    BYTE PTR [rax],al
   14000af17:	add    BYTE PTR [rdx],ah
   14000af19:	mov    ah,0x0
   14000af1b:	add    BYTE PTR [rax],al
   14000af1d:	add    BYTE PTR [rax],al
   14000af1f:	add    BYTE PTR [rsi],ch
   14000af21:	mov    ah,0x0
   14000af23:	add    BYTE PTR [rax],al
   14000af25:	add    BYTE PTR [rax],al
   14000af27:	add    BYTE PTR [rax],bh
   14000af29:	mov    ah,0x0
   14000af2b:	add    BYTE PTR [rax],al
   14000af2d:	add    BYTE PTR [rax],al
   14000af2f:	add    BYTE PTR [rdx-0x4c],al
   14000af32:	add    BYTE PTR [rax],al
   14000af34:	add    BYTE PTR [rax],al
   14000af36:	add    BYTE PTR [rax],al
   14000af38:	rex.WR mov spl,0x0
   14000af3b:	add    BYTE PTR [rax],al
   14000af3d:	add    BYTE PTR [rax],al
   14000af3f:	add    BYTE PTR [rsi-0x4c],dl
   14000af42:	add    BYTE PTR [rax],al
   14000af44:	add    BYTE PTR [rax],al
   14000af46:	add    BYTE PTR [rax],al
   14000af48:	pop    rsi
   14000af49:	mov    ah,0x0
   14000af4b:	add    BYTE PTR [rax],al
   14000af4d:	add    BYTE PTR [rax],al
   14000af4f:	add    BYTE PTR [rax-0x4c],ch
   14000af52:	add    BYTE PTR [rax],al
   14000af54:	add    BYTE PTR [rax],al
   14000af56:	add    BYTE PTR [rax],al
   14000af58:	jb     0x14000af0e
   14000af5a:	add    BYTE PTR [rax],al
   14000af5c:	add    BYTE PTR [rax],al
   14000af5e:	add    BYTE PTR [rax],al
   14000af60:	jl     0x14000af16
   14000af62:	add    BYTE PTR [rax],al
   14000af64:	add    BYTE PTR [rax],al
   14000af66:	add    BYTE PTR [rax],al
   14000af68:	mov    BYTE PTR [rax+rax*1+0x0],dh
   14000af6f:	add    BYTE PTR [rdx+0xb4],dl
   14000af75:	add    BYTE PTR [rax],al
   14000af77:	add    BYTE PTR [rsp+rsi*4+0x0],bl
   14000af7e:	add    BYTE PTR [rax],al
   14000af80:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000af81:	mov    ah,0x0
   14000af83:	add    BYTE PTR [rax],al
   14000af85:	add    BYTE PTR [rax],al
   14000af87:	add    BYTE PTR [rsp+rsi*4+0x0],dh
   14000af8e:	add    BYTE PTR [rax],al
   14000af90:	mov    esi,0xb4
   14000af95:	add    BYTE PTR [rax],al
   14000af97:	add    al,cl
   14000af99:	mov    ah,0x0
	...
   14000afa7:	add    BYTE PTR [rbx+0x2],al
   14000afaa:	rex.RXB
   14000afab:	gs je  0x14000aff4
   14000afae:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   14000afb6:	add    BYTE PTR [rsi],al
   14000afb8:	push   rdi
   14000afb9:	jb     0x14000b024
   14000afbb:	je     0x14000b022
   14000afbd:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x695705ec
   14000afc6:	fs gs rex.XB push 0x6f547261
   14000afce:	rex.WRB jne 0x14000b03d
   14000afd1:	je     0x14000b03c
   14000afd3:	rex.X jns 0x14000b04a
   14000afd6:	add    BYTE PTR gs:[rax+0x726f4601],ah
   14000afdd:	ins    DWORD PTR es:[rdi],dx
   14000afde:	(bad)  
   14000afdf:	je     0x14000b02e
   14000afe1:	gs jae 0x14000b057
   14000afe4:	(bad)  
   14000afe5:	addr32 gs push rdi
   14000afe8:	add    BYTE PTR [rax],al
   14000afea:	pop    rsp
   14000afeb:	add    al,0x52
   14000afed:	gs (bad) 
   14000afef:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x4300c000
   14000aff9:	jb     0x14000b060
   14000affb:	(bad)  
   14000affc:	je     0x14000b063
   14000affe:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x47025700
   14000b007:	gs je  0x14000b056
   14000b00a:	(bad)  
   14000b00b:	jae    0x14000b081
   14000b00d:	rex.RB jb 0x14000b082
   14000b010:	outs   dx,DWORD PTR ds:[rsi]
   14000b011:	jb     0x14000b013
   14000b013:	add    ah,dl
   14000b015:	add    al,BYTE PTR [rdi+0x65]
   14000b018:	je     0x14000b06d
   14000b01a:	jns    0x14000b08f
   14000b01c:	je     0x14000b083
   14000b01e:	ins    DWORD PTR es:[rdi],dx
   14000b01f:	rex.R
   14000b020:	gs data16 (bad) 
   14000b023:	jne    0x14000b091
   14000b025:	je     0x14000b073
   14000b027:	outs   dx,DWORD PTR ds:[rsi]
   14000b028:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b02b:	gs rex.WRX (bad) 
   14000b02e:	ins    DWORD PTR es:[rdi],dx
   14000b02f:	add    BYTE PTR gs:[rax],al
   14000b032:	rol    BYTE PTR [rbx],0x4c
   14000b035:	outs   dx,DWORD PTR ds:[rsi]
   14000b036:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b039:	gs rex.WRX (bad) 
   14000b03c:	ins    DWORD PTR es:[rdi],dx
   14000b03d:	gs push rsp
   14000b03f:	outs   dx,DWORD PTR ds:[rsi]
   14000b040:	rex.WR
   14000b041:	rex.XB
   14000b042:	rex.WB
   14000b043:	add    BYTE PTR [rax],r8b
   14000b046:	jge    0x14000b048
   14000b048:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b04a:	outs   dx,DWORD PTR ds:[rsi]
   14000b04b:	jae    0x14000b0b2
   14000b04d:	rex.W (bad) 
   14000b04f:	outs   dx,BYTE PTR ds:[rsi]
   14000b050:	fs ins BYTE PTR es:[rdi],dx
   14000b052:	add    BYTE PTR gs:[rcx+0x636f4c03],bh
   14000b059:	(bad)  
   14000b05a:	ins    BYTE PTR es:[rdi],dx
   14000b05b:	rex.RX jb 0x14000b0c3
   14000b05e:	add    BYTE PTR gs:[rbx+0x45],cl
   14000b062:	push   rdx
   14000b063:	rex.WRX
   14000b064:	rex.RB
   14000b065:	xor    r14,QWORD PTR [rdx]
   14000b068:	cs fs ins BYTE PTR es:[rdi],dx
   14000b06b:	ins    BYTE PTR es:[rdi],dx
   14000b06c:	add    BYTE PTR [rax],al
   14000b06e:	add    DWORD PTR [rip+0x63736377],eax        # 0x1a37413eb
   14000b074:	push   0xffffffff8a000072
   14000b079:	add    ebx,DWORD PTR [rdi+0x77]
   14000b07c:	movsxd esi,DWORD PTR [rbx+0x69]
   14000b07f:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000b082:	add    BYTE PTR [rax],al
   14000b084:	jno    0x14000b08a
   14000b086:	imul   esi,DWORD PTR [rbx+0x77],0x72746e63
   14000b08d:	ins    BYTE PTR es:[rdi],dx
   14000b08e:	add    BYTE PTR [rax],al
   14000b090:	xchg   esp,eax
   14000b091:	add    al,0x6d
   14000b093:	gs ins DWORD PTR es:[rdi],dx
   14000b095:	ins    DWORD PTR es:[rdi],dx
   14000b096:	outs   dx,DWORD PTR ds:[rsi]
   14000b097:	jbe    0x14000b0fe
   14000b099:	add    BYTE PTR [rsp+rax*1+0x726f7371],ah
   14000b0a0:	je     0x14000b0a2
   14000b0a2:	adc    BYTE PTR [rip+0x72736377],al        # 0x1b274141f
   14000b0a8:	movsxd ebp,DWORD PTR [rax+0x72]
   14000b0ab:	add    BYTE PTR [rcx+0x3],ch
   14000b0ae:	pop    rdi
   14000b0af:	jbe    0x14000b124
   14000b0b1:	outs   dx,BYTE PTR ds:[rsi]
   14000b0b2:	ja     0x14000b124
   14000b0b4:	jb     0x14000b11f
   14000b0b6:	outs   dx,BYTE PTR ds:[rsi]
   14000b0b7:	je     0x14000b11f
   14000b0b9:	add    BYTE PTR [rax+0x4],bh
   14000b0bc:	imul   esi,DWORD PTR [rbx+0x77],0x63617073
   14000b0c3:	add    BYTE PTR gs:[rax],al
   14000b0c6:	xor    al,BYTE PTR [riz*2+0x746978]
   14000b0cd:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000b0d1:	jb     0x14000b138
   14000b0d3:	add    BYTE PTR gs:[rax],al
   14000b0d6:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000b0dd:	movsxd eax,DWORD PTR [rax]
   14000b0df:	add    BYTE PTR [rbx],cl
   14000b0e1:	add    BYTE PTR [rdi],bh
   14000b0e3:	(bad)  
   14000b0e4:	xor    BYTE PTR [rbp+0x78],ah
   14000b0e7:	movsxd esp,DWORD PTR [rbp+0x70]
   14000b0ea:	je     0x14000b155
   14000b0ec:	outs   dx,DWORD PTR ds:[rsi]
   14000b0ed:	outs   dx,BYTE PTR ds:[rsi]
   14000b0ee:	rex
   14000b0ef:	rex push rcx
   14000b0f1:	rex.RB
   14000b0f2:	rex.B
   14000b0f3:	rex.B
   14000b0f4:	rex
   14000b0f5:	rex.B
   14000b0f6:	rex.RB
   14000b0f7:	rex.X push rcx
   14000b0f9:	rex.RB
   14000b0fa:	rex.X
   14000b0fb:	rex.R
   14000b0fc:	rex.W
   14000b0fd:	rex pop rdx
   14000b0ff:	add    BYTE PTR [rax+rax*1],cl
   14000b102:	(bad)  
   14000b103:	(bad)  
   14000b104:	xor    BYTE PTR [rbp+0x78],ah
   14000b107:	movsxd esp,DWORD PTR [rbp+0x70]
   14000b10a:	je     0x14000b175
   14000b10c:	outs   dx,DWORD PTR ds:[rsi]
   14000b10d:	outs   dx,BYTE PTR ds:[rsi]
   14000b10e:	rex
   14000b10f:	rex push rcx
   14000b111:	rex.RB
   14000b112:	rex.B
   14000b113:	rex.B
   14000b114:	rex
   14000b115:	rex.B
   14000b116:	rex.RB
   14000b117:	rex.X push rsi
   14000b119:	xor    BYTE PTR [rax+0x40],al
   14000b11c:	pop    rdx
   14000b11d:	add    BYTE PTR [rcx],dl
   14000b11f:	add    BYTE PTR [rdi],bh
   14000b121:	(bad)  
   14000b122:	xor    DWORD PTR [rbp+0x78],esp
   14000b125:	movsxd esp,DWORD PTR [rbp+0x70]
   14000b128:	je     0x14000b193
   14000b12a:	outs   dx,DWORD PTR ds:[rsi]
   14000b12b:	outs   dx,BYTE PTR ds:[rsi]
   14000b12c:	rex
   14000b12d:	rex push rbp
   14000b12f:	rex.RB
   14000b130:	rex.B
   14000b131:	rex.B
   14000b132:	rex pop rax
   14000b134:	pop    rdx
   14000b135:	add    BYTE PTR [rcx],dh
   14000b137:	add    BYTE PTR [rdi],bh
   14000b139:	ja     0x14000b1a3
   14000b13b:	(bad)  
   14000b13c:	je     0x14000b17e
   14000b13e:	gs js  0x14000b1a4
   14000b141:	gs jo  0x14000b1b8
   14000b144:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000b14b:	rex.X
   14000b14c:	push   r8
   14000b14e:	rex.RB
   14000b14f:	rex.X
   14000b150:	rex.R pop rax
   14000b152:	pop    rdx
   14000b153:	add    BYTE PTR [rdi+0x61635f00],bh
   14000b159:	ins    BYTE PTR es:[rdi],dx
   14000b15a:	ins    BYTE PTR es:[rdi],dx
   14000b15b:	outs   dx,BYTE PTR ds:[rsi]
   14000b15c:	gs ja  0x14000b1c7
   14000b15f:	add    BYTE PTR [rbx+0x0],cl
   14000b162:	pop    rdi
   14000b163:	rex.XB js 0x14000b1de
   14000b166:	push   rsp
   14000b167:	push   0x45776f72
   14000b16c:	js     0x14000b1d1
   14000b16e:	gs jo  0x14000b1e5
   14000b171:	imul   ebp,DWORD PTR [rdi+0x6e],0x550000
   14000b178:	pop    rdi
   14000b179:	pop    rax
   14000b17a:	movsxd esi,DWORD PTR [rax+0x74]
   14000b17d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000b186:	pop    rdi
   14000b187:	(bad)  
   14000b188:	ins    DWORD PTR es:[rdi],dx
   14000b189:	jae    0x14000b1f2
   14000b18b:	pop    rdi
   14000b18c:	gs js  0x14000b1f8
   14000b18f:	je     0x14000b191
   14000b191:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000b197:	addr32 gs je 0x14000b208
   14000b19b:	(bad)  
   14000b19c:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000b1a3:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000b1a9:	gs je  0x14000b20b
   14000b1ac:	(bad)  
   14000b1ad:	jo     0x14000b21f
   14000b1af:	pop    rdi
   14000b1b0:	je     0x14000b22b
   14000b1b2:	jo     0x14000b219
   14000b1b4:	add    BYTE PTR [rax],al
   14000b1b6:	(bad)  
   14000b1b7:	add    DWORD PTR [rdi+0x65],ebx
   14000b1ba:	js     0x14000b225
   14000b1bc:	je     0x14000b1be
   14000b1be:	rol    DWORD PTR [rax],0x5f
   14000b1c1:	movsxd esp,DWORD PTR [rbp+0x78]
   14000b1c4:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000b1cc:	jae    0x14000b233
   14000b1ce:	je     0x14000b245
   14000b1d0:	jae    0x14000b237
   14000b1d2:	jb     0x14000b241
   14000b1d4:	(bad)  
   14000b1d5:	je     0x14000b23f
   14000b1d7:	gs jb  0x14000b24c
   14000b1da:	add    BYTE PTR [rax],al
   14000b1dc:	jge    0x14000b1df
   14000b1de:	pop    rdi
   14000b1df:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000b1e6:	ins    DWORD PTR es:[rdi],dx
   14000b1e7:	add    BYTE PTR [rdi+0x0],dl
   14000b1ea:	pop    rdi
   14000b1eb:	pop    rdi
   14000b1ec:	rex.XB pop r15
   14000b1ee:	jae    0x14000b260
   14000b1f0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000b1f4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000b1fb:	ins    BYTE PTR es:[rdi],dx
   14000b1fc:	gs jb  0x14000b1ff
   14000b1ff:	add    BYTE PTR [rdi],ah
   14000b201:	add    DWORD PTR [rdi+0x66],ebx
   14000b204:	ins    DWORD PTR es:[rdi],dx
   14000b205:	outs   dx,DWORD PTR ds:[rsi]
   14000b206:	fs add BYTE PTR gs:[rax],al
   14000b20a:	rol    BYTE PTR [rax],cl
   14000b20c:	pop    rdi
   14000b20d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b210:	ins    DWORD PTR es:[rdi],dx
   14000b211:	outs   dx,DWORD PTR ds:[rsi]
   14000b212:	fs add BYTE PTR gs:[rax],al
   14000b216:	ins    DWORD PTR es:[rdi],dx
   14000b217:	jae    0x14000b28f
   14000b219:	movsxd esi,DWORD PTR [rdx+0x74]
   14000b21c:	cs fs ins BYTE PTR es:[rdi],dx
   14000b21f:	ins    BYTE PTR es:[rdi],dx
   14000b220:	add    BYTE PTR [rax],al
   14000b222:	out    0x1,al
   14000b224:	pop    rdi
   14000b225:	ins    BYTE PTR es:[rdi],dx
   14000b226:	outs   dx,DWORD PTR ds:[rsi]
   14000b227:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b22a:	add    ebx,DWORD PTR [r15+0x75]
   14000b22e:	outs   dx,BYTE PTR ds:[rsi]
   14000b22f:	ins    BYTE PTR es:[rdi],dx
   14000b230:	outs   dx,DWORD PTR ds:[rsi]
   14000b231:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b234:	jnp    0x14000b236
   14000b236:	pop    rdi
   14000b237:	pop    rdi
   14000b238:	fs ins BYTE PTR es:[rdi],dx
   14000b23a:	ins    BYTE PTR es:[rdi],dx
   14000b23b:	outs   dx,DWORD PTR ds:[rsi]
   14000b23c:	outs   dx,BYTE PTR ds:[rsi]
   14000b23d:	gs js  0x14000b2a9
   14000b240:	je     0x14000b242
   14000b242:	nop
   14000b243:	add    bl,BYTE PTR [rdi+0x6f]
   14000b246:	outs   dx,BYTE PTR ds:[rsi]
   14000b247:	gs js  0x14000b2b3
   14000b24a:	je     0x14000b24c
   14000b24c:	adc    al,BYTE PTR [rax]
   14000b24e:	(bad)  
   14000b24f:	(bad)  
   14000b250:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000b254:	gs pop rdi
   14000b256:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000b25d:	rex.RB
   14000b25e:	rex.B
   14000b25f:	rex.B
   14000b260:	rex pop rax
   14000b262:	pop    rdx
   14000b263:	add    BYTE PTR [rdi],ch
   14000b265:	add    BYTE PTR [rdi],bh
   14000b267:	je     0x14000b2ce
   14000b269:	jb     0x14000b2d8
   14000b26b:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000b272:	pop    rcx
   14000b273:	pop    r8
   14000b275:	pop    rax
   14000b276:	pop    rdx
   14000b277:	add    BYTE PTR [rbp+0x5],ch
   14000b27a:	push   rbx
   14000b27b:	ins    BYTE PTR es:[rdi],dx
   14000b27c:	gs gs jo 0x14000b280
   14000b280:	pop    rsi
   14000b281:	add    eax,0x55746553
   14000b286:	outs   dx,BYTE PTR ds:[rsi]
   14000b287:	push   0x6c646e61
   14000b28c:	gs fs rex.RB js 0x14000b2f4
   14000b291:	gs jo  0x14000b308
   14000b294:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b29b:	gs jb  0x14000b29e
   14000b29e:	outs   dx,BYTE PTR ds:[rsi]
   14000b29f:	add    al,BYTE PTR [rdi+0x65]
   14000b2a2:	je     0x14000b2f1
   14000b2a4:	outs   dx,DWORD PTR ds:[rsi]
   14000b2a5:	fs jne 0x14000b314
   14000b2a8:	gs rex.W (bad) 
   14000b2ab:	outs   dx,BYTE PTR ds:[rsi]
   14000b2ac:	fs ins BYTE PTR es:[rdi],dx
   14000b2ae:	gs push rdi
   14000b2b0:	add    BYTE PTR [rax],al
   14000b2b2:	ss add al,0x51
   14000b2b5:	jne    0x14000b31c
   14000b2b7:	jb     0x14000b332
   14000b2b9:	push   rax
   14000b2ba:	gs jb  0x14000b323
   14000b2bd:	outs   dx,DWORD PTR ds:[rsi]
   14000b2be:	jb     0x14000b32d
   14000b2c0:	(bad)  
   14000b2c1:	outs   dx,BYTE PTR ds:[rsi]
   14000b2c2:	movsxd esp,DWORD PTR [rbp+0x43]
   14000b2c5:	outs   dx,DWORD PTR ds:[rsi]
   14000b2c6:	jne    0x14000b336
   14000b2c8:	je     0x14000b32f
   14000b2ca:	jb     0x14000b2cc
   14000b2cc:	adc    DWORD PTR [rdx],eax
   14000b2ce:	rex.RXB
   14000b2cf:	gs je  0x14000b315
   14000b2d2:	jne    0x14000b346
   14000b2d4:	jb     0x14000b33b
   14000b2d6:	outs   dx,BYTE PTR ds:[rsi]
   14000b2d7:	je     0x14000b329
   14000b2d9:	jb     0x14000b34a
   14000b2db:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b2de:	jae    0x14000b329
   14000b2e0:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465f9e9
   14000b2e7:	rex.XB jne 0x14000b35c
   14000b2ea:	jb     0x14000b351
   14000b2ec:	outs   dx,BYTE PTR ds:[rsi]
   14000b2ed:	je     0x14000b343
   14000b2ef:	push   0x64616572
   14000b2f4:	rex.WB
   14000b2f5:	add    BYTE PTR fs:[rax],al
   14000b2f8:	loopne 0x14000b2fc
   14000b2fa:	rex.RXB
   14000b2fb:	gs je  0x14000b351
   14000b2fe:	jns    0x14000b373
   14000b300:	je     0x14000b367
   14000b302:	ins    DWORD PTR es:[rdi],dx
   14000b303:	push   rsp
   14000b304:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000b30b:	ins    BYTE PTR es:[rdi],dx
   14000b30c:	gs push rsp
   14000b30e:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000b315:	gs je  0x14000b36c
   14000b318:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000b31f:	je     0x14000b321
   14000b321:	add    BYTE PTR [rdi+0x6c745204],dh
   14000b327:	rex.XB (bad) 
   14000b329:	jo     0x14000b39f
   14000b32b:	jne    0x14000b39f
   14000b32d:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000b330:	outs   dx,BYTE PTR ds:[rsi]
   14000b331:	je     0x14000b398
   14000b333:	js     0x14000b3a9
   14000b335:	add    BYTE PTR [rsi+0x6c745204],bh
   14000b33b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b33d:	outs   dx,DWORD PTR ds:[rsi]
   14000b33e:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000b342:	jne    0x14000b3b2
   14000b344:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000b348:	outs   dx,BYTE PTR ds:[rsi]
   14000b349:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b34b:	je     0x14000b3bf
   14000b34d:	jns    0x14000b34f
   14000b34f:	add    ch,al
   14000b351:	add    al,0x52
   14000b353:	je     0x14000b3c1
   14000b355:	push   rsi
   14000b356:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000b35d:	outs   dx,BYTE PTR ds:[rsi]
   14000b35e:	ja     0x14000b3c9
   14000b360:	outs   dx,BYTE PTR ds:[rsi]
   14000b361:	add    BYTE PTR fs:[rax],al
   14000b364:	sahf   
   14000b365:	add    eax,0x61686e55
   14000b36a:	outs   dx,BYTE PTR ds:[rsi]
   14000b36b:	fs ins BYTE PTR es:[rdi],dx
   14000b36d:	gs fs rex.RB js 0x14000b3d5
   14000b372:	gs jo  0x14000b3e9
   14000b375:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b37c:	gs jb  0x14000b37f
   14000b37f:	add    BYTE PTR [rax],dl
   14000b381:	add    al,BYTE PTR [rdi+0x65]
   14000b384:	je     0x14000b3c9
   14000b386:	jne    0x14000b3fa
   14000b388:	jb     0x14000b3ef
   14000b38a:	outs   dx,BYTE PTR ds:[rsi]
   14000b38b:	je     0x14000b3dd
   14000b38d:	jb     0x14000b3fe
   14000b38f:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b392:	jae    0x14000b394
   14000b394:	jl     0x14000b39b
   14000b396:	push   rsp
   14000b397:	gs jb  0x14000b407
   14000b39a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000b3a1:	outs   dx,DWORD PTR ds:[rsi]
   14000b3a2:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b3a5:	jae    0x14000b3a7
   14000b3a7:	add    BYTE PTR [rdx+0x4],bl
   14000b3aa:	push   rdx
   14000b3ab:	gs (bad) 
   14000b3ad:	rex.XB outs dx,DWORD PTR fs:[rsi]
   14000b3b0:	outs   dx,BYTE PTR ds:[rsi]
   14000b3b1:	jae    0x14000b422
   14000b3b3:	ins    BYTE PTR es:[rdi],dx
   14000b3b4:	gs push rdi
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	cmc    
   14000b3b9:	add    DWORD PTR [rdi+0x65],eax
   14000b3bc:	je     0x14000b401
   14000b3be:	outs   dx,DWORD PTR ds:[rsi]
   14000b3bf:	outs   dx,BYTE PTR ds:[rsi]
   14000b3c0:	jae    0x14000b431
   14000b3c2:	ins    BYTE PTR es:[rdi],dx
   14000b3c3:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000b3c6:	fs add BYTE PTR gs:[rax],al
   14000b3ca:	inc    DWORD PTR [rip+0x74697257]        # 0x1b46a2627
   14000b3d0:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000b3d3:	outs   dx,BYTE PTR ds:[rsi]
   14000b3d4:	jae    0x14000b445
   14000b3d6:	ins    BYTE PTR es:[rdi],dx
   14000b3d7:	gs push rdi
   14000b3d9:	add    BYTE PTR [rcx+0x6d6f4300],dl
   14000b3df:	jo     0x14000b442
   14000b3e1:	jb     0x14000b448
   14000b3e3:	push   rbx
   14000b3e4:	je     0x14000b458
   14000b3e6:	imul   ebp,DWORD PTR [rsi+0x67],0xc9000057
   14000b3ed:	add    al,BYTE PTR [rdi+0x65]
   14000b3f0:	je     0x14000b445
   14000b3f2:	je     0x14000b458
   14000b3f4:	rex.W (bad) 
   14000b3f6:	outs   dx,BYTE PTR ds:[rsi]
   14000b3f7:	fs ins BYTE PTR es:[rdi],dx
   14000b3f9:	add    BYTE PTR gs:[rax],al
   14000b3fc:	rex.RX add r8b,BYTE PTR [rdi+0x65]
   14000b400:	je     0x14000b448
   14000b402:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   14000b40a:	xchg   esp,eax
   14000b40b:	add    ebx,DWORD PTR [rdi+0x77]
   14000b40e:	movsxd esi,DWORD PTR [rbx+0x6e]
   14000b411:	imul   esp,DWORD PTR [rbx+0x6d],0x4950070
   14000b418:	ins    DWORD PTR es:[rdi],dx
   14000b419:	gs ins DWORD PTR es:[rdi],dx
   14000b41b:	ins    DWORD PTR es:[rdi],dx
   14000b41c:	outs   dx,DWORD PTR ds:[rsi]
   14000b41d:	jbe    0x14000b484
   14000b41f:	pop    rdi
   14000b420:	jae    0x14000b422
   14000b422:	push   rbp
   14000b423:	add    al,0x66
   14000b425:	ja     0x14000b497
   14000b427:	jb     0x14000b492
   14000b429:	outs   dx,BYTE PTR ds:[rsi]
   14000b42a:	je     0x14000b492
   14000b42c:	add    BYTE PTR [rax],al
   14000b42e:	ds add al,0x66
   14000b431:	addr32 gs je 0x14000b4ac
   14000b435:	jae    0x14000b437
   14000b437:	add    BYTE PTR [rbp+0x69727004],bl
   14000b43d:	outs   dx,BYTE PTR ds:[rsi]
   14000b43e:	je     0x14000b4a6
   14000b440:	add    BYTE PTR [rax],al
   14000b442:	rex.RB add al,0x66
   14000b445:	jo     0x14000b4b9
   14000b447:	imul   ebp,DWORD PTR [rsi+0x74],0x50b0066
   14000b44e:	ja     0x14000b4b3
   14000b450:	jae    0x14000b4c0
   14000b452:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000b455:	add    BYTE PTR [rdx+0x4],dl
   14000b458:	data16 jae 0x14000b4c0
   14000b45b:	imul   eax,DWORD PTR gs:[rax],0x22
   14000b45f:	add    al,0x62
   14000b461:	jae    0x14000b4c8
   14000b463:	(bad)  
   14000b464:	jb     0x14000b4c9
   14000b466:	push   0x7104a500
   14000b46b:	jae    0x14000b4dc
   14000b46d:	jb     0x14000b4e3
   14000b46f:	pop    rdi
   14000b470:	jae    0x14000b472
   14000b472:	and    eax,0x6c616304
   14000b477:	ins    BYTE PTR es:[rdi],dx
   14000b478:	outs   dx,DWORD PTR ds:[rsi]
   14000b479:	movsxd eax,DWORD PTR [rax]
   14000b47b:	add    BYTE PTR [rbx+0x6d656d04],dl
   14000b481:	movsxd esi,DWORD PTR [rax+0x79]
   14000b484:	pop    rdi
   14000b485:	jae    0x14000b487
   14000b487:	add    BYTE PTR [rbx],bl
   14000b489:	add    eax,0x74736377
   14000b48e:	outs   dx,DWORD PTR ds:[rsi]
   14000b48f:	jne    0x14000b4fd
   14000b491:	add    BYTE PTR [rax*1+0x73736377],dl
   14000b498:	je     0x14000b50c
   14000b49a:	add    BYTE PTR [rax],al
   14000b49c:	test   eax,0x61657204
   14000b4a1:	ins    BYTE PTR es:[rdi],dx
   14000b4a2:	ins    BYTE PTR es:[rdi],dx
   14000b4a3:	outs   dx,DWORD PTR ds:[rsi]
   14000b4a4:	movsxd eax,DWORD PTR [rax]
   14000b4a6:	add    DWORD PTR [rax],0x6f695f5f
   14000b4ac:	(bad)  
   14000b4ad:	pop    rdi
   14000b4ae:	data16 jne 0x14000b51f
   14000b4b1:	movsxd eax,DWORD PTR [rax]
   14000b4b3:	add    BYTE PTR [rcx+0x6d656d04],dl
   14000b4b9:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000b4bc:	add    BYTE PTR [rax],al
   14000b4be:	xchg   edx,eax
   14000b4bf:	add    al,0x6d
   14000b4c1:	gs ins DWORD PTR es:[rdi],dx
   14000b4c3:	movsxd esi,DWORD PTR [rax+0x79]
   14000b4c6:	add    BYTE PTR [rax],al
   14000b4c8:	xchg   esi,eax
   14000b4c9:	add    al,0x6d
   14000b4cb:	gs ins DWORD PTR es:[rdi],dx
   14000b4cd:	jae    0x14000b534
   14000b4cf:	je     0x14000b4d1
	...

Disassembly of section .data:

000000014000c000 <.data>:
   14000c000:	(bad)  
   14000c001:	xchg   ebx,eax
   14000c002:	add    BYTE PTR [rax+0x1],al
	...
   14000c00d:	add    BYTE PTR [rax],al
   14000c00f:	add    BYTE PTR [rcx],al
   14000c011:	add    BYTE PTR [rax],al
   14000c013:	add    BYTE PTR [rax],al
   14000c015:	add    BYTE PTR [rax],al
   14000c017:	add    BYTE PTR [rdx],dh
   14000c019:	movabs ds:0x5dcd00002b992ddf,al
   14000c022:	and    dl,dl
   14000c024:	data16 (bad) 
   14000c026:	(bad)  
   14000c027:	inc    DWORD PTR [rax]
   14000c029:	add    BYTE PTR [rax],al
   14000c02b:	add    BYTE PTR [rax],al
   14000c02d:	add    BYTE PTR [rax],al
   14000c02f:	add    BYTE PTR [rdi+0x0],ah
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	add    BYTE PTR [rax],al
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	movabs al,ds:0x7f00000001400093
   14000c041:	add    BYTE PTR [rax],al
   14000c043:	add    BYTE PTR [rax],al
   14000c045:	add    BYTE PTR [rax],al
   14000c047:	add    al,cl
   14000c049:	xchg   ebx,eax
   14000c04a:	add    BYTE PTR [rax+0x1],al
   14000c04d:	add    BYTE PTR [rax],al
   14000c04f:	add    BYTE PTR [rax+0x0],al
   14000c055:	add    BYTE PTR [rax],al
   14000c057:	add    al,bh
   14000c059:	xchg   ebx,eax
   14000c05a:	add    BYTE PTR [rax+0x1],al
   14000c05d:	add    BYTE PTR [rax],al
   14000c05f:	add    BYTE PTR [rcx+0x0],bl
   14000c065:	add    BYTE PTR [rax],al
   14000c067:	add    BYTE PTR [rax],ch
   14000c069:	xchg   esp,eax
   14000c06a:	add    BYTE PTR [rax+0x1],al
   14000c06d:	add    BYTE PTR [rax],al
   14000c06f:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	pop    rax
   14000c079:	xchg   esp,eax
   14000c07a:	add    BYTE PTR [rax+0x1],al
   14000c07d:	add    BYTE PTR [rax],al
   14000c07f:	add    BYTE PTR [rbp+0x0],bl
   14000c085:	add    BYTE PTR [rax],al
   14000c087:	add    BYTE PTR [rax+0x1400094],bl
   14000c08d:	add    BYTE PTR [rax],al
   14000c08f:	add    BYTE PTR [rsi+0x0],bl
   14000c095:	add    BYTE PTR [rax],al
   14000c097:	add    al,cl
   14000c099:	xchg   esp,eax
   14000c09a:	add    BYTE PTR [rax+0x1],al
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rdi+0x0],bl
   14000c0a5:	add    BYTE PTR [rax],al
   14000c0a7:	add    BYTE PTR [rax],al
   14000c0a9:	xchg   ebp,eax
   14000c0aa:	add    BYTE PTR [rax+0x1],al
   14000c0ad:	add    BYTE PTR [rax],al
   14000c0af:	add    BYTE PTR [rdx],dl
   14000c0b1:	add    al,BYTE PTR [rax]
   14000c0b3:	add    BYTE PTR [rax],al
   14000c0b5:	add    BYTE PTR [rax],al
   14000c0b7:	add    BYTE PTR [rax-0x6b],al
   14000c0ba:	add    BYTE PTR [rax+0x1],al
   14000c0bd:	add    BYTE PTR [rax],al
   14000c0bf:	add    BYTE PTR [rbx],dl
   14000c0c1:	add    al,BYTE PTR [rax]
   14000c0c3:	add    BYTE PTR [rax],al
   14000c0c5:	add    BYTE PTR [rax],al
   14000c0c7:	add    BYTE PTR [rax-0x6b],dh
   14000c0ca:	add    BYTE PTR [rax+0x1],al
   14000c0cd:	add    BYTE PTR [rax],al
   14000c0cf:	add    BYTE PTR [rdx+rax*1],dl
   14000c0d2:	add    BYTE PTR [rax],al
   14000c0d4:	add    BYTE PTR [rax],al
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	test   al,0x95
   14000c0da:	add    BYTE PTR [rax+0x1],al
   14000c0dd:	add    BYTE PTR [rax],al
   14000c0df:	add    BYTE PTR [rip+0x2],dl        # 0x14000c0e7
   14000c0e5:	add    BYTE PTR [rax],al
   14000c0e7:	add    al,bl
   14000c0e9:	xchg   ebp,eax
   14000c0ea:	add    BYTE PTR [rax+0x1],al
   14000c0ed:	add    BYTE PTR [rax],al
   14000c0ef:	add    BYTE PTR [rsi],dl
   14000c0f1:	add    al,BYTE PTR [rax]
   14000c0f3:	add    BYTE PTR [rax],al
   14000c0f5:	add    BYTE PTR [rax],al
   14000c0f7:	add    BYTE PTR [rax],dl
   14000c0f9:	xchg   esi,eax
   14000c0fa:	add    BYTE PTR [rax+0x1],al
   14000c0fd:	add    BYTE PTR [rax],al
   14000c0ff:	add    BYTE PTR [rdi],dl
   14000c101:	add    al,BYTE PTR [rax]
   14000c103:	add    BYTE PTR [rax],al
   14000c105:	add    BYTE PTR [rax],al
   14000c107:	add    BYTE PTR [rax-0x6a],dl
   14000c10a:	add    BYTE PTR [rax+0x1],al
   14000c10d:	add    BYTE PTR [rax],al
   14000c10f:	add    BYTE PTR [rax],bl
   14000c111:	add    al,BYTE PTR [rax]
   14000c113:	add    BYTE PTR [rax],al
   14000c115:	add    BYTE PTR [rax],al
   14000c117:	add    BYTE PTR [rax+0x1400096],al
   14000c11d:	add    BYTE PTR [rax],al
   14000c11f:	add    BYTE PTR [rcx],bl
   14000c121:	add    al,BYTE PTR [rax]
   14000c123:	add    BYTE PTR [rax],al
   14000c125:	add    BYTE PTR [rax],al
   14000c127:	add    al,al
   14000c129:	xchg   esi,eax
   14000c12a:	add    BYTE PTR [rax+0x1],al
   14000c12d:	add    BYTE PTR [rax],al
   14000c12f:	add    BYTE PTR [rdx],bl
   14000c131:	add    al,BYTE PTR [rax]
   14000c133:	add    BYTE PTR [rax],al
   14000c135:	add    BYTE PTR [rax],al
   14000c137:	add    BYTE PTR [rax],al
   14000c139:	xchg   edi,eax
   14000c13a:	add    BYTE PTR [rax+0x1],al
   14000c13d:	add    BYTE PTR [rax],al
   14000c13f:	add    BYTE PTR [rbx],bl
   14000c141:	add    al,BYTE PTR [rax]
   14000c143:	add    BYTE PTR [rax],al
   14000c145:	add    BYTE PTR [rax],al
   14000c147:	add    BYTE PTR [rax-0x69],al
   14000c14a:	add    BYTE PTR [rax+0x1],al
   14000c14d:	add    BYTE PTR [rax],al
   14000c14f:	add    BYTE PTR [rdx+rax*1],bl
   14000c152:	add    BYTE PTR [rax],al
   14000c154:	add    BYTE PTR [rax],al
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	js     0x14000c0f1
   14000c15a:	add    BYTE PTR [rax+0x1],al
   14000c15d:	add    BYTE PTR [rax],al
   14000c15f:	add    BYTE PTR [rsi],ah
   14000c161:	add    al,BYTE PTR [rax]
   14000c163:	add    BYTE PTR [rax],al
   14000c165:	add    BYTE PTR [rax],al
   14000c167:	add    BYTE PTR [rax+0x1400097],ah
   14000c16d:	add    BYTE PTR [rax],al
   14000c16f:	add    BYTE PTR [rax+0x1400093],cl
	...
   14000c17d:	add    BYTE PTR [rax],al
   14000c17f:	add    BYTE PTR [rsi],ch
   14000c181:	(bad)  
   14000c182:	push   r14
   14000c184:	gs js  0x14000c1ea
   14000c187:	gs jo  0x14000c1fe
   14000c18a:	imul   ebp,DWORD PTR [rdi+0x6e],0x88004040
   14000c191:	xchg   ebx,eax
   14000c192:	add    BYTE PTR [rax+0x1],al
	...
   14000c19d:	add    BYTE PTR [rax],al
   14000c19f:	add    BYTE PTR [rsi],ch
   14000c1a1:	(bad)  
   14000c1a2:	push   r14
   14000c1a4:	(bad)
   14000c1a9:	ins    BYTE PTR es:[rdi],dx
   14000c1aa:	ins    BYTE PTR es:[rdi],dx
   14000c1ab:	outs   dx,DWORD PTR ds:[rsi]
   14000c1ac:	movsxd eax,DWORD PTR [rax+0x73]
   14000c1af:	je     0x14000c215
   14000c1b1:	rex
   14000c1b2:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000d000 <.pdata>:
   14000d000:	or     BYTE PTR [rax],dl
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	jle    0x14000d016
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	push   rax
   14000d009:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d00a:	add    BYTE PTR [rax],al
   14000d00c:	test   BYTE PTR [rax],dl
   14000d00e:	add    BYTE PTR [rax],al
   14000d010:	sti    
   14000d011:	adc    BYTE PTR [rax],al
   14000d013:	add    BYTE PTR [rax-0x59],bl
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	add    al,0x11
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	sbb    al,0x11
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	push   0x240000a7
   14000d025:	adc    DWORD PTR [rax],eax
   14000d027:	add    BYTE PTR [rdi+0x12],ah
   14000d02a:	add    BYTE PTR [rax],al
   14000d02c:	jo     0x14000cfd5
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	pushf  
   14000d031:	adc    al,BYTE PTR [rax]
   14000d033:	add    BYTE PTR [rax-0x7fffffea],cl
   14000d039:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d03a:	add    BYTE PTR [rax],al
   14000d03c:	nop
   14000d03d:	(bad)  
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	(bad)  
   14000d041:	(bad)  
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	movabs al,ds:0x3000017dc0000a7
   14000d04d:	sbb    eax,DWORD PTR [rax]
   14000d04f:	add    BYTE PTR [rdi+riz*4+0x1b0c0000],bh
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	adc    bl,BYTE PTR [rip+0xffffffffa7dc0000]        # 0xe7dcd05e
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	sbb    BYTE PTR [rip+0x22b10000],bl        # 0x162b1d066
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	add    BYTE PTR [rax+0x22b80000],ch
   14000d06e:	add    BYTE PTR [rax],al
   14000d070:	out    0x23,eax
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	sub    BYTE PTR [rax+0x23f00000],ch
   14000d07a:	add    BYTE PTR [rax],al
   14000d07c:	in     al,dx
   14000d07d:	and    al,0x0
   14000d07f:	add    BYTE PTR [rax+rbp*4],bh
   14000d082:	add    BYTE PTR [rax],al
   14000d084:	hlt    
   14000d085:	and    al,0x0
   14000d087:	add    BYTE PTR [rsi],dh
   14000d089:	add    BYTE PTR es:[rax],al
   14000d08c:	push   rsp
   14000d08d:	test   al,0x0
   14000d08f:	add    BYTE PTR [rsi+riz*1],bh
   14000d092:	add    BYTE PTR [rax],al
   14000d094:	stos   DWORD PTR es:[rdi],eax
   14000d095:	add    BYTE PTR es:[rax],al
   14000d098:	push   0x40000a8
   14000d09d:	(bad)  
   14000d09e:	add    BYTE PTR [rax],al
   14000d0a0:	out    dx,al
   14000d0a1:	sub    al,BYTE PTR [rax]
   14000d0a3:	add    BYTE PTR [rax-0x58],dh
   14000d0a6:	add    BYTE PTR [rax],al
   14000d0a8:	hlt    
   14000d0a9:	sub    al,BYTE PTR [rax]
   14000d0ab:	add    BYTE PTR [rdx-0x77ffffd2],cl
   14000d0b1:	test   al,0x0
   14000d0b3:	add    BYTE PTR [rax+0x200002e],dl
   14000d0b9:	xor    al,0x0
   14000d0bb:	add    BYTE PTR [rax+rbp*4+0x34080000],ch
   14000d0c2:	add    BYTE PTR [rax],al
   14000d0c4:	jno    0x14000d0fc
   14000d0c6:	add    BYTE PTR [rax],al
   14000d0c8:	int3   
   14000d0c9:	test   al,0x0
   14000d0cb:	add    BYTE PTR [rax+0x36],bh
   14000d0ce:	add    BYTE PTR [rax],al
   14000d0d0:	sbb    bh,BYTE PTR [rax]
   14000d0d2:	add    BYTE PTR [rax],al
   14000d0d4:	loopne 0x14000d07e
   14000d0d6:	add    BYTE PTR [rax],al
   14000d0d8:	and    BYTE PTR [rax],bh
   14000d0da:	add    BYTE PTR [rax],al
   14000d0dc:	ret    0x38
   14000d0df:	add    al,bh
   14000d0e1:	test   al,0x0
   14000d0e3:	add    ah,ch
   14000d0e5:	cmp    BYTE PTR [rax],al
   14000d0e7:	add    BYTE PTR [rbp+0x800003a],bl
   14000d0ed:	test   eax,0x3aa40000
   14000d0f2:	add    BYTE PTR [rax],al
   14000d0f4:	jrcxz  0x14000d131
   14000d0f6:	add    BYTE PTR [rax],al
   14000d0f8:	clc    
   14000d0f9:	test   al,0x0
   14000d0fb:	add    ah,ch
   14000d0fd:	cmp    eax,DWORD PTR [rax]
   14000d0ff:	add    BYTE PTR [rdx+0x3f],bl
   14000d102:	add    BYTE PTR [rax],al
   14000d104:	and    al,0xa9
   14000d106:	add    BYTE PTR [rax],al
   14000d108:	(bad)  
   14000d109:	(bad)  
   14000d10a:	add    BYTE PTR [rax],al
   14000d10c:	mov    al,0x42
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	test   rax,0x432c0000
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	(bad)
   14000d11b:	add    BYTE PTR [rax-0x57],ah
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	int3   
   14000d121:	rex.XB add BYTE PTR [r8],al
   14000d124:	mov    dh,0x44
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	ins    BYTE PTR es:[rdi],dx
   14000d129:	test   eax,0x44bc0000
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	loopne 0x14000d179
   14000d132:	add    BYTE PTR [rax],al
   14000d134:	test   BYTE PTR [rcx+0x48b80000],ch
   14000d13a:	add    BYTE PTR [rax],al
   14000d13c:	scas   eax,DWORD PTR es:[rdi]
   14000d13d:	rex.WRB add BYTE PTR [r8],r8b
   14000d140:	pushf  
   14000d141:	test   eax,0x4db80000
   14000d146:	add    BYTE PTR [rax],al
   14000d148:	sbb    cl,BYTE PTR [rsi+0x0]
   14000d14b:	add    BYTE PTR [rax-0x59],ch
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	and    BYTE PTR [rsi+0x0],cl
   14000d153:	add    BYTE PTR [rbx-0x4bffffb2],bl
   14000d159:	test   eax,0x4ea40000
   14000d15e:	add    BYTE PTR [rax],al
   14000d160:	rex.WRXB add BYTE PTR ds:[r8],r8b
   14000d164:	mov    ah,0xa9
   14000d166:	add    BYTE PTR [rax],al
   14000d168:	rex.R
   14000d169:	rex.WRXB add BYTE PTR [r8],r8b
   14000d16c:	pop    rcx
   14000d16d:	pop    rax
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	mov    esp,0xe00000a9
   14000d175:	pop    rax
   14000d176:	add    BYTE PTR [rax],al
   14000d178:	jns    0x14000d1d3
   14000d17a:	add    BYTE PTR [rax],al
   14000d17c:	(bad)  
   14000d17d:	test   eax,0x59800000
   14000d182:	add    BYTE PTR [rax],al
   14000d184:	repz pop rsp
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	loopne 0x14000d133
   14000d18a:	add    BYTE PTR [rax],al
   14000d18c:	cld    
   14000d18d:	pop    rsp
   14000d18e:	add    BYTE PTR [rax],al
   14000d190:	jno    0x14000d1ef
   14000d192:	add    BYTE PTR [rax],al
   14000d194:	(bad)  
   14000d195:	test   eax,0x5d780000
   14000d19a:	add    BYTE PTR [rax],al
   14000d19c:	pop    rsi
   14000d19d:	pop    rsi
   14000d19e:	add    BYTE PTR [rax],al
   14000d1a0:	test   rax,0x5e640000
   14000d1a6:	add    BYTE PTR [rax],al
   14000d1a8:	sti    
   14000d1a9:	(bad)  
   14000d1aa:	add    BYTE PTR [rax],al
   14000d1ac:	clc    
   14000d1ad:	test   eax,0x612c0000
   14000d1b2:	add    BYTE PTR [rax],al
   14000d1b4:	je     0x14000d21a
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	sbb    al,0xaa
   14000d1ba:	add    BYTE PTR [rax],al
   14000d1bc:	jl     0x14000d222
   14000d1be:	add    BYTE PTR [rax],al
   14000d1c0:	jle    0x14000d228
   14000d1c2:	add    BYTE PTR [rax],al
   14000d1c4:	sub    al,0xaa
   14000d1c6:	add    BYTE PTR [rax],al
   14000d1c8:	test   BYTE PTR [rsi+0x0],ah
   14000d1cb:	add    BYTE PTR [rcx],bl
   14000d1cd:	add    BYTE PTR [eax],al
   14000d1d0:	rex.R stos BYTE PTR es:[rdi],al
   14000d1d2:	add    BYTE PTR [rax],al
   14000d1d4:	and    BYTE PTR [rdi+0x0],ah
   14000d1d7:	add    BYTE PTR [rax],bh
   14000d1d9:	push   0xffffffffaa500000
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	ins    BYTE PTR es:[rdi],dx
   14000d1e1:	push   0x6bbc0000
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	test   BYTE PTR [rcx+0x6bc40000],ch
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	jge    0x14000d25e
   14000d1f2:	add    BYTE PTR [rax],al
   14000d1f4:	ins    BYTE PTR es:[rdi],dx
   14000d1f5:	stos   BYTE PTR es:[rdi],al
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	test   BYTE PTR [rax+rax*1+0x0],ch
   14000d1fc:	in     eax,0x6d
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	test   BYTE PTR [rdx+0x6dec0000],ch
   14000d206:	add    BYTE PTR [rax],al
   14000d208:	data16 outs dx,BYTE PTR ds:[rsi]
   14000d20a:	add    BYTE PTR [rax],al
   14000d20c:	mov    ah,0xa9
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	mov    ah,0x6e
   14000d212:	add    BYTE PTR [rax],al
   14000d214:	sbb    esi,DWORD PTR [rcx+0x0]
   14000d217:	add    BYTE PTR [rdx+rbp*4+0x71240000],cl
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	ins    DWORD PTR es:[rdi],dx
   14000d221:	jae    0x14000d223
   14000d223:	add    BYTE PTR [rdx+rbp*4+0x73740000],ah
   14000d22a:	add    BYTE PTR [rax],al
   14000d22c:	or     DWORD PTR [rsi+0x0],esi
   14000d22f:	add    BYTE PTR [rdx+rbp*4+0x76100000],bh
   14000d236:	add    BYTE PTR [rax],al
   14000d238:	rex.WXB js 0x14000d23b
   14000d23b:	add    ah,cl
   14000d23d:	stos   BYTE PTR es:[rdi],al
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	push   rsp
   14000d241:	js     0x14000d243
   14000d243:	add    BYTE PTR [rax],al
   14000d245:	jp     0x14000d247
   14000d247:	add    al,ch
   14000d249:	stos   BYTE PTR es:[rdi],al
   14000d24a:	add    BYTE PTR [rax],al
   14000d24c:	or     BYTE PTR [rdx+0x0],bh
   14000d24f:	add    BYTE PTR [rsi+0x7b],bh
   14000d252:	add    BYTE PTR [rax],al
   14000d254:	or     BYTE PTR [rbx+0x7b840000],ch
   14000d25a:	add    BYTE PTR [rax],al
   14000d25c:	cmp    al,0x7f
   14000d25e:	add    BYTE PTR [rax],al
   14000d260:	sbb    BYTE PTR [rbx+0x7f440000],ch
   14000d266:	add    BYTE PTR [rax],al
   14000d268:	call   0xf400d2ec
   14000d26d:	test   eax,0x80400000
   14000d272:	add    BYTE PTR [rax],al
   14000d274:	sti    
   14000d275:	add    DWORD PTR [rax],0xab3400
   14000d27b:	add    BYTE PTR [rdx+rax*4],al
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	jge    0x14000d204
   14000d282:	add    BYTE PTR [rax],al
   14000d284:	clc    
   14000d285:	test   al,0x0
   14000d287:	add    BYTE PTR [rdx+rax*4-0x7d5b0000],al
   14000d28e:	add    BYTE PTR [rax],al
   14000d290:	mov    ah,0xa9
   14000d292:	add    BYTE PTR [rax],al
   14000d294:	lods   al,BYTE PTR ds:[rsi]
   14000d295:	(bad)  
   14000d296:	add    BYTE PTR [rax],al
   14000d298:	fiadd  DWORD PTR [rdx-0x564c0000]
   14000d29e:	add    BYTE PTR [rax],al
   14000d2a0:	add    BYTE PTR [rbx-0x7cc70000],al
   14000d2a6:	add    BYTE PTR [rax],al
   14000d2a8:	push   rsp
   14000d2a9:	stos   DWORD PTR es:[rdi],eax
   14000d2aa:	add    BYTE PTR [rax],al
   14000d2ac:	rex add DWORD PTR [rax],0x0
   14000d2b0:	mov    ecx,0x60000083
   14000d2b5:	stos   DWORD PTR es:[rdi],eax
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	rol    BYTE PTR [rbx-0x7c1d0000],0x0
   14000d2bf:	add    BYTE PTR [rbx+rbp*4+0x0],cl
   14000d2c3:	add    BYTE PTR [rax],al
   14000d2c5:	test   BYTE PTR [rax],al
   14000d2c7:	add    bh,cl
   14000d2c9:	test   BYTE PTR [rax],al
   14000d2cb:	add    BYTE PTR [rax-0x59],ch
   14000d2ce:	add    BYTE PTR [rax],al
   14000d2d0:	loopne 0x14000d256
   14000d2d2:	add    BYTE PTR [rax],al
   14000d2d4:	sub    DWORD PTR [rbp-0x54980000],eax
   14000d2da:	add    BYTE PTR [rax],al
   14000d2dc:	xor    BYTE PTR [rbp-0x78fe0000],al
   14000d2e2:	add    BYTE PTR [rax],al
   14000d2e4:	jo     0x14000d291
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	adc    BYTE PTR [rdi-0x78de0000],al
   14000d2ee:	add    BYTE PTR [rax],al
   14000d2f0:	push   0x400000a7
   14000d2f5:	xchg   DWORD PTR [rax],eax
   14000d2f7:	add    BYTE PTR [rsi-0x79],bl
   14000d2fa:	add    BYTE PTR [rax],al
   14000d2fc:	test   al,0xab
   14000d2fe:	add    BYTE PTR [rax],al
   14000d300:	xchg   DWORD PTR fs:[rax],eax
   14000d303:	add    BYTE PTR [rdx],al
   14000d305:	mov    BYTE PTR [rax],al
   14000d307:	add    BYTE PTR [rbx+rbp*4-0x77f80000],ch
   14000d30e:	add    BYTE PTR [rax],al
   14000d310:	(bad)  
   14000d311:	mov    BYTE PTR [rax],al
   14000d313:	add    BYTE PTR [rax-0x59],ch
   14000d316:	add    BYTE PTR [rax],al
   14000d318:	or     BYTE PTR [rax-0x77500000],0x0
   14000d31f:	add    BYTE PTR [rbx+rbp*4+0x0],dl
   14000d323:	add    al,al
   14000d325:	mov    BYTE PTR [rax],al
   14000d327:	add    cl,bh
   14000d329:	mov    BYTE PTR [rax],al
   14000d32b:	add    BYTE PTR [rax-0x59],ch
   14000d32e:	add    BYTE PTR [rax],al
   14000d330:	add    BYTE PTR [rcx-0x76e80000],cl
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	push   0x2c0000a7
   14000d33d:	mov    DWORD PTR [rax],eax
   14000d33f:	add    BYTE PTR [rax-0x2fffff77],al
   14000d345:	stos   DWORD PTR es:[rdi],eax
   14000d346:	add    BYTE PTR [rax],al
   14000d348:	mov    BYTE PTR [rcx-0x76330000],cl
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	mov    ah,0xa9
   14000d352:	add    BYTE PTR [rax],al
   14000d354:	mov    al,BYTE PTR [rax]
   14000d357:	add    BYTE PTR [rbp-0xfffff76],cl
   14000d35d:	stos   DWORD PTR es:[rdi],eax
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	(bad)  
   14000d361:	mov    al,BYTE PTR [rax]
   14000d363:	add    BYTE PTR [rbx+rcx*4-0x53ec0000],ah
   14000d36a:	add    BYTE PTR [rax],al
   14000d36c:	fmul   QWORD PTR [rbx-0x73f00000]
   14000d372:	add    BYTE PTR [rax],al
   14000d374:	mov    ah,0xa9
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	and    BYTE PTR [rax+rax*1+0x8d9100],cl
   14000d37f:	add    BYTE PTR [rax],ah
   14000d381:	lods   al,BYTE PTR ds:[rsi]
   14000d382:	add    BYTE PTR [rax],al
   14000d384:	enter  0x8d,0x0
   14000d388:	out    0x8d,al
   14000d38a:	add    BYTE PTR [rax],al
   14000d38c:	mov    ah,0xa9
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	clc    
   14000d391:	lea    eax,[rax]
   14000d393:	add    BYTE PTR [rip+0x6800008e],dl        # 0x1a800d427
   14000d399:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d39a:	add    BYTE PTR [rax],al
   14000d39c:	sbb    al,0x8e
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	jg     0x14000d330
   14000d3a2:	add    BYTE PTR [rax],al
   14000d3a4:	mov    ah,0xa9
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	ror    BYTE PTR [rsi-0x713e0000],0x0
   14000d3af:	add    BYTE PTR [rax],ch
   14000d3b1:	lods   al,BYTE PTR ds:[rsi]
   14000d3b2:	add    BYTE PTR [rax],al
   14000d3b4:	loopne 0x14000d344
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	sub    eax,0x3000008f
   14000d3bd:	lods   al,BYTE PTR ds:[rsi]
   14000d3be:	add    BYTE PTR [rax],al
   14000d3c0:	pop    QWORD PTR ss:[rax]
   14000d3c3:	add    BYTE PTR [rdi+rcx*4+0x0],dl
   14000d3c7:	add    BYTE PTR [rax+0x5a0000ab],ah
   14000d3cd:	pop    QWORD PTR [rax]
   14000d3cf:	add    BYTE PTR [rbp-0x71],dh
   14000d3d2:	add    BYTE PTR [rax],al
   14000d3d4:	movabs al,ds:0xa000008f800000ab
   14000d3dd:	pop    QWORD PTR [rax]
   14000d3df:	.byte 0x0
   14000d3e0:	.byte 0xa0
   14000d3e1:	stos   DWORD PTR es:[rdi],eax
	...

Disassembly of section .rsrc:

000000014000e000 <.rsrc>:
	...
   14000e00c:	add    DWORD PTR [rax],eax
   14000e00e:	add    al,BYTE PTR [rax]
   14000e010:	call   0x16880e015
   14000e015:	add    BYTE PTR [rax],al
   14000e017:	adc    BYTE PTR [rax],0x0
   14000e01a:	add    BYTE PTR [rax],al
   14000e01c:	add    BYTE PTR [rax],al
   14000e01f:	sbb    BYTE PTR [rax],0x0
   14000e022:	add    BYTE PTR [rax],al
   14000e024:	pop    rax
   14000e025:	add    BYTE PTR [rax],al
   14000e027:	add    BYTE PTR [rax],0x0
	...
   14000e036:	add    DWORD PTR [rax],eax
   14000e038:	add    DWORD PTR [rax],eax
   14000e03a:	add    BYTE PTR [rax],al
   14000e03c:	jo     0x14000e03e
   14000e03e:	add    BYTE PTR [rax+0x0],al
	...
   14000e04c:	add    BYTE PTR [rax],al
   14000e04e:	add    DWORD PTR [rax],eax
   14000e050:	add    DWORD PTR [rax],eax
   14000e052:	add    BYTE PTR [rax],al
   14000e054:	mov    BYTE PTR [rax],al
   14000e056:	add    BYTE PTR [rax+0x0],al
	...
   14000e064:	add    BYTE PTR [rax],al
   14000e066:	add    DWORD PTR [rax],eax
   14000e068:	add    DWORD PTR [rax],eax
   14000e06a:	add    BYTE PTR [rax],al
   14000e06c:	movabs al,ds:0x800000
	...
   14000e07d:	add    BYTE PTR [rcx],al
   14000e07f:	add    BYTE PTR [rcx],cl
   14000e081:	add    al,0x0
   14000e083:	add    BYTE PTR [rax+0x0],bh
	...
   14000e095:	add    BYTE PTR [rcx],al
   14000e097:	add    BYTE PTR [rcx],cl
   14000e099:	add    al,0x0
   14000e09b:	add    al,cl
	...
   14000e0ad:	add    BYTE PTR [rcx],al
   14000e0af:	add    BYTE PTR [rcx],cl
   14000e0b1:	add    al,0x0
   14000e0b3:	add    al,bl
   14000e0b5:	add    BYTE PTR [rax],al
   14000e0b7:	add    BYTE PTR [rax-0x19],al
   14000e0ba:	add    BYTE PTR [rax],al
   14000e0bc:	enter  0x0,0x0
	...
   14000e0c8:	nop
   14000e0c9:	jrcxz  0x14000e0cb
   14000e0cb:	add    BYTE PTR [rax+0x3],dh
   14000e0d1:	add    BYTE PTR [rax],al
   14000e0d3:	add    BYTE PTR [rax],al
   14000e0d5:	add    BYTE PTR [rax],al
   14000e0d7:	add    al,dh
   14000e0d9:	loopne 0x14000e0db
   14000e0db:	add    BYTE PTR [rbp+0x2],bl
   14000e0e1:	add    BYTE PTR [rax],al
   14000e0e3:	add    BYTE PTR [rax],al
   14000e0e5:	add    BYTE PTR [rax],al
   14000e0e7:	add    BYTE PTR [rbx],al
   14000e0e9:	add    BYTE PTR [rbp+0x0],cl
   14000e0ec:	push   rbp
   14000e0ed:	add    BYTE PTR [rcx+0x0],cl
   14000e0f0:	cmp    al,0x3f
   14000e0f2:	js     0x14000e161
   14000e0f4:	ins    BYTE PTR es:[rdi],dx
   14000e0f5:	and    BYTE PTR [rsi+0x65],dh
   14000e0f8:	jb     0x14000e16d
   14000e0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e101:	xor    BYTE PTR [rdx],ah
   14000e103:	and    BYTE PTR [rbp+0x6e],ah
   14000e106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000e109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000e110:	rex.RX sub eax,0x73202238
   14000e116:	je     0x14000e179
   14000e118:	outs   dx,BYTE PTR ds:[rsi]
   14000e119:	fs (bad) 
   14000e11b:	ins    BYTE PTR es:[rdi],dx
   14000e11c:	outs   dx,DWORD PTR ds:[rsi]
   14000e11d:	outs   dx,BYTE PTR ds:[rsi]
   14000e11e:	gs cmp eax,0x73657922
   14000e124:	and    bh,BYTE PTR [rdi]
   14000e126:	ds or  eax,0x2d213c0a
   14000e12c:	sub    eax,0x706f4320
   14000e131:	jns    0x14000e1a5
   14000e133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000e13a:	sub    DWORD PTR [rax],esp
   14000e13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000e144:	je     0x14000e166
   14000e146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e148:	jb     0x14000e1ba
   14000e14a:	outs   dx,DWORD PTR ds:[rsi]
   14000e14b:	jb     0x14000e1ae
   14000e14d:	je     0x14000e1b8
   14000e14f:	outs   dx,DWORD PTR ds:[rsi]
   14000e150:	outs   dx,BYTE PTR ds:[rsi]
   14000e151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e1f84
   14000e157:	cmp    al,0x61
   14000e159:	jae    0x14000e1ce
   14000e15b:	gs ins DWORD PTR es:[rdi],dx
   14000e15d:	(bad)  
   14000e15e:	ins    BYTE PTR es:[rdi],dx
   14000e15f:	jns    0x14000e181
   14000e161:	js     0x14000e1d0
   14000e163:	ins    BYTE PTR es:[rdi],dx
   14000e164:	outs   dx,BYTE PTR ds:[rsi]
   14000e165:	jae    0x14000e1a4
   14000e167:	and    dh,BYTE PTR [rbp+0x72]
   14000e16a:	outs   dx,BYTE PTR ds:[rsi]
   14000e16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e16e:	push   0x73616d65
   14000e173:	sub    eax,0x7263696d
   14000e178:	outs   dx,DWORD PTR ds:[rsi]
   14000e179:	jae    0x14000e1ea
   14000e17b:	data16 je 0x14000e1ab
   14000e17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e184:	ins    DWORD PTR es:[rdi],dx
   14000e185:	cs jbe 0x14000e1b9
   14000e188:	and    ah,BYTE PTR [rax]
   14000e18a:	ins    DWORD PTR es:[rdi],dx
   14000e18b:	(bad)  
   14000e18c:	outs   dx,BYTE PTR ds:[rsi]
   14000e18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000e194:	jb     0x14000e209
   14000e196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e19d:	xor    BYTE PTR [rdx],ah
   14000e19f:	and    BYTE PTR [rax+0x6d],bh
   14000e1a2:	ins    BYTE PTR es:[rdi],dx
   14000e1a3:	outs   dx,BYTE PTR ds:[rsi]
   14000e1a4:	jae    0x14000e1e0
   14000e1a6:	(bad)  
   14000e1a7:	jae    0x14000e216
   14000e1a9:	jbe    0x14000e1de
   14000e1ab:	cmp    eax,0x6e727522
   14000e1b0:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e1b3:	push   0x73616d65
   14000e1b8:	sub    eax,0x7263696d
   14000e1bd:	outs   dx,DWORD PTR ds:[rsi]
   14000e1be:	jae    0x14000e22f
   14000e1c0:	data16 je 0x14000e1f0
   14000e1c3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e1c6:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e1c9:	ins    DWORD PTR es:[rdi],dx
   14000e1ca:	cs jbe 0x14000e200
   14000e1cd:	and    bh,BYTE PTR [rsi]
   14000e1cf:	or     eax,0x73613c0a
   14000e1d4:	jae    0x14000e23b
   14000e1d6:	ins    DWORD PTR es:[rdi],dx
   14000e1d7:	(bad)  
   14000e1d8:	ins    BYTE PTR es:[rdi],dx
   14000e1d9:	jns    0x14000e224
   14000e1db:	fs outs dx,BYTE PTR gs:[rsi]
   14000e1de:	je     0x14000e249
   14000e1e0:	je     0x14000e25b
   14000e1e2:	or     eax,0x7620200a
   14000e1e7:	gs jb  0x14000e25d
   14000e1ea:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000e1f1:	xor    DWORD PTR [rsi],ebp
   14000e1f3:	xor    BYTE PTR [rsi],ch
   14000e1f5:	xor    BYTE PTR [rdx],ah
   14000e1f7:	or     eax,0x7020200a
   14000e1fc:	jb     0x14000e26d
   14000e1fe:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e201:	jae    0x14000e272
   14000e203:	jb     0x14000e246
   14000e205:	jb     0x14000e26a
   14000e207:	push   0x63657469
   14000e20c:	je     0x14000e283
   14000e20e:	jb     0x14000e275
   14000e210:	cmp    eax,0x646d6122
   14000e215:	ss xor al,0x22
   14000e218:	or     eax,0x6e20200a
   14000e21d:	(bad)  
   14000e21e:	ins    DWORD PTR es:[rdi],dx
   14000e21f:	gs cmp eax,0x63694d22
   14000e225:	jb     0x14000e296
   14000e227:	jae    0x14000e298
   14000e229:	data16 je 0x14000e25a
   14000e22c:	push   rsp
   14000e22d:	(bad)  
   14000e22e:	(bad)  
   14000e22f:	ins    BYTE PTR es:[rdi],dx
   14000e230:	gs je  0x14000e283
   14000e233:	rex.XB
   14000e234:	cs rex.W push rdi
   14000e237:	push   rdx
   14000e238:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e23a:	ins    DWORD PTR es:[rdi],dx
   14000e23b:	jo     0x14000e25f
   14000e23d:	or     eax,0x7420200a
   14000e242:	jns    0x14000e2b4
   14000e244:	gs cmp eax,0x6e697722
   14000e24a:	xor    esi,DWORD PTR [rdx]
   14000e24c:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f115c
   14000e252:	or     bh,BYTE PTR [rsp+riz*2]
   14000e255:	gs jae 0x14000e2bb
   14000e258:	jb     0x14000e2c3
   14000e25a:	jo     0x14000e2d0
   14000e25c:	imul   ebp,DWORD PTR [rdi+0x6e],0x63694d3e
   14000e263:	jb     0x14000e2d4
   14000e265:	jae    0x14000e2d6
   14000e267:	data16 je 0x14000e28a
   14000e26a:	rex.XB jne 0x14000e2e0
   14000e26d:	je     0x14000e2de
   14000e26f:	ins    DWORD PTR es:[rdi],dx
   14000e270:	and    BYTE PTR [rcx+rbp*2+0x63],al
   14000e274:	je     0x14000e2df
   14000e276:	outs   dx,DWORD PTR ds:[rsi]
   14000e277:	outs   dx,BYTE PTR ds:[rsi]
   14000e278:	(bad)  
   14000e279:	jb     0x14000e2f4
   14000e27b:	and    BYTE PTR [rbx+0x6f],al
   14000e27e:	ins    DWORD PTR es:[rdi],dx
   14000e27f:	jo     0x14000e2ea
   14000e281:	ins    BYTE PTR es:[rdi],dx
   14000e282:	(bad)  
   14000e283:	je     0x14000e2ee
   14000e285:	outs   dx,DWORD PTR ds:[rsi]
   14000e286:	outs   dx,BYTE PTR ds:[rsi]
   14000e287:	and    BYTE PTR [rdi+rbp*2+0x6f],dl
   14000e28b:	ins    BYTE PTR es:[rdi],dx
   14000e28c:	cmp    al,0x2f
   14000e28e:	fs gs jae 0x14000e2f5
   14000e292:	jb     0x14000e2fd
   14000e294:	jo     0x14000e30a
   14000e296:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000e29d:	je     0x14000e311
   14000e29f:	jne    0x14000e314
   14000e2a1:	je     0x14000e2ec
   14000e2a3:	outs   dx,BYTE PTR ds:[rsi]
   14000e2a4:	outs   dx,WORD PTR ds:[rsi]
   14000e2a6:	and    BYTE PTR [rax+0x6d],bh
   14000e2a9:	ins    BYTE PTR es:[rdi],dx
   14000e2aa:	outs   dx,BYTE PTR ds:[rsi]
   14000e2ab:	jae    0x14000e2ea
   14000e2ad:	and    dh,BYTE PTR [rbp+0x72]
   14000e2b0:	outs   dx,BYTE PTR ds:[rsi]
   14000e2b1:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e2b4:	push   0x73616d65
   14000e2b9:	sub    eax,0x7263696d
   14000e2be:	outs   dx,DWORD PTR ds:[rsi]
   14000e2bf:	jae    0x14000e330
   14000e2c1:	data16 je 0x14000e2f1
   14000e2c4:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e2c7:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e2ca:	ins    DWORD PTR es:[rdi],dx
   14000e2cb:	cs jbe 0x14000e301
   14000e2ce:	and    bh,BYTE PTR [rsi]
   14000e2d0:	or     eax,0x3c20200a
   14000e2d5:	jae    0x14000e33c
   14000e2d7:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e2da:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000e2e2:	and    BYTE PTR [rax],ah
   14000e2e4:	cmp    al,0x72
   14000e2e6:	gs jno 0x14000e35e
   14000e2e9:	gs jae 0x14000e360
   14000e2ec:	gs fs push rax
   14000e2ef:	jb     0x14000e35a
   14000e2f1:	jbe    0x14000e35c
   14000e2f3:	ins    BYTE PTR es:[rdi],dx
   14000e2f4:	gs addr32 gs jae 0x14000e337
   14000e2f9:	or     eax,0x2020200a
   14000e2fe:	and    BYTE PTR [rax],ah
   14000e300:	and    BYTE PTR [rdx+rsi*2],bh
   14000e303:	gs jno 0x14000e37b
   14000e306:	gs jae 0x14000e37d
   14000e309:	gs fs rex.RB js 0x14000e373
   14000e30e:	movsxd esi,DWORD PTR [rbp+0x74]
   14000e311:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000e318:	ins    BYTE PTR es:[rdi],dx
   14000e319:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000e31d:	gs ins BYTE PTR es:[rdi],dx
   14000e31f:	cmp    eax,0x49736122
   14000e324:	outs   dx,BYTE PTR ds:[rsi]
   14000e325:	jbe    0x14000e396
   14000e327:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000e32b:	or     eax,0x2020200a
   14000e330:	and    BYTE PTR [rax],ah
   14000e332:	and    BYTE PTR [rbp+0x69],dh
   14000e335:	movsxd esp,DWORD PTR [r11+0x65]
   14000e339:	jae    0x14000e3ae
   14000e33b:	cmp    eax,0x6c616622
   14000e340:	jae    0x14000e3a7
   14000e342:	and    ch,BYTE PTR [rdi]
   14000e344:	ds or  eax,0x2020200a
   14000e34a:	and    BYTE PTR [rdi+rbp*1],bh
   14000e34d:	jb     0x14000e3b4
   14000e34f:	jno    0x14000e3c6
   14000e351:	gs jae 0x14000e3c8
   14000e354:	gs fs push rax
   14000e357:	jb     0x14000e3c2
   14000e359:	jbe    0x14000e3c4
   14000e35b:	ins    BYTE PTR es:[rdi],dx
   14000e35c:	gs addr32 gs jae 0x14000e39f
   14000e361:	or     eax,0x3c20200a
   14000e366:	(bad)  
   14000e367:	jae    0x14000e3ce
   14000e369:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e36c:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000e374:	je     0x14000e3e8
   14000e376:	jne    0x14000e3eb
   14000e378:	je     0x14000e3c3
   14000e37a:	outs   dx,BYTE PTR ds:[rsi]
   14000e37b:	outs   dx,WORD PTR ds:[rsi]
   14000e37d:	ds or  eax,0x612f3c0a
   14000e383:	jae    0x14000e3f8
   14000e385:	gs ins DWORD PTR es:[rdi],dx
   14000e387:	(bad)  
   14000e388:	ins    BYTE PTR es:[rdi],dx
   14000e389:	jns    0x14000e3c9
   14000e38b:	or     eax,0xa
   14000e390:	mov    al,0x3
   14000e392:	xor    al,0x0
   14000e394:	add    BYTE PTR [rax],al
   14000e396:	push   rsi
   14000e397:	add    BYTE PTR [rbx+0x0],dl
   14000e39a:	pop    rdi
   14000e39b:	add    BYTE PTR [rsi+0x0],dl
   14000e39e:	add    BYTE PTR [r10+0x0],r10b
   14000e3a2:	push   rbx
   14000e3a3:	add    BYTE PTR [rcx+0x0],cl
   14000e3a6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000e3aa:	pop    rdi
   14000e3ab:	add    BYTE PTR [rcx+0x0],cl
   14000e3ae:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000e3b2:	rex.WRXB add BYTE PTR [r8],r8b
   14000e3b5:	add    BYTE PTR [rax],al
   14000e3b7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000e3bd:	add    BYTE PTR [rcx],al
   14000e3bf:	add    BYTE PTR [rax],al
   14000e3c1:	add    BYTE PTR [rdx],cl
   14000e3c3:	add    BYTE PTR [rax],al
   14000e3c5:	add    BYTE PTR [rax],bpl
   14000e3c8:	add    BYTE PTR [rax],al
   14000e3ca:	or     al,BYTE PTR [rax]
   14000e3cc:	add    BYTE PTR [rax+0x0],al
   14000e3cf:	sub    BYTE PTR [rdi],bh
   14000e3d1:	add    BYTE PTR [rax],al
   14000e3d3:	add    BYTE PTR [rax],al
   14000e3d5:	add    BYTE PTR [rax],al
   14000e3d7:	add    BYTE PTR [rax+rax*1],al
   14000e3da:	add    al,0x0
   14000e3dc:	add    al,BYTE PTR [rax]
	...
   14000e3ea:	add    BYTE PTR [rax],al
   14000e3ec:	(bad)  
   14000e3ed:	add    eax,DWORD PTR [rax]
   14000e3ef:	add    BYTE PTR [rcx],al
   14000e3f1:	add    BYTE PTR [rbx+0x0],dl
   14000e3f4:	je     0x14000e3f6
   14000e3f6:	jb     0x14000e3f8
   14000e3f8:	imul   eax,DWORD PTR [rax],0x67006e
   14000e3fe:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e402:	ins    BYTE PTR es:[rdi],dx
   14000e403:	add    BYTE PTR [rbp+0x0],ah
   14000e406:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e40a:	data16 add BYTE PTR [rdi+0x0],ch
   14000e40e:	add    BYTE PTR [rax],al
   14000e410:	(bad)  
   14000e411:	add    al,BYTE PTR [rax]
   14000e413:	add    BYTE PTR [rcx],al
   14000e415:	add    BYTE PTR [rax],dh
   14000e417:	add    BYTE PTR [rax+rax*1],dh
   14000e41a:	xor    BYTE PTR [rax],al
   14000e41c:	cmp    DWORD PTR [rax],eax
   14000e41e:	xor    BYTE PTR [rax],al
   14000e420:	xor    al,0x0
   14000e422:	rex.X add BYTE PTR [rax],sil
   14000e425:	add    BYTE PTR [rax],al
   14000e427:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000e42b:	add    BYTE PTR [rcx],al
   14000e42d:	add    BYTE PTR [rbx+0x0],al
   14000e430:	outs   dx,DWORD PTR ds:[rsi]
   14000e431:	add    BYTE PTR [rbp+0x0],ch
   14000e434:	jo     0x14000e436
   14000e436:	(bad)  
   14000e437:	add    BYTE PTR [rsi+0x0],ch
   14000e43a:	jns    0x14000e43c
   14000e43c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e440:	ins    DWORD PTR es:[rdi],dx
   14000e441:	add    BYTE PTR [rbp+0x0],ah
   14000e444:	add    BYTE PTR [rax],al
   14000e446:	add    BYTE PTR [rax],al
   14000e448:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e44c:	movsxd eax,DWORD PTR [rax]
   14000e44e:	jb     0x14000e450
   14000e450:	outs   dx,DWORD PTR ds:[rsi]
   14000e451:	add    BYTE PTR [rbx+0x0],dh
   14000e454:	outs   dx,DWORD PTR ds:[rsi]
   14000e455:	add    BYTE PTR [rsi+0x0],ah
   14000e458:	je     0x14000e45a
   14000e45a:	and    BYTE PTR [rax],al
   14000e45c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e460:	jb     0x14000e462
   14000e462:	jo     0x14000e464
   14000e464:	outs   dx,DWORD PTR ds:[rsi]
   14000e465:	add    BYTE PTR [rdx+0x0],dh
   14000e468:	(bad)  
   14000e469:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e46d:	add    BYTE PTR [rdi+0x0],ch
   14000e470:	outs   dx,BYTE PTR ds:[rsi]
   14000e471:	add    BYTE PTR [rax],al
   14000e473:	add    BYTE PTR [rdx+0x0],dh
   14000e476:	and    eax,0x46000100
   14000e47b:	add    BYTE PTR [rcx+0x0],ch
   14000e47e:	ins    BYTE PTR es:[rdi],dx
   14000e47f:	add    BYTE PTR [rbp+0x0],ah
   14000e482:	add    BYTE PTR [rbp+0x0],r12b
   14000e486:	jae    0x14000e488
   14000e488:	movsxd eax,DWORD PTR [rax]
   14000e48a:	jb     0x14000e48c
   14000e48c:	imul   eax,DWORD PTR [rax],0x740070
   14000e492:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e498:	add    BYTE PTR [rax],al
   14000e49a:	add    BYTE PTR [rax],al
   14000e49c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e4a0:	movsxd eax,DWORD PTR [rax]
   14000e4a2:	jb     0x14000e4a4
   14000e4a4:	outs   dx,DWORD PTR ds:[rsi]
   14000e4a5:	add    BYTE PTR [rbx+0x0],dh
   14000e4a8:	outs   dx,DWORD PTR ds:[rsi]
   14000e4a9:	add    BYTE PTR [rsi+0x0],ah
   14000e4ac:	je     0x14000e4ae
   14000e4ae:	and    BYTE PTR [rax],al
   14000e4b0:	rex.XB add BYTE PTR [r13+0x0],sil
   14000e4b4:	jae    0x14000e4b6
   14000e4b6:	je     0x14000e4b8
   14000e4b8:	outs   dx,DWORD PTR ds:[rsi]
   14000e4b9:	add    BYTE PTR [rbp+0x0],ch
   14000e4bc:	and    BYTE PTR [rax],al
   14000e4be:	add    BYTE PTR [rcx+0x0],r13b
   14000e4c2:	movsxd eax,DWORD PTR [rax]
   14000e4c4:	je     0x14000e4c6
   14000e4c6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e4cc:	(bad)  
   14000e4cd:	add    BYTE PTR [rdx+0x0],dh
   14000e4d0:	jns    0x14000e4d2
   14000e4d2:	and    BYTE PTR [rax],al
   14000e4d4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e4d8:	ins    DWORD PTR es:[rdi],dx
   14000e4d9:	add    BYTE PTR [rax+0x0],dh
   14000e4dc:	imul   eax,DWORD PTR [rax],0x65006c
   14000e4e2:	jb     0x14000e4e4
   14000e4e4:	add    BYTE PTR [rax],al
   14000e4e6:	add    BYTE PTR [rax],al
   14000e4e8:	data16 add BYTE PTR [rbx],ah
   14000e4eb:	add    BYTE PTR [rcx],al
   14000e4ed:	add    BYTE PTR [rsi+0x0],al
   14000e4f0:	imul   eax,DWORD PTR [rax],0x65006c
   14000e4f6:	push   rsi
   14000e4f7:	add    BYTE PTR [rbp+0x0],ah
   14000e4fa:	jb     0x14000e4fc
   14000e4fc:	jae    0x14000e4fe
   14000e4fe:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e504:	add    BYTE PTR [rax],al
   14000e506:	add    BYTE PTR [rax],al
   14000e508:	xor    DWORD PTR [rax],eax
   14000e50a:	xor    BYTE PTR [rax],al
   14000e50c:	add    BYTE PTR cs:[rax],dh
   14000e50f:	add    BYTE PTR [rsi],ch
   14000e511:	add    BYTE PTR [rcx],dh
   14000e513:	add    BYTE PTR [rax],dh
   14000e515:	add    BYTE PTR [rdx],dh
   14000e517:	add    BYTE PTR [rax+rax*1],dh
   14000e51a:	xor    BYTE PTR [rax],al
   14000e51c:	add    BYTE PTR cs:[rcx],dh
   14000e51f:	add    BYTE PTR [rsi],dh
   14000e521:	add    BYTE PTR [rbx],dh
   14000e523:	add    BYTE PTR [rax],bh
   14000e525:	add    BYTE PTR [rax+rax*1],dh
   14000e528:	and    BYTE PTR [rax],al
   14000e52a:	sub    BYTE PTR [rax],al
   14000e52c:	je     0x14000e52e
   14000e52e:	push   0x2e003100
   14000e533:	add    BYTE PTR [rcx],dh
   14000e535:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701153b
   14000e53b:	add    BYTE PTR [rax],dh
   14000e53d:	add    BYTE PTR [rcx],bh
   14000e53f:	add    BYTE PTR [rip+0x37003100],ch        # 0x177011645
   14000e545:	add    BYTE PTR [rax],dh
   14000e547:	add    BYTE PTR [rax],dh
   14000e549:	add    BYTE PTR [rcx],ch
   14000e54b:	add    BYTE PTR [rax],al
   14000e54d:	add    BYTE PTR [rax],al
   14000e54f:	add    BYTE PTR [rax],bh
   14000e551:	add    BYTE PTR [rax+rax*1],cl
   14000e554:	add    DWORD PTR [rax],eax
   14000e556:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e55a:	je     0x14000e55c
   14000e55c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e560:	outs   dx,BYTE PTR ds:[rsi]
   14000e561:	add    BYTE PTR [rcx+0x0],ah
   14000e564:	ins    BYTE PTR es:[rdi],dx
   14000e565:	add    BYTE PTR [rsi+0x0],cl
   14000e568:	(bad)  
   14000e569:	add    BYTE PTR [rbp+0x0],ch
   14000e56c:	add    BYTE PTR gs:[rax],al
   14000e56f:	add    BYTE PTR [rax+0x0],cl
   14000e572:	push   rdi
   14000e573:	add    BYTE PTR [rdx+0x0],dl
   14000e576:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e57a:	ins    DWORD PTR es:[rdi],dx
   14000e57b:	add    BYTE PTR [rax+0x0],dh
   14000e57e:	add    BYTE PTR cs:[rbp+0x0],ah
   14000e582:	js     0x14000e584
   14000e584:	add    BYTE PTR gs:[rax],al
   14000e587:	add    BYTE PTR [rax+0x1002e00],al
   14000e58d:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000e591:	add    BYTE PTR [rdi+0x0],ah
   14000e594:	(bad)  
   14000e595:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000e599:	add    BYTE PTR [rdi+0x0],ch
   14000e59c:	jo     0x14000e59e
   14000e59e:	jns    0x14000e5a0
   14000e5a0:	jb     0x14000e5a2
   14000e5a2:	imul   eax,DWORD PTR [rax],0x680067
   14000e5a8:	je     0x14000e5aa
   14000e5aa:	add    BYTE PTR [rax],al
   14000e5ac:	test   eax,0x4d002000
   14000e5b1:	add    BYTE PTR [rcx+0x0],ch
   14000e5b4:	movsxd eax,DWORD PTR [rax]
   14000e5b6:	jb     0x14000e5b8
   14000e5b8:	outs   dx,DWORD PTR ds:[rsi]
   14000e5b9:	add    BYTE PTR [rbx+0x0],dh
   14000e5bc:	outs   dx,DWORD PTR ds:[rsi]
   14000e5bd:	add    BYTE PTR [rsi+0x0],ah
   14000e5c0:	je     0x14000e5c2
   14000e5c2:	and    BYTE PTR [rax],al
   14000e5c4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e5c8:	jb     0x14000e5ca
   14000e5ca:	jo     0x14000e5cc
   14000e5cc:	outs   dx,DWORD PTR ds:[rsi]
   14000e5cd:	add    BYTE PTR [rdx+0x0],dh
   14000e5d0:	(bad)  
   14000e5d1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e5d5:	add    BYTE PTR [rdi+0x0],ch
   14000e5d8:	outs   dx,BYTE PTR ds:[rsi]
   14000e5d9:	add    BYTE PTR [rsi],ch
   14000e5db:	add    BYTE PTR [rax],ah
   14000e5dd:	add    BYTE PTR [rcx+0x0],al
   14000e5e0:	ins    BYTE PTR es:[rdi],dx
   14000e5e1:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000e5e5:	add    BYTE PTR [rdx+0x0],dh
   14000e5e8:	imul   eax,DWORD PTR [rax],0x680067
   14000e5ee:	je     0x14000e5f0
   14000e5f0:	jae    0x14000e5f2
   14000e5f2:	and    BYTE PTR [rax],al
   14000e5f4:	jb     0x14000e5f6
   14000e5f6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e5fa:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e5fe:	jbe    0x14000e600
   14000e600:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000e605:	add    BYTE PTR [rax],al
   14000e607:	add    BYTE PTR [rax+0x0],al
   14000e60a:	or     al,0x0
   14000e60c:	add    DWORD PTR [rax],eax
   14000e60e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000e612:	imul   eax,DWORD PTR [rax],0x690067
   14000e618:	outs   dx,BYTE PTR ds:[rsi]
   14000e619:	add    BYTE PTR [rcx+0x0],ah
   14000e61c:	ins    BYTE PTR es:[rdi],dx
   14000e61d:	add    BYTE PTR [rsi+0x0],al
   14000e620:	imul   eax,DWORD PTR [rax],0x65006c
   14000e626:	outs   dx,BYTE PTR ds:[rsi]
   14000e627:	add    BYTE PTR [rcx+0x0],ah
   14000e62a:	ins    DWORD PTR es:[rdi],dx
   14000e62b:	add    BYTE PTR [rbp+0x0],ah
   14000e62e:	add    BYTE PTR [rax],al
   14000e630:	rex.W add BYTE PTR [rdi+0x0],dl
   14000e634:	push   rdx
   14000e635:	add    BYTE PTR [rbx+0x0],al
   14000e638:	outs   dx,DWORD PTR ds:[rsi]
   14000e639:	add    BYTE PTR [rbp+0x0],ch
   14000e63c:	jo     0x14000e63e
   14000e63e:	add    BYTE PTR cs:[rbp+0x0],ah
   14000e642:	js     0x14000e644
   14000e644:	add    BYTE PTR gs:[rax],al
   14000e647:	add    BYTE PTR [rdx+0x0],ch
   14000e64a:	and    eax,0x50000100
   14000e64f:	add    BYTE PTR [rdx+0x0],dh
   14000e652:	outs   dx,DWORD PTR ds:[rsi]
   14000e653:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e657:	add    BYTE PTR [rbx+0x0],ah
   14000e65a:	je     0x14000e65c
   14000e65c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e660:	ins    DWORD PTR es:[rdi],dx
   14000e661:	add    BYTE PTR [rbp+0x0],ah
   14000e664:	add    BYTE PTR [rax],al
   14000e666:	add    BYTE PTR [rax],al
   14000e668:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e66c:	movsxd eax,DWORD PTR [rax]
   14000e66e:	jb     0x14000e670
   14000e670:	outs   dx,DWORD PTR ds:[rsi]
   14000e671:	add    BYTE PTR [rbx+0x0],dh
   14000e674:	outs   dx,DWORD PTR ds:[rsi]
   14000e675:	add    BYTE PTR [rsi+0x0],ah
   14000e678:	je     0x14000e67a
   14000e67a:	scas   al,BYTE PTR es:[rdi]
   14000e67b:	add    BYTE PTR [rax],ah
   14000e67d:	add    BYTE PTR [rdi+0x0],dl
   14000e680:	imul   eax,DWORD PTR [rax],0x64006e
   14000e686:	outs   dx,DWORD PTR ds:[rsi]
   14000e687:	add    BYTE PTR [rdi+0x0],dh
   14000e68a:	jae    0x14000e68c
   14000e68c:	scas   al,BYTE PTR es:[rdi]
   14000e68d:	add    BYTE PTR [rax],ah
   14000e68f:	add    BYTE PTR [rdi+0x0],cl
   14000e692:	jo     0x14000e694
   14000e694:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e698:	(bad)  
   14000e699:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e69d:	add    BYTE PTR [rsi+0x0],ch
   14000e6a0:	add    BYTE PTR [eax],ah
   14000e6a3:	add    BYTE PTR [rbx+0x0],dl
   14000e6a6:	jns    0x14000e6a8
   14000e6a8:	jae    0x14000e6aa
   14000e6aa:	je     0x14000e6ac
   14000e6ac:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e6b0:	add    BYTE PTR [rax],al
   14000e6b2:	add    BYTE PTR [rax],al
   14000e6b4:	rex.RX add BYTE PTR [rcx],r10b
   14000e6b7:	add    BYTE PTR [rcx],al
   14000e6b9:	add    BYTE PTR [rax+0x0],dl
   14000e6bc:	jb     0x14000e6be
   14000e6be:	outs   dx,DWORD PTR ds:[rsi]
   14000e6bf:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e6c3:	add    BYTE PTR [rbx+0x0],ah
   14000e6c6:	je     0x14000e6c8
   14000e6c8:	push   rsi
   14000e6c9:	add    BYTE PTR [rbp+0x0],ah
   14000e6cc:	jb     0x14000e6ce
   14000e6ce:	jae    0x14000e6d0
   14000e6d0:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e6d6:	add    BYTE PTR [rax],al
   14000e6d8:	xor    DWORD PTR [rax],eax
   14000e6da:	xor    BYTE PTR [rax],al
   14000e6dc:	add    BYTE PTR cs:[rax],dh
   14000e6df:	add    BYTE PTR [rsi],ch
   14000e6e1:	add    BYTE PTR [rcx],dh
   14000e6e3:	add    BYTE PTR [rax],dh
   14000e6e5:	add    BYTE PTR [rdx],dh
   14000e6e7:	add    BYTE PTR [rax+rax*1],dh
   14000e6ea:	xor    BYTE PTR [rax],al
   14000e6ec:	add    BYTE PTR cs:[rcx],dh
   14000e6ef:	add    BYTE PTR [rsi],dh
   14000e6f1:	add    BYTE PTR [rbx],dh
   14000e6f3:	add    BYTE PTR [rax],bh
   14000e6f5:	add    BYTE PTR [rax+rax*1],dh
   14000e6f8:	add    BYTE PTR [rax],al
   14000e6fa:	add    BYTE PTR [rax],al
   14000e6fc:	add    BYTE PTR [rax],r8b
   14000e6ff:	add    BYTE PTR [rcx],al
   14000e701:	add    BYTE PTR [rsi+0x0],dl
   14000e704:	(bad)  
   14000e705:	add    BYTE PTR [rdx+0x0],dh
   14000e708:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e70c:	ins    BYTE PTR es:[rdi],dx
   14000e70d:	add    BYTE PTR [rbp+0x0],ah
   14000e710:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e714:	data16 add BYTE PTR [rdi+0x0],ch
   14000e718:	add    BYTE PTR [rax],al
   14000e71a:	add    BYTE PTR [rax],al
   14000e71c:	and    al,0x0
   14000e71e:	add    al,0x0
   14000e720:	add    BYTE PTR [rax],al
   14000e722:	push   rsp
   14000e723:	add    BYTE PTR [rdx+0x0],dh
   14000e726:	(bad)  
   14000e727:	add    BYTE PTR [rsi+0x0],ch
   14000e72a:	jae    0x14000e72c
   14000e72c:	ins    BYTE PTR es:[rdi],dx
   14000e72d:	add    BYTE PTR [rcx+0x0],ah
   14000e730:	je     0x14000e732
   14000e732:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e738:	add    BYTE PTR [rax],al
   14000e73a:	add    BYTE PTR [rax],al
   14000e73c:	or     DWORD PTR [rax+rsi*4],eax
   14000e73f:	add    al,0xcd
   14000e741:	dec    ch
   14000e743:	dec    al
   14000e745:	add    BYTE PTR [rax],al
   14000e747:	add    BYTE PTR [rax],al
   14000e749:	add    BYTE PTR [rcx],al
   14000e74b:	add    BYTE PTR [rax],al
   14000e74d:	add    BYTE PTR [rax],al
   14000e74f:	add    BYTE PTR [rcx],dl
   14000e751:	add    BYTE PTR [rax],al
   14000e753:	add    BYTE PTR [rax],al
   14000e755:	add    BYTE PTR [rax],al
   14000e757:	add    BYTE PTR [rdx],al
   14000e759:	add    BYTE PTR [rax],al
   14000e75b:	add    BYTE PTR [rcx-0x78],al
   14000e75e:	(bad)  
   14000e75f:	mov    esp,ebx
   14000e761:	jg     0x14000e725
   14000e763:	fimul  WORD PTR [rcx+0x3e4c3b00]
   14000e769:	mov    ebp,0xa485837e
   14000e76e:	add    ah,0xba
   14000e771:	shl    DWORD PTR [rsi+rbp*2+0x22],cl
   14000e775:	stos   DWORD PTR es:[rdi],eax
   14000e776:	(bad)  
   14000e777:	fist   DWORD PTR [rbx]
   14000e779:	js     0x14000e74b
   14000e77b:	(bad)  
	...
   14000e794:	mov    BYTE PTR [rax],al
   14000e796:	add    BYTE PTR [rax],al
   14000e798:	(bad)  
   14000e799:	add    BYTE PTR [rax],al
   14000e79b:	add    BYTE PTR [rax+0x8000000],bl
   14000e7a1:	add    BYTE PTR [rax],al
   14000e7a3:	add    BYTE PTR [rax+0xe000000],ah
   14000e7a9:	add    BYTE PTR [rax],al
   14000e7ab:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000e7b9:	add    BYTE PTR [rax],al
   14000e7bb:	add    BYTE PTR [rax+0xc000000],bh
   14000e7c1:	add    BYTE PTR [rax],al
   14000e7c3:	add    BYTE PTR [rax],al
   14000e7c5:	add    BYTE PTR [rax],al
   14000e7c7:	add    BYTE PTR [rbp+0x0],cl
   14000e7ca:	push   rbp
   14000e7cb:	add    BYTE PTR [rcx+0x0],cl
	...
   14000e7d6:	add    BYTE PTR [rax],al
   14000e7d8:	adc    BYTE PTR [rax],al
   14000e7da:	add    BYTE PTR [rax],al
   14000e7dc:	sbb    BYTE PTR [rax],al
   14000e7de:	add    BYTE PTR [rax],al
   14000e7e0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000e7e4:	rex.WB add BYTE PTR [r8],al
	...
   14000e7ef:	add    BYTE PTR [rbx],cl
   14000e7f1:	add    BYTE PTR [rax],al
   14000e7f3:	add    BYTE PTR [rax],dl
   14000e7f5:	add    BYTE PTR [rax],al
   14000e7f7:	add    BYTE PTR [rbp+0x0],ah
   14000e7fa:	outs   dx,BYTE PTR ds:[rsi]
   14000e7fb:	add    BYTE PTR [rip+0x53005500],ch        # 0x193013d01
   14000e801:	add    BYTE PTR [rax],al
   14000e803:	add    BYTE PTR [rax],al
   14000e805:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000f000 <.reloc>:
   14000f000:	add    BYTE PTR [rax+0x200000],dl
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	mov    al,0xa2
   14000f00a:	mov    eax,0xe0a2c8a2
   14000f00f:	movabs ds:0xa380a378a370a2e8,al
   14000f018:	mov    BYTE PTR [rbx-0x5c675c70],ah
   14000f01e:	add    BYTE PTR [rax],al
   14000f020:	add    BYTE PTR [rax+0x100000],ah
   14000f026:	add    BYTE PTR [rax],al
   14000f028:	mov    eax,0xd8a4d0a4
   14000f02d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f02e:	loopne 0x14000efd4
   14000f030:	add    al,al
   14000f032:	add    BYTE PTR [rax],al
   14000f034:	cmp    BYTE PTR [rax],al
   14000f036:	add    BYTE PTR [rax],al
   14000f038:	add    BYTE PTR [rax-0x5fb75fc8],ah
   14000f03e:	pop    rax
   14000f03f:	movabs al,ds:0xa098a088a078a068
   14000f048:	test   al,0xa0
   14000f04a:	mov    eax,0xd8a0c8a0
   14000f04f:	movabs al,ds:0xa118a108a0f8a0e8
   14000f058:	sub    BYTE PTR [rcx-0x5eb75ec8],ah
   14000f05e:	pop    rax
   14000f05f:	movabs eax,ds:0xa190a170a168
