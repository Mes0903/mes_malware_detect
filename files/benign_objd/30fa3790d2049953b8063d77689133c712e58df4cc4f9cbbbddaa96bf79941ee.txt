
30fa3790d2049953b8063d77689133c712e58df4cc4f9cbbbddaa96bf79941ee.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x4605]        # 0x405620
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x4606]        # 0x405630
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x4609]        # 0x405640
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x45cc]        # 0x405610
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x447f]        # 0x4054d0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x45a1]        # 0x405600
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402de0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401d90
  401081:	mov    rdx,QWORD PTR [rip+0x44d8]        # 0x405560
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x44be]        # 0x405550
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x4524]        # 0x4055c0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x445b]        # 0x405500
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401970
  4010af:	mov    rax,QWORD PTR [rip+0x43ca]        # 0x405480
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402de0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xb49]        # 0x401c70
  401127:	call   0x401c60
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4485]        # 0x4055f0
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x4415]        # 0x4055b0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402df8
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x443a]        # 0x405600
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x433b]        # 0x405530
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x814a]        # 0x40934c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x4317]        # 0x405540
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x425c]        # 0x4054c0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401f80
  40127d:	lea    rcx,[rip+0x129c]        # 0x402520
  401284:	call   QWORD PTR [rip+0x80ba]        # 0x409344
  40128a:	mov    rdx,QWORD PTR [rip+0x428f]        # 0x405520
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402430
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402e20
  4012a5:	call   0x401d70
  4012aa:	mov    rax,QWORD PTR [rip+0x421f]        # 0x4054d0
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x4231]        # 0x4054f0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402d60
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402d40
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402d60
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402d58
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401940
  4013bb:	mov    rax,QWORD PTR [rip+0x411e]        # 0x4054e0
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x402ef0
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402dc8
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x4109]        # 0x405540
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402dd0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x411d]        # 0x405580
  401463:	mov    rcx,QWORD PTR [rip+0x4106]        # 0x405570
  40146a:	call   0x402dc0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7e5b]        # 0x4092f4
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x40f9]        # 0x4055a0
  4014a7:	mov    rcx,QWORD PTR [rip+0x40e2]        # 0x405590
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402dc0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402d88
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x4125]        # 0x405600
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401980
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x40f5]        # 0x405600
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401980
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x28
  401536:	mov    rbx,QWORD PTR [rip+0x7e67]        # 0x4093a4
  40153d:	mov    rsi,rcx
  401540:	call   rbx
  401542:	lea    rdx,[rip+0x3ab7]        # 0x405000
  401549:	lea    rcx,[rax+0x60]
  40154d:	call   0x4017c8
  401552:	call   rbx
  401554:	lea    rdx,[rip+0x3af5]        # 0x405050
  40155b:	lea    rcx,[rax+0x60]
  40155f:	call   0x4017c8
  401564:	call   rbx
  401566:	lea    rdx,[rip+0x3b0b]        # 0x405078
  40156d:	lea    rcx,[rax+0x60]
  401571:	call   0x4017c8
  401576:	call   rbx
  401578:	lea    rdx,[rip+0x3b29]        # 0x4050a8
  40157f:	lea    rcx,[rax+0x60]
  401583:	call   0x4017c8
  401588:	call   rbx
  40158a:	lea    rdx,[rip+0x3b37]        # 0x4050c8
  401591:	lea    rcx,[rax+0x60]
  401595:	call   0x4017c8
  40159a:	call   rbx
  40159c:	lea    rdx,[rip+0x3b4d]        # 0x4050f0
  4015a3:	lea    rcx,[rax+0x60]
  4015a7:	call   0x4017c8
  4015ac:	call   rbx
  4015ae:	lea    rdx,[rip+0x3b73]        # 0x405128
  4015b5:	lea    rcx,[rax+0x60]
  4015b9:	call   0x4017c8
  4015be:	call   rbx
  4015c0:	lea    rdx,[rip+0x3b87]        # 0x40514e
  4015c7:	lea    rcx,[rax+0x60]
  4015cb:	call   0x4017c8
  4015d0:	call   rbx
  4015d2:	lea    rdx,[rip+0x3b87]        # 0x405160
  4015d9:	lea    rcx,[rax+0x60]
  4015dd:	call   0x4017c8
  4015e2:	call   rbx
  4015e4:	lea    rdx,[rip+0x3ba5]        # 0x405190
  4015eb:	lea    rcx,[rax+0x60]
  4015ef:	call   0x4017c8
  4015f4:	xor    eax,eax
  4015f6:	test   rsi,rsi
  4015f9:	setne  al
  4015fc:	add    rsp,0x28
  401600:	pop    rbx
  401601:	pop    rsi
  401602:	ret    
  401603:	nop    DWORD PTR [rax]
  401606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401610:	push   r12
  401612:	push   rbp
  401613:	push   rdi
  401614:	push   rsi
  401615:	push   rbx
  401616:	sub    rsp,0x30
  40161a:	mov    rbp,rdx
  40161d:	xor    edx,edx
  40161f:	mov    r12,rcx
  401622:	mov    rdi,r8
  401625:	call   0x4017a0
  40162a:	cmp    r12,QWORD PTR [rip+0x69ff]        # 0x408030
  401631:	mov    rsi,rax
  401634:	je     0x40166a
  401636:	mov    edx,DWORD PTR [rip+0x29d8]        # 0x404014
  40163c:	test   edx,edx
  40163e:	je     0x40166a
  401640:	xor    ebx,ebx
  401642:	mov    rcx,QWORD PTR [rip+0x69ef]        # 0x408038
  401649:	lea    r9,[rip+0x3b67]        # 0x4051b7
  401650:	lea    rdx,[rip+0x3b62]        # 0x4051b9
  401657:	mov    r8,rdi
  40165a:	add    ebx,0x1
  40165d:	call   0x4017c8
  401662:	cmp    ebx,DWORD PTR [rip+0x29ac]        # 0x404014
  401668:	jb     0x401642
  40166a:	mov    rcx,r12
  40166d:	call   0x401790
  401672:	test   rbp,rbp
  401675:	lea    r9,[rip+0x3b35]        # 0x4051b1
  40167c:	jne    0x401697
  40167e:	cmp    r12,QWORD PTR [rip+0x69ab]        # 0x408030
  401685:	lea    r9,[rip+0x3b27]        # 0x4051b3
  40168c:	lea    rdx,[rip+0x3b22]        # 0x4051b5
  401693:	cmovne r9,rdx
  401697:	mov    QWORD PTR [rsp+0x28],rax
  40169c:	mov    rcx,QWORD PTR [rip+0x6995]        # 0x408038
  4016a3:	lea    rax,[rip+0x3b1e]        # 0x4051c8
  4016aa:	lea    rdx,[rip+0x3b0e]        # 0x4051bf
  4016b1:	mov    r8,rdi
  4016b4:	mov    QWORD PTR [rsp+0x20],rax
  4016b9:	call   0x4017c8
  4016be:	mov    rcx,r12
  4016c1:	call   0x401790
  4016c6:	mov    rcx,rax
  4016c9:	call   0x402d40
  4016ce:	mov    ebx,eax
  4016d0:	jmp    0x4016df
  4016d2:	mov    ecx,0x5f
  4016d7:	add    ebx,0x1
  4016da:	call   0x402d78
  4016df:	mov    rcx,QWORD PTR [rip+0x695a]        # 0x408040
  4016e6:	call   0x402d40
  4016eb:	mov    r10d,ebx
  4016ee:	mov    rdx,QWORD PTR [rip+0x6943]        # 0x408038
  4016f5:	cmp    r10,rax
  4016f8:	jbe    0x4016d2
  4016fa:	mov    ecx,0xa
  4016ff:	call   0x402d78
  401704:	test   rsi,rsi
  401707:	je     0x401760
  401709:	mov    eax,DWORD PTR [rip+0x2901]        # 0x404010
  40170f:	test   eax,eax
  401711:	je     0x401760
  401713:	xor    r9d,r9d
  401716:	test   rbp,rbp
  401719:	mov    r8,QWORD PTR [rip+0x6920]        # 0x408040
  401720:	je     0x401772
  401722:	lea    rdx,[rip+0x3a8e]        # 0x4051b7
  401729:	mov    rcx,rdi
  40172c:	call   0x4017a8
  401731:	mov    rdi,rax
  401734:	mov    rcx,QWORD PTR [rsi]
  401737:	mov    rbx,rsi
  40173a:	test   rcx,rcx
  40173d:	je     0x401758
  40173f:	nop
  401740:	mov    rdx,QWORD PTR [rbx+0x8]
  401744:	mov    r8,rdi
  401747:	add    rbx,0x8
  40174b:	call   0x401610
  401750:	mov    rcx,QWORD PTR [rbx]
  401753:	test   rcx,rcx
  401756:	jne    0x401740
  401758:	mov    rcx,rdi
  40175b:	call   0x4017c0
  401760:	mov    rcx,rsi
  401763:	add    rsp,0x30
  401767:	pop    rbx
  401768:	pop    rsi
  401769:	pop    rdi
  40176a:	pop    rbp
  40176b:	pop    r12
  40176d:	jmp    0x4017c0
  401772:	lea    rdx,[rip+0x3a3a]        # 0x4051b3
  401779:	mov    rcx,rdi
  40177c:	call   0x4017a8
  401781:	mov    rdi,rax
  401784:	jmp    0x401734
  401786:	nop
  401787:	nop
  401788:	nop
  401789:	nop
  40178a:	nop
  40178b:	nop
  40178c:	nop
  40178d:	nop
  40178e:	nop
  40178f:	nop
  401790:	jmp    QWORD PTR [rip+0x7aee]        # 0x409284
  401796:	nop
  401797:	nop
  401798:	jmp    QWORD PTR [rip+0x7ade]        # 0x40927c
  40179e:	nop
  40179f:	nop
  4017a0:	jmp    QWORD PTR [rip+0x7ace]        # 0x409274
  4017a6:	nop
  4017a7:	nop
  4017a8:	jmp    QWORD PTR [rip+0x7b06]        # 0x4092b4
  4017ae:	nop
  4017af:	nop
  4017b0:	jmp    QWORD PTR [rip+0x7af6]        # 0x4092ac
  4017b6:	nop
  4017b7:	nop
  4017b8:	jmp    QWORD PTR [rip+0x7ae6]        # 0x4092a4
  4017be:	nop
  4017bf:	nop
  4017c0:	jmp    QWORD PTR [rip+0x7ad6]        # 0x40929c
  4017c6:	nop
  4017c7:	nop
  4017c8:	jmp    QWORD PTR [rip+0x7ac6]        # 0x409294
  4017ce:	nop
  4017cf:	nop
  4017d0:	push   rbx
  4017d1:	sub    rsp,0x30
  4017d5:	mov    rbx,rcx
  4017d8:	mov    rcx,QWORD PTR [rip+0x7231]        # 0x408a10
  4017df:	call   0x401d80
  4017e4:	cmp    rax,0xffffffffffffffff
  4017e8:	mov    QWORD PTR [rsp+0x20],rax
  4017ed:	je     0x401865
  4017ef:	mov    ecx,0x8
  4017f4:	call   0x402db8
  4017f9:	mov    rcx,QWORD PTR [rip+0x7210]        # 0x408a10
  401800:	call   0x401d80
  401805:	mov    rcx,QWORD PTR [rip+0x720c]        # 0x408a18
  40180c:	mov    QWORD PTR [rsp+0x20],rax
  401811:	call   0x401d80
  401816:	lea    rdx,[rsp+0x20]
  40181b:	lea    r8,[rsp+0x28]
  401820:	mov    rcx,rbx
  401823:	mov    QWORD PTR [rsp+0x28],rax
  401828:	call   0x402e00
  40182d:	mov    rcx,QWORD PTR [rsp+0x20]
  401832:	mov    rbx,rax
  401835:	call   0x401d90
  40183a:	mov    rcx,QWORD PTR [rsp+0x28]
  40183f:	mov    QWORD PTR [rip+0x71ca],rax        # 0x408a10
  401846:	call   0x401d90
  40184b:	mov    ecx,0x8
  401850:	mov    QWORD PTR [rip+0x71c1],rax        # 0x408a18
  401857:	call   0x402da8
  40185c:	mov    rax,rbx
  40185f:	add    rsp,0x30
  401863:	pop    rbx
  401864:	ret    
  401865:	mov    rax,QWORD PTR [rip+0x3ca4]        # 0x405510
  40186c:	mov    rcx,rbx
  40186f:	call   QWORD PTR [rax]
  401871:	add    rsp,0x30
  401875:	pop    rbx
  401876:	ret    
  401877:	nop    WORD PTR [rax+rax*1+0x0]
  401880:	sub    rsp,0x28
  401884:	call   0x4017d0
  401889:	test   rax,rax
  40188c:	sete   al
  40188f:	movzx  eax,al
  401892:	neg    eax
  401894:	add    rsp,0x28
  401898:	ret    
  401899:	nop
  40189a:	nop
  40189b:	nop
  40189c:	nop
  40189d:	nop
  40189e:	nop
  40189f:	nop
  4018a0:	sub    rsp,0x28
  4018a4:	mov    rax,QWORD PTR [rip+0x2775]        # 0x404020
  4018ab:	mov    rax,QWORD PTR [rax]
  4018ae:	test   rax,rax
  4018b1:	je     0x4018d0
  4018b3:	call   rax
  4018b5:	mov    rax,QWORD PTR [rip+0x2764]        # 0x404020
  4018bc:	lea    rdx,[rax+0x8]
  4018c0:	mov    rax,QWORD PTR [rax+0x8]
  4018c4:	mov    QWORD PTR [rip+0x2755],rdx        # 0x404020
  4018cb:	test   rax,rax
  4018ce:	jne    0x4018b3
  4018d0:	add    rsp,0x28
  4018d4:	ret    
  4018d5:	nop
  4018d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018e0:	push   rsi
  4018e1:	push   rbx
  4018e2:	sub    rsp,0x28
  4018e6:	mov    rsi,QWORD PTR [rip+0x3ba3]        # 0x405490
  4018ed:	mov    rax,QWORD PTR [rsi]
  4018f0:	cmp    eax,0xffffffff
  4018f3:	mov    ebx,eax
  4018f5:	je     0x401920
  4018f7:	test   ebx,ebx
  4018f9:	je     0x40190a
  4018fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401900:	mov    eax,ebx
  401902:	call   QWORD PTR [rsi+rax*8]
  401905:	sub    ebx,0x1
  401908:	jne    0x401900
  40190a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4018a0
  401911:	add    rsp,0x28
  401915:	pop    rbx
  401916:	pop    rsi
  401917:	jmp    0x401880
  40191c:	nop    DWORD PTR [rax+0x0]
  401920:	xor    ebx,ebx
  401922:	jmp    0x401926
  401924:	mov    ebx,eax
  401926:	lea    edx,[rbx+0x1]
  401929:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40192e:	mov    rax,rdx
  401931:	jne    0x401924
  401933:	jmp    0x4018f7
  401935:	nop
  401936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401940:	mov    eax,DWORD PTR [rip+0x670a]        # 0x408050
  401946:	test   eax,eax
  401948:	je     0x401950
  40194a:	repz ret 
  40194c:	nop    DWORD PTR [rax+0x0]
  401950:	mov    DWORD PTR [rip+0x66f6],0x1        # 0x408050
  40195a:	jmp    0x4018e0
  40195c:	nop
  40195d:	nop
  40195e:	nop
  40195f:	nop
  401960:	mov    rax,QWORD PTR [rip+0x7a45]        # 0x4093ac
  401967:	rex.W jmp rax
  40196a:	nop
  40196b:	nop
  40196c:	nop
  40196d:	nop
  40196e:	nop
  40196f:	nop
  401970:	xor    eax,eax
  401972:	ret    
  401973:	nop
  401974:	nop
  401975:	nop
  401976:	nop
  401977:	nop
  401978:	nop
  401979:	nop
  40197a:	nop
  40197b:	nop
  40197c:	nop
  40197d:	nop
  40197e:	nop
  40197f:	nop
  401980:	push   r12
  401982:	push   rbp
  401983:	push   rdi
  401984:	push   rsi
  401985:	push   rbx
  401986:	sub    rsp,0x40
  40198a:	mov    rbx,QWORD PTR [rip+0x26ef]        # 0x404080
  401991:	movabs rax,0x2b992ddfa232
  40199b:	mov    QWORD PTR [rsp+0x20],0x0
  4019a4:	cmp    rbx,rax
  4019a7:	je     0x4019c0
  4019a9:	not    rbx
  4019ac:	mov    QWORD PTR [rip+0x26dd],rbx        # 0x404090
  4019b3:	add    rsp,0x40
  4019b7:	pop    rbx
  4019b8:	pop    rsi
  4019b9:	pop    rdi
  4019ba:	pop    rbp
  4019bb:	pop    r12
  4019bd:	ret    
  4019be:	xchg   ax,ax
  4019c0:	lea    rcx,[rsp+0x20]
  4019c5:	call   QWORD PTR [rip+0x7931]        # 0x4092fc
  4019cb:	mov    r12,QWORD PTR [rsp+0x20]
  4019d0:	call   QWORD PTR [rip+0x7906]        # 0x4092dc
  4019d6:	mov    ebp,eax
  4019d8:	call   QWORD PTR [rip+0x7906]        # 0x4092e4
  4019de:	mov    edi,eax
  4019e0:	call   QWORD PTR [rip+0x791e]        # 0x409304
  4019e6:	lea    rcx,[rsp+0x30]
  4019eb:	mov    esi,eax
  4019ed:	call   QWORD PTR [rip+0x7929]        # 0x40931c
  4019f3:	xor    r12,QWORD PTR [rsp+0x30]
  4019f8:	mov    edx,edi
  4019fa:	movabs rax,0xffffffffffff
  401a04:	xor    rbp,r12
  401a07:	mov    rdi,rbp
  401a0a:	xor    rdi,rdx
  401a0d:	mov    edx,esi
  401a0f:	xor    rdi,rdx
  401a12:	mov    rsi,rdi
  401a15:	and    rsi,rax
  401a18:	cmp    rsi,rbx
  401a1b:	je     0x401a40
  401a1d:	mov    rax,rsi
  401a20:	not    rax
  401a23:	mov    QWORD PTR [rip+0x2656],rsi        # 0x404080
  401a2a:	mov    QWORD PTR [rip+0x265f],rax        # 0x404090
  401a31:	add    rsp,0x40
  401a35:	pop    rbx
  401a36:	pop    rsi
  401a37:	pop    rdi
  401a38:	pop    rbp
  401a39:	pop    r12
  401a3b:	ret    
  401a3c:	nop    DWORD PTR [rax+0x0]
  401a40:	movabs rax,0xffffd466d2205dcc
  401a4a:	movabs rsi,0x2b992ddfa233
  401a54:	jmp    0x401a23
  401a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a60:	push   rbp
  401a61:	push   rsi
  401a62:	push   rbx
  401a63:	mov    rbp,rsp
  401a66:	sub    rsp,0x70
  401a6a:	mov    rsi,rcx
  401a6d:	lea    rcx,[rip+0x660c]        # 0x408080
  401a74:	call   QWORD PTR [rip+0x78b2]        # 0x40932c
  401a7a:	mov    rbx,QWORD PTR [rip+0x66f7]        # 0x408178
  401a81:	xor    r8d,r8d
  401a84:	lea    rdx,[rbp-0x28]
  401a88:	mov    rcx,rbx
  401a8b:	call   QWORD PTR [rip+0x78a3]        # 0x409334
  401a91:	test   rax,rax
  401a94:	mov    r9,rax
  401a97:	je     0x401b40
  401a9d:	lea    rax,[rbp-0x20]
  401aa1:	mov    QWORD PTR [rsp+0x38],0x0
  401aaa:	mov    r8,rbx
  401aad:	mov    rdx,QWORD PTR [rbp-0x28]
  401ab1:	xor    ecx,ecx
  401ab3:	mov    QWORD PTR [rsp+0x30],rax
  401ab8:	lea    rax,[rbp-0x18]
  401abc:	mov    QWORD PTR [rsp+0x28],rax
  401ac1:	lea    rax,[rip+0x65b8]        # 0x408080
  401ac8:	mov    QWORD PTR [rsp+0x20],rax
  401acd:	call   QWORD PTR [rip+0x7869]        # 0x40933c
  401ad3:	mov    rax,QWORD PTR [rip+0x669e]        # 0x408178
  401ada:	xor    ecx,ecx
  401adc:	mov    QWORD PTR [rip+0x661d],rsi        # 0x408100
  401ae3:	mov    DWORD PTR [rip+0x6a93],0xc0000409        # 0x408580
  401aed:	mov    DWORD PTR [rip+0x6a8d],0x1        # 0x408584
  401af7:	mov    QWORD PTR [rip+0x6a92],rax        # 0x408590
  401afe:	mov    rax,QWORD PTR [rip+0x257b]        # 0x404080
  401b05:	mov    QWORD PTR [rbp-0x10],rax
  401b09:	mov    rax,QWORD PTR [rip+0x2580]        # 0x404090
  401b10:	mov    QWORD PTR [rbp-0x8],rax
  401b14:	call   QWORD PTR [rip+0x782a]        # 0x409344
  401b1a:	lea    rcx,[rip+0x36cf]        # 0x4051f0
  401b21:	call   QWORD PTR [rip+0x783d]        # 0x409364
  401b27:	call   QWORD PTR [rip+0x77a7]        # 0x4092d4
  401b2d:	mov    edx,0xc0000409
  401b32:	mov    rcx,rax
  401b35:	call   QWORD PTR [rip+0x7819]        # 0x409354
  401b3b:	call   0x402da0
  401b40:	mov    rax,QWORD PTR [rbp+0x18]
  401b44:	mov    QWORD PTR [rip+0x662d],rax        # 0x408178
  401b4b:	lea    rax,[rbp+0x8]
  401b4f:	mov    QWORD PTR [rip+0x65c2],rax        # 0x408118
  401b56:	jmp    0x401ad3
  401b5b:	nop
  401b5c:	nop
  401b5d:	nop
  401b5e:	nop
  401b5f:	nop
  401b60:	sub    rsp,0x28
  401b64:	test   edx,edx
  401b66:	je     0x401b80
  401b68:	cmp    edx,0x3
  401b6b:	je     0x401b80
  401b6d:	mov    eax,0x1
  401b72:	add    rsp,0x28
  401b76:	ret    
  401b77:	nop    WORD PTR [rax+rax*1+0x0]
  401b80:	call   0x402870
  401b85:	mov    eax,0x1
  401b8a:	add    rsp,0x28
  401b8e:	ret    
  401b8f:	nop
  401b90:	push   rsi
  401b91:	push   rbx
  401b92:	sub    rsp,0x28
  401b96:	mov    rax,QWORD PTR [rip+0x38d3]        # 0x405470
  401b9d:	cmp    DWORD PTR [rax],0x2
  401ba0:	je     0x401ba8
  401ba2:	mov    DWORD PTR [rax],0x2
  401ba8:	cmp    edx,0x2
  401bab:	je     0x401bc0
  401bad:	cmp    edx,0x1
  401bb0:	je     0x401bf2
  401bb2:	mov    eax,0x1
  401bb7:	add    rsp,0x28
  401bbb:	pop    rbx
  401bbc:	pop    rsi
  401bbd:	ret    
  401bbe:	xchg   ax,ax
  401bc0:	lea    rbx,[rip+0x8499]        # 0x40a060
  401bc7:	lea    rsi,[rip+0x8492]        # 0x40a060
  401bce:	cmp    rbx,rsi
  401bd1:	je     0x401bb2
  401bd3:	mov    rax,QWORD PTR [rbx]
  401bd6:	test   rax,rax
  401bd9:	je     0x401bdd
  401bdb:	call   rax
  401bdd:	add    rbx,0x8
  401be1:	cmp    rbx,rsi
  401be4:	jne    0x401bd3
  401be6:	mov    eax,0x1
  401beb:	add    rsp,0x28
  401bef:	pop    rbx
  401bf0:	pop    rsi
  401bf1:	ret    
  401bf2:	call   0x402870
  401bf7:	jmp    0x401bb2
  401bf9:	nop    DWORD PTR [rax+0x0]
  401c00:	xor    eax,eax
  401c02:	ret    
  401c03:	nop
  401c04:	nop
  401c05:	nop
  401c06:	nop
  401c07:	nop
  401c08:	nop
  401c09:	nop
  401c0a:	nop
  401c0b:	nop
  401c0c:	nop
  401c0d:	nop
  401c0e:	nop
  401c0f:	nop
  401c10:	sub    rsp,0x58
  401c14:	mov    rax,QWORD PTR [rip+0x6a45]        # 0x408660
  401c1b:	test   rax,rax
  401c1e:	je     0x401c4c
  401c20:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401c29:	mov    DWORD PTR [rsp+0x20],ecx
  401c2d:	lea    rcx,[rsp+0x20]
  401c32:	mov    QWORD PTR [rsp+0x28],rdx
  401c37:	movsd  QWORD PTR [rsp+0x30],xmm2
  401c3d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401c43:	movsd  QWORD PTR [rsp+0x40],xmm0
  401c49:	call   rax
  401c4b:	nop
  401c4c:	add    rsp,0x58
  401c50:	ret    
  401c51:	nop    DWORD PTR [rax+rax*1+0x0]
  401c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c60:	mov    QWORD PTR [rip+0x69f9],rcx        # 0x408660
  401c67:	jmp    0x402dd8
  401c6c:	nop    DWORD PTR [rax+0x0]
  401c70:	push   rsi
  401c71:	push   rbx
  401c72:	sub    rsp,0x78
  401c76:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401c7b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401c80:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401c86:	cmp    DWORD PTR [rcx],0x6
  401c89:	ja     0x401d60
  401c8f:	mov    edx,DWORD PTR [rcx]
  401c91:	lea    rax,[rip+0x369c]        # 0x405334
  401c98:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401c9c:	add    rax,rdx
  401c9f:	jmp    rax
  401ca1:	lea    rbx,[rip+0x3568]        # 0x405210
  401ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cb0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401cb6:	mov    rsi,QWORD PTR [rcx+0x8]
  401cba:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401cbf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401cc4:	call   0x402df0
  401cc9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401cd0:	lea    rcx,[rax+0x60]
  401cd4:	lea    rdx,[rip+0x362d]        # 0x405308
  401cdb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401ce1:	mov    r9,rsi
  401ce4:	mov    r8,rbx
  401ce7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401ced:	call   0x402d80
  401cf2:	nop
  401cf3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401cf8:	xor    eax,eax
  401cfa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401cff:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401d05:	add    rsp,0x78
  401d09:	pop    rbx
  401d0a:	pop    rsi
  401d0b:	ret    
  401d0c:	nop    DWORD PTR [rax+0x0]
  401d10:	lea    rbx,[rip+0x3518]        # 0x40522f
  401d17:	jmp    0x401cb0
  401d19:	nop    DWORD PTR [rax+0x0]
  401d20:	lea    rbx,[rip+0x3529]        # 0x405250
  401d27:	jmp    0x401cb0
  401d29:	nop    DWORD PTR [rax+0x0]
  401d30:	lea    rbx,[rip+0x3589]        # 0x4052c0
  401d37:	jmp    0x401cb0
  401d3c:	nop    DWORD PTR [rax+0x0]
  401d40:	lea    rbx,[rip+0x3551]        # 0x405298
  401d47:	jmp    0x401cb0
  401d4c:	nop    DWORD PTR [rax+0x0]
  401d50:	lea    rbx,[rip+0x3519]        # 0x405270
  401d57:	jmp    0x401cb0
  401d5c:	nop    DWORD PTR [rax+0x0]
  401d60:	lea    rbx,[rip+0x358f]        # 0x4052f6
  401d67:	jmp    0x401cb0
  401d6c:	nop
  401d6d:	nop
  401d6e:	nop
  401d6f:	nop
  401d70:	fninit 
  401d72:	ret    
  401d73:	nop
  401d74:	nop
  401d75:	nop
  401d76:	nop
  401d77:	nop
  401d78:	nop
  401d79:	nop
  401d7a:	nop
  401d7b:	nop
  401d7c:	nop
  401d7d:	nop
  401d7e:	nop
  401d7f:	nop
  401d80:	mov    rax,rcx
  401d83:	ret    
  401d84:	xchg   ax,ax
  401d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d90:	mov    rax,rcx
  401d93:	ret    
  401d94:	nop
  401d95:	nop
  401d96:	nop
  401d97:	nop
  401d98:	nop
  401d99:	nop
  401d9a:	nop
  401d9b:	nop
  401d9c:	nop
  401d9d:	nop
  401d9e:	nop
  401d9f:	nop
  401da0:	push   rsi
  401da1:	push   rbx
  401da2:	sub    rsp,0x38
  401da6:	lea    rax,[rsp+0x58]
  401dab:	mov    rbx,rcx
  401dae:	mov    QWORD PTR [rsp+0x58],rdx
  401db3:	mov    QWORD PTR [rsp+0x60],r8
  401db8:	mov    QWORD PTR [rsp+0x68],r9
  401dbd:	mov    QWORD PTR [rsp+0x28],rax
  401dc2:	call   0x402df0
  401dc7:	lea    rcx,[rip+0x3582]        # 0x405350
  401dce:	lea    r9,[rax+0x60]
  401dd2:	mov    r8d,0x1b
  401dd8:	mov    edx,0x1
  401ddd:	call   0x402d68
  401de2:	mov    rsi,QWORD PTR [rsp+0x28]
  401de7:	call   0x402df0
  401dec:	lea    rcx,[rax+0x60]
  401df0:	mov    rdx,rbx
  401df3:	mov    r8,rsi
  401df6:	call   0x402d30
  401dfb:	call   0x402da0
  401e00:	nop
  401e01:	nop    DWORD PTR [rax+rax*1+0x0]
  401e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e10:	push   r13
  401e12:	push   r12
  401e14:	push   rbp
  401e15:	push   rdi
  401e16:	push   rsi
  401e17:	push   rbx
  401e18:	sub    rsp,0x58
  401e1c:	movsxd rbp,DWORD PTR [rip+0x6861]        # 0x408684
  401e23:	mov    rbx,rcx
  401e26:	mov    rsi,rdx
  401e29:	mov    rdi,r8
  401e2c:	test   ebp,ebp
  401e2e:	jle    0x401f2a
  401e34:	mov    rax,QWORD PTR [rip+0x684d]        # 0x408688
  401e3b:	xor    r9d,r9d
  401e3e:	add    rax,0x8
  401e42:	mov    r10,QWORD PTR [rax]
  401e45:	cmp    rbx,r10
  401e48:	jb     0x401e5e
  401e4a:	mov    rdx,QWORD PTR [rax+0x8]
  401e4e:	mov    r11d,DWORD PTR [rdx+0x8]
  401e52:	add    r10,r11
  401e55:	cmp    rbx,r10
  401e58:	jb     0x401f10
  401e5e:	add    r9d,0x1
  401e62:	add    rax,0x18
  401e66:	cmp    r9d,ebp
  401e69:	jne    0x401e42
  401e6b:	mov    rcx,rbx
  401e6e:	call   0x402a80
  401e73:	test   rax,rax
  401e76:	mov    r12,rax
  401e79:	je     0x401f62
  401e7f:	lea    rbp,[rbp+rbp*2+0x0]
  401e84:	shl    rbp,0x3
  401e88:	mov    r13,rbp
  401e8b:	add    r13,QWORD PTR [rip+0x67f6]        # 0x408688
  401e92:	mov    QWORD PTR [r13+0x10],rax
  401e96:	mov    DWORD PTR [r13+0x0],0x0
  401e9e:	call   0x402ba0
  401ea3:	mov    edx,DWORD PTR [r12+0xc]
  401ea8:	mov    r8d,0x30
  401eae:	add    rax,rdx
  401eb1:	lea    rdx,[rsp+0x20]
  401eb6:	mov    QWORD PTR [r13+0x8],rax
  401eba:	mov    rax,QWORD PTR [rip+0x67c7]        # 0x408688
  401ec1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401ec6:	call   QWORD PTR [rip+0x74a8]        # 0x409374
  401ecc:	test   rax,rax
  401ecf:	je     0x401f45
  401ed1:	mov    eax,DWORD PTR [rsp+0x44]
  401ed5:	lea    edx,[rax-0x4]
  401ed8:	and    edx,0xfffffffb
  401edb:	je     0x401f09
  401edd:	sub    eax,0x40
  401ee0:	and    eax,0xffffffbf
  401ee3:	je     0x401f09
  401ee5:	mov    r9,rbp
  401ee8:	add    r9,QWORD PTR [rip+0x6799]        # 0x408688
  401eef:	mov    r8d,0x40
  401ef5:	mov    rdx,QWORD PTR [rsp+0x38]
  401efa:	mov    rcx,QWORD PTR [rsp+0x20]
  401eff:	call   QWORD PTR [rip+0x7467]        # 0x40936c
  401f05:	test   eax,eax
  401f07:	je     0x401f31
  401f09:	add    DWORD PTR [rip+0x6774],0x1        # 0x408684
  401f10:	mov    r8,rdi
  401f13:	mov    rdx,rsi
  401f16:	mov    rcx,rbx
  401f19:	add    rsp,0x58
  401f1d:	pop    rbx
  401f1e:	pop    rsi
  401f1f:	pop    rdi
  401f20:	pop    rbp
  401f21:	pop    r12
  401f23:	pop    r13
  401f25:	jmp    0x402d58
  401f2a:	xor    ebp,ebp
  401f2c:	jmp    0x401e6b
  401f31:	call   QWORD PTR [rip+0x73b5]        # 0x4092ec
  401f37:	lea    rcx,[rip+0x348a]        # 0x4053c8
  401f3e:	mov    edx,eax
  401f40:	call   0x401da0
  401f45:	mov    rax,QWORD PTR [rip+0x673c]        # 0x408688
  401f4c:	mov    edx,DWORD PTR [r12+0x8]
  401f51:	lea    rcx,[rip+0x3438]        # 0x405390
  401f58:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401f5d:	call   0x401da0
  401f62:	lea    rcx,[rip+0x3407]        # 0x405370
  401f69:	mov    rdx,rbx
  401f6c:	call   0x401da0
  401f71:	nop
  401f72:	nop    DWORD PTR [rax+0x0]
  401f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f80:	push   rbp
  401f81:	push   r14
  401f83:	push   r13
  401f85:	push   r12
  401f87:	push   rdi
  401f88:	push   rsi
  401f89:	push   rbx
  401f8a:	mov    rbp,rsp
  401f8d:	sub    rsp,0x60
  401f91:	mov    ebx,DWORD PTR [rip+0x66e9]        # 0x408680
  401f97:	test   ebx,ebx
  401f99:	je     0x401fb0
  401f9b:	mov    rsp,rbp
  401f9e:	pop    rbx
  401f9f:	pop    rsi
  401fa0:	pop    rdi
  401fa1:	pop    r12
  401fa3:	pop    r13
  401fa5:	pop    r14
  401fa7:	pop    rbp
  401fa8:	ret    
  401fa9:	nop    DWORD PTR [rax+0x0]
  401fb0:	mov    DWORD PTR [rip+0x66c6],0x1        # 0x408680
  401fba:	call   0x402ad0
  401fbf:	cdqe   
  401fc1:	lea    rax,[rax+rax*2]
  401fc5:	lea    rax,[rax*8+0x1e]
  401fcd:	and    rax,0xfffffffffffffff0
  401fd1:	call   0x402cf0
  401fd6:	mov    rsi,QWORD PTR [rip+0x34c3]        # 0x4054a0
  401fdd:	mov    rbx,QWORD PTR [rip+0x34cc]        # 0x4054b0
  401fe4:	sub    rsp,rax
  401fe7:	mov    DWORD PTR [rip+0x6693],0x0        # 0x408684
  401ff1:	lea    rax,[rsp+0x20]
  401ff6:	mov    QWORD PTR [rip+0x668b],rax        # 0x408688
  401ffd:	mov    rax,rsi
  402000:	sub    rax,rbx
  402003:	cmp    rax,0x7
  402007:	jle    0x401f9b
  402009:	cmp    rax,0xb
  40200d:	jle    0x402035
  40200f:	mov    r11d,DWORD PTR [rbx]
  402012:	test   r11d,r11d
  402015:	jne    0x402160
  40201b:	mov    r10d,DWORD PTR [rbx+0x4]
  40201f:	test   r10d,r10d
  402022:	jne    0x402160
  402028:	mov    r9d,DWORD PTR [rbx+0x8]
  40202c:	test   r9d,r9d
  40202f:	jne    0x40204c
  402031:	add    rbx,0xc
  402035:	mov    r8d,DWORD PTR [rbx]
  402038:	test   r8d,r8d
  40203b:	jne    0x402160
  402041:	mov    ecx,DWORD PTR [rbx+0x4]
  402044:	test   ecx,ecx
  402046:	jne    0x402160
  40204c:	mov    edx,DWORD PTR [rbx+0x8]
  40204f:	cmp    edx,0x1
  402052:	jne    0x40226c
  402058:	add    rbx,0xc
  40205c:	cmp    rbx,rsi
  40205f:	jae    0x401f9b
  402065:	mov    r12,QWORD PTR [rip+0x3464]        # 0x4054d0
  40206c:	lea    r13,[rbp-0x30]
  402070:	movabs r14,0xffffffff00000000
  40207a:	mov    ecx,DWORD PTR [rbx+0x4]
  40207d:	mov    eax,DWORD PTR [rbx]
  40207f:	movzx  edx,BYTE PTR [rbx+0x8]
  402083:	add    rax,r12
  402086:	add    rcx,r12
  402089:	cmp    edx,0x10
  40208c:	mov    r8,QWORD PTR [rax]
  40208f:	je     0x4021d6
  402095:	jbe    0x40219d
  40209b:	cmp    edx,0x20
  40209e:	je     0x40221f
  4020a4:	cmp    edx,0x40
  4020a7:	jne    0x40220b
  4020ad:	sub    r8,rax
  4020b0:	mov    rdx,r13
  4020b3:	mov    rdi,r13
  4020b6:	mov    rax,r8
  4020b9:	add    rax,QWORD PTR [rcx]
  4020bc:	mov    r8d,0x8
  4020c2:	mov    QWORD PTR [rbp-0x30],rax
  4020c6:	call   0x401e10
  4020cb:	add    rbx,0xc
  4020cf:	cmp    rbx,rsi
  4020d2:	jb     0x40207a
  4020d4:	mov    eax,DWORD PTR [rip+0x65aa]        # 0x408684
  4020da:	xor    ebx,ebx
  4020dc:	xor    esi,esi
  4020de:	test   eax,eax
  4020e0:	jle    0x401f9b
  4020e6:	mov    r14,QWORD PTR [rip+0x7287]        # 0x409374
  4020ed:	lea    r13,[rbp-0x34]
  4020f1:	mov    r12,QWORD PTR [rip+0x7274]        # 0x40936c
  4020f8:	jmp    0x402113
  4020fa:	nop    WORD PTR [rax+rax*1+0x0]
  402100:	add    esi,0x1
  402103:	add    rbx,0x18
  402107:	cmp    esi,DWORD PTR [rip+0x6577]        # 0x408684
  40210d:	jge    0x401f9b
  402113:	mov    rax,rbx
  402116:	add    rax,QWORD PTR [rip+0x656b]        # 0x408688
  40211d:	mov    edx,DWORD PTR [rax]
  40211f:	test   edx,edx
  402121:	je     0x402100
  402123:	mov    rcx,QWORD PTR [rax+0x8]
  402127:	mov    r8d,0x30
  40212d:	mov    rdx,rdi
  402130:	call   r14
  402133:	test   rax,rax
  402136:	je     0x40224e
  40213c:	mov    rax,QWORD PTR [rip+0x6545]        # 0x408688
  402143:	mov    r9,r13
  402146:	mov    rdx,QWORD PTR [rbp-0x18]
  40214a:	mov    rcx,QWORD PTR [rbp-0x30]
  40214e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402152:	call   r12
  402155:	jmp    0x402100
  402157:	nop    WORD PTR [rax+rax*1+0x0]
  402160:	cmp    rbx,rsi
  402163:	jae    0x401f9b
  402169:	mov    r12,QWORD PTR [rip+0x3360]        # 0x4054d0
  402170:	lea    rdi,[rbp-0x30]
  402174:	mov    ecx,DWORD PTR [rbx+0x4]
  402177:	mov    eax,DWORD PTR [rbx]
  402179:	mov    r8d,0x4
  40217f:	mov    rdx,rdi
  402182:	add    rbx,0x8
  402186:	add    rcx,r12
  402189:	add    eax,DWORD PTR [rcx]
  40218b:	mov    DWORD PTR [rbp-0x30],eax
  40218e:	call   0x401e10
  402193:	cmp    rbx,rsi
  402196:	jb     0x402174
  402198:	jmp    0x4020d4
  40219d:	cmp    edx,0x8
  4021a0:	jne    0x40220b
  4021a2:	movzx  edx,BYTE PTR [rcx]
  4021a5:	mov    rdi,r13
  4021a8:	mov    r10,rdx
  4021ab:	or     r10,0xffffffffffffff00
  4021b2:	test   dl,dl
  4021b4:	cmovs  rdx,r10
  4021b8:	sub    rdx,rax
  4021bb:	lea    rax,[r8+rdx*1]
  4021bf:	mov    r8d,0x1
  4021c5:	mov    rdx,r13
  4021c8:	mov    QWORD PTR [rbp-0x30],rax
  4021cc:	call   0x401e10
  4021d1:	jmp    0x4020cb
  4021d6:	movzx  edx,WORD PTR [rcx]
  4021d9:	mov    rdi,r13
  4021dc:	mov    r10,rdx
  4021df:	or     r10,0xffffffffffff0000
  4021e6:	test   dx,dx
  4021e9:	cmovs  rdx,r10
  4021ed:	sub    rdx,rax
  4021f0:	lea    rax,[r8+rdx*1]
  4021f4:	mov    r8d,0x2
  4021fa:	mov    rdx,r13
  4021fd:	mov    QWORD PTR [rbp-0x30],rax
  402201:	call   0x401e10
  402206:	jmp    0x4020cb
  40220b:	lea    rcx,[rip+0x3216]        # 0x405428
  402212:	mov    QWORD PTR [rbp-0x30],0x0
  40221a:	call   0x401da0
  40221f:	mov    edx,DWORD PTR [rcx]
  402221:	mov    rdi,r13
  402224:	mov    r10,rdx
  402227:	or     r10,r14
  40222a:	test   edx,edx
  40222c:	cmovs  rdx,r10
  402230:	sub    rdx,rax
  402233:	lea    rax,[r8+rdx*1]
  402237:	mov    r8d,0x4
  40223d:	mov    rdx,r13
  402240:	mov    QWORD PTR [rbp-0x30],rax
  402244:	call   0x401e10
  402249:	jmp    0x4020cb
  40224e:	add    rbx,QWORD PTR [rip+0x6433]        # 0x408688
  402255:	lea    rcx,[rip+0x3134]        # 0x405390
  40225c:	mov    rax,QWORD PTR [rbx+0x10]
  402260:	mov    r8,QWORD PTR [rbx+0x8]
  402264:	mov    edx,DWORD PTR [rax+0x8]
  402267:	call   0x401da0
  40226c:	lea    rcx,[rip+0x317d]        # 0x4053f0
  402273:	call   0x401da0
  402278:	nop
  402279:	nop
  40227a:	nop
  40227b:	nop
  40227c:	nop
  40227d:	nop
  40227e:	nop
  40227f:	nop
  402280:	sub    rsp,0x28
  402284:	mov    eax,DWORD PTR [rcx]
  402286:	cmp    eax,0xc0000091
  40228b:	ja     0x4022f0
  40228d:	cmp    eax,0xc000008d
  402292:	jae    0x40230f
  402294:	cmp    eax,0xc0000008
  402299:	je     0x4023b0
  40229f:	ja     0x402380
  4022a5:	cmp    eax,0x80000002
  4022aa:	je     0x4023b0
  4022b0:	cmp    eax,0xc0000005
  4022b5:	jne    0x40238e
  4022bb:	xor    edx,edx
  4022bd:	mov    ecx,0xb
  4022c2:	call   0x402d50
  4022c7:	cmp    rax,0x1
  4022cb:	je     0x402410
  4022d1:	test   rax,rax
  4022d4:	je     0x4023f0
  4022da:	mov    ecx,0xb
  4022df:	call   rax
  4022e1:	xor    eax,eax
  4022e3:	add    rsp,0x28
  4022e7:	ret    
  4022e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022f0:	cmp    eax,0xc0000094
  4022f5:	je     0x4023c0
  4022fb:	ja     0x402340
  4022fd:	cmp    eax,0xc0000092
  402302:	je     0x4023b0
  402308:	cmp    eax,0xc0000093
  40230d:	jne    0x40238e
  40230f:	xor    edx,edx
  402311:	mov    ecx,0x8
  402316:	call   0x402d50
  40231b:	cmp    rax,0x1
  40231f:	mov    rdx,rax
  402322:	je     0x402398
  402324:	test   rdx,rdx
  402327:	mov    eax,0x1
  40232c:	je     0x4022e3
  40232e:	mov    ecx,0x8
  402333:	call   rdx
  402335:	xor    eax,eax
  402337:	add    rsp,0x28
  40233b:	ret    
  40233c:	nop    DWORD PTR [rax+0x0]
  402340:	cmp    eax,0xc0000095
  402345:	je     0x4023b0
  402347:	cmp    eax,0xc0000096
  40234c:	jne    0x40238e
  40234e:	xor    edx,edx
  402350:	mov    ecx,0x4
  402355:	call   0x402d50
  40235a:	cmp    rax,0x1
  40235e:	je     0x4023fa
  402364:	test   rax,rax
  402367:	je     0x4023f0
  40236d:	mov    ecx,0x4
  402372:	call   rax
  402374:	xor    eax,eax
  402376:	jmp    0x4022e3
  40237b:	nop    DWORD PTR [rax+rax*1+0x0]
  402380:	cmp    eax,0xc000001d
  402385:	je     0x40234e
  402387:	cmp    eax,0xc000008c
  40238c:	je     0x4023b0
  40238e:	mov    eax,0x1
  402393:	add    rsp,0x28
  402397:	ret    
  402398:	mov    edx,0x1
  40239d:	mov    ecx,0x8
  4023a2:	call   0x402d50
  4023a7:	call   0x401d70
  4023ac:	nop    DWORD PTR [rax+0x0]
  4023b0:	xor    eax,eax
  4023b2:	add    rsp,0x28
  4023b6:	ret    
  4023b7:	nop    WORD PTR [rax+rax*1+0x0]
  4023c0:	xor    edx,edx
  4023c2:	mov    ecx,0x8
  4023c7:	call   0x402d50
  4023cc:	cmp    rax,0x1
  4023d0:	mov    rdx,rax
  4023d3:	jne    0x402324
  4023d9:	mov    edx,0x1
  4023de:	mov    ecx,0x8
  4023e3:	call   0x402d50
  4023e8:	xor    eax,eax
  4023ea:	jmp    0x4022e3
  4023ef:	nop
  4023f0:	mov    eax,0x4
  4023f5:	add    rsp,0x28
  4023f9:	ret    
  4023fa:	mov    edx,0x1
  4023ff:	mov    ecx,0x4
  402404:	call   0x402d50
  402409:	xor    eax,eax
  40240b:	jmp    0x4022e3
  402410:	mov    edx,0x1
  402415:	mov    ecx,0xb
  40241a:	call   0x402d50
  40241f:	xor    eax,eax
  402421:	jmp    0x4022e3
  402426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402430:	push   r12
  402432:	push   rbp
  402433:	push   rdi
  402434:	push   rsi
  402435:	push   rbx
  402436:	sub    rsp,0x20
  40243a:	call   0x402ba0
  40243f:	mov    rbp,rax
  402442:	mov    eax,DWORD PTR [rip+0x6280]        # 0x4086c8
  402448:	test   eax,eax
  40244a:	jne    0x402471
  40244c:	test   rbp,rbp
  40244f:	je     0x402471
  402451:	lea    rcx,[rip+0x3008]        # 0x405460
  402458:	mov    DWORD PTR [rip+0x6266],0x1        # 0x4086c8
  402462:	call   0x4029e0
  402467:	test   rax,rax
  40246a:	je     0x402480
  40246c:	mov    eax,0x1
  402471:	add    rsp,0x20
  402475:	pop    rbx
  402476:	pop    rsi
  402477:	pop    rdi
  402478:	pop    rbp
  402479:	pop    r12
  40247b:	ret    
  40247c:	nop    DWORD PTR [rax+0x0]
  402480:	lea    rbx,[rip+0x6379]        # 0x408800
  402487:	mov    ecx,0x30
  40248c:	lea    rdx,[rip+0x626d]        # 0x408700
  402493:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402280
  40249a:	xor    esi,esi
  40249c:	mov    rdi,rbx
  40249f:	rep stos QWORD PTR es:[rdi],rax
  4024a2:	mov    rdi,rdx
  4024a5:	sub    r12,rbp
  4024a8:	mov    cl,0x20
  4024aa:	rep stos QWORD PTR es:[rdi],rax
  4024ad:	mov    rdi,rdx
  4024b0:	jmp    0x4024e0
  4024b2:	mov    BYTE PTR [rdi],0x9
  4024b5:	mov    DWORD PTR [rdi+0x4],r12d
  4024b9:	add    rsi,0x1
  4024bd:	mov    edx,DWORD PTR [rax+0xc]
  4024c0:	add    rbx,0xc
  4024c4:	mov    DWORD PTR [rbx-0xc],edx
  4024c7:	add    edx,DWORD PTR [rax+0x8]
  4024ca:	mov    rax,rdi
  4024cd:	sub    rax,rbp
  4024d0:	add    rdi,0x8
  4024d4:	mov    DWORD PTR [rbx-0x4],eax
  4024d7:	mov    DWORD PTR [rbx-0x8],edx
  4024da:	cmp    rsi,0x20
  4024de:	je     0x402515
  4024e0:	mov    rcx,rsi
  4024e3:	call   0x402b10
  4024e8:	test   rax,rax
  4024eb:	jne    0x4024b2
  4024ed:	test   rsi,rsi
  4024f0:	je     0x40246c
  4024f6:	mov    edx,esi
  4024f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402500:	mov    r8,rbp
  402503:	lea    rcx,[rip+0x62f6]        # 0x408800
  40250a:	call   QWORD PTR [rip+0x6e14]        # 0x409324
  402510:	jmp    0x40246c
  402515:	mov    edx,0x20
  40251a:	jmp    0x402500
  40251c:	nop    DWORD PTR [rax+0x0]
  402520:	push   rbx
  402521:	sub    rsp,0x20
  402525:	mov    rdx,QWORD PTR [rcx]
  402528:	mov    eax,DWORD PTR [rdx]
  40252a:	mov    r8d,eax
  40252d:	and    r8d,0x20ffffff
  402534:	cmp    r8d,0x20474343
  40253b:	je     0x402640
  402541:	cmp    eax,0xc0000091
  402546:	mov    rbx,rcx
  402549:	ja     0x4025d0
  40254f:	cmp    eax,0xc000008d
  402554:	jae    0x4025e7
  40255a:	cmp    eax,0xc0000008
  40255f:	je     0x402593
  402561:	ja     0x4025a0
  402563:	cmp    eax,0x80000002
  402568:	je     0x402593
  40256a:	cmp    eax,0xc0000005
  40256f:	jne    0x4025b2
  402571:	xor    edx,edx
  402573:	mov    ecx,0xb
  402578:	call   0x402d50
  40257d:	cmp    rax,0x1
  402581:	je     0x4026b0
  402587:	test   rax,rax
  40258a:	je     0x4025b2
  40258c:	mov    ecx,0xb
  402591:	call   rax
  402593:	mov    eax,0xffffffff
  402598:	add    rsp,0x20
  40259c:	pop    rbx
  40259d:	ret    
  40259e:	xchg   ax,ax
  4025a0:	cmp    eax,0xc000001d
  4025a5:	je     0x402666
  4025ab:	cmp    eax,0xc000008c
  4025b0:	je     0x402593
  4025b2:	mov    rax,QWORD PTR [rip+0x6107]        # 0x4086c0
  4025b9:	test   rax,rax
  4025bc:	je     0x402598
  4025be:	mov    rcx,rbx
  4025c1:	add    rsp,0x20
  4025c5:	pop    rbx
  4025c6:	rex.W jmp rax
  4025c9:	nop    DWORD PTR [rax+0x0]
  4025d0:	cmp    eax,0xc0000094
  4025d5:	je     0x402612
  4025d7:	ja     0x402650
  4025d9:	cmp    eax,0xc0000092
  4025de:	je     0x402593
  4025e0:	cmp    eax,0xc0000093
  4025e5:	jne    0x4025b2
  4025e7:	xor    edx,edx
  4025e9:	mov    ecx,0x8
  4025ee:	call   0x402d50
  4025f3:	cmp    rax,0x1
  4025f7:	jne    0x402624
  4025f9:	mov    edx,0x1
  4025fe:	mov    ecx,0x8
  402603:	call   0x402d50
  402608:	call   0x401d70
  40260d:	jmp    0x402593
  402612:	xor    edx,edx
  402614:	mov    ecx,0x8
  402619:	call   0x402d50
  40261e:	cmp    rax,0x1
  402622:	je     0x402692
  402624:	test   rax,rax
  402627:	je     0x4025b2
  402629:	mov    ecx,0x8
  40262e:	call   rax
  402630:	mov    eax,0xffffffff
  402635:	jmp    0x402598
  40263a:	nop    WORD PTR [rax+rax*1+0x0]
  402640:	test   BYTE PTR [rdx+0x4],0x1
  402644:	jne    0x402541
  40264a:	jmp    0x402593
  40264f:	nop
  402650:	cmp    eax,0xc0000095
  402655:	je     0x402593
  40265b:	cmp    eax,0xc0000096
  402660:	jne    0x4025b2
  402666:	xor    edx,edx
  402668:	mov    ecx,0x4
  40266d:	call   0x402d50
  402672:	cmp    rax,0x1
  402676:	je     0x4026c4
  402678:	test   rax,rax
  40267b:	je     0x4025b2
  402681:	mov    ecx,0x4
  402686:	call   rax
  402688:	mov    eax,0xffffffff
  40268d:	jmp    0x402598
  402692:	mov    edx,0x1
  402697:	mov    ecx,0x8
  40269c:	call   0x402d50
  4026a1:	jmp    0x402593
  4026a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026b0:	mov    edx,0x1
  4026b5:	mov    ecx,0xb
  4026ba:	call   0x402d50
  4026bf:	jmp    0x402593
  4026c4:	mov    edx,0x1
  4026c9:	mov    ecx,0x4
  4026ce:	call   0x402d50
  4026d3:	jmp    0x402593
  4026d8:	nop
  4026d9:	nop
  4026da:	nop
  4026db:	nop
  4026dc:	nop
  4026dd:	nop
  4026de:	nop
  4026df:	nop
  4026e0:	push   rbp
  4026e1:	push   rdi
  4026e2:	push   rsi
  4026e3:	push   rbx
  4026e4:	sub    rsp,0x28
  4026e8:	lea    rcx,[rip+0x62b1]        # 0x4089a0
  4026ef:	call   QWORD PTR [rip+0x6bd7]        # 0x4092cc
  4026f5:	mov    rbx,QWORD PTR [rip+0x6284]        # 0x408980
  4026fc:	test   rbx,rbx
  4026ff:	je     0x402734
  402701:	mov    rbp,QWORD PTR [rip+0x6c54]        # 0x40935c
  402708:	mov    rdi,QWORD PTR [rip+0x6bdd]        # 0x4092ec
  40270f:	nop
  402710:	mov    ecx,DWORD PTR [rbx]
  402712:	call   rbp
  402714:	mov    rsi,rax
  402717:	call   rdi
  402719:	test   eax,eax
  40271b:	jne    0x40272b
  40271d:	test   rsi,rsi
  402720:	je     0x40272b
  402722:	mov    rax,QWORD PTR [rbx+0x8]
  402726:	mov    rcx,rsi
  402729:	call   rax
  40272b:	mov    rbx,QWORD PTR [rbx+0x10]
  40272f:	test   rbx,rbx
  402732:	jne    0x402710
  402734:	mov    rax,QWORD PTR [rip+0x6bd9]        # 0x409314
  40273b:	lea    rcx,[rip+0x625e]        # 0x4089a0
  402742:	add    rsp,0x28
  402746:	pop    rbx
  402747:	pop    rsi
  402748:	pop    rdi
  402749:	pop    rbp
  40274a:	rex.W jmp rax
  40274d:	nop    DWORD PTR [rax]
  402750:	push   rdi
  402751:	push   rsi
  402752:	push   rbx
  402753:	sub    rsp,0x20
  402757:	mov    eax,DWORD PTR [rip+0x622b]        # 0x408988
  40275d:	test   eax,eax
  40275f:	jne    0x402770
  402761:	add    rsp,0x20
  402765:	pop    rbx
  402766:	pop    rsi
  402767:	pop    rdi
  402768:	ret    
  402769:	nop    DWORD PTR [rax+0x0]
  402770:	mov    rsi,rdx
  402773:	mov    edi,ecx
  402775:	mov    edx,0x18
  40277a:	mov    ecx,0x1
  40277f:	call   0x402d90
  402784:	test   rax,rax
  402787:	mov    rbx,rax
  40278a:	je     0x4027c8
  40278c:	mov    DWORD PTR [rax],edi
  40278e:	mov    QWORD PTR [rax+0x8],rsi
  402792:	lea    rcx,[rip+0x6207]        # 0x4089a0
  402799:	call   QWORD PTR [rip+0x6b2d]        # 0x4092cc
  40279f:	mov    rax,QWORD PTR [rip+0x61da]        # 0x408980
  4027a6:	lea    rcx,[rip+0x61f3]        # 0x4089a0
  4027ad:	mov    QWORD PTR [rip+0x61cc],rbx        # 0x408980
  4027b4:	mov    QWORD PTR [rbx+0x10],rax
  4027b8:	call   QWORD PTR [rip+0x6b56]        # 0x409314
  4027be:	xor    eax,eax
  4027c0:	add    rsp,0x20
  4027c4:	pop    rbx
  4027c5:	pop    rsi
  4027c6:	pop    rdi
  4027c7:	ret    
  4027c8:	mov    eax,0xffffffff
  4027cd:	jmp    0x402761
  4027cf:	nop
  4027d0:	push   rbx
  4027d1:	sub    rsp,0x20
  4027d5:	mov    eax,DWORD PTR [rip+0x61ad]        # 0x408988
  4027db:	test   eax,eax
  4027dd:	jne    0x4027f0
  4027df:	xor    eax,eax
  4027e1:	add    rsp,0x20
  4027e5:	pop    rbx
  4027e6:	ret    
  4027e7:	nop    WORD PTR [rax+rax*1+0x0]
  4027f0:	mov    ebx,ecx
  4027f2:	lea    rcx,[rip+0x61a7]        # 0x4089a0
  4027f9:	call   QWORD PTR [rip+0x6acd]        # 0x4092cc
  4027ff:	mov    rdx,QWORD PTR [rip+0x617a]        # 0x408980
  402806:	test   rdx,rdx
  402809:	je     0x402827
  40280b:	mov    eax,DWORD PTR [rdx]
  40280d:	cmp    eax,ebx
  40280f:	jne    0x40281e
  402811:	jmp    0x40285f
  402813:	mov    r8d,DWORD PTR [rax]
  402816:	cmp    r8d,ebx
  402819:	je     0x402840
  40281b:	mov    rdx,rax
  40281e:	mov    rax,QWORD PTR [rdx+0x10]
  402822:	test   rax,rax
  402825:	jne    0x402813
  402827:	lea    rcx,[rip+0x6172]        # 0x4089a0
  40282e:	call   QWORD PTR [rip+0x6ae0]        # 0x409314
  402834:	xor    eax,eax
  402836:	add    rsp,0x20
  40283a:	pop    rbx
  40283b:	ret    
  40283c:	nop    DWORD PTR [rax+0x0]
  402840:	mov    rcx,rax
  402843:	mov    rax,QWORD PTR [rax+0x10]
  402847:	mov    QWORD PTR [rdx+0x10],rax
  40284b:	call   0x402d70
  402850:	lea    rcx,[rip+0x6149]        # 0x4089a0
  402857:	call   QWORD PTR [rip+0x6ab7]        # 0x409314
  40285d:	jmp    0x402834
  40285f:	mov    rax,QWORD PTR [rdx+0x10]
  402863:	mov    rcx,rdx
  402866:	mov    QWORD PTR [rip+0x6113],rax        # 0x408980
  40286d:	jmp    0x40284b
  40286f:	nop
  402870:	push   rbx
  402871:	sub    rsp,0x20
  402875:	cmp    edx,0x1
  402878:	je     0x402910
  40287e:	jb     0x4028b0
  402880:	cmp    edx,0x2
  402883:	je     0x4028a0
  402885:	cmp    edx,0x3
  402888:	jne    0x4028a5
  40288a:	mov    eax,DWORD PTR [rip+0x60f8]        # 0x408988
  402890:	test   eax,eax
  402892:	je     0x4028a5
  402894:	call   0x4026e0
  402899:	jmp    0x4028a5
  40289b:	nop    DWORD PTR [rax+rax*1+0x0]
  4028a0:	call   0x401d70
  4028a5:	mov    eax,0x1
  4028aa:	add    rsp,0x20
  4028ae:	pop    rbx
  4028af:	ret    
  4028b0:	mov    eax,DWORD PTR [rip+0x60d2]        # 0x408988
  4028b6:	test   eax,eax
  4028b8:	jne    0x402940
  4028be:	mov    eax,DWORD PTR [rip+0x60c4]        # 0x408988
  4028c4:	cmp    eax,0x1
  4028c7:	jne    0x4028a5
  4028c9:	mov    rcx,QWORD PTR [rip+0x60b0]        # 0x408980
  4028d0:	test   rcx,rcx
  4028d3:	je     0x4028e6
  4028d5:	mov    rbx,QWORD PTR [rcx+0x10]
  4028d9:	call   0x402d70
  4028de:	test   rbx,rbx
  4028e1:	mov    rcx,rbx
  4028e4:	jne    0x4028d5
  4028e6:	lea    rcx,[rip+0x60b3]        # 0x4089a0
  4028ed:	mov    QWORD PTR [rip+0x6088],0x0        # 0x408980
  4028f8:	mov    DWORD PTR [rip+0x6086],0x0        # 0x408988
  402902:	call   QWORD PTR [rip+0x69bc]        # 0x4092c4
  402908:	jmp    0x4028a5
  40290a:	nop    WORD PTR [rax+rax*1+0x0]
  402910:	mov    eax,DWORD PTR [rip+0x6072]        # 0x408988
  402916:	test   eax,eax
  402918:	je     0x402930
  40291a:	mov    eax,0x1
  40291f:	mov    DWORD PTR [rip+0x605f],0x1        # 0x408988
  402929:	add    rsp,0x20
  40292d:	pop    rbx
  40292e:	ret    
  40292f:	nop
  402930:	lea    rcx,[rip+0x6069]        # 0x4089a0
  402937:	call   QWORD PTR [rip+0x69cf]        # 0x40930c
  40293d:	jmp    0x40291a
  40293f:	nop
  402940:	call   0x4026e0
  402945:	jmp    0x4028be
  40294a:	nop
  40294b:	nop
  40294c:	nop
  40294d:	nop
  40294e:	nop
  40294f:	nop
  402950:	movsxd rax,DWORD PTR [rcx+0x3c]
  402954:	add    rcx,rax
  402957:	xor    eax,eax
  402959:	cmp    DWORD PTR [rcx],0x4550
  40295f:	je     0x402963
  402961:	repz ret 
  402963:	xor    eax,eax
  402965:	cmp    WORD PTR [rcx+0x18],0x20b
  40296b:	sete   al
  40296e:	ret    
  40296f:	nop
  402970:	cmp    WORD PTR [rcx],0x5a4d
  402975:	je     0x402980
  402977:	xor    eax,eax
  402979:	ret    
  40297a:	nop    WORD PTR [rax+rax*1+0x0]
  402980:	jmp    0x402950
  402982:	nop    DWORD PTR [rax+0x0]
  402986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402990:	movsxd rax,DWORD PTR [rcx+0x3c]
  402994:	add    rcx,rax
  402997:	movzx  eax,WORD PTR [rcx+0x14]
  40299b:	lea    rax,[rcx+rax*1+0x18]
  4029a0:	movzx  ecx,WORD PTR [rcx+0x6]
  4029a4:	test   ecx,ecx
  4029a6:	je     0x4029d1
  4029a8:	sub    ecx,0x1
  4029ab:	lea    rcx,[rcx+rcx*4]
  4029af:	lea    r9,[rax+rcx*8+0x28]
  4029b4:	mov    r8d,DWORD PTR [rax+0xc]
  4029b8:	cmp    r8,rdx
  4029bb:	mov    rcx,r8
  4029be:	ja     0x4029c8
  4029c0:	add    ecx,DWORD PTR [rax+0x8]
  4029c3:	cmp    rdx,rcx
  4029c6:	jb     0x4029d3
  4029c8:	add    rax,0x28
  4029cc:	cmp    rax,r9
  4029cf:	jne    0x4029b4
  4029d1:	xor    eax,eax
  4029d3:	repz ret 
  4029d5:	nop
  4029d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029e0:	push   rdi
  4029e1:	push   rsi
  4029e2:	push   rbx
  4029e3:	sub    rsp,0x20
  4029e7:	mov    rsi,rcx
  4029ea:	call   0x402d40
  4029ef:	cmp    rax,0x8
  4029f3:	ja     0x402a10
  4029f5:	mov    rbx,QWORD PTR [rip+0x2ad4]        # 0x4054d0
  4029fc:	xor    edi,edi
  4029fe:	cmp    WORD PTR [rbx],0x5a4d
  402a03:	je     0x402a20
  402a05:	mov    rax,rdi
  402a08:	add    rsp,0x20
  402a0c:	pop    rbx
  402a0d:	pop    rsi
  402a0e:	pop    rdi
  402a0f:	ret    
  402a10:	xor    edi,edi
  402a12:	mov    rax,rdi
  402a15:	add    rsp,0x20
  402a19:	pop    rbx
  402a1a:	pop    rsi
  402a1b:	pop    rdi
  402a1c:	ret    
  402a1d:	nop    DWORD PTR [rax]
  402a20:	mov    rcx,rbx
  402a23:	call   0x402950
  402a28:	test   eax,eax
  402a2a:	je     0x402a05
  402a2c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402a30:	add    rdx,rbx
  402a33:	movzx  eax,WORD PTR [rdx+0x14]
  402a37:	lea    rbx,[rdx+rax*1+0x18]
  402a3c:	movzx  eax,WORD PTR [rdx+0x6]
  402a40:	test   eax,eax
  402a42:	je     0x402a05
  402a44:	sub    eax,0x1
  402a47:	lea    rax,[rax+rax*4]
  402a4b:	lea    rdi,[rbx+rax*8+0x28]
  402a50:	jmp    0x402a5b
  402a52:	add    rbx,0x28
  402a56:	cmp    rbx,rdi
  402a59:	je     0x402a10
  402a5b:	mov    r8d,0x8
  402a61:	mov    rdx,rsi
  402a64:	mov    rcx,rbx
  402a67:	call   0x402d38
  402a6c:	test   eax,eax
  402a6e:	jne    0x402a52
  402a70:	mov    rdi,rbx
  402a73:	mov    rax,rdi
  402a76:	add    rsp,0x20
  402a7a:	pop    rbx
  402a7b:	pop    rsi
  402a7c:	pop    rdi
  402a7d:	ret    
  402a7e:	xchg   ax,ax
  402a80:	push   rsi
  402a81:	push   rbx
  402a82:	sub    rsp,0x28
  402a86:	mov    rbx,QWORD PTR [rip+0x2a43]        # 0x4054d0
  402a8d:	cmp    WORD PTR [rbx],0x5a4d
  402a92:	je     0x402aa0
  402a94:	xor    eax,eax
  402a96:	add    rsp,0x28
  402a9a:	pop    rbx
  402a9b:	pop    rsi
  402a9c:	ret    
  402a9d:	nop    DWORD PTR [rax]
  402aa0:	mov    rsi,rcx
  402aa3:	mov    rcx,rbx
  402aa6:	call   0x402950
  402aab:	test   eax,eax
  402aad:	je     0x402a94
  402aaf:	sub    rsi,rbx
  402ab2:	mov    rcx,rbx
  402ab5:	mov    rdx,rsi
  402ab8:	add    rsp,0x28
  402abc:	pop    rbx
  402abd:	pop    rsi
  402abe:	jmp    0x402990
  402ac3:	nop    DWORD PTR [rax]
  402ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ad0:	push   rbx
  402ad1:	sub    rsp,0x20
  402ad5:	mov    rbx,QWORD PTR [rip+0x29f4]        # 0x4054d0
  402adc:	xor    eax,eax
  402ade:	cmp    WORD PTR [rbx],0x5a4d
  402ae3:	je     0x402af0
  402ae5:	add    rsp,0x20
  402ae9:	pop    rbx
  402aea:	ret    
  402aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	mov    rcx,rbx
  402af3:	call   0x402950
  402af8:	test   eax,eax
  402afa:	je     0x402ae5
  402afc:	movsxd rax,DWORD PTR [rbx+0x3c]
  402b00:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402b05:	add    rsp,0x20
  402b09:	pop    rbx
  402b0a:	ret    
  402b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b10:	push   rdi
  402b11:	push   rsi
  402b12:	push   rbx
  402b13:	sub    rsp,0x20
  402b17:	mov    rsi,QWORD PTR [rip+0x29b2]        # 0x4054d0
  402b1e:	xor    edi,edi
  402b20:	mov    rbx,rcx
  402b23:	cmp    WORD PTR [rsi],0x5a4d
  402b28:	je     0x402b35
  402b2a:	mov    rax,rdi
  402b2d:	add    rsp,0x20
  402b31:	pop    rbx
  402b32:	pop    rsi
  402b33:	pop    rdi
  402b34:	ret    
  402b35:	mov    rcx,rsi
  402b38:	call   0x402950
  402b3d:	test   eax,eax
  402b3f:	je     0x402b2a
  402b41:	movsxd rax,DWORD PTR [rsi+0x3c]
  402b45:	add    rsi,rax
  402b48:	movzx  eax,WORD PTR [rsi+0x14]
  402b4c:	lea    rdx,[rsi+rax*1+0x18]
  402b51:	movzx  eax,WORD PTR [rsi+0x6]
  402b55:	test   eax,eax
  402b57:	je     0x402b2a
  402b59:	sub    eax,0x1
  402b5c:	lea    rax,[rax+rax*4]
  402b60:	lea    rax,[rdx+rax*8+0x28]
  402b65:	test   BYTE PTR [rdx+0x27],0x20
  402b69:	je     0x402b74
  402b6b:	test   rbx,rbx
  402b6e:	je     0x402b90
  402b70:	sub    rbx,0x1
  402b74:	add    rdx,0x28
  402b78:	cmp    rdx,rax
  402b7b:	jne    0x402b65
  402b7d:	xor    edi,edi
  402b7f:	mov    rax,rdi
  402b82:	add    rsp,0x20
  402b86:	pop    rbx
  402b87:	pop    rsi
  402b88:	pop    rdi
  402b89:	ret    
  402b8a:	nop    WORD PTR [rax+rax*1+0x0]
  402b90:	mov    rdi,rdx
  402b93:	mov    rax,rdi
  402b96:	add    rsp,0x20
  402b9a:	pop    rbx
  402b9b:	pop    rsi
  402b9c:	pop    rdi
  402b9d:	ret    
  402b9e:	xchg   ax,ax
  402ba0:	push   rsi
  402ba1:	push   rbx
  402ba2:	sub    rsp,0x28
  402ba6:	mov    rsi,QWORD PTR [rip+0x2923]        # 0x4054d0
  402bad:	xor    ebx,ebx
  402baf:	cmp    WORD PTR [rsi],0x5a4d
  402bb4:	je     0x402bc0
  402bb6:	mov    rax,rbx
  402bb9:	add    rsp,0x28
  402bbd:	pop    rbx
  402bbe:	pop    rsi
  402bbf:	ret    
  402bc0:	mov    rcx,rsi
  402bc3:	call   0x402950
  402bc8:	test   eax,eax
  402bca:	cmovne rbx,rsi
  402bce:	mov    rax,rbx
  402bd1:	add    rsp,0x28
  402bd5:	pop    rbx
  402bd6:	pop    rsi
  402bd7:	ret    
  402bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  402be0:	push   rsi
  402be1:	push   rbx
  402be2:	sub    rsp,0x28
  402be6:	mov    rbx,QWORD PTR [rip+0x28e3]        # 0x4054d0
  402bed:	xor    eax,eax
  402bef:	cmp    WORD PTR [rbx],0x5a4d
  402bf4:	je     0x402c00
  402bf6:	add    rsp,0x28
  402bfa:	pop    rbx
  402bfb:	pop    rsi
  402bfc:	ret    
  402bfd:	nop    DWORD PTR [rax]
  402c00:	mov    rsi,rcx
  402c03:	mov    rcx,rbx
  402c06:	call   0x402950
  402c0b:	test   eax,eax
  402c0d:	je     0x402bf6
  402c0f:	sub    rsi,rbx
  402c12:	mov    rcx,rbx
  402c15:	mov    rdx,rsi
  402c18:	call   0x402990
  402c1d:	test   rax,rax
  402c20:	je     0x402c31
  402c22:	mov    eax,DWORD PTR [rax+0x24]
  402c25:	not    eax
  402c27:	shr    eax,0x1f
  402c2a:	add    rsp,0x28
  402c2e:	pop    rbx
  402c2f:	pop    rsi
  402c30:	ret    
  402c31:	xor    eax,eax
  402c33:	jmp    0x402bf6
  402c35:	nop
  402c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c40:	push   rbp
  402c41:	push   rdi
  402c42:	push   rsi
  402c43:	push   rbx
  402c44:	sub    rsp,0x28
  402c48:	mov    rdi,QWORD PTR [rip+0x2881]        # 0x4054d0
  402c4f:	xor    ebp,ebp
  402c51:	mov    esi,ecx
  402c53:	cmp    WORD PTR [rdi],0x5a4d
  402c58:	je     0x402c70
  402c5a:	mov    rax,rbp
  402c5d:	add    rsp,0x28
  402c61:	pop    rbx
  402c62:	pop    rsi
  402c63:	pop    rdi
  402c64:	pop    rbp
  402c65:	ret    
  402c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c70:	mov    rcx,rdi
  402c73:	call   0x402950
  402c78:	test   eax,eax
  402c7a:	je     0x402c5a
  402c7c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402c80:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402c87:	test   edx,edx
  402c89:	je     0x402c5a
  402c8b:	mov    ebx,edx
  402c8d:	mov    rcx,rdi
  402c90:	mov    rdx,rbx
  402c93:	call   0x402990
  402c98:	test   rax,rax
  402c9b:	je     0x402c5a
  402c9d:	add    rbx,rdi
  402ca0:	mov    rdx,rbx
  402ca3:	jne    0x402cb7
  402ca5:	jmp    0x402c5a
  402ca7:	nop    WORD PTR [rax+rax*1+0x0]
  402cb0:	sub    esi,0x1
  402cb3:	add    rdx,0x14
  402cb7:	mov    ecx,DWORD PTR [rdx+0x4]
  402cba:	test   ecx,ecx
  402cbc:	jne    0x402cc5
  402cbe:	mov    eax,DWORD PTR [rdx+0xc]
  402cc1:	test   eax,eax
  402cc3:	je     0x402ce0
  402cc5:	test   esi,esi
  402cc7:	jg     0x402cb0
  402cc9:	mov    ebp,DWORD PTR [rdx+0xc]
  402ccc:	add    rbp,rdi
  402ccf:	mov    rax,rbp
  402cd2:	add    rsp,0x28
  402cd6:	pop    rbx
  402cd7:	pop    rsi
  402cd8:	pop    rdi
  402cd9:	pop    rbp
  402cda:	ret    
  402cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ce0:	xor    ebp,ebp
  402ce2:	mov    rax,rbp
  402ce5:	add    rsp,0x28
  402ce9:	pop    rbx
  402cea:	pop    rsi
  402ceb:	pop    rdi
  402cec:	pop    rbp
  402ced:	ret    
  402cee:	nop
  402cef:	nop
  402cf0:	push   rcx
  402cf1:	push   rax
  402cf2:	cmp    rax,0x1000
  402cf8:	lea    rcx,[rsp+0x18]
  402cfd:	jb     0x402d18
  402cff:	sub    rcx,0x1000
  402d06:	or     QWORD PTR [rcx],0x0
  402d0a:	sub    rax,0x1000
  402d10:	cmp    rax,0x1000
  402d16:	ja     0x402cff
  402d18:	sub    rcx,rax
  402d1b:	or     QWORD PTR [rcx],0x0
  402d1f:	pop    rax
  402d20:	pop    rcx
  402d21:	ret    
  402d22:	nop
  402d23:	nop
  402d24:	nop
  402d25:	nop
  402d26:	nop
  402d27:	nop
  402d28:	nop
  402d29:	nop
  402d2a:	nop
  402d2b:	nop
  402d2c:	nop
  402d2d:	nop
  402d2e:	nop
  402d2f:	nop
  402d30:	jmp    QWORD PTR [rip+0x673e]        # 0x409474
  402d36:	nop
  402d37:	nop
  402d38:	jmp    QWORD PTR [rip+0x672e]        # 0x40946c
  402d3e:	nop
  402d3f:	nop
  402d40:	jmp    QWORD PTR [rip+0x671e]        # 0x409464
  402d46:	nop
  402d47:	nop
  402d48:	jmp    QWORD PTR [rip+0x670e]        # 0x40945c
  402d4e:	nop
  402d4f:	nop
  402d50:	jmp    QWORD PTR [rip+0x66fe]        # 0x409454
  402d56:	nop
  402d57:	nop
  402d58:	jmp    QWORD PTR [rip+0x66ee]        # 0x40944c
  402d5e:	nop
  402d5f:	nop
  402d60:	jmp    QWORD PTR [rip+0x66de]        # 0x409444
  402d66:	nop
  402d67:	nop
  402d68:	jmp    QWORD PTR [rip+0x66ce]        # 0x40943c
  402d6e:	nop
  402d6f:	nop
  402d70:	jmp    QWORD PTR [rip+0x66be]        # 0x409434
  402d76:	nop
  402d77:	nop
  402d78:	jmp    QWORD PTR [rip+0x66ae]        # 0x40942c
  402d7e:	nop
  402d7f:	nop
  402d80:	jmp    QWORD PTR [rip+0x669e]        # 0x409424
  402d86:	nop
  402d87:	nop
  402d88:	jmp    QWORD PTR [rip+0x668e]        # 0x40941c
  402d8e:	nop
  402d8f:	nop
  402d90:	jmp    QWORD PTR [rip+0x667e]        # 0x409414
  402d96:	nop
  402d97:	nop
  402d98:	jmp    QWORD PTR [rip+0x666e]        # 0x40940c
  402d9e:	nop
  402d9f:	nop
  402da0:	jmp    QWORD PTR [rip+0x665e]        # 0x409404
  402da6:	nop
  402da7:	nop
  402da8:	jmp    QWORD PTR [rip+0x664e]        # 0x4093fc
  402dae:	nop
  402daf:	nop
  402db0:	jmp    QWORD PTR [rip+0x663e]        # 0x4093f4
  402db6:	nop
  402db7:	nop
  402db8:	jmp    QWORD PTR [rip+0x662e]        # 0x4093ec
  402dbe:	nop
  402dbf:	nop
  402dc0:	jmp    QWORD PTR [rip+0x661e]        # 0x4093e4
  402dc6:	nop
  402dc7:	nop
  402dc8:	jmp    QWORD PTR [rip+0x6606]        # 0x4093d4
  402dce:	nop
  402dcf:	nop
  402dd0:	jmp    QWORD PTR [rip+0x65f6]        # 0x4093cc
  402dd6:	nop
  402dd7:	nop
  402dd8:	jmp    QWORD PTR [rip+0x65de]        # 0x4093bc
  402dde:	nop
  402ddf:	nop
  402de0:	jmp    QWORD PTR [rip+0x65ce]        # 0x4093b4
  402de6:	nop
  402de7:	nop
  402de8:	jmp    QWORD PTR [rip+0x65be]        # 0x4093ac
  402dee:	nop
  402def:	nop
  402df0:	jmp    QWORD PTR [rip+0x65ae]        # 0x4093a4
  402df6:	nop
  402df7:	nop
  402df8:	jmp    QWORD PTR [rip+0x6596]        # 0x409394
  402dfe:	nop
  402dff:	nop
  402e00:	jmp    QWORD PTR [rip+0x6586]        # 0x40938c
  402e06:	nop
  402e07:	nop
  402e08:	jmp    QWORD PTR [rip+0x6576]        # 0x409384
  402e0e:	nop
  402e0f:	nop
  402e10:	mov    rax,QWORD PTR [rip+0x5bd9]        # 0x4089f0
  402e17:	ret    
  402e18:	nop    DWORD PTR [rax+rax*1+0x0]
  402e20:	mov    rax,rcx
  402e23:	xchg   QWORD PTR [rip+0x5bc6],rax        # 0x4089f0
  402e2a:	ret    
  402e2b:	nop
  402e2c:	nop
  402e2d:	nop
  402e2e:	nop
  402e2f:	nop
  402e30:	jmp    QWORD PTR [rip+0x653e]        # 0x409374
  402e36:	nop
  402e37:	nop
  402e38:	jmp    QWORD PTR [rip+0x652e]        # 0x40936c
  402e3e:	nop
  402e3f:	nop
  402e40:	jmp    QWORD PTR [rip+0x651e]        # 0x409364
  402e46:	nop
  402e47:	nop
  402e48:	jmp    QWORD PTR [rip+0x650e]        # 0x40935c
  402e4e:	nop
  402e4f:	nop
  402e50:	jmp    QWORD PTR [rip+0x64fe]        # 0x409354
  402e56:	nop
  402e57:	nop
  402e58:	jmp    QWORD PTR [rip+0x64ee]        # 0x40934c
  402e5e:	nop
  402e5f:	nop
  402e60:	jmp    QWORD PTR [rip+0x64de]        # 0x409344
  402e66:	nop
  402e67:	nop
  402e68:	jmp    QWORD PTR [rip+0x64ce]        # 0x40933c
  402e6e:	nop
  402e6f:	nop
  402e70:	jmp    QWORD PTR [rip+0x64be]        # 0x409334
  402e76:	nop
  402e77:	nop
  402e78:	jmp    QWORD PTR [rip+0x64ae]        # 0x40932c
  402e7e:	nop
  402e7f:	nop
  402e80:	jmp    QWORD PTR [rip+0x649e]        # 0x409324
  402e86:	nop
  402e87:	nop
  402e88:	jmp    QWORD PTR [rip+0x648e]        # 0x40931c
  402e8e:	nop
  402e8f:	nop
  402e90:	jmp    QWORD PTR [rip+0x647e]        # 0x409314
  402e96:	nop
  402e97:	nop
  402e98:	jmp    QWORD PTR [rip+0x646e]        # 0x40930c
  402e9e:	nop
  402e9f:	nop
  402ea0:	jmp    QWORD PTR [rip+0x645e]        # 0x409304
  402ea6:	nop
  402ea7:	nop
  402ea8:	jmp    QWORD PTR [rip+0x644e]        # 0x4092fc
  402eae:	nop
  402eaf:	nop
  402eb0:	jmp    QWORD PTR [rip+0x643e]        # 0x4092f4
  402eb6:	nop
  402eb7:	nop
  402eb8:	jmp    QWORD PTR [rip+0x642e]        # 0x4092ec
  402ebe:	nop
  402ebf:	nop
  402ec0:	jmp    QWORD PTR [rip+0x641e]        # 0x4092e4
  402ec6:	nop
  402ec7:	nop
  402ec8:	jmp    QWORD PTR [rip+0x640e]        # 0x4092dc
  402ece:	nop
  402ecf:	nop
  402ed0:	jmp    QWORD PTR [rip+0x63fe]        # 0x4092d4
  402ed6:	nop
  402ed7:	nop
  402ed8:	jmp    QWORD PTR [rip+0x63ee]        # 0x4092cc
  402ede:	nop
  402edf:	nop
  402ee0:	jmp    QWORD PTR [rip+0x63de]        # 0x4092c4
  402ee6:	nop
  402ee7:	nop
  402ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ef0:	push   r15
  402ef2:	push   r14
  402ef4:	push   r13
  402ef6:	push   r12
  402ef8:	push   rbp
  402ef9:	push   rdi
  402efa:	push   rsi
  402efb:	push   rbx
  402efc:	sub    rsp,0x48
  402f00:	mov    r15d,ecx
  402f03:	mov    r13,rdx
  402f06:	call   0x401940
  402f0b:	call   QWORD PTR [rip+0x6493]        # 0x4093a4
  402f11:	mov    ecx,0x5
  402f16:	add    rax,0x30
  402f1a:	mov    QWORD PTR [rip+0x5117],rax        # 0x408038
  402f21:	call   0x4017b8
  402f26:	or     eax,0x18
  402f29:	mov    ecx,eax
  402f2b:	call   0x4017b8
  402f30:	cmp    r15d,0x1
  402f34:	mov    QWORD PTR [rip+0x50f1],0x50        # 0x408030
  402f3f:	jle    0x4031a4
  402f45:	lea    rbp,[rip+0x227c]        # 0x4051c8
  402f4c:	mov    ebx,0x1
  402f51:	mov    DWORD PTR [rsp+0x30],0x0
  402f59:	mov    DWORD PTR [rsp+0x28],0x0
  402f61:	lea    r12,[rip+0x2261]        # 0x4051c9
  402f68:	mov    r14d,0x3
  402f6e:	jmp    0x402f88
  402f70:	add    ebx,0x1
  402f73:	cmp    r15d,ebx
  402f76:	jg     0x4030e0
  402f7c:	add    ebx,0x1
  402f7f:	cmp    r15d,ebx
  402f82:	jle    0x403020
  402f88:	movsxd rax,ebx
  402f8b:	mov    rsi,r12
  402f8e:	mov    rcx,r14
  402f91:	mov    r10,QWORD PTR [r13+rax*8+0x0]
  402f96:	lea    rdx,[rax*8+0x0]
  402f9e:	mov    rdi,r10
  402fa1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402fa3:	je     0x402f70
  402fa5:	lea    rsi,[rip+0x2220]        # 0x4051cc
  402fac:	mov    rdi,r10
  402faf:	mov    rcx,r14
  402fb2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402fb4:	jne    0x4030b0
  402fba:	add    ebx,0x1
  402fbd:	cmp    r15d,ebx
  402fc0:	jle    0x402f7c
  402fc2:	mov    rdx,QWORD PTR [r13+rdx*1+0x8]
  402fc7:	cmp    BYTE PTR [rdx],0x0
  402fca:	mov    rax,rdx
  402fcd:	je     0x402fd9
  402fcf:	nop
  402fd0:	add    rax,0x1
  402fd4:	cmp    BYTE PTR [rax],0x0
  402fd7:	jne    0x402fd0
  402fd9:	sub    rax,rdx
  402fdc:	mov    ecx,eax
  402fde:	mov    rsi,rax
  402fe1:	mov    edi,eax
  402fe3:	add    rcx,0x1
  402fe7:	call   0x4017b0
  402fec:	test   esi,esi
  402fee:	mov    QWORD PTR [rip+0x504b],rax        # 0x408040
  402ff5:	mov    BYTE PTR [rax],0x0
  402ff8:	je     0x402f7c
  402ffa:	nop    WORD PTR [rax+rax*1+0x0]
  403000:	mov    ecx,0x20
  403005:	sub    edi,0x1
  403008:	mov    WORD PTR [rax],cx
  40300b:	jne    0x403000
  40300d:	add    ebx,0x1
  403010:	cmp    r15d,ebx
  403013:	jg     0x402f88
  403019:	nop    DWORD PTR [rax+0x0]
  403020:	mov    eax,DWORD PTR [rsp+0x28]
  403024:	or     eax,DWORD PTR [rsp+0x30]
  403028:	je     0x4031a9
  40302e:	cmp    QWORD PTR [rip+0x500a],0x0        # 0x408040
  403036:	je     0x4031d5
  40303c:	mov    edx,DWORD PTR [rsp+0x30]
  403040:	test   edx,edx
  403042:	je     0x403054
  403044:	mov    rcx,QWORD PTR [rip+0x4fe5]        # 0x408030
  40304b:	test   rcx,rcx
  40304e:	jne    0x4031c6
  403054:	mov    eax,DWORD PTR [rsp+0x28]
  403058:	test   eax,eax
  40305a:	je     0x40309a
  40305c:	xor    ecx,ecx
  40305e:	mov    ebx,0x4
  403063:	mov    QWORD PTR [rip+0x4fc2],0xffffffffffffffff        # 0x408030
  40306e:	call   0x401790
  403073:	mov    rcx,rbx
  403076:	call   0x401790
  40307b:	test   rax,rax
  40307e:	je     0x40308d
  403080:	mov    r8,rbp
  403083:	xor    edx,edx
  403085:	mov    rcx,rbx
  403088:	call   0x401610
  40308d:	add    rbx,0x4
  403091:	cmp    rbx,0x400
  403098:	jne    0x403073
  40309a:	xor    eax,eax
  40309c:	add    rsp,0x48
  4030a0:	pop    rbx
  4030a1:	pop    rsi
  4030a2:	pop    rdi
  4030a3:	pop    rbp
  4030a4:	pop    r12
  4030a6:	pop    r13
  4030a8:	pop    r14
  4030aa:	pop    r15
  4030ac:	ret    
  4030ad:	nop    DWORD PTR [rax]
  4030b0:	lea    rsi,[rip+0x2118]        # 0x4051cf
  4030b7:	mov    rdi,r10
  4030ba:	mov    rcx,r14
  4030bd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4030bf:	jne    0x4030f5
  4030c1:	add    ebx,0x1
  4030c4:	cmp    r15d,ebx
  4030c7:	jle    0x402f7c
  4030cd:	mov    rbp,QWORD PTR [r13+rdx*1+0x8]
  4030d2:	jmp    0x402f7c
  4030d7:	nop    WORD PTR [rax+rax*1+0x0]
  4030e0:	mov    rcx,QWORD PTR [r13+rdx*1+0x8]
  4030e5:	call   0x402d98
  4030ea:	mov    DWORD PTR [rip+0xf24],eax        # 0x404014
  4030f0:	jmp    0x402f7c
  4030f5:	lea    rsi,[rip+0x20d6]        # 0x4051d2
  4030fc:	mov    rdi,r10
  4030ff:	mov    rcx,r14
  403102:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403104:	jne    0x403130
  403106:	add    ebx,0x1
  403109:	cmp    r15d,ebx
  40310c:	jle    0x402f7c
  403112:	mov    rcx,QWORD PTR [r13+rdx*1+0x8]
  403117:	call   0x401798
  40311c:	mov    QWORD PTR [rip+0x4f0d],rax        # 0x408030
  403123:	jmp    0x402f7c
  403128:	nop    DWORD PTR [rax+rax*1+0x0]
  403130:	lea    rsi,[rip+0x209e]        # 0x4051d5
  403137:	mov    rdi,r10
  40313a:	mov    rcx,r14
  40313d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40313f:	jne    0x403150
  403141:	mov    DWORD PTR [rip+0xec5],0x0        # 0x404010
  40314b:	jmp    0x402f7c
  403150:	lea    rcx,[rip+0x2081]        # 0x4051d8
  403157:	mov    rdx,r10
  40315a:	mov    QWORD PTR [rsp+0x38],r10
  40315f:	call   0x402d48
  403164:	test   eax,eax
  403166:	mov    r10,QWORD PTR [rsp+0x38]
  40316b:	je     0x403197
  40316d:	lea    rcx,[rip+0x206b]        # 0x4051df
  403174:	mov    rdx,r10
  403177:	mov    QWORD PTR [rsp+0x30],r10
  40317c:	call   0x402d48
  403181:	test   eax,eax
  403183:	mov    r10,QWORD PTR [rsp+0x30]
  403188:	jne    0x4031f0
  40318a:	mov    DWORD PTR [rsp+0x30],0x1
  403192:	jmp    0x402f7c
  403197:	mov    DWORD PTR [rsp+0x28],0x1
  40319f:	jmp    0x402f7c
  4031a4:	mov    ebx,0x1
  4031a9:	movsxd rbx,ebx
  4031ac:	mov    rcx,QWORD PTR [r13+rbx*8-0x8]
  4031b1:	add    rsp,0x48
  4031b5:	pop    rbx
  4031b6:	pop    rsi
  4031b7:	pop    rdi
  4031b8:	pop    rbp
  4031b9:	pop    r12
  4031bb:	pop    r13
  4031bd:	pop    r14
  4031bf:	pop    r15
  4031c1:	jmp    0x401530
  4031c6:	mov    r8,rbp
  4031c9:	xor    edx,edx
  4031cb:	call   0x401610
  4031d0:	jmp    0x403054
  4031d5:	mov    ecx,0x2
  4031da:	call   0x4017b0
  4031df:	mov    QWORD PTR [rip+0x4e5a],rax        # 0x408040
  4031e6:	mov    WORD PTR [rax],0x20
  4031eb:	jmp    0x40303c
  4031f0:	lea    rcx,[rip+0x1fed]        # 0x4051e4
  4031f7:	mov    rdx,r10
  4031fa:	mov    QWORD PTR [rsp+0x28],r10
  4031ff:	call   0x402d48
  403204:	test   eax,eax
  403206:	mov    r10,QWORD PTR [rsp+0x28]
  40320b:	je     0x40322f
  40320d:	lea    rcx,[rip+0x1fd3]        # 0x4051e7
  403214:	mov    rdx,r10
  403217:	mov    QWORD PTR [rsp+0x28],r10
  40321c:	call   0x402d48
  403221:	test   eax,eax
  403223:	mov    r10,QWORD PTR [rsp+0x28]
  403228:	je     0x40322f
  40322a:	mov    rcx,r10
  40322d:	jmp    0x4031b1
  40322f:	xor    ecx,ecx
  403231:	jmp    0x4031b1
  403236:	nop
  403237:	nop
  403238:	nop
  403239:	nop
  40323a:	nop
  40323b:	nop
  40323c:	nop
  40323d:	nop
  40323e:	nop
  40323f:	nop
  403240:	(bad)  
  403241:	(bad)  
  403242:	(bad)  
  403243:	(bad)  
  403244:	(bad)  
  403245:	(bad)  
  403246:	(bad)  
  403247:	inc    DWORD PTR [rax]
  403249:	add    BYTE PTR [rax],al
  40324b:	add    BYTE PTR [rax],al
  40324d:	add    BYTE PTR [rax],al
  40324f:	add    bh,bh
  403251:	(bad)  
  403252:	(bad)  
  403253:	(bad)  
  403254:	(bad)  
  403255:	(bad)  
  403256:	(bad)  
  403257:	inc    DWORD PTR [rax]
  403259:	add    BYTE PTR [rax],al
  40325b:	add    BYTE PTR [rax],al
  40325d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	add    DWORD PTR [rax],eax
  404012:	add    BYTE PTR [rax],al
  404014:	add    DWORD PTR [rax],eax
	...
  40401e:	add    BYTE PTR [rax],al
  404020:	pop    rax
  404021:	xor    al,BYTE PTR [rax+0x0]
	...
  404030:	(bad)  
  404031:	(bad)  
  404032:	(bad)  
  404033:	(bad)  
  404034:	(bad)  
  404035:	(bad)  
  404036:	(bad)  
  404037:	inc    DWORD PTR [rax]
  404039:	add    BYTE PTR [rax],al
  40403b:	add    BYTE PTR [rax],al
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    bh,bh
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    BYTE PTR [rdx],al
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    bh,bh
  404061:	(bad)  
  404062:	(bad)  
  404063:	inc    DWORD PTR [rax]
	...
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rax],dl
  404071:	add    BYTE PTR cs:[rax],al
  404075:	add    BYTE PTR [rax],al
  404077:	add    BYTE PTR [rax],ah
  404079:	add    BYTE PTR cs:[rax],al
  40407d:	add    BYTE PTR [rax],al
  40407f:	add    BYTE PTR [rdx],dh
  404081:	movabs ds:0x2b992ddf,al
  40408a:	add    BYTE PTR [rax],al
  40408c:	add    BYTE PTR [rax],al
  40408e:	add    BYTE PTR [rax],al
  404090:	int    0x5d
  404092:	and    dl,dl
  404094:	data16 (bad) 
  404096:	(bad)  
  404097:	inc    DWORD PTR [rax]
  404099:	add    BYTE PTR [rax],al
  40409b:	add    BYTE PTR [rax],al
  40409d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	jne    0x405075
  405002:	(bad)  
  405003:	cmp    ah,BYTE PTR gs:[eax]
  405007:	outs   dx,DWORD PTR ds:[esi]
  405009:	(bad)  
  40500a:	push   0x65
  40500c:	movsxd esi,DWORD PTR [rbp+rbp*1+0x71]
  405010:	jne    0x405077
  405012:	jb     0x40508d
  405014:	and    BYTE PTR [rcx+rsi*2],bh
  405017:	jne    0x40507a
  405019:	ins    BYTE PTR es:[rdi],dx
  40501a:	imul   esp,DWORD PTR [rsi+0x69],0x203e7265
  405021:	pop    rbx
  405022:	sub    eax,0x743c2072
  405027:	jns    0x405099
  405029:	gs ds pop rbp
  40502c:	and    BYTE PTR [rbx+0x2d],bl
  40502f:	jnp    0x40509a
  405031:	jl     0x405095
  405033:	jge    0x405055
  405035:	and    ah,BYTE PTR [rdx]
  405037:	pop    rbp
  405038:	and    BYTE PTR [rbx+0x2d],bl
  40503b:	jae    0x40505d
  40503d:	and    ebx,DWORD PTR [rbp+0x20]
  405040:	pop    rbx
  405041:	sub    eax,0x787c687b
  405046:	jl     0x4050c1
  405048:	jge    0x4050a7
  40504a:	or     al,BYTE PTR [rax]
  40504c:	add    BYTE PTR [rax],al
  40504e:	add    BYTE PTR [rax],al
  405050:	and    BYTE PTR [rax],ah
  405052:	and    BYTE PTR [rax],ah
  405054:	and    BYTE PTR [rax],ah
  405056:	and    BYTE PTR [rip+0x20202072],ch        # 0x206070ce
  40505c:	and    BYTE PTR [rax],ah
  40505e:	and    BYTE PTR [rax],ah
  405060:	jae    0x4050d2
  405062:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  405066:	imul   edi,DWORD PTR [rcx+0x20],0x746f6f72
  40506d:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  405071:	or     al,BYTE PTR gs:[rax]
  405074:	add    BYTE PTR [rax],al
  405076:	add    BYTE PTR [rax],al
  405078:	and    BYTE PTR [rax],ah
  40507a:	and    BYTE PTR [rax],ah
  40507c:	and    BYTE PTR [rax],ah
  40507e:	and    BYTE PTR [rip+0x2020206e],ch        # 0x206070f2
  405084:	and    BYTE PTR [rax],ah
  405086:	and    BYTE PTR [rax],ah
  405088:	outs   dx,DWORD PTR fs:[rsi]
  40508a:	outs   dx,BYTE PTR ds:[rsi]
  40508b:	(bad)  
  40508c:	je     0x4050ae
  40508e:	fs gs jae 0x4050f5
  405092:	outs   dx,BYTE PTR gs:[rsi]
  405094:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dh
  405099:	and    BYTE PTR gs:[rdx+rsi*2+0x65],dh
  40509e:	or     al,BYTE PTR gs:[rax]
  4050a1:	add    BYTE PTR [rax],al
  4050a3:	add    BYTE PTR [rax],al
  4050a5:	add    BYTE PTR [rax],al
  4050a7:	add    BYTE PTR [rax],ah
  4050a9:	and    BYTE PTR [rax],ah
  4050ab:	and    BYTE PTR [rax],ah
  4050ad:	and    BYTE PTR [rax],ah
  4050af:	sub    eax,0x20202068
  4050b4:	and    BYTE PTR [rax],ah
  4050b6:	and    BYTE PTR [rax],ah
  4050b8:	addr32 jne 0x405120
  4050bb:	jae    0x405130
  4050bd:	and    BYTE PTR [rdi+0x68],dh
  4050c0:	(bad)  
  4050c1:	je     0x4050e3
  4050c3:	cmp    ebp,DWORD PTR [rcx]
  4050c5:	or     al,BYTE PTR [rax]
  4050c7:	add    BYTE PTR [rax],ah
  4050c9:	and    BYTE PTR [rax],ah
  4050cb:	and    BYTE PTR [rax],ah
  4050cd:	and    BYTE PTR [rax],ah
  4050cf:	sub    eax,0x20202062
  4050d4:	and    BYTE PTR [rax],ah
  4050d6:	and    BYTE PTR [rax],ah
  4050d8:	jae    0x40514a
  4050da:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4050de:	jns    0x405100
  4050e0:	imul   ebp,DWORD PTR [rsi+0x64],0x20746e65
  4050e7:	jae    0x40515d
  4050e9:	jb     0x405154
  4050eb:	outs   dx,BYTE PTR ds:[rsi]
  4050ec:	or     al,BYTE PTR [eax]
  4050ef:	add    BYTE PTR [rax],ah
  4050f1:	and    BYTE PTR [rax],ah
  4050f3:	and    BYTE PTR [rax],ah
  4050f5:	and    BYTE PTR [rax],ah
  4050f7:	sub    eax,0x20202069
  4050fc:	and    BYTE PTR [rax],ah
  4050fe:	and    BYTE PTR [rax],ah
  405100:	jae    0x405172
  405102:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  405106:	jns    0x405128
  405108:	imul   ebp,DWORD PTR [rsi+0x63],0x656d6572
  40510f:	outs   dx,BYTE PTR ds:[rsi]
  405110:	je     0x405173
  405112:	ins    BYTE PTR es:[rdi],dx
  405113:	and    BYTE PTR [rcx+0x6e],ch
  405116:	fs outs dx,BYTE PTR gs:[rsi]
  405119:	je     0x40513b
  40511b:	jae    0x405191
  40511d:	jb     0x405188
  40511f:	outs   dx,BYTE PTR ds:[rsi]
  405120:	or     al,BYTE PTR [eax]
  405123:	add    BYTE PTR [rax],al
  405125:	add    BYTE PTR [rax],al
  405127:	add    BYTE PTR [rax],ah
  405129:	and    BYTE PTR [rax],ah
  40512b:	and    BYTE PTR [rax],ah
  40512d:	and    BYTE PTR [rax],ah
  40512f:	sub    eax,0x20202073
  405134:	and    BYTE PTR [rax],ah
  405136:	and    BYTE PTR [rax],ah
  405138:	jae    0x4051aa
  40513a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40513e:	jns    0x405160
  405140:	ins    BYTE PTR es:[rdi],dx
  405141:	imul   ebp,DWORD PTR [rsi+0x65],0x61707320
  405148:	movsxd ebp,DWORD PTR [rcx+0x6e]
  40514b:	or     al,BYTE PTR [eax]
  40514e:	jno    0x4051c5
  405150:	(bad)  
  405151:	ins    BYTE PTR es:[rdi],dx
  405152:	imul   esp,DWORD PTR [rsi+0x69],0x3a737265
  405159:	or     al,BYTE PTR [rax]
  40515b:	add    BYTE PTR [rax],al
  40515d:	add    BYTE PTR [rax],al
  40515f:	add    BYTE PTR [rax],ah
  405161:	and    BYTE PTR [rax],ah
  405163:	and    BYTE PTR [rax],ah
  405165:	and    BYTE PTR [rax],ah
  405167:	data16 jb 0x4051d9
  40516a:	outs   dx,DWORD PTR ds:[rsi]
  40516b:	je     0x4051e0
  40516d:	and    BYTE PTR [rax],ah
  40516f:	and    BYTE PTR [rcx+0x74],ch
  405172:	gs jb  0x4051d6
  405175:	je     0x4051dc
  405177:	and    BYTE PTR [rdi+0x76],ch
  40517a:	gs jb  0x40519d
  40517d:	data16 jne 0x4051ee
  405180:	fs (bad) 
  405182:	ins    DWORD PTR es:[rdi],dx
  405183:	outs   dx,BYTE PTR gs:[rsi]
  405185:	je     0x4051e8
  405187:	ins    BYTE PTR es:[rdi],dx
  405188:	and    BYTE PTR [rdx+0x6f],dh
  40518b:	outs   dx,DWORD PTR ds:[rsi]
  40518c:	je     0x405201
  40518e:	or     al,BYTE PTR [rax]
  405190:	and    BYTE PTR [rax],ah
  405192:	and    BYTE PTR [rax],ah
  405194:	and    BYTE PTR [rax],ah
  405196:	and    BYTE PTR [rdx+rsi*2+0x65],dh
  40519a:	and    BYTE PTR gs:[rax],ah
  40519d:	and    BYTE PTR [rax],ah
  40519f:	and    BYTE PTR [rax+0x72],dh
  4051a2:	imul   ebp,DWORD PTR [rsi+0x74],0x70797420
  4051a9:	and    BYTE PTR gs:[rdx+rsi*2+0x65],dh
  4051ae:	or     al,BYTE PTR gs:[rax]
  4051b1:	sub    eax,DWORD PTR [rax]
  4051b3:	and    BYTE PTR [rax],al
  4051b5:	(bad)  
  4051b6:	add    BYTE PTR [rax+rax*1+0x25],bh
  4051ba:	jae    0x4051e1
  4051bc:	jae    0x4051c8
  4051be:	add    BYTE PTR [rip+0x25732573],ah        # 0x25b37737
  4051c4:	jae    0x4051eb
  4051c6:	jae    0x4051c8
  4051c8:	add    BYTE PTR [rip+0x692d0073],ch        # 0x696d5241
  4051ce:	add    BYTE PTR [rip+0x722d0062],ch        # 0x726d5236
  4051d4:	add    BYTE PTR [rip+0x7266006e],ch        # 0x72a65248
  4051da:	outs   dx,DWORD PTR ds:[rsi]
  4051db:	outs   dx,DWORD PTR ds:[rsi]
  4051dc:	je     0x405251
  4051de:	add    BYTE PTR [rdx+rsi*2+0x65],dh
  4051e2:	add    BYTE PTR gs:[rip+0x2d2d0068],ch        # 0x2d6d5251
  4051e9:	push   0x706c65
  4051ee:	add    BYTE PTR [rax],al
  4051f0:	add    BYTE PTR [rbp+0x40],0x0
  4051f7:	add    BYTE PTR [rax+0x4080],al
  4051fd:	add    BYTE PTR [rax],al
  4051ff:	add    BYTE PTR [rax+0x401b],dl
	...
  40520d:	add    BYTE PTR [rax],al
  40520f:	add    BYTE PTR [rcx+0x72],al
  405212:	addr32 jne 0x405282
  405215:	outs   dx,BYTE PTR gs:[rsi]
  405217:	je     0x405239
  405219:	outs   dx,DWORD PTR fs:[rsi]
  40521b:	ins    DWORD PTR es:[rdi],dx
  40521c:	(bad)  
  40521d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  405224:	jb     0x405246
  405226:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40522a:	rex.B
  40522b:	rex.WB
  40522c:	rex.WRX sub QWORD PTR [rax],r8
  40522f:	rex.B jb 0x405299
  405232:	jne    0x4052a1
  405234:	outs   dx,BYTE PTR gs:[rsi]
  405236:	je     0x405258
  405238:	jae    0x4052a3
  40523a:	outs   dx,BYTE PTR ds:[rsi]
  40523b:	addr32 jne 0x4052aa
  40523e:	(bad)  
  40523f:	jb     0x4052aa
  405241:	je     0x4052bc
  405243:	and    BYTE PTR [rax],ch
  405245:	push   rbx
  405246:	rex.WB
  405247:	rex.RXB
  405248:	rex.WRX sub QWORD PTR [rax],r8
  40524b:	add    BYTE PTR [rax],al
  40524d:	add    BYTE PTR [rax],al
  40524f:	add    BYTE PTR [rdi+0x76],cl
  405252:	gs jb  0x4052bb
  405255:	ins    BYTE PTR es:[rdi],dx
  405256:	outs   dx,DWORD PTR ds:[rsi]
  405257:	ja     0x405279
  405259:	jb     0x4052bc
  40525b:	outs   dx,BYTE PTR ds:[rsi]
  40525c:	and    BYTE PTR gs:[ebp+0x72],ah
  405261:	jb     0x4052d2
  405263:	jb     0x405285
  405265:	sub    BYTE PTR [rdi+0x56],cl
  405268:	rex.RB push r10
  40526a:	rex.RX
  40526b:	rex.WR
  40526c:	rex.WRXB push r15
  40526e:	sub    DWORD PTR [rax],eax
  405270:	push   rax
  405271:	(bad)  
  405272:	jb     0x4052e8
  405274:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40527b:	jae    0x40529d
  40527d:	outs   dx,DWORD PTR ds:[rsi]
  40527e:	data16 and BYTE PTR [rbx+0x69],dh
  405282:	outs   dx,BYTE PTR ds:[esi]
  405284:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40528b:	and    BYTE PTR gs:[rax],ch
  40528e:	push   rax
  40528f:	rex.WR
  405290:	rex.WRXB push r11
  405292:	push   rbx
  405293:	sub    DWORD PTR [rax],eax
  405295:	add    BYTE PTR [rax],al
  405297:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40529b:	(bad)  
  40529c:	ins    BYTE PTR es:[rdi],dx
  40529d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4052a1:	jae    0x4052c3
  4052a3:	outs   dx,DWORD PTR ds:[rsi]
  4052a4:	data16 and BYTE PTR [rbx+0x69],dh
  4052a8:	outs   dx,BYTE PTR ds:[esi]
  4052aa:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4052b1:	and    BYTE PTR gs:[rax],ch
  4052b4:	push   rsp
  4052b5:	rex.WR
  4052b6:	rex.WRXB push r11
  4052b8:	push   rbx
  4052b9:	sub    DWORD PTR [rax],eax
  4052bb:	add    BYTE PTR [rax],al
  4052bd:	add    BYTE PTR [rax],al
  4052bf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4052c3:	and    BYTE PTR [rdx+0x65],dh
  4052c6:	jae    0x40533d
  4052c8:	ins    BYTE PTR es:[rdi],dx
  4052c9:	je     0x4052eb
  4052cb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4052d2:	jae    0x405341
  4052d4:	(bad)  
  4052d5:	ins    BYTE PTR es:[rdi],dx
  4052d6:	ins    BYTE PTR es:[rdi],dx
  4052d7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4052db:	(bad)  
  4052dc:	and    BYTE PTR gs:[rdx+0x65],dh
  4052e0:	jo     0x405354
  4052e2:	gs jae 0x40534a
  4052e5:	outs   dx,BYTE PTR ds:[rsi]
  4052e6:	je     0x40534d
  4052e8:	and    BYTE PTR fs:[rax],ch
  4052eb:	push   rbp
  4052ec:	rex.WRX
  4052ed:	rex.R
  4052ee:	rex.RB push r10
  4052f0:	rex.RX
  4052f1:	rex.WR
  4052f2:	rex.WRXB push r15
  4052f4:	sub    DWORD PTR [rax],eax
  4052f6:	push   rbp
  4052f7:	outs   dx,BYTE PTR ds:[rsi]
  4052f8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4052fc:	outs   dx,BYTE PTR ds:[rsi]
  4052fd:	and    BYTE PTR [rbp+0x72],ah
  405300:	jb     0x405371
  405302:	jb     0x405304
  405304:	add    BYTE PTR [rax],al
  405306:	add    BYTE PTR [rax],al
  405308:	pop    rdi
  405309:	ins    DWORD PTR es:[rdi],dx
  40530a:	(bad)  
  40530b:	je     0x405375
  40530d:	gs jb  0x405382
  405310:	sub    BYTE PTR [rcx],ch
  405312:	cmp    ah,BYTE PTR [rax]
  405314:	and    eax,0x6e692073
  405319:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657b92
  40531f:	sub    al,0x20
  405321:	and    eax,0x20202967
  405326:	sub    BYTE PTR [rdx+0x65],dh
  405329:	je     0x4053a1
  40532b:	(bad)  
  40532c:	ins    BYTE PTR es:[rdi],dx
  40532d:	cmp    eax,0xa296725
  405332:	add    BYTE PTR [rax],al
  405334:	sub    al,0xca
  405336:	(bad)  
  405337:	jmp    FWORD PTR [rbp-0x37]
  40533a:	(bad)  
  40533b:	(bad)  
  40533c:	fmul   st(1),st
  40533e:	(bad)  
  40533f:	(bad)  
  405340:	in     al,dx
  405341:	leave  
  405342:	(bad)  
  405343:	(bad)  
  405344:	cld    
  405345:	leave  
  405346:	(bad)  
  405347:	dec    DWORD PTR [rdx+rcx*8]
  40534a:	(bad)  
  40534b:	call   FWORD PTR [rdx+rcx*8]
  40534e:	(bad)  
  40534f:	dec    DWORD PTR [rbp+0x69]
  405352:	outs   dx,BYTE PTR ds:[rsi]
  405353:	addr32 ja 0x405383
  405356:	ja     0x40538e
  405358:	xor    al,0x20
  40535a:	jb     0x4053d1
  40535c:	outs   dx,BYTE PTR ds:[rsi]
  40535d:	je     0x4053c8
  40535f:	ins    DWORD PTR es:[rdi],dx
  405360:	and    BYTE PTR gs:[rsi+0x61],ah
  405364:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40536c:	add    BYTE PTR [rax],al
  40536e:	add    BYTE PTR [rax],al
  405370:	rex.B
  405371:	fs fs jb 0x4053da
  405375:	jae    0x4053ea
  405377:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a873ed
  40537d:	jae    0x40539f
  40537f:	outs   dx,BYTE PTR ds:[rsi]
  405380:	outs   dx,DWORD PTR ds:[rsi]
  405381:	and    BYTE PTR [rcx+0x6d],ch
  405384:	(bad)  
  405385:	addr32 gs sub eax,0x74636573
  40538c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405393:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40539a:	jne    0x405401
  40539c:	jb     0x405417
  40539e:	and    BYTE PTR [rsi+0x61],ah
  4053a1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4053a9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a27413
  4053af:	je     0x405416
  4053b1:	jae    0x4053d3
  4053b3:	(bad)  
  4053b4:	je     0x4053d6
  4053b6:	(bad)  
  4053b7:	fs fs jb 0x405420
  4053bb:	jae    0x405430
  4053bd:	and    BYTE PTR [rip+0x70],ah        # 0x405433
  4053c3:	add    BYTE PTR [rax],al
  4053c5:	add    BYTE PTR [rax],al
  4053c7:	add    BYTE PTR [rax],ah
  4053c9:	and    BYTE PTR [rsi+0x69],dl
  4053cc:	jb     0x405442
  4053ce:	jne    0x405431
  4053d0:	ins    BYTE PTR es:[rdi],dx
  4053d1:	push   rax
  4053d2:	jb     0x405443
  4053d4:	je     0x40543b
  4053d6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4053da:	(bad)  
  4053db:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4053e3:	push   0x646f6320
  4053e8:	and    BYTE PTR gs:[rax],dh
  4053eb:	js     0x405412
  4053ed:	js     0x4053ef
  4053ef:	add    BYTE PTR [rax],ah
  4053f1:	and    BYTE PTR [rbp+0x6e],dl
  4053f4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4053f8:	outs   dx,BYTE PTR ds:[rsi]
  4053f9:	and    BYTE PTR [rax+0x73],dh
  4053fc:	gs jne 0x405463
  4053ff:	outs   dx,DWORD PTR ds:[rsi]
  405400:	and    BYTE PTR [rdx+0x65],dh
  405403:	ins    BYTE PTR es:[rdi],dx
  405404:	outs   dx,DWORD PTR ds:[rsi]
  405405:	movsxd esp,DWORD PTR [rcx+0x74]
  405408:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40540f:	je     0x405480
  405411:	movsxd ebp,DWORD PTR [rdi+0x6c]
  405414:	and    BYTE PTR [rsi+0x65],dh
  405417:	jb     0x40548c
  405419:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  405420:	or     al,BYTE PTR [rax]
  405422:	add    BYTE PTR [rax],al
  405424:	add    BYTE PTR [rax],al
  405426:	add    BYTE PTR [rax],al
  405428:	and    BYTE PTR [rax],ah
  40542a:	push   rbp
  40542b:	outs   dx,BYTE PTR ds:[rsi]
  40542c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405430:	outs   dx,BYTE PTR ds:[rsi]
  405431:	and    BYTE PTR [rax+0x73],dh
  405434:	gs jne 0x40549b
  405437:	outs   dx,DWORD PTR ds:[rsi]
  405438:	and    BYTE PTR [rdx+0x65],dh
  40543b:	ins    BYTE PTR es:[rdi],dx
  40543c:	outs   dx,DWORD PTR ds:[rsi]
  40543d:	movsxd esp,DWORD PTR [rcx+0x74]
  405440:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405447:	and    BYTE PTR [rbx+0x69],dh
  40544a:	jp     0x4054b1
  40544c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a82b6
	...
  40545e:	add    BYTE PTR [rax],al
  405460:	cs jo  0x4054c7
  405463:	(bad)  
  405464:	je     0x4054c7
	...
  40546e:	add    BYTE PTR [rax],al
  405470:	push   rax
  405471:	rex
  405472:	add    BYTE PTR [rax],al
	...
  40547d:	add    BYTE PTR [rax],al
  40547f:	add    BYTE PTR [rax+0x40],ah
  405482:	add    BYTE PTR [rax],al
	...
  40548d:	add    BYTE PTR [rax],al
  40548f:	add    BYTE PTR [rax+0x32],al
  405492:	add    BYTE PTR [rax],al
	...
  40549d:	add    BYTE PTR [rax],al
  40549f:	add    BYTE PTR [rax+0x4059],dh
	...
  4054ad:	add    BYTE PTR [rax],al
  4054af:	add    BYTE PTR [rax+0x4059],dh
	...
  4054c1:	push   rdx
  4054c2:	add    BYTE PTR [rax],al
	...
  4054d1:	add    BYTE PTR [rax+0x0],al
	...
  4054e0:	pushf  
  4054e1:	xchg   ebx,eax
  4054e2:	add    BYTE PTR [rax],al
	...
  4054ed:	add    BYTE PTR [rax],al
  4054ef:	add    ah,al
  4054f1:	xchg   ebx,eax
  4054f2:	add    BYTE PTR [rax],al
	...
  4054fd:	add    BYTE PTR [rax],al
  4054ff:	add    ah,bl
  405501:	xchg   ebx,eax
  405502:	add    BYTE PTR [rax],al
	...
  40550d:	add    BYTE PTR [rax],al
  40550f:	add    ah,dh
  405511:	xchg   ebx,eax
  405512:	add    BYTE PTR [rax],al
	...
  40551d:	add    BYTE PTR [rax],al
  40551f:	add    al,al
  405521:	xchg   BYTE PTR [rax+0x0],al
	...
  405530:	sub    BYTE PTR [rdx+0x40],cl
	...
  40553e:	add    BYTE PTR [rax],al
  405540:	and    BYTE PTR [rdx+0x40],cl
	...
  40554e:	add    BYTE PTR [rax],al
  405550:	adc    BYTE PTR [rdx+0x40],cl
	...
  40555e:	add    BYTE PTR [rax],al
  405560:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40556e:	add    BYTE PTR [rax],al
  405570:	add    BYTE PTR [rax+0x40],ah
	...
  40557e:	add    BYTE PTR [rax],al
  405580:	adc    BYTE PTR [rax+0x40],ah
	...
  40558e:	add    BYTE PTR [rax],al
  405590:	sbb    BYTE PTR [rax+0x40],ah
	...
  40559e:	add    BYTE PTR [rax],al
  4055a0:	xor    BYTE PTR [rax+0x40],ah
	...
  4055ae:	add    BYTE PTR [rax],al
  4055b0:	(bad)  
  4055b1:	add    BYTE PTR [rax+0x0],0x0
	...
  4055bd:	add    BYTE PTR [rax],al
  4055bf:	add    BYTE PTR [rax+0x4086],dl
	...
  4055cd:	add    BYTE PTR [rax],al
  4055cf:	add    BYTE PTR [rax],ah
  4055d1:	and    eax,0x40
	...
  4055de:	add    BYTE PTR [rax],al
  4055e0:	jo     0x4055fe
  4055e2:	add    BYTE PTR [rax],al
	...
  4055ed:	add    BYTE PTR [rax],al
  4055ef:	add    BYTE PTR [rax-0x7a],al
  4055f2:	add    BYTE PTR [rax],al
	...
  4055fd:	add    BYTE PTR [rax],al
  4055ff:	add    BYTE PTR [rax-0x7a],dh
  405602:	add    BYTE PTR [rax],al
	...
  40560d:	add    BYTE PTR [rax],al
  40560f:	add    BYTE PTR [rax-0x80],dh
  405612:	add    BYTE PTR [rax],al
	...
  40561d:	add    BYTE PTR [rax],al
  40561f:	add    BYTE PTR [rax-0x7a],bl
  405622:	add    BYTE PTR [rax],al
	...
  40562d:	add    BYTE PTR [rax],al
  40562f:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  40563f:	add    BYTE PTR [rax-0x7a],dl
  405642:	add    BYTE PTR [rax],al
	...
  40564d:	add    BYTE PTR [rax],al
  40564f:	add    BYTE PTR [rdi+0x43],al
  405652:	rex.XB cmp spl,BYTE PTR [r8]
  405655:	sub    BYTE PTR [rdi+0x4e],al
  405658:	push   rbp
  405659:	sub    DWORD PTR [rax],esp
  40565b:	xor    al,0x2e
  40565d:	cmp    DWORD PTR [rsi],ebp
  40565f:	xor    al,0x0
	...
  40566d:	add    BYTE PTR [rax],al
  40566f:	add    BYTE PTR [rdi+0x43],al
  405672:	rex.XB cmp spl,BYTE PTR [r8]
  405675:	sub    BYTE PTR [rdi+0x4e],al
  405678:	push   rbp
  405679:	sub    DWORD PTR [rax],esp
  40567b:	xor    al,0x2e
  40567d:	cmp    DWORD PTR [rsi],ebp
  40567f:	xor    al,0x0
	...
  40568d:	add    BYTE PTR [rax],al
  40568f:	add    BYTE PTR [rdi+0x43],al
  405692:	rex.XB cmp spl,BYTE PTR [r8]
  405695:	sub    BYTE PTR [rdi+0x4e],al
  405698:	push   rbp
  405699:	sub    DWORD PTR [rax],esp
  40569b:	xor    al,0x2e
  40569d:	cmp    DWORD PTR [rsi],ebp
  40569f:	xor    al,0x0
	...
  4056ad:	add    BYTE PTR [rax],al
  4056af:	add    BYTE PTR [rdi+0x43],al
  4056b2:	rex.XB cmp spl,BYTE PTR [r8]
  4056b5:	sub    BYTE PTR [rdi+0x4e],al
  4056b8:	push   rbp
  4056b9:	sub    DWORD PTR [rax],esp
  4056bb:	xor    al,0x2e
  4056bd:	cmp    DWORD PTR [rsi],ebp
  4056bf:	xor    al,0x0
	...
  4056cd:	add    BYTE PTR [rax],al
  4056cf:	add    BYTE PTR [rdi+0x43],al
  4056d2:	rex.XB cmp spl,BYTE PTR [r8]
  4056d5:	sub    BYTE PTR [rdi+0x4e],al
  4056d8:	push   rbp
  4056d9:	sub    DWORD PTR [rax],esp
  4056db:	xor    al,0x2e
  4056dd:	cmp    DWORD PTR [rsi],ebp
  4056df:	xor    al,0x0
	...
  4056ed:	add    BYTE PTR [rax],al
  4056ef:	add    BYTE PTR [rdi+0x43],al
  4056f2:	rex.XB cmp spl,BYTE PTR [r8]
  4056f5:	sub    BYTE PTR [rdi+0x4e],al
  4056f8:	push   rbp
  4056f9:	sub    DWORD PTR [rax],esp
  4056fb:	xor    al,0x2e
  4056fd:	cmp    DWORD PTR [rsi],ebp
  4056ff:	xor    al,0x0
	...
  40570d:	add    BYTE PTR [rax],al
  40570f:	add    BYTE PTR [rdi+0x43],al
  405712:	rex.XB cmp spl,BYTE PTR [r8]
  405715:	sub    BYTE PTR [rdi+0x4e],al
  405718:	push   rbp
  405719:	sub    DWORD PTR [rax],esp
  40571b:	xor    al,0x2e
  40571d:	cmp    DWORD PTR [rsi],ebp
  40571f:	xor    al,0x0
	...
  40572d:	add    BYTE PTR [rax],al
  40572f:	add    BYTE PTR [rdi+0x43],al
  405732:	rex.XB cmp spl,BYTE PTR [r8]
  405735:	sub    BYTE PTR [rdi+0x4e],al
  405738:	push   rbp
  405739:	sub    DWORD PTR [rax],esp
  40573b:	xor    al,0x2e
  40573d:	cmp    DWORD PTR [rsi],ebp
  40573f:	xor    al,0x0
	...
  40574d:	add    BYTE PTR [rax],al
  40574f:	add    BYTE PTR [rdi+0x43],al
  405752:	rex.XB cmp spl,BYTE PTR [r8]
  405755:	sub    BYTE PTR [rdi+0x4e],al
  405758:	push   rbp
  405759:	sub    DWORD PTR [rax],esp
  40575b:	xor    al,0x2e
  40575d:	cmp    DWORD PTR [rsi],ebp
  40575f:	xor    al,0x0
	...
  40576d:	add    BYTE PTR [rax],al
  40576f:	add    BYTE PTR [rdi+0x43],al
  405772:	rex.XB cmp spl,BYTE PTR [r8]
  405775:	sub    BYTE PTR [rdi+0x4e],al
  405778:	push   rbp
  405779:	sub    DWORD PTR [rax],esp
  40577b:	xor    al,0x2e
  40577d:	cmp    DWORD PTR [rsi],ebp
  40577f:	xor    al,0x0
	...
  40578d:	add    BYTE PTR [rax],al
  40578f:	add    BYTE PTR [rdi+0x43],al
  405792:	rex.XB cmp spl,BYTE PTR [r8]
  405795:	sub    BYTE PTR [rdi+0x4e],al
  405798:	push   rbp
  405799:	sub    DWORD PTR [rax],esp
  40579b:	xor    al,0x2e
  40579d:	cmp    DWORD PTR [rsi],ebp
  40579f:	xor    al,0x0
	...
  4057ad:	add    BYTE PTR [rax],al
  4057af:	add    BYTE PTR [rdi+0x43],al
  4057b2:	rex.XB cmp spl,BYTE PTR [r8]
  4057b5:	sub    BYTE PTR [rdi+0x4e],al
  4057b8:	push   rbp
  4057b9:	sub    DWORD PTR [rax],esp
  4057bb:	xor    al,0x2e
  4057bd:	cmp    DWORD PTR [rsi],ebp
  4057bf:	xor    al,0x0
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    BYTE PTR [rdi+0x43],al
  4057d2:	rex.XB cmp spl,BYTE PTR [r8]
  4057d5:	sub    BYTE PTR [rdi+0x4e],al
  4057d8:	push   rbp
  4057d9:	sub    DWORD PTR [rax],esp
  4057db:	xor    al,0x2e
  4057dd:	cmp    DWORD PTR [rsi],ebp
  4057df:	xor    al,0x0
	...
  4057ed:	add    BYTE PTR [rax],al
  4057ef:	add    BYTE PTR [rdi+0x43],al
  4057f2:	rex.XB cmp spl,BYTE PTR [r8]
  4057f5:	sub    BYTE PTR [rdi+0x4e],al
  4057f8:	push   rbp
  4057f9:	sub    DWORD PTR [rax],esp
  4057fb:	xor    al,0x2e
  4057fd:	cmp    DWORD PTR [rsi],ebp
  4057ff:	xor    al,0x0
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rdi+0x43],al
  405812:	rex.XB cmp spl,BYTE PTR [r8]
  405815:	sub    BYTE PTR [rdi+0x4e],al
  405818:	push   rbp
  405819:	sub    DWORD PTR [rax],esp
  40581b:	xor    al,0x2e
  40581d:	cmp    DWORD PTR [rsi],ebp
  40581f:	xor    al,0x0
	...
  40582d:	add    BYTE PTR [rax],al
  40582f:	add    BYTE PTR [rdi+0x43],al
  405832:	rex.XB cmp spl,BYTE PTR [r8]
  405835:	sub    BYTE PTR [rdi+0x4e],al
  405838:	push   rbp
  405839:	sub    DWORD PTR [rax],esp
  40583b:	xor    al,0x2e
  40583d:	cmp    DWORD PTR [rsi],ebp
  40583f:	xor    al,0x0
	...
  40584d:	add    BYTE PTR [rax],al
  40584f:	add    BYTE PTR [rdi+0x43],al
  405852:	rex.XB cmp spl,BYTE PTR [r8]
  405855:	sub    BYTE PTR [rdi+0x4e],al
  405858:	push   rbp
  405859:	sub    DWORD PTR [rax],esp
  40585b:	xor    al,0x2e
  40585d:	cmp    DWORD PTR [rsi],ebp
  40585f:	xor    al,0x0
	...
  40586d:	add    BYTE PTR [rax],al
  40586f:	add    BYTE PTR [rdi+0x43],al
  405872:	rex.XB cmp spl,BYTE PTR [r8]
  405875:	sub    BYTE PTR [rdi+0x4e],al
  405878:	push   rbp
  405879:	sub    DWORD PTR [rax],esp
  40587b:	xor    al,0x2e
  40587d:	cmp    DWORD PTR [rsi],ebp
  40587f:	xor    al,0x0
	...
  40588d:	add    BYTE PTR [rax],al
  40588f:	add    BYTE PTR [rdi+0x43],al
  405892:	rex.XB cmp spl,BYTE PTR [r8]
  405895:	sub    BYTE PTR [rdi+0x4e],al
  405898:	push   rbp
  405899:	sub    DWORD PTR [rax],esp
  40589b:	xor    al,0x2e
  40589d:	cmp    DWORD PTR [rsi],ebp
  40589f:	xor    al,0x0
	...
  4058ad:	add    BYTE PTR [rax],al
  4058af:	add    BYTE PTR [rdi+0x43],al
  4058b2:	rex.XB cmp spl,BYTE PTR [r8]
  4058b5:	sub    BYTE PTR [rdi+0x4e],al
  4058b8:	push   rbp
  4058b9:	sub    DWORD PTR [rax],esp
  4058bb:	xor    al,0x2e
  4058bd:	cmp    DWORD PTR [rsi],ebp
  4058bf:	xor    al,0x0
	...
  4058cd:	add    BYTE PTR [rax],al
  4058cf:	add    BYTE PTR [rdi+0x43],al
  4058d2:	rex.XB cmp spl,BYTE PTR [r8]
  4058d5:	sub    BYTE PTR [rdi+0x4e],al
  4058d8:	push   rbp
  4058d9:	sub    DWORD PTR [rax],esp
  4058db:	xor    al,0x2e
  4058dd:	cmp    DWORD PTR [rsi],ebp
  4058df:	xor    al,0x0
	...
  4058ed:	add    BYTE PTR [rax],al
  4058ef:	add    BYTE PTR [rdi+0x43],al
  4058f2:	rex.XB cmp spl,BYTE PTR [r8]
  4058f5:	sub    BYTE PTR [rdi+0x4e],al
  4058f8:	push   rbp
  4058f9:	sub    DWORD PTR [rax],esp
  4058fb:	xor    al,0x2e
  4058fd:	cmp    DWORD PTR [rsi],ebp
  4058ff:	xor    al,0x0
	...
  40590d:	add    BYTE PTR [rax],al
  40590f:	add    BYTE PTR [rdi+0x43],al
  405912:	rex.XB cmp spl,BYTE PTR [r8]
  405915:	sub    BYTE PTR [rdi+0x4e],al
  405918:	push   rbp
  405919:	sub    DWORD PTR [rax],esp
  40591b:	xor    al,0x2e
  40591d:	cmp    DWORD PTR [rsi],ebp
  40591f:	xor    al,0x0
	...
  40592d:	add    BYTE PTR [rax],al
  40592f:	add    BYTE PTR [rdi+0x43],al
  405932:	rex.XB cmp spl,BYTE PTR [r8]
  405935:	sub    BYTE PTR [rdi+0x4e],al
  405938:	push   rbp
  405939:	sub    DWORD PTR [rax],esp
  40593b:	xor    al,0x2e
  40593d:	cmp    DWORD PTR [rsi],ebp
  40593f:	xor    al,0x0
	...
  40594d:	add    BYTE PTR [rax],al
  40594f:	add    BYTE PTR [rdi+0x43],al
  405952:	rex.XB cmp spl,BYTE PTR [r8]
  405955:	sub    BYTE PTR [rdi+0x4e],al
  405958:	push   rbp
  405959:	sub    DWORD PTR [rax],esp
  40595b:	xor    al,0x2e
  40595d:	cmp    DWORD PTR [rsi],ebp
  40595f:	xor    al,0x0
	...
  40596d:	add    BYTE PTR [rax],al
  40596f:	add    BYTE PTR [rdi+0x43],al
  405972:	rex.XB cmp spl,BYTE PTR [r8]
  405975:	sub    BYTE PTR [rdi+0x4e],al
  405978:	push   rbp
  405979:	sub    DWORD PTR [rax],esp
  40597b:	xor    al,0x2e
  40597d:	cmp    DWORD PTR [rsi],ebp
  40597f:	xor    al,0x0
	...
  40598d:	add    BYTE PTR [rax],al
  40598f:	add    BYTE PTR [rdi+0x43],al
  405992:	rex.XB cmp spl,BYTE PTR [r8]
  405995:	sub    BYTE PTR [rdi+0x4e],al
  405998:	push   rbp
  405999:	sub    DWORD PTR [rax],esp
  40599b:	xor    al,0x2e
  40599d:	cmp    DWORD PTR [rsi],ebp
  40599f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x16030000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0x10000070
  406055:	(bad)  
  406056:	add    BYTE PTR [rax],al
  406058:	xchg   BYTE PTR [rdi],dl
  40605a:	add    BYTE PTR [rax],al
  40605c:	je     0x4060ce
  40605e:	add    BYTE PTR [rax],al
  406060:	rcl    BYTE PTR [rdi],1
  406062:	add    BYTE PTR [rax],al
  406064:	ja     0x40607e
  406066:	add    BYTE PTR [rax],al
  406068:	pushf  
  406069:	jo     0x40606b
  40606b:	add    BYTE PTR [rax-0x66ffffe8],al
  406071:	sbb    BYTE PTR [rax],al
  406073:	add    BYTE PTR [rax+rsi*2+0x18a00000],ah
  40607a:	add    BYTE PTR [rax],al
  40607c:	(bad)  
  40607d:	sbb    BYTE PTR [rax],al
  40607f:	add    BYTE PTR [rax+rsi*2+0x18e00000],ch
  406086:	add    BYTE PTR [rax],al
  406088:	xor    eax,0xb4000019
  40608d:	jo     0x40608f
  40608f:	add    BYTE PTR [rax+0x19],al
  406092:	add    BYTE PTR [rax],al
  406094:	pop    rsp
  406095:	sbb    DWORD PTR [rax],eax
  406097:	add    al,al
  406099:	jo     0x40609b
  40609b:	add    BYTE PTR [rax+0x19],ah
  40609e:	add    BYTE PTR [rax],al
  4060a0:	push   0x19
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	(bad)  
  4060a5:	jo     0x4060a7
  4060a7:	add    BYTE PTR [rax+0x19],dh
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	jae    0x4060c7
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	enter  0x70,0x0
  4060b4:	sbb    BYTE PTR [rcx],0x0
  4060b7:	add    BYTE PTR [rsi+0x1a],dl
  4060ba:	add    BYTE PTR [rax],al
  4060bc:	int3   
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax+0x1a],ah
  4060c2:	add    BYTE PTR [rax],al
  4060c4:	pop    rbx
  4060c5:	sbb    eax,DWORD PTR [rax]
  4060c7:	add    ah,bl
  4060c9:	jo     0x4060cb
  4060cb:	add    BYTE PTR [rax+0x1b],ah
  4060ce:	add    BYTE PTR [rax],al
  4060d0:	(bad)  
  4060d1:	sbb    eax,DWORD PTR [rax]
  4060d3:	add    ah,ch
  4060d5:	jo     0x4060d7
  4060d7:	add    BYTE PTR [rax-0x6ffffe5],dl
  4060dd:	sbb    eax,DWORD PTR [rax]
  4060df:	add    ah,dh
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax],al
  4060e5:	sbb    al,0x0
  4060e7:	add    BYTE PTR [rbx],al
  4060e9:	sbb    al,0x0
  4060eb:	add    BYTE PTR [rax],al
  4060ed:	jno    0x4060ef
  4060ef:	add    BYTE PTR [rax],dl
  4060f1:	sbb    al,0x0
  4060f3:	add    BYTE PTR [rcx+0x1c],dl
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	add    al,0x71
  4060fa:	add    BYTE PTR [rax],al
  4060fc:	(bad)  
  4060fd:	sbb    al,0x0
  4060ff:	add    BYTE PTR [rsp+rbx*1+0x0],ch
  406103:	add    BYTE PTR [rcx+rsi*2],cl
  406106:	add    BYTE PTR [rax],al
  406108:	jo     0x406126
  40610a:	add    BYTE PTR [rax],al
  40610c:	ins    BYTE PTR es:[rdi],dx
  40610d:	sbb    eax,0x71100000
  406112:	add    BYTE PTR [rax],al
  406114:	jo     0x406133
  406116:	add    BYTE PTR [rax],al
  406118:	jae    0x406137
  40611a:	add    BYTE PTR [rax],al
  40611c:	sub    BYTE PTR [rcx+0x0],dh
  40611f:	add    BYTE PTR [rax-0x7bffffe3],al
  406125:	sbb    eax,0x712c0000
  40612a:	add    BYTE PTR [rax],al
  40612c:	nop
  40612d:	sbb    eax,0x1d940000
  406132:	add    BYTE PTR [rax],al
  406134:	xor    BYTE PTR [rcx+0x0],dh
  406137:	add    BYTE PTR [rax+0x100001d],ah
  40613d:	(bad)  
  40613e:	add    BYTE PTR [rax],al
  406140:	xor    al,0x71
  406142:	add    BYTE PTR [rax],al
  406144:	adc    BYTE PTR [rsi],bl
  406146:	add    BYTE PTR [rax],al
  406148:	jb     0x406169
  40614a:	add    BYTE PTR [rax],al
  40614c:	rex jno 0x40614f
  40614f:	add    BYTE PTR [rax+0x7900001f],al
  406155:	and    al,BYTE PTR [rax]
  406157:	add    BYTE PTR [rcx+rsi*2+0x0],dl
  40615b:	add    BYTE PTR [rax+0x26000022],al
  406161:	and    al,0x0
  406163:	add    BYTE PTR [rcx+rsi*2+0x0],ch
  406167:	add    BYTE PTR [rax],dh
  406169:	and    al,0x0
  40616b:	add    BYTE PTR ds:0x71740000,bl
  406172:	add    BYTE PTR [rax],al
  406174:	and    BYTE PTR [rip+0x26d80000],ah        # 0x2718617a
  40617a:	add    BYTE PTR [rax],al
  40617c:	test   BYTE PTR [rcx+0x0],dh
  40617f:	add    al,ah
  406181:	add    BYTE PTR es:[rax],al
  406184:	rex.WRB (bad) 
  406186:	add    BYTE PTR [rax],al
  406188:	mov    WORD PTR [rcx+0x0],?
  40618b:	add    BYTE PTR [rax+0x27],dl
  40618e:	add    BYTE PTR [rax],al
  406190:	iret   
  406191:	(bad)  
  406192:	add    BYTE PTR [rax],al
  406194:	pushf  
  406195:	jno    0x406197
  406197:	add    al,dl
  406199:	(bad)  
  40619a:	add    BYTE PTR [rax],al
  40619c:	outs   dx,DWORD PTR ds:[rsi]
  40619d:	sub    BYTE PTR [rax],al
  40619f:	add    BYTE PTR [rax+0x70000071],ch
  4061a5:	sub    BYTE PTR [rax],al
  4061a7:	add    BYTE PTR [rdx+0x29],cl
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	mov    al,0x71
  4061ae:	add    BYTE PTR [rax],al
  4061b0:	push   rax
  4061b1:	sub    DWORD PTR [rax],eax
  4061b3:	add    BYTE PTR [rdi+0x29],ch
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	mov    eax,0x70000071
  4061bd:	sub    DWORD PTR [rax],eax
  4061bf:	add    BYTE PTR [rdx-0x43ffffd7],al
  4061c5:	jno    0x4061c7
  4061c7:	add    BYTE PTR [rax-0x2affffd7],dl
  4061cd:	sub    DWORD PTR [rax],eax
  4061cf:	add    al,al
  4061d1:	jno    0x4061d3
  4061d3:	add    al,ah
  4061d5:	sub    DWORD PTR [rax],eax
  4061d7:	add    BYTE PTR [rsi+0x2a],bh
  4061da:	add    BYTE PTR [rax],al
  4061dc:	(bad)  
  4061dd:	jno    0x4061df
  4061df:	add    BYTE PTR [rax-0x3cffffd6],al
  4061e5:	sub    al,BYTE PTR [rax]
  4061e7:	add    al,dl
  4061e9:	jno    0x4061eb
  4061eb:	add    al,dl
  4061ed:	sub    al,BYTE PTR [rax]
  4061ef:	add    BYTE PTR [rbx],cl
  4061f1:	sub    eax,DWORD PTR [rax]
  4061f3:	add    ah,bl
  4061f5:	jno    0x4061f7
  4061f7:	add    BYTE PTR [rax],dl
  4061f9:	sub    eax,DWORD PTR [rax]
  4061fb:	add    BYTE PTR [rsi-0x1bffffd5],bl
  406201:	jno    0x406203
  406203:	add    BYTE PTR [rax-0x27ffffd5],ah
  406209:	sub    eax,DWORD PTR [rax]
  40620b:	add    al,dh
  40620d:	jno    0x40620f
  40620f:	add    al,ah
  406211:	sub    eax,DWORD PTR [rax]
  406213:	add    BYTE PTR [rip+0xfffffffffc00002c],dh        # 0xfffffffffc406245
  406219:	jno    0x40621b
  40621b:	add    BYTE PTR [rax+0x2c],al
  40621e:	add    BYTE PTR [rax],al
  406220:	out    dx,al
  406221:	sub    al,0x0
  406223:	add    BYTE PTR [rax],cl
  406225:	jb     0x406227
  406227:	add    BYTE PTR [rax],dl
  406229:	add    BYTE PTR cs:[rax],al
  40622c:	sbb    BYTE PTR [rsi],ch
  40622e:	add    BYTE PTR [rax],al
  406230:	sbb    BYTE PTR [rdx+0x0],dh
  406233:	add    BYTE PTR [rax],ah
  406235:	add    BYTE PTR cs:[rax],al
  406238:	sub    ebp,DWORD PTR [rsi]
  40623a:	add    BYTE PTR [rax],al
  40623c:	sbb    al,0x72
  40623e:	add    BYTE PTR [rax],al
  406240:	lock add BYTE PTR cs:[rax],al
  406244:	xor    al,BYTE PTR ss:[rax]
  406247:	.byte 0x0
  406248:	test   BYTE PTR [rax+0x0],dh
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	or     BYTE PTR [rsi],ch
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	(bad)  
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax],ah
  407041:	and    eax,0x14ec0000
  407046:	add    BYTE PTR [rax],al
  407048:	or     DWORD PTR [rcx+rax*1],eax
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	or     BYTE PTR [rsi],ch
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	add    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	sbb    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	and    BYTE PTR [rip+0x151c0000],ah        # 0x155c7066
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rsi],eax
  40706a:	add    eax,DWORD PTR [rax]
  40706c:	(bad)  
  40706d:	rex.X add sil,BYTE PTR [rax]
  407070:	add    DWORD PTR [rax+0x0],esp
  407073:	add    BYTE PTR [rcx],al
  407075:	or     al,BYTE PTR [rsi]
  407077:	add    BYTE PTR [rdx],cl
  407079:	push   rdx
  40707a:	(bad)  
  40707b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b074e1
  407081:	push   rax
  407082:	add    al,al
  407084:	add    DWORD PTR [rax],edx
  407086:	or     DWORD PTR [rax],eax
  407088:	adc    BYTE PTR [rdx+0x600b300c],al
  40708e:	or     dh,BYTE PTR [rax+0x9]
  407091:	push   rax
  407092:	or     al,al
  407094:	(bad)  
  407095:	rol    BYTE PTR [rax+riz*8],1
  407098:	add    dh,al
  40709a:	add    BYTE PTR [rax],al
  40709c:	add    DWORD PTR [rip+0x52050002],eax        # 0x524570a4
  4070a2:	add    DWORD PTR [rax],esi
  4070a4:	add    DWORD PTR [rcx+rax*1],eax
  4070a7:	add    BYTE PTR [rdx+rax*2],al
  4070aa:	add    BYTE PTR [rax],al
  4070ac:	add    DWORD PTR [rcx+rax*1],eax
  4070af:	add    BYTE PTR [rdx+rax*2],al
  4070b2:	add    BYTE PTR [rax],al
  4070b4:	add    DWORD PTR [rsi],eax
  4070b6:	add    eax,DWORD PTR [rax]
  4070b8:	(bad)  
  4070b9:	rex.X add sil,BYTE PTR [rax]
  4070bc:	add    DWORD PTR [rax+0x0],esp
  4070bf:	add    BYTE PTR [rcx],al
  4070c1:	add    BYTE PTR [rax],al
  4070c3:	add    BYTE PTR [rcx],al
  4070c5:	add    BYTE PTR [rax],al
  4070c7:	add    BYTE PTR [rcx],al
  4070c9:	add    BYTE PTR [rax],al
  4070cb:	add    BYTE PTR [rcx],al
  4070cd:	or     al,BYTE PTR [rsi]
  4070cf:	add    BYTE PTR [rdx],cl
  4070d1:	jb     0x4070d9
  4070d3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07539
  4070d9:	push   rax
  4070da:	add    al,al
  4070dc:	add    DWORD PTR [rdx],ecx
  4070de:	add    eax,0x6d20a05
  4070e3:	add    eax,DWORD PTR [rbx]
  4070e5:	xor    BYTE PTR [rdx],al
  4070e7:	(bad)  
  4070e8:	add    DWORD PTR [rax+0x0],edx
  4070eb:	add    BYTE PTR [rcx],al
  4070ed:	add    al,0x1
  4070ef:	add    BYTE PTR [rdx+rax*2],al
  4070f2:	add    BYTE PTR [rax],al
  4070f4:	add    DWORD PTR [rsi],eax
  4070f6:	add    eax,DWORD PTR [rax]
  4070f8:	(bad)  
  4070f9:	rex.X add sil,BYTE PTR [rax]
  4070fc:	add    DWORD PTR [rax+0x0],esp
  4070ff:	add    BYTE PTR [rcx],al
  407101:	add    BYTE PTR [rax],al
  407103:	add    BYTE PTR [rcx],al
  407105:	add    al,0x1
  407107:	add    BYTE PTR [rdx+riz*4],al
  40710a:	add    BYTE PTR [rax],al
  40710c:	add    DWORD PTR [rax],eax
  40710e:	add    BYTE PTR [rax],al
  407110:	add    DWORD PTR [rsi],edx
  407112:	or     DWORD PTR [rax],eax
  407114:	(bad)  
  407115:	mov    BYTE PTR [rsi],al
  407117:	add    BYTE PTR [rax],dl
  407119:	js     0x407120
  40711b:	add    BYTE PTR [rbx],cl
  40711d:	push   0xffffffffe2060004
  407122:	add    dh,BYTE PTR [rax]
  407124:	add    DWORD PTR [rax+0x0],esp
  407127:	add    BYTE PTR [rcx],al
  407129:	add    BYTE PTR [rax],al
  40712b:	add    BYTE PTR [rcx],al
  40712d:	add    BYTE PTR [rax],al
  40712f:	add    BYTE PTR [rcx],al
  407131:	add    BYTE PTR [rax],al
  407133:	add    BYTE PTR [rcx],al
  407135:	(bad)  
  407136:	add    eax,DWORD PTR [rax]
  407138:	(bad)  
  407139:	(bad)  
  40713b:	xor    BYTE PTR [rcx],al
  40713d:	(bad)  
  40713e:	add    BYTE PTR [rax],al
  407140:	add    DWORD PTR [rdi+rax*1],ecx
  407143:	add    BYTE PTR [rdx+riz*4],cl
  407146:	or     BYTE PTR [rax],dh
  407148:	(bad)  
  407149:	(bad)  
  40714a:	(bad)  
  40714b:	jo     0x407152
  40714d:	push   rax
  40714e:	add    al,0xc0
  407150:	add    dl,al
  407152:	add    BYTE PTR [rax],al
  407154:	add    DWORD PTR [rcx],edx
  407156:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e236d
  40715c:	or     dh,BYTE PTR [rax]
  40715e:	or     DWORD PTR [rax+0x8],esp
  407161:	jo     0x40716a
  407163:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220753a
  40716a:	add    BYTE PTR [rax],al
  40716c:	add    DWORD PTR [rcx+rax*1],eax
  40716f:	add    BYTE PTR [rdx+rax*2],al
  407172:	add    BYTE PTR [rax],al
  407174:	add    DWORD PTR [rdx],ecx
  407176:	(bad)  
  407177:	add    BYTE PTR [rdx],cl
  407179:	xor    al,BYTE PTR [rsi]
  40717b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075e1
  407181:	push   rax
  407182:	add    al,al
  407184:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245718c
  40718a:	add    DWORD PTR [rax],esi
  40718c:	add    DWORD PTR [rax],ecx
  40718e:	add    eax,0x4420800
  407193:	xor    BYTE PTR [rbx],al
  407195:	(bad)  
  407196:	add    dh,BYTE PTR [rax+0x1]
  407199:	push   rax
  40719a:	add    BYTE PTR [rax],al
  40719c:	add    DWORD PTR [rdi],eax
  40719e:	add    al,0x0
  4071a0:	(bad)  
  4071a1:	xor    al,BYTE PTR [rbx]
  4071a3:	xor    BYTE PTR [rdx],al
  4071a5:	(bad)  
  4071a6:	add    DWORD PTR [rax+0x1],esi
  4071a9:	add    eax,0x32050002
  4071ae:	add    DWORD PTR [rax],esi
  4071b0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571b8
  4071b6:	add    DWORD PTR [rax],esi
  4071b8:	add    DWORD PTR [rax],eax
  4071ba:	add    BYTE PTR [rax],al
  4071bc:	add    DWORD PTR [rax],eax
  4071be:	add    BYTE PTR [rax],al
  4071c0:	add    DWORD PTR [rax],eax
  4071c2:	add    BYTE PTR [rax],al
  4071c4:	add    DWORD PTR [rdi],eax
  4071c6:	add    al,0x0
  4071c8:	(bad)  
  4071c9:	xor    al,BYTE PTR [rbx]
  4071cb:	xor    BYTE PTR [rdx],al
  4071cd:	(bad)  
  4071ce:	add    DWORD PTR [rax+0x1],esi
  4071d1:	(bad)  
  4071d2:	add    eax,DWORD PTR [rax]
  4071d4:	(bad)  
  4071d5:	rex.X add sil,BYTE PTR [rax]
  4071d8:	add    DWORD PTR [rax+0x0],esp
  4071db:	add    BYTE PTR [rcx],al
  4071dd:	add    eax,0x32050002
  4071e2:	add    DWORD PTR [rax],esi
  4071e4:	add    DWORD PTR [rdi],eax
  4071e6:	add    al,0x0
  4071e8:	(bad)  
  4071e9:	xor    al,BYTE PTR [rbx]
  4071eb:	xor    BYTE PTR [rdx],al
  4071ed:	(bad)  
  4071ee:	add    DWORD PTR [rax+0x1],esi
  4071f1:	(bad)  
  4071f2:	add    eax,DWORD PTR [rax]
  4071f4:	(bad)  
  4071f5:	rex.X add sil,BYTE PTR [rax]
  4071f8:	add    DWORD PTR [rax+0x0],esp
  4071fb:	add    BYTE PTR [rcx],al
  4071fd:	(bad)  
  4071fe:	add    eax,DWORD PTR [rax]
  407200:	(bad)  
  407201:	rex.X add sil,BYTE PTR [rax]
  407204:	add    DWORD PTR [rax+0x0],esp
  407207:	add    BYTE PTR [rcx],al
  407209:	or     BYTE PTR [rip+0x4420800],al        # 0x4827a0f
  40720f:	xor    BYTE PTR [rbx],al
  407211:	(bad)  
  407212:	add    dh,BYTE PTR [rax+0x1]
  407215:	push   rax
  407216:	add    BYTE PTR [rax],al
  407218:	add    DWORD PTR [rax],eax
  40721a:	add    BYTE PTR [rax],al
  40721c:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	fs nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	push   0x74000098
  409011:	xchg   edx,eax
  409012:	add    BYTE PTR [rax],al
  409014:	test   BYTE PTR [rax+0x0],dl
  40901a:	add    BYTE PTR [rax],al
  40901c:	add    BYTE PTR [rax],al
  40901e:	add    BYTE PTR [rax],al
  409020:	xchg   esp,eax
  409021:	cwde   
  409022:	add    BYTE PTR [rax],al
  409024:	xchg   esp,eax
  409025:	xchg   edx,eax
  409026:	add    BYTE PTR [rax],al
  409028:	mov    ah,0x90
	...
  409032:	add    BYTE PTR [rax],al
  409034:	add    al,0x99
  409036:	add    BYTE PTR [rax],al
  409038:	(bad)  
  409039:	xchg   edx,eax
  40903a:	add    BYTE PTR [rax],al
  40903c:	je     0x408fcf
	...
  409046:	add    BYTE PTR [rax],al
  409048:	nop
  409049:	cdq    
  40904a:	add    BYTE PTR [rax],al
  40904c:	test   BYTE PTR [rbx+0x0],dl
	...
  409062:	add    BYTE PTR [rax],al
  409064:	test   BYTE PTR [rax+rax*1+0x0],dl
  40906b:	add    BYTE PTR [rax+0x94],bl
  409071:	add    BYTE PTR [rax],al
  409073:	add    BYTE PTR [rsp+rdx*4+0x0],ch
	...
  409082:	add    BYTE PTR [rax],al
  409084:	mov    esp,0x94
  409089:	add    BYTE PTR [rax],al
  40908b:	add    al,cl
  40908d:	xchg   esp,eax
  40908e:	add    BYTE PTR [rax],al
  409090:	add    BYTE PTR [rax],al
  409092:	add    BYTE PTR [rax],al
  409094:	(bad)  
  409095:	xchg   esp,eax
  409096:	add    BYTE PTR [rax],al
  409098:	add    BYTE PTR [rax],al
  40909a:	add    BYTE PTR [rax],al
  40909c:	lock xchg esp,eax
  40909e:	add    BYTE PTR [rax],al
  4090a0:	add    BYTE PTR [rax],al
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	cld    
  4090a5:	xchg   esp,eax
	...
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	or     al,0x95
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	add    BYTE PTR [rax],al
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	and    al,0x95
  4090be:	add    BYTE PTR [rax],al
  4090c0:	add    BYTE PTR [rax],al
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	cmp    al,0x95
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	add    BYTE PTR [rax],al
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	push   rax
  4090cd:	xchg   ebp,eax
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	add    BYTE PTR [rax],al
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	xchg   bp,ax
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	add    BYTE PTR [rax],al
  4090da:	add    BYTE PTR [rax],al
  4090dc:	jl     0x409073
  4090de:	add    BYTE PTR [rax],al
  4090e0:	add    BYTE PTR [rax],al
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	mov    WORD PTR [rbp+0x0],ss
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	sahf   
  4090ed:	xchg   ebp,eax
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	add    BYTE PTR [rax],al
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	mov    eax,0x95
  4090f9:	add    BYTE PTR [rax],al
  4090fb:	add    al,cl
  4090fd:	xchg   ebp,eax
  4090fe:	add    BYTE PTR [rax],al
  409100:	add    BYTE PTR [rax],al
  409102:	add    BYTE PTR [rax],al
  409104:	in     al,0x95
  409106:	add    BYTE PTR [rax],al
  409108:	add    BYTE PTR [rax],al
  40910a:	add    BYTE PTR [rax],al
  40910c:	cld    
  40910d:	xchg   ebp,eax
  40910e:	add    BYTE PTR [rax],al
  409110:	add    BYTE PTR [rax],al
  409112:	add    BYTE PTR [rax],al
  409114:	(bad)  
  409115:	xchg   esi,eax
  409116:	add    BYTE PTR [rax],al
  409118:	add    BYTE PTR [rax],al
  40911a:	add    BYTE PTR [rax],al
  40911c:	sub    al,0x96
  40911e:	add    BYTE PTR [rax],al
  409120:	add    BYTE PTR [rax],al
  409122:	add    BYTE PTR [rax],al
  409124:	rex xchg esi,eax
  409126:	add    BYTE PTR [rax],al
  409128:	add    BYTE PTR [rax],al
  40912a:	add    BYTE PTR [rax],al
  40912c:	pop    rdx
  40912d:	xchg   esi,eax
  40912e:	add    BYTE PTR [rax],al
  409130:	add    BYTE PTR [rax],al
  409132:	add    BYTE PTR [rax],al
  409134:	outs   dx,BYTE PTR ds:[rsi]
  409135:	xchg   esi,eax
  409136:	add    BYTE PTR [rax],al
  409138:	add    BYTE PTR [rax],al
  40913a:	add    BYTE PTR [rax],al
  40913c:	mov    WORD PTR [rsi+0x0],ss
  409142:	add    BYTE PTR [rax],al
  409144:	xchg   esp,eax
  409145:	xchg   esi,eax
  409146:	add    BYTE PTR [rax],al
  409148:	add    BYTE PTR [rax],al
  40914a:	add    BYTE PTR [rax],al
  40914c:	test   al,0x96
  40914e:	add    BYTE PTR [rax],al
  409150:	add    BYTE PTR [rax],al
  409152:	add    BYTE PTR [rax],al
  409154:	mov    dh,0x96
  409156:	add    BYTE PTR [rax],al
  409158:	add    BYTE PTR [rax],al
  40915a:	add    BYTE PTR [rax],al
  40915c:	rcl    BYTE PTR [rsi+0x0],cl
  409162:	add    BYTE PTR [rax],al
  409164:	in     al,0x96
	...
  409172:	add    BYTE PTR [rax],al
  409174:	hlt    
  409175:	xchg   esi,eax
  409176:	add    BYTE PTR [rax],al
  409178:	add    BYTE PTR [rax],al
  40917a:	add    BYTE PTR [rax],al
  40917c:	or     al,0x97
  40917e:	add    BYTE PTR [rax],al
  409180:	add    BYTE PTR [rax],al
  409182:	add    BYTE PTR [rax],al
  409184:	sbb    dl,BYTE PTR [rdi+0x0]
  40918a:	add    BYTE PTR [rax],al
  40918c:	sub    dl,BYTE PTR [rdi+0x0]
  409192:	add    BYTE PTR [rax],al
  409194:	ss xchg edi,eax
  409196:	add    BYTE PTR [rax],al
  409198:	add    BYTE PTR [rax],al
  40919a:	add    BYTE PTR [rax],al
  40919c:	rex.R xchg edi,eax
  40919e:	add    BYTE PTR [rax],al
  4091a0:	add    BYTE PTR [rax],al
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	push   rsp
  4091a5:	xchg   edi,eax
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	add    BYTE PTR [rax],al
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	xchg   di,ax
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	add    BYTE PTR [rax],al
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	jp     0x40914d
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	add    BYTE PTR [rax],al
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	test   BYTE PTR [rdi+0x0],dl
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	xchg   edx,eax
  4091c5:	xchg   edi,eax
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	add    BYTE PTR [rax],al
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	pushf  
  4091cd:	xchg   edi,eax
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	add    BYTE PTR [rax],al
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4091d5:	xchg   edi,eax
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	add    BYTE PTR [rax],al
  4091da:	add    BYTE PTR [rax],al
  4091dc:	mov    dl,0x97
  4091de:	add    BYTE PTR [rax],al
  4091e0:	add    BYTE PTR [rax],al
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	mov    edx,0x97
  4091e9:	add    BYTE PTR [rax],al
  4091eb:	add    ah,al
  4091ed:	xchg   edi,eax
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	add    BYTE PTR [rax],al
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	(bad)  
  4091f5:	xchg   edi,eax
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	add    BYTE PTR [rax],al
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	(bad)  
  4091fd:	xchg   edi,eax
  4091fe:	add    BYTE PTR [rax],al
  409200:	add    BYTE PTR [rax],al
  409202:	add    BYTE PTR [rax],al
  409204:	ficom  WORD PTR [rdi+0x0]
  40920a:	add    BYTE PTR [rax],al
  40920c:	call   0x4092a8
  409211:	add    BYTE PTR [rax],al
  409213:	add    al,dh
  409215:	xchg   edi,eax
  409216:	add    BYTE PTR [rax],al
  409218:	add    BYTE PTR [rax],al
  40921a:	add    BYTE PTR [rax],al
  40921c:	cli    
  40921d:	xchg   edi,eax
  40921e:	add    BYTE PTR [rax],al
  409220:	add    BYTE PTR [rax],al
  409222:	add    BYTE PTR [rax],al
  409224:	add    bl,BYTE PTR [rax+0x0]
  40922a:	add    BYTE PTR [rax],al
  40922c:	or     bl,BYTE PTR [rax+0x0]
  409232:	add    BYTE PTR [rax],al
  409234:	adc    al,0x98
  409236:	add    BYTE PTR [rax],al
  409238:	add    BYTE PTR [rax],al
  40923a:	add    BYTE PTR [rax],al
  40923c:	(bad)  
  40923d:	cwde   
  40923e:	add    BYTE PTR [rax],al
  409240:	add    BYTE PTR [rax],al
  409242:	add    BYTE PTR [rax],al
  409244:	sub    BYTE PTR [rax+0x0],bl
  40924a:	add    BYTE PTR [rax],al
  40924c:	xor    bl,BYTE PTR [rax+0x0]
  409252:	add    BYTE PTR [rax],al
  409254:	cmp    al,0x98
  409256:	add    BYTE PTR [rax],al
  409258:	add    BYTE PTR [rax],al
  40925a:	add    BYTE PTR [rax],al
  40925c:	rex.RX cwde 
  40925e:	add    BYTE PTR [rax],al
  409260:	add    BYTE PTR [rax],al
  409262:	add    BYTE PTR [rax],al
  409264:	push   rax
  409265:	cwde   
	...
  409272:	add    BYTE PTR [rax],al
  409274:	test   BYTE PTR [rax+rax*1+0x0],dl
  40927b:	add    BYTE PTR [rax+0x94],bl
  409281:	add    BYTE PTR [rax],al
  409283:	add    BYTE PTR [rsp+rdx*4+0x0],ch
	...
  409292:	add    BYTE PTR [rax],al
  409294:	mov    esp,0x94
  409299:	add    BYTE PTR [rax],al
  40929b:	add    al,cl
  40929d:	xchg   esp,eax
  40929e:	add    BYTE PTR [rax],al
  4092a0:	add    BYTE PTR [rax],al
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	(bad)  
  4092a5:	xchg   esp,eax
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	add    BYTE PTR [rax],al
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	lock xchg esp,eax
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	add    BYTE PTR [rax],al
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	cld    
  4092b5:	xchg   esp,eax
	...
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	or     al,0x95
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	add    BYTE PTR [rax],al
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	and    al,0x95
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	add    BYTE PTR [rax],al
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	cmp    al,0x95
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	add    BYTE PTR [rax],al
  4092da:	add    BYTE PTR [rax],al
  4092dc:	push   rax
  4092dd:	xchg   ebp,eax
  4092de:	add    BYTE PTR [rax],al
  4092e0:	add    BYTE PTR [rax],al
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	xchg   bp,ax
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	add    BYTE PTR [rax],al
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	jl     0x409283
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	add    BYTE PTR [rax],al
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	mov    WORD PTR [rbp+0x0],ss
  4092fa:	add    BYTE PTR [rax],al
  4092fc:	sahf   
  4092fd:	xchg   ebp,eax
  4092fe:	add    BYTE PTR [rax],al
  409300:	add    BYTE PTR [rax],al
  409302:	add    BYTE PTR [rax],al
  409304:	mov    eax,0x95
  409309:	add    BYTE PTR [rax],al
  40930b:	add    al,cl
  40930d:	xchg   ebp,eax
  40930e:	add    BYTE PTR [rax],al
  409310:	add    BYTE PTR [rax],al
  409312:	add    BYTE PTR [rax],al
  409314:	in     al,0x95
  409316:	add    BYTE PTR [rax],al
  409318:	add    BYTE PTR [rax],al
  40931a:	add    BYTE PTR [rax],al
  40931c:	cld    
  40931d:	xchg   ebp,eax
  40931e:	add    BYTE PTR [rax],al
  409320:	add    BYTE PTR [rax],al
  409322:	add    BYTE PTR [rax],al
  409324:	(bad)  
  409325:	xchg   esi,eax
  409326:	add    BYTE PTR [rax],al
  409328:	add    BYTE PTR [rax],al
  40932a:	add    BYTE PTR [rax],al
  40932c:	sub    al,0x96
  40932e:	add    BYTE PTR [rax],al
  409330:	add    BYTE PTR [rax],al
  409332:	add    BYTE PTR [rax],al
  409334:	rex xchg esi,eax
  409336:	add    BYTE PTR [rax],al
  409338:	add    BYTE PTR [rax],al
  40933a:	add    BYTE PTR [rax],al
  40933c:	pop    rdx
  40933d:	xchg   esi,eax
  40933e:	add    BYTE PTR [rax],al
  409340:	add    BYTE PTR [rax],al
  409342:	add    BYTE PTR [rax],al
  409344:	outs   dx,BYTE PTR ds:[rsi]
  409345:	xchg   esi,eax
  409346:	add    BYTE PTR [rax],al
  409348:	add    BYTE PTR [rax],al
  40934a:	add    BYTE PTR [rax],al
  40934c:	mov    WORD PTR [rsi+0x0],ss
  409352:	add    BYTE PTR [rax],al
  409354:	xchg   esp,eax
  409355:	xchg   esi,eax
  409356:	add    BYTE PTR [rax],al
  409358:	add    BYTE PTR [rax],al
  40935a:	add    BYTE PTR [rax],al
  40935c:	test   al,0x96
  40935e:	add    BYTE PTR [rax],al
  409360:	add    BYTE PTR [rax],al
  409362:	add    BYTE PTR [rax],al
  409364:	mov    dh,0x96
  409366:	add    BYTE PTR [rax],al
  409368:	add    BYTE PTR [rax],al
  40936a:	add    BYTE PTR [rax],al
  40936c:	rcl    BYTE PTR [rsi+0x0],cl
  409372:	add    BYTE PTR [rax],al
  409374:	in     al,0x96
	...
  409382:	add    BYTE PTR [rax],al
  409384:	hlt    
  409385:	xchg   esi,eax
  409386:	add    BYTE PTR [rax],al
  409388:	add    BYTE PTR [rax],al
  40938a:	add    BYTE PTR [rax],al
  40938c:	or     al,0x97
  40938e:	add    BYTE PTR [rax],al
  409390:	add    BYTE PTR [rax],al
  409392:	add    BYTE PTR [rax],al
  409394:	sbb    dl,BYTE PTR [rdi+0x0]
  40939a:	add    BYTE PTR [rax],al
  40939c:	sub    dl,BYTE PTR [rdi+0x0]
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	ss xchg edi,eax
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	add    BYTE PTR [rax],al
  4093aa:	add    BYTE PTR [rax],al
  4093ac:	rex.R xchg edi,eax
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	add    BYTE PTR [rax],al
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	push   rsp
  4093b5:	xchg   edi,eax
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	add    BYTE PTR [rax],al
  4093ba:	add    BYTE PTR [rax],al
  4093bc:	xchg   di,ax
  4093be:	add    BYTE PTR [rax],al
  4093c0:	add    BYTE PTR [rax],al
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	jp     0x40935d
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	add    BYTE PTR [rax],al
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	test   BYTE PTR [rdi+0x0],dl
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	xchg   edx,eax
  4093d5:	xchg   edi,eax
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	add    BYTE PTR [rax],al
  4093da:	add    BYTE PTR [rax],al
  4093dc:	pushf  
  4093dd:	xchg   edi,eax
  4093de:	add    BYTE PTR [rax],al
  4093e0:	add    BYTE PTR [rax],al
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4093e5:	xchg   edi,eax
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	add    BYTE PTR [rax],al
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	mov    dl,0x97
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	add    BYTE PTR [rax],al
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	mov    edx,0x97
  4093f9:	add    BYTE PTR [rax],al
  4093fb:	add    ah,al
  4093fd:	xchg   edi,eax
  4093fe:	add    BYTE PTR [rax],al
  409400:	add    BYTE PTR [rax],al
  409402:	add    BYTE PTR [rax],al
  409404:	(bad)  
  409405:	xchg   edi,eax
  409406:	add    BYTE PTR [rax],al
  409408:	add    BYTE PTR [rax],al
  40940a:	add    BYTE PTR [rax],al
  40940c:	(bad)  
  40940d:	xchg   edi,eax
  40940e:	add    BYTE PTR [rax],al
  409410:	add    BYTE PTR [rax],al
  409412:	add    BYTE PTR [rax],al
  409414:	ficom  WORD PTR [rdi+0x0]
  40941a:	add    BYTE PTR [rax],al
  40941c:	call   0x4094b8
  409421:	add    BYTE PTR [rax],al
  409423:	add    al,dh
  409425:	xchg   edi,eax
  409426:	add    BYTE PTR [rax],al
  409428:	add    BYTE PTR [rax],al
  40942a:	add    BYTE PTR [rax],al
  40942c:	cli    
  40942d:	xchg   edi,eax
  40942e:	add    BYTE PTR [rax],al
  409430:	add    BYTE PTR [rax],al
  409432:	add    BYTE PTR [rax],al
  409434:	add    bl,BYTE PTR [rax+0x0]
  40943a:	add    BYTE PTR [rax],al
  40943c:	or     bl,BYTE PTR [rax+0x0]
  409442:	add    BYTE PTR [rax],al
  409444:	adc    al,0x98
  409446:	add    BYTE PTR [rax],al
  409448:	add    BYTE PTR [rax],al
  40944a:	add    BYTE PTR [rax],al
  40944c:	(bad)  
  40944d:	cwde   
  40944e:	add    BYTE PTR [rax],al
  409450:	add    BYTE PTR [rax],al
  409452:	add    BYTE PTR [rax],al
  409454:	sub    BYTE PTR [rax+0x0],bl
  40945a:	add    BYTE PTR [rax],al
  40945c:	xor    bl,BYTE PTR [rax+0x0]
  409462:	add    BYTE PTR [rax],al
  409464:	cmp    al,0x98
  409466:	add    BYTE PTR [rax],al
  409468:	add    BYTE PTR [rax],al
  40946a:	add    BYTE PTR [rax],al
  40946c:	rex.RX cwde 
  40946e:	add    BYTE PTR [rax],al
  409470:	add    BYTE PTR [rax],al
  409472:	add    BYTE PTR [rax],al
  409474:	push   rax
  409475:	cwde   
	...
  409482:	add    BYTE PTR [rax],al
  409484:	adc    eax,0x745f6701
  409489:	jns    0x4094fb
  40948b:	gs pop rdi
  40948d:	movsxd ebp,DWORD PTR [rax+0x69]
  409490:	ins    BYTE PTR es:[rdi],dx
  409491:	fs jb  0x4094f9
  409494:	outs   dx,BYTE PTR ds:[rsi]
  409495:	add    BYTE PTR [rax],al
  409497:	add    BYTE PTR [rdi],ah
  409499:	add    DWORD PTR [rdi+0x5f],esp
  40949c:	je     0x409517
  40949e:	jo     0x409505
  4094a0:	pop    rdi
  4094a1:	data16 jb 0x409513
  4094a4:	ins    DWORD PTR es:[rdi],dx
  4094a5:	pop    rdi
  4094a6:	outs   dx,BYTE PTR ds:[rsi]
  4094a7:	(bad)  
  4094a8:	ins    DWORD PTR es:[rdi],dx
  4094a9:	add    BYTE PTR gs:[rax],al
  4094ac:	rex add DWORD PTR [rdi+0x5f],esp
  4094b0:	je     0x40952b
  4094b2:	jo     0x409519
  4094b4:	pop    rdi
  4094b5:	outs   dx,BYTE PTR ds:[rsi]
  4094b6:	(bad)  
  4094b7:	ins    DWORD PTR es:[rdi],dx
  4094b8:	add    BYTE PTR gs:[rax],al
  4094bb:	add    BYTE PTR [rcx+0x1],bh
  4094be:	addr32 pop rdi
  4094c0:	data16 jo 0x409535
  4094c3:	imul   ebp,DWORD PTR [rsi+0x74],0x17a0066
  4094ca:	addr32 pop rdi
  4094cc:	data16 jb 0x409534
  4094cf:	add    BYTE PTR gs:[rax],al
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	imul   eax,DWORD PTR [rdx],0x6f6c5f67
  4094da:	addr32 pop rdi
  4094dc:	jae    0x409543
  4094de:	je     0x40953f
  4094e0:	(bad)  
  4094e1:	ins    BYTE PTR es:[rdi],dx
  4094e2:	ja     0x409545
  4094e4:	jns    0x409559
  4094e6:	pop    rdi
  4094e7:	data16 (bad) 
  4094e9:	je     0x40954c
  4094eb:	ins    BYTE PTR es:[rdi],dx
  4094ec:	add    BYTE PTR [rax],al
  4094ee:	add    BYTE PTR [rax],al
  4094f0:	xchg   ebp,eax
  4094f1:	add    ah,BYTE PTR [rdi+0x5f]
  4094f4:	ins    DWORD PTR es:[rdi],dx
  4094f5:	(bad)  
  4094f6:	ins    BYTE PTR es:[rdi],dx
  4094f7:	ins    BYTE PTR es:[rdi],dx
  4094f8:	outs   dx,DWORD PTR ds:[rsi]
  4094f9:	movsxd eax,DWORD PTR [rax]
  4094fb:	add    BYTE PTR [rsp+rax*1+0x67],bh
  4094ff:	pop    rdi
  409500:	jae    0x409576
  409502:	jb     0x409567
  409504:	outs   dx,DWORD PTR ds:[rsi]
  409505:	outs   dx,BYTE PTR ds:[rsi]
  409506:	movsxd esp,DWORD PTR [rcx+0x74]
  409509:	add    BYTE PTR [rax],al
  40950b:	add    al,bl
  40950d:	add    BYTE PTR [rbp+riz*2+0x6c],al
  409511:	gs je  0x409579
  409514:	rex.XB jb 0x409580
  409517:	je     0x409582
  409519:	movsxd esp,DWORD PTR [rcx+0x6c]
  40951c:	push   rbx
  40951d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409522:	outs   dx,BYTE PTR ds:[rsi]
  409523:	add    al,bh
  409525:	add    BYTE PTR [rbp+0x6e],al
  409528:	je     0x40958f
  40952a:	jb     0x40956f
  40952c:	jb     0x409597
  40952e:	je     0x409599
  409530:	movsxd esp,DWORD PTR [rcx+0x6c]
  409533:	push   rbx
  409534:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409539:	outs   dx,BYTE PTR ds:[rsi]
  40953a:	add    BYTE PTR [rax],al
  40953c:	int    0x1
  40953e:	rex.RXB
  40953f:	gs je  0x409585
  409542:	jne    0x4095b6
  409544:	jb     0x4095ab
  409546:	outs   dx,BYTE PTR ds:[rsi]
  409547:	je     0x409599
  409549:	jb     0x4095ba
  40954b:	movsxd esp,DWORD PTR [rbp+0x73]
  40954e:	jae    0x409550
  409550:	(bad)  
  409551:	add    DWORD PTR [rdi+0x65],eax
  409554:	je     0x409599
  409556:	jne    0x4095ca
  409558:	jb     0x4095bf
  40955a:	outs   dx,BYTE PTR ds:[rsi]
  40955b:	je     0x4095ad
  40955d:	jb     0x4095ce
  40955f:	movsxd esp,DWORD PTR [rbp+0x73]
  409562:	jae    0x4095ad
  409564:	fs add dl,dl
  409567:	add    DWORD PTR [rdi+0x65],eax
  40956a:	je     0x4095af
  40956c:	jne    0x4095e0
  40956e:	jb     0x4095d5
  409570:	outs   dx,BYTE PTR ds:[rsi]
  409571:	je     0x4095c7
  409573:	push   0x64616572
  409578:	rex.WB
  409579:	add    BYTE PTR fs:[rax],al
  40957c:	adc    BYTE PTR [rdx],al
  40957e:	rex.RXB
  40957f:	gs je  0x4095ce
  409582:	(bad)  
  409583:	jae    0x4095f9
  409585:	rex.RB jb 0x4095fa
  409588:	outs   dx,DWORD PTR ds:[rsi]
  409589:	jb     0x40958b
  40958b:	add    BYTE PTR [rbx+0x2],dh
  40958e:	rex.RXB
  40958f:	gs je  0x4095e5
  409592:	je     0x4095f5
  409594:	jb     0x40960a
  409596:	jne    0x409608
  409598:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40959a:	outs   dx,WORD PTR ds:[rsi]
  40959c:	add    BYTE PTR [r10+0x74654702],cl
  4095a3:	push   rbx
  4095a4:	jns    0x409619
  4095a6:	je     0x40960d
  4095a8:	ins    DWORD PTR es:[rdi],dx
  4095a9:	push   rsp
  4095aa:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4095b1:	ins    BYTE PTR es:[rdi],dx
  4095b2:	gs push rsp
  4095b4:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4095bb:	gs je  0x409612
  4095be:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4095c5:	je     0x4095c7
  4095c7:	add    cl,bh
  4095c9:	add    cl,BYTE PTR [rcx+0x6e]
  4095cc:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4095d4:	rex.XB jb 0x409640
  4095d7:	je     0x409642
  4095d9:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095dc:	push   rbx
  4095dd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4095e2:	outs   dx,BYTE PTR ds:[rsi]
  4095e3:	add    BYTE PTR [rbx+0x3],cl
  4095e6:	rex.WR
  4095e7:	gs (bad) 
  4095e9:	jbe    0x409650
  4095eb:	rex.XB jb 0x409657
  4095ee:	je     0x409659
  4095f0:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095f3:	push   rbx
  4095f4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4095f9:	outs   dx,BYTE PTR ds:[rsi]
  4095fa:	add    BYTE PTR [rax],al
  4095fc:	mov    ebx,0x65755103
  409601:	jb     0x40967c
  409603:	push   rax
  409604:	gs jb  0x40966d
  409607:	outs   dx,DWORD PTR ds:[rsi]
  409608:	jb     0x409677
  40960a:	(bad)  
  40960b:	outs   dx,BYTE PTR ds:[rsi]
  40960c:	movsxd esp,DWORD PTR [rbp+0x43]
  40960f:	outs   dx,DWORD PTR ds:[rsi]
  409610:	jne    0x409680
  409612:	je     0x409679
  409614:	jb     0x409616
  409616:	add    DWORD PTR [rdx+rdx*2],eax
  409619:	je     0x409687
  40961b:	rex.B
  40961c:	fs fs rex.RX jne 0x40968f
  409621:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409625:	outs   dx,BYTE PTR ds:[rsi]
  409626:	push   rsp
  409627:	(bad)  
  409628:	(bad)  
  409629:	ins    BYTE PTR es:[rdi],dx
  40962a:	add    BYTE PTR gs:[rdx],al
  40962d:	add    al,0x52
  40962f:	je     0x40969d
  409631:	rex.XB (bad) 
  409633:	jo     0x4096a9
  409635:	jne    0x4096a9
  409637:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40963a:	outs   dx,BYTE PTR ds:[rsi]
  40963b:	je     0x4096a2
  40963d:	js     0x4096b3
  40963f:	add    BYTE PTR [rcx],cl
  409641:	add    al,0x52
  409643:	je     0x4096b1
  409645:	rex.WR outs dx,DWORD PTR ds:[rsi]
  409647:	outs   dx,DWORD PTR ds:[rsi]
  409648:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40964c:	jne    0x4096bc
  40964e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409652:	outs   dx,BYTE PTR ds:[rsi]
  409653:	rex.RB outs dx,BYTE PTR ds:[rsi]
  409655:	je     0x4096c9
  409657:	jns    0x409659
  409659:	add    BYTE PTR [rax],dl
  40965b:	add    al,0x52
  40965d:	je     0x4096cb
  40965f:	push   rsi
  409660:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  409667:	outs   dx,BYTE PTR ds:[rsi]
  409668:	ja     0x4096d3
  40966a:	outs   dx,BYTE PTR ds:[rsi]
  40966b:	add    BYTE PTR fs:[rax],al
  40966e:	lahf   
  40966f:	add    al,0x53
  409671:	gs je  0x4096c9
  409674:	outs   dx,BYTE PTR ds:[rsi]
  409675:	push   0x6c646e61
  40967a:	gs fs rex.RB js 0x4096e2
  40967f:	gs jo  0x4096f6
  409682:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409689:	gs jb  0x40968c
  40968c:	lods   al,BYTE PTR ds:[rsi]
  40968d:	add    al,0x53
  40968f:	ins    BYTE PTR es:[rdi],dx
  409690:	gs gs jo 0x409694
  409694:	mov    edx,0x72655404
  409699:	ins    DWORD PTR es:[rdi],dx
  40969a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4096a1:	outs   dx,DWORD PTR ds:[rsi]
  4096a2:	movsxd esp,DWORD PTR [rbp+0x73]
  4096a5:	jae    0x4096a7
  4096a7:	add    cl,al
  4096a9:	add    al,0x54
  4096ab:	ins    BYTE PTR es:[rdi],dx
  4096ac:	jae    0x4096f5
  4096ae:	gs je  0x409707
  4096b1:	(bad)  
  4096b2:	ins    BYTE PTR es:[rdi],dx
  4096b3:	jne    0x40971a
  4096b5:	add    dh,cl
  4096b7:	add    al,0x55
  4096b9:	outs   dx,BYTE PTR ds:[rsi]
  4096ba:	push   0x6c646e61
  4096bf:	gs fs rex.RB js 0x409727
  4096c4:	gs jo  0x40973b
  4096c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4096ce:	gs jb  0x4096d1
  4096d1:	add    ah,ch
  4096d3:	add    al,0x56
  4096d5:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4096dc:	jb     0x40974d
  4096de:	je     0x409745
  4096e0:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  4096e4:	out    dx,al
  4096e5:	add    al,0x56
  4096e7:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4096ee:	jne    0x409755
  4096f0:	jb     0x40976b
  4096f2:	add    BYTE PTR [rax],al
  4096f4:	(bad)  
  4096f5:	add    BYTE PTR [rdi+0x5f],bl
  4096f8:	rex.XB pop r15
  4096fa:	jae    0x40976c
  4096fc:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409700:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409707:	ins    BYTE PTR es:[rdi],dx
  409708:	gs jb  0x40970b
  40970b:	add    BYTE PTR [rsi+0x0],cl
  40970e:	pop    rdi
  40970f:	pop    rdi
  409710:	fs ins BYTE PTR es:[rdi],dx
  409712:	ins    BYTE PTR es:[rdi],dx
  409713:	outs   dx,DWORD PTR ds:[rsi]
  409714:	outs   dx,BYTE PTR ds:[rsi]
  409715:	gs js  0x409781
  409718:	je     0x40971a
  40971a:	push   rcx
  40971b:	add    BYTE PTR [rdi+0x5f],bl
  40971e:	addr32 gs je 0x40978f
  409722:	(bad)  
  409723:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40972a:	push   rdx
  40972b:	add    BYTE PTR [rdi+0x5f],bl
  40972e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  409735:	add    BYTE PTR [rbx+0x0],dl
  409738:	pop    rdi
  409739:	pop    rdi
  40973a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  409741:	movsxd eax,DWORD PTR [rax]
  409743:	add    BYTE PTR [rdx+0x0],bl
  409746:	pop    rdi
  409747:	pop    rdi
  409748:	ins    BYTE PTR es:[rdi],dx
  409749:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40974c:	jbe    0x4097ad
  40974e:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  409755:	add    BYTE PTR [rdi+0x5f],bl
  409758:	jae    0x4097bf
  40975a:	je     0x4097bb
  40975c:	(bad)  
  40975d:	jo     0x4097cf
  40975f:	pop    rdi
  409760:	je     0x4097db
  409762:	jo     0x4097c9
  409764:	add    BYTE PTR [rax],al
  409766:	(bad)  
  409767:	add    BYTE PTR [rdi+0x5f],bl
  40976a:	jae    0x4097d1
  40976c:	je     0x4097e3
  40976e:	jae    0x4097d5
  409770:	jb     0x4097df
  409772:	(bad)  
  409773:	je     0x4097dd
  409775:	gs jb  0x4097ea
  409778:	add    BYTE PTR [rax],al
  40977a:	jno    0x40977c
  40977c:	pop    rdi
  40977d:	(bad)  
  40977e:	movsxd ebp,DWORD PTR [rbp+0x64]
  409781:	ins    BYTE PTR es:[rdi],dx
  409782:	outs   dx,BYTE PTR ds:[rsi]
  409783:	add    BYTE PTR [rax+0x0],bh
  409786:	pop    rdi
  409787:	(bad)  
  409788:	ins    DWORD PTR es:[rdi],dx
  409789:	jae    0x4097f2
  40978b:	pop    rdi
  40978c:	gs js  0x4097f8
  40978f:	je     0x409791
  409791:	add    BYTE PTR [rdx+0x65635f00],cl
  409797:	js     0x409802
  409799:	je     0x40979b
  40979b:	add    dl,bl
  40979d:	add    BYTE PTR [rdi+0x66],bl
  4097a0:	ins    DWORD PTR es:[rdi],dx
  4097a1:	outs   dx,DWORD PTR ds:[rsi]
  4097a2:	fs add BYTE PTR gs:[rax],al
  4097a6:	sbb    al,BYTE PTR [rcx]
  4097a8:	pop    rdi
  4097a9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4097b0:	ins    DWORD PTR es:[rdi],dx
  4097b1:	add    BYTE PTR [rax+0x6f6c5f01],al
  4097b7:	movsxd ebp,DWORD PTR [rbx+0x0]
  4097ba:	and    eax,0x6e6f5f02
  4097bf:	gs js  0x40982b
  4097c2:	je     0x4097c4
  4097c4:	(bad)
  4097c8:	outs   dx,BYTE PTR ds:[rsi]
  4097c9:	ins    BYTE PTR es:[rdi],dx
  4097ca:	outs   dx,DWORD PTR ds:[rsi]
  4097cb:	movsxd ebp,DWORD PTR [rbx+0x0]
  4097ce:	jg     0x4097d3
  4097d0:	(bad)  
  4097d1:	(bad)  
  4097d2:	outs   dx,DWORD PTR ds:[rsi]
  4097d3:	jb     0x409849
  4097d5:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  4097dc:	add    BYTE PTR [rax],al
  4097de:	nop
  4097df:	add    esp,DWORD PTR [rbx+0x61]
  4097e2:	ins    BYTE PTR es:[rdi],dx
  4097e3:	ins    BYTE PTR es:[rdi],dx
  4097e4:	outs   dx,DWORD PTR ds:[rsi]
  4097e5:	movsxd eax,DWORD PTR [rax]
  4097e7:	add    BYTE PTR [rbp+0x69786503],bl
  4097ed:	je     0x4097ef
  4097ef:	add    BYTE PTR [rax+0x72706603],dh
  4097f5:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  4097fc:	data16 jo 0x409874
  4097ff:	je     0x409864
  409801:	add    BYTE PTR [rdi+0x65726603],dh
  409807:	add    BYTE PTR gs:[rax],al
  40980a:	ret    0x6603
  40980d:	ja     0x409881
  40980f:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  409817:	(bad)  
  409818:	ins    BYTE PTR es:[rdi],dx
  409819:	ins    BYTE PTR es:[rdi],dx
  40981a:	outs   dx,DWORD PTR ds:[rsi]
  40981b:	movsxd eax,DWORD PTR [rax]
  40981d:	add    al,bh
  40981f:	add    ebp,DWORD PTR [rbp+0x65]
  409822:	ins    DWORD PTR es:[rdi],dx
  409823:	movsxd esi,DWORD PTR [rax+0x79]
  409826:	add    BYTE PTR [rax],al
  409828:	(bad)  
  409829:	add    al,0x73
  40982b:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409832:	and    al,0x4
  409834:	jae    0x4098aa
  409836:	jb     0x40989b
  409838:	ins    DWORD PTR es:[rdi],dx
  409839:	jo     0x40983b
  40983b:	add    BYTE PTR [rbx],ch
  40983d:	add    al,0x73
  40983f:	je     0x4098b3
  409841:	ins    BYTE PTR es:[rdi],dx
  409842:	outs   dx,BYTE PTR gs:[rsi]
  409844:	add    BYTE PTR [rax],al
  409846:	cs add al,0x73
  409849:	je     0x4098bd
  40984b:	outs   dx,BYTE PTR ds:[rsi]
  40984c:	movsxd ebp,DWORD PTR [rbp+0x70]
  40984f:	add    BYTE PTR [rsi+0x4],cl
  409852:	jbe    0x4098ba
  409854:	jo     0x4098c8
  409856:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40985d:	nop
  40985e:	add    BYTE PTR [rax],al
  409860:	add    BYTE PTR [rax-0x70000000],dl
  409866:	add    BYTE PTR [rax],al
  409868:	ins    BYTE PTR es:[rdi],dx
  409869:	imul   esp,DWORD PTR [rdx+0x67],0x656a626f
  409870:	movsxd esi,DWORD PTR [rbp+rbp*1+0x32]
  409874:	xor    BYTE PTR cs:[rip+0x6c642e30],ch        # 0x6ca4c6ab
  40987b:	ins    BYTE PTR es:[rdi],dx
  40987c:	add    BYTE PTR [rax],al
  40987e:	add    BYTE PTR [rax],al
  409880:	adc    al,0x90
  409882:	add    BYTE PTR [rax],al
  409884:	adc    al,0x90
  409886:	add    BYTE PTR [rax],al
  409888:	adc    al,0x90
  40988a:	add    BYTE PTR [rax],al
  40988c:	adc    al,0x90
  40988e:	add    BYTE PTR [rax],al
  409890:	adc    al,0x90
  409892:	add    BYTE PTR [rax],al
  409894:	ins    BYTE PTR es:[rdi],dx
  409895:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  40989c:	xor    ch,BYTE PTR [rsi]
  40989e:	xor    BYTE PTR [rip+0x6c642e30],ch        # 0x6ca4c6d4
  4098a4:	ins    BYTE PTR es:[rdi],dx
  4098a5:	add    BYTE PTR [rax],al
  4098a7:	add    BYTE PTR [rax],ch
  4098a9:	nop
  4098aa:	add    BYTE PTR [rax],al
  4098ac:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098b2:	add    BYTE PTR [rax],al
  4098b4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098ba:	add    BYTE PTR [rax],al
  4098bc:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098c2:	add    BYTE PTR [rax],al
  4098c4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098ca:	add    BYTE PTR [rax],al
  4098cc:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098d2:	add    BYTE PTR [rax],al
  4098d4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098da:	add    BYTE PTR [rax],al
  4098dc:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098e2:	add    BYTE PTR [rax],al
  4098e4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098ea:	add    BYTE PTR [rax],al
  4098ec:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098f2:	add    BYTE PTR [rax],al
  4098f4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098fa:	add    BYTE PTR [rax],al
  4098fc:	sub    BYTE PTR [rax-0x6fd80000],dl
  409902:	add    BYTE PTR [rax],al
  409904:	rex.WXB
  409905:	rex.RB push r10
  409907:	rex.WRX
  409908:	rex.RB
  409909:	xor    r14,QWORD PTR [rdx]
  40990c:	cs fs ins BYTE PTR es:[rdi],dx
  40990f:	ins    BYTE PTR es:[rdi],dx
  409910:	add    BYTE PTR [rax],al
  409912:	add    BYTE PTR [rax],al
  409914:	cmp    al,0x90
  409916:	add    BYTE PTR [rax],al
  409918:	cmp    al,0x90
  40991a:	add    BYTE PTR [rax],al
  40991c:	cmp    al,0x90
  40991e:	add    BYTE PTR [rax],al
  409920:	cmp    al,0x90
  409922:	add    BYTE PTR [rax],al
  409924:	cmp    al,0x90
  409926:	add    BYTE PTR [rax],al
  409928:	cmp    al,0x90
  40992a:	add    BYTE PTR [rax],al
  40992c:	cmp    al,0x90
  40992e:	add    BYTE PTR [rax],al
  409930:	cmp    al,0x90
  409932:	add    BYTE PTR [rax],al
  409934:	cmp    al,0x90
  409936:	add    BYTE PTR [rax],al
  409938:	cmp    al,0x90
  40993a:	add    BYTE PTR [rax],al
  40993c:	cmp    al,0x90
  40993e:	add    BYTE PTR [rax],al
  409940:	cmp    al,0x90
  409942:	add    BYTE PTR [rax],al
  409944:	cmp    al,0x90
  409946:	add    BYTE PTR [rax],al
  409948:	cmp    al,0x90
  40994a:	add    BYTE PTR [rax],al
  40994c:	cmp    al,0x90
  40994e:	add    BYTE PTR [rax],al
  409950:	cmp    al,0x90
  409952:	add    BYTE PTR [rax],al
  409954:	cmp    al,0x90
  409956:	add    BYTE PTR [rax],al
  409958:	cmp    al,0x90
  40995a:	add    BYTE PTR [rax],al
  40995c:	cmp    al,0x90
  40995e:	add    BYTE PTR [rax],al
  409960:	cmp    al,0x90
  409962:	add    BYTE PTR [rax],al
  409964:	cmp    al,0x90
  409966:	add    BYTE PTR [rax],al
  409968:	cmp    al,0x90
  40996a:	add    BYTE PTR [rax],al
  40996c:	cmp    al,0x90
  40996e:	add    BYTE PTR [rax],al
  409970:	cmp    al,0x90
  409972:	add    BYTE PTR [rax],al
  409974:	cmp    al,0x90
  409976:	add    BYTE PTR [rax],al
  409978:	cmp    al,0x90
  40997a:	add    BYTE PTR [rax],al
  40997c:	cmp    al,0x90
  40997e:	add    BYTE PTR [rax],al
  409980:	cmp    al,0x90
  409982:	add    BYTE PTR [rax],al
  409984:	cmp    al,0x90
  409986:	add    BYTE PTR [rax],al
  409988:	cmp    al,0x90
  40998a:	add    BYTE PTR [rax],al
  40998c:	cmp    al,0x90
  40998e:	add    BYTE PTR [rax],al
  409990:	ins    DWORD PTR es:[rdi],dx
  409991:	jae    0x409a09
  409993:	movsxd esi,DWORD PTR [rdx+0x74]
  409996:	cs fs ins BYTE PTR es:[rdi],dx
  409999:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax+0x19],ah
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x401b],dl
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax+0x1b],ah
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
